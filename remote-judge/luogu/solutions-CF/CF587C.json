[
    {
        "content": "#### \u9898\u76ee\n\u6709n\u4e2a\u57ce\u5e02\uff0c\u7531n-1\u6761\u8fb9\u8fde\u63a5\u3002\u4e24\u4e2a\u57ce\u5e02\u4e4b\u95f4\u7684\u9053\u8def\u662f\u552f\u4e00\u7684\u3002 \n\u6709m\u4e2a\u4eba\uff0c\u4f4f\u5728\u8fd9n\u4e2a\u57ce\u5e02\u4e2d\uff0c\u73b0\u5728\u7ed9\u51fam\u4e2a\u4eba\uff0c\u751f\u6d3b\u7684\u57ce\u5e02\u7f16\u53f7\u3002 \n\u4f60\u9700\u8981\u56de\u7b54\uff0c\u4ece\u4e00\u4e2a\u57ce\u5e02u\u5230\u53e6\u4e00\u4e2a\u57ce\u5e02v\u7684\u8def\u5f84\u4e2d\uff0c\u7f16\u53f7\u524da\u5c0f\u7684\u4eba\u7684\u7f16\u53f7\u662f\u54ea\u4e9b\uff1f\n\n#### \u601d\u8def1\uff08\u6811\u4e0a\u500d\u589e\uff09\n\u6811\u4e0a\u500d\u589e\uff0c\u53ef\u4ee5\u5f00\u4e00\u4e2a$num[i][j]$,\u8868\u793ai\u8fd9\u4e2a\u70b9\u5411\u524d\u8df3$2^j-1$\u683c\u540e\u5230\u8fbe\u7684\u70b9\uff0c\u8fd9\u6837\uff0c\u5bf9\u4e8e\u4e24\u4e2a\u70b9\u800c\u8a00\uff0c\u5c31\u53ef\u4ee5\u5411\u4e0a\u8df3\u8dc3\uff0c\u76f4\u5230\u4ea4\u6c47\u4e3a\u6b62\uff0c\u7b54\u6848\u5219\u662f\u5f52\u5e76\u540e\u7684ans\u6570\u7ec4\u3002\n\n\u6b64\u9898\u7684\u5207\u5165\u70b9\u4e3b\u8981\u5728$a<=10$\u8fd9\u4e2a\u6761\u4ef6\uff0c\u8fd9\u6837\u4f7f\u6211\u4eec\u6bcf\u4e2avector\u53ea\u8981\u4fdd\u5b58\u6700\u591a10\u4e2a\u5143\u7d20\u5c31\u597d\u4e86\u3002\n\n\u500d\u589e\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u662f\u6811\u4e0a\u95ee\u9898\u6c42\u89e3\u7684\u5e38\u7528\u9014\u5f84\uff0c\u9047\u5230\u6811\u7684\u95ee\u9898\u8981\u4f18\u5148\u8003\u8651\u3002\n\n#### \u4ee3\u7801\n```c++\n#include<bits/stdc++.h>\n#define M 100005\nusing namespace std;\nint n,m,q,fa[M][20],dep[M],top[M],sz[M],son[M];\nvector<int>G[M];\nvector<int>cty[M];\nvector<int>num[M][20];//\u500d\u589e\u4fdd\u5b58\u57ce\u5e02\u5f80\u4e0a\u722c \nvector<int>ans;\nvector<int> up(vector<int>&b,vector<int>&c){\n\tint i=0,j=0;\n\tvector<int>a;\n\ta.clear();\n\twhile(i<b.size()&&j<c.size()&&a.size()<10){\n\t\tif(b[i]<c[j])a.push_back(b[i++]);\n\t\telse a.push_back(c[j++]);\n\t}\n\twhile(i<b.size()&&a.size()<10)a.push_back(b[i++]);\n\twhile(j<c.size()&&a.size()<10)a.push_back(c[j++]);\n\treturn a;\n}\nvoid dfs(int x,int f,int d){\n\tdep[x]=d;\n\tfa[x][0]=f;fa[x][1]=fa[f][0];\n\tnum[x][0]=cty[x];num[x][1]=up(cty[x],cty[f]);\n\tfor(int i=0;i<G[x].size();i++){\n\t\tint u=G[x][i];\n\t\tif(u==f)continue;\n\t\tdfs(u,x,d+1);\n\t}\n} \nint main(){\n\tscanf(\"%d%d%d\",&n,&m,&q);\n\tfor(int i=1,a,b;i<n;i++){\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tG[a].push_back(b);\n\t\tG[b].push_back(a);\t\n\t}\n\tfor(int i=1,a;i<=m;i++){\n\t\tscanf(\"%d\",&a);\n\t\tcty[a].push_back(i);//\u5df2\u7ecf\u81ea\u52a8\u6709\u5e8f \n\t} \n\tdfs(1,0,1);\n\tfor(int j=2;j<=19;j++)\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tfa[i][j]=fa[fa[i][j-1]][j-1]; \n\t\t\tnum[i][j]=up(num[i][j-1],num[fa[i][j-1]][j-1]);\n\t\t}\n\tfor(int i=1,u,v,a;i<=q;i++){\n\t\tscanf(\"%d%d%d\",&u,&v,&a);\n\t\tans.clear();\n\t\tif(dep[u]>dep[v])swap(u,v);\n\t\tint step=dep[v]-dep[u];\n\t\tfor(int i=19;i>=0;i--)\n\t\t\tif(step&1<<i)ans=up(ans,num[v][i]),v=fa[v][i];\n\t\tif(u==v){\n\t\t\tans=up(ans,num[v][0]);\n\t\t\tgoto e;\n\t\t}\n\t\tfor(int i=19;i>=0;i--){\n\t\t\tif(fa[u][i]!=fa[v][i]){\n\t\t\t\tans=up(num[u][i],ans);\n\t\t\t\tans=up(num[v][i],ans);\n\t\t\t\tu=fa[u][i];\n\t\t\t\tv=fa[v][i];\n\t\t\t}\n\t\t}\n\t\tans=up(ans,num[u][0]);\n\t\tif(u!=v)ans=up(ans,num[v][1]);\n\t\te:;\n\t\tint len=ans.size();\n\t\tlen=min(len,a);\n\t\tprintf(\"%d\",len);\n\t\tfor(int i=0;i<len;i++)\n\t\t\tprintf(\" %d\",ans[i]);\n\t\tputs(\"\");\n\t}\n\treturn 0;\n} \n```\n\n#### \u601d\u8def2\uff08\u6811\u94fe\u5256\u5206\uff09\n\u4ece\u6811\u5256\u7684\u89d2\u5ea6\u770b\uff0c\u8fd9\u5c31\u662f\u4e00\u9053\u88f8\u9898\u3002\n\n\u6211\u4eec\u6309\u8f7b\u91cd\u94fe\u7834\u6811\u6210\u94fe\uff0c\u5229\u7528\u5f52\u5e76\u6811\uff0c\u8bb0\u5f55l,r\u533a\u95f4\u5185\u7684\u524d10\u4e2a\u5143\u7d20\uff0c\u6700\u540e\u67e5\u627e\u4e00\u4e0b\u5c31\u597d\u4e86\uff0c\u5bf9\u4e8e\u6811\u94fe\u5256\u5206\u4e0d\u662f\u5f88\u719f\u6089\u7684\u540c\u5b66\uff0c\u53ef\u4ee5\u770b\u4e00\u4e0b\u6d1b\u8c37\u65e5\u62a5\u7684[\u4e00\u7bc7\u6587\u7ae0](https://www.luogu.org/blog/communist/shu-lian-pou-fen-yang-xie)\n\n\u8fd8\u8981\u6ce8\u610f\u7684\u662f\u8fd9\u9898\u8ff7\u4e4b\u5361vector\uff0cczj\u5927\u4f6c\u8003\u573a\u4e0a\u5c31\u662f\u56e0\u4e3a\u8fd9\u4e2a\u6ca1\u80fdAK\uff0c\uff08tql\uff09\uff0c\u6240\u4ee5\u5c01\u88c5\u4e86\u4e00\u4e0b\u3002\n\n```c++\n#include<bits/stdc++.h>\n#define M 100005\n#define faa tree[p]\n#define lsn tree[p<<1]\n#define rsn tree[p<<1|1]\nusing namespace std;\nstruct arr{\n\tint Q[10],len;\n\tint size(){\n\t\treturn len;\n\t}\n\tvoid push_back(int x){\n\t\tQ[len++]=x;\n\t}\n\tvoid clear(){\n\t\tfor(int i=0;i<10;i++)\n\t\t\tQ[i]=0;\n\t\tlen=0;\n\t}\n};\nint n,m,q;\n//\u6811\u94fe\u5256\u5206 \nvector<int>G[M];\nvector<int>cty[M];\nint son[M],sz[M],dep[M],ID[M],fa[M],ln[M],tt=0,top[M];\narr ans;\nvoid dfs(int x,int f,int d){\n\tdep[x]=d;fa[x]=f;sz[x]=1;son[x]=0;\n\tfor(int i=0;i<G[x].size();i++){\n\t\tint u=G[x][i];\n\t\tif(u==f)continue;\n\t\tdfs(u,x,d+1); \n\t\tif(sz[u]>sz[son[x]])son[x]=u;\n\t\tsz[x]+=sz[u];\n\t}\n}\nvoid dfs_top(int x,int tp){\n\ttop[x]=tp;ID[x]=++tt;ln[tt]=x;\n\tif(son[x])dfs_top(son[x],tp);\n\tfor(int i=0;i<G[x].size();i++){\n\t\tint u=G[x][i];\n\t\tif(u==son[x]||u==fa[x])continue;\n\t\tdfs_top(u,u);\n\t}\n}\nstruct node{\n\tint l,r;\n\tarr num;\n}tree[M<<2];\narr up(arr &B,arr &C){\n\tarr A;\n\tA.clear();\n\tint i=0,j=0;\n\twhile(i<B.size()&&j<C.size()&&A.size()<10){\n\t\tif(B.Q[i]<C.Q[j])A.push_back(B.Q[i++]);\n\t\telse A.push_back(C.Q[j++]);\n\t}\n\twhile(i<B.size()&&A.size()<10)A.push_back(B.Q[i++]);\n\twhile(j<C.size()&&A.size()<10)A.push_back(C.Q[j++]);\n\treturn A;\n}\nvoid build(int l,int r,int p){\n\ttree[p].l=l;tree[p].r=r;tree[p].num.clear();\n\tif(l==r){\n\t\tfor(int i=0;i<cty[ln[l]].size();i++){\n\t\t\ttree[p].num.push_back(cty[ln[l]][i]);\n\t\t\tif(tree[p].num.size()==10)break;\n\t\t}\n\t}\n\telse {\n\t\tint mid=l+r>>1;\n\t\tbuild(l,mid,p<<1);\n\t\tbuild(mid+1,r,p<<1|1);\n\t\ttree[p].num=up(tree[p<<1].num,tree[p<<1|1].num);\n\t}\n}\nvoid query(int l,int r,int p){\n\tif(tree[p].l==l&&tree[p].r==r){\n\t\tans=up(ans,tree[p].num);\n\t}\n\telse {\n\t\tint mid=tree[p].l+tree[p].r>>1;\n\t\tif(r<=mid)query(l,r,p<<1);\n\t\telse if(l>mid)query(l,r,p<<1|1);\n\t\telse{\n\t\t\tquery(l,mid,p<<1);\n\t\t\tquery(mid+1,r,p<<1|1);\n\t\t}\n\t}\n}\nint main(){\n\tscanf(\"%d%d%d\",&n,&m,&q);\n\tfor(int i=1,a,b;i<n;i++){\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tG[a].push_back(b);\n\t\tG[b].push_back(a);\n\t}\n\tfor(int i=1,a;i<=m;i++){\n\t\tscanf(\"%d\",&a);\n\t\tcty[a].push_back(i);\n\t}\n\tdfs(1,0,1);\n\tdfs_top(1,1);\n\tbuild(1,n,1);\n\tfor(int i=1,u,v,c;i<=q;i++){\n\t\tscanf(\"%d%d%d\",&u,&v,&c);\n\t\tans.clear();\n\t\twhile(top[u]!=top[v]){\n\t\t\tif(dep[top[u]]>dep[top[v]]){\n\t\t\t\tquery(ID[top[u]],ID[u],1);\n\t\t\t\tu=fa[top[u]];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tquery(ID[top[v]],ID[v],1);\n\t\t\t\tv=fa[top[v]];\n\t\t\t}\n\t\t} \n\t\tif(dep[u]>dep[v])query(ID[v],ID[u],1);\n\t\telse query(ID[u],ID[v],1);\n\t\tint len=ans.size();\n\t\tlen=min(len,c);\n\t\tprintf(\"%d\",len);\n\t\tfor(int i=0;i<len;i++)\n\t\t\tprintf(\" %d\",ans.Q[i]);\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1533299573,
        "uid": 46787,
        "name": "zeroy0410",
        "ccfLevel": 0,
        "title": "CF587C Duff in the Army(\u6811\u4e0a\u500d\u589e|\u6811\u94fe\u5256\u5206)"
    },
    {
        "content": "**\u601d\u8def\uff1a**\n\n\u770b\u5230\u67e5\u8be2\u7684\u662f\u6811\u4e0a\u7684\u4e24\u70b9\u4e4b\u95f4\u8def\u5f84\u7684\u4e0a\u524d $k$ \u5c0f\u7684\u503c\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u7528\u6811\u94fe\u5256\u5206\u3002~~\uff08\u611f\u89c9\u8fd9\u4e2a\u9898\u8fd8\u80fd\u518d\u5f3a\u5316\u4e00\u70b9\uff0c\u52a0\u4e2a\u6c42\u5b50\u6811\u7684\u3002\uff09~~\n\n\u65e2\u7136\u8981\u7528\u6811\u94fe\u5256\u5206\u7684\u8bdd\uff0c\u5c31\u5f97\u6765\u4e2a\u7ebf\u6bb5\u6811\uff0c\u90a3\u6211\u4eec\u5c31\u8981\u60f3\u60f3\u5982\u4f55\u5bf9\u7ebf\u6bb5\u6811\u8fdb\u884c\u7ef4\u62a4\u3002\n\n\u770b\u5230\u9898\u76ee\u7684\u8303\u56f4 $1 \\leqslant a \\leqslant 10$ \uff0c\u4e5f\u5c31\u662f\u8bf4\u9876\u591a\u67e5\u524d $10$ \u5c0f\u7684\u503c\u3002\n\n\u90a3\u6211\u4eec\u5728\u7ef4\u62a4\u7ebf\u6bb5\u6811\u65f6\uff0c\u6bcf\u6b21\u53ea\u9700\u8981\u7ef4\u62a4\u524d $10$ \u5c0f\u5c31\u884c\u4e86\u3002\n\n\u6ca1\u6709\u4fee\u6539\u6240\u4ee5\u4e0d\u7528\u8003\u8651 pushdown \u53ea\u9700\u8981\u5728\u5efa\u7ebf\u6bb5\u6811\u65f6 pushup \u5c31\u884c\u4e86\u3002\n\n\u90a3\u4e48 pushup \u65f6\u6211\u4eec\u628a\u5de6\u53f3\u513f\u5b50\u5206\u522b\u7684\u524d $10$ \u5c0f\u7684\u503c\u90fd\u8bb0\u5f55\u4e0b\u6765\uff0c\u7136\u540e\u518d\u5bf9\u8fd9\u4e9b\u6570\u8fdb\u884c\u6392\u5e8f\u3002\n\n\u518d\u6765\u8003\u8651\u67e5\u8be2\uff0c\u67e5\u8be2\u65f6\u4e5f\u662f\u4e00\u6837\uff0c\u628a\u67e5\u8be2\u533a\u95f4\u524d $10$ \u5c0f\u7684\u503c\u8bb0\u5f55\u4e0b\u6765\uff0c\u518d\u8fdb\u884c\u6392\u5e8f\u3002\n\n\u90a3\u4e48\u8fd9\u6837\u6211\u4eec\u7684\u8fd4\u56de\u503c\u5c31\u9700\u8981\u662f\u4e00\u4e2a\u5e8f\u5217\u4e86\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u7ed3\u6784\u4f53\u8fdb\u884c\u8fd4\u56de\u3002\n\n**\u6ce8\u610f\uff1a**\n\n\u6bcf\u4e2a\u57ce\u5e02\u53ef\u80fd\u4f1a\u4f4f\u5f88\u591a\u4eba\uff0c\u53ef\u80fd\u4f1a\u8d85\u8fc7 $10$ \u4e2a\u6240\u4ee5\u8981\u7528 vector \u8fdb\u884c\u5b58\u50a8\uff0c\u53c8\u56e0\u4e3a\u8303\u56f4\u7684\u9650\u5236\uff0c\u6240\u4ee5\u5728\u5efa\u6811\u65f6\u53ef\u4ee5\u5c06\u5176\u6392\u5e8f\u540e\u7528\u7ed3\u6784\u4f53\u8f6c\u5b58\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c0f\u5e38\u6570\u3002\n\n\u8d34\u4e2a\u4ee3\u7801\u3002\n\n```cpp\n\n#include<bits/stdc++.h>\n#define lson rt<<1\n#define rson rt<<1|1\nusing namespace std;\ninline int read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-') f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}\n\treturn x*f;\n}\ninline void write(int x){\n\tstatic int sta[35];int top=0;\n\tif(x<0) putchar('-'),x=-x;\n\tdo{sta[++top]=x%10,x/=10;}while(x);\n\twhile(top) putchar(sta[top--]+'0');\n\treturn putchar(' '),void();\n}\ninline void chkmax(int &x,int y){return x=(x>y)?x:y,void();}\ninline void chkmin(int &x,int y){return x=(x<y)?x:y,void();}\nint n,m,q,cnt;\nint id[100010];\nint head[100010],ver[200010],to[200010],tot;\nint fa[100010],son[100010],siz[100010],dep[100010],top[100010];\nstruct JY{//\u5b9a\u4e49\u7ed3\u6784\u4f53\n\tint a[21],siz;\n\tinline void init(){siz=0;}//\u521d\u59cb\u5316\uff0c\u5728\u67e5\u8be2\u7684\u65f6\u5019\u9700\u8981\u5bf9\u8fd4\u56de\u6570\u7ec4\u8fdb\u884c\u521d\u59cb\u5316\u5426\u5219\u4f1a           RE\n\tinline void push_back(int x){a[++siz]=x;}//\u63d2\u5165\u503c\n\tinline bool empty(){return (siz==0);}//\u5224\u65ad\u662f\u5426\u4e3a\u7a7a\n\tinline void so(){sort(a+1,a+1+siz);}//\u6392\u5e8f\n\tinline void print(){for(int i=1;i<=siz;i++) printf(\"%d \",a[i]);printf(\"\\n\");}//\u8c03\u8bd5\u7528\u7684\n};\nJY qu;\nvector<int> a[100010],b[100010];//\u5b58\u50a8\u57ce\u5e02\u4fe1\u606f\nstruct SegmentTree{//\u7ebf\u6bb5\u6811\n\tJY a;\n\tinline void qs(){a.so();}\n}st[100010*4];\ninline void add(int x,int y){\n\tver[++tot]=y;\n\tto[tot]=head[x];\n\thead[x]=tot;\n}\nvoid dfs1(int x,int fath,int depth){//\u6811\u5256\u4e24\u4ef6\u5957\n\tint maxson=-1;\n\tfa[x]=fath;dep[x]=depth;siz[x]=1;\n\tfor(int i=head[x];i;i=to[i]){\n\t\tint y=ver[i];\n\t\tif(y==fath) continue;\n\t\tdfs1(y,x,depth+1);\n\t\tsiz[x]+=siz[y];\n\t\tif(siz[y]>maxson) son[x]=y,maxson=siz[y];\n\t}\n}\nvoid dfs2(int x,int topf){//\u6811\u5256\u4e24\u4ef6\u5957\n\tid[x]=++cnt;\n\tb[cnt]=a[x];\n\ttop[x]=topf;\n\tif(!son[x]) return;\n\tdfs2(son[x],topf);\n\tfor(int i=head[x];i;i=to[i]){\n\t\tint y=ver[i];\n\t\tif(y==fa[x]||y==son[x]) continue;\n\t\tdfs2(y,y);\n\t}\n}\ninline void pushup(int rt){\n\tfor(int i=1;i<=st[lson].a.siz;i++) st[rt].a.push_back(st[lson].a.a[i]);\n\tfor(int i=1;i<=st[rson].a.siz;i++) st[rt].a.push_back(st[rson].a.a[i]);\n\tst[rt].qs();st[rt].a.siz=min(st[rt].a.siz,10);//\u4e3a\u4e86\u51cf\u5c0f\u5e38\u6570\uff0c\u6240\u4ee5\u53d6\u4e00\u4e0b min\n}\nvoid build(int rt,int l,int r){//\u5efa\u6811\n\tif(l==r){\n\t\tint cnt=1;\n\t\tsort(b[l].begin(),b[l].end());//\u9876\u591a\u67e5 10 \u4e2a\u503c\uff0c\u6240\u4ee5\u540e\u9762\u7684\u53ef\u4ee5\u76f4\u63a5\u820d\u5f03\n\t\tfor(vector<int>::iterator iter=b[l].begin();iter!=b[l].end()&&cnt<=10;cnt++,iter++) st[rt].a.push_back(*iter);\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(lson,l,mid);\n\tbuild(rson,mid+1,r);\n\tpushup(rt);\n}\nJY query(int rt,int l,int r,int L,int R,int k){//\u666e\u901a\u7684\u67e5\u8be2\n\tif(L<=l&&r<=R){\n\t\treturn st[rt].a;\n\t}\n\tint mid=(l+r)>>1;\n\tJY res,temp;res.init();\n\tif(L<=mid){\n\t\ttemp=query(lson,l,mid,L,R,k);\n\t\tfor(int i=1;i<=temp.siz;i++) res.push_back(temp.a[i]);\n\t}\n\tif(R>mid){\n\t\ttemp=query(rson,mid+1,r,L,R,k);\n\t\tfor(int i=1;i<=temp.siz;i++) res.push_back(temp.a[i]);\n\t}\n\tres.so();res.siz=min(res.siz,k);//\u540c pushup\n\treturn res;\n}\nJY qRange(int x,int y,int k){//\u6811\u4e0a\u67e5\u503c\n\tJY ans,temp;ans.init();\n\twhile(top[x]!=top[y]){\n\t\tif(dep[top[x]]<dep[top[y]]) swap(x,y);\n\t\ttemp=query(1,1,n,id[top[x]],id[x],k);\n\t\tx=fa[top[x]];\n\t\tfor(int i=1;i<=temp.siz;i++) ans.push_back(temp.a[i]);\n\t\tans.so();ans.siz=min(ans.siz,k);\n\t}\n\tif(dep[x]>dep[y]) swap(x,y);\n\ttemp=query(1,1,n,id[x],id[y],k);\n\tfor(int i=1;i<=temp.siz;i++) ans.push_back(temp.a[i]);\n\tans.so();ans.siz=min(ans.siz,k);\n\treturn ans;\n}\nsigned main(){\n\tn=read(),m=read(),q=read();\n\tfor(int i=1,x,y;i<n;i++){\n\t\tx=read(),y=read();\n\t\tadd(x,y);add(y,x);\n\t}\n\tfor(int i=1;i<=m;i++) a[read()].push_back(i);\n\tdfs1(1,0,1);dfs2(1,1);\n\tbuild(1,1,n);\n\tfor(int i=1,x,y,k;i<=q;i++){\n\t\tx=read(),y=read(),k=read();\n\t\tqu=qRange(x,y,k);\n\t\twrite(qu.siz);\n\t\tfor(int i=1;i<=qu.siz;i++) write(qu.a[i]);\n\t\tputchar('\\n');\n\t}\n\treturn 0;//\u62dc\u62dc~~~\n}\n\n```",
        "postTime": 1625750734,
        "uid": 113507,
        "name": "Max_QAQ",
        "ccfLevel": 8,
        "title": "CF587C Duff in the Army"
    },
    {
        "content": "> \u6c42\u6811\u4e0a\u4e24\u70b9\u95f4\u8def\u5f84\u7684\u524d $k$ \u5c0f\u503c\u3002\n\n\u8003\u8651\u6811\u94fe\u5256\u5206\uff0c\u90a3\u4e48\u91cd\u70b9\u5728\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4ec0\u4e48\u3002\n\n\u770b\u8fd9\u4e2a $k\\leq 10$\uff0c\u6240\u4ee5\u53ef\u4ee5\u5f00\u4e00\u4e2a vector  \u66b4\u529b\u8bb0\u5f55\u524d $10$ \u5c0f\u5373\u53ef\u3002\n\n\u5199 pushup \u65f6\u5c06\u5de6\u513f\u5b50\u548c\u53f3\u513f\u5b50 vector \u91cc\u7684\u503c\u90fd\u8bb0\u5f55\u4e0b\u6765\uff0c\u6392\u5e8f\u4e00\u4e0b\u53d6\u524d $10$ \u5c0f\u5373\u53ef\u3002\n\n\u67e5\u8be2\u540c\u7406\uff0c\u8bb0\u5f97\u6bcf\u8df3\u94fe\u65f6\u90fd\u8981\u6392\u5e8f $+$ \u53d6\u524d $10$ \u5c0f\uff0c\u5426\u5219\u4f1a\u56e0\u4e3a\u6570\u7ec4\u8d8a\u754c\u800c RE\u3002\n\n$\\text{Code:}$\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define ull unsigned long long\n#define rint register int\nusing namespace std;\nnamespace IO{\n\t#define File(x,y) freopen(#x,\"r\",stdin),freopen(#y,\"w\",stdout)\n\tinline int read(){\n\t\tint w=0,f=1; char ch=getchar();\n\t\twhile(ch<'0'||ch>'9'){if(ch=='-') f=-1; ch=getchar();}\n\t\twhile(ch>='0'&&ch<='9'){w=(w<<3)+(w<<1)+(ch^48); ch=getchar();}\n\t\treturn w*f;\n\t}\n\tinline void write(int x){\n  \t\tstatic int sta[35]; int top=0;\n  \t\tif(x<0) putchar('-'),x=-x;\n  \t\tdo{sta[++top]=x%10,x/=10;}while(x);\n  \t\twhile(top) putchar(sta[top--]+48); puts(\"\");\n\t}\n}\nusing namespace IO;\nnamespace CL{\n\t#define fill(x,y) memset(x,y,sizeof(x))\n\t#define copy(x,y) memcpy(y,x,sizeof(x))\n\t\n\tconst int maxn=1e5+5;\n\t\n\tint n,m,q;\n\tvector<int> a[maxn],b[maxn];\n\tstruct node{\n\t\tint a[25],size;\n\t\tnode(){fill(a,0); size=0;}\n\t\tinline void push_back(int x){a[++size]=x;}\n\t\tinline void Sort(){sort(a+1,a+1+size);}\n\t};\t\n\tnamespace Graph{\n\t\tint head[maxn],id;\n\t\tstruct e{int v,next;}edge[maxn<<1];\n\t\tinline void add(int u,int v){\n\t\t\tedge[++id].v=v;\n\t\t\tedge[id].next=head[u];\n\t\t\thead[u]=id;\n\t\t}\n\t}using namespace Graph;\n\tnamespace SegmentTree{\n\t\t#define lson p<<1\n\t\t#define rson p<<1|1\n\t\tnode t[maxn<<2];\n\t\tinline void pushup(int p){\n\t\t\tfor(int i=1;i<=t[lson].size;i++) t[p].push_back(t[lson].a[i]);\n\t\t\tfor(int i=1;i<=t[rson].size;i++) t[p].push_back(t[rson].a[i]);\n\t\t\tt[p].Sort(); t[p].size=min(t[p].size,10);\n\t\t}\n\t\tvoid build(int p,int l,int r){\n\t\t\tif(l==r){\n\t\t\t\tsort(b[l].begin(),b[l].end());\n\t\t\t\tfor(int i=0,j=1;i<b[l].size() && j<=10;i++,j++) t[p].push_back(b[l][i]);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tint mid=(l+r)>>1;\n\t\t\tbuild(lson,l,mid); build(rson,mid+1,r);\n\t\t\tpushup(p);\n\t\t}\n\t\tnode query(int p,int l,int r,int tl,int tr){\n\t\t\tif(tl<=l && r<=tr) return t[p];\n\t\t\tint mid=(l+r)>>1;\n\t\t\tnode res;\n\t\t\tif(tl<=mid){\n\t\t\t\tnode tmp=query(lson,l,mid,tl,tr);\n\t\t\t\tfor(int i=1;i<=tmp.size;i++) res.push_back(tmp.a[i]);\n\t\t\t}\n\t\t\tif(tr>mid){\n\t\t\t\tnode tmp=query(rson,mid+1,r,tl,tr);\n\t\t\t\tfor(int i=1;i<=tmp.size;i++) res.push_back(tmp.a[i]);\n\t\t\t}\n\t\t\tres.Sort(); res.size=min(res.size,10);\n\t\t\treturn res;\n\t\t}\n\t}using namespace SegmentTree;\n\tnamespace TreeChain{\n\t\tint dep[maxn],size[maxn],f[maxn],son[maxn],top[maxn],dfn[maxn],tim;\n\t\tvoid dfs1(int u,int fa){\n\t\t\tf[u]=fa; size[u]=1;\n\t\t\tdep[u]=dep[fa]+1;\n\t\t\tfor(int i=head[u];i;i=edge[i].next){\n\t\t\t\tint v=edge[i].v;\n\t\t\t\tif(v==fa) continue;\n\t\t\t\tdfs1(v,u);\n\t\t\t\tsize[u]+=size[v];\n\t\t\t\tif(size[v]>size[son[u]]) son[u]=v;\n\t\t\t}\n\t\t}\n\t\tvoid dfs2(int u,int topf){\n\t\t\ttop[u]=topf;\n\t\t\tdfn[u]=++tim; b[tim]=a[u];\n\t\t\tif(!son[u]) return;\n\t\t\tdfs2(son[u],topf);\n\t\t\tfor(int i=head[u];i;i=edge[i].next){\n\t\t\t\tint v=edge[i].v;\n\t\t\t\tif(v==f[u] || v==son[u]) continue;\n\t\t\t\tdfs2(v,v);\n\t\t\t}\n\t\t}\n\t\tnode qrange(int x,int y){\n\t\t\tnode res;\n\t\t\twhile(top[x]!=top[y]){\n\t\t\t\tif(dep[top[x]]<dep[top[y]]) swap(x,y);\n\t\t\t\tnode tmp=query(1,1,n,dfn[top[x]],dfn[x]);\n\t\t\t\tfor(int i=1;i<=tmp.size;i++) res.push_back(tmp.a[i]);\n\t\t\t\tres.Sort(); res.size=min(res.size,10);\n\t\t\t\tx=f[top[x]];\n\t\t\t}\n\t\t\tif(dep[x]>dep[y]) swap(x,y);\n\t\t\tnode tmp=query(1,1,n,dfn[x],dfn[y]);\n\t\t\tfor(int i=1;i<=tmp.size;i++) res.push_back(tmp.a[i]);\n\t\t\tres.Sort(); res.size=min(res.size,10);\n\t\t\treturn res;\n\t\t}\n\t}using namespace TreeChain;\n\t\n\tinline int main(){\n\t\tn=read(); m=read(); q=read();\n\t\tfor(int i=1;i<n;i++){\n\t\t\tint x=read(),y=read();\n\t\t\tadd(x,y); add(y,x);\n\t\t}\n\t\tfor(int i=1;i<=m;i++) a[read()].push_back(i);\n\t\tdfs1(1,0); dfs2(1,1); build(1,1,n);\n\t\twhile(q--){\n\t\t\tint u=read(),v=read(),x=read();\n\t\t\tnode res=qrange(u,v);\n\t\t\tprintf(\"%d \",min(res.size,x));\n\t\t\tfor(int i=1;i<=min(res.size,x);i++) printf(\"%d \",res.a[i]);\n\t\t\tputs(\"\");\n\t\t}\n\t\treturn 0;\n\t}\n}\nsigned main(){return CL::main();}\n```",
        "postTime": 1627202833,
        "uid": 226113,
        "name": "\u706b\u7fbd\u767d\u65e5\u751f",
        "ccfLevel": 0,
        "title": "\u300c\u9898\u89e3\u300dCF587C Duff in the Army"
    },
    {
        "content": "\u666e\u53ca\u4e00\u4e0b\u9759\u6001\u6811\u94fe\u95ee\u9898\u7684\u6b63\u786e\u6811\u5256\u505a\u6cd5?\n\n\u5f88\u591a\u521d\u5b66\u6811\u5256\u7684\u4eba\u4e0d\u7ba1\u95ee\u9898\u662f\u9759\u6001\u8fd8\u662f\u52a8\u6001\u90fd\u4f1a\u5f80\u4e0a\u5957\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u8fd9\u5c31\u4f7f\u5f97\u590d\u6742\u5ea6\u53d8\u6210\u4e24\u4e2a$\\log$.\u7136\u800c\u4e8b\u5b9e\u4e0a\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u5230\u5176\u94fe\u9876\u8fd9\u6761\u94fe\u4e0a\u7684\u4fe1\u606f\uff0c\u8fd9\u6837\u524d\u9762\u7684\u8df3\u94fe\u5c31\u53d8\u6210\u4e00\u4e2a$\\log$\uff0c\u53ea\u9700\u8981\u5728\u6700\u540e\u4e00\u6bb5\u4e0d\u5b8c\u6574\u7684\u94fe\u4e0a\u7528\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\uff0c\u8fd9\u90e8\u5206\u4e5f\u662f\u4e00\u4e2a$\\log$.\n\n\u5f53\u7136\u5e94\u8be5\u8fd8\u662f\u6ca1\u6709\u5199\u5f97\u597d\u4e00\u70b9\u7684\u4e3b\u5e2d\u6811\u8dd1\u5f97\u5feb.$rk1$\u7684\u4e3b\u5e2d\u6811\u8dd1\u5f97\u98de\u5feb\uff0c\u539f\u7406\u4e0d\u660eemmm\u53ef\u80fd\u662f\u5c01\u88c5\u7684\u95ee\u9898\u5427\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int N=5e5;\nstruct Node\n{\n    int w[12],s;\n    Node operator +(const Node &a)const\n    {\n        Node t;t.s=min(s+a.s,10);\n        for(int k=1,i=1,j=1;k<=t.s;k++)\n            t.w[k]=(j>a.s||(i<=s&&w[i]<a.w[j]))?w[i++]:a.w[j++];\n        return t;\n    }\n};\nint dfs_cnt,id[N],tmp[12],n,m,q,mm,to[N],dep[N],ts[N],tw[N][12],a[N][12],s[N],fst[N],nxt[N],son[N],size[N],f[N],tp[N];\nstruct Segmenttree\n{\n    Node a[N];\n    void build(int rot,int lt,int rt)\n    {\n        if(lt==rt)\n        {\n            a[rot].s=ts[lt];\n            for(int i=1;i<=ts[lt];i++)a[rot].w[i]=tw[lt][i];\n            return;\n        }\n        int mid=(lt+rt)>>1;\n        build(rot<<1,lt,mid),build(rot<<1|1,mid+1,rt);\n        a[rot]=a[rot<<1]+a[rot<<1|1];\n    }\n    Node query(int rot,int lt,int rt,int lq,int rq)\n    {\n        if(lt>=lq&&rt<=rq)return a[rot];\n        int mid=(lt+rt)>>1;\n        if(rq<=mid)return query(rot<<1,lt,mid,lq,rq);\n        else if(lq>mid)return query(rot<<1|1,mid+1,rt,lq,rq);\n        else return query(rot<<1,lt,mid,lq,mid)+query(rot<<1|1,mid+1,rt,mid+1,rq);\n    }\n}seg;\nvoid ade(int u,int v){to[++mm]=v,nxt[mm]=fst[u],fst[u]=mm;}\nvoid dfs1(int u,int fa)\n{\n    size[u]=1,f[u]=fa,dep[u]=dep[fa]+1;int mx=0;\n    for(int i=fst[u];i;i=nxt[i])\n    {\n        int v=to[i];if(v==fa)continue;\n        dfs1(v,u),size[u]+=size[v];if(size[v]>mx)mx=size[v],son[u]=v;\n    }\n}\nvoid merge(int a[],int b[],int su,int &sv,int lim)\n{\n    int cnt=sv+su;if(cnt>lim)cnt=lim;\n    for(int k=1,i=1,j=1;k<=cnt;k++)\n        tmp[k]=((a[i]<b[j]&&i<=su)||j>sv)?a[i++]:b[j++];\n    sv=cnt;for(int i=1;i<=cnt;i++)b[i]=tmp[i];\n}\nvoid dfs2(int u,int top)\n{\n    tp[u]=top;id[u]=++dfs_cnt;\n    ts[dfs_cnt]=s[u];for(int i=1;i<=s[u];i++)tw[dfs_cnt][i]=a[u][i];\n    if(u!=top)merge(a[f[u]],a[u],s[f[u]],s[u],10);//\u5e76\u4e0a\u5b83\u7236\u4eb2\u7684\u4fe1\u606f\n    if(son[u])dfs2(son[u],top);\n    for(int i=fst[u];i;i=nxt[i])\n    {\n        int v=to[i];if(v==f[u]||v==son[u])continue;\n        dfs2(v,v);\n    }\n}\nvoid query(int u,int v,int k)\n{\n    int ans[12],anss=0;\n    while(tp[u]!=tp[v])\n    {\n        if(dep[tp[u]]<dep[tp[v]])swap(u,v);\n        merge(a[u],ans,s[u],anss,k);\n        u=f[tp[u]];\n    }\n    if(dep[u]<dep[v])swap(u,v);\n    Node t=seg.query(1,1,n,id[v],id[u]);\n    merge(t.w,ans,t.s,anss,k);\n    printf(\"%d \",anss);\n    for(int i=1;i<=anss;i++)printf(\"%d \",ans[i]);puts(\"\");\n}\nint main()\n{\n    scanf(\"%d%d%d\",&n,&m,&q);\n    for(int i=1,u,v;i<n;i++)scanf(\"%d%d\",&u,&v),ade(u,v),ade(v,u);\n    for(int i=1,x;i<=m;i++)\n    {\n        scanf(\"%d\",&x);\n        if(s[x]<=10)a[x][++s[x]]=i;\n    }\n    dfs1(1,0),dfs2(1,1);seg.build(1,1,n);\n    for(int i=1;i<=q;i++)\n    {\n        int u,v,k;\n        scanf(\"%d%d%d\",&u,&v,&k);\n        query(u,v,k);\n    }\n}\n",
        "postTime": 1570863551,
        "uid": 22136,
        "name": "qwaszx",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF587C \u3010Duff in the Army\u3011"
    },
    {
        "content": "\u672c\u9898\u89e3\u4f7f\u7528\u6811\u5256+\u7ebf\u6bb5\u6811\u3002\n\n\u4e0b\u9762\u8bf4\u7684\u201c\u6570\u5b57\u201d\u6307\u7684\u662f\u9898\u76ee\u91cc\u4eba\u7684\u8eab\u4efd\u53f7\u3002\n\n\u7ebf\u6bb5\u6811\u6bcf\u4e2a\u8282\u70b9\u81ea\u7136\u662f\u7ef4\u62a4\u533a\u95f4\u5185\u524d $10$ \u5c0f\u7684\u6570\u5b57\uff0c\u5982\u679c\u603b\u5171\u4e0d\u5230 $10$ \u4e2a\u6570\u5b57\u90a3\u5c31\u5168\u90e8\u7ef4\u62a4\u8fdb\u6765\u3002\u65b9\u4fbf\u5408\u5e76\uff0c\u8fd8\u8981\u7ef4\u62a4\u4e00\u4e0b\u533a\u95f4\u4e2d\u6709\u591a\u5c11\u4e2a\u6570\u5b57\u3002\u5408\u5e76\u533a\u95f4\u4fe1\u606f\u7684\u8bdd\u5c31\u662f\u628a\u4e24\u4e2a\u5f85\u5408\u5e76\u7684\u533a\u95f4\u91cc\u524d\u5341\u5c0f\u7684\u6570\u5b57\u5206\u522b\u5168\u90e8\u53d6\u51fa\u653e\u5728\u4e00\u8d77\uff0c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u62ff\u8d70\u524d $10$ \u4e2a\uff08\u4e0d\u5230 $10$ \u4e2a\u6570\u5b57\u90a3\u5c31\u5168\u62ff\u8d70\uff09\u5c31\u662f\u5408\u5e76\u540e\u7684\u7b54\u6848\u3002\n\n\u533a\u95f4\u524d\u5341\u5c0f\u4e00\u5b9a\u6765\u81ea\u4e8e\u5de6\u3001\u53f3\u533a\u95f4\u5404\u81ea\u7684\u524d\u5341\u5c0f\uff0c\u6240\u4ee5\u662f\u7ef4\u62a4\u5341\u4e2a\u3002\n\n\u7531\u4e8e\u6811\u4e0a\u6bcf\u4e2a\u70b9\u53ef\u80fd\u6709\u597d\u591a\u4eba\uff0c\u6240\u4ee5\u9700\u8981\u7528 vector \u5b58\u4e00\u4e0b\uff0c\u8fd8\u8981\u8bb0\u5f55\u4e00\u4e0b\u65f6\u95f4\u6233\u5bf9\u5e94\u7684\u6811\u4e0a\u70b9\u7f16\u53f7\uff0c\u5efa\u7acb\u7ebf\u6bb5\u6811\u7684\u65f6\u5019\u5230\u4e86\u53f6\u5b50\u8282\u70b9\uff0c\u4ece vector \u91cc\u628a\u8fd9\u4e2a\u65f6\u95f4\u6233\u5bf9\u5e94\u7684\u6811\u4e0a\u7684\u70b9\u91cc\u9762\u7684\u4eba\u7684\u8eab\u4efd\u53f7\u90fd\u62ff\u51fa\u6765\u6392\u5e8f\uff0c\u53d6\u524d $10$ \u5c0f\uff08\u540c\u7406\uff0c\u4e0d\u5230 $10$ \u4e2a\u6570\u5b57\u90a3\u5c31\u5168\u62ff\u8d70\uff09\u3002\n\n\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u5e38\u89c4\u6811\u5256\u5199\u6cd5\u3002\u7ebf\u6bb5\u6811\u7684\u8bdd\u5b9a\u4e49 void \u7c7b\u578b\u4f1a\u6bd4\u8f83\u597d\u5199\uff08\u5427\uff09\uff0c\u5f00\u4e00\u4e2a\u5168\u5c40\u6570\u7ec4\uff0c\u6bcf\u6b21\u67e5\u8be2\u4e00\u6bb5\u5b8c\u6574\u533a\u95f4\u5c31\u628a\u8fd9\u6bb5\u533a\u95f4\u548c\u8fd9\u4e2a\u6570\u7ec4\u8fdb\u884c\u5408\u5e76\uff0c\u5408\u5e76\u89c4\u5219\u548c\u4e0a\u6587\u7c7b\u4f3c\u3002\n\n\u7136\u540e\u5c31\u505a\u6389\u4e86 qwq\u3002\n\n\u5982\u679c\u6709\u4ec0\u4e48\u4e0d\u6e05\u695a\u7684\u5730\u65b9\u6216\u662f\u9898\u89e3\u7684\u54ea\u91cc\u6709\u8bef\uff0c\u6b22\u8fce\u79c1\u4fe1\u4ea4\u6d41\u95ee\u9898\uff01\n\n\u4ee3\u7801\uff1a\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read(){\n\tint ss=0,ww=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){\n\t\tif(ch=='-')\n\t\t\tww=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9'){\n\t\tss=ss*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn ss*ww;\n}\nconst int N=100010;\nint cnt,head[N],nex[N*2],to[N*2];\nvoid add(int x,int y){\n\tcnt++;\n\tto[cnt]=y;\n\tnex[cnt]=head[x];\n\thead[x]=cnt;\n}\nvector<int> p[N];\nint fa[N],dfn[N],dep[N],tp[N],sz[N],son[N],tot;\nint t[N];//t[i]\u8868\u793a\u65f6\u95f4\u6233i\u5bf9\u5e94\u7684\u6811\u4e0a\u7684\u70b9\u7684\u7f16\u53f7 \nvoid dfs1(int x,int f){\n\tfa[x]=f;\n\tdep[x]=dep[f]+1;\n\tsz[x]=1;\n\tint maxn=-1;\n\tfor(int i=head[x];i;i=nex[i]){\n\t\tint y=to[i];\n\t\tif(y==f)\n\t\t\tcontinue;\n\t\tdfs1(y,x);\n\t\tsz[x]+=sz[y];\n\t\tif(sz[y]>maxn){\n\t\t\tmaxn=sz[y];\n\t\t\tson[x]=y;\n\t\t}\n\t}\n}\nvoid dfs2(int x,int top){\n\ttp[x]=top;\n\ttot++;\n\tdfn[x]=tot;\n\tt[tot]=x;\n\tif(son[x])\n\t\tdfs2(son[x],top);\n\tfor(int i=head[x];i;i=nex[i]){\n\t\tint y=to[i];\n\t\tif(y==fa[x]||y==son[x])\n\t\t\tcontinue;\n\t\tdfs2(y,y);\n\t}\n}\nstruct ST{\n\tint sum;//\u533a\u95f4\u5185\u7684\u6570\u5b57\u4e2a\u6570 \n\tint a[11];//\u533a\u95f4\u5185\u524d10\u5c0f\u7684\u6570\u5b57\uff08\u5f53\u7136\u662f\u6709\u5e8f\u5b58\u653e\u7684\uff09 \n}st[N*4];\nint d[N];//\u5408\u5e76\u4e24\u6bb5\u533a\u95f4\u65f6\uff0c\u7528\u6765\u76db\u653e\u4e24\u6bb5\u5168\u90e8\u6570\u5b57\u7684\u6570\u7ec4 \nint cmp(int x,int y){\n\treturn x<y;\n}\nint min(int x,int y){\n\tif(x>=y)\n\t\treturn y;\n\treturn x;\n}\nvoid update(int root,int l,int r){\n\tst[root].sum=st[root*2].sum+st[root*2+1].sum;\n\tint nw=0;\n\tfor(int i=1;i<=min(st[root*2].sum,10);i++){//\u53d6\u51fa\u5de6\u8fb9\u524d10\u5c0f\u7684\u6570\u5b57\uff0c\u4e0d\u5230\u5341\u4e2a\u90a3\u5c31\u5168\u62ff\uff08\u4e0b\u9762\u7684\u6ce8\u91ca\u5c31\u4e0d\u8bf4\u7684\u8fd9\u4e48\u4e25\u8c28\u4e86\uff0c\u53ef\u80fd\u76f4\u63a5\u8bf4\u201c10\u4e2a\u201d\uff09 \n\t\tnw++;\n\t\td[nw]=st[root*2].a[i];\n\t}\n\tfor(int i=1;i<=min(st[root*2+1].sum,10);i++){//\u53f3\u8fb9\u7684 \n\t\tnw++;\n\t\td[nw]=st[root*2+1].a[i];\n\t}\n\tsort(d+1,d+nw+1,cmp);\n\tfor(int i=1;i<=min(st[root].sum,10);i++)//\u62ff\u8d7010\u4e2a \n\t\tst[root].a[i]=d[i];\n}\nvoid build(int root,int l,int r){\n\tif(l==r){\n\t\tint s=p[t[l]].size();\n\t\tst[root].sum=s;\n\t\tfor(int i=0;i<s;i++)\n\t\t\td[i+1]=p[t[l]][i];\n\t\tsort(d+1,d+s+1,cmp);\n\t\tfor(int i=1;i<=min(10,s);i++)\n\t\t\tst[root].a[i]=d[i];\n\t\treturn;\n\t}\n\tint mid=(l+r)/2;\n\tbuild(root*2,l,mid);\n\tbuild(root*2+1,mid+1,r);\n\tupdate(root,l,r);\n}\nint ans[11];//\u8bb0\u5f55\u5f53\u524d\u5408\u5e76\u7684\u7b54\u6848\u7684\u5168\u5c40\u6570\u7ec4 \nint ans_size; \nvoid ask(int root,int l,int r,int x,int y){\n\tif(l>=x&&r<=y){\n\t\tint nw=0;\n\t\tfor(int i=1;i<=min(10,st[root].sum);i++){//\u62ff\u8d70\u5f53\u524d\u533a\u95f4\u524d10\u5c0f\u7684\u6570\u5b57 \n\t\t\tnw++;\n\t\t\td[nw]=st[root].a[i];\n\t\t}\n\t\tfor(int i=1;i<=ans_size;i++){//\u628a\u5f53\u524d\u5df2\u7ecf\u5408\u5e76\u7684\u7b54\u6848\u62ff\u51fa\u6765 \n\t\t\tnw++;\n\t\t\td[nw]=ans[i];\n\t\t}\n\t\tsort(d+1,d+nw+1,cmp);\n\t\tans_size=0;\n\t\tfor(int i=1;i<=min(10,nw);i++){//\u6392\u597d\u5e8f\uff0c\u518d\u53d6\u8d70\u524d10\u5c0f \n\t\t\tans_size++;\n\t\t\tans[ans_size]=d[i];\n\t\t}\n\t\treturn;\n\t}\n\tint mid=(l+r)/2;\n\tif(mid>=x)\n\t\task(root*2,l,mid,x,y);\n\tif(mid+1<=y)\n\t\task(root*2+1,mid+1,r,x,y);\n}\nint main(){\n\tint n,m,q;\n\tn=read();\n\tm=read();\n\tq=read();\n\tfor(int i=1;i<n;i++){\n\t\tint x,y;\n\t\tx=read();\n\t\ty=read();\n\t\tadd(x,y);\n\t\tadd(y,x);\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tint x;\n\t\tx=read();\n\t\tp[x].push_back(i);\n\t}\n\tdfs1(1,1);\n\tdfs2(1,1);\n\tbuild(1,1,n);\n\tfor(int i=1;i<=q;i++){\n\t\tint x,y,z;\n\t\tx=read();\n\t\ty=read();\n\t\tz=read();\n\t\tans_size=0;\n\t\twhile(tp[x]!=tp[y]){\n\t\t\tif(dep[tp[x]]<dep[tp[y]])\n\t\t\t\tswap(x,y);\n\t\t\task(1,1,n,dfn[tp[x]],dfn[x]);\n\t\t\tint nw=0;\n\t\t\tx=fa[tp[x]];\n\t\t}\n\t\tif(dep[x]>dep[y])\n\t\t\tswap(x,y);\n\t\task(1,1,n,dfn[x],dfn[y]);\n\t\tprintf(\"%d \",min(z,ans_size));\n\t\tfor(int j=1;j<=min(ans_size,z);j++)\n\t\t\tprintf(\"%d \",ans[j]);\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1641697767,
        "uid": 140360,
        "name": "LKawaii",
        "ccfLevel": 0,
        "title": "CF587C \u9898\u89e3"
    },
    {
        "content": "# \u524d\u8a00\n[\u535a\u5ba2\u56ed\u98df\u7528\u66f4\u4f73](https://www.cnblogs.com/C202202chenkelin/p/14676438.html)\n# \u9898\u610f\n$n$ \u4e2a\u57ce\u5e02\uff0c\u6784\u6210\u4e00\u68f5\u6811\u3002\u7ed9\u5b9a $m$ \u4e2a\u4eba\u751f\u6d3b\u5728\u7684\u57ce\u5e02\uff0c\u8f93\u5165\u65f6\u7684 $A_i$ \u8868\u793a\u7f16\u53f7\u4e3a $i$ \u7684\u4eba\u5c45\u4f4f\u7684\u57ce\u5e02\u3002 \u6709 $q$ \u6b21\u8be2\u95ee\uff0c\u7ed9\u5b9a\u4e24\u4e2a\u57ce\u5e02\uff0c\u6c42\u4e24\u4e2a\u57ce\u5e02\u7684\u8def\u5f84\u4e2d\uff0c\u7f16\u53f7\u524d $a$ \u5c0f\u7684\u4eba\u7684\u7f16\u53f7\u5e76\u8f93\u51fa\u3002\n# \u601d\u8def\n\u6811\u4e0a\u500d\u589e\u3002\n\n\u53ef\u4ee5\u5c06 $u$ \u5230 $v$ \u7684\u8def\u5f84\u5206\u4e3a\u4e09\u4e2a\u90e8\u5206\uff1a\n1. \u4ece $u$ \u5230 $lca$ \u4f46\u4e0d\u5305\u542b $lca$\u7684\u8def\u5f84\u3002\n2. \u4ece $v$ \u5230 $lca$ \u4f46\u4e0d\u5305\u542b $lca$\u7684\u8def\u5f84\u3002\n3. $lca$ \u8fd9\u4e2a\u70b9\n\n\u6240\u4ee5\u5148\u9884\u5904\u7406\u51fa $dis[i][j][k]$ \uff1a $i$ \u5411\u4e0a\u8df3 $2^j-1$ \u90e8\u7b2c $k$ \u5c0f\u7684\u503c\u3002\u7531\u4e8e\u67e5\u8be2\u7684 $a\\leq10$ \uff0c\u6240\u4ee5\u9884\u5904\u7406\u51fa\u524d $10$ \u5c0f\u7684\u5373\u53ef\u3002\n\n\u9884\u5904\u7406\u4ee3\u7801\uff1a\n```cpp\nfor(int i = 1; i <= n; i++)\n\tfor(int j = 1; j <= 10; j++) dis[i][0][j] = w[i][j];\nfor(int j = 1; j <= 30; j++)\n\tfor(int i = 1; i <= n; i++) {\n\t\tfa[i][j] = fa[fa[i][j - 1]][j - 1];\n\t\tfor(int k = 1; k <= 10; k++) dis[i][j][k] = dis[fa[i][j - 1]][j - 1][k];\n\t\tfor(int k = 1; k <= 10; k++) dis[i][j][k + 10] = dis[i][j - 1][k];\n\t\tsort(dis[i][j] + 1, dis[i][j] + 1 + 20);\n\t}\n```\n\u67e5\u8be2\u5206\u4e09\u90e8\u5206\uff0c\u5176\u5b9e\u4e5f\u8ddf\u666e\u901a\u7684\u6811\u4e0a\u6c42\u7b80\u5355\u8def\u5f84\u7684\u8ddd\u79bb\u5dee\u4e0d\u591a\u3002\n\n\u5148\u6c42\u51fa $lca$ \uff0c\u518d\u7528 $u$ \u548c $v$ \u500d\u589e\u5206\u522b\u5411\u4e0a\u722c\u5373\u53ef\u3002\u8bb0\u5f97\u6700\u540e\u5728\u7b97\u4e0a $lca$ \u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(30n\\log n)$ \uff0c$30$ \u662f\u56e0\u4e3a $10\\times \\log 10\\approx30$\u3002\n# Code\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nnamespace Quick_Function {\n\ttemplate <typename Temp> void Read(Temp &x) {\n\t\tx = 0; char ch = getchar(); bool op = 0;\n\t\twhile(ch < '0' || ch > '9') { if(ch == '-') op = 1; ch = getchar(); }\n\t\twhile(ch >= '0' && ch <= '9') { x = (x << 1) + (x << 3) + (ch ^ 48); ch = getchar(); }\n\t\tif(op) x = -x;\n\t}\n\ttemplate <typename T, typename... Args> void Read(T &t, Args &... args) { Read(t); Read(args...); }\n\ttemplate <typename Temp> Temp Max(Temp x, Temp y) { return x > y ? x : y; }\n\ttemplate <typename Temp> Temp Min(Temp x, Temp y) { return x < y ? x : y; }\n\ttemplate <typename Temp> Temp Abs(Temp x) { return x < 0 ? (-x) : x; }\n\ttemplate <typename Temp> void Swap(Temp &x, Temp &y) { x ^= y ^= x ^= y; }\n}\nusing namespace Quick_Function;\n#define INF 0x3f3f3f3f\nconst int MAXN = 1e5 + 5;\nstruct Edge { int Next, To; };\nEdge edge[MAXN << 1];\nint head[MAXN], edgetot = 1;\nvoid Addedge(int u, int v) {\n\tedge[++edgetot].Next = head[u], edge[edgetot].To = v, head[u] = edgetot;\n\tedge[++edgetot].Next = head[v], edge[edgetot].To = u, head[v] = edgetot;\n}\nint w[MAXN][21];\nint n, m, q, a;\nint dep[MAXN], fa[MAXN][31], dis[MAXN][31][21];\nint res1[21], res2[21];\nint Get_Lca(int x, int y) {\n\tif(dep[x] < dep[y]) Swap(x, y);\n\tfor(int i = 30; i >= 0; i--)\n\t\tif(dep[x] - (1 << i) >= dep[y]) x = fa[x][i];\n\tif(x == y) return x;\n\tfor(int i = 30; i >= 0; i--)\n\t\tif(fa[x][i] != fa[y][i]) x = fa[x][i], y = fa[y][i];\n\treturn fa[x][0];\n}\nvoid dfs(int u, int step) {\n\tdep[u] = step;\n\tfor(int i = head[u]; i; i = edge[i].Next) {\n\t\tint v = edge[i].To;\n\t\tif(v != fa[u][0]) {\n\t\t\tfa[v][0] = u;\n\t\t\tdfs(v, step + 1);\n\t\t}\n\t}\n}\nvoid Upclimb1(int x, int y) {\n\tmemset(res1, 0x3f, sizeof(res1));\n\tfor(int i = 30; i >= 0; i--)\n\t\tif(dep[x] - (1 << i) >= dep[y]) {\n\t\t\tfor(int k = 1; k <= 10; k++) res1[k + 10] = dis[x][i][k];\n\t\t\tsort(res1 + 1, res1 + 1 + 20);\n\t\t\tx = fa[x][i];\n\t\t}\n}\nvoid Upclimb2(int x, int y) {\n\tmemset(res2, 0x3f, sizeof(res2));\n\tfor(int i = 30; i >= 0; i--)\n\t\tif(dep[x] - (1 << i) >= dep[y]) {\n\t\t\tfor(int k = 1; k <= 10; k++) res2[k + 10] = dis[x][i][k];\n\t\t\tsort(res2 + 1, res2 + 1 + 20);\n\t\t\tx = fa[x][i];\n\t\t}\n}\nvoid Query(int x, int y) {\n\tint ans = 0;\n\tint lca = Get_Lca(x, y);\n\tif(lca == x) {\n\t\tUpclimb1(y, x);\n\t\tfor(int i = 1; i <= 10; i++) res1[i + 10] = w[x][i];\n\t\tsort(res1 + 1, res1 + 1 + 20);\n\t\tfor(int i = 1; i <= a; i++)\n\t\t\tif(res1[i] != INF) ans++;\n\t\tprintf(\"%d \", ans);\n\t\tfor(int i = 1; i <= a; i++)\n\t\t\tif(res1[i] != INF) printf(\"%d \", res1[i]);\n\t\treturn;\n\t}\n\tif(lca == y) {\n\t\tSwap(x, y);\n\t\tUpclimb1(y, x);\n\t\tfor(int i = 1; i <= 10; i++) res1[i + 10] = w[x][i];\n\t\tsort(res1 + 1, res1 + 1 + 20);\n\t\tfor(int i = 1; i <= a; i++)\n\t\t\tif(res1[i] != INF) ans++;\n\t\tprintf(\"%d \", ans);\n\t\tfor(int i = 1; i <= a; i++)\n\t\t\tif(res1[i] != INF) printf(\"%d \", res1[i]);\n\t\treturn;\n\t}\n\tUpclimb1(x, lca);\n\tUpclimb2(y, lca);\n\tfor(int i = 1; i <= 10; i++) res1[i + 10] = res2[i];\n\tsort(res1 + 1, res1 + 1 + 20);\n\tfor(int i = 1; i <= 10; i++) res1[i + 10] = w[lca][i];\n\tsort(res1 + 1, res1 + 1 + 20);\n\tfor(int i = 1; i <= a; i++)\n\t\tif(res1[i] != INF) ans++;\n\tprintf(\"%d \", ans);\n\tfor(int i = 1; i <= a; i++)\n\t\tif(res1[i] != INF) printf(\"%d \", res1[i]);\n}\nint main() {\n\tmemset(w, 0x3f, sizeof(w));\n\tmemset(dis, 0x3f, sizeof(dis));\n\tRead(n, m, q);\n\tfor(int i = 1, u, v; i < n; i++)\n\t\tRead(u, v), Addedge(u, v);\n\tfor(int i = 1, a; i <= m; i++) {\n\t\tRead(a);\n\t\tw[a][11] = i;\n\t\tsort(w[a] + 1, w[a] + 1 + 11);\n\t}\n\tdfs(1, 0);\n\tfor(int i = 1; i <= n; i++)\n\t\tfor(int j = 1; j <= 10; j++) dis[i][0][j] = w[i][j];\n\tfor(int j = 1; j <= 30; j++)\n\t\tfor(int i = 1; i <= n; i++) {\n\t\t\tfa[i][j] = fa[fa[i][j - 1]][j - 1];\n\t\t\tfor(int k = 1; k <= 10; k++) dis[i][j][k] = dis[fa[i][j - 1]][j - 1][k];\n\t\t\tfor(int k = 1; k <= 10; k++) dis[i][j][k + 10] = dis[i][j - 1][k];\n\t\t\tsort(dis[i][j] + 1, dis[i][j] + 1 + 20);\n\t\t}\n\tint u, v;\n\twhile(q--) {\n\t\tRead(u, v, a);\n\t\tQuery(u, v);\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1618810727,
        "uid": 254733,
        "name": "Night_Bringer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF587C Duff in the Army"
    },
    {
        "content": "## \u9898\u76ee\u63cf\u8ff0\n\n\u6709`n`\u4e2a\u57ce\u5e02\uff0c\u7531`n-1`\u6761\u8fb9\u8fde\u63a5\u3002\u4e24\u4e2a\u57ce\u5e02\u4e4b\u95f4\u7684\u9053\u8def\u662f\u552f\u4e00\u7684\u3002\n\n\u6709`m`\u4e2a\u4eba\uff0c\u4f4f\u5728\u8fd9`n`\u4e2a\u57ce\u5e02\u4e2d\uff0c\u73b0\u5728\u7ed9\u51fa`m`\u4e2a\u4eba\uff0c\u751f\u6d3b\u7684\u57ce\u5e02\u7f16\u53f7\u3002\n\n\u4f60\u9700\u8981\u56de\u7b54\uff0c\u4ece\u4e00\u4e2a\u57ce\u5e02`u`\u5230\u53e6\u4e00\u4e2a\u57ce\u5e02`v`\u7684\u8def\u5f84\u4e2d\uff0c\u7f16\u53f7\u524d`a`\u5c0f\u7684\u4eba\u7684\u7f16\u53f7\u662f\u54ea\u4e9b\uff1f \n\n## Input\n\n\u7b2c\u4e00\u884c3\u4e2a\u6574\u6570`n,m,q` \n\n\u63a5\u4e0b\u91cc`n-1`\u884c\uff0c\u8868\u793a\u8fde\u63a5\u4e24\u4e2a\u57ce\u5e02\u7684\u4e00\u6761\u8fb9\u3002\n\n\u63a5\u4e0b\u6765\u4e00\u884c`m`\u4e2a\u6570\uff0c\u8868\u793a\u7f16\u53f7\u4e3a`i`\u7684\u4eba\u751f\u6d3b\u5728`c[i]`\u57ce\u5e02 \n\n\u63a5\u4e0b\u6765`q`\u884c\uff0c\u6bcf\u884c`3`\u4e2a\u6574\u6570`v,u,a`\u8868\u793a\u4e00\u4e2a\u8be2\u95ee\u3002\n\n## Output\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\uff0c\u5982\u679c\u8def\u5f84\u4e0a\u6709`t`\u4e2a\u4eba\uff0c\u5219\u5148\u8f93\u51fa`k=min(a,t)`\u3002\u518d\u8f93\u51fa\u524d`k`\u5c0f\u7684\u7f16\u53f7\u3002 \u5177\u4f53\u683c\u5f0f\u89c1\u6837\u4f8b\n\n## Sample Input\n```\n5 4 5\n1 3\n1 2\n1 4\n4 5\n2 1 4 3\n4 5 6\n1 5 2\n5 5 10\n2 3 3\n5 3 1\n```\n## Sample Output\n```\n1 3\n2 2 3\n0\n3 1 2 4\n1 2\n```\n\u5176\u5b9e\u5c31\u662f\u66b4\u529b\u3002\u3002\u3002\u3002\n\n\u8ba9\u6211\u4eec\u6765\u60f3\u4e00\u4e0b\uff0c\u6bcf\u4e2a\u57ce\u5e02\u53ea\u8981\u5b58\u7f16\u53f7\u524d`10`\u7684\u7f16\u53f7\uff0c\u5bfb\u627e\u7b54\u6848\u7684\u8bdd\uff0c\u8fdb\u884c\u6392\u5e8f\uff0c\u67e5\u8be2`u`\u5230`lca(u,v),lca(u,v)`\u5230`v`\u7684\u8def\u5f84\uff0c\u66b4\u529b\u6c42\u89e3\uff0c\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6`O(10*q*n^2)`\n\n\u7c97\u7565\u7684\u60f3\uff0c\u5927\u4f53\u601d\u8def\u662f\u6ca1\u4ec0\u4e48\u66f4\u597d\u7684\u5199\u6cd5\u4e86\uff08\u6211\u592a\u5f31\u4e86\u3002\u3002\u3002\uff09\uff0c\u53ea\u80fd\u4f18\u5316\u66b4\u529b\u4e86\uff1b\n\n\u600e\u6837\u4f18\u5316\u5462?\u53ea\u8981\u5c06\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u4e00\u4e2a`log(n)`\u5c31\u884c\u4e86\uff0c\u4ece\u800c\u60f3\u5230\u5229\u7528\u500d\u589e\u6765\u50a8\u5b58\u8def\u5f84\uff0c`lca`\u7684\u540c\u65f6\u8fdb\u884c\u8def\u5f84\u7684\u5f52\u5e76\uff0c\u5229\u7528\u5f52\u5e76\u7684\u601d\u60f3\u548c\u500d\u589e\u7684\u601d\u60f3\u6765\u4f18\u5316\u65f6\u95f4\u590d\u6742\u5ea6\uff1b\n\n`f[i][j]`\u4e3a`lca`\u7684\u500d\u589e\u6570\u7ec4,`F[i][j]`\u4e3a\u8def\u5f84\u7684\u500d\u589e\u6570\u7ec4\u3002\n## \u4ee3\u7801\u5982\u4e0b\n```cpp\n#include<bits./stdc++.h>\nusing namespace std;\nconst int M=1e5+5;\nint n,m,q,a,b,u,v,sz,L[M][15],f[M][25],F[M][25][15],dep[M],ans[15];\nvector<int>T[M];\nvoid dfs(int x,int fa) {\n\tdep[x]=dep[f[x][0]=fa]+1;\n\tF[x][0][0]=(sz=L[fa][0]);\n\tfor(int i=1; i<=sz; i++)F[x][0][i]=L[fa][i];\n\tfor(int i=0; i<(int)T[x].size(); i++) {\n\t\tint y=T[x][i];\n\t\tif(y==fa)continue;\n\t\tdfs(y,x);\n\t}\n}\nvoid merge(int a[15],int b[15],int (&c)[15]) {\n\tint t[15],a1=1,b1=1,t1=0;\n\twhile(a1<=a[0]&&b1<=b[0]&&t1<10) {\n\t\tif(a[a1]<b[b1])t[++t1]=a[a1++];\n\t\telse t[++t1]=b[b1++];\n\t}\n\twhile(a1<=a[0]&&t1<10)t[++t1]=a[a1++];\n\twhile(b1<=b[0]&&t1<10)t[++t1]=b[b1++];\n\tfor(int i=1; i<=(c[0]=t1); i++)c[i]=t[i];\n}\nvoid LCA(int x,int y) {\n\tint X=x,Y=y;\n\tans[0]=0;\n\tif(dep[x]<dep[y])swap(x,y);\n\tint step=dep[x]-dep[y];\n\tfor(int i=20; i>=0; i--)if(step&(1<<i))merge(ans,F[x][i],ans),x=f[x][i];\n\tif(x==y) {\n\t\tif(dep[X]>dep[Y])merge(ans,L[X],ans);\n\t\telse merge(ans,L[Y],ans);\n\t\treturn;\n\t}\n\tfor(int i=20; i>=0; i--)\n\t\tif(f[x][i]!=f[y][i]) {\n\t\t\tmerge(ans,F[x][i],ans);\n\t\t\tmerge(ans,F[y][i],ans);\n\t\t\tx=f[x][i],y=f[y][i];\n\t\t}\n\tmerge(ans,F[x][0],ans);\n\tmerge(ans,L[X],ans);\n\tmerge(ans,L[Y],ans);\n}\nint main() {\n\tscanf(\"%d%d%d\",&n,&m,&q);\n\tfor(int i=1; i<n; i++)scanf(\"%d%d\",&a,&b),T[a].push_back(b),T[b].push_back(a);\n\tfor(int i=1; i<=m; i++) {\n\t\tscanf(\"%d\",&a);\n\t\tif(L[a][0]<10)L[a][++L[a][0]]=i;\n\t}\n\tdfs(1,0);\n\tfor(int i=1; i<=20; i++)\n\t\tfor(int j=1; j<=n; j++) {\n\t\t\tf[j][i]=f[f[j][i-1]][i-1];\n\t\t\tmerge(F[j][i-1],F[f[j][i-1]][i-1],F[j][i]);\n\t\t}\n\tfor(int i=1; i<=q; i++) {\n\t\tscanf(\"%d%d%d\",&v,&u,&a);\n\t\tLCA(v,u);\n\t\tprintf(\"%d\",min(a,ans[0]));\n\t\tfor(int j=1; j<=min(a,ans[0]); j++)printf(\" %d\",ans[j]);\n\t\tputs(\"\");\n\t}\n}\n```",
        "postTime": 1559898726,
        "uid": 137284,
        "name": "dsjkafdsaf",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF587C \u3010Duff in the Army\u3011"
    },
    {
        "content": "### \u9898\u76ee\u4f20\u9001\u95e8\n\n[\u6d1b\u8c37](https://www.luogu.com.cn/problem/CF587C)\n\n[CF](https://codeforces.com/problemset/problem/587/C)\n\n### \u5206\u6790\n\n\u770b\u5230\u533a\u95f4\u7b2c $a$ \u5c0f\uff0c\u60f3\u5230\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u5efa\u7acb\u5305\u542b\u51fa\u6839\u5230\u81ea\u5df1\u7684\u6240\u6709\u6743\u503c\u7684\u7ebf\u6bb5\u6811\uff0c\u53ef\u4ee5\u53d1\u73b0\u6bcf\u4e00\u4e2a\u8282\u70b9\u7684\u4fe1\u606f\u90fd\u662f\u7ee7\u627f\u5176\u7236\u4eb2\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u53ef\u6301\u4e45\u5316\u3002\n\n\u94fe $[u,v]$ \u7684\u6743\u503c\u4fe1\u606f\u53ef\u4ee5\u7528 $[rt_u - rt_v - rt_{\\text{lca}(u,v)} - rt_{father_{\\text{lca}(u,v)}}]$ \u8868\u793a\uff0c\u5728\u8be5\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(na\\log{n})$\u3002\n\n### \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntemplate<typename T>inline void read(register T &x)\n{\n\tregister T p = 1,num = 0;\n\tchar c = getchar();\n\twhile(c < '0'||c > '9')\n\t{\n\t\tif(c == '-') p = -p;\n\t\tc = getchar();\n\t}\n\twhile('0' <= c&&c <= '9')\n\t{\n\t\tnum = (num<<3)+(num<<1)+(c^48);\n\t\tc = getchar();\n\t}\n\tx = p * num;\n}\ntemplate<typename T>inline void write(register T x)\n{\n\tif(x < 0) putchar('-'),x = -x;\n\tif(x > 9) write(x/10);\n\tputchar(x%10+48);\n}\n#define D(i,a,b) for(register int i=a;i>=b;--i)\n#define F(i,a,b) for(register int i=a;i<=b;++i)\n#define ll long long\n#define pii pair<int,int>\n#define N 100010\nint head[N],nxt[N<<1],to[N<<1],cnt = 0;\ninline void add(int u,int v)\n{\n\tnxt[++cnt] = head[u];\n\thead[u] = cnt;\n\tto[cnt] = v;\n}\nvector<int> g[N];\nint rt[N],f[N][20],dep[N],sum[N],n,m,q;\nstruct Tree\n{\n\t#define mid (l+r)/2\n\tint L[N<<5],R[N<<5],sz[N<<5],times;\n\tTree() {times = 0;}\n\tint update(int u,int v,int l,int r,int x)\n\t{\n\t\tu = ++times;\n\t\tL[u] = L[v],R[u] = R[v],sz[u] = sz[v] + 1;\n\t\tif(l == r) return u;\n\t\tif(x <= mid) L[u] = update(L[u],L[v],l,mid,x);\n\t\telse R[u] = update(R[u],R[v],mid+1,r,x);\n\t\treturn u;\n\t}\n\tint query(int u,int v,int t,int w,int l,int r,int x)\n\t{\n\t\tif(l == r) return l;\n\t\tint tp = sz[L[u]] + sz[L[v]] - sz[L[t]] - sz[L[w]];\n\t\tif(tp >= x) return query(L[u],L[v],L[t],L[w],l,mid,x);\n\t\treturn query(R[u],R[v],R[t],R[w],mid+1,r,x - tp);\n\t}\n}tree;\nvoid dfs(int u,int fa)\n{\n\tsum[u] = sum[fa] + (int)g[u].size();\n\tdep[u] = dep[fa] + 1;\n\tf[u][0] = fa;\n\trt[u] = rt[fa];\n\tfor(auto i:g[u]) rt[u] = tree.update(rt[u],rt[u],1,m,i);\n\tfor(register int i = head[u];i;i = nxt[i])\n\t{\n\t\tint v = to[i];\n\t\tif(v == fa) continue;\n\t\tdfs(v,u);\n\t}\n}\ninline int lca(int u,int v)\n{\n\tif(dep[u] < dep[v]) swap(u,v);\n\tD(i,18,0)\n\t\tif(dep[f[u][i]] >= dep[v])\n\t\t\tu = f[u][i];\n\tif(u == v) return u;\n\tD(i,18,0)\n\t\tif(f[u][i] != f[v][i])\n\t\t\tu = f[u][i],v = f[v][i];\n\treturn f[u][0];\n}\nint main()\n{\n\tread(n),read(m),read(q);\n\tF(i,1,n-1)\n\t{\n\t\tint u,v;\n\t\tread(u),read(v);\n\t\tadd(u,v);\n\t\tadd(v,u);\n\t}\n\tF(i,1,m)\n\t{\n\t\tint x;\n\t\tread(x);\n\t\tg[x].push_back(i);\n\t}\n\tdfs(1,0);\n\tF(i,1,18)\n\t\tF(j,1,n)\n\t\t\tf[j][i] = f[f[j][i-1]][i-1];\n\twhile(q--)\n\t{\n\t\tint u,v,x,t,w;\n\t\tread(u),read(v),read(x);\n\t\tt = lca(u,v);\n\t\tw = f[t][0];\n\t\tx = min(x,sum[u] + sum[v] - sum[t] - sum[w]);\n\t\twrite(x),putchar(' ');\n\t\tF(i,1,x) write(tree.query(rt[u],rt[v],rt[t],rt[w],1,m,i)),putchar(' '); \n\t\tputchar('\\n');\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1683372838,
        "uid": 197648,
        "name": "Wangxun",
        "ccfLevel": 5,
        "title": "CF587C \u9898\u89e3"
    },
    {
        "content": "## \u9898\u610f\n\n\u6709 $m$ $(1 \\le m \\le 10^5)$ \u4e2a\u4eba\u751f\u6d3b\u5728\u4e00\u68f5 $n$ \u4e2a\u8282\u70b9\u7684\u6811\u4e0a\uff0c\u4ed6\u4eec\u7684\u7f16\u53f7\u4e3a $1 \\sim m$\u3002\u7ed9\u5b9a $q$ $(1 \\le q \\le 10^5)$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u6309\u987a\u5e8f\u8f93\u51fa $2$ \u4e2a\u70b9\u95f4\u7684\u7b80\u5355\u8def\u5f84\u4e0a\u7f16\u53f7\u524d $k$ $(1 \\le k \\le 10)$ \u5c0f\u7684\u4eba\u7684\u7f16\u53f7\uff08\u5982\u679c\u8fd9\u6761\u8def\u5f84\u4e0a\u4e0d\u6ee1 $k$ \u4eba\u5219\u6309\u987a\u5e8f\u8f93\u51fa\u6240\u6709\u4eba\u7684\u7f16\u53f7\uff09\u3002\n\n## \u601d\u8def\n\n\u6211\u4eec\u53ef\u4ee5\u5bf9\u8fd9\u9897\u6811\u8fdb\u884c\u91cd\u94fe\u5256\u5206\uff0c\u5e76\u5728\u7ebf\u6bb5\u6811\u4e0a\u7684\u6bcf\u4e2a\u8282\u70b9\u7528 set \u7ef4\u62a4\u8be5\u533a\u95f4\u5185\u6240\u6709\u8282\u70b9\u7684\u7f16\u53f7\u3002\u56e0\u4e3a\u6bcf\u4e2a\u4eba\u6700\u591a\u4f1a\u51fa\u73b0\u5728\u7ebf\u6bb5\u6811\u4e0a $\\log n$ \u4e2a\u8282\u70b9\u8868\u793a\u7684\u533a\u95f4\u4e2d\uff0c\u6240\u4ee5\u6240\u6709\u7684 set \u4e2d\u6700\u591a\u6709 $n \\log n$ \u4e2a\u8282\u70b9\u3002\u67e5\u8be2\u8def\u5f84\u4e0a\u7f16\u53f7\u524d $k$ \u5c0f\u7684\u4eba\u65f6\uff0c\u6211\u4eec\u901a\u8fc7\u6811\u5256\u627e\u5230\u7ebf\u6bb5\u6811\u4e0a\u6240\u6709\u5305\u542b\u8be5\u8def\u5f84\u7684\u8282\u70b9\uff0c\u5e76\u4f9d\u6b21\u5c1d\u8bd5\u7528 set \u4e2d\u524d $k$ \u5c0f\u7684\u5143\u7d20\u66f4\u65b0\u7b54\u6848\u3002\u8be5\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(q \\log^3 n)$\uff0c\u4f46\u5b9e\u9645\u8fdc\u8fdc\u8dd1\u4e0d\u6ee1\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read()\n{\n\tint read_result=0,is_below_0=0;\n\tchar now_ch=0;\n\twhile(!isdigit(now_ch))\n\t{\n\t\tis_below_0|=now_ch=='-';\n\t\tnow_ch=getchar();\n\t}\n\twhile(isdigit(now_ch))\n\t{\n\t\tread_result=(read_result<<3)+(read_result<<1)+(now_ch^48);\n\t\tnow_ch=getchar();\n\t}\n\treturn is_below_0?-read_result:read_result;\n}\ninline void write(int x)\n{\n\tif(x<0)\n\t{\n\t\tputchar('-');\n\t\tx=-x;\n\t}\n\tif(x>9) write(x/10);\n\tputchar(x%10+'0');\n}\nint n,m,q,fa[100005],d[100005],sz[100005],hs[100005],dfn[100005],tot,top[100005],ans[15];\nvector<int>tr[100005];\nset<int>s[400005];\npriority_queue<int>q1;\ninline void dfs(int u)\n{\n\td[u]=d[fa[u]]+1;\n\tsz[u]=1;\n\tfor(int i=0;i<tr[u].size();++i)\n\t{\n\t\tint v=tr[u][i];\n\t\tif(v==fa[u]) continue;\n\t\tfa[v]=u;\n\t\tdfs(v);\n\t\tsz[u]+=sz[v];\n\t\tif(sz[v]>sz[hs[u]]) hs[u]=v;\n\t}\n}\ninline void dfs1(int u,int x)\n{\n\ttop[u]=x;\n\tdfn[u]=++tot;\n\tif(hs[u]) dfs1(hs[u],x);\n\tfor(int i=0;i<tr[u].size();++i)\n\t{\n\t\tint v=tr[u][i];\n\t\tif(v==fa[u]||v==hs[u]) continue;\n\t\tdfs1(v,v);\n\t}\n}\ninline int lca(int x,int y)\n{\n\twhile(top[x]!=top[y])\n\t{\n\t\tif(d[top[x]]>d[top[y]]) x=fa[top[x]];\n\t\telse y=fa[top[y]];\n\t}\n\tif(d[x]<d[y]) return x;\n\treturn y;\n}\ninline void update(int o,int l,int r,int x,int k)\n{\n\ts[o].insert(k);\n\tif(l==r) return;\n\tint mid=(l+r)>>1;\n\tif(x<=mid) update(o<<1,l,mid,x,k);\n\telse update(o<<1|1,mid+1,r,x,k);\n}\ninline void query(int o,int l,int r,int x,int y,int k)\n{\n\tif(x<=l&&r<=y)\n\t{\n\t\tset<int>::iterator it=s[o].begin();\n\t\twhile(q1.size()<k)\n\t\t{\n\t\t\tif(it==s[o].end()) break;\n\t\t\tq1.push(*it);\n\t\t\t++it;\n\t\t}\n\t\tif(it==s[o].end()) return;\n\t\twhile(q1.size()==k&&q1.top()>*it)\n\t\t{\n\t\t\tif(it==s[o].end()) break;\n\t\t\tq1.pop();\n\t\t\tq1.push(*it);\n\t\t\t++it;\n\t\t}\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tif(x<=mid) query(o<<1,l,mid,x,y,k);\n\tif(y>mid) query(o<<1|1,mid+1,r,x,y,k);\n}\nint main()\n{\n\tn=read();\n\tm=read();\n\tq=read();\n\tfor(int i=1;i<n;++i)\n\t{\n\t\tint u=read(),v=read();\n\t\ttr[u].push_back(v);\n\t\ttr[v].push_back(u);\n\t}\n\tdfs(1);\n\tdfs1(1,1);\n\tfor(int i=1;i<=m;++i) update(1,1,tot,dfn[read()],i);\n\twhile(q--)\n\t{\n\t\tint u=read(),v=read(),a=read(),x=lca(u,v);\n\t\twhile(top[u]!=top[x])\n\t\t{\n\t\t\tquery(1,1,tot,dfn[top[u]],dfn[u],a);\n\t\t\tu=fa[top[u]];\n\t\t}\n\t\tquery(1,1,tot,dfn[x],dfn[u],a);\n\t\twhile(top[v]!=top[x])\n\t\t{\n\t\t\tquery(1,1,tot,dfn[top[v]],dfn[v],a);\n\t\t\tv=fa[top[v]];\n\t\t}\n\t\tif(v!=x) query(1,1,tot,dfn[x]+1,dfn[v],a);\n\t\tint tmp=0;\n\t\twhile(q1.size())\n\t\t{\n\t\t\tans[++tmp]=q1.top();\n\t\t\tq1.pop();\n\t\t}\n\t\twrite(tmp);\n\t\tfor(int i=tmp;i;--i)\n\t\t{\n\t\t\tputchar(' ');\n\t\t\twrite(ans[i]);\n\t\t}\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1666937461,
        "uid": 488734,
        "name": "wrzSama",
        "ccfLevel": 7,
        "title": "CF587C Duff in the Army \u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\u5148\u628a\u6743\u503c\u6302\u5230\u70b9\u4e0a\uff0c\u53d1\u73b0 $a\\le 10$\uff0c\u6545\u53ef\u4ee5\u76f4\u63a5\u6c42\u51fa\u8fd9\u524d $a$ \u5c0f\u6570\u3002\n\n### Sol 1\n\n\u7136\u540e\u5c31\u53d8\u6210\u4e86\u6811\u4e0a\u67e5\u8be2\u7b2c $k$ \u5c0f\uff0c\u7ecf\u5178\u5957\u8def\uff0c\u5f00\u4e00\u68f5\u53ef\u6301\u4e45\u5316\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u539f\u6811\u4e0a\u6bcf\u4e2a\u70b9\u7ef4\u62a4\u4e00\u4e2a\u7248\u672c\uff0c\u8868\u793a\u5176\u5230\u6839\u4e0a\u8def\u5f84\u4e0a\u6240\u6709\u70b9\u7684\u6743\u503c\uff0c\u67e5\u8be2\u65f6\u627e\u5230 $lca_{u,v}$ \u540e\u5dee\u5206\u7136\u540e\u4e3b\u5e2d\u6811\u4e0a\u4e8c\u5206\u5373\u53ef\uff0c\u590d\u6742\u5ea6 $O(an\\log n)$\u3002\n\n\n### Sol 2\n\n\u4f60\u53d1\u73b0\u8fd9\u4e2a $a$ \u5341\u5206\u5730\u5c0f\uff0c\u4e8e\u662f\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u91cd\u94fe\u4e0a\u524d $10$ \u5c0f\u7684\u6570 $a_i(i\\le 10)$\u3002\u9996\u5148\u9700\u8981\u4f7f\u7528\u91cd\u94fe\u5256\u5206\u3002\n\n\u7136\u540e\u5408\u5e76\u7ebf\u6bb5\u6811\u8282\u70b9\u7684\u65f6\u5019\uff0c\u641e\u4e24\u4e2a\u6307\u9488\u6309\u7167\u5f52\u5e76\u7684\u601d\u60f3\u6bd4\u8f83\u5927\u5c0f\uff0c\u7136\u540e\u52a0\u5165\u5408\u5e76\u540e\u8282\u70b9 $a$ \u6570\u7ec4\u7684\u672b\u5c3e\u5373\u53ef\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f $len_a\\le 10$\u3002\n\n\u590d\u6742\u5ea6 $O(an\\log^2 a)$\u3002\n\n\u56e0\u4e3a\u7ebf\u6bb5\u6811\u597d\u5199\uff0c\u6240\u4ee5\u5199\u4e86\u7ebf\u6bb5\u6811\u3002\n\n\u8fd8\u6709\u4e00\u70b9\u9700\u8981\u6ce8\u610f\uff0c\u539f\u6811\u4e0a\u4e00\u4e2a\u70b9\u6743\u503c\u53ef\u80fd\u5927\u4e8e $10$ \u4e2a\uff0c\u53d6\u6700\u5c0f $10$ \u4e2a\u5373\u53ef\u3002\n\n```cpp\n#include <bits/stdc++.h>\nnamespace mystd {\n\tinline int read() {\n\t    char c = getchar();\n\t    int x = 0, f = 1;\n\t    while (c < '0' || c > '9') f = (c == '-') ? -1 : f, c = getchar();\n\t    while (c >= '0' && c <= '9') x = (x << 1) + (x << 3) + c - '0', c = getchar();\n\t    return x * f;\n\t}\n\tinline void write(int x) {\n\t    if (x < 0) x = ~(x - 1), putchar('-');\n\t    if (x > 9) write(x / 10);\n\t    putchar(x % 10 + '0');\n\t}\n}\nusing namespace std;\nusing namespace mystd;\n\nconst int maxn = 1e5 + 100;\nconst int inf = 0x3f3f3f3f;\nstruct edge { int to, nxt; } e[maxn << 1];\nstruct seg {\n\tint cnt, a[15];\n\tseg () { memset(a, inf, sizeof(a)), cnt = 0; }\n\tseg operator + (const seg &rhs) const {\n\t\tseg res;\n\t\tint i = 0, j = 0;\n\t\twhile (res.cnt <= 10) {\n\t\t\tif (i >= cnt && j >= rhs.cnt) break;\n\t\t\tif (i == cnt || a[i] > rhs.a[j]) res.a[res.cnt] = rhs.a[j], j++, res.cnt++;\n\t\t\tif (i >= cnt && j >= rhs.cnt) break;\n\t\t\tif (j == rhs.cnt || rhs.a[j] >= a[i]) res.a[res.cnt] = a[i], i++, res.cnt++;\n\t\t}\n\t\treturn res;\n\t}\n} tr[maxn << 2];\nint n, m, q, tot, cnt, head[maxn];\nint sz[maxn], son[maxn], fa[maxn], top[maxn], id[maxn], dep[maxn], pos[maxn];\nvector<int> p[maxn];\n\nvoid add_edge(int u, int v) {\n\te[++tot] = (edge) { v, head[u] };\n\thead[u] = tot;\n}\n\n#define ls x << 1\n#define rs x << 1 | 1\n#define mid ((l + r) >> 1)\nvoid pushup(int x) { tr[x] = tr[ls] + tr[rs]; }\nvoid build(int l, int r, int x) {\n\tif (l == r) {\n\t\tfor (int i : p[pos[l]]) {\n\t\t\ttr[x].a[tr[x].cnt++] = i;\n\t\t\tif (tr[x].cnt == 10) break;\n\t\t}\n\t\treturn;\n\t}\n\tbuild(l, mid, ls), build(mid + 1, r, rs), pushup(x);\n}\n\nseg query(int l, int r, int s, int t, int x) {\n\tif (s <= l && r <= t) return tr[x];\n\tif (s > mid) return query(mid + 1, r, s, t, rs);\n\telse if (t <= mid) return query(l, mid, s, t, ls);\n\telse return query(l, mid, s, mid, ls) + query(mid + 1, r, mid + 1, t, rs);\n}\n\nvoid dfs1(int u, int fat) {\n\tfa[u] = fat, sz[u] = 1, dep[u] = dep[fat] + 1;\n\tfor (int i = head[u]; i; i = e[i].nxt) {\n\t\tint v = e[i].to;\n\t\tif (v == fat) continue;\n\t\tdfs1(v, u), sz[u] += sz[v];\n\t\tif (sz[v] > sz[son[u]]) son[u] = v;\n\t}\n}\n\nvoid dfs2(int u, int pre) {\n\ttop[u] = pre, pos[id[u] = ++cnt] = u;\n\tif (son[u]) dfs2(son[u], pre);\n\tfor (int i = head[u]; i; i = e[i].nxt) {\n\t\tint v = e[i].to;\n\t\tif (v == fa[u] || v == son[u]) continue;\n\t\tdfs2(v, v);\n\t} \n}\n\nseg qrypath(int u, int v) {\n\tseg res;\n\twhile (top[u] != top[v]) {\n\t\tif (dep[top[u]] < dep[top[v]]) swap(u, v);\n\t\tres = res + query(1, n, id[top[u]], id[u], 1);\n\t\tu = fa[top[u]];\n\t}\n\tif (dep[u] > dep[v]) swap(u, v);\n\treturn res + query(1, n, id[u], id[v], 1);\n}\n\nint main() {\n\tn = read(), m = read(), q = read();\n\tfor (int i = 1, u, v; i <= n - 1; i++) {\n\t\tu = read(), v = read();\n\t\tadd_edge(u, v), add_edge(v, u);\n\t}\n\tfor (int i = 1; i <= m; i++) p[read()].push_back(i); \n\tdfs1(1, 0);\n\tdfs2(1, 1);\n\tbuild(1, n, 1);\n\twhile (q--) {\n\t\tint u = read(), v = read(), a = read();\n\t\tseg res = qrypath(u, v);\n\t\twrite(min(res.cnt, a)), putchar(' ');\n\t\tfor (int i = 0; i < res.cnt && i < a; i++) write(res.a[i]), putchar(' ');\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1664529842,
        "uid": 306573,
        "name": "Ender32k",
        "ccfLevel": 0,
        "title": "CF587C Duff in the Army \u9898\u89e3"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/Coros-Trusds/p/15786350.html)\n\n# \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u6811\u4e0a\u6bcf\u4e2a\u70b9\u6709\u4e00\u4e2a\u6743\u503c\uff0c\u53c8\u6709 $q$ \u4e2a\u8be2\u95ee\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8be2\u95ee `u v rk`\uff0c\u8ba9\u4f60\u6c42\u51fa\u70b9 $u$ \u4e0e\u70b9 $v$ \u4e4b\u95f4\u7684\u8def\u5f84\u4e0a\u7684\u70b9\u7684\u524d $rk$ \u5c0f\u3002\n\n# \u9898\u76ee\u5206\u6790\n\n\u8003\u8651\u6811\u4e0a\u500d\u589e\uff0c\u6bd4\u8f83\u65e0\u8111\u3002\n\n\u6211\u4eec\u4ee4 $dis[i][j][k]$ \u8868\u793a\u4ece\u70b9 $i$ \u5411\u4e0a\u8df3 $2^{j}-1$ \u6b65\u540e\u7b2c $k$ \u5c0f\u7684\u503c\uff0c\u518d\u7528 $w[i][j]$ \u5b58\u50a8\u57ce\u5e02 $i$ \u91cc\u5c45\u4f4f\u7684\u4eba\uff0c\u6309\u7f16\u53f7\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n\n\u521d\u59cb\u5316\u65f6\u56e0\u4e3a\u4ece\u70b9 $i$ \u5411\u4e0a\u8df3 $0(=2^0-1)$ \u6b65\u540e\u7b2c $j$ \u5c0f\u5c31\u662f $w[i][j]$\uff0c\u6240\u4ee5\u53ef\u4ee5\u521d\u59cb\u5316\u51fa $dis$ \u6570\u7ec4\u3002\n\n\u968f\u540e\u7528\u7c7b\u4f3c\u4e8e\u500d\u589e $\\mathbf{LCA}$ \u7236\u4eb2/\u7956\u5148\u8282\u70b9\u8fed\u4ee3\u7684\u65b9\u6cd5\u8fed\u4ee3\u5373\u53ef\uff0c\u5177\u4f53\u5982\u4e0b\uff1a\n\n```cpp\nfor(register int i=1;i<=n;i++)\n{\n\tfor(register int j=1;j<=10;j++)\n\t{\n\t\tdis[i][0][j]=w[i][j];\n\t}\n}\n\t\nfor(register int j=1;j<=20;j++)\n{\n\tfor(register int i=1;i<=n;i++)\n   \t{\n\t\tfor(register int k=1;k<=10;k++)\n\t\t{\n\t\t\tdis[i][j][k]=dis[fa[i][j-1]][j-1][k];\n\t\t\t\t\n\t\t\tdis[i][j][k+10]=dis[i][j-1][k];\n\t\t}\n\t\t\t\n\t\tsort(dis[i][j]+1,dis[i][j]+20+1);\n\t}\n}\n```\n\n-----\n\n\u518d\u6765\u8003\u8651\u600e\u4e48\u56de\u7b54\u8be2\u95ee\uff0c\u4e0d\u59a8\u8bbe\u5f53\u524d\u8be2\u95ee\u4e3a `x y rk`\u3002\n\n\u4ee4 $lca$ \u8868\u793a $x,y$ \u7684\u6811\u4e0a\u6700\u8fd1\u516c\u5171\u7956\u5148\u3002\n\n\u5c06 $res1[~],res2[~]$ \u521d\u59cb\u5316\u4e3a\u5f88\u5927\u7684\u6570\u3002\n\n\u82e5 $x=lca$\uff0c\u6211\u4eec\u500d\u589e\u66f4\u65b0 $y\\to lca$ \u7684\u8def\u5f84\u5373\u53ef\uff0c\u5c06\u5904\u7406\u7684\u524d $10$ \u5c0f\u653e\u5728 $res1[~]$ \u4e2d\u3002\n\n\u518d\u5c06 $w[x][i](1\\le i\\le 10)$ \u7684\u503c\u653e\u5165 $res1[~]$ \u4e2d\u4e5f\u6765\u66f4\u65b0\uff0c\u6700\u540e\u6570\u7ec4\u524d $rk$ \u4e2a\u6570\u4e2d\u90a3\u4e9b\u4e0d\u4e3a\u8fd9\u4e2a\u5f88\u5927\u7684\u6570\u7684\u6570\u5c31\u662f\u7b54\u6848\u3002\n\n$lca=y$ \u548c\u5176\u4ed6\u60c5\u51b5\u7c7b\u4f3c\uff0c\u8be6\u89c1\u4ee3\u7801\u3002\n\n**\u6ce8\u610f\u65f6\u65f6\u6392\u5e8f\uff01**\n\n# \u4ee3\u7801\n\n```cpp\n//2022/1/4\n\n//2022/1/5\n\n//2022/1/10\n\nconst int INF=0x3f3f3f3f;\n\nconst int ma=1e5+5;\n\nstruct Gragh\n{\n\tint v;\n\t\n\tint nxt;\n};\n\nGragh gra[ma<<1];\n\nint head[ma],dep[ma],res1[21],res2[21];\n\nint fa[ma][21],w[ma][21];\n\nint dis[ma][21][21];\n//dis[i][j][k]:i \u5411\u4e0a\u8df3 2^{j}-1 \u6b65\u540e\u7b2c k \u5c0f\u7684\u503c \n\nint n,m,q;\n\nint idx;\n\ninline void add(int u,int v)\n{\n\tgra[++idx].v=v;\n\t\n\tgra[idx].nxt=head[u];\n\t\n\thead[u]=idx;\n}\n\ninline void dfs(int now,int fath,int depth)\n{\n\tfa[now][0]=fath;\n\t\n\tdep[now]=depth;\n\t\n\tfor(register int i=1;i<=20;i++)\n\t{\n\t\tfa[now][i]=fa[fa[now][i-1]][i-1];\n\t}\n\t\n\tfor(register int i=head[now];i;i=gra[i].nxt)\n\t{\n\t\tint v=gra[i].v;\n\t\t\n\t\tif(v!=fath)\n\t\t{\n\t\t\tdfs(v,now,depth+1);\n\t\t}\n\t}\n}\n\ninline int LCA(int x,int y)\n{\n\tif(dep[x]<dep[y])\n\t{\n\t\tswap(x,y);\n\t}\n\t\n\tfor(register int i=20;i>=0;i--)\n\t{\n\t\tif(dep[x]>=dep[y]+(1<<i))\n\t\t{\n\t\t\tx=fa[x][i];\n\t\t}\n\t}\n\t\n\tif(x==y)\n\t{\n\t\treturn x;\n\t}\n\t\n\tfor(register int i=20;i>=0;i--)\n\t{\n\t\tif(fa[x][i]!=fa[y][i])\n\t\t{\n\t\t\tx=fa[x][i];\n\t\t\t\n\t\t\ty=fa[y][i];\n\t\t}\n\t}\n\t\n\treturn fa[x][0];\n} \n\ninline void updata1(int x,int y)\n{\n\tmst(res1,0x3f);\n\t\n\tfor(register int i=20;i>=0;i--)\n\t{\n\t\tif(dep[x]>=dep[y]+(1<<i))\n\t\t{\n\t\t\tfor(register int j=1;j<=10;j++)\n\t\t\t{\n\t\t\t\tres1[j+10]=dis[x][i][j];\n\t\t\t}\n\t\t\t\n\t\t\tsort(res1+1,res1+20+1);\n\t\t\t\n\t\t\tx=fa[x][i];\n\t\t}\n\t}\n}\n\ninline void updata2(int x,int y)\n{\n\tmst(res2,0x3f);\n\t\n\tfor(register int i=20;i>=0;i--)\n\t{\n\t\tif(dep[x]>=dep[y]+(1<<i))\n\t\t{\n\t\t\tfor(register int j=1;j<=10;j++)\n\t\t\t{\n\t\t\t\tres2[j+10]=dis[x][i][j];\n\t\t\t}\n\t\t\t\n\t\t\tsort(res2+1,res2+20+1);\n\t\t\t\n\t\t\tx=fa[x][i];\n\t\t}\n\t}\n}\n\ninline void query(int x,int y,int rk)\n{\n\tint ans=0;\n\t\n\tint lca=LCA(x,y);\n\t\n\tif(lca==x)\n\t{\n\t\tupdata1(y,x);\n\t\t\n\t\tfor(register int i=1;i<=10;i++)\n\t\t{\n\t\t\tres1[i+10]=w[x][i];\n\t\t}\n\t\t\n\t\tsort(res1+1,res1+20+1);\n\t\t\n\t\tfor(register int i=1;i<=rk;i++)\n\t\t{\n\t\t\tif(res1[i]!=INF)\n\t\t\t{\n\t\t\t\tans++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tprintf(\"%d \",ans);\n\t\t\n\t\tfor(register int i=1;i<=rk;i++)\n\t\t{\n\t\t\tif(res1[i]!=INF)\n\t\t\t{\n\t\t\t\tprintf(\"%d \",res1[i]);\n\t\t\t}\n\t\t}\n\t\t\n\t\tenter();\n\t}\n\t\n\telse if(lca==y)\n\t{\n\t\tswap(x,y);\n\t\t\n\t\tupdata1(y,x);\n\t\t\n\t\tfor(register int i=1;i<=10;i++)\n\t\t{\n\t\t\tres1[i+10]=w[x][i];\n\t\t}\n\t\t\n\t\tsort(res1+1,res1+20+1);\n\t\t\n\t\tfor(register int i=1;i<=rk;i++)\n\t\t{\n\t\t\tif(res1[i]!=INF)\n\t\t\t{\n\t\t\t\tans++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tprintf(\"%d \",ans);\n\t\t\n\t\tfor(register int i=1;i<=rk;i++)\n\t\t{\n\t\t\tif(res1[i]!=INF)\n\t\t\t{\n\t\t\t\tprintf(\"%d \",res1[i]);\n\t\t\t}\n\t\t}\n\t\t\n\t\tenter();\n\t}\n\t\n\telse\n\t{\n\t\tupdata1(x,lca);\n\t\t\n\t\tupdata2(y,lca);\n\t\t\n\t\tfor(register int i=1;i<=10;i++)\n\t\t{\n\t\t\tres1[i+10]=res2[i];\n\t\t}\n\t\t\n\t\tsort(res1+1,res1+20+1);\n\t\t\n\t\tfor(register int i=1;i<=10;i++)\n\t\t{\n\t\t\tres1[i+10]=w[lca][i];\n\t\t}\n\t\t\n\t\tsort(res1+1,res1+20+1);\n\t\t\n\t\tfor(register int i=1;i<=rk;i++)\n\t\t{\n\t\t\tif(res1[i]!=INF)\n\t\t\t{\n\t\t\t\tans++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tprintf(\"%d \",ans);\n\t\t\n\t\tfor(register int i=1;i<=rk;i++)\n\t\t{\n\t\t\tif(res1[i]!=INF)\n\t\t\t{\n\t\t\t\tprintf(\"%d \",res1[i]);\n\t\t\t}\n\t\t}\n\t\t\n\t\tenter();\n\t}\n}\n\nint main(void)\n{\n\tmst(w,0x3f);mst(dis,0x3f);\n\t\n\tn=read(),m=read(),q=read();\n\t\n\tfor(register int i=1;i<n;i++)\n\t{\n\t\tint u=read(),v=read();\n\t\t\n\t\tadd(u,v),add(v,u);\n\t}\n\t\n\tfor(register int i=1;i<=m;i++)\n\t{\n\t\tint x=read();\n\t\t\n\t\tw[x][11]=i;\n\t\t\n\t\tsort(w[x]+1,w[x]+11+1);\n\t}\n\t\n\tdfs(1,0,1);\n\t\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tfor(register int j=1;j<=10;j++)\n\t\t{\n\t\t\tdis[i][0][j]=w[i][j];\n\t\t}\n\t}\n\t\n\tfor(register int j=1;j<=20;j++)\n\t{\n\t\tfor(register int i=1;i<=n;i++)\n\t\t{\n\t\t\tfor(register int k=1;k<=10;k++)\n\t\t\t{\n\t\t\t\tdis[i][j][k]=dis[fa[i][j-1]][j-1][k];\n\t\t\t\t\n\t\t\t\tdis[i][j][k+10]=dis[i][j-1][k];\n\t\t\t}\n\t\t\t\n\t\t\tsort(dis[i][j]+1,dis[i][j]+20+1);\n\t\t}\n\t}\n\t\n\twhile(q--)\n\t{\n\t\tint u=read(),v=read(),rk=read();\n\t\t\n\t\tquery(u,v,rk);\n\t}\n\t\n\treturn 0;\n}\n```",
        "postTime": 1641825100,
        "uid": 430409,
        "name": "Coros_Trusds",
        "ccfLevel": 6,
        "title": "CF587C Duff in the Army"
    },
    {
        "content": "## \u5206\u6790\n\n\u8bfb\u4e86\u4e0b\u9898\uff0c\u7acb\u9a6c\u5c31\u60f3\u5230\u4e86\u4e3b\u5e2d\u6811\uff0c\u5bf9\u6bcf\u4e2a\u70b9\u5b58\u4e00\u4e2a\u503c\u57df\u7ebf\u6bb5\u6811\uff0c\u5b58\u50a8\u5176\u5230\u6839\u7684\u8def\u5f84\u4e0a\u6709\u54ea\u4e9b\u70b9\uff0c$x$ \u5230 $y$ \u7684\u8def\u5f84\u5c31\u662f\u4ed6\u4eec\u7ebf\u6bb5\u6811\u5408\u8d77\u6765\u518d\u51cf\u53bb\u4e24\u500d $lca$ \u7684\u7ebf\u6bb5\u6811\uff0c\u518d\u628a $lca$ \u672c\u8eab\u6240\u542b\u70b9\u52a0\u4e0a\u5373\u53ef\u3002\n\n\u7136\u540e\u53d1\u73b0\u6bcf\u4e2a\u70b9\u5c31\u6bd4\u4ed6\u7239\u7ebf\u6bb5\u6811\u591a\u542b\u4e86\u5b83\u672c\u8eab\u6240\u542b\u7684\u70b9\uff08\u5c31\u662f\u90a3\u4e9b\u4f4f\u5b83\u90a3\u513f\u7684\uff09\u3002\u6240\u4ee5\u4e3b\u5e2d\u6811\u5c31\u53ef\u4ee5\u8f7b\u677e\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u4e86\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4e00\u4e2a\u57ce\u5e02\u53ef\u80fd\u542b\u591a\u4e2a\u4f4f\u6c11\uff0c\u6240\u4ee5\u5728\u4fee\u6539\u7ebf\u6bb5\u6811\u7684\u513f\u5b50\u65f6\u9700\u8981\u6ce8\u610f\u662f\u7ee7\u627f\u4e0a\u6b21\u4fee\u6539\u7684\u7ed3\u679c\uff0c\u8fd8\u662f\u7ee7\u627f\u5b83\u7236\u4eb2\u7684\u5bf9\u5e94\u4f4d\u7f6e\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline void read(int &res){\n\tchar c;\n\tint f=1;\n\tres=0;\n\tc=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9')res=(res<<1)+(res<<3)+c-48,c=getchar();\n\tres*=f;\n}\nint n,m,q;\nvector<int>v[100005];\nint head[100005],tot;\nstruct edge{\n\tint to,nex;\n}e[200005];\ninline void add(int qq,int mm){\n\te[++tot].to=mm;\n\te[tot].nex=head[qq];\n\thead[qq]=tot;\n}\nint root[100005],cnt;\nstruct node{\n\tint sum,ls,rs;\n}a[2000000];\nvoid build(int &rt,int l,int r){\n\tif(!rt)rt=++cnt;\n\tif(l==r)return;\n\tint mid=(l+r)>>1;\n\tbuild(a[rt].ls,l,mid);\n\tbuild(a[rt].rs,mid+1,r);\n}\nvoid modify(int rt,int rtt,int l,int r,int x){\n\tif(l==r){\n\t\ta[rtt].sum++;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tif(mid>=x){\n\t\tif(a[rtt].ls){//\u6bcf\u6b21\u4fee\u6539\u7684\u65f6\u5019\u90fd\u8981\u65b0\u5efa\u4e00\u6b21\uff0c\u8981\u4e0d\u4f60\u4f1a\u628a\u4f60\u7239\u7684\u4e1c\u897f\u4e5f\u6539\u4e86\uff08\u6539\u4e86\u4e00\u4e2a\u5c0f\u65f6\uff09 \n\t\t\tint k=++cnt;\n\t\t\ta[k]=a[a[rtt].ls];\n\t\t\ta[rtt].ls=k;\n\t\t}\n\t\telse {\n\t\t\tint k=++cnt;\n\t\t\ta[k]=a[a[rt].ls];\n\t\t\ta[rtt].ls=k;\n\t\t}\n\t\tif(!a[rtt].rs)a[rtt].rs=a[rt].rs;\n\t\tmodify(a[rt].ls,a[rtt].ls,l,mid,x);\n\t}\n\telse {\n\t\tif(a[rtt].rs){\n\t\t\tint k=++cnt;\n\t\t\ta[k]=a[a[rtt].rs];\n\t\t\ta[rtt].rs=k;\n\t\t}\n\t\telse {\n\t\t\tint k=++cnt;\n\t\t\ta[k]=a[a[rt].rs];\n\t\t\ta[rtt].rs=k;\n\t\t}\n\t\tif(!a[rtt].ls){\n\t\t\ta[rtt].ls=a[rt].ls;\n\t\t}\n\t\tmodify(a[rt].rs,a[rtt].rs,mid+1,r,x);\n\t}\n\ta[rtt].sum=a[a[rtt].ls].sum+a[a[rtt].rs].sum;\n}\nint fa[100005][17],dep[100005];\nvoid dfs(int u,int f){\n\tfa[u][0]=f;\n\tdep[u]=dep[f]+1;\n\troot[u]=++cnt;\n\ta[root[u]]=a[root[f]];//\u53ef\u80fd\u6ca1\u6709\u5c45\u6c11\u4f4f\u8fd9\u513f\uff0c\u6240\u4ee5\u5148\u5904\u7406\u4e00\u4e0b \n\tfor(int i=0;i<v[u].size();i++){\n\t\tmodify(root[f],root[u],1,m,v[u][i]);\n\t}\n\tfor(int i=head[u];i;i=e[i].nex){\n\t\tint vv=e[i].to;\n\t\tif(vv==f)continue;\n\t\tdfs(vv,u);\n\t}\n}\nvoid init(){//lca\u500d\u589e\u5199\u6cd5 \n\tfor(int i=1;i<=16;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tfa[j][i]=fa[fa[j][i-1]][i-1];\n\t\t}\n\t}\n}\nint lca(int x,int y){\n\tif(dep[x]<dep[y])swap(x,y);\n\tfor(int i=16;i>=0;i--){\n\t\tif(dep[fa[x][i]]>=dep[y])x=fa[x][i];\n\t}\n\tif(x==y)return x;\n\tfor(int i=16;i>=0;i--){\n\t\tif(fa[x][i]!=fa[y][i])x=fa[x][i],y=fa[y][i];\n\t}\n\treturn fa[x][0];\n}\nint query(int rt,int rtt,int rrt,int tr,int l,int r,int k){\n\tif(l==r)return l;\n\tint mid=(l+r)>>1,sa=a[a[rt].ls].sum+a[a[rtt].ls].sum-a[a[rrt].ls].sum-a[a[tr].ls].sum;//\u8fd9\u5e94\u8be5\u662f\u4e3b\u5e2d\u6811\u6700\u57fa\u7840\u7684\u4e1c\u897f\u5427 \n\tif(sa>=k)return query(a[rt].ls,a[rtt].ls,a[rrt].ls,a[tr].ls,l,mid,k);\n\telse return query(a[rt].rs,a[rtt].rs,a[rrt].rs,a[tr].rs,mid+1,r,k-sa);\n}\nsigned main()\n{\n\tread(n);read(m);read(q);\n\tfor(int i=1;i<n;i++){\n\t\tint x,y;\n\t\tread(x);read(y);\n\t\tadd(x,y);\n\t\tadd(y,x);\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tint x;\n\t\tread(x);\n\t\tv[x].push_back(i);\n\t}\n\tbuild(root[0],1,n);//\u9884\u5904\u7406\uff0c\u597d\u50cf\u4e0d\u5199\u8fd9\u4e2a\u4e5f\u53ef\u4ee5 \n\tdfs(1,0);\n\tinit();\n\tfor(int i=1;i<=q;i++){\n\t\tint x,y,aa;\n\t\tread(x);read(y);read(aa);\n\t\tint gg=lca(x,y);\n\t\tint kk=fa[gg][0];\n\t\tint ss=a[root[x]].sum+a[root[y]].sum-a[root[kk]].sum-a[root[gg]].sum;\n\t\tif(aa>ss)aa=ss;\n\t\tprintf(\"%d \",aa);\n\t\tfor(int j=1;j<=aa;j++){\n\t\t\tprintf(\"%d \",query(root[x],root[y],root[kk],root[gg],1,m,j));\n\t\t}\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n\n\n\n\n```\n",
        "postTime": 1635244541,
        "uid": 166410,
        "name": "\u6f20\u5bd2",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF587C Duff in the Army"
    },
    {
        "content": "\u4e3a\u4ec0\u4e48\u9898\u89e3\u90fd\u662f\u6811\u5256\uff0c\u500d\u589e\u5565\u7684\uff0c\u7ed9\u51fa\u4e00\u79cd\u4e3b\u5e2d\u6811\u7684\u505a\u6cd5\u3002\n\n### \u9898\u76ee\u5927\u610f\n\n\u7ed9\u4f60\u4e00\u68f5\u6811\uff0c\u6bcf\u4e2a\u6811\u4e0a\u7684\u8282\u70b9\u6709\u4e00\u4e9b\u5e26\u7f16\u53f7\u7684\u4eba\uff0c\u6c42 $u$ \u5230 $v$ \u7684\u8def\u5f84\u4e0a\u7f16\u53f7\u524d $k$ \u5c0f\u7684\u4eba\u3002\uff08$1\\leq n,m,q \\leq 10^5,1 \\leq k \\leq 10$\uff09\n\n### \u9898\u76ee\u5206\u6790\n\n\u9898\u76ee\u76f8\u5f53\u4e8e\u6c42\u8def\u5f84\u524d $k$ \u5927\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9 $u$\uff0c\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5b83\u5230\u6839\u7684\u8def\u5f84\u4e0a\u6709\u591a\u5c11\u4e2a\u4eba\uff0c\u5e76\u4ee5\u7f16\u53f7\u4e3a\u4e0b\u6807\u3002\n\n\u5728 dfs \u7684\u65f6\u5019\u76f4\u63a5\u628a $u$ \u63a5\u5728 $fa$ \u7684\u7ebf\u6bb5\u6811\u4e0a\uff0c\u50cf\u4e3b\u5e2d\u6811\u4e00\u6837\u7ef4\u62a4\u5c31\u884c\u4e86\u3002\n\n\u67e5\u8be2 $u$ \u5230 $v$ \u7684\u8def\u5f84\uff0c\u5c31\u76f8\u5f53\u4e8e\u662f\u67e5\u8be2 $u$ \u7684\u7ebf\u6bb5\u6811\u52a0\u4e0a $v$ \u7684\u7ebf\u6bb5\u6811\uff0c\u51cf\u53bb $lca$ \u7684\u7ebf\u6bb5\u6811\uff0c\u518d\u51cf\u53bb $fa_{lca}$ \u7684\u7ebf\u6bb5\u6811\uff08\u5bb9\u65a5\u4e00\u4e0b\uff09\u3002\n\n\u53ef\u662f\u4e3b\u5e2d\u6811\u53ea\u80fd\u67e5\u7b2c $k$ \u5c0f\uff0c\u600e\u4e48\u67e5\u524d $k$ \u5c0f\u7684\u6570\u5462\uff1f\n\n\u8003\u8651 $1 \\leq k \\leq 10$\uff0c\u76f4\u63a5\u66b4\u529b\u904d\u5386\u8f93\u51fa\u5c31\u884c\u4e86\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u73b0\u5728\u7ebf\u6bb5\u6811\u641c\u5230\u4e86\u4e00\u4e2a\u533a\u95f4 $[l,r]$\uff0c\u5982\u679c\u8fd9\u91cc\u7684\u6570\u7684\u4e2a\u6570\u5c0f\u4e8e\u7b49\u4e8e $k$\uff0c\u90a3\u5c31\u76f4\u63a5\u641c\u7d22\u5de6\u53f3\u513f\u5b50\uff0c\u641c\u5230\u5e95\u4e4b\u540e\u5c31\u8f93\u51fa\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define LC lc[x]\n#define RC rc[x]\nusing namespace std;\nvector<ll> v[100010];\nll n,m,q,head[100010],cnt=0;\nll rt[100010],tree[2000020],lc[2000020],rc[2000020],tot=0;\nll f[100010][22],dep[100010];\nstruct node{\n\tll nxt,to;\n}e[200020];\nvoid add(ll u,ll v){\n\te[++cnt].nxt=head[u];\n\te[cnt].to=v;\n\thead[u]=cnt;\n}\nvoid build(ll &x,ll l,ll r){\n\tx=++tot;\n\tif(l==r) return;\n\tll mid=(l+r)>>1;\n\tbuild(LC,l,mid);\n\tbuild(RC,mid+1,r);\n}\nvoid copy(ll x,ll y){\n\ttree[x]=tree[y];\n\tLC=lc[y];\n\tRC=rc[y];\n}\nvoid mdf(ll &x,ll y,ll l,ll r,ll pos){\n\tx=++tot;\n\tcopy(x,y);\n\ttree[x]++;\n\tif(l==r) return;\n\tll mid=(l+r)>>1;\n\tif(pos<=mid) mdf(LC,lc[y],l,mid,pos);\n\telse mdf(RC,rc[y],mid+1,r,pos);\n}\nvoid dfs(ll fa,ll u){\n\tdep[u]=dep[fa]+1;\n\tf[u][0]=fa;\n\tfor(ll i=1;i<=18;i++) f[u][i]=f[f[u][i-1]][i-1];\n\trt[u]=rt[fa];\n\tfor(ll i=0;i<v[u].size();i++) mdf(rt[u],rt[u],1,m,v[u][i]);//\u5efa\u4e3b\u5e2d\u6811 \n\tfor(ll i=head[u];i;i=e[i].nxt){\n\t\tll v=e[i].to;\n\t\tif(v==fa) continue;\n\t\tdfs(u,v);\n\t}\n}\nll get_lca(ll x,ll y){//\u500d\u589e\u6c42lca \n\tif(dep[x]<dep[y]) swap(x,y);\n\tfor(ll i=18;i>=0;i--) if(dep[f[x][i]]>=dep[y]) x=f[x][i];\n\tif(x==y) return x;\n\tfor(ll i=18;i>=0;i--){\n\t\tif(f[x][i]!=f[y][i]){\n\t\t\tx=f[x][i];\n\t\t\ty=f[y][i];\n\t\t}\n\t}\n\treturn f[x][0];\n}\nvoid query(ll a1,ll a2,ll a3,ll a4,ll l,ll r,ll k){\n\tif((tree[a1]+tree[a2]-tree[a3]-tree[a4])==0) return;//\u5982\u679c\u6ca1\u4eba\u5c31\u76f4\u63a5\u8fd4\u56de \n\tll mid=(l+r)>>1;\n\tif((tree[a1]+tree[a2]-tree[a3]-tree[a4])<=k){//\u5982\u679c\u5df2\u7ecf\u5c0f\u4e8e\u7b49\u4e8ek\u4e2a \n\t\tif(l==r){\n\t\t\tprintf(\"%lld \",l);//\u66b4\u529b\u8f93\u51fa\n\t\t\treturn;\n\t\t}\n\t\tquery(lc[a1],lc[a2],lc[a3],lc[a4],l,mid,k);\n\t\tquery(rc[a1],rc[a2],rc[a3],rc[a4],mid+1,r,k); \n\t\treturn;\n\t}\n\tll tmp=tree[lc[a1]]+tree[lc[a2]]-tree[lc[a3]]-tree[lc[a4]];\n\tquery(lc[a1],lc[a2],lc[a3],lc[a4],l,mid,k);//\u7531\u4e8e\u662f\u6c42\u524dk\u5c0f\uff0c\u800c\u4e0d\u662f\u7b2ck\u5c0f\uff0c\u5de6\u8fb9\u662f\u4e00\u5b9a\u8981\u641c\u7684 \n\tif(tmp<k) query(rc[a1],rc[a2],rc[a3],rc[a4],mid+1,r,k-tmp);//\u5982\u679c\u5de6\u8fb9\u4e2a\u6570\u4e0d\u591f\u518d\u641c\u53f3\u8fb9 \n}\nint main(){\n\tscanf(\"%lld %lld %lld\",&n,&m,&q);\n\tfor(ll i=1;i<n;i++){\n\t\tll u,v;\n\t\tscanf(\"%lld %lld\",&u,&v);\n\t\tadd(u,v);\n\t\tadd(v,u);\n\t}\n\tfor(ll i=1;i<=m;i++){\n\t\tll x;\n\t\tscanf(\"%lld\",&x);\n\t\tv[x].push_back(i);//vector\u5b58\u6bcf\u4e2a\u70b9\u6709\u54ea\u4e9b\u4eba \n\t}\n\tbuild(rt[0],1,m);\n\tdfs(0,1);\n\twhile(q--){\n\t\tll u,v,a;\n\t\tscanf(\"%lld %lld %lld\",&u,&v,&a);\n\t\tll lca=get_lca(u,v);\n\t\tll sum=tree[rt[u]]+tree[rt[v]]-tree[rt[lca]]-tree[rt[f[lca][0]]];//u->v\u7684\u8def\u5f84\u4e0a\u6709\u591a\u5c11\u4eba \n\t\ta=min(a,sum);//\u4e4b\u95f4\u53d6min\n\t\tprintf(\"%lld \",a); \n\t\tquery(rt[u],rt[v],rt[lca],rt[f[lca][0]],1,m,a);//\u83b7\u53d6\u7b54\u6848 \n\t\tprintf(\"\\n\");\n\t}\n} \n```",
        "postTime": 1632713850,
        "uid": 224336,
        "name": "AFewSuns",
        "ccfLevel": 8,
        "title": "\u3010\u9898\u89e3\u3011CF587C Duff in the Army"
    },
    {
        "content": "# \u6811\u5256+\u7ebf\u6bb5\u6811\n\n\u7531\u4e8e\u6bcf\u6b21\u8be2\u95ee\u6700\u591a10\u4e2a\uff0c\u6545\u53ef\u4ee5~~\u66b4\u529b~~\u7ef4\u62a4\u533a\u95f4\u524d10\u4e2a\u7f16\u53f7\n\n\u7ebf\u6bb5\u6811pushup\u548c\u6811\u5256\u67e5\u8be2\u7684\u65f6\u5019\u628a\u4e24\u4e2a\u8282\u70b9\u91cc\u7684\u503c\u6254\u8fdb\u4e00\u4e2aset\u91cc\u7136\u540e\u62ff\u51fa\u524d10\u4e2a\u6765\u5c31\u597d\u4e86\uff08\u3002\n\n\u4ee5\u4e0b\u662f\u6838\u5fc3\u4ee3\u7801\uff08\u5408\u5e76\uff09\n```\nstruct hehe{\n    int rk[11];\n};\nhehe merge(hehe x, hehe y)\n{\n    hehe ret;\n    set<int>se;\n    for(int i = 1; i <= 10 && x.rk[i]; i++)\n    {\n        se.insert(x.rk[i]);\n    }\n    for(int i = 1; i <= 10 && y.rk[i]; i++)\n    {\n        se.insert(y.rk[i]);\n    }\n    int tot = 1;\n    for(set<int>::iterator i = se.begin(); i != se.end() && tot <= 10; i++, tot++)\n    {\n        ret.rk[tot] = *i;\n    }\n    return ret;\n}\n\n```\n\u7ebf\u6bb5\u6811pushup\u76f4\u63a5$tr[p] = merge(tr[lson], tr[rson])$\n\n\u6811\u5256\u67e5\u8be2\u6bcf\u6b21\u8ba9ans\u548c\u67e5\u8be2\u51fa\u7684\u7ed3\u679cmerge\u4e00\u4e0b\uff0c\u6700\u540e\u8f93\u51faans\u524d\u5341\u5373\u53ef\n\n",
        "postTime": 1603510151,
        "uid": 75954,
        "name": "AuCloud",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF587C \u3010Duff in the Army\u3011"
    },
    {
        "content": "\n## \u9898\u89e3\uff1a\n\n\u8fd8\u662f\u6570\u636e\u8303\u56f4\u80fd\u7ed9\u51fa\u66f4\u591a\u7684\u63d0\u793a\u3002\n\n\u770b\u5230\u8fd9\u4e2a$a\\le 10$\uff0c\u8fd8\u8981\u8f93\u51fa\u524dk\u5c0f\u7684\u90fd\u662f\u8c01\uff0c\u90a3\u4e48\u5c31\u76f4\u63a5\u8003\u8651\u66b4\u529b\u7ef4\u62a4\u524d10\u5373\u53ef\u3002\n\n\u7136\u540e\u662f\u8def\u5f84\u7edf\u8ba1\u3002\u8003\u8651\u6811\u4e0a\u500d\u589e\u548c\u6811\u94fe\u5256\u5206\u3002\u4f46\u662f\u5bf9\u6bd4\u4e00\u4e0b\uff0c\u500d\u589e\u5bf9\u6811\u94fe\u7684\u7ef4\u62a4\u66f4\u5bb9\u6613\u7406\u89e3\u548c\u597d\u7801\u4e00\u4e9b\u3002\u6240\u4ee5\u91c7\u7528\u4e86vector\u7ef4\u62a4\u524d\u5341\u96c6\u5408+\u500d\u589e\u3002\n\n\u552f\u4e00\u9700\u8981\u6ce8\u610f\u7684\u70b9\u5c31\u662fvector\u7684\u5408\u5e76\u95ee\u9898\u3002\u53ef\u4ee5\u8003\u8651\u7c7b\u4f3c\u5f52\u5e76\u6392\u5e8f\u7684\u505a\u6cd5\uff0c\u628a\u4e24\u4e2avector\u5408\u5e76\u8fdb\u4e00\u4e2avector\u91cc\u3002\n\n\u5269\u4e0b\u7684\u5c31\u662f\u88f8\u7684\u6811\u4e0a\u500d\u589e\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<vector>\n#include<algorithm>\nusing namespace std;\nconst int maxn=1e5+10;\nint n,m,q;\nint tot,to[maxn<<1],nxt[maxn<<1],head[maxn];\nint fa[maxn][20],deep[maxn];\nvector<int> c[maxn];\nvector<int> set[maxn][20];\nvector<int> ans;\nvoid add(int x,int y)\n{\n\tto[++tot]=y;\n\tnxt[tot]=head[x];\n\thead[x]=tot;\n}\nvector<int> merge(vector<int> a,vector<int> b)\n{\n\tint i=0,j=0;\n\tvector<int> ret;\n\tret.clear();\n\twhile(i<a.size()&&j<b.size()&&ret.size()<10)\n\t{\n\t\tif(a[i]<b[j])\n\t\t\tret.push_back(a[i++]);\n\t\telse\n\t\t\tret.push_back(b[j++]);\n\t}\n\twhile(i<a.size()&&ret.size()<10)\n\t\tret.push_back(a[i++]);\n\twhile(j<b.size()&&ret.size()<10)\n\t\tret.push_back(b[j++]);\n\treturn ret;\n}\nvoid dfs(int x,int f)\n{\n\tdeep[x]=deep[f]+1;\n\tfa[x][0]=f;\n\tset[x][0]=c[x];\n\tfor(int i=1;i<=19;i++)\n\t{\n\t\tfa[x][i]=fa[fa[x][i-1]][i-1];\n\t\tset[x][i]=merge(set[x][i-1],set[fa[x][i-1]][i-1]);\n\t}\n\tfor(int i=head[x];i;i=nxt[i])\n\t{\n\t\tint y=to[i];\n\t\tif(y==f)\n\t\t\tcontinue;\n\t\tdfs(y,x);\n\t}\n}\nvector<int> solve(int x,int y)\n{\n\tvector<int> ret;\n\tret.clear();\n\tif(deep[x]<deep[y])\n\t\tswap(x,y);\n\tfor(int i=19;i>=0;i--)\n\t\tif(deep[fa[x][i]]>=deep[y])\n\t\t{\n\t\t\tret=merge(ret,set[x][i]);\n\t\t\tx=fa[x][i];\n\t\t}\n\tif(x==y)\n\t{\n\t\tret=merge(ret,set[x][0]);\n\t\treturn ret;\n\t}\n\tfor(int i=19;i>=0;i--)\n\t\tif(fa[x][i]!=fa[y][i])\n\t\t{\n\t\t\tret=merge(ret,set[x][i]);\n\t\t\tret=merge(ret,set[y][i]);\n\t\t\tx=fa[x][i];\n\t\t\ty=fa[y][i];\n\t\t}\n\tret=merge(ret,set[x][0]);\n\tif(x!=y)\n\t\tret=merge(ret,set[y][1]);\n\treturn ret;\n}\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&m,&q);\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tadd(x,y);\n\t\tadd(y,x);\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x;\n\t\tscanf(\"%d\",&x);\n\t\tc[x].push_back(i);\n\t}\n\tdfs(1,0);\n\twhile(q--)\n\t{\n\t\tint x,y,a;\n\t\tscanf(\"%d%d%d\",&x,&y,&a);\n\t\tans.clear();\n\t\tans=solve(x,y);\n\t\tint sz=ans.size();\n\t\tint k=min(sz,a);\n\t\tprintf(\"%d \",k);\n\t\tfor(int i=0;i<k;i++)\n\t\t\tprintf(\"%d \",ans[i]);\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1603503677,
        "uid": 175131,
        "name": "\u5085\u601d\u7ef4666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF587C \u3010Duff in the Army\u3011"
    },
    {
        "content": "# \u95f2\u626f\n\n\u8fd9\u9898\u7528\u500d\u589e\u505a\u7740\u611f\u89c9\u597d\u9ebb\u70e6\u554a\uff0c\u4e00\u4e2a\u662f\u8d70 $2^k$ \u6761\u8fb9\uff0c\u4e00\u4e2a\u662f\u8d70 $2^k$ \u4e2a\u70b9\uff0c\u7ec6\u8282\u4e0a\u8981\u6ce8\u610f\u4e00\u4e0b\u3002\n\n# \u9898\u9762\n\n[CF587C Duff in the Army](https://www.luogu.org/problem/CF587C)\n\n# Solution\n\n\u8fd9\u9053\u9898\u6709\u4e00\u4e2a\u5f88\u5173\u952e\u7684\u6027\u8d28\uff1a $a\\leq10$ \u3002\n\n\u8fd9\u662f\u4e00\u4e2a\u5f88\u5c0f\u7684\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u7ef4\u62a4\u3002\n\n\u7531\u4e8e\u662f\u6811\u4e0a\u7684\u8def\u5f84\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7528\u500d\u589e\u7ef4\u62a4\u3002\n\n\u6211\u4eec\u8bbe $f_{i,j}$ \u8868\u793a\u70b9 $i$ \u5411\u4e0a\u8d70 $2^k$ \u6761\u8fb9\u540e\u5230\u8fbe\u7684\u70b9\uff0c $node_{i,j}$ \u8868\u793a\u4ece $i$ \u5f00\u59cb\u7684 $2^j$ \u4e2a\u70b9\u7684\u7b54\u6848\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u50cf\u666e\u901a\u7684\u6811\u4e0a\u500d\u589e\u90a3\u6837\u505a\u4e86\uff0c\u5728\u5b9e\u73b0\u7ec6\u8282\u4e0a\u9700\u8981\u6ce8\u610f\u3002\n\n# Code\n\n```c++\n#include<bits/stdc++.h>\n#define del(a,i) memset(a,i,sizeof(a))\n#define ll long long\n#define inl inline\n#define il inl void\n#define it inl int\n#define ill inl ll\n#define re register\n#define ri re int\n#define rl re ll\n#define mid ((l+r)>>1)\n#define lowbit(x) (x&(-x))\n#define INF 0x3f3f3f3f\nusing namespace std;\ntemplate<class T>il read(T &x){\n\tint f=1;char k=getchar();x=0;\n\tfor(;k>'9'||k<'0';k=getchar()) if(k=='-') f=-1;\n\tfor(;k>='0'&&k<='9';k=getchar()) x=(x<<3)+(x<<1)+k-'0';\n\tx*=f;\n}\ntemplate<class T>il _print(T x){\n\tif(x/10) _print(x/10);\n\tputchar(x%10+'0');\n}\ntemplate<class T>il print(T x){\n\tif(x<0) putchar('-'),x=-x;\n\t_print(x);\n}\nll mul(ll a,ll b,ll mod){long double c=1.;return (a*b-(ll)(c*a*b/mod)*mod)%mod;}\nit qpow(int x,int m,int mod){\n\tint res=1,bas=x%mod;\n\twhile(m){\n\t\tif(m&1) res=(1ll*res*bas)%mod;\n\t\tbas=(1ll*bas*bas)%mod,m>>=1;\n\t}\n\treturn res%mod;\n}\nconst int MAXN = 1e5+5;\nint n,m,q,u,v,k,head[MAXN],num_edge,lg2[MAXN];\nstruct Arr{\n\tint val[15],len;\n\tArr(){del(val,0),len=0;}\n\til updata(int a){if(len<10) val[++len]=a;}\n}node[MAXN][20];\ninl Arr pushup(Arr a,Arr b){\n\tArr res;ri i=1,j=1;\n\twhile(i<=a.len&&j<=b.len&&res.len<10){\n\t\tif(a.val[i]<b.val[j]) res.val[++res.len]=a.val[i++];\n\t\telse res.val[++res.len]=b.val[j++];\n\t}\n    // \u4e3a\u4e86\u9632\u6b62\u6709\u4e00\u4e2a\u4e3a\u7a7a\uff08\u4f1a\u76f4\u63a5\u8df3\u51fa\u4e0a\u65b9\u5faa\u73af\uff09\n\twhile(i<=a.len&&res.len<10) res.val[++res.len]=a.val[i++];\n\twhile(j<=b.len&&res.len<10) res.val[++res.len]=b.val[j++];\n\treturn res;\n}\nstruct Edge{\n\tint next,to;\n\tEdge(){}\n\tEdge(int next,int to):next(next),to(to){}\n}edge[MAXN<<1];\nil add_edge(int u,int v){\n\tedge[++num_edge]=Edge(head[u],v),head[u]=num_edge;\n\tedge[++num_edge]=Edge(head[v],u),head[v]=num_edge;\n}\nint d[MAXN],f[MAXN][20];\nil DFS(int u,int fa){\n\tf[u][0]=fa;\n\tfor(ri i=1;(1<<i)<=d[u];++i) f[u][i]=f[f[u][i-1]][i-1],node[u][i]=pushup(node[u][i-1],node[f[u][i-1]][i-1]);\n\tfor(ri i=head[u];i;i=edge[i].next){\n\t\tif(edge[i].to==fa) continue;\n\t\td[edge[i].to]=d[u]+1,DFS(edge[i].to,u);\n\t}\n}\nint main(){\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\tread(n),read(m),read(q);\n\tfor(ri i=2;i<=n;++i) lg2[i]=lg2[i>>1]+1;\n\tfor(ri i=1;i<n;++i) read(u),read(v),add_edge(u,v);\n\tfor(ri i=1;i<=m;++i) read(u),node[u][0].updata(i);\n\tDFS(1,0);\n\tfor(ri i=1;i<=q;++i){\n\t\tread(u),read(v),read(k);\n\t\tArr ans;\n\t\tif(d[u]<d[v]) swap(u,v);\n\t\twhile(d[u]!=d[v]) ans=pushup(ans,node[u][lg2[d[u]-d[v]]]),u=f[u][lg2[d[u]-d[v]]];\n\t\tif(u==v){\n\t\t\tans=pushup(ans,node[v][0]);\n\t\t\tprintf(\"%d \",min(k,ans.len));\n\t\t\tfor(ri j=1;j<=min(k,ans.len);++j) printf(\"%d \",ans.val[j]);puts(\"\");\n\t\t\tcontinue;\n\t\t}\n\t\tfor(ri s=lg2[d[u]];s>=0;--s)\n\t\t\tif(f[u][s]!=f[v][s]){\n\t\t\t\tans=pushup(ans,node[u][s]);\n\t\t\t\tans=pushup(ans,node[v][s]);\n\t\t\t\tu=f[u][s],v=f[v][s];\n\t\t\t}\n\t\tans=pushup(ans,node[u][0]),ans=pushup(ans,node[v][0]),ans=pushup(ans,node[f[u][0]][0]);// \u8fd9 3 \u4e2a\u70b9\u6ca1\u6709\u7edf\u8ba1\u8fdb\u6765\n\t\tprintf(\"%d \",min(k,ans.len));\n\t\tfor(ri j=1;j<=min(k,ans.len);++j) printf(\"%d \",ans.val[j]);puts(\"\");\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1570607110,
        "uid": 122273,
        "name": "TheShadow",
        "ccfLevel": 0,
        "title": "CF587C Duff in the Army \u9898\u89e3"
    },
    {
        "content": "\u770b\u5230\u9898\u76ee\u4e2d$a<=10$\uff0c\u81ea\u7136\u5c31\u60f3\u5230\u7528\u66b4\u529b\u7ef4\u62a4\u8fd9\u4e2a\u4e1c\u4e1c\u3002\n\n\u8bbe\u500d\u589e\u6570\u7ec4$fa[u][i]$\u548c$minn[u][i]$\uff0c\u5176\u4e2d$minn$\u5b58\u7684\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u7ed3\u6784\u4f53\u4e2d\u5305\u542b\u4e24\u4e2a\u4e1c\u4e1c\uff1a\u4e00\u4e2a\u6570\u7ec4\u548c\u8fd9\u4e2a\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u4e2a\u6570\u3002\n\n$fa[u][i]$\u8868\u793a\u5565\u6211\u5c31\u4e0d\u8bf4\u4e86\uff0c$minn[u][i]$\u8868\u793a\u4ece$u$\u5230$fa[u][i]$\uff08\u5373$u$\u7684$i$\u500d\u7956\u5148\uff09\u4e2d\u524d$10$\u5c0f\u7684\u503c\u3002\n\n\u5408\u5e76\u5c31\u66b4\u529b\u5408\u5e76\uff0c\u6bcf\u6b21\u770b\u54ea\u4e2a\u5c0f\u5c31\u52a0\u54ea\u4e2a\uff0c\u67e5\u627e\u5c31\u6309$lca$\u7684\u65b9\u5f0f\u67e5\u627e\u3002\n\n~~\u8bf4\u5b9e\u8bdd\u633a\u66b4\u529b\u7684~~\n\n\u6700\u540e\u7684\u4ee3\u7801+\u6ce8\u91ca\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n \n#define N 100010\n#define A 15\n#define K 20\n#define INF 0x7fffffff\n \nusing namespace std;\n \nstruct data\n{\n    int tot,num[A];\n    void init()\n    {\n        for(int i=1;i<=11;i++)\n            num[i]=INF;\n    }\n    void add(int x)\n    {\n        if(tot==10)\n            return;\n        num[++tot]=x;//\u4e3a\u5565add\u65f6\u4e0d\u7528\u6392\u5e8f\uff1f\u56e0\u4e3a\u4e3b\u7a0b\u5e8f\u4e2d\u63d2\u5165\u65f6\u5c31\u662f\u6709\u5e8f\u7684\n    }\n}t[N],minn[N][K],none;\n \nint n,m,q;\nint cnt,head[N],nxt[N<<1],to[N<<1];\nint fa[N][K],d[N];\n \nvoid adde(int u,int v)\n{\n    to[++cnt]=v;\n    nxt[cnt]=head[u];\n    head[u]=cnt;\n}\n \ndata merge(data a,data b,int t=10)//\u66b4\u529bmerge\n{\n    data c=none;\n    int x=1,y=1;\n    while(x<=a.tot&&y<=b.tot&&c.tot<t)\n    {\n        if(a.num[x]<b.num[y])c.num[++c.tot]=a.num[x++];\n        else c.num[++c.tot]=b.num[y++];\n    }\n    while(x<=a.tot&&c.tot<t)\n        c.num[++c.tot]=a.num[x++];\n    while(y<=b.tot&&c.tot<t)\n        c.num[++c.tot]=b.num[y++];\n    return c;\n}\n \nvoid dfs(int u)\n{\n    for(int i=1;i<=17;i++)//\u5408\u5e76\u500d\u589e\u6570\u7ec4\n    {\n        fa[u][i]=fa[fa[u][i-1]][i-1];\n        minn[u][i]=merge(minn[u][i-1],minn[fa[u][i-1]][i-1]);\n    }\n    for(int i=head[u];i;i=nxt[i])\n    {\n        if(to[i]!=fa[u][0])\n        {\n            d[to[i]]=d[u]+1;\n            fa[to[i]][0]=u;\n            minn[to[i]][0]=t[u];\n            dfs(to[i]);\n        }\n    }\n}\n \ndata lca(int a,int b,int x)\n{\n    data ans=none;\n    if(d[a]<d[b])swap(a,b);\n    ans=merge(ans,t[a],x);\n    for(int i=17;i>=0;i--)\n        if(d[a]-(1<<i)>=d[b])\n            ans=merge(ans,minn[a][i],x),a=fa[a][i];\n    if(a==b)\n        return ans;\n    ans=merge(ans,t[b],x);\n    for(int i=17;i>=0;i--)\n    {\n        if(fa[a][i]!=fa[b][i])\n        {\n            ans=merge(ans,merge(minn[a][i],minn[b][i],x),x);\n            a=fa[a][i],b=fa[b][i];\n        }\n    }\n    ans=merge(ans,minn[a][0],x);\n    return ans;\n}\n \nint main()\n{\n    none.init();\n    scanf(\"%d%d%d\",&n,&m,&q);\n    for(int i=1;i<=n;i++)\n        t[i].init();\n    for(int i=1;i<n;i++)\n    {\n        int u,v;\n        scanf(\"%d%d\",&u,&v);\n        adde(u,v),adde(v,u);\n    }\n    for(int i=1;i<=m;i++)\n    {\n        int c;\n        scanf(\"%d\",&c);\n        t[c].add(i);\n    }\n    dfs(1);\n    while(q--)\n    {\n        int u,v,a;\n        scanf(\"%d%d%d\",&u,&v,&a);\n        data t=lca(u,v,a);\n        if(t.tot)\n        {\n            printf(\"%d \",t.tot);\n            for(int i=1;i<=t.tot;i++)\n                printf(\"%d \",t.num[i]);\n            puts(\"\");\n        }\n        else\n            puts(\"0\");\n    }\n    return 0;\n}\n```\n",
        "postTime": 1569994229,
        "uid": 118318,
        "name": "ez_lcw",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF587C \u3010Duff in the Army\u3011"
    },
    {
        "content": "\u5f88\u660e\u663e\u7684\u4e00\u9053\u4e3b\u5e2d\u6811\u554a  \n\u4e3a\u4ec0\u4e48\u90fd\u8981\u7528\u6811\u94fe\u5256\u5206\u5462qwq\n\n\u5efa\u51fa\u6bcf\u4e2a\u70b9\u7684\u7ebf\u6bb5\u6811\uff0c\u8bb0\u5f55\u6743\u503c\u4e3a\u4ed6\u5230\u6839(\u968f\u4fbf\u94a6\u70b9\u7684)\u7684\u6240\u6709\u70b9\u7684\u4eba\u7684\u8eab\u4efd\u53f7\uff0c\u7136\u540e\u7528\u5dee\u5206\u7684\u601d\u8def\u8fd8\u539f\u51fa\u6574\u6761\u8def\u5f84\u7684\u7ebf\u6bb5\u6811\uff0c\u76f4\u63a5\u67e5\u8be2\u7b2c$k$\u5c0f\u5c31\u53ef\u4ee5\u4e86\n\n\u5927\u5e38\u6570\u4ee3\u7801\u5927\u6982\u4e5f\u5c31400ms\u5de6\u53f3\n\n\u4ee3\u7801\u5982\u4e0b:\n```cpp\n#include<bits/stdc++.h>\n#define lson tr[now].l\n#define rson tr[now].r\nusing namespace std;\n\nstruct tree\n{\n    int l,r,sum;\n}tr[5000050];\n\nint n,m,q,cnt,rt[100010],fa[100010][18],deep[100010];\nvector<int> g[100010],op[100010];\nint N=100001;\n\nint push_up(int now)\n{\n\ttr[now].sum=tr[lson].sum+tr[rson].sum;\n}\n\nint insert(int &now,int f,int l,int r,int pos)\n{\n\tnow=++cnt;\n\tif(l==r)\n\t{\n\t\ttr[now].sum=tr[f].sum+1;\n\t\treturn 0;\n\t}\n\tint mid=(l+r)>>1;\n\tif(pos<=mid)\n\t{\n\t\tinsert(lson,tr[f].l,l,mid,pos);\n\t\trson=tr[f].r;\n\t}\n\telse\n\t{\n\t\tlson=tr[f].l;\n\t\tinsert(rson,tr[f].r,mid+1,r,pos);\n\t}\n\tpush_up(now);\n}\n\nint query(int a1,int a2,int a3,int a4,int l,int r,int k)\n{\n\tif(l==r) return l;\n\tint sz=tr[tr[a1].l].sum+tr[tr[a2].l].sum-tr[tr[a3].l].sum-tr[tr[a4].l].sum;\n\tint mid=(l+r)>>1;\n\tif(sz>=k)\n\t{\n\t\treturn query(tr[a1].l,tr[a2].l,tr[a3].l,tr[a4].l,l,mid,k);\n\t}\n\telse\n\t{\n\t\treturn query(tr[a1].r,tr[a2].r,tr[a3].r,tr[a4].r,mid+1,r,k-sz);\n\t}\n}\n\nint dfs(int now,int f,int dep)\n{\n\tfa[now][0]=f;\n\tdeep[now]=dep;\n\tfor(int i=1;i<=17;i++)\n\t{\n\t\tfa[now][i]=fa[fa[now][i-1]][i-1];\n\t}\n\tfor(int i=0;i<g[now].size();i++)\n\t{\n\t\tif(g[now][i]==f) continue;\n\t\tdfs(g[now][i],now,dep+1);\n\t}\n}\n\nint lca(int x,int y)\n{\n\tif(deep[y]>deep[x]) swap(x,y);\n\tfor(int i=17;i>=0;i--)\n\t{\n\t\tif(deep[fa[x][i]]>=deep[y]) x=fa[x][i];\n\t}\n\tif(x==y) return x;\n\tfor(int i=17;i>=0;i--)\n\t{\n\t\tif(fa[x][i]!=fa[y][i]) x=fa[x][i],y=fa[y][i];\n\t}\n\treturn fa[x][0];\n}\n\nint dfs2(int now,int f)\n{\n\tif(op[now].size()==0) rt[now]=++cnt,tr[rt[now]].l=tr[rt[f]].l,tr[rt[now]].r=tr[rt[f]].r,push_up(rt[now]);\n\telse insert(rt[now],rt[f],1,N,op[now][0]);\n\tfor(int i=1;i<op[now].size();i++)\n\t{\n\t\tinsert(rt[now],rt[now],1,N,op[now][i]);\n\t}\n\tfor(int i=0;i<g[now].size();i++)\n\t{\n\t\tif(g[now][i]==f) continue;\n\t\tdfs2(g[now][i],now);\n\t}\n}\n\nint print(int now)\n{\n\tprintf(\"%d \",tr[now].sum);\n\tif(lson) print(lson);\n\tif(rson) print(rson);\n}\n\nint main()\n{\n    scanf(\"%d%d%d\",&n,&m,&q);\n    int from,to,val;\n    for(int i=1;i<n;i++)\n    {\n        scanf(\"%d%d\",&from,&to);\n        g[from].push_back(to);\n        g[to].push_back(from);\n    }\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d\",&to);\n        op[to].push_back(i);\n    }\n    dfs(1,0,1);\n    dfs2(1,0);\n    while(q--)\n    {\n    \tscanf(\"%d%d%d\",&from,&to,&val);\n    \tint anc=lca(from,to);\n    \tint fan=fa[anc][0];\n    \tint sz=tr[rt[from]].sum+tr[rt[to]].sum-tr[rt[anc]].sum-tr[rt[fan]].sum;\n    \tval=min(sz,val);\n    \tprintf(\"%d \",val);\n    \tfor(int i=1;i<=val;i++)\n    \t{\n    \t\tprintf(\"%d \",query(rt[from],rt[to],rt[anc],rt[fan],1,N,i));\n\t\t}\n    \tputs(\"\");\n\t}\n}\n```",
        "postTime": 1540189472,
        "uid": 48740,
        "name": "Styx",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF587C \u3010Duff in the Army\u3011"
    }
]