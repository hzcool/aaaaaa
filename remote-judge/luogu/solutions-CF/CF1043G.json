[
    {
        "content": "- Upd on 2022.8.28\uff1a\u4fee\u6539\u8868\u8ff0\u3002\n\n> [CF1043G Speckled Band](https://www.luogu.com.cn/problem/CF1043G)\n\n\u6613\u77e5\u7b54\u6848\u4e0d\u8d85\u8fc7 $4$\uff0c\u56e0\u4e3a\u82e5\u51fa\u73b0\u4e24\u4e2a\u76f8\u7b49\u7684\u5b57\u7b26\uff0c\u53ef\u4ee5\u7528 $bacad$ \u7684\u65b9\u5f0f\u5206\u5272\u5b57\u7b26\u4e32\u3002\u56e0\u6b64\u6211\u4eec\u5c1d\u8bd5\u5bf9\u6bcf\u79cd\u60c5\u51b5\u5206\u522b\u8ba8\u8bba\u4e00\u4e0b\uff0c\u4ee4 $t = s_{l\\sim r}$\u3002\n\n\u663e\u7136\uff0c\u7b54\u6848\u4e3a $-1$ \u5f53\u4e14\u4ec5\u5f53 $t$ \u4e0d\u5305\u542b\u76f8\u540c\u5b57\u7b26\u3002\n\n\u82e5\u7b54\u6848\u4e3a $1$\uff0c\u5219 $t$ \u6709\u6574\u9664\u5b83\u957f\u5ea6\u7684\u5468\u671f\uff0c\u7b49\u4ef7\u4e8e $t$ \u6709\u957f\u4e3a $|t| - d$ \u7684 border\u3002\u679a\u4e3e\u56e0\u6570\u5224\u4e00\u4e0b\u5373\u53ef\uff0c\u7528\u54c8\u5e0c\u6216\u5404\u79cd\u540e\u7f00\u5b57\u7b26\u4e32\u7ed3\u6784\u5747\u53ef\u3002\n\n\u82e5\u7b54\u6848\u662f $2$\uff0c\u5219 $t$ \u5fc5\u7136\u5f62\u5982 $aba$\uff0c$aab$ \u6216 $abb$\uff1a\u82e5 $t$ \u5b58\u5728 border \u5219\u5b58\u5728\u4e0d\u76f8\u4ea4 border\uff0c\u76f4\u63a5\u628a border \u5272\u6765\u5373\u53ef\uff1b\u5f53 $t$ \u4e0d\u5b58\u5728 border \u65f6\uff0c\u5b83\u7684\u4e24\u7aef\u4e0d\u540c\uff0c\u5f62\u5982 $a * b$\u3002\u82e5\u5f62\u5982 $ab * ab$ \u5219\u5b58\u5728 border\uff0c\u77db\u76fe\uff0c\u56e0\u6b64\u5f62\u5982 $aa * b$ \u6216 $a * bb$\uff0c\u53ef\u8f6c\u5316\u6210 $aab$ \u6216 $abb$\u3002\n\n$aba$ \u8fd9\u79cd\u60c5\u51b5\u6709\u4e9b\u68d8\u624b\uff0c\u6211\u4eec\u653e\u5728\u6700\u540e\u8ba8\u8bba\u3002$aab$ \u548c $baa$ \u672c\u8d28\u4e0a\u662f\u4e00\u6837\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7 \u201c\u4f18\u79c0\u7684\u62c6\u5206\u201d \u679a\u4e3e\u957f\u5ea6 + \u8bbe\u7f6e\u5173\u952e\u70b9\u7684\u5957\u8def\u6c42\u51fa\u6240\u6709\u5f62\u5982 $aa$ \u7684\u5b57\u7b26\u4e32\u7684\u51fa\u73b0\u4f4d\u7f6e\uff0c\u5f62\u6210\u5171 $n\\ln n$ \u4e2a\u533a\u95f4\u3002\u7ef4\u62a4 $lft_i$ \u8868\u793a\u4ece $i$ \u5f00\u59cb\u6700\u77ed\u7684\u5f62\u5982 $aa$ \u7684\u5b57\u7b26\u4e32\u957f\u5ea6\uff0c$rt_i$ \u5219\u8868\u793a\u4ee5 $i$ \u7ed3\u5c3e\u7684\u3002\u6bcf\u4e2a\u533a\u95f4\u76f8\u5f53\u4e8e\u4e3a $lft$ \u548c $rt$ \u533a\u95f4 $\\rm checkmin$\u3002\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u957f\u5ea6\uff0c\u5e76\u67e5\u96c6\u7ef4\u62a4\u3002\n\n\u82e5\u7b54\u6848\u4e3a $3$\uff0c\u9996\u5148\u4e24\u7aef\u5fc5\u7136\u4e0d\u7b49\uff0c\u5f62\u5982 $a * b$\u3002\u82e5 $*$ \u4e2d\u51fa\u73b0 $a$ \u6216 $b$\uff0c\u90a3\u4e48\u76f4\u63a5 $abcb$ \u6216\u8005 $acab$ \u5373\u53ef\u3002\u53ea\u9700\u5224 $s_l$ \u548c $s_r$ \u662f\u5426\u5728 $s_{l + 1\\sim r - 1}$ \u5f53\u4e2d\u51fa\u73b0\u8fc7\u3002\u5426\u5219\u6839\u636e\u51fa\u73b0\u6b21\u6570 $\\geq 2$ \u7684\u9650\u5236\uff0c\u53ea\u80fd\u4e3a $ac \\cdots cb$\uff0c\u7b80\u5316\u4e3a $accb$\u3002\u56e0\u4e3a\u7ef4\u62a4\u4e86 $lft$ \u8fd9\u4e2a\u4fe1\u606f\uff0c\u76f4\u63a5\u5224\u65ad\u662f\u5426\u6709 $\\min\\limits_{i = l} ^ r (i + lft_i - 1) \\leq r$ \u5373\u53ef\u3002\n\n\u82e5\u4e0a\u8ff0\u6761\u4ef6\u5747\u4e0d\u7b26\u5408\uff0c\u5219\u7b54\u6848\u4e3a $4$\u3002\n\n\u6700\u540e\u89e3\u51b3\u4e00\u4e2a\u9057\u7559\u95ee\u9898\uff1a\u6c42\u4e00\u4e2a\u5b50\u4e32\u662f\u5426\u5b58\u5728 border\u3002\u5f53\u7136\u8fd9\u53ef\u4ee5\u901a\u8fc7 \u201cborder \u7684\u56db\u79cd\u6c42\u6cd5\u201d \u7684 border \u8bba\u6216 SAM + \u6811\u5256\u89e3\u51b3\uff0c\u4f46\u56e0\u4e3a\u53ea\u9700\u5224\u65ad border \u7684\u5b58\u5728\u6027\uff0c\u6240\u4ee5\u5b58\u5728\u4e00\u4e2a\u4f18\u7f8e\u4e14\u5de7\u5999\u7684\u6839\u53f7\u505a\u6cd5\u3002\n\n\u82e5 border \u76f8\u4ea4\uff0c\u5219\u5fc5\u7136\u5f62\u6210\u957f\u5ea6\u66f4\u77ed\u7684 border\u3002\u56e0\u6b64\u6211\u4eec\u4e0d\u59a8 **\u94a6\u5b9a border \u4e0d\u4ea4**\uff0c\u5f97\u5230\u6839\u53f7\u5206\u6cbb\u505a\u6cd5\uff1a\u82e5 border \u957f\u5ea6\u5c0f\u4e8e $\\sqrt n$\uff0c\u76f4\u63a5\u679a\u4e3e\u3002\u82e5 border \u957f\u5ea6\u4e0d\u5c0f\u4e8e $\\sqrt n$\uff0c\u90a3\u4e48\u5b83\u5728\u6574\u4e2a\u5b57\u7b26\u4e32\u4e2d\u7684\u51fa\u73b0\u6b21\u6570\u4e0d\u8d85\u8fc7 $\\sqrt n$\uff0c\u53ef\u5728\u540e\u7f00\u6570\u7ec4\u4e0a\u679a\u4e3e $l$ \u540e\u7f00\u7684\u6392\u540d\u7684\u534a\u5f84\u4e3a $\\sqrt n$ \u7684\u6392\u540d\u90bb\u57df\u5224\u65ad\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n\\log n + q\\sqrt n)$\uff0c\u4f46\u662f\u5f88\u4f18\u7f8e\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing pii = pair<int, int>;\n#define fi first\n#define se second\n#define TIME 1e3 * clock() / CLOCKS_PER_SEC\nbool Mbe;\nconstexpr int K = 18;\nconstexpr int N = 2e5 + 5;\nchar s[N];\nint n, q, lg[N], nxt[N], pre[N], pos[128], st[K][N];\nstruct SA {\n  int sa[N], rk[N], ork[N], buc[N], id[N], mi[K][N];\n  bool cmp(int a, int b, int w) {return ork[a] == ork[b] && ork[a + w] == ork[b + w];}\n  void build(char *s) {\n    int m = 1 << 7, p = 0;\n    for(int i = 1; i <= n; i++) buc[rk[i] = s[i]]++;\n    for(int i = 1; i <= m; i++) buc[i] += buc[i - 1];\n    for(int i = n; i; i--) sa[buc[rk[i]]--] = i;\n    for(int w = 1; ; w <<= 1, m = p, p = 0) {\n      for(int i = n - w + 1; i <= n; i++) id[++p] = i;\n      for(int i = 1; i <= n; i++) if(sa[i] > w) id[++p] = sa[i] - w;\n      memset(buc, 0, sizeof(buc));\n      memcpy(ork, rk, sizeof(rk));\n      p = 0;\n      for(int i = 1; i <= n; i++) buc[rk[i]]++;\n      for(int i = 1; i <= m; i++) buc[i] += buc[i - 1];\n      for(int i = n; i; i--) sa[buc[rk[id[i]]]--] = id[i];\n      for(int i = 1; i <= n; i++) rk[sa[i]] = cmp(sa[i - 1], sa[i], w) ? p : ++p;\n      if(p == n) break;\n    }\n    for(int i = 1, k = 0; i <= n; i++) {\n      if(k) k--;\n      while(s[i + k] == s[sa[rk[i] - 1] + k]) k++;\n      mi[0][rk[i]] = k;\n    }\n    for(int i = 1; i <= lg[n]; i++)\n      for(int j = 1; j + (1 << i) - 1 <= n; j++)\n        mi[i][j] = min(mi[i - 1][j], mi[i - 1][j + (1 << i - 1)]);\n  }\n  int lcp(int a, int b) {\n    assert(a != b);\n    if((a = rk[a]) > (b = rk[b])) swap(a, b);\n    int d = lg[b - a++];\n    return min(mi[d][a], mi[d][b - (1 << d) + 1]);\n  }\n} sa, rev;\nstruct dsu {\n  int fa[N], val[N];\n  void init() {\n    for(int i = 1; i <= n + 1; i++) fa[i] = i; // n -> n + 1\n    memset(val, 0x3f, sizeof(val)); // add this line\n  }\n  int find(int x) {return fa[x] == x ? x : fa[x] = find(fa[x]);}\n  void modify(int l, int r, int v) {\n    if(l > r) return; // add this line\n    while(1) {\n      int p = find(l);\n      if(p > r) break;\n      val[p] = v, fa[p] = p + 1;\n    }\n  }\n} lft, rt;\nbool Med;\nint main() {\n  fprintf(stderr, \"%.3lf MB\\n\", (&Mbe - &Med) / 1048576.0);\n  #ifdef ALEX_WEI\n    FILE* IN = freopen(\"1.in\", \"r\", stdin);\n    FILE* OUT = freopen(\"1.out\", \"w\", stdout);\n  #endif\n  ios::sync_with_stdio(0);\n  cin >> n >> s + 1;\n  for(int i = 2; i <= n; i++) lg[i] = lg[i >> 1] + 1;\n  for(int i = 1; i <= n; i++) pre[i] = pos[s[i]], pos[s[i]] = i;\n  memset(pos, 0x3f, sizeof(pos)); // 0 -> 0x3f\n  for(int i = n; i; i--) nxt[i] = pos[s[i]], pos[s[i]] = i;\n  sa.build(s);\n  reverse(s + 1, s + n + 1);\n  rev.build(s);\n  lft.init(), rt.init();\n  for(int i = 1; i * 2 <= n; i++)\n    for(int p = i, q = i + i; q <= n; p += i, q += i) {\n      int L = rev.lcp(n - p + 1, n - q + 1), R = sa.lcp(p, q);\n      int l = p - L + 1, r = q + R - 1;\n      lft.modify(l, r - 2 * i + 1, i * 2);\n      rt.modify(l + 2 * i - 1, r, i * 2);\n    }\n  for(int i = 1; i <= n; i++) st[0][i] = i + lft.val[i] - 1;\n  for(int i = 1; i <= lg[n]; i++)\n    for(int j = 1; j + (1 << i) - 1 <= n; j++)\n      st[i][j] = min(st[i - 1][j], st[i - 1][j + (1 << i - 1)]);\n  int B = 300;\n  cin >> q;\n  for(int i = 1; i <= q; i++) {\n    int l, r, L;\n    cin >> l >> r, L = r - l + 1;\n    bool found = 0;\n    for(int j = l; j < r && !found; j++) found |= nxt[j] <= r;\n    if(!found) {cout << \"-1\\n\"; continue;}\n    found = 0;\n    for(int d = 1; d * d <= L; d++)\n      if(L % d == 0) {\n        found |= sa.lcp(l, l + d) >= L - d;\n        if(d != 1) found |= sa.lcp(l, l + L / d) >= L - L / d;\n      }\n    if(found) {cout << \"1\\n\"; continue;}\n    if(l + lft.val[l] - 1 <= r || r - rt.val[r] + 1 >= l) {cout << \"2\\n\"; continue;}\n    int lim = min(L - 1, B);\n    for(int i = 1; i <= lim; i++) found |= sa.lcp(l, r - i + 1) >= i;\n    if(found) {cout << \"2\\n\"; continue;}\n    int lcp = N;\n    for(int i = sa.rk[l] - 1; i && !found; i--) {\n      if(sa.mi[0][i + 1] < B) break;\n      int q = sa.sa[i];\n      lcp = min(lcp, sa.mi[0][i + 1]);\n      found |= q > l && q <= r && q + lcp - 1 >= r;\n    }\n    lcp = N;\n    for(int i = sa.rk[l] + 1; i <= n && !found; i++) {\n      if(sa.mi[0][i] < B) break;\n      int q = sa.sa[i];\n      lcp = min(lcp, sa.mi[0][i]);\n      found |= q > l && q <= r && q + lcp - 1 >= r;\n    }\n    if(found) {cout << \"2\\n\"; continue;}\n    if(nxt[l] <= r || pre[r] >= l) {cout << \"3\\n\"; continue;}\n    int d = lg[L];\n    if(min(st[d][l], st[d][r - (1 << d) + 1]) <= r) cout << \"3\\n\";\n    else cout << \"4\\n\";\n  }\n  cerr << TIME << \" ms\\n\";\n  return 0;\n}\n/*\n2022/8/28\nauthor: Alex_Wei\nstart coding: 6:44\nfinish debugging: 7:40\n*/\n```",
        "postTime": 1649381026,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "CF1043G Speckled Band"
    },
    {
        "content": "\u8003\u8651\u5230 kkksx \u5927\u81f4\u65b9\u5411\u8bb2\u7684\u5f88\u6e05\u695a\uff0c\u6211\u53ea\u7b80\u8ff0\u4e00\u4e0b\u672c\u9898\u7684 polylog \u89e3\u6cd5\u3002\n\n### \u5224\u65ad\u533a\u95f4\u662f\u5426\u5b58\u5728\u5faa\u73af\u8282\uff08\u975e\u672c\u8eab\uff09\n\n\u663e\u7136\uff0c\u82e5\u4e00\u4e2a\u957f\u5ea6\u4e0d\u884c\uff0c\u90a3\u4e48\u5176\u56e0\u6570\u4e5f\u4e0d\u884c\u3002\n\n\u90a3\u4e48\u679a\u4e3e $p$ \u4e3a\u533a\u95f4\u957f\u5ea6 $len$ \u7684\u8d28\u56e0\u5b50\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad $\\dfrac {len} p$ \u662f\u5426\u53ef\u884c\u5373\u53ef\u3002\n\n\u5373 $[s[l,r-\\dfrac {len} p]=[l+\\dfrac {len} p,r]]$\u3002\n\nhash \u6216 SA \u4e4b\u7c7b\u5747\u53ef\u3002$O(\\log n)$ \u5355\u6b21\u3002\n\n### \u5224\u65ad\u533a\u95f4\u662f\u5426\u5b58\u5728\u4e0d\u91cd\u53e0\u7684\u76f8\u7b49\u524d\u540e\u7f00\n\n\u5373\u5224\u65ad\u533a\u95f4\u662f\u5426\u5b58\u5728\u8d77\u70b9 $\\in [\\lceil \\dfrac {l+r+1} 2\\rceil,r] $ \u7684 border\u3002\n\n\u53ef\u4ee5\u5957\u7528\u533a\u95f4 border \u7684\u505a\u6cd5\u3002\n\n\u8bbe border \u7684\u8d77\u70b9\u4e3a $i$\uff0c\u90a3\u4e48 $r-i+1\\le lcp(l,i)$\u3002\n\n\u5efa\u51fa\u53cd\u4e32\u7684 SAM\uff0c\u8bbe\u70b9 $i$ \u5728 SAM \u4e0a\u7684\u4f4d\u7f6e\u4e3a $rk_i$\uff0c\u663e\u7136 $r-i+1\\le len_{lca(rk_l,rk_i)}$\u3002\n\n\u626b\u63cf\u7ebf\uff0c\u626b\u5230 $\\lceil \\dfrac {l+r+1} 2\\rceil$ \u65f6\u52a0\u5165\u8be2\u95ee\uff0c\u626b\u5230 $r+1$ \u65f6\u5220\u9664\u8be5\u8be2\u95ee\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e2a $i$\uff0c\u6211\u4eec\u53d6\u51fa\u6240\u6709\u7684\u6ee1\u8db3\u8fd9\u4e2a $i$ \u662f\u8be2\u95ee\u533a\u95f4 border \u7684\u8be2\u95ee\u5373\u53ef\u3002\n\n\u5bf9 parent tree \u8f7b\u91cd\u94fe\u5256\u5206\uff0c\u4e00\u6761\u5230\u6839\u7684\u8def\u5f84\u5c31\u88ab\u62c6\u6210\u4e86 $O(\\log n)$ \u6761\u91cd\u94fe\u7684\u524d\u7f00\u3002\n\n\u4ece $rk_i$ \u5411\u4e0a\u8df3\u91cd\u94fe\uff08\u4f18\u5316\u679a\u4e3e\u7956\u5148\uff09\uff0c\u5047\u8bbe\u73b0\u5728\u8df3\u5230\u4e86\u70b9 $u$\uff0c\u94fe\u9876\u4e3a $top_u$\uff0c\u7236\u4eb2\u4e3a $fa_u$\uff0c\u8003\u8651\u8be5\u91cd\u94fe\u524d\u7f00\u7684\u8d21\u732e\u3002\n\n1. $lca(rk_l,rk_i)=u$\n\n\u663e\u7136\u8fd9\u7c7b $rk_l$ \u51e0\u4e4e\u5728\u70b9 $u$ \u7684\u5b50\u6811\u5185\u3002\n\n\u65ad\u8a00\u8fd9\u4e2a\u201c\u51e0\u4e4e\u201d\u662f\u6ca1\u6709\u5f71\u54cd\u7684\uff0c\u56e0\u4e3a\u8fd9\u7c7b\u70b9\u4e4b\u524d\u7b97\u8fc7\u4e86\u3002\u8fd9\u4e2a\u663e\u7136\u6ca1\u6709\u5f71\u54cd\u3002\n\n\u73b0\u5728 $i,lca$ \u662f\u786e\u5b9a\u7684\uff0c\u90a3\u4e48\u79fb\u9879\u5f97 $r\\le len_{lca(rk_l,rk_i)}+i-1$\u3002\n\n\u90a3\u4e48\u6bcf\u6b21\u53d6\u51fa\u5b50\u6811\u4e2d\u7684\u6700\u5c0f\u503c\u5224\u65ad\u5373\u53ef\u3002\n\n2. $lca(rk_l,rk_i)=v$\uff0c$v$ \u4e3a $fa_u \\to top_u$ \u4e0a\u7684\u70b9\u3002\n\n\u8fd9\u7c7b $rk_l$ \u5728 $v$ \u7684\u8f7b\u5b50\u6811\u5185\u6216 $rk_l=v$\u3002\n\n\u56e0\u4e3a $rk_l$ \u663e\u7136\u4e0d\u5728 $v$ \u7684\u91cd\u5b50\u6811\u5185\uff0c\u5426\u5219\u4e4b\u524d\u5c31\u7b97\u8fc7\u4e86\u3002\n\n\u90a3\u4e48\u6709 $r-len_{lca(rk_l,rk_i)}+1\\le i$\u3002\n\n\u5728\u63d2\u5165\u8be2\u95ee\u7684\u65f6\u5019\u679a\u4e3e\u5305\u542b\u5176\u7684\u8f7b\u5b50\u6811\uff0c\u663e\u7136\u662f $O(\\log n)$ \u4e2a\u3002\n\n\u540c\u7406\uff0c\u6bcf\u6b21\u53d6\u51fa\u94fe\u4e2d\u7684\u6700\u5c0f\u503c\u5224\u65ad\u5373\u53ef\u3002\n\n\u90a3\u4e48\u4e0a\u9762\u7684\u4e24\u7c7b\u5f15\u5bfc\u6211\u4eec\u8bbe\u8ba1\u8fd9\u6837\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u7ef4\u62a4\u5e8f\u5217\uff08\u4e0a\u9762\u7684\u7528 dfn \u62cd\u5e73\uff09\uff0c\u652f\u6301\u5728\u4e00\u4e2a\u4f4d\u7f6e\u63d2\u5165\uff08\u76f8\u5f53\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e\u662f\u4e2a\u53ef\u91cd\u96c6\uff1f\uff09\uff0c\u6c42\u533a\u95f4\u6700\u5c0f\u5143\u7ec4\uff0c\u5220\u9664\u4e00\u4e2a\u4f4d\u7f6e\u7684\u6700\u5c0f\u503c\u3002\n\n\u5c0f\u5b69\u90fd\u4f1a\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\u7ef4\u62a4\u4e2a\u5806\uff0c\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\u5373\u53ef\u3002\n\n\u8fd9\u4e2a\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log^2 n)$\u3002\n\n[CF \u8bc4\u6d4b\u8bb0\u5f55](https://codeforces.com/contest/1043/submission/149364916)",
        "postTime": 1647049196,
        "uid": 203623,
        "name": "Ntokisq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1043G Speckled Band"
    },
    {
        "content": "\u5982\u679c\u5b50\u4e32\u4e2d\u6ca1\u6709\u5b57\u6bcd\u51fa\u73b0\u8d85\u8fc7\u4e00\u6b21\uff0c\u90a3\u80af\u5b9a\u662f\u65e0\u89e3\u7684\uff0c\u5426\u5219\u9009\u62e9\u8fd9\u4e24\u4e2a\u76f8\u540c\u5b57\u6bcd\uff0c\u7b54\u6848\u53ea\u53ef\u80fd\u662f\u57281~4\u4e2d\u7684\u4e00\u4e2a\uff0c\u4e0b\u9762\u5206\u60c5\u51b5\u8ba8\u8bba\n\n\u6ce8\uff1a\u4e0b\u9762\u5927\u5199\u5b57\u6bcd\u8868\u793a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c$l_i$\u8868\u793a\u6700\u5927\u7684\u4f4d\u7f6e\u6ee1\u8db3$[l_i,i]$\u662f\u4e00\u4e2aAA\u4e32\uff0c$r_i$\u7c7b\u4f3c\uff08\u5c31\u662f\u5c3d\u91cf\u77ed\u7684\u91cd\u590d\u4e24\u6b21\u7684\u4e32\uff09\n\n\u4ee4$len = R - L + 1$\n\n1. ans=1\uff1a\u5373AAAA...\uff0c\u679a\u4e3elen\u7684\u6240\u6709\u8d28\u56e0\u5b50\u7136\u540echeck\u662f\u5426\u5b58\u5728\u8fd9\u4e2a\u957f\u5ea6\u7684\u5468\u671f\n\n2. ans=2\uff1a\u5373AAB\u3001BAA\u3001ABA\uff0c\u524d\u4e24\u8005\u53ef\u4ee5\u7528$l,r$\u6570\u7ec4\u5224\u65ad\uff1b\u540e\u8005\u9700\u8981\u6c42\u51fa\u8be5\u5b50\u4e32\u7684\u6700\u77edborder\n\n3. ans=3\uff1a\u5373ABAC\u3001BACA\u3001BAAC\uff0c\u524d\u4e24\u8005\u53ef\u4ee5\u53d1\u73b0A\u662f\u5355\u4e2a\u5b57\u6bcd\u65f6\u6bd4\u5176\u4ed6\u60c5\u51b5\u66f4\u597d\uff0c\u6240\u4ee5\u53d8\u6210\u5224\u65ad\u9996\u5c3e\u5b57\u6bcd\u662f\u5426\u5728\u4e2d\u95f4\u51fa\u73b0\uff0c\u524d\u7f00\u548c\u5373\u53ef\uff1b\u540e\u8005\u5373\u4e2d\u95f4\u67d0\u4e2a\u4f4d\u7f6e\u7684$r_i < R$\uff0c\u53ef\u4ee5\u7528ST\u8868\u7ef4\u62a4\u7684$r_i$\u7684\u6700\u5c0f\u503c\n\n4. ans=4\uff1a\u524d\u9762\u7684\u90fd\u4e0d\u662f\u90a3\u5c31\u662f4\u4e86\n\n**\u6c42$l,r$**\uff1a\u7528 [NOI2016]\u4f18\u79c0\u7684\u62c6\u5206 \u7684\u505a\u6cd5\u5373\u53ef\u6c42\u51fa\u6240\u6709AA\u4e32\uff0c\u7136\u540e\u968f\u4fbf\u4e71\u641e\u4e00\u4e0b\u5c31\u53ef\u4ee5\u5f04\u51fa$l,r$\u6570\u7ec4\n\n**\u6c42border**\uff1a\n\n\u6709\u4e00\u4e2a\u7ed3\u8bba\uff1a\u5148\u5224\u65ad\u6709\u6ca1\u6709\u957f\u5ea6\u4e3a$1$~$\\sqrt{len}$\u7684border\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u90a3\u4e48\u6700\u77ed\u7684border\u4e0e\u539f\u4e32\u7684\u540e\u7f00\u6392\u540d\u5c0f\u4e8e$\\sqrt{len}$\n\n\u8bc1\u660e\u81ea\u5df1\u753b\u56fe\u6bd4\u8f83\u597d\u7406\u89e3\uff1a\u5982\u679c\u5b83\u4eec\u7684\u8ddd\u79bb\u8d85\u8fc7\u4e86$\\sqrt{len}$\uff0c\u90a3\u4e48\u4ed6\u4eec\u4e2d\u95f4\u5c31\u5939\u4e86$\\sqrt{len}$\u4e2a\u4e32\uff0c\u4e14\u8fd9\u4e9b\u4e32\u7684\u524d\u7f00\u90fd\u662fborder\uff0c\u4e00\u5b9a\u4f1a\u6709\u91cd\u53e0\uff0c\u4e24\u4e2a\u76f8\u540c\u7684border\u91cd\u53e0\u4e4b\u540e\u4e00\u5b9a\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u66f4\u77ed\u7684border\uff0c\u8bf4\u660e\u8fd9\u4e2aborder\u4e0d\u662f\u6700\u77ed\u7684\uff0c\u4e0e\u6211\u4eec\u8981\u6c42\u7684\u77db\u76fe\n\n#### Code\n\n```cpp\n#include<bits/stdc++.h>\n#define N 200005\nusing namespace std;\ntypedef unsigned long long ull;\nconst ull base = 1000000007;\nint n,q,lg[N];\nint ar[N],al[N],mn[N][20];\nint sum[N][26];\nchar a[N];\n\ntemplate <class T> inline T Max(T a,T b) { return a > b ? a : b; }\ntemplate <class T> inline T Min(T a,T b) { return a < b ? a : b; }\nstruct SA\n{\n\tint rk[N],sa[N],tp[N],h[N],tot[N];\n\tint mn[N][20];\n\tvoid radixsort()\n\t{\n\t\tfor(int i=0;i<=n;++i) tot[i] = 0;\n\t\tfor(int i=1;i<=n;++i) tot[rk[i]]++;\n\t\tfor(int i=1;i<=n;++i) tot[i] += tot[i - 1];\n\t\tfor(int i=n;i>=1;--i) sa[tot[rk[tp[i]]]--] = tp[i];\n\t}\n\tvoid getsa()\n\t{\n\t\tfor(int i=1;i<=n;++i) rk[i] = a[i] - 'a' + 1,tp[i] = i;\n\t\tradixsort();\n\t\tfor(int t=1;t<n;t<<=1)\n\t\t{\n\t\t\tint p = 0;\n\t\t\tfor(int i=1;i<=t;++i) tp[++p] = n - t + i;\n\t\t\tfor(int i=1;i<=n;++i) if(sa[i] > t) tp[++p] = sa[i] - t;\n\t\t\tradixsort(); for(int i=1;i<=n;++i) swap(rk[i],tp[i]);\n\t\t\trk[sa[1]] = p = 1;\n\t\t\tfor(int i=2;i<=n;++i) \n\t\t\t  rk[sa[i]] = (tp[sa[i - 1]] == tp[sa[i]] && tp[sa[i - 1] + t] == tp[sa[i] + t]) ? p : ++p;\n\t\t\tif(n == p) break;\n\t\t}\n\t}\n\tvoid geth()\n\t{\n\t\tint ht = 0;\n\t\tfor(int i=1;i<=n;++i) rk[sa[i]] = i;\n\t\tfor(int i=1;i<=n;++i)\n\t\t{\n\t\t\tint p = sa[rk[i] - 1];\n\t\t\twhile(a[i + ht] == a[p + ht]) ++ht;\n\t\t\th[rk[i]] = ht;\n\t\t\tht = Max(0,ht - 1);\n\t\t}\n\t}\n\tint lcp(int l,int r)\n\t{\n\t\tif(l == r) return n - l + 1;\n\t\tl = rk[l]; r = rk[r];\n\t\tif(l > r) swap(l,r); ++l;\n\t\tint len = lg[r - l + 1];\n\t\treturn Min(mn[l][len] , mn[r - (1 << len) + 1][len]);\n\t}\n\tvoid init()\n\t{\n\t\tgetsa(); geth();\n\t\tfor(int i=1;i<=n;++i) mn[i][0] = h[i];\n\t\tfor(int t=1;t<20;++t)\n\t\t  for(int i=1;i+(1<<(t-1))<=n;++i)\n\t\t\tmn[i][t] = Min(mn[i][t - 1],mn[i + (1<<(t-1))][t - 1]);\n\t}\n}sa;\n\nint pre[N],suf[N];\nint sig1[N << 2],sig2[N << 2];\null qp[N],hah[N];\nvoid modify(int *sig,int rt,int l,int r,int x,int y,int v)\n{\n\tif(x < 1) x = 1; if(y > n) y = n;\n\tif(x <= l && r <= y) return (void)(sig[rt] = Min(sig[rt],v));\n\tint mid = (l + r) >> 1;\n\tif(x <= mid) modify(sig,rt<<1,l,mid,x,y,v);\n\tif(y > mid) modify(sig,rt<<1|1,mid + 1,r,x,y,v);\n}\nvoid dfs1(int rt,int l,int r,int mn)\n{\n\tmn = Min(mn,sig1[rt]);\n\tif(l == r) return (void)(ar[l] = l + mn * 2 - 1);\n\tint mid = (l + r) >> 1;\n\tdfs1(rt<<1,l,mid,mn);\n\tdfs1(rt<<1|1,mid + 1,r,mn);\n}\nvoid dfs2(int rt,int l,int r,int mn)\n{\n\tmn = Min(mn,sig2[rt]);\n\tif(l == r) return (void)(al[l] = l - mn * 2 + 1);\n\tint mid = (l + r) >> 1;\n\tdfs2(rt<<1,l,mid,mn);\n\tdfs2(rt<<1|1,mid + 1,r,mn);\n}\null hsh(int l,int r) { return (l < 1 || r > n) ? (ull)rand() * rand() : hah[r] - hah[l - 1] * qp[r - l + 1]; }\nvoid getr()\n{\n\tsrand((unsigned)time(NULL));\n\tqp[0] = 1; for(int i=1;i<N;++i) qp[i] = qp[i - 1] * base;\n\tmemset(pre,0,sizeof(pre));\n\tmemset(suf,0,sizeof(suf));\n\tmemset(sig1,50,sizeof(sig1));\n\tmemset(sig2,50,sizeof(sig2));\n\tfor(int i=1;i<=n;++i) hah[i] = hah[i - 1] * base + a[i];\n\n\tfor(int k=1;k<=n;++k)\n\t{\n\t\tfor(int i=1;i+k<=n;i+=k)\n\t\t{\n\t\t\tint now = i,nxt = i + k;\n\t\t\tint l,r,pr = 0,sf = 0;\n\t\t\tl = 1; r = k;\n\t\t\twhile(l <= r)\n\t\t\t{\n\t\t\t\tint mid = (l + r) >> 1;\n\t\t\t\tif(hsh(now - mid + 1,now) == hsh(nxt - mid + 1,nxt)) l = mid + 1,pr = mid;\n\t\t\t\telse r = mid - 1;\n\t\t\t}\n\t\t\tl = 1; r = k;\n\t\t\twhile(l <= r)\n\t\t\t{\n\t\t\t\tint mid = (l + r) >> 1;\n\t\t\t\tif(hsh(now,now + mid - 1) == hsh(nxt,nxt + mid - 1)) l = mid + 1,sf = mid;\n\t\t\t\telse r = mid - 1;\n\t\t\t}\n\t\t\tint len = sf + pr - (k + 1) + 1;\n\t\t\tif(len <= 0) continue;\n\t\t\t//++pre[nxt - pr + 1 - k]; --pre[now + sf - k + 1];\n\t\t\t//++suf[nxt - pr + 1 + k - 1]; --suf[now + sf + k];\n\t\t\tmodify(sig1,1,1,n,nxt - pr + 1 - k,now + sf - k,k);\n\t\t\tmodify(sig2,1,1,n,nxt - pr + 1 + k - 1,now + sf + k - 1,k);\n\t\t}\n\t}\n\tdfs1(1,1,n,N); dfs2(1,1,n,N);\n}\n\nvoid init()\n{\n\tlg[0] = -1; for(int i=1;i<N;++i) lg[i] = lg[i >> 1] + 1;\n\tsa.init();\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tfor(int j=0;j<26;++j) sum[i][j] = sum[i - 1][j];\n\t\t++sum[i][a[i] - 'a'];\n\t}\n\tgetr();\n\tfor(int i=1;i<=n;++i) mn[i][0] = ar[i];\n\tfor(int t=1;t<20;++t)\n\t  for(int i=1;i+(1<<(t-1))<=n;++i)\n\t\tmn[i][t] = Min(mn[i][t - 1],mn[i + (1<<(t-1))][t - 1]);\n}\nint query(int l,int r)\n{\n\tint len = lg[r - l + 1];\n\treturn Min(mn[l][len] , mn[r - (1 << len) + 1][len]);\n}\nint border(int l,int r)\n{\n\tint len = r - l + 1,sqr = sqrt(n);\n\tfor(int i=1;i<=sqr&&i<len;++i) if(sa.lcp(l,r - i + 1) >= i) return i;\n\tint ret = N;\n\tfor(int i=Max(1,sa.rk[l]-sqr+1);i<=Min(n,sa.rk[l]+sqr-1);++i)\n\t{\n\t\tint loc = sa.sa[i];\n\t\tif(loc <= l || loc > r) continue;\n\t\tif(sa.lcp(l,loc) >= r - loc + 1) ret = Min(ret,r - loc + 1);\n\t}\n\treturn ret;\n}\nint solve0(int l,int r)\n{\n\tint t[26] = {0};\n\tfor(int i=l;i<=min(r,l + 27);++i) ++t[a[i] - 'a'];\n\tfor(int i=0;i<26;++i) if(t[i] > 1) return 0;\n\treturn 1;\n}\nint solve1(int l,int r)\n{\n\tint len = r - l + 1;\n\tfor(int i=2;i*i<=len;++i)\n\t{\n\t\tif(len % i == 0)\n\t\t{\n\t\t\twhile(len % i == 0) len /= i;\n\t\t\tif(sa.lcp(l,l + (r-l+1) / i) >= r - l + 1 - (r-l+1) / i) return 1;\n\t\t}\n\t}\n\tif(len != 1) if(sa.lcp(l,l + (r-l+1) / len) >= r - l + 1 - (r-l+1) / len) return 1;\n\treturn 0;\n}\nint solve2(int l,int r)\n{\n\tif(ar[l] <= r) return 1;\n\tif(al[r] >= l) return 1;\n\treturn (border(l,r) * 2 <= (r - l + 1));\n}\nint solve3(int l,int r)\n{\n\tif(sum[r][a[l] - 'a'] - sum[l][a[l] - 'a'] > 0) return 1;\n\tif(sum[r - 1][a[r] - 'a'] - sum[l - 1][a[r] - 'a'] > 0) return 1;\n\treturn (query(l + 1,r - 1) < r);\n}\nint main()\n{\n\tscanf(\"%d%s%d\",&n,a + 1,&q);\n\tinit();\n\twhile(q--)\n\t{\n\t\tint l,r;\n\t\tscanf(\"%d%d\",&l,&r);\n\t\tif(solve0(l,r)) puts(\"-1\");\n\t\telse if(solve1(l,r)) puts(\"1\");\n\t\telse if(solve2(l,r)) puts(\"2\");\n\t\telse if(solve3(l,r)) puts(\"3\");\n\t\telse puts(\"4\");\n\t}\n\treturn 0;\n}\n\n```\n\n\n\n\n\n\n",
        "postTime": 1583399838,
        "uid": 115482,
        "name": "kkksx",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1043G \u3010Speckled Band\u3011"
    }
]