[
    {
        "content": "\u89c2\u5bdf\u4e00\u4e0b\u9898\u76ee\u4e2d\u5bf9\u4e8e\u201c\u597d\u6392\u5217\u201d\u7684\u5b9a\u4e49\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u5982\u679c\u6392\u5217$p$\u662f\u4e2a\u597d\u6392\u5217\uff0c\u5047\u8bbe$p_1=m$\uff0c\u90a3\u4e48$1,2,\\dots,m$\u80af\u5b9a\u90fd\u51fa\u73b0\u5728\u6392\u5217\u7684\u524d$m$\u4e2a\u4f4d\u7f6e\uff0c\u5e76\u4e14\u5c5e\u4e8e\u540c\u4e00\u4e2a\u201clist\u201d\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u6bcf\u4e2a\u597d\u6392\u5217\u90fd\u5e94\u8be5\u53ef\u4ee5\u62c6\u6210\u82e5\u5e72\u6bb5\uff0c\u4f7f\u5f97\u6bcf\u4e00\u6bb5\u5185\u90e8\u90fd\u7ec4\u6210\u4e00\u4e2a\u73af\uff08$i$\u5411$p_i$\u8fde\u8fb9\uff09\uff0c\u4e14\u6bcf\u4e00\u6bb5\u5f00\u5934\u8fde\u51fa\u7684\u8fb9\u90fd\u6307\u5411\u8fd9\u4e00\u6bb5\u7684\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u3002\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba1\u7b97$f_n$\uff1a\u957f\u5ea6\u4e3a$n$\u7684\u6ee1\u8db3\u6761\u4ef6\u7684\u6392\u5217\u4e2a\u6570\uff1a\n\n$$f_0=1,f_n=\\sum_{i=1}^{n}f_{n-i}\\times g_{i}$$\n\n\u5176\u4e2d$g_n$\u4ee3\u8868\u957f\u5ea6\u4e3a$n$\u7684\u6392\u5217$p$\uff0c\u6ee1\u8db3$p_1=n$\u4e14\u662f\u4e00\u4e2a\u73af\u7684\u8fd9\u6837\u7684$p$\u7684\u4e2a\u6570\u3002\u8fd9\u4e2a\u4e5f\u597d\u7b97\uff1a\n\n$$g_1=1,g_n=(n-2)!$$\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u9012\u63a8\u5f97\u51fa$f_n$\u4e86\u3002\n\n\u73b0\u5728\u95ee\u9898\u5c31\u5728\u4e8e\uff0c\u6211\u4eec\u5982\u4f55\u6784\u9020\u51fa\u5b57\u5178\u5e8f\u7b2c$k$\u5c0f\u7684\u6ee1\u8db3\u6761\u4ef6\u7684\u6392\u5217\u3002\n\n\u9996\u5148\u5047\u8bbe\u6211\u4eec\u8981\u6784\u9020\u957f\u5ea6\u4e3a$n$\u7684\u7b2c$k$\u5c0f\u7684\u6392\u5217$p$\uff0c\u4e00\u4e2a\u663e\u7136\u7684\u601d\u8def\u662f\u5148\u679a\u4e3e$p_1$\u7684\u503c\u3002\u7531\u4e8e$p_1$\u7684\u503c\u51b3\u5b9a\u4e86\u8fd9\u4e2a\u6392\u5217\u7b2c\u4e00\u6bb5\u7684\u957f\u5ea6\uff0c\u4e8e\u662f$p_1$\u7684\u503c\u5c31\u5f88\u5bb9\u6613\u786e\u5b9a\u4e86\u3002\u5047\u8bbe\u6c42\u51fa\u4e86$p_1=m$,\u6211\u4eec\u5148\u5c06$k$\u51cf\u53bb$p_1$\u53d6$1,\\dots,m-1$\u7684\u65b9\u6848\u6570\uff0c\u6b64\u65f6\u6392\u5217\u88ab\u5206\u6210\u4e24\u90e8\u5206\uff1a\u5de6\u8fb9\u4e00\u4e2a\u957f\u5ea6\u4e3a$m$\u7684\u73af\uff0c\u7136\u540e\u662f\u53f3\u8fb9\u4e00\u4e2a\u957f\u5ea6\u4e3a$n-m$\u7684\u6392\u5217\u3002\u7531\u4e8e\u5de6\u8fb9\u7684\u73af\u5177\u4f53\u957f\u4ec0\u4e48\u6837\u5bf9\u53f3\u8fb9\u7684\u65b9\u6848\u6570\u6ca1\u6709\u5f71\u54cd\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u786e\u5b9a\u5de6\u8fb9\u7684\u73af\u7684\u6392\u540d$t_1=\\lceil\\frac{k}{f_{n-m}}\\rceil$\uff0c\u8fd9\u6837\u4e5f\u53ef\u4ee5\u786e\u5b9a\u53f3\u8fb9\u7684\u6392\u5217\u5728\u6240\u6709\u76f8\u540c\u957f\u5ea6\u7684\u6392\u5217\u4e2d\u6392\u540d\u4e3a$t_2=k-(t-1)\\times f_{n-m}$\u3002\n\n\u5bf9\u4e8e\u53f3\u8fb9\u7684\u90e8\u5206\uff0c\u76f4\u63a5\u9012\u5f52\u5c31\u597d\u4e86\uff0c\u90a3\u4e48\u95ee\u9898\u5c31\u662f\u5982\u4f55\u7b97\u5de6\u8fb9\u7684\u90e8\u5206\u3002\n\n\u8fd9\u4e2a\u4e5f\u76f8\u5f53\u7b80\u5355\uff0c\u786e\u5b9a$p_1$\u4e4b\u540e\uff0c\u6211\u4eec\u8fd8\u662f\u4ece$p_2$\u5f00\u59cb\u5f80\u540e\u4e00\u4e2a\u4e00\u4e2a\u786e\u5b9a\u5bf9\u5e94\u4f4d\u7f6e\u7684\u53d6\u503c\uff0c\u53ea\u662f\u679a\u4e3e\u7684\u65f6\u5019\u4e0d\u8981\u8ba9\u6392\u5217\u5728\u7b2c$m$\u4e2a\u4f4d\u7f6e\u4e4b\u524d\u6210\u73af\u5c31\u53ef\u4ee5\u4e86\u3002\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst long long INF=1e18+7;\nlong long f[53],fac[53];\nlong long add(long long a,long long b)\n{\n\treturn min(INF,a+b);\n}\nlong long mul(long long a,long long b)\n{\n\tif(INF/a<b)return INF;\n\treturn a*b;\n}\nconst int N=50;\nlong long g(int n)\n{\n\tif(n==1)return 1;\n\treturn fac[n-2];\n}\nvoid init()\n{\n\tfac[0]=1;\n\tfor(int i=1;i<=N;i++)\n\t\tfac[i]=mul(fac[i-1],i);\n\tf[0]=1;\n\tfor(int i=1;i<=N;i++)\n\t\tfor(int j=1;j<=i;j++)\n\t\t\tf[i]=add(f[i],mul(f[i-j],g(j)));\n\treturn ;\n}\nint p[53];\nint q[53];\nbool vis[53];\nint find(int x)\n{\n\twhile(q[x])x=q[x];\n\treturn x;\n}\nvoid getq(int n,long long k)\n{\n\tif(n==1){\n\t\tq[1]=1;\n\t\treturn ;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tq[i]=vis[i]=0;\n\tq[1]=n;vis[n]=1;\n\tfor(int i=2;i<n;i++)\n\t{\n\t\tlong long num=fac[n-i-1];\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tif(j!=i&&!vis[j]&&find(j)!=i)\n\t\t\t{\n\t\t\t\tif(k<=num){\n\t\t\t\t\tq[i]=j;\n\t\t\t\t\tvis[j]=true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tk-=num;\n\t\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tif(!vis[i])q[n]=i;\n\treturn ;\n}\nvoid getp(int n,long long k)\n{\n\tif(!n)return ;\n\tint len=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tlong long num=mul(g(i),f[n-i]);\n\t\tif(k<=num){\n\t\t\tlen=i;\n\t\t\tbreak;\n\t\t}\n\t\tk-=num;\n\t}\n\tlong long num=f[n-len];\n\tlong long need=(k-1)/num+1;\n\tgetp(n-len,k-(need-1)*num);\n\tfor(int i=n;i>len;i--)\n\t\tp[i]=p[i-len]+len;\n\tgetq(len,need);\n\tfor(int i=1;i<=len;i++)\n\t\tp[i]=q[i];\n\treturn ;\n}\nint main()\n{\n\tinit();\n\tint t;scanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tint n;long long k;\n\t\tscanf(\"%d %lld\",&n,&k);\n\t\tif(f[n]<k)printf(\"-1\\n\");\n\t\telse{\n\t\t\tgetp(n,k);\n\t\t\tfor(int i=1;i<=n;i++)\n\t\t\t\tprintf(\"%d \",p[i]);\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n~~\u8868\u9762\u4e0a\u662f\u8ba1\u6570\uff0c\u5176\u5b9e\u662f\u4e2a\u5c0f\u5c0f\u7684\u6a21\u62df~~\n\n~~\u6c34\u6c34\u6c34~~",
        "postTime": 1593508364,
        "uid": 54475,
        "name": "\u732a\u8111\u5b50",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1279E \u3010New Year Permutations\u3011"
    }
]