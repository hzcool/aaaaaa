[
    {
        "content": "## \u9898\u610f  \n\n\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$\uff08$n$ \u4e3a\u5076\u6570\uff09\u7684 $01$ \u5e8f\u5217\uff0c\u4f60\u53ef\u4ee5\u8fdb\u884c\u4e0d\u8d85\u8fc7 $n+1$ \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u5c06\u4e00\u4e2a\u957f\u5ea6\u4e3a\u5076\u6570\u7684\u524d\u7f00\u7ffb\u8f6c\uff08reverse \u4e0d\u662f flip\uff09\u3002  \n\u4f60\u9700\u8981\u6784\u9020\u4e00\u79cd\u65b9\u6848\u4f7f\u5f97\u8fd9\u4e2a\u5e8f\u5217\u53d8\u6210\u76ee\u6807\u5e8f\u5217\uff0c\u6216\u8005\u58f0\u660e\u65e0\u89e3\u3002  \n\n## \u9898\u89e3  \n\n\u597d\u50cf\u6709\u6b63\u7ecf\u7684\u505a\u6cd5\uff0c\u8fd9\u91cc\u7ed9\u4e00\u4e2a**\u9760\u8c31\u7684**\u968f\u673a\u5316\u4e71\u641e\u3002  \n\n\u9996\u5148\u8003\u8651\uff0c\u7531\u4e8e\u7ffb\u8f6c\u7684\u524d\u7f00\u90fd\u662f\u5076\u6570\uff0c\u90a3\u4e48\u76f8\u5f53\u4e8e\u628a $01$ \u4e24\u4e2a\u4e24\u4e2a\u6346\u7ed1\u5728\u4e00\u8d77\u3002  \n\u5c06 $00$ \u8bbe\u4e3a $0$\uff0c$01$ \u4e3a $1$\uff0c$10$ \u4e3a $2$\uff0c$11$ \u4e3a $3$\u3002\n\u90a3\u4e48\u76f8\u5f53\u4e8e\u662f\uff0c\u7ffb\u8f6c\u5e8f\u5217\u7684\u4e00\u4e2a\u524d\u7f00\uff0c\u5e76\u4e14 $1 \\leftrightarrow 2$\u3002   \n\n\u663e\u7136\u5982\u679c $a$ \u4e2d $cnt_0,cnt_3,cnt_1+cnt_2$ \u90fd\u5fc5\u987b\u548c $b$ \u76f8\u7b49\u3002  \n\n---------\n\n\u8003\u8651\u8fd9\u6837\u4e00\u4e2a\u6784\u9020\u8fc7\u7a0b\uff1a  \n\u4ece\u540e\u5f80\u524d\u626b\uff0c\u6bcf\u6b21\u628a\u6700\u540e\u4e00\u4f4d\u786e\u5b9a\u4e86\uff0c\u7136\u540e\u5c06\u5269\u4e0b\u7684\u90e8\u5206\u53d8\u6210\u5b50\u95ee\u9898\u3002  \n\n\n\u6bd4\u5982\u8bf4\u6211\u4eec\u73b0\u5728\u5728\u5bf9 $1$ \u5230 $i$ \u8fd9\u4e2a\u524d\u7f00\u8fdb\u884c\u5904\u7406\u3002  \n\u9996\u5148\u6211\u4eec\u9700\u8981\u627e\u5230\u4e00\u4e2a $a_j = b_i$\uff0c\u7136\u540e\u5c06\u5176\u7ffb\u8f6c\u81f3\u7b2c $1$ \u4f4d\uff0c\u518d\u7ffb\u8f6c\u81f3\u7b2c $i$ \u4f4d\u3002  \n\u8fd9\u6837\u6211\u4eec\u7528\u4e86 $2$ \u6b65\u5904\u7406\u4e86\u539f\u5e8f\u5217\u4e2d\u7684 $2$ \u4f4d\u3002  \n\n\n\u4f46\u662f\u8fd9\u6837\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u73b0\u5728\u8981\u641e\u4e2a $b_i=1$\uff0c\u4f46\u662f $a$ \u4e2d\u53ea\u6709 $2$ \u600e\u4e48\u529e\uff1f   \n\u6211\u4eec\u9009\u62e9\u4e00\u4e2a $2$\uff0c\u7ffb\u5230\u7b2c $1$ \u4f4d\u540e\u518d\u8fdb\u884c\u4e00\u6b21\u7ffb\u8f6c\uff0c\u4ed6\u8fd8\u662f $2$\uff0c\u518d\u7ffb\u8f6c\u81f3 $b_i$ \u4f4d\u53d8\u6210 $1$ \u5373\u53ef\u3002  \n\n\u8fd9\u6837\u8fd8\u662f\u6709\u4e2a\u95ee\u9898\uff0c\u8fd9\u6837\u6211\u4eec\u7528 $3$ \u6b65\u624d\u5904\u7406\u4e86\u539f\u5e8f\u5217\u4e2d\u7684 $2$ \u4f4d\uff0c\u8d85\u8fc7\u6b65\u6570\u9650\u5236\u548b\u529e\uff1f  \n\n\u6211\u4eec\u8fd0\u7528\u4eba\u7c7b\u667a\u6167\uff0c\u6bcf\u6b21\u5728\u5408\u6cd5\u7684\u6570\u4e2d\u968f\u673a\u9009\u53d6\u4e00\u4e2a\uff0c\u57fa\u672c\u4e0a\u662f\u4e0d\u662f\u80fd\u4fdd\u8bc1\u4e0d\u5b58\u5728 $a$ \u4e2d $1,2$ \u53ea\u51fa\u73b0 $1$ \u4e2a\u7684\u60c5\u51b5\u4e86\u554a\uff1f\n\n\u5728\u52a0\u4e0a\u8fd8\u6709 $\\dfrac 1 4$ \u7684\u6982\u7387\u4e0d\u9700\u8981\u64cd\u4f5c\uff0c\u6709 $\\dfrac 1 4$ \u7684\u6982\u7387\u8981\u627e\u7684\u6570\u5df2\u7ecf\u5728\u7b2c $1$ \u4e2a\u4f4d\u7f6e\u4e86\uff0c\u5bb9\u9519\u6027\u5f88\u5f3a\u3002![](https://z3.ax1x.com/2021/05/30/2VYvAs.png)  \n\n\u770b\u4e86\u4e00\u4e0b[\u8bc4\u6d4b\u8bb0\u5f55](https://codeforces.com/contest/1237/submission/131637401)\uff0c\u7528\u7684\u6700\u591a\u6b21\u6570\u7684\u4e00\u4e2a\u70b9\u4e5f\u53ea\u6709 2915 \u6b21\uff0c\u770b\u4e0a\u53bb\u975e\u5e38\u9760\u8c31\u3002  \n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,tune=native\")\n#define pii pair<int,int>\n#define fi first\n#define se second\n#define rd(x) x=read()\n#define wt(x) write(x)\nusing namespace std;\nconst int N=4000+5;\nconst int M=1e5+5;\nconst int mod=998244353;\nint read(){int x=0;char ch=getchar();while(ch>'9'||ch<'0'){ch=getchar();}while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}return x;}\nvoid write(int x){if(x<0){putchar('-');x=-x;}if(x>=10)write(x/10);putchar(x%10+'0');}\nint n,m,k;\nchar s[N],t[N];\nint a[N],b[N];\nint c1,c2,c3;\nunsigned seed=std::chrono::system_clock::now().time_since_epoch().count();\nmt19937 rnd(seed);\nvector<int> ans;\nvector<int> p;\nvoid rev(int x)\n{\n    ans.push_back(x*2);reverse(a+1,a+x+1);\n    for (int i=1;i<=x;i++) if (a[i]==1 || a[i]==2) a[i]=3-a[i];\n}\nvoid DOIT()\n{\n    scanf(\"%s\",s+1);scanf(\"%s\",t+1);\n    n=strlen(s+1);n/=2;\n    c1=c2=c3=0;\n    for (int i=1;i<=n;i++)\n    {\n        if (s[i*2-1]=='0' && s[i*2]=='0') a[i]=0;\n        if (s[i*2-1]=='0' && s[i*2]=='1') a[i]=1;\n        if (s[i*2-1]=='1' && s[i*2]=='0') a[i]=2;\n        if (s[i*2-1]=='1' && s[i*2]=='1') a[i]=3;\n        if (t[i*2-1]=='0' && t[i*2]=='0') b[i]=0;\n        if (t[i*2-1]=='0' && t[i*2]=='1') b[i]=1;\n        if (t[i*2-1]=='1' && t[i*2]=='0') b[i]=2;\n        if (t[i*2-1]=='1' && t[i*2]=='1') b[i]=3;\n        if (a[i]==0) c1++;else if (a[i]==3) c2++;else c3++;\n        if (b[i]==0) c1--;else if (b[i]==3) c2--;else c3--;\n    }\n    if (c1!=0 || c2!=0 || c3!=0) {puts(\"-1\");return;}\n    ans.clear();\n    for (int i=n;i>=1;i--)\n    {\n        if (a[i]==b[i]) continue;\n        if (a[1]==b[i] && (a[1]==0 || a[1]==3)) {rev(i);continue;}\n        if (a[1]==3-b[i] && (a[1]==1 || a[1]==2)) {rev(i);continue;}\n        p.clear();for (int j=1;j<=i;j++) if (a[j]==b[i]) p.push_back(j);\n        if (p.size())\n        {\n            int P=rnd()%p.size();P=p[P];\n            rev(P);rev(i);\n        } else \n        {\n            for (int j=1;j<=i;j++) if (a[j]==3-b[i]) p.push_back(j);\n            int P=rnd()%p.size();P=p[P];\n            rev(P);rev(1);rev(i);\n        }\n    }\n    cout<<ans.size()<<\"\\n\";\n    for (int x:ans) cout<<x<<\" \";cout<<\"\\n\";\n}\nsigned main()\n{\n    int JYZ;rd(JYZ);while (JYZ--) DOIT();\n}\n\n\n/* \n\n*/\n```",
        "postTime": 1634045596,
        "uid": 167006,
        "name": "WitheredZeal",
        "ccfLevel": 0,
        "title": "CF1237H"
    },
    {
        "content": "\u8fd9\u9898\u5927\u6982\u662fnoip\u96be\u5ea6\uff0c\u4e3a\u4ec0\u4e48CF\u4e0a\u4f1a\u8bc4\u52303200\uff1fqwq\n\n\u9996\u5148\u4e0d\u96be\u60f3\u5230\u628a\u4e24\u4e2a\u5b57\u7b26\u538b\u6210\u4e00\u4e2a\u6765\u5904\u7406\uff0c\u5927\u6982\u5c31\u662f\uff1a\n\n0001100010->00 01 10 00 10\n\n\u5982\u679c\u521d\u59cb\u4e32\u4e2d\u201c00\u201d\u7684\u4e2a\u6570\u4e0d\u7b49\u4e8e\u76ee\u6807\u4e32\u4e2d\u201c00\u201d\u7684\u4e2a\u6570\uff0c\u663e\u7136\u65e0\u89e3\u3002\u5bf9\u4e8e\u201c11\u201d\uff0c\u4e5f\u4e00\u6837\u3002\n\n\u6211\u4eec\u4ece\u7b2c\u4e00\u7ec4\uff08\u76ee\u6807\u4e32\u4e24\u4e2a\u5b57\u7b26\u4e3a\u4e00\u7ec4\uff09\u5f00\u59cb\uff0c\u4f9d\u6b21\u5339\u914d\uff0c\u5177\u4f53\u6765\u8bf4\uff0c\u5982\u4e0b\uff1a\uff08[]\u91cc\u7684\u5b57\u7b26\u662f\u5339\u914d\u597d\u7684\u5b57\u7b26,{}\u4e3a\u8fd9\u4e00\u6b21\u7ffb\u8f6c\u7684\u533a\u95f4\uff09\n\n\u521d\u59cb\u4e32\uff1a1001100011\n\n\u76ee\u6807\u4e32\uff1a00 11 01 01 10\n\n\u76ee\u6807\u4e32\u7b2c\u4e00\u7ec4\u5b57\u7b26\u662f\u201c00\u201d\uff0c\u4ece\u521d\u59cb\u4e32\u4e2d\u627e\u5230\u201c00\u201d\uff0c\u5e76\u5c06\u5176\u7ffb\u8f6c\u5230\u6700\u524d\u9762\u3002\n\n\u76ee\u524d\uff1a1001100011->{00011001}11->[00]01100111\n\n\u76ee\u6807\uff1a00 11 01 01 10\n\n\u76ee\u6807\u4e32\u7b2c\u4e8c\u7ec4\u5b57\u7b26\u662f\u201c11\u201d\uff0c\u4ece\u76ee\u524d\u4e32\u4e2d\u627e\u5230\u201c11\u201d\uff0c\u5c06\u5176\u4e0e\u5df2\u5339\u914d\u597d\u7684\u201c00\u201d\u8fde\u5728\u4e00\u8d77\uff0c\u518d\u628a\u5b83\u4eec\u7ffb\u5230\u6700\u524d\u9762\u3002\n\n\u76ee\u524d\uff1a[00]01100111->{10011000}11->{1100011001}->[1100]011001\n\n\u76ee\u6807\uff1a00 11 01 01 10\n\n\u8fd9\u65f6\u5927\u5bb6\u53ef\u80fd\u4f1a\u7591\u60d1\uff1a\u524d\u9762\u56db\u4e2a\u5b57\u7b26\u4e0d\u5339\u914d\u5440\uff1f\u8981\u4e0d\u8981\u518d\u7ffb\u8f6c\u4e00\u6b21\u4f7f\u5b83\u4eec\u5339\u914d\uff1f\u7b54\u6848\u662f\u4e0d\u9700\u8981\uff08\u539f\u56e0\u89c1\u4e0b\u6587\uff09\u3002\n\n\u7ee7\u7eed\u5339\u914d\uff1a\u76ee\u6807\u7b2c\u4e09\u7ec4\u5b57\u7b26\u662f\u201c01\u201d\uff0c\u4ece\u4ece\u76ee\u524d\u4e32\u4e2d\u627e\u5230\u201c01\u201d\uff08\u5982\u679c\u6709\u591a\u4e2a\u5219\u968f\u4fbf\u627e\u4e00\u4e2a\uff0c\u5982\u679c\u6ca1\u6709\uff1f\u5f85\u4f1a\u518d\u8bf4\uff09\uff0c\u5c06\u5176\u4e0e\u5df2\u5339\u914d\u597d\u7684\u201c0011\u201d\u8fde\u5728\u4e00\u8d77\uff0c\u518d\u628a\u5b83\u4eec\u7ffb\u5230\u6700\u524d\u9762\u3002\n\n\u76ee\u524d\uff1a[1100]011001->{0011}011001->{101100}1001->[101100]1001\n\n\u76ee\u6807\uff1a00 11 01 01 10\n\n\u7ee7\u7eed\u5339\u914d\u3002\n\n\u76ee\u524d\uff1a[101100]1001->{01001101}01->{1010110010}->[10101100]10->{00110101}10->[00 11 01 01 10]\n\n\u76ee\u6807\uff1a00 11 01 01 10\n\n\u5339\u914d\u6210\u529f\u4e86\uff01\u5927\u529f\u544a\u6210\uff01\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u5148\u5c06\u524d2k\u4e2a\u5b57\u7b26\u201c\u5012\u5e8f\u5339\u914d\u201d\uff08\u76ee\u524d\u72b6\u6001\u524d2k\u4e2a\u5b57\u7b26\u53cd\u8fc7\u6765\u5c31\u662f\u76ee\u6807\u72b6\u6001\u524d2k\u4e2a\u5b57\u7b26\uff09\uff0c\u518d\u5c06\u524d2(k+1)\u4e2a\u5b57\u7b26\u201c\u5012\u5e8f\u5339\u914d\u201d\uff0c\u4e00\u76f4\u8fd9\u4e48\u4e0b\u53bb\uff0c\u76f4\u5230\u5339\u914d\u5b8c\u6210\u3002\u793a\u610f\u56fe\u524d2k\u4e2a\u5b57\u7b26\u662f\"000110\"\uff0cx\u662f\u4e24\u4e2a\u5b57\u7b26\u201c00\u201d\uff0c\"...\"\u8868\u793a\u5c1a\u672a\u5339\u914d\u7684\u5b57\u7b26\uff09\n\n\u5f53\u524d\u72b6\u6001\uff1a[011000]...(x)...->{...000110}(x)...->{(x,011000...)...}->[x,011000]...\n\n\u76ee\u6807\u72b6\u6001\uff1a(000110,x)...\n\n\u4f46\u662f\uff0c\u5728\u5339\u914d\u7b2ci\u7ec4\u5b57\u7b26\u7684\u65f6\u5019\uff0c\u627e\u4e0d\u5230\u5bf9\u5e94\u7684\u5b57\u7b26\u600e\u4e48\u529e\uff1f\u4e3e\u4e2a\u4f8b\u5b50,i=3\uff1a\n\n\u5f53\u524d\u72b6\u6001\uff1a[0011]100010\n\n\u76ee\u6807\u72b6\u6001\uff1a11 00 01 10 00\n\n\u76ee\u6807\u7b2c3\u7ec4\u5b57\u7b26\u662f\u201c01\u201d\uff0c\u53ef\u662f\u5f53\u524d\u72b6\u6001\u4e2d\u6ca1\u6709\u4e00\u7ec4\u5b57\u7b26\u662f\u201c01\u201d\uff0c\u600e\u4e48\u529e\u5462\uff1f\n\n\u6ce8\u610f\u5230\u5bf9\u4e8e\u6bcf\u4e00\u7ec4\u5b57\u7b26\uff0c\u5339\u914d\u524d\u540e\u5f53\u524d\u4e32\u4e2d\u672a\u5339\u914d\u5b57\u7b26\u4e2d\u201c01\u201d\u548c\u201c10\u201d\u4e0d\u4f1a\u98a0\u5012\uff08\u5c31\u662f\u201c01\u201d\u5339\u914d\u540e\u8fd8\u662f\u201c01\u201d\uff0c\u201c10\u201d\u540c\u7406\uff0c\u5177\u4f53\u53ef\u4ee5\u56de\u987e\u4e4b\u524d\u7684\u5339\u914d\u8fc7\u7a0b\uff09\u3002\u4e8e\u662f\uff0c\u6211\u4eec\u53ea\u8981\u60f3\u529e\u6cd5\u662f\u521d\u59cb\u4e32\u4e2d\u201c01\u201d\u7684\u4e2a\u6570\u548c\u76ee\u6807\u4e32\u4e2d\u201c01\u201d\u7684\u4e2a\u6570\u76f8\u540c\u5373\u53ef\u3002\u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u7ffb\u8f6c\u521d\u59cb\u4e32\u548c\u76ee\u6807\u4e32\u4e2a\u4e00\u6b21\u5373\u53ef\u3002\u600e\u4e48\u7ffb\u8f6c\u76ee\u6807\u4e32\u5462\uff1f\u6253\u4e0a\u6807\u8bb0\uff0c\u628a\u521d\u59cb\u4e32\u7ffb\u8f6c\u6210\u7ffb\u8f6c\u540e\u7684\u76ee\u6807\u4e32\uff0c\u7136\u540e\u518d\u53d8\u6210\u7ffb\u8f6c\u524d\u7684\u76ee\u6807\u4e32\u5c31\u597d\u4e86\u3002\u5f88\u660e\u663e\uff0c\u53ef\u4ee5\u901a\u8fc7\u7ffb\u8f6c\u521d\u59cb\u4e32\u548c\u76ee\u6807\u4e32\u5404\u81f3\u591a\u4e00\u6b21\u6765\u4f7f\u4e24\u4e32\u4e2d\u201c01\u201d\u7684\u4e2a\u6570\u76f8\u7b49\uff08\u611f\u6027\u7406\u89e3\u5373\u53ef\uff09\u3002\n\n\u6700\u540e\u603b\u7ed3\u4e00\u4e0b\uff0c\u5148\u9884\u5904\u7406\uff0c\u518d\u6328\u4e2a\u5339\u914d\uff0c\u6700\u540e\u8f93\u51fa\u65b9\u6848\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u660e\u663e\u8fd9\u4e48\u505a\u7ffb\u8f6c\u6b21\u6570\u4e0d\u4f1a\u8d85\u8fc7n+1\u6b21\uff08\u9884\u5904\u7406\u4e24\u6b21\uff0c\u5339\u914d\u6bcf\u4e24\u4e2a\u5b57\u7b26\u4e24\u6b21\uff0c\u6700\u540e\u4e00\u7ec4\u5b57\u7b26\u4e00\u6b21\uff09\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\ninline int _abs(int x){return x>0?x:-x;}\n\nint n,m,q,v;\nstruct Pair{\n\tbool A,B;\n}s[2000],t[2000];\nchar c1,c2;\nint cnt[8],ans[4005];\nint s0[2000],s1[2000];\nint t0[2000],t1[2000];\nvoid read(void)\n{\n\twhile((c1=getchar())=='\\n'||c1==' ');\n\tc2=getchar();\n\ts[n].A=c1-'0'; s[n++].B=c2-'0';\n\twhile((c1=getchar())!='\\n'&&c1!=' '){\n\t\ts[n].A=c1-'0'; s[n++].B=getchar()-'0';\n\t}\n\twhile((c1=getchar())=='\\n'||c1==' ');\n\tc2=getchar();\n\tt[m].A=c1-'0'; t[m++].B=c2-'0';\n\twhile((c1=getchar())!='\\n'&&c1!=' '){\n\t\tt[m].A=c1-'0'; t[m++].B=getchar()-'0';\n\t}\n\treturn;\n}\n\ninline void reverseS(int i)\n{\n\tans[++q]=(i+1)<<1;\n\tfor(int j=0;(j<<1)<=i;j++){\n\t\tswap(s[j],s[i-j]);\n\t\tswap(s[j].A,s[j].B);\n\t\tif((j<<1)!=i)\n\t\t\tswap(s[i-j].A,s[i-j].B);\n\t}\n\treturn;\n}\ninline void reverseT(int i)\n{\n\tfor(int j=0;(j<<1)<=i;j++){\n\t\tswap(t[j],t[i-j]);\n\t\tswap(t[j].A,t[j].B);\n\t\tif((j<<1)!=i)\n\t\t\tswap(t[i-j].A,t[i-j].B);\n\t}\n\treturn;\n}\ninline void debug(void)\n{\n\tfor(int i=0;i<n;i++)\n\t\tprintf(\"%d%d \",s[i].A,s[i].B);\n\tputchar('\\n');\n\tfor(int i=0;i<n;i++)\n\t\tprintf(\"%d%d \",t[i].A,t[i].B);\n\tputchar('\\n');\n\tprintf(\"--------------------------\\n\");\n\treturn;\n}\n\ninline void init(void)\n{\n\ts0[0]=t0[0]=s1[0]=t1[0]=0;\n\tfor(int i=0;i<n;i++){\n\t\tif(i>0){\n\t\t\ts0[i]=s0[i-1]; s1[i]=s1[i-1];\n\t\t\tt0[i]=t0[i-1]; t1[i]=t1[i-1];\n\t\t}\n\t\tif(s[i].A==0&&s[i].B==1)\n\t\t\ts0[i]++;\n\t\tif(s[i].A==1&&s[i].B==0)\n\t\t\ts1[i]++;\n\t\tif(t[i].A==0&&t[i].B==1)\n\t\t\tt0[i]++;\n\t\tif(t[i].A==1&&t[i].B==0)\n\t\t\tt1[i]++;\n\t}\n\treturn;\n}\n\ninline void rev(void)\n{\n\tif(s0[n-1]==t0[n-1])\n\t\treturn;\n\tfor(int i=0;i<n;i++){\n\t\tif(s0[n-1]-s0[i]+s1[i]==t0[n-1]){\n\t\t\treverseS(i); return;\n\t\t}\n\t\tif(s0[n-1]==t0[n-1]-t0[i]+t1[i]){\n\t\t\treverseT(v=i); return;\n\t\t}\n\t\tfor(int j=0;j<n;j++)\n\t\t\tif(s0[n-1]-s0[i]+s1[i]==t0[n-1]-t0[j]+t1[j]){\n\t\t\t\treverseS(i); reverseT(v=j);\n\t\t\t\treturn;\n\t\t\t}\n\t}\n}\ninline int find(int x)\n{\n\tfor(int i=x;i<n;i++)\n\t\tif(s[i].A==t[x].A&&s[i].B==t[x].B)\n\t\t\treturn i;\n\treturn -1;\n}\n\nvoid solve(void)\n{\n\tn=m=0; q=v=-1;\n\tmemset(cnt,0,sizeof(cnt));\n\tread();\n\tfor(int i=0;i<n;i++){\n\t\tcnt[s[i].A*2+s[i].B]++;\n\t\tcnt[t[i].A*2+t[i].B+4]++;\n\t}\n\tif(cnt[0]!=cnt[4]||cnt[3]!=cnt[7]||cnt[1]+cnt[2]!=cnt[5]+cnt[6]){\n\t\tprintf(\"-1\\n\");\n\t\treturn;\n\t}\n\tinit(); rev();\n\tfor(int i=0;i<n;i++){\n\t\tint t=find(i);\n\t\tif(t>0) reverseS(t-1);\n\t\tif(i!=n-1) reverseS(t);\n\t}\n\tif(v!=-1){\n\t\treverseS(v);\n\t\treverseT(v);\n\t}\n\tprintf(\"%d\\n\",q+1);\n\tfor(int i=0;i<=q;i++)\n\t\tprintf(\"%d \",ans[i]);\n\tputchar('\\n');\n\treturn;\n}\n\nint main(void)\n{\n\tint T;\n\tscanf(\"%d\",&T);\n\twhile(T--)\n\t\tsolve();\n\treturn 0;\n}\n```",
        "postTime": 1587560368,
        "uid": 60202,
        "name": "csyakuoi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1237H \u3010Balanced Reversals\u3011"
    }
]