[
    {
        "content": "\u4e8c\u5206\u7b54\u6848 $r$\uff0c\u8003\u8651\u6bcf\u4e2a\u4ee5 $A_i$ \u4e3a\u5706\u5fc3\u3001$r$ \u4e3a\u534a\u5f84\u7684\u5706 $C_i$\uff0c\u8981\u6c42\u53ef\u4ee5\u9009\u51fa $C_{i_1},\\cdots,C_{i_k}$ \u4f7f\u5f97\u6709\u4ea4\u4e14 $i_k-i_1<l$\u3002\n\n\u679a\u4e3e\u8fd9\u4e2a\u4ea4\u533a\u57df\u7684\u8fb9\u754c\u4e0a\u67d0\u4e2a\u5706\u5f27\u6240\u5c5e\u7684\u5706 $C_j$\uff0c\u8981\u6c42\u627e\u5230\u5176\u4ed6 $k-1$ \u4e2a\u4e0b\u6807\u76f8\u5dee\u4e0d\u8d85\u8fc7 $l-1$ \u7684\u5706\u6709\u4ea4\uff0c\u4ece\u800c\u8003\u8651\u5176\u4ed6\u5706 $C_i$ \u5728 $C_j$ \u4e0a\u6240\u4ea4\u7684\u5706\u5f27\uff0c\u626b\u63cf\u7ebf\u5373\u53ef\u3002\u590d\u6742\u5ea6\u662f $\\mathcal O(s\\log n)$\uff0c\u5176\u4e2d $s$ \u662f\u8fd9\u6837\u7684\u5706\u5f27\u6570\u91cf\u3002\n\n**\u5f15\u7406.** $r\\le\\dfrac 4{\\sqrt\\pi}\\cdot 10^8\\cdot\\dfrac{\\sqrt{k-1}}{\\sqrt{l}}$\u3002\n\n> $[-10^8,10^8]^2$ \u4e0a\u6bcf\u4e2a\u70b9\u53ea\u80fd\u88ab\u8986\u76d6\u81f3\u591a $k-1$ \u6b21\uff0c\u800c\u5f53 $r\\le\\sqrt 2\\cdot 10^8$ \u65f6\u6bcf\u4e2a\u5706 $C_i$ \u81f3\u5c11\u6709 $1/4$ \u7684\u90e8\u5206\u5728 $[-10^8,10^8]^2$ \u5185\uff0c$r$ \u66f4\u5927\u65f6\u6bcf\u4e2a\u5706\u5fc5\u5b9a\u8986\u76d6\u539f\u70b9\u3002\n\n\u53c8\u56e0\u4e3a $C_i$ \u4e0e $C_j$ \u6709\u4ea4\u5f53\u4e14\u4ec5\u5f53 $\\text{dis}(A_i,A_j)\\le 2r$\uff0c\u4e14\u8981\u6c42 $|i-j|<l$\uff0c\u6240\u4ee5\u8fd9\u6837\u7684 $A_i$ \u671f\u671b\u53ea\u6709 $\\mathcal O(k)$ \u4e2a\u3002\n\n\u5269\u4e0b\u7684\u95ee\u9898\u662f\u5bfb\u627e\u8ddd\u79bb $\\le 2r$ \u7684\u70b9\uff1a\u6cbf\u7528[\u3010APIO2018\u3011\u9009\u5708\u5708](https://uoj.ac/problem/415)\u7684\u6280\u5de7\uff0c\u5c06\u5e73\u9762\u5212\u5206\u4e3a $2r\\times 2r$ \u7684\u65b9\u683c\uff0c\u53ea\u9700\u627e\u9644\u8fd1 $3\\times 3$ \u4e2a\u65b9\u683c\u4e4b\u5185\u7684\u70b9\uff0c\u7528\u54c8\u5e0c\u8868\u7ef4\u62a4\u5373\u53ef\uff0c\u671f\u671b\u904d\u5386\u70b9\u7684\u4e2a\u6570\u4e5f\u662f $\\mathcal O(k)$ \u7684\u3002\n\n\u6309\u987a\u5e8f\u904d\u5386 $j$\uff0c$r$ \u671f\u671b\u53ea\u4f1a\u53d8\u5c0f $\\mathcal O(\\log n)$ \u6b21\uff0c\u82e5\u53d8\u5c0f\u5c31\u91cd\u65b0\u4e8c\u5206\u51fa\u7b54\u6848\u5e76\u91cd\u6784\u65b9\u683c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(nk\\log n+k\\log n\\log\\varepsilon^{-1})$\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\ntypedef unsigned long long ULL;\ntypedef pair<double, int> pdi;\nULL _ = chrono::steady_clock::now().time_since_epoch().count();\nconst int N = 50003, V = 200003;\nconst double PI = acos(-1);\nint n, L, k, B, x[N], y[N], xx[N];\nvector<int> vec[V];\ndouble R;\nint hah(int x, int y){return (((ULL)x << 32 | y) ^ _) % V;}\nvoid build(int l, int r){\n    if(B) for(int i = l;i <= r;++ i) vec[xx[i]].resize(0);\n    B = R * 2 + 1;\n    for(int i = l;i <= r;++ i) vec[xx[i] = hah(x[i] / B, y[i] / B)].push_back(i);\n}\nvoid remove(int p){vec[xx[p]].erase(vec[xx[p]].begin());}\nvoid add(int p){vec[xx[p] = hah(x[p] / B, y[p] / B)].push_back(p);}\nnamespace SegTree {\n    const int N = 1 << 16;\n    int pre[N<<1], sum[N<<1];\n    void pup(int p){\n        sum[p] = sum[p<<1] + sum[p<<1|1];\n        pre[p] = max(pre[p<<1], sum[p<<1] + pre[p<<1|1]);\n    }\n    void upd(int p, int v){\n        p += N; sum[p] += v; pre[p] = max(sum[p], 0);\n        while(p >>= 1) pup(p);\n    }\n    void clr(int p){p += N; while(p){sum[p] = pre[p] = 0; p >>= 1;}}\n}\nLL SQ(int x){return (LL)x * x;}\nbool check(int p, double R){\n    using namespace SegTree;\n    auto mdf = [&](int q, int v){upd(q, v); if(q + L <= n) upd(q + L, -v);};\n    vector<pdi> vc;\n    int xx = x[p] / B, yy = y[p] / B;\n    for(int dx = -1;dx <= 1;++ dx)\n        for(int dy = -1;dy <= 1;++ dy)\n            for(int j : vec[hah(xx + dx, yy + dy)]) if(j != p && abs(j - p) < L){\n                double arg2 = sqrt(SQ(x[p] - x[j]) + SQ(y[p] - y[j])) / (2 * R);\n                if(arg2 >= 1) continue;\n                double arg1 = atan2(y[j] - y[p], x[j] - x[p]); arg2 = acos(arg2);\n                double argl = arg1 - arg2, argr = arg1 + arg2;\n                if(argl < -PI || argr > PI) mdf(j, 1);\n                if(argl < -PI) argl += 2 * PI;\n                if(argr > PI) argr -= 2 * PI;\n                vc.emplace_back(argl, j); vc.emplace_back(argr, -j);\n            }\n    sort(vc.begin(), vc.end());\n    bool flg = pre[1] >= k - 1;\n    for(auto [$, j] : vc){\n        if(flg) break;\n        mdf(abs(j), j > 0 ? 1 : -1);\n        flg |= pre[1] >= k - 1;\n    }\n    for(auto [$, j] : vc){clr(abs(j)); if(abs(j) + L <= n) clr(abs(j) + L);}\n    return flg;\n}\nvoid solve(){\n    cin >> n >> L >> k;\n    R = 225675834 * sqrt((k-1.) / L);\n    for(int i = 1;i <= n;++ i){\n        cin >> x[i] >> y[i];\n        x[i] += 1e8; y[i] += 1e8;\n    }\n    build(1, L);\n    for(int i = 1;i <= n;++ i){\n        if(i > L) remove(i - L);\n        if(check(i, R)){\n            double l = 0, r = R, md;\n            while(r - l >= l * 1e-10)\n                (check(i, md = (l + r) / 2) ? r : l) = md;\n            R = l; build(max(i - L, 0) + 1, min(i + L - 1, n));\n        }\n        if(i + L <= n) add(i + L);\n    }\n    for(int i = n - L + 1;i <= n;++ i) vec[xx[i]].resize(0);\n    printf(\"%.10lf\\n\", R);\n}\nint main(){\n    ios::sync_with_stdio(false);\n    int T; cin >> T; while(T --) solve();\n}\n```",
        "postTime": 1651666198,
        "uid": 68148,
        "name": "watermoon",
        "ccfLevel": 10,
        "title": "CF1641F"
    }
]