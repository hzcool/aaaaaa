[
    {
        "content": "> \u6458\u81ea\u6211\u7684 [\u8d2a\u5fc3/\u6784\u9020/DP \u6742\u9898\u9009\u505a\u2161](https://www.cnblogs.com/ET2006/p/greedy-construction-dp2.html) \u4e2d\u7684\u7b2c $44$ \u9898\n\n\u9996\u5148\u4e0d\u96be\u53d1\u73b0\u5bf9\u4e8e\u4e00\u4e2a $n\\times n$ \u7684\u77e9\u9635\uff0c\u6309\u7167\u5982\u4e0b\u65b9\u5f0f\u586b\u80fd\u591f\u6700\u5927\u5316\u6709\u503c\u7684\u4f4d\u7f6e\u4e2a\u6570\uff1a\n$$\n\\begin{bmatrix}\n*&*&*&*&*&\\cdots\\\\\n*&0&*&0&*&\\cdots\\\\\n*&*&*&*&*&\\cdots\\\\\n*&0&*&0&*&\\cdots\\\\\n*&*&*&*&*&\\cdots\n\\end{bmatrix}\n$$\n\u5176\u4e2d $*$ \u8868\u793a\u4e00\u4e2a\u975e\u96f6\u503c\u3002\u7531\u6b64\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\uff0c\u5bf9\u4e8e\u4e00\u4e2a $n\\times n$ \u7684\u77e9\u9635\uff0c\u5176\u4e2d\u6700\u591a\u53ef\u4ee5\u6709 $n^2-\\lfloor\\dfrac{n}{2}\\rfloor^2$ \u4e2a\u975e\u96f6\u5143\u7d20\u3002\n\n\u4f46\u662f\uff0c$n^2-\\lfloor\\dfrac{n}{2}\\rfloor^2\\ge m$ \u5e76\u4e0d\u4e00\u5b9a\u662f\u6211\u4eec\u80fd\u591f\u5c06 $a_1$ \u4e2a $1$\u3001$a_2$ \u4e2a $2$\u3001$a_3$ \u4e2a $3$\u3001\u2026\u2026\u3001$a_k$ \u4e2a $k$ \u586b\u5165\u77e9\u9635\u7684**\u5145\u5206\u6761\u4ef6**\uff0c\u663e\u7136\uff0c\u5982\u679c $a_1=n^2-\\lfloor\\dfrac{n}{2}\\rfloor^2$\uff0c\u4e14 $n\\ge 2$\uff0c\u90a3\u4e48\u6211\u4eec\u5168\u586b $1$ \u80af\u5b9a\u4e0d\u7b26\u5408\u6761\u4ef6 $2$\u3002\u5bb9\u6613\u53d1\u73b0\uff0c\u6211\u4eec\u6700\u591a\u5728\u8fd9 $n^2-\\lfloor\\dfrac{n}{2}\\rfloor^2$ \u4e2a\u975e\u96f6\u4f4d\u7f6e\u4e2d\uff0c\u586b\u5165 $n\u00b7\\lceil\\dfrac{n}{2}\\rceil$ \u4e2a\u540c\u79cd\u5143\u7d20\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u901a\u8fc7\u5bf9\u77e9\u9635\u8fdb\u884c\u9ed1\u767d\u67d3\u8272 + \u62bd\u5c49\u539f\u7406\u8bc1\u660e\uff0c\u6784\u9020\u5982\u4e0b\uff1a\n$$\n\\begin{bmatrix}\n1&1&1&1&1&\\cdots\\\\\n*&0&*&0&*&\\cdots\\\\\n1&1&1&1&1&\\cdots\\\\\n*&0&*&0&*&\\cdots\\\\\n1&1&1&1&1&\\cdots\\\\\n\\end{bmatrix}\n$$\n\u56e0\u6b64\u6211\u4eec\u518d\u8bb0 $mx=\\max\\limits_{i=1}^ka_i$\uff0c\u90a3\u4e48 $n^2-\\lfloor\\dfrac{n}{2}\\rfloor^2\\ge m$ \u4e14 $mx\\le n\u00b7\\lceil\\dfrac{n}{2}\\rceil$ \u662f\u5426\u5145\u5206\u4e86\u5462\uff1f\u7b54\u6848\u662f\u80af\u5b9a\u7684\u3002\u6211\u4eec\u4f9d\u6b21\u5199\u4e0b $a_1$ \u4e2a $1$\uff0c$a_2$ \u4e2a $2$\uff0c\u2026\u2026\uff0c$a_k$ \u4e2a $k$\uff0c\u8fd9\u6837\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u957f\u5ea6\u4e3a $m$ \u7684\u5e8f\u5217\uff0c\u4e0d\u59a8\u79f0\u4e4b\u4e3a $b_1,b_2,\\cdots,b_m$\uff0c\u90a3\u4e48\u6211\u4eec\u6309\u7167\u5982\u4e0b\u65b9\u5f0f\u586b\u6570\uff1a\n\n- \u5728 $(1,2),(1,4),(1,6),\\cdots,(3,2),(3,4),(3,6),\\cdots,(5,2),(5,4),\\cdots$\uff08\u5373\u6240\u6709\u6a2a\u5750\u6807\u4e3a\u5947\u6570\uff0c\u7eb5\u5750\u6807\u4e3a\u5076\u6570\u7684\u683c\u5b50\uff09\u4e2d\u4f9d\u6b21\u586b\u4e0b $b_1,b_2,\\cdots$\u3002\n- \u586b\u5b8c\u4e86\u6a2a\u5750\u6807\u4e3a\u5947\u6570\uff0c\u7eb5\u5750\u6807\u4e3a\u5076\u6570\u7684\u70b9\u540e\uff0c\u518d\u586b\u6a2a\u7eb5\u5750\u6807\u5747\u4e3a\u5947\u6570\u7684\u70b9\uff0c\u5373 $(1,1),(1,3),(1,5),\\cdots,(3,1),(3,3),\\cdots$\u3002\n- \u5982\u679c\u8fd9\u4e9b\u70b9\u586b\u5b8c\u4e86\u8fd8\u6709\u5269\u4f59\u7684\u6570\uff0c\u90a3\u5c31\u518d\u4f9d\u6b21\u5728 $(2,1),(2,3),(2,5),\\cdots,(4,1),(4,3),\\cdots$\uff0c\u4e5f\u5c31\u662f\u6240\u6709\u6a2a\u5750\u6807\u4e3a\u5076\u6570\uff0c\u7eb5\u5750\u6807\u4e3a\u5947\u6570\u7684\u70b9\u4e2d\u586b\u6570\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u5728\u8fd9\u6837\u7684\u6784\u9020\u65b9\u5f0f\u4e0b\uff0c\u6240\u6709\u5f62\u5982 $(2x+2,2y+1),(2x+1,2y+2)$\uff08\u4e5f\u5c31\u662f\u7981\u6b62\u586b\u4e0a\u76f8\u540c\u7684\u6570\u7684\u70b9\u5bf9\u4eec\uff09\u6240\u586b\u4e0a\u7684\u6570\u5728 $b$ \u5e8f\u5217\u4e2d\u7684\u8ddd\u79bb\u90fd $\\ge n\u00b7\\lceil\\dfrac{n}{2}\\rceil$\uff0c\u800c\u6839\u636e\u5047\u8bbe\u4e0d\u5b58\u5728 $>n\u00b7\\lceil\\dfrac{n}{2}\\rceil$ \u7684 $a_i$\uff0c\u56e0\u6b64\u8fd9\u4e9b\u70b9\u5bf9\u4e2d\u586b\u4e0a\u7684\u6570\u5fc5\u7136\u4e0d\u540c\uff0c\u56e0\u6b64\u6211\u4eec\u7684\u6784\u9020\u662f\u5408\u6cd5\u7684\u3002\n\n```cpp\nconst int MAXN=500;\nconst int MAXM=2e5;\nint m,k,a[MAXM+5],res[MAXN+5][MAXN+5],ord[MAXM+5];\nvoid solve(){\n\tscanf(\"%d%d\",&m,&k);int mx=0;\n\tfor(int i=1;i<=k;i++) scanf(\"%d\",&a[i]),chkmax(mx,a[i]);\n\tint sz;\n\tfor(sz=1;;sz++) if(sz*sz-(sz>>1)*(sz>>1)>=m&&sz*(sz+1>>1)>=mx) break;\n\tfor(int i=1;i<=sz;i++) for(int j=1;j<=sz;j++) res[i][j]=0;\n\tvector<pii> sp;vector<int> vec;\n\tfor(int i=2;i<=sz;i+=2) for(int j=1;j<=sz;j+=2) sp.pb(mp(i,j));\n\tfor(int i=1;i<=sz;i+=2) for(int j=1;j<=sz;j+=2) sp.pb(mp(i,j));\n\tfor(int i=1;i<=sz;i+=2) for(int j=2;j<=sz;j+=2) sp.pb(mp(i,j));\n\tfor(int i=1;i<=k;i++) ord[i]=i;\n\tsort(ord+1,ord+k+1,[&](int x,int y){return a[x]>a[y];});\n\tfor(int i=1;i<=k;i++) for(int j=1;j<=a[ord[i]];j++) vec.pb(ord[i]);\n\tfor(int i=0;i<vec.size();i++) res[sp[i].fi][sp[i].se]=vec[i];\n\tprintf(\"%d\\n\",sz);\n\tfor(int i=1;i<=sz;i++) for(int j=1;j<=sz;j++) printf(\"%d%c\",res[i][j],\" \\n\"[j==sz]);\n}\nint main(){\n\tint qu;scanf(\"%d\",&qu);\n\twhile(qu--) solve();\n\treturn 0;\n}\n```",
        "postTime": 1636556494,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1521E Nastia and a Beautiful Matrix"
    },
    {
        "content": "# \u58f9\u3001\u9898\u76ee\u63cf\u8ff0 &para;\n\n[\u4f20\u9001\u95e8 to CF](https://codeforces.com/contest/1521/problem/E).\n\n>\u4e2d\u6587\u7ffb\u8bd1\uff1a\n>\n>\u4f60\u6709 $k$ \u4e2a\u6570\u5b57\uff0c\u4ed6\u4eec\u5206\u522b\u662f $1,2,3,...,k$\uff0c\u5bf9\u4e8e\u6570\u5b57 $i$ \u4f60\u6709\u76f8\u540c\u7684 $a_i$ \u4e2a\u3002\n>\n>\u5b9a\u4e49\u4e00\u4e2a $n\\times n$ \u7684\u77e9\u9635\u4e3a\u7f8e\u4e3d\u77e9\u9635\uff1a\n>\n>- \u8fd9\u4e2a $n\\times n$ \u7684\u77e9\u9635\u5305\u542b\u4e86\u4f60\u6240\u62e5\u6709\u7684\u6240\u6709\u6570\u5b57\uff1b\n>- \u5bf9\u4e8e\u6bcf\u4e2a $2\\times 2$ \u7684\u5b50\u77e9\u9635\uff0c\u5360\u7528\u7684\u683c\u5b50\u4e0d\u80fd\u8d85\u8fc7 $3$\uff08\u5f53\u4e00\u4e2a\u683c\u5b50\u7684\u6570\u4e3a $0$ \u65f6\uff0c\u6211\u4eec\u8ba4\u4e3a\u5b83\u6ca1\u6709\u88ab\u5360\u7528\uff09\u5e76\u4e14\u6bcf\u4e2a\u5bf9\u89d2\u7ebf\u7684\u6570\u5b57\u662f\u4e0d\u540c\u7684\uff1b\n>\n>\u73b0\u5728\uff0c\u4f60\u8981\u6784\u9020\u4e00\u4e2a\u6700\u5c0f\u7684\u7f8e\u4e3d\u77e9\u9635\u3002\n\n# \u8d30\u3001\u9898\u89e3 &para;\n\n\u6700\u5c0f\u7684\u7f8e\u4e3d\u77e9\u9635\uff0c\u5373\u6211\u4eec\u5f97\u627e\u5230\u4e00\u4e2a\u6700\u5c0f\u7684 $n$\uff0c\u8fd9\u4e2a $n$ \u663e\u7136\u5177\u6709\u5355\u8c03\u6027\uff0c\u6211\u4eec\u4e0d\u59a8\u8003\u8651\u4e8c\u5206\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u4e8c\u5206\u7684 $n$\uff0c\u600e\u4e48\u586b\u8fd9\u4e2a $n\\times n$ \u7684\u77e9\u9635\u624d\u662f\u6700\u4f18\uff1f\n\n\u8d2a\u5fc3\u5730\uff0c\u6211\u4eec\u5c06\u5947\u6570\u5217\u5168\u90e8\u586b\u5b8c\uff0c\u628a\u5076\u6570\u5217\u5168\u90e8\u7a7a\u51fa\u6765\uff08\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u89e6\u53ca $\\lceil{n\\over 2} \\rceil$ \u800c\u4e0d\u662f $\\lfloor{n\\over 2} \\rfloor$\uff09\uff0c\u8fd9\u6837\u6211\u4eec\u4ec0\u4e48\u9650\u5236\u90fd\u4e0d\u7528\u8003\u8651\u3002\n\n\u4f46\u662f\u6bcf\u4e2a $2\\times 2$ \u7684\u5b50\u77e9\u9635\u6211\u4eec\u90fd\u6ca1\u6709\u586b\u6ee1\uff0c\u7a7a\u4e86\u5f88\u591a\uff0c\u8fd9\u5f88\u4e8f\u3002\n\n\u8003\u8651\u5c06\u521a\u521a\u7684\u8d2a\u5fc3\u8fdb\u884c\u62d3\u5c55\u2014\u2014\u6211\u4eec\u628a\u5076\u6570\u5217\u7684\u5947\u6570\u884c\u586b\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u603b\u5171\u586b\u4e86\u591a\u5c11\u683c\u5b50\u5462\uff1f\u4e0d\u96be\u8ba1\u7b97\uff0c\u8fd9\u6837\u586b\uff0c\u6211\u4eec\u603b\u5171\u53ef\u4ee5\u586b $n^2-\\lceil{n\\over 2} \\rceil^2$ \u4e2a\u6570\u5b57\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ea\u6709 $\\sum a_i\\le n^2-\\lfloor{n\\over 2} \\rfloor^2$ \u65f6\u6211\u4eec\u624d\u53ef\u4ee5\u88c5\u4e0b\u6240\u6709\u6570\u5b57\u3002\n\n\u4f46\u662f\u8fd9\u4e0d\u4e00\u5b9a\u5408\u6cd5\u2014\u2014\u5947\u6570\u5217\u7684\u5076\u6570\u884c\u548c\u5076\u6570\u5217\u7684\u5947\u6570\u884c\u4e0d\u80fd\u586b\u540c\u6837\u7684\u6570\u5b57\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u8981\u8003\u8651\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u6570\u5b57 $x=\\{i|a_i=\\max\\{a\\}\\}$\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u6570\u5b57\uff0c\u6211\u4eec\u53ea\u80fd\u5c06\u5b83\u586b\u5728\u4e0d\u4f1a\u51b2\u7a81\u7684\u4f4d\u7f6e \u2014\u2014 \u6240\u6709\u5947\u6570\u5217\uff0c\u8fd9\u4e9b\u5947\u6570\u5217\u4e00\u5171\u6709 $n\\times \\lceil{n\\over 2} \\rceil$ \u4e2a\u683c\u5b50\uff0c\u6240\u4ee5\uff0c\u5bf9\u4e8e\u4e8c\u5206\u7684 $n$\uff0c\u6211\u4eec\u6709\u4e24\u4e2a\u9650\u5236\uff1a\n\n- $\\sum a_i\\le n^2-\\lfloor{n\\over 2} \\rfloor^2$\uff1b\n- $x=\\{i|a_i=\\max\\{a\\}\\},a_x\\le n\\times \\lceil{n\\over 2} \\rceil$\uff1b\n\n\u4e8c\u5206\u5f97\u5230 $n$\uff0c\u7136\u540e\u6211\u4eec\u8003\u8651\u6784\u9020\u65b9\u6848\uff0c\u8003\u8651\u8fd9\u6837\u7684\u4e00\u4e2a\u7f51\u683c\uff1a~~\u5b85\u4e86\u9898\u89e3\u7684\u56fe~~\n\n<center>\n    <img src=\"https://cdn.luogu.com.cn/upload/image_hosting/walrc0jr.png\">\n</center>\n\n\u5176\u5b9e\u8fd9\u5c31\u662f\u4e0a\u9762\u7684 \u201c\u5076\u6570\u5217\u7684\u5947\u6570\u884c\u201d \u4e4b\u7c7b\u7684\u4e1c\u897f\uff0c\u5bf9\u4e8e\u84dd\u8272\u7684\u683c\u5b50\uff0c\u53ef\u4ee5\u968f\u4fbf\u4e71\u586b\u7684\uff0c\u4f46\u662f\u5bf9\u4e8e\u7ea2\u8272\u548c\u9ec4\u8272\uff0c\u5b83\u53ef\u80fd\u6709\u51b2\u7a81\u3002\u540c\u65f6\uff0c\u540c\u4e00\u989c\u8272\u4e0d\u4f1a\u51b2\u7a81\u3002\n\n\u6211\u4eec\u5c06\u6240\u6709\u7684 $a_i$ \u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u5148\u8d2a\u5fc3\u5730\uff0c\u5c06\u5927\u7684\u6570\u5b57\u5c3d\u91cf\u5f80\u7ea2\u8272\u586b\uff0c\u5982\u679c\u7ea2\u8272\u586b\u4e0d\u4e0b\uff0c\u5c31\u5f80\u84dd\u8272\u586b \u2014\u2014 \u53ef\u4ee5\u8bc1\u660e\u8fd9\u662f\u4e00\u5b9a\u53ef\u884c\u7684\uff0c\u56e0\u4e3a \u7ea2\u8272+\u84dd\u8272 \u5c31\u6709 $n\\times \\lceil{n\\over 2} \\rceil$ \u4e2a\uff0c\u8fd9\u751a\u81f3\u53ef\u4ee5\u6ee1\u8db3\u6700\u5927\u7684 $a_i$.\n\n\u5f53\u7ea2\u8272\u90fd\u88ab\u586b\u5b8c\u65f6\uff0c\u6709\u51e0\u79cd\u60c5\u51b5\uff1a\n\n- \u6700\u5927\u7684\u989c\u8272\u8fd8\u6ca1\u6709\u88ab\u586b\u5b8c\uff0c\u90a3\u4e48\u5b83\u4f1a\u88ab\u84dd\u8272\u6d88\u8017\u6389\uff1b\n- \u6700\u5927\u7684\u989c\u8272\u5df2\u7ecf\u88ab\u586b\u5b8c\u4e86\uff0c\u751a\u81f3\u8fd8\u586b\u4e86\u4e00\u4e9b\u5176\u4ed6\u7684\u989c\u8272\uff1b\n\n\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u5269\u4e0b\u7684\u84dd\u8272\u683c\u5b50\u4e00\u5b9a\u4e0d\u4f1a\u548c\u7ea2\u8272\u51b2\u7a81\uff0c\u800c\u9ec4\u8272\u683c\u5b50\u6211\u4eec\u53ef\u4ee5\u4fdd\u8bc1\u548c\u7ea2\u8272\u683c\u5b50\u586b\u7684\u6700\u5927\u6570\u5b57\u4e0d\u4e00\u6837 \u2014\u2014 \u56e0\u4e3a \u7ea2+\u84dd \u7684\u7ec4\u5408\u62f3\u5df2\u7ecf\u628a\u6700\u5927\u6570\u5b57\u6d88\u8017\u6389\uff0c\u65e0\u8bba\u5982\u4f55\u90fd\u4e0d\u4f1a\u51b2\u7a81\uff1b\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u586b\u5728\u7ea2\u8272\u7684\u6bd4\u6700\u5927\u6570\u7a0d\u5fae\u5c0f\u4e00\u70b9\u7684\u6570\u5b57\u548c\u540e\u9762\u586b\u8fdb\u9ec4\u8272\u7684\u6570\u5b57\u4e0d\u4e00\u6837 \u2014\u2014 \u5982\u679c\u84dd\u8272\u90fd\u4e0d\u80fd\u5c06\u5c0f\u7684\u6570\u5b57\u5438\u7eb3\u6389\uff0c\u90a3\u4e48\u5b83\u5c06\u4f1a\u53d8\u6210\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u6570\u5b57\u3002\n\n\u6240\u4ee5\uff0c\u65e0\u8bba\u5982\u4f55\uff0c\u8fd9\u6837\u586b\u90fd\u4e0d\u4f1a\u51b2\u7a81\u3002\n\n\u7167\u7740\u8fd9\u4e2a\u601d\u8def\u586b\u683c\u5b50\u5c31\u597d\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n\\log n)$\uff0c\u5728\u4e8e\u6392\u5e8f~~\u7528\u57fa\u6392\u4e5f\u4e0d\u662f\u4e0d\u53ef\u4ee5~~.\n\n# \u53c1\u3001\u53c2\u8003\u4ee3\u7801 &para;\n\n```cpp\nconst int maxk=1e5;\n\npll a[maxk+5]; int m, k;\n\ninline void input(){\n\tm=readin(1), k=readin(1);\n\trep(i, 1, k) a[i]=mp(readin(1), i);\n}\n\ninline ll bisearch(){\n\tll sum=0, maxx=0;\n\trep(i, 1, k) sum+=a[i].fi, maxx=max(maxx, a[i].fi);\n\tll l=0, r=1000, mid, ans=-1;\n\twhile(l<=r){\n\t\tmid=(l+r)>>1;\n\t\tif(sum<=mid*mid-(mid>>1)*(mid>>1) && maxx<=mid*((mid+1)>>1))\n\t\t\tans=mid, r=mid-1;\n\t\telse l=mid+1;\n\t}\n\treturn ans;\n}\n\nint mat[1005][1005];\n\nvector<pii>red, blue, yellow;\n\nsigned main(){\n\trep(tmp, 1, readin(1)){\n\t\tinput();\n\t\tint n=bisearch();\n\t\tsort(a+1, a+k+1);\n\t\tred.clear(); blue.clear(); yellow.clear();\n\t\trep(i, 1, n) rep(j, 1, n) mat[i][j]=0;\n\t\tfor(int i=1; i<=n; i+=2)\n\t\t\tfor(int j=2; j<=n; j+=2)\n\t\t\t\tred.push_back(mp(i, j));\n\t\tfor(int i=1; i<=n; i+=2)\n\t\t\tfor(int j=1; j<=n; j+=2)\n\t\t\t\tblue.push_back(mp(i, j));\n\t\tfor(int i=2; i<=n; i+=2)\n\t\t\tfor(int j=1; j<=n; j+=2)\n\t\t\t\tyellow.push_back(mp(i, j));\n\t\tfor(int i=k; i>=1; --i) while(a[i].fi){\n\t\t\t--a[i].fi;\n\t\t\tif(!red.empty()) mat[red.back().fi][red.back().se]=a[i].se, red.pop_back();\n\t\t\telse if(!blue.empty()) mat[blue.back().fi][blue.back().se]=a[i].se, blue.pop_back();\n\t\t\telse mat[yellow.back().fi][yellow.back().se]=a[i].se, yellow.pop_back();\n\t\t}\n\t\tprintf(\"%d\\n\", n);\n\t\trep(i, 1, n){\n\t\t\trep(j, 1, n) printf(\"%d \", mat[i][j]);\n\t\t\tEndl;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1620655056,
        "uid": 125355,
        "name": "Vladilena",
        "ccfLevel": 0,
        "title": "CF1521E Nastia and a Beautiful Matrix"
    },
    {
        "content": "[My blog](https://www.cnblogs.com/whx666/p/CF1521E.html)\n\n**\u5176\u5b9e\u8fd9\u9898\u5e76\u4e0d\u9700\u8981\u6392\u5e8f\uff0c\u4e0b\u9762\u4f1a\u7ed9\u51fa\u8bc1\u660e**\n\n\u7b54\u6848\u6ee1\u8db3\u5355\u8c03\u6027\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e8c\u5206\u627e\u51fa\u8fb9\u957f $len$\u3002\u5982\u4e0b\u56fe\u6240\u793a\u5c06\u7f51\u683c\u67d3\u6210\u56db\u79cd\u989c\u8272\uff1a![](https://img2020.cnblogs.com/blog/1604447/202105/1604447-20210512202652123-155545459.png)\n\n\uff08\u56fe\u7247\u7684markdown\u597d\u50cf\u6302\u4e86\uff1f\u5c31\u662f[\u5b98\u65b9\u9898\u89e3](https://codeforc.es/blog/entry/90477)\u91cc\u7684\u56fe\uff0c\u4e5f\u53ef\u4ee5\u5728[\u8fd9\u91cc](https://img2020.cnblogs.com/blog/1604447/202105/1604447-20210512202652123-155545459.png)\u770b\uff09\n\n\u9971\u548c\u7684\u60c5\u51b5\u5c31\u662f\u628a\u6240\u6709\u975e\u767d\u8272\u7684\u683c\u5b50\u90fd\u586b\u4e0a\u6570\uff0c\u5171 $S=len^2-\\lfloor \\frac{len}{2} \\rfloor^2$ \u4e2a\uff0c\u90a3\u4e48\u4e8c\u5206\u7b2c\u4e00\u4e2a\u6761\u4ef6\u662f $S\\ge\\sum a_i$\n\n\u7136\u540e\u8003\u8651\u4f17\u6570 $x$\uff0c\u4e3a\u4e86\u6ee1\u8db3\u5bf9\u89d2\u7ebf\u4e0d\u91cd\u590d\uff0c\u5b83\u6700\u591a\u53ea\u80fd\u653e\u5728\u84dd\u8272\u548c\u7ea2(\u6216\u9ec4)\u8272\u7684\u683c\u5b50\u91cc\uff0c\u5171 $T=len\\times \\lceil \\frac{len}{2} \\rceil$ \u4e2a\uff0c\u9700\u6ee1\u8db3 $T\\ge a[x]$\n\n\u5bf9\u4e8e\u6ee1\u8db3\u4ee5\u4e0a\u4e24\u4e2a\u6761\u4ef6\u7684 $len$\uff0c\u4e00\u5b9a\u53ef\u4ee5\u6784\u9020\u51fa\u4e00\u4e2a\u89e3\uff0c\u65b9\u6cd5\u5982\u4e0b\uff1a\n\n\u628a\u6240\u6709\u6570\u6392\u6210\u4e00\u5217\uff0c\u76f8\u540c\u7684\u6570\u6392\u5728\u4e00\u8d77\uff0c$x$ \u6392\u5728\u6700\u524d\u9762\uff0c**\u5176\u4ed6\u6570\u987a\u5e8f\u968f\u610f**\uff0c\u7136\u540e\u5148\u5f80\u7ea2\u683c\u5b50\u653e\uff0c\u7ea2\u7684\u653e\u5b8c\u4e86\u653e\u84dd\u7684\uff0c\u6700\u540e\u653e\u9ec4\u7684\u3002\n\n\u7b80\u5355\u7684\u8bc1\u660e\u4e00\u4e0b\u6240\u6709 $2\\times 2$ \u5bf9\u89d2\u7ebf\u4e0d\u91cd\u590d\uff1a\u6240\u6709\u5bf9\u89d2\u7ebf\u90fd\u7531\u4e00\u4e2a\u9ec4\u7684\u4e00\u4e2a\u7ea2\u7684\u7ec4\u6210\uff0c\u8fdb\u884c\u5206\u7c7b\uff0c\n\n1\u3001\u5982\u679c $x$ \u586b\u6ee1\u4e86\u7ea2\u683c\u5b50\uff0c\u5e76\u4e14\u6839\u636e\u4e8c\u5206\u6761\u4ef6 $x$ \u6700\u591a\u586b\u6ee1\u84dd\u7684\uff0c\u4e0d\u4f1a\u586b\u5230\u9ec4\u7684\uff0c\u6240\u4ee5\u9ec4\u548c\u7ea2\u4e0d\u91cd\u590d\n\n2\u3001\u5982\u679c $x$ \u6ca1\u586b\u6ee1\u7ea2\u683c\u5b50\uff0c\u82e5\u51fa\u73b0\u91cd\u590d\uff0c\u5219\u5b58\u5728\u4e00\u4e2a $y$\uff0c\u5728\u7ea2\u683c\u5b50\u91cc\u586b\u4e86\uff0c\u53c8\u586b\u6ee1\u4e86\u84dd\u7684\uff0c\u8fd8\u5f97\u586b\u9ec4\u7684\u3002\u800c\u683c\u5b50\u6570\u91cf \u84dd $\\ge$ \u7ea2\uff0c$x$ \u53c8\u662f\u4f17\u6570\uff0c\u663e\u7136\u4e0d\u53ef\u80fd\n\n\u6240\u4ee5\u5176\u4ed6\u6570\u7684\u586b\u653e\u987a\u5e8f\u6839\u672c\u65e0\u6240\u8c13\uff0c\u4e0d\u9700\u8981\u6392\u5e8f\u3002 \n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\nvoid read (int &x) {\n    char ch = getchar(); x = 0; while (!isdigit(ch)) ch = getchar();\n    while (isdigit(ch)) x = x * 10 + ch - 48, ch = getchar();\n} const int N = 2e5 + 5, M = 2000, NN = N * 5;\nint n, s, mx, a[N], res[M][M], sr, sb, sy, id[N];\npair<int, int> r[NN], b[NN], y[NN];\n#define xx first\n#define yy second\nint get () {\n    int l = 0, r = 1000, mid, res = 0;\n    while (l <= r) {\n        mid = l + r >> 1;\n        if (s <= mid * mid - (mid / 2) * (mid / 2) && a[1] <= mid * ((mid + 1) / 2))\n            res = mid, r = mid - 1;\n        else l = mid + 1;\n    }\n    return res;\n}\nsigned main() {\n    int T; read (T);\n    while (T--) {\n        read (s), read (n); mx = 0;\n        for (int i = 1; i <= n; ++i) {\n            read (a[i]), id[i] = i;\n            if (a[i] > a[mx]) mx = i;\n        }\n        id[1] = mx, id[mx] = 1; swap (a[1], a[mx]);\n        int len = get (); sr = sb = sy = 0;\n        for (int i = 2; i <= len; i += 2)\n            for (int j = 1; j <= len; j += 2) r[++sr] = {i, j};\n        for (int i = 1; i <= len; i += 2)\n            for (int j = 1; j <= len; j += 2) b[++sb] = {i, j};\n        for (int i = 1; i <= len; i += 2)\n            for (int j = 2; j <= len; j += 2) y[++sy] = {i, j};\n        for (int i = 1; i <= len; ++i)\n            for (int j = 1; j <= len; ++j) res[i][j] = 0;\n        for (int i = 1; i <= n; ++i) {\n            for (int j = 1; j <= a[i]; ++j) {\n                if (sr) res[r[sr].xx][r[sr].yy] = id[i], --sr;\n                else if (sb) res[b[sb].xx][b[sb].yy] = id[i], --sb;\n                else res[y[sy].xx][y[sy].yy] = id[i], --sy;\n            }\n        }\n        printf (\"%d\\n\", len);\n        for (int i = 1; i <= len; ++i) {\n            for (int j = 1; j <= len; ++j) printf (\"%d \", res[i][j]); puts (\"\");\n        }\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1620824756,
        "uid": 84619,
        "name": "\u6e05\u5c18",
        "ccfLevel": 0,
        "title": "CF1521E Nastia and a Beautiful Matrix"
    },
    {
        "content": "\u5947\u602a\u7684\u6784\u9020\u9898\u589e\u52a0\u4e86\u3002\n\n\u8981\u6c42\u6700\u5c0f\u7684\u77e9\u9635\uff0c\u76f4\u63a5\u4e8c\u5206\u7b54\u6848\u8f6c\u5316\u4e3a\u5224\u5b9a\u3002\n\n\u7136\u540e\u8003\u8651\u600e\u6837\u586b\u4e00\u4e2a\u77e9\u5f62\u6700\u4f18\u3002\n\n\u624b\u7b97\u4e00\u4e0b\u4e0d\u96be\u53d1\u73b0\uff0c\u53ea\u586b\u5947\u6570\u5217\u662f\u4e2a\u5f88\u4f18\u7684\u65b9\u5f0f\uff0c\u5e76\u4e14\u4e0d\u7528\u8003\u8651\u5bf9\u89d2\u7ebf\u4e0d\u540c\u7684\u60c5\u51b5\u3002\n\n\u6269\u5c55\u4e00\u4e0b\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5728\u5076\u6570\u5217\u7684\u5947\u6570\u884c\u586b\u6570\uff0c\u8fd9\u6837\u6211\u4eec\u6700\u591a\u53ef\u4ee5\u586b $n^2-\\left\\lfloor\\dfrac{n}{2}\\right\\rfloor^2$ \u4e2a\u6570\u3002\n\n\u5e76\u4e14\u901a\u8fc7\u53cd\u8bc1\u6cd5\u6211\u4eec\u4e0d\u96be\u8bc1\u660e\u4efb\u610f\u4e00\u79cd\u65b9\u6848\u4e0d\u53ef\u80fd\u586b\u6bd4\u8fd9\u66f4\u591a\u7684\u6570\u3002\n\n\u4f46\u662f\u4e0d\u4ee3\u8868\u4e00\u5b9a\u53ef\u4ee5\u8fd9\u4e48\u586b\uff0c\u6bd4\u5982\u6240\u6709\u6570\u76f8\u540c\uff0c\u90a3\u4e48\u5076\u6570\u5217\u7684\u5c31\u4e0d\u80fd\u586b\u3002\n\n\u6240\u4ee5\u8fd8\u6709\u4e00\u4e2a\u6709\u89e3\u9650\u5236\u6761\u4ef6\uff0c\u5c31\u662f\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u6570\u4e0d\u8d85\u8fc7\u5947\u6570\u5217\u4e4b\u548c\uff0c\u5373 $n\\left\\lceil\\dfrac{n}{2}\\right\\rceil$ \u3002\n\n\u7b80\u5355\u8fd0\u7528\u56fe\u8bba\u77e5\u8bc6\u6211\u4eec\u4e5f\u80fd\u8bc1\u660e\u5982\u679c\u8d85\u8fc7\u8fd9\u4e2a\u6570\uff0c\u4e00\u5b9a\u5b58\u5728\u4e24\u4e2a\u683c\u5b50\u516c\u5171\u9876\u70b9\u3002\n\n\u6700\u540e\u8003\u8651\u6784\u9020\u3002\n\n\u5982\u679c\u53ea\u586b\u5947\u6570\u5217\uff0c\u5219\u53ef\u4ee5\u968f\u610f\u586b\uff0c\u8fd9\u542f\u53d1\u4e86\u6211\u4eec\u3002\n\n\u6211\u4eec\u5c06\u5947\u6570\u5217\u5947\u6570\u884c\u7684\u683c\u5b50\u79f0\u4e3a $a$\uff0c\u5947\u6570\u5217\u7684\u5076\u6570\u884c\u683c\u5b50\u79f0\u4e3a $b$ \uff0c\u5076\u6570\u5217\u7684\u5947\u6570\u884c\u683c\u5b50\u79f0\u4e3a $c$ \uff0c\u5269\u4e0b\u7684\u7559\u7a7a\u3002\u975e\u7a7a\u7684\u683c\u5b50\u4e00\u5171 $n^2-\\left\\lfloor\\dfrac{n}{2}\\right\\rfloor^2$ \u4e2a\u3002\n\n\u5e76\u4e14\u8fd8\u6709 $sz_a\\ge sz_b = sz_c$ \uff0c $sz_a+sz_b=n\\left\\lceil\\dfrac{n}{2}\\right\\rceil$ \u3002\n\n\u5176\u4e2d $a$ \u7684\u5bf9\u89d2\u7ebf\u662f\u7a7a\u683c\u5b50\uff0c\u53ef\u4ee5\u4efb\u610f\u586b\u3002\n\n\u6211\u4eec\u5c06\u6240\u6709\u6570\u6309\u51fa\u73b0\u6b21\u6570\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u4f18\u5148\u586b\u5165 $b$ \u683c\u5b50\uff0c\u90a3\u4e48\u6700\u540e\u4e00\u5b9a\u662f\u4e00\u79cd\u989c\u8272\u5c06 $b$ \u683c\u5b50\u6536\u5c3e\u5e76\u5269\u4e0b\u51e0\u4e2a\uff0c\u6211\u4eec\u5c06\u5269\u4e0b\u8fd9\u51e0\u4e2a\u586b\u5165 $a$ \u683c\u5b50\u3002\n\n\u56fa\u5b9a\u4e86 $b$ \u683c\u5b50\u540e\uff0c\u5176\u4f59\u989c\u8272\u53c8\u4e0e $b$ \u683c\u5b50\u4e2d\u4efb\u610f\u4e00\u4e2a\u4e92\u4e0d\u76f8\u540c\uff0c\u6240\u4ee5\u5269\u4e0b\u6ca1\u6709\u586b\u7684\u989c\u8272\u968f\u4fbf\u627e\u7a7a\u683c\u5b50\u586b\u5373\u53ef\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define rep(i,a,b) for(int i=a;i<=b;i++)\n#define pre(i,a,b) for(int i=a;i>=b;i--)\n#define N 1005\n#define M 200005\nusing namespace std;\ntypedef pair<int,int> Pr;\nint m,k,a[M],T,c[N][N];Pr u[M];\nvector<Pr>p,q,w;\nvoid calc(int n){\n\tp.clear();q.clear();w.clear();\n\trep(i,0,n+1)rep(j,0,n+1)c[i][j]=0;\n\trep(i,1,n)rep(j,1,n){\n\t\tif(i&1){\n\t\t\tif(j&1)w.push_back(make_pair(i,j));\n\t\t\telse p.push_back(make_pair(i,j));\n\t\t}\n\t\telse if(j&1)q.push_back(make_pair(i,j));\n\t}\n\tpre(i,T,1){\n\t\trep(j,1,u[i].first){\n\t\t\tif(p.size()){\n\t\t\t\tPr now=p[p.size()-1];\n\t\t\t\tp.pop_back();\n\t\t\t\tc[now.first][now.second]=u[i].second; \n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(q.size()){\n\t\t\t\t\tPr now=q[q.size()-1];\n\t\t\t\t\tint x=now.first,y=now.second,col=u[i].second;\n\t\t\t\t\tif(c[x-1][y-1]!=col&&c[x-1][y+1]!=col&&c[x+1][y-1]!=col&&c[x+1][y+1]!=col){\n\t\t\t\t\t\tc[x][y]=col;q.pop_back();\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tnow=w[w.size()-1];\n\t\t\t\t\t\tc[now.first][now.second]=col;w.pop_back();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tPr now=w[w.size()-1];\n\t\t\t\t\t\tc[now.first][now.second]=u[i].second;w.pop_back();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\trep(i,1,n){rep(j,1,n)printf(\"%d \",c[i][j]);putchar('\\n');}\n}\nvoid solve(){\n\tscanf(\"%d%d\",&m,&k);T=0;\n\trep(i,1,k){\n\t\tscanf(\"%d\",&a[i]);\n\t\tif(a[i])u[++T]=make_pair(a[i],i);\n\t}\n\tsort(u+1,u+T+1);\n\tint l=1,r=1000,ans=0;\n\twhile(l<=r){\n\t\tint mid=(l+r)>>1;\n\t\tif(mid*((mid+1)/2)>=u[T].first&&(mid*mid)-(mid/2)*(mid/2)>=m)ans=mid,r=mid-1;\n\t\telse l=mid+1;\n\t}\n\tprintf(\"%d\\n\",ans);calc(ans);\n}\nint main(){\n\tint T;scanf(\"%d\",&T);\n\twhile(T--)solve();\n\treturn 0;\n}\n```",
        "postTime": 1620484145,
        "uid": 119261,
        "name": "7KByte",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011CF1521E Nastia and a Beautiful Matrix"
    },
    {
        "content": "\u8981\u628a\u6240\u6709\u6570\u5bb9\u7eb3\u4e0b\u5c31\u4e00\u5b9a\u81f3\u5c11\u6709\uff0c$\\sum \\limits _{i = 1 \\to k} a_i < n^2$\u3002\u4f46\u8fd9\u4e2a\u9650\u5236\u592a\u5f31\u4e86\u53ef\u6076\u3002\n\n\u8003\u8651\u4e00\u79cd\u6784\u9020\uff0c\u4e00\u6392\u5168\u653e\u6570\u5b57\uff0c\u4e00\u6392\u9694\u4e00\u4e2a\u653e\u4e00\u4e2a\u3002\u611f\u89c9\u53ef\u4ee5\u505a\u5230\u6700\u4f18\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u666e\u9002\u5316\u7684\u7ec6\u8282\uff0c\u5373\u9700\u8981\u6ee1\u8db3\u5bf9\u89d2\u7ebf\u6570\u7ec4\u4e0d\u540c\u3002\n\n\u5168\u653e\u6570\u5b57\u7684\u5c31\u76f4\u63a5\u5f80\u4e0a\u603c\uff0c\u4e0d\u591f\u6362\u4e0b\u4e00\u4e2a\u6570\u5b57\uff0c\u987a\u5e8f\u586b\u5373\u53ef\u3002\n\n\u5168\u653e\u6570\u5b57\u7684\u4e0d\u59a8\u5747\u4e3a\u5947\u6570\u884c\uff0c\u5219\u9694\u4e00\u4e2a\u653e\u4e00\u4e2a\u7684\u4e3a\u5076\u6570\u884c\uff0c\u5728\u6240\u6709\u5947\u6570\u884c\u786e\u5b9a\u540e\u518d\u586b\u3002\u4ece\u4e0b\u5f80\u4e0a\uff0c\u53ea\u6709\u80fd\u586b\u5c31\u586b\u3002\n\n\u4e8b\u5b9e\u8bc1\u660e\uff0c\u4e00\u884c\u586b\u6ee1\uff0c\u4e00\u884c\u9694\u4e00\u4e2a\u586b\u4e00\u4e2a\u7684\u601d\u8def\u662f\u5bf9\u7684\u3002\n\n\u4f46\u5e76\u4e0d\u662f\u6309\u987a\u5e8f\u80fd\u586b\u5c31\u586b\uff0c\u56e0\u4e3a\u5728\u8fd9\u6837\u7684\u903b\u8f91\u4e2d\uff0c\u53ea\u80fd\u586b\u4e0b $n \\times \\lceil \\frac {n} {2} \\rceil$ \u4e2a\u540c\u79cd\u7c7b\u7684\u6570\uff0c\u4e0d\u7136\u5c31\u4f1a\u7834\u574f\u89c4\u5219\u4e8c\u3002\n\n\uff08\u53ef\u4f7f\u7528\u62bd\u5c49\u539f\u7406\u8bc1\u660e\u3002\n\n\u800c $n^2 - \\lfloor \\frac {n} {2} \\rfloor^2$ \u662f\u8fd9\u6837\u586b\u6700\u591a\u53ef\u4ee5\u6709\u591a\u5c11\u4e2a\u975e\u96f6\u7684\u6570\u586b\u5165\u3002\n\n\u6545\u53ef\u4ee5\u5f97\u51fa $n^2 - \\lfloor \\frac {n} {2} \\rfloor^2 \\geq m$\uff0c$n \\times \\lceil \\frac {n} {2} \\rceil \\geq \\max \\limits _{i = 1 \\to n} a_i$\u3002\u4f46\u8fd9\u5145\u5206\u5417\uff1f\n\nTwo thousand years later...\n\n\u5145\u5206\u3002\n\n\u6211\u4eec\u8003\u8651\u6309\u4ee5\u4e0b\u65b9\u5f0f\u6784\u9020\uff0c\u6309\u4ece\u6570\u5b57\u4e2a\u6570\u4ece\u5927\u5230\u5c0f\u7684\u987a\u5e8f\u4f9d\u6b21\u5c06\u5bf9\u5e94\u6570\u5b57\u586b\u5165\u8fd9\u4e9b\u683c\u5b50\uff1a\n\n- \u7b2c\u4e00\u7c7b\uff1a\u6a2a\u5750\u6807\u4e3a\u5947\u6570\uff0c\u7eb5\u5750\u6807\u4e3a\u5076\u6570\u3002\n- \u7b2c\u4e8c\u7c7b\uff1a\u6a2a\u5750\u6807\u4e3a\u5947\u6570\uff0c\u7eb5\u5750\u6807\u4e3a\u5947\u6570\u3002\n- \u7b2c\u4e09\u7c7b\uff1a\u6a2a\u5750\u6807\u4e3a\u5076\u6570\uff0c\u7eb5\u5750\u6807\u4e3a\u5947\u6570\u3002\n\n\uff08\u5141\u8bb8\u6700\u540e\u4e00\u7c7b\u4e0d\u586b\u3002\n\n\u90a3\u4e48\u4f1a\u7834\u574f\u7b2c\u4e8c\u4e2a\u9650\u5236\u7684\u5c31\u662f\u7b2c\u4e00\u7c7b\u683c\u5b50\u7684\u6570\u548c\u76f8\u90bb\u7684\u7b2c\u4e09\u7c7b\u683c\u5b50\u7684\u6570\u76f8\u540c\u3002\n\n\u800c\u7b2c\u4e00\u7c7b\u683c\u5b50\u586b\u5165\u7684\u6700\u540e\u4e00\u4e2a\u6570\u662f\u7b2c $\\lceil \\frac {n} {2} \\rceil \\times \\lceil \\frac {n} {2} \\rceil$ \u4e2a\u586b\u5165\u7684\uff0c\u7b2c\u4e09\u7c7b\u683c\u5b50\u586b\u5165\u7684\u7b2c\u4e00\u4e2a\u6570\u662f\u7b2c $n \\times \\lceil \\frac {n} {2} \\rceil + 1$ \u4e2a\u586b\u5165\u7684\u3002\n\n\u82e5\u5047\u8bbe\u4f1a\u76f8\u540c\uff0c\u90a3\u4e48\u7b2c\u4e00\u7c7b\u683c\u5b50\u5e94\u5168\u662f\u8fd9\u4e2a\u76f8\u540c\u7684\u6570 $x$\u3002\n\n\u56e0\u4e3a\u5982\u679c\u4e0d\u662f $x$\uff0c\u5219\u6709\u53e6\u4e00\u4e2a\u6570 $y$ \uff08$y$ \u5e94\u6bd4 $x$ \u540e\u586b\u5165\uff09\u8de8\u8d8a\u4e86\u7b2c\u4e00\u7c7b\u548c\u7b2c\u4e09\u7c7b\uff0c$y$ \u7684\u4e2a\u6570\u81f3\u5c11\u4e3a $n \\times \\lceil \\frac {n} {2} \\rceil - \\lceil \\frac {n} {2} \\rceil \\times \\lceil \\frac {n} {2} \\rceil + 2$ \uff0c\u800c $x$ \u7684\u6570\u4e2a\u6570\u81f3\u591a\u4e3a $\\lceil \\frac {n} {2} \\rceil \\times \\lceil \\frac {n} {2} \\rceil - 1$\u3002\n\n\u56e0\u4e3a $n \\times \\lceil \\frac {n} {2} \\rceil - \\lceil \\frac {n} {2} \\rceil \\times \\lceil \\frac {n} {2} \\rceil + 2 = \\lceil \\frac {n} {2} \\rceil \\times \\lfloor \\frac {n} {2} \\rfloor + 2$ \u4e14 $\\lceil \\frac {n} {2} \\rceil \\times \\lfloor \\frac {n} {2} \\rfloor + 2 - (\\lceil \\frac {n} {2} \\rceil \\times \\lceil \\frac {n} {2} \\rceil - 1) = \\lceil \\frac {n} {2} \\rceil \\times (1 / 0) + 3 > 0$\uff0c\u6240\u4ee5 $n \\times \\lceil \\frac {n} {2} \\rceil - \\lceil \\frac {n} {2} \\rceil \\times \\lceil \\frac {n} {2} \\rceil + 2 > \\lceil \\frac {n} {2} \\rceil \\times \\lceil \\frac {n} {2} \\rceil - 1$ \u3002\u800c\u8fd9\u4e0e\u6309\u7167\u6570\u5b57\u4e2a\u6570\u4ece\u5927\u5230\u5c0f\u7684\u987a\u5e8f\u77db\u76fe\u3002\n\n\u6545\u7b2c\u4e00\u7c7b\u5e94\u5168\u662f $x$\uff0c\u56e0\u4e3a\u662f\u6309\u987a\u5e8f\u4e14\u7b2c\u4e09\u7c7b\u7684\u7b2c\u4e00\u4e2a\u4e5f\u662f $x$\uff0c\u90a3\u4e48\u8bf4\u660e\u8fd9\u4e2a\u6570\u7684\u4e2a\u6570\u81f3\u5c11\u4e3a $n \\times \\lceil \\frac {n} {2} \\rceil + 1$\uff0c\u8fd9\u4e0e $n \\times \\lceil \\frac {n} {2} \\rceil \\geq \\max \\limits _{i = 1 \\to n} a_i$ \u77db\u76fe\u3002\n\n\u6545\u7b2c\u4e00\u7c7b\u683c\u5b50\u7684\u6570\u548c\u76f8\u90bb\u7684\u7b2c\u4e09\u7c7b\u683c\u5b50\u7684\u6570\u4e0d\u53ef\u80fd\u76f8\u540c\u3002\n\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n\nint Abs (int x) { return x < 0 ? -x : x; }\nint Max (int x, int y) { return x > y ? x : y; }\nint Min (int x, int y) { return x < y ? x : y; }\n\nint Read () {\n    int x = 0, k = 1;\n    char s = getchar ();\n    while (s < '0' || s > '9') {\n        if (s == '-')\n            k = -1;\n        s = getchar ();\n    }\n    while ('0' <= s && s <= '9') \n        x = (x << 3) + (x << 1) + (s ^ 48), s = getchar ();\n    return x * k;\n}\n\nvoid Write (int x) {\n    if (x < 0)\n        putchar ('-'), x = -x;\n    if (x > 9)\n        Write (x / 10);\n    putchar (x % 10 + '0');\n}\n\nvoid Print (int x, char s) { Write (x), putchar (s); }\n\nconst int Maxn = 1e5 + 5;\nconst int Maxm = 5e2 + 5;\n\nint a[Maxn], Num[Maxn], Res[Maxm][Maxm];\n\nbool Cmp (int x, int y) { return a[x] > a[y]; }\n\n/*\n1\n25 3\n12 10 3\n*/\n\nint main () {\n    int t = Read ();\n    while (t--) {\n        int m = Read (), k = Read (), Ma = -1;\n        for (int i = 1; i <= k; i++)\n            a[i] = Read (), Ma = Max (Ma, a[i]), Num[i] = i;\n        int n;\n        for (n = 1; n; n++)\n            if (n * n - (n / 2) * (n / 2) >= m && n * ((n + 1) / 2) >= Ma)\n                break;\n        for (int i = 1; i <= n; i++)\n            for (int j = 1; j <= n; j++)\n                Res[i][j] = 0;\n        int p = 1, Limit = 1;\n        for (int i = 1; i <= k; i++)\n            if (a[Num[i]] != 0)\n                Limit = i;\n        bool Flag = false;\n        for (int i = 1; i <= n; i += 2)\n            for (int j = 2; j <= n; j += 2) {\n                while (!a[Num[p]] && p <= Limit) \n                    p++;\n                if (p == Limit + 1) {\n                    Flag = true;\n                    break;\n                }\n                Res[i][j] = Num[p], a[Num[p]]--;\n            }      \n        if (Flag || (!a[Num[Limit]] && p == Limit)) {\n            Print (n, '\\n');\n            for (int i = 1; i <= n; i++)\n                for (int j = 1; j <= n; j++)\n                    Print (Res[i][j], j == n ? '\\n' : ' ');\n            continue;\n        }\n        for (int i = 1; i <= n; i += 2)\n            for (int j = 1; j <= n; j += 2) {\n                while (!a[Num[p]] && p <= Limit) \n                    p++;\n                if (p == Limit + 1) {\n                    Flag = true;\n                    break;\n                }\n                Res[i][j] = Num[p], a[Num[p]]--;\n            }\n        if (Flag || (!a[Num[Limit]] && p == Limit)) {\n            Print (n, '\\n');\n            for (int i = 1; i <= n; i++)\n                for (int j = 1; j <= n; j++)\n                    Print (Res[i][j], j == n ? '\\n' : ' ');\n            continue;\n        }\n        for (int i = 2; i <= n; i += 2)\n            for (int j = 1; j <= n; j += 2) {\n                while (!a[Num[p]] && p <= Limit) \n                    p++;\n                if (p == Limit + 1) {\n                    Flag = true;\n                    break;\n                }\n                Res[i][j] = Num[p], a[Num[p]]--;\n            }\n        if (Flag || (!a[Num[Limit]] && p == Limit)) {\n            Print (n, '\\n');\n            for (int i = 1; i <= n; i++)\n                for (int j = 1; j <= n; j++)\n                    Print (Res[i][j], j == n ? '\\n' : ' ');\n            continue;\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1656413953,
        "uid": 266779,
        "name": "STrAduts",
        "ccfLevel": 6,
        "title": "\u300cCF1521E\u300dNastia and a Beautiful Matrix"
    },
    {
        "content": "- **\u524d\u8a00**\n\n  \u4e00\u9053\u6784\u9020\u9898\u3002\n  \n  ~~\u5173\u4e8e\u6211\u88ab\u5361\u5e38\u4e86\u8fd9\u4ef6\u4e8b\uff08\uff08~~\n\n------------\n\n\n- **\u5206\u6790**\n\n  \u9996\u5148\uff0c\u8003\u8651\u6bcf\u4e2a $2\\times2$ \u77e9\u9635\u90fd\u5fc5\u987b\u6709\u4e00\u4e2a $0$ \uff0c\u4e0d\u59a8\u5148\u8ba1\u7b97\u51fa\u6700\u5c11\u9700\u8981\u51e0\u4e2a $0$ \u3002\n\n  \u663e\u7136\uff0c\u5bf9\u4e8e\u6bcf\u4e2a $(i+j) \\equiv 0 \\pmod{2}$ \u4e14 $i$ \u548c $j$ \u90fd\u4e3a\u5076\u6570\u65f6\u5019\uff0c\u628a $(i,j)$ \u8d4b\u503c\u4e3a $0$ \uff0c\u6b64\u65f6\u7684 $0$ \u6570\u91cf\u6700\u5c11\u3002\n\n  \u6240\u4ee5\u6700\u5c11\u9700\u8981\u7684 $0$ \u7684\u4e2a\u6570\u662f $\\left\\lfloor \\dfrac{p}{2} \\right\\rfloor ^2$ \u3002\n\n  \u6240\u4ee5\u5728\u7b97 $p$ \u7684\u65f6\u5019\uff0c\u6700\u5c0f\u7684 $p$ \u4e00\u5b9a\u8981\u6ee1\u8db3 $m>p^2-\\left\\lfloor \\dfrac{p}{2} \\right\\rfloor ^2$ \u3002\n\n  \u63a5\u7740\u6211\u4eec\u5bf9 $0$ \u7684\u4e0a\u4e0b\u5de6\u53f3\u67d3\u8272\uff0c\u4e0a\u4e0b\u4e3a $1$ \uff0c\u5de6\u53f3\u4e3a $2$ \u3002\n\n  ![](https://i.loli.net/2021/10/13/nmNMLhavOU64HKF.png)\n\n  \u56e0\u4e3a $0$ \u6b64\u65f6\u5df2\u7ecf\u6ee1\u8db3\u9898\u76ee\u8981\u6c42\u4e86\u3002\u6240\u4ee5\u6211\u4eec\u8003\u8651\u5bf9\u89d2\u7ebf\u8981\u6c42\u3002\n\n  \u6b64\u65f6\u53ea\u8981\u8003\u8651\u6bcf\u7ec4\u7684 $1$ \u548c $2$ \u4e0d\u540c\u5c31\u597d\u4e86\u3002\n\n  \u4f46\u662f\uff0c\u6709\u53ef\u80fd\u6b64\u65f6\u67d3\u8272\u65e0\u6cd5\u6ee1\u8db3\u8981\u6c42\u3002\u5982\u679c\u51fa\u73b0\u4e00\u4e2a\u989c\u8272\u7684\u6570\u91cf\u5927\u4e8e\u767d\u8272\u548c $0$ \uff08\u6216 $1$ \uff09\u7684\u603b\u6570\uff0c\u5c31\u65e0\u6cd5\u6ee1\u8db3\u8981\u6c42\u3002\n\n  \u4f46\u8fd9\u79cd\u989c\u8272\u6700\u591a\u5b58\u5728 $1$ \u4e2a\uff0c\u6240\u4ee5\u5f00\u5934\u8ba1\u7b97 $p$ \u7684\u65f6\u5019\u518d\u591a\u5224\u65ad\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\n\n  \u5982\u679c\u4fdd\u8bc1\u4e00\u5b9a\u6709\u89e3\uff0c\u90a3\u5c31\u76f4\u63a5\u67d3\u8272\u5c31\u597d\u4e86\u3002\u628a $cnt_i$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c$0$ \u4ece\u6570\u91cf\u6700\u5c0f\u7684\u989c\u8272\u5f00\u59cb\u8d4b\u503c\uff0c$1$ \u4ece\u6700\u5927\u7684\u5f00\u59cb\u8d4b\u503c\u3002\u6ce8\u610f\u8fd9\u91cc\u7684\u8d4b\u503c\u5305\u62ec $0$ \uff0c\u4e5f\u4f18\u5148\u8003\u8651 $0$ \u3002\u53ef\u4ee5\u8bc1\u660e\u8fd9\u6837\u4e00\u5b9a\u6ee1\u8db3\u9898\u76ee\u8981\u6c42\u3002\n\n\n- **\u4ee3\u7801**\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nconst int N=1e5+5,M=3000+5;\nstruct node{\n\tint id,x;\n}cnt[N];\nint T,n,m,p,a[M][M],ans[M][M];\nbool cmp(node u,node v)\n{\tif(u.x!=v.x)return u.x<v.x;\n\telse return u.id<v.id;\n}\nvoid solve()\n{\t\n\tcnt[0].x=p*p-m;cnt[0].id=0;\n\tfor(int i=1;i<=p;i++)\n\t\tfor(int j=1;j<=p;j++)\n\t\t\ta[i][j]=-1;\n\tfor(int i=1;i<=p;i++)\n\t\tfor(int j=1;j<=p;j++)\n\t\t{\t\n\t\t\tif((i&1)==0&&(j&1)==0&&((i+j)&1)==0)\n\t\t\t{\t\n\t\t\t\ta[i][j]=ans[i][j]=0;\n\t\t\t\tcnt[0].x--;\n\t\t\t\ta[i-1][j]=a[i+1][j]=1;\n\t\t\t\ta[i][j-1]=a[i][j+1]=2;\n\t\t\t}\n\t\t}\n\tint x=0,y=n;\n\twhile(x<=n&&cnt[x].x==0)x++;\n\twhile(y>=0&&cnt[y].x==0)y--;\n\tfor(int i=1;i<=p;i++)\n\t\tfor(int j=1;j<=p;j++)\n\t\t{\t\n\t\t\tif(a[i][j]==0)continue;\n\t\t\telse if(a[i][j]==1)\n\t\t\t{\t\n\t\t\t\tans[i][j]=cnt[x].id;\n\t\t\t\tcnt[x].x--;\n\t\t\t\twhile(x<=n&&cnt[x].x==0)x++;\n\t\t\t}\n\t\t\telse if(a[i][j]==2)\n\t\t\t{\t\n\t\t\t\tans[i][j]=cnt[y].id;\n\t\t\t\tcnt[y].x--;\n\t\t\t\twhile(y>=0&&cnt[y].x==0)y--;\n\t\t\t}\n\t\t}\n\tfor(int i=1;i<=p;i++)\n\t\tfor(int j=1;j<=p;j++)\n\t\t{\t\n\t\t\tif(a[i][j]!=-1)continue;\n\t\t\tans[i][j]=cnt[x].id;\n\t\t\tcnt[x].x--;\n\t\t\twhile(x<=n&&cnt[x].x==0)x++;\n\t\t}\n}\nint main()\n{\t\n\tscanf(\"%d\",&T);\n\twhile(T--)\n\t{\t\n\t\tscanf(\"%d%d\",&m,&n);\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\t\n\t\t\tscanf(\"%d\",&cnt[i].x);\n\t\t\tcnt[i].id=i;\n\t\t}\n\t\tsort(cnt+1,cnt+1+n,cmp);\n\t\tif(m==1)\n\t\t{\t\n\t\t\tprintf(\"1\\n%d\\n\",cnt[n]);\n\t\t\tcontinue;\n\t\t}\n\t\tp=2;\n\t\twhile(p*p-(p/2)*(p/2)<m)p++;\n\t\twhile(cnt[n].x>p*p-(p/2)*(p/2)-(p/2)*((p+1)/2))p++;\n\t\tsolve();\n\t\tprintf(\"%d\\n\",p);\n\t\tfor(int i=1;i<=p;i++)\n\t\t{\t\n\t\t\tfor(int j=1;j<=p;j++)\n\t\t\t\tprintf(\"%d \",ans[i][j]);\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n------------\n\n$$\\text{by Rainy7}$$",
        "postTime": 1634128243,
        "uid": 39408,
        "name": "Rainy7",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1521E Nastia and a Beautiful Matrix"
    }
]