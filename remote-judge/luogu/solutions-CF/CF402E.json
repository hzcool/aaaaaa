[
    {
        "content": "~~\u90fd\u7528 tarjan \uff0c\u6211\u504f\u8981 floyd~~\u3002\n\n### \u9898\u76ee\u63cf\u8ff0\n\n> \u7ed9\u5b9a\u4e00\u4e2a\u77e9\u9635 $A$\uff0c\u95ee\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u6b63\u6574\u6570 $k$ \u4f7f\u5f97 $A^k$ \u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u5927\u4e8e $0$\u3002\n\n### \u7b97\u6cd5\u601d\u8def\n\n\u539f\u9898\u4e2d\u4fdd\u8bc1\u4e86 $A_{i,j}\\ge 0$\uff0c\u5373\u6bcf\u4e2a\u6570\u4e0d\u662f\u6b63\u6574\u6570\u5c31\u662f $0$\u3002\n\n\u56de\u987e\u4e00\u4e0b\u77e9\u9635\u4e58\u6cd5\u7684\uff1a\n\n$$\nC_{i,j}=\\sum_{t=1}^n A_{i,t}\\times B_{t,j}\n$$\n\n\u5219\u53ef\u4ee5\u77e5\u9053 $A^k_{i,j}$ \u4e0d\u4e3a $0$ \u7684\u5145\u8981\u6761\u4ef6\u662f\u5b58\u5728\u4e00\u4e2a $t(1\\le t\\le n)$ \u6ee1\u8db3 $A^k_{i,t}$ \u4e0e $A^k_{t,j}$ \u4e0d\u540c\u65f6\u4e3a $0$\u3002\n\n\u7531\u4e8e\u5982\u679c $A_{i,j}>0$\uff0c\u90a3\u4e48\u4e00\u5b9a\u6709 $A^k_{i,j}>0$\uff0c\u5219\u53ef\u4ee5\u5c06\u539f\u77e9\u9635\u5316\u4e3a\u4e00\u4e2a $01$ \u77e9\u9635\u3002\n\n\u4e8e\u662f\u60f3\u5230\u4e86\u7ecf\u8fc7 $k$ \u6761\u8fb9\u7684\u6700\u77ed\u8def\u6a21\u578b\uff0c\u5982\u679c $A^k_{i,j}$ \u4e3a $1$\uff0c\u5219\u8bf4\u660e\u6709\u4e00\u6761\u4ece $i$ \u5230 $j$ \u7684\u7ecf\u8fc7 $k$ \u6761\u8fb9\u7684\u8def\u5f84\u3002\u53c8\u7531\u4e8e\u9898\u76ee\u4fdd\u8bc1 $A_{i,i}>0$\uff0c\u6240\u4ee5\u4ece $i$ \u5230 $j$ \u4e00\u5b9a\u6709\u4e00\u6761\u7ecf\u8fc7\u5c0f\u4e8e\u7b49\u4e8e $k$ \u6761\u8fb9\u7684\u8def\u5f84\u3002\n\n\u5f53 $k$ \u8db3\u591f\u5927\u7684\u65f6\u5019\uff0c\u4e8b\u5b9e\u4e0a $A_{i,j}$ \u53cd\u6620\u51fa $i$ \u5230 $j$ \u662f\u5426\u6709\u4e00\u6761\u8def\u5f84\u3002\n\n\u539f\u9898\u88ab\u5316\u4e3a\u539f\u56fe\u4efb\u610f\u4e24\u70b9\u662f\u5426\u80fd\u591f\u4e92\u76f8\u5230\u8fbe\u3002\n\n\u4f7f\u7528 $\\text{floyd+bitset}$ \u4f20\u9012\u95ed\u5305\u5373\u53ef\u3002\n\n### \u4ee3\u7801\u5b9e\u73b0\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nnamespace IO{\n    template<typename T>inline void read(T &x){\n        x=0;\n        char ch=getchar();\n        bool flag=0;\n        while(ch<'0'||ch>'9') flag=flag||(ch=='-'),ch=getchar();\n        while(ch>='0'&&ch<='9') x=x*10+(ch^'0'),ch=getchar();\n        if(ch!='.'){\n            x=flag?-x:x;\n            return;\n        }\n        double Base=0.1;\n        while(ch<'0'||ch>'9') ch=getchar();\n        while(ch>='0'&&ch<='9') x=x+Base*(ch^'0'),Base/=10.0,ch=getchar();\n        x=flag?-x:x;\n    }\n    template<typename T>void prt(T x){\n        if(x>9) prt(x/10);\n        putchar(x%10+'0');\n    }\n    template<typename T>inline void put(char ch,T x){\n        if(x<0) putchar('-'),x=-x;\n        prt(x);\n        putchar(ch);\n    }\n    const int DM[10]={1,10,100,1000,10000,100000,1000000,10000000,100000000,1000000000};\n    inline void putd(char ch,double x,int w){\n        if(x<0) putchar('-'),x=-x;\n        if(!w){\n            put(ch,(int)(x+0.5));\n            return;\n        }\n        int prex=(int)x;\n        x-=(int)x;\n        x*=DM[w];\n        x+=0.5;\n        int nowx=(int)x,now=0;\n        if(nowx>=DM[w]) nowx=0,prex++;\n        put('.',prex);\n        int xx=nowx;\n        if(!xx) now=1;\n        else while(xx) xx/=10,now++;\n        now=w-now;\n        while(now--) putchar('0');\n        put(ch,nowx);\n    }\n    inline void putstr(string s){\n        for(int i=0;i<s.length();i++) putchar(s[i]);\n    }\n}\nusing namespace IO;\n#define N 2005\nint n;\nbitset<N>f[N];\nint main(){\n\tread(n);\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1,x;j<=n;j++)\n\t\t\tread(x),f[i][j]=(x>0);\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tif(f[j][i]) f[j]|=f[i];\n\tfor(int i=1;i<=n;i++)\n\t\tif(f[i].count()!=n) return putstr(\"NO\\n\"),0;\n\tputstr(\"YES\\n\");\n\treturn 0;\n}\n```",
        "postTime": 1636014657,
        "uid": 172370,
        "name": "fzj2007",
        "ccfLevel": 0,
        "title": "CF402E Strictly Positive Matrix"
    },
    {
        "content": "# \u9898\u76ee\n\n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF402E)\n\n# \u9898\u89e3\n\n~~\u60f3\u4e86\u534a\u5929\u6ca1\u60f3\u51fa\u6765~~\n\n**\u9996\u5148\u9700\u8981\u6ce8\u610f\u9898\u76ee\u4e2d\u4e00\u4e2a\u5341\u5206\u91cd\u8981\u7684\u6761\u4ef6\uff0c\u5c31\u662f $a_{i,j}\\ge 0$\uff0c\u8fd9\u4e2a\u6761\u4ef6\u662f\u6211\u4eec\u505a\u51fa\u8fd9\u9053\u9898\u7684\u5173\u952e**\uff0c\u800c\u6211\u4eec\u9700\u8981\u505a\u7684\uff0c\u662f\u5224\u65ad\u662f\u5426\u5b58\u5728 $k$ \u4f7f\u5f97 $A^k$ \u662f\u4e00\u4e2a\u4e25\u683c\u6b63\u77e9\u9635\uff0c\u5373\u4f7f\u5176\u6bcf\u4e00\u9879\u90fd\u5927\u4e8e $0$.\n\n\u9996\u5148\uff0c\u5229\u7528 $a_{i,j}\\ge 0$\uff0c\u6211\u4eec\u5c06\u77e9\u9635\u4e2d\u6240\u6709\u5927\u4e8e $0$ \u7684\u5143\u7d20\u90fd\u770b\u6210 $1$\uff0c\u8fd9\u6837\u505a\u4e3a\u4ec0\u4e48\u662f\u5bf9\u7684\uff1f\u8003\u8651\u77e9\u9635\u4e58\u6cd5\uff0c\u5047\u5982\u6709\u8fd9\u6837\u4e00\u4e2a\u7b97\u5f0f\n$$\nA\\times B=C\n$$\n\u5176\u4e2d\uff0c$A$ \u662f $n\\times m$ \u7684\u77e9\u9635\uff0c$B$ \u662f $m\\times k$ \u7684\u77e9\u9635\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7b97\u5f0f\u5199\u6210\u4e00\u822c\u5f62\u5f0f\u5c31\u662f\n$$\nc_{i,j}=\\sum_{k=1}^ma_{i,t}\\times b_{t,j}\n$$\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u53ea\u9700\u77e5\u9053 $A$ \u7684\u7b2c $i$ \u884c\u548c $B$ \u7684\u7b2c $j$ \u5217\u5bf9\u4f4d\u4e58\u8d77\u6765\u4e4b\u540e\u6c42\u548c\u662f\u5426\u5927\u4e8e $0$ \u5373\u53ef\uff0c\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u6240\u6709\u7684 $a_{i,j}\\ge 0$\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u5e76\u4e0d\u5728\u610f\u5176\u503c\u662f\u591a\u5c11\uff0c\u53ea\u8981\u6709$A$ \u7684\u7b2c $i$ \u884c\u548c $B$ \u7684\u7b2c $j$ \u5217\u5bf9\u4f4d\u7684\u67d0\u4e00\u4f4d\u6070\u597d\u540c\u65f6\u5927\u4e8e $0$\uff0c\u90a3\u4e48\u7ed3\u679c\u7684\u8fd9\u4e00\u4f4d\u5c31\u4e00\u5b9a\u5927\u4e8e $0$.\n\n\u8f6c\u6362\u4e4b\u540e\uff0c$A^k$ \u8fd9\u4e2a\u4e25\u683c\u6b63\u77e9\u9635\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u5168 $1$ \u77e9\u9635\uff0c\u800c\u6211\u4eec\u8f93\u5165\u7684\u77e9\u9635\u65e0\u7591\u662f\u4e00\u4e2a $01$ \u77e9\u9635\u3002\n\n\u7531 $01$ \u77e9\u9635\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u90bb\u63a5\u77e9\u9635\uff0c\u5bf9\u4e8e\u67d0\u4e00\u4e2a\u90bb\u63a5\u77e9\u9635 $D$\uff0c\u5982\u679c $d_{i,j}=1$ \u5219\u8868\u793a $i,j$ \u95f4\u6709\u4e00\u6761\u8fb9\uff0c\u5c06\u5176\u62d3\u5c55\uff0c**\u5bf9\u4e8e $D^p$\uff0c\u5982\u679c $d'_{u,v}>0$\uff0c\u5219\u8bf4\u660e $u,v$ \u4e4b\u95f4\u5b58\u5728 $d'_{u,v}$ \u6761\u957f\u5ea6\u4e3a $p$ \u7684\u8def\u5f84\u3002**\n\n\u5c06\u5176\u653e\u5230\u6211\u4eec\u7684 $A$ \u4e0a\u9762\u6765\uff0c\u5982\u679c $A^k$ \u662f\u4e25\u683c\u6b63\u77e9\u9635\uff0c\u5219\u8bf4\u660e\u5176\u6240\u6709\u70b9\u4e4b\u95f4\u90fd\u5b58\u5728\u957f\u5ea6\u4e3a $k$ \u7684\u8def\u5f84\uff0c**\u65e2\u7136\u5b58\u5728\u8def\u5f84\uff0c\u5219\u8bf4\u660e\u5176\u4e00\u5b9a\u662f\u8054\u901a\u7684**\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u770b\u4e00\u770b\u539f\u56fe\u2014\u2014\u4e5f\u5c31\u662f $A$ \u8fd9\u4e2a\u90bb\u63a5\u77e9\u9635\u53cd\u6620\u7684\u56fe\u662f\u5426\u662f\u4e00\u4e2a\u8fde\u901a\u56fe\u5373\u53ef\u3002\n\n\u6700\u540e\u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u5728 $A$ \u4e0a\u8dd1\u4e00\u8fb9 $tarjan$ \u7f29\u70b9\uff0c\u770b\u662f\u5426\u53ea\u6709\u4e00\u4e2a $scc$ \u5373\u53ef\u3002\n\n# \u4ee3\u7801\n\n```cpp\nhttps://www.cnblogs.com/Arextre/p/13540163.html\n```\n\n",
        "postTime": 1597981077,
        "uid": 125355,
        "name": "Vladilena",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF402E \u3010Strictly Positive Matrix\u3011"
    },
    {
        "content": "\u6839\u636e\u90bb\u63a5\u77e9\u9635\u7684\u6027\u8d28\uff0c$A^k$\u7684\u77e9\u9635\u4e2d$A(i,j)$\u82e5\u4e3a1\uff0c\u5219$ij$\u95f4\u5b58\u5728\u4e00\u6761\u957f\u5ea6\u4e3a$k$\u7684\u8def\u5f84\u3002\n\n$A^k$\u82e5\u5168\u90e8\u4e3a\u5927\u4e8e0\u7684\u6574\u6570\uff0c\u90a3\u4e48\u6240\u6709\u7684\u70b9\u4e4b\u95f4\u90fd\u6709\u957f\u5ea6\u4e3a$k$ \u7684\u8def\u5f84\u4e14\u53ef\u4ee5\u4e92\u76f8\u5230\u8fbe\u3002\n\n\u4f46\u5173\u952e\u5e76\u4e0d\u662f\u5b58\u5728\u957f\u5ea6\u4e3a$k$\u7684\u8def\u5f84\uff0c\u800c\u662f\u6240\u6709\u70b9\u4e4b\u95f4\u53ef\u4ee5\u76f8\u4e92\u5230\u8fbe\uff0c\u90a3\u5c31\u8bf4\u660e\u8fd9\u5f20\u56fe\u662f\u5f20\u5f3a\u8fde\u901a\u56fe\u3002\n\n\u6240\u4ee5\uff0c\u53ea\u9700\u8981\u7528$tarjan$\u7b97\u4e00\u4e0b\u56fe\u4e2d\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u4e2a\u6570\u662f\u5426\u4e3a1\u5c31\u597d\u4e86\u3002\n\nAC\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define reint register int\nusing namespace std;\nconst int N=2005;\nstruct E{\n  int to,nxt;\n}ed[N*N*2];int H[N*N*2],cnt;\nstack<int>sta;\nbool vis[N][N],flg=true,ins[N];int n,tmp;\nint dfn[N],low[N],tot,num;\ninline void add(int x,int y){\n  cnt++;ed[cnt].to=y;ed[cnt].nxt=H[x];H[x]=cnt;\n  return;\n}\nvoid tarjan(int x){\n  dfn[x]=low[x]=++tot;\n  ins[x]=true;sta.push(x);\n  int u,k;\n  for(reint i=H[x];i;i=ed[i].nxt){\n    u=ed[i].to;\n    if(!dfn[u]){tarjan(u);low[x]=min(low[x],low[u]);}\n    else if(ins[u])low[x]=min(low[x],dfn[u]);\n  }\n  if(low[x]==dfn[x]){\n    num++;\n    do{\n      k=sta.top();sta.pop();\n      ins[k]=false;\n    }while(x!=k);\n  }\n}\nint main(){\n  scanf(\"%d\",&n);\n  for(reint i=1;i<=n;i++)\n  for(reint j=1;j<=n;j++){\n    scanf(\"%d\",&tmp);\n    if(tmp)vis[i][j]=true;\n    else flg=false;\n  }if(flg){puts(\"YES\");return 0;}\n  for(reint i=1;i<=n;i++)\n  for(reint j=1;j<=n;j++)\n    if(vis[i][j])add(i,j);\n  for(reint i=1;i<=n;i++)if(!dfn[i])tarjan(i);\n  if(num==1)puts(\"YES\");\n  else puts(\"NO\");\n  return 0;\n}\n\n```",
        "postTime": 1530936724,
        "uid": 52605,
        "name": "\u6765\u65e5\u65b9\u957f",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF402E \u3010Strictly Positive Matrix\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u4e86\u89e3\u77e9\u9635\u4e58\u6cd5\u7684\u89c4\u5219\u3002\u4e24\u4e2a\u77e9\u9635\uff0c\u8bbe\u4e3a $A, B$ \uff0c\u5176\u4e2d $A$ \u7684\u5927\u5c0f\u4e3a $n \\times m$ \uff0c$B$ \u7684\u5927\u5c0f\u4e3a $m \\times p$ \uff0c\u8bbe $C = A \\times B$ \uff0c\u5219 $C$ \u7684\u6bcf\u4e2a\u5143\u7d20\u7684\u8ba1\u7b97\u65b9\u5f0f\u5982\u4e0b\u5f0f\uff1a \n$$C_{i,j} = \\sum_{k=1}^{m} A_{i,k} \\times B_{k,j}$$\n\u5982\u4e0a\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0 $C$ \u7684\u5927\u5c0f\u4e3a $n \\times p$ \uff0c $C_{i,j}$ \u662f $A$ \u7684\u7b2c $i$ \u884c\u548c $B$ \u7684\u7b2c $j$ \u5217\u5bf9\u5e94\u76f8\u4e58\u7684\u7ed3\u679c\u3002\u4ee5\u4e0a\u7684\u8fd0\u7b97\u4fbf\u662f\u77e9\u9635\u4e58\u6cd5\uff0c\u8bb0\u4e3a $C = A \\times B$ \u3002  \n\n\u9898\u76ee\u4e2d\u7684\u77e9\u9635\u5927\u5c0f\u90fd\u4e3a $n \\times n$ \uff0c\u4e5f\u5c31\u610f\u5473\u7740\u77e9\u9635\u5927\u5c0f\u4e0d\u968f\u7740\u8fd0\u7b97\u800c\u6539\u53d8\uff0c\u59cb\u7ec8\u90fd\u4e3a $n \\times n$ \u3002\u8bb0\u539f\u77e9\u9635\u4e3a $A$ \uff0c\u5219\u8fd0\u7b97\u4e00\u6b21\u540e\u7684\u77e9\u9635 $A^2 = A \\times A$ \u5982\u4e0b\uff1a\n$$\\begin{matrix}\n{\\Sigma_{k=1}^n A_{1,k} \\times A_{k,1}} & {\\Sigma_{k=1}^n A_{1,k} \\times A_{k,2}} & {\\cdots} & {\\Sigma_{k=1}^n A_{1,k} \\times A_{k,n}} \\\\\n{\\Sigma_{k=1}^n A_{2,k} \\times A_{k,1}} & {\\Sigma_{k=1}^n A_{2,k} \\times A_{k,2}} & {\\cdots} & {\\Sigma_{k=1}^n A_{2,k} \\times A_{k,n}} \\\\\n{\\vdots} & {\\vdots} & {\\ddots} & {\\vdots} \\\\\n{\\Sigma_{k=1}^n A_{n,k} \\times A_{k,1}} & {\\Sigma_{k=1}^n A_{n,k} \\times A_{k,2}} & {\\cdots} & {\\Sigma_{k=1}^n A_{n,k} \\times A_{k,n}} \\\\\n\\end{matrix}$$\n\u7531\u4e8e\u9898\u76ee\u53ea\u8981\u6c42\u6700\u7ec8 $A^k$ \u4e3a\u4e25\u683c\u6b63\u77e9\u9635\uff0c\u800c\u4e14\u4fdd\u8bc1 $\\forall A_{i,j} \\geq 0$ \uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5c06\u539f\u77e9\u9635\u5904\u7406\u4e00\u4e0b\uff0c\u82e5 $A_{i,j} > 0$ \u5219\u8bb0\u5176\u4e3a $1$ \uff0c \u5426\u5219\u8bb0\u4e3a $0$ \uff0c\u4ee5\u514d\u8fd0\u7b97\u65f6\u6ea2\u51fa\u3002   \n\u89c2\u5bdf\u4e0a\u77e9\u9635\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u77e9\u9635\u503c\u4e92\u76f8\u4f20\u9012\uff0c\u7531\u6b64\u60f3\u5230\u9898\u76ee\u53ef\u7528\u56fe\u8bba\u4f5c\u7b54\uff1a\u82e5 ${A^k}_{i,j} > 0$ \u5219\u7b49\u4ef7\u4e8e $(i,j)$ \u5b58\u5728\u5355\u5411\u8fb9\uff0c\u6700\u7ec8\u5224\u65ad $n$ \u4e2a\u70b9\u662f\u5426\u540c\u5c5e\u4e8e\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u5373\u53ef\u3002   \n\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6c42\u89e3\u4f7f\u7528 Tarjan \u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n + m)$ \uff0c\u5728\u672c\u9898\u4e2d\u4e3a $O(n^2)$ \u3002  \n\u4ee3\u7801\u5982\u4e0b\uff0c$cnt$ \u4e3a\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6570\u91cf\u3002\u9898\u76ee\u6570\u636e\u91cf\u5927\uff0c\u6700\u597d\u4f7f\u7528\u5feb\u901f\u8bfb\u5165\uff08\u4ee3\u7801\u4e2d\u672a\u4f7f\u7528\uff09\u3002  \n```cpp\n#include <iostream>\n#include <vector>\n#include <stack>\n\nusing namespace std;\nconst int Max = 2005;\n\nint n, dfn[Max], low[Max], t, cnt, g[Max][Max];\nbool is[Max];\nstack<int> st;\n\nvoid tarjan(int x) {\n\tdfn[x] = low[x] = ++t;\n\tst.push(x);\n\tis[x] = true;\n\t\n\tfor (int y = 1; y <= n; y++)\n\t\tif (g[x][y]) {\n\t\t\tif (!dfn[y]) {\n\t\t\t\ttarjan(y);\n\t\t\t\tlow[x] = min(low[x], low[y]);\n\t\t\t} else if (is[y])\n\t\t\t\tlow[x] = min(low[x], dfn[y]);\n\t\t}\n\t\t\n\tif (dfn[x] == low[x]) {\n\t\tcnt++;\n\t\tint y;\n\t\tdo {\n\t\t\ty = st.top();\n\t\t\tst.pop();\n\t\t\tis[y] = false;\n\t\t} while (x != y);\n\t}\n}\n\nint main() {\n\tios::sync_with_stdio(false);\n\t\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= n; j++) \n\t\t\tcin >> g[i][j];\n\t\n\tfor (int i = 1; i <= n; i++)\n\t\tif (!dfn[i])\n\t\t\ttarjan(i);\n\t\n\tcout << (cnt == 1 ? \"YES\" : \"NO\") << endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1651999614,
        "uid": 258563,
        "name": "\u6211\u662f\u900d\u900d",
        "ccfLevel": 6,
        "title": "CF402E"
    },
    {
        "content": "\u5c0f\u849f\u84bb\u7684\u4e00\u5927\u7231\u597d\uff1a\u6c34\u9898\u89e3 Q\u03c9Q\n\n# \u9898\u76ee\n\u7ed9\u51fa\u4e00\u5f20\u56fe\uff0c\u5982\u679c\u5b58\u5728 $k(k\\ge 0)$ \u4f7f\u5f97\u6bcf\u5bf9\u70b9\u4e4b\u95f4\u90fd\u6709\u957f\u5ea6\u4e3a $k$ \u7684\u8def\u5f84\uff0c\u8f93\u51fa $\\tt YES$ \uff0c\u5426\u5219\u8f93\u51fa $\\tt NO$ \u3002\n\n\u91cd\u8981\u6027\u8d28\uff1a\u4fdd\u8bc1\u56fe\u4e2d __\u5b58\u5728\u4e00\u4e2a\u81ea\u73af__\u3002\n\n# \u601d\u8def\n\u9996\u5148\u8bc1\u660e\u5fc5\u8981\u6761\u4ef6\uff1a\u6574\u5f20\u56fe\u4e0a\u7684\u4e24\u4e2a\u70b9\u539f\u672c\u5c31\u4e92\u76f8\u53ef\u8fbe\u3002\n\n\u8fd9\u662f\u663e\u7136\u7684\uff0c\u5982\u679c\u4e24\u4e2a\u70b9\u4e4b\u95f4\u6ca1\u6709\u8def\u5f84\uff0c\u600e\u4e48\u53ef\u80fd\u5b58\u5728\u957f\u5ea6\u4e3a $k$ \u7684\u8def\u5f84\u5462\uff1f\n\n\u7136\u540e\u8bc1\u660e\u5145\u5206\u6761\u4ef6\uff1a\u6574\u5f20\u56fe\u4e0a\u7684\u4e24\u4e2a\u70b9\u539f\u672c\u5c31\u4e92\u76f8\u53ef\u8fbe\u3002\n\n\u8fd9\u4e2a\u4e0d\u5bb9\u6613\u60f3\u5230\uff0c\u56e0\u4e3a\u6b64\u5904\u5fc5\u987b\u5229\u7528\u90a3\u4e2a\u795e\u5947\u7684\u6027\u8d28\u3002\u4e3a\u4ec0\u4e48\u4e00\u5b9a\u8981\u544a\u8bc9\u4f60\uff0c\u6709\u81ea\u73af\u5b58\u5728\u5462\uff1f\n\n\u7b54\u6848\u662f\uff0c\u65e2\u7136\u6574\u5f20\u56fe\u4e0a\u7684\u4e24\u4e2a\u70b9\u539f\u672c\u5c31\u4e92\u76f8\u53ef\u8fbe\uff0c\u8bbe\u81ea\u73af\u5b58\u5728\u4e8e $x$ \uff0c\u90a3\u4e48 $a$ \u5230 $b$ \u7684\u8def\u5f84\u53ef\u4ee5\u662f $a\\rightarrow\\cdots\\rightarrow x\\rightarrow x\\rightarrow\\cdots\\rightarrow x\\rightarrow\\cdots\\rightarrow b$ \uff0c\u4e5f\u5c31\u662f\u8bf4\u5148\u7ecf\u8fc7 $x$ \u7ed5\u51e0\u5708\u518d\u5230\u8fbe\u76ee\u7684\u5730\u3002\u8fd9\u6761\u8def\u5f84\u7684\u5b58\u5728\u6027\u7531\u4e0a\u9762\u7684\u6761\u4ef6\u4fdd\u8bc1\u3002\n\n\u65e2\u7136\u5982\u6b64\uff0c\u8def\u5f84\u957f\u5ea6\u5145\u5206\u5927\u65f6\uff08\u5927\u4e8e $a\\rightarrow\\cdots\\rightarrow x\\rightarrow\\cdots\\rightarrow b$ \u65f6\uff09\uff0c$a\\rightarrow b$ \u4e4b\u95f4\u5b58\u5728\u8def\u5f84\u3002\n\n\u6700\u7ec8\u6211\u4eec\u603b\u7ed3\u51fa\u4e86\u5145\u8981\u6761\u4ef6\uff1a__\u6574\u5f20\u56fe\u4e0a\u7684\u4e24\u4e2a\u70b9\u539f\u672c\u5c31\u4e92\u76f8\u53ef\u8fbe__\u3002\n\n\u600e\u4e48\u5224\u65ad\uff1f\u7528 $\\tt bfs$ \u5457\u3002\u5982\u679c $s$ \u80fd\u5230\u8fbe\u6bcf\u4e2a\u70b9\uff0c\u6bcf\u4e2a\u70b9\u4e5f\u80fd\u5230\u8fbe $s$ \uff0c\u5c31\u6ee1\u8db3\u8be5\u6761\u4ef6\uff0c\u5426\u5219\u4e0d\u6ee1\u8db3\u3002\u53d6 $s=1$ \u5c31\u884c\u3002\n\n# \u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <vector>\nusing namespace std;\ntypedef long long int_;\ninline int readint(){\n\tint a = 0; char c = getchar(), f = 1;\n\tfor(; c<'0'||c>'9'; c=getchar())\n\t\tif(c == '-') f = -f;\n\tfor(; '0'<=c&&c<='9'; c=getchar())\n\t\ta = (a<<3)+(a<<1)+(c^48);\n\treturn a*f;\n}\n\nconst int MaxN = 2005;\n\nint n, a[MaxN][MaxN];\nvector< int > q; bool vis[MaxN];\nbool bfs(){\n\t/* 1 \u80fd\u5230\u6bcf\u4e2a\u70b9\u5417\uff1f */ ;\n\tq.push_back(1), vis[1] = 1;\n\twhile(!q.empty()){\n\t\tint t = q.back();\n\t\tq.pop_back();\n\t\tfor(int i=1; i<=n; ++i)\n\t\t\tif(!vis[i] && a[t][i]){\n\t\t\t\tvis[i] = true;\n\t\t\t\tq.push_back(i);\n\t\t\t}\n\t}\n\tfor(int i=1; i<=n; ++i){\n\t\tif(!vis[i])\n\t\t\treturn false;\n\t\tvis[i] = 0;\n\t}\n\t/* \u6bcf\u4e2a\u70b9\u80fd\u5230 1 \u5417\uff1f */\n\tq.push_back(1), vis[1] = 1;\n\twhile(!q.empty()){\n\t\tint t = q.back();\n\t\tq.pop_back();\n\t\tfor(int i=1; i<=n; ++i)\n\t\t\tif(!vis[i] && a[i][t]){\n\t\t\t\tvis[i] = true;\n\t\t\t\tq.push_back(i);\n\t\t\t}\n\t}\n\tfor(int i=1; i<=n; ++i){\n\t\tif(!vis[i])\n\t\t\treturn false;\n\t\tvis[i] = 0;\n\t}\n}\n\nint main(){\n\tn = readint();\n\tfor(int i=1; i<=n; ++i)\n\tfor(int j=1; j<=n; ++j)\n\t\ta[i][j] = readint();\n\tputs(bfs() ? \"YES\" : \"NO\");\n\treturn 0;\n}\n```",
        "postTime": 1597891414,
        "uid": 123796,
        "name": "Damo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF402E \u3010Strictly Positive Matrix\u3011"
    },
    {
        "content": "orz \u5cf0\n\n\u7531\u4e8e\u4e0d\u662f\u6b63\u6570\u5c31\u662f $0$\uff0c\u53ef\u4ee5\u628a\u6b63\u6570\u770b\u6210 $1$\uff0c\u53d8\u6210\u4e86 $01$ \u77e9\u9635\u3002\n\n\u90bb\u63a5\u77e9\u9635\u7684 $k$ \u6b21\u5e42\u4e2d\uff0c${A^k}_{i,j}$ \u4ee3\u8868 $i$ \u5230 $j$ \u662f\u5426\u6709\u957f\u5ea6\u4e3a $k$ \u7684\u8def\u5f84\u3002\n\n\u8fd9\u4e2a\u9898\u53d8\u6210\u4e86\u662f\u5426\u5b58\u5728\u4e00\u4e2a $k$\uff0c\u4f7f\u5f97\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u90fd\u6709\u957f\u5ea6\u4e3a $k$ \u7684\u8def\u5f84\uff0c\u521d\u59cb\u7ed9\u7684 $A$ \u5373\u4e3a\u544a\u8bc9\u4f60\u54ea\u4e9b\u70b9\u76f4\u63a5\u76f4\u63a5\u6709\u8fb9\u76f8\u8fde\u3002\n\n\u6570\u636e\u4fdd\u8bc1\u4e86 $\\sum_{i=1}^n a_{i,i}>0$\uff0c\u4e5f\u5c31\u662f\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a\u5b50\u73af\u3002\n\n\u90a3\u4e48\u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a\u7ed9\u4f60\u4e00\u5f20\u70b9\u6570\u4e3a $n$ \u7684\u6709\u5411\u56fe\uff0c\u8be2\u95ee\u662f\u5426\u4e24\u4e24\u5f3a\u8fde\u901a\u3002\u56e0\u4e3a\u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a\u81ea\u73af\uff0c\u5219\u53ef\u4ee5\u628a $k$ \u770b\u4f5c\u4e00\u4e2a\u5f88\u5927\u7684\u6570\uff0c\u5982\u679c\u8ba9\u4e00\u4e2a\u70b9\u8d70\u5230\u53e6\u4e00\u4e2a\u70b9\u7684\u65f6\u5019\u5148\u8d70\u5230\u90a3\u4e2a\u81ea\u73af\u7684\u4f4d\u7f6e\u628a\u591a\u4f59\u7684\u8def\u7a0b\u6d88\u8017\u5b8c\u4e86\uff0c\u518d\u8d70\u5230\u76ee\u7684\u5730\u7684\u70b9\uff0c\u5373\u53ef\u770b\u4e3a\u4efb\u610f\u4e24\u70b9\u90fd\u6709\u957f\u5ea6\u4e3a $k$ \u7684\u8def\u5f84\u3002\n\n\u70b9\u6570 $\\leq 2000$\uff0c\u8fb9\u6570 $\\leq 2000^2$\uff0c\u76f4\u63a5 dfs \u662f $\\mathcal{O}(n^3)$ \u7684\u3002\u8003\u8651\u5b9e\u9645\u4e0a\u662f\u95ee\u6574\u5f20\u56fe\u662f\u5426\u662f\u4e00\u4e2a SCC\uff0c\u76f4\u63a5 Tarjan \u7f29\u70b9\u5373\u53ef\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<stack>\n#include<cstring>\ntypedef long long ll;\nll mod;\ntemplate <typename T> T Add(T x, T y) { return (x + y >= mod) ? (x + y - mod) : (x + y); }\ntemplate <typename T> T cAdd(T x, T y) { return x = (x + y >= mod) ? (x + y - mod) : (x + y); }\ntemplate <typename T> T Mul(T x, T y) { return x * y % mod; }\ntemplate <typename T> T Mod(T x) { return x < 0 ? (x + mod) : x; }\ntemplate <typename T> T Max(T x, T y) { return x > y ? x : y; }\ntemplate <typename T> T Min(T x, T y) { return x < y ? x : y; }\ntemplate <typename T> T Abs(T x) { return x < 0 ? -x : x; }\ntemplate <typename T> T chkmax(T &x, T y) { return x = x > y ? x : y; }\ntemplate <typename T>\nT &read(T &r) {\n\tr = 0; bool w = 0; char ch = getchar();\n\twhile(ch < '0' || ch > '9') w = ch == '-' ? 1 : 0, ch = getchar();\n\twhile(ch >= '0' && ch <= '9') r = (r << 3) + (r <<1) + (ch ^ 48), ch = getchar();\n\treturn r = w ? -r : r;\n}\ninline int lowbit(int x) { return x & (-x); }\nint popcount(int x) { int sumq = 0;\twhile(x) x -= lowbit(x), ++sumq; return sumq; }\nll qpow(ll x, ll y) {\n\tll sumq = 1;\n\twhile(y) {\n\t\tif(y & 1) sumq = sumq * x % mod;\n\t\tx = x * x % mod;\n\t\ty >>= 1;\n\t}\n\treturn sumq;\n}\nconst int N = 2010;\nstd::queue<int>q;\nstd::stack<int>st;\nint n, m, a[N][N];\nint dfn[N], low[N], icnt;\nint va[N], val[N], blo[N], bnt, f[N];\nbool vis[N];\n//Edge----------------------------\nint head[N], ent;\nstruct Edge {\n\tint next, to;\n}e[N*N];\ninline void add(int x, int y) {\n\te[++ent].to = y; e[ent].next = head[x]; head[x] = ent;\n}\n//dfs-----------------------------\nvoid dfs(int x) {\n\tdfn[x] = low[x] = ++icnt; st.push(x);\n\tfor(int i = head[x]; i; i = e[i].next) {\n\t\tint v = e[i].to;\n\t\tif(blo[v]) continue;\n\t\tif(!dfn[v]) {\n\t\t\tdfs(v);\n\t\t\tlow[x] = Min(low[x], low[v]);\n\t\t}\n\t\telse low[x] = Min(low[x], dfn[v]);\n\t}\n\tif(low[x] == dfn[x]) {\n\t\t++bnt;\n\t\tdo {\n\t\t\tint top = st.top(); st.pop();\n\t\t\tval[bnt] += va[top];\n\t\t\tblo[top] = bnt;\n\t\t\tif(top == x) break;\n\t\t} while(true);\n\t}\n}\nvoid dfs2(int x) {\n\tif(vis[x]) return ;\n\tvis[x] = 1;\n\tfor(int i = head[x]; i; i = e[i].next)\n\t\tdfs2(e[i].to);\n}\nsigned main() { //freopen(\"in.txt\", \"r\", stdin);\n\tread(n);\n\tfor(int i = 1; i <= n; ++i)\n\t\tfor(int j = 1; j <= n; ++j) {\n\t\t\tread(a[i][j]);\n\t\t\tif(a[i][j] && i != j) add(i, j);\n\t\t}\n\tfor(int i = 1; i <= n; ++i)\n\t\tif(!dfn[i])\n\t\t\tdfs(i);\n\tif(bnt == 1) puts(\"YES\");\n\telse puts(\"NO\");\n\treturn 0;\n}\n```\n",
        "postTime": 1626222856,
        "uid": 223298,
        "name": "do_while_true",
        "ccfLevel": 8,
        "title": "\u300c\u9898\u89e3\u300dCodeforces 402E Strictly Positive Matrix"
    },
    {
        "content": "\u8dd1\u4e00\u904dtarjan \n\n\u5565\u662ftarjan\n\n\u8bf4\u5230\u4ee5Tarjan\u547d\u540d\u7684\u7b97\u6cd5\uff0c\u6211\u4eec\u7ecf\u5e38\u63d0\u5230\u7684\u67093\u4e2a\uff0c\u5176\u4e2d\u5c31\u5305\u62ec\u672c\u6587\u6240\u4ecb\u7ecd\u7684\u6c42\u5f3a\u8fde\u901a\u5206\u91cf\u7684Tarjan\u7b97\u6cd5\u3002\u800c\u63d0\u51fa\u6b64\u7b97\u6cd5\u7684\u666e\u6797\u65af\u987f\u5927\u5b66\u7684Robert E Tarjan\u6559\u6388\u4e5f\u662f1986\u5e74\u7684\u56fe\u7075\u5956\u83b7\u5f97\u8005\uff08\u5177\u4f53\u539f\u56e0\u8bf7\u770b\u672c\u535a\u201c\u5386\u5c4a\u56fe\u7075\u5956\u5f97\u4e3b\u201d\u4e00\u6587\uff09\u3002\n\n      \u9996\u5148\u660e\u786e\u51e0\u4e2a\u6982\u5ff5\u3002\n\n\u5f3a\u8fde\u901a\u56fe\u3002\u5728\u4e00\u4e2a\u5f3a\u8fde\u901a\u56fe\u4e2d\uff0c\u4efb\u610f\u4e24\u4e2a\u70b9\u90fd\u901a\u8fc7\u4e00\u5b9a\u8def\u5f84\u4e92\u76f8\u8fde\u901a\u3002\u6bd4\u5982\u56fe\u4e00\u662f\u4e00\u4e2a\u5f3a\u8fde\u901a\u56fe\uff0c\u800c\u56fe\u4e8c\u4e0d\u662f\u3002\u56e0\u4e3a\u6ca1\u6709\u4e00\u6761\u8def\u4f7f\u5f97\u70b94\u5230\u8fbe\u70b91\u30012\u62163\u3002\n\u5f3a\u8fde\u901a\u5206\u91cf\u3002\u5728\u4e00\u4e2a\u975e\u5f3a\u8fde\u901a\u56fe\u4e2d\u6781\u5927\u7684\u5f3a\u8fde\u901a\u5b50\u56fe\u5c31\u662f\u8be5\u56fe\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u3002\u6bd4\u5982\u56fe\u4e09\u4e2d\u5b50\u56fe{1,2,3,5}\u662f\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u5b50\u56fe{4}\u662f\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u3002\n\n\n   \u5173\u4e8eTarjan\u7b97\u6cd5\u7684\u4f2a\u4ee3\u7801\u548c\u6d41\u7a0b\u6f14\u793a\u8bf7\u5230\u6211\u7684115\u7f51\u76d8\u4e0b\u8f7d\u7f51\u4e0a\u67d0\u5927\u725b\u5199\u7684Doc\uff08\u5730\u5740\uff1ahttp://u.115.com/file/f96af404d2<Tarjan\u7b97\u6cd5.doc>\uff09\u672c\u6587\u7740\u91cd\u4ece\u53e6\u5916\u4e00\u4e2a\u89d2\u5ea6\uff0c\u4e5f\u5c31\u662f\u9488\u5bf9tarjan\u7684\u64cd\u4f5c\u89c4\u5219\u6765\u8bb2\u89e3\u8fd9\u4e2a\u7b97\u6cd5\u3002\n\n   \u5176\u5b9e\uff0ctarjan\u7b97\u6cd5\u7684\u57fa\u7840\u662fDFS\u3002\u6211\u4eec\u51c6\u5907\u4e24\u4e2a\u6570\u7ec4Low\u548cDfn\u3002Low\u6570\u7ec4\u662f\u4e00\u4e2a\u6807\u8bb0\u6570\u7ec4\uff0c\u8bb0\u5f55\u8be5\u70b9\u6240\u5728\u7684\u5f3a\u8fde\u901a\u5b50\u56fe\u6240\u5728\u641c\u7d22\u5b50\u6811\u7684\u6839\u8282\u70b9\u7684Dfn\u503c\uff08\u5f88\u7ed5\u5634\uff0c\u5f80\u4e0b\u770b\u4f60\u5c31\u4f1a\u660e\u767d\uff09\uff0cDfn\u6570\u7ec4\u8bb0\u5f55\u641c\u7d22\u5230\u8be5\u70b9\u7684\u65f6\u95f4\uff0c\u4e5f\u5c31\u662f\u7b2c\u51e0\u4e2a\u641c\u7d22\u8fd9\u4e2a\u70b9\u7684\u3002\u6839\u636e\u4ee5\u4e0b\u51e0\u6761\u89c4\u5219\uff0c\u7ecf\u8fc7\u641c\u7d22\u904d\u5386\u8be5\u56fe\uff08\u65e0\u9700\u56de\u6eaf\uff09\u548c\u5bf9\u6808\u7684\u64cd\u4f5c\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u8be5\u6709\u5411\u56fe\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u3002\n\n \n\n\u6570\u7ec4\u7684\u521d\u59cb\u5316\uff1a\u5f53\u9996\u6b21\u641c\u7d22\u5230\u70b9p\u65f6\uff0cDfn\u4e0eLow\u6570\u7ec4\u7684\u503c\u90fd\u4e3a\u5230\u8be5\u70b9\u7684\u65f6\u95f4\u3002\n\n\u5806\u6808\uff1a\u6bcf\u641c\u7d22\u5230\u4e00\u4e2a\u70b9\uff0c\u5c06\u5b83\u538b\u5165\u6808\u9876\u3002\n\n\u5f53\u70b9p\u6709\u4e0e\u70b9p\u2019\u76f8\u8fde\u65f6\uff0c\u5982\u679c\u6b64\u65f6\uff08\u65f6\u95f4\u4e3adfn[p]\u65f6\uff09p\u2019\u4e0d\u5728\u6808\u4e2d\uff0cp\u7684low\u503c\u4e3a\u4e24\u70b9\u7684low\u503c\u4e2d\u8f83\u5c0f\u7684\u4e00\u4e2a\u3002\n\n\u5f53\u70b9p\u6709\u4e0e\u70b9p\u2019\u76f8\u8fde\u65f6\uff0c\u5982\u679c\u6b64\u65f6\uff08\u65f6\u95f4\u4e3adfn[p]\u65f6\uff09p\u2019\u5728\u6808\u4e2d\uff0cp\u7684low\u503c\u4e3ap\u7684low\u503c\u548cp\u2019\u7684dfn\u503c\u4e2d\u8f83\u5c0f\u7684\u4e00\u4e2a\u3002\n\n\u6bcf\u5f53\u641c\u7d22\u5230\u4e00\u4e2a\u70b9\u7ecf\u8fc7\u4ee5\u4e0a\u64cd\u4f5c\u540e\uff08\u4e5f\u5c31\u662f\u5b50\u6811\u5df2\u7ecf\u5168\u90e8\u904d\u5386\uff09\u7684low\u503c\u7b49\u4e8edfn\u503c\uff0c\u5219\u5c06\u5b83\u4ee5\u53ca\u5728\u5b83\u4e4b\u4e0a\u7684\u5143\u7d20\u5f39\u51fa\u6808\u3002\u8fd9\u4e9b\u51fa\u6808\u7684\u5143\u7d20\u7ec4\u6210\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u3002\n\n\u7ee7\u7eed\u641c\u7d22\uff08\u6216\u8bb8\u4f1a\u66f4\u6362\u641c\u7d22\u7684\u8d77\u70b9\uff0c\u56e0\u4e3a\u6574\u4e2a\u6709\u5411\u56fe\u53ef\u80fd\u5206\u4e3a\u4e24\u4e2a\u4e0d\u8fde\u901a\u7684\u90e8\u5206\uff09\uff0c\u76f4\u5230\u6240\u6709\u70b9\u88ab\u904d\u5386\u3002\n\n   \u7531\u4e8e\u6bcf\u4e2a\u9876\u70b9\u53ea\u8bbf\u95ee\u8fc7\u4e00\u6b21\uff0c\u6bcf\u6761\u8fb9\u4e5f\u53ea\u8bbf\u95ee\u8fc7\u4e00\u6b21\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728O\uff08n+m\uff09\u7684\u65f6\u95f4\u5185\u6c42\u51fa\u6709\u5411\u56fe\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u3002\u4f46\u662f\uff0c\u8fd9\u4e48\u505a\u7684\u539f\u56e0\u662f\u4ec0\u4e48\u5462\uff1f\n\n \n\n   Tarjan\u7b97\u6cd5\u7684\u64cd\u4f5c\u539f\u7406\u5982\u4e0b\uff1a\n\n1.Tarjan\u7b97\u6cd5\u57fa\u4e8e\u5b9a\u7406\uff1a\u5728\u4efb\u4f55\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u4e2d\uff0c\u540c\u4e00\u5f3a\u8fde\u901a\u5206\u91cf\u5185\u7684\u6240\u6709\u9876\u70b9\u5747\u5728\u540c\u4e00\u68f5\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u6811\u4e2d\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f3a\u8fde\u901a\u5206\u91cf\u4e00\u5b9a\u662f\u6709\u5411\u56fe\u7684\u67d0\u4e2a\u6df1\u641c\u6811\u5b50\u6811\u3002\n\n2.\u53ef\u4ee5\u8bc1\u660e\uff0c\u5f53\u4e00\u4e2a\u70b9\u65e2\u662f\u5f3a\u8fde\u901a\u5b50\u56fe\u2160\u4e2d\u7684\u70b9\uff0c\u53c8\u662f\u5f3a\u8fde\u901a\u5b50\u56fe\u2161\u4e2d\u7684\u70b9\uff0c\u5219\u5b83\u662f\u5f3a\u8fde\u901a\u5b50\u56fe\u2160\u222a\u2161\u4e2d\u7684\u70b9\u3002\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u7528low\u503c\u8bb0\u5f55\u8be5\u70b9\u6240\u5728\u5f3a\u8fde\u901a\u5b50\u56fe\u5bf9\u5e94\u7684\u641c\u7d22\u5b50\u6811\u7684\u6839\u8282\u70b9\u7684Dfn\u503c\u3002\u6ce8\u610f\uff0c\u8be5\u5b50\u6811\u4e2d\u7684\u5143\u7d20\u5728\u6808\u4e2d\u4e00\u5b9a\u662f\u76f8\u90bb\u7684\uff0c\u4e14\u6839\u8282\u70b9\u5728\u6808\u4e2d\u4e00\u5b9a\u4f4d\u4e8e\u6240\u6709\u5b50\u6811\u5143\u7d20\u7684\u6700\u4e0b\u65b9\u3002\n\n3.\u5f3a\u8fde\u901a\u5206\u91cf\u662f\u7531\u82e5\u5e72\u4e2a\u73af\u7ec4\u6210\u7684\u3002\u6240\u4ee5\uff0c\u5f53\u6709\u73af\u5f62\u6210\u65f6\uff08\u4e5f\u5c31\u662f\u641c\u7d22\u7684\u4e0b\u4e00\u4e2a\u70b9\u5df2\u5728\u6808\u4e2d\uff09\uff0c\u6211\u4eec\u5c06\u8fd9\u4e00\u6761\u8def\u5f84\u7684low\u503c\u7edf\u4e00\uff0c\u5373\u8fd9\u6761\u8def\u5f84\u4e0a\u7684\u70b9\u5c5e\u4e8e\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u3002\n\n4.\u5982\u679c\u904d\u5386\u5b8c\u6574\u4e2a\u641c\u7d22\u6811\u540e\u67d0\u4e2a\u70b9\u7684dfn\u503c\u7b49\u4e8elow\u503c\uff0c\u5219\u5b83\u662f\u8be5\u641c\u7d22\u5b50\u6811\u7684\u6839\u3002\u8fd9\u65f6\uff0c\u5b83\u4ee5\u4e0a\uff08\u5305\u62ec\u5b83\u81ea\u5df1\uff09\u4e00\u76f4\u5230\u6808\u9876\u7684\u6240\u6709\u5143\u7d20\u7ec4\u6210\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u3002\n\n5.by the way\u9898\u91cc\u7ed9\u7684\u8303\u56f4\u867d\u7136\u5927 \u4f46\u662f\u5185\u5b58\u9650\u5ea6\u4e5f\u5927\u554a \u6309\u90a3\u4e2a\u5927\u5c0f\u5f00\u51c6\u662f\u6ca1\u9519\u7684==\n\n```cpp\n#include <bits/stdc++.h>\n#define N 2000 + 10\nusing namespace std ;\nint a[N][N];\nint mark[2][N] ;\nint n,num ; \nvoid dfs(int k,int pre)\n{\n\tmark[k][pre]=true,num++ ;\n\tfor (int i=1;i<=n;i++)\n\tif (!mark[k][i])\n\tif ((k && a[pre][i]) || (!k && a[i][pre])) dfs(k,i) ;\n}\nint main() \n{\n\tscanf(\"%d\",&n) ;\n\tfor (int i=1;i<=n;i++)\n\tfor (int j=1;j<=n;j++)\n\tscanf(\"%d\",&a[i][j]) ;\n\tdfs(0,1);dfs(1,1) ;\n\tprintf(\"%s\\n\",num==2*n?\"YES\":\"NO\") ;\n\treturn  0;\n}\n```",
        "postTime": 1522407200,
        "uid": 54900,
        "name": "__Hacheylight__",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF402E \u3010Strictly Positive Matrix\u3011"
    }
]