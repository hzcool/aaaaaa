[
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u8d2a\u5fc3\u9898\n\n---\n\n\u9898\u610f\u662f\u5bf9\u4e8e\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5e8f\u5217\u91cc\u9762\u6709`(`\u3001`)`\u548c`?`\uff0c\u5bf9\u4e8e`?`\u53ef\u4ee5\u4ee5\u4e00\u5b9a\u7684\u4ee3\u4ef7\u5c06\u5176\u66ff\u6362\u4e3a`(`\u6216`)`\uff0c\u5982\u679c\u62ec\u53f7\u662f\u5339\u914d\u7684\uff0c\u6c42\u6700\u5c0f\u4ee3\u4ef7\u3002\n\n\n\u9996\u5148`)`\u80af\u5b9a\u5339\u914d\u6700\u8fd1\u7684\u6ca1\u6709\u5339\u914d\u7684`(`\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u8ba1\u6570\u5668`mark`\u8bb0\u5f55`(`\u7684\u6570\u91cf\uff0c\u5982\u679c\u9047\u5230`)`\u5219\u81ea\u51cf1\u4ee3\u8868\u5339\u914d\u4e00\u5bf9\u3002\n\n\n\u5148\u8003\u8651**\u5339\u914d**\uff0c\u8bbe\u60f3\u6240\u6709\u7684`?`\u90fd\u662f`)`\u3002\u5982\u679c`mark`\u5728\u904d\u5386\u65f6\u5c0f\u4e8e\u96f6\u4ee3\u8868\u6ca1\u6709\u8db3\u591f\u7684`(`\u6765\u5339\u914d`)`\uff0c\u4e8e\u662f\u6211\u4eec\u5230\u524d\u9762\u53bb\u627e\u7531`?`\u53d8\u6210\u7684`)`\u53d8\u4e3a`(`\u6765\u586b\u8865`mark`\u7684\u7a7a\u7f3a\uff0c\u5e76\u5c06`mark`\u52a0\u4e0a2\uff0c\u5982\u679c\u627e\u4e0d\u5230\u8bf4\u660e\u5b57\u7b26\u4e32\u4e0d\u5408\u6cd5\u3002\u5982\u679c\u5728\u904d\u5386\u5b8c\u6210\u540e`mark`\u4e0d\u4e3a0\uff0c\u90a3\u4e48\u8bf4\u660e\u8fd9\u4e2a\u5b57\u7b26\u4e32\u4e0d\u5408\u6cd5\u3002\n\n\n\u518d\u8003\u8651**\u4ee3\u4ef7\u6700\u5c0f**\uff0c\u5339\u914d\u65f6\u8bbe\u60f3\u6240\u6709\u7684`?`\u90fd\u662f`)`\uff0c\u4e8e\u662f\u5728\u5f00\u59cb\u65f6\u7684\u4ee3\u4ef7\u4e3a\u6240\u6709`?`\u66ff\u6362\u4e3a`)`\u7684\u4ee3\u4ef7\u4e4b\u548c\u3002\u5982\u679c`mark`\u5728\u904d\u5386\u65f6\u5c0f\u4e8e\u96f6\u65f6\u8fdb\u884c\u66ff\u6362\uff0c\u8003\u8651\u5230**\u4ee3\u4ef7\u6700\u5c0f**\uff0c\u5e94\u8be5\u5728\u4e4b\u524d\u5bfb\u627e`-b+a`\uff08\u51cf\u53bb\u66ff\u6362\u4e3a`)`\u7684\u4ee3\u4ef7\u52a0\u4e0a\u66ff\u6362\u4e3a`(`\u7684\u4ee3\u4ef7\uff09\u6700\u5c0f\u7684`?`\u3002\n\n\n\u7ecf\u7531\u4e0a\u9762\u7684\u5206\u6790\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u4ee5`-b+a`\u964d\u5e8f\u6392\u5217\uff0c\u540c\u65f6\u5b58\u50a8`?`\u4f4d\u7f6e\u7684\u4f18\u5148\u961f\u5217\uff0c\u6bcf\u6b21\u9047\u5230`?`\u5165\u961f\u4e00\u4e2a\uff0c`mark`\u5c0f\u4e8e\u96f6\u65f6\u51fa\u961f\u4e00\u4e2a\u3002\n\n\n\u6ce8\u610f**\u6570\u636e\u8303\u56f4**\uff0c\u7b54\u6848\u8981\u7528$long\\ long$\uff0c$long\\ long$\u5728`CodeForces`\u8981\u7528`\"%I64d\"`\u8f93\u51fa\u3002\uff08\u5f53\u7136\u5982\u679c\u4f60\u7528`cout`\u53e6\u8bf4\uff09\n\n\n```cpp\n#include<cstdio>\n#include<queue>\nusing namespace std;\nstruct Data {        //\u4f18\u5148\u961f\u5217\u7684\u5143\u7d20\n    int delta;        //\u8fd9\u662f-b+a\n    char *p;        //\u8fd9\u662f?\u7684\u4f4d\u7f6e\n    bool operator <(const Data &b)const {    //\u91cd\u5b9a\u4e49\u6bd4\u8f83\u8fd0\u7b97\u7b26\u8fdb\u884c\u964d\u5e8f\u6392\u5217\n        return delta>b.delta;\n    }\n}t;\npriority_queue<Data> q;        //\u4f18\u5148\u961f\u5217\nchar s[50002];\nint main() {\n    int mark=0;            //\u8ba1\u6570\u5668\n    long long ans=0;\n    scanf(\"%s\",s);\n    for(int i=0,a,b;s[i]&&ans!=-1;++i) {\n        if(s[i]=='(')    //\u8ba1\u6570\u5668\u52a01\n            ++mark;\n        else {\n            --mark;        //\u8ba1\u6570\u5668\u51cf1\uff0c'?'\u4e5f\u4e00\u6837\uff0c\u56e0\u4e3a\u5f00\u59cb\u65f6\u8bbe\u60f3\u6240\u6709\u7684'?'\u90fd\u662f')'\n            if(s[i]=='?') {\n                scanf(\"%d%d\",&a,&b);\n                t.delta=a-b;\n                t.p=s+i;    //\u7ed9\u6307\u9488\u8d4b\u503c\n                q.push(t);    //\u5165\u961f\n                s[i]=')';\n                ans+=b;\n            }\n        }\n        if(mark<0) {        //\u6b64\u65f6\u8981\u5230\u524d\u9762\u53bb\u627e'?'\n            if(q.empty())\n                ans=-1;        //\u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0c\u90a3\u4e48\u5b57\u7b26\u4e32\u4e0d\u5408\u6cd5\n            if(ans!=-1) {\n                mark+=2;\n                t=q.top();    //\u53d6\u961f\u5c3e\u5143\u7d20\u5e76\u66ff\u6362\n                q.pop();\n                *t.p='(';\n                ans+=t.delta;\n            }\n        }\n    }\n    if(mark)    //\u5224\u65ad\u8ba1\u6570\u5668\u662f\u5426\u4e3a0\uff0c\u5426\u5219\u5b57\u7b26\u4e32\u4e0d\u5408\u6cd5\n        ans=-1;\n    printf(\"%I64d\",ans);    //\u7528%I64d\n    if(ans!=-1)\n        printf(\"\\n%s\",s);\n    return 0;\n}\n```\n\n---",
        "postTime": 1517322205,
        "uid": 78044,
        "name": "Loner_Knowledge",
        "ccfLevel": 0,
        "title": "CF3D Least Cost Bracket Sequence"
    },
    {
        "content": "\u8fd9\u4e00\u9898\u662f\u4e00\u4e2a\u8d2a\u5fc3\u7684\u9898\u76ee\u3002\n\u5148\u628a\u5b57\u7b26\u4e32\u4e2d\u7684\u95ee\u53f7\u90fd\u6362\u6210\u53f3\u62ec\u53f7\uff0c\u626b\u8fc7\u53bb\uff0c\u5982\u679c\u5de6\u62ec\u53f7\u6bd4\u53f3\u62ec\u53f7\u591a\uff08\u56e0\u4e3a\u5728\u4efb\u610f\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\uff0c\u5b83\u524d\u9762\u7684\u5de6\u62ec\u53f7\u90fd\u4e0d\u53ef\u80fd\u6bd4\u53f3\u62ec\u53f7\u591a\uff0c\u5728\u6700\u540e\u4e00\u4f4d\u8981\u76f8\u7b49\uff09\uff0c\u5219\u5728\u524d\u9762\u6240\u6709\u5f85\u5b9a\uff08\u539f\u662f\u6709\u95ee\u53f7\uff0c\u4f46\u73b0\u5728\u6539\u6210\u53f3\u62ec\u53f7\u7684\u4f4d\u5b50\uff09\u4e0a\u627e\u5de6\u53f3\u5dee\u503c\u6700\u5c0f\u7684\uff0c\u6362\u6389\uff08\u56e0\u4e3a\u53ea\u8981\u5728\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u5de6\u62ec\u53f7\u53f3\u62ec\u53f7\u76f8\u7b49\uff0c\u5c31\u662f\u5408\u6cd5\u7684\uff09\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\npriority_queue <pair<int,int> > Q;\nint a[50010],b[50010];\nstring s;\nstring str;\n\nint main(){\n\tcin>>s;\n\tint len=0;\n\tint l=0,r=0;\n\tstr=s;\n\tfor(int i=0;i<s.size();i++){\n\t\tif(s[i]=='(') l++;\n\t\telse if(s[i]==')') r++;\n\t\tif(s[i]=='?'){\n\t\t\tstr[i]=')';\n\t\t\tcin>>a[i]>>b[i];\n\t\t\tlen++;\t\n\t\t}\n\t}\n\tif(s[0]==')'||s[s.size()-1]=='('){\n\t\tcout<<\"-1\"<<endl;\n\t\treturn 0;\n\t}\n\tif(abs(l-r)>len){\n\t\tcout<<\"-1\";\n\t\treturn 0;\n\t}\n\tlong long ans=0;\n\tl=0,r=0;\n\tif(s[0]!='(') str[0]='(';\n\tl++;\n\tfor(int i=1;i<str.size();i++){\n\t\tif(s[i]=='?') Q.push(make_pair(b[i]-a[i],i)); \n\t\tif(str[i]=='(') l++;\n\t\tif(str[i]==')') r++;\n\t\tif(r>l){\n\t\t\tpair<int,int> p=Q.top();\n\t\t\tQ.pop();\n\t\t\tint x=p.second;\n\t\t\tr--;l++;\n\t\t\tstr[x]='(';\n\t\t}\n\t}\n\tif(l!=r){\n\t\tcout<<\"-1\";\n\t\treturn 0;\n\t}\n\tif(str[0]!='('||str[str.size()-1]!=')'){\n\t\tcout<<\"-1\";\n\t\treturn 0;\n\t}\n\tfor(int i=0;i<str.size();i++){\n\t\tif(s[i]=='?'){\n\t\t\tif(str[i]=='(') ans+=a[i];\n\t\t\tif(str[i]==')') ans+=b[i];\n\t\t}\n\t}\n\tcout<<ans<<endl;\n\tcout<<str<<endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1553393957,
        "uid": 143919,
        "name": "little_sheep917",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF3D \u3010Least Cost Bracket Sequence\u3011"
    },
    {
        "content": "\u7528\u5806\u6765\u5b9e\u73b0\u8d2a\u5fc3\n\n----\n\n\u8bfb\u5165\u5b57\u7b26\u4e32\u5e8f\u5217 s1\uff0c\u4e3a\u4e86\u64cd\u4f5c\u65b9\u4fbf\uff0c\u6211\u4eec\u628a\u8fd9\u4e2a\u5e8f\u5217\u5907\u4efd\u81f3 s2 \u3002\n\n\u626b\u63cf\u5b57\u7b26\u4e32\u5e8f\u5217 s1 \uff0c\u7edf\u8ba1\u5de6\u62ec\u53f7\u548c\u53f3\u62ec\u53f7\u7684\u4e2a\u6570\uff0c\u5982\u679c\u9047\u5230```?``` \uff0c \u5148\u7edf\u4e00\u5316\u6210\u53f3\u62ec\u53f7\uff0c\u5e76\u4fdd\u5b58\u5728 s2 \u3002\n\n\u8d2a \u5fc3 \u5f00 \u59cb\u3002\u91cd\u65b0\u626b\u63cf s2\uff0c\u7edf\u8ba1\u5de6\u62ec\u53f7\u53f3\u62ec\u53f7\u7684\u4e2a\u6570\uff0c\u5982\u679c\u5f53\u524d\u60c5\u51b5\u4e0b\u53f3\u62ec\u53f7\u6570\u6bd4\u5de6\u62ec\u53f7\u6570\u5927\uff0c\u8bf4\u660e\u6ca1\u6709\u5339\u914d\u597d\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u4ece\u524d\u9762\u627e\u4e00\u4e2a\u82b1\u8d39\u6700\u5c0f\u7684```?```\u6765\u66ff\u6362\u3002\u8003\u8651\u66ff\u6362\u7684\u4ee3\u4ef7\uff0c\u56e0\u4e3a\u539f\u6765\u9ed8\u8ba4\u5316\u6210```)```\uff0c\u8981\u60f3\u5316\u6210```(```\uff0c\u9700\u8981\u82b1\u8d39$a[i]-b[i]$\u7684\u4ee3\u4ef7\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u5c0f\u6839\u5806\u5b9e\u73b0\u627e\u51fa\u4ef7\u503c\u6700\u5c0f\u7684```?```\uff0c\u66ff\u6362\u6210```(```\uff0c\u5e76\u4fdd\u5b58\u5728 s2 \u4e2d\u3002\n\n\u6700\u540e\u518d\u626b\u63cf s2 \uff0c\u7edf\u8ba1```?```\u6539\u6210\u5de6\u53f3\u62ec\u53f7\u7684\u4ee3\u4ef7\u548c\uff0c\u8f93\u51fa\u7b54\u6848\uff0c\u540c\u65f6 s2 \uff0c\u5c31\u662f\u53ef\u884c\u7684\u7b54\u6848\u3002\n\n\u6700\u540e\u5206\u6790\u4e00\u4e0b```-1```\u7684\u60c5\u51b5\uff1a\n\n1. \u539f\u5b57\u7b26\u4e32\u5f00\u5934\u662f```)```\u6216\u7ed3\u5c3e\u662f```(```\uff0c\u80af\u5b9a\u6ca1\u6cd5\u627e\u5230\u53e6\u4e00\u534a\uff0c\u65e0\u89e3\u3002\n2. ```?```\u7684\u4e2a\u6570\u6bd4\u5de6\u53f3\u62ec\u53f7\u4e2a\u6570\u5dee\u7684\u7edd\u5bf9\u503c\u5c0f\uff0c\u65e0\u89e3\u3002\n3. \u5728\u8d2a\u5fc3\u8fc7\u540e\u53d1\u73b0\u5de6\u53f3\u62ec\u53f7\u6570\u4e0d\u5339\u914d\uff0c\u5373\u51fa\u73b0\u5947\u5076\u6570\u77db\u76fe\u5173\u7cfb\uff0c\u65e0\u89e3\n\n\uff08\u5176\u5b9e\u8fd8\u6709\u4e00\u4e2a\u70b9\uff0c\u56e0\u4e3a```c++```\u9ed8\u8ba4\u7684```priority_queue```\u662f\u5927\u6839\u5806\uff0c\u6240\u4ee5\u5b58\u7684\u65f6\u5019\u5b58\u8d1f\u6570\u5373$b[i]-a[i]$\uff0c\u514d\u53bb\u91cd\u8f7d\u8fd0\u7b97\u7b26\u7684\u9ebb\u70e6 ~~\uff08\u4eba\u7c7b\u7684\u672c\u8d28\uff09~~\u3002\n\n``` cpp\n#include<bits/stdc++.h>\n#define int long long\n#define pi pair<int,int>\n#define F first\n#define S second\n#define mp make_pair\n#define ed; puts(\"-1\");return 0;//\u61d2\u60f0\u76f4\u63a5\u7ed3\u675f\nusing namespace std;\nstring s1,s2;\nint l,r,a[50004],b[50004],ans;\npriority_queue<pi> q;\nsigned main() {\n\tcin>>s1;\n\ts2=s1;\n\tint len1=s1.size(),len2=0,sum=0;\n\tif(s1[0]==')'||s1[len1-1]=='(') {\n\t\ted;\n\t}\n\tfor(int i=0;i<len1;i++) {\n\t\tif(s1[i]=='(') ++l;\n\t\telse if(s1[i]==')') ++r;\n\t\telse {\n\t\t\ts2[i]=')';\n\t\t\tcin>>a[i]>>b[i];\n\t\t\t++sum;\n\t\t}\n\t}\n\tif(l-r>sum||r-l>sum) {\n\t\ted;\n\t} \n\tl=r=0;\n\tif(s1[0]=='?') s2[0]='(';\n\t++l;\n\tfor(int i=1;i<s2.size();i++) {\n\t\tif(s1[i]=='?') q.push(mp(b[i]-a[i],i));\n\t\tif(s2[i]=='(') l++;\n\t\telse if(s2[i]==')') r++;\n\t\tif(r>l) {\n\t\t\ts2[q.top().S]='(';\n\t\t\t--r;\n\t\t\t++l;\n\t\t\tq.pop();\n\t\t}\n\t}\n\tif(r-l) {\n\t\ted;\n\t}\n\tfor(int i=0;i<s2.size();i++) {\n\t\tif(s1[i]=='?') {\n\t\t\tif(s2[i]=='(') ans+=a[i];\n\t\t\telse ans+=b[i];\n\t\t}\n\t}\n\tcout<<ans<<endl;\n\tcout<<s2;\n\treturn 0;\n}\n```",
        "postTime": 1587084809,
        "uid": 189521,
        "name": "ahawzlc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF3D \u3010Least Cost Bracket Sequence\u3011"
    },
    {
        "content": "# \u9898\u76ee\n[\u539f\u9898\u5730\u5740](https://www.luogu.com.cn/problem/CF3D)\n# \u89e3\u8bf4\n~~\u88ab\u81ea\u5df1\u9009\u7684\u9898\u5361\u4e86\u4e24\u8282\u8bfe\u2026\u2026~~\n\n\u9996\u5148\uff0c\u95ee\u53f7\u7684\u72b6\u6001\u4f1a\u5f71\u54cd\u80fd\u5426\u5339\u914d\uff0c\u90a3\u4e48\u6211\u4eec\u4e0d\u59a8\u5c31\u5148\u8ba9\u6240\u6709\u95ee\u53f7\u90fd\u4e3a\u53f3\u62ec\u53f7\uff0c\u4ec0\u4e48\u65f6\u5019\u53f3\u62ec\u53f7\u592a\u591a\u4e86\u5c31\u628a\u524d\u9762\u7684\u95ee\u53f7\u6539\u6210\u5de6\u62ec\u53f7\u5373\u53ef\u3002\n\n\u90a3\u4e48\u524d\u9762\u6709\u591a\u4e2a\u95ee\u53f7\u7684\u65f6\u5019\u6211\u4eec\u5e94\u8be5\u9009\u62e9\u54ea\u4e2a\uff1f\u663e\u7136\u6211\u4eec\u5e94\u8be5\u8fd0\u7528\u8d2a\u5fc3\u601d\u60f3\uff0c\u54ea\u4e2a\u95ee\u53f7\u6539\u53d8\u540e\u4e3a\u6211\u4eec\u51cf\u5c11\u7684\u82b1\u8d39\u591a\u6211\u4eec\u5c31\u9009\u54ea\u4e2a\uff0c\u8fd9\u5c31\u9700\u8981\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a\u4f18\u5148\u961f\u5217\uff0c\u6392\u5e8f\u7684\u4f9d\u636e\u662f$-b+a$\u7684\u5927\u5c0f\uff08$b$\u662f\u8be5\u95ee\u53f7\u6539\u4e3a\u53f3\u62ec\u53f7\u7684\u4ef7\u503c\uff0c$a$\u662f\u8be5\u95ee\u53f7\u6539\u4e3a\u5de6\u62ec\u53f7\u7684\u4ef7\u503c\uff09\u3002\u6211\u4eec\u6bcf\u9047\u5230\u4e00\u4e2a\u95ee\u53f7\u5c31\u628a\u5b83\u63a8\u8fdb\u961f\u5217\u91cc\uff0c\u4ee5\u5907\u4e4b\u540e\u9009\u7528\u3002\u6bcf\u9009\u7528\u4e00\u4e2a\u62ec\u53f7\u5c31\u628a\u5b83\u6539\u4e3a\u5de6\u62ec\u53f7\uff0c\u540c\u65f6\u4fee\u6539\u6211\u4eec\u7684$answer$\u548c\u8ba1\u6570\u5668\u3002\n\n\u5f53\u7136\uff0c\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u6211\u4eec\u8fd8\u9700\u8981\u5224\u65ad\u80fd\u5426\u5339\u914d\u3002\u4e0d\u5339\u914d\u7684\u60c5\u51b5\u603b\u5171\u4e24\u79cd\uff1a\n\n1.\u53d1\u73b0\u53f3\u62ec\u53f7\u6bd4\u5de6\u62ec\u53f7\u8fd8\u591a\u540e\u524d\u9762\u5374\u6ca1\u6709\u95ee\u53f7\u7528\u6765\u62b5\u6d88\n\n2.\u5230\u6700\u540e\u53d1\u73b0\u5de6\u62ec\u53f7\u6bd4\u53f3\u62ec\u53f7\u548c\u95ee\u53f7\u7684\u548c\u8fd8\u591a\n\n\u8fd9\u65f6\u8f93\u51fa$-1$\u5373\u53ef\u3002\n# \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=50000+3;\ntypedef long long ll;\nchar s[maxn];\nstruct inf{//\u8bb0\u5f55\u95ee\u53f7\u7684\u4f4d\u7f6e\u548c\u4ef7\u503c\n\tint loc;\n\tll a,b;\n\tinf(int d,ll e,ll f){\n\t\tloc=d; a=e; b=f;\n\t}\n\tbool operator<(const inf &x)const{//\u6392\u5e8f\u4f9d\u636e\n\t\treturn -b+a>-x.b+x.a;\n\t}\n};\npriority_queue<inf> q;\nint main(){\n\tscanf(\"%s\",s);\n\tint len=strlen(s),js=0;//js\u4e3a\u8ba1\u6570\u5668\n\tll ans=0;\n\tfor(int i=0;i<len;i++){\n\t\tif(s[i]=='(') js++;\n\t\tif(s[i]==')') js--;\n\t\tif(s[i]=='?'){\n\t\t\tjs--;\n\t\t\tll a,b;\n\t\t\tscanf(\"%lld%lld\",&a,&b);\n\t\t\tq.push(inf(i,a,b));\n\t\t\tans+=b;//\u9ed8\u8ba4\u4e3a\u53f3\u62ec\u53f7\n\t\t\ts[i]=')';\n\t\t}\n\t\tif(js<0){//\u53f3\u62ec\u53f7\u592a\u591a\u4e86\n\t\t\tif(q.empty()){//\u89e3\u8bf4\u91cc\u8f93\u51fa-1\u7684\u60c5\u51b5\u4e00\n\t\t\t\tprintf(\"-1\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tinf k=q.top();\n\t\t\tans=ans-k.b+k.a;//\u6539\u4e3a\u5de6\u62ec\u53f7\n\t\t\tjs+=2;\n\t\t\tq.pop();\n\t\t\ts[k.loc]='(';\n\t\t}\n\t}\n\tif(js!=0){//\u89e3\u8bf4\u91cc\u8f93\u51fa-1\u7684\u60c5\u51b5\u4e8c\n\t\tprintf(\"-1\");\n\t\treturn 0;\n\t}\n\tprintf(\"%lld\\n\",ans);\n\tprintf(\"%s\",s);\n\treturn 0;\n} \n```\n\n\u5e78\u751a\u81f3\u54c9\uff0c\u6b4c\u4ee5\u548f\u5fd7\u3002",
        "postTime": 1589710416,
        "uid": 239287,
        "name": "DarthVictor",
        "ccfLevel": 6,
        "title": "[CF3D] Least Cost Bracket Sequence"
    },
    {
        "content": "~~\u770b\u5230\u5e26\u62ec\u53f7\u7684\u9898\uff0c\u6211\u4eec\u7684\u7b2c\u4e00\u53cd\u5e94\u5c31\u662f\u5f00\u4e2a\u6808QwQ~~\n\n\u9996\u5148\u9700\u8981\u77e5\u9053\u4e00\u5207\u4e00\u5207\u7684\u524d\u63d0\u662f\u62ec\u53f7\u5e8f\u5217\u5408\u6cd5\uff0c\u6240\u4ee5\u4e0d\u80fd\u5355\u7eaf\u7684\u6d45\u6d45\u8d2a\u5fc3\u6c42\u51fa\u4ee3\u4ef7\u6700\u5c0f\u7684\u653e\u6cd5\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u5408\u6cd5\u7684\u5e8f\u5217\u6765\u8bf4\uff0c\u5de6\u53f3\u62ec\u53f7\u7684\u6570\u91cf\u4e00\u5b9a\u76f8\u7b49\uff0c\u5e76\u4e14\u5728\u5f53\u524d\u4f4d\u7f6e\uff0c\u5de6\u62ec\u53f7\u7684\u6570\u91cf\u4e00\u5b9a\u4e0d\u5c0f\u4e8e\u53f3\u62ec\u53f7\u7684\u6570\u91cf\uff0c\u4e8e\u662f\u53ef\u4ee5\u5f00\u4e00\u4e2a\u6808\u6765\u5b58\u5de6\u62ec\u53f7\uff0c\u9047\u5230\u53f3\u62ec\u53f7\u5c31\u5f39\u6808\uff0c\u6808\u7a7a\u5219\u4e0d\u5408\u6cd5\u3002\n\n\u7136\u800c\u5176\u5b9e\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u4e00\u6574\u4e2a\u6808\uff0c\u53ea\u9700\u8981\u7559\u4e0b\u6808\u9876\u5373\u53ef\uff0c\u56e0\u4e3a\u6808\u4e2d\u5143\u7d20\u76f8\u540c\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u8003\u8651\u8d2a\u5fc3\u4e86\uff0c\u626b\u63cf\u6574\u4e2a\u5e8f\u5217\uff1a\n\n\u5982\u679c\u662f\u95ee\u53f7\uff0c\u5c31\u66ff\u6362\u6210\u53f3\u62ec\u53f7\uff0c\u7136\u540e\u5224\u65ad\u80fd\u5426\u914d\u5bf9\uff0c\u663e\u7136\uff0c\u8fd9\u6837\u7684\u60f3\u6cd5\u662f\u6b63\u786e\u7684\uff0c\u56e0\u4e3a\u5de6\u62ec\u53f7\u7684\u6570\u91cf\u4e00\u5b9a\u4e0d\u5c0f\u4e8e\u53f3\u62ec\u53f7\u7684\u6570\u91cf\uff0c\u6240\u4ee5\u5728\u53f3\u62ec\u53f7\u6570\u91cf\u591a\u4e8e\u5de6\u62ec\u53f7\u65f6\uff0c\u53d6\u51fa\u5de6\u62ec\u53f7\u4ee3\u4ef7\u6700\u5c11\u7684\u90a3\u4e2a\u5373\u53ef\u3002\n\n\u4e8e\u662f\u4e4e\uff0c\u6bcf\u4e00\u6b65\u90fd\u4fdd\u8bc1\u4e86\u5f53\u524d\u62ec\u53f7\u5e8f\u5217\u5408\u6cd5\u4e14\u6700\u4f18\uff0c\u8d2a\u5fc3\u7684\u5408\u7406\u6027\u4e5f\u663e\u800c\u6613\u89c1\u3002\n\n\u4ee3\u7801\u4e3b\u4f53\u5982\u4e0b\uff08\u8981\u81ea\u5df1\u601d\u8003\u54dfqwq\uff09\uff1a\n```cpp\n\tfor(int i=0;i<l;i++)\n\t{\n\t\tif(s[i]=='(') top++;\n\t\telse \n\t\t{\n\t\t\ttop--;\n\t\t\tif(s[i]=='?')\n\t\t\t{\n\t\t\t\tint a,b;\n\t\t\t\tcin>>a>>b;\n\t\t\t\tq.push(node(a-b,i));\n\t\t\t\ts[i]=')';\n\t\t\t\tans+=b;\n\t\t\t}\n\t\t}\n\t\tif(top<0)\n\t\t{\n\t\t\tif(q.empty())\n\t\t\t\treturn printf(\"-1\\n\"),0;\n\t\t\ttop+=2;\n\t\t\tnode u=q.top();q.pop();\n\t\t\ts[u.id]='(';\n\t\t\tans+=u.val;\n\t\t}\n\t}\n```",
        "postTime": 1673013589,
        "uid": 822239,
        "name": "ncwzdlsd",
        "ccfLevel": 3,
        "title": "CF3D\u9898\u89e3"
    },
    {
        "content": "## \u5206\u6790\n\u521a\u5728\u7f51\u6821\u770b\u4e86\u8d2a\u5fc3\u7b97\u6cd5\uff0c\u4ee5\u4e0b\u4e3a\u8fd9\u9053\u9898\u7684\u5206\u6790\uff1a\n\n\u9996\u5148\u5148\u53ea\u8003\u8651\u62ec\u53f7\u5339\u914d\uff0c\u5c31\u662f\u7528 *)* \u5339\u914d *(* \uff0c\u6240\u4ee5\u6211\u4eec\u9996\u5148\u8d2a\u5fc3\u7684\u5c06\u6240\u6709 *?* \u66ff\u6362\u4e3a *)*,\u82e5\u4e24\u8005\u4e0d\u5339\u914d\u5219\u5c06\u67d0\u4e9b\u6362\u4e3a *(* \u3002\n\n\u4f46\u9898\u76ee\u8fd8\u6709\u66ff\u6362\u4ee3\u4ef7\uff0c\u6240\u4ee5\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a\u5806\uff0c\u4ee5*val_a-val_b*\u4e3a\u5173\u952e\u7ef4\u62a4\u4e00\u4e2a *?* \u7684\u5806\uff08val_a\u4e3a\u6539\u4e3a *(* \u7684\u4ee3\u4ef7\uff0cval_b\u4e3a *\uff09* \u7684\u4ee3\u4ef7\uff09\uff0c\u5f53\u4e0d\u5339\u914d\u65f6\uff0c\u53bb\u9664\u5806\u9876\u7684\u66ff\u6362\u3002\n## \u6ce8\u610f\u70b9\n\u6ce8\u610f\uff1a\n\n- \u4f18\u5148\u961f\u5217\u9ed8\u8ba4\u5927\u9876\u5806\uff0c\u591a\u4ee5\u91cd\u7f6e$<$\u65f6\u8981\u5c06val_a-val_b\u5c0f\u7684\u5f53\u505a\u5927\u7684\u3002\n\n- \u8981\u5373\u4f7f\u66f4\u6539\u5b57\u7b26\u4e32\u4e2d\u7684\u7b26\u53f7\u3002\n\n\u6709\u4e24\u79cd\u4e0d\u5339\u914d\u60c5\u51b5\uff1a\n\n- \u62ec\u53f7\u6570\u4e0d\u5339\u914d\u65f6\u961f\u5217\u5df2\u7a7a\n\n- \u6309\u7167\u8d2a\u5fc3\u7b56\u7565\u5339\u914d\u5b8c\u65f6\u62ec\u53f7\u65f6\u4e0d\u5339\u914d\n\n## \u4ee3\u7801\n\u8d34\u4ee3\u7801\uff1a\n\n~~~cpp\n\n#include<bits/stdc++.h>\n#define int long long\ntemplate<typename T>inline void read(T &x){\n\tT f=0;x=0;char ch=getchar();\n    for(;!isdigit(ch);ch=getchar())f|=ch=='-';\n    for(;isdigit(ch);ch=getchar())x=(x<<1)+(x<<3)+(ch^48);\n    x=f?-x:x;\n}\ntemplate<typename T>inline void write(T x){\n\tif(x<0){putchar('-');x=-x;}\n\tif(x>9)write(x/10);\n\tputchar(x%10+48);\n}\nusing namespace std;\nstruct node{\n\tint loc,val_a,val_b;\n\tbool operator<(const node &x)const{\n\t\treturn val_a-val_b>x.val_a-x.val_b;\n\t}\n};priority_queue<node>q; \nchar s[50005]; \nint key,sum;\nsigned main(){\n\tscanf(\"%s\",s); \n\tint len=strlen(s);\n\tfor(int i=0;i<len;++i){\n\t\tif(s[i]=='('){\n\t\t\t++key;\n\t\t}else if(s[i]==')'){\n\t\t\t--key; \n\t\t}else if(s[i]=='?'){\n\t\t\tint a,b; read(a),read(b);\n\t\t\tq.push((node){i,a,b});\n\t\t\tsum+=b; s[i]=')';\n\t\t\t--key;\n\t\t}\n\t\tif(key<0){\n\t\t\tif(q.empty()){\n\t\t\t\tcout<<-1; return 0;\n\t\t\t}\n\t\t\tnode t=q.top(); q.pop();\n\t\t\tsum+=t.val_a-t.val_b; s[t.loc]='(';\n\t\t\tkey+=2;\n\t\t}\n\t} \n\tif(key!=0){\n\t\tcout<<-1; return 0;\n\t}\n\twrite(sum); putchar('\\n');\n\tprintf(\"%s\",s);\n\treturn 0;\n} \n\n~~~",
        "postTime": 1601951698,
        "uid": 165113,
        "name": "linaonao",
        "ccfLevel": 0,
        "title": "CF3D Least Cost Bracket Sequence \u9898\u89e3"
    },
    {
        "content": "## \u5206\u6790\n\n\u4e00\u53e5\u8bdd\u9898\u610f\uff1a:\u7ed9\u4e00\u4e2a\u5e8f\u5217\uff0c\u5e8f\u5217\u91cc\u9762\u4f1a\u6709\u5de6\u62ec\u53f7\u3001\u95ee\u53f7\u3001\u53f3\u62ec\u53f7\u3002\u5bf9\u4e8e\u4e00\u4e2a`?`\u800c\u8a00\uff0c\u53ef\u4ee5\u5c06\u5176\u66ff\u6362\u4e3a\u4e00\u4e2a`(`\uff0c\u4e5f\u53ef\u4ee5\u66ff\u6362\u6210\u4e00\u4e2a`)`\uff0c\u4f46\u662f\u90fd\u6709\u76f8\u5e94\u7684\u4ee3\u4ef7\u3002\u95ee\uff1a\u5982\u4f55\u66ff\u6362\u4f7f\u5f97\u4ee3\u4ef7\u6700\u5c0f\u3002\u524d\u63d0\u662f\u66ff\u6362\u4e4b\u540e\u7684\u5e8f\u5217\u4e2d\uff0c\u62ec\u53f7\u662f\u5339\u914d\u7684\u3002\u5982\u679c\u4e0d\u80fd\u66ff\u6362\u4e3a\u4e00\u4e2a\u62ec\u53f7\u5339\u914d\u7684\u5e8f\u5217\u5219\u8f93\u51fa`-1`\u3002\n\n\u8fd9\u9053\u9898\u8981\u7528\u5230\u8d2a\u5fc3\u7684\u601d\u60f3\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u904d\u5386\u4e00\u904d\uff0c\u628a\u6240\u6709\u7684\u95ee\u53f7\u90fd\u6539\u6210\u53f3\u62ec\u53f7\n\n\u7136\u540e\u6211\u4eec\u518d\u4ece\u5de6\u5230\u53f3\u8fdb\u884c\u5339\u914d\uff0c\u540c\u65f6\u8bb0\u5f55\u4e00\u4e0b\u5de6\u62ec\u53f7\u7684\u4e2a\u6570$cnt$\uff0c\u5982\u679c\u5f53\u524d\u904d\u5386\u5230\u4e86\u4e00\u4e2a\u53f3\u62ec\u53f7\uff0c\u90a3\u4e48$cnt$-- \u4ee3\u8868\u6709\u4e00\u5bf9\u62ec\u53f7\u5339\u914d\u6210\u529f\n\n\u5982\u679c$cnt<0$\u90a3\u4e48\u6211\u4eec\u5c31\u4ece\u4e4b\u524d\u7531\u95ee\u53f7\u53d8\u6210\u7684\u53f3\u62ec\u53f7\u4e2d\u627e\u4e00\u4e2a\uff0c\u628a\u5b83\u53d8\u6210\u5de6\u62ec\u53f7\uff0c\u540c\u65f6\u628a$cnt+2$\n\n\u90a3\u4e48\u6211\u4eec\u627e\u54ea\u4e00\u4e2a\u5462\uff1f\u80af\u5b9a\u662f\u627e\u53d8\u6210\u5de6\u62ec\u53f7\u7684\u4ef7\u503c\u51cf\u53bb\u53d8\u6210\u53f3\u62ec\u53f7\u7684\u4ef7\u503c\u6700\u5c0f\u7684\u90a3\u4e00\u4e2a\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u4f18\u5148\u961f\u5217\u7ef4\u62a4\n\n\u8981\u662f\u627e\u4e0d\u5230\u5c31\u8bf4\u660e\u5339\u914d\u5931\u8d25\uff0c\u76f4\u63a5\u8f93\u51fa$-1$\n\n\u6700\u540e\u5faa\u73af\u7ed3\u675f\u7684\u65f6\u5019\u5982\u679c\u5de6\u62ec\u53f7\u7684\u4e2a\u6570\u4e0d\u4e3a0\uff0c\u4e5f\u8981\u8f93\u51fa$-1$\n\n\u5426\u5219\u5c31\u8f93\u51fa\u4f60\u8bb0\u5f55\u7684\u5b57\u7b26\u4e32\n\n## \u4ee3\u7801\n\n``` cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=5e4+5;\nchar s[maxn],s2[maxn];\nstruct asd{\n    int lef,rig,num;\n    asd(int aa=0,int bb=0,int cc=0){\n        lef=aa,rig=bb,num=cc;\n    }\n    bool operator < (const asd& A) const {\n        return (lef-rig)>(A.lef-A.rig);\n    }\n};\npriority_queue<asd> q;\nint main(){\n    scanf(\"%s\",s);\n    int n=strlen(s);\n    int cnt=0;\n    long long ans=0;\n    for(int i=0;i<n;i++){\n        if(s[i]=='('){\n            cnt++;\n            s2[i]='(';\n        }\n        else{\n            cnt--;\n            s2[i]=')';\n            if(s[i]=='?'){\n                int aa,bb;\n                scanf(\"%d%d\",&aa,&bb);\n                ans+=(long long)bb;\n                q.push(asd(aa,bb,i));\n            }\n            if(cnt<0){\n                if(q.empty()){\n                    printf(\"-1\\n\");\n                    return 0;\n                }\n                cnt+=2;\n                int ll=q.top().lef,rr=q.top().rig,id=q.top().num;\n                s2[id]='(';\n                q.pop();\n                ans+=(long long)(ll-rr);\n            }\n        } \n    }\n    if(cnt!=0) printf(\"-1\\n\");\n    else printf(\"%lld\\n%s\\n\",ans,s2);\n    return 0;\n}\n\n```\n\n",
        "postTime": 1589712426,
        "uid": 316322,
        "name": "hzoi_liuchang",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF3D \u3010Least Cost Bracket Sequence\u3011"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\n\n\u7ed9\u5b9a\u5b57\u7b26\u4e32 $S$\uff0c\uff08$|S| \\leq 5 \\times 10 ^ 4$\uff09 \u3002\u5b57\u7b26\u4e32\u7531 $\\texttt{(}$\uff0c$\\texttt{)}$ \u548c $\\texttt{?}$ \u6784\u6210\u3002\u5176\u4e2d $\\texttt{?}$ \u8868\u793a\u5f53\u524d\u70b9\u53ef\u4ee5\u586b\u5de6\u62ec\u53f7\u4e5f\u53ef\u4ee5\u586b\u53f3\u62ec\u53f7\u3002\u4f46\u662f\uff0c\u586b\u5199\u5de6\u62ec\u53f7\u6216\u8005\u53f3\u62ec\u53f7\u90fd\u6709\u76f8\u5e94\u7684\u4ee3\u4ef7 $a, b$ \u3002\n\n\u7ed9\u51fa\u6bcf\u4e2a $\\texttt{?}$ \u5904\u586b\u5199\u5de6\u53f3\u62ec\u53f7\u7684\u4ee3\u4ef7\uff0c\u95ee\uff1a\u5c06\u539f\u5b57\u7b26\u4e32\u586b\u5199\u6210\u4e3a\u5408\u6cd5\u62ec\u53f7\u5339\u914d\u6240\u9700\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\n\n### \u9898\u76ee\u5206\u6790\n\n\u8d2a\u5fc3\u3002\n\n-------------\n\n\u9996\u5148\u5c06\u539f\u5b57\u7b26\u4e32\u7684\u95ee\u53f7\u5904\u5168\u90e8\u586b\u5145\u6210\u53f3\u62ec\u53f7\u3002\uff08\u4e00\u5b9a\u586b\u53f3\u62ec\u53f7\uff01\uff09\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a\u4f4d\u7f6e $u$\uff0c\u5982\u679c $u$ \u524d\u9762\u7684\u53f3\u62ec\u53f7\u6bd4\u5de6\u62ec\u53f7\u591a\uff0c\u90a3\u4e48\u5fc5\u5b9a\u8981\u5c06\u5176\u4e2d\u4e00\u4e9b\u53f3\u62ec\u53f7\u6362\u6210\u5de6\u62ec\u53f7\u3002\u56e0\u4e3a\u5982\u679c\u4e0d\u66ff\u6362\uff0c$u$ \u524d\u9762\u4e00\u5b9a\u6709\u65e0\u6cd5\u5339\u914d\u7684\u53f3\u62ec\u53f7\u3002\n\n\u90a3\u4e48\u8d2a\u5fc3\u5c31\u51fa\u6765\u4e86\u3002\u6211\u4eec\u6bcf\u6b21\u627e\u82b1\u8d39\u4ee3\u4ef7\u5c11\u7684\u6765\u66ff\u6362\u3002\u90a3\u4e48\u73b0\u5728\u53c8\u4e24\u4e2a\u95ee\u9898\uff1a\n\n1. \u4ee3\u4ef7\u662f\u4ec0\u4e48\uff1f\n\n\t\u9996\u5148\u5047\u8bbe\u9009\u62e9\u4e86\u7b2c $x$ \u4e2a\u62ec\u53f7\u8fdb\u884c\u66ff\u6362\u3002\u90a3\u4e48\u5c31\u9700\u8981\u5c06\u539f\u6765\u7684\u4ee3\u4ef7 $b$ \u53d8\u6210\u73b0\u5728\u7684\u4ee3\u4ef7 $a$\uff0c\u591a\u4f59\u82b1\u8d39\u4e3a $a - b$ \uff0c\u6211\u4eec\u8981\u8ba9\u8fd9\u4e2a\u4ee3\u4ef7\u5c3d\u53ef\u80fd\u5c0f\u3002\n    \n2. \u600e\u6837\u627e\u5230\u6700\u5c0f\u4ee3\u4ef7\uff1f\n\n\t\u8003\u8651\u4f7f\u7528\u4e00\u4e2a\u5c0f\u6839\u5806\u6765\u7ef4\u62a4\u5f53\u524d\u70b9\u4e4b\u524d\u7684\u6240\u6709\u4ee3\u4ef7\uff0c\u6bcf\u6b21\u53d6\u51fa\u5806\u9876\u3002\n    \n\u6700\u540e\u5728\u6765\u8bf4\u4e00\u4e0b\u65e0\u89e3\u7684\u60c5\u51b5\uff1a\n\n1. \u5982\u679c\u5f00\u59cb\u65f6\uff0c\u5b57\u7b26\u4e32\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u662f $\\texttt{)}$ \u6216\u8005\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u662f $\\texttt{(}$ \uff0c\u5219\u65e0\u89e3\u3002\n\n2. \u5982\u679c\u5339\u914d\u5b8c\u6210\u540e\uff0c\u62ec\u53f7\u4e32\u4e0d\u5408\u6cd5\uff0c\u5219\u65e0\u89e3\u3002\uff08\u5176\u5b9e\u8fd9\u91cc\u6709\u522b\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u56e0\u4e3a\u61d2\u4e0d\u60f3\u5206\u7c7b\u8ba8\u8bba\uff0c\u4e8e\u662f\u5c31\u66b4\u529b\u5224\u65ad\u4e86\u3002\uff09\n\n### CODE\n\n```\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <queue>\n#define x first\n#define y second\n\nusing namespace std;\n\ntypedef pair<int, int> PII;\nconst int N = 50010;\n\nchar s[N];\nint n;\npriority_queue<PII, vector<PII>, greater<PII>> q;\nlong long s1, s2, res;\n\nbool check() {\n\tint top = 0;\n\tstatic int a[N];\n\tfor (int i = 1; i <= n; i ++ ) {\n\t\tif (s[i] == '(') a[ ++ top] = i;\n\t\telse top -- ;\n\t}\n\treturn top ? 0 : 1;\n}\n\nint main() {\n\tscanf(\"%s\", s + 1);\n\tn = strlen(s + 1);\n\t\n\tif (s[1] == ')' or s[n] == '(')\n\t\treturn puts(\"-1\"), 0;\n\t\n\tfor (int i = 1; i <= n; i ++ ) {\n\t\tif (s[i] == '?') {\n\t\t\tint a, b;\n\t\t\tscanf(\"%d%d\", &a, &b);\n\t\t\ts[i] = ')';\n\t\t\tq.push({a - b, i});\n\t\t\tres += b;\n\t\t}\n\t\t(s[i] == '(') ? s1 ++ : s2 ++ ;\n\t\t\n\t\tif (s2 > s1) {\n\t\t\twhile (s2 > s1 && q.size()) {\n\t\t\t\ts2 -- , s1 ++ ;\n\t\t\t\tauto t = q.top();\n\t\t\t\tq.pop();\n\t\t\t\tint ver = t.second, w = t.first;\n\t\t\t\ts[ver] = '(', res += w;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (!check()) return puts(\"-1\"), 0;\n\t\n\tprintf(\"%I64d\\n\", res);\n\tputs(s + 1);\n\t\n\treturn 0;\n}\n```",
        "postTime": 1660625254,
        "uid": 519384,
        "name": "Link_Cut_Y",
        "ccfLevel": 0,
        "title": "[CF3D] Least Cost Bracket Sequence"
    },
    {
        "content": "\u5148\u8003\u8651\u4ec0\u4e48\u662f\u5408\u6cd5\u7684\u62ec\u53f7\u5e8f\u5217\u3002\n\n\u8bbe\u4e00\u4e2a $det$ \uff0c\u5982\u679c\u78b0\u5230\u4e00\u4e2a `(` \uff0c\u5c31 `det++` \uff0c\u5982\u679c\u662f `)` \uff0c\u5c31 `det--`\u3002\n\n\u90a3\u4e48\u4e00\u4e2a\u62ec\u53f7\u5e8f\u5217\u5408\u6cd5\u5f53\u4e14\u4ec5\u5f53\u5728\u4efb\u610f\u672a\u77e5\u7684 $det$ \u90fd\u6ee1\u8db3 $det \\ge0$\n\n\u4e0b\u9762\u63a5\u7740\u8003\u8651\u600e\u4e48\u8ba9\u4ee3\u4ef7\u6700\u5c0f\u3002\n\n\u56e0\u4e3a\u8981\u4fdd\u8bc1\u5408\u6cd5\u6027\uff0c\u6240\u4ee5\u5f53\u904d\u5386\u5230\u4e00\u4e2a\u4f4d\u7f6e\u7684\u65f6\u5019\u51fa\u73b0\u4e86 $det<0$ \u7684\u60c5\u51b5\uff0c\u6211\u4eec\u5c31\u9700\u8981\u5728\u5f53\u524d\u4f4d\u7f6e\u7684\u524d\u9762\u5c06\u4e00\u4e2a `?` \u53d8\u6210 `(`\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53ea\u9700\u8981\u53d6\u51fa\u6765 $a_i-b_i$ \u6700\u5c0f\u7684\u5c31\u884c\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u5148\u5047\u5b9a\u6bcf\u4e2a `?` \u90fd\u88ab\u66ff\u6362\u6210\u4e86 `)` \uff0c\u5982\u679c\u5f53\u524d\u4f4d\u7f6e\u4e0a\u7684\u5b57\u7b26\u662f `?` \uff0c\u6211\u4eec\u5c06 $a_i-b_i$ \u52a0\u5165\u5c0f\u6839\u5806\u4e2d\u3002\n\n\u6bcf\u6b21 $det<0$ \u65f6\u8ba9\u5f53\u524d\u7b54\u6848\u52a0\u4e0a\u5806\u9876\u6743\u503c\uff0c\u628a\u5806\u9876\u5143\u7d20 `pop` \u6389\uff0c\u518d `det+=2`\u3002\n\n\u6700\u540e\u6ce8\u610f\u521d\u59cb\u7b54\u6848\u662f\u6240\u6709 `?` \u66ff\u6362\u4e3a `)` \u7684\u6743\u503c\u4e4b\u548c\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a $O(n \\log n)$ \u3002",
        "postTime": 1651759632,
        "uid": 117771,
        "name": "intel_core",
        "ccfLevel": 7,
        "title": "CF3D \u9898\u89e3"
    },
    {
        "content": "\u4e00\u9053\u5f88\u55b5\u55b5\u7684\u5999\u5999\u9898\n\n## \u9898\u76ee\u7b80\u8ff0\n\n- \u7ed9\u4f60\u4e00\u4e2a\u62ec\u53f7\u5e8f\u5217 $s$\uff0c\u5f53\u4e2d\u6709\u4e00\u4e9b `?`\u3002\n- \u628a\u8fd9\u4e9b `?` \u6362\u6210 `(` \u6709 $a_i$ \u7684\u4ef7\u503c\uff0c\u6362\u6210 `)` \u6709 $b_i$ \u7684\u4ef7\u503c\u3002\u6c42\u603b\u4ef7\u503c\u7684\u6700\u5c0f\u503c\u3002\n- $|s|\\leq 5\\times 10^4$\u3002\n\n## \u89e3\u9898\u601d\u8def\n\n\u4e00\u9053\u55b5\u55b5\u8d2a\u5fc3\u9898\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a `?` \u6211\u4eec\u5148\u628a\u5b83\u5f53\u505a `)` \u4e22\u8fdb\u539f\u5e8f\u5217\u3002\u5982\u679c\u53d1\u73b0\u67d0\u4e2a\u4f4d\u7f6e\u4e0d\u5408\u6cd5\u5c31\u628a\u4ece `)` \u4fee\u6539\u5230 `(` \u4ee3\u4ef7\u5dee\u6700\u5c0f\u7684\u8fdb\u884c\u66f4\u6362\u3002\n\n\u628a\u4e00\u4e2a `?` \u4fee\u6539\u7684\u65f6\u5019\u53ea\u8981\u4e22\u5230\u4e00\u4e2a\u5c0f\u6839\u5806\u91cc\u9762\u5c31\u597d\u4e86\uff0c\u5b9e\u73b0\u975e\u5e38\u7b80\u5355\u3002\n\n## \u53c2\u8003\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<queue>\nusing namespace std;\n#define ll long long\npriority_queue <pair<int,int> > q;\nstring s;\nint x,y;\nll ans=0,les=0;\nint main(){\n\tcin>>s;\n\tfor(int i=0;i<s.length();i++){\n\t\tif(s[i]=='(') les++;\n\t\telse if(s[i]==')') les--;\n\t\telse{\n\t\t\tles--;\n\t\t\ts[i]=')';\n\t\t\tcin>>x>>y;\n\t\t\tq.push(make_pair(-(x-y),i));\n\t\t\tans+=y;\n\t\t} \n\t\tif(les<0&&q.empty())\n\t\t\tbreak;\n\t\tif(les<0){\n\t\t\tint k=-q.top().first,p=q.top().second;\n\t\t\tq.pop(); \n\t\t\tles+=2;\n\t\t\ts[p]='(';\n\t\t\tans+=k;\n\t\t}\n\t}\n\tif(les!=0)\n\t\tcout<<\"-1\";\n\telse\n\t\tcout<<ans<<endl<<s;\n}\n```\n",
        "postTime": 1646054053,
        "uid": 248400,
        "name": "Inaba_Meguru",
        "ccfLevel": 7,
        "title": "CF3D Least Cost Bracket Sequence \u9898\u89e3"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](http://zrzring.cn/index.php/archives/258)\n\n> \u7ed9\u5b9a\u4e00\u4e2a\u5e26`?`\u7684\u957f\u5ea6\u4e3a$n$\u7684\u62ec\u53f7\u4e32\uff0c\u7b2c$i$\u4e2a`?`\u53d8\u6210`(`\u4ee3\u4ef7\u4e3a$l_i$\uff0c\u53d8\u6210`)`\u7684\u4ee3\u4ef7\u4e3a$r_i$\uff0c\u6c42\u5c06\u62ec\u53f7\u4e32\u5168\u90e8`?`\u53d8\u6210\u62ec\u53f7\u4e14\u62ec\u53f7\u4e32\u662f\u5408\u6cd5\u7684\u7684\u6700\u5c0f\u4ee3\u4ef7\n\n\u8003\u8651\u8d2a\u5fc3\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u5408\u6cd5\uff0c\u6211\u4eec\u521d\u59cb\u5316\u6240\u6709`?`\u4e3a`)`\uff0c\u7136\u540e\u78b0\u5230`(`\u4e0d\u591f\u7684\u65f6\u5019\u628a\u524d\u9762\u7684`)`\u53d8\u6210`(`\u5373\u53ef\n\n\u5806\u4f18\u5316\u6bcf\u6b21\u627e\u5230\u524d\u9762\u53d8`)`\u4e3a`(`\u6700\u5c0f\u4ee3\u4ef7\u7684\u90a3\u4e2a\u5373\u53ef\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <algorithm>\n#include <queue>\n\n#define int long long\n#define mp(x, y) make_pair(x, y)\n\nusing namespace std;\n\nvoid file() {\n    freopen(\"std.in\", \"r\", stdin);\n    freopen(\"wa.out\", \"w\", stdout);\n}\n\nconst int N = 1e6 + 10, M = 2e6 + 10, inf = 1e9;\n\ninline int read() {\n    bool sym = 0; int res = 0; char ch = getchar();\n    while (!isdigit(ch)) sym |= (ch == '-'), ch = getchar();\n    while (isdigit(ch)) res = (res << 3) + (res << 1) + (ch ^ 48), ch = getchar();\n    return sym ? -res : res;\n}\n\nint n, m, cnt, ans;\n\nchar ch[N];\n\npriority_queue<pair<int, int> >q;\n\nsigned main() {\n    scanf(\"%s\", ch + 1); n = strlen(ch + 1);\n    if (n % 2) {printf(\"-1\"); return 0;}\n    for (int i = 1, j = 0; i <= n; i++) {\n        if (ch[i] == '(') cnt++;\n        if (ch[i] == ')') cnt--;\n        if (ch[i] == '?') {\n            int l = read(), r = read(); cnt--; ans += r; ch[i] = ')'; q.push(mp(r - l, i));\n        }\n        if (cnt < 0) {\n            if (q.empty()) {printf(\"-1\"); return 0;}\n            pair<int, int> t = q.top(); q.pop();\n            ans -= t.first; ch[t.second] = '('; cnt = 1; \n        }\n    }\n    if (cnt) {printf(\"-1\"); return 0;}\n    printf(\"%lld\\n\", ans); printf(\"%s\", ch + 1);\n    return 0;\n}\n```",
        "postTime": 1602070116,
        "uid": 28392,
        "name": "zrzring",
        "ccfLevel": 5,
        "title": "CF3D \u3010Least Cost Bracket Sequence\u3011"
    },
    {
        "content": "### Preface\n\n\u62ec\u53f7\u5339\u914d\u76f8\u5173\u9898\u76ee\u3002\u592a\u4e45\u6ca1\u5199\u8fd9\u73a9\u610f\u513f\u5bfc\u81f4\u5199\u51fa\u6765\u53c8\u957f\u53c8\u6162\u2026\u2026\n\n### Solution\n\n\u62ec\u53f7\u5339\u914d\u4e00\u822c\u90fd\u7528\u524d\u7f00\u548c\u6765\u7ef4\u62a4\u3002\u800c\u5728\u672c\u9898\uff0c\u95ee\u53f7\u7684\u51fa\u73b0\u662f\u7e41\u7410\u7684\uff0c\u4e8e\u662f\u4e0d\u59a8\u5c06\u5168\u90e8\u95ee\u53f7\u6539\u4e3a`)`\uff0c\u7b54\u6848\u7edf\u8ba1\u4e3a $\\sum b_i$\u3002\n\n\u8bb0`(`\u4e3a $1$\uff0c`)`\u4e3a$-1$\uff0c\u524d\u7f00\u548c\u4e3a $s_{i}$\u3002\u904d\u5386\u4e00\u904d\u5b57\u7b26\u4e32\uff08\u4e3a\u4e86\u65b9\u4fbf\uff0c\u4e0b\u8868\u4ece $1$ \u5f00\u59cb\uff09\u3002\n\n\u5982\u679c $s_i<0$\uff0c\u5219\u8bf4\u660e\u53f3\u62ec\u53f7\u592a\u591a\u4e86\uff0c\u9700\u8981\u4e00\u4e2a\u5de6\u62ec\u53f7\u5339\u914d\u3002\u4e8e\u662f\u6211\u4eec\u5c31\u5728 $[1,i)$ \u7684\u8303\u56f4\u5185\u5bfb\u627e**\u6700\u5212\u7b97**\u7684`?`\u5c06\u5176\u4fee\u6539\u4e3a`(`\uff0c\u66f4\u65b0\u7b54\u6848\u5373\u53ef\u3002\u4fee\u6539\u7684\u65f6\u5019\uff0c\u4e5f\u7ef4\u62a4\u4e00\u4e0b\u524d\u7f00\u548c\u3002\u5176\u4e2d\uff0c**\u201c\u6700\u5212\u7b97\u201d** \u7684\u662f\u6307\uff0c$b_i-a_i$ \u6700\u5927\u7684\u4e00\u9879\u3002\n\n\u5bfb\u627e\u6700\u5212\u7b97\u7684\u53ef\u4ee5\u7528\u4f18\u5148\u961f\u5217\u7ef4\u62a4\u3002\n\n\u53e6\u5916\uff0c\u4e3a\u4e86\u4fee\u6539\u7ef4\u62a4\u65b9\u4fbf\uff0c\u7b14\u8005\u7528\u4e86\u7ebf\u6bb5\u6811\u800c\u4e0d\u662f\u524d\u7f00\u548c~~\u5e38\u6570\u504f\u5927~~\u3002\n\n\u81f3\u4e8e`-1`\uff0c\u53ea\u9700\u8981\u4fdd\u8bc1\u4ece\u5de6\u5f80\u53f3\u53f3\u62ec\u53f7\u6570\u76ee\u4e0d\u8d85\u8fc7\u5de6\u62ec\u53f7\uff0c\u4ece\u53f3\u5f80\u5de6\u5de6\u62ec\u53f7\u6570\u76ee\u4e0d\u8d85\u8fc7\u53f3\u62ec\u53f7\u5373\u53ef\u3002\n\n\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n### Notice\n\n- \u4e3a\u4e86\u65b9\u4fbf\uff0c\u53ef\u4ee5\u5728\u5b57\u7b26\u4e32\u9996\u52a0\u4e00\u4e2a\u5b57\u7b26\uff0c\u4f7f\u5f97\u4ece $1$ \u5f00\u59cb\u904d\u5386\u3002\n\n- \u8bbf\u95ee\u5806\u9876\u65f6\u4e00\u5b9a\u8981\u5224\u65ad\u662f\u5426\u4e3a\u7a7a\uff0c\u907f\u514d RE\u3002\n\n### Code\n\n\u867d\u7136\u957f\uff0c\u4f46\u662f\u597d\u5199\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<string>\n#include<cstring>\n#include<queue>\nusing namespace std;\n\ntypedef long long ll;\ntypedef const int cint;\nconst int MAXN=5e4+5;\nstring s;\nint n;\nbool f[MAXN];\nint sum[MAXN];\nll ans;\nstruct node\n{\n\tint a,b,id;\n\tbool operator<(const node x)const\n\t{\n\t\tif(b-a!=x.b-x.a)\n\t\t return (b-a)<(x.b-x.a);//\u6ce8\u610f\u7ef4\u62a4\u6700\u5212\u7b97\u7684\n\t\treturn id>x.id;\n\t}\n}a[MAXN];\nclass segment_tree//\u6a21\u677f\n{\nprivate:\n\t#define mid ((tree[cur].l+tree[cur].r)>>1)\n\t#define lson (mid<<1)\n\t#define rson (mid<<1|1)\n\tstruct node\n\t{\n\t\tint l,r,val;\n\t}tree[MAXN<<2];//\u5c0f\u7ec6\u8282\n\tvoid pushup(cint cur)\n\t{\n\t\ttree[cur].val=tree[lson].val+tree[rson].val;\n\t}\n\tinline int trans(const char ch)\n\t{\n\t\tif(ch=='(')\treturn 1;\n\t\tif(ch==')')\treturn -1;\n\t\treturn 0;\n\t}\npublic:\n\tvoid build(cint cur,cint l,cint r)\n\t{\n\t\ttree[cur].l=l;tree[cur].r=r;\n\t\tif(l==r)\n\t\t{\n\t\t\ttree[cur].val=trans(s[l]);\n\t\t\treturn;\n\t\t}\n\t\tbuild(lson,l,mid);\n\t\tbuild(rson,mid+1,r);\n\t\tpushup(cur);\n\t}\n\tvoid modify(cint cur,cint pos,const char ch)\n\t{\n\t\tif(tree[cur].l==pos && tree[cur].r==pos)\n\t\t{\n\t\t\ttree[cur].val=trans(ch);\n\t\t\treturn;\n\t\t}\n\t\tif(pos<=mid)\tmodify(lson,pos,ch);\n\t\telse\t\t\tmodify(rson,pos,ch);\n\t\tpushup(cur);\n\t}\n\tint query(cint cur,cint l,cint r)\n\t{\n\t\tif(l<=tree[cur].l && tree[cur].r<=r)\n\t\t return tree[cur].val;\n\t\tint res=0;\n\t\tif(l<=mid)\tres+=query(lson,l,r);\n\t\tif(mid<r)\tres+=query(rson,l,r);\n\t\treturn res;\n\t}\n\tvoid clear(void)\n\t{\n\t\tmemset(tree,0,sizeof(tree));\n\t}\n}t;\n\nvoid solve(void)\n{\n\tfor(int i=1;i<=n;i++)\n\t ans+=a[i].b;\n\tpriority_queue<node> q;\n\tfor(int i=1;i<=n;i++)//\u5168\u90e8\u4fee\u6539\u4e3a')'\n\t if(s[i]=='?')\n   {\n\t  f[i]=true;//\u6807\u8bb0\u95ee\u53f7\u4f4d\u7f6e\n\t  s[i]=')';\n   }\n\tt.build(1,1,n);//\u5148\u4fee\u6539\u540e\u5efa\u6811\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(f[i])//\u95ee\u53f7\u5c31\u5165\u961f\n\t\t q.push(a[i]);\n\t\tif(!q.empty() && t.query(1,1,i)<0)//\u5c0f\u5fc3 RE\n\t\t{\n\t\t\tcint tmp=q.top().id;q.pop();\n\t\t\ts[tmp]='(';\n\t\t\tt.modify(1,tmp,'(');\n\t\t\tans=ans-a[tmp].b+a[tmp].a;\n\t\t}\n\t}\n}\n\nvoid output(void)\n{\n\tfor(int i=1;i<=n;i++)\n\t if(t.query(1,1,i)<0)\n\t {\n\t  \tcout<<-1<<endl;\n\t  \treturn;\n\t }\n\tfor(int i=n;i>=1;i--)\n\t if(t.query(1,i,n)>0)\n\t {\n\t \tcout<<-1<<endl;\n\t \treturn;\n\t }\n\tcout<<ans<<endl<<s<<endl;\n}\n\nint main()\n{\n\tios::sync_with_stdio(false);\n\tcin>>s;s=' '+s;\n\tn=s.size()-1;\n\tfor(int i=1;i<=n;i++)\n\t if(s[i]=='?')\n\t {\n\t \tcin>>a[i].a>>a[i].b;\n\t \ta[i].id=i;\n\t }\n\tsolve();\n\toutput();\n\treturn 0;\n}\n```",
        "postTime": 1600692824,
        "uid": 80049,
        "name": "Hexarhy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF3D \u3010Least Cost Bracket Sequence\u3011"
    },
    {
        "content": "[\u535a\u5ba2\u98df\u7528\u6548\u679c\u66f4\u4f73](https://www.cnblogs.com/lxy-2022/p/CF2600-zuo-ti-ji-lu.html)\n#### \u9898\u610f\n\n\u4e00\u4e2a\u62ec\u53f7\u5e8f\u5217\uff0c\u5176\u4e2d\u6709\u51e0\u4f4d\u4e3a `?`\uff0c\u5c06\u7b2c $i$ \u4e2a `?` \u4fee\u6539\u4e3a `(` \u7684\u4ee3\u4ef7\u662f $a_i$\uff0c\u4fee\u6539\u4e3a `)` \u7684\u4ee3\u4ef7\u662f $b_i$\uff0c\u95ee\u5c06\u6240\u6709 `?` \u4fee\u6539\u540e\u4f7f\u5f97\u5e8f\u5217\u5339\u914d\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\n\n#### \u5206\u6790\n\n\u8d2a\u5fc3\u3002\u53d1\u73b0\u4e00\u4e2a\u5339\u914d\u7684\u62ec\u53f7\u5e8f\u5217\u7684\u6bcf\u4e00\u4e2a\u524d\u7f00\u7684\u5de6\u62ec\u53f7\u6570\u4e00\u5b9a\u4e0d\u5c0f\u4e8e\u53f3\u62ec\u53f7\u6570\uff0c\u56e0\u6b64\u5148\u628a\u95ee\u53f7\u90fd\u66ff\u6362\u6210\u53f3\u62ec\u53f7\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4f4d\u5224\u65ad\u4e00\u4e0b\uff0c\u5982\u679c\u5230\u8fd9\u4e00\u4f4d\u65f6\u53f3\u62ec\u53f7\u6570\u5927\u4e8e\u5de6\u62ec\u53f7\u6570\uff0c\u5c31\u628a\u524d\u9762\u53f3\u6362\u5de6\u4ee3\u4ef7\u6700\u5c0f\u7684\u4e00\u4f4d\u66ff\u6362\u6210\u5de6\u3002\u8fd9\u6837\u4e00\u5b9a\u662f\u6b63\u786e\u7684\uff0c\u56e0\u4e3a\u524d\u9762\u5982\u679c\u5de6\u62ec\u53f7\u591a\u4e86\u540e\u9762\u8fd8\u80fd\u8865\u6551\uff0c\u4f46\u662f\u53f3\u62ec\u53f7\u591a\u4e86\u524d\u9762\u5c31\u4e0d\u80fd\u5b8c\u5168\u5339\u914d\u4e86\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u4ece\u524d\u5f80\u540e\u626b\uff0c\u9047\u5230\u4e00\u4e2a\u95ee\u53f7\u5c31\u6362\u6210\u53f3\u62ec\u53f7\uff0c\u5e76\u628a\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u4e0b\u6807\u548c\u53f3\u6362\u5de6\u7684\u4ee3\u4ef7\u4e00\u8d77\u6254\u5230\u4e00\u4e2a\u5c0f\u6839\u5806\u91cc\uff0c\u5982\u679c\u53f3\u62ec\u53f7\u591a\u4e86\u5c31\u53d6\u51fa\u5806\u9876\u6362\u6210\u5de6\u62ec\u53f7\u3002\n\n#### \u6838\u5fc3\u4ee3\u7801\n```cpp\npriority_queue<Pair,vector<Pair>,greater<Pair> >q;\nsigned main(){\n    scanf(\"%s\",s+1);n=strlen(s+1);int i,j,cnt=0;\n    for(i=1;i<=n;i++) if(s[i]=='?') m++,mp[i]=++mp[0];for(i=1;i<=m;i++) qread(a[i],b[i]);\n    for(i=1;i<=n;i++){\n        if(s[i]=='(') cnt++,t[i]=s[i];if(s[i]==')') cnt--,t[i]=s[i];\n        if(s[i]=='?'){\n            t[i]=')';q.push(Pair(a[mp[i]]-b[mp[i]],i));cnt--;ans+=b[mp[i]];\n        }if(cnt<0){\n            if(q.empty()) return printf(\"-1\\n\"),0;\n            auto u=q.top();q.pop();t[u.second]='(';cnt+=2;\n            // cout<<u.first<<\" \"<<u.second<<endl;\n            ans+=u.first;\n        }\n    }if(cnt) return printf(\"-1\\n\"),0;\n    printf(\"%lld\\n%s\\n\",ans,t+1);\n    return 0;\n}\n```",
        "postTime": 1662865404,
        "uid": 225991,
        "name": "_lxy_",
        "ccfLevel": 6,
        "title": "CF3D Least Cost Bracket Sequence \u9898\u89e3"
    }
]