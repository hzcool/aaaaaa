[
    {
        "content": "### \u9898\u610f\n- \u7ed9\u5b9a$n$\u4e2a\u7ea2\u70b9\u548c$m$\u4e2a\u84dd\u70b9\uff0c\u6c42\u6ee1\u8db3\u6761\u4ef6\u7684\u4e09\u89d2\u5f62\u4e2a\u6570\uff0c\u4f7f\u5f97\u4ed6\u7684\u9876\u70b9\u662f$3$\u4e2a\u7ea2\u70b9\uff0c\u4e14\u6ca1\u6709\u4efb\u4f55\u4e00\u4e2a\u84dd\u70b9\u5728\u5176\u5185\u90e8\u3002\n\n### \u601d\u8def\n- \u6211\u4eec\u8003\u8651\u600e\u6837\u7684\u4e09\u89d2\u5f62\u6ee1\u8db3\u6761\u4ef6:\u753b\u56fe\u53ef\u4ee5\u53d1\u73b0 \u5982\u679c\u4e00\u4e2a\u70b9\u4f4d\u4e8e\u4e09\u89d2\u5f62\u7684\u5185\u90e8\uff0c\u90a3\u4e48\u5bf9\u4e8e\u9006\u65f6\u9488\u904d\u5386\u6709\u5411\u76f4\u7ebf\uff0c\u8be5\u70b9\u603b\u662f\u843d\u5728\u5de6\u8fb9\u3002\u53cd\u4e4b\uff0c\u5982\u679c\u987a\u65f6\u9488\u904d\u5386\uff0c\u4e00\u5b9a\u90fd\u843d\u5728\u53f3\u8fb9\u3002\n\n- \u4e8e\u662f\u6211\u4eec\u5c31\u60f3\u5230\u4e86\u65b9\u6cd5\uff1a$f[i][j]$\u4e3a\u4ee5$i$,$j$\u4e3a\u9876\u70b9\u7684\u8fb9\u7684\u8ba1\u6570\u6570\u7ec4\uff0c\u82e5\u4e00\u4e2a\u70b9\u5728\u6b64\u8fb9\u5de6\u8fb9\u5219$++1$,\u5728\u53f3\u8fb9\u4e0d\u53d8\uff0c\u4ee5\u6b64\u65b9\u6cd5\u904d\u5386\u6240\u6709\u70b9\uff0c\u5f53\u4e14\u4ec5\u5f53\u904d\u5386\u5230$f[i][j]+f[j][k]==f[i][k]$\u6211\u4eec\u5c31$ans++$\u3002\n\n- \u95ee\u9898\u6765\u4e86\uff0c\u5982\u4f55\u5224\u65ad\u4e00\u4e2a\u70b9\u5728\u6b64\u8fb9\u5de6\u8fb9\uff1f\u8fd9\u91cc\u63a8\u8350\u4e00\u4e2a\u65b9\u6cd5 $To-left$\u65b9\u6cd5\uff0c\u8fd9\u91cc\u5927\u5bb6\u53ef\u4ee5\u81ea\u884c\u767e\u5ea6\uff08\u8bb0\u677f\u5b50\uff09\uff0c\u6211\u5c31\u4e0d\u8d58\u8ff0\u4e86\u3002\n\n$Ps:$$code$\u5341\u5206\u7b80\u6d01\uff0c\u56e0\u8be5\u770b\u5f97\u61c2\u53ed$qwq$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}\n\treturn x*f;\n}\nconst int N=1e3+5;int f[N][N];\nstruct node{long long x,y;}a[N],b[N];\nbool cmp(node x,node y){return x.y<y.y;}\nlong long area(node a,node b,node c){\n  return a.x*b.y-a.y*b.x+b.x*c.y-b.y*c.x+c.x*a.y-c.y*a.x;\n}\nbool toleft(node a,node b,node c){\n  if(c.y<=a.y || c.y>b.y) return 0;\n  return area(a,b,c)>0;\n}\nint n,m;\nint main(){\n\tcin>>n>>m;\n    for(int i=1;i<=n;++i)  scanf(\"%lld%lld\",&a[i].x,&a[i].y);\n    for(int i=1;i<=m;++i)  scanf(\"%lld%lld\",&b[i].x,&b[i].y);\n    sort(a+1,a+n+1,cmp);int ans=0;\n    for(int i=1;i<n;++i)\n      for(int j=i+1;j<=n;++j)\n        for(int k=1;k<=m;++k)\n          if(toleft(a[i],a[j],b[k])) f[i][j]++;\n    for(int i=1;i<n;++i)\n      for(int j=i+1;j<n;++j)\n        for(int k=j+1;k<=n;++k)\n          if(f[i][j]+f[j][k]==f[i][k]) ans++;\n    printf(\"%d\\n\",ans); \n    return 0;\n}\n\n```\n",
        "postTime": 1601383312,
        "uid": 195332,
        "name": "demon_yao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF13D \u3010Triangles\u3011"
    },
    {
        "content": "\u66f4\u597d\u98df\u7528 \n[mimimi](https://www.cnblogs.com/PiCaHor/p/9750204.html)\n#Describtion \n\nLittle Petya likes to draw. He drew N red and M blue points on the plane in such a way that no three points lie on the same line. Now he wonders what is the number of distinct triangles with vertices in red points which do not contain any blue point inside.\n\n#Input\n\nThe first line contains two non-negative integer numbers N and M (0\u2009\u2264\u2009N\u2009\u2264\u2009500, 0\u2009\u2264\u2009M\u2009\u2264\u2009500) \u2014 the number of red and blue points respectively. The following N lines contain two integer numbers each \u2014 coordinates of red points. The following M lines contain two integer numbers each \u2014 coordinates of blue points. All coordinates do not exceed 109 by absolute value.\n\n#Output\n\nOutput one integer \u2014 the number of distinct triangles with vertices in red points which do not contain any blue point inside.\n\n#Examples\ninput\n4 1\n0 0\n10 0\n10 10\n5 4\n2 1\noutput\n2\ninput\n5 5\n5 10\n6 1\n8 6\n-6 -7\n7 -1\n5 -1\n10 -4\n-10 -8\n-10 5\n-2 -8\noutput\n7 \n\n#Translation \n\n\u7ed9\u5b9a\u5e73\u9762n\u4e2a\u7ea2\u70b9\uff0cm\u4e2a\u84dd\u70b9\uff0c\u6c42\u4e09\u4e2a\u9876\u70b9\u7531\u7ea2\u8272\u6784\u6210\u7684\u4e14\u5185\u90e8\u6ca1\u6709\u84dd\u70b9\u7684\u4e09\u89d2\u5f62\u4e2a\u6570\u3002 \n\n##\u5206\u6790 \n\u6309y\u5750\u6807\u5347\u5e8f\u6392\u5e8f \n\u8fd9\u9053\u660e\u663e\u662f\u89e3\u6790\u51e0\u4f55\u7684\u9898 \n\u770b\u5982\u56fe\n![](https://img2018.cnblogs.com/blog/1502976/201810/1502976-20181007151010754-1908206250.png)\n\u5bf9\u4e8e\u4e00\u4e2a\u5408\u6cd5\u7684\u4e09\u89d2\u5f62\uff0c\u90a3\u4e48\u8fd9\u4e09\u6761\u8fb9\u7684toleft\u6d4b\u8bd5\u7684\u70b9\u6570\u4e00\u5b9a\u662f\u4e00\u6837\u7684\uff08\u51fa\u53bb\u4e0a\u4e0b\u90e8\uff09 \n\u6240\u4ee5\u6211\u4eec\u53ea\u7528\u679a\u4e3e\u8fb9\u7edf\u8ba1\u8be5\u8fb9\u7684\u6709\u591a\u5c11\u7684\u84dd\u70b9\u5728\u5de6\u4fa7 \n\u7136\u540e\u679a\u4e3e\u4e09\u89d2\u5f62\u7684\u4e09\u8fb9\uff0c\u770b\u4e09\u8fb9\u5de6\u8fb9\u7535\u89c6\u662f\u5426\u4e00\u6837\uff0c\u5982\u679c\u4e00\u6837\uff0c\u90a3\u4e48\u4e00\u5b9a\u53ef\u4ee5\u5f62\u6210\u4e09\u89d2\u5f62\n\u65f6\u95f4\u590d\u6742\u5ea6O\uff08n^3\uff09;  \n\n\u5176\u4e2dToLeft Text \uff08\u53c9\u79ef\uff09\u8be6\u89c1 \n[\u89e3\u6790\u51e0\u4f55\u5b66\u4e60\u7b14\u8bb0](https://www.cnblogs.com/PiCaHor/p/9745919.html) \n\n#\u4ee3\u7801 \n```cpp  \n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 550;\nint n,m,f[N][N],ans;\n\nstruct point\n{\n  long long x,y;\n  bool operator < (const point &a) const\n  {\n    return y<a.y;\n  }\n} red[N],bl[N];\n\ninline long long area(point a,point b,point c)\n{\n  return a.x*b.y-a.y*b.x+b.x*c.y-b.y*c.x+c.x*a.y-c.y*a.x;\n}\n\ninline bool toleft(point a,point b,point c)\n{\n  if(c.y<=a.y || c.y>b.y) return 0;\n  return area(a,b,c)>0;\n}\n\nint main()\n{\n  scanf(\"%d%d\",&n,&m);\n  for(int i=1; i<=n; ++i)  scanf(\"%lld%lld\",&red[i].x,&red[i].y);\n  for(int i=1; i<=m; ++i)  scanf(\"%lld%lld\",&bl[i].x,&bl[i].y);\n  sort(red+1,red+1+n);\n  for(int i=1; i<n; ++i)\n    for(int j=i+1; j<=n; ++j)\n      for(int k=1; k<=m; ++k)\n        if(toleft(red[i],red[j],bl[k]))\n          f[i][j]++;\n  for(int i=1; i<n; ++i)\n    for(int j=i+1; j<n; ++j)\n      for(int k=j+1; k<=n; ++k)\n        if(f[i][j]+f[j][k]==f[i][k])\n          ans++;\n  printf(\"%d\\n\",ans);\n  return 0;\n}\n\n```",
        "postTime": 1538896717,
        "uid": 42727,
        "name": "PiCaHor",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF13D \u3010Triangles\u3011"
    },
    {
        "content": "\n\u7ed9\u4e2a\u6709\u56fe\u7684\u9898\u89e3\u3002\n\n[\u5e7f\u544a](https://www.luogu.com.cn/blog/JSYZCHTHOLLY/)\n\n---\n### \u89e3\u9898\u601d\u8def\uff1a\n\n$n$ \u662f $500$ \u7684\uff0c\u8003\u8651\u7528\u4e00\u79cd $O(n^3)$ \u6216\u8005\u4ee5\u4e0b\u7684\u7b97\u6cd5\u8ba1\u7b97\u7ed3\u679c\u3002\n\n\u53d1\u73b0\u5176\u5b9e\u60f3\u8981\u4e0d\u679a\u4e3e\u4e09\u89d2\u5f62\u7684\u4e09\u8fb9\u76f4\u63a5\u8ba1\u7b97\u6ee1\u8db3\u6761\u4ef6\u7684\u4e09\u89d2\u5f62\u5e76\u4e0d\u7b80\u5355\uff0c\u6b64\u65f6\u4ec5\u4ec5\u662f\u679a\u4e3e\u4e09\u4e2a\u70b9\u5c31\u5df2\u7ecf\u662f $O(n^3)$ \u7684\u4e86\uff0c\u6240\u4ee5\u5c1d\u8bd5\u5728\u5224\u65ad\u4e0a\u4f18\u5316\uff0c\u8981\u6c42\u4f18\u5316\u5230 $O(1)$\u3002\n\n\u8fd9\u91cc\u6211\u4eec\u4e0d\u4ece\u70b9\u800c\u4ece\u8fb9\u5165\u624b\uff0c\u56e0\u4e3a\u4e00\u4e2a\u70b9\u5728\u548c\u5176\u4ed6\u7684\u70b9\u8fdb\u884c\u642d\u914d\u65f6\u627e\u5230\u4e0d\u53d8\u91cf\u662f\u6bd4\u8f83\u56f0\u96be\u7684\uff0c\u800c\u8fb9\u5219\u76f8\u5bf9\u56fa\u5b9a\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/qhr04ds3.png)\n\n\u5165\u56fe\uff0c\u5df2\u77e5\u4e09\u89d2\u5f62\u548c\u4e24\u4e2a\u70b9\uff0c\u8003\u8651\u5982\u4f55\u5224\u65ad\u4e00\u4e2a\u70b9\u662f\u5426\u5728\u4e09\u89d2\u5f62\u5185\u3002\u5bf9\u4e8e\u6bcf\u4e00\u6761\u8fb9\uff0c\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u6240\u6709\u7684\u5728\u4e24\u7aef\u70b9\u4e4b\u95f4\uff08\u8fd9\u91cc\u6307\u8fc7\u8be5\u70b9\u4f5c $x$ \u8f74\u7684\u5e73\u884c\u7ebf\uff0c\u5728\u4e24\u5e73\u884c\u7ebf\u4e4b\u95f4\uff0c\u4e0a\u5f00\u4e0b\u95ed\u6216\u8005\u4e0a\u95ed\u4e0b\u5f00\u90fd\u884c\uff09\u4e14\u5728\u8fd9\u6761\u8fb9\u7684\u5de6\u8fb9\u6216\u8005\u53f3\u8fb9\u7684\u70b9\u7684\u6570\u91cf\u3002\n\n\u5982\u679c\u6ca1\u6709\u70b9\u5728\u4e09\u89d2\u5f62\u5185\u90e8\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u5728 $y$ \u65b9\u5411\u4e0a\u8de8\u5ea6\u6700\u5927\u4e00\u6761\u8fb9\u6070\u597d\u7edf\u8ba1\u4e86\u5176\u4ed6\u7684\u4e24\u6761\u8fb9\u6240\u6709\u70b9\uff0c\u53cd\u4e4b\u5219\u4e00\u5b9a\u6709\u4e00\u4e9b\u70b9\u591a\u7edf\u8ba1\u6216\u8005\u5c11\u7edf\u8ba1\uff08\u8fd9\u4e2a\u53d6\u51b3\u4e8e\u4e09\u89d2\u5f62\u7684\u5f62\u72b6\u548c\u7edf\u8ba1\u65b9\u5411\uff0c\u4e0e\u70b9\u65e0\u5173\uff09\u3002\n\n\u90a3\u4e48\u5c31\u73c2\u4ee5\u6839\u636e\u8fd9\u4e2a\u6765\u8fdb\u884c\u5224\u65ad\u4e86\uff0c\u5982\u679c\u5c06\u4e24\u6761\u8de8\u5ea6\u8f83\u5c0f\u7684\u8fb9\u7684\u5de6\u8fb9\uff08\u6216\u53f3\u8fb9\uff09\u7684\u70b9\u76f8\u52a0\u6070\u597d\u7b49\u4e8e\u8de8\u5ea6\u8f83\u5927\u7684\u4e00\u6761\u8fb9\u7684\u5de6\u8fb9\uff08\u6216\u53f3\u8fb9\uff09\u7684\u70b9\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4e09\u89d2\u5f62\u4e00\u5b9a\u662f\u6ca1\u6709\u4efb\u4f55\u70b9\u5728\u4e09\u89d2\u5f62\u5185\u7684\uff0c\u4e5f\u5c31\u662f\u7b26\u5408\u6761\u4ef6\u3002\u53cd\u4e4b\u4e00\u5b9a\u4e0d\u7b26\u5408\u3002\n\n---\n\n\u7136\u540e\u8003\u8651\u5982\u4f55\u5224\u65ad\u4e00\u4e2a\u70b9\u662f\u5426\u5728\u4e00\u6761\u8fb9\u7684\u5de6\u8fb9\u6216\u8005\u53f3\u8fb9\uff0c\u9996\u5148\u5c06\u7eb5\u5750\u6807\u8d85\u51fa\u4e24\u7aef\u70b9\u8303\u56f4\u7684\u70b9\u6392\u9664\uff08\u4e5f\u5c31\u662f\u90a3\u4e2a\u5e73\u884c\u7ebf\u4e4b\u5916\u7684\u70b9\uff09\u3002\u7136\u540e\u5c31\u53ea\u6709\u4e24\u79cd\u60c5\u51b5\u4e86\uff08\u9898\u76ee\u4fdd\u8bc1\u4e0d\u5b58\u5728\u5171\u7ebf\uff09\u3002\n\n\u63a5\u4e0b\u6765\u7684\u5224\u65ad\u4e00\u5171\u6709\u4e24\u79cd\u65b9\u6cd5\uff0c\u4e00\u79cd\u662f\u7528\u53c9\u79ef\uff0c\u8fd9\u4e00\u79cd\u76f8\u5bf9\u7b80\u5355\uff0c\u4f46\u662f\u5982\u679c\u6ca1\u6709\u63a5\u89e6\u8fc7\u53c9\u79ef\u5462\uff1f\n\n\u5176\u5b9e\u4e00\u6b21\u51fd\u6570\uff08\u89e3\u6790\u51e0\u4f55\u76f8\u5173\uff09\u7684\u77e5\u8bc6\u5c31\u8db3\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u4e86\u3002\n\n\u8fc7\u8981\u6c42\u7684\u90a3\u4e2a\u70b9\u4f5c $x$ \u8f74\u7684\u5e73\u884c\u7ebf\uff0c\u6c42\u51fa\u8fd9\u4e2a\u70b9\u4e0e\u521a\u624d\u90a3\u6761\u8fb9\u7684\u4ea4\u70b9\uff08\u6839\u636e\u4e0a\u9762\u7684\u5224\u65ad\uff0c\u663e\u7136\u53ef\u4ee5\u8bc1\u660e\uff0c\u8fd9\u91cc\u4e00\u5b9a\u6709\u4ea4\u70b9\uff09\uff0c\u7136\u540e\u6bd4\u8f83\u8fd9\u4e24\u4e2a\u70b9\u7684\u6a2a\u5750\u6807\u5c31\u884c\u4e86\u3002\n\n---\n\n\u5177\u4f53\u5b9e\u73b0\u4e0a\uff0c\u73c2\u4ee5\u5148\u5c06\u6240\u6709\u7684\u70b9\u6309\u7167 $y$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7136\u540e\u76f4\u63a5\u901a\u8fc7\u6570\u7ec4\u4f4d\u7f6e\u5173\u7cfb\u5224\u65ad\u90a3\u4e00\u4e2a\u662f $y$ \u4e0a\u8de8\u5ea6\u5728\u6700\u5927\u7684\u3002\n\n---\n### \u4ee3\u7801\uff1a\n\n#### \u53c9\u79ef\u5224\u65ad\u6cd5\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nstruct str{\n\tlong long x,y;\n\tbool operator <(str a){\n\t\treturn y<a.y;\n\t}\n}r[505],b[505];\nlong long n,m;\nint ans,f[505][505];\nbool CHECK(long long x1,long long y1,long long x2,long long y2){\n\treturn x1*y2-x2*y1>0;\n}\nbool check(str a,str b,str c){//\u53c9\u79ef\u5224\u65ad\u6cd5 \n\tif(c.y<a.y||c.y>=b.y)return 0;\n\treturn CHECK(c.x-a.x,c.y-a.y,b.x-a.x,b.y-a.y);\n}\nint main(){\n\tscanf(\"%I64d%I64d\",&n,&m);\n\tfor(int i=1;i<=n;i++)scanf(\"%I64d%I64d\",&r[i].x,&r[i].y);\n\tfor(int i=1;i<=m;i++)scanf(\"%I64d%I64d\",&b[i].x,&b[i].y);\n\tsort(r+1,r+n+1);\n\tsort(b+1,b+m+1);\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=i+1;j<=n;j++)\n\tfor(int k=1;k<=m;k++)\n\tf[i][j]+=check(r[i],r[j],b[k]);\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=i+1;j<=n;j++)\n\tfor(int k=j+1;k<=n;k++)\n\tans+=(f[i][j]+f[j][k]==f[i][k]);\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\n#### \u51fd\u6570\u5224\u65ad\u6cd5\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nstruct str{\n\tlong long x,y;\n\tbool operator <(str a){\n\t\treturn y<a.y;\n\t}\n}r[505],b[505];\nlong long n,m;\nint ans,f[505][505];\nbool CHECK(long long x1,long long y1,long long x2,long long y2,long long x,long long y){\n\treturn (double)x<((double)x1+((((double)y-(double)y1)*((double)x1-(double)x2))/((double)y1-(double)y2)));\n}\nbool check(str a,str b,str c){//\u4e00\u6b21\u51fd\u6570\u5224\u65ad\u6cd5 \n\tif(c.y<a.y||c.y>=b.y)return 0;\n\treturn CHECK(a.x,a.y,b.x,b.y,c.x,c.y);\n}\nint main(){\n\tscanf(\"%I64d%I64d\",&n,&m);\n\tfor(int i=1;i<=n;i++)scanf(\"%I64d%I64d\",&r[i].x,&r[i].y);\n\tfor(int i=1;i<=m;i++)scanf(\"%I64d%I64d\",&b[i].x,&b[i].y);\n\tsort(r+1,r+n+1);\n\tsort(b+1,b+m+1);\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=i+1;j<=n;j++)\n\tfor(int k=1;k<=m;k++)\n\tf[i][j]+=check(r[i],r[j],b[k]);\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=i+1;j<=n;j++)\n\tfor(int k=j+1;k<=n;k++)\n\tans+=(f[i][j]+f[j][k]==f[i][k]);\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1636167374,
        "uid": 223559,
        "name": "qxp101",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF13D Triangles"
    }
]