[
    {
        "content": "# CF771D Bear and Company\n\n\u663e\u7136\u5728\u672c\u9898\u91cc\uff0c\u9664 $\\texttt{V}$, $\\texttt{K}$ \u5916\u7684\u5176\u4ed6\u5b57\u7b26\u90fd\u662f\u7b49\u4ef7\u7684\uff0c\u4e0d\u59a8\u5c06\u5b83\u4eec\u5168\u90fd\u770b\u505a $\\texttt{C}$\u3002\u4e8e\u662f\u4e32\u91cc\u5c31\u53ea\u5269 $\\texttt{V}$, $\\texttt{K}$, $\\texttt{C}$ \u4e09\u79cd\u5b57\u7b26\u3002\n\n\u540c\u65f6\u5bb9\u6613\u53d1\u73b0\uff0c\u6bcf\u79cd\u5b57\u7b26\u5185\u90e8\u7684\u76f8\u5bf9\u987a\u5e8f\u81ea\u59cb\u81f3\u7ec8\u4e0d\u4f1a\u6539\u53d8\uff0c\u56e0\u4e3a\u4ea4\u6362\u76f8\u540c\u7684\u5b57\u7b26\u540e\uff0c\u4e32\u4e0d\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u8fd8\u767d\u767d\u6d6a\u8d39\u4e00\u6b21\u64cd\u4f5c\u3002\n\n\u5982\u679c\u786e\u5b9a\u4e86\u4e00\u4e2a\u7ed3\u679c\u4e32\uff0c\u90a3\u4e48\u4ece\u539f\u4e32\u5230\u7ed3\u679c\u4e32\u7684\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\u5c31\u53ef\u4ee5\u88ab\u6c42\u51fa\u6765\u3002\u56e0\u4e3a\u6839\u636e\u201c\u540c\u79cd\u5b57\u7b26\u76f8\u5bf9\u987a\u5e8f\u4e0d\u53d8\u201d\u7684\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u539f\u4e32\u91cc\u6bcf\u4e2a\u5b57\u7b26\uff0c\u8981\u79fb\u52a8\u5230\u65b0\u4e32\u91cc\u4ec0\u4e48\u4f4d\u7f6e\u3002\u4e8e\u662f\u76f8\u5f53\u4e8e\u7ed9\u4e00\u4e2a\u6392\u5217\u505a\u5192\u6ce1\u6392\u5e8f\uff0c\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\u5c31\u662f\u8fd9\u4e2a\u6392\u5217\u7684\u9006\u5e8f\u5bf9\u6570\u3002\n\n\u95ee\u9898\u8f6c\u5316\u4e3a\uff0c\u6c42\u4e00\u4e2a\u6240\u9700\u64cd\u4f5c\u6b21\u6570\u6700\u5c0f\u7684\u3001\u5408\u6cd5\u7684\u7ed3\u679c\u4e32\u3002\u7528 DP \u6765\u6784\u9020\u8fd9\u4e2a\u7ed3\u679c\u4e32\u3002\u8bbe $\\text{dp}(i,j,k,t)$ \u8868\u793a\u8003\u8651\u4e86\u7ed3\u679c\u4e32\u7684\u524d $i+j+k$ \u4e2a\u5b57\u7b26\uff0c\u5176\u4e2d\u6709 $i$ \u4e2a $\\texttt{C}$\uff0c$j$ \u4e2a $\\texttt{V}$\uff0c$k$ \u4e2a $\\texttt{K}$\uff0c\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u662f $t$ \u65f6\uff0c\u8fd9\u524d $i+j+k$ \u4e2a\u5b57\u7b26\u5185\u90e8\u8d21\u732e\u7684\u9006\u5e8f\u5bf9\u6570\uff08\u4e5f\u5c31\u662f\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\uff09\u3002\n\n\u8f6c\u79fb\u65f6\uff0c\u6211\u4eec\u679a\u4e3e\u4e0b\u4e00\u4f4d\u662f\u4ec0\u4e48\u3002\u4e3a\u4e86\u4fdd\u8bc1\u5408\u6cd5\uff0c\u5f53 $t = \\texttt{V}$ \u65f6\uff0c\u4e0b\u4e00\u4e2a\u5b57\u7b26\u4e0d\u80fd\u662f $\\texttt{K}$\u3002\u8f6c\u79fb\u7684\u4ee3\u4ef7\u5c31\u662f\u524d $i+j+k$ \u4e2a\u5b57\u7b26\u4e0e\u65b0\u5b57\u7b26\u6784\u6210\u7684\u9006\u5e8f\u5bf9\u6570\uff0c\u5373\u524d\u9762\u6709\u591a\u5c11\u4e2a\u5728\u539f\u4e32\u91cc\u51fa\u73b0\u4f4d\u7f6e $ > $ \u65b0\u5b57\u7b26\u5728\u539f\u4e32\u91cc\u51fa\u73b0\u4f4d\u7f6e\u7684\u5b57\u7b26\u3002\u8fd9\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u6765\uff0c\u9884\u5904\u7406\u7684\u590d\u6742\u5ea6\u663e\u7136\u4f4e\u4e8e $O(n^3)$\u3002DP \u590d\u6742\u5ea6\u4e3a $O(n^3)$\uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^3)$\u3002\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n// problem: CF771D\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define pb push_back\n#define mk make_pair\n#define lob lower_bound\n#define upb upper_bound\n#define fi first\n#define se second\n#define SZ(x) ((int)(x).size())\n\ntypedef unsigned int uint;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int, int> pii;\n\ntemplate<typename T> inline void ckmax(T& x, T y) { x = (y > x ? y : x); }\ntemplate<typename T> inline void ckmin(T& x, T y) { x = (y < x ? y : x); }\n\nconst int MAXN = 75;\nconst int INF = 1e9;\nint n;\nchar s[MAXN + 5];\nint pos_c[MAXN + 5], pos_v[MAXN + 5], pos_k[MAXN + 5], cnt_c, cnt_v, cnt_k;\nint cost_c[MAXN + 5][MAXN + 5], cost_v[MAXN + 5][MAXN + 5], cost_k[MAXN + 5][MAXN + 5];\nint dp[MAXN + 5][MAXN + 5][MAXN + 5][3];\n\nvoid init_cost() {\n\tfor (int i = 1; i <= n; ++i) {\n\t\tfor (int j = 1; j <= cnt_c; ++j) {\n\t\t\t// \u524d j \u4e2a c \u4e2d, \u6709\u591a\u5c11 > i\n\t\t\tcost_c[i][j] = cost_c[i][j - 1] + (pos_c[j] > i);\n\t\t}\n\t}\n\tfor (int i = 1; i <= n; ++i) {\n\t\tfor (int j = 1; j <= cnt_v; ++j) {\n\t\t\tcost_v[i][j] = cost_v[i][j - 1] + (pos_v[j] > i);\n\t\t}\n\t}\n\tfor (int i = 1; i <= n; ++i) {\n\t\tfor (int j = 1; j <= cnt_k; ++j) {\n\t\t\tcost_k[i][j] = cost_k[i][j - 1] + (pos_k[j] > i);\n\t\t}\n\t}\n}\nvoid init_dp_value() {\n\tfor (int i = 0; i <= cnt_c; ++i) {\n\t\tfor (int j = 0; j <= cnt_v; ++j) {\n\t\t\tfor (int k = 0; k <= cnt_k; ++k) {\n\t\t\t\tfor (int t = 0; t < 3; ++t) {\n\t\t\t\t\tdp[i][j][k][t] = INF;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nint dp_work() {\n\tdp[0][0][0][0] = 0;\n\tfor (int i = 0; i <= cnt_c; ++i) {\n\t\tfor (int j = 0; j <= cnt_v; ++j) {\n\t\t\tfor (int k = 0; k <= cnt_k; ++k) {\n\t\t\t\tfor (int t = 0; t < 3; ++t) if (dp[i][j][k][t] != INF) {\n\t\t\t\t\tif (i < cnt_c) {\n\t\t\t\t\t\tckmin(dp[i + 1][j][k][0], dp[i][j][k][t] + cost_v[pos_c[i + 1]][j] + cost_k[pos_c[i + 1]][k]);\n\t\t\t\t\t}\n\t\t\t\t\tif (j < cnt_v) {\n\t\t\t\t\t\tckmin(dp[i][j + 1][k][1], dp[i][j][k][t] + cost_c[pos_v[j + 1]][i] + cost_k[pos_v[j + 1]][k]);\n\t\t\t\t\t}\n\t\t\t\t\tif (k < cnt_k && t != 1) {\n\t\t\t\t\t\tckmin(dp[i][j][k + 1][2], dp[i][j][k][t] + cost_c[pos_k[k + 1]][i] + cost_v[pos_k[k + 1]][j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tint ans = INF;\n\tfor (int t = 0; t < 3; ++t) ckmin(ans, dp[cnt_c][cnt_v][cnt_k][t]);\n\treturn ans;\n}\nint main() {\n\tcin >> n;\n\tcin >> (s + 1);\n\tfor (int i = 1; i <= n; ++i) {\n\t\tif (s[i] == 'V') {\n\t\t\tpos_v[++cnt_v] = i;\n\t\t} else if (s[i] == 'K') {\n\t\t\tpos_k[++cnt_k] = i;\n\t\t} else {\n\t\t\tpos_c[++cnt_c] = i;\n\t\t}\n\t}\n\t\n\tinit_cost();\n\tinit_dp_value();\n\tint ans = dp_work();\n\tcout << ans << endl;\n\treturn 0;\n}\n```\n\n\n\n\n\n\n\n",
        "postTime": 1606487659,
        "uid": 100674,
        "name": "duyi",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF771D \u3010Bear and Company\u3011"
    },
    {
        "content": "\u9898\u76ee\u5927\u610f\uff1a\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a $n(1 \\le n \\le 75)$ \u7684\u5b57\u7b26\u4e32\uff0c\u6bcf\u4e00\u6b65\u64cd\u4f5c\u4f60\u53ef\u4ee5\u4ea4\u6362\u5b57\u7b26\u4e32\u4e2d\u76f8\u90bb\u7684\u4e24\u4e2a\u5143\u7d20\u3002\u6c42\u6700\u5c11\u7684\u64cd\u4f5c\u6b65\u6570\uff0c\u4f7f\u5f97\u5b57\u7b26\u4e32\u4e2d\u4e0d\u5305\u542b\u5b50\u4e32 \u201cVK\u201d\u3002  \n\n\u89e3\u9898\u601d\u8def\uff1a  \n\n\u56e0\u4e3a\u9664\u4e86 'V' \u548c 'K' \u4ee5\u5916\u7684\u6240\u6709\u5b57\u7b26\u7684\u6548\u679c\u90fd\u662f\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u5176\u5b83\u7684\u5b57\u7b26\u90fd\u89c6\u4e3a 'X'\u3002  \n\n\u6211\u4eec\u4f1a\u4ece\u5de6\u5f80\u53f3\u4e00\u6b65\u6b65\u6784\u9020\u51fa\u6700\u7ec8\u7684\u5b57\u7b26\u4e32\u3002\u4ee4 $dp[v][k][x]$ \u8868\u793a\u6784\u9020\u4e00\u4e2a\u5305\u542b $v$ \u4e2a\u5b57\u7b26 'V'\uff0c$k$ \u4e2a\u5b57\u7b26 'K' \u4ee5\u53ca $x$ \u4e2a\u5b57\u7b26 'X' \u7684\u5b57\u7b26\u4e32\u524d\u7f00\u6240\u9700\u8981\u7684\u64cd\u4f5c\u6b21\u6570\uff08\u8fd9\u4e2a\u5b57\u7b26\u4e32\u524d\u7f00\u5bf9\u5e94\u7684\u957f\u5ea6\u4e3a $v+k+v$\uff09\u3002\u4f46\u662f\u8fd9\u4e2a\u72b6\u6001\u662f\u4e0d\u5b8c\u6574\u7684\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5f00\u4e00\u4e2a\u7ef4\u5ea6\u6765\u786e\u4fdd 'V' \u548c 'K' \u6709\u6ca1\u6709\u8fde\u63a5\u5230\u4e00\u8d77\uff08\u786e\u4fdd\u4e0d\u5b58\u5728 'V' \u540e\u9762\u7d27\u8ddf\u7740\u4e00\u4e2a 'K' \u7684\u60c5\u51b5\u51fa\u73b0\uff09\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u518d\u5f00\u4e00\u4e2a\u7ef4\u5ea6\u6765\u786e\u4fdd\u8fd9\u4e2a\u957f\u5ea6\u4e3a $v+k+x$ \u7684\u5b57\u7b26\u4e32\u524d\u7f00\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u662f\u4e0d\u662f 'V'\u3002\u4e8e\u662f\uff0c\u6700\u7ec8\u5b9a\u4e49\u7684\u72b6\u6001\u4e3a $dp[v][k][x][lastLetter]$\uff08\u6216\u8005\u53ef\u4ee5\u8868\u8ff0\u6210 $dp[v][k][x][is\\_the\\_last\\_letter\\_V]$\uff09$\\Rightarrow$ \u5b83\u8868\u793a\u6784\u9020\u4e00\u4e2a\u5305\u542b $v$ \u4e2a\u5b57\u7b26 'V'\u3001$k$ \u4e2a\u5b57\u7b26 'K'\u3001$x$ \u4e2a\u5b57\u7b26 'X' \u4e14\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u662f\u4e0d\u662f 'V' \u7684\u5b57\u7b26\u4e32\u524d\u7f00\u9700\u8981\u7684\u6700\u5c11\u4ea4\u6362\u6b21\u6570\u3002  \n\n\u8981\u4ece\u5f53\u524d\u72b6\u6001\u8f6c\u79fb\u5230\u4e0b\u4e00\u4e2a\u72b6\u6001\uff0c\u6211\u4eec\u9700\u8981\u8003\u8651\u4e0b\u4e00\u4e2a 'K'\uff08\u4e5f\u5c31\u662f\u521d\u59cb\u72b6\u6001\u4e0b\u7684\u7b2c $k+1$ \u4e2a\u5b57\u7b26 'K'\uff09\u7684\u4f4d\u7f6e\uff0c\u4e0b\u4e00\u4e2a 'V' \u4e2a\u4f4d\u7f6e\uff0c\u4ee5\u53ca\u4e0b\u4e00\u4e2a 'X' \u7684\u4f4d\u7f6e\u3002\u5f53\u7136\uff0c\u5982\u679c\u5f53\u524d\u72b6\u6001\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u662f 'V'\uff0c\u6211\u4eec\u7684\u4e0b\u4e00\u4e2a\u72b6\u6001\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u4e0d\u80fd\u662f 'K'\u3002  \n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u5f53\u524d\u72b6\u6001\u662f $dp[v][k][x][i]$ \uff08\u5f53\u524d\u6709\u5b57\u7b26\u4e32\u524d\u7f00\u6709 $v$ \u4e2a\u5b57\u7b26 'V'\uff0c$k$ \u4e2a\u5b57\u7b26 $K$\uff0c$x$ \u4e2a\u5b57\u7b26 'X'\uff0c$i=1$ \u8868\u793a\u524d\u7f00\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u662f 'V'\uff0c$i=0$ \u8868\u793a\u524d\u7f00\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u4e0d\u662f 'V'\uff09\u7684\u8bdd\uff0c\u5219\u5b83\u53ef\u4ee5\u6269\u5c55\u51fa\u5982\u4e0b\u72b6\u6001\uff08\u5047\u8bbe\u5b57\u7b26 'V' \u7684\u603b\u6570\u4e3a $V$\uff0c\u5b57\u7b26 'K' \u7684\u603b\u6570\u4e3a $K$\uff0c\u5176\u4ed6\u5b57\u7b26\uff08\u89c6\u4e3a 'X'\uff09\u7684\u603b\u6570\u4e3a $X$\uff09\uff1a  \n- \u5982\u679c $v \\lt V$\uff0c\u5219\u53ef\u4ee5\u6269\u5c55\u5230\u72b6\u6001 $dp[v+1][k][x][1]$\uff08\u5c06\u7b2c $v+1$ \u4e2a 'V' \u79fb\u52a8\u5230\u7b2c $v+k+x+1$ \u4e2a\u4f4d\u7f6e\uff09\uff1b\n- \u5982\u679c $k \\lt K$\uff0c\u5219\u53ef\u4ee5\u6269\u5c55\u5230\u72b6\u6001 $dp[v][k+1][x][0]$\uff08\u5c06\u7b2c $k+1$ \u4e2a 'K' \u79fb\u52a8\u5230\u7b2c $v+k+x+1$ \u4e2a\u4f4d\u7f6e\uff09\uff1b\n- \u5982\u679c $x \\lt X$\uff0c\u5219\u53ef\u4ee5\u6269\u5c55\u5230\u72b6\u6001 $dp[v][k][x+1][0]$\uff08\u5c06\u7b2c $x+1$ \u4e2a 'X' \u79fb\u52a8\u5230\u7b2c $v+k+x+1$ \u4e2a\u4f4d\u7f6e\uff09\u3002  \n\n\u90a3\u4e48\u5c06\u4e00\u4e2a\u5b57\u7b26\u8f6c\u79fb\u5230\u7b2c $v+k+x+1$ \u4e2a\u4f4d\u7f6e\u9700\u8981\u4ea4\u6362\u51e0\u6b21\u5462\uff1f  \n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u4e4b\u524d\u7684\u72b6\u6001\u662f $dp[v][k][x][i]$\uff0c\u6240\u4ee5\u524d $v$ \u4e2a 'V'\u3001\u524d $k$ \u4e2a 'K'\u3001\u524d $x$ \u4e2a 'X' \u7684\u4f4d\u7f6e\u6211\u4eec\u4e0d\u7528\u7ba1\uff0c\u5047\u8bbe\u8981\u8f6c\u79fb\u7684\u5b57\u7b26\u4e00\u5f00\u59cb\u5728\u7b2c $p$ \u4e2a\u4f4d\u7f6e\uff0c\u5219\u5b83\u5bf9\u5e94\u7684\u4ea4\u6362\u6b21\u6570\u662f\uff1a  \n\n\u7b2c $v+1$ \u4e2a 'V' \u5f00\u59cb\u6240\u6709\u521d\u59cb\u4f4d\u7f6e $\\lt p$ \u7684\u5b57\u7b26 'V' \u4e2a\u6570 + \u7b2c $k+1$ \u4e2a 'K' \u5f00\u59cb\u6240\u6709\u521d\u59cb\u4f4d\u7f6e $\\lt p$ \u7684\u5b57\u7b26 'K' \u4e2a\u6570 + \u7b2c $x+1$ \u4e2a 'X' \u5f00\u59cb\u6240\u6709\u521d\u59cb\u4f4d\u7f6e $\\lt p$ \u7684\u5b57\u7b26\u4e2a\u6570 \u4e4b\u548c\u3002\n\n\u8fd9\u5c31\u662f\u8f6c\u79fb\u7684\u4ee3\u4ef7\u3002  \n\n\u8ba1\u7b97\u8f6c\u79fb\u7684\u4ee3\u4ef7\u53ef\u4ee5\u6709\u66f4\u5feb\u5730\u89e3\u6cd5\uff0c\u4e0d\u8fc7\u6211\u4eec\u5c31\u7b97\u4ee5 $O(n)$ \u7684\u7b97\u6cd5\u89e3\u51b3\u4e5f\u53ef\u4ee5\u8fc7\uff0c\u90a3\u4e48\u904d\u5386 'V'\u3001'K'\u3001'X' \u4ee5\u53ca\u8ba1\u7b97\u8f6c\u79fb\u7684\u4ee3\u4ef7\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^4)$ \u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002  \n\n\u793a\u4f8b\u7a0b\u5e8f\uff1a  \n```c++\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 77;\nint n, dp[maxn][maxn][maxn][2], V, K, X;\nchar s[maxn];\nvector<int> vec_v, vec_k, vec_x;\n\nint cal_swap_time(int v, int k, int x, int p) {\n    int cnt = 0;\n    for (int i = v; i < V && vec_v[i] < p; i ++) cnt ++;\n    for (int i = k; i < K && vec_k[i] < p; i ++) cnt ++;\n    for (int i = x; i < X && vec_x[i] < p; i ++) cnt ++;\n    return cnt;\n}\n\nvoid chkmin(int &a, int b) {\n    a = min(a, b);\n}\n\nint main() {\n    scanf(\"%d%s\", &n, s+1);\n    for (int i = 1; i <= n; i ++) {\n        if (s[i] == 'V') vec_v.push_back(i);\n        else if (s[i] == 'K') vec_k.push_back(i);\n        else vec_x.push_back(i);\n    }\n    V = vec_v.size();\n    K = vec_k.size();\n    X = vec_x.size();\n    memset(dp, 0x3f, sizeof(dp));\n    dp[0][0][0][0] = 0;\n    for (int v = 0; v <= V; v ++) {\n        for (int k = 0; k <= K; k ++) {\n            for (int x = 0; x <= X; x ++) {\n                for (int i = 0; i < 2; i ++) {\n                    int tmp = dp[v][k][x][i];\n                    if (v < V) chkmin(dp[v+1][k][x][1], tmp + cal_swap_time(v, k, x, vec_v[v]));\n                    if (k < K && i==0) chkmin(dp[v][k+1][x][0], tmp + cal_swap_time(v, k, x, vec_k[k]));\n                    if (x < X) chkmin(dp[v][k][x+1][0], tmp + cal_swap_time(v, k, x, vec_x[x]));\n                }\n            }\n        }\n    }\n    printf(\"%d\\n\", min(dp[V][K][X][0], dp[V][K][X][1]));\n    return 0;\n}\n```",
        "postTime": 1603884690,
        "uid": 291976,
        "name": "quanjun",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF771D \u3010Bear and Company\u3011"
    },
    {
        "content": "**[Portal]( https://www.luogu.com.cn/problem/CF771D )**\n\n\u88ab tzc \u62c9\u6765\u505a\u8fd9\u9898\uff0c\u7136\u540e\u4ed6\u597d\u50cf\u4e0d\u592a\u4f1a\uff0c\u7136\u800c\u6211\u81ea\u5df1 AC \u4e86\uff08\uff08\n\n\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u8981\u5355\u72ec\u5199\u4e00\u7bc7\u9898\u89e3\u5462\uff0c\u56e0\u4e3a\u8fd9\u9898\u4e00\u4e2a\u91cd\u8981\u7ed3\u8bba\u662f\u6211 baidu \u51fa\u6765\u7684\uff08\n\n\u611f\u8c22 tzc \u8ba9\u6211\u4f1a\u4e86\u8fd9\u6837\u4e00\u4e2a\u666e\u904d\u6027\u7ed3\u8bba\uff08\n\n---\n\n\u6ce8\u610f\u5230\u8fd9\u4e2a\u5b57\u7b26\u4e32\u91cc\u9762\u53ea\u5206\u4e09\u79cd\u5b57\u7b26\uff1a$\\texttt V$\uff0c$\\texttt K$\uff0c\u548c\u4e24\u4e2a\u90fd\u4e0d\u662f\u7684\u3002\u8fd9\u542f\u793a\u6211\u4eec\u5f04\u4e2a\u4e09\u7ef4 DP \u5206\u522b\u8bb0\u5f55\u4e09\u79cd\u5b57\u7b26\u7684\u4e2a\u6570\u3002\u7136\u540e\u56e0\u4e3a\u76f8\u90bb\u5b57\u7b26\u5bf9\u6709\u9650\u5236\uff0c\u6240\u4ee5\u8fd8\u8981\u518d\u5f04\u4e00\u7ef4\u8bb0\u5f55\u5f53\u524d\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u662f\u5565\u3002\u90a3\u4e48\u591a\u9879\u5f0f\u7b97\u6cd5\u7684\u96cf\u5f62\u5c31\u51fa\u6765\u4e86\u3002\n\n\u7136\u540e\u4e00\u4e2a\u96be\u70b9\u5728\u4e8e\uff1a\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u91cd\u65b0\u6392\u5217\u5f97\u5230\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48\u5982\u4f55\u7b97\u539f\u4e32\u5230\u65b0\u4e32\u7684\u6700\u5c0f\u4ea4\u6362\u6b21\u6570\u3002\n\n- \u300c\u8fd9\u9898\u96be\u70b9\u5c31\u5728\u5982\u4f55\u7b97\u79fb\u52a8\u6b21\u6570\u300d\n- \u300c\u544a\u8bc9\u4f60\u4e2a\u79d8\u5bc6\uff1a\u4e00\u4e2a\u6570\u5217\u5192\u6ce1\u6392\u5e8f\u7684\u6b21\u6570\u7b49\u4e8e\u9006\u5e8f\u5bf9\u6570\u300d\uff08\u6ca1\u9519\u8fd9\u4e2a\u5c31\u662f\u6211 bfs \u51fa\u6765\u7684\uff0c\u5f53\u5e74 NOIOL R1T2 \u597d\u50cf\u4e5f\u662f\u8fd9\u4e2a\u7ed3\u8bba\uff0c\u7136\u540e\u6211\u5f53\u65f6\u4e0d\u4f1a\uff0c\u767e\u6495\u4e0d\u5f97\u5176\u59d0\uff0c\u540e\u9762\u6709\u65f6\u95f4\u8865\u5427\u3002\u8fd9\u4e2a\u8bc1\u660e\u5176\u5b9e\u975e\u5e38\u597d\u8bc1\uff0c\u5c31\u662f\u8bf4\u6709\u9006\u5e8f\u5bf9\u90a3\u4e48\u4e00\u5b9a\u4f1a\u6709\u76f8\u90bb\u9006\u5e8f\u5bf9\uff08\u8fd9\u4e2a\u662f\u663e\u7136\u7684\u5427\uff0c\u53cd\u8bc1\u5373\u53ef\uff09\uff0c\u90a3\u4e48\u4efb\u610f\u4e00\u6b21\u6709\u6548\u4ea4\u6362\u90fd\u6070\u597d\u6d88\u6389\u4e00\u4e2a\u9006\u5e8f\u5bf9\uff08\u5c31\u662f\u6b64\u76f8\u90bb\u9006\u5e8f\u5bf9\uff09\uff0c\u90a3\u4e0d\u8bc1\u5b8c\u4e86\u4e48\uff09\n- \u300c\u7136\u540e\u8f6c\u5316\u4e00\u4e0b\u5c31\u53ef\u4ee5\u7b97\u8fd9\u9898\u7684\u79fb\u52a8\u6b21\u6570\u4e86\uff08\u300d\n\n\u81f3\u4e8e\u5982\u4f55\u8f6c\u5316\uff0c\u6211\u4eec\u8003\u8651\u5c06\u5b83\u7684\u91cd\u6392\u770b\u6210\u4e00\u4e2a\u7f6e\u6362 $a$\uff0c\u90a3\u4e48\u6700\u5c0f\u4ea4\u6362\u6b21\u6570\u663e\u7136\u5c31\u662f $a$ \u7684\u9006\u5e8f\u5bf9\u6570\uff08\u8fd9\u770b\u4f3c\u662f\u4e00\u4e2a\u633a\u5e38\u7528\u7684\u5957\u8def\uff09\u3002\u4f46\u662f\u672c\u9898\u4e2d\u5b57\u7b26\u4e32\u91cc\u53ef\u80fd\u6709\u76f8\u540c\u5143\u7d20\uff0c\u90a3\u600e\u4e48\u77e5\u9053\u5b83\u91cd\u6392\u540e\u5230\u5e95\u54ea\u4e2a\u662f\u539f\u5148\u7684\u54ea\u4e2a\u4f4d\u7f6e\u5462\uff1f\u8fd9\u4e5f\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u8d2a\u5fc3\u7684\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5b57\u7b26\uff0c\u5728\u65b0\u4e32\u4e2d\u628a\u6240\u6709\u7b49\u4e8e\u5b83\u7684\u4f4d\u7f6e\u7684 $a$ \u503c\u6309\u7167\u539f\u4e32\u91cc\u9762\u6240\u6709\u5b83\u7684\u4f4d\u7f6e\u4ece\u5c0f\u5230\u5927\u987a\u7740\u6392\u5373\u53ef\uff0c\u8fd9\u6837\u663e\u7136\u53ef\u4ee5\u63a7\u5236\u9006\u5e8f\u5bf9\u6700\u5c11\u5316\u3002\n\n\u7136\u540e\u8fd9\u4e2a\u5c31\u662f DP \u53ef\u4ee5\u7b97\u7684\u4e86\u3002\u6211\u4eec\u6bcf\u6b21\u679a\u4e3e\u4e0a\u4e00\u4e2a\u5b57\u7b26\u8f6c\u79fb\uff0c\u7136\u540e\u7b97\u4e0a\u5f53\u524d\u4f4d\u7f6e\u4f5c\u4e3a\u9006\u5e8f\u5bf9\u4e2d\u53f3\u8fb9\u90a3\u4e2a\u7684\u8d21\u732e\uff0c\u663e\u7136\u53ea\u8ddf\u4e4b\u524d\u7684\u4e09\u79cd\u5b57\u7b26\u7684\u4e2a\u6570\u6709\u5173\u3002\u5177\u4f53\u600e\u4e48\u7b97\u6211\u4eec\u53ef\u4ee5\u5728\u4e09\u79cd\u5b57\u7b26\u7684\u4f4d\u7f6e\u5e8f\u5217\u91cc\u9762\u4e8c\u5206\uff0c\u4f46\u4e5f\u53ef\u4ee5\u9884\u5904\u7406\uff0c\u505a\u5230\u4e09\u65b9\u590d\u6742\u5ea6\u3002\n\n**_[code]( https://www.luogu.com.cn/paste/mecd62fj )_**\n\n",
        "postTime": 1605185352,
        "uid": 138400,
        "name": "chenxia25",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF771D \u3010Bear and Company\u3011"
    },
    {
        "content": "gitgud #2\n\n\u5c06\uff1a\n\n 1. `V` \u4e3a 1 \u7c7b\u5b57\u7b26\n 2. `K` \u4e3a 2 \u7c7b\u5b57\u7b26\n 3. \u5176\u4f59\u4e3a 0 \u7c7b\u5b57\u7b26\n\n\u8fdb\u800c\u5c06\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u8fdb\u884c\u6807\u53f7\uff0c\u4ece $0$ \u81f3 $n-1$\u3002  \n\n**\u5f15\u7406**\uff1a\u5982\u679c\u94a6\u5b9a\u6700\u7ec8\u65b9\u6848\uff0c\u5219\u6700\u5c11\u6b65\u6570\u4e3a\u6700\u7ec8\u6392\u5217\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\u3002  \n**\u8bc1\u660e**\uff1a\u8003\u8651\u5012\u7740\u8d70\uff0c\u6700\u5c11\u6b65\u6570\u89e3\u6cd5\u91cc\uff0c\u4efb\u4f55\u4e00\u4e2a\u76f8\u90bb\u4ea4\u6362\u4f1a\u4fee\u6539\u6070\u597d\u4e00\u4e2a\u9006\u5e8f\u5bf9\uff08\u53ef\u4ee5\u62bd\u8c61\u4e3a\u5192\u6ce1\u6392\u5e8f\u8fc7\u7a0b\u3002\uff09\n\n**\u5f15\u7406**\uff1a\u7c7b\u578b\u5185\u76f8\u5bf9\u987a\u5e8f\u5728\u6700\u4f18\u89e3\u91cc\u4e0d\u4f1a\u6539\u53d8\u3002  \n**\u8bc1\u660e**\uff1a\u5bf9\u4e8e\u4efb\u610f\u7c7b\uff0c\u5982\u679c\u8fd9\u4e00\u7c7b\u6807\u53f7\u4e3a $x_0,x_1,\\dots,x_k$ \u5176\u4e2d $x_i<x_{i+1}$\uff0c\u5219\u5bf9\u4e8e\u4efb\u4f55\u6392\u5217 $[\\pi_0,\\pi_2,\\dots,\\pi_k]$ \u6240\u6709 $[\\dots,x_{\\pi_0},\\dots,x_{\\pi_1},\\dots,\\dots,\\dots,x_{\\pi_k},\\dots]$ \u5fc5\u5b9a\u5747\u5408\u6cd5\u6216\u5747\u4e0d\u5408\u6cd5\uff1b$[\\dots,x_0,\\dots,x_1,\\dots,\\dots,\\dots,x_k,\\dots]$ \u9006\u5e8f\u5bf9\u6570\u80af\u5b9a\u6700\u4f4e\u3002\n\n\u4e8e\u662f\u5982\u679c\u94a6\u5b9a\u4e00\u4e2a 012 \u4e32\uff08\u4f8b\u5982 02111\uff09\u90a3\u4e48\u80af\u5b9a\u53ef\u4ee5\u63a8\u5230\u5bf9\u5e94\u6807\u53f7\u4ee5\u53ca\u9006\u5e8f\u5bf9\u6570\u3002\n\n\u8003\u8651\u9010\u4e2a\u6784\u9020\u7b54\u6848 012 \u4e32\u3002  \n\u4ee4 $dp_{x\\ y\\ z\\ i}$ \u4e3a\u524d $x+y+z$ \u5b57\u7b26\u91cc\u6709 $x$ \u4e2a $0$\uff0c$y$ \u4e2a $1$\uff0c$z$ \u4e2a $2$\uff0c\u6700\u540e\u5b57\u7b26\u4e3a $i$ \u7684\u6700\u5c11\u9006\u5e8f\u5bf9\u4e2a\u6570\u3002\n\n\u5219 $dp_{x\\ y\\ z\\ i}=\\min(dp_{x-[i=0]\\ y-[i=1]\\ z-[i=2]\\ j})+C(x,y,z,i)$\uff0c\u5176\u4e2d $j$ \u4e3a\u6240\u6709 $0\\le j\\le2$ \u4f7f\u5f97 $i$ \u53ef\u4ee5\u5728 $j$ \u540e\u9762\uff0c\u5e76\u4e14 $C$ \u662f $i$ \u653e\u5728\u7b2c $x+y+z$ \u5b57\u7b26\u6240\u4ea7\u751f\u7684\u9006\u5e8f\u5bf9\u6570\u91cf\u3002\n\n\u901a\u8fc7\u9884\u5904\u7406\u7b2c $i$ \u7c7b\u578b\u7684\u7b2c $j$ \u51fa\u73b0\u4f4d\u7f6e\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u8fd9 $i$ \u5bf9\u5e94\u539f\u4e32\u7684\u4ec0\u4e48\u6807\u53f7\u3002\u4ee4\u8fd9\u503c\u4e3a $ld$\u3002\u5219\u6240\u6709\u522b\u7684\u7c7b\u578b\u91cc\u7684\u51fa\u73b0\u5728 $ld$ \u540e\u9762\u4f46\u662f\u5c5e\u4e8e $x\\ y\\ z$ \u4f1a\u4ea7\u751f\u9006\u5e8f\u5bf9\uff0c\u8fd9\u6570\u91cf\u4e3a $C$\u3002\n\n\u603b\u5171\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^3/27)$\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n// writer: w33z8kqrqk8zzzx33\n#include <bits/stdc++.h>\nusing namespace std;\n\n// begin fast read template by CYJian (source: https://www.luogu.com.cn/paste/i11c3ppx)\n\nnamespace io {\n\tconst int __SIZE = (1 << 21) + 1;\n\tchar ibuf[__SIZE], *iS, *iT, obuf[__SIZE], *oS = obuf, *oT = oS + __SIZE - 1, __c, qu[55]; int __f, qr, _eof;\n\t#define Gc() (iS == iT ? (iT = (iS = ibuf) + fread (ibuf, 1, __SIZE, stdin), (iS == iT ? EOF : *iS ++)) : *iS ++)\n\tinline void flush () { fwrite (obuf, 1, oS - obuf, stdout), oS = obuf; }\n\tinline void gc (char &x) { x = Gc(); }\n\tinline void pc (char x) { *oS ++ = x; if (oS == oT) flush (); }\n\tinline void pstr (const char *s) { int __len = strlen(s); for (__f = 0; __f < __len; ++__f) pc (s[__f]); }\n\tinline void gstr (char *s) { for(__c = Gc(); __c < 32 || __c > 126 || __c == ' ';)  __c = Gc();\n\t\tfor(; __c > 31 && __c < 127 && __c != ' '; ++s, __c = Gc()) *s = __c; *s = 0; }\n\ttemplate <class I> inline bool gi (I &x) { _eof = 0;\n\t\tfor (__f = 1, __c = Gc(); (__c < '0' || __c > '9') && !_eof; __c = Gc()) { if (__c == '-') __f = -1; _eof |= __c == EOF; }\n\t\tfor (x = 0; __c <= '9' && __c >= '0' && !_eof; __c = Gc()) x = x * 10 + (__c & 15), _eof |= __c == EOF; x *= __f; return !_eof; }\n\ttemplate <class I> inline void print (I x) { if (!x) pc ('0'); if (x < 0) pc ('-'), x = -x;\n\t\twhile (x) qu[++ qr] = x % 10 + '0',  x /= 10; while (qr) pc (qu[qr --]); }\n\tstruct Flusher_ {~Flusher_(){flush();}}io_flusher_;\n} using io::pc; using io::gc; using io::pstr; using io::gstr; using io::gi; using io::print;\n\n// end fast read template by CYJian\n\n#define iter(i, a, b) for(int i=(a); i<(b); i++)\n#define rep(i, a) iter(i, 0, a)\n#define rep1(i, a) iter(i, 1, (a)+1)\n#define log(a) cerr<<\"\\033[32m[DEBUG] \"<<#a<<'='<<(a)<<\" @ line \"<<__LINE__<<\"\\033[0m\"<<endl\n#define all(a) a.begin(), a.end()\n#define fi first\n#define se second\n#define pb push_back\n#define mp make_pair\n \nusing ll=long long;\nusing pii=pair<int, int>;\n//#define int ll\nconst int MOD = 1000000007;\n\nint cn[3];\nint iv[3][75],ps[3][75];\nint dp[75][75][75][3];\n\nint dfs(int x,int y,int z,int i){\n\tif(!(x+y+z))return 0;\n\tint c=(i==0)?x:((i==1)?y:z);\n\tint ld=ps[i][c-1];\n\tif(!c)return 1e9;\n\tint g=0;\n\tif(x&&ps[0][x-1]>ld)g+=x-iv[0][ld];\n\tif(y&&ps[1][y-1]>ld)g+=y-iv[1][ld];\n\tif(z&&ps[2][z-1]>ld)g+=z-iv[2][ld];\n\t// cout<<x<<' '<<y<<' '<<z<<' '<<i<<' '<<ld<<' '<<g<<' '<<iv[2][ld]<<endl;\n\tif(dp[x][y][z][i]!=-1)return dp[x][y][z][i];\n\tint X=x-(i==0),Y=y-(i==1),Z=z-(i==2);c=1e9;\n\trep(j,3)if(i!=2||j!=1)c=min(c,dfs(X,Y,Z,j));\n\treturn dp[x][y][z][i]=c+g;\n}\n\nsigned main() {\n    ios_base::sync_with_stdio(false); cin.tie(0);\n    int n;cin>>n;\n\trep(i,n){\n\t\tchar c;cin>>c;\n\t\tif(c=='V')iv[1][i]++,ps[1][cn[1]++]=i;\n\t\telse if(c=='K')iv[2][i]++,ps[2][cn[2]++]=i;\n\t\telse iv[0][i]++,ps[0][cn[0]++]=i;\n\t}\n\trep1(i,n-1)rep(j,3)iv[j][i]+=iv[j][i-1];\n\t// rep(i,n)rep(j,3)iv[j][i]=cn[j]-iv[j][i];\n\tmemset(dp,-1,sizeof dp);\n\tint x=1e9;\n\trep(i,3)x=min(x,dfs(cn[0],cn[1],cn[2],i));\n\tcout<<x<<endl;\n}\n```",
        "postTime": 1617277064,
        "uid": 220037,
        "name": "w33z8kqrqk8zzzx33",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF771D Bear and Company"
    }
]