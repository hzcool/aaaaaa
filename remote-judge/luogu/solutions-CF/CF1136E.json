[
    {
        "content": "### Part0.\u9898\u5916\u8bdd\n\n\u653e\u8001\u5a46\u56fe\u7247\uff08\u9898\u89e3\u80fd\u8fd9\u4e48\u5e72\uff1f\uff09\n\n![](https://i.loli.net/2019/03/21/5c93897b2efe8.jpg)\n\n------------\n\n\n### Part1.\u601d\u8def\n\n\u5f88\u5999\u5f88\u5999\n\n\u9996\u5148\u9898\u76ee\u6709\u4e00\u4e2a\u4fee\u6539\u5355\u70b9\uff0c\u662f\u5355\u70b9\u589e\u52a0\u3002\n\n$a_i += s$\n\n\u7136\u540e\u540e\u9762\u7684\u6240\u6709\u503c\u4e3a\u4e86\u4fdd\u6301\u6027\u8d28$a_i>=a_{i-1}+k_{i-1}$\uff0c\u5982\u679c\u4e0d\u6ee1\u8db3\u5c31\u628a\u4ed6\u53d8\u6210$a_{i -1} + k_{i-1}$\u3002\n\n\u7136\u540e\u6211\u4eec\u6765\u63a8\u63a8\u5f0f\u5b50\n\n\u4ee4$g_i = \\sum^{i}_{j = 1}{k_i}$\n\n\u5219\u6709$a_i >= a_{i-1}+k_{i-1}>=a_{i-2}+k_{i-2}+k_{i-1}>=...>=a_1+g_{i-1}$\n\n\u4ee4$u_i = a_i - g_{i-1}$\n\n\u2235 $a_i >= a_{i-1}+k_{i-1}$\n\n\u2234 $u_i + g_{i-1}>= u_{i-1} + g_{i -2} + k_{i -1}$\n\n\u2234 $u_i + g_{i-1} >= u_{i-1} + g_{i - 1}$\n\n\u2234 $u_i >= u_{i-1}$\n\n\u5230\u8fd9\u4f60\u60ca\u5947\u7684\u53d1\u73b0$u$\u7adf\u7136\u662f\u9012\u589e\u7684\uff01\n\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8be2\u95ee\u64cd\u4f5c\uff0c\u6211\u4eec\u62ff\u7ebf\u6bb5\u6811\u7ef4\u62a4$u$\u7684\u548c\n\n\u56de\u7b54\u7684\u65f6\u5019\u5c31\u662f$\\sum_{i=l}^{r}u_i - \\sum^{r-1}_{i = l-1}g_i$\n\n\u6240\u4ee5\u8fd8\u8981\u9884\u5904\u7406\u4e00\u4e0b$g_i$\u524d\u7f00\u548c\u3002\n\n\u800c\u5bf9\u4e8e\u4fee\u6539\u64cd\u4f5c$(i,x)$\uff0c\u6211\u4eec\u5e94\u5f53\u628a$u_i += x$\u3002\n\n\u4f9d\u9898\uff0c\u7ef4\u62a4$u$\u7684\u6709\u5e8f\u6027\uff0c\u6240\u4ee5\u6211\u4eec\u4e8c\u5206\u5230\u6700\u540e\u4e00\u4e2a\u5c0f\u4e8e$u_i$\uff08\u6216\u5c0f\u4e8e\u7b49\u4e8e\uff0c\u5728\u8fd9\u4e00\u9898\u6ca1\u6709\u533a\u522b\uff0c\u60f3\u60f3\u4e3a\u5565\uff09\u7684\u4f4d\u7f6e$j$\uff0c\u7136\u540e\u628a$[i,j]$\u7684$u$\u5168\u90e8\u90fd\u8bbe\u7f6e\u4e3a$u_i$\n\n\u8fd8\u6709\u5f88\u591a\u5c0f\u7ec6\u8282\uff0c\u5404\u4f4d\u53ef\u4ee5\u770b\u770b$Code$\n\n------------\n\n### Part2.Code\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#define lc (o << 1)\n#define rc (lc | 1)\n#define mid ((l + r) >> 1)\nusing namespace std;\n\ntypedef long long ll;\n\nconst int MAXN = 100000 + 5;\nconst ll inf = 9e18;\n\nint n , m , A[MAXN];\nll g[MAXN] , preg[MAXN] , seg[MAXN << 2] , setv[MAXN << 2];\n\ninline void up(int o) {seg[o] = seg[lc] + seg[rc];}\nvoid build(int o , int l , int r) {\n\tsetv[o] = -inf;\n\tif(l == r) {\n\t\tseg[o] = A[l] - g[l - 1];\n\t\treturn ;\n\t}\n\tbuild(lc , l , mid); build(rc , mid + 1 , r);\n\tup(o);\n}\ninline void set(int o , int l , int r , ll x) {\n\tsetv[o] = x;\n\tseg[o] = (r - l + 1) * x;\n}\ninline void down(int o , int l , int r) {\n\tif(setv[o] != -inf) {\n\t\tset(lc , l , mid , setv[o]);\n\t\tset(rc , mid + 1 , r , setv[o]);\n\t\tsetv[o] = -inf;\n\t}\t\n}\nll query(int o , int l , int r , int ql , int qr) {\n\tif(r < ql || l > qr) return 0;\n\tif(ql <= l && r <= qr) return seg[o];\n\tdown(o , l , r);\n\treturn query(lc , l , mid , ql , qr) + query(rc , mid + 1 , r , ql , qr);\n}\nvoid modify(int o , int l , int r , int ml , int mr , ll x) {\n\tif(r < ml || l > mr) return ;\n\tif(ml <= l && r <= mr) return set(o , l , r , x);\n\tdown(o , l , r);\n\tmodify(lc , l , mid , ml , mr , x); modify(rc , mid + 1 , r , ml , mr , x);\n\tup(o);\n}\n\ninline ll Get(int x) {return x < 0 ? 0 : preg[x];}\n\nint main() {\n\tscanf(\"%d\" , &n);\n\tfor(int i = 1 ; i <= n ; ++i) scanf(\"%d\" , A + i);\n\tfor(int i = 1 , x ; i < n ; ++i) scanf(\"%d\" , &x) , preg[i] = preg[i - 1] + (g[i] = g[i - 1] + x);\n\tbuild(1 , 1 , n);\n\tscanf(\"%d\" , &m);\n\tfor(int i = 1 , l , x; i <= m ; ++i) {\n\t\tchar type; scanf(\" %c %d %d\" , &type , &l , &x);\n\t\tif(type == '+') {\n\t\t\tint r = n , zj = l;\n\t\t\tll v = query(1 , 1 , n , l , l);\n\t\t\tv += x;\n\t\t\twhile(l <= r) {\n\t\t\t\tll k = query(1 , 1 , n , mid , mid);\n\t\t\t\tif(k == v) break;\n\t\t\t\telse if(k > v) r = mid - 1;\n\t\t\t\telse l = mid + 1;\n\t\t\t}\n\t\t\tmodify(1 , 1 , n , zj , mid , v);\n\t\t}\n\t\telse printf(\"%lld\\n\" , query(1 , 1 , n , l , x) + Get(x - 1) - Get(l - 2));\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1553172979,
        "uid": 55537,
        "name": "Parabola",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1136E \u3010Nastya Hasn't Written a Legend\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u79cd\u53e6\u7c7b\u7684\u505a\u6cd5\uff0c\u548c\u6211\u770b\u5230\u7684\u6240\u6709\u73b0\u6709\u9898\u89e3+\u4ee3\u7801\u90fd\u4e0d\u4e00\u6837\uff0c\u800c\u4e14\u662f\u5355 $\\log$ \u7684\uff0c\u76ee\u524d\u6d1b\u8c37\u6700\u4f18\u89e3 $rank2$ \u3002\n\n~~\u5f53\u7136\u53ef\u80fd\u65e9\u5c31\u6709\u4eba\u7528\u8fd9\u79cd\u65b9\u6cd5\u5b9e\u73b0\u4e86\u4e0d\u8fc7\u6211\u6ca1\u53d1\u73b0\u3002~~\n\n## \u3010\u601d\u8def\u3011\n\n\u9996\u5148\u6211\u4eec\u610f\u8bc6\u5230\u8fd9\u9053\u9898\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u5355\u70b9\u4fee\u6539\u533a\u95f4\u67e5\u8be2\uff0c\u4f46\u662f\u4e0e\u6b64\u540c\u65f6\u8981\u6211\u4eec\u7ef4\u62a4\u6574\u4e2a\u5e8f\u5217\u6ee1\u8db3\u4e00\u4e2a $\\forall i \\in [1, n-1], a_i+k_i\\le a_{i+1}$ \u7684\u6027\u8d28\u3002\n\n\u6211\u4eec\u8bd5\u56fe\u627e\u4e00\u627e\u8fd9\u9053\u9898\u7684\u4e00\u4e9b\u6027\u8d28\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u6574\u4e2a\u5e8f\u5217\u53ef\u4ee5\u88ab\u5212\u5206\u6210\u82e5\u5e72\u4e2a\u8fde\u7eed\u6bb5\uff0c\u5176\u4e2d\u6bcf\u4e00\u4e2a\u8fde\u7eed\u6bb5\u9664\u4e86\u5f00\u5934\uff0c\u540e\u9762\u6bcf\u4e00\u4e2a\u6570\u90fd\u6ee1\u8db3 $a_i=a_{i-1}+k_{i-1}$ \u3002\n\n\u800c\u4e14\u6211\u4eec\u60ca\u8bb6\u5730\u53d1\u73b0\uff0c\u6bcf\u4e00\u4e2a\u8fde\u7eed\u6bb5\u5728\u4e00\u6b21\u4fee\u6539\u4e2d\uff0c\u82e5\u662f **\u6574\u4f53\u88ab\u4fee\u6539** \uff0c\u90a3\u4e48\u6574\u4e00\u4e2a\u8fde\u7eed\u6bb5\u7684\u589e\u91cf\u662f\u76f8\u540c\u7684\u3002\n\n\u533a\u95f4\u589e\u91cf\u533a\u95f4\u6c42\u548c\uff0c\u8fd9\u542f\u793a\u6211\u4eec\u5f00\u4e00\u68f5\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u800c\u4e14\u4e00\u4e2a\u8fde\u7eed\u6bb5\u53ea\u8981\u77e5\u9053\u5f00\u5934\u7684\u6743\u503c\uff0c\u6574\u4e2a\u8fde\u7eed\u6bb5\u4e2d\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u7684\u6743\u503c\u5176\u5b9e\u90fd\u662f\u786e\u5b9a\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u4fee\u6539\u67d0\u4e00\u4e2a\u8fde\u7eed\u6bb5\u4e2d\u95f4\u7684\u4e00\u4f4d\u65f6\u53ef\u4ee5\u65b9\u4fbf\u5730\u5206\u88c2\uff0c\u8fd9\u91cc\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a $k$ \u6570\u7ec4\u7684\u524d\u7f00\u548c\uff0c\u7136\u540e\u5c31\u53ef\u4ee5 $O(1)$ \u6839\u636e\u5f00\u5934\u6c42\u51fa\u4e2d\u95f4\u4efb\u610f\u4e00\u4f4d\u7684\u6743\u503c\u4e86\u3002\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\uff0c\u6211\u4eec\u6bcf\u4e00\u6b21\u4ece\u4e00\u4e2a\u8fde\u7eed\u6bb5\u5f00\u59cb\u5f80\u540e\u904d\u5386\uff0c\u5982\u679c\u4e0b\u4e00\u4e2a\u8fde\u7eed\u6bb5\u9700\u8981\u88ab\u4fee\u6539\u5373\u5f00\u5934\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0c\u90a3\u4e48\u4e0b\u4e00\u4e2a\u8fde\u7eed\u6bb5\u5c31\u4e00\u5b9a\u53ef\u4ee5\u88ab\u5e76\u5230\u5f53\u524d\u7684\u8fde\u7eed\u6bb5\u4e2d\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u4fee\u6539\u5c31\u662f\u8d4b\u503c\u4e3a $a_i+k_i$ \uff0c\u90a3\u4e48\u6bcf\u4e00\u6b21\u7ebf\u6bb5\u6811\u4e0a\u7684\u4fee\u6539\u90fd\u610f\u5473\u7740\u6709\u4e00\u4e2a\u8fde\u7eed\u6bb5\u88ab\u5408\u5e76\uff0c\u800c\u4e14\u6bcf\u4e00\u6b21\u4fee\u6539\u90fd\u6700\u591a\u53ea\u4f1a\u5206\u88c2\u51fa\u4e00\u4e2a\u65b0\u8fde\u7eed\u6bb5\uff0c\u6240\u4ee5\u6700\u7ec8\u8fde\u7eed\u6bb5\u6570\u91cf\u548c\u4fee\u6539\u6b21\u6570\u90fd\u662f $O(n+m)$ \u7684\u3002\n\n\u6211\u4eec\u8003\u8651\u4f7f\u7528\u73c2\u6735\u8389\u6811\u7ef4\u62a4\u8fd9\u4e2a\u4e1c\u897f\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u65b9\u4fbf\u5730\u5408\u5e76\u4e0e\u5206\u88c2\uff0c\u5e76\u4e14\u4e5f\u53ef\u4ee5\u5bf9\u8fde\u7eed\u6bb5\u8fdb\u884c\u5feb\u901f\u67e5\u627e\u548c\u4fee\u6539\uff0c\u8fd9\u91cc\u6bcf\u4e00\u6b21\u7684\u4fee\u6539\u90fd\u662f $O(\\log n)$ \u7684\u3002\n\n\u7136\u540e\u7ebf\u6bb5\u6811\u4fee\u6539\u548c\u67e5\u8be2\u4e5f\u662f $O(\\log n)$ \u7684\u3002\n\n\u6240\u4ee5\u6700\u7ec8\u590d\u6742\u5ea6 $O((n+m)\\log n)$ \uff0c\u663e\u7136\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n## \u3010\u4ee3\u7801\u3011\n\u5220\u53bb\u4e86\u4e0d\u91cd\u8981\u7684\u5feb\u8bfb\u548c\u5934\u6587\u4ef6\u90e8\u5206\u3002\n```cpp\n/*\n    author: DPair\n    language: C++\n*/\nint n, q;\n#define MAXN 100005\ntypedef long long LL;\nLL a[MAXN], b[MAXN];\nnamespace SegTree{\n    LL t[MAXN << 2], tag[MAXN << 2];\n    inline void pushup(int rt){t[rt] = t[rt << 1] + t[rt << 1 | 1];}\n    inline void update(int rt, int l, int r, LL z){\n        t[rt] += z * (r - l + 1);\n        tag[rt] += z;\n    }\n    #define RT rt, l, r\n    #define LSON rt << 1, l, mid\n    #define RSON rt << 1 | 1, mid + 1, r\n    inline void pushdown(int rt, int l, int r){\n        if(tag[rt]){\n            int mid = (l + r) >> 1;\n            update(LSON, tag[rt]);update(RSON, tag[rt]);\n            tag[rt] = 0;\n        }\n    }\n    void modify(int rt, int l, int r, int x, int y, LL z){\n        if(x <= l && r <= y) return update(RT, z);\n        pushdown(RT);\n        int mid = (l + r) >> 1;\n        if(x <= mid) modify(LSON, x, y, z);\n        if(y > mid) modify(RSON, x, y, z);\n        pushup(rt);\n    }\n    void build(int rt, int l, int r){\n        if(l == r) {t[rt] = a[l];return ;}\n        int mid = (l + r) >> 1;\n        build(LSON);build(RSON);\n        pushup(rt);\n    }\n    LL query(int rt, int l, int r, int x, int y){\n        if(x <= l && r <= y) return t[rt];\n        pushdown(RT);\n        int mid = (l + r) >> 1;LL ret = 0;\n        if(x <= mid) ret = query(LSON, x, y);\n        if(y > mid) ret += query(RSON, x, y);\n        return ret;\n    }\n}\nnamespace ODT{\n    struct NODE{\n        int l, r;LL x;\n        NODE(int l, int r, LL x) : l(l), r(r), x(x) {}\n        inline bool operator < (const NODE &tmp)const {return l < tmp.l;}\n    };\n    typedef set <NODE> :: iterator IT;\n    set <NODE> t;\n    inline IT split(int x){\n        IT it = t.lower_bound(NODE(x, 0, 0));\n        if(it != t.end() && it -> l == x) return it;\n        -- it;int val = it -> x, l = it -> l, r = it -> r;\n        t.erase(it);t.emplace(NODE(l, x - 1, val));\n        return t.emplace(NODE(x, r, val + b[x] - b[l])).first;\n    }\n    inline void work(int p, LL x){\n        IT L = split(p);LL val = L -> x;int r = L -> r;\n        IT it;\n        for (it = L;it != t.end();++ it){\n            int l = it -> l;LL v = it -> x;\n            if(val + x + b[l] - b[p] <= v) break;\n            r = it -> r;\n            SegTree :: modify(1, 1, n, l, r, val + x + b[l] - b[p] - v);\n        }\n        t.erase(L, it);\n        t.emplace(NODE(p, r, val + x));\n    }\n}\nint main(){\n    read(n);\n    for (int i = 1;i <= n;++ i) read(a[i]);\n    for (int i = 2;i <= n;++ i) read(b[i]), b[i] += b[i - 1];\n    SegTree :: build(1, 1, n);\n    for (int i = 1;i <= n;++ i) ODT :: t.emplace(ODT :: NODE(i, i, a[i]));\n    read(q);\n    while(q --){\n        char opt = nxt_char();\n        int l, r;read(l, r);\n        if(opt == '+') ODT :: work(l, r);\n        else print(SegTree :: query(1, 1, n, l, r));\n    }\n}\n```",
        "postTime": 1614430633,
        "uid": 66511,
        "name": "DPair",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1136E \u3010Nastya Hasn't Written a Legend\u3011"
    },
    {
        "content": "#### \u63a8\u9500 [\u819c zhouakngyang \u5b9d\u5178](https://www.cnblogs.com/George1123/p/13598475.html)\n\n$\\color{black}{\\texttt {z}}\\color{red}{\\texttt {houakngyang}}$ AK \u5b8c\u6bd4\u8d5b\u8ba9\u6211\u6765\u505a\u8fd9\u9898\uff0c\u6211\u505a\u4e861h\uff0c\u4ed61hAK\uff0c\u88ab\u4ed6\u540a\u8d77\u6765\u6253\u3002\n\n\u4f5c\u4e3a\u76ee\u524d\u6d1b\u8c37\u548cCF\u7684\u6700\u4f18\u89e3\u6765\u5199\u7bc7\u9898\u89e3\n\n#### \u9898\u89e3\n\n~~\u9760\u7684\u5c31\u662f\u7075\u5149\u4e00\u73b0\u3002\u3002\u3002~~ \n\n\u770b\u5b8c\u9898\uff0c~~\u6b63\u5e38\u4eba\u90fd\u4f1a~~ \u53d1\u73b0\u8fd9\u4e2a $k_i$ \u600e\u4e48\u8fd9\u4e48\u70e6\u554a\uff0c\u597d\u50cf\u5565\u90fd\u4e0d\u80fd\u7ef4\u62a4\u554a\u3002\u4fee\u6539\u5230\u54ea\u91cc\u554a\uff0c\u600e\u4e48\u6ca1\u6709\u5355\u8c03\u6027\u554a\u3002\n\n\u7136\u540e\u4e0d\u6b7b\u5fc3\uff0c\u5f00\u59cb\u627e\u5404\u79cd\u6570\u636e\u7ed3\u6784\u6765\u7ef4\u62a4\u3002time is passing,rank is falling......\n\n\u6ce8\u610f\u5230\u8fd9\u4e2a\u6570\u5217\u770b\u8d77\u6765\u6709\u70b9\u53ef\u4ee5\u4e8c\u5206\u7684\u611f\u89c9\uff0c\u4f46\u662f\u6ca1\u6709\u5355\u8c03\u6027\u3002\n\n**\u7075\u5149\u4e00\u73b0\uff1a\u4e0d\u597d\u7ef4\u62a4\u5c31\u522b\u7ef4\u62a4\u5457\uff0c\u7528\u524d\u7f00\u548c\u62b5\u6d88\u554a**\n\n\u4ee4 $s_n=\\sum\\limits_{i=2}^{n}k_i$ \uff08\u6ce8\u610f\uff0ck\u7684\u4e0b\u6807\u4e3a\u4e86\u65b9\u4fbf\u4ece $2$ \u5f00\u59cb\uff09\n\n\u4ee4 $b_i=a_i-s_i $ \n\n\u90a3\u4e48 $a_{i+1}<a_i+k_i \\Leftrightarrow b_{i+1}<b_i$ \n\n\u6240\u4ee5 $b$ \u5355\u8c03\u4e0d\u964d\uff0c\u5426\u5219\u5c31\u66f4\u65b0\u8fc7\u53bb\u4e86\n\n\u4e8e\u662f\u53ef\u4ee5\u4e8c\u5206\u53f3\u7aef\u70b9\uff0c\u4e8c\u5206\u5230\u6700\u9760\u53f3\uff08\u4e8b\u5b9e\u4e0a\u8fd9\u4e0e\u9898\u76ee\u6709\u4e9b\u51fa\u5165\uff0c\u4f46\u662f\u5e26\u4e2a\u7b49\u53f7\u6ca1\u5f71\u54cd\uff09\u7684\u6ee1\u8db3 $b_{i+1} \\le b_i+x$ \uff08 $x$ \u662f\u52a0\u4e0a\u7684\u6570\uff09\u7684\u4f4d\u7f6e $r$ \uff0c\u5728\u7ebf\u6bb5\u6811\u4e0a\u628a $[i,r]$ \u5185\u7684\u6570\u8d4b\u503c\u4e3a $b_i+k$  \uff0c\u6700\u540e\u8be2\u95ee\u7684\u65f6\u5019\u8f93\u51fa\uff1a$[l,r]$ \u7684\u533a\u95f4\u548c\u52a0\u4e0a $ss_r-ss_{l-1}$ \uff0c$ss_i=\\sum\\limits_{j=2}^{i}s_j$ \uff08\u5c31\u662f\u628a\u51cf\u6389\u7684\u524d\u7f00\u548c\u52a0\u56de\u53bb\uff09\n\n\n\n#### \u4f18\u5316\n\n\u6700\u4f18\u89e3\u4e0d\u53ef\u80fd\u53ea\u7528\u4e0a\u9762\u7684\u601d\u8def\u7684\u554a\u3002\n\n\u4e0a\u9762\u90a3\u4e2a\u4e1c\u897f\u4e8c\u5206\u5957\u4e2a\u7ebf\u6bb5\u6811\u662f $O(n\\log^2n)$ \u7684\u3002\n\n\u975e\u5e38\u663e\u7136\u7684\u53ef\u4ee5\u628a\u7ebf\u6bb5\u6811\u4e8c\u5206\u6362\u6210\u5355\u53ea $\\log$ \u7684\u7ebf\u6bb5\u6811\u4e0a\u67e5\u627e\uff0c\u56e0\u4e3a\u7ebf\u6bb5\u6811\u672c\u8eab\u5c31\u662f\u4e8c\u5206\u6570\u636e\u7ed3\u6784\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u533a\u95f4\u7ef4\u62a4\u6700\u5c0f\u503c\u3002\n\n+ \u5982\u679c\u53f3\u533a\u95f4\u7684\u6700\u5c0f\u503c\u5c0f\u4e8e\u8981\u4e8c\u5206\u7684 $v$ \uff0c\u90a3\u4e48\u5f80\u53f3\u533a\u95f4\u8d70\uff0c\u56e0\u4e3a\u4e00\u5b9a\u66f4\u9760\u53f3\u5207\u5b58\u5728\u53ef\u884c\u89e3\n+ \u5426\u5219\u5f80\u5de6\u533a\u95f4\u8d70\u3002\n\n\u4e8e\u662f\u8fd9\u9053\u9898\u5c31\u53d8\u6210 $O(n\\log n)$ \u7684\u5566\u3002\n\n\u7136\u540e\u53d1\u73b0\u6211\u662f\u6b21\u4f18\u89e3\u3002\n\n\u5ffd\u7136\u6709\u4e86\u4fe1\u5fc3\uff0c\u52a0\u4e2a\u706b\u8f66\u5934\u52a0\u4e2afread\u5c31\u6700\u4f18\u89e3\u4e86\u3002\n\n```cpp\n#define int long long\n#define N 100009\nconst int inf=1e18;\ninline int rd() {\n\tint x=0,f=1;char ch=getchar();\n\twhile(!isdigit(ch)) {if(ch=='-')f=-1;ch=getchar();}\n\twhile(isdigit(ch))x=x*10+(ch^48),ch=getchar();\n\treturn x*f;\n}\ninline int rdc() {\n\tchar ch=getchar();\n\twhile(ch!='+'&&ch!='s')ch=getchar();\n\treturn ch=='s';\n}\nint a[N],k[N],s[N],v[N],n,ss[N];\nint val[N<<2],tag[N<<2],miv[N<<2];\n#define lc (p<<1)\n#define rc (p<<1|1)\nvoid pushup(int p) {\n\tval[p]=val[lc]+val[rc],miv[p]=std::min(miv[lc],miv[rc]);\n}\nvoid build(int l,int r,int p) {\n\ttag[p]=inf;\n\tif(l==r)return val[p]=miv[p]=v[l],void();\n\tint mid=(l+r)>>1;\n\tbuild(l,mid,lc),build(mid+1,r,rc);\n\tpushup(p);\n}\nvoid pushdown(int p,int l,int r) {\n\tif(tag[p]==inf)return;\n\tint mid=(l+r)>>1;\n\ttag[lc]=tag[rc]=tag[p],\n\tmiv[lc]=miv[rc]=tag[p],\n\tval[lc]=tag[p]*(mid-l+1),\n\tval[rc]=tag[p]*(r-mid),\n\ttag[p]=inf;\n}\nint query(int ql,int qr,int l,int r,int p) {\n\tif(ql<=l&&r<=qr)return val[p];\n\tpushdown(p,l,r);\n\tint mid=(l+r)>>1,res=0;\n\tif(ql<=mid)res+=query(ql,qr,l,mid,lc);\n\tif(mid<qr)res+=query(ql,qr,mid+1,r,rc);\n\treturn res;\n}\nvoid update(int ql,int qr,int l,int r,int p,int k) {\n\tif(ql<=l&&r<=qr) {\n\t\ttag[p]=miv[p]=k,val[p]=k*(r-l+1);return;\n\t}\n\tpushdown(p,l,r);\n\tint mid=(l+r)>>1;\n\tif(ql<=mid)update(ql,qr,l,mid,lc,k);\n\tif(mid<qr)update(ql,qr,mid+1,r,rc,k);\n\tpushup(p);\n}\nint ask(int v,int l,int r,int p) {\n\tif(l==r)return l;\n\tpushdown(p,l,r);\n\tint mid=(l+r)>>1;\n\tif(miv[rc]<=v)return ask(v,mid+1,r,rc);\n\telse return ask(v,l,mid,lc);\n}\nsigned main() {\n\tn=rd();\n\tfor(int i=1;i<=n;++i)a[i]=rd();\n\tfor(int i=2;i<=n;++i)k[i]=rd(),s[i]=s[i-1]+k[i],ss[i]=ss[i-1]+s[i];\n\tfor(int i=1;i<=n;++i)v[i]=a[i]-s[i];\n\tbuild(1,n,1);\n\tfor(int q=rd();q;--q) {\n\t\tint opt=rdc(),x=rd(),y=rd();\n\t\tif(opt)printf(\"%lld\\n\",query(x,y,1,n,1)+ss[y]-ss[x-1]);\n\t\telse {\n\t\t\tint now=query(x,x,1,n,1);\n\t\t\tupdate(x,ask(now+y,1,n,1),1,n,1,now+y);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\n\n",
        "postTime": 1599562318,
        "uid": 123384,
        "name": "tommy0221",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1136E \u3010Nastya Hasn't Written a Legend\u3011"
    },
    {
        "content": "\u6253 $CF$ \u56e2\u961f\u8d5b\u505a\u5230\u4e86\u8fd9\u9053\u9898\uff0c\u53e3\u80e1\u51fa\u4e86\u4e00\u4e2a\u66b4\u529b\u91cd\u6784\u6bcf\u4e2a\u5757\u7684\u5206\u5757\u505a\u6cd5\uff0c\u5199\u4e86\u4e00\u534a\u53d1\u73b0\u4fee\u6539\u4e0d\u53ef\u505a\uff0c\u5f00\u59cb\u63a8\u5f0f\u5b50\u3002\n\n\u5df2\u77e5\n\n$$a_i + k_i <= a_{i + 1}$$\n\n\u6709\n\n$$a_{i + 1} - k_i >= a_i$$\n\n$$a_{i + 1} - k_i - k_{i - 1} >= a_i - k_{i - 1}$$\n\n$$\\ldots$$\n\n$$a_{i + 1} - k_i - \\ldots - k_1 >= a_i - k_{i - 1} - \\ldots - k_1$$\n\n\u8bb0 \n\n$$sum_i = \\sum_{j = 1}^{i} k_i$$\n\n\u6709\n\n$$a_{i + 1} - sum_i >= a_i - sum_{i - 1}$$\n\n\u8bb0 \n\n$$d_i = a_i - sum_{i - 1}$$\n\n\u6709\n\n$$d_i >= d_{i - 1}$$\n\n\u7ebf\u6bb5\u6811\u7ef4\u62a4 $d_i$ \u5373\u53ef\u3002\n\n\u4fee\u6539\u65f6\uff0c\u5355\u70b9\u4fee\u6539\u5373\u53ef\u3002\n\n\u67e5\u8be2\u65f6\uff0c\u4ece\u53f3\u5f80\u5de6\u5728\u7ebf\u6bb5\u6811\u4e0a\u627e\u7b2c\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u8282\u70b9\u5373\u53ef\u3002\n\n\u5173\u4e8e\u7ebf\u6bb5\u6811\u627e\u8282\u70b9\u7684\u64cd\u4f5c\uff0c\u63a8\u8350 $51nod$ \u4e00\u9053\u7c7b\u4f3c\u7684[\u9898\u76ee](http://www.51nod.com/Challenge/Problem.html#!#problemId=1701)\n\n\u5c31\u505a\u5b8c\u4e86\u3002",
        "postTime": 1556593977,
        "uid": 104379,
        "name": "Cesare",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1136E \u3010Nastya Hasn't Written a Legend\u3011"
    },
    {
        "content": "\u4e00\u9053\u7ebf\u6bb5\u6811\u597d\u9898\u3002\n\n\n------------\n\n\n\u9996\u5148\u56e0\u4e3a $ a_i+k_i \\leq a_{i+1} $\u200b\u200b\u200b\u200b \u6240\u4ee5\u7b80\u5355\u79fb\u9879\u53d1\u73b0 $a_i \\leq a_{i+1}-k_i$\u200b\u200b\u200b\u200b \u3002\u4e0d\u96be\u63a8\u51fa \uff1a$a_i - \\sum_{j=1}^{i-1} k_j \\leq a_{i+1}-\\sum_{j=1}^{i} k_j (i>1)$\u200b\u200b\u200b\u200b\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5bf9\u6bcf\u4e2a $a_i$\u200b\u200b\u200b\u200b \u51cf\u53bb $\\sum_{j=1}^{i} k_j$\u200b\u200b\u200b\u200b\u200b\u3002\n\n\u8fd9\u6837\u6539\u7684\u8bdd\uff0c\u6211\u4eec\u53d1\u73b0\u4e00\u53f7\u64cd\u4f5c\u5c31\u4ece\u533a\u95f4\u4fee\u6539\u6570\u5217\u53d8\u4e3a\u533a\u95f4\u8d4b\u503c\uff0c\u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u628a\u76f8\u5dee\u7684 $k_i$ \u63d0\u524d\u51cf\u6389\u4e86\u3002\u5224\u65ad\u4fee\u6539\u7684\u53f3\u7aef\u70b9\u53ea\u8981\u7528\u4e8c\u5206\u5f88\u5bb9\u6613\u89e3\u51b3\u3002\n\n\n------------\n\n\u64cd\u4f5c s \u53ea\u8981\u5728\u7ebf\u6bb5\u6811\u533a\u95f4\u67e5\u503c\u7684\u57fa\u7840\u4e0a\u518d\u52a0\u4e0a $\\sum_{i=l}^{r}\\sum_{j=1}^{i-1} k_j$\u200b \u7684\u503c\uff0c\u8fd9\u4e2a\u503c\u53ef\u4ee5\u7528\u63d0\u524d\u5904\u7406\u597d\u7684\u4e8c\u7ef4\u200b\u524d\u7f00\u548c\uff0c\u6ce8\u610f\u8981\u7279\u5224 $l=1$ \u7684\u60c5\u51b5\u3002\n\n\n------------\n\n\u7ef4\u62a4 tag \u7684\u65f6\u5019\u4e0d\u80fd\u5c06\u5176\u521d\u59cb\u503c\u8bbe\u4e3a 0\uff0c\u56e0\u4e3a\u4f1a\u6709\u4fee\u6539\u56de 0 \u7684\u64cd\u4f5c\uff0c\u5e94\u8bbe\u4e3a\u8d1f\u6570\u3002\n\n\n\n------------\n\u4ee3\u7801\u5982\u4e0b\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ls (rt<<1ll)\n#define rs (rt<<1ll|1ll)\n#define mid (l+r>>1ll)\n#define int long long\ninline int read()\n{\n\tchar ch=getchar();int x=0;bool f=0;\n\tfor(;!isdigit(ch);ch=getchar())if(ch=='-')f=1;\n\tfor(;isdigit(ch);ch=getchar())x=(x<<1)+(x<<3)+(ch^48);\n\tif(f==1)x=-x;return x;\n}\nvoid print(int x)\n{\n    if(x<0) putchar('-'),x=-x;\n    if(x>9) print(x/10);\n    putchar(x%10+'0');\n}\nconst int maxn=2e5+5,inf=-1e18;\nint tag[maxn*4],a[maxn],l,r,x,y,sum[maxn*4],n,m,opt,ss[maxn],k[maxn];\nchar s[5];\nvoid build(int rt,int l,int r)\n{\n\ttag[rt]=inf;\n\tif(l==r){sum[rt]=a[l];return;}\n\tbuild(ls,l,mid),build(rs,mid+1,r);\n\tsum[rt]=sum[ls]+sum[rs];\n}\nvoid push(int rt,int l,int r)\n{\n\tif(tag[rt]!=inf)\n\t{\n\t\ttag[ls]=tag[rt];tag[rs]=tag[rt];\n\t\tsum[ls]=tag[rt]*(mid-l+1);sum[rs]=tag[rt]*(r-mid);tag[rt]=inf;\n\t}\n}\nvoid add(int rt,int l,int r,int L,int R,int num)\n{\n\t\n\tif(l>R||r<L)return;//cout<<sum[rt]<<endl;\n\tif(l>=L&&r<=R)\n\t{\n\t\tsum[rt]=num*(r-l+1);tag[rt]=num;return;\n\t}\n\tpush(rt,l,r);add(ls,l,mid,L,R,num),add(rs,mid+1,r,L,R,num);\n\tsum[rt]=sum[ls]+sum[rs];\n}\nint query(int rt,int l,int r,int L,int R)\n{\n\tif(l>R||r<L)return 0;\n\tif(l>=L&&r<=R)return sum[rt];\n\tpush(rt,l,r);return query(ls,l,mid,L,R)+query(rs,mid+1,r,L,R);\n}\nsigned main()\n{\n\tn=read();\n\tfor(int i=1;i<=n;i++)a[i]=read();\n\tfor(int i=1;i<n;i++)k[i]=read(),k[i]+=k[i-1],a[i+1]=a[i+1]-k[i],ss[i]=ss[i-1]+k[i];//,cout<<k[i]<<\" \"<<ss[i]<<endl;\n\t//for(int i=1;i<=n;i++)cout<<a[i]<<\" \";\n\tbuild(1,1,n);m=read();\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%s\",s);\n\t\tif(s[0]=='+')\n\t\t{\n\t\t\tx=read(),y=read();l=x,r=n;int u=query(1,1,n,x,x)+y;\n\t\t\twhile(l<=r)\n\t\t\t{\n\t\t\t\tint res=query(1,1,n,mid,mid);\n\t\t\t\tif(res==u)break;\n\t\t\t\telse if(res>u)r=mid-1;//cout<<\"A\";\n\t\t\t\telse l=mid+1;\n\t\t\t}//cout<<res<<endl;\n\t\t\tadd(1,1,n,x,mid,u);\n\t\t}\n\t\telse l=read(),r=read(),print(query(1,1,n,l,r)+ss[r-1]-ss[max(0ll,l-2)]),puts(\"\");\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1628842125,
        "uid": 343748,
        "name": "louhao088",
        "ccfLevel": 9,
        "title": "\u9898\u89e3CF1136E Nastya Hasn't Written a Legend"
    }
]