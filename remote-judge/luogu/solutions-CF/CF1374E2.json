[
    {
        "content": "## \u524d\u8a00\n\n\u672c\u6587\u4ea6\u53d1\u8868\u4e8e[\u7b14\u8005\u535a\u5ba2](https://www.codein.icu/cf1374e2/)\n\n## \u524d\u8a002\n\n\u672c\u9898\u4e3a CF1374E1 \u7684 Hard Version\uff0c\u9898\u610f\u53d8\u5316\u4e0d\u5927\uff0c\u89e3\u6cd5\u4e5f\u662f\u5728\u5176\u57fa\u7840\u4e0a\u8c03\u6574\uff0c\u56e0\u6b64\u5982\u679c\u6ca1\u6709\u505a\u8fc7\u7684\u8bdd\uff0c\u5efa\u8bae\u5148\u505a [CF1374E1](https://www.luogu.com.cn/problem/CF1374E1)\uff0c\u6216\u8005\u7b80\u5355\u770b\u770b [\u6211\u7684\u535a\u5ba2](https://www.codein.icu/cfround653/#toc-CF1374E1ReadingBookseasyversion) \u4e2d\u7684\u9898\u89e3\u3002\n\n## \u9898\u610f\n\n\u6bcf\u672c\u4e66\u90fd\u6709\u6743\u503c\uff0c\u6bcf\u672c\u4e66\u53ef\u80fd\u88ab A \u559c\u6b22\uff0c\u53ef\u80fd\u88ab B \u559c\u6b22\uff0c\u8981\u6c42\u9009\u51fa\u7684\u4e66\u4e2d\uff0cA \u4e0e B \u90fd\u81f3\u5c11\u559c\u6b22 $k$ \u672c\uff0c\u4e14\u6700\u5c11\u9009\u51fa $m$ \u672c\u4e66\uff0c\u6c42\u6700\u5c0f\u6743\u503c\u548c\u3002   \n\n\u76f8\u5bf9\u4e8e Easy Version\uff0c\u53ea\u6709\u4e00\u4e2a\u9650\u5b9a\u6761\u4ef6\u7684\u53d8\u5316\uff1a\u6700\u5c11\u9009\u51fa $m$ \u672c\u4e66\u3002  \n\n## \u89e3\u6cd5\n\n\u4f9d\u7136\u7ed9\u4e66\u5206\u7c7b\uff1a  \n\n0. A \u4e0e B \u90fd\u4e0d\u559c\u6b22  \n1. B \u559c\u6b22  \n2. A \u559c\u6b22  \n3. A \u4e0e B \u90fd\u559c\u6b22  \n\n\u8003\u8651\u5f3a\u5236\u9009\u5b9a $m$ \u672c\u4e66\u5bf9\u505a\u6cd5\u4ea7\u751f\u4ec0\u4e48\u5f71\u54cd\u3002  \n\n\u8bbe\u7b2c3\u79cd\u4e2d\u9009\u51fa $i$ \u672c\u4e66\uff0c\u5219\u7b2c1\u79cd\u3001\u7b2c2\u79cd\u4e2d\u90fd\u9700\u8981\u9009\u51fa $k - i$ \u672c\u4e66\u3002    \n\n\u8bbe\u679a\u4e3e\u5230 $i$ \u65f6\uff0c\u8fd8\u9700\u8981\u9009\u51fa\u7684\u4e66\u672c\u6570\u4e3a $\\text{need}$\uff0c\u66f4\u65b0\u5176\u503c\uff1a\n\n\n\n1. $i \\leq k$ \u65f6\uff0c\u9009\u51fa\u4e86 $i + 2 \\times (k - i)$ \u672c\u4e66\uff0c\u5373 $k \\times 2 - i$ \u672c\u4e66\uff0c\u8fd8\u9700\u8981 $m - k \\times 2 + i$ \u672c\u4e66\u3002\n2. $i > k$ \u65f6\uff0c\u9009\u51fa\u4e86 $i$ \u672c\u4e66\uff0c\u8fd8\u9700\u8981 $m - i$ \u672c\u4e66\u3002\n\n\u6240\u9700\u7684\u4e66\u5728\u7b2c0\u79cd\u3001\u7b2c1\u79cd\u672a\u88ab\u9009\u62e9\u90e8\u5206\u3001\u7b2c2\u79cd\u672a\u88ab\u9009\u62e9\u90e8\u5206\u9009\u51fa\u3002  \n\n\u7531\u4e8e\u679a\u4e3e\u5728\u7b2c3\u79cd\u4e2d\u9009\u62e9 $i$ \u672c\u4e66\uff0c\u56e0\u6b64\u65e0\u9700\u8003\u8651\u5728\u7b2c3\u79cd\u4e2d\u518d\u6b21\u9009\u62e9\u3002  \n\n\u8003\u8651\u9009\u62e9\u8303\u56f4\uff1a \n\n0. \u5168\u90e8\u53ef\u9009\n1. $[k - i + 1,R]$ \u53ef\u9009\n2. $[k - i + 1,R]$ \u53ef\u9009\n\n\u5728\u8be5\u8303\u56f4\u5185\u9009\u51fa $\\text{need}$ \u672c\u4e66\uff0c\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u5927\u5c0f\u4e3a $\\text{need}$ \u7684set\uff0c\u5728\u52a0\u5165\u3001\u5f39\u51fa\u5143\u7d20\u65f6\u66f4\u65b0 $\\text{sum}$ \u503c\u6765\u7ef4\u62a4\u6743\u503c\u548c\u5927\u5c0f\u3002  \n\n\u7531\u4e8e\u679a\u4e3e $i$ \u5355\u8c03\u9012\u589e\uff0c\u7b2c1\u79cd\u3001\u7b2c2\u79cd\u4e2d\u53ef\u9009\u8303\u56f4\u4e0d\u65ad\u6269\u5927\uff0c\u5411set\u4e2d\u63d2\u5165\u5143\u7d20\u8fdb\u884c\u7ef4\u62a4\u3002  \n\n$\\text{need}$ \u503c\u4e5f\u4f1a\u53d8\u5316\uff0c\u56e0\u6b64\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u53ef\u9009set\u4ee5\u5b58\u653e\u53ef\u9009\u7684\u5143\u7d20\u3002   \n\n\u8bb0\u9009\u62e9set\u4e3a $\\text{choose}$\uff0c\u53ef\u9009set\u4e3a $\\text{all}$\u3002  \n\n\u8003\u8651\u7528 $\\text{all}$ \u66f4\u65b0 $\\text{choose}$ \u7684\u8fc7\u7a0b\uff1a  \n\n1. $\\operatorname{size}(\\text{choose}) > \\text{need}$\uff0c\u5c06\u5176\u4e2d\u6700\u5927\u5143\u7d20\u8f6c\u79fb\u5230 $\\text{all}$ \u4e2d\u3002\n2. $\\operatorname{size}(\\text{choose}) < \\text{need}$\uff0c\u5c06 $\\text{all}$ \u4e2d\u6700\u5c0f\u5143\u7d20\u8f6c\u79fb\u5230\u5176\u4e2d\u3002\n3. $\\operatorname{size}(\\text{choose}) = \\text{need}$\uff0c\u6bd4\u8f83 $\\text{all}$ \u4e2d\u6700\u5c0f\u5143\u7d20\u4e0e $\\text{choose}$ \u4e2d\u6700\u5927\u5143\u7d20\uff0c\u82e5 $\\text{all}$ \u4e2d\u6700\u5c0f\u5143\u7d20\u66f4\u5c0f\u5219\u8fdb\u884c\u4ea4\u6362\u3002\n\n\u7531\u4e8e\u4e0d\u80fd\u4fdd\u5b58\u53d6\u5f97\u7b54\u6848\u65f6\u7684\u72b6\u6001\uff0c\u5219\u4fdd\u5b58\u53d6\u5f97\u7b54\u6848\u65f6\u7684 $i$ \u503c\uff0c\u518d\u6b21\u8fd0\u884c\u5230\u540e\u8f93\u51fa\u6240\u9009\u4e66\u53f7\u3002  \n\n## \u4ee3\u7801\n\n\u4e5f\u53ef\u4ee5\u770b[\u5b98\u65b9\u7684\u4ee3\u7801](https://codeforces.com/blog/entry/79517)\u3002\n\n```cpp\n#include <cstdio>\n#include <set>\n#include <algorithm>\nusing namespace std;\ntemplate <typename T>\nvoid read(T &r)\n{\n    static char c; r = 0;\n    for (c = getchar(); c > '9' || c < '0'; c = getchar());\n    for (; c >= '0' && c <= '9'; r = (r << 1) + (r << 3) + (c ^ 48), c = getchar());\n}\nconst int maxn = 2e5 + 100;\nint n, m, k;\nstruct node\n{\n    int t, id;\n    bool operator<(const node &b) const { return t == b.t ? id < b.id : t < b.t; }\n} A[4][maxn];\nint num[4];\nlong long sums[4][maxn];\ninline void init()\n{\n    read(n), read(m), read(k);\n    for (int i = 1; i <= n; ++i)\n    {\n        int t, a, b, p;\n        read(t), read(a), read(b), p = a * 2 + b;\n        A[p][++num[p]].id = i, A[p][num[p]].t = t;\n    }\n    for (int i = 0; i < 4; ++i) sort(A[i] + 1, A[i] + 1 + num[i]);\n    for (int i = 0; i < 4; ++i)  for (int j = 1; j <= num[i]; ++j) sums[i][j] = sums[i][j - 1] + A[i][j].t;\n}\nset<node> all, choose;\nint sum, need;\ninline void updateChoose()\n{\n    if (need < 0) need = 0;\n    set<node>::iterator it;\n    while (choose.size() > need) it = --choose.end(), sum -= it->t,all.insert(*it), choose.erase(it);\n    while (choose.size() < need && !all.empty()) sum += (it = all.begin())->t,choose.insert(*it), all.erase(it);\n    while (!choose.empty() && !all.empty() && (it = --choose.end())->t > all.begin()->t)\n    {\n        sum -= it->t, sum += all.begin()->t;\n        all.insert(*it), choose.erase(it);\n        choose.insert(*all.begin()), all.erase(all.begin());\n    }\n}\ninline void updateRange(int i)\n{\n    if(k - i >= 0)\n    {\n        need = m - k * 2 + i;\n        if(k - i + 1 <= num[1]) all.insert(A[1][k - i + 1]);\n        if(k - i + 1 <= num[2]) all.insert(A[2][k - i + 1]);\n    }\n    else need = m - i;\n}\nint main()\n{\n    init();\n    int start = 0;\n    while (start <= num[3] && (k - start > num[1] || k - start > num[2] || m - start - (k - start) * 2 < 0)) ++start;\n    if (start == num[3] + 1) { puts(\"-1\"); return 0; }\n    for (int i = 0; i < 3; ++i) for (int j = num[i]; j > (i == 0 ? 0 : k - start); --j) all.insert(A[i][j]);\n    long long ans = 1ll << 60;\n    int ansp = -1;\n    for (int i = start; i <= num[3]; ++i)\n    {\n        updateRange(i),updateChoose();\n        int res = sums[3][i] + sum;\n        if (k - i >= 0) res += sums[1][k - i] + sums[2][k - i];\n        if (res < ans && ((k - i >= 0) ? (i + 2 * (k - i) + choose.size() == m) : (i + choose.size() == m))) ans = res, ansp = i;\n    }\n    printf(\"%lld\\n\", ans);\n    all.clear(), choose.clear();\n    for (int i = 0; i < 3; ++i) for (int j = num[i]; j > (i == 0 ? 0 : k - start); --j) all.insert(A[i][j]);\n    for (int i = start; i <= num[3]; ++i)\n    {\n        updateRange(i),updateChoose();\n        if (i == ansp)\n        {\n            for (int j = 1; j <= i; ++j) printf(\"%d \", A[3][j].id);\n            if (k - i > 0) for (int j = 1; j <= k - i; ++j) printf(\"%d %d \", A[1][j].id, A[2][j].id);\n            for (set<node>::iterator it = choose.begin(); it != choose.end(); ++it) printf(\"%d \", it->id);\n            return 0;\n        }\n    }\n    puts(\"-1\");\n    return 0;\n}\n```\n\n",
        "postTime": 1593577730,
        "uid": 220159,
        "name": "Clouder",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1374E2 \u3010Reading Books (hard version)\u3011"
    },
    {
        "content": "### \u9898\u76ee\u94fe\u63a5  \n[https://www.luogu.com.cn/problem/CF1374E2](https://www.luogu.com.cn/problem/CF1374E2)   \n[https://codeforces.com/contest/1374/problem/E2](https://codeforces.com/contest/1374/problem/E2)  \n\n### \u9898\u76ee\u5927\u610f  \n\u5728 $n$ \u672c\u4e66\u4e2d\u9009\u51fa $m$ \u672c\uff0c\u4f7f\u5f97\u81f3\u5c11\u6709 $k$ \u672c Alice \u559c\u6b22\u3001\u6709 $k$ \u672c Bob \u559c\u6b22\uff0c\u5e76\u4e14\u603b\u9605\u8bfb\u65f6\u95f4\u6700\u5c0f\u3002  \n\n### \u601d\u8def  \n\u5728 [CF1374E1](https://www.luogu.com.cn/problem/CF1374E1) \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5~~\u5f88\u663e\u7136\u5730~~\u770b\u51fa\u76f4\u63a5\u7528\u8d2a\u5fc3\u5373\u53ef AC\u3002\u6839\u636eCF\u6bd4\u8d5bE1\u4e0eE2\u4e00\u8109\u76f8\u627f\u7684\u4f20\u7edf\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba4\u4e3a\u8fd9\u9898\u4e5f\u53ef\u4ee5\u7528\u8d2a\u5fc3\u6765\u505a\uff0c\u533a\u522b\u662f\u672c\u9898\u589e\u52a0\u4e86\u6070\u597d\u8bfb $m$ \u672c\u7684\u9650\u5236\uff0c\u8fd9\u5c31\u5bfc\u81f4\u4e0d\u80fd\u50cf E1 \u90a3\u6837\u65e0\u8111\u8d2a\u5fc3\u5730\u9009\u65f6\u6700\u5c11\u7684\u4e66\u6765\u8bfb\uff0c\u4f46\u8fd9\u5e76\u4e0d\u59a8\u788d\u6211\u4eec\u8d2a\u5fc3\u3002  \n\n\u9996\u5148\u5bf9\u4e66\u7684\u6027\u8d28\u8fdb\u884c\u5206\u7c7b\uff1a  \n- $00:$ Alice \u548c Bob \u90fd\u4e0d\u559c\u6b22  \n- $01:$ Alice \u559c\u6b22\uff0c Bob \u4e0d\u559c\u6b22  \n- $10:$ Alice \u4e0d\u559c\u6b22\uff0c Bob \u559c\u6b22  \n- $11:$ Alice \u548c Bob \u90fd\u559c\u6b22  \n\n\u56e0\u4e3a\u80af\u5b9a\u5e0c\u671b\u4f18\u5148\u9605\u8bfb\u82b1\u8d39\u65f6\u95f4\u66f4\u5c11\u7684\u4e66\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4f7f\u75284\u4e2a\u4f18\u5148\u961f\u5217\u7ef4\u62a4\u4e0a\u8ff04\u7c7b\u4e0d\u540c\u7684\u4e66\u3002\n\n\u5206\u597d\u7c7b\u4e4b\u540e\uff0c\u6211\u4eec\u50cf E1 \u90a3\u6837\u5148\u5728 $11$\u7c7b \u548c $01+10$\u7c7b \u4e2d\u4f18\u5148\u9009\u62e9\u9605\u8bfb\u65f6\u95f4\u66f4\u5c11\u7684\u4e66\uff0c\u76f4\u5230\u6ee1\u8db3 Alice \u548c Bob \u559c\u6b22\u7684\u4e66\u90fd\u81f3\u5c11\u6709 $k$ \u672c\u8fd9\u4e00\u6761\u4ef6\uff0c\u8bb0\u5f55\u5f53\u524d $m$ \u7684\u6d88\u8017\u60c5\u51b5\u3002\u4e3a\u4e86\u4e4b\u540e\u65b9\u4fbf\u8c03\u6574\uff0c\u6211\u9009\u62e9\u5c06\u9009\u51fa\u6765\u7684\u4e66\u4ece\u4f18\u5148\u961f\u5217\u4e2d\u5f39\u51fa\uff0c\u5e76\u52a0\u5165\u5bf9\u5e94\u7684\u56db\u4e2a\u7b54\u6848\u4f18\u5148\u961f\u5217\u4e2d\uff0c\u4f46\u5c06\u82b1\u8d39\u65f6\u95f4\u6700\u957f\u7684\u4e66\u653e\u5728\u5806\u9876\uff08\u540e\u9762\u5c06\u53d9\u8ff0\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u505a\uff09\u3002  \n\n\u6ee1\u8db3\u7b2c\u4e00\u4e2a\u8981\u6c42\u540e\uff0c\u4fbf\u5206\u4e3a\u4ee5\u4e0b\u4e09\u79cd\u60c5\u51b5\uff1a  \n1. \u5982\u679c\u9009\u51fa\u7684\u4e66\u6570\u91cf\u6070\u597d\u4e3a $m$\uff0c\u90a3\u4e48\u76f4\u63a5\u8f93\u51fa\u5f53\u524d\u7b54\u6848\u5373\u53ef\uff0c\u56e0\u4e3a\u8fd9\u5df2\u7ecf\u6ee1\u8db3\u4e86\u9605\u8bfb\u65f6\u95f4\u6700\u77ed\u3002 \n2. \u5982\u679c\u9009\u51fa\u7684\u4e66\u6570\u91cf\u5927\u4e8e $m$\uff0c\u90a3\u4e48\u8bf4\u660e $01+10$\u7c7b\u9009\u62e9\u5730\u592a\u591a\uff0c\u5c06 1 \u672c $01+10$\u7c7b \u6362\u6210 $11$\u7c7b \u53ef\u4ee5\u5728\u6ee1\u8db3\u201c\u4e24\u4eba\u90fd\u81f3\u5c11\u6709 $k$ \u672c\u559c\u6b22\u201d\u7684\u60c5\u51b5\u4e0b\u51cf\u5c11 1 \u672c\u4e66\u3002\u56e0\u6b64\u6211\u4eec\u4e0d\u65ad\u5c06 $01+10$\u7c7b \u6362\u4e3a $11$\u7c7b \u76f4\u5230\u6570\u91cf\u7b49\u4e8e $m$ \u5373\u53ef\u3002\u5982\u679c\u53d1\u73b0 $11$\u7c7b \u7684\u4e66\u4e0d\u591f\u7528\u6216\u8005\u7b54\u6848\u961f\u5217\u4e2d\u5df2\u7ecf\u6ca1\u6709 $01+10$ \u7c7b \u7684\u4e66\uff0c\u90a3\u4e48\u53ef\u4ee5\u5224\u5b9a\u65e0\u89e3\u3002  \n3. \u5982\u679c\u9009\u51fa\u7684\u4e66\u6570\u91cf\u5c0f\u4e8e $m$\uff0c\u90a3\u4e48\u8bf4\u660e\u8fd8\u9700\u8981\u66f4\u591a\u7684\u4e66\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6211\u4eec\u6709\u4e24\u79cd\u9009\u62e9\uff1a\u4e00\u662f\u5c06 $11$\u7c7b \u7684\u4e66\u6362\u4e3a $01+10$\u7c7b \u7684\u4e66\uff0c\u8fd9\u6837\u53ef\u4ee5\u5728\u6ee1\u8db3\u8981\u6c42\u7684\u60c5\u51b5\u4e0b\u589e\u52a0 1 \u672c\u9009\u51fa\u7684\u6570\u91cf\uff1b\u4e8c\u662f\u5728\u56db\u7c7b\u4e66\u4e2d\u9009\u62e9\u7528\u65f6\u6700\u77ed\u7684\u4e00\u672c\u76f4\u63a5\u52a0\u5165\u7b54\u6848\u961f\u5217\u4e2d\u3002    \n\u4e3a\u4e86\u4fdd\u8bc1\u603b\u9605\u8bfb\u65f6\u95f4\u6700\u5c0f\uff0c\u6211\u4eec\u9700\u8981\u4ece\u4e0a\u8ff0\u4e24\u79cd\u9009\u62e9\u4e2d\u9009\u51fa\u7528\u65f6\u8f83\u5c11\u7684\u4e00\u79cd\u65b9\u6848\uff0c\u8fd9\u91cc\u7684\u7528\u65f6\u6bd4\u8f83\u96be\u627e\u51fa\uff1a\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u9009\u62e9\uff0c\u5bf9\u7b54\u6848\u7684\u589e\u91cf\u4e3a \u201c $01+10$\u7c7b\u4e66\u7684\u6700\u5c0f\u7528\u65f6\u201d \u51cf\u53bb \u201c\u7b54\u6848\u5e8f\u5217\u4e2d $11$\u7c7b\u4e66\u7684\u6700\u957f\u7528\u65f6\u201d\uff1b\u800c\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u9009\u62e9\uff0c\u5bf9\u4e8e\u7b54\u6848\u7684\u589e\u91cf\u4e3a \u201c\u56db\u7c7b\u4e66\u4e2d\u7684\u6700\u5c0f\u7528\u65f6\u201d\u3002\u5c06\u8fd9\u4e24\u4e2a\u7528\u65f6\u589e\u91cf\u90fd\u6c42\u51fa\u9009\u62e9\u7528\u65f6\u77ed\u7684\u90a3\u4e2a\u5373\u53ef\u3002  \n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\u53ef\u80fd\u6709\u7684\u79cd\u7c7b\u4e66\u7684\u6570\u91cf\u4e0d\u591f\u5f53\u524d\u64cd\u4f5c\uff0c\u9700\u8981\u63d0\u524d\u5224\u65ad\u4f18\u5148\u961f\u5217\u662f\u5426\u4e3a\u7a7a\uff08\u4f3c\u4e4e\u7528\u6570\u7ec4\u4f1a\u6bd4\u4f18\u5148\u961f\u5217\u597d\u5199\uff1f\uff09  \n\n~~\uff08\u6211\u611f\u89c9\u524d\u9762\u6574\u4e2a\u8fc7\u7a0b\u90fd\u4fdd\u8bc1\u4e86\u8d2a\u5fc3\u7684\u6b63\u786e\u6027\uff0c\u4e0d\u8bc1\u81ea\u660e\uff0c\u8bc1\u660e\u7565\uff09~~    \n\n\u4e0a\u8ff0\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u5bf9\u4f18\u5148\u961f\u5217\u6700\u591a\u6267\u884c $O(n)$ \u6b21\u64cd\u4f5c\uff0c\u800c\u4f18\u5148\u961f\u5217\u6bcf\u6b21\u63d2\u5165\u4e0e\u5f39\u51fa\u64cd\u4f5c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\log n)$\uff0c\u56e0\u6b64\u603b\u590d\u6742\u5ea6\u4e3a $O(n\\log n)$\u3002  \n\u5f53\u7136\uff0c\u4e0a\u8ff0\u64cd\u4f5c\u4e2d\u7684\u4f18\u5148\u961f\u5217\u53ef\u4ee5\u6539\u4e3a\u6570\u7ec4+\u9884\u5904\u7406\u6392\u5e8f\u5b9e\u73b0\uff0c\u4f46\u9884\u5904\u7406\u590d\u6742\u5ea6 $O(n\\log n)$\uff0c\u548c\u4f18\u5148\u961f\u5217\u590d\u6742\u5ea6\u76f8\u5dee\u4e0d\u5927\u3002  \n\n\u6211\u7684\u65b9\u6cd5\u548c\u5b98\u65b9\u4e0d\u540c\u7684\u662f\uff0c\u4e0d\u9700\u8981\u679a\u4e3e\u5728 $11$\u7c7b \u4e66\u4e2d\u9009\u62e9\u591a\u5c11\u672c\uff0c\u56e0\u6b64~~\u53ef\u80fd~~\u5bfc\u81f4\u4e86\u5e38\u6570\u4e0a\u7684\u63d0\u5347\uff08G++17\u4e0b\u6211\u7684\u4ee3\u7801171ms\uff0c\u5b98\u65b9\u9898\u89e3592ms\uff0c\u672c\u9898\u6d1b\u8c37\u4e0a\u7684\u53e6\u5916\u4e00\u7bc7\u9898\u89e3280ms\uff09  \n\n### code\n``` cpp\n#include <cstdio>\n#include <queue>\nusing namespace std;\nconst int maxn = 2e5 + 7;\nint n, m, k, tot, tmp[4], flag = 1;\nstruct node\n{\n    int no, t;\n    bool operator<(const node &rhs) const { return t > rhs.t; }\n};\npriority_queue<node> book[4], ans[4];\nint switchD(int v)\n{\n    node x = book[v].top();\n    tot += x.t, x.t = -x.t;\n    ans[v].push(x), book[v].pop();\n    --m;\n}\nint switchR(int v)\n{\n    node x = ans[v].top();\n    tot += x.t, x.t = -x.t;\n    book[v].push(x), ans[v].pop();\n    ++m;\n}\nint main()\n{\n    scanf(\"%d%d%d\", &n, &m, &k);\n    for (int i = 1, t, a, b; i <= n; ++i) scanf(\"%d%d%d\", &t, &a, &b), book[a << 1 | b].push({i, t});\n    while (k-- && flag)\n    {\n        for (int i = 1; i < 4; ++i) tmp[i] = !book[i].empty();\n        if ((tmp[1] + tmp[2] < 2) && tmp[3])\n            switchD(3); // 01\u621610\u7c7b\u4e66\u7684\u6570\u91cf\u4e0d\u591f\n        else if ((!tmp[3]) && tmp[1] && tmp[2])\n            switchD(1), switchD(2); // 11\u7c7b\u4e66\u7684\u6570\u91cf\u4e0d\u591f\n        else if (tmp[3] + tmp[2] + tmp[1] == 3)\n            if (book[1].top().t + book[2].top().t > book[3].top().t)\n                switchD(3); // 11\u7c7b\u6bd401+10\u7c7b\u7528\u65f6\u77ed\n            else\n                switchD(1), switchD(2); // 11\u7c7b\u6bd401+10\u7c7b\u7528\u65f6\u957f\n        else\n            flag = 0; // \u65e0\u89e3\u7684\u60c5\u51b5\u4e0b\u5c06flag\u7f6e0\n    }\n    while (m < 0 && flag)\n    {\n        tmp[1] = !ans[1].empty(), tmp[2] = !ans[2].empty(), tmp[3] = !book[3].empty();\n        if (tmp[1] && tmp[2] && tmp[3])\n            switchR(1), switchR(2), switchD(3); // \u5f53\u524d\u7b54\u6848\u672c\u6570\u5927\u4e8em\uff0c\u5c0601+10\u7c7b\u6362\u621011\u7c7b\n        else\n            flag = 0;\n    }\n    while (m > 0 && flag)\n    {\n        int now = -1, v = 1e9;\n        for (int i = 0; i < 4; ++i)\n            if ((!book[i].empty()) && v > book[i].top().t) now = i, v = book[i].top().t;\n        tmp[1] = !book[1].empty(), tmp[2] = !book[2].empty(), tmp[3] = !ans[3].empty();\n        if (tmp[1] && tmp[2] && tmp[3] && v - ans[3].top().t > book[2].top().t + book[1].top().t)\n            switchD(1), switchD(2), switchR(3); // \u5982\u679c\u5f53\u524d 11\u7c7b \u6362 01+10\u7c7b \u9009\u62e9\u7528\u65f6\u66f4\u77ed\n        else if (now == -1)                     // \u627e\u4e0d\u5230\u53ef\u4ee5\u6362\u6216\u8005\u52a0\u5165\u7b54\u6848\u961f\u5217\u4e2d\u7684\u4e66\n            flag = 0;\n        else\n            switchD(now);\n    }\n    printf(\"%d\\n\", flag ? tot : -1);\n    for (int i = 0; i < 4 && flag; ++i)\n        while (!ans[i].empty()) printf(\"%d \", ans[i].top().no), ans[i].pop();\n    return 0;\n}\n```",
        "postTime": 1618866804,
        "uid": 39740,
        "name": "sdxjzsq",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF1374E2 \u3010Reading Books (hard version)\u3011"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/dd-d/p/16418812.html)  \n\u601d\u8def\u6bd4\u8f83\u597d\u60f3\u4f46\u5199\u8d77\u6765\u6bd4\u8f83\u963f\u62c9\u4e01\uff0c\u5927\u5206\u8ba8\u3002\n\u5927\u6982\u662f\u8bb0\u5fc6\u4e2d\u7b2c\u4e00\u6b21\u72ec\u7acb\u505a\u51fa \\*2500  \n\u76ee\u524d\u662f cf \u6700\u4f18\u89e3 rk1\n### Sol  \n\u9996\u5148\u628a\u4e66\u6309\u65f6\u95f4\u6392\u5e8f\u3002  \n\u7136\u540e\u6211\u4eec\u5047\u5b9a\u524d $m$ \u672c\u4e66\u5373\u4e3a\u7b54\u6848\u3002\u8003\u8651\u4e00\u672c\u4e66\u4e00\u672c\u4e66\u6362\u8fdb\u53bb\u3002  \n\u73b0\u5728\u6211\u4eec\u7684\u76ee\u6807\u662f\u627e\u5230\u4e00\u79cd\u5408\u6cd5\u65b9\u6848\uff0c\u4f46\u4e0d\u8981\u6c42\u65f6\u95f4\u6700\u4f18\u3002  \n\u8bb0 $c1$ \u8868\u793a\u4e24\u8005\u90fd\u559c\u6b22\u7684\u4e66\u7684\u6570\u91cf\uff0c$c2$ \u4e3a Alice \u559c\u6b22\uff0c$c3$ \u4e3a Bob \u559c\u6b22\uff0c$c4$ \u4e3a\u90fd\u4e0d\u559c\u6b22\u3002  \n\u82e5\u5f53\u524d\u8fd9\u672c\u4e66\u53ea\u6709 Alice \u559c\u6b22\u5e76\u4e14 $c1+c2<k,c1+c3>k$ \u90a3\u4e48\u53ef\u4ee5\u628a\u8fd9\u672c\u4e66\u6362\u8fdb\u53bb\u3002  \n\u53ea\u6709 Bob \u559c\u6b22\u540c\u7406\u3002  \n\u82e5\u5f53\u524d\u8fd9\u672c\u4e66\u4e24\u8005\u90fd\u559c\u6b22\uff0c\u5e76\u4e14 $c1+c2 \\ge k,c1+c3<k$ \u6216 $c1+c2<k,c1+c3 \\ge k$\uff0c\u90a3\u4e48\u53ef\u4ee5\u628a\u8fd9\u672c\u4e66\u6362\u8fdb\u53bb\u3002  \n\u662f\u5426\u5408\u6cd5\u505a\u5b8c\u4e86\uff0c\u7136\u540e\u8003\u8651\u66f4\u4f18\u7684\u65b9\u6848\u3002  \n\u82e5\u6709\u4e00\u79cd\u53ea\u6709\u4e00\u4e2a\u4eba\u559c\u6b22\u7684\u591a\u4e86\uff0c\u90a3\u4e48\u53ef\u4ee5\u8003\u8651\u7528\u4e00\u672c\u4e24\u4eba\u90fd\u4e0d\u559c\u6b22\u7684\u4e66\u653e\u8fdb\u53bb\u770b\u770b\u662f\u5426\u66f4\u4f18\u3002  \n\u4e00\u672c\u4e24\u4eba\u90fd\u559c\u6b22\u7684\u548c\u4e00\u672c\u4e24\u4eba\u90fd\u4e0d\u559c\u6b22\u7684\u53ef\u4ee5\u66ff\u6362\u4e00\u672c Alice \u559c\u6b22\u7684\u548c\u4e00\u672c Bob \u559c\u6b22\u7684\u3002  \n\u7136\u540e\u5927\u529b\u5206\u8ba8\u5373\u53ef\u3002\u60c5\u51b5\u6709\u70b9\u591a\uff0c\u6211 WA \u4e86 $6$ \u53d1\u3002\n[link](https://codeforces.com/contest/1374/submission/162004504 \"link\")",
        "postTime": 1656386134,
        "uid": 167999,
        "name": "dd_d",
        "ccfLevel": 6,
        "title": "\u3010\u9898\u89e3\u3011CF1374E2 Reading Books (hard version)"
    },
    {
        "content": "\u6211\u4eec\u628a\u4e66\u5206\u62104\u7c7b \u3002\n\n- $a_i=b_i=1$ \u8bb0\u4e3a A\n- $a_i=1,b_i=0$ \u8bb0\u4e3a B\n- $a_i=0,b_i=1$ \u8bb0\u4e3a C\n- $a_i=b_i=0$ \u8bb0\u4e3a D\n\n\u663e\u7136\u6709\u4e00\u4e2a\u8d2a\u5fc3\u505a\u6cd5\u662f\u5bf9\u6bcf\u7c7b\u6309 $t_i$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f \uff0c\u679a\u4e3e A \u7684\u6570\u91cf $x$ \uff0c\u5219 B,C \u7684\u6570\u91cf\u4e3a $k-x$ \uff0c\u7136\u540e\u4ece\u5269\u4e0b\u6240\u6709\u4e66\u4e2d\u9009 $m-k-k+x$ \u672c \u3002\u590d\u6742\u5ea6 $O(n\\log n+m^2)$ \u3002\n\n\u6211\u4eec\u8003\u8651\u52a0\u4e00\u672c A \u7c7b\u4e66\u5bf9\u7b54\u6848\u7684\u5f71\u54cd \uff0c\u52a0\u4e00\u672c A \u7684\u8d39\u7528\uff08\u5355\u8c03\u4e0d\u51cf\uff09\uff0c\u51cf\u4e00\u672c B \u7c7b\u4e66\u7684\u8d39\u7528\uff08\u5355\u8c03\u4e0d\u589e\uff09\uff0c\u51cf\u4e00\u672c C \u7c7b\u4e66\u7684\u8d39\u7528\uff08\u5355\u8c03\u4e0d\u589e\uff09\uff0c\u52a0\u4e00\u672c\u5269\u4e0b\u4e66\u4e2d\u7684\u8d39\u7528 \uff0c\u8fd9\u672c\u4e66\u8981\u4e48\u662f\u51cf\u4e0b\u6765\u7684 B \u6216 C \u7c7b\u4e66 \uff0c\u8981\u4e48\u662f \u539f\u5148\u5269\u4e0b\u4e66\u4e2d\u8d39\u7528\u6700\u5c0f\u7684\uff08\u5355\u8c03\u4e0d\u51cf\uff09\uff0c\u56e0\u6b64\u5b83\u5bf9\u7b54\u6848\u8d21\u732e\u4f1a\u9010\u6e10\u51cf\u5c0f\uff08\u53ef\u80fd\u4f9d\u7136\u4e0d\u4e25\u8c28 \uff0c\u4f46\u5927\u81f4\u5c31\u662f\u8fd9\u6837\uff09 \uff0c\u56e0\u6b64\u5b83\u662f\u4e2a\u5355\u5cf0\u51fd\u6570 \uff0c\u53ef\u4ee5\u4e09\u5206 \u3002\n\n\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define inf 10000000000001\n#define int long long\nusing namespace std;\nint n,m,k,ans=inf,p[1000000],m1,m2,m3,m4;\nstruct arr\n{\n\tint x,y;\n}a[200005],b[200005],c[200005],d[200005];\nbool cmp(arr x,arr y)\n{\n\treturn x.x<y.x;\n}\nint check(int x)\n{\n\tif(x<0||x>m1) return inf;\n\tif(k+k-x>m) return inf;\n\tif(k-x>m2) return inf;\n\tif(k-x>m3) return inf;\n\tint p1=1,p2=1,p3=1,p4=1,s=0;\n\tfor(;p1<=x;p1++) s+=a[p1].x;\n\tfor(;p2<=k-x;p2++) s+=b[p2].x;\n\tfor(;p3<=k-x;p3++) s+=c[p3].x;\n\twhile(p1+p2+p3+p4-4<m)\n\t{\n\t\tif(a[p1].x<=b[p2].x&&a[p1].x<=c[p3].x&&a[p1].x<=d[p4].x) s+=a[p1++].x;\n\t\telse\n\t\t{\n\t\t\tif(b[p2].x<=c[p3].x&&b[p2].x<=d[p4].x) s+=b[p2++].x;\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(c[p3].x<=d[p4].x) s+=c[p3++].x; else s+=d[p4++].x;\n\t\t\t}\n\t\t}\n\t}\n\tif(s>=ans) return s;\n\tans=s;\n\tfor(int i=1;i<p1;i++) p[i]=a[i].y;\n\tfor(int i=1;i<p2;i++) p[i+p1-1]=b[i].y;\n\tfor(int i=1;i<p3;i++) p[i+p1+p2-2]=c[i].y;\n\tfor(int i=1;i<p4;i++) p[i+p1+p2+p3-3]=d[i].y;\n\treturn s;\n}\nsigned main()\n{\n\tscanf(\"%lld%lld%lld\",&n,&m,&k);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint x,y,z;\n\t\tscanf(\"%lld%lld%lld\",&x,&y,&z);\n\t\tif(y&z) a[++m1]={x,i};\n\t\telse\n\t\t{\n\t\t\tif(y) b[++m2]={x,i};\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(z) c[++m3]={x,i}; else  d[++m4]={x,i};\t\n\t\t\t}\n\t\t}\n\t}\n\ta[++m1]={inf,0};\n\tb[++m2]={inf,0};\n\tc[++m3]={inf,0};\n\td[++m4]={inf,0};\n\tsort(a+1,a+m1+1,cmp);\n\tsort(b+1,b+m2+1,cmp);\n\tsort(c+1,c+m3+1,cmp);\n\tsort(d+1,d+m4+1,cmp);\n\tint l=0,r=m1,mid=(l+r)>>1;\n\twhile(l<=r)\n\t{\n\t\tint t1=check(mid-1),t2=check(mid),t3=check(mid+1);\n\t\tif(t1>t2&&t2<t3) break;\n\t\tif(t1>t2||(t1==t2&&t1==inf)) l=mid+2; else r=mid-2;\n\t\tmid=(l+r)>>1;\n\t}\n\tif(ans==inf)\n\t{\n\t\tputs(\"-1\");\n\t\treturn 0;\n\t}\n\tprintf(\"%lld\\n\",ans);\n\tfor(int i=1;i<=m;i++) printf(\"%lld \",p[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1634173550,
        "uid": 112921,
        "name": "zhimao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1374E2 Reading Books (hard version)"
    }
]