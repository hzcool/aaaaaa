[
    {
        "content": "\u4e00\u4e2a\u663e\u7136\u7684DP\uff0c\u65b9\u7a0b\u5c31\u4e0d\u518d\u8d58\u8ff0\u4e86\uff0c\u524d\u4eba\u4e4b\u8ff0\u5907\u77e3\u3002\n\n\u6211\u5199\u4e86\u4e00\u53d1\u674e\u8d85\u7ebf\u6bb5\u6811\u5408\u5e76\u7684\u505a\u6cd5\u3002\u5927\u81f4\u8fc7\u7a0b\u5c31\u662f\u5728\u5408\u5e76\u7ebf\u6bb5\u6811\u7684\u65f6\u5019\u5148\u5408\u5e76\u7ed3\u6784\uff0c\u6700\u540e\u518d\u628a\u6839\u8282\u70b9\u7684\u4fe1\u606f\u5408\u5e76\u8d77\u6765\u3002\n\n\u770b\u522b\u4eba\u7684\u9898\u89e3\uff0c\u5f88\u591a\u795e\u4ed9\u597d\u50cf\u8981\u4e48\u4e0d\u4f1a\u8bc1\u660e\u590d\u6742\u5ea6\uff0c\u8981\u4e48\u8ba4\u4e3a\u662f$O(n\\log^2 n)$\u7684\uff08\u503c\u57df\u540c\u9636\uff09\u3002\n\n\u901a\u8fc7\u4e00\u4e9b\u601d\u8003\uff0c\u6211\u8ba4\u4e3a\u5176\u590d\u6742\u5ea6\u4e3a$O(n\\log n)$\u7684\u3002\u4e0b\u9762\u7ed9\u51fa\u5927\u81f4\u7684\u8bc1\u660e\uff1a\n\n* \u73b0\u5728\u4ec5\u7814\u7a76\u674e\u8d85\u7ebf\u6bb5\u6811\u5408\u5e76\u7684\u590d\u6742\u5ea6\uff0c\u5176\u4ed6\u90e8\u5206\u590d\u6742\u5ea6\u663e\u7136\u4e0d\u4f1a\u8d85\u8fc7$O(n\\log n)$\uff1b\n\n* \u5728\u52a8\u6001\u5f00\u70b9\u7684\u674e\u8d85\u7ebf\u6bb5\u6811\u4e2d\uff0c\u6bcf\u4e2a\u70b9\u90fd\u6070\u597d\u4fdd\u5b58\u4e86\u4e00\u6761\u76f4\u7ebf\u7684\u4fe1\u606f\uff0c\u5e76\u4e14\u6bcf\u6761\u76f4\u7ebf\u7684\u4fe1\u606f\u6700\u591a\u5728\u4e00\u4e2a\u70b9\u88ab\u8bb0\u5f55\u3002\u719f\u6089\u57fa\u7840\u674e\u8d85\u6811\u7684\u795e\u4ed9\u4eec\u5e94\u8be5\u80fd\u591f\u901a\u8fc7\u674e\u8d85\u7ebf\u6bb5\u6811\u7684\u5b9e\u73b0\u5f97\u51fa\u8fd9\u4e2a\u7ed3\u8bba\uff1b\n\n* $merge$\u51fd\u6570\u5408\u5e76\u5b50\u6811\u65f6\u5982\u679c\u6709\u81f3\u5c11\u4e00\u4e2a\u4e3a\u7a7a\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u7684\u590d\u6742\u5ea6\u53ef\u4ee5\u4e0d\u5355\u72ec\u8003\u8651\uff0c\u56e0\u4e3a\u5b83\u548c\u4e24\u4e2a\u5b50\u6811\u90fd\u4e0d\u4e3a\u7a7a\u7684\u590d\u6742\u5ea6\u662f\u76f8\u5173\u7684\uff1b\n\n* \u5b9a\u4e49\u4e00\u6761\u76f4\u7ebf\u7684\u6df1\u5ea6\u4e3a\u8bb0\u5f55\u5b83\u4fe1\u606f\u7684\u8282\u70b9\u7684\u6df1\u5ea6\uff0c\u7279\u522b\u5730\uff0c\u5982\u679c\u4e00\u6761\u76f4\u7ebf\u7684\u4fe1\u606f\u6d88\u5931\u4e86\uff0c\u90a3\u4e48\u5b83\u7684\u6df1\u5ea6\u4e3a$maxdep+1$\u3002\u5bf9\u4e8e\u4e24\u4e2a\u5b50\u6811\u90fd\u4e0d\u4e3a\u7a7a\u7684\u5408\u5e76\u8fc7\u7a0b\uff0c\u66f4\u65b0\u7b54\u6848\u5373\u5408\u5e76\u6839\u8282\u70b9\u7684\u76f4\u7ebf\u4fe1\u606f\u7684\u8fc7\u7a0b\u8981\u4e48\u5c31\u662f\u628a\u67d0\u6761\u76f4\u7ebf\u7684\u6df1\u5ea6\u76f4\u63a5\u8bbe\u4e3a$maxdep+1$\uff0c\u8981\u4e48\u5c31\u662f\u628a\u4e00\u6761\u76f4\u7ebf\u7684\u6df1\u5ea6$++$\u3002\u6839\u636e\u52bf\u80fd\u5206\u6790\uff0c\u8fd9\u91cc\u6700\u591a\u8fdb\u884c$O(n\\times maxdep)$\u6b21\uff0c\u5373$O(n \\log n)$\u6b21\u3002\n\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cctype>\nusing namespace std;\n#define G getchar()\nint read()\n{\n\tint x=0; bool flg=false; char ch=G;\n\tfor (;!isdigit(ch);ch=G) if (ch=='-') flg=true;\n\tfor (;isdigit(ch);ch=G) x=(x<<3)+(x<<1)+(ch^48);\n\treturn flg?-x:x;\n}\nconst int Base=1e5,MAXW=2e5;\ntypedef long long ll;\nconst ll INF=0x7fffffffffffffffLL;\n\nint n,a[100010],b[100010];\nll dp[100010];\nstruct Rec{\n\tll b;\n\tint k;\n}rec[100010];\nll getval(int id,int pos)\n{\n\tpos-=Base;\n\treturn 1LL*pos*rec[id].k+rec[id].b;\n}\nstruct Edge{\n\tint to,nxt;\n}edge[200010];\nint cnt=1,last[100010];\ninline void addedge(int x,int y)\n{\n\tedge[++cnt]=(Edge){y,last[x]},last[x]=cnt;\n\tedge[++cnt]=(Edge){x,last[y]},last[y]=cnt;\n}\n#define mid (l+r>>1)\nstruct Node{\n\tint lson,rson,id;\n}node[100010];\nint idtot,rt[100010];\nvoid update(int &cur,int l,int r,int y)\n{\n\tif (!cur) return node[cur=y]=(Node){0,0,node[y].id},void();\n\tif (getval(node[cur].id,l)>=getval(node[y].id,l)&&getval(node[cur].id,r)>=getval(node[y].id,r))\n\t\treturn node[cur].id=node[y].id,void();\n\tif (getval(node[cur].id,l)<=getval(node[y].id,l)&&getval(node[cur].id,r)<=getval(node[y].id,r))\n\t\treturn;\n\tint &a=node[cur].id,&b=node[y].id;\n\tif (rec[a].k<rec[b].k)\n\t\tif (getval(a,mid)>getval(b,mid)) swap(a,b),update(node[cur].rson,mid+1,r,y);\n\t\telse update(node[cur].lson,l,mid,y);\n\telse\n\t\tif (getval(a,mid)>getval(b,mid)) swap(a,b),update(node[cur].lson,l,mid,y);\n\t\telse update(node[cur].rson,mid+1,r,y);\n}\nint merge(int x,int y,int l,int r)\n{\n\tif (!x||!y) return x|y;\n\tif (l==r) return getval(node[x].id,l)>getval(node[y].id,l)?y:x;\n\tnode[x].lson=merge(node[x].lson,node[y].lson,l,mid);\n\tnode[x].rson=merge(node[x].rson,node[y].rson,mid+1,r);\n\tupdate(x,l,r,y);\n\treturn x;\n}\nll query(int cur,int l,int r,int pos)\n{\n\tif (!cur) return INF;\n\tll res=getval(node[cur].id,pos);\n\tif (l==r) return res;\n\tif (pos<=mid) return min(res,query(node[cur].lson,l,mid,pos));\n\treturn min(res,query(node[cur].rson,mid+1,r,pos));\n}\n#undef mid\nvoid dfs(int cur,int fat)\n{\n\tfor (int i=last[cur];i;i=edge[i].nxt)\n\t\tif (edge[i].to^fat)\n\t\t\tdfs(edge[i].to,cur),rt[cur]=merge(rt[cur],rt[edge[i].to],0,MAXW);\n\tif (rt[cur]) dp[cur]=query(rt[cur],0,MAXW,a[cur]+Base);\n\trec[cur]=(Rec){dp[cur],b[cur]};\n\tnode[++idtot]=(Node){0,0,cur};\n\tupdate(rt[cur],0,MAXW,idtot);\n}\nint main()\n{\n\tn=read();\n\tfor (int i=1;i<=n;i++) a[i]=read();\n\tfor (int i=1;i<=n;i++) b[i]=read();\n\tfor (int i=2;i<=n;i++) addedge(read(),read());\n\tdfs(1,0);\n\tfor (int i=1;i<=n;i++) printf(\"%I64d \",dp[i]); putchar('\\n');\n\treturn 0;\n}\n```\n\n\n\u5982\u679c\u6709\u4efb\u4f55\u9519\u6f0f\uff0c\u656c\u8bf7\u6279\u8bc4\u6307\u6b63\uff01\u613f\u591a\u4ea4\u6d41\u5b66\u4e60\u3002",
        "postTime": 1571885064,
        "uid": 38182,
        "name": "dqa2022",
        "ccfLevel": 9,
        "title": "CF932F Escape Through Leaf \u9898\u89e3"
    },
    {
        "content": "\u5076\u4e0d\u4f1a\u674e\u8d85\u7ebf\u6bb5\u6811\u5408\u5e76\u600e\u4e48\u529e\uff1f\n\n\u5f53\u7136\u662f\u4e07\u80fd\u7684 dsu on tree \u5566qwq\n\n\u6211\u4eec\u6709 dp \u5f0f\u5b50 $dp_x=dp_y+a_xb_y$\uff08$y$ \u5728 $x$ \u7684\u5b50\u6811\u5185\uff09\n\n\u7136\u540e\u628a $dp_y$ \u622a\u8ddd\uff0c$b_y$ \u89c6\u4f5c\u659c\u7387\uff0c\u63d2\u5165\u8fd9\u4e2a\u76f4\u7ebf\u3002\n\n\u90a3\u4e48 $dp_x$ \u5c31\u662f\u8fd9\u4e9b\u76f4\u7ebf\u548c $x=a_x$ \u7684\u4ea4\u70b9\u7684 $y$ \u7684\u6700\u5c0f\u503c\u3002\u674e\u8d85\u7ebf\u6bb5\u6811\u5bf9\u4e0d\u5bf9\uff01\uff08\u8001\u751f\u5e38\u8c08\uff09\n\n\u6bcf\u6b21\u628a\u9664\u4e86\u91cd\u513f\u5b50\u7684\u5b50\u6811\u5148\u8ba1\u7b97\uff0c\u6bcf\u6b21\u8ba1\u7b97\u5b8c\u6e05\u7a7a\uff0c\u6700\u540e\u518d\u8ba1\u7b97\u91cd\u513f\u5b50\uff0c\u8fd9\u65f6\u4e0d\u7528\u6e05\u7a7a\u3002\n\n\u518d\u628a\u524d\u9762\u7684\u5b50\u6811\u91cd\u65b0\u63d2\u5165\u4e00\u6b21\uff0c\u6700\u540e\u6c42\u73b0\u5728\u6b63\u5728\u6c42\u7684\u8282\u70b9\u5c31\u597d\u4e86qwq\n\n\u674e\u8d85\u7ebf\u6bb5\u6811\u8981\u5b9e\u73b0\u4e00\u4e2a clear\u3002\u3002\n\n\u674e\u8d85\u7ebf\u6bb5\u6811\u63d2\u5165\u76f4\u7ebf\u662f\u4e00\u4e2a $\\log$ \u7684\uff0cdsu \u7684\u590d\u6742\u5ea6\u662f $O(n\\log n)\\times O(ds)=O(n\\log^2 n)$ \u7684\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define ls w<<1\n#define rs w<<1|1\n#define int long long\nusing namespace std;\nvector<int> a[100005];\nint dp[100005];\nint aa[100005],b[100005];\nint size[100005];\nint son[100005];\nstruct line\n{\n\tdouble k,b;\n\tint id;\n};\ndouble f(line p,int x)\n{\n\treturn p.k*x+p.b;\n}\nstruct LiChao_Segment_Tree\n{\n\tline t[800005];\n\tint rubbishbin[800005];\n\tbool v[800005];\n\tint del;\n\tvoid insert(int w,int l,int r,line x,int L,int R)\n\t{\n\t\tint mid=L+R>>1;\n\t\tif(L>=l&R<=r)\n\t\t{\n\t\t\tif(!v[w])\n\t\t\t\tv[w]=1,rubbishbin[del++]=w;\n\t\t\tif(!t[w].id||f(t[w],mid)>f(x,mid)) swap(t[w],x);\n\t\t\tdouble crs=(t[w].b-x.b)/(x.k-t[w].k);\n\t\t\tif(L==R||t[w].k==x.k||crs<1.0*L||crs>1.0*R||!x.id) return;\n\t\t\tif(x.k>t[w].k) insert(ls,l,r,x,L,mid);\n\t\t\telse insert(rs,l,r,x,mid+1,R);\n\t\t\treturn;\n\t\t}\n\t\tif(l<=mid)\n\t\t\tinsert(ls,l,r,x,L,mid);\n\t\tif(r>mid)\n\t\t\tinsert(rs,l,r,x,mid+1,R);\n\t}\n\tline ask(int w,int x,int L,int R)\n\t{\n\t\tif(L==R) return t[w];\n\t\tint mid=L+R>>1;\n\t\tline r;\n\t\tif(x<=mid)\n\t\t\tr=ask(ls,x,L,mid);\n\t\telse\n\t\t\tr=ask(rs,x,mid+1,R);\n\t\treturn (!r.id||f(r,x)>f(t[w],x))?t[w]:r;\n\t}\n\tvoid clear()\n\t{\n\t\tfor(int i=0;i<del;i++)\n\t\t\tv[rubbishbin[i]]=0,t[rubbishbin[i]].id=t[rubbishbin[i]].k=t[rubbishbin[i]].b=0;\n\t\tdel=0;\n\t}\n}tr;\nstruct RealDS\n{\n\tvoid add(int dp,int b)\n\t{\n\t\ttr.insert(1,-1e5,1e5,line({(double)b,(double)dp,1}),-1e5,1e5);\n\t}\n\tint ask(int x)\n\t{\n\t\treturn f(tr.ask(1,x,-1e5,1e5),x);\n\t}\n\tvoid clear()\n\t{\n\t\ttr.clear();\n\t}\n}t;\nvoid dfssize(int d,int fa)\n{\n\tsize[d]=1;\n\tfor(int i=0;i<a[d].size();i++)\n\t{\n\t\tif(a[d][i]==fa) continue;\n\t\tdfssize(a[d][i],d);\n\t\tif(size[son[d]]<size[a[d][i]])\n\t\t\tson[d]=a[d][i];\n\t\tsize[d]+=size[a[d][i]];\n\t}\n}\nvoid add(int d,int fa)\n{\n\tt.add(dp[d],b[d]);\n\tfor(int i=0;i<a[d].size();i++)\n\t\tif(a[d][i]!=fa)\n\t\t\tadd(a[d][i],d);\n}\nvoid dfs(int d,int fa)\n{\n\tint i;\n\tfor(i=0;i<a[d].size();i++)\n\t{\n\t\tif(a[d][i]==fa||a[d][i]==son[d]) continue;\n\t\tdfs(a[d][i],d);\n\t\tt.clear();\n\t}\n\tif(son[d]) dfs(son[d],d);\n\tfor(i=0;i<a[d].size();i++)\n\t{\n\t\tif(a[d][i]==fa||a[d][i]==son[d]) continue;\n\t\tadd(a[d][i],d);\n\t}\n\tdp[d]=t.ask(aa[d]);\n\tt.add(dp[d],b[d]);\n}\nsigned main()\n{\n\tint n,i,x,y,k;\n\tscanf(\"%lld\",&n);\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%lld\",&aa[i]);\n\tfor(i=1;i<=n;i++)\n\t\tscanf(\"%lld\",&b[i]);\n\tfor(i=1;i<n;i++)\n\t{\n\t\tscanf(\"%lld%lld\",&x,&y);\n\t\ta[x].push_back(y);\n\t\ta[y].push_back(x);\n\t}\n\tdfssize(1,0);\n\tdfs(1,0);\n\tfor(i=1;i<=n;i++)\n\t\tprintf(\"%lld \",dp[i]);\n}\n```\n",
        "postTime": 1622023979,
        "uid": 203623,
        "name": "Ntokisq",
        "ccfLevel": 0,
        "title": "CF932F Escape Through Leaf"
    },
    {
        "content": "# CF932F(\u674e\u8d85\u7ebf\u6bb5\u6811+dp)\n\n\u6b64\u9898\u53c8\u662f\u65b0\u73a9\u6cd5, \u674e\u8d85\u7ebf\u6bb5\u6811\u5408\u5e76\u4f18\u5316$dp$\n\n\u4e00\u4e2a\u663e\u7136\u7684$\\Theta(n^2)dp$: $dp[x]$\u8868\u793a\u4ecex\u51fa\u53d1\u5230\u53f6\u5b50\u8282\u70b9\u7684\u6700\u5c0f\u4ee3\u4ef7\n\n$dp[x] = \\min(dp[y] + a[x] * b[y]) ~~(y \\in subtree(x))$ \n\n\u5982\u679c\u6211\u4eec\u5c06$b[y]$\u770b\u6210\u659c\u7387, $dp[y]$\u770b\u6210\u7eb5\u622a\u8ddd, $a[x]$\u770b\u6210\u6a2a\u5750\u6807, \u90a3\u4e48\u95ee\u9898\u8f6c\u4e3a\u4e86\u5728\u5e73\u9762\u4e0a\u6709\u4e00\u4e9b\u76f4\u7ebf, \u9009\u51fa\u4e0e\u76f4\u7ebf$x = a[x]$\u76f8\u4ea4\u7684\u6700\u9760\u4e0b\u7684\u70b9\u5417, \u674e\u8d85\u7ebf\u6bb5\u6811\u677f\u9898, \u4f46\u8fd9\u9053\u9898\u51fa\u5230\u4e86\u6811\u4e0a\u6240\u4ee5\u8981\u7528\u4e0a\u7ebf\u6bb5\u6811\u5408\u5e76 \u56e0\u4e3a\u6709\u8d1f\u6570\u6240\u4ee5\u8981\u6574\u4f53\u53f3\u79fb\u4e00\u4e0b, \u76f8\u5e94\u7684\u76f4\u7ebf\u4e5f\u9700\u53d8\u6362, \u5177\u4f53\u89c1\u4ee3\u7801\n\n\u4ee3\u7801:\n\n```cpp\n#pragma GCC optimize(3)\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#define re register\n#define ll long long\nusing namespace std;\n\ntemplate <typename T>\nvoid read(T &x) {\n    x = 0; bool f = 0;\n    char c = getchar();\n    for (;!isdigit(c);c=getchar()) if (c=='-') f=1;\n    for (;isdigit(c);c=getchar()) x=x*10+(c^48);\n    if (f) x=-x;\n}\n\ntemplate <typename T>\nvoid write(T x) {\n    if (x < 0) putchar('-'), x = -x;\n    if (x >= 10) write(x / 10);\n    putchar('0' + x % 10);\n}\n\nconst int N = 200500;\nconst int Delta = 100005;\nconst int Len = Delta << 1;\n\n\nint h[N], ne[N<<1], to[N<<1];\nint T[N], tot, cnt;\ninline void add(int x, int y) {\n\tne[++tot] = h[x], to[tot] = y, h[x] = tot;\n}\n\nint ls[N<<5], rs[N<<5], p[N<<5];\nll n, ans[N], a[N], b[N];\nstruct node {\n\tll k, b;\n}line[N];\n\ninline ll calc(int num, ll x) {\n\treturn line[num].k * x + line[num].b;\n}\n\nvoid insert(int &x, int l, int r, int num) {\n\tif (!x) return x = ++cnt, p[x] = num, void();\n\tint mid = (l + r) >> 1;\n\tif (calc(p[x], mid) > calc(num, mid)) swap(p[x], num);\n\tif (calc(p[x], l) <= calc(num, l) && \n\t\tcalc(p[x], r) <= calc(num, r)) return;\n\tif (calc(p[x], l) > calc(num, l)) insert(ls[x], l, mid, num);\n\telse insert(rs[x], mid + 1, r, num);\n}\n\nconst ll INF = 0x7fffffffffff;\nll query(int now, int l, int r, ll x) {\n\tif (!now) return INF;\n\tint mid = (l + r) >> 1;\n\treturn min(calc(p[now], x), x <= mid ?\n\t\tquery(ls[now], l, mid, x) : query(rs[now], mid + 1, r, x));\n}\n\nint merge(int x, int y, int l, int r) {\n\tif (!x || !y) return x | y;\n\tinsert(x, l, r, p[y]);\n\tint mid = (l + r) >> 1;\n\tls[x] = merge(ls[x], ls[y], l, mid);\n\trs[x] = merge(rs[x], rs[y], mid + 1, r);\n\treturn x;\n}\n\nvoid dfs(int x, int fa) {\n\tfor (re int i = h[x], y; i; i = ne[i]) {\n\t\tif ((y = to[i]) == fa) continue;\n\t\tdfs(y, x); \n\t\tT[x] = merge(T[x], T[y], 1, Len);\n\t}\n\tans[x] = query(T[x], 1, Len, a[x] + Delta);\n\tif (ans[x] == INF) ans[x] = 0;\n\tline[x] = (node){b[x], ans[x] - b[x] * Delta}; \n\tinsert(T[x], 1, Len, x);\n}\n\nint main() {\n\tread(n);\n\tfor (re int i = 1;i <= n; i++) read(a[i]);\n\tfor (re int j = 1;j <= n; j++) read(b[j]);\n\tfor (re int i = 1;i < n; i++) {\n\t\tint x, y; read(x), read(y);\n\t\tadd(x, y), add(y, x);\n\t} dfs(1, 0);\n\tfor (re int i = 1;i <= n; i++) \n\t\twrite(ans[i]), putchar(' ');\n\treturn 0;\n}\n```\n\n",
        "postTime": 1581004579,
        "uid": 122144,
        "name": "hs_black",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF932F \u3010Escape Through Leaf\u3011"
    },
    {
        "content": "[$\\text{Link}$](https://www.luogu.com.cn/problem/CF932F)\n\n\u53c8\u662f\u4e00\u9053\u5999\u9898\u3002\n\n\u53c8\u662f\u4e00\u7bc7\u8fdf\u5230\u4e00\u5468\u7684\u9898\u89e3\u3002\n## \u9898\u610f\n\u7ed9\u4e00\u68f5\u6811\uff0c$n$ \u4e2a\u8282\u70b9\uff0c\u6bcf\u4e2a\u8282\u70b9\u53c8\u4e24\u4e2a\u6743\u503c $a_i$ \u548c $b_i$\uff0c\u8bb0 $x\\to y$ \u8868\u793a $x$ \u5230 $y$ \u7684\u8f6c\u79fb\uff0c\u6761\u4ef6\u4e3a $y$ \u5728 $x$ \u7684\u5b50\u6811\u5185\uff0c\u4ee3\u4ef7\u4e3a $a_x\\times b_y$\u3002\n\n\u6c42\u6bcf\u4e2a\u8282\u70b9\u5230\u4efb\u610f\u53f6\u8282\u70b9\u7684\u4ee3\u4ef7\u6700\u5c0f\u503c\u3002\n\n$2\\le n\\le 10^5,-10^5\\le a_i,b_i\\le 10^5$\u3002\n## \u601d\u8def\n\u9996\u5148\u601d\u8003 $\\text{dp}$\uff0c\u8bbe $dp_i$ \u8868\u793a\u8282\u70b9 $i$ \u7684\u7b54\u6848\uff0c\u4e8e\u662f\u8f6c\u79fb\u65b9\u7a0b\u5f88\u597d\u641e\u51fa\u6765\uff1a\n\n$$dp_x=\\min_{y\\in\\text{subtree}(x)}(dp_y+a_x\\times b_y)$$\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u6837 $\\text{dp}$ \u662f $O(n^2)$ \u7684\uff0c\u4e0d\u8fc7\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f88\u4e0d\u9519\u7684\u601d\u8def\u3002\n\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u8003\u8651\u4f7f\u7528\u6570\u636e\u7ed3\u6784\u4f18\u5316\u8fd9\u4e2a $\\text{dp}$\u3002\n\n\u6211\u4eec~~\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48~~\u62ff\u51fa\u4e00\u4e2a\u4e00\u6b21\u51fd\u6570 $f(x)=b+ky$\uff0c\u6211\u4eec~~\u60ca\u5947\u5730~~\u53d1\u73b0\uff0c\u5982\u679c\u5c06 $dp_y,b_y$ \u5206\u522b\u770b\u4f5c $b,k$\uff0c\u5219\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42\u5e73\u9762\u5185\u4e00\u4e9b\u4e00\u6b21\u51fd\u6570\u4e0e\u76f4\u7ebf $x=a_x$ \u7684\u4ea4\u70b9\u4e2d\u7eb5\u5750\u6807\u7684\u6700\u5c0f\u503c\u3002\n\n\u7136\u540e\u65e2\u7136\u8981\u7ef4\u62a4\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfb\u91cc\u9762\u7684\u4e00\u6b21\u51fd\u6570\u6700\u503c\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u674e\u8d85\u7ebf\u6bb5\u6811\uff0c\u4e0d\u4f1a\u7684\u53ef\u4ee5\u5148\u53bb\u505a [$\\text{[HEOI2013]Segment}$](https://www.luogu.com.cn/problem/P4097)\u3002\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u8f6c\u79fb\u91cd\u5efa\u674e\u8d85\u7ebf\u6bb5\u6811\u7684\u8bdd\uff0c\u590d\u6742\u5ea6\u662f $O(n^2\\log n)$ \u7684\u3002\u3002\u3002\u6211\u4eec\u53d1\u73b0\u5f53\u524d\u8282\u70b9\u7684\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u51fd\u6570\u5c31\u662f\u5176\u5b50\u6811\u7684\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u51fd\u6570\u7684\u5e76\u96c6\uff0c\u8003\u8651\u7ebf\u6bb5\u6811\u5408\u5e76\uff0c\u76f4\u63a5 $\\text{dfs}$ \u65f6\u8fdb\u884c\u5408\u5e76\uff0c\u5408\u5e76\u5b8c\u518d\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002\u5408\u5e76\u7684\u65b9\u6cd5\u4e0e\u677f\u5b50\u6ca1\u4ec0\u4e48\u4e0d\u540c\uff0c\u53ea\u662f\u628a\u7ef4\u62a4\u7684\u4fe1\u606f\u6539\u4e3a\u6700\u5c0f\u503c\u5373\u53ef\uff0c\u4e0d\u4f1a\u7684\u53ef\u4ee5\u53bb\u505a [\u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811\u5408\u5e76](https://www.luogu.com.cn/problem/P4556)\u3002\n\n\u8fd8\u6709\u4e00\u70b9\u8981\u6ce8\u610f\uff0c\u6211\u4eec\u7ef4\u62a4\u7684\u662f $x=a_x$ \u7684\u7ebf\u6bb5\u6811\uff0c\u9898\u76ee\u4e2d $a_i$ \u7684\u6570\u636e\u8303\u56f4\u662f $[-10^5,10^5]$\uff0c\u6211\u4eec\u8981\u5c06\u5176\u5411\u53f3\u5e73\u79fb $10^5$ \u81f3 $[0,2\\times 10^5]$ \u7684\u4e0b\u6807\u8303\u56f4\u9632\u6b62\u51fa\u73b0\u8d1f\u4e0b\u6807\uff0c\u8bb0\u5f97\u7b97\u659c\u7387\u65f6\u8981\u51cf\u56de\u53bb\u3002\n\n\u53ef\u4ee5\u770b\u51fa\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n\\log n)$ \u7684\u3002\n\n\u81f3\u6b64\u89e3\u51b3\u4e86\u8fd9\u9053\u9898\u3002\n\n\u4ee3\u7801\uff08\u4e5f\u662f\u5f88\u77ed\u7684\uff09\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nnamespace IO{//by cyffff\n\t\n}\nconst int N=1e5+10,rsh=1e5;\nconst ll INF=2e18+10;\nint n,cnt,A[N],B[N],head[N];\nll dp[N];\nstruct Line{\n\tll b,k;\n\t//y=b+kx\n\tLine(ll x=0,ll y=0){ b=x,k=y; }\n\tinline ll f(int x){\n\t\tx-=rsh;\n\t\treturn k*x+b;\n\t}\n}line[N];\nstruct Edge{\n\tint from,to,nxt;\n}edgea[N<<1];\ninline void add(int u,int v){\n\tcnt++;\n\tedgea[cnt].nxt=head[u];\n\tedgea[cnt].to=v;\n\thead[u]=cnt;\n}\nstruct Li_Chao_segment{\n\tint cnt=0,root[N];\n\tstruct node{\n\t\tint l,r;\n\t\tint best;\n\t}a[N];\n\t#define ls (a[rt].l)\n\t#define rs (a[rt].r)\n\tinline void insert(int &rt,int pre,int l=0,int r=rsh*2){\n\t\tif(!rt) return (void)(a[rt=pre]=(node){ 0,0,a[pre].best });\n\t\tint mid=l+r>>1;\n\t\tint &q=a[rt].best;\n\t\tint &x=a[pre].best;\n\t\tdouble l1=line[q].f(l),r1=line[q].f(r);\n\t\tdouble l2=line[x].f(l),r2=line[x].f(r);\n\t\tif(l1<=l2&&r1<=r2) return;\n\t\tif(l1>=l2&&r1>=r2) return (void)(a[rt].best=x);\n\t\tif(line[q].k>line[x].k){\n\t\t\tif(line[q].f(mid)>line[x].f(mid)){\n\t\t\t\tswap(q,x);\n\t\t\t\tinsert(ls,pre,l,mid);\n\t\t\t}else{\n\t\t\t\tinsert(rs,pre,mid+1,r);\n\t\t\t}\n\t\t}else{\n\t\t\tif(line[q].f(mid)<=line[x].f(mid)){\n\t\t\t\tinsert(ls,pre,l,mid);\n\t\t\t}else{\n\t\t\t\tswap(q,x);\n\t\t\t\tinsert(rs,pre,mid+1,r);\n\t\t\t}\n\t\t}\n\t}\n\tinline ll query(int rt,int k,int l=0,int r=rsh*2){\n\t\tif(!rt) return INF;\n\t\tll ans=line[a[rt].best].f(k);\n\t\tif(l==r) return ans;\n\t\tint mid=l+r>>1;\n\t\tif(k<=mid){\n\t\t\tans=min(ans,query(ls,k,l,mid));\n\t\t}else{\n\t\t\tans=min(ans,query(rs,k,mid+1,r));\n\t\t}\n\t\treturn ans;\n\t}\n\tinline int merge(int x,int y,int l=0,int r=rsh*2){\n\t\tif(!x||!y) return x+y;\n\t\tif(l==r)\n\t\t\treturn line[a[x].best].f(l)>line[a[y].best].f(l)?y:x;\n\t\tint mid=l+r>>1;\n\t\ta[x].l=merge(a[x].l,a[y].l,l,mid);\n\t\ta[x].r=merge(a[x].r,a[y].r,mid+1,r);\n\t\tinsert(x,y,l,r);\n\t\treturn x;\n\t}\n\tinline void dfs(int rt,int f){\n\t\tfor(int i=head[rt];i;i=edgea[i].nxt){\n\t\t\tif(edgea[i].to!=f){\n\t\t\t\tdfs(edgea[i].to,rt);\n\t\t\t\troot[rt]=merge(root[rt],root[edgea[i].to]);\n\t\t\t}\n\t\t}\n\t\tif(root[rt]) dp[rt]=query(root[rt],A[rt]);\n\t\tline[rt]=Line(dp[rt],B[rt]);\n\t\ta[++cnt]=(node){ 0,0,rt };\n\t\tinsert(root[rt],cnt);\n\t}\n}t;\nint main(){\n\tn=read();\n\tfor(int i=1;i<=n;i++){\n\t\tA[i]=read()+rsh;\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tB[i]=read();\n\t}\n\tfor(int i=1;i<n;i++){\n\t\tint u=read(),v=read();\n\t\tadd(u,v);\n\t\tadd(v,u);\n\t}\n\tt.dfs(1,0);\n\tfor(int i=1;i<=n;i++){\n\t\twrite(dp[i]);\n\t\tputc(' ');\n\t}\n\tflush();\n}\n```\n\u518d\u89c1 qwq~",
        "postTime": 1622559444,
        "uid": 365127,
        "name": "cyffff",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF932F\u3010Escape Through Leaf\u3011"
    },
    {
        "content": "\u8003\u8651dp\uff0c\u6211\u4eec\u8bbef[i]\u4e3a\u4ee5i\u4e3a\u8d77\u70b9\u7684\u7b54\u6848\uff0c\u90a3\u4e48\u6709f[i]=min(f[j]+a[i]*b[j])\u8fd9\u4e2a\u4e1c\u897f\uff0c\u5176\u4e2dj\u7684\u8303\u56f4\u662fi\u5b50\u6811\u5185\u4efb\u610f\u70b9\n\n\u8003\u8651\u4f18\u5316\u8fd9\u4e2a\u4e1c\u897f\uff0c\u6211\u4eec\u53d1\u73b0\u628ab\u770b\u6210\u659c\u7387\uff0cf\u770b\u6210\u622a\u8ddd\uff0c\u90a3\u4e48\u7b49\u4ef7\u4e8e\u6211\u4eec\u8981\u5728\u4e00\u5806\u76f4\u7ebf\u4e2d\u627e\u5230x=a[i]\u65f6\u7684\u6700\u4f4e\u70b9\uff0c\u8fd9\u4e2a\u70b9\u663e\u7136\u5728\u51f8\u58f3\u4e0a\n\n\u8003\u8651\u600e\u4e48\u7ef4\u62a4\u8fd9\u4e2a\u51f8\u58f3\u3002\u53ef\u4ee5\u7528\u674e\u8d85\u7ebf\u6bb5\u6811+\u52a8\u6001\u5f00\u70b9\u5408\u5e76\uff0c\u4e5f\u53ef\u4ee5\u7528\u5e73\u8861\u6811\u52a8\u6001\u7ef4\u62a4\u51f8\u58f3\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u7136\u540e\u5c31\u505a\u5b8c\u4e86\n\n```cpp\n#include <stdio.h>\n#include <string.h>\n#include <algorithm>\n#define rep(i,st,ed) for (int i=st;i<=ed;++i)\n\ntypedef long long LL;\nconst LL INF=1000000000000000LL;\nconst int N=200005;\n\nstruct line {LL k,b;};\nstruct edge {int y,next;} e[N*2];\nstruct treeNode {int l,r; line rec;} t[N*51];\n\nint a[N],b[N];\nint root[N],tot;\nint ls[N],edCnt;\n\nLL f[N];\n\nint read() {\n\tint x=0,v=1; char ch=getchar();\n\tfor (;ch<'0'||ch>'9';v=(ch=='-')?(-1):(v),ch=getchar());\n\tfor (;ch<='9'&&ch>='0';x=x*10+ch-'0',ch=getchar());\n\treturn x*v;\n}\n\nvoid add_edge(int x,int y) {\n\te[++edCnt]=(edge) {y,ls[x]}; ls[x]=edCnt;\n\te[++edCnt]=(edge) {x,ls[y]}; ls[y]=edCnt;\n}\n\ndouble get_x(line a,line b) {\n\treturn (double)(a.b-b.b)/(b.k-a.k);\n}\n\nLL get_y(line a,LL x) {\n\treturn a.k*x+a.b;\n}\n\nvoid modify(int &now,int tl,int tr,line x) {\n\tif (!now) {\n\t\tt[now=++tot].rec=x;\n\t\treturn ;\n\t}\n\tif (get_y(t[now].rec,tl)<get_y(x,tl)&&get_y(t[now].rec,tr)<get_y(x,tr)) return ;\n\tif (get_y(t[now].rec,tl)>get_y(x,tl)&&get_y(t[now].rec,tr)>get_y(x,tr)) {\n\t\tt[now].rec=x; return ;\n\t}\n\tdouble pos=get_x(t[now].rec,x);\n\tint mid=(tl+tr)>>1;\n\tif (t[now].rec.k<x.k) {\n\t\tif (pos>mid) {\n\t\t\tmodify(t[now].r,mid+1,tr,t[now].rec);\n\t\t\tt[now].rec=x;\n\t\t} else modify(t[now].l,tl,mid,x);\n\t} else {\n\t\tif (pos<mid) {\n\t\t\tmodify(t[now].l,tl,mid,t[now].rec);\n\t\t\tt[now].rec=x;\n\t\t} else modify(t[now].r,mid+1,tr,x);\n\t}\n}\n\nLL query(int now,int tl,int tr,int x) {\n\tif (!now) return INF;\n\tif (tl==tr) return get_y(t[now].rec,x);\n\tint mid=(tl+tr)>>1;\n\tLL tmp,ret=get_y(t[now].rec,x);\n\tif (x<=mid) tmp=query(t[now].l,tl,mid,x);\n\telse tmp=query(t[now].r,mid+1,tr,x);\n\treturn std:: min(ret,tmp);\n}\n\nint merge(int x,int y,int tl,int tr) {\n\tif (!x||!y) return x+y;\n\tif (tl==tr) {\n\t\tif (get_y(t[y].rec,tl)<get_y(t[x].rec,tl)) {\n\t\t\tt[x].rec=t[y].rec;\n\t\t}\n\t\treturn x;\n\t}\n\tint mid=(tl+tr)>>1;\n\tt[x].l=merge(t[x].l,t[y].l,tl,mid);\n\tt[x].r=merge(t[x].r,t[y].r,mid+1,tr);\n\tmodify(x,tl,tr,t[y].rec);\n\treturn x;\n}\n\nvoid dfs(int now,int fa) {\n\tbool flag=true;\n\tfor (int i=ls[now];i;i=e[i].next) {\n\t\tif (e[i].y==fa) continue;\n\t\tdfs(e[i].y,now);\n\t\troot[now]=merge(root[now],root[e[i].y],-N,N);\n\t\tflag=false;\n\t}\n\tif (!flag) f[now]=query(root[now],-N,N,a[now]);\n\tmodify(root[now],-N,N,(line) {b[now],f[now]});\n}\n\nint main(void) {\n\tfreopen(\"data.in\",\"r\",stdin);\n\tfreopen(\"myp.out\",\"w\",stdout);\n\tint n=read();\n\trep(i,1,n) a[i]=read();\n\trep(i,1,n) b[i]=read();\n\trep(i,2,n) add_edge(read(),read());\n\tdfs(1,0);\n\trep(i,1,n) printf(\"%lld\\n\", f[i]);\n\treturn 0;\n}\n```",
        "postTime": 1537856159,
        "uid": 18867,
        "name": "jpwang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF932F \u3010Escape Through Leaf\u3011"
    },
    {
        "content": "\u53ef\u4ee5\u5217\u51fa\u4e00\u4e2a\u663e\u7136\u7684 dp \u65b9\u7a0b $f_u = f_v+ a_ub_v(v\\in\\rm{Subtree_u})$\uff0c$f_u$ \u4ee3\u8868\u7ed3\u70b9 $u$ \u7684\u7b54\u6848\u3002  \r\n\r\n\u5927\u90e8\u5206\u9898\u89e3\u9009\u62e9\u7528 **\u674e\u8d85\u6811\u5408\u5e76** \u6765\u5904\u7406\u4e0a\u9762\u7684\u4fe1\u606f\uff0c\u4f46\u662f\u5728\u8fd9\u91cc\u6211\u5c06\u7ed9\u51fa\u4e00\u4e2a\u8f83\u4e3a\u7b80\u5355\u7684\u65b9\u6cd5\u3002\r\n\r\n\u6211\u4eec\u5148\u5904\u7406\u5904\u6bcf\u4e2a\u7ed3\u70b9\u7684 dfn \u5e8f\uff0c\u90a3\u4e48\u53ef\u4ee5\u62ff\u6765\u66f4\u65b0 $f_u$  \u7684 $v$ \u5c5e\u4e8e $(\\mathrm{dfn}_u,\\mathrm{dfn}_u+\\mathrm{siz}_u)$ \u3002  \r\n\u628a\u8fd9\u4e2a\u653e\u5230\u7ebf\u6bb5\u6811\u4e0a\uff0c\u76f8\u5f53\u4e8e\u8981\u5904\u7406\u4e00\u4e0b\u4e24\u4e2a\u64cd\u4f5c\r\n- \u5f80\u4f4d\u7f6e $p$ \u63d2\u5165\u4e00\u6761\u76f4\u7ebf $l$\u3002\r\n- \u67e5\u8be2 $[l,r]$ \u4e2d\u6240\u6709\u76f4\u7ebf\u5728 $x=q$ \u65f6\u7684 $\\min\\{y\\}$\u3002\r\n\r\n\u5f88\u5bb9\u6613\u53d1\u73b0 **\u53ef\u80fd** \u4ea7\u751f\u7b54\u6848\u7684\u76f4\u7ebf\u5f62\u6210\u4e00\u4e2a\u51f8\u58f3\uff0c\u4e14\u659c\u7387\u5355\u8c03\u9012\u51cf\u3002  \r\n\r\n\u5982\u679c\u6bcf\u6b21\u63d2\u5165\u76f4\u7ebf\u90fd\u8981\u91cd\u6784\u6574\u4e2a\u51f8\u58f3\u590d\u6742\u5ea6\u65e0\u6cd5\u627f\u53d7\u3002  \r\n\u6b64\u65f6\u6709\u4e24\u79cd\u9009\u62e9\uff1a\r\n- \u5e73\u8861\u6811\u7ef4\u62a4\u51f8\u58f3\uff08CF70D plus\uff09\r\n- \u53ea\u5728\u4e00\u4e2a\u7ed3\u70b9\u4e2d\u6240\u6709\u7ebf\u6bb5\u90fd\u88ab\u63d2\u5165\u540e\u518d\u91cd\u6784\uff08SDOI2014 \u5411\u91cf\u96c6\uff09\r\n\r\n\u663e\u7136\uff0c\u6bcf\u5f53\u4f60\u8be2\u95ee\u4e00\u4e2a\u533a\u95f4 $[l,r]$\uff0c\u90a3\u4e48\u6240\u6709\u7f16\u53f7\u5728 $[l,r]$ \u4e4b\u95f4\u7684\u76f4\u7ebf\u90fd\u5728\u7ebf\u6bb5\u6811\u5185\u4e86\uff0c\u6240\u4ee5\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u662f\u6b63\u786e\u7684\u3002  \r\n\r\n\u91cd\u6784\u603b\u6b21\u6570\u4e3a\u7ebf\u6bb5\u6811\u8282\u70b9\u4e2a\u6570 $=\\mathcal{O}(n\\log n)$\u3002  \r\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n\\log^2n)$\u3002  \r\n\r\n[\u53c2\u8003\u4ee3\u7801\u5b9e\u73b0](https://codeforc.es/contest/932/submission/206076302)\u3002 ",
        "postTime": 1684234527,
        "uid": 366338,
        "name": "fjy666",
        "ccfLevel": 0,
        "title": "\u79d8\u4eea\u300c\u540e\u6237\u7684\u72c2\u8a00\u300d/ \u53e6\u89e3 CF932F"
    },
    {
        "content": "\u53d1\u73b0\u6d1b\u8c37\u9898\u89e3\u53ea\u6709\u674e\u8d85\u7ebf\u6bb5\u6811\u548c\u5e73\u8861\u6811\u7ef4\u62a4\u51f8\u58f3\uff0c\u4f46\u662f\u8fd9\u4e5f\u53ef\u4ee5\u7528\u70b9\u5206\u6cbb\u505a\u3002\n\n\u8bbe $f_i$ \u8868\u793a\u4ece $i$ \u51fa\u53d1\u5230\u8fbe\u5b50\u6811\u5185\u7684\u53f6\u5b50\u7684\u6700\u5c0f\u82b1\u8d39\u3002\u90a3\u4e48\u6709\u8f6c\u79fb\u65b9\u7a0b\n$$\nf_i=\\min(f_j+a_i\u00d7b_j),j\\in subtree(i)\n$$\n\u8003\u8651\u7528\u659c\u7387\u4f18\u5316\u8fd9\u4e2a dp\u5f0f\u5b50\u3002\u4e0b\u9762\u662f\u6211\u7684\u4f18\u5316\u65b9\u5f0f\uff0c\u548c\u8fd9\u9053\u9898\u91cc\u9762\u5176\u4ed6\u9898\u89e3\u7684\u4f18\u5316\u65b9\u5f0f\u4e0d\u592a\u4e00\u6837\uff0c\u5982\u679c\u77e5\u9053\u600e\u4e48\u659c\u7387\u4f18\u5316\u53ef\u4ee5\u8df3\u8fc7\u4e0d\u770b\u3002\n\n\u8bbe $j$ \uff0c $k$ \u662f $i$ \u5b50\u6811\u5185\u7684\u70b9\uff0c\u4e14 $b_k>b_j$ \uff0c $f_i$ \u4ece $j$ \u70b9\u8f6c\u79fb\u3002\u90a3\u4e48\u6709\u4e0d\u7b49\u5f0f\n$$\nf_j+a_i\\times b_j\\leq f_k+a_i\\times b_k \n$$\n$$\nf_j-f_k\\leq a_i\\times (b_k-b_j)\n$$\n$$\n\\frac{f_k-f_j}{b_k-b_j}\\geq -a_i\n$$\n\u8bbe $j$ \u4ee3\u8868\u7684\u70b9\u4e3a $(b_j,f_j)$ \uff0c\u6700\u540e\u7684\u4e0d\u7b49\u5f0f\u7684\u610f\u601d\u662f \u5f53 $j$ \u70b9\u548c $k$ \u70b9\u7684\u8fde\u7ebf\u7684\u659c\u7387\u5927\u4e8e $-a_i$ \u65f6\uff0c\u7528 $j$ \u70b9\u8f6c\u79fb\u4f1a\u66f4\u4f18\u3002\u4e8e\u662f\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u4e0b\u51f8\u58f3\u7136\u540e\u505a\u4e86\u3002\n\n\u70b9\u5206\u6cbb\u65f6\u8981\u6ce8\u610f\u8fd9\u662f\u6709\u6839\u6811\uff0c\u6bcf\u6b21\u5904\u7406\u5b8c \u5f53\u524d\u8054\u901a\u5757\u7684\u91cd\u5fc3 \u7684 \u5b50\u6811\u8282\u70b9 \u540e\uff0c\u518d\u62ff\u5b83\u4eec\u6765\u66f4\u65b0 \u91cd\u5fc3\u4ee5\u53ca\u5b83\u5728\u8fd9\u4e2a\u8054\u901a\u5757\u91cc\u7684\u7956\u5148\u3002\u56e0\u4e3a\u4e0d\u4fdd\u8bc1\u5b50\u6811\u8282\u70b9\u7684 $b_j$ \u9012\u589e\uff0c\u6240\u4ee5\u8fd8\u8981\u6392\u4e2a\u5e8f\u3002\u88ab\u66f4\u65b0\u7684 \u91cd\u5fc3\u548c\u7956\u5148\u8282\u70b9 \u6211\u4e5f\u4ee5 $a_i$ \u4e3a\u5173\u952e\u5b57\u6392\u5e8f\u4e86\u4e00\u904d\uff0c\u4e0d\u8fc7\u4e5f\u53ef\u4ee5\u4e8c\u5206\u51f8\u58f3\uff0c\u53cd\u6b63\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u4e00\u6837\u3002\n\n\u70b9\u5206\u6cbb\u4e00\u4e2a log\uff0c\u6392\u5e8f\u4e00\u4e2a log\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(nlog^2n)$\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cmath>\n#include<vector>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\ntypedef long long ll;\ntypedef double db;\nconst db eps=1e-16;\nconst db maxn=1e21;\n#define M 100005\n#define pb push_back\n\ntemplate <class T>\ninline void rd(T &x) {\n\tx=0; char c=getchar(); int f=1;\n\twhile(!isdigit(c)) { if(c=='-') f=-1; c=getchar(); }\n\twhile(isdigit(c)) x=x*10-'0'+c,c=getchar(); x*=f;\n}\n\nint al[M<<1],cl[M<<1],tp[M],ttp;\nint Al,rt,sz[M],fa[M],vis[M];\nint sl[M];\nint qe[M];\nll A[M],B[M];\nll dp[M];\nvector<int> G[M];\n\nint Mx(int x,int y){ return x>y?x:y; }\ndb xian(int x,int y){\n\tif(B[x]==B[y]) return dp[x]<=dp[y]?maxn:-maxn;\n\treturn (dp[x]-dp[y])/(db)(B[x]-B[y]);\n}\nint cmp(db x){\n\tif(fabs(x)<eps) return 0;\n\treturn x<0?-1:1;\n}\nbool cmp2(int x,int y){ if(B[x]==B[y]) return dp[x]>dp[y]; return B[x]<B[y]; }\nbool cmp3(int x,int y){ return A[x]>A[y]; }\n\nvoid dfs(int x,int f){\n\tint v,t=1;\n\tfa[x]=f;\n\tfor(int i=tp[x];i;i=cl[i]) if((v=al[i])!=f){\n\t\tdfs(v,x);\n\t\tt=0;\n\t}\n\tif(t) dp[x]=0;\n}\n\nvoid fin_rt(int x,int f){\n\tint v,mx=0;\n\tsz[x]=1;\n\tfor(int i=tp[x];i;i=cl[i]) if((!vis[v=al[i]]) && v!=f){\n\t\tfin_rt(v,x);\n\t\tmx=Mx(mx,sz[v]);\n\t\tsz[x]+=sz[v];\n\t}\n\tmx=Mx(mx,Al-sz[x]);\n\tif(mx<=(Al>>1)) rt=x;\n}\n\nvoid get_G(int x,int f){\n\tint v;\n\tG[rt].pb(x);\n\tfor(int i=tp[x];i;i=cl[i]) if((!vis[v=al[i]])&&v!=f) get_G(v,x);\n}\n\nvoid sol(int x,int siz){\n\tif(siz==1) return (void)(vis[x]=1);\n\tAl=siz;\n\tfin_rt(x,fa[x]);\n\tint f=rt,q,ct=0,op=0,ed=0;\n\n\tvis[f]=1;\n\tfor(int i=tp[f];i;i=cl[i]) if(al[i]!=fa[f]) get_G(al[i],f);\n\tfor(int i=tp[f];i;i=cl[i]) if(al[i]!=fa[f]) siz-=sz[al[i]],sol(al[i],sz[al[i]]);\n\tfor(int i=f;i!=fa[x];i=fa[i]) sl[++ct]=i;\n\tif(!G[f].empty()) sort(G[f].begin(),G[f].end(),cmp2);\n\n\tfor(int v:G[f]){\n\t\twhile(ed>1 && cmp(xian(qe[ed-1],qe[ed-2]) - xian(qe[ed-1],v)) >=0) --ed;\n\t\tif((!ed) || B[v]!=B[qe[ed-1]]) qe[ed++]=v;\n\t\telse if(dp[v]<dp[qe[ed-1]]) qe[ed-1]=v;\n\t}\n\n\tif(ct){\n\t\tsort(sl+1,sl+1+ct,cmp3);\n\t\tfor(int i=1;i<=ct;++i){\n\t\t\tq=sl[i];\n\t\t\twhile(op<ed-1 && cmp(xian(qe[op],qe[op+1]) + A[q]) <=0) ++op;\n\t\t\tdp[q]=min(dp[q],dp[qe[op]]+A[q]*B[qe[op]]);\n\t\t}\n\t}\n\n\tvis[f]=0;\n\tfor(int i=tp[f];i;i=cl[i]) if(al[i]!=fa[f]) vis[al[i]]=1;\n\tG[f].clear();\n\tsol(x,siz);\n}\n\nvoid link(int x,int y){ al[++ttp]=y; cl[ttp]=tp[x]; tp[x]=ttp; }\n\nint main(){\n\tint n,t,x,y;\n\tll v;\n\trd(n);\n\tfor(int i=1;i<=n;++i) rd(A[i]);\n\tfor(int i=1;i<=n;++i) rd(B[i]);\n\tfor(int i=2;i<=n;++i){\n\t\trd(x); rd(y);\n\t\tlink(x,y);\n\t\tlink(y,x);\n\t}\n\tmemset(dp,127,sizeof(dp));\n\tdfs(1,0);\n\tsol(1,n);\n\tfor(int i=1;i<=n;++i) printf(\"%lld \",dp[i]);\n\tputs(\"\");\n\treturn 0;\n}\n```",
        "postTime": 1590665703,
        "uid": 204103,
        "name": "s_y_z_r_y",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF932F \u3010Escape Through Leaf\u3011"
    },
    {
        "content": "~~\u5947\u602a\u7684\u7ebf\u6bb5\u6811\u5408\u5e76\u589e\u52a0\u4e86\uff01~~\n\n\u6734\u7d20\u7684 $dp$ \u662f $dp_u = \\min\\{dp_v + a_u \\times b_v\\} [v \\in subtree(u)]$\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u662f\u4e00\u4e2a $kx + b$ \u7684\u5f62\u5f0f\uff0c\u4e5f\u5c31\u662f $b_v(a_u) + dp_v$\uff0c\u6240\u4ee5\u9700\u8981\u7684\u662f\u4e00\u4e2a\u5b50\u6811\u4fe1\u606f\uff0c\u5b50\u6811\u4fe1\u606f\u80fd\u60f3\u5230\u4ec0\u4e48\uff1f\u7ebf\u6bb5\u6811\u5408\u5e76\uff1fdsu on tree\uff1f\u542f\u53d1\u5f0f\u5408\u5e76\uff1f\u611f\u89c9\u90fd\u80fd\u505a\u3002\n\n\u7136\u540e\u7684\u8bdd\u8fd9\u91cc\u9009\u62e9\u4e86\u7ebf\u6bb5\u6811\u5408\u5e76\uff0c\u81f3\u4e8e\u6734\u7d20\u7684\u7ebf\u6bb5\u6811\u5408\u5e76\uff0c\u7ebf\u6bb5\u6811\u5408\u5e76\u7684\u590d\u6742\u5ea6\u662f $n \\log n$ \u7684\uff0c\u8bc1\u660e\u7684\u8bdd\uff0c\u5c31\u8003\u8651 $f(a + b) = f(a) + f(b) + sz(a \\bigcap b)$ \u5bb9\u6613\u53d1\u73b0\u8fd9\u8fb9 $sz(a \\bigcap b)$ \u4e0d\u4f1a\u8d85\u8fc7 $\\min\\{a,b\\}$ \u7136\u540e\u8bc1\u660e\u5c31\u5f88\u663e\u7136\u4e86\uff0c\u4f46\u662f\u5bf9\u4e8e\u674e\u8d85\u6811\u5408\u5e76\uff0c\u9700\u8981\u505a\u7684\u4e00\u70b9\u662f\uff0c\u8fd9\u4e2a\u4fe1\u606f\u4e0d\u53ef\u52a0\uff0c\u4e0d\u53ef\u51cf\uff0c\u4e0d\u53ef\u7b80\u5355\u5408\u5e76\uff0c\u6240\u4ee5\u8981\u628a $a \\bigcap b$ \u7684\u90e8\u5206\u76f4\u63a5\u63d2\u5230\u6811\u4e0a\uff0c\u590d\u6742\u5ea6\u662f $n \\log^2 n$\uff0c\u6240\u4ee5\u505a\u5b8c\u4e86\u3002\n\n```cpp\n// powered by c++11\n// by Isaunoya\n#include <bits/stdc++.h>\n\n#define rep(i, x, y) for (register int i = (x); i <= (y); ++i)\n#define Rep(i, x, y) for (register int i = (x); i >= (y); --i)\n\nusing namespace std;\nusing db = double;\nusing ll = long long;\nusing uint = unsigned int;\nusing ull = unsigned long long;\n\n#define pii pair<int, int>\n#define fir first\n#define sec second\n\ntemplate <class T>\n\nvoid cmax(T& x, const T& y) {\n  if (x < y) x = y;\n}\n\ntemplate <class T>\n\nvoid cmin(T& x, const T& y) {\n  if (x > y) x = y;\n}\n\n#define all(v) v.begin(), v.end()\n#define sz(v) ((int)v.size())\n#define pb emplace_back\n\ntemplate <class T>\n\nvoid sort(vector<T>& v) {\n  sort(all(v));\n}\n\ntemplate <class T>\n\nvoid reverse(vector<T>& v) {\n  reverse(all(v));\n}\n\ntemplate <class T>\n\nvoid unique(vector<T>& v) {\n  sort(all(v)), v.erase(unique(all(v)), v.end());\n}\n\nvoid reverse(string& s) { reverse(s.begin(), s.end()); }\n\nconst int io_size = 1 << 23 | 233;\nconst int io_limit = 1 << 22;\nstruct io_in {\n  char ch;\n#ifndef __WIN64\n  char getchar() {\n    static char buf[io_size], *p1 = buf, *p2 = buf;\n\n    return (p1 == p2) && (p2 = (p1 = buf) + fread(buf, 1, io_size, stdin), p1 == p2) ? EOF : *p1++;\n  }\n#endif\n  io_in& operator>>(char& c) {\n    for (c = getchar(); isspace(c); c = getchar());\n\n    return *this;\n  }\n  io_in& operator>>(string& s) {\n    for (s.clear(); isspace(ch = getchar());)\n      ;\n\n    if (!~ch) return *this;\n\n    for (s = ch; !isspace(ch = getchar()) && ~ch; s += ch)\n      ;\n\n    return *this;\n  }\n\n  io_in& operator>>(char* str) {\n    char* cur = str;\n    while (*cur) *cur++ = 0;\n\n    for (cur = str; isspace(ch = getchar());)\n      ;\n    if (!~ch) return *this;\n\n    for (*cur = ch; !isspace(ch = getchar()) && ~ch; *++cur = ch)\n      ;\n\n    return *++cur = 0, *this;\n  }\n\n  template <class T>\n\n  void read(T& x) {\n    bool f = 0;\n    while ((ch = getchar()) < 48 && ~ch) f ^= (ch == 45);\n\n    x = ~ch ? (ch ^ 48) : 0;\n    while ((ch = getchar()) > 47) x = x * 10 + (ch ^ 48);\n    x = f ? -x : x;\n  }\n\n  io_in& operator>>(int& x) { return read(x), *this; }\n\n  io_in& operator>>(ll& x) { return read(x), *this; }\n\n  io_in& operator>>(uint& x) { return read(x), *this; }\n\n  io_in& operator>>(ull& x) { return read(x), *this; }\n\n  io_in& operator>>(db& x) {\n    read(x);\n    bool f = x < 0;\n    x = f ? -x : x;\n    if (ch ^ '.') return *this;\n\n    double d = 0.1;\n    while ((ch = getchar()) > 47) x += d * (ch ^ 48), d *= .1;\n    return x = f ? -x : x, *this;\n  }\n} in;\n\nstruct io_out {\n  char buf[io_size], *s = buf;\n  int pw[233], st[233];\n\n  io_out() {\n    set(7);\n    rep(i, pw[0] = 1, 9) pw[i] = pw[i - 1] * 10;\n  }\n\n  ~io_out() { flush(); }\n\n  void io_chk() {\n    if (s - buf > io_limit) flush();\n  }\n\n  void flush() { fwrite(buf, 1, s - buf, stdout), fflush(stdout), s = buf; }\n\n  io_out& operator<<(char c) { return *s++ = c, *this; }\n\n  io_out& operator<<(string str) {\n    for (char c : str) *s++ = c;\n    return io_chk(), *this;\n  }\n\n  io_out& operator<<(char* str) {\n    char* cur = str;\n    while (*cur) *s++ = *cur++;\n    return io_chk(), *this;\n  }\n\n  template <class T>\n\n  void write(T x) {\n    if (x < 0) *s++ = '-', x = -x;\n\n    do {\n      st[++st[0]] = x % 10, x /= 10;\n    } while (x);\n\n    while (st[0]) *s++ = st[st[0]--] ^ 48;\n  }\n\n  io_out& operator<<(int x) { return write(x), io_chk(), *this; }\n\n  io_out& operator<<(ll x) { return write(x), io_chk(), *this; }\n\n  io_out& operator<<(uint x) { return write(x), io_chk(), *this; }\n\n  io_out& operator<<(ull x) { return write(x), io_chk(), *this; }\n\n  int len, lft, rig;\n\n  void set(int _length) { len = _length; }\n\n  io_out& operator<<(db x) {\n    bool f = x < 0;\n    x = f ? -x : x, lft = x, rig = 1. * (x - lft) * pw[len];\n    return write(f ? -lft : lft), *s++ = '.', write(rig), io_chk(), *this;\n  }\n} out;\n#define int long long\n\ntemplate <int sz, int mod>\n\nstruct math_t {\n\tmath_t() {\n    fac.resize(sz + 1), ifac.resize(sz + 1);\n    rep(i, fac[0] = 1, sz) fac[i] = fac[i - 1] * i % mod;\n\n    ifac[sz] = inv(fac[sz]);\n    Rep(i, sz - 1, 0) ifac[i] = ifac[i + 1] * (i + 1) % mod;\n  }\n\n  vector<int> fac, ifac;\n\n  int qpow(int x, int y) {\n    int ans = 1;\n    for (; y; y >>= 1, x = x * x % mod)\n      if (y & 1) ans = ans * x % mod;\n    return ans;\n  }\n\n  int inv(int x) { return qpow(x, mod - 2); }\n\n  int C(int n, int m) {\n    if (n < 0 || m < 0 || n < m) return 0;\n    return fac[n] * ifac[m] % mod * ifac[n - m] % mod;\n  }\n};\n\nint gcd(int x, int y) { return !y ? x : gcd(y, x % y); }\nint lcm(int x, int y) { return x * y / gcd(x, y); }\n\n// dp_x = min{dp_y + a_x * b_y}\n// a_x \u5904\u7684 min { (b_y)a_x + dp_y }\n// merge\n\nconst int maxn = 1e5 + 51;\nint rt[maxn], ls[maxn << 5], rs[maxn << 5], id[maxn << 5], cnt = 0;\nstruct Line {\n\tint k, b; inline int val(int x) { return k * x + b; }\n} s[maxn];\n\nvoid ins(int &p, int l, int r, int num) {\n\tif(!p) { p = ++cnt; id[p] = num; return; }\n\tint mid = l + r >> 1, &x = num, &y = id[p];\n\tint midx = s[x].val(mid), midy = s[y].val(mid);\n\tif(midx < midy) { x ^= y ^= x ^= y; }\n\tint lx = s[x].val(l), ly = s[y].val(l);\n\tint rx = s[x].val(r), ry = s[y].val(r);\n\tif(lx >= ly && rx >= ry) return;\n\tif(lx < ly) ins(ls[p], l, mid, num);\n\telse ins(rs[p], mid + 1, r, num);\n}\n\nint merge(int x, int y, int l, int r) {\n\tif(!x || !y) return x + y;\n\tins(x, l, r, id[y]);\n\tint mid = l + r >> 1;\n\tls[x] = merge(ls[x], ls[y], l , mid);\n\trs[x] = merge(rs[x], rs[y], mid + 1, r);\n\treturn x;\n}\n\nint qry(int p, int l, int r, int pos) {\n\tif(!p) return 1e18;\n\tif(l == r) { return s[id[p]].val(pos); }\n\tint mid = l + r >> 1, ans = s[id[p]].val(pos);\n\tif(pos <= mid) { cmin(ans, qry(ls[p], l, mid, pos)); }\n\telse { cmin(ans, qry(rs[p], mid + 1, r, pos)); }\n\treturn ans;\n}\n\nint n;\nint L = -1e5, R = 1e5;\nint dp[maxn], a[maxn], b[maxn];\nvector <int> g[maxn];\nvoid dfs(int u, int f) {\n\tfor(int v: g[u])\n\t\tif(v ^ f) { dfs(v, u), rt[u] = merge(rt[u], rt[v], L, R); }\n\tdp[u] = qry(rt[u], L, R, a[u]);\n\tif(dp[u] == 1e18) dp[u] = 0;\n\ts[u] = { b[u], dp[u] }, ins(rt[u], L, R, u);\n}\n\nsigned main() {\n  // code begin.\n\tin >> n;\n\trep(i , 1 , n) in >> a[i]; rep(i , 1 , n) in >> b[i];\n\trep(i , 2 , n) { int u, v; in >> u >> v, g[u].pb(v), g[v].pb(u); }\n\tdfs(1, 0);\n\trep(i , 1 , n) { out << dp[i] << '\\n'; }\n  return 0;\n  // code end.\n}\n```",
        "postTime": 1588438608,
        "uid": 96580,
        "name": "SXNhdW5veWE",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF932F \u3010Escape Through Leaf\u3011"
    },
    {
        "content": "# \u6b63\u9898\n\u9898\u76ee\u94fe\u63a5:[https://www.luogu.com.cn/problem/CF932F](https://www.luogu.com.cn/problem/CF932F)\n\n## \u9898\u76ee\u5927\u610f\n- \u7ed9\u51fa $n$ \u4e2a\u8282\u70b9\u7684\u4e00\u68f5\u6811\u3002\n- \u4ece\u4e00\u4e2a\u8282\u70b9 $x$ \u8df3\u5230\u5176\u5b50\u6811\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9 $y$ \u7684\u4ee3\u4ef7\u662f $A_x\\times B_y$ \u3002\n- \u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u6c42\u5230\u67d0\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\n\n$2\\leq n\\leq10^5,-10^5\\leq A_i,B_i\\leq 10^5$\n\n## \u89e3\u9898\u601d\u8def\n\u61d2\u5f97\u5199\u5e73\u8861\u6811\uff0c\u63d0\u4f9b\u4e00\u4e2aCDQ\u5206\u6cbb\u7ef4\u62a4\u51f8\u58f3+\u6811\u4e0a\u542f\u53d1\u5f0f\u5408\u5e76\u7684\u505a\u6cd5\u3002\n\n\u9996\u5148\u6211\u4eec\u5f88\u5bb9\u6613\u5217\u51fa $O(n^2)$ \u7684dp\u65b9\u7a0b\n$$f_x=min\\{f_y+A_x\\times B_y\\}(y\\in subtree_x)$$\n\n\u8fd9\u4e2a $A_x\\times B_y$ \u7684\u6743\u503c\u6211\u4eec\u8003\u8651\u7528\u659c\u7387\u4f18\u5316\u7ef4\u62a4\u3002\n\n\u5982\u679c\u8fd9\u68f5\u6811\u662f\u4e00\u6761\u94fe\u6211\u4eec\u505a\u8d77\u6765\u6bd4\u8f83\u7b80\u5355\uff0c\u7c7b\u4f3c\u4e8e\u9898\u76ee[[CEOI2017]Building Bridges](https://www.luogu.com.cn/problem/P4655)\uff0c\u4f7f\u7528CDQ\u5206\u6cbb\u6765\u7ef4\u62a4\u51f8\u58f3\u3002\u5bf9\u4e8e\u524d\u534a\u6bb5\u6211\u4eec\u5904\u7406\u5b8c\u540e\u6839\u636e $B_y$ \u7684\u5927\u5c0f\u6392\u5e8f\uff0c\u5bf9\u4e8e\u540e\u534a\u6bb5\u6211\u4eec\u6839\u636e $A_x$ \u8fdb\u884c\u6392\u5e8f\u3002\u7136\u540e\u5728\u5de6\u8fb9\u5efa\u7acb\u51fa\u4e00\u4e2a\u51f8\u58f3\u50a8\u5b58\u5728\u5355\u8c03\u6808\u91cc\u9762\uff0c\u7136\u540e\u518d\u679a\u4e3e\u53f3\u8fb9\u7684\u66f4\u65b0\u6bcf\u4e00\u4e2a\u7684\u7b54\u6848\u3002\n\n\u4f46\u662f\u8fd9\u9898\u8f6c\u5230\u4e86\u6811\u4e0a\uff0c\u8003\u8651\u5230CDQ\u5206\u6cbb\u80fd\u591f\u505a\u4ec0\u4e48\uff0c\u5b83\u80fd\u591f $O(n\\log n)$ \u7684\u7edf\u8ba1\u4e00\u4e2a\u5e8f\u5217\u7684\u7b54\u6848\u3002\u6211\u4eec\u5176\u5b9e\u53ea\u9700\u8981\u786e\u5b9a\u4e00\u4e9b\u5148\u540e\u987a\u5e8f\u7136\u540e\u7528CDQ\u5206\u6cbb\u6765\u505a\u5c31\u597d\u4e86\u3002\n\n\u4f7f\u7528\u6811\u4e0a\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u7edf\u8ba1\u6bcf\u6761\u91cd\u94fe\u7684\u5e8f\u5217\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u6211\u4eec\u4fdd\u7559\u4e0b\u91cd\u5b50\u6811\u7684\u5e8f\u5217\uff0c\u7136\u540e\u5c06\u8f7b\u5b50\u6811\u7684\u6240\u6709\u8282\u70b9\u52a0\u5230\u5e8f\u5217\u672b\u7aef\uff0c\u6700\u540e\u518d\u628a\u8fd9\u4e2a\u8282\u70b9\u52a0\u5165\u5e8f\u5217\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u4fdd\u8bc1\u4e86\u8fd9\u4e9b\u8f7b\u5b50\u6811\u53ea\u80fd\u5f71\u54cd\u5230\u6df1\u5ea6\u518d\u5f80\u4e0a\u7684\u8282\u70b9\u3002\n\n\u7136\u540e\u6bcf\u6b21\u5230\u4e00\u6761\u94fe\u7684\u9876\u90e8\u65f6\u518d\u5168\u90e8\u505a\u4e00\u904dCDQ\u5206\u6cbb\uff0c\u7136\u540e\u6e05\u7a7a\u5e8f\u5217\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\u8fd9\u6b21CDQ\u5206\u6cbb\u65f6\u8f7b\u5b50\u6811\u4e2d\u7684\u8282\u70b9\u7684\u7b54\u6848\u4e0d\u80fd\u591f\u88ab\u4fee\u6539\u3002\n\n\u8fd9\u6837\u6bcf\u4e2a\u8282\u70b9\u4f1a\u88ab\u52a0\u5165\u5e8f\u5217 $\\log n$ \u6b21\u3002\u603b\u5171\u7684\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log^2 n)$\u3002\n\n## code\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<stack>\n#define ll long long\nusing namespace std;\nconst ll N=1e5+10;\nstruct node{\n\tll to,next;\n}e[N*2];\nll n,tot,ls[N],a[N],b[N],f[N],siz[N],son[N];\nll cnt,q[N],p[N],v[N],st[N],rfn[N];\nvoid addl(ll x,ll y){\n\te[++tot].to=y;\n\te[tot].next=ls[x];\n\tls[x]=tot;return;\n}\nvoid dfs(ll x,ll fa){\n\tsiz[x]=1;\n\tfor(ll i=ls[x];i;i=e[i].next){\n\t\tll y=e[i].to;\n\t\tif(y==fa)continue;\n\t\tdfs(y,x);siz[x]+=siz[y];\n\t\tif(siz[y]>siz[son[x]])son[x]=y;\n\t}\n\treturn;\n}\nbool cmp(ll x,ll y)\n{return a[x]<a[y];}\nbool cMp(ll x,ll y)\n{return (b[x]==b[y])?(f[x]<f[y]):(b[x]<b[y]);}\ndouble slope(ll x,ll y)\n{return (double)(f[x]-f[y])/(b[x]-b[y]);}\nvoid cdq(ll l,ll r){\n\tif(l==r)return;\n\tll mid=(l+r)>>1,cnt1=l-1,cnt2=mid;\n\tfor(ll i=l;i<=r;i++)\n\t\tif(rfn[p[i]]<=mid)q[++cnt1]=p[i];\n\t\telse q[++cnt2]=p[i];\n\tfor(ll i=l;i<=r;i++)p[i]=q[i];\n\tcdq(l,mid);ll tot=0;\n\tfor(ll i=l;i<=mid;i++){\n\t\tif(b[p[i]]==b[p[i-1]]&&i!=l)continue;\n\t\twhile(tot>1&&slope(st[tot-1],st[tot])>slope(st[tot-1],p[i]))tot--;\n\t\tst[++tot]=p[i];\n\t}\n\tfor(ll i=mid+1;i<=r;i++){\n\t\tif(v[p[i]])continue;\n\t\twhile(tot>1&&slope(st[tot-1],st[tot])>-a[p[i]])tot--;\n\t\tll x=p[i],y=st[tot];\n\t\tf[x]=min(f[x],f[y]+a[x]*b[y]);\n\t}\n\tcdq(mid+1,r);\n\tsort(p+l,p+1+r,cMp);\n\treturn;\n}\nvoid calc(ll x,ll fa){\n\tp[++cnt]=x;rfn[x]=cnt;v[x]=1;\n\tfor(ll i=ls[x];i;i=e[i].next){\n\t\tll y=e[i].to;\n\t\tif(y==fa)continue;\n\t\tcalc(y,x);\n\t}\n}\nvoid solve(ll x,ll fa,ll top){\n\tfor(ll i=ls[x];i;i=e[i].next){\n\t\tll y=e[i].to;\n\t\tif(y==fa||y==son[x])continue;\n\t\tsolve(y,x,y);\n\t}\n\tif(son[x])\n\t\tsolve(son[x],x,top);\n\telse f[x]=0;\n\tfor(ll i=ls[x];i;i=e[i].next){\n\t\tll y=e[i].to;\n\t\tif(y==fa||y==son[x])continue;\n\t\tcalc(y,x);\n\t}\n\tp[++cnt]=x;rfn[x]=cnt;\n\tv[x]=(!son[x]);\n\tif(x==top){\n\t\tsort(p+1,p+1+cnt,cmp);\n\t\tcdq(1,cnt);cnt=0;\n\t}\n\treturn;\n}\nint main()\n{\n\tscanf(\"%lld\",&n);\n\tfor(ll i=1;i<=n;i++)scanf(\"%lld\",&a[i]);\n\tfor(ll i=1;i<=n;i++)scanf(\"%lld\",&b[i]);\n\tfor(ll i=1;i<n;i++){\n\t\tll x,y;\n\t\tscanf(\"%lld%lld\",&x,&y);\n\t\taddl(x,y);addl(y,x);\n\t}\n\tmemset(f,0x3f,sizeof(f));\n\tdfs(1,1);\n\tsolve(1,1,1);\n\tfor(ll i=1;i<=n;i++)\n\t\tprintf(\"%lld\\n\",f[i]);\n\treturn 0;\n}\n```",
        "postTime": 1617677157,
        "uid": 52918,
        "name": "QuantAsk",
        "ccfLevel": 9,
        "title": "CF932F-Escape Through Leaf\u3010\u6811\u4e0a\u542f\u53d1\u5f0f\u5408\u5e76,CDQ\u5206\u6cbb,\u659c\u7387\u4f18\u5316dp\u3011"
    },
    {
        "content": "$\\large\\text{Solution}$\n\n\u6211\u4eec\u8bbe $dp_i$ \u8868\u793a\u7f16\u53f7\u4e3a $i$ \u7684\u8282\u70b9\u5230\u8fbe\u8be5\u6811\u53f6\u5b50\u8282\u70b9\u7684\u6700\u5c0f\u82b1\u8d39\uff0c\u90a3\u4e48\u663e\u7136\u6211\u4eec\u6709\u4ee5\u4e0b\u7684\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$$dp_i=\\begin{cases}0&i \\text{ is leaf}\\\\\\min\\limits_{j \\in child_s}\\left\\{dp_j+a_i \\times b_j\\right\\}&\\text{Otherwide}\\\\\\end{cases}$$\n\n\u76f4\u63a5\u8f6c\u79fb\u662f $\\text{O}\\left(n^2\\right)$ \u7684\uff0c\u8003\u8651\u5982\u4f55\u4f18\u5316\u3002\n\n\u6211\u4eec\u4ee4 $dp_j+a_i \\times b_j$ \u4e3a $y$ \uff0c$a_i$ \u4e3a $x$ \uff0c\u5219\u6211\u4eec\u53ef\u4ee5\u5728\u4e8c\u7ef4\u5e73\u9762\u4e0a\u7528 $y=b_j \\times x + dp_j$ \u8fd9\u6761\u76f4\u7ebf\u8868\u793a\u51fa\u4e00\u79cd\u8f6c\u79fb\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u6211\u4eec\u6c42 $\\min\\left\\{dp_j+a_i \\times b_j\\right\\}$ \u7b49\u4ef7\u4e8e\u5728\u82e5\u5e72\u6761\u76f4\u7ebf\u627e\u5230\u4e00\u6761\u76f4\u7ebf\uff0c\u4f7f\u5176\u4e0e $x=a_i$ \u4ea4\u70b9\u7684\u7eb5\u5750\u6807\u6700\u5c0f\uff0c\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u674e\u8d85\u6811\u7ef4\u62a4\u3002\n\n\u53ef\u4ee5\u5148\u5c06\u6811\u7684 dfs \u5e8f\u5904\u7406\u51fa\u6765\uff0c\u90a3\u4e48 dp \u7684\u8f6c\u79fb\u4fbf\u662f\u4e00\u4e2a\u533a\u95f4\uff0c\u56e0\u6b64\u7ebf\u6bb5\u6811\u5957\u674e\u8d85\u6811\u7ef4\u62a4\u4e00\u4e0b\u5c31\u884c\u4e86\u3002\n\n\u590d\u6742\u5ea6 $\\text{O}\\left(n \\log^2 n\\right)$\n\n$\\large\\text{Code}$\n\n```cpp\nconst int N=4e5+5;\nint n,a[N],b[N],dfn[N],low[N],ans[N],cnt;\n\nvector<int> val,lcc,rcc;\n\nstruct Edge\n{\n\tint v,ne;\n}e[N*2];\nint head[N],tot;\n\nstruct Line\n{\n\tint k,b;\n}c[N];\n\ninline int f(int id,int v);\ninline void add(int u,int v);\nvoid dfs1(int u,int fa);\nvoid dfs2(int u,int fa);\nvoid build(int x,int l,int r);\nvoid update1(int x,int l,int r,int p,int v);\nint query1(int x,int l,int r,int L,int R,int v);\nvoid update2(int x,int l,int r,int v);\nint query2(int x,int l,int r,int v);\n\nsigned main()\n{\n\tn=read();\n\tfor(int i=1;i<=n;++i) a[i]=read();\n\tfor(int i=1;i<=n;++i) b[i]=read();\n\tfor(int i=1;i<=n-1;++i)\n\t{\n\t\tint u=read(),v=read();\n\t\tadd(u,v);add(v,u);\n\t}\n\tc[0].b=1e18;\n\tdfs1(1,0);\n\tcnt=0;build(1,1,n);\n\tfor(int i=0;i<=cnt;++i)\n\t{\n\t\tval.push_back(0);\n\t\tlcc.push_back(0);\n\t\trcc.push_back(0);\n\t}\n\tdfs2(1,0);\n\tfor(int i=1;i<=n;++i)\n\t\tprintf(\"%lld \",ans[i]);\n\treturn 0;\n}\n\ninline int f(int id,int v)\n{\n\treturn c[id].k*v+c[id].b;\n}\n\ninline void add(int u,int v)\n{\n\te[++tot]=(Edge){v,head[u]};\n\thead[u]=tot;\n}\n\nvoid dfs1(int u,int fa)\n{\n\tdfn[u]=++cnt;\n\tfor(int i=head[u];i;i=e[i].ne)\n\t{\n\t\tint v=e[i].v;\n\t\tif(v==fa) continue;\n\t\tdfs1(v,u);\n\t}\n\tlow[u]=cnt;\n}\n\nvoid dfs2(int u,int fa)\n{\n\tint fl=1;\n\tfor(int i=head[u];i;i=e[i].ne)\n\t{\n\t\tint v=e[i].v;\n\t\tif(v==fa) continue;\n\t\tdfs2(v,u);fl=0;\n\t}\n\tif(fl) ans[u]=0;\n\telse ans[u]=query1(1,1,n,dfn[u]+1,low[u],a[u]+100001);\n\tc[u]=(Line){b[u],ans[u]};\n\tupdate1(1,1,n,dfn[u],u);\n}\n\nvoid build(int x,int l,int r)\n{\n\tcnt=max(cnt,x);\n\tif(l==r) return;\n\tbuild(lc,l,mid);\n\tbuild(rc,mid+1,r);\n}\n\nvoid update1(int x,int l,int r,int p,int v)\n{\n\tupdate2(x,1,200001,v);\n\tif(l==r) return;\n\tif(p<=mid) update1(lc,l,mid,p,v);\n\telse update1(rc,mid+1,r,p,v);\n}\n\nint query1(int x,int l,int r,int L,int R,int v)\n{\n\tif(L<=l&&r<=R) return query2(x,1,200001,v);\n\tint res=1e18;\n\tif(L<=mid) res=min(res,query1(lc,l,mid,L,R,v));\n\tif(mid+1<=R) res=min(res,query1(rc,mid+1,r,L,R,v));\n\treturn res;\n}\n\nvoid update2(int x,int l,int r,int v)\n{\n\tif(l==r)\n\t{\n\t\tif(f(v,l-100001)<f(val[x],l-100001))\n\t\t\tval[x]=v;\n\t\treturn;\n\t}\n\tif(c[v].k>c[val[x]].k)\n\t{\n\t\tif(f(v,mid-100001)<f(val[x],mid-100001))\n\t\t{\n\t\t\tif(!rcc[x])\n\t\t\t{\n\t\t\t\trcc[x]=++cnt;\n\t\t\t\tval.push_back(0);\n\t\t\t\tlcc.push_back(0);\n\t\t\t\trcc.push_back(0);\n\t\t\t}\n\t\t\tupdate2(rcc[x],mid+1,r,val[x]),val[x]=v;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(!lcc[x])\n\t\t\t{\n\t\t\t\tlcc[x]=++cnt;\n\t\t\t\tval.push_back(0);\n\t\t\t\tlcc.push_back(0);\n\t\t\t\trcc.push_back(0);\n\t\t\t}\n\t\t\tupdate2(lcc[x],l,mid,v);\n\t\t}\n\t}\n\tif(c[v].k<c[val[x]].k)\n\t{\n\t\tif(f(v,mid-100001)<f(val[x],mid-100001))\n\t\t{\n\t\t\tif(!lcc[x])\n\t\t\t{\n\t\t\t\tlcc[x]=++cnt;\n\t\t\t\tval.push_back(0);\n\t\t\t\tlcc.push_back(0);\n\t\t\t\trcc.push_back(0);\n\t\t\t}\n\t\t\tupdate2(lcc[x],l,mid,val[x]);val[x]=v;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(!rcc[x])\n\t\t\t{\n\t\t\t\trcc[x]=++cnt;\n\t\t\t\tval.push_back(0);\n\t\t\t\tlcc.push_back(0);\n\t\t\t\trcc.push_back(0);\n\t\t\t}\n\t\t\tupdate2(rcc[x],mid+1,r,v);\n\t\t}\n\t}\n\tif(c[v].k==c[val[x]].k)\n\t{\n\t\tif(f(v,mid-100001)<f(val[x],mid-100001))\n\t\t\tval[x]=v;\n\t\treturn;\n\t}\n}\n\nint query2(int x,int l,int r,int v)\n{\n\tif(x==0) return 1e18;\n\tint res=f(val[x],v-100001);\n\tif(l==r) return res;\n\tif(v<=mid) return min(res,query2(lcc[x],l,mid,v));\n\telse return min(res,query2(rcc[x],mid+1,r,v));\n}\n```",
        "postTime": 1613301690,
        "uid": 157462,
        "name": "H6_6Q",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF932F \u3010Escape Through Leaf\u3011"
    },
    {
        "content": "\u9898\u9762\u8bf4\u7684\u5f88\u6e05\u695a\u4e86\uff0c\u8fd9\u9898\u60f3\u8ba9\u6211\u4eec\u6c42\u6811\u4e0a\u6bcf\u4e2a\u70b9 $x$ \u5230 \u6811\u4e0a\u4efb\u4e00\u53f6\u5b50\u8282\u70b9 $y$ \u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\n\n\u8bbe $f_{x,y}$ \u4e3a\u4ece $x$ \u53f7\u8282\u70b9\u5230\u8fbe $i$ \u53f7\u53f6\u5b50\u8282\u70b9\u7684\u6700\u5c0f\u8d39\u7528\u3002\n![](https://cdn.luogu.com.cn/upload/image_hosting/k6wnbfvy.png)\n\n$subtree(x)$ \u4e3a\u4ee5 $x$ \u4e3a\u6839\u7684\u5b50\u6811\u5185\u7684\u70b9\u6784\u6210\u7684\u96c6\u5408\u3002\n\n\u89c2\u5bdf\u4e0a\u5f0f\u53ef\u4ee5\u53d1\u73b0\uff0c\u5f53 $y$ \u7684\u503c\u56fa\u5b9a\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u5f0f\u5b50\u5176\u5b9e\u5c31\u662f $kx+b$\uff0c\u4e8e\u662f\u53ef\u4ee5\u4f7f\u7528\u674e\u8d85\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u3002\n\n\u4f46\u662f\u8fd9\u662f\u4e00\u4e2a\u6811\u4e0a\u95ee\u9898\uff0c\u6211\u4eec\u8003\u8651\u6bcf\u6b21\u5982\u4f55\u5408\u5e76 $x$ \u7684\u5b50\u6811\u5bf9\u5e94\u7684\u674e\u8d85\u7ebf\u6bb5\u6811\uff0c\u53ef\u4ee5\u60f3\u5230\u4f7f\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u674e\u8d85\u7ebf\u6bb5\u6811\u7684\u5408\u5e76\u4e5f\u5f88\u7b80\u5355\uff0c\u8fb9 $add$ \u65b0\u5408\u5e76\u7684\u6811\u7684\u5f53\u524d\u8282\u70b9\u7684 $tag$\uff0c\u7136\u540e\u9012\u5f52\u5408\u5e76\u5373\u53ef\uff0c\u5927\u4f53\u540c\u7ebf\u6bb5\u6811\u5408\u5e76\u662f\u4e00\u6837\u7684\u3002\n\n**Code**\n\n```cpp\n#include<cstdio>\n#include<climits>\ntypedef long long ll;\nconst ll inf=LLONG_MAX;\nconst int infL=-1e5,infR=1e5;\nint tot=0,num=0,cnt=0;\nll b[300005],k[300005],res[300005];\nint a[300005],c[300005];\nint h[300005],to[600005],ver[600005];\nint rt[300005],sonL[5000005],sonR[5000005],tag[5000005];\ninline int read() {\n\tregister int x=0,f=1;register char s=getchar();\n\twhile(s>'9'||s<'0') {if(s=='-') f=-1;s=getchar();}\n\twhile(s>='0'&&s<='9') {x=x*10+s-'0';s=getchar();}\n\treturn x*f;\n}\ninline void add(int x,int y) {to[++cnt]=y;ver[cnt]=h[x];h[x]=cnt;}\ninline ll min(ll x,ll y) {return x<y? x:y;}\ninline ll calc(ll x,int id) {return k[id]*x+b[id];}\ninline void change(int &p,int l,int r,int id) {\n\tif(!p) {tag[p=++tot]=id;return;}\n\tif(l==r) {\n        if(calc(l,id)<calc(l,tag[p])) tag[p]=id;\n        return;\n    }\n    int mid=l+r>>1;\n    if(k[id]<k[tag[p]]) {\n        if(calc(mid,id)<=calc(mid,tag[p])) {change(sonL[p],l,mid,tag[p]);tag[p]=id;}\n        else {change(sonR[p],mid+1,r,id);}\n    }\n    else if(k[id]>k[tag[p]]) {\n        if(calc(mid,id)<=calc(mid,tag[p])) {change(sonR[p],mid+1,r,tag[p]);tag[p]=id;}\n        else {change(sonL[p],l,mid,id);}\n    }\n    else if(b[id]<b[tag[p]]) {\n        tag[p]=id;\n        return;\n    }\n}\ninline ll ask(int p,int l,int r,int x) {\n\tif(!p) return inf;\n\tif(l==r) return calc(l,tag[p]);\n\tint mid=l+r>>1;\n\tll minn=calc(x,tag[p]);\n\tif(x<=mid) return min(minn,ask(sonL[p],l,mid,x));\n\telse return min(minn,ask(sonR[p],mid+1,r,x));\n}\ninline int merge(int x,int y,int l,int r) {\n\tif(!x||!y) return x+y;\n\tif(l==r) return calc(l,tag[x])>calc(l,tag[y])? y:x;\n\tint mid=l+r>>1;\n\tsonL[x]=merge(sonL[x],sonL[y],l,mid);\n\tsonR[x]=merge(sonR[x],sonR[y],mid+1,r);\n\tchange(x,l,r,tag[y]);\n\treturn x;\n}\ninline void dfs(int x,int fa) {\n\tint du=0;\n\tfor(register int i=h[x];i;i=ver[i]) {\n\t\tint y=to[i];\n\t\tif(y==fa) continue;\n\t\tdfs(y,x);++du;\n\t\trt[x]=merge(rt[x],rt[y],infL,infR);\n\t}\n\tk[++num]=c[x];\n\tif(du) res[x]=b[num]=ask(rt[x],infL,infR,a[x]); \n\telse res[x]=b[num]=0;\n\tchange(rt[x],infL,infR,num);\n}\nsigned main() {\n\tint n=read();\n\tfor(register int i=1;i<=n;++i) a[i]=read();\n\tfor(register int i=1;i<=n;++i) c[i]=read();\n\tfor(register int i=1;i<n;++i) {int x=read(),y=read();add(x,y);add(y,x);}\n\tdfs(1,-1);\n\tfor(register int i=1;i<=n;++i) printf(\"%lld \",res[i]);\n\treturn 0;\n}\n```",
        "postTime": 1588330340,
        "uid": 95244,
        "name": "tommymio",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF932F \u3010Escape Through Leaf\u3011"
    },
    {
        "content": "[$\\texttt{link}$](https://www.luogu.com.cn/problem/CF932F)\n\nupdate 2021.10.13\uff1a\u4fee\u6b63\u4e86\u67d0\u4e9b\u9519\u8bef\u3002\n\n\u5f88\u6709\u610f\u601d\u7684\u4e00\u9053\u9898\uff0c\u603b\u7b97\u8c03\u51fa\u6765\u4e86\uff0c\u5206\u4eab\u4e0b\u81ea\u5df1\u7684\u601d\u8def\u3002\n\n\u663e\u7136\u53ef\u4ee5\u6811\u5f62 DP\uff0c$f_i$ \u8868\u793a\u8282\u70b9 $i$ \u7684\u7b54\u6848\uff0c\u6709\u8f6c\u79fb\u65b9\u7a0b\n$$f_u=\\min (f_v+a_u b_v),v\\in \\text{subtree}(u)$$\n\n\u8fd9\u6837\u5c31\u6709\u4e86\u4e2a $O(n^2)$ \u7684\u505a\u6cd5\uff0c\u8003\u8651\u80fd\u5426\u7528 DS \u4f18\u5316 DP\u3002\n\n\u89c2\u5bdf\u5230\u6709 $f_v+a_ub_v$ \u8fd9\u4e00\u5f62\u5f0f\uff0c\u82e5\u628a $f_v$ \u89c6\u4e3a\u622a\u8ddd\uff0c$a_u$ \u89c6\u4f5c\u8981\u6c42\u503c\u7684\u70b9\uff0c$b_v$ \u89c6\u4e3a\u659c\u7387\uff0c\u53d1\u73b0\u4e0e\u4e00\u6b21\u51fd\u6570 $kx+b$ \u7684\u5f62\u5f0f\u5f88\u76f8\u4f3c\uff0c\u53ef\u4ee5\u628a\u5176\u770b\u6210\u4e00\u6761\u76f4\u7ebf\u3002\n\n\n\u4e8e\u662f\u95ee\u9898\u8f6c\u5316\u4e3a\u5728\u82e5\u5e72\u76f4\u7ebf\u4e2d\uff0c\u6c42 $x=a_u$ \u65f6\u6700\u5c0f\u503c\u6240\u5bf9\u5e94\u76f4\u7ebf\u3002\n\n\u7ef4\u62a4\u82e5\u5e72\u76f4\u7ebf\u67d0\u70b9\u6700\u503c\uff0c\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u5f00\u4e00\u68f5\u674e\u8d85\u7ebf\u6bb5\u6811\uff0c\u4f46\u82e5\u6bcf\u5230\u4e00\u4e2a\u65b0\u8282\u70b9\uff0c\u90fd\u91cd\u65b0\u5efa\u6811\uff0c\u590d\u6742\u5ea6\u4ecd\u4e0d\u80fd\u63a5\u53d7\u3002\n\n\u4ee4 $mn_u(x)$ \u8868\u793a\u5bf9\u4e8e\u70b9 $u$ \u7684\u76f4\u7ebf\u96c6\u5728 $x$ \u5904\u7684\u6700\u5c0f\u503c\uff0c\u53d1\u73b0 $mn_u(x)=\\min (mn_v(x)),v\\in \\text{son}(u)$\uff0c\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u7ef4\u62a4\u6700\u5c0f\u503c\uff0c\u8fd9\u6837\u505a\u7684\u590d\u6742\u5ea6\u53ef\u4ee5\u901a\u8fc7\u644a\u5230 $O(n\\log n)$\uff0c\u5177\u4f53\u8bc1\u660e\u53ef\u4ee5\u770b\u4e0b[\u8fd9\u7bc7\u9898\u89e3](https://www.luogu.com.cn/blog/dqa2020/cf932f-escape-through-leaf-ti-xie)\u3002\n\n\u6709\u5f88\u591a\u9898\u89e3\u8bf4\u8981\u5e73\u79fb\u503c\u57df\uff0c\u4e8b\u5b9e\u4e0a\u674e\u8d85\u7ebf\u6bb5\u6811\u5408\u5e76\u4e0d\u9700\u8981\u5e73\u79fb\u503c\u57df\uff0c\u6b63\u5e38\u5199\u5c31\u597d\u4e86\u3002\n\n\u7136\u540e\u76f4\u63a5\u5957\u677f\u5b50\u5c31\u597d\u4e86\uff0c~~\u6211\u4eba\u50bb\u5e38\u6570\u5927\u8dd1\u4e86 12.22s~~\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int N = 1e5 + 10, W = 1e5;\nint n, a[N], b[N];\nll f[N];\nstruct edge {\n\tint to, nxt;\n} e[N << 1];\nint head[N], cnt;\nvoid add(int u, int v) {\n\te[++cnt] = (edge){v, head[u]};\n\thead[u] = cnt;\n}\nstruct line {\n\tll k, b;\n\tint id;\n} t[N << 2];\nll calc(line x, int d) { return x.k * d + x.b; }\nll cross(line x, line y) { return (x.b - y.b) / (y.k - x.k); }\nint rt[N * 20], ls[N * 20], rs[N * 20], tot;\nvoid insert(int &x, int l, int r, line s) {\n\tif(!x) x = ++tot;\n\tint mid = l + r >> 1;\n\tif(calc(t[x], mid) > calc(s, mid) || !t[x].id) swap(t[x], s);\n\tif(l == r || t[x].k == s.k || !s.id) return;\n\tll p = cross(t[x], s);\n\tif(p < l || p > r) return;\n\tif(s.k > t[x].k) insert(ls[x], l, mid, s);\n\telse insert(rs[x], mid + 1, r, s);\n}\nint merge(int x, int y, int l, int r) {\n\tif(!x || !y) return x + y;\n\tinsert(x, l, r, t[y]);\n\tint mid = l + r >> 1;\n\tls[x] = merge(ls[x], ls[y], l, mid);\n\trs[x] = merge(rs[x], rs[y], mid + 1, r);\n\treturn x;\n}\nline query(int x, int l, int r, int p) {\n\tif(l == r) return t[x];\n\tint mid = l + r >> 1;\n\tline res;\n\tif(mid >= p) res = query(ls[x], l, mid, p);\n\telse res = query(rs[x], mid + 1, r, p);\n\tif(!res.id || calc(t[x], p) < calc(res, p)) return t[x];\n\treturn res;\n}\nvoid dfs(int u, int fa) {\n\tfor(int i = head[u], v; i; i = e[i].nxt) {\n\t\tv = e[i].to;\n\t\tif(v == fa) continue;\n\t\tdfs(v, u);\n\t\trt[u] = merge(rt[u], rt[v], -W, W);\n\t}\n\tint mn = query(rt[u], -W, W, a[u]).id;\n\tf[u] = 1ll * a[u] * b[mn] + f[mn];\n\tinsert(rt[u], -W, W, (line){b[u], f[u], u});\n}\nint main() {\n\tscanf(\"%d\", &n);\n\tfor(int i = 1; i <= n; i++) scanf(\"%d\", &a[i]);\n\tfor(int i = 1; i <= n; i++) scanf(\"%d\", &b[i]);\n\tfor(int i = 1, u, v; i < n; i++) {\n\t\tscanf(\"%d%d\", &u, &v);\n\t\tadd(u, v), add(v, u);\n\t}\n\tdfs(1, 0);\n\tfor(int i = 1; i <= n; i++) printf(\"%lld \", f[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1629891355,
        "uid": 365107,
        "name": "Terac",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF932F Escape Through Leaf"
    },
    {
        "content": "\u6211\u4eec\u53d1\u73b0\u6c42\u7684\u5f0f\u5b50\u662f\u4e00\u4e2ay = kx + b\u7684\u5f62\u5f0f\n\n\u8fd9\u53ef\u4ee5\u7528\u674e\u8d85\u7ebf\u6bb5\u6811\uff01\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u6211\u4eec\u5728\u6811\u4e0a\u5904\u7406\u674e\u8d85\u6811\u7684\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u7528\u5230\u674e\u8d85\u7ebf\u6bb5\u6811\u5408\u5e76\uff0c\u7136\u540e\u6c42\u6700\u503c\u5373\u53ef\uff01\n\n\u8fd9\u91cc\u8bb2\u4e00\u4e0b\u5982\u4f55\u674e\u8d85\u6811\u5408\u5e76\uff01\n\n```cpp\ninline LL calc(LL x, LL k, LL b) { return k * x + b; }\n```\n\n```cpp\ninline void insert(int &rt, int l, int r, LL k, LL b) {\n\tif (!rt) {\n\t\trt = ++cnt; t[cnt].k = k; t[cnt].b = b; return;\n\t}\n\tif (calc(l, k, b) <= calc(l, t[rt].k, t[rt].b) && calc(r, k, b) <= calc(r, t[rt].k, t[rt].b)) {\n\t\tt[rt].k = k; t[rt].b = b; return;\n\t}\n\tif (calc(l, k, b) >= calc(l, t[rt].k, t[rt].b) && calc(r, k, b) >= calc(r, t[rt].k, t[rt].b)) return;\n\tint mid = (l + r) >> 1;\n\tif (calc(mid, k, b) < calc(mid, t[rt].k, t[rt].b)) swap(t[rt].k, k), swap(t[rt].b, b);\n\tinsert(ls[rt], l, mid, k, b);\n\tinsert(rs[rt], mid + 1, r, k, b); \n}\n```\n\u6211\u4eec\u65b9\u4fbf\u8d77\u89c1\u8981\u52a8\u6001\u5f00\u70b9\uff01\n\n\u7136\u540e\u5982\u679c\u8fd9\u4e2a\u8282\u70b9\u6ca1\u6709\uff0c\u4ee3\u8868\u8fd9\u4e2a\u8282\u70b9\u4e00\u4e0b\u4e5f\u662f\u6ca1\u6709\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\nrt = ++cnt\u5e76\u4e14\u4fdd\u5b58\u4fe1\u606f\uff01\n\n\u7136\u540e\u4e0b\u9762\u7684\u548c\u666e\u901a\u7684\u674e\u8d85\u6811\u6ca1\u6709\u533a\u522b\uff01\n\n```cpp\ninline int merge(int x, int y, int l, int r) {\n\tif (!x || !y) return x + y;\n\tint mid = (l + r) >> 1;\n\tls[x] = merge(ls[x], ls[y], l, mid);\n\trs[x] = merge(rs[x], rs[y], mid + 1, r);\n\tinsert(x, l, r, t[y].k, t[y].b);\n\treturn x;\n}\n```\nmerge\u548c\u666e\u901a\u7684\u7ebf\u6bb5\u6811\u5408\u5e76\u5dee\u4e0d\u591a\uff0c\u53ea\u662f\u6211\u4eec\u9700\u8981\u628ay\u7684\u4fe1\u606f\u63d2\u5165\u5408\u5e76\u7684x\u91cc\u9762\uff01\n\n\u63a5\u4e0b\u6765\u662fQuery\uff0c\u5c31\u5b8c\u5168\u548c\u666e\u901a\u674e\u8d85\u6811\u7684Query\u4e00\u6837\u4e86\uff01\n\n```cpp\ninline LL Query(int rt, int l, int r, int x) {\n\tif (!rt) return INFLL;\n\tLL ret = calc((LL)x, t[rt].k, t[rt].b);\n\tif (l == r) return ret;\n\tint mid = (l + r) >> 1;\n\tif (x <= mid) return min(ret, Query(ls[rt], l, mid, x));\n\treturn min(ret, Query(rs[rt], mid + 1, r, x));\n}\n```\n\u5269\u4e0b\u7684\u5c31\u662f\u590d\u6742\u5ea6\u8bc1\u660e\uff1a\u8fd9\u91cc\u7531\u4e8e\u7bc7\u5e45\u539f\u56e0\uff0c\u7b80\u5355\u5730\u8bf4\u4e00\u4e0b\n\n\u5927\u6982\u662f\uff1a\n\n\u9996\u5148insert\u7684\u590d\u6742\u5ea6\u662flogN\u7684\uff0c\u56e0\u4e3a\u53ea\u8981\u6709\u4e00\u4e2a\u6ca1\u6709\u51fa\u73b0\u7684\uff0c\u6211\u4eec\u76f4\u63a5return\uff01\n\n\u5408\u5e76\u53ef\u4ee5\u6839\u636e\u5c42\u6570\u8003\u8651\u4e00\u4e0b\uff0c\u53d1\u73b0\u548c\u666e\u901a\u7684\u7ebf\u6bb5\u6811\u5408\u5e76\u4e00\u6837\uff0c\u53ea\u662f\u6211\u4eec\u8981\u5728\u6bcf\u6b21merge\u7684\u65f6\u5019insert\u4e00\u6b21\uff0c\u8fd9\u5bfc\u81f4\u590d\u6742\u5ea6\u591a\u4e86\u4e00\u4e2alog\uff0c\u56e0\u6b64\u662f(logN)^2\u7684\uff01\n\n\u6240\u4ee5\u603b\u590d\u6742\u5ea6O(N*(logN)^2)\uff0c\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\uff01\n\n",
        "postTime": 1578306865,
        "uid": 203968,
        "name": "ConorGallagher23",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF932F \u3010Escape Through Leaf\u3011"
    }
]