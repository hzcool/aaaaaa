[
    {
        "content": "### $\\text{Solution:}$\n\n\u9996\u5148\u89c2\u5bdf\u4e00\u4e0b\u6027\u8d28\u3002\n\n#### Key Observation: \u64cd\u4f5c\u524d\u540e\u6e38\u620f\u53cc\u65b9\u7684\u5dee\u4e0d\u53d8\u3002\n\n\u539f\u56e0\u5f88\u7b80\u5355\u3002\u4e24\u4eba\u51cf\u6389\u7684\u503c\u76f8\u540c\u3002\n\n\u90a3\u4e48\u8003\u8651\u5982\u4f55\u5229\u7528\u8fd9\u4e00\u70b9\u3002\u4e0d\u59a8\u5148\u6c42\u51fa\u4e00\u4e2a\u6700\u9760\u524d\u7684\u4f4d\u7f6e\u4f7f\u5176\u53ef\u4ee5\u80dc\u5229\uff0c\u90a3\u4e48\u6bcf\u6b21\u51cf\u6389\u7684\u4e00\u5b9a\u662f\u4e24\u4e2a\u524d\u7f00\u548c\u7684\u6700\u5c0f\u503c\uff0c\u6211\u4eec\u7684\u76ee\u7684\u5c31\u662f\u5728\u4fdd\u8bc1\u4eba\u4e0d\u8f93\u7684\u60c5\u51b5\u4e0b\u627e\u5230\u4e00\u4e2a\u6700\u9760\u524d\u7684\u4f4d\u7f6e\u4f7f\u5f97\u673a\u5668\u4eba\u8f93\uff08\u4e0d\u8003\u8651 $k$ \u7684\u9650\u5236\u4e0b\uff09\n\n\u90a3\u8fd9\u6837\u5c31\u53ef\u4ee5\u76f4\u63a5\u62ff\u6307\u9488\u626b\u4e86\u3002\u6211\u4eec\u53ea\u9700\u8981\u51cf\u6389\u6700\u4f4e\u9650\u5ea6\u7684\u503c\u6765\u4fdd\u8bc1\u4eba\u4e0d\u6b7b\uff0c\u56e0\u6b64\u4e00\u65e6\u6709\u4e00\u4e2a\u4f4d\u7f6e\u673a\u5668\u4eba\u51fa\u5c40\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4f4d\u7f6e\u4e00\u5b9a\u662f**\u64cd\u4f5c\u7684\u672b\u5c3e**\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5 $O(n)$ \u83b7\u5f97\u8fd9\u4e2a\u672b\u5c3e\u3002\u63a5\u4e0b\u6765\u8003\u8651\u6784\u9020\u65b9\u6848\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u4e4b\u524d\u7684\u505a\u6cd5\u552f\u4e00\u6ca1\u6709\u8003\u8651\u7684\u5c31\u662f\u64cd\u4f5c\u7684\u8fc7\u7a0b\u4e2d\u662f\u5426\u4eba\u5df2\u7ecf\u51fa\u5c40\uff0c\u800c\u5176\u4e2d\u9700\u8981\u6dfb\u8fdb\u53bb\u7684\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u6a21\u62df\u4e00\u904d\u52a0\u6570\u7684\u8fc7\u7a0b\u3002\u6bcf\u6b21\u5230\u8fbe\u51fa\u5c40\u4e34\u754c\uff0c\u5c31\u5728\u6b64\u65f6\u8fdb\u884c\u4e00\u6b21\u64cd\u4f5c\u5373\u53ef\u3002\u56e0\u4e3a\u6211\u4eec\u7684\u76ee\u7684\u4ec5\u4ec5\u662f\u60f3\u8981\u5728\u5230\u8fbe\u64cd\u4f5c\u672b\u5c3e\u524d\u4f7f\u5f97\u4eba\u4e0d\u51fa\u5c40\u800c\u5df2\uff0c\u800c\u8fd9\u4e2a\u64cd\u4f5c\u6b21\u6570\u6709\u663e\u7136\u7684\u5355\u8c03\u6027\uff0c\u4e00\u8fb9\u626b\u4e00\u8fb9\u64cd\u4f5c\u5c31\u662f\u5bf9\u7684\u3002\n\n\u90a3\u4e48\u56de\u8fc7\u5934\u6765\u601d\u8003\uff0c\u6211\u4eec\u4e3a\u4ec0\u4e48\u9700\u8981\u6c42\u51fa\u90a3\u4e2a\u64cd\u4f5c\u672b\u5c3e\u5462\uff1f\u76f4\u63a5\u626b\u4e0d\u5bf9\u5417\uff1f\n\n\u8003\u8651\u6211\u4eec\u626b\u7684\u8fc7\u7a0b\u4f7f\u7528\u7684\u7b56\u7565\uff1a\u5c3d\u91cf\u665a\u5730\u8fdb\u884c `reset` \u3002\u8fd9\u4e2a\u7b56\u7565\u653e\u5728\u957f\u8fdc\u6765\u770b\uff0c**\u5bb9\u6613\u4f7f\u5f97\u673a\u5668\u4eba\u4e0d\u8f93**\u3002\u56e0\u6b64\u6211\u4eec\u9700\u8981\u77e5\u9053\u8fd9\u4e2a\u7b56\u7565\u7684\u7ed3\u675f\u4f4d\u7f6e\uff0c\u4e5f\u5c31\u662f\u4ece\u54ea\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u6211\u4eec\u53ef\u4ee5\u4e00\u51fb\u5236\u80dc\u3002\u90a3\u4e48\u524d\u4e00\u6bb5\u7684\u6307\u9488\u5c31\u662f\u4e3a\u4e86\u83b7\u5f97\u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u7531\u4e8e\u5dee\u503c\u4e0d\u53d8\uff0c\u6211\u4eec\u53ea\u9700\u8981\u627e\u5230\u4e00\u4e2a\u6700\u9760\u524d\u7684\u4f4d\u7f6e\uff0c\u4f7f\u5f97\u4eba\u4e0d\u6b7b\u800c\u673a\u5668\u4eba\u51fa\u5c40\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u64cd\u4f5c\u524d\u7f00\u672b\u5c3e\u5c31\u662f\u6211\u4eec\u7684\u6784\u9020\u65b9\u6848\u672b\u5c3e\u3002\n\n\u603b\u590d\u6742\u5ea6\u5c31\u662f $O(n).$\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef double db;\n#define int long long\n#define fi first\n#define se second\n#define mk make_pair\n#define pb emplace_back\n#define poly vector<int>\n#define Bt(a) bitset<a>\n#define bc __builtin_popcount\n#define pc putchar\n#define ci const int&\nconst int mod = 998244353;\nconst db eps = 1e-10;\ninline int Max(ci x, ci y) {return x > y ? x : y;}\ninline int Min(ci x, ci y) {return x < y ? x : y;}\ninline db Max(db x, db y) {return x - y > eps ? x : y;}\ninline db Min(db x, db y) {return x - y < eps ? x : y;}\ninline int Add(ci x, ci y, ci M = mod) {return (x + y) % M;}\ninline int Mul(ci x, ci y, ci M = mod) {return 1ll * x * y % M;}\ninline int Dec(ci x, ci y, ci M = mod) {return (x - y + M) % M;}\ntypedef pair<int, int> pii;\ninline int Abs(int x) {return x < 0 ? -x : x;}\n//char buf[1<<21],*p1=buf,*p2=buf;\n//#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar Obuf[105000],*O=Obuf;//Siz shoule be the size of Out File\nint pst[30],ptop;\ninline void Fprint(){fwrite(Obuf,1,O-Obuf,stdout);}\ninline void Fwrite(int x){\n  if(x==0){*O++='0';if(O-Obuf>100000)Fprint(),O=Obuf;return;}\n  if(x<0)*O++='-',x=-x;ptop=0;\n  while(x)pst[++ptop]=x%10,x/=10;\n  while(ptop)*O++=pst[ptop--]+'0';\n  if(O-Obuf>100000)Fprint(),O=Obuf;\n}\ninline int read() {\n    int s = 0, w = 1;\n    char ch = getchar();\n    while (!isdigit(ch)) {if (ch == '-') w = -1;ch = getchar();}\n    while (isdigit(ch)) {s = s * 10 + ch - '0';ch = getchar();}\n    return s * w;\n}\ninline void write(int x) {\n    if (x < 0)putchar('-'), x = -x;\n    if (x > 9)write(x / 10);\n\tpc(x % 10 + '0');\n}\ninline int qpow(int x, int y) {\n    int res = 1;\n    while (y) {if (y & 1)res = Mul(res, x);x = Mul(x, x);y >>= 1;}\n    return res;\n}\ninline void cadd(int &x, int y) {x += y;}\ninline void cmul(int &x, int y) {x *= y;}\ninline void cmax(int &x, int y) {x = Max(x, y);}\ninline void cmin(int &x, int y) {x = Min(x, y);}\nconst int N = 4e5 + 10;\nconst int inf = 1LL << 60;\nnamespace Refined_heart{\n\tint T,n,k,a[N],b[N];\n\tint sa[N],sb[N],s[N];\n\tint f[N];\n\tinline int calc(int x,int y,int op=0){\n\t\tif(op==1)return sb[y]-s[x];\n\t\treturn sa[y]-s[x];\n\t}\n\t\n\tvoid work(){\n\t\tfor(int i=1;i<=n+10;++i)sa[i]=sb[i]=s[i]=0;\n\t\tpoly Ans;\n\t\tsa[0]=sb[0]=s[0]=0;\n\t\tfor(int i=1;i<=n;++i){\n\t\t\tsa[i]=sa[i-1]+a[i];\n\t\t\tsb[i]=sb[i-1]+b[i];\n\t\t\ts[i]=Min(sa[i],sb[i]);\n\t\t}\n\t\tint pre=0,ans=-1;\n\t\tfor(int i=1;i<=n;++i){\n\t\t\twhile(pre<=n&&sa[i]-k>=s[pre])++pre;\n\t\t\tif(sa[i]-k<s[pre]&&sb[i]-k>=s[pre]){\n\t\t\t\tans=i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!pre||ans==-1){\n\t\t\tif(ans==-1)puts(\"-1\");\n\t\t\telse puts(\"0\\n\");\n\t\t\treturn;\n\t\t}\n\t\tint A=0,B=0;\n\t\tint pos=0;\n\t\tfor(int i=1;i<pre;++i){\n\t\t\tA+=a[i];B+=b[i];\n\t\t\tpos=i;\n\t\t\tif(B>=k)break;\n\t\t\tif(A+a[i+1]>=k){\n\t\t\t\tAns.pb(i);\n\t\t\t\tint vl=Min(A,B);\n\t\t\t\tA-=vl;\n\t\t\t\tB-=vl;\n\t\t\t\tif(A+a[i+1]>=k){\n\t\t\t\t\tputs(\"-1\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tAns.pb(pre);\n\t\tif(Ans.empty())puts(\"0\\n\");\n\t\telse{\n\t\t\tcout<<(int)Ans.size()<<\"\\n\";\n\t\t\tfor(auto v:Ans)cout<<v<<' ';\n\t\t\tcout<<\"\\n\";\n\t\t}\n\t\t\n\t}\n\tvoid solve(){\n\t\tT=read();\n\t\twhile(T--){\n\t\t\tn=read();k=read();\n\t\t\tfor(int i=1;i<=n+10;++i)a[i]=b[i]=0;\n\t\t\tfor(int i=1;i<=n;++i)a[i]=read();\n\t\t\tfor(int i=1;i<=n;++i)b[i]=read();\n\t\t\twork();\n\t\t}\n\t}\n}\nsigned main(){\n  \tfreopen(\"in.txt\",\"r\",stdin);\n\tRefined_heart::solve();\n\treturn 0;\n}\n\n```\n\n\n\u53c2\u8003\u9898\u89e3\uff1ahttps://www.cnblogs.com/Jiaaaaaaaqi/p/11971732.html",
        "postTime": 1648968659,
        "uid": 128591,
        "name": "Refined_heart",
        "ccfLevel": 9,
        "title": "CF1250G Discarding Game \u9898\u89e3"
    }
]