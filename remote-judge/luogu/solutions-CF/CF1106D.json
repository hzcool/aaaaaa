[
    {
        "content": "\u4eca\u5929\u6a21\u62df\u8d5b\u505a\u5230\u4e86\u4e00\u9053\u597d\u9898\uff08\u9898\u76ee\u4f20\u9001\u95e8\uff09\uff1a[CF1106D](https://www.luogu.org/problemnew/show/CF1106D)\n\n\u867d\u7136\u662f\u82f1\u6587\u9898\uff0c\u4f46\u662f\u6d1b\u8c37\u5f88\u597d\u5fc3\u5730\u7ed9\u4e86\u4e2d\u6587\u7ffb\u8bd1~~\uff08\u4e5f\u5c31\u662f\u4e00\u53e5\u8bdd\u9898\u610f\uff09~~\uff1a**\u7528\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u65b9\u6cd5\u8d70\u8fc7\u56fe\u4e0a\u7684\u6240\u6709\u70b9** \n\n\u770b\u5230\u8fd9\u9053\u9898\u8bb8\u591a\u4eba\u60f3\u5230\u7684\u5c31\u662f\u56fe\u7684\u904d\u5386\u3002\u5176\u5b9e\u6211\u4e2a\u4eba\u8ba4\u4e3a\uff0c\u8fd9\u9053\u9898\u548c\u56fe\u7684\u904d\u5386\u6709\u4e00\u70b9\u70b9\u50cf\u3002\u4e0b\u9762\u5148\u7ed9\u51fa\u56fe\u7684\u904d\u5386\u7684\u4ee3\u7801\uff08\u524d\u5411\u661f\u5b58\u56fe\uff09\uff1a\n\n```cpp\n/*\n\u8f93\u5165\u683c\u5f0f:\n\u5171M+1\u884c\u3002\n\u7b2c1\u884c\u5305\u542b2\u4e2a\u6b63\u6574\u6570N\uff0cM\uff0c\u8868\u793a\u6709N\u4e2a\u70b9\uff0cM\u6761\u8fb9\u3002\n\u7b2c2\uff5eM+1\u884c\u5305\u542b2\u4e2a\u7528\u7a7a\u683c\u9694\u5f00\u7684\u6b63\u6574\u6570u,v\uff0c\u8868\u793a\u4e00\u6761\u4eceu\u5230v\u7684\u65e0\u5411\u8def\u5f84\u3002\u6ce8\u610f\uff0c\u53ef\u80fd\u4f1a\u6709\u91cd\u8fb9\u548c\u81ea\u73af\uff0c\u4e00\u4e2a\u70b9\u4e0d\u4e0e\u81ea\u5df1\u76f8\u90bb\u3002\n\n\u8f93\u51fa\u683c\u5f0f:\n\u5171N\u884c\uff0c\u7531\u5c0f\u5230\u5927\u8f93\u51fa\u6bcf\u4e2a\u70b9\u76f8\u90bb\u7684\u70b9\uff0c\u5982\u679c\u8fd9\u4e2a\u70b9\u662f\u5b64\u7acb\u7684\uff0c\u5219\u8f93\u51fa\u4e00\u4e2a\u7a7a\u884c\u3002\n*/\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=500000;\nint n,m,ans,tot=0;\nint head[N],nex[N],to[N],f[N];\nvoid add_edge(int x,int y)\n{\n    for(int i=head[x];i;i=nex[i]) if(to[i]==y) return;\n    to[++tot]=y;\n    nex[tot]=head[x];\n    head[x]=tot;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;++i)\n    {\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        if(x!=y) add_edge(x,y),add_edge(y,x);\n    }\n    for(int i=1;i<=n;++i)\n    {\n        ans=0;\n        for(int j=head[i];j;j=nex[j]) f[++ans]=to[j];\n        if(ans==0) printf(\"\\n\");\n        else\n        {\n            sort(f+1,f+ans+1);\n            for(int k=1;k<=ans;++k) printf(\"%d \",f[k]);\n            printf(\"\\n\");\n        }\n    }\n    return 0;\n}\n```\n\n\n\n\u8fd9\u9053\u9898\u8bf4\u767d\u4e86\u4e5f\u53ef\u4ee5\u8bf4\u662f\u56fe\u7684\u904d\u5386\uff0c\u4e5f\u662f\u4ece\u7b2c\u4e00\u4e2a\u8282\u70b9\u5f00\u59cb\u4e00\u6b65\u4e00\u6b65\u904d\u5386\uff0c\u4e00\u76f4\u904d\u5386\u5230\u5c06\u6240\u6709\u7684\u70b9\u5168\u90e8\u904d\u5386\u5b8c\u3002\u6240\u4ee5\u8fd9\u91cc\u5c31\u5f88\u5bb9\u6613\u60f3\u5230\u7b97\u6cd5\uff0c\u4e5f\u5f88\u5bb9\u6613\u5199\u51fa\u4f2a\u4ee3\u7801\uff1a\n\n> \u524d\u5411\u661f\u5b58\u56fe\u7684\u90a3\u4e9b\u4e1c\u897f\u4e0d\u7528\u8bf4\u4e86\uff0c\u80cc\u90fd\u53ef\u4ee5\u80cc\u4e0b\u6765\n>\n> \u6211\u5f00\u4e86\u4e00\u4e2a $bool$ \u7c7b\u578b $vis$ \u6570\u7ec4\uff0c\u6765\u5b58\u4ece\u7b2c $1$ \u4e2a\u5230\u7b2c $n$ \u4e2a\u8282\u70b9\u662f\u5426\u904d\u5386\u8fc7\n>\n> \u5176\u4ed6\u7684\u4e1c\u897f\u548c\u201c\u56fe\u7684\u904d\u5386\u201d\u5c31\u5f88\u50cf\u4e86\n\n```cpp\nconst int M=1e6+5;\nint n,u,v,tot=0;\nint head[M],to[M],nex[M];\nbool vis[M]={true};\nvoid add_edge(int x,int y)    //\u524d\u5411\u661f\u5b58\u56fe\n{\n    ......\n}\nvoid dfs(int x)\n{\n    vis[x]=false;\n    for(int i=head[x];i;i=nex[i])\n    {\n        if(vis[to[x]]==true)\n        {\n            \u627e\u5230x\u8fde\u51fa\u7684\u8fb9\u6240\u6307\u5411\u7684\u6700\u5c0f\u8282\u70b9p;\n            dfs(p);\n        }\n    }\n}\nint main()\n{\n    \u8f93\u5165, \u5b58\u8fb9;\n    dfs(1);\n    \u8f93\u51fa;\n    return 0;\n}\n```\n\n\n\n\u8fd9\u6837\u4e00\u4e2a\u4f2a\u4ee3\u7801\u5c31\u5199\u597d\u4e86\u3002\u4f46\u662f\u6211\u4eec\u5728\u5b9e\u73b0\u7684\u8fc7\u7a0b\u4e2d\u4f1a\u53d1\u73b0\u5728 $dfs$ \u4e2d\uff0c\u627e\u5230 $x$ \u8fde\u51fa\u7684\u8fb9\u6240\u6307\u5411\u7684\u6700\u5c0f\u8282\u70b9 $p$ \u65f6\uff0c\u6709\u70b9\u96be\u5904\u7406\uff0c\u603b\u4e0d\u80fd\u6bcf\u6b21\u505a $dfs$ \u65f6\u90fd\u6392\u4e00\u4e0b\u5e8f\u5427~~\u3010\u4f60\u975e\u8981\u8fd9\u4e48\u505a\u6211\u4e5f\u4e0d\u62e6\u4f60\uff0c\u81ea\u5df1**TLE** \u522b\u6765\u627e\u3011~~ \n\n\u8fd9\u91cc\uff0c\u6211\u4eec\u5c31\u8981\u8fdb\u51fa\u4eca\u5929\u7684\u4e3b\u89d2\uff1a\u5806\uff01\n\n\n\n## \u5806\uff08\u6392\u5e8f\uff09\n\n\u4f17\u6240\u5468\u77e5\uff0c\u5806\u53ef\u4ee5\u505a\u8bb8\u591a\u4e8b\u60c5\uff0c\u5176\u4e2d**\u5806\u6392\u5e8f**\u5c31\u5f88\u5e38\u7528\uff0c\u590d\u6742\u5ea6\u4e5f\u5f88\u4f18\u79c0\uff1a\n\n> \u63d2\u5165\uff08\u6216\u5220\u9664\uff09\u4e00\u4e2a\u5143\u7d20\uff1a $O(\\log n)$ \n>\n> \u5806\u6392\u5e8f\uff1a$O(n \\log n)$ \n\n\u800c\u4e14\uff0c\u5806\u76f8\u5bf9\u6765\u8bf4\u64cd\u4f5c\u8d77\u6765\u4e5f\u6bd4\u8f83\u7b80\u5355\u3010\u6211\u6307\u7684\u662f**STL**\u4e2d\u7684\u5806\u3011\uff0c\u53ea\u8981\u5b9a\u4e49\u4e00\u4e2a $priority\\_queue$  \u5373\u53ef\u3002\u5177\u4f53\uff08\u5e38\u89c1\uff09\u64cd\u4f5c\u53ef\u4ee5\u5f80\u4e0b\u770b\uff1a\n\n```cpp\npriority_queue<int> q;             \t\t\t\t\t//\u5b9a\u4e49\u5927\u6839\u5806\npriority_queue<int,vector<int>,greater<int> > q;\t//\u5b9a\u4e49\u5c0f\u6839\u5806\n\nint x;\nq.push(x)\t\t\t\t// \u63d2\u5165x\nq.top() \t\t\t\t// \u53d6\u51fa\u5806\u7684\u6839\nq.pop() \t\t\t\t// \u5f39\u51fa\uff08\u5220\u9664\uff09\u5806\u7684\u6839\nq.size()\t\t\t\t// \u5806\u4e2d\u5143\u7d20\u7684\u4e2a\u6570\nq.empty()\t\t\t\t// \u5224\u65ad\u5806\u662f\u5426\u4e3a\u7a7a\n```\n\n\u5982\u679c\u4f60\u89c9\u5f97\u4f60\u5806\u7684\u5185\u5bb9\u8fd8\u6ca1\u638c\u63e1\uff0c\u53ef\u4ee5\u5148\u53bb\u770b\u4e00\u4e0b\u8fd9\u4e24\u9053\u9898\u76ee\uff08\u4f20\u9001\u95e8\uff09\uff1a[P3378 \u3010\u6a21\u677f\u3011\u5806](https://www.luogu.org/problemnew/show/P3378)\uff0c[P1168 \u4e2d\u4f4d\u6570](https://www.luogu.org/problemnew/show/P1168)\n\n\n\n\u5982\u679c\u4f60\u89c9\u5f97\u4f60\u5806\u7684\u77e5\u8bc6\u5df2\u7ecf\u638c\u63e1\u4e86\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u56de\u5230\u8fd9\u9053\u9898\u76ee\uff0c**\u770b\u4e00\u4e0b\u5982\u4f55\u627e\u5230 $x$ \u8fde\u51fa\u7684\u8fb9\u6240\u6307\u5411\u7684\u6700\u5c0f\u8282\u70b9 $p$\u3002** \n\n\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u6211\u662f\u5206\u5272\u7ebf\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\u2026\n\n\n\n> \u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u6211\u662f\u5f00\u4e86\u4e00\u4e2a\u5c0f\u6839\u5806\uff0c\u7136\u540e\u5c06\u8282\u70b9 $x$ \u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u90fd\u4e22\u5230\u5806\u91cc\u9762\u3002\n>\n> \u8fd9\u6837\uff0c\u5806\u9876\u5143\u7d20\u5c31\u662f $x$ \u8fde\u51fa\u7684\u8fb9\u6240\u6307\u5411\u7684\u6700\u5c0f\u8282\u70b9 $p$\u3002\n>\n> \u5f53\u961f\u5217\u7a7a\u4e86\u7684\u65f6\u5019\uff0c\u5c31\u8bf4\u660e\u56fe\u4e2d\u6240\u6709\u7684\u8282\u70b9\u90fd\u88ab\u6211\u4eec\u5904\u7406\u6389\u5566\uff01\uff01\uff01\n>\n> \u53e6\u5916\u5728\u4ee3\u7801\u91cc\uff0c\u6211\u662f\u7528\u529b\u4e00\u4e2a $while$ \u5faa\u73af\uff0c\u770b\u7684\u65f6\u5019\u53ef\u4ee5\u6ce8\u610f\u4e00\u4e0b\u3002\n\n**\u4e0b\u9762\u8d34\u4e0ac++\u4ee3\u7801\uff08\u7ef4\u62a4\u793e\u4f1a\u548c\u5e73\uff0c\u8bf7\u52ff $Ctrl + A$ & $Ctrl + C$\uff09**\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int M=500000;\nint n,m,tot=0;\nint head[M],to[M],nex[M];\nint vis[M],ans[M];\npriority_queue<int,vector<int>,greater<int> > q;\nvoid add_edge(int x,int y)\n{\n    to[++tot]=y;\n    nex[tot]=head[x];\n    head[x]=tot;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;++i)\n    {\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        add_edge(x,y);\n        add_edge(y,x);\n    }\n    q.push(1);\n    int sum=0;\n    while(!q.empty())\n    {\n        int h=q.top();\n        q.pop();\n        vis[h]=1; ans[++sum]=h;\n        for(int i=head[h];i;i=nex[i])\n        {\n            int p=to[i];\n            if(!vis[p])\n            {\n                vis[p]=1;\n                q.push(p);\n            }\n        } \n    }\n    for(int i=1;i<=n;++i) printf(\"%d \",ans[i]);\n    return 0;\n}\n```\n\n\u603b\u800c\u8a00\u4e4b\uff0c\u8fd9\u9898\u7684\u7b97\u6cd5\u5e94\u8be5\u5c31\u662f**\u56fe\u7684\u904d\u5386 + \u5806**\uff0c\u6240\u4ee5\u6839\u672c\u5c31\u6ca1\u6709\u84dd\u9898\u7684\u96be\u5ea6~~\u3010\u6c38\u8fdc\u4e0d\u8981\u76f8\u4fe1\u6d1b\u8c37\u7684\u6807\u7b7e\u3011~~\uff01",
        "postTime": 1564110070,
        "uid": 73362,
        "name": "Believe_R_",
        "ccfLevel": 5,
        "title": "CF1106D Lunar New Year and a Wander \u9898\u89e3"
    },
    {
        "content": "\u8003\u8651\u6700\u77ed\u8def\u7684\u505a\u6cd5\uff1a\n\n\u5728\u5806\u4f18\u5316\u7684Dijkstra\u7b97\u6cd5\u4e2d\uff0c\u5806\u91cc\u4f18\u5148\u5ea6\u6700\u9ad8\u7684\u662f\u201c\u8def\u5f84\u6700\u77ed\u201d\u7684\u8282\u70b9\uff0c\u8fd9\u91cc\u6211\u4eec\u53ea\u9700\u8ba4\u4e3a\u4f18\u5148\u5ea6\u6700\u9ad8\u7684\u662f\u201c\u5e8f\u53f7\u6700\u5c0f\u201d\u7684\u8282\u70b9\u5373\u53ef\u3002\n\n\u6545\uff0c\u7b97\u6cd5\u6d41\u7a0b\u5373\u201c\u4fee\u6539\u4e86\u4f18\u5148\u7ea7\u7684Dijkstra\u7b97\u6cd5\u201d\u3002\n\n\u4e0eNOIP\u539f\u9898\u4e0d\u540c\u7684\u662f\uff0c\u8fd9\u91cc\u5df2\u7ecf\u7ecf\u8fc7\u7684\u8282\u70b9\u53ef\u4ee5\u4efb\u610f\u8bbf\u95ee\uff0c\u6240\u4ee5\u8fd9\u4e2a\u7b97\u6cd5\u6b63\u786e\u6027\u662f\u663e\u7136\u7684\u3002\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=1e5+10;\nint n,m;\nbool vis[maxn];\nvector<int> G[maxn];\nvector<int> ans;\npriority_queue<int,vector<int>,greater<int> > q;\n\nint main(){\n\tcin>>n>>m;\n\tfor(int i=1;i<=m;++i){\n\t\tint u,v; scanf(\"%d%d\",&u,&v);\n\t\tG[u].push_back(v),\n\t\tG[v].push_back(u);\n\t}\n\tq.push(1);\n\twhile(!q.empty()){\n\t\tint u=q.top(); q.pop();\n\t\tif(vis[u]) continue;\n\t\tvis[u]=true;\n\t\tans.push_back(u);\n\t\tfor(int i=0;i<G[u].size();++i){\n\t\t\tint v=G[u][i];\n\t\t\tif(!vis[v]) q.push(v);\n\t\t}\n\t}\n\tfor(int i=0;i<ans.size();++i) printf(\"%d \",ans[i]);\n\treturn 0;\n}\n\n\n```",
        "postTime": 1549005379,
        "uid": 38283,
        "name": "Dog_Two",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF1106D \u3010Lunar New Year and a Wander\u3011"
    },
    {
        "content": "C++ set\u81ea\u52a8\u6392\u5e8f\u4e86\u89e3\u4e00\u4e0b\uff1f\n\n```cpp\nint n,m;\nvector<int>g[100005];\nvector<int>ans;\nset<int>num;\nbool used[100005];\nint main(){\n\tn=getint();m=getint();\n\tfor(int i=0;i<m;i++){\n\t\tint a=getint(),b=getint();\n\t\tg[a].push_back(b);\n\t\tg[b].push_back(a);\n\t}\n\tnum.insert(1);\n\twhile(num.begin()!=num.end()){       //\u5229\u7528\u4e86set\u81ea\u52a8\u6392\u5e8f\u548cbfs\u7684\u539f\u7406\n\t\tint x=*num.begin();\n\t\tused[x]=true;\n\t\tans.push_back(x);                //\u52a0\u5165\u7b54\u6848\u961f\u5217\n\t\tnum.erase(num.begin());\n\t\tfor(auto to:g[x])if(!used[to])num.insert(to); //\u4e0b\u4e00\u6b65\n\t}\n\tfor(auto v:ans)putint(v),put(' ');   //\u8f93\u51fa\n\tput('\\n');\n\tclear();\n\treturn 0;\n}\n```",
        "postTime": 1549000457,
        "uid": 125964,
        "name": "\u4e16\u672bOIer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1106D \u3010Lunar New Year and a Wander\u3011"
    },
    {
        "content": "\u56e0\u4e3a\u4ee5\u904d\u5386\u8fc7\u7684\u8282\u70b9\u53ef\u4ee5\u591a\u6b21\u8bbf\u95ee\u4e14\u4e0d\u5f71\u54cd\u7b54\u6848\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u628a\u80fd\u8d70\u7684\u6240\u6709\u8fb9\u5b58\u4e00\u4e0b\u3002\u4e3a\u4e86\u6ee1\u8db3\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u6bcf\u6b21\u5728\u6240\u4ee5\u53ef\u904d\u5386\u7684\u8282\u70b9\u4e2d\u6311\u6700\u5c0f\u7684\u3002\u800c\u6ee1\u8db3\u6700\u5c0f\u6027\u8d28\u7684\u5c31\u662f\u5806\u548c\u96c6\u5408\u4e86\u3002\n\n[\u4e0d\u4f1a\u5806\u7684\u770b\u8fd9\u91cc](https://www.jianshu.com/p/6b526aa481b1)\n\n[\u4e0d\u4f1a\u96c6\u5408\u7684\u770b\u8fd9\u91cc](https://www.cnblogs.com/woxiaosade/p/10793497.html)\n\nAC\u4ee3\u7801\uff08\u5806\uff09\uff1a\n\n```\n#include<bits/stdc++.h>\n#define maxn 100005\nusing namespace std;\nint n,m,lnk[maxn],tot,now,x,y,hep[maxn],top,nxt[maxn*2],son[maxn*2];\nbool vis[maxn];\ninline int read(){\n\tint ret=0;char ch=getchar();\n\twhile (ch<'0'||ch>'9') ch=getchar();\n\twhile (ch<='9'&&ch>='0') ret=ret*10+ch-'0',ch=getchar();\n\treturn ret;\n}\ninline void add(int x,int y){nxt[++tot]=lnk[x];lnk[x]=tot;son[tot]=y;}\ninline void put(int x){\n    hep[now=++top]=x;\n    while (now>1&&hep[now]<hep[now>>1]) swap(hep[now],hep[now>>1]),now>>=1;\n}\ninline int get(){pop_heap(hep+1,hep+top+1,greater<int>());return hep[top--];}\ninline void Dfs(int x){\n\tprintf(\"%d \",x);tot++;\n\tfor (int i=lnk[x];i;i=nxt[i]) if (!vis[son[i]]) vis[son[i]]=1,put(son[i]);\n\tif (tot!=n) Dfs(get());\n}\nint main(){\n\tn=read(),m=read();\n\tfor (int i=1;i<=m;i++) x=read(),y=read(),add(x,y),add(y,x);\n    tot=0;vis[1]=1;Dfs(1);\n    return 0;\n}\n```\n",
        "postTime": 1564966294,
        "uid": 108047,
        "name": "LlLlCc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1106D \u3010Lunar New Year and a Wander\u3011"
    },
    {
        "content": "## \u4e00.\u601d\u8def\n\n\u663e\u7136\u53ef\u4ee5\u7528\u8d2a\u5fc3\u7684\u601d\u60f3\uff1a\u8981\u4f7f\u5e8f\u5217\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u53ea\u9700\u5728\u6bcf\u4e00\u6b21\u5230\u8fbe**\u65b0\u7684\u70b9**\u65f6\uff0c\u4fdd\u8bc1\u5230\u8fbe\u7684\u662f**\u5f53\u524d\u80fd\u8d70\u5230\u7684**\u7f16\u53f7\u6700\u5c0f\u7684\u70b9\u3002\n\n\u81ea\u7136\u5c31\u53ef\u4ee5\u60f3\u5230\u505a\u6cd5\u4e86\uff1a\u7528\u4e00\u4e2a**\u5c0f\u6839\u5806**\u6765\u5b58\u653e\u4e0b\u4e00\u6b65\u53ef\u4ee5\u5230\u8fbe\u7684\u70b9\u3002\u6bcf\u6b21\u5230\u8fbe\u5806\u9876\u7684\u90a3\u4e2a\u70b9\uff08\u5e76\u4e14\u8fdb\u884c\u6807\u8bb0\uff09\uff0c\u5e76\u5c06\u6240\u6709\u4e0e\u5b83\u76f8\u90bb\u4e14\u672a\u88ab\u6807\u8bb0\u7684\u70b9\u52a0\u5165\u5806\u4e2d\u3002\u65f6\u95f4\u590d\u6742\u5ea6$ \\mathcal{O(m+nlogn)} $\u3002\n\n------------\n\n## \u4e8c\uff0c\u4ee3\u7801\n\nP\u515a\u53ea\u80fd\u624b\u5199\u5806qwq\n\n\u518d\u8bf4\u53e5\u5e9f\u8bdd\uff1a\u56fe**\u53ea\u80fd**\u7528\u94fe\u5f0f\u524d\u5411\u661f\u5b58\uff0c\u522b\u7684\u5e94\u8be5\u90fd\u8981\u70b8QAQ\n\n```\ntype\n    node=record\n                y,pre:longint; \n                //\u4e2a\u4eba\u559c\u6b22\u7528\u8bb0\u5f55\uff08\u7ed3\u6784\u4f53\uff09\u8868\u793a\u8fb9\n            end;\nvar\n    n,m,cnt,x,y,top,fa,son,i,j,l:longint;\n    a:array[-10..300010] of node; \n    //\u8fd9\u4e2a\u6570\u7ec4\u4e00\u5b9a\u8981\u5f002e5\u4ee5\u4e0a\uff0c\u56e0\u4e3a\u662f\u53cc\u5411\u8fb9\n    last,t:array[-10..300010] of longint;\n    v:array[-10..300010] of boolean;\n    //\u6570\u7ec4\u5f00\u5927\uff0c\u6211\u4ee5\u524d\u56e0\u4e3a\u8fd9\u4e2a\u7384\u5b66RE\nbegin\n    readln(n,m);\n    fillchar(last,sizeof(last),0);\n    cnt:=0;\n    for i:=1 to m do\n    begin\n        read(x,y);\n        inc(cnt);\n        a[cnt].y:=y;\n        a[cnt].pre:=last[x];\n        last[x]:=cnt; //\u8fdex->y\u7684\u8fb9\n        inc(cnt);\n        a[cnt].y:=x;\n        a[cnt].pre:=last[y];\n        last[y]:=cnt; //\u8fdey->x\u7684\u8fb9\n    end;\n    top:=1; t[1]:=1; //\u6700\u521d\u4ece1\u5f00\u59cb\n    fillchar(v,sizeof(v),false); //\u90fd\u672a\u7ecf\u8fc7\n    v[1]:=true; //\u6807\u8bb0\u8d77\u70b9\n    for i:=1 to n do\n    begin\n        l:=t[1];\n        j:=last[l];\n        write(t[1],' ');\n        t[1]:=t[top]; dec(top); //\u5f39\u51fa\u5806\u9876\u5143\u7d20\n        fa:=1; son:=2;\n        if t[2]>t[3] then son:=3;\n        while (son<=top) and (t[fa]>t[son]) do\n        begin\n            x:=t[fa]; t[fa]:=t[son]; t[son]:=x;\n            fa:=son; son:=fa*2;\n            if t[son]>t[son+1] then inc(son);\n        end; //\u7ef4\u62a4\u5c0f\u6839\u5806\n        while j<>0 do\n        begin\n            y:=a[j].y;\n            if not v[y] then //\u8be5\u70b9\u6ca1\u6709\u8d70\u8fc7\n            begin\n                inc(top); t[top]:=y;\n                v[y]:=true; //\u8fdb\u884c\u6807\u8bb0\n                son:=top; fa:=top div 2;\n                while (fa>=1) and (t[fa]>t[son]) do\n                begin\n                    x:=t[fa]; t[fa]:=t[son]; t[son]:=x;\n                    son:=fa; fa:=son div 2;\n                end; //\u7ef4\u62a4\u5c0f\u6839\u5806\n            end;\n            j:=a[j].pre; //\u7ee7\u7eed\u770b\u4e0b\u4e00\u6761\u8fb9\n        end;\n    end;\n    writeln;\nend.\n```\n\n-----------\n\n## \u4e09\uff0c\u4e00\u4e2a\u503c\u5f97\u6ce8\u610f\u7684\u5730\u65b9\n\n\u5efa\u8bae\u5148\u5f39\u51fa\u5806\u9876\u5143\u7d20\uff0c\u518d\u52a0\u5165\u65b0\u70b9\u3002\u5199\u5f97\u4e0d\u597d\u7684\u8bdd\uff0c\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u8f93\u51fa**\u4fee\u6539\u540e\u7684**\u5806\u9876\u5143\u7d20\u503c\u3002\u8fd9\u4e2a\u63d0\u793a\u53ef\u80fd\u5bf9\u60a8\u7684\u8c03\u8bd5\u4f1a\u6709\u4e9b\u8bb8\u5e2e\u52a9\u3002\n\n------------\n\n> 2019\u5e742\u67086\u65e5 \u661f\u671f\u4e09 \u4e8eslay.one\uff1a\n\n> \t\u6211bcr\u5c31\u662f\u997f\u6b7b\uff0c\u6b7b\u5916\u9762\uff0c\u4ece\u8fd9\u91cc\u8df3\u4e0b\u53bb\uff0c\u4e5f\u4e0d\u4f1a\u518d\u624b\u5199\u4e00\u4e2a\u5806\uff01    \n\n> \u2026\u2026\u2026\u2026",
        "postTime": 1549726911,
        "uid": 38785,
        "name": "icyM3tra",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1106D \u3010Lunar New Year and a Wander\u3011"
    },
    {
        "content": "## \u60f3\u5410\u69fd\u4e00\u53e5\u5c31\u662f\u8fd9\u9898\u662f\u600e\u4e48\u8bc4\u4e0a\u84dd\u9898\u7684\n\n\u597d\u4e86\u8fdb\u5165\u6b63\u9898\n\n\u8fd9\u9898\u548cNOIp2018D2T1\u600e\u4e48\u8fd9\u4e48\u76f8\u4f3c?\n\n\u5f53\u65f6\u8003\u8bd5\u7684\u65f6\u5019\u6211\u7adf\u7136\u770b\u9519\u4e86\u9898\u7136\u540e\u60f3\u5230\u4e86\u8fd9\u9898\u7684\u9519\u89e3(\u90a3\u5929\u6570\u636e\u8303\u56f4\u51fa\u5947\u7684\u5c0f), \u5c31\u662f\u7528`bitset`\u5904\u7406\u90bb\u63a5\u77e9\u9635, \u6bcf\u4e00\u6b21\u627e\u5230\u6700\u5c0f\u7684\u80fd\u8d70\u7684\u70b9\u5c31\u884c\u4e86.\n\n\u73b0\u5728\u53d1\u73b0\u8fd9\u9898\u6570\u636e\u8303\u56f4\u53d8\u5927\u4e86......\n\n\u7136\u540e\u6211\u4eec\u5c31\u4e0d\u80fd\u76f4\u63a5`bitset`\u4e86,  \u6211\u4eec\u6bcf\u4e00\u6b21\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u6700\u5c0f\u503c, \u8111\u6d77\u91cc\u76f4\u63a5\u8e66\u51fa`std::priority_queue`\u6211\u4eec\u7528\u5b83\u76f4\u63a5\u7ef4\u62a4\u53ef\u4ee5\u8d70\u5230\u7684\u65b0\u70b9\u7684\u6700\u5c0f\u503c\u5c31\u53ef\u4ee5\u4e86.\n\n\u4e0b\u9762\u653e\u4e0a\u4e11\u964b\u7684\u4ee3\u7801\n\n```cpp\n#include <queue>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nvector<int> road[100005], ans;\nbool vis[100005];\npriority_queue<int,vector<int>,greater<int>> q;\nint n, m;\nint main()\n{\n    cin >> n >> m;\n    for (int i = 1; i <= m; i++)\n    {\n        int x, y;\n        cin >> x >> y;\n        road[x].push_back(y), road[y].push_back(x);\n    }\n    q.push(1);\n    while (q.size())\n    {\n        int x=q.top();\n        q.pop();\n        cout<<x<<' ';\n        vis[x] = 1;\n        for (int it : road[x])\n            if (!vis[it])\n                q.push(it),vis[it]=1;\n    }\n}\n```",
        "postTime": 1549078234,
        "uid": 38485,
        "name": "Erina",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1106D \u3010Lunar New Year and a Wander\u3011"
    },
    {
        "content": "[\u6211\u7684\u535a\u5ba2](https://www.cnblogs.com/Memory-of-winter/p/10345347.html)\n\n### \u9898\u76ee\u5927\u610f\n\n\u7ed9\u4f60\u4e00\u5f20$n(n\\leqslant10^5)$\u4e2a\u70b9$m(m\\leqslant10^5)$\u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u73b0\u5728\u5728\u70b9$1$\uff0c\u6bcf\u6b21\u5230\u4e00\u4e2a\u6ca1\u6709\u7ecf\u8fc7\u8fc7\u7684\u70b9\u5c31\u628a\u90a3\u4e2a\u70b9\u8bb0\u5f55\u4e0b\u6765\uff0c\u76f4\u5230\u7ecf\u8fc7\u6240\u6709$n$\u4e2a\u70b9\uff0c\u95ee\u6700\u540e\u8bb0\u5f55\u4e0b\u7684\u5e8f\u5217\u6700\u5c0f\u7684\u5b57\u5178\u5e8f\u662f\u4ec0\u4e48\uff0c\u53ef\u4ee5\u91cd\u590d\u7ecf\u8fc7\u70b9\u548c\u8fb9\u3002\n\n\u8c01\u53ef\u4ee5\u544a\u8bc9\u6211\u4e3a\u4ec0\u4e48\u6211\u4ea4\u7ffb\u8bd1\u7684\u65f6\u5019LATEX\u5168\u90e8\u51fa\u9505\u4e86\uff1f\n\n### \u9898\u89e3\n\n\u8fd9\u53ef\u6bd4$NOIP2018D2T1$\u7b80\u5355\u591a\u4e86\uff0c\u53ea\u9700\u8981\u6c42\u4e00\u4e2a\u4e00\u4e2a\u7c7b\u4f3c\u6700\u5c0f\u751f\u6210\u6811\u7684\u4e1c\u897f\u5c31\u884c\u4e86\u3002\u7528\u4e00\u4e2a\u5c0f\u6839\u5806\u8bb0\u5f55\u5f53\u524d\u7ecf\u8fc7\u8fc7\u7684\u70b9\u53ef\u4ee5\u5230\u8fbe\u7684\u6ca1\u6709\u7ecf\u8fc7\u8fc7\u7684\u70b9\uff0c\u6bcf\u6b21\u53d6\u51fa\u5806\u9876\uff0c\u628a\u4e0e\u5b83\u76f8\u8fde\u7684\u70b9\u52a0\u5165\u5806\u5373\u53ef\u3002\n\n\n\n\n### C++ Code\uff1a\n\n```cpp\n#include <algorithm>\n#include <cctype>\n#include <cstdio>\n#include <cmath>\n#include <iostream>\n#include <queue>\n#include <vector>\n#include <map>\n#include <set>\n#define maxn 100010\nint head[maxn], cnt;\nstruct Edge {\n\tint to, nxt;\n} e[maxn << 1];\ninline void addedge(int a, int b) {\n\te[++cnt] = (Edge) { b, head[a] }; head[a] = cnt;\n\te[++cnt] = (Edge) { a, head[b] }; head[b] = cnt;\n}\n\nint Tim, n, m;\nstd::priority_queue<int, std::vector<int>, std::greater<int> > q;\nbool inq[maxn];\nint main() {\n\tstd::ios::sync_with_stdio(false), std::cin.tie(0), std::cout.tie(0);\n\tstd::cin >> n >> m;\n\tfor (int i = 0, a, b; i < m; ++i) {\n\t\tstd::cin >> a >> b;\n\t\taddedge(a, b);\n\t}\n\tq.push(1);\n\tinq[1] = true;\n\tfor (int Tim = 1; Tim < n; ++Tim) {\n\t\tint u = q.top(); q.pop();\n\t\tstd::cout << u << ' ';\n\t\tfor (int i = head[u]; i; i = e[i].nxt) {\n\t\t\tint v = e[i].to;\n\t\t\tif (!inq[v]) {\n\t\t\t\tq.push(v);\n\t\t\t\tinq[v] = true;\n\t\t\t}\n\t\t}\n\t}\n\tstd::cout << q.top() << std::endl;\n\treturn 0;\n}\n\n```",
        "postTime": 1548993529,
        "uid": 22072,
        "name": "Memory_of_winter",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1106D \u3010Lunar New Year and a Wander\u3011"
    },
    {
        "content": "BFS+\u4f18\u5148\u961f\u5217\u3002\n\n~~\u6211\u7b2c\u4e00\u773c\u4ee5\u4e3a\u662f NOIP \u51fa\u5230\u4e00\u822c\u56fe\u4e0a\u7684\u6bd2\u7624\u9898~~\n\n\u8fd9\u9898\u548c NOIP \u4e0d\u540c\u7684\u662f\uff0cNOIP \u90a3\u9898\u53ea\u80fd\u4e00\u6761\u8fb9\u8fdb\u5165\u540e\u56de\u6eaf\uff0c\u4e0d\u80fd\u518d\u8d70\u91cd\u590d\u7684\uff0c\u800c\u8fd9\u9898\u662f\u53ef\u4ee5\u7684\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u5b57\u5178\u5e8f\u6700\u5c0f\u80af\u5b9a\u662f\u5f53\u524d\u6700\u5c0f\u7684\u5c31\u62ff\u6700\u5c0f\n\n\u6240\u4ee5\u6211\u4eec\u4ece $1$ \u70b9\u5f00\u59cb\u62d3\u5c55\u8282\u70b9\uff0c\u7136\u540e\u5168\u90e8\u585e\u5230\u4f18\u5148\u961f\u5217\u91cc(\u6309\u8282\u70b9\u7f16\u53f7\u4ece\u5c0f\u5230\u5927\u6392\u5e8f)\uff0c\u6bcf\u6b21\u4ece\u4f18\u5148\u961f\u5217\u91cc\u53d6\u51fa\u4e00\u4e2a\u6700\u5c0f\u70b9\u6269\u5c55\u66f4\u65b0\u3002\n\n**\u6ce8\u610f\u5728\u6269\u5c55\u65f6\u5c31\u8981\u6253\u4e0a\u6807\u8bb0\u4ee5\u540e\u4e0d\u518d\u5165\u961f\uff0c\u4e0d\u7136 MLE QAQ**\n\n\u6269\u5c55\u5373\u7528 BFS\u3002\n\n~~\u6211\u8fd9\u9898\u521a\u5f00\u59cb\u5199\u4e86\u4e2a$O(nm)$\u7684\u505a\u6cd5\u81ea\u5df10.5h\u6ca1\u53d1\u73b0 QAQ~~\n\n```c++\n//==========================Head files==========================\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#include<cmath>\n#include<set>\n#include<iostream>\n#include<map>\n#define LL long long\n#define db double\n#define mp make_pair\n#define pr pair<int, int>\n#define fir first\n#define sec second\n#define pb push_back\n#define ms(i, j) memset(i, j, sizeof i)\nusing namespace std;\n//==========================Templates==========================\ninline int read() {\n    int x = 0, f = 1; char c = getchar();\n    while(c < '0' || c > '9'){if (c == '-') f = -1; c = getchar();}\n    while(c >= '0' && c <= '9'){x = x * 10 + c - '0'; c = getchar();}\n    return x * f;\n}\ninline LL readl() {\n    LL x = 0, f = 1; char c = getchar();\n    while(c < '0' || c > '9'){if (c == '-') f = -1; c = getchar();}\n    while(c >= '0' && c <= '9'){x = x * 10 + c - '0'; c = getchar();}\n    return x * f;\n}\nint power(int a, int b) {\n\tint ans = 1;\n\twhile (b) {\n\t\tif(b & 1) ans = ans * a;\n\t\tb >>= 1; a = a * a;\n\t}\n\treturn ans;\n}\nint power_mod(int a, int b, int mod) {\n\ta %= mod;\n\tint ans = 1;\n\twhile (b) {\n\t\tif(b & 1) ans = (ans * a) % mod;\n\t\tb >>= 1, a = (a * a) % mod;\n\t}\n\treturn ans;\n}\nLL powerl(LL a, LL b) {\n\tLL ans = 1ll;\n\twhile (b) {\n\t\tif(b & 1ll) ans = ans * a;\n\t\tb >>= 1ll;a = a * a;\n\t}\n\treturn ans;\n}\nLL power_modl(LL a, LL b, LL mod) {\n\ta %= mod;\n\tLL ans = 1ll;\n\twhile (b) {\n\t\tif(b & 1ll) ans = (ans * a) % mod;\n\t\tb >>= 1ll, a = (a * a) % mod;\n\t}\n\treturn ans;\n}\nLL gcdl(LL a, LL b) {return b == 0 ? a : gcdl(b, a % b);}\nLL abssl(LL a) {return a > 0 ? a : -a;}\nint gcd(int a, int b) {return b == 0 ? a : gcd(b, a % b);}\nint abss(int a) {return a > 0 ? a : -a;}\n//==========================Main body==========================\n#define LD \"%I64d\"\n#define D \"%d\"\n#define pt printf\n#define sn scanf\n#define pty printf(\"YES\\n\")\n#define ptn printf(\"NO\\n\")\n//==========================Code here==========================\n\nconst int MAXN = 100000 + 5;\n\nvector<int > G[MAXN];\n\nint n, m, vis[MAXN];\n\nstruct data {\n\tint u;\n\toperator < (const data &rhs) const {return u > rhs.u;}\n};\n\npriority_queue<data > q;\n\nint main() {\n\tms(vis, 0);\n\tcin >> n >> m;\n\tfor (int i = 1; i <= m; ++i) {\n\t\tint x, y; scanf(\"%d%d\", &x, &y);\n\t\tG[x].push_back(y), G[y].push_back(x);\n\t}\n\tfor (int u = 1; u <= n; ++u) sort(G[u].begin(), G[u].end());\n\t\n\tif ((int)G[1].size() <= 0) return printf(\"1 \"), 0;\n\t\n\tq.push((data){1});\n\tvis[1] = 1;\n\twhile (!q.empty()) {\n\t\t\n\t\tdata p = q.top(); q.pop();\n\n\t\tfor (int i = 0; i < (int)G[p.u].size(); ++i) if (!vis[G[p.u][i]]) \n\t\t\tq.push((data){G[p.u][i]}), vis[G[p.u][i]] = 1;\n\t\t\n\t\tprintf(\"%d \", p.u);\n\t\tvis[p.u] = 1;\n\t}\n\t\n\treturn 0;\n}\n```",
        "postTime": 1548993185,
        "uid": 12943,
        "name": "FlyInTheSky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1106D \u3010Lunar New Year and a Wander\u3011"
    }
]