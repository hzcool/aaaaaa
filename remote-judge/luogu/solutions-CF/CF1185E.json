[
    {
        "content": "\u8fd9\u4e2a\u9898\u662f\u5c5e\u4e8e\u6bd4\u8f83\u7b80\u5355\u7684\u4e00\u7c7bE\u3002\n\n\u9996\u5148\u6211\u4eec\u904d\u5386\u6bcf\u79cd\u5b57\u7b26\uff0c\u5bf9\u4e8e\u6bcf\u79cd\u5b57\u7b26\u7684\u6570\u91cf\u8fdb\u884c\u8ba8\u8bba\u3002\n\n1. \u5f53\u524d\u5b57\u7b26\u4e00\u4e2a\u4e5f\u6ca1\u6709\n\n\u592a\u7b80\u5355\u4e86\u3002\u76f4\u63a5\u6d82\u5728\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u7684\u4efb\u610f\u4e00\u4e2a\u683c\u5b50\u4e0a\u5373\u53ef\u3002\u56e0\u4e3a\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u4e00\u5b9a\u5b58\u5728\uff0c\u6240\u4ee5\u8fd9\u6b21\u6d82\u7684\u4e00\u5b9a\u4f1a\u88ab\u8986\u76d6\u6389\u3002\n\n2. \u5f53\u524d\u5b57\u7b26\u53ea\u6709\u4e00\u4e2a\n\n\u592a\u7b80\u5355\u4e86\u3002\u76f4\u63a5\u628a\u5b83\u56fe\u4e0a\u5c31\u884c\u4e86\u3002\n\n~~\u4e8e\u662f\u8fd9\u4e2a\u9898\u5b8c\u6210\u4e86\u4e00\u534a~~\n\n3. \u5f53\u524d\u5b57\u7b26\u6709\u4e24\u4e2a\u53ca\u4ee5\u4e0a\n\n\u90a3\u4e48\u627e\u51fa\u6240\u6709\u8fd9\u79cd\u5b57\u7b26\u662f\u5426\u5c5e\u4e8e\u540c\u4e00\u884c/\u5217\u3002\u5982\u679c\u662f\uff0c\u76f4\u63a5\u628a\u6700\u5f00\u59cb\u7684\u5230\u6700\u540e\u9762\u7684\u5168\u90e8\u6d82\u4e0a\u3002\u5426\u5219\u65e0\u89e3\u3002\n\n\u90a3\u4e48\u8fd9\u4e2a\u9898\u505a\u5b8c\u4e86\u5417\uff1f\n\n\u663e\u7136\u6ca1\u6709\u3002\u8fd8\u5dee\u6700\u540e\u4e00\u6b65\u3002\n\n\u56e0\u4e3a\u6211\u4eec\u6bcf\u6b21\u6d82\u53ea\u8003\u8651\u5230\u4e86\u5f53\u524d\u80fd\u5426\u6d82\u4e0a\uff0c\u800c\u6ca1\u6709\u5904\u7406\u8986\u76d6\u5173\u7cfb\u3002\n\n\u6240\u4ee5\u66b4\u529b\u7684\u904d\u5386\u4e00\u904dans\u6570\u7ec4\u770b\u770b\u80fd\u4e0d\u80fd\u5b9e\u73b0\u539f\u56fe\u5c31\u597d\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n```\n#pragma GCC optimize(3)\n#pragma GCC optimize(2)\n#include<bits/stdc++.h>\n#define For(i, j, k) for(int i=(j);i<=(k);i++)\n#define INF (2147483647>>1)\n#define Pair pair<int,int>\n#define ll long long\nusing namespace std;\ninline int read()\n{\n    int num=0,flag=1;char c=' ';\n    for(;c>'9'||c<'0';c=getchar()) if(c=='-') flag=0;\n    for(;c>='0'&&c<='9';num=(num<<1)+(num<<3)+c-48,c=getchar());\n    return flag?num:-num;\n}\n#define MAXN 2005\nint n, m;\nint a[MAXN][MAXN], b[MAXN][MAXN]; \nstruct Node {\n\tint x, y;\n};\n//bool cmp1(Node x, Node y) {\n//\treturn x.x < y.x;\n//}\n//bool cmp2(Node x, Node y) {\n//\treturn x.y < y.y;\n//}\nstruct Square {\n\tint sx, sy, ex, ey;\n};\nvector < Node > pos[30];\nvector < Square > ans;\nint main()\n{\n    int T; cin >> T;\n    while(T--) {\n    \tFor(i, 1, 29) pos[i].clear();\n    \tans.clear();\n    \tcin >> n >> m;\n    \tint maxi = 0;\n    \tFor(i, 1, n)\n    \t\tFor(j, 1, m)\n    \t\t\ta[i][j] = b[i][j] = 0;\n    \tFor(i, 1, n) {\n    \t\tstring s; cin >> s;\n    \t\tFor(j, 1, m)\n    \t\t\tif(s[j-1] != '.')  {\n    \t\t\t\ta[i][j] = s[j-1] - 'a' + 1;\n    \t\t\t\tpos[a[i][j]].push_back((Node) {i, j});\n    \t\t\t\tmaxi = max(maxi, a[i][j]);\n\t\t\t\t}\n\t\t}\n\t\tint num = 0;\n\t\tFor(k, 1, maxi) {\n\t\t\tif(pos[k].size() == 0) {\n\t\t\t\tint X = pos[maxi][0].x, Y = pos[maxi][0].y;\n\t\t\t\tans.push_back((Square) {X, Y, X, Y});\n\t\t\t} else if(pos[k].size() == 1) {\n\t\t\t\tint X = pos[k][0].x, Y = pos[k][0].y;\n\t\t\t\tans.push_back((Square) {X, Y, X, Y});\n\t\t\t} else {\n\t\t\t\tint X1 = pos[k][0].x, Y1 = pos[k][0].y;\n\t\t\t\tint X2 = pos[k][1].x, Y2 = pos[k][1].y;\n\t\t\t\tif(X1 != X2 && Y1 != Y2) {\n\t\t\t\t\tputs(\"NO\");\n\t\t\t\t\tgoto end;\n\t\t\t\t}\n\t\t\t\tif(X1 == X2) {\n\t\t\t\t\tfor(int i = 2; i < pos[k].size(); i++) {\n\t\t\t\t\t\tif(pos[k][i].x != X1) {\n\t\t\t\t\t\t\tputs(\"NO\");\n\t\t\t\t\t\t\tgoto end;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(Y1 == Y2) {\n\t\t\t\t\tfor(int i = 2; i < pos[k].size(); i++) {\n\t\t\t\t\t\tif(pos[k][i].y != Y1) {\n\t\t\t\t\t\t\tputs(\"NO\");\n\t\t\t\t\t\t\tgoto end;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tans.push_back((Square) {X1, Y1, pos[k][pos[k].size()-1].x, pos[k][pos[k].size()-1].y});\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0; i < maxi; i++) {\n\t\t\tFor(j, ans[i].sx, ans[i].ex) {\n\t\t\t\tFor(k, ans[i].sy, ans[i].ey) {\n\t\t\t\t\tb[j][k] = i+1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tFor(i, 1, n) {\n\t\t\tFor(j, 1, m) {\n\t\t\t\tif(a[i][j] != b[i][j]) {\n\t\t\t\t\tputs(\"NO\");\n\t\t\t\t\tgoto end;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"YES\\n\");\n\t\tprintf(\"%d\\n\", maxi);\n\t\tfor(int i = 0; i < maxi; i++) {\n\t\t\tprintf(\"%d %d %d %d\\n\", ans[i].sx, ans[i].sy, ans[i].ex, ans[i].ey);\n\t\t}\n\t\tend:;\n\t}\n    return 0;\n}\n\n\n```",
        "postTime": 1562237401,
        "uid": 55078,
        "name": "YLWang",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1185E \u3010Polycarp and Snakes\u3011"
    }
]