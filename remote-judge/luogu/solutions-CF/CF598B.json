[
    {
        "content": "\u597d\u4e45\u6ca1\u6709\u5199\u9898\u89e3\u4e86\uff0c\u4f30\u503c\u90fd\u6389\u5149\u4e86\u2026\u2026\n\n## \u9898\u610f\u7b80\u8ff0\n~~\u8fd9\u9898\u76ee\u7ffb\u8bd1\u4ec0\u4e48\u9b3c\u554a\u2026\u2026~~\n\n\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c$m$ \u4e2a\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u5b9a $l,r,k$\uff0c\u610f\u601d\u662f\u5c06 $\\lbrack l,r\\rbrack$ \u8fd9\u4e2a\u5b50\u4e32\u5faa\u73af\u79fb\u4f4d $k$ \u6b21\u3002\n\n\u5faa\u73af\u79fb\u4f4d\uff1a\u82e5\u5c06 ``abc`` \u5faa\u73af\u79fb\u4f4d\u4e00\u6b21\uff0c\u5c31\u53d8\u6210 ``cab``\u3002\n\n## \u601d\u8def\n\u4e24\u79cd\u601d\u8def\u3002\n\n### 1\u3001``fhq_treap`` \u6216 ``Splay`` \u7684\u7b80\u5355\u677f\u5b50\u3002\n\u6ca1\u5565\u597d\u8bf4\u7684\uff0c\u4e00\u9053\u9ec4\u9898\u7528\u5e73\u8861\u6811\u65e0\u7591\u662f\u5927\u9898\u5c0f\u505a\u3002\n### 2\u3001\u66b4\u529b\u6a21\u62df\n\u6ce8\u610f\u5230 $1\\leq m\\leq 300$ \u7684\u6781\u5c0f\u6570\u636e\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u5faa\u73af\u79fb\u4f4d\u82e5\u5e72\u6b21\u76f8\u5f53\u4e8e\u62ff\u8d70\u4e00\u4e2a\u5b50\u4e32\u540e\u7f00\uff0c\u628a\u5b83\u653e\u5230\u8fd9\u4e2a\u5b57\u4e32\u7684\u524d\u9762\uff0c\u800c\u8fd9\u4e2a\u540e\u7f00\u7684\u957f\u5ea6\u5e94\u8be5\u662f $r-l+1-k$\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 STL \u91cc\u7684 ``substr`` \u548c ``erase`` \u51fd\u6570\u6765\u5b8c\u6210\u64cd\u4f5c\u3002\n\n\u4f46\u662f $k$ \u6709\u53ef\u80fd\u5927\u4e8e $r-l+1$\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5bf9 $k$ \u53d6\u6a21\uff08\u56e0\u4e3a\u6bcf\u5faa\u73af\u79fb\u4f4d $r-l+1$ \u6b21\u76f8\u5f53\u4e8e\u6ca1\u79fb\uff09\u3002\n\n\u7136\u540e\u8fd9\u9898\u5c31\u5dee\u4e0d\u591a\u5566\uff01\n## \u4ee3\u7801\n\u73cd\u7231\u751f\u547d\uff0c\u8fdc\u79bb\u6284\u88ad\u3002\n\nCode\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nstring s;\nint len, m, l, r, k;\n\nint main(){\n\tcin >> s >> m;\n\tlen = s.length();\n\ts = \" \" + s;\n\twhile(m--){\n\t\tcin >> l >> r >> k;\n\t\tint lens = r - l + 1;\n\t\tk %= lens;\n\t\tstring s1 = s.substr(l, lens - k);//\u622a\u53d6\u9700\u8981\u5f80\u540e\u632a\u7684\u5b57\u7b26\uff08\u4e32\uff09\n\t\ts.erase(l, lens - k);//\u5220\u6389\u8fd9\u4e2a\u5b57\u7b26\uff08\u4e32\uff09\uff0c\u6a21\u62df\u5f80\u524d\u79fb \n\t\ts.insert(l + k, s1);//\u628a\u5b57\u7b26\u91cd\u65b0\u63d2\u5165\uff0c\u6a21\u62df\u5f80\u540e\u79fb\uff0c\u63d2\u5165\u7684\u4f4d\u7f6e\u5e94\u8be5\u5728\n\t}\n\ts.erase(0, 1);//\u628a\u521a\u5f00\u59cb\u52a0\u7684\u7a7a\u683c\u5220\u4e00\u4e0b\n\tcout << s << endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1652259873,
        "uid": 363036,
        "name": "chlchl",
        "ccfLevel": 5,
        "title": "CF598B Queries on a String \u9898\u89e3"
    },
    {
        "content": "### CF598B\n\n> \u636e\u8bf4 CSP \u524d\u53d1\u9898\u89e3\u4f1a\u6da8 RP \uff0cCSP2021 rp++\uff01\uff011\n\n> \u5e0c\u671b\u4eca\u5e74\u80fd\u84dd\u52fe\u5427~\n\n\u770b\u5b66\u957f\u7ed9\u666e\u53ca\u7ec4\u51fa\u7684\u6a21\u62df\u8d5b\uff0c\u51fa\u4e86\u8fd9\u4e2a\u7684\u539f\u9898\u3002\u6b63\u786e\u7b97\u6cd5\u662f\u66b4\u529b\u6a21\u62df\uff0c\u4f46\u662f\u6709\u4e2a\u5b66\u957f\u7b2c\u4e00\u773c\u770b\u6210\u4e86\u5e73\u8861\u6811\uff0c\u5e76\u4e14\u7528\u5e73\u8861\u6811 ``AC`` \u4e86\u6b64\u9898\uff0c\u4e8e\u662f\u6211\u5c31\u628a\u8fd9\u9898\u5f53\u4f5c ``Splay`` \u7684\u677f\u5b50\u6765\u5199\u4e86\u3002\n\n\u8fd9\u9898\u7684\u64cd\u4f5c\u5c31\u662f\u533a\u95f4\u5faa\u73af\u79fb\u4f4d(revolve)\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff1a\n\n\u5047\u8bbe\u6709\u5e8f\u5217\n\n$ \\color{red} {1 \\, 2 \\, 3 \\, 4 \\, 5 \\, 6} $\n\n\u6211\u4eec\u5bf9\u4ed6\u8fdb\u884c revolve(2,4,1) \u64cd\u4f5c\uff0c\u53d8\u6210\n\n$ \\color{red} {1 \\, 4 \\, 2 \\, 3 \\, 5 \\, 6} $\n\n\u90a3\u4e48\u8fd9\u9898\u600e\u4e48\u7528\u5e73\u8861\u6811\u5199\u5462\uff1f\n\n~~\u76f4\u63a5\u627e\u5230\u533a\u95f4\u5206\u88c2\u5408\u5e76~~\n\n\u5176\u5b9e\u6709\u70b9\u9ebb\u70e6\uff0c\u6211\u5b9e\u73b0\u597d\u4e45\u6ca1\u5b9e\u73b0\u51fa\u6765\uff0c\u8fd9\u4e2a\u64cd\u4f5c ``FHQ_Treap`` \u597d\u5199\u3002\n\n\u540e\u6765\u6211\u5728\u7eb8\u4e0a\u5199\u5199\u753b\u753b\u4e86\u597d\u4e45\uff0c\u624d\u53d1\u73b0\u4e86\u4e00\u4e2a\u89c4\u5f8b\n\n$ \\text {revolve(l,r,k) \u7b49\u4ef7\u4e8e reverse(r-k+1,r) , reverse(l,r-k) , reverse(l,r) } $\n\n\u7167\u7740\u8fd9\u4e2a\u6a21\u62df\u4e00\u904d\u5e94\u8be5\u5c31\u80fd\u53d1\u73b0\u8fd9\u4e2a\u8f83\u4e3a\u663e\u7136\u7684\u89c4\u5f8b\u4e86\uff0c\u6211\u5c31\u4e0d\u518d\u8bc1\u660e\u4e86\u3002\n\n// reverse(l,r) \u662f\u533a\u95f4\u7ffb\u8f6c\u3002\n\n\u5230\u8fd9\u91cc\uff0c\u6211\u4eec\u5c31\u6210\u529f\u7684\u628a\u533a\u95f4\u5faa\u73af\u79fb\u4f4d\u64cd\u4f5c\u8f6c\u5316\u6210\u4e86\u533a\u95f4\u7ffb\u8f6c\u64cd\u4f5c\u3002\u90a3\u4e48\u533a\u95f4\u7ffb\u8f6c\u64cd\u4f5c\u600e\u4e48\u5b9e\u73b0\u5462\uff1f\u6211\u4eec\u53d1\u73b0\u8fd9\u5c31\u662f\u6587\u827a\u5e73\u8861\u6811\u7684\u677f\u5b50\u9898\u4e86\u3002\u4f46\u662f\uff0c\u5199\u4e86\u4e2a\u677f\u5b50\u4ea4\u4e0a\u53d1\u73b0\uff0c``TLE on #3`` \u4e86\uff0c\u8fd9\u662f\u4ec0\u4e48\u60c5\u51b5\u5462\uff1f\u5230 CF \u4e0a\u770b\u4e86\u770b\u6570\u636e\uff0c\u539f\u6765\u662f\u6ca1\u8003\u8651\u5230 $ k $ \u5927\u4e8e\u533a\u95f4\u957f\u5ea6\u7684\u60c5\u51b5\u3002\u6240\u4ee5\u8fd8\u8981\u5728\u64cd\u4f5c\u4ee5\u524d\u8ba9 $ k=k \\bmod len $ \u3002\u8fd9\u91cc\u7684 $ len $ \u662f\u533a\u95f4\u957f\u5ea6\uff0c\u7b49\u4ef7\u4e8e $ r-l+1 $\u3002\n\n// $ l $ \u4e3a\u533a\u95f4\u5de6\u7aef\u70b9\uff0c$ r $ \u4e3a\u533a\u95f4\u53f3\u7aef\u70b9\u3002\n\n\u81f3\u6b64\uff0c\u6211\u4eec\u5c31\u80fd\u901a\u8fc7\u6b64\u9898\u4e86\u3002\u590d\u6742\u5ea6 $ O(mlogn) $ \uff0c\u540a\u6253\u66b4\u529b\u6a21\u62df\u3002\u5e0c\u671b\u6d1b\u8c37\u80fd\u628a\u8fd9\u9898\u548c\u6587\u827a\u5e73\u8861\u6811\u5408\u5e76\u4e00\u4e0b\uff0c\u4f5c\u4e3a\u52a0\u5f3a\u7248~\n\n\u63a5\u4e0b\u6765\u5c31\u770b\u4e00\u4e0b\u4ee3\u7801\u5b9e\u73b0\u5427~\n\n```cpp\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <vector>\n#include <cstdio>\n#include <cmath>\nusing namespace std;\n\n#define $int long long\n\n/***** Fast_IO *****/\n\nusing std::cin;\nusing std::cout;\nusing vii = std::vector<int> ;\nusing pii = std::pair<int,int> ;\n\nnamespace IO{\n\tchar buf[(1<<21)],*p1=buf,*p2=buf,buf1[(1<<21)]; int _=0;\n\n\tinline char gc (){\n\t\treturn p1==p2&&(p2=(p1=buf)+fread(buf,1,(1<<21),stdin),p1==p2)?EOF:*p1++;\n\t}\n\n\t#define gc getchar\n\t#define pc putchar\n\t#define ONLINE_JUDGE OJ\n\n\ttemplate<class I>\n\tinline I read(I &x){\n\t\tx=0; I f=1; char c=gc(); if(c==EOF){ return -1; }\n\t\twhile(c<'0'||c>'9'){ if(c=='-'){ f=f*(-1); } c=gc(); }\n\t\twhile(c>='0'&&c<='9'){ x=(x<<1)+(x<<3)+(c^48); c=gc(); }\n\t\treturn x=x*f;\n\t}\n\n\ttemplate<typename I,typename ...Args>\n\tinline void read(I &a, Args &...args){\n\t\tread(a),read(args...);\n\t}\n\n\ttemplate<class I>\n\tinline void write(I x){\n\t\tif(x==0){ pc('0'); return; }\n\t\tint tmp=x>0?x:(-x),cnt=0;\n\t\tif(x<0){ pc('-'); }\n\t\twhile(tmp){ buf[cnt++]=(tmp%10)+'0'; tmp/=10; }\n\t\twhile(cnt){ pc(buf[--cnt]); }\n\t\treturn;\n\t}\n\n\tvoid _FILE(){\n\t\t#ifndef ONLINE_JUDGE\n\t\t\tfreopen(\"text.in\",\"r\",stdin);\n\t\t\tfreopen(\"text.out\",\"w\",stdout);\n\t\t#endif\n\t}\n\n\t#define out(x) write(x),pc(' ')\n\t#define outn(x) write(x),pc('\\n')\n\t#define assi() pc('\\t')\n\t#define FOR(i,a,b) for(int i(a);i<=(b);++i)\n\t#define ROF(i,a,b) for(int i(a);i>=(b);--i)\n\t#define FORs(i,a,b,s) for(int i(a);i<=(b);i+=(s))\n\t#define ROFs(i,a,b,s) for(int i(a);i>=(b);i-=(s))\n\t#define next(i,now) for(int i(link[now]);i;i=edge[i].nexty)\n\t#define each(i,v) for(auto &i:v)\n\t#define all(v) v.begin(),v.end()\n\t#define pb push_back\n\t#define mp make_pair\n\t#define fir first\n\t#define sec second\n}using namespace IO;\n\n/***** Fast_IO *****/\n\n#define maxn 1000010\n#define SIZE 5010\n\nint n,m,l,r,k;\n\nchar s[maxn];\n\nclass splay{\n\tprivate:\n\t\tstruct SP_tree{ int son[2],fa,cnt,size,val,rev; }tree[(maxn)];\n\n\t\tint tree_cnt,root;\n\n\tpublic:\n\t\tvoid pushup(int ID){ tree[ID].size=tree[tree[ID].son[0]].size+tree[tree[ID].son[1]].size+tree[ID].cnt; }\n\n\t\tvoid pushdown(int ID){\n\t\t\tif(tree[ID].rev){\n\t\t\t\ttree[tree[ID].son[0]].rev^=1;\n\t\t\t\ttree[tree[ID].son[1]].rev^=1;\n\t\t\t\t::swap(tree[ID].son[0],tree[ID].son[1]);\n\t\t\t\ttree[ID].rev^=1;\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tint Son(int ID){ return tree[tree[ID].fa].son[1]==ID; }\n\n\t\tvoid connect(int x,int y,int k){\n\t\t\tif(x){ tree[x].son[k]=y; }\n\t\t\ttree[y].fa=x;\n\t\t}\n\n\t\tvoid rotate(int ID){\n\t\t\tint fa(tree[ID].fa),gra_fa(tree[fa].fa);\n\t\t\tint ty_son( Son(ID) ),ty_fa( Son(fa) );\n\t\t\tconnect(fa,tree[ID].son[ty_son^1],ty_son);\n\t\t\tconnect(ID,fa,ty_son^1);\n\t\t\tconnect(gra_fa,ID,ty_fa);\n\t\t\tpushup(fa);\n\t\t\tpushup(ID);\n\t\t\treturn;\n\t\t}\n\n\t\tvoid Splay(int ID,int goal=0){\n\t\t\tfor(int index;(index=tree[ID].fa)!=goal;rotate(ID)){\n\t\t\t\tif(tree[index].fa!=goal){\n\t\t\t\t\tif(Son(index)==Son(ID)){\n\t\t\t\t\t\trotate(index);\n\t\t\t\t\t} else{ rotate(ID); }\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(goal==0){ root=ID; }\n\t\t\treturn;\n\t\t}\n\n\t\tint NewNode(int val){\n\t\t\ttree[++tree_cnt]=(SP_tree){{0,0},0,1,1,val,0};\n\t\t\treturn tree_cnt;\n\t\t}\n\n\t\tvoid insert(int val){\n\t\t\tif(!root){ root=NewNode(val); return; }\n\t\t\tint index=root;\n\t\t\twhile(tree[index].val!=val&&tree[index].son[tree[index].val<val]){\n\t\t\t\tindex=tree[index].son[tree[index].val<val];\n\t\t\t} if(tree[index].val==val){ ++tree[index].cnt; Splay(index); return; }\n\t\t\tconnect(index,NewNode(val),tree[index].val<val);\n\t\t\tSplay(tree[index].son[tree[index].val<val]);\n\t\t\treturn;\n\t\t}\n\n\t\tint get_num(int rk){\n\t\t\tint index=root;\n\t\t\twhile(19260817){\n\t\t\t\tpushdown(index);\n\t\t\t\tif(tree[tree[index].son[0]].size>=rk){\n\t\t\t\t\tindex=tree[index].son[0];\n\t\t\t\t} else if(tree[tree[index].son[0]].size+tree[index].cnt<rk){\n\t\t\t\t\trk-=(tree[tree[index].son[0]].size+tree[index].cnt);\n\t\t\t\t\tindex=tree[index].son[1];\n\t\t\t\t} else{ break; }\n\t\t\t}\n\t\t\treturn index;\n\t\t}\n\n\t\tint split(int l,int r){\n\t\t\tl=get_num(l);\n\t\t\tr=get_num(r+2);\n\t\t\tSplay(l,0);\n\t\t\tSplay(r,l);\n\t\t\treturn tree[tree[root].son[1]].son[0];\n\t\t}\n\n\t\tvoid reverse(int l,int r){\n\t\t\tint rt=split(l,r);\n\t\t\ttree[rt].rev^=1;\n\t\t}\n\n\t\tvoid revolve(int l,int r,int k){\n\t\t\tk=k%(r-l+1);\n\t\t\treverse(r-k+1,r);\n\t\t\treverse(l,r-k);\n\t\t\treverse(l,r);\n\t\t\treturn;\n\t\t}\n\n\t\tvoid dfs(int now=-1){\n\t\t\tif(now==-1){ now=root; }\n\t\t\tpushdown(now);\n\t\t\tif(tree[now].son[0]){ dfs(tree[now].son[0]); }\n\t\t\tif(tree[now].val>1&&tree[now].val<n+2){ ::cout<<(s[tree[now].val-1]); }\n\t\t\tif(tree[now].son[1]){ dfs(tree[now].son[1]); }\n\t\t\treturn;\n\t\t}\n}sp;\n\nint main(){\n\t_FILE();\n\t::cin>>(s+1);\n\tn=strlen(s+1);\n\tFOR(i,1,n+2){ sp.insert(i); }\n\tread(m);\n\twhile(m--){\n\t\tread(l,r,k);\n\t\tsp.revolve(l,r,k);\n\t}\n\tsp.dfs(); pc('\\n');\n\treturn 0;\n}\n```\n",
        "postTime": 1634722361,
        "uid": 360930,
        "name": "Jairon314",
        "ccfLevel": 6,
        "title": "CF598B Queries on a String"
    },
    {
        "content": "## \u5927\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 $ s $ \uff0c\u6709 $ m $ \u6b64\u64cd\u4f5c\uff0c\u6bcf\u4e00\u6b21\u64cd\u4f5c\u7ed9\u5b9a\u533a\u95f4 $ l $ \u5230 $ r $ \u548c $ k $ \uff0c\u4f7f $ [l,r] $ \u533a\u95f4\u5faa\u73af\u4f4d\u79fb $ k $ \u4f4d\uff0c\u8f93\u51fa\u7ed3\u679c\u3002\n\n## \u601d\u8def\n\n$ |s|\\leq 10000 $ \uff0c $ m\\leq 300 $ \uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u6a21\u62df\uff0c $ O(n\\times m) $ \u4e0d\u4f1a`TLE`\u3002\n\n\u5bf9\u4e8e\u7b2c $ i $ \u6b21\u64cd\u4f5c\uff0c\u7b2c $ j (l \\leq j \\leq r) $ \u4e2a\u5b57\u7b26\u5e94\u79fb\u5230 $ ((j-l_i+k_i) \\mod (r_i-l_i+1))+l $ \uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u76f4\u63a5\u6a21\u62df\u4e86\u3002\n\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n;\nchar a[10005],c[10005];\nint main(){\n    cin>>a+1;\n    n=strlen(a+1);\n    cin>>n;\n    for(int i=1,l,r,k;i<=n;i++){\n        scanf(\"%d %d %d\",&l,&r,&k);\n        for(int j=l;j<=r;j++) c[j]=a[j];\n        for(int j=l;j<=r;j++) a[(j-l+k)%(r-l+1)+l]=c[j];\n    }\n    cout<<a+1;\n    return 0;\n}\n```",
        "postTime": 1642329382,
        "uid": 429147,
        "name": "hxhhxh",
        "ccfLevel": 0,
        "title": "CF598B"
    },
    {
        "content": "\u5927\u6c34\u9898\u3002\n\n\u56e0\u4e3a $1\\le|s|\\le10000$ \u4e14 $1\\le m \\le 300$\uff0c\u6240\u4ee5\u66b4\u529b\u662f\u5b8c\u5168\u53ef\u884c\u7684\uff01\n\n~~\u4e0d\u8fc7\u6211\u7528\u7684\u5947\u5947\u602a\u602a\u7684\u65b9\u6cd5\u8fd8\u662f\u4e0d\u8981\u501f\u9274\u4e86\uff0c\u770b\u770b\u5c31\u597d\u3002~~\n\n\u601d\u8def\uff1a\n\n1. \u8f93\u5165\u5b57\u7b26\u4e32\uff0c\u4e00\u5f00\u59cb\u5efa\u7acb\u4e00\u4e2a\u6570\u7ec4 $qwq$ \u8868\u793a\u73b0\u5728\u7684\u5b57\u7b26\u4e32\u7684\u72b6\u6001\u3002\u73b0\u5728\u5b57\u7b26\u4e32\u7684\u7b2c $i$ \u4e2a\u5bf9\u5e94 $s$ \u7684\u7b2c $qwq[i]$ \u4e2a\u5b57\u7b26\u3002\u6240\u4ee5\u4e00\u5f00\u59cb\uff0c$qwq[i]=i$\u3002\uff08\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5728\u5b57\u7b26\u4e32\u91cc\u64cd\u4f5c\uff0c\u6211\u53ea\u662f\u6bd4\u8f83\u83dc\uff09\n2. \u8f93\u5165\u6b21\u6570\u3002\u8f93\u5165\u5f00\u59cb\u548c\u7ed3\u675f\u4f4d\u7f6e\u4ee5\u53ca\u5faa\u73af\u79fb\u4f4d\u64cd\u4f5c\u6b21\u6570\u3002\uff08\u76f4\u63a5\u5728\u5b57\u7b26\u4e32\u91cc\u64cd\u4f5c\u7684\u540c\u5b66\u6ce8\u610f\u4e86\uff0c\u5f00\u59cb\u548c\u7ed3\u675f\u4f4d\u7f6e\u662f\u4ece\u4e00\u5f00\u59cb\u7b97\u7684\uff0c\u6240\u4ee5\u5f53\u4f60\u64cd\u4f5c\u65f6\u8981\u51cf\u4e00\uff09\n3. \u628a\u5f85\u64cd\u4f5c\u7684\u5b57\u7b26\u4e32\u4e2d\u8981\u64cd\u4f5c\u7684\u5730\u65b9\u63d0\u53d6\u51fa\u6765\u3002\n4. \u7b97\u51fa\u5faa\u73af\u79fb\u4f4d\u540e\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5bf9\u5e94\u5f85\u64cd\u4f5c\u5b57\u7b26\u4e32\u4e2d\u7684\u54ea\u4e2a\u5b57\u7b26\u3002\n5. \u4ece\u90a3\u4e2a\u5b57\u7b26\u5f00\u59cb\uff0c\u5faa\u73af\u628a\u65b0\u7684\u5bf9\u5e94\u4fe1\u606f\u5b58\u8fdb\u53bb\u3002\uff08\u6ce8\u610f\u5982\u679c\u8d85\u8fc7\u7ed3\u675f\u4f4d\u7f6e\u8981\u56de\u5230\u5f00\u59cb\u4f4d\u7f6e\uff09\n6. \u8f93\u51fa\u5bf9\u5e94\u7684\u6570\uff0c\u5b8c\u7ed3\u6492\u82b1\uff01\n\n\u5199\u7684\u6bd4\u8f83\u8270\u6da9\u96be\u61c2\uff0c\u5982\u679c\u770b\u4e0d\u61c2\u5c31\u770b\u4ee3\u7801\u6ce8\u91ca\u3002\n\nCODE\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint qwq[114514];//\u4e60\u60ef\u5199\u8fd9\u4e2a\u4e86\uff0c\u4e0d\u8981\u770b\nint t[114514],i;\nint main(){\n\tstring s;\n\tcin>>s;\n\tfor(i=1;i<=s.length();i++)qwq[i]=i;//\u5bf9\u5e94\u5173\u7cfb\n\tint m;\n\tscanf(\"%d\",&m);\n\twhile(m--)\n\t{\n\t\tmemset(t,0,sizeof(t));\n\t\tint st,fn,mo;\n\t\tscanf(\"%d%d%d\",&st,&fn,&mo);\n\t\tfor(i=st;i<=fn;i++)t[i]=qwq[i];//\u63d0\u53d6\n\t\tint now=fn-(mo%(fn-st+1)-1);//\u8fd9\u91cc\u662f\u7b97\u51fa\u6765\u5f00\u59cb\u4f4d\u7f6e\u7684\u516c\u5f0f\uff0c\u4e0d\u61c2\u7684\u81ea\u5df1\u60f3\u60f3\u4e3a\u4ec0\u4e48\n\t\tfor(i=st;i<=fn;i++)\n\t\t{\n\t\t\tif(now>fn)now=st;//\u8d8a\u754c\u5c31\u91cd\u7f6e\n\t\t\tqwq[i]=t[now];//\u4ee3\u5165\u65b0\u7684\u503c\n\t\t\tnow++;\n\t\t}\n\t}\n\tfor(i=1;i<=s.length();i++)\n\tcout<<s[qwq[i]-1];//\u4e00\u5b9a\u8981\u51cf\u4e00\uff01\u5b57\u7b26\u4e32\u4ece\u96f6\u5f00\u59cb\uff01\n\treturn 0;\n}\n\n```",
        "postTime": 1651746265,
        "uid": 373293,
        "name": "_Hikouwastaken_",
        "ccfLevel": 5,
        "title": "\u3010\u9898\u89e3\u3011CF598B"
    },
    {
        "content": "\u4e00\u4e2a\u6bd4\u8f83\u5165\u95e8\u7684\u5b57\u7b26\u4e32\u3002\n\n\u5982\u679c\u539f\u5b57\u7b26\u4e32\u662f $s_0\\dots s_{m-1}$ \uff0c\u90a3\u5bf9\u4e8e\u7b2c i \u4f4d\uff0c\u5e94\u8be5\u653e\u5230 $(i+k)\\mod m$ \u7684\u4f4d\u7f6e\u4e0a\u3002\n\n\u7136\u540e\u4ee3\u7801\u5c31\u663e\u800c\u6613\u89c1\u4e86\u3002\n\n\u559c\u95fb\u4e50\u89c1\u7684\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstring s;\nint q,m,l,r,k;\nchar c[10001];\nvoid work(int l,int r,int k)\n{\n\tm=r-l+1;\n\tfor(int i=l;i<=r;i++)\n\t\tc[(i-l+k)%m]=s[i];\n\tfor(int i=l;i<=r;i++)\n\t\ts[i]=c[i-l];\n\treturn ;\n}\nint main()\n{\n\tcin>>s;\n\tscanf(\"%d\",&q);\n\twhile(q--)\n\t{\n\t\tscanf(\"%d%d%d\",&l,&r,&k);\n\t\twork(l-1,r-1,k);\n\t}\n\tcout<<s;\n\treturn 0;\n}\n```\n",
        "postTime": 1597296076,
        "uid": 240812,
        "name": "45dino",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF598B \u3010Queries on a String\u3011"
    },
    {
        "content": "\u4e00\u5f00\u59cb\u6211\u8fd8\u4ee5\u4e3a\u8981\u7528\u94fe\u8868\u505a\u7684\u3002\n\n\u540e\u6765\u770b\u4e86\u770b**\u6570\u636e\u8303\u56f4**\uff1a\n\n$1\\leq n\\leq 10^4$\uff0c$1\\leq m\\leq 300$\u3002\n\n${1\\leq m\\leq 300 }$\uff01\uff01\uff01\n\n\u76f4\u63a5**\u6570\u7ec4\u79fb\u4f4d**\u5c31\u597d\u3002\n\n\u6bcf\u6b21\u8bfb\u8fdb\u6765\u5c31\u628a $k$ **\u53d6\u6a21** $r-l+1$ \uff0c\u7136\u540e\u7ed9 $[l,r]$ \u533a\u95f4**\u79fb\u52a8** $k$ \u4f4d\uff0c**\u65f6\u95f4\u590d\u6742\u5ea6** $\\text{O}(nm)$ \uff0c**\u4e0d\u4f1a**\u8d85\u65f6\u3002\n\n**\u6ce8\u610f\u7279\u5224\u79fb\u4f4d\u65f6\u4f1a\u4e0d\u4f1a\u79fb\u51fa\u533a\u95f4** $[l,r]$ \u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define inf ((1<<30)-1)\n#define linf ((1<<62)ll-1)\n#define LL long long\n#define Fu(i,a,b) for(register int i=a;i<=b;i++)\n#define Fd(i,a,b) for(register int i=a;i>=b;i--)\n#define Fn(i,a) for(register int i=las[a];i;i=nex[i])\nint Fl,Pn,SI=100;char mch=' ',ch,Bf[21];\ntemplate<typename t>void in(t&a){a=0;ch=getchar();Fl=1;while((ch<'0')||(ch>'9'))Fl=(ch=='-')?-Fl:Fl,ch=getchar();while((ch>='0')&&(ch<='9'))a=a*10+ch-'0',ch=getchar();a*=Fl;}\ntemplate<typename t>void out(t a){if(a<0)putchar('-'),a=-a;if(a==0)putchar('0');while(a)Bf[++Pn]=a%10+'0',a/=10;while(Pn)putchar(Bf[Pn]),--Pn;putchar(mch);}\ntemplate<typename t,typename ...ARGS>void in(t&a,ARGS&...args){in(a);in(args...);}\ntemplate<typename t,typename ...ARGS>void out(t a,ARGS... args){out(a);out(args...);}\nusing namespace std;\nint n,m,l,r,k;char a[10001],b[10001];\ninline int ri(int i,int k){return (i+k-l)%(r-l+1)+l;}\ninline void move_a()\n{\n\tFu(i,l,r)b[ri(i,k)]=a[i];\n\tFu(i,l,r)a[i]=b[i];\n}\nint main()\n{\n\twhile(isalpha(a[++n]=getchar()));\n\tn--;in(m);\n\tFu(i,1,m)\n\t{\n\t\tin(l,r,k);\n\t\tk%=(r-l+1);\n\t\tif(k==0)continue;\n\t\tmove_a();\n\t}\n\tFu(i,1,n)putchar(a[i]);\n\treturn 0;\n}\n\n```",
        "postTime": 1582810699,
        "uid": 121995,
        "name": "SmallTualatin",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF598B \u3010Queries on a String\u3011"
    }
]