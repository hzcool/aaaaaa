[
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/zkyJuruo/p/14254120.html)\n\n\u770b\u5230\u5176\u4ed6\u9898\u89e3\u91cc\u9762\u5168\u662f\u4ec0\u4e48 `bfs` \u5e8f\u4e0a\u7ebf\u6bb5\u6811\u554a\uff0c\u4ec0\u4e48\u6839\u53f7\u7684\u5947\u602a\u4e1c\u897f\u554a\uff0c\u849f\u84bb\u7528\u4e00\u4e2a\u975e\u5e38\u597d\u5199\u7684 $O(n)$ \u505a\u6cd5\uff08\u8fd9\u91cc\u5b9e\u73b0\u7684\u65f6\u5019\u7528\u4e86 `vector`\uff0c\u6240\u4ee5\u6bd4\u8f83\u6162\uff09\uff0c\u5199\u7bc7\u9898\u89e3\u6765\u9020\u798f\u793e\u4f1a\n\n\u76ee\u524d\u5728 cf \u4e0a\u662f\u6700\u77ed\u89e3\n\n-----------\n\u5982\u679c $k = 1$\uff0c\u7b54\u6848\u662f $\\max(deg_i + 1)$\n\n\u8003\u8651\u6709 $3$ \u4e2a\u70b9\u7684\u60c5\u51b5\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/mmlyhcfh.png)\n\n\u901a\u8fc7\u653e\u7f29\u6cd5\u53ef\u4ee5\u8bc1\u660e\uff08\u8bc1\u660e\u6bd4\u8f83\u7b80\u5355\u800c\u7e41\u7410\u7565\u53bb\uff09\u3002\u8003\u8651\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u7684\u94fe\u957f(\u56fe\u4e2d\u7684 $a, b, c$)\uff1a\n1. $k$ \u4e3a\u5947\u6570\uff1a\u6709\u4e00\u4e2a\u4e2d\u5fc3\u7ed3\u70b9\uff0c\u65c1\u8fb9\u7684\u94fe\u6700\u591a\u53ea\u6709\u4e00\u4e2a\u957f\u4e3a $\\frac{k-1}{2}$ \u7684\uff0c\u5176\u4ed6\u90fd\u662f $\\frac{k + 1}{2}$\u3002\n2. $k$ \u4e3a\u5076\u6570\uff1a\u6709\u4e00\u4e2a\u4e2d\u5fc3\u7ed3\u70b9\uff0c\u65c1\u8fb9\u7684\u90fd\u662f\u957f\u4e3a $\\frac{k}{2}$ \u7684\u94fe\u3002\n\n\u4f46\u662f\u8fd9\u6837\u4f1a\u53d1\u73b0\u5728\u6837\u4f8b $2$ \u6302\u6389\u4e86\u3002\u6f0f\u6389\u4e86\u4e0b\u9762\u7684\u60c5\u51b5\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/o2ty4vhp.png)\n\n\u56e0\u6b64\u6709\u4e86\u7b2c $3$ \u79cd\u60c5\u51b5 \uff1a\u5728 $k$ \u4e3a\u5076\u6570\u7684\u65f6\u5019\uff0c\u6709\u4e24\u4e2a\u4e2d\u5fc3\u7ed3\u70b9\uff0c\u65c1\u8fb9\u94fe\u957f\u8981\u6c42\u4e3a $\\frac{k}{2}$\u3002\n\n\u5728\u8fd9 $3$ \u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53d1\u73b0\u4e00\u5b9a\u6ee1\u8db3 $ans_x \\ge ans_{x + 2}$\u3002\n\n\u5bf9\u4e8e\u524d\u4e24\u4e2a\u60c5\u51b5\uff0c\u6bcf\u4e00\u4e2a\u7ed3\u70b9\u6211\u4eec\u8bb0\u5f55\u4ee5\u4ed6\u4e3a\u6839\u65f6\u7684\u5b50\u6811\u6df1\u5ea6\uff0c\u7136\u540e\u628a\u8fd9\u4e2a\u6df1\u5ea6\u8fdb\u884c\u6392\u5e8f\u3002$k$ \u4e3a\u5076\u6570\u65f6\u7b2c $i$ \u5927\u6570 $t$ \u7684\u5219\u8868\u793a  $ans_{2t} \\ge i$ \u3002\u5947\u6570\u7a0d\u5fae\u9ebb\u70e6\u70b9\uff0c\u7b2c $i$ \u5927\u6570 $t$ \u7684\u5219\u8868\u793a  $ans_{2t-1} \\ge i$\uff0c\u5982\u679c\u4e0d\u548c\u6392\u5728\u524d\u9762\u7684\u6570\u76f8\u540c\uff0c\u90a3\u4e48\u6211\u4eec\u53d1\u73b0\u957f\u5ea6\u4e3a $ans_{2t+1} \\ge i$\uff08\u7528\u8fd9\u6761\u94fe\u548c\u4e4b\u524d\u9762\u7684\u51e0\u6761\u94fe\u653e\u5728\u4e00\u8d77\uff0c\u5c31\u662f\u957f\u5ea6\u4e3a $t$ \u548c\u4e00\u5806 $t + 1$\uff09\u3002\u8fd9\u91cc\u90fd\u5f88\u663e\u7136\u3002\n\n\u7b2c $3$ \u79cd\u60c5\u51b5\uff0c\u663e\u7136\u53ef\u4ee5\u628a\u6240\u6709\u76f8\u90bb\u7684\u4e24\u4e2a\u4f4d\u7f6e $A$, $B$ \u7684\u5b50\u6811\u6df1\u5ea6\u6570\u7ec4\u7ed9\u5408\u5e76\u5728\u4e00\u8d77\uff0c\u7136\u540e\u518d\u6309\u7167\u7b2c\u4e00\u79cd\u60c5\u51b5\u505a\u5c31\u884c\u4e86\uff0c\u53ef\u60dc\u662f $n^2$ \u7684\u3002\n\n\u8003\u8651\u4ece\u540e\u5230\u524d\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u5b50\u6811\u6df1\u5ea6\u6570\u7ec4\u626b\u63cf\u7ebf\uff0c\u626b\u5230 $k$ \u65f6\u66f4\u6539\u6bcf\u4e00\u4e2a\u6570\u7684\u65f6\u5019\u5224\u4e00\u4e0b\u548c\u76f8\u90bb\u7ed3\u70b9\u7684\u70b9\u7684\u548c $sum - 2$ \uff08$sum$ \u4f1a\u7b97\u5230 $B$ \u505a $A$ \u5b50\u6811\u548c $A$ \u505a $B$ \u5b50\u6811\u7684\u8d21\u732e\uff0c\u56e0\u6b64 $sum$ \u8981\u51cf $2$\uff09\u662f\u5426\u53ef\u4ee5\u66f4\u65b0 $ans_{k}$\u3002\n\n\u8fd9\u4e2a\u53ef\u4ee5\u5957\u8def\u5730\u770b\u4f5c\u662f\u8ba1\u7b97\u7236\u4eb2\u7ed3\u70b9\u548c\u5b50\u6811\u7ed3\u70b9\u7684\u6700\u5927\u503c\uff0c\u989d\u5916\u8bb0\u5f55\u4e00\u4e0b\u5b50\u6811 $sum$ \u7684\u6700\u5927\u503c $mxs$\uff0c\u5728\u4fee\u6539\u4e00\u4e2a\u7ed3\u70b9\u7684\u65f6\u5019\u66f4\u65b0\u7236\u4eb2\u7ed3\u70b9\u7684 $mxs$\uff0c\u540c\u65f6\u7528 $max(sum_{fa}, mxs)$ \u6765\u66f4\u65b0\u7b54\u6848\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u65f6\uff0c\u7b2c $1$ \u548c\u7b2c $2$ \u79cd\u60c5\u51b5\u4e5f\u53ef\u4ee5\u628a\u6392\u5e8f\u6362\u6210\u626b\u63cf\u7ebf\u505a\u5230 $O(n)$\n\n\u5176\u4f59\u7ec6\u8282\u89c1\u4ee3\u7801\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define L(i, j, k) for(int i = j, i##E = k; i <= i##E; i++)\n#define R(i, j, k) for(int i = j, i##E = k; i >= i##E; i--)\nusing namespace std;\nconst int N = 5e5 + 7;\nvoid Max(int &x, int y) { if(x < y) x = y;  }\nint n, deg[N], Fa[N], f1[N], f2[N], sum[N], mx1[N], mx2[N], up[N], mxs[N], las, u, v;\nvector<int> G[N], e[N];\nvoid dfs1(int x) {\n\tMax(f1[0], deg[x] + 1), mxs[x] = -1e9;\n\tfor(int v : e[x]) if(v ^ Fa[x]) {\n\t\tFa[v] = x, dfs1(v);\n\t\tif(mx1[v] + 1 > mx1[x]) mx2[x] = mx1[x], mx1[x] = mx1[v] + 1; else Max(mx2[x], mx1[v] + 1);\n\t}\n}\nvoid dfs2(int x) {\n\tif(x ^ 1) G[up[x]].push_back(x);\n\tfor(int v : e[x]) if(v ^ Fa[x]) G[mx1[v] + 1].push_back(x);\n\tfor(int v : e[x]) if(v ^ Fa[x]) up[v] = max(up[x], mx1[v] + 1 == mx1[x] ? mx2[x] : mx1[x]) + 1, dfs2(v);\n}\nint main() {\n\tios::sync_with_stdio(false);\n\tcin.tie(0), cout.tie(0);\n\tcin >> n, f1[n] = f2[n] = 1;\n\tL(i, 1, n - 1)  cin >> u >> v, deg[u] ++, deg[v] ++, e[u].push_back(v), e[v].push_back(u);\n\tdfs1(1), dfs2(1);\n\tR(i, n, 1) {\n\t\tlas = 0;\n\t\tfor(int t : G[i]) {\n\t\t\tsum[t] ++, Max(mxs[Fa[t]], sum[t]);\n\t\t\tMax(f2[i], sum[t] + mxs[t] - 2), Max(f2[i], sum[t] + sum[Fa[t]] - 2); // case 3\n\t\t\tMax(f2[i], sum[t]); // case 1\n\t\t\tMax(f1[i - 1], sum[t]); // case 2\n\t\t\tif(las != t) Max(f1[i], sum[t]); las = t; // case 2\n\t\t}\n\t}\n\tR(i, n, 1) Max(f1[i - 1], f1[i]), Max(f2[i - 1], f2[i]);\n\tL(i, 1, n) cout << (i % 2 ? f1[i / 2] : f2[i / 2]) << \" \";\n\tcout << endl;\n\treturn 0;\n} \n```\n\n**\u795d\u5927\u5bb6\u5b66\u4e60\u6109\u5feb\uff01**",
        "postTime": 1610155314,
        "uid": 173660,
        "name": "zhoukangyang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1266F \u3010Almost Same Distance\u3011"
    },
    {
        "content": "\u524d\u7f6e\u829d\u58eb\uff1a[\u6811\u5f62 dp](https://oi-wiki.org/dp/tree/)\u3001[bfs \u5e8f](https://oi-wiki.org/graph/bfs/#bfs-%E5%BA%8F%E5%88%97)\u3001[\u7ebf\u6bb5\u6811](https://oi-wiki.org/ds/seg/)\n\n\u5f53 $k = 1$\uff0c\u663e\u7136\u53ef\u4ee5\u5bf9\u6bcf\u4e2a\u8282\u70b9\u53d6\u5b83\u81ea\u5df1\u548c\u5b83\u76f8\u90bb\u7684\u70b9\uff0c\u5373 $ans_1 = \\displaystyle\\max_{i = 1}^n d_i + 1$\u3002\n\n\u5f53 $k$ \u4e3a\u5076\u6570\uff0c\u6709\u5982\u4e0b\u4e24\u79cd\u60c5\u51b5\uff1a\n\n- A. \u4e00\u4e2a\u70b9 $u$\uff0c\u4e0a\u9762\u6302\u4e86\u82e5\u5e72\u6761\u957f\u4e3a $\\frac{k}{2}$ \u6216 $\\frac{k}{2} + 1$ \u7684\u94fe\uff08\u6240\u6c42\u70b9\u96c6\u4e0d\u5305\u62ec $u$ \u4e14\u957f\u4e3a $\\frac{k}{2} + 1$ \u7684\u94fe\u4e0d\u8d85\u8fc7\u4e00\u6761\uff09\u3002\n- B. \u4e24\u4e2a\u70b9 $u, v$\uff0c$u, v$ \u4e0a\u9762\u5206\u522b\u6302\u4e86\u82e5\u5e72\u6761\u957f\u4e3a $\\frac{k}{2}$ \u7684\u94fe\uff08\u6240\u6c42\u70b9\u96c6\u4e0d\u5305\u62ec $u$\uff09\u3002\n\n\u5f53 $k$ \u4e3a $> 1$ \u7684\u5947\u6570\uff0c\u6709\u5982\u4e0b\u4e00\u79cd\u60c5\u51b5\uff1a\n\n- C. \u4e00\u4e2a\u70b9 $u$\uff0c\u4e0a\u9762\u6302\u4e86\u82e5\u5e72\u6761\u957f\u4e3a $\\frac{k + 1}{2}$ \u6216 $\\frac{k - 1}{2}$ \u7684\u94fe\uff08\u6240\u6c42\u70b9\u96c6\u4e0d\u5305\u62ec $u$ \u4e14\u957f\u4e3a $\\frac{k - 1}{2}$ \u7684\u94fe\u4e0d\u8d85\u8fc7\u4e00\u6761\uff09\u3002\n\n\u7531\u4e0a\u8ff0\u60c5\u51b5\u7684\u8868\u8ff0\u6211\u4eec\u4e0d\u96be\u53d1\u73b0 $ans_i \\geq ans_{i + 2}$\uff0c\u6240\u4ee5\u8003\u8651\u5904\u7406\u957f\u5ea6**\u81f3\u5c11**\u4e3a $k$ \u7684\u94fe\u3002\n\n\u5bf9\u4e8e A\u3001C\uff0c\u6ce8\u610f\u5230\u6211\u4eec\u53ea\u9700\u8981\u56fa\u5b9a\u4e00\u4e2a\u8282\u70b9 $u$\uff0c\u4e8e\u662f\u8003\u8651\u5bf9\u6bcf\u4e2a $u$ \u6293\u51fa\u6240\u6709 $u \\to v$ \u4ee5\u53ca**\u5f53 $u$ \u4e3a\u6839\u65f6**\u4ece $u$ \u7ecf\u8fc7 $v$ \u5411\u4e0b\u5ef6\u4f38\u7684\u94fe\u7684\u6700\u5927\u957f\u5ea6\uff08\u5bb9\u6613\u5206\u4e3a\u5b50\u6811\u5185\u548c\u5b50\u6811\u5916\u4e24\u6b21\u6811\u5f62 dp \u9884\u5904\u7406\uff09\uff0c\u5c06\u6240\u6709\u8fd9\u6837\u7684\u6781\u957f\u94fe\u6293\u51fa\u6765\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u8ba8\u8bba\u5230\u94fe $i$ \u65f6\u8868\u793a\u5141\u8bb8\u4f7f\u7528\u957f\u5ea6 $\\geq len_i$ \u7684\u94fe\uff0c\u5bf9\u4e8e\u60c5\u51b5 A\uff0c\u5373\u4e3a\u8fd9\u6837\u7684\u94fe\u7684\u6761\u6570\uff1b\u5bf9\u4e8e\u60c5\u51b5 C\uff0c\u5f53 $i$ \u662f\u552f\u4e00\u7684\u957f\u4e3a $\\frac{k - 1}{2}$ \u7684\u94fe\uff0c\u6211\u4eec\u53ef\u4ee5\u53cc\u6307\u9488\u7ef4\u62a4\u957f $> len_i$ \u7684\u94fe\u7684\u6570\u91cf\uff0c\u518d\u52a0\u4e0a\u8fd9\u6761\u94fe\u81ea\u5df1\u5c31\u884c\uff0c\u5f53 $i$ \u662f\u957f\u4e3a $\\frac{k + 1}{2}$ \u7684\u94fe\uff0c\u7b54\u6848\u5373\u4e3a\u957f\u5ea6 $\\geq len_i$ \u7684\u94fe\u7684\u6761\u6570\u3002\n\n\u5bf9\u4e8e B\uff0c\u8003\u8651\u56fa\u5b9a\u5176\u4e2d\u4e00\u4e2a\u7aef\u70b9\u6c42\u53e6\u4e00\u4e2a\u7aef\u70b9\u7684\u6700\u4f18\u503c\u3002\u4eff\u7167\u4e0a\u8ff0\u505a\u6cd5\uff0c\u6211\u4eec\u628a**\u4ece\u6bcf\u4e2a\u7aef\u70b9\u51fa\u53d1\u7684\u6240\u6709\u6781\u957f\u94fe**\u90fd\u6293\u51fa\u6765\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u5e76\u4f9d\u6b21\u626b\u6bcf\u4e00\u6761\u94fe\u3002\u4e0b\u6587\u4e2d\u8bbe\u5f53\u524d\u94fe $i$ \u7684\u7aef\u70b9\u4e3a $u$\u3002\n\n\u7531\u4e8e\u5b9e\u73b0\u65f6\u80af\u5b9a\u662f\u5728\u6709\u6839\u6811\u4e0a\u8ba8\u8bba\u8be5\u95ee\u9898\uff0c\u6211\u4eec\u4e0d\u59a8\u73b0\u5728\u5c31\u5206\u6210\u5728 $u$ \u7684\u513f\u5b50\u4e2d\u9009\u4e00\u4e2a\u70b9 $v$ \u548c\u9009\u62e9 $fa_u$ \u4e24\u79cd\u60c5\u51b5\u3002\n\n1. \u5728 $u$ \u7684\u513f\u5b50\u4e2d\u9009\u4e00\u4e2a $v$\n\n\u6211\u4eec\u5bb9\u6613\u77e5\u9053\u9009\u6bcf\u4e2a\u513f\u5b50\u65f6\u53ef\u4ee5\u5bf9\u5b83\u6709\u8d21\u732e\u7684\u94fe\u7684\u6570\u91cf\uff0c\u53ef\u4ee5\u901a\u8fc7\u53cc\u6307\u9488\u6c42\u51fa\u957f\u5ea6 $\\geq len_i$ \u7684\u94fe\u4e2d\u7aef\u70b9\u4e5f\u4e3a $u$ \u8005\u7684\u6570\u91cf\u3002\n\n\u4f46\u8fd9\u91cc\u6211\u4eec\u9700\u8981 $- 1$\uff0c\u56e0\u4e3a\u4ece $v$ \u51fa\u53d1\u7ecf\u8fc7 $u$ \u7684\u94fe\u4e5f\u4f1a\u5bf9 $v$ \u4ea7\u751f\u8d21\u732e\uff08\u8981\u4e0d\u7136 $u$ \u5c31\u6ca1\u6709\u5b9e\u9645\u8d21\u732e\u4e86\uff0c\u77db\u76fe\uff09\u3002\n\n\u800c $u$ \u672c\u8eab\u7684\u8d21\u732e\u4e3a\u5f53\u524d\u94fe\u5728\u4ee5 $u$ \u4e3a\u6839\u65f6\u7684\u6392\u540d $- 1$\uff0c\u9700\u8981 $- 1$ \u662f\u56e0\u4e3a\u4ece $u$ \u51fa\u53d1\u7ecf\u8fc7 $v$ \u7684\u94fe\u4e5f\u4f1a\u5bf9 $u$ \u4ea7\u751f\u8d21\u732e\uff08\u8981\u4e0d\u7136 $u$ \u5c31\u6ca1\u6709\u5b9e\u9645\u8d21\u732e\u4e86\uff0c\u8fd9\u4e0d\u5408\u6cd5\uff09\u3002\n\n\u6ce8\u610f\u5230\u6211\u4eec\u9700\u8981\u6c42\u4e00\u4e2a\u70b9\u7684\u6240\u6709\u513f\u5b50\u7684\u8d21\u732e\u7684 $\\max$\uff0c\u8fd8\u8981\u652f\u6301\u5355\u70b9\u52a0\u7684\u64cd\u4f5c\uff0c\u4e8e\u662f\u6211\u4eec\u6c42\u51fa\u539f\u6811\u7684 bfs \u5e8f\u5e76\u7ef4\u62a4\u4e00\u68f5\u652f\u6301\u5355\u70b9\u52a0\u3001\u533a\u95f4 $\\max$ \u7684\u7ebf\u6bb5\u6811\u5373\u53ef\u3002\n\n2. \u9009\u62e9 $fa_u$\n\n\u7c7b\u4f3c\u5730\uff0c\u6211\u4eec\u4e5f\u5bb9\u6613\u77e5\u9053\u9009 $fa_u$ \u65f6\u53ef\u4ee5\u5bf9\u5b83\u6709\u8d21\u732e\u7684\u94fe\u7684\u6570\u91cf\u3002\n\n\u4f46\u8fd9\u91cc\u6211\u4eec\u4e5f\u9700\u8981 $- 1$\uff0c\u56e0\u4e3a\u4ece $fa_u$ \u51fa\u53d1\u7ecf\u8fc7 $u$ \u7684\u94fe\u4e5f\u4f1a\u5bf9 $fa_u$ \u4ea7\u751f\u8d21\u732e\uff08\u8981\u4e0d\u7136 $u$ \u5c31\u6ca1\u6709\u5b9e\u9645\u8d21\u732e\u4e86\uff0c\u77db\u76fe\uff09\u3002\n\n\u800c $u$ \u672c\u8eab\u7684\u8d21\u732e\u4e5f\u4e3a\u5f53\u524d\u94fe\u5728\u4ee5 $u$ \u4e3a\u6839\u65f6\u7684\u6392\u540d $- 1$\uff0c\u9700\u8981 $- 1$ \u662f\u56e0\u4e3a\u4ece $u$ \u51fa\u53d1\u7ecf\u8fc7 $fa_u$ \u7684\u94fe\u4e5f\u4f1a\u5bf9 $u$ \u4ea7\u751f\u8d21\u732e\uff08\u8981\u4e0d\u7136 $fa_u$ \u5c31\u6ca1\u6709\u5b9e\u9645\u8d21\u732e\u4e86\uff0c\u8fd9\u4e0d\u5408\u6cd5\uff09\u3002\n\n\u6700\u540e\u505a\u4e00\u6b21\u540e\u7f00 max \u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n \\log n)$\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <algorithm>\n#include <queue>\n#include <vector>\n#include <cstdio>\n\nusing namespace std;\n\ntypedef struct {\n\tint nxt;\n\tint end;\n} Edge;\n\ntypedef struct {\n\tint pos;\n\tint rank;\n\tint val;\n} Node1;\n\ntypedef struct {\n\tint l;\n\tint r;\n\tint max;\n} Node2;\n\nint cnt = 0, pos = 0;\nint l[500007], deg[500007], head[500007], fa[500007], bfn[500007], r[500007], down[500007], sec_down[500007], up[500007], each[500007], ans[1000007];\nbool vis[500007];\nEdge edge[1000007];\nNode1 a[1000007];\nNode2 tree[2000007];\nqueue<int> q;\nvector<pair<int, int> > v[500007];\n\nbool operator <(const Node1 a, const Node1 b){\n\treturn a.val > b.val;\n}\n\ninline void init(int n){\n\tfor (register int i = 1; i <= n; i++){\n\t\tl[i] = 0x7fffffff;\n\t}\n}\n\ninline void add_edge(int start, int end){\n\tcnt++;\n\tedge[cnt].nxt = head[start];\n\thead[start] = cnt;\n\tedge[cnt].end = end;\n}\n\nvoid dfs1(int u, int father){\n\tfa[u] = father;\n\tfor (register int i = head[u]; i != 0; i = edge[i].nxt){\n\t\tint x = edge[i].end;\n\t\tif (x != father){\n\t\t\tdfs1(x, u);\n\t\t\tif (down[u] < down[x] + 1){\n\t\t\t\tsec_down[u] = down[u];\n\t\t\t\tdown[u] = down[x] + 1;\n\t\t\t} else {\n\t\t\t\tsec_down[u] = max(sec_down[u], down[x] + 1);\n\t\t\t}\n\t\t}\n\t}\n}\n\ninline void bfs(int start){\n\tint id = 0;\n\tvis[start] = true;\n\tq.push(start);\n\twhile (!q.empty()){\n\t\tint cur = q.front();\n\t\tq.pop();\n\t\tbfn[cur] = ++id;\n\t\tif (fa[cur] != 0){\n\t\t\tl[fa[cur]] = min(l[fa[cur]], id);\n\t\t\tr[fa[cur]] = max(r[fa[cur]], id);\n\t\t}\n\t\tfor (register int i = head[cur]; i != 0; i = edge[i].nxt){\n\t\t\tint x = edge[i].end;\n\t\t\tif (x != fa[cur]){\n\t\t\t\tvis[x] = true;\n\t\t\t\tq.push(x);\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid dfs2(int u){\n\tif (fa[u] != 0){\n\t\tup[u] = up[fa[u]] + 1;\n\t\tif (down[fa[u]] == down[u] + 1){\n\t\t\tup[u] = max(up[u], sec_down[fa[u]] + 1);\n\t\t} else {\n\t\t\tup[u] = max(up[u], down[fa[u]] + 1);\n\t\t}\n\t}\n\tfor (register int i = head[u]; i != 0; i = edge[i].nxt){\n\t\tint x = edge[i].end;\n\t\tif (x != fa[u]) dfs2(x);\n\t}\n}\n\nvoid dfs3(int u){\n\tif (fa[u] != 0) v[u].push_back(make_pair(up[u], fa[u]));\n\tfor (register int i = head[u]; i != 0; i = edge[i].nxt){\n\t\tint x = edge[i].end;\n\t\tif (x != fa[u]) v[u].push_back(make_pair(down[x] + 1, x));\n\t}\n\tsort(v[u].begin(), v[u].end(), greater<pair<int, int> >());\n\tfor (register int i = 0, j = 0; i < deg[u]; i++){\n\t\tint t1 = v[u][i].first * 2, t2 = v[u][i].first * 2 - 1, t3 = v[u][i].first * 2 + 1;\n\t\tpos++;\n\t\ta[pos].pos = u;\n\t\ta[pos].rank = i + 1;\n\t\ta[pos].val = v[u][i].first - 1;\n\t\tans[t1] = max(ans[t1], i + 1);\n\t\tans[t2] = max(ans[t2], i + 1);\n\t\twhile (j < deg[u] && v[u][j].first > v[u][i].first) j++;\n\t\tans[t3] = max(ans[t3], j + 1);\n\t}\n\tfor (register int i = head[u]; i != 0; i = edge[i].nxt){\n\t\tint x = edge[i].end;\n\t\tif (x != fa[u]) dfs3(x);\n\t}\n}\n\nvoid build(int x, int l, int r){\n\ttree[x].l = l;\n\ttree[x].r = r;\n\tif (l == r) return;\n\tint mid = (l + r) >> 1;\n\tbuild(x * 2, l, mid);\n\tbuild(x * 2 + 1, mid + 1, r);\n}\n\ninline void update(int x){\n\ttree[x].max = max(tree[x * 2].max, tree[x * 2 + 1].max);\n}\n\nvoid add(int x, int pos, int val){\n\tif (tree[x].l == tree[x].r){\n\t\teach[pos] += val;\n\t\ttree[x].max += val;\n\t\treturn;\n\t}\n\tif (pos <= ((tree[x].l + tree[x].r) >> 1)){\n\t\tadd(x * 2, pos, val);\n\t} else {\n\t\tadd(x * 2 + 1, pos, val);\n\t}\n\tupdate(x);\n}\n\nint get_max(int x, int l, int r){\n\tif (l <= tree[x].l && tree[x].r <= r) return tree[x].max;\n\tint mid = (tree[x].l + tree[x].r) >> 1, ans = 0;\n\tif (l <= mid) ans = get_max(x * 2, l, r);\n\tif (r > mid) ans = max(ans, get_max(x * 2 + 1, l, r));\n\treturn ans;\n}\n\nint main(){\n\tint n;\n\tscanf(\"%d\", &n);\n\tinit(n);\n\tfor (register int i = 1; i < n; i++){\n\t\tint u, v;\n\t\tscanf(\"%d %d\", &u, &v);\n\t\tdeg[u]++;\n\t\tdeg[v]++;\n\t\tadd_edge(u, v);\n\t\tadd_edge(v, u);\n\t}\n\tfor (register int i = 1; i <= n; i++){\n\t\tans[1] = max(ans[1], deg[i] + 1);\n\t}\n\tfor (register int i = 2; i <= n; i++){\n\t\tans[i] = 1;\n\t}\n\tdfs1(1, 0);\n\tbfs(1);\n\tdfs2(1);\n\tdfs3(1);\n\tsort(a + 1, a + pos + 1);\n\tbuild(1, 1, n);\n\tfor (register int i = 1, j = 1; i <= pos; i++){\n\t\tint x, t = (a[i].val + 1) * 2;\n\t\twhile (j <= pos && a[j].val >= a[i].val) add(1, bfn[a[j++].pos], 1);\n\t\tx = get_max(1, l[a[i].pos], r[a[i].pos]) - 1;\n\t\tif (fa[a[i].pos] != 0) x = max(x, each[bfn[fa[a[i].pos]]] - 1);\n\t\tans[t] = max(ans[t], x + (a[i].rank - 1));\n\t}\n\tfor (register int i = n * 2 - 4; i >= 1; i--){\n\t\tans[i] = max(ans[i], ans[i + 2]);\n\t}\n\tfor (register int i = 1; i <= n; i++){\n\t\tprintf(\"%d \", ans[i]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1661518403,
        "uid": 201007,
        "name": "Leasier",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1266F \u3010Almost Same Distance\u3011"
    },
    {
        "content": "\u56fe\u7247\u53ef\u5728[\u535a\u5ba2](https://www.cnblogs.com/2005lz/p/13121667.html)\u4e0a\u67e5\u770b\u3002\n\n\u6765\u4e00\u4e2aO(nlogn)\u505a\u6cd5\uff0c\u8dd1\u5f97\u633a\u5feb\u3002\n\n\u5047\u8bbe\u70b9\u96c6S\u5305\u542b\u70b9X\uff0cY\uff0cZ\uff0c\u7ea2\u8272\u94fe\u957f\u5ea6\u4e3aa\uff0c\u9ec4\u8272\u94fe\u957f\u5ea6\u4e3ab\uff0c\u7eff\u8272\u94fe\u957f\u5ea6\u4e3ac\u3002\n\n\u5982\u679c|a-b|>1\uff0c\u90a3\u4e48\u6709|dis(X,Z)-dis(Y,Z)|=|(a+c)-(b+c)|=|a-b|>1\uff0c\u4e0d\u7b26\u5408\u9898\u76ee\u8981\u6c42\u3002\n\n\u6240\u4ee5a=b\u6216|a-b|=1\u3002\u6240\u4ee5\u5b58\u5728\u4e00\u4e2a\u70b9A\uff0c\u5230S\u4e2d\u6bcf\u4e00\u4e2a\u70b9\u7684\u8ddd\u79bb\u90fd\u4e3ap\u6216p+1(0<2p<n)\u3002\n\n\u63a5\u7740\u53d1\u73b0\u4e00\u5b9a\u662f\u4e00\u4e0b\u4e24\u79cd\u60c5\u51b5\u4e4b\u4e00\uff08\u8bc1\u660e\u7559\u7ed9\u8bfb\u8005\u81ea\u884c\u601d\u8003\uff09\uff1a\n\n\u60c5\u51b51\uff1aS\u4e2d\u4efb\u4e24\u70b9\u5230\u70b9A\u7684\u94fe\u6ca1\u6709\u516c\u5171\u8fb9\u3002\n\n\u60c5\u51b52\uff1aS\u4e2d\u4efb\u610f\u4e00\u70b9P\u6ee1\u8db3min(dis(P,A),dis(P,A'))=p\uff08A'\u4e3a\u4e00\u4e2a\u4e0eA\u76f8\u90bb\u7684\u70b9\uff09\u3002\n\n\u4e8e\u662f\uff0cS\u4e2d\u7684\u70b9\u4fbf\u662f\u7531A\u70b9\u6216\u8005A\u70b9\u53caA'\u70b9\u4f38\u51fa\u6765\u7684\u82e5\u5e72\u6761\u201c\u957f\u5ea6\u76f8\u8fd1\u201d\u94fe\u7684\u53e6\u4e00\u7aef\u70b9\u7ec4\u6210\uff08\u5982\u56fe\uff09\u3002\n\n\u5176\u4e2d\u201c\u957f\u5ea6\u76f8\u8fd1\u201d\u6307\u957f\u5ea6\u5747\u4e3ap\u6216p+1\uff0c\u4e14\u957f\u5ea6\u4e3ap\u7684\u94fe\u53ea\u6709\u4e00\u6761\u6216\u957f\u5ea6\u4e3ap+1\u7684\u94fe\u53ea\u6709\u4e00\u6761\u3002\n\n\u9884\u5904\u7406\u51fa\u6bcf\u4e00\u4e2a\u70b9\u8fde\u51fa\u6240\u6709\u8fb9\u5f15\u51fa\u94fe\u7684\u6700\u5927\u957f\u5ea6\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u70b9P\uff0c\u8bbe\u5176\u5f15\u51fa\u7b2ck\u957f\u7684\u94fe\u957f\u5ea6\u4e3alen(p,k)\uff0c\u5219$ans_{len(p,k)} \\geq k$\u3002\n\n\u53c8\u56e0\u4e3a$ans_x \\geq ans_{x+2}$\uff0c\u6240\u4ee5\u53ef\u4ee5\u5148\u5bf9\u4e8e\u6bcf\u4e2ak\uff0c\u6c42\u51fa\u6700\u5927\u7684x\u4f7f$ans_x \\geq k$\uff0c\u518d\u505a\u4e00\u8fb9\u540e\u7f00\u6700\u5927\u503c\u3002\n\n\u5148\u679a\u4e3e\u5176\u4e2d\u4e00\u4e2a\u4e2d\u5fc3\u70b9\uff0c\u518d\u679a\u4e3e\u5176\u5f15\u51fa\u7684\u4e00\u6761\u8fb9\uff0c\u8bbek\u4e3a\u8fd9\u6761\u8fb9\u5f15\u51fa\u94fe\u7684\u6700\u5927\u957f\u5ea6\uff0c\u4e00\u5171\u53ef\u4ee5\u5f15\u51fad\u6761\u957f\u5ea6\u4e3ak\u7684\u94fe\u3002\n\n\u90a3\u4e48\u6267\u884cans[k]=max(ans[k],d)\u3002\u5bf9\u6bcf\u4e2a\u70b9\uff0c\u5c06\u5176\u5f15\u51fa\u94fe\u6309\u6700\u5927\u957f\u5ea6\u6392\u5e8f\u5373\u53ef\u6c42\u5f97d\u548ck\u3002\n\n\u8fd9\u6837\u4e00\u4e2a\u4e2d\u5fc3\u70b9\u7684\u60c5\u51b5\u5c31\u641e\u5b9a\u4e86\u3002\n\n\u5bf9\u4e8e\u70b9i\uff0c\u8bbe\u96c6\u5408S_i\u4e2d\u6709deg_i\u4e2a\u5143\u7d20\uff0c\u5206\u522b\u4e3ai\u5f15\u51fadeg_i\u6761\u8fb9\u6240\u5f15\u51fa\u94fe\u957f\u5ea6\u7684\u6700\u5927\u503c\u3002\n\n\u679a\u4e3e\u5176\u4e2d\u4e00\u4e2a\u4e2d\u5fc3\u70b9P\uff0c\u8bbe\u53e6\u4e00\u4e2a\u4e3aQ\uff0c\u5219P\uff0cQ\u76f8\u90bb\u3002\u6211\u4eec\u53ea\u9700\u8981\u5bf9\u4e8e\u6bcf\u4e00\u4e2a$S_{P,j}(0 \\leq j<deg_P)$\uff0c\u627e\u5230\u70b9Q\uff0c\u4f7f\u96c6\u5408S_P\uff0cS_Q\u4e2d\u5927\u4e8e$S_{P,j}$\u7684\u6570\u6700\u591a\u3002\u56e0\u4e3a\u6bcf\u4e2a\u6570\u76f8\u5f53\u4e8e\u4e00\u6761\u94fe\u7684\u957f\u5ea6\u3002\u628a\u95ee\u9898\u79bb\u7ebf\u4e0b\u6765\uff08\u6309\u7167$S_{P,j}$\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff09\uff0c\u7528bfs\u5e8f\u628a\u4e0eP\u76f8\u90bb\u7684\u70b9\u8f6c\u5316\u4e3a\u4e00\u6bb5\u533a\u95f4\u4ee5\u53cafa_P\uff0c\u7136\u540e\u5199\u4e00\u4e2a\u652f\u6301\u5355\u70b9\u52a0\uff0c\u533a\u95f4\u6700\u5927\u503c\u7684\u7ebf\u6bb5\u6811\u5373\u53ef\u3002\u5177\u4f53\u89c1\u4ee3\u7801\u5427\u3002\n```cpp\n#include<queue>\n#include<vector>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n\nint n,cnt=-1,temp,qcnt=0;\nint deg[500000],l1[500000],l2[500000];\nint fir[500000],to[1000000],nxt[1000000];\nint fa[500000],ans[500000],f[500000];\nint id[500000],mx[2000000],o[500000];\nvector<int> len[500000];\nstruct query{\n\tint x,val,o;\n}qu[1000000];\ninline bool comp(query q1,query q2)\n{\n\treturn q1.val>q2.val;\n}\ninline void Add(int a,int b,int c)\n{\n\tqu[qcnt].x=a;\n\tqu[qcnt].val=c;\n\tqu[qcnt++].o=b;\n\treturn;\n}\ninline void add(int a,int b)\n{\n\tto[++cnt]=b;\n\tnxt[cnt]=fir[a];\n\tfir[a]=cnt;\n\tdeg[b]++;\n\treturn;\n}\n\nvoid dfs1(int i,int f)\n{\n\tfa[i]=f;\n\tfor(int j=fir[i];j!=-1;j=nxt[j]){\n\t\tif(to[j]==f)\n\t\t\tcontinue;\n\t\tdfs1(to[j],i);\n\t\tl1[i]=max(l1[i],l1[to[j]]);\n\t}\n\tl1[i]++;\n\treturn;\n}\nvoid dfs2(int i,int l)\n{\n\tl2[i]=l;\n\tint mx1=0,mx2=0;\n\tfor(int j=fir[i];j!=-1;j=nxt[j]){\n\t\ttemp=to[j];\n\t\tif(temp==fa[i])\n\t\t\tcontinue;\n\t\tif(mx1<l1[temp]){\n\t\t\tmx2=mx1; mx1=l1[temp];\n\t\t}\n\t\telse if(mx2<l1[temp])\n\t\t\tmx2=l1[temp];\n\t}\n\tfor(int j=fir[i];j!=-1;j=nxt[j]){\n\t\ttemp=to[j];\n\t\tif(temp==fa[i])\n\t\t\tcontinue;\n\t\tif(mx1==l1[temp])\n\t\t\tdfs2(temp,max(mx2,l2[i])+1);\n\t\telse dfs2(temp,max(mx1,l2[i])+1);\n\t}\n\treturn;\n}\n\nint t1,t2;\nvoid upd(int i,int l,int r)\n{\n\tif(l==r){\n\t\tmx[i]++;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tif(t1<=mid) upd(i<<1,l,mid);\n\telse upd(i<<1|1,mid+1,r);\n\tmx[i]=max(mx[i<<1],mx[i<<1|1]);\n\treturn;\n}\ninline void update(int x)\n{\n\tt1=x; upd(1,0,n-1); f[x]++;\n\treturn;\n}\nint qry(int i,int l,int r)\n{\n\tif(t1<=l&&r<=t2)\n\t\treturn mx[i];\n\tint mid=(l+r)>>1,res=0;\n\tif(t1<=mid) res=qry(i<<1,l,mid);\n\tif(mid<t2) res=max(res,qry(i<<1|1,mid+1,r));\n\treturn res;\n}\ninline int querymax(int x,int y)\n{\n\tt1=x; t2=y;\n\treturn qry(1,0,n-1);\n}\n\nvoid bfs(void)\n{\n\tcnt=0;\n\tid[0]=cnt++;\n\tqueue<int> q;\n\tq.push(0);\n\twhile(q.size()>0){\n\t\tint i=q.front();\n\t\tq.pop();\n\t\to[i]=cnt-1;\n\t\tfor(int j=fir[i];j!=-1;j=nxt[j])\n\t\t\tif(to[j]!=fa[i]){\n\t\t\t\tid[to[j]]=cnt++;\n\t\t\t\tq.push(to[j]);\n\t\t\t}\n\t}\n\treturn;\n}\nvoid solve(void)\n{\n\tfor(int i=2;i<n;i++)\n\t\tans[i]=1;\n\tfor(int i=0;i<n;i++){\n\t\tint s=deg[i];\n\t\tfor(int d=1;d<=s;d++){\n\t\t\ttemp=len[i][s-d]*2;\n\t\t\tif(temp<n) ans[temp]=max(ans[temp],d);\n\t\t\tif(temp<=n) ans[temp-1]=max(ans[temp-1],d);\n\t\t\tif(temp+1<n&&d>1&&len[i][s-d+1]>len[i][s-d])\n\t\t\t\tans[temp+1]=max(ans[temp+1],d);\n\t\t}\n\t}\n\t\n\tfor(int i=0;i<n;i++)\n\t\tfor(int d=1;d<=deg[i];d++)\n\t\t\tAdd(i,d,len[i][deg[i]-d]);\n\tsort(qu,qu+qcnt,comp);\n\tint pos=0;\n\tfor(int i=0;i<qcnt;i++){\n\t\twhile(pos<qcnt&&qu[pos].val>=qu[i].val)\n\t\t\tupdate(id[qu[pos++].x]);\n\t\tint X=qu[i].x,D=2*qu[i].val;\n\t\ttemp=querymax(o[X]+1,o[X]+deg[X]-1);\n\t\tif(X!=0) temp=max(temp,f[id[fa[X]]]);\n\t\tans[D]=max(ans[D],temp+qu[i].o-2);\n\t}\n\treturn;\n}\n\nint main(void)\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<n;i++)\n\t\tfir[i]=-1;\n\tint a,b;\n\tfor(int i=1;i<n;i++){\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tadd(a-1,b-1); add(b-1,a-1);\n\t}\n\tdfs1(0,-1); dfs2(0,0); bfs();\n\tfor(int i=1;i<n;i++){\n\t\tlen[fa[i]].push_back(l1[i]);\n\t\tlen[i].push_back(l2[i]);\n\t}\n\tfor(int i=0;i<n;i++){\n\t\tsort(len[i].begin(),len[i].end());\n\t\tans[1]=max(ans[1],deg[i]+1);\n\t}\n\tsolve();\n\tfor(int i=n-3;i>0;i--)\n\t\tans[i]=max(ans[i],ans[i+2]);\n\tfor(int i=1;i<n;i++)\n\t\tprintf(\"%d \",ans[i]);\n\tprintf(\"1\\n\");\n\treturn 0;\n}\n```",
        "postTime": 1592053569,
        "uid": 60202,
        "name": "csyakuoi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1266F \u3010Almost Same Distance\u3011"
    },
    {
        "content": "\\*2900\n\n\u8fd9\u9053\u9898\u5728\u7b2c\u4e00\u6b65\u4e0a\u4f1a\u5206\u51fa\u4e24\u79cd\u89e3\u6cd5\uff1a\u4f60\u770b\u6ca1\u770b\u51fa $ans_x\\ge ans_{x+2}$\u3002\n\n- \u5982\u679c\u4f60\u770b\u51fa\u6765\u4e86\uff0c~~\u800c\u4e14\u4f60\u548c zky \u4e00\u6837\u5f3a~~\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u5bf9\u6240\u6709\u53ef\u80fd\u8ddd\u79bb\u4e3a $d$ \u7684\u96c6\u5408\u8fdb\u884c\u8003\u8651\u3002\n\n  \u7531\u4e8e $\\ge d+2$ \u7684\u53ef\u4ee5\u76f4\u63a5\u7ee7\u627f\uff0c\u53ea\u7528\u8003\u8651\u8ddd\u79bb\u6070\u4e3a $d$ \u7684\uff0c\u4ece\u800c\u5f97\u5230\u6b63\u786e\u7684\u590d\u6742\u5ea6\u3002\n- \u5982\u679c\u4f60\u6ca1\u6709\u770b\u51fa\u6765\uff0c\u4f60\u9700\u8981\u5bf9\u6bcf\u79cd $S_{x,y}$ \u96c6\u5408\u5bf9\u8ddd\u79bb $x/y$ \u7684\u8d21\u732e\u8fdb\u884c\u8003\u8651\uff0c\u8fd9\u91cc $S_{x,y}$ \u8868\u793a\u70b9\u5bf9\u8ddd\u79bb\u542b $x,y$ \u7684\u96c6\u5408\u3002\n\n\u7b2c\u4e00\u79cd\u89e3\u6cd5\u5de6\u8f6c\u9694\u58c1\u770b zky \u7684\uff0c\u4ee3\u7801\u5199\u5f97\u5f88\u597d\uff0c\u6211\u662f\u6765\u8bb2\u7b2c\u4e8c\u79cd\u5e73\u6c11\u89e3\u6cd5\u7684\uff1a\n\n------------\n\n\u5982\u679c $S_{x,y}$ \u4e2d\u8ddd\u79bb $x,y$ \u90fd\u5b58\u5728\uff0c\u7531\u4e8e $|x-y|=1$\uff0c\u5176\u4e2d\u5fc5\u5b9a\u5b58\u5728\u5947\u6570\u3002\n\n\u5148\u7279\u6b8a\u8003\u8651\u53ea\u6709\u5076\u6570\u7684\u60c5\u51b5\uff0c\u96c6\u5408\u5f62\u5982 $S_{2d}$\u3002\n\n\u4ece\u96c6\u5408\u4e2d\u53d6\u51fa\u4e24\u4e2a\u70b9 $a,b$\uff0c\u4ee4\u5b83\u4eec\u7684\u8def\u5f84\u4e2d\u70b9\u4e3a $c$\uff0c\u90a3\u4e48\u5bf9\u4e8e\u8fd9\u4e2a\u96c6\u5408\u7684\u5176\u4ed6\u6240\u6709\u70b9\u90fd\u5f97\u662f\u4ece $c$ \u63a5\u4e0a\u53bb\u7684\uff0c\u5426\u5219\u5230 $a,b$ \u7684\u8ddd\u79bb\u4e0d\u53ef\u80fd\u90fd\u7b49\u4e8e $2d$\u3002\n\n\u90a3\u4e48\u6211\u4eec\u679a\u4e3e\u4e2d\u70b9 $c$\uff0c\u8d2a\u5fc3\u7684\u4f7f\u6bcf\u4e2a\u5b50\u6811\u5bf9\u96c6\u5408\u8d21\u732e\u5c3d\u53ef\u80fd\u591a\uff0c\u8bbe\u5bf9 $ans_{2d},ans_{2d-1}$ \u7684\u8d21\u732e\u4e3a $T_d$\uff0c\u5219 $T_d=\\sum_{p\\in son_c}[mxd_p\\ge d]$\uff0c\u5176\u4e2d $mxd_p$ \u4e3a\u4ece $p$ \u5ef6\u4f38\u5230\u5b50\u6811\u5185\u7684\u6700\u957f\u5355\u94fe\u7684\u957f\u5ea6\u3002\n\n\u8003\u8651\u542b\u5947\u6570\u957f\u5ea6\u7684\u96c6\u5408 $S_{2d+1,?}$\uff0c\u8fd8\u662f\u53d6\u4e24\u4e2a\u70b9 $x,y$\uff0c\u5219\u4e2d\u70b9\u4e3a\u4e00\u6761\u8fb9 $e_{u,v}$\u3002\n\n\u9996\u5148\u96c6\u5408\u5185\u7684\u5176\u4ed6\u70b9\u5fc5\u987b\u4ece $u,v$ \u63a5\u5230\u8def\u5f84\u4e0a\uff0c\u5206\u4e24\u79cd\u60c5\u51b5\u8003\u8651\uff1a\n\n- \u53ea\u4ece $u,v$ \u4e2d\u7684\u4e00\u7aef\u63a5\u5165\uff0c\u63a5\u5165\u7684\u957f\u5ea6 $k\\in\\{d,d+1\\}$ **\u4e14\u5747\u76f8\u7b49**\uff0c\u82e5\u63a5\u5165\u957f\u5ea6\u4e3a $d$ \u5219\u5bf9 $ans_{2d}$ \u4ea7\u751f\u8d21\u732e\uff0c\u82e5\u63a5\u5165\u957f\u5ea6\u4e3a $d+1$ \u5219\u5bf9 $ans_{2d+1}$ \u4ea7\u751f\u8d21\u732e\u3002\n\n  \u6211\u4eec\u679a\u4e3e\u63a5\u5165\u7684\u90a3\u4e00\u7aef\uff0c\u8d21\u732e\u4e0d\u597d\u5f62\u5f0f\u5316\u7684\u5199\u51fa\u6765\uff1a\n  \n  - \u4e00\u4e2a $mxd_p\\ge d$\uff0c\u5176\u4ed6\u7684\u6709 $\\sum[mxd_q\\ge d+1]$ \u4e2a\uff0c\u5219\u5bf9 $ans_{2d}$ \u4ea7\u751f $1+\\sum[mxd_q\\ge d+1]$ \u7684\u8d21\u732e\u3002\n  - \u4e00\u4e2a $mxd_p\\ge d+1$\uff0c\u5176\u4ed6\u7684\u6709 $\\sum[mxd_q\\ge d]$ \u4e2a\uff0c\u5219\u5bf9 $ans_{2d+1}$ \u4ea7\u751f $1+\\sum[mxd_q\\ge d]$ \u7684\u8d21\u732e\u3002\n- \u4ece $u,v$ \u4e24\u7aef\u90fd\u63a5\u5165\uff0c\u90a3\u4e48\u63a5\u5165\u957f\u5ea6\u53ea\u80fd\u4e3a $d$\uff0c\u5bf9 $ans_{2d}$ \u4ea7\u751f\u8d21\u732e\u3002\n\n  \u4e0d\u80fd\u679a\u4e3e\u8fb9\u518d\u679a\u4e3e\u513f\u5b50\uff0c\u83ca\u82b1\u56fe\u5c31\u5361\u6210 $n^2$ \u4e86\uff0c\u5e94\u8be5\u679a\u4e3e\u513f\u5b50\u63a5\u5165\u957f\u5ea6\u4e3a $d$\uff0c\u7136\u540e\u7ed9\u7236\u4eb2\u7684 $d$\uff08\u5bf9\u5e94\u4f4d\u7f6e\uff09\u53d6 $\\max$\uff0c\u518d\u5728\u7236\u4eb2\u5904\u8003\u8651\u8d21\u732e\u3002\n  \n\u4e0d\u96be\u53d1\u73b0\uff0c\u53ea\u8981\u4f7f\u5f97\u6bcf\u4e2a\u70b9 $x$ \u513f\u5b50\u7684 $mxd$ \u6392\u597d\u5e8f\uff0c\u76f8\u90bb\u4e24\u9879 $mxd$ \u533a\u95f4\u7684\u8d21\u732e\u76f8\u540c\uff0c\u628a\u533a\u95f4\u63d0\u51fa\u6765\u79bb\u7ebf\u5355\u8c03\u6808\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u74f6\u9888\u5728\u6392\u5e8f\uff0c\u7531\u4e8e\u5bf9\u6bcf\u4e2a\u70b9\u7684\u513f\u5b50\u6700\u957f\u5355\u94fe\u90fd\u8981\u6392\u5e8f\uff0c\u4e0d\u80fd\u8fdb\u884c\u6876\u6392\uff0c\u6839\u636e\u5b9e\u73b0\u590d\u6742\u5ea6\u4e3a $O(n\\log_2n)$ \u6216 $O(\\min{(n\\log_wn,n\\log_2w)})$\u3002\n\n~~\u4e0d\u8981\u95ee\u6211\u540e\u9762\u90a3\u4e2a\u4e22\u4eba\u7684\u590d\u6742\u5ea6\u662f\u600e\u4e48\u6765\u7684\u3002~~",
        "postTime": 1649075068,
        "uid": 158948,
        "name": "\u7ea6\u745f\u592b\u7528\u8111\u73a9",
        "ccfLevel": 0,
        "title": "CF1266F Almost Same Distance"
    }
]