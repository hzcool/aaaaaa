[
    {
        "content": "\u633a\u6c34\u7684\u8c8c\u4f3c\u8fd9\u9898\u2026\u2026\u4f46\u6211\u8fd8\u662fWA\u4e86\u4e00\u6b21\u2026\u2026\u611f\u89c9\u81ea\u5df1\u5febAFO\u4e86\u3002\n\n[$\\color{black}\\text{\u539f\u9898\u94fe\u63a5}$](https://www.luogu.com.cn/problem/CF613D)\n\n\u9996\u5148\u8fd9\u9053\u9898\u80af\u5b9a\u662f\u6811\u5f62DP\uff0c\u5148\u7279\u5224\u4e00\u4e0b\u4e0d\u884c\u7684\u60c5\u51b5\uff1a\u5982\u679c\u7236\u5b50\u4e24\u4f4d\u90fd\u5173\u952e\u4e86\u76f4\u63a5\u8f93-1\u3002\n\n\u7136\u540e\u6211\u4eec\u8bbeg[x]\u4e3a**\u4ee5x\u4e3a\u6839\u7684\u5b50\u6811**\u4e2d\u6709\u6ca1\u6709\u5173\u952e\u70b9\u4e0ex\u8054\u901a(**\u5982\u679cx\u4e3a\u5173\u952e\u70b9\u5219g[x]\u4e3atrue**\uff09\uff0cf[x]\u4e3a\u4ee5x\u4e3a\u6839\u7684\u5b50\u6811\u7684\u7b54\u6848\uff0c\u90a3\u4e48\u8bbev\u4e3ax\u7684\u513f\u5b50\u8282\u70b9\uff0c\u9996\u5148f[x]=\u2211f[v]\uff08~~\u5f88\u62b1\u6b49\u6211\u4e0d\u4f1a\u7528Latex~~\uff09\uff0c\u7136\u540e\u5224\u65adx\uff1a\n\n\u2460\u5982\u679cx\u4e3a\u5173\u952e\u70b9\uff0c\u90a3\u4e48f[x]+=\u2211g[v]\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5c06\u5b83\u548c\u6bcf\u4e2a\u6ca1\u65ad\u7684\u5173\u952e\u70b9\u5b50\u5b59\u5168\u90e8\u65ad\u6389\uff1b\n\n\u2461\u5982\u679cx\u4e0d\u662f\u5173\u952e\u70b9\uff0c\u90a3\u4e48\u5206\u4e24\u79cd\u60c5\u51b5\uff1a\u5982\u679c\u5b83\u6709\u591a\u4e2a\u5173\u952e\u70b9\u5b50\u5b59\u90fd\u6ca1\u65ad\uff0c\u90a3\u5c31\u628a\u5b83\u81ea\u5df1\u5207\u6389\u5373\u53ef\uff0cf[x]++\uff1b\u5426\u5219\uff0c\u5982\u679c\u5c31\u4e00\u4e2a\u5173\u952e\u70b9\u6ca1\u65ad\u5c31\u7559\u5230\u5b83\u7684\u7956\u5b97\u90a3\u53bb\uff08\u4e5f\u8bb8\u5230\u65f6\u5019\u80fd\u548c\u522b\u7684\u4e00\u8d77\u65ad\u6389\uff09\uff0cg[x]=true\uff0c\u5982\u679c\u4e00\u4e2a\u90fd\u6ca1\uff0cg[x]=false\u3002\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\uff1a\u8fd9\u7b54\u6848\u53ea\u4f1a\u5728\u4e24\u4e2a\u5730\u65b9\u6539\u53d8\uff1a\u4e00\u79cd\u662f\u5728\u5173\u952e\u70b9\u5904\uff0c\u53e6\u4e00\u79cd\u662f\u5728\u51e0\u4e2a\u5173\u952e\u70b9\u7684LCA\u5904\uff0c\u800c\u8ddf\u5176\u4ed6\u7684\u70b9\u4e00\u6bdb\u94b1\u5173\u7cfb\u90fd\u6ca1\u6709\u554a\u3002\u518d\u4e00\u770b\u6570\u636e\u8303\u56f4\u548c\u2211k\u6709\u5173\uff0c\u90a3\u5c31\u7528\u865a\u6811\u641e\u4e00\u641e\uff0c\u7136\u540e\u8f7b\u677e\u8fc7\u6389~\n\n\u9898\u89e3\u533a\u6709\u95ee\u795e\u4eba\u8bf4\u8fd9\u9898\u96be\u70b9\u5c31\u5728\u5f04\u865a\u6811\uff0c\u4f46\u672c\u4eba\u771f\u89c9\u5f97\u8fd9\u9898\u5957\u4e0a\u865a\u6811\u5f88\u8f7b\u677e\u2026\u2026\u4e00\u8138\u5c34\u5c2c\u2026\u2026\n\nWA\u662f\u56e0\u4e3a\u521d\u59cb\u5316\u7684\u4e00\u70b9\u95ee\u9898\uff0c\u4e00\u4e2a\u662f\u90a3\u4e2a\u7279\u5224\u53d1\u73b0\u662f-1\u65f6\u6ca1\u6709\u5c06vis\u6570\u7ec4\u6e05\u7a7a\uff0c\u8fd8\u6709\u4e00\u4e2a\u662f\u6ca1\u8003\u8651\u2211g[v]\u4e3a0\u7684\u60c5\u51b5(\u5176\u5b9e\u5c31\u662fx\u4e3a\u53f6\u5b50\u7684\u65f6\u5019)\u3002\n\n\u7136\u540e\u5c31\u6ca1\u5565\u597d\u8bf4\u7684\u4e86\uff0c\u987a\u5e26\u4e00\u63d0\uff0c\u672c\u4eba\u662f\u7528\u6811\u5256\u6c42LCA\u7684\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u7528\u500d\u589e\u5e94\u8be5\u4ee3\u7801\u66f4\u77ed\uff0c\u53ef\u80fd\u5c31\u516d\u4e03\u5341\u884c\u3002\u8fd8\u6709\u5c31\u662f\uff0c\u6211\u4e3a\u4e86\u7701\u7a7a\u95f4(\u5176\u5b9e\u5b8c\u5168\u6ca1\u5fc5\u8981)\u5c06f\u6570\u7ec4\u6362\u6210\u4e86\u4e34\u65f6\u53d8\u91cfres\uff0c\u4e0d\u8981\u8bef\u89e3\u3002\n\n\u6700\u540e\u9644\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#pragma GCC optimize(3)\nusing namespace std;\nconst int N=1e6+9,M=2*N;\nint n,m,pn,to[M],nt[M],hd[N];\nint sz[N],id[N],son[N],fa[N];\nint dp[N],q[N],st[N],h,tp[N];\nint vn,vhd[N],vto[M],vnt[M],top;\nbool vs[N],flg=true,g[N];\nbool cmp(int x,int y){\n\treturn id[x]<id[y];\n}\nvoid adve(int u,int v){\n\tvn++,vnt[vn]=vhd[u],\n\tvhd[u]=vn,vto[vn]=v;\n}\t\nint rd(){\n\tchar c=getchar();int x=0;\n\twhile(c>57||c<48)c=getchar();\n\twhile(c>47&&c<58)\n\t\tx+=(x<<3)+x+c-48,c=getchar();\n\treturn x;\n}\nvoid make(int x,int dep){\n\tdp[x]=dep,sz[x]=1;\n\tfor(int i=hd[x],v;i;i=nt[i]){\n\t\tif(to[i]==fa[x])continue;\n\t\tfa[v=to[i]]=x;\n\t\tmake(v,dep+1),sz[x]+=sz[v];\n\t\tif(sz[v]>sz[son[x]])son[x]=v;\n\t}\n}\nvoid hvd(int x){\n\tid[x]=++h;\n\tif(!tp[x])tp[x]=tp[fa[x]];\n\tif(!son[x])return;\n\thvd(son[x]);\n\tfor(int i=hd[x],v;i;i=nt[i]){\n\t\tif(id[v=to[i]])continue;\n\t\ttp[v]=v,hvd(v);\n\t}\t\t\n}\nint lca(int x,int y){\n\twhile(tp[x]!=tp[y])\n\t\tif(dp[tp[x]]>dp[tp[y]])\n\t\t\tx=fa[tp[x]];\n\t\telse y=fa[tp[y]];\n\treturn dp[x]<dp[y]?x:y;\n}\nint dfs(int x){\n\tint nm=0,res=0;\n\tfor(int i=vhd[x];i;i=vnt[i])\n\t\tres+=dfs(vto[i]),nm+=g[vto[i]];\n\tif(vs[x])res+=nm,g[x]=true;\n\telse if(nm>1)++res,g[x]=false;\n\telse g[x]=nm?true:false;\n\tvhd[x]=0,vs[x]=false;\n\treturn res;\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1,u,v;i<n;++i)\n\t\tu=rd(),v=rd(),nt[++pn]=hd[u],\n\t\thd[u]=pn,to[pn]=v,to[++pn]=u,\n\t\tnt[pn]=hd[v],hd[v]=pn;\n\ttp[1]=1,make(1,1),hvd(1),m=rd();\n\tfor(int k;m--&&(k=rd());flg=1){\n\t\tfor(int i=1;i<=k;++i)\n\t\t\tq[i]=rd(),vs[q[i]]=1;\n\t\tfor(int i=1;i<=k;++i)\n\t\t\tif(vs[fa[q[i]]])flg=0;\n\t\tif(!flg){\n\t\t\tfor(int i=1;i<=k;++i)vs[q[i]]=0;\n\t\t\tputs(\"-1\");continue;\n\t\t}\n\t\tsort(q+1,q+k+1,cmp),st[top=1]=q[1];\n\t\tfor(int i=2,z;i<=k;++i){\n\t\t\tz=lca(st[top],q[i]);\n\t\t\twhile(dp[z]<dp[st[top-1]])\n\t\t\t\tadve(st[top-1],st[top]),top--;\n\t\t\tif(z!=st[top]){\n\t\t\t\tadve(z,st[top]);\n\t\t\t\tif(st[top-1]==z)top--;\n\t\t\t\telse st[top]=z;\n\t\t\t}\n\t\t\tst[++top]=q[i];\n\t\t}\n\t\twhile(--top)adve(st[top],st[top+1]);\n\t\tprintf(\"%d\\n\",dfs(st[1])),vn=0;\t\n\t}\t\n\treturn 0;\n}\n```\n_\u4ea6\u60b2\u4ea6\u559c\uff0c\u624d\u660e\u767d\u5bbf\u547d\u7684\u610f\u4e49_",
        "postTime": 1581864718,
        "uid": 109401,
        "name": "\u5b81_\u7f3a",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF613D \u3010Kingdom and its Cities\u3011"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\u6709\u4e00\u9897 $n$ \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u4e00\u4e9b\u8282\u70b9\u8bbe\u4e3a\u4e86\u91cd\u8981\u8282\u70b9\u3002\n\u91cd\u8981\u8282\u70b9\u662f\u4e0d\u4f1a\u88ab\u9009\u4e2d\u7684\u3002\u91cd\u8981\u8282\u70b9\u4e4b\u5916\u7684\u8282\u70b9\u5c31\u662f\u975e\u91cd\u8981\u8282\u70b9\uff0c\u9009\u5230\u8fd9\u4e9b\u8282\u70b9\u4e4b\u540e\uff0c\u4e0e\u4e4b\u76f8\u8fde\u7684\u8fb9\u5c31\u4f1a\u65ad\u6389\uff0c\u6c42\u80fd\u5426\u9009\u62e9\u4e00\u4e9b\u8282\u70b9\u8ba9\u91cd\u8981\u8282\u70b9\u4e24\u4e24\u4e0d\u8fde\u901a\u3002\n\n\u91cd\u8981\u8282\u70b9\u4f1a\u9009\u62e9 $m$ \u6b21\uff0c\u6bcf\u6b21\u9009\u62e9 $k$ \u4e2a\u8282\u70b9\u3002\n\n\n## \u9898\u89e3\n[\u5728\u535a\u5ba2\u56ed\u83b7\u5f97\u66f4\u52a0\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/orzpls/p/15170015.html)\n\n\u9996\u5148\u8003\u8651\u4e0d\u884c\u7684\u60c5\u51b5\uff0c\u5982\u679c\u6709\u4e24\u4e2a\u91cd\u8981\u8282\u70b9\u4e4b\u95f4\u662f\u76f4\u63a5\u8fde\u8fb9\u7684\uff0c\u90a3\u4e48\u5c31\u662f\u4e0d\u884c\u7684\uff0c\u5426\u5219\u90fd\u662f\u884c\u7684\u3002\n\n\u8003\u8651\u600e\u4e48\u8f6c\u79fb\u505a\u8fd9\u4e2a\u4e1c\u897f\uff0c\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b\u3002\n\n\u5f53 $u$ \u4e3a\u5173\u952e\u8282\u70b9\u7684\u65f6\u5019\uff0c\u5c06\u6bcf\u4e2a\u6ca1\u6709\u65ad\u5f00\u7684\u5b50\u5b59\u5168\u90e8\u65ad\u5f00\u5c31\u662f\u4e86\u3002\n\n\u5f53 $u$ \u4e0d\u4e3a\u5173\u952e\u8282\u70b9\u65f6\uff0c\u5982\u679c\u4ed6\u6709\u591a\u4e2a\u5173\u952e\u8282\u70b9\u90fd\u6ca1\u6709\u65ad\u5f00\uff0c\u90a3\u4e48\u5c31\u5c06\u4ed6\u81ea\u5df1\u65ad\u5f00\u5c31\u662f\u4e86\u3002\n\n\u5426\u5219\u7684\u8bdd\uff0c\u6211\u4eec\u5c06\u4ed6\u4f20\u5230\u7236\u8282\u70b9\u53bb\uff0c\u8ba9\u4ed6\u4e0e\u5176\u4ed6\u8282\u70b9\u4e00\u8d77\u65ad\u5f00\u5c31\u662f\u4e86\u3002\n\n\u8fd9\u4e48\u505a\u7684\u8bdd\u6bcf\u6b21\u90fd\u8981\u904d\u5386\u4e00\u904d\u5168\u6811\uff0c\u8fd9\u8ba9\u6211\u4eec\u7684\u590d\u6742\u5ea6\u53d8\u5f97\u4e0d\u53ef\u63a5\u53d7\uff0c\u4e3a $O(nm)$ \u3002\n\n\u8003\u8651\u5230\u5176\u5b9e\u5bf9\u4e8e\u9009\u62e9\u7684\u70b9\u4e0d\u540c\u6709\u4e9b\u70b9\u662f\u53ef\u4ee5\u4e0d\u7528\u9009\u4e0a\u7684\uff0c\u6211\u4eec\u662f\u5426\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u70b9\u7ed9\u5220\u53bb\uff1f\n\n\u5f53\u7136\u53ef\u4ee5\u3002\n\n\u6211\u4eec\u8003\u8651\u54ea\u4e9b\u8282\u70b9\u662f\u65e0\u6240\u8c13\u7684\uff0c\u53d1\u73b0\u6bcf\u6b21\u5176\u5b9e\u53ea\u4f1a\u66f4\u4f60\u91cd\u8981\u8282\u70b9\u7684 $\\text{LCA}$ \u6709\u5173\uff0c\u90a3\u4e48\u4f60\u5c31\u53ea\u9700\u8981\u4fdd\u7559\u7684\u662f\u8fd9\u4e9b\u8282\u70b9\u4ee5\u53ca\u5b83\u4eec\u7684 $\\text{LCA}$ \u5c31\u884c\u4e86\u3002\n\n\u8fd9\u4e48\u5220\u53bb\u65e0\u5173\u8282\u70b9\u4e4b\u540e\u5f62\u6210\u7684\u6811\u5c31\u662f\u865a\u6811\u3002\n\n\u865a\u6811\u5efa\u7acb\u51fa\u6765\u4e4b\u540e\u5c31\u4f1a\u8ba9\u4f60\u7684\u590d\u6742\u5ea6\u53d8\u5c0f\u8fd9\u662f\u663e\u800c\u6613\u89c1\u7684\u3002\n\n\n\u7136\u540e\u6211\u7684\u865a\u6811\u7684\u5efa\u7acb\u53ef\u80fd\u6bd4\u8f83\u4e0d\u4e00\u6837\uff0c\u8fd9\u662f\u4ece\u795e\u4ed9  $\\textcolor{black}{\\text{p}}\\textcolor{red}{\\text{\\_b\\_p\\_b}}$ \n\u5728\u65e5\u62a5\u91cc\u7684\u56de\u7b54\u5b66\u5230\u7684\u3002\n\n>\u628a\u70b9\u6309dfn\u6392\u5e8f\uff0c\u76f8\u90bb\u70b9\u7684lca\u4e22\u8fdb\u53bb\uff0c\u518d\u6392\u5e8f\uff0c\u6bcf\u4e2a\u70b9\u5728\u865a\u6811\u4e0a\u7684\u7236\u4eb2\u5c31\u662f\u81ea\u5df1\u548c\u524d\u9a71\u7684lca\u3002  \n\n\u5f88\u5999\uff0c\u8fd9\u4e2a\u4e1c\u897f\u7684\u8bc1\u660e\u5c31\u4e0d\u8bc1\u660e\u4e86\u5427\uff0c\u8054\u5408 $dfn$ \u5e8f\u60f3\u4e00\u4e0b\u5c31\u77e5\u9053\u8fd9\u662f\u6b63\u786e\u7684\u3002\n\n\u7136\u540e\u8fd9\u4e2a\u4e1c\u897f\u8fd8\u5f88\u597d\u5199\uff0c\u8fd9\u6837\u505a\u4f60\u5c31\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u76ee\u4e86\u3002\n```cpp\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\nnamespace IO {\nint len = 0;\nchar ibuf[(1 << 20) + 1], *iS, *iT, out[(1 << 25) + 1];\n#define gh()                                                                   \\\n  (iS == iT ? iT = (iS = ibuf) + fread(ibuf, 1, (1 << 20) + 1, stdin),         \\\n   (iS == iT ? EOF : *iS++) : *iS++)\ninline int read() {\n  char ch = gh();\n  int x = 0;\n  char t = 0;\n  while (ch < '0' || ch > '9')\n    t |= ch == '-', ch = gh();\n  while (ch >= '0' && ch <= '9')\n    x = x * 10 + (ch ^ 48), ch = gh();\n  return t ? -x : x;\n}\ninline void putc(char ch) { out[len++] = ch; }\ntemplate <class T> inline void write(T x) {\n  if (x < 0)\n    putc('-'), x = -x;\n  if (x > 9)\n    write(x / 10);\n  out[len++] = x % 10 + 48;\n}\nstring getstr(void) {\n  string s = \"\";\n  char c = gh();\n  while (c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == EOF)\n    c = gh();\n  while (!(c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == EOF))\n    s.push_back(c), c = gh();\n  return s;\n}\nvoid putstr(string str, int begin = 0, int end = -1) {\n  if (end == -1)\n    end = str.size();\n  for (int i = begin; i < end; i++)\n    putc(str[i]);\n  return;\n}\ninline void flush() {\n  fwrite(out, 1, len, stdout);\n  len = 0;\n}\n} // namespace IO\nusing IO::flush;\nusing IO::getstr;\nusing IO::putc;\nusing IO::putstr;\nusing IO::read;\nusing IO::write;\nconst int N = 5e5;\nint n, m, num, cnt, q, siz[N], dep[N], dfn[N], id[N], ask[N], f[N];\nint top[N], son[N], mark[N], tp;\nvector<int> ver[N];\nint cmp(int a, int b) { return dfn[a] < dfn[b]; }\nvoid dfs1(int x, int fa) {\n  dfn[x] = ++cnt;\n  id[cnt] = x;\n  siz[x] = 1;\n  dep[x] = dep[fa] + 1;\n  for (int i = 0; i < ver[x].size(); i++) {\n    int to = ver[x][i];\n    if (to == fa)\n      continue;\n    f[to] = x;\n    dfs1(to, x);\n    siz[x] += siz[to];\n    if (siz[to] > siz[son[x]])\n      son[x] = to;\n  }\n}\nvoid dfs2(int now, int x) {\n  top[now] = x;\n  if (son[now])\n    dfs2(son[now], x);\n  for (int i = 0; i < ver[now].size(); i++) {\n    int to = ver[now][i];\n    if (to == f[now] || to == son[now])\n      continue;\n    dfs2(to, to);\n  }\n}\nint LCA(int x, int y) {\n  while (top[x] != top[y]) {\n    if (dep[top[x]] >= dep[top[y]])\n      x = f[top[x]];\n    else\n      y = f[top[y]];\n  }\n  return dep[x] < dep[y] ? x : y;\n}\nint dp[N], dp2[N];\nvector<int> p[N];\nint getans(int x) {\n  int ret = 0;\n  for (int i = 0; i < p[x].size(); i++)\n    ret += getans(p[x][i]);\n  if (mark[x]) {\n    for (int i = 0; i < p[x].size(); i++)\n      if (mark[p[x][i]])\n        ret++;\n  } else {\n    int bel = 0;\n    for (int i = 0; i < p[x].size(); i++)\n      if (mark[p[x][i]])\n        bel++;\n    if (bel > 1)\n      ret++;\n    else if (bel == 1)\n      mark[x] = 1;\n  }\n  return ret;\n}\nsigned main() {\n  n = read();\n  for (int i = 1; i < n; i++) {\n    int u = read(), v = read();\n    ver[u].push_back(v);\n    ver[v].push_back(u);\n  }\n  dfs1(1, 0);\n  dfs2(1, 1);\n  q = read();\n  while (q--) {\n    m = read();\n    for (int i = 1; i <= m; i++)\n      ask[i] = read(), mark[ask[i]] = 1;\n    int fl = 0;\n    for (int i = 1; i <= m; i++)\n      if (mark[f[ask[i]]]) {\n        fl = 1;\n        break;\n      }\n    if (fl) {\n      for (int i = 1; i <= m; i++)\n        mark[ask[i]] = 0;\n      write(-1);\n      putc('\\n');\n      continue;\n    }\n    num = m;\n    sort(ask + 1, ask + num + 1, cmp);\n    for (int i = 2; i <= m; i++) {\n      int lca = LCA(ask[i], ask[i - 1]);\n      if (lca != ask[i] && lca != ask[i - 1])\n        ask[++num] = lca;\n    }\n    sort(ask + 1, ask + num + 1);\n    tp = num;\n    num = unique(ask + 1, ask + num + 1) - (ask + 1);\n    sort(ask + 1, ask + num + 1, cmp);\n    for (int i = 2; i <= num; i++) {\n      int lca = LCA(ask[i], ask[i - 1]);\n      p[lca].push_back(ask[i]);\n    }\n    write(getans(ask[1]));\n    putc('\\n');\n    for (int i = 1; i <= num; i++)\n      mark[ask[i]] = 0;\n    for (int i = 1; i <= num; i++)\n      p[ask[i]].clear();\n  }\n  flush();\n  return 0;\n}\n\n```\n",
        "postTime": 1629539486,
        "uid": 206021,
        "name": "Pitiless0514",
        "ccfLevel": 7,
        "title": "CF613D"
    },
    {
        "content": "[\u5b89\u5229$blog$](https://ctz45562.github.io/2019/08/04/\u6d1b\u8c37-CF613D-Kingdom-and-its-Cities)\n\n[\u4f20\u9001\u95e8](https://www.luogu.org/problem/CF613D)\n\n\u4e00\u4e2a\u601d\u8def\u6e05\u5947\u4ee3\u7801\u590d\u6742\u5e38\u6570\u5927\u770b\u8d77\u6765\u5f88\u5047\u7684$DP$\u505a\u6cd5\u3002\n\n\u5efa\u51fa\u865a\u6811\uff0c\u8bbe$f(i,0)$\u4e3a\u4f7f\u70b9$i$\u7684\u5b50\u6811\u5185\u7684\u5173\u952e\u70b9\u4e92\u4e0d\u8054\u901a\uff0c\u4e14\u5b58\u5728\u5173\u952e\u70b9\u4e0e\u70b9$i$\u8054\u901a\u7684\u6700\u5c0f\u4ee3\u4ef7\uff1b$f(i,1)$\u4e3a\u4f7f\u70b9$i$\u7684\u5b50\u6811\u5185\u7684\u5173\u952e\u70b9\u4e92\u4e0d\u8054\u901a\uff0c\u4e14\u4e0d\u5b58\u5728\u5173\u952e\u70b9\u4e0e\u70b9$i$\u8054\u901a\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\n\n**\u82e5$i$\u4e3a\u5173\u952e\u70b9\uff1a**\n\n$f(i,1)$\u7684\u60c5\u51b5\u4e0d\u53ef\u80fd\u6210\u7acb\uff08\u5173\u952e\u70b9$i$\u548c$i$\u8054\u901a\uff09\uff0c$f(i,1)=inf$\u3002\n\n\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u6709$i$\u7684\u513f\u5b50\u4e3a\u5173\u952e\u70b9\u4e14\u4e0e$i$\u5728\u539f\u6811\u4e0a\u6709\u8fb9\uff0c\u5b58\u5728\u5219\u65e0\u89e3\u3002\n\n\u5bf9\u4e8e$f(i,0)$\uff0c\u5904\u4e8e\u60c5\u51b5$0$\u7684\u513f\u5b50\u4e3a\u6ee1\u8db3**\u5173\u952e\u70b9\u4e92\u4e0d\u8054\u901a**\uff0c\u9700\u65ad\u6389\u8def\u5f84\u4e0a\u7684\u67d0\u4e2a\u70b9\uff0c\u5904\u4e8e\u60c5\u51b5$1$\u7684\u513f\u5b50\u4e0d\u7528\u7ba1\uff0c$f(i,0)=\\sum\\limits_{j\\in son(i)}\\min\\{f(j,1),f(j,0)+1\\}$\n\n**\u82e5$i$\u4e0d\u4e3a\u5173\u952e\u70b9\uff1a**\n\n\u82e5$i$\u6709\u4e0d\u5c11\u4e8e$2$\u4e2a\u70b9\u4e3a\u5173\u952e\u70b9\uff0c\u4e0d\u53ef\u80fd\u5b58\u5728\u60c5\u51b5$0$\uff0c\u6b64\u65f6$f(i,0)=inf$\u3002\n\n\u5426\u5219\u5176\u513f\u5b50\u91cc\u9700\u6709\u4e14\u53ea\u6709\u5904\u4e8e\u60c5\u51b5$0$\uff0c\u5373$f(i,0)=\\sum\\limits_{j\\in son(i)}f(j,1)+\\min\\limits_{j\\in son(i)}\\{f(j,0)-f(j,1)\\}$\n\n\u5bf9\u4e8e$f(i,1)$\uff0c\u8981\u4e48\u65ad\u5f00\u70b9$i$\uff0c\u513f\u5b50\u968f\u4fbf\u9009\uff1b\u8981\u4e48\u513f\u5b50\u90fd\u5904\u4e8e\u60c5\u51b5$1$\u3002\u5373$f(i,1)=\\min\\{\\left(\\sum\\limits_{j\\in son(i)}\\min\\{f(j,0),f(j,1)\\}\\right)+1,\\sum\\limits_{j\\in son(i)}f(j,1)\\}$\n\n \n\n\u6700\u540e\u7b54\u6848\u4e3a$\\min\\{f(1,0),f(1,1)\\}$\u3002\n\n\u4ee3\u7801\uff1a\n\n``` cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n#include <vector>\n\n#define maxn 100005\n#define inf 0x3f3f3f3f\n\nusing namespace std;\n\ninline int read(){\n\tint x=0,y=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')y=1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9')x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n\treturn y?-x:x;\n}\nnamespace origin{\n\tint seg[maxn],top[maxn],son[maxn],fa[maxn],deep[maxn],siz[maxn],h[maxn],all,num;\n\tstruct edge{\n\t\tint pre,to;\n\t}e[maxn<<1];\n\tinline void add(int from,int to){\n\t\te[++num].pre=h[from],h[from]=num,e[num].to=to;\n\t}\n\tvoid dfs1(int node=1){\n\t\tsiz[node]=1;\n\t\tint x;\n\t\tfor(register int i=h[node];i;i=e[i].pre){\n\t\t\tx=e[i].to;\n\t\t\tif(!siz[x]){\n\t\t\t\tfa[x]=node,deep[x]=deep[node]+1,dfs1(x),siz[node]+=siz[x];\n\t\t\t\tif(siz[x]>siz[son[node]])son[node]=x;\n\t\t\t}\n\t\t}\n\t}\n\tvoid dfs2(int node=1){\n\t\tseg[node]=++all;\n\t\tif(son[node]){\n\t\t\ttop[son[node]]=top[node],dfs2(son[node]);\n\t\t\tint x;\n\t\t\tfor(register int i=h[node];i;i=e[i].pre){\n\t\t\t\tx=e[i].to;\n\t\t\t\tif(!seg[x])top[x]=x,dfs2(x);\n\t\t\t}\n\t\t}\n\t}\n\tint lca(int x,int y){\n\t\twhile(top[x]!=top[y])deep[top[x]]<deep[top[y]]?y=fa[top[y]]:x=fa[top[x]];\n\t\treturn deep[x]<deep[y]?x:y;\n\t}\n}\nnamespace virt{\n\tint h[maxn],f[maxn][2],num,n;\n\tbool vis[maxn],flag;\n\tvector<int>p;\n\tstruct edge{\n\t\tint pre,to;\n\t\tbool l;\n\t}e[maxn<<1];\n\tinline void add(int from,int to){\n\t\tbool l=(origin::fa[from]==to)||(origin::fa[to]==from);\n\t\te[++num].pre=h[from],h[from]=num,e[num].to=to,e[num].l=l;\n\t\te[++num].pre=h[to],h[to]=num,e[num].to=from,e[num].l=l;\n\t}\t\n\tinline bool cmp(int x,int y){return origin::seg[x]<origin::seg[y];}\n\tstruct Monostack{\n\t\tint sta[maxn],top;\n\t\tvoid push(int x){sta[++top]=x;}\n\t\tvoid clear(){\n\t\t\tfor(register int i=2;i<=top;++i)add(sta[i],sta[i-1]);\n\t\t\ttop=0;\n\t\t}\n\t\tvoid check(int x){\n\t\t\tif(x==1)return;\n\t\t\tint l=origin::lca(x,sta[top]);\n\t\t\th[x]=0;\n\t\t\tif(l!=sta[top]){\n\t\t\t\twhile(origin::seg[l]<origin::seg[sta[top-1]])add(sta[top],sta[top-1]),--top;\n\t\t\t\t--top;\n\t\t\t\tif(l!=sta[top])h[l]=0,add(sta[top+1],l),push(l);\n\t\t\t\telse add(sta[top+1],l);\n\t\t\t}\n\t\t\tpush(x);\n\t\t}\n\t}s;\n\tvoid dfs(int node=1,int fa=0){\n\t\tf[node][0]=(vis[node]^1)*n,f[node][1]=vis[node]*n;\n\t\tint x,siz=0,rec=0,ma=0;\n\t\tfor(register int i=h[node];i;i=e[i].pre){\n\t\t\tx=e[i].to;\n\t\t\tif(x==fa)continue;\n\t\t\tsiz+=vis[x],dfs(x,node);\n\t\t\tif(vis[node]){\n\t\t\t\tif(vis[x]&&e[i].l)flag=1;\t\n\t\t\t\tf[node][0]+=min(f[x][1],f[x][0]+1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tma=max(ma,f[x][1]-f[x][0]);\n\t\t\t\trec+=min(f[x][0],f[x][1]);\n\t\t\t\tf[node][1]+=f[x][1];\n\t\t\t}\n\t\t}\n\t\tif(!vis[node]){\n\t\t\tif(siz<=1)f[node][0]=f[node][1]-ma;\n\t\t\tf[node][1]=min(f[node][1],rec+1);\n\t\t}\n\t}\n\tvoid build(){\n\t\th[1]=0,s.push(1);\n\t\tfor(vector<int>::iterator iter=p.begin();iter!=p.end();++iter)s.check(*iter);\n\t\ts.clear();\n\t}\n\tvoid solve(){\n\t\tp.clear(),flag=0,n=read(),num=0;\n\t\tint x;\n\t\tfor(register int i=1;i<=n;++i)p.push_back(x=read()),vis[x]=1;\n\t\tsort(p.begin(),p.end(),cmp);\n\t\tbuild(),dfs();\n\t\tprintf(\"%d\\n\",flag?-1:min(f[1][0],f[1][1]));\n\t\tfor(vector<int>::iterator iter=p.begin();iter!=p.end();++iter)vis[*iter]=0;\n\t}\n}\nint main(){\n\tusing namespace origin;\n\tint n=read(),x,y;\n\tfor(register int i=1;i<n;++i)x=read(),y=read(),add(x,y),add(y,x);\n\tdfs1(),dfs2(),n=read();\n\twhile(n--)virt::solve();\n}\n```\n\n",
        "postTime": 1564926752,
        "uid": 111762,
        "name": "_ctz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF613D \u3010Kingdom and its Cities\u3011"
    },
    {
        "content": "#### $Firstly$,$DP$\u7684\u597d\u52a9\u624b\n\n\u9002\u7528\u524d\u63d0\n\n\u6709\u4e9b\u95ee\u9898 $n$\u8fc7\u5927\n\n\u5bfc\u81f4$m$\u6b21\u8be2\u95ee $n*m$\u592a\u5927\n\n\u4e14\u6bcf\u6b21DP\u7684\u5173\u952e\u70b9\u662f\u786e\u5b9a\u7684\n\n\u8fd9\u65f6\u6211\u4eec\u9700\u8981**\u865a\u6811**\n\n\u6bcf\u4e00\u6b21\u6811\u4e0a$DP$\n\n\u6211\u4eec\u90fd\u6784\u5efa\u865a\u6811\u7136\u540e\u5728\u6811\u4e0a$DP$  \n\n\u81ea\u7136\u865a\u6811\u4e0a\u53ea\u5305\u542b \u5173\u952e\u70b9 \u548c\u5173\u952e\u70b9\u7684$LCA$\n\n\u76f4\u63a5\u679a\u4e3e$LCA$ \u65f6\u95f4\u590d\u6742\u5ea6\u662f\u4e0d\u964d\u53cd\u5347\u7684\n\n#### $Secondly$,\u5b9e\u73b0\n\n\u6240\u4ee5 \u5982\u4f55\u4fdd\u8bc1\u590d\u6742\u5ea6 \u6784\u5efa\u51fa\u865a\u6811 \u5c31\u662f\u865a\u6811\u7684\u6838\u5fc3\u4e86\n\n\u5927\u6982\u65b9\u6cd5\u662f \n\n\u5c06\u5173\u952e\u70b9\u6309\u524d\u5e8f\u6392\u5e8f\n\n\u7136\u540e\u6700\u5f00\u59cb\u7528\u6808\u7ef4\u62a4\u4e00\u6761\u94fe\n\n\u82e5 \u6b64\u65f6\u7684 $u$\u4e0e\u6808\u9876\u5143\u7d20\u7684$LCA$\u4e0d\u5728\u94fe\u5185\n\n**\u5219 $u$\u4e0e\u6808\u9876\u5143\u7d20\u662f$LCA$\u7684\u4e24\u4e2a\u4e0d\u540c\u5b50\u6811\u7684\u8282\u70b9**\n\n(\u53ea\u8981\u8fd9\u53e5\u8bdd\u61c2\u4e86 \u5c31\u5199\u5f97\u51fa\u865a\u6811\u4e86)\n\n\u660e\u663e \u540e\u671f\u6808\u7ef4\u62a4\u7684\u4e0d\u518d\u53ea\u662f\u4e00\u6761\u94fe\n\n\u8fd9\u91cc\u7528\u6570\u7ec4\u6a21\u62df\u6808\n\n\u5177\u4f53\u64cd\u4f5c \u770b\u4ee3\u7801\n\n```cpp\ninline void BuildTree(int m)\n{\n\ttop = 1,st[1] = 1,G[1].clear();\n\tfor(reg i = 1;i <= m;i++)\n\t{\n\t\tif(poi[i] == 1) continue;\n\t\tint lc = lca(poi[i],st[top]);\n\t\tif(lc != st[top])\n\t\t{\n\t\t\twhile(dfn[st[top - 1]] > dfn[lc]) add(st[top - 1],st[top]),top--;\n\t\t\tif(lc != st[top - 1]) G[lc].clear(),add(lc,st[top]),st[top] = lc;\n\t\t\telse add(lc,st[top--]);\n\t\t}\n\t\tG[poi[i]].clear(),st[++top] = poi[i];\n\t}\n\tfor(reg i = 1;i < top;i++) add(st[i],st[i + 1]);\n}\n```\n#### $Finally$,\u4f8b\u9898\n\n[Kingdom and its Cities](https://www.luogu.org/problem/CF613D)\n\n```cpp\n#include <map>\n#include <cstdio>\n#include <vector>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n#define reg register int\n#define isdigit(x) ('0' <= (x)&&(x) <= '9')\ntemplate<typename T>\ninline T Read(T Type)\n{\n\tT x = 0,f = 1;\n\tchar a = getchar();\n\twhile(!isdigit(a)) {if(a == '-') f = -1;a = getchar();}\n\twhile(isdigit(a)) {x = (x << 1) + (x << 3) + (a ^ '0');a = getchar();}\n\treturn x * f;\n}\nconst int MAXN = 100010;\nvector<int> G[MAXN];\nint dp[MAXN],size[MAXN];\nint dfn[MAXN],dep[MAXN],fa[MAXN][20],poi[MAXN],st[MAXN],top,cnt;\nbool vis[MAXN];\ninline void add(int u,int v) {G[u].push_back(v);G[v].push_back(u);}\ninline void dfs(int x,int f)\n{\n\tdfn[x] = ++cnt;\n\tfor(reg i = 0;i < G[x].size();i++)\n\t{\n\t\tint v = G[x][i];\n\t\tif(v == f) continue;\n\t\tdep[v] = dep[x] + 1,fa[v][0] = x;\n\t\tdfs(v,x);\n\t}\n}\ninline void adjust(int &u,int val)\n{\n\tfor(reg i = 18;i >= 0;i--)\n\t\tif(dep[fa[u][i]] >= val)\n\t\t\tu = fa[u][i];\n}\ninline int lca(int u,int v)\n{\n\tif(dep[u] > dep[v]) adjust(u,dep[v]);\n\tif(dep[v] > dep[u]) adjust(v,dep[u]);\n\tif(u == v) return v;\n\tfor(reg i = 18;i >= 0;i--)\n\t\tif(fa[u][i] != fa[v][i])\n\t\t\tu = fa[u][i],v = fa[v][i];\n\treturn fa[u][0];\n}\nbool cmp(int a,int b) {return dfn[a] < dfn[b];}\ninline void BuildTree(int m)\n{\n\ttop = 1,st[1] = 1,G[1].clear();\n\tfor(reg i = 1;i <= m;i++)\n\t{\n\t\tif(poi[i] == 1) continue;\n\t\tint lc = lca(poi[i],st[top]);\n\t\tif(lc != st[top])\n\t\t{\n\t\t\twhile(dfn[st[top - 1]] > dfn[lc]) add(st[top - 1],st[top]),top--;\n\t\t\tif(lc != st[top - 1]) G[lc].clear(),add(lc,st[top]),st[top] = lc;\n\t\t\telse add(lc,st[top--]);\n\t\t}\n\t\tG[poi[i]].clear(),st[++top] = poi[i];\n\t}\n\tfor(reg i = 1;i < top;i++) add(st[i],st[i + 1]);\n}\ninline void dfs2(int x,int f)\n{\n\tdp[x] = size[x] = 0;\n\tfor(reg i = 0;i < G[x].size();i++)\n\t{\n\t\tint v = G[x][i];\n\t\tif(v == f) continue;\n\t\tdfs2(v,x);\n\t\tdp[x] += dp[v],size[x] += size[v]; \n\t}\n\tif(vis[x]) dp[x] += size[x],size[x] = 1;\n\telse if(size[x] > 1) dp[x]++,size[x] = 0;\n}\nint main()\n{\n\tint n = Read(1);\n\tfor(reg i = 1;i < n;i++)\n\t{\n\t\tint u = Read(1),v = Read(1);\n\t\tadd(u,v);\n\t}\n\tdep[1] = 1,dfs(1,0);\n\tfor(reg i = 1;i <= 18;i++)\n\t\tfor(reg j = 1;j <= n;j++)\n\t\t\tfa[j][i] = fa[fa[j][i - 1]][i - 1];\n\tint T = Read(1);\n\twhile(T--)\n\t{\n\t\tmemset(vis,0,sizeof(vis));\n\t\tint m = Read(1);\n\t\tfor(reg i = 1;i <= m;i++)\n\t\t{\n\t\t\tpoi[i] = Read(1);\n\t\t\tvis[poi[i]] = 1;\n\t\t}\n\t\tbool able = 0;\n\t\tfor(reg i = 1;i <= m;i++)\n\t\t\tif(vis[fa[poi[i]][0]]&&poi[i] != 1)\n\t\t\t{\n\t\t\t\tprintf(\"-1\\n\");\n\t\t\t\table = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tif(able) continue;\n\t\tsort(poi + 1,poi + 1 + m,cmp);\n\t\tBuildTree(m);\n\t\tdfs2(1,0);\n\t\tprintf(\"%d\\n\",dp[1]); \n\t}\n    return 0;\n}\n```",
        "postTime": 1571559821,
        "uid": 73992,
        "name": "resftlmuttmotw",
        "ccfLevel": 0,
        "title": "\u865a\u6811+Kingdom and its Cities"
    },
    {
        "content": "\u9898\u610f:\u6807\u8bb0\u4e00\u4e9b\u70b9,\u95ee\u4f7f\u5f97\u6240\u6709\u6807\u8bb0\u70b9\u4e0d\u8fde\u901a\u6700\u5c11\u8981\u53bb\u6389\u591a\u5c11\u70b9\n\n\u9996\u5148\u5982\u679c\u4e00\u4e2a\u70b9\u7684\u7236\u4eb2\u88ab\u6807\u8bb0\u4e86\u90a3\u4e48\u5c31\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de$-1$\u4e86\n\n\u8003\u8651\u5efa\u51fa\u865a\u6811\u7136\u540e\u6811\u5f62$DP$\n\n\u2460:\u5982\u679c\u4e00\u4e2a\u70b9\u88ab\u6807\u8bb0\u4e86,\u90a3\u4e48\u5c31\u8981\u628a\u4ed6\u6240\u6709\u5b50\u6811\u91cc\u6709\u6807\u8bb0\u70b9\u7684\u513f\u5b50\u90fd\u53bb\u6389\n\n\u2461:\u5982\u679c\u4e00\u4e2a\u70b9\u6ca1\u6709\u88ab\u6807\u8bb0,\u4f46\u662f\u8fd9\u4e2a\u70b9\u6709\u4e24\u9897\u4ee5\u4e0a\u7684\u5b50\u6811\u91cc\u6709\u6807\u8bb0\u70b9\n\n\u90a3\u4e48\u8fd9\u4e2a\u70b9\u5c31\u8981\u53bb\u6389,\u7136\u540e\u8fd9\u68f5\u5b50\u6811\u5c31\u6ca1\u6709\u53ef\u6807\u8bb0\u70b9\u4e86\n\n\u2462:\u5982\u679c\u4e00\u4e2a\u70b9\u5b50\u6811\u91cc\u53ea\u6709\u4e00\u4e2a/\u6ca1\u6709\u6807\u8bb0\u70b9\u90a3\u4e48\u5c31\u6807\u8bb0\u70b9\u7684\u8d21\u732e\u632a\u5230\u8fd9\u4e2a\u70b9\u4e0a\u9762\u6765\n\n\u7a0d\u5fae$yy$\u4e00\u4e0b\u5c31\u53d1\u73b0\u8fd9\u9053\u9898\u96be\u5ea6\u771f\u7684\u5c31\u53ea\u5728\u4e8e\u5efa\u865a\u6811\n\n~~\u4e0d\u7136\u7684\u8bdd\u8fd9\u9898\u5c31\u662f\u666e\u53ca-\u4e86~~\n\n```\n#include<bits/stdc++.h>\n#define fp(i,a,b) for(register int i=a,I=b+1;i<I;++i)\n#define fd(i,a,b) for(register int i=a,I=b-1;i>I;--i)\n#define go(u) for(register int i=fi[u],v=e[i].to;i;v=e[i=e[i].nx].to)\n#define file(s) freopen(s\".in\",\"r\",stdin),freopen(s\".out\",\"w\",stdout)\ntemplate<class T>inline bool cmax(T&a,const T&b){return a<b?a=b,1:0;}\ntemplate<class T>inline bool cmin(T&a,const T&b){return a>b?a=b,1:0;}\nusing namespace std;\nchar ss[1<<17],*A=ss,*B=ss;\ninline char gc(){return A==B&&(B=(A=ss)+fread(ss,1,1<<17,stdin),A==B)?-1:*A++;}\ntemplate<class T>inline void sd(T&x){\n    char c;T y=1;while(c=gc(),(c<48||57<c)&&c!=-1)if(c==45)y=-1;x=c-48;\n    while(c=gc(),47<c&&c<58)x=x*10+c-48;x*=y;\n}\nchar sr[1<<21],z[20];int C=-1,Z;\ninline void Ot(){fwrite(sr,1,C+1,stdout),C=-1;}\ntemplate<class T>inline void we(T x){\n    if(C>1<<20)Ot();if(x<0)sr[++C]=45,x=-x;\n    while(z[++Z]=x%10+48,x/=10);\n    while(sr[++C]=z[Z],--Z);sr[++C]='\\n';\n}\nconst int N=3e5+5,M=19,inf=1e9;\ntypedef int arr[N];\nstruct eg{int nx,to;}e[N<<1];\nint n,m,k,ce,dft;arr a,b,fi,fa,fg,sz,son,top,dep,dfn,S;\nvoid dfs(int u){\n    dep[u]=dep[fa[u]]+(sz[u]=1);dfn[u]=++dft;\n    go(u)if(v^fa[u]){\n        fa[v]=u,dfs(v),sz[u]+=sz[v];\n        if(sz[v]>sz[son[u]])son[u]=v;\n    }\n}\nvoid dfs(int u,int t){\n    top[u]=t;if(son[u])dfs(son[u],t);\n    go(u)if(v^fa[u]&&v^son[u])dfs(v,v);\n}\ninline int lca(int u,int v){\n    for(;top[u]^top[v];dep[top[u]]>dep[top[v]]?u=fa[top[u]]:v=fa[top[v]]);\n    return dep[u]<dep[v]?u:v;\n}\ninline void add(int u,int v){e[++ce]={fi[u],v},fi[u]=ce;}\ninline bool cmp(const int&a,const int&b){return dfn[a]<dfn[b];}\nint dp(int u){\n\tint ans=0,sum=0;\n\tgo(u)ans+=dp(v),sum+=b[v];\n\tif(fg[u])b[u]=1,ans+=sum;\n\telse if(sum>1)b[u]=0,++ans;\n\telse b[u]=sum;return fi[u]=0,ans;\n}\ninline void sol(){\n    sd(k);fp(i,1,k)sd(a[i]),fg[a[i]]=1;ce=0;\n    fp(i,1,k)if(fg[fa[a[i]]])return we(-1);\n    sort(a+1,a+k+1,cmp);static int top=1;S[1]=1;\n    fp(i,1,k){\n        int x=a[i],p=lca(S[top],x);\n        while(dep[p]<dep[S[top]]){\n            if(dep[p]>=dep[S[top-1]]){\n                add(p,S[top--]);\n                if(S[top]^p)S[++top]=p;\n                break;\n            }add(S[top-1],S[top]),--top;\n        }if(S[top]^x)S[++top]=x;\n    }while(top>1)add(S[top-1],S[top]),--top;\n    we(dp(1));\n}\nint main(){\n    #ifndef ONLINE_JUDGE\n        file(\"s\");\n    #endif\n    sd(n);int u,v;\n    fp(i,2,n)sd(u),sd(v),add(u,v),add(v,u);\n    dfs(1),dfs(1,1);sd(m);memset(fi,0,sizeof fi);\n    while(m--){sol();fp(i,1,k)fg[a[i]]=0;}\nreturn Ot(),0;\n}\n```",
        "postTime": 1520423583,
        "uid": 20156,
        "name": "Kelin",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF613D \u3010Kingdom and its Cities\u3011"
    },
    {
        "content": "[\u535a\u5ba2\u66f4\u4f73\u54e6](http://ljf-cnyali.cn/2019/08/09/%E8%99%9A%E6%A0%91/)\n\n\u865a\u6811\u4e00\u822c\u89e3\u51b3\u5982\u4e0b\u95ee\u9898:\n\n\u5728\u4e00\u68f5\u6811\u4e0a\u7ed9\u5b9a\u4e00\u4e2a\u70b9\u96c6$S$\uff0c\u6c42\u5220\u9664\u6700\u5c11\u7684\u975e\u70b9\u96c6\u7684\u70b9\u4f7f\u5f97\u70b9\u96c6$S$\u4e2d\u70b9\u4e24\u4e24\u4e92\u4e0d\u8054\u901a(\u591a\u6b21\u8be2\u95ee)\n\n\u901a\u5e38\u6211\u4eec\u5c06\u70b9\u96c6$S$\u4e2d\u7684\u70b9\u79f0\u4e3a\u5173\u952e\u70b9\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u4eec\u6240\u6709\u53ef\u4ee5\u5220\u9664\u7684\u70b9\u53ea\u8ddf\u6240\u6709\u5173\u952e\u70b9\u7684$LCA$\u6709\u5173\uff0c\u4e8e\u662f\u5c31\u6709\u4e86\u865a\u6811\u8fd9\u4e2a\u6982\u5ff5\n\n\u5efa\u6811\u662f\u7528\u4e00\u4e2a\u5355\u8c03\u6808\u6765\u7ef4\u62a4\u7684\uff0c\u4fdd\u8bc1\u53ea\u5c06\u6240\u6709\u4e0e\u5173\u952e\u70b9\u53ca$LCA$\u7684\u70b9\u52a0\u5165\u865a\u6811\u4e2d\n\n\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2a\u6280\u5de7\uff0c\u56e0\u4e3a\u6211\u4eec\u5efa\u65b0\u56fe\u4f7f\u7528$memset$\u590d\u6742\u5ea6\u4f1a\u539f\u5730\u7206\u70b8\uff0c\u53ea\u9700\u8981\u5728\u9047\u89c1\u9700\u8981\u8fde\u8fb9\u7684\u70b9\u7684\u65f6\u5019\u5c06$begin[i]$\u6e05\u96f6\u5373\u53ef\n\n\u5efa\u5b8c\u6811\u540e\u6c42\u89e3\u7b54\u6848\u53ef\u4ee5\u7528\u8d2a\u5fc3\u7684\u601d\u60f3:\n\n\u5bf9\u4e8e\u5f53\u524d\u70b9$i$\uff0c\u7236\u4eb2\u4e3a$fa$\uff0c$size[i]$\u8868\u793a$i$\u7684\u5b50\u6811\u5185\u548c$i$\u8054\u901a\u7684\u5173\u952e\u70b9\u6570\n\n-   \u5982\u679c$i$\u548c$fa$\u5747\u4e3a\u5173\u952e\u70b9\uff0c\u65e0\u89e3\n-   \u5982\u679c$i$\u4e3a\u5173\u952e\u70b9\uff0c\u4e14$size[i]>1$\uff0c\u8bf4\u660e$i$\u5fc5\u987b\u5305\u542b\u5728\u7b54\u6848\u5185\uff0c\u5219$size[i]=1$\n-   \u5426\u5219\u76f4\u63a5\u4ece\u4e0b\u5411\u4e0a\u7d2f\u52a0\u5373\u53ef\n\n```cpp\n/***************************************************************\n\tFile name: CF613D.cpp\n\tAuthor: ljfcnyali\n\tCreate time: 2019\u5e7408\u670809\u65e5 \u661f\u671f\u4e94 19\u65f601\u520620\u79d2\n***************************************************************/\n#include<bits/stdc++.h>\n\nusing namespace std;\n\n#define REP(i, a, b) for ( int i = (a), _end_ = (b); i <= _end_; ++ i ) \n#define mem(a) memset ( (a), 0, sizeof ( a ) ) \n#define str(a) strlen ( a ) \ntypedef long long LL;\n\nconst int maxn = 400010;\n\nint Begin[maxn], Next[maxn], To[maxn], e;\nint n, m, q, dis[maxn], anc[maxn][20], dfn[maxn], cnt;\nint a[maxn], size[maxn], ans[maxn], Stack[maxn], top;\nbool vis[maxn];\n\ninline void add(int u, int v) { To[++ e] = v; Next[e] = Begin[u]; Begin[u] = e; }\n\ninline void DFS1(int u, int fa)\n{\n    dfn[u] = ++ cnt; \n    for ( int i = Begin[u]; i; i = Next[i] ) \n    {\n        int v = To[i]; if ( v == fa ) continue ;\n        dis[v] = dis[u] + 1; anc[v][0] = u;\n        DFS1(v, u);\n    }\n}\n\ninline int LCA(int x, int y)\n{\n    if ( dis[x] < dis[y] ) swap(x, y);\n    for ( int j = 18; j >= 0; -- j ) if ( dis[anc[x][j]] >= dis[y] ) x = anc[x][j];\n    if ( x == y ) return x;\n    for ( int j = 18; j >= 0; -- j ) if ( anc[x][j] != anc[y][j] ) { x = anc[x][j]; y = anc[y][j]; }\n    return anc[x][0];\n}\n\ninline void Get_Tree()\n{\n    Stack[top = 1] = 1; Begin[1] = 0;\n    REP(i, 1, m)\n    {\n        if ( a[i] == 1 ) continue ;\n        int fa = LCA(Stack[top], a[i]);\n        if ( fa != Stack[top] ) \n        {\n            while ( dfn[Stack[top - 1]] > dfn[fa] ) \n            {\n                add(Stack[top - 1], Stack[top]); -- top;\n            }\n            if ( dfn[Stack[top - 1]] != dfn[fa] ) { Begin[fa] = 0; add(fa, Stack[top]); Stack[top] = fa; }\n            else add(fa, Stack[top --]);\n        }\n        Begin[a[i]] = 0;\n        Stack[++ top] = a[i];\n    }\n    REP(i, 1, top - 1) add(Stack[i], Stack[i + 1]);\n}\n\ninline void DFS2(int u, int fa)\n{\n    ans[u] = size[u] = 0;\n    for ( int i = Begin[u]; i; i = Next[i] ) \n    {\n        int v = To[i]; if ( v == fa ) continue ;\n        DFS2(v, u);\n        ans[u] += ans[v]; size[u] += size[v];\n    }\n    if ( vis[u] ) ans[u] += size[u], size[u] = 1;\n    else if ( size[u] > 1 ) size[u] = 0, ++ ans[u];\n}\n\ninline int cmp(int x, int y) { return dfn[x] < dfn[y]; }\n\nint main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n#endif\n    scanf(\"%d\", &n);\n    REP(i, 1, n - 1) { int u, v; scanf(\"%d%d\", &u, &v); add(u, v); add(v, u); }\n    dis[1] = 1; DFS1(1, 0);\n    REP(j, 1, 18) REP(i, 1, n) anc[i][j] = anc[anc[i][j - 1]][j - 1];\n    scanf(\"%d\", &q);\n    REP(o, 1, q)\n    {\n        scanf(\"%d\", &m); \n        REP(i, 1, m) { scanf(\"%d\", &a[i]); vis[a[i]] = true; } \n        REP(i, 1, m) if ( vis[anc[a[i]][0]] ) { puts(\"-1\"); goto finish; }\n        sort(a + 1, a + m + 1, cmp);\n        Get_Tree();\n        DFS2(1, 0);\n        printf(\"%d\\n\", ans[1]);\nfinish: ; \n        REP(i, 1, m) vis[a[i]] = false;\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1565351623,
        "uid": 8618,
        "name": "\u6c34\u5e93\u4e2d\u7684\u6c34\u5e93",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF613D \u3010Kingdom and its Cities\u3011"
    },
    {
        "content": "### \u9898\u610f\n> \u6709\u4e00\u68f5 $n$ \u4e2a\u70b9\u7684\u6811\uff0c\u73b0\u5728\u6709 $q$ \u4e2a\u8be2\u95ee\uff0c\u6bcf\u4e2a\u8be2\u95ee\u7ed9\u51fa $k$ \u4e2a\u5173\u952e\u8282\u70b9\uff0c\u67e5\u8be2\u5220\u9664\u4e00\u4e9b\u70b9\u4f7f\u8fd9\u4e9b\u5173\u952e\u70b9\u4e24\u4e24\u4e0d\u8fde\u901a\u65f6\u6700\u5c0f\u7684\u5220\u9664\u70b9\u6570\u76ee\u3002\u65e0\u89e3\u8f93\u51fa `-1`\u3002$1\\le n,q\\le 10^5,\\sum k\\le 10^5$ \u3002\n\n### \u5206\u6790\n\n\u9996\u5148\uff0c\u5982\u679c\u5173\u952e\u70b9\u4e4b\u95f4\u6709\u8fb9\u76f8\u8fde\uff0c\u90a3\u4e48\u76f4\u63a5 `-1`\u3002\n\n\u6ce8\u610f\u5230\u6bcf\u4e2a\u8be2\u95ee\u7684\u70b9\u6570\u4e4b\u548c\u4e0e $n$ \u540c\u9636\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u865a\u6811\u2014\u2014\u5efa\u7acb\u4e00\u68f5\u65b0\u6811\uff0c\u91cc\u9762\u53ea\u6709\u5173\u952e\u70b9\u548c\u5173\u952e\u70b9\u4e4b\u95f4\u7684 $LCA$ \u3002\n\n\u90a3\u4e48\uff0c\u5982\u4f55\u6c42\u4e00\u68f5\u6811\u5185\u6700\u5c0f\u7684\u5220\u9664\u70b9\u6570\u76ee\u5462\uff1f\u8003\u8651`dfs`\u3002\u8bb0\u5f55 $f_x$ \u8868\u793a\u4ee5 $x$ \u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u5728\u4ee5\u6700\u4f18\u65b9\u6848\u5220\u9664\u70b9\u4e4b\u540e\u662f\u5426\u6709\u5173\u952e\u70b9\u4e0e $x$ \u8fde\u901a\u3002\n\n\u9996\u5148\uff0c\u8ba9\u5173\u952e\u70b9\u4e24\u4e24\u4e0d\u8fde\u901a\uff0c\u5fc5\u7136\u8981\u5148\u8ba9\u6bcf\u4e2a\u5b50\u6811\u5185\u90e8\u4e0d\u8fde\u901a\u3002\u90a3\u4e48\u7b54\u6848\u5148\u52a0\u4e0a\u6bcf\u4e2a\u5b50\u6811\u5185\u90e8\u7684\u7b54\u6848\u3002\n\n\u5982\u679c\u5f53\u524d\u70b9 $x$ \u5c31\u662f\u5173\u952e\u70b9\uff0c\u90a3\u80af\u5b9a\u8ba9\u5b50\u6811\u91cc\u6bcf\u4e2a\u6709\u5173\u952e\u70b9\u672a\u4e0e $x$ \u65ad\u5f00\u7684\u90fd\u65ad\u5f00\u3002\u7b54\u6848\u52a0\u4e0a\u5b50\u6811\u91cc $f$ \u7684\u548c\u3002\u5e76\u4e14 $f_x=1$ \u3002\n\n\u5982\u679c $x$ \u4e0d\u662f\u5173\u952e\u70b9\uff1a\n\n- \u5982\u679c $x$ \u7684\u5b50\u6811\u91cc\u672a\u65ad\u5f00\u5173\u952e\u70b9\u7684\u603b\u6570\u591a\u4e8e $1$ \u4e2a\uff0c\u90a3\u5c31\u76f4\u63a5\u628a $x$ \u5220\u6389\u597d\u4e86\u3002\n- \u5426\u5219\uff0c\u628a\u8fd9\u4e00\u4e2a\u672a\u65ad\u5f00\u5173\u952e\u70b9\u7559\u7740\uff0c\u6216\u8bb8\u80fd\u5230 $x$ \u7684\u7956\u5148\u5904\u65ad\u5f00\uff0c\u7701\u4e00\u4e2a\u3002\u540c\u65f6\u4e5f\u8981\u8ba9 $f_x=1$ \u3002\n\n\u505a\u4e00\u904d\u8fd9\u6837\u7684\u8d2a\u5fc3\u5c31\u884c\u4e86\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nint n,m;\nint head[100005],Next[200005],to[200005],tot;\nint flag[100005];\nvector<int>edge[100005];\nint fa[100005][25],dep[100005],dfn[100005],cnt;\nint st[100005],top;\nint vis[100005];\nvector<int>vec,tr;\nbool cmp(int x,int y){\n\treturn dfn[x]<dfn[y];\n}\nvoid addedge(int x,int y){\n\tNext[++tot]=head[x];\n\tto[tot]=y;\n\thead[x]=tot;\n}\nvoid addedge2(int x,int y){\n\tedge[x].push_back(y);\n}\nvoid dfs(int x,int f){\n\tdfn[x]=++cnt;\n\tfor(int i=head[x];i;i=Next[i])\n\t\tif(to[i]!=f){\n\t\t\tfa[to[i]][0]=x;\n\t\t\tfor(int j=1;j<=20;j++)fa[to[i]][j]=fa[fa[to[i]][j-1]][j-1];\n\t\t\tdep[to[i]]=dep[x]+1;\n\t\t\tdfs(to[i],x);\n\t\t}\n}\nint LCA(int x,int y){\n\tint k=20;\n\twhile(dep[x]!=dep[y]&&k>=0){\n\t\tif(dep[x]<dep[y])swap(x,y);\n\t\tif(dep[fa[x][k]]>=dep[y])x=fa[x][k];\n\t\tk--;\n\t}\n\tif(x==y)return x;\n\tk=20;\n\twhile(fa[x][0]!=fa[y][0]&&k>=0){\n\t\tif(fa[x][k]!=fa[y][k])x=fa[x][k],y=fa[y][k];\n\t\tk--;\n\t}\n\treturn fa[x][0];\n}\nint dfs2(int x){\n\tint res=0;flag[x]=0;\n\tint num=0;\n\tfor(auto y:edge[x]){\n\t\tres+=dfs2(y);\n\t\tnum+=flag[y];\n\t}\n\tif(vis[x])res+=num,flag[x]=1;\n\telse{\n\t\tif(num>1)res++;\n\t\telse if(num==1)flag[x]=1;\n\t}\n\treturn res;\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<n;i++){\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\taddedge(x,y);\n\t\taddedge(y,x);\n\t}\n\tdep[1]=1;\n\tdfs(1,0);\n\tscanf(\"%d\",&m);\n\twhile(m--){\n\t\tint k;\n\t\tscanf(\"%d\",&k);\n\t\tvec.clear();\n\t\ttr.clear();\n\t\tst[top=1]=1;\n\t\ttr.push_back(1);\n\t\tfor(int i=1;i<=k;i++){\n\t\t\tint x;scanf(\"%d\",&x);\n\t\t\tvec.push_back(x);vis[x]=1;\n\t\t}\n\t\tint ans=0;\n\t\tfor(auto x:vec)\n\t\t\tif(vis[fa[x][0]]){\n\t\t\t\tans=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tif(ans){\n\t\t\tfor(auto x:vec)vis[x]=0;\n\t\t\tputs(\"-1\");\n\t\t\tcontinue;\n\t\t}\n\t\tsort(vec.begin(),vec.end(),cmp);\n\t\tfor(auto x:vec){\n\t\t\tint tp=st[top];\n\t\t\tint lca=LCA(x,tp);\n\t\t\tif(lca==tp){\n\t\t\t\tif(x>1)st[++top]=x,tr.push_back(x);\n\t\t\t}else{\n\t\t\t\tint tp2=st[top-1];\n\t\t\t\twhile(dep[lca]<dep[tp2]&&top>=2){\n\t\t\t\t\taddedge2(tp2,tp);\n\t\t\t\t\ttop--;\n\t\t\t\t\ttp=st[top],lca=LCA(x,tp),tp2=st[top-1];\n\t\t\t\t}\n\t\t\t\taddedge2(lca,tp);\n\t\t\t\ttop--;\n\t\t\t\tif(lca!=tp2)st[++top]=lca,tr.push_back(lca);\n\t\t\t\tst[++top]=x,tr.push_back(x);\n\t\t\t}\n\t\t}\n\t\twhile(top>=2){\n\t\t\tint tp=st[top],tp2=st[top-1];\n\t\t\taddedge2(tp2,tp);\n\t\t\ttop--;\n\t\t}\n\t\tprintf(\"%d\\n\",dfs2(1));\n\t\tfor(auto x:tr)edge[x].clear();\n\t\tfor(auto x:vec)vis[x]=0;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1632737346,
        "uid": 233462,
        "name": "Umbrella_Leaf",
        "ccfLevel": 8,
        "title": "\u9898\u89e3CF613D Kingdom and its Cities"
    },
    {
        "content": "\u516c\u5f0f\u597d\u50cf\u6302\u4e86\u3002\u3002\u4e3a\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\uff0c\u8bf7\u79fb\u6b65[\u6211\u7684\u535a\u5ba2](https://www.luogu.com.cn/blog/My-luoguBuoke-HZR/solution-cf613d)\u3002\n\n\u9898\u610f\uff1a\n\n\u7ed9\u5b9a\u4e00\u9897 $n$ \u4e2a\u70b9\u7684\u6811\uff0c $q$ \u6b21\u8be2\u95ee\u5220\u9664\u82e5\u5e72\u4e2a\u70b9\u4ee4\u7ed9\u5b9a\u7684 $k_i$ \u4e2a\u70b9\u4e92\u76f8\u4e0d\u8fde\u901a\uff0c\u6c42\u6700\u5c11\u5220\u70b9\u6570\u3002\n\n$n,q,\\sum k \\leq 10^5$\n\n---\n\n\u865a\u6811 $dp$ \u5165\u95e8\u9898\u3002\n\n\u8003\u8651\u6811\u5f62 $dp$ \uff0c\u8bbe $dp[x]$ \u4e3a\u4ee5 $x$ \u4e3a\u6839\u65f6\u7684\u7b54\u6848\uff0c$g[x]$ \u4e3a\u6b64\u65f6\u6709\u6ca1\u6709\u5173\u952e\u70b9\u76f4\u8fde\u5230 $x$ \u7684\u7236\u4eb2\uff0c$is[x]$ \u4e3a\u8fd9\u4e2a\u70b9\u662f\u5426\u5173\u952e\uff0c\u90a3\u4e48\u6709\uff1a\n\n$$\ndp[x]=\n\\begin{cases}\n\\sum\\limits_{y \\in \\{son[x]\\}} (dp[y]),g[x]=\\sum g[y] & is[x]=0 , \\sum g[y] \\leq 1 \\\\\n(\\sum\\limits_{y \\in \\{son[x]\\}} dp[y])+1,g[x]=0 & is[x]=0 , \\\\\n\\sum\\limits_{y \\in \\{son[x]\\}} (dp[y]+g[y]),g[x]=1 & is[x]=1\n\\end{cases}\n$$\n\n\u7b2c\u4e00\u79cd\u60c5\u51b5\uff1a\u4e0d\u662f\u5173\u952e\u70b9\u800c\u4e14\u5b50\u6811\u5173\u952e\u70b9\u4e2a\u6570\u53ea\u6709 $0/1$ \u4e2a\uff0c\u90a3\u4e48\u4e0d\u5220\u9664\u8fd9\u4e2a\u8282\u70b9\u3002\n\n\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff1a\u4e0d\u662f\u5173\u952e\u70b9\u800c\u4e14\u5b50\u6811\u5173\u952e\u70b9\u4e2a\u6570\u5f88\u591a\uff0c\u76f4\u63a5\u5220\u6389\u8fd9\u4e2a\u70b9\u5c31\u884c\u4e86\u3002\n\n\u7b2c\u4e09\u79cd\u60c5\u51b5\uff1a\u662f\u5173\u952e\u70b9\uff0c\u90a3\u4e48\u5c31\u65ad\u5f00\u6240\u6709\u6709\u5173\u952e\u70b9\u7684\u5b50\u6811\u3002\n\n\u6ce8\u610f\u5982\u679c\u6709\u4e24\u4e2a\u5173\u952e\u70b9\u76f4\u63a5\u76f8\u8fde\u90a3\u4e48\u8f93\u51fa ``-1`` \u5373\u53ef\u3002\n\n\u7b97\u6cd5\u590d\u6742\u5ea6\u4e3a $O(nq)$\n\n\u6ce8\u610f\u5230 $\\sum k$ \u5f88\u5c11\uff0c\u8003\u8651\u80fd\u5426\u8bbe\u8ba1\u4e00\u4e2a\u53ea\u548c $k$ \u6709\u5173\u7684\u7b97\u6cd5\u3002\n\n## \u865a\u6811\n\n\u865a\u6811\u662f\u539f\u6811\u4e0a\u7684\u67d0\u4e9b\u8282\u70b9\u6784\u6210\u7684\u6811\uff0c\u5e76\u5305\u542b\u6307\u5b9a\u7684\u82e5\u5e72\u8282\u70b9\u4e0e\u5b83\u4eec\u7684 $lca$ \u3002\n\n\u4e0b\u56fe\u662f\u4e00\u4e2a\u4f8b\u5b50\uff1a\n\n\u7ea2\u70b9\u4e3a\u88ab\u9009\u62e9\u7684\u70b9\uff0c\u84dd\u70b9\u4e3a\u5b83\u4eec\u7684 $lca$\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/4i0gcbxz.png)\n\n\u5177\u4f53\u5b9e\u73b0\u540e\u9644\uff0c\u7b97\u6cd5\u590d\u6742\u5ea6 $O(\\text{\u8282\u70b9\u6570}\\times\\text{lca})$\n\n\u5728\u6b64\u9898\u4e2d\uff0c\u7531\u4e8e\u975e\u7ea2\u84dd\u8282\u70b9\u7684\u8f6c\u79fb\u90fd\u662f\u65e0\u6548\u7684\uff0c\u53ef\u4ee5\u5efa\u7acb\u4e00\u4e2a\u4ee5\u82e5\u5e72\u4e2a\u5173\u952e\u70b9\u4e3a\u57fa\u7840\u7684\u865a\u6811\uff0c\u7136\u540e\u5728\u865a\u6811\u4e0a $dp$ \u5373\u53ef\u3002\n\n\u6b64\u9898\u4ee3\u7801\u91cf\u8f83\u5927\u3002\n\n---\n\n\u5b9e\u73b0\uff1a\n\n\u5bf9\u539f\u6811\u53d6 $dfs$ \u5e8f\u540e\u5efa\u7acb\u4e00\u4e2a\u6808\uff0c\u4f9d\u6b21\u6309 $dfs$ \u5e8f\u52a0\u5165\u7ea2\u8282\u70b9\uff0c\u52a0\u5165\u8fc7\u7a0b\u4e2d\u5982\u679c\u52a0\u5165\u70b9\u975e\u6808\u9876\u5b50\u6811\u90a3\u4e48\u52a0\u5165\u5b83\u4eec\u7684 $lca$ \u3002\n\n```cpp\n// h \u6570\u7ec4\u50a8\u5b58\u7ea2\u8282\u70b9\n// \u9996\u5148\u52a0\u5165 1 \u53f7\u70b9\u65b9\u4fbf\u5efa\u6811\nSta[top=1]=1;\nfor(j=1;j<=Cnt;j++){\n\tif(h[j]==1)continue;\n\tint l=lca(Sta[top],h[j]);\n\twhile(deep[Sta[top-1]]>deep[l]){\n   \t\t// \u8fd9\u91cc\u62ff\u6808\u9876\u7b2c\u4e8c\u4e2a\u8282\u70b9\u6bd4\u8f83\uff0c\u65b9\u4fbf\u5904\u7406\u52a0\u8fb9\n\t\tadd2(Sta[top-1],Sta[top]);\n\t\ttop--;\n\t}\n\tif(Sta[top]!=l){\n\t\t//\u6ce8\u610f\u4e0d\u8981\u91cd\u590d\n\t\tif(Sta[top-1]==l)add2(Sta[top-1],Sta[top]),top--;\n\t\telse add2(l,Sta[top]),Sta[top]=l;\n\t}\n\tSta[++top]=h[j];\n}\nwhile(top>1){\n\tadd2(Sta[top-1],Sta[top]);\n\ttop--;\n}\n```\n\n\u5177\u4f53\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define Mid ((L+R)>>1)\nusing namespace std;\ntypedef pair<int,int> pii;\ninline int read(){\n\tchar c;int x=0;int b=1;do{c=getchar();if(c==45)b=-1;}while(c>57||c<48);\n\tdo x=x*10+c-48,c=getchar();while(c<=57&&c>=48);x*=b;return x;\n}\nconst int maxn=100010;\nint id,i,j,k,n,m;\nstruct edge{\n\tint next,to;\n}a[maxn*2],e[maxn*2];\nint head[maxn],len;\nint head2[maxn],len2;\nvoid add(int x,int y){\n\ta[++len]={head[x],y};\n\thead[x]=len;\n}\nvoid add2(int x,int y){\n\t//cout<<x<<' '<<y<<endl;\n\te[++len2]={head2[x],y};\n\thead2[x]=len2;\n\te[++len2]={head2[y],x};\n\thead2[y]=len2;\n}\nint F[maxn][21],deep[maxn],dfn[maxn],cnt;\nvoid dfs(int now,int fa){\n\tF[now][0]=fa;deep[now]=deep[fa]+1;\n\tdfn[now]=++cnt;\n\tfor(int i=head[now];i;i=a[i].next){\n\t\tint u=a[i].to;\n\t\tif(u==fa)continue;\n\t\tdfs(u,now);\n\t}\n}\nvoid LCA(){\n\tfor(int j=1;j<=20;j++)\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tF[i][j]=F[F[i][j-1]][j-1];\n}\nint lca(int x,int y){\n\tif(deep[x]<deep[y])swap(x,y);\n\tfor(int j=20;j>=0;j--)\n\t\tif(deep[F[x][j]]>=deep[y])\n\t\t\tx=F[x][j];\n\tif(x==y)return x;\n\tfor(int j=20;j>=0;j--)\n\t\tif(F[x][j]!=F[y][j])\n\t\t\tx=F[x][j],y=F[y][j];\n\treturn F[x][0];\n}\nbool cmp(int x,int y){\n\treturn dfn[x]<dfn[y];\n}\nint is[maxn],h[maxn],Cnt;\nint Sta[maxn],top;\nint dp[maxn],g[maxn],can;\nvoid dfs2(int now,int fa){\n\t//cout<<now<<' '<<fa<<' '<<is[now]<<' '<<id<<endl;\n\tfor(int i=head2[now];i;i=e[i].next){\n\t\tint u=e[i].to;\n\t\tif(u==fa)continue;\n\t\tdfs2(u,now);\n\t}\n\tdp[now]=g[now]=0;\n\tif(is[now]==id){\n\t\tfor(int i=head2[now];i;i=e[i].next){\n\t\t\tint u=e[i].to;\n\t\t\tif(is[u]==id && abs(deep[u]-deep[now])==1)can=-1;\n\t\t\tif(u==fa)continue;\n\t\t\tdp[now]+=dp[u]+g[u];\n\t\t}g[now]=1;\n\t}else{\n\t\tint Sum=0;\n\t\tfor(int i=head2[now];i;i=e[i].next){\n\t\t\tint u=e[i].to;\n\t\t\tif(u==fa)continue;\n\t\t\tdp[now]+=dp[u];\n\t\t\tif(g[u])++Sum;\n\t\t}\n\t\tif(Sum<=1)g[now]=Sum;\n\t\telse dp[now]++;\n\t}\n\thead2[now]=0;\n}\nint main() {\n\tfreopen(\"CF613D.in\",\"r\",stdin);\n\tfreopen(\"CF613D.out\",\"w\",stdout);\n\tcin>>n;\n\tfor(i=1;i<n;i++){\n\t\tint x,y;\n\t\tx=read();y=read();\n\t\tadd(x,y);add(y,x);\n\t}\n\tdfs(1,0);LCA();\n\tcin>>m;\n\tfor(id=1;id<=m;id++){\n\t\tk=read();Cnt=can=0;\n\t\tfor(j=1;j<=k;j++){\n\t\t\tint x;\n\t\t\tx=read();\n\t\t\tis[x]=id;\n\t\t\th[++Cnt]=x;\n\t\t}\n\t\tsort(h+1,h+1+Cnt,cmp);\n\t\tSta[top=1]=1;\n\t\t//cout<<\"i=\"<<i<<endl;\n\t\tfor(j=1;j<=Cnt;j++){\n\t\t\tif(h[j]==1)continue;\n\t\t\tint l=lca(Sta[top],h[j]);\n\t\t\twhile(deep[Sta[top-1]]>deep[l]){\n\t\t\t\tadd2(Sta[top-1],Sta[top]);\n\t\t\t\ttop--;\n\t\t\t}\n\t\t\tif(Sta[top]!=l){\n\t\t\t\tif(Sta[top-1]==l)add2(Sta[top-1],Sta[top]),top--;\n\t\t\t\telse add2(l,Sta[top]),Sta[top]=l;\n\t\t\t}\n\t\t\tSta[++top]=h[j];\n\t\t}\n\t\twhile(top>1){\n\t\t\tadd2(Sta[top-1],Sta[top]);\n\t\t\ttop--;\n\t\t}\n\t\tdfs2(1,0);\n\t\tif(!can)printf(\"%d\\n\",dp[1]);\n\t\telse puts(\"-1\");\n\t\tlen2=0;\n\t}\n\t//cerr << 1.0*clock()/CLOCKS_PER_SEC << endl;\n\treturn 0;\n}\n```",
        "postTime": 1591698903,
        "uid": 35891,
        "name": "huangzirui",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF613D \u3010Kingdom and its Cities\u3011"
    },
    {
        "content": "\u8003\u8651\u6811\u5f62$DP$\uff0c\u8bbe$num_x$\u8bb0\u5f55\u7684\u4e3a\u5f53$1$\u4e3a\u6839\u65f6\uff0c\u4ee5$x$\u4e3a\u5b50\u6811\u4e2d\u91cd\u8981\u57ce\u5e02\u7684\u4e2a\u6570\u3002\n\n\u90a3\u4e48\u8fdb\u884c\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n\u2460 \u5f53$num_x\u22600$\u65f6\uff0c\u5219\u9700\u5c06\u5176\u6240\u6709\u6ee1\u8db3$num_y\u22600$\u7684\u513f\u5b50$y$\u5220\u53bb\u3002\n\n\u2461 \u5f53$num_x=0$\u65f6\uff0c\u82e5\u6ee1\u8db3$num_y\u22600$\u7684\u513f\u5b50$y$\u4e2a\u6570$cnt=1$\uff0c\u5219\u76f4\u63a5\u8ba9$num$\u8fdb\u884c\u5411\u4e0a\u4f20\u9012\uff0c\u82e5\u6ee1\u8db3$num_y\u22600$\u7684\u513f\u5b50$y$\u4e2a\u6570$cnt>1$\uff0c\u5219\u9700\u5220\u53bb$x$\u672c\u8eab\u3002\n\n\u4e0d\u5408\u6cd5\u7684\u60c5\u51b5\u7279\u5224\u6389\u3002\n\n\u8003\u8651\u5230\u591a\u6b21\u8be2\u95ee\u548c\u6811\u4e0a\u70b9\u96c6\u7684\u7279\u6027\uff0c\u8003\u8651\u7528\u865a\u6811\u6765\u4f18\u5316$DP$\u3002\n\n\u591a\u6b21\u5efa\u865a\u6811\u65f6\u8bb0\u5f97\u6e05\u7a7a$num$\uff0c\u4f46\u4e0d\u8981\u7528$memset$\uff0c\u65e0\u6cd5\u4fdd\u8bc1\u590d\u6742\u5ea6\uff0c\u5e94\u8bb0\u5f55\u865a\u6811\u4e0a\u7684\u70b9\uff0c\u53ea\u6e05\u96f6\u8fd9\u4e9b\u70b9\u3002\n\n\u5176\u4ed6\u5b9e\u73b0\u7ec6\u8282\u5c31\u770b\u4ee3\u7801\u5427\u3002\n\n$code:$\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 200010\nusing namespace std;\ntemplate<typename T> inline void read(T &x)\n{\n\tx=0;char c=getchar();bool flag=false;\n\twhile(!isdigit(c)){if(c=='-')flag=true;c=getchar();}\n\twhile(isdigit(c)){x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n\tif(flag) x=-x;\n}\nint n,q,ans,tmp_cnt;\nbool flag;\nint query[maxn],tmp[maxn],num[maxn];\nstruct edge\n{\n    int to,nxt;\n}e[maxn];\nint head[maxn],edge_cnt;\nvoid add(int from,int to)\n{\n    e[++edge_cnt]=(edge){to,head[from]};\n    head[from]=edge_cnt;\n}\nint dfn_cnt;\nint de[maxn],dfn[maxn],top_fa[maxn],fa[maxn],son[maxn],siz[maxn];\nvoid dfs_son(int x,int fath)\n{\n    siz[x]=1;\n    fa[x]=fath;\n    de[x]=de[fath]+1;\n    for(int i=head[x];i;i=e[i].nxt)\n    {\n        int y=e[i].to;\n        if(y==fath) continue;\n        dfs_son(y,x);\n        siz[x]+=siz[y];\n        if(siz[son[x]]<siz[y]) son[x]=y;\n    }\n}\nvoid dfs_chain(int x,int tp)\n{\n    dfn[x]=++dfn_cnt,top_fa[x]=tp;\n    if(son[x]) dfs_chain(son[x],tp);\n    for(int i=head[x];i;i=e[i].nxt)\n    {\n        int y=e[i].to;\n        if(dfn[y]) continue;\n        dfs_chain(y,y);\n    }\n}\nint lca(int x,int y)\n{\n    while(top_fa[x]!=top_fa[y])\n    {\n        if(de[top_fa[x]]<de[top_fa[y]]) swap(x,y);\n        x=fa[top_fa[x]];\n    }\n    if(dfn[x]>dfn[y]) swap(x,y);\n    return x;\n}\nbool cmp(const int &a,const int &b)\n{\n    return dfn[a]<dfn[b];\n}\nint st[maxn],top;\nvoid insert(int x)\n{\n    if(x==1) return;\n\tif(top==1)\n    {\n        st[++top]=x;\n        return;\n    }\n    int anc=lca(x,st[top]);\n    if(anc==st[top])\n    {\n        st[++top]=x;\n        return;\n    }\n    while(top>1&&dfn[anc]<=dfn[st[top-1]]) add(st[top-1],st[top]),top--,tmp[++tmp_cnt]=st[top];\n    if(anc!=st[top]) add(anc,st[top]),st[top]=anc,tmp[++tmp_cnt]=st[top];\n    st[++top]=x;\n}\nvoid dp(int x)\n{\n    int cnt=0,sum=0;\n    for(int i=head[x];i;i=e[i].nxt)\n    {\n        int y=e[i].to;\n        dp(y);\n        if(num[x]&&num[y]) ans++;\n        if(!num[x]&&num[y])\n        {\n            cnt++;\n            sum+=num[y];\n        }\n    }\n    if(!num[x])\n    {\n        if(cnt==1) num[x]+=sum;\n        if(cnt>1) ans++;\n    }\n    head[x]=0;\n}\nvoid clear()\n{\n    edge_cnt=0;\n    memset(head,0,sizeof(head));\n}\nint main()\n{\n\tread(n);\n    for(int i=1;i<n;++i)\n    {\n        int a,b;\n        read(a),read(b);\n        add(a,b),add(b,a);\n    }\n    dfs_son(1,0);\n    dfs_chain(1,1);\n    clear();\n    read(q);\n    while(q--)\n    {\n        int k;\n        read(k);\n        edge_cnt=tmp_cnt=flag=ans=0;\n        for(int i=1;i<=k;++i)\n        {\n            read(query[i]);\n            num[query[i]]++;\n        }\n        for(int i=1;i<=k;++i)\n        {\n            if(num[fa[query[i]]])\n            {\n                puts(\"-1\");\n                flag=true;\n                break;\n            }\n        }\n        if(flag)\n        {\n            for(int i=1;i<=k;++i) num[query[i]]=0;\n            continue;\n        }\n        sort(query+1,query+k+1,cmp);\n        st[top=1]=1,tmp[tmp_cnt=1]=1;\n        for(int i=1;i<=k;++i) insert(query[i]);\n        while(top) add(st[top-1],st[top]),top--,tmp[++tmp_cnt]=st[top];\n        dp(1);\n        for(int i=1;i<=tmp_cnt;++i) num[tmp[i]]=0;\n        for(int i=1;i<=k;++i) num[query[i]]=0;\n        printf(\"%d\\n\",ans);\n    }         \n\treturn 0;\n}\n```\n",
        "postTime": 1577368856,
        "uid": 172489,
        "name": "lhm_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF613D \u3010Kingdom and its Cities\u3011"
    },
    {
        "content": "\u4e00\u9053\u865a\u6811\u677f\u5b50\u9898\u3002\n\n\u865a\u6811\u7684\u4f5c\u7528\u5c31\u662f\uff1a\u6709\u7684\u65f6\u5019\u89e3\u51b3\u4e00\u4e9b\u6811\u4e0a\u95ee\u9898\u65f6\uff0c\u6574\u68f5\u6811\u5927\u5c0f\u5f88\u5927\uff0c\u4f46\u662f\u6240\u9700\u8981\u7684\u201c\u5173\u952e\u70b9\u201d\u5927\u5c0f\u5f88\u5c0f\u3002\u4e3a\u4e86\u8282\u7701\u65f6\u95f4 \u5bf9\u6709$k$\u4e2a\u5173\u952e\u70b9\u7684\u865a\u6811\u8fdb\u884c\u5904\u7406\uff0c\u80fd\u4f7f\u5f97\u6574\u68f5\u6811\u7684\u5927\u5c0f\u53d8\u6210$2k$\u3002\n\n\u865a\u6811\u5728\u8fd9\u91cc\uff1a[OIWIKI-\u865a\u6811](https://oi-wiki.org/graph/virtual-tree/#cf613d-kingdom-and-its-cities)\u6709\u5f88\u8be6\u7ec6\u7684\u4ecb\u7ecd\u3002\n\n\u5176\u5b9e\u5c31\u662f\u5229\u7528\u6808\u7ef4\u62a4\u6811\u4e0a\u7684\u4e00\u6761\u94fe\u3002\u7136\u540e\u8003\u8651\u6808\u9876\u8282\u70b9\u548c\u4e0b\u4e00\u4e2a\u5173\u952e\u70b9\u7684\u5173\u7cfb\uff0c\u5982\u679c$lca$\u7b49\u4e8e\u6808\u9876\uff08\u5728\u540c\u4e00\u6761\u94fe\uff09\u5c31\u76f4\u63a5\u5165\u6808\u3002\u5426\u5219\u5206\u7c7b\u8ba8\u8bba\u6808\u4e2d$top-1$\u7684\u8282\u70b9$x$\u548c$lca$\u7684\u5173\u7cfb\uff1a\n\n1. $dfs(x)>dfs(lca)$\u8fd9\u4ee3\u8868$x$\u548c\u6808\u9876\u8282\u70b9\u6784\u6210\u7684\u94fe\u5728\u6811\u7684\u201c\u5206\u53c9\u70b9\u201d\u4e0b\u9762\u7684\u60c5\u51b5\uff08$lca$\u4e3a\u5206\u53c9\u70b9\uff09\u3002\u6240\u4ee5\u76f4\u63a5\u52a0\u5165$x$\u548c\u6808\u9876\u4e4b\u95f4\u7684\u8fb9\uff0c\u7136\u540e\u5f39\u6808\u9876\u3002\u6ce8\u610f \u8fd9\u4e00\u6b65\u663e\u7136\u9700\u8981\u7528`while`\u6267\u884c\u591a\u6b21\u3002\n2. $dfs(x)<dfs(lca)$\u8fd9\u4ee3\u8868$x$\u548c\u6808\u9876\u8282\u70b9\u6784\u6210\u7684\u94fe\uff08\u4e0d\u5305\u542b\u4e24\u7aef\uff0c\u56e0\u4e3a\u8fd9\u91cc$lca\\neq x$\uff0c\u524d\u9762\u53c8\u5224\u65ad\u4e86$lca\\neq stk[top]$\uff09\u4e0a\u7684\u4e00\u4e2a\u8282\u70b9\u5c31\u662f$lca$\u3002\u6240\u4ee5$lca$\u6ca1\u5165\u6808\uff0c\u56e0\u6b64\u6dfb\u52a0\u6808\u9876\u548c$lca$\u7684\u8fb9\uff0c\u6808\u9876\u51fa\u6808\uff0c$lca$\u5165\u6808\u5373\u53ef\u3002\n3. $dfs(x)=dfs(lca)$\u8fd9\u4ee3\u8868$lca=x$\u3002\u56e0\u6b64\u52a0\u5165\u8fb9$(lca,x)$\uff0c\u7136\u540e\u51fa\u6808\u5373\u53ef\u3002\n\n\u8fd9\u91cc\u6709\u4e2a\u5b9e\u73b0\u7684\u5c0f\u6280\u5de7\uff1a\u5728\u6bcf\u6b21\u5165\u6808\u4e00\u4e2a\u65b0\u7684\u8282\u70b9\u65f6\u8fdb\u884c\u4e34\u63a5\u8868\u521d\u59cb\u5316\u5373\u53ef\u3002\n\n\u6700\u540e\u4e0d\u8981\u5fd8\u4e86\u5c06\u6808\u4e2d\u5269\u4f59\u7684\u8282\u70b9\u4ee3\u8868\u7684\u94fe\u52a0\u8fdb\u53bb\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#include<cstring>\n#include<vector>\n#include<queue>\n#define vi vector<int>\n#define pb push_back\n#define mk make_pair\n#define pii pair<int,int>\n#define rep(i,a,b) for(int i=(a),i##end=(b);i<=i##end;i++)\n#define fi first\n#define se second\ntypedef long long ll;\nusing namespace std;\nconst int maxn=100500;\nvi side[maxn],vit[maxn],kp;\nint dfn[maxn],f[maxn][23],dep[maxn],dfn_cnt,stk[maxn],top;\nvoid dfs(int u,int fa){\n    f[u][0]=fa;dep[u]=dep[fa]+1;dfn[u]=++dfn_cnt;\n    rep(i,1,22)f[u][i]=f[f[u][i-1]][i-1];\n    rep(i,0,(int)side[u].size()-1){\n        int v=side[u][i];if(v==fa)continue;\n        dfs(v,u);\n    }\n}\nbool iskp[maxn];\nbool cmp(int a,int b){return dfn[a]<dfn[b];}\nvoid roll_back(int k){\n    rep(i,0,k-1)iskp[kp[i]]=0;\n}\nvoid in(int x){\n    vit[x].clear();stk[++top]=x;\n}   \nint k;\nint c[maxn];\nll dp(int u,int fa){\n    ll tot=0,ans=0;\n    rep(i,0,(int)vit[u].size()-1){\n        int v=vit[u][i];if(v==fa)continue;\n        ans+=dp(v,u);tot+=c[v];\n    }\n    if(iskp[u]){\n        c[u]=1;ans+=tot;        \n    }\n    else if(tot>1)c[u]=0,ans++;\n    else c[u]=tot;\n    return ans;\n}\nint lca(int u,int v){\n    if(dep[u]<dep[v])swap(u,v);\n    for(int i=22;i>=0;i--)if(dep[f[u][i]]>=dep[v])u=f[u][i];\n    if(u==v)return u;\n    for(int i=22;i>=0;i--)if(f[u][i]!=f[v][i])u=f[u][i],v=f[v][i];\n    return f[u][0];\n}\nint main(){\n    int n;scanf(\"%d\",&n);\n    rep(i,1,n-1){\n        int u,v;scanf(\"%d%d\",&u,&v);side[u].pb(v);side[v].pb(u);\n    }\n    dfs(1,0);\n    int q;scanf(\"%d\",&q);\n    while(q--){\n        scanf(\"%d\",&k);kp.clear();\n        rep(i,1,k){\n            int u;scanf(\"%d\",&u);kp.pb(u);iskp[u]=1;\n        }\n        bool flag=1;\n        rep(i,0,k-1){\n            if(iskp[f[kp[i]][0]]){\n                printf(\"-1\\n\");roll_back(k);flag=0;break;\n            }\n        }\n        if(!flag)continue;\n        sort(kp.begin(),kp.end(),cmp);\n        stk[top=1]=1;vit[1].clear();\n        rep(i,0,k-1){\n            int x=kp[i];\n            if(x==1)continue;\n            int l=lca(x,stk[top]);\n            if(l==stk[top]){in(x);continue;}\n            while(dfn[l]<dfn[stk[top-1]]){vit[stk[top-1]].pb(stk[top]);vit[stk[top]].pb(stk[top-1]);top--;}\n            if(dfn[l]>dfn[stk[top-1]]){\n                vit[l].clear();vit[l].pb(stk[top]);vit[stk[top]].pb(l);stk[top]=l;\n            }\n            else {vit[stk[top]].pb(l);vit[l].pb(stk[top]);top--;}\n            in(x);\n        }\n        rep(i,1,top-1){vit[stk[i]].pb(stk[i+1]);vit[stk[i+1]].pb(stk[i]);}\n        printf(\"%lld\\n\",dp(1,0));\n        roll_back(k);\n    }\n}\n```\n\n",
        "postTime": 1587347283,
        "uid": 43420,
        "name": "GavinZheng",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF613D \u3010Kingdom and its Cities\u3011"
    },
    {
        "content": "**\u849f\u84bb\u521a\u5b66\u865a\u6811\u4e0d\u4e45\uff0c\u611f\u89c9\u8fd9\u9053\u9898\u5f88\u6c34\u7684\u4e9a\u5b50\uff0c\u5c31\u6765\u505a\u4e00\u4e0b**\n\n\u9898\u610f\uff1a\n\n\u7ed9\u5b9a\u4e00\u68f5\u6811\uff0c\u6bcf\u6b21\u8be2\u95ee\u6709k\u4e2a\u5173\u952e\u8282\u70b9\uff0c\u95ee\u6700\u5c11\u9009\u53d6\u51e0\u4e2a\u9664\u8fd9k\u4e2a\u70b9\u5916\u7684\u70b9\u80fd\u5c06\u8fd9\u4e9b\u70b9\u9694\u5f00\n\n$\\sum k\\leq 100000$ \n\n\u770b\u5230\u6700\u540e\u7684\u9650\u5236\u6761\u4ef6\u5c31\u5f88\u5bb9\u6613\u8054\u60f3\u5230\u865a\u6811\u4e86\uff0c\u9996\u5148\u968f\u4fbf\u6784\u5efa\u4e00\u4e0b\u865a\u6811\uff08\u8fd9\u4e2a\u6784\u5efa\u6ca1\u4ec0\u4e48\u96be\u7684\u5427\u628a\u8be2\u95ee\u70b9\u548clca\u4e00\u901a\u585e\u8fdb\u6765\u5c31\u53ef\u4ee5\u4e86\uff09\n\n\u7136\u540e\u8003\u8651\u6811\u5f62DP\uff1a\n\n**\u4e0d\u59a8\u8bbe\u5f53\u524d\u8282\u70b9\u4e3ax,temp\u4e3aF[x]\uff0cbj\u6570\u7ec4\u8868\u793a\u67d0\u4e2a\u70b9\u662f\u4e0d\u662f\u5173\u952e\u70b9**\n\n1.\u5982\u679cx\u662f\u5173\u952e\u8282\u70b9\uff0c\u90a3\u4e48\u5982\u679c\u4ed6\u7684\u513f\u5b50\u4e5f\u662f\u5173\u952e\u8282\u70b9\uff0ctemp+=dp\uff08\u513f\u5b50\uff09+1\u5373\u53ef\uff0c\u5982\u679c\u4ed6\u7684\u513f\u5b50\u662f\u975e\u5173\u952e\u8282\u70b9\uff08\u4e5f\u5c31\u662f\u4e00\u4e2alca\u70b9\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u628a\u8981\u8003\u8651\u7684\u60c5\u51b5\u6254\u7ed9\u8fd9\u4e2alca\u70b9\uff0c\u5728\u5f53\u524d\u5c42\u76f4\u63a5temp+=dp\uff08\u513f\u5b50\uff09\u3002\n\n**\u6ce8\u610f\uff0c\u5982\u679cx\u548c\u4ed6\u7684\u513f\u5b50\u90fd\u662f\u5173\u952e\u8282\u70b9\uff0c\u8981\u7279\u5224\u5728\u539f\u6811\u4e2d\u6709\u6ca1\u6709\u7236\u5b50\u5173\u7cfb\uff08\u5177\u4f53\u5c31\u662f\u7279\u5224\u4e00\u4e0b\u6df1\u5ea6\u5373\u53ef\uff09\uff0c\u6709\u7684\u8bdd\u6253\u4e2a\u6807\u8bb0\u5728\u8fd9\u6b21\u8be2\u95ee\u76f4\u63a5\u8f93\u51fa-1**\n\n2.\u5982\u679cx\u662f\u975e\u5173\u952e\u8282\u70b9\uff0c\u4e5f\u5c31\u662fx\u662f\u67d0\u4e2alca\uff0c\u6211\u4eec\u8003\u8651\u4ed6\u7684\u5404\u4e2a\u5b50\u6811\uff0c\u5982\u679c\u6709\u5927\u4e8e\u4e00\u4e2a\u5b50\u6811\u80fd\u4f20\u9012\u4e0a\u6765\u5173\u952e\u70b9\uff0c\u5f88\u663e\u7136x\u70b9\u5fc5\u987b\u5c01\u5835\uff0c\u90a3\u4e48return temp+1\u3002\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u5b50\u6811\u80fd\u4f20\u9012\u4e0a\u6765\u5173\u952e\u70b9\uff0c\u90a3\u4e48lca\u53f7\u70b9\u4e0d\u5fc5\u5c01\u5835\uff0c\u76f4\u63a5\u5c06\u8fd9\u4e2a\u5173\u952e\u70b9\u4fe1\u606f\u7ee7\u7eed\u5411\u4e0a\u4f20\u9012\u3002\u5982\u679c\u6ca1\u6709\u5b50\u6811\u80fd\u4f20\u9012\u4e0a\u6765\u5173\u952e\u70b9\uff0c\u5c31\u4ec0\u4e48\u4e5f\u4e0d\u7528\u7ba1\u3002\n\n**\u90a3\u4e48\u5982\u4f55\u8868\u793a\u8fd9\u4e2a\u4f20\u9012\u5173\u952e\u70b9\u64cd\u4f5c\uff1f**\n\n\u76f4\u63a5\u5f00\u4e00\u4e2a\u6570\u7ec4g\uff0c\u5728\u904d\u5386x\u53f7\u70b9\u7684\u513f\u5b50\u65f6\u52a0\u4e0a\u8fd9\u6837\u4e00\u53e5\uff1a\n\n```\nif(g[e[x][i]]||bj[e[x][i]]) t++; //t\u8868\u793a\u6709\u51e0\u4e2a\u5b50\u6811\u80fd\u4f20\u9012\u5173\u952e\u70b9\n```\n\n\u5373\u53ef\u5224\u65ad\u4f20\u9012\u4fe1\u606f\u7684\u5b50\u6811\u4e2a\u6570\uff0c\u7136\u540e\u5728t==1\u65f6\uff0cg[x]\u8bbe\u4e3a1\u5373\u53ef\u3002\n\n\u6ce8\u610f\u8981\u7279\u5224\u5f53x\u4e3a\u975e\u5173\u952e\u8282\u70b9\u65f6\uff0ct==1\u5e76\u4e14\u5728\u865a\u6811\u4e2dx\u7684\u7236\u4eb2\u662f\u5173\u952e\u8282\u70b9\u65f6\uff0c\u76f4\u63a5\u8fd4\u56detemp+1\uff08\u8fd9\u5c31\u662f\u524d\u6587\u63d0\u5230\u7684\u201c\u628a\u8981\u8003\u8651\u7684\u60c5\u51b5\u6254\u7ed9\u8fd9\u4e2alca\u70b9\u201d\uff09\n\n\u8fd9\u6837\u5c31\u505a\u5b8c\u4e86\uff0c\u6211\u7684\u5199\u6cd5\u63cf\u8ff0\u8d77\u6765\u53ef\u80fd\u6709\u70b9\u602a\u5f02\uff1f\u9002\u5f53\u7406\u89e3\uff0c\u5e94\u8be5\u6709\u66f4\u597d\u7406\u89e3\u7684\u63cf\u8ff0\u65b9\u6cd5\u3002\n\n\u7136\u800c...\n\n\u4f9d\u7136\u8fd8\u662f\u5728Test 11 Wa\u4e865\u6b21\u554a(#`O\u2032)\uff01\uff01\n\n\u4e00\u9635\u8089\u773c\u89c2\u5bdf\u53d1\u73b0\u539f\u6765\u662f\u56e0\u4e3a\uff1a\n\n```\nfor(int i=0;i<e[x].size();i++)\n{\n\tif(g[e[x][i]]||bj[e[x][i]]) t++;\n\ttemp+=dp(e[x][i],x);\n}\n```\n\u5faa\u73af\u91cc\u4e24\u53e5\u8bdd\u4f4d\u7f6e\u53cd\u4e86\uff0c\u5bfc\u81f4\u4e0b\u4e00\u5c42\u7684g\u8fd8\u6ca1\u521d\u59cb\u5316\u4e3a0\u5c31\u5df2\u7ecf\u5728\u8fd9\u4e00\u5c42\u7528\u6765\u5224\u65ad\u4e86QAQ\n\n\u6539\u4e00\u4e0b\uff0c\u8f7b\u677eAC\n\n\u4e0b\u9762\u4e0a\u4ee3\u7801\uff1a\n\n```\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<iostream>\n#include<iomanip>\n#include<cmath>\n#include<algorithm>\n#include<vector>\nusing namespace std;\ninline int read()\n{\n\tint res=0,f=1;char c=getchar();\n\twhile(c<'0'||c>'9') \n\t{\n\t\tif(c=='-') f=-1;\n\t\tc=getchar();\n\t}\n\twhile(c>='0'&&c<='9')\n\t{\n\t\tres=res*10+(c-'0');\n\t\tc=getchar();\n\t}\n\treturn res*f;\n}\nint n,m;\nint cnt,tot;\nint ver[200050];\nint nxt[200050];\nint head[100050];\nint deep[100050];\nint F[100050][21];\nint a[100050];\nint st[100050];\nint dfn[100050];\nint tmp;\nint root;\nbool flag;\nbool bj[100050];\nvector<int> e[100050];\nint g[100050];\ninline bool cmp(int x,int y)\n{\n\treturn dfn[x]<dfn[y];\n}\ninline void add(int x,int y)\n{\n\tcnt++;\n\tver[cnt]=y;\n\tnxt[cnt]=head[x];\n\thead[x]=cnt;\n}\ninline void dfs(int x,int fa)\n{\n\tdfn[x]=++tot;\n\tdeep[x]=deep[fa]+1;\n\tF[x][0]=fa;\n\tfor(int i=head[x];i;i=nxt[i])\n\t{\n\t\tif(ver[i]==fa) continue;\n\t\tdfs(ver[i],x);\n\t}\n}\ninline int lca(int x,int y)\n{\n\tif(deep[x]<deep[y]) swap(x,y);\n\tfor(int i=20;i>=0;i--)\n\t{\n\t\tif(deep[F[x][i]]>=deep[y]) x=F[x][i];\n\t}\n\tif(x==y) return x;\n\tfor(int i=20;i>=0;i--)\n\t{\n\t\tif(F[x][i]!=F[y][i]) \n\t\t{\n\t\t\tx=F[x][i];y=F[y][i];\n\t\t}\n\t}\n\treturn F[x][0];\n}\ninline void insert(int x)\n{\n\tif(!tmp)\n\t{\n\t\tst[++tmp]=x;\n\t\treturn;\n\t}\n\tint f=lca(x,st[tmp]);\n\tif(f==st[tmp])\n\t{\n\t\tst[++tmp]=x;\n\t\treturn;\n\t}\n\twhile(tmp>1&&dfn[st[tmp-1]]>=dfn[f])\n\t{\n\t\te[st[tmp-1]].push_back(st[tmp]);\n\t\tif(!root||deep[st[tmp-1]]<deep[root]) root=st[tmp-1];\n\t\t--tmp;\n\t}\n\tif(st[tmp]!=f)\n\t{\n\t\te[f].push_back(st[tmp]);\n\t\tif(!root||deep[f]<deep[root]) root=f;\n\t\ttmp--;\n\t\tst[++tmp]=f;\n\t}\n\tst[++tmp]=x;\n}\ninline int dp(int x,int fa)\n{\n\tg[x]=0;\n\tint temp=0;\n\tif(bj[x])\n\t{\n\t\tfor(int i=0;i<e[x].size();i++)\n\t\t{\n\t\t\tif(bj[e[x][i]])\n\t\t\t{\n\t\t\t\tif(deep[e[x][i]]==deep[x]+1) flag=0;\n\t\t\t\ttemp+=dp(e[x][i],x)+1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttemp+=dp(e[x][i],x);\n\t\t\t}\n\t\t}\n\t\te[x].clear();\n\t\treturn temp;\n\t}\n\telse\n\t{\n\t\tint t=0;\n\t\tfor(int i=0;i<e[x].size();i++)\n\t\t{\n\t\t\ttemp+=dp(e[x][i],x);\n\t\t\tif(g[e[x][i]]||bj[e[x][i]]) t++;\n\t\t}\n\t\te[x].clear();\n\t\tif(t>1)\n\t\treturn temp+1;\n\t\telse\n\t\t{\n\t\t\tif(bj[fa]&&t==1) return temp+1;\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(t==1)\n\t\t\t\tg[x]=1;\n\t\t\t\treturn temp;\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tn=read();\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint x,y;\n\t\tx=read();y=read();\n\t\tadd(x,y);add(y,x);\n\t}\n\tdfs(1,0);\n\tfor(int i=1;i<=20;i++)\n\t{\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tF[j][i]=F[F[j][i-1]][i-1];\n\t\t}\n\t}\n\tm=read();\n\twhile(m--)\n\t{\n\t\troot=0;flag=1;\n\t\tint k;k=read();\n\t\tfor(int i=1;i<=k;i++)\n\t\t{\n\t\t\ta[i]=read();\n\t\t\tbj[a[i]]=1;\n\t\t}\n\t\tsort(a+1,a+k+1,cmp);\n\t\tfor(int i=1;i<=k;i++) insert(a[i]);\n\t\twhile(tmp>1)\n\t\t{\n\t\t\te[st[tmp-1]].push_back(st[tmp]);\n\t\t\tif(!root||deep[st[tmp-1]]<deep[root]) root=st[tmp-1];\n\t\t\ttmp--;\n\t\t}\n\t\ttmp--;\n\t\tint rua=dp(root,0);\n\t\tif(flag)\n\t\tprintf(\"%d\\n\",rua);\n\t\telse printf(\"-1\\n\");\n\t\tfor(int i=1;i<=k;i++) bj[a[i]]=0;\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1582713046,
        "uid": 182738,
        "name": "ZBHRuaRua",
        "ccfLevel": 6,
        "title": "CF613D Kingdom and its Cities"
    },
    {
        "content": "\u55ef...\u597d\u50cf\u8fd8\u6ca1\u6709\u4eba\u8111\u6808\u7684\uff1f\n\n\u8d76\u5feb\u6765\u6c34\u4e00\u53d1\u3002\n\n\u9996\u5148\u865a\u6811\u662f\u5565\u4f60\u5f97\u77e5\u9053\u3002\n\n\u7136\u540e\u8fd9\u4e2a\u9898\u7684\u96be\u70b9\u5176\u5b9e\u5c31\u662f\u6784\u9020\u865a\u6811...\n\n~~\u6240\u4ee5\u5176\u5b9e\u6ca1\u4ec0\u4e48\u597d\u8bb2\u7684~~\n\n\u5177\u4f53\u8bb2\u89e3\u89c1\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define il inline\nusing namespace std;\nconst int maxn=2e5+5;\n//\u5176\u5b9e\u53ea\u6709tmp\u9700\u8981\u5f00\u4e8c\u500d \nint N,Q;\nint dep[maxn],lg2[maxn],fa[maxn][20];\nint indx,ins[maxn],ous[maxn];\nint K,tmp[maxn],book[maxn],import[maxn],size[maxn];\nvector<int>G[maxn];\nvoid Prepare(int u,int p) {\n\tins[u]=++indx;//\u6b27\u62c9\u5e8f\uff1a\u8fdb\u6808 \n\tfa[u][0]=p;\n\tdep[u]=dep[p]+1;\n\tfor(int k=1; k<=lg2[dep[u]]; k++)\n\t\tfa[u][k]=fa[fa[u][k-1]][k-1];//\u6211\u8fd8\u662f\u559c\u6b22\u500d\u589e\u4e00\u70b9 \n\tfor(int i=0; i<G[u].size(); i++) {\n\t\tint v=G[u][i];\n\t\tif(v==p)\n\t\t\tcontinue;\n\t\tPrepare(v,u);\n\t}\n\tous[u]=++indx;//\u6b27\u62c9\u5e8f\uff1a\u51fa\u6808 \n}\nil int LCA(int u,int v) {\n\tif(dep[u]<dep[v])\n\t\tswap(u,v);\n\twhile(dep[u]!=dep[v])\n\t\tu=fa[u][lg2[dep[u]-dep[v]]];\n\tif(u==v)\n\t\treturn u;\n\tfor(int k=lg2[dep[u]]; k>=0; k--)\n\t\tif(fa[u][k]!=fa[v][k])\n\t\t\tu=fa[u][k],v=fa[v][k];\n\treturn fa[u][0];\n}\nil bool cmp(int a,int b) {//\u6309\u6b27\u62c9\u5e8f\u6392\u5e8f \n\tint k1=a>0?ins[a]:ous[-a];\n\tint k2=b>0?ins[b]:ous[-b];\n\treturn k1<k2;\n}\nint main() {\n\t//freopen(\"in.txt\",\"r\",stdin);\n\tios::sync_with_stdio(false);\n\tcin>>N;\n\tlg2[0]=-1;\n\tfor(int i=1; i<=N; i++)\n\t\tlg2[i]=lg2[i>>1]+1;\n\tfor(int i=1,u,v; i<N; i++) {\n\t\tcin>>u>>v;\n\t\tG[u].push_back(v);\n\t\tG[v].push_back(u);\n\t}\n\tPrepare(1,0);//\u9884\u5904\u7406\u4e00\u6ce2 \n\tcin>>Q;\n\twhile(Q) {\n\t\tint flag=0;\n\t\tint ans=0;\n\t\tstack<int>s;\n\t\tcin>>K;\n\t\tfor(int i=1; i<=K; i++) {\n\t\t\tcin>>tmp[i];\n\t\t\tbook[tmp[i]]=Q;//\u5df2\u7ecf\u653e\u8fdb\u5728\u4eba\u8111\u6808\u91cc\u4e86 \n\t\t\timport[tmp[i]]=size[tmp[i]]=1;//\u6307\u5b9a\u4e86\u8fd9\u4e2a\u70b9 \n\t\t}\n\t\tsort(tmp+1,tmp+K+1,cmp);\n\t\tfor(int i=1; i<K; i++) {\n\t\t\tint lca=LCA(tmp[i],tmp[i+1]);//\u628alca\u7ed9\u585e\u8fdb\u6765 \n\t\t\tif(book[lca]!=Q) {\n\t\t\t\tbook[lca]=Q;\n\t\t\t\ttmp[++K]=lca;\n\t\t\t}\n\t\t}\n\t\tint tmpk=K;\n\t\tfor(int i=1; i<=tmpk; i++)\n\t\t\ttmp[++K]=-tmp[i];//\u51fa\u6808\u70b9\u585e\u8fdb\u6765 \n\t\tif(book[1]!=Q) {//\u7279\u5224root \n\t\t\ttmp[++K]=1;\n\t\t\ttmp[++K]=-1;\n\t\t}\n\t\tsort(tmp+1,tmp+K+1,cmp);//\u6b27\u62c9\u6392\u5e8f\uff08\u53e3\u80e1\uff09 \n\t\tfor(int i=1; i<=K; i++) {\n\t\t\tif(tmp[i]>0)\n\t\t\t\ts.push(tmp[i]);//\u6a21\u62df\u6df1\u641c\u4e0d\u65ad\u5f80\u4e0b\u6269\u5c55 \n\t\t\telse {\n\t\t\t\tint cur=s.top();//\u5f00\u59cb\u56de\u6eaf \n\t\t\t\ts.pop();\n\t\t\t\tif(cur!=1) {\n\t\t\t\t\tint pa=s.top();\n\t\t\t\t\tif(import[pa]&&import[cur]&&dep[cur]==dep[pa]+1)\n\t\t\t\t\t\tflag=1;//\u5224\u65ad\u4e24\u4e2a\u88ab\u6307\u5b9a\u7684\u70b9\u8fde\u5728\u4e00\u8d77\u7684\u60c5\u51b5 \n\t\t\t\t\tif(import[pa]) {//case1\uff1a\u7236\u4eb2\u88ab\u6307\u8ba4\uff0c\u90a3\u4e48\u6bcf\u6709\u4e00\u4e2a\u88ab\u6307\u8ba4\u7684\u513f\u5b50 \n\t\t\t\t\t\tif(size[cur])//\u7b54\u6848\u5c31\u9700\u8981+1 \n\t\t\t\t\t\t\tans++;\n\t\t\t\t\t\tsize[cur]=0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsize[pa]+=size[cur];//case2\uff1a\u7236\u4eb2\u4e0d\u88ab\u6307\u8ba4 \n\t\t\t\t\t\tsize[cur]=0;\n\t\t\t\t\t\tif(tmp[i+1]==-pa)//\u7edf\u8ba1\u5b8c\u7236\u4eb2\u7684\u6700\u540e\u4e00\u4e2a\u513f\u5b50\u4e86 \n\t\t\t\t\t\t\tif(size[pa]>1){//\u6709\u8d85\u8fc7\u4e24\u4e2a\u513f\u5b50\u88ab\u6307\u8ba4 \n\t\t\t\t\t\t\t\tans++;//\u5c31\u628a\u7236\u4eb2\u7ed9\u5220\u4e86 \n\t\t\t\t\t\t\t\tsize[pa]=0;//\u8be5\u5b50\u6811\u4ee5\u4e0b\u90fd\u5207\u4e86\uff0c\u4e0d\u4f1a\u4ea7\u751f\u8d21\u732e\u4e86 \n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i=1;i<=K;i++)\n\t\t\tif(tmp[i]>0)\n\t\t\t\timport[tmp[i]]=size[tmp[i]]=0;\n\t\tif(flag)\n\t\t\tcout<<\"-1\"<<endl;\n\t\telse\n\t\t\tcout<<ans<<endl;\n\t\t--Q;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1569155710,
        "uid": 109396,
        "name": "Uniecho1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF613D \u3010Kingdom and its Cities\u3011"
    },
    {
        "content": "~~\u865a\u6811\u5165\u95e8\u9898\u76ee~~\n\n\u6570\u636e\u8303\u56f4\u4e2d\u63d0\u5230$The$ $sum$ $of$ $all$ $ki's$ $does't$ $exceed$ $100000 $\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u865a\u6811\u3002\n\n\u9996\u5148[\u5efa\u7acb\u865a\u6811](https://zsaskk-rzll.blog.luogu.org/solution-p4103)\uff0c\u7136\u540e\u8003\u8651\u95ee\u9898\u600e\u4e48\u7528$dp$\u89e3\u51b3\u3002\n\n\u9996\u5148\uff0c\u65e0\u89e3\u7684\u60c5\u51b5\u5f88\u597d\u5224\u65ad\uff0c\u5f53$x$\u4e0e$fa[x]$\u90fd\u6210\u4e3a\u94a6\u5b9a\u70b9\uff0c\u5c31\u65e0\u6cd5\u65ad\u5f00\uff0c\u65e0\u89e3\u3002\n\n\u5f53\u786e\u5b9a\u6709\u89e3\u65f6\uff0c\u8003\u8651$dp$\u3002\n\n\u5f53$dp$\u5230$x$\uff0c\u5982\u679c$x$\u662f\u4eb2\u5b9a\u70b9\uff0c\u5bf9\u4e8e$x$\u7684\u4e00\u9897\u5b50\u6811$y$\uff0c\u5982\u679c$y$\u7684\u9876\u4e0a\u6709\u94a6\u5b9a\u70b9\uff0c\u90a3\u4e48\u65ad\u5f00\u4e2d\u95f4\u7684\u4efb\u610f\u4e00\u4e2a\u70b9\uff0c$++ans$\u3002\n\n\u5982\u679c$x$\u4e0d\u662f\u94a6\u5b9a\u70b9\uff0c\u5f53\u4e14\u4ec5\u5f53\u6709\u591a\u4e2a\u542b\u94a6\u5b9a\u70b9\u5b50\u6811\uff0c$++ans$\uff0c\u5e76\u628a$x$\u5b9a\u4e49\u4e3a\u5b50\u6811\u5185\u65e0\u94a6\u5b9a\u70b9\uff0c\u5426\u5219\u5c31\u7b49\u5230\u66f4\u9ad8\u5c42\u53bb\u5904\u7406\uff0c\u8fd9\u6837\u663e\u7136\u662f\u4f18\u7684\u3002\n\n\u6bcf\u6b21\u56de\u7b54\u4e00\u4e2a\u8be2\u95ee\u540e\uff0c\u5e94\u5f53\u6e05\u7a7a\u6570\u7ec4\u3002\n\n------------\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define reg register\n#define chk_digit(c) (c>='0'&&c<='9')\n#define maxsize 200010\ninline int read() {\n\treg int x=0,f=1;reg char c=getchar();\n\twhile(!chk_digit(c)) { if(c=='-') f=-1;c=getchar(); }\n\twhile(chk_digit(c)) x=x*10+c-'0',c=getchar();\n\treturn x*f;\n}\nint a[maxsize],stop,stac[maxsize],vist,dfn[maxsize],h[maxsize],cnt,top[maxsize],siz[maxsize],son[maxsize],dep[maxsize],fa[maxsize],st[maxsize],n,m,q,ans,ance;\nstruct node { int y,next; }edg[maxsize<<1];\ninline bool cmp(int x,int y) { return dfn[x]<dfn[y]; }\ninline void add(int x,int y) { edg[++cnt].next=h[x],edg[cnt].y=y,h[x]=cnt; }\ninline void dfs1(int x,int fat){//\u6c42\u91cd\u513f\u5b50 \n\tsiz[x]=1;\n\tfor(reg int i=h[x];i;i=edg[i].next) {\n\t\tint y=edg[i].y;if(y==fat) continue;\n\t\tdep[y]=dep[fa[y]=x]+1,dfs1(y,x),siz[x]+=siz[y];\n\t\tif(siz[son[x]]<siz[y]) son[x]=y;\n\t}\n}\ninline void dfs2(int x) {//\u5212\u5206\u8f7b\u91cd\u94fe \n\tdfn[x]=++vist;\n\tif(!son[x]) return;\n\ttop[son[x]]=top[x],dfs2(son[x]);\n\tfor(reg int i=h[x];i;i=edg[i].next) {\n\t\tint y=edg[i].y;if(y==fa[x]||y==son[x]) continue;\n\t\tdfs2(top[y]=y);\n\t}\n}\ninline int lca(int x,int y) {//\u6811\u5256lca \n\twhile(top[x]^top[y]) {\n\t\tif(dep[top[x]]>dep[top[y]]) x=fa[top[x]];\n\t\telse y=fa[top[y]];\n\t}\n\tif(dep[x]<dep[y]) return x;return y;\n}\ninline void ins(int x) {//\u5efa\u7acb\u865a\u6811 \n\tif(!stop) { stac[stop=1]=x;return; }\n\tint anc=lca(stac[stop],x);\n\twhile(stop&&dep[anc]<dep[stac[stop]]) add(stac[stop-1],stac[stop]),--stop;\n\tif(!stop||stac[stop]!=anc) stac[++stop]=anc;\n\tstac[++stop]=x;\n}\ninline void dfs3(int x) {\n\tif(siz[x]) {\n\t\tfor(reg int i=h[x];i;i=edg[i].next) {\n\t\t\tint y=edg[i].y;dfs3(y);\n\t\t\tif(siz[y]) siz[y]=0,++ans;//\u5982\u679c\u5b50\u6811\u4e2d\u6709\u94a6\u5b9a\u70b9\uff0c\u76f4\u63a5\u65ad\u5f00 \uff08\u4e00\u5b9a\u5408\u6cd5\uff0c\u56e0\u4e3a\u4e0d\u5408\u6cd5\u7684\u5df2\u7ecf\u53bb\u9664\uff09 \n\t\t}\n\t}\n\telse {\n\t\tfor(reg int i=h[x];i;i=edg[i].next) {\n\t\t\tint y=edg[i].y;\n\t\t\tdfs3(y),siz[x]+=siz[y],siz[y]=0;\n\t\t}\n\t\tif(siz[x]>1) ++ans,siz[x]=0;//\u5373\u4f7f\u5f53\u524d\u70b9\u4e0d\u662f\u94a6\u5b9a\u70b9\uff0c\u5982\u679c\u5b50\u6811\u4e2d\u6709\u591a\u4e2a\u94a6\u5b9a\u70b9\uff0c\u65ad\u5f00 \n\t}\n\th[x]=0;//\u6e05\u7a7a \n}\nint main() {\n\tn=read();\n\tfor(reg int i=1;i<n;++i) {\n\t\tint x=read(),y=read();\n\t\tadd(x,y),add(y,x);\n\t}\n\tdfs1(dep[1]=1,0),dfs2(top[1]=1),q=read(),vist=0;;\n\tmemset(h,0,sizeof(h))/*\u6e05\u7a7a\u539f\u5148\u7684\u8fb9\u7684\u5173\u7cfb*/,memset(siz,0,sizeof(siz));\n\tfor(reg int i=1;i<=q;++i) {\n\t\tint x=1;m=read();\n\t\tfor(reg int i=1;i<=m;++i) a[i]=read(),siz[a[i]]=1;\n\t\tfor(reg int i=1;i<=m;++i) if(siz[fa[a[i]]]) { printf(\"-1\\n\"),x=0;break; }//\u5224\u65e0\u89e3 \n\t\tif(!x) { while(m) siz[a[m]]=0,--m;continue; }\n\t\tans=0,sort(a+1,a+m+1,cmp);//\u6309dfs\u5e8f\u6392\u5e8f \n\t\tif(a[1]!=1) stac[stop=1]=1;\n\t\tfor(reg int i=1;i<=m;++i) ins(a[i]);\n\t\tif(stop) while(--stop) add(stac[stop],stac[stop+1]);\n\t\tdfs3(1),siz[1]=vist=0,printf(\"%d\\n\",ans);\n\t} \n}\n```\n",
        "postTime": 1583659444,
        "uid": 134640,
        "name": "zsaskk",
        "ccfLevel": 0,
        "title": "CF613D \u3010Kingdom and its Cities\u3011"
    }
]