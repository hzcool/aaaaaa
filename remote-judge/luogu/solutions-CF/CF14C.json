[
    {
        "content": "### - \u9898\u610f\n\n\u5728\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfb\u5185\uff0c\u7ed9\u5b9a\u56db\u6761\u7ebf\u6bb5\u7684\u7aef\u70b9\uff0c\u95ee\u80fd\u4e0d\u80fd\u56f4\u6210\u4e00\u4e2a**\u77e9\u5f62**\n\n### - \u601d\u8def\n\n\u7528**\u7ed3\u6784\u4f53**\u5b58\u6bcf\u4e00\u4e2a\u7aef\u70b9\u7684\u5750\u6807\u3002$\\because$ \u8981\u56f4\u6210\u4e00\u4e2a\u77e9\u5f62\uff0c$\\therefore$ \u53ea\u8981\u5224\u65ad\u6bcf\u4e2a\u7aef\u70b9\u662f\u4e0d\u662f\u548c**\u53e6\u4e00\u6761**\u7ebf\u6bb5\u7684\u4e00\u4e2a\u7aef\u70b9\u91cd\u5408\u5373\u53ef\u3002\n\n##### \u5751\u70b9\n\n1. \u5224\u65ad\u6bcf\u4e00\u6761\u8fb9\u662f\u5426\u5e73\u884c\u4e8e\u5750\u6807\u8f74\uff1b\n2. \u5224\u65ad\u4e00\u6761\u8fb9\u662f\u5426\u53d8\u6210\u4e86\u4e00\u4e2a\u70b9\uff0c\u5373\u4e24\u4e2a\u7aef\u70b9\u76f8\u540c\uff1b\n3. \u5224\u65ad\u662f\u5426\u53ea\u6709\u4e24\u6761\u8fb9\u5e73\u884c\u4e8e\u540c\u4e00\u5750\u6807\u8f74\n4. \u5224\u65ad\u4e00\u4e2a\u70b9\u662f\u5426\u8fde\u63a5\u4e86\u4e24\u6761\u4ee5\u4e0a\u7684\u8fb9\u6216\u53ea\u8fde\u63a5\u4e86\u4e00\u6761\uff08\u8fd9\u4e2a\u70b9\u88ab\u5361\u4e86\u597d\u4e45\u3002\u3002\u3002\uff09\n\n\u8fd9\u9053\u9898\u7684\u5751\u70b9\u662f\u771f\u7684\u591a\uff01\n\n### - \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node{\n\tint x;\n\tint y;\n\tbool b; //\u5224\u65ad\u662f\u5426\u5df2\u7ecf\u6709\u76f8\u540c\u7684\u70b9\n}a[114];\nint ax,ay,l; //ax\uff0cay\u662f\u5e73\u884c\u4e8ex\u8f74\uff0cy\u8f74\u7684\u8fb9\u7684\u6570\u91cf\nint main() {\n\tfor(int i=1; i<=4; i++) {\n\t\tint x1,y1,x2,y2;\n\t\tcin>>x1>>y1>>x2>>y2;\n\t\tif((x1==y1&&x2==y2)||(x1!=x2&&y1!=y2)) { //\u5751\u70b91\uff0c2\n\t\t\tcout<<\"NO\";\n\t\t\treturn 0;\n\t\t}\n\t\tif(x1==x2) ax++; \n                if(y1==y2) ay++; \n                a[++l].x=x1;\n                a[l].y=y1;\n                a[++l].x=x2;\n                a[l].y=y2;\n\t}\n\tif(ax!=2||ay!=2) { //\u5751\u70b93\n\t\tcout<<\"NO\";\n\t\treturn 0;\n\t}\n\tfor(int i=1; i<=l; i++) {\n\t\tif(a[i].b) continue; // \u5df2\u7ecf\u627e\u5230\u76f8\u540c\u7684\u70b9\u5c31\u8df3\u8fc7\n\t\tint p=0; //\u8ddf\u8fd9\u4e2a\u7aef\u70b9\u76f8\u540c\u7684\u70b9\u7684\u6570\u91cf\n\t\tfor(int j=i+1;j<=l;j++) {\n\t\t\tif(a[i].x==a[j].x&&a[i].y==a[j].y) {\n\t\t\t\tp++;\n\t\t\t\ta[j].b=1;\n\t\t\t}\n\t\t}\n\t\tif(p!=1) { //\u5751\u70b94\n\t\t\tcout<<\"NO\";\n\t\t\treturn 0;\t\n\t\t}\n\t}\n\tcout<<\"YES\";\n\treturn 0;\n}\n```\n",
        "postTime": 1652269181,
        "uid": 373274,
        "name": "\u6668\u00b7\u66e6",
        "ccfLevel": 5,
        "title": "CF14C\u306e\u9898\u89e3"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF14C)\n\n\u7ed9\u51fa\u56db\u6761\u7ebf\u6bb5\u7684\u8d77\u7ec8\u70b9\u5750\u6807\uff0c\u56db\u6761\u7ebf\u6bb5\u5e73\u884c\u6216\u5782\u76f4\u5750\u6807\u8f74\uff0c\u95ee\u8fd9\u56db\u6761\u7ebf\u6bb5\u80fd\u5426\u6784\u6210\u77e9\u5f62\u3002\u6a6b\uff0c\u7eb5\u5750\u6807\u7684\u7edd\u5bf9\u503c\u7edd\u4e0d\u8d85\u8fc7 $10^9$\u3002\n\n\u4e00\u9053\u7b80\u5355\u7684\u51e0\u4f55\u9898\uff0c\u76f4\u63a5\u8bf4\u601d\u8def\uff1a\n\n- \u68c0\u67e5\u6bcf\u6761\u8fb9\u6709\u6ca1\u6709\u9000\u5316\u6210\u70b9\uff08\u5373\u4e3a\u8fb9\u7684\u8d77\u7ec8\u70b9\u6a2a\u7eb5\u5750\u6807\u6709\u6ca1\u6709\u5206\u522b\u90fd\u76f8\u7b49\uff09\u548c\u662f\u5426\u5782\u76f4\u6216\u5e73\u884c\u4e8e\u4e8e\u5750\u6807\u8f74\uff08\u5373\u4e3a\u8fb9\u7684\u8d77\u7ec8\u70b9\u6a2a\u7eb5\u5750\u6807\u6709\u6ca1\u6709\u90fd\u4e0d\u76f8\u7b49\uff09\u3002\n\n```cpp\nif (x1 == x2 && y1 == y2 || x1 != x2 && y1 != y2) {\n\tans = false;\n}\n```\n- \u68c0\u67e5\u6bcf\u4e2a\u65b9\u5411\u7684\u8fb9\u662f\u5426\u90fd\u6709\u4e24\u6761\uff08\u53ea\u7528\u5224\u65ad\u4e00\u4e2a\u65b9\u5411\u8fb9\u7684\u4e2a\u6570\u5373\u53ef\uff0c\u56e0\u4e3a\u603b\u6570\u662f\u56fa\u5b9a\u7684\uff09\u3002\n\n```cpp\nint countY = 0;\n\nif (x1 == x2){\n\tcountY++;\n}\n\nif (countY != 2) {\n\tans = false;\n}\n```\n\n- \u5c06\u56db\u6761\u8fb9\u7684\u516b\u4e2a\u8d77\u7ec8\u70b9\u6392\u5e8f\u540e\uff0c\u5224\u65ad\u516b\u4e2a\u70b9\u662f\u5426\u4e24\u4e24\u91cd\u5408\u3002\n\n```cpp\nsort(pos + 1, pos + 8 + 1);\n\nif (!(pos[1] == pos[2] && pos[3] == pos[4] && pos[5] == pos[6] && pos[7] == pos[8] && pos[2] != pos[3] && pos[4] != pos[5] && pos[6] != pos[7])) {\n\tans = false;\n}\n```\n\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```cpp\n\n\n#include <bits/stdc++.h> \n\nusing namespace std;\n\nstruct node {\n\tint x, y;\n\t\n\tbool operator < (const node & one) const {\n\t\tif (x == one.x) {\n\t\t\treturn y < one.y;\n\t\t}\n\t\t\n\t\treturn x < one.x; \n\t}\n\t\n\tbool operator == (const node & one) const {\n\t\treturn x == one.x && y == one.y; \n\t}\n\t\n\tbool operator != (const node & one) const {\n\t\treturn !(x == one.x && y == one.y); \n\t}\n}pos[19];\n\nbool ans = true;\n\nint main () {\n\tint countY = 0;\n\t\n\tfor (int i = 1; i <= 4; i++) {\n        scanf(\"%d %d %d %d\", &pos[2 * i - 1].x, &pos[2 * i - 1].y, &pos[2 * i].x, &pos[2 * i].y);\n\t\t\n\t\tif (pos[2 * i - 1].x == pos[2 * i].x && pos[2 * i - 1].y == pos[2 * i].y || pos[2 * i - 1].x != pos[2 * i].x && pos[2 * i - 1].y != pos[2 * i].y) {\n\t\t\tans = false;\n\t\t}\n\t\t\n\t\tif (pos[2 * i - 1].x == pos[2 * i].x) {\n\t\t\tcountY++;\n\t\t}\n\t}\n\t\n\tif (countY != 2) {\n\t\tans = false;\n\t}\n\t\n\telse if (ans) {\n\t\tsort(pos + 1, pos + 8 + 1);\n\t\t\n\t\tif (!(pos[1] == pos[2] && pos[3] == pos[4] && pos[5] == pos[6] && pos[7] == pos[8] && pos[2] != pos[3] && pos[4] != pos[5] && pos[6] != pos[7])) {\n\t\t\tans = false;\n\t\t}\n\t}\n\t\n\tif (ans) {\n\t\tprintf(\"YES\\n\");\n\t}\n\t\n\telse {\n\t\tprintf(\"NO\\n\");\n\t}\n\t\n\treturn 0;\n}\n```\n",
        "postTime": 1621262336,
        "uid": 299086,
        "name": "Mistybranch",
        "ccfLevel": 5,
        "title": "CF14C Four Segments"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n> \u7ed9\u5b9a\u56db\u4e2a\u70b9\uff0c\u8be2\u95ee\u5b83\u4eec\u80fd\u5426\u7ec4\u6210\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\u4e0a\u7684\u9762\u79ef\u4e0d\u4e3a $0$ \u7684\u5404\u8fb9\u5e73\u884c\u4e8e\u5750\u6807\u8f74\u4e0a\u7684\u77e9\u5f62\u3002\n\n## \u9898\u89e3\n\n\u8003\u8651\u76f4\u63a5\u679a\u4e3e\u77e9\u5f62\u7684\u5bf9\u89d2\u7ebf\u4e0a\u7684\u70b9\u3002\u7531\u4e8e\u76ee\u6807\u77e9\u5f62\u7684\u56db\u6761\u8fb9\u5e73\u884c\u4e8e\u5750\u6807\u8f74\uff0c\u56e0\u6b64\u53ef\u4ee5\u6c42\u51fa\u7ec4\u6210\u8be5\u77e9\u5f62\u7684\u56db\u6761\u8fb9\u3002\u5728\u8bfb\u5165\u7684\u65f6\u5019\u7528\u4e2a $\\text{map}$ \u5b58\u4e0b\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\u4e0a\u6709\u54ea\u4e9b\u8fb9\uff0c\u7136\u540e\u5224\u65ad\u5373\u53ef\u3002\n\n\u6ce8\u610f\u5728\u679a\u4e3e\u5bf9\u89d2\u7ebf\u4e0a\u7684\u70b9\u65f6\u5224\u4e00\u4e0b\u8fd9\u4e24\u4e2a\u70b9\u7684 $x$ \u5750\u6807\u548c $y$ \u5750\u6807\u662f\u5426\u5b58\u5728\u76f8\u540c\u3002\u82e5\u76f8\u540c\u5219\u4e0d\u5408\u6cd5\u3002\n\n## \u53c2\u8003\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define up(l,r,i) for(int i=l,END##i=r;i<=END##i;++i)\n#define dn(r,l,i) for(int i=r,END##i=l;i>=END##i;--i)\nusing namespace std;\ntypedef pair<int,int> pii;\nconst int INF =2147483647;\nmap<pair<pii,pii>,bool> M;\npii P[8]; int n;\nint main(){\n    up(0,3,i){\n        int a,b,x,y; scanf(\"%d%d%d%d\",&a,&b,&x,&y);\n        P[n++]={a,b},P[n++]={x,y};\n        M[{P[n-2],P[n-1]}]=M[{P[n-1],P[n-2]}]=true;\n    }\n    up(0,7,i) up(0,i+1,j){\n        auto x=P[i],y=P[j],a=x,b=y;\n        if(x.first==y.first||x.second==y.second) continue;\n        a.second=y.second,b.second=x.second;\n        if(M[{x,a}]&&M[{a,y}]&&M[{y,b}]&&M[{b,x}])\n            puts(\"YES\"),exit(0);\n    }\n    puts(\"NO\"); return 0;\n}\n```",
        "postTime": 1632881475,
        "uid": 330759,
        "name": "\u56e7\u4ed9",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF14C \u3010Four Segments\u3011"
    },
    {
        "content": "\u603b\u4f53\u601d\u8def\u5c31\u662f\u5224\u65ad\u76f4\u7ebf\u6240\u6709\u7aef\u70b9\u51fa\u73b0\u7684\u6b21\u6570\u4ee5\u53ca\u6bcf\u6761\u76f4\u7ebf\u7684\u72b6\u6001\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint tot,cntx,cnty,sum;\n\nstruct node{\n\tint x,y;\n\tbool used;\n};\nnode a[10];\n\nint main(){\n\tfor(int i=1;i<=4;++i){\n\t\tint x1,y1,x2,y2;\n\t\tscanf(\"%d %d %d %d\",&x1,&y1,&x2,&y2);\n\t\t//\u628a\u70b9\u52a0\u5165a\u6570\u7ec4\u4e2d \n\t\ta[++tot]=(node){x1,y1};\n\t\ta[++tot]=(node){x2,y2};\n\t\t//\u7edf\u8ba1\u5e73\u884c\u4e8ex\u8f74 y\u8f74\u7684\u76f4\u7ebf\u5404\u6709\u51e0\u6761 \u5982\u679c\u51fa\u73b0\u659c\u7ebf\u5219\u8f93\u51faNO \n\t\tif(x1!=x2 && y1!=y2){\n\t\t\tputs(\"NO\");\n\t\t\treturn 0;\n\t\t}\n\t\tif(x1==x2)\n\t\t\t++cntx;\n\t\tif(y1==y2)\n\t\t\t++cnty;\n\t}\n\tif(cntx!=2 || cnty!=2){\n\t\tputs(\"NO\");\n\t\treturn 0;\n\t}\n\t//\u5224\u65ad\u51fa\u73b0\u4e0d\u540c\u70b9\u7684\u6570\u91cf \u66b4\u529b\u679a\u4e3e\u4e24\u4e24\u4e0d\u540c\u7684\u70b9 \n\tfor(int i=1;i<=tot;++i){\n\t\tint cnt=0;\n\t\tif(a[i].used)\n\t\t\tcontinue;\n\t\t//\u904d\u5386\u8fc7\u4e86\u5c31\u8df3 \n\t\tfor(int j=i+1;j<=tot;++j)\n\t\t\tif(a[i].x==a[j].x && a[i].y==a[j].y){\n\t\t\t\t++cnt;\n\t\t\t\ta[j].used=true;\n\t\t\t}\n\t\tif(cnt!=1){\n\t\t\tputs(\"NO\");\n\t\t\treturn 0;\n\t\t}\n\t\t//\u6bcf\u4e2a\u70b9\u5728\u6b63\u5e38\u60c5\u51b5\u4e0b\u4f1a\u88ab\u4e24\u6761\u76f4\u7ebf\u7ecf\u8fc7\uff0c\u6240\u4ee5\u9664\u53bb\u7b2c\u4e00\u6b21\u4fbf\u5229\u7684\u70b9\u8fd8\u6709\u4e00\u7ec4\u70b9\u548c\u5b83\u76f8\u540c \n\t\t++sum;\n\t}\n\tif(sum==4)\n\t\tputs(\"YES\");\n\telse\n\t\tputs(\"NO\");\n}\n```\n",
        "postTime": 1567388237,
        "uid": 32245,
        "name": "Gogococoyoyo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF14C \u3010Four Segments\u3011"
    },
    {
        "content": "**[\u9898\u89e3 \u3010CF14C Four Segments\u3011](https://www.luogu.com.cn/problem/CF14C)**    \n# Solution  \n\n\u5148\u5728\u5927\u8111\u91cc\u753b\u4e00\u4e2a\u77e9\u5f62\u3002  \n\u7136\u540e\u5c31\u6709\u4e86\u5bf9\u4e8e\u89e3\u51b3\u8fd9\u9053\u9898\u76ee\u7684\u51e0\u4e2a\u5173\u952e\u6027\u8d28\u3002  \n- 1\uff1a\u5bf9\u8fb9\u5e73\u884c\uff0c\u90bb\u8fb9\u5782\u76f4  \n- 2\uff1a\u56db\u6761\u7ebf\u6bb5**\u9996\u5c3e**\u62fc\u63a5\u800c\u6210\n\n\u597d\uff0c\u63a5\u4e0b\u6765\u4e13\u95e8\u89e3\u51b3\u4e00\u4e9b\u7ec6\u8282\u3002  \n\u9898\u76ee\u4e2d\u5df2\u7ecf\u4fdd\u8bc1\u4e86\u8f93\u5165\u6570\u636e\u4e0e\u5750\u6807\u8f74\u5e73\u884c\uff0c\u6240\u4ee5\u8bf4\u53ef\u4ee5\u4e0d\u7528\u5224\u65ad\u8fd9\u4e2a\u95ee\u9898\uff0c\u5f53\u7136\uff0c\u5224\u65ad\u4e00\u4e0b\u66f4\u597d\u3002  \n\u5728\u4fdd\u8bc1\u4e0a\u8ff0\u6761\u4ef6\u7684\u540c\u65f6\uff0c\u7b2c\u4e8c\u4e2a\u8981\u505a\u7684\u4e8b\u60c5\u5c31\u662f\u5224\u65ad\u662f\u5426\u7531\u56db\u6761\u7ebf\u6bb5\u9996\u5c3e\u62fc\u63a5\u800c\u6210\uff0c\u8fd9\u4e2a\u53ea\u9700\u8981\u5224\u65ad\u7ebf\u6bb5\u7684\u6bcf\u4e00\u4e2a\u7aef\u70b9\u662f\u5426\u51fa\u73b0\u4e24\u6b21\u5373\u53ef\u3002  \n\u6700\u540e\u5224\u65ad\u4e00\u4e0b\u8fd9 4 \u6761\u7ebf\u6bb5\u662f\u5426\u51fa\u73b0\u91cd\u5408\u73b0\u8c61\u3002  \n\u8fd9\u9898\u5c31\u505a\u5b8c\u4e86\uff0c\u89c9\u5f97\u8bc4\u6a59\u5c31\u5dee\u4e0d\u591a\u4e86\u3002\n\n# Code  \n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define gc getchar\ninline int read() {\n\tint c = gc(), t = 1, n = 0;\n\twhile(isspace(c)) { c = gc(); }\n\tif(c == '-') { t = -1, c = gc(); }\n\twhile(isdigit(c)) { n = n * 10 + c - '0', c = gc(); }\n\treturn n * t;\n}\n#undef gc\n\nmap <pair <int,int>,int>mp;\n\nint a,b,c,d;\nint x,y,cnt;\n\nint main() {\n\tfor(int i = 1;i <= 4;i++) {\n\t\ta = read(); b = read();\n\t\tc = read(); d = read();\n\t\tmp[make_pair(a,b)]++; mp[make_pair(c,d)]++;\t//\u5148\u5b58\u4e0b\u6240\u6709\u7684\u70b9\uff0c\u8fd9\u6837\u5b50\u5c31\u53ef\u4ee5\u65b9\u4fbf\u5224\u91cd\n\t\tif(a != c && b != d) puts(\"NO\"),exit(0);\t//\u5982\u679c\u8bf4\u8f93\u5165\u4e0d\u7b26\u5408\u9898\u76ee\u8981\u6c42\uff0c\u80af\u5b9a\u662f\u4e0d\u884c\u7684\n\t\tx += (a == c); y += (b == d);\t//\u641e\u51fa\u6765\u8fd9\u662f\u548c\u4ec0\u4e48\u8f74\u5e73\u884c\u7684\uff0c\u6613\u5f97\u6709\u4e14\u53ea\u6709\u4e24\u6761\u7ebf\u6bb5\u4f1a\u4e0e\u540c\u4e00\u8f74\u5e73\u884c\n\t\tcnt += (mp[make_pair(a,b)] == 2);\t//\u5224\u65ad\u6709\u51e0\u4e2a\u70b9\u91cd\u5408\uff0c\u6613\u5f97\u6709\u4e14\u53ea\u6709\u56db\u4e2a\u70b9\u4f1a\u91cd\u5408\n\t\tcnt += (mp[make_pair(c,d)] == 2);\t//\u540c\u4e0a\n\t}\n\tif(x != 2 || y != 2 || cnt != 4) puts(\"NO\"),exit(0);\t//\u5982\u679c\u4e0d\u6ee1\u8db3\u4ee5\u4e0a\u6761\u4ef6\uff0c\u5c31\u8f93\u51fa\u4e0d\u7b26\u5408\n\tputs(\"YES\");\n\treturn 0;\n}\n\n```",
        "postTime": 1634276822,
        "uid": 86971,
        "name": "TRZ_2007",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 \u3010CF14C Four Segments\u3011"
    },
    {
        "content": "### \u524d\u8a00\n\n\u8fd9\u9053\u9898\u76ee\u770b\u4f3c\u5f88\u7b80\u5355\u5b9e\u9645\u4e0a\u8fd8\u662f\u6709\u5f88\u591a\u7684\u7ec6\u8282\u8981\u6ce8\u610f\u4e00\u4e0b\u3002\n\n### \u5206\u6790\n\n\u9898\u76ee\u5c31\u662f\u8bf4\uff0c\u6709 $4$ \u6761\u7ebf\u6bb5\uff0c\u90a3\u4e48\u95ee\u8fd9 $4$ \u6761\u662f\u5426\u53ef\u4ee5\u6784\u6210\u4e00\u4e2a\u77e9\u9635\u3002\n\n\u4f46\u662f\u9898\u76ee\u6ca1\u6709\u8bf4 **\u6ca1\u6709\u659c\u8fb9**\uff0c**\u6ca1\u6709\u91cd\u8fb9**\uff0c**\u6ca1\u6709\u91cd\u70b9**\u3002\n\n\u8fd9 $3$ \u4e2a\u6761\u4ef6\u8fd8\u662f\u6bd4\u8f83\u91cd\u8981\u7684\u3002\n\n\u600e\u4e48\u5904\u7406\u659c\u8fb9\u5462\uff1f\n\n\u90a3\u4e48\u6211\u4eec\u7528\u4e00\u4e2a\u5224\u65ad\uff1a\n\n```cpp\nif (x!=x_ && y!=y_) return 0&puts(\"NO\");\n```\n\n\u5982\u679c\u8bf4\u4e24\u4e2a $x,y$ \u90fd\u4e0d\u4e00\u6837\uff0c\u90a3\u4e48\u8bc1\u660e\u662f\u659c\u8fb9\u3002\n\n\u91cd\u70b9\u600e\u4e48\u5904\u7406\u5462\uff1f\n\n\u5f00\u4e2a map \uff0c$x$ \u548c $y$ \u5982\u679c\u51fa\u73b0\u8fc7\u4e86 $2$ \u6b21\u90a3\u4e48\u5c31\uff0ctot +1\uff0c\u5230\u6700\u540e\u5224\u65ad\u4e00\u4e0b tot \u662f\u4e0d\u662f $4$ \uff0c\u5982\u679c\u662f $4$\uff0c\u90a3\u4e48\u8bc1\u660e\u6ca1\u6709 $4$ \u4e2a\u70b9\uff0c\u4e5f\u5c31\u8868\u793a\u4e0d\u80fd\u6784\u6210\u77e9\u9635\u3002\n\n\u91cd\u8fb9\u600e\u4e48\u5904\u7406\u5462\uff1f\n\n\u91cd\u8fb9\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u7279\u6027\uff0c\u5c31\u662f\u8bf4\u5462\uff0c\u91cd\u8fb9\u7684\u4e24\u4e2a $x$ \u548c $y$ \u90fd\u662f\u4e00\u6837\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c$x$ \u548c \u53e6\u4e00\u4e2a $x$ \uff0c\u6216\u8005 $y$ \u548c \u53e6\u4e00\u4e2a $y$ \uff0c\u90fd\u662f\u76f8\u540c\u7684\u3002\n\n\u4e0a\u9762\u7684\u8bdd\u5982\u679c\u8bfb\u4e0d\u61c2\u53ef\u4ee5\u591a\u8bfb\u51e0\u904d\uff0c\u6216\u8005\u5728\u7eb8\u4e0a\u6a21\u62df\u4e00\u4e0b\u3002\n\n\u90a3\u4e48\u6211\u4eec\u7528\u51e0\u4e2a\u4e2a\u5224\u65ad\u5904\u7406\uff1a\n\n```cpp\n                if (x==x_) tot_x++;\n                if (y==y_) tot_y++;\n                ...\n                if (tot_x!=2 || tot_y!=2) return 0&puts(\"NO\");//\u5728\u666e\u901a\u7684\u60c5\u51b5\u4e4b\u4e0b\uff0ctot_x \u548c tot_y \u90fd\u662f 2\u3002\n```\n\n\u5982\u679c\u662f\u91cd\u8fb9\u7684\u8bdd tot_x \u6216\u8005 tot_y \u5c31\u662f $4$ \u3002\n\n\u7136\u540e\u5c31 AC \u4e86\u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <map>\n//\u5934\u6587\u4ef6\u4e0d\u591a\u8bf4\u3002\nusing namespace std;\nmap< pair<int,int>,int> Map;\n//map + pair \u8bbe\u5b9a\u3002\nint tot_x,tot_y,tot;\n//\u51e0\u4e2a\u5224\u91cd\u590d\u7684\u53d8\u91cf\u3002\nsigned main()\n{\n        for (int i=1; i<=4; ++i) {\n                int x=0,y=0,x_=0,y_=0;\n                scanf(\"%d %d %d %d\",&x,&y,&x_,&y_);\n                //\u8bfb\u5165 4 \u4e2a\u70b9\u3002\n                Map[make_pair(x,y)]++;\n                Map[make_pair(x_,y_)]++;\n                //\u8fd9\u51e0\u4e2a\u5143\u7d20+1\u3002\n                if (x!=x_ && y!=y_) return 0&puts(\"NO\");\n                //\u5982\u679c\u662f\u659c\u8fb9\u90a3\u4e48\uff0c\u8f93\u51fa \"NO\"\u3002\n                if (x==x_) tot_x++;\n                if (y==y_) tot_y++;\n                //\u5224\u65ad\u91cd\u8fb9\u3002\n                if (Map[make_pair(x,y)]==2) tot++;\n                if (Map[make_pair(x_,y_)]==2) tot++;\n                //\u5224\u65ad\u91cd\u70b9\u3002\n        }\n        if (tot_x!=2 || tot_y!=2) return 0&puts(\"NO\");//\u5982\u679c\u662f\u91cd\u8fb9\u90a3\u4e48\u8f93\u51fa \"NO\" \u3002\n        if (tot==4) return 0&puts(\"YES\");\n        //\u5982\u679c\u8bf4\u4e0d\u662f\u91cd\u70b9\uff0c\u90a3\u4e48\u5c31\u8f93\u51fa \"YES\" \u3002\n        // puts(\"ok\");\n        // printf(\"%lld\\n\",Map.size());\n        return 0&puts(\"NO\");//\u5982\u679c\u662f\u91cd\u70b9\u90a3\u4e48 \u8f93\u51fa \"NO\"\u3002\n}\n\n```\n\n### \u5199\u5728\u540e\u9762\u7684\u8bdd\n\n\u6211\u8fd9\u7bc7\u9898\u89e3\u5982\u679c\u6709\u9519\u8bef\uff0c\u90a3\u4e48\u8bf7\u5728\u8bc4\u8bba\u533a\u91cc\u7559\u8a00\uff0c\u6211\u5c06\u4f1a\u5f88\u611f\u8c22\u53cd\u6620\u7684\u4eba\u3002\n\n**\u8c22\u8c22\u89c2\u8d4f\uff01**",
        "postTime": 1586307843,
        "uid": 260980,
        "name": "cstdios",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF14C \u3010Four Segments\u3011"
    },
    {
        "content": "[\u539f\u9898\u94fe\u63a5](https://www.luogu.com.cn/problem/CF14C)\n\n[Codeforces \u94fe\u63a5](https://codeforces.com/problemset/problem/14/C)\n\n\u9898\u76ee\u5927\u610f\uff1a\n\n\u8fd9\u4e00\u4e2a\u9898\u8ba9\u6211\u4eec\u8f93\u5165\u56db\u4e2a\u5750\u6807 $(x,y)$\uff0c\u5224\u65ad\u8fd9\u56db\u4e2a\u70b9\u80fd\u5426\u7ec4\u6210\u957f\u65b9\u5f62\uff0c\u5982\u679c\u80fd\u8f93\u51fa $\\texttt{YES}$\uff0c\u5426\u5219\u8f93\u51fa $\\texttt{NO}$\u3002\n\n\u601d\u8def\uff1a\n\n\u56e0\u4e3a\u8fd9\u4e00\u4e2a\u9898\u53ea\u9700\u8981\u6211\u4eec\u5224\u65ad\u662f\u5426\u80fd\u7ec4\u6210\u957f\u65b9\u5f62\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5148\u5224\u65ad\u8fd9\u4e9b\u4e1c\u897f\uff1a\n\n1. \u8fd9\u4e9b\u7ebf\u6bb5\u662f\u5426\u9000\u5316\u6210\u4e86\u70b9\uff08\u5373\u7ebf\u6bb5\u7684\u4e24\u4e2a\u7aef\u70b9\u4e00\u6837\uff09\uff1b\n1. \u6a2a\u7740\u7684\u7ebf\u6bb5\u548c\u7ad6\u7740\u7684\u7ebf\u6bb5\u662f\u5426\u90fd\u53ea\u7528\u4e24\u6761\uff08__\u6ce8\u610f\uff1a\u56e0\u4e3a\u8fd9\u4e9b\u70b9\u603b\u5171\u624d\u56db\u6761\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u8bb0\u5f55\u6a2a\u7740\u7684__\uff09\uff1b\n1. \u6bcf\u4e2a\u70b9\u662f\u5426\u53ea\u91cd\u590d\u4e86\u4e24\u6b21\u3002\n\n\u7528\u4e00\u4e2a```bool```\u7c7b\u578b\u53d8\u91cf\u628a\u662f\u5426\u6709\u9519\u8bef\u8bb0\u5f55\u4e0b\u6765\uff0c\u6309\u65f6\u8f93\u51fa\u5c31\u884c\u4e86\u3002\n\n\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nstruct node{\n    int x, y;\n}nd[9];\n\ninline bool cmp(const node &a, const node &b){// \u53cc\u5173\u952e\u5b57\u6392\u5e8f\u6bd4\u8f83\u51fd\u6570\n    if (a.x != b.x){\n        return a.x < b.x;\n    }\n    return a.y < b.y;\n}\n\ninline bool is_equal(const node &a, const node &b){// \u5224\u65ad\u4e24\u4e2a\u5750\u6807\u662f\u5426\u4e00\u6837\n    return a.x == b.x && a.y == b.y;\n}\n\nint main(){\n    cin.tie(NULL);\n    cout.tie(NULL);\n    ios::sync_with_stdio(false);// cin\u3001cout\u52a0\u901f\n    bool flag = false;\n    int cnt_x = 0, cnt_y = 0;\n    for (int i = 1; i <= 4; i++){\n        cin >> nd[(i << 1) - 1].x >> nd[(i << 1) - 1].y >> nd[i << 1].x >> nd[i << 1].y;\n        if (is_equal(nd[(i << 1) - 1], nd[i << 1])){\n            flag = true;// \u5982\u679c\u8fd9\u4e00\u6761\u7ebf\u9000\u5316\u6210\u4e86\u70b9\uff0c\u5c31\u8bb0\u5f55\u4e0b\u6765\n        } else if (nd[(i << 1) - 1].x == nd[i << 1].x){\n            cnt_x++;// \u5c06\u6a2a\u7740\u7684\u8bb0\u5f55\u4e0b\u6765\n        }\n    }\n    if (flag || cnt_x != 2){// \u5982\u679c\u6709\u9519\u8bef\u6216\u8005\u6a2a\u7740\u7684\u4e0d\u662f\u4e24\u6761\n        cout << \"NO\\n\";// \u90a3\u4e48\u8f93\u51fa\u5e76\u9000\u51fa\u7a0b\u5e8f\n        return 0;\n    }\n    sort(nd + 1, nd + 9, cmp);// \u6ce8\u610f\uff1a\u8981\u6392\u5e8f\uff01\n    if (!(is_equal(nd[1], nd[2]) && is_equal(nd[3], nd[4]) && is_equal(nd[5], nd[6]) && is_equal(nd[7], nd[8]) && !is_equal(nd[2], nd[3]) && !is_equal(nd[4], nd[6]) && !is_equal(nd[6], nd[7]))){// \u5224\u65ad\u8fd9\u4e9b\u70b9\u662f\u5426\u53ea\u91cd\u590d\u4e86\u4e24\u6b21\n        flag = true;\n    }\n    if (flag){// \u8f93\u51fa\n        cout << \"NO\\n\";\n    } else {\n        cout << \"YES\\n\";\n    }\n    return 0;\n}\n```",
        "postTime": 1678011246,
        "uid": 694118,
        "name": "shaozhehan",
        "ccfLevel": 4,
        "title": "\u9898\u89e3CF14C"
    },
    {
        "content": "#### \u9898\u610f\n\u7ed9\u51fa\u56db\u6761\u7ebf\u6bb5\u7684\u4e24\u4e2a\u7aef\u70b9\u5750\u6807\uff0c\u5224\u65ad\u8fd9\u56db\u6761\u7ebf\u80fd\u5426\u7ec4\u6210\u4e00\u4e2a\u56db\u8fb9\u5e73\u884c\u4e8e\u5750\u6807\u8f74\u7684\u957f\u65b9\u5f62\u3002\n\n#### \u5206\u6790\n\n\u9996\u5148\u9898\u76ee\u8981\u6c42\u8fb9\u5e73\u884c\u4e8e\u5750\u6807\u8f74\uff0c\u6240\u4ee5\u8981\u5982\u679c\u6709\u4e0d\u5e73\u884c\u4e8e\u4efb\u4e00\u5750\u6807\u8f74\u7684\u8fb9\u65f6\u4e00\u5b9a\u8f93\u51fa `NO` \u3002\n\n\u6570\u636e\u53ef\u80fd\u4f1a\u51fa\u73b0 $x_1=x_2$ \u5e76\u4e14 $y_1=y_2$ \u7684\u60c5\u51b5\uff0c\u6b64\u65f6\u8be5\u8fb9\u9000\u5316\u4e3a\u4e00\u70b9\uff0c\u4e0d\u53ef\u80fd\u7ec4\u6210\u957f\u65b9\u5f62\uff0c\u6240\u4ee5\u4e00\u5b9a\u4e3a `NO` \u3002\n\n\u4e00\u4e2a\u6ee1\u8db3\u8981\u6c42\u7684\u957f\u65b9\u5f62\uff0c\u5fc5\u6709\u4e24\u8fb9\u5e73\u884c\u4e8e\u540c\u4e00\u6761\u5750\u6807\u8f74\uff0c\u6240\u4ee5\u5982\u679c\u6709\u66f4\u591a\u7684\u7ebf\u5e73\u884c\u4e8e\u67d0\u4e00\u5750\u6807\u8f74\u65f6\uff0c\u4e0d\u53ef\u80fd\u4e3a\u957f\u65b9\u5f62\u3002\n\n- \u5f53 $y_1=y_2$ \u4e14 $x_1 \\neq x_2$ \u65f6\uff0c\u8be5\u7ebf\u6bb5\u5e73\u884c\u4e8ex\u8f74\n- \u5f53 $x_1=x_2$ \u4e14 $y_1 \\neq y_2$ \u65f6\uff0c\u8be5\u7ebf\u6bb5\u5e73\u884c\u4e8ey\u8f74\n\n\u5728\u53bb\u9664\u4ee5\u4e0a\u60c5\u51b5\u540e\uff0c\u53ef\u4ece\u4e00\u8fb9\u51fa\u53d1\uff0c\u53ef\u53d1\u73b0\u5fc5\u6709\u4e00\u4e2a\u7aef\u70b9\u91cd\u5408\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4ece\u4e00\u8fb9\u51fa\u53d1\uff0c\u9010\u6b65\u5411\u524d\u63a8\uff0c\u5f53\u9047\u5230\u591a\u4e2a\u70b9\u8fde\u63a5\u5728\u540c\u4e00\u6761\u8fb9\u65f6\uff0c\u4e0d\u53ef\u80fd\u4e3a\u957f\u65b9\u5f62\u3002\n\n\u8054\u901a\u56db\u6761\u8fb9\u540e\u5373\u8fd9\u56db\u6761\u8fb9\u53ef\u4ee5\u7ec4\u6210\u957f\u65b9\u5f62\u3002\n\n#### \u4ee3\u7801\n\n```\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nstruct Point {\n    int x, y;\n};\n\nstruct Line {\n    Point f[2]; \n} s[4];\n\nint ax, ay;\nbool use[4];\n\nint main() {\n    for (int i = 0; i < 4; i++) {\n        scanf(\"%d %d %d %d\", &s[i].f[0].x, &s[i].f[0].y, &s[i].f[1].x, &s[i].f[1].y); // \u4e00\u6b21\u8bfb\u5165\u4e00\u6761\u8fb9\n        if (s[i].f[0].x == s[i].f[1].x)\n            ax++; //\u5e73\u884c\u4e8ey\u8f74\n        if (s[i].f[0].y == s[i].f[1].y)\n            ay++; // \u5e73\u884c\u4e8ex\u8f74\n        if (s[i].f[0].y == s[i].f[1].y && s[i].f[0].x == s[i].f[1].x) { // \u8be5\u8fb9\u9000\u5316\u4e3a\u70b9\n            puts(\"NO\");\n            return 0;\n        }\n    }\n    if (ax == ay && ax == 2) {\n        Point now = s[0].f[1]; // \u4ece\u7b2c\u4e00\u6761\u8fb9\u5f00\u59cb\u627e\n        Point ftr = s[0].f[0];\n        int sum = 0;\n        int place = 0;\n        int p = 0;\n        use[0] = 1;\n        while (sum != 3) {\n            int cnt = 0;\n            bool add = false;\n            for (int i = 0; i < 4; i++) {\n                if (use[i] || i == place)\n                    continue;\n                for (int j = 0; j < 2; j++) {\n                    if (now.x == s[i].f[j].x && now.y == s[i].f[j].y) {\n                        add = true;\n                        cnt++;\n                        ftr = s[i].f[!j];\n                        p = i;\n                    }\n                }\n            }\n            if (cnt != 1) { // \u5224\u65ad\u662f\u5426\u53ea\u6709\u4e00\u6761\u8fb9\u4e0e\u8be5\u8fb9\u8fde\u63a5\n                puts(\"NO\");\n                return 0;\n            }\n            if (add && cnt == 1) {\n                use[p] = 1;\n                place = p;\n                now = ftr;\n                sum++;\n            }\n        }\n        if (now.x == s[0].f[0].x && now.y == s[0].f[0].y) { // \u4e0e\u6700\u540e\u4e00\u4e2a\u70b9\u662f\u5426\u80fd\u8fde\u63a5\u4e0a\n            puts(\"YES\");\n            return 0;\n        }\n    }\n    puts(\"NO\");\n    return 0;\n}\n```",
        "postTime": 1602852314,
        "uid": 370805,
        "name": "Insouciant21",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF14C \u3010Four Segments\u3011"
    },
    {
        "content": "~~\u8fd9\u9053\u9898\u4e0d\u96be\uff0c\u4f46\u662f\u60b2\u50ac\u7684\u849f\u84bb\u88ab\u5751\u4e86\u5f88\u4e45\u3002~~\n\n\u6765\u603b\u7ed3\u4e00\u4e0b\u6709\u54ea\u4e9b**\u5751**\u5427\u3002\n\n## 1.\u5224**\u659c\u7ebf**\n\n>\u4e00\u5f00\u59cb\uff0c\u6211\u7684\u7a0b\u5e8f\u6ca1\u6709\u5199**\u659c\u7ebf\u5224\u65ad**,\u7ed3\u679c\u60b2\u60e8 WA \u3002\n\n>\u53d1\u73b0 CF \u6709\u4e2a\u8fd9\u6837\u7684~~\u6bd2\u7624~~\u6570\u636e\uff08\u7b2c\u4e5d\u4e2a\u70b9\uff09\uff1a\n\n```cpp\n0 0 1 1\n1 1 2 0\n2 0 1 -1\n1 -1 0 0\n```\n\n>\u53ea\u9700\u8981**\u8fd9\u4e00\u884c**\uff0c\u5c31\u53ef\u4ee5\u5224\u65ad\u659c\u7ebf\uff1a\n\n```cpp\nif(sx!=ex&&sy!=ey)EXIT;\n```\n\n## 2.\u5224**\u91cd\u8fb9**\n\n>~~\u5751\u7239\u7684~~ CF \u8fd8\u6709\u8fd9\u6837\u7684\u4e00\u4e2a\u6570\u636e\uff1a\n```cpp\n0 0 0 2\n2 0 2 2\n0 2 0 0\n2 2 2 0\n```\n\n>\u660e\u663e\u53d1\u73b0\uff0c\u5b83\u662f\u91cd\u8fb9\u3002\u53ea\u9700\u8981\u5728\u7a0b\u5e8f\u91cc\u52a0\u4e0a\u4e00\u4e2a\u5c0f\u5c0f\u7684\u5224\u65ad\u5373\u53ef\u3002\n\n>\u5177\u4f53\u5b9e\u73b0\u5728\u7a0b\u5e8f\u91cc\u9762\u6709\u3002\n\n## 3.\u5224\u91cd\u5750\u6807\n\n>\u8fd9\u4e00\u6b65\u5176\u5b9e\u4e0d\u96be\uff0c\u6392\u4e00\u4e0b\u5e8f\u518d\u5224\u65ad\u6709\u6ca1\u6709\u4e92\u4e0d\u76f8\u540c\u7684$4$\u4e2a\u70b9\u5373\u53ef\u3002\n\n## 4.\u4e0a\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define inf ((1<<30)-1)\n#define linf ((1<<62)ll-1)\n#define Fu(i,a,b) for(register int i=a;i<=b;i++)\n#define Fd(i,a,b) for(register int i=a;i>=b;i--)\n#define Fn(i,a) for(register int i=las[a];i;i=nex[i])\nint Fl,Pn,SI=100;char mch=' ',ch,Bf[21];\ntemplate<typename t>void in(t&a){a=0;ch=getchar();Fl=1;while((ch<'0')||(ch>'9'))Fl=(ch=='-')?-Fl:Fl,ch=getchar();while((ch>='0')&&(ch<='9'))a=a*10+ch-'0',ch=getchar();a*=Fl;}\ntemplate<typename t>void out(t a){if(a<0)putchar('-'),a=-a;if(a==0)putchar('0');while(a)Bf[++Pn]=a%10+'0',a/=10;while(Pn)putchar(Bf[Pn]),--Pn;putchar(mch);}\ntemplate<typename t,typename ...ARGS>void in(t&a,ARGS&...args){in(a);in(args...);}\ntemplate<typename t,typename ...ARGS>void out(t a,ARGS... args){out(a);out(args...);}\nusing namespace std;\n#define EXIT {cout<<\"NO\";return 0;}\nint cntx,cnty,sx,sy,ex,ey,siz,cnt;\nstruct poin{int x,y;}a[9];\nbool cmp(poin a,poin b)//\u81ea\u5df1\u7f16\u5199\u7684\u6392\u5e8f\u6bd4\u8f83\u51fd\u6570\n{\n\tif(a.x!=b.x)return a.x<b.x;\n\treturn a.y<b.y;\n}\nint main()\n{\n\tFu(i,1,4)\n\t{\n\t\tin(sx,sy,ex,ey);//\u8f93\u5165\n\t\ta[++siz]={sx,sy};\n\t\ta[++siz]={ex,ey};//\u7b49\u4f1a\u52a0\u8fdba\u6570\u7ec4\u91cc\uff0c\u518d\u6392\u5e8f\n\t\tif(sx!=ex&&sy!=ey)EXIT;\n\t\tif(sx==ex)cntx++;//\u5224\u65ad\u91cd\u590d\u7684x\u6709\u591a\u5c11\u4e2a\n\t\tif(sy==ey)cnty++;//\u5224\u65ad\u91cd\u590d\u7684y\u6709\u591a\u5c11\u4e2a\n\t}\n\tif(cntx!=2||cnty!=2)EXIT;//\u5224\u65ad\u91cd\u8fb9,\u6b63\u5e38\u65f6x,y\u5747\u4e3a2\n\tstable_sort(a+1,a+9,cmp);//\u6392\u4e00\u4e0b\u5e8f\n\tFu(i,1,8)if(a[i]!=a[i-1])cnt++;//\u5224\u65ad\u4e0d\u540c\u7684\u6709\u51e0\u4e2a\n    if(cnt==4)cout<<\"YES\";\n    else cout<<\"NO\";\n\treturn 0;\n}\n```",
        "postTime": 1581567443,
        "uid": 121995,
        "name": "SmallTualatin",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF14C \u3010Four Segments\u3011"
    },
    {
        "content": "## \u9898\u610f\uff1a\n\u7ed9\u51fa\u56db\u6761\u7ebf\u6bb5\uff0c\u95ee\u8fd9\u56db\u6761\u7ebf\u6bb5\u662f\u5426\u80fd\u6784\u6210\u77e9\u5f62\u3002\u7ebf\u6bb5\u90fd\u5e73\u884c\u6216\u5782\u76f4\u4e8e\u5782\u76f4\u5750\u6807\u8f74\u3002\n\n## \u601d\u8def\uff1a\n\u5bf9\u4e8e\u5408\u6cd5\u7684\u77e9\u5f62\uff0c\u5fc5\u5b9a\u6709\u4e14\u4ec5\u6709\u56db\u4e2a\u70b9\u91cd\u5408\uff0c\u5e76\u4e14\u5206\u522b\u6709\u4e14\u4ec5\u6709\u4e24\u6761\u8fb9\u5782\u76f4\u548c\u5e73\u884c\u4e8e\u5782\u76f4\u5750\u6807\u8f74\u3002\n\n\u770b\u5230\u6570\u636e\u8303\u56f4\uff0c\u60f3\u5230\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 ```map``` \u6765\u7ef4\u62a4\u70b9\u7684\u91cd\u5408\uff0c\u7528\u4e24\u4e2a\u53d8\u91cf\u6765\u5206\u522b\u7ef4\u62a4\u5782\u76f4\u4e8e\u548c\u5e73\u884c\u4e8e\u5782\u76f4\u5750\u6807\u8f74\u7684\u7ebf\u6bb5\u6570\u3002\u6ce8\u610f\u8f93\u5165\u65f6\u5c31\u8981\u5224\u65ad\u662f\u5426\u6709\u65e2\u4e0d\u5e73\u884c\u4e5f\u4e0d\u5782\u76f4\u4e8e\u5782\u76f4\u5750\u6807\u8f74\u7684\u7ebf\u6bb5\uff0c\u6709\u5219\u76f4\u63a5\u8f93\u51fa ```\"NO\"```\n\n## AC\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint x, y, cnt;\nmap<pair<int, int>, int> m; \nint main() {\n    for(int i = 0, a, b, c, d; i < 4; i++) {\n        cin >> a >> b >> c >> d, m[make_pair(a, b)]++, m[make_pair(c, d)]++;\n        if(a != c && b != d) {\n            cout << \"NO\";\n            return 0;\n        }\n        x += a == c, y += b == d, cnt += m[make_pair(a, b)] == 2, cnt += m[make_pair(c, d)] == 2;\n    }\n    cout << ((x != 2 || y != 2 || cnt != 4) ? \"NO\" : \"YES\");\n    return 0;\n}\n```\n",
        "postTime": 1654159020,
        "uid": 374330,
        "name": "ACACACACACACACACACAC",
        "ccfLevel": 6,
        "title": "CF14C"
    }
]