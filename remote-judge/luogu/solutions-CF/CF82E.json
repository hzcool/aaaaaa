[
    {
        "content": "---\n\n\u9898\u8bb0\uff1a ~~(\u4e00\u822c\u662f\u5e9f\u8bdd\uff0c\u90a3\u5c31\u522b\u770b\u4e86\u5427)~~\n\n\u4f3c\u4e4e\u6211\u5199\u9898\u89e3\u9664\u4e86\u6a21\u677f\u5c31\u51e0\u4e4e\u90fd\u662f\u8ba1\u7b97\u51e0\u4f55\u9898\u4e86\u3002\u3002\u3002\u4e5f\u8bb8\u6ca1\u51e0\u5929\u8fd8\u80fd\u641e\u51fa\u4e00\u7bc7\u8ba1\u7b97\u51e0\u4f55\u7684\u65e5\u62a5\uff1f~~\u5495\u5495\u5495~~\n\n---\n\nemmm...\u9898\u89e3\u7ec8\u4e8e\u6b63\u5f0f\u5f00\u59cb\u4e86\u3002\u3002\u3002\n\n\u8fd9\u5c51\u9898\u53ef\u80fd\u662f\u8ba1\u7b97\u51e0\u4f55\u9898\u4e2d\u7684\u96be\u5f97\u7684\u826f\u5fc3\u9898\u4e86\u3002\u3002\u3002\u8fd9\u9898\u5176\u5b9e\u5c31\u662f\u706f\u7167\u8fdb\u53bb\u6bcf\u4e2a\u7a97\u7684\u9762\u79ef\u603b\u548c\u51cf\u53bb\u706f\u5149\u76f8\u4ea4\u3001\u91cd\u53e0\u90e8\u5206\u7684\u9762\u79ef\u3002\n\n1. \u706f\u7167\u8fdb\u53bb\u6bcf\u4e2a\u7a97\u7684\u9762\u79ef\u603b\u548c\n\n\t\u6211\u4eec\u5f88\u5bb9\u6613\u53d1\u73b0\u8fd9\u9898\u706f\u7167\u8fdb\u53bb\u6bcf\u4e2a\u7a97\u7684\u9762\u79ef\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u68af\u5f62\u7684\u9762\u79ef\uff0c\u8fd9\u4e2a\u68af\u5f62\u7684\u9ad8\u5c31\u662f```2h```\uff0c\u800c\u4e00\u4e2a\u5e95\u5c31\u662f\u7a97\u6237\u7684\u957f\u5ea6\uff0c\u800c\u6211\u4eec\u5176\u5b9e\u53ef\u4ee5\u7b97\u51fa\u5728\u7a97\u6237\u8fb9\u7f18\u7684\u4e24\u675f\u5149(\u5176\u5b9e\u5c31\u662f\u4e24\u4e2a\u4e00\u6b21\u51fd\u6570)\u7684\u51fd\u6570\u89e3\u6790\u5f0f\uff0c\u4ece\u800c\u7b97\u51fa\u8fd9\u4e2a\u68af\u5f62\u7684\u53e6\u5916\u4e00\u4e2a\u5e95\u7684\u8d77\u59cb\u70b9\u548c\u7ec8\u6b62\u70b9\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u7b97\u51fa\u8fd9\u4e2a\u5e95\u7684\u957f\u5ea6\u3002\u5c31\u8fd9\u6837\u7b97\u51fa\u6bcf\u4e2a\u68af\u5f62\u7684\u9762\u79ef\uff0c\u7136\u540e\u5168\u90e8\u52a0\u8d77\u6765\u5c31\u662f\u603b\u548c\u4e86\u3002\n    \n2. \u91cd\u53e0\u9762\u79ef\n\t\n    \u91cd\u53e0\u90e8\u5206\u4e00\u822c\u4e3a\u4e09\u89d2\u5f62\uff0c\u4f46\u5982\u679c\u6709\u5149\u675f\u7684\u4ea4\u70b9\u7684\u7eb5\u5750\u6807\u5728```-h~h```\u4e4b\u5916\u65f6\uff0c\u662f\u68af\u5f62\u3002\u8ba1\u7b97\u9762\u79ef\u662f\u7528\u4e4b\u524d\u6c42\u51fa\u7684\u51fd\u6570\u89e3\u6790\u5f0f\u6c42\u51fa\u4e24\u6761\u8fb9\u7f18\u5149\u675f\u7684\u4ea4\u70b9\u3001\u8fb9\u7f18\u5149\u675f\u4e0ex\u8f74\u7684\u4ea4\u70b9\uff0c\u7136\u540e\u8ba1\u7b97\u9762\u79ef\u5373\u53ef\u3002\n    \n\u6700\u540e\u5bb9\u65a5\u539f\u7406\u8ba1\u7b97\u4e00\u4e0b\u9762\u79ef\u5c31\u884c\u4e86\u3002\n\n\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define eps 1e-8\n#define SGN(x) ((x)>eps?1:((x)>-eps?0:-1))\nusing namespace std;\n\nstruct point {\n\tdouble x, y;\n\tpoint() {}\n\tpoint(double _x, double _y):x(_x), y(_y) {}\n\tpoint operator - (const point p1) {\n\t\treturn point(x - p1.x, y - p1.y);\n\t}\n};\n\ndouble cross(const point &a,const point &b,const point &c) {\n\treturn (b.x-a.x)*(c.y-a.y)-(b.y-a.y)*(c.x-a.x);\n}\n\ndouble cross(const point &a,const point &b) {\n\treturn a.x*b.y-a.y*b.x;\n}\n\ndouble dot(const point &a,const point &b) {\n\treturn a.x*b.x+a.y*b.y;\n}\n\npoint its(const point &a, const point &b, const point &c, const point &d) {\n\tpoint ret = a;\n\tdouble t = ((c.x - a.x)*(d.y - c.y) - (c.y - a.y)*(d.x - c.x)) / ((b.x - a.x)*(d.y - c.y) - (b.y - a.y)*(d.x - c.x));\n\tret.x += (b.x - a.x) * t;\n\tret.y += (b.y - a.y) * t;\n\treturn ret;\n}\n\nint n;\npoint p[1010][4];\n\npair<double, int> e[5000];\nint cnt;\n\ninline void insert(point &s, point &t, point X, int inc) {\n\tdouble ratio = SGN(t.x - s.x) ? (X.x - s.x) / (t.x - s.x) : (X.y - s.y) / (t.y - s.y);\n\te[cnt++] = make_pair(ratio, inc);\n}\n\ndouble h, f;\n\nint main() {\n\tscanf(\"%d%lf%lf\", &n, &h, &f);\n\tpoint p1(0, -f), p2(0, f);\n\tfor (int i = 0; i < n; ++i) {\n\t\tdouble l, r;\n\t\tscanf(\"%lf%lf\", &l, &r);\n\t\tp[i * 2][0] = point(l, -h);\n\t\tp[i * 2][1] = point(r, -h);\n\t\tp[i * 2][2] = its(p1, point(r, -h), point(0, h), point(100, h));\n\t\tp[i * 2][3] = its(p1, point(l, -h), point(0, h), point(100, h));\n\t\tp[i * 2 + 1][0] = point(r, h);\n\t\tp[i * 2 + 1][1] = point(l, h);\n\t\tp[i * 2 + 1][2] = its(p2, point(l, h), point(0, -h), point(100, -h));\n\t\tp[i * 2 + 1][3] = its(p2, point(r, h), point(0, -h), point(100, -h));\n\t}\n\tn *= 2;\n\tdouble ans = 0.0;\n\tint cp0, cp1, cp2;\n\tfor (int i = 0; i < n; i++) {\n\t\tfor (int k = 0; k < 4; k++) {\n\t\t\tpoint &s = p[i][k], &t = p[i][k==3?0:k+1];\n\t\t\tcnt = 0;\n\t\t\te[cnt++] = make_pair(0.0, 1);\n\t\t\te[cnt++] = make_pair(1.0, -1);\n\t\t\tfor (int j = 0; j < n; j++) if (i != j) {\n\t\t\t\t\tfor (int l = 0; l < 4; l++) {\n\t\t\t\t\t\tcp0 = SGN(cross(s, t, p[j][l==0?3:l-1]));\n\t\t\t\t\t\tcp1 = SGN(cross(s, t, p[j][l]));\n\t\t\t\t\t\tcp2 = SGN(cross(s, t, p[j][l==3?0:l+1]));\n\t\t\t\t\t\tif (cp1 * cp2 < 0)\n\t\t\t\t\t\t\tinsert(s, t, its(s, t, p[j][l], p[j][l==3?0:l+1]), cp2);\n\t\t\t\t\t\telse if (!cp1 && cp0 * cp2 < 0)\n\t\t\t\t\t\t\tinsert(s, t, p[j][l], cp2);\n\t\t\t\t\t\telse if (!cp1 && !cp2 && j > i && dot(t - s, p[j][l==3?0:l+1] - p[j][l]) > -eps) {\n\t\t\t\t\t\t\tinsert(s, t, p[j][l], -1);\n\t\t\t\t\t\t\tinsert(s, t, p[j][l==3?0:l+1], 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tsort(e, e + cnt);\n\t\t\tint acc = 0;\n\t\t\tdouble total = 0.0, last;\n\t\t\tfor (int j = 0; j < cnt; j++) {\n\t\t\t\tacc += e[j].second;\n\t\t\t\tif (acc == 0 && e[j].second < 0)\n\t\t\t\t\ttotal += e[j].first - last;\n\t\t\t\tlast = e[j].first;\n\t\t\t}\n\t\t\tans += cross(s, t) * total;\n\t\t}\n\t}\n\tprintf(\"%.10lf\\n\", ans * 0.5);\n}\n```\n\n\u6b63\u597d100\u884c\u7684\u7a0b\u5e8f\u3002\u3002",
        "postTime": 1544624159,
        "uid": 119553,
        "name": "rEdWhitE_uMbrElla",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF82E \u3010Corridor\u3011"
    }
]