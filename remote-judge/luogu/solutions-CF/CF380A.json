[
    {
        "content": "## \u9898\u76ee\u5927\u610f\uff1a\n\u73b0\u7ef4\u62a4\u4e00\u4e2a\u521d\u59cb\u5168\u90e8\u4e3a\u7a7a\u7684\u5e8f\u5217\uff0c\u53ef\u652f\u6301\u4e24\u79cd\u64cd\u4f5c\uff0c\u5171 m \u4e2a\uff1a  \n1.\u5c06\u4e00\u4e2a\u6570\u63d2\u5165\u5230\u6570\u5217\u7684\u5c3e\u7aef\uff08\u63d2\u5165\u7684\u6570\u4e0d\u5927\u4e8e $10^5$\uff09  \n2.\u5c06\u6570\u5217\u7684\u524d l \u4f4d\u590d\u5236 c \u6b21\uff0c\u8d34\u5230\u6570\u5217\u7684\u5c3e\u7aef \uff08$1\\le l\\le$ $10 ^ 5$, $1\\le$ c $\\le$ $10 ^ 4$\uff09\n\n\u7136\u540e\u8fdb\u884c n  \u6b21\u67e5\u8be2\uff0c\u6bcf\u6b21\u7ed9\u51fa\u4e00\u4e2a\u6570 x \uff0c\u8f93\u51fa\u6700\u7ec8\u6570\u5217\u7684\u7b2c x \u4f4d\uff08\u6240\u6709\u67e5\u8be2\u6570\u6ee1\u8db3\u4e25\u683c\u9012\u589e\uff09\u3002\n\n\u9898\u76ee\u6ee1\u8db3\u6570\u636e\u5408\u6cd5\u3002\n\n## \u9898\u76ee\u601d\u8def\uff1a\n\u8fd9\u9053\u9898\u6570\u636e\u89c4\u6a21\u5f88\u5927\uff0c\u76f4\u63a5\u6a21\u62df\u4e0d\u4ec5\u4f1a\u8d85\u65f6\uff0c\u800c\u4e14\u4f1a\u7206\u5185\u5b58(\u6700\u591a\u5927\u6982\u53ef\u4ee5\u6709 $10^9$ \u4e2a\u6570)\uff0c\u6240\u4ee5\u6211\u4eec\u7740\u624b\u53bb\u60f3\u5176\u4ed6\u7684\u89e3\u9898\u601d\u8def\u3002\n\n\u601d\u8def\uff1a$\\boxed{\\color{red}\\textbf{\u4e8c\u5206}}$\n\n\u5904\u7406\u51fa\u6bcf\u4e00\u4e2a\u64cd\u4f5c\u6240\u751f\u6210\u7684\u6570\u5217\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u6309\u7167\u67e5\u8be2\u7ed9\u51fa\u7684\u4f4d\u7f6e x \u5728\u64cd\u4f5c\u5e8f\u5217\u4e2d****\u4e8c\u5206\u67e5\u627e****\u51fa\u751f\u6210\u5305\u542b x \u8fd9\u4e00\u6bb5\u7684\u64cd\u4f5c\u7684\u4f4d\u7f6e\uff0c\u6839\u636e\u8fd9\u4e2a\u64cd\u4f5c\u53bb\u8ba1\u7b97\u4f4d\u7f6e x \u4e0a\u7684\u503c\u3002  \n\u4f46\u662f\u8fd9\u6837\u8981\u8003\u8651\u5230\u4e00\u4ef6\u4e8b\uff0c\u5982\u679c\u751f\u6210 x \u7684\u64cd\u4f5c\u662f\u64cd\u4f5c 2 \uff0c \u90a3\u4e48\u7531\u4e8e\u64cd\u4f5c 2 \u662f\u590d\u5236\u5f53\u524d\u7684\u6570\u5217\u7684\u524d l \u4e2a\u6570\uff0c\u800c\u5f53\u524d\u6570\u5217\u4ecd\u65e7\u662f\u672a\u77e5\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u8fd8\u662f\u9700\u8981\u518d\u5728\u524d\u9762\u7684\u64cd\u4f5c\u4e2d\u4e8c\u5206\uff0c\u77e5\u9053\u67e5\u5230\u4e00\u4e2a\u7531\u64cd\u4f5c\u4e00\u751f\u6210\u7684\u70b9\u3002\u8fd9\u4e2a\u4ee3\u7801\u5bf9\u4ee3\u7801\u80fd\u529b\u6709\u6bd4\u8f83\u5927\u7684\u8981\u6c42\uff0c\u5efa\u8bae\u521d\u5b66\u8005\u5148\u522b\u770b\u8fd9\u9898\u3002\n\n\u6211\u4eec\u4ece\u8303\u56f4\u5165\u624b\uff0c\u6ce8\u610f\u5230\u64cd\u4f5c\u4e8c\u53ea\u4f1a\u7528\u5230\u5f53\u524d\u6570\u5217\u7684\u524d $10^5$ \u4e2a\u70b9\uff0c\u7136\u800c\u6570\u5217\u4e2d\u7684\u70b9\u662f\u4e0d\u4f1a\u4fee\u6539\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u6709\u4e86\u8fd9\u79cd\u60f3\u6cd5\uff1a\n\n\u6a21\u62df\u51fa\u6570\u5217\u7684\u524d $10^5$ \u4e2a\u70b9\uff0c\u7136\u540e\u518d\u67e5\u627e\u751f\u6210 x \u7684\u5bf9\u5e94\u64cd\u4f5c\u3002\n\n\u6a21\u62df\u4e4b\u540e\u7684\u67e5\u627e\u6709\u4e24\u79cd\u65b9\u6848\uff0c\u7b2c\u4e00\u79cd\u8fd8\u662f\u4e8c\u5206\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u662f\u592a\u5927\uff08\u80fd\u8fc7\uff09\uff0c\u4f46\u662f\u5199\u8d77\u6765\u7a0d\u5fae\u6709\u70b9\u9ebb\u70e6\u3002\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u7528\u5230\u4e86\u9898\u76ee\u4e2d\u67e5\u8be2\u5e8f\u5217\u7684\u9012\u589e\u987a\u5e8f\uff0c\u76f4\u63a5\u7ebf\u6027\u5730\u4ece\u5148\u5f80\u540e\u626b\u5c31\u884c\uff0c\u8fd9\u4e2a\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f $O(n+m)$\u3002\n\n\n\u4f46\u662f\uff0c****\u8981\u6ce8\u610f****\uff1a  \n1.\u6ce8\u610f\u8fb9\u754c\u6761\u4ef6\u548c\u5faa\u73af\u9000\u51fa\u6761\u4ef6\u3002  \n2.\u5982\u679c\u5f53\u524d\u67e5\u5230\u7684\u70b9\u7684\u4f4d\u7f6e\u5c0f\u4e8e $10^5$ \u76f4\u63a5\u8f93\u51fa\u6a21\u62df\u51fa\u6765\u7684\u6570\u5217\u4e2d\u7684\u5bf9\u5e94\u4f4d\u7f6e\u503c\u5c31\u53ef\u4ee5\u4e86\u3002  \n3.\u5982\u679c\u67e5\u5230\u7684\u4f4d\u7f6e\u5bf9\u5e94\u64cd\u4f5c\u4e3a\u64cd\u4f5c 1\uff0c\u5c31\u76f4\u63a5\u8f93\u51fa\u64cd\u4f5c\u4e00\u7684\u64cd\u4f5c\u6570\u503c\uff0c\u5982\u679c\u4e3a\u64cd\u4f5c\u4e8c\u9700\u8981\u8ba1\u7b97\u4e00\u4e0b\u53d6\u6a21\uff0c\u7279\u522b\u6ce8\u610f\u53d6\u6a21\u5f97\u96f6\u7684\u60c5\u51b5\u3002\n\n## \u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxm = 100005;\ninline int getint(){\n    int ans(0); char w = getchar();\n    while('0' > w || w > '9')w = getchar();\n    while('0' <= w && w <= '9')\n    {\n        ans = ans * 10 + w - '0';\n        w = getchar();\n    }\n    return ans;\n}\nint n, m;\nstruct build{\n    int ord, x, l, c;\n    long long a, b;\n}hell[maxm];\nint sq[maxm];\nint main(){\n    m = getint();\n    for(int i = 1; i <= m; ++i){\n        hell[i].ord = getint();\n        if(hell[i].ord == 1){\n            hell[i].x = getint();\n            hell[i].a = hell[i].b = hell[i - 1].b + 1LL;\n            if(hell[i].a < maxm)sq[hell[i].a] = hell[i].x;\n        }\n        else{\n            hell[i].l = getint(); hell[i].c = getint();\n            hell[i].a = hell[i - 1].b + 1LL;\n            hell[i].b = hell[i - 1].b + (long long)hell[i].l * (long long)hell[i].c;\n            if(hell[i].a < maxm)\n            {\n                int now = hell[i].a;\n                for(int j = 1; j <= hell[i].c && now < maxm; ++j)\n                    for(int k = 1; k <= hell[i].l && now < maxm; ++k)\n                        sq[now++] = sq[k];\n            }\n        }\n    }\n\n    n = getint();\n    int h = 1; long long x;\n    for(int i = 1; i <= n; ++i){\n        cin >> x;\n        while(!(hell[h].a <= x && hell[h].b >= x))++h;\n        if(x <= 100000)printf(\"%d \", sq[x]);\n        else{\n            if((x - hell[h - 1].b) % (long long)hell[h].l != 0)\n                cout << sq[(x - hell[h - 1].b) % (long long)hell[h].l] << ' ';\n            else cout << sq[hell[h].l] << ' ';\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1640616810,
        "uid": 481718,
        "name": "qjxqjx",
        "ccfLevel": 3,
        "title": "CF380A Sereja and Prefixes \u9898\u89e3"
    }
]