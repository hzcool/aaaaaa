[
    {
        "content": "[CF1179D Fedor Runs for President](https://www.luogu.com.cn/problem/CF1179D)\u89e3\u9898\u62a5\u544a\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://zybuluo.com/xiaoziyao/note/1741628)\n\n## \u9898\u610f\n- \u5b9a\u4e49\u7b80\u5355\u8def\u5f84\u4e3a\u4efb\u610f\u4e00\u4e2a\u70b9\u4ec5\u7ecf\u8fc7\u4e00\u6b21\u7684\u8def\u5f84\u3002\n- \u7ed9\u5b9a\u4e00\u9897$n$\u4e2a\u70b9\u7684\u6811\uff0c\u6c42\u6dfb\u52a0\u4e00\u6761\u8fb9\u540e\u6700\u591a\u6709\u591a\u5c11\u65e0\u5411\u7b80\u5355\u8def\u5f84\u3002\n- \u6570\u636e\u8303\u56f4\uff1a$2\\leqslant n\\leqslant 5\\cdot 10^5$\n\n## \u5206\u6790\n\u6811\u4e0a\u659c\u7387\u4f18\u5316\u597d\u9898\u3002\n\n\u5148\u8bb2\u4e00\u4e0b\u5b9a\u4e49\uff1a$size_x$\u4e3a$x$\u7684\u5b50\u6811\u5927\u5c0f\uff0c$sons_x$\u4e3a$x$\u7684\u513f\u5b50\u6570\u91cf\uff0c$son(x)$\u6307$x$\u6240\u6709\u513f\u5b50\u5f62\u6210\u7684\u96c6\u5408\uff0c$path(x,y)$\u6307$x$\u5230$y$\u8def\u5f84\u4e0a\u6240\u6709\u70b9\u5f62\u6210\u7684\u96c6\u5408\u3002\n\n\u56e0\u4e3a\u6811\u4e0a\u6bcf\u4e24\u4e2a\u70b9\u6709\u4e14\u4ec5\u6709\u4e00\u6761\u8def\u5f84\uff0c\u6240\u4ee5\u539f\u672c\u6811\u4e0a\u7684\u8def\u5f84\u6570\u91cf\u4e3a$\\frac{n(n-1)}{2}$\uff0c\u7136\u540e\u8003\u8651\u6dfb\u52a0\u4e00\u6761\u8fb9\u4f1a\u589e\u52a0\u591a\u5c11\u6761\u65e0\u5411\u7b80\u5355\u8def\u5f84\uff1a\n\n\u5047\u5982\u6211\u4eec\u5c06\u8981\u6dfb\u52a0$(x,y)$\uff0c\u90a3\u4e48\u6211\u4eec\u5148\u63d0\u51fa$x$\u5230$y$\u7684\u8def\u5f84\uff0c\u5047\u5982$k$\u5728\u8def\u5f84\u4e0a\uff0c\u6211\u4eec\u79f0$s_k$\u4e3a\u4ee5$k$\u4e3a\u6839\uff0c\u4e0d\u5411\u8def\u5f84\u4e0a\u6269\u5c55\u7684\u5b50\u6811\u5927\u5c0f\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u6bcf\u4e00\u9897\u8fd9\u6837\u7684\u5b50\u6811\u4e4b\u95f4\u90fd\u591a\u4e86\u4e00\u6761\u8def\u5f84\uff0c\u6839\u636e\u4e58\u6cd5\u539f\u7406\u6709\u8fd9\u6761\u8fb9\u5bf9\u7b54\u6848\u8d21\u732e\u4e3a$\\frac{\\sum_{k\\in path(x,y)}(n-s_k)\\cdot s_k}{2}$\uff08\u9664$2$\u662f\u4e3a\u4e86\u53bb\u91cd\uff09\u3002\n\n\u53d8\u4e00\u4e0b\u578b\uff1a\n$$\\frac{\\sum_{k\\in path(x,y)}(n-s_k)\\cdot s_k}{2}$$\n$$=\\frac{\\sum_{k\\in path(x,y)}(n\\cdot s_k-s_k^2)}{2}$$\n$$=\\frac{n\\cdot \\sum_{k\\in path(x,y)}s_k-\\sum_{k\\in path(x,y)}s_k^2}{2}$$\n$$=\\frac{n^2-\\sum_{k\\in path(x,y)}s_k^2}{2}$$\n\n\u90a3\u4e48\u6211\u4eec\u7684\u76ee\u7684\u627e\u5230\u4e00\u6761\u8def\u5f84$path(x,y)$\uff0c\u8ba9$\\sum_{k\\in path(x,y)}s_k^2$\u6700\u5c0f\u3002\n\n\u6211\u4eec\u8fd0\u7528\u70b9\u5206\u6cbb\u7684\u601d\u60f3\uff0c\u8003\u8651\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9$x$\uff0c\u8ba1\u7b97$x$\u5b50\u6811\u4e2d\uff0c\u6bcf\u4e00\u6761\u7ecf\u8fc7$x$\u7684\u8def\u5f84\u7684\u7b54\u6848\u3002\n\n\u8bbe$f_x$\u4e3a\u4ece$x$\u5230$x$\u5b50\u6811\u4e2d\u4efb\u610f\u7ed3\u70b9\uff0c\u4e14\u6ee1\u8db3\u8ba9\u4e0a\u5f0f\u6700\u5c0f\u7684\u8def\u5f84\uff0c\u90a3\u4e48\u5f88\u5bb9\u6613\u5217\u51fa\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$$f_x=\\min_{y\\in son(x)}\\{f_y+(size_x-size_y)^2\\}$$\n\n\u89e3\u91ca\u4e00\u4e0b\uff0c$size_x-size_y$\u76f8\u5f53\u4e8e$s_x$\uff08\u56e0\u4e3a$x$\u7684\u513f\u5b50$y$\u5728\u8def\u5f84\u4e0a\uff09\u3002\n\n\u8fd9\u4e2a\u8f6c\u79fb\u65b9\u7a0b\u5f88\u663e\u7136\uff0c\u4e5f\u5f88\u5bb9\u6613\u5728$O(n)$\u7684\u590d\u6742\u5ea6\u4e2d\u6c42\u51fa\u3002\n\n```\nsize[x]=1;\nfor(int i=start[x];i;i=then[i]){\n\tint y=to[i];\n\tif(y==last)\n\t\tcontinue;\n\tdfs(y,x);\n\tsize[x]+=size[y];\n}\nf[x]=size[x]*size[x];\nfor(int i=start[x];i;i=then[i]){\n\tint y=to[i];\n\tif(y==last)\n\t\tcontinue;\n\tf[x]=min(f[x],f[y]+(size[x]-size[y])*(size[x]-size[y]));\n\tp[++ps]=y;\n}\n```\n\n\u7136\u540e\u8003\u8651$x$\u5b50\u6811\u4e2d\uff0c\u6bcf\u4e00\u6761\u7ecf\u8fc7$x$\u7684\u8def\u5f84\uff0c\u8bbe\u8fd9\u6761\u8def\u5f84\u7ecf\u8fc7\u4e24\u4e2a$x$\u7684\u513f\u5b50$y,z$\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u628a$f_y$\u4ee3\u8868\u7684\u8def\u5f84\uff0c$f_z$\u4ee3\u8868\u7684\u8def\u5f84\u548c$x$\u62fc\u8d77\u6765\u8ba1\u7b97\u7b54\u6848\u3002\n\n\u6211\u4eec\u679a\u4e3e\u4e24\u4e2a\u513f\u5b50\uff1a\n\n$$ans=\\min_{y\\in son(x),z\\in son(x),y\\ne z}\\{f_y+f_z+(n-size_y-size_z)^2\\}$$\n\n\u540c\u6837\u89e3\u91ca\u4e00\u4e0b\uff0c$n-size_y-size_z$\u662f\u9664\u4e86$y$\u5b50\u6811\u548c$z$\u5b50\u6811\u4e2d\u7684\u7ed3\u70b9\u5916\u6240\u6709\u7684\u7ed3\u70b9\uff0c\u56e0\u4e3a$x,y,z$\u5728\u5747\u8def\u5f84\u4e0a\uff0c\u6240\u4ee5\u5176\u4ed6\u7684\u70b9\u90fd\u5fc5\u987b\u5206\u914d\u5230$x$\u5b50\u6811\u4e2d\uff0c\u5373$s_x=n-size_y-size_z$\u3002\n\n\u679a\u4e3e\u5b83\u7684\u590d\u6742\u5ea6\u5c31\u662f$O(sons_x^2)$\u4e86\uff0c\u52a0\u4e0a$dfs$\uff0c\u590d\u6742\u5ea6\u80af\u5b9a\u65e0\u6cd5\u901a\u8fc7\u672c\u9898\u3002\n\n\u8003\u8651\u6811\u4e0a\u659c\u7387\u4f18\u5316\uff0c\u6211\u4eec\u679a\u4e3e$x$\u7684\u513f\u5b50$y$\uff0c\u7136\u540e\u5728\u659c\u7387\u4f18\u5316\u4e2d\u6c42\u51fa\u51b3\u7b56\u70b9$z$\u3002\n\n\u5957\u8def\u6027\u5730\u679a\u4e3e\u4e24\u4e2a\u51b3\u7b56\u70b9$size_q\\leqslant size_p$\uff0c\u4e14$p$\u6bd4$q$\u66f4\u4f18\uff0c\u5373$f_y+f_p+(n-size_y-size_p)^2\\leqslant f_y+f_q+(n-size_y-size_q)^2$\u3002\n\n\u62c6\u5f00\u5e73\u65b9\uff0c\u6d88\u6389\u76f8\u540c\u7684\u9879\u5c31\u53ef\u4ee5\u5f97\u5230$f_p+size_p^2-2(n-size_y)\\cdot size_p\\leqslant f_q+size_q^2-2(n-size_y)\\cdot size_q$\u3002\n\n\u5957\u8def\u6027\u53d8\u5f62\uff1a$(f_p+size_p^2)-(f_q+size_q^2)\\leqslant 2(n-size_y)(size_p-size_q)$\u3002\n\n\u56e0\u4e3a$size_p\\geqslant size_q$\uff0c\u90a3\u4e48\u9664\u8fc7\u6765\u4e0d\u53d8\u53f7\uff0c\u5316\u6210\u659c\u7387\u5f0f\uff1a$\\frac{(f_p+size_p^2)-(f_q+size_q^2)}{size_p-size_q}\\leqslant 2(n-size_y)$\u3002\n\n\u6ce8\u610f\u5982\u679c$size_p=size_q$\u9700\u8981\u7279\u5224\u4e00\u4e0b\uff1a\n```\ninline int x(int p){\n\treturn size[p];\n}\ninline int y(int p){\n\treturn f[p]+size[p]*size[p];\n}\ninline double slope(int a,int b){\n\tif(x(a)==x(b))\n\t\treturn y(a)>y(b)? inf:-inf;\n\treturn 1.0*(y(a)-y(b))/(x(a)-x(b));\n}\n```\n\n\u6211\u4eec\u5728\u659c\u7387\u4f18\u5316\u4e4b\u524d\u7ed9\u6240\u6709\u513f\u5b50\u6309\u7167$size$\u6392\u4e00\u4e0b\u5e8f\uff0c\u5c31\u53ef\u4ee5\u4e0a\u659c\u7387\u4f18\u5316\u677f\u5b50\u4e86\u3002\n\n---\n\n\u6211\u4eec\u5206\u6790\u4e00\u4e0b\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u590d\u6742\u5ea6\u7684\u74f6\u9888\u5c31\u662f\u904d\u5386\u5230\u540e\u9762\u7684\u6240\u6709\u513f\u5b50\u548c\u7ed9\u5b83\u6240\u6709\u513f\u5b50$\\text{sort}$\u4e00\u904d\u3002\n\n\u5148\u8bc1\u660e\u4e00\u4e2a\u5f15\u7406\uff1a$$a\\log a+b\\log b\\leqslant(a+b)\\log(a+b)$$\n\n\u4e0d\u59a8\u8bbe$a\\geqslant b$\uff0c\u90a3\u4e48$a\\log a+b\\log b\\leqslant a\\log a+b\\log a=(a+b)\\log a\\leqslant (a+b)\\log(a+b)$\u3002\n\n\u5bf9\u4e8e\u6392\u5e8f\uff0c\u5b83\u7684\u590d\u6742\u5ea6\u90fd\u662f$O(n\\log n)$\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u770b\u505a\u6bcf\u4e2a\u70b9$x$\u90fd\u9700\u8981$O(sons_x\\log sons_x)$\u7684\u5904\u7406\u3002\n\n\u7136\u540e\uff0c\u6211\u4eec\u5904\u7406\u9012\u5f52\uff1a\n\n\u53ef\u4ee5\u6309\u7167\u6df1\u5ea6\u5f52\u7eb3\uff0c\u6211\u4eec\u8bc1\u660e\u5bf9\u4e8e$x$\uff0c\u5904\u7406\u5b83\u7684\u590d\u6742\u5ea6\u4e00\u5b9a\u662f$O(size_x\\log size_x)$\u7684\u3002\n\n\u9996\u5148\u5bf9\u4e8e\u53f6\u5b50\u7ed3\u70b9\u4e00\u5b9a\u6210\u7acb\uff0c\u56e0\u4e3a\u5904\u7406\u5b83\u7684\u590d\u6742\u5ea6\u5c31\u662f$O(1)$\u7684\u3002\n\n\u5bf9\u4e8e\u975e\u53f6\u5b50\u7ed3\u70b9$x$\uff0c\u5047\u5982\u5b83\u7684\u513f\u5b50\u662f$y_1\\cdots y_k$\uff0c\u4e14\u5b83\u6bcf\u4e2a\u513f\u5b50\u90fd\u6ee1\u8db3\u8fd9\u4e2a\u590d\u6742\u5ea6\u7ea6\u675f\uff0c\u90a3\u4e48\u5904\u7406\u5b83\u513f\u5b50\u7684\u603b\u590d\u6742\u5ea6\u4e3a$size_{y_1}\\log size_{y_1}+size_{y_2}\\log size_{y_2}+\\cdots+size_{y_k}\\log size_{y_k}$\uff0c\u6309\u7167\u4e0a\u9762\u7684\u5f15\u7406\u4e00\u76f4\u5904\u7406\u4e0b\u53bb\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u4e0a\u5f0f\u5c0f\u4e8e\u7b49\u4e8e$(size_{y_1}+\\cdots+size_{y_k})\\log (size_{y_1}+\\cdots+size_{y_k})$\uff0c\u56e0\u4e3a$size_x=size_{y_1}+\\cdots+size_{y_k}+1$\uff0c\u6240\u4ee5\u9012\u5f52\u6240\u6709\u513f\u5b50\u7684\u590d\u6742\u5ea6\u662f$O(size_x\\log size_x)$\u7684\u3002\n\n\u518d\u52a0\u4e0a\u6392\u5e8f\u7684\u590d\u6742\u5ea6\uff0c\u4fbf\u53ef\u4ee5\u5f97\u51fa\u5904\u7406$x$\u7684\u590d\u6742\u5ea6\u662f$O(size_x\\log size_x)$\u7684\u3002\n\n\u6211\u4eec\u4ece$1$\u5f00\u59cb$\\text{dfs}$\uff0c\u90a3\u4e48\u7531\u4e0a\u9762\u7684\u8bc1\u660e\u53ef\u4ee5\u77e5\u9053\u5904\u7406$1$\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(size_1\\log size_1)$\u3002\n\n\u5373\u603b\u590d\u6742\u5ea6\u4e3a$O(n\\log n)$\u3002\n\n## \u4ee3\u7801\n```\n#include<stdio.h>\n#include<algorithm>\n#define int long long\n#define inf 1000000000000000000\nusing namespace std;\nconst int maxn=500005,maxm=1000005;\nint i,j,k,m,n,e,ans=inf;\nint start[maxn],to[maxm],then[maxm],f[maxn],size[maxn],p[maxn],q[maxn];\ninline void add(int x,int y){\n\tthen[++e]=start[x],start[x]=e,to[e]=y;\n}\ninline bool cmp(int a,int b){\n\treturn size[a]<size[b];\n}\ninline int x(int p){\n\treturn size[p];\n}\ninline int y(int p){\n\treturn f[p]+size[p]*size[p];\n}\ninline double slope(int a,int b){\n\tif(x(a)==x(b))\n\t\treturn y(a)>y(b)? inf:-inf;\n\treturn 1.0*(y(a)-y(b))/(x(a)-x(b));\n}\nvoid dfs(int x,int last){\n\tint ps=0,l=1,r=0;\n\tsize[x]=1;\n\tfor(int i=start[x];i;i=then[i]){\n\t\tint y=to[i];\n\t\tif(y==last)\n\t\t\tcontinue;\n\t\tdfs(y,x);\n\t\tsize[x]+=size[y];\n\t}\n\tf[x]=size[x]*size[x];\n\tif(size[x]==1)\n\t\treturn ;\n\tfor(int i=start[x];i;i=then[i]){\n\t\tint y=to[i];\n\t\tif(y==last)\n\t\t\tcontinue;\n\t\tf[x]=min(f[x],f[y]+(size[x]-size[y])*(size[x]-size[y]));\n\t\tp[++ps]=y;\n\t}\n\tans=min(ans,f[x]+(n-size[x])*(n-size[x]));\n\tsort(p+1,p+1+ps,cmp);\n\tq[++r]=p[1];\n\tfor(int i=2;i<=ps;i++){\n\t\twhile(l<r&&slope(q[l+1],q[l])<=2*(n-size[p[i]]))\n\t\t\tl++;\n\t\tans=min(ans,f[p[i]]+f[q[l]]+(n-size[p[i]]-size[q[l]])*(n-size[p[i]]-size[q[l]]));\n\t\twhile(l<r&&slope(p[i],q[r-1])<=slope(q[r],q[r-1]))\n\t\t\tr--;\n\t\tq[++r]=p[i];\n\t}\n}\nsigned main(){\n\tscanf(\"%lld\",&n);\n\tfor(i=1;i<n;i++){\n\t\tint x,y;\n\t\tscanf(\"%lld%lld\",&x,&y);\n\t\tadd(x,y),add(y,x);\n\t}\n\tdfs(1,0);\n\tprintf(\"%lld\\n\",n*(n-1)/2+(n*n-ans)/2); \n\treturn 0;\n}\n```",
        "postTime": 1599977756,
        "uid": 35754,
        "name": "Verdandi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1179D \u3010Fedor Runs for President\u3011"
    },
    {
        "content": "## \u601d\u8def:\n\n\u8fd9\u662f\u4e00\u9053\u659c\u7387\u4f18\u5316 dp \u9898\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u7528\u659c\u7387\u4f18\u5316\u505a\u3002/kk\n\n\u9996\u5148\u6211\u4eec\u80af\u5b9a\u662f\u5148\u4e00\u6761\u94fe\u52a0\u4e0a\u4e00\u6761\u8fb9\u5f62\u6210\u4e00\u4e2a\u73af\u3002\n\n\u5c06\u7b54\u6848\u5bb9\u65a5\u53d8\u6210 $n*(n-1)-\\sum\\limits_{i=1}^{L}\\frac{s_{a_i}\\times (s_{a_i}-1)}{2}$\n\n\u6211\u4eec\u8981\u8ba9\u7b54\u6848\u6700\u5927\u5373\u6700\u5c0f\u5316 \n  $\\sum\\limits_{i=1}^{L}\\frac{s_{a_i}\\times (s_{a_i}-1)}{2}$\n\n\u4e4b\u524d\u6709\u4e00\u4f4d\u5927\u4f6c\u5728\u9898\u89e3\u4e2d\u63d0\u5230\u4e86\u4e00\u4e2a\u6027\u8d28\uff0c\u5373\u6211\u4eec\u50cf\u6c42\u76f4\u5f84\u4e00\u6837\u6c42\u5c31\u884c\u4e86\u3002\u4f46\u4f3c\u4e4e\u6ca1\u6709\u7ed9\u51fa\u8bc1\u660e\u3002\u6240\u4ee5\u6211\u81ea\u5df1 YY \u4e86\u4e00\u4e2a\u3002\n\n\u8003\u8651\u4e24\u4e2a\u70b9$x$,$y$ \u5728\u4ee5 1 \u4e3a\u6839 dfs \u65f6$x$\u6bd4$y$\u4f18\uff0c\u5219\u4e0d\u5b58\u5728\u4e00\u4e2a\u70b9 $z$ \u4f7f\u5f97 $(y,z)$ \u662f\u6211\u4eec\u8981\u627e\u7684\u90a3\u6761\u8fde\u3002\n\n\u663e\u7136 $x$ , $y$ \u662f\u4e24\u4e2a\u53f6\u5b50\u8282\u70b9\u3002\n\n\u4ee4 $l=lca(x,y)$ \uff0c\u5f88\u663e\u7136\n\n\u5f53 $z$ \u4e0d\u5728\u4ee5 $l$ \u4e3a\u6839\u7684\u5b50\u6811\u5185\u65f6 $(x,z)$ \u6bd4 $(y,z)$ \u8981\u4f18\u3002\n\n\u5f53 z \u5728\u4ee5 $l$ \u4e3a\u6839\u7684\u5b50\u6811\u5185\u65f6 $(x,y)$ \u6bd4 $(y,z)$ \u66f4\u4f18\u3002\n\n\u6240\u4ee5\u4e0d\u5b58\u5728\u4e00\u4e2a $z$ \u4f7f\u5f97 $(y,z)$ \u662f\u6700\u4f18\u89e3\u3002\n\n## \u5b9e\u73b0:\n\n```cpp\n#include \"ybwhead/ios.h\"\nint n;\nconst int maxn = 5e5 + 10;\nstruct edge\n{\n    int v, nxt;\n} e[maxn << 1];\nint head[maxn], tot;\nvoid __ADD(int u, int v)\n{\n    e[++tot].v = v;\n    e[tot].nxt = head[u];\n    head[u] = tot;\n}\nvoid add(int u, int v)\n{\n    __ADD(u, v);\n    __ADD(v, u);\n}\nlong long ans[maxn];\nlong long siz[maxn];\nvoid pd(int u, int fa)\n{\n    siz[u] = 1;\n    for (int i = head[u]; i; i = e[i].nxt)\n    {\n        int v = e[i].v;\n        if (v == fa)\n            continue;\n        pd(v, u);\n        siz[u] += siz[v];\n    }\n}\nvoid dfs(int u, int fa)\n{\n    for (int i = head[u]; i; i = e[i].nxt)\n    {\n        int v = e[i].v;\n        if (v == fa)\n            continue;\n        ans[v] = ans[u] + 1ll * (siz[u] - siz[v]) * siz[v];\n        dfs(v, u);\n    }\n}\nint main()\n{\n    yin >> n;\n    for (int i = 1; i < n; i++)\n    {\n        int u, v;\n        yin >> u >> v;\n        add(u, v);\n    }\n    pd(1, 0);\n    ans[1] = 1ll * n * (n - 1) / 2;\n    dfs(1, 0);\n    int an = 0;\n    for (int i = 1; i <= n; i++)\n        if (ans[an] < ans[i])\n            an = i;\n    pd(an, 0);\n    ans[an] = ans[1];\n    dfs(an, 0);\n    an = 0;\n    for (int i = 1; i <= n; i++)\n        if (ans[an] < ans[i])\n            an = i;\n    yout << ans[an] << endl;\n    return 0;\n}\n```\n",
        "postTime": 1597044033,
        "uid": 74346,
        "name": "ybw051114",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1179D \u3010Fedor Runs for President\u3011"
    },
    {
        "content": "[CF1179D Fedor Runs for President](https://www.luogu.com.cn/problem/CF1179D)\n\n\u65b0\u6dfb\u52a0\u4e00\u6761\u8fb9\u4ea7\u751f\u7684\u8d21\u732e\u5c31\u662f\u7ecf\u8fc7\u8fd9\u6761\u8fb9\u7684\u8def\u5f84\u6761\u6570\u3002\u8bbe $s_u$ \u8868\u793a $u$ \u4e0d\u5411\u73af\u4e0a\u6269\u5c55\u7684\u5b50\u6811\u5927\u5c0f\uff0c\u5219\u7b54\u6848\u4e3a\n$$\n\\frac{\\sum s_u(n-s_u)}{2}=\\frac{n^2-\\sum s_u^2}{2}\n$$\n\u5219\u6211\u4eec\u53ea\u9700\u8981\u4f7f $\\sum s_u^2$ \u6700\u5c0f\u3002\u8bbe $f_u$ \u8868\u793a\u4ece $u$ \u5b50\u6811\u5916\uff08\u5305\u62ec $u$ \uff09\u5411\u5176\u5b50\u6811\u5185\uff08\u5305\u62ec $u$ \uff09\u8fde\u4e00\u6761\u8fb9\u7684 $u$ \u5b50\u6811\u5185 $\\sum s_x^2$ \u7684\u6700\u5c0f\u503c\u3002\u8f6c\u79fb\u4e3a\n$$\nf_u=\\min\\limits_{v\\in son_u}\\{f_v+(siz_u-siz_v)^2,siz_u^2\\}\n$$\n$f$ \u53ef\u4ee5\u76f4\u63a5 $O(n)$ dfs \u4e00\u904d\u6c42\u51fa\u3002\u7136\u540e\u8003\u8651\u5408\u5e76\u7b54\u6848\u3002\u5bf9\u4e8e $x$ \u7684\u4e24\u4e2a\u513f\u5b50 $y,z$\uff0c\u8fde\u4e00\u6761\u4ece $y$ \u5b50\u6811\u5185\u5230 $z$ \u5b50\u6811\u5185\u7684\u8fb9\u7684\u4ee3\u4ef7\u4e3a\n$$\nans=\\min\\{f_y+f_z+(n-siz_y-siz_z)^2\\}\n$$\n\u8fde\u4e00\u6761\u4ece $x$ \u5230 $y$ \u5b50\u6811\u5185\u7684\u8fb9\u7684\u4ee3\u4ef7\u4e3a \n$$\nans=\\min\\{f_y+(n-siz_y)^2\\}\n$$\n\u7b2c\u4e00\u79cd\u66b4\u529b\u8f6c\u79fb\u662f $O(n^2)$ \u7684\uff0c\u7b2c\u4e8c\u79cd\u662f $O(n)$ \u7684\u3002\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u8f6c\u79fb\uff0c\u8003\u8651\u659c\u7387\u4f18\u5316\uff1a\n\n\u5bf9\u4e8e $siz_i>siz_j$ \u7684\u4e24\u4e2a\u70b9\uff0c\u82e5\u4ece $i$ \u8f6c\u79fb\u66f4\u4f18\n\n$$\nf_y+f_i+(n-siz_y-siz_i)^2\\le f_y+f_j+(n-siz_y-siz_j)^2\\\\\nf_i+siz_i^2-2(n-siz_y)siz_i\\le f_j+siz_j^2-2(n-siz_y)siz_j\\\\\nf_i+siz_i^2-f_j-siz_j^2\\le 2(n-siz_y)(siz_i-siz_j)\\\\\n\\frac{f_i+siz_i^2-f_j-siz_j^2}{siz_i-siz_j}\\le 2(n-siz_y)\n$$\n\n\u8f6c\u79fb\u65f6\uff0c\u5148\u628a $x$ \u7684\u6240\u6709\u513f\u5b50\u6309 $siz$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u5219\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u4e0b\u51f8\u58f3\uff0c\u4e14\u8f6c\u79fb\u7684 $k$ \u662f\u5355\u8c03\u9012\u51cf\u7684\uff0c\u7528\u5355\u8c03\u6808\u7ef4\u62a4\u5373\u53ef\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nnamespace FGF\n{\n\tint n;\n\tconst int N=5e5+5;\n\tvector<int> g[N];\n\tll f[N],ans=0x3f3f3f3f3f3f3f3f,siz[N],y[N];\n\tint p[N],q[N];\n\tbool cmp(int x,int y){return siz[x]<siz[y];}\n\tvoid dfs(int u,int fa)\n\t{\n\t\tsiz[u]=1;int num=0;\n\t\tfor(auto v:g[u])\n\t\t\tif(v!=fa)dfs(v,u),siz[u]+=siz[v];\n\t\tf[u]=siz[u]*siz[u];\n\t\tfor(auto v:g[u])\n\t\t\tif(v!=fa)f[u]=min(f[u],f[v]+(siz[u]-siz[v])*(siz[u]-siz[v])),ans=min(ans,f[v]+(n-siz[v])*(n-siz[v])),p[++num]=v;\n\t\tsort(p+1,p+num+1,cmp);\n\t\tint tp=1;q[tp]=p[1];\n\t\tfor(int i=1;i<=num;i++)\n\t\t\ty[p[i]]=f[p[i]]+siz[p[i]]*siz[p[i]];\n\t\tfor(int i=2;i<=num;i++)\n\t\t{\n\t\t\twhile(tp>1&&y[q[tp]]-y[q[tp-1]]>(siz[q[tp]]-siz[q[tp-1]])*2ll*(n-siz[p[i]]))tp--;\n\t\t\tans=min(ans,f[q[tp]]+f[p[i]]+(n-siz[q[tp]]-siz[p[i]])*(n-siz[q[tp]]-siz[p[i]]));\n\t\t\twhile(tp>1&&(y[q[tp]]-y[q[tp-1]])*(siz[p[i]]-siz[q[tp]])>=(y[p[i]]-y[q[tp]])*(siz[q[tp]]-siz[q[tp-1]]))tp--;\n\t\t\tq[++tp]=p[i];\n\t\t}\n\t}\n\tvoid work()\n\t{\n\t\tscanf(\"%d\",&n);\n\t\tfor(int i=1,u,v;i<n;i++)\n\t\t\tscanf(\"%d%d\",&u,&v),g[u].push_back(v),g[v].push_back(u);\n\t\tdfs(1,0);\n\t\tprintf(\"%lld\\n\",(1ll*n*(n-1)+1ll*n*n-ans)/2);\n\t}\n}\nint main()\n{\n\tFGF::work();\n\treturn 0;\n}\n```\n",
        "postTime": 1621592241,
        "uid": 224403,
        "name": "\u6728xx\u6728\u5927",
        "ccfLevel": 9,
        "title": "CF1179D Fedor Runs for President\uff08\u6811\u4e0a\u659c\u7387\u4f18\u5316\uff09"
    },
    {
        "content": "\n\u9898\u76ee\uff1a[CF1179D Fedor Runs for President](https://www.luogu.com.cn/problem/CF1179D)\n\n## \u6807\u7b7e\uff1a\u8ba1\u6570\uff0c\u659c\u7387\u4f18\u5316\n\n\u9898\u76ee\u5927\u610f\uff1a\n\n+ \u7ed9\u5b9a\u4e00\u4e2a\u6811\uff0c\u5728\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u52a0\u8fb9\uff0c\u8981\u6c42\u52a0\u5b8c\u8fb9\u4e4b\u540e\u6811\u4e0a\u7b80\u5355\u8def\u5f84\u6570\u91cf\u7684\u6700\u5927\u503c\n+ \u7b80\u5355\u8def\u5f84\u6307\u8be5\u8def\u5f84\u7ecf\u8fc7\u7684\u8282\u70b9\u4e0d\u91cd\u590d\n+ $ n \\leqslant 500,000 $\n\n## \u601d\u8def\n\u5c06\u6240\u6709\u8282\u70b9\u4e24\u4e24\u914d\u5bf9\uff0c\u53ef\u5f97\u4e00\u4e2a\u6709 $ n $ \u4e2a\u8282\u70b9\u7684\u6811\u7684\u7b80\u5355\u8def\u5f84\u6570\u91cf\u4e3a $ \\mathrm{C}_n^2 $ \u3002\n\n\u7136\u540e\u6211\u4eec\u5411\u6811\u4e0a\u9762\u52a0\u8fb9\uff0c\u89c2\u5bdf\u4f1a\u589e\u52a0\u54ea\u4e9b\u8fb9\u3002\uff08\u4e3a\u4e86\u65b9\u4fbf\u89c2\u5bdf\uff0c\u628a\u6811\u753b\u6210\u8fd9\u4e2a\u6837\u5b50\uff0c\u5e76\u4ee4\u4e00\u53f7\u8282\u70b9\u4e3a\u6839\u7ed3\u70b9\uff09\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/sgymmcuk.png)\n\n\u5728\u4e00\u53f7\u8282\u70b9\u4e0e\u4e8c\u53f7\u8282\u70b9\u4e4b\u95f4\u8fde\u8fb9\uff0c\u9996\u5148\u53ef\u4ee5\u5f97\u51fa\u4e00\u4e2a\u663e\u800c\u6613\u89c1\u7684\u7ed3\u8bba\uff1a\u65b0\u8fb9\u589e\u52a0\u7684\u7b80\u5355\u8def\u5f84\u6761\u6570\u5c31\u662f\u65b0\u7684\u57fa\u73af\u6811\u4e0a**\u7ecf\u8fc7\u8be5\u8fb9\u7684\u7b80\u5355\u8def\u5f84\u6761\u6570**\u3002\u6240\u4ee5\u6211\u4eec\u8003\u8651\u8ba1\u7b97\u6709\u591a\u5c11\u8282\u70b9\u53ef\u4ee5\u5f62\u6210\u4e00\u6761\u7ecf\u8fc7\u8be5\u8fb9\u7684\u7b80\u5355\u8def\u5f84\u3002\n\n\u89c2\u5bdf\u53ef\u5f97\uff0c**\u82e5\u67d0\u4e24\u4e2a\u7ed3\u70b9\u95f4\u7684\u8def\u5f84\u4e0e\u88ab\u6211\u4eec\u52a0\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u4e4b\u95f4\u7684\u8def\u5f84\u6ca1\u6709\u91cd\u5408\u8fb9\uff0c\u5219\u8fd9\u4e24\u4e2a\u8282\u70b9\u4e4b\u95f4\u7684\u7b80\u5355\u8def\u5f84\u5fc5\u5b9a\u4e0d\u80fd\u7ecf\u8fc7\u65b0\u52a0\u7684\u8fd9\u4e00\u6761\u8fb9**\u3002\u4f8b\u5982\u56fe\u4e2d\u7684\u4e09\u3001\u56db\u4e24\u4e2a\u7ed3\u70b9\uff0c\u539f\u56e0\u662f\u8fd9\u7c7b\u8282\u70b9\u60f3\u8981\u8fde\u4e0a\u65b0\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\uff0c\u90a3\u8fd9\u6761\u8def\u5f84\u5c31\u5fc5\u5b9a\u5728\u5b83\u4eec\u7684 $ lca $ \u5904\u4ea4\u6c47\uff0c\u90a3\u4e48\u5b83\u5c31\u4e0d\u662f\u4e00\u6761\u7b80\u5355\u8def\u5f84\u4e86\u3002\u800c\u5408\u6cd5\u7684\u8def\u5f84\u6570\u91cf\u5374\u5f88\u96be\u62bd\u8c61\u5730\u8ba1\u7b97\uff0c\u8fd9\u542f\u53d1\u6211\u4eec\u7528\u5bb9\u65a5\u6765\u505a\u3002\u8bbe\u5f53\u524d\u6811\u4e2d\u6240\u6709\u7684\u4e0d\u5408\u6cd5\u8def\u5f84\u6761\u6570\u4e3a $ ans $\uff0c \u5219\u5f53\u524d\n\u7684\u7b80\u5355\u8def\u5f84\u603b\u6761\u6570\u5c31\u4e3a $ 2\\mathrm{C}_n^2 - ans $ \uff0c \u6700\u7ec8\u7684\u7ed3\u679c\u5373\u4e3a $ 2\\mathrm{C}_n^2 -\\min { ans } $ \u3002\n\n\u53d1\u73b0\u5bf9 $ ans $ \u7684\u66f4\u65b0\u53ea\u4f1a\u5728\u65b0\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u4e4b\u95f4\u7684\u8def\u5f84\u4e0a\u53d1\u751f\u3002\u4f8b\u5982\u56fe\u4e2d\u7684\u4e94\u53f7\u8282\u70b9\uff0c\u5b83\u4e0a\u9762\u5b50\u6811\u4e2d\uff08\u5305\u62ec\u5b83\u81ea\u5df1\uff09\u6709\u56db\u4e2a\u8282\u70b9\u4e0d\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\uff0c\u8fd9\u56db\u4e2a\u7ed3\u70b9\u5bf9 $ ans $ \u7684\u8d21\u732e\u5373\u4e3a $ \\mathrm{C}_4^2 $ \u3002\n\n\n\u4e8e\u662f\u6211\u4eec\u7ed9\u8fd9\u4e2a\u6811\u89c4\u5b9a\u4e00\u4e2a\u6839\uff0c$ x $ \u8282\u70b9\u7684\u5b50\u6811\u5927\u5c0f\u4e3a $ siz_x $ \uff0c\u65b0\u8fb9\u4e24\u7aef\u70b9\u4e4b\u95f4\u7684\u8def\u5f84\u6240\u7ecf\u8fc7\u7684\u8282\u70b9\u96c6\u5408\u8bb0\u4e3a $ S $ \uff0c\u5f53\u524d\u8282\u70b9\u4e2d\u65b0\u8fb9\u7684\u67d0\u4e00\u4e2a\u7aef\u70b9\u6240\u5c5e\u7684\u5b50\u6811\u4e3a $ y $ \uff0c\u6613\u5f97\u51fa\u7ed3\u8bba\uff1a\n\n$$ ans = \\sum_{x \\in S } \\mathrm{C}_{siz_x - siz_y}^2 $$\n\n\u5f53\u7136\uff0c\u5bf9\u4e8e\u4e24\u7aef\u70b9\u7684 $ lca $ \u5904\uff0c\u6b64\u65f6\u5b83\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5e94\u7279\u6b8a\u8ba1\u7b97\u4e3a\uff08 $ y1y2 $ \u5206\u522b\u4e3a\u4e24\u4e2a\u7aef\u70b9\u6240\u5728\u5b50\u6811\uff09\uff1a\n\n$$ \\mathrm{C}_{n - siz_{y1} - siz_{y2}}^2  $$\n\n\n\u6709\u4e86\u8fd9\u4e24\u4e2a\u67ff\u5b50\uff0c\u6211\u4eec\u7acb\u523b\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a $ O (n^2 \\log^2 n) $ \u7684\u66b4\u529b\u505a\u6cd5\uff1a\u679a\u4e3e\u8fde\u8fb9\u7684\u7aef\u70b9\uff0c\u7136\u540e\u8dd1\u6811\u5256\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6bcf\u4e00\u6761\u91cd\u94fe\u5bf9 $ ans $ \u7684\u8d21\u732e\u5373\u53ef\u3002\u6b64\u65b9\u6cd5\u9700\u8981\u5728 $ lca $ \u5904\u8fdb\u884c\u4e00\u5927\u5806\u7279\u5224\uff0c~~\u800c\u4e14\u6211\u5199\u6302\u4e86~~\uff0c\u6240\u4ee5\u4ee3\u7801\u4e0d\u4e88\u653e\u51fa\u3002\n\n\u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff1a\u663e\u7136\u53ef\u4ee5\u5728\u5bf9\u6811\u8fdb\u884c dfs \u7684\u8fc7\u7a0b\u4e2d\u52a8\u6001\u5730\u66f4\u65b0\u5f53\u524d\u7ed3\u679c\u3002\u5373\u5728\u5f53\u524d\u7ed3\u70b9\u7684\u5b50\u6811\u5185\u627e\u4e24\u4e2a\u7aef\u70b9\uff0c\u6ee1\u8db3\u8fd9\u4e24\u4e2a\u7aef\u70b9\u7684 $ lca $ \u4e3a\u5f53\u524d\u7ed3\u70b9\uff0c\u7136\u540e\u5728\u8fd9\u4e24\u4e2a\u7ed3\u70b9\u4e4b\u95f4\u8fde\u8fb9\uff0c\u5c06\u8ba1\u7b97\u51fa\u6765\u7684\u8def\u5f84\u7ed3\u679c\u62ff\u6765\u66f4\u65b0 $ ans $ \u5373\u53ef\u3002\u8def\u5f84\u6761\u6570\u662f\u5f88\u597d\u8ba1\u7b97\u7684\uff0c\u5c06\u65b0\u8fb9\u4e24\u7aef\u70b9\u4e4b\u95f4\u7684\u8def\u5f84\u62c6\u6210\u5206\u522b\u722c\u5230 $ lca $ \u7684\u4e24\u6761\u94fe\uff0c\u8fd9\u4e24\u6761\u94fe\u7684\u94fe\u9876\u5373\u4e3a\u5f53\u524d\u7ed3\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u5408\u5e76\u8fd9\u4e24\u6761\u94fe\u5373\u53ef\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8ba9\u8be5\u8282\u70b9\u7684\u6bcf\u4e00\u4e2a\u5b50\u6811\u90fd\u4f20\u4e0a\u6765\u4e00\u6761\u94fe\uff0c\u8fd9\u4e2a\u94fe\u7684\u6570\u503c\u8868\u793a\u82e5\u4ee5\u5f53\u524d\u94fe\u7684\u7aef\u70b9\u4f5c\u4e3a\u65b0\u8fb9\u7684\u4e00\u4e2a\u7aef\u70b9\uff0c\u5219\u8fd9\u4e00\u6761\u94fe\u5bf9\u6700\u7ec8\u7ed3\u679c\u7684\u8d21\u732e\u662f\u591a\u5c11\uff0c\u5728\u4f20\u4e0a\u6765\u7684\u6240\u6709\u5b50\u6811\u4e4b\u4e2d\u4e24\u4e24\u914d\u5bf9\uff0c\u8ba1\u7b97\u6700\u7ec8\u7b54\u6848\uff0c\u66f4\u65b0 $ ans $ \u7684\u6700\u5c0f\u503c\u5373\u53ef\u3002\u4ee4\u4ee5\u5f53\u524d\u7ed3\u70b9\u4e3a\u9876\u70b9\u7684\u94fe\u7684\u6570\u503c\u4e3a $ del_x $ \uff08 delelte \uff0c\u610f\u601d\u662f\u4ece\u7b54\u6848\u91cc\u5220\u9664\u591a\u5c11\u975e\u6cd5\u7684\u8def\u5f84\uff0c\u5373\u88ab\u5bb9\u65a5\u6389\u7684\u70b9\u5bf9\u7684\u6570\u91cf\uff09\uff0c\u5219\u6709\uff1a\n\n$$ del_x = \\min_{y \\in son(x)} \\left \\{ \\mathrm{C}_{siz_x - siz_y}^2 + del_y \\right\\} $$\n\n\u5bf9\u4e8e\u53f6\u5b50\u7ed3\u70b9\uff0c\u81ea\u7136\u5730\u6709 $del_x = 0 $ \u3002\n\n\u6709\u4e86\u8fd9\u4e9b\u4fe1\u606f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6109\u5feb\u5730\u9012\u63a8\u4e86\u3002 $ n^2 $ \u505a\u6cd5\u663e\u7136\uff1a\u5bf9\u4e8e\u4f20\u4e0a\u6765\u7684\u6bcf\u4e24\u6761\u94fe\uff0c\u4e24\u4e24\u5408\u5e76\uff0c\u5408\u5e76\u4e4b\u540e\u7684\u4fe1\u606f\u4e3a\uff1a\n\n$$ \\mathrm{C}_{n - siz_{y1} - siz_{y2}}^2 + del_{y1} + del_{y2}$$\n\n\u7c7b\u4f3c\u4e0a\u6587\u4e2d\u63d0\u5230\u7684\u5728 $lca$ \u5904\u7684\u5904\u7406\uff0c $\\mathrm{C}_{n - siz_{y1} - siz_{y2}}^2$ \u5373\u4e3a $x$ \u53ca\u4ee5\u4e0a\u5b50\u6811\u4e2d\u4e0d\u5408\u6cd5\u7684\u7b80\u5355\u8def\u5f84\u6570\u91cf\u3002\u5c06\u6240\u6709\u94fe\u90fd\u626b\u4e00\u904d\uff0c\u4e24\u4e24\u66b4\u529b\u5408\u5e76\u5373\u53ef\u3002\u82e5\u6b64\u65f6\u6211\u4eec\u5c06\u7ec4\u5408\u6570\u62c6\u5f00\uff0c\u773c\u524d\u5c31\u4f1a\u51fa\u73b0\u4e00\u4e2a\u719f\u6089\u7684\u4e58\u79ef\u5f0f\uff0c\u4e8e\u662f\u6211\u4eec\u7ec8\u4e8e\u5f97\u5230\u4e86\u672c\u9898\u7684\u6ee1\u5206\u505a\u6cd5\uff1a\n\n## 100pts\uff1a\u659c\u7387\u4f18\u5316\n\n\n\u62c6\u5f00\u540e\u4f1a\u53d1\u73b0\uff0c\u5408\u5e76\u540e\u7684\u7b54\u6848\u5373\u4e3a\uff1a\uff08**\u7279\u522b\u6ce8\u610f\uff1a\u56e0\u4e3a\u7a0b\u5e8f\u5b9e\u73b0\u7684\u65f6\u5019\u5904\u7406\u7ec4\u5408\u6570\u91cc\u9664\u6389\u76842\u7684\u60c5\u51b5\u975e\u5e38\u590d\u6742\uff0c\u4e0d\u597d\u7ef4\u62a4\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u6240\u6709\u7684\u67ff\u5b50\u90fd\u4e58\u5b83\u4e00\u624b2\uff0c\u6700\u540e\u518d\u9664\u6389\u5373\u53ef\u3002\u4ee5\u4e0b\u6240\u6709\u67ff\u5b50\u90fd\u9ed8\u8ba4\u8fd9\u4e48\u5904\u7406\u4e86**\uff09\n\n$$ (n-siz_{y1}-siz_{y2})(n-siz_{y1}-siz_{y2}-1)+ 2 \\times del_{y1} + 2 \\times del_{y2} $$\n\n\u5f88\u660e\u663e\u7684\u659c\u7387\u4f18\u5316\u4e86\u3002\u5c06\u5f53\u524d\u5f85\u51b3\u7b56\u70b9\u770b\u4f5c $y2$\uff08\u8bbe\u4e3a\u70b9 $i$ \uff09\uff0c\u8f6c\u79fb\u70b9\u4e3a $y1$\uff08\u8bbe\u4e3a\u70b9 $j$ \uff09\uff0c\u5219\u4e0a\u9762\u7684\u67ff\u5b50\u53ef\u4ee5\u6700\u7ec8\u5316\u4f5c\uff08\u4e3a\u4e86\u7b80\u5316\u8fd0\u7b97\uff0c\u6b64\u5904\u8bbe $ 2 \\times n - 1 $ \u4e3a $n_ 3$ \uff09\uff1a\n\n\n$$n\\cdot(n-1)+siz_i^2+2 \\times del_i+\\min\\left\\{-(n_3-2\\times siz_j)\\cdot siz_i+siz_j^2-n_3\\cdot siz_j+2 \\times del_j\\right\\} $$\n\n\u8be5\u67ff\u5b50\u4e2d\uff0c$\\min$ \u51fd\u6570\u5de6\u8fb9\u5168\u90e8\u90fd\u662f\u4e0e $i$ \u6709\u5173\u7684\u5e38\u6570\u9879\uff0c\u5de6\u5f0f\u4e2d\uff0c\u5c06\u6bcf\u4e00\u4e2a\u8f6c\u79fb\u70b9\u770b\u4f5c\u5e73\u9762\u5185\u7684\u70b9 $(n_3-2\\times siz_x,siz_x^2-n_3\\cdot siz_x+2 \\times del_x)$\uff0c\u5219\u8fd9\u4e2a\u67ff\u5b50\u7684\u503c\u5c31\u662f\u4e00\u4e2a\u8fc7\u8be5\u70b9\u7684\u659c\u7387\u4e3a $siz_i$ \u7684\u76f4\u7ebf\u4e0ex\u8f74\u7684\u622a\u8ddd\u3002\u4e3a\u4e86\u8ba9\u51b3\u7b56\u6ee1\u8db3\u5355\u8c03\u6027\uff0c\u5728\u6240\u6709\u7ed3\u70b9\u4f20\u8f93\u4e0a\u6765\u4e4b\u540e\u6309\u7167\u5176\u5bf9\u5e94\u7684\u659c\u7387\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u7ef4\u62a4\u51f8\u58f3\u4e86\u3002\u56e0\u4e3a\u6bcf\u4e2a\u7ed3\u70b9\u53ea\u4f1a\u5728\u5176\u7236\u8282\u70b9\u5904\u5165\u961f\u3001\u51fa\u961f\u4e00\u6b21\uff0c\u6240\u4ee5\u7b97\u4e0a\u6392\u5e8f\u4e4b\u540e\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(nlogn)$ \u3002\n\n\n\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n// IO\ntypedef long long ll;\ntypedef double db;\ninline ll read() {\n\tll num=0ll; char ch=getchar();\n\twhile(!isdigit(ch)) ch=getchar();\n\twhile(isdigit(ch)) num=(num<<3ll)+(num<<1ll)+(ch^48), ch=getchar();\n\treturn num;\n}\n\nconst int N=5e5+7, M=5e5+7;\nint c[N],len, q[N];\nstruct s { int y,nxt; } b[M<<1];\ninline void add(int x,int y) { b[++len]=(s) { y,c[x] }, c[x]=len; }\n#define rg register\n// ans\u3001del\u548c siz\u3001n3 \u7684\u610f\u4e49\u7686\u4e0e\u6587\u4e2d\u4e00\u81f4 \nll ans=(ll)N * (ll)N, del[N], siz[N], n3, n;\nbool vis[N];\n\n// \u659c\u7387\u4f18\u5316\u76f8\u5173  \n// \u5168\u90e8\u4e58\u4e0a\u4e86\u5e38\u6570 2 \ninline ll X(int i) { return n3 - 2ll*siz[i]; }\ninline ll K(int i) { return siz[i]; }\ninline ll Y(int i) { return siz[i] * siz[i] - n3 * siz[i] + 2ll*del[i]; }\ninline ll B(int i) { return (ll) n * (ll) (n-1) + siz[i] * siz[i] + 2ll*del[i]; } // B\u662f\u67ff\u5b50\u91cc\u9762\u5173\u4e8e i\u7684\u5e38\u6570 \ninline db slope(int x,int y) { return X(x) == X(y) ? -1e18 : ((db) (Y(x) - Y(y)) / (db) (X(x) - X(y))); }\ninline bool cmp(int x,int y) { return K(x) < K(y); }\n\n// \u9884\u5904\u7406 \ninline void dfs1(int x) {\n\tvis[x]=true ; siz[x]=1ll;\n\tfor(int i=c[x];i;i=b[i].nxt) {\n\t\tint y=b[i].y;\n\t\tif(vis[y]) continue ;\n\t\tdfs1(y); siz[x]+=siz[y];\n\t}\n}\n\ninline void dp(int x) {\n\tvis[x]=true ; del[x]=(ll)N*(ll)N;\n\t// son\u6570\u7ec4\u4fdd\u5b58\u4e86\u8fd9\u4e2a\u7ed3\u70b9\u4f20\u4e0a\u6765\u7684\u6240\u6709\u5b50\u8282\u70b9\u7684\u4fe1\u606f \n\tvector<int > son; son.clear();\n\t\n\t// \u7279\u5224\u53f6\u5b50\u7ed3\u70b9 \n\tif(siz[x]==1) del[x]=0ll;\n\tfor(int i=c[x];i;i=b[i].nxt) {\n\t\tint y=b[i].y;\n\t\tif(vis[y]) continue ;\n\t\tdp(y); son.push_back(y);\n\t\t// \u8ba1\u7b97\u5f53\u524d\u7ed3\u70b9\u7684 del\u503c \n\t\tdel[x]=min(del[x], (siz[x] - siz[y]) * (siz[x] - siz[y] -1ll) / 2ll + del[y]);\n\t}\n\t\n\t// \u7279\u5224\uff0c\u82e5\u7b54\u6848\u4e3a\u4e00\u6761\u94fe\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u8ba1\u7b97\u5373\u53ef \n\tans=min(ans, ((ll)n-siz[x]) * ((ll)n-siz[x] + 1ll) / 2ll + del[x]);\n\t// \u5b50\u8282\u70b9\u6570\u76ee\u5c0f\u4e8e2\uff0c\u5408\u5e76\u65e0\u610f\u4e49 \n\tif(son.size() <=1) return ;\n\t\n\t// \u6309\u7167\u659c\u7387\u6392\u5e8f \n\tsort(son.begin(),son.end(),cmp);\n\tint h=1, e=1; q[1]=son[0]; // \u628a\u7b2c\u4e00\u4e2a\u7ed3\u70b9\u63d0\u51fa\u6765 \n\tfor(rg int j=1;j<son.size();j++) {\n\t\tint i=son[j];\n\t\twhile(e-h>=1 && slope(q[h],q[h+1]) >= K(i)) q[h++]=0;\n\t\tans=min(ans, (B(i) - K(i) * X(q[h]) + Y(q[h]))/2ll); //  \u628a\u5e38\u6570\u9664\u6389 \uff0c \u5e76\u66f4\u65b0\u6700\u7ec8\u7684\u7b54\u6848 \n\t\twhile(e-h>=1 && slope(q[e-1],q[e]) <= slope(q[e], i)) q[e--]=0;\n\t\tq[++e]=i;\n\t}\n\tfor(rg int i=h;i<=e;i++) q[i]=0; // \u987a\u624b\u6e05\u7a7a \n}\n\n\nint main() {\n\tn=read();\n\tn3=2ll*n - 1ll;\n\tfor(rg int i=1;i<n;i++) {\n\t\tint x=read(), y=read();\n\t\tadd(x,y); add(y,x);\n\t}\n\t\n\tdfs1(1);\n\tmemset(vis,false , sizeof vis);\n\tdp(1);\n\t\n\tprintf(\"%lld\\n\",(ll)n*(n-1) - ans); // \u7b54\u6848\u5373\u4e3a 2 * C(n,2) - ans \n\treturn 0;\n}\n\n```\n\n\u849f\u84bb\u7b2c\u4e00\u7bc7\u9898\u89e3\uff0c\u6c42\u7ba1\u7406\u901a\u8fc7 qwq \u3002",
        "postTime": 1606300175,
        "uid": 148116,
        "name": "\u94a0\u6d6e\u6e38",
        "ccfLevel": 0,
        "title": "CF1179D Fedor Runs for President\u89e3\u9898\u62a5\u544a"
    },
    {
        "content": "# CF1179D Fedor Runs for President\n\n------\n\n## \u9898\u610f\n\n- \u7ed9\u4e00\u68f5`n`\u4e2a\u70b9\u7684\u6811\uff0c\u6c42\u52a0\u5165\u4e00\u6761\u8fb9\u540e\uff0c\u6700\u591a\u6709\u591a\u5c11\u6761\u65e0\u5411\u7b80\u5355\u8def\u5f84\n\n- \u7b80\u5355\u8def\u5f84\u5b9a\u4e49\u4e3a\u4efb\u610f\u4e00\u4e2a\u70b9\u6700\u591a\u7ecf\u8fc7\u4e00\u6b21\u7684\u8def\u5f84\n\n------\n\n## \u601d\u8def\n\n- \u6211\u4eec\u82e5\u5c06`i`\u548c`j`\u76f8\u8fde\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06`i`\u5230`j`\u7684\u8def\u5f84\u62c9\u76f4\n  - \u8def\u5f84\u4e0a\u6bcf\u4e2a\u70b9\u6709\u4e00\u4e2a\u4ee5\u8be5\u70b9\u4e3a\u6839\u7684\u5b50\u6811\uff0c\u8bb0\u5b50\u6811\u5927\u5c0f\u4e3a`size[i]`\n  - \u8be5\u8def\u5f84\u4e0a\u4e0d\u540c\u5b50\u6811\u4e4b\u95f4\u7684\u70b9\u76f8\u4e92\u8bbf\u95ee\u7684\u7b80\u5355\u8def\u5f84\u589e\u52a0\u4e86\u4e00\u6761\n  - \u589e\u52a0\u8def\u5f84\u6570 $\\sum {(n-size[i])*size[i]} = \\frac{1}{2} (n^2- \\sum size[i]^2)$\uff0c`i`\u4e3a\u8def\u5f84\u4e0a\u7684\u70b9\n  - \u7efc\u4e0a\uff0c\u6211\u4eec\u8981\u6c42\u7684\u5c31\u662f`\\sum size[i]`\u7684\u6700\u5c0f\u503c\n- \u7136\u540e\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u89c4\u5f8b\uff1a\u8def\u5f84\u7684\u4e24\u7aef\u5fc5\u5b9a\u4e3a\u53f6\u5b50\u6216\u8005\u6839\n  - \u82e5\u4e0d\u4e3a\u53f6\u5b50\uff0c\u6211\u53ef\u4ee5\u8ba9\u4ed6\u7684\u7aef\u70b9\u5411\u5b50\u6811\u65b9\u5411\u6269\u5c55\uff0c\u90a3\u4e48\u5f97\u5230$size[i]$\u66f4\u5c0f\uff08$n^2>x^2+(n-x)^2$\uff09\n- \u4ee4`dp[i]`\u4e3a\u4ee5`i`\u4e3a\u6839\u7684\u5b50\u6811\u4e2d`\\sum size[i]`\u6700\u5c0f\u7684\u94fe\n  - \u8f6c\u79fb\u65b9\u7a0b\u4e3a$dp[i]=min(dp[j]+(size[i]-size[j])^2)$\n  \n\n```cpp\n\nn_size[now] = 1;\nfor (auto it : E[now])\n{\n    if (it == fa)\n        continue;\n    dfs(it, now);\n    n_size[now] += n_size[it];\n}\ndp[now] = n_size[now] * n_size[now];\nfor (auto it : E[now])\n{\n    if (it == fa)\n        continue;\n    dp[now] = min(dp[now], dp[it] + (n_size[now] - n_size[it]) * (n_size[now] - n_size[it]));\n}\n\n\n```\n\n\n- \u5bf9\u4e8e\u6839`s`\uff0c\u53ef\u4ee5\u5c06`i`\uff0c`j`\u548c\u5e76\n  - $ans=min(ans,dp[i]+dp[j]+(n-size[i]-size[j])^2)$\n  - \u53ef\u4ee5\u5c06`s`\u4e0e`i`\u5408\u5e76\uff0c$ans=min(dp[i]+(n-size[i])^2)$\n- \u5bf9\u4e0a\u9762$n^2$\u505a\u6cd5\u663e\u7136\u4f1a`t`\uff0c\u6211\u4eec\u5c1d\u8bd5\u659c\u7387\u4f18\u5316\n  - $ans = dp[i] + dp[j] + (n - size[i] - size[j]) ^ 2$\n  - $dp[j] + (n - size[j]) ^ 2 = 2 * size[i] * (n - size[j]) + ans - size[i] ^ 2 - dp[i]$\n  -  `x: n-size[j]`\n  - $y: dp[j] +(n-size[j])^2$\n  - `k: 2*size[i]`\n  - $b: ans- size[i] ^2 - dp[i]$\n\n```cpp\nregister LL x, y, k, b;\nq[top = 1] = make_pair(n - s[1].first, s[1].second + (n - s[1].first) * (n - s[1].first));\nfor (int i = 2; i <= tot; i++)\n{\n    x = n - s[i].first;\n    y = s[i].second + x * x;\n    k = 2 * s[i].first;\n    int pos = binary_search(k);\n    b = q[pos].second - k * q[pos].first;\n    ans = min(ans, b + s[i].first * s[i].first + s[i].second);\n    //(y2-y1)/(x2-x1) >= (y3-y1)/(x3-x1)\n    while (top > 1 && (q[top].second - q[top - 1].second) * (x - q[top - 1].first) >= (y - q[top - 1].second) * (q[top].first - q[top - 1].first))\n        top--;\n    q[++top] = make_pair(x, y);\n}\nans = min(ans, dp[now] + (n - n_size[now]) * (n - n_size[now]));\na[now] = make_pair(n_size[now], dp[now]);\n\n```\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 5e5 + 5;\ntypedef long long LL;\nLL n;\nvector<int> E[maxn];\nLL n_size[maxn], dp[maxn];\n//dp\u8868\u793a\u4ee5 i \u4e3a\u6839\u7684\u5b50\u6570\uff0c\u8fde\u63a5\u53f6\u5b50\u8282\u70b9 \u5b50\u6811\u5e73\u65b9\u548c\u6700\u5c0f\u7684\u8def\u5f84\ntypedef pair<LL, LL> pll;\nbool cmp(pll& a, pll& b)\n{\n    return a.first > b.first;\n}\npll a[maxn], s[maxn], q[maxn];\nint top;\nLL binary_search(LL k)\n{\n    if (top == 1)\n        return 1;\n    int l = 2, r = top, mid, ans = 1;\n    while (l <= r) {\n        mid = (l + r) >> 1;\n        if ((q[mid].second - q[mid - 1].second) <= k * (q[mid].first - q[mid - 1].first))\n            ans = max(ans, mid),\n            l = mid + 1;\n        else\n            r = mid - 1;\n    }\n    return ans;\n}\nLL ans = 1e18;\nvoid dfs(int now, int fa)\n{\n    n_size[now] = 1;\n    for (auto it : E[now]) {\n        if (it == fa)\n            continue;\n        dfs(it, now);\n        n_size[now] += n_size[it];\n    }\n    dp[now] = n_size[now] * n_size[now];\n    for (auto it : E[now]) {\n        if (it == fa)\n            continue;\n        dp[now] = min(dp[now], dp[it] + (n_size[now] - n_size[it]) * (n_size[now] - n_size[it]));\n    }\n    // ans = dp[i] + dp[j] + (n - size[i] - size[j]) ^ 2\n    // dp[j] + (n - size[j]) ^ 2 = 2 * size[i] * (n - size[j]) + ans - size[i] ^ 2 - dp[i]\n    int tot = 0;\n    for (auto it : E[now]) {\n        if (it == fa)\n            continue;\n        s[++tot] = a[it];\n    }\n    // x: n-size[j]\n    // y: dp[j] +(n-size[j])^2\n    // k: 2*size[i]\n    // b: ans- size[i] ^2 - dp[i]\n    sort(s + 1, s + 1 + tot, cmp);\n    int l = 1, r = 1;\n    register LL x, y, k, b;\n    q[top = 1] = make_pair(n - s[1].first, s[1].second + (n - s[1].first) * (n - s[1].first));\n    for (int i = 2; i <= tot; i++) {\n        x = n - s[i].first;\n        y = s[i].second + x * x;\n        k = 2 * s[i].first;\n        int pos = binary_search(k);\n        b = q[pos].second - k * q[pos].first;\n        ans = min(ans, b + s[i].first * s[i].first + s[i].second);\n        //(y2-y1)/(x2-x1) >= (y3-y1)/(x3-x1)\n        while (top > 1 && (q[top].second - q[top - 1].second) * (x - q[top - 1].first) >= (y - q[top - 1].second) * (q[top].first - q[top - 1].first))\n            top--;\n        q[++top] = make_pair(x, y);\n    }\n    ans = min(ans, dp[now] + (n - n_size[now]) * (n - n_size[now]));\n    a[now] = make_pair(n_size[now], dp[now]);\n}\nint main()\n{\n   // freopen(\"out.txt\", \"r\", stdin);\n    scanf(\"%I64d\", &n);\n    int u, v;\n    for (int i = 1; i < n; i++) {\n        scanf(\"%d%d\", &u, &v);\n        E[u].push_back(v);\n        E[v].push_back(u);\n    }\n    dfs(1, 0);\n    //cout << ans << '\\n';\n    printf(\"%I64d\\n\", n * (n - 1) / 2 + (n * n - ans) / 2);\n    return 0;\n}\n```\n\n",
        "postTime": 1569414694,
        "uid": 163242,
        "name": "qcwlmqy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1179D \u3010Fedor Runs for President\u3011"
    },
    {
        "content": "\n\u6709\u4e00\u68f5\u6811\uff0c\u4f60\u8981\u589e\u52a0\u4e00\u6761\u8fb9\uff08\u53ef\u4ee5\u91cd\u8fb9\uff0c\u4e0d\u80fd\u662f\u81ea\u73af\uff09\u4f7f\u5f97\u65b0\u56fe\u7684\u7b80\u5355\u8def\u5f84\uff08\u4e0d\u540c\u7684\u5b9a\u4e49\u662f\u8fb9\u96c6\u4e0d\u540c\uff09\u6570\u91cf\u6700\u5927\u3002\n\n\u6211\u4e5f\u4e0d\u77e5\u9053\u600e\u4e48\u5c31\u5207\u4e86\u3002\u3002\u3002\n\n\u778e\u731c\u4e00\u4e2a\u7ed3\u8bba\uff0c\u6309\u7167\u6c42\u76f4\u5f84\u7684\u65b9\u6cd5\u641c\u4e24\u904d\u3002\u3002\u3002\u3002\u3002\u800c\u4e14\u662f\u5bf9\u7684\u3002\u3002\u3002\u3002\n\n\u600e\u4e48\u6c42\u6811\u7684\u76f4\u5f84\uff1a\u76f4\u5f84\u9700\u8981\u786e\u5b9a\u4e24\u4e2a\u7aef\u70b9\u3002\u5148\u968f\u4fbf\u9009\u4e00\u4e2a\u70b9x\u4f5c\u4e3a\u7aef\u70b9\uff0c\u641c\u4e00\u904d\uff0c\u5f97\u5230\u4ee5\u8fd9\u4e2a\u70b9x\u548c\u4efb\u610f\u4e00\u4e2a\u5176\u4ed6\u70b9\u4e3a\u7aef\u70b9\u7684\u7b54\u6848\u3002\u518d\u9009\u62e9\u4e00\u4e2a\u7b54\u6848\u6700\u5927\u7684\u70b9\u4f5c\u4e3a\u7aef\u70b9\u540c\u6837\u641c\u4e00\u904d\u5c31\u884c\u4e86\u3002\n\n\u8fd9\u9053\u9898\u4e5f\u4e00\u6837\uff0c\u663e\u7136\u786e\u5b9a\u4e00\u4e2a\u7aef\u70b9\u53ef\u4ee5$O(n)$\u6c42\u4efb\u610f\u70b9\u5230\u8be5\u70b9\u7b54\u6848\uff0c\u540c\u6837\u65b9\u6cd5\u641c\u4e24\u6b21\u5c31\u884c\u4e86\u3002\n\n\u8bc1\u660e\u53ef\u4ee5\u548c\u76f4\u5f84\u8bc1\u660e\u4e00\u6837\u8bc1\u3002\uff08\u53cd\u6b63\u6211\u662f\u4e0d\u4f1a\n\nhttps://codeforces.com/contest/1179/submission/55895158",
        "postTime": 1561270257,
        "uid": 23118,
        "name": "\u03bb\u1d09\u028d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1179D \u3010Fedor Runs for President\u3011"
    },
    {
        "content": "**\u6d1b\u8c37\u4f20\u9001\u95e8\uff1a**[CF1179D Fedor Runs for President](https://www.luogu.com.cn/problem/CF1179D)\n\n--------------------------\n\n\u6a21\u62df\u8d5b\u7684\u65f6\u5019\u5c45\u7136\u81ea\u5df1\u505a\u51fa\u6765\u4e86\uff0c\u7528\u7684\u6362\u6839dp\uff0c\u770b\u5230\u9898\u89e3\u533a\u8fd8\u6ca1\u6709\u8bb2\u5230\u6362\u6839\u7684\uff0c\u4e8e\u662f\u5199\u7bc7\u9898\u89e3\u4ecb\u7ecd\u4e00\u4e0b\u3002\n\n------------------------\n\n**step 1. \u95ee\u9898\u8f6c\u5316\uff1a**\n\n\u8003\u8651\u52a0\u4e0a\u4e00\u6761\u8fb9\u540e\uff0c\u65b0\u589e\u4e86\u591a\u5c11\u6761\u8def\u5f84\u3002   \n\u6b64\u65f6\u539f\u6811\u53d8\u4e3a\u4e86\u4e00\u68f5\u57fa\u73af\u6811\uff0c\u5c06\u5176\u770b\u4f5c\u662f\u628a\u82e5\u5e72\u5b50\u6811\u7684\u6839\u987a\u6b21\u8fde\u63a5\u6210\u73af\u5f97\u5230\u7684\u56fe\uff0c\u5f53\u4e14\u4ec5\u5f53\u4e24\u4e2a\u70b9\u5206\u522b\u5904\u4e8e\u4e0d\u540c\u5b50\u6811\u7684\u65f6\u5019\uff0c\u5176\u4e4b\u95f4\u7684\u8def\u5f84\u4f1a\u7ecf\u8fc7\u73af\uff0c\u4e5f\u5c31\u65b0\u589e\u4e86\u4e00\u6761\u8def\u5f84\u3002\u82e5\u6709 $k$ \u68f5\u5b50\u6811\uff0c\u7b2c $i$ \u68f5\u5927\u5c0f\u4e3a $siz_i$\uff0c\u90a3\u4e48\u8def\u5f84\u6761\u6570\u4e3a\uff1a\n\n$$\n\\begin{aligned}\n&\\frac{n(n-1)}{2}+\\frac{1}{2}\\sum_{i=1}^{k}siz_i(n-siz_i)\\\\\n=&\\frac{n(n-1)}{2}+\\frac{1}{2} \\left(n^2-\\sum_{i=1}^{k}siz_i^2 \\right)\n\\end{aligned}\n$$\n\n\u5f0f\u5b50\u7684\u610f\u4e49\u662f\u539f\u6811\u8def\u5f84\u6570\u91cf+\u4e24\u70b9\u5728\u4e0d\u540c\u5b50\u6811\u4e2d\u7684\u70b9\u5bf9\u6570\u91cf\u3002\n\n\u89c2\u5bdf\u5f0f\u5b50\u53d1\u73b0\u53ea\u9700\u8981\u6700\u5c0f\u5316 $\\sum_{i=1}^{k}siz_i^2$\uff0c\u5373\u5b50\u6811\u5927\u5c0f\u5e73\u65b9\u548c\uff0c\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u5c06\u95ee\u9898\u770b\u4f5c\u9009\u62e9\u539f\u6811\u4e2d\u7684\u4e00\u6761\u8def\u5f84\uff0c\u6700\u5c0f\u5316\u65ad\u5f00\u8def\u5f84\u4e0a\u7684\u8fb9\u540e\u5f62\u6210\u7684\u8fde\u901a\u5757\u7684\u5927\u5c0f\u7684\u5e73\u65b9\u548c\u3002   \n\u5bf9\u4e8e\u8fd9\u79cd\u5bfb\u627e\u8def\u5f84\u7684\u95ee\u9898\uff0c\u4e00\u79cd\u601d\u8def\u662f\u50cf\u5176\u5b83\u9898\u89e3\u4e00\u6837\u5728\u8def\u5f84\u7aef\u70b9\u7684lca\u5904\u62fc\u63a5\u4e24\u6761\u6765\u81ea\u4e0d\u540c\u5b50\u6811\u7684\u8def\u5f84\uff1b\u8fd8\u6709\u4e00\u79cd\u5c31\u662f\u679a\u4e3e\u8282\u70b9\uff0c\u8ba1\u7b97\u4ee5\u8be5\u70b9\u4e3a\u8def\u5f84\u5176\u4e2d\u7aef\u70b9\u7684\u7b54\u6848\uff0c\u7136\u540e\u8003\u8651\u7528\u6362\u6839 dp \u4f18\u5316\u3002\n\n**step 2. \u6362\u6839 dp + \u659c\u7387\u4f18\u5316**\n\n\u8003\u8651\u600e\u6837\u5f97\u5230\u4ee5\u67d0\u4e00\u4e2a\u8282\u70b9\u4e3a\u8def\u5f84\u7aef\u70b9\u65f6\u7684\u7b54\u6848\uff0c\u5c06\u5176\u4f5c\u4e3a\u6574\u68f5\u6811\u7684\u6839\uff0c\u8bbe $f_u$ \u4e3a\u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u8def\u5f84\u4ece $u$ \u5411\u4e0b\u5ef6\u4f38\u65f6\u7684\u7b54\u6848\uff0c\u9996\u5148\u6ce8\u610f\u5230\u8def\u5f84\u4e00\u5b9a\u4f1a\u5411\u4e0b\u5ef6\u4f38\u76f4\u5230\u53f6\u5b50\u8282\u70b9\uff08$siz$ \u603b\u548c\u4e0d\u53d8\uff0c\u4efd\u6570\u8d8a\u591a\u5e73\u65b9\u548c\u8d8a\u5c0f\uff09\uff0c\u6613\u5f97\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$$\nf_u=\n\\begin{cases}\n1 & \\text{u is leaf}\\\\\n\\min_{son} \\{f_{son}+(siz_u-siz_{son})^2\\} & \\text{otherwise}\n\\end{cases}\n$$\n\n\u66b4\u529b\u679a\u4e3e\u6bcf\u4e2a\u8282\u70b9\u4f5c\u4e3a\u6839\u5373\u53ef\u5f97\u5230 $O(n^2)$ \u505a\u6cd5\u3001\n\n\u63a5\u7740\u8003\u8651\u6362\u6839 dp \u4f18\u5316\uff0c\u8bbe\u5f53\u524d\u7684\u6839\u4e3a $u$\uff0c\u8981\u5c06\u6839\u6362\u5230 $s$\uff0c\u5173\u952e\u5728\u4e8e\u5982\u4f55\u8ba1\u7b97\u9664\u53bb\u5b50\u6811 $s$ \u540e\u7684 $f_u$\u3002\u8bbe $f_u$ \u662f\u4ece\u513f\u5b50 $p$ \u8f6c\u79fb\u800c\u6765\uff0c\u89c2\u5bdf\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$$\n\\begin{aligned}\nf_u&=f_p+(siz_u-siz_p)^2\\\\\n&=f_p+siz_u^2-2siz_usiz_p+siz_p^2\n\\end{aligned}\n$$\n\n\u79fb\u9879\u5f97\u5230\u7ecf\u5178\u659c\u7387\u4f18\u5316\u5f0f\u5b50\uff1a\n\n$$\n2siz_usiz_p+f_u-siz_u^2=f_p+siz_p^2\n$$\n\n\u6bcf\u4e2a\u513f\u5b50 $son$ \u770b\u4f5c\u70b9 $(2siz_{son},f_{son}+siz_{son}^2)$\uff0c\u7ef4\u62a4\u4e0b\u51f8\u58f3\uff0c\u67e5\u627e\u53bb\u6389\u5b50\u6811 $s$ \u540e\u7684 $f_u$ \u7684\u6700\u4f18\u8f6c\u79fb\u70b9\u5c31\u662f\u67e5\u627e\u659c\u7387\u4e3a $siz_u-siz_s$ \u4e0e\u4e0b\u51f8\u58f3\u7684\u5207\u70b9\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n \\log n)$~~\u5077\u61d2\u4f7f\u7528\u4e86\u4e0d\u7528\u52a8\u8111\u5b50\u7684\u4e8c\u5206~~\u3002\n\n\u4ee3\u7801\uff0c\u5177\u4f53\u5b9e\u73b0\u53c2\u8003\u6ce8\u91ca\uff1a\n\n```cpp\n//CF1179D Fedor Runs for President\n#include <bits/stdc++.h>\nusing namespace std;\n\ninline int read() {\n\tint x = 0; char c = getchar();\n\twhile (c < '0' || c > '9') c = getchar();\n\twhile (c >= '0' && c <= '9') x = x * 10 + c - '0', c = getchar();\n\treturn x;\n}\n\ntypedef long long ll;\nconst int MAXN = 5e5+5;\n\nll n, siz[MAXN];\nll f[MAXN], ans;\n\nvector<int> T[MAXN];\n\nstruct convex {\n\tvector<int> stk;\n\tint top;\n\t\n\tinline ll X(int x) { return 2ll * siz[x]; }\n\tinline ll Y(int x) { return f[x] + 1ll * siz[x] * siz[x]; }\n\tinline long double slope(int x, int y) { return (long double) (Y(x) - Y(y)) / (X(x) - X(y)); }\n\t\n\tinline void push(int x) {\n\t\tif (top && X(stk[top]) == X(x) && Y(stk[top]) <= Y(x)) return;\n\t\twhile (top && X(stk[top]) == X(x) && Y(stk[top]) > Y(x)) top--;//\u6ce8\u610f\u5904\u7406\u6a2a\u5750\u6807\u76f8\u540c\u7684\u60c5\u51b5\n\t\twhile (top > 1 && slope(stk[top], stk[top - 1]) > slope(x, stk[top - 1])) top--;//\u67e5\u627e\u6700\u5c0f\u503c\u7ef4\u62a4\u4e0b\u51f8\u58f3\n\t\tstk[++top] = x;\n\t}\n\t\n\tinline int query(int k) {\n\t\tint L = 1, R = top - 1, ans = stk[top];\n\t\twhile (L <= R) {\n\t\t\tint mid = (L + R) >> 1;\n\t\t\tif (slope(stk[mid], stk[mid + 1]) >= k) ans = stk[mid], R = mid - 1;\n\t\t\telse L = mid + 1;\n\t\t}\n\t\treturn ans;\n\t}\n} C;\n\nvoid dfs1(int x, int fa) {\n\tsiz[x] = 1;\n\tif (siz[x] == 1) return f[x] = 1, void();\n\tfor (int son : T[x]) {\n\t\tif (son == fa) continue;\n\t\tdfs1(son, x);\n\t\tsiz[x] += siz[son];\n\t}\n\t\n\tsort(T[x].begin(), T[x].end(), [](int x, int y) { return siz[x] < siz[y]; });//\u6309siz\u6392\u5e8f\uff0c\u4fdd\u8bc1\u6a2a\u5750\u6807\u5355\u8c03\n\t\n\tfor (int son : T[x]) {\n\t\tif (son == fa) continue;\n\t\tf[x] = min(f[x], f[son] + (siz[x] - siz[son]) * (siz[x] - siz[son]));\n\t}\n}\n\nll g[MAXN];\n\nvoid dfs2(int x, int fa, ll ffa) {\n\tll tf = 1e18;\n\tfor (int son : T[x]) {\n\t\tif (son == fa) continue;\n\t\ttf = min(tf, f[son] + (n - siz[son]) * (n - siz[son]));//\u8ba1\u7b97\u4ee5x\u70b9\u4e3a\u6839\u65f6\u7684\u7b54\u6848\n\t\tg[son] = ffa + (siz[x] - siz[son]) * (siz[x] - siz[son]);\n\t}\n\tans = min(ans, min(tf, ffa + siz[x] * siz[x]));\n\t\n\tif (x != 1 && T[x].size() == 1) return;\n\t\n\tC.stk.resize(T[x].size() + 1), C.top = 0;\n\tint sz = T[x].size();\n\tfor (int k = 0; k < sz; k++) {\n\t\tint son = T[x][k];\n\t\tif (son == fa) continue;\n\t\tint p = C.query(n - siz[son]);\n\t\tif (p) g[son] = min(g[son], f[p] + (n - siz[son] - siz[p]) * (n - siz[son] - siz[p]));\n\t\tC.push(son);\n\t}\n\t\n\tC.stk.resize(T[x].size() + 1), C.top = 0;\n\tfor (int k = sz - 1; ~k; k--) {\n\t\tint son = T[x][k];\n\t\tif (son == fa) continue;\n\t\tint p = C.query(n - siz[son]);\n\t\tif (p) g[son] = min(g[son], f[p] + (n - siz[son] - siz[p]) * (n - siz[son] - siz[p]));\n\t\t//\u5bf9\u4e8e\u6bcf\u4e2ason\uff0c\u8ba1\u7b97\u524d\u7f00\u6700\u4f18\u548c\u540e\u7f00\u6700\u4f18\uff0c\u4e24\u8005\u518d\u52a0\u4e0a\u4ece\u7236\u8282\u70b9\u8f6c\u79fb\u7684\u7b54\u6848\u4e00\u8d77\u53d6min\n\t\tC.push(son);\n\t}\n\t\n\tfor (int son : T[x]) {\n\t\tif (son == fa) continue;\n\t\tdfs2(son, x, g[son]);\n\t}\n}\n\nint main() {\n\tn = read();\n\tfor (int i = 1; i < n; i++) {\n\t\tint u = read(), v = read();\n\t\tT[u].push_back(v), T[v].push_back(u);\n\t}\n\t\n\tmemset(f, 0x3f, sizeof(f));\n\tdfs1(1, 0); ans = f[1];\n\tdfs2(1, 0, 1e18);\n\t\n\tprintf(\"%lld\", n * (n - 1) / 2 + (n * n - ans) / 2);\n\treturn 0;\n}\n```",
        "postTime": 1658544656,
        "uid": 261935,
        "name": "Unique_Hanpi",
        "ccfLevel": 0,
        "title": "CF1179D Fedor Runs for President \u9898\u89e3"
    },
    {
        "content": "\u8003\u8651\u6bcf\u4e2a\u70b9\u5bf9 $(i,j)$ \u95f4\u6709\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u7b80\u5355\u8def\u5f84\u3002\u5bf9\u4e8e\u52a0\u8fb9\u524d\u7684\u6811\u6765\u8bb2\u663e\u7136\u90fd\u662f $1$\u3002\u52a0\u4e86\u4e00\u6761\u8fb9\u4e4b\u540e\u6784\u6210\u4e00\u68f5\u57fa\u73af\u6811\uff0c\u628a\u8fd9\u68f5\u57fa\u73af\u6811\u7684\u73af\u62ce\u51fa\u6765\uff0c\u73af\u4e0a\u7684\u70b9\u5411\u4e0b\u90fd\u6302\u7740\u4e00\u68f5\u5b50\u6811\u3002\u5219\u4f4d\u4e8e\u4e0d\u540c\u5b50\u6811\u95f4\u7684\u70b9\u4e4b\u95f4\u90fd\u6709\u4e14\u4ec5\u6709\u4e24\u6761\u4e0d\u540c\u7684\u7b80\u5355\u8def\u5f84\uff0c\u4f4d\u4e8e\u76f8\u540c\u5b50\u6811\u7684\u70b9\u8fd8\u662f\u53ea\u6709\u4e00\u6761\u3002\u8bb0 $S_i$ \u8868\u793a\u73af\u4e0a\u7b2c $i$ \u4e2a\u70b9\u5bf9\u5e94\u7684\u5b50\u6811\u7684\u5927\u5c0f\uff0c$W(i)=i(i-1)$\u3002\u90a3\u4e48\u7b54\u6848\u4e3a $n(n-1)-\\frac{\\sum W(S_i)}{2}$\u3002$O(n^3)$ \u66b4\u529b\u5c31\u662f\u679a\u4e3e\u5728\u54ea\u4e24\u4e2a\u70b9\u4e4b\u95f4\u52a0\u8fb9\u7136\u540e dfs \u627e\u73af\u6c42 $S$\u3002\n\n\u7ee7\u7eed\u6316\u6398\u6027\u8d28\u3002\u6ce8\u610f\u5230\u5728 $i,j$ \u95f4\u52a0\u8fb9\u6700\u7ec8\u5f62\u6210\u7684\u73af\u4e00\u5b9a\u662f\u7531\u6811\u4e0a $i\\to j$ \u8fd9\u6761\u94fe\u4e0a\u7684\u70b9\u6784\u6210\u3002\u6211\u4eec\u628a\u89c6\u89d2\u7531\u52a0\u8fb9\u6539\u4e3a\u9009\u94fe\uff0c\u66f4\u8fdb\u4e00\u6b65\u5730\uff0c\u5148\u94a6\u5b9a\u4e00\u4e2a\u70b9 $i$ \u4f5c\u4e3a\u8def\u5f84\u8d77\u70b9\uff0c\u628a $i$ \u62ce\u8d77\u6765\u4f5c\u4e3a\u6839\uff0c\u90a3\u9009\u94fe\u7684\u8fc7\u7a0b\u5b9e\u9645\u4e0a\u662f\u4ece $i$ \u7684\u513f\u5b50\u4e2d\u9009\u4e00\u4e2a\u8d70\u4e0b\u53bb\uff0c\u5176\u4f59\u7684\u513f\u5b50\u4f1a\u4ea7\u751f\u4e00\u4e2a\u8d21\u732e\uff0c\u6700\u7ec8\u76ee\u7684\u662f\u6700\u5c0f\u5316\u8d21\u732e\u4e4b\u548c\u3002\u8fd9\u6709\u4e00\u4e2a\u660e\u663e\u7684\u5b50\u95ee\u9898\u7ed3\u6784\uff0c\u81ea\u7136\u60f3\u5230 dp \u6c42\u89e3\u3002\u8bb0 $f_i$ \u8868\u793a\u4ece $i$ \u7ed3\u70b9\u51fa\u53d1\u5411\u4e0b\u8d70\u6240\u83b7\u53d6\u8d21\u732e\u548c\u7684\u6700\u5c0f\u503c\uff0c$S_i$ \u8868\u793a $i$ \u7ed3\u70b9\u5bf9\u5e94\u5b50\u6811\u5927\u5c0f\u3002\u5219 $f_i=\\min_{p}f_p+W(S_i-S_p)$\u3002\u4ee5\u6bcf\u4e2a\u7ed3\u70b9\u4e3a\u6839\u90fd\u505a\u4e00\u904d\u8fd9\u4e2a dp \u5c31\u662f $O(n^2)$\u3002\n\n\u6811\u4e0a\u9009\u94fe\u7c7b\u7684\u95ee\u9898\uff0c\u5982\u679c\u4f60\u6709\u4e00\u4e2a dp \u4f46\u9700\u8981\u6362\u6839\u505a\uff0c\u4e0d\u59a8\u5148\u8003\u8651\u80fd\u5426\u5728\u5408\u5e76\u5b50\u6811\u65f6\u628a\u4e24\u6761\u5355\u94fe\u5408\u5e76\u5728\u4e00\u8d77\u6765\u4ee3\u66ff\u6362\u6839\u3002\u8fd9\u9898\u91cc\u5408\u5e76\u4e24\u6761\u5747\u4ee5 $i$ \u4e3a\u8d77\u70b9\u7684\u94fe\u7684\u8d21\u732e\u662f\u7b80\u660e\u7684\u3002\u5177\u4f53\u5730\uff0c\u4e24\u6761\u5206\u522b\u4ee5 $i\\to j,i\\to k$ \uff08$j,k$ \u4e3a $i$ \u7684\u4e24\u4e2a\u4e0d\u540c\u7684\u513f\u5b50\u7ed3\u70b9\uff09\u4e3a\u5f00\u5934\u7684\u94fe\u5408\u5e76\u51fa\u6765\u7684\u7b54\u6848\u662f $f_j+f_k+W(n-S_j-S_k)$\u3002\u56fa\u5b9a $1$ \u4e3a\u6839\uff0c\u95ee\u9898\u53d8\u4e3a\u5bf9\u6bcf\u4e2a $i$ \u6c42 $\\min_{j\\not=k}f_j+f_k+W(n-S_j-S_k)$\u3002\u8fd9\u662f\u5f88\u7ecf\u5178\u7684\u5f62\u5f0f\uff0c\u53ef\u4ee5\u659c\u7387\u4f18\u5316\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4e0a\u674e\u8d85\u6811\u7ef4\u62a4\u3002\u6211\u9009\u62e9\u7684\u662f\u540e\u8005\uff0c\u590d\u6742\u5ea6\u4e3a $O(n\\log n)$\u3002 ~~\u6240\u4ee5\u4e3a\u5565\u6ca1\u4eba\u5199\u674e\u8d85\u6811\u554a\uff0c\u6211\u611f\u89c9\u674e\u8d85\u6811\u6bd4\u659c\u4f18\u597d\u5199\u591a\u4e86hh~~\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n//author:\u671b\u8fdc\u661f\n#include<bits/stdc++.h>\n#define pii pair<int,int>\n#define fi first\n#define se second\n#define pb push_back\n#define eb emplace_back\n#define mk make_pair\n#define sml(x,y) (x=min(x,y))\n#define big(x,y) (x=max(x,y))\n#define ll long long\n#define uint unsigned int\n#define ull unsigned long long\n#define umap unordered_map\n#define db double\n#define fo(i,x,y) for(int i=x;i<=y;++i)\n#define go(i,x,y) for(int i=x;i>=y;--i)\n#define ptc putchar\n#define emp emplace\nusing namespace std;\nll seed=chrono::system_clock::now().time_since_epoch().count();\nmt19937 rnd(seed);\ninline int rm(int x,int y){return (int)(rnd()%(y-x+1ll)+x);}\ninline int read(){int ch=getchar(),x=0,f=1;while(!isdigit(ch)){if(ch==(int)('-'))f=-1;ch=getchar();}while(isdigit(ch)){x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}return x*f;}\ninline void out(int *a,int l,int r){fo(i,l,r) cout<<*(a+i)<<' ';puts(\"\");}\n\nconst int N=5e5+5;\nint n;\nvector<int> e[N];\n\n#define wyx(x) ((x)*((x)-1ll))\nconst ll inf=1e12;\nll f[N],F[N];\nint siz[N],fa[N];\n\nvoid dfs(int x){\n\t//printf(\"dfs(%d)\\n\",x);\n\tsiz[x]=1;\n\tint cnt=0;\n\tfor(int i:e[x]) if(i!=fa[x]){\n\t\tcnt++;fa[i]=x;\n\t\tdfs(i);\n\t\tsiz[x]+=siz[i];\n\t}\n\tif(!cnt) f[x]=0;\n\telse f[x]=inf;\n\tfor(int i:e[x]) if(i!=fa[x]) sml(f[x],f[i]+wyx(siz[x]-siz[i]));\n\tF[x]=f[x]+(ll)siz[x]*siz[x]-(2*n-1ll)*siz[x];\n\t//printf(\"f[%d]=%lld\\n\",x,f[x]);\n}\n\nstruct Func{\n\t//y=kx+b\n\tll k,b;\n\tFunc(){k=b=inf;}\n\tFunc(ll K,ll B){k=K,b=B;} \n\tll operator()(int x){return k*x+b;} \n}tr[N<<2];\nvector<int> trash;\nint vis[N<<2],ti;//\u6ce8\u610f\u8fd9\u91cc\u5783\u573e\u6876\u7684\u8f85\u52a9\u6570\u7ec4 vis \u4e5f\u8981\u5f00\u4e0e\u7ebf\u6bb5\u6811\u7ed3\u70b9\u4e00\u6837\u7684\u56db\u500d\u7a7a\u95f4\uff01\uff01\uff01 \n#define ls(x) x<<1\n#define rs(x) x<<1|1\n\nvoid push(int x,int l,int r,Func k){\n\tif(vis[x]<ti) vis[x]=ti,trash.pb(x);\n\tint mid=(l+r)>>1;\n\tif(tr[x](mid)>k(mid)) swap(tr[x],k);\n\tif(l==r) return;\n\tif(tr[x].k<k.k) push(ls(x),l,mid,k);\n\telse push(rs(x),mid+1,r,k);\n}\n\nll ask(int x,int l,int r,int X){\n\tif(l==r) return tr[x](X);\n\tint mid=(l+r)>>1;\n\tif(X<=mid) return min(tr[x](X),ask(ls(x),l,mid,X));\n\telse return min(tr[x](X),ask(rs(x),mid+1,r,X));\n}\n\nll calc(int x){\n\t++ti;trash.clear();\n\tll ret=inf;int cnt=0;\n\t//for(int i:e[x]) if(i!=fa[x])\n\t//\tfor(int j:e[x]) if(i!=j&&j!=fa[x]) sml(ret,f[i]+f[j]+wyx(n-siz[i]-siz[j]));\n\tfor(int i:e[x]) if(i!=fa[x]){\n\t\tsml(ret,wyx(n)+F[i]+ask(1,1,n,siz[i]));\n\t\tpush(1,1,n,Func(siz[i]<<1,F[i]));\n\t\t++cnt;\n\t}\n\tif(cnt==1){\n\t\tsml(ret,f[x]+wyx(n-siz[x]+1));\n\t}\n\tfor(int i:trash) tr[i]=Func();\n\treturn ret;\n}\n\nvoid solve(){\n\tdfs(1);\n\tll ans=inf;\n\tfo(i,1,n) sml(ans,calc(i));\n\tcout<<wyx(n)-ans/2;\n}\t\n\nsigned main(){\n\tcin>>n;if(n==2) return cout<<2,0;\n\tfo(i,2,n){\n\t\tint x=read(),y=read();\n\t\te[x].pb(y),e[y].pb(x);\n\t}\n\tsolve(); \n\treturn 0;\n}\n/*\n13\n1 2\n2 3\n3 4\n4 5\n4 6\n6 7\n5 8\n5 9\n5 10\n8 11\n5 12\n5 13\n-------------------------------------------------\n*/\n```\n",
        "postTime": 1658543091,
        "uid": 238408,
        "name": "vectorwyx",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1179D Fedor Runs for President"
    },
    {
        "content": "\u4e00\u9053\u659c\u7387\u4f18\u5316\u7684\u597d\u9898\uff0c\u522b\u7684\u9898\u89e3\u4e5f\u8bf4\u5f97\u5f88\u6e05\u695a\u4e86\uff0c\u5bb9\u65a5\u4e00\u4e0b\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u51f8\u58f3\u4e00\u4e0b\u5c31\u597d\u4e86\uff0c\u4f46\u660e\u663e\u7684\u659c\u7387\u4f18\u5316\u76f8\u5bf9\u4e8e\u4e0b\u9762\u7684\u505a\u6cd5\u6bd4\u8f83\u590d\u6742\u3002\n\n\u9996\u5148\u8003\u8651\u731c\u7ed3\u8bba\uff0c\u663e\u7136\u624b\u73a9\u6837\u4f8b\u4f1a\u53d1\u73b0**\u6700\u540e\u90fd\u662f\u4e00\u6761\u94fe\u52a0\u4e0a\u4e00\u6761\u8fb9\u6784\u6210\u4e00\u4e2a\u73af**\uff0c\u6211\u4eec\u8bbe $siz_x$ \u662f $x$ \u7684\u5b50\u6811\u5927\u5c0f\uff0c\u5982\u679c\u8fde\u63a5\u4e86 $u,v$\uff0c\u90a3\u4e48**\u8be5\u8def\u5f84\u4e0a\u4e0d\u540c\u5b50\u6811\u4e4b\u95f4\u7684\u70b9\u76f8\u4e92\u8bbf\u95ee\u7684\u7b80\u5355\u8def\u5f84\u589e\u52a0\u4e86\u4e00\u6761**\uff0c\u90a3\u4e48\u7b54\u6848\u589e\u52a0\u4e86  $\\sum\\left(n-size\\left[i\\right]\\right)\\times size\\left[i\\right]$\uff0c$i$ \u662f\u8be5\u8def\u5f84\u4e0a\u7684\u70b9\u3002\n\n\u663e\u7136\u8981\u6700\u5c0f\u5316 $\\sum size\\left[i\\right]^2$\uff0c\u7136\u540e\u6613\u8bc1\u8fde\u63a5\u7684\u70b9\u5fc5\u7136\u662f\u53f6\u5b50\u6216\u6839\uff0c\u5426\u5219\u4f7f\u5176\u518d\u5411\u5b50\u6811\u6269\u5c55\u5f97\u5230\u7684 $\\sum size\\left[i\\right]^2$ \u66f4\u5c0f\u3002\n\n\u90a3\u4e48\u6839\u636e\u03bb\u1d09\u028d\u5927\u4f6c\u7684\u8bf4\u6cd5\uff0c\u6211\u4eec**\u7528\u6c42\u76f4\u5f84\u7684\u65b9\u6cd5\u6c42\u4e24\u6b21\u5c31\u597d\u4e86**\u3002\u5173\u4e8e\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u53ef\u4ee5\uff0c\u6211**\u4e00\u65f6\u95f4\u4e5f\u6ca1\u6709\u5f88\u597d\u5730\u8bc1\u660e**\u3002\u5176\u5b9e\u5173\u4e8e\u76f4\u5f84\u7684\u65b9\u6cd5**\u6211\u4e5f\u662f\u770b\u4e86\u9898\u89e3\u624d\u77e5\u9053**\uff0c\u6700\u5f00\u59cb\u7684\u601d\u8def\u53ea\u505c\u7559\u5728\u4e0a\u9762\u3002\u5982\u679c**\u5e0c\u671b\u6b63\u89e3\u7684\u8fd8\u662f\u6700\u597d\u53bb\u5199\u659c\u7387\u4f18\u5316**\uff0c\u53ef\u4ee5\u770b\u51fa\u6700\u540e\u6811\u7684\u76f4\u5f84\u76f8\u8f83\u4e8e\u659c\u7387\u4f18\u5316\u5728\u8fd0\u884c\u65f6\u95f4\u4e0a\u5dee\u5f88\u591a\u3002\n\n\u8d34\u4e2aCode\u5427\uff0c`Pre()` \u662f\u5173\u4e8e\u5b50\u6811\u7684\u5904\u7406\uff0c`dfs()` \u662f\u7b54\u6848\u7684\u7edf\u8ba1\uff0c\u5b58\u6811\u7528\u7684\u662f\u94fe\u5f0f\u524d\u5411\u661f\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define vv (e[i].v)\n#define Maxn 500007\ninline int read(){\n   register int s=0,w=1;\n   char ch=getchar();\n   while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n   while(ch>='0'&&ch<='9')s=s*10+ch-'0',ch=getchar();\n   return s*w;\n}\nusing namespace std ;\nll n , head[Maxn] , tot , ans[Maxn] , siz[Maxn] , u , v , Maxi ;\nstruct Edge\n{\n\tint v , next ;\n}e[Maxn << 1] ;\nvoid add(int u , int v)\n{\n\te[++ tot].v = v ;\n\te[tot].next = head[u] ;\n\thead[u] = tot ;\n}\nvoid Pre(int now , int last)\n{\n\tsiz[now] = 1 ;\n\tfor(int i = head[now] ; i ;i = e[i].next)\n\t{\n\t\tif(vv == last) continue ;\n\t\tPre(vv , now) ;\n\t\tsiz[now] += siz[vv] ;\n\t}\n}\nvoid dfs(int now , int last)\n{\n\tfor(int i = head[now] ; i ;i = e[i].next)\n\t{\n\t\tif(vv == last) continue ;\n\t\t//Pre(vv , now) ;\n\t\tans[vv] = ans[now] + (siz[now] - siz[vv]) * siz[vv] ;\n\t\tdfs(vv , now) ;\n\t}\t\n}\nvoid MaxF()\n{\n\tMaxi = 1 ;\n\tfor(int i = 1 ; i <= n ; i ++) Maxi = (ans[Maxi] < ans[i]) ? i : Maxi ;\n}\nint main()\n{\n\tn = read() ;\n\tfor(int i = 1 ; i <= n - 1 ; i ++)\n\t{\n\t\tu = read() ; v = read() ;\n\t\tadd(u , v) ;\n\t\tadd(v , u) ;\n\t}\n\tPre(1 , -1) ;\n\tans[1] = n * (n - 1) / 2 ;\n\tdfs(1 , -1) ;\n\tMaxF() ;\n\tPre(Maxi , 0) ;\n\tans[Maxi] = ans[1] ;\n\tdfs(Maxi , 0) ;\n\tMaxF() ;\n\tcout << ans[Maxi] ;\n\treturn 0 ; \n} \n```",
        "postTime": 1629682205,
        "uid": 183026,
        "name": "Cocoly1990",
        "ccfLevel": 0,
        "title": "CF1179D Fedor Runs for President"
    }
]