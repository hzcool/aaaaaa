[
    {
        "content": "## \u4e00\u4e2a\u7b80\u5355\u7684dp\n \u8fd9\u9898\u6253\u6bd4\u8d5b\u7684\u65f6\u5019\u7528BFS\u5b9e\u73b0\u88ab\u5361\u4e86\u5185\u5b58\u5f88\u662f\u96be\u53d7,\u8d5b\u540e\u5341\u5206\u949f\u6539\u6210dp\u5199\u6cd5\u5c31\u8fc7\u4e86\u6b64\u9898\u3002\n \n[\u6211\u7684CSDN](https://blog.csdn.net/qq_41851959/article/details/83305496)\n### \u89e3\u6cd5\n\u5148\u8003\u8651\u6ca1\u6709\u4fee\u6539\u3002\n\u56e0\u4e3a\u8981\u7b54\u6848\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u6b65\u80fd\u53d6\u6700\u5c0f\u7684\u5b57\u6bcd\u5c31\u53d6\u6700\u5c0f\u7684\u3002\n\u53c8\u56e0\u4e3a\u53ea\u80fd\u5f80\u4e0b\u6216\u8005\u5f80\u53f3\u8d70\uff0c\u6240\u4ee5\u5728\u8d70\u7684\u6b65\u6570\u4e00\u5b9a\u65f6\uff0c\u8d70\u5230\u7684\u4f4d\u7f6e\u5c31\u53ef\u77e5\u3002\n\u65e2\u7136\u8fd9\u6837\uff0c\u6211\u4eec\u53ea\u8981\u4fdd\u8bc1\u80fd\u66f4\u65b0\u7b54\u6848\u7684\u72b6\u6001\u7684\u5b57\u6bcd\u662f\u76f8\u540c\u6b65\u6570\u4e2d\u6700\u5c0f\u7684\uff0c\u5c31\u80fd\u4fdd\u8bc1\u53d6\u5230\u6700\u5c0f\u7684\u5b57\u5178\u5e8f\u3002\n\u5c31\u50cf\u4e0b\u9762\u8fd9\u6837\u3002\n```cpp\nfor(int step=1;step<n*2;step++){\n    for(int j=max(1,step-n+1);j<=min(step,n);j++){\n        int x=j,y=step-j+1;\n        if(node[x-1][y].vis&&node[x-1][y].v==Min[step-1])\n            node[x][y].vis=1;\n        if(node[x][y-1].vis&&node[x][y-1].v==Min[step-1])\n            node[x][y].vis=1;\n        if(!node[x][y].vis)continue;\n        Min[step]=min(Min[step],Map[x][y]);\n    }\n}\n```\n\u4f46\u662f\uff0ccf\u52a0\u4e86\u4e00\u4e2a\u4fee\u6539\u7684\u64cd\u4f5c\u3002\n\u4e4d\u4e00\u770b\u5f88\u96be\u4ee5\u64cd\u4f5c\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u6539\u52a8\u7684\u6700\u4f18\u8d21\u732e\u80af\u5b9a\u662f\u628a\u524d\u7f00\u975e \"a\" \u7684\u5b57\u6bcd\u6539\u4e3a \"a\"\u3002\n\u800c\u6b64\u65f6\u524d\u7f00\u5b57\u6bcd\u90fd\u76f8\u7b49\u65f6\uff0c\u6700\u4f18\u7684\u72b6\u6001\u4e0d\u5c31\u662f\u6709\u6700\u5c11\u4fee\u6539\u6b21\u6570\u7684\u60c5\u51b5\u561b\u3002\n\u4e8e\u662f\u53ea\u9700\u8981\u5bf9\u4e0a\u9762\u7684\u4ee3\u7801\u5c0f\u6539\u4e00\u4e0b\u3002\n```cpp\nfor(int step=1;step<n*2;step++){\n    for(int j=max(1,step-n+1);j<=min(step,n);j++){\n        int x=j,y=step-j+1;\n        if(node[x-1][y].vis&&node[x-1][y].v==Min[step-1]){\n            if(!node[x][y].vis){\n                node[x][y].vis=1;\n                node[x][y].f=node[x-1][y].f;\n            }else{\n                node[x][y].f=min(node[x][y].f,node[x-1][y].f);\n            }\n        }\n        if(node[x][y-1].vis&&node[x][y-1].v==Min[step-1]){\n            if(!node[x][y].vis){\n                node[x][y].vis=1;\n                node[x][y].f=node[x][y-1].f;\n            }else{\n                node[x][y].f=min(node[x][y].f,node[x][y-1].f);\n            }\n        }\n        if(!node[x][y].vis)continue;\n        if(node[x][y].f!=k&&node[x][y].Map!='a')node[x][y].f++,node[x][y].v='a';\n        else node[x][y].v=node[x][y].Map;\n        Min[step]=min(Min[step],node[x][y].v);\n    }\n}\n```\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u5904\u7406\u4fee\u6539\u7684\u64cd\u4f5c\u4e86\u3002\n\u5b8c\u6574\u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<algorithm>\n#include<cmath>\n#include<iostream>\nusing namespace std;\nint n,k;\nstruct Node{\n    int f;\n    bool vis;\n    char Map,v;\n}node[2005][2005];\nchar Min[5000];\nvoid Dp(){\n    for(int step=1;step<n*2;step++){\n        for(int j=max(1,step-n+1);j<=min(step,n);j++){\n            int x=j,y=step-j+1;\n            if(node[x-1][y].vis&&node[x-1][y].v==Min[step-1]){\n                if(!node[x][y].vis){\n                    node[x][y].vis=1;\n                    node[x][y].f=node[x-1][y].f;\n                }else{\n                    node[x][y].f=min(node[x][y].f,node[x-1][y].f);\n                }\n            }\n            if(node[x][y-1].vis&&node[x][y-1].v==Min[step-1]){\n                if(!node[x][y].vis){\n                    node[x][y].vis=1;\n                    node[x][y].f=node[x][y-1].f;\n                }else{\n                    node[x][y].f=min(node[x][y].f,node[x][y-1].f);\n                }\n            }\n            if(!node[x][y].vis)continue;\n            if(node[x][y].f!=k&&node[x][y].Map!='a')node[x][y].f++,node[x][y].v='a';\n            else node[x][y].v=node[x][y].Map;\n            Min[step]=min(Min[step],node[x][y].v);\n        }\n    }\n}\nint main(){\n    scanf(\"%d%d\",&n,&k);\n    for(int i=1;i<=n;i++){\n        getchar();\n        for(int j=1;j<=n;j++){\n            scanf(\"%c\",&node[i][j].Map);\n            node[i][j].f=n*n;\n        }\n    }\n    for(int i=1;i<n*2;i++)Min[i]='z';\n    node[1][0].vis=node[0][1].vis=1;\n    Dp();\n    for(int i=1;i<n*2;i++)printf(\"%c\",Min[i]);\n}\n```",
        "postTime": 1540721967,
        "uid": 32483,
        "name": "2344b",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1031D \u3010Minimum path\u3011"
    },
    {
        "content": "\u8bd5\u4e2d\u5199\u4e86\u4e2a\u5047\u7684\u5b57\u7b26\u4e32\u6bd4\u8f83\u8c03\u4e86\u534a\u5929...\u6700\u540e 10min \u624d\u53d1\u73b0\u81ea\u5df1\u5199\u5047\u4e86\n\ndp \u7684\u72b6\u6001\u611f\u89c9\u633a\u5999\u7684...\u76f4\u63a5\u907f\u514d\u4e86\u6bd4\u8f83\u5b57\u7b26\u4e32\u7684\u95ee\u9898\n\n## \u89e3\u6790\n\n\u9996\u5148\u80fd\u53d1\u73b0\u5b57\u7b26\u4fee\u6539\u80af\u5b9a\u662f\u5c3d\u91cf\u65e9\u7684\u7528\n\n\u4e8e\u662f\u8bbe $f(i, j)$ \u8868\u793a\u4ece $(0, 0)$\uff08\u5de6\u4e0a\u89d2\uff09\u5230\u8fbe $(i, j)$\uff0c\u7ecf\u8fc7\u7684\u6700\u5c11\u7684\u975e `a` \u7684\u5b57\u7b26\u4e2a\u6570\uff08\u5305\u542b $(i, j)$\uff09\u3002\u8fd9\u4e2a\u968f\u4fbf dp \u4e0b\u5c31\u884c\u4e86\n\n\u5982\u679c $f(n-1, n-1)\\leq k$\uff0c\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u51fa\u4e00\u4e2a\u5168\u4e3a `a` \u7684\u8def\u5f84\uff0c\u8fd9\u4e00\u5b9a\u662f\u4efb\u4f55\u53ef\u80fd\u8def\u5f84\u4e2d\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\uff1b\u5982\u679c $f(n-1, n-1)> k$\uff0c\u6211\u4eec\u8003\u8651\u627e\u5230\u6240\u6709\u6ee1\u8db3 $f(x, y)=k$ \u7684\u4f4d\u7f6e $\\{(x_k, y_k)\\}$\n\n\u4e00\u79cd\u60f3\u6cd5\u662f\u8003\u8651 dp \u51fa\u6bcf\u4e2a\u4f4d\u7f6e $(i, j)$ \u5230\u8fbe $(n-1, n-1)$\uff08\u53f3\u4e0b\u89d2\uff09\u7ecf\u8fc7\u7684\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u8def\u5f84\u4e2d\uff0c$(i, j)$ \u662f\u5411\u53f3\u8d70\u8fd8\u662f\u5411\u4e0b\u8d70\uff1b\u8fd9\u6837\u6211\u4eec\u53ea\u9700\u4e00\u4e00\u6bd4\u8f83\u6bcf\u4e2a $(x_k, y_k)$ \u7684 dp \u7684\u7b54\u6848\u5c31\u884c\u4e86\u3002\u4f46\u53d1\u73b0\u8f6c\u79fb\u65f6\u82e5\u51fa\u73b0 $(i+1, j), (i, j+1)$ \u7684\u5b57\u7b26\u76f8\u540c\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u5c31\u8981\u6bd4\u8f83\u540e\u9762\u8def\u5f84\u7684\u5b57\u5178\u5e8f\uff1b\u8fd9\u7b49\u4ef7\u4e8e\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u5927\u5c0f\uff0c\u5f88\u96be\u4f18\u5316\uff08\u5176\u5b9e\u5728\u521a\u624d\u7edf\u8ba1 $(x_k, y_k)$ \u7684 dp \u7b54\u6848\u65f6\u5c31\u6709\u8fd9\u4e2a\u95ee\u9898\u4e86\uff09\n\n\u6211\u4eec\u8003\u8651\u6362\u4e00\u4e2a\u72b6\u6001\u3002\u8bbe $dp(i)$ \u8868\u793a\u4ece $x_0, y_0$\uff08\u4e00\u4e2a\u6307\u5b9a\u7684\u70b9\uff09\u51fa\u53d1\u53bb\u5f80 $(n-1, n-1)$\uff0c\u7ecf\u8fc7\u957f\u5ea6\u4e3a $i$ \u7684\u6700\u5c0f\u5b57\u5178\u5e8f\u7684\u8def\u5f84\u7684\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\uff1b\u6ce8\u610f\u8be5\u4f4d\u7f6e\u53ef\u80fd\u6709\u591a\u4e2a\uff08\u6211\u4eec\u53ef\u4ee5\u7528 `vector` \u5b58\uff09\u3002\u4ece $dp(i)$ \u8f6c\u79fb\u5230 $dp(i+1)$ \u65f6\uff0c\u6211\u4eec\u53ea\u9700\u6bd4\u8f83\u4ece $dp(i)$ \u7684\u4f4d\u7f6e\u5411\u4e0b\u6216\u5411\u53f3\u8d70\u5f97\u5230\u7684\u4f4d\u7f6e\u4e0a\u7684\u5b57\u7b26\u5927\u5c0f\uff0c\u53d6\u5b57\u7b26\u6700\u5c0f\u7684\u4f4d\u7f6e\uff08\u4e5f\u53ef\u80fd\u6709\u591a\u4e2a\uff09\u653e\u5165 $dp(i+1)$ \u5373\u53ef\n\n\u7531\u4e8e $dp(i)$ \u4e2d\u7684\u4f4d\u7f6e\u7684\u5b57\u7b26\u5927\u5c0f\u90fd\u5e94\u8be5\u662f\u4e00\u81f4\u7684\uff0c\u56e0\u6b64\u6bcf\u6b21\u8f6c\u79fb\u65f6\uff0c\u67d0\u4e2a\u4f4d\u7f6e\u88ab\u591a\u6b21\u653e\u5165 $dp(i+1)$ \u662f\u6ca1\u6709\u610f\u4e49\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a `vis` \u6570\u7ec4\u8bb0\u5f55\uff0c\u8fd9\u6837\u590d\u6742\u5ea6\u5c31\u662f $O(n^2)$ \u7684\n\n\u81f3\u4e8e\u7b54\u6848\uff0c\u5728 dp \u65f6\u987a\u4fbf\u8f93\u51fa\u5373\u53ef\n\n\uff08\u4e00\u4e9b\u5b9e\u73b0\u7ec6\u8282\u6ca1\u600e\u4e48\u63d0\uff0c\u5177\u4f53\u53ef\u89c1\u4ee3\u7801\uff09\n\n## CODE\n\n\u6ce8\u610f\u5728\u4ece $dp(i)$ \u8f6c\u79fb\u5230 $dp(i+1)$ \u65f6\uff0c\u4ee3\u7801\u4e2d\u6ca1\u6709\u663e\u5f0f\u7684\u53bb\u6389\u90a3\u4e9b\u5b57\u7b26\u4e0d\u662f\u6700\u5c0f\u7684\u4f4d\u7f6e\uff1b\u800c\u662f\u5728\u4e0b\u4e00\u6b21\u4ece $dp(i+1)$ \u8f6c\u79fb\u5230 $dp(i+2)$ \u65f6\uff0c\u76f4\u63a5\u8df3\u8fc7\u90a3\u4e9b\u5b57\u7b26\u4e0d\u662f\u6700\u5c0f\u7684\u4f4d\u7f6e\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <vector>\n#define fi first\n#define se second\nusing std::vector;\nusing std::pair;\nusing std::min;\ntypedef pair<int, int> pad;\n\nconst int MAXN =2e3+20;\n\nchar map[MAXN][MAXN];\n\nint dp[MAXN][MAXN];/*\u4ece\u5de6\u4e0a\u89d2\u5230\u8fbe\u6bcf\u4e2a\u70b9\uff0c( \u542b\u5f53\u524d ) \u7ecf\u8fc7\u7684\u6700\u5c11\u7684\u4e0d\u4e3a a \u7684\u5b57\u7b26\u7684\u4e2a\u6570*/\nbool vis[MAXN][MAXN];\n\nint main(){\n\tint n, k;\n\tscanf(\"%d%d\", &n, &k);\n\tfor(int i =0; i < n; ++i)\n\t\tscanf(\"%s\", map[i]);\n\t\n\tfor(int i =0; i < n; ++i)\n\t\tfor(int j =0; j < n; ++j){\n\t\t\tif(i == 0 && j == 0)\n\t\t\t\tdp[i][j] =(int)(map[i][j] != 'a');\n\t\t\telse if(i == 0)\n\t\t\t\tdp[i][j] =dp[i][j-1]+(int)(map[i][j] != 'a');\n\t\t\telse if(j == 0)\n\t\t\t\tdp[i][j] =dp[i-1][j]+(int)(map[i][j] != 'a');\n\t\t\telse\n\t\t\t\tdp[i][j] =min(dp[i][j-1], dp[i-1][j])+(int)(map[i][j] != 'a');\n\t\t}\n\t\n\tif(dp[n-1][n-1] <= k){\n\t\tfor(int i =0; i < 2*n-1; ++i)\n\t\t\tputchar('a');\n\t}\n\telse{\n\t\tint ans_len =0;\n\t\tvector<pad> nw;\n\t\tnw.push_back(pad(0, 0));\n\t\tfor(int i =0; i < n; ++i)\n\t\t\tfor(int j =0; j < n; ++j)\n\t\t\t\tif(dp[i][j] == k){\n\t\t\t\t\tif(i+j+1 > ans_len){\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvector<pad> tmp;\n\t\t\t\t\t\t\ttmp.swap(nw);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tans_len =i+j+1;\n\t\t\t\t\t\tif(i < n-1)\n\t\t\t\t\t\t\tnw.push_back(pad(i+1, j));\n\t\t\t\t\t\tif(j < n-1)\n\t\t\t\t\t\t\tnw.push_back(pad(i, j+1));\n\t\t\t\t\t}\n\t\t\t\t\telse if(i+j+1 == ans_len){\n\t\t\t\t\t\tif(i < n-1)\n\t\t\t\t\t\t\tnw.push_back(pad(i+1, j));\n\t\t\t\t\t\tif(j < n-1)\n\t\t\t\t\t\t\tnw.push_back(pad(i, j+1));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\tfor(int i =0; i < ans_len; ++i)\n\t\t\tputchar('a');\n\t\tfor(pad j:nw)\n\t\t\tvis[j.fi][j.se] =1;\n\t\tfor(int i =0; i < 2*n-1 - ans_len; ++i){\n\t\t\tint mn =30;\n\t\t\tfor(pad j:nw)\n\t\t\t\tif(map[j.fi][j.se]-'a' < mn)\n\t\t\t\t\tmn =map[j.fi][j.se]-'a';\n\t\t\tputchar('a'+mn);\n\t\t\tvector<pad> net;\n\t\t\tfor(pad j:nw)\n\t\t\t\tif(map[j.fi][j.se]-'a' == mn){\n\t\t\t\t\tif(j.fi < n-1)\n\t\t\t\t\t\tif(!vis[j.fi+1][j.se]){\n\t\t\t\t\t\t\tnet.push_back(pad(j.fi+1, j.se));\n\t\t\t\t\t\t\tvis[j.fi+1][j.se] =1;\n\t\t\t\t\t\t}\n\t\t\t\t\tif(j.se < n-1)\n\t\t\t\t\t\tif(!vis[j.fi][j.se+1]){\n\t\t\t\t\t\t\tnet.push_back(pad(j.fi, j.se+1));\n\t\t\t\t\t\t\tvis[j.fi][j.se+1] =1;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tnw.swap(net);\n\t\t}\n\t}\n}\n```",
        "postTime": 1605237502,
        "uid": 105254,
        "name": "Piwry",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1031D \u3010Minimum path\u3011"
    },
    {
        "content": "\u8fd9\u9898\u3002\u3002\u3002\u4e0d\u5e94\u8be5\u662f\u9ec4\u9898\u4e48\u3002\n\n\u4f18\u5148\u961f\u5217+\u5bbd\u641c\u3002\n\n\u6211\u4eec\u9996\u5148\u9009\u62e9\u6700\u77ed\u6b65\u6570\u7684\u8d70\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u6b65\u6570\u4e00\u81f4\uff0c\u7136\u540e\u6211\u4eec\u8003\u8651\u76f8\u540c\u6b65\u6570\u91cc\u9762\u9009\u62e9\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u8d70\uff0c\u8d70\u4e86\u540e\u6211\u4eec\u5728\u76f8\u540c\u6b65\u6570\u4e0b\u5bf9\u6bd4\u5b57\u5178\u5e8f\uff0c\u4e00\u90e8\u5206\u5b57\u5178\u5e8f\u5927\u7684\u76f4\u63a5\u526a\u6389\u4e0d\u8d70\u3002\u5bf9\u4e8e\u5b57\u5178\u5e8f\u4e00\u6837\u7684\u6211\u4eec\u9009\u62e9\u6539\u53d8\u6570\u5b57\u91cf\u6700\u5c11\u7684\u8d70\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u6700\u4f18\u7684\u8d70\u6cd5\u3002\n\n\u7528\u4e00\u4e2a\u6807\u8bb0\u6570\u7ec4\uff0c\u5982\u679c\u6211\u5df2\u7ecf\u8d70\u8fc7\u4e00\u4e2a\u70b9\uff0c\u90a3\u4e2a\u8d70\u6cd5\u4e00\u5b9a\u662f\u6700\u4f18\u79c0\u7684\uff0c\u6ca1\u6709\u5fc5\u8981\u518d\u8d70\u4e00\u904d\u3002\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\n\nint n,m,k;\n\nchar in[2005];\nint a[2005][2005];\nint an[2005][2005];\nint ans[4005];\nbool vis[2005][2005];\n\nstruct ha\n{\n    int l,r,v,s,u;\n    bool operator < (const ha &aa)const\n    {\n        if(s==aa.s&&v==aa.v)return u<aa.u;\n        if(s==aa.s)return v<aa.v;\n        return (s)<(aa.s);\n    }\n    bool operator > (const ha &aa)const\n    {\n        if(s==aa.s&&v==aa.v)return u>aa.u;\n        if(s==aa.s)return v>aa.v;\n        return (s)>(aa.s);\n    }\n};\n\npriority_queue<ha,vector<ha>,greater<ha> > p;\n\nbool check(int now,int x,int y)\n{\n    if(k-now>0&&a[x][y]!=0)\n        return 1;\n    else\n        return 0;\n}\n\nint z[3]={1,0};\n\nvoid bfs()\n{\n    for(int i=1;i<=2*n-1;i++)\n        ans[i]=-1;\n    ha first;\n    first.l=1;\n    first.r=1;\n    first.s=1;\n    first.u=0;\n    if(check(0,1,1))\n    {\n        first.u=1;\n        ans[1]=0;\n    }\n    else\n        ans[1]=a[1][1];\n    first.v=ans[1];\n    p.push(first);\n\n    while(!p.empty())\n    {\n        ha x=p.top();\n        p.pop();\n        if(ans[x.s]!=-1&&ans[x.s]<x.v)continue;\n        if(ans[x.s]==-1){ans[x.s]=x.v;\n        }\n        for(int i=0;i<=1;i++)\n        {\n            int nx=x.l+z[i];\n            int ny=x.r+z[1-i];\n            ha nxt;\n            if(nx>n||ny>n)continue;\n            if(vis[nx][ny])continue;\n            vis[nx][ny]=1;\n            bool ok=check(x.u,nx,ny);\n            nxt.l=nx;\n            nxt.r=ny;\n            nxt.s=x.s+1;\n            nxt.u=x.u;\n            if(ok)\n            {\n                nxt.u++;\n                nxt.v=0;\n            }\n            else\n                nxt.v=a[nx][ny];\n            p.push(nxt);\n        }\n    }\n}\n\nint main()\n{\n    scanf(\"%d%d\",&n,&k);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%s\",in+1);\n        for(int j=1;j<=n;j++)\n        {\n            a[i][j]=in[j]-'a';\n        }\n    }\n    bfs();\n    for(int i=1;i<=2*n-1;i++)\n        printf(\"%c\",ans[i]+'a');\n    printf(\"\\n\");\n    return 0;\n}\n\n```",
        "postTime": 1548925253,
        "uid": 34663,
        "name": "redegg",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1031D \u3010Minimum path\u3011"
    },
    {
        "content": "# 1031D - Minimum path\n## \u9898\u76ee\u63cf\u8ff0\n### [\u4f20\u9001\u95e8](http://codeforces.com/problemset/problem/1031/D)\n## \u9898\u76ee\u5927\u610f\n\u7ed9\u4f60\u4e00\u4e2a$n \\times n$\u7684\u53ea\u6709\u5c0f\u5199\u5b57\u6bcd\u7684\u5b57\u7b26\u77e9\u9635\uff0c\u4f60\u8981\u4ece$1,1$\u8d70\u5230$n,n$\uff0c\u53ea\u80fd\u5f80\u4e0b\uff0c\u5f80\u53f3\u8d70\uff0c\u540c\u65f6\u4f60\u53ef\u4ee5\u6539\u53d8\u8fd9\u4e2a\u77e9\u9635\u4e2d\u7684$k$\u4e2a\u5b57\u7b26\uff0c\u95ee\u4f60\u8d70\u5230$n,n$\u6240\u7ecf\u8fc7\u7684\u8def\u5f84\u7684\u6700\u5c0f\u5b57\u5178\u5e8f\u662f\u591a\u5c11\u3002\n$1 \\le n \\le 2000$\n## Solution\n\u5ba3\u4f20\u4e00\u4e0b\u81ea\u5df1\u7684\u535a\u5ba2QwQ [\u4f20\u9001\u95e8](https://blog.csdn.net/graygoods/article/details/83274471)\n\n\u6bd4\u8d5b\u7684\u65f6\u5019\u6700\u540e5\u5206\u949f\u624d\u8fc7\u53bb\uff0c\u4fdd\u6211\u4e0a\u84ddQwQ\n- \u9996\u5148\u8fd9\u9053\u9898\u8981\u6c42\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u6539\u53d8\u8fd9\u4e2a\u77e9\u9635\u4e2d\u7684\u5b57\u7b26\uff0c\u4e00\u5b9a\u662f\u628a\u4e0d\u662f$a$\u7684\u5b57\u7b26\u6539\u6210$a$\uff0c\u800c\u4e14\u6211\u4eec\u8d70\u4e00\u6761\u8def\u5f84\u7684\u65f6\u5019\uff0c\u4e00\u5b9a\u662f\u628a\u6240\u6709\u673a\u4f1a\u5168\u7528\u5230\uff08\u5982\u679c$k$\u8fc7\u5927\u5c31\u53ef\u4ee5\u5168\u662f$a$\uff09\uff0c\u5e76\u4e14\u5c3d\u53ef\u80fd\u5730\u8981\u8ba9\u524d\u9762\u53d8\u6210$a$\u3002\n\u6240\u4ee5\u6211\u4eec\u8bbe$f[i][j]$\u8868\u793a\u4ece$1,1$\u8d70\u5230$i,j$\u5168\u8d70$a$\u81f3\u5c11\u8981\u6539\u53d8\u591a\u5c11\u6b21\uff0c\u7531\u4e8e\u53ea\u80fd\u5411\u4e0b\u548c\u5411\u53f3\u8d70\uff0c\u6240\u4ee5$f[i][j]$\u53ea\u53ef\u80fd\u4ece$f[i - 1][j], f[i][j - 1]$\u8f6c\u79fb\u8fc7\u6765\u3002DP\u590d\u6742\u5ea6$O(n^2)$\u3002\n- \u4e4b\u540e\uff0c\u6211\u4eec\u628a$f[i][j] \\le k$\u70b9\u627e\u51fa\u6765\uff0c\u627e\u51fa\u6240\u6709\u8d70\u5f97\u6700\u8fdc\u7684\u70b9\uff0c\u4f5c\u4e3a\u63a5\u4e0b\u6765$BFS$\u7684\u8d77\u70b9\uff08\u7279\u522b\u5730\uff0c\u5982\u679c$k = 0$\u5c31\u9700\u8981\u628a$1,1$\u9009\u51fa\u6765\u5f53\u4f5c\u8d77\u70b9\uff09\u3002\n- \u8fdb\u884cBFS\uff0c\u6211\u4eec\u770b\u56fe\u8bf4\u8bdd\uff1a\n\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdn.net/20181022160123337?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2dyYXlnb29kcw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n\n\n- \u5047\u8bbe\u7ea2\u8272\u7684\u70b9\u4e3a\u73b0\u5728\u7684\u8d77\u70b9\uff0c\u90a3\u4e48\u9ec4\u8272\u7bad\u5934\u8868\u793a\u73b0\u5728\u7684\u7684\u8d77\u70b9\u80fd\u524d\u5f80\u7684\u683c\u5b50\uff0c\u6211\u4eec\u627e\u51fa\u73b0\u5728\u80fd\u5230\u8fbe\u7684\u683c\u5b50\u4e2d\u6700\u5c0f\u7684\u5b57\u7b26\uff0c\u7136\u540e\u628a\u5e26\u6709\u6700\u5c0f\u5b57\u7b26\u7684\u683c\u5b50\uff08\u4e5f\u5c31\u662f\u4e0a\u56fe\u4e2d\u7684\u84dd\u8272\u683c\u5b50\uff09\u5b58\u8d77\u6765\uff08\u540c\u65f6\u7ed9\u8fd9\u4e2a\u683c\u5b50\u6253\u4e00\u4e2a\u6807\u8bb0\uff0c\u8bf4\u660e\u8fd9\u4e2a\u683c\u5b50\u53ef\u4ee5\u5f53\u4f5c\u7b54\u6848\u7684\u4e00\u6b65\uff09\uff0c\u5f53\u4f5c\u4e0b\u4e00\u6b21\u7684\u8d77\u70b9\uff0c\u91cd\u590d\u4e0a\u6811\u7684\u64cd\u4f5c\u77e5\u9053\u5230\u8fbe$n,n$\uff0c\u7531\u4e8e\u6211\u4eec\u6bcf\u8fdb\u884c\u4e00\u6b21\u64cd\u4f5c\uff0c\u90fd\u76f8\u5f53\u4e8e\u8d70\u4e86\u4e00\u6b65\uff0c\u6240\u4ee5\u6700\u591a\u8fdb\u884c$n$\u6b21\u8fd9\u6837\u7684\u64cd\u4f5c\u3002\n\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdn.net/20181022160947477?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2dyYXlnb29kcw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n\n- \u770b\u8d77\u6765\u4f3c\u4e4e\u72b6\u6001\u662f\u5448\u6307\u6570\u7ea7\u589e\u957f\u7684\uff0cBFS\u4f1a\u7206\u6389\uff0c\u4f46\u5b9e\u9645\u4e0a\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u6700\u574f\u7684\u60c5\u51b5\u5c31\u662f\u4e0a\u56fe\u7684\u60c5\u51b5\uff0c\u4f46\u662f\u6bcf\u5c42\u7684\u60c5\u51b5\u6570\u6700\u591a\u4e5f\u53ea\u4f1a\u8fbe\u5230$n$\u4e2a\uff0c\u6240\u4ee5\uff0cBFS\u7684\u590d\u6742\u5ea6\u4e3a$O(n^2)$\n- \u81f3\u4e8e\u8f93\u51fa\u7b54\u6848\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece$n,n$\u8fdb\u884cDFS\uff0c\u8fd9\u4e2a\u70b9\u4e0a\u9762\u6216\u8005\u5de6\u9762\u54ea\u4e00\u4e2a\u70b9\u88ab\u6253\u8fc7\u6807\u8bb0\uff0c\u5c31\u5f80\u90a3\u8fb9\u8d70\uff0c\u4e00\u76f4\u8d70\u5230\u6700\u521d\u7684\u8d77\u70b9\u3002\n\u4e4b\u540e\u8f93\u51fa$a$\u548c\u627e\u5230\u7684\u8def\u5f84\u5373\u53ef\u3002\n\nPS\uff1a\u8fd9\u9898\u89e3\u6211\u6539\u4e86\u53c8\u6539\uff0c\u6ca1\u60f3\u5230\u628aCSDN\u4e0a\u81ea\u5df1\u7684\u535a\u5ba2\u79fb\u690d\u8fc7\u6765\u4f1a\u6709\u8fd9\u4e48\u591a\u9505QAQ\uff0c\u611f\u8c22\u7ba1\u7406\u5458\u795e\u4ed9\u7684\u4e0d\u8f9e\u8f9b\u52b3QwQ\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\n\nconst int maxn = 2e3 + 7;\n\nclass Solution{\nprivate :\n    int n, k, cnt;\n    char s[maxn][maxn];\n    int f[maxn][maxn];\n    bool vis[maxn][maxn];\n    \n    char ans[maxn * 2];\n    int tot;\n\n    struct Node{\n        int x, y;\n\n        Node (int x, int y) :\n            x(x),\n            y(y) {}\n    };\n    \n    int now, last;\n    std :: queue<Node> q[2], tmp;\n\n    void Make() {\n        for (register int i = 1; i + cnt < n + n; i++) {\n            char z = 'z' + 1;\n            while (!q[last].empty()) {\n                Node nd = q[last].front();\n                tmp.push(nd);\n                q[last].pop();\n                if (nd.x < n) {\n                    z = std :: min(z, s[nd.x + 1][nd.y]);\n                }\n                if (nd.y < n) {\n                    z = std :: min(z, s[nd.x][nd.y + 1]);\n                }\n            }\n            while (!tmp.empty()) {\n                Node nd = tmp.front();\n                tmp.pop();\n                if (nd.x < n) {\n                    if (s[nd.x + 1][nd.y] == z && !vis[nd.x + 1][nd.y]) {\n                        vis[nd.x + 1][nd.y] = 1;\n                        q[now].push(Node(nd.x + 1, nd.y));\n                    }\n                }\n                if (nd.y < n) {\n                    if (s[nd.x][nd.y + 1] == z && !vis[nd.x][nd.y + 1]) {\n                        vis[nd.x][nd.y + 1] = 1;\n                        q[now].push(Node(nd.x, nd.y + 1));\n                    }\n                }\n            }\n            std :: swap(now, last);\n        }\n    }\n    \n    void DFS(int x, int y) {\n    \tif (x <= 0 || y <= 0) {\n    \t\treturn;\n\t\t}\n    \tif (x + y == cnt) {\n    \t\treturn;\n\t\t}\n\t\tans[++tot] = s[x][y];\n\t\tif (vis[x - 1][y]) {\n\t\t\tDFS(x - 1, y);\n\t\t} else {\n\t\t\tDFS(x, y - 1);\n\t\t}\n\t}\n    \npublic :\n    Solution() {\n        now = 1;\n        last = 0;\n        Get();\n        Solve();\n    }\n\n    void Get() {\n        scanf(\"%d %d\", &n, &k);\n        for (register int i = 1; i <= n; i++) {\n            scanf(\"%s\", s[i] + 1);\n        }\n    }\n\n    void Solve() {\n        memset(f, 0x3f, sizeof(f));\n        f[1][1] = s[1][1] == 'a' ? 0 : 1;\n        for (register int i = 1; i <= n; i++) {\n            for (register int j = 1; j <= n; j++) {\n            \tif (i == 1 && j == 1) {\n            \t\tcontinue;\n\t\t\t\t}\n                f[i][j] = std :: min(f[i - 1][j], f[i][j - 1]);\n                if (s[i][j] != 'a') {\n                    f[i][j]++;\n                }\n            }\n        }\n        for (register int i = 1; i <= n; i++) {\n            for (register int j = 1; j <= n; j++) {\n                if (f[i][j] <= k && i + j > cnt) {\n                    cnt = i + j;\n                }\n            }\n        }\n        for (register int i = 1; i <= n; i++) {\n            for (register int j = 1; j <= n; j++) {\n                if (i + j == cnt && f[i][j] <= k) {\n                    vis[i][j] = 1;\n                    q[last].push(Node(i, j));\n                }\n            }\n        }\n        if (q[last].empty()) {\n        \tvis[1][1] = 1;\n        \tq[last].push(Node(1, 1));\n\t\t}\n        Make();\n        DFS(n, n);\n        for (register int i = 1; i < cnt; i++) {\n        \tputchar('a');\n\t\t}\n\t\tfor (register int i = tot; i >= 1; i--) {\n\t\t\tputchar(ans[i]);\n\t\t}\n\t\tputchar('\\n');\n    }\n};\nSolution sol;\n\nint main() {}\n```",
        "postTime": 1540433791,
        "uid": 49866,
        "name": "\u9f99\u4e4b\u543b\u2014\u6c34\u8d27",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1031D \u3010Minimum path\u3011"
    },
    {
        "content": "\u6572\u4e864\u4e2a\u5c0f\u65f6\u7ec8\u4e8e\u8fc7\u4e86\u554a\u2026\u2026CF\u4e0a\u4ea4\u4e8616\u904d\u624d\u8fc7\uff0c\u5fc5\u987b\u53d1\u7bc7\u9898\u89e3\u6170\u52b3\u4e00\u4e0b\u81ea\u5df1\u2026\u2026\n\n\u4e0b\u9762\u6211\u6765\u8bf4\u4e00\u4e0b\u6211\u62ff\u5230\u8fd9\u9898\u7684\u601d\u8def\u5427\uff0c\u9898\u76ee\u4e0a\u8bf4\u662f\u53ef\u4ee5\u4fee\u6539$k$\u4e2a\u5b57\u7b26\uff0c\u663e\u7136\u5c31\u662f\u6539\u6210$a$,\u800c\u5730\u56fe\u4e2d\u5df2\u7ecf\u662f$a$\u7684\u5c31\u4e0d\u7528\u6539\u4e86\uff0c\u6240\u4ee5\u8def\u5f84\u4e2d$a$\u8d8a\u591a\u8d8a\u597d\u3002\n\n1.\u4ece\u5de6\u4e0a\u89d2\u5f00\u59cb\u641c\uff0c\u9047\u5230\u4e0d\u662f\u5b57\u7b26$a$\u5c31\u6b65\u6570\u52a01\uff0c\u662f$a$\u5c31\u4e0d\u52a0\uff0c\u627e\u5230\u6b65\u6570\u4e3a$k$\u7684\u70b9\u3002\u5b9a\u4e49\u5b83\u4eec\u7684$dis$=\u6a2a\u7eb5\u5750\u6807\u76f8\u52a0\u518d\u51cf\u4e00\uff0c\u90a3\u4e48\uff0c\u5728\u7b54\u6848\u7684\u5b57\u7b26\u4e32\u4e2d\uff0c\u7b2c1~$dis$\u4e2a\u5b57\u7b26\u90fd\u662f$a$\u4e86\uff0c\u663e\u7136$dis$\u8d8a\u5927\u8d8a\u597d\u3002\n\n2.\u4ee5\u7b2c\u4e00\u6b65\u627e\u5230\u7684\u6b65\u6570\u4e3a$k$\u7684\u70b9\u4e3a\u7b2c\u4e8c\u6b21\u641c\u7d22\u7684\u8d77\u70b9\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u6761\u8def\u5f84\uff0c\u7528\u6570\u7ec4$s$\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u70b9\u7684\u503c\uff08\u5373Map[fx][fy]\uff0c\u8be6\u7ec6\u89c1\u4ee3\u7801\uff09\uff0c\u6700\u540e\u5224\u65ad$s$\u7684\u5b57\u5178\u5e8f\u662f\u5426\u5c0f\u4e8e\u5df2\u6709\u7684$ans$,\u5982\u679c\u662f\u5c31\u66f4\u65b0$ans$\u3002\n\n$A$\u4e86\u4ee5\u540e\u6211\u53d1\u73b0\uff0c\u5176\u5b9e\u6211\u7684\u601d\u8def\u662f\u57fa\u672c\u6b63\u786e\u7684\uff0c\u53ea\u662f\u91c7\u7528\u7684\u7b97\u6cd5\u592a\u8fc7\u62d9\u52a3\uff1a\u7b2c\u4e00\u6b65\u91c7\u7528\u7684\u662f$bfs$\uff0c\u4e8e\u662f\u5c31$T$\u4e86\uff08\u800c\u4e14\u7b2c4\u4e2a\u70b9\u5c31$T$\u4e86\uff0cn\u624d100\uff09\u3002\u4e0d\u77e5\u6094\u6539\u7684\u6211$T$\u4e86\u56db\u904d\uff0c\u4e00\u76f4\u60f3\u600e\u4e48\u526a\u679d\uff0c\u6700\u540e\u7ec8\u4e8e$MLE$\u4e86\u3002\n\n\u4e8e\u662f\u6211\u7ec8\u4e8e\u7ffb\u4e86\u5927\u4f6c\u4eec\u7684\u9898\u89e3\uff0c\u624d\u77e5\u9053\u7b2c\u4e00\u6b65\u53ef\u4ee5\u7528$dp$\u4ee3\u66ff\u7b2c\u4e00\u6b65\u7684\u641c\u7d22\u3002\u4e8e\u662f\u7ec8\u4e8e\u4e0d$T$\u4e86\uff0c\u7136\u800c$WA$\u5728\u4e86\u7b2c\u516b\u4e2a\u70b9\u3002\u56e0\u4e3a\u6211\u53ea\u770b\u4e86\u9898\u89e3\u7684\u601d\u8def\uff0c\u6ca1\u770b\u4ee3\u7801\u6240\u4ee5\u7ec6\u8282\u5904\u7406\u5931\u8bef\uff0c\u53c8$WA$\u4e86\u4e03\u904d\u2026\u2026\n\n\u8fd8\u662f\u770b\u4ee3\u7801\u5427\uff1a\n\n```\n#include<queue>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint n,k,mx,dx[]={0,1},dy[]={1,0};\nint dp[2010][2010],mn[4010];//mn\u5b58\u7684\u662f\u7b54\u6848\uff0cmn[i]\u8868\u793a\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u8def\u5f84\u5728x+y-1(\u5373dis)==i\u65f6\u7684\u503c \nbool vis[2010][2010];\nchar Map[2010][2010];//\u5b58\u5730\u56fe\u7684 \nstruct node\n{\n\tint x,y,step;\n};\nqueue<node>q;\nvoid bfs()//\u7b2c\u4e8c\u6b65\u7684\u641c\u7d22\uff0cdfs\u6309\u7406\u5e94\u8be5\u4e5f\u884c \n{\n\tif(q.empty())//\u62d9\u52a3\u7684\u7279\u52241\uff0c\u5904\u7406k==0\u7684\u60c5\u51b5\uff0c\u5c31\u53ea\u5c06(1,1)\u5165\u961f\u5217 \n\t{\n\t\tq.push((node){1,1,1});\n\t\tmn[1]=Map[1][1]-'a';//\u540c\u7406mn\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u503c\u5c31\u662fMap[1][1]\u4e86 \n\t}\n\twhile(!q.empty())\n\t{\n\t\tnode now=q.front();\n\t\tq.pop();\n\t\tint x=now.x,y=now.y,step=now.step;\n\t\tif(Map[x][y]-'a'>mn[step]||step<mx)//\u5982\u679cbfs\u5230\u7684\u70b9\u7684Map\u503c\u5927\u4e8e\u7b54\u6848\u6570\u7ec4\uff0c\u76f4\u63a5\u51fa\u961f\u5217\u4e0d\u518d\u6269\u5c55 \n\t\t\tcontinue;\n\t\tfor(int i=0;i<2;++i)\n\t\t{\n\t\t\tint fx=x+dx[i],fy=y+dy[i];\n\t\t\tif(fx<=n&&fy<=n&&mn[step+1]>=Map[fx][fy]-'a'&&!vis[fx][fy])\n\t\t\t{\n\t\t\t\tvis[fx][fy]=1;\n\t\t\t\tmn[step+1]=Map[fx][fy]-'a';//\u5f53\u524d\u70b9\u7684Map\u503c\u5c0f\u4e8e\u7b49\u4e8e\u7b54\u6848\u6570\u7ec4\uff0c\u5219\u66f4\u65b0 \n\t\t\t\tq.push((node){fx,fy,step+1});\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&k);\n\tfor(int i=1;i<=n;++i)\n\t\tscanf(\"%s\",Map[i]+1);\n\tmemset(mn,0x3f,sizeof mn);//mn\u521d\u59cb\u5316\u4e3a\u6700\u5927 \n\tmemset(dp,0x3f,sizeof dp);\n\tdp[1][0]=dp[0][1]=0;\n\tfor(int i=1;i<=n;++i)\n\t\tfor(int j=1;j<=n;++j)\n\t\t{\n\t\t\tdp[i][j]=min(dp[i-1][j],dp[i][j-1])+(Map[i][j]=='a'?0:1);//\u7b2c\u4e00\u6b65\u7684\u5185\u5bb9\uff0cdp[i][j]\u8868\u793a\u8be5\u70b9\u7684\u6b65\u6570 \n\t\t\tif(dp[i][j]==k&&mx<=i+j-1)//\u5982\u679c\u6b65\u6570\u6070\u597d\u4e3ak\uff0c\u4e14i+j-1(\u5373dis)\u8d8a\u5927\u8d8a\u597d\n\t\t\t{\n\t\t\t\tmx=i+j-1;//\u66f4\u65b0dis\u7684\u6700\u5927\u503cmx \n\t\t\t\tvis[i][j]=1;\n\t\t\t\tq.push((node){i,j,i+j-1});//\u5165\u961f\u5217 \n\t\t\t}\n\t\t}\n\tbfs();\n\tif(dp[n][n]<k)//\u62d9\u52a3\u7684\u7279\u52242\uff0c\u7b54\u6848\u5168\u90e8\u4e3aa\u7684\u60c5\u51b5 \n\t{\n\t\tfor(int i=1;i<2*n;++i)\n\t\t\tprintf(\"a\");\n\t\treturn 0;\n\t}\n\tfor(int i=1;i<=mx;++i)//\u524dmx\u4e2a\u90fd\u662fa \n\t\tprintf(\"a\");\n\tfor(int i=mx+1;i<2*n;++i)//\u540e\u9762\u7684\u7b54\u6848\u5b58\u5728mn\u6570\u7ec4\u91cc\u4e86 \n\t\tprintf(\"%c\",mn[i]+'a');//\u56e0\u4e3amn\u5b58\u7684\u662fint\uff0c\u6240\u4ee5\u52a0\u56de\u6765 \n\treturn 0;\n}\n```\n",
        "postTime": 1553998299,
        "uid": 115615,
        "name": "Haworthia",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 CF1031D \u3010Minimum path\u3011"
    },
    {
        "content": "[\u9898\u76ee](https://codeforces.com/problemset/problem/1301/D)\n\n\u633a\u6709\u8da3\u7684\u4e00\u9053\u9898\u3002\n\n\u9898\u610f\uff1a\u7ed9\u4f60\u4e00\u4e2a$n*m$ \u7684\u65b9\u683c\uff0c\u4f60\u5728\u5de6\u4e0a\u89d2\u3002\u76f8\u90bb\u4e4b\u95f4\u7684\u683c\u5b50\u53ef\u4ee5\u4e92\u76f8\u5230\u8fbe\uff0c\u6bcf\u6761\u8def\u53ea\u80fd\u8d70\u4e00\u6b21\uff0c\u6bcf\u4e2a\u683c\u5b50\u53ef\u4ee5\u5230\u8fbe\u591a\u6b21\u3002\u95ee\u662f\u5426\u6709\u65b9\u5f0f\u53ef\u4ee5\u7cbe\u786e\u8d70$k$\u6b65\uff0c\u6709\u5219\u8f93\u51fa\u65b9\u6cd5\u3002\n\n\u5217\u5982\u4e00\u4e2a$3*4$\u7684\u65b9\u683c\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/okv3dtuy.png)\n\n---\n\n\u7a0d\u5fae\u8d70\u8d70\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0:\n\n- \u5bf9\u4e8e\u4e00\u4e2a$n*m$\u7684\u65b9\u683c\uff0c\u6211\u4eec\u4e00\u5b9a\u53ef\u4ee5\u627e\u5230\u82e5\u5e72\u65b9\u6cd5\u8d70\u6700\u591a (4nm\u22122n\u22122m) \u6b65\u3002\n\n\u4e8b\u5b9e\u4e0a\u6211\u4eec\u53ea\u8981\u60f3\u51fa\u4e00\u4e2a\u53ef\u884c\u7684\u8d70\u6cd5\u5c31\u597d\u4e86\u3002\n\n\u8d70\u6cd5\u4e0d\u552f\u4e00\uff0c\u6211\u7684\u65b9\u6cd5\u5982\u4e0b\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/vezhf9u1.png)\n\n\u4e4b\u540e\u5c31\u662f~~\u5927~~\u6a21\u62df\u4e86\u3002\n\n\u6211\u89c9\u5f97\u6a21\u62df\u8fd8\u662f\u8981\u591a\u5199\u5199\uff0c\u50cf\u6211\u8fd9\u4e48\u83dc\u7684\u8bdd\u6bd4\u8d5b\u65f6\u5c31\u8981\u82b1\u597d\u591a\u65f6\u95f4\u7cbe\u529b\u3002\n\n\u4e0b\u9762\u8d34\u4ee5\u4e0b\u6211\u7684200\u884c\u7684~~\u5783\u573e~~\u4ee3\u7801\uff08\u6bd4\u8d5b\u65f6\u5199\u7684\uff09\n\n~~~cpp\n\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long \nstruct step\n{\n\tint f;\n\tchar op[4];\n\tint l;\n}a[100003];\ninline int R()\n{\n\tchar c;int sign=1,res=0;\n\twhile((c=getchar())>'9'||c<'0') if(c=='-') sign=-1;res+=c-'0';\n\twhile((c=getchar())>='0'&&c<='9') res=res*10+c-'0';\n\treturn res*sign;\t\n}\nint n,m,k,s;\nsigned main()\n{\n\tn=R();m=R();k=R();\n\ts=4*n*m-n-n-m-m;\n\tif(k>s)\n\t{\n\t\tputs(\"NO\");\n\t\treturn 0;\n\t}\n\tputs(\"YES\");\n\tint now=0,top=0;\n\tif(k<m)\n\t{\n\t\tprintf(\"1\\n\",1);\n\t\tprintf(\"%d R\",k);\n\t\treturn 0;\n\t}\n\tif(m==1)\n\t{\n\t\tif(n-1>=k)\n\t\t{\n\t\t\t++top;\n\t\t\ta[top].f=k;\n\t\t\ta[top].op[0]='D';\n\t\t\ta[top].l=1;\n\t\t\tnow=k;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t++top;\n\t\t\ta[top].f=n-1;\n\t\t\ta[top].op[0]='D';\n\t\t\ta[top].l=1;\n\t\t\tnow=n-1;\n\t\t\t\n\t\t\t++top;\n\t\t\ta[top].f=k-now;\n\t\t\ta[top].op[0]='U';\n\t\t\ta[top].l=1;\n\t\t}\n\t\tprintf(\"%d\\n\",top);\n\t\tfor(int i=1;i<=top;i++)\n\t\t{\n//\t\t\tA+=a[i].f*a[i].l;\n\t\t\tprintf(\"%d \",a[i].f);\n\t\t\tfor(int j=0;j<a[i].l;j++)\n\t\t\t{\n\t\t\t\tputchar(a[i].op[j]);\n\t\t\t}\n\t\t\tputs(\"\");\n\t\t}\n\t\treturn 0;\n\t} \n\tnow=m-1;\n\t++top;\n\ta[top].f=m-1;\n\ta[top].op[0]='R';\n\ta[top].l=1;\n\tint i=1;\n\twhile(1)\n\t{\n\t\tif(now>=k) break;\n\t\tif(i==n)\n\t\t{\n\t\t\tif(now+(m-1)>=k)\n\t\t\t{\n\t\t\t\t++top;\n\t\t\t\ta[top].f=k-now;\n\t\t\t\ta[top].op[0]='L';\n\t\t\t\ta[top].l=1;\n\t\t\t\tnow=k;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t++top;\n\t\t\ta[top].f=m-1;\n\t\t\ta[top].op[0]='L';\n\t\t\ta[top].l=1;\n\t\t\tnow+=m-1;\n\t\t\t\n\t\t\t++top;\n\t\t\ta[top].f=k-now;\n\t\t\ta[top].op[0]='U';\n\t\t\ta[top].l=1;\n\t\t\tnow=k;\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tif(now+(m-1)>=k)\n\t\t{\n\t\t\t++top;\n\t\t\ta[top].f=k-now;\n\t\t\ta[top].op[0]='L';\n\t\t\ta[top].l=1;\n\t\t\tnow=k;\n\t\t\tbreak;\n\t\t}\n\t\tif(m>1)\n\t\t{\n\t\t\tif(now+(m-1)*4<=k)\n\t\t\t{\n\t\t\t\t++top;\n\t\t\t\ta[top].f=m-1;\n\t\t\t\ta[top].op[0]='L';\n\t\t\t\ta[top].l=1;\n\t\t\t\tnow+=m-1;\n\t\t\t\t\n\t\t\t\t++top;\n\t\t\t\ta[top].f=m-1;\n\t\t\t\ta[top].op[0]='D';\n\t\t\t\ta[top].op[1]='R';\n\t\t\t\ta[top].op[2]='U';\n\t\t\t\ta[top].l=3;\n\t\t\t\tnow+=(m-1)*3;\n\t\t\t\tif(now+1<=k)\n\t\t\t\t{\n\t\t\t\t\t++top;\n\t\t\t\t\ta[top].f=1;\n\t\t\t\t\ta[top].op[0]='D';\n\t\t\t\t\ta[top].l=1;\n\t\t\t\t\t++i;\n\t\t\t\t\t++now;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(now+(m-1)>=k)\n\t\t\t\t{\n\t\t\t\t\t++top;\n\t\t\t\t\ta[top].f=k-now;\n\t\t\t\t\ta[top].op[0]='L';\n\t\t\t\t\ta[top].l=1;\n\t\t\t\t\tnow=k;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t++top;\n\t\t\t\t\ta[top].f=m-1;\n\t\t\t\t\ta[top].op[0]='L';\n\t\t\t\t\ta[top].l=1;\n\t\t\t\t\tnow+=m-1;\n\t\t\t\t\t++top;\n\t\t\t\t\ta[top].f=(k-now)/3;\n\t\t\t\t\ta[top].op[0]='D';\n\t\t\t\t\ta[top].op[1]='R';\n\t\t\t\t\ta[top].op[2]='U';\n\t\t\t\t\ta[top].l=3;\n\t\t\t\t\tnow+=a[top].f*3;\n\t\t\t\t\tif(now<k)\n\t\t\t\t\t{\n\t\t\t\t\t\t++top;\n\t\t\t\t\t\ta[top].f=1;\n\t\t\t\t\t\ta[top].op[0]='D';\n\t\t\t\t\t\ta[top].l=1;\n\t\t\t\t\t\t++now;\n\t\t\t\t\t\tif(now<k)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t++top;\n\t\t\t\t\t\t\ta[top].f=1;\n\t\t\t\t\t\t\ta[top].op[0]='R';\n\t\t\t\t\t\t\ta[top].l=1;\n\t\t\t\t\t\t\t++now;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tint A=0;\n\t\n\tprintf(\"%d\\n\",top);\n\tfor(int i=1;i<=top;i++)\n\t{\n//\t\tA+=a[i].f*a[i].l;\n\t\tprintf(\"%d \",a[i].f);\n\t\tfor(int j=0;j<a[i].l;j++)\n\t\t{\n\t\t\tputchar(a[i].op[j]);\n\t\t}\n\t\tputs(\"\");\n\t}\n//\tprintf(\"%d\\n\",A);\n}\n\n~~~\n",
        "postTime": 1581669728,
        "uid": 220857,
        "name": "\u7d20\u8d28\u73a9\u5bb6\u5b591\u8d85",
        "ccfLevel": 6,
        "title": "cf1301d\u9898\u89e3"
    }
]