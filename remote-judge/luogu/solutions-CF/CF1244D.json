[
    {
        "content": "updated 2019.11.10 \u4e4b\u524d\u7b14\u8bef\u4e86  \n\n\u9996\u5148\u8fd9\u9898\u7684\u6761\u4ef6\u5c31\u5728\u4e8e \u4e00\u68f5\u6811\u4e0a\u4efb\u610f\u4e24\u4e2a\u8ddd\u79bb$\\leq2$\u7684\u70b9\u989c\u8272\u4e0d\u540c \u5e76\u4e14\u53ea\u6709\u4e09\u79cd\u989c\u8272  \n\n\u90a3\u4e48\u5982\u679c\u5b58\u4e00\u4e2a\u70b9$u$ \u6709\u4e09\u4e2a\u70b9\u4e0e$u$\u76f8\u8fde \u8fd9\u4e09\u4e2a\u70b9\u989c\u8272\u5c31\u5fc5\u987b**\u4e24\u4e24\u4e0d\u540c**  \n\u7136\u540e\u8fd9\u4e09\u4e2a\u70b9\u5c31\u628a\u4e09\u79cd\u989c\u8272\u53d6\u5b8c\u4e86  \n\u7136\u540e$u$\u5c31\u6ca1\u529e\u6cd5\u53d6\u989c\u8272\u4e86 \u8fd9\u6837\u5c31\u65e0\u89e3  \n\n\u4e8e\u662f \u53ea\u8981\u5b58\u5728\u4efb\u610f\u4e00\u4e2a\u8282\u70b9\u7684**\u5ea6\u6570**$\\geq3$\u5c31\u65e0\u89e3  \n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u8fd9\u68f5\u6811\u662f\u6761\u94fe  \n\n\u518d\u770b\u8fd9\u4e2a\u94fe \u4efb\u610f\u4e09\u4e2a\u76f8\u8fde\u7684\u8282\u70b9\u90fd\u9700\u8981\u4e24\u4e24\u989c\u8272\u4e0d\u540c  \n\u6240\u4ee5\u4efb\u610f\u4e09\u4e2a\u76f8\u8fde\u7684\u8282\u70b9\u53ea\u8981\u786e\u5b9a\u4e86\u4e24\u4e2a \u7b2c\u4e09\u4e2a\u5c31\u786e\u5b9a\u4e86 \u5c31\u53ef\u4ee5\u4e00\u6b65\u4e00\u6b65\u63a8\u4e0b\u53bb\u4e86  \n\u4e00\u5f00\u59cb\u5c31\u968f\u4fbf\u627e\u4e00\u6761\u8fb9 \u4e0e\u8fd9\u6761\u8fb9\u76f8\u8fde\u7684\u4e24\u4e2a\u70b9\u5206\u522b\u679a\u4e3e\u9009\u4ec0\u4e48\u989c\u8272(\u8fd9\u4e24\u4e2a\u70b9\u989c\u8272\u4e0d\u80fd\u76f8\u540c) \u7136\u540e\u4e00\u6b65\u4e00\u6b65\u5f80\u5916\u63a8 \u8bb0\u5f55\u4e0b\u516d\u79cd\u60c5\u51b5\u4e0b\u7b54\u6848\u6700\u5c0f\u7684\u60c5\u51b5 \u5c31\u53ef\u4ee5\u4e86  \n\n\u653e\u4e2a\u56fe\u5427 \u597d\u7406\u89e3  \n\n\u786e\u5b9a\u8fc7\u7a0b(\u679a\u4e3e$col1$\u548c$col2$ \u8fd9\u91cc\u968f\u4fbf\u627e\u4e00\u6761\u8fb9\u90fd\u884c \u6211\u627e\u4e86$(4,5)$\u8fd9\u6761\u8fb9)  \n![](https://cdn.luogu.com.cn/upload/image_hosting/y3xzwi30.png)  \n\u4e0b\u9762\u662f\u65e0\u89e3\u60c5\u51b5  \n![](https://cdn.luogu.com.cn/upload/image_hosting/4j5kt6gg.png)  \n\n\u8bb0\u5f55\u4e0b\u6bcf\u4e2a\u70b9\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b(\u679a\u4e3e6\u79cd\u60c5\u51b5)\u6807\u8bb0\u6210\u4ec0\u4e48\u989c\u8272 \u7136\u540e\u76f4\u63a5\u5168\u90e8\u52a0\u8d77\u6765 \u7edf\u8ba1\u7b54\u6848  \n\n\u8fd9\u662f\u8003\u573a\u4ee3\u7801 \u6211\u90fd\u662f\u76f4\u63a5dfs\u7684 \u5176\u5b9e\u4e0d\u7528 ~~\u4f46\u53cd\u6b63\u590d\u6742\u5ea6\u5bf9\u7684 \u65e0\u6240\u8c13~~  \n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#include <string>\n#include <cmath>\nusing namespace std;\ntypedef long long LL;\n \nLL n,m,k;\nLL c[4][800005] = {0};\nLL ans = 0;\nstring s;\n \nLL ec = 0,to[800005],nxt[800005],hed[200005] = {0};\nLL deg[400005] = {0};\nvoid add_edge(LL f,LL t){\n\t++ ec; to[ec] = t; nxt[ec] = hed[f]; hed[f] = ec;\n\tdeg[t] ++;\n}\n \nLL col[200005] = {0};\nLL rec[200005] = {0};\n \nLL chg(LL x,LL y){\n\treturn 6 - x - y; // \u5c0f\u6280\u5de7 \u6839\u636e\u53e6\u5916\u4e24\u70b9\u989c\u8272\u786e\u5b9a\u8be5\u70b9\u989c\u8272\n}\n \nvoid dfs(LL u,LL f,LL uc,LL fc){ // \u6807\u8bb0\u989c\u8272\n\tfor(LL i = hed[u];i;i = nxt[i]){\n\t\tLL v = to[i];\n\t\tif(v == f) continue;\n\t\tcol[v] = chg(uc,fc);\n\t\tdfs(v,u,col[v],uc);\n\t}\n}\n \nint main(){\n\tLL a,b;\n\tios::sync_with_stdio(false);\n\tcin >> n;\n\tfor(LL i = 1;i <= n;i ++) cin >> c[1][i];\n\tfor(LL i = 1;i <= n;i ++) cin >> c[2][i];\n\tfor(LL i = 1;i <= n;i ++) cin >> c[3][i];\n\t\n\tfor(LL i = 1;i < n;i ++){\n\t\tcin >> a >> b;\n\t\tadd_edge(a,b);\n\t\tadd_edge(b,a);\n\t}\n\t\n\tfor(LL i = 1;i <= n;i ++){\n\t\tif(deg[i] >= 3){\n\t\t\tcout << -1 << endl;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tLL ans = 0x3f3f3f3f3f3f3f3f;\n\tfor(LL c1 = 1;c1 <= 3;c1 ++){\n\t\tfor(LL c2 = 1;c2 <= 3;c2 ++){\n\t\t\tif(c1 == c2) continue;\n\t\t\tcol[a] = c1; col[b] = c2; // \u968f\u4fbf\u627e\u4e00\u6761\u8fb9 \u679a\u4e3e\n         // \u6211\u5728\u8fd9\u91cc\u76f4\u63a5\u7528\u4e86\u6700\u540e\u8f93\u5165\u7684\u90a3\u6761\u8fb9\n\t\t\tdfs(a,b,c1,c2);\n\t\t\tdfs(b,a,c2,c1);\n        // \u6ce8\u610f\u8981\u4ece\u4e24\u4e2a\u70b9\u4e24\u4e2a\u65b9\u5411 \u90fd\u8981dfs \n\t\t\tLL cnt = 0;\n\t\t\tfor(LL i = 1;i <= n;i ++) cnt += c[col[i]][i];\n\t\t\tif(cnt < ans){\n\t\t\t\tans = cnt;\n\t\t\t\tfor(LL i = 1;i <= n;i ++) rec[i] = col[i]; // \u8bb0\u5f55\u7b54\u6848\n\t\t\t}\n\t\t}\n\t}\n\tcout << ans << endl;\n\tfor(LL i = 1;i <= n;i ++) cout << rec[i] << (i == n ? '\\n' : ' '); \n\treturn 0;\n}\n```\n\u987a\u5e26\u4e00\u63d0 \u8fd9\u573aCF\u7684D\u6bd4C\u8fd8\u7b80\u5355",
        "postTime": 1571053131,
        "uid": 31440,
        "name": "installb",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1244D \u3010Paint the Tree\u3011"
    },
    {
        "content": "\u663e\u7136\uff0c\u5982\u679c\u8981\u6ee1\u8db3\u9898\u76ee\u4e2d\u7684\u6761\u4ef6\uff0c\u90a3\u4e48\u4e00\u4e2a\u70b9\u7684\u5ea6\u6570\u4e00\u5b9a\u4e0d\u80fd\u8d85\u8fc7 $2$\u3002\n\n\u6240\u4ee5\u6ee1\u8db3\u6761\u4ef6\u7684\u6811\u4e00\u5b9a\u662f\u4e00\u6761\u94fe\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u53ea\u8981\u786e\u5b9a\u94fe\u4e0a\u524d\u4e09\u4e2a\u70b9\u7684\u989c\u8272\uff0c\u5c31\u53ef\u4ee5\u786e\u5b9a\u6574\u6761\u94fe\u7684\u989c\u8272\u3002\n\n\u4e8e\u662f $3!$ \u679a\u4e3e\u524d\u4e09\u4e2a\u70b9\u7684\u989c\u8272\uff0c\u53d6\u6700\u5c0f\u503c\u5373\u53ef\u3002\n\n```cpp\n#include <cstdio>\n#include <cctype>\n#include <cstring>\n#include <algorithm>\n#include <vector>\nint read(){\n\tregister int x = 0;\n\tregister char f = 1, ch = getchar();\n\tfor (; !isdigit(ch); ch = getchar()) if (ch == '-') f ^= 1;\n\tfor (; isdigit(ch); ch = getchar()) x = (x << 1) + (x << 3) + (ch ^ '0');\n\treturn f ? x : -x;\n}\nvoid print(long long x){\n\tif (x == 0) return putchar('0'), void(0);\n\tint cnt = 0, d[25];\n\tfor (x < 0 ? x = -x, putchar('-') : 0; x; x /= 10) d[++cnt] = x % 10;\n\twhile (cnt) putchar(d[cnt] ^ '0'), --cnt;\n}\n#define N 100005\nint n, c[3][N], p[N], id[3], ansid[3], col[N];\nstd :: vector<int> E[N];\nlong long ans;\nint main(){\n\tn = read();\n\tfor (register int i = 0; i < 3; ++i)\n\t\tfor (register int j = 1; j <= n; ++j)\n\t\t\tc[i][j] = read();\n\tfor (register int i = 1, u, v; i < n; ++i)\n\t\tu = read(), v = read(), E[u].push_back(v), E[v].push_back(u);\n\tfor (register int i = 1; i <= n; ++i)\n\t\tif (E[i].size() > 2) return puts(\"-1\"), 0;\n\tfor (register int i = 1; i <= n; ++i)\n\t\tif (E[i].size() == 1){ p[1] = i; break; }\n\tfor (register int i = 2; i <= n; ++i)\n\t\tfor (int v : E[p[i - 1]]) if (v != p[i - 2]) p[i] = v;\n\tfor (register int i = 0; i < 3; ++i) id[i] = i;\n\tans = 1e18;\n\twhile (1){\n\t\tlong long s = 0;\n\t\tfor (register int i = 1; i <= n; ++i) s += c[id[i % 3]][p[i]];\n\t\tif (s < ans) ans = s, memcpy(ansid, id, sizeof ansid);\n\t\tif (!std :: next_permutation(id, id + 3)) break;\n\t}\n\tfor (register int i = 1; i <= n; ++i) col[p[i]] = ansid[i % 3] + 1;\n\tprint(ans), putchar('\\n');\n\tfor (register int i = 1; i <= n; ++i) print(col[i]), putchar(' ');\n}\n```",
        "postTime": 1571098312,
        "uid": 20561,
        "name": "AutumnKite",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 CF1244D \u3010Paint the Tree\u3011"
    },
    {
        "content": "\u9898\u76ee\u8981\u6c42\u5bf9\u4e8e\u4efb\u610f\u7684\u4e09\u4e2a\u70b9$x,y,z$\uff0c\u6ee1\u8db3$x$\u4e0e$y$\u76f4\u63a5\u76f8\u8fde\uff0c$y$\u4e0e$z$\u76f4\u63a5\u76f8\u8fde\uff0c\u5219$x,y,z$\u7684\u989c\u8272\u4e24\u4e24\u4e0d\u540c\u3002\n\n\u5bf9\u4e8e\u4efb\u610f\u56db\u4e2a\u70b9$a,b,c,d$\uff0c\u6ee1\u8db3$a$\u4e0e$b$\u76f4\u63a5\u76f8\u8fde\uff0c$a$\u4e0e$c$\u76f4\u63a5\u76f8\u8fde\uff0c$a$\u4e0e$d$\u76f4\u63a5\u76f8\u8fde\uff0c\u5219$a,b,c$\u7684\u989c\u8272\u4e24\u4e24\u4e0d\u540c\uff0c$a,c,d$\u7684\u989c\u8272\u4e24\u4e24\u4e0d\u540c\uff0c$a,b,d$\u7684\u989c\u8272\u4e24\u4e24\u4e0d\u540c\uff0c\u5219$a,b,c,d$\u7684\u989c\u8272\u4e24\u4e24\u4e0d\u540c\u3002\u4f46\u662f\u4e00\u5171\u53ea\u6709\u4e09\u79cd\u989c\u8272\uff0c\u6240\u4ee5\u53ea\u8981\u6709\u56db\u4e2a\u70b9\u6ee1\u8db3\u4e0a\u8ff0\u60c5\u51b5\uff0c\u5c31\u4e00\u5b9a\u65e0\u89e3\u3002\u6362\u53e5\u8bdd\u8bf4**\u53ea\u8981\u6709\u4e00\u4e2a\u70b9\u7684\u5ea6\u5927\u4e8e2**\uff08\u5927\u4e8e2\u6761\u8fb9\u4e0e\u8be5\u70b9\u76f8\u8fde\uff09**\uff0c\u5219\u4e00\u5b9a\u65e0\u89e3\u3002**\n\n\u6240\u4ee5\uff0c\u8981\u4f7f\u9898\u76ee\u6709\u89e3\uff0c\u8fd9\u68f5\u6811**\u5fc5\u987b\u662f\u4e00\u6761\u94fe**\u3002\n\n\u7136\u540e\uff0c\u4ece\u5934\u5230\u5c3e\u91cd\u65b0\u6807\u8bb0\u4e3a$1,2,3,...,n$\uff08$1$\uff0c$n$\u4e3a\u94fe\u7684\u65ad\u70b9\uff09\u3002\u67d3\u8272\u60c5\u51b5\u53ea\u6709\u516d\u79cd\uff08\u6570\u5b57\u4ee3\u8868\u989c\u8272\uff09\uff1a\n\n- $1,2,3,1,2,3,1,2,3,...$\n- $1,3,2,1,3,2,1,3,2,...$\n- $2,1,3,2,1,3,2,1,3,...$\n- $2,3,1,2,3,1,2,3,1,...$\n- $3,1,2,3,1,2,3,1,2,...$\n- $3,2,1,3,2,1,3,2,1,...$\n\n\u5bf9\u4e8e\u6bcf\u79cd\u60c5\u51b5\uff0c\u8bb0\u5f55\u7b54\u6848\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$\\Theta(n)$\u3002\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\n#include<vector>\n#define debug printf(\"\\n-------------\\n\")\nusing namespace std;\ntypedef long long ll;\nvector<int> adj[100010];//\u5efa\u7acb\u90bb\u63a5\u8868\nbool vis[100010];\nint n,d[100010],pos,a[100010],p[5]={0,0,1,2},tmp[100010],ans[100010];//p\u4e3a\u989c\u8272\u7684\u6392\u5217\uff0cd\u4e3a\u6bcf\u4e2a\u70b9\u7684\u5ea6\uff0ca\u4e3a\u94fe\u4e0a\u7684\u6bcf\u4e00\u4e2a\u70b9\u7684\u7f16\u53f7\nll c[3][100010],sum,mi=(1ll<<62);\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<=2;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tscanf(\"%I64d\",&c[i][j]);\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint u,v;\n\t\tscanf(\"%d %d\",&u,&v);\n\t\td[u]++;\n\t\td[v]++;//\u8bb0\u5f55\u9876\u70b9\u7684\u5ea6\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u6761\u8fb9\uff0c\u4e24\u4e2a\u7aef\u70b9\u7684\u5ea6\u5206\u522b\u52a0\u4e00\n\t\tadj[u].push_back(v);\n\t\tadj[v].push_back(u);//\u8fde\u8fb9\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tif(d[i]>2)//\u5982\u679c\u70b9\u7684\u5ea6\u5927\u4e8e2\uff0c\u5219\u65e0\u89e3\n\t\t{\n\t\t\tprintf(\"-1\");\n\t\t\treturn 0;\n\t\t}\n\t\telse if(d[i]==1)//\u4ee5\u5ea6\u4e3a1\u7684\u70b9\u4f5c\u4e3a\u7aef\u70b9\n\t\t\tpos=i;\n\ta[1]=pos;\n\tvis[pos]=true;\n\tfor(int i=2;i<=n;i++)\n\t\tfor(int j=0;j<adj[a[i-1]].size();j++)\n\t\t{\n\t\t\tint v=adj[a[i-1]][j];\n\t\t\tif(!vis[v])\n\t\t\t{\n\t\t\t\tvis[v]=true;\n\t\t\t\ta[i]=v;\n\t\t\t}\n\t\t}//\u6784\u9020\u94fe\n\tdo\n\t{\n\t\tsum=0;\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\ttmp[a[i]]=p[(i-1)%3+1]+1;//\u94fe\u4e0a\u7684\u7b2ci\u4e2a\u8282\u70b9\uff08\u7f16\u53f7\u4e3aa[i]\uff09\u6807\u4e3a\u76f8\u5e94\u7684\u989c\u8272\n\t\t\tsum+=c[p[(i-1)%3+1]][a[i]];//\u8ba1\u5165\u82b1\u8d39\n\t\t}\n\t\tif(sum<mi)//\u66f4\u65b0\u7b54\u6848\n\t\t{\n\t\t\tmi=sum;\n\t\t\tmemcpy(ans,tmp,sizeof(tmp));\n\t\t}\n\t}while(next_permutation(p+1,p+4));//\u679a\u4e3e\u989c\u8272\u7684\u6392\u5217\n\tprintf(\"%I64d\\n\",mi);\n\tfor(int i=1;i<=n;i++)\n\t\tprintf(\"%d \",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1571025547,
        "uid": 50130,
        "name": "woshishei",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1244D \u3010Paint the Tree\u3011"
    },
    {
        "content": "\u89c2\u5bdf\u53ef\u5f97\u5982\u679c\u80fd\u591f\u6210\u529f\u67d3\u8272\uff0c\u90a3\u4e48**\u4efb\u4f55\u4e00\u4e2a\u70b9\u7684\u5ea6\u6570\u90fd\u4e0d\u80fd\u8d85\u8fc73**\n\n\u90a3\u4e48\uff0c\u8fd9\u4e2a\u6811\u5c31\u662f\u4e00\u6761\u94fe......\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 100005;\nint n,c[4][N],deg[N];\nvector<int> e[N];\nlong long val[4][4];\nint out[N];\nlong long dfs(int pos,int fa,int l1,int l2) //\u7b2c\u4e00\u904d\u641c\u7b54\u6848\n{\n    for (int i = 1;i <= 3;i++)\n        if (i != l1 && i != l2)\n        {\n            if (e[pos].size() == 1) return c[i][pos];\n            int nxt = e[pos][0];\n            if (nxt == fa) nxt = e[pos][1];\n            return c[i][pos] + dfs(nxt,pos,i,l1);\n        }\n    throw;\n}\nvoid print(int pos,int fa,int l1,int l2) //\u7b2c\u4e8c\u904d\"\u6253\u5370\"\u7b54\u6848\n{\n    for (int i = 1;i <= 3;i++)\n        if (i != l1 && i != l2)\n        {\n            out[pos] = i;\n            if (e[pos].size() == 1) return;\n            int nxt = e[pos][0];\n            if (nxt == fa) nxt = e[pos][1];\n            return print(nxt,pos,i,l1);\n        }\n}\nint main ()\n{\n    ios::sync_with_stdio(false);\n    cin >> n;\n    for (int i = 1;i <= 3;i++)\n        for (int j = 1;j <= n;j++) cin >> c[i][j];\n    int t1,t2;\n    for (int i = 1;i < n;i++)\n    {\n        cin >> t1 >> t2;++deg[t1];++deg[t2];\n        e[t1].push_back(t2);e[t2].push_back(t1);\n    }\n    int pos = 0,cnt = 0;\n    for (int i = 1;i <= n;i++)\n        if (deg[i] == 1) ++cnt,pos = i;\n        else if (deg[i] > 2) {cout << -1 << endl;return 0;}\n    if (cnt != 2) {cout << -1 << endl;return 0;}\n    int nxt = e[pos][0],nn = nxt;\n    if (e[nxt][0] == pos) nxt = e[nxt][1];else nxt = e[nxt][0];//\u83b7\u53d6\u94fe\u4e0a\u7684\u524d2\u4e2a\u70b9\n    long long ans = LLONG_MAX;\n    for (int i = 1;i <= 3;i++)\n        for (int j = 1;j <= 3;j++)\n            if (i != j)\n                ans = min(ans,\n                val[i][j] = dfs(nxt,nn,i,j) + c[j][pos] + c[i][nn]);//\u679a\u4e3e\u524d2\u4e2a\u67d3\u4ec0\u4e48\uff0c\u540e\u9762\u7684\u90fd\u662f\u786e\u5b9a\u7684\n    for (int i = 1;i <= 3 && !out[1];i++)\n        for (int j = 1;j <= 3;j++)\n            if (i != j && ans == val[i][j])\n            {\n                cout << ans << endl;\n                out[pos] = j;out[nn] = i;\n                print(nxt,nn,i,j);\n                break;\n            }\n    for (int i = 1;i <= n;i++) cout << out[i] << ' ';\n    return 0;\n}\n```",
        "postTime": 1571051826,
        "uid": 92602,
        "name": "SIGSEGV",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1244D \u3010Paint the Tree\u3011"
    },
    {
        "content": "\u663e\u7136\u7684\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u7684\u5ea6\u5927\u4e8e$2$\uff0c\u65e0\u89e3\u3002\n\n\u8bc1\u660e\uff1a\n\n\u8bbe\u4e00\u4e2a\u70b9$a$\u7684\u5ea6\u4e3a$3$\uff0c\u8fde\u63a5\u7684\u4e09\u4e2a\u70b9\u5206\u522b\u4e3a$x$\uff0c$y$\uff0c$z$\n\n\u5219\uff1a$a$\uff0c$x$\uff0c$y$\u4e24\u4e24\u5f02\u8272\uff0c$a$\uff0c$y$\uff0c$z$\u4e24\u4e24\u5f02\u8272\uff0c\u4f46\u662f\u53ea\u6709$3$\u79cd\u989c\u8272\uff0c\u5e76\u4e0d\u5b58\u5728\u4e00\u79cd\u65b9\u6848\u6ee1\u8db3\u6761\u4ef6\uff08\u82e5\u6ee1\u8db3\u524d\u8005\uff0c\u5219\u6ee1\u8db3\u4e0d\u4e86$z$\u4e0e$a$\uff0c$x$\uff0c$y$\u90fd\u5f02\u8272\uff09\u3002\n\n\u6240\u4ee5\u6574\u4e2a\u6811\u5c31\u662f\u4e00\u6761\u94fe\u3002\n\n\u7136\u540e\u5c31\u80fd\u7ebf\u6027\u9012\u63a8\u4e86\u3002\u53ea\u8981\u679a\u4e3e\u524d\u4e24\u4e2a\u70b9\u7684\u989c\u8272\u5c31\u884c\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n)$\n\n~~\u8bdd\u8bf4\u8d5b\u573a\u4e0a\u8fd9\u79cd\u6c34\u9898\u6211\u5c45\u7136\u6ca1\u65f6\u95f4\u6253\u4e86~~\n\n\u6e05\u6670\u77ed\u5c0f\u7684\u4ee3\u7801\uff1a\n```\n#include <bits/stdc++.h>\nusing namespace std;\n#define LL long long\n#define N 111111\n#define INF 1e15\nLL ind[N],ansp[N],g[N],f[N],nxt[N],d[N][3],lp[N],rp[N],ans=INF,n;\n//ind[i]:\u7b2ci\u4e2a\u70b9\u7684\u5ea6\n//ansp[]:\u65b9\u6848\n//g[x]:\u7b2cx\u4e2a\u70b9\u7684\u989c\u8272\n//f[p]:\u94fe\u4e0a\u7b2cp\u4e2a\u70b9\u7684\u989c\u8272\n//nxt[i]:\u94fe\u4e0a\u7b2ci\u4e2a\u70b9\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\n//lp[i],rp[i]:\u7b2ci\u4e2a\u70b9\u7684\u4e24\u4e2a\u51fa\u8fb9\u6307\u5411\u7684\u70b9\n//ans:\u7b54\u6848\nvoid search(int x,LL cost,int p){ //\u8fd9\u662f\u7b2cx\u4e2a\u70b9\uff0c\u5f53\u524d\u82b1\u8d39\u4e3acost\uff0c\u8fd9\u4e5f\u662f\u94fe\u4e0a\u7684\u7b2cp\u4e2a\u70b9\n\tif (nxt[x]==0){ //\u5982\u679c\u8fbe\u5230\u4e86\u94fe\u7684\u53e6\u4e00\u4e2a\u65ad\u70b9\uff0c\u5219\u7ed3\u675f\n\t\tfor (int i=0;i<3;++i){\n\t\t\tif (i!=f[p-1] && i!=f[p-2]){ //\u53ef\u4ee5\u88ab\u4f7f\u7528\u7684\u989c\u8272\u3002\u8fd9\u91cc\u4e00\u5b9a\u53ea\u6709\u4e00\u4e2ai\u6ee1\u8db3\u8981\u6c42\n\t\t\t\tf[p]=i;g[x]=i; //\u4fdd\u5b58\u7ed3\u679c\n\t\t\t\tif (cost+d[x][i]<ans){ //\u5982\u679c\u65b9\u6848\u66f4\u4f18\n\t\t\t\t\tans=cost+d[x][i]; //\u4fdd\u5b58\u7ed3\u679c\u548c\u65b9\u6848\n\t\t\t\t\tfor (int j=1;j<=n;++j){\n\t\t\t\t\t\tansp[j]=g[j]+1; //\u7531\u4e8e\u4fdd\u5b58\u7684\u65f6\u5019\u989c\u8272\u6309\u71670,1,2\u4fdd\u5b58\uff0c\u6240\u4ee5\u5e94\u8be5\u52a0\u4e00\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\tif (p==1){ //\u5982\u679c\u8fd9\u662f\u94fe\u4e0a\u7684\u7b2c\u4e00\u4e2a\u70b9\uff08\u94fe\u9876\uff09\n\t\tfor (int i=0;i<3;++i){ //\u5206\u522b\u679a\u4e3e3\u79cd\u989c\u8272\n\t\t\tf[p]=i;g[x]=i;\n\t\t\tsearch(nxt[x],cost+d[x][i],p+1);\n\t\t}\n\t}else if (p==2){ //\u5982\u679c\u8fd9\u662f\u94fe\u4e0a\u7684\u7b2c\u4e8c\u4e2a\u70b9\n\t\tfor (int i=0;i<3;++i){ //\u5206\u522b\u679a\u4e3e\u53ef\u7528\u76842\u79cd\u989c\u8272\uff0c\u5176\u4e2d\u4e00\u4e2a\u5c06\u88abif\u8bed\u53e5\u8fc7\u6ee4\n\t\t\tif (i!=f[1]){\n\t\t\t\tf[p]=i;g[x]=i;\n\t\t\t\tsearch(nxt[x],cost+d[x][i],p+1);\n\t\t\t}\n\t\t}\n\t}else{ //\u5982\u679c\u662f\u5176\u4ed6\u7684\u70b9\n\t\tfor (int i=0;i<3;++i){\n\t\t\tif (i!=f[p-1] && i!=f[p-2]){ //\u8fd9\u91cc\u4e00\u5b9a\u53ea\u6709\u4e00\u4e2ai\u6ee1\u8db3\u8981\u6c42\n\t\t\t\tf[p]=i;g[x]=i;\n\t\t\t\tsearch(nxt[x],cost+d[x][i],p+1);\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tios::sync_with_stdio(false); //\u8bfb\u5165\u4f18\u5316\n\tcin>>n;\n\tfor (int i=1;i<=n;++i) cin>>d[i][0];\n\tfor (int i=1;i<=n;++i) cin>>d[i][1];\n\tfor (int i=1;i<=n;++i) cin>>d[i][2];\n\tfor (int i=1;i<n;++i){\n\t\tint x,y;cin>>x>>y;\n\t\tind[x]++;ind[y]++; //\u5ea6\n\t\tif (ind[x]>=3 || ind[y]>=3){ //\u8fd9\u4e0d\u662f\u94fe\uff0c\u8f93\u51fa-1\n\t\t\tputs(\"-1\");return 0;\n\t\t}\n\t\tif (lp[x]==0) lp[x]=y; else rp[x]=y; //\u7531\u4e8e\u5ea6\u53ea\u67092\uff0c\u6240\u4ee5\u65e0\u9700\u4f7f\u7528\u94fe\u5411\u661f\uff0c\u53ea\u8981\u5c06\u4e24\u4e2a\u51fa\u8fb9\u5206\u522b\u6307\u5411\u5bf9\u5e94\u7684\u70b9\u5373\u53ef\n\t\tif (lp[y]==0) lp[y]=x; else rp[y]=x; \n\t}\n\tint root; //\u94fe\u7684\u9876\u7aef\n\tfor (int i=1;i<=n;++i){ //\u5bfb\u627e\u94fe\u9876\n\t\tif (ind[i]==1){\n\t\t\troot=i;break; \n\t\t}\n\t}\n\tint now=lp[root],pre=root;\n\tnxt[root]=now; //nxt\u6570\u7ec4\u8bb0\u5f55\u6bcf\u4e2a\u8282\u70b9\u540e\u9762\u7684\u8282\u70b9\n\twhile (true){ //\u5c06lp\u548crp\u7684\u4fe1\u606f\u8f6c\u5316\u4e3anxt\u7684\u4fe1\u606f\n\t\tif (ind[now]==1) break;    \n\t\tif (lp[now]!=pre) nxt[now]=lp[now]; else nxt[now]=rp[now]; //\u5224\u5b9a\u4e0b\u4e00\u4e2a\u8282\u70b9\u662f\u54ea\u4e2a\u6307\u9488\u6307\u5411\u7684\n\t\tpre=now;now=nxt[now]; //\u7ee7\u7eed\u8f6c\u5316\n\t}\n\tsearch(root,0,1); //\u8fd0\u884c\n\tcout<<ans<<endl; //\u8f93\u51fa\u7b54\u6848\n\tfor (int i=1;i<n;++i){ //\u8f93\u51fa\u65b9\u6848\n\t\tcout<<ansp[i]<<\" \";\n\t}\n\tcout<<ansp[n]<<endl;\n\treturn 0;\n}\n```\n\n$389ms$",
        "postTime": 1571127290,
        "uid": 107231,
        "name": "zombie462",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1244D \u3010Paint the Tree\u3011"
    },
    {
        "content": "\u6253\u7684\u65f6\u5019\u50cf\u4e2a zz \u4e00\u6837\u6ca1\u5199\u5b8c\uff0c\uff0c\uff0c\n\n\u8fd9\u4e2a\u9898\u4e00\u773c\u53d1\u73b0\u7ed9\u51fa\u7684\u6811\u4e0d\u662f\u94fe\u7b54\u6848\u5c31\u662f -1\n\n\u7136\u540e\u5c31\u505a\u5b8c\u4e86\uff0c\u7b97\u4e00\u7b97 6 \u79cd\u60c5\u51b5\u7684\u7b54\u6848\u5c31\u884c\u4e86\u3002\u3002\u3002\n\n\u6211\u4ee3\u7801\u4e11\u7684\u4e00\u6279\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nll n,s,a[100001],b[100001],c[100001],deg[100001],p[100001],ans[100001];\nvector<int> eg[100001];\nll ansx = 99999999999999999ll;\ninline void dfs(int now,int fa,ll tot,ll A,ll B) {\n\tll to = -1;\n\tfor (size_t i = 0;i < eg[now].size();i++) if (eg[now][i] ^ fa) to = eg[now][i];\n\tif (to == -1) {\n\t\tif ((A == 1 || A == 2) && (B == 1 || B == 2)) tot += c[now],p[now] = 3;\n\t\tif ((A == 3 || A == 2) && (B == 3 || B == 2)) tot += a[now],p[now] = 1;\n\t\tif ((A == 1 || A == 3) && (B == 1 || B == 3)) tot += b[now],p[now] = 2;\n\t\tif (tot < ansx) {\n\t\t\tansx = tot;\n\t\t\tfor (int i = 1;i <= n;i++) ans[i] = p[i];\n\t\t}\n\t\treturn;\n\t}\n\tif (!A && !B) {\n\t\tp[now] = 1;\n\t\tdfs(to,now,tot+a[now],1,0);\n\t\tp[now] = 2;\n\t\tdfs(to,now,tot+b[now],2,0);\n\t\tp[now] = 3;\n\t\tdfs(to,now,tot+c[now],3,0);\n\t}\n\tif (A && !B) {\n\t\tif (A == 1) {\n\t\t\tp[now] = 2;\n\t\t\tdfs(to,now,tot+b[now],A,2);\n\t\t\tp[now] = 3;\n\t\t\tdfs(to,now,tot+c[now],A,3);\n\t\t}\n\t\tif (A == 2) {\n\t\t\tp[now] = 1;\n\t\t\tdfs(to,now,tot+a[now],A,1);\n\t\t\tp[now] = 3;\n\t\t\tdfs(to,now,tot+c[now],A,3);\n\t\t}\n\t\tif (A == 3) {\n\t\t\tp[now] = 2;\n\t\t\tdfs(to,now,tot+b[now],A,2);\n\t\t\tp[now] = 1;\n\t\t\tdfs(to,now,tot+a[now],A,1);\n\t\t}\n\t}\n\tif (A && B)\t{\n\t\tif ((A == 1 || A == 2) && (B == 1 || B == 2)) p[now] = 3,dfs(to,now,tot+c[now],B,3);\n\t\tif ((A == 3 || A == 2) && (B == 3 || B == 2)) p[now] = 1,dfs(to,now,tot+a[now],B,1);\n\t\tif ((A == 1 || A == 3) && (B == 1 || B == 3)) p[now] = 2,dfs(to,now,tot+b[now],B,2);\n\t}\n}\nint main() {\n\tcin >> n;\n\tfor (int i = 1;i <= n;i++) cin >> a[i];\n\tfor (int i = 1;i <= n;i++) cin >> b[i];\n\tfor (int i = 1;i <= n;i++) cin >> c[i];\n\tfor (int i = 1,u,v;i < n;i++) {\n\t\tcin >> u >> v;\n\t\teg[u].push_back(v);\n\t\teg[v].push_back(u);\n\t\tdeg[u]++;\n\t\tdeg[v]++;\n\t}\n\tfor (int i = 1;i <= n;i++) if (deg[i] > 2) return 0*printf(\"-1\");\n\tfor (int i = 1;i <= n;i++)\n\t\tif (deg[i] == 1) s = i;\n\tdfs(s,-1,0,0,0);\n\tcout << ansx<<endl;\n\tfor (int i  = 1;i  <= n;i++) cout << ans[i] << ' ';\n\treturn 0;\n}\n```",
        "postTime": 1571054689,
        "uid": 17521,
        "name": "lrj124",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1244D \u3010Paint the Tree\u3011"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://llf0703.com/p/cf-1244.html#dpaintthetree)\n\n### \u9898\u610f\n\n\u7528 $3$ \u79cd\u989c\u8272\u7ed9\u4e00\u68f5 $n(\\le 10^5)$ \u4e2a\u70b9\u7684\u6811\u67d3\u8272\uff0c\u6bcf\u4e2a\u70b9\u67d3\u4e0d\u540c\u7684\u989c\u8272\u6709\u4e0d\u540c\u7684\u4ee3\u4ef7\u3002\u8981\u6c42\u7531\u4efb\u610f $3$ \u4e2a\u70b9\u7ec4\u6210\u7684\u94fe\u4e0a\u989c\u8272\u90fd\u4e0d\u76f8\u540c\uff0c\u6c42\u4ee3\u4ef7\u7684\u6700\u5c0f\u503c\u3002\n\n### \u9898\u89e3\n\n\u53ef\u4ee5\u53d1\u73b0\u5982\u679c\u4e0d\u662f\u94fe\u5c31\u65e0\u89e3\u3002\n\n\u8bc1\u660e\uff1a\u4ece\u6811\u7684\u76f4\u5f84\u51fa\u53d1\uff0c\u5982\u679c\u67d3\u4e86\u524d\u4e24\u4e2a\u70b9\uff0c\u90a3\u4e48\u76f4\u5f84\u4e0a\u540e\u9762\u7684\u989c\u8272\u90fd\u662f\u786e\u5b9a\u7684\u3002\u5982\u679c\u4e0d\u662f\u94fe\u7684\u8bdd\u90a3\u4e00\u5b9a\u4f1a\u6709\u5206\u53c9\uff0c\u5047\u8bbe\u5f62\u5982\u4e0b\u56fe\uff0c\u5176\u4e2d `a--b--c` \u662f\u76f4\u5f84\uff1a\n\n```\na--b--c\n   |\n   d\n```\n\n`a` \u548c `c` \u7684\u989c\u8272\u4e00\u5b9a\u4e0d\u540c\uff0c\u6240\u4ee5 `d` \u4e0d\u7ba1\u67d3\u4ec0\u4e48\u989c\u8272\u90fd\u4e0d\u6ee1\u8db3\u9898\u89e3\u3002\n\n\u6240\u4ee5\u5c31\u679a\u4e3e\u524d\u4e24\u4e2a\u70b9\u7684\u989c\u8272\uff0c\u4f9d\u6b21\u904d\u5386\u94fe\u4e0a\u6bcf\u4e00\u4e2a\u70b9\u5373\u53ef\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n\nusing namespace std;\n\ninline int read()\n{\n    char ch=getchar(); int f=1,x=0;\n    while (ch<'0' || ch>'9') { if (ch=='-') f=-1; ch=getchar(); }\n    while (ch>='0' && ch<='9') { x=x*10+ch-'0'; ch=getchar(); }\n    return f*x;\n}\n\nconst int N=100005;\nstruct Edge {\n    int next,to;\n} edge[N<<1];\nvector <int> v;\nll ans=1e18;\nint n,a,b,cnt,head[N],c[4][N],deg[N],colRes[N],colAns[N];\n\ninline void add(int u,int v)\n{\n    edge[++cnt].to=v;\n    edge[cnt].next=head[u];\n    head[u]=cnt;\n}\n\nsigned main()\n{\n    n=read();\n    for (int i=1;i<=3;i++) for (int j=1;j<=n;j++) c[i][j]=read();\n    for (int i=1;i<n;i++)\n    {\n        a=read(); b=read();\n        add(a,b); add(b,a);\n        deg[a]++; deg[b]++;\n    }\n    for (int i=1;i<=n;i++) if (deg[i]==1) v.push_back(i);\n    if (v.size()!=2) return 0&puts(\"-1\"); //\u4e0d\u662f\u94fe\u5219\u65e0\u89e3\n    int x=v[0],y; //\u94fe\u4e0a\u7684\u4e00\u7aef\n    y=edge[head[x]].to; //\u7b2c\u4e8c\u4e2a\u70b9\n    for (int j=1;j<=3;j++) //\u7b2c\u4e00\u4e2a\u70b9\u67d3\u7684\u989c\u8272\n    {\n        for (int k=1;k<=3;k++) //\u7b2c\u4e8c\u4e2a\u70b9\u7684\u989c\u8272\n        {\n            if (j==k) continue;\n            colRes[x]=j; colRes[y]=k;\n            ll res=c[j][x]+c[k][y]; //\u5f53\u524d\u7b54\u6848\n            int cur=y,fa=x,last1=j,last2=k; //\u5f53\u524d\u70b9\uff0c\u7236\u8282\u70b9\uff0c\u524d\u4e24\u4e2a\u70b9\u7684\u989c\u8272\n            for (int i=3;i<=n;i++)\n            {\n                int nxt;\n                for (int p=head[cur];p;p=edge[p].next) if ((nxt=edge[p].to)!=fa) break; //nxt \u662f\u4e0b\u4e00\u4e2a\u70b9\n                fa=cur; cur=nxt;\n                int col=1; for (;col==last1 || col==last2;col++); //\u627e\u5230\u7b26\u5408\u8981\u6c42\u7684\u989c\u8272\n                res+=c[col][cur];\n                colRes[cur]=col;\n                last1=last2; last2=col;\n            }\n            if (res<ans) //\u66f4\u65b0\u7b54\u6848\n            {\n                ans=res;\n                memcpy(colAns,colRes,sizeof(colRes));\n            }\n        }\n    }\n    printf(\"%lld\\n\",ans);\n    for (int i=1;i<=n;i++) printf(\"%d \",colAns[i]);\n    return 0;\n}\n```",
        "postTime": 1571043212,
        "uid": 29696,
        "name": "Llf0703",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1244D \u3010Paint the Tree\u3011"
    },
    {
        "content": "\u8fd9\u6b21\u6bd4\u8d5b\u7684\u56db\u9053\u53ef\u505a\u9898\uff08ABDG\uff09\u4e4b\u4e00\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5f53\u4e14\u4ec5\u5f53\u539f\u56fe\u662f\u4e00\u6761\u94fe\u7684\u65f6\u5019\u624d\u6709\u89e3\u3002\n\n\u5982\u679c\u6709\u89e3\uff0c\u90a3\u4e48\u6d82\u8272\u67096\u79cd\u65b9\u5f0f\uff0c\u5206\u522b\u8ba1\u7b97\u5373\u53ef\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#include<iostream>\n#include<cstdio>\n#define ll long long\nconst ll N=100010,INF64 = 0x7f7f7f7f7f7f7f7f;\nusing namespace std;\n \nll n, colour[N],c[N][4], f[N][4][4];\nll g[N][4][4];\nvector<ll> e[N], q;\n \ninline ll read(){\n\tll x=0,tmp=1;\n\tchar ch=getchar();\n\twhile(!isdigit(ch)){\n\t\tif(ch=='-') tmp=-1;\n\t\tch=getchar();\n\t}\n\twhile(isdigit(ch)){\n\t\tx=(x<<3)+(x<<1)+(ch^48);\n\t\tch=getchar();\n\t}\n\treturn tmp*x;\n}\n \nvoid dfs(ll u, ll before) {\n    q.push_back(u);\n    for(ll i=0; i<e[u].size(); i++){\n    \tll v=e[u][i];\n        if (v == before) continue;\n        dfs(v, u);\n    }\n}\nint main() {\n    n=read();\n    for (ll i = 1; i <= 3; i++) {\n        for (ll j = 1; j <= n; j++) c[j][i]=read();\n    }\n    for (ll i = 1; i < n; i++) {\n        ll u=read(),v=read();\n        e[u].push_back(v);\n        e[v].push_back(u);\n    }\n    for (ll i = 1; i <= n; i++) {\n        if (e[i].size() > 2u) return printf(\"-1\\n\"), 0;\n    }\n    ll root = 0;\n    for (ll i = 1; i <= n; i++) {\n        if (e[i].size() == 1u) root = i;\n    }\n    q.push_back(0);\n    dfs(root, 0);\n    memset(f, 0x7f, sizeof(f));\n    for (ll i = 1; i <= 3; i++) {\n        for (ll j = 1; j <= 3; j++) {\n            if (i == j) continue;\n            f[2][i][j] = c[q[2]][i] + c[q[1]][j];\n        }\n    }\n    for (ll i = 3; i <= n; i++) {\n        ll x = q[i];\n        for (ll j = 1; j <= 3; j++) {\n            for (ll k = 1; k <= 3; k++) {\n                if (j == k) continue;\n                for (ll l = 1; l <= 3; l++) {\n                    if (l == j || l == k) continue;\n                    if (f[i - 1][k][l] == INF64) continue;\n                    if (f[i - 1][k][l] + c[x][j] < f[i][j][k]) {\n                        f[i][j][k] = f[i - 1][k][l] + c[x][j];\n                        g[i][j][k] = l;\n                    }\n                }\n            }\n        }\n    }\n    long long ans = INF64;\n    ll x = 0, y = 0;\n    for (ll i = 1; i <= 3; i++) {\n        for (ll j = 1; j <= 3; j++) {\n            if (i != j && f[n][i][j] < ans) {\n                ans = f[n][i][j];\n                x = i, y = j;\n            }\n        }\n    }\n    printf(\"%I64d\\n\", ans);\n    for (ll i = n; i >= 1; i--) {\n        colour[q[i]] = x;\n        ll z = g[i][x][y];\n        x = y, y = z;\n    }\n    for (ll i = 1; i <= n; i++) printf(\"%d \", colour[i]);\n    return 0;\n}\n```",
        "postTime": 1571033321,
        "uid": 27924,
        "name": "xukuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1244D \u3010Paint the Tree\u3011"
    },
    {
        "content": "- \u4e00\u5f00\u59cb\u60f3\u5199\u6811\u5f62dp\uff0c\u540e\u6765\u53d1\u73b0\u3002\u3002\uff1f\uff01\uff01\n- \u5c31\u662f\u4e00\u9053\u5927\u6c34\u9898\n- \u5148\u5224-1\uff0c\u82e5\u4e00\u4e2a\u70b9\u7684\u5ea6\u5927\u4e8e2\uff0c\u5219\u5fc5\u5b9a\u4e0d\u80fd\u6ee1\u8db3\u9898\u610f\u3002\n- \u7136\u540e\u518d\u66b4\u529bdfs\uff0c\u5224\u65ad\u54ea\u51e0\u4e2a\u70b9\u662f\u5fc5\u987b\u6d82\u4e00\u79cd\u989c\u8272\u7684\u3002\uff08\u8fd9\u91cc\u6211\u7528\u7684\u662fset\uff09\n- \u518d\u8ba8\u8bba\uff0c\u8fd93\u4e2a\u96c6\u5408\u5206\u522b\u6d82\u4ec0\u4e48\u989c\u8272\u3002\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint a[5][100010],pos[1000010],ok=0,f[1000010];\nint o[10];\nvector<int> h[100010];\nset<int> s[5];\nset<int>::iterator it;\nlong long d[5][5];\nvoid dfs(int u,int fa)\n{\n\tf[u]=fa;\n\tif(ok==-1) return ;\n\tif(h[u].size()>2)\n\t{\n\t\tok=-1;\n\t\treturn ;\n\t}\n\tint k=0;\n\tfor(int i=0; i<h[u].size(); i++)\n\t{\n\t\tint v=h[u][i];\n\t\tif(v==fa) continue;\n\t\tk++;\n\t\twhile(pos[f[u]]==k||k==pos[u]) k++;\n\t\tpos[v]=k;\n\t\ts[k].insert(v);\n\t\tdfs(v,u);\n\t}\n}\nint main()\n{\n\tint n,i,j,x,y;\n\tscanf(\"%d\",&n);\n\tfor(i=1; i<=3; i++)\n\t\tfor(j=1; j<=n; j++) scanf(\"%d\",&a[i][j]);\n\tfor(i=1; i<n; i++)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\th[x].push_back(y);\n\t\th[y].push_back(x);\n\t}\n\ts[1].insert(1);\n\tpos[1]=1;\n\tdfs(1,0);\n\tif(ok==-1) return puts(\"-1\"),0;\n\tfor(i=1; i<=3; i++)\n\t\tfor(it=s[i].begin(); it!=s[i].end(); it++)\n\t\t{\n\t\t\td[i][1]+=a[1][*it];\n\t\t\td[i][2]+=a[2][*it];\n\t\t\td[i][3]+=a[3][*it];\n\t\t}\n\tlong long mmin;\n\tmmin=d[1][1]+d[2][2]+d[3][3];\n\tmmin=min(mmin,d[1][1]+d[2][3]+d[3][2]);\n\tmmin=min(mmin,d[1][2]+d[2][1]+d[3][3]);\n\tmmin=min(mmin,d[1][2]+d[2][3]+d[3][1]);\n\tmmin=min(mmin,d[1][3]+d[2][2]+d[3][1]);\n\tmmin=min(mmin,d[1][3]+d[2][1]+d[3][2]);\n\tprintf(\"%lld\\n\",mmin);\n\tif(mmin==d[1][1]+d[2][2]+d[3][3]) o[1]=1,o[2]=2,o[3]=3;\n\telse if(mmin==d[1][1]+d[2][3]+d[3][2]) o[1]=1,o[2]=3,o[3]=2;\n\telse if(mmin==d[1][2]+d[2][1]+d[3][3]) o[1]=2,o[2]=1,o[3]=3;\n\telse if(mmin==d[1][2]+d[2][3]+d[3][1]) o[1]=2,o[2]=3,o[3]=1;\n\telse if(mmin==d[1][3]+d[2][2]+d[3][1]) o[1]=3,o[2]=2,o[3]=1;\n\telse if(mmin==d[1][3]+d[2][1]+d[3][2]) o[1]=3,o[2]=1,o[3]=2;\n\tfor(i=1;i<=n;i++) printf(\"%d \",o[pos[i]]);\n\treturn 0;\n}\n```\n",
        "postTime": 1571034200,
        "uid": 55521,
        "name": "WLHW",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1244D \u3010Paint the Tree\u3011"
    }
]