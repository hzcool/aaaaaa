[
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1162B)\n\n\u8bf4\u53e5\u5b9e\u8bdd\uff0c\u5982\u679c\u4e0d\u662f\u5148\u5199\u4e86 [Showstopper](https://www.luogu.com.cn/problem/CF1798A) \u8fd9\u9053\u9898\u7684\u8bdd\uff0c\u6211\u5e94\u8be5\u4f1a\u5728\u8fd9\u91cc\u5361\u5f88\u4e45\uff0c\u56e0\u4e3a\u505a Showstopper \u6211\u5c31\u5361\u4e86\u5f88\u4e45 QwQ\u3002\n\n## \u601d\u8def\n\u592a\u50cf\u4e86\uff0c\u5b9e\u5728\u662f\u592a\u50cf\u4e86\uff0c\u4e0e Showstopper \u60f3\u6bd4\uff0c\u4ec5\u4ec5\u5c31\u662f\u6362\u6210\u4e8c\u7ef4\u6570\u7ec4\uff0c\u6c42\u6700\u5927\u503c\u53d8\u4e3a\u627e\u9012\u589e\u77e9\u9635\uff0c\u5904\u7406\u65b9\u6cd5\u4e00\u6a21\u4e00\u6837\uff1a\u5c06\u6570\u7ec4 $a$ \u548c $b$ \u4e2d\u8f83\u5c0f\u7684\u503c\u5b58\u5728\u4e00\u4e2a\u6570\u7ec4\u91cc\uff0c\u8f83\u5927\u7684\u503c\u5b58\u5728\u4e00\u4e2a\u6570\u7ec4\u91cc\u5c31\u884c\u4e86\u3002\n\n\u4e3a\u4ec0\u4e48\u8981\u8fd9\u6837\u5b58\u5462\uff1f\u4e3e\u4e2a\u4f8b\u5b50\uff1a\n\n\u5f53\u6ee1\u8db3 $a_{i,j}<a_{i,j+1}$ \u4e14 $a_{i,j}<b_{i,j+1}$\uff0c$a_{i,j+1}>b_{i,j+1}$ \u65f6\uff0c\u6b64\u65f6\u65e0\u8bba\u662f $a_{i,j+1}$ \u8fd8\u662f $b_{i,j+1}$ \u90fd\u4f1a\u6bd4 $a_{i,j}$ \u5927\uff0c\u90a3\u4e48\u5c06\u8fd9\u4e24\u4e2a\u6570\u8f83\u5c0f\u7684\u4e00\u4e2a\u6765\u6ee1\u8db3\u9012\u589e\uff0c\u8fd9\u6837\u5bf9\u4e8e\u53e6\u5916\u4e00\u4e2a\u6570\u7ec4\u800c\u8a00\uff0c\u6ee1\u8db3\u9012\u589e\u7684\u51e0\u7387\u624d\u4f1a\u66f4\u5927\u3002\u8fd9\u91cc\u7684**\u51e0\u7387**\u5982\u679c\u770b\u4e0d\u660e\u767d\uff0c\u53ef\u4ee5\u81ea\u5df1\u5c06\u4f4d\u7f6e $(i,j)$ \u6240\u6709\u60c5\u51b5\u5217\u51fa\u6765\u8fdb\u884c\u6bd4\u8f83\uff0c\u4e0d\u662f\u5f88\u591a\uff0c\u8fd9\u91cc\u5c31\u4e0d\u4e00\u4e00\u5217\u51fa\u6765\u4e86\u3002\uff08~~\u5176\u5b9e\u4e3b\u8981\u662f\u61d2\u5f97\u5199~~\uff09\n\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#include<iostream>\n#include<cstdio>\n#include<string>\n#include<ctime>\n#include<cstring>\n#include<algorithm>\n#include<climits>\n#include<queue>\n#include<map>\n#include<set>\n#include<sstream>\n#include<cassert>\n#include<stdio.h>\n#define ll long long\n#define inf 0x3f3f3f3f\n#define fr(i , a , b) for(ll i = a ; i <= b ; ++i)\n#define fo(i , a , b) for(ll i = a ; i >= b ; --i)\nusing namespace std;\ninline char gchar()\n{\n    static char buf[1000000] , *p1 = buf , *p2 = buf;\n    return p1 == p2 && (p2 = (p1 = buf) + fread(buf , 1 , 1000000 , stdin) , p1 == p2) ? EOF : *p1++;\n}\ninline ll read()\n{\n    ll x = 0 , f = 1;\n    char ch = getchar();\n    while(ch < '0' || ch > '9')\n\t  {\n        if(ch == '-')\n        {\n        \tf = -1;\n\t\t}\n        ch = getchar();\n    }\n    while(ch >= '0' && ch <= '9')\n\t  {\n        x = (x << 1) + (x << 3) + (ch ^ 48);\n        ch = getchar();\n    }\n    return x * f;\n}\nll n , m , a[55][55] , b[55][55];\nsigned main()\n{\n    n = read();\n    m = read();\n    fr(i , 1 , n)\n    {\n        fr(j , 1 , m)\n        {\n            a[i][j] = read();\n        }\n    }\n    fr(i , 1 , n)\n    {\n        fr(j , 1 , m)\n        {\n            b[i][j] = read();\n            if(a[i][j] > b[i][j])\n            {\n                swap(a[i][j] , b[i][j]);\n            }\n        }\n    }\n    fr(i , 1 , n)//\u5224\u65ad\u884c\n    {\n        fr(j , 1 , m - 1)\n        {\n            if(a[i][j] >= a[i][j + 1] || b[i][j] >= b[i][j + 1])\n            {\n                printf(\"Impossible\");\n                system(\"pause\");\n                return 0;\n            }\n        }\n    }\n    fr(j , 1 , m)//\u5224\u65ad\u5217\n    {\n        fr(i , 1 , n - 1)\n        {\n            if(a[i][j] >= a[i + 1][j] || b[i][j] >= b[i + 1][j])\n            {\n                printf(\"Impossible\");\n                system(\"pause\");\n                return 0;\n            }\n        }\n    }\n    printf(\"Possible\");\n    system(\"pause\");\n    return 0;\n}\n```\n",
        "postTime": 1685368019,
        "uid": 461407,
        "name": "\u6731\u91d1\u5e73",
        "ccfLevel": 0,
        "title": "CF1162B Double Matrix \u9898\u89e3"
    },
    {
        "content": "\u4e00\u5e74\u524d\u505a\u8fc7\u7684\u8fd9\u9053\u9898\uff0c\u73b0\u5728\u624d\u6765\u63d0\u4ea4\u9898\u89e3\u2026\u2026\n\n\u7531\u4e8e\u662f\u4e00\u5e74\u524d\u7684\u601d\u8def\uff0c\u6240\u4ee5\u6211\u5bb9\u6613\u60f3\u5230\u66b4\u529b\u89e3\u6cd5\u3002\u7531\u9898\u610f\u5f97\u5230\uff0c\u6211\u4eec\u53ea\u80fd\u4ea4\u6362 $a_{i,j}$ \u548c $b_{i,j}$ \u7684\u503c\uff0c\u8fd9\u662f\u53ea\u6709\u4e24\u4e2a\u6570\u7684 $O(1)$ \u4ea4\u6362\u64cd\u4f5c\u3002\u90a3\u4e48\u6211\u4eec\u518d\u7528 $O(mn)$ \u7684\u66b4\u529b\u679a\u4e3e $a_{i,j}$ \u548c $b_{i,j}$ \u7684\u503c\uff0c\u5982\u679c\u4ea4\u6362\u524d\u548c\u4ea4\u6362\u540e\uff0c\u4e24\u4e2a\u6570\u5b57\u4e0d\u80fd\u540c\u65f6\u6ee1\u8db3\u9012\u589e\u77e9\u9635\u7684\u6027\u8d28\uff0c\u90a3\u4e48\u5c31\u4e00\u5b9a\u662f\u4e0d\u884c\u7684\u3002\u800c\u4e14\u6211\u4eec\u9700\u8981\u6ce8\u610f\uff0c\u5728\u8ba8\u8bba\u4ea4\u6362\u7684\u65f6\u5019\uff0c\u8be5\u64cd\u4f5c\u4e00\u5b9a\u8981\u64cd\u4f5c\uff0c\u56e0\u4e3a\u4ea4\u6362\u4f1a\u5f71\u54cd\u5230\u540e\u9762\u6570\u503c\u7684\u6bd4\u8f83\u3002\n\n\u603b\u7684\u6765\u8bf4\uff0c\u8fd9\u6837\u7684\u65b9\u6cd5\u5728\u8fd9\u6837\u7684\u6570\u636e\u4e0b\u662f\u53ef\u4ee5\u8fc7\u7684\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(mn)$\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n\tint n,m;\n\tscanf(\"%d%d\",&n,&m);\n\tint a[55][55],b[55][55];\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tscanf(\"%d\",&a[i][j]);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tscanf(\"%d\",&b[i][j]);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=2;j<=m;j++){\n\t\t\tif(a[i][j]<=a[i][j-1]||b[i][j]<=b[i][j-1]){\n\t\t\t\tswap(a[i][j],b[i][j]);\n\t\t\t\tif(a[i][j]<=a[i][j-1]||b[i][j]<=b[i][j-1]){\n\t\t\t\t\tprintf(\"Impossible\");\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(int j=1;j<=m;j++){\n\t\tfor(int i=2;i<=n;i++){\n\t\t\tif(a[i][j]<=a[i-1][j]||b[i][j]<=b[i-1][j]){\n\t\t\t\tswap(a[i][j],b[i][j]);\n\t\t\t\tif(a[i][j]<=a[i-1][j]||b[i][j]<=b[i-1][j]){\n\t\t\t\t\tprintf(\"Impossible\");\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"Possible\");\n\treturn 0;\n}\n```",
        "postTime": 1658387535,
        "uid": 439177,
        "name": "Super_Sheep",
        "ccfLevel": 0,
        "title": "CF1162B\u9898\u89e3"
    },
    {
        "content": "#### \u9898\u76ee\u5927\u610f\n\u7ed9\u51fa\u4e24\u4e2a\u4e8c\u7ef4\u6570\u7ec4 $A$ \u548c $B$ \uff0c\u53ef\u4ee5\u968f\u610f\u4ea4\u6362\u4e24\u4e2a\u6570\u7ec4\u4e2d\u76f8\u540c\u4f4d\u7f6e\u7684\u6570\u503c\uff0c\u95ee\u662f\u5426\u53ef\u4ee5\u5c06\u8fd9\u4e24\u4e2a\u6570\u7ec4\u53d8\u6210\u9012\u589e\u77e9\u9635\uff0c\u53ef\u4ee5\u8f93\u51fa Possible\uff0c\u4e0d\u53ef\u4ee5\u8f93\u51fa Impossible\u3002\n#### \u89e3\u9898\u601d\u8def\n\u5229\u7528\u8d2a\u5fc3\u7684\u7b56\u7565\uff0c\u5c06 $A_{i,j} , B_{i,j}$ \u4e2d\u5c0f\u7684\u503c\u653e\u5728 $A_{i,j}$\uff0c\u5927\u7684\u503c\u653e\u5728 $B_{i,j}$\uff0c\u8fd9\u6837\u662f\u6210\u4e3a\u9012\u589e\u77e9\u9635\u53ef\u80fd\u6027\u6700\u5927\u7684\u529e\u6cd5\u3002\u8c03\u6362\u540e\u5224\u65ad\u662f\u5426\u4e3a\u9012\u589e\u5e8f\u5217\uff0c\u8f93\u51fa\uff0cAC\u3002\n#### \u53c2\u8003\u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint a[55][55],b[55][55];\nint n,m;\nint main(int argc, const char * argv[]) {\n    // insert code here...\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++) for(int j=1;j<=m;j++) scanf(\"%d\",&a[i][j]);\n    for(int i=1;i<=n;i++) for(int j=1;j<=m;j++) scanf(\"%d\",&b[i][j]);\n    for(int i=1;i<=n;i++) for(int j=1;j<=m;j++) if(a[i][j]>b[i][j]) swap(a[i][j],b[i][j]);\n    bool flag=true;\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++){\n            if(i+1<=n){if(a[i][j]>=a[i+1][j]) flag=false;if(b[i][j]>=b[i+1][j]) flag=false;}\n            if(j+1<=m){if(a[i][j]>=a[i][j+1]) flag=false;if(b[i][j]>=b[i][j+1]) flag=false;}\n        }\n    if(flag){\n        cout<<\"Possible\";\n    }else{\n        cout<<\"Impossible\";\n    }\n    return 0;\n}\n```\n",
        "postTime": 1644050375,
        "uid": 298132,
        "name": "Abel51qwq",
        "ccfLevel": 4,
        "title": "CF1162B\u9898\u89e3"
    },
    {
        "content": "\u4f20\u9001\u95e8\uff1a[CF1162B Double Matrix](https://www.luogu.com.cn/problem/CF1162B)\n\n\u8003\u8651\u8d2a\u5fc3\uff0c\u6211\u4eec\u53ea\u80fd\u4ea4\u6362 $a_{i,j}$ \u548c $b_{i,j}$\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u5c06 $a_{i,j}$ \u548c $b_{i,j}$ \u4e2d\u5c0f\u7684\u6570\u653e\u5165 $a_{i,j}$\uff0c\u5927\u7684\u6570\u653e\u5165 $b_{i,j}$\u3002\u7d27\u63a5\u7740\u5224\u65ad\u4e00\u6b21\uff0c\u5982\u679c\u4e24\u4e2a\u77e9\u9635\u90fd\u4e25\u683c\u9012\u589e\uff0c\u8f93\u51fa Possible\uff0c\u5426\u5219\u8f93\u51fa Impossible\u3002\n\n\u90a3\u4e48\u6709\u6ca1\u6709\u8bc1\u660e\u5462\uff1f\n\n\u5982\u679c\u65b0\u7684\u77e9\u9635\u4e0d\u6ee1\u8db3\u9012\u589e\u987a\u5e8f\uff0c\u90a3\u4e48\u65e0\u8bba\u5982\u4f55\u6392\u5e8f\uff0c\u77e9\u9635\u4ecd\u7136\u65e0\u6cd5\u9012\u589e\u3002\u6211\u4eec\u8fd9\u6837\u8003\u8651\uff1a\n\n\u5047\u8bbe\u65b0\u7684\u77e9\u9635 $a$ \u4e2d\u6709\u4e00\u4e2a $a_{i,j}$ \u4e0e $a_{i, j-1}$ \u975e\u9012\u589e\u987a\u5e8f\uff0c\u90a3\u4e48\u6211\u4eec\u5c1d\u8bd5\u4ea4\u6362 $a_{i,j}$ \u4e0e $b_{i,j}$ \u7684\u503c\u3002\u6211\u4eec\u4ee5\u6700\u597d\u7684\u65b9\u5411\u8003\u8651\uff0c\u5047\u8bbe $b_{i,j}>a_{i,j-1}$\uff0c\u90a3\u4e48\u6211\u4eec\u8981\u8bc1\u660e\u7684\u5c31\u662f $a_{i,j} \\le b_{i,j-1}$\u3002\n\n\u9996\u5148\uff0c\u5728\u6ca1\u6709\u4ea4\u6362 $a_{i,j}$ \u4e0e $b_{i,j}$ \u7684\u503c\u524d\uff0c$b_{i,j}$ \u4e0e $b_{i, j-1}$ \u6709\u4e24\u79cd\u53ef\u80fd\u7684\u5173\u7cfb\uff1a\n\n1. \u9012\u589e\uff0c\u5373 $b_{i,j}>b_{i,j-1}$\uff0c\u90a3\u4e48\u4ea4\u6362\u540e\u9700\u8981\u6ee1\u8db3 $a_{i,j}>b_{i,j-1}$\uff0c\u5982\u679c $a_{i,j}>b_{i,j-1}$\uff0c\u90a3\u4e48\u663e\u7136\u56e0\u4e3a $b_{i,j-1}>a_{i,j-1}$ \u53ef\u5f97 $a_{i,j} \\ge a_{i,j-1}$\uff0c\u4e0e\u4e00\u5f00\u59cb\u7684\u5047\u8bbe\u77db\u76fe\uff0c\u6545\u4ea4\u6362 $a_{i,j}$ \u4e0e $b_{i,j}$ \u7684\u503c\u540e\u77e9\u9635\u4e0d\u53ef\u80fd\u9012\u589e\u3002\n\n1. \u4e0d\u9012\u589e\uff0c\u5373 $b_{i,j} \\le b_{i,j-1}$\uff0c\u90a3\u4e48\u53c8\u56e0\u4e3a $a_{i,j} \\le b_{i,j}$\uff0c\u663e\u7136 $a_{i,j} \\le b_{i, j-1}$\uff0c\u6545\u4e0d\u884c\u3002\n\n\u7efc\u4e0a\u5f97\u8bc1\u3002\n\n\u7eb5\u5411\u7684\u63a8\u5bfc\u8fc7\u7a0b\u4e5f\u662f\u8fd9\u6837\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n\nconst int N = 55;\nint a[N][N], b[N][N], n, m;\n\nint main()\n{\n\tscanf(\"%d %d\", &n, &m);\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tfor (int j = 1; j <= m; j++) scanf(\"%d\", &a[i][j]);\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tfor (int j = 1; j <= m; j++)\n\t\t{\n\t\t\tscanf(\"%d\", &b[i][j]);\n\t\t\tif (b[i][j] < a[i][j]) swap(a[i][j], b[i][j]);\n\t\t}\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tfor (int j = 1; j <= m; j++)\n\t\t{\n\t\t\tif (a[i][j] <= a[i][j - 1] || a[i][j] <= a[i - 1][j] || b[i][j] <= b[i][j - 1] || b[i][j] <= b[i - 1][j])\n\t\t\t{\n\t\t\t\tputs(\"Impossible\");\n\t\t\t\tgoto End;\n\t\t\t}\n\t\t}\n\t}\n\tputs(\"Possible\");\n\tEnd:\n\treturn 0;\n}\n```\n\n",
        "postTime": 1643280194,
        "uid": 332914,
        "name": "happybob",
        "ccfLevel": 6,
        "title": "CF1162B Double Matrix"
    },
    {
        "content": "\u8d2a\u5fc3\u3002\n\n#### \u601d\u8def\u5206\u6790\n\n\u8d2a\u5fc3\u7b56\u7565\uff1a\u5c06\u4e24\u4e2a\u77e9\u9635\u91cc\u6bcf\u4e2a\u5bf9\u5e94\u5143\u7d20\u4e92\u76f8\u6bd4\u8f83\uff0c\u8f83\u5927\u7684\u653e\u8fdb\u4e00\u4e2a\u77e9\u9635\u91cc\uff0c\u8f83\u5c0f\u7684\u653e\u8fdb\u53e6\u4e00\u4e2a\u91cc\uff0c\u5982\u679c\u80fd\u62fc\u51fa\u4e24\u4e2a\u9012\u589e\u77e9\u9635\u5c31\u53ef\u4ee5\uff0c\u5426\u5219\u4e0d\u53ef\u4ee5\u3002\n\n\u56e0\u4e3a\u5b83\u8bf4\u4e25\u683c\u9012\u589e\uff0c\u540e\u9762\u7684\u4e00\u5b9a\u8981\u76d6\u8fc7\u524d\u9762\u7684\uff0c\u5c3d\u91cf\u7528\u5c0f\u6570\u76d6\u8fc7\u5c0f\u7684\u6570\uff0c\u7528\u5927\u6570\u76d6\u8fc7\u5927\u7684\u6570\uff0c\u4ee5\u514d\u9632\u6b62\u6d6a\u8d39\u3002\n\n\u5982\u679c\u5c0f\u6570\u4e0d\u80fd\u653e\u8fdb\u5c0f\u77e9\u9635\uff0c\u5219\u5b83\u4e00\u5b9a\u4e5f\u4e0d\u80fd\u653e\u8fdb\u5927\u77e9\u9635\uff1b\u5982\u679c\u5927\u7684\u90fd\u4e0d\u80fd\u653e\u8fdb\u5927\u77e9\u9635\uff0c\u5c0f\u7684\u4e5f\u4e00\u5b9a\u4e0d\u80fd\u653e\u8fdb\u5927\u77e9\u9635\u3002\u800c\u6700\u7ec8\u662f\u8981\u4e24\u4e2a\u77e9\u9635\u90fd\u6210\u4e3a\u9012\u589e\u77e9\u9635\uff0c\u5fc5\u987b\u4e24\u4e2a\u90fd\u80fd\u653e\u8fdb\u53bb\u624d\u53ef\u4ee5\u7ee7\u7eed\u3002\n\n#### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint a[53][53],b[53][53];\nint tmp1[53][53],tmp2[53][53];//tmp1\u8868\u793a\u5c0f\u6570\uff0ctmp2\u8868\u793a\u5927\u6570\nint main()\n{\n\tint n,m;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tscanf(\"%d\",&a[i][j]);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tscanf(\"%d\",&b[i][j]);\n\t}\n\ttmp1[1][1]=min(a[1][1],b[1][1]);\n\ttmp2[1][1]=max(a[1][1],b[1][1]);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\ttmp1[i][j]=min(a[i][j],b[i][j]);//\u5c0f\n\t\t\ttmp2[i][j]=max(a[i][j],b[i][j]);//\u5927\n\t\t\tif(tmp1[i][j]<=tmp1[i-1][j]||tmp1[i][j]<=tmp1[i][j-1])//\u5c0f\u7684\u4e0d\u7b26\u5408\uff0c\u90a3\u4e48\u5c0f\u7684\u653e\u8fdb\u5927\u7684\u91cc\u4e5f\u4e0d\u80fd\u7b26\u5408\u3002\n\t\t\t{\n\t\t\t\tprintf(\"Impossible\");\n\t\t\t\texit(0);//\u76f4\u63a5\u7ed3\u675f\n\t\t\t}\n\t\t\tif(tmp2[i][j]<=tmp2[i-1][j]||tmp2[i][j]<=tmp2[i][j-1])//\u5927\u7684\u4e0d\u7b26\u5408\uff0c\u5c0f\u7684\u4e5f\u4e0d\u80fd\u653e\u8fdb\u5927\u77e9\u9635\n\t\t\t{\n\t\t\t\tprintf(\"Impossible\");\n\t\t\t\texit(0);//\u76f4\u63a5\u7ed3\u675f\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"Possible\");\u80fd\u505a\u51fa\u4e24\u4e2a\u9012\u589e\u77e9\u9635\n\treturn 0;\n}\n```\n\n~~\u826f\u6012\u6700\u8fd1\u7206\u53d1\u6bb5\u4e86\u5417\uff0c\u4e00\u8fde\u5199\u4e86\u8fd9\u4e48\u591a\u9898\u89e3~~",
        "postTime": 1642849182,
        "uid": 283215,
        "name": "Goodrage",
        "ccfLevel": 5,
        "title": "CF1162B Double Matrix"
    },
    {
        "content": "# CF1162B\u9898\u89e3\n### \u4f20\u9001\u95e8\uff1a [\u9898\u76ee](https://www.luogu.com.cn/problem/CF1162B)\n\u8fd9\u9053\u9898\u7684\u6b63\u89e3\u5c31\u662f\u5c06\u5c0f\u7684\u653e\u5728\u77e9\u9635 $A$ \u4e2d\uff0c\u5c06\u5927\u7684\u653e\u5728\u77e9\u9635 $B$ \u4e2d\u3002  \n\u5982\u679c\u8fd9\u6837\u8fd8\u4e0d\u6ee1\u8db3\u5b9a\u4e49\uff0c\u5c31\u4e00\u5b9a\u4e0d\u53ef\u80fd\u3002  \n\n\u8bc1\u660e~~(\u4e0d\u662f\u4e25\u683c\u7684\u6570\u5b66\u8bc1\u660e)~~\uff1a  \n\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u6211\u4eec\u6240\u9009\u7684\u77e9\u9635\u5143\u7d20\u53ea\u6709\u4e24\u4e2a\uff0c**\u5927\u5143\u7d20**\u548c**\u5c0f\u5143\u7d20**\uff0c  \n\u663e\u7136\uff0c\u7b2c\u4e00\u4e2a\u653e\u5927\u7684\u548c\u653e\u5c0f\u7684\u5bf9\u7b54\u6848\u6ca1\u6709\u6709\u5f71\u54cd\u3002   \n\u4e4b\u540e\uff0c\u5982\u679c\u628a\u5927\u7684\u5143\u7d20\u653e\u5230\u4e86\u5c0f\u7684\u5143\u7d20\u7684\u53f3\u8fb9\u6216\u4e0b\u8fb9\uff0c  \n\u90a3\u4e48\u53e6\u4e00\u4e2a\u77e9\u9635\u6240\u5bf9\u5e94\u7684\u5927\u7684\u5143\u7d20\u7684\u4e0b\u8fb9\u6216\u53f3\u8fb9\u5c31\u4f1a\u88ab\u586b\u5165\u5c0f\u5143\u7d20\uff0c\u5bb9\u6613\u4e0d\u6ee1\u8db3\u9012\u589e\u77e9\u9635\u7684\u5b9a\u4e49\uff0c  \n\u540c\u65f6\uff0c\u7b2c\u4e00\u4e2a\u77e9\u9635\u9700\u8981\u7684\u6ee1\u8db3\u9012\u589e\u77e9\u9635\u5b9a\u4e49\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\u53c8\u4f1a\u53d8\u5f97\u66f4\u5927\uff0c \n\u8fd9\u6837\u7b54\u6848\u5c31\u4e0d\u662f\u6700\u4f18\u7684\u4e86\u3002  \n\u6240\u4ee5\uff0c\u5bf9\u4e8e\u77e9\u9635\u4e2d\u6240\u6709\u5143\u7d20\u6765\u8bf4\uff0c\u8981\u4e48\u90fd\u5927\uff0c\u8981\u4e48\u90fd\u5c0f\uff0c\u8fd9\u6837\u624d\u80fd\u4f7f\u7b54\u6848\u6700\u4f18\u3002\n\n\n\n\u4ee3\u7801\uff1a\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;\nint a[100][100];\nint b[100][100];\nint main(){\n    cin>>n>>m;\n    for(int i = 1;i<=n;i++){\n        for(int j = 1;j<=m;j++){\n            cin>>a[i][j];\n        }\n    }\n    for(int i = 1;i<=n;i++){\n        for(int j = 1;j<=m;j++){\n            cin>>b[i][j];\n        }\n    }\n    for(int i = 1;i<=n;i++){\n        for(int j = 1;j<=m;j++){\n            if(a[i][j]<b[i][j]) swap(a[i][j],b[i][j]);\n        }\n    }\n    for(int i = 1;i<=n;i++){\n        for(int j = 1;j<=m;j++){\n            if(a[i][j]<=a[i][j-1]||b[i][j]<=b[i][j-1]){\n                cout<<\"Impossible\"<<endl;\n                exit(0);\n            }\n        }\n    }\n    for(int i = 1;i<=m;i++){\n        for(int j = 1;j<=n;j++){\n            if(a[j][i]<=a[j-1][i]||b[j][i]<=b[j-1][i]){\n                cout<<\"Impossible\"<<endl;\n                exit(0);\n            }\n        }\n    }\n    cout<<\"Possible\"<<endl;\n    return 0;\n}\n```",
        "postTime": 1642846753,
        "uid": 416075,
        "name": "wsy20080329",
        "ccfLevel": 4,
        "title": "CF1162B\u9898\u89e3"
    },
    {
        "content": "\u9898\u610f\uff1a\u7ed9\u51fa\u4e24\u4e2a $n\\times m$ \u7684\u6570\u7ec4\uff0c\u95ee\u901a\u8fc7\u5bf9\u5e94\u4f4d\u7f6e\u4e92\u6362\u53ef\u4ee5\u4f7f\u8fd9\u4e24\u4e2a\u6570\u7ec4\u53d8\u4e3a\u884c\u5217\u90fd\u4ece\u5de6\u4e0a\u89d2\u5f00\u59cb\u4e25\u683c\u9012\u589e\u7684\u5417\uff1f\n\n\u601d\u8def\uff1a\u53ef\u4ee5\u5148\u5c06\u4e24\u4e2a\u6570\u7ec4\u91cc\u9762\u5bf9\u5e94\u4f4d\u7f6e\u5c0f\u7684\u653e\u5230\u7b2c\u4e00\u4e2a\u6570\u7ec4\u91cc\u9762\uff0c\u5927\u7684\u653e\u5230\u7b2c\u4e8c\u4e2a\u6570\u7ec4\u91cc\u9762\uff0c\u7136\u540e\u770b\u4e24\u4e2a\u6570\u7ec4\u662f\u5426\u6ee1\u8db3\u5c31\u53ef\u4ee5\u4e86\u3002\n\n**Code**\n```cpp\n#include<bits/stdc++.h>\n#define _swap(x,y) temp=x, x=y, y=temp\n#define in scanf(\"%d%d\", &n, &m);for (register int i = 1; i <= n; ++i)for (register int j = 1; j <= m; ++j)scanf(\"%d\", &a[i][j]);for (register int i = 1; i <= n; ++i)for (register int j = 1; j <= m; ++j)scanf(\"%d\", &b[i][j]);\nusing namespace std;\nint a[55][55], b[55][55], flag, n, m, temp;\nint main()\n{\n\tmemset(a, 0x3f3f3f, sizeof(a));\n\tmemset(b, 0x3f3f3f, sizeof(b));\n\tin\n\tfor (register int i = 1; i <= n; ++i)\n\t\tfor (register int j = 1; j <= m; ++j)\n\t\t\tif (a[i][j] > b[i][j])\n\t\t\t\t_swap(a[i][j], b[i][j]);\n\tfor (register int i = 1; i <= n; ++i)\n\t\tfor (register int j = 1; j <= m; ++j)\n\t\t\tif (a[i][j] >= a[i][j + 1] || a[i][j] >= a[i + 1][j]||b[i][j] >= b[i][j + 1] || b[i][j] >= b[i + 1][j])\n\t\t\t\tflag = 1;\n\tif (flag == 0)\n\t\tprintf(\"Possible\\n\");\n\telse\n\t\tprintf(\"Impossible\\n\");\n\treturn 0;\n}\n```",
        "postTime": 1642839541,
        "uid": 354425,
        "name": "wangping",
        "ccfLevel": 5,
        "title": "\u3010\u9898\u89e3\u3011CF1162B Double Matrix"
    }
]