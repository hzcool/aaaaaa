[
    {
        "content": "\u9ed8\u8ba4\u82f1\u96c4\u6309\u4f4d\u7f6e\u6392\u597d\u5e8f\u3002\n\n\u9996\u5148\u60f3\u5230\u679a\u4e3e\u96c6\u5408\u70b9\uff0c\u7136\u540e\u8003\u8651\u5982\u4f55\u5b89\u6392\u82f1\u96c4\u7684\u987a\u5e8f\u3002\u56e0\u4e3a\u5de6\u53f3\u4e24\u8fb9\u9664\u4e86\u7b2c\u4e00\u6b65\u8c01\u5148\u8d70\u4ee5\u5916\u76f8\u5bf9\u72ec\u7acb\uff0c\u6240\u4ee5\u5c31\u53ea\u8003\u8651\u4e00\u8fb9\u3002\u5982\u679c\u79bb\u96c6\u5408\u70b9\u4ece\u8fd1\u5230\u8fdc\u8003\u8651\u82f1\u96c4\uff0c\u90a3\u4e48\u80fd\u8d70\u5c31\u8d70\u662f\u6700\u4f18\u7684\u7b56\u7565\u3002\u56e0\u4e3a\u4ed6\u65e2\u7136\u80fd\u8d70\uff0c\u90a3\u4f55\u5fc5\u8ba9\u4e4b\u540e\u7684\u82f1\u96c4\u6765\u5192\u8fd9\u4e2a\u98ce\u9669\u5462\uff1f\u5373\u7559\u7ed9\u4e86\u540e\u9762\u7684\u82f1\u96c4\u66f4\u5927\u7684\u673a\u4f1a\u8d70\u5230\u96c6\u5408\u70b9\u3002\u4e8e\u662f\u6734\u7d20\u5730\u679a\u4e3e\u96c6\u5408\u70b9\uff0c\u679a\u4e3e\u82f1\u96c4\uff0c\u6a21\u62df\u79fb\u52a8\u60c5\u51b5\uff0c\u590d\u6742\u5ea6 $O(n^3)$ \u4fbf\u8db3\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\n\n\u4f46\u663e\u7136\u53ef\u4ee5\u4f18\u5316\u3002\u53ef\u4ee5\u53d1\u73b0\u6a21\u62df\u6bcf\u4e2a\u82f1\u96c4\u7684\u79fb\u52a8\u60c5\u51b5\u662f\u91cd\u590d\u8ba1\u7b97\u7684\u3002\u800c\u4e14\u53ef\u4ee5\u53d1\u73b0\u6bcf\u4e2a\u82f1\u96c4\u5b9e\u9645\u8981\u201c\u7ecf\u5386\u201d\u7684\uff0c\u662f\u4e00\u6bb5\u4ee5\u4ed6\u6240\u5728\u4f4d\u7f6e\u4e3a\u8d77\u70b9\uff0c\u4e00\u6bb5\u8fde\u7eed\u7684\u533a\u95f4\u3002\u539f\u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u6210\u6bcf\u4e2a\u82f1\u96c4\u4ee3\u8868\u4e00\u6bb5\u6781\u957f\u7684\u533a\u95f4\uff0c\u95ee\u8fd9\u4e9b\u533a\u95f4\u662f\u5426\u53ef\u4ee5\u5b8c\u6574\u7684\u8986\u76d6\u7b2c\u4e00\u4e2a\u82f1\u96c4\u5230\u6700\u540e\u4e00\u4e2a\u82f1\u96c4\u3002\u90a3\u4e48\u6a21\u62df\u9884\u5904\u7406\u6bcf\u4e2a\u82f1\u96c4\u7684\u533a\u95f4\uff0c\u53ef\u4ee5\u505a\u5230 $O(n^2)$\u3002\n\n\u5199\u5b8c\u901a\u8fc7\u540e\uff0c\u53d1\u73b0\u5176\u5b9e\u53ef\u4ee5 $O(n)$\u3002\u590d\u6742\u5ea6\u7684\u74f6\u9888\u5728\u4e8e\u6bcf\u4e2a\u82f1\u96c4\u90fd\u8981\u9884\u5904\u7406\uff0c\u4e8e\u662f\u8003\u8651\u662f\u5426\u53ef\u4ee5\u4e0d\u5904\u7406\u5b8c\u5462\uff1f\u7b54\u6848\u662f\u80af\u5b9a\u7684\u7684\u3002\u8003\u8651\u628a\u82f1\u96c4\u8d70\u7684\u8fc7\u7a0b\u8f6c\u5316\u6210\u8fd9\u6837\uff1a\u7b2c\u4e00\u4e2a\u82f1\u96c4\u5f00\u59cb\u5f80\u53f3\u8fb9\u8d70\uff0c\u8d70\u5230\u7b2c\u4e8c\u4e2a\u82f1\u96c4\u7684\u5730\u65b9\uff0c\u5982\u679c\u4ed6\u73b0\u5728\u7684\u8840\u91cf\u6bd4\u7b2c\u4e8c\u4e2a\u82f1\u96c4\u5927\uff0c\u5c31\u7ee7\u7eed\u8d70\uff0c\u5426\u5219\u5c31\u8ba9\u7b2c\u4e8c\u4e2a\u82f1\u96c4\u8d70\uff0c\u76f4\u5230\u8840\u91cf\u4e3a $0$\u3002\u540c\u65f6\uff0c\u6700\u540e\u4e00\u4e2a\u82f1\u96c4\u4ee5\u7c7b\u4f3c\u7684\u65b9\u5f0f\u5f80\u5de6\u8fb9\u8d70\u3002\u7a0d\u5fae\u601d\u8003\u4e00\u4e0b\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u79cd\u79fb\u52a8\u65b9\u5f0f\u662f\u7b49\u4ef7\u7684\uff0c\u6362\u82f1\u96c4\u7684\u8fc7\u7a0b\u5176\u5b9e\u5c31\u5bf9\u5e94\u4e86\u8ba9\u6362\u4e0a\u6765\u7684\u82f1\u96c4\u5148\u8d70\u3002\u8fd9\u6837\uff0c\u5c31\u53ef\u4ee5\u505a\u5230 $O(n)$\u3002",
        "postTime": 1645176816,
        "uid": 305806,
        "name": "Sword_K",
        "ccfLevel": 7,
        "title": "CF1070G Monsters and Potions \u9898\u89e3"
    },
    {
        "content": "## \u601d\u8def\n\n\u56e0\u4e3a $n$ \u5f88\u5c0f\uff0c\u8003\u8651\u66b4\u529b\u679a\u4e3e\u6bcf\u4e2a\u96c6\u5408\u70b9\uff0c\u7136\u540e\u4e24\u4fa7\u663e\u7136\u662f\u72ec\u7acb\u7684\uff0c\u4e0b\u6587\u53ea\u8003\u8651\u786c\u6027\u5728\u96c6\u5408\u70b9\u53f3\u8fb9\u7684\u60c5\u51b5\u3002\n\n\u6211\u4eec\u53d1\u73b0\u9898\u9762\u91cc\u6709\u4e2a\u5f88\u91cd\u8981\u7684\u8bdd\uff1a**\u9009\u62e9\u82f1\u96c4\u540e\uff0c\u82f1\u96c4\u4f1a\u4e00\u76f4\u8d70\u76f4\u5230\u96c6\u5408\u70b9**\u3002\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u8bbe\u4ece\u5de6\u5230\u53f3\u7b2c $x$ \u4e2a\u82f1\u96c4\u88ab\u9009\u62e9\u65f6\uff0c\u4e4b\u524d\u9009\u62e9\u82f1\u96c4\u7684\u6700\u5927\u7f16\u53f7\u662f $y$\uff0c\u5219 $x$ \u5c31\u8981\u8d70 $[y,x]$ \u8fd9\u6bb5\u8def\u4e0a\u7684\u6240\u6709\u602a\u7269\u548c\u836f\u6c34\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8bbe\u8ba1\u4e00\u4e2a dp\uff1a\u6211\u4eec\u76f4\u63a5\u4ece\u524d\u5230\u540e\u679a\u4e3e\u4e00\u4e2a\u65b0\u82f1\u96c4\uff0c\u8fd9\u4e2a\u65b0\u82f1\u96c4\u8d70\u4e86\u4e0a\u4e00\u4e2a\u679a\u4e3e\u82f1\u96c4\u5230\u8fd9\u4e2a\u82f1\u96c4\u7684\u6240\u6709\u8def\uff0c\u800c\u6ca1\u6709\u679a\u4e3e\u5230\u7684\u82f1\u96c4\u6700\u540e\u53ef\u4ee5\u76f4\u63a5\u8d70\u56de\u53bb\u3002\n\n\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662f $O(n^2)$ \u7684\uff0c\u56e0\u6b64\u603b\u590d\u6742\u5ea6\u4e3a $O(n^3)$\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\n\n\u5b9e\u73b0\u4e2d\u6d89\u53ca\u5230\u82f1\u96c4\u4f4d\u7f6e\u548c\u4e2d\u70b9\u5206\u754c\u7ebf\u6709\u4e00\u4e9b\u5c0f\u7ec6\u8282\u3002\n\n## \u4ee3\u7801\n\n```cpp\n// Problem: G. Monsters and Potions\n// Contest: Codeforces - 2018-2019 ICPC, NEERC, Southern Subregional Contest (Online Mirror, ACM-ICPC Rules, Teams Preferred)\n// URL: https://codeforces.com/contest/1070/problem/G\n// Memory Limit: 256 MB\n// Time Limit: 3000 ms\n// \n// Powered by CP Editor (https://cpeditor.org)\n \n//And in that light,I find deliverance.\n#include<bits/stdc++.h>\n// #pragma GCC optimize(\"Ofast\")\n// #pragma GCC optimize(\"unroll-loops\")\n// #pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,tune=native\")\nusing namespace std;\ninline int read(){\n   int s=0,w=1;\n   char ch=getchar();\n   while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n   while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n   return s*w;\n}\nbool vis[103];\nint nxt[103];\nint h[103],a[103];\nbool f[103];\nint id[103];\nvoid dfs(int x)\n{\n\tif(x==-1) return ;\n\tdfs(nxt[x]);\n\tprintf(\"%d \",id[x]),vis[x]=0;\n\treturn ;\n}\nsigned main()\n{\n\tint n=read(),m=read();\n\tint fir=n+1,lst=0,ava=0;\n\tfor(int i=1; i<=m; ++i)\n\t{\n\t\tint x=read();\n\t\tvis[x]=1,h[x]=read(),id[x]=++ava;\n\t\tif(x<fir) fir=x;\n\t\tif(x>lst) lst=x;\n\t}\n\tfor(int i=1; i<=n; ++i) a[i]=read();\n\tfor(int i=1; i<=n+1; ++i) \n\t{\n\t\tmemset(f,0,sizeof(f));\n\t\tbool f1=0,f2=0;\n\t\tfor(int j=i-1; j>=1; --j) if(vis[j])\n\t\tfor(int k=j,cur=h[j]; k<=i-1; ++k)\n\t\t{\n\t\t\tcur+=a[k];\n\t\t\tif(cur<0) break;\n\t\t\tif(k==i-1) {f[j]=1,nxt[j]=-1;break;}\n\t\t\telse if(f[k]) {f[j]=1,nxt[j]=k;break;}\n\t\t}\n\t\tfor(int j=i; j<=n; ++j) if(vis[j])\n\t\tfor(int k=j,cur=h[j]; k>=i; --k)\n\t\t{\n\t\t\tcur+=a[k];\n\t\t\tif(cur<0) break;\n\t\t\tif(k==i) {f[j]=1,nxt[j]=-1;break;}\n\t\t\telse if(f[k]) {f[j]=1,nxt[j]=k;break;}\n\t\t}\n\t\tif(fir<i) f1=f[fir]; else f1=1;\n\t\tif(lst>=i) f2=f[lst]; else f2=1;\n\t\tif(f1&&f2)\n\t\t{\n\t\t\tprintf(\"%d\\n\",min(n,i));\n\t\t\tif(lst>=i) dfs(lst);\n\t\t\tif(fir<i) dfs(fir);\n\t\t\tfor(int i=1; i<=n; ++i) if(vis[i]) printf(\"%d \",id[i]);\n\t\t\tputs(\"\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tputs(\"-1\");\n\treturn 0;\n}\n```",
        "postTime": 1638591650,
        "uid": 379819,
        "name": "MattiaBinotto",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF1070G"
    }
]