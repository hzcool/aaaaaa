[
    {
        "content": "## \u9898\u610f\n\u544a\u8bc9\u4f60\u82e5\u5e72\u4e2a\u781d\u7801\u7684\u8d28\u91cf\uff0c\u6bcf\u4e2a\u781d\u7801\u53ef\u4ee5\u653e\u4efb\u610f\u6b21\uff0c\u4f60\u6709\u5de6\u53f3\u4e24\u4e2a\u76d8\uff0c\u4f60\u9700\u8981\u4ea4\u66ff\u7740\u628a\u781d\u7801\u653e\u5728\u4e24\u4e2a\u76d8\u4e2d\uff0c\u603b\u5171\u653e$m$\u6b21\uff0c\u4fdd\u8bc1\u6bcf\u6b21\u653e\u7f6e\u5728\u4e00\u4e2a\u76d8\u540e\uff0c\u8fd9\u4e2a\u76d8\u7684\u91cd\u91cf\u8981\u5927\u4e8e\u53e6\u4e00\u4e2a\u76d8\uff0c\u5e76\u4e14\u8fd9\u6b21\u653e\u7f6e\u7684\u781d\u7801\u8d28\u91cf\u548c\u4e0a\u4e00\u6b21\u7684\u4e0d\u80fd\u76f8\u540c\uff0c\u5224\u65ad\u80fd\u5426\u6267\u884c\u5b8c\u8fd9\u4e00\u8fc7\u7a0b\uff0c\u5982\u679c\u80fd\u5c31\u8f93\u51fa\u4efb\u4e00\u89e3\u51b3\u65b9\u6848\n## \u5206\u6790\n\u6309\u7167\u9898\u610f\u6a21\u62df\uff0c\u8fdb\u884c$dfs$\uff0c\u5148\u7528$vis$\u6570\u7ec4\u5b58\u54ea\u4e9b\u781d\u7801\u53ef\u4ee5\u4f7f\u7528\uff0c\u7136\u540e\u8fdb\u884c\u6a21\u62df\uff0c\u5982\u679c\u662f\u7b2c\u5947\u6570\u6b21\u653e\u7f6e\uff0c\u5c31\u52a0\u5165\u5de6\u76d8\uff0c\u5426\u5219\u653e\u53f3\u76d8\uff0c\u8bb0\u5f55\u4e0b\u6bcf\u6b21\u653e\u7f6e\u7684\u781d\u7801\uff0c\u5982\u679c\u653e\u7f6e\u5b8c\u4e86\u5c31\u8f93\u51fa\uff0c\u5982\u679c\u6700\u540e\u4e5f\u4e0d\u80fd\u653e\u7f6e\u5b8c\u5c31\u8f93\u51fa$NO$\u3002\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e5;\nint vis[15],n,a[N];\nvoid print()\n{\n\tputs(\"YES\");\n\tfor(int i=1;i<=n;i++) printf(\"%d \",a[i]);\n}\nvoid dfs(int k,int ls,int rs,int last)\n{\n\tif(k==n+1)\n\t{\n\t\tprint();\n\t\texit(0);\n\t}\n\tfor(int i=1;i<=10;i++)\n\t{\n\t\tif(!vis[i]) continue;\n\t\tif(i==last) continue;\n\t\tif(k%2==1)\n\t\t{\n\t\t\tif(ls+i>rs) \n\t\t\t{\n\t\t\t\ta[k]=i;\n\t\t\t\tdfs(k+1,ls+i,rs,i);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif(rs+i>ls)\n\t\t\t{\n\t\t\t\ta[k]=i;\n\t\t\t\tdfs(k+1,ls,rs+i,i);\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tfor(int i=1;i<=10;i++)\n\t{\n\t\tchar c=getchar();\n\t\tif(c-'0'==1) vis[i]=1;\n\t}\n\tscanf(\"%d\",&n);\n\tdfs(1,0,0,0);\n\tputs(\"NO\");\n\treturn 0;\n}\n```\n",
        "postTime": 1589529746,
        "uid": 72043,
        "name": "jdsb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF339C \u3010Xenia and Weights\u3011"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF339C)\n\n\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a $10$ \u7684 01 \u5b57\u7b26\u4e32\uff0c\u82e5\u7b2c $i$ \u4f4d\u4e3a $1$\uff0c\u5219\u8868\u793a\u4f60\u62e5\u6709\u6b63\u65e0\u7a77\u4e2a\u8d28\u91cf\u4e3a $i$ \u7684\u781d\u7801\uff0c\u4f60\u8981\u7528\u8fd9\u4e9b\u781d\u7801\u5728\u5de6\u76d8\u548c\u53f3\u76d8\u4f9d\u6b21\u653e\u7f6e\uff08\u5148\u653e\u5de6\u76d8\uff09$m$ \u6b21\uff0c\u4fdd\u8bc1\u5728\u6bcf\u4e00\u6b21\u653e\u7f6e\u5b8c\u6210\u4e4b\u540e\uff0c\u653e\u7f6e\u7684\u90a3\u4e00\u4e2a\u76d8\u8981\u6bd4\u53e6\u4e00\u4e2a\u76d8\u91cd\uff0c\u5e76\u4e14\u76f8\u90bb\u4e24\u6b21\u4e0d\u80fd\u653e\u540c\u4e00\u4e2a\u781d\u7801\uff0c\u82e5\u80fd\u591f\u505a\u5230\uff0c\u8bf7\u5728\u7b2c\u4e00\u884c\u8f93\u51fa `YES` \u5e76\u5728\u7b2c\u4e8c\u884c\u8f93\u51fa\u65b9\u6848\uff0c\u5426\u5219\u8f93\u51fa `NO`.\n\n## \u601d\u8def\n\n\u6211\u4eec\u4f7f\u7528 `dfs`\uff0c\u6bcf\u4e00\u6b21\u90fd\u4ece\u5230\u5230\u5c0f\u679a\u4e3e\u781d\u7801\uff0c\u5982\u679c\u80fd\u7528\uff0c\u5219\u9009\u62e9\u5e76`dfs`\u3002\n\n\u5b9e\u73b0\u8be6\u89c1\u4ee3\u7801\u3002\n\n## CODE\n```cpp\n\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=11,M=10011;\nint n,m;\nint a[N];//\u8868\u793a\u80fd\u7528\u7684\u781d\u7801\nint ans[M];//\u50a8\u5b58\u7b54\u6848\nvoid dfs(int dq,int last,int now)\n{//dq\u4e3a\u8981\u52a0\u781d\u7801\u7684\u76d8\u7684\u8d28\u91cf\uff0clast\u4e3a\u53e6\u4e00\u4e2a\u76d8\u7684\u8d28\u91cf\uff0cnow\u4e3a\u5f53\u524d\u518d\u653e\u7b2c\u51e0\u6b21\n\tif(now>m){//\u6ee1\u8db3\u6761\u4ef6\u5219\u8f93\u51fa\n\t\tcout<<\"YES\"<<endl;\n\t\tfor(int i=1;i<=m;i++)\n\t\tcout<<ans[i]<<' ';\n\t\tcout<<endl;\n\t\texit(0);//\u7ed3\u675f\u6574\u4e2a\u7a0b\u5e8f\n\t}\n\tfor(int i=n;i>=1;i--){//\u4ece\u5927\u5230\u5c0f\u679a\u4e3e\n\t\tif(a[i]+dq>last&&a[i]!=ans[now-1]){//\u9009\u62e9\u80fd\u7528\u7684\u781d\u7801\n\t\t\tans[now]=a[i];\n\t\t\tdfs(last,dq+a[i],now+1);//\u5de6\u53f3\u4e92\u6362\n\t\t}\n\t}\n}\nint main()\n{\n\tstring s;cin>>s;\n\tfor(int i=0;i<10;i++){\n\t\tif(s[i]=='1')a[++n]=i+1;\n\t}\n\tcin>>m;\n\tdfs(0,0,1);\n\tcout<<\"NO\"<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1656818807,
        "uid": 541916,
        "name": "yaoyanfeng",
        "ccfLevel": 5,
        "title": "CF339C"
    },
    {
        "content": "\u9898\u76ee\u94fe\u63a5\uff1a[CF339C](https://www.luogu.org/problem/CF339C)\n\n\u3010\u5e7f\u544a\u3011\u5728\u4e2a\u4eba\u535a\u5ba2\u9605\u8bfb\uff1a[\u8fd9\u91cc](https://toxic2018.ml/1838/)\n\n****\n\n\u8fd9\u9898\u5df2\u7ecf\u6709\u8f83\u4e3a\u5b8c\u5584\u7684\u9898\u76ee\u7ffb\u8bd1\u3002[\u5728\u6211\u4e4b\u524d\u7684\u4e00\u7bc7\u9898\u89e3](https://ji-suan-ke.blog.luogu.org/solution-cf339c)\u601d\u8def\u662f\u66b4\u529b\u641c\u7d22\uff08\u590d\u6742\u5ea6\u662f\u6b63\u786e\u7684\uff09\uff0c\u800c\u8fd9\u7bc7\u9898\u89e3\u7528\u7684\u662f\u52a8\u6001\u89c4\u5212\u7684\u601d\u8def\u3002\n\n### \u9898\u76ee\u5927\u610f\n\n\u4f60\u88ab\u5141\u8bb8\u4f7f\u7528$1..10$\u4e2d\u7684\u82e5\u5e72\u4e2a\u6570\u3002\n\n\u4e00\u5f00\u59cb\u6709\u4e24\u4e2a\u6570$a,b$\uff0c\u521d\u59cb\u503c\u5747\u4e3a$0$\u3002\n\n\u4f60\u9700\u8981\u5bf9\u8fd9\u4e24\u4e2a\u6570\u4ea4\u66ff\u64cd\u4f5c\uff08\u5148\u64cd\u4f5c\u54ea\u4e2a\u65e0\u5173\u7d27\u8981\uff09\uff0c**\u4e00\u5171** $m$\u6b21\u3002\u6bcf\u6b21\u64cd\u4f5c\u4f60\u9700\u8981\u5c06\u6240\u64cd\u4f5c\u7684\u6570\u52a0\u4e0a **\u4e00\u4e2a** \u4f60 **\u88ab\u5141\u8bb8\u4f7f\u7528** \u7684\u6570\u3002\u6bcf\u6b21\u64cd\u4f5c\u9700\u8981\u6ee1\u8db3\uff1a\n\n- \u52a0\u4e0a\u7684\u6570\u548c\u4f60 **\u4e0a\u4e00\u6b21** \u64cd\u4f5c\u4e0d\u540c\uff08\u5bf9\u4e8e\u7b2c\u4e00\u6b21\u64cd\u4f5c\uff0c\u6ca1\u6709\u9650\u5236\uff09\n- \u64cd\u4f5c\u540e\u88ab\u64cd\u4f5c\u7684\u6570\u5fc5\u987b **\u4e25\u683c\u5927\u4e8e** \u53e6\u4e00\u4e2a\u6570\n\n\u95ee\u4f60\u662f\u5426\u53ef\u80fd\u5408\u6cd5\u5730\u8fdb\u884c$m$\u6b21\u64cd\u4f5c\u3002\u5982\u679c\u53ef\u80fd\uff0c\u9700\u8981\u6784\u9020\u51fa\u4e00\u79cd\u65b9\u6cd5\u3002\n\n$1 \\leq m \\leq 1000$\n\n****\n\n\u7531\u4e8e\u52a8\u6001\u89c4\u5212\u7684\u8def\u5f84\u8bb0\u5f55\u5b9e\u9645\u4e0a\u975e\u5e38\u7b80\u5355\uff0c\u6211\u4eec\u6682\u4e14\u4e0d\u8003\u8651\u6784\u9020\u51fa\u4e00\u79cd\u65b9\u6848\uff0c\u53ea\u8003\u8651\u662f\u5426\u6709\u53ef\u80fd\u3002\n\n### \u72b6\u6001\u8bbe\u8ba1\n\n\u6700\u5bb9\u6613\u60f3\u5230\u7684\u72b6\u6001\u8bbe\u8ba1\u662f\uff1a\n\n$dp[1..m][1..10\\cdot m][1..10\\cdot m]$\uff0c\u5176\u4e2d$dp[i][j][k][t]$\u8868\u793a\u5df2\u7ecf\u64cd\u4f5c$i$\u6b21\uff0c\u5e76\u4e14\u6b64\u65f6$a$\u7684\u503c\u4e3a$j$\uff0c$b$\u7684\u503c\u4e3a$k$\uff0c\u5e76\u4e14\u4e0a\u4e00\u6b21\u64cd\u4f5c\u52a0\u4e0a\u7684\u6570\u662f$t$\u65f6\uff0c\u662f\u5426\u6709\u53ef\u80fd\u3002\n\n\u7136\u800c\u6839\u636e\u9898\u76ee\u7684\u6570\u636e\u8303\u56f4\uff0c\u8981\u5f00\u7684\u6570\u7ec4\u662f\uff1a$dp[1..1000][1..10000][1..10000][1..10]$\uff0c\u663e\u7136\u4e0d\u53ef\u4ee5\u3002\n\n\u6211\u4eec\u6ce8\u610f\u5230\u4e0a\u9762\u7684\u72b6\u6001\u8bbe\u8ba1\u4e2d\u5b58\u5728\u6781\u591a\u7684\u5197\u4f59\u4fe1\u606f\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u5f71\u54cd\u4e0b\u4e00\u6b65\u51b3\u7b56\u7684\u53ea\u6709\uff1a\n\n- **\u4e0a\u4e00\u6b21** \u64cd\u4f5c\u65f6\u52a0\u4e0a\u7684\u6570\uff08\u56e0\u4e3a\u8fd9\u6b21\u5c31\u4e0d\u80fd\u518d\u7528\u4e86\uff09\n- **\u4e0a\u4e00\u6b21** \u64cd\u4f5c\u540e\uff0c\u88ab\u64cd\u4f5c\u6570\u51cf\u53bb\u53e6\u4e00\u4e2a\u6570\u6240\u5f97\u7684\u503c\uff08\u672c\u6b21\u64cd\u4f5c\u52a0\u7684\u6570\u5fc5\u987b\u5927\u4e8e\u8fd9\u4e2a\uff09\n\n\u90a3\u4e48\u53ea\u9700\u5c06\u8fd9\u4e24\u4e2a\u4f5c\u4e3a\u72b6\u6001\u5373\u53ef\u3002\n\n- \u7b2c\u4e00\u7ef4\uff1a$0..n$\uff0c$i$\u8868\u793a\u5728\u7b2c$i$\u6b21 **\u64cd\u4f5c\u540e**\u3002**\u53d6\u503c\u8303\u56f4\u5206\u6790\uff1a** \u7406\u8bba\u4e0a\u9700\u8981$1..n$\uff0c\u800c\u5177\u4f53\u5b9e\u73b0\u65f6\uff0c\u6211\u4eec\u9700\u8981\u589e\u52a0\u4e00\u4e2a$0$\uff0c\u8868\u793a\u672a\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c\u3002\u8fd9\u6837\u53ef\u4ee5\u964d\u4f4e\u7f16\u7a0b\u96be\u5ea6\uff08\u6216\u907f\u514d\u590d\u5236\u7c98\u8d34\u4ee3\u7801\uff09\n- \u7b2c\u4e8c\u7ef4\uff1a$0..10$\uff0c\u672c\u6b21\u64cd\u4f5c\u52a0\u4e0a\u7684\u6570\uff08\u5373\uff0c**\u4e0b\u6b21\u64cd\u4f5c** \u4e0d\u80fd\u518d\u7528\u7684\u6570\uff09\u3002**\u53d6\u503c\u8303\u56f4\u5206\u6790\uff1a** \u52a0\u4e0a\u7684\u6570\u53d6\u503c\u8303\u56f4\u662f$1..10$\uff0c\u800c\u5728\u6ca1\u6709\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c\u65f6\uff0c\u6211\u4eec\u8ba4\u4e3a\u4e0a\u6b21\u52a0\u4e0a\u7684\u6570\u662f$0$\uff0c\u8868\u793a\u6ca1\u6709\u4efb\u4f55\u4e00\u4e2a\u6570\u4e0d\u80fd\u5728\u4e0b\u4e00\u6b21\u4f7f\u7528\u3002\n- \u7b2c\u4e09\u7ef4\uff1a$0..10$\uff0c\u672c\u6b21\u64cd\u4f5c\u540e\uff0c\u88ab\u64cd\u4f5c\u6570\u51cf\u53bb\u53e6\u4e00\u4e2a\u6570\u7684\u503c\uff08\u5047\u5982\u64cd\u4f5c\u7684\u662f$a$\uff0c\u90a3\u4e48\u8fd9\u4e2a\u503c\u5c31\u662f$a-b$\uff0c\u5426\u5219\u662f$b-a$\uff09\u3002**\u4e0b\u4e00\u6b21\u64cd\u4f5c** \u52a0\u4e0a\u7684\u6570\u5fc5\u987b\u5927\u4e8e\u8fd9\u4e2a\u3002**\u53d6\u503c\u8303\u56f4\u5206\u6790\uff1a** \u6bcf\u6b21\u64cd\u4f5c\u540e\uff0c\u8fd9\u4e00\u7ef4\u7684\u53d6\u503c\u8303\u56f4\u4e3a$1..9$\u3002\u7279\u522b\u5730\uff0c\u5982\u679c\u7b2c\u4e00\u6b21\u64cd\u4f5c\u52a0\u4e0a\u7684\u662f$10$\uff0c\u90a3\u4e48\u8fd9\u4e00\u7ef4\u80fd\u53d6\u5230$10$\u3002\u5728\u6ca1\u6709\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c\u65f6\uff0c\u6211\u4eec\u4ee4\u8fd9\u4e00\u7ef4\u4e3a$0$\uff0c\u8868\u793a\u5bf9\u4e0b\u4e00\u6b21\u64cd\u4f5c\u52a0\u4e0a\u7684\u6570\u7684\u6700\u5c0f\u503c\u6ca1\u6709\u9650\u5236\u3002\n\n\u72b6\u6001\u63cf\u8ff0\uff1a$dp[i][cant][gt]$\n\n\u6211\u4eec\u5728$dp$\u6570\u7ec4\u4e2d\u7528`0`\u63cf\u8ff0\u201c\u4e0d\u80fd\u505a\u5230\u201d\uff0c`1`\u63cf\u8ff0\u201c\u53ef\u4ee5\u505a\u5230\u201d\u3002\n\n\u5229\u7528\u8fd9\u79cd\u72b6\u6001\u8bbe\u8ba1\uff0c\u6211\u4eec\u751a\u81f3\u4e0d\u7528\u5173\u5fc3\u672c\u6b21\u64cd\u4f5c\u7684\u662f\u54ea\u4e2a\u6570\u4e86\u3002\n\n### \u521d\u59cb\u5316\n\n\u6ca1\u6709\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c\u7684\u60c5\u51b5\u662f **\u53ef\u80fd\u505a\u5230\u7684**\uff08\u663e\u7136\uff09\u3002\n\n\u6ca1\u6709\u4efb\u4f55\u64cd\u4f5c\u65f6\uff0c\u4ee4$cant = 0$\u8868\u793a\u4e0b\u4e00\u6b21\uff08\u7b2c\u4e00\u6b21\uff09\u6ca1\u6709\u4e0d\u80fd\u53d6\u7684\u503c\uff0c\u4ee4$gt = 0$\u8868\u793a\u5bf9\u4e0b\u4e00\u6b21\u52a0\u7684\u6570\u7684\u6700\u5c0f\u5927\u5c0f\u6ca1\u6709\u9650\u5236\u3002\n\n\u5bf9\u4e8e$i=0$\u7684\u5176\u4ed6\u72b6\u6001\uff0c\u4e0d\u80fd\u505a\u5230\u3002\n\n\u5bf9\u4e8e$i>1$\u7684\u5176\u4ed6\u72b6\u6001\uff0c\u90fd\u662f\u672a\u77e5\u60c5\u51b5\u3002\u7531\u4e8e$dp$\u662f\u57fa\u4e8e\u201c\u6216\u201d\u64cd\u4f5c\u7684\uff08\u5373\uff0c\u80fd\u591f\u8f6c\u79fb\u5230\u5f53\u524d\u72b6\u6001\u7684\u72b6\u6001\u53ea\u8981\u6709\u4e00\u4e2a\u53ef\u80fd\u505a\u5230\uff0c\u5f53\u524d\u72b6\u6001\u5c31\u53ef\u4ee5\u505a\u5230\uff09\uff0c\u56e0\u6b64\u521d\u59cb\u5316\u4e3a$0$\u3002\n\n\u521d\u59cb\u5316\uff1a\n\n$dp[0][0][0] = 0$\n\n\u5176\u4ed6\u60c5\u51b5\u90fd\u662f\u8d4b\u503c\u4e3a$0$\uff0c\u5982\u679c\u5f00\u7684\u662f\u5168\u5c40\u6570\u7ec4\u5219\u4f1a\u81ea\u52a8\u521d\u59cb\u5316\u4e3a0\uff0c\u65e0\u9700\u624b\u52a8\u521d\u59cb\u5316\u3002\n\n### \u72b6\u6001\u8f6c\u79fb\n\n\u6211\u4eec\u7528$has[num]$\u8868\u793a\u4f60\u662f\u5426\u5141\u8bb8\u4f7f\u7528\u6570\u5b57$num$\u3002\n\n\u8003\u8651\u72b6\u6001$dp[i-1][cant][gt]$\uff0c\u90a3\u4e48\u8be5\u72b6\u6001\u53ef\u4ee5\u8f6c\u79fb\u5230$dp[i][num][num-gt]$\uff0c\u5176\u4e2d$num$\u6ee1\u8db3$has[val]\\ \\&\\&\\ num\\neq cant\\ \\&\\&\\ num > gt$\u3002\n\n\u8fd9\u975e\u5e38\u597d\u7406\u89e3\u3002\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u8f6c\u79fb\u5230\u7684\u662f$num-gt$\uff1a\n\n\u5047\u8bbe\u7b2c$i-1$\u64cd\u4f5c\u7684\u6570\u662f$a$\uff0c\u90a3\u4e48$gt = a-b$\u3002\n\n\u7b2c$i$\u6b21\u64cd\u4f5c\u7684\u6570\u5e94\u8be5\u662f$b$\uff0c\u5219\u6709\uff1a\n\n\n$gt_{new}$\n\n$= b_{new} - a_{new}$\n\n$= (b+num)-a$\n\n$= num + (b-a)$\n\n$= num - (a-b)$\n\n$= num - gt$ \n\n### \u8bb0\u5f55\u8def\u5f84\n\n\u666e\u901a\u7684\u52a8\u6001\u89c4\u5212\u662f\u5f88\u5bb9\u6613\u8bb0\u5f55\u8def\u5f84\u7684\u3002\u6211\u4eec\u5728\u66f4\u65b0\u4e00\u4e2a\u72b6\u6001\u65f6\uff0c\u53ef\u4ee5\u987a\u4fbf\u5728\u8fd9\u4e2a\u72b6\u6001\u4e2d\u5b58\u50a8 **\u8f6c\u79fb\u5230\u8fd9\u4e2a\u72b6\u6001\u7684\u524d\u4e00\u4e2a\u72b6\u6001**\u3002\n\n\u6700\u7ec8$dp$\u5b8c\u6210\u65f6\uff0c\u7531\u4e8e\u7b54\u6848\u5e76\u4e0d\u5173\u5fc3\u6700\u540e\u4e00\u6b21\u64cd\u4f5c\u5b8c\u6210\u540e\u7684$cant$\u548c$gt$\u503c\uff0c\u6211\u4eec\u9700\u8981\u5728$dp[n][0..10][0..10]$\u4efb\u610f\u53d6\u51fa\u4e00\u4e2a\u53ef\u4ee5\u505a\u5230\u7684\u503c\uff08\u5373\uff0c$dp[n][0..10][0..10]=1$\uff09\u3002\n\n\u7136\u540e\u6839\u636e\u5b58\u50a8\u7684\u201c\u4e0a\u4e00\u4e2a\u72b6\u6001\u201d\u5411\u524d\u56de\u6eaf\uff0c\u5e76\u91cd\u65b0\u8ba1\u7b97\u51fa\u6bcf\u6b21\u52a0\u4e0a\u7684\u6570\uff0c\u653e\u5165\u4e00\u4e2a\u6570\u7ec4\u3002\n\n\u7531\u4e8e\u6211\u4eec\u5bf9\u4e8e\u4e00\u6b21\u64cd\u4f5c\uff0c\u6709$gt_{new} = num - gt$\uff0c\u53ef\u4ee5\u5f97\u51fa\uff1a\n\n\u5982\u679c$dp[i][cant_{new}][gt_{new}]$\u7531$dp[i-1][cant][gt]$\u8f6c\u79fb\u800c\u6765\uff0c\u90a3\u4e48\u7b2c$i$\u6b21\u64cd\u4f5c\u52a0\u4e0a\u7684\u6570$put_i$\u5c31\u662f$gt_{new} + gt$\n\n\u6700\u540e\u8f93\u51fa\u7b54\u6848\u5373\u53ef\u3002\n\n****\n\n### \u7a0b\u5e8f\u4e0e\u7ec6\u8282\u6ce8\u91ca\n\n```cpp\n// status: [Accepted]\n// oj:     [luogu]\n\n#include<bits/stdc++.h>\nusing namespace std;\n\nint has[11]; // \u662f\u5426\u5141\u8bb8\u4f7f\u7528\u67d0\u4e2a\u6570\nint put[1001]; // \u653e\u5165\u7684\u6570\uff0c\u7528\u4e8e\u6700\u540e\u56de\u6eaf\u5e76\u8f93\u51fa\u7b54\u6848\u7684\u65f6\u5019\nint n; // \u9700\u8981\u64cd\u4f5c\u7684\u6b21\u6570\n\nstruct State {\n    // \u72b6\u6001\n    bool can;\n    // \u6765\u5386\n    int p1;\n    int p2;\n    int p3;\n}dp[1001][11][11];\n//DP\u7ef4\u5ea6\uff1a\n// 1. \u586b\u5145\u957f\u5ea6\n// 2. \u4e0d\u80fd\u586b\u5145\u7684\u6570\u5b57 (0:\u6ca1\u6709\u9650\u5236)\n// 3. \u81f3\u5c11\u586b\u5145\u7684\u6570\u5b57 (0:\u6ca1\u6709\u9650\u5236)\n\nint main() {\n    ios::sync_with_stdio(false);\n\n    for(int i=1;i<=10;i++) {\n        char c;\n        cin>>c;\n        has[i] = c-'0';\n    }\n\n    cin>>n;\n    \n    // \u521d\u59cb\u5316\n    dp[0][0][0].can = 1;\n    // \u679a\u4e3e\u64cd\u4f5c\u6b21\u6570\n    for(int i=1;i<=n;i++) {\n        // \u9488\u5bf9 \u4e0a\u4e00\u4e2a\u72b6\u6001\uff1a\u4e0a\u4e00\u6b21\u52a0\u4e0a\u7684\u6570\n        for(int cant=0;cant<=10;cant++) {\n            // \u9488\u5bf9 \u4e0a\u4e00\u4e2a\u72b6\u6001\uff1a\u4e0a\u4e00\u6b21\u64cd\u4f5c\u540e\uff0c\u64cd\u4f5c\u6570\u51cf\u53bb\u53e6\u4e00\u4e2a\u6570\u7684\u503c\n            for(int gt=0;gt<=10;gt++) {\n                // \u4e0a\u4e00\u4e2a\u72b6\u6001 \u4e0d\u80fd\u505a\u5230\uff0c\u4e0d\u8fdb\u884c\u8f6c\u79fb\u3002\n                if(!dp[i-1][cant][gt].can) continue;\n                // \u679a\u4e3e\u5927\u4e8egt\u7684\u6570\u7528\u6765\u52a0\n                for(int num=gt+1;num<=10;num++) {\n                    // \u548c\u4e0a\u4e00\u6b21\u51b2\u7a81\uff0c\u6216\u672c\u6765\u5c31\u4e0d\u80fd\u53d6\n                    if(!has[num] || num==cant) continue;\n                    // \u6b64\u5904\u4f7f\u7528\u5f15\u7528\u6765\u8868\u793a\u4e0b\u4e00\u6b21\u53ef\u4ee5\u8f6c\u79fb\u5230\u7684\u72b6\u6001\uff0c\u80fd\u591f\u7b80\u5316\u4ee3\u7801\n                    State &ret = dp[i][num][num-gt];\n                    // \u4e0a\u4e00\u4e2a\u72b6\u6001\u6709\u89e3\uff0c\u5f53\u524d\u80af\u5b9a\u6709\u89e3\n                    ret.can = 1;\n                    // \u8bb0\u5f55\u72b6\u6001\u7684\u201c\u6765\u5386\u201d\n                    ret.p1 = i-1;\n                    ret.p2 = cant;\n                    ret.p3 = gt;\n                }\n            }\n        }\n    }\n\n    int c1 = 0, c2 = 0, c3 = 0;\n\n    for(int i=0;i<=10;i++) {\n        for(int j=0;j<=10;j++) {\n            // \u968f\u4fbf\u627e\u4e00\u4e2a\u6709\u89e3\u7684\u72b6\u6001\u3002\n            if(dp[n][i][j].can) {\n                c1 = n;\n                c2 = i;\n                c3 = j;\n                break;\n            }\n        }\n    }\n\n    // \u6709\u89e3\n    if(c1 || c2 || c3) {\n        cout<<\"YES\"<<endl;\n        // \u5411\u524d\u56de\u6eaf\uff0c\u5b58\u50a8\u7b54\u6848\n        while(c1>0) {\n            State &curr = dp[c1][c2][c3];\n            int n1 = curr.p1;\n            int n2 = curr.p2;\n            int n3 = curr.p3;\n            // \u4f9d\u636e\uff1aput[i] = gt_new +gt\n            put[c1] = c3 + n3;\n            // \u5411\u524d\u8df3\u5230\u4e0a\u4e00\u4e2a\u72b6\u6001\n            c1=n1;c2=n2;c3=n3;\n        }\n        // \u8f93\u51fa\u7b54\u6848\n        for(int i=1;i<=n;i++) {\n            if(i>1) cout<<' ';\n            cout<<put[i];\n        }\n        cout<<endl;\n    }\n    // \u65e0\u89e3\n    else {\n        cout<<\"NO\"<<endl;\n    }\n}\n\n```\n\n\u8bc4\u6d4b\u8bb0\u5f55\uff1a[R24108985](https://www.luogu.org/record/24108985)\n",
        "postTime": 1568892257,
        "uid": 49067,
        "name": "\u53f6ID",
        "ccfLevel": 7,
        "title": "\u3010\u6d1b\u8c37\u9898\u89e3\u3011CF339C Xenia and Weights"
    },
    {
        "content": "[\u9898\u9762](https://www.luogu.com.cn/problem/CF339C)\n\n## \u9898\u610f\n\n\u73b0\u5728\u6709\u4e00\u4e2a\u5929\u5e73\uff0c\u4f60\u62e5\u6709\u4e00\u4e9b\u79cd\u7c7b\u7684\u781d\u7801\uff0c\u8fd9\u4e9b\u781d\u7801\u7684\u91cd\u91cf\u5747\u5728 $1 \\sim 10$ \u95f4\u4e14\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u781d\u7801\u4f60\u6709\u65e0\u6570\u591a\u4e2a\u3002\u73b0\u5728\u6309\u7167\u4e24\u4e2a\u8981\u6c42\u4f9d\u6b21\u653e\u7f6e $m$ \u4e2a\u781d\u7801\uff0c\u8981\u6c42\u5982\u4e0b:\n\n1. \u76f8\u90bb\u4e24\u6b21\u653e\u7f6e\u64cd\u4f5c\u4e0d\u80fd\u653e\u7f6e\u76f8\u540c\u7684\u781d\u7801\n2. \u6bcf\u6b21\u653e\u4e0b\u781d\u7801\u540e\u5fc5\u987b\u4fdd\u8bc1\u653e\u4e0b\u781d\u7801\u7684\u8fd9\u4e2a\u76d8\u7684\u603b\u91cd\u91cf\u5927\u4e8e\u53e6\u4e00\u76d8\u3002\n\n\u5176\u4e2d\u7b2c\u4e00\u4e2a\u781d\u7801\u5fc5\u987b\u653e\u5728\u5de6\u76d8\uff0c\u7b2c\u4e8c\u4e2a\u781d\u7801\u5fc5\u987b\u653e\u53f3\u76d8\uff0c\u7b2c\u4e09\u4e2a\u653e\u5de6\u76d8\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\n\n## \u5206\u6790\n\n\u76f4\u63a5dfs\u6240\u6709\u53ef\u80fd\u7684\u65b9\u6848\uff0c\u5c1d\u8bd5\u5c06\u6240\u6709\u4f60\u62e5\u6709\u7684\u781d\u7801\u653e\u5165\u5f53\u524d\u76d8\uff0c\u5e76\u4e14\u6309\u7167\u4e24\u4e2a\u8981\u6c42\u8fdb\u884c\u526a\u679d\u3002\u6709\u4e00\u4e9b\u7ec6\u8282\uff0c\u8be6\u89c1\u4ee3\u7801\u3002\n\n## \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nbool vis[11];\nint record[1005];  //\u7528\u6765\u8bb0\u5f55\u6bcf\u8f6e\u653e\u7f6e\u7684\u781d\u7801\u91cd\u91cf\nint m;\n\n//\u4e94\u9879\u53c2\u6570\u5206\u522b\u8868\u793a\u5f53\u524d\u8f6e\u5230\u653e\u5230\u54ea\u76d8\u3001\u5de6\u76d8\u91cd\u91cf\u3001\u53f3\u76d8\u91cd\u91cf\u3001\u5df2\u653e\u7f6e\u781d\u7801\u6570\u91cf\u3001\u4e0a\u4e00\u6b21\u653e\u7f6e\u7684\u781d\u7801\u91cd\u91cf\nbool dfs(int turn, int left, int right, int times, int front) {\n    if (times)\n        if (turn) {  //\u5982\u679c\u5de6\u53f3\u76d8\u7684\u91cd\u91cf\u5e76\u4e0d\u6ee1\u8db3\u8981\u6c422\n            if (left <= right)\n                return false;\n        } else if (left >= right)\n            return false;\n    if (times == m) {  //\u5982\u679c\u5df2\u653e\u7f6em\u4e2a\u781d\u7801\n        puts(\"YES\");\n        for (int i = 0; i < times; i++)\n            printf(\"%d \", record[i]);\n        puts(\"\");\n        return true;\n    }\n    bool check = false;\n    for (int i = 1; i <= 10; i++)\n        if (vis[i] && i != front) {  //\u5c1d\u8bd5\u6240\u6709\u53ef\u80fd\u653e\u7f6e\u7684\u781d\u7801\uff0c\u653e\u5165\u5f53\u524d\u76d8\n            record[times] = i;\n            if (!turn)\n                check |= dfs(!turn, left + i, right, times + 1, i);\n            else\n                check |= dfs(!turn, left, right + i, times + 1, i);\n            if (check)  //\u4e00\u65e6\u4efb\u610f\u4e00\u79cd\u60c5\u51b5\u6ee1\u8db3\u6761\u4ef6\uff0c\u5219\u76f4\u63a5return\n                return true;\n        }\n    return check;\n}\n\nint main() {\n    int t;\n    scanf(\"%d\", &t);\n    for (int i = 10; i; i--) {  //\u62c6\u5206t\n        vis[i] = t % 10;\n        t /= 10;\n    }\n    scanf(\"%d\", &m);\n    if (!dfs(0, 0, 0, 0, -1))\n        puts(\"NO\");\n    return 0;\n}\n```",
        "postTime": 1597584012,
        "uid": 98482,
        "name": "Macesuted",
        "ccfLevel": 0,
        "title": "CF339C"
    },
    {
        "content": "\u4e00\u4e2a\u8d2a\u5fc3\u65b9\u6cd5\uff0c\u4e0d\u80fd\u8fc7\u5b8c\u4f46\u662f\u53ef\u4ee5\u5f97\u5f88\u591a\u5206(\u5f00\u59cb\u5c31\u662f\u8fd9\u6837\u5199\u7684)\n```cpp\n#include <bits/stdc++.h>\ntypedef long long ll;\nusing namespace std;\nstring aa;\nbool flag[20];\nll lweight,rweight;\nint m;\nvector<int> ans;\nint last = -1;\nint getmin(int low){\n    for(int i=low+1;i<=10;i++)\n        if(flag[i] && i != last) {\n            last = i;\n            return i;\n        }\n    return -1;\n}\nint main(){\n    cin >> aa >> m;\n    memset(flag,0,sizeof flag);\n    for(int i=0;i<aa.size();i++)\n        if(aa[i] == '1') flag[i+1] = true;\n    lweight = 0,rweight = 0;\n    bool cant = false;\n    for(int i=1;i<=m;i++){\n        if(i & 1){\n            //put to left\n            int dt = rweight - lweight;\n            int mincan = getmin(dt);\n            if(mincan == -1){\n                cant = true;\n                break;\n            }\n            lweight += mincan;\n            ans.push_back(mincan);\n        }else{\n            //put to right\n            int dt = lweight - rweight;\n            int mincan = getmin(dt);\n            if(mincan == -1){\n                cant = true;\n                break;\n            }\n            rweight += mincan;\n            ans.push_back(mincan);\n        }\n    }\n    if(cant){\n        cout << \"NO\" << endl;\n        return 0;\n    }else{\n        cout << \"YES\" << endl;\n        for(int i=0;i<ans.size();i++){\n            if(i == 0) cout << ans[i];\n            else cout << \" \" << ans[i];\n        }\n    }\n    return 0;\n} \n```\n\n\u6b63\u89e3\u662f\u5f88\u7b80\u5355\u7684dfs\n\u7eaa\u5f55\u8def\u5f84\u7684\u65f6\u5019\u6709\u4e2a\u65b9\u6cd5\u76f4\u63a5\u5f00\u5168\u5c40\u53d8\u91cf(\u4ee5\u524d\u90fd\u4e0d\u77e5\u9053\u53ef\u4ee5\u8fd9\u6837\uff0c\u7136\u540e\u5c31\u4e0d\u7528dfs\u4f20\u8def\u5f84\u53c2\u6570\u4e0b\u53bb\u4e86)\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nstring aa;\nbool flag[20];\nint ans[1010];\nint m;\nbool can = false;\nbool dfs(int step,char nowdir,int lastWei,int lwei,int rwei){\n\t//cout << \"step:\" << step << \" lwei:\" << lwei << \" rwei:\" << rwei << endl;\n\tif(step == m+1){\n\t\treturn true;\n\t}\n\tif(nowdir == 'R'){\n\t\t//\u653e\u53f3\u8fb9\n\t\tint dt = lwei - rwei;\n\t\tbool cant = true;\n\t\tfor(int i=dt+1;i<=10;i++){\n\t\t\tif(flag[i] && i != lastWei){\n\t\t\t\tcant = false;\n\t\t\t\tans[step] = i;\n\t\t\t\tif(dfs(step+1,'L',i,lwei,rwei+i)) return true;\n\t\t\t}\n\t\t}\n\t\tif(cant) return false;\n\t}else if(nowdir == 'L'){\n\t\t//\u653e\u5de6\u8fb9\n\t\tint dt = rwei - lwei;\n\t\tbool cant = true;\n\t\tfor(int i=dt+1;i<=10;i++){\n\t\t\tif(flag[i] && i != lastWei){\n\t\t\t\tcant = false;\n\t\t\t\tans[step] = i;\n\t\t\t\tif(dfs(step+1,'R',i,lwei+i,rwei)) return true;\n\t\t\t}\n\t\t}\n\t\tif(cant) return false;\n\t}\n}\nint main(){\n\tcin >> aa >> m;\n\tmemset(flag,0,sizeof flag);\n    for(int i=0;i<aa.size();i++)\n        if(aa[i] == '1') flag[i+1] = true;\n    if(dfs(1,'L',-1,0,0)){\n    \tcout << \"YES\" << endl;\n\t\tfor(int i=1;i<=m;i++){\n\t\t\tif(i == 1) cout << ans[i];\n\t\t\telse cout << \" \" << ans[i];\n\t\t}\n\t}else{\n\t\tcout << \"NO\" << endl;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1544860670,
        "uid": 83266,
        "name": "aRenBigFather",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF339C \u3010Xenia and Weights\u3011"
    }
]