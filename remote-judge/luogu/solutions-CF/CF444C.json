[
    {
        "content": "\u5199\u4e00\u7bc7\u8f83\u4e3a\u8be6\u7ec6\u7684\u6807\u51c6\u5206\u5757\u9898\u89e3\u3002\n\n\u9898\u610f\u7ffb\u8bd1\u5199\u7684\u5f88\u8be6\u7ec6\u6e05\u695a\u4e86\uff0c\u6545\u5728\u6b64\u4e0d\u518d\u91cd\u590d\u3002\n\n\n### \u7b97\u6cd5\u5b9e\u73b0\uff1a\n\n\u9996\u5148\uff0c\u5bf9\u4e8e\u533a\u95f4\u4fee\u6539\u64cd\u4f5c\uff0c\u96f6\u6563\u5757\u76f4\u63a5\u66b4\u529b\u91cd\u6784\uff0c\u7ef4\u62a4\u5355\u70b9\u989c\u8272\u60c5\u51b5\u548c\u5355\u70b9\u6743\u503c\uff0c\u5e76\u5bf9\u4e8e\u8fd9\u4e00\u5757\u7684\u6574\u5757\u6743\u503c\u8fdb\u884c\u4fee\u6539\uff0c\u4fdd\u8bc1\u6574\u5757\u6743\u503c\u662f\u5bf9\u7684\uff0c\u91cd\u6784\u4e4b\u540e\u628a\u6574\u5757\u4fee\u6539\u6807\u8bb0\u53bb\u6389\u3002\n\n\u5bf9\u4e8e\u6574\u5757\u7684\u64cd\u4f5c\uff0c\u6211\u4eec\u5206\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\uff1a\n\n\u4e00\uff1a\u6574\u5757\u662f\u540c\u4e00\u989c\u8272\uff0c\u5373\u6709\u6574\u5757\u4fee\u6539\u6807\u8bb0\u7684\u5757\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8ba1\u7b97\u8fd9\u4e00\u6574\u5757\u4fee\u6539\u540e\u7684\u6743\u503c\uff0c\u7136\u540e\u8bb0\u5f55\u5355\u70b9\u6743\u503c\u7684\u4fee\u6b63\u91cf\uff0c\u4e4b\u540e\u66f4\u65b0\u6574\u5757\u4fee\u6539\u6807\u8bb0\u3002\n\n\u4e8c\uff1a\u6574\u5757\u4e0d\u662f\u540c\u4e00\u989c\u8272\uff0c\u6211\u4eec\u628a\u5176\u770b\u6210\u96f6\u6563\u5757\u8fdb\u884c\u66b4\u529b\u91cd\u6784\uff0c\u7136\u540e\u628a\u6574\u5757\u4fee\u6539\u6807\u8bb0\u66f4\u65b0\u3002\n\n\u7136\u540e\uff0c\u5bf9\u4e8e\u533a\u95f4\u8be2\u95ee\u64cd\u4f5c\uff1a\n\n\u5bf9\u4e8e\u96f6\u6563\u5757\uff1a\u7d2f\u52a0\u96f6\u6563\u5757\u4e2d\u6bcf\u4e2a\u70b9\u7684\u5355\u70b9\u6743\u503c\u4e0e\u6574\u5757\u7684\u5355\u70b9\u6743\u503c\u4fee\u6b63\u91cf\u4e4b\u548c\u3002\n\n\u5bf9\u4e8e\u6574\u5757\uff1a\u76f4\u63a5\u7d2f\u52a0\u6574\u5757\u6743\u503c\u3002\n\n\u7136\u540e\u5c31\u7ed3\u675f\u4e86\u3002\n\n### \u590d\u6742\u5ea6\u5206\u6790\uff1a\n\n\u8bbe $ \\sqrt{n} $ \u4e3a\u5757\u957f\u3002\n\n\u6bcf\u6b21\u8be2\u95ee\u7684\u590d\u6742\u5ea6\u663e\u7136\u662f  $ O( \\sqrt{n} ) $ \u3002\n\n\u770b\u4e0a\u53bb\u597d\u50cf\u6574\u5757\u4fee\u6539\u7684\u64cd\u4f5c\u590d\u6742\u5ea6\u4e0d\u592a\u5bf9\uff1f\u6bcf\u4e00\u5757\u7684\u590d\u6742\u5ea6\u4f1a\u8fbe\u5230 $ O( \\sqrt{n} ) $ \uff0c\n\u90a3\u4e48\u533a\u95f4\u4fee\u6539\u6700\u574f\u4f1a\u8fbe\u5230  $ O(n) $ \uff1f\n\n\u5176\u5b9e\u6211\u4eec\u4fee\u6539\u5b8c\u4e00\u6574\u5757\u4e4b\u540e\uff0c\u4f1a\u6253\u4e0a\u6807\u8bb0\uff0c\u4e4b\u540e\u5c31\u662f  $ O(1) $ \u7684\u4e86\uff0c\u800c\u8ba9\u6807\u8bb0\u88ab\u53bb\u9664\u7684\u5757\u53ea\u6709\u5728\u533a\u95f4\u4fee\u6539\u96f6\u6563\u5757\u65f6\u624d\u4f1a\u4ea7\u751f\uff0c\u6240\u4ee5\u81f3\u591a\u53ea\u6709 $ O(m) $ \u4e2a\uff0c\u56e0\u6b64\u6700\u7ec8\u590d\u6742\u5ea6\u4e3a $ O(m\\sqrt{n}) $ \u3002\n\n### code\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n# define int long long\nconst int N = 1e5+7;\ninline int rd(){\n\tchar c=getchar();int sum=0,f=1;\n\twhile(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n\twhile(c<='9'&&c>='0'){sum=(sum<<3)+(sum<<1)+(c^48);c=getchar();}\n\treturn sum*f;\n}\nint n,m,len;\nint L[N],R[N],id[N],sum[N],col[N],tag[N],val[N],b[N];\n//sum\uff1b\u6574\u5757\u6743\u503c\u548c\n//tag\uff1a\u6574\u5757\u989c\u8272\n//val\uff1a\u5355\u70b9\u6743\u503c\n//b:   \u6574\u5757\u6743\u503c\u4fee\u6b63  \nvoid build(int l,int r,int x){\t\t//\u66b4\u529b\u91cd\u6784\u6574\u5757 \n\tint sid=id[l];\n\tif(tag[sid])\n\t\tfor(int i=L[sid];i<=R[sid];++i)\n\t\t\tif(i>=l&&i<=r)\n\t\t\t\tsum[sid]+=abs(tag[sid]-x),\n\t\t\t\tval[i]+=abs(tag[sid]-x),col[i]=x;\n\t\t\telse col[i]=tag[sid];\n\telse\n\t\tfor(int i=l;i<=r;++i)\t\n\t\t\tsum[sid]+=abs(col[i]-x),\n\t\t\tval[i]+=abs(col[i]-x),col[i]=x;\n\ttag[sid]=0;return;\n}\nvoid change(int l,int r,int x){\t\t\n\tint sid=id[l],eid=id[r];\n\tif(sid==eid){\n\t\tbuild(l,r,x);\n\t\treturn;\n\t}\n\tbuild(l,R[sid],x);build(L[eid],r,x);\n\tfor(int i=sid+1;i<eid;++i)\n\t\tif(tag[i])\n\t\t\tb[i]+=abs(tag[i]-x),\n\t\t\tsum[i]+=abs(tag[i]-x)*(R[i]-L[i]+1),tag[i]=x;\n\t\telse {\n\t\t\tbuild(L[i],R[i],x);\n\t\t\ttag[i]=x;\n\t\t}\n\treturn;\n}\nint query(int l,int r){\n\tint sid=id[l],eid=id[r],ans=0;\n\tif(sid==eid){\n\t\tfor(int i=l;i<=r;++i)\n\t\t\tans+=val[i]+b[sid];\n\t\treturn ans;\n\t}\n\tfor(int i=l;i<=R[sid];++i)ans+=val[i]+b[sid];\n\tfor(int i=L[eid];i<=r;++i)ans+=val[i]+b[eid];\n\tfor(int i=sid+1;i<eid;++i)ans+=sum[i];\n\treturn ans;\n}\nsigned main(){\n\tint op,l,r,x;\n\tn=rd();m=rd();\n\tlen=pow(n,0.5);\n\tfor(int i=1;i<=n;++i){\n\t\tcol[i]=i;\n\t\tid[i]=(i-1)/len+1;\n\t}\n\tfor(int i=1;i<=id[n];++i)\n\t\tL[i]=(i-1)*len+1,R[i]=i*len;\n\tR[id[n]]=n;\n\twhile(m--){\n\t\top=rd();l=rd();r=rd();\n\t\tif(op==1){\n\t\t\tx=rd();\n\t\t\tchange(l,r,x);\n\t\t}else{\n\t\t\tprintf(\"%lld\\n\",query(l,r));\n\t\t}\n\t} \n\treturn 0;\n}\n```\n\n",
        "postTime": 1647487927,
        "uid": 211086,
        "name": "bsTiat",
        "ccfLevel": 0,
        "title": "CF444C DZY Loves Colors \u9898\u89e3"
    },
    {
        "content": "\u8fd9\u9898\u7ebf\u6bb5\u6811\u3001\u73c2\u6735\u8389\u6811\u7684\u9898\u89e3\u90fd\u6709\u4e86\uff0c\u6211\u6765\u4e2a\u5206\u5757\u5427/cy\n\n\u5206\u5757\u7ef4\u62a4\u6bcf\u4e00\u4e2a\u5757\u5185\u7684\u72b6\u51b5\uff0c\u5982\u679c\u9047\u5230\u6574\u5757\u6d82\u8272\u5219\u6253\u4e0a\u6807\u8bb0\uff0c\u53ef\u4ee5\u5c06\u65f6\u95f4\u590d\u6742\u5ea6\u4fdd\u6301\u5728$O(n\\sqrt{n})$\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define mp make_pair\nusing namespace std;\nconst int mxn=1e5+5;\nll n,m,sn,a[mxn],b[mxn],ta[444],sb[444],tb[444],ans,th,tl,tr;\nint main(){\n\tios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0);\n\tcin>>n>>m,sn=sqrt(n);\n\tfor(int i=0;i<n;++i)a[i]=i+1;   //\u521d\u59cb\u72b6\u51b5\n\tfor(;m--;){\n\t\tint tmp,l,r;cin>>tmp>>l>>r,--l,--r;\n\t\tif(tmp==1){\n\t\t\tint x;cin>>x;\n\t\t\tfor(int i=l;i<=r;){   //\u5206\u5757\u5904\u7406\n\t\t\t\tth=i/sn,tl=th*sn,tr=min(tl+sn,n);\n\t\t\t\tif(i==tl and r>=tr-1){\n\t\t\t\t\tif(ta[th])tb[th]+=abs(ta[th]-x),sb[th]+=abs(ta[th]-x)*(tr-tl);    //\u53ef\u4ee5\u6574\u4f53\u8986\u76d6\n\t\t\t\t\telse for(int i2=tl;i2<tr;++i2)b[i2]+=abs(a[i2]-x),sb[th]+=abs(a[i2]-x);  //\u4e00\u4e2a\u4e00\u4e2a\u6765\n\t\t\t\t\tta[th]=x,i=tr;\n\t\t\t\t}else{\n\t\t\t\t\tif(ta[th]){\n\t\t\t\t\t\tfor(int i2=tl;i2<tr;++i2)a[i2]=ta[th];\n\t\t\t\t\t\tta[th]=0;\n\t\t\t\t\t}\n\t\t\t\t\tb[i]+=abs(a[i]-x),sb[th]+=abs(a[i]-x),a[i]=x,++i;\n\t\t\t\t}\n\t\t\t}\n\t\t}else{\n\t\t\tans=0;\n\t\t\tfor(int i=l;i<=r;){  //\u5206\u5757\u6c42\u548c\n\t\t\t\ttl=i/sn*sn,tr=min(tl+sn,n),th=i/sn;\n\t\t\t\tif(i==tl and r>=tr-1)ans+=sb[th],i=tr;\n\t\t\t\telse ans+=tb[th]+b[i],++i;\n\t\t\t}\n\t\t\tcout<<ans<<endl;\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1585563531,
        "uid": 226760,
        "name": "RedLycoris",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF444C \u3010DZY Loves Colors\u3011"
    },
    {
        "content": "\u6211\u4eec\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u8fd9\u4e00\u6bb5\u7684\u7b54\u6848\u548c\u8fd9\u6bb5\u989c\u8272\u662f\u5426\u4e00\u6837\uff0c\u5982\u679c\u4e00\u6837\u662f\u4ec0\u4e48\u989c\u8272\n\n\u6bcf\u6b21\u6211\u4eec\u4fee\u6539\u65f6\u5019\u5bf9\u76f8\u540c\u7684\u989c\u8272\u6bb5\u4fee\u6539\uff0c\u4e0d\u76f8\u540c\u7684\u989c\u8272\u6bb5\u9012\u5f52\u66b4\u529b\u4fee\u6539\n\n\u5bf9\u4e8e\u4e00\u6b21\u533a\u95f4\u8986\u76d6\uff0c\u53ea\u4f1a\u4ea7\u751f\u4e24\u4e2a\u65b0\u7684\u7aef\u70b9\uff0c\u6240\u4ee5\u53ea\u4f1a\u66b4\u529b$O(n+2m)$\u6b21\n\n\u590d\u6742\u5ea6$O(mlogn)$\n\n**Code**\n``` cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#define N 100000\n#define zrt k << 1\n#define yrt k << 1 | 1\nusing namespace std;\nint n,m;\nstruct node\n{\n    int tag,c;\n    long long su,at;\n    node ()\n    {\n        at = su = c = tag = 0;\n    }\n};\nint myabs(int x)\n{\n    if (x > 0)\n        return x;\n    return -x;\n}\nstruct Seg\n{\n    node s[N * 4 + 5];\n    node upd(node x,node y)\n    {\n        node k;\n        if (x.c == y.c)\n            k.c = x.c;\n        k.su = x.su + y.su;\n        return k;\n    }\n    void build(int k,int l,int r)\n    {\n        if (l == r)\n        {\n            s[k].c = l;\n            s[k].su = 0LL;\n            return;\n        }\n        int mid = l + r >> 1;\n        build(zrt,l,mid);\n        build(yrt,mid + 1,r);\n        s[k] = upd(s[zrt],s[yrt]);\n    }\n    void pushdown(int k,int l,int r,int mid)\n    {\n        if (!s[k].tag && !s[k].at)\n            return;\n        if (s[k].tag)\n        {\n            s[zrt].c = s[k].tag;\n            s[yrt].c = s[k].tag;\n            s[zrt].tag = s[k].tag;\n            s[yrt].tag = s[k].tag;\n        }\n        if (s[k].at)\n        {\n            s[zrt].su += (long long)(mid - l + 1) * s[k].at;\n            s[yrt].su += (long long)(r - mid) * s[k].at;\n            s[zrt].su += s[k].at;\n            s[yrt].su += s[k].at;\n        }\n        s[k].tag = s[k].at = 0;\n    }\n    void change(int k,int l,int r,int x,int y,int z)\n    {\n        if (l >= x && r <= y && s[k].c)\n        {\n            s[k].su += (long long)myabs(z - s[k].c) * (long long)(r - l + 1);\n            s[k].c = z;\n            s[k].tag = z;\n            s[k].at += (long long)myabs(z - s[k].c);\n            return;\n        }\n        int mid = l + r >> 1;\n        pushdown(k,l,r,mid);\n        if (x > mid)\n            change(yrt,mid + 1,r,x,y,z);\n        else\n            if (y <= mid)\n                change(zrt,l,mid,x,y,z);\n            else\n                change(zrt,l,mid,x,y,z),change(yrt,mid + 1,r,x,y,z);\n        s[k] = upd(s[zrt],s[yrt]);\n    }\n    node query(int k,int l,int r,int x,int y)\n    {\n        if (l >= x && r <= y)\n            return s[k];\n        int mid = l + r >> 1;\n        pushdown(k,l,r,mid);\n        if (x > mid)\n            return query(yrt,mid + 1,r,x,y);\n        else\n            if (y <= mid)\n                return query(zrt,l,mid,x,y);\n            else\n                return upd(query(zrt,l,mid,x,y),query(yrt,mid + 1,r,x,y));\n    }\n}tree;\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    tree.build(1,1,n);\n    int opt,l,r,z;\n    for (int i = 1;i <= m;i++)\n    {\n        scanf(\"%d%d%d\",&opt,&l,&r);\n        if (opt == 1)\n        {\n            scanf(\"%d\",&z);\n            tree.change(1,1,n,l,r,z);\n        }\n        else\n            printf(\"%lld\\n\",tree.query(1,1,n,l,r).su);\n    }\n    return 0;\n}\n```",
        "postTime": 1565859861,
        "uid": 73231,
        "name": "eee_hoho",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF444C \u3010DZY Loves Colors\u3011"
    },
    {
        "content": "## \u601d\u8def\uff1a\n\n\u8fd9\u662f\u4e00\u4e2a**\u533a\u95f4\u8986\u76d6**\u7684\u9898\uff0c~~\u4e0d\u7ecf\u8fc7\u601d\u8003~~\u5c31\u60f3\u5230\u4e86$Old\\ Driver\\ Tree$\uff0c\u7136\u540e\u914d\u5408\u7740**\u7ebf\u6bb5\u6811**\uff0c\u5c31\u7528\u6570\u636e\u7ed3\u6784\u8fc7\u53bb\u4e86qaq\n\n#### \u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790\n\n~~O(\u7384\u5b66)~~ \u6700\u574f\u7684\u67e5\u8be2\u662f$log$\u7ea7\u7684\uff0c\u663e\u7136\u4e0d\u662f\u5f71\u54cd\u65f6\u95f4\u590d\u6742\u5ea6\u5173\u952e\uff0c\u5047\u8bbe\u6240\u6709\u90fd\u662f\u4fee\u6539\u64cd\u4f5c\uff0c\u4fee\u6539\u7edd\u5927\u591a\u6570\u7684\u65f6\u5019\u90fd\u662f\u4f7f\u539f\u672c$n$\u4e2a\u70b9\u53d8\u5c11\u7684\uff0c\u6700\u574f\u7684\u60c5\u51b5\u5e94\u8be5\u662f\u628a\u540c\u4e00\u4e2a\u533a\u95f4\u5206\u88c2\u6210\u4e09\u4e2a\u4e0d\u540c\u7684\u533a\u95f4\uff0c\u4e5f\u5c31\u662f\u6bcf\u6b21\u628a\u4e09\u4e2a\u8fde\u5728\u4e00\u8d77\uff0c\u518d\u628a\u4e00\u4e2a\u533a\u95f4\u5206\u5f00\u4e09\u4e2a\uff0c\u4f3c\u4e4e\u590d\u6742\u5ea6\u4e5f\u4e0d\u4f1a\u5f88\u9ad8\uff0c\u6700\u591a\u4e09\u500d\uff0c\u52a0\u4e0a$lower\\_bound$\u7684$log$\u548c\u7ebf\u6bb5\u6811\u7684$log$\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(\u80fd\u8fc7)$\uff0c~~\u7ed3\u675f\uff0ccheer~~\n\nCode\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define It set<node>::iterator \n#define N 100010\n#define ll long long\nusing namespace std;\nstruct node{//\u7528\u4e8eODT\n\tint l,r;\n\tmutable int val;\n\tnode(int a,int b=-1,int c=0):l(a),r(b),val(c){\t}\n\tnode(){\t}\n\tbool operator< (const node x) const{\n\t\treturn l<x.l;\n\t}\n};\nint n,T,L,R,val,y;\nll f[N<<2],tag[N<<2],ans;//\u7ebf\u6bb5\u6811\uff0c\u522b\u5fd8\u4e86\u5f00ll\nset<node>s;\nIt Itl,Itr,it;//\u8fed\u4ee3\u5668\ninline int read(){\n\tregister int s=0;\n\tregister char c=getchar();\n\twhile(!isdigit(c)) c=getchar();\n\twhile(isdigit(c))\n\t{\n\t\ts=(s<<1)+(s<<3)+c-'0';\n\t\tc=getchar();\n\t}\n\treturn s;\n}\nIt Split(int pos)//\u5206\u79bb\n{\n\tit=s.lower_bound(node(pos));\n\tif(it!=s.end() && it->l ==pos) return it;\n\t--it;\n\tint l=it->l,r=it->r,val=it->val;\n\ts.erase(it);\n\ts.insert(node(l,pos-1,val));\n\treturn s.insert(node(pos,r,val)).first;//\u8fd4\u56de\u7684\u662fpair\u7c7b\u578b\uff0c\u7b2c\u4e00\u6bb5\u5173\u952e\u5b57\u662f\u63d2\u5165\u4f4d\u7f6e\u7684\u8fed\u4ee3\u5668\n}\nvoid push(int k,int l,int r)\n{\n\tf[k]+=tag[k]*(r-l+1);\n\tif(l!=r)\n\t{\n\t\tint cur=k<<1;\n\t\ttag[cur]+=tag[k];\n\t\ttag[cur|1]+=tag[k];\n\t}\n\ttag[k]=0;\n}\nvoid Modify(int k,int l,int r)\n{\n\tif(tag[k]) push(k,l,r);\n\tif(r<L||R<l) return;\n\tif(L<=l&&r<=R)\n\t{\n\t\ttag[k]=y;\n\t\tpush(k,l,r);\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1,cur=k<<1;\n\tModify(cur,l,mid);\n\tModify(cur|1,mid+1,r);\n\tf[k]=f[cur]+f[cur|1];\n}\nvoid Cov(int l,int r)\n{\n\tItr=Split(r+1);it=Itl=Split(l);\n\tfor(;it!=Itr;++it)\n\t{\n\t\tL=it->l;R=it->r;y=abs(val- it->val);\n\t\tModify(1,1,n);\n\t}\n\ts.erase(Itl,Itr);\n\ts.insert(node(l,r,val));//\u8bb0\u5f97\u8fd9\u91cc\u8981\u91cd\u65b0\u63d2\u5165\u8fc7\n}\nvoid Query(int k,int l,int r)\n{\n\tif(tag[k]) push(k,l,r);\n\tif(r<L||R<l) return;\n\tif(L<=l&&r<=R){ans+=f[k];return;}\n\tint mid=(l+r)>>1,cur=k<<1;\n\tQuery(cur,l,mid);\n\tQuery(cur|1,mid+1,r);\n}\nint main()\n{\n\tint i;\n\tn=read();T=read();\n\tfor(i=1;i<=n;i++)\n\t\ts.insert(node(i,i,i));\n\twhile(T--)\n\t{\n\t\tif(read()==1)\n\t\t{\n\t\t\tL=read(),R=read(),val=read();\n\t\t\tCov(L,R);\n\t\t}\n\t\telse\n\t\t\tans=0,L=read(),R=read(),Query(1,1,n),printf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1553348138,
        "uid": 83564,
        "name": "hovny",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF444C \u3010DZY Loves Colors\u3011"
    },
    {
        "content": "## Solution \n\n\u53d1\u73b0\u6709\u533a\u95f4\u63a8\u5e73\uff0c\u533a\u95f4\u6c42\u548c\u3002\n\n\u533a\u95f4\u63a8\u5e73\u5f88\u5bb9\u6613\u60f3\u5230\u73c2\u6735\u8389\u6811\u3002\n\n\u8003\u8651\u7528\u73c2\u6735\u8389\u6811\u6765\u7ef4\u62a4\u989c\u8272\uff0c\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u6743\u503c\u3002\n\n\u56e0\u4e3a\u5728\u6bcf\u4e2a\u73c2\u6735\u8389\u6811\u8282\u70b9\u7ef4\u62a4\u7684\u533a\u95f4\u91cc\uff0c\u52a0\u7684\u6743\u503c\u4e0e\u533a\u95f4\u7684\u989c\u8272\u6709\u5173\u3002\n\n\u6240\u4ee5\u8981\u5bf9\u6bcf\u4e2a set \u4e2d\u7684\u8282\u70b9\u53bb\u7528\u7ebf\u6bb5\u6811\u64cd\u4f5c\u3002\n\n\u5c31\u662f\u5728\u73c2\u6735\u8389\u6811\u7684\u8986\u76d6\u64cd\u4f5c\u4e2d\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u52a0\u5b8c\u518d\u6e05\u9664\u8282\u70b9\u3002\n\n```cpp\n/**\n *\tauthor: TLE_Automation\n *\tcreater: 2022.7.21\n**/\n#include<set>\n#include<cmath>\n#include<queue>\n#include<cstdio>\n#include<bitset>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define gc getchar \nusing namespace std;\ntypedef long long ll;\n#define int long long\nconst int N = 1e6 + 10;\nconst int MAXN = 2e5 + 10;\nconst int mod = 1e9 + 7;\nconst int INF = 0x3f3f3f3f;\nconst ll inf = 0x3f3f3f3f3f3f3f3f;\ninline int gcd(int a, int b) {return !b ? a : gcd(b, a % b);}\ninline void print(int x) {if (x < 0) putchar('-'), x = -x; if(x > 9) print(x / 10); putchar(x % 10 + '0');}\ninline int ksm(int a, int b) {int base = a % mod, res = 1; while(b){if(b & 1) res = (res * base) % mod; base = (base * base) % mod, b >>= 1;}return res % mod;}\ninline int mul(int a, int b) {int base = a % mod, res = 0; while(b){if(b & 1) res = (res + base) % mod; base = (base + base) % mod, b >>= 1;}return res % mod;}\ninline char readchar() {static char buf[100000], *p1 = buf, *p2 = buf; return p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 100000, stdin), p1 == p2) ? EOF : *p1++;}\ninline int read() { int res = 0, f = 0; char ch = gc();for (; !isdigit(ch); ch = gc()) f |= (ch == '-'); for (; isdigit(ch); ch = gc()) res = (res << 1) + (res << 3) + (ch ^ '0'); return f ? -res : res;}\n\nnamespace Seg {\n\t#define lson rt << 1 \n\t#define rson rt << 1 | 1\n\tstruct node {int l, r, sum, lazy; } tree[N << 1];\n\tvoid build(int rt, int l, int r) {\n\t\ttree[rt].l = l, tree[rt].r = r;\n\t\tif(l == r) return; int mid = (l + r) >> 1;\n\t\tbuild(lson, l, mid), build(rson, mid + 1, r);\n\t}\n\tvoid pushdown(int rt) {\n\t\ttree[lson].lazy += tree[rt].lazy, tree[rson].lazy += tree[rt].lazy;\n\t\ttree[lson].sum += tree[rt].lazy * (tree[lson].r - tree[lson].l + 1);\n\t\ttree[rson].sum += tree[rt].lazy * (tree[rson].r - tree[rson].l + 1);\n\t\ttree[rt].lazy = 0;\n\t}\n\tvoid change(int rt, int l, int r, int k) {\n\t\tif(tree[rt].l > r || tree[rt].r < l) return;\n\t\tif(tree[rt].l >= l && tree[rt].r <= r) {\n\t\t\ttree[rt].lazy += k, tree[rt].sum += k * (tree[rt].r - tree[rt].l + 1);\n\t\t\treturn;\n\t\t} pushdown(rt), change(lson, l, r, k), change(rson, l, r, k);\n\t\ttree[rt].sum = tree[lson].sum + tree[rson].sum;\n\t}\n\tint Query(int rt, int l, int r) {\n\t\tif(tree[rt].l > r || tree[rt].r < l ) return 0;\n\t\tif(tree[rt].l >= l && tree[rt].r <= r) return tree[rt].sum;\n\t\tpushdown(rt); return Query(lson, l, r) + Query(rson, l, r); \n\t}\n}\nusing namespace Seg;\n\nnamespace Chollthy_Tree {\n\t#define It set<Node>::iterator\n\tstruct Node {\n\t\tint l, r; mutable int v;\n\t\tNode(int L, int R = -1, int V = 0) : l(L), r(R), v(V) {}\n\t\tbool operator < (const Node &x) const {return l < x.l; }\n\t};\n\tset<Node> s;\n\tIt Split(int pos) {\n\t\tIt it = s.lower_bound(Node(pos));\n\t\tif(it != s.end() && it -> l == pos) return it;\n\t\t--it;\n\t\tint L = it -> l , R = it -> r, V = it -> v;\n\t\ts.erase(it);\n\t\ts.insert(Node(L, pos - 1, V));\n\t\treturn s.insert(Node(pos, R, V)).first;\n\t}\n\tvoid Cover(int l, int r, int val) {\n\t\tIt itr = Split(r + 1), itl = Split(l);\n\t\tfor(; itl != itr; ) {\n\t\t\tchange(1, itl -> l, itl -> r, abs(itl -> v - val));\n\t\t\titl = s.erase(itl);\n\t\t}\n\t\ts.insert(Node (l, r, val));\t\n\t}\n}\n\nusing namespace Chollthy_Tree;\n\nsigned main() \n{\n\tint n = read(), Q = read();\n\tfor(int i = 1; i <= n; i++) s.insert(Node (i, i, i));\n\tbuild(1, 1, n);\n\tfor(int i = 1; i <= Q; i++) {\n\t\tint opt = read(), x = read(), y = read();\n\t\tif(opt & 1) {\n\t\t\tint val = read();\n\t\t\tCover(x, y, val);\n\t\t}\n\t\telse printf(\"%lld\\n\", Query(1, x, y));\n \t}\n}\n```",
        "postTime": 1658493483,
        "uid": 396974,
        "name": "Buried_Dream",
        "ccfLevel": 4,
        "title": "CF444C DZY Loves Colors \u9898\u89e3"
    },
    {
        "content": "## \u9898\u76ee\u63cf\u8ff0\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://codeforces.com/problemset/problem/444/C)\n\n## \u5206\u6790\n\n\u770b\u5230\u533a\u95f4\u63a8\u5e73\u64cd\u4f5c\uff0c\u53ef\u4ee5\u5199\u73c2\u6735\u8389\u6811\u3002\n\n\u4f7f\u7528\u73c2\u6735\u8389\u6811\u7ef4\u62a4\u533a\u95f4\u7684\u989c\u8272\uff0c\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u533a\u95f4\u548c\u3002\n\n\u8fd9\u9053\u9898\u7684\u96be\u70b9\u5728\u4e8e\u52a0\u4e0a\u7684\u6570\u5b57\u662f $|y - x|$ \uff0c\u6240\u4ee5\u6211\u4eec\u8981\u5728\u63a8\u5e73\u64cd\u4f5c\u91cc\u7a0d\u52a0\u6539\u52a8\u3002\n\n\u4e0d\u4f7f\u7528 `std::set` \u7684\u533a\u95f4 `erase` \u64cd\u4f5c\uff0c\u800c\u662f\u548c\u5176\u4ed6\u7684\u64cd\u4f5c\u4e00\u6837\u66b4\u529b\u63a8\u5e73\uff0c\u5bf9\u76f8\u540c\u7684\u989c\u8272\u505a\u533a\u95f4\u52a0\u64cd\u4f5c\u5373\u53ef\u3002\n\n\u8fd8\u662f\u633a\u597d\u5199\u7684\uff0c~~\u4f46\u662f\u73c2\u6735\u8389\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u4e0d\u7406\u4f60\u4e86~~\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define int long long\n\nconst int MAXN = 1e5 + 10;\n\nint C1[MAXN] , C2[MAXN] , N , M;\n\nint LowBit(int x) {\n\treturn x & -x;\n}\n\nvoid Add(int x , int d) {\n\tint k = x;\n\twhile(x <= N) {\n\t\tC1[x] += d;\n\t\tC2[x] += d * k;\n\t\tx += LowBit(x);\n\t}\n}\n\nint GetSum(int x) {\n\tint res = 0;\n\tint d = x;\n\twhile(x) {\n\t\tres += C1[x] * (d + 1) - C2[x];\n\t\tx -= LowBit(x);\n\t}\n\treturn res;\n}\n\nstruct Node {\n\tint l , r;\n\tmutable int Val;\n\tNode(const int &il , const int &ir , const int &iv) : l(il) , r(ir) , Val(iv) { }\n\tconst bool operator < (const Node &o) const { \n        return l < o.l; \n    }\n};\n\nset<Node> ODT;\n\ntypedef set<Node>::iterator sit;\n\nsit Split(int Pos) {\n\tsit it = ODT.lower_bound(Node(Pos , 0 , 0));\n\tif(it != ODT.end() && it -> l == Pos) return it;\n\tit--;\n\tint l = it -> l;\n\tint r = it -> r;\n\tint v = it -> Val;\n\tODT.erase(it);\n\tODT.insert(Node(l , Pos - 1 , v));\n\treturn ODT.insert(Node(Pos , r , v)).first;\n}\n\nvoid Assign(int l , int r , int v) {\n    sit itr = Split(r + 1);\n    sit itl = Split(l);\n    sit itll = itl; \n    while(itl != itr) {\n    \tAdd(itl -> l, abs(itl -> Val - v));\n        Add(itl -> r + 1, -abs(itl -> Val - v));\n\t\titl = ODT.erase(itl);\n\t}\n    ODT.insert(Node(l , r , v));\n}\n\n\nsigned main() {\n\tscanf(\"%lld%lld\" ,&N ,&M);\n\tfor(int i = 1; i <= N; i++) ODT.insert(Node(i , i , i));\n\twhile(M--) {\n\t\tint op , l , r , v;\n\t\tscanf(\"%lld%lld%lld\" ,&op ,&l ,&r);\n\t\tif(op == 1) {\n\t\t\tscanf(\"%lld\" ,&v);\n\t\t\tAssign(l , r , v);\n\t\t}\n\t\telse {\n\t\t\tprintf(\"%lld\\n\" ,GetSum(r) - GetSum(l - 1));\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1647086774,
        "uid": 461426,
        "name": "CmsMartin",
        "ccfLevel": 6,
        "title": "CF444C DZY Loves Colors"
    },
    {
        "content": "# Preface\n\n\u989c\u8272\u6bb5\u5747\u644a\u6c34\u9898\u3002\n\n# Description\n\n\u6709\u4e00\u4e2a\u957f\u4e3a $n$ \u7684\u5e8f\u5217\uff0c\u6bcf\u4e2a\u5143\u7d20\u6709\u989c\u8272 $c_i$ \u548c\u6743\u503c $w_i$\u3002$c_i$ \u521d\u59cb\u4e3a $i$\uff0c$w_i$ \u521d\u59cb\u4e3a $0$\u3002\n\n$m$ \u6b21\u64cd\u4f5c\uff1a\n\n1. \u533a\u95f4\u67d3\u8272\u4e3a $x$\uff0c\u540c\u65f6\u533a\u95f4\u4e2d\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u6743\u503c\u589e\u52a0\u65b0\u989c\u8272\u4e0e\u65e7\u989c\u8272\u5dee\u7684\u7edd\u5bf9\u503c\u3002\n\n1. \u67e5\u8be2\u533a\u95f4\u548c\u3002\n\n$1\\le n,m\\le 10^5$\uff0c$1\\le x\\le 10^8$\u3002\n \n# Solution\n\n## How\uff1f\n\n\u770b\u5230\u6709\u533a\u95f4\u67d3\u8272\u7684\u64cd\u4f5c\uff0c\u60f3\u5230\u73c2\u6735\u8389\u6811\u3001\u5206\u5757\u3001\u52bf\u80fd\u7ebf\u6bb5\u6811\uff0c\u8fd9\u91cc\u6211\u5199\u4e86\u81ea\u5df1\u6700\u719f\u6089\u7684\u52bf\u80fd\u7ebf\u6bb5\u6811\u3002\n\n\u7ebf\u6bb5\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u533a\u95f4\u662f\u5426\u4e3a\u540c\u8272\u5757\uff08\u5305\u62ec\u533a\u95f4\u7684\u989c\u8272\uff09\uff0c\u533a\u95f4\u6743\u503c\u548c\uff0c\u533a\u95f4\u67d3\u8272\u7684\u6807\u8bb0\uff0c\u533a\u95f4\u52a0\u7684\u6807\u8bb0\u3002\n\n\u5bf9\u4e8e 1 \u64cd\u4f5c\uff0c\u5982\u679c\u7ebf\u6bb5\u6811\u4e0a\u67d0\u4e2a\u8282\u70b9\u7684\u6574\u4e2a\u533a\u95f4\u5185\u989c\u8272\u76f8\u540c\uff0c\u5219\u8f6c\u5316\u4e3a\u4e86\u533a\u95f4\u989c\u8272\u4fee\u6539\u53ca\u533a\u95f4\u6743\u503c\u52a0\uff0c\u76f4\u63a5\u6253\u6807\u8bb0\u5373\u53ef\uff1b\u5426\u5219\u7ee7\u7eed\u9012\u5f52\u5de6\u53f3\u513f\u5b50\uff0c\u77e5\u9053\u627e\u5230\u7b26\u5408\u6761\u4ef6\u7684\u533a\u95f4\u3002\n\n\u5bf9\u4e8e 2 \u64cd\u4f5c\uff0c\u76f4\u63a5\u67e5\u533a\u95f4\u6743\u503c\u548c\u5373\u53ef\u3002\n\n## Why\uff1f\n\n\u989c\u8272\u6bb5\u5747\u644a\u7684\u590d\u6742\u5ea6\u5206\u6790\uff1a\n\n\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4\u989c\u8272\u8fde\u7eed\u6bb5\uff0c\u6bcf\u6b21\u7ebf\u6bb5\u6811\u4e0a\u9012\u5f52\u4fee\u6539\u7684\u590d\u6742\u5ea6\u662f $O(\\log n)$,\u6bcf\u6b21\u533a\u95f4\u67d3\u8272\u64cd\u4f5c\uff0c\u6700\u591a\u589e\u52a0 $O(1)$ \u4e2a\u533a\u95f4\u989c\u8272\u8fde\u7eed\u6bb5\uff0c\u6240\u4ee5\u5355\u6b21 1 \u64cd\u4f5c\u5747\u644a\u590d\u6742\u5ea6\u662f $O(\\log n)$\u3002\n\n\n# Code\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define mod 998244353\n#define inf 0x3f3f3f3f\n#define re register\n#define maxn 200010\n#define ls(x) x<<1\n#define rs(x) x<<1|1 \n#define int long long\n#define Orz cout<<\"stO %\u738b\u961f% Orz\"<<'\\n';\nint n,m;\nstruct node\n{\n\tint l,r,col,sum,add,cc;\n\tbool tag;\n\tnode()\n\t{\n\t\tl=r=col=sum=add=0;\n\t\tcc=-1;\n\t\ttag=false;\n\t}\n\t#define l(x) z[x].l\n\t#define r(x) z[x].r\n\t#define c(x) z[x].col\n\t#define a(x) z[x].add\n\t#define s(x) z[x].sum\n\t#define t(x) z[x].tag\n\t#define cc(x) z[x].cc\n}z[maxn<<2];\nvoid update(int root)\n{\n\tif(l(root)==r(root)) return ;\n\ts(root)=s(ls(root))+s(rs(root));\n\tif(t(ls(root))&&t(rs(root))&&c(ls(root))==c(rs(root)))\tt(root)=true,c(root)=c(ls(root));\n\telse\tt(root)=false,c(root)=-1;\n}\nvoid f(int root,int x)\n{\n\ts(root)+=(r(root)-l(root)+1)*x;\n\ta(root)+=x;\n}\nvoid ff(int root,int y)\n{\n\tt(root)=true;\n\tc(root)=y;\n\tcc(root)=y;\n} \nvoid pushdown(int root)\n{\n\tf(ls(root),a(root));\n\tf(rs(root),a(root));\n\ta(root)=0;\n\tif(~cc(root))\n\t{\n\t\tff(ls(root),cc(root));\n\t\tff(rs(root),cc(root));\n\t\tcc(root)=-1;\n\t}\t \n}\nvoid build(int l,int r,int root)\n{\n\tl(root)=l,r(root)=r;\n\tif(l==r)\n\t{\n\t\tt(root)=true;\n\t\ts(root)=0;\n\t\tcc(root)=-1;\n\t\tc(root)=l;\n\t\treturn ;\n\t}\n\tint mid=l+r>>1;\n\tbuild(l,mid,ls(root));\n\tbuild(mid+1,r,rs(root));\n\tupdate(root);\n}\nvoid modify(int root,int l,int r,int x)\n{\n\tif(l<=l(root)&&r>=r(root))\n\t{\n\t\tif(t(root))\n\t\t{\n\t\t\tf(root,abs(x-c(root)));\n\t\t\tff(root,x);\t\n\t\t\treturn ;\n\t\t}\n\t\tpushdown(root);\n\t\tmodify(ls(root),l,r,x);\n\t\tmodify(rs(root),l,r,x);\n\t\tupdate(root);\n\t\treturn ;\n\t}\n\tpushdown(root);\n\tint mid=l(root)+r(root)>>1;\n\tif(l<=mid)\tmodify(ls(root),l,r,x);\n\tif(r>mid)\tmodify(rs(root),l,r,x);\n\tupdate(root);\n}\nint query(int root,int l,int r)\n{\n\tif(l<=l(root)&&r>=r(root))\treturn s(root);\n\tpushdown(root);\n\tint ans=0;\n\tint mid=l(root)+r(root)>>1;\n\tif(l<=mid)\tans+=query(ls(root),l,r);\n\tif(r>mid)\tans+=query(rs(root),l,r);\n\tupdate(root);\n\treturn ans;\n}\ninline int read(){\n    int x=0,f=1;char ch=getchar();\n    while (ch<'0'||ch>'9') {if(ch=='-')f=-1; ch=getchar();}\n    while (ch>='0'&&ch<='9'){x=(x<<3)+(x<<1)+ch-'0'; ch=getchar();}\n    return x*f;\n}\ninline void wn(int x){if (x<0) {putchar('-');wn(-x);return;}if(x>=10)wn(x/10);putchar(x%10+'0');}\ninline void wr(int x){wn(x);putchar('\\n');}\nsigned main()\n{\n\tcin>>n>>m;\n\tbuild(1,n,1);\n\tfor(re int i=1;i<=m;++i)\n\t{\n\t\tint op=read(),l=read(),r=read();\n\t\tif(op==2)\n\t\t\twr(query(1,l,r));\n\t\telse\n\t\t{\n\t\t\tint x=read();\n\t\t\tmodify(1,l,r,x);\n\t\t} \n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1631667886,
        "uid": 91956,
        "name": "Dreamweaver",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF444C"
    },
    {
        "content": "\u4e00\u53e5\u8bdd\u9898\u89e3\uff1a\u73c2\u6735\u8389\u6811+\u7ebf\u6bb5\u6811\n\n\uff08\u5b9e\u9645\u4e0a\u8fd9\u573a\u7684 Editorial \u91cc\u9762\u6709\u73c2\u6735\u8389\u6811\u7684\u601d\u60f3`std::set`\u7ef4\u62a4\u76f8\u540c\u503c\u533a\u95f4\u4e86\uff0c\u6765\u6e90\u8981\u65e9\u4e8elxl\u6b63\u5f0f\u63d0\u51fa\uff09\n\n\u6ce8\u610f\u5230\u8fd9\u4e2a\u9898\u76ee\u7684\u8981\u6c42\u91cc\u9762\u6709\u533a\u95f4\u63a8\u5e73\uff1a\n\n> Paint all the units with numbers between $l$ and $r$ (both inclusive) with color $x$.\n\n\u8fd9\u4e2a\u64cd\u4f5c\u7528\u73c2\u6735\u8389\u6811\u662f\u5f88\u5bb9\u6613\u7ef4\u62a4\u7684\uff0c\u4f46\u662f\u8fd9\u4e2a\u9898\u7684\u8be2\u95ee\u95ee\u7684\u662f\u64cd\u4f5c\u9020\u6210\u7684\u5f71\u54cd\u503c\uff0c\u9700\u8981\u5355\u72ec\u7ef4\u62a4\u3002\n\n\u5f71\u54cd\u503c\u4e0a\u9762\u5e26\u4e86\u7edd\u5bf9\u503c\u6709\u70b9\u70e6\uff0c\u4f46\u662f\u5bf9\u4e8e\u73c2\u6735\u8389\u6811\u4e0a\u7684\u540c\u503c\u533a\u95f4\u8fd9\u662f\u5f88\u597d\u7ef4\u62a4\u7684\u2014\u2014\u65e2\u7136\u76f8\u540c\u7684\u503c\u88ab\u6539\u6210\u4e86\u53e6\u5916\u4e00\u4e2a\u76f8\u540c\u7684\u503c\uff0c\u90a3\u5c31\u76f4\u63a5\u5728\u7ebf\u6bb5\u6811\u4e0a\u9762\u52a0\u5c31\u597d\u4e86\u3002\n\n\u5982\u679c\u64cd\u4f5c\u7834\u574f\u4e86\u5df2\u6709\u7684\u533a\u95f4\uff0c\u5c31`split`\u6765\u4fdd\u8bc1\u6027\u8d28\u3002\n\n\u7136\u540e\u5c31\u662f\u4e24\u4e2a\u677f\u5b50\u4e86\u3002\n\n```cpp\n\n// Problem : C. DZY Loves Colors\n// Contest : Codeforces Round #254 (Div. 1)\n// URL : https://codeforces.com/contest/444/problem/C\n// Memory Limit : 256 MB\n// Time Limit : 2000 ms\n// Powered by CP Editor (https://github.com/cpeditor/cpeditor)\n\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\n#define pb push_back\n#define mp make_pair\n#define y1 y114514\n#define y2 y1919810\ntypedef pair <int, int> PII;\n#define int long long\n#define all(x) (x.begin(),  x.end())\n#define lsh(i) (1 << (i))\n#define lshll(i) (1LL << (i))\n#define repn(i, n) for (int i = 1; i <= (int)n; i++)\n#define rep(i, n) for (int i = 0; i < (int)n; i++)\n#define range(i, s, t)  for (int i = s; i <= (int)t; i++)\nconst int INF = 0x3f3f3f3f;\nconst long double EPS = 1e-6;\nlong long qread() {\n\tchar c = getchar();\n\tint neg = 1;\n\tlong long val = 0;\n\twhile (c != '-' && !isdigit(c)) c = getchar();\n\tif (c == '-') c = getchar(), neg = -1;\n\twhile (isdigit(c)) val = (val << 3) + (val << 1) + c - '0', c = getchar();\n\treturn neg * val;\n}\nconst int N = 800010;\nint n, m;\nint ans;\n//\u7ebf\u6bb5\u6811\u5f00\u59cb\nint lazy[N], sum[N];\ninline void pushdown(int p, int l, int r) {\n\tsum[p] += lazy[p] * (r - l + 1);\n\tif (l != r) {\n\t\tlazy[p << 1] += lazy[p];\n\t\tlazy[p << 1 | 1] += lazy[p];\n\t}\n\tlazy[p] = 0;\n}\ninline void pushup(int p) {\n\tsum[p] = sum[p << 1] + sum[p << 1 | 1];\n}\nvoid modify(int p, int l, int r, int ql, int qr, int v) {\n\tif (lazy[p]) pushdown(p, l, r);\n\tif (r < ql || qr < l) return;\n\tif (ql <= l && r <= qr) {\n\t\tlazy[p] = v;\n\t\tpushdown(p, l, r);\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tmodify(p << 1, l, mid, ql, qr, v);\n\tmodify(p << 1 | 1, mid + 1, r, ql, qr, v);\n\tpushup(p);\n}\nvoid ask(int p, int l, int r, int ql, int qr) {\n\tif (lazy[p]) pushdown(p, l, r);\n\tif (r < ql || qr < l) return;\n\tif (ql <= l && r <= qr) {ans += sum[p]; return;}\n\tint mid = (l + r) >> 1;\n\task(p << 1, l, mid, ql, qr);\n\task(p << 1 | 1, mid + 1, r, ql, qr);\n}\n//\u73c2\u6735\u8389\u6811\u5f00\u59cb\nstruct node {\n\tint l, r;\n\tmutable int v;\n\tnode(int l, int r = -1, int v = 0) : l(l), r(r), v(v) {}\n\tinline bool operator < (const node& b)const {return l < b.l;}\n};\nset <node> chtholly;\nset <node> :: iterator split(int x) {\n\t//if (x > n) return chtholly.end();\n\tauto it = chtholly.lower_bound(node(x));\n\tif (it != chtholly.end() && it -> l == x) return it;\n\t--it;\n\tint l = it -> l, r = it -> r, v = it -> v;\n\tchtholly.erase(it);\n\tchtholly.insert(node(l, x - 1, v));\n\treturn chtholly.insert(node(x, r, v)).first;\n}\nvoid assign(int l, int r, int v) {\n\tauto itr = split(r + 1), itl = split(l);\n\tauto it = itl;\n\tfor (; it != itr; ++it) {\n\t\tint lV = it -> l, rV = it -> r, vV = abs(v - it -> v);\n\t\tmodify(1, 1, n, lV, rV, vV);\n\t}\n\tchtholly.erase(itl, itr);\n\tchtholly.insert(node(l, r, v));\n}\n\nsigned main() {\n\tn = qread(); m = qread(); repn(i, n) chtholly.insert(node(i, i, i));\n\trep(i, m) {\n\t\tint op = qread();\n\t\tif (op == 1) {\n\t\t\tint l = qread(), r = qread(), v = qread();\n\t\t\tassign(l, r, v);\n\t\t}\n\t\telse {\n\t\t\tans = 0;\n\t\t\tint l = qread(), r = qread();\n\t\t\task(1, 1, n, l, r);\n\t\t\tcout << ans << endl;\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1585578682,
        "uid": 87696,
        "name": "Lily_White",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 CF444C \u3010DZY Loves Colors\u3011"
    }
]