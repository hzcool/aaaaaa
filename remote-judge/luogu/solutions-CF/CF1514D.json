[
    {
        "content": "\u7b80\u5355\u6570\u636e\u7ed3\u6784\u9898\uff0c\u770b\u8d77\u6765\u6bd4 $C$ \u8981\u7b80\u5355\u3002\n\n\u8003\u8651\u8fd9\u4e48\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u6211\u4eec\u8981\u628a\u533a\u95f4\u5206\u6210\u82e5\u5e72\u4e2a\u5757\u7684\u8bdd\u80af\u5b9a\u8981\u62b5\u5b8c\uff0c\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u82b1\u8d39 $x$ \u4e2a\u975e\u4f17\u6570\uff0c\u90a3\u4e48\u62b5\u6389 $x+1$ \u4e2a\u4f17\u6570\u662f\u6700\u4f18\u7684\u3002\n\n\u4f46\u662f\uff0c\u6211\u4eec\u53d1\u73b0\u5b83\u5982\u679c\u4e0d\u56fa\u5b9a $x$ \u5c31\u4e0d\u4e00\u5b9a\u62b5\u5f97\u5b8c\u3002\n\n\u6211\u4eec\u8003\u8651\u4e00\u79cd\u4e00\u5b9a\u62b5\u5f97\u5b8c\u7684\u65b9\u6848\uff1a\n\n\u5047\u8bbe\u539f\u6765\u5206\u6210\u4e86 $(x,x+1)$ \u548c $(y,y+1)$ \uff0c\u663e\u7136\u53ef\u4ee5\u5408\u5e76\u6210 $(x+y,x+y+1),(0,1)$  \u7684\u5f62\u5f0f\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5408\u5e76\u4e24\u4e2a\u7ec4\u662f\u5e76\u4e0d\u5f71\u54cd\u7ec4\u6570\u7684\u5927\u5c0f\u7684\uff01\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u53ea\u5206\u4e00\u7ec4\u628a\u6240\u6709\u975e\u4f17\u6570\u5206\u5b8c\uff0c\u591a\u51fa\u6765\u7684\u4f17\u6570\u6bcf\u4e2a\u90fd\u81ea\u6210\u4e00\u7ec4\u5373\u53ef\u3002\n\n\u81f3\u4e8e\u6c42\u533a\u95f4\u4f17\u6570\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u6211\u7528\u7684\u662f\u4e3b\u5e2d\u6811\uff0c\u8003\u8651\u8fd9\u9053\u9898\u53ea\u8981\u6c42\u7edd\u5bf9\u4f17\u6570\u7684\u51fa\u73b0\u6b21\u6570\u90a3\u4e48\u6211\u4eec\u8bbe $k=r-l+1$ \u53cd\u6b63\u5982\u679c $s[left]<k$ \u7684\u8bdd\u663e\u7136\u53ea\u6709\u8d70\u53f3\u513f\u5b50\u624d\u6709\u53ef\u80fd\u5f97\u5230\u7edd\u5bf9\u4f17\u6570\uff0c\u5426\u5219\u53ea\u6709\u8d70\u5de6\u513f\u5b50\u624d\u53ef\u80fd\u5f97\u5230\u7edd\u5bf9\u4f17\u6570\u3002",
        "postTime": 1618915195,
        "uid": 120911,
        "name": "Lynkcat",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF1514D Cut and Stick"
    },
    {
        "content": "### CF1514D Cut and Stick\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF1514D)\n\n#### \u9898\u76ee\u5206\u6790\n\n\u63d0\u4f9b\u4e00\u4e2a\u7b80\u5355\u7684\u7ebf\u6bb5\u6811 + $vector$ \u505a\u6cd5\u3002\n\n\u9996\u5148\uff0c\u95ee\u9898\u8f6c\u5316\u6210\u6c42\u533a\u95f4\u4f17\u6570\u4ee5\u53ca\u4f17\u6570\u7684\u51fa\u73b0\u6b21\u6570\u3002\n\n\u5982\u679c\u533a\u95f4\u4f17\u6570\u7684\u51fa\u73b0\u6b21\u6570\u4e0d\u8d85\u8fc7 $\\left\\lceil\\frac{n}{2}\\right\\rceil$ \uff0c\u90a3\u4e48\u7b54\u6848\u4e3a $1$ \uff08\u76f4\u63a5\u9009\u4e2d\u6240\u6709\u6570\uff09\u3002\n\n\u5426\u5219\uff0c\u5047\u8bbe\u4f17\u6570\u7684\u51fa\u73b0\u6b21\u6570\u4e3a $s$ \u3002 \u6211\u4eec\u53ef\u4ee5\u5148\u5206\u51fa\u4e00\u4e2a\u533a\u95f4\uff0c\u628a\u6240\u6709\u4e0d\u662f\u4f17\u6570\u7684\u6570\u4e22\u8fdb\u53bb\u3002\u7136\u540e\u628a\u4f17\u6570\u5c3d\u53ef\u80fd\u591a\u5730\u4e22\u8fdb\u53bb\uff0c\u6570\u91cf\u4e3a $n-s+1$ \uff08\u6b64\u65f6\u533a\u95f4\u7684\u5927\u5c0f\u662f\u4e2a\u5947\u6570\uff0c\u6070\u597d\u6ee1\u8db3\u6761\u4ef6\uff09\u3002\u5269\u4e0b\u7684\u4f17\u6570\u5355\u4e2a\u5355\u4e2a\u4e00\u7ec4\u3002\u7b54\u6848\u4e3a $1+(s-(n-s+1))$ \u3002\n\n\u6469\u5c14\u6295\u7968\u6cd5\u53ef\u4ee5\u6c42\u51fa\u4e00\u6bb5\u5e8f\u5217\u5185\u51fa\u73b0\u6b21\u6570\u8d85\u8fc7\u4e00\u534a\u7684\u4f17\u6570\uff0c\u800c\u7b97\u6cd5\u53ea\u5728\u5e8f\u5217\u5185\u5b58\u5728\u8fd9\u6837\u7684\u4f17\u6570\u65f6\u624d\u6b63\u786e\u3002\u7136\u800c\u5f53\u7b97\u6cd5\u4e0d\u6b63\u786e\u65f6\uff0c\u4f17\u6570\u51fa\u73b0\u7684\u6b21\u6570\u4e00\u5b9a\u4e0d\u5927\u4e8e $\\left\\lceil\\frac{n}{2}\\right\\rceil$ \uff0c\u6b64\u65f6\u7b54\u6848\u4e3a $1$ \u3002\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u68c0\u9a8c\u6469\u5c14\u6295\u7968\u6cd5\u5f97\u5230\u7684\u4f17\u6570\u5728\u533a\u95f4\u5185\u7684\u51fa\u73b0\u4e2a\u6570\u662f\u5426\u786e\u786e\u5b9e\u5b9e\u5927\u4e8e $\\left\\lceil\\frac{n}{2}\\right\\rceil$ \u3002\u800c\u8fd9\u53ef\u4ee5\u901a\u8fc7 $vector$ \u89e3\u51b3\u3002\n\n\u6469\u5c14\u6295\u7968\u6cd5\u662f $O(n)$ \u7684\uff0c\u652f\u6301\u5408\u5e76\u3002\u56e0\u800c\u6211\u4eec\u53ef\u4ee5\u5728\u7ebf\u6bb5\u6811\u4e0a\u8fdb\u884c\u6469\u5c14\u6295\u7968\u6cd5\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$ \u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#define mid ((l+r)>>1)\nusing namespace std; \nconst int maxn=301000;\nint n,q;\nint a[maxn];\nvector <int> v[maxn];\nstruct Node{\n\tint p,c;\n\tNode(){\n\t\tp=c=0;\n\t}\n\tNode(int x){\n\t\tp=x;c=1;\n\t}\n\tNode operator +(Node b)const{\n\t\tNode res;\n\t\tif(p==b.p)res.p=p,res.c=c+b.c;\n\t\telse if(c<b.c)res.p=b.p,res.c=b.c-c;\n\t\telse res.p=p,res.c=c-b.c;\n\t\treturn res;\n\t}\n};\nstruct Segment_Tree{\n\tint rt,ver,son[2][maxn<<1];\n\tNode w[maxn<<1];\n\tvoid build(int &p,int l,int r){\n\t\tp=++ver;\n\t\tif(l==r){\n\t\t\tw[p]=Node(a[l]);return;\n\t\t}\n\t\tbuild(son[0][p],l,mid);\n\t\tbuild(son[1][p],mid+1,r);\n\t\tw[p]=w[son[0][p]]+w[son[1][p]];\n\t}\n\tNode query(int p,int lr,int rr,int l,int r){\n\t\tif(lr<=l&&r<=rr)return w[p];\n\t\tif(lr>r||l>rr)return Node();\n\t\treturn query(son[0][p],lr,rr,l,mid)+query(son[1][p],lr,rr,mid+1,r);\n\t}\n}T1;\ninline int read(){\n\tint res=0;\n\tchar ch=getchar(),ch1=ch;\n\twhile(!isdigit(ch))ch1=ch,ch=getchar();\n\twhile(isdigit(ch))res=(res<<3)+(res<<1)+ch-'0',ch=getchar();\n\treturn ch1=='-'?-res:res;\n}\nint main(){\n\tn=read();q=read();\n\tfor(register int i=1;i<=n;++i){\n\t\ta[i]=read();\n\t\tv[a[i]].push_back(i);\n\t}\n\tT1.build(T1.rt,1,n);\n\tfor(register int i=1,l,r,x;i<=q;++i){\n\t\tl=read();r=read();\n\t\tNode w=T1.query(T1.rt,l,r,1,n);\n\t\tx=lower_bound(v[w.p].begin(),v[w.p].end(),r+1)-lower_bound(v[w.p].begin(),v[w.p].end(),l);\n\t\tif(x<=(r-l+2)/2)puts(\"1\");\n\t\telse{\n\t\t\tx=1+(x-(r-l+1-x+1));\n\t\t\tprintf(\"%d\\n\",x);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1619967086,
        "uid": 137422,
        "name": "JasonL",
        "ccfLevel": 9,
        "title": "[\u9898\u89e3] CF1514D Cut and Stick"
    },
    {
        "content": "\u5bf9\u4e8e $n$ \u4e2a\u6570\u7684\u533a\u95f4 , \u8003\u8651\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u4efb\u4e00\u6570 $X$ \u7684\u6570\u91cf\u4e3a $x$ , \u5269\u4e0b\u7684\u6570 $n - x$\u3002  \n\u82e5 $x \\leqslant n - x + 1$  \n\u5212\u5206\u7684\u610f\u4e49\u5728\u4e8e , \u6bcf\u591a\u5206\u51fa\u4e00\u7ec4\u6570 , \u5c31\u80fd\u591a\u5bb9\u7eb3\u4e00\u4e2a $X$ , \u90a3\u4e48\u4e00\u4e2a\u80fd\u6ee1\u8db3\u7684\u65b9\u6848\u663e\u7136\u662f\u628a\u591a\u4f59 $X$ \u5206\u6210\u5355\u4e2a\u6570\u7684\u4e00\u7ec4\u3002  \n\u8fd9\u6837\u7b54\u6848\u5c31\u53d8\u6210\u4e86 $\\max(1, 2x - n + 1)$ \u3002  \n\u8981\u6c42\u533a\u95f4\u4f17\u6570\uff1f\u4e0d\u4f1a\u3002  \n\u5b9e\u9645\u4e0a\u5982\u679c\u4f17\u6570\u51fa\u73b0\u6b21\u6570\u5c11\u4e8e\u4e00\u534a\u6839\u672c\u4e0d\u9700\u8981\u5212\u5206 , \u53ea\u9700\u8981\u6c42\u591a\u4e8e\u4e00\u534a\u7684\u60c5\u51b5\u7684\u4f17\u6570 , \u4e3b\u5e2d\u6811\u7ef4\u62a4\u4e00\u4e0b\u5728\u7ebf\u6bb5\u6811\u4e0a\u975e\u5e38\u597d\u6c42 , \u4ee3\u7801\u8fd8\u5f88\u77ed , \u67e5\u8be2\u590d\u6742\u5ea6 $\\mathcal{O(\\sqrt n)} \\to \\mathcal{O(\\log n)}$\u3002  \n```cpp\n#include <bits/stdc++.h>\n \nusing namespace std;\n \nconst int sz = 1e7 + 10, maxn = 3e5 + 10;\nint dat[sz], ls[sz], rs[sz], tot;\nvoid insert(int &p, int pre, int lp, int rp, int x, int v) {\n    if(!p) p = ++tot;\n    if(lp == rp) { dat[p] = dat[pre] + v; return ; }\n    int mid = (lp + rp) >> 1;\n    if(x <= mid) rs[p] = rs[pre], insert(ls[p], ls[pre], lp, mid, x, v);\n    else ls[p] = ls[pre], insert(rs[p], rs[pre], mid+1, rp, x, v);\n    dat[p] = dat[ls[p]] + dat[rs[p]];\n}\n \nint qry(int pl, int pr, int lp, int rp) {\n    if(lp == rp) return dat[pr] - dat[pl];\n    int mid = (lp + rp) >> 1;\n    if(dat[ls[pr]] - dat[ls[pl]] < dat[rs[pr]] - dat[rs[pl]]) return qry(rs[pl], rs[pr], mid + 1, rp);\n    return qry(ls[pl], ls[pr], lp, mid);\n}\n \nint a[maxn], rt[maxn];\n \nint main() {\n    if(fopen(\"yl.in\", \"r\")) {\n        freopen(\"yl.in\", \"r\", stdin);\n        freopen(\"yl.out\", \"w\", stdout);\n    }\n    int n, q; scanf(\"%d %d\", &n, &q);\n    for(int i = 1; i <= n; ++i) scanf(\"%d\", a + i), insert(rt[i], rt[i-1], 1, n, a[i], 1);\n    for(int qr = 1; qr <= q; ++qr) {\n        int l, r; scanf(\"%d %d\", &l, &r);\n        int su = qry(rt[l-1], rt[r], 1, n);\n        printf(\"%d\\n\", max(su-((r-l+1)-su+1)+1,1));\n    }\n    return 0;\n}\n```\n",
        "postTime": 1619083576,
        "uid": 88735,
        "name": "\u5bd2\u9e3d\u513f",
        "ccfLevel": 0,
        "title": "CF1514D (\u4e3b\u5e2d\u6811\u6c42\u533a\u95f4\u51fa\u73b0\u6b21\u6570\u5927\u4e8e\u4e00\u534a\u7684\u6570\u7684\u51fa\u73b0\u6b21\u6570)"
    },
    {
        "content": "#### \u9898\u76ee\u63cf\u8ff0\n\n\u5bf9\u4e8e\u4e00\u4e2a\u5e8f\u5217\uff0c\u4f60\u6709\u4e24\u79cd\u64cd\u4f5c\uff1a\n\n- \u5c06\u4e00\u4e2a\u5e8f\u5217\u7684\u4e00\u4e2a\u5b50\u6bb5 $[l,\\,r]$ \u622a\u4e0b\u6765\uff0c\u6210\u4e3a\u53e6\u4e00\u4e2a\u5e8f\u5217\u3002\n- \u5c06\u4e24\u4e2a\u5e8f\u5217\u5408\u5e76\u6210\u4e00\u4e2a\u5e8f\u5217\uff0c\u4fdd\u7559\u4e24\u4e2a\u539f\u5e8f\u5217\u7684\u6570\u5b57\u987a\u5e8f\u3002\n\n\u540c\u65f6\uff0c\u8981\u6c42\u4e00\u4e2a $n$ \u4e2a\u6570\u7684\u5e8f\u5217\u4e2d\u4e0d\u80fd\u6709\u4efb\u610f\u4e00\u4e2a\u503c\u51fa\u73b0\u6b21\u6570\u8d85\u8fc7 $\\lceil \\dfrac{n}{2} \\rceil$\u3002\n\n\u6709 $q$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u4e00\u4e2a\u533a\u95f4 $[l,\\,r]$\uff0c\u95ee\u6700\u5c11\u5c06\u8fd9\u4e2a\u5e8f\u5217\u62c6\u6210\u51e0\u4e2a\u5e8f\u5217\u624d\u80fd\u4f7f\u6240\u6709\u5e8f\u5217\u6ee1\u8db3\u6761\u4ef6\u3002\n\n#### \u9898\u76ee\u89e3\u6cd5\n\n\u9996\u5148\u660e\u786e\uff0c\u9898\u76ee\u4e0d\u9700\u8981\u6211\u4eec\u505a\u5230\u64cd\u4f5c\u6b21\u6570\u6700\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u533a\u95f4\u62c6\u6210 $n$ \u4e2a\u957f\u5ea6\u4e3a $1$ \u7684\u5b50\u5e8f\u5217\uff0c\u7136\u540e\u518d\u62fc\u8d77\u6765\uff0c\u4ee5\u8fbe\u5230\u76ee\u7684\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4 $[l,\\,r]$\uff0c\u5148\u6c42\u51fa\u5b83\u7684\u533a\u95f4\u4f17\u6570\u3002$n,\\,q \\leq 3 \\times 10^5$\uff0c\u5206\u5757\u53ef\u8fc7\u3002\u4e0d\u4f1a\u7684\u53ef\u4ee5\u79fb\u6b65 [P5048](https://www.luogu.com.cn/problem/P5048)\uff0c\u6216\u8005\u5199\u4e3b\u5e2d\u6811\u9759\u6001\u533a\u95f4\u7b2c $k$ \u5c0f\u3002\n\n\u8bbe\u533a\u95f4\u957f\u5ea6 $s=r-l+1$\uff0c\u5982\u679c\u8fd9\u4e2a\u4f17\u6570\u5728\u533a\u95f4\u4e2d\u51fa\u73b0\u6b21\u6570 $\\leq \\lceil \\dfrac{s}{2} \\rceil$\uff0c\u5219\u4e0d\u9700\u8981\u62c6\u5206\uff0c\u8f93\u51fa $1$\u3002\n\n\u5426\u5219\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u62c6\u51fa\u6765\u7684\u5e8f\u5217\uff0c\u5982\u679c\u5b83\u5305\u542b $x$ \u4e2a\u539f\u5e8f\u5217\u4e2d\u7684\u533a\u95f4\u975e\u4f17\u6570\uff0c\u5219\u8fd9\u4e2a\u5e8f\u5217\u6700\u591a\u80fd\u5305\u542b $x+1$ \u4e2a\u539f\u5e8f\u5217\u4e2d\u7684\u533a\u95f4\u4f17\u6570\u3002\u8fd9\u4e5f\u662f\u6700\u4f18\u7684\u62c6\u5206\u65b9\u6cd5\u3002\u6240\u4ee5\u6700\u7ec8\u7b54\u6848\u662f \u533a\u95f4\u4f17\u6570\u4e2a\u6570$-$\u533a\u95f4\u975e\u4f17\u6570\u4e2a\u6570\u3002",
        "postTime": 1618918678,
        "uid": 242543,
        "name": "BreezeEnder",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF1514D Cut and Stick"
    },
    {
        "content": "## \u9898\u610f\n\n\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217\u548c $q$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u51fa $l,r$\uff0c\u4f60\u9700\u8981\u56de\u7b54\uff1a  \n\u5728 $a_l,a_{l+1},\\cdots a_r$ \u4e2d\uff0c\u81f3\u5c11\u8981\u62c6\u6210\u51e0\u4e2a\u5b50\u5e8f\u5217\uff0c\u624d\u80fd\u4f7f\u6bcf\u4e2a\u5b50\u5e8f\u5217\u90fd\u6ee1\u8db3\uff1a\u8bbe\u5b50\u5e8f\u5217\u957f\u5ea6\u4e3a $x$\uff0c\u4e14\u5b50\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e2a\u6570\u51fa\u73b0\u6b21\u6570\u4e0d\u8d85\u8fc7 $\\left\\lceil \\dfrac x 2 \\right \\rceil$\u3002  \n\n\n## \u9898\u89e3  \n\u7c97\u7565\u4e00\u770b\uff0c\u6211\u4eec\u53d1\u73b0\u4ed6\u5927\u6982\u548c\u533a\u95f4\u957f\u5ea6\u548c\u533a\u95f4\u4f17\u6570\u51fa\u73b0\u6b21\u6570\u6709\u5173\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7528\u56de\u6eda\u83ab\u961f\u6216\u8005\u628a[\u8fd9\u9898](https://www.luogu.com.cn/problem/P5048) \u4ee3\u7801\u641e\u8fc7\u6765\u3002  \n\u7136\u540e\u5982\u679c\u533a\u95f4\u4f17\u6570\u51fa\u73b0\u6b21\u6570\u4e3a $x$\uff0c\u533a\u95f4\u957f\u5ea6\u4e3a $len$\uff0c\u7b54\u6848\u5373\u4e3a $\\max(1,2x-len)$\u3002\u4e0b\u9762\u7ed9\u51fa\u8bc1\u660e\uff1a  \n\u5982\u679c $x\\le \\left\\lceil \\dfrac {len} 2 \\right \\rceil$\uff0c\u7b54\u6848\u663e\u7136\u4e3a 1\u3002  \n\u5426\u5219\u533a\u95f4\u4f17\u6570\u662f\u552f\u4e00\u7684\uff0c\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u8bbe\u533a\u95f4\u4f17\u6570\u4e3a $a$\u3002\u6211\u4eec\u8003\u8651\uff0c\u5c06 $k$ \u4e2a $a$ \u653e\u5728\u4e00\u4e2a\u5e8f\u5217\u91cc\uff0c\u81f3\u5c11\u9700\u8981 $k-1$ \u4e2a\u4e0d\u662f $a$ \u7684\u6570\u3002  \n\u6211\u4eec\u603b\u5171\u53ea\u6709 $len-x$ \u4e2a\u4e0d\u662f $a$ \u7684\u6570\u3002\u8bbe\u628a\u533a\u95f4\u5206\u6210\u4e86 $t$ \u4e2a\u5b50\u5e8f\u5217\uff0c\u6bcf\u4e2a\u5b50\u5e8f\u5217\u6709 $b_i$ \u4e2a $a$\uff0c\u90a3\u4e48\u6709 $\\sum_{i=1}^t b_i=x,\\sum_{i=1}^t (b_i-1) \\le len-x$\uff0c\u4e8e\u662f\u6709 $t \\ge 2x-len$\u3002\n\n\u4ee3\u7801\uff1a  \n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define ri register signed\n#define rd(x) x=read()\nusing namespace std;\nconst int N=5e5+5;\nconst int M=805;\nconst int mod=998244353;\ninline int read(){int x=0,f=1;char ch=getchar();while(ch>'9'||ch<'0'){if(ch=='-')f=-1;ch=getchar();}while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}return x*f;}\ninline int ksm(int x,int y=mod-2,int z=mod){int ret=1;while (y){if (y&1) ret=(ret*x)%z;x=(x*x)%z;y>>=1;}return ret;}\nint sz;\nint n,m,q,la,l,r;\nint a[N],b[N],pos[N],L[N],R[N],bel[N],cnt[N];\nint mx[M][M];\nvector<int> p[N];\nint solve(int len,int x)\n{\n\tif (x<=(len+1)/2) return 1;\n\treturn 2*x-len;\n}\nsigned main()\n{\n    rd(n);rd(q);\n    for (int i=1;i<=n;i++) rd(a[i]),b[i]=a[i];\n    sort(b+1,b+n+1);m=unique(b+1,b+n+1)-b-1;\n    for (int i=1;i<=n;i++) {a[i]=lower_bound(b+1,b+m+1,a[i])-b;}\n    for (int i=1;i<=n;i++) pos[i]=p[a[i]].size(),p[a[i]].push_back(i);\n    sz=sqrt(n);\n    for (int i=1;i<=n;i++) bel[i]=(i-1)/sz+1;m=bel[n];\n    for (int i=1;i<=m;i++) L[i]=R[i-1]+1,R[i]=i*sz;R[m]=n;\n    for (int i=1;i<=m;i++)\n    {\n        memset(cnt,0,sizeof(cnt));\n        for (int j=i;j<=m;j++)\n        {\n            mx[i][j]=mx[i][j-1];\n            for (int k=L[j];k<=R[j];k++) cnt[a[k]]++,mx[i][j]=max(mx[i][j],cnt[a[k]]);\n        }\n    }\n    while (q--)\n    {\n        rd(l);rd(r);la=0;\n        if (bel[l]==bel[r])\n        {\n            for (int i=l;i<=r;i++) cnt[a[i]]=0;\n            for (int i=l;i<=r;i++) cnt[a[i]]++,la=max(la,cnt[a[i]]);\n        } else \n        {\n            la=mx[bel[l]+1][bel[r]-1];\n            for (int i=l;i<=R[bel[l]];i++){int x=pos[i];while (x+la<p[a[i]].size() && p[a[i]][x+la]<=r) la++;}\n            for (int i=L[bel[r]];i<=r;i++){int x=pos[i];while (x-la>=0 && p[a[i]][x-la]>=l) la++;}\n        }\n        cout<<solve(r-l+1,la)<<'\\n';\n    }\n}\n```\n",
        "postTime": 1618875618,
        "uid": 167006,
        "name": "WitheredZeal",
        "ccfLevel": 0,
        "title": "CF1514D"
    },
    {
        "content": "\u83ab\u961f\u6c42\u533a\u95f4\u4f17\u6570\u3002\r\n\r\n\u4e0d\u5f3a\u5236\u5728\u7ebf\u7684\u533a\u95f4\u67e5\u8be2\uff0c\u8bf4\u4e00\u4e0b\u83ab\u961f\u600e\u4e48\u6c42\u533a\u95f4\u4f17\u6570\u3002\r\n\r\n\u6211\u4eec\u7528\u4e00\u4e2a cnt \u6570\u7ec4\u8bb0\u5f55\u6bcf\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\uff0cCcnt \u6570\u7ec4\u8bb0\u5f55\u6bcf\u79cd\u51fa\u73b0\u6b21\u6570\u7684\u6b21\u6570\u3002\r\n\r\n- \u5f53\u6dfb\u52a0\u4e00\u4e2a\u6570\u65f6\uff0c\u663e\u7136\u65b0\u52a0\u8fdb\u53bb\u7684\u6570\u7684\u51fa\u73b0\u6b21\u6570\u8981\u589e\u52a0\uff0c\u4f46\u540c\u65f6\u8981\u6d88\u53bb\u4e4b\u524d\u6570\u7684\u8d21\u732e\u3002\r\n\r\n- \u5f53\u5220\u53bb\u4e00\u4e2a\u6570\u65f6\uff0c\u6d88\u53bb\u4e4b\u524d\u6570\u7684\u8d21\u732e\uff0c\u503c\u5f97\u6ce8\u610f\u7684\u662f\u8981\u5224\u65ad\u5220\u53bb\u8fd9\u4e2a\u6570\u4e4b\u540e\u4f17\u6570\u662f\u5426\u53d1\u751f\u53d8\u5316\uff0c\u7136\u540e\u518d\u5bf9\u65b0\u6570\u8fdb\u884c\u66f4\u65b0\u3002\r\n\r\n\u5f53\u7136\u6211\u4eec\u8981\u77e5\u9053\u4e3a\u4ec0\u4e48\u6c42\u4f17\u6570\u3002\r\n\r\n\u505a\u4e00\u4e0b\u89e3\u91ca\uff1a\uff0c\u5047\u8bbe\u4f17\u6570\u51fa\u73b0\u7684\u6b21\u6570 $x < \\dfrac{len}{2}$\uff0c\u90a3\u4e48\u7b54\u6848\u663e\u7136\u4e3a $1$\uff0c\u653e\u5230\u4e00\u4e2a\u533a\u95f4\u5c31\u884c\u4e86\u3002\u5982\u679c\u5927\u4e8e $\\dfrac{len}{2}$ \u7684\u8bdd\uff0c\u4e00\u4e2a\u5e8f\u5217\u662f\u4e0d\u591f\u7684\uff0c\u6bcf\u4e2a\u5e8f\u5217\u4e2d\u4f17\u6570\u7684\u6570\u91cf\u6700\u591a\u6bd4\u5176\u4ed6\u7684\u6570\u591a\u4e00\u4e2a\u624d\u80fd\u4fdd\u8bc1\u4e0d\u51fa\u73b0\u7edd\u5bf9\u4f17\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981 $x - (r - l +1 - x)$ \u4e2a\u5b50\u5e8f\u5217\u3002\r\n\r\n\u7801\uff1a\r\n\r\n```cpp\r\n#include<cmath>\r\n#include<cstdio>\r\n#include<algorithm>\r\n#define Maxn 300005\r\n\r\nint n,q;\r\nstruct node{int l,r,id;}a[Maxn];\r\nint fir[Maxn],bel[Maxn],cnt[Maxn],Ccnt[Maxn],ans[Maxn],Mx;\r\nbool cmp(node a,node b){return (bel[a.l]^bel[b.l])?a.l<b.l:((bel[a.l]&1)?a.r<b.r:a.r>b.r);}\r\n\r\nvoid add(int x){\r\n    Ccnt[cnt[fir[x]]]--;cnt[fir[x]]++;\r\n    Ccnt[cnt[fir[x]]]++;Mx=std::max(Mx,cnt[fir[x]]);\r\n}\r\n\r\nvoid del(int x){\r\n    Ccnt[cnt[fir[x]]]--;\r\n    if(cnt[fir[x]]==Mx&&!Ccnt[cnt[fir[x]]]) --Mx;\r\n    cnt[fir[x]]--;Ccnt[cnt[fir[x]]]++;\r\n}\r\n\r\nint main(){\r\n\tscanf(\"%d%d\",&n,&q);int sq=std::sqrt(n);\r\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",fir+i),bel[i]=(i-1)/sq+1;\r\n\tfor(int i=1;i<=q;i++) scanf(\"%d%d\",&a[i].l,&a[i].r),a[i].id=i;\r\n\tstd::sort(a+1,a+q+1,cmp);\r\n\tint l=1,r=0;\r\n\tfor(int i=1;i<=q;i++){\r\n\t    int ql=a[i].l,qr=a[i].r;\r\n\t    while(l<ql) del(l++);\r\n\t    while(l>ql) add(--l);\r\n\t    while(r>qr) del(r--);\r\n\t    while(r<qr) add(++r);\r\n\t    ans[a[i].id]=std::max(1,Mx*2-(qr-ql+1));\r\n    }\r\n    for(int i=1;i<=q;i++) printf(\"%d\\n\",ans[i]);\r\n    return 0;\r\n} \r\n```",
        "postTime": 1665565128,
        "uid": 397317,
        "name": "Gym_nastics",
        "ccfLevel": 0,
        "title": "CF1514D Cut and Stick"
    },
    {
        "content": "\u8fd9\u4e2a\u89e3\u6cd5\u8981\u7ed5\u4e00\u4e9b\uff0c\u4f46\u662f\u7406\u8bba\u4e0a\u53ef\u4ee5\u505a\u5230\u6bd4\u83ab\u961f\u4f18\u79c0\u5f88\u591a\u7684\u590d\u6742\u5ea6\u3002\n\n~~\u573a\u4e0a\u4ee5\u4e3a\u83ab\u961f\u8fc7\u4e0d\u4e86\uff0c\u5c31\u60f3\u4e86 1w \u5e74\u3002~~\n\n\u9996\u5148\u6253\u4e00\u6253\u8868\u53d1\u73b0\u82e5\u957f\u5ea6\u4e3a $len$, \u4f17\u6570\u4e2a\u6570\u4e3a $x$\uff0c\u90a3\u4e48\u7b54\u6848\u662f $max(2x-len,1)$\u3002\n\n\u6ce8\u610f\u5230\u5982\u679c\u4f17\u6570\u5c0f\u4e8e\u4e00\u534a\uff0c\u5c31\u76f4\u63a5\u8f93\u51fa 1 \u5373\u53ef\u3002\n\n\u5426\u5219\uff0c\u6211\u4eec\u4e0d\u65ad\u968f\u673a\u5e8f\u5217\u4e2d\u7684\u4f4d\u7f6e\uff0c\u5e76\u67e5\u8be2\u8fd9\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u503c\u5728\u533a\u95f4\u4e2d\u51fa\u73b0\u6b21\u6570\u662f\u5426\u8d85\u8fc7\u4e00\u534a\u3002\u6709\u7684\u8bdd\u5c31\u662f\u8981\u6c42\u7684\u6570\uff0c\u5982\u679c\u8fde\u7eed\u968f 25 \u6b21\u90fd\u627e\u4e0d\u5230\u5c31\u53ef\u4ee5\u8ba4\u4e3a\u6ca1\u6709\u51fa\u73b0\u6b21\u6570\u8d85\u8fc7\u4e00\u534a\u7684\u6570\u3002\n\n\u663e\u7136\u5b58\u5728\u8d85\u8fc7\u4e00\u534a\u7684\u6570\uff0c\u4e00\u6b21\u627e\u5230\u7684\u6982\u7387\u4e0d\u5c0f\u4e8e 0.5\uff0c\u90a3\u4e48\u8be5\u7b97\u6cd5\u7684\u9519\u8bef\u7387\u53ea\u6709 $0.5^{25}$~$0$\u3002\n\n\u7136\u540e\u5c31\u662f\u5982\u4f55\u67e5\u8be2\u4e00\u4e2a\u533a\u95f4\u4e2d\u67d0\u4e2a\u989c\u8272\u7684\u4e2a\u6570\uff0c\u53ef\u4ee5\u79bb\u7ebf\u505a\u5230 $O(1)$\uff0c\u4e5f\u53ef\u4ee5\u5728\u7ebf $O(logn)$\u3002\n\n\u603b\u590d\u6742\u5ea6 $O(n+25q)$ \u6216 $O(n+25qlogn)$\u3002\n\n\u8003\u573a\u4ee3\u7801\uff08\u590d\u6742\u5ea6\u662f\u540e\u8005\uff09\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define LL long long\n#define Rep(i,x,y) for(int i = (x), stOxrj = (y); i<=stOxrj; ++i)\n#define Irep(i,x,y) for(int i = (x), stOxrj = (y); i>=stOxrj; --i)\n#define vec vector<int>\n#define IT iterator\n#define pb push_back\n#define il inline\n#define ci const int&\nusing namespace std;\ninline int read(){\n\tint res = 0; char c = getchar(); \n\twhile( c<'0' || c>'9' ) c = getchar();\n\twhile( c>='0' && c<='9' ) res = res * 10 + c - '0', c = getchar();\n\treturn res;\n}\nconst int N = 3e5 + 20;\nint n,q;\nstruct SHR{\n\tvec a; int flg = 0;\n\tvoid ins(int x){ a.pb(x); }\n\tint ask(int l,int r){\n\t\tif( !flg ) flg = 1, a.pb(n + 1);\n\t\treturn upper_bound(a.begin(), a.end(), r) - lower_bound(a.begin(), a.end(), l);\n\t}\n}b[N];\nint va[N];\nint get(int l,int r){\n\tLL x = rand() * rand();\n\treturn x % ( r - l + 1 ) + l; \n} \nint solve(int l,int r){\n\tint lent = r - l + 1;\n\tRep(i,1,25){\n\t\tint t = get(l, r);\n\t\tint num = b[va[t]].ask(l, r); \n\t\tif( num * 2 >= lent ) return num;\n\t} \n\treturn 0;\n}\nsigned main(){\n\tsrand(time(0));\t\n\tn = read(), q = read();\n\tRep(i,1,n) b[va[i] = read()].ins(i);\n\twhile( q-- ){\n\t\tint l = read(), r = read();\n\t\tint x = solve(l, r), lent = r - l + 1;\n\t\tif( (lent+1) / 2 >= x ) { puts(\"1\"); continue; }\n\t\tprintf(\"%d\\n\", x + x - lent ); \t\n\t}\n\treturn 0;\n}\n```\n\u539f\u9898\u89e3\u5927\u6982\u4e5f\u662f\u8fd9\u4e2a\u610f\u601d",
        "postTime": 1618883277,
        "uid": 86579,
        "name": "zmx_wzx_JY",
        "ccfLevel": 0,
        "title": "CF1514D Cut and Stick"
    },
    {
        "content": "## \u9898\u610f\n\u7ed9\u5b9a\u5e8f\u5217 $n$\uff0c$m$ \u6b21\u8be2\u95ee\u81f3\u5c11\u8981\u5c06\u533a\u95f4 $[l,r]$ \u5206\u6210\u51e0\u6bb5\uff0c\u624d\u80fd\u8ba9\u6bcf\u6bb5\u4e2d\u4e0d\u5b58\u5728\u4e00\u4e2a\u6570\u51fa\u73b0\u4e86 $>\\lceil\\frac{len}{2}\\rceil$ \u6b21\u3002\n\n$n,m\\leq 3\\times 10^5$\u3002\n## \u601d\u8def\n\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4\uff0c\u5982\u679c\u533a\u95f4\u4f17\u6570\u51fa\u73b0\u6b21\u6570 $\\leq\\lceil\\frac{len}{2}\\rceil$ \u6b21\uff0c\u5219\u6211\u4eec\u76f4\u63a5\u5168\u90e8\u5206\u6210\u4e00\u6bb5\uff0c\u7b54\u6848\u4e3a $1$\u3002\n\n\u5bf9\u4e8e\u5269\u4e0b\u7684\u60c5\u51b5\uff0c\u5219\u53ea\u5b58\u5728\u4e00\u4e2a\u51fa\u73b0\u6b21\u6570 $>\\lceil\\frac{len}{2}\\rceil$ \u7684\u6570\u3002\n\n\u6211\u4eec\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e2a\u533a\u95f4\uff0c\u5c3d\u53ef\u80fd\u6d88\u8017\u6389\u591a\u7684\u8fd9\u79cd\u6570\u3002\n\n\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a\u533a\u95f4\uff0c\u8ba9\u8fd9\u79cd\u6570\u51fa\u73b0 $x+1$ \u6b21\uff0c\u5e76\u8ba9\u5269\u4f59\u7684\u6570\u51fa\u73b0 $x$ \u6b21\uff0c\u5373\u53ef\u5c06\u6bcf\u4e2a\u51fa\u73b0\u6b21\u6570\u5f88\u5c11\u7684\u6570\u6700\u5927\u5316\u5229\u7528\u3002\n\n\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8bbe\u51fa\u73b0\u6b21\u6570\u5f88\u591a\u7684\u6570\u51fa\u73b0\u4e86 $A$ \u6b21\uff0c\u5269\u4f59\u7684\u6570\u4e00\u5171\u51fa\u73b0\u4e86 $B$ \u6b21\uff0c\u7b54\u6848\u5373\u4e3a $A-B$\u3002\n\n\u6ce8\u610f\u5230 $A-B>1$\uff0c\u6211\u4eec\u603b\u662f\u80fd\u627e\u5230\u4e00\u79cd\u65b9\u6cd5\u5c06\u6bcf\u4e2a\u51fa\u73b0\u6b21\u6570\u5f88\u5c0f\u7684\u6570\u6700\u5927\u5316\u5229\u7528\uff0c\u8bfb\u8005\u53ef\u4ee5\u611f\u6027\u7406\u89e3\u4e00\u4e0b\u3002\n## \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nchar buf[1<<21],*p1=buf,*p2=buf,obuf[1<<23],*O=obuf;\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nvoid print(int x) {\n    if(x>9) print(x/10);\n    *O++=x%10+'0';\n}\ninline int read()\n{\n\tint s=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9') ch=getchar();\n\twhile(ch>='0'&&ch<='9') s*=10,s+=ch^48,ch=getchar();\n\treturn s;\n}\nconst int bl=620;\nint cnt[500003];\nint a[500003],lsh[500003];\nint mx[807][807];\nint pos[500003],t[500003];\nvector<int> v[500003];\nsigned main()\n{\n\tint n=read(),m=read(),s=n/bl;\n\tfor(int i=0; i<n; ++i) lsh[i]=a[i]=read();\n\tsort(lsh,lsh+n);\n\tint len=unique(lsh,lsh+n)-lsh;\n\tfor(int i=0; i<n; ++i) a[i]=lower_bound(lsh,lsh+len,a[i])-lsh+1;\n\tfor(int i=0; i<=s; ++i)\n\t{\n\t\tint tmp=0;\n\t\tfor(int j=i; j<=s; ++j)\n\t\t{\n\t\t\tfor(int k=j*bl; k<(j+1)*bl; ++k) ++cnt[a[k]],(cnt[a[k]]>tmp)&&(tmp=cnt[a[k]]);\n\t\t\tmx[i][j]=tmp;\n\t\t}\n\t\tmemset(cnt,0,sizeof(cnt));\n\t} \n\tfor(int i=0; i<n; ++i) v[a[i]].push_back(i),pos[i]=t[a[i]]++;\n\tfor(int lst=0,l,r; m--;)\n\t{\n\t\tl=read(),r=read();\n\t\t--l,--r;\n\t\tint BL=l/bl,BR=r/bl;\n\t\tint ans,PL,PR;\n\t\tif(BL==BR)\n\t\t{\n\t\t\tans=0;\n\t\t\tfor(int i=l; i<=r; ++i) ++cnt[a[i]],(cnt[a[i]]>ans)&&(ans=cnt[a[i]]);\n\t\t\tfor(int i=l; i<=r; ++i) cnt[a[i]]=0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tans=mx[BL+1][BR-1],PL=(BL+1)*bl,PR=BR*bl;\n\t\t\tfor(int i=l; i<PL; ++i) while(pos[i]+ans<t[a[i]] && v[a[i]][pos[i]+ans]<=r) ++ans;\n\t\t\tfor(int i=PR; i<=r; ++i) while(pos[i]>=ans && v[a[i]][pos[i]-ans]>=l) ++ans;\n\t\t}\n\t\tint mx=(r-l)/2+1,C;\n\t\tif(ans<=mx)\n\t\t{\n\t\t\tputs(\"1\");\n\t\t}\n\t\telse\n\t\tC=(r-l+1)-ans,\n\t\tprintf(\"%d\\n\",ans-C);\n\t}\n\tfwrite(obuf,O-obuf,1,stdout);\n    return 0;\n}\n```",
        "postTime": 1618881589,
        "uid": 111055,
        "name": "dead_X",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 CF1514D"
    }
]