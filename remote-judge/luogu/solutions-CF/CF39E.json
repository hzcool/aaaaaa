[
    {
        "content": "~~\u8fd9\u4e00\u6ce2\u751f\u8349\u7ffb\u8bd1\u2026\u2026~~\n### \u9898\u610f\n\n\u9274\u4e8e\u5f88\u591a\u673a\u623f\u5927\u4f6c\u56e0\u4e3a\u770b\u5230\u8fd9\u751f\u8349\u7ffb\u8bd1\u800c\u65e0\u6cd5\u5207\u6389\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u5148\u6765\u89e3\u91ca\u4e00\u6ce2\u9898\u610f\u3002\n\n\u4f60\u6709 $b$ \u4e2a\u76d2\u5b50\uff0c$a$ \u4e2a\u7403\uff0c\u6bcf\u4e00\u6b21\u64cd\u4f5c\u4f60\u53ef\u4ee5\u589e\u52a0\u4e00\u4e2a\u76d2\u5b50\u6216\u8005\u7403\uff0c\u76d2\u5b50\u548c\u7403\u5747\u4e3a\u72ec\u7acb\u4e2a\u4f53\uff0c\u4e92\u4e0d\u76f8\u540c\u3002\u73b0\u5728\u6c42\u4e24\u4eba\u8f6e\u6d41\u64cd\u4f5c\uff0c\u653e\u7f6e\u7403\u7684\u65b9\u6848\u6570\u5927\u4e8e\u7b49\u4e8e $n$ \u65f6\u6e38\u620f\u7ed3\u675f\uff0c\u6b64\u65f6\u64cd\u4f5c\u8005\u8f93\uff0c\u6c42\u5bf9\u4e8e\u4e0d\u540c\u7684 $a$\u3001$b$\u3001$n$\uff0c\u5148\u624b\u8f93\u8fd8\u662f\u540e\u624b\u8f93\uff0c\u6216\u8005\u662f\u5e73\u5c40\u3002\n\n### Solution\uff1a\n\n\u9996\u5148\u4ece\u535a\u5f08\u8bba\u7684\u65b9\u6cd5\u601d\u8003\uff0c\u82e5\u67d0\u4e00\u72b6\u6001\u7684\u540e\u7ee7\u5168\u8f93\uff0c\u5219\u6b64\u65f6\u64cd\u4f5c\u8005\u8d62\u3002\u53cd\u4e4b\uff0c\u82e5\u67d0\u4e00\u72b6\u6001\u540e\u7ee7\u53c8\u53ef\u4ee5\u8d62\u7684\u60c5\u51b5\uff0c\u6b64\u65f6\u64cd\u4f5c\u8005\u8f93\u3002\n\n\u4e8e\u662f\u5982\u679c\u6211\u4eec\u7528 $vis_{x, y}$ \u8868\u793a\u6b64\u65f6\u7684\u72b6\u6001\uff0c$1$ \u8868\u793a\u8d62\uff0c$2$ \u8868\u793a\u8f93\uff0c\u53ef\u4ee5\u5f97\u5230\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$$vis_{x,y} = \\min(vis_{x + 1, y}, vis_{x, y + 1})$$\n\n\u8fd9\u4e2a\u6c42\u89e3\u7684\u8fc7\u7a0b\u53ef\u4ee5\u5728\u641c\u7d22\u4e2d\u5b9e\u73b0\uff0c\u5373\u8bb0\u5fc6\u5316\u641c\u7d22\u3002\n\n\u8fd8\u8981\u8003\u8651\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\u2014\u2014\u5e73\u5c40\uff1a\n\n\u5982\u679c\u4e24\u4eba\u90fd\u65e0\u6cd5\u83b7\u80dc\uff0c\u5373\u5e73\u5c40\uff0c\u8fd9\u79cd\u60c5\u51b5\u53ea\u6709\u5728 $a = 1$ \u65f6\u53d6\u5230\uff0c\u5982\u679c\u6b64\u65f6 $2 ^ b \\ge n$ \u5219\u5e73\u5c40\u3002\n### code\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nnamespace q_wr {\n\tinline int read() {\n\t\tchar c = getchar();\n\t\tint x = 0, f = 1;\n\t\twhile (c < '0' || c > '9') {\n\t\t\tif (c == '-') f = -1;\n\t\t\tc = getchar();\n\t\t}\n\t\twhile (c >= '0' && c <= '9') {\n\t\t\tx = (x << 1) + (x << 3) + c - '0';\n\t\t\tc = getchar();\n\t\t}\n\t\treturn x * f;\n\t}\n\tinline void write(int x) {\n\t\tif (x < 0) {\n\t\t\tx = ~(x - 1);\n\t\t\tputchar('-');\n\t\t}\n\t\tif (x > 9)\n\t\t\twrite(x / 10);\n\t\tputchar(x % 10 + '0');\n\t}\n}\n\nusing namespace q_wr;\n\nconst int maxa = 1e5 + 5, maxb = 50;\n\nint a, b, n, vis[maxa][maxb];\n\nint dfs (int x, int y) {\n\tif (pow(x, y) >= n) return vis[x][y] = 2;\n\tif (vis[x][y]) return vis[x][y];//\u8bb0\u5fc6\u5316\n\treturn vis[x][y] = 3 - min(dfs(x, y + 1), dfs(x + 1, y));//\u8f6c\u79fb\n}\n\nstring ans[3] = {\"Missing\", \"Stas\", \"Masha\"};//\u5feb\u901f\u5f97\u5230\u7b54\u6848\n\nint main () {\n\ta = read(), b = read(), n = read();\n\tif (a == 1 and pow(2, b) >= n) return puts(\"Missing\"), 0;//\u7279\u5224\u5e73\u5c40\u7684\u60c5\u51b5\n\tcout << ans[dfs(a, b)]; \n}\n```",
        "postTime": 1643160807,
        "uid": 317495,
        "name": "JWRuixi",
        "ccfLevel": 7,
        "title": "Solution CF39E"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u535a\u5f08\u8bba\u3002\n\n\u96be\u5ea6\u4e5f\u6ca1\u6709\u90a3\u4e48\u5927\u3002\n\n\u9898\u610f\u5927\u6982\u5c31\u662f\u7ed9\u51fa $a$ \u548c $b$ \u5148\u540e\u624b\u8f6e\u6d41\u64cd\u4f5c\uff0c\u53ef\u4ee5\u5c06 $a+1$ \u6216\u8005 $b+1$ \uff0c\u5f53\u524d\u64cd\u4f5c\u4e4b\u540e\u5982\u679c $a^b \\ge n$ \u90a3\u4e48\u64cd\u4f5c\u7684\u90a3\u4e2a\u4eba\u8f93\u3002\n\n\u8fd9\u4e2a \u2026\u2026 \u5c06\u539f\u9898\u610f\u601d\u8f6c\u5316\u6210\u8fd9\u4e2a\u7528\u70b9\u7ec4\u5408\u6570\u5b66\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u8003\u8651\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u80fd\u60f3\u5230\u5bf9\u4e8e\u535a\u5f08\u8bba\u6765\u8bf4\uff0c\u5982\u679c\u5b83\u7684\u540e\u7ee7\u72b6\u6001\u5168\u90fd\u662f\u540e\u624b\u8f93\uff0c\u90a3\u4e48\u5fc5\u7136\u5f53\u524d\u80af\u5b9a\u4f1a\u8f93\u3002\n\n\u5426\u5219\u5f53\u524d\u5c31\u6709\u53ef\u80fd\u8d62\uff01\n\n\u90a3\u4e48\u8fd9\u4e2a\u53ef\u4ee5\u5f88\u597d\u7684\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u5224\u65ad\u3002\n\n\u53e6\u5916\uff1a\u4e0d\u8003\u8651 $a=1$ \u6216\u8005 $b=1$ \u7684\u60c5\u51b5\u4e0b\uff0c\u5f53\u524d $a$ \u6700\u5927\u503c\u4e3a $\\sqrt n$\uff0c$b$ \u7684\u6700\u5927\u503c\u662f $\\log_2{n}$\u3002\n\n\u7136\u540e\u6211\u4eec\u6309\u7167\u8fd9\u6837\u6d4b\u4e86\u4e00\u4e0b\u6837\u4f8b\uff0c\u53d1\u89c9\u91cc\u9762\u6709\u4e00\u4e2a `Missing`\uff0c\u4e5f\u5c31\u662f\u5e73\u5c40\u3002\n\n\u5927\u80c6\u731c\u6d4b\u8fd9\u80af\u5b9a\u548c $a=1$ \u7684\u60c5\u51b5\u6709\u5173\uff0c\u56e0\u4e3a\u53ea\u6709\u5b83\u7684\u540e\u7ee7\u72b6\u6001\u7b49\u4e8e\u5b83\u672c\u8eab\uff0c\u5426\u5219\u7b54\u6848\u80af\u5b9a\u662f\u5355\u8c03\u9012\u589e\uff0c\u4e5f\u5c31\u6709\u53ef\u80fd\u5230\u8fbe $n$\u3002\n\n\u8003\u8651\u5f53\u524d $a=1$ \u4ec0\u4e48\u60c5\u51b5\u4e0b\u4f1a\u53d8\u6210\u5e73\u5c40\uff0c\u9996\u5148\u5f53\u5148\u624b\u53d1\u89c9\u6211 $a+1$ \u7684\u65f6\u5019\u662f\u8f93\u7684\uff0c\u90a3\u4e48\u6211\u80af\u5b9a\u9009\u62e9 $b+1$ \uff0c\u90a3\u4e48\u540e\u624b\u5c31\u53d8\u4e3a\u4e86\u5148\u624b\uff0c\u80af\u5b9a\u4e5f\u662f\u8fd9\u6837\u8003\u8651\u7684\u3002\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u4e86\uff0c\u5982\u679c\u8bf4 $a=1$ \u5e76\u4e14 $2^b \\ge n$\uff0c\u90a3\u4e48\u4f1a\u5bfc\u81f4\u5e73\u5c40\u3002\n\n\u5426\u5219\u5462\uff1f\u5982\u679c\u8bf4 $a=1$ \u4e14 $2^b < n$ \u5462\uff1f\n\n\u90a3\u4e48\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5927\u80c6\u731c\u6d4b\uff0c\u662f\u4e0d\u4f1a\u53d1\u751f\u5e73\u5c40\u7684\uff01\n\n\u7136\u540e\u6309\u7167\u8fd9\u4e48\u5199\uff0c\u5c31\u8fc7\u4e86\u3002 (\n\n\u56e0\u4e3a\u5f53\u524d\u53ea\u80fd $a+1$\uff0c\u6b64\u65f6\u72b6\u6001\u53d8\u4e3a\u4e86 $f_{a+1,b}$\uff0c\u7136\u540e\u8fd9\u4e2a\u72b6\u6001\u4e0b\uff0c\u80af\u5b9a\u4f1a\u6709\u4e00\u4e2a $b$ \u662f\u53ef\u4ee5\u8fbe\u5230\u5148\u624b\u5fc5\u80dc\u7684\uff0c\u6700\u5927\u7684\u60c5\u51b5\u4e0b\u80af\u5b9a\u662f\u4e0d\u4f1a\u8d85\u8fc7 $\\log_2{n}$ \u7684\uff01\u56e0\u4e3a\u5982\u679c\u8d85\u8fc7\uff0c\u90a3\u5c31\u76f8\u5f53\u4e8e\u662f\u767d\u7ed9\u4e86\u540e\u624b\u3002\n\n\u7efc\u4e0a\u5f97\u5230\uff0c\u53ea\u9700\u8981\u5224\u65ad $a=1$ \u5e76\u4e14 $2^b \\ge n$\uff0c\u90a3\u4e48\u4f1a\u5bfc\u81f4\u5e73\u5c40\u3002\n\n\u8fd9\u6837\u5c31\u6ca1\u6709\u95ee\u9898\u4e86\uff01\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#define int long long\nusing namespace std;\nconst int INF=1e5+5;\nconst int INFN=35;\nint a,b,n,f[INF][INFN];\n// 1 \u5148\u624b\u5fc5\u8f93\uff0c2 \u540e\u624b\u5fc5\u8f93\uff0c\u5f53\u524d\u5168\u90e8\u90fd\u662f\u540e\u624b\u5fc5\u8f93\uff0c\u90a3\u4e48\u5148\u624b\u5fc5\u8f93\nint DFS(int x,int y) {\n        int xx=1;\n        for (int i=1; i<=y; i++) {\n                xx*=x;\n                if (xx>=n) return f[x][y]=2;\n        }\n        if (f[x][y]!=-1) return f[x][y];\n        int xxx=DFS(x+1,y);\n        if (xxx==2) xxx=DFS(x,y+1);\n        return f[x][y]=3-xxx;\n}\nsigned main()\n{\n        memset(f,255,sizeof f);\n        scanf(\"%lld %lld %lld\",&a,&b,&n);\n        // b <= log2(n) -> 30\n        // a <= sqrt(n) -> 1e5\n        // a^b >= n lose\n        if (a==1) {\n                int xx=1;\n                for (int i=1; i<=b; i++)\n                        xx*=2;\n                if (xx>=n) {cout<<\"Missing\\n\"; return 0;}\n        }\n        int x=DFS(a+1,b);\n        if (x==2) x=DFS(a,b+1);\n        if (x==2) cout<<\"Stas\\n\";\n        else if (x==1) cout<<\"Masha\\n\";\n        else cout<<\"Missing\\n\";\n        return 0;\n}\n\n```\n\n\u770b\u5230\u9898\u89e3\u533a\u5404\u4f4d dalao \u7684\u4ee3\u7801\uff0c\u6211\u611f\u89c9\u6211\u8fd9\u4e2a\u4ee3\u7801\u5e94\u8be5\u8fd8\u884c\u3002\n\n\u5982\u679c\u6709\u95ee\u9898\u8fd8\u8bf7\u6307\u51fa\uff01\n",
        "postTime": 1632880420,
        "uid": 208653,
        "name": "_edge_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF39E"
    },
    {
        "content": "**\u9898\u610f\uff1a**\n\n\u7ed9\u51fa$a^b$\uff0c\u4e24\u4e2a\u4eba\u8f6e\u6d41\u64cd\u4f5c\uff0c\u53ef\u4ee5$a+1$\u4e5f\u53ef\u4ee5$b+1$\uff0c\u8c01\u5148\u4f7f\u5f97$a^b >= n$\u5219\u8f93\u3002\n\n\u7531\u4e8e\u9898\u76ee\u7ed9\u7684$n$\u5e76\u4e0d\u5927\uff0c$1e9$\u7684\u8303\u56f4\uff0c\u5982\u679c\u4e0d\u8003\u8651$a==1$ or $b==1$\u7684\u60c5\u51b5\u4e0b\n\na\u6700\u5927\u4e3a$sqrt (n)$ ,b\u6700\u5927\u4e3a$ln(n) / ln(2)$\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5904\u7406\u51fa\u6240\u6709\u7684$a > 1$ && $b > 1$\u7684\u60c5\u51b5\uff0c$dp[i][j]$\u8868\u793a\u5f53\u524d\u5c40\u9762\u4e3a $i ^ j$\u4e0b\u7684\u8f93\u8d62\u60c5\u51b5\uff0c\u8bb0\u5fc6\u5316\u641c\u7d22\u4e00\u4e0b\u3002\n\n\u7136\u540e\u4fbf\u662f\u8003\u8651\u7279\u6b8a\u60c5\u51b5\n\n\u5982\u679c $a == 1$ && $b > 1$\uff0c\u8fd9\u79cd\u60c5\u51b5\u53ef\u80fd\u5bfc\u81f4\u5e73\u5c40\uff0c\u4fbf\u662f\u4e24\u4e2a\u8f6e\u6d41\u53ea\u5728b\u4e0a\u64cd\u4f5c\uff0c\u5bfc\u81f4\u7ed3\u679c\u4e00\u76f4\u4e3a1\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u6a21\u62df\u5f53\u524d\u662f\u5426\u8003\u8651\u64cd\u4f5ca\uff0c\u7531\u4e8e$a > 1$ && $b > 1$\u6240\u6709\u60c5\u51b5\u7684\u8f93\u8d62\u5df2\u7ecf\u5904\u7406\u8fc7\u4e86\u3002\n\n\u6240\u4ee5\u53ea\u8981\u5f53\u524d$a + 1$ , $b$\u662f\u4e2a\u5fc5\u8d25\u6001\uff0c\u5219\u4f1a\u8003\u8651\u64cd\u4f5c\u3002\u5426\u5219\u53ef\u80fd\u662f\u5e73\u5c40\u3002\u5f53\u7136\u4e86a\u4e5f\u662f\u6709\u4e2a\u4e0a\u9650\u7684\u3002\u76f4\u63a5\u679a\u4e3e\u6a21\u62df\u5c31\u884c\u3002\n\n\n\n\u5982\u679c$b == 1$ && $a > 1$\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u540c\u7406\u3002\n\n\u679a\u4e3e\u6a21\u62df\u5f53\u524d\u662f\u5426\u8003\u8651\u64cd\u4f5cb\uff0c\u5982\u679c$a$ , $b + 1$\u662f\u4e2a\u5fc5\u8d25\u6001\uff0c\u90a3\u4e48\u4f1a\u8003\u8651\u64cd\u4f5c\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5904\u7406\u5230\u4e0a\u754c$sqrt(n)$\uff0c\u56e0\u4e3a\u4e00\u65e6 $a > sqrt (n)$\uff0c\u53ea\u8981\u64cd\u4f5c$b$\uff0c\u4fbf\u4f1a\u5931\u8d25\u3002\u540e\u9762\u7684\u5c40\u9762\u5c31\u5df2\u7ecf\u786e\u5b9a\u4e86\u3002\n\n\n\n\u5982\u679c $a == 1$ && $b == 1$\uff0c\u5148\u624b\u64cd\u4f5c$a$\u7684\u8bdd\uff0c\u4fbf\u6210\u4e86$a > 1$ && $b == 1$\u7684\u5c40\u9762\uff0c\u64cd\u4f5cb\u7684\u8bdd\u4fbf \u6210\u4e86$a == 1$ && $b > 1$\u7684\u5c40\u9762\u3002\n\n\u4e24\u79cd\u60c5\u51b5\u90fd\u5904\u7406\u4e00\u4e0b\uff0c\u5982\u679c\u6709\u5fc5\u80dc\uff0c\u80af\u5b9a\u5148\u624b\u80dc\uff0c\u5426\u5219\u5982\u679c\u6709\u5e73\u5c40\uff0c\u5219\u8003\u8651\u5e73\u5c40\uff0c\u5426\u5219\u5148\u624b\u8d25\u3002\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <map>\n#include <vector>\n#include <string>\n#include <queue>\n#include <cmath>\n#include <algorithm>\n#define Key_value ch[ch[root][1]][0]\nusing namespace std;\ntypedef long long LL;\nconst int N = 35000;\nconst int M = 31;\nint a , b , n , dp[N][M];\n// a ^ b >= n ? true : false\nbool check (int a , int b , int n) {\n    LL ret = 1LL;\n    for (int i = 0 ; i < b ; i ++) {\n        ret = ret * a;\n        if (ret <= 0 || ret >= n) \n            return true;\n    }\n    return false;\n}\nint dfs (int a , int b) {\n    if (dp[a][b] != -1) return dp[a][b];\n    if (check (a , b , n)) {\n        return dp[a][b] = 1;\n    }\n    int ret = 0;\n    ret |= ! dfs (a + 1 , b);\n    ret |= ! dfs (a , b + 1);\n    return dp[a][b] = ret;\n}\nbool b_is_one (int a , int b = 1) {\n    int up = sqrt (n - 0.0000001);\n    int turn = 0;\n    while (a <= up) {\n        if (dp[a][b + 1] == 0) {\n            return turn == 0;\n        }\n        a ++;turn = 1 - turn;\n    }\n    int remain = n - 1 - a;\n    turn = (turn + remain) % 2;\n    return turn;\n}\nint a_is_one (int b , int a = 1) {\n    if (check (a , b , n)) return 0;\n    else {\n        int turn = 0;\n        for ( ; !check (2 , b , n) ; b ++) {\n            if (dp[a + 1][b] == 0) {\n                if (turn == 0) return 1;\n                else return -1;\n            } \n            turn = 1 - turn;\n        }\n        return 0;\n    }\n}\nint main () {\n    #ifndef ONLINE_JUDGE\n        freopen (\"input.txt\" , \"r\" , stdin);\n        // freopen (\"ouput.txt\" , \"w\" , stdout);\n    #endif\n    memset (dp , -1 , sizeof (dp));\n    cin >> a >> b >> n;\n    if (check (a , b , n)) {\n        puts (\"Masha\");\n        return 0;\n    }\n    for (int i = 2 ; i < N ; i ++) {\n        for (int j = 2 ; j < M ; j ++) {\n            dp[i][j] = dfs (i , j);\n        }\n    }\n    if (a !=1 && b != 1) {\n        puts (dp[a][b] ? \"Masha\" : \"Stas\");\n        return 0;\n    }\n    if (a == 1 && b == 1) {\n        int c = a_is_one (b + 1) , d = b_is_one (a + 1);\n        if (c < 0 || d == 0) puts (\"Masha\");\n        else if (c == 0) puts (\"Missing\");\n        else puts (\"Stas\");\n    }\n    else if (b == 1) {\n        puts (b_is_one (a) ? \"Masha\" : \"Stas\");\n    }\n    else if (a == 1) {\n        int c = a_is_one(b);\n        if (c == 0) puts (\"Missing\");\n        else if (c == 1) puts (\"Masha\");\n        else puts (\"Stas\");\n    }\n    return 0;\n}\n\n```\n\u5982\u6709\u9519\u8bef\uff0c\u8bf7\u65a7\u6b63\uff01",
        "postTime": 1585263220,
        "uid": 167431,
        "name": "xlqs23",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 CF39E \u3010What Has Dirichlet Got to Do with That?\u3011"
    }
]