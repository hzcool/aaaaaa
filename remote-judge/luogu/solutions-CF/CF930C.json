[
    {
        "content": "### Problem\n\n\u9898\u76ee\u5927\u610f\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u603b\u533a\u95f4 $[1,m]$ \u548c\u4e00\u4e9b\u5c0f\u533a\u95f4 $[l_i,r_i]$\uff0c\u8be2\u95ee\u8005\u4e00\u6b21\u8be2\u95ee\u53ef\u4ee5\u8be2\u95ee\u672a\u88ab\u8be2\u95ee\u7684\u6574\u6570 $k$\uff0c\u4f1a\u5f97\u5230 $k$ \u5728\u6240\u6709\u5c0f\u533a\u95f4\u4e2d\u7684\u6b21\u6570\u3002\u95ee\u4f60\u6700\u591a\u8be2\u95ee\u591a\u5c11\u6b21\u4e4b\u540e\uff0c\u8be2\u95ee\u8005\u4ecd\u4e0d\u80fd\u786e\u5b9a\u6ca1\u6709\u4e00\u4e2a\u603b\u533a\u95f4\u5185\u7684\u6570\u88ab\u6240\u6709\u5c0f\u533a\u95f4\u5305\u542b\u3002\u4fdd\u8bc1\u7684\u786e\u6ca1\u6709\u4e00\u4e2a\u8fd9\u6837\u7684\u6570\uff0c\u4e14\u8be2\u95ee\u8005\u4e0d\u77e5\u9053\u6709\u591a\u5c11\u4e2a\u5c0f\u533a\u95f4\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a $n,m \\leq 10^5$\u3002\n\n### Solution\n\n\u9898\u76ee\u63cf\u8ff0\u975e\u5e38\u62d7\u53e3\u548c\u96be\u7406\u89e3\u3002\n\n\u89e3\u91ca\u4e00\u4e0b\u5c31\u662f\u8fd9\u6837\u7684\uff0c\u6700\u591a\u591a\u5c11\u6b21\u4e0d\u91cd\u590d\u8be2\u95ee\u4e4b\u540e\uff0c\u4f60\u5c31\u80fd\u4fdd\u8bc1\u6240\u6709\u5728\u603b\u533a\u95f4\u91cc\u7684\u6570\uff0c\u81f3\u5c11\u4e0d\u5b58\u5728\u4e8e\u4e00\u4e2a\u5c0f\u533a\u95f4\u5185\u3002\u8f93\u51fa\u8fd9\u4e2a\u6b21\u6570 $-1$\u3002\n\n\u6211\u4eec\u5148\u6765\u8003\u8651\u4e00\u4e0b\u4ec0\u4e48\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u4fdd\u8bc1\u6240\u6709\u603b\u533a\u95f4\u91cc\u7684\u6570\uff0c\u81f3\u5c11\u4e0d\u5b58\u5728\u4e8e\u4e00\u4e2a\u5c0f\u533a\u95f4\u5185\u3002\n\n\u6765\u770b\u6837\u4f8b\u4e8c\uff08\u6837\u4f8b\u4e00\u5565\u90fd\u770b\u4e0d\u51fa\uff09\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/j9lwk2wl.png)\n\n\u800c\u6837\u4f8b\u7ed9\u51fa\u7684\u662f\uff0c\u9009\u62e9 $1,2,3,5,6$ \u65f6\u4ecd\u4e0d\u80fd\u786e\u5b9a\u6240\u6709\u6574\u6570\u90fd\u6709\u4e00\u4e2a\u5c0f\u533a\u95f4\u4e0d\u5305\u542b\u5b83\u3002\u4e5f\u5c31\u662f\u8fd9\u65f6\u5019\u8be2\u95ee\u8005\u8ba4\u4e3a\u53ef\u80fd\u6709\u6574\u6570\u88ab\u6240\u6709\u5c0f\u533a\u95f4\u5305\u542b\u3002\u5bb9\u6613\u7406\u89e3\uff1a\u5f53\u53ea\u8be2\u95ee $1,2,3,5,6$ \u65f6\uff0c\u8be2\u95ee\u8005\u53ef\u4ee5\u8ba4\u4e3a\uff0c\u533a\u95f4\u662f $[1,6],[2,6]$\uff0c\u65e2\u6ee1\u8db3\u8be2\u95ee\u5f97\u51fa\u7ed3\u8bba\uff0c\u53c8\u5b58\u5728 $2,3,4,5,6$ \u88ab\u6240\u6709\u533a\u95f4\u5305\u542b\uff0c\u6240\u4ee5\u8fd9\u79cd\u60c5\u51b5\u662f\u4e0d\u786e\u5b9a\u7684\u3002\n\n\u800c\u4e3a\u4ec0\u4e48\u5f97\u77e5 $1,2,3,4,5,6$ \u7684\u7b54\u6848\u540e\u8be2\u95ee\u8005\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u6240\u6709\u6570\u90fd\u5fc5\u5b9a\u5b58\u5728\u4e00\u4e2a\u5c0f\u533a\u95f4\u4e0d\u5305\u542b\u5b83\u4e86\u5462\uff1f\u53ef\u4ee5\u53d1\u73b0\uff0c$4$ \u7684\u8be2\u95ee\u6b21\u6570\u5c0f\u4e8e $3$ \u7684\u4e5f\u5c0f\u4e8e $5$ \u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u8c61 $4$ \u628a\u6574\u4e2a\u5e8f\u5217\u5206\u6210\u4e86\u4e24\u6bb5\u3002\u53ef\u4ee5\u8bc1\u660e\u4e00\u5b9a\u6709\u4e00\u4e2a\u533a\u95f4 $[l_i,r_i],l_i>4$ \u548c\u4e00\u4e2a\u533a\u95f4 $[l_j,r_j],r_j<4$\u3002\n\n\u8bc1\u660e\uff1a\u5229\u7528\u53cd\u8bc1\u6cd5\uff0c\u82e5\u6240\u6709\u533a\u95f4\u90fd\u6ee1\u8db3 $[l_i,r_i],l_i \\leq 4$\uff0c\u4e14 $[l_j,r_j],r_j \\geq 4$\uff0c\u90a3\u4e48 $4$ \u7684\u6b21\u6570\u5fc5\u7136\u4f1a\u5927\u4e8e\u7b49\u4e8e $3,5$ \u7684\u6b21\u6570\uff0c\u77db\u76fe\uff0c\u6240\u4ee5\u5f97\u8bc1\u3002\n\n$4$ \u5de6\u8fb9\u90e8\u5206\u80af\u5b9a\u90fd\u4e0d\u5728\u4e00\u4e2a $[l_i,r_i],l_i>4$ \u7684\u4e00\u4e2a\u533a\u95f4\u5185\uff0c\u53f3\u8fb9\u540c\u7406\uff0c\u6240\u4ee5\u8be2\u95ee\u8005\u5c31\u53ef\u4ee5\u80af\u5b9a\u6240\u6709\u6570\u90fd\u6709\u4e00\u4e2a\u533a\u95f4\u4e0d\u5305\u542b\u5b83\u3002\n\n\u53d1\u73b0\u4e86\u4ec0\u4e48\uff1f\u82e5\u5b58\u5728 $i$ \u4f7f\u5f97 $f_i<f_{i-1}$ \u4e14 $f_i<f_{i+1}$\uff08$f_i$ \u8868\u793a\u51fa\u73b0\u6b21\u6570\uff09\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u786e\u5b9a\u6240\u6709\u6570\u90fd\u81f3\u5c11\u4e0d\u88ab\u4e00\u4e2a\u533a\u95f4\u5305\u542b\u3002\n\n\u6211\u4eec\u8981\u6c42\u6700\u591a\u6b21\u6570\uff0c\u5f88\u660e\u663e\u4e86\uff0c\u5c31\u662f\u8981\u6c42\u4e00\u4e2a\u6700\u957f\u4e0a\u51f8\u7684\u6b21\u6570\u5e8f\u5217\uff0c\u4e0d\u5b58\u5728 $i$ \u6ee1\u8db3 $f_i<f_{i-1}$ \u4e14 $f_i<f_{i+1}$\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u4eec\u5176\u5b9e\u5c31\u662f\u5728\u6c42\u4e24\u6bb5\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u548c\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe $dp1_i$ \u8868\u793a $[1,i]$ \u7684\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\uff0c$dp2_i$ \u8868\u793a $[i,m]$ \u7684\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u3002\u7b54\u6848\u5c31\u662f $\\max\\limits_{i=1}^m (dp1_i+dp2_i)$\u3002\n\n\u81f3\u4e8e\u7edf\u8ba1\u51fa\u73b0\u6b21\u6570\uff0c\u5229\u7528\u5dee\u5206\u7684\u601d\u60f3\uff0c\u5f88\u5feb\u80fd\u591f\u89e3\u51b3\u3002\n\n\u8ba1\u7b97\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u53ef\u4ee5\u7528\u4e8c\u5206\u7684\u65b9\u6cd5\u5728 $O(n \\log n)$ \u7684\u590d\u6742\u5ea6\u5185\u6c42\u51fa $dp1_i$\uff0c\u7136\u540e\u518d\u53cd\u8fc7\u6765\u505a\u4e00\u904d\u5c31\u597d\u4e86\u3002\n\n### Code\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e5+7232;\nint n,m,l,r,ans;\nint s[N],q[N],head,dp1[N],dp2[N];\nint mx(int x,int y){return x>y?x:y;}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d%d\",&l,&r);\n        ++s[l],--s[r+1];//\u5dee\u5206\u601d\u60f3\u5feb\u901f\u6c42\u6b21\u6570\n    }\n    for(int i=1;i<=m;i++) s[i]=s[i]+s[i-1];\n    head=0;\n    for(int i=1;i<=m;i++)//\u6c42\u6b63\u5411\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\n    {\n        if(s[i]>=q[head]) q[++head]=s[i];\n        else \n        {\n            if(s[i]>q[1])\n            {\n                l=1,r=head;int sum;\n                while(l<=r)\n                {\n                    int mid=l+r>>1;\n                    if(q[mid]>s[i]) sum=mid,r=mid-1;\n                    else l=mid+1; \n                }\n                q[sum]=s[i];\n            }\n        }\n        dp1[i]=head;\n    }\n    head=0;\n    for(int i=m;i>=1;i--)\n    {\n        if(s[i]>=q[head]) q[++head]=s[i];\n        else \n        {\n            if(s[i]>q[1])\n            {\n                l=1,r=head;int sum;\n                while(l<=r)\n                {\n                    int mid=l+r>>1;\n                    if(q[mid]>s[i]) sum=mid,r=mid-1;\n                    else l=mid+1; \n                }\n                q[sum]=s[i];\n            }\n        }\n        dp2[i]=head;\n    }\n    for(int i=1;i<=m;i++) ans=mx(ans,dp1[i]+dp2[i]-1);//-1\u662f\u56e0\u4e3a\u82e5i\u4e3a\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u7684\u5934\u548c\u5c3e\u5404\u7b97\u4e86\u4e00\u6b21\uff0c\u7b97\u4e86\u4e24\u6b21\uff0c\u82e5i\u4e0d\u518d\u5e8f\u5217\u4e2d\uff0c\u90a3\u80af\u5b9a\u4e0d\u4f18\uff0c\u6240\u4ee5-1\u4e5f\u6ca1\u6709\u5f71\u54cd\n    printf(\"%d\\n\",ans);\n}\n```\n",
        "postTime": 1668588588,
        "uid": 478885,
        "name": "lenlen",
        "ccfLevel": 6,
        "title": "CF930C Teodor is not a liar! \u9898\u89e3"
    },
    {
        "content": "# \u524d\u8a00\uff1a\n\n\u672c\u7bc7\u53ea\u662f\u4e00\u4e2a\u849f\u84bb\u8be6\u7ec6\u7684\u603b\u7ed3\uff0c\u5927\u4f6c\u53ef\u4ee5\u81ea\u884c\u8df3\u8fc7~~\n\n\n------------\n\n\n------------\n\n# \u4e00.\u5ba1\u9898\n\n### \u5927\u610f\uff1a\n\n\u7ed9\u51fa\u4e00\u4e2a $1$ ~ $m$ \u7684\u6570\u5217\u548c $n$ \u4e2a\u5c0f\u533a\u95f4\uff0c\n    \n    \n  \u6bcf\u6b21\u8be2\u95ee\u4e00\u4e2a\u6570\u4f1a\u7ed9\u51fa\u8fd9\u4e2a\u6570\u5728\u51e0\u4e2a\u5c0f\u533a\u95f4\u5185\uff0c\n    \n   \u95ee\u6700\u591a\u8bbf\u95ee\u51e0\u6b21\u540e\uff0c \n   \u4ecd\u4e0d\u80fd\u786e\u5b9a**\u5e76\u4e0d\u5b58\u5728\u4e00\u4e2a\u6570\u88ab\u6240\u6709\u5c0f\u533a\u95f4\u5305\u542b**\u3002\n   \n\n\n------------\n\n\n### \u601d\u8003\uff1a\n\n\u521d\u770b\u4e4b\u4e0b\uff0c\u4f3c\u4e4e\u6beb\u65e0\u5934\u7eea\uff0c\u4f46\u6211\u4eec\u770b\u9898\u76ee\u6240\u8981\u6c42\u7684\u4e1c\u897f :\n\n\u4e0d\u80fd\u786e\u5b9a**\u5e76\u4e0d\u5b58\u5728\u4e00\u4e2a\u6570\u88ab\u6240\u6709\u5c0f\u533a\u95f4\u5305\u542b**\u3002\n\n\u90a3\u4ec0\u4e48\u65f6\u5019\u6211\u4eec\u80fd\u786e\u5b9a\u5b58\u5728\u4e00\u4e2a\u6570\u88ab\u6240\u6709\u7684\u5c0f\u533a\u95f4\u5305\u542b\uff0c\u4ec0\u4e48\u65f6\u5019\u4e0d\u80fd\u786e\u5b9a\u5462\uff1f\n\n\u5bf9\u7740\u6837\u4f8b $2$ \u6a21\u62df\u4e00\u4e0b\uff1a\n\n\n\n| \u6570\u5b57 | 1 | 2 | 3 | 4 | 5 | 6 |\n| :----------: | :----------: | :----------: | :----------: | :----------: | :----------: | :----------: |\n| \u51fa\u73b0\u6b21\u6570 | 1 | 2 | 2 | 1 | 2 | 2 |\n\u5f53\u6211\u4eec\u77e5\u9053 $3$ ~ $5$ \u7684\u51fa\u73b0\u6b21\u6570\u540e\uff0c\u53ef\u4ee5\u786e\u5b9a $4$ \u4e00\u5b9a\u662f\u4e0d\u88ab\u6240\u6709\u533a\u95f4\u5305\u542b\uff0c\u56e0\u4e3a $4$ **\u4e00\u5b9a\u4e0d\u88ab\u5305\u542b $3$ \u548c $5$ \u7684\u533a\u95f4\u6240\u5305\u542b**\u3002\n\n\u5f53\u6211\u4eec\u77e5\u9053 $1$ ~ $4$ \u7684\u51fa\u73b0\u6b21\u6570\u65f6\uff0c\u5e76**\u4e0d\u80fd\u786e\u5b9a** $2$ \u548c $3$ \u662f\u5426\u88ab\u6240\u6709\u533a\u95f4\u5305\u542b\u3002\n\n\u56e0\u6b64\u6211\u4eec\u5f97\u51fa\u89c4\u5f8b\uff1a\n\n **\u82e5\u5b58\u5728\u6570\u5b57 $i<j<k$\uff0c\u4e14\u51fa\u73b0\u6b21\u6570 $N_i>N_j<N_k$\uff0c\u53ef\u4ee5\u786e\u5b9a $j$ \u4e00\u5b9a\u4e0d\u88ab\u6240\u6709\u533a\u95f4\u5305\u542b\uff08\u5373\u51fa\u73b0 $j$ \u4e3a\u8c37\u5e95\u7684\u5411\u4e0b\u51f8\u7684\u5355\u5cf0\uff09**\u3002\n\n\n **\u9898\u76ee\u6c42\u8be2\u95ee\u540e\u4ecd\u4e0d\u786e\u5b9a\u7684\u6700\u591a\u6b21\u6570\uff0c\u4e5f\u5c31\u662f\u53cd\u8fc7\u6765\uff0c\u6c42\u5411\u4e0a\u51f8\u7684\u7684\u5355\u5cf0\u7684\u6700\u957f\u957f\u5ea6**\n\n------------\n\n------------\n\n\n\n# \u4e8c.\u5dee\u5206\n   \u524d\u9762\u8bf4\u8981\u7528\u5230\u6bcf\u4e2a\u6570\u51fa\u73b0\u5728\u4e0d\u540c\u533a\u95f4\u7684\u6b21\u6570\uff0c\u8be5\u5982\u4f55\u7edf\u8ba1\u5462\uff1f\n     \n   \u66b4\u529b\u8ba1\u7b97\u5f53\u7136\u4e0d\u884c\uff0c\u4fbf\u8981\u7528\u5230**\u5dee\u5206**\u7684\u6280\u5de7\u3002\n###  1. **\u4f5c\u7528**\n \n\u5728\u7ed9\u5b9a\u51e0\u4e2a\u533a\u95f4\uff0c\u7edf\u8ba1\u6bcf\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\u3002\n       \n###  2. **\u5b9e\u73b0**\n \n\u7c7b\u4f3c\u4e8e**\u524d\u7f00\u548c**\uff08\u5b9e\u9645\u4e0a\u5dee\u5206\u662f\u524d\u7f00\u548c\u7684**\u9006\u64cd\u4f5c**\uff09\u3002\n\n       \n  \u5f53\u7ed9\u5b9a\u7ed9\u5b9a\u533a\u95f4 $[l,r]$ \u65f6\uff0c\u5c06\u5dee\u5206\u6570\u7ec4 $diff[l]$ \u52a0\u4e0a1\uff0c\u5c06 $diff[r+1]$ \u51cf\u53bb1(\u53ef\u4ee5\u81ea\u5df1\u5217\u6570\u636e\u53d1\u73b0\u8fd9\u79cd\u65b9\u5f0f\u7684\u6b63\u786e\u6027\uff09\u3002\n      \n   \u6700\u540e\u7c7b\u4f3c\u4e8e\u524d\u7f00\u548c\uff0c\u5c06\u5dee\u5206\u6570\u7ec4\u52a0\u8d77\u6765\u3002\n       \n$$diff[i]+=diff[i-1]$$\n       \n$diff[i]$ \u5373\u4e3a\u7b2c $i$ \u4e2a\u6570\u51fa\u73b0\u6b21\u6570\u3002\n       \n###  3.**\u4f8b\u9898**\n- [P3406 \u6d77\u5e95\u9ad8\u94c1](https://www.luogu.com.cn/problem/P3406)\n- [P1083 [NOIP2012 \u63d0\u9ad8\u7ec4] \u501f\u6559\u5ba4](https://www.luogu.com.cn/problem/P1083)\n\n\n------------\n\n# \u4e09.\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\n  \u6c42\u51fa\u6700\u957f\u5355\u5cf0\u957f\u5ea6\u8981\u6c42\u51fa\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\uff0c\u4e0b\u9762\u4ecb\u7ecd\u4e00\u79cd\u6548\u7387\u9ad8\u7684\u65b9\u6cd5\u3002\n     \n### 1.\u5b9e\u73b0\n\uff081\uff09\u7528 $up$ \u6570\u7ec4\u5b58\u653e\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u3002\n     \n   \uff082\uff09\u6bd4\u8f83 $a[i]$ \u548c $up$ \u6570\u7ec4\u6700\u540e\u4e00\u4f4d\uff0c\u4e0d\u4e0b\u964d\u5219\u76f4\u63a5\u63a5\u5728 $up$ \u6570\u7ec4\u7684\u540e\u9762\u3002\n     \n   \uff083\uff09\u5426\u5219\u5728 $up$ \u6570\u7ec4\u4e2d\u4e8c\u5206\u67e5\u627e\u7b2c\u4e00\u4e2a\u5927\u4e8e $a[i]$ \u7684\u6570\uff0c\u5e76\u7528 $a[i]$ \u4ee3\u66ff\u5176\uff0c\u6b63\u786e\u6027\u53ef\u4ee5\u5728\u4e0b\u9762\u7ed9\u7684\u4f8b\u9898\u9898\u89e3\u4e2d\u770b\u3002\n     \n### 2.\u4f8b\u9898\n- [P1020 [NOIP1999 \u666e\u53ca\u7ec4] \u5bfc\u5f39\u62e6\u622a](https://www.luogu.com.cn/problem/P1020)\n\n- [P1091 [NOIP2004 \u63d0\u9ad8\u7ec4] \u5408\u5531\u961f\u5f62](https://www.luogu.com.cn/problem/P1091)\n\n\n------------\n# \u56db.\u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nconst int N=100005;\ntypedef long long ll;\n\nll n,m,a[N],up[N],s1[N],s2[N],len,ans;\n\nint main()\n{\n\tscanf(\"%lld%lld\",&n,&m);\n\t//\u5dee\u5206\u6c42\u6bcf\u4e2a\u6570\u5b57\u88ab\u51e0\u4e2a\u533a\u95f4\u5305\u542b \n\tfor(ll i=1;i<=n;i++)\n\t{\n\t\tll l,r;\n\t\tscanf(\"%lld%lld\",&l,&r);\n\t\ta[l]++,a[r+1]--;\n\t}\n\tfor(ll i=1;i<=m;i++)\n\t\ta[i]+=a[i-1];\n\t//\u4ece\u524d\u5f80\u540e\u6c42\u4e00\u904d\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6 \n\tmemset(up,0ll,sizeof(up));\n\tlen=1;\n\tup[1]=a[1];\n\ts1[1]=1;//s1\u4e3a\u6bcf\u4e2a\u6570\u5728\u4ece\u524d\u5f80\u540e\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u957f\u5ea6\n\tfor(ll i=2;i<=m;i++)\n\t{\n\t\tif(a[i]>=up[len])\n\t\t{\n\t\t\tup[++len]=a[i];\n\t\t\ts1[i]=len;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tll d=upper_bound(up+1,up+len+1,a[i])-up;\n\t\t\tup[d]=a[i];\n\t\t\ts1[i]=d;\n\t\t}\n\t}\n\t//\u4ece\u540e\u5f80\u524d\u6c42\u4e00\u904d\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\n\tlen=1;\n\tmemset(up,0ll,sizeof(up));\n\tup[1]=a[m];\n\ts2[m]=1;//s2\u4e3a\u6bcf\u4e2a\u6570\u5728\u4ece\u540e\u5f80\u524d\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u957f\u5ea6\n\tfor(ll i=m-1;i>=1;i--)\n\t{\n\t\tif(a[i]>=up[len])\n\t\t{\n\t\t\tup[++len]=a[i];\n\t\t\ts2[i]=len;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tll d=upper_bound(up+1,up+len+1,a[i])-up;\n\t\t\tup[d]=a[i];\n\t\t\ts2[i]=d;\n\t\t}\n\t}\n\t//\u6c42\u6700\u957f\u5355\u5cf0\u7684\u957f\u5ea6\uff0c\u5373\u4e3a\u6700\u540e\u7684\u7b54\u6848\n\tfor(ll i=1;i<=m;i++)\n\t\tans=max(ans,s1[i]+s2[i]-1);//\u6ce8\uff1b-1\u662f\u56e0\u4e3a\u628a\u81ea\u5df1\u7b97\u4e86\u4e24\u6b21\n\tprintf(\"%lld\",ans); \n\treturn 0;\n}\n```\n\n     \n\n",
        "postTime": 1611666777,
        "uid": 223989,
        "name": "\u9f99\u6f5c\u6708\u5341\u4e94",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF930C \u3010Teodor is not a liar!\u3011"
    },
    {
        "content": "//\u4fee\u590d\u4e86\u4e00\u4e2a\u624b\u8d31,\u5982\u679c\u8fd8\u6709\u624b\u8d31\u8bf7\u8054\u7cfb\u6211  \n\u9898\u610f:Teodor\u6709$n$\u6761\u7ebf\u6bb5,\u7aef\u70b9\u90fd\u662f\u6b63\u6574\u6570\u4e14\u5728$[1,m]$\u4e4b\u95f4.\u4ed6\u53d1\u73b0\u6ca1\u6709\u4e00\u4e2a\u6574\u70b9\u6ee1\u8db3\u5728\u6240\u6709\u7ebf\u6bb5\u4e0a.\u4ed6\u628a\u8fd9\u4e2a\u4e8b\u5b9e\u544a\u8bc9Sasha\u7136\u800c\u5979\u4e0d\u4fe1.Sasha\u53ef\u4ee5\u5411Teodor\u8be2\u95ee\u82e5\u5e72\u4e2a\u6574\u70b9$x_i$,Teodor\u4f1a\u56de\u7b54$cnt(x_i)$\u8868\u793a$x_i$\u5728\u591a\u5c11\u6761\u7ebf\u6bb5\u4e0a.\n\n\u6c42\u4e00\u4e2a\u6700\u5927\u7684\u96c6\u5408$S$,\u6ee1\u8db3\u8be2\u95ee$\\forall x\\in S$\u7684$cnt(x)$\u540e\u4ecd\u7136\u4e0d\u80fd\u4fdd\u8bc1\u6ca1\u6709\u4e00\u4e2a\u6574\u70b9\u6ee1\u8db3\u5728\u6240\u6709\u7ebf\u6bb5\u4e0a.(\u6ce8\u610fSasha\u662f\u4e0d\u77e5\u9053\u6709\u591a\u5c11\u6761\u7ebf\u6bb5\u7684)\n\n\u89e3:\u4e4d\u4e00\u770b\u5f88\u4e0d\u53ef\u505a.\u4f46\u53ef\u4ee5\u53d1\u73b0\u80fd\u5224\u65ad\"\u6ca1\u6709\u4e00\u4e2a\u6574\u70b9\u6ee1\u8db3\u5728\u6240\u6709\u7ebf\u6bb5\u4e0a\"\u5f53\u4e14\u4ec5\u5f53\u5b58\u5728\u81f3\u5c11\u4e00\u7ec4$(x_1,x_2,x_3)$\u6ee1\u8db3$x_1<x_2<x_3,cnt(x_2)<cnt(x_1),cnt(x_2)<cnt(x_3)$.  \n\u611f\u6027\u7406\u89e3:$x_1,x_2,x_3$\u6700\u591a\u540c\u65f6\u88ab$cnt(x_2)$\u6761\u7ebf\u6bb5\u8986\u76d6,\u90a3\u4e48\u7ecf\u8fc7$x_1$\u7684\u53e6\u5916$cnt(x_1)-cnt(x_2)$\u6761\u7ebf\u6bb5\u65e0\u6cd5\u8986\u76d6\u5230$x_3$\u53ca\u5176\u53f3\u8fb9\u7684\u6240\u6709\u70b9.\u53cd\u4e4b\u4ea6\u7136.\n\n\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42\u4e00\u4e2a\u6700\u957f\u5b50\u5e8f\u5217\u6ee1\u8db3\u4e0d\u5b58\u5728\u4e00\u7ec4$(x_1,x_2,x_3)$\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6.\u8fd9\u7b49\u4ef7\u4e8e\u6c42\u539f\u5e8f\u5217(\u5373$cnt$,\u6ce8\u610f$cnt$\u53ef\u4ee5\u76f4\u63a5\u5dee\u5206\u9884\u5904\u7406)\u7684\u6700\u957f\u5355\u5cf0\u5b50\u5e8f\u5217\u957f\u5ea6.\u8fd9\u5f88\u5bb9\u6613dp\u6c42\u89e3.  \n$f(0/1,i,j)$\u8868\u793a\u8003\u8651\u524d$i$\u4e2a\u5143\u7d20,\u4ee5$j$\u7ed3\u5c3e\u7684\u6700\u957f\u5355\u5cf0\u5e8f\u5217\u957f\u5ea6,\u4e14\u73b0\u5728\u5728\u9012\u589e/\u9012\u51cf \u6bb5.  \n$$f(0,i,j)=\\max_{k\\le j} f(0,i-1,k)+1$$\n$$f(1,i,j)=\\max\\{f(0,i,j),\\max_{k\\ge j}f(1,i-1,k) \\}+1$$\n\u7528\u7ebf\u6bb5\u6811\u4f18\u5316\u5373\u53ef.\u65f6\u95f4\u590d\u6742\u5ea6$\\mathcal O(m\\log n)$\n```cpp\n/**********/\n#define MAXN 200011\nll n,m;\nstruct Segment_Tree\n{\n    ll t[MAXN<<2|1];\n    #define rt t[num]\n    #define tl t[num<<1]\n    #define tr t[num<<1|1]\n    void modify(un pos,ll k,un l=0,un r=n,un num=1)\n    {\n        if(l==r){rt=k;return;}\n        un mid=(l+r)>>1;\n        if(pos<=mid)modify(pos,k,l,mid,num<<1);\n        else modify(pos,k,mid+1,r,num<<1|1);\n        rt=max(tl,tr);\n    }\n    ll Qmax(un ql,un qr,un l=0,un r=n,un num=1)\n    {\n        if(ql<=l&&r<=qr)return rt;\n        un mid=(l+r)>>1;\n        ll ans=0;\n        if(ql<=mid)umax(ans,Qmax(ql,qr,l,mid,num<<1));\n        if(qr>mid)umax(ans,Qmax(ql,qr,mid+1,r,num<<1|1));\n        return ans;\n    }\n}t0,t1;\nll a[MAXN];\nint main()\n{\n    n=read(),m=read();\n    for(ll i=1;i<=n;++i)\n    {\n        ll l=read(),r=read();\n        ++a[l],--a[r+1];\n    }\n    for(ll i=1;i<=m;++i)a[i]+=a[i-1];\n    for(ll i=1;i<=m;++i)\n    {\n        ll v=t0.Qmax(0,a[i]);\n        t0.modify(a[i],v+1);\n        t1.modify(a[i],max(t1.Qmax(a[i],n),v)+1);\n    }\n    printf(\"%lld\",max(t0.Qmax(0,n),t1.Qmax(0,n)));\n    return 0;\n}\n```",
        "postTime": 1585887603,
        "uid": 73142,
        "name": "\u4e07\u5f18",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 CF930C \u3010Teodor is not a liar!\u3011"
    },
    {
        "content": "\u770b\u4e86\u770b\u6ca1\u6709\u4eba\u5199\u8be6\u7ec6\u7684\u8bc1\u660e\u2026\u2026\u53ef\u80fd\u89c9\u5f97\u592a\u7b80\u5355\u4e86\uff1f\n\n\u53e6\u5916\uff0c\u6211\u4e0d\u89c9\u5f97\u9898\u9762\u4e0a\u7684\u7ffb\u8bd1\u662f\u7ed9\u4eba\u7c7b\u9605\u8bfb\u7684\u2026\u2026\n\n> \u4e07\u8001\u7237\u7ffb\u7684\u9898\u610f\uff1a\n> \n> Teodor \u6709 $n$ \u6761\u7ebf\u6bb5,\u7aef\u70b9\u90fd\u662f\u6b63\u6574\u6570\u4e14\u5728 $[1,m]$ \u4e4b\u95f4.\u4ed6\u53d1\u73b0 **\u6ca1\u6709\u4e00\u4e2a\u6574\u70b9\u6ee1\u8db3\u5728\u6240\u6709\u7ebf\u6bb5\u4e0a**\u3002\u4ed6\u628a\u8fd9\u4e2a\u4e8b\u5b9e\u544a\u8bc9 Sasha \u7136\u800c\u5979\u4e0d\u4fe1. Sasha \u53ef\u4ee5\u5411 Teodor \u8be2\u95ee\u82e5\u5e72\u4e2a\u6574\u70b9 $x_i$ ,Teodor\u4f1a\u56de\u7b54 $cnt(x_i)$ \u8868\u793a $x_i$ \u5728\u591a\u5c11\u6761\u7ebf\u6bb5\u4e0a.\n> \n> \u63d0\u9192\uff1aSasha \u4e0d\u77e5\u9053 $n$ \u7684\u5927\u5c0f\u3002Sasha \u5f88\u806a\u660e\uff0c\u6240\u4ee5 $x_i$ \u4e92\u4e0d\u76f8\u540c\u3002\n\n---\n\n$cnt_x$ : \u6574\u6570\u70b9 $x$ \u51fa\u73b0\u5728 $cnt_x$ \u6761\u7ebf\u6bb5\u4e0a\uff08\u9898\u9762\u4e2d\u7684\u5b9a\u4e49\uff09\uff0c\u53ef\u4ee5 $O(n)$ \u5dee\u5206\u9884\u5904\u7406\u3002\n\n\u6240\u6709\u6574\u6570\u70b9\u90fd\u4e0d\u540c\u65f6\u5b58\u5728\u4e8e\u6240\u6709\u7ebf\u6bb5\u4e0a \u5176\u5b9e\u5c31\u8bf4\u660e\u6709\u81f3\u5c11\u4e24\u6761\u7ebf\u6bb5\u4e0d\u76f8\u4ea4\u3002\u4e0d\u76f8\u4ea4\u90a3\u5c31\u6709\u4e00\u4e2a\u70b9\u5728\u201c\u5206\u754c\u201c\u4e0a\u3002\u90a3\u4e48\u6216\u8bb8 \u3010\u80fd\u8bc1\u660e\u67d0\u70b9\u662f\u5206\u754c\u70b9\u3011 \u5c31\u8bf4\u660e\u6709 \u3010\u81f3\u5c11\u4e24\u6761\u7ebf\u6bb5\u4e0d\u76f8\u4ea4\u3011\uff1f\n\n\u6211\u4eec\u6709\u7ed3\u8bba\uff1a\u80fd\u5224\u65ad\u51fa\u6240\u6709\u6574\u6570\u70b9\u90fd\u4e0d\u540c\u65f6\u5b58\u5728\u4e8e\u6240\u6709\u7ebf\u6bb5\u4e0a $\\Leftrightarrow \\exists x_1<x_2<x_3$\uff0c\u6ee1\u8db3 $cnt_{x_2}<cnt_{x_1},cnt_{x_2}<cnt_{x,3}$\n\n[![LJmATx.md.png](https://s1.ax1x.com/2022/04/16/LJmATx.md.png)](https://imgtu.com/i/LJmATx)\n\n> Proof\n> \n> \u5fc5\u8981\u6027\uff1a\n> \n> \u6709\u81f3\u591a $cnt_{x_2}$ \u6761\u7ebf\u6bb5\uff08\u7ea2\u8272\uff09\u540c\u65f6\u7ecf\u8fc7 $x_1,x_3$\uff0c\u90a3\u4e48\u8fd8\u6709 $cnt_{x_1}-cnt_{x_2}$ \u6761\uff08\u6a59\u8272\uff09\u65e0\u6cd5\u5230\u8fbe $x_2$\uff0c$cnt_{x_3}-cnt_{x_2}$ \u6761\uff08\u84dd\u8272\uff09\u65e0\u6cd5\u5230\u8fbe $x_2$\uff0c\u90a3\u4e48 $x_2$ \u5c31\u6210\u4e3a\u4e86\u6a59\u8272\u548c\u84dd\u8272\u7684\u5206\u754c\u7ebf\uff0c\u6bcf\u4e2a\u6574\u6570\u70b9\u4f1a\u201c\u5c5e\u4e8e\u201d\u6a59\u8272 \u6216 \u201c\u5c5e\u4e8e\u201d\u84dd\u8272 \u6216 \u90fd\u4e0d\u5c5e\u4e8e\u3002\n> \n> \u5145\u5206\u6027\uff1a\n> \u5982\u679c\u5f53\u524d\u8fd8\u6ca1\u6709\u95ee\u51fa\u6765\u8fd9\u4e48\u4e00\u4e2a $x_2$\uff0c\u90a3\u4e48\u6839\u636e\u5f53\u524d\u95ee\u51fa\u6765\u7684\u4fe1\u606f\uff0c\u662f\u4e00\u4e2a\u5355\u5cf0\u7684\u5e8f\u5217\uff0c\u80af\u5b9a\u80fd\u6784\u9020\u51fa\u4e00\u79cd \u3010\u5b58\u5728\u4e00\u4e2a\u6574\u6570\u70b9\u540c\u65f6\u5b58\u5728\u4e8e\u6240\u6709\u7ebf\u6bb5\u4e0a\u3011 \u7684\u60c5\u51b5\u3002\uff08\u4f8b\u5982\u4e00\u5c42\u5c42\u53e0\u4e0a\u53bb\uff0c\u5cf0\u70b9\u4f1a\u5b58\u5728\u4e8e\u6240\u6709\u7ebf\u6bb5\u4e0a\uff09\n>\n> ![](https://s1.ax1x.com/2022/04/16/LJm6hT.png)\n\n\u90a3\u4e48\u6211\u4eec\u4e0d\u80fd\u6ee1\u8db3\u8fd9\u4e00\u6761\u4ef6\u7684\u6700\u5927\u95ee\u9898\u6570\uff0c\u5176\u5b9e\u5c31\u662f \u5355\u5cf0\u7684\u6700\u957f\u5e8f\u5217\u3002\n\n\u6811\u72b6\u6570\u7ec4\u6b63\u7740\u548c\u53cd\u7740\u6c42\u4e24\u904d\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u5373\u53ef\u3002\n\n\u867d\u7136\u4f46\u662f\uff0c\u8fd9\u79cd\u7ed3\u8bba\u5230\u5e95\u662f\u600e\u4e48\u60f3\u51fa\u6765\u7684\u554a/ll",
        "postTime": 1650068870,
        "uid": 106738,
        "name": "_Felix",
        "ccfLevel": 0,
        "title": "CF930C Teodor is not a liar!"
    },
    {
        "content": "### [\u9898\u76ee](https://www.luogu.com.cn/problem/CF930C)\u7b80\u8ff0\n\n$n$ \u6761\u7ebf\u6bb5\uff0c\u65ad\u70b9\u90fd\u662f\u6b63\u6574\u6570\u4e14\u90fd\u5c5e\u4e8e\u533a\u95f4 $[1,m]$\uff0cTeodor \u53d1\u73b0\u6ca1\u6709\u4e00\u4e2a\u6b63\u6574\u6570\u70b9\u5728\u6240\u6709\u7684\u7ebf\u6bb5\u4e0a\u3002Sasha \u53ef\u4ee5\u5411 Teodor \u8be2\u95ee\u82e5\u5e72\u4e2a\u6574\u70b9\uff08\u4f46 Sasha \u4e0d\u77e5\u9053\u6709\u591a\u5c11\u6761\u7ebf\u6bb5\uff09\uff0c\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\u7684\u70b9 $x$\uff0cTeodor \u4f1a\u56de\u7b54 $cnt_{x}$ \u8868\u793a $x$ \u5728\u591a\u5c11\u6761\u7ebf\u6bb5\u4e0a\u3002\u6c42\u4e00\u4e2a\u6700\u5927\u7684\u96c6\u5408 $S$ \u6ee1\u8db3\u8be2\u95ee $\u2200x\u2208S$ \u7684 $cnt_x$ \u540e\u4ecd\u7136\u4e0d\u80fd\u4fdd\u8bc1\u6ca1\u6709\u4e00\u4e2a\u6574\u70b9\u6ee1\u8db3\u5728\u6240\u6709\u7ebf\u6bb5\u4e0a\u3002\u53ea\u9700\u8981\u8f93\u51fa $S$ \u7684\u5927\u5c0f\u3002\n\n### \u601d\u8def\n\n\u9898\u76ee\u4e2d\u7684\u96c6\u5408\u662f\u8be2\u95ee\u4e86\u4efb\u610f\u96c6\u5408\u5185\u7684\u6574\u70b9\u90fd\u4e0d\u80fd\u4fdd\u8bc1\u8fd9\u4e2a\u6761\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u53cd\u7740\u60f3 \u2014\u2014 \u600e\u6837\u5224\u65ad\u300c\u6ca1\u6709\u4e00\u4e2a\u6b63\u6574\u6570\u70b9\u5728\u6240\u6709\u7684\u7ebf\u6bb5\u4e0a\u300d\u3002\n\n\u8003\u8651\u8fd9\u4e2a\u95ee\u9898\uff0c\u53ef\u4ee5\u53d1\u73b0\u5f53\u5b58\u5728\u4e00\u7ec4\u6574\u70b9 $x<y<z$ \u6ee1\u8db3 $cnt_y<cnt_x$ \u4e14 $cnt_y<cnt_z$ \u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u786e\u5b9a\u6ca1\u6709\u4e00\u4e2a\u6b63\u6574\u6570\u70b9\u5728\u6240\u6709\u7684\u7ebf\u6bb5\u4e0a\uff1a\u56e0\u4e3a\u7ebf\u6bb5\u662f\u8fde\u7eed\u7684\uff0c\u6240\u4ee5\u5f53\u6ee1\u8db3\u6761\u4ef6\u65f6\u53ea\u6709\u53ef\u80fd\u662f\u4e2d\u95f4\u7684\u70b9\u7684 $cnt$ \u6bd4\u4e24\u8fb9\u7684\u70b9\u5927\uff0c\u5426\u5219\u4e00\u5b9a\u6709\u4e00\u6761\u7ebf\u6bb5\uff0c\u8986\u76d6\u4e86\u5de6\u8fb9\u7684\u70b9\u548c\u4e2d\u95f4\u7684\u70b9\u513f\u6ca1\u6709\u53f3\u8fb9\u7684\u70b9\uff0c\u53ef\u4ee5\u8003\u8651\u4e09\u6761\u7ebf\u6bb5 $l_1[x,y),\\ l_2[x,z],\\ l_3(y,z]$\u3002\n\n\u5c06\u6bcf\u4e2a\u6574\u70b9\u7684 $cnt$ \u503c\u4f5c\u4e3a\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u503c\uff0c\u90a3\u4e48\u627e\u5230\u4e24\u4e2a\u5cf0\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u5224\u65ad\u4e0d\u6ee1\u8db3\u6761\u4ef6\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u662f\u8981\u6c42\u4e0d\u80fd\u627e\u5230\u4e24\u4e2a\u5cf0\u7684\u6700\u5927\u4f4d\u7f6e\u96c6\u5408\u5927\u5c0f\uff0c\u4e5f\u5c31\u662f\u6700\u957f\u5355\u5cf0\u5e8f\u5217\u957f\u5ea6\uff0c\u53ea\u9700\u8981\u6b63\u53cd\u6c42\u4e24\u6b21\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u5373\u53ef\u3002\u5176\u4e2d $cnt$ \u53ef\u4ee5\u5dee\u5206\u9884\u5904\u7406\u3002\n\n### Code\n\n```c++\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<cstring>\n#include<climits>\n#include<algorithm>\n#include<utility>\n#include<map>\n#include<vector>\n#define int long long\nusing namespace std;\nconst int MaxN = 100005;\nint n, m, a[MaxN], f[MaxN], g[MaxN], ans;\nvector<int> number;\n\ninline int Read(){\n\tint num = 0, op = 1;\n\tchar ch = getchar();\n\twhile(!isdigit(ch)){\n\t\tif(ch == '-') op = -1;\n\t\tch = getchar();\n\t}\n\twhile(isdigit(ch)){\n\t\tnum = num * 10 + ch - '0';\n\t\tch = getchar();\n\t}\n\treturn num * op;\n}\n\nsigned main(){\n\tn = Read(), m = Read();\n\tfor(int i=1; i<=n; i++){\n\t\tint l = Read(), r = Read();\n\t\ta[l]++, a[r+1]--;\n\t}\n\tfor(int i=1; i<=m; i++)\n\t\ta[i] += a[i-1];\n\tnumber.clear();\n\tnumber.push_back(a[1]);\n\tf[1] = 1;\n\tfor(int i=2; i<=m; i++){\n\t\tif(a[i] >= number.back()){\n\t\t\tnumber.push_back(a[i]);\n\t\t\tf[i] = number.size();\n\t\t}\n\t\telse{\n\t\t\tint pos = upper_bound(number.begin(), number.end(), a[i]) - number.begin();\n\t\t\tnumber[pos] = a[i];\n\t\t\tf[i] = pos + 1;\n\t\t}\n\t}\n\tnumber.clear();\n\tnumber.push_back(a[m]);\n\tg[m] = 1;\n\tfor(int i = m-1; i>=1; i--){\n\t\tif(a[i] >= number.back()){\n\t\t\tnumber.push_back(a[i]);\n\t\t\tg[i] = number.size();\n\t\t}\n\t\telse{\n\t\t\tint pos = upper_bound(number.begin(), number.end(), a[i]) - number.begin();\n\t\t\tnumber[pos] = a[i];\n\t\t\tg[i] = pos + 1;\n\t\t}\n\t}\n\tfor(int i=1; i<=m; i++)\n\t\tans = max(ans, f[i]+g[i]-1);\n\tprintf(\"%lld\", ans);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1602775628,
        "uid": 235832,
        "name": "potatoler",
        "ccfLevel": 4,
        "title": "CF930C Teodor is not a liar!"
    },
    {
        "content": "\u9898\u76ee\u5373\u4e3a\u7ed9\u5b9a m \u4e2a\u4f4d\u7f6e\u7684\u8986\u76d6\u7ebf\u6bb5\u4e2a\u6570\uff0c\u6700\u591a\u80fd\u8ba9\u53e6\u4e00\u4e2a\u4eba\u77e5\u9053\u51e0\u4e2a\u4f7f\u5f97\u4ed6\u4e0d\u80fd\u786e\u5b9a\u6709\u6ca1\u6709\u4e00\u4e2a\u4f4d\u7f6e\u88ab\u6240\u6709\u7684\u7ebf\u6bb5\u8986\u76d6\uff08\u4e0d\u77e5\u9053\u6709\u591a\u5c11\u7ebf\u6bb5\uff09\u3002\n\n\u53cd\u5411\u601d\u8003\u600e\u4e48\u80fd\u786e\u5b9a\u6ca1\u6709\u4e00\u4e2a\u4f4d\u7f6e\u88ab\u6240\u6709\u7684\u7ebf\u6bb5\u8986\u76d6\uff0c\u53d1\u73b0\uff0c\u5982\u679c\u8986\u76d6\u7684\u4e2a\u6570\u7684\u5e8f\u5217\u51fa\u73b0\u4e86\u4e09\u4e2a\u4f4d\u7f6e\uff0c\u5e76\u4e14\u4e2d\u95f4\u4f4d\u7f6e\u7684\u8986\u76d6\u6761\u6570\u5c0f\u4e8e\u4e24\u8fb9\uff0c\u90a3\u4e48\u663e\u7136\u5c31\u80fd\u591f\u786e\u5b9a\u6ca1\u6709\u4e00\u4e2a\u4f4d\u7f6e\u88ab\u6240\u6709\u7684\u7ebf\u6bb5\u8986\u76d6\u3002\uff08\u663e\u7136\u6709\u90e8\u5206\u8986\u76d6\u5230\u5de6\u8fb9\u7684\u7ebf\u6bb5\u4e0d\u4f1a\u8986\u76d6\u5230\u53f3\u8fb9\uff0c\u53f3\u8fb9\u6ca1\u6709\u8fd9\u6837\u7684\u4f4d\u7f6e\uff0c\u53f3\u8fb9\u90e8\u5206\u7ebf\u6bb5\u4e0d\u80fd\u8986\u76d6\u5230\u5de6\u8fb9\uff0c\u5de6\u8fb9\u6ca1\u6709\u8fd9\u6837\u7684\u4f4d\u7f6e\uff0c\u4e2d\u95f4\u7684\u66f4\u4e0d\u662f\u4e86\uff09\u3002\n\n\u7531\u6b64\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u9009\u53d6\u7684\u8be2\u95ee\u4f4d\u7f6e\u7684\u8986\u76d6\u6761\u6570\u5fc5\u987b\u5148\u5355\u8c03\u4e0d\u964d\uff0c\u7136\u540e\u5355\u8c03\u4e0d\u589e\u3002\n\n\u4e8e\u662f\u7528 $O(n \\log n)$ \u7684 DP \u5206\u522b\u6c42\u51fa\u6bcf\u4e2a\u4f4d\u7f6e\u7ed3\u5c3e\u7684\u6700\u957f\u5355\u8c03\u4e0d\u964d\u5e8f\u5217\u957f\u5ea6\uff0c\u548c\u4ee5\u6bcf\u4e2a\u4f4d\u7f6e\u4e3a\u5f00\u5934\u5ef6\u4f38\u5230\u7ed3\u5c3e\u7684\u6700\u957f\u5355\u8c03\u4e0d\u589e\u5e8f\u5217\u957f\u5ea6\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\ninline void read(int &x)\n{\n\tx = 0;\n\tint f = 0;\n\tchar ch = getchar();\n\twhile(ch < '0' || ch > '9')\n\t{\n\t\tf |= ch == '-';\n\t\tch = getchar();\n\t}\n\twhile(ch >= '0' && ch <= '9')\n\t{\n\t\tx = x * 10 + ch - 48;\n\t\tch = getchar();\n\t}\n\tx = f ? -x : x;\n\treturn;\n}\n#define inf 0x3f3f3f3f\n#define N 100005\nint n, m, a[N];\nint bg[N], ed[N];\nint g[N];\nvoid dp(int *f)\n{\n\tmemset(g, 0x3f, sizeof(g));\n\tg[0] = 0;\n\tint len = 0;\n\tfor(int i = 1; i <= m; i++)\n\t{\n\t\tif(a[i] >= g[len])\n\t\t{\n\t\t\tlen++;\n\t\t\tf[i] = len;\n\t\t\tg[len] = a[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint pos = upper_bound(g, g + len + 1, a[i]) - g;\n\t\t\tf[i] = pos;\n\t\t\tg[f[i]] = a[i];\n\t\t}\n\t}\n\treturn;\n}\nsigned main()\n{\n\tread(n), read(m);\n\tint xl, xr;\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tread(xl), read(xr);\n\t\ta[xl]++, a[xr + 1]--;\n\t}\n\tfor(int i = 1; i <= m; i++)\n\t{\n\t\ta[i] += a[i - 1];\n\t}\n\tdp(bg);\n\treverse(a + 1, a + m + 1);\n\tdp(ed);\n\treverse(ed + 1, ed + m + 1);\n\tint ans = 0;\n\tfor(int i = 1; i <= m; i++)\n\t{\n\t\tans = max(ans, bg[i] + ed[i] - 1);\n\t}\n\tprintf(\"%d\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1637930887,
        "uid": 90027,
        "name": "GG_jok_er",
        "ccfLevel": 0,
        "title": "CF930C Teodor is not a liar! \u9898\u89e3"
    },
    {
        "content": "\u597d\u9898\u554a\u597d\u9898\u3002\n\n\u5b9a\u4e49 $a_i$ \u4e3a\u6709\u591a\u5c11\u4e2a\u533a\u95f4\u5305\u542b $i$\u3002\n\n\u62cd\u8111\u888b\u4e00\u60f3\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b58\u5728\u987a\u5e8f\u7684\u4e09\u4e2a\u5750\u6807 $(i,j,k)$ \u6ee1\u8db3 $a_i>a_j$ \u4e14 $a_j<a_l$ \u65f6\uff0c\u53ef\u4ee5\u786e\u5b9a\u6ca1\u6709\u6570\u88ab\u6240\u6709\u533a\u95f4\u5305\u542b\u3002\n\n\u8fd9\u4e2a\u7ed3\u8bba\u5f88\u7b80\u5355\uff0c\u56e0\u4e3a\u5982\u679c\u5b58\u5728\uff0c\u5219 $a$ \u5e8f\u5217\u5fc5\u5b9a\u4e3a\u4e00\u4e2a\u201c\u5c71\u5cf0\u201d\u3002\u800c\u5982\u679c\u51fa\u73b0\u4e0a\u9762\u8fd9\u79cd\u60c5\u51b5\uff0c\u8bf4\u660e\u6709\u201c\u5c71\u8c37\u201d\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u6c42\u51fa $f_i$ \u8868\u793a\u4ee5 $i$ \u7ed3\u5c3e\u7684\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217\uff0c$g_i$ \u8868\u793a\u4ee5 $i$ \u5f00\u5934\u7684\u6700\u957f\u4e0d\u4e0a\u5347\u5b50\u5e8f\u5217\u3002\n\n\u90a3\u4e48\u7b54\u6848\u4e3a $ans=\\max\\limits_{i=1}^{n-1}\\left(f_i+\\max\\limits_{j=i+1}^{n}g_j\\right)$\u3002\n\n\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e5+5;\nint n,m,a[N],f[N],g[N],c[N];\nint lbt(int x){return x&(-x);}\nvoid update(int i,int k){for(;i<=n;i+=lbt(i))c[i]=max(c[i],k);}\nint getmax(int i){int res=0;for(;i;i-=lbt(i))res=max(res,c[i]);return res;}\nint main(){\n  ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n  cin>>m>>n;\n  for(int i=1;i<=m;++i){\n    int l,r;cin>>l>>r;\n    ++a[l];--a[r+1];\n  }\n  for(int i=1;i<=n;++i)a[i]+=a[i-1];\n  for(int i=1;i<=n;++i)++a[i];\n  for(int i=1;i<=n;++i){\n    f[i]=getmax(a[i])+1;\n    update(a[i],f[i]);\n  }\n  for(int i=1;i<=n;++i)c[i]=0;\n  int ans=0,maxn=0;\n  for(int i=n;i>=1;--i){\n    g[i]=getmax(a[i])+1;\n    update(a[i],g[i]);\n    ans=max(ans,f[i]+maxn);\n    maxn=max(maxn,g[i]);\n  }\n  cout<<ans<<endl;\n  return 0;\n}\n\n```\n",
        "postTime": 1684382121,
        "uid": 173864,
        "name": "EstasTonne",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF930C"
    },
    {
        "content": "\u9898\u610f\u5f88\u96be\u7406\u89e3\uff0c\u7b80\u5355\u6765\u8bb2\u5c31\u662f\uff0c\u6709\u51e0\u4e2a\u533a\u95f4\uff0c\u6bcf\u6b21\u8be2\u95ee\u53ef\u4ee5\u77e5\u9053\u67d0\u4e2a\u70b9\u88ab $k$ \u4e2a\u533a\u95f4\u8986\u76d6\uff0c\u5728**\u8fd0\u6c14\u6700\u5dee**\u7684\u60c5\u51b5\u4e0b\uff0c\u8be2\u95ee\u4e86 $q$  \u6b21\uff0c\u8fd8\u4e0d\u80fd\u786e\u5b9a\u4e00\u4e2a\u70b9\u662f\u5426\u88ab\u6240\u6709\u533a\u95f4\u8986\u76d6\uff0c\u6c42 $q$\u3002\n\n\u4ec0\u4e48\u65f6\u5019\uff0c**\u53ef\u80fd**\u6709\u4e00\u4e2a\u70b9\u80fd\u88ab\u6240\u6709\u533a\u95f4\u8986\u76d6\u3002\n\n\u9996\u5148\uff0c\u53ef\u80fd\u88ab\u5168\u90e8\u8986\u76d6\u7684\u70b9\uff0c\u80af\u5b9a\u662f\u8be2\u95ee\u5f97\u5230\u7684 $k$ \u6700\u5927\u7684\u70b9\u3002\u5982\u679c\u6709\u591a\u4e2a\uff0c\u90a3\u5b83\u4eec\u80af\u5b9a\u8fde\u7eed\u3002\u8fd9\u5f88\u7b80\u5355\u3002\n\n\u8fd9\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u8c61\u51fa\u4e00\u5e45\u753b\u9762\uff1a\u4ee5**\u5907\u9009\u70b9**\u4e3a\u4e2d\u5fc3\uff0c\u5411\u4e24\u8fb9\u8f90\u5c04\uff1b\u628a\u6240\u6709\u7684\u533a\u95f4\u90fd\u53e0\u5728\u5907\u9009\u70b9\u4e0a\uff0c\u90a3\u4e48\u8d8a\u8fdc\u79bb\u5907\u9009\u70b9\uff0c\u88ab\u8f90\u5c04\u7684\u5c31\u8d8a\u5c11\u3002\u6240\u4ee5\uff0c\u7531\u7b2c\u4e00\u4e2a\u5df2\u77e5\u70b9\uff0c\u5230\u5907\u9009\u70b9\uff0c\u8986\u76d6\u6b21\u6570\u662f**\u5355\u8c03\u4e0d\u51cf**\uff0c\u800c\u5907\u9009\u70b9\u5230\u6700\u540e\u4e00\u4e2a\u5df2\u77e5\u70b9\uff0c\u8986\u76d6\u6b21\u6570\u662f**\u5355\u8c03\u4e0d\u589e**\u3002\u6709\u4e9b\u70b9\u662f\u672a\u77e5\u7684\uff0c\u4f46\u5b83\u4eec\u53ef\u4ee5\u4efb\u610f\u53d6\u503c\uff0c\u4e0d\u4f1a\u5f71\u54cd\u5355\u8c03\u6027\u3002\n\n\u8bf4\u5230\u8fd9\u91cc\uff0c\u5c31\u5f88\u6e05\u695a\u4e86\uff0c\u6211\u4eec\u628a\u6bcf\u4e2a\u70b9\u88ab\u8986\u76d6\u6b21\u6570\u4f5c\u4e3a\u5176\u6743\u503c\uff08\u8fd9\u4e2a\u7528\u5dee\u5206\u89e3\u51b3\uff09\uff0c\u7136\u540e\u505a\u4e00\u904d\u6700\u957f\u5355\u5cf0\u5b50\u5e8f\u5217\uff08\u6211\u81ea\u5df1\u778e\u53d6\u7684\u540d\u5b57\uff09\uff0c\u5c31\u597d\u4e86\u3002\n\n\u590d\u6742\u5ea6\u8981\u6c42 $O(n \\log n)$\uff0c\u4f46\u6211\u53c8\u4e0d\u4f1a\u5199\u5355\u8c03\u5b50\u5e8f\u5217\u7684\u4f18\u5316\uff0c\u800c\u4e14\u4e5f\u4e0d\u76f4\u89c2\uff0c\u6240\u4ee5\u6211\u4f7f\u7528\u4e86\u5f88\u76f4\u89c2~~\u4e14\u5f88\u7b80\u5355~~\u7684**\u6743\u503c\u7ebf\u6bb5\u6811**\u3002\n\n\u6ce8\u610f\u6743\u503c\u8303\u56f4\u4ece $0$ \u5230\u6700\u591a\u51fa\u73b0\u6b21\u6570\uff08\u4e0d\u662f $m$ \uff09\u54e6\u3002\n\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#define ls(p) ((p) << 1)\n#define rs(p) ((p) << 1 | 1)\nusing namespace std;\nconst int maxm = 1e5+5;\nint n, m;\nint a[maxm];\nint v[4 * maxm];\nint f[maxm];\nint revf[maxm];\ninline int max(int a, int b) {\n    return a > b ? a : b;\n}\nvoid pushup(int p) {\n    v[p] = max(v[ls(p)], v[rs(p)]);\n}\nvoid query(int l, int r, int x, int y, int p, int &ans) {\n    if (x <= l && r <= y) {\n       \n        ans = max(ans, v[p] + 1);\n        return ;\n    }\n    int mid = (l + r) >> 1;\n    if (x <= mid) query(l, mid, x, y, ls(p), ans);\n    if (y > mid) query(mid + 1, r, x, y, rs(p), ans);\n}\nvoid update(int l, int r, int x, int val, int p) {\n    if (l == r) {\n        v[p] = max(v[p], val);\n        return ;\n    }\n    int mid = (l + r) >> 1;\n    if (x <= mid) update(l, mid, x, val, ls(p));\n    else update(mid + 1, r, x, val, rs(p));\n    pushup(p);\n}\nint main() {\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 1; i <= n; i++) {\n        int l, r;\n        scanf(\"%d%d\", &l, &r);\n        a[l]++;\n        a[r + 1]--;\n    }\n    for (int i = 1; i <= m; i++) {\n        a[i] += a[i - 1]; \n        \n    }\n    for (int i = 1; i <= m; i++) {\n        query(0, maxm, 0, a[i], 1, f[i]);\n        update(0, maxm, a[i], f[i], 1);\n      \n    }\n    memset(v, 0, sizeof(v));\n    for (int i = m; i >= 1; i--) {\n        query(0, maxm, 0, a[i], 1, revf[i]);\n        update(0, maxm, a[i], revf[i], 1);\n    }\n    int ans = 0;\n    for (int i = 1; i <= m; i++) {\n        ans = max(ans, f[i] + revf[i] - 1);\n    }\n    cout << ans;\n    return 0;\n}\n\n\n```\n",
        "postTime": 1684157615,
        "uid": 536396,
        "name": "Uuuuuur_",
        "ccfLevel": 5,
        "title": "CF930C"
    }
]