[
    {
        "content": "\u6211\u4eec\u5148\u679a\u4e3e $x$ \u4e3a Vova \u6700\u5c0f\u8981\u8fbe\u5230\u7684\u7b49\u7ea7\u3002\n\n\u73b0\u5728\u95ee\u9898\u8f6c\u5316\u4e3a**\u7b49\u7ea7\u4e3a** $x$ **\u65f6\uff0cVova \u6700\u5927\u7684\u80fd\u91cf\u548c\u3002**\n\n\u9996\u5148\uff0c\u56e0\u4e3a\u6bcf\u4e00\u5f20\u5361\u7247\u7684\u80fd\u91cf\u90fd $>0$ ,\u6211\u4eec\u5148\u9009\u6240\u6709\u7b49\u7ea7 $\\le x$ \u7684\u5361\u7247\uff0c\u7136\u540e\u4e3a\u907f\u514d\u51b2\u7a81\uff0c\u5220\u9664\u6700\u5c0f\u7684\u80fd\u91cf\u548c\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u4e00\u4e2a\u6700\u5c0f\u5272\u3002\n\n\u4ee5\u4e0b\u6211\u4eec\u7528 $s$ \u4ee3\u8868\u7f51\u7edc\u6e90\u70b9\uff0c $t$ \u4ee3\u8868\u7f51\u7edc\u6c47\u70b9\uff0c\u7b2c $i$ \u5f20\u5361\u7247\u5bf9\u5e94\u70b9 $i$ ,\u5e76\u4e14\u6211\u4eec\u53ea\u8003\u8651\u7b49\u7ea7 $\\le x$ \u7684\u5361\u7247\u3002\n\n\u6211\u4eec\u8981\u6ee1\u8db3\u7684\u6761\u4ef6\u662f:**Vova \u4e0d\u80fd\u628a\u4e24\u5f20\u9b54\u529b\u503c\u4e4b\u548c\u4e3a\u8d28\u6570\u7684\u5361\u7247\u653e\u5728\u540c\u4e00\u4e2a\u5361\u7ec4\u91cc**\n\n#### \u90a3\u4e48\u6211\u4eec\u5bf9\u4e8e\u4e24\u5f20\u9b54\u529b\u503c\u4e4b\u548c\u4e3a\u8d28\u6570\u7684\u5361\u7247\u6240\u5bf9\u5e94\u7684\u4e24\u4e2a\u70b9\u8fde\u4e00\u6761\u8fb9\uff0c\u6d41\u91cf\u65e0\u9650\uff0c $s$ \u5411\u5176\u4e2d\u4e00\u4e2a\u70b9\u8fde\u63a5\u6d41\u91cf\u4e3a\u5176\u6743\u503c\u7684\u8fb9\uff0c\u53e6\u4e00\u4e2a\u70b9\u5411 $t$ \u8fde\u63a5\u6d41\u91cf\u4e3a\u5176\u6743\u503c\u7684\u8fb9\u3002\n\n\u8fd9\u91cc\u89e3\u91ca\u4e00\u4e0b\uff0c\u8bbe\u8fd9\u4e9b\u8fb9\u4e3a $s->x->y->t$\u3002\u6211\u4eec\u5272\u6389 $s->x$ \u7684\u8fb9\uff0c\u610f\u5473\u7740\u4e0d\u9009 $x$ \u5361\u7247\uff1b\u5272\u6389 $y->t$ \u7684\u8fb9\uff0c\u610f\u5473\u7740\u4e0d\u9009 $y$ \u5361\u7247\uff1b\u5272\u6389 $x->y$ \u7684\u8fb9\u6ca1\u6709\u610f\u4e49\uff0c\u6240\u4ee5\u6d41\u91cf\u65e0\u9650\u3002\n\n\u90a3\u5bf9\u4e8e\u4e00\u5bf9\u51b2\u7a81\u7684\u5361\u7247 $(x,y)$ ,\u6211\u4eec\u662f $s->x->y->t$ \u8fd8\u662f $s->y->x->t$ \uff1f\n\n\u6a21\u4eff\u201c\u9a91\u58eb\u5171\u5b58\u95ee\u9898\u201d\uff0c\u6211\u4eec\u8003\u8651\u627e\u5230\u5176\u4e2d\u7684**\u4e8c\u5206\u56fe\u5173\u7cfb**\uff0c\u5373\u628a\u5168\u56fe\uff08\u4e0d\u5305\u62ec $s$ , $t$\uff09\u5206\u6210\u4e24\u90e8\u5206 $X,Y$ \uff0c\u4f7f\u5f97\u53ea\u6709\u4e24\u90e8\u5206\u4e4b\u95f4\u7684\u8fde\u8fb9\uff0c\u6ca1\u6709\u67d0\u4e00\u90e8\u5206\u4e2d\u7684\u8fde\u8fb9\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5bf9\u4e8e $\\forall x,y,x\\in X,y\\in Y$ ,\u6ca1\u6709 $(x,y)$ \u6216\u8005 $(y,x)$ \u7684\u8fb9\u3002\u7136\u540e\u6211\u4eec\u5c06 $s$ \u5411 $X$ \u4e2d\u7684\u70b9\u8fde\u8fb9\uff0c$Y$ \u4e2d\u7684\u70b9\u5411 $t$ \u8fde\u8fb9\u3002\n\n\u600e\u4e48\u627e $X,Y$ \u5462\uff1f\u6ce8\u610f\u5230\u6bcf\u4e2a\u9b54\u529b\u503c\u90fd\u662f\u6b63\u6574\u6570\uff0c\u800c\u6b63\u6574\u6570\u6709\u5929\u7136\u4e8c\u5206\u5173\u7cfb\uff1a\u5947\u6570\u4e3a $X$ ,\u5076\u6570\u4e3a $Y$ \u3002\u4ee5\u4e0b\u7528 $o$ \u4ee3\u8868\u4e00\u4e2a\u5947\u6570, $e$ \u4ee3\u8868\u4e00\u4e2a\u5076\u6570\u3002\n\n\u6211\u4eec\u77e5\u9053\uff0c$o+o=e,o+e=o,e+o=e,e+e=e$ \u3002\n\n\u6ce8\u610f\u5230**\u8d28\u6570\u51e0\u4e4e\u603b\u662f\u5947\u6570**\uff0c\u6240\u4ee5\u4ea7\u751f\u51b2\u7a81\u7684\u4e24\u5f20\u5361\u7247\uff0c\u9b54\u529b\u503c\u4e00\u5b9a\u662f\u4e00\u5947\u6570\u4e00\u5076\u6570\u3002\u7136\u540e\u5c31\u627e\u5230\u4e86\u4e8c\u5206\u56fe\u5173\u7cfb\u3002\n\n\u4f46\u6211\u4eec\u8bf4**\u8d28\u6570\u201c\u51e0\u4e4e\u201d\u603b\u662f\u5947\u6570**\uff0c\u8d28\u6570 $2$ \u4e0d\u662f\u5947\u6570\uff0c\u5f88\u53ef\u60dc\uff0c\u6709\u53ef\u80fd\u4e24\u4e2a\u5947\u6570\u5361\u7247\uff08\u59d1\u4e14\u8fd9\u4e48\u8bf4\uff09\u6216\u4e24\u4e2a\u5076\u6570\u5361\u7247\u53ef\u80fd\u4f1a\u51b2\u7a81\u3002\n\n\u4f46 $2$ \u8fd9\u4e2a\u6570\u975e\u5e38\u5c0f\uff0c\u5982\u679c\u4e24\u4e2a\u6b63\u6574\u6570\u4e4b\u548c $=2$ ,\u53ea\u53ef\u80fd\u662f $1+1$\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5bf9\u4e8e\u9b54\u529b\u503c\u4e3a $1$ \u7684\u5361\u7247\u53ea\u80fd\u53d6\u4e00\u5f20\uff0c\u5f53\u7136\u8981\u9009\u53d6\u80fd\u91cf\u503c\u6700\u5927\u7684\uff0c\u5728\u6700\u521d\u9009\u62e9\u6240\u6709\u5361\u7247\u65f6\u5373\u53ef\u5224\u5b9a\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8fde\u8fb9\u5b8c\u6210\u3002\n\n\u56e0\u4e3a~~\u539f\u5219\u4e0a\uff0c\u7f51\u7edc\u6d41\u9898\u4e0d\u80fd\u5361 dinic \u4e0e ISAP~~ \uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u653e\u5fc3\u4f7f\u7528 dinic\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<cstdio>\n#include<queue>\n#include<algorithm>\nstruct graph\n{\n\tstruct edge\n\t{\n\t\tint to,cap,opp;\n\t};\n\tstd::vector<edge> a[505];\n\tint n,s,t,dep[505],nxt[505],can[505];\n\tvoid add(int x,int y,int v)\n\t{\n\t\tint p=a[x].size(),q=a[y].size();\n\t\ta[x].push_back(edge{y,v,q});\n\t\ta[y].push_back(edge{x,0,p});\n\t}\n\tint bfs(int s,int t)\n\t{\n\t\tstd::queue<int> q;\n\t\tfor (int i=1;i<=n;i++) dep[i]=0,nxt[i]=1,can[i]=0;\n\t\tq.push(s);dep[s]=1;\n\t\twhile (!q.empty())\n\t\t{\n\t\t\tint v=q.front();q.pop();\n\t\t\tfor (int i=0;i<a[v].size();i++)\n            {\n                int u=a[v][i].to;\n                if (!dep[u]&&a[v][i].cap) dep[u]=dep[v]+1,q.push(u);\n\t\t\t}\n\t    }\n\t    return dep[t];\n\t}\n\tint dfs(int v,int now)\n\t{\n\t\tif (!nxt[v]) now=0;\n\t\tif (v==t||!now) return now;\n\t\tint ss=0;\n\t\tfor (int i=can[v];i<a[v].size();i++,can[v]++)\n\t\t{\n\t\t\tint u=a[v][i].to;\n\t\t\tif (dep[v]+1!=dep[u]||!a[v][i].cap) continue;\n\t\t\tint k=dfs(u,std::min(now,a[v][i].cap));\n\t\t\tif (!k) continue;\n\t\t\ta[v][i].cap=a[v][i].cap-k;\n\t\t\ta[u][a[v][i].opp].cap=a[u][a[v][i].opp].cap+k;\n\t\t\tss=ss+k;now=now-k;\n\t\t\tif (!now){can[v]--;break;}\n\t\t}\n\t\tif (!ss) nxt[v]=0;\n\t\treturn ss;\n\t}\n\tint dinic(int ss,int tt)\n\t{\n\t\ts=ss,t=tt;\n\t\tint ans=0;\n\t\twhile (bfs(s,t)) ans=ans+dfs(s,1000000000);\n\t\treturn ans;\n\t}\n\tvoid clear()\n\t{\n\t\tfor (int i=1;i<=n;i++) a[i].clear();\n\t\tn=0;\n\t}\n};\ngraph g;\nint n,k,p[105],c[105],l[105];\nint isprime(int x)\n{\n\tif (x<2) return 0;\n\tfor (int i=2;i*i<=x;i++) if (x%i==0) return 0;\n\treturn 1;\n}\nint solve(int x)\n{\n\tg.clear();g.n=n+2;\n\tint s=n+1,t=n+2;\n\tint y=0,ss=0;\n\tfor (int i=1;i<=n;i++) if (l[i]<=x&&c[i]!=1&&c[i]%2==1)\n\t    for (int j=1;j<=n;j++) if (l[j]<=x&&c[j]!=1&&c[j]%2==0)\n\t        if (isprime(c[i]+c[j])) g.add(i,j,1000000000);\n\t//special solve 1(1+1=2,a prime)\n\tfor (int i=1;i<=n;i++)//find 1 has maximum value\n\t    if (c[i]==1&&l[i]<=x) if (p[y]<p[i]) y=i;\n\tfor (int i=1;i<=n;i++)\n\t    if (c[i]!=1&&l[i]<=x&&isprime(c[y]+c[i])&&c[i]%2==0) g.add(y,i,1000000000);\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tif (l[i]>x||c[i]==1&&i!=y) continue;\n\t\tif (c[i]%2) g.add(s,i,p[i]);\n\t\telse g.add(i,t,p[i]);\n\t\tss=ss+p[i];\n\t}\n\tint ans=g.dinic(s,t);\n\treturn ss-ans;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&k);\n\tfor (int i=1;i<=n;i++) scanf(\"%d%d%d\",&p[i],&c[i],&l[i]);\n\tfor (int i=1;i<=100;i++) if (solve(i)>=k) return printf(\"%d\\n\",i),0;\n\tputs(\"-1\");\n\treturn 0;\n}\n```\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u4f53\u9a8c AC \u7684\u5feb\u4e50\u4e86\uff01\n",
        "postTime": 1596887399,
        "uid": 36957,
        "name": "RainFestival",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF808F \u3010Card Game\u3011"
    },
    {
        "content": "## Preface\n\n\u770b\u4e86\u5230\u4e86 CF \u4e0a\u4e00\u4f4d\u8001\u54e5\u7684\u63d0\u4ea4\uff0c\u89c9\u5f97\u975e\u5e38\u795e\u5947\uff0c**\u975e\u7f51\u7edc\u6d41\u505a\u6cd5**\uff0c\u6210\u529f\u8dd1\u8fdb 15ms\u3002\n\n## Analysis\n\n\u968f\u673a\u3002\u6bcf\u6b21\u5c06\u8fd8\u672a\u786e\u5b9a\u7684\u6392\u5217\u968f\u673a\u6253\u4e71\uff0c\u9010\u4e2a\u68c0\u67e5\u80fd\u5426\u4e0e\u4e4b\u524d\u679a\u4e3e\u5230\u7684\u7269\u54c1\u7684\u9b54\u529b\u503c\u4e4b\u548c\u4e3a\u8d28\u6570\uff0c\u5982\u679c\u90fd**\u4e0d\u662f\u8d28\u6570**\uff0c\u5219\u8d2a\u5fc3\u5730\u628a\u4ed6\u52a0\u5165\u9009\u62e9\u7684\u961f\u5217\u4e2d\u3002\u6700\u540e\u68c0\u67e5\u8fd9\u6837\u7684\u65b9\u6cd5\u662f\u5426\u6bd4\u539f\u6765\u5f97\u51fa\u7684\u7b54\u6848\u4f18\u3002\n\n\u82e5\u5f97\u5230\u66f4\u4f18\u7684\u7ed3\u679c $V$\uff0c\u5219\u5c06\u9b54\u529b\u503c $\\ge V$ \u7684\u7269\u54c1\u5168\u90e8\u8bbe\u7f6e\u4e3a \u201c\u5df2\u786e\u5b9a\u201d\u7684\uff0c\u5373**\u4e0d\u4f1a\u5728\u540e\u9762\u9009\u62e9**\uff0c\u56e0\u4e3a\u5df2\u7ecf\u5f97\u5230\u4e86\u9b54\u529b\u503c\u6700\u5c0f\u4e3a $V$ \u7684\u7b54\u6848\u3002\u8fd9\u6837\u968f\u5230\u6b63\u89e3\u7684\u6982\u7387\u4f1a\u589e\u5927\u3002\n\n\u590d\u6742\u5ea6 $O(Tn^2)$\uff0c\u5176\u4e2d $T$ \u4e3a\u968f\u5373\u6b21\u6570\u3002\n\n## Code\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define For(i,j,k) for(int i=(j);i<=(k);i++)\n#define int long long\n#define N 200000\nint n,k,vis[N+10],num[110];\nstruct node{\n\tint p,c,l;\n}a[110];\nsigned main(){\n\tios::sync_with_stdio(false),cin.tie(0);\n\tFor(i,2,N) if(!vis[i]) for(int j=2*i;j<=N;j+=i) vis[j]=i;\n\tcin>>n>>k;\n\tFor(i,1,n) cin>>a[i].p>>a[i].c>>a[i].l;\n\tint len=n,res=1e9;\n\tFor(step,1,500){\n\t\trandom_shuffle(a+1,a+len+1);\n\t\tint sz=0,mx=0,sum=0,i;\n\t\tfor(i=1;i<=len&&sum<k;i++){\n\t\t\tint j=1; while(vis[num[j]+a[i].c]&&j<=sz) j++;\n\t\t\tif(j>sz) num[++sz]=a[i].c,mx=max(mx,a[i].l),sum+=a[i].p;\n\t\t\tif(sum>=k) res=min(res,mx);\n\t\t}\n\t\tif(i<=len){\n\t\t\tint tot=0;\n\t\t\tFor(j,1,len) if(a[j].l<mx) a[++tot]=a[j];\n\t\t\tlen=tot;\n\t\t}\n\t}\n\tif(res==1e9) cout<<\"-1\\n\";\n\telse cout<<res<<\"\\n\";\n}\n```",
        "postTime": 1657550060,
        "uid": 169574,
        "name": "Enucai",
        "ccfLevel": 7,
        "title": "CF808F Card Game"
    },
    {
        "content": "~~5ab \u5199\u9519 Dinic \u5f53\u524d\u5f27\u3002~~\n\n\u4e8c\u5206\u7b54\u6848\uff0c\u6211\u4eec\u6c42\u7279\u5b9a\u7b49\u7ea7\u80fd\u8fbe\u5230\u7684\u6700\u5927\u80fd\u91cf\u3002\n\n\u53d1\u73b0\u300c\u4e24\u4e24\u548c\u4e0d\u4e3a\u7d20\u6570\u300d\u6761\u4ef6\u4e0d\u592a\u597d\u641e\uff0c\u5c1d\u8bd5\u5efa\u56fe\u3002\n\n\u82e5\u4e24\u4e2a\u5361\u4e0a\u9b54\u6cd5\u503c\u4e4b\u548c\u4e3a\u7d20\u6570\uff0c\u5219\u5c06\u4e24\u4e2a\u5361\u4e4b\u95f4\u8fde\u65e0\u5411\u8fb9\u3002\n\n\u6211\u4eec\u8981\u6c42\u8fd9\u4e2a\u56fe\u7684\u6700\u5927\u6743\uff08\u6743\u4e3a\u80fd\u91cf\u503c\uff09\u72ec\u7acb\u96c6\u3002\n\n\u53d1\u73b0\u9664\u4e86 $1+1=2$ \u5916\u548c\u4e3a\u7d20\u6570\u7684\u4e24\u6570\u4e00\u5b9a\u4e00\u5947\u4e00\u5076\u3002\n\n\u6211\u4eec\u628a\u9b54\u6cd5\u503c\u4e3a $1$ \u7684\u6682\u4e14\u5254\u9664\uff0c\u5269\u4e0b\u4e00\u5b9a\u7ec4\u6210**\u4e8c\u5206\u56fe**\u3002\n\n\u4f17\u6240\u5468\u77e5\uff0c\u4e8c\u5206\u56fe\u6700\u5927\u6743\u72ec\u7acb\u96c6\u662f\u53ef\u4ee5\u7528 Dinic $O(n^2m)$ \u505a\u7684\u3002\n\n\u6700\u540e\u8003\u8651\u9b54\u6cd5\u503c $1$\uff0c\u53d1\u73b0\u53ea\u6709\u53ef\u80fd\u9009\u4e00\u5f20\uff0c\u6211\u4eec\u9009\u80fd\u91cf\u6700\u5927\u7684\u653e\u8fdb\u53bb\u8dd1\u7f51\u7edc\u6d41\u3002\n\n```cpp\n//We'll be counting stars.\n//#pragma GCC optimize(\"Ofast\")\n#include<bits/stdc++.h>\nusing namespace std;\n#define fir first\n#define sec second\n#define mkp make_pair\n#define pb emplace_back\n#define For(i,j,k) for(int i=(j),i##_=(k);i<=i##_;i++)\n#define Rof(i,j,k) for(int i=(j),i##_=(k);i>=i##_;i--)\n#define ckmx(a,b) a=max(a,b)\n#define ckmn(a,b) a=min(a,b)\n#define Fi(s) freopen(s,\"r\",stdin)\n#define Fo(s) freopen(s,\"w\",stdout)\n#define Fre(s) Fi(s\".in\"),Fo(s\".out\")\n#define debug(...) cerr<<\"#\"<<__LINE__<<\": \"<<__VA_ARGS__<<endl\n#define ll long long\nconst ll mod=1;\ninline ll pw(ll x,ll y){ll r=1;while(y){if(y&1)r=r*x%mod;x=x*x%mod;y>>=1;}return r;}\n#define int ll\n#define V 200000\n#define N 110\n#define M 2610\nconst int inf=1e15;\nint n,p[N],c[N],L[N];\nbool vis[V+1];\nvector<int> pr;\nvoid init(){\n\tFor(i,2,V){\n\t\tif(!vis[i]){\n\t\t\tpr.pb(i);\n\t\t}\n\t\tfor(int j:pr){\n\t\t\tif(i*j>V) break;\n\t\t\tvis[i*j]=1;\n\t\t\tif(i%j==0) break;\n\t\t}\n\t}\n}\nstruct edge{\n\tint nxt,to,flow;\n}e[2*M];\nint head[N],cur[N],tot,dis[N];\npair<int,int> q[N];//p c\nint lim,S,T;\nvoid adde(int x,int y,int z){\n\te[++tot]=(edge){head[x],y,z};head[x]=tot;\n\te[++tot]=(edge){head[y],x,0};head[y]=tot;\n}\nqueue<int> Q;\nbool bfs(){\n\tfill(dis+1,dis+T+1,0);\n\tdis[S]=1;\n\tQ.push(S);\n\tint x;\n\twhile(!Q.empty()){\n\t\tx=Q.front();\n\t\tQ.pop();\n\t\tcur[x]=head[x];\n\t\tfor(int i=head[x],to;i;i=e[i].nxt){\n\t\t\tto=e[i].to;\n\t\t\tif(!e[i].flow || dis[to]) continue;\n\t\t\tdis[to]=dis[x]+1;\n\t\t\tQ.push(to);\n\t\t}\n\t}\n//\tFor(i,1,T) cout<<dis[i]<<\" \"; cout<<endl;\n\treturn dis[T];\n}\nint dfs(int x,int flow){\n\tif(x==T) return flow;\n\tint res=0;\n\tfor(int &i=cur[x],to,tmp;i;i=e[i].nxt){\n\t\tto=e[i].to;\n\t\tif(dis[to]!=dis[x]+1 || !e[i].flow) continue;\n\t\ttmp=dfs(to,min(flow,e[i].flow));\n\t\te[i].flow-=tmp;\n\t\te[i^1].flow+=tmp;\n\t\tres+=tmp;\n\t\tflow-=tmp;\n\t\tif(!flow) break;\n\t}\n\treturn res;\n}\nint work(int val,bool one){\n\tlim=0;\n\tFor(i,1,n) if(L[i]<=val && c[i]!=1 && (!one || vis[c[i]+1])) q[++lim]=mkp(p[i],c[i]);\n\tS=lim+1;T=lim+2;\n\tfill(head+1,head+T+1,0);\n\ttot=1;\n//\tFor(i,1,lim) cout<<q[i].fir<<\"%\"<<q[i].sec<<endl;\n\tFor(i,1,lim) For(j,i+1,lim) if(!vis[q[i].sec+q[j].sec]){\n//\t\tcout<<i<<\"^\"<<j<<endl;\n\t\tif(q[i].sec&1) adde(i,j,inf);\n\t\telse adde(j,i,inf);\n\t}\n\tFor(i,1,lim)\n\t\tif(q[i].sec&1) adde(S,i,q[i].fir);\n\t\telse adde(i,T,q[i].fir);\n\tint res=0;\n\tFor(i,1,lim) res+=q[i].fir;\n\twhile(bfs()) res-=dfs(S,inf);\n//\tcout<<val<<\"~\"<<one<<\":\"<<res<<endl;\n\treturn res;\n} \nint32_t main(){\n\tios::sync_with_stdio(false),cin.tie(nullptr);\n\tinit();\n\tint k,l=1,r=0,mid,res=-1;\n\tcin>>n>>k;\n\tFor(i,1,n) cin>>p[i]>>c[i]>>L[i];\n\tFor(i,1,n) ckmx(r,L[i]);\n\tint p1;\n\twhile(l<=r){\n\t\tmid=(l+r)>>1;\n\t\tp1=0;\n\t\tFor(i,1,n) if(c[i]==1 && L[i]<=mid) ckmx(p1,p[i]);\n\t\tif(work(mid,0)>=k || (p1 && work(mid,1)>=k-p1)){\n\t\t\tres=mid;\n\t\t\tr=mid-1;\n\t\t}else{\n\t\t\tl=mid+1;\n\t\t}\n\t}\n\tcout<<res<<endl;\nreturn 0;}\n```",
        "postTime": 1657540583,
        "uid": 101868,
        "name": "I_am_Accepted",
        "ccfLevel": 0,
        "title": "CF808F Card Game\uff08Dinic \u4e8c\u5206\u56fe\u6700\u5927\u6743\u72ec\u7acb\u96c6\uff09"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF808F)\n\n[\u53ef\u80fd\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://chenyu-w.github.io/2022/09/01/CF808F%20Card%20Game/)\n\n## \u524d\u8a00\n\n\u611f\u89c9\u662f\u6253\u8fc7\u7684\u4e00\u573a\u6a21\u62df\u8d5b\u91cc\u9762\u7684\u4e00\u9053\u9898\u7684\u5f31\u5316\u7248\uff0c\u6bd4\u8f83\u8f7b\u677e\u5730\u505a\u4e86\u51fa\u6765\u3002\n\n### \u524d\u7f6e\u829d\u58eb\n\n\u7f51\u7edc\u6d41\n\n## \u5206\u6790\n\n\u4e0d\u96be\u53d1\u73b0\u7b54\u6848\u5177\u6709\u5355\u8c03\u6027\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u6700\u7ec8\u7684\u7b49\u7ea7 $x$\uff0c\u73b0\u5728\u95ee\u9898\u5c31\u8f6c\u5316\u6210\u4e86\u7b49\u7ea7\u4e3a $x$ \u65f6\u83b7\u5f97\u7684\u6700\u5927\u80fd\u91cf\u3002\n\n\u7136\u540e\u6211\u4eec\u60f3\u5230\u628a\u4e24\u5f20\u4e0d\u6ee1\u8db3\u8981\u6c42\u7684\u5361\u724c\u8fde\u8fb9\uff0c\u90a3\u4e48\u6211\u4eec\u8981\u6c42\u7684\u5c31\u662f\u56fe\u4e2d\u7684\u6700\u5927\u72ec\u7acb\u96c6\uff0c\u8fd9\u73a9\u610f\u5728\u4e00\u822c\u56fe\u4e2d\u662f NPC \u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u4e00\u4e9b\u7279\u6b8a\u6027\u8d28\uff0c\u89c2\u5bdf\u5230\uff0c\u8d28\u6570\u9664\u4e86 $2$ \u90fd\u662f\u5947\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u5982\u679c\u628a $2$ \u7684\u60c5\u51b5\u6392\u9664\u6389\u5c31\u80fd\u5f97\u5230\u4e00\u4e2a\u4e8c\u5206\u56fe (\u6309\u5947\u5076\u5206\u5de6\u53f3)\uff0c\u7136\u540e\u53c8\u89c2\u5bdf\u5230 $2 = 1 + 1$\uff0c\u6240\u4ee5 $1$ \u53ea\u80fd\u9009\u4e00\u5f20\uff0c\u8d2a\u5fc3\u5730\u9009\u80fd\u91cf\u6700\u5927\u7684\u5373\u53ef\uff0c\u5efa\u5b8c\u56fe\u540e\u8dd1 dinic \u5373\u53ef\u3002\n\n## \u4ee3\u7801\n\n```c++\n#include <bits/stdc++.h>\n\nusing namespace std;\nconst int N = 1e6 + 10, M = 110, INF = 1 << 30;\nint h[N], e[N], ne[N], f[N], idx;\nint d[N], cur[N];\nint v[N], primes[N], cnt;\nint s, t;\nstruct node\n{\n    int p, c, l;\n} a[M];\nint n, k;\n\ninline int read()\n{\n    int x = 0, y = 1; char c = getchar();\n    while (c < '0' || c > '9') {if (c == '-') y = -1; c = getchar();}\n    while (c >= '0' && c <= '9') x = x * 10 + c - '0', c = getchar();\n    return x * y;\n}\n\ninline void add(int a, int b, int c)\n{\n    e[idx] = b;\n    f[idx] = c;\n    ne[idx] = h[a];\n    h[a] = idx++;\n}\n\ninline void init()\n{\n    for (int i = 2; i <= 200000; i++)\n    {\n        if (!v[i]) primes[++cnt] = i;\n        for (int j = 1; j <= cnt && primes[j] <= 200000 / i; j++)   \n        {\n            v[i * primes[j]] = true;\n            if (i % primes[j] == 0) break;\n        }\n    }\n}\n\ninline bool bfs()\n{\n    memset(d, -1, sizeof d);\n    d[s] = 0;\n    queue<int> q;\n    q.push(s);\n    cur[s] = h[s];\n    while (q.size())\n    {\n        int u = q.front();\n        q.pop();\n        for (int i = h[u]; ~i; i = ne[i])\n        {\n            int v = e[i];\n            if (d[v] == -1 && f[i])\n            {\n                d[v] = d[u] + 1;\n                cur[v] = h[v];\n                if (v == t) return true;\n                q.push(v);\n            }\n        }\n    }\n    return false;\n}\n\ninline int find(int u, int lim)\n{\n    if (u == t) return lim;\n    int flow = 0;\n    for (int i = cur[u]; ~i && flow < lim; i = ne[i])\n    {\n        cur[u] = i;\n        int v = e[i];\n        if (d[v] == d[u] + 1 && f[i])\n        {\n            int t = find(v, min(f[i], lim - flow));\n            if (!t) d[v] = -1;\n            f[i] -= t, f[i ^ 1] += t, flow += t;\n        }\n    }\n    return flow;\n}\n\ninline int dinic()\n{\n    int res = 0, flow;\n    while (bfs()) while (flow = find(s, INF)) res += flow;\n    return res;\n}\n\ninline bool check(int x)\n{\n    memset(h, -1, sizeof h);\n    idx = 0;\n    int tot = 0;\n    for (int i = 1; i <= n; i++)\n    {\n        if (a[i].l > x) continue;\n        if (!(a[i].c & 1)) add(s, i, a[i].p), add(i, s, 0), tot += a[i].p;\n        else if (a[i].c != 1) add(i, t, a[i].p), add(t, i, 0), tot += a[i].p;\n    }\n    for (int i = 1; i <= n; i++) \n        for (int j = 1; j <= n; j++)\n        {\n            if (a[i].l > x || a[j].l > x || a[i].c & 1 || !(a[j].c & 1) || v[a[i].c + a[j].c] || a[i].c == 1 || a[j].c == 1) continue;\n            add(i, j, INF);\n            add(j, i, 0);\n        }\n    int mx = 0, p = 0;\n    for (int i = 1; i <= n; i++)\n        if (a[i].l <= x && a[i].c == 1 && a[i].p > mx)\n            mx = a[i].p, p = i;\n    if (p)\n    {\n        tot += mx;\n        add(p, t, mx);\n        add(t, p, 0);\n        for (int i = 1; i <= n; i++)\n            if (!(a[i].c & 1) && !v[a[i].c + 1])\n                add(i, p, INF), add(p, i, 0);\n    }\n    int res = dinic();\n    return tot - res >= k;\n}\n\nint main()\n{\n    init();\n    n = read(), k = read();\n    for (int i = 1; i <= n; i++)\n        a[i].p = read(), a[i].c = read(), a[i].l = read();\n    int l = 1, r = n;\n    s = 0, t = n + 1;\n    bool flag = 0;\n    while (l <= r)\n    {\n        int mid = (l + r) >> 1;\n        if (check(mid)) r = mid - 1, flag = true;\n        else l = mid + 1;\n    }\n    printf(\"%d\\n\", flag ? l : -1);\n    return 0;\n}\n```\n\n",
        "postTime": 1662033292,
        "uid": 587248,
        "name": "wcywcywcywcy",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011CF808F"
    },
    {
        "content": "\u9996\u5148\u53d1\u73b0\u548c\u4e3a\u8d28\u6570\u8fd9\u4e1c\u897f\u6ca1\u6709\u4ec0\u4e48\u5f88\u597d\u7684\u7ef4\u62a4\u65b9\u6cd5\uff0c\u53c8\u770b\u5230 $n$ \u8fd9\u4e48\u5c0f\uff0c\u8003\u8651\u76f4\u63a5\u7b97\u3002\n\n\u5148\u4e8c\u5206\u7b49\u7ea7 $l$\uff0c\u628a\u95ee\u9898\u8f6c\u5316\u6210\u67d0\u4e9b\u5361\u724c\u4e0d\u80fd\u540c\u65f6\u9009\uff0c\u6c42\u80fd\u9009\u7684\u5361\u724c\u6743\u503c\u548c\u6700\u5927\u503c\u3002\u8fd9\u4e1c\u897f\u7c7b\u4f3c\u4e8e\u6700\u5927\u72ec\u7acb\u96c6\uff0c\u800c\u8fd9\u4e1c\u897f\u5728\u4e00\u822c\u56fe\u4e0a\u662f\u4e0d\u592a\u53ef\u505a\u7684\u3002\n\n\u6ce8\u610f\u5230 $2$ \u4ee5\u4e0a\u7684\u8d28\u6570\u90fd\u662f\u5947\u6570\uff0c\u800c\u5947\u6570\u53ea\u6709\u53ef\u80fd\u662f\u5076\u6570\u548c\u5947\u6570\u7684\u548c\u3002\u6240\u4ee5\u5c06\u5361\u724c\u6309\u5947\u5076\u5206\u3002\u6709\u4e00\u4e2a\u7279\u4f8b\u662f $1$\uff0c\u4f46 $1$ \u53ea\u4f1a\u9009 $1$ \u5f20\uff0c\u7136\u540e\u5c31\u6b63\u5e38\u8003\u8651\u597d\u4e86\u3002\n\n\u8003\u8651\u5982\u4e0b\u6784\u9020\uff1a\u5efa\u7acb\u8d85\u7ea7\u539f\u70b9 $S$ \u548c\u8d85\u7ea7\u6c47\u70b9 $T$\uff0c$S$ \u5411\u6240\u6709\u5076\u6570\u8fde\u6d41\u91cf\u4e3a\u5176 $p_i$ \u7684\u8fb9\uff0c\u6240\u6709\u5947\u6570\u5411 $T$ \u8fde\u6d41\u91cf\u4e3a\u5176 $p_i$ \u7684\u8fb9\uff0c\u800c\u5728\u4e0d\u80fd\u540c\u65f6\u9009\u7684\u5076\u6570\u548c\u8d28\u6570\u95f4\u8fde\u6d41\u91cf\u4e3a\u65e0\u7a77\u5927\u7684\u8fb9\u3002\u8fd9\u6837\uff0c\u6c42\u51fa\u6765\u7684\u6700\u5c0f\u5272\u4e00\u5b9a\u80fd\u4f7f\u5269\u4e0b\u7684 $p_i$ \u548c\u6700\u5927\uff0c\u4e14\u4e24\u4e24\u4e0d\u51b2\u7a81\u3002\n\nDinic \u5f53\u524d\u5f27\u5199\u6302\u4e86\uff0c\u5220\u6389\u5c31\u8fc7\u4e86\uff0c\u8dd1\u5f97\u98de\u5feb\uff0c\u5199\u9898\u89e3\u7684\u65f6\u5019\u6700\u4f18\u89e3\u7b2c\u4e8c\u3002\n\n```cpp\n/* name: CF808F\n * author: 5ab\n * created at: 22-07-08 20:31\n */\n#include <queue>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\ntypedef long long ll;\nconst int max_n = 100, max_nd = max_n + 2, max_m = max_n * max_n + max_n + max_n, max_c = 200000, INF = 0x3f3f3f3f;\n\nstruct nd\n{\n\tint p, c, l, id;\n};\nnd a[max_n];\nbool isp[max_c+1];\nint hd[max_nd], des[max_m<<1], val[max_m<<1], nxt[max_m<<1], cur[max_nd], dis[max_nd], e_cnt, n, k;\n\nvoid add(int s, int t, int v)\n{\n\tdes[e_cnt] = t, val[e_cnt] = v;\n\tnxt[e_cnt] = hd[s], hd[s] = e_cnt++;\n\t\n\tdes[e_cnt] = s, val[e_cnt] = 0;\n\tnxt[e_cnt] = hd[t], hd[t] = e_cnt++;\n}\n\ninline int my_min(int a, int b) { return (a < b)? a:b; }\nint dfs(int id, int curf)\n{\n\tif (id == n + 1)\n\t\treturn curf;\n\t\n\tint ret = 0, tmp;\n\t\n\tfor (int p = cur[id]; p != -1; p = nxt[p])\n\t\tif (val[p] && dis[des[p]] == dis[id] + 1)\n\t\t{\n\t\t\ttmp = dfs(des[p], my_min(val[p], curf));\n\t\t\tval[p] -= tmp, val[p^1] += tmp, ret += tmp, curf -= tmp;\n\t\t\tif (!curf)\n\t\t\t\treturn ret;\n\t\t}\n\treturn ret;\n}\n\nqueue<int> q;\nbool bfs()\n{\n\tmemset(dis, 0x3f, sizeof dis);\n\tq.push(n), dis[n] = 0;\n\t\n\tint cd;\n\twhile (!q.empty())\n\t{\n\t\tcd = q.front();\n\t\tq.pop();\n\t\t\n\t\tfor (int p = hd[cd]; p != -1; p = nxt[p])\n\t\t\tif (val[p] > 0 && dis[des[p]] > dis[cd] + 1)\n\t\t\t{\n\t\t\t\tdis[des[p]] = dis[cd] + 1;\n\t\t\t\tq.push(des[p]);\n\t\t\t}\n\t}\n\t\n\treturn dis[n+1] < INF;\n}\n\nbool check(int lim)\n{\n\te_cnt = 0;\n\tmemset(hd, -1, sizeof hd);\n\t\n\tint mxc = 0, mxp = -1, psm = 0;\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tif (a[i].l > lim)\n\t\t\tbreak;\n\t\tif (a[i].c == 1)\n\t\t{\n\t\t\tif (a[i].p > mxc)\n\t\t\t{\n\t\t\t\tmxc = a[i].p;\n\t\t\t\tmxp = i;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpsm += a[i].p;\n\t\t\tif (a[i].c & 1)\n\t\t\t\tadd(n, i, a[i].p);\n\t\t\telse\n\t\t\t\tadd(i, n + 1, a[i].p);\n\t\t\t\n\t\t\tfor (int j = 0; j < i; j++)\n\t\t\t\tif (a[j].c > 1 && !isp[a[j].c+a[i].c])\n\t\t\t\t{\n\t\t\t\t\tif (a[i].c & 1)\n\t\t\t\t\t\tadd(i, j, INF);\n\t\t\t\t\telse\n\t\t\t\t\t\tadd(j, i, INF);\n\t\t\t\t}\n\t\t}\n\t}\n\tif (mxp != -1)\n\t{\n\t\tadd(n, mxp, mxc);\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tif (a[i].c > 1 && !isp[a[i].c+1])\n\t\t\t\tadd(mxp, i, INF);\n\t}\n\t\n\tfor (int i = 0; i < n + 2; i++)\n\t\tcur[i] = hd[i];\n\t\n\tint ans = 0;\n\twhile (bfs())\n\t\tans += dfs(n, INF);\n\t\n\treturn psm + mxc - ans >= k;\n}\n\nsigned main()\n{\n\tisp[0] = isp[1] = true;\n\tfor (int i = 2; i <= max_c; i++) if (!isp[i])\n\t\tfor (int j = i + i; j <= max_c; j += i)\n\t\t\tisp[j] = true;\n\t\n\tios_base::sync_with_stdio(false);\n\tcin.tie(nullptr);\n\t\n\tcin >> n >> k;\n\tfor (int i = 0; i < n; i++)\n\t\tcin >> a[i].p >> a[i].c >> a[i].l, a[i].id = i;\n\tsort(a, a + n, [](const nd& a, const nd& b) {\n\t\treturn (a.l == b.l) ? (a.id < b.id) : (a.l < b.l);\n\t});\n\t\n\tint lb = 1, ub = n + 1, mid, ans = -1;\n\t\n\twhile (lb < ub)\n\t{\n\t\tmid = (lb + ub) >> 1;\n\t\tif (check(mid))\n\t\t\tans = mid, ub = mid;\n\t\telse\n\t\t\tlb = mid + 1;\n\t}\n\tcout << ans << endl;\n\t\n\treturn 0;\n}\n```",
        "postTime": 1657454370,
        "uid": 119491,
        "name": "5ab_juruo",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011CF808F Card Game"
    }
]