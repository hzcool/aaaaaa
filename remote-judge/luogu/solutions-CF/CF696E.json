[
    {
        "content": "\u8fd9\u6709 *3000 \uff1f\n\n\u56e0\u4e3a\u53ea\u6709\u5220\u9664\u64cd\u4f5c\uff0c\u6bcf\u6b21\u8be2\u95ee\u6743\u503c\u6700\u5c0f\u7684\u66b4\u529b\u5220\u9664\u5373\u53ef\u3002\n\n\u5b50\u6811\u4fee\u6539\u76f4\u63a5 dfn \u5e8f\u7ebf\u6bb5\u6811\u89e3\u51b3\u3002\n\n\u8def\u5f84\u67e5\u8be2\uff1f\u76f4\u63a5\u4e0a\u6811\u5256\u5212\u5206\u6210 $O(\\log n)$ \u4e2a\u533a\u95f4\u67e5\u8be2\u3002\n\n\u6bcf\u6b21\u4fee\u6539\u4e0d\u9700\u8981\u90fd\u67e5\u627e $O(\\log n)$ \u4e2a\u533a\u95f4\uff0c\u53ea\u9700\u8981\u4e00\u6b21\u67e5\u627e\u5b8c\u4e4b\u540e\u7edf\u4e00\u67e5\u8be2\uff0c\u8fd9\u6837\u80fd\u51cf\u5c11\u5e38\u6570\u3002\n\n\u8fd9\u91cc\u8bb2\u4e00\u4e0b\u6bcf\u6b21\u600e\u4e48\u66b4\u529b\u4fee\u6539\u3002\n\n\u5bf9\u6bcf\u4e2a**\u53f6\u5b50\u8282\u70b9**\uff08\u4e5f\u4ee3\u8868\u7740\u5e8f\u5217\u4e2d\u7684\u4e00\u4e2a\u4f4d\u7f6e\uff09\u5f00\u4e00\u4e2a queue \u8bb0\u5f55\u6bcf\u4e2a\u5143\u7d20\uff0c\u7531\u4e8e\u5143\u7d20\u662f\u6309\u7167\u6743\u503c\u5347\u5e8f\u7684\u987a\u5e8f\u52a0\u8fdb\u6765\u7684\uff0c\u6240\u4ee5\u6ee1\u8db3\u5148\u8fdb\u5148\u51fa\u7684\u7279\u6027\uff0c\u4e0d\u9700\u8981\u5f00 vector \u8fdb\u884c\u6392\u5e8f\u3002\n\n\u8fd9\u6837\u7684\u8bdd\u4e0d\u9700\u8981\u4ec0\u4e48\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\u505a\u4ec0\u4e48\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u592a\u9ebb\u70e6\u3002\n\n\u52a0\u6cd5\u61d2\u6807\u8bb0\u6b63\u5e38\u5f00\uff0c\u6bcf\u6b21\u4ece queue \u4e2d\u53d6\u51fa\u4e00\u4e2a\u5143\u7d20\uff0c\u5c31\u66f4\u65b0\u4e00\u4e0b\u5f53\u524d\u8282\u70b9\u7684\u6700\u5c0f\u6743\u503c\uff0c\u522b\u5fd8\u4e86\u52a0\u4e0a\u61d2\u6807\u8bb0\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O((m+q)\\log^2 n+n)$\n\n\u4ee3\u7801\u4e5f\u4e0d\u957f\uff0c\u5199\u8d77\u6765\u4e5f\u5f88\u5feb\uff0c\u800c\u4e14\u90fd\u662f\u677f\u5b50\uff0c\u6ca1\u4ec0\u4e48\u7ec6\u8282\u3002\n\n\u4f46\u662f\u6211\u56e0\u4e3a sb \u9519\u8bef\u8c03\u4e86\u534a\u5c0f\u65f6/fn\n\n\u53e6\u5916\u8fd9\u9898\u53ef\u4ee5\u52a0\u5f3a\u5230 $1\\log$\uff0c\u505a\u6cd5\u662f\u9759\u6001 Top Tree\u3002\n\n# AC code\uff1a\n```cpp\nvector<int> edge[100005];\nqueue<pair<ll,int>> q[100005];\nint siz[100005],dfn[100005],fa[100005],ls[200005],rs[200005],dep[100005],tot,tim,depth,c[100005],hson[100005],top[100005],scnt;\nll lazy[200005];\npair<int,int> s[50];\npair<ll,int> minn[200005];\nvoid dfs1(int u,int f){\n\tfa[u]=f,siz[u]=1,dep[u]=++depth;\n\tfor(int v:edge[u]) if(v^f){dfs1(v,u),siz[u]+=siz[v];if(siz[hson[u]]<siz[v]) hson[u]=v;}depth--;\n}\nvoid dfs2(int u,int f){\n\tdfn[u]=++tim;\n\tif(hson[u]) top[hson[u]]=top[u],dfs2(hson[u],u);\n\tfor(int v:edge[u]) if(v^f&&v^hson[u]) top[v]=v,dfs2(v,u);\n}\nvoid build(int &x,int l,int r){\n\tx=++tot;if(l==r){if(q[l].empty()) minn[x]={inf,0};else minn[x]=q[l].front();return ;}\n\tint mid=l+r>>1;build(ls[x],l,mid),build(rs[x],mid+1,r);\n\tminn[x]=min(minn[ls[x]],minn[rs[x]]);\n}\ninline void pushdown(int x){\n\tminn[ls[x]].first+=lazy[x],minn[rs[x]].first+=lazy[x];\n\tlazy[ls[x]]+=lazy[x],lazy[rs[x]]+=lazy[x],lazy[x]=0;\n}\npair<ll,int> query(int x,int l,int r,int l1,int r1){\n\tif(l<=l1&&r1<=r) return minn[x];\n\tpushdown(x);int mid=l1+r1>>1;pair<ll,int> res={inf,0};\n\tif(l<=mid) res=query(ls[x],l,r,l1,mid);if(mid<r) res=min(res,query(rs[x],l,r,mid+1,r1));\n\treturn res;\n}\nvoid add(int x,int l,int r,int l1,int r1,int val){\n\tif(l<=l1&&r1<=r){minn[x].first+=val,lazy[x]+=val;return ;}\n\tpushdown(x);int mid=l1+r1>>1;\n\tif(l<=mid) add(ls[x],l,r,l1,mid,val);if(mid<r) add(rs[x],l,r,mid+1,r1,val);\n\tminn[x]=min(minn[ls[x]],minn[rs[x]]);\n}\nvoid change(int x,int l,int r,int pos){\n\tif(l==r){q[l].pop();if(q[l].empty()) minn[x]={inf,0};else minn[x]=q[l].front(),minn[x].first+=lazy[x];return ;}\n\tpushdown(x);int mid=l+r>>1;\n\tif(pos<=mid) change(ls[x],l,mid,pos);else change(rs[x],mid+1,r,pos);\n\tminn[x]=min(minn[ls[x]],minn[rs[x]]);\n}\nint ans[100005];\ninline void query(int u,int v){\n\twhile(top[u]^top[v]){\n\t\tif(dep[top[u]]<dep[top[v]]) u^=v^=u^=v;\n\t\ts[++scnt]={dfn[top[u]],dfn[u]},u=fa[top[u]];\n\t}\n\tif(dfn[u]<dfn[v]) s[++scnt]={dfn[u],dfn[v]};else s[++scnt]={dfn[v],dfn[u]};\n}\nint main(){\n\tint n=read(n),m=read(m),Q=read(Q),rt,i;top[1]=1;\n\tfor(i=1;i<n;i++){int u=read(u),v=read(v);edge[u].eb(v),edge[v].eb(u);}\n\tdfs1(1,0),dfs2(1,0);\n\tfor(i=1;i<=m;i++) q[dfn[read(c[i])]].push({i,i});build(rt,1,n);\n\twhile(Q--){\n\t\tint op=read(op);\n\t\tif(op==1){\n\t\t\tint u=read(u),v=read(v),k=read(k),cnt;scnt=0,query(u,v);\n\t\t\twhile(k--){\n\t\t\t\tpair<ll,int> ret={inf,0};\n\t\t\t\tfor(i=1;i<=scnt;i++) ret=min(ret,query(1,s[i].first,s[i].second,1,n));\n\t\t\t\tif(!ret.second) break;ans[++cnt]=ret.second,change(1,1,n,dfn[c[ret.second]]);\n\t\t\t}\n\t\t\tprint(cnt),space;for(i=1;i<=cnt;i++) print(ans[i]),space;enter,cnt=0;\n\t\t}\n\t\telse{int u=read(u),k=read(k);add(1,dfn[u],dfn[u]+siz[u]-1,1,n,k);}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1649001315,
        "uid": 80614,
        "name": "ZCPB",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF696E"
    },
    {
        "content": "### \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u68f5 $n$ \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u6709 $m$ \u4e2a\u7269\u54c1\uff0c\u7b2c $i$ \u4e2a\u5728\u8282\u70b9 $c_i$\uff0c\u521d\u59cb\u6743\u503c\u4e3a $i$\u3002\n\n\u4f60\u9700\u8981\u652f\u6301\u4e24\u79cd\u64cd\u4f5c\uff1a\n\n- \u5bf9\u4e8e\u6811\u4e0a\u7684\u7b80\u5355\u8def\u5f84 $u \\to v$\uff0c\u5220\u9664\u6743\u503c\u524d $k$ \u5c0f\u7684\u7269\u54c1\u5e76\u8f93\u51fa\u3002\n- \u5bf9\u4e8e\u5b50\u6811 $x$\uff0c\u5c06\u5b50\u6811\u5185\u6240\u6709\u7269\u54c1\u6743\u503c\u52a0 $x$\u3002\n\n### Solution\n\n\u8003\u8651 $k=1$ \u4e14\u53ea\u6709\u7b2c\u4e00\u79cd\u64cd\u4f5c\u7684\u60c5\u51b5\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u7ef4\u62a4\u5176\u5f53\u524d\u7684\u6700\u5c0f\u6743\u503c\uff0c\u8fd9\u91cc\u53ef\u4ee5\u4f7f\u7528\u961f\u5217\u3002\u4f7f\u7528\u6811\u5256\u7ef4\u62a4\u8def\u5f84\u6700\u5c0f\u503c\u5373\u53ef\u3002\n\n\u8003\u8651 $k\\leq n$ \u4e14\u53ea\u6709\u7b2c\u4e00\u79cd\u64cd\u4f5c\u7684\u60c5\u51b5\u3002\u6ce8\u610f\u5230\u5220\u9664\u6743\u503c\u524d $k$ \u5c0f\u7684\u7269\u54c1\u5176\u5b9e\u53ef\u4ee5\u8f6c\u6362\u6210\u591a\u8f6e\u8fed\u4ee3\uff0c\u5373\u6bcf\u6b21\u53d6\u51fa\u5e76\u5220\u53bb\u6700\u5c0f\u503c\uff0c\u91cd\u590d $k$ \u6b21\u3002\n\n\u52a0\u4e0a\u7b2c\u4e8c\u79cd\u64cd\u4f5c\u3002\u53ef\u4ee5\u53d1\u73b0\u5176\u5b9e\u53ea\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u961f\u5217\u591a\u7ef4\u62a4\u4e86\u4e00\u4e2a\u52a0\u6cd5\u6807\u8bb0\u3002\u5bf9\u4e8e\u5b50\u6811\u5185\u7684\u961f\u5217\uff0c\u5176\u52a0\u6cd5\u6807\u8bb0\u5168\u90e8 $+x$\u3002\u5f53\u5220\u9664\u70b9 $u$ \u4e0a\u7684\u6700\u5c0f\u503c\uff0c\u52a0\u5165\u70b9 $u$ \u65b0\u7684\u6700\u5c0f\u503c\u65f6\uff0c\u5c06\u65b0\u7684\u6700\u5c0f\u503c\u52a0\u4e0a\u52a0\u6cd5\u6807\u8bb0\u7684\u503c\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n \\log n+Q \\log ^2 n)$\u3002\n\n\n\n",
        "postTime": 1634708474,
        "uid": 95244,
        "name": "tommymio",
        "ccfLevel": 6,
        "title": "Solution CF696E"
    },
    {
        "content": "\u8003\u8651\u6bcf\u4e2a\u6570\u53ea\u4f1a\u5220\u4e00\u6b21\uff0c\u610f\u5473\u7740\u6211\u4eec\u66b4\u529b\u627e\u8ddf\u66b4\u529b\u5220\u590d\u6742\u5ea6\u6b63\u786e\u3002\n\n\u5373\u95ee\u9898\u53d8\u4e3a\n\n\u6bcf\u4e2a\u70b9\u662f\u4e00\u4e2a\u96c6\u5408\n\n1. \u5bf9\u4e8e\u8def\u5f84 $(u,v)$ \u627e\u6bcf\u4e2a\u96c6\u5408\u7684\u5143\u7d20\u7684\u6700\u5c0f\u503c\n\n2. \u5220\u53bb\u8fd9\u4e2a\u6700\u5c0f\u503c\n\n3. \u5b50\u6811\u52a0\n\n\u8003\u8651\u6811\u5256\uff0c\u96c6\u5408\u7684\u8bdd\u53ef\u4ee5\u7528 ```vector+\u542f\u53d1\u5f0f\u5408\u5e76``` \u4e4b\u7c7b\u7684\u53bb\u7ef4\u62a4\u7ebf\u6bb5\u6811\u4e2d\u4e00\u4e2a\u70b9\u7684\u533a\u95f4\u96c6\u5408\u5e76\u96c6\uff0c\u4f46\u662f\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u6700\u5c0f\u503c\uff0c\u4e8e\u662f\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u4e0a\u7684\u70b9\u8bb0\u5f55\u6700\u5c0f\u503c\u5373\u53ef\u3002\n\n\u8003\u8651\u5220\u9664\uff0c\u627e\u5230\u540e\u66b4\u529b\u5220\u3002\n\n\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u7684\u6807\u8bb0\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6b63\u5e38\u4e0b\u653e\uff0c\u5728\u5220\u9664\u7684\u65f6\u5019\u8ba1\u7b97\u51fa\u6700\u5c0f\u503c\u52a0\u4e86\u591a\u5c11\uff0c\u628a\u8fd9\u4e9b\u6240\u52a0\u7684\u4fdd\u7559\u5373\u53ef\u3002\n\n\u6ce8\u610f\u65f6\u7a7a\u5e38\u6570\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define KG putchar(' ')\nusing namespace std;\n// \u6811\u5256+\u7ebf\u6bb5\u6811 \u7ef4\u62a4\u5c0f\u6839\u5806\n#define N (int)(2e5+5)\n#define inf (ll)(2e18)\n#define min(A,B) (A<B?A:B)\nqueue<int>q[N];\nstruct DAT {\n\tll x; int id,pos;\n\tDAT(ll xx=inf,int idd=(int)(1e9),int poss=0) {\n\t\tx=xx; id=idd; pos=poss;\n\t}\n\tbool operator < (const DAT &rhs) const {\n\t\treturn x==rhs.x?id<rhs.id:x<rhs.x;\n \t} \n};\nstruct edge {\n\tint nex,to;\n}e[N<<1];\nint tot,rk[N],id[N],tp[N],fa[N],dep[N],sz[N],son[N];\nint hea[N],cnt;\nint n,m,Q;\nnamespace xgf {\n\t#define ls (cur<<1)\n\t#define rs (ls|1)\n\tstruct TREE {\n\t\tDAT mi;\n\t\tll tag;\n\t\tTREE(DAT mii=DAT(inf,(int)(1e9),0),ll tagg=0) {\n\t\t\tmi=mii; tag=tagg;\n\t\t}\n\t}T[N<<2];\n\tvoid push_up(int cur) {\n\t\tT[cur].mi=min(DAT(T[ls].mi.x,T[ls].mi.id,T[ls].mi.pos),DAT(T[rs].mi.x,T[rs].mi.id,T[rs].mi.pos));\n\t}\n\tvoid push_down(int cur) {\n\t\tif(!T[cur].tag) return ;\n\t\tT[ls].tag+=T[cur].tag; T[rs].tag+=T[cur].tag;\n\t\tT[ls].mi.x+=T[cur].tag; T[rs].mi.x+=T[cur].tag; \n\t\tT[cur].tag=0;\n\t}\n\tvoid build(int cur,int l,int r) {\n\t\tif(l==r) {\n\t\t\tif(q[rk[l]].empty()) T[cur].mi=DAT(inf,(int)(1e9),0);\n\t\t\telse {\n\t\t\t\tT[cur].mi=DAT(q[rk[l]].front(),q[rk[l]].front(),l);\n\t\t\t//\tcout<<\": \"<<rk[l]<<\" \"<<-q[rk[l]].top().x<<endl;\n\t\t\t}\n\t\t\treturn ;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tbuild(ls,l,mid); build(rs,mid+1,r);\n\t\tpush_up(cur); \n\t}\n\tvoid update(int cur,int l,int r,int cl,int cr,ll x) {\n\t\tif(cl<=l&&r<=cr) {\n\t\t\tT[cur].tag+=x; T[cur].mi.x+=x; return ;\n\t\t}\n\t\tpush_down(cur);\n\t\tint mid=(l+r)>>1;\n\t\tif(cl<=mid) update(ls,l,mid,cl,cr,x);\n\t\tif(cr>mid) update(rs,mid+1,r,cl,cr,x);\n\t\tpush_up(cur);\n\t}\n\tDAT query(int cur,int l,int r,int cl,int cr) {\n\t\tif(cl<=l&&r<=cr) {\n\t\t//\tcout<<-T[cur].mi.x+T[cur].tag<<\" \"<<-T[cur].mi.id<<endl;\n\t\t\treturn DAT(T[cur].mi.x,T[cur].mi.id,T[cur].mi.pos);\n\t\t}\n\t\tpush_down(cur);\n\t\tint mid=(l+r)>>1;\n\t\tif(cr<=mid) return query(ls,l,mid,cl,cr);\n\t\tif(cl>mid) return query(rs,mid+1,r,cl,cr);\n\t\treturn min(query(ls,l,mid,cl,cr),query(rs,mid+1,r,cl,cr));\n\t\tpush_up(cur);\n\t}\n\tvoid del(int cur,int l,int r,int pos) {\n\t\tif(l==r) {\n\t\t\tll qwq=q[rk[l]].front(); q[rk[l]].pop();\n\t\t\tif(q[rk[l]].empty()) T[cur].mi=DAT(inf,(int)(1e9),0);\n\t\t\telse {\n\t\t\t\tqwq=T[cur].mi.x-qwq+q[rk[l]].front();\n\t\t\t\tT[cur].mi=DAT(qwq,q[rk[l]].front(),l);\n\t\t\t}\n\t\t\treturn ;\n\t\t}\n\t\tpush_down(cur);\n\t\tint mid=(l+r)>>1;\n\t\tif(pos<=mid) del(ls,l,mid,pos);\n\t\telse del(rs,mid+1,r,pos);\n\t\tpush_up(cur);\n\t}\n} \n\nvoid add_edge(int x,int y) {\n\te[++cnt].nex=hea[x]; e[cnt].to=y; hea[x]=cnt;\n}\n\nvoid dfs1(int x,int ff) {\n\tfa[x]=ff; dep[x]=dep[ff]+1; sz[x]=1;\n\tfor(int i=hea[x];i;i=e[i].nex) {\n\t\tint y=e[i].to; if(y==ff) continue;\n\t\tdfs1(y,x); sz[x]+=sz[y];\n\t\tif(sz[y]>sz[son[x]]) son[x]=y;\n\t}\n}\n\nvoid dfs2(int x,int tpp) {\n\ttp[x]=tpp; id[x]=++tot; rk[tot]=x;\n\tif(son[x]) dfs2(son[x],tpp);\n\tfor(int i=hea[x];i;i=e[i].nex) {\n\t\tint y=e[i].to; \n\t\tif(y==son[x]||y==fa[x]) continue;\n\t\tdfs2(y,y);\n\t}\n}\n\nvector<int>ans;\nvoid solve(int fx,int fy,int z) {\n\tans.clear();\n\twhile(z--) {\n\t\tint x=fx,y=fy; DAT res=DAT(inf,(int)(1e9),0);\n\t\twhile(tp[x]!=tp[y]) {\n\t\t\tif(dep[tp[x]]<dep[tp[y]]) swap(x,y);\n\t\t\tres=min(res,xgf::query(1,1,n,id[tp[x]],id[x]));\n\t\t\tx=fa[tp[x]];\n\t\t}\n\t\tif(id[x]>id[y]) swap(x,y);\n\t\tres=min(res,xgf::query(1,1,n,id[x],id[y]));\n\t//\tcout<<res.x.x<<\" \"<<res.x.id<<\" \"<<rk[res.pos]<<endl;\n\t\tif(res.x>=inf) break;\n\t\tans.push_back(res.id);\n\t\txgf::del(1,1,n,res.pos);\n\t}\n\tcout<<ans.size()<<\" \";\n\tfor(int i=0;i<ans.size();i++) cout<<ans[i]<<\" \";\n\tcout<<\"\\n\";\n}\n\nsigned main() {\n\tios::sync_with_stdio(false);\n\tcout.tie(NULL);\n\tint op,x,y,z;\n\tcin>>n>>m>>Q;\n\tfor(int i=1;i<n;i++) {\n\t\tcin>>x>>y;\n\t\tadd_edge(x,y); add_edge(y,x);\n\t}\n\tfor(int i=1;i<=m;i++) {\n\t\tcin>>x;\n\t\tq[x].push(i);\n\t}\n\tdfs1(1,0); dfs2(1,0); xgf::build(1,1,n);\n\twhile(Q--) {\n\t\tcin>>op>>x>>y;\n\t\tif(op==1) {\n\t\t\tcin>>z;\n\t\t\tsolve(x,y,z);\n\t\t} else {\n\t\t\txgf::update(1,1,n,id[x],id[x]+sz[x]-1,1ll*y);\n\t\t}\n\t}\n\treturn 0;\t\t\n}\n```",
        "postTime": 1641140075,
        "uid": 125901,
        "name": "FxorG",
        "ccfLevel": 7,
        "title": "\u3010DS\u3011CF696E ...Wait for it..."
    }
]