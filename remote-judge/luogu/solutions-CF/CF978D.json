[
    {
        "content": "### \u9898\u610f\u7b80\u8ff0\uff1a\n\u6709\u4e00\u4e2a\u6570\u5217\uff0c\u53ef\u4ee5\u5bf9\u6570\u5217\u7684\u503c $+1$ \u6216 $-1$\uff0c\u4fee\u6539\u82e5\u5e72\u6b21\uff0c\u4f7f\u5f97\u6570\u5217\u4e3a\u7b49\u5dee\u6570\u5217\uff0c\u6700\u5c0f\u5316\u4fee\u6539\u6b21\u6570,\u65e0\u89e3\u8f93\u51fa $-1$\u3002\n\n### \u601d\u8def\u8bb2\u89e3\uff1a\n\u8fd9\u9053\u9898\u5176\u5b9e\u6240\u9700\u8981\u7684\u7b97\u6cd5\u77e5\u8bc6\u5e76\u4e0d\u591a\uff0c\u66f4\u591a\u7684\u662f\u5bf9\u7b49\u5dee\u6570\u5217\u7684\u8ba4\u8bc6\u3002\n\n\u6211\u4eec\u77e5\u9053\u4e00\u4e2a\u7b49\u5dee\u6570\u5217\u7531\u9996\u9879 $a_1$ \u548c\u516c\u5dee $d$ \u6240\u51b3\u5b9a\uff0c\u800c\u53ea\u8981\u786e\u5b9a\u4e86\u7b49\u5dee\u6570\u5217\u4e2d\u7684\u4e24\u9879\uff0c\u516c\u5dee $d$ \u5c31\u786e\u5b9a\u4e86\u3002\n\n\u56e0\u800c\u6211\u4eec\u53ef\u4ee5\u601d\u8003\u679a\u4e3e\u7b49\u5dee\u6570\u5217\u524d\u4e24\u9879\u7684\u53ef\u80fd\u6027\uff0c\u6765\u68c0\u9a8c\u6574\u4e2a\u6570\u5217\u80fd\u5426\u6210\u4e3a\u4e00\u4e2a\u7b49\u5dee\u6570\u5217\u3002\n\n\u5177\u4f53\u5730\uff0c\u8bbe\u516c\u5dee\u4e3a $d$\uff0c\u5982\u679c\u6570\u5217 $a$ \u7684\u67d0\u4e24\u9879 $a_i$ \u548c $a_{i-1}$ \u6ee1\u8db3\u5982\u4e0b\u5176\u4e2d\u4e00\u4e2a\u6761\u4ef6\u65f6\uff0c\u4e0d\u80fd\u901a\u8fc7\u4fee\u6539\u6570\u5217\u4f7f\u5176\u6784\u6210\u4e00\u4e2a\u7b49\u5dee\u6570\u5217\u3002\n\n$$\n\\left\\{\n      \\begin{array}{lr}\n      a_i-a_{i-1} > d+1\\\\\n      a_i - a_{i-1}<d-1\n      \\end{array}\n\\right.\n$$\n\u8fd9\u6837\u53ea\u9700\u679a\u4e3e\u7b49\u5dee\u6570\u5217\u524d\u4e24\u9879\u7684\u53ef\u80fd\u6027\uff0c\u518d\u8fdb\u884c\u68c0\u9a8c\u5373\u53ef\u3002\n                        \n\u7531\u4e8e\u524d\u4e24\u9879\u7684\u53d6\u503c\u4ec5\u6709 $9$ \u79cd\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(9n)$\uff0c\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n                        \n### \u6838\u5fc3\u4ee3\u7801\uff1a\n```cpp\ninline int judge(int d) {//\u68c0\u9a8c\u8be5\u516c\u5dee\u662f\u5426\u53ef\u884c\n\tint res = 0;\n\tfor(ri i = 3;i <= n;++i){\n\t\tif(b[i]-b[i-1] > d + 1 || b[i]-b[i-1] < d - 1) return -1;\n \t\telse if(b[i]-b[i-1] == d + 1) ++res,b[i]--;\n \t\telse if(b[i] - b[i-1] == d - 1) ++res,++b[i];\n\t} \n\treturn res;\n}\n```\n      \n",
        "postTime": 1613822643,
        "uid": 413147,
        "name": "_Alejandro_",
        "ccfLevel": 0,
        "title": "CF978D\u9898\u89e3"
    },
    {
        "content": "\u56e0\u4e3a\u8981\u6784\u6210\u4e00\u4e2a[\u7b49\u5dee\u6570\u5217](https://baike.baidu.com/item/%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97/1129192?fr=aladdin)\uff0c\u6240\u4ee5\u5f88\u5bb9\u6613\u60f3\u5230\n\n### \u53ea\u8981\u786e\u5b9a\u7b2c 1\u30012 \u9879\uff0c\u5c31\u53ef\u786e\u5b9a\u540e\u9762\u7684\u6bcf\u4e00\u9879\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5148\u679a\u4e3e\u7b2c 1\u30012 \u9879\u7684\u64cd\u4f5c\u65b9\u6cd5\uff0c\u7136\u540e\u6c42\u51fa\u6574\u4e00\u4e2a\u5e8f\u5217\u3002\u82e5\u6570\u7ec4\u4e2d\u6709\u4e00\u4e2a\u6570\u4e0e\u6c42\u51fa\u7684\u5e8f\u5217\u7684\u6570\u5b57\u76f8\u5dee $\\geq 1$,\u5219\u5224\u5b9a\u8fd9\u79cd\u65b9\u6cd5\u4e0d\u884c\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <iostream>\n#include <cstring>\nusing namespace std;\nint a[100005];\nint tmp[100005];//\u4e34\u65f6\u6570\u7ec4 \nint d[3]={0,1,-1};//\u64cd\u4f5c\u7684\u65b9\u6cd5 \nint cnt[3]={0,1,1};//\u64cd\u4f5c\u6240\u9700\u53d8\u5316\u6b21\u6570 \nint main()\n{\n    int n;\n    cin>>n;\n    for(int i=0;i<n;i++) cin>>a[i];\n    int ans=0x7fffffff;//\u5148\u8d4b\u6210\u4e00\u4e2a\u6781\u5927\u503c \n    for(int i=0;i<3;i++)\n        for(int j=0;j<3;j++)//\u679a\u4e3e\u7b2c1\u30012\u9879\u7684\u64cd\u4f5c\u65b9\u6cd5 \n        {\n            memcpy(tmp,a,sizeof(tmp));//\u5148\u590d\u5236\u6570\u7ec4 \n            bool isCan=true;//\u8fd9\u79cd\u679a\u4e3e\u65b9\u6cd5\u662f\u5426\u6ee1\u8db3\u9898\u76ee\u8981\u6c42 \n            int sub=tmp[0]+d[i]-(tmp[1]+d[j]);//\u6c42\u51fa\u516c\u5dee \n            tmp[1]+=d[j];//\u66f4\u65b0\u7b2c\u4e00\u4e2a\u6570(\u8fd9\u91cc\u548c\u4e0b\u9762\u66f4\u65b0\u6570\u5b57\u65f6\u4e0d\u80fd\u7528\u539f\u6570\u7ec4) \n            int c=cnt[i]+cnt[j];//\u5171\u7528\u7684\u6b21\u6570 \n            for(int k=2;k<n;k++)//\u4ece\u7b2c\u4e09\u9879\u5f00\u59cb \n            {\n                bool find=false;//\u5bf9\u4e8e\u8fd9\u4e2a\u6570\uff0c\u5224\u65ad\u5b83\u662f\u5426\u6709\u4e00\u4e2a\u64cd\u4f5c\u65b9\u6cd5\uff0c\u4f7f\u5f97\u53ef\u4ee5\u6784\u6210\u4e00\u4e2a\u7b49\u5dee\u6570\u5217 \n                for(int l=0;l<3;l++)//\u679a\u4e3e \n                    if(tmp[k-1]-(tmp[k]+d[l])==sub)//\u6784\u6210\u7b49\u5dee\u6570\u5217 \n                        {tmp[k]+=d[l]/*\u66f4\u65b0\u6570\u5b57*/;c+=cnt[l]/*\u7d2f\u52a0\u6b21\u6570*/;find=true/*\u8bb0\u5f55\u5df2\u7ecf\u627e\u5230*/;break;}\n                if(!find) {isCan=false;break;}//\u82e5\u6ca1\u627e\u5230\uff0c\u5224\u5b9a\u8fd9\u4e2a\u7b2c1\u30012\u9879\u7684\u65b9\u6cd5\u4e0d\u80fd\u6ee1\u8db3\u9898\u610f \n            }\n            if(isCan) ans=min(ans,c);//\u82e5\u6ee1\u8db3\uff0c\u66f4\u65b0\u7b54\u6848 \n        }\n    if(ans==0x7fffffff) ans=-1;//\u65e0\u89e3\u7684\u60c5\u51b5 \n    cout<<ans;\n    return 0;\n}\n```\n",
        "postTime": 1612104557,
        "uid": 263374,
        "name": "FanYongchen",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF978D\u3010 Almost Arithmetic Progression\u3011"
    },
    {
        "content": "\u7531\u4e8e\u662f\u7b49\u5dee\u6570\u5217\uff0c\u6240\u4ee5\u53ea\u8981\u7b2c\u4e00\u9879\u548c\u7b2c\u4e8c\u9879\u786e\u5b9a\uff0c\u90a3\u4e48\u901a\u9879\u516c\u5f0f\u5c31\u968f\u4e4b\u786e\u5b9a\uff0c\n\u4e8e\u662f\u5148\u8c03\u6574\uff08\u679a\u4e3e\uff09a1\uff0ca2\uff0c\u786e\u5b9a\u901a\u9879\u516c\u5f0f\uff0c\u7136\u540e\u5c06a\u6570\u5217\u7684\u540e\u9762\u6240\u6709\u9879\u4e0e\u901a\u9879\u516c\u5f0f\u5bf9\u6bd4\uff0c\u53ea\u8981\u8ddd\u79bb\u8d85\u8fc71\uff0c\u90a3\u4e48\u8fd9\u79cd\u60c5\u51b5\u65e0\u6548\uff0c\u5982\u679c\u8ddd\u79bb\u5c0f\u4e8e\u7b49\u4e8e1\uff0c\u5c31\u52a0\u4e0a\u8c03\u6574\u7684\u8ddd\u79bb\uff0c\u8f93\u51fa\u6700\u5c0f\u89e3\u5373\u53ef\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nint a[100005];//\u5b58\u8f93\u5165\nint moveA1[] = { 0,0,0,1,1,1,-1,-1,-1 };//\u8c03\u6574a1\nint moveA2[] = { 0,1,-1,0,1,-1,0,1,-1 };//\u8c03\u6574a2\n\n\nint ans = 0x7f7f7f7f;//\u5148\u5c06\u7b54\u6848\u521d\u59cb\u5316\u6210\u5f88\u5927\nint n;\n\nint calc(int a1, int a2, int n)//\u8ba1\u7b97\u901a\u9879\u516c\u5f0f\n{\n\treturn a1 + (n - 1)*(a2 - a1);\n}\nvoid work(int a1, int a2, int change)//change \u4e3aa1\u548ca2\u7684\u8c03\u6574\u503c\u4e4b\u548c\n{\n\tint temp = 0;\n\tfor (int i = 3; i <= n; i++)//\u4ece\u7b2c\u4e09\u9879\u5f00\u59cb\u5411\u540e\u904d\u5386\u539f\u6570\u5217\n\t{\n\t\tint t = abs(calc(a1, a2, i) - a[i]);//\u8ba1\u7b97\u8be5\u9879\u9700\u8981\u8c03\u6574\u7684\u8ddd\u79bb\n\t\tif (t > 1)//\u5982\u679c\u8ddd\u79bb\u8d85\u8fc71\uff0c\u7ed3\u675f\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\telse//\u5426\u5219\u52a0\u4e0a\u8c03\u6574\u503c\n\t\t{\n\t\t\ttemp += t;\n\t\t}\n\t}\n\ttemp += change;//\u52a0\u4e0a\u7b2c\u4e00\u9879\u548c\u7b2c\u4e8c\u9879\u7684\u8c03\u6574\u503c\n\tans = min(ans, temp);//\u53d6\u8f83\u5c0f\u503c\u4fdd\u5b58\n}\nint main()\n{\n\n\tcin >> n;\n\n\tif (n <= 2)//\u7531\u9898\u9879\u6570\u5c0f\u4e8e\u7b49\u4e8e2\u662f\u7b49\u5dee\n\t{\n\t\tcout << 0 << endl;\n\t\treturn 0;\n\t}\n\n\tfor (int i = 1; i <= n; i++)//\u8f93\u5165\n\t{\n\t\tcin >> a[i];\n\t}\n\n\tfor (int i = 0; i < 9; i++)//\u5206\u4e5d\u79cd\u679a\u4e3ea1, a2\n\t{\n\t\twork(a[1] + moveA1[i], a[2] + moveA2[i], abs(moveA1[i]) + abs(moveA2[i]));\n\t}\n\n\tif (ans != 0x7f7f7f7f)//\u5982\u679c\u53d1\u751f\u8c03\u6574\n\t{\n\t\tcout << ans << endl;\n\t}\n\telse//\u5982\u679c\u4e00\u6b21\u8c03\u6574\u90fd\u6ca1\u6709\n\t{\n\t\tcout << -1 << endl;\n\t}\n}\n```\n\u5bf9\u4e8e\u697c\u4e0a\u66b4\u529b\u679a\u4e3e\u526a\u679d\u7684\u505a\u6cd5\uff0c\u849f\u84bb\u5728\u6b64\u732e\u4e0a\u819d\u76d6",
        "postTime": 1550211602,
        "uid": 159730,
        "name": "Sophon",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF978D \u3010Almost Arithmetic Progression\u3011"
    },
    {
        "content": "### \u9a97\u5206\u8fc7\u6837\u4f8b\uff0c\u66b4\u529b\u51fa\u5947\u8ff9\uff01\n\n\u6211\u662f\u4e00\u4e2a\u849f\u84bb\uff0c\u4e0d\u4f1a\u6b63\u89e3\uff0c\u4f46\u662f\u8fd8\u662f\u8fc7\u4e86\uff0c\u7528\u7684\u662f\u66b4\u641c\u3002\n\n\u641c\u7d22\u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570\u679a\u4e3e\u5b83\u662f\u4e0d\u53d8\uff0c\u589e\u52a01\u8fd8\u662f\u51cf\u5c111\u3002\u65f6\u95f4\u590d\u6742\u5ea6$O(3^{n})$\u3002\u4f46\u662f\u5f88\u663e\u7136\uff0c\u8fd9\u6837\u662f\u8fc7\u4e0d\u4e86\u7684\u3002\u6240\u4ee5\uff0c\u6211\u52a0\u4e86\u82e5\u5e72\u4e2a\u4f18\u5316\uff1a\n\n1\uff0c\u53ef\u884c\u6027\u526a\u679d\uff1a\u5982\u679c\u73b0\u6709\u7684\u6570\u6539\u53d8\u540e\u7684\u503c\u4e0e\u4e0a\u4e00\u4e2a\u6570\u6539\u53d8\u540e\u7684\u503c\u4e4b\u5dee\u4e0d\u7b49\u4e8e\u524d\u9762\u56fa\u5b9a\u4e0b\u6765\u7684\u7b49\u5dee\u6570\u5217\u4e2d\u7684\u76f8\u7b49\u7684\u5dee\uff0c\u505c\u6b62\u641c\u7d22\uff08\u56e0\u4e3a\u8fd9\u6807\u5fd7\u7740\u73b0\u5728\u8fd9\u79cd\u6539\u53d8\u65b9\u5f0f\u5df2\u7ecf\u662f\u4e0d\u6210\u7acb\u7684\uff09\u3002\n\n2\uff0c\u6700\u4f18\u6027\u526a\u679d\uff1a\u5982\u679c\u641c\u7d22\u5230\u73b0\u5728\u6539\u53d8\u7684\u6b21\u6570\u5df2\u7ecf\u8d85\u8fc7\u6216\u7b49\u4e8e\u4e86\u6700\u4f18\u7b54\u6848\uff0c\u505c\u6b62\u641c\u7d22\uff08\u56e0\u4e3a\u5373\u4f7f\u641c\u5b8c\u4e86\u4e5f\u65e0\u6cd5\u66f4\u65b0\u6700\u4f18\u7b54\u6848\uff0c\u6ca1\u6709\u7528\uff09\u3002\n\n\u4f46\u662f\u8fd9\u6837\u4e5f\u672a\u5fc5\u80fd\u8fc7\u3002\u6211\u60f3\u5230\u4e00\u7ec4\u6570\u636e\u5361\u6389\u4e86\u6211\u7684\u641c\u7d22\uff1a\u6700\u540e\u4e24\u4e2a\u6570\u5dee\u503c\u7279\u522b\u5927\uff0c\u5bfc\u81f4\u524d\u9762\u641c\u5b8c\u4e86\u597d\u591a\u904d\u603b\u662f\u5728\u6700\u540e\u5361\u4f4f\u3002\u6240\u4ee5\u6211\u53c8\u52a0\u4e86\u4e00\u4e2a\u4f18\u5316\uff1a\u5728\u641c\u7d22\u524d\u5904\u7406\u521d\u59cb\u5e8f\u5217\u6700\u5927\u7684\u5dee\u503c\u548c\u6700\u5c0f\u7684\u5dee\u503c\uff0c\u5982\u679c\u8fd9\u4e24\u4e2a\u503c\u7684\u5dee\u5927\u4e8e4\u5219\u76f4\u63a5\u8f93\u51fa\u65e0\u89e3\u3002\u56e0\u4e3a\u4ee5\u8fd9\u9053\u9898\u7684\u53d8\u6362\u65b9\u5f0f\uff0c\u6bcf\u4e00\u4e2a\u5dee\u4e0e\u539f\u6765\u7684\u5dee\u7684\u53d8\u5316\u503c\u6700\u591a\u4e3a2\uff0c\u6240\u4ee5\u4e24\u4e2a\u5dee\u7684\u5dee\u6700\u591a\u4e3a4\uff0c\u5426\u5219\u4e0d\u53ef\u80fd\u76f8\u7b49\u3002\n\n\u6240\u4ee5\u8fd9\u6837\u5c31\u53ef\u4ee5$O(3^{n})$\uff08\u5176\u5b9e\u662f$O($\u80fd\u8fc7$)$\uff0c~~\u56e0\u4e3a\u6211\u4e5f\u4e0d\u77e5\u9053\u5230\u5e95\u662f\u591a\u5c11~~\uff09\u8fc7200000\u7684\u6570\u636e\u91cf\u4e86\uff08\u6216\u8005\u662f\u56e0\u4e3aCodeForces\u673a\u5b50\u6548\u7387\u592a\u9ad8\uff1f\uff09\u3002\u800c\u4e14\u6ca1\u6709FST\uff0c\u6ca1\u6709\u88abHack\uff0c\u5982\u679c\u6709\u80fdHack\u7684\u6570\u636e\u4e5f\u6b22\u8fce\u6307\u6b63\u3002\n\n\u4ee3\u7801\uff1a\n\n```\n#include <iostream>\n#include <cstdio>\nusing namespace std;\n#define MAXN 100005\nint n,b[MAXN],maxgap,mingap,gap,tot,ans;\nint move[3]={0,1,-1};\n//\u624b\u5199STL\u4f18\u5316\u5e38\u6570\ninline int max(int a,int b) { if(a>b) return a; else return b; }\ninline int min(int a,int b) { if(a<b) return a; else return b; }\ninline int abs(int x) { if(x>0) return x; else return -x; }\nvoid dfs(int u,int k){\n    if(tot>=ans) return;//\u6700\u4f18\u6027\u526a\u679d\n    if(u==n){\n        ans=min(tot,ans);\n        return;\n    }\n    for(int i=0; i<=2; i++){\n        if(u==1) gap=b[u+1]+move[i]-b[u]-move[k];\n        else{\n            if(b[u+1]+move[i]-b[u]-move[k]!=gap) continue;\n            //\u53ef\u884c\u6027\u526a\u679d\n        }\n        if(move[i]!=0) tot++;\n        dfs(u+1,i);\n        if(move[i]!=0) tot--;//\u56de\u6eaf\n    }\n}\nchar ch; int f;\ninline void read(int &x){\n     x=0,f=1;\n     while(ch<'0' || ch>'9'){\n         if(f=='-') f=-1;\n         ch=getchar();\n     }\n     while(ch>='0' && ch<='9'){\n         x=x*10+ch-'0';\n         ch=getchar();\n     }\n     x*=f;\n}\n//\u8bfb\u5165\u4f18\u5316\u5361\u5e38\nint main(){\n    read(n);\n    maxgap=-1;\n    mingap=2147483647;\n    for(int i=1; i<=n; i++){\n        read(b[i]);\n        if(i!=1){\n            maxgap=max(maxgap,abs(b[i]-b[i-1]));\n            mingap=min(mingap,abs(b[i]-b[i-1]));\n        }\n    }\n    if(n<=2){\n        printf(\"0\\n\");\n        return 0;\n    }\n    //\u53ea\u6709\u4e00\u4e2a\u6216\u4e24\u4e2a\u6570\u7684\u6570\u5217\u5fc5\u7136\u662f\u7b49\u5dee\u6570\u5217\n    if(maxgap-mingap>4){\n        printf(\"-1\\n\");\n        return 0;\n    }\n    //\u5f53\u6700\u5927\u5dee\u503c\u548c\u6700\u5c0f\u5dee\u503c\u7684\u5dee\u503c\u5927\u4e8e4\u65f6\u76f4\u63a5\u8fd4\u56de\u65e0\u89e3\n    ans=MAXN;\n    tot=0; dfs(1,0);\n    //\u4e00\u4e2a\u6bd4\u8f83\u7384\u5b66\u7684\u4f18\u5316\uff1a\u5148\u641c\u6539\u53d8\u6b21\u6570\u5c11\u7684\uff0c\u4e0d\u77e5\u662f\u5426\u6709\u6548\n    tot=1; dfs(1,1);\n    tot=1; dfs(1,2);\n    if(ans==MAXN) printf(\"-1\\n\");//\u8bb0\u5f97\u5224\u65e0\u89e3\n    else printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1526300371,
        "uid": 31025,
        "name": "nstk0513",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF978D \u3010Almost Arithmetic Progression\u3011"
    },
    {
        "content": "### \u9898\u610f\u7b80\u8ff0\n\n\u5bf9\u4e00\u4e2a\u6709 $n$ \u4e2a\u6570\u7684\u6570\u5217 $a$ \u7684\u6bcf\u4e2a\u6570 $+1$\uff0c$-1$ \u6216\u4e0d\u8fdb\u884c\u66f4\u6539\uff0c\u4f7f\u5176\u6210\u4e3a\u4e00\u4e2a\u7b49\u5dee\u6570\u5217\u3002\n\n\u82e5\u65e0\u6cd5\u505a\u5230\uff0c\u8f93\u51fa $-1$\uff1b\u82e5\u80fd\u505a\u5230\u8f93\u51fa\u8c03\u6574\u7684\u6700\u5c0f\u503c\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a$n\\leq 100000$\u3002\n\n### solution\n\n\u9996\u5148\u7531\u7b49\u5dee\u6570\u5217\u6027\u8d28\u5f97\uff0c\u6bcf\u4e24\u4e2a\u6570\u7684\u5dee\u90fd\u4e3a\u516c\u5dee $d$\uff0c\u4e14\u4e24\u4e2a\u6570\u5373\u53ef\u786e\u5b9a\u516c\u5dee\u3002\n\n\u5219\u8003\u8651\u679a\u4e3e\u6bcf\u79cd\u4e0d\u540c\u7684 $d$\uff0c\u5224\u65ad\u540e\u9762\u6bcf\u4e24\u4e2a\u6570\u7684\u5dee\u503c $d_1$ \u662f\u5426\u53ef\u901a\u8fc7 $+1$ \u6216 $-1$ \u53d8\u4e3a $d$\u3002\u82e5\u53ef\u4ee5\u5219\u7d2f\u52a0\u7b54\u6848\uff0c\u4e0d\u884c\u5219\u76f4\u63a5\u9000\u51fa\u3002\n\n\u6700\u7ec8\u5bf9\u4e8e\u6bcf\u79cd\u4e0d\u540c\u7684\u60c5\u51b5\u5f97\u5230\u7684 $ans$ \u53d6\u6700\u5c0f\u503c\u5373\u53ef\u3002\n\n\u679a\u4e3e\u65f6\uff0c\u53ef\u8003\u8651\u5bf9\u4e8e $a_1$ \u4e0e $a_2$ \u5b9a\u4e49\u504f\u79fb\u6570\u7ec4\uff0c\u8bb0\u5f55\u5b83\u4eec $+1$\uff0c$-1$ \u6216\u4e0d\u53d8\u7ec4\u5408\u8d77\u6765\u7684\u60c5\u51b5\u3002\u5219\u5171\u6709 $3\\times3=9$ \u79cd\u60c5\u51b5\u3002\n\n### \u5751\u70b9\n\n+ \u5224\u65ad\u65f6\u4e0d\u80fd\u4f7f\u7528\u539f\u6570\u7ec4\uff0c\u56e0\u4e3a\u4f1a\u6539\u53d8\u539f\u6570\u7ec4\u7684\u503c\u3002\n\n+ \u65b0\u6570\u7ec4 $b$ \u7684\u524d\u4e24\u9879\u9700\u521d\u59cb\u5316\u6210\u504f\u79fb\u540e\u5bf9\u5e94\u7684 $a$ \u6570\u7ec4\u524d\u4e24\u9879\u3002\n\n### \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN=1e5+10;\nint f[MAXN],b[MAXN];\nint mx[]={0,0,0,-1,-1,-1,1,1,1};\nint my[]={1,-1,0,1,-1,0,1,-1,0};\nint n,ans=0x7f7f7f;\nvoid work(int diff,int al){ //al \u8bb0\u5f55\u524d\u4e24\u9879\u6539\u53d8\u7684\u503c \n\tint temp=0;\n\tfor(int i=3;i<=n;i++){\n\t\tif(b[i]-b[i-1]<diff-1||b[i]-b[i-1]>diff+1) //\u4e0d\u7b26\u5408\u6761\u4ef6 \n\t\t\treturn;\n\t\tif(b[i]-b[i-1]==diff-1) b[i]++,temp++;\n\t\telse if(b[i]-b[i-1]==diff+1) b[i]--,temp++;\n\t}\n\tans=min(ans,temp+al);\n}\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++) cin>>f[i];\n\tif(n<=2){ //\u7531\u9898\u5f97\u9879\u6570\u5c0f\u4e8e\u7b49\u4e8e\u4e8c\u65f6\u76f4\u63a5\u8f93\u51fa\uff0c\u8fdb\u884c\u7279\u5224 \n\t\tcout<<\"0\";\n\t\treturn 0;\n\t}\n\tfor(int i=0;i<9;i++){\n\t\tfor(int j=1;j<=n;j++) b[j]=f[j];\n\t\tb[1]=f[1]+mx[i];\n\t\tb[2]=f[2]+my[i];//b \u6570\u7ec4\u524d\u4e24\u9879\u9700\u8fdb\u884c\u5bf9\u5e94\u66f4\u6539 \n\t\twork(b[2]-b[1],abs(mx[i])+abs(my[i]));\n\t}\n\tif(ans==0x7f7f7f) cout<<\"-1\";\n\telse cout<<ans;\n\treturn 0;\n}\n\n```",
        "postTime": 1639026268,
        "uid": 362650,
        "name": "ILLENIUM_DOOR",
        "ccfLevel": 0,
        "title": "CF978D Almost Arithmetic Progression \u9898\u89e3"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/CF978D)\n\n\u9898\u76ee\u5927\u6982\u610f\u601d\u662f\uff1a\u7ed9\u4f60\u4e00\u7ec4\u6570\uff0c\u5bf9\u6bcf\u4e2a\u6570\u6709\u4e09\u4e2a\u64cd\u4f5c\uff1a$+1$\uff0c$-1$\uff0c\u4ee5\u53ca\u4e0d\u53d8\uff0c\u5224\u65ad\u80fd\u5426\u901a\u8fc7\u64cd\u4f5c\u5c06\u8fd9\u7ec4\u6570\u53d8\u6210\u7b49\u5dee\u6570\u5217\uff0c\u82e5\u80fd\u5219\u8f93\u51fa\u6700\u5c0f\u6539\u53d8\u6b21\u6570\uff0c\u82e5\u4e0d\u884c\u5219\u8f93\u51fa $-1$\u3002\n\n\u9996\u5148\u6211\u4eec\u8981\u4e86\u89e3\u7b49\u5dee\u6570\u5217\uff0c\u6211\u4eec\u8981\u77e5\u9053\uff0c\u4e00\u4e2a\u7b49\u5dee\u6570\u5217\u7684\u9996\u9879\uff08$l_1$\uff09\u548c\u672b\u9879\uff08$l_n$\uff09\u4e00\u65e6\u786e\u5b9a\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7b49\u5dee\u6570\u5217\u7684\u516c\u5dee\u5fc5\u7136\u786e\u5b9a$\\left(\\dfrac{l_1 + l_n}{n - 1} \\right)$\uff0c\u81ea\u7136\u5c31\u53ef\u4ee5\u786e\u5b9a\u6240\u6709\u7684\u6570\u3002\n\n\u90a3\u4e48\u601d\u8def\u5c31\u5f88\u597d\u786e\u5b9a\u4e86\uff1a\n\n- \u5f53 $n$ \u4e3a $1$ \u6216 $2$ \u65f6\uff0c\u4e00\u5b9a\u662f\u7b49\u5dee\u6570\u5217\uff0c\u76f4\u63a5\u8f93\u51fa $0$\u3002\n\n```cpp\nif (n <= 2) {\n\tcout << 0 << endl;\n\treturn 0;\n}\n```\n\n- \u5269\u4e0b\u7684\u60c5\u51b5\u65f6\uff0c\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u6570\u5217\uff0c\u679a\u4e3e\u9996\u9879\u548c\u672b\u9879\u7684\u503c\uff08\u56e0\u4e3a\u6bcf\u4e2a\u6570\u6700\u591a\u6709 $3$ \u79cd\u64cd\u4f5c\u60c5\u51b5\uff0c\u4e24\u4e2a\u6570\u679a\u4e3e\u5c31\u662f $9$ \u79cd\uff0c\u60c5\u51b5\u5f88\u5c11\u7684\uff09\uff0c\u90a3\u4e48\u516c\u5dee\u5c31\u80fd\u6c42\u51fa\u6765\u4e86\uff0c\u8fdb\u800c\u80fd\u6c42\u51fa\u5f53\u524d\u6539\u53d8\u540e\u7684\u6574\u4e2a\u6570\u5217\uff0c\u8bb0\u4e3a $b$\u3002\n\n```cpp\nfor (int i = -1; i <= 1; i++) {\n\tfor (int j = -1; j <= 1; j++) {\n\t\ta1 = l[1] + i;\n\t\tan = l[n] + j;\n\t\t\n\t\tif ((an - a1) % (n - 1) != 0) {\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\td = (an - a1) / (n - 1);\n\t\tai = a1;\n\t\tcc = abs(i) + abs(j);\n\t}\n}\n```\n\n- \u5728\u516c\u5dee\u662f\u6574\u6570\u7684\u60c5\u51b5\u4e0b\uff0c\u626b\u4e00\u904d $a_2$ \u5230 $a_{n - 1}$\uff0c\u5224\u65ad $a_i$ \u4e0e $b_i$ \u7684\u5dee\u662f\u5426\u5728 $-1$ \u5230 $1$ \u4e4b\u95f4\u3002\n\n1. \u5982\u679c $a_i$ \u4e0e $b_i$ \u7684\u5dee\u5728 $-1$ \u5230 $1$ \u4e4b\u95f4\uff0c\u5982\u679c$a_i$ \u4e0d\u7b49\u4e8e $b_i$\uff0c\u90a3\u4e48\u5f53\u524d\u64cd\u4f5c\u6570 $+1$\uff0c\u5426\u5219\u8df3\u8fc7\u3002\n\n2. \u5426\u5219\uff0c\u8bf4\u660e\u8fd9\u4e2a\u539f\u6570\u5217\u4e0d\u80fd\u901a\u8fc7\u7ed9\u5b9a\u64cd\u4f5c\u6539\u53d8\u6210\u5f53\u524d\u679a\u4e3e\u7684\u7b49\u5dee\u6570\u5217\uff0c\u76f4\u63a5\u8df3\u8fc7\u3002\n\n```cpp\nfor (int k = 2; k < n; k++) {\n\tai += d;\n\t\n\tif (abs(l[k] - ai) > 1) {\n\t\tcc = -1;\n\t\tbreak;\n\t}\n\t\n\tif (ai != l[k]) {\n\t\tcc++;\n\t}\n}\n```\n\n- \u6700\u540e\u5237\u65b0\u7ed3\u679c\uff0c\u8ba9\u64cd\u4f5c\u6570\u5c3d\u53ef\u80fd\u5c11\uff08\u522b\u5fd8\u4e86 $a_1$ \u548c $a_n$ \u7684\u64cd\u4f5c\uff09\u3002\n\n```cpp\nif (cc >= 0) {\n\tres = min(res, cc);\n}\n```\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n```cpp\n\n\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint n, l[100009], res = 100009; \n\nint main () {\n\tint a1, an, ai, d, cc;\n\t\n\tscanf(\"%d\", &n);\n\t\n\tfor (int i = 1; i <= n; i++) {\n\t\tscanf(\"%d\", &l[i]);\n\t}\n\t\n\tif (n <= 2) {\n\t\tcout << 0 << endl;\n\t\treturn 0;\n\t}\n\t\n\tfor (int i = -1; i <= 1; i++) {\n\t\tfor (int j = -1; j <= 1; j++) {\n\t\t\ta1 = l[1] + i;\n\t\t\tan = l[n] + j;\n\t\t\t\n\t\t\tif ((an - a1) % (n - 1) != 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\td = (an - a1) / (n - 1);\n\t\t\tai = a1;\n\t\t\tcc = abs(i) + abs(j);\n\t\t\t\n\t\t\tfor (int k = 2; k < n; k++) {\n\t\t\t\tai += d;\n\t\t\t\t\n\t\t\t\tif (abs(l[k] - ai) > 1) {\n\t\t\t\t\tcc = -1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (ai != l[k]) {\n\t\t\t\t\tcc++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (cc >= 0) {\n\t\t\t\tres = min(res, cc);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (res == 100009) {\n\t\tprintf(\"-1\\n\");\n\t}\n\t\n\telse {\n\t\tprintf(\"%d\\n\", res);\n\t}\n\t\n\treturn 0;\n}\n```\n",
        "postTime": 1622639029,
        "uid": 299086,
        "name": "Mistybranch",
        "ccfLevel": 5,
        "title": "CF978D Almost Arithmetic Progression"
    },
    {
        "content": "**\u5f88\u591adalao\u90fd\u53d1\u4e86\u6bd4\u8f83\u96be~~\u61c2~~\u7684\u9898\u89e3**\n\n\u6765\u4e00\u7bc7\u849f\u84bb\u9002\u914d\u9898\u89e3\u53ed\uff0c~~\u521a\u5b66\u5b8c\u8bed\u8a00\u4e5f\u80fd\u8f7b\u677e\u542c\u61c2\u54e6\uff01~~\n\n### \u9898\u76ee\u5927\u610f\n\u7ed9\u5b9a\u4e00\u4e2a\u6570\u5217\uff0c\u4e0d\u80fd\u6539\u53d8\u6570\u5217\u7684\u987a\u5e8f\uff0c\u53ef\u4ee5\u7ed9\u6bcf\u4e00\u4f4d\u52a0\u4e00\u6216\u51cf\u4e00\u6216\u4e0d\u53d8\uff1b\u4f7f\u8fd9\u4e2a\u6570\u5217\u6210\u4e3a\u4e00\u4e2a**\u7b49\u5dee\u6570\u5217**\uff1b\n\n### \u5927\u4f53\u601d\u8def\n\u90a3\u4e48\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u65e2\u7136\u53ea\u80fd\u52a0\u4e00\uff0c\u51cf\u4e00\uff0c\u4e0d\u53d8\uff1b\n\n\u90a3\u4e48\u5c31\u53ef\u4ee5\u77e5\u9053\u7b2c\u4e00\u9879\u6539\u53d8\u53ea\u6709\u4e09\u79cd\u53ef\u80fd\u4e86\uff0c\u4e5f\u5c31\u662f\n\u6570\u7ec4\u7684\u7b2c\u4e00\u9879\u52a0\u4e00\uff0c\u51cf\u4e00\u6216\u8005\u4e0d\u53d8\n\n\u540c\u7406\u6570\u7ec4\u7684\u7b2c\u4e8c\u9879\u4e5f\u6709\u4e09\u79cd\u53ef\u80fd\uff0c\u4e00\u5171\u4e5d\u79cd\u53ef\u80fd\uff0c\u4e5f\u5c31\u53ef\u4ee5\u7528\u7b2c\u4e8c\u9879\u51cf\u53bb\u7b2c\u4e00\u9879\u8ba1\u7b97\u51fa9\u79cd**\u516c\u5dee**\uff1b\n\n\u904d\u5386\u6bcf\u4e00\u4f4d\u770b\u5b83\u7684\u4e0b\u4e00\u4f4d\u548c\u8fd9\u4e00\u4f4d\u7684\u5dee\u662f\u5426\u4e3a**\u516c\u5dee**\u52a0\u4e00\u51cf\u4e00\u6216\u4e0d\u53d8\uff1b\u662f\u5219\u5bf9\u4e0b\u4e00\u4f4d\u505a\u5bf9\u5e94\u7684\u64cd\u4f5c\uff1b\u5982\u679c\u8fd9\u4e09\u4e2a\u90fd\u4e0d\u662f\uff0c\u90a3\u5c31\u4e0d\u6210\u7acb\uff0c\u628a\u5f53\u524d\u60c5\u51b5\u7684\u7b54\u6848\u6539\u6210**\u6700\u5927\u503c**\n\n\u6700\u540e\u904d\u5386\u7b54\u6848\u6570\u7ec4\u5f97\u5230\u6700\u5c0f\u503c\u5c31\u53ef\u4ee5\u5566qwq\n\n\u4e0b\u9762\u662f\u849f\u84bb\u7684\u4ee3\u7801\uff0c\u7801\u98ce\u6e05\u5947\uff0c\u4e0d\u559c\u52ff\u55b7\uff1a\n```cpp\n#include<cstdio>\n#include<stdlib.h>\n#include<cmath>\nusing namespace std;\n#define ll long long\nll min(ll a,ll b){\n\tif(a<b){\n\t\treturn a;\n\t}else{\n\t\treturn b;\n\t}\n}\nint n;\nll a[100010];//\u5b58\u539f\u6570\u7ec4 \nll b[100010];//\u66f4\u6539\u7684\u6570\u7ec4 \nll ans[4][4];//\u7b54\u6848\u6570\u7ec4 \nint d;\nll real=1e9;\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%lld\",&a[i]);\n\t}\n\tfor(int k1=-1;k1<=1;k1++){\n\t\tfor(int k2=-1;k2<=1;k2++){\n\t\t\tfor(int i=1;i<=n;i++){\n\t\t\t\tb[i]=a[i];//\u56e0\u4e3a\u76f4\u63a5\u5bf9a\u66f4\u6539\u4e0b\u4e00\u6b21\u5faa\u73af\u5c31\u51c9\u4e86\u6240\u4ee5\u6211\u4eec\u5bf9b\u6570\u7ec4\u8fdb\u884c\u4fee\u6539\uff1b \n\t\t\t}\n\t\t\tans[k1+2][k2+2]=abs(k1)+abs(k2);//\u66f4\u6539\u4e86\u7b2c\u4e00\u4f4d\uff0cans++\uff0c\u66f4\u6539\u4e86\u7b2c\u4e8c\u4f4d\uff0cans++ \n\t\t\tb[1]+=k1;\n\t\t\tb[2]+=k2;\n\t\t\td=b[2]-b[1];\n\t\t\tfor(int i=1;i<n;i++){\n\t\t\t\tif(b[i+1]-1==d+b[i]){\n\t\t\t\t\tb[i+1]--;\n\t\t\t\t\tans[k1+2][k2+2]++;\n\t\t\t\t}else if(b[i+1]+1==d+b[i]){\n\t\t\t\t\tb[i+1]++;\n\t\t\t\t\tans[k1+2][k2+2]++;\n\t\t\t\t}else if(b[i+1]==d+b[i]){\n\t\t\t\t\t//\u5565\u90fd\u4e0d\u5e72\n\t\t\t\t}else{\n\t\t\t\t\tans[k1+2][k2+2]=1e9;//\u8d4b\u6210\u6700\u5927\u503c \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=3;i++){\n\t\tfor(int j=1;j<=3;j++){\n\t\t\treal=min(real,ans[i][j]);//\u6bd4\u5927\u5c0fqwq \n\t\t}\n\t}\n\tif(real>=1e9){\n\t\tprintf(\"-1\");\n\t\treturn 0;\n\t}else{\n\t\tprintf(\"%lld\",real);\n\t}\n\treturn 0;\n}\n\n\n\n\n\n\n\n\n//made by \u8ffd\u68a6\u7684\u9ed1\u65cb\u98ce \n```\n\u7ba1\u7406\u5927\u5927\u624b\u4e0b\u7559\u60c5qwq\u7b2c\u4e94\u6b21\u4ea4\u4e86",
        "postTime": 1615449660,
        "uid": 93639,
        "name": "\u8ffd\u68a6\u7684\u9ed1\u65cb\u98ce",
        "ccfLevel": 7,
        "title": "\u6570\u5217\u7684\u6c34\u9898"
    },
    {
        "content": "\u9898\u89e3:\u5982\u679c\u6211\u4eec\u77e5\u9053\u4e86\u6539\u52a8\u540e\u7684\u5934\u4e24\u4e2a\u6570\u7684\u503c\uff0c\u5c31\u77e5\u9053\u4e86\u516c\u5dee\uff0c\u90a3\u4e48\u6574\u4e2a\u6570\u7ec4\u5c31\u77e5\u9053\u4e86\u3002\u6240\u4ee5\u8bf4\u6211\u4eec\u53ea\u8981\u679a\u4e3e\u524d\u4e24\u4e2a\u6570\u7684\u6539\u52a8\u503c\uff0c\u4e00\u4e2a\u4e00\u4e2a\u5f80\u540e\u63a8\uff0c\u63a8\u9053\u5dee\u5927\u4e8e1\u7684\u5c31\u662f\u4e0d\u53ef\u4ee5\uff0c\u5426\u5219\u5c31\u662f\u53ef\u4ee5\n\n```cpp\nint n;\nint b[100005],t[100005];\nstack<int> st,nw;\nint D;\nint ans=1234567;\ninline void solve(int x,int ch){                   //\u4e00\u4e2a\u4e00\u4e2a\u5224\u65ad\n//\tfor(int i=0;i<n;i++) cout<<b[i]<<' ';\n//\tcout<<endl;\n\tint i,j;\n\tD=b[1]-b[0];\n\tfor(i=0;i<n;i++) t[i]=b[i];\n\tint res=0;\n\tbool ok=1;\n\tfor(i=1;i<n;i++){\n\t\tif(t[i]-t[i-1]==D) continue;\n\t\telse if(t[i]-t[i-1]==D+1) t[i]--,res++;\n\t\telse if(t[i]-t[i-1]==D-1) t[i]++,res++;\n\t\telse{\n\t\t\tok=0;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(ok) ans=min(ans,res+ch);\n}\nint main(){\n\tcin>>n;\n\tint i,j;\n\tfor(i=0;i<n;i++) cin>>b[i];\n\tif(n<3){\n\t\tcout<<0<<endl;\n\t\treturn 0;\n\t}\n\tsolve(b[1]-b[0],0);                    //\u66b4\u529b\u679a\u4e3e\n\tb[1]++;\n\tsolve(b[1]-b[0],1);\n\tb[1]-=2;\n\tsolve(b[1]-b[0],1);\n\tb[1]++;\n\tb[0]++;\n\tsolve(b[1]-b[0],1);\n\tb[0]-=2;\n\tsolve(b[1]-b[0],1);\n\tb[0]++;\n\tb[0]++;\n\tb[1]++;\n\tsolve(b[1]-b[0],2);\n\tb[0]-=2;\n\tb[1]-=2;\n\tsolve(b[1]-b[0],2);\n\tb[0]+=2;\n\tsolve(b[1]-b[0],2);\n\tb[0]-=2;\n\tb[1]+=2;\n\tsolve(b[1]-b[0],2);\n\tif(ans==1234567) cout<<-1<<endl;\n\telse cout<<ans<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1549895600,
        "uid": 125964,
        "name": "\u4e16\u672bOIer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF978D \u3010Almost Arithmetic Progression\u3011"
    }
]