[
    {
        "content": "------\n\n\u6211\u4eec\u53ef\u4ee5\u60f3\u4e00\u4e0b\uff0c\u5bf9\u4e8e\u62d3\u6251\u6392\u5e8f\uff0c\u6211\u4eec\u5220\u8fb9\u7684\u5b9e\u8d28\u662f\u4ec0\u4e48\uff1f\n\n\u5c31\u662f\u8ba9\u4e00\u4e2a\u70b9\u7684\u5165\u5ea6\u51cf\u4e00\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u70b9\u7531\u539f\u6765\u4e0d\u80fd\u653e\u5230\u961f\u5217\u5f53\u4e2d\uff0c\u800c\u73b0\u5728\u53ef\u4ee5\u5230\u961f\u5217\u5f53\u4e2d\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5b8c\u5168\u6ca1\u6709\u5fc5\u8981\u679a\u4e3e\u5220\u8fb9\uff0c\u56e0\u4e3a\u5220\u7684\u5f88\u591a\u8fb9\u5b9e\u8d28\u90fd\u662f\u4f7f\u540c\u4e00\u4e2a\u70b9\u7684\u5165\u5ea6\u51cf\u4e00\u3002\n\n\u6240\u4ee5\u6211\u4eec\u679a\u4e3e\u6bcf\u4e2a\u70b9\u7684\u5165\u5ea6\u51cf\u4e00\uff0c\u7136\u540e\u62d3\u6251\u6392\u5e8f\u5224\u65ad\u73af\u5373\u53ef\u3002\n\n-----\n\n```cpp\n#pragma GCC optimize(\"-Ofast\",\"-funroll-all-loops\")\n#include<bits/stdc++.h>\n//#define int long long\nusing namespace std;\nconst int N=510;\nint n,m,dag[N],t[N];\nvector<int> g[N];\ninline int top_sort(){\n\tint cnt=0;\tqueue<int> q;\n\tfor(int i=1;i<=n;i++)\tif(!dag[i])\tq.push(i);\n\twhile(q.size()){\n\t\tint u=q.front();\tq.pop();\tcnt++;\n\t\tfor(auto to:g[u])\tif(--dag[to]==0)\tq.push(to);\n\t}\n\treturn cnt==n;\n}\nsigned main(){\n\tcin>>n>>m;\n\tfor(int i=1,a,b;i<=m;i++)\tscanf(\"%d %d\",&a,&b),g[a].push_back(b),dag[b]++;\n\tfor(int i=1;i<=n;i++)\tt[i]=dag[i];\n\tfor(int i=1;i<=n;i++)\tif(dag[i]){\n\t\tdag[i]--;\tif(top_sort())\treturn puts(\"YES\"),0;\n\t\tfor(int i=1;i<=n;i++)\tdag[i]=t[i];\n\t}\n\tputs(\"NO\");\n\treturn 0;\n}\n```\n",
        "postTime": 1581159672,
        "uid": 133654,
        "name": "\u9752\u70df\u7ed5\u6307\u67d4",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF915D \u3010Almost Acyclic Graph\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u5c31\u662f\u8bf4\u7ed9\u4f60 $n$ \u4e2a\u70b9 $m$ \u6761\u6709\u5411\u8fb9\uff0c\u8ba9\u4f60\u968f\u4fbf\u5220\u4e00\u8fb9\uff08\u53ef\u4ee5\u4e0d\u5220\uff09\uff0c\u95ee\u80fd\u4e0d\u80fd\u641e\u51fa\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\u3002\n\n\u4f17\u6240\u5468\u77e5\uff0c\u62d3\u6251\u6392\u5e8f\u53ef\u4ee5\u5224\u65ad\u56fe\u91cc\u9762\u6709\u6ca1\u6709\u73af\uff0c\u6240\u4ee5\u6709\u4e00\u79cd\u6734\u7d20\u7684\u505a\u6cd5\uff1a\u9996\u5148\u679a\u4e3e\u8fb9\uff0c\u7136\u540e\u7136\u540e\u628a\u8fd9\u6761\u8fb9\u5f04\u6389\uff0c\u518d\u7136\u540e\u8dd1\u62d3\u6251\uff0c\u6700\u540e\u5224\u65ad\u6709\u6ca1\u6709\u73af\uff0c\u6709\u73af\u7ee7\u7eed\u505a\uff0c\u6ca1\u73af\u76f4\u63a5\u8f93\u51fa\u3002\n\n\u8fd9\u4e2a\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u591a\u5c11\u5462\uff1f\u9996\u5148 $O(m)$ \u679a\u4e3e\u8fb9\uff0c\u7136\u540e $O(n+m)$ \u8dd1\u62d3\u6251\u6392\u5e8f\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(m(n+m))$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u76f4\u63a5\u7206\u70b8\u3002\n\n\u6211\u4eec\u60f3\u60f3\uff0c\u5220\u6389\u4e00\u6761\u6709\u5411\u8fb9\u5bf9\u62d3\u6251\u6392\u5e8f\u4ea7\u751f\u7684\u5f71\u54cd\u662f\u4ec0\u4e48\uff1f\n\n\u663e\u7136\uff0c\u662f\u88ab\u6307\u5411\u7684\u70b9\u7684\u5165\u5ea6\u51cf\u4e00\u3002\n\n\u90a3\u4e48\uff0c\u8fd9\u6837\u4e00\u60f3\uff0c**\u5982\u679c\u8fd9\u4e9b\u8fb9\u6307\u5411\u7684\u70b9\u662f\u76f8\u540c\u7684\uff0c\u90a3\u4e48\u5220\u6389\u8fd9\u4e9b\u8fb9\uff0c\u5bf9\u62d3\u6251\u6392\u5e8f\u7684\u5f71\u54cd\u4e5f\u662f\u76f8\u540c\u7684**\u3002\n\n\u4e8e\u662f\u6211\u4eec\u7684\u7b56\u7565\u8f6c\u53d8\u4e3a\u679a\u4e3e\u70b9\u3002\n\n\u679a\u4e3e\u5230\u8fd9\u4e2a\u70b9\uff0c\u53ea\u8981\u8fd9\u4e2a\u70b9\u5165\u5ea6\u4e0d\u4e3a $0$\uff0c\u5165\u5ea6\u5c31\u51cf\u4e00\uff0c\u518d\u8dd1\u4e00\u904d\u62d3\u6251\u6392\u5e8f\uff0c\u6700\u540e\u5224\u65ad\u6709\u6ca1\u6709\u73af\uff0c\u6709\u73af\u7ee7\u7eed\u505a\uff0c\u6ca1\u73af\u76f4\u63a5\u8f93\u51fa\u3002\n\n\u8fd9\u4e2a\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n(n+m))$\uff0c\u975e\u5e38\u7684\u725b\u903c\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,yikao[101010],m,rd[101010];\nvector<int> aa[101010];\nqueue<int>q;\nint main(){\n\tcin>>n>>m;\n\tfor(int i=1;i<=m;i++){\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\taa[x].push_back(y);\n\t\trd[y]++;\n\t}\n\tfor(int j=1;j<=n;j++){\n\t\tfor(int i=1;i<=n;i++){//\u591a\u7528\u4e0d\u91cd\u7f6e\uff0c\u4fdd\u9f84\u4e24\u884c\u6cea\n\t\t\tyikao[i]=rd[i];\n\t\t}\n\t\tif(rd[j]==0){\n\t\t\tcontinue;\n\t\t}\n\t\tyikao[j]--;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tif(!yikao[i]){\n\t\t\t\tq.push(i);\n\t\t\t}\n\t\t}\n\t\tint sum=0;\n\t\twhile(!q.empty()){//\u62d3\u6251\u6392\u5e8f\n\t\t\tsum++;\n\t\t\tfor(int i=0;i<aa[q.front()].size();i++){\n\t\t\t\tyikao[aa[q.front()][i]]--;\n\t\t\t\tif(!yikao[aa[q.front()][i]]){\n\t\t\t\t\tq.push(aa[q.front()][i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tq.pop();\n\t\t}\n\t\tif(sum==n){//\u5224\u65ad\u6709\u6ca1\u6709\u73af\n\t\t\tprintf(\"YES\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tprintf(\"NO\");//\u6ca1\u6709\u73af\u5c31\u8f93\u51faNO\n\treturn 0;\n}\t\n```",
        "postTime": 1628752482,
        "uid": 264490,
        "name": "hmya",
        "ccfLevel": 7,
        "title": "CF915D\u9898\u89e3"
    },
    {
        "content": "\u9898\u610f\u7b80\u5355\u660e\u4e86\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6ce8\u610f\u4e00\u4e2a\u70b9\uff1a\u5220\u8fb9\u7684\u65f6\u5019\u53ef\u4ee5\u5220\u4e00\u6761\u8fb9\u4e5f\u53ef\u4ee5\u4e00\u6761\u90fd\u4e0d\u5220\u3002\n\n\u6709\u4e00\u4e2a\u5f88\u7b80\u5355\u5f88\u66b4\u529b\u7684\u529e\u6cd5\u5c31\u662f\u679a\u4e3e\u5220\u9664\u6bcf\u4e00\u6761\u8fb9\u7684\u60c5\u51b5\uff0c\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\u4f46\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u662f  $O(m^2)$  \u7684\uff0c\u4f1a\u70b8\u6389\u3002\n\n\u8003\u8651\u5220\u9664\u6bcf\u6761\u8fb9\u540e\u62d3\u6251\u6392\u5e8f\u7684\u5b9e\u8d28\uff1a\u8ba9\u6bcf\u4e2a\u70b9\u7684\u5165\u5ea6\u51cf\u4e00\u3002\u8fd9\u5c31\u542f\u793a\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u6bcf\u4e2a\u70b9\u5728\u5165\u5ea6\u51cf\u4e00\u7684\u60c5\u51b5\u4e0b\u62d3\u6251\u6392\u5e8f\uff0c\u662f\u5426\u8fd8\u5b58\u5728\u73af\u5c31\u884c\u4e86\u3002\n\n\u62d3\u6251\u6392\u5e8f\u5224\u73af\u7684\u65b9\u6cd5\u662f\uff1a\u6574\u5f20\u56fe\u7684\u6df1\u5ea6\u5927\u5c0f\u662f\u5426\u7b49\u4e8e\u8282\u70b9\u4e2a\u6570\u3002\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint t[550],in[550];//in,t\u90fd\u4ee3\u8868\u5165\u5ea6\uff0ct\u50a8\u5b58\u7740\u6574\u5f20\u56fe\u6700\u539f\u59cb\u7684\u5165\u5ea6 \uff0c\u56e0\u4e3a\u5728\u6bcf\u6b21\u62d3\u6251\u6392\u5e8f\u540e\uff0cin\u4e2d\u6240\u5b58\u50a8\u7684\u6df1\u5ea6\u90fd\u4f1a\u6539\u53d8 \nvector<int> g[550];\nbool vis[550];\nint n,m;\nbool topo()\n{\n\tmemset(vis,false,sizeof(vis));//\u8bb0\u5f55\u8fd9\u4e2a\u70b9\u662f\u5426\u62e5\u6709\u6df1\u5ea6 \n\tint cnt=0;//\u8bb0\u5f55\u6df1\u5ea6 \n\tqueue<int> q;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(in[i]==0)\n\t\t{\n\t\t\tvis[i]=true;\n\t\t\tq.push(i);\n\t\t} \n\t}\n\twhile(!q.empty())\n\t{\n\t\tint now=q.front();\n\t\tq.pop();\n\t\tcnt++;\n\t\tfor(int i=0;i<g[now].size();i++)\n\t\t{\n\t\t\tin[g[now][i]]--;\n\t\t}\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tif(in[i]==0&&!vis[i])\n\t\t\t{\n\t\t\t\tq.push(i);\n\t\t\t\tvis[i]=true;\n\t\t\t} \n\t\t}\n\t}\n\tif(cnt==n) return true;\n\telse return false;\n}\nint main()\n{\n\tcin>>n>>m;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u,v;\n\t\tcin>>u>>v;\n\t\tg[u].push_back(v);\n\t\tin[v]++;\n\t}\n\tfor(int i=1;i<=n;i++) t[i]=in[i];\n\tif(topo())\n\t{\n\t\tcout<<\"YES\";\n\t\treturn 0;\n\t} \n\tfor(int i=1;i<=n;i++) in[i]=t[i];\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(in[i])\n\t\t{\n\t\t\tin[i]--;\n\t\t    if(topo())\n\t\t    {\n\t\t\t   cout<<\"YES\";\n\t\t\t   return 0;\n\t\t    } \n\t\t    for(int i=1;i<=n;i++) in[i]=t[i];\n\t\t}\n\t}\n\tcout<<\"NO\";\n\treturn 0;\n}\n```\n",
        "postTime": 1667464080,
        "uid": 224192,
        "name": "\u849f\u84bb\u4e14\u83dc\u9e21",
        "ccfLevel": 0,
        "title": "CF915D Almost Acyclic Graph \u9898\u89e3"
    },
    {
        "content": "\u5148\u968f\u4fbf\u641c\u51fa\u4e00\u4e2a\u73af\uff0c\u518d\u66b4\u529b\u65ad\u8fb9\uff0cdfs\u68c0\u9a8c\n\n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int N=505,M=100005;\nstruct edge{\n    int link,next;\n}e[M];\nint tot,n,m,head[N];\ninline int read(){int x=0,f=1,ch=getchar(); while(ch<'0'||ch>'9'){if(ch=='-') f=-1; ch=getchar();} while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();} return x*f;}\ninline void write(int x){if (x<0) putchar('-'),x=-x; if (x>=10) write(x/10); putchar(x%10+'0');}\ninline void writeln(int x){write(x); puts(\"\");}\ninline void add_edge(int u,int v){\n    e[++tot]=(edge){v,head[u]}; head[u]=tot;\n}\ninline void init(){\n    n=read(); m=read();\n    for (int i=1;i<=m;i++) {\n        int u=read(),v=read();\n        add_edge(u,v);\n    }\n}\nbool flag;\nint top,tmp,vis[N],stack[N],vis_edge[M];\nvoid dfs(int u){\n    vis[u]=1;\n    for (int i=head[u];i;i=e[i].next){\n        int v=e[i].link;\n        if (flag) return;\n        if (vis[v]==1){\n            stack[++top]=i; flag=1;\n            return;\n        }\n        if (!vis_edge[i]&&!vis[v]){\n            stack[++top]=i;\n            dfs(v);\n            if (!flag) top--;\n        }\n    }\n    vis[u]=2;\n}\nvoid Dfs(int u){\n    vis[u]=1;\n    for (int i=head[u];i;i=e[i].next){\n        int v=e[i].link;\n        if (i==tmp) continue;\n        if (flag){\n            return;\n        }\n        if (vis[v]==1){\n            flag=1;\n            return;\t\n        }\n        if (!vis[v])Dfs(v);\n    }\n    vis[u]=2;\n}\ninline void solve(){\n    for (int i=1;i<=n;i++) {\n        top=0; if (!vis[i]) dfs(i);\n        if (flag) break;\n    }\n    if (flag){\n        for (int i=1;i<=top;i++){\n            memset(vis,0,sizeof vis);\n            tmp=stack[i]; flag=0;\n            for (int j=1;j<=n;j++) {\n                if (!vis[j]) Dfs(j);\n                if (flag) break; \n            }\n            if (!flag) {\n                puts(\"YES\");\n                return;\n            }\n        }\n        puts(\"NO\");\n    }else{\n        puts(\"YES\");\n    }\n}\nint main(){\n    init(); solve();\n    return 0;\n}\n```",
        "postTime": 1539262564,
        "uid": 34444,
        "name": "\u5927\u83dc\u9e21fks",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF915D \u3010Almost Acyclic Graph\u3011"
    },
    {
        "content": "\u6709\u4e00\u4e2a\u663e\u7136\u7684\u66b4\u529b\uff1a\n\n\u66b4\u529b\u5220\u8fb9\uff0c\u5220\u5b8c\u4e4b\u540e\u62d3\u6251\u5224\u65ad\u6709\u6ca1\u6709\u73af\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(m(n+m))$\uff0c\u663e\u7136\u70b8\u3002\n\n\u6211\u4eec\u8003\u8651\uff0c\u5220\u6389\u4e00\u6761\u8fb9\u5bf9\u4e8e\u62d3\u6251\u7684\u8d21\u732e\u662f\u4ec0\u4e48\u3002\n\n\u4e00\u4e2a\u70b9\u5165\u5ea6\u51cf\u4e00\u3002\n\n**\u90a3\u4e48\u5bf9\u4e8e\u591a\u6761\u6307\u5411\u540c\u4e00\u4e2a\u70b9 $u$ \u7684\u8fb9\uff0c\u5220\u6389\u5176\u4e2d\u4efb\u610f\u4e00\u6761\u8fb9\u6240\u4f5c\u51fa\u7684\u8d21\u732e\u662f\u4e00\u6837\u7684\u3002**\n\n\u65e2\u7136\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u679a\u4e3e\u4e00\u4e2a\u70b9\uff0c\u8ba9\u4ed6\u5165\u5ea6\u51cf\u4e00\u540e\u518d\u8dd1\u62d3\u6251\u6392\u5e8f\uff0c\u8fd9\u76f8\u5f53\u4e8e\u5220\u6389\u5176\u4e2d\u4e00\u6761\u6307\u5411\u4ed6\u7684\u8fb9\uff0c\u8fd9\u4e48\u505a\u4e4b\u540e\u5224\u65ad\u6709\u6ca1\u6709\u73af\u5c31\u884c\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n(n+m))$\uff0c\u98d5\u98d5\u5feb\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;\nvector<int> ljb[505];\nint rd[505];\nint Rd[505];\nbool topo(){//\u8dd1\u62d3\u6251\n    queue<int> q;\n    int cnt=0;\n    for(int i=1;i<=n;i++){\n        Rd[i]=rd[i];\n    }\n    for(int i=1;i<=n;i++){\n        if(Rd[i]==0)q.push(i);\n    }\n    while(!q.empty()){\n        cnt++;\n        int tmp=q.front();\n        q.pop();\n        for(int i=0;i<ljb[tmp].size();i++){\n            int v=ljb[tmp][i];\n            Rd[v]--;\n            if(Rd[v]==0){\n                q.push(v);\n            }\n        }\n    }\n    return (cnt==n);//\u5224\u65ad\u53c8\u6ca1\u6709\u73af\n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++){\n        int u,v;\n        scanf(\"%d%d\",&u,&v);\n        ljb[u].push_back(v);\n        rd[v]++;\n    }\n    for(int i=1;i<=n;i++){\n        bool flag=false;\n        if(rd[i]!=0)rd[i]--,flag=true;//\u5220\u53bb\u4e00\u6761\u6307\u5411\u70b9i\u7684\u8fb9\uff08\u6709\u53ef\u80fd\u6ca1\u6709\u6307\u5411i\u7684\u8fb9\uff0c\u7279\u5224\u4e00\u4e0b\u5373\u53ef\uff09\n        if(topo()){\n            puts(\"YES\");\n            return 0;\n        }\n        if(flag)rd[i]++;//\u5982\u679c\u6709\u6307\u5411i\u7684\u8fb9\uff0c\u5165\u5ea6\u8bb0\u5f97\u52a0\u56de\u6765\n    }\n    puts(\"NO\");\n    return 0;\n}\n```",
        "postTime": 1648006843,
        "uid": 654285,
        "name": "little_carl",
        "ccfLevel": 0,
        "title": "CF915D"
    },
    {
        "content": "## \u5199\u5728\u524d\u9762\n\n\u8fd9\u9898\u60f3\u51fa\u4e86\u6b63\u89e3\u601d\u8def\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u4f46\u8981\u6ce8\u610f\u4e00\u4e9b\u7ec6\u8282\u3002\n\n## \u6b63\u6587\n\n\u5982\u4f55\u5224\u65ad\u4e00\u4e2a\u56fe\u6709\u6ca1\u6709\u574f\uff1f\n\n\u7528\u62d3\u6251\u6392\u5e8f\uff08\u590d\u6742\u5ea6 $O(n+m)$\uff09\u3002\u5982\u679c\u4e00\u5f20\u56fe\u7684\u62d3\u6251\u5e8f\u5217\u957f\u5ea6\u6070\u662f\u5176\u70b9\u6570\uff0c\u90a3\u4e48\u663e\u7136\u5730\uff0c\u8fd9\u5f20\u56fe\u6ca1\u6709\u73af\u3002\u7b2c\u4e00\u4e2a\u95ee\u9898\u6211\u4eec\u89e3\u51b3\u4e86\u3002\n\n\u8bf4\u5230\u5220\u8fb9\uff0c\u6211\u4eec\u7b2c\u4e00\u60f3\u5230\u7684\u5c31\u662f\u66b4\u529b\u679a\u4e3e\u53bb\u5220\u6bcf\u6761\u8fb9\u7136\u540e\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\u3002\u4f46\u662f\uff0c\u6b63\u5982\u5176\u4ed6\u5927\u4f6c\u8bba\u8ff0\u8fc7\u7684\uff0c\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u8981\u4e58\u4e0a $m$\uff0c\u6700\u7ec8\u662f $O(m(n+m))$\u3002\u770b\u4e00\u773c\u6570\u636e\u8303\u56f4\uff0c\u80af\u5b9a\u4f1a\u70b8\u3002\n\n\u4e4b\u540e\uff0c\u6211\u4eec\u6765\u60f3\u4e00\u4e0b\u62d3\u6251\u6392\u5e8f\u7684\u6a21\u677f\uff1a\n\n```cpp\nbool topsort()\n{\n\tqueue<int> q;\n\tint cnt = 0;\n\t\n\tfor (int i = 1; i <= n; i++) in[i] = IN[i];\n\t\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tif (in[i] == 0) q.push(i);\n\t}\n\t\n\twhile (!q.empty())\n\t{\n\t\tint u = q.front(); q.pop();\n\t\tcnt++;\n\t\tfor (int i = 0; i < e[u].size(); i++)\n\t\t{\n\t\t\tint cur = e[u][i];\n\t\t\tin[cur]--;\n\t\t\tif (in[cur] == 0)\n\t\t\t{\n\t\t\t\tq.push(cur);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn (cnt == n);\n}\n```\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u5982\u679c\u4f60\u7528 `vector` \u90bb\u63a5\u8868\u5b58\u56fe\uff08\u5176\u5b9e\u522b\u7684\u5b58\u56fe\u65b9\u6cd5\u80af\u5b9a\u4e5f\u884c\uff0c\u53ea\u662f `vector` \u66f4\u660e\u663e\uff09\uff0c\u8ddf\u5220\u7684\u662f\u54ea\u4e00\u6761\u8fb9**\u4e00\u70b9\u5173\u7cfb\u90fd\u6ca1\u6709\u554a\uff01**\n\n\u5728\u62d3\u6251\u6392\u5e8f\u4e2d\uff0c\u6211\u4eec\u5173\u5fc3\u7684\u662f**\u4e00\u4e2a\u70b9\u7684\u5165\u5ea6**\u800c\u975e**\u8fb9**\u672c\u8eab\u3002\n\n\u6b64\u65f6\u95ee\u9898\u5c31\u5f88\u660e\u6717\u4e86\uff1a\u6211\u4eec\u679a\u4e3e\u70b9\u800c\u975e\u679a\u4e3e\u8fb9\u3002\u628a\u679a\u4e3e\u5230\u7684\u70b9\u7684\u5165\u5ea6\u51cf $1$ \u5c31\u76f8\u5f53\u4e8e\u5220\u4e86\u4e00\u6761\u8fb9\uff0c\u540c\u65f6\u8fd9\u79cd\u60c5\u51b5\u56ca\u62ec\u4e86\u5220\u53bb\u6240\u6709\u6307\u5411\u8fd9\u4e2a\u70b9\u7684\u8fb9\u7684\u60c5\u51b5\u3002\u5728\u672c\u9898\u4e2d\uff0c$n$ \u7684\u503c\u57df\u8fdc\u8fdc\u5c0f\u4e8e $m$ \u7684\u503c\u57df\u3002\u4e8e\u662f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5feb\u4e50\u5730\u62ff\u4e0b\u8fd9\u9053\u7d2b\u9898\u5566\uff01\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n\u8bb0\u5f97\u6211\u8bf4\u8fc7\u8fd9\u9898\u7ec6\u8282\u5f88\u591a\u5417\uff1f\n\n1. \u7edf\u8ba1\u62d3\u6251\u5e8f\u957f\u5ea6\u7684\u65f6\u5019**\u4e0d\u80fd\u653e\u5230\u6700\u91cc\u5c42\u5faa\u73af**\uff08\u5176\u5b9e\u8fd9\u662f\u62d3\u6251\u6392\u5e8f\u57fa\u672c\u77e5\u8bc6\u5427\u2026\u2026\uff09\uff1b\n\n2. \u6bcf\u4e00\u6b21\u62d3\u6251\u6392\u5e8f\u90fd\u8981\u628a\u539f\u6765\u7684\u5165\u5ea6\u6570\u7ec4\u590d\u5236\u4e00\u4efd\u8fc7\u6765\uff0c\u56e0\u4e3a\u5728\u62d3\u6251\u6392\u5e8f\u4e2d\u4f1a\u5bf9\u5165\u5ea6\u6570\u7ec4\u8fdb\u884c\u64cd\u4f5c\u3002\u56e0\u4e3a\u6211\u4eec\u8981\u591a\u6b21\u4f7f\u7528\u8fd9\u4e2a\u6570\u7ec4\uff0c\u56e0\u6b64\u4fdd\u7559\u4e00\u4efd\u526f\u672c\u662f\u5fc5\u987b\u7684\u3002\n\n\u8003\u8651\u5230\u8fd9\u4e9b\u7ec6\u8282\uff0c\u5c31\u53ef\u4ee5\u5f00\u59cb\u52a8\u624b\u5566\uff1a\n\n### Code\n\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <queue>\n#define MAXM 100005\n#define MAXN 505\nusing namespace std;\n\nint n, m;\nvector<int> e[MAXN];\nint in[MAXN];\nint IN[MAXN];\n\nbool topsort()\n{\n\tqueue<int> q;\n\tint cnt = 0;\n\t\n\tfor (int i = 1; i <= n; i++) in[i] = IN[i];\n\t\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tif (in[i] == 0) q.push(i);\n\t}\n\t\n\twhile (!q.empty())\n\t{\n\t\tint u = q.front(); q.pop();\n\t\tcnt++;\n\t\tfor (int i = 0; i < e[u].size(); i++)\n\t\t{\n\t\t\tint cur = e[u][i];\n\t\t\tin[cur]--;\n\t\t\tif (in[cur] == 0)\n\t\t\t{\n\t\t\t\tq.push(cur);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn (cnt == n);\n}\n\nint main()\n{\n\tstd::ios::sync_with_stdio(false);\n\t\n\tcin >> n >> m;\n\t\n\tfor (int i = 1; i <= m; i++)\n\t{\n\t\tint u, v;\n\t\tcin >> u >> v;\n\t\te[u].push_back(v);\n\t\tIN[v]++;\n\t}\n\t\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tbool flag = 0;\n\t\tif (IN[i] != 0)\n\t\t{\n\t\t\tIN[i]--;\n\t\t\tflag = true;\n\t\t}\n\t\t\n\t\tif (topsort())\n\t\t{\n\t\t\tcout << \"YES\" << endl;\n\t\t\treturn 0;\n\t\t}\n\t\t\n\t\tif (flag == true) IN[i]++;\n\t}\n\t\n\tcout << \"NO\" << endl;\n}\n```\n\n~~\u5982\u679c\u89c9\u5f97\u849f\u84bb\u8bb2\u5f97\u597d\u4e0d\u59a8\u70b9\u4e2a\u8d5e\u5427\u2026\u2026\u7403\u7403\u4e86\u2026\u2026~~",
        "postTime": 1652445164,
        "uid": 485112,
        "name": "CharlesZiy",
        "ccfLevel": 5,
        "title": "CF915D\u9898\u89e3"
    },
    {
        "content": "# \u4e00 \u89e3\u9898\u601d\u8def\n\n## \u524d\u7f6e\u77e5\u8bc6\uff1a\u62d3\u6251\u6392\u5e8f\u4e0e\u5224\u73af\n\n\u62d3\u6251\u6392\u5e8f\u662f\u53ef\u4ee5\u7528\u6765\u5224\u73af\u7684\uff0c\u6211\u4eec\u60f3\u8c61\u4e00\u4e0b\uff0c\u5047\u5982\u67d0\u4e2a\u56fe\u91cc\u6709\u73af\uff0c\u90a3\u4e48\u4e00\u5b9a\u6709\u81f3\u5c11\u4e24\u4e2a\u70b9\u76f8\u4e92\u5236\u7ea6\u3002\u8fd9\u662f\u56e0\u4e3a\u5b83\u4eec\u7684\u7236\u4eb2\u8282\u70b9\u5e76\u6ca1\u6709\u88ab\u8bbf\u95ee\uff0c\u800c\u5b83\u4eec\u4e5f\u4e0d\u80fd\u88ab\u8bbf\u95ee\uff0c\u4f46\u662f\u5b83\u4eec\u4e92\u4e3a\u7236\u4eb2\u8282\u70b9\u3002\n\n\u6253\u4e00\u4e2a\u5f62\u8c61\u7684\u6bd4\u65b9\uff0c\u4f60\u7684\u8001\u5e08\u50ac\u4f60\u5199\u4f5c\u4e1a\uff0c\u4f60\u8bf4\uff0c\u6211\u540c\u684c\u5199\u4f5c\u4e1a\u6211\u5c31\u5199\u4f5c\u4e5f\uff0c\u800c\u4f60\u7684\u540c\u684c\u8bf4\uff0c\u5982\u679c\u4f60\u5199\u4f5c\u4e1a\u4ed6\u4e5f\u5199\u4f5c\u4e1a\uff0c\u5bb9\u6613\u60f3\u8c61\uff0c\u6700\u7ec8\u7684\u7ed3\u679c\u662f\uff0c\u4f60\u548c\u540c\u684c\u90fd\u6ca1\u6709\u5199\u4f5c\u4e1a\u3002\n\n## \u672c\u9898\u7684\u89e3\u6cd5\n\n\u5220\u6389\u4e00\u6761\u8fb9\uff0c\u672c\u8d28\u4e0a\u662f\u4f7f\u4e00\u4e2a\u70b9\u7684**\u5165\u5ea6\u51cf\u4e00**\uff0c\u5982\u679c\u6211\u4eec\u679a\u4e3e\u5220\u53bb\u6bcf\u4e00\u6761\u8fb9\uff0c\u5c31\u4f1a\u6709\u5927\u91cf\u91cd\u590d\u7684\u60c5\u51b5\u88ab\u8ba1\u7b97\u3002\u6545**\u4e0d\u59a8\u679a\u4e3e\u6bcf\u4e2a\u70b9**\u88ab\u5220\u53bb\u4e00\u6761\u5982\u8fb9\uff0c\u518d\u8dd1\u62d3\u6251\u6392\u5e8f\u5224\u73af\uff0c\u8fd9\u6837\u5c31\u80fd\u5728 $n$ \u6b21\u62d3\u6251\u6392\u5e8f\u5185\u5f97\u5230\u7b54\u6848\u3002\n\n# \u4e8c \u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <vector>\n#include <queue> \nusing namespace std;\nconst int maxn = 505;\nint n, m;\nvector <int> g[maxn];\nint in[maxn], rem[maxn];\nqueue <int> q;\nbool check()\n{\n\twhile (!q.empty()) q.pop();\n\tint cnt = 0;\n\tfor (int i = 1; i <= n; ++i)\n\t\tif (in[i] == 0)\n\t\t\tq.push(i);\n\twhile (!q.empty())\n\t{\n\t\tint node = q.front();\n\t\tq.pop(); ++cnt;\n\t\tfor (int i = 0; i < g[node].size(); ++i)\n\t\t\tif (--in[g[node][i]] == 0)\n\t\t\t{\n\t\t\t\tin[g[node][i]] = 0;\n\t\t\t\tq.push(g[node][i]);\n\t\t\t}\n\t}\n\treturn (cnt == n);\n}\nint main()\n{\n\tscanf(\"%d %d\", &n, &m);\n\tfor (int i = 1; i <= m; ++i)\n\t{\n\t\tint f, t; scanf(\"%d %d\", &f, &t);\n\t\tg[f].push_back(t);\n\t\t++in[t];\n\t}\n\tfor (int i = 1; i <= n; ++i)\n\t\trem[i] = in[i];\n\tfor (int i = 1; i <= n; ++i)\n\t{\n\t\tif (in[i] == 0) continue;\n\t\t--in[i];\n\t\tif (check() == 1)\n\t\t{\n\t\t\tprintf(\"YES\\n\");\n\t\t\treturn 0;\n\t\t}\n\t\tfor (int j = 1; j <= n; ++j)\n\t\t\tin[j] = rem[j];\n\t}\n\tprintf(\"NO\\n\");\n\treturn 0;\n}\n```\n",
        "postTime": 1653652922,
        "uid": 425694,
        "name": "\u90d1\u671d\u66e6zzx",
        "ccfLevel": 6,
        "title": "CF915D Almost Acyclic Graph \u9898\u89e3"
    },
    {
        "content": "\u770b\u5230\u9898\u4ee5\u4e3a\u8fd9\u4e2a\u6570\u636e\u4f1a\u5361\u6389 $O(n^2)$\uff0c\u540e\u6765\u624d\u53d1\u73b0\u8fd9\u4e2a\u5c45\u7136\u53ef\u4ee5\u653e $O(nm)$ \u505a\u6cd5\uff08\u6240\u4ee5\u54ea\u91cc\u6765\u7684\u7d2b\u9898\u96be\u5ea6\uff09\u4f46\u663e\u7136\u8fd8\u662f\u5e94\u8be5\u8003\u8651\u4e00\u4e0b\u6709\u6ca1\u6709\u7ebf\u6027\u505a\u6cd5\u3002\n\n\u7531\u4e8e\u627e\u5230\u4e00\u4e2a\u73af\u7684\u65f6\u5019\u603b\u662f\u5fc5\u987b\u9009\u62e9\u5220\u9664\u8fd9\u4e2a\u73af\u4e0a\u7684\u4efb\u610f\u4e00\u6761\u8fb9\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u627e\u54ea\u6761\u8fb9\u88ab\u6240\u6709\u73af\u90fd\u8986\u76d6\u7684\u95ee\u9898\u3002\n\n\u6211\u4eec\u8003\u5bdf Tarjan \u7b97\u6cd5\u7684\u8fc7\u7a0b\u3002\uff08\u6839\u636e\u300a\u7b97\u6cd5\u7ade\u8d5b\u8fdb\u9636\u6307\u5357\u300b\uff09\u5b9a\u4e49\uff1a\n\n1. \u6811\u8fb9\uff1aDFS \u8fc7\u7a0b\u4e2d\u641c\u7d22\u6811\u4e2d\u7684\u8fb9\uff08\u5373\u6bcf\u4e2a\u70b9\u7b2c\u4e00\u6b21\u88ab\u8bbf\u95ee\u65f6\u7ecf\u8fc7\u7684\u8fb9\uff09\n2. \u524d\u5411\u8fb9\uff1a\u4ece\u641c\u7d22\u6811\u4e0a\u7956\u5148\u8d70\u5411\u540e\u4ee3\u7684\u8fb9\n3. \u540e\u5411\u8fb9\uff1a\u4ece\u641c\u7d22\u6811\u4e0a\u540e\u4ee3\u8d70\u5411\u7956\u5148\u7684\u8fb9\u3002\n4. \u6a2a\u53c9\u8fb9\uff1a\u9664\u6b64\u4e4b\u5916\u7684\u8fb9\uff0c\u7531\u4e8e DFS \u7684\u6027\u8d28\u7ec8\u70b9 `dfn` \u5c0f\u4e8e\u8d77\u70b9\u3002\n\n`low[x] == dfn[x]` \u610f\u5473\u7740 `x` \u4e0d\u80fd\u901a\u8fc7\u8d70\u5b50\u6811\u5230\u8fbe\u4efb\u4f55\u53ef\u4ee5\u5230\u8fbe `x` \u7684\u5df2\u8bbf\u95ee\u8282\u70b9\u3002\u6808\u4e2d\u4ece `x` \u5230\u6808\u9876\u7684\u6240\u6709\u8282\u70b9\u90fd\u663e\u7136\u5728 `x` \u7684\u5b50\u6811\u5185\u5e76\u4e14\u90fd\u4e0d\u5728\u4efb\u4f55\u73af\u5185\uff08\u5426\u5219\u5e94\u8be5\u5df2\u7ecf\u51fa\u6808\uff09\u3002\u6240\u4ee5\u5982\u679c\u6211\u4eec\u53d1\u73b0\u5b58\u5728\u4e00\u6761\u540e\u5411\u8fb9\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8986\u76d6\u8fd9\u4e24\u4e2a\u8282\u70b9\u95f4\u7684\u8def\u5f84\u3002\n\n\u5982\u679c\u662f\u6a2a\u53c9\u8fb9\u5462\uff1f\u5982\u679c\u7ec8\u70b9\u5904\u4e8e\u6808\u4e2d\u663e\u7136\u4f1a\u51cf\u5c0f `low`\uff0c\u5e76\u4e14\u6211\u4eec\u4f1a\u53d1\u73b0\u4e0d\u4f1a\u5b58\u5728\u4efb\u4f55\u73af\u5305\u542b\u4e24\u6761\u6a2a\u53c9\u8fb9\uff0c\u90a3\u4e48\u5c31\u662f\u4f1a\u5728\u8fd9\u4e24\u4e2a\u70b9\u7684 LCA \u5904\u8fd9\u6574\u4e2a\u73af\u624d\u4f1a\u88ab\u5904\u7406\u3002\u6211\u4eec\u5bf9\u641c\u7d22\u6811\u4e0a\u7684\u8fd9\u4e24\u4e2a\u70b9\u8d70\u5230 LCA \u7684\u4e00\u6bb5\u8def\u5f84\u8fdb\u884c\u8986\u76d6\u3002\n\n\u81f3\u4e8e LCA \u6211\u4eec\u989d\u5916\u8dd1\u4e00\u904d Tarjan \u518d\u8fdb\u884c\u6811\u4e0a\u5dee\u5206\u5373\u53ef\u3002$O(m+n)$\u3002\u8f93\u51fa\u662f\u5426\u5b58\u5728\u4e00\u6761\u8fb9\u88ab\u6240\u6709\u8def\u5f84\u90fd\u8986\u76d6\u3002\u89c2\u5bdf\u5230\u6bcf\u4e00\u6b21\u8986\u76d6\u90fd\u662f\u5728\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u5185\u90e8\uff0c\u6240\u4ee5\u6709\u591a\u4e2a\u5927\u5c0f\u5927\u4e8e $1$ \u7684\u5f3a\u8fde\u901a\u5206\u91cf\u5c31\u80af\u5b9a\u65e0\u89e3\u3002\u53e6\u5916\u8fd9\u4e2a\u56fe\u4e0d\u80fd\u5728\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u5185\u5b58\u5728\u524d\u5411\u8fb9\u3002\u513f\u5b50\u5168\u90e8\u56de\u6eaf\u540e\u9700\u8981\u91cd\u65b0\u626b\u63cf\u4e00\u904d\u6240\u6709\u8fb9\u68c0\u67e5\u662f\u5426\u6709\u524d\u5411\u8fb9\u7684\u7ec8\u70b9\u5c1a\u672a\u51fa\u6808\u3002\n\n\u8003\u8651\u6709\u6ca1\u6709\u53ef\u80fd\u6700\u4f18\u89e3\u5fc5\u987b\u9009\u62e9\u6a2a\u53c9\u8fb9\u6216\u540e\u5411\u8fb9\u3002\u663e\u7136\u82e5\u5220\u9664\u540e\u5411\u8fb9\uff0c\u5982\u679c\u8fd9\u6761\u8fb9\u6c9f\u901a\u7684\u4e24\u4e2a\u70b9\u6811\u4e0a\u8def\u5f84\u8fd8\u4e0e\u5176\u5b83\u73af\u91cd\u53e0\u7684\u8bdd\u5c31\u4e0d\u4f18\u4e86\u3002\u82e5\u5220\u9664\u6a2a\u53c9\u8fb9\u4e5f\u6709\u7c7b\u4f3c\u7684\u95ee\u9898\u3002\u6240\u4ee5\u6b63\u786e\u6027\u53ef\u4ee5\u4fdd\u8bc1\u3002",
        "postTime": 1652507267,
        "uid": 62440,
        "name": "MuelsyseU",
        "ccfLevel": 0,
        "title": "CF915D Almost Acyclic Graph \u9898\u89e3"
    },
    {
        "content": "# \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u5f20 $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u56fe\uff0c\u95ee\u662f\u5426\u53ef\u4ee5\u5220\u9664\u4e00\u6761\u8fb9\u4f7f\u5f97\u6574\u4e2a\u56fe\u6ca1\u6709\u73af\u3002\n\n# \u89e3\u6cd5\n\n\u5148\u8003\u8651\u66b4\u529b\uff0c\u5220\u9664\u6bcf\u4e00\u6761\u8fb9\u7528\u62d3\u6251\u6392\u5e8f\u5224\u65ad\u73af\uff0c\u590d\u6742\u5ea6 $O(m \\times (m + n)) = O(m^2 + m \\cdot n)$\uff0c\u660e\u663e $O(m^2)$ \u5df2\u7ecf\u627f\u53d7\u4e0d\u4e0b\uff0c\u56e0\u4e3a\u8fd9\u662f\u4e00\u4e2a\u7a20\u5bc6\u56fe\u3002\n\n\u8003\u8651\u5220\u8fb9\u7684\u672c\u8d28\uff0c\u5176\u5b9e\u5c31\u662f\u5c06\u90a3\u6761\u6709\u5411\u8fb9\u7684\u7ec8\u70b9\u7684\u5165\u5ea6 $-1$\uff0c\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5165\u5ea6 $\\ge 1$ \u7684\u70b9\u7684\u5165\u5ea6 $-1$\uff0c\u590d\u6742\u5ea6 $O(n \\times (m+n))$\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\n\n\u53e6\u5916\u6ce8\u610f\uff0c\u6bcf\u6b21\u62d3\u6251\u540e\u5165\u5ea6\u6570\u7ec4\u4f1a\u6539\u53d8\uff0c\u8981\u4e24\u4e2a\u6570\u7ec4\u50a8\u5b58\uff0c\u6211\u4e00\u5f00\u59cb\u5c31\u662f\u56e0\u4e3a\u8fd9\u4e2a\u9519\u4e86\u597d\u591a\u6b21\u3002\n\n\u7528\u65f6\uff1a$810ms$\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#ifdef ONLINE_JUDGE\n#pragma GCC optimize(2)\n#endif\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 505;\n\nint n, m, u, v, in[N], cop[N];\nvector<int> G[N], ans;\n\nbool tsort()\n{\n\tans.clear();\n\tqueue<int> q;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tcop[i] = in[i];\n\t\tif (cop[i] == 0) q.push(i);\n\t}\n\twhile (!q.empty())\n\t{\n\t\tint l = q.front();\n\t\tq.pop();\n\t\tans.push_back(l);\n\t\tfor (int i = 0; i < G[l].size(); i++)\n\t\t{\n\t\t\tint nx = G[l][i];\n\t\t\tcop[nx]--;\n\t\t\tif (cop[nx] == 0) q.push(nx);\n\t\t}\n\t}\n\treturn ans.size() == n;\n}\n\nint main()\n{\n\tscanf(\"%d %d\", &n, &m);\n\tfor (int i = 1; i <= m; i++)\n\t{\n\t\tscanf(\"%d %d\", &u, &v);\n\t\tG[u].push_back(v);\n\t\tin[v]++;\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tif (in[i] > 0)\n\t\t{\n\t\t\tin[i]--;\n\t\t\tif (tsort()) \n\t\t\t{\n\t\t\t\tprintf(\"YES\\n\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tin[i]++;\n\t\t}\n\t}\n\tprintf(\"NO\\n\");\n\treturn 0;\n}\n```\n",
        "postTime": 1644548466,
        "uid": 332914,
        "name": "happybob",
        "ccfLevel": 6,
        "title": "CF915D Almost Acyclic Graph"
    },
    {
        "content": "\u5f88\u663e\u7136\u6709\u4e00\u4e2a $O(m^2)$ \u7684\u66b4\u529b\uff0c\u5c31\u662f\u66b4\u529b\u5220\u8fb9\u7136\u540e\u62d3\u6251\u5224\u73af\u3002\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u95ee\u9898\uff1a\u62d3\u6251\u6392\u5e8f\u5931\u8d25\u7684\u95ee\u9898\u662f\u4ec0\u4e48\u3002\u6211\u4eec\u62d3\u6251\u5b8c\u4e00\u904d\u540e\uff0c\u56fe\u4e0a\u5b58\u7559\u672a\u5220\u9664\u7684\u70b9\u4e00\u5b9a\u662f\u5165\u5ea6 $>\\ge 1$ \u7684\u70b9\u3002\u6211\u4eec\u5220\u9664\u4e00\u6761\u8fb9\u76f8\u5f53\u4e8e\u8ba9\u4e00\u4e2a\u70b9\u7684\u5165\u5ea6\u51cf\u5c11 1\u3002\u90a3\u4e48\u6211\u4eec\u679a\u4e3e\u90a3\u4e9b\u5165\u5ea6\u4e3a $1$ \u7684\u70b9\uff0c\u7136\u540e\u8ba9\u4ed6\u4eec\u7684\u5165\u5ea6\u51cf\u53bb 1\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u5728\u5269\u4e0b\u7684\u56fe\u4e0a\u62d3\u6251\u4e00\u4e0b\u5224\u65ad\u662f\u5426\u53ef\u884c\u5373\u53ef\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define rep(i,a,b) for(register int i=(a);i<=(b);i++)\n#define per(i,a,b) for(register int i=(a);i>=(b);i--)\nusing namespace std;\nconst int N=509;\n\ninline int read() {\n    register int x=0, f=1; register char c=getchar();\n    while(c<'0'||c>'9') {if(c=='-') f=-1; c=getchar();}\n    while(c>='0'&&c<='9') {x=(x<<3)+(x<<1)+c-48,c=getchar();}\n    return x*f;\n}\n\nint n,m,d[N],td[N];\nvector<int>e[N];\n\nvoid topo() {\n\tqueue<int>q;\n\trep(i,1,n) if(!d[i]) q.push(i);\n\twhile(!q.empty()) {\n\t\tint u=q.front(); q.pop();\n\t\tfor(auto v:e[u]) {\n\t\t\td[v]--;\n\t\t\tif(d[v]==0) q.push(v);\n\t\t}\n\t}\n}\n\nint main() {\n\tn=read(), m=read();\n\trep(i,1,m) {\n\t\tint u=read(), v=read();\n\t\te[u].push_back(v), d[v]++;\n\t}\n\ttopo();\n\trep(i,1,n) td[i]=(d[i]==0?-1:d[i]);\n\tbool ans=1;\n\trep(i,1,n) if(td[i]>0) ans=0;\n\tif(ans==1) {\n\t\tputs(\"YES\");\n\t\treturn 0;\n\t}\n\trep(i,1,n) if(td[i]==1) {\n\t\trep(j,1,n) d[j]=td[j];\n\t\td[i]--;\n\t\ttopo();\n\t\tbool flag=1;\n\t\trep(i,1,n) if(d[i]>0) flag=0;\n\t\tif(flag==1) {\n\t\t\tans=1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(ans==1) puts(\"YES\");\n\telse puts(\"NO\");\n\treturn 0;\n}\n```",
        "postTime": 1612363814,
        "uid": 180652,
        "name": "_lgswdn",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF915D \u3010Almost Acyclic Graph\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6211\u7b2c\u4e00\u6b21\u7684\u60f3\u6cd5\u662f\u76f4\u63a5\u5224\u73af\u7684\u6570\u91cf\uff0c\u7136\u800c\u4e8b\u5b9e\u8bc1\u660e\u5b9e\u5728\u662f\u592anaive\u4e86\u3002\n\n\u968f\u4fbf\u753b\u4e2a\u56fe\u90fd\u53ef\u4ee5\u5361\u6389\u6211\u7684\u89e3\u6cd5\u3002\uff08\u4e0d\u77e5\u9053\u5728\u60f3\u4ec0\u4e48\uff09\n\n------------\n\n\u8fd9\u9053\u9898\u7684\u6b63\u89e3\u662f\u62d3\u6251\u6392\u5e8f\u3002\n\n\u6734\u7d20\u7684\u60f3\u6cd5\u662f\u5bf9\u6240\u6709\u8fb9\u90fd\u8dd1\u4e00\u6b21\u62d3\u6251\uff0c\u4f46\u8fd9\u6837$O(m(n+m))$\u4f1a\u70b8\uff0c\u4e8e\u662f\u53ef\u4ee5\u6709\u4e0b\u9762\u7684\u4f18\u5316\u3002\n\n\u6211\u4eec\u627e\u5230\u6240\u6709\u5165\u5ea6\u4e0d\u4e3a\u96f6\u7684\u70b9\uff0c\u7136\u540e\u628a\u4ed6\u4eec\u6bcf\u4e00\u4e2a\u90fd\u5220\u6389\u4e00\u6761\u8fb9\u8dd1\u4e00\u904d\u62d3\u6251\u6392\u5e8f\u3002\n\n\u90a3\u4e48\u8fd9\u6837\u5c31\u53ef\u4ee5\u4f18\u5316\u5230$O(n(n+m))$\u4e86\uff0c\u7a33\u5f97\u4e00\u6279\u3002\n\n------------\n\nAC\u4ee3\u7801\u5982\u4e0b\uff1a\n\n`1935ms 1356kb`\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nnamespace StandardIO {\n\n\ttemplate<typename T>inline void read (T &x) {\n\t\tx=0;T f=1;char c=getchar();\n\t\tfor (; c<'0'||c>'9'; c=getchar()) if (c=='-') f=-1;\n\t\tfor (; c>='0'&&c<='9'; c=getchar()) x=x*10+c-'0';\n\t\tx*=f;\n\t}\n\n\ttemplate<typename T>inline void write (T x) {\n\t\tif (x<0) putchar('-'),x*=-1;\n\t\tif (x>=10) write(x/10);\n\t\tputchar(x%10+'0');\n\t}\n\n}\n\nusing namespace StandardIO;\n\nnamespace Solve {\n\t\n\tconst int N=505;\n\t\n\tint n,m;\n\tvector<int>graph[N];\n\tint indeg[N];\n\tqueue<int>q;\n\t\n\tinline bool toposort (int n) {\n\t\tint temp[N],size=0;\n\t\tmemcpy(temp,indeg,sizeof(indeg));\n\t\twhile (!q.empty()) q.pop();\n\t\tfor (register int i=1; i<=n; ++i) {\n\t\t\tif (temp[i]==0) q.push(i),size++;\n\t\t}\n\t\twhile (!q.empty()) {\n\t\t\tint v=q.front();q.pop();\n\t\t\tfor (register int i=0; i<graph[v].size(); ++i) {\n\t\t\t\tint to=graph[v][i];\n\t\t\t\ttemp[to]--;\n\t\t\t\tif (temp[to]==0) q.push(to),size++;\n\t\t\t}\n\t\t}\n\t\treturn size>=n;\n\t}\n\t\n\tinline void solve () {\n\t\tread(n),read(m);\n\t\tfor (register int i=1; i<=m; ++i) {\n\t\t\tint x,y;\n\t\t\tread(x),read(y);\n\t\t\tindeg[y]++;\n\t\t\tgraph[x].push_back(y);\n\t\t}\n\t\tfor (register int i=1; i<=n; ++i) {\n\t\t\tif (indeg[i]!=0) {\n\t\t\t\tindeg[i]--;\n\t\t\t\tif (toposort(n)) {\n\t\t\t\t\tputs(\"YES\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tindeg[i]++;\n\t\t\t}\n\t\t}\n\t\tputs(\"NO\");\n\t}\n}\n\nusing namespace Solve;\n\nint main () {\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\tsolve();\n}\n\n```",
        "postTime": 1539526303,
        "uid": 38859,
        "name": "Nero_Claudius",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF915D \u3010Almost Acyclic Graph\u3011"
    },
    {
        "content": "## \u524d\u9762\u7684\u8bdd\n\n\u6b64\u9898\u76ee\u6d1b\u8c37\u8bc4\u5206\u9519\u8bef\uff0c\u6839\u672c\u6ca1\u6709\u7d2b\u9898\u96be\u5ea6\u3002\n\n## \u601d\u8def\n\n\u6700\u5f00\u59cb\u7684\u60f3\u6cd5\uff1a\u679a\u4e3e\u5220\u9664\u7684\u6bcf\u4e00\u6761\u8fb9\uff0c\u505a\u4e00\u904d\u62d3\u6251\u6392\u5e8f\uff0c\u6700\u540e\u76f4\u63a5\u66b4\u529b\u5f97\u51fa\u7b54\u6848\u3002\n\n\u4f46\u662f\uff0c\u4ed4\u7ec6\u5206\u6790\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(m(n + m))$\uff0c\u6839\u672c\u8fc7\u4e0d\u53bb\uff0c\u6240\u4ee5\u60f3\u4f18\u5316\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5f53\u6709 $x$ \u6761\u8fb9\u662f\u6307\u5411 $u$ \u65f6\uff0c\u6211\u4eec\u5728\u4e0a\u9762\u7684\u7b97\u6cd5\u6d41\u7a0b\u4e2d\u5c31\u4f1a\u628a\u6bcf\u4e00\u6761\u8fb9\u90fd\u679a\u4e3e\u4e00\u6b21\uff0c\u679a\u4e3e $x$ \u6b21\u3002\u4f46\u4ed4\u7ec6\u60f3\u60f3\uff0c\u5bf9\u4e8e\u6bcf\u6b21\u62d3\u6251\u6392\u5e8f\u7684\u7ed3\u679c\u53ea\u8ddf $in$ \u6570\u7ec4\u6709\u5173\uff0c\u5982\u679c\u6bcf\u6b21\u62d3\u6251\u6392\u5e8f\u4e2d\u7684 $in$ \u6570\u7ec4\u6ca1\u6709\u6539\u53d8\uff0c\u90a3\u4e48\u6392\u5e8f\u7684\u7ed3\u679c\u5c31\u4e0d\u4f1a\u6539\u53d8\u3002\u800c\u8fd9 $x$ \u6b21\u5bf9\u5e94\u7684 $in_u$ \u5168\u90e8\u90fd\u662f\u4e00\u6837\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9 $x$ \u6b21\u64cd\u4f5c\u53ea\u7528\u505a $1$ \u6b21\uff01\uff01\uff01\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u4e0d\u5fc5\u5faa\u73af $m$ \u6761\u8fb9\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5faa\u73af\u6bcf\u4e2a\u5165\u5ea6\u4e0d\u4e3a $0$ \u7684\u70b9\u5c31\u53ef\u4ee5\u4e86\uff08\u56e0\u4e3a\u90fd\u6ca1\u6709\u8fb9\u6307\u5411\u5b83\uff0c\u5e72\u4ec0\u4e48\u53bb\u62d3\u6251\uff09\u3002\n\n\u90a3\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u964d\u6210\u4e86 $O(n(n + m))$\u3002\u4e3b\u8981\u8fd8\u662f\u601d\u8003 $in$ \u6570\u7ec4\u7684\u4f5c\u7528\u3002\n\n## \u4ee3\u7801\n\n\u4ee3\u7801\u6765\u5566\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long    //\u672c\u4f5c\u8005\u624b\u6b8b\u6253\u4e0a\u53bb\u7684\uff0c\u5343\u4e07\u522b\u6253\n\nusing namespace std;\n\nint n, m, u[100005], v[100005], in[505], IN[505];   //IN \u6570\u7ec4\u7528\u6765\u66ff\u6362 in \u6570\u7ec4\u3002\u56e0\u4e3a\u4f60 in \u6570\u7ec4\u5168\u90fd\u53d8\u4e3a 0 \u4e86\u8fd8\u641e\u4ec0\u4e48\u5440\nbool e[505][505];\n\nbool topo(){    //\u7b80\u5355\u7684\u62d3\u6251\u6a21\u677f\uff0c\u4e0d\u4f1a\u7684\u53ef\u4ee5\u4e0a\u7f51\u641c\n  for(int i = 1; i <= n; i++){\n    IN[i] = in[i];   //\u66ff\u6362\n  }\n  queue<int> q;\n  for(int i = 1; i <= n; i++){\n    if(!IN[i]){\n      q.push(i);    //\u9996\u6b21\u5165\u961f\n    }\n  }\n  int cnt = 0;\n  while(!q.empty()){\n    int x = q.front();\n    q.pop();\n    cnt++;     //\u8fd9\u4e2a cnt \u662f\u7528\u6765\u5224\u73af\u7684\n    for(int i = 1; i <= n; i++){\n      if(!e[x][i]){\n        continue;\n      }\n      IN[i]--;\n      if(!IN[i]){\n        q.push(i);\n      }\n    }\n  }\n  return cnt == n;    //\u5982\u679c\u6ca1\u73af\uff0c\u90a3\u4e48 n \u4e2a\u70b9\u4e00\u5b9a\u90fd\u7b97\u8fc7\u4e86\n}\n\nvoid Solve(){\n  cin >> n >> m;\n  for(int i = 1; i <= m; i++){\n    cin >> u[i] >> v[i];\n    in[v[i]]++;    //\u7edf\u8ba1\u5165\u5ea6\n    e[u[i]][v[i]] = true;\n  }\n  if(topo()){\n    cout << \"YES\\n\";\n    return ;\n  }\n  for(int i = 1; i <= n; i++){\n    if(in[i]){     //\u8981\u5165\u5ea6\u4e3a 0 \u624d\u5220\u9664\n      in[i]--;    //\u5220\u6389\u4e00\u4e2a\u70b9\u7684\u5165\u5ea6\n      if(topo()){\n        cout << \"YES\\n\";\n        return ;\n      }\n      in[i]++;    //\u56de\u6eaf\n    }\n  }\n  cout << \"NO\\n\";\n}\n\nsigned main(){     //\u8fd9\u4e2a signed \u4e0d\u7528\u7ba1\u5b83\n  Solve();\n  return 0;\n}\n```",
        "postTime": 1639748213,
        "uid": 363006,
        "name": "_Alexande_",
        "ccfLevel": 5,
        "title": "CF915D \u89e3\u9898\u62a5\u544a"
    }
]