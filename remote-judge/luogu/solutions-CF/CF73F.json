[
    {
        "content": "> \u4e00\u773c\u4e8c\u5206\u9898\uff0ccheck\u6253\u61f5\u903c   \u2014\u2014\u67d0\u5946\u4f6c\n\n\u597d\u5427\uff0c\uff0c\uff0c\u5728\u8fd9\u9898\u4e2d\uff0c\u5982\u679c$v_1 \\le v_2$\u4e14$v_1$\u4e3a\u53ef\u884c\u89e3\uff0c\u5219$v_2$\u5fc5\u7136\u4e3a\u53ef\u884c\u89e3\uff0c\u6240\u4ee5\u662f\u6709\u5355\u8c03\u6027\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u4e8c\u5206\uff0c\u7136\u540e\u4e8c\u5206\u7684check\u5c31\u4e0d\u4f1a\u6253\u4e86\u3002\u3002\n\n---\n\n### **\u91cd\u70b9\uff1a\u5173\u4e8echeck**\n\n1. \u5206\u6790\n\n  \u5206\u6790\u4e00\u4e0b\uff0c\u53d1\u73b0\u6211\u4eec\u5176\u5b9e\u53ef\u4ee5\u5047\u8bbe\u6240\u6709\u5766\u514b\u90fd\u8f6c\u5411B\u70b9\uff08\u56e0\u4e3a\u5982\u679c\u4e00\u4e2a\u5766\u514b\u80fd\u5728Pedalny\u884c\u9a76\u8fc7\u7a0b\u4e2d\uff08\u5305\u62ecAB\uff09\u6307\u5411Pedalny\uff0c\u5fc5\u7136\u80fd\u5728Pedalny\u5230\u8fbeB\u70b9\u4e4b\u524d\u6307\u5411B\u70b9\uff0c\u4e8e\u662f\u53ea\u8981\u7b49Pedalny\u6765\u4e86\u4e4b\u540e\u4e00\u8d77\u8f70\u51fb\u5c31\u884c\u4e86\uff09\uff0c\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u8981\u8ba1\u7b97\u51faPedalny\u5230\u8fbeB\u70b9\u4e4b\u524d\uff0c\u6709\u591a\u5c11\u5766\u514b\u80fd\u6307\u5411B\u70b9\u5c31\u884c\u4e86\u3002\u4e3a\u4e86\u8ba9\u66f4\u591a\u7684\u5766\u514b\u6307\u5411B\u70b9~~\uff08\u8bef~~\uff0c\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u51fa\u5bf9\u4e8e\u6bcf\u4e2a\u5766\u514b\uff0c\u662f\u987a\u65f6\u9488\u65cb\u8f6c\u6307\u5411B\u70b9\uff0c\u8fd8\u662f\u9006\u65f6\u9488\u65cb\u8f6c\u6307\u5411B\u70b9\u5feb\u3002\n  \n2. \u8ba1\u7b97\u65cb\u8f6c\u65f6\u95f4\n\n  \u7136\u540e\u6211\u4eec\u53d1\u73b0\u6bcf\u4e2a\u5766\u514b\u7684\u65cb\u8f6c\u901f\u5ea6\u662f\u786e\u5b9a\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u8981\u8ba1\u7b97\u65cb\u8f6c\u89d2\u5c31\u884c\u4e86\uff0c\u7136\u540e\u5c31\u53d8\u6210\u4e86\u7528\u52fe\u80a1\u5b9a\u7406\u6c42\u51fa\u8fb9\u957f\uff0c\u7136\u540e\u4f7f\u7528\u6c42\u76f4\u89d2\u4e09\u89d2\u5f62\u7684\u89d2\u7684\u6b63\u5207\u503c\u4e4b\u540e$tan^{-1}$\u7b97\u51fa\u89d2\u5ea6\uff0c\u7136\u540e\u5c31\u89e3\u51b3\u95ee\u9898\u4e86\u3002\n  \n  \u5982\u56fe\uff0cCD//x\u8f74\uff0c\u5766\u514bC\u521d\u59cb\u9762\u5411\u5c04\u7ebfCE\u65b9\u5411\uff0cBF$\\perp$CD\uff0c\u9898\u76ee\u7ed9\u51fa\u4e86$\\angle DCF$\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8ba1\u7b97$\\angle BCF$\u5373\u53ef\uff0c\u5177\u4f53\u8ba1\u7b97\u4e3a:$\\angle BCF=tan^{-1}(\\frac {BF} {CF})$,\u6700\u7ec8\u65cb\u8f6c\u89d2\u4e3a$\\angle DCF + \\angle BCF$\n  \n  ![geogebra-export.png](https://i.loli.net/2018/12/06/5c091f3554115.png)\n\n\u4f3c\u4e4e\u6bd4\u5b98\u65b9\u9898\u89e3\u7b80\u5355\u591a\u4e86\u3002\u3002\u4e2a\u4eba\u5199\u5b9e\u6570\u4e8c\u5206\u8f83\u4e3a\u5947\u602a\uff0c\u8bf7\u52c9\u5f3a\u63a5\u53d7\u4e00\u4e0b\n  \n```\n#include <bits/stdc++.h>\n#define EPS 1e-6\n#define PI acos(-1)\nusing namespace std;\n\ntypedef long long ll;\n\nint n,m,k;\n\nstruct Point {\n    double x, y;\n    Point() { }\n    Point(double x, double y) : x(x), y(y) { }\n    double abs() const { return hypot(x, y); }\n    double arg() const { return atan2(y, x); }\n    Point operator*(double o) const { return Point(x * o, y * o); }\n    Point operator+(const Point& o) const { return Point(x + o.x, y + o.y); }\n    Point operator-(const Point& o) const { return Point(x - o.x, y - o.y); }\n    bool operator<(const Point& o) const { return x < o.x - EPS || (x < o.x + EPS && y < o.y - EPS); }\n};\n\nPoint A,B;\nmap<double, int> js;\n\nint main(){\n    scanf(\"%lf%lf%lf%lf\",&A.x,&A.y,&B.x,&B.y);\n    scanf(\"%d\", &n);\n    double x,y,a,w;\n    for(int i=0;i<n;i++) {\n        scanf(\"%lf%lf%lf%lf\",&x,&y,&a,&w);\n        if (abs(w) < EPS) continue;\n        Point p = {x,y}; double v=-2;\n        for(int j=0;j<=100;j++){\n            Point tp = (B-A)*(j/100.0) + A;\n            double arg = (tp-p).arg() -a;\n            if(arg>2*PI) arg-=2*PI;\n            while(arg < 0) arg += 2 * PI;\n            if (arg>2*PI-arg) arg = 2*PI-arg;\n            double t = arg/w;\n            v = v<-1 ? (tp-A).abs()/t : max(v, (tp-A).abs()/t);\n        }\n        js[v]++;\n    }\n    scanf(\"%d\", &k);\n    int sk = 0; double t=-10;\n    for(map<double, int>::reverse_iterator it=js.rbegin(); it!= js.rend(); it++) {\n        if (sk + it->second > k) {\n            t = it->first;\n            break;\n        }\n        sk += it->second;\n    }\n    printf(\"%.4lf\\n\", t<-1 ? 0 : t);\n    return 0;\n}\n```",
        "postTime": 1544019788,
        "uid": 119553,
        "name": "rEdWhitE_uMbrElla",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF73F \u3010Plane of Tanks\u3011"
    }
]