[
    {
        "content": "## \u9898\u89e3\uff1a\n\n\u4e00\u5f00\u59cb\u60f3\u4e86\u4e00\u4e2a\u88f8\u7684DP\uff1a\u8bbe$dp[i]$\u8868\u793a\u7ed3\u5c3e\u4f4d\u7f6e\u4e3a$i$\u7684\u6700\u957f\u597d\u5e8f\u5217\u3002\u90a3\u4e48\u8f6c\u79fb\u5c31\u662f\n$$\ndp[i]=\\max(dp[j])+1\\quad(j\\in(1,i-1),\\gcd(a[i],a[j]>1))\n$$\n\u590d\u6742\u5ea6\u662f$O(n^2\\log n)$\u3002\n\n\u572821\u53f7\u70b9\u6298\u621f\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int maxn=1e5+5;\nint n,ans;\nint a[maxn];\nint dp[maxn];\n//dp[i]\u8868\u793a\u4ee5i\u7ed3\u5c3e\u7684\u6700\u957f\u597d\u5e8f\u5217\u957f\u5ea6\u3002\nint gcd(int a,int b)\n{\n    return !b?a:gcd(b,a%b);\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        dp[i]=1;\n    }\n    for(int i=2;i<=n;i++)\n        for(int j=1;j<i;j++)\n            if(gcd(a[i],a[j])>1)\n                dp[i]=max(dp[i],dp[j]+1);\n    for(int i=1;i<=n;i++)\n        ans=max(ans,dp[i]);\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```\n\n\u8003\u8651\u5982\u4f55\u4f18\u5316\u8f6c\u79fb\uff1a\u8fd9\u4e2alog\u5927\u6982\u7387\u662f\u7701\u4e0d\u6389\u7684\uff0c\u53ea\u80fd\u4f18\u5316\u4e24\u91cd\u679a\u4e3e\uff0c\u6211\u4eec\u53ef\u4e0d\u53ef\u4ee5\u627e\u5230\u4e00\u4e2a\u552f\u4e00\u7684\u8f6c\u79fb\u8fc7\u53bb\u7684\u65b9\u5f0f\u6216\u8005\u4f7f\u8f6c\u79fb\u65f6\u679a\u4e3e\u6570\u5c3d\u91cf\u5c11\u3002\u6211\u4eec\u8003\u8651\u4eceGCD\u5165\u624b\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u6211\u4eec\u53ea\u9700\u8981\u627e\u5230\u5f53\u524d\u679a\u4e3e\u5230\u7684\u72b6\u6001\u524d\u7684\u6700\u5927\u5408\u6cd5dp\u503c\u5373\u53ef\u3002\u800c\u8fd9\u4e2a\u5408\u6cd5DP\u8fd8\u5e94\u8be5\u548cGCD\u6709\u5173\uff08\u56e0\u4e3a\u6570\u5217\u4fdd\u8bc1\u6709\u5e8f\uff09\u3002\u800cGCD\u7684\u4e00\u822c\u5904\u7406\u65b9\u5f0f\u662f\u62c6\u6210\u56e0\u5b50\u2014\u2014\u90a3\u5c31\u518d\u8bbe\u4e00\u4e2a\u72b6\u6001\uff1a$f[i]$\u8868\u793a\u542b\u6709\u56e0\u5b50$i$\u7684$a[x]$\u4e2d\u7684\u6700\u5927$dp[x]$\u3002\u8fd9\u4e2a\u8f6c\u79fb\u4e5f\u662f\u65e0\u540e\u6548\u6027\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u5728DP\u8fc7\u7a0b\u4e2d\u540c\u6b65\u66f4\u65b0\u3002\u8fd9\u6837\uff0c\u6bcf\u6b21\u8f6c\u79fb\u5c31\u53ea\u9700\u8981\u679a\u4e3e\u8fd9\u4e2a\u6570\u7684\u6240\u6709\u8d28\u56e0\u5b50\u3002\u5927\u5927\u4f18\u5316\u4e86\u679a\u4e3e\u6548\u7387\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#include<cmath>\nusing namespace std;\nconst int maxn=1e5+5;\nint n,ans,maxx;\nint a[maxn];\nint dp[maxn];\n//dp[i]\u8868\u793a\u4ee5i\u7ed3\u5c3e\u7684\u6700\u957f\u597d\u5e8f\u5217\u957f\u5ea6\u3002\nint f[maxn];\n//f[i]\u8868\u793a\u6240\u6709\u542b\u6709\u56e0\u5b50i\u7684a[x]\u7684\u6700\u5927dp[x]\nint prime[maxn],tot;\nbool v[maxn];\nvector<int> fac[maxn];\nvoid init()\n{\n    for(int i=2;i<=maxx;i++)\n\t{\n\t\tif(!v[i])\n\t\t\tprime[++tot]=i;\n\t\tfor(int j=1;j<=tot&&i*prime[j]<=maxx;j++)\n\t\t{\n\t\t\tv[i*prime[j]]=1;\n\t\t\tif(i%prime[j]==0)\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        dp[i]=1;\n        maxx=max(maxx,a[i]);\n    }\n    init();\n    for(int i=1;i<=tot;i++)\n\t\tfor(int j=prime[i];j<=maxx;j+=prime[i])\n\t\t\t fac[j].push_back(prime[i]);\n    for(int i=1;i<=n;i++)\n    {\n        int tmp=0;\n        for(int j=0;j<fac[a[i]].size();j++)\n            tmp=max(tmp,f[fac[a[i]][j]]);\n        dp[i]=max(dp[i],tmp+1);\n        for(int j=0;j<fac[a[i]].size();j++)\n            f[fac[a[i]][j]]=max(f[fac[a[i]][j]],dp[i]);\n    }\n    for(int i=1;i<=n;i++)\n        ans=max(ans,dp[i]);\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```\n\n",
        "postTime": 1606722461,
        "uid": 175131,
        "name": "\u5085\u601d\u7ef4666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF264B \u3010Good Sequences\u3011"
    },
    {
        "content": "### Solution\n\n\u867d\u7136\u6bcf\u4e2a\u9898\u8981\u6c42\u7684\u6700\u957f\u5e8f\u5217\u7684\u6ee1\u8db3\u6761\u4ef6\u4e0d\u4e00\u6837\uff0c\u4f46\u662f\u65b9\u6cd5\u603b\u662f\u90a3\u4e00\u4e2a\u2014\u2014DP\u3002\n\n\u56e0\u4e3a\u524d\u540e\u8f6c\u79fb\u548c $\\gcd$ \u6709\u5173\u7cfb\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06 $\\gcd$ \u7528\u56e0\u5b50\u7684\u65b9\u5f0f\u8868\u793a\u3002\n\n\u6211\u4eec\u8bbe $dp_i$ \u8868\u793a\u4ee5 $a_i$ \u7ed3\u5c3e\u7684\u6700\u957f\u5e8f\u5217\uff0c $f_i$ \u4e3a\u6240\u6709\u542b\u6709 $i$ \u8fd9\u4e2a\u56e0\u5b50\u7684 $a_x$ \u4e2d\u7684 $\\max\\{dp_x\\}$ \u3002\u5f53\u65b9\u7a0b\u8f6c\u79fb\u5230 $x$ \u4f4d\u65f6\uff0c\u679a\u4e3e $a_x$ \u7684\u56e0\u5b50\uff0c\u66f4\u65b0 $dp_x=\\max\\limits_{d|a_x,d\\not=1}\\{f_d\\}+1$ \uff0c\u7136\u540e\u518d\u5c06 $f_d$ \u66f4\u65b0\uff0c\u6700\u540e\u641e\u4e00\u4e2a $ans$ \u8bb0\u5f55\u6700\u5927\u503c\u5c31\u884c\u4e86\u3002\n\n\u5c0f\u7ec6\u8282\uff1a\u5728\u66f4\u65b0 $f_d$ \u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u53ea\u66f4\u65b0\u8d28\u56e0\u5b50\u7684 $f$ \uff0c\u56e0\u4e3a\u5728\u8f6c\u79fb\u7684\u65f6\u5019\uff0c\u7528\u975e\u8d28\u56e0\u5b50\u66f4\u65b0\u7b54\u6848\uff0c\u5176\u5b9e\u5728\u679a\u4e3e\u8d28\u56e0\u5b50\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u66f4\u65b0\u8fc7\u4e86\uff0c\u5e76\u4e14\u8d28\u56e0\u5b50\u7684\u7b54\u6848\u4e0d\u4f1a\u6bd4\u975e\u8d28\u56e0\u5b50\u5dee\u3002\u800c\u4e14 $dp$ \u6570\u7ec4\u4e5f\u4e0d\u9700\u8981\uff0c\u5f53\u679a\u4e3e\u5230\u67d0\u4e00\u4f4d\u65f6\uff0c\u8fd9\u4e00\u4f4d\u4ee5\u524d\u7684\u6700\u5927\u503c\u5df2\u7ecf\u6c42\u51fa\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u548c $ans$ \u66f4\u65b0\u3002\n\n### \u4ee3\u7801\n\n```c++\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n\nusing namespace std;\nconst int N=100010;\nint ans,n,a[N],f[N];\n\ninline int read(){\n    int x=0,f=1;\n    char ch=getchar();\n    while(!isdigit(ch)){if(ch=='-') f=-1;ch=getchar();}\n    while(isdigit(ch)){x=x*10+(ch^48);ch=getchar();}\n    return x*f;\n}\n\ninline void solve(int x){\n    int m=sqrt(x),sum=0;\n    for(int i=2;i<=m;i++)\n        if(x%i==0) sum=max(max(sum,f[i]),f[x/i]);\n    sum=max(sum,f[x]);//\u8bb0\u5f97x\u4e5f\u7b97x\u7684\u56e0\u6570\n    for(int i=2;i<=m;i++)\n        if(x%i==0){\n            f[i]=sum+1;\n            while(x%i==0) x/=i;\n        }\n    f[x]=sum+1;\n    ans=max(ans,sum+1);//\u4e0d\u8bb0\u5f55dp[] \u76f4\u63a5\u66f4\u65b0\n}\n\nint main(){\n    n=read();\n    for(int i=1;i<=n;i++) a[i]=read();\n    for(int i=1;i<=n;i++) solve(a[i]);\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```\n\n",
        "postTime": 1602475432,
        "uid": 272143,
        "name": "\u662f\u4e2a\u6c49\u5b50",
        "ccfLevel": 4,
        "title": "CF264B Good Sequences"
    },
    {
        "content": "## \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u5355\u8c03\u4e0a\u5347\u5e8f\u5217 $a$\uff0c\u6c42\u6700\u591a\u5728\u8fd9\u4e2a\u5e8f\u5217\u4e2d\u9009\u591a\u4e2a\u6570\uff08\u4e0d\u8981\u6c42\u76f8\u90bb\uff09\uff0c\u6ee1\u8db3\u76f8\u90bb\u4e24\u4e2a\u6570\u4e0d\u4e92\u8d28\u3002\n\n## \u89e3\u6cd5\n\n\u663e\u7136\u6709\u4e00\u4e2a $O(n^2 \\log n)$ \u7684 DP\uff0c\u4f1a\u8d85\u65f6\u3002\n\n\u8003\u8651 $\\gcd(x,y) > 1$ \u8fd9\u4e2a\u5f0f\u5b50\uff0c\u4e8b\u5b9e\u4e0a\u5c31\u662f $x, y$ \u6709\u5171\u540c\u516c\u56e0\u6570\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $i$\uff0c\u53ea\u9700\u8981\u628a $a_i$ \u5206\u89e3\u8d28\u56e0\u6570\uff0c\u5728\u6240\u6709\u8d28\u56e0\u6570\u91cc\u627e\u4e00\u4e2a\u76f8\u5bf9\u5e94 $dp$ \u4e2d\u6700\u5927\u7684\uff0c$+1$ \u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#pragma GCC optimize(\"-Ofast,inline\")\n#include <iostream>\n#include <cmath>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <vector>\nusing namespace std;\n\nconst int N = 1e5 + 5;\n\nint a[N], n, dp[N], ans = 0;\n\n\ninline vector<int> calc(register int x)\n{\n\tvector<int> res;\n    int rem = x;\n\tfor (register int i = 2; i * i <= rem; ++i)\n\t{\n\t\tbool f = false;\n\t\twhile (x % i == 0)\n\t\t{\n\t\t\tx /= i;\n\t\t\tf = true;\n\t\t}\n\t\tif (f) res.push_back(i);\n\t}\n\tif (x != 1)\n\t{\n\t\tres.push_back(x);\n\t}\n\treturn res;\n}\n\nint main()\n{\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; i++) scanf(\"%d\", &a[i]);\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tvector<int> x = calc(a[i]);\n\t\tint s = x.size() - 1, maxn = 0;\n\t\tfor (int i = 0; i <= s; i++)\n\t\t{\n\t\t\tmaxn = max(maxn, dp[x[i]]);\n\t\t}\n\t\tfor (int i = 0; i <= s; i++)\n\t\t{\n\t\t\tdp[x[i]] = max(dp[x[i]], maxn + 1);\n\t\t}\n\t\tans = max(ans, maxn + 1);\n\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1649122428,
        "uid": 332914,
        "name": "happybob",
        "ccfLevel": 6,
        "title": "CF264B Good Sequences"
    },
    {
        "content": "# Solution\n\u53d1\u4e00\u7bc7\u53e6\u7c7b\u9898\u89e3\u3002\u3002\n\n\u7531\u4e8e$a_i$\u662f\u6309\u5927\u5c0f\u7ed9\u51fa\u7684\uff0c\u6240\u4ee5\u76f4\u63a5\u8bbe$f[i]$\u8868\u793a\u4ee5$a_i$\u7ed3\u5c3e\u7684\u6700\u957f\u597d\u5e8f\u5217\uff0c\u4e0d\u96be\u5f97\u51fa\n\n$$f[i]=\\max_{\\gcd(a_i,a_j)\\not=1}(f[j])+1$$\n\n\u8003\u8651\u679a\u4e3e\u56e0\u6570\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u5efa\u56fe\u4e86\uff0c\u6700\u540e\u7b54\u6848\u5c31\u662f\u6700\u957f\u8def\u3002\n\n\u4f46\u662f\u6211\u4eec\u4f1a\u6ce8\u610f\u5230\u5982\u679c\u628a\u6240\u6709gcd\u4e0d\u4e3a1\u7684\u90fd\u5efa\u8fb9\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u5f88\u5927\uff0c\u6ce8\u610f\u5230\u662f\u6700\u957f\u8def\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u76f8\u90bb\u7684\u5efa\u8fb9\u5373\u53ef\uff0c\u5176\u4ed6\u8df3\u8dc3\u7684\u80af\u5b9a\u4e0d\u4f1a\u505a\u4e3a\u6700\u957f\u8def\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\ln n)$\u3002\n\n# Code\n```cpp\n#include <algorithm>\n#include <cstring>\n#include <cstdio>\n#define rg register\nusing namespace std;\ntypedef long long ll;\nconst int maxn=100010,maxm=2000010;\ntemplate <typename Tp> inline int getmin(Tp &x,Tp y){return y<x?x=y,1:0;}\ntemplate <typename Tp> inline int getmax(Tp &x,Tp y){return y>x?x=y,1:0;}\ntemplate <typename Tp> inline void read(Tp &x)\n{\n    x=0;int f=0;char ch=getchar();\n    while(ch!='-'&&(ch<'0'||ch>'9')) ch=getchar();\n    if(ch=='-') f=1,ch=getchar();\n    while(ch>='0'&&ch<='9') x=x*10+ch-'0',ch=getchar();\n    if(f) x=-x;\n}\nstruct data{int v,nxt;}edge[maxm];\nint n,p,lst,ans,a[maxn],t[maxn],head[maxn],dis[maxn];\ninline void insert(int u,int v){edge[++p]=(data){v,head[u]};head[u]=p;}\nint dfs(int x)\n{\n\tif(~dis[x]) return dis[x];\n\tdis[x]=1;\n\tfor(int i=head[x];i;i=edge[i].nxt)\n\t  getmax(dis[x],dfs(edge[i].v)+1);\n\treturn dis[x];\n}\nint main()\n{\n\tread(n);\n\tfor(rg int i=1;i<=n;i++)\n\t{\n\t\tread(a[i]);\n\t\tt[a[i]]=i;\n\t}\n\tfor(rg int i=2;i<=100000;i++)\n\t{\n\t\tlst=0;\n\t\tfor(rg int j=i;j<=100000;j+=i)\n\t\t  if(t[j])\n\t\t  {\n\t\t  \tif(lst) insert(t[j],lst);\n\t\t  \tlst=t[j];\n\t\t  }\n\t}\n\tmemset(dis,0xff,sizeof(dis));\n\tfor(rg int i=1;i<=n;i++) getmax(ans,dfs(i));\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1541375643,
        "uid": 20602,
        "name": "Rayment",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF264B \u3010Good Sequences\u3011"
    },
    {
        "content": "\u8fd9\u9898\u662f\u4e00\u9053DP\u597d\u9898\u3002\n\u5982\u679c\u6570\u636e\u91cf\u5c0f\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5gcd+\u4e8c\u7ef4DP\uff0c\u590d\u6742\u5ea6\u662fO(n^2*log(n))\u7684\u3002\u4f46\u662f\u8fd9\u9898n\u8fbe\u5230\u4e861e5\u7684\u6570\u636e\u91cf\uff0c\u8fd9\u6837\u505a\u80af\u5b9a\u4f1aTle\u3002\n\u90a3\u4e48\u6211\u4eec\u5c31\u8981\u601d\u8003\u66f4\u597d\u7684\u65b9\u6cd5\u4e86\u3002\n\u8003\u8651gcd\u53ef\u4ee5\u7528\u56e0\u5b50\u6765\u8868\u793a\uff0c\u5373x\u548cy\u6709\u516c\u5171\u56e0\u5b50A\u3002\n\u6211\u4eec\u5b9a\u4e49f[i]\u8868\u793a\u4ee5\u6709i\u8fd9\u4e2a\u56e0\u5b50\u7684\u6570\u7ed3\u5c3e\u7684\u6700\u957f\u5e8f\u5217\u957f\u5ea6\u3002\n\u8fd9\u6837\u5c31\u53ef\u4ee5DP\u4e86\u3002\n\u5047\u8bbe\u6211\u4eec\u505a\u5230\u4e86a[i]\u8fd9\u4e2a\u6570\uff0c\u6211\u4eec\u679a\u4e3e\u5b83\u7684\u6bcf\u4e00\u4e2a\u56e0\u5b50k\uff0c\u6b64\u65f6f[k]\u8868\u793a\u6709k\u8fd9\u4e2a\u56e0\u5b50\u7684\u6570\u7ed3\u5c3e\u7684\u6700\u957f\u5e8f\u5217\u957f\u5ea6\uff0c\u4e5f\u5c31\u662f\u524d\u4e00\u4e2a\u6570\u7684\u6700\u957f\u5e8f\u5217\u957f\u5ea6\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5bf9\u6240\u6709\u7684f[k]\u53d6\u4e00\u4e2amax\uff0c\u6765\u4fee\u6b63f[a[i]]\uff0c\u5e76\u4e14\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u6570\u6709\u516c\u5171\u56e0\u5b50\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u8fd9\u4e2amax\u6765\u4fee\u6b63\u6240\u6709\u7684f[k]\u3002\n\u4ee3\u7801\u6bd4\u8f83\u7b80\u5355:-\uff09\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```\n#include<cstdio>\n#include<string>\n#include<cmath>\nusing namespace std;\nconst int maxn=100005;\nint n,ans,a[maxn],f[maxn];\nvoid doit(int x){\n\tint sq=sqrt(x),sum=0,y=x;\n\tfor (int i=2;i<=sq;i++)\n\tif (x%i==0){\n\t\tsum=max(max(sum,f[i]),f[x/i]);\n\t}\n\tsum=max(sum,f[x]);\n\tx=y;\n\tfor (int i=2;i<=sq;i++)\n\tif (x%i==0){\n\t\tf[i]=sum+1,f[x/i]=sum+1;\n\t\twhile (x%i==0) x/=i;\n\t}\n\tf[x]=sum+1;\n\tans=max(ans,sum+1);\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor (int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n\tfor (int i=1;i<=n;i++) doit(a[i]);\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1531137238,
        "uid": 36654,
        "name": "DYT_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF264B \u3010Good Sequences\u3011"
    },
    {
        "content": "# \u524d\u8a00\n[\u535a\u5ba2\u56ed\u98df\u7528\u66f4\u4f73](https://www.cnblogs.com/C202202chenkelin/p/14670868.html)\n# \u9898\u610f\n\u7ed9\u5b9a\u4e00\u4e2a\u6570\u96c6 $A$ \uff0c\u6c42\u4e00\u4e2a\u4e25\u683c\u4e0a\u5347\u7684\u5e8f\u5217\u4f7f\u5f97\u5e8f\u5217\u6bcf\u4e2a\u6570\u90fd\u5c5e\u4e8e $A$ \uff0c\u4e14\u4efb\u610f\u76f8\u90bb\u7684\u4e24\u4e2a\u6570\u4e0d\u4e92\u8d28\u3002\u6c42\u6784\u9020\u51fa\u7684\u6570\u5217\u7684\u6700\u5927\u957f\u5ea6\u3002\n# \u601d\u8def\n\u8003\u8651 DP\uff0c \u8bbe $dp[i]$ \u4ee5 $i$ \u4e3a\u8d28\u56e0\u6570\u4e4b\u4e00\u7684\u6570\u7ed3\u5c3e\u7684\u6700\u5927\u957f\u5ea6\u3002\n\n\u9996\u5148\u9884\u5904\u7406\u5206\u89e3\u8d28\u56e0\u6570\uff0c\u5bf9\u4e8e $A$ \u4e2d\u7684\u6570\u5b57\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u5e76\u53bb\u91cd\u3002\n\n\u4e00\u6b21\u904d\u5386 $A$ \u4e2d\u7684\u6570\u5b57\uff0c\u8bbe\u5f53\u524d\u904d\u5386\u5230\u7684\u6570\u4e3a $a$ \u3002\n\n\u5219\u518d\u5bf9\u4e8e $a$ \u5206\u89e3\u8d28\u56e0\u6570\uff0c\u5e76\u4f7f\u7528 $set$ \u8fdb\u884c\u7ef4\u62a4\u3002\n\n\u5c06\u8fd9\u4e9b\u8d28\u56e0\u6570\u7684 $dp$ \u503c\u53d6 $max$ \uff0c\u6613\u5f97 $dp[i]=max+1$ \uff08 $i$ \u4e3a $a$ \u7684\u8d28\u56e0\u6570\uff09\u3002\n\n\u6700\u540e\u5bf9 $dp[i](i\\in[1,100000])$ \u53d6 $max$ \u5373\u53ef\u3002\n\n\u603b\u4f53\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log n)$ \uff0c\u56e0\u4e3a\u4e00\u4e2a\u6570\u7684\u80fd\u90fd\u5206\u89e3\u6210\u7684\u8d28\u56e0\u6570\u4e0d\u53ef\u80fd\u8d85\u8fc7 $\\log n$ \u4e2a\uff0c\u5f53\u4e14\u4ec5\u5f53 $n$ \u4e3a $2$ \u7684\u5e42\u65f6\u53d6\u5f97\u5230\u7b49\u53f7\u3002\u8fd8\u5e26\u4e0a\u4e00\u4e2a\u8f83\u5c0f\u7684\u5e38\u6570\uff0c\u4e3a $n$ \u5bf9\u6570\u7684\u5bf9\u6570\uff0c\u56e0\u4e3a\u4f7f\u7528\u4e86 set \u8fdb\u884c\u7ef4\u62a4\uff0c\u56e0\u4e3a\u592a\u5c0f\uff0c\u6b64\u9898\u4e2d\u5fc5\u4e0d\u4f1a\u8d85\u8fc7 $5$ \uff0c\u53ef\u770b\u4e3a\u5e38\u6570\u3002\n# Code\n```cpp\n#include <set>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nnamespace Quick_Function {\n\ttemplate <typename Temp> void Read(Temp &x) {\n\t\tx = 0; char ch = getchar(); bool op = 0;\n\t\twhile(ch < '0' || ch > '9') { if(ch == '-') op = 1; ch = getchar(); }\n\t\twhile(ch >= '0' && ch <= '9') { x = (x << 1) + (x << 3) + (ch ^ 48); ch = getchar(); }\n\t\tif(op) x = -x;\n\t}\n\ttemplate <typename T, typename... Args> void Read(T &t, Args &... args) { Read(t); Read(args...); }\n\ttemplate <typename Temp> Temp Max(Temp x, Temp y) { return x > y ? x : y; }\n\ttemplate <typename Temp> Temp Min(Temp x, Temp y) { return x < y ? x : y; }\n\ttemplate <typename Temp> Temp Abs(Temp x) { return x < 0 ? (-x) : x; }\n\ttemplate <typename Temp> void Swap(Temp &x, Temp &y) { x ^= y ^= x ^= y; }\n}\nusing namespace Quick_Function;\nconst int MAXN = 1e5 + 5;\nint a[MAXN], n;\nint pre[MAXN], p[MAXN];\nbool vis[MAXN];\nint cnt, ans = 1;\nint dp[MAXN];\nset<int> prime;\nvoid Primes() {\n\tvis[1] = 1;\n\tfor(int i = 2; i <= 100000; i++) {\n\t\tif(!vis[i]) { p[++cnt] = i, pre[i] = i; }\n\t\tfor(int j = 1; j <= cnt && i * p[j] <= 100000; j++) {\n\t\t\tvis[i * p[j]] = 1; pre[i * p[j]] = p[j];\n\t\t\tif(i % p[j] == 0) break;\n\t\t}\n\t}\n}\nvoid Break_Down(int x) {\n\tif(x == 1) return;\n\tprime.insert(pre[x]);\n\tBreak_Down(x / pre[x]);\n}\nint main() {\n\tPrimes();\n\tRead(n);\n\tfor(int i = 1; i <= n; i++) Read(a[i]);\n\tsort(a + 1, a + 1 + n);\n\tint m = unique(a + 1, a + 1 + n) - a - 1;\n\tfor(int i = 1; i <= m; i++) {\n\t\tint maxn = 0;\n\t\tBreak_Down(a[i]);\n\t\tfor(set<int>::iterator it = prime.begin(); it != prime.end(); it++) maxn = Max(maxn, dp[*it] + 1);\n\t\tfor(set<int>::iterator it = prime.begin(); it != prime.end(); it++) dp[*it] = maxn;\n\t\tprime.clear();\n\t}\n\tfor(int i = 1; i <= 100000; i++) ans = Max(ans, dp[i]);\n\tprintf(\"%d\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1618644877,
        "uid": 254733,
        "name": "Night_Bringer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF264B Good Sequences"
    },
    {
        "content": "\u6c34\u4e00\u9053\u7b80\u5355dp\u7684\u9898\u89e3(\n\n\u8003\u8651\u5230\u8f6c\u79fb\u4e2d\u4e24\u4e2a\u76f8\u90bb\u7684\u6570\u4e0d\u4e92\u8d28\u6bd4\u8f83\u9ebb\u70e6\uff0c\u6211\u4eec\u5c06\u6bcf\u4e2a\u6570\u5b57\u7684\u6240\u6709\u8d28\u56e0\u5b50\u5b58\u8d77\u6765\uff0c\u8f6c\u79fb\u7684\u65f6\u5019\uff0c\u5b83\u53ef\u4ee5\u4ece\u524d\u9762\u6240\u6709\u6709\u516c\u5171\u8d28\u56e0\u5b50\u7684\u6570\u4e2d\u7b54\u6848\u6700\u5927\u503c\u8f6c\u79fb\u8fc7\u6765\uff0c\u6240\u6709\u6bcf\u6b21\u8f6c\u79fb\u53ea\u9700\u904d\u5386\u4e00\u904d\u6bcf\u4e2a\u8d28\u56e0\u5b50\u4f4d\u4e0a\u6700\u5927\u7684\u7b54\u6848\uff0c\u7136\u540e\u518d\u5c06\u81ea\u5df1\u7684\u7b54\u6848\u66f4\u65b0\u8fd9\u4e9b\u8d28\u56e0\u5b50\u4e0a\u7684\u7b54\u6848\u5373\u53ef\n\n\u56e0\u4e3a$2*3*5*7*11*13*17 > 100000$ \uff0c\u6240\u4ee5\u6700\u591a $6$ \u4e2a\u8d28\u56e0\u5b50\uff0c\u8003\u8651\u5230\u679a\u4e3e\u7ea6\u6570\u662f $O(\\max\\{a_i\\}\\mathbb{log} \\max\\{a_i\\})$\u7684\uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $(\\max\\{a_i\\}\\mathbb{log} \\max\\{a_i\\}+n)$\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint ans[100010],prime[100010],vis[100010],tot;\nvector<int> vc[100010];\nint n,a[100010],maxn,dp[100010];\nvoid shai()\n{\n\tfor(int i=2;i<=maxn;i++)\n\t{\n\t\tif(!vis[i])\n\t\t{\n\t\t\tprime[++tot]=i;\n\t\t}\n\t\tfor(int j=1;j<=tot&&i*prime[j]<=maxn;j++)\n\t\t{\n\t\t\tvis[i*prime[j]]=1;\n\t\t\tif(i%prime[j]==0)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tmaxn=max(maxn,a[i]);\n\t\tdp[i]=1;\n\t}\n\tshai(); \n\tfor(int i=1;i<=tot;i++)\n\t{\n\t\tfor(int j=prime[i];j<=maxn;j+=prime[i])\n\t\t{\n\t\t\t vc[j].push_back(prime[i]);//\u6bcf\u4e2a\u6570\u7684\u8d28\u56e0\u5b50\n\t\t}\n\t}\n\tint mxans=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint rans=0;\n\t\tfor(int j=0;j<vc[a[i]].size();j++)\n\t\t{\n\t\t\trans=max(rans,ans[vc[a[i]][j]]);//\u6709\u5171\u540c\u8d28\u56e0\u5b50\u7684\u90e8\u5206\u627e\u6700\u5927\u7684\u7b54\u6848\n\t\t}\n\t\tdp[i]=max(dp[i],rans+1);\n\t\tfor(int j=0;j<vc[a[i]].size();j++)\n\t\t{\n\t\t\tans[vc[a[i]][j]]=max(ans[vc[a[i]][j]],dp[i]);\n\t\t}\n\t\tmxans=max(mxans,dp[i]);\n\t}\n\tcout<<mxans;\n}\t\t\n```",
        "postTime": 1578619354,
        "uid": 48265,
        "name": "decoqwq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF264B \u3010Good Sequences\u3011"
    },
    {
        "content": "### \u9898\u610f\n- \u6c42\u51fa\u6700\u957f\u7684\u76f8\u90bb\u4e24\u6570**\u4e0d\u4e92\u8d28**\u7684\u6700\u957f\u7684\u4e25\u683c\u4e0a\u5347\u6570\u5217\u7684\u957f\u5ea6~~\u5e94\u8be5\u5427~~\uff08wo \u83dc\u6b7b\u4e86\n\n\u8fd9\u9053\u9898\u8ba9\u6211$get$\u5230\u5bf9\u4e8e\u7d20\u6570\u5904\u7406\u7684\u51e0\u4e2a\u65b0\u65b9\u6cd5\n\n\u5177\u4f53\u770b\u4ee3\u7801\u5427\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<cstdlib>\n#include<algorithm>\n#include<string>\n#include<queue>\n#define re register\n#define ll long long\n#define maxn 100001\n#define inf 2147483647\n#define mod 998244353\nusing namespace std; //\u8bf7\u5ffd\u7565\ninline int read(){\n    int x=0,f=1; char ch=getchar();\n    while(!isdigit(ch)) {if(ch=='-')f=-1;ch=getchar();}\n    while(isdigit(ch)) {x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nint QAQ[maxn],dp[maxn];\nint qwq;/\u4e5f\u8bf7\u5ffd\u7565\nint main()\n{\n    for(int i=2;i<maxn;i++)\n    if(!QAQ[i])\n    for(int j=i;j<maxn;j+=i) QAQ[j]=i; //\u53ef\u4ee5\u7528\u6765\u50a8\u5b58\u6bcf\u4e2a\u56e0\u5b50(\u6da8\u59ff\u52bf\u4e86\n\t/*\n\tfor(int i=2;i<=maxn;i++)\n\tif(!a[i]) \n\tfor(int j=i;j<=maxn;j+=i) a[j]=a[j/i]+1;//\u53ef\u4ee5\u6c42\u6bcf\u4e2a\u6570\u7684\u6240\u6709\u56e0\u5b50\u4e2a\u6570(\u53c8\u6da8\u59ff\u52bf\u4e86 \n\t*/ \n    int n=read();\n    for(int i=1;i<=n;i++)\n    {\n        int t=read();\n        int x=0;\n        for(int i=t;i>1;i/=QAQ[i]) x=max(x,dp[QAQ[i]]); // \u6c42\u5f97\u5f53\u524d\u4ee5x\u4e3a\u6700\u540e\u4e00\u4f4d\u6570\u7684\u6700\u957f\u5e8f\u5217\u957f\u5ea6\n        for(int i=t;i>1;i/=QAQ[i]) dp[QAQ[i]]=max(dp[QAQ[i]],x+1);//\u66f4\u65b0\u6bcf\u4e00\u4e2a\u56e0\u5b50i(dp[i]);\n        qwq=max(x+1,qwq);\n    }\n    printf(\"%d\",qwq);\n    return 0;\n}\n```\n\n```cpp\n\u7528vector \u7684\uff0c\u539f\u7406\u540c\u4e0a\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<cstdlib>\n#include<algorithm>\n#include<string>\n#include<vector>\n#define re register\n#define ll long long\n#define maxn 200010\n#define inf 2147483647\n#define mod 998244353\nusing namespace std; \ninline int read(){\n    int x=0,f=1; char ch=getchar();\n    while(!isdigit(ch)) {if(ch=='-')f=-1;ch=getchar();}\n    while(isdigit(ch)) {x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\nvector<int>vc[maxn];\ninline void init(){\n\tfor(int i=2;i<=maxn;i++)\n\tfor(int j=i;j<maxn;j+=i)\n\t   vc[j].push_back(i);\n}\nint a[maxn],dp[maxn],ans=1;\nsigned main(){\n   init();\n\tint n=read();\n\tvector<int>::iterator it;\n\tfor(int i=1;i<=n;i++) a[i]=read();\n\tsort(a+1,a+n+1); //\u4e3a\u4ec0\u4e48\u8981\u6392\u5e8f\uff1f\u81ea\u5df1\u60f3\u3002\u3002\u3002\n\tfor(int i=1;i<=n;i++){\n\t\tint maxm=0;\n\t\tfor(it=vc[a[i]].begin();it!=vc[a[i]].end();it++) maxm=max(maxm,dp[*it]);\n\t\tfor(it=vc[a[i]].begin();it!=vc[a[i]].end();it++) dp[*it]=maxm+1;\n\t} \n\tfor(int i=0;i<maxn;i++) ans=max(ans,dp[i]);//\u4e00\u5b9a\u8981\u4ece0\u5f00\u59cb\uff0c\u6211@@&\u2026##\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n \n```\n[$\\sout\\text{\u65e0\u803b\u7684\u6c42\u8d5e}$](https://yycdeboke.blog.luogu.org/solution-cf264b)",
        "postTime": 1563454031,
        "uid": 126772,
        "name": "\u53f6\u67ab",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF264B \u3010Good Sequences\u3011"
    },
    {
        "content": "## Solution\nDP\n\n$dp[i]$\u8868\u793a\u4ee5$i$\u7ed3\u5c3e\u7684Good Sequence\n\n$d[i]$\u8868\u793a\u6240\u6709\u542b\u6709$i$\u8fd9\u4e2a\u8d28\u56e0\u5b50\u7684$x$\u4e2d$max(dp[x])$\n\n\u6bcf\u6b21\u8f6c\u79fb\u5b8c$dp[x]$\u4e4b\u540e\uff0c\u518d\u66f4\u65b0\u4e00\u4e0b\u6240\u6709\u7684$d[i]$\u5373\u53ef\n\n## Code\n```cpp\n#include <cstdio>\n#include <algorithm>\n#define N 100010\n\nusing namespace std;\n\nint a[N], dp[N], d[N];\nint gcd(int x, int y) {\n\tif (y == 0) return x;\n\telse return(y, x % y);\n}\n\nint main() {\n\tint n;\n\tscanf(\"%d\", &n);\n\tif (n == 1) {\n\t\tprintf(\"%d\\n\", 1);\n\t\treturn 0;\n\t}\n\tfor (int i = 1; i <= n; ++i) {\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\tint ans = 0;\n\tfor (int i = 1; i <= n; ++i) {\n\t\tint e = a[i];\n\t\tfor (int j = 2; j * j <= a[i]; ++j) {\n\t\t\tif (e % j == 0) {\n\t\t\t\tdp[a[i]] = max(dp[a[i]], d[j]);\n\t\t\t\twhile (e % j == 0) e /= j;\n\t\t\t}\n\t\t}\n\t\tif (e > 1) dp[a[i]] = max(dp[a[i]], d[e]);\n\t\tdp[a[i]]++;\n\t\tans = max(ans, dp[a[i]]);\n\t\te = a[i];\n\t\tfor (int j = 2; j * j <= a[i]; ++j) {\n\t\t\tif (e % j == 0) {\n\t\t\t\td[j] = dp[a[i]];\n\t\t\t\twhile (e % j == 0) e /= j;\n\t\t\t}\n\t\t}\n\t\tif (e > 1) d[e] = dp[a[i]];\n\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1542188519,
        "uid": 27711,
        "name": "fangxk2003",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF264B \u3010Good Sequences\u3011"
    },
    {
        "content": "**\u8be6\u89c1\u6211\u7684[\u535a\u5ba2](https://www.cnblogs.com/qixingzhi/p/9310133.html)**\n\n\u601d\u8def\u5206\u6790\uff1a\n\n\u3000\u3000\u8fd9\u9898DP\u592a\u96be\u4e86\u2026\u2026\n\n\u3000\u3000\u6700\u7ec8\u7684\u89e3\u6cd5\u662f\uff0c\u4ee4f[i]\u8868\u793a\u5b58\u5728\u56e0\u5b50i\u7684\u4e00\u4e2a\u6570\u4f5c\u4e3a\u5b50\u5e8f\u5217\u7ed3\u5c3e\u7684\u5b50\u5e8f\u5217\u7684\u6700\u5927\u957f\u5ea6\u3002\uff08\u5b9a\u4e49\u90fd\u597d\u96be\u61c2\u554a\u2026\u2026\uff09\n\n\u3000\u3000\u73b0\u5728\u60f3\u4e00\u60f3\u600e\u4e48\u8f6c\u79fb\u2026\u2026\u9996\u5148\u5148\u9884\u5904\u7406\u51fa\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570a[i]\u7684\u6240\u6709\u56e0\u6570\uff08\u4e0d\u542b1\uff09\u3002\u65e2\u7136\u76f8\u90bb\u7684\u4e24\u4e2a\u6570\u4e0d\u80fd\u662f\u4e92\u8d28\u7684\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad\u76f8\u90bb\u4e24\u4e2a\u6570\u7684\u6700\u5927\u516c\u7ea6\u6570\u662f\u5426\u5927\u4e8e1\u5c31\u597d\u4e86\u3002\n\n\u3000\u3000\u4f9d\u6b21\u679a\u4e3ea[i]\uff0c\u5728\u8fd9\u8fc7\u7a0b\u4e2d\u679a\u4e3e\u521a\u624d\u5904\u7406\u597d\u7684a[i]\u7684\u56e0\u6570\u3002\u4e3a\u4ec0\u4e48\u8981\u679a\u4e3e\u56e0\u6570\uff1f \u4e3a\u4e86\u770b\u770b\u6211\u80fd\u591f\u63a5\u5230\u54ea\u4e9b\u6570\u540e\u9762\u3002\u56e0\u4e3a\u6240\u6709\u56e0\u6570\u5982\u679c\u5728\u4e4b\u524d\u7684\u6570\u91cc\u51fa\u73b0\u8fc7\uff0c\u90a3\u4e48\u5f53\u524d\u7684a[i]\u5c31\u53ef\u4ee5\u63a5\u4e0a\u53bb\uff0c\u56e0\u4e3a\u56e0\u6570\u5927\u4e8e1\uff0c\u6240\u4ee5\u80af\u5b9a\u4e0d\u4f1a\u6709\u4e92\u8d28\u7684\u8fd9\u79cd\u60c5\u51b5\u3002\u7531\u4e8e\u6211\u4e4b\u524d\u5df2\u7ecf\u8bb0\u5f55\u4e86\u8fd9\u4e9b\u56e0\u6570\u6240\u80fd\u591f\u8fbe\u5230\u7684\u6700\u5927\u957f\u5ea6\uff0c\u90a3\u4e48\u518d\u52a0\u4e0a\u6211\u81ea\u5df1\uff0c\u957f\u5ea6\u5c31\u53c8\u53ef\u4ee5+1\u4e86\u2014\u2014\u8fd9\u4e00\u70b9\u6709\u70b9\u50cfLIS\uff0c\u4f46\u53c8\u6709\u70b9\u4e0d\u540c\uff1a\u9009\u62e9\u6240\u6709\u56e0\u6570\u4e2df\u503c\u6700\u5927\u7684\u53bb\u63a5\u4e0a\u53bb\u4ee5\u540e\uff0c\u6240\u6709\u56e0\u6570\u7684f\u503c\u90fd\u53ef\u4ee5\u66f4\u65b0\u6210\u4e0e\u5176\u4e2d\u6700\u5927\u503c\u76f8\u540c\u7684\u3002\u56e0\u4e3a\u6700\u540e\u4e00\u4e2a\u6570\u672c\u8eab\u5c31\u542b\u6709\u8fd9\u4e9b\u56e0\u6570\u3002\n\n\u3000\u3000\u6240\u4ee5\u6700\u540e\u7684\u7b54\u6848\u7a76\u7adf\u662f\u4ec0\u4e48\uff1f\u6211\u8ba4\u4e3a\u662ff[2]~f[a[n]\u4e2d\u7684\u6700\u5927\u503c\u3002\u7136\u800c\u8fd9\u6837\u4f1aWA\uff0c\u6539\u6210f[1]~f[a[n]]\u5c31AC\u4e86\u3002\u8fd9\u4e00\u70b9\u4e00\u76f4\u60f3\u4e0d\u901a\uff0c\u662f\u56e0\u4e3a\u672c\u8eab\u5c31\u4f1a\u8f93\u51651\u5417\uff1f\u4e3a\u4ec0\u4e48\u8f93\u51651\u5c31\u4f1a\u5f71\u54cd\u7b54\u6848\u5462\uff1f\u800c\u4e14\u6211\u7684AC\u4ee3\u7801\u5bf9\u4e8e\u6570\u636e1 1 1 1 1\u7adf\u7136\u8f93\u51fa\u4e865\uff0c\u4e0d\u5e94\u8be5\u662f1\u5417\uff1f1\u548c1\u662f\u4e92\u8d28\u7684\uff01\u8fd8\u8bf7\u5927\u795e\u5e2e\u5fd9\u89e3\u7b54\u4e00\u4e0b\u2026\u2026",
        "postTime": 1531573117,
        "uid": 41095,
        "name": "inexistent",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 CF264B \u3010Good Sequences\u3011"
    },
    {
        "content": "## \u3010\u9898\u89e3\u3011good\u5e8f\u5217\n\n\u5177\u6709\u5f88\u660e\u663e\u7684\u65e0\u540e\u6548\u6027\u3002\n\n\u8003\u8651$dp$\u3002\u8bbe$dp(i)$\u8868\u793a\u4ee5\u7b2c$i$\u53f7\u7ed3\u5c3e\uff0c\u6700\u957f\u7684\u5e8f\u5217\u957f\u5ea6\u3002\n\n\u8003\u8651\u521d\u59cb\u6761\u4ef6\uff0c\u663e\u7136\u662f$dp(0)=0$\n\n\u8003\u8651\u8f6c\u79fb\uff0c\u663e\u7136\u662f$dp(t)=max(dp[k])+1$\u5176\u4e2d$gcd(data[t],data[k])>1$\n\n\u8fd9\u6837\u7684\u8f6c\u79fb\u662f$O(n^2)$\u7684\uff01\u663e\u7136\u8d85\u65f6\u3002\n\n\u53d1\u73b0\u503c\u57df$\\le 100000$\u90a3\u4e48\u6211\u4eec\u5c06\u6570\u62c6\u6210\u5b83\u7684\u8d28\u56e0\u6570\u3002\n\n\u7ebf\u6027\u7b5b\u7d20\u6570\u9884\u5904\u7406$[1,100000]$\u7684\u8d28\u6570$O(n)$\u7684\u4ee3\u4ef7\u3002\u5b58\u4e0b\u6765\u3002\n\n\u7136\u540e\u8f6c\u79fb\u7684\u65f6\u5019\uff0c\u5148\u76f4\u63a5$O(\\sqrt{n})$\u679a\u4e3e\u8d28\u56e0\u6570\uff0c\u76f4\u63a5\u4ece$vector$\u8868\u91cc\u67e5\u8be2\u80fd\u591f\u4ece\u8c01\u90a3\u91cc\u8f6c\u79fb\u3002\n\n\u6839\u636e$dp$\u7684\u6700\u4f18\u6027\u8d28\uff0c\u53ef\u4ee5\u77e5\u9053\u53ea\u9700\u8981\u4ece$vector$\u7684\u6700\u540e\u4e00\u4e2a $dp$\u503c\u8f6c\u79fb\u8fc7\u6765\u5c31\u597d\u4e86\uff0c\u4e00\u5b9a\u662f\u6700\u5927\u7684\u3002\n\n\u8fd9\u6837\u590d\u6742\u5ea6\u5c31\u662f$O(n\\sqrt{n})$\u4e86\n\n```cpp\n#include<bits/stdc++.h>\n\n#define RP(t,a,b) for(register int (t)=(a),edd_=(b);t<=edd_;++t)\n#define DRP(t,a,b) for(register int (t)=(a),edd_=(b);t>=edd_;--t)\n#define ERP(t,a) for(int t=head[a];t;t=e[t].nx)\n#define Min(a,b) ((a)<(b)?(a):(b))\n#define pushup(x) seg[(x)]=seg[(x)<<1]+seg[(x)<<1|1]\n#define midd register int mid=(l+r)>>1\n#define chek if(R<l||r<L)return\n#define TMP template<class ccf>\n#define rgt L,R,mid,r,pos<<1|1\n#define lef L,R,l,mid,pos<<1\n#define all 1,n,1\n\nusing namespace std;typedef long long ll;\nTMP inline ccf qr(ccf k){\n    char c=getchar();\n    ccf x=0;\n    int q=1;\n    while(c<48||c>57)q=c==45?-1:q,c=getchar();\n    while(c>=48&&c<=57)x=x*10+c-48,c=getchar();\n    return q==-1?-x:x;\n}\nconst int maxn=100005;\nconst int maxl=maxn-5;\nbool usd[maxn];\nint data[maxn];\n#define isp(x) (!usd[x])\nvector < int > pr;\n#define pb push_back\nvector < int > p[100001];\nint n;\nint ans;\nint dp[maxn];\n\ninline void gen_pr(){\n    usd[1]=1;\n    usd[0]=1;\n    RP(t,2,maxl){\n\tif(!usd[t])\n\t    pr.pb(t);\n\tRP(i,0,pr.size()-1){\n\t    if(t*pr[i]>maxn)\n\t\tbreak;\n\t    usd[t*pr[i]]=1;\n\t    if(!(t%pr[i]))\n\t\tbreak;\n\t}\n    }\n}\n\ninline int Max(int x,int y){\n    if(x>y)\n\treturn x;\n    return y;\n}\nint main(){\n#ifndef ONLINE_JUDGE\n    freopen(\"good.in\",\"r\",stdin);\n    freopen(\"good.out\",\"w\",stdout);\n#endif\n    gen_pr();\n    n=qr(1);\n    RP(t,1,n)\n\tdata[t]=qr(1);\n    int siz=pr.size()-1;\n\n    RP(t,1,n){register int sav=data[t];\n\tRP(i,0,siz){\n\t    register int now=pr[i];\n\t    register int nowcnt=p[now].size();\n\t    if(!(sav%now)){\n\t\twhile(!(sav%now))\n\t\t    sav/=now;\n\t\tif(nowcnt)\n\t\t    dp[t]=Max(dp[t],dp[p[now][nowcnt-1]]+1);\n\t\telse\n\t\t    dp[t]=Max(dp[t],1);\n\t\tp[now].pb(t);\n\t    }\n\t    if(sav<now)\n\t\tbreak;\n\t}\n    }\n    \n    ans=1;\n    RP(t,1,n)\n\tans=Max(ans,dp[t]);\n    cout<<ans<<endl;\n    return 0;\n}\n```\n\n",
        "postTime": 1548915804,
        "uid": 113460,
        "name": "\u8c01\u662f\u9e3d\u738b",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 CF264B \u3010Good Sequences\u3011"
    }
]