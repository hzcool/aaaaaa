[
    {
        "content": "### \u9898\u53f7\uff1aCF925B/CF967D\n\n### \u9898\u76ee\u5927\u610f\uff1a\n\u7ed9\u5b9a $n$ \u4e2a\u5b58\u50a8\u5668\u548c\u4e24\u4e2a\u4efb\u52a1\uff0c\u7b2c $i$ \u4e2a\u5b58\u50a8\u5668\u7684\u5185\u5b58\u4e3a $c_i$ \uff0c\u82e5\u5bf9\u7b2ci\u4e2a\u4efb\u52a1\u4f7f\u7528\u4e86 $k_i$ \u4e2a\u5b58\u50a8\u5668\u5219\u8981\u6c42\u6bcf\u4e2a\u5b58\u50a8\u5668\u7684\u5185\u5b58\u90fd\u8981\u81f3\u5c11\u662f $\\dfrac{x_i}{k_i}$ \u4e0a\u53d6\u6574)\uff0c\u6bcf\u4e2a\u5b58\u50a8\u5668\u53ea\u80fd\u4f9b\u7ed9\u4e00\u4e2a\u4efb\u52a1\u4f7f\u7528\uff0c\u7ed9\u5b9a $x_1,x_2$\uff0c\u6784\u9020\u65b9\u6848\u6216\u8bf4\u660e\u65e0\u89e3\u3002\n\n### \u7b97\u6cd5\uff1a\n\n\u8fd9\u4e2a D \u6bd4 E \u8fd8\u8981\u96be\u2026\n\n\u5f88\u597d\u7684\u9898\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u60f3\u8981\u76f4\u63a5\u968f\u4fbf\u6784\u9020\u65b9\u6848\u8fd8\u662f\u4e0d\u884c\u7684\uff0c\u6211\u4eec\u5e94\u8be5\u8981\u627e\u5230\u4e00\u4e9b\u9650\u5236\u6ee1\u8db3\u5728\u8fd9\u4e9b\u9650\u5236\u4e0b\u53ef\u884c\u6027\u4e0d\u88ab\u7834\u574f\u800c\u4e14\u4f1a\u6709\u65b0\u7684\u7a81\u7834\u53e3\uff0c\u6bd4\u5982\u50cf\uff1a\u6211\u4eec\u53ef\u4ee5\u94a6\u5b9aki\u6700\u5927/\u5c0f\u7684\u65b9\u6848\uff0c$\\dfrac{x_i}{k_i}$ \u6700\u5927/\u5c0f\u7684\u65b9\u6848\uff08\u8fd9\u4e9b\u601d\u8def\u6bcf\u4e00\u79cd\u60f3\u4e0b\u53bb\u90fd\u662f\u4e00\u79cd\u65b0\u65b9\u6cd5\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u4e8c\u5206\uff0c\u4e09\u5206\u751a\u81f3\u6a21\u62df\u89e3\u51b3\u540c\u4e00\u4e2a\u95ee\u9898\uff09\uff0c\u4f46\u662f\u8fd9\u4e9b\u90fd\u4e0e\u6211\u4eec\u7684\u5b9e\u73b0\u6709\u5173\uff0c\u5728\u8fd9\u4e4b\u524d\uff0c\u6211\u4eec\u5e94\u8be5\u628a\u9898\u76ee\u4e2d\u7ed9\u6211\u4eec\u7684\u4e1c\u897f\u5206\u6790\u597d\u3002\n\n\u4e0b\u6587\u7684\u6240\u6709\u9664\u6cd5\u90fd\u9ed8\u8ba4\u4e0a\u53d6\u6574\u3002\n\n\u6211\u4eec\u53d1\u73b0\u5c06 $c_i$ \u6392\u5e8f\u540e\uff0c\u6bcf\u4e00\u4e2a\u5b58\u50a8\u5668\u4e00\u5b9a\u662f\u5360\u7528\u8fde\u7eed\u7684\u4e00\u6bb5ci\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7\u5fae\u6270\u7684\u65b9\u6cd5\u8bc1\u660e\uff1a\u5047\u8bbe\u4e00\u7ec4\u6700\u4f18\u65b9\u6848\u4e2d $x_1$ \u53d6\u4e86 $[l1,r1]$ \uff0c$x_2$ \u53d6\u4e86$[l_2,r_2]$\uff0c\u6ee1\u8db3 $l_1\\le r_1<l_2\\le r_2$ ,\u5219 $\\dfrac{x_1}{k_2}\\le \\dfrac{x_2}{k_2}$ \u5047\u8bbe\u4ece $[l_1,r_1],[l_2,r_2]$ \u4e24\u533a\u95f4\u4e2d\u5206\u522b\u53d6\u51fa\u4e86\u4e24\u4e2a\u6570 $c_x,c_y$ \u5c06\u5176\u4ea4\u6362\uff0c\u90a3\u4e48\u4ea4\u6362\u4e4b\u540e $c_y$ \u4e00\u5b9a\u76f8\u6bd4\u539f\u5148\u6ca1\u6709\u201c\u7269\u5c3d\u5176\u7528\u201d\uff0c\u800c $c_x$ \u5f88\u6709\u53ef\u80fd\u4e0d\u6ee1\u8db3 $\\ge \\dfrac{x_2}{k_2}$ \u7684\u9650\u5236\uff0c\u539f\u547d\u9898\u5f97\u8bc1\u3002\n\n\u7ee7\u7eed\u8d2a\u5fc3\u5730\u601d\u8003\uff0c\u5047\u8bbe\u6211\u4eec\u94a6\u5b9a\u4e86 $x_i$ \u5360\u7528\u7684\u533a\u95f4\u8981\u5728 $x_j$ \u5360\u7528\u7684\u533a\u95f4\u4e4b\u524d\uff0c\u90a3\u4e48\u8fd9\u4e9b\u533a\u95f4\u5728\u4ec0\u4e48\u60c5\u51b5\u4e0b\u6700\u4f18\u5462\uff1f\u5f88\u660e\u663e $x_j$ \u4e00\u5b9a\u662f\u5360\u7528 $i$ \u81f3 $n$ \u8fd9\u4e00\u6bb5\u533a\u95f4\u6700\u4f18\uff08\u4e0d\u7136\u7684\u8bdd\u6211\u7528\u4e86\u6bd4\u8f83\u5c0f\u7684\u6570\u4f46\u662f $c_n$ \u8fd9\u79cd\u5927\u6570\u5374\u6ca1\u6709\u7528\uff09\uff0c$x_i$ \u4e00\u5b9a\u662f\u4ece\u524d\u5230\u540e\u626b\u63cf\uff0c\u53ea\u8981\u6ee1\u8db3\u6761\u4ef6\u5c31\u9000\u51fa\uff08\u8fd9\u6837\u53ef\u4ee5\u4f7f\u7528\u6700\u5c11\u6570\u91cf\u7684\u5b58\u50a8\u5668\uff0c\u6700\u5927\u9650\u5ea6\u907f\u514d\u4e0e $x_j$ \u91cd\u53e0\uff09\u3002\n\u90a3\u4e48\u6211\u4eec\u7684\u9650\u5236\u5c31\u51fa\u6765\u4e86\uff1a\u6211\u4eec\u8981\u6784\u9020\u8ba9\u8fd9\u4e9b\u9009\u62e9\u7684\u533a\u95f4\u6700\u4f18\u7684\u65b9\u6848\uff0c\u66f4\u672c\u8d28\u4e9b\uff0c\u533a\u95f4\u662f\u7531 $k_i$ \u51b3\u5b9a\u7684\uff0c\u5373\u6211\u4eec\u8981\u6784\u9020\u8ba9 $k_1,k_2$ \u90fd\u5c3d\u91cf\u5c11\u7684\u65b9\u6848\uff0c\u8fd9\u6837\uff0c\u95ee\u9898\u4fbf\u8fce\u5203\u800c\u89e3\u4e86\u3002\n\n\n\u8f93\u51fa\u65b9\u6848\u7684\u8fc7\u7a0b\u4e0d\u518d\u8d58\u8ff0\uff0c\u8fd9\u4e9b\u786e\u5b9a\u4e86\u5c31\u662f\u7b80\u5355\u6a21\u62df\u3002\n\n\u4ee3\u7801\uff1a\n```cpp    #include<bits/stdc++.h>\n    #define MAXN 1000000\n    #define int long long\n    using namespace std;\n    int n,x1,x2,used[MAXN+5];\n    struct node{\n    \tint v,id;\n    }c[MAXN+5];\n    bool cmp(node x,node y){return x.v<y.v;}\n    bool check(int fl){\n    \tint k1=-1; for(int i=1;i<=n;i++) used[i]=0;\n    \tint k2=-1,ln=0,ti=0;\n    \tfor(int i=n;i;i--){\n    \t\tused[i]=2,++ln;\n    \t\tif((x2+ln-1)/ln<=c[i].v){k2=ln,ti=i; break;}\n    \t}if(k2==-1) return 0; int pln=0; \n    \tfor(int i=ti-1;i;i--){\n    \t\tused[i]=1; ++pln;\n    \t\tif((x1+pln-1)/pln<=c[i].v){k1=pln; break;}\n    \t}if(k1==-1) return 0;\n    \tint t1=1,t2=2;\n    \tif(fl) swap(k1,k2),swap(t1,t2); \n    \tprintf(\"Yes\\n%lld %lld\\n\",k1,k2);\n    \tfor(int i=1;i<=n;i++){\n    \t\tif(used[i]==t1) printf(\"%lld \",c[i].id);\n    \t}puts(\"\"); for(int i=1;i<=n;i++) if(used[i]==t2) printf(\"%lld \",c[i].id); puts(\"\");\n    \texit(0); return 1;\n    }signed main(){\n    \tscanf(\"%lld%lld%lld\",&n,&x1,&x2);\n    \tfor(int i=1;i<=n;i++) scanf(\"%lld\",&c[i].v),c[i].id=i;\n    \tsort(c+1,c+n+1,cmp); int l=1,r=n;\n    \tcheck(0); swap(x1,x2); check(1);\n    \tputs(\"No\");\n    \treturn 0;\n    }\n```\n\n\u5176\u5b9e\u662f\u6709\u5f88\u591a\u522b\u7684\u65b9\u6cd5\u7684\uff0c\u6bd4\u5982\u50cf\u4ec0\u4e48\u4e8c\u5206\u4e09\u5206\u8fd8\u6709\u76f4\u63a5\u627e\uff0c\u90fd\u6bd4\u8f83\u5de7\u5999\uff0c\u590d\u6742\u5ea6\u89c6\u5b9e\u73b0\u4f18\u52a3\u800c\u5b9a\uff0c\u53ef\u4ee5\u53c2\u8003 [link](https://codeforces.com/contest/967/submission/37721060)\u3002",
        "postTime": 1644421478,
        "uid": 132040,
        "name": "S00021",
        "ccfLevel": 0,
        "title": "CF925B"
    }
]