{
    "description": "Byteasar is a programmer who works on a revolutionary text editor. In the editor there are two types of operations: one type allows to edit text in the editor, and the other type allows to undo previously performed operations. One of the innovative features of this editor is a multilevel undo operation. It works as follows.\n\nWe say that a text editing operation is an operation of level $0$. An undo operation of level $i(for \\ i = 1,2,...)$ undoes the last operation of level at most $i-1$ which is not undone. For instance, an undo operation of level $1$ can undo only editing operations, and an undo operation of level $2$ can undo editing operations as well as undo operations of level $1$ (but no undo operations of greater levels).\n\nMore formally, each of the already performed operations can be in two states: active or undone. Let $X$ be one of the operations. Just after performing the operation $X$, it is in the state active. If $X$ is an undo operation of level $i$, we find the most recent operation in state active of level at most $i-1$ (denote it by $X_1$) and change the state of the operation X1 to undone. If X1 is also an undo operation, we must change to active the state of the operation which $X_1$ had undone (say $X_2$). We continue in the same manner: whenever\nthe state of an undo operation $X_j$ which had previously undone some operation $X_{j+1}$ changes, we must also change the state of the operation $X_{j+1}$(which, of course, may result in changing states of further operations).\n\nThe whole chain of state modifications finishes when an editing operation is reached.\n\nFor simplicity, the current contents of text in the editor will be specified by a single integer s, called the editor state (equal to $0$ at the beginning). Each editing operation specifies the editor state that it produces.\n\nThe editor state depends on the last editing operation in the state active. Help Byteasar and write a program which keeps track of the editor state.\n\nLet us see this in action: the following table shows some operations performed by Byteasar and the editor state after performing each of them. The symbol $E_s$ denotes an editing operation which changes the editor state to $s$, whereas the symbol $U_i$ denotes an undo operation of level $i$.\n\n![0](https://s1.ax1x.com/2018/07/05/PV0kdI.png)\n\nFirst, Byteasar performed three editing operations. The editor state changed from $0$ to $1$, then to $2$, and finally to $5$. Next, he performed two undo operations of level $1$, which undid the operations $E_5$ and $E_2$(changing\ntheir state to undone). Thus the editor state was restored to $1$. The following undo operation of level $3$ undid the last operation $U_1$(changing its state to undone), consequently restoring the operation $E_2$(changing its state\nback to active). As a result the editor state changed once again to $2$. Operation $U_2$ undid the operation $E_4$,operation $U_1$ once again undid the restored operation $E_2$, the last operation $U_1$ undid the operation $E_1$, and the final operation is $E_1$.",
    "inputFormat": "The first line of the input contains a positive integer $n$, specifying the number of operations performed by Byteasar. The next $n$ lines contain descriptions of operations, one per line, each being an integer $a_i(-n \\le a_i \\le n, a_i \u2260 0)$. If $a_i> 0$, then it specifies an editing operation which modifies the editor state to $a_i$. If $a_i< 0$,then it specifies an undo operation of level $-a_i$. You can assume that for every undo operation there will be some operation in the state active of smaller level to undo.",
    "outputFormat": "Your program should output $n$ lines. The $i-th$ line should contain one integer specifying the editor state after performing the first $i$ operations from the input.",
    "samples": [
        [
            "11\n1\n2\n5\n-1\n-1\n-3\n4\n-2\n-1\n-1\n1",
            "1\n2\n5\n2\n1\n2\n4\n2\n1\n0\n1"
        ]
    ],
    "hint": "\u4ee5\u4e0b\u5b50\u4efb\u52a1\u548c\u8bc4\u6d4b\u65e0\u5173\uff0c\u4ec5\u4f9b\u53c2\u8003\u3002\n\n![0](https://s1.ax1x.com/2018/07/05/PV0nSS.png)\n\n\uff08\u4f46\u662f\u6211\u5f00\u4e0d\u4e86 4 \u4e2a Subtask\uff0c\u6240\u4ee5\u5c31\u653e\u5728\u4e00\u8d77\u6d4b\u4e86\uff09"
}