{
    "description": "\u521a\u5f00\u59cb\u4f60\u6709\u4e00\u4e2a\u6570\u5b57 $0$\uff0c\u6bcf\u4e00\u79d2\u949f\u4f60\u4f1a\u968f\u673a\u9009\u62e9\u4e00\u4e2a $[0,2^n-1]$ \u7684\u6570\u5b57\uff0c\u4e0e\u4f60\u624b\u4e0a\u7684\u6570\u5b57\u8fdb\u884c\u6216\uff08C++,C \u7684 `|`\uff0cpascal \u7684 `or`\uff09\u64cd\u4f5c\u3002\u9009\u62e9\u6570\u5b57 $i$ \u7684\u6982\u7387\u662f $p_i$\u3002\u4fdd\u8bc1 $0\\leq p_i \\leq 1$\uff0c$\\sum p_i=1$ \u3002\u95ee\u671f\u671b\u591a\u5c11\u79d2\u540e\uff0c\u4f60\u624b\u4e0a\u7684\u6570\u5b57\u53d8\u6210 $2^n-1$\u3002\n",
    "inputFormat": "\u7b2c\u4e00\u884c\u8f93\u5165 $n$ \u8868\u793a $n$ \u4e2a\u5143\u7d20\uff0c\u7b2c\u4e8c\u884c\u8f93\u5165 $2^n$ \u4e2a\u6570\uff0c\u7b2c $i$ \u4e2a\u6570\u8868\u793a\u9009\u5230 $i-1$ \u7684\u6982\u7387\u3002\n",
    "outputFormat": "\u4ec5\u8f93\u51fa\u4e00\u4e2a\u6570\u8868\u793a\u7b54\u6848\uff0c\u7edd\u5bf9\u8bef\u5dee\u6216\u76f8\u5bf9\u8bef\u5dee\u4e0d\u8d85\u8fc7 $10^{-6}$ \u5373\u53ef\u7b97\u901a\u8fc7\u3002\u5982\u679c\u65e0\u89e3\u5219\u8981\u8f93\u51fa `INF`\u3002",
    "samples": [
        [
            "2\n0.25 0.25 0.25 0.25",
            "2.6666666667"
        ]
    ],
    "hint": "\u5bf9\u4e8e $100\\%$ \u7684\u6570\u636e\uff0c$n\\leq 20$\u3002\n\n\u4ee5\u4e0b\u4e3a spj \u6e90\u4ee3\u7801\u3002\n\n```cpp\n//liuchenrui \n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<string>\n#include<cmath>\n#define AC {fclose(fstd),fclose(fuser);return 0;}\n#define WA {fclose(fstd),fclose(fuser);return 1;}\n#define PE {fclose(fstd),fclose(fuser);return 5;}\n#define eps 1e-6\nint main(int const argc, char*const argv[]){\n    FILE *fstd,*fuser;\n    fstd=fopen(argv[2],\"r\");\n    fuser=fopen(argv[3],\"r\");\n    //fstd=fopen(\"x1.in\",\"r\");\n    //fuser=fopen(\"x2.in\",\"r\");\n    char s[30],t[30];\n    if(fscanf(fuser,\"%s\",s+1)==-1)WA;\n    fscanf(fstd,\"%s\",t+1);\n    if(s[1]=='I' && t[1]=='I')AC;\n    if(s[1]=='I' || t[1]=='I')WA;\n    double p,q;\n    sscanf(s+1,\"%lf\",&p);\n    sscanf(t+1,\"%lf\",&q);\n    if(fabs(p-q)<eps)AC\n    else{\n        if(fabs(p-q)/q<eps)AC;\n        if(fabs(q-p)/q<eps)AC;\n        if(fabs(p-q)/p<eps)AC;\n        if(fabs(q-p)/p<eps)AC;\n    }\n    WA;\n}\n\n```"
}