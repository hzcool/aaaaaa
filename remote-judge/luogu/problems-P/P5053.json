{
    "description": "While surfing online, Slavko came across an ad displaying a system of containers and pipes\n(an example of such system is illustrated in the image below) with the message: \u201cIf container\n**1** starts filling up with water, determine the order in which the containers get filled up.\u201d\n\n![](https://cdn.luogu.com.cn/upload/pic/44318.png)\n\nThe system consists of K containers denoted with numbers from 1 to K, and we can describe\nit using a matrix of characters with N rows and M columns. The containers are **in the shape of a rectangle**\u200b, and the outlines of the containers and pipes are shown with the following\ncharacters:\n\n-  \u2018-\u2019 if it\u2019s a horizontal part of the outline,\n-  \u2018|\u2019 if it\u2019s a vertical part of the outline, and\n-  \u2018+\u2019 if it\u2019s a spot where the horizontal and vertical parts of the outline connect. An exception is where the containers and pipes connect. In that case, the container outline dominates (see sample tests).\n\nIn an arbitrary place within each container, there is a string of digits that represent the label\nof the container, and all the other fields in the matrix are equal to \u2018.\u2019 (dot).\n\nAll containers except the one labeled with 1 have **exactly one** supply pipe that enters the\ncontainer in its **upper side**\u200b. The container labeled with 1 does not have a supply pipe.\n\nThe containers can have multiple (also possible, zero) discharge pipes that leave the\ncontainer out of its **lateral side**\u200b. The places where discharge pipes leave a container will be\nin mutually **distinct rows** in the matrix.\n\nThe pipes directly connect two containers, which means that **it is not possible** to split the\npipes or connect multiple pipes into one, and no two pipes will intersect. On their way,\nlooking from the source to the destination container, the pipes always descend to the\nfollowing row or stay in the same row. In other words, they never go back to the previous\nrow, so the water can flow freely from one container to another.\n\nThe water enters a container until it is full. If the water level reaches the level of the\ndischarge pipe, the water will flow through that pipe until the container the pipe leads into is\nfilled up.\n\nHelp Slavko and determine the order in which the containers will fill up.\n\n**Please note:**\n- The test data is such that each character \u2018+\u2019 is surrounded with **exactly one character** \u2018-\u2019 to the left or the right side and **exactly one** character \u2018|\u2019 to the upper or lower side, and **all other** adjacent characters in directions up, down, left and right will be equal to \u2018.\u2019 (dot).\n- The only places where the pipe in the matrix is in a field adjacent to the container outline are the places where the pipe enters or exits the container. In other words, a pipe will never run right next to a container (except where it connects with the\ncontainer). The entry for the supply pipe is labeled with the character \u2018|\u2019 above a container, whereas the exit of the discharge pipe is labeled with the character \u2018-\u2019 on the lateral side of a container.",
    "inputFormat": "The first line contains two integers N and M (1 \u2264 N, M \u2264 1000), matrix dimensions.\n\nThe following N lines contain M characters describing the container system.",
    "outputFormat": "You must output K lines. The $i^{th}$\nline contains the label of the container that fills up $i^{th}$\n. A\nsolution will always exist and will be unique.",
    "samples": [
        [
            "12 13\n..+--+.......\n+-|..|.......\n|.|.1|--+....\n|.+--+..|....\n|......+----+\n+---+..|..2.|\n....|..+----+\n.+--+........\n.|...........\n+---+........\n|.3.|........\n+---+........",
            "2\n3\n1"
        ],
        [
            "8 10\n..........\n.......+-+\n...+---|1|\n...|...+-+\n...|......\n..+-+.....\n..|2|.....\n..+-+.....\n",
            "2\n1"
        ]
    ],
    "hint": "In test cases worth 70% of total points, it will hold N, M \u2264 100.\n\n**Clarification of the first test case:**\n\nContainer 1 starts filling up with water.\n\nThe water level in container 1 grows, and in one moment reaches the level of the discharge pipe leading to container 2. The water flows through the pipe until container 2 fills up.\n\nAfter that, the water level in container 1 keeps growing until it reaches the level of the discharge pipe leading to container 3, which fills up next.\n\nFinally, the water level in container 1 keeps growing and the container fills up.",
    "translation": "\u5728\u4e0a\u7f51\u7684\u65f6\u5019\uff0cSlavko\u9047\u5230\u4e86\u4e00\u4e2a\u5e7f\u544a\uff0c\u8fd9\u4e2a\u5e7f\u544a\u4e0a\u9762\u6709\u4e00\u4e2a\u7531\u5bb9\u5668\u548c\u7ba1\u9053\u7ec4\u6210\u7684\u7cfb\u7edf\uff08\u5982\u56fe\u662f\u4e00\u4e2a\u7cfb\u7edf\u7684\u4f8b\u5b50\uff09\u548c\u4e00\u884c\u5b57\uff1a\u201c\u5982\u679c\u5f80\u7f16\u53f7\u4e3a1\u7684\u5bb9\u5668\u91cc\u6ce8\u6c34\uff0c\u8bf7\u786e\u5b9a\u8fd9\u4e9b\u5bb9\u5668\u88ab\u6ce8\u6ee1\u6c34\u7684\u987a\u5e8f\u3002\u201d\n\u8fd9\u4e2a\u7cfb\u7edf\u5305\u542bK\u4e2a\u7f16\u53f7\u4e3a1\u5230K\u7684\u5bb9\u5668\uff0c\u5e76\u4e14\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2aN\u00d7M\u7684\u77e9\u9635\u6765\u63cf\u8ff0\u5b83\u3002**\u8fd9\u4e9b\u5bb9\u5668\u7684\u5f62\u72b6\u4e3a\u957f\u65b9\u5f62**\u3002\u5bb9\u5668\u548c\u7ba1\u9053\u7684\u8f6e\u5ed3\u5c06\u7528\u8fd9\u4e9b\u5b57\u7b26\u8868\u793a\uff1a\n- \u5982\u679c\u5b57\u7b26\u4e3a\u2018-\u2019\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4f4d\u7f6e\u662f\u5bb9\u5668\u548c\u7ba1\u9053\u7684\u8f6e\u5ed3\u7684\u6c34\u5e73\u90e8\u5206\u3002\n- \u5982\u679c\u5b57\u7b26\u4e3a\u2018|\u2019\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4f4d\u7f6e\u662f\u5bb9\u5668\u548c\u7ba1\u9053\u7684\u8f6e\u5ed3\u7684\u5782\u76f4\u90e8\u5206\u3002\n- \u5982\u679c\u5b57\u7b26\u4e3a\u2018+\u2019\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4f4d\u7f6e\u540c\u65f6\u662f\u5bb9\u5668\u548c\u7ba1\u9053\u7684\u8f6e\u5ed3\u7684\u6c34\u5e73\u548c\u5782\u76f4\u90e8\u5206\u3002\uff08\u5373\u5bb9\u5668\u7684\u56db\u4e2a\u89d2\uff0c\u7ba1\u9053\u7684\u62d0\u5f2f\u90e8\u5206\uff09\uff0c\u4e00\u4e2a\u4f8b\u5916\u662f\u5bb9\u5668\u4e0e\u7ba1\u9053\u7684\u76f8\u4ea4\u90e8\u5206\uff0c\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u4e0d\u4f7f\u7528+\u3002\n\u5728\u6bcf\u4e00\u4e2a\u5bb9\u5668\u5185\u7684\u67d0\u4e2a\u4f4d\u7f6e\u5185\uff0c\u90fd\u5b58\u5728\u4e00\u4e2a\u8868\u793a\u8fd9\u4e2a\u5bb9\u5668\u7f16\u53f7\u7684\u6570\u5b57\u4e32\u3002\u77e9\u9635\u5185\u65e2\u4e0d\u662f\u5bb9\u5668\u548c\u7ba1\u9053\u7684\u8f6e\u5ed3\uff0c\u53c8\u4e0d\u662f\u8868\u793a\u5bb9\u5668\u7f16\u53f7\u7684\u6570\u5b57\u4e32\u7684\u4f4d\u7f6e\u4e0a\u7684\u5b57\u7b26\u4e3a'.'\u3002\n\u9664\u4e86\u7f16\u53f7\u4e3a1\u7684\u5bb9\u5668\u4ee5\u5916\uff0c\u6240\u6709\u7684\u5bb9\u5668\u7684**\u9876\u90e8\u90fd\u63a5\u5165\u4e14\u53ea\u63a5\u5165\u4e86\u4e00\u6761\u53ef\u4ee5\u4f7f\u6c34\u8fdb\u5165\u5bb9\u5668\u7684**\u7ba1\u9053\u3002\u7f16\u53f7\u4e3a1\u7684\u5bb9\u5668\u7684\u9876\u90e8\u6ca1\u6709\u7ba1\u9053\u3002\n\u6bcf\u4e2a\u5bb9\u5668\u7684**\u4fa7\u9762**\u53ef\u4ee5\u63a5\u5165\u591a\u6761\uff08\u4e5f\u53ef\u4ee5\u6ca1\u6709\uff09\u53ef\u4ee5\u4f7f\u6c34\u6d41\u51fa\u5bb9\u5668\u7684\u7ba1\u9053\u3002**\u6ca1\u6709\u4e24\u4e2a\u53ef\u4ee5\u4f7f\u6c34\u6d41\u51fa\u5bb9\u5668\u7684\u7ba1\u9053\u4e0e\u5bb9\u5668\u7684\u8fde\u63a5\u5904\u5728\u540c\u4e00\u4e2a\u9ad8\u5ea6\u3002**\n\u7ba1\u9053\u5fc5\u987b\u6709\u65b9\u5411\u7684\u8fde\u63a5\u4e24\u4e2a\u5bb9\u5668\uff0c\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\u4e00\u6761\u7ba1\u9053**\u4e0d\u80fd**\u5728\u67d0\u4e9b\u5730\u65b9\u5206\u6210\u4e24\u6761\u7ba1\u9053\uff0c\u6216\u662f\u4e24\u6761\u7ba1\u9053\u4ea4\u6c47\u6210\u4e00\u6761\u7ba1\u9053\uff0c\u5e76\u4e14\u6ca1\u6709\u4e24\u6761\u7ba1\u9053\u4f1a\u76f8\u4ea4\u3002\u5e76\u4e14\u7ba1\u9053\u6c38\u8fdc\u4e0d\u4f1a\u5411\u4e0a\u62d0\u5f2f\uff0c\u6240\u4ee5\u53ef\u4ee5\u4fdd\u8bc1\u7ba1\u9053\u91cc\u7684\u6c34\u53ef\u4ee5\u6b63\u5e38\u7684\u5411\u4e0b\u6d41\u52a8\u5e76\u4e14\u6d41\u5165\u5bf9\u5e94\u63a5\u5165\u7684\u5bb9\u5668\u91cc\u3002\n\u6c34\u53ea\u80fd\u8fdb\u5165\u6ca1\u6709\u88ab\u88c5\u6ee1\u6c34\u7684\u5bb9\u5668\u3002\u5982\u679c\u4e00\u4e2a\u5bb9\u5668\u4e2d\u7684\u6c34\u4f4d\u8fbe\u5230\u4e86\u53ef\u4ee5\u4f7f\u6c34\u6d41\u51fa\u7684\u7ba1\u9053\u7684\u9ad8\u5ea6\uff0c\u6c34\u5c06\u4f1a\u6d41\u5165\u8fd9\u4e2a\u7ba1\u9053\u7684\u53e6\u4e00\u7aef\u6240\u63a5\u5165\u7684\u5bb9\u5668\u91cc\uff0c\u76f4\u5230\u90a3\u4e2a\u5bb9\u5668\u6ee1\u4e86\u4e3a\u6b62\u3002\n\u8bf7\u5e2e\u52a9Slavko\u786e\u5b9a\u8fd9\u4e9b\u5bb9\u5668\u88ab\u6ce8\u6ee1\u6c34\u7684\u987a\u5e8f\u3002\n**\u8bf7\u6ce8\u610f\uff1a**\n- \u5728\u77e9\u9635\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u5b57\u7b26'+'\u90fd**\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a**'-'\u5b57\u7b26\u5728\u5176\u5de6\u8fb9\u6216\u53f3\u8fb9\u4e0e\u5176\u76f8\u90bb\uff0c\u5e76\u4e14**\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a**'|'\u5b57\u7b26\u5728\u5176\u4e0a\u8fb9\u6216\u4e0b\u8fb9\u4e0e\u5176\u76f8\u90bb\u3002\u5176\u4f59\u7684\u4e0e\u5176\u76f8\u90bb\u7684\u5b57\u7b26\u5c06\u5747\u4e3a'.'\u3002\n- \u5728\u5b57\u7b26\u77e9\u9635\u4e2d\uff0c\u7ba1\u9053\u4e0e\u5bb9\u5668\u8f6e\u5ed3\u76f8\u90bb\u7684\u552f\u4e00\u53ef\u80fd\u7684\u4f4d\u7f6e\u662f\u7ba1\u9053\u4e0e\u5bb9\u5668\u8fde\u63a5\u7684\u4f4d\u7f6e\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u9664\u4e86\u7ba1\u9053\u4e0e\u5bb9\u5668\u8fde\u63a5\u7684\u60c5\u51b5\uff0c\u7ba1\u9053\u4e0d\u53ef\u80fd\u4e0e\u5bb9\u5668\u76f8\u90bb\u3002\u5728\u4e0e\u5bb9\u5668\u8fde\u63a5\u7684\u4f4d\u7f6e\uff0c\u7ba1\u9053\u4f7f\u6c34\u6d41\u5165\u5bb9\u5668\u7684\u4e00\u7aef\u7528'|'\u6807\u8bc6\uff0c\u4f7f\u6c34\u6d41\u51fa\u5bb9\u5668\u7684\u4e00\u7aef\u7528'-'\u6807\u8bc6\u3002\n\n\u8f93\u5165\u683c\u5f0f\n\n\u7b2c\u4e00\u884c\uff0c\u4e24\u4e2a\u6574\u6570N,M(1\u2264N,M\u22641000)\uff0c\u8868\u793a\u77e9\u9635\u7684\u5927\u5c0f\u3002\n\u63a5\u4e0b\u6765\u7684N\u884c\uff0c\u6bcf\u884cM\u4e2a\u5b57\u7b26\uff0c\u63cf\u8ff0\u4e86\u5982\u9898\u76ee\u6240\u8ff0\u7684\u5bb9\u5668\u7cfb\u7edf\u3002\n\n\u8f93\u51fa\u683c\u5f0f\n\n\u4f60\u5fc5\u987b\u8f93\u51faK\u884c\u3002\u7b2ci\u884c\u8868\u793a\u7b2ci\u4e2a\u88ab\u6ce8\u6ee1\u6c34\u7684\u5bb9\u5668\u7684\u7f16\u53f7\u3002\u8f93\u5165\u4fdd\u8bc1\u5b58\u5728\u552f\u4e00\u89e3\u3002\n\n\u8bf4\u660e\n\n\u5bf9\u4e8e$70%$\u7684\u6570\u636e\uff0c\u6ee1\u8db3N,M\u2264100\u3002\n\u6837\u4f8b1\u7684\u89e3\u91ca\uff1a\n\u5f00\u59cb\u5411\u5bb9\u56681\u6ce8\u6c34\u3002\n\u5bb9\u56681\u4e2d\u7684\u6c34\u4f4d\u5347\u9ad8\uff0c\u5e76\u4e14\u5728\u67d0\u4e2a\u65f6\u523b\u8fbe\u5230\u901a\u5411\u5bb9\u56682\u7684\u7ba1\u9053\u7684\u9ad8\u5ea6\u3002\u6c34\u6d41\u8fdb\u7ba1\u9053\u5e76\u6700\u7ec8\u6d41\u5411\u5bb9\u56682\uff0c\u76f4\u5230\u5bb9\u56682\u88c5\u6ee1\u6c34\u4e3a\u6b62\u3002\n\u6b64\u540e\uff0c\u5bb9\u56681\u4e2d\u7684\u6c34\u4f4d\u7ee7\u7eed\u5347\u9ad8\uff0c\u76f4\u5230\u8fbe\u5230\u901a\u5411\u5bb9\u56683\u7684\u7ba1\u9053\u7684\u9ad8\u5ea6\uff0c\u6c34\u6d41\u8fdb\u7ba1\u9053\u5e76\u6700\u7ec8\u6d41\u5411\u5bb9\u56683\uff0c\u76f4\u5230\u5bb9\u56683\u88c5\u6ee1\u6c34\u4e3a\u6b62\u3002\n\u6700\u540e\uff0c\u5bb9\u56681\u4e2d\u7684\u6c34\u4f4d\u6301\u7eed\u5347\u9ad8\uff0c\u76f4\u5230\u5bb9\u56681\u88c5\u6ee1\u6c34\u3002"
}