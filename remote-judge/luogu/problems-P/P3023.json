{
    "description": "The cows are playing with wires! They have learned a technique called soldering, in which they connect two pieces of wire together by attaching the endpoint of one wire to a location along the length of the other. (Soldering endpoint to endpoint is not allowed.) There can be multiple solder junctions at the same point.\n\nThe cows have a plan for an Amazing Structure they would like to build. It is in the form of a graph with N (1 <= N <= 50,000) nodes and N-1 edges of unit length so that each pair of nodes is connected. Each edge is described by a pair of integers, A and B (1 <= A <= N; 1 <= B <= N; A != B).\n\nThe cows are able to buy wire from a local store; however longer wire is more expensive. In particular the cows can buy a wire of length L with cost L\\*L, but they cannot cut wires or join wires together.\n\nGiven the plan, the cows would like solder wires together to build their Amazing Structure. Please help them find the minimum possible cost!\n\nTest data worth at least 50% of the points will have N <= 2,000.\n\nPartial feedback will be provided on your first 50 submissions to this problem.\n\nTIME LIMIT: 2 seconds\n\nMEMORY LIMIT: 64 MB\n\n\u5976\u725b\u51b3\u5b9a\u7528\u7535\u7ebf\u710a\u63a5\u51fa\u4e00\u4e2a\u7279\u6b8a\u56fe\u5f62\uff0c\u8fd9\u4e2a\u56fe\u5f62\u662f\u8fde\u901a\u7684\uff0c\u7531N\u4e2a\u70b9\uff0cN -1\u6761\u8fb9\u7ec4\u6210\uff0c \u6bcf\u6761\u8fb9\u7684\u957f\u5ea6\u90fd\u662f1\u3002\u710a\u63a5\u6240\u7528\u7684\u7535\u7ebf\u8981\u4ece\u5f53\u5730\u7684\u5546\u5e97\u91cc\u4e70\u3002\u8d8a\u957f\u7684\u7535\u7ebf\u8d8a\u8d35\uff0c\u4e00\u6761\u957f\u5ea6\u4e3a L\u7684\u7535\u7ebf\u552e\u4ef7\u4e3aL^2 \u3002 \u5976\u725b\u4eec\u5df2\u7ecf\u5b66\u4f1a\u4e86\u57fa\u672c\u7684\u710a\u63a5\u65b9\u6cd5\uff0c \u5979\u4eec\u4f1a\u628a\u67d0\u6761\u7535\u7ebf\u7684\u4e00\u4e2a\u7aef\u70b9\u710a\u63a5\u5230\u53e6\u4e00\u6761\u7535\u7ebf\u7684 \u4e2d\u95f4\u67d0\u4e2a\u4f4d\u7f6e\uff0c \u4f46\u5979\u4eec\u6ca1\u6709\u5b66\u4f1a\u5982\u4f55\u628a\u4e24\u6761\u7535\u7ebf\u7684\u7aef\u70b9\u76f4\u63a5\u710a\u63a5\u8d77\u6765\uff0c \u4e5f\u6ca1\u6709\u5b66\u4f1a\u600e\u4e48\u628a\u7535 \u7ebf\u526a\u65ad\u3002 \u544a\u8bc9\u4f60\u5976\u725b\u51c6\u5907\u710a\u63a5\u7684\u56fe\u5f62\uff0c\u8bf7\u544a\u8bc9\u5976\u725b\u600e\u4e48\u710a\u63a5\u624d\u80fd\u6700\u8282\u7ea6\u6750\u6599\u8d39\u7528\u3002\n",
    "inputFormat": "\\* Line 1: A single integer: N\n\n\\* Lines 2..N: Two space-separated integers describing an edge: A and B\n",
    "outputFormat": "\\* Line 1: A single integer, the cost of soldering the tree together. Note that this number may not always fit in a 32-bit integer.\n",
    "samples": [
        [
            "6 \n1 2 \n1 3 \n1 4 \n1 5 \n1 6 \n",
            "7 \n"
        ]
    ],
    "hint": "Since all nodes in the structure are connected to node 1, we only need to buy one wire of length 2 and three of length 1, for a total cost of 2 \\* 2 + 1 \\* 1 + 1 \\* 1 + 1 \\* 1 = 7.\n"
}