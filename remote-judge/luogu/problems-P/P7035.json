{
    "description": "\n\nEugene is reading a boring book. To make this process interesting he is drawing a picture at the  same\u00a0time.  He has a piece of graph paper that is divided into square cells. All the cells are empty at  the\u00a0beginning. \n\nEugene starts by painting over one cell. Then he opens the book at a random page and starts reading.  \u00a0Whenever  he sees the letter  `u`  in the text, he moves his pen one cell up and then paints over the  cell\u00a0under  his pen. Whenever he sees the letter  `d`,  he does the same but moves his pen one cell down  instead\u00a0of  up. For letters  `l`  and  `r`  he moves to the left and to the right, respectively. If he wants to paint  a\u00a0cell  that was already painted, he paints it again.\n\nYou have found a piece of paper and the text of the book. Now you want to understand if the picture  o_n\u00a0the  paper could be drawn by Eugene at some point of his book reading. Remember that Eugene  could\u00a0use  some substring of the text.\n\n",
    "inputFormat": "\n\nThe first line of the input contains an integer $l$ -- the length of the text $(1 \\le l \\le 100 000)$ . The $second\u00a0line$ contains a string of length $l$ -- the text. It contains only lowercase English letters, spaces, commas\u00a0and periods. The text neither begins nor ends with a space.\n\nThe third line contains two positive integers $n$ and $m$ -- the picture dimensions $(2 \\le n \\times m \\le 100 000)$ .\n\nEach of the following $n$ lines contains a string of length $m$ . Painted cells are denoted by `X`, while empty\u00a0cells -- by `.` . It is guaranteed that there are at least two painted cells in the picture.\n\nThe first of these $n$ lines corresponds to the top of the picture and the last one corresponds to the bottom\u00a0of it.\n\n",
    "outputFormat": "\n\nIf the picture could be painted by Eugene, output `YES` on the first line. On the second line print two\u00a0integers b and $e$ such that if Eugene read all letters from $b$ to $e$ , inclusive, he would draw exactly $the\u00a0same$ picture as described in the input $(1 \\le b \\le e \\le l)$ . If there are several solutions, output any of them.\n\nIf the picture couldn't be drawn by Eugene, output `NO`.\n\n",
    "samples": [
        [
            "43\nyou should read statement really carefully.\n3 6\n...XX.\n..XXX.\n...XXX\n",
            "YES\n3 42\n"
        ],
        [
            "43\nyou should read statement really carefully.\n3 2\nXX\nXX\nXX\n",
            "NO\n"
        ]
    ],
    "hint": "Time limit: 2 s, Memory limit: 256 MB. \n",
    "translation": "## \u9898\u76ee\u63cf\u8ff0\n\nEugene\u6b63\u5728\u8bfb\u4e00\u672c\u65e0\u804a\u7684\u4e66\u3002\u4e3a\u4e86\u4f7f\u9605\u8bfb\u66f4\u6709\u8da3\uff0c\u4ed6\u5728\u9605\u8bfb\u7684\u540c\u65f6\u540c\u65f6\u4f5c\u753b\u3002 \u4ed6\u6709\u4e00\u5f20\u65b9\u683c\u7eb8\u3002 \u6240\u6709\u7684\u65b9\u683c\u4e00\u5f00\u59cb\u90fd\u662f\u7a7a\u7684\u3002\n\nEugene\u4e00\u5f00\u59cb\u5728\u4e00\u4e2a\u65b9\u683c\u4e0a\u4f5c\u753b\u3002\u8ba9\u540e\u4ed6\u968f\u673a\u7ffb\u5f00\u4e00\u9875\u5e76\u5f00\u59cb\u9605\u8bfb\u3002\u5f53\u4ed6\u9047\u5230\u5b57\u6bcd `u`  \u65f6, \u4ed6\u628a\u7b14\u5411\u4e0a\u79fb\u52a8\u4e00\u683c\u5e76\u5728\u8fd9\u683c\u4e0a\u753b\u753b\u3002 \u5f53\u4ed6\u770b\u5230 `d`\u65f6, \u4ed6\u4f1a\u505a\u540c\u6837\u7684\u64cd\u4f5c\uff0c\u4f46\u662f\u5411\u4e0b\u79fb\u52a8\u4e00\u683c\u800c\u4e0d\u662f\u5411\u4e0a\u79fb\u52a8\u4e00\u683c\u3002 `l` ,`r`\u5206\u522b\u662f\u5411\u5de6\u548c\u5411\u53f3\u4e00\u683c\u3002 \u5982\u679c\u8fd9\u4e2a\u5355\u5143\u683c\u5df2\u7ecf\u753b\u8fc7\u4e86\u4ed6\u4f1a\u518d\u753b\u4e00\u6b21\u3002\n\n\u73b0\u5728\u4f60\u6709\u4e00\u5f20\u7eb8\u4e0e\u8fd9\u672c\u4e66\u4e2d\u7684\u5185\u5bb9\u3002 \u73b0\u5728\u4f60\u60f3\u77e5\u9053\u8fd9\u5f20\u7eb8\u4e0a\u7684\u56fe\u7247\u662f\u5426\u53ef\u80fd\u88abEugene\u5728\u67d0\u4e00\u65f6\u523b\u753b\u8fc7\u3002 \u8bb0\u4f4f\uff1aEugene\u53ef\u4ee5\u53ea\u4f7f\u7528\u7528\u8fd9\u4e2a\u5185\u5bb9\u7684\u5b50\u5b57\u7b26\u4e32\u3002\n\n## \u8f93\u5165\u683c\u5f0f\n\n\u7b2c\u4e00\u884c\u662f\u4e00\u4e2a\u6574\u6570$l(1 \\le l \\le 10^5)$--\u8868\u793a\u8fd9\u4e2a\u5185\u5bb9\u7684\u957f\u5ea6\u3002 \n\n\u7b2c\u4e8c\u884c\u662f\u4e00\u4e2a\u957f\u5ea6\u4e3a$l$\u7684\u5b57\u7b26\u4e32$a$\u3002\u5b83\u53ea\u5305\u542b\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u3001\u7a7a\u683c\u3001\u9017\u53f7\u548c\u53e5\u53f7\u3002$a$\u65e2\u4e0d\u4f1a\u4ee5\u7a7a\u683c\u5f00\u5934\u4e5f\u4e0d\u4f1a\u4ee5\u7a7a\u683c\u7ed3\u5c3e\u3002\n\n\u7b2c\u4e09\u884c\u662f\u4e24\u4e2a\u6574\u6570$n$ \u4e0e $m$--\u56fe\u7684\u5927\u5c0f$(2 \\le n \\times m \\le 10^5)$ \u3002\n\n\u7b2c$4$~$3+n$\u884c\uff0c\u6bcf\u884c\u4e00\u4e2a\u957f\u5ea6\u4e3a$m$\u7684\u5b57\u7b26\u4e32\u3002\u753b\u8fc7\u7684\u683c\u5b50\u7528`x`\u8868\u793a\uff0c\u6ca1\u753b\u8fc7\u7684\u7528`.`\u8868\u793a\u3002\u4fdd\u8bc1\u4e00\u5e45\u56fe\u4e2d\u81f3\u5c11\u6709\u4e24\u4e2a\u683c\u5b50\u5df2\u88ab\u6d82\u8272\u3002\n\n\u8fd9 $n$ \u884c\u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u884c\u5bf9\u5e94\u4e8e\u56fe\u7247\u7684\u9876\u90e8\uff0c\u6700\u540e\u4e00\u884c\u5bf9\u5e94\u4e8e\u56fe\u7247\u7684\u5e95\u90e8\u3002\n\n## \u8f93\u51fa\u683c\u5f0f\n\n\u5982\u679c\u53ef\u80fd\u88ab\u7ed8\u5236\uff0c\u7b2c\u4e00\u884c\u8f93\u51fa`YES`\uff0c\u7b2c\u4e8c\u884c\u8f93\u51fa\u7528\u7a7a\u683c\u9694\u5f00\u7684\u4e24\u4e2a\u6574\u6570$b$\u548c$e$,\u8868\u793aEugene\u4ece\u7b2c$b$\u4e2a\u5b57\u6bcd\u5f00\u59cb\u8bfb\uff0c\u5230\u7b2c$e$\u4e2a\u5b57\u6bcd\u7ed3\u675f(\u5305\u542b$b$\u548c$e$)\u3002\n\n\u5982\u679c\u4e0d\u80fd\uff0c\u8f93\u51fa`NO`\u3002\n\n## \u6837\u4f8b #1\n\n### \u6837\u4f8b\u8f93\u5165 #1\n\n```\n43\nyou should read statement really carefully.\n3 6\n...XX.\n..XXX.\n...XXX\n```\n\n### \u6837\u4f8b\u8f93\u51fa #1\n\n```\nYES\n3 42\n```\n\n## \u6837\u4f8b #2\n\n### \u6837\u4f8b\u8f93\u5165 #2\n\n```\n43\nyou should read statement really carefully.\n3 2\nXX\nXX\nXX\n```\n\n### \u6837\u4f8b\u8f93\u51fa #2\n\n```\nNO\n```\n\n## \u8bf4\u660e/\u63d0\u793a\n\n\u65f6\u9650: 2 s, \u5185\u5b58\u9650\u5236: 256 MB."
}