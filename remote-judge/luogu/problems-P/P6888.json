{
    "description": "Finding your destination in a big unknown city can be challenging, especially if you are a computer scientist like \nKirk, always trying to use the shortest possible path. Planning can help \u2013 given the map of the city Kirk wants to \nfind the shortest path between his current position and his destination. \n\nThe map of the city can be represented in the plane as an infinite grid composed of unit squares. \n\nKirk is currently located at the square (0, 0) and his destination is the square (X, Y). \n\nThere are N buildings in the city. Each building is a rectangle fully occupying a number of unit squares. **No two \nbuildings touch or overlap**, i.e. Kirk can walk freely around every building. A building is defined by specifying \nthe coordinates of two diagonally opposite squares occupied by the building. \n\nIn each step, Kirk can walk to one of the four neighboring squares, but he is not allowed to step onto a square \noccupied by a building. His current position is at the west entrance to the city and the x coordinate of every \nsquare occupied by a building is **strictly greater than zero**. \n\nWrite a program that, given the locations of the buildings, finds **one shortest possible path** from Kirk's current \nposition to his destination. A path should be reported as a sequence of vertical and horizontal segments, with no \ntwo consecutive segments parallel. The length of a path is the number of squares contained in the path, \nexcluding the initial square.",
    "inputFormat": "The first line of input contains two integers X, Y (1 \u2264 X \u2264 106, -106 \u2264 Y \u2264 106) \u2013 the coordinates of the \ndestination square. The second line of input contains a single integer N (0 \u2264 N \u2264 100 000) \u2013 the number of \nbuildings in the city. Each of the following N lines contains four integers X1, Y1, X2, Y2 (1 \u2264 X1, X2 \u2264 106, \n-106 \u2264 Y1, Y2 \u2264 106) \u2013 the coordinates of two diagonally opposite squares occupied by the building.",
    "outputFormat": "The first line of output should contain an integer L \u2013 the length of the shortest path to the destination. \nThe second line of output should contain an integer M \u2013 the number of segments in the shortest path. The \nnumber of segments M must not exceed 1,000,000. \n\nEach of the following M lines should contain two integers, DX and DY, describing Kirk's relative movement in \none segment. For each segment, **exactly one** of the values DX, DY should be zero, and no two consecutive \nsegments should be parallel. \n\nNote: if there are multiple solutions, you should output any one of them.",
    "samples": [
        [
            "9 1 \n2 \n5 -3 8 3 \n10 -3 13 3",
            "16"
        ],
        [
            "12 0 \n5 \n2 -1 3 1 \n6 -7 8 -1 \n6 1 8 6 \n4 3 4 5 \n10 -5 10 3",
            "24"
        ],
        [
            "42 33\n66\n35 37 37 37\n13 -41 13 6\n40 -2 42 -1\n27 -2 28 -2\n15 -4 16 2\n29 16 29 16\n38 -34 38 -11\n22 -5 22 -5\n34 27 34 35\n28 12 29 12\n10 11 11 13\n11 25 11 25\n24 4 25 40\n27 9 27 10\n27 -4 27 -4\n29 7 29 10\n3 -13 5 -13\n16 17 16 17\n18 6 18 48\n4 7 4 14\n5 2 5 5\n40 22 44 32\n21 13 21 13\n34 3 34 25\n41 11 42 20\n15 -15 16 -9\n24 -46 25 -6\n5 -4 5 -3\n10 17 11 17\n28 14 29 14\n3 -15 4 -15\n10 15 10 15\n16 8 16 9\n2 2 2 2\n1 -4 3 -3\n10 21 10 21\n22 8 22 8\n20 -3 21 2\n10 19 11 19\n7 -47 8 3\n28 -11 28 -6\n20 4 20 9\n11 23 11 23\n15 -17 16 -17\n27 0 27 3\n43 5 43 8\n15 -7 16 -6\n16 -19 16 -19\n11 -10 11 -10\n21 11 22 11\n4 0 4 0\n15 5 16 6\n3 -11 5 -7\n11 -8 11 -1\n28 -13 28 -13\n21 15 22 15\n40 -30 43 -5\n41 34 43 35\n15 14 16 15\n21 -16 22 -13\n1 -1 2 -1\n10 1 11 9\n22 17 22 17\n31 -50 32 -1\n22 -8 22 -7\n16 -21 16 -21",
            "89"
        ]
    ],
    "hint": "![](https://cdn.luogu.com.cn/upload/image_hosting/tyf2lbht.png)\n![](https://cdn.luogu.com.cn/upload/image_hosting/ddujl7ea.png)\n\n**Note**: each of the figures depicts the respective input, along with the supplied solution.\n\n**\u6ce8\u610f\uff1a\u539f\u9898\u8fd8\u8981\u6c42\u8f93\u51fa\u65b9\u6848\uff0c\u672c\u9898\u7565\u53bb\u3002**",
    "translation": "\u5728\u4e00\u4e2a\u964c\u751f\u7684\u57ce\u5e02\u4e2d\u5bfb\u627e\u76ee\u7684\u5730\u786e\u5b9e\u662f\u4e00\u9879\u9887\u5177\u6311\u6218\u6027\u7684\u4efb\u52a1\uff0c\u7279\u522b\u662f\u5bf9\u4e8e\u50cf Kirk \u8fd9\u6837\u7684\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\u800c\u8a00\u2014\u2014\u4ed6\u603b\u662f\u8bd5\u56fe\u53bb\u5bfb\u627e\u4e00\u6761\u53ef\u80fd\u7684\u6700\u77ed\u8def\u5f84\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e8b\u5148\u505a\u597d\u89c4\u5212\u662f\u6709\u5e2e\u52a9\u7684\u3002Kirk \u5e0c\u671b\u501f\u52a9\u8fd9\u4e2a\u57ce\u5e02\u7684\u5730\u56fe\u627e\u51fa\u4ed6\u5f53\u524d\u6240\u5728\u4f4d\u7f6e\u4e0e\u76ee\u6807\u4f4d\u7f6e\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u5f84\u3002\n\n\u7528\u4e00\u4e2a\u5e73\u9762\u6765\u8868\u793a\u57ce\u5e02\u5730\u56fe\uff0c\u5b83\u7531\u5f88\u591a\u4e2a\u5355\u4f4d\u8fb9\u957f\u7684\u6b63\u65b9\u5f62\u7f51\u683c\u7ec4\u6210\u3002  \nKirk\u5f53\u524d\u6240\u5904\u4f4d\u7f6e\u4e3a\u65b9\u683c $(0,0)$\uff0c\u800c\u4ed6\u7684\u76ee\u6807\u662f\u65b9\u683c $(X,Y)$\u3002\n\n\u57ce\u5e02\u4e2d\u6709 $N$ \u4e2a\u5efa\u7b51\uff0c\u800c\u4e14\u6bcf\u4e2a\u5efa\u7b51\u662f\u4e00\u4e2a\u5b8c\u5168\u8986\u76d6\u4e86\u82e5\u5e72\u4e2a\u65b9\u683c\u7684\u957f\u65b9\u5f62\u3002\u6ce8\u610f\uff0c\u4efb\u610f\u4e24\u4e2a\u5efa\u7b51\u4e4b\u95f4\u5f7c\u6b64\u5747\u4e92\u4e0d\u91cd\u53e0\u6216\u4e92\u4e0d\u76f8\u4ea4\uff0cKirk \u53ef\u4ee5\u968f\u610f\u5730\u56f4\u7ed5\u4efb\u4e00\u4e2a\u5efa\u7b51\u8d70\u4e0a\u4e00\u5708\u3002\u5efa\u7b51\u7528\u4e00\u5bf9\u5750\u6807\u6765\u8868\u793a\uff0c\u5b83\u4eec\u662f\u957f\u65b9\u5f62\u5bf9\u89d2\u7ebf\u7684\u4e24\u4e2a\u7aef\u70b9\u3002\n\n\u5728\u6bcf\u4e00\u6b65\u4e2d\uff0cKirk \u53ef\u4ee5\u671d\u7740\u56db\u4e2a\u65b9\u5411\u7684\u4efb\u610f\u4e00\u4e2a\u65b9\u5411\u524d\u8fdb\uff0c\u4f46\u662f\u4ed6\u4e0d\u80fd\u8fdb\u5165\u88ab\u5efa\u7b51\u5360\u636e\u7684\u65b9\u683c\u3002\u4ed6\u73b0\u5728\u7684\u4f4d\u7f6e\u662f\u57ce\u5e02\u897f\u8fb9\u7684\u5165\u53e3\uff0c\u800c\u6bcf\u4e2a\u5efa\u7b51\u6240\u5360\u636e\u7684\u65b9\u683c\u7684 $x$ \u5750\u6807\u5747\u5927\u4e8e $0$\u3002\n\n\u8bd5\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5f53\u7ed9\u51fa\u6240\u6709\u5efa\u7b51\u4f4d\u7f6e\u65f6\uff0c\u627e\u51fa\u4e00\u4e2a\u4ece Kirk \u5f53\u524d\u4f4d\u7f6e\u5230\u76ee\u6807\u4f4d\u7f6e\u7684\u53ef\u80fd\u7684\u6700\u77ed\u8def\u5f84\u3002\u4e00\u6761\u8def\u5f84\u5e94\u8be5\u7531\u4e00\u7cfb\u5217\u6c34\u5e73\u548c\u7ad6\u76f4\u7684\u7ebf\u6bb5\u6784\u6210\uff0c\u4efb\u610f\u4e24\u4e2a\u76f8\u90bb\u7ebf\u6bb5\u90fd\u4e0d\u5e94\u8be5\u5e73\u884c\u3002\u8def\u5f84\u7684\u957f\u5ea6\u662f\u8def\u5f84\u5360\u636e\u7684\u65b9\u683c\u6570\uff0c\u521d\u59cb\u7684\u90a3\u4e2a\u65b9\u683c\u9664\u5916\u3002"
}