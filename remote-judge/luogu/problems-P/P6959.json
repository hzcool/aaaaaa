{
    "description": "Heidi is analyzing a peculiar device. This device takes an a as input and computes $a^d(mod n)$ using thefollowing pseudocode and some integers $d$ and $n$ stored in this device:\n\n ```\nmodPow(a, d, n) {\n  r = 1;\n  for (i = 0; i < 60; ++i) {\n    if ((d & (1 << i)) != 0) {\n      r = r * a % n;\n    }\n  a = a * a % n;\n  }\n}\n```\n\nNote that the pseudocode assumes arbitrary sized integers, $<<$ denotes bitwise shift left, $&$ denotes bitwise\n\nand, and % denotes modulo.\n\nThe device does not tell Heidi the result of the computation. However, Heidi can measure how long does the computation take. She knows that only multiplication modulo $n$ (lines $5$ and $7$ in the above pseudocode) takes any measurable amount of time, all other lines can be assumed to take $0$ nanoseconds.\n\nMoreover, she knows that it takes $(bits(x) + 1) \u00b7 (bits(y) + 1)$ nanoseconds to multiply $x$ by $y$ modulo $n$ , where $bits(x)$ is the number of bits in the binary representation of $x$ without leading zeros, or more formally $\\text{bits(x)} = \u2308\\log_2 (x + 1)\u2309.\n\nHeidi knows the integer $n$ but does not know the integer $d$ . She wants to find $d$ by feeding the device different integers a as input and measuring the time the computation takes for each a .\n\nShe knows that $n$ and $d$ were chosen in the following way: first, two prime numbers $p$ and $q$ with $30$ bits in binary representation (in other words, between $229$ and $230 \u22121)$ were picked independently and uniformly at random. Then the number $n$ was computed as $n = p \u00b7 q$ . Then the number $m = \u03c6(n) = (p\u22121)\u00b7(q \u22121)$\n\nwas computed. Then $d$ was picked uniformly at random between $1$ and $m \u2212 1$ inclusive, such that it is coprime with $m$ .\n\n# Interaction Protocol\n\nFirst, the testing system writes the integer $n$ -- the modulo used by the device. Note that $n$ and the hidden number $d$ are guaranteed to have been generated according to the procedure described above.\n\nYour solution shall print requests of two types:\n\n- \u201c? a\u201d tells to feed a as input to the device. a must be an integer between $0$ and $n\u22121$ inclusive. The testing system responds with the time it took the device to compute `modPow(a , d , n)` in nanoseconds.\n\n- \u201c! d\u201d tells the value of $d$ that your program has determined.\n\nDon't forget to flush the output after each request!\n\nYour solution must issue exactly one request of the second type, which must be the last request, and the solution must terminate gracefully after issuing it.\n\nYour solution is allowed to issue at most $30 000$ requests of the first type.\n\nYour solution will be run on $30$ testcases, working with one $(n , d)$ pair per run. For each testcase the numbers $n$ and $d$ are fixed and were generated using the procedure described above. The example below\n\nwas not generated in that manner and thus will not be used for testing your solution; it only serves to illustrate the input/output format and provide a sanity check for your calculation of the computation time. ",
    "inputFormat": "",
    "outputFormat": "",
    "samples": [
        [
            "15\n980\n293",
            "? 3\n? 8\n! 5"
        ]
    ],
    "hint": "",
    "translation": "\u6709\u5982\u4e0b\u7684\u4e00\u4e2a\u7a0b\u5e8f\u6765\u8ba1\u7b97 $a^d(mod \\ n)$\uff0c\uff08$d,n$\u662f\u5e38\u6570\uff09\n\n```cpp\nmodPow(a, d, n) {\n\tr = 1;\n \tfor (i = 0; i < 60; ++i) {\n   \t\tif ((d & (1 << i)) != 0) {\n     \t\tr = r * a % n;\n   \t\t}\n \t\ta = a * a % n;\n \t}\n}\n```\n\n\u5176\u4e2d\uff0c\u8ba1\u7b97 $x * y\\ \\  mod \\ n$ \uff08\u4e0a\u8ff0\u4f2a\u4ee3\u7801\u4e2d\u7684\u7b2c $5$ \u884c\u548c\u7b2c $7$ \u884c\uff09\u9700\u8981\u6d88\u8017 $(bits(x) + 1)* (bits(y) + 1)$ \u7eb3\u79d2\uff0c$bits(x)$ \u662f $x$ \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u4e0d\u5e26\u524d\u5bfc\u96f6\u7684\u4f4d\u6570\uff0c\u66f4\u6b63\u5f0f\u7684\u8bf4\uff0c\u4e3a $\\lceil \\log_2(x+1) \\rceil$\uff0c\u5176\u4ed6\u6307\u4ee4\u53ef\u4ee5\u8ba4\u4e3a\u4e0d\u9700\u8981\u4efb\u4f55\u65f6\u95f4\u3002\n\n\u4f60\u77e5\u9053 $n$ \uff0c\u4f46\u4e0d\u77e5\u9053 $d$\uff0c \u4f60\u53ef\u4ee5\u901a\u8fc7\u4e0d\u8d85\u8fc7 $30000$ \u6b21\u8be2\u95ee\u5bf9\u4e8e $a$ \u8ba1\u7b97 $a^d(mod \\ n)$ \u6240\u7528\u7eb3\u79d2\u6570\u3002\n\n\u6b63\u5f0f\u6570\u636e\u4e2d\uff0c$n,d$ \u7684\u751f\u6210\u65b9\u5f0f\u5982\u4e0b\uff1a\u968f\u673a\u6311\u9009\u4e24\u4e2a $[2^{29},2^{30}-1]$ \u7684\u8d28\u6570 $p,q$\uff0c$n=pq$\uff0c\u800c $d$ \u4e3a\u5728 $[1,\\varphi(n)]$ \u968f\u673a\u6311\u9009\u7684\uff0c\u4e0e $\\varphi(n)=(p-1)*(q-1)$ \u4e92\u8d28\u7684\u6570\n\n**\u8fd9\u662f\u4e00\u9053\u4ea4\u4e92\u9898**\n\n\u9996\u5148\uff0c\u5c06\u7ed9\u51fa\u6574\u6570 $n$\n\n\u6709\u4e24\u79cd\u6307\u4ee4\u53ef\u7528\uff1a\n\n\u201c? a\u201d\u8be2\u95ee\u5bf9\u4e8e\u6b63\u6574\u6570 $a$ \u8ba1\u7b97 $a^d(mod \\ n)$ \u6240\u7528\u7eb3\u79d2\u6570\u3002\u8981\u6c42$a<n$\u3002\u8fd4\u56de\u6240\u7528\u7684\u7eb3\u79d2\u6570\n\n\u201c! d\u201d\u8868\u793a\u786e\u5b9a\u4e86 $d$ \u7684\u503c\u5e76\u63d0\u4ea4\uff0c\u4f60\u7684\u7a0b\u5e8f\u5e94\u5f53\u5728\u6b64\u540e\u7ed3\u675f\u3002"
}