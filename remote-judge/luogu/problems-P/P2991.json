{
    "description": "Inspired by the new water park at Machu Picchu in Peru, Farmer John has decided to build one for the cows. Its biggest\n\nattraction is to be a giant water slide of a peculiar design. The superslide comprises E (1 <= E <=\n\n150,000) mini slides connecting V (2 <= V <= 50,000) small pools conveniently labeled 1..V. Every mini slide must be traversed in its proper direction and may not be traversed backwards. The cows start at pool number 1 and traverse successive mini slides until they end up in the pool number V, the final pool. Every pool (except 1, the first one) includes at least one mini slide entering it and (except V, the last one) at least one (different) mini slide exiting it.\n\nFurthermore, a cow can reach the end of the ride (pool V) from any pool by going down a sequence of mini slides. Finally, since this is a slide, it is not possible to leave a pool and then encounter that pool again after traversing some set of mini slides.\n\nEach mini slide i runs from pool P\\_i to pool Q\\_i (1 <= P\\_i <= V; 1 <= Q\\_i <= V; P\\_i != Q\\_i) and has an associated fun value F\\_i (0 <= F\\_i <= 2,000,000,000). Bessie's total fun for any given trip down the superslide is the sum of the fun values of all the mini slides traversed.\n\nBessie naturally wants to have as much fun as possible, given the long time that she spends in the slide's queue waiting for the ride. Generally, she carefully chooses which mini slide to follow out of each pool. She is a cow, however, and no more than K (1 <= K <= 10) times as she splashes down the slide, she loses control and follows a random mini slide out of a pool (this can even happen on pool 1).\n\nIf Bessie chooses so as to maximize her fun in the worst case, how much fun is she guaranteed to have for a given super-slide?\n\nBy way of example, consider a small park that has 3 pools (pool id's shown in brackets) and four mini slides; K has the value 1 (fun values shown outside of brackets):\n\n[1]\n/   \\\n5 -> /     \\ <- 9 \n\n/       \\\n\n[2]---3---[3]\n\n\\_\\_5\\_\\_/\n\nShe alway starts at pool 1 and ends and pool 3. If she had her way, she'd ride direct from pool 1 to pool 2 and then on the higher-fun mini slide (with fun value 5) to slide 3 for a total fun value of 5+5=10. But, if she loses control at pool 1, she might slide directly from pool 1 to pool 3 for total fun 9. If she loses control at pool 2, she could reduce her total fun to just 5+3 = 8.\n\nBessie wants to find the most fun she can have so she strives to choose 1->3 for a total fun of 9. If she loses control at pool 1 and ends up on mini slide 1->2, she knows she will not lose control at pool 2 and will end up with fun 10. Thus, she knows her minimum fun will always be at least 9.\n\n\u53d7\u5230\u79d8\u9c81\u7684\u9a6c\u4e18\u6bd4\u4e18\u7684\u65b0\u5f0f\u6c34\u4e0a\u4e50\u56ed\u7684\u542f\u53d1\uff0cFarmer John\u51b3\u5b9a\u4e5f\u4e3a\u5976\u725b\u4eec\u5efa\u4e00\u4e2a\u6c34\u4e0a\u4e50\u56ed\u3002\u5f53\u7136\uff0c\u5b83\u6700\u5927\u7684\u4eae\u70b9\u5c31\u662f\u65b0\u5947\u5de8\u5927\u7684\u6c34\u4e0a\u51b2\u6d6a\u3002\n\n\u8d85\u7ea7\u8f68\u9053\u5305\u542b E (1 <= E <=150,000)\u6761\u5c0f\u8f68\u9053\u8fde\u63a5\u7740V (V <= 50,000)\u4e2a\u6c34\u6c60\uff0c\u7f16\u53f7\u4e3a1..V\u3002\u6bcf\u4e2a\u5c0f\u8f68\u9053\u5fc5\u987b\u6309\u7167\u7279\u5b9a\u7684\u65b9\u5411\u8fd0\u884c\uff0c\u4e0d\u80fd\u591f\u53cd\u5411\u8fd0\u884c\u3002\u5976\u725b\u4eec\u4ece1\u53f7\u6c34\u6c60\u51fa\u53d1\uff0c\u7ecf\u8fc7\u82e5\u5e72\u6761\u5c0f\u8f68\u9053\uff0c\u6700\u7ec8\u5230\u8fbeV\u53f7\u6c34\u6c60\u3002\u6bcf\u4e2a\u6c34\u6c60(\u9664\u4e86V\u53f7\u548c1\u53f7\u4e4b\u5916\uff0c\u90fd\u6709\u81f3\u5c11\u4e00\u6761\u5c0f\u8f68\u9053\u8fdb\u6765\u548c\u4e00\u6761\u5c0f\u8f68\u9053\u51fa\u53bb\uff0c\u5e76\u4e14\uff0c\u4e00\u5934\u5976\u725b\u4ece\u4efb\u4f55\u4e00\u4e2a\u6c34\u6c60\u5230\u8fbeV\u53f7\u6c34\u6c60\u3002\u6700\u540e\uff0c\u7531\u4e8e\u8fd9\u662f\u4e00\u4e2a\u51b2\u6d6a\uff0c\u4ece\u4efb\u4f55\u4e00\u4e2a\u6c34\u6c60\u51fa\u53d1\u90fd\u4e0d\u53ef\u80fd\u56de\u5230\u8fd9\u4e2a\u6c34\u6c60)\n\n\u6bcf\u6761\u5c0f\u8f68\u9053\u4ece\u6c34\u6c60P\\_i\u5230\u6c34\u6c60Q\\_i (1 <= P\\_i <= V; 1<= Q\\_i <= V; P\\_i != Q\\_i)\uff0c\u8f68\u9053\u6709\u4e00\u4e2a\u5f00\u5fc3\u503cF\\_i (0 <= F\\_i <= 2,000,000,000)\uff0cBessie\u603b\u7684\u5f00\u5fc3\u503c\u5c31\u662f\u7ecf\u8fc7\u7684\u6240\u6709\u8f68\u9053\u7684\u5f00\u5fc3\u503c\u4e4b\u548c\u3002\n\nBessie\u81ea\u7136\u5e0c\u671b\u8d8a\u5f00\u5fc3\u8d8a\u597d\uff0c\u5e76\u4e14\uff0c\u5979\u6709\u8db3\u591f\u957f\u7684\u65f6\u95f4\u5728\u8f68\u9053\u4e0a\u73a9\u3002\u56e0\u6b64\uff0c\u5979\u7cbe\u5fc3\u5730\u6311\u9009\u8def\u7ebf\u3002\u4f46\u662f\uff0c\u7531\u4e8e\u5979\u662f\u5934\u5976\u725b\uff0c\u6240\u4ee5\uff0c\u4f1a\u6709\u81f3\u591aK (1 <= K <= 10)\u6b21\u7684\u60c5\u51b5\uff0c\u5979\u65e0\u6cd5\u63a7\u5236\uff0c\u5e76\u4e14\u968f\u673a\u4ece\u67d0\u4e2a\u6c34\u6c60\u9009\u62e9\u4e86\u4e00\u6761\u8f68\u9053(\u8fd9\u79cd\u60c5\u51b5\u751a\u81f3\u4f1a\u57281\u53f7\u6c34\u6c60\u53d1\u751f)\n\n\u5982\u679cBessie\u9009\u62e9\u4e86\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u6700\u5927\u5316\u5979\u7684\u5f00\u5fc3\u503c\uff0c\u90a3\u4e48\uff0c\u5979\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4e00\u6b21\u51b2\u6d6a\u53ef\u4ee5\u5f97\u5230\u7684\u6700\u5927\u5f00\u5fc3\u503c\u662f\u591a\u5c11\uff1f\n",
    "inputFormat": "\\* Line 1: Three space separated integers: V, E, and K\n\n\\* Lines 2..E + 1: Line i+1 contains three space separated integers: P\\_i, Q\\_i, and F\\_i\n",
    "outputFormat": "\\* Line 1: A single line with a single integer that is the minimum fun that Bessie can guarantee she can have.\n",
    "samples": [
        [
            "3 4 1 \n2 3 5 \n1 2 5 \n1 3 9 \n2 3 3 \n",
            "9 \n"
        ]
    ],
    "hint": ""
}