{
    "description": "The pasture contains a small, contiguous grove of trees that has no 'holes' in the middle of the it.  Bessie wonders: how far is it to walk around that grove and get back to my starting position? She's just sure there is a way to do it by going from her start location to successive locations by walking horizontally, vertically, or diagonally and counting each move as a single step. Just looking at it, she doesn't think you could pass 'through' the grove on a tricky diagonal. Your job is to calculate the minimum number of steps she must take.\n\n\nHappily, Bessie lives on a simple world where the pasture is represented by a grid with R rows and C columns (1 <= R <= 50, 1 <= C <= 50). Here's a typical example where '.' is pasture (which Bessie may traverse), 'X' is the grove of trees, '\\*' represents Bessie's start and end position, and '+' marks one shortest path she can walk to circumnavigate the grove (i.e., the answer):\n\n```cpp\n...+...\n..+X+..\n.+XXX+.\n..+XXX+\n..+X..+\n...+++*\n```\nThe path shown is not the only possible shortest path; Bessie might have taken a diagonal step from her start position and achieved a similar length solution. Bessie is happy that she's starting 'outside' the grove instead of in a sort of 'harbor' that could complicate finding the best path.\n\n\u7267\u573a\u91cc\u6709\u6811\u6797\uff0c\u6797\u5b50\u91cc\u6ca1\u6709\u5751\uff0c\u8d1d\u831c\u5f88\u60f3\u77e5\u9053\uff0c\u6700\u5c11\u51e0\u6b65\u80fd\u7ed5\u6811\u6797\u8d70\u4e00\u5708\uff0c\u6700\u540e\u56de\u5230\u8d77\u70b9.\u5979\u80fd\u4e0a\u4e0b\u5de6\u53f3\u8d70\uff0c\u4e5f\u80fd\u8d70\u5bf9\u89d2\u7ebf\u683c\u5b50.\n\n\u7267\u573a\u88ab\u5206\u6210 $R$ \u884c $C$ \u5217 $(1\\leq R\\leq 50,\\ 1\\leq C\\leq 50)$ \u3002\u4e0b\u9762\u662f\u4e00\u5f20\u6837\u4f8b\u7684\u5730\u56fe\uff0c\u5176\u4e2d `.` \u8868\u793a\u8d1d\u831c\u53ef\u4ee5\u8d70\u7684\u7a7a\u5730\uff0c `X` \u8868\u793a\u6811\u6797\uff0c\u8868\u793a\u8d77\u70b9.\u800c\u8d1d\u831c\u8d70\u7684\u6700\u8fd1\u7684\u8def\u5df2\u7ecf\u7279\u522b\u5730\u7528 `+` \u8868\u793a \u51fa\u6765.\n\n\u9898\u76ee**\u4fdd\u8bc1\u5b58\u5728\u6700\u77ed\u8def\u5f84**\uff0c\u4e14\u68ee\u6797\u5f62\u6210\u4e00\u4e2a\u8054\u901a\u5757\u3002",
    "inputFormat": "Line 1: Two space-separated integers: R and C\n\n\n\n\nLines 2..R+1: Line i+1 describes row i with C characters (with no spaces between them).\n",
    "outputFormat": "Line 1: The single line contains a single integer which is the smallest number of steps required to circumnavigate the grove.\n",
    "samples": [
        [
            "6 7\n.......\n...X...\n..XXX..\n...XXX.\n...X...\n...*...",
            "11"
        ]
    ],
    "hint": ""
}