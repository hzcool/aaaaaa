{
    "description": "Nitori is learning postfix expressions. She has a incomplete postfix expression $E$ of length $n$. Being a Youkai, she wants to find its magical property.\n\nHer postfix expression contains the Bitwise Or operator (denoted as `|`), the Bitwise And operator (denoted as `&`), and numbers `0` and `1`. Being incomplete, some operators have not been decided yet and are denoted as `?`. She promised that $E$ **will become a *vaild* postfix expression** after you complete it.\n\nIn this problem, the term *substring* is defined as a continuous segment of $E$. **Two substrings are considered different as long as their positions or length differ.**  So `1?0`, `01?0` are all substrings of `01?01?|`  , but `0101` is not.\n\nNitori found out that a substring of her expression is *magical* if and only if the following conditions are met:\n\n- It is possible to transform it into a *valid* postfix expression after replacing `?` with either `&` or `|` .\n- Among these transformations, it is possible to find at least one of them that after applying it, the expression yields $0$,  and at least one of them that after applying it, the expression yields $1$.\n\nYour task is to find out the number of *magical* substrings.\n",
    "inputFormat": "The first line contains an integer $T$, the number of test cases.\n\nFor each test case, input one integer $n$ and an expression $E$ in a single line.",
    "outputFormat": "For each test case, print one integer which is the answer.",
    "samples": [
        [
            "2\n3 01?\n7 01?01?|",
            "1\n3"
        ]
    ],
    "hint": "### Constraints\n\n$1\\le T,n\\le 2\\times 10^6$. The sum of $n$ of all test cases $\\le 2\\times 10^6$.",
    "translation": "\u7ed9\u5b9a\u4e00\u4e2a\u5408\u6cd5\u7684\u542b `|&?01` \u7684\u540e\u7f00\u8868\u8fbe\u5f0f\uff08\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u7ed9\u51fa\uff0c\u5176\u4e3a\u201c\u5408\u6cd5\u7684\u201d\u4ee3\u8868\u5c06\u6240\u6709 `?` \u66ff\u6362\u4e3a\u8fd0\u7b97\u7b26\u540e\u5176\u4f1a\u6210\u4e3a\u4e00\u4e2a\u5408\u6cd5\u7684\u540e\u7f00\u8868\u8fbe\u5f0f\uff09\uff0c\u8bd5\u6c42\u51fa\u5176\u6709\u591a\u5c11\u4e2a\u5b50\u4e32\u6ee1\u8db3\uff1a\n\n- \u5c06\u6240\u6709\u7684 `?` \u66ff\u6362\u6210 `|` \u6216 `&` \u540e\uff0c\u8be5\u4e32\u4e3a\u5408\u6cd5\u7684\u540e\u7f00\u8868\u8fbe\u5f0f\uff1b\n- \u5b58\u5728\u4e00\u79cd\u5c06\u6240\u6709\u7684 `?` \u66ff\u6362\u6210 `|` \u6216 `&` \u7684\u65b9\u6cd5\u4f7f\u5f97\u8be5\u5f0f\u6240\u5f97\u7ed3\u679c\u4e3a $0$\uff0c\u540c\u65f6\u4e5f\u5b58\u5728\u66ff\u6362\u65b9\u6cd5\u4f7f\u5f97\u7ed3\u679c\u4e3a $1$\u3002\n\n\u8bf7\u8f93\u51fa\u8fd9\u6837\u7684\u5b50\u4e32\u7684\u6570\u91cf\u3002\u4e24\u4e2a\u5b50\u4e32\u662f\u4e0d\u540c\u7684\u4ec5\u5f53\u5b83\u4eec\u957f\u5ea6\u4e0d\u540c\u6216\u4f4d\u7f6e\u4e0d\u540c\u3002"
}