{
    "description": "The cows keep getting in trouble by taking rides on Farmer John's tractor, so he has hidden the keys to the tractor in a fancy new safe in his office. Undeterred, the cows have vowed to try and break into this safe.\n\nThe safe is protected by a rather complicated passcode system. The passcode entry system is arranged as a rooted tree of N (1 <= N <= 20,000) nodes, each of which requires a digit between 0 and 9. The nodes are indexed 0..N-1.\n\nThe only information that the cows have is that certain sequences of length 5 do not occur along particular paths upwards through the tree.\n\nFor instance, suppose the tree is the following (rooted at A):\n\nA <- B <- C <- D <- E \n\n^\n|\nF\nThe cows might know that the sequence 01234 does not occur starting at F, and that the sequence 91234 does not occur starting at E. This information rules out 19 possible passcodes: all those of the form\n\n4 <- 3 <- 2 <- 1 <- \\* \n\n^\n|\n0 \nor\n4 <- 3 <- 2 <- 1 <- 9 \n\n^\n|\n\\*\nwhich gives 19 once we account for the fact that \n\n4 <- 3 <- 2 <- 1 <- 9 \n\n^\n|\n0 \nappears twice.\n\nGiven M (1 <= M <= 50,000) length-5 sequences, together with their starting nodes in the tree, help the cows figure out how many passcodes have been ruled out. You should compute your answer modulo 1234567.\n\n\u6709\u4e00\u68f5N\u4e2a\u8282\u70b9\u7684\u6709\u6839\u6811,\u6bcf\u4e2a\u8282\u70b9\u53ef\u4ee5\u586b0~9.\n\n\u6709M\u4e2a\u4e8b\u5b9e,\u5c31\u662f\u4eceX\u5f00\u59cb\u5f80\u7956\u5148\u4e00\u76f4\u8dd1\u7684\u7684\u5305\u542bX\u76845\u4e2a\u8282\u70b9(\u4fdd\u8bc1X\u4e0a\u9762\u4e00\u5b9a\u5b58\u5728\u8fd9\u6837\u4e00\u6761\u8def\u5f84,\u4e5f\u5c31\u662f\u8bf4X\u7684\u6df1\u5ea6\u81f3\u5c11\u4e3a5),\u4e00\u5b9a\u4e0d\u662fABCDE.(0<=A,B,C,D,E<=9)\n\n\u6c42,\u6839\u636e\u8fd9M\u4e2a\u4e8b\u5b9e,\u5171\u6709\u591a\u5c11\u79cd\u7ed9\u8fd9\u68f5\u6811\u5168\u90e8\u586b\u4e0a\u6570\u7684\u65b9\u6848\u4e00\u5b9a\u662f\u4e0d\u53ef\u80fd\u7684.\n",
    "inputFormat": "\\* Line 1: Two space-separated integers, N and M.\n\n\\* Lines 2..N: Line i+1 contains a single integer p(i), denoting the parent of node i in the tree (0 <= p(i) < i).\n\n\\* Lines N+1..N+M: Line N+i describes the ith sequence known not to occur in the code.  The line will contain v(i) and s(i) separated by a space, where v(i) is the starting node of the sequence, and s(i) is a 5-digit string known not to occur starting at v(i) and proceeding upward in the tree.  It is guaranteed that the root is at least 4 steps upward from v(i).\n",
    "outputFormat": "\\* Line 1: A single integer giving the number of ruled-out\n\nconfigurations, modulo 1234567.\n",
    "samples": [
        [
            "6 2 \n0 \n1 \n2 \n3 \n3 \n4 01234 \n5 91234 \n",
            "19 \n"
        ]
    ],
    "hint": ""
}