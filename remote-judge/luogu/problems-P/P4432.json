{
    "description": "Zig and Zag are playing a word game. Zig says one letter, and Zag says a word that starts\nwith that letter. However, the word needs to be from the allowed word list and such that Zag\nalready said it the least amount of times. If the word choice is ambiguous, then Zag will\nchoose the one that is lexicographically smaller (sooner in the alphabet). For each Zig\u2019s\nletter, it will be possible to choose a word.\n\nLet there be a list consisting of exactly K distinct words and an array of N letters that Zig has\ngiven. Write a program that will, based on the input, output an array of N words that Zag said\nduring the game.\n",
    "inputFormat": "The first line of input contains positive integers K (1 \u2264 K \u2264 100 000) and N (1 \u2264 N \u2264 100 000)\nfrom the task.\n\nEach of the following K lines contains a single word consisting of lowercase letters of the\nEnglish alphabet not longer than 21 characters.\n\nEach of the following N lines contains a single lowercase letter of the English alphabet.\n",
    "outputFormat": "You must output N lines, each containing a single word from the task.\n",
    "samples": [
        [
            "4 5\nzagreb\nsplit\nzadar\nsisak\nz\ns\ns\nz\nz\n",
            "zadar\nsisak\nsplit\nzagreb\nzadar\n"
        ],
        [
            "5 3\nlondon\nrim\npariz\nmoskva\nsarajevo\np\nr\np\n",
            "pariz\nrim\npariz\n"
        ],
        [
            "1 3\nzagreb\nz\nz\nz\n",
            "zagreb\nzagreb\nzagreb"
        ]
    ],
    "hint": "In test cases worth 60% of total points, it will hold that N and K are smaller than 500.",
    "translation": "Zig\u548cZag\u6b63\u5728\u73a9\u6587\u5b57\u6e38\u620f\u3002Zig\u8bf4\u4e86\u4e00\u4e2a\u5b57\u6bcd\uff0c\u800cZag\u8bf4\u4e86\u4e00\u4e2a\u4ee5\u8be5\u5b57\u6bcd\u5f00\u5934\u7684\u5355\u8bcd\u3002\u4f46\u662f\u8fd9\u4e2a\u8bcd\u9700\u8981\u51fa\u73b0\u5728\u7ed9\u51fa\u7684\u5355\u8bcd\u5217\u8868\u4e2d\uff0c\u5e76\u4e14\u88ab\u662f\u76f8\u540c\u9996\u5b57\u6bcd\u4e2d\u4f7f\u7528\u7684\u6b21\u6570\u6700\u5c11\u7684\u5355\u8bcd\u3002\u5982\u679c\u5355\u8bcd\u7684\u9009\u62e9\u4e0d\u660e\u786e(\u5373\u76f8\u540c\u9996\u5b57\u6bcd\u4e2d\u4f7f\u7528\u7684\u6b21\u6570\u6700\u5c11\u7684\u5355\u8bcd\u4e0d\u6b62\u4e00\u4e2a)\uff0c\u90a3\u4e48Zag\u4f1a\u9009\u62e9\u5b57\u5178\u5e8f\u8f83\u5c0f\u7684\u5b57\u6bcd\u3002\u8f93\u5165\u4fdd\u8bc1\u5bf9\u4e8e\u6bcf\u4e2aZig\u7684\u5b57\u6bcd\uff0c\u90fd\u6709\u53ef\u4ee5\u9009\u62e9\u7684\u5355\u8bcd\u3002\n\n\u5047\u8bbe\u6709\u4e00\u4e2a\u7531K\u4e2a\u4e0d\u540c\u7684\u5355\u8bcd\u7ec4\u6210\u7684\u5217\u8868\u548c\u4e00\u4e2aZig\u7ed9\u51fa\u7684N\u4e2a\u5b57\u6bcd\u7ec4\u6210\u7684\u5217\u8868\u3002\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u6839\u636e\u8f93\u5165\uff0c\u8f93\u51faZag\u5728\u6e38\u620f\u8fc7\u7a0b\u4e2d\u8bf4\u51fa\u7684N\u4e2a\u5355\u8bcd\u3002\n\n\u8f93\u5165\u8f93\u51fa\u683c\u5f0f\n\n\u8f93\u5165\u683c\u5f0f\uff1a\n\u7b2c\u4e00\u884c\u8f93\u5165\u5305\u542b\u6765\u81ea\u7684\u6b63\u6574\u6570K\uff081\u2264K\u2264100 000\uff09\u548cN\uff081\u2264N\u2264100 000\uff09\u3002\n\n\u4ee5\u4e0bK\u884c\u662fK\u4e2a\u5355\u8bcd\uff0c\u7531\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210\uff0c\u4e0d\u8d85\u8fc721\u4e2a\u5b57\u6bcd\u3002\n\n\u4ee5\u4e0bN\u884c\u662fZig\u8bf4\u7684N\u4e2a\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u3002\n\n\u8f93\u51fa\u683c\u5f0f\uff1a\nN\u884c\uff0c\u5206\u522b\u5bf9\u5e94N\u4e2aZig\u7684\u8be2\u95ee\u3002\n\n\u611f\u8c22@K_Vin \u63d0\u4f9b\u7684\u7ffb\u8bd1"
}