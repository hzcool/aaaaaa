{
    "description": "You have an internship with a bioinformatics research group studying DNA. A single strand of DNA consists of many genes, which fall into different categories called gene types. Gene types are delimited by specific nucleotide sequences known as gene markers. Each gene type i has a unique start marker $\\texttt s_i$ and a unique end marker $\\texttt e_i$ . After many dirty jobs (growing bacteria, cell extraction, protein engineering,and so on), your research group can convert DNA into a form consisting of only the gene markers, removing all the genetic material lying between the markers.\n\nYour research group came up with the interesting hypothesis that gene interpretation depends on whether the markers of some gene types form properly nested structures. To decide whether markers of gene type $i$ form a proper nesting in a given sequence of markers $w$, one needs to consider the subsequence of $w$ containing only the markers of gene type $i$ ($\\texttt s_i$ and $\\texttt e_i$), leaving none of them out. The following (and only the following) are considered to be properly nested structures:\n\n- $\\texttt s_i \\texttt e_i$\n- $\\texttt s_i N \\texttt e_i$, where $N$ is a properly nested structure\n- $AB$, where $A$ and $B$ are properly nested structures\n\nGiven your computing background, you were assigned to investigate this property, but there is one further complication. Your group is studying a specific type of DNA called circular DNA, which is DNA that forms a closed loop. To study nesting in circular DNA, it is necessary to cut the loop at some location, which results in a unique sequence of markers (the direction of reading is fixed by molecular properties). Whether a gene type $i$ forms a proper nesting now also depends on where the circular DNA is cut. Your task is to find the cutting location that maximizes the number of gene types that form a properly nested structure. Figure D.1 shows an example corresponding to Sample Input 1. The indicated cut results in the markers for gene type 1 being properly nested.\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/l856fbko.png)",
    "inputFormat": "The first line of input contains an integer $n$ ($1 \\leq n \\leq 10^6$), the length of the DNA. The next line contains the DNA sequence, that is, $n$ markers. Each marker is a character $c$ followed by an integer $i$, where $c \\in \\{\\texttt s, \\texttt e\\}$ specifies whether it is a start or an end marker and $i$ ($1 \\leq i \\leq 10^6$) is the gene type of the marker. The given DNA sequence has been obtained from the circular DNA by cutting at an arbitrary location.",
    "outputFormat": "Output one line with two integers $p$ and $m$, where $p$ is the cutting position that maximizes the number of different gene types that form a proper nesting, and $m$ is this maximum number of gene types. The DNA is cut just before the $p^{\\text{th}}$ input marker (for instance, the cut shown in Figure D.1 has $p = 3$). If more than one cutting position yields the same maximum value of $m$, output the smallest $p$ that does so.",
    "samples": [
        [
            "9\ne1 e1 s1 e2 s1 s2 e42 e1 s1",
            "3 1"
        ],
        [
            "8\ns1 s1 e3 e1 s3 e1 e3 s3",
            "8 2"
        ]
    ],
    "hint": "Source: ICPC 2019 World Finals.",
    "translation": "\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u73af\u5f62 DNA \u5e8f\u5217\uff0c\u4ee5\u987a\u65f6\u9488\u987a\u5e8f\u7ed9\u51fa\uff0c\u5176\u4e2d\u6bcf\u4e2a\u57fa\u56e0\u6709\u7c7b\u578b\u548c\u7f16\u53f7\u4e24\u4e2a\u5c5e\u6027\uff0c\u7c7b\u578b\u662f $s$\uff08\u5934\uff09\u6216 $e$\uff08\u5c3e\uff09\u4e2d\u7684\u4e00\u79cd\uff0c\u800c\u7f16\u53f7\u662f $1$ \u5230 $10_6$ \u4e2d\u7684\u6574\u6570\u3002\n\u4f60\u9700\u8981\u5728\u67d0\u4e2a\u5730\u65b9\u5207\u65ad\uff0c\u6309\u7167\u987a\u65f6\u9488\u987a\u5e8f\u62c9\u6210\u94fe\u540e\uff0c\u6700\u5927\u5316\u80fd\u591f\u5b8c\u7f8e\u5339\u914d\u7684\u57fa\u56e0\u7f16\u53f7\u4e2a\u6570\u3002\n\n\u4e00\u4e2a\u57fa\u56e0\u7f16\u53f7 $i$ \u662f\u80fd\u591f\u5b8c\u7f8e\u5339\u914d\u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b83\u5728\u94fe\u4e2d\u5bf9\u5e94\u7684\u6240\u6709\u57fa\u56e0\uff0c\u5c06 $s$ \u770b\u4f5c\u5de6\u62ec\u53f7\uff0c$e$ \u770b\u4f5c\u53f3\u62ec\u53f7\uff0c\u53ef\u4ee5\u5339\u914d\u6210\u975e\u7a7a\u7684\u5408\u6cd5\u62ec\u53f7\u5e8f\u5217\u3002\n\n\u5982\u679c\u6709\u591a\u4e2a\u4f4d\u7f6e\u6ee1\u8db3\u6700\u5927\u5316\u7684\u6761\u4ef6\uff0c\u8f93\u51fa\u6700\u5c0f\u7684\u4f4d\u7f6e\u3002\n\n\u8f93\u5165\u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570 $n$ ($1\u2264n\u226410^6$)\uff0c\u8868\u793aDNA\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u7b2c\u4e8c\u884c\u662fDNA\u5e8f\u5217\uff0c\u5305\u542b $n$ \u4e2a\u5143\u7d20\uff0c\u6bcf\u4e2a\u5143\u7d20\u6709\u4e00\u4e2a\u5b57\u7b26 $c\u2208\\{s,e\\}$\uff08$s$ \u8868\u793a\u5207\u5272\u65f6\u4ee5\u8fd9\u4e2a\u5143\u7d20\u4e3a\u5f00\u59cb\u8fd8\u662f\u7ed3\u675f\uff0c$s$ \u8868\u793a\u5f00\u59cb,$e$ \u8868\u793a\u7ed3\u675f\uff09\u548c\u4e00\u4e2a\u6574\u6570 $i$ (1 \\le i \\le 10^6) \u8868\u793a\u57fa\u56e0\u7c7b\u578b\u3002\u53ef\u4ee5\u901a\u8fc7\u5728\u4efb\u610f\u4f4d\u7f6e\u5207\u5272\uff0c\u4ece\u73af\u72b6DNA\u83b7\u5f97\u7ed9\u5b9a\u7684DNA\u5e8f\u5217\u3002\n\n\u8f93\u51fa\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 $p$ \u548c $m$ , $p$\u662f\u5207\u5272\u4f4d\u7f6e\uff0c\u53ef\u6700\u5927\u5316\u80fd\u591f\u5b8c\u7f8e\u5339\u914d\u7684\u57fa\u56e0\u7f16\u53f7\u4e2a\u6570\uff0c$m$ \u662f\u80fd\u591f\u5b8c\u7f8e\u5339\u914d\u57fa\u56e0\u7c7b\u578b\u7684\u6700\u5927\u6570\u91cf\u5982\u679c\u591a\u4e2a\u5207\u5272\u4f4d\u7f6e\u4ea7\u751f\u76f8\u540c\u7684\u6700\u5927\u503c $m$\uff0c\u8f93\u51fa\u6700\u5c0f\u7684 $p$\u3002"
}