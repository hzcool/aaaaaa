{
    "description": "Back in the day when the famous sixteen-bit three-letter operating system most often used on an 25x80 terminal dominated the PC market, \"Nibbles\" was everyone's favorite computer game. This problem, however, is not related to Nibbles \u2013 it is related to a game called \"Connect\" which is almost, but not quite, entirely unlike\nNibbles.\n\nConnect is played on a board composed of squares organized into R rows and $C$ columns, where both $R$ and $C$ are **odd numbers**. Rows and columns are numbered $1$ to $R$ and $1$ to $C$, respectively. Each position on the board\nis either free or blocked by a wall. Additionally, each board satisfies the following constraints:\n\n- Squares with **both coordinates even** are called rooms. They are **never blocked**.\n- Squares with **both coordinates odd** are called barriers. They are **always blocked**\n- All other squares are called corridors. They may or may not be blocked.\n- Corridors **along the edge** of the board are **always blocked**.\n\nBarriers are represented by the '+' (plus) character, blocked horizontal corridors by the '|' (pipe) character, while blocked vertical corridors are represented by the '\u2013' (minus) character. Rooms and free corridors are represented by the blank character.\n\n  At the beginning of the game an **even number** of figures (represented by the uppercase letter 'X') are placed on the board \u2013 each in a separate **room**. $A$ path between figures $A$ and $B$ is a sequence of **free** squares starting from $A$, ending with $B$ and moving in one of the **four possible directions** in each step (the path includes both endpoint squares, $A$ and $B$). The length of the path is the total number of steps needed to get from $A$ to $B$  (which is equal to the number of squares contained in the path minus one).\n\n  The goal of the player is to first **divide all the figures into pairs**, and then, for each pair, **connect** the two figures with a path. The pairs should be connected in such a way that **no two paths share a common square**.\n\n  For a completed game, the score is defined as **the sum of the lengths** of all paths.\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/3ytczh4t.png)\n\nWrite a program that, given the starting position of the Connect game, plays the game in such a way that the **minimum possible score** is achieved.\nThe test data will guarantee that a solution, although not necessarily unique, will always exist. \n\n\n\n",
    "inputFormat": "\u7b2c\u4e00\u884c\u8f93\u5165\u4e3a\u4e24\u4e2a\u6574\u6570\uff1a $R$ \u4e0e $C$ ,\u5176\u4e2d $R$ \u4e3a\u884c\u6570\uff0c$C$ \u4e3a\u5217\u6570\uff0c$R$ \uff0c$C$ \u5747\u4e3a\u5947\u6570\u3002\n\n\u63a5\u4e0b\u6765\u7684 $R$ \u884c\u6bcf\u884c\u5305\u62ec $C$ \u4e2a\u5b57\u7b26\uff0c\u6bcf\u4e2a\u5b57\u7b26\u90fd\u662f`+`\u3001`|`\u3001`- `\u3001\u7a7a\u683c\u6216`X`\u4e2d\u7684\u4e00\u4e2a\uff0c\u5206\u522b\u8868\u793a\u969c\u788d\u53ca\u4e24\u79cd\u5899\u58c1\u3001\u7a7a\u683c\u8868\u793a\u623f\u95f4\u6216\u53ef\u901a\u8fc7\u7684\u8d70\u5eca\uff0c`X`\u8868\u793a\u623f\u95f4\u4e2d\u7684\u7269\u54c1\u3002",
    "outputFormat": "\u8f93\u51fa\u7684\u7b2c\u4e00\u884c\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u5373\u6700\u5c0f\u5206\u503c\u3002\n\n\u672c\u9898**\u4e0d\u8981\u6c42**\u8f93\u51fa\u5408\u6cd5\u65b9\u6848",
    "samples": [
        [
            "17 15\n+-+-+-+-+-+-+-+\n|             |\n+ + + + + + + +\n|X  |   |     |\n+ + + + + + + +\n|   |   |  X  |\n+-+ + + + + + +\n|       |     |\n+ + + +-+-+-+-+\n|            X|\n+ + +-+-+-+-+ +\n|             |\n+ + + + + + + +\n|  X|         |\n+ + + + + + + +\n|  |          |\n+-+-+-+-+-+-+-+",
            "30\n"
        ]
    ],
    "hint": "$5 \\leqslant R \\leqslant 25$\uff0c$5 \\leqslant C \\leqslant 80$",
    "translation": "\u7ed9\u5b9a\u4e00\u4e2a $R*C$ \u5927\u5c0f\u7684\u8ff7\u5bab\uff0c\u5176\u4e2d $R,C$ \u5747\u4e3a\u5947\u6570\u3002\n\n\u8ff7\u5bab\u4e2d**\u4e24\u4e2a- \u5750\u6807\u503c\u5747\u4e3a\u5947\u6570**\u7684\u70b9\u4e0d\u80fd\u901a\u8fc7\uff0c\u79f0\u4e3a\u969c\u788d\uff1b\u8ff7\u5bab\u4e2d\u5176\u4ed6\u4e0d\u80fd\u901a\u8fc7\u7684\u70b9\u7edf\u79f0\u4e3a\u5899\u58c1\uff1b\u5750\u6807\u4e3a\u4e24\u4e2a\u5076\u6570\u7684\u70b9\u53ef\u4ee5\u901a\u8fc7\uff0c\u79f0\u4e3a\u623f\u95f4\uff1b\u8ff7\u5bab\u4e2d\u5176\u4ed6\u53ef\u901a\u8fc7\u7684\u70b9\u79f0\u4e3a\u8d70\u5eca\u3002\n\n\u8ff7\u5bab\u6709\u8fb9\u754c\uff0c\u8ff7\u5bab\u4e2d\u653e\u7f6e\u6709**\u5076\u6570**\u4e2a\u7269\u54c1\uff0c\u7269\u54c1\u4e00\u5b9a\u653e\u7f6e\u5728\u623f\u95f4\u4e2d\uff0c\u95ee\u5982\u4f55\u5c06\u8fd9\u4e9b\u7269\u54c1\u914d\u5bf9\u53ef\u4ee5\u4f7f\u5f97\u6240\u6709\u7269\u54c1\u5bf9\u4e4b\u95f4\u8def\u5f84\u7684\u603b\u548c\u6700\u5c0f\uff0c\u4efb\u4e24\u6761\u8def\u5f84\u4e0d\u80fd\u76f8\u4ea4\uff0c\u5e76\u8f93\u51fa\u8fd9\u4e2a\u603b\u548c\u7684\u6700\u5c0f\u503c\u3002"
}