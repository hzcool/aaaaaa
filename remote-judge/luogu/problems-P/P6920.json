{
    "description": "After numerous unfortunate freak fatalities and the lawsuits, settlements, protests, and boycotts that naturally followed, the beleaguered executives at ACME Clock Manufacturers have decided they need to finally fix their disastrous quality control issues. It has been known for years that the digital clocks they manufacture have an unacceptably high ratio of faulty liquid-crystal display (LCD) screens, and yet these heartless souls have repeatedly failed to address the issue, or even warn their hapless consumers!\n\nYou have been called in as a quality consultant to finally put a stop to the madness. Your job is to write an automated program that can test a clock and find faults in its display.\n\nThese clocks use a standard 7-segment LCD display for all digits (shown on the left in Figure\u00a01), plus two small segments for the \u2018:\u2019, and show all times in a 24-hour format. The minute before midnight is 23:59, and midnight is 0:00. The \u2018:\u2019 segments of a working clock are on at all times. The representation of each digit using the seven segments is shown on the right in Figure\u00a01.\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/3ornshtp.png)\n\n   Figure 1: LCD display of each digit. \n\nYour program will be given the display of a clock at several consecutive minutes, although you do not know exactly what time these displays start. Some of the LCD segments are burnt out (permanently off) and some are burnt in (permanently on). Your program must determine, where possible, which segments are definitely malfunctioning and which are definitely in working order.",
    "inputFormat": "The first input line contains a single integer $n$ ($1 \\leq n \\leq 100$), which is the number of consecutive minutes of a clock\u2019s display. The next $8n-1$ lines contain $n$ ASCII images of these clock displays of size $7 \\times 21$, with a single blank line separating the representations.\n\nAll digit segments are represented by two characters, and each colon segment is represented by one character. The character \u2018X\u2019 indicates a segment that is on. The character \u2018.\u2019 indicates anything else (segments that are off or non-segment portions of the display). See the sample input/output for details; the first output shows every possible LCD segment along with the smaller segments used to represent the \u2018:\u2019. No clock representation has an \u2018X\u2019 in a non-segment position or only half of a segment showing.",
    "outputFormat": "Display a $7 \\times 21$ ASCII image with a \u20180\u2019 for every segment that is burnt out, a \u20181\u2019 for every segment that is burnt in, a \u2018W\u2019 for every segment that is definitely working, and a \u2018?\u2019 for every segment for which the status cannot be determined. Use \u2018.\u2019 for non-segments. If the given displays cannot come from consecutive minutes, display impossible.",
    "samples": [
        [
            "3\n......XX.....XX...XX.\n.....X..X...X..X....X\n.....X..X.X.X..X....X\n.............XX...XX.\n.....X..X......X.X..X\n.....X..X......X.X..X\n......XX.....XX...XX.\n\n......XX.....XX...XX.\n.....X..X...X..X....X\n.....X..X.X.X..X....X\n.............XX...XX.\n.....X..X......X.X..X\n.....X..X......X.X..X\n......XX.....XX...XX.\n\n.............XX...XX.\n........X...X..X....X\n........X.X.X..X....X\n.............XX......\n........X...X..X.X..X\n........X...X..X.X..X\n......XX.....XX...XX.\n",
            ".??...WW.....??...??.\n?..?.W..?...?..1.0..?\n?..?.W..?.?.?..1.0..?\n.??...??.....11...WW.\n?..?.W..?.0.W..?.1..?\n?..?.W..?...W..?.1..?\n.??...11.....??...??.\n"
        ],
        [
            "2\n......XX.....XX...XX.\n...X....X...X..X.X..X\n...X....X.X.X..X.X..X\n......XX..........XX.\n...X.X....X.X..X.X..X\n...X.X......X..X.X..X\n......XX.....XX...XX.\n\n......XX.....XX......\n...X....X...X..X.....\n...X....X.X.X..X.....\n......XX.............\n...X.X....X.X..X.....\n...X.X......X..X.....\n......XX.....XX......\n",
            "impossible\n"
        ]
    ],
    "hint": "Time limit: 3000 ms, Memory limit: 1048576 kB. \n\n International Collegiate Programming Contest (ACM-ICPC) World Finals 2016",
    "translation": "### \u9898\u76ee\u63cf\u8ff0  \n\n\u5728\u65e0\u6570\u4e0d\u5e78\u7684\u7578\u5f62\u6b7b\u4ea1\u4e8b\u4ef6\u4ee5\u53ca\u968f\u4e4b\u800c\u6765\u7684\u8bc9\u8bbc\u3001\u548c\u89e3\u3001\u6297\u8bae\u548c\u62b5\u5236\u4e4b\u540e\uff0cACME\u65f6\u949f\u5236\u9020\u5546\u7684\u9ad8\u7ba1\u4eec\u51b3\u5b9a\u6700\u7ec8\u89e3\u51b3\u707e\u96be\u6027\u7684\u8d28\u91cf\u63a7\u5236\u95ee\u9898\u3002\u591a\u5e74\u6765\uff0c\u4eba\u4eec\u90fd\u77e5\u9053\uff0c\u4ed6\u4eec\u5236\u9020\u7684\u6570\u5b57\u949f\u7684\u6db2\u6676\u663e\u793a\u5c4f\u6545\u969c\u7387\u9ad8\u5f97\u4ee4\u4eba\u65e0\u6cd5\u63a5\u53d7\uff0c\u7136\u800c\uff0c\u8fd9\u4e9b\u65e0\u60c5\u7684\u4eba\u4eec\u5374\u4e00\u518d\u672a\u80fd\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u751a\u81f3\u672a\u80fd\u8b66\u544a\u4ed6\u4eec\u4e0d\u5e78\u7684\u6d88\u8d39\u8005\uff01  \n\n\u4f60\u88ab\u9080\u8bf7\u62c5\u4efb\u8d28\u91cf\u987e\u95ee\uff0c\u6700\u7ec8\u5236\u6b62\u4e86\u8fd9\u79cd\u75af\u72c2\u3002\u4f60\u7684\u5de5\u4f5c\u662f\u7f16\u5199\u4e00\u4e2a\u81ea\u52a8\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u6d4b\u8bd5\u65f6\u949f\u5e76\u53d1\u73b0\u5176\u663e\u793a\u4e2d\u7684\u6545\u969c\u3002  \n\n\u8fd9\u4e9b\u65f6\u949f\u4f7f\u7528\u6807\u51c6\u76847\u6bb5LCD\u663e\u793a\u5c4f\u663e\u793a\u6240\u6709\u6570\u5b57\uff08\u5982\u56fe1\u5de6\u4fa7\u6240\u793a\uff09\uff0c\u52a0\u4e0a\u4e24\u4e2a\u5c0f\u6bb5\u663e\u793a`\uff1a`\uff0c\u5e76\u4ee524\u5c0f\u65f6\u8ba1\u65f6\u6cd5\u663e\u793a\u6240\u6709\u65f6\u95f4\u3002\u5348\u591c\u524d\u4e00\u5206\u949f\u662f23:59\uff0c\u5348\u591c\u662f0:00\u3002\u5de5\u4f5c\u65f6\u949f\u7684`\uff1a`\u6bb5\u59cb\u7ec8\u6253\u5f00\u3002\u56fe1\u53f3\u4fa7\u663e\u793a\u4e86\u4f7f\u7528\u4e03\u6bb5\u8868\u793a\u7684`0~9`\u6bcf\u4e2a\u6570\u5b57\u3002  \n\n![\u56fe1\uff1a\u6bcf\u4e2a\u6570\u5b57\u7684LCD\u663e\u793a\u3002](https://cdn.luogu.com.cn/upload/image_hosting/3ornshtp.png)   \n\n\u56fe1\uff1a\u6bcf\u4e2a\u6570\u5b57\u7684LCD\u663e\u793a\u3002\n\n### \u8f93\u5165\u683c\u5f0f  \n\n\u7b2c\u4e00\u884c\u6709\u4e00\u4e2a\u6570$n(1\\ \\le\\ n\\ \\le\\ 100)$\uff0c\u8fd9\u662f\u65f6\u949f\u663e\u793a\u7684\u8fde\u7eed\u5206\u949f\u6570\u3002  \n\n\u63a5\u4e0b\u6765$8n-1$\u884c\u5305\u62ec$n$\u4e2a\u65f6\u949f\u663e\u793a\u7684$7\\times 21$\u7684ASCII\u56fe\u50cf\uff0c\u6bcf\u4e24\u4e2a\u4e4b\u95f4\u4f1a\u6709\u4e00\u884c\u7684\u7a7a\u767d\u7528\u4e8e\u95f4\u9694  \n\n\u6240\u6709\u8868\u793a\u6570\u5b57\u7684\u6bb5\u7531\u4e24\u4e2a\u8fde\u7eed\u7684\u5b57\u7b26\u8868\u793a\uff0c\u6bcf\u4e2a\u8868\u793a\u5192\u53f7\u7684\u6bb5\u7531\u4e00\u4e2a\u5b57\u7b26\u8868\u793a\u3002\u5b57\u7b26`X`\u8868\u793a\u6253\u5f00\u7684\u6bb5\u3002\u5b57\u7b26`.`\u6307\u793a\u5176\u4ed6\u4efb\u4f55\u5185\u5bb9\uff08\u663e\u793a\u7684\u5206\u6bb5\u6216\u975e\u5206\u6bb5\u90e8\u5206\uff09\u3002\u8be6\u89c1\u6837\u672c\u8f93\u5165\u3001\u8f93\u51fa\uff1b\u7b2c\u4e00\u4e2a\u8f93\u51fa\u663e\u793a\u6bcf\u4e2a\u53ef\u80fd\u7684LCD\u6bb5\u4ee5\u53ca\u7528\u4e8e\u8868\u793a`\uff1a`\u7684\u8f83\u5c0f\u6bb5\u3002\u6ca1\u6709\u65f6\u949f\u8868\u793a\u5728\u975e\u6bb5\u4f4d\u7f6e\u6709`X`\uff0c\u6216\u4ec5\u663e\u793a\u6bb5\u7684\u4e00\u534a\u3002  \n\n### \u8f93\u51fa\u683c\u5f0f  \n\n\u663e\u793a\u4e00\u4e2a$7\\times 21$ASCII\u56fe\u50cf\uff0c\u6bcf\u4e2a\u70e7\u574f\u7684\u6bb5\u663e\u793a\u4e00\u4e2a`0`\uff0c\u6bcf\u4e2a\u70e7\u8fdb\u7684\u6bb5\u663e\u793a`1`\uff0c\u6bcf\u4e2a\u6b63\u5e38\u5de5\u4f5c\u7684\u6bb5\u663e\u793a\u4e3a`W`\uff0c\u4ee5\u53ca\u4e00\u4e2a`\uff1f`\u5bf9\u4e8e\u65e0\u6cd5\u786e\u5b9a\u72b6\u6001\u7684\u6bcf\u4e2a\u6bb5\u3002\u4f7f\u7528`.`\u5bf9\u4e8e\u975e\u5206\u6bb5\u3002\u5982\u679c\u7ed9\u5b9a\u7684\u663e\u793a\u4e0d\u80fd\u6765\u81ea\u8fde\u7eed\u5206\u949f\uff0c\u5219\u663e\u793a`impossible`\u3002  \n\n### \u8f93\u5165\u8f93\u51fa\u6837\u4f8b  \n\n### \u8bf4\u660e/\u63d0\u793a  \n\n\u65f6\u95f4\u9650\u5236\uff1a3000ms=3s  \n\n\u7a7a\u95f4\u9650\u5236\uff1a1048576KB=1024MB=1GB  \n\n\u51fa\u5904:2016\u5e74\u56fd\u9645\u5927\u5b66\u751f\u7f16\u7a0b\u5927\u8d5b\uff08`ACM-ICPC`\uff09\u4e16\u754c\u603b\u51b3\u8d5b"
}