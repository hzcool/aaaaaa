{
    "description": "My birthday is coming up. Alas, I am getting old and would like to feel young again. Fortunately, I have come up with an excellent way of feeling younger: if I write my age as a number in an appropriately chosen base $b$, then it appears to be smaller. For instance, suppose my age in base $10$ is $32$. Written in base $16$ it is only $20$!\n\nHowever, I cannot choose an arbitrary base when doing this. If my age written in base $b$ contains digits other than $0$ to $9$, then it will be obvious that I am cheating, which defeats the purpose. In addition, if my age written in base $b$ is too small then it would again be obvious that I am cheating.\n\nGiven my age $y$ and a lower bound $\\ell $ on how small I want my age to appear, find the largest base $b$ such that $y$ written in base $b$ contains only decimal digits, and is at least $\\ell $ when interpreted as a number in base $10$.",
    "inputFormat": "The input consists of a single line containing two base 10 integers $y$ ($10 \\le y \\le 10^{18}$ \u2013 yes, I am very old) and $\\ell $ ($10 \\le \\ell \\le y$).",
    "outputFormat": "Display the largest base $b$ as described above.",
    "samples": [
        [
            "32 20\n",
            "16\n"
        ],
        [
            "2016 100\n",
            "42\n"
        ]
    ],
    "hint": "Time limit: 1000 ms, Memory limit: 1048576 kB. \n\n International Collegiate Programming Contest (ACM-ICPC) World Finals 2016",
    "translation": "# \u9898\u76ee\u5927\u610f\n\u6211\u7684\u751f\u65e5\u5feb\u5230\u4e86\uff01\u5509\uff0c\u4f46\u5982\u4eca\u6211\u5df2\u7ecf\u8001\u4e86\uff0c\u6211\u60f3\u91cd\u65b0\u83b7\u5f97\u5e74\u8f7b\u7684\u611f\u89c9\u3002\n\n\u5e78\u8fd0\u7684\u662f\uff0c\u6211\u60f3\u51fa\u4e86\u4e00\u4e2a\u8ba9\u4eba\u611f\u89c9\u66f4\u5e74\u8f7b\u7684\u597d\u65b9\u6cd5\uff1a\u5982\u679c\u6211\u628a\u6211\u7684\u5e74\u9f84\u4ee5\u9002\u5f53\u9009\u62e9\u7684$b$\u8fdb\u5236\u4e66\u5199\uff0c\u90a3\u4e48\u5b83\u770b\u8d77\u6765\u4f1a\u66f4\u5c0f\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u6211\u4ee5$10$\u8fdb\u5236\u4e66\u5199\u7684\u5e74\u9f84\u662f$32$\u5c81\uff1b\u4ee5$16$\u8fdb\u5236\u4e66\u5199\uff0c\u5b83\u53ea\u6709$20$($0x20$)\uff01\n\n\u7136\u800c\uff0c\u5728\u8fd9\u6837\u505a\u65f6\uff0c\u6211\u4e0d\u80fd\u9009\u62e9\u4efb\u610f\u8fdb\u5236\u6570\u3002\u5982\u679c\u4ee5$b$\u8fdb\u5236\u4e3a\u6570\u5199\u7684\u6211\u7684\u5e74\u9f84\u5305\u542b$0-9$\u4ee5\u5916\u7684\u6570\u5b57\uff0c\u90a3\u4e48\u5f88\u660e\u663e\u6211\u5728\u4f5c\u5f0a\uff0c\u8fd9\u8fdd\u80cc\u4e86\u76ee\u7684\u3002\u6b64\u5916\uff0c\u5982\u679c\u6211\u7684\u5e74\u9f84\u7684\u8fdb\u5236\u6570$b$\u592a\u5c0f\uff0c\u90a3\u4e48\u5f88\u660e\u663e\u6211\u5728\u4f5c\u5f0a\u3002\n\n\u5728\u6211\u5e0c\u671b\u6211\u7684\u5e74\u9f84\u770b\u8d77\u6765\u6709\u591a\u5c0f\u7684\u95ee\u9898\u4e0a,\u8003\u8651\u5230\u6211\u7684\u5e74\u9f84$y$\u548c\u4e0b\u9650$l$\uff0c\u627e\u5230\u6700\u5927\u7684\u8fdb\u5236\u6570$b$\uff0c\u8fd9\u6837\u5199\u5728\u57fa\u6570$b$\u4e2d\u7684$y$\u53ea\u5305\u542b\u5341\u8fdb\u5236\u6570\u5b57\uff0c\u5e76\u4e14\u5f53\u5c06\u5176\u770b\u505a\u4e00\u4e2a\u5341\u8fdb\u5236\u6570\u5b57\u65f6\u81f3\u5c11\u662f$l$\u3002\n# \u8f93\u5165\u683c\u5f0f\n\u8f93\u5165\u7531\u4e00\u884c\u7ec4\u6210\uff0c\u5176\u4e2d\u5305\u542b\u4e24\u4e2a$10$\u8fdb\u5236\u7684\u6574\u6570$y$ ($10\\le y\\le10^{18}$ \u2013\u662f\u7684,\u6211\u5f88\u8001\uff09\u548c$l$($10\\le l \\le y$)\n# \u8f93\u51fa\u683c\u5f0f\n\u5982\u4e0a\u6240\u8ff0\uff0c\u8f93\u51fa\u6700\u5927\u8fdb\u5236\u6570$b$\u3002\n# \u8bf4\u660e/\u63d0\u793a\n\u65f6\u95f4\u9650\u5236\uff1a$1s$\uff0c\u5185\u5b58\u9650\u5236\uff1a$1GB$\n\n(\u6d1b\u8c37\u8fd9\u91cc\u5b9e\u9645\u662f$512MB$,\u4f46\u539f\u9898\u662f$1GB$)\n\n$2016\u5e74$\u56fd\u9645\u5927\u5b66\u751f\u7f16\u7a0b\u5927\u8d5b$ACM$-$ICPC$\u4e16\u754c\u603b\u51b3\u8d5b"
}