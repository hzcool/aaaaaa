{
    "description": "\n\nCuriosity is the rover that explores the Gale Crater on Mars. Recently it found an evidence of water in Martian soil, which will make it easier to plan the future manned missions. $\u00a0$\n\nCuriosity can communicate with Earth directly at speeds up to $32 Kbit/s$ , but on average $14$ minutes and $6$ seconds will be required for signals to travel between Earth and Mars.\n\n`You have just seen a stone and applied brakes, but you know that the rover is already passing that stone` -- Matt Heverly, the rover's driver, explains. `So we just plan the route, then write down a list of simple textual commands: move one meter ahead, turn left, make a photo and so on`.\n\nSometimes it is necessary to react very fast to some unexpected events. For example, if the cameras have seen something interesting, then you might want to change the route of the rover to make an additional photo. To do that, you send a substitution command of the form $s/\u2329string\u232a/\u2329replacement\u232a/g$ . This replaces all occurrences of $\u2329string\u232a,$ starting with the leftmost one, to $\u2329replacement\u232a.$\n\nMore formally, if A is a non-empty string and $B$ is a string, then to apply the substitution command $s/A/B/g$ to a string $S$ , you should do the following:\n\nFind the leftmost occurrence of A in $S$ , such that $S =$ SL $+$ A $+$ SR.\n\nIf there is no such occurrence, stop. Then, $S$ is the answer.\n\nLet $R$ be the result of applying $s/A/B/g$ to SR.\n\nThe answer is SL $+ B + R$ .\n\nThis means that:\n\nIf there are two overlapping occurrences of A in $S$ , only the leftmost one is replaced. For example, applying $`s/aba/c/g`$ to `abababa` yields `cbc`: after replacing the first occurrence of `aba` the string turns to `cbaba`, and only the last occurrence of `aba` can be replaced after that.\n\nNo substitution uses the results of previous substitutions. For example, applying $`s/a/ab/g`$ to `a` yields `ab`, applying $`s/a/ba/g`$ to `a` yields `ba`.\n\nYou know that the longer is the command, the bigger is the time necessary to transmit it. So, you have to write a program that finds shortest command that transforms the initial string to the final string.\n\n",
    "inputFormat": "\n\nThe first line contains the initial and the final strings. Both strings are non-empty and their lengths do not exceed $2000$ characters. The strings contain only English letters, spaces and punctuation signs (commas, colons, semicolons and hyphens: $\u2018,', \u2018:', \u2018;', \u2018-').$ The given strings are not equal.\n\n",
    "outputFormat": "\n\nOutput the substitution command that transforms initial string to final string and has the minimum length. If there are several shortest substitution commands, output any of them.\n\n",
    "samples": [
        [
            "move left, move right; move up\nmove left, move down, move up\n",
            "s/right;/down,/g\n"
        ],
        [
            "If not found: move x; else move -x\nIf found: move x; else move -x\n",
            "s/ not//g\n"
        ],
        [
            "abababa\ncbc\n",
            "s/aba/c/g\n"
        ]
    ],
    "hint": "Time limit: 2 s, Memory limit: 256 MB. \n\n"
}