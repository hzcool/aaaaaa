{
    "description": "The cows have taken up the game of checkers with a vengeance.\n\nUnfortunately, despite their unlimited enjoyment of playing, they are terrible at the endgame and want your help.\n\nGiven an NxN (4 <= N <= 500) checkboard, determine the optimal set of moves (i.e., smallest number of moves) to end the game on the next move. Checkers move only on the '+' squares and capture by jumping 'over' an opponent's piece in the traditional way. The piece is removed as soon as it is jumped.  See the example below where N=8:\n\n```cpp\n- + - + - + - +  The K's mark Bessie's kings; the o's represent the \n+ - + - + - + -  opponent's checkers. Bessie always moves next. The \n- + - K - + - +  Kings jump opponent's checkers successively in any \n+ - + - + - + -  diagonal direction (and removes pieces when jumped). \n- o - o - + - + \n+ - K - + - + -  For this board, the best solution requires the lower \n- o - + - + - +  left King to jump successively across all three of the \n+ - K - + - K -  opponents' checkers, thus ending the game (moving K marked as >K<): \nOriginal          After move 1       After move 2        After move 3 \n- + - + - + - +     - + - + - + - +    - + - + - + - +     - + - + - + - + \n+ - + - + - + -     + - + - + - + -    + - + - + - + -     + - + - + - + - \n- + - K - + - +     - + - K - + - +    - + - K - + - +     - + - K - + - + \n+ - + - + - + -     + - + - + - + -    + ->K<- + - + -     + - + - + - + - \n- o - o - + - +     - o - o - + - +    - + - o - + - +     - + - + - + - + \n+ - K - + - + -    >K<- K - + - + -    + - K - + - + -     + - K ->K<- + - \n- o - + - + - +     - + - + - + - +    - + - + - + - +     - + - + - + - + \n+ ->K<- + - K -     + - + - + - K -    + - K - + - K -     + - K - + - K - \n\nThe moves traversed these squares: \n1 2 3 4 5 6 7 8           R C \n1 - + - + - + - +    start: 8 3 \n2 + - + - + - + -    move:  6 1 \n3 - + - K - + - +    move:  4 3 \n4 + - * - + - + -    move:  6 5 \n5 - o - o - + - + \n6 * - K - * - + - \n7 - o - + - + - + \n8 + - K - + - K - \n```\nWrite a program to determine the game-ending sequence for an NxN input board if it exists. There is at least a king and at least one opponent piece on the board. The king can jump a piece on every move of the optimal solution.\n\nPOINTS: 330\n\n\u5976\u725b\u4eec\u5728\u75af\u72c2\u5730\u73a9\u7740\u897f\u6d0b\u8df3\u68cb\uff0c\u4f46\u662f\u975e\u5e38\u4e0d\u5e78\uff0c\u4e0d\u7ba1\u4ed6\u4eec\u591a\u4e48\u4eab\u53d7\uff0c\u4ed6\u4eec\u8fd8\u662f\u5728\u6700\u540e\u9636\u6bb5\u9047 \u5230\u4e86\u53ef\u6015\u7684\u9ebb\u70e6\uff0c\u4ed6\u4eec\u9700\u8981\u4f60\u7684\u5e2e\u52a9.\n\n\u6709\u4e00\u4e2aN x N(4 < W < 500)\u8df3\u68cb\u68cb\u76d8\uff0c\u8bf7\u786e\u5b9a\u6700\u4f73\u7684\u7ed3\u675f\u6bd4\u8d5b\u6b65\u9aa4.\u8df3\u68cb\u5b50\u4ec5\u4ec5\u80fd\u591f\u5728\u6807\u8bb0 \u6709\u201c + \u201d\u7684\u683c\u5b50\u91cc\u505c\u7559\uff0c\u901a\u8fc7\u201c\u98de\u8dc3\u201d\u4fd8\u83b7\u5bf9\u65b9\u7684\u68cb\u5b50.\u521a\u521a\u8df3\u8fc7\u7684\u683c\u5b50\u5c06\u88ab\u7acb\u5373\u5c01\u9501.\u8bf7\u770b\u4e0b\u9762 \u7684\u4f8b\u5b50\uff1a\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u8fd9\u662f\u4e00\u5f20\u8fb9\u957f\u4e3a8\u7684\u68cb\u76d8\u56fe.\u201cK\u201d\u4ee3\u8868\u8d1d\u831c\u7684\u738b\uff1b\u201c0\u201d\u4ee3\u8868\u5bf9\u624b\u7684\u68cb\u5b50.\u738b\u9700\u8981\u659c\u7740\u8fde\u7eed\u7684 \u8df3\u8fc7\u5bf9\u7684\u68cb\u5b50\uff0c\u8df3\u8fc7\u7684\u683c\u5b50\u5c06\u4f1a\u88ab\u5c01\u9501.\u5bf9\u4e8e\u8fd9\u4e2a\u60c5\u51b5\uff0c\u83b7\u80dc\u7684\u65b9\u6848\u9700\u8981\u6700\u4e0b\u9762\u3001\u6700\u5de6\u8fb9\u7684\u738b \u8fde\u7eed\u7684\u8df3\u8fc7\u4e09\u4e2a\u5bf9\u65b9\u7684\u68cb\u5b50\uff08\u5982\u4e0b\u56fe\u6240\u793a\uff09\uff0c\u6e38\u620f\u56e0\u6b64\u7ed3\u675f.\n\n\u8bf7\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u7ed9\u51fa\u8f93\u5165\u7684\u68cb\u76d8\u7684\u7ed3\u675f\u6e38\u620f\u6b65\u9aa4\uff08\u5b58\u5728\u65f6\uff0c\u662f\u552f\u4e00\u7684\uff09.\u81f3\u5c11\u6709\u4e00\u4e2a\u738b\u548c\u4e00 \u4e2a\u5bf9\u624b\u68cb\u5b50\u5728\u68cb\u76d8\u4e0a.\n\n\u65e0\u89e3\u7684\u65f6\u5019\u5e94\u5f53\u8f93\u51faimpossible",
    "inputFormat": "\\* Line 1: A single integer: N\n\n\\* Lines 2..N+1: Line i+1 contains N characters (each one of: '-', '+', 'K', or 'o') that represent row i of a proper checkboard. Line 2 always begins with '-'.\n",
    "outputFormat": "\\* Lines 1..?: If there is no winning sequence of jump, output\n\n'impossible' on a line by itself. If such a sequence exists, each line contains two space-separated integers that represent successive locations of a king whose moves will win the game. Any such sequence is acceptable.\n",
    "samples": [
        [
            "8 \n-+-+-+-+ \n+-+-+-+- \n-+-K-+-+ \n+-+-+-+- \n-o-o-+-+ \n+-K-+-+- \n-o-+-+-+ \n+-K-+-K- \n",
            "8 3 \n6 1 \n4 3 \n6 5 \n"
        ]
    ],
    "hint": ""
}