{
    "description": "Place-Y Technology Corp. plans to launch a new space station soon. The company\nCEO is known for being obsessed with perfection. For example, he insists that all\nthe outer surfaces of the space station are regularly polished and cleaned of\nwhat he calls ``space debris,'' mainly for the station to appear good in photos.\nThe engineering team tried but failed to convince the CEO that this was not needed. So instead they\ndeveloped an innovative technology to maintain the surfaces while minimizing human\noperations outside the station. The maintenance is performed by several\nsmall robots moving over the space station surface, just like robotic\nvacuum cleaners. Before their first flight, Place-Y needs to assess the risks of\ncollision during the operation of the robots. And this is exactly where you step\nin.\n\nFor the purposes of this problem, we model the space station as a collection of\naxis-aligned unit cubes (not necessarily connected). Each robot starts at time $t=0$ in the center of an exposed face\nof one of the station's unit cubes (that is, a face which is not shared by a second station\ncube). The robot is oriented in one of the four directions parallel to an edge of the cube face.\nEvery time unit, the robot moves straight ahead to another cube face, possibly\npivoting $90$ degrees across the space station edges so that it always maintains\ncontact with the station.  Note that if two cubes share an edge, the robot cannot\nslip between them (there is no gap).\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/sh28cno8.png)\n\nGiven the layout of the station and starting\npositions of all the cleaning robots, determine the time of the earliest collision (if any).  The time a collision occurs is either the time unit when two or more robots are on the interior of the same cube\nface or the time unit when two robots attempt to swap locations (see Sample Input 3 for the\nlatter case).",
    "inputFormat": "The first line of input contains two integers $n$ and $k$, where $n$\n($1 \\le n \\le 100$) is the number of regions describing the space station shape,\nand $k$ ($0 \\le k \\le 100$) is the number of robots on the surface.\n\nEach of the following $n$ lines contains six integer coordinates $x_1$, $y_1$, $z_1$,\n$x_2$, $y_2$, and $z_2$ ($0 \\le x_1 < x_2 \\le 10^6$, $0 \\le y_1 < y_2 \\le 10^6$,\n$0 \\le z_1 < z_2 \\le 10^6$) describing one region and denoting that all the points\n$x,y,z$ satisfying $x_1 \\le x \\le x_2$, $y_1 \\le y \\le y_2$,\n$z_1 \\le z \\le z_2$ are part of the space station. Note that some\nunit cubes may be included in more than one region.\n\nThen follow $k$ lines, each describing the starting position of one robot.  Such\na line contains three coordinates $x$, $y$, and $z$, and two directions $\\vec{f}$\nand $\\vec{d}$. The coordinates specify that the robot starts at a face of the\nunit cube $(x,y,z) - (x+1,y+1,z+1)$. The particular face is determined by\n$\\vec{f}$ and the initial direction of movement is determined by $\\vec{d}$.\nBoth $\\vec{f}$ and $\\vec{d}$ are specified by one of the six strings $\\tt x+$, $\\tt x-$, $\\tt y+$,\n$\\tt y-$, $\\tt z+$, or $\\tt z-$, where $\\tt x+$ designates the positive direction\nof the x-axis $(1,0,0)$, and so on. The axis letter in $\\vec{f}$ will be different\nfrom the axis letter in $\\vec{d}$. It is guaranteed that the starting cube\nbelongs to the space station and the given face is an exposed face.",
    "outputFormat": "Output the time of the first collision. If there will never be a collision,\noutput $\\tt ok$.",
    "samples": [
        [
            "9 2\n1 1 1 7 7 7\n0 0 0 3 3 3\n5 0 0 8 3 3\n0 5 0 3 8 3\n0 0 5 3 3 8\n5 5 0 8 8 3\n5 0 5 8 3 8\n0 5 5 3 8 8\n5 5 5 8 8 8\n0 1 0 z- x+\n3 5 1 z- y+",
            "44"
        ],
        [
            "1 3\n0 0 0 1 1 1\n0 0 0 x+ z+\n0 0 0 y+ x+\n0 0 0 z- y+",
            "ok"
        ],
        [
            "1 2\n0 0 0 2 1 1\n0 0 0 y+ x+\n1 0 0 y+ x-",
            "0"
        ]
    ],
    "hint": "",
    "translation": "### \u8f93\u5165\u683c\u5f0f\n\n\u6bcf\u4e2a\u673a\u5668\u4eba\u6bcf\u6b21\u542f\u52a8\u4e00\u5f00\u59cbt=0\n\u6bcf\u6b21\u673a\u5668\u4eba\u5230\u53e6\u4e00\u4e2a\u9762\uff0c\u53ef\u80fd\u4f1a\u65cb\u8f6c90\u00b0\u4e24\u4e2a\u7acb\u65b9\u4f53\u5171\u4eab\u4e00\u6761\u8fb9\u65f6\uff0c\u673a\u5668\u4eba\u65e0\u6cd5\u5728\u4e4b\u95f4\u8d70\u52a8\u3002\n\n\u7b2c\u4e00\u884c\u8f93\u5165n,k,n\u662f\u7a7a\u95f4\u7ad9\u5f62\u72b6\u7684\u533a\u57df\u6570,k\u662f\u673a\u5668\u4eba\u7684\u6570\u91cf\u3002\n\n\u63a5\u4e0b\u6765n\u884c6\u4e2a\u6570\u636e\u5206\u522b\u662f\uff1a($0 \\le x_1 < x_2 \\le 10^6$, $0 \\le y_1 < y_2 \\le 10^6$,\n$0 \\le z_1 < z_2 \\le 10^6$) \n\n\u662f\u4e00\u4e2a\u533a\u57df\u4e2d\u7684\u6240\u6709\u70b9\u3002\u6ee1\u8db3$x_1 \\le x \\le x_2$, $y_1 \\le y \\le y_2$,\n$z_1 \\le z \\le z_2$\n\u8bf7\u6ce8\u610f\uff0c\u4e00\u4e9b\u7acb\u65b9\u4f53\u53ef\u80fd\u5305\u542b\u5728\u591a\u4e2a\u533a\u57df\u4e2d\u3002\n\n\u63a5\u4e0b\u6765k\u884c\uff0c\u6bcf\u4e00\u884c\u4ee3\u8868\u673a\u5668\u4eba\u7684\u4f4d\u7f6e\u3002\u6709x,y,z\u4ee5\u53ca\u4e24\u4e2a\u65b9\u5411f,d,\u6307\u5b9a\u9762\u7531f\u786e\u5b9a,\u521d\u59cb\u79fb\u52a8\u65b9\u5411\u7531d\u786e\u5b9a.\u516d\u79cd\u64cd\u4f5cx+,x-,y+,y-,z+,z-.\nx+\u8868\u793a\uff081,0,0\uff09\u7684\u65b9\u5411\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002f\u4e0d\u7b49\u4e8ed.\n\n\u4fdd\u8bc1\u8d77\u59cb\u7acb\u65b9\u4f53\u5c5e\u4e8e\u7a7a\u95f4\u7ad9\uff0c\u5e76\u4e14\u7ed9\u5b9a\u7684\u521d\u59cb\u9762\u662f\u5916\u9762\u3002\n\n### \u8f93\u51fa\u683c\u5f0f\n\u8f93\u51fa\u7b2c\u4e00\u6b21\u78b0\u649e\u7684\u65f6\u95f4\u3002\u5982\u679c\u6c38\u8fdc\u4e0d\u4f1a\u53d1\u751f\u51b2\u7a81\uff0c\u5219\u8f93\u51faok"
}