{
    "description": "Farmer John continues his never-ending quest to keep the cows fit by having them exercise on various cow paths that run through the pastures. These cow paths can be represented as a set of vertices connected with bidirectional edges so that each pair of vertices has exactly one simple path between them. In the abstract, their layout bears a remarkable resemblance to a tree. Surprisingly, each edge (as it winds its way through the pastures) has the same length.\n\nFor any given set of cow paths, the canny cows calculate the longest possible distance between any pair of vertices on the set of cowpaths and call it the pathlength. If they think this pathlength is too large, they simply refuse to exercise at all.\n\nFarmer John has mapped the paths and found V (2 <= V <= 100,000) vertices, conveniently numbered from 1..V. In order to make shorter cowpaths, he can block the path between any two vertices, thus creating more sets of cow paths while reducing the pathlength of both cowpath sets.\n\nStarting from a single completely connected set of paths (which have the properties of a tree), FJ can block S (1 <= S <= V-1) paths, creating S+1 sets of paths. Your goal is to compute the best paths he can create so that the largest pathlength of all those sets is minimized.\n\nFarmer John has a list of all V-1 edges in his tree, each described by the two vertices A\\_i (1 <= A\\_i <= V) and B\\_i (1 <= B\\_i <= V; A\\_i != B\\_i) that it connects.\n\nConsider this rather linear cowpath set (a tree with 7 vertices):\n\n1---2---3---4---5---6---7\n\nIf FJ can block two paths, he might choose them to make a map like this:\n\n1---2 | 3---4 | 5---6---7 \nwhere the longest pathlength is 2, which would be the answer in this case. He can do no better than this.\n\nTIME LIMIT: 2 seconds\n\nMEMORY LIMIT: 32 MB\n\n \nFarmer John\u4e3a\u4e86\u4fdd\u6301\u5976\u725b\u4eec\u7684\u5065\u5eb7\uff0c\u8ba9\u53ef\u601c\u7684\u5976\u725b\u4eec\u4e0d\u505c\u5728\u7267\u573a\u4e4b\u95f4 \u7684\u5c0f\u8def\u4e0a\u5954\u8dd1\u3002\u8fd9\u4e9b\u5976\u725b\u7684\u8def\u5f84\u96c6\u5408\u53ef\u4ee5\u88ab\u8868\u793a\u6210\u4e00\u4e2a\u70b9\u96c6\u548c\u4e00\u4e9b\u8fde\u63a5 \u4e24\u4e2a\u9876\u70b9\u7684\u53cc\u5411\u8def\uff0c\u4f7f\u5f97\u6bcf\u5bf9\u70b9\u4e4b\u95f4\u6070\u597d\u6709\u4e00\u6761\u7b80\u5355\u8def\u5f84\u3002\u7b80\u5355\u7684\u8bf4\u6765\uff0c \u8fd9\u4e9b\u70b9\u7684\u5e03\u5c40\u5c31\u662f\u4e00\u68f5\u6811\uff0c\u4e14\u6bcf\u6761\u8fb9\u7b49\u957f\uff0c\u90fd\u4e3a1\u3002 \u5bf9\u4e8e\u7ed9\u5b9a\u7684\u4e00\u4e2a\u5976\u725b\u8def\u5f84\u96c6\u5408\uff0c\u7cbe\u660e\u7684\u5976\u725b\u4eec\u4f1a\u8ba1\u7b97\u51fa\u4efb\u610f\u70b9\u5bf9\u8def\u5f84\u7684\u6700\u5927\u503c\uff0c \u6211\u4eec\u79f0\u4e4b\u4e3a\u8fd9\u4e2a\u8def\u5f84\u96c6\u5408\u7684\u76f4\u5f84\u3002\u5982\u679c\u76f4\u5f84\u592a\u5927\uff0c\u5976\u725b\u4eec\u5c31\u4f1a\u62d2\u7edd\u953b\u70bc\u3002 Farmer John\u628a\u6bcf\u4e2a\u70b9\u6807\u8bb0\u4e3a1..V (2 <= V <= 100,000)\u3002\u4e3a\u4e86\u83b7\u5f97\u66f4\u52a0\u77ed \u7684\u76f4\u5f84\uff0c\u4ed6\u53ef\u4ee5\u9009\u62e9\u5c01\u9501\u4e00\u4e9b\u5df2\u7ecf\u5b58\u5728\u7684\u9053\u8def\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5f97\u5230\u66f4\u591a\u7684\u8def\u5f84\u96c6\u5408\uff0c \u4ece\u800c\u51cf\u5c0f\u4e00\u4e9b\u8def\u5f84\u96c6\u5408\u7684\u76f4\u5f84\u3002 \u6211\u4eec\u4ece\u4e00\u68f5\u6811\u5f00\u59cb\uff0cFJ\u53ef\u4ee5\u9009\u62e9\u5c01\u9501S (1 <= S <= V-1)\u6761\u53cc\u5411\u8def\uff0c\u4ece\u800c\u83b7\u5f97 S+1\u4e2a\u8def\u5f84\u96c6\u5408\u3002\u4f60\u8981\u505a\u7684\u662f\u8ba1\u7b97\u51fa\u6700\u4f73\u7684\u5c01\u9501\u65b9\u6848\uff0c\u4f7f\u5f97\u4ed6\u5f97\u5230\u7684\u6240\u6709\u8def\u5f84\u96c6\u5408 \u76f4\u5f84\u7684\u6700\u5927\u503c\u5c3d\u53ef\u80fd\u5c0f\u3002 Farmer John\u544a\u8bc9\u4f60\u6240\u6709V-1\u6761\u53cc\u5411\u9053\u8def\uff0c\u6bcf\u6761\u8868\u8ff0\u4e3a\uff1a\u9876\u70b9A\\_i (1 <= A\\_i <= V) \u548c B\\_i (1 <= B\\_i <= V; A\\_i!= B\\_i)\u8fde\u63a5\u3002\n",
    "inputFormat": "\\* Line 1: Two space separated integers: V and S\n\n\\* Lines 2..V: Two space separated integers: A\\_i and B\\_i\n",
    "outputFormat": "\\* Line 1: A single integer that is the best maximum pathlength FJ can achieve with S blocks\n",
    "samples": [
        [
            "7 2 \n6 7 \n3 4 \n6 5 \n1 2 \n3 2 \n4 5 \n",
            "2 \n"
        ]
    ],
    "hint": ""
}