{
    "description": "Bessie, always wishing to optimize her life, has realized that she really enjoys visiting F (1 <= F <= P) favorite pastures F\\_i of the P (1 <= P <= 500; 1 <= F\\_i <= P) total pastures (conveniently\n\nnumbered 1..P) that compose Farmer John's holdings.\n\nBessie knows that she can navigate the C (1 <= C <= 8,000) bidirectional cowpaths (conveniently numbered 1..C) that connect various pastures to travel to any pasture on the entire farm. Associated with each path P\\_i is a time T\\_i (1 <= T\\_i <= 892) to traverse that path (in either direction) and two path endpoints a\\_i and b\\_i (1 <= a\\_i <= P; 1 <= b\\_i <= P).\n\nBessie wants to find the number of the best pasture to sleep in so that when she awakes, the average time to travel to any of her F favorite pastures is minimized.\n\nBy way of example, consider a farm laid out as the map below shows, where \\*'d pasture numbers are favorites. The bracketed numbers are times to traverse the cowpaths.\n\n```cpp\n\n            1*--[4]--2--[2]--3\n                     |       |\n                    [3]     [4]\n                     |       |\n                     4--[3]--5--[1]---6---[6]---7--[7]--8*\n                     |       |        |         |\n                    [3]     [2]      [1]       [3]\n                     |       |        |         |\n                    13*      9--[3]--10*--[1]--11*--[3]--12*\n```\nThe following table shows distances for potential 'best place' of pastures 4, 5, 6, 7, 9, 10, 11, and 12:\n\n```cpp\n      * * * * * * Favorites * * * * * *\n Potential      Pasture Pasture Pasture Pasture Pasture Pasture     Average\nBest Pasture       1       8      10      11      12      13        Distance\n------------      --      --      --      --      --      --      -----------\n    4              7      16       5       6       9       3      46/6 = 7.67\n    5             10      13       2       3       6       6      40/6 = 6.67\n    6             11      12       1       2       5       7      38/6 = 6.33\n    7             16       7       4       3       6      12      48/6 = 8.00\n    9             12      14       3       4       7       8      48/6 = 8.00\n   10             12      11       0       1       4       8      36/6 = 6.00 ** BEST\n   11             13      10       1       0       3       9      36/6 = 6.00\n   12             16      13       4       3       0      12      48/6 = 8.00\n\n```\nThus, presuming these choices were the best ones (a program would have to check all of them somehow), the best place to sleep is pasture 10.\n\n\u7ea6\u7ff0\u62e5\u6709P(1<=P<=500)\u4e2a\u7267\u573a.\u8d1d\u831c\u7279\u522b\u559c\u6b22\u5176\u4e2d\u7684F\u4e2a.\u6240\u6709\u7684\u7267\u573a \u7531C(1 < C<=8000)\u6761\u53cc\u5411\u8def\u8fde\u63a5\uff0c\u7b2ci\u8def\u8fde\u63a5\u7740ai,bi\uff0c\u9700\u8981Ti(1<=Ti< 892)\u5355 \u4f4d\u65f6\u95f4\u6765\u901a\u8fc7.\n\n\u4f5c\u4e3a\u4e00\u53ea\u603b\u60f3\u4f18\u5316\u81ea\u5df1\u751f\u6d3b\u65b9\u5f0f\u7684\u5976\u725b\uff0c\u8d1d\u831c\u559c\u6b22\u81ea\u5df1\u67d0\u4e00\u5929\u9192\u6765\uff0c\u5230\u8fbe\u6240\u6709\u90a3F\u4e2a\u5979\u559c\u6b22\u7684 \u7267\u573a\u7684\u5e73\u5747\u9700\u65f6\u6700\u5c0f.\u90a3\u5979\u524d\u4e00\u5929\u5e94\u8be5\u7761\u5728\u54ea\u4e2a\u7267\u573a\u5462\uff1f\u8bf7\u5e2e\u52a9\u8d1d\u831c\u627e\u5230\u8fd9\u4e2a\u6700\u4f73\u7267\u573a.\n\n\n\u6b64\u53ef\u89c1\uff0c\u7267\u573a10\u5230\u6240\u6709\u8d1d\u831c\u559c\u6b22\u7684\u7267\u573a\u7684\u5e73\u5747\u8ddd\u79bb\u6700\u5c0f\uff0c\u4e3a\u6700\u4f73\u7267\u573a.\n\n",
    "inputFormat": "\\* Line 1: Three space-separated integers: P, F, and C\n\n\\* Lines 2..F+1: Line i+2 contains a single integer: F\\_i\n\n\\* Lines F+2..C+F+1: Line i+F+1 describes cowpath i with three\n\nspace-separated integers: a\\_i, b\\_i, and T\\_i\n",
    "outputFormat": "\\* Line 1: A single line with a single integer that is the best pasture in which to sleep. If more than one pasture is best, choose the smallest one.\n",
    "samples": [
        [
            "13 6 15 \n11 \n13 \n10 \n12 \n8 \n1 \n2 4 3 \n7 11 3 \n10 11 1 \n4 13 3 \n9 10 3 \n2 3 2 \n3 5 4 \n5 9 2 \n6 7 6 \n5 6 1 \n1 2 4 \n4 5 3 \n11 12 3 \n6 10 1 \n7 8 7 \n",
            "10 \n"
        ]
    ],
    "hint": "As the problem statement\n\n\nAs the problem statement.\n"
}