{
    "description": "To show their spirit for the holidays, the cows would like to paint a picture! Their picture will be represented as an R x C (1 <= R <= 50,000; 1 <= C <= 15) grid of unit squares, each of which is either 0 or 1. The grid rows are conveniently numbered 1..R; the columns are numbered 1..C.\n\nBeing pressed for time, the cows have asked their neighbors north of the border for help. Under the very helpful supervision of Canmuu the moose, they constructed a machine to throw paint at the picture in entire buckets! Beginning with all 0's in the picture grid, the machine splashes a certain paint color (either 0 or 1) over a\n\nrectangle in the grid. In particular, Canmuu suggested that they perform Q (1 <= Q <= 10,000) operations; operation i consists of five integers R1\\_i, R2\\_i, C1\\_i, C2\\_i, and X\\_i (1 <= R1\\_i <= R2\\_i <= R; 1 <= C1\\_i <= C2\\_i <= C; 0 <= X\\_i <= 1), meaning that the cows will paint each unit square with a row index between R1\\_i and R2\\_i, inclusive, and a column index between C1\\_i and C2\\_i, inclusive, with color X\\_i.\n\nHowever, painting a picture like this is quite prone to mistakes. So Canmuu has enlisted you to determine, after each operation, the number of unit squares in the grid which are the correct color.\n\nMEMORY LIMIT: 64 MB\n\nTIME LIMIT: 1.5 seconds\n\n[USACO09HOL]\u5047\u671f\u7ed8\u753bHoliday Painting\n\n\u4e3a\u4e86\u8868\u8fbe\u5047\u65e5\u7684\u6fc0\u60c5\uff0c\u5976\u725b\u4eec\u8981\u753b\u4e00\u5e45\u5de8\u5927\u7684\u753b.\u753b\u5e03\u53ef\u4ee5\u5206\u6210R\\*C\u4e2a\u65b9\u683c\uff0c\u4ece\u4e0a\u5230\u4e0b\u7f16\u4e3a1\u5230R\u884c\uff0c\u4ece\u5de6\u5230\u53f3\u7f16\u4e3a1\u5230C\u5217.\u4f5c\u753b\u7684\u989c\u8272\u6709\u4e24\u79cd\uff0c\u767d\u8272\uff08\u75280\uff09\u6216\u8005\u9ed1\u8272\uff08\u75281\u8868\uff09.\n\n\u7531\u4e8e\u65f6\u95f4\u7d27\u8feb\uff0c\u5976\u725b\u4eec\u4e0d\u5f97\u4e0d\u8bf7\u6559\u5317\u9762\u7684\u90bb\u5c45\uff0c\u5361\u95e8.\u5361\u95e8\u9001\u7ed9\u5979\u4eec\u4e00\u53f0\u673a\u5668\uff0c\u4e00\u6b21\u64cd\u4f5c\u53ea\u8f93\u51655\u4e2a\u53c2\u6570R1\\_i, R2\\_i, C1\\_i, C2\\_i, and X\\_i (1 <= R1\\_i <= R2\\_i <= R; 1 <= C1\\_i <= C2\\_i <= C; 0 <= X\\_i <= 1),\n\n\u628aR1\u884c\u5230\u884cR2\uff0c\u5217C1\u5230\u5217C2\u7684\u4e00\u4e2a\u5927\u957f\u65b9\u5f62\u6d82\u6210\u8272.\u5728\u6240\u6709\u64cd\u4f5c\u8fd8\u672a\u8fdb\u884c\u7684\u65f6\u5019\uff0c\u753b \u5e03\u662f\u767d\u8272\u7684.\n\n\u5976\u725b\u4eec\u4e00\u5171\u8981\u8fdb\u884cQ\u6b21\u64cd\u4f5c.\u56e0\u4e3a\u8fd9\u6837\u7684\u753b\u6cd5\u603b\u8981\u51fa\u4e9b\u5dee\u9519\uff0c\u6240\u4ee5\u5976\u725b\u4eec\u60f3 \u8bf7\u4f60\u7b97\u7b97\uff0c\u6bcf\u4e00\u6b21\u64cd\u4f5c\u8fc7\u540e\uff0c\u4e00\u5171\u6709\u591a\u5c11\u4e2a\u65b9\u683c\u4e0e\u5979\u4eec\u7684\u76ee\u6807\u753b\u91cc\u5bf9\u5e94\u7684\u65b9\u683c\u662f\u540c\u8272\u7684.\n",
    "inputFormat": "\\* Line 1: Three space-separated integers: R, C, and Q\n\n\\* Lines 2..R+1: Line i+1 contains C characters, each '0' or '1', denoting the i-th row of the grid in the obvious way.\n\n\\* Lines R+2..R+Q+1: Line R+i+1 contains five space-separated integers representing a paint operation: R1\\_i, R2\\_i, C1\\_i, C2\\_i, and X\\_i\n",
    "outputFormat": "\\* Lines 1..Q: On line i+1, print a single integer representing the number of matching unit squares after the i-th operation.\n",
    "samples": [
        [
            "17 15 10 \n111111101111111 \n111111000111111 \n111110000011111 \n111100000001111 \n111000000000111 \n111100000001111 \n111000000000111 \n110000000000011 \n111000000000111 \n110000000000011 \n100000000000001 \n110000000000011 \n100000000000001 \n000000000000000 \n111111000111111 \n111111000111111 \n111111000111111 \n5 8 2 14 1 \n8 17 3 7 1 \n4 5 10 15 0 \n7 16 12 14 1 \n2 17 13 14 0 \n2 6 2 3 1 \n13 14 4 8 1 \n3 6 6 7 1 \n1 16 10 11 0 \n7 16 10 10 0 \n",
            "113 \n94 \n95 \n91 \n87 \n93 \n91 \n87 \n93 \n93 \n"
        ]
    ],
    "hint": "The cows want to paint a picture of a holiday tree\n\n\nAfter the first operation, the picture grid looks as follows:\n\n000000000000000\n\n000000000000000\n\n000000000000000\n\n000000000000000\n\n011111111111110\n\n011111111111110\n\n011111111111110\n\n011111111111110\n\n000000000000000\n\n000000000000000\n\n000000000000000\n\n000000000000000\n\n000000000000000\n\n000000000000000\n\n000000000000000\n\n000000000000000\n\n000000000000000\n\nThere are 113 unit squares which match the corresponding square in the tree image; they are denoted below by an 'x' (the other bits are shown as they appear after the first paint splash):\n\n0000000x0000000\n\n000000xxx000000\n\n00000xxxxx00000\n\n0000xxxxxxx0000\n\n0xx111111111xx0\n\n0xxx1111111xxx0\n\n0xx111111111xx0\n\n0x11111111111x0\n\n000xxxxxxxxx000\n\n00xxxxxxxxxxx00\n\n0xxxxxxxxxxxxx0\n\n00xxxxxxxxxxx00\n\n0xxxxxxxxxxxxx0\n\nxxxxxxxxxxxxxxx\n\n000000xxx000000\n\n000000xxx000000\n\n000000xxx000000\n"
}