{
    "description": "\n\nIt is a sunny day in spring and you are about to meet Patrick, a close friend and former partner in crime. Patrick lost most of his money betting on programming contests, so he needs to pull off another job. For this he needs your help, even though you have retired from a life of crime. You are reluctant at first, as you have no desire to return to your old criminal ways, but you figure there is no harm in listening to his plan.\n\nThere is a shipment of expensive consumer widgets in a nearby warehouse and Patrick intends to steal as much of it as he can. This entails finding a way into the building, incapacitating security guards, passing through various arrays of laser beams $-$ you know, the usual heist techniques. However, the heart of the warehouse has been equipped with a security system that Patrick cannot disable. This is where he needs your help.\n\nThe shipment is stored in large cubical crates, all of which have the same dimensions. The crates are stacked in neat piles, forming a three-dimensional grid. The security system takes pictures of the piles once per hour using three cameras: a front camera, a side camera and a top camera. The image from the front camera shows the height of the tallest pile in each column, the image from the side camera shows the height of the tallest pile in each row, and the image from the top camera shows whether or not each pile is empty. If the security system detects a change in any of the images, it sounds an alarm.\n\nOnce Patrick is inside, he will determine the heights of the piles and send them to you. Figure C.1 shows a possible layout of the grid and the view from each of the cameras.\n\n![](https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/14635/1.png)\n\nFigure C.1 : Grid of heights and the corresponding camera views.\n\n![](https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/14635/2.png)\n\nFigure C.2 : Possible grid of heights after the heist\n\nPatrick wants to steal as many crates as possible. Since he cannot disable the security system, he plans to fool it by arranging the remaining crates into piles so that the next set of camera images are the same. In the above example, it is possible to steal nine crates. Figure C.2 shows one possible post-heist configuration that appears identical to the security system.\n\nPatrick asks you to help him determine the maximum number of crates that can be stolen while leaving a configuration of crates that will fool the security system. Will you help him pull off this final job?\n\n",
    "inputFormat": "\n\nThe first line of input contains two integers $r (1 \\le r \\le 100)$ and $c (1 \\le c \\le 100)$ , the number of rows and columns in the grid, respectively. Each of the following $r$ lines contains $c$ integers, the heights (in crates) of the piles in the corresponding row. All heights are between $0$ and $10^{9}$ inclusive.\n\n",
    "outputFormat": "\n\nDisplay the maximum number of crates that can be stolen without being detected.\n\n",
    "samples": [
        [
            "5 5\n1 4 0 5 2\n2 1 2 0 1\n0 2 3 4 4\n0 3 0 3 1\n1 2 2 1 1\n",
            "9\n"
        ],
        [
            "2 3\n50 20 3\n20 10 3\n",
            "30\n"
        ]
    ],
    "hint": "Time limit: 1 s, Memory limit: 512 MB. \n\n",
    "translation": "\u7ed9\u5b9a\u4e00\u4e2a $r \\times c$ \u7684\u5e73\u9762\uff0c\u5728\u4e0a\u9762\u6446\u6709\u4e00\u4e9b\u7bb1\u5b50\u3002\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4ed6\u7684\u4e09\u89c6\u56fe\uff08\u5982\u4e0b\u56fe\uff0c\u5de6\u8fb9\u77e9\u9635\u4e0a\u7684\u503c\u4e3a\u5e73\u9762\u4e0a\u6bcf\u4e00\u4f4d\u6446\u653e\u7684\u7bb1\u5b50\u4e2a\u6570\uff0c\u53f3\u8fb9\u4e09\u4e2a\u89c6\u56fe\u4e3a\u6b63\u89c6\u56fe\uff0c\u4fef\u89c6\u56fe\uff0c\u5de6\u89c6\u56fe\uff09\uff1a\n\n![](https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/14635/1.png)\n\n\u4f60\u53ef\u4ee5\u62ff\u8d70\u4e00\u4e9b\u7bb1\u5b50\uff0c\u548c\u91cd\u65b0\u6392\u5217\u8fd9\u4e9b\u7bb1\u5b50\u7684\u4f4d\u7f6e\uff0c\u4f60\u60f3\u77e5\u9053\uff0c\u6700\u591a\u80fd\u62ff\u8d70\u591a\u5c11\u4e2a\u7bb1\u5b50\uff0c\u4f7f\u5f97\u8fd9\u4e9b\u7bb1\u5b50\u91cd\u65b0\u6392\u5217\u540e\u6b63\u89c6\u56fe\uff0c\u4fef\u89c6\u56fe\uff0c\u5de6\u89c6\u56fe\u4e0d\u53d8\uff1f\n\n\u6bd4\u5982\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u4e0b\u9762\u8fd9\u79cd\u62ff\u8d70 $9$ \u4e2a\u7bb1\u5b50\u540e\u7684\u91cd\u65b0\u6392\u5217\u65b9\u5f0f\u4e5f\u662f\u53ef\u4ee5\u7684\uff1a\n\n![](https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/14635/2.png)\n\n$1 \\le r,c \\le 100$\uff0c\u5e73\u9762\u4e0a\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u7684\u7bb1\u5b50\u4e2a\u6570\u5728 $[0,10^9]$ \u5185\u3002\n\n\u7ffb\u8bd1\u8005\uff1a\u4e00\u53ea\u4e66\u866b\u4ed4"
}