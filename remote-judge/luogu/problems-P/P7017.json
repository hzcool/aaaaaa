{
    "description": "A digraph is a graph with orientation... oh, sorry, not this time. Let's stop being nerds for a minute and talk about languages (human languages, not PHP).\n\nDigraphs are pairs of characters that represent one phoneme (sound). For example, \"ch\" in English (as in \"church\") is a single consonant sound. The languages of Central Europe are fond of digraphs: Hungarian \"sz\", Czech \"ch\" and Polish \"rz\" are fine examples of them.\n\nDigraphs are very annoying for people who do not use them natively. We will make up a letter-puzzle specifically for those people. Given a list of digraphs, construct a biggest possible square of lower case English letters such that its rows and columns do not contain any of these digraphs. This means that no two consecutive letters (read from top to bottom or from left to right) can form a digraph.\n",
    "inputFormat": "\nThe first line of input contains the number of test cases $T$ . The descriptions of the test cases follow:\n\nEach test case starts with an integer $n , 0 \\le n \\le 676$ , denoting the number of forbidden digraphs. The $n$ following lines contain the digraphs.\n",
    "outputFormat": "For each test case print a square of the largest possible size which does not contain any of the digraphs. If it is possible to construct a square of size $20 \\times 20$ or bigger, print only a $20 \\times 20$ square.\n\nWarning: Part of the example test data below was omitted for clarity. You can access full sample tests at your workstation. ",
    "samples": [
        [
            "2\n628\naa\naz\nba\nbb\nbc\nbd\nbe\nbf\nbg\nbh\nbi\nbj\nbk\nbl\nbm\nbn\nbo\nbp\nbq\nbr\nbs\nbt\nbu\nbv\nbw\nbx\nby\nca\ncb\ncc\ncd\nce\ncf\ncg\nch\nci\ncj\nck\ncl\ncm\ncn\nco\ncp\ncq\ncr\ncs\nct\ncu\ncv\ncw\ncx\ncy\nda\ndb\ndc\ndd\nde\ndf\ndg\ndh\ndi\ndj\ndk\ndl\ndm\ndn\ndo\ndp\ndq\ndr\nds\ndt\ndu\ndv\ndw\ndx\ndy\nea\neb\nec\ned\nee\nef\neg\neh\nei\nej\nek\nel\nem\nen\neo\nep\neq\ner\nes\net\neu\nev\new\nex\ney\nfa\nfb\nfc\nfd\nfe\nff\nfg\nfh\nfi\nfj\nfk\nfl\nfm\nfn\nfo\nfp\nfq\nfr\nfs\nft\nfu\nfv\nfw\nfx\nfy\nga\ngb\ngc\ngd\nge\ngf\ngg\ngh\ngi\ngj\ngk\ngl\ngm\ngn\ngo\ngp\ngq\ngr\ngs\ngt\ngu\ngv\ngw\ngx\ngy\nha\nhb\nhc\nhd\nhe\nhf\nhg\nhh\nhi\nhj\nhk\nhl\nhm\nhn\nho\nhp\nhq\nhr\nhs\nht\nhu\nhv\nhw\nhx\nhy\nia\nib\nic\nid\nie\nif\nig\nih\nii\nij\nik\nil\nim\nin\nio\nip\niq\nir\nis\nit\niu\niv\niw\nix\niy\nja\njb\njc\njd\nje\njf\njg\njh\nji\njj\njk\njl\njm\njn\njo\njp\njq\njr\njs\njt\nju\njv\njw\njx\njy\nka\nkb\nkc\nkd\nke\nkf\nkg\nkh\nki\nkj\nkk\nkl\nkm\nkn\nko\nkp\nkq\nkr\nks\nkt\nku\nkv\nkw\nkx\nky\nla\nlb\nlc\nld\nle\nlf\nlg\nlh\nli\nlj\nlk\nll\nlm\nln\nlo\nlp\nlq\nlr\nls\nlt\nlu\nlv\nlw\nlx\nly\nma\nmb\nmc\nmd\nme\nmf\nmg\nmh\nmi\nmj\nmk\nml\nmm\nmn\nmo\nmp\nmq\nmr\nms\nmt\nmu\nmv\nmw\nmx\nmy\nna\nnb\nnc\nnd\nne\nnf\nng\nnh\nni\nnj\nnk\nnl\nnm\nnn\nno\nnp\nnq\nnr\nns\nnt\nnu\nnv\nnw\nnx\nny\noa\nob\noc\nod\noe\nof\nog\noh\noi\noj\nok\nol\nom\non\noo\nop\noq\nor\nos\not\nou\nov\now\nox\noy\npa\npb\npc\npd\npe\npf\npg\nph\npi\npj\npk\npl\npm\npn\npo\npp\npq\npr\nps\npt\npu\npv\npw\npx\npy\nqa\nqb\nqc\nqd\nqe\nqf\nqg\nqh\nqi\nqj\nqk\nql\nqm\nqn\nqo\nqp\nqq\nqr\nqs\nqt\nqu\nqv\nqw\nqx\nqy\nra\nrb\nrc\nrd\nre\nrf\nrg\nrh\nri\nrj\nrk\nrl\nrm\nrn\nro\nrp\nrq\nrr\nrs\nrt\nru\nrv\nrw\nrx\nry\nsa\nsb\nsc\nsd\nse\nsf\nsg\nsh\nsi\nsj\nsk\nsl\nsm\nsn\nso\nsp\nsq\nsr\nss\nst\nsu\nsv\nsw\nsx\nsy\nta\ntb\ntc\ntd\nte\ntf\ntg\nth\nti\ntj\ntk\ntl\ntm\ntn\nto\ntp\ntq\ntr\nts\ntt\ntu\ntv\ntw\ntx\nty\nua\nub\nuc\nud\nue\nuf\nug\nuh\nui\nuj\nuk\nul\num\nun\nuo\nup\nuq\nur\nus\nut\nuu\nuv\nuw\nux\nuy\nva\nvb\nvc\nvd\nve\nvf\nvg\nvh\nvi\nvj\nvk\nvl\nvm\nvn\nvo\nvp\nvq\nvr\nvs\nvt\nvu\nvv\nvw\nvx\nvy\nwa\nwb\nwc\nwd\nwe\nwf\nwg\nwh\nwi\nwj\nwk\nwl\nwm\nwn\nwo\nwp\nwq\nwr\nws\nwt\nwu\nwv\nww\nwx\nwy\nxa\nxb\nxc\nxd\nxe\nxf\nxg\nxh\nxi\nxj\nxk\nxl\nxm\nxn\nxo\nxp\nxq\nxr\nxs\nxt\nxu\nxv\nxw\nxx\nxy\nya\nyb\nyc\nyd\nye\nyf\nyg\nyh\nyi\nyj\nyk\nyl\nym\nyn\nyo\nyp\nyq\nyr\nys\nyt\nyu\nyv\nyw\nyx\nyy\nza\nzb\nzc\nzd\nze\nzf\nzg\nzh\nzi\nzj\nzk\nzl\nzm\nzn\nzo\nzp\nzq\nzr\nzs\nzt\nzu\nzv\nzw\nzx\nzy\nzz\n2\naa\nbb\n",
            "aw\nwz\nabababababababababab\nbabababababababababa\nabababababababababab\nbabababababababababa\nabababababababababab\nbabababababababababa\nabababababababababab\nbabababababababababa\nabababababababababab\nbabababababababababa\nabababababababababab\nbabababababababababa\nabababababababababab\nbabababababababababa\nabababababababababab\nbabababababababababa\nabababababababababab\nbabababababababababa\nabababababababababab\nbabababababababababa\n"
        ]
    ],
    "hint": "Time limit: 2 s, Memory limit: 128 MB. \n\n",
    "translation": "## \u9898\u76ee\u63cf\u8ff0\n\n\u6709\u4e00\u4e9b\u6709\u5411\u5b57\u6bcd\u5bf9\uff0c\u6784\u9020\u4e00\u4e2a\u5c3d\u91cf\u5927\uff08\u6700\u5927$20\\times20$\uff09\u7684\u65b9\u9635\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u65b9\u9635\u4e2d\u4efb\u610f\u4e24\u4e2a\u76f8\u90bb\u5b57\u6bcd\u5bf9\uff08\u4ece\u5de6\u5230\u53f3\u6216\u4ece\u4e0a\u5230\u4e0b\uff09\u90fd\u4e0d\u662f\u8fd9\u4e9b\u6709\u5411\u5b57\u6bcd\u5bf9\u4e2d\u7684\u4e00\u4e2a\u3002\n\n## \u8f93\u5165\u683c\u5f0f\n\n\u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570$T$\uff0c\u8868\u793a\u6570\u636e\u7ec4\u6570\u3002\n\n\u6bcf\u7ec4\u6570\u636e\u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570$n$($0 \\le n \\le 676$)\uff0c\u8868\u793a\u6709\u5411\u5b57\u6bcd\u5bf9\u6570\u3002\n\n\u63a5\u4e0b\u6765$n$\u884c\uff0c\u6bcf\u884c$2$\u4e2a\u5c0f\u5199\u5b57\u6bcd\uff0c\u8868\u793a\u4e00\u7ec4\u6709\u5411\u5b57\u6bcd\u5bf9\u3002\n\n## \u8f93\u51fa\u683c\u5f0f\n\n\u5bf9\u4e8e\u6bcf\u7ec4\u6570\u636e\uff0c\u8f93\u51fa\u4e00\u4e2a\u5c3d\u91cf\u5927\u7684\u65b9\u9635\uff0c\u4e0d\u5305\u542b\u4efb\u4f55\u4e00\u4e2a\u6709\u5411\u5b57\u6bcd\u5bf9\uff08\u5982\u679c\u53ef\u4ee5\u6784\u9020\u6bd4$20\\times20$\u89c4\u6a21\u66f4\u5927\u7684\u65b9\u9635\uff0c\u53ea\u9700\u8981$20\\times20$\u89c4\u6a21\u5c31\u591f\u4e86\uff09\u3002\n\n\u5982\u679c\u6709\u591a\u7ec4\u89e3\uff0c\u8f93\u51fa\u4efb\u610f\u4e00\u7ec4\u5373\u53ef\u3002"
}