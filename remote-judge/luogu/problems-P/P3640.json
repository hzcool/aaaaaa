{
    "description": "\u5f53\u4eca\u4e16\u754c\u4e0a\u5404\u7c7b\u7a0b\u5e8f\u8bbe\u8ba1\u7ade\u8d5b\u5c42\u51fa\u4e0d\u7a77\u3002\u800c\u8bbe\u8ba1\u4e00\u573a\u597d\u6bd4\u8d5b\u7edd\u975e\u6613\u4e8b\uff0c\u6bd4\u5982\u7ed9\u9898\u76ee\u8bbe\u8ba1\u6d4b\u8bd5\u6570\u636e\u5c31\u662f\u4e00\u9879\u6311\u6218\u3002\u4e00\u7ec4\u597d\u7684\u6d4b\u8bd5\u6570\u636e\u9700\u8981\u5bf9\u4e0d\u540c\u7684\u7a0b\u5e8f\u6709\u533a\u5206\u5ea6\uff1a\u6ee1\u8db3\u6240\u6709\u8981\u6c42\u7684\u7a0b\u5e8f\u81ea\u7136\u5e94\u8be5\u5f97\u5230\u6ee1\u5206\uff0c\u800c\u90a3\u4e9b\u8c8c\u4f3c\u6b63\u786e\u7684\u7a0b\u5e8f\u5219\u4f1a\u5728\u67d0\u4e9b\u7279\u6b8a\u6570\u636e\u4e0a\u51fa\u9519\u3002\n\n\u5728\u672c\u9898\u4e2d\uff0c\u4f60\u5728\u6bd4\u8d5b\u4e2d\u7684\u89d2\u8272\u53cd\u8f6c\u5566\uff01\u4f5c\u4e3a\u4e00\u540d\u4e45\u7ecf\u767e\u6218\u7684\u7a0b\u5e8f\u5458\uff0c\u4f60\u5c06\u5e2e\u52a9 Happy Programmer Contest \u7684\u547d\u9898\u59d4\u5458\u4f1a\u8bbe\u8ba1\u8fd9\u6b21\u6bd4\u8d5b\u7684\u6d4b\u8bd5\u6570\u636e\u3002\u672c\u6b21\u6bd4\u8d5b\u547d\u9898\u59d4\u5458\u4f1a\u9009\u62e9\u4e86\u4e24\u4e2a\u56fe\u8bba\u95ee\u9898\uff0c\u5206\u4e3a $8$ \u4e2a\u5b50\u4efb\u52a1\u3002\u59d4\u5458\u4f1a\u5199\u4e86\u4e00\u4e9b\u8c8c\u4f3c\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e9b\u5b50\u4efb\u52a1\u7684\u4ee3\u7801\u3002\u5728\u7ed9\u4efb\u52a1\u8bbe\u8ba1\u6570\u636e\u7684\u65f6\u5019\uff0c\u547d\u9898\u59d4\u5458\u4f1a\u671f\u671b\u5176\u4e2d\u7684\u4e00\u4e9b\u6e90\u7a0b\u5e8f\u80fd\u591f\u5f97\u5230\u6ee1\u5206\uff0c\u800c\u53e6\u5916\u7684\u4e00\u4e9b\u5219\u53ea\u80fd\u5f97\u5230 $0$ \u5206\u6216\u8005\u5c11\u8bb8\u7684\u90e8\u5206\u5206\u3002\u73b0\u5728\u4f60\u5c06\u4f1a\u83b7\u5f97\u8fd9\u4e9b\u6e90\u7a0b\u5e8f\uff08C, C++, Pascal \u7248\u672c\uff09\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u5b50\u4efb\u52a1\uff0c\u4f60\u9700\u8981\u53bb\u4ea7\u751f\u4e00\u7ec4\u6570\u636e $X$ \u4f7f\u5f97\u5b83\u80fd\u5c06\u8be5\u4efb\u52a1\u7ed9\u5b9a\u7684 $2$ \u79cd\u6e90\u7a0b\u5e8f $A$ \u548c $B$ \u533a\u5206\u5f00\u6765\u3002\u66f4\u5177\u4f53\u5730\u8bf4\uff0c\u751f\u6210\u7684\u6570\u636e\u5fc5\u987b\u6ee1\u8db3\u5982\u4e0b\u4e24\u4e2a\u6761\u4ef6:\n\n\u8f93\u5165 $X$ \u5bf9\u4e8e\u6e90\u7a0b\u5e8f $A$ \u4e00\u5b9a\u4e0d\u4f1a\u51fa\u73b0\u8d85\u51fa\u65f6\u95f4\u9650\u5236\uff08TLE\uff09\u7684\u95ee\u9898\u3002\n\n\u8f93\u5165 $X$ \u4e00\u5b9a\u4f1a\u5bfc\u81f4\u6e90\u7a0b\u5e8f $B$ \u4ea7\u751f\u8d85\u51fa\u65f6\u95f4\u9650\u5236\u7684\u95ee\u9898\u3002\n\n\u6b64\u5916,\u547d\u9898\u59d4\u5458\u559c\u6b22\u8f83\u5c0f\u89c4\u6a21\u7684\u6d4b\u8bd5\u6570\u636e\uff0c\u5e0c\u671b\u6d4b\u8bd5\u6570\u636e\u6700\u597d\u80fd\u591f\u5305\u542b\u4e0d\u8d85\u8fc7 $T$ \u4e2a\u6574\u6570\u3002\n\n\u672c\u9898\u4e2d\u53ea\u5173\u5fc3\u6e90\u7a0b\u5e8f $A$ \u548c $B$ \u662f\u5426\u8d85\u65f6\uff0c\u4e0d\u5173\u5fc3\u662f\u5426\u7ed3\u679c\u6b63\u786e\u3002\n\n\u547d\u9898\u59d4\u5458\u4f1a\u9009\u62e9\u4e86\u5355\u6e90\u6700\u77ed\u8def\uff08SSSP\uff09\u4ee5\u53ca\u4e00\u4e2a\u88ab\u79f0\u4e4b\u4e3a\u795e\u79d8\u95ee\u9898\uff08Mystery\uff09\u7684\u4e24\u4e2a\u56fe\u8bba\u95ee\u9898\u6765\u4f5c\u4e3a\u6bd4\u8d5b\u7684\u9898\u76ee\u3002\u6211\u4eec\u5c06\u547d\u9898\u59d4\u5458\u4f1a\u5b8c\u6210\u7684\u4f2a\u4ee3\u7801\u5217\u5728\u4e86\u9644\u5f55\u4e2d\uff0c\u800c\u5177\u4f53\u7684 C\u3001C++ \u548c Pascal \u6e90\u7a0b\u5e8f\u88ab\u6211\u4eec\u653e\u5728\u4e86\u4e0b\u53d1\u7684\u6587\u4ef6\u5f53\u4e2d\u3002\n\n### \u5b50\u4efb\u52a1\n\n\u53c2\u89c1\u4e0b\u8868\u3002\u8868\u4e2d\u6bcf\u4e00\u884c\u63cf\u8ff0\u4e86\u4e00\u4e2a\u5b50\u4efb\u52a1\u3002\u5176\u4e2d\u524d\u516d\u4e2a\u5b50\u4efb\u52a1\u4e0e\u5355\u6e90\u6700\u77ed\u8def\u76f8\u5173\uff0c\u5b50\u4efb\u52a1 7,8 \u4e0e\u795e\u79d8\u95ee\u9898\u76f8\u5173\u3002\u6bcf\u4e2a\u4efb\u52a1\u6240\u5360\u5206\u6570\u89c1\u4e0b\u8868\u3002\n\n ![](https://cdn.luogu.com.cn/upload/pic/4428.png) \n\n\u5bf9\u4e8e\u6bcf\u4e2a\u5b50\u4efb\u52a1\uff0c\u4f60\u7684\u7a0b\u5e8f\u7ed9\u51fa\u7684\u8f93\u5165 $X$ \u9700\u8981\u80fd\u591f\u5c06\u6e90\u7a0b\u5e8f $A$ \u548c $B$ \u533a\u5206\u5f00\u6765\uff0c\u8fd9\u6709\u8fd9\u6837\u4f60\u624d\u80fd\u591f\u5f97\u5230\u76f8\u5e94\u7684\u5206\u6570\u3002\u5177\u4f53\u8bf4\u6765\uff0c\u4f60\u7684\u5206\u6570\u5c06\u7531\u8f93\u5165 $X$ \u4e2d\u6570\u7684\u4e2a\u6570\u51b3\u5b9a\u3002\u5047\u8bbe $X$ \u4e2d\u5305\u542b\u4e86 $F$ \u4e2a\u6574\u6570\uff0c\u5b50\u4efb\u52a1\u7684\u6ee1\u5206\u4e3a $S,T$ \u662f\u8be5\u4efb\u52a1\u7684\u76ee\u6807\u5927\u5c0f\uff0c\u5219\u8be5\u6d4b\u8bd5\u70b9\u7684\u5206\u6570\u5c06\u7531\u4e0b\u5f0f\u7ed9\u51fa:\n\n$$S \\times \\min\\{T / F, 1\\}$$\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u4f60\u7684\u6d4b\u8bd5\u6570\u636e $X$ \u4e2d\u542b\u6709\u4e0d\u8d85\u8fc7 $T$ \u4e2a\u6574\u6570\uff0c\u5219\u4f60\u5c06\u5f97\u5230\u8be5\u4efb\u52a1\u7684\u5168\u90e8\u5f97\u5206\u3002\n\n\u4f60\u9700\u8981\u628a\u4f60\u7684 $8$ \u4e2a\u6d4b\u8bd5\u6570\u636e\u547d\u540d\u4e3a `1.txt` ~ `8.txt`\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u5b50\u4efb\u52a1 $X$\uff0c\u8bc4\u6d4b\u7cfb\u7edf\u5c06\u6839\u636e\u5982\u4e0b\u6b65\u9aa4\u6765\u786e\u5b9a\u4f60\u5c06\u4f1a\u5f97\u5230\u591a\u5c11\u5206:\n\n- \u5982\u679c\u672a\u63d0\u4ea4\u6570\u636e\uff0c\u5219\u4e0d\u5f97\u5206\uff1b\n- \u82e5\u6570\u636e\u4e0d\u6ee1\u8db3\u8f93\u5165\u683c\u5f0f\u8981\u6c42\uff0c\u5219\u4e0d\u5f97\u5206\uff1b\n- \u5bf9\u6e90\u7a0b\u5e8f $A$ \u8fd0\u884c\u8f93\u5165\uff0c\u82e5\u53d1\u751f\u8d85\u65f6\u73b0\u8c61\uff0c\u5219\u4e0d\u5f97\u5206\uff1b\n- \u5bf9\u6e90\u7a0b\u5e8f $B$ \u8fd0\u884c\u8f93\u5165\uff0c\u82e5\u53d1\u751f\u8d85\u65f6\u73b0\u8c61\uff0c\u5219\u6309\u7167\u524d\u6587\u6240\u8ff0\u7684\u516c\u5f0f\u7ed9\u51fa\u8be5\u6d4b\u8bd5\u70b9\u7684\u5206\u6570\u3002\n\n\u9898\u76ee\u63d0\u4f9b\u7684\u6240\u6709\u6e90\u4ee3\u7801\u5747\u4f1a\u7ef4\u62a4\u4e00\u4e2a\u8ba1\u6570\u5668\u6765\u7edf\u8ba1\u7a0b\u5e8f\u7684\u64cd\u4f5c\u6b21\u6570\u3002\u5728\u6e90\u7a0b\u5e8f\u7684\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff0c\u5f53\u8be5\u8ba1\u6570\u5668\u8d85\u8fc7\u4e86 $10^6$ \u6b21\u65f6\uff0c\u90a3\u4e48\u6211\u4eec\u8ba4\u4e3a\u7a0b\u5e8f\u8fd0\u884c\u8d85\u65f6\u3002\n\n### \u95ee\u9898 1\uff1a\u5355\u6e90\u6700\u77ed\u8def\uff08SSSP\uff09\n\n\u7ed9\u5b9a\u4e00\u4e2a\u5e26\u6743\u6709\u5411\u56fe $G$\uff0c\u4ee5\u53ca $G$ \u4e2d\u7684\u4e24\u4e2a\u8282\u70b9 $s$ \u4e0e $t$\uff0c\u4ee4 $p(s, t)$ \u4e3a $G$ \u4e2d\u4ece $s$ \u81f3 $t$ \u7684\u6700\u77ed\u8def\u957f\u5ea6\u3002\u5982\u679c $s$ \u4e0e $t$ \u4e0d\u8fde\u901a\uff0c\u5219\u8ba4\u4e3a $p(s, t)=10^9$\u3002\u5728\u672c\u9898\u4e2d\uff0c\u8f93\u5165\u4e3a\u56fe $G$ \u4ee5\u53ca $Q$ \u4e2a\u8be2\u95ee $(s_1, t_1), (s_2, t_2), \\dots, (s_Q, t_Q)$ \u3002\u8f93\u51fa\u5219\u662f\u5bf9\u8fd9 $Q$ \u4e2a\u8be2\u95ee\u7684\u76f8\u5e94\u8f93\u51fa $p(s_1, t_1), p(s_2 , t_2), \\cdots, p(s_Q, t_Q)$\u3002\n\n\n### \u95ee\u9898 2\uff1a\u795e\u79d8\u95ee\u9898\n\n\u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b $V$ \u4e2a\u8282\u70b9 $E$ \u6761\u8fb9\u7684\u65e0\u5411\u56fe $G$\uff0c\u8981\u6c42\u5c06\u6240\u6709\u7684\u8282\u70b9\u8fdb\u884c\u7f16\u53f7\uff08\u7f16\u53f7\u8303\u56f4\u4e3a $[0, X-1]$\uff09\uff0c\u4f7f\u5f97\u6240\u6709\u76f4\u63a5\u76f8\u8fde\u7684\u8282\u70b9\u5747\u6709\u4e0d\u540c\u7684\u7f16\u53f7\u3002\u627e\u51fa\u7b26\u5408\u9898\u610f\u7684\u6700\u5c0f\u7684 $X$\u3002\n",
    "inputFormat": "### \u95ee\u9898 1\n\n\u8f93\u5165\u6570\u636e\u5305\u542b\u4e24\u90e8\u5206\uff0c\u5176\u4e2d\u7b2c\u4e00\u90e8\u5206\u4f7f\u7528\u90bb\u63a5\u8868\u6765\u63cf\u8ff0\u5e26\u6743\u6709\u5411\u56fe $G$\u3002\u7b2c\u4e8c\u90e8\u5206\u5219\u63cf\u8ff0\u5bf9 $G$ \u7684\u6700\u77ed\u8def\u5f84\u7684\u67e5\u8be2\u3002\n\n\u6570\u636e\u7b2c\u4e00\u90e8\u5206\u7684\u7b2c\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u6574\u6570 $V$\uff0c\u8868\u793a $G$ \u4e2d\u70b9\u7684\u4e2a\u6570\uff0c\u6240\u6709\u70b9\u7684\u7f16\u53f7\u4e3a $0, 1, \\cdots, V - 1$\u3002\n\n\u63a5\u4e0b\u6765 $V$ \u884c\uff0c\u6bcf\u884c\u63cf\u8ff0\u4e00\u4e2a\u70b9\u7684\u6240\u6709\u8fb9\u3002\u884c\u4e2d\u7684\u7b2c\u4e00\u4e2a\u6574\u6570 $n_i$ \u63cf\u8ff0\u4e86\u8282\u70b9 $i$ \u7684\u51fa\u8fb9\u6570\u91cf\uff0c\u63a5\u4e0b\u6765\u6709 $n_i$ \u4e2a\u6574\u6570\u5bf9 $(j, w)$ \u8868\u793a\u6709\u4e00\u6761\u4ece $i$ \u5230 $j$\uff0c\u8fb9\u6743\u4e3a $w$ \u7684\u8fb9\u3002\n\n\u6570\u636e\u7b2c\u4e8c\u90e8\u5206\u7684\u7b2c\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u6574\u6570 $Q$\uff0c\u8868\u793a\u8be2\u95ee\u7684\u7ec4\u6570\u3002\n\n\u63a5\u4e0b\u6765 $Q$ \u884c\uff0c\u7b2c $k$ \u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 $s_k, t_k$\uff0c\u4e3a\u8be5\u8be2\u95ee\u5bf9\u5e94\u7684\u8d77\u70b9\u4e0e\u7ec8\u70b9\u4f4d\u7f6e\u3002\n\n\u540c\u4e00\u884c\u4e2d\u4efb\u610f\u4e24\u4e2a\u76f8\u90bb\u7684\u6574\u6570\u5747\u9700\u8981\u81f3\u5c11\u4e00\u4e2a\u7a7a\u683c\u5c06\u4ed6\u4eec\u5206\u5f00\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u6570\u636e\u8fd8\u9700\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6:\n\n- $0 < V \\leq 300$\uff0c$n_i$ \u662f\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\uff0c$0 \\leq j < V$\uff0c$\\lvert w \\rvert < 10^6$\uff0c$0 \\leq \\sum\\limits_{i = 0}^{V-1} n_i \\leq 5000$\uff0c$0 < Q \\leq 10$\uff0c$0 \\leq s_k < V, 0 \\leq t_k < V$\uff1b\n- \u6240\u6709\u8be2\u95ee\u4e2d\u7684\u8d77\u70b9 $s_k$ \u90fd\u4e0d\u80fd\u8fbe\u5230\u4efb\u4f55\u4e00\u4e2a\u8d1f\u6743\u5708\u3002\n- \u5bf9\u4e8e\u6240\u6709\u7684\u8fb9 $(a, b)$\uff0c\u6709 $a \\neq b, 0 \\leq a < V, 0 \\leq b < V$\uff0c\u4e0d\u4f1a\u91cd\u590d\u63cf\u8ff0\u4e00\u6761\u8fb9\u3002\n\n\n### \u95ee\u9898 2\n\n\u8f93\u5165\u6570\u636e\u7684\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 $V$ \u548c $E$\u3002\n\n\u63a5\u4e0b\u6765 $E$ \u884c,\u6bcf\u884c\u4e24\u4e2a\u6574\u6570 $a, b$\uff0c\u8868\u793a $a$ \u4e0e $b$ \u5728 $G$ \u4e2d\u76f4\u63a5\u76f8\u8fde\u3002\u6b64\u5916,\u8f93\u5165\u6570\u636e\u5e94\u6ee1\u8db3\u5982\u4e0b\u9650\u5236\u6761\u4ef6:\n\n- $70 < V < 1000$\uff0c$1500 < E < 10^6$\uff1b\n- \u5bf9\u4e8e\u6240\u6709\u7684\u8fb9 $(a, b)$\uff0c\u6709 $a \\neq b, 0 \\leq a < V, 0 \\leq b < V$\uff0c\u4e0d\u4f1a\u91cd\u590d\u63cf\u8ff0\u4e00\u6761\u8fb9\u3002\n\n",
    "outputFormat": "### \u95ee\u9898 1\n\n\u7a0b\u5e8f\u5c06\u4f1a\u8f93\u51fa $Q$ \u884c\uff0c\u6bcf\u884c\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u5bf9\u5e94\u7684 $p(s_k , t_k)$\u3002\u800c\u5728\u8f93\u51fa\u7684\u6700\u540e\uff0c\u6240\u6709\u63d0\u4f9b\u7684\u7a0b\u5e8f\u90fd\u4f1a\u7ed9\u51fa\u8ba1\u6570\u5668\u5bf9\u6b64\u8f93\u5165\u7684\u6570\u503c\u3002\n\n### \u95ee\u9898 2\n\n\u7a0b\u5e8f\u5c06\u5728\u7b2c\u4e00\u884c\u8f93\u51fa $X$\uff0c\u5373\u6700\u5c0f\u7684\u7f16\u53f7\u8303\u56f4\uff0c\u63a5\u4e0b\u6765\u5728\u7b2c\u4e8c\u884c\u4e2d\u7ed9\u51fa $V$ \u4e2a\u6574\u6570\uff0c\u4f9d\u6b21\u63cf\u8ff0\u8282\u70b9 $0$ \u81f3 $V - 1$ \u7684\u7f16\u53f7\u3002\u5728\u8f93\u51fa\u7684\u6700\u540e\uff0c\u6240\u6709\u63d0\u4f9b\u7684\u7a0b\u5e8f\u90fd\u4f1a\u7ed9\u51fa\u8ba1\u6570\u5668\u5bf9\u6b64\u8f93\u5165\u7684\u6570\u503c\u3002",
    "samples": [
        [
            "3\n2 1 4 2 1\n0\n1 1 2\n2\n0 1\n1 0\n//\u4ee5\u4e0a\u4e3a\u95ee\u98981",
            "3\n1000000000\nThe value of counter is: 5"
        ],
        [
            "4 5\n0 1\n0 2\n0 3\n1 2\n2 3\n//\u4ee5\u4e0a\u4e3a\u95ee\u98982",
            "3\n0 1 2 1\nThe value of counter is: 18"
        ]
    ],
    "hint": "**\u6e90\u4ee3\u7801\u89c1\u9644\u4ef6**\u3002\n\n### \u9644\u5f55\uff1a\u4f2a\u4ee3\u7801\n\n\u63a5\u4e0b\u6765\u662f\u6211\u4eec\u63d0\u4f9b\u7684\u6240\u6709\u7a0b\u5e8f\u7684\u4f2a\u4ee3\u7801\uff1b\u53d8\u91cf counter \u8fd1\u4f3c\u63cf\u8ff0\u51fa\u4e86\u7a0b\u5e8f\u7684\u8fd0\u884c\u65f6\u95f4\u3002\u8bc4\u6d4b\u65f6\u5c06\u4f1a\u4f7f\u7528\u8fd9\u4e9b\u4f2a\u4ee3\u7801\u7684 C++ \u7248\u672c\u6765\u8fdb\u884c\u8bc4\u6d4b\u3002\n\n\nFloydWarshall\n\n```cpp\n// pre-condition: the graph is stored in an adjacency matrix M\ncounter = 0\nfor k = 0 to V-1\n    for i = 0 to V-1\n        for j = 0 to V-1\n            increase counter by 1;\n            M[i][j] = min(M[i][j], M[i][k] + M[k][j]);\nfor each query p(s,t)\n    output M[s][t];\n```\n\nOptimizedBellmanFord\n\n```cpp\n// pre-condition: the graph is stored in an adjacency list L\ncounter = 0\nfor each query p(s,t);\n    dist[s] = 0; // s is the source vertex\n    loop V-1 times\n        change = false;\n        for each edge (u,v) in L\n            increase counter by 1;\n            if dist[u] + weight(u,v) < dist[v]\n                dist[v] = dist[u] + weight(u,v);\n                change = true;\n        if change is false // this is the \u2019optimized\u2019 Bellman Ford\n            break from the outermost loop;\n    output dist[t];\n```\n\nModifiedDijkstra\n\n```cpp\n// pre-condition: the graph is stored in an adjacency list L\ncounter = 0;\nfor each query p(s,t)\n    dist[s] = 0;\n    pq.push(pair(0, s)); // pq is a priority queue\n    while pq is not empty\n        increase counter by 1;\n        (d, u) = the top element of pq;\n        remove the top element from pq;\n        if (d == dist[u])\n            for each edge (u,v) in L\n                if (dist[u] + weight(u,v) ) < dist[v]\n                    dist[v] = dist[u] + weight(u,v);\n                    insert pair (dist[v], v) into the pq;\n    output dist[t];\n```\n\nGamble1\n\n```cpp\nSets X = V;\nlabels vertex i in [0..V-1] with i;\nSets counter = 0; // will never get TLE\n```\nGamble2\n\n```cpp\nSets X = V;\nlabels vertex i in [0..V-1] with i;\nSets counter = 1000001; // force this to get TLE\n```\n\nRecursiveBacktracking\n\n```cpp\nThis algorithm tries X from 2 to V one by one and stops at the first valid X.  \nFor each X, the backtracking routine label vertex 0 with 0, then for each vertex u that has been assigned a label, the backtracking routine tries to assign \nthe smallest possible label up to label X-1 to its neighbor v, and backtracks if necessary.  \n// Please check RecursiveBacktracking.cpp/pas to see \n// the exact lines where the iteration counter is increased by 1\n```\n\n\u611f\u8c22zhouyonglong\u4fee\u6539spj\n"
}