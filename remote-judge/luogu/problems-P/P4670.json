{
    "description": "The participants of the World Programming Competition submitted $N$ solution files $f_1 ,...,f_N$ to the grading system. Before accepting the results as final, the jury would like to rule out any possibility of plagiarism. They have a program that takes two files and compares them to decide if they are too similar to each other.\n\nHowever, the number of files is rather big and it would take too much time to compare all pairs. On the other hand, many pairs could be quickly eliminated based on the fact that the file sizes are too different.\n\nMore precisely, the jury decided to fully skip comparing every pair where the size of the smaller file is less than 90% of the size of the larger one. So, the comparison program has to examine only those distinct pairs of files $(f_i, f_j)$ where $i\u2260j, size(f_i) \\le size(f_j)$ and $size(f_i) \\ge 0.9 \\times size(f_j)$.\n\nWrite a program that computes the number of pairs of files that will have to be examined.",
    "inputFormat": "The first line of input contains the integer $N$, the number of solution files submitted. The second line contains $N$ integers $size(f_1),\\cdots,size(f_N)$, each showing the size of one file.",
    "outputFormat": "The first and only line of output must contain one integer, the number of pairs of files that will have to be examined.",
    "samples": [
        [
            "2\n2 1",
            "0"
        ],
        [
            "5\n1 1 1 1 1",
            "10"
        ]
    ],
    "hint": "\u5bf9\u4e8e $50\\%$ \u7684\u6570\u636e\uff0c$1 \\le N \\le 2000$\u3002\n\n\u5bf9\u4e8e\u6240\u6709\u6570\u636e\uff0c$1 \\le N \\le 10^5,1 \\le f_i \\le 10^8$\u3002",
    "translation": "Description\n\n\u4e16\u754c\u7f16\u7a0b\u5927\u8d5b\u7684\u9009\u624b\u4eec\u63d0\u4ea4N\u4efd\u7a0b\u5e8f\u6587\u4ef6f1, \u2026, fN\u7ed9\u8bc4\u6d4b\u7cfb\u7edf\u3002\u5728\u5c06\u8bc4\u6d4b\u7ed3\u679c\u6b63\u5f0f\u516c\u5e03\u4e4b\u524d\uff0c\u8bc4\u59d4\u4f1a\u60f3\u8981\u6392\u9664\u4e00\u5207\u53ef\u80fd\u7684\u527d\u7a83\u73b0\u8c61\u3002\u4ed6\u4eec\u5df2\u6709\u4e00\u4e2a\u5bf9\u6bd4\u7a0b\u5e8f\uff0c\u7528\u6765\u6bd4\u8f83\u4e24\u4efd\u7a0b\u5e8f\u6587\u4ef6\uff0c\u5e76\u5224\u65ad\u5b83\u4eec\u662f\u5426\u592a\u8fc7\u76f8\u4f3c\u4e86\u3002 \u7136\u800c\u7a0b\u5e8f\u6587\u4ef6\u7684\u6570\u76ee\u76f8\u5f53\u5927\uff0c\u628a\u6bcf\u4e24\u4efd\uff08\u4e00\u5bf9\uff0cpair\uff09\u6587\u4ef6\u90fd\u8fdb\u884c\u6bd4\u8f83\u7684\u8bdd\u5c06\u82b1\u592a\u591a\u7684\u65f6\u95f4\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u8bb8\u591a\u5bf9(pair)\u53ef\u4ee5\u76f4\u63a5\u88ab\u6392\u9664\uff0c\u5982\u679c\u6587\u4ef6\u7684\u5927\u5c0f\u76f8\u5dee\u592a\u5927\u7684\u8bdd\u3002 \u66f4\u51c6\u786e\u5730\u8bf4\uff0c\u8bc4\u59d4\u4f1a\u51b3\u5b9a\uff0c\u5982\u679c\u6bcf\u4e24\u4efd\u6587\u4ef6\uff08\u4e00\u5bf9\uff0cpair\uff09\u4e2d\uff0c\u8f83\u5c0f\u6587\u4ef6\u7684\u4f53\u79ef\u5c0f\u4e8e\u8f83\u5927\u6587\u4ef6\u7684\u4f53\u79ef\u768490%\uff0c\u90a3\u5c06\u76f4\u63a5\u4e0d\u6bd4\u8f83\u8fd9\u6837\u7684\u4e00\u5bf9(pair)\u3002\u6240\u4ee5\uff0c\u5bf9\u6bd4\u7a0b\u5e8f\u53ea\u6bd4\u8f83\u8fd9\u6837\u7684\u4e00\u5bf9(fi, fj)\uff1a i\u2260j, size(fi )\u2264 size(fj )\u4e14size(fi )\u22650.9\u2219size(fj )\u3002 \u7f16\u5199\u7a0b\u5e8f\u8ba1\u7b97\u6709\u591a\u5c11\u5bf9(pair)\u6587\u4ef6\u9700\u8981\u88ab\u6bd4\u8f83\u3002\n\nInput:\n\n\u7b2c1\u884c\u5305\u542b\u4e00\u4e2a\u6574\u6570N\uff0c\u5373\u63d0\u4ea4\u7684\u7a0b\u5e8f\u6587\u4ef6\u603b\u6570\u3002 \u7b2c2\u884c\u5305\u542bN\u4e2a\u6574\u6570size(f1), \u2026, size(fN)\uff0c\u6bcf\u4e2a\u6574\u6570\u4ee3\u8868\u6587\u4ef6\u7684\u4f53\u79ef\u5927\u5c0f\u3002\n\nOutput:\n\n\u7b2c1\u884c\uff0c\u4e5f\u662f\u552f\u4e00\u7684\u4e00\u884c\uff0c\u7ed9\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u5373\u9700\u8981\u88ab\u6bd4\u8f83\u7684\u6587\u4ef6\u7684\u5bf9(pair)\u7684\u6570\u76ee\u3002\n\n\u611f\u8c22@\u8c26\u8c26\u541b\u5b50 \u63d0\u4f9b\u7ffb\u8bd1"
}