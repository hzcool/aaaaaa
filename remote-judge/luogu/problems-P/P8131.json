{
    "description": "International Cell Processing Company (ICPC) is a world leader in the analysis of genetic\nsequences. A genetic sequence is a sequence of nucleotides, which in this problem is\nrepresented by a string containing only the letters $\\texttt{A}$, $\\texttt{C}$, $\\texttt{G}$, and $\\texttt{T}$ \nin some combination, each letter representing a single nucleotide \n($\\textbf{A}$denine, $\\textbf{C}$ytosine, $\\textbf{G}$uanine, and $\\textbf{T}$hymine, respectively).\n\nOne of the key discoveries made by ICPC is that through a process called Genetically Optimized\nOrganic Folding (GOOF), they can take a genetic sequence and transform it into a simpler one,\nwhile preserving many of the properties of the sequence that ICPC wants to analyze.\n\nA single application of GOOF works as follows. Find a point between two adjacent \nnucleotides in the nucleotide sequence, such that the sequence reads the same from that point in\nboth directions, up until the nearer end of the sequence. For instance, in the sequence $\\texttt{ATTACC}$,\nthere are two such points: $\\texttt{AT-TACC}$ and $\\texttt{ATTAC-C}$. Then pick one of these points\n(say, the first one), and fold the genetic sequence at that point, merging the identical nucleotides (so, in this\ncase the $\\texttt{AT}$ and $\\texttt{TA}$ would become merged, and the resulting sequence would be $\\texttt{CCAT}$\nor $\\texttt{TACC}$).\n\nThrough repeated application of GOOF, a nucleotide can potentially be made much shorter.\nHowever, manually searching for the appropriate folding points is very time-consuming.  ICPC\nreached out to you to write a program that would automate the process of finding the folding\npoints and choosing them so as to obtain the shortest possible genetic sequence from a given\ninput sequence.\n",
    "inputFormat": "The input contains a single string $s$ representing the nucleotide sequence to be analyzed. \nThe string consists of characters $\\texttt{A}$, $\\texttt{C}$, $\\texttt{G}$, and $\\texttt{T}$ only. \nThe length of $s$ is between $1$ and $4 \\cdot 10^6$, inclusive.",
    "outputFormat": "Output the smallest possible length of a sequence obtained from\nthe input by applying GOOF zero or more times.",
    "samples": [
        [
            "ATTACC",
            "3"
        ],
        [
            "AAAAGAATTAA",
            "5"
        ]
    ],
    "hint": "",
    "translation": "### \u9898\u76ee\u63cf\u8ff0\n\u56fd\u9645\u7ec6\u80de\u52a0\u5de5\u516c\u53f8(ICPC)\u5728\u57fa\u56e0\u5e8f\u5217\u5206\u6790\u65b9\u9762\u5904\u4e8e\u4e16\u754c\u9886\u5148\u5730\u4f4d\u3002\u9057\u4f20\u5e8f\u5217\u662f\u6838\u82f7\u9178\u7684\u5e8f\u5217\uff0c\u5728\u8fd9\u4e2a\u95ee\u9898\u4e2d\uff0c\u5b83\u7531\u4e00\u4e2a\u53ea\u5305\u542b\u5b57\u6bcd$\\texttt{A}$\u3001$\\texttt{C}$\u3001$\\texttt{G}$\u548c$\\texttt{T}$\u7684\u67d0\u79cd\u7ec4\u5408\u7684\u5b57\u7b26\u4e32\u6765\u8868\u793a\uff0c\u6bcf\u4e2a\u5b57\u6bcd\u5206\u522b\u4ee3\u8868\u4e00\u4e2a\u6838\u82f7\u9178\u817a\u560c\u5464\uff08$\\textbf{A}$denine\uff09\u3001\u80de\u5627\u5576\uff08$\\textbf{C}$ytosine\uff09\u3001\u9e1f\u560c\u5464\uff08$\\textbf{G}$uanine\uff09\u548c\u80f8\u817a\u5627\u5576\uff08$\\textbf{T}$hymine\uff09\u3002\n\nICPC\u7684\u4e00\u4e2a\u91cd\u8981\u53d1\u73b0\u662f\uff0c\u901a\u8fc7\u4e00\u79cd\u88ab\u79f0\u4e3a\u57fa\u56e0\u4f18\u5316\u6709\u673a\u6298\u53e0(GOOF)\u7684\u8fc7\u7a0b\uff0c\u4ed6\u4eec\u53ef\u4ee5\u5c06\u4e00\u4e2a\u57fa\u56e0\u5e8f\u5217\u8f6c\u5316\u4e3a\u4e00\u4e2a\u66f4\u7b80\u5355\u7684\u5e8f\u5217\uff0c\u540c\u65f6\u4fdd\u7559ICPC\u60f3\u8981\u5206\u6790\u7684\u5e8f\u5217\u7684\u8bb8\u591a\u5c5e\u6027\u3002\n\n\u4ee5\u4e0b\u662fGOOF\u7684\u4e00\u4e2a\u5e94\u7528\u3002\u5728\u6838\u82f7\u9178\u5e8f\u5217\u4e2d\u4e24\u4e2a\u76f8\u90bb\u6838\u82f7\u9178\u4e4b\u95f4\u627e\u5230\u4e00\u4e2a\u70b9\uff0c\u4f7f\u4ece\u8be5\u70b9\u5f00\u59cb\u7684\u5e8f\u5217\u5728\u4e24\u4e2a\u65b9\u5411\u4e0a\u90fd\u662f\u76f8\u540c\u7684\uff0c\u76f4\u5230\u5e8f\u5217\u7684\u6700\u540e\u4e00\u4e2a\u70b9\u3002\u4f8b\u5982\uff0c\u5728\u5e8f\u5217$\\texttt{ATTACC}$\u4e2d\uff0c\u6709\u4e24\u4e2a\u8fd9\u6837\u7684\u70b9:$\\texttt{AT-TACC}$\u548c$\\texttt{ATTAC-C}$\u3002\u7136\u540e\u9009\u62e9\u5176\u4e2d\u4e00\u4e2a\u70b9(\u6bd4\u5982\u7b2c\u4e00\u4e2a\u70b9)\uff0c\u5728\u90a3\u4e2a\u70b9\u6298\u53e0\u57fa\u56e0\u5e8f\u5217\uff0c\u5408\u5e76\u76f8\u540c\u7684\u6838\u82f7\u9178(\u56e0\u6b64\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c$\\texttt{AT}$\u548c$\\texttt{TA}$\u4f1a\u5408\u5e76\uff0c\u5f97\u5230\u7684\u5e8f\u5217\u5c06\u662f$\\texttt{CCAT}$\u6216$\\texttt{TACC}$)\u3002\n\n\u901a\u8fc7\u91cd\u590d\u4f7f\u7528GOOF\uff0c\u53ef\u4ee5\u4f7f\u6838\u82f7\u9178\u53d8\u5f97\u66f4\u77ed\u3002\u4f46\u662f\uff0c\u624b\u5de5\u5bfb\u627e\u5408\u9002\u7684\u6298\u53e0\u70b9\u975e\u5e38\u8017\u65f6\u3002ICPC\u627e\u5230\u4f60\uff0c\u8ba9\u4f60\u5199\u4e00\u4e2a\u7a0b\u5e8f\u6765\u81ea\u52a8\u627e\u5230\u6298\u53e0\u70b9\u5e76\u9009\u62e9\u5b83\u4eec\uff0c\u4ece\u800c\u4ece\u7ed9\u5b9a\u7684\u8f93\u5165\u5e8f\u5217\u4e2d\u83b7\u5f97\u5c3d\u53ef\u80fd\u77ed\u7684\u57fa\u56e0\u5e8f\u5217\u3002\n\n### \u8f93\u5165\u683c\u5f0f\n\u8f93\u5165\u5305\u542b\u4e00\u4e2a\u8868\u793a\u8981\u5206\u6790\u7684\u6838\u82f7\u9178\u5e8f\u5217\u7684\u5b57\u7b26\u4e32\u3002\u53ea\u5305\u542b$\\texttt{A}$\u3001$\\texttt{C}$\u3001$\\texttt{G}$\u548c$\\texttt{T}$\u3002 _s_ \u957f\u5ea6\u5728$1$ ~ $4\\cdot10^6$\u4e4b\u95f4\u3002\n\n### \u8f93\u51fa\u683c\u5f0f\n\u8f93\u51fa\u4ece\u8f93\u5165\u4e2d\u5e94\u7528\u96f6\u6b21\u6216\u591a\u6b21GOOF\u5f97\u5230\u7684\u5e8f\u5217\u7684\u6700\u5c0f\u53ef\u80fd\u957f\u5ea6\u3002"
}