{
    "description": "Farmer John wants to save some blocks of his cows' delicious Wisconsin cheese varieties in his cellar for the coming winter. He has room for one tower of cheese in his cellar, and that tower's height can be at most T (1 <= T <= 1,000). The cows have provided him with a virtually unlimited number of blocks of each kind of N (1 <= N <= 100) different types of cheese (conveniently numbered 1..N). He'd like to store (subject to the constraints of height) the most\n\nvaluable set of blocks he possibly can. The cows will sell the rest to support the orphan calves association.\n\nEach block of the i-th type of cheese has some value V\\_i (1 <= V\\_i <= 1,000,000) and some height H\\_i (5 <= H\\_i <= T), which is always a multiple of 5.\n\nCheese compresses. A block of cheese that has height greater than or equal to K (1 <= K <= T) is considered 'large' and will crush any and all of the cheese blocks (even other large ones) located below it in the tower. A crushed block of cheese doesn't lose any value, but its height reduces to just 4/5 of its old height. Because the height of a block of cheese is always a multiple of 5, the height of a crushed block of cheese will always be an integer. A block of cheese is either crushed or not crushed; having multiple large blocks above it does not crush it more. Only tall blocks of cheese crush other blocks; aggregate height of a tower does not affect whether a block is crushed or not.\n\nWhat is the total value of the best cheese tower FJ can construct?\n\nConsider, for example, a cheese tower whose maximum height can be 53 to be build from three types of cheese blocks. Large blocks are those that are greater than or equal to 25. Below is a chart of the values and heights of the various cheese blocks he stacks:\n\nType    Value      Height \n\n1      100         25\n\n2       20          5\n\n3       40         10\n\nFJ constructs the following tower: \n\nType Height Value \n\ntop -> [1]   25    100\n\n```cpp\n[2]    4     20   <- crushed by [1] above \n[3]    8     40   <- crushed by [1] above \n[3]    8     40   <- crushed by [1] above \nbottom -> [3]    8     40   <- crushed by [1] above \n```\nThe topmost cheese block is so large that the blocks below it are crushed. The total height is:\n```cpp\n25 + 4 + 8 + 8 + 8 = 53 \nThe total height does not exceed 53 and thus is 'legal'. The total value is: \n100 + 20 + 40 + 40 + 40 = 240. \nThis is the best tower for this particular set of cheese blocks. \n\u8981\u5efa\u4e00\u4e2a\u5976\u916a\u5854\uff0c\u9ad8\u5ea6\u6700\u5927\u4e3aT\u3002\u4ed6\u6709N\u5757\u5976\u916a\u3002\u7b2ci\u5757\u9ad8\u5ea6\u4e3aHi\uff08\u4e00\u5b9a\u662f5\u7684\u500d\u6570\uff09\uff0c\u4ef7\u503c\u4e3aVi\u3002\u4e00\u5757\u9ad8\u5ea6>=K\u7684\u5976\u916a\u88ab\u79f0\u4e3a\u5927\u5976\u916a\uff0c\u4e00\u4e2a\u5976\u916a\u5982\u679c\u5728\u5b83\u4e0a\u65b9\u6709\u5927\u5976\u916a\uff08\u591a\u5757\u53ea\u7b97\u4e00\u6b21\uff09\uff0c\u5b83\u7684\u9ad8\u5ea6\u5c31\u4f1a\u53d8\u6210\u539f\u6765\u76844/5.\u3002 \u5f88\u663e\u7136John\u60f3\u8ba9\u4ed6\u7684\u5976\u916a\u4ed6\u4ef7\u503c\u548c\u6700\u5927\u3002\u6c42\u8fd9\u4e2a\u6700\u5927\u503c\u3002\n```",
    "inputFormat": "\\* Line 1: Three space-separated integers: N, T, and K\n\n\\* Lines 2..N+1: Line i+1 contains two space separated integers: V\\_i and H\\_i\n",
    "outputFormat": "\\* Line 1: The value of the best tower FJ can build\n",
    "samples": [
        [
            "3 53 25 \n100 25 \n20 5 \n40 10 \n",
            "240 \n"
        ]
    ],
    "hint": "",
    "translation": "**\u9898\u76ee\u63cf\u8ff0**\n\nFJ\u8981\u5efa\u4e00\u4e2a\u5976\u916a\u5854\uff0c\u9ad8\u5ea6\u6700\u5927\u4e3aT\u3002\u4ed6\u6709N\u79cd\u5976\u916a\u3002\u7b2ci\u79cd\u5976\u916a\u7684\u9ad8\u5ea6\u4e3aHi\uff08\u4e00\u5b9a\u662f5\u7684\u500d\u6570\uff09\uff0c\u4ef7\u503c\u4e3aVi\u3002\u4e00\u5757\u9ad8\u5ea6Hi>=K\u7684\u5976\u916a\u88ab\u79f0\u4e3a\u5927\u5976\u916a\uff0c\u4e00\u4e2a\u5976\u916a\u5982\u679c\u5728\u5b83\u4e0a\u65b9\u6709\u5927\u5976\u916a\uff08\u5982\u679c\u6709\u591a\u5757\u5c31\u53ea\u7b97\u4e00\u6b21\uff09\uff0c\u5b83\u7684\u9ad8\u5ea6Hi\u5c31\u4f1a\u53d8\u6210\u539f\u6765\u76844/5.\u3002FJ\u60f3\u8ba9\u4ed6\u7684\u5976\u916a\u5854\u4ef7\u503c\u548c\u6700\u5927\u3002\u8bf7\u4f60\u6c42\u51fa\u8fd9\u4e2a\u6700\u5927\u503c\u3002\n\n**\u8f93\u5165\u683c\u5f0f\uff1a**\n\n\u7b2c\u4e00\u884c\u4e09\u4e2a\u6570N,T,K\uff0c\u610f\u4e49\u5982\u4e0a\u6240\u8ff0\u3002\n\u63a5\u4e0b\u6765n\u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u6570V_i,h_i\uff08\u6ce8\u610f\u987a\u5e8f\uff09\n\n**\u8f93\u51fa\u683c\u5f0f\uff1a**\n\n\u5976\u916a\u5854\u7684\u6700\u5927\u4ef7\u503c"
}