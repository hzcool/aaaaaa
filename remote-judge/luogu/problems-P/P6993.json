{
    "description": "\n\nSon Halo owns $n$ spaceships numbered from $1$ to $n$ and a space station. They are initially placed on one line with the space station so the spaceship $i$ is positioned $x_i$ meters from the station and all ships are on the same side from the station $(x_i > 0)$ . All $x_i$ are distinct. Station is considered to have number $0$ and $x_0$ is considered to be equal to $0$ .\n\nEvery two spaceships with consequent numbers are connected by a rope, and the first one is connected to the station. The rope number $i$ (for $1 \\le i \\le n)$ connects ships $i$ and $i-1.$ Note, that the rope number $1$ connects the first ship to the station.\n\nSon Halo considers that the rope $i$ and the rope $j$ intersect when the segments $[x_{i}^{min}, x_{i}^{max}]$ and $[x_{j}^{min}, x_{j}^{max}]$ have common internal point but neither one of them is completely contained in the other, where $x_{k}^{min} = \\min(x_{k\u22121}, x_k)$, $x_{k}^{max} = max(x_{k\u22121}, x_k).$ That is:\n\n$$\\begin{cases} x_{i}^{min} < x_{j}^{min} \\sim \\& \\sim x_{j}^{min} < x_{i}^{max} \\sim \\& \\sim x_{i}^{max} < x_{j}^{max} \\\\ x_{j}^{min} < x_{i}^{min} \\sim \\& \\sim x_{i}^{min} < x_{j}^{max} \\sim \\& \\sim x_{j}^{max} < x_{i}^{max} \u00a0\\end{cases}$$\n\nSon Halo wants to rearrange spaceships in such a way, that there are no rope intersections. Because he is lazy, he wants to rearrange the ships in such a way, that the total number of ships that remain at their original position $x_i$ is maximal. All the ships must stay on the same side of the station and at different positions $x_i$ after rearrangement. However, ships can occupy any real positions $x_i$ after rearrangement.\n\nYour task is to figure out what is the maximal number of ships that can remain at their initial positions.\n\n",
    "inputFormat": "\n\nThe first line of the input file contains $\\(n\\) (1 \\le \\(n\\) \\le 200 000)$ -- the number of ships. The following line contains $\\(n\\)$ distinct integers $\\(x_i\\) (1 \\le \\(x_i\\) \\le \\(n\\))$ -- the initial positions of the spaceships.\n\n",
    "outputFormat": "\n\nThe output file must contain one integer -- the maximal number of ships that can remain at their initial positions in the solution of this problem.\n\n",
    "samples": [
        [
            "4\n1 3 2 4\n",
            "3\n"
        ],
        [
            "4\n1 4 2 3\n",
            "4\n"
        ]
    ],
    "hint": "Time limit: 1 s, Memory limit: 256 MB. \n\n",
    "translation": "\u4e00\u4e2a\u6570\u8f74\u4e0a\u6709 $n$ \u4e2a\u4f4d\u7f6e\u4e92\u5f02\u7684\u70b9\uff0c\u7b2c $i$ \u4e2a\u70b9\u7684\u5750\u6807\u4e3a $x_i\\ (x_i \\gt 0)$\uff0c\u7b2c $i$ \u4e2a\u70b9\u548c\u7b2c $i - 1$ \u4e2a\u70b9\u8fde\u4e86\u4e00\u6839\u7ef3\u5b50\uff08\u7b2c $1$ \u4e2a\u70b9\u548c\u539f\u70b9\u8fde\u4e86\u6839\u7ef3\u5b50\uff09\u5b9a\u4e49\u4e24\u6839\u7ef3\u5b50\u6709\u4ea4\u5f53\u4e14\u4ec5\u5f53\u5b83\u4eec\u8de8\u8d8a\u7684\u533a\u95f4\u6709\u4ea4\u4e14\u4e0d\u662f\u5305\u542b\u5173\u7cfb\u3002\u4f60\u53ef\u4ee5\u6539\u53d8\u82e5\u5e72\u4e2a\u70b9\u7684\u5750\u6807\u5230\u4e00\u4e2a\u4efb\u610f\u7684\u6b63\u5b9e\u6570\u4f4d\u7f6e\uff0c\u4f7f\u5f97\u6700\u540e\u4e0d\u5b58\u5728\u4efb\u4f55\u4e24\u6839\u7ef3\u5b50\u6709\u4ea4\u3002\u6700\u5927\u5316\u4e0d\u52a8\u7684\u70b9\u7684\u4e2a\u6570\u3002\n\n$n\\le 2\\times 10^5$\uff0c$x_i$ \u6784\u6210\u4e00\u4e2a $1,2,\\cdots,n$ \u7684\u6392\u5217\u3002"
}