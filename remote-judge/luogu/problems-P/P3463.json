{
    "description": "The Byteotian driving licence exam takes place in an area in which there are $n$ straight, parallel, unidirectional, north-oriented streets (that is the allowed driving direction is south to north). Each of the streets is exactly $m$ meters long, all of them begin and end on the same level. These streets are numbered from $1$ to $n$ starting the westernmost. There are also $p$ unidirectional, east or west-oriented streets perpendicular to the abovementioned, each one of them connecting a pair of adjacent north-oriented streets. It is also possible that an east-oriented and a west-oriented street overlap, thus forming a bidirectional one.\n\n\n ![](https://cdn.luogu.com.cn/upload/pic/6981.png) \n\nAn exemplary testing area ($n=4, m=3, p=5$).\n\nThe examiner chooses a north-oriented street, at the beginnig of which the examination starts and anothernorth-oriented street, where it is to come to an end. The task of the applicant is to drive from the starting tothe final point, observing the allowed directions.The examiner always chooses as starting point a street, from which it is possible to drive to the endpointof any other north-oriented street.The work of the examiners is a very tedious one, because they always have to start at the beginning ofone of the few suitable streets. The board of directors have decided to build a new testing area on the basis ofpre-existent plans. It has been calculated, that available funds allow for no more than $k$ east or west-orientedstreets to be built. Those new streets are to be constructed in such a way, so as to add the largest possiblenumber of potential starting points (there may or may not exist starting points on the pre-existent plan). Newstreets have to connect pairs of adjacent north-oriented streets.\n\n## Task\n\nWrite a programme which:\n\n- reads a description of the testing area and the number $k$ from the standard input,\n\n- calculates the greatest number of potential new starting points for the examination, generated by adding no more than $k$ east or west-oriented streets,\n\n- writes the outcome to the standard output.\n\n\n\u6210\u90fd\u7684\u9a7e\u9a76\u8003\u8bd5\u5728\u4e00\u4e2a\u6709n\u6761\u5e73\u884c\u7684\u81ea\u5357\u5411\u5317\u7684\u5355\u5411\u7684\u9053\u8def\u7684\u573a\u5730\u4e2d\u8fdb\u884c\u3002\u6bcf\u6761\u9053\u8def\u957f\u5ea6\u4e3am\u7c73\uff0c\u5e76\u4e14\u90fd\u5728\u540c\u4e00\u6761\u6c34\u5e73\u7ebf\u4e0a\u5f00\u59cb\u548c\u7ed3\u675f\u3002\u8857\u9053\u4ece\u897f\u5411\u4e1c\u5206\u522b\u7f16\u53f7\u4e3a1\u5230n\u3002\u540c\u6837\u6709p\u6761\u5355\u5411\u7684\u81ea\u897f\u5411\u4e1c\u6216\u81ea\u4e1c\u5411\u897f\u7684\u8857\u9053\u5782\u76f4\u4e8e\u4e0a\u9762\u63cf\u8ff0\u7684\u8857\u9053\uff0c\u6bcf\u4e00\u6761\u8fd9\u6837\u7684\u8857\u9053\u94fe\u63a5\u4e86\u4e24\u4e2a\u76f8\u90bb\u7684\u81ea\u5357\u5411\u5317\u7684\u9053\u8def\u3002\u5f53\u7136\u81ea\u897f\u5411\u4e1c\u548c\u81ea\u4e1c\u5411\u897f\u7684\u9053\u8def\u53ef\u4ee5\u91cd\u53e0\uff0c\u90a3\u5c31\u662f\u4e00\u4e2a\u53cc\u5411\u7684\u8857\u9053\u4e86\u3002\n\n\u8003\u751f\u9009\u62e9\u4e00\u4e2a\u81ea\u5357\u5411\u5317\u7684\u9053\u8def\u4f5c\u4e3a\u4ed6\u8003\u8bd5\u7684\u8d77\u59cb\u70b9\u548c\u53e6\u5916\u4e00\u4e2a\u81ea\u5357\u5411\u5317\u7684\u9053\u8def\u4f5c\u4e3a\u4ed6\u8003\u8bd5\u7684\u7ec8\u6b62\u70b9\u3002\u4ed6\u4eec\u7684\u8003\u8bd5\u9879\u76ee\u662f\u5c06\u8f66\u4ece\u5f00\u59cb\u7684\u9053\u8def\u9a7e\u9a76\u5230\u4f5c\u4e3a\u7ec8\u6b62\u70b9\u7684\u9053\u8def\u3002\u8003\u751f\u4eec\u603b\u662f\u9009\u62e9\u4e00\u4e2a\u53ef\u4ee5\u5230\u8fbe\u6240\u6709\u5176\u4ed6\u8857\u9053\u7684\u8d77\u59cb\u9053\u8def\u4f5c\u4e3a\u5f00\u59cb\u70b9\u3002\u73b0\u5728\uff0c\u8003\u751f\u4eec\u603b\u662f\u611f\u5230\u5341\u5206\u65e0\u8da3\u56e0\u4e3a\u4ed6\u4eec\u53ea\u6709\u5f88\u5c11\u7684\u8d77\u59cb\u9053\u8def\u53ef\u4ee5\u9009\u62e9\uff0c\u6240\u4ee5\u6559\u7ec3\u4eec\u51b3\u5b9a\u6539\u9020\u5148\u6709\u7684\u8003\u8bd5\u573a\u6240\uff0c\u7531\u4e8e\u7ecf\u8d39\u7684\u9650\u5236\uff0c\u4ed6\u4eec\u51b3\u5b9a\u6dfb\u52a0\u81f3\u591aK\u6761\u4e1c\u897f\u5411\u7684\u9053\u8def\uff0c\u4f7f\u5f97\u80fd\u591f\u9009\u62e9\u7684\u8d77\u59cb\u9053\u8def\u5c3d\u91cf\u5730\u591a\u3002\n",
    "inputFormat": "In the first line of the standard input there are four integers $n$, $m$, $p$ and $k$ ($2 \\le n \\le 100\\ 000$, $1 \\le m, k, \\le 100\\ 000$, $0 \\le p \\le 100\\ 000$), separated by single spaces, denoting respectively: the number of north-oriented streets, the length of each one of them, the number of pre-existent east or west-oriented streets, the maximal number of new streets to be built. The north-oriented streets are numbered from $1$ to $n$, starting with the westernmost.\n\n\nThe following $p$ lines contain three integers each: $n_i$, $m_i$ and $d_i$ ($1 \\le n_i \\le n$, $0 \\le m_i \\le m$, $d_i \\in \\{0, 1\\}$), separated by single spaces, denoting the 'th east-oriented (for $d_i=0$) or west-oriented (for $d_i=1$) street. This street connects north-oriented streets $n$ and $n+1$, intersecting them in points $m_i$ meters distant from their beginning.\n",
    "outputFormat": "The first and only line of the standard output should contain a single integer, denoting the maximal numberof new examination starting points generated by building no more than $k$ east or west-oriented streets. Thenewly built streets **do not have to** intersect the north-oriented streets in points, whose distance from thebeginning of the street is an integer. The newly built east or west-oriented streets may overlap, thus formingbidirectional streets.\n",
    "samples": [
        [
            "4 3 5 2\n2 0 0\n2 2 1\n3 3 1\n1 1 1\n3 3 0",
            "2"
        ]
    ],
    "hint": ""
}