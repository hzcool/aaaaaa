{
    "description": "As you know, the ACM ICPC is not the only major sporting event taking place in Russia this year. Several months ago, the 2014 Winter Olympics were held in Sochi, which is about 3\u2009000 km from Ekaterinburg.\n\nIn an increasing number of sports, it is not only the ability of the athletes that determines who wins a competition but also their equipment. For example in downhill skiing, having the latest ski technology enables athletes to increase their speeds and improve their turning ability.\n\nYou have been hired to determine the effect of the latest ski technology on the ability of skiers to navigate a downhill course. The course contains several target locations, and the skier wants to pass over as many of them as possible. Naturally, the better the ski technology, the easier it will be to do this.\n\nFor simplicity, use a two-dimensional coordinate system where the skier starts at position (0,0) and where \u201cdownhill\u201d corresponds to the direction of the positive $y$-axis.\n\nAssume the $y$-component of the athlete\u2019s velocity is a constant $v_ y$. The athlete can change speed laterally (in the $x$-direction), but the skiing equipment limits this to a maximal lateral acceleration $a_{max}$. The skier starts with a lateral velocity of 0.\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/us59dhj8.png)\n\n   Figure 1: Downhill ski path passing over three targets \n\nIn Figure 1 (which corresponds to the first sample input), the optimal path passes over three out of four possible targets. If $a_{max}$ were smaller, then the skier might be able to pass over only two or fewer of the targets.",
    "inputFormat": "The input contains a single test case. The first line contains three integers $n$, $v_ y$, and $a_{max}$ ($0 \\leq n \\leq 250$, $0 < v_ y \\leq 10^5$ and $0 \\leq a_{max} \\leq 10^7$), where $n$ is the number of targets, $v_ y$ is the $y$-component of the skier\u2019s velocity, and $a_{max}$ is the maximum lateral acceleration. Here $v_ y$ is given in meters per hour and $a_{max}$ in meters per hour squared.\n\nFollowing this are $n$ lines, each containing two integers $x_ i$ and $y_ i$ ($-10^5 \\leq x_ i, y_ i \\leq 10^5$). These give the coordinates of each target to be visited on the course. All coordinates are given in meters. Targets are numbered 1, 2, ..., $n$ in the order they are given.",
    "outputFormat": "Display the maximal-length sequence of targets that the athlete could pass over on the course in a single run. Display the targets in the order they are visited. If there are multiple maximal-length sequences, display only the lexicographically first one. (So the sequence 2 15 would come before the sequence 10 15.) If the athlete cannot pass over any targets, print Cannot visit any targets instead.\n\nTo ensure floating-point stability, you may assume the answer will not change if $a_{max}$ is perturbed by up to 0.1.",
    "samples": [
        [
            "4 100 400\n-100 100\n50 200\n-100 300\n150 300\n",
            "1 2 4\n"
        ],
        [
            "1 100 100\n1000 10\n",
            "Cannot visit any targets\n"
        ]
    ],
    "hint": "Time limit: 2000 ms, Memory limit: 1048576 kB. \n\n International Collegiate Programming Contest (ACM-ICPC) World Finals 2014",
    "translation": "**\u9898\u76ee\u63cf\u8ff0**\n\n\u6ed1\u96ea\u8fd0\u52a8\u5458\u8fdb\u884c\u7684\u4e00\u6b21\u8bad\u7ec3\u53ef\u4ee5\u770b\u4f5c\u5e73\u9762\u4e0a\u4e00\u6761\u4ece $(0, 0)$ \u51fa\u53d1\u7684\u66f2\u7ebf\uff0c\u8fd9\u6761\u66f2\u7ebf\u5728 $y$ \u8f74\u6b63\u65b9\u5411\u4e0a\u7684**\u901f\u5ea6**\u662f $v_y$\uff0c\u7531\u4e8e\u88c5\u5907\u9650\u5236\uff0c\u5728 $x$ \u8f74\u4e0a\u7684**\u52a0\u901f\u5ea6**\u4e0d\u5f97\u8d85\u8fc7 $a_{max}$\u3002\u6ed1\u96ea\u8fd0\u52a8\u5458\u5728 $x$ \u8f74\u4e0a\u7684\u901f\u5ea6\u4ece $0$ \u5f00\u59cb\u3002\n\n\u5728\u8fd9\u4e00\u6b21\u8bad\u7ec3\u4e2d\uff0c\u6ed1\u96ea\u8fd0\u52a8\u5458\u9700\u8981\u7ecf\u8fc7\u6240\u6709 $n$ \u4e2a\u76ee\u6807\u70b9 $(x_i, y_i)$ \u4e2d\u5c3d\u53ef\u80fd\u591a\u7684\u76ee\u6807\u70b9\uff0c\u73b0\u5728\u4ed6\u5e0c\u671b\u4f60\u901a\u8fc7\u63a7\u5236\u4ed6\u6bcf\u4e00\u65f6\u523b\u7684\u52a0\u901f\u5ea6\uff0c\u5b9e\u73b0\u8fd9\u4e2a\u76ee\u6807\u3002\n\n**\u8f93\u5165\u683c\u5f0f**\n\n\u7b2c\u4e00\u884c\u4e09\u4e2a\u6574\u6570 $n, v_y, a_{max}$ \u5206\u522b\u8868\u793a\u76ee\u6807\u70b9\u6570\uff0c$y$ \u8f74\u901f\u5ea6\uff08\u7c73\u6bcf\u79d2\uff09\u4ee5\u53ca $x$ \u8f74\u52a0\u901f\u5ea6\u4e0a\u9650\uff08\u7c73\u6bcf\u4e8c\u6b21\u65b9\u79d2\uff09\u3002\n\n\u63a5\u4e0b\u6765 $n$ \u884c\u6bcf\u884c\u4e24\u4e2a\u6574\u6570 $x, y$ \u8868\u793a\u76ee\u6807\u70b9\u7684\u6a2a\u5750\u6807\uff08\u7c73\uff09\u4ee5\u53ca\u7eb5\u5750\u6807\uff08\u7c73\uff09\u3002\n\n**\u8f93\u51fa\u683c\u5f0f**\n\n\u6309\u7167\u76ee\u6807\u70b9\u88ab\u7ecf\u8fc7\u7684\u987a\u5e8f\u8f93\u51fa\u6700\u957f\u7684\u76ee\u6807\u70b9\u5e8f\u5217\u3002\u82e5\u6709\u591a\u4e2a\u53ef\u80fd\u7684\u7b54\u6848\uff0c\u8f93\u51fa\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u3002\u82e5\u8fd0\u52a8\u5458\u4e0d\u80fd\u7ecf\u8fc7\u4efb\u610f\u4e00\u4e2a\u76ee\u6807\u70b9\uff0c\u8f93\u51fa `Cannot visit any targets`\u3002\n\n\u4e3a\u4e86\u907f\u514d\u6d6e\u70b9\u8bef\u5dee\uff0c\u4f60\u53ef\u4ee5\u5047\u8bbe\u5bf9 $a_max$ \u8fdb\u884c\u4e0d\u8d85\u8fc7 $0.1$ \u7684\u6270\u52a8\u7684\u60c5\u51b5\u4e0b\uff0c\u7b54\u6848\u4e0d\u53d8\u3002\n\n**\u6570\u636e\u8303\u56f4**\n\n$0\\le n\\le 250, 0\\le v_y\\le 10^5\n, 0\\le a_{max}\\le 10^7\n, \u221210^5\\le x, y\\le 10^5$\n, \u76ee\u6807\u70b9\u7f16\u53f7\u4ece 1 \u5f00\u59cb\u3002\n\n~~\u4e00\u53e5\u8bdd\u306e\u9898\u610f\uff1a\u8f93\u5165\u4e00\u4e9b\u6570\uff0c\u8f93\u51fa\u4e00\u4e9b\u6570\uff08\u6216\u5b57\u7b26\u4e32\uff09\uff0c\u4f7f\u8f93\u51fa\u7b26\u5408\u8981\u6c42\u3002~~"
}