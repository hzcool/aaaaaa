{
    "description": "The Byteotian Institute of Telecommunication (BIT) sets standards for data transmission in telecommunication networks all over Byteotia.\n\nByteasar, one of the engineers employed at BIT, works on prefix codes - a certain way of representing characters.\n\nFor each and every character of the Byteotian alphabet there is a corresponding sequence of bits, called the code word of that character.\n\nThe code words of all characters have the following properties:\n\nNone of the code words is a prefix (i.e. a leading       fragment) of another code word.\n\nFor example, if 010010 is the code word of the letter   A, then neither the bit sequence 0,   01, 010,  0100 nor 01001   is a code word of another letter.\n\nLikewise, 0100100, 0100101 and longer   sequences starting with 010010 are not code words.\n\nIf a given bit sequence ![](http://main.edu.pl/images/OI16/kod-en-tex.1.png) is a prefix of another code word,       but not the complete code, then each of the bit sequences       ![](http://main.edu.pl/images/OI16/kod-en-tex.2.png) and ![](http://main.edu.pl/images/OI16/kod-en-tex.3.png) (that is, ![](http://main.edu.pl/images/OI16/kod-en-tex.4.png) with zero or one       appended at the end) is a prefix of some code word, or the       complete code word.\n\nFor example, if 0100 is the prefix of the code word of the       letter A, then 01000 and 01001 each       is a prefix of some code word, or a complete code word.\n\nLet us consider the following exemplary prefix code for the alphabet consisting of the characters    A, B, C, D and E:\n\ncharactercode word    A00    B10    C11    D010    E011         Encoding a sequence of characters with a prefix code consists in concatenating the code words of its successive characters.\n\nFor example, the encoding of the sequence BACAEBABAE is 1000110001110001000011.\n\nByteasar noticed that if some leading bits are lost, the sequence may be decoded wrong, or it may even be not decoded at all.\n\nFor example, if five initial bits of the sequence given above are removed, the resulting sequence 10001110001000011 will be decoded as BACBABAE.\n\nThe last five letter (BABAE) are correct, but the first three (BAC) are not.\n\nByteasar further noticed that all the letters after the first E are decoded correct.\n\nHe concluded that whenever all the bits of the code word of E are intact, all the characters succeeding E will be decoded correct.\n\nThe same holds for every encoded sequence obtained from one that contains E.\n\nHe also noticed that the letter D shares this feature, but A, B and C do not.\n\nBecause of the properties of the code words of E and D Byteasar called them synchronising code words.\n\nHe trusted you with the task of writing a programme that finds all the synchronising code words of a given prefix code.\n\nTo save some time, he intends to present you all the code words on his binary monitor.\n\nThis interesting device has four buttons:\n\n0 - append ![](http://main.edu.pl/im\u2026\n",
    "inputFormat": "In the first line of the standard input there is an integer ![](http://main.edu.pl/images/OI16/kod-en-tex.7.png)      (![](http://main.edu.pl/images/OI16/kod-en-tex.8.png)) denoting the number of buttons pressed      by Byteasar.\n\nIn the following line an ![](http://main.edu.pl/images/OI16/kod-en-tex.9.png) letters long string consisting of the      characters '0', '1', 'B' and      'X' is given; the characters correspond to the buttons,      of course.\n\nEach time the button X is pressed, a code word is      completed and another one starts.\n\nThe code words are numbered starting with 1.\n\nThe sum of lengths of all code words will not exceed ![](http://main.edu.pl/images/OI16/kod-en-tex.10.png).\n",
    "outputFormat": "The number ![](http://main.edu.pl/images/OI16/kod-en-tex.11.png) of synchronising code words should be printed out in the     first line of the standard output.\n\nThe following ![](http://main.edu.pl/images/OI16/kod-en-tex.12.png) lines should contain the numbers of code words that  are synchronising in increasing order, each in a separate line.\n\nIf the given prefix code contains no synchronising code words, the first  line should contain the number 0, and no more lines should follow.\n",
    "samples": [
        [
            "21\n11XB0XBB00XB11XB0XBBB\n",
            "2\n4\n5\n"
        ]
    ],
    "hint": "",
    "translation": "## \u9898\u9762\u7ffb\u8bd1\n\n\u6709\u82e5\u5e72\u4e2a\u5b57\u7b26\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\uff0c\u7528\u4e00\u4e2a $01$ \u4e32\u7f16\u7801\u5b83\u3002\u6240\u6709\u7684 $01$ \u4e32\u7531\u4e00\u68f5\u5b8c\u5168\u7684 trie (\u6bcf\u4e2a\u70b9\u6709\u4e24\u4e2a\u513f\u5b50)\u7ed9\u51fa(\u5177\u4f53\u65b9\u5f0f\u89c1\u8f93\u5165\u683c\u5f0f)\uff0c\u4fdd\u8bc1\u6709\u4e14\u4ec5\u6709\u6bcf\u4e2a\u53f6\u5b50\u5bf9\u5e94\u4e00\u4e2a\u5b57\u7b26\u3002\u5b9a\u4e49\u4e00\u4e2a\u4e32 $s$ \u7f16\u7801\u7684\u7ed3\u679c\u662f\u5176\u4e2d\u5404\u4e2a\u5b57\u7b26\u7684\u7f16\u7801\u6309\u987a\u5e8f\u63a5\u8d77\u6765\uff0c\u8bb0\u4e3a $\\mathrm{encode}(s)$\u3002\n\n\u5b9a\u4e49\u5bf9\u4e00\u4e2a $01$ \u4e32\u8fdb\u884c\u89e3\u7801\u7684\u8fc7\u7a0b\u662f\uff0c\u6bcf\u6b21\u627e\u5230\u4e00\u4e2a\u524d\u7f00\uff0c\u6ee1\u8db3\u5b83\u5bf9\u5e94\u4e00\u4e2a\u5b57\u7b26\uff0c\u5bb9\u6613\u77e5\u9053\u8fd9\u6837\u7684\u524d\u7f00\u662f\u552f\u4e00\u7684\u3002\u5c06\u8fd9\u4e2a\u5b57\u7b26\u52a0\u5165\u7b54\u6848\uff0c\u5c06\u8fd9\u4e2a\u524d\u7f00\u4ece\u539f\u4e32\u4e2d\u5220\u6389\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u524d\u7f00\uff0c\u5219\u89e3\u7801\u7684\u7ed3\u679c\u662f\u672a\u5b9a\u4e49\u3002\u8bb0 $s$ \u89e3\u7801\u7684\u7ed3\u679c\u662f $\\mathrm{decode}(s)$\u3002\n\n\u8bbe\u4e00\u4e2a\u5b57\u7b26\u7f16\u7801\u4e3a $a$\uff0c\u5b9a\u4e49\u5b83\u662f\u597d\u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\u5bf9\u4e8e\u4efb\u610f\u4e24\u4e2a\u4e32 $s,t$\uff0c\u5bf9\u4e8e $\\mathrm{encode}(s)$ \u7684\u4efb\u610f\u540e\u7f00 $p$\uff0c\u6709 $\\mathrm{decode}(p+a)$ \u4e0d\u662f\u672a\u5b9a\u4e49\uff0c\u4e14 $\\mathrm{decode}(p+a+\\mathrm{encode}(t))=\\mathrm{decode}(p+a)+t$\u3002\u6c42\u54ea\u4e9b\u5b57\u7b26\u662f\u597d\u7684\u3002\n\n## \u8f93\u5165\u683c\u5f0f\n\n\u7b2c\u4e00\u884c\u4e00\u4e2a\u6570 $n$\uff0c\u8868\u793a\u64cd\u4f5c\u6b21\u6570\u3002\u63a5\u4e0b\u6765\u4e00\u884c\u4e00\u4e2a\u957f $n$ \u7684\u5b57\u7b26\u4e32\uff0c\u5176\u4e2d `0`/`1` \u8868\u793a\u5728\u5f53\u524d\u7ed3\u70b9\u6dfb\u52a0\u4e00\u4e2a\u513f\u5b50\uff0c\u8fb9\u6743\u4e3a `0`/`1`\uff0c\u5e76\u79fb\u52a8\u8fc7\u53bb\uff1b`B`\u8868\u793a\u6dfb\u52a0\u4e00\u4e2a\u7236\u4eb2\uff1b`X`\u8868\u793a\u5f53\u524d\u7ed3\u70b9\u662f\u4e00\u4e2a\u5b57\u7b26\u7684\u7f16\u7801\u3002\u4fdd\u8bc1\u8f93\u5165\u662f\u63cf\u8ff0\u8fd9\u68f5 trie \u7684\u6700\u77ed\u7684\u53ef\u80fd\u8f93\u5165\u3002$n\\leq 3\\times 10^6$ \uff0c\u6240\u6709\u5b57\u7b26\u7f16\u7801\u7684\u603b\u957f $\\leq 10^8$ \u3002\n\n## \u8f93\u51fa\u683c\u5f0f\n\n\u4e00\u884c\u4e00\u4e2a\u6570\uff0c\u8868\u793a\u597d\u7684\u5b57\u7b26\u7684\u6570\u91cf\u3002\n\n\u63a5\u4e0b\u6765\u82e5\u5e72\u884c\uff0c\u4ece\u5c0f\u5230\u5927\u8f93\u51fa\u6bcf\u4e2a\u597d\u7684\u5b57\u7b26\u662f\u7b2c\u51e0\u4e2a`X`\u751f\u6210\u7684\u3002\n\n"
}