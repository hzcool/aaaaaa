{
    "description": "\n\nYou have a convex polygon. The vertices of the polygon are successively numbered from $1$ to $n$ . You also have a triangulation of this polygon, given as a list of $n \u2212 3$ diagonals.\n\nYou are also given $q$ queries. Each query consists of two vertex indices. For each query, find the shortest distance between these two vertices, provided that you can move by the sides and by the given diagonals of the polygon, and the distance is measured as the total number of sides and diagonals you have traversed.\n\n",
    "inputFormat": "\n\nThe first line of the input file contains an integer $n$ -- the number of vertices of the polygon $(4 \\le n \\le 50 000)$ .\n\nEach of the following $n\u22123$ lines contains two integers $a_{i}, b_{i}$ -- the ends of the i-th diagonal $(1 \\le a_{i}, b_{i} \\le n , a_{i} \u2260 b_{i}).$\n\nThe next line contains an integer $q$ -- the number of queries $(1 \\le q \\le 100 000)$ .\n\nEach of the following $q$ lines contains two integers $x_{i}, y_{i}$ -- the vertices in the i-th query $(1 \\le x_{i}, y_{i} \\le n)$ .\n\nIt is guaranteed that no diagonal coincides with a side of the polygon, and that no two diagonals coincide or intersect.\n\n",
    "outputFormat": "\n\nFor each query output a line containing the shortest distance.\n\n",
    "samples": [
        [
            "6\n1 5\n2 4\n5 2\n5\n1 3\n2 5\n3 4\n6 3\n6 6\n",
            "2\n1\n1\n3\n0\n"
        ]
    ],
    "hint": "Time limit: 2 s, Memory limit: 256 MB. \n\n",
    "translation": "\u7ed9\u5b9a\u4e00\u4e2a\u6b63 $n$ \u8fb9\u5f62\u53ca\u5176\u4e09\u89d2\u5256\u5206, \u5171 $2n\u22123$ \u6761\u8fb9 ($n$ \u6761\u591a\u8fb9\u5f62\u7684\u8fb9\u548c $n\u22123$ \u6761\u5bf9\u89d2\u7ebf), \u6bcf\u6761\u8fb9\u7684\u957f\u5ea6\u4e3a $1$\u3002\n\n\u5171 $q$ \u6b21\u8be2\u95ee, \u6bcf\u6b21\u8be2\u95ee\u7ed9\u5b9a\u4e24\u4e2a\u70b9, \u6c42\u5b83\u4eec\u7684\u6700\u77ed\u8ddd\u79bb\u3002\n\nTranslated by Eason_AC  \n2020.11.19"
}