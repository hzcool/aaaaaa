{
    "description": "Farmer John has installed a fancy new milking machine in his barn, but it draws so much power that it occasionally causes the power to go out! This happens so often that Bessie has memorized a map of the barn, making it easier for her to find the exit of the barn in the dark. She is curious though about the impact of power loss on her ability to exit the barn quickly. For example, she wonders how much farther she might need to walk find the exit in the dark.\n\nThe barn is described by a simple (non self-intersecting) polygon with integer vertices $(x_1,y_1)\\ldots(x_n,y_n)$ listed in clockwise order. Its edges alternate between horizontal (parallel to the x-axis) and vertical (parallel to the y-axis); the first edge can be of either type. The exit is located at $(x_1,y_1)$. Bessie starts inside the barn located at some vertex $(x_i,y_i)$ for $i \\gt 1$. She can walk only around the perimeter of the barn, either clockwise or counterclockwise, potentially changing direction any time she reaches a vertex. Her goal is to travel a minimum distance to reach the exit. This is relatively easy to do with the lights on, of course, since she will travel either clockwise or counterclockwise from her current location to the exit -- whichever direction is shorter.\n\nOne day, the lights go out, causing Bessie to panic and forget which vertex she is standing at. Fortunately, she still remembers the exact map of the barn, so she can possibly figure out her position by walking around and using her sense of touch. Whenever she is standing at a vertex (including at her initial vertex), she can feel whether it is a left turn or a right turn, and she can tell if that vertex is the exit. When she walks along an edge of the barn, she can determine the exact length of the edge after walking along the entire edge. In general, Bessie will strategically feel her way around her starting vertex until she knows enough information to determine where she is, at which point she can easily figure out how to get to the exit by traveling a minimum amount of remaining distance.\n\nPlease help Bessie determine the smallest possible amount by which her travel distance will increase in the worst case (over all possibilities for her starting vertex) for travel in the dark versus in a lit barn, assuming she moves according to an optimal strategy in each case. An \"optimal\" strategy for the unlit case is one that minimizes this extra worst-case amount.",
    "inputFormat": "The first line of the input contains $N$ ($4 \\leq N \\leq 200$). Each of the next $N$ lines contains two integers, describing the points $(x_i,y_i)$ in clockwise order around the barn. These integers are in the range $-100,000 \\ldots 100,000$.",
    "outputFormat": "Please output the smallest possible worst-case amount by which Bessie's optimal distance in the dark is longer than her optimal distance in a lit barn, where the worst case is taken over all possible vertices at which Bessie can start.",
    "samples": [
        [
            "4\n0 0\n0 10\n1 10\n1 0",
            "2"
        ]
    ],
    "hint": "In this example, Bessie can feel that she is initially standing at an inward bend, however since in this example all corners are inward bends this tells her little information.\n\nOne optimal strategy is to just travel clockwise. This is optimal is she starts at vertex 3 or 4 and only adds 2 units of distance if she starts at vertex 2.",
    "translation": "## \u9898\u76ee\u5927\u610f\uff1a\n\u6309\u987a\u65f6\u9488\u987a\u5e8f\u7ed9\u4f60$N$ $(4\u2264N\u2264200)$ \u70b9\uff0c\u56f4\u6210\u4e00\u4e2aN\u8fb9\u5f62\u519c\u573a\u3002\u8d1d\u897f\u8981\u4ece\u67d0\u4e00\u70b9p\u51fa\u53d1\u8d70\u9053\u519c\u573a1\uff0c\u5979\u4e0d\u77e5\u9053\u81ea\u5df1\u5728\u54ea\u4e2a\u70b9\u3002\n\n\u5979\u5148\u6309\u987a\u65f6\u9488\u987a\u5e8f\u8d70\u82e5\u5e72\u4e2a\u70b9\uff0c\u8bb0\u5f55\u4e0b\u5979\u6240\u8d70\u7684\u6bcf\u6761\u8fb9\u7684\u957f\u5ea6\u548c\u6bcf\u6b21\u8f6c\u5f2f\u7684\u89d2\u5ea6\uff0c\u5982\u679c\u4ece\u5f53\u524d\u8bb0\u5f55\u7684\u4fe1\u606f\u80fd\u591f\u51c6\u786e\u5224\u65ad\u5979\u6240\u5728\u7684\u4f4d\u7f6e\uff0c\u5979\u5c31\u53ef\u4ee5\u9009\u62e9\u7ee7\u7eed\u4ee5\u5f80\u524d\u8d70\u6216\u6389\u5934\u5f80\u56de\u8d70\u4e24\u79cd\u65b9\u5f0f\u4e2d\u8ddd\u79bb\u8f83\u77ed\u7684\u65b9\u5f0f\u6765\u8d70\u52301\u3002\n\n\u73b0\u6c42\u5bf9\u4e8e\u6240\u6709\u4e0d\u540c\u7684\u51fa\u53d1\u70b9\uff0c\u4ece\u539f\u4f4d\u7f6e\u76f4\u63a5\u8d70\u52301\u7684\u8f83\u77ed\u8def\u5f84\uff08\u987a\u6216\u9006\u65f6\u9488\u8d70\uff09\u548c\u8d1d\u897f\u4ee5\u4e0a\u8ff0\u7684\u8fd9\u79cd\u65b9\u5f0f\u8d70\u51fa\u7684\u8def\u5f84\u957f\u5ea6\u7684\u5dee\u503c\u7684\u6700\u5927\u503c\u3002\n\n\u5907\u6ce8\uff1a\u6240\u7ed9\u519c\u573a\u6240\u6709\u7684\u8fb9\u5747\u6c34\u5e73\u6216\u7ad6\u76f4\uff0c\u8bb0\u5f55\u201c\u8f6c\u5f2f\u7684\u89d2\u5ea6\u201d\u53ef\u4ee5\u7406\u89e3\u4e3a\u8bb0\u5f55\u8f6c\u4e8690\u00b0\u6216270\u00b0\uff0c\u5373\u987a\u65f6\u9488\u8f6c\u5f2f\u6216\u9006\u65f6\u9488\u8f6c\u5f2f\u3002\n\n\u8f93\u5165\u6570\u636e\u7ed9\u51fa$N$\u548c$N$\u4e2a\u6a2a\u5750\u6807\u548c\u7eb5\u5750\u6807\u7684\u7edd\u5bf9\u503c\u90fd\u4e0d\u8d85\u8fc7$ 10^5 $\u7684\u70b9\uff0c\u6309\u7167\u9898\u76ee\u8981\u6c42\u8f93\u51fa\u3002"
}