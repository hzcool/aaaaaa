{
    "description": "The names of towns in Byteotia are unique sequences of exactly $n$ bits.\n\nThere are $2^n-k$ towns in Byteotia, and thus,only $k$ sequences of $n$ bits do not correspond to any town.\n\nSome pairs of towns are connected with roads.\n\nSpecifically, two towns are directly linked by a road if and only if their names differ in a single bit.\n\nThe roads do not cross outside of towns.\n\nByteasar intends to take a stroll - he intends to walk from the town $x$ to the town $y$, taking the existing roads.\n\nYour task is to write a program that will determine if such a walk is possible.\n\n\u67092^n\u4e2a\u957f\u5ea6\u4e3an\u768401\u4e32\uff0c\u4e24\u4e2a01\u4e32\u4e4b\u95f4\u6709\u8fb9\u5f53\u4e14\u4ec5\u5f53\u8fd9\u4e24\u4e2a01\u4e32\u53ea\u6709\u4e00\u4f4d\u4e0d\u540c\uff0c\u73b0\u5728\u4ece\u8fd92n\u4e2a\u4e32\u4e2d\u62ff\u6389k\u4e2a\uff0c\u95ee\u6307\u5b9a\u4e24\u4e2a\u4e32\u4e4b\u95f4\u80fd\u5426\u5230\u8fbe\n",
    "inputFormat": "In the first line of the standard input, there are two integers,$n$ and $k$($1\\le n\\le 60$, $0\\le k\\le 1\\ 000\\ 000$, $k\\le 2^n-1$, $n\\times k\\le 5\\ 000\\ 000$),      separated by a single space.\n\nThese are the length of town names in bits and the the number of $n$-bit sequences that do not correspond to any town, respectively.\n\nIn the second line, there are two strings, separated by a single space,      each consisting of $n$ characters 0 and/or 1.\n\nThese are the names of the towns $x$ and $y$.\n\nIn the $k$ lines that follow, all the sequences of $n$ bits that do not correspond to any town are given, one sequence per line.In the $k$ lines that follow, all the sequences of $n$ bits that do not correspond to any town are given, one sequence per line.Each such sequence is a string of $n$ characters 0 and/or 1.You may assume that $x$ and $y$ are not among those $k$ sequences.\n",
    "outputFormat": "Your program should print to the standard output the word TAK (Polish for yes) if walking from the town x to the town y is possible, and the word NIE (Polish for no) otherwise.\n",
    "samples": [
        [
            "4 6\n0000 1011\n0110\n0111\n0011\n1101\n1010\n1001\n",
            "TAK\n"
        ]
    ],
    "hint": "\u67092^n\u4e2a\u957f\u5ea6\u4e3an\u768401\u4e32\uff0c\u4e24\u4e2a01\u4e32\u4e4b\u95f4\u6709\u8fb9\u5f53\u4e14\u4ec5\u5f53\u8fd9\u4e24\u4e2a01\u4e32\u53ea\u6709\u4e00\u4f4d\u4e0d\u540c\uff0c\u73b0\u5728\u4ece\u8fd92n\u4e2a\u4e32\u4e2d\u62ff\u6389k\u4e2a\uff0c\u95ee\u6307\u5b9a\u4e24\u4e2a\u4e32\u4e4b\u95f4\u80fd\u5426\u5230\u8fbe\n"
}