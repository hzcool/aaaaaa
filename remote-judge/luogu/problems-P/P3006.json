{
    "description": "Farmer John is gathering the cows. His farm contains a network of N (1 <= N <= 100,000) fields conveniently numbered 1..N and connected by N-1 unidirectional paths that eventually lead to field 1. The fields and paths form a tree.\n\nEach field i > 1 has a single one-way, exiting path to field P\\_i, and currently contains C\\_i cows (1 <= C\\_i <= 1,000,000,000). In each time unit, no more than M\\_i (0 <= M\\_i <= 1,000,000,000) cows can travel from field i to field P\\_i (1 <= P\\_i <= N) (i.e., only M\\_i cows can traverse the path).\n\nFarmer John wants all the cows to congregate in field 1 (which has no limit on the number of cows it may have). Rules are as follows:\n\n\\* Time is considered in discrete units.\n\n\\* Any given cow might traverse multiple paths in the same time unit. However, no more than M\\_i total cows can leave field i (i.e., traverse its exit path) in the same time unit.\n\n\\* Cows never move \\*away\\* from field #1.\n\nIn other words, every time step, each cow has the choice either to\n\na) stay in its current field\n\nb) move through one or more fields toward field #1, as long as the bottleneck constraints for each path are not violated\n\nFarmer John wants to know how many cows can arrive in field 1 by certain times. In particular, he has a list of K (1 <= K <= 10,000) times T\\_i (1 <= T\\_i <= 1,000,000,000), and he wants to know, for each T\\_i in the list, the maximum number of cows that can arrive at field 1 by T\\_i if scheduled to optimize this quantity.\n\nConsider an example where the tree is a straight line, and the T\\_i list contains only T\\_1=5, and cows are distibuted as shown:\n\n```cpp\nLocn:      1---2---3---4      <-- Pasture ID numbers \nC_i:       0   1   12  12     <-- Current number of cows \nM_i:           5   8   3      <-- Limits on path traversal; field 1 has no limit since it has no exit \nThe solution is as follows; the goal is to move cows to field 1: \n```\nTree:      1---2---3---4\n```cpp\nt=0        0   1   12  12     <-- Initial state \nt=1        5   4   7   9      <-- field 1 has cows from field 2 and 3 t=2        10  7   2   6 \nt=3        15  7   0   3 \nt=4        20  5   0   0 \nt=5        25  0   0   0 \nThus, the answer is 25: all 25 cows can arrive at field 1 by time t=5. \n",
    "inputFormat": "\\* Line 1: Two space-separated integers: N and K\n\n\\* Lines 2..N: Line i (not i+1) describes field i with three \n\nspace-separated integers: P\\_i, C\\_i, and M\\_i\n\n\\* Lines N+1..N+K: Line N+i contains a single integer: T\\_i\n",
    "outputFormat": "\\* Lines 1..K: Line i contains a single integer that is the maximum number of cows that can arrive at field 1 by time T\\_i.\n",
    "samples": [
        [
            "4 1 \n1 1 5 \n2 12 7 \n3 12 3 \n5 \n",
            "25 \n"
        ]
    ],
    "hint": "",
    "translation": "WC\u6b63\u5728\u53ec\u96c6\u5976\u725b,\u4ed6\u7684\u519c\u573a\u6709\u4e00\u4e2a\u5305\u542b ***N*** \u5757\u519c\u7530\u7684\u7f51\u7edc\uff0c\u7f16\u53f7\u4e3a **1 -- N** \uff0c\u6bcf\u4e2a\u519c\u573a\u91cc\u6709 $C_i$ \u5934\u725b\u3002\u519c\u573a\u88ab **N-1**  \u6761 **\u5355\u5411** \u8fb9\u94fe\u63a5,\uff08\u6bcf\u4e2a\u519c\u573a\u6709\u901a\u5411$P_i$\u7684\u8def\uff09 \u4fdd\u8bc1\u4ece\u4efb\u4f55\u70b9\u53ef\u4ee5\u5230\u8fbe1\u53f7\u70b9\u3002WC\u60f3\u8ba9\u6240\u6709\u5976\u725b\u96c6\u4e2d\u52301\u53f7\u519c\u573a\u3002 \n\n**\u65f6\u95f4\u662f\u79bb\u6563\u7684** \u5976\u725b\u53ef\u4ee5\u57281\u5355\u4f4d\u65f6\u95f4\u91cc\u8d70\u8fc7\u4efb\u610f\u591a\u6761\u9053\u8def\uff0c\u4f46\u662f\u6bcf\u6761\u8def\u6709\u4e00\u4e2a\u5bb9\u7eb3\u4e0a\u9650 *$M_i$*  \u5e76\u4e14\u5976\u725b\u4e0d\u4f1a\u79bb\u5f001\u53f7\u519c\u573a(\u519c\u573a\u6ca1\u6709\u5bb9\u91cf\u4e0a\u9650) \n\n### \u6bcf\u4e00\u4e2a\u5355\u4f4d\u65f6\u95f4\uff0c\u5976\u725b\u53ef\u4ee5\u9009\u62e9\u5982\u4e0b\u51e0\u79cd\u884c\u52a8 \n1. \u7559\u5728\u5f53\u524d\u7684\u519c\u573a\n2. \u7ecf\u8fc7\u51e0\u6761\u9053\u8def\uff0c\u54111\u53f7\u519c\u573a\u79fb\u52a8\uff08\u9700\u8981\u6ee1\u8db3$M_i$\uff09\n\nWC\u60f3\u8981\u77e5\u9053\u6709\u591a\u5c11\u725b\u53ef\u4ee5\u5728\u67d0\u4e2a\u7279\u5b9a\u7684\u65f6\u523b\u5230\u8fbe1\u53f7\u519c\u573a\uff0c\n\u4ed6\u6709\u4e00\u5f20\u5217\u7740 ***K*** \u4e2a\u65f6\u95f4\uff08\u5206\u522b\u4e3a$T_i$)\u7684\u5355\u5b50\n\uff0c\u4ed6\u60f3\u77e5\u9053\u5728\u6bcf\u4e2a$T_i$, \u91c7\u7528\u6700\u4f18\u7b56\u7565\u5728$T_i$\u7ed3\u675f\u6700\u591a\u80fd\u6709\u591a\u5c11\u725b\u52301\u53f7\u519c\u573a\n\n### \u6570\u636e\u8303\u56f4\u5982\u4e0b\uff1a\n$1 \\le N \\le  10^5$\n\n$1 \\le C_i \\le  10^9$\n\n$0 \\le M_i \\le 10^9$\n\n$1 \\le P_i \\le N$\n\n$1 \\le K \\le 10^4$\n\n$1 \\le T_i \\le 10^9$\n\n\n## **\u8f93\u5165\u8f93\u51fa\u683c\u5f0f**\n* \u8f93\u5165\u683c\u5f0f\n \n    *\u7b2c\u4e00\u884c\uff1a\u4e24\u4e2a\u6574\u6570 N \u548c K\n    \n    *\u7b2c2\u2014N\u884c\uff0c\u7b2ci\u884c\u63cf\u8ff0\u4e00\u5757\u519c\u573a\u53ca\u5b83\u7684\u8def $P_i \\;C_i\\;M_i$\n\n    *\u7b2cN+1 - N+K\u884c\uff0c \u7b2cN+i \u4e00\u4e2a\u6574\u6570 $T_i$\n* \u8f93\u51fa\u683c\u5f0f\n    \n    *\u6bcf\u884c\u4e00\u4e2a\u7b54\u6848\u5bf9\u5e94$T_i$\n\n\u611f\u8c22@ToBiChi \u63d0\u4f9b\u7ffb\u8bd1"
}