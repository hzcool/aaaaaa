{
    "description": "\n\nJeremy, Richard and James like to test cars. It is always hard for them to decide where they should do it. Usually car test looks like this. They choose a country and examine its cities and two-way roads that connect them. To perform a test, they need to choose two different cities $S$ and $F$ , such that there exist three routes between them. Moreover, each city except $S$ and $F$ should be visited by at most one route, and none of the roads may be used twice.\n\nThen each of them takes a car in city $S$ , drives along one of those routes and tries to get to city $F$ faster than others.\n\nYou are given a description of multiple countries. For each country you should decide if it is possible to choose two cities and three routes between them in a way described above.\n\n",
    "inputFormat": "\n\nThe first line of the input contains a single integer $T$ -- number of countries $(1 \\le T \\le 100 000)$ . It is followed by $T$ country descriptions.\n\nThe first line of each country description contains two integers $n$ and $m$ -- the number of its cities and roads $(1 \\le n , m \\le 100 000)$ . The following $m$ lines contain two integer numbers each: $u_{i}$ and $v_{i}$ -- the cities at the ends of the road $(1 \\le u_{i} < v_{i} \\le n)$ . All roads are two-way. Each pair of cities is connected by at most one road.\n\nBoth the total number of cities and roads in all countries does not exceed $100 000$ .\n\n",
    "outputFormat": "\n\nOutput the answer for each country in the order they are given in the input.\n\nIf it is not possible to test cars in this country, the answer is $\u22121$ . Otherwise the first line of the answer should contain two integers $S$ and $F$ -- start and finish cities. The next three lines should contain three distinct routes. Each route is described by an integer $k$ -- the number of cities it visits, and $k$ numbers $v_{1}, v_{2}, \\cdots , v_{k}$ -- the cities, where $v_{1} = S , v_{k} = F$ , and there is a road between cities $v_{i}$ and $v_{i+1}$ for all $1 \\le i \\le k \u2212 1$ .\n\n",
    "samples": [
        [
            "2\n6 6\n3 6\n3 4\n1 4\n1 2\n1 3\n2 3\n3 1\n1 2\n",
            "1 3\n3 1 2 3\n2 1 3\n3 1 4 3\n-1\n"
        ]
    ],
    "hint": "Time limit: 3 s, Memory limit: 512 MB. \n\n",
    "translation": "**\u9898\u76ee\u63cf\u8ff0**  \n\u7ed9\u5b9a\u4e00\u5f20 $n$ \u4e2a\u8282\u70b9 $m$ \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u8bf7\u5728\u56fe\u4e2d\u627e\u51fa\u4e24\u4e2a\u70b9 $S$ \u548c $F$\uff0c\u4f7f\u5f97\u8fd9\u4e24\u70b9\u95f4\u81f3\u5c11\u5b58\u5728\u4e09\u6761\u4e0d\u76f8\u4ea4\u7684\u8def\u5f84\u3002\n\n**\u8f93\u5165\u683c\u5f0f**   \n\u8f93\u5165\u7684\u7b2c\u4e00\u884c\u5305\u6570\u636e\u7ec4\u6570 $T(1 \\leq T \\leq 100000)$\u3002\u5bf9\u4e8e\u6bcf\u7ec4\u6570\u636e\uff0c\u7b2c\u4e00\u884c\u4e3a\u4e24\u4e2a\u6574\u6570 $n$ \u548c $m$\u3002\u63a5\u4e0b\u6765 $m$ \u884c\u6bcf\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 $u$ \u548c $v(1 \\leq u < v \\leq n)$\uff0c\u8868\u793a\u8282\u70b9 $u$ \u548c $v$ \u4e4b\u95f4\u6709\u4e00\u6761\u8fb9\u3002\u6bcf\u5bf9\u8282\u70b9\u81f3\u591a\u88ab\u4e00\u6761\u8fb9\u8fde\u63a5\u3002\u4fdd\u8bc1 $\\sum n$ \u53ca $\\sum m$ \u4e0d\u8d85\u8fc7 $100000$\u3002\n\n**\u8f93\u51fa\u683c\u5f0f**  \n\u5bf9\u4e8e\u6bcf\u7ec4\u6570\u636e\uff0c\u82e5\u4e0d\u5b58\u5728\uff0c\u5219\u8f93\u51fa`-1`\u3002\u82e5\u5b58\u5728\uff0c\u5219\u7b2c\u4e00\u884c\u8f93\u51fa $S$ \u548c $F$\u3002\u63a5\u4e0b\u6765\u4e09\u884c\u8f93\u51fa\u4e09\u6761\u8def\u5f84\u3002\u6bcf\u884c\u5148\u8f93\u51fa\u8def\u5f84\u8def\u5f84\u5305\u542b\u7684\u70b9\u6570\uff0c\u7136\u540e\u4f9d\u6b21\u8f93\u51fa\u7531 $S$ \u5230 $F$ \u7684\u8def\u5f84\u4e0a\u5404\u70b9\u3002"
}