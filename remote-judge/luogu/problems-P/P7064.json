{
    "description": "\n\nIn computing, regular expressions is a powerful tool for text search and string matching. In this problem a simplified version of regular expressions is used:\n\n- An empty string ` ` is a regular expression, only the empty string matches it.\n\n- A single lowercase letter `c` is a regular expression, a string consisting of a single letter $c$ matches it.\n\n- A dot `.` is a regular expression, a string consisting of any single letter matches it.\n\n- Alternation: if $\u03b1$ and $\u03b2$ are regular expressions then `(\u03b1|\u03b2)` is a regular expression, a string $s$ matches it only if $s$ matches $\u03b1$ or $s$ matches $\u03b2$.\n\n- Concatenation: if $\u03b1$ and $\u03b2$ are regular expressions then `(\u03b1\u03b2)` is a regular expression, a string $s$ matches it only if $s =$ `xy`, $x$ matches $\u03b1$ and $y$ matches $\u03b2$.\n\n- Kleene star: if $\u03b1$ is regular expression then `(\u03b1\u2217)` is a regular expression, a string $s$ matches it only if $s$ is empty or $s =$ `xy`, $x$ is nonempty and matches $\u03b1$ and $y$ matches $(\u03b1\u2217).$ In other words, $s$ consists of zero or more strings, each of them matches $\u03b1.$\n\nParentheses can be omitted, in this problem Kleene star has the highest priority, concatenation has medium priority and alternation has lowest priority. Thus `abc*|de` means `(ab(c*))|(de)`.\n\nFor example, string `abcabcab` matches `a(bc|a)*ab`, but string `abcbab` does not.\n\nYour task is to find the shortest string that matches the given regular expression $E$ and contains the given substring $S$ .\n\n",
    "inputFormat": "\n\nThe first line of the input file contains the regular expression $E$ . The second line of the input file contains the substring $S (1 \\le |E| , |S| \\le 10 000)$ .\n\nString $S$ consists of lowercase English letters. Expression $E$ consists of lowercase English letters and special characters: dots (`.`), parentheses (`(`) and (`)`), pipes (`|`), and asterisks (`*`).\n\n",
    "outputFormat": "\n\nOutput the shortest possible string $T$ that both matches $E$ and contains $S$ as substring. If there are no such strings, output `NO`.\n\nThe string $T$ should contain only lowercase English letters.\n\n",
    "samples": [
        [
            "a.*b\nbab\n",
            "abab\n"
        ],
        [
            "(ab)*\nbb\n",
            "NO\n"
        ]
    ],
    "hint": "Time limit: 10 s, Memory limit: 256 MB. \n\n",
    "translation": "\u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u6b63\u5219\u8868\u8fbe\u5f0f\u662f\u6587\u672c\u641c\u7d22\u548c\u5b57\u7b26\u4e32\u5339\u914d\u7684\u5f3a\u529b\u5de5\u5177\u3002\u8fd9\u9053\u9898\u5c06\u4f7f\u7528\u7b80\u5316\u540e\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\uff1a\n\n+ \u4e00\u4e2a\u7a7a\u5b57\u7b26\u4e32()\u662f\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u4e14\u53ea\u6709\u7a7a\u5b57\u7b26\u4e32\u5339\u914d\u5b83\u3002\n\n+ \u4e00\u4e2a\u5c0f\u5199\u5b57\u6bcd(c)\u662f\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u53ea\u6709\u4ec5\u5305\u542b\u4e00\u4e2a\u5b57\u6bcd $c$ \u7684\u5b57\u7b26\u4e32\u5339\u914d\u5b83\u3002\n\n+ \u70b9(.)\u662f\u4e00\u4e2a\u6b63\u5219\u8fd0\u7b97\u7b26\uff0c\u4efb\u4f55\u4ec5\u5305\u542b\u4e00\u4e2a\u5b57\u6bcd\u7684\u5b57\u7b26\u4e32\u90fd\u5339\u914d\u5b83\u3002\n\n+ \u6216\u8fd0\u7b97\uff1a\u82e5 $\\alpha$ \u548c $\\beta$ \u662f\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5219 ( $\\alpha$ | $\\beta$ ) \u662f\u6b63\u5219\u8868\u8fbe\u5f0f\uff1b\u5f53\u4e14\u4ec5\u5f53\u5b57\u7b26\u4e32 $s$ \u5339\u914d $\\alpha$ \u6216 \u5339\u914d $\\beta$ \u65f6\uff0c$s$ \u5339\u914d ( $\\alpha$ | $\\beta$ )\u3002\n\n+ \u4e0e\u8fd0\u7b97\uff1a\u82e5 $\\alpha$ \u548c $\\beta$ \u662f\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5219 ( $\\alpha\\beta$ ) \u662f\u6b63\u5219\u8868\u8fbe\u5f0f\uff1b\u5f53\u4e14\u4ec5\u5f53\u5b57\u7b26\u4e32 $s$ \u53ef\u4ee5\u5206\u4e3a\u4e24\u4e2a\u5b50\u4e32 $x$ \u548c $y$ \uff0c\u4e14 $x$ \u5339\u914d $\\alpha$ \uff0c$y$ \u5339\u914d $\\beta$ \u65f6\uff0c$s$ \u5339\u914d ( $\\alpha\\beta$ )\u3002\n\n+ \u661f\u53f7\u8fd0\u7b97\uff1a\u82e5 $\\alpha$ \u662f\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5219 ( $\\operatorname{\\alpha_*}$ ) \u662f\u6b63\u5219\u8868\u8fbe\u5f0f\uff1b\u5f53\u4e14\u4ec5\u5f53\u5b57\u7b26\u4e32 $s$ \u4e3a\u7a7a\u6216 $s$ \u53ef\u4ee5\u88ab\u5206\u4e3a\u82e5\u5e72\u4e2a\u5339\u914d $\\alpha$ \u7684\u5b50\u4e32\u65f6\uff0c$s$ \u5339\u914d ( $\\operatorname{\\alpha_*}$ )\u3002\n\n\u5728\u672c\u9898\u4e2d\uff0c\u62ec\u53f7\u53ef\u4ee5\u88ab\u7701\u7565\uff1b\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u4ece\u9ad8\u5230\u4f4e\u4f9d\u6b21\u4e3a\uff1a\u661f\u53f7\u8fd0\u7b97\u3001\u4e0e\u8fd0\u7b97\uff0c\u6216\u8fd0\u7b97\u3002\u6240\u4ee5 ( $abc_*$ | $de$ ) \u5373 ( $ab$ ( $c_*$ )) | ( $de$ ) \u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5b57\u7b26\u4e32 $abcabcab$ \u5339\u914d ( $a$ ( $bc$ | $a$ )$_*ab$ )\uff0c\u800c\u5b57\u7b26\u4e32 $abcbab$ \u5e76\u4e0d\u5339\u914d\u5b83\u3002\n\n\u73b0\u7ed9\u5b9a\u6b63\u5219\u8868\u8fbe\u5f0f $E$ \u548c\u5b57\u7b26\u4e32 $S$ \uff0c\u8981\u6c42\u627e\u51fa\u6700\u77ed\u7684\u5339\u914d $E$ \u7684\u5b57\u7b26\u4e32 $T$ \uff0c\u4e14 $T$ \u5fc5\u987b\u5305\u542b $S$ \u3002"
}