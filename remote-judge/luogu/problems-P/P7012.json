{
    "description": "\n\nDraughts (or checkers) is a game played by two opponents, on opposite sides of a $10 \\times 10$ board. The board squares are painted black and white, as on a classic chessboard. One player controls the dark, and the other the light pieces. The pieces can only occupy the black squares. The players make their moves alternately, each moving one of his own pieces.\n\nThe most interesting type of move is capturing: if a diagonally adjacent square contains an opponent's piece, it may be captured (and removed from the game) by jumping over it to the unoccupied square immediately beyond it. It is allowed to make several consecutive captures in one move, if they are all made with a single piece. It is also legal to capture by either forward or backward jumps.\n\n![](/upload/images2/dr.png)\n\nThe board before and after a single move with two captures.\n\nYou are given a draughts position. It is the light player's turn. Compute the maximal possible number of dark pieces he can capture in his next move.\n\n",
    "inputFormat": "\n\nThe first line of input contains the number of test cases $T$ . The descriptions of the test cases follow:\n\nEach test case starts with an empty line. The following $10$ lines of $10$ characters each describe the board squares. The characters $#$ and . denote empty black and white squares, $W$ denotes a square with a light piece, $B -$ a square with a dark piece.\n\n",
    "outputFormat": "\n\nFor each test case print a single line containing the maximal possible number of captures. If there is no legal move (for example, there are no light pieces on the board), simply output $0$ .\n\n",
    "samples": [
        [
            "2\n\n.#.#.#.#.#\n#.#.#.#.#.\n.#.#.B.#.#\n#.#.#.#.#.\n.#.#.B.#.#\n#.#.W.#.#.\n.#.#.#.#.#\n#.#.#.B.#.\n.#.#.#.#.#\n#.#.#.#.#.\n\n.#.#.#.#.#\n#.#.#.#.#.\n.#.#.B.#.#\n#.B.#.B.#.\n.#.#.B.#.#\n#.B.W.#.#.\n.#.B.B.#.#\n#.#.#.#.#.\n.#.B.B.#.#\n#.#.#.#.#.\n",
            "2\n4\n"
        ]
    ],
    "hint": "Time limit: 2 s, Memory limit: 128 MB. \n\n",
    "translation": "\u56fd\u9645\u8df3\u68cb\uff08\u6216\u79f0\u8df3\u68cb\uff09\u662f\u4e00\u79cd\u7531\u4e24\u4e2a\u5bf9\u624b\u5728 $10 \\times 10$ \u7684\u68cb\u76d8\u4e0a\u8fdb\u884c\u7684\u6e38\u620f\u3002\u68cb\u76d8\u4e0a\u7684\u65b9\u5757\u662f\u9ed1\u8272\u6216\u767d\u8272\u7684\uff0c\u5c31\u50cf\u7ecf\u5178\u7684\u56fd\u9645\u8c61\u68cb\u68cb\u76d8\u4e00\u6837\u3002\u73a9\u5bb6\u4e00\u65b9\u63a7\u5236\u9ed1\u68cb\uff0c\u53e6\u4e00\u65b9\u63a7\u5236\u767d\u68cb\u3002\u68cb\u5b50\u53ea\u80fd\u5360\u636e\u9ed1\u8272\u7684\u683c\u5b50\u3002\u68cb\u624b\u4eec\u4ea4\u66ff\u8d70\u68cb\uff0c\u5404\u81ea\u79fb\u52a8\u81ea\u5df1\u7684\u4e00\u4e2a\u68cb\u5b50\u3002\n\n\u6700\u6709\u8da3\u7684\u8d70\u6cd5\u662f\u5403\u6389\uff1a\u5982\u679c\u4e00\u4e2a\u5bf9\u89d2\u7ebf\u76f8\u90bb\u7684\u683c\u5b50\u91cc\u6709\u5bf9\u624b\u7684\u68cb\u5b50\uff0c\u53ef\u4ee5\u901a\u8fc7\u8df3\u8fc7\u5b83\u5230\u7d27\u6328\u7740\u5b83\u7684\u672a\u88ab\u5360\u9886\u7684\u683c\u5b50\u6765\u5403\u6389\uff08\u5e76\u4ece\u6e38\u620f\u4e2d\u5220\u9664\u88ab\u5403\u6389\u7684\u8fd9\u4e2a\u68cb\u5b50\uff09\u3002\u5141\u8bb8\u5728\u4e00\u6b65\u68cb\u4e2d\u7528\u4e00\u4e2a\u68cb\u5b50\u8fde\u7eed\u5403\u6389\u51e0\u4e2a\u68cb\u5b50\u3002\u901a\u8fc7\u5411\u524d\u6216\u5411\u540e\u7684\u8df3\u8dc3\u6765\u5403\u5b50\u4e5f\u662f\u5408\u6cd5\u7684\u3002\n\n\u4f60\u4f1a\u5f97\u5230\u4e00\u4e2a\u68cb\u5b50\u7684\u4f4d\u7f6e\u3002\u73b0\u5728\u8f6e\u5230\u767d\u65b9\u4e86\u3002\u8ba1\u7b97\u4ed6\u5728\u4e0b\u4e00\u6b65\u68cb\u4e2d\u80fd\u5403\u6389\u7684\u6700\u5927\u53ef\u80fd\u7684\u9ed1\u68cb\u6570\u91cf\u3002\n\n\u8f93\u5165\u683c\u5f0f\n\n\u8f93\u5165\u7684\u7b2c\u4e00\u884c\u5305\u542b\u6d4b\u8bd5\u7528\u4f8b $T$ \u7684\u6570\u91cf\u3002\u63a5\u4e0b\u6765\u662f\u6d4b\u8bd5\u7528\u4f8b\u7684\u63cf\u8ff0\u3002\n\n\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u4ee5\u7a7a\u884c\u5f00\u59cb\u3002\u63a5\u4e0b\u6765\u7684 10 \u884c\uff0c\u6bcf\u884c\u90fd\u6709 10 \u4e2a\u5b57\u7b26\uff0c\u63cf\u8ff0\u68cb\u76d8\u7684\u65b9\u683c\u3002\u5b57\u7b26 # \u548c . \u8868\u793a\u7a7a\u7684\u9ed1\u8272\u548c\u767d\u8272\u65b9\u5757\uff0cW \u8868\u793a\u6709\u6d45\u8272\u68cb\u5b50\u7684\u65b9\u5757\uff0cB \u8868\u793a\u6709\u6df1\u8272\u68cb\u5b50\u7684\u65b9\u5757\u3002\n\n\u8f93\u51fa\u683c\u5f0f\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u6d4b\u8bd5\u6848\u4f8b\uff0c\u8f93\u51fa\u4e00\u884c\u4e00\u4e2a\u6574\u6570\uff0c\u4ee3\u8868\u6700\u591a\u53ef\u4ee5\u5403\u9ed1\u5b50\u7684\u4e2a\u6570\u3002\u5982\u679c\u6ca1\u6709\u5408\u6cd5\u7684\u68cb\u6b65\uff08\u4f8b\u5982\uff0c\u68cb\u76d8\u4e0a\u6ca1\u6709\u767d\u68cb\uff09\uff0c\u53ea\u9700\u8f93\u51fa 0\u3002"
}