{
    "description": "\u8f93\u5165\u4e24\u4e2a\u6574\u6570 $a, b$\uff0c\u8f93\u51fa\u5b83\u4eec\u7684\u548c\uff08$|a|,|b| \\le {10}^9$\uff09\u3002\n\n\u6ce8\u610f\n\n1. Pascal \u4f7f\u7528 `integer` \u4f1a\u7206\u6389\u54e6\uff01\n2. \u6709\u8d1f\u6570\u54e6\uff01\n3. C/C++ \u7684 main \u51fd\u6570\u5fc5\u987b\u662f `int` \u7c7b\u578b\uff0c\u800c\u4e14 C \u6700\u540e\u8981 `return 0`\u3002\u8fd9\u4e0d\u4ec5\u5bf9\u6d1b\u8c37\u5176\u4ed6\u9898\u76ee\u6709\u6548\uff0c\u800c\u4e14\u4e5f\u662f NOIP/CSP/NOI \u6bd4\u8d5b\u7684\u8981\u6c42\uff01\n\n\u597d\u5427\uff0c\u540c\u5fd7\u4eec\uff0c\u6211\u4eec\u5c31\u4ece\u8fd9\u4e00\u9898\u5f00\u59cb\uff0c\u5411\u7740\u5927\u725b\u7684\u8def\u8fdb\u53d1\u3002\n\n> \u4efb\u4f55\u4e00\u4e2a\u4f1f\u5927\u7684\u601d\u60f3\uff0c\u90fd\u6709\u4e00\u4e2a\u5fae\u4e0d\u8db3\u9053\u7684\u5f00\u59cb\u3002\n",
    "inputFormat": "\u4e24\u4e2a\u4ee5\u7a7a\u683c\u5206\u5f00\u7684\u6574\u6570\u3002",
    "outputFormat": "\u4e00\u4e2a\u6574\u6570\u3002",
    "samples": [
        [
            "20 30\n",
            "50\n"
        ]
    ],
    "hint": "**\u5e7f\u544a**\n\n\u6d1b\u8c37\u51fa\u54c1\u7684\u7b97\u6cd5\u6559\u6750\uff0c\u5e2e\u52a9\u60a8\u66f4\u7b80\u5355\u7684\u5b66\u4e60\u57fa\u7840\u7b97\u6cd5\u3002[\u3010\u5b98\u65b9\u7f51\u5e97\u7edd\u8d5e\u70ed\u5356\u4e2d\uff01\u3011>>>](https://item.taobao.com/item.htm?id=637730514783)\n\n[![](https://cdn.luogu.com.cn/upload/image_hosting/njc7dlng.png)](https://item.taobao.com/item.htm?id=637730514783)\n\n**\u672c\u9898\u5404\u79cd\u8bed\u8a00\u7684\u7a0b\u5e8f\u8303\u4f8b\uff1a**\n\nC\n```c\n#include <stdio.h>\n\nint main()\n{\n    int a,b;\n    scanf(\"%d%d\",&a,&b);\n    printf(\"%d\\n\", a+b);\n    return 0;\n}\n```\n----------------\n\nC++\n```cpp\n#include <iostream>\n#include <cstdio>\n\nusing namespace std;\n\nint main()\n{\n    int a,b;\n    cin >> a >> b;\n    cout << a+b << endl;\n    return 0;\n}\n```\n----------------\n\nPascal\n```cpp\nvar a, b: longint;\nbegin\n    readln(a,b);\n    writeln(a+b);\nend.\n```\n-----------------\n\nPython2\n\n```cpp\ns = raw_input().split()\nprint int(s[0]) + int(s[1])\n```\n-----------------\n\nPython3\n\n```cpp\ns = input().split()\nprint(int(s[0]) + int(s[1]))\n```\n-----------------\n\nJava\n```java\nimport java.io.*;\nimport java.util.*;\npublic class Main {\n    public static void main(String args[]) throws Exception {\n        Scanner cin=new Scanner(System.in);\n        int a = cin.nextInt(), b = cin.nextInt();\n        System.out.println(a+b);\n    }\n}\n```\n-----------------\n\nJavaScript \uff08Node.js\uff09\n\n```javascript\nconst fs = require('fs')\nconst data = fs.readFileSync('/dev/stdin')\nconst result = data.toString('ascii').trim().split(' ').map(x => parseInt(x)).reduce((a, b) => a + b, 0)\nconsole.log(result)\nprocess.exit() // \u8bf7\u6ce8\u610f\u5fc5\u987b\u5728\u51fa\u53e3\u70b9\u5904\u52a0\u5165\u6b64\u884c\n```\n\n-----------------\n\nRuby\n\n```ruby\na, b = gets.split.map(&:to_i)\nprint a+b\n```\n\n-----------------\n\nPHP\n\n```php\n<?php\n$input = trim(file_get_contents(\"php://stdin\"));\nlist($a, $b) = explode(' ', $input);\necho $a + $b;\n```\n\n-----------------\n\nRust\n\n```rust\nuse std::io;\n\nfn main(){\n    let mut input=String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let mut s=input.trim().split(' ');\n\n    let a:i32=s.next().unwrap()\n               .parse().unwrap();\n    let b:i32=s.next().unwrap()\n               .parse().unwrap();\n    println!(\"{}\",a+b);\n}\n```\n\n-----------------\n\nGo\n\n```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    var a, b int\n    fmt.Scanf(\"%d%d\", &a, &b)\n    fmt.Println(a+b)\n}\n```\n\n-----------------\n\nC# Mono\n\n```cs\nusing System;\n\npublic class APlusB{\n    private static void Main(){\n        string[] input = Console.ReadLine().Split(' ');\n        Console.WriteLine(int.Parse(input[0]) + int.Parse(input[1]));\n    }\n}\n```\n\n------------------\n\nVisual Basic Mono\n\n```vb\nImports System\n\nModule APlusB\n    Sub Main()\n        Dim ins As String() = Console.ReadLine().Split(New Char(){\" \"c})\n        Console.WriteLine(Int(ins(0))+Int(ins(1)))\n    End Sub\nEnd Module\n```\n\n------------------\n\nKotlin\n\n```kotlin\nfun main(args: Array<String>) {\n    val (a, b) = readLine()!!.split(' ').map(String::toInt)\n    println(a + b)\n}\n```\n\n------------------\n\nHaskell\n\n```haskell\nmain = do\n    [a, b] <- (map read . words) `fmap` getLine\n    print (a+b)\n```\n\n------------------\n\nScala\n\n```scala\nobject Main extends App {\n    println(scala.io.StdIn.readLine().split(\" \").map(_.toInt).sum)\n}\n```\n\n------------------\n\nPerl\n\n```perl\nmy $in = <STDIN>;\nchomp $in;\n$in = [split /[\\s,]+/, $in];\nmy $c = $in->[0] + $in->[1];\nprint \"$c\\n\";\n```\n"
}