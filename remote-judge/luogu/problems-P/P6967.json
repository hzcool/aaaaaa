{
    "description": "\n\nA cat is going on an adventure.\n\nEach hour, the cat can be either sleeping or eating. The cat cannot be doing both actions at the same hour, and the cat is doing exactly one of these actions for the whole hour.\n\nFor each of the next $n$ hours, the amount of delight the cat is getting if it is sleeping or eating during that hour is known. These amounts can be different for each hour.\n\nAn integer time period $k$ is also known. Among every $k$ consecutive hours, there should be at least $m_{s}$ hours when the cat is sleeping, and at least $m_{e}$ hours when the cat is eating. So, there are exactly $n \u2212 k + 1$ segments of $k$ hours for which this condition must be satisfied.\n\nFind the maximum total amount of delight the cat can get during the next $n$ hours.\n\n",
    "inputFormat": "\n\nThe first line of the input contains four integers $n , k , m_{s},$ and $m_{e} (1 \\le k \\le n \\le 1000$ ; $0 \\le m_{s}, m_{e} \\le k$ ; $m_{s} + m_{e} \\le k)$ -- the number of upcoming hours, the length of the period (in hours), and the minimum number of hours the cat should be sleeping and eating out of every $k$ consecutive hours, respectively.\n\nThe second line contains $n$ integers $s_{1}, s_{2},$ . . . , $s_{n} (0 \\le s_{i } \\le 10^{9}$ ) -- the amount of delight the cat gets when it is sleeping during the first, the second, $ \\cdots ,$ the n-th hour.\n\nThe third line contains $n$ integers $e_{1}, e_{2},$ . . . , $e_{n} (0 \\le e_{i} \\le 10^{9}$ ) -- the amount of delight the cat gets when it is eating during the first, the second, $ \\cdots ,$ the n-th hour.\n\n",
    "outputFormat": "\n\nIn the first line, output a single integer -- the maximum total amount of delight the cat can get during the next $n$ hours.\n\nIn the second line, output a string of length $n$ consisting of characters `S` and `E`. The i-th character of this string should correspond to whether the cat should sleep $(`S`)$ or eat $(`E`)$ in the i-th hour to get the maximum total amount of delight out of these $n$ hours.\n\n",
    "samples": [
        [
            "10 4 1 2\n1 2 3 4 5 6 7 8 9 10\n10 9 8 7 6 5 4 3 2 1\n",
            "69\nEEESESEESS\n"
        ]
    ],
    "hint": "Time limit: 2 s, Memory limit: 512 MB. \n\n",
    "translation": "\u4e00\u53ea\u732b\u732b\u5728\u8fde\u7eed\u7684 $n$ \u4e2a\u5c0f\u65f6\u4e2d\u53ef\u4ee5\u8fdb\u884c\u7761\u89c9\u6216\u8fdb\u98df\u4e24\u79cd\u52a8\u4f5c\u3002\u4e00\u4e2a\u5c0f\u65f6\u5185\u53ea\u80fd\u9009\u62e9\u5176\u4e2d\u4e00\u79cd\u8fdb\u884c\u3002\n\n\u73b0\u5728\u4f60\u77e5\u9053\u8fd9\u53ea\u732b\u5728\u63a5\u4e0b\u6765\u7684\u8fd9 $n$ \u4e2a\u5c0f\u65f6\u4e2d\u6bcf\u7b2c $i$ \u4e2a\u5c0f\u65f6\u7761\u89c9\u6216\u8fdb\u98df\u5206\u522b\u83b7\u5f97\u7684\u5feb\u4e50\u503c $s_i$ \u548c $e_i$\u3002\n\n\u4f46\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8fde\u7eed\u7684 $k$ \u4e2a\u5c0f\u65f6\uff0c\u8fd9\u53ea\u732b\u5fc5\u987b\u6ee1\u8db3\u5728\u8fd9 $k$ \u4e2a\u5c0f\u65f6\u5185\u81f3\u5c11\u6709 $m_e$ \u4e2a\u5c0f\u65f6\u7684\u8fdb\u98df\u65f6\u95f4\u548c $m_s$ \u4e2a\u5c0f\u65f6\u7684\u7761\u89c9\u65f6\u95f4\u3002\u4e5f\u5c31\u662f\u8bf4\u5728\u8fd9 $n$ \u4e2a\u5c0f\u65f6\u4e2d\u7684 $n-k+1$ \u4e2a $k$ \u957f\u8fde\u7eed\u533a\u95f4\u5fc5\u987b\u6ee1\u8db3\u7761\u89c9\u65f6\u95f4 $\\geq m_s$ \uff0c\u8fdb\u98df\u65f6\u95f4 $\\geq m_e$\u3002\n\n\u73b0\u5728\u5c0f\u732b\u60f3\u77e5\u9053\u81ea\u5df1\u8fd9 $n$ \u4e2a\u5c0f\u65f6\u6700\u591a\u80fd\u83b7\u5f97\u591a\u5c11\u5feb\u4e50\u503c\u4ee5\u53ca\u76f8\u5bf9\u5e94\u7684\u65b9\u6848\u3002\n\n\u8f93\u5165\uff1a\n\n\u7b2c\u4e00\u884c\u5206\u522b\u8f93\u5165 $n,k,m_s,m_e$ \u3002\n\n\u7b2c\u4e8c\u884c\u8f93\u5165 $n$ \u4e2a\u6570\u5b57 $s_1,s_2,\\dots, s_n$ \u5206\u522b\u4ee3\u8868\u6bcf\u4e2a\u5c0f\u65f6\u5982\u679c\u7761\u89c9\u53ef\u4ee5\u83b7\u5f97\u7684\u5feb\u4e50\u503c\u3002\n\n\u7b2c\u4e09\u884c\u8f93\u5165 $n$ \u4e2a\u6570\u5b57 $e_1,e_2,\\dots,e_n$ \u5206\u522b\u4ee3\u8868\u6bcf\u4e2a\u5c0f\u65f6\u5982\u679c\u8fdb\u98df\u53ef\u4ee5\u83b7\u5f97\u7684\u5feb\u4e50\u503c\u3002\n\n\u8f93\u51fa\uff1a\n\n\u7b2c\u4e00\u884c\u8f93\u51fa\u53ef\u4ee5\u83b7\u5f97\u7684\u6700\u5927\u5feb\u4e50\u503c\u3002\n\n\u7b2c\u4e8c\u884c\u8f93\u51fa**\u4e00\u4e2a\u5408\u6cd5\u65b9\u6848**\uff0c$n$ \u4e2a\u5b57\u7b26\u8868\u793a\u6bcf\u4e2a\u5c0f\u65f6\u8fdb\u884c\u7684\u52a8\u4f5c\u3002\u7b2c $i$ \u4e2a\u5b57\u7b26\u7528 `S` \u8868\u793a\u7b2c $i$ \u4e2a\u5c0f\u65f6\u5728\u7761\u89c9\uff0c\u6216\u7528 `E` \u8868\u793a\u7b2c $i$ \u4e2a\u5c0f\u65f6\u5728\u8fdb\u98df\u3002"
}