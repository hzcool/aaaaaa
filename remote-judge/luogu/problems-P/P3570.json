{
    "description": "Byteburg is a beautiful town by a river.\n\nThere are $n$ houses along the river, numbered downstream with successive integers from $1$ to $n$.\n\nByteburg used to be a nice quiet town in which everyone was happy.\n\nAlas, this changed recently, as two dangerous criminals - Bitie and Bytie set up shop in it.\n\nThey did so many robberies already that the citizens are afraid to leave their houses.\n\nBitie and Bytie do no mere burglaries but rather whole raids: each time they leave their houses and walk towards each other, never turning back.\n\nBitie walks downstream (towards larger numbers) while Bytie walks upstream (towards smaller numbers).\n\nAlong the way, before they meet, each chooses several houses to break into and steal precious items    (and vital data).\n\nAfter the robberies they meet in a house and divide their loot.\n\nByteburgers are sick of this already - they would all rather have their tranquility restored.\n\nSo they asked the detective Bythony for help.\n\nThe detective established that the bandits live in houses of the same color but he does not know which one.\n\nJust a moment ago, an anonymous tip claimed that the robbers are on a raid.\n\nFearing for their own safety, the source did not say which houses will be broken into.\n\nThey did however specify their colors.\n\nAs it turns out, the bandits are quite superstitious - each of them will rob a house of each color at most once.\n\nBythony can wait no longer.\n\nHe intends to ambush the criminals at their meeting place.\n\nAid Bythony in his undertaking by writing a program to find all possible meeting places of the robbers.\n",
    "inputFormat": "There are two integers in the first line of the standard input, $n$ and $k$ ($3\\le n\\le 1\\ 000\\ 000$, $1\\le k\\le 1\\ 000\\ 000$, $k\\le n$),  separated by a single space, that specify the number of houses and the number of house colors  in Byteburg respectively.\n\nThe colors are number with successive integers from $1$ to $k$.\n\nIn the second line of input, there is a sequence of $n$ integers, $c_1,c_2,\\cdots,c_n$ ($1\\le c_i\\le k$), separated by single spaces.\n\nThese are the colors of successive houses in Byteburg.\n\nIn the third line of input, there are two integers $m$ and $l$($1\\le m,l\\le n$,$m+l\\le n-1$), separated by a single space, specifying the numbers of houses (to be) broken into by Bitie and Bytie respectively. In the fourth line of input, there are $m$ pairwise different integers $x_1,x_2,\\cdots,x_m$($1\\le x_i\\le k$), separated by single spaces. These are the colors of houses robbed by Bitie in the order of being broken into (i.e., excluding Bitie's house). In the fifth, which is the last, line of input, there are $l$ pairwise different integers $y_1,y_2,\\cdots,y_l$ ($1\\le y_i\\le k$), separated by single spaces. These are the colors of houses robbed by Bytie in the order of being broken into (again, these do not include Bytie's house). Moreover, $x_m=y_l$ is the color of the house in which the robbers will divide the plunder. (Clearly, they have to break into that one as well!)\n",
    "outputFormat": "Your program it to print exactly two lines to the standard output.\n\nThe first of those should give the number of houses in which the criminals can meet  while respecting aforementioned constraints.\n\nThe second line should contain the increasing sequence of the numbers of those houses,  separated by single spaces.\n\nIf the robbers cannot meet at all, the first line should contain the number 0 while the second one should be empty.\n",
    "samples": [
        [
            "15 7\n2 5 6 2 4 7 3 3 2 3 7 5 3 6 2\n3 2\n4 7 3\n5 3\n",
            "3\n7 8 10\n"
        ]
    ],
    "hint": "",
    "translation": "## \u9898\u76ee\u63cf\u8ff0\n\n\u4e24\u4e2a\u7f6a\u72af Bitie \u548c Bytie \u62a2\u52ab $n$ \u4e2a\u623f\u5b50\uff0c\u6bcf\u4e2a\u623f\u5b50\u6709\u4e00\u4e2a\u989c\u8272\uff0cBitie \u4ece\u4f4e\u7f16\u53f7\u5230\u9ad8\u7f16\u53f7\uff0cBytie \u4ece\u9ad8\u7f16\u53f7\u5230\u4f4e\u7f16\u53f7\uff0c\u76f4\u5230\u76f8\u9047\u4e3a\u6b62\u3002\u5df2\u77e5\u7f6a\u72af\u5f00\u59cb\u65f6\u6240\u5728\u623f\u5b50\u989c\u8272\u76f8\u540c\uff08\u4f46\u4e0d\u77e5\u9053\u662f\u4ec0\u4e48\u989c\u8272\uff09\uff0c\u5e76\u4e14\u77e5\u9053\u7f6a\u72af\u4f9d\u6b21\u62a2\u52ab\u7684\u6240\u6709\u623f\u5b50\u7684\u989c\u8272\uff0c\u4e14\u6bcf\u4e2a\u7f6a\u72af\u5bf9\u6bcf\u79cd\u989c\u8272\u7684\u623f\u5b50\u5206\u522b\u6700\u591a\u62a2\u52ab\u4e00\u6b21\uff0c\u6c42\u6240\u6709\u53ef\u80fd\u7684\u76f8\u9047\u70b9\u3002\n\n## \u8f93\u5165\u683c\u5f0f\n\n\u7b2c\u4e00\u884c\u4e24\u4e2a\u6574\u6570 $n,k$ \uff0c\u5206\u522b\u8868\u793a\u623f\u5b50\u7684\u4e2a\u6570\u548c\u4e0d\u540c\u7684\u989c\u8272\u6570\u3002\u989c\u8272\u4ee5\u4ece $1$ \u5230 $k$ \u7684\u6574\u6570\u6807\u53f7\u3002\n\n\u63a5\u4e0b\u6765\u4e00\u884c\u6709 $n$ \u4e2a\u6574\u6570 $c_1,c_2,...,c_n (1 \\le c_i \\le k)$\uff0c\u8868\u793a\u623f\u5b50\u7684\u989c\u8272\u3002\n\n\u7b2c\u4e09\u884c\u6709\u4e24\u4e2a\u6574\u6570 $m,l (1 \\le m,l \\le n,m+l \\le n-1)$\uff0c\u5206\u522b\u8868\u793a Bitie \u548c Bytie \u62a2\u52ab\u623f\u5b50\u7684\u4e2a\u6570\u3002\n\n\u7b2c\u56db\u884c\u6709 $m$ \u4e2a\u4e24\u4e24\u4e0d\u540c\u7684\u6574\u6570 $x_1, x_2, ..., x_m (1 \\le x_i \\le k)$\uff0c\u8868\u793a Bitie \u62a2\u52ab\u623f\u5b50\u7684\u989c\u8272\uff08\u4e0d\u5305\u62ec Bitie \u5f00\u59cb\u65f6\u6240\u5728\u623f\u5b50\u7684\u989c\u8272\uff09\u3002\n\n\u7b2c\u4e94\u884c\u6709 $l$ \u4e2a\u4e24\u4e24\u4e0d\u540c\u7684\u6574\u6570 $y_1, y_2, ..., y_l (1 \\le y_i \\le k)$\uff0c\u8868\u793a Bytie \u62a2\u52ab\u623f\u5b50\u7684\u989c\u8272 \uff08\u4e0d\u5305\u62ec Bytie \u5f00\u59cb\u65f6\u6240\u5728\u623f\u5b50\u7684\u989c\u8272\uff09\u3002\n\n\u4fdd\u8bc1 $x_m = y_l$\u3002\n\n## \u8f93\u51fa\u683c\u5f0f\n\n\u8f93\u51fa\u4e24\u884c\uff0c\u7b2c\u4e00\u884c\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u53ef\u80fd\u76f8\u9047\u7684\u623f\u5b50\u4e2a\u6570\uff0c\u7b2c\u4e8c\u884c\u5347\u5e8f\u8f93\u51fa\u53ef\u80fd\u76f8\u9047\u7684\u623f\u5b50\u7f16\u53f7\u3002"
}