[
    {
        "content": "\u79bb\u7ebf\u8be2\u95ee\uff0c\u5c06\u8be2\u95ee\u6309\u7167\u53f3\u7aef\u70b9\u6392\u5e8f\uff0c\u4f9d\u6b21\u52a0\u5165\u6bcf\u4e2a\u6570\u540e\u7edf\u8ba1\u4ee5\u8be5\u6570\u4e3a\u53f3\u7aef\u70b9\u7684\u8be2\u95ee\u533a\u95f4\u7684\u7b54\u6848\u3002\r\n\r\n\u4e0d\u96be\u53d1\u73b0\uff0c\u8bbe\u6570\u5b57$x$\u4e0a\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u4e3a$las_x$\uff0c\u5219\u65b0\u52a0\u5165\u4e00\u4e2a$x$\u5bf9\u4e8e$las_x$\u524d\u9762\u7684\u533a\u95f4\u6ca1\u6709\u5f71\u54cd\u3002\r\n\r\n\u7531\u4e8e\u53ea\u9700\u8981\u7edf\u8ba110\u4ee5\u4e0b\u7684\u6781\u957f\u503c\u57df\u8fde\u7eed\u6bb5\uff0c\u8003\u8651\u66b4\u529b\u3002\u8bbe\u5f53\u524d\u52a0\u5165\u7684\u6570\u5b57\u4e3a$x$\uff0c\u5219\u5c06\u503c\u57df\u5728$[x-11,x+11]$\u7684\u6570\u5b57\u5168\u90e8\u63d0\u53d6\u51fa\u6765\u6309\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e\u4ece\u53f3\u5f80\u5de6\u7edf\u8ba1\u7b54\u6848\u3002\r\n\r\n\u8003\u8651\u79fb\u52a8\u53f3\u7aef\u70b9\u53ef\u80fd\u589e\u52a0\u7684\u65b9\u6848\u6570\uff0c\u8bbe\u5f53\u524d\u8981\u52a0\u5165\u7684\u6570\u5b57\u4e3a$x$\uff0c\u53ef\u80fd\u53d1\u751f\u4ee5\u4e0b\u51e0\u79cd\u60c5\u51b5\uff1a\r\n\r\n1\u3001\u67d0\u503c\u57df\u8fde\u7eed\u6bb5\u4e0b\u9762\uff08\u6700\u4f4e\u5904\uff09\u52a0\u4e0a\u4e86$x$\u3002\r\n\r\n2\u3001\u67d0\u503c\u57df\u8fde\u7eed\u6bb5\u4e0a\u9762\uff08\u6700\u9ad8\u5904\uff09\u52a0\u4e0a\u4e86$x$\u3002\r\n\r\n3\u3001\u67d0\u4e24\u4e2a\u503c\u57df\u8fde\u7eed\u6bb5\u901a\u8fc7$x$\u8fde\u6210\u4e00\u4e2a\u65b0\u7684\u503c\u57df\u8fde\u7eed\u6bb5\u3002\r\n\r\n\u5f53\u53d1\u751f3\u65f6\uff0c1\u548c2\u90fd\u4e0d\u518d\u662f\u6781\u957f\u8fde\u7eed\u503c\u57df\u6bb5\u3002\u5c061\u30012\u60c5\u51b5\u5220\u9664\uff0c\u52a0\u51653\u60c5\u51b5\u5373\u53ef\u3002\r\n\r\n\u8003\u8651\u7ef4\u62a4\u4e00\u4e2a\u5e8f\u5217$b_{l, r}$\u8868\u793a\u5f53\u524d\u53f3\u7aef\u70b9\u4e3a$r$\uff0c\u5de6\u7aef\u70b9\u4e3a$l$\u7684\u7b54\u6848\u3002\r\n\r\n\u679a\u4e3e\u53f3\u7aef\u70b9\uff0c\u6309\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e\u4ece\u53f3\u5f80\u5de6\u52a0\u5165\u5de6\u7aef\u70b9\u7edf\u8ba1\u7b54\u6848\uff0c\u6bcf\u6b21\u52a0\u5165\u4e00\u4e2a\u5de6\u7aef\u70b9\u65f6\u6309\u4e0a\u9762\u4e09\u79cd\u60c5\u51b5\u5206\u522b\u7edf\u8ba1\u4ea7\u751f\u7684\u8d21\u732e\u65f6\uff0c\u4e0d\u96be\u53d1\u73b0\u5f53$b_{l,r}$\u88ab\u6539\u53d8\u65f6\uff0c\u6709\u4e00\u6bb5\u533a\u95f4\u7684\u7b54\u6848\u90fd\u4f1a\u88ab\u6539\u53d8\u3002\u9700\u8981\u4e00\u4e2a\u652f\u6301\u533a\u95f4\u52a0\u5355\u70b9\u67e5\u8be2\u7684\u6570\u636e\u7ed3\u6784\u6765\u7ef4\u62a4\u3002\u9009\u7528\u6811\u72b6\u6570\u7ec4\u3002\r\n\r\n\u4ee3\u7801\uff1a\uff08\u5176\u5b9e\u548cmemset0\u5de8\u5de8\u5199\u7684\u597d\u50cf\u5dee\u4e0d\u591a\uff1f\uff09\r\n\r\n```cpp\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\nconst int MAXN = 1000050;\r\nvoid read(int &x) {\r\n\tchar ch; while(ch = getchar(), ch < '!'); x = ch - 48;\r\n\twhile(ch = getchar(), ch > '!') x = (x << 3) + (x << 1) + ch - 48;\r\n}\r\nstruct Q {int l, p;}; vector <Q> s[MAXN];\r\nint n, m, a[MAXN], ans[MAXN][30], las[MAXN]; bool vis[MAXN];\r\nstruct D {\r\n\tint p, c;\r\n\tbool operator < (const D &b) const {return p > b.p;}\r\n};\r\nstruct BITS {\r\n\tint t[MAXN];\r\n\tvoid modify(int x, int k) {for(; x; t[x] += k, x -= x&-x);}\r\n\tint query(int x) {int z = 0; for(; x <= n; z += t[x], x += x&-x); return z;}\r\n} t[30];\r\nint main() {\r\n\tread(n); read(m); for(int i = 1; i <= n; ++i) read(a[i]);\r\n\tfor(int l, r, i = 1; i <= m; ++i) read(l), read(r), s[r].push_back((Q) {l, i});\r\n\tfor(int i = 1; i <= n; ++i) {\r\n\t\tvector <D> q; vector <int> del;\r\n\t\tfor(int j = max(1, a[i] - 11); j <= a[i] + 11; ++j)\r\n\t\t\tif(las[j] && las[j] > las[a[i]]) q.push_back((D) {las[j], j});\r\n\t\tvis[a[i]] = 1; q.push_back((D) {las[a[i]], -1}); q.push_back((D) {i, a[i]});\r\n\t\tsort(q.begin(), q.end());\r\n\t\tfor(int U, L = 0, R = 0, j = 0; j < q.size() - 1; ++j) {\r\n\t\t\tif(~q[j].c) vis[q[j].c] = 1, del.push_back(q[j].c);\r\n\t\t\tfor(; vis[a[i]-L-1]; ++L); for(; vis[a[i]+R+1]; ++R);\r\n\t\t\tU = L + R + 1;\r\n\t\t\tif(1 <= L && L <= 10) t[L].modify(q[j].p, -1), t[L].modify(q[j+1].p, 1);\r\n\t\t\tif(1 <= R && R <= 10) t[R].modify(q[j].p, -1), t[R].modify(q[j+1].p, 1);\r\n\t\t\tif(1 <= U && U <= 10) t[U].modify(q[j].p, 1), t[U].modify(q[j+1].p, -1);\r\n\t\t} vis[a[i]] = 0;\r\n\t\tfor(int j = 0; j < del.size(); ++j) vis[del[j]] = 0;\r\n\t\tfor(int j = 0; j < s[i].size(); ++j)\r\n\t\t\tfor(int k = 1; k <= 10; ++k)\r\n\t\t\t\tans[s[i][j].p][k] = t[k].query(s[i][j].l);\r\n\t\tlas[a[i]] = i;\r\n\t}\r\n\tfor(int i = 1; i <= m; ++i) {\r\n\t\tfor(int j = 1; j <= 10; ++j)\r\n\t\t\tputchar(ans[i][j] % 10 + 48);\r\n\t\tputchar('\\n');\r\n\t}\r\n}\r\n\r\n```",
        "postTime": 1572876967,
        "uid": 2491,
        "name": "\u8bd7\u4e43",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5070 \u3010[Ynoi2015]\u5373\u4fbf\u770b\u4e0d\u5230\u672a\u6765\u3011"
    },
    {
        "content": "- \u8c28\u4ee5\u6b64\u9898\u89e3\uff0c\u7eaa\u5ff5[gzp_26867](https://www.luogu.com.cn/user/26867)\uff0c\u4e00\u4f4d\u201c\u73c2\u5b66\u5bb6\u201d\u3002\n- \u5f53\u65f6\u4ed6\u88ab\u8feb\u9000\u5f79\uff0c\u8e0c\u8e87\u540e\u6258\u6211\u5b9e\u73b0\u8fd9\u4e2a\u5fc3\u613f\u3002\n- \u8fd9\u51e0\u5e74\u6765\uff0c\u4e00\u8def\u6d6e\u6c89\uff0c\u957f\u8def\u6f2b\u6f2b\uff0c\u6211\u4e5f\u591a\u6b21\u5728\u9000\u5f79\u7684\u8fb9\u7f18\u5f98\u5f8a\u3002\n- \u5ffd\u7136\u53d1\u73b0\u6709\u9053\u9898\u76ee\u597d\u50cf\u5df2\u7ecf\u5728\u6211\u7684\u80fd\u529b\u8303\u56f4\u4e4b\u5185\uff0c\u4e8e\u662f\u5199\u4e86\u8fd9\u9053\u9898\u76ee\u3002\n- \u201c\u5373\u4fbf\u770b\u4e0d\u5230\u672a\u6765\u201d\u4e2a\u4eba\u8ba4\u4e3a\u662f\u4e2a\u6781\u597d\u7684\u540d\u5b57\uff0c\u770b\u4f3c\u7070\u6697\uff0c\u7ec6\u7ec6\u54c1\u5473\u4e4b\u4e0b\uff0c\u624d\u80fd\u770b\u5230\u8bb2\u8ff0\u8005\u7684\u575a\u5fcd\u3002\n- \u8c28\u4ee5\u6b64\u9898\u89e3\uff0c\u4e0e\u541b\u5171\u52c9\u3002\n\n**\u9898\u610f**\n- [\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P5070)\u3002\n- \u5bf9\u4e8e $k\\in[1,10]$ \u9759\u6001\u67e5\u8be2\u4e00\u4e2a\u533a\u95f4\u5185\u90e8\u7684\u6570\u7ec4\u6210\u7684\u957f\u5ea6\u4e3a $k$ \u7684\u6781\u5927\u503c\u57df\u8fde\u7eed\u6bb5\u7684\u4e2a\u6570\u3002\n- \u533a\u95f4\u7684\u6781\u5927\u503c\u57df\u8fde\u7eed\u6bb5\u5373\u533a\u95f4\u5185\u7684\u6570\u6392\u5e8f\u540e\u53bb\u91cd\u5f62\u6210\u7684\u4e0d\u80fd\u5411\u5de6\u6216\u5411\u53f3\u62d3\u5c55\u7684\u503c\u57df\u8fde\u7eed\u6bb5\u3002\n- \u6570\u5217\u957f\u5ea6\uff0c\u8be2\u95ee\u6b21\u6570 $n,m\\le 10^6$\u3002\n\n**\u5206\u6790**\n- \u9996\u5148\u4e0d\u5f3a\u5236\u5728\u7ebf\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u4ec0\u4e48\u79bb\u7ebf\u505a\u6cd5\uff1f\n- \u7ed3\u5408\u6570\u636e\u8303\u56f4\uff0c\u626b\u63cf\u7ebf\u662f\u5408\u7406\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u628a\u533a\u95f4\u67e5\u8be2\u6309\u533a\u95f4\u53f3\u7aef\u70b9\u6392\u5e8f\uff0c\u7136\u540e\u6211\u4eec\u5c1d\u8bd5\u7ef4\u62a4\u67d0\u4e9b\u540e\u7f00\u7684\u4fe1\u606f\u3002\n- \u800c\u8fd9\u4e2a\u7ef4\u62a4\u7684\u4fe1\u606f\uff0c\u663e\u7136\u662f\u7ef4\u62a4\u540e\u7f00\u503c\u57df\u8fde\u7eed\u6bb5\u7684\u4e2a\u6570\uff0c\u7531\u4e8e\u8fd9\u9898 $k$ \u5f88\u5c0f\uff0c\u6211\u4eec\u53ef\u4ee5\u5f00 $k$ \u4e2a\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u3002\n- \u7531\u4e8e\u60f3\u5230\u6211\u4eec\u8981\u7ef4\u62a4\u7684\u662f\u8fde\u7eed\u6bb5\u4fe1\u606f\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\u7ef4\u62a4\u4e00\u4e2a\u7c7b\u4f3c\u94fe\u8868\u7684\u7ed3\u6784\uff0c\u6bcf\u4e2a\u70b9\u7684\u524d\u9a71\u548c\u540e\u7ee7\u4ee3\u8868\u5b83\u5728\u503c\u57df\u4e0a\u7684\u5927 $1$ \u6570\u548c\u5c0f $1$ \u6570\u7684\u524d\u4e8e\u626b\u63cf\u53f3\u7aef\u70b9 $r$ \u7684\u6700\u540e\u4f4d\u7f6e\uff08\u4e0d\u5b58\u5728\u5373\u4e3a\u7a7a\uff09\uff0c\u6709\u5e8f\u8868\u7684\u66f4\u65b0\u5b58\u5728\u94fe\u63a5\uff0c\u4e5f\u5b58\u5728\u8986\u76d6\u3002\n![](https://cdn.luogu.com.cn/upload/image_hosting/nbvhem33.png)\n- \u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u6709\u5e8f\u8868\u53ef\u4ee5\u6709\u6548\u5730\u7b80\u5316\u95ee\u9898\uff0c\u73b0\u5728\u6211\u4eec\u7684\u67e5\u8be2\u8f6c\u5316\u4e3a\u628a\u6709\u5e8f\u8868\u4e2d\u4f4d\u7f6e\u4e0d\u5c0f\u4e8e $l$ \u7684\u5143\u7d20\u4fdd\u7559\u4e0b\u6765\u5f62\u6210\u7684\u8fde\u901a\u5757\u7684\u4fe1\u606f\u3002\n- \u90a3\u4e48\u5982\u4f55\u66f4\u65b0\u4fe1\u606f\uff1f\n- \u6211\u4eec\u4e0d\u59a8\u770b\u770b\u5b83\u5f71\u54cd\u4e86\u54ea\u4e9b\u8fde\u7eed\u6bb5\uff0c\u8fd9\u91cc\u6709\u4e2a\u5f62\u8c61\u7684\u56fe\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/0jh0kftx.png)\n- \u6ca1\u9519\uff0c\u5982\u679c\u6211\u4eec\u66b4\u529b\u5411\u5de6\u626b\u63cf\uff0c\u6211\u4eec\u5c06\u4f1a\u770b\u5230\uff0c\u81f3\u591a\u4f1a\u5f71\u54cd $O(k)$ \u4e2a\u70b9\u7684\u8d21\u732e\uff08\u5b83\u5fc5\u987b\u662f\u8fb9\u7f18\u662f\u626b\u63cf\u5230\u7684\u53f3\u7aef\u70b9\u7684\u6570\u7684\u8fde\u7eed\u6bb5\uff0c\u4e14\u957f\u5ea6\u4e0d\u8d85\u8fc7 $10$\uff09\uff0c\u5373\u4f7f\u6211\u4eec\u4e00\u4e00\u66f4\u65b0\uff0c\u590d\u6742\u5ea6\u4e5f\u662f\u5b8c\u5168\u53ef\u63a5\u53d7\u7684\u3002\n- \u6211\u4eec\u4f7f\u7528 $k$ \u68f5\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4fe1\u606f\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230 $O(nk\\log n+m(\\log n+\\log m))$ \u7684\u590d\u6742\u5ea6\uff0c\u74f6\u9888\u4e3b\u8981\u662f\u524d\u4e00\u9879\u3002\n- [\u4ee3\u7801\u5b9e\u73b0](https://www.luogu.com.cn/paste/v8i7g40s)\uff0c\u5b8c\u5168\u4e0d\u5361\u5e38\u3002",
        "postTime": 1645073732,
        "uid": 260884,
        "name": "WeLikeStudying",
        "ccfLevel": 0,
        "title": "\u3010\u626b\u63cf\u7ebf\u3011\u5373\u4fbf\u770b\u4e0d\u5230\u672a\u6765"
    },
    {
        "content": "## Section 0\n\u4e3a\u5565\u8fd9\u4e2a\u9898\u6ca1\u4eba\u5199\u9898\u89e3\u554a\u3002\n## Section 1\n\u9996\u5148\u8003\u8651\u80fd\u4e0d\u80fd\u5728\u7ebf\u7528\u7ebf\u6bb5\u6811\u8fd9\u7c7b\u4e1c\u897f\u505a\u3002\n\n\u8003\u8651\u600e\u4e48\u5feb\u901f\u5408\u5e76\u4e24\u4e2a\u533a\u95f4\u7684\u7b54\u6848\uff0c\u597d\u50cf\u5e76\u4e0d\u80fd\u5feb\u901f\u5408\u5e76\u4e24\u4e2a\u533a\u95f4\u7684\u7b54\u6848\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5148\u8003\u8651\u4e00\u4e2a\uff08\u4e0d\u662f\u6b63\u89e3\uff09\u7684\u66b4\u529b\u63d2\u5165\u5220\u9664\u505a\u6cd5\uff0c\u4e5f\u5c31\u662f\u83ab\u961f\u3002\n## Section 2\n\u56e0\u4e3a\u662f\u53ef\u4ee5\u79bb\u7ebf\u7684\u533a\u95f4\u67e5\u8be2\uff0c\u6211\u4eec\u6218\u672f\u6765\u4e00\u53d1\u83ab\u961f\u3002\n\n\u5148\u4e0d\u7ba1 $10^6$ \u80fd\u4e0d\u80fd\u8fc7\u53bb\uff0c\u8003\u8651\u600e\u4e48\u7ef4\u62a4\u52a0\u6570\u548c\u5220\u6570\u3002\n\n\u6211\u4eec\u53d1\u73b0\u52a0\u6570\u7684\u8fc7\u7a0b\u5176\u5b9e\u5c31\u662f\u5408\u5e76\u6781\u957f\u6bb5\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u662f\u53ef\u4ee5 $O(1)$ \u505a\u7684\u3002\n\n\u5177\u4f53\u4e0a\u5c31\u662f\u7ef4\u62a4\u6bcf\u4e2a\u6570\u6240\u5728\u7684\u6781\u957f\u6bb5\u7684\u4e24\u4e2a\u7aef\u70b9\uff0c\u7136\u540e\u5408\u5e76\u65b0\u63d2\u5165\u7684\u6570\u4e24\u6bb5\u7684\u6570\uff0c\u548c\u7b2c\u5341\u5206\u5757\u7684\u90a3\u4e2a\u7ef4\u62a4\u6bd4\u8f83\u50cf\u3002\n\n\u4f46\u662f\u5220\u9664\u8d3c\u9ebb\u70e6\uff0c\u56e0\u6b64\u53ea\u80fd\u56de\u6eda\u83ab\u961f\u3002\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u53d1\u73b0\u5927\u5e38\u6570 $O(n\\sqrt m)$ \u663e\u7136\u8fc7\u4e0d\u53bb\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u7a81\u7136\u53d1\u73b0\u7ed9\u7684\u6700\u5927\u533a\u95f4\u957f\u5ea6 $10$ \u538b\u6839\u6ca1\u7528\uff0c\u663e\u7136\u8fd9\u4e0d\u662f\u6b63\u89e3\u3002\n## Section 3\n\u7136\u540e\u6211\u5c31\u4e0d\u4f1a\u4e86\u2026\u2026\u53bb\u770b\u4e86\u4e00\u773c\u5b98\u65b9\u9898\u89e3\uff0cget \u5230\u4e86\u5173\u952e\u5b57**\u626b\u63cf\u7ebf**\u3002\n\n\u6211\u4eec\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e2a\u56fa\u5b9a\u7684 $l$ \u5206\u522b\u632a $r$ \u7684\u7aef\u70b9\uff0c\u8fd9\u6837\u5c31\u53ea\u6709\u52a0\u5165\u6ca1\u6709\u5220\u9664\u4e86\uff0c\u7136\u800c\u590d\u6742\u5ea6\u4e5f\u7206\u70b8\u4e86\u3002\n\n\u4f46\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6240\u6709\u7684 $l$ \u4e00\u8d77\u5904\u7406\uff0c\u590d\u6742\u5ea6\u5c31\u6ca1\u7206\u70b8\u4e86\uff01\n\n\u7136\u540e\u8003\u8651\u600e\u4e48\u4e00\u8d77\u5904\u7406\u3002\u6211\u4eec\u53d1\u73b0 $l$ \u8d8a\u5c0f\uff0c\u65b0\u589e\u4e00\u4e2a\u6570\u7684\u5408\u5e76\u957f\u5ea6\u5c31\u8d8a\u5927\u3002\u7531\u4e8e\u5408\u5e76\u957f\u5ea6\u6700\u5927\u53ea\u6709 $10$\uff0c\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u8fd9\u4e2a\u6570\u52a0\u5165\u4e4b\u524d\u6240\u6709\u6570\u7684**\u6700\u540e\u51fa\u73b0\u4f4d\u7f6e** $lst$\uff0c\u7136\u540e\u66b4\u529b\u79fb\u52a8\u7aef\u70b9\u6765\u641e\u3002\n\n\u8fd9\u91cc\u8981\u6ce8\u610f\u533a\u95f4\u6700\u591a\u53ea\u80fd\u5ef6\u4f38\u5230\u8fd9\u4e2a\u6570\u4e0a\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e $lst_{a_i}$\uff0c\u4e0d\u7136\u6839\u672c\u6ca1\u63d2\u5165\u3002\n\n\u6700\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5bf9\u4e00\u4e2a $r$ \u5f97\u5230\u51e0\u6bb5 $l$ \u7684\u63d2\u5165\u6548\u679c\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u6bb5\u5f00\u4e2a\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5de6\u8fb9\u5220\u9664\u7684\u90e8\u5206\uff0c\u53f3\u8fb9\u5220\u9664\u7684\u90e8\u5206\uff0c\u6574\u4f53\u52a0\u5165\u7684\u90e8\u5206\u5373\u53ef\u3002\n\n\u73b0\u5728\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(nk\\log n+m\\log n)$\uff0c\u5176\u4e2d $k=10$\u3002\n\n\u867d\u7136\u5e38\u6570\u5e76\u4e0d\u662f\u5f88\u5c0f\uff08\u8fd9\u4e2a $10$ \u6216\u8bb8\u63a5\u8fd1 $30$\uff09\uff0c\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u3002\n## Code\n\u6ca1\u5361\u5e38\u5c31\u6700\u4f18\u89e3\u4e86\u751a\u81f3\u9886\u5148\u4e86\u7b2c\u4e8c\u540d $0.5$ \u79d2\u591a\u2026\u2026\n\n\u611f\u89c9\u81ea\u5df1\u4ee3\u7801\u633a\u4e11\u7684\uff0c\u90a3\u5c31\u7ed9\u4e2a\u6838\u5fc3\u90e8\u5206\u5427\u3002\n\n```cpp\n\tfor(int i=1,l,r; i<=n; ++i) \n\t{\n\t\tint L=lst[a[i]],R=i,SL=0,SR=0,X=R-1,sl=0,sr=0;\n\t\tlst[a[i]]=i,l=r=a[i];\n\t\tint C=0;\n\t\twhile((sl<=10&&lst[l-1]>L)||(sr<=10&&lst[r+1]>L))\n\t\tif(sr>10||(sl<=10&&lst[l-1]>lst[r+1])) //\u5de6\u4fa7\u5ef6\u4f38\n\t\t{\n\t\t\tX=lst[l-1];\n\t\t\twhile(lst[l-1]>=X&&sl<=10) --l,++sl;\n\t\t\t(SL<=10)&&(Add(tree[SL],X+1,R,-1),0),\n\t\t\t(SR<=10)&&(Add(tree[SR],X+1,R,-1),0),\n\t\t\t(SL+SR+1<=10)&&(Add(tree[SL+SR+1],X+1,R,1),0),\n\t\t\tR=X,SL=sl,SR=sr;\n\t\t}\n\t\telse if(sl>10||lst[l-1]<=lst[r+1])//\u53f3\u4fa7\u5ef6\u4f38\n\t\t{\n\t\t\tX=lst[r+1];\n\t\t\twhile(lst[r+1]>=X&&sr<=10) ++r,++sr;\n\t\t\t(SL<=10)&&(Add(tree[SL],X+1,R,-1),0),\n\t\t\t(SR<=10)&&(Add(tree[SR],X+1,R,-1),0),\n\t\t\t(SL+SR+1<=10)&&(Add(tree[SL+SR+1],X+1,R,1),0),\n\t\t\tR=X,SL=sl,SR=sr;\n\t\t}\n\t\t(SL<=10)&&(Add(tree[SL],L+1,R,-1),0),\n\t\t(SR<=10)&&(Add(tree[SR],L+1,R,-1),0),\n\t\t(SL+SR+1<=10)&&(Add(tree[SL+SR+1],L+1,R,1),0);\n\t\tfor(auto i:v[i]) for(int j=1; j<=10; ++j) ans[i.id][j]=find(tree[j],i.v);\n\t}\n```",
        "postTime": 1621481043,
        "uid": 111055,
        "name": "dead_X",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P5070"
    },
    {
        "content": "\u5957\u8def\u9898\uff0c\u4f46\u662f wssb\uff0c\u770b\u9519\u9898\u6298\u817e\u4e86\u534a\u5929 \n\n\u9898\u610f\u4e2a\u4eba\u611f\u89c9\u4e0d\u5927\u6e05\u695a\uff0c\u4e00\u5f00\u59cb\u7406\u89e3\u6210\u503c\u57df\u8fde\u7eed\u6bb5\u662f\u539f\u5e8f\u5217\u7684\u533a\u95f4\uff08\n\n\u5927\u6982\u662f\u8ba9\u4f60\u628a $[l,r]$ \u533a\u95f4\u6392\u5e8f\u53bb\u91cd\u540e\u518d\u6570\u91cc\u9762\u6709\u51e0\u4e2a\u957f\u5ea6\u5728 $[1,10]$ \u4e4b\u95f4\u4e14\u6781\u957f\u503c\u57df\u8fde\u7eed\u7684\u533a\u95f4\u3002\n\n\u5c1d\u8bd5\u65e0\u8111\u626b\u63cf\u7ebf\u3002\n\n\u53ea\u9700\u8981\u5bf9\u4e8e\u5f53\u524d\u53f3\u7aef\u70b9\u7ef4\u62a4\u6bcf\u4e2a\u5de6\u7aef\u70b9\u7684\u6781\u957f\u503c\u57df\u8fde\u7eed\u6bb5\u5373\u53ef\uff0c\u7136\u540e\u627e\u5230\u80fd\u8d21\u732e\u7684\u533a\u95f4\u628a\u8d21\u732e\u52a0\u4e0a\uff0c\u8fd9\u4e2a\u533a\u95f4\u53ef\u4ee5\u5728\u52a8\u6001\u4fee\u6539\u4e2d\u786e\u5b9a\u3002\n\n\u8bbe\u5f53\u524d\u53f3\u7aef\u70b9\u4e3a $r$\uff0c\u503c\u4e3a $x$\uff0c$x$ \u4e0a\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u4e3a $las[x]$\u3002\n\n\u56e0\u4e3a\u53ea\u7528\u8003\u8651\u957f\u5ea6 $[1,10]$ \u7684\u6781\u957f\u503c\u57df\u8fde\u7eed\u6bb5\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u66f4\u65b0\u503c\u4e3a $[x-10,x+10]$ \u7684\u5de6\u7aef\u70b9\u3002\u663e\u7136 $r$ \u5e76\u4e0d\u4f1a\u5f71\u54cd\u5230 $[1,las[x]]$ \u7684\u6bb5\u957f\uff0c\u6240\u4ee5\u53ea\u66f4\u65b0 $[las[x]+1,r]$ \u5373\u53ef\u3002\n\n\u4f46\u662f\u8fd9\u6837\u8fd8\u662f\u4f1a\u8d77\u98de\u3002\u5b9e\u9645\u4e0a\uff0c\u53ea\u9700\u8981\u679a\u4e3e\u6bcf\u4e00\u4e2a\u503c\u7684\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e\u3002\u56e0\u4e3a\u663e\u7136\u518d\u5f80\u524d\u5e76\u4e0d\u4f1a\u4f7f\u6781\u957f\u503c\u57df\u8fde\u7eed\u6bb5\u7684\u957f\u5ea6\u589e\u52a0\uff0c\u4e8e\u662f\u53ef\u4ee5\u76f4\u63a5\u533a\u95f4\u4fee\u6539\u3002\n\n\u8003\u8651\u5177\u4f53\u64cd\u4f5c\u3002\u589e\u52a0\u4e00\u4e2a $x$\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u4e2d\u7ee7\u8fde\u63a5\u4e24\u6bb5\uff08\u53ef\u4ee5\u4e3a\u7a7a\uff09\u3002\u5bb9\u6613\u60f3\u5230\u6392\u5e8f\u53ef\u884c\u7684\u5de6\u7aef\u70b9\uff0c\u7136\u540e\u4ece\u53f3\u5f80\u5de6\u52a0\u5165\uff0c\u4e0d\u65ad\u66f4\u65b0\u4ece $x$ \u5f80\u5de6\u3001\u53f3\u4e24\u8fb9\u5ef6\u4f38\u7684\u6700\u5927\u957f\u5ea6 $l,r$\u3002\n\n\u663e\u7136\u5f53\u524d\u5de6\u7aef\u70b9\u7684\u6bb5\u957f\u5e94\u88ab\u66f4\u65b0\u4e3a $l+1+r$ \u5e76\u52a0\u4e0a\u3002\u540c\u65f6\u5e94\u51cf\u53bb\u539f\u6765\u7684\u8d21\u732e $l$ \u6216 $r$\uff08\u53d6\u51b3\u4e8e\u8be5\u5de6\u7aef\u70b9\u7684\u503c $<x$ \u6216 $>x$\uff09\u3002\u8fd9\u4e9b\u8d21\u732e\u7684\u533a\u95f4\u5373\u5f53\u524d\u5de6\u7aef\u70b9\u5230\u4e0b\u6b21**\u540c\u4fa7**\u66f4\u65b0\u7684\u4f4d\u7f6e $+1$\uff08\u6b64\u5904\u6307\u503c\u90fd $<x$ \u6216 $>x$\uff09\u3002\n\n\u53ef\u4ee5\u62c6\u89e3\u8d21\u732e\u533a\u95f4\uff0c\u4e00\u6bb5\u4e00\u6bb5\u66f4\u65b0\uff0c\u5c31\u4e0d\u7528\u77e5\u9053\u4e0b\u6b21\u540c\u4fa7\u66f4\u65b0\u4f4d\u7f6e\u3002\n\n\u6ce8\u610f\u8fb9\u754c\u95ee\u9898\uff0c$x\\pm10$ \u7684\u65e7\u8d21\u732e\u88ab\u6d88\u53bb\u65f6\u8981\u4f7f\u7528 $x\\pm11$ \u6765\u786e\u5b9a\u533a\u95f4\uff0c\u4e8e\u662f $x\\pm11$ \u4e5f\u9700\u8981\u88ab\u52a0\u5165\u3002\n\n## code\n\u5176\u5b9e\u5f88\u77ed) \u4f46\u662f\u5361\u5e38(\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct data{\n\tint l,r,id;\n\tbool operator <(const data &v)const{\n\t\treturn r<v.r;\n\t}\n}q[1000010];\nint las[1000010];\nint c[12][1000010];\nint ans[1000010][12];\nint a[1000010];\nvector<int>v;\nint n,m;\ninline int lowbit(int x){\n\treturn x&-x;\n}\ninline void add(int x,int y,int l){\n\tfor(int i=x;i<=n;i+=lowbit(i))\n\tc[l][i]+=y;\n}\nint query(int x,int l){\n\tint sum=0;\n\tfor(int i=x;i;i-=lowbit(i))\n\tsum+=c[l][i];\n\treturn sum;\n}\ninline void upd(int x,int y,int z,int l){\n\tif(l<1||l>10) return;\n\tadd(x,z,l);\n\tadd(y+1,-z,l);\n}\nint main(){\n\tint x,y,mx,mn;\n\tscanf(\"%d%d\",&n,&m);\t\n\tfor(int i=1;i<=n;++i){\n\t\tscanf(\"%d\",&a[i]);\n\t\tmx=max(a[i],mx);\n\t\tmn=min(a[i],mn);\n\t}\n\tfor(int i=1;i<=m;++i){\n\t\tscanf(\"%d%d\",&q[i].l,&q[i].r);\n\t\tq[i].id=i;\n\t}\n\tsort(q+1,q+m+1);\n\tfor(int i=1;i<=m;++i){\n\t\tfor(int j=q[i-1].r+1;j<=q[i].r;++j){\n\t\t\tfor(int k=max(a[j]-11,mn);k<a[j];++k)\n\t\t\tif(las[k]>las[a[j]]) v.push_back(las[k]);\n\t\t\tfor(int k=min(a[j]+11,mx);k>a[j];--k)\n\t\t\tif(las[k]>las[a[j]]) v.push_back(las[k]);\n\t\t\tv.push_back(j);\n\t\t\tsort(v.begin(),v.end());\n\t\t\tint l=a[j],r=a[j];\n\t\t\tfor(int k=v.size()-1;k>=0;--k){\n\t\t\t\tx=v[k],y=k?v[k-1]:las[a[j]];\n\t\t\t\twhile(a[j]-l<=10&&las[l-1]>=x) --l;\n\t\t\t\twhile(r-a[j]<=10&&las[r+1]>=x) ++r;\n\t\t\t\tupd(y+1,x,-1,a[j]-l);\n\t\t\t\tupd(y+1,x,-1,r-a[j]);\n\t\t\t\tupd(y+1,x,1,r-l+1);\n\t\t\t}\n\t\t\tlas[a[j]]=j;\n\t\t\tv.clear();\n\t\t}\n\t\tfor(int j=1;j<=10;++j)\n\t\tans[q[i].id][j]=query(q[i].l,j);\n\t}\n\tfor(int i=1;i<=m;++i){\n\t\tfor(int j=1;j<=10;++j)\n\t\tprintf(\"%d\",ans[i][j]%10);\n\t\tprintf(\"\\n\");\n\t}\n} \n```",
        "postTime": 1644850853,
        "uid": 90869,
        "name": "tylon2006",
        "ccfLevel": 7,
        "title": "\u9898\u89e3P5070 [Ynoi2015] \u5373\u4fbf\u770b\u4e0d\u5230\u672a\u6765"
    },
    {
        "content": "# [Ynoi2015] \u5373\u4fbf\u770b\u4e0d\u5230\u672a\u6765\n\n\u5728\u592a\u9633\u897f\u659c\u7684\u8fd9\u4e2a\u4e16\u754c\u91cc\uff0c\u7f6e\u8eab\u5929\u4e0a\u4e4b\u68ee\u3002\u7b49\u8fd9\u573a\u6218\u4e89\u7ed3\u675f\u4e4b\u540e\uff0c\u4e0d\u5f52\u4e4b\u4eba\u4e0e\u671b\u773c\u6b32\u7a7f\u7684\u4f17\u4eba\uff0c \u4eba\u4eba\u672c\u7740\u6b63\u4e49\u4e4b\u540d\uff0c\u957f\u5b58\u4e0d\u706d\u7684\u8fc7\u53bb\u3001\u9010\u6e10\u6d88\u901d\u7684\u672a\u6765\u3002\u6211\u56de\u6765\u4e86\uff0c\u7eb5\u4f7f\u65e5\u8584\u897f\u5c71\uff0c**\u5373\u4fbf\u770b\u4e0d\u5230\u672a\u6765**\uff0c\u6b64\u65f6\u6b64\u523b\u7684\u5149\u8f89\uff0c\u76fc\u541b\u52ff\u5fd8\u3002\n\n\u2014\u2014\u2014\u2014\u4e16\u754c\u4e0a\u6700\u5e78\u798f\u7684\u5973\u5b69 \u73c2\u6735\u8389\n\n-----------------------\n\n## \u601d\u8def\n\n\u626b\u63cf\u7ebf\u3002\n\n\u53d1\u73b0 $k\\leq 10$\uff0c\u4e5f\u5c31\u662f\u610f\u5473\u7740 $k$ \u5c31\u662f\u4e00\u4e2a\u5927\u5e38\u6570\uff0c\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u5bf9\u6bcf\u4e2a $k$ \u5206\u5f00\u8003\u8651\u3002\n\n\u6211\u4eec\u8003\u8651\u626b\u63cf\u7ebf\u7ecf\u5178\u5957\u8def\u5c31\u662f\u5148\u628a\u95ee\u9898 $l,r$ \u79bb\u7ebf\u5e76\u770b\u6210\u4e00\u4e2a\u70b9 $(l,r)$\uff0c\u679a\u4e3e\u6bcf\u4e2a\u679a\u4e3e\u53f3\u7aef\u70b9\u5e76\u628a\u5de6\u7aef\u70b9\u5206\u6bb5\uff0c\u8fd9\u6837\u7684\u8d21\u732e\u53ef\u4ee5\u5f53\u6210\u77e9\u5f62\uff0c\u539f\u95ee\u9898\u53d8\u6210\u4e8c\u7ef4\u6570\u70b9\u3002\n\n\u8fd9\u9053\u9898\u4e5f\u662f\u540c\u7406\uff0c\u6211\u4eec\u679a\u4e3e\u53f3\u7aef\u70b9 $r$ \uff0c\u5e76\u4e14\u94a6\u5b9a\u5f53\u524d\u4f4d\u7f6e\u5c31\u662f\u6211\u626b\u63cf\u7ebf\u77e9\u9635 $x$ \u8f74\u7684\u53f3\u7aef\u70b9\uff0c\u8bbe $[lv,rv]$ \u662f\u73b0\u5728\u5de6\u7aef\u70b9\u5230\u53f3\u7aef\u70b9\u4e2d**\u5305\u62ec\u53f3\u7aef\u70b9**\u7684\u6781\u957f\u503c\u57df\u8fde\u7eed\u6bb5\u7684**\u503c\u57df**\u533a\u95f4\uff0c\u90a3\u4e48\u5f53\u524d\u5e8f\u5217\u4e0a\u7684\u533a\u95f4\u5c31\u4e0d\u80fd\u5305\u62ec $lv-1,rv+1$ \u8fd9\u6837\u7684\u5de6\u7aef\u70b9\u7684\u533a\u95f4\u5e94\u8be5\u5728 $(\\max(pre_{lv-1},pre_{rv+1}),\\min(pre_{lv},pre_{rv})]$ \u4e4b\u95f4\uff0c\uff08\u5176\u4e2d $pre_v$ \u8868\u793a\u503c $v$ \u4e0a\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u8fd9\u4e2a\u53ef\u4ee5 $\\mathcal O(1)$ \u7ef4\u62a4\uff09\u3002\n\n\u8003\u8651\u6bcf\u6b21 $k\\leftarrow k+1$ \u7684\u8fc7\u7a0b\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u628a $[lv,rv]$ \u53d8\u6210 $[lv-1,rv]$ \u6216\u8005 $[lv,rv+1]$ \u7684\u8fc7\u7a0b\uff0c\u800c\u6269\u5c55\u524d\u8005\u8fd8\u662f\u540e\u8005\u5219\u53d6\u51b3\u4e8e $pre_{lv-1}$ \u548c $pre_{rv+1}$ \u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u6211\u4eec\u5fc5\u5b9a\u4f1a\u62d3\u5c55\u5230 $pre_{lv-1},pre_{rv+1}$ \u66f4\u5927\u7684\u4f4d\u7f6e\uff0c\u56e0\u4e3a\u5982\u679c\u53cd\u4e4b\u90a3\u4e48\u5c31\u4f1a\u540c\u65f6\u6269\u5c55\u4e24\u4e2a\u6570\uff0c\u4e0d\u6ee1\u8db3 $k\\leftarrow k+1$ \u7684\u6761\u4ef6\u3002 \n\n\u6700\u540e\u6211\u4eec\u8003\u8651\u53bb\u91cd\u7684\u95ee\u9898\uff0c\u8fd9\u5e76\u4e0d\u662f\u7b80\u5355\u7684\u77e9\u5f62\u9762\u79ef\u5e76\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u4e00\u4e2a\u533a\u95f4 $l,r$ \u5185\u53ef\u80fd\u5305\u62ec\u5f88\u591a\u957f\u5ea6\u76f8\u7b49\u7684\u503c\u57df\u8fde\u7eed\u6bb5\uff0c\u5176\u5b9e\u53bb\u91cd\u95ee\u9898\u4e5f\u5f88\u597d\u89e3\u51b3\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5173\u5fc3\u5de6\u7aef\u70b9\u533a\u95f4\u662f\u4e0d\u662f**\u4e25\u683c** $\\leq pre_{a_r}$ \u5373\u53ef\uff0c\u56e0\u4e3a\u524d\u9762\u7684\u77e9\u5f62\u4e00\u5b9a\u4f1a\u5728\u53f3\u7aef\u70b9\u679a\u4e3e\u5230    $pre_{a_r}$ \u7684\u65f6\u5019\u52a0\u5165\u626b\u63cf\u7ebf\uff0c\u6b64\u65f6\u91cd\u590d\u52a0\u5165\u5fc5\u7136\u5e26\u6765\u8fc7\u591a\u7684\u8d21\u732e\u3002\n\n$y$ \u8f74\u4e0a\u7684\u77e9\u5f62\u8fb9\u7684\u5904\u7406\u5c31\u53ef\u4ee5\u968f\u610f\u70b9\u4e86\uff0c\u56e0\u4e3a $y$ \u8f74\u4e0a\u5de6\u7aef\u70b9\u5fc5\u7136\u662f $r$ \uff0c\u800c\u53f3\u7aef\u70b9\u5219\u662f $\\min(nxt_{lv-1},nxt_{rv+1})$\uff0c\u53ef\u4ee5\u7528 `vector` + \u6307\u9488\u8fbe\u5230 $\\mathcal O(1)$ \u5904\u7406\n\n\u6700\u540e\u505a $k$ \u6b21\u4e8c\u7ef4\u6570\u70b9\u5373\u53ef\uff0c\u95ee\u9898\u8f6c\u5316\u4e3a\u533a\u95f4+\u5355\u70b9\u6c42\u503c\uff0c\u5efa\u8bae\u7528\u5e38\u6570\u5c0f\u7684\u6811\u72b6\u6570\u7ec4\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O((n+m)k\\log n)$\uff0c\u5361\u5361\u5c31\u80fd\u8fc7\u3002\n\n------\n\n## code\n\n```c++\n#include <bits/stdc++.h>\n#define pb push_back\nusing namespace std; \nconst int N = 1e6 + 10;\nconst int K = 10;\nconst int INF = 0x3f3f3f3f;\ntypedef pair <int, int> pii;\ninline int read ()\n{\n    int x = 0, f = 1;\n    char ch = getchar ();\n    while (ch < '0' || ch > '9') { if (ch == '-') f = -1; ch = getchar (); }\n    while (ch >= '0' && ch <= '9') { x = (x << 1) + (x << 3) + (ch ^ 48); ch = getchar (); }\n    return x * f;\n}\nint n, m;\nint a[N];\nstruct Query {\n\tint x, y, id;\n\tQuery () {}\n\tQuery (int _x, int _y, int _id) { x = _x, y = _y, id = _id; } \n\tbool operator < (const Query &A) const {\n\t\treturn x < A.x;\n\t}\n} q[N];\nstruct scanline {\n\tint x, l, r, op;\n\tscanline () {}\n\tscanline (int _x, int _l, int _r, int _op) { x = _x, l = _l; r = _r; op = _op; }\n\tbool operator < (const scanline &A) const {\n\t\treturn x < A.x;\n\t}\n} line[K + 2][N << 1]; int lcnt[K + 2];\nstruct BIT {\n\t#define lowbit(x) x & (-x)\n\tint tree[N];\n\tvoid init () { memset (tree, 0, sizeof (tree)); }\n\tvoid add (int x, int val) { for ( ; x <= n; x += lowbit(x)) tree[x] += val; }\n\tint query (int x) { int res = 0; for ( ; x > 0; x -= lowbit (x)) res += tree[x]; return res; }\n} T[K + 2];\nbool vis[N];\nint pos[N];\nvector <int> vec[N];\nint point[N];\nint ans[N][K + 2];\nsigned main()\n{\n\tn = read (), m = read (); int mx = 0;\n\tfor (int i = 1; i <= n; i++) a[i] = read (), vec[a[i]].pb (i), mx = max (mx, a[i]), vis[a[i]] = true;\n\tfor (int i = 0; i <= mx + 1; i++) vec[i].pb (n + 1);\n\tfor (int i = 1; i <= m; i++) q[i].x = read (), q[i].y = read (), q[i].id = i;\n    sort (q + 1, q + m + 1);\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tint x = a[i], y = a[i];\n\t\tint l1, r1, r2, lst = pos[a[i]];\n\t\tpos[a[i]] = i;\n\t\tfor (int j = 1; j <= K; j++)\n\t\t{\n\t\t\tl1 = max (pos[x - 1], pos[y + 1]); r1 = min (pos[x], pos[y]);\n\t\t\tif (r1 <= lst && lst) break; // \u53bb\u91cd\n\t\t\tif (l1 > r1)\n\t\t\t{\n\t\t\t\twhile (pos[x - 1] > r1) x--, j++;\n\t\t\t\twhile (pos[y + 1] > r1) y++, j++;\n\t\t\t\tif (j > K) break;\n\t\t\t\tl1 = max (pos[x - 1], pos[y + 1]);\n\t\t\t} // \u6269\u5c55\u4e00\u4f4d\u7684\u540c\u65f6\u6269\u5165\u4e86\u591a\u4e2a\uff0c\u8fd9\u4e5f\u8bf4\u660e\u5f53\u524d\u679a\u4e3e\u7684\u957f\u5ea6 k \u5728\u53f3\u7aef\u70b9\u4e3a i \u65f6\u4e0d\u5b58\u5728\n\t\t\tr2 = min (vec[x - 1][point[x - 1]], vec[y + 1][point[y + 1]]) - 1;\n            // vector O(1) \u5904\u7406nxt\n\t\t\tline[j][++lcnt[j]] = scanline (max (l1 + 1, lst + 1), i, r2, 1);\n\t\t\tline[j][++lcnt[j]] = scanline (r1 + 1, i, r2, -1);\n\t\t\tif (!pos[x - 1] && !pos[y + 1]) break;\n\t\t\telse pos[x - 1] > pos[y + 1] ? x-- : y++;\n\t\t}\n\t\tpoint[a[i]]++;\n\t}\n\tfor (int k = 1; k <= K; k++)\n\t{\n        sort (line[k] + 1, line[k] + lcnt[k] + 1);\n\t\tint now = 1;\n\t\tfor (int i = 1; i <= m; i++)\n\t\t{\n\t\t\twhile (now <= lcnt[k] && line[k][now].x <= q[i].x) \n                T[k].add(line[k][now].l, 1 * line[k][now].op),\n                T[k].add(line[k][now].r + 1, -1 * line[k][now].op),\n\t\t\t\tnow++;\n\t\t\t(ans[q[i].id][k] += T[k].query(q[i].y)) %= 10;\n\t\t}\n\t}\n\tfor (int i = 1; i <= m; i++, printf(\"\\n\"))\n\t\tfor (int k = 1; k <= K; k++)\n\t\t\tprintf (\"%d\", ans[i][k]);\n    return 0;\n}\n```",
        "postTime": 1658805198,
        "uid": 177837,
        "name": "violin_wyl",
        "ccfLevel": 6,
        "title": "P5070 [Ynoi2015] \u5373\u4fbf\u770b\u4e0d\u5230\u672a\u6765"
    },
    {
        "content": "\u8003\u8651\u626b\u63cf\u7ebf\u3002              \n\n\u6211\u4eec\u8003\u8651\u65b0\u52a0\u5165\u4e00\u4e2a\u5728\u672b\u5c3e\u7684\u70b9\uff0c\u53ea\u4f1a\u5f71\u54cd\u533a\u95f4 $[i,r],i \\in [lst_{a_i} + 1 , r]$ \u7684\u72b6\u6001\uff0c\u5e76\u4e14\u53ea\u4f1a\u5408\u5e76 $0 \\sim 2$ \u6761\u503c\u57df\u6bb5\u3002             \n\n\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u5f00 $10$ \u4e2a\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5927\u5c0f\u4e3a $[1,10]$ \u7684\u503c\u57df\u6bb5\u6570\u91cf\uff0c\u6bcf\u52a0\u5165\u4e00\u4e2a\u70b9\u4f9d\u6b21\u5bf9\u4e8e\u503c\u57df\u533a\u95f4\u5728 $[a_i - 10 , a_i + 10]$ \u4e4b\u5185\u76f8\u540c\u7684\u7684\u5e8f\u5217\u533a\u95f4\u5de6\u7aef\u70b9\u8fdb\u884c\u7ef4\u62a4\u3002\n\n\u5b9e\u73b0\u65f6\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4ece\u4e2d\u95f4\u5411\u5de6\u53f3\u4e24\u8fb9\u6269\u5c55\uff0c\u4f9d\u6b21\u627e\u5230\u6bcf\u79cd\u5f62\u6210\u503c\u57df\u6bb5\u60c5\u51b5\u662f\u5728\u5e8f\u5217\u4e2d\u7684\u54ea\u7aef\uff0c\u5982\u679c\u6709\u5408\u5e76\u7ebf\u6bb5\u8fd8\u8981\u628a\u4e24\u8fb9\u7684\u7ebf\u6bb5\u5220\u4e86\u7136\u540e\u518d\u52a0\u65b0\u5408\u6210\u7684\u7ebf\u6bb5\u957f\u5ea6\u3002           \n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(20 n \\log n)$\uff0c\u8fd8\u662f\u633a\u79bb\u8c31\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n\n\u4e2a\u4eba\u8ba4\u4e3a\u8fd9\u9053\u9898\u6709\u70b9\u81ed\u3002\n\n\u672c\u9898\u91cd\u70b9\u5728\u4e8e\u6b63\u786e\u5b9e\u73b0\uff0c\u6709\u4ee5\u4e0b\u5b9e\u73b0\u7ec6\u8282\uff1a               \n\n1. \u7279\u5224\u5f53\u524d\u5411\u4e24\u8fb9\u6269\u5c55\u65f6\u662f\u5426\u5df2\u7ecf\u5728 $lst_{a_i}$ \u4e4b\u5916\uff1b\n\n2. \u6ce8\u610f\u5411\u5de6/\u53f3\u4e24\u8fb9\u6269\u5c55\u957f\u5ea6\u4e0d\u80fd\u8d85\u8fc7 $10$\uff1b\n\n3. \u6ce8\u610f\u5411\u5de6/\u53f3\u4e24\u8fb9\u6269\u5c55\u65f6\uff0c\u4e00\u6b21\u8981\u5c3d\u91cf\u5411\u5de6/\u53f3\u4e24\u8fb9\u6269\u5c55\u800c\u4e0d\u662f\u6269\u5c55\u4e00\u6b21\u5c31\u7ed3\u675f\u4e86\uff1b\n\n4. \u5982\u679c\u5199\u6210 while \u7684\u5f62\u5f0f\u4f60\u8fd8\u8981\u6700\u540e\u52a0\u4e00\u6b21\u3002            \n\n~~\u5176\u5b9e\u6211\u81ea\u5df1\u6700\u540e\u4e5f\u6ca1\u8c03\u51fa\u6765\uff0c\u6700\u540e\u505a\u626b\u63cf\u7ebf\u7684\u90a3\u6bb5\u4e00\u6bb5\u5c31\u7167\u7740 dX \u7684\u6253\u4e86~~\n\n\u987a\u4fbf\u6c42\u52a9\u4e00\u4e0b\u4e0b\u9762\u8fd9\u4efd\u4ee3\u7801\u4e3a\u4ec0\u4e48\u4f1a\u8fc7\u4e0d\u4e86\uff0c\u4e00\u76f4\u8c03\u4e0d\u51fa\u6765\uff1a          \n\n[\u94fe\u63a5](https://www.luogu.com.cn/record/62141542)",
        "postTime": 1636469085,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5070 [Ynoi2015] \u5373\u4fbf\u770b\u4e0d\u5230\u672a\u6765"
    },
    {
        "content": "[\u9898\u4f20](https://www.luogu.com.cn/problem/P5070)\n\n$O(10 n \\log n)$ ~~\u80fd\u8fc7\uff0c\u5c45\u7136\u4e0d\u5361\u5e38\uff0c\u9752\u7ed3\u4e86\u3002~~\n\n\u611f\u89c9\u662f\u6bd4\u8f83\u5957\u8def\u7684\u4e00\u9053 Ynoi \u4e86 qwq\u3002\n\n\u9996\u5148\u770b\u9898\u76ee\uff0c\u9700\u8981\u627e\u7684\u5c31\u662f\u4e00\u6bb5\u957f\u5ea6\u4e3a $1 \\dots 10$ \u7684\u6781\u957f\u8fde\u7eed\u7684\uff08\u516c\u5dee\u4e3a 1\uff09\u7684\u7b49\u5dee\u6570\u5217\uff0c\u8003\u8651\u66b4\u529b\u628a\u4e00\u4e2a\u4e2a\u6570\u4e22\u8fdb\u53bb\uff0c\u4f1a\u9020\u6210\u600e\u6837\u7684\u7ed3\u679c\uff0c\u65e0\u975e\u8fd9\u4e24\u79cd\u60c5\u51b5\uff1a\n\n- \u65e0\u6cd5\u62d3\u5c55\uff0c\u5355\u72ec\u6210\u6bb5\uff1b\n\n- \u8fde\u63a5\u4e0a\u4e86\u5728\u81ea\u5df1\u5de6\u53f3\u4e24\u8fb9\u7684\u6781\u957f\u8fde\u7eed\u6bb5\uff08\u8bb0\u4e3a $S_1$ \u548c $S_2$\uff09\uff0c\u90a3\u4e48\u65b0\u7684\u6781\u957f\u8fde\u7eed\u6bb5\u4e3a $|S_1|+|S_2|+1$\uff0c\u540c\u65f6\u539f\u6765\u7684\u4e24\u4e2a\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u6d88\u5931\u3002\n\n\u628a\u8be2\u95ee\u79bb\u7ebf\u4e0b\u6765\uff0c\u90fd\u4e22\u5230\u53f3\u7aef\u70b9\u4e0a\uff0c\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u76f8\u5f53\u4e8e\u53bb\u6389\u5728 $S_1$ $S_2$ \u4e0a\u7684\u8986\u76d6\uff0c\u540c\u65f6\u52a0\u4e0a $S_1+mid+S_2$ \u7684\u8986\u76d6\uff0c\u5bf9\u4e8e\u8be2\u95ee\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f $l$ \u8fd9\u4e2a\u70b9\u88ab\u67d0\u4e00\u4e2a\u957f\u5ea6\u4e3a $x_i$ \u7684\u7ebf\u6bb5\u8986\u76d6\u7684\u6b21\u6570\uff0c\u6ce8\u610f\u5230\u6bb5\u957f\u53ea\u6709 $10$\uff0c\u76f4\u63a5\u66b4\u529b\u5206\u6210 $10$ \u4e2a\u7ebf\u6bb5\u505a\u4e8b\u6ca1\u95ee\u9898\u7684\uff0c\u533a\u95f4\u4fee\u6539\uff0c\u5355\u70b9\u8be2\u95ee\u80af\u5b9a\u7528\u5e38\u6570\u5c0f\u7684\u6811\u72b6\u6570\u7ec4\u5566\u3002\n\n\u81f3\u4e8e\u600e\u4e48\u5728\u66b4\u529b\u62d3\u5c55\u65f6\u4fdd\u7559\u5355\u70b9\u8be2\u95ee\u7684\u6b63\u786e\u6027\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u65b0\u6570 $x$\uff0c\u8bbe $last_x$ \u4e3a\u4e0a\u4e00\u6b21\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5219 $x$ \u53ea\u5bf9 $(last_x, i]$ \u4ea7\u751f\u8d21\u732e\uff08\u524d\u9762\u7684\u53bb\u91cd\u540e\u9009\u7528 $last_x$ \u7684\u5c31\u884c\u4e86\uff09\uff0c\u4e8e\u662f\u6211\u4eec\u4ece $i$ \u5f80\u5de6\u62d3\u5c55\uff0c\u6bcf\u6b21\u9047\u5230\u4e0a\u9762\u7684\u60c5\u51b5\u5c31\u8fdb\u884c\u533a\u95f4\u8986\u76d6\u64cd\u4f5c\uff0c\u6ce8\u610f\u82e5 10 \u80fd\u62d3\u5c55\u5230 11 \u4e0d\u7b97\u6570\u3002\n\n\u590d\u6742\u5ea6 $O(10nk \\log n)$\uff0c$k$ \u662f\u4e00\u4e2a\u5c0f\u5e38\u6570\u3002\n\n### Code\uff1a\n\n```cpp\n#include <stdio.h>\n#include <algorithm>\n#include <string.h>\n#include <cctype>\n#include <vector>\nusing namespace std;\nconst int N=1e6+1;\ninline int read(){\n\tchar ch=getchar();int x=0, f=1;\n\twhile(!isdigit(ch)) f=(ch=='-'?-1:f), ch=getchar();\n\twhile(isdigit(ch)) x=(x<<3)+(x<<1)+ch-'0', ch=getchar();\n\treturn x*f;\n}\ntypedef pair <int, int> Pii;\nint n, m, a[N], las[N+11], Mx;\nchar ans[N][11];\nPii tmp[25];\nvector < Pii > Q[N];\nstruct BITtree{\n\tint sum[N];\n\t#define lowbit(x) ((x)&(-(x)))\n\tvoid add(int x, int v){for(; x; x-=lowbit(x)) sum[x]+=v;}\n\tint query(int x){int res=0;for(; x<=n; x+=lowbit(x)) res+=sum[x];return res;}\n\t#undef lowbit\n}bit[10];\nvoid chafen(int flg, int l, int r, int v){\n\tif(flg>10||flg<1) return ;\n\tbit[flg-1].add(l, v), bit[flg-1].add(r, -v);\n}\nsigned main(){\n\tn=read(), m=read();\n\tfor(int i=1; i<=n; i++) Mx=max(Mx, a[i]=read());\n\tfor(int i=1, l, r; i<=m; i++)\n\t\tl=read(), r=read(), Q[r].push_back(make_pair(l, i));\n\tint pos=1;\n\tfor(int i=1; i<=n; i++){\n\t\tint x=a[i], L=max(1, x-11), R=min(x+11, Mx), top=0;\n\t\tfor(int j=L; j<=R; j++) if(las[j]>las[x]) tmp[++top]=make_pair(-las[j], j);\n\t\ttmp[++top]=make_pair(-i, x);sort(tmp+1, tmp+top+1);\n\t\tfor(int j=1; j<=top; j++) tmp[j].first*=-1;tmp[top+1].first=las[x], L=R=0;//\u627e\u5230\u6240\u6709\u7684\u6781\u957f\u533a\u95f4 \n\t\t\n\t\tfor(int j=1; j<=top; j++){\n\t\t\tint nxt=tmp[j].second, least=tmp[j].first;\n\t\t\tif(nxt<x) while(L<=10&&(x-L-1==nxt||las[x-L-1]>least)) L++;\n\t\t\tif(nxt>x) while(R<=10&&(x+R+1==nxt||las[x+R+1]>least)) R++;\n\t\t\t//\u627e\u5230\u5339\u914d\u7684\u6700\u957f\u6bb5 \n\t\t\tchafen(L, least, tmp[j+1].first, -1);\n\t\t\tchafen(R, least, tmp[j+1].first, -1);\n\t\t\t//\u6d88\u6389\u4e4b\u524d\u7684\u8d21\u732e \n\t\t\tchafen(L+R+1, least, tmp[j+1].first, 1);\n\t\t\t//\u52a0\u4e0a\u65b0\u7684\u8d21\u732e \n\t\t}\n\t\t\n\t\tfor(int j=0; j<Q[i].size(); j++)\n\t\t\tfor(int k=1; k<=10; k++)\n\t\t\t\tans[Q[i][j].second][k]=bit[k-1].query(Q[i][j].first)%10+'0';\n\t\tlas[x]=i;\n\t}\n\tfor(int i=1; i<=m; i++) printf(\"%s\\n\", ans[i]+1);\n\treturn 0;\n}\n```",
        "postTime": 1634709731,
        "uid": 341102,
        "name": "ReKoJ",
        "ccfLevel": 0,
        "title": "P5070 [Ynoi2015] \u5373\u4fbf\u770b\u4e0d\u5230\u672a\u6765"
    }
]