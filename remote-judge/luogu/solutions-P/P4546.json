[
    {
        "content": "\u524d\u7f6e\u77e5\u8bc6\uff1a$\\rm LCT$, \u7b80\u5355\u6c42\u5bfc\uff0c\u6cf0\u52d2\u516c\u5f0f\n\n\u6211\u4eec\u77e5\u9053\uff0c$\\dfrac{dy}{dx}f(g(x))=\\dfrac{dy}{dh}f(h)\\times \\dfrac{dh}{dx}g(x)$\uff0c\u7136\u540e\u53ef\u4ee5\u5bf9\u4e09\u79cd\u51fd\u6570\u5206\u5f00\u770b\uff1a\n\n\u5bf9\u4e8e\u4e00\u6b21\u51fd\u6570\uff08\u4e3a\u4e86\u7ed9\u4e0b\u9762\u4e24\u4e2a\u590d\u5408\u51fd\u6570\u4e00\u4e9b\u542f\u793a\uff0c\u8fd9\u91cc\u6211\u628a\u4e00\u6b21\u51fd\u6570\u770b\u6210\u4e00\u4e2a\u590d\u5408\u51fd\u6570\uff0c\u6c42\u8f7b\u55b7\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u4ee4$f(x)=x, g(x)=ax+b$\n\n\u6211\u4eec\u5148\u5bf9\u5176\u6c42\u4e00\u9636\u5bfc\uff0c\u6709$\\dfrac{dy}{dx}f(g(x))=\\dfrac{dy}{dh}f(h)\\times \\dfrac{dh}{dx}g(x)$\uff0c\u7531\u4e8e$f(x)$\u7684\u5bfc\u6570\u662f\u5e38\u65701\uff0c$g(x)$\u7684\u5bfc\u6570\u662f\u5e38\u6570$a$\uff0c\u5219\u6709\uff0c$\\dfrac{dy}{dx}f(g(x))=a$\n\n\u7136\u540e\u5bf9\u5176\u6c42\u4e8c\u9636\u5bfc\uff0c\u53d1\u73b0\u4e8c\u9636\u5bfc\u6570\u5c31\u53d8\u6210$0$\u4e86\uff0c\u66f4\u9ad8\u9636\u540c\u7406\u3002\u4e8e\u662f\u8fd9\u4e2a\u4e1c\u897f\u7684\u8fd1\u4f3c$\\sum_{k=0}^\\infty \\dfrac{f^{k}(0)}{k!}x^k=ax+b$~~\uff08\u597d\u7684\u6211\u4eec\u6709\u5212\u56de\u6765\u4e86\uff09~~\n\n\u5bf9\u4e8e\u6307\u6570\u51fd\u6570\uff0c\u6839\u4e00\u6b21\u51fd\u6570\u540c\u7406\uff0c\u4ee4$f(x)=e^x, g(x)=ax+b$\n\n\u540c\u7406\uff0c\u5148\u6c42\u4e00\u9636\u5bfc\uff0c\u6709$\\dfrac{dy}{dx}f(g(x))=a\\times e^{ax+b}$\uff0c\u7ee7\u7eed\u6c42\u5176\u4e8c\u9636\u5bfc\uff0c\u53d1\u73b0\u4e4b\u53d8\u5316\u4e86\u4e00\u4e2a$a$\uff0c\u6709$\\dfrac{d^2y}{dx^2}f(g(x))=a^2\\times e^{ax+b}$\u7ee7\u7eed\u6c42\u5bfc\uff0c\u53d1\u73b0\u53ea\u662f\u4e0d\u65ad\u6bd4\u4e0a\u4e00\u9636\u591a\u4e86\u4e00\u4e2a$a$\uff0c\u4e8e\u662f\u6211\u4eec\u6709\uff1a$f^{k}=a^k\\times e^{ax+b}$\n\n\u6839\u636e\u6cf0\u52d2\u516c\u5f0f\uff0c\u6709$e^{ax+b}=\\sum_{k=0}^\\infty \\dfrac{f^{k}(0)}{k!}x^k=\\sum_{k=0}^\\infty \\dfrac{a^k\\times e^b}{k!}x^k$\u3002\u7531\u4e8e\u8fd9\u9053\u9898\u53ea\u9700\u8981\u7cbe\u786e\u52307\u4f4d\u5c0f\u6570\uff0c$k!$\u589e\u957f\u901f\u5ea6\u8ddf$n^n$\u7c7b\u4f3c\uff08\u4ec5\u4ec5\u662f\u4e00\u4e2a\u6bd4\u65b9\uff09\uff0c\u7531\u4e8e$a, b, x$\u90fd\u662f$\\in [0, 1]$\uff0c\u6240\u4ee5\u6211\u4eec\u5927\u6982\u53ea\u9700\u8981\u5904\u740620\u9879\u5c31\u53ef\u4ee5\u4e86\n\n\u5bf9\u4e8e\u6b63\u5f26\u51fd\u6570\uff0c$\\dfrac{dy}{dx}sin(x)=cos(x), \\dfrac{dy}{dx}cos(x)=-sin(x)$\u3002\u4ecd\u7136\u4ee4$f(x)=sin(x), g(x)=ax+b$\uff0c\u4e00\u9636\u5bfc\u6570\u4e3a\uff1a$a \\times cos(ax+b)$\uff0c\u518d\u9ad8\u4e00\u9636\uff1f$\\dfrac{d^2y}{dx^2}=a^2*(-sin(ax+b))$\u3002\u540c\u7406\uff0c\u6211\u4eec\u6709\uff1a$\\dfrac{d^3y}{dx^3}=a^3*(-cos(ax+b))$\uff0c$\\dfrac{d^4y}{dx^4}=a^4*sin(ax+b)$\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u9664\u4e86\u591a\u5e26\u4e86\u4e00\u4e2a$a^4$\u4e4b\u5916\u6ca1\u6709\u53d8\u5316\uff0c\u4e8e\u662f\u8fd9\u662f\u4e00\u4e2a\u957f\u5ea6\u4e3a$4$\u7684\u5faa\u73af\u8282\u3002\u6211\u4eec\u8bbe\u8fd9\u4e2a\u5faa\u73af\u8282\u7684\u51fd\u6570\u4e3a$h(x)$\uff0c\u6709\uff1a$sin(ax+b)=\\sum_{k=0}^\\infty \\dfrac{f^{k}(0)}{k!}x^k=\\sum_{k=0}^\\infty \\dfrac{a^k\\times h(b)}{k!}x^k$\n\n\u67ff\u5b50\u63a8\u5b8c\u4e86\uff0c\u8bb2\u4e00\u4e0b\u5b9e\u73b0\u3002\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a$x^k$\u662f\u53ef\u4ee5\u63d0\u51fa\u6765\u7684\uff0c\u4e8e\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a$k$\uff0c\u7528$\\rm LCT$\u6765\u7ef4\u62a4\u4e00\u6bb5\u533a\u95f4\u7684\u548c\uff0c\u6700\u540e\u628a\u6240\u6709\u7b54\u6848\u5408\u5e76\u5373\u53ef\u3002\u6240\u6d89\u53ca\u7684\u90fd\u662f$\\rm LCT$\u7684\u57fa\u672c\u64cd\u4f5c\n\n### $\\rm Code:$\n```cpp\n/* This code is written by Nemlit */\n#include<bits/stdc++.h>\nusing namespace std;\n#define il inline\n#define re register\n#define rep(i, a, b) for(re int i = (a); i <= (b); ++ i)\nil int read() {\n    re int x = 0, f = 1; re char c = getchar();\n    while(c < '0' || c > '9') { if(c == '-') f = -1; c = getchar();}\n    while(c >= '0' && c <= '9') x = x * 10 + c - 48, c = getchar();\n    return x * f;\n}\n#define maxn 200005\n#define isroot(x) (ch[0][fa[x]] == x || ch[1][fa[x]] == x)\n#define get_fa(x) (ch[1][fa[x]] == x)\n#define updown(x) (swap(ch[0][x], ch[1][x]), tag[x] ^= 1)\nint n, m, fa[maxn], ch[2][maxn], tag[maxn], st[maxn];\ndouble sum[25][maxn], val[25][maxn], fac[maxn];\nchar c[maxn];\nil void pushup(int x) {\trep(i, 0, 20) sum[i][x] = sum[i][ch[0][x]] + sum[i][ch[1][x]] + val[i][x]; }\nil void pushdown(int x)  {\n\tif(!tag[x]) return;\n\ttag[x] ^= 1;\n\tif(ch[0][x]) updown(ch[0][x]);\n\tif(ch[1][x]) updown(ch[1][x]);\n}\nil void rotate(int x) {\n\tint y = fa[x], z = fa[y], w = get_fa(x), k = get_fa(y);\n\tif(isroot(y)) ch[k][z] = x;\n\tif(ch[w ^ 1][x]) fa[ch[w ^ 1][x]] = y;\n\tfa[x] = z, ch[w][y] = ch[w ^ 1][x], ch[w ^ 1][x] = y, fa[y] = x, pushup(y), pushup(x);\n}\nil void Splay(int x)  {\n\tint top = 0, u = x;\n\tst[++ top] = u;\n\twhile(isroot(u)) st[++ top] = u = fa[u];\n\twhile(top) pushdown(st[top --]);\n\twhile(isroot(x)) {\n\t\tif(isroot(fa[x])) rotate(get_fa(x) == get_fa(fa[x]) ? fa[x] : x);\n\t\trotate(x);\n\t}\n\tpushup(x);\n}\nil void access(int x)  { for(re int y = 0; x; y = x, x = fa[x]) Splay(x), ch[1][x] = y, pushup(x); }\nil int findroot(int x, int u = 0) {\n\taccess(x), Splay(x), u = x;\n\twhile(ch[0][u]) u = ch[0][u];\n\treturn Splay(u), u; \n}\nil void makeroot(int x) { access(x), Splay(x), updown(x); }\nil void spilt(int x, int y) { makeroot(x), access(y), Splay(y); }\nil void link(int x, int y) { makeroot(x), fa[x] = y; }\nil void cut(int x, int y) { spilt(y, x), fa[y] = ch[0][x] = 0, pushup(x); }\nil void solve(int i) {\n\tint opt = read(); double x, y; scanf(\"%lf%lf\", &x, &y);\n\tif(opt == 1) {\n\t\tdouble pax = 1, C = cos(y), S = sin(y);\n\t\trep(j, 0, 20) {\n\t\t\tif(j % 2 == 0) val[j][i] = ((j % 4 == 0) ? 1 : -1) * S * pax / fac[j];\n\t\t\telse val[j][i] = ((j % 4 == 1) ? 1 : -1) * C * pax / fac[j];\n\t\t\tpax = pax * x;\n\t\t}\n\t}\n\tif(opt == 2) {\n\t\tdouble pax = 1.0, te = exp(y);\n\t\trep(j, 0, 20) val[j][i] = te * pax / fac[j], pax = pax * x;\n\t}\n\tif(opt == 3) {\n\t\tval[0][i] = y, val[1][i] = x;\n\t\trep(j, 2, 20) val[j][i] = 0;\n\t}\n}\nsigned main() {\n\tn = read(), m = read(), scanf(\"%s\", c + 1), fac[0] = 1;\n\trep(i, 1, 20) fac[i] = fac[i - 1] * i;\n\trep(i, 1, n) solve(i);\n\twhile(m --) {\n\t\tscanf(\"%s\", c + 1);\n\t\tif(c[1] == 'a') link(read() + 1, read() + 1);\n\t\tif(c[1] == 'd') cut(read() + 1, read() + 1);\n\t\tif(c[1] == 'm') {\n\t\t\tint x = read() + 1;\n\t\t\tSplay(x), solve(x), pushup(x);\n\t\t}\n\t\tif(c[1] == 't') {\n\t\t\tint u = read() + 1, v = read() + 1; double ans = 0, pax = 1, x;\n\t\t\tscanf(\"%lf\", &x);\n\t\t\tif(findroot(u) != findroot(v)) { puts(\"unreachable\"); continue; }\n\t\t\tspilt(u, v);\n\t\t\trep(i, 0, 20) ans += sum[i][v] * pax, pax *= x;\n\t\t\tprintf(\"%.10lf\\n\", ans);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1582802827,
        "uid": 57014,
        "name": "Nemlit",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4546 \u3010[THUWC2017]\u5728\u7f8e\u5999\u7684\u6570\u5b66\u738b\u56fd\u4e2d\u7545\u6e38\u3011"
    },
    {
        "content": "# LCT+\u6cf0\u52d2\u5c55\u5f00\n\u9996\u5148e^x\u6c42\u5bfc\u5b8c\u662fln e * e^x\u8fd8\u662fe^x\n\nsin x\u6c42\u5bfc\u5b8c\u53d8\u6210cos x\uff0ccos x\u6c42\u5bfc\u5b8c\u53d8\u6210sin x\n\n \u7531\u4e8e\u590d\u5408\u51fd\u6570f(g(x))\u6c42\u5bfc\u5b8c\u662ff'(g(x))*g'(x)\n \n\u6240\u4ee5\u5c31\u53ef\u4ee5\u8f7b\u677e\u7684\u63a8\u51fasin x\u548ce^x\u7684n\u9636\u5bfc\u6570\n\n\u5bf9\u4e8e\u6cf0\u52d2\u5c55\u5f00\u7684\u90a3\u4e2a\u516c\u5f0f\uff0c\u6211\u4eec\u53d1\u73b0x0=0.5\u65f6\uff0c\u6bcf\u4e00\u9879\u7684\u7cfb\u6570\u4e3a1/2/n!\uff0c\u5230\u4e86\u540e\u9762\u5bf9ans\u7684\u5f71\u54cd\u975e\u5e38\u5c0f\uff0c\u53ef\u4ee5\u5ffd\u7565\uff0c\u4e8e\u662f\u6211\u4eec\u53ea\u8981\u628a\u591a\u9879\u5f0f\u7684\u524d14\u9879\u63d0\u51fa\u6765\u5c31\u597d\u3002\n\n\u63a5\u4e0b\u6765\u52a8\u6001\u6811\u4e0a\u7684\u64cd\u4f5c\u7528Link Cut Tree\u7ef4\u62a4\u4e00\u4e0b\u5c31ok\u4e86\n# \u4ee3\u7801\uff08\u6709\u70b9\u957f\uff09\n```\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <cstdlib>\n#include <cassert>\n#include <cmath>\n#include <complex>\n#include <bitset>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <set>\n#include <map>\n#define rep(i, a, b) for(int (i) = (a), __omega = (b); (i) <= __omega; ++(i))\n#define down(i, a, b) for(int (i) = (a), __omega = (b); (i) >= (b); --(i))\n#define openfile(name) freopen(name\".in\", \"r\", stdin), freopen(name\".out\", \"w\", stdout)\nusing namespace std;\n\nconst double x0 = 0.5;\n\nconst int bit = 14;\n\ndouble frac[20];\n\nvoid init_frac() { frac[0] = 1; for(int i = 1; i <= bit; ++i) frac[i] = frac[i-1]*i; } //\u9884\u5904\u7406\u9636\u4e58 \n\n//sin(x)\u7684n\u9636\u5bfc \ndouble diff_sin(int n, double x) {\n    double k = ((n&3) == 0 || (n&3) == 1) ? 1 : -1;\n    if(n&1) return k*cos(x); else return k*sin(x);\n}\n\nstruct poly {\n    double a[20];\n    friend poly operator+(poly a, poly b) {\n        for(int i = bit; ~i; --i) a.a[i] += b.a[i]; return a;\n    }\n    double operator()(double x) {\n        x -= x0; double res = 0;\n        for(int i = bit; ~i; --i) res *= x, res += a[i];\n        return res;\n    }\n    void get_line(double A, double B) {\n        memset(a, 0, sizeof(double)*20);\n        a[0] = B+x0*A; a[1] = A;\n    }\n    void get_sin(double A, double B) {\n        memset(a, 0, sizeof(double)*20);\n        double xx = A*x0+B;\n        double an = 1;\n        for(int i = 0; i <= bit; ++i) {\n            a[i] = an*diff_sin(i, xx)/frac[i];\n            an = an*A;\n        }\n    }\n    void get_exp(double A, double B) {\n        memset(a, 0, sizeof(double)*20);\n        double xx = A*x0+B;\n        double an = 1;\n        for(int i = 0; i <= bit; ++i) {\n            a[i] = an*exp(xx)/frac[i];\n            an = an*A;\n        }\n    }\n}; \n\nstruct node *nul;\n\nstruct node {\n    \n    node *son[2], *top, *fa;\n    \n    poly val, sum;\n    \n    int rev;\n    \n    void reverse() { rev ^= 1; swap(son[0], son[1]);  }\n    \n    void push_up() { sum = val+(son[0]->sum)+(son[1]->sum); }\n    \n    void push_down() {\n        if(rev) {\n            rev ^= 1;\n            son[0]->reverse();\n            son[1]->reverse();\n        }\n    }\n    \n    int pos() { return fa->son[1] == this; }\n    \n    void rotate() {\n        int d = pos(); node *y = fa; \n        y->push_down(); push_down();\n        top = y->top;\n        if(y->fa != nul) y->fa->son[y->pos()] = this;\n        y->son[d] = son[d^1], son[d^1] = y;\n        if(y->son[d] != nul) y->son[d]->fa = y;\n        fa = y->fa, y->fa = this;\n        y->push_up(), push_up();\n    }\n    \n    void splay() {\n        push_down();\n        for(node *y = fa; fa != nul; rotate())\n            if(y = fa, y->fa != nul) y->pos()^pos() ? rotate() : y->rotate();\n        push_up();\n    }\n    \n    void expose(node *p = nul) {\n        splay();\n        if(son[1] != nul) {\n            son[1]->fa = nul;\n            son[1]->top = this;\n        }\n        son[1] = p;\n        if(p != nul) p->fa = this;\n        push_up();\n    }\n    \n} pos[100010];\n\nnode *access(node *x) {\n    for(x->expose(); x->top; x = x->top) x->top->expose(x);\n    return x;\n}\n\nvoid link(node *x, node *y) { x = access(x); x->reverse(); x->top = y; }\n\nvoid cut(node *x, node *y) {\n    x->expose(), y->expose();\n    if(x->top == y) x->top = 0;\n    if(y->top == x) y->top = 0;\n}\n\nnode *root(node *x) {\n    x = access(x);\n    for(; x->son[0] != nul; x = x->son[0]);\n    return x;\n}\n\nint n, m;\n\npoly p[100010];\n\nchar spe[5];\n\nint main() {\n    init_frac();\n    scanf(\"%d%d%s\", &n, &m, spe);\n    nul = pos;\n    for(int i = 0; i <= n; ++i) {\n        (pos+i)->fa = (pos+i)->son[0] = (pos+i)->son[1] = nul;\n    }\n    for(int i = 1; i <= n; ++i) {\n        int type; double a, b;\n        scanf(\"%d%lf%lf\", &type, &a, &b);\n        if(type == 1) {\n            p[i].get_sin(a, b);\n        } else if(type == 2) {\n            p[i].get_exp(a, b);\n        } else if(type == 3) {\n            p[i].get_line(a, b);\n        }\n        (pos+i)->val = (pos+i)->sum = p[i];\n    } \n    while(m--) {\n        static char str[20];\n        scanf(\"%s\", str);\n        if(!strcmp(str, \"appear\")) {\n            int u, v;\n            scanf(\"%d%d\", &u, &v);\n            u++, v++;\n            link(pos+u, pos+v);\n        } else if(!strcmp(str, \"disappear\")) {\n            int u, v;\n            scanf(\"%d%d\", &u, &v);\n            u++, v++;\n            cut(pos+u, pos+v);\n        } else if(!strcmp(str, \"magic\")) {\n            int c, f; double a, b;\n            scanf(\"%d%d%lf%lf\", &c, &f, &a, &b);\n            c++;\n            if(f == 1) {\n                p[c].get_sin(a, b);\n            } else if(f == 2) {\n                p[c].get_exp(a, b);\n            } else if(f == 3) {\n                p[c].get_line(a, b);\n            }\n            access(pos+c);\n            (pos+c)->sum = (pos+c)->val = p[c];\n        } else if(!strcmp(str, \"travel\")) {\n            int u, v; double x;\n            scanf(\"%d%d%lf\", &u, &v, &x);\n            u++, v++;\n            if(root(pos+u) != root(pos+v)) {\n                puts(\"unreachable\");\n            } else {\n                access(pos+u);\n                (pos+u)->splay();\n                (pos+u)->reverse();\n                poly f = access(pos+v)->sum;\n                printf(\"%.9lf\\n\", f(x));\n            }\n        } else {\n            puts(\"orz fjzzq2002!\");\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1525613649,
        "uid": 75446,
        "name": "Unknown_Error\u00a0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3P4546\u3010[THUWC2017]\u5728\u7f8e\u5999\u7684\u6570\u5b66\u738b\u56fd\u4e2d\u7545\u6e38\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5f88\u6709\u610f\u601d\u554a\u3002\u3002\u3002qwq  \n\u505a\u8fd9\u9898\u5fc5\u987b\u8981\u7528$\\text{Link-Cut Tree}$\uff0c\u5982\u679c\u4e0d\u4f1a\u7684\u8bdd\u53ef\u4ee5\u5148\u53bb\u4f60\u8c37[\u6a21\u677f\u533a](https://www.luogu.org/problemnew/show/P3690)\u5b66\u4e60\u4e00\u4e0bqwq  \n\n\u8fd9\u91cc\u4e3b\u8981\u8bb2\u5982\u4f55\u8ba1\u7b97\u51fd\u6570\u503c\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u628a\u6bcf\u4e2a\u70b9\u7684\u51fd\u6570\uff0c\u641e\u6210\u4e00\u4e2a$k$\u6b21\u591a\u9879\u5f0f\uff0c\u5b58\u5728\u8fd9\u4e2a\u70b9\u4e0a\u3002  \n\u8fd9\u6837\u4e00\u6765\uff0c$\\text{LCT}$\u4e2d\u4e0a\u4f20\u6807\u8bb0\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u76f4\u63a5\u628a\u8fd9\u4e9b\u591a\u9879\u5f0f\u52a0\u8d77\u6765\uff0c\u7136\u540e\u8be2\u95ee\u65f6\u4ee3\u5165\u6c42\u503c\u5373\u53ef\u3002  \n****\n\u9996\u5148\u662f\u4e00\u6b21\u51fd\u6570\uff1a  \n$$\\large f(x)=ax+b$$  \n\u975e\u5e38\u663e\u7136\uff0c\u591a\u9879\u5f0f$0$\u6b21\u9879\u4e3a$b$\uff0c$1$\u6b21\u9879\u4e3a$a$\uff0c\u5176\u4f59\u9879\u4e3a$0$\u3002\n****  \n\u7136\u540e\u662f\u6307\u6570\u51fd\u6570\uff1a  \n$$\\large f(x)=e^{ax+b}$$  \n\u6839\u636e$\\text{Taylor}$\u5c55\u5f00\u5f0f\uff1a  \n$$\\large e^{ax+b}=\\sum\\limits_{n=0}^\\infty\\frac{(ax+b)^n}{n!}$$  \n\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u6307\u6570\u51fd\u6570\u641e\u6210\u4e00\u4e2a\u591a\u9879\u5f0f\u51fd\u6570\u4e86\u3002  \n$(ax+b)^n$\u7684\u8fd9\u90e8\u5206\uff0c\u53ef\u4ee5\u66b4\u529b\u4e8c\u9879\u5f0f\u5c55\u5f00\u3002  \n$$\\large (ax+b)^n=\\sum\\limits_{m=0}^n\\binom{n}{m}a^{n-m}b^mx^{n-m}$$  \n\u7136\u540e\u628a\u5c55\u5f00\u5f0f\u7684\u6bcf\u4e00\u9879\u90fd\u66b4\u529b\u52a0\u8d77\u6765\u5c31\u597d\u4e86\u3002\u3002   \n\u6ce8\u610f\uff0c\u6211\u4eec\u662f\u4e0d\u53ef\u80fd\u53d6\u5230\u65e0\u7a77\u591a\u9879\u7684\uff0c\u6240\u4ee5\u53d6\u5927\u7ea6\u524d$20$\u9879\u5c31\u591f\u3002  \n\u5728\u6211\u7684\u505a\u6cd5\u4e2d\uff0c$k=21$\uff0c\u4e5f\u5c31\u662f\u7ef4\u62a4\u4e00\u4e2a$21$\u6b21\u591a\u9879\u5f0f\u3002\n****  \n\u6700\u540e\u662f\u6b63\u5f26\u51fd\u6570\uff1a  \n$$\\large f(x)=\\sin(ax+b)$$  \n\u7c7b\u6bd4\u6307\u6570\u51fd\u6570\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u5c55\u5f00\u4e00\u4e0b\uff1a  \n$$\\large \\sin(ax+b)=\\sum\\limits_{n=0}^\\infty(-1)^n\\frac{(ax+b)^{2n+1}}{(2n+1)!}$$  \n\u505a\u6cd5\u548c\u6307\u6570\u51fd\u6570\u5dee\u4e0d\u591a\uff0c\u53ea\u4e0d\u8fc7\u8981\u6ce8\u610f\u5076\u6570\u6b21\u9879\u90fd\u6ca1\u6709\u4e86\u3002  \n****  \n\n\u6ce8\u610f\u5751\u70b9\uff1a\u57ce\u5e02\u662f\u4ece$0$\u6807\u53f7\u7684  \n\u76f4\u63a5\u4e0a$\\text{LCT}$\u677f\u5b50\uff0c\u8fd9\u9898\u5c31\u505a\u5b8c\u4e86\u3002  \n\n\u65f6\u95f4\u590d\u6742\u5ea6$\\Theta(nk^2+n\\log n)$\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<cmath>\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#define N 100002\n#define inf 0x3f3f3f3f\n#define K 22\n#define reg register\n#define ls son[u][0]\n#define rs son[u][1]\nusing namespace std;\n\nstruct poly{\n    double a[K];\n    poly(){ memset(a,0,sizeof(a)); }\n\n    poly operator + (const poly& f){ \n        //\u91cd\u8f7d\u52a0\u6cd5\u8fd0\u7b97\u7b26,\u591a\u9879\u5f0f\u52a0\u6cd5\u5c31\u662f\u628a\u6bcf\u9879\u7cfb\u6570\u52a0\u8d77\u6765\n        poly res;\n        for(reg int i=0;i<K;++i)\n            res.a[i] = a[i]+f.a[i];\n        return res;\n    }\n\n    double val(double x){\n        //\u591a\u9879\u5f0f\u6c42\u503c\n        double w = 1,res = 0;\n        for(reg int i=0;i<K;++i){\n            res += a[i]*w;\n            w *= x;\n        }\n        return res;\n    }\n};\n\npoly p[N];\nint st[N],comb[K][K];\ndouble fac[K];\nint n,q;\n\n//\u4ee5\u4e0b\u4e3aLCT\u6a21\u677f\n\nstruct Link_Cut_Tree{\n    int fa[N],son[N][2];\n    poly s[N]; //\u6ce8\u610f\u6bcf\u4e2a\u70b9\u5b58\u7684\u662f\u591a\u9879\u5f0f\n    bool r[N];\n\n    inline bool isroot(int u){\n        return son[fa[u]][0]==u||son[fa[u]][1]==u;\n    }\n\n    inline void pushup(int u){\n        s[u] = s[ls]+s[rs]+p[u];\n    }\n\n    inline void pushr(int u){\n        swap(son[u][0],son[u][1]);\n        r[u] ^= 1;\n    }\n\n    inline void pushdown(int u){\n        if(!r[u]) return;\n        if(ls) pushr(ls);\n        if(rs) pushr(rs);\n        r[u] = 0;\n    }\n\n    inline int ident(int f,int u){\n        return son[f][1]==u;\n    }\n\n    inline void rotate(int u){\n        int y = fa[u],z = fa[y];\n        int k = ident(y,u),w = son[u][k^1];\n        if(isroot(y)) son[z][ident(z,y)] = u;\n        son[u][k^1] = y;\n        son[y][k] = w;\n        if(w) fa[w] = y;\n        fa[y] = u;\n        fa[u] = z;\n        pushup(y);\n    }\n\n    inline void splay(int u){\n        int y = u,z = 0;\n        st[++z] = y;\n        while(isroot(y)) st[++z] = y = fa[y];\n        while(z) pushdown(st[z--]);\n        while(isroot(u)){\n            y = fa[u];\n            z = fa[y];\n            if(isroot(y)){\n                if((son[y][0]==u)^(son[z][0]==y)) rotate(u);\n                else rotate(y);\n            }\n            rotate(u);\n        }\n        pushup(u);\n    }\n\n    inline void access(int u){\n        int y = 0;\n        while(u){\n            splay(u);\n            rs = y;\n            pushup(u);\n            y = u;\n            u = fa[u];\n        }\n    }\n\n    inline void makeroot(int u){\n        access(u),splay(u);\n        pushr(u);\n    }\n\n    inline int findroot(int u){\n        access(u),splay(u);\n        while(ls){\n            pushdown(u);\n            u = ls;\n        }\n        splay(u);\n        return u;\n    }\n\n    inline void split(int u,int v){\n        makeroot(u);\n        access(v),splay(v);\n    }\n\n    inline void link(int u,int v){\n        makeroot(u);\n        if(findroot(v)!=u) fa[u] = v;\n    }\n\n    inline void cut(int u,int v){\n        makeroot(u);\n        if(findroot(v)!=u||fa[v]!=u||son[v][0]) return;\n        fa[v] = son[u][1] = 0;\n        pushup(u);\n    }\n\n    inline poly query(int u,int v){\n        split(u,v);\n        return s[v];\n    }\n\n    inline bool connected(int u,int v){\n        return findroot(u)==findroot(v);\n    }\n}T;\n\n//\u4ee5\u4e0a\u4e3aLCT\u6a21\u677f\n\ninline poly exp(double a,double b);\ninline poly sin(double a,double b);\ninline void update(int u,int f,double a,double b);\ninline void init();\n\nsigned main(){\n    init();\n    poly res;\n    int type,ep,u,v;\n    double a,b,x;\n    char str[233];\n    scanf(\"%d%d%s\",&n,&q,str);\n    for(int i=1;i<=n;++i){\n        scanf(\"%d%lf%lf\",&type,&a,&b);\n        update(i,type,a,b);\n    }\n    while(q--){\n        ep = 0;\n        char c = getchar();\n        while(c<'a'||c>'z') c = getchar();\n        while(c>='a'&&c<='z'){\n            str[++ep] = c;\n            c = getchar();\n        }\n        if(str[1]=='a'){\n            scanf(\"%d%d\",&u,&v);\n            T.link(u+1,v+1);\n        }else if(str[1]=='d'){\n            scanf(\"%d%d\",&u,&v);\n            T.cut(u+1,v+1);\n        }else if(str[1]=='m'){\n            scanf(\"%d%d%lf%lf\",&u,&type,&a,&b);\n            T.splay(u+1);\n            update(u+1,type,a,b);\n        }else{\n            scanf(\"%d%d%lf\",&u,&v,&x);\n            if(!T.connected(u+1,v+1)){\n                printf(\"unreachable\\n\");\n                continue;\n            }\n            res = T.query(u+1,v+1);\n            printf(\"%.9lf\\n\",res.val(x));\n        }\n    }\n    return 0;\n}\n\ninline void update(int u,int f,double a,double b){ //\u5355\u70b9\u66f4\u65b0\n    if(f==3){\n        p[u] = poly();\n        p[u].a[0] = b;\n        p[u].a[1] = a;\n    }else if(f==2) p[u] = exp(a,b);\n    else p[u] = sin(a,b);\n}\n\ninline void init(){ //\u9884\u5904\u7406\u7ec4\u5408\u6570,\u548c\u9636\u4e58\u5012\u6570\n    fac[0] = fac[1] = comb[0][0] = 1;\n    for(int i=1;i<K;++i){\n        for(int j=0;j<=i;++j){\n            if(j==0) comb[i][j] = 1;\n            else comb[i][j] = comb[i-1][j]+comb[i-1][j-1];\n        }\n    }\n    for(int i=2;i<K;++i)\n        fac[i] = fac[i-1]/i;\n}\n\ninline poly exp(double a,double b){ //\u6c42\u6307\u6570\u51fd\u6570\u5c55\u5f00\u591a\u9879\u5f0f\n    double xs[K][K];\n    memset(xs,0,sizeof(xs));\n    poly res = poly();\n    double t = 1;\n    for(reg int i=0;i<K;++i){\n        for(reg int j=i;j<K;++j)\n            xs[j][i] = comb[j][i]*t;\n        t *= b;\n    }\n    for(reg int i=0;i<K;++i){\n        for(reg int j=0;j<=i;++j)\n            xs[i][j] *= fac[i];\n    }\n    t = 1;\n    for(reg int i=0;i<K;++i){\n        for(reg int j=0;j<K-i;++j)\n            res.a[i] += xs[i+j][j]*t;      \n        t *= a;\n    }\n    return res;    \n}\n\ninline poly sin(double a,double b){ //\u6c42\u6b63\u5f26\u51fd\u6570\u5c55\u5f00\u591a\u9879\u5f0f\n    double xs[K][K];\n    memset(xs,0,sizeof(xs));\n    poly res = poly();\n    double t = 1;\n    for(reg int i=0;i<K;++i){\n        for(reg int j=i;j<K;++j)\n            xs[j][i] = comb[j][i]*t;\n        t *= b;\n    }\n    for(reg int i=0;i<K;++i){\n        for(reg int j=0;j<=i;++j){\n            if(!(i&1)) xs[i][j] = 0;\n            else if((i&3)==3) xs[i][j] = -xs[i][j];\n        }\n    }\n    for(reg int i=0;i<K;++i){\n        if(!(i&1)) continue;\n        for(reg int j=0;j<=i;++j)\n            xs[i][j] *= fac[i];\n    }\n    t = 1;\n    for(reg int i=0;i<K;++i){\n        for(reg int j=0;j<K-i;++j)\n            res.a[i] += xs[i+j][j]*t;      \n        t *= a;\n    }\n    return res;\n}\n```",
        "postTime": 1554478730,
        "uid": 115864,
        "name": "NaCly_Fish",
        "ccfLevel": 6,
        "title": "\u5728\u7f8e\u5999\u7684\u6570\u5b66\u738b\u56fd\u4e2d\u7545\u6e38"
    },
    {
        "content": "## LCT+\u5f3a\u884c\u6cf0\u52d2\u5c55\u5f00\uff1f\u8fd8\u597d\u628a\u5f0f\u5b50\u7ed9\u4e86\n#### ~~LCT\u603b\u662f\u548c\u7384\u5b66\u4e1c\u897f\u653e\u5728\u4e00\u8d77~~\n### \u6211\u4eec\u4e0d\u59a8\u4ee4$x_0=0.5$\uff08\u5176\u5b9e\u53d6\u4ec0\u4e48\u90fd\u662f\u4e00\u6837\u7684\uff0c\u4f46\u662f\u6700\u597d\u53d6\u5728$[0,1]$\u7684\u8303\u56f4\u5185\uff09\uff0c\u5c06\u5176\u4ee3\u5165\u7ed9\u51fa\u7684\u5f0f\u5b50\uff0c\u6211\u4eec\u5f97\u5230\u7684$f(x)$\u7684\u5f0f\u5b50\u5c31\u662f\u4e00\u4e2a\u591a\u9879\u5f0f\u4e86\u3002\n### \u7136\u540e\u590d\u4e60\u4e00\u4e0b\u5bfc\u6570\uff1a\n### $(Cf(x))'=Cf'(x)$\uff08$C$\u4e3a\u5e38\u6570\uff09\n### $sin'(x)=cos(x),cos'(x)=-sin(x),(e^x)'=e^x,C'=0 , (ax+b)'=a$\n### \u4ee4$g(x)=u$\uff0c\u5219$f[g(x)]' = f'(u) \\times g'(x)$\n### \u6709\u4e86\u8fd9\u4e9b\u5f0f\u5b50\u5c31\u53ef\u4ee5\u5f97\u5230\u7ed9\u51fa\u7684\u4e09\u79cd\u51fd\u6570\u7684\u4efb\u610f\u9636\u5bfc\u6570\u4e86\u3002\n### \u4f46\u662f\u663e\u7136\u6211\u4eec\u4e0d\u80fd\u628a\u6240\u6709\u9879\u7684\u7cfb\u6570\u90fd\u7b97\u51fa\u6765\u3002\u56e0\u4e3a\u5728\u6bd4\u8f83\u9760\u540e\u7684\u9879\u4e2d\uff0c\u9636\u4e58\u7684\u503c\u5f88\u5927\uff0c\u5bf9\u7b54\u6848\u9020\u6210\u7684\u8d21\u732e\u5c31\u4f1a\u5c0f\u5230\u5ffd\u7565\u4e0d\u8ba1\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u53d6\u524d\u9762\u82e5\u5e72\u9879\uff0c\u8fd9\u91cc\u6211\u53d6\u7684\u662f\u524d$12$\u9879\u3002\n### \u7136\u540e\u7528$LCT$\u7ef4\u62a4\u8fd9\u4e9b\u9879\u7684\u7cfb\u6570\u548c\uff0c\u6bcf\u4e00\u6b21\u8be2\u95ee\u628a\u94fe\u62ff\u51fa\u6765\u76f4\u63a5\u7b97\u5c31\u884c\u4e86\uff0c\u96be\u9898\u53d8\u6210\u88f8\u9898\u4e86qwq\n```cpp\n#include<bits/stdc++.h>\n#define ld long double\n//This code is written by Itst\nusing namespace std;\n\ninline int read(){\n\tint a = 0;\n\tbool f = 0;\n\tchar c = getchar();\n\twhile(c != EOF && !isdigit(c)){\n\t\tif(c == '-')\n\t\t\tf = 1;\n\t\tc = getchar();\n\t}\n\twhile(c != EOF && isdigit(c)){\n\t\ta = (a << 3) + (a << 1) + (c ^ '0');\n\t\tc = getchar();\n\t}\n\treturn f ? -a : a;\n}\n\nconst int MAXN = 100010;\nstruct node{\n\tld point[13] , pre[13] , a , b;\n\tint ch[2] , fa , type;\n\tbool mark;\n}Tree[MAXN];\nint N;\nchar s[20];\n\ninline bool nroot(int x){\n\treturn Tree[Tree[x].fa].ch[1] == x || Tree[Tree[x].fa].ch[0] == x;\n}\n\ninline bool son(int x){\n\treturn Tree[Tree[x].fa].ch[1] == x;\n}\n\ninline ld calc(int type , int n , ld a , ld b){\n\tld sum = 0;\n\tswitch(type){\n\tcase 1:\n\t\tswitch(n & 3){\n\t\tcase 0:\n\t\t\tsum = sin(0.5 * a + b);\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tsum = cos(0.5 * a + b);\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tsum = -sin(0.5 * a + b);\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tsum = -cos(0.5 * a + b);\n\t\t\tbreak;\n\t\t}\n\t\treturn sum * pow(a , n);\n\tcase 2:\n\t\treturn pow(a , n) * exp(a * 0.5 + b);\n\tcase 3:\n\t\tswitch(n){\n\t\tcase 0:\n\t\t\treturn a * 0.5 + b;\n\t\tcase 1:\n\t\t\treturn a;\n\t\tdefault:\n\t\t\treturn 0;\n\t\t}\n\t}\n}\n\ninline void pushup(int x){\n\tfor(int i = 0 ; i <= 12 ; ++i)\n\t\tTree[x].point[i] = Tree[x].pre[i] + Tree[Tree[x].ch[0]].point[i] + Tree[Tree[x].ch[1]].point[i];\n}\n\ninline void getpre(int x){\n\tfor(int i = 0 ; i <= 12 ; ++i)\n\t\tTree[x].pre[i] = calc(Tree[x].type , i , Tree[x].a , Tree[x].b);\n}\n\ninline void ZigZag(int x){\n\tbool f = son(x);\n\tint y = Tree[x].fa , z = Tree[y].fa , w = Tree[x].ch[f ^ 1];\n\tif(nroot(y))\n\t\tTree[z].ch[son(y)] = x;\n\tTree[x].fa = z;\n\tTree[x].ch[f ^ 1] = y;\n\tTree[y].fa = x;\n\tTree[y].ch[f] = w;\n\tif(w)\n\t\tTree[w].fa = y;\n\tpushup(y);\n\tpushup(x);\n}\n\ninline void pushdown(int x){\n\tif(Tree[x].mark){\n\t\tTree[Tree[x].ch[0]].mark ^= 1;\n\t\tTree[Tree[x].ch[1]].mark ^= 1;\n\t\tTree[x].mark = 0;\n\t\tswap(Tree[x].ch[0] , Tree[x].ch[1]);\n\t}\n}\n\nvoid pushdown_all(int x){\n\tif(nroot(x))\n\t\tpushdown_all(Tree[x].fa);\n\tpushdown(x);\n}\n\ninline void Splay(int x){\n\tpushdown_all(x);\n\twhile(nroot(x)){\n\t\tif(nroot(Tree[x].fa))\n\t\t\tZigZag(son(x) == son(Tree[x].fa) ? Tree[x].fa : x);\n\t\tZigZag(x);\n\t}\n}\n\ninline void access(int x){\n\tfor(int y = 0 ; x ; y = x , x = Tree[x].fa){\n\t\tSplay(x);\n\t\tTree[x].ch[1] = y;\n\t\tpushup(x);\n\t}\n}\n\ninline int findroot(int x){\n\taccess(x);\n\tSplay(x);\n\tpushdown(x);\n\twhile(Tree[x].ch[0])\n\t\tpushdown(x = Tree[x].ch[0]);\n\tSplay(x);\n\treturn x;\n}\n\ninline void makeroot(int x){\n\taccess(x);\n\tSplay(x);\n\tTree[x].mark ^= 1;\n}\n\ninline void split(int x , int y){\n\tmakeroot(x);\n\taccess(y);\n\tSplay(y);\n}\n\ninline void link(int x , int y){\n\tmakeroot(x);\n\tTree[x].fa = y;\n}\n\ninline void cut(int x , int y){\n\tsplit(x , y);\n\tTree[y].ch[0] = Tree[x].fa = 0;\n\tpushup(y);\n}\n\ninline void change(int x , int type , ld a , ld b){\n\taccess(x);\n\tSplay(x);\n\tTree[x].type = type;\n\tTree[x].a = a;\n\tTree[x].b = b;\n\tgetpre(x);\n\tpushup(x);\n}\n\nint main(){\n\tfreopen(\"4546.in\" , \"r\" , stdin);\n\tfreopen(\"4546.out\" , \"w\" , stdout);\n\tN = read();\n\tint M = read();\n\tread();\n\tfor(int i = 1 ; i <= N ; ++i){\n\t\tTree[i].type = read();\n\t\tscanf(\"%Lf %Lf\" , &Tree[i].a , &Tree[i].b);\n\t\tgetpre(i);\n\t}\n\twhile(M--){\n\t\tld a , b , times , jc;\n\t    int d , e;\n\t\tif(scanf(\"%s\" , s) == EOF)\n\t\t\treturn 0;\n\t\tswitch(s[0]){\n\t\tcase 'a':\n\t\t\td = read() + 1;\n\t\t\te = read() + 1;\n\t\t\tlink(d , e);\n\t\t\tbreak;\n\t\tcase 'd':\n\t\t\td = read() + 1;\n\t\t\te = read() + 1;\n\t\t\tcut(d , e);\n\t\t\tbreak;\n\t\tcase 'm':\n\t\t\td = read() + 1;\n\t\t\te = read();\n\t\t\tscanf(\"%Lf %Lf\" , &a , &b);\n\t\t\tchange(d , e , a , b);\n\t\t\tbreak;\n\t\tcase 't':\n\t\t\td = read() + 1;\n\t\t\te = read() + 1;\n\t\t\tscanf(\"%Lf\" , &a);\n\t\t\tif(findroot(d) != findroot(e))\n\t\t\t\tputs(\"unreachable\");\n\t\t\telse{\n\t\t\t\tsplit(d , e);\n\t\t\t\tb = 0;\n\t\t\t\ttimes = jc = 1;\n\t\t\t\ta -= 0.5;\n\t\t\t\tfor(int i = 0 ; i <= 12 ; ++i){\n\t\t\t\t\tb += times * Tree[e].point[i] / jc;\n\t\t\t\t\ttimes *= a;\n\t\t\t\t\tjc *= (i + 1);\n\t\t\t\t}\n\t\t\t\tprintf(\"%.9Lf\\n\" , b);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n\n```\n\u6b22\u8fce\u6765\u8e29\u6211\u7684[blog](https://www.cnblogs.com/Itst/p/10041163.html)",
        "postTime": 1543366636,
        "uid": 96296,
        "name": "Itst",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4546 \u3010[THUWC2017]\u5728\u7f8e\u5999\u7684\u6570\u5b66\u738b\u56fd\u4e2d\u7545\u6e38\u3011"
    },
    {
        "content": "\u524d\u7f6e\u77e5\u8bc6\uff1aLCT\uff0c\u5fae\u79ef\u5206\uff08\u63a8\u8350 3B1B \u7684[\u5fae\u79ef\u5206\u7684\u672c\u8d28](https://www.bilibili.com/video/BV1qW411N7FU)\uff09\n\n\u53d1\u73b0 $\\sin$ \u548c $\\exp$ \u5e76\u4e0d\u662f\u5f88\u65b9\u4fbf\u76f4\u63a5\u7ef4\u62a4\uff0c\u8003\u8651\u5c06\u5176\u6cf0\u52d2\u5c55\u5f00\u4e3a\u591a\u9879\u5f0f\uff1a\n\n$$\n\\sin(ax+b)=\\sum_{k=0}^{\\infty}\\frac{a^k\\sin^{(k)}(b)}{k!}x^k\\\\\n\\exp(ax+b)=\\sum_{k=0}^{\\infty}\\frac{a^k\\cdot\\exp(b)}{k!}x^k\n$$\n\n\u7136\u540e\u9700\u8981\u9009\u62e9\u4e00\u4e2a $k$ \u7684\u4e0a\u754c\uff0c\u6211\u9009\u7684\u662f $20$\u3002\n\n\u76f4\u63a5\u628a\u5c55\u5f00\u7684\u591a\u9879\u5f0f\u7528 LCT \u7ef4\u62a4\u5373\u53ef\u3002\n\n```cpp\n#include <cmath>\n#include <iomanip>\n#include <iostream>\n\nusing namespace std;\n\nconst int kK = 21;  // k \u7684\u4e0a\u754c\n\nstruct LCT {                      // LCT \u677f\u5b50\n  static const int kN = 1e5 + 1;  // \u6700\u5927\u8282\u70b9\u6570\n\n  struct E {\n    double v[kK], s[kK];\n    int f, c[2], r;\n  } e[kN];\n\n  int W(int x) { return e[e[x].f].c[1] == x; }\n  bool nR(int x) { return e[e[x].f].c[W(x)] == x; }\n  void Pu(int x) {\n    for (int i = 0; i < kK; ++i) {\n      e[x].s[i] = e[e[x].c[0]].s[i] + e[e[x].c[1]].s[i] + e[x].v[i];\n    }\n  }\n  void Pr(int x) { swap(e[x].c[0], e[x].c[1]), e[x].r ^= 1; }\n  void Pd(int x) { e[x].r && (Pr(e[x].c[0]), Pr(e[x].c[1]), 0), e[x].r = 0; }\n  void R(int x) {\n    int y = e[x].f, z = e[y].f, u = W(x), w = e[x].c[u ^ 1];\n    if (nR(y)) {\n      e[z].c[W(y)] = x;\n    }\n    e[y].c[u] = w, e[x].c[u ^ 1] = y;\n    if (w) {\n      e[w].f = y;\n    }\n    e[y].f = x, e[x].f = z, Pu(y), Pu(x);\n  }\n  void S(int x) {\n    static int st[kN];\n    int y = x, z = 0;\n    for (; nR(y); st[++z] = y, y = e[y].f) {\n    }\n    for (Pd(y); z; Pd(st[z--])) {\n    }\n    for (; nR(x); R(x)) {\n      y = e[x].f;\n      if (nR(y)) {\n        R(W(x) == W(y) ? y : x);\n      }\n    }\n  }\n  void A(int x) {\n    for (int y = 0; x; y = x, x = e[x].f) {\n      S(x), e[x].c[1] = y, Pu(x);\n    }\n  }\n  void M(int x) {\n    A(x), S(x), Pr(x);\n  }\n  int F(int x) {\n    A(x), S(x);\n    for (; e[x].c[0]; Pd(x), x = e[x].c[0]) {\n    }\n    S(x);\n    return x;\n  }\n  void S(int x, int y) {\n    M(x), A(y), S(y);\n  }\n  void L(int x, int y) {\n    M(x), e[x].f = y;\n  }\n  void C(int x, int y) {\n    S(x, y), e[y].c[0] = e[x].f = 0, Pu(y);\n  }\n} t;\nint n, q;\n\nvoid S(int x, int o, double a, double b) {  // \u4fee\u6539\n  double f = 1, ma = 1;\n  t.S(x);        // \u5148\u65cb\u5230\u6839\u8282\u70b9\n  if (o == 1) {  // sin(ax+b)\n    double cb = cos(b), sb = sin(b);\n    for (int i = 0; i < kK; f *= ++i, ma *= a) {\n      t.e[x].v[i] = ((i & 1) ? cb : sb) * ((i & 2) ? -1 : 1) * ma / f;  // sin \u7684\u5bfc\u6570\u5faa\u73af\u8282\u4e3a sin,cos,-sin,-cos\n    }\n  } else if (o == 2) {  // exp(ax+b)\n    double eb = exp(b);\n    for (int i = 0; i < kK; f *= ++i, ma *= a) {\n      t.e[x].v[i] = eb * ma / f;  // exp \u5bfc\u6570\u4e0d\u53d8\n    }\n  } else {  // ax+b\n    t.e[x].v[0] = b, t.e[x].v[1] = a;\n    for (int i = 2; i < kK; ++i) {\n      t.e[x].v[i] = 0;\n    }\n  }\n}\n\nint main() {\n  ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n  cout << scientific << setprecision(8);\n  char _;\n  cin >> n >> q >> _ >> _;\n  for (int i = 1, o; i <= n; ++i) {\n    double x, y;\n    cin >> o >> x >> y;\n    S(i, o, x, y);\n  }\n  for (int x, y; q--;) {\n    string o;\n    double a, b;\n    cin >> o >> x >> y;\n    ++x, ++y;\n    if (o[0] == 'a') {  // Link\n      t.L(x, y);\n    } else if (o[0] == 'd') {  // Cut\n      t.C(x, y);\n    } else if (o[0] == 'm') {  // \u4fee\u6539\n      --y;\n      cin >> a >> b;\n      S(x, y, a, b);\n    } else {  // \u67e5\u8be2\n      cin >> a;\n      if (t.F(x) != t.F(y)) {  // \u5224\u65ad\u65e0\u89e3\n        cout << \"unreachable\\n\";\n      } else {\n        t.S(x, y);\n        double v = 1, s = 0;\n        for (int i = 0; i < kK; ++i, v *= a) {\n          s += t.e[y].s[i] * v;  // \u8ba1\u7b97\u7b54\u6848\n        }\n        cout << s << '\\n';\n      }\n    }\n  }\n  return 0;\n}\n```",
        "postTime": 1659532733,
        "uid": 376161,
        "name": "wsfxk",
        "ccfLevel": 6,
        "title": "P4546 [THUWC2017]\u5728\u7f8e\u5999\u7684\u6570\u5b66\u738b\u56fd\u4e2d\u7545\u6e38 \u9898\u89e3"
    },
    {
        "content": "\u633a\u6709\u610f\u601d\u7684\u4e00\u9053\u9898\uff08\u4f46\u6570\u5b66 \u4e0d\u77e5\u9053=\u4e0d\u4f1a QAQ\uff09\u3002  \n[\u53ef\u80fd\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.luogu.com.cn/blog/wangrx/solution-p4546)\n\n---------------------------\n\u76f4\u63a5\u6cf0\u52d2\u5c55\u5f00\uff1a  \n$$f(x)=\\displaystyle\\sum_{k=0}^\\infty\\frac{f^{(k)}(x_0)}{k!}(x-x_0)^k$$  \n$$f^{(0)}(x)=f(x),f^{(k)}(x)=\\lim_{\\Delta x\\rightarrow 0}\\frac{f^{(k-1)}(x+\\Delta x)-f^{(k-1)}(x)}{\\Delta x}$$\n\n\u53c8\u77e5 $(e^x)^{(1)}=e^x,\\sin^{(1)}x=\\cos x,\\cos^{(1)}x=-\\sin x$\n\n\u4e8e\u662f\u7acb\u523b\u5f97\u5230 $e^x,\\sin x,\\cos x$ \u7684\u751f\u6210\u51fd\u6570\uff1a\n\n$$e^x=\\sum_{k=0}^\\infty\\frac{e^0}{k!}x^k=\\sum_{k=0}^\\infty\\frac{x^k}{k!}=1+\\frac{x}{1!}+\\frac{x^2}{2!}+\\cdots$$\n$$\\sin x=\\sum_{k=0}^\\infty\\frac{\\sin^{(k)}0}{k!}x^k=\\sum_{k=0}^\\infty\\frac{(-1)^kx^{2k+1}}{(2k+1)!}=\\frac{x}{1!}-\\frac{x^3}{3!}+\\frac{x^5}{5!}-\\frac{x^7}{7!}\\cdots$$\n$$\\cos x=\\sum_{k=0}^\\infty\\frac{\\cos^{(k)}0}{k!}x^k=\\sum_{k=0}^\\infty\\frac{(-1)^kx^{2k}}{(2k)!}=1-\\frac{x^2}{2!}+\\frac{x^4}{4!}-\\frac{x^6}{6!}+\\cdots$$\n\u6c42\u503c\u65f6\u53d6\u6709\u9650\u9879\u5373\u53ef\uff0c\u53d6\u7684\u9879\u8d8a\u591a\uff0c\u503c\u8d8a\u7cbe\u786e\u3002\n\n\u6211\u4eec\u8981\u6c42\u7684\u662f $ax+b,e^{ax+b},\\sin(ax+b)$\uff0c\u540e\u4e24\u4e2a\u53ef\u5c55\u5f00\u4e3a\uff1a\n\n$$e^{ax+b}=e^{ax}\\bullet e^b=e^b\\sum_{k=0}^\\infty\\frac{a^kx^k}{k!}=\\sum_{k=0}^\\infty\\frac{e^ba^k}{k!}x^k$$\n$$\\sin(ax+b)=\\sin ax\\cos b+\\cos ax\\sin b$$\n$$=\\sum_{k=0}^\\infty\\frac{(-1)^ka^{2k}\\sin b}{(2k)!}x^{2k}+\\frac{(-1)^ka^{2k+1}\\cos b}{(2k+1)!}x^{2k+1}$$\n\n---------------\n~~\u8bba\u5982\u4f55\u5361\u6700\u4f18\u89e3~~  \n\u5c55\u5f00\u4e3a\u6709\u9650\u6b21\u591a\u9879\u5f0f\u540e\uff0c\u76f8\u52a0\u548c\u6c42\u503c\u90fd\u662f $\\Theta($\u9879\u6570$)$ \u7684\uff0c\u53ef\u4ee5\u5c01\u88c5\u8d77\u6765\u3002  \n\u5b9e\u6d4b `double` \u7cbe\u5ea6\u4e0b\u53d6\u524d $14$ \u9879\u53ef\u4fdd\u8bc1\u6b63\u786e\u6027\uff0c\u4e14\u7528\u65f6\u6700\u77ed\uff0c\u6548\u7387\u6700\u9ad8\u3002 \n\n```cpp\ntypedef unsigned int word;\ntypedef unsigned char byte;\nstruct function{//\u591a\u9879\u5f0f\u51fd\u6570\n\tdouble eax[14];\n\tinline double& operator[](register byte id){\n\t\treturn eax[id];}//\u6c42\u9879\n\tinline void operator =(const function &func){\n\t\tmemcpy(eax,func.eax,sizeof(eax));}//\u590d\u5236\n\tinline void operator +=(const function &func){\n\t\tfor(register byte i=0;i<14;++i)\n\t\t\teax[i]+=func.eax[i];\n\t}//\u76f8\u52a0\n\tinline void operator -=(const function &func){\n\t\tfor(register byte i=0;i<14;++i)\n\t\t\teax[i]-=func.eax[i];\n\t}//\u76f8\u51cf\n\tinline double operator()(register double x){\n\t\tregister double num=1,ans=0;\n\t\tfor(register byte i=0;i<14;num=num*x,++i)\n\t\t\tans+=num*eax[i];\n\t\treturn ans;\n\t}//\u6c42\u503c\n}exp,sin,cos;\nstruct READ{//\u5feb\u8bfb\u5feb\u5199\n\tchar c,w,type;\n\tinline READ(){\n\t\tc=getchar(),exp[0]=1;\n\t\tfor(register byte i=1;i<14;++i)\n\t\t\texp[i]=exp[i-1]*i;\n\t\tfor(register byte i=0;i<14;++i){\n\t\t\texp[i]=(1.0)/exp[i];\n\t\t\tsin[i]=i&1? (i&2? -exp[i]:exp[i]):0;\n\t\t\tcos[i]=i&1? 0:(i&2? -exp[i]:exp[i]);\n\t\t}\n\t}//\u521d\u59cb\u5316\u5feb\u8bfb\uff0ce^x,sin(x),cos(x)\n\ttemplate<typename type>\n\tinline READ& operator >>(register type& num){\n\t\twhile('0'>c||c>'9') c=getchar();\n\t\tfor(num=0;'0'<=c&&c<='9';c=getchar())\n\t\t\tnum=num*10+(c-'0');\n\t\treturn *this;\n\t}//\u6574\u6570\u7684\u5feb\u8bfb\n\tinline READ& operator >>(register double& num){\n\t\tfor(w=1;'0'>c||c>'9';c=getchar())\n\t\t\tw=c=='-'? -1:1;\n\t\tfor(num=0;'0'<=c&&c<='9';c=getchar())\n\t\t\tnum=num*10+(c-'0');\n\t\tif(c=='.'){\n\t\t\tc=getchar();\n\t\t\tfor(register double i=0.1;'0'<=c&&c<='9';)\n\t\t\t\tnum+=i*(c-'0'),c=getchar(),i*=0.1;\n\t\t}\n\t\treturn num*=w,*this;\n\t}//\u6d6e\u70b9\u6570\u7684\u5feb\u8bfb\n\tinline READ& operator >>(function &func){\n\t\tregister double a,b,c;\n\t\tif(*this>>type>>a>>b,type==3){\n\t\t\tmemset(func.eax,0,sizeof(func.eax));\n\t\t\tfunc.eax[0]=b,func.eax[1]=a;//f(x)=ax+b\n\t\t}else if(type==2){\n\t\t\tb=exp(b);//f(x)=e^{ax+b}=e^{ax}*e^b\n\t\t\tfor(register byte j=0;j<14;++j,b*=a)\n\t\t\t\tfunc.eax[j]=exp.eax[j]*b;\n\t\t}else if(type==1){\n\t\t\tc=sin(b),b=cos(b);//f(x)=sin(ax+b)\n\t\t\tfor(register byte j=0;j<14;++j,b*=a,c*=a)\n\t\t\t\tfunc.eax[j]=sin.eax[j]*b+cos.eax[j]*c;\n\t\t}\n\t\treturn *this;\n\t}//\u9488\u5bf9\u9898\u76ee\u8981\u6c42\u51fd\u6570\u7684\u5feb\u8bfb\n};\n```\n\n\u6838\u5fc3\u7684\u90e8\u5206\u5199\u5b8c\u4e4b\u540e\uff0c\u5269\u4e0b\u7684\u4fbf\u662f\u7167\u642c LCT \u4ee3\u7801\u4e86\u3002  \n\u8fd9\u91cc\u7ed9\u51fa\u81ea\u5df1\u7684 LCT \u5b9e\u73b0\uff08\u5f88\u5feb\uff0c\u4f46\u662f\u7801\u91cf\u5927\uff09\u3002\n```cpp\ntypedef unsigned int word;\ntypedef unsigned char byte;\nstruct splay{\n\tsplay *fa,*l,*r;\n\tfunction sum;\n\tbyte tag;//\u7ffb\u8f6c\u6807\u8bb0\n\tinline splay(){fa=l=r=0;}\n\tinline void pushdown(){\n\t\tif(tag){\n\t\t\tif(l) l->tag^=1;\n\t\t\tif(r) r->tag^=1;\n\t\t\tregister splay *swap=l;\n\t\t\tl=r,r=swap,tag=0;\n\t\t}\n\t}//\u4e0b\u4f20\u7ffb\u8f6c\u6807\u8bb0\n\tinline void linepush(){\n\t\tif(fa) fa->linepush();\n\t\tpushdown();\n\t}//\u4e0b\u4f20\u4e00\u6761\u94fe\u7684\u7ffb\u8f6c\u6807\u8bb0\n}p[100001];\n#define cycle(root,l,r) do{\t\t\\\n\tregister splay *rt=root;\t\\\n\tregister splay *l=rt->l;\t\\\n\tregister splay *l##r=l->r;\t\\\n\tl->fa=rt->fa,(root)=l;\t\t\\\n\tl->r=rt,rt->fa=l;\t\t\t\\\n\trt->sum-=l->sum;\t\t\t\\\n\tl->sum+=rt->sum;\t\t\t\\\n\tif(rt->l=l##r){\t\t\t\t\\\n\t\trt->sum+=l##r->sum;\t\t\\\n\t\tl##r->fa=rt;}\t\t\t\\\n}while(0)//\u65cb\u8f6c\n#define lcycle(root) cycle(root,l,r)\n#define rcycle(root) cycle(root,r,l)\n#define lsp(root)\t\t\t\t\\\n\tif(rff->l==root->fa){\t\t\\\n\t\tif(root->fa->l==root) \t\\\n\t\t\tlcycle(rff);\t\t\\\n\t\telse rcycle(rff->l);\t\\\n\t\tlcycle(rff);\t\t\t\\\n\t}else{\t\t\t\t\t\t\\\n\t\tif(root->fa->r==root)\t\\\n\t\t\trcycle(rff);\t\t\\\n\t\telse lcycle(rff->r);\t\\\n\t\trcycle(rff);\t\t\t\\\n\t}//\u4e09\u4e2a\u7ed3\u70b9\u7684\u94fe\u7684\u60c5\u51b5\n#define pos(p) ((p)->fa->l==(p)? (p)->fa->l:(p)->fa->r)\ninline void Splay(register splay* root){\n\troot->linepush();\n\twhile(root->fa)\n\t\tif(root->fa->fa)//\u4e09\u4e2a\u7ed3\u70b9\u7684\u94fe\u7684\u60c5\u51b5\n\t\t\tif(root->fa->fa->fa){//\u94fe\u9876\u662f\u5426\u4e3a\u6839\n\t\t\t\tregister splay*&rff=pos(root->fa->fa);\n\t\t\t\tlsp(root);\n\t\t\t}else{\n\t\t\t\tregister splay* rff=root->fa->fa;\n\t\t\t\tlsp(root);\n\t\t\t}\n\t\telse if(root->fa->l==root){//\u4e24\u4e2a\u7ed3\u70b9\u66b4\u529b\u65cb\u8f6c\n\t\t\troot=root->fa;lcycle(root);\n\t\t}else{root=root->fa;rcycle(root);}\n}\nword fa[100001];\ninline void makeline(word id){//\u6253\u901a\u5230\u6839\u7684\u5b9e\u94fe\n\tregister splay *root=p+id,*top;\n\tSplay(root),root->pushdown();\n\tif(top=root->r){\n\t\twhile(top->pushdown(),top->l) top=top->l;\n\t\tfa[top-p]=root-p,root->r->fa=0;\n\t\troot->sum-=root->r->sum,root->r=0;\n\t}//\u65ad\u6389\u94fe\u5c3e\n\tfor(top=root;top->l;top=top->l,top->pushdown());\n\t//\u6bcf\u6b21\u627e\u5230\u94fe\u9876\n\twhile(fa[top-p]){\n\t\tregister splay* next=p+fa[top-p];\n\t\tSplay(next),next->pushdown();\n\t\tif(top=next->r){\n\t\t\twhile(top->pushdown(),top->l) top=top->l;\n\t\t\tfa[top-p]=next-p,next->r->fa=0,next->sum-=next->r->sum;\n\t\t}//\u5411\u4e0a\u8df3\u4e00\u6761\u865a\u8fb9\n\t\tnext->r=root,root->fa=next,next->sum+=root->sum;\n\t\tfor(top=root=next;top->l;top=top->l,top->pushdown());\n\t}\n}\n#define makeroot(id) (makeline(id),Splay(p+id),p[id].tag^=1,fa[id]=0)\n```\n\u4e24\u4e2a\u7ec4\u5408\u8d77\u6765\uff0c\u4fbf\u5f97\u5230\u4e86\u6700\u7ec8\u4ee3\u7801\uff0c\u5f00\u59cb\u5361\u5e38\n- \u5feb\u8bfb\uff08\u5df2\u7ecf\u7ed9\u4e86\uff09\n- `register` \u548c `inline` \uff08\u5df2\u7ecf\u52a0\u4e0a\uff09\n- LCT \u4e0d\u5b58\u50a8\u5355\u70b9\u7684\u51fd\u6570 \uff08\u5df2\u7ecf\u5b9e\u73b0\uff09\n- \u4e0d\u4f7f\u7528 `pushup()` \u66f4\u65b0\u7ed3\u70b9\u3002\n\n\u6700\u7ec8\u4ee3\u7801\uff08\u5f00 O2 6.04s\uff0c14.75MB\uff09\n```cpp\n// this code is made by wangrx\n// 2021-02-21 \n#include<stdio.h>\n#include<string.h>\ntypedef unsigned int word;\ntypedef unsigned char byte;\nstruct function{//\u591a\u9879\u5f0f\u51fd\u6570\n\tdouble eax[14];\n\tinline double& operator[](register byte id){\n\t\treturn eax[id];}//\u6c42\u9879\n\tinline void operator =(const function &func){\n\t\tmemcpy(eax,func.eax,sizeof(eax));}//\u590d\u5236\n\tinline void operator +=(const function &func){\n\t\tfor(register byte i=0;i<14;++i)\n\t\t\teax[i]+=func.eax[i];\n\t}//\u76f8\u52a0\n\tinline void operator -=(const function &func){\n\t\tfor(register byte i=0;i<14;++i)\n\t\t\teax[i]-=func.eax[i];\n\t}//\u76f8\u51cf\n\tinline double operator()(register double x){\n\t\tregister double num=1,ans=0;\n\t\tfor(register byte i=0;i<14;num=num*x,++i)\n\t\t\tans+=num*eax[i];\n\t\treturn ans;\n\t}//\u6c42\u503c\n}exp,sin,cos;\nstruct READ{//\u5feb\u8bfb\u5feb\u5199\n\tchar c,w,type;\n\tinline READ(){\n\t\tc=getchar(),exp[0]=1;\n\t\tfor(register byte i=1;i<14;++i)\n\t\t\texp[i]=exp[i-1]*i;\n\t\tfor(register byte i=0;i<14;++i){\n\t\t\texp[i]=(1.0)/exp[i];\n\t\t\tsin[i]=i&1? (i&2? -exp[i]:exp[i]):0;\n\t\t\tcos[i]=i&1? 0:(i&2? -exp[i]:exp[i]);\n\t\t}\n\t}//\u521d\u59cb\u5316\u5feb\u8bfb\uff0ce^x,sin(x),cos(x)\n\ttemplate<typename type>\n\tinline READ& operator >>(register type& num){\n\t\twhile('0'>c||c>'9') c=getchar();\n\t\tfor(num=0;'0'<=c&&c<='9';c=getchar())\n\t\t\tnum=num*10+(c-'0');\n\t\treturn *this;\n\t}//\u6574\u6570\u7684\u5feb\u8bfb\n\tinline READ& operator >>(register double& num){\n\t\tfor(w=1;'0'>c||c>'9';c=getchar())\n\t\t\tw=c=='-'? -1:1;\n\t\tfor(num=0;'0'<=c&&c<='9';c=getchar())\n\t\t\tnum=num*10+(c-'0');\n\t\tif(c=='.'){\n\t\t\tc=getchar();\n\t\t\tfor(register double i=0.1;'0'<=c&&c<='9';)\n\t\t\t\tnum+=i*(c-'0'),c=getchar(),i*=0.1;\n\t\t}\n\t\treturn num*=w,*this;\n\t}//\u6d6e\u70b9\u6570\u7684\u5feb\u8bfb\n\tinline READ& operator >>(function &func){\n\t\tregister double a,b,c;\n\t\tif(*this>>type>>a>>b,type==3){\n\t\t\tmemset(func.eax,0,sizeof(func.eax));\n\t\t\tfunc.eax[0]=b,func.eax[1]=a;//f(x)=ax+b\n\t\t}else if(type==2){\n\t\t\tb=exp(b);//f(x)=e^{ax+b}=e^{ax}*e^b\n\t\t\tfor(register byte j=0;j<14;++j,b*=a)\n\t\t\t\tfunc.eax[j]=exp.eax[j]*b;\n\t\t}else if(type==1){\n\t\t\tc=sin(b),b=cos(b);//f(x)=sin(ax+b)\n\t\t\tfor(register byte j=0;j<14;++j,b*=a,c*=a)\n\t\t\t\tfunc.eax[j]=sin.eax[j]*b+cos.eax[j]*c;\n\t\t}\n\t\treturn *this;\n\t}//\u9488\u5bf9\u9898\u76ee\u8981\u6c42\u51fd\u6570\u7684\u5feb\u8bfb\n};\nstruct splay{\n\tsplay *fa,*l,*r;\n\tfunction sum;\n\tbyte tag;//\u7ffb\u8f6c\u6807\u8bb0\n\tinline splay(){fa=l=r=0;}\n\tinline void pushdown(){\n\t\tif(tag){\n\t\t\tif(l) l->tag^=1;\n\t\t\tif(r) r->tag^=1;\n\t\t\tregister splay *swap=l;\n\t\t\tl=r,r=swap,tag=0;\n\t\t}\n\t}//\u4e0b\u4f20\u7ffb\u8f6c\u6807\u8bb0\n\tinline void linepush(){\n\t\tif(fa) fa->linepush();\n\t\tpushdown();\n\t}//\u4e0b\u4f20\u4e00\u6761\u94fe\u7684\u7ffb\u8f6c\u6807\u8bb0\n}p[100001];\n#define cycle(root,l,r) do{\t\t\\\n\tregister splay *rt=root;\t\\\n\tregister splay *l=rt->l;\t\\\n\tregister splay *l##r=l->r;\t\\\n\tl->fa=rt->fa,(root)=l;\t\t\\\n\tl->r=rt,rt->fa=l;\t\t\t\\\n\trt->sum-=l->sum;\t\t\t\\\n\tl->sum+=rt->sum;\t\t\t\\\n\tif(rt->l=l##r){\t\t\t\t\\\n\t\trt->sum+=l##r->sum;\t\t\\\n\t\tl##r->fa=rt;}\t\t\t\\\n}while(0)//\u65cb\u8f6c\n#define lcycle(root) cycle(root,l,r)\n#define rcycle(root) cycle(root,r,l)\n#define lsp(root)\t\t\t\t\\\n\tif(rff->l==root->fa){\t\t\\\n\t\tif(root->fa->l==root) \t\\\n\t\t\tlcycle(rff);\t\t\\\n\t\telse rcycle(rff->l);\t\\\n\t\tlcycle(rff);\t\t\t\\\n\t}else{\t\t\t\t\t\t\\\n\t\tif(root->fa->r==root)\t\\\n\t\t\trcycle(rff);\t\t\\\n\t\telse lcycle(rff->r);\t\\\n\t\trcycle(rff);\t\t\t\\\n\t}//\u4e09\u4e2a\u7ed3\u70b9\u7684\u94fe\u7684\u60c5\u51b5\n#define pos(p) ((p)->fa->l==(p)? (p)->fa->l:(p)->fa->r)\ninline void Splay(register splay* root){\n\troot->linepush();\n\twhile(root->fa)\n\t\tif(root->fa->fa)//\u4e09\u4e2a\u7ed3\u70b9\u7684\u94fe\u7684\u60c5\u51b5\n\t\t\tif(root->fa->fa->fa){//\u94fe\u9876\u662f\u5426\u4e3a\u6839\n\t\t\t\tregister splay*&rff=pos(root->fa->fa);\n\t\t\t\tlsp(root);\n\t\t\t}else{\n\t\t\t\tregister splay* rff=root->fa->fa;\n\t\t\t\tlsp(root);\n\t\t\t}\n\t\telse if(root->fa->l==root){//\u4e24\u4e2a\u7ed3\u70b9\u66b4\u529b\u65cb\u8f6c\n\t\t\troot=root->fa;lcycle(root);\n\t\t}else{root=root->fa;rcycle(root);}\n}\nword fa[100001];\ninline void makeline(word id){//\u6253\u901a\u5230\u6839\u7684\u5b9e\u94fe\n\tregister splay *root=p+id,*top;\n\tSplay(root),root->pushdown();\n\tif(top=root->r){\n\t\twhile(top->pushdown(),top->l) top=top->l;\n\t\tfa[top-p]=root-p,root->r->fa=0;\n\t\troot->sum-=root->r->sum,root->r=0;\n\t}//\u65ad\u6389\u94fe\u5c3e\n\tfor(top=root;top->l;top=top->l,top->pushdown());\n\t//\u6bcf\u6b21\u627e\u5230\u94fe\u9876\n\twhile(fa[top-p]){\n\t\tregister splay* next=p+fa[top-p];\n\t\tSplay(next),next->pushdown();\n\t\tif(top=next->r){\n\t\t\twhile(top->pushdown(),top->l) top=top->l;\n\t\t\tfa[top-p]=next-p,next->r->fa=0,next->sum-=next->r->sum;\n\t\t}//\u5411\u4e0a\u8df3\u4e00\u6761\u865a\u8fb9\n\t\tnext->r=root,root->fa=next,next->sum+=root->sum;\n\t\tfor(top=root=next;top->l;top=top->l,top->pushdown());\n\t}\n}\n#define makeroot(id) (makeline(id),Splay(p+id),p[id].tag^=1,fa[id]=0)\nint main(){\n\tregister READ cin;\n\tword n,m;\n\tcin>>n>>m>>cin.type;\n\tfor(register word i=1;i<=n;++i)\n\t\tcin>>p[i].sum;\n\tfor(register word u,v;m;--m){\n\t\twhile('a'>cin.c||cin.c>'z') cin.c=getchar();\n\t\tif(cin.c=='a'){//appear\n\t\t\tcin>>u>>v,++u,++v;\n\t\t\tmakeroot(u),fa[u]=v;\n\t\t}else if(cin.c=='d'){//disappear\n\t\t\tcin>>u>>v,++u,++v;\n\t\t\tmakeroot(u),Splay(p+v);\n\t\t\tif(p[v].pushdown(),p[v].l==p+u)\n\t\t\t\tp[u].fa=p[v].l=0,p[v].sum-=p[u].sum;\n\t\t\tfa[v]=0;\n\t\t}else if(cin.c=='m'){//magic\n\t\t\tcin>>u,++u,Splay(p+u);\n\t\t\tcin>>p[u].sum;\n\t\t\tif(p[u].l) p[u].sum+=p[u].l->sum;\n\t\t\tif(p[u].r) p[u].sum+=p[u].r->sum;\n\t\t}\n\t\telse if(cin.c=='t'){//travel\n\t\t\tdouble x;\n\t\t\tcin>>u>>v>>x,++u,++v;\n\t\t\tif(u==v){\n\t\t\t\tfunction func=p[u].sum;\n\t\t\t\tif(p[u].l) func-=p[u].l->sum;\n\t\t\t\tif(p[u].r) func-=p[u].r->sum;\n\t\t\t\tprintf(\"%0.8e\\n\",func(x));\n\t\t\t}else{\n\t\t\t\tmakeroot(u),makeroot(v);\n\t\t\t\tif(Splay(p+u),p[u].pushdown(),p[u].l==0)\n\t\t\t\t\tputs(\"unreachable\");\n\t\t\t\telse printf(\"%0.8e\\n\",p[u].sum(x));\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1613886982,
        "uid": 104726,
        "name": "wangrx",
        "ccfLevel": 7,
        "title": "P4546 [THUWC2017]\u5728\u7f8e\u5999\u7684\u6570\u5b66\u738b\u56fd\u4e2d\u7545\u6e38 \u9898\u89e3"
    },
    {
        "content": "### \u9898\u610f\n\n\u9898\u610f\u5947\u5947\u602a\u602a\uff0c\u8fd9\u91cc\u5c31\u4e0d\u5199\u4e86\u3002\n\n$\\texttt{Data Range:}1\\leq n\\leq 10^5,1\\leq m\\leq 2\\times 10^5$\n\n### \u9898\u89e3\n\n[\u4e0d\u4e00\u5b9a\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/Karry5307/p/13067069.html)\n\n~~\u4e3a\u4ec0\u4e48\u4f60\u4eec\u90fd\u662f\u5361\u5728\u6570\u5b66\u65b9\u9762\uff0c\u96be\u9053\u53ea\u6709\u6211\u5361\u5728\u4e0d\u6653\u5f97\u600e\u4e48\u7ef4\u62a4\u4e0a\u9762\u5417~~\n\n\u770b\u5230\u4e0b\u9762\u7684\u9898\u89e3\u901a\u7bc7\u7684\u6cf0\u52d2\u5c55\u5f00\uff0c\u6211\u51b3\u5b9a\u5199\u4e00\u7bc7\u4ece $\\texttt{EGF}$ \u4e0a\u8bf4\u660e\u7684\u9898\u89e3\uff0c\u800c\u4e14\u516c\u5f0f\u4e5f\u6bd4\u4e0b\u9762\u7684\u6e05\u6670\u7684\u591a\u3002\n\n\u9996\u5148\u6211\u4eec\u505a\u4e2a\u70ed\u8eab\uff0c\u5148\u6765\u770b $e^x,\\sin x,\\cos x$ \u5bf9\u5e94\u7684 $\\texttt{EGF}$\uff1a\n\n$$e^x=\\sum\\limits_{i=0}^{\\infty}\\frac{x^i}{i!}$$\n\n$$\\sin x=\\sum\\limits_{i=0}^{\\infty}\\frac{(-1)^ix^{2i+1}}{(2i+1)!}$$\n\n$$\\cos x=\\sum\\limits_{i=0}^{\\infty}\\frac{(-1)^ix^{2i}}{(2i)!}$$\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u7528 $ax$ \u66ff\u6362 $x$ \u5f97\u5230\uff1a\n\n$$e^{ax}=\\sum\\limits_{i=0}^{\\infty}\\frac{a^ix^i}{i!}$$\n\n$$\\sin (ax)=\\sum\\limits_{i=0}^{\\infty}\\frac{(-1)^ia^{2i+1}x^{2i+1}}{(2i+1)!}$$\n\n$$\\cos (ax)=\\sum\\limits_{i=0}^{\\infty}\\frac{(-1)^ia^{2i}x^{2i}}{(2i)!}$$\n\n\u5982\u679c\u5199\u7684\u66f4\u76f4\u89c2\u4e00\u70b9\u5462\uff1f\n\n$$e^{ax}=1+ax+\\frac{a^2x^2}{2!}+\\frac{a^3x^3}{3!}+\\cdots$$\n\n$$\\sin(ax)=ax-\\frac{a^3x^3}{3!}+\\frac{a^5x^5}{5!}-\\frac{a^7x^7}{7!}+\\cdots$$\n\n$$\\cos(ax)=1-\\frac{a^2x^2}{2!}+\\frac{a^4x^4}{4!}-\\frac{a^6x^6}{6!}+\\cdots$$\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u6b63\u9898\u4e86\u3002\n\n\u8003\u8651\u5230 $e^{ax+b}=e^{ax}\\cdot e^{b}$\uff0c\u800c $b$ \u662f\u7ed9\u5b9a\u5e38\u6570\uff0c\u6240\u4ee5\n\n\n$$e^{ax+b}=e^b(1+ax+\\frac{a^2x^2}{2!}+\\frac{a^3x^3}{3!}+\\cdots)=\\sum\\limits_{i=0}^{\\infty}\\frac{e^ba^ix^i}{i!}$$\n\n\u7136\u540e\u6839\u636e\u5e38\u89c1\u7684\u4e09\u89d2\u6052\u7b49\u53d8\u6362\u516c\u5f0f\uff0c\u6211\u4eec\u6709\n\n$$\\sin(ax+b)=\\sin(ax)\\cos b+\\cos(ax)\\sin b$$\n\n\u800c $b$ \u662f\u7ed9\u5b9a\u7684\u5e38\u6570\uff0c\u6240\u4ee5\n\n$$\\sin(ax+b)=\\cos b(ax-\\frac{a^3x^3}{3!}+\\frac{a^5x^5}{5!}-\\frac{a^7x^7}{7!}+\\cdots)+\\sin b(1-\\frac{a^2x^2}{2!}+\\frac{a^4x^4}{4!}-\\frac{a^6x^6}{6!}+\\cdots)$$\n\n$$\\sin(ax+b)=\\sum\\limits_{i=0}^{\\infty}\\frac{\\cos b(-1)^ia^{2i+1}x^{2i+1}}{(2i+1)!}+\\frac{\\sin b(-1)^ia^{2i}x^{2i}}{(2i)!}$$\n\n\u7136\u540e\u7ef4\u62a4\u4e00\u4e0b\u8fd9\u4e9b $\\texttt{EGF}$ \u5c31\u53ef\u4ee5\u76f4\u63a5\u505a\u4e86\u3002\u6211\u7684\u4ee3\u7801\u7ef4\u62a4\u5230 $15$ \u9879\uff0c\u6240\u4ee5\u6bd4\u8f83\u6162\uff0c\u4f46\u8fd8\u662f\u80fd\u8fc7\u3002\uff08\u81f3\u5c11\u4e0d\u7528\u50cf\u9c30\u4e00\u6837\u9884\u5904\u7406\u7ec4\u5408\u6570\uff09\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef int ll;\ntypedef long long int li;\ntypedef long double db;\nconst ll MAXN=2e5+51;\nstruct Polynomial{\n    db cof[16];\n    Polynomial()\n    {\n        memset(cof,0,sizeof(cof));\n    }\n    inline Polynomial operator +(const Polynomial &rhs)const\n    {\n        Polynomial res;\n        for(register int i=0;i<16;i++)\n        {\n            res.cof[i]=cof[i]+rhs.cof[i];\n        }\n        return res;\n    }\n    inline db eval(db x)\n    {\n        db res=0,cur=1;\n        for(register int i=0;i<16;i++)\n        {\n            res+=cof[i]*cur,cur*=x;\n        }\n        return res;\n    }\n    inline void op()\n    {\n        for(register int i=0;i<16;i++)\n        {\n            printf(\"%.8Lf\\n\",cof[i]);\n        }\n    }\n};\nll n,m,x,y,typ;\ndb u,v;\nstring type,op;\ninline ll read()\n{\n    register ll num=0,neg=1;\n    register char ch=getchar();\n    while(!isdigit(ch)&&ch!='-')\n    {\n        ch=getchar();\n    }\n    if(ch=='-')\n    {\n        neg=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch))\n    {\n        num=(num<<3)+(num<<1)+(ch-'0');\n        ch=getchar();\n    }\n    return num*neg;\n}\nnamespace LCT{\n    struct Node{\n        ll fa,rv,sz;\n        Polynomial poly,sum;\n        ll ch[2];\n    };\n    struct LinkCutTree{\n        Node nd[MAXN];\n        ll st[MAXN];\n        #define ls nd[x].ch[0]\n        #define rs nd[x].ch[1]\n        inline bool nroot(ll x)\n        {\n            return nd[nd[x].fa].ch[0]==x||nd[nd[x].fa].ch[1]==x;\n        }\n        inline void update(ll x)\n        {\n            nd[x].sum=nd[ls].sum+nd[rs].sum+nd[x].poly;\n        }\n        inline void reverse(ll x)\n        {\n            swap(ls,rs),nd[x].rv^=1;\n        }\n        inline void spread(ll x)\n        {\n            if(nd[x].rv)\n            {\n                ls?reverse(ls):(void)(1),rs?reverse(rs):(void)(1);\n                nd[x].rv=0;\n            }\n        }\n        inline void rotate(ll x)\n        {\n            ll fa=nd[x].fa,gfa=nd[fa].fa;\n            ll dir=nd[fa].ch[1]==x,son=nd[x].ch[!dir];\n            if(nroot(fa))\n            {\n                nd[gfa].ch[nd[gfa].ch[1]==fa]=x;\n            }\n            nd[x].ch[!dir]=fa,nd[fa].ch[dir]=son;\n            if(son)\n            {\n                nd[son].fa=fa;\n            }\n            nd[fa].fa=x,nd[x].fa=gfa,update(fa);\n        }\n        inline void splay(ll x)\n        {\n            ll fa=x,gfa,cur=0;\n            st[++cur]=fa;\n            while(nroot(fa))\n            {\n                st[++cur]=fa=nd[fa].fa;\n            }\n            while(cur)\n            {\n                spread(st[cur--]);\n            }\n            while(nroot(x))\n            {\n                fa=nd[x].fa,gfa=nd[fa].fa;\n                if(nroot(fa))\n                {\n                    rotate((nd[fa].ch[0]==x)^(nd[gfa].ch[0]==fa)?x:fa);\n                }\n                rotate(x);\n            }\n            update(x);\n        }\n        inline void access(ll x)\n        {\n            for(register int i=0;x;x=nd[i=x].fa)\n            {\n                splay(x),rs=i,update(x);\n            }\n        }\n        inline void makeRoot(ll x)\n        {\n            access(x),splay(x),reverse(x);\n        }\n        inline ll findRoot(ll x)\n        {\n            access(x),splay(x);\n            while(ls)\n            {\n                spread(x),x=ls;\n            }\n            return x;\n        }\n        inline void split(ll x,ll y)\n        {\n            makeRoot(x),access(y),splay(y);\n        }\n        inline void link(ll x,ll y)\n        {\n            makeRoot(x);\n            if(findRoot(y)!=x)\n            {\n                nd[x].fa=y;\n            }\n        }\n        inline void cut(ll x,ll y)\n        {\n            makeRoot(x);\n            if(findRoot(y)==x&&nd[x].fa==y&&!rs)\n            {\n                nd[x].fa=nd[y].ch[0]=0,update(y);\n            }\n        }\n        #undef ls\n        #undef rs\n    };\n}\nLCT::LinkCutTree lct;\ninline Polynomial sin(db u,db v)\n{\n    Polynomial res;\n    db sinv=sin(v),cosv=cos(v),pw=1,fact=1;\n    for(register int i=0;i<16;i++)\n    {\n        res.cof[i]=(i&2?-1:1)*(i&1?cosv:sinv)*pw*fact,pw*=u,fact/=(1.0*(i+1));\n    }\n    return res;\n}\ninline Polynomial exp(db u,db v)\n{\n    Polynomial res;\n    db expv=exp(v),pw=1,fact=1;\n    for(register int i=0;i<16;i++)\n    {\n        res.cof[i]=expv*pw*fact,pw*=u,fact/=1.0*(i+1);\n    }\n    return res;\n}\ninline Polynomial linear(db u,db v)\n{\n    Polynomial res;\n    res.cof[0]=v,res.cof[1]=u;\n    return res;\n}\nint main()\n{\n    n=read(),m=read(),cin>>type;\n    for(register int i=1;i<=n;i++)\n    {\n        typ=read(),scanf(\"%Lf%Lf\",&u,&v);\n        lct.nd[i].poly=typ==1?sin(u,v):typ==2?exp(u,v):linear(u,v);\n    }\n    for(register int i=0;i<m;i++)\n    {\n        cin>>op;\n        if(op==\"appear\")\n        {\n            x=read()+1,y=read()+1,lct.link(x,y);\n        }\n        if(op==\"disappear\")\n        {\n            x=read()+1,y=read()+1,lct.cut(x,y);\n        }\n        if(op==\"magic\")\n        {\n            x=read()+1,typ=read(),scanf(\"%Lf%Lf\",&u,&v);\n            lct.splay(x);\n            lct.nd[x].poly=typ==1?sin(u,v):typ==2?exp(u,v):linear(u,v);\n        }\n        if(op==\"travel\")\n        {\n            x=read()+1,y=read()+1,scanf(\"%Lf\",&u);\n            if(lct.findRoot(x)!=lct.findRoot(y))\n            {\n                puts(\"unreachable\");\n                continue;\n            }\n            lct.split(x,y),printf(\"%.12Lf\\n\",lct.nd[y].sum.eval(u));\n        }\n    }\n}\n```\n",
        "postTime": 1591607474,
        "uid": 60990,
        "name": "Karry5307",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4546 \u3010[THUWC2017]\u5728\u7f8e\u5999\u7684\u6570\u5b66\u738b\u56fd\u4e2d\u7545\u6e38\u3011"
    },
    {
        "content": "\u8dd1\u4e86\u4e2a\u6700\u4f18\u89e3\uff08\u9a6c\u4e0a\u5c31\u6ca1\u4e86\uff09\n\n\u6bcf\u4e2a\u51fd\u6570\u6cf0\u52d2\u5c55\u5f00\uff0c\u9636\u4e58\u9884\u5904\u7406\n\n\u540e\u9762\u7684\u9879\u5bf9\u7b54\u6848\u7684\u5f71\u54cd\u5f88\u5c0f\u53ef\u4ee5\u5ffd\u7565\n\n$LCT$\u677f\u5b50\u7ef4\u62a4\u8def\u5f84\u548c\n\n[\u6709\u5173\u5bfc\u6570](https://blog.csdn.net/qq_35649707/article/details/74611460)\n\n\u4ee5\u540e\u4ea4\u9898\u89e3\u4e0d\u6562\u538b\u884c\u4e86\n\n```\n#include<bits/stdc++.h>\n#define il inline\nusing namespace std;\nconst int N=1e5+5,L=11;\nint n,m,T,stk[N],ch[N][2],fa[N],w[N],rev[N];\ndouble a[N][L],sum[N][L];\nlong long fc[L];\nchar s[20];\nil void psu(int x) {\n    for(int i=0; i<L; ++i) sum[x][i]=sum[ch[x][0]][i]+sum[ch[x][1]][i]+a[x][i];\n}\nil bool isr(int x) {\n    return ch[fa[x]][0]!=x&&ch[fa[x]][1]!=x;\n}\nil void psd(int x) {\n    if(rev[x]) swap(ch[x][0],ch[x][1]),rev[ch[x][0]]^=1,rev[ch[x][1]]^=1,rev[x]^=1;\n}\nil void rtt(int x) {\n    int y=fa[x],z=fa[y],d=(ch[y][1]==x);\n    if(!isr(y)) ch[z][ch[z][1]==y]=x;\n    fa[x]=z,fa[y]=x;\n    fa[ch[x][d^1]]=y,ch[y][d]=ch[x][d^1],ch[x][d^1]=y;\n    psu(y),psu(x);\n}\nil void spl(int x) {\n    stk[T=1]=x;\n    for(int i=x; !isr(i); i=fa[i]) stk[++T]=fa[i];\n    for(int i=T; i>=1; --i) psd(stk[i]);\n    for(int y=fa[x],z=fa[y]; !isr(x); y=fa[x],z=fa[y]) {\n        if(!isr(y)) ((ch[z][1]==y)^(ch[y][1]==x))?rtt(x):rtt(y);\n        rtt(x);\n    }\n}\nil void acs(int x) {\n    int t=0;\n    while(x) {\n        spl(x),ch[x][1]=t,psu(x),t=x,x=fa[x];\n    }\n}\nil void mkr(int x) {\n    acs(x),spl(x),rev[x]^=1;\n}\nil int fdr(int x) {\n    acs(x);\n    spl(x);\n    psd(x);\n    while(ch[x][0]) psd(x=ch[x][0]);\n    return x;\n}\nil void lk(int x,int y) {\n    mkr(x);\n    if(fdr(y)!=x) fa[x]=y;\n}\nil void cut(int x,int y) {\n    mkr(x);\n    if(fdr(y)==x&&fa[x]==y&&ch[y][0]==x&&ch[x][1]==0) fa[x]=ch[y][0]=0;\n    psu(y);\n}\nil double qry(int x,int y,double v) {\n    mkr(x),acs(y),spl(y);\n    double t=1,ss=0;\n    for(int i=0; i<L; ++i) ss+=t*sum[y][i],t*=v;\n    return ss;\n}\nil void trs(int op,double *a,double A,double B) {\n    if(op==1) {\n        double S=sin(B),C=cos(B),t=1;\n        int f;\n        for(int i=0; i<L; ++i) f=((i>>1)&1)?-1:1,a[i]=f*t*(i&1?C:S)/fc[i],t*=A;\n    } else if(op==2) {\n        double eb=exp(B),t=1;\n        for(int i=0; i<L; ++i) a[i]=t*eb/fc[i],t*=A;\n    } else {\n        a[0]=B,a[1]=A;\n        for(int i=2; i<L; ++i) a[i]=0;\n    }\n}\nint main() {\n    fc[0]=1;\n    for(int i=1; i<L; ++i) fc[i]=fc[i-1]*i;\n    scanf(\"%d%d%s\",&n,&m,s);\n    double A,B,v;\n    int x,y;\n    for(int i=1,op; i<=n; ++i) scanf(\"%d\",&op),scanf(\"%lf%lf\",&A,&B),trs(op,a[i],A,B);\n    while(m--) {\n        scanf(\"%s%d%d\",s,&x,&y);\n        ++x,++y;\n        if(s[0]=='a') lk(x,y);\n        else if(s[0]=='d') cut(x,y);\n        if(s[0]=='m') scanf(\"%lf%lf\",&A,&B),mkr(x),trs(--y,a[x],A,B),psu(x);\n        if(s[0]=='t') scanf(\"%lf\",&v),fdr(x)!=fdr(y)?puts(\"unreachable\"):printf(\"%.9lf\\n\",qry(x,y,v));\n    }\n    return 0;\n}\n\n```",
        "postTime": 1543500932,
        "uid": 9290,
        "name": "quantum11",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4546 \u3010[THUWC2017]\u5728\u7f8e\u5999\u7684\u6570\u5b66\u738b\u56fd\u4e2d\u7545\u6e38\u3011"
    },
    {
        "content": "**\u524d\u7f6e\u77e5\u8bc6**\uff1a\u590d\u5408\u51fd\u6570\u6c42\u5bfc\uff0cLCT\uff0c\u6cf0\u52d2\u516c\u5f0f\n\n\u4ec0\u4e48\u4f60\u4e0d\u4f1a\u6cf0\u52d2\u516c\u5f0f\uff1f~~\u6211\u4e5f\u4e0d\u4f1a~~\u9898\u9762\u5e95\u4e0b\u90fd\u544a\u8bc9\u4f60\u4e86\uff0c\u6240\u4ee5\u5c31\u4e0d\u56f0\u96be\u4e86\uff0c\u76f4\u63a5\u5957\u516c\u5f0f\u5c31\u597d\u3002\n\n\u9996\u5148\u770b\u9898\u76ee\u8981\u6c42\u7ef4\u62a4\u4ec0\u4e48\uff1a\n\n1. \u8fde\u8fb9\uff0c\u5220\u8fb9\uff0c\u4fdd\u8bc1\u662f\u4e00\u4e2a\u68ee\u6797\u3002\n2. \u4fee\u6539\u70b9\u7684\u51fd\u6570\u3002\n3. \u5bf9\u4e00\u6761\u6811\u4e0a\u8def\u5f84\u7684\u51fd\u6570\u503c\u6c42\u548c\u3002\uff08$x$ \u503c\u76f8\u540c\uff09\n\n\u901a\u8fc7\u8fd9\u4e09\u70b9\u53ef\u4ee5\u770b\u51fa\u8fd9\u662f\u4e00\u9053\u52a8\u6001\u6811\u95ee\u9898\uff0c\u53ef\u4ee5\u7528 LCT \u7ef4\u62a4\u3002\n\n\u4f46\u662f\u95ee\u9898\u662f\uff0c\u4e09\u79cd\u51fd\u6570\u5206\u522b\u662f\u6b63\u5f26\u51fd\u6570\u3001\u6307\u6570\u51fd\u6570\u548c\u4e00\u6b21\u51fd\u6570\uff0c\u4e0d\u80fd\u76f4\u63a5\u52a0\u51cf\u5408\u5e76\uff0c\u600e\u4e48\u529e\uff1f\n\n\u8fd9\u65f6\u5019\u5c31\u5230\u4e86\u8003\u9a8c~~\u8bfb\u9898~~\u6570\u5b66\u80fd\u529b\u7684\u65f6\u5019\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u6cf0\u52d2\u5c55\u5f00\u5c06\u524d\u4e24\u4e2a\u51fd\u6570\u90fd\u5c55\u5f00\u4e3a\u591a\u9879\u5f0f\u51fd\u6570\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u8fdb\u884c\u76f8\u52a0\u51cf\u4e86\u3002\n\n\u6211\u4eec\u6765\u770b\u9898\u76ee\u4e2d\u7ed9\u51fa\u7684\u516c\u5f0f\uff1a\n\n$$\nf(x)=\\sum_{k=0}^{n-1}\\frac{f^{(k)}(x_0)(x-x_0)^k}{k!}+\\frac{f^{(n)}(\\xi)(x-x_0)^n}{n!},x\\in[a,b]\n$$\n\n\u6211\u4eec\u53d6 $x_0=0$\uff0c\u90a3\u4e48\u5176\u5b9e\u5c55\u5f00\u5c31\u662f\uff1a\n\n$$\n\\begin{aligned}\nf(x)&=f'(0)+\\frac{f'(0)x}{1!}+\\frac{f''(0)x^2}{2!}+\\cdots+\\frac{f^{(n)}(0)x^n}{n!}\\\\\n&=\\sum_{k=0}^n \\frac{f^{(k)}(0)x^k}{k!}\n\\end{aligned}\n$$\n\n\u6240\u4ee5\u6211\u4eec\u6765\u770b\u89c2\u5bdf\u524d\u4e24\u4e2a\u51fd\u6570\u7684\u5bfc\u6570\uff1a\n\n\uff08\u6c42\u5bfc\u4e3a\u9ad8\u4e8c\u6570\u5b66\u77e5\u8bc6\uff0c\u5982\u679c\u4e0d\u4f1a\u6c42\u5bfc\u7684\uff0c\u8bf7\u5de6\u8f6c[\u767e\u5ea6](https://baike.baidu.com/item/%E5%AF%BC%E6%95%B0/579188)\uff09\n\n## $f(x)=\\sin(ax+b)$\n\n\u6211\u4eec\u591a\u5217\u51e0\u9879\u6765\u627e\u89c4\u5f8b\uff1a\n\n$$\n\\begin{aligned}\nf(x)&=\\sin(ax+b)\\\\\nf^{(1)}(x)&=a\\cos(ax+b)\\\\\nf^{(2)}(x)&=-a^2\\sin(ax+b)\\\\\nf^{(3)}(x)&=-a^3\\cos(ax+b)\\\\\nf^{(4)}(x)&=a^4\\sin(ax+b)\\\\\nf^{(5)}(x)&=a^5\\cos(ax+b)\n\\end{aligned}\n$$\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5b83\u7684 $n$ \u9636\u5bfc\u6570\u4e3a $a^n$ \u4e58\u4e0a\u4e00\u4e2a\u4ee5\u56db\u4e3a\u5468\u671f\u7684\u51fd\u6570\uff0c\u5373\uff1a\n\n$$\nf^{(n)}(x)=\\begin{cases}\na^n\\sin(ax+b) &(x \\bmod 4=0)\\\\\na^n\\cos(ax+b) &(x \\bmod 4=1)\\\\\n-a^n\\sin(ax+b) &(x \\bmod 4=2)\\\\\n-a^n\\cos(ax+b) &(x \\bmod 4=3)\\\\\n\\end{cases}\n$$\n\n\u63a5\u4e0b\u6765\u5e26\u5165\u4e0a\u9762\u7684\u5f0f\u5b50\u5c55\u5f00\u5c31\u597d\u5566\uff01\n\n```cpp\nstatic Poly Sin(ld a, ld b) {\n    f[0] = sin(b);\n    f[1] = cos(b);\n    f[2] = -sin(b);\n    f[3] = -cos(b);\n    Poly A; // Poly \u4e3a\u591a\u9879\u5f0f\n    ld y = 1;\n    for (int i = 0; i <= 20; i++) {\n        A.a[i] = f[i % 4] * y / fac[i];\n        y *= a;\n    }\n    return A;\n}\n```\n\n## $f(x)=\\text e^{ax+b}$\n\n\u540c\u6837\u7684\uff0c\u6765\u627e\u89c4\u5f8b\uff1a\n\n$$\n\\begin{aligned}\nf(x)&=\\text e^{ax+b}\\\\\nf^{(1)}(x)&=a\\text e^{ax+b}\\\\\nf^{(2)}(x)&=a^2\\text e^{ax+b}\\\\\nf^{(3)}(x)&=a^3\\text e^{ax+b}\\\\\nf^{(4)}(x)&=a^4\\text e^{ax+b}\\\\\nf^{(5)}(x)&=a^5\\text e^{ax+b}\n\\end{aligned}\n$$\n\n\u8fd9\u4e2a\u6bd4\u6b63\u5f26\u51fd\u6570\u8981\u7b80\u5355\u4e9b\uff0c\u5217\u51fa\u6765\u5c31\u662f\uff1a\n\n$$\nf^{(n)}(x)=a^n\\text e^{ax+b}\n$$\n\n```cpp\nstatic Poly Exp(ld a, ld b) {\n    Poly A;\n    ld y = 1;\n    ld q = exp(b);\n    for (int i = 0; i <= 20; i++) {\n        A.a[i] = q * y / fac[i];\n        y *= a;\n    }\n    return A;\n}\n```\n\n\u63a5\u4e0b\u6765\u7528 LCT \u6765\u7ef4\u62a4\u8fd9\u4e2a\u591a\u9879\u5f0f\u51fd\u6570\uff08\u5c31\u76f4\u63a5\u628a\u5bf9\u5e94\u7cfb\u6570\u52a0\u8d77\u6765\u5c31\u597d\uff0c\u4e0d\u8981\u770b\u5230\u591a\u9879\u5f0f\u5c31\u5bb3\u6015\uff09\uff0c\u8fd9\u9898\u5c31\u7ed3\u675f\u4e86\uff01\n\n\u4e0a\u4ee3\u7801\uff01\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef double ld;\nld ans1, ans2;\nld fac[50];\nld f[6];\nstruct Poly {\n    ld a[30];\n    Poly() {\n        memset(a, 0, sizeof a);\n    }\n    Poly operator+(Poly b) {\n        Poly c;\n        for (int i = 0; i <= 20; i++)\n         // \u5b9e\u9645\u4e0a\u5c55\u5f0010\u9879\u5c31\u8db3\u4ee5\u901a\u8fc7\u672c\u9898\uff0c\u4e3a\u4e86\u4fdd\u9669\u8d77\u89c1\u591a\u5c55\u5f00\u4e00\u4e9b\u3002\n            c.a[i] = a[i] + b.a[i];\n        return c;\n    }\n    ld operator()(ld x) {\n        ld ans = 0;\n        ld y = 1;\n        for (int i = 0; i <= 20; i++) {\n            ans += y * a[i];\n            y *= x;\n        }\n        return ans;\n    }\n    static Poly Sin(ld a, ld b) {\n        f[0] = sin(b);\n        f[1] = cos(b);\n        f[2] = -sin(b);\n        f[3] = -cos(b);\n        Poly A;\n        ld y = 1;\n        for (int i = 0; i <= 20; i++) {\n            A.a[i] = f[i % 4] * y / fac[i];\n            y *= a;\n        }\n        return A;\n    }\n    static Poly Exp(ld a, ld b) {\n        Poly A;\n        ld y = 1;\n        ld q = exp(b);\n        for (int i = 0; i <= 20; i++) {\n            A.a[i] = q * y / fac[i];\n            y *= a;\n        }\n        return A;\n    }\n    static Poly Line(ld a, ld b) {\n        Poly A; A.a[0] = b, A.a[1] = a;\n        return A;\n    }\n};\nconst int MAXN = 200005;\nstruct LCT {\n#define lc(x) (ch[x][0])\n#define rc(x) (ch[x][1])\n    int ch[MAXN][2], fa[MAXN];\n    bool tag[MAXN];\n    Poly v[MAXN], sum[MAXN];\n    bool ident(int x) { return rc(fa[x]) == x; }\n    bool nroot(int x) { return lc(fa[x]) == x || rc(fa[x]) == x; }\n    void reverse(int x) { swap(lc(x), rc(x)), tag[x] ^= 1; }\n    void pushDown(int x) { \n        if (tag[x]) \n            reverse(lc(x)), reverse(rc(x)), tag[x] = 0; \n    }\n    void pushUp(int x) { sum[x] = sum[lc(x)] + sum[rc(x)] + v[x]; }\n    void rotate(int x) {\n        int f = fa[x], ff = fa[f];\n        int a = ident(x), b = ident(f);\n        if (nroot(f)) ch[ff][b] = x;\n        fa[x] = ff;\n        ch[f][a] = ch[x][!a];\n        fa[ch[x][!a]] = f;\n        ch[x][!a] = f;\n        fa[f] = x;\n        pushUp(f), pushUp(x);\n    }\n    void splay(int x) {\n        stack<int> st; int y = x; st.push(x);\n        while (nroot(y)) st.push(y = fa[y]);\n        while (!st.empty()) pushDown(st.top()), st.pop();\n        while (nroot(x)) {\n            if (nroot(fa[x])) {\n                rotate(ident(x) == ident(fa[x]) ? fa[x] : x);\n            }\n            rotate(x);\n        }\n        pushUp(x);\n    }\n    void access(int x) {\n        for (int y = 0; x; x = fa[y = x]) {\n            splay(x), rc(x) = y, pushUp(x);\n        }\n    }\n    void makeRoot(int x) {\n        access(x), splay(x), reverse(x);\n    }\n    int findRoot(int x) {\n        access(x), splay(x);\n        while (lc(x)) pushDown(x), x = lc(x);\n        splay(x);\n        return x;\n    }\n    void split(int x, int y) {\n        makeRoot(x), access(y), splay(y);\n    }\n    void link(int x, int y) {\n        makeRoot(x), fa[x] = y;\n    }\n    void cut(int x, int y) {\n        makeRoot(x), findRoot(y), rc(x) = fa[y] = 0;\n    }\n}lct;\nint n, m;\nchar type[10];\nint main() {\n    fac[0] = 1;\n    for (int i = 1; i <= 30; i++) {\n        fac[i] = fac[i - 1] * i;\n    }\n    scanf(\"%d%d%s\", &n, &m, type);\n    for (int i = 1; i <= n; i++) {\n        int f;\n        ld a, b;\n        scanf(\"%d%lf%lf\", &f, &a, &b);\n        if (f == 1) lct.v[i] = Poly::Sin(a, b);\n        if (f == 2) lct.v[i] = Poly::Exp(a, b);\n        if (f == 3) lct.v[i] = Poly::Line(a, b);\n        lct.pushUp(i);\n    }\n    for (int i = 1; i <= m; i++) {\n        scanf(\"%s\", type);\n        if (type[0] == 'a') {\n            int u, v; scanf(\"%d%d\", &u, &v);\n            u++, v++;\n            lct.link(u, v);\n        }\n        if (type[0] == 'd') {\n            int u, v; scanf(\"%d%d\", &u, &v);\n            u++, v++;\n            lct.cut(u, v);\n        }\n        if (type[0] == 'm') {\n            int c, f; ld a, b; scanf(\"%d%d%lf%lf\", &c, &f, &a, &b);\n            c++;\n            lct.splay(c);\n            if (f == 1) lct.v[c] = Poly::Sin(a, b);\n            if (f == 2) lct.v[c] = Poly::Exp(a, b);\n            if (f == 3) lct.v[c] = Poly::Line(a, b);\n            lct.pushUp(c);\n        }\n        if (type[0] == 't') {\n            int u, v; ld x; scanf(\"%d%d%lf\", &u, &v, &x);\n            u++, v++;\n            lct.makeRoot(u);\n            if (lct.findRoot(v) != u) {\n                printf(\"unreachable\\n\");\n            } else {\n                lct.split(u, v);\n                printf(\"%.8le\\n\", lct.sum[v](x));\n            }\n        }\n    }\n    return 0;\n}\n```\n\n\u672c\u4eba\u521d\u4e09\u751f\uff0c\u6240\u4ee5\u5982\u679c\u6709\u4e0d\u4e25\u8c28\u7684\u5730\u65b9\u6b22\u8fce\u6307\u51fa\uff01",
        "postTime": 1644362510,
        "uid": 279652,
        "name": "APJifengc",
        "ccfLevel": 9,
        "title": "\u300c\u89e3\u9898\u62a5\u544a\u300d[THUWC2017]\u5728\u7f8e\u5999\u7684\u6570\u5b66\u738b\u56fd\u4e2d\u7545\u6e38"
    },
    {
        "content": "\u9996\u5148\u53d1\u73b0\u6709\u8fde\u8fb9\u548c\u5220\u8fb9\u7684\u64cd\u4f5c\uff0c\u6240\u4ee5\u6211\u4eec\u80af\u5b9a\u8981\u7528$LCT$\u6765\u8fdb\u884c\u7ef4\u62a4\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u5982\u4f55\u8fdb\u884c$LCT$\u4e0a\u7684\u4fe1\u606f\u5408\u5e76\u3002\n\n$f=1$,\u5219\u51fd\u6570\u4e3a$f(x)=sin(ax+b)$\n\n$f=2$,\u5219\u51fd\u6570\u4e3a$f(x)=e^{ax+b}$\n\n$f=3$,\u5219\u51fd\u6570\u4e3a$f(x)=ax+b$\n\n\u8fd9\u9053\u9898\u4e2d\u7684\u4fe1\u606f\u4e3a\u8fd9\u4e09\u4e2a\u51fd\u6570\uff0c\u56e0\u4e3a$sin(ax+b)$\u548c$e^{ax+b}$\u4e0d\u597d\u5904\u7406\uff0c\u6240\u4ee5\u7528\u6cf0\u52d2\u5c55\u5f00\u90fd\u5176\u5904\u7406\u4e3a\u591a\u9879\u5f0f\u7684\u5f62\u5f0f\uff0c\u518d\u8fdb\u884c\u591a\u9879\u5f0f\u7684\u5408\u5e76\u5373\u53ef\u3002\n\n\u6cf0\u52d2\u516c\u5f0f\uff1a\n\n$$f(x)=\\sum_{i=0}^{n} \\frac{f^{(i)}(x_0)\\times(x-x_0)^i}{i!}$$\n\n\u6211\u4eec\u8ba9$x_0=0$\uff0c\u5f97\uff1a\n\n$$f(x)=\\sum_{i=0}^{n} \\frac{f^{(i)}(0)}{i!}x^i$$\n\n\u6839\u636e\u6c42\u5bfc\u7684\u77e5\u8bc6\uff0c\u5f97\uff1a\n\n$$(\\sin x)'=\\cos x$$\n\n$$(\\cos x)'=-\\sin x$$\n\n$$(-\\sin x)'=-\\cos x$$\n\n$$(-\\cos x)'=\\sin x$$\n\n$$(e^x)'=e^x$$\n\n\u540c\u65f6\u518d\u5e94\u7528\u94fe\u5f0f\u6cd5\u5219\u3002\n\n\u5bf9$sin(ax+b)$\u8fdb\u884c\u6cf0\u52d2\u5c55\u5f00\u5f97\uff1a\n\n$$sin(ax+b)=\\sum_{i=0}^{n} \\frac{f^{(i)}(0)}{i!}x^i$$\n\n\u5176\u4e2d\uff0c$f^{(i)}(0)$\u4e3a\uff1a\n\n$$f^{(i)}(0)=\\begin{cases}\\sin(b)a^i\\ (i\\mod4=0)\\\\\\cos(b)a^i\\ (i\\mod4=1)\\\\-\\sin(b)a^i\\ (i\\mod4=2)\\\\-\\cos(b)a^i\\ (i\\mod4=3)\\end{cases}$$\n\n\u5bf9$e^{ax+b}$\u8fdb\u884c\u6cf0\u52d2\u5c55\u5f00\u5f97\uff1a\n\n$$e^{ax+b}=\\sum_{i=0}^{n} \\frac{f^{(i)}(0)}{i!}x^i=\\sum_{i=0}^{n} \\frac{a^ie^b}{i!}x^i$$\n\n\u89e3\u51b3\u4e86\u4fe1\u606f\u5408\u5e76\u540e\uff0c\u4fee\u6539\u67e5\u8be2\u4ec0\u4e48\u7684\u90fd\u662f$LCT$\u7684\u57fa\u672c\u64cd\u4f5c\u4e86\uff0c\u7136\u540e\u8fd9\u9053\u9898\u5c31\u505a\u5b8c\u4e86\u3002\n\n\u5b9e\u73b0\u7ec6\u8282\u770b\u4ee3\u7801\u5427\u3002\n\n$code:$\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 100010\n#define maxm 20\nusing namespace std;\ntemplate<typename T> inline void read(T &x)\n{\n\tx=0;char c=getchar();bool flag=false;\n\twhile(!isdigit(c)){if(c=='-')flag=true;c=getchar();}\n\twhile(isdigit(c)){x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n\tif(flag)x=-x;\n}\nint n,m;\nchar type[10];\nint fa[maxn],ch[maxn][2],rev[maxn],f[maxn];\ndouble fac[maxm],sum[maxn][maxm],a[maxn],b[maxn];\nbool check(int x)\n{\n    return ch[fa[x]][1]==x;\n}\nvoid pushr(int x)\n{\n    rev[x]^=1;swap(ch[x][0],ch[x][1]);\n}\nvoid pushup(int x)\n{\n    for(int i=0;i<=15;++i)\n        sum[x][i]=sum[ch[x][0]][i]+sum[ch[x][1]][i];\n    if(f[x]==1)\n    {\n        double val=1,s=sin(b[x]),c=cos(b[x]);\n        for(int i=0;i<=15;i+=4)\n        {\n            sum[x][i]+=s*val,val*=a[x];\n            sum[x][i+1]+=c*val,val*=a[x];\n            sum[x][i+2]-=s*val,val*=a[x];\n            sum[x][i+3]-=c*val,val*=a[x];\n        }\n    }\n    if(f[x]==2)\n    {\n        double val=exp(b[x]);\n        for(int i=0;i<=15;++i) sum[x][i]+=val,val*=a[x];\n    }\n    if(f[x]==3) sum[x][1]+=a[x],sum[x][0]+=b[x];\n}\nvoid pushdown(int x)\n{\n    if(!rev[x]) return;\n    pushr(ch[x][0]),pushr(ch[x][1]);\n    rev[x]=0;\n}\nbool notroot(int x)\n{\n    return ch[fa[x]][0]==x||ch[fa[x]][1]==x;\n}\nvoid rotate(int x)\n{\n    int y=fa[x],z=fa[y],k=check(x),w=ch[x][k^1];\n    if(notroot(y)) ch[z][check(y)]=x;\n    fa[x]=z;\n    ch[y][k]=w;\n    if(w) fa[w]=y;\n    ch[x][k^1]=y;\n    fa[y]=x;\n    pushup(y);\n}\nvoid all(int x)\n{\n    if(notroot(x)) all(fa[x]);\n    pushdown(x);\n}\nvoid splay(int x)\n{\n    all(x);\n    for(int y;notroot(x);rotate(x))\n        if(notroot(y=fa[x]))\n            rotate(check(x)^check(y)?x:y);\n    pushup(x);\n}\nvoid access(int x)\n{\n    for(int y=0;x;y=x,x=fa[x])\n        splay(x),ch[x][1]=y,pushup(x);\n}\nvoid makeroot(int x)\n{\n    access(x),splay(x),pushr(x);\n}\nvoid split(int x,int y)\n{\n    makeroot(x),access(y),splay(y);\n}\nint findroot(int x)\n{\n    access(x),splay(x);\n    while(ch[x][0]) x=ch[x][0];\n    splay(x);\n    return x;\n}\nvoid link(int x,int y)\n{\n    makeroot(x),fa[x]=y;\n}\nvoid cut(int x,int y)\n{\n    split(x,y),fa[x]=ch[y][0]=0;\n}\nvoid modify(int x,int nf,double na,double nb)\n{\n    makeroot(x);\n    f[x]=nf,a[x]=na,b[x]=nb;\n}\ndouble query(int x,int y,double q)\n{\n    double ans=0,now=1;\n    split(x,y);\n    for(int i=0;i<=15;++i)\n        ans+=sum[y][i]*now/fac[i],now*=q;\n    return ans;\n}\nvoid init()\n{\n    fac[0]=1;\n    for(int i=1;i<=18;++i) fac[i]=fac[i-1]*i;\n}\nint main()\n{\n\tinit();\n    read(n),read(m);\n    scanf(\"%s\",type);\n    for(int i=1;i<=n;++i)\n        read(f[i]),scanf(\"%lf%lf\",&a[i],&b[i]);\n    while(m--)\n    {\n        int x,y,nf;\n        double na,nb,q;\n        scanf(\"%s\",type);\n        if(type[0]=='a')\n            read(x),read(y),link(x+1,y+1);\n        if(type[0]=='d')\n            read(x),read(y),cut(x+1,y+1);\n        if(type[0]=='m')\n        {\n            read(x),read(nf),x++;\n            scanf(\"%lf%lf\",&na,&nb);\n            modify(x,nf,na,nb);\n        }\n        if(type[0]=='t')\n        {\n            read(x),read(y),x++,y++;\n            scanf(\"%lf\",&q);\n            if(findroot(x)!=findroot(y))\n            {\n                puts(\"unreachable\");\n                continue;\n            }\n            printf(\"%.10lf\\n\",query(x,y,q));\n        }\n    }\n\treturn 0;\n}\n```",
        "postTime": 1579850678,
        "uid": 172489,
        "name": "lhm_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4546 \u3010[THUWC2017]\u5728\u7f8e\u5999\u7684\u6570\u5b66\u738b\u56fd\u4e2d\u7545\u6e38\u3011"
    },
    {
        "content": "[\u9898\u9762](https://www.luogu.org/problemnew/show/P4546)\n\n _\u201c\u6570\u5b57\u548c\u6570\u5b66\u89c4\u5f8b\u4e3b\u5bb0\u7740\u8fd9\u4e2a\u4e16\u754c\u3002\u201d_ \n\n\u5728 @i207M \u5e2e\u52a9\u4e0b\u6298\u817e\u4e86\u534a\u5929\u7ec8\u4e8e\u641e\u61c2\u4e86\u5bfc\u6570\u548c\u6cf0\u52d2\u5c55\u5f00\uff0c\u5f15\u7528\u67d0\u5b66\u957f\u5728\u8003\u573a\u4e0a\u7684\u611f\u53d7\uff1a\u611f\u89c9\u6574\u4e2a\u4eba\u90fd\u6cf0\u52d2\u5c55\u5f00\u4e86\n\n\n------------\n\n\n\u663e\u7136\u662f\u4e2a\u5947\u5947\u602a\u602a\u7684\u4e1c\u897f\u5957\u4e0aLCT\uff0c\u53d1\u73b0\u76f4\u63a5\u7ef4\u62a4\u7684\u8bdd\u5e76\u4e0d\u80fd\u5feb\u901f\u94fe\u4e0a\u6c42\u548c\u3002\u6240\u4ee5\u7528\u53cb\u597d\u7684\u63d0\u793a\u91cc\u7684\u6cf0\u52d2\u5c55\u5f00\uff0c\u5bf9\u6bcf\u4e2a\u70b9\u7684\u51fd\u6570\u8fdb\u884c\u6cf0\u52d2\u5c55\u5f00\u540e\u5c31\u53d8\u6210\u4e86\u7ef4\u62a4\u591a\u9879\u5f0f\u7684\u548c\uff0c\u5927\u6982\u5c55\u5f00\u5341\u51e0\u9879\u7cbe\u5ea6\u5c31\u591f\u4e86(\u6211\u5c55\u5f00\u4e8616\u9879)\u3002\u9898\u76ee\u544a\u8bc9\u6211\u4eec\u4e86\u8fd9\u4e09\u4e2a\u51fd\u6570\u5728[0,1]\u90fd\u80fd\u5c55\u5f00\uff0c\u90a3\u5c31\u5728\u96f6\u70b9\u5c55\u5f00\u5457\uff0c\u8fd9\u4e0d\u662f\u6700\u65b9\u4fbf\u7684\u5417=\u3002=\n\n\u5f53\u7136\u56e0\u4e3a\u53ef\u80fd~~\u5e76\u6ca1~~\u6709\u4eba\u548c\u5236\u6756\u7684\u6211\u4e00\u6837\u5bf9\u5bfc\u6570\u4e00\u65e0\u6240\u77e5~~(\u521d\u4e2d\u6ca1\u5b66\uff0c\u9ad8\u4e2d\u505c\u8bfe\u4e86\u7684\u90a3\u79cd)~~\uff0c\u6211\u8fd8\u662f\u5199\u7684\u8be6\u7ec6\u4e00\u70b9\u6bd4\u8f83\u597d\u3002\n\n(\u6ce8\u610f\u9898\u76ee\u4e2d\u6700\u7ec8\u5e26\u8fdb\u6bcf\u4e2a\u51fd\u6570\u7684\u5b9e\u9645\u662f$ax+b$)\n\n\u5148\u4ee5$\\sin$\u4e3a\u4f8b\uff0c\u4e0b\u9762\u6211\u4eec\u7528$d^k(x)$\u8868\u793a\u5173\u4e8e$x$\u7684\u51fd\u6570\u7684$k$\u9636\u5bfc\u6570\uff0c\u7528$g(x)$\u8868\u793a$ax+b$\uff0c\u7528$h(x)$\u8868\u793a\u9898\u76ee\u5b9e\u9645\u8981\u6211\u4eec\u6c42\u7684\u4e1c\u897f\uff0c\u6211\u4eec\u628a$h(x)$\u5728\u96f6\u70b9\u5c55\u5f00\u4e4b\u540e\u53d1\u73b0\u662f\u8fd9\u6837\u7684\u4e00\u4e2a\u4e1c\u897f\n\n$h(x)=h(0)+\\frac{d^1(0)(x-0)}{1!}+\\frac{d^2(0)(x-0)^2}{2!}+......$\n\n\u6240\u4ee5\u8bf4\u9009\u96f6\u70b9\u5c55\u5f00\u591a\u65b9\u4fbf=\u3002=\n\n$h(x)=h(0)+(d^1(0)/1!)x+(d^2(0)/2!)x^2+......$\n\n\u597d\uff0c\u73b0\u5728\u628a$h$\u6362\u56de\u53bb\uff0c\u90a3$h(0)$\u5b9e\u9645\u662f$f(g(0))=sin(a*0+b)=sin(b)$\uff0c\u90a3\u5bfc\u6570$d(0)$\u5462\uff1f\u6211\u4eec\u7ecf\u8fc7\u5404\u79cd\u9014\u5f84\u53ef\u4ee5\u77e5\u9053$\\sin x$\u6c42\u5bfc\u662f$\\cos x$\uff0c$\\cos x$\u6c42\u5bfc\u662f$-\\sin x$\uff0c\u5f53\u7136\u8fd8\u6709$ax+b$\u6c42\u5bfc\u662f$a$\uff0c\u73b0\u5728\u95ee\u9898\u662f$h$\u662f\u4e24\u4e2a\u51fd\u6570\u5957\u8d77\u6765\uff0c\u6240\u4ee5\u4f60\u8fd8\u9700\u8981\u77e5\u9053\n\n\u94fe\u5f0f\u6cd5\u5219\uff1a\u8bbe\u51fd\u6570$h(x)=f(g(x))$\uff0c\u90a3\u4e48\u51fd\u6570$h$\u5728$x$\u5904\u7684\u5bfc\u6570$h'(x)=f'(g(x))g'(x)$\uff0c\u5373$f$\u5728$g(x)$\u5904\u6c42\u5bfc\u7684\u7ed3\u679c\u4e58\u4e0a$g$\u5728$x$\u5904\u6c42\u5bfc\u7684\u7ed3\u679c\n\n\u5e94\u7528\u4e00\u4e0b\uff1a$h'(0)=f'(g(0))g'(0)=\\cos(g(0))a=a\\cos(b)$\n\n\u66f4\u9ad8\u9636\u7684\u5bfc\u6570\u4ecd\u7136\u5e94\u7528\u94fe\u5f0f\u6cd5\u5219\u6c42\uff0c\u6ce8\u610f\u7b26\u53f7\u548c$\\sin/\\cos$\uff0c\u7136\u540e\u5c31\u662f\u9ad8\u4e00\u9636\u591a\u4e58\u4e00\u4e2a$a$\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u53e6\u5916\u4e24\u79cd\u51fd\u6570\u5957\u7740$g(x)=ax+b$\u65f6\u7684\u5bfc\u6570\n\n$f(x)=e^x$\u6c42\u5bfc\u8fd8\u662f$e^x$\uff0c\u6240\u4ee5$f(x)=e^x->h'(x)=f'(g(0))g'(0)=e^{g(0)}a=a*e^b$\uff0c\u7136\u540e\u518d\u6bcf\u9ad8\u4e00\u9636\u5c31\u591a\u4e58\u4e00\u4e2a$a$\n\n$f(x)=x$\u6c42\u5bfc\u662f$1$\uff0c\u6240\u4ee5$f(x)=x->h'(x)=f'(g(0))g'(0)=a$\uff0c\u66f4\u9ad8\u9636\u7684\u5bfc\u6570\u90fd\u662f\u96f6\n\n\u7136\u540e\u662f\u6ce8\u610f\u7cbe\u5ea6\uff0c\u6bcf\u6b21\u4fee\u6539\u5148\u9884\u5904\u7406\u4e00\u4e0b$\\sin,\\cos$\u548c$e$\uff0c\u4e0d\u7136\u7cbe\u5ea6\u4f1a\u7206\u70b8\n\n\u6700\u91cd\u8981\u7684\u662f\uff0cLCT\u5148\u4e0d\u8981\u5199\u9519=\u3002=\n\n```cpp\n//\u6211\u4e0d\u662f\uff0c\u6211\u6ca1\u6709\u5361\u8bc4\u6d4bQAQ\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst double inf=1e9;\nconst int N=100005,K=20;\ndouble exa[N][K],ply[N][K],fac[N];\nint siz[N],fth[N],son[N][2],rev[N],stk[N];\ndouble t2,t3; int n,m,t1,t4,top; char rd[20];\nvoid Prework()\n{\n    fac[0]=1;\n    for(int i=1;i<=16;i++)\n        fac[i]=fac[i-1]*i;\n}\ndouble Calc(int nde,double var)\n{\n    double ret=0,npw=1;\n    for(int i=0;i<=15;i++)\n        ret+=ply[nde][i]*npw,npw*=var;//,printf(\"%lf \",ply[nde][i]);puts(\"\");\n    return ret;\n}\nvoid Pushup(int nde)\n{\n    int lson=son[nde][0],rson=son[nde][1];\n    for(int i=0;i<=15;i++)\n        ply[nde][i]=exa[nde][i]+ply[lson][i]+ply[rson][i];\n}\nvoid Release(int nde)\n{\n    if(rev[nde])\n    {\n        int &lson=son[nde][0],&rson=son[nde][1];\n        rev[nde]^=1,rev[lson]^=1,rev[rson]^=1;\t\n        swap(lson,rson);\n    }\n}\nbool Nottop(int nde)\n{\n    int fa=fth[nde];\n    return nde==son[fa][0]||nde==son[fa][1];\n}\nvoid Rotate(int nde)\n{\n    int fa=fth[nde],gr=fth[fa],isl=nde==son[fa][0];\n    if(Nottop(fa)) son[gr][fa==son[gr][1]]=nde;\n    fth[nde]=gr,fth[fa]=nde,fth[son[nde][isl]]=fa;\n    son[fa][isl^1]=son[nde][isl],son[nde][isl]=fa;\n    Pushup(fa),Pushup(nde);\n}\nvoid Splay(int nde)\n{\n    stk[top=1]=nde;\n    for(int i=nde;Nottop(i);i=fth[i])\n        stk[++top]=fth[i];\n    while(top) Release(stk[top--]);\n    while(Nottop(nde))\n    {\n        int fa=fth[nde],gr=fth[fa];\n        if(Nottop(fa))\n            Rotate(((son[fa][0]==nde)==(son[gr][0]==fa))?fa:nde);\n        Rotate(nde);\n    }\n    Pushup(nde);\n}\nvoid Access(int nde)\n{\n    int mem=nde,lst=0;\n    while(nde)\n    {\n        Splay(nde),son[nde][1]=lst;\n        Pushup(nde),lst=nde,nde=fth[nde];\n    }\n    Splay(mem);\n}\nvoid Turnroot(int nde)\n{\n    Access(nde),rev[nde]^=1;\n}\nvoid Split(int x,int y)\n{\n    Turnroot(x),Access(y);\n}\nint Getroot(int nde)\n{\n    Access(nde);\n    while(son[nde][0])\n        nde=son[nde][0];\n    Splay(nde);\n    return nde;\n}\nvoid Link(int x,int y)\n{\n    Turnroot(x),fth[x]=y;\n}\nvoid Cut(int x,int y)\n{\n    Split(x,y),fth[x]=son[y][0]=0,Pushup(y);\n}\nvoid Setfunc(int x,int t,double a,double b)\n{\n    memset(exa[x],0,sizeof exa[x]);\n    if(t==1)\n    {\n        double o=1,Sin=sin(b),Cos=cos(b);\n        for(int i=0;i<=15;i++)\n            exa[x][i]=((i%2==1)?Cos:Sin)*((i%4<=1)?1:-1)*o/fac[i],o*=a;\n    }\n    if(t==2)\n    {\n        double o=1,Exp=exp(b);\n        for(int i=0;i<=15;i++)\n            exa[x][i]=Exp*o/fac[i],o*=a;\n    }\n    if(t==3)\n        exa[x][0]=b,exa[x][1]=a;\n}\nvoid Change(int x,int t,double a,double b)\n{\n    Splay(x),Setfunc(x,t,a,b),Pushup(x);\n}\ndouble Query(int x,int y,double a)\n{\n    Turnroot(x);\n    if(Getroot(y)==x)\n    {\n        Splay(y);\n        return Calc(y,a);\n    }\n    else return -inf;\n}\nint main()\n{\n    Prework();\n    scanf(\"%d%d%s\",&n,&m,rd);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d%lf%lf\",&t1,&t2,&t3),Setfunc(i,t1,t2,t3);\n    while(m--)\n    {\n        scanf(\"%s\",rd);\n        if(rd[0]=='a') scanf(\"%d%d\",&t1,&t4),Link(t1+1,t4+1);\n        else if(rd[0]=='d') scanf(\"%d%d\",&t1,&t4),Cut(t1+1,t4+1);\n        else if(rd[0]=='m') scanf(\"%d%d%lf%lf\",&t1,&t4,&t2,&t3),Change(t1+1,t4,t2,t3);\n        else if(rd[0]=='t') \n        {\n            scanf(\"%d%d%lf\",&t1,&t4,&t2);\n            double qry=Query(t1+1,t4+1,t2);\n            if(qry<=-inf) puts(\"unreachable\");\n            else printf(\"%.7f\\n\",qry);\n        }\n//\t\tfor(int i=1;i<=3;i++,puts(\"\"))\n//\t\t\tfor(int j=0;j<=10;j++) printf(\"%lf \",ply[i][j]);\n    }\n    return 0;\n}\n```",
        "postTime": 1547884919,
        "uid": 56967,
        "name": "ydnhaha",
        "ccfLevel": 0,
        "title": "\u89e3\u9898\uff1aTHUWC 2017 \u5728\u7f8e\u5999\u7684\u6570\u5b66\u738b\u56fd\u4e2d\u7545\u6e38"
    }
]