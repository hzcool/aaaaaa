[
    {
        "content": "\u4e3b\u8981\u7684\u65b9\u6cd5\u90fd\u5199\u5728\u6ce8\u91ca\u91cc\u9762\u4e86\u3002\n\n\u7528Tarjan\u8dd1\u51fa\u5272\u70b9\uff0c\u7136\u540eDFS\u641c\u7d22\u6240\u6709\u7684\u8054\u901a\u5feb\n\n\u8ba1\u7b97\u6bcf\u4e00\u4e2a\u8054\u901a\u5feb\u4e2d\u7684\u5272\u70b9\u6570\u76ee\n\n\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n\u5982\u679c\u6ca1\u6709\u5272\u70b9\n\n\u81f3\u5c11\u9700\u8981\u5efa\u7acb\u4e24\u4e2a\u51fa\u53e3\n\n\u4ece\u4efb\u610f\u975e\u5272\u70b9\u7684\u5730\u65b9\u9009\u62e9\u4e24\u4e2a\u70b9\u5efa\u7acb\n\n\u5982\u679c\u8fd9\u4e2a\u5206\u7ec4\u53ea\u6709\u4e00\u4e2a\u5272\u70b9\n\n\u53ea\u9700\u8981\u5728\u5206\u7ec4\u5185\u8bbe\u7acb\u4e00\u4e2a\u51fa\u53e3\n\n\u53ef\u4ee5\u8bbe\u7acb\u5728\u4efb\u610f\u4e00\u4e2a\u975e\u5272\u70b9\u7684\u5730\u65b9\n\n\u5982\u679c\u6709\u4e24\u4e2a\u53ca\u4ee5\u4e0a\u4e2a\u5272\u70b9\uff0c\u5219\u65e0\u9700\u5efa\u7acb\uff0c\u53ef\u4ee5\u76f4\u63a5\u5230\u8fbe\u5176\u4ed6\u8054\u901a\u5757\n\n  \n\n```cpp\n#include<iostream>\n#include<cstdlib>\n#include<cstring>\n#include<cstdlib>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n\n#define MAX 501\n\nint Dfn[MAX],vis[MAX],Low[MAX];\nbool cut[MAX];\nlong long Num,Cut,Time,root,rs,m,n,Ans1,Ans2,Case,Group;\n\nvoid Init();//\u591a\u7ec4\u6570\u636e\uff0c\u521d\u59cb\u5316 \n\nstruct Node  //\u5b9a\u4e49\u8fb9 \n{\n       int v,next;\n}e[MAX*MAX];\n\nint h[MAX],cnt;\n\nvoid Add(int u,int v)  //\u6dfb\u52a0\u8fb9 \n{\n      e[cnt]=(Node){v,h[u]};\n      h[u]=cnt++;\n}\n\nvoid Tarjan(int u,int f)  //Tarjan\u8dd1\u51fa\u6240\u6709\u5272\u70b9 \n{\n       int v;\n       Dfn[u]=Low[u]=++Time;   \n       \n       for(int i=h[u];i!=-1;i=e[i].next)//\u679a\u4e3e\u6240\u6709\u76f4\u63a5\u8fde\u63a5\u7684\u70b9 \n       {\n                v=e[i].v;\n                if(!Dfn[v])  //\u5982\u679c\u6ca1\u6709\u8bbf\u95ee\u8fc7\uff0c\u8bc1\u660ev\u662fu\u7684\u5b50\u8282\u70b9 \n                {\n                       Tarjan(v,u);\n                       Low[u]=min(Low[u],Low[v]); //\u66f4\u65b0Low\u503c \n                       if(Low[v]>=Dfn[u])  //\u5982\u679cv\u80fd\u591f\u56de\u5230u\u6216\u8005u\u7684\u7956\u5148 \n                       {\n                               if(u!=root)    //\u5982\u679cu\u4e0d\u662f\u5b50\u6811\u7684\u6839\u8282\u70b9 \n                                   cut[u]=true; //u\u662f\u5272\u70b9 \n                               else \n                                   rs++;      //\u6839\u8282\u70b9\u5b50\u8282\u70b9\u6570\u589e\u52a0 \n                       }\n                }\n                else\n                   if(v!=f)    //\u5982\u679cv\u4e0d\u662fu\u7684\u7236\u8282\u70b9\uff0c\u4f46\u662fv\u5df2\u7ecf\u8bbf\u95ee\u8fc7 \n                      Low[u]=min(Low[u],Dfn[v]);  //\u5224\u65ad\u662f\u5426\u80fd\u591f\u66f4\u65b0Low \n       }\n}\n\nvoid DFS(int u)//DFS\u641c\u7d22\u4e00\u8fb9\u8054\u901a\u5757 \n{\n        int v;\n        \n        vis[u]=Group; //\u6807\u8bb0\u7ec4 \n        Num++;        //\u975e\u5272\u70b9\u6570 \n                   \n        for(int i=h[u];i!=-1;i=e[i].next)//\u8bbf\u95ee\u5b50\u8282\u70b9 \n        {\n               v=e[i].v;\n               if(cut[v]&&vis[v]!=Group) //\u5982\u679cv\u662f\u5272\u70b9\u5e76\u4e14v\u6ca1\u6709\u5728\u8fd9\u4e2a\u5206\u7ec4\u5185\u88ab\u8bbf\u95ee\u8fc7 \n               {\n                        Cut++;         //\u5272\u70b9\u6570\u589e\u52a0 \n                        vis[v]=Group;  //\u6807\u8bb0\u5206\u7ec4 \n               }\n               if(!vis[v])     //\u5982\u679cvis\u672a\u88ab\u8bbf\u95ee\u8fc7 \n                   DFS(v);     //\u641c\u7d22v \n        }\n}\n\nint main()\n{\n       long long u,v;       \n       Case=1;\n       \n       while(cin>>m&&m)\n       {\n              Init(); //\u521d\u59cb\u5316 \n              \n           for(int i=1;i<=m;++i)//\u8bfb\u5165\u8fb9 \n           {\n                   cin>>u>>v;\n                   Add(u,v);\n                   Add(v,u);\n                   n=max(n,v);\n                   n=max(n,u);\n           }\n           \n           for(int i=1;i<=n;++i)//Tarjan\u7b97\u6cd5\u6c42\u5272\u70b9 \n           {\n                     if(!Dfn[i])\n                     {\n                              root=i;\n                              rs=0;\n                              Tarjan(i,i);\n                              if(rs>=2)       //\u5982\u679c\u5b50\u6811\u6839\u8282\u70b9\u7684\u513f\u5b50\u6570\u4e0d\u5c11\u4e8e2\u4e2a\uff0c\u5219\u8fd9\u4e2a\u6839\u8282\u70b9\u624d\u662f\u5272\u70b9 \n                                  cut[i]=true;\n                     }\n           }\n           \n           for(int i=1;i<=n;++i)//\u679a\u4e3e\u6240\u6709\u70b9\u6765\u641c\u7d22\u5206\u7ec4 \n           {\n                    if(!vis[i]&&!cut[i])//\u5982\u679ci\u8282\u70b9\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\u5e76\u4e14\u4e0d\u662f\u5272\u70b9 \n                    {\n                            ++Group;  //\u589e\u52a0\u4e00\u4e2a\u5206\u7ec4 \n                            Num=Cut=0;\n                            DFS(i);   //\u641c\u7d22\u8fd9\u4e2a\u5206\u7ec4 \n                            \n                            if(Cut==0)//\u5982\u679c\u6ca1\u6709\u5272\u70b9 \n                            {\n                                      Ans1+=2;//\u81f3\u5c11\u9700\u8981\u5efa\u7acb\u4e24\u4e2a\u51fa\u53e3 \n                                      Ans2*=(Num-1)*Num/2;//\u4ece\u4efb\u610f\u975e\u5272\u70b9\u7684\u5730\u65b9\u9009\u62e9\u4e24\u4e2a\u70b9\u5efa\u7acb \n                            }\n                            \n                            if(Cut==1)//\u5982\u679c\u8fd9\u4e2a\u5206\u7ec4\u53ea\u6709\u4e00\u4e2a\u5272\u70b9 \n                            {\n                                Ans1+=1;  //\u53ea\u9700\u8981\u5728\u5206\u7ec4\u5185\u8bbe\u7acb\u4e00\u4e2a\u51fa\u53e3 \n                                Ans2*=Num;//\u53ef\u4ee5\u8bbe\u7acb\u5728\u4efb\u610f\u4e00\u4e2a\u975e\u5272\u70b9\u7684\u5730\u65b9 \n                            }\n                            \n                            if(Cut>=2)//\u5982\u679c\u6709\u4e24\u4e2a\u53ca\u4ee5\u4e0a\u4e2a\u5272\u70b9\uff0c\u5219\u65e0\u9700\u5efa\u7acb\uff0c\u53ef\u4ee5\u76f4\u63a5\u5230\u8fbe\u5176\u4ed6\u8054\u901a\u5757 \n                            {\n                                ; \n                        } \n                    }\n           }\n           \n           cout<<\"Case \"<<Case++<<\": \"<<Ans1<<\" \"<<Ans2<<endl;//\u8f93\u51fa\u7ed3\u679c     \n       }\n       \n       \n       return 0; \n}\n\nvoid Init()\n{\n       memset(h,-1,sizeof(h));\n       memset(Dfn,0,sizeof(Dfn));\n       memset(Low,0,sizeof(Low));\n       memset(cut,0,sizeof(cut));\n       memset(vis,0,sizeof(vis));\n       Time=cnt=n=Ans1=Group=0;\n       Ans2=1;\n}\n```",
        "postTime": 1496326207,
        "uid": 21283,
        "name": "yybyyb",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3225 \u3010[HNOI2012]\u77ff\u573a\u642d\u5efa\u3011"
    },
    {
        "content": "\u00a0 \u00a0\u77ff\u70b9\u574d\u584c\u6211\u4eec\u53ef\u4ee5\u62bd\u8c61\u4e3a\u5c06\u8fd9\u4e2a\u70b9\u5220\u53bb\u3002\u8bbe\u56fe\u4e2d\u539f\u6765\u6709k\u4e2a\u8054\u901a\u5757\uff0c\u5982\u679c\u5220\u6389\u5272\u70b9\uff0c\u90a3\u4e48\u73b0\u5728\u5c31\u6709\u4e86k+1\u4e2a\u8054\u901a\u5757\uff0c\u5982\u679c\u4e0d\u662f\u5272\u70b9\uff0c\u8054\u901a\u5757\u6570\u76ee\u4e0d\u53d8\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\uff0c\u5272\u53bb\u4efb\u4e00\u4e2a\u5272\u70b9\uff0c\u5272\u70b9\u4e24\u8fb9\u7684\u8054\u901a\u5757\u90fd\u9700\u8981\u8bbe\u4e00\u4e2a\u9003\u751f\u53e3\u3002\uff08\u5173\u4e8e[\u600e\u4e48\u6c42\u5272\u70b9](http://www.wjyyy.top/)\uff09\u6211\u4eec\u5148\u6765\u5206\u6790\u51e0\u4e2a\u60c5\u51b5\uff1a\n\n### 1.\u94fe\u4e0a\n\n![\u8fd9\u662f\u4e00\u6761\u94fe](http://www.wjyyy.top/wp-content/uploads/2018/06/QQ\u622a\u56fe20180608080620.png)\n\n\u00a0 \u00a0\u53ef\u4ee5\u770b\u51fa\uff0c\u56fe\u4e2d\u67095\u4e2a\u5272\u70b9\uff1a2\uff0c3\uff0c4\uff0c5\uff0c6\u3002\u5982\u679c\u4e0d\u662f\u5272\u70b9\u7684\u70b9\u574d\u584c\u4e86\uff0c\u4f8b\u59821\uff0c\u90a3\u4e48\u53ea\u8981\u57282-7\u4e2d\u4efb\u610f\u8bbe\u7f6e\u4e00\u4e2a\u5373\u53ef\u3002\u4f46\u5982\u679c\u662f\u5272\u70b9\u574d\u584c\u4e86\uff0c\u4e24\u8fb9\u7684\u4eba\u53ea\u80fd\u5f80\u4e24\u5934\u8dd1\uff0c\u800c\u6211\u4eec\u770b\u5230\uff0c\u5728\u4e0a\u56fe\u4e2d\uff0c\u53ea\u8981\u8bbe\u7f6e\u4e24\u4e2a\u70b9\uff1a\u4e00\u5934\u4e00\u5c3e\u7684\u9003\u751f\u51fa\u53e3\uff0c\u5c31\u53ef\u4ee5\u6ee1\u8db3\u4efb\u4f55\u574d\u584c\u60c5\u51b5\u3002\n\n\n\n### 2.\u73af\n\n\u00a0 \u00a0\u5982\u679c\u5728\u4e00\u4e2a\u73af\u4e0a\uff0c\u6bcf\u4e24\u4e2a\u70b9\u90fd\u53ef\u4ee5\u4e92\u76f8\u76f4\u8fbe\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u4efb\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u9003\u751f\u51fa\u53e3\uff0c\u5373\u53ef\u6ee1\u8db3\u5176\u4ed6\u6240\u6709\u70b9\u5230\u8fbe\u8fd9\u4e2a\u5730\u65b9\u3002\u4f46\u662f\u8981\u8003\u8651\u9003\u751f\u51fa\u53e3\u574d\u584c\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u4e00\u4e2a\u73af\u4e0a\u8981\u8bbe\u7f6e\u4e24\u4e2a\u9003\u751f\u51fa\u53e3\uff0c\u53ef\u4ee5\u4f7f\u65e0\u8bba\u9003\u751f\u51fa\u53e3\u662f\u5426\u574d\u584c\uff0c\u90fd\u6709\u4e00\u4e2a\u9003\u751f\u51fa\u53e3\u53ef\u7528\u3002n\u4e2a\u70b9\u4e2d\u4efb\u9009\u4e24\u4e2a\u70b9\uff0c\u65b9\u6848\u6570\u662f$C^2_n =\\frac{n(n-1)}{2}$\n\n\n\n### 3.\u4e00\u822c\u60c5\u51b5\n\n\u00a0 \u00a0\u5272\u70b9\u4f1a\u5206\u6574\u4e2a\u56fe\u4e3a\u591a\u4e2a\u53cc\u8fde\u901a\u5206\u91cf\uff0c\u6211\u4eec\u5c06\u6bcf\u4e2a\u53cc\u8054\u901a\u5206\u91cf\u770b\u4f5c\u6574\u4e2a\u8054\u901a\u5757\uff0c\u90a3\u4e48\u4e00\u4e2a\u53cc\u8fde\u901a\u5206\u91cf\u4e2d\u53ea\u9700\u8981\u8bbe\u7f6e\u4e00\u4e2a\u70b9\uff0c\u5c31\u53ef\u4ee5\u6ee1\u8db3\u8fd9\u4e2a\u5206\u91cf\u91cc\u7684\u70b9\u80fd\u591f\u8dd1\u5230\u8fd9\u4e2a\u51fa\u53e3\u6765\u3002\u540c\u4e0a\uff0c\u6211\u4eec\u8fd8\u8981\u8003\u8651\u51fa\u53e3\u574d\u584c\u7684\u60c5\u51b5\u3002\u5728\u8fd9\u91cc\uff0c\u56e0\u4e3a\u53ea\u4f1a\u574d\u584c\u4e00\u4e2a\u70b9\uff0c\u6240\u4ee5\u5982\u679c\u51fa\u53e3\u574d\u584c\u4e86\uff0c\u5272\u70b9\u5c31\u4e0d\u4f1a\u574d\u584c\uff0c\u8fd9\u4e2a\u5206\u91cf\u4e2d\u7684\u5176\u4ed6\u70b9\u53ef\u4ee5\u901a\u8fc7\u5272\u70b9\u8dd1\u5230\u53e6\u5916\u7684\u53cc\u8fde\u901a\u5206\u91cf\u4e2d\uff0c\u6b64\u65f6\u7b49\u4ef7\u4e8e\u540c\u4e00\u4e2a\u53cc\u8fde\u901a\u5206\u91cf\u3002\u6211\u4eec\u53ef\u4ee5\u7ee7\u7eed\u5c06\u8fd9\u4e9b\u70b9\u62bd\u8c61\u4e3a\u4e00\u4e2a\u6982\u5ff5\uff1a\u53f6\u5b50\u8fde\u901a\u5757\u3002\n\n\n\n### 4.\u53f6\u5b50\u8fde\u901a\u5757\n\n\u00a0 \u00a0\u53f6\u5b50\u8282\u70b9\u662f\u6ca1\u6709\u51fa\u5ea6\u7684\u70b9\uff0c\u5165\u5ea6\u4e3a1\uff0c\u4e5f\u5c31\u662f\u53ea\u8fde\u4e86\u4e00\u6761\u8fb9\u3002\u90a3\u4e48\u53f6\u5b50\u8fde\u901a\u5757\u7684\u6982\u5ff5\u5c31\u662f\uff1a\u53ea\u8fde\u63a5\u4e86\u4e00\u4e2a\u5272\u70b9\u7684\u53cc\u8fde\u901a\u5206\u91cf\u3002 \u00a0\u540c\u65f6\uff0c\u5bf9\u4e8e\u8fde\u63a5\u4e24\u4e2a\u5272\u70b9\u7684\u53cc\u8fde\u901a\u5206\u91cf\uff0c\u5176\u4e2d\u4e00\u4e2a\u5272\u70b9\u574d\u584c\uff0c\u90a3\u4e48\u53e6\u4e00\u4e2a\u5272\u70b9\u5c31\u4e0d\u4f1a\u574d\u584c\uff0c\u53ef\u4ee5\u901a\u8fc7\u53e6\u4e00\u4e2a\u5272\u70b9\u5408\u5e76\u5230\u53e6\u5916\u4e00\u4e2a\u53cc\u8fde\u901a\u5206\u91cf\u4e2d\u3002\u800c\u53f6\u5b50\u8fde\u901a\u5757\u5c31\u4e0d\u884c\u4e86\uff0c\u5982\u679c\u53f6\u5b50\u8fde\u901a\u5757\u7684\u5272\u70b9\uff08\u53f6\u5b50\u7684\u7236\u4eb2\uff09\u88ab\u5207\u65ad\uff0c\u90a3\u4e48\u5b83\u5c31\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u8fde\u901a\u5757\uff0c\u6240\u4ee5\u8fd9\u91cc\u4e00\u5b9a\u8981\u8bbe\u7f6e\u4e00\u4e2a\u9003\u751f\u51fa\u53e3\u3002\u5728\u8fd9\u91cc\u8bbe\u7f6e\u4e00\u4e2a\u9003\u751f\u51fa\u53e3\uff0c\u6709weight\u79cd\u9009\u62e9\uff08weight\u662f\u8282\u70b9\u6570\uff09\u3002\u6839\u636e\u4e58\u6cd5\u539f\u7406\uff0c\u6700\u5c0f\u4e2a\u6570\u662f\u53f6\u5b50\u8fde\u901a\u5757\u7684\u4e2a\u6570\uff1b\u603b\u65b9\u6848\u6570\u662f\u6240\u6709\u53f6\u5b50\u8fde\u901a\u5757\u7684weight\u4e4b\u79ef\u3002\n\n\n\n\u00a0 \u00a0\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad\u4e00\u4e2a\u8fde\u901a\u5757dfs\u540e\u662f\u5426\u53ea\u627e\u5230\u4e00\u4e2a\u5272\u70b9\uff08\u7528del\u6570\u7ec4\u5b58\u8d77\u6765\uff09\n\n\n\nCode\uff1a\n\n```pascal\n#include<iostream>\n#include<cstring>\n#include<cstdio>\nusing std::min;\nusing std::max;\nusing std::cin;\nusing std::cout;\nstruct node\n{\n    int n;\n    node *nxt;\n    node(int n)\n    {\n        this->n=n;\n        nxt=NULL;\n    }\n    node()\n    {\n        nxt=NULL;\n    }\n};\nnode head[550],*tail[550];\nint dfn[550],low[550],cnt=0;//tarjan\u6838\u5fc3\u6570\u7ec4\nint n,m;\nbool del[550];\nvoid tarjan(int x,int from)//\u6c42\u5272\u70b9\u6570\n{\n    int son=0;\n    dfn[x]=++cnt;\n    low[x]=dfn[x];\n    node *p=&head[x];\n    while(p->nxt!=NULL)\n    {\n        p=p->nxt;\n        if(dfn[p->n])\n            low[x]=min(low[x],dfn[p->n]);\n        else\n        {\n            son++;\n            tarjan(p->n,x);\n            low[x]=min(low[x],low[p->n]);\n            if(from!=0&&low[p->n]>=dfn[x])\n                del[x]=true;//del=true\u5c31\u662f\u5272\u70b9\n            if(from==0&&son>1)\n                del[x]=true;\n        }\n    }\n}\nbool app[550];//\u662f\u5426\u51fa\u73b0\u8fc7\uff0c\u5224\u65ad\u4e00\u5171\u6709\u591a\u5c11\u4e2a\u70b9\nunsigned long long sum=0;//sum<1<<64\nint num=0,w=0;\nbool used[550];\nbool flag;\nvoid dfs(int x)//\u5224\u65ad\u662f\u5426\u4e3a\u53f6\u5b50\u8fde\u901a\u5757\n{\n    w++;//\u5b50\u8282\u70b9\u4e2a\u6570\n    node *p=&head[x];\n    while(p->nxt!=NULL)\n    {\n        p=p->nxt;\n        if(used[p->n])//\u904d\u5386\u8fc7\u7684\u70b9\u6216\u51fa\u53d1\u5272\u70b9\n            continue;\n        if(del[p->n])//\u627e\u5230\u53e6\u4e00\u4e2a\u975e\u51fa\u53d1\u5272\u70b9\u7684\u5272\u70b9\uff0c\u8bf4\u660e\u4e0d\u662f\u53f6\u5b50\u8fde\u901a\u5757\n        {\n            flag=true;\n            continue;\n        }\n        used[p->n]=true;\n        dfs(p->n);\n    }\n    return;\n}\n\nint main()\n{\n    int u,v,t=0;\n    scanf(\"%d\",&m);\n    while(m!=0)\n    {\n        t++;\n        cnt=0;\n        n=0;\n        num=0;\n        sum=1;\n        memset(app,0,sizeof(app));\n        memset(del,0,sizeof(del));\n        memset(dfn,0,sizeof(dfn));\n        memset(used,0,sizeof(used));\n        for(int i=1;i<=544;i++)//\u6700\u591a500\u4e2a\u70b9\n            tail[i]=&head[i];\n        for(int i=1;i<=m;i++)\n        {\n            scanf(\"%d%d\",&u,&v);\n            app[u]=true;\n            app[v]=true;\n            if(u>n)\n                n=u;\n            if(v>n)\n                n=v;\n            tail[u]->nxt=new node(v);\n            tail[u]=tail[u]->nxt;\n            tail[v]->nxt=new node(u);\n            tail[v]=tail[v]->nxt;\n        }\n\n\n        for(int i=1;i<=n;i++)\n            if(!dfn[i])\n                tarjan(i,0);\n\n        for(int i=1;i<=n;i++)\n            if(del[i]&&app[i])\n            {\n                used[i]=true;\n                node *p=&head[i];\n                while(p->nxt!=NULL)\n                {\n                    p=p->nxt;\n                    if(!del[p->n]&&!used[p->n])\n                    {\n                        w=0;\n                        used[p->n]=true;\n                        flag=0;\n                        dfs(p->n);\n                        if(!flag)//\u4e58\u6cd5\u539f\u7406\n                        {\n                            num++;//\u8054\u901a\u5757\u4e2a\u6570\n                            sum*=w;//\u65b9\u6848\u4e2a\u6570\n                        }\n\n                    }\n                }\n                used[i]=false;//\n            }\n        if(num==0)//\u5982\u679c\u6ca1\u6709\u5272\u70b9\n        {\n            num=2;\n            if(n-1==m)\n                sum=2;\n            else\n                sum=n*(n-1)/2;//\u52a0\u6cd5\u539f\u7406\n        }\n        printf(\"Case %d: %d \",t,num);\n        cout<<sum<<std::endl;\n        scanf(\"%d\",&m);\n    }\n    return 0;\n}\n```\n\n\n\n\u6ce8\uff1a\u8fd9\u4e2a\u9898\u7ed9\u51fa\u7684\u56fe\u5e94\u8be5\u662f\u8fde\u901a\u56fe\uff0c\u4e0d\u7136\u5982\u679c\u4e00\u4e2a\u77ff\u573a\u6709\u4e24\u4e2a\u77ff\u533a\uff0c\u6bd4\u5982\u4e24\u4e2a\u4e0d\u76f8\u4ea4\u7684\u73af\uff0c\u5c31\u9700\u8981\u5bf9\u6bcf\u4e2a\u73af\u5355\u72ec\u4e58\u4e00\u6b21\uff0c\u8fd9\u91cc\u6ca1\u6709\u8003\u8651\u3002",
        "postTime": 1528418505,
        "uid": 63539,
        "name": "wjyyy",
        "ccfLevel": 9,
        "title": "\u3010tarjan\u3011\u3010\u8fde\u901a\u56fe\u3011P3225 [HNOI2012]\u77ff\u573a\u642d\u5efa"
    },
    {
        "content": "/\\*\n\u9996\u5148\u770b\u5230\u5272\u70b9\u5c31\u662fTarjan\u641e \u4f46\u662f\u600e\u4e48\u641e\n\n\u9996\u5148\u5047\u8bbe\u6211\u4eec\u628a\u6240\u6709\u7684\u70b9\u53cc\u90fd\u7f29\u70b9 \u90a3\u4e48\u6211\u4eec\u4e00\u5b9a\u53ef\u4ee5\u5f97\u5230\u4e00\u68f5\u6811 \u7136\u540e\u6211\u4eec\u5c31\u4f1a\u53d1\u73b0\n\n1.\u53f6\u5b50\u8282\u70b9(\u53ea\u542b\u6709\u4e00\u4e2a\u5272\u70b9\u7684\u70b9\u53cc)\u5fc5\u987b\u5efa \u56e0\u4e3a\u53f6\u5b50\u8282\u70b9\u5982\u679c\u4e0d\u5efa \u4e00\u65e6\u5272\u70b9\u88ab\u7206\u5c31\u6b7b\u7fd8\u4e86\n\n2.\u975e\u53f6\u8282\u70b9(\u542b\u6709\u4e24\u4e2a\u6216\u4e24\u4e2a\u4ee5\u4e0a\u7684\u5272\u70b9\u7684\u70b9\u53cc)\u4e0d\u7528\u5efa \u56e0\u4e3a\u5373\u4f7f\u4e00\u4e2a\u5272\u70b9\u88ab\u7206\u4e86\u4e5f\u53ef\u4ee5\u6cbf\u7740\u53e6\u4e00\u4e2a\u5272\u70b9\u8d70\u5230\u4e00\u4e2a\u53f6\u8282\u70b9\n\n3.\u8fd8\u6709\u4e00\u79cd\u60c5\u51b5\u5c31\u662f\u6574\u4e2a\u8054\u901a\u5757\u90fd\u662f\u70b9\u53cc(\u5373\u4e0d\u542b\u5272\u70b9\u7684\u70b9\u53cc) \u8fd9\u6837\u6211\u4eec\u8ba8\u8bba\u70b9\u53cc\u7684\u5927\u5c0f\n\n\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u70b9 \u90a3\u4e48\u8fd9\u4e2a\u70b9\u5fc5\u987b\u5efa \u6570\u636e\u6ca1\u6709\u5361\u8fd9\u4e2a\u7684\u70b9\u6240\u4ee5\u6211\u6ca1\u5199(\u5176\u5b9e\u662f\u6211\u5fd8\u5199\u4e86 \u7136\u540e\u8fd8\u8fc7\u4e86)\n\n\u5982\u679c\u6709\u4e24\u4e2a\u6216\u4e24\u4e2a\u4ee5\u4e0a\u7684\u70b9 \u90a3\u4e48\u8981\u5efa\u4e24\u4e2a \u4e00\u4e2a\u88ab\u7206\u4e86\u8fd8\u53ef\u4ee5\u8d70\u53e6\u4e00\u4e2a\n\n\u65b9\u6848\u6570\u5c31\u662f\u4e58\u6cd5\u539f\u7406\u7684\u95ee\u9898\u4e86 \u6ce8\u610f\u53f6\u8282\u70b9\u90a3\u91cc\u51fa\u53e3\u4e0d\u80fd\u5efa\u5728\u5272\u70b9\u4e0a\n\n\u6240\u4ee5\u5148Tarjan\u6c42\u5272\u70b9\u518ddfs\u4e00\u4e0b\u6bcf\u4e2a\u8054\u901a\u5757\u5c31\u597d\u4e86\u3002\n\n\\*/\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#define ll long long\nusing namespace std;\nint head[505],dfn[505],low[505],vis[505],stack[505];\nbool cut[505],in_stack[505];\nint n,m,cnt,num,tot,deg,ans1,T,cases,root,top;\nll ans2;\nstruct node\n{\n    int from;\n    int to;\n    int next;\n}e[1010];\ninline void first()\n{\n    memset(head,0,sizeof(head));\n    memset(dfn,0,sizeof(dfn));\n    memset(low,0,sizeof(low));\n    memset(cut,0,sizeof(cut));\n    memset(vis,0,sizeof(vis));\n    top=cnt=tot=n=ans1=T=0; ans2=1;\n}\ninline void insert(int from,int to)\n{\n    e[++num].from=from;\n    e[num].to=to;\n    e[num].next=head[from];\n    head[from]=num;\n}\ninline int read()\n{\n    int x=0,f=1; char c=getchar();\n    while (c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n    while (c>='0'&&c<='9'){x=x*10+c-'0';c=getchar();}\n    return x*f;\n}\nvoid Tarjan(int now,int father)//\u6c42\u5272\u70b9 \n{\n    dfn[now]=low[now]=++tot;\n    for(int i=head[now];i;i=e[i].next)\n        {\n            int v=e[i].to;\n            if(!dfn[v])\n            {\n                Tarjan(v,now);\n                low[now]=min(low[now],low[v]);\n                if(low[v]>=dfn[now])\n                {\n                    if(now==root) deg++;\n                    else cut[now]=true;\n                }\n            }\n            else if(v!=father) low[now]=min(low[now],dfn[v]);//\u4e0d\u8981\u8ddf\u6c42\u73af\u6df7\u4e86 \u5177\u4f53\u539f\u7406\u53bb\u7f51\u4e0a\u627e \n        }\n}\nvoid dfs(int x)//\u904d\u5386\u6bcf\u4e2a\u8fde\u901a\u5757 \n{\n    vis[x]=T;//\u6807\u8bb0 \n    if(cut[x]) return;\n    cnt++;//\u6570\u91cf \n    for(int i=head[x];i;i=e[i].next)\n    {\n        int v=e[i].to;\n        if(cut[v]&&vis[v]!=T) num++,vis[v]=T;//\u7edf\u8ba1\u5272\u70b9\u6570\u76ee\u3002 \n        //\u5982\u679c\u662f\u5272\u70b9\u4e14\u6807\u8bb0\u4e0d\u4e0e\u904d\u5386\u7684\u7684\u8fde\u901a\u5757\u76f8\u540c\u5c31\u4fee\u6539\u6807\u8bb0\u3002 \n        if(!vis[v])dfs(v);\n    }\n}\nint main()\n{\n    m=read();\n    while (m)\n    {\n        first();\n        for (int i=1;i<=m;i++)\n        {\n            int u=read(),v=read();\n            n=max(n,max(u,v));//\u8fd9\u4e2a\u5730\u65b9\u8981\u5904\u7406\u4e00\u4e0b \n            insert(u,v); insert(v,u);\n        }\n        for (int i=1;i<=n;i++)\n        {\n            if (!dfn[i]) Tarjan(root=i,0);\n            if (deg>=2) cut[root]=1;//\u6839\u8282\u70b9\u7684\u5272\u70b9 \n            deg=0;//\u4e0d\u8981\u5fd8\u8bb0\u662f\u591a\u7ec4\u6570\u636e \n        }\n        for (int i=1;i<=n;i++)\n            if (!vis[i]&&!cut[i])//\u4e0d\u662f\u5272\u70b9 \n            {\n                T++; cnt=num=0;//T\u4e3a\u8fde\u901a\u5757\u7684\u6807\u8bb0 \n                dfs(i);\n                if (!num) ans1+=2,ans2*=cnt*(cnt-1)/2;//\u5efa\u4e24\u4e2a \u522b\u5fd8\u8bb0\u9664\u4ee5\u4e8c \u56e0\u4e3a\u4e24\u4e2a\u5efa\u7acb\u7684\u51fa\u53e3\u6ca1\u6709\u5dee\u5f02 \n                if (num==1) ans1++,ans2*=cnt;//\u5efa\u4e00\u4e2a \n            }\n        printf(\"Case %d: %d %lld\\n\",++cases,ans1,ans2);\n        m=read();\n    }\n    return 0;\n}\n```",
        "postTime": 1486455841,
        "uid": 20833,
        "name": "\u5b89\u597d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3225 \u3010[HNOI2012]\u77ff\u573a\u642d\u5efa\u3011"
    },
    {
        "content": "## \u8fd9\u9053\u9898\u76ee\u771f\u662f\u633a\u96be\u7684\uff1a\u4e3b\u8981\u7684\u7b97\u6cd5\u5c31\u662f$tarjan$,\u4ee5\u53ca\u70b9\u53cc\u8fde\u901a\u4ee5\u53ca\u6700\u540e\u5bf9\u7b54\u6848\u7684\u5904\u7406\u7528\u5230\u7684\u7ec4\u5408\u6570\u5b66\u3002\n\n### \u9898\u76ee\u4f20\u9001\u95e8\uff1a[P3225 [HNOI2012]\u77ff\u573a\u642d\u5efa](https://www.luogu.org/problemnew/show/P3225)\n### \u9898\u76ee\u5927\u6982\u610f\u601d\uff1a\u5c31\u662f\u6709\u5f88\u591a\u4e2a\u70b9\uff0c\u5728\u67d0\u4e2a\u65f6\u5019\u4e00\u4e2a\u70b9\u5c06\u4f1a\u584c\u9677\uff0c\u4f60\u8981\u5efa\u9020\u4e00\u4e9b\u70b9\uff0c\u4f7f\u4ed6\u4eec\u5728\u90a3\u4e2a\u70b9\u584c\u9677\u65f6\u6210\u529f\u9003\u8131\uff01\n### \u6b64\u65f6\u6211\u4eec\u8981\u5206\u7c7b\u8ba8\u8bba\u4e09\u79cd\u60c5\u51b5\uff1a\n### \u60c5\u51b5\u4e00\uff1a\u5728\u4e00\u4e2a\u5f3a\u8fde\u901a\u4e2d\u6ca1\u6709\u4e00\u4e2a\u5272\u70b9\uff08\u89c1\u4e0b\u56fe\uff09\n![](https://cdn.luogu.com.cn/upload/pic/59701.png)\n### \u90a3\u4e48\u6b64\u65f6\u81f3\u5c11\u8981\u5efa\u7acb\u4e24\u4e2a\u70b9\uff0c\u4f7f\u5f97\u5728\u70b9\u574d\u584c\u65f6\u80fd\u987a\u5229\u9003\u8131\uff0c\u90a3\u4e48\u6b64\u65f6\u8981\u5efa\u7acb\u7684\u70b9\u7684\u4e2a\u6570\u5c31\u662f$2*sum1$($sum1$\u5c31\u662f\u5f3a\u8fde\u901a\u7684\u4e2a\u6570)\uff0c\u800c\u65b9\u6848\u6570\u5219\u662f$C(n,2)->(n*(n-1)/2)$\n\n### \u60c5\u51b5\u4e8c\uff1a\u5728\u4e00\u4e2a\u5f3a\u8fde\u901a\u4e2d\u6709\u4e00\u4e2a\u5272\u70b9\uff08\u89c1\u4e0b\u56fe\uff09\n![](https://cdn.luogu.com.cn/upload/pic/59702.png)\n### \u7eff\u8272\u7684\u70b9\u5373\u4e3a\u5272\u70b9\uff0c\u6b64\u65f6\u5728\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u53ea\u8981\u5efa\u7acb$1$\u4e2a\u5373\u53ef\uff0c\u90a3\u4e48\u603b\u5171\u9700\u8981\u5efa\u7acb$sum1$\u4e2a\uff08$sum1$\u610f\u4e49\u540c\u4e0a\uff09\uff1b\n### \u60c5\u51b5\u4e09\uff1a\u5728\u4e00\u4e2a\u5f3a\u8fde\u901a\u4e2d\u6709\u4e24\u4e2a\u5272\u70b9\uff08\u89c1\u4e0b\u56fe\uff09\n![](https://cdn.luogu.com.cn/upload/pic/59704.png)\n### \u7eff\u8272\u7684\u70b9\u5373\u4e3a\u5272\u70b9\uff0c\u6b64\u65f6\u5c31\u4e0d\u9700\u8981\u5efa\u7acb\u4efb\u4f55\u4e1c\u897f\uff0c\u56e0\u4e3a\u53ef\u4ee5\u9003\u8131\uff0c\u4e92\u76f8\u8fde\u901a\u7684\uff0c\u6b64\u65f6\u5c31\u65e0\u9700\u64cd\u4f5c\n### \u4ee5\u4e0a\u5c31\u662f\u672c\u9898\u7684\u5173\u952e\u4e4b\u4e00\uff0c\u4e0b\u4e00\u6b65\u5c31\u662f\u70b9\u53cc\uff0c\u70b9\u53cc\u5c31\u5f88\u7b80\u5355\u5566\uff0c\u6a21\u677f\u4e00\u53d1\u5c31\u597d\u5566\uff01\u90a3\u6211\u5c31\u8d34\u4ee3\u7801\u5566\u5427\uff0c\u6709\u70b9\u957f\u54e6\uff01\n```cpp\n// luogu-judger-enable-o2\n#include <bits/stdc++.h>\n#define int long long\n#define re register\nusing namespace std;\nconst int maxn=5e2+5;\nstruct Node \n{\n\tint u,v;\n};\nstruct node\n{\n\tint nex,to;\n}ee[maxn];\nvector<int> ma[maxn]; //\u7528\u6765\u5b58\u50a8\u8be5\u70b9\u53cc\u8054\u901a\u5206\u91cf\u7684\u6240\u6709\u9876\u70b9 \nstack<Node> st;//STL\u6808\nint cut[maxn],dfn[maxn];\nint col[maxn],siz[maxn];\nint head[maxn],cnt,now,sum,rt,top;\nint res1,res2,Case,wyy[maxn],iscut,n;\ninline void add_edge(int u,int v) \n{\n\tee[++cnt].nex=head[u];\n\thead[u]=cnt;\n\tee[cnt].to=v;\n}//\u524d\u5411\u661f\u8fde\u8fb9\ninline int read() \n{\n    int z=0,f=1;char k;\n    while(k<'0'||k>'9'){if(k=='-')f=-1;k=getchar();}\n    while(k>='0'&&k<='9'){z=(z<<3)+(z<<1)+k-'0';k=getchar();}\n    return z*f;\n}\ninline int tarjan(int u,int fa) //\u70b9\u53cc\u6a21\u677f\uff0c\u5927\u81f4\u4ecb\u7ecd\u4e00\u4e0b\n// u\u662f\u5f53\u524d\u70b9\uff0cfa\u662f\u7236\u4eb2\u70b9; \n{\n\tint lowu=dfn[u]=++now;\n\tint son=0;\n\tfor ( re int i=head[u];i;i=ee[i].nex )\n\t{\n\t\tint v=ee[i].to;\n\t\tNode e=(Node){u,v};\n\t\tif(!dfn[v])\n\t\t{\n\t\t\tson++;\n\t\t\tst.push(e);\n\t\t\tint lowv=tarjan(v,u);\n\t\t\tlowu=min(lowu,lowv);\n\t\t\tif(lowv>=dfn[u])\n\t\t\t{\n\t\t\t\tcut[u]=1;//\u662f\u5272\u70b9\n\t\t\t\tiscut=iscut+1;//\u5272\u70b9\u6570\u52a01\n\t\t\t\tma[iscut].clear();\n\t\t\t\tfor(;;)\n\t\t\t\t{\n\t\t\t\t\tNode x=st.top();\n\t\t\t\t\tst.pop();\n\t\t\t\t\tif(wyy[x.u]!=iscut)\n\t\t\t\t\t{\n\t\t\t\t\t\tma[iscut].push_back(x.u);\n\t\t\t\t\t\twyy[x.u]=iscut;\n\t\t\t\t\t}\n\t\t\t\t\tif(wyy[x.v]!=iscut)\n\t\t\t\t\t{\n\t\t\t\t\t\tma[iscut].push_back(x.v);\n\t\t\t\t\t\twyy[x.v]=iscut;\n\t\t\t\t\t}\n\t\t\t\t\tif(x.u==u and x.v==v) break;\n\t\t\t\t}\n\t\t\t}\n\t\t} \n\t\telse \n\t\t\tif(dfn[v]<dfn[u] and v!=fa) \n\t\t\t{\n\t\t\t\tst.push(e);\n\t\t\t\tlowu=min(lowu,dfn[v]);\n\t\t\t}\n\t}\n\tif(fa<0 and son==1) cut[u]=0;////\u5982\u679cu\u662f\u6839\u8282\u70b9\uff0cu\u6709>=2\u4e2a\u5b69\u5b50\uff1bu\u662f\u5272\u70b9 \n\treturn lowu;\n}\ninline void found(int x) \n{\n\tmemset(dfn,0,sizeof(dfn));\n\tmemset(cut,0,sizeof(cut));\n\tmemset(wyy,0,sizeof(wyy));\n\tiscut=0,now=0;\n\tfor ( re int i=1;i<=n;i++ ) \n\t\tif(!dfn[i]) \n\t\t\ttarjan(i,-1);\n}\ninline void Init() \n{\n\tres1=0,res2=1,rt=0,cnt=0;\n\tmemset(head,0,sizeof(head));\n}\nsigned main() \n{\n\twhile(scanf(\"%d\",&n),n) \n\t{\n\t\tInit();\n\t\tfor ( re int i=1;i<=n;i++ ) \n\t\t{\n\t\t\tint u=read(),v=read();\n\t\t\trt=max(rt,u);\n\t\t\trt=max(rt,v);\n\t\t\tadd_edge(u,v);\n\t\t\tadd_edge(v,u);//\u8fde\u8fb9\n\t\t}\n\t\tfound(rt);\n\t\tfor ( re int i=1;i<=iscut;i++ )\n\t\t{\n\t\t\tint num=0;\n\t\t\tfor ( re int j=0;j<ma[i].size();j++ ) \n\t\t\t{\n//\t\t\t\tcout<<cut[ma[i][j]]<<\" \";\n\t\t\t\tif(cut[ma[i][j]]) num+=1;//\u7edf\u8ba1\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\u5272\u70b9\u7684\u6570\u91cf\n\t\t\t}\n            //\u9ad8\u80fd\uff1a\u5206\u7c7b\u8ba8\u8bba\n\t\t\tif(num>=2) \n\t\t\t{\n\t\t\t\t//I can do nothing\n\t\t\t}\n\t\t\tif(num==1) \n\t\t\t{\n\t\t\t\tres1=res1+1;\n\t\t\t\tres2=res2*(ma[i].size()-1);\n\t\t\t}\n\t\t\tif(num==0) \n\t\t\t{\n\t\t\t\tres1=res1+2;\n\t\t\t//\tcout<<ma[i].size()<<endl;\n\t\t\t\tres2=res2*(ma[i].size()*(ma[i].size()-1)/2);//C(n,2)\n\t\t\t}\n\t\t}\n\t\tfor ( re int i=1;i<=rt;i++ )\n\t\t{\n\t\t\tif(!wyy[i]) res1=res1+1;\n\t\t}// \u770b\u770b\u90a3\u4e9b\u5b64\u7acb\u7684\u70b9\uff0c\u8fd8\u6ca1\u6307\u5b9a\u5c5e\u4e8e\u54ea\u4e2a\u70b9\u53cc; \n\t\t++Case;\n\t\tprintf(\"Case %d: \",Case);\n        printf(\"%lld %lld\\n\",res1,res2);\n    }\n    return 0;\n}\n\t\t\t\n```\n### \u8fd9\u9053\u9898\u76ee\u6709\u70b9\u96be\uff0c\u601d\u7ef4\u96be\u5ea6\u6bd4\u8f83\u9ad8\uff0c\u4ee3\u7801\u7ec6\u8282\u6bd4\u8f83\u591a\uff01\u4f46\u662f\u505a\u5b8c\u8fd9\u9898\uff0c\u4f60\u5c06\u83b7\u5f97\u4e09\u500d\u7ecf\u9a8c\uff1a\n#### [\u7ecf\u9a8c1\uff1aSP16185 BUSINESS - Mining your own business](https://www.luogu.org/problemnew/show/SP16185)\n#### [\u7ecf\u9a8c2\uff1aUVA1108 Mining Your Own Business](https://www.luogu.org/problemnew/show/UVA1108)\n#### [\u7ecf\u9a8c3\uff1aP3225 [HNOI2012]\u77ff\u573a\u642d\u5efa](https://www.luogu.org/problemnew/show/P3225)\n",
        "postTime": 1559059790,
        "uid": 172612,
        "name": "\u7c73\u5947\u5947\u7c73",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3225 \u3010[HNOI2012]\u77ff\u573a\u642d\u5efa\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u662f\u552f\u4e00\u7684\u4e00\u4e2aTarjan\u540e\u4e0d\u7528\u518dDFS\u7684\u9898\u89e3\u3002\n\n\u601d\u8def\uff1a\u65e0\u5411\u56fe\u8dd1Tarjan\u65f6\u5c31\u8dd1\u51fa\u6240\u6709\u5272\u70b9\u548cDCC\uff08\u70b9\u53cc\u8fde\u901a\u5206\u91cf\uff09\u3002\n\n1. \u5982\u679c\u8fd9\u4e2aDCC\u5305\u542b\u4e861\u4e2a\u4ee5\u4e0a\u7684\u5272\u70b9\uff0c\u90a3\u4e48\u65e0\u8bba\u62ff\u4e00\u4e2a\u5272\u70b9\u88ab\u5835\uff0c\u90fd\u53ef\u4ee5\u901a\u8fc7\u5176\u4ed6\u5272\u70b9\u9003\u5411\u5176\u4ed6\u6551\u751f\u70b9\uff0c\u6ca1\u6709\u8d21\u732e\u7b54\u6848\u3002\n\n2. \u5982\u679c\u8fd9\u4e2aDCC\u53ea\u67091\u4e2a\u5272\u70b9\uff0c\u5982\u679c\u5272\u70b9\u88ab\u5835\uff0c\u5c31\u5728DCC\u5185\u8bbe\u7acb\u4e00\u4e2a\u9003\u751f\u70b9\uff0c\u5982\u679c\u9003\u751f\u70b9\u88ab\u5835\uff0c\u5c31\u4ece\u5272\u70b9\u51fa\u53bb\u3002\u8d21\u732e\u4e3a1\uff0c\u65b9\u6848\u6570\u4e3a`size[i]-1`\uff08\u9664\u53bb\u5272\u70b9\u672c\u8eab\uff09\u3002\n\n3. \u5982\u679c\u8fd9\u4e2aDCC\u6ca1\u6709\u5272\u70b9\u3002\u5c31\u8981\u7528\u4e24\u4e2a\u9003\u751f\u70b9\u4e92\u4fdd\u3002\u8d21\u732e\u4e3a2\uff0c\u65b9\u6848\u6570\u4e3a`size[i]*(size[i]-1)/2`\u3002\u6240\u6709\u65b9\u6848\u6570\u4e58\u8d77\u6765\u5c31\u662f\u7b54\u6848\u3002\n\n\u8dd1Tarjan\u65f6\uff0c\u7c7b\u4f3c\u6709\u5411\u56fe\u7684\u505a\u6cd5\u7ef4\u62a4\u4e00\u4e2a\u6808\u3002\u5982\u679c\u6709`LOW[y]>=DFN[x]`\u7684\u60c5\u51b5\uff0c\u5c31\u628a\u4ecey\u5230\u6808\u9876\u7684\u90e8\u5206\u4e00\u8d77\u5f39\u51fa\uff0c\u4ed6\u4eec\u548cx\u6784\u6210\u4e86\u4e00\u4e2aDCC\uff08\u8be6\u89c1\u4ee3\u7801\uff09\u3002\u7136\u540e\u7edf\u4e00\u8ba1\u7b97\u7b54\u6848\u3002\n\n**\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u5728Tarjan\u65f6\u8ba1\u7b97\u7b54\u6848\uff1a**\n\n\u5f53\u4f60\u786e\u5b9a\u4e00\u4e2a\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u540e\uff0c\u91cc\u9762\u7684\u6240\u6709\u70b9\u54ea\u4e9b\u662f\u5272\u70b9\uff0c\u54ea\u4e9b\u4e0d\u662f\u5272\u70b9\u8fd8\u6ca1\u7b97\u5b8c\uff0c\u6240\u4ee5\u662f\u9519\u7684\u3002\u8981\u7b49Tarjan\u5b8c\u540e\u518d\u7b97\u7b54\u6848\u3002\n```cpp\n#include <bits/stdc++.h>\n#define MAX (1000 + 7)\n#define add push_back\nusing namespace std;\n\nint T,N,M,K,cnt,ans1,c[MAX],LOW[MAX],DFN[MAX];//c\u4fdd\u5b58\u662f\u5426\u4e3a\u5272\u70b9 \nlong long ans2;\n\nvector <int> L[MAX],DCC[MAX];//DCC\u6570\u7ec4\u4fdd\u5b58\u6bcf\u4e00\u4e2aDCC \nstack <int> S;\n\nvoid Tarjan(int x)\n{\n\tint fa = 0; S.push(x);\n\tLOW[x] = DFN[x] = ++cnt;\n\tfor (int p = 0; p < L[x].size(); p++)\n\t{\n\t\tconst int y = L[x][p];\n\t\tif (!DFN[y])\n\t\t{\n\t\t\tTarjan(y);\n\t\t\tLOW[x] = min(LOW[x], LOW[y]);\n\t\t\tif (LOW[y] >= DFN[x])\n\t\t\t{\n\t\t\t\tfa++; K++;\n\t\t\t\tif (x!=1 || fa>1) c[x] = 1;\n\t\t\t\tDCC[K].add(x);\n\t\t\t\tint z = 0;\n\t\t\t\tdo{//Tarjan\u65f6\u5f39\u6808\u5e76\u76f4\u63a5\u6c42\u51faDCC \n\t\t\t\t\tz = S.top(); S.pop();\n\t\t\t\t\tDCC[K].add(z);\n\t\t\t\t}while (z != y);\n\t\t\t}\n\t\t}\n\t\telse LOW[x] = min(LOW[x], DFN[y]);\n\t}\n}\n\nint main()\n{\n\twhile (scanf(\"%d\", &M) && M)\n\t{\n\t\tS = stack <int> ();\n\t\tfor (int i = 1; i <= N; i++)\n\t\t\tL[i].clear();\n\t\tfor (int i = 1; i <= K; i++)\n\t\t\tDCC[i].clear();\n\t\tN = K = ans1 = cnt = 0; ans2 = 1;\n\t\tmemset(c, 0, sizeof c);\n\t\tmemset(LOW, 0, sizeof LOW);\n\t\tmemset(DFN, 0, sizeof DFN);\n\t\t\n\t\tfor (int i = 1, x = 0, y = 0; i <= M; i++)\n\t\t{\n\t\t\tscanf(\"%d%d\", &x, &y);\n\t\t\tL[x].add(y); L[y].add(x);\n\t\t\tN = max(N, max(x,y));\n\t\t}\n\t\tTarjan(1);\n\t\tfor (int i = 1; i <= K; i++)\n\t\t{//\u7edf\u4e00\u5bf9\u6bcf\u4e00\u4e2aDCC\u8ba1\u7b97\u7b54\u6848\u3002 \n\t\t\tint v1 = DCC[i].size(), v2 = 0;\n\t\t\t//size()\u5373\u8be5DCC\u7684\u70b9\u4e2a\u6570\uff0cv2\u8ba1\u7b97\u5272\u70b9\u4e2a\u6570 \n\t\t\tfor (int p = 0; p < v1; p++)\n\t\t\t\tv2 += c[DCC[i][p]];\n\t\t\tif (v2 == 1) ans1++, ans2 *= v1 - 1;\n\t\t\tif (v2 == 0) ans1 += 2, ans2 *= v1 * (v1-1) / 2;\n\t\t}\n\t\tprintf(\"Case %d: %d %lld\\n\", ++T, ans1, ans2);\n\t}\n}\n```",
        "postTime": 1566461812,
        "uid": 73489,
        "name": "NyaRu_Official",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3225 \u3010[HNOI2012]\u77ff\u573a\u642d\u5efa\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7684\u91cd\u70b9\u5c31\u662f\u7406\u89e3**\u77ff\u70b9\u574d\u584c**\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u7406\u89e3\u4e3a**\u4e0d\u7ecf\u8fc7\u8fd9\u4e2a\u70b9\u4ee5\u53ca\u5b83\u6240\u8fde\u5411\u7684\u8fb9**\n\n\u5c31\u50cf[\u8fd9\u9053\u9898](https://www.luogu.org/problemnew/show/P3469)\n\n\u7406\u89e3\u4e86\u8fd9\u4e00\u70b9\u4e4b\u540e\n\n\u518d\u5f15\u5165\u4e00\u4e2a\u6982\u5ff5\n## \u70b9\u53cc\u8fde\u901a\u5206\u91cf\uff1a\n\n* \u5982\u679c\u4e00\u4e2a\u539f\u56fe\u8fde\u901a\u5206\u91cf\u4e0d\u5b58\u5728\u5272\u70b9\uff0c\u90a3\u4e48\u53ef\u4ee5\u79f0\u4e4b\u4e3a\u70b9\u53cc\u8fde\u901a\u5206\u91cf\n\n\u7136\u540e\u8fd9\u4e2a\u9898\u5c31~~\u597d\u505a\u4e86~~\u53ef\u4ee5\u505a\u4e86\u3002\n\n### \u4f46\u662f\u8981\u5206\u7c7b\u8ba8\u8bba\uff01\uff01\uff01 \n\n1. \u5982\u679c\u67d0\u4e2a\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u91cc\u53ea\u542b\u6709\u4e00\u4e2a\u539f\u56fe\u7684\u5272\u70b9\uff0c\u90a3\u4e48\u4e00\u65e6\u8fd9\u4e2a\u5272\u70b9\u574d\u584c\uff0c\u8fd9\u4e2a\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u91cc\u7684\u4eba\u90fd\u8dd1\u4e0d\u6389\uff0c\u6240\u4ee5\u8981\u5728\u8fd9\u4e2a\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u7684\u9664\u4e86\u5272\u70b9\u4e4b\u5916\u7684\u5730\u65b9\u8bbe\u7f6e\u4e00\u4e2a\u6551\u63f4\u51fa\u53e3\u3002\n\n2. \u5982\u679c\u67d0\u4e2a\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u91cc\u542b\u6709\u4e24\u4e2a\u6216\u66f4\u591a\u539f\u56fe\u7684\u5272\u70b9\uff0c\u90a3\u4e48\u4efb\u610f\u4e00\u4e2a\u70b9\u574d\u584c\uff0c\u81f3\u5c11\u8fd8\u5269\u4e00\u4e2a\u5272\u70b9\u53ef\u4ee5\u8ba9\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u91cc\u7684\u4eba\u8dd1\u5230\u5176\u4ed6\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u91cc\u53bb\uff0c\u6240\u4ee5\u8fd9\u4e2a\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u91cc\u4e0d\u9700\u8981\u8bbe\u7f6e\u6551\u63f4\u51fa\u53e3\u3002\n\t\n3. \u8bbe\u7f6e\u65b9\u6cd5\u6570\u53ef\u4ee5\u901a\u8fc7\u4e58\u6cd5\u539f\u7406\u8ba1\u7b97\u3002\n\n## \u603b\u7ed3\u4e00\u4e0b\n\n1. \u5148\u8dd1\u51fa\u6574\u4e2a\u56fe\u7684\u5272\u70b9\u3002\n\n```cpp\nvoid tarjan(int u,int fa)\n{\n    int child=0;\n    low[u]=dfn[u]=++num;\n    for(int i=0;i<g[u].size();i++)\n    {\n        int v=g[u][i];\n        if(!dfn[v])\n        {\n            child++;\n            tarjan(v,u);\n            low[u]=min(low[u],low[v]);\n            if(low[v]>=dfn[u]) isCut[u]=true;\n        }\n        else\n        {\n            if(v!=fa&&dfn[v]<dfn[u])\n                low[u]=min(low[u],dfn[v]);\n        }\n    }\n    if(fa<0&&child==1) isCut[u]=false;\n    return ;\n}\n```\n\n\n2. \u5982\u679c\u8fd9\u7684\u70b9\u6ca1\u6709\u8dd1\u8fc7\u5e76\u4e14\u4e0d\u662f\u5272\u70b9\uff0c\u90a3\u4e48\u5c31\u8fdb\u5165\u8fd9\u4e2a\u8054\u901a\u5757\u3002\u4e00\u4e2a\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u91cc\u5982\u679c\u5b83\u4e0d\u662f\u5272\u70b9\u90a3\u4e48\u4ece\u5b83\u5f00\u59cb\u641c\uff0c\u641c\u5230\u5272\u70b9\u6807\u8bb0\u4f46\u4e0d\u8d70\uff0c\u4e00\u5b9a\u53ef\u4ee5\u904d\u5386\u8fd9\u4e00\u6574\u4e2a\u70b9\u53cc\u8fde\u901a\u5206\u91cf\uff0c\u5404\u4f4djulao\u53ef\u4ee5\u5c1d\u8bd5\u601d\u8003\u4e00\u4e0b~~\u624b\u52a8\u6ed1\u7a3d~~\n\n```cpp\nvoid dfs(int x,int color)\n{\n\tvis[x]=color;\n\tFcut++;\n\tfor(int i=0;i<g[x].size();i++)\n\t{\n\t\tint v=g[x][i];\n\t\tif(isCut[v]&&vis[v]!=color)\n\t\t\tCut++,vis[v]=color;\n\t\tif(!vis[v])\n\t\t\tdfs(v,color);\n\t}\n\treturn ;\n}\n```\n\n3. \u901a\u8fc7\u4e58\u6cd5\u539f\u7406\u8ba1\u7b97\u7b54\u6848\u65f6\u901a\u8fc7\u8fd9\u4e2a\u8054\u901a\u5757\u91cc\u7684**\u975e\u5272\u70b9\u6570\u91cf**\u8ba1\u7b97\u3002\n\t#### \u4f46\u662f\u8981\u5206\u7c7b\u8ba8\u8bba\u5272\u70b9\u6570\u91cf\uff01\uff01\uff01\n\t1. \u5982\u679c\u6ca1\u6709\u5272\u70b9\uff0c\u90a3\u4e48\u9700\u8981\u5efa\u4e24\u4e2a\u51fa\u53e3\uff0c\u56e0\u4e3a\u8981\u907f\u514d\u4e00\u4e2a\u51fa\u53e3\u521a\u597d\u584c\u6389\u7684\u60c5\u51b5\u3002\n   2. \u5982\u679c\u53ea\u6709\u4e00\u4e2a\u5272\u70b9\uff0c\u90a3\u4e48\u53ea\u7528\u5efa\u4e00\u4e2a\u5728\u4e0d\u662f\u5272\u70b9\u7684\u5730\u65b9\u5373\u53ef\uff0c\u5982\u679c\u51fa\u53e3\u584c\u6389\uff0c\u90a3\u4e48\u53ef\u4ee5\u901a\u8fc7\u5272\u70b9\u53bb\u5230\u53e6\u5916\u4e00\u4e2a\u70b9\u53cc\u91cc\uff0c\u800c\u4e14\u9898\u76ee\u4e5f\u8bf4\u4e86\u540c\u65f6\u53ea\u6709\u4e00\u4e2a\u77ff\u70b9\u51fa\u4e8b\u3002\n   3. \u5982\u679c\u6709\u4e24\u4e2a\u53ca\u4ee5\u4e0a\u4e2a\u5272\u70b9\uff0c\u90a3\u4e48\u4e0d\u7528\u8bbe\u7f6e\u51fa\u53e3\uff0c\u56e0\u4e3a\u65e0\u8bba\u5982\u4f55\u5b83\u90fd\u53ef\u4ee5\u8dd1\u5230\u53e6\u5916\u7684\u70b9\u53cc\u91cc\u53bb\u3002\n\n### \u6ce8\u610f\uff1a$n$ \u5728\u8f93\u5165\u65f6\u6c42\u51fa\u6700\u5927\u503c\n\n\n**\u9644\u4e0aAC\u4ee3\u7801**\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<vector>\n#include<stack>\n\nusing namespace std;\n\n#define int long long\n\nconst int MAXX = 500;\n\nint n,m;\nint Num,G;\nint QAQ,num;\nint Fcut,Cut;\nint root,count;\nint dfn[MAXX+5];\nint low[MAXX+5];\nint vis[MAXX+5];\nbool isCut[MAXX+5];\nvector<int> g[MAXX+5];\n\nvoid Init()\n{\n\tn=0;num=0;\n\tNum=0;G=1;\n\tmemset(dfn,0,sizeof(dfn));\n\tmemset(low,0,sizeof(low));\n\tmemset(vis,0,sizeof(vis));\n\tmemset(isCut,false,sizeof(isCut));\n\tfor(int i=1;i<=MAXX;i++)\n\t\tg[i].clear();\n}\n\nvoid tarjan(int u,int fa)\n{\n    int child=0;\n    low[u]=dfn[u]=++num;\n    for(int i=0;i<g[u].size();i++)\n    {\n        int v=g[u][i];\n        if(!dfn[v])\n        {\n            child++;\n            tarjan(v,u);\n            low[u]=min(low[u],low[v]);\n            if(low[v]>=dfn[u]) isCut[u]=true;\n        }\n        else\n        {\n            if(v!=fa&&dfn[v]<dfn[u])\n                low[u]=min(low[u],dfn[v]);\n        }\n    }\n    if(fa<0&&child==1) isCut[u]=false;\n    return ;\n}\n\nvoid dfs(int x,int color)\n{\n\tvis[x]=color;\n\tFcut++;\n\tfor(int i=0;i<g[x].size();i++)\n\t{\n\t\tint v=g[x][i];\n\t\tif(isCut[v]&&vis[v]!=color)\n\t\t\tCut++,vis[v]=color;\n\t\tif(!vis[v])\n\t\t\tdfs(v,color);\n\t}\n\treturn ;\n}\n\nsigned main()\n{\n\twhile(scanf(\"%lld\",&m)!=EOF)\n\t{\n\t\tif(m==0) return 0;\n\t\t++QAQ;\n\t\tInit();\n\t\tfor(int i=1;i<=m;i++)\n\t\t{\n\t\t\tint x,y;\n\t\t\tscanf(\"%lld %lld\",&x,&y);\n\t\t\tn=max(n,max(x,y));\n\t\t\tg[x].push_back(y);\n\t\t\tg[y].push_back(x);\n\t\t}\n\t\tfor(int i=1;i<=n;i++)\n\t        if(!dfn[i])\n\t            tarjan(i,-1);\n\t\tfor(int i=1,color=0;i<=n;i++)\n\t\t{\n\t\t\tif(!vis[i]&&!isCut[i])\n\t\t\t{\n\t\t\t\t++color;\n\t\t\t\tFcut=Cut=0;\n\t\t\t\tdfs(i,color);\n\t\t\t\tif(Cut==0)\n\t\t\t\t\tNum+=2,\n\t\t\t\t\tG*=(Fcut-1)*Fcut/2;\n\t\t\t\tif(Cut==1)\n\t\t\t\t\tNum+=1,\n\t\t\t\t\tG*=Fcut;\n\t\t\t}\n\t\t}\n\t\tprintf(\"Case %lld: %lld %lld\\n\",QAQ,Num,G);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1559713054,
        "uid": 123055,
        "name": "\u4ea6\u7b19\u7bab",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3225 \u3010[HNOI2012]\u77ff\u573a\u642d\u5efa\u3011"
    },
    {
        "content": "\u6765\u53d1\u4e00\u53d1\u627e\u53cc\u8fde\u901a\u5206\u91cf\u7684tarjan\u6a21\u677f\u89e3\u6cd5\u3002\u3002\u3002\n\n\uff08~~\u52a0\u6df1\u4e00\u4e0b\u5bf9tarjan\u7684\u7406\u89e3~~\uff09\n\n\u601d\u8def\u8fd8\u662f\u627e\u51fa\u5272\u70b9\u548c\u6240\u6709\u7684\u53cc\u8fde\u901a\u5206\u91cf\uff0c\u7136\u540e\u7edf\u8ba1\u6bcf\u4e2a\u53cc\u8fde\u901a\u5206\u91cf\u91cc\u7684\u4e2a\u70b9\u7684\u4e2a\u6570\u5206\u60c5\u51b5\u8ba8\u8bba\u3002\n\n1. \u82e5\u8be5\u8fde\u901a\u5206\u91cf\u91cc\u6709\u4e0d\u5c11\u4e8e\u4e24\u4e2a\u5272\u70b9\uff0c\u5219\u5b83\u662f\u5b89\u5168\u7684\uff0c\u56e0\u4e3a\u65e0\u8bba\u54ea\u4e2a\u5272\u70b9\u70b8\u4e86\uff0c\u91cc\u9762\u7684\u70b9\u53ef\u4ee5\u901a\u8fc7\u5176\u4ed6\u7684\u6ca1\u70b8\u7684\u5272\u70b9\u8dd1\u5230\u5176\u4ed6\u7684\u53cc\u8fde\u901a\u5206\u91cf\u91cc\u53bb\u3002\n\n1. \u82e5\u8be5\u8fde\u901a\u5206\u91cf\u91cc\u53ea\u6709\u4e00\u4e2a\u5272\u70b9\uff0c\u90a3\u4e48\u5982\u679c\u8fd9\u4e2a\u5272\u70b9\u70b8\u4e86\uff0c\u5219\u91cc\u9762\u7684\u70b9\u5c31\u4e0d\u53ef\u80fd\u8dd1\u5230\u5176\u4ed6\u7684\u53cc\u8fde\u901a\u5206\u91cf\u91cc\u53bb\u4e86\uff0c\u6240\u4ee5\u8981\u5728\u8fd9\u4e2a\u5272\u70b9\u91cc\u5efa\u4e00\u4e2a\u51fa\u53e3\u3002\n\n1. \u82e5\u8be5\u8fde\u901a\u5206\u91cf\u91cc\u4e00\u4e2a\u5272\u70b9\u4e5f\u6ca1\u6709\uff0c\u8bf4\u660e\u5b83\u4e0e\u5916\u754c\u5b8c\u5168\u4e0d\u8fde\u901a\uff0c\u8fd9\u65f6\u5982\u679c\u53ea\u5efa\u4e00\u4e2a\u51fa\u53e3\u7684\u8bdd\uff0c\u90a3\u4e48\u5982\u679c\u8fd9\u4e2a\u51fa\u53e3\u70b8\u4e86\u5c31GG\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u53e6\u4e00\u4e2a\u51fa\u53e3\u201c\u4ee5\u9632\u4e07\u4e00\u201d\\*\uff08\u5373\u5efa\u4e24\u4e2a\u51fa\u53e3\uff09\n\n\n\u5bf9\u4e8e\u65b9\u6848\u6570\u7684\u8bdd\uff0c\u6211\u4eec\u53d1\u73b0\u5982\u679c\u8981\u5efa\u51fa\u53e3\u7684\u8bdd\uff0c\u8be5\u53cc\u8fde\u901a\u5206\u91cf\u91cc\u7684\u4efb\u4f55\u4e00\u4e2a\u975e\u5272\u70b9\u7684\u8282\u70b9\u90fd\u662f\u53ef\u4ee5\u7684\uff0c\u56e0\u6b64\u7528\u4e00\u4e0b\u7ec4\u5408\u6570\u5b66\u5c31\u53ef\u4ee5\u641e\u5b9a\u4e86\u3002\n\n~~\u597d\u50cf\u504f\u79bb\u4e86\u4e3b\u9898~~\u2026\u2026\n\n\u4e3b\u8981\u60f3\u8ba8\u8bba\u7684\u662f\u627e\u51fa\u5e76\u7edf\u8ba1\u53cc\u8054\u901a\u5206\u91cf\u7684\u4fe1\u606f\u4e8b\u5b9e\u4e0a\u4e5f\u53ef\u4ee5\u4f7f\u7528tarjan\u7684\u6a21\u677f\u6765\u89e3\u51b3\uff0c\u53ea\u662f\u5224\u65ad\u7684\u4f4d\u7f6e\u53ca\u6761\u4ef6\u53d8\u4e86\u4e00\u4e0b\uff08\u76f8\u5bf9\u4e8e\u6c42\u5f3a\u8fde\u901a\u5206\u91cf\u7684tarjan\u7b97\u6cd5\u6765\u8bf4\uff09\u6216\u8005\u5224\u65ad\u91cc\u505a\u7684\u4e8b\u53d8\u4e86\u4e00\u4e0b\uff08\u76f8\u5bf9\u4e8e\u6c42\u5272\u70b9\u7684tarjan\u7b97\u6cd5\u6765\u8bf4\uff09\u800c\u5df2\u3002\n\n\u5ffd\u7136\u611f\u89c9\u81ea\u5df1\u597d\u5570\u55e6\u554a\uff0c\u4e3a\u4e86\u4e0d\u8ba9\u5c0f\u4f19\u4f34\u4eec\u5fc3\u70e6\uff0c\u90a3\u5c31\u4e0a\u4ee3\u7801\u5427\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<iostream>\nusing namespace std;\nconst int MAXN=501;\nlong long int ans=0,fanganshu=1;//\u8bb0\u5f55\u6700\u7ec8\u7684\u7b54\u6848\uff0c\u51fa\u53e3\u6570\u4e0e\u65b9\u6848\u6570 \nint n,m,u,v,fenliangtot=0,casenum=0;//\u9876\u70b9\u6570\u3001\u8fb9\u6570\u3001\u50a8\u5b58\u8fb9\u7684\u4fe1\u606f\u7684\u4e34\u65f6\u53d8\u91cf\uff08u\u3001v\uff09\u3001\u8fde\u901a\u5206\u91cf\u7684\u603b\u6570\u3001\u6570\u636e\u7ec4\u6570 \nint zhan[MAXN],top=0;//dfs\u65f6\u7528\u5230\u7684\u6808 \nint visit=0,dfn[MAXN],low[MAXN];//tarjan\u201c\u5fc5\u5907\u7ec4\u4ef6\u201d \nint root[MAXN],num[MAXN],roottot=0;//\u5728\u8fdb\u884ctarjan\u65f6\u8bb0\u5f55\u6839\u8282\u70b9\u4ee5\u53ca\u5220\u9664\u8be5\u8282\u70b9\u540e\u7684\u5206\u91cf\u4e2a\u6570\n//\u5728\u505a\u9898\u65f6\u6015\u4f1a\u51fa\u73b0\u56fe\u4e0d\u8fde\u901a\u7684\u60c5\u51b5\uff0c\u4e8e\u662f\u5f00\u4e86\u4e2aroottot\u8bb0\u5f55tarjan\u65f6\u6839\u8282\u70b9\u7684\u4e2a\u6570\nbool vis[MAXN];//dfs\u65f6\u7528\uff08\u4e8b\u5b9e\u4e0a\u611f\u89c9\u50cf\u4e00\u4e2a\u5f31\u5316\u4e86\u7684dfn\u6570\u7ec4\uff09 \nstruct fenliang//\u8bb0\u5f55\u56fe\u7684\u6bcf\u4e00\u4e2a\u201c\u8054\u901a\u5206\u91cf\u201d\u7684\u6570\u636e \n{\n    int num,gediannum;//\u8fde\u901a\u5206\u91cf\u4e2d\u7684\u975e\u5272\u70b9\u6570\u53ca\u5272\u70b9\u6570 \n    fenliang() {num=0;gediannum=0;}\n}group[MAXN];\nstruct edge//\u90bb\u63a5\u8868\u5b58\u56fe \n{\n    int v;\n    edge *NEXT;\n    edge() {v=0;NEXT=NULL;}\n}*con[MAXN];\ninline void ins(int start,int end)//\u5f80\u56fe\u4e2d\u52a0\u8fb9 \n{\n    edge *p=new(edge);\n    p->v=end;\n    p->NEXT=con[start];\n    con[start]=p;\n}\ninline void tarjan(int nv)//tarjan\u6a21\u677f \n{\n    dfn[nv]=low[nv]=++visit;\n    for(edge *p=con[nv];p;p=p->NEXT)\n    {\n        //nv\u8ddfvv\u5728\u540c\u4e00\u6761\u8fb9\u4e0a\uff0c\u5219\u6709\u4e24\u79cd\u60c5\u51b5\uff08\u5728\u641c\u7d22\u6811\u4e2d\uff09\uff1a\n        //1\u3001vv\u662fnv\u7684\u7956\u5148\uff0c\u6b64\u65f6\u6240\u904d\u5386\u5230\u7684\u8fb9\u5c31\u662f\u4e00\u6761\u540e\u5411\u8fb9\n        //2\u3001vv\u662fnv\u7684\u513f\u5b50\u8282\u70b9\n        int vv=p->v;\n        if(dfn[vv]==0)//\u5982\u679cvv\u4e4b\u524d\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\uff0c\u5219vv\u662fnv\u7684\u513f\u5b50 \n        {\n            tarjan(vv);\n            low[nv]=min(low[nv],low[vv]); //\u9012\u5f52\u4ee5\u53ca\u66f4\u65b0 \n            if(low[vv]>=dfn[nv]) ++num[nv];\n            //low[vv]>=dfn[nv]\u8bf4\u660e\u5728nv\u7684\u8fd9\u4e00\u68f5\u5b50\u6811\u4e2d\u6ca1\u6709\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u4f1a\u8fde\u5230nv\u7684\u7956\u5148\u4e0a\u53bb\n            //\u6240\u4ee5\u53bb\u6389nv\u540e\u56fe\u5c31\u4e0d\u8fde\u901a\u4e86\uff08nv\u662f\u5272\u70b9\uff09\n            //\u4f46\u56e0\u4e3a\u65e0\u8bba\u6839\u8282\u70b9\u53bb\u6389\u4e4b\u540e\u56fe\u662f\u5426\u8fde\u901a\uff0clow[vv]>=dfn[nv]\u4e00\u5b9a\u4f1a\u6210\u7acb\uff0c\u6240\u4ee5\u8981\u51cf1\uff08\u89c1main\u51fd\u6570\uff09 \n        }\n        else low[nv]=min(low[nv],dfn[vv]);//\u5426\u5219\u5c31\u662f\u60c5\u51b5\u4e00 \n    }\n}\ninline void dfs(int nv)\n{\n    vis[nv]=true;\n    zhan[++top]=nv;//\u5728\u904d\u5386\u65f6\u628a\u904d\u5386\u5230\u7684\u8282\u70b9\u5165\u6808 \n    for(edge *p=con[nv];p;p=p->NEXT)\n    {\n        int vv=p->v;\n        if(vis[vv]==false)\n        {\n            dfs(vv);//\u4e8b\u5b9e\u4e0a\u8fd9\u4e2a\u51fd\u6570\u548c\u4e0a\u9762tarjan\u4e5f\u5c31\u662f\u591a\u4e86\u4e0b\u9762\u7684\u5224\u65ad \n            //\u5728\u6709\u5411\u56fe\u6c42\u5f3a\u8fde\u901a\u5206\u91cf\u65f6\uff0c\u6211\u4eec\u4f7f\u7528\u8fc7\u4e00\u4e2a\u6808\uff0c\u5728\u6808\u4e2d\u7684\u5143\u7d20\u6709\u53ef\u80fd\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\u9762\n            //\u800c\u5bf9\u4e8e\u8fd9\u4e2a\u65e0\u5411\u56fe\uff0c\u540c\u6837\u7684\u9053\u7406\uff0c\u53ea\u662f\u6211\u4eec\u628a\u5f3a\u8fde\u901a\u5206\u91cf\u6362\u6210\u4e86\u53cc\u8054\u901a\u5206\u91cf \n            //\u5177\u4f53\u64cd\u4f5c\u4e8b\u5b9e\u4e0a\u548c\u5728\u6c42\u5f3a\u8fde\u901a\u7684\u5206\u91cf\u65f6\u7684if(low[nv]==dfn[nv])\u65f6\u4e00\u6837\u7684\n            //\u53ea\u4e0d\u8fc7\u4e00\u4e2a\u70b9\u53ef\u80fd\u4f1a\u5728\u591a\u4e2a\u53cc\u8054\u901a\u5206\u91cf\u91cc\u9762\uff0c\u800c\u4e00\u4e2a\u70b9\u6700\u591a\u53ea\u4f1a\u5728\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\u9762\n            //\u6240\u4ee5while\u8981\u6362\u5230\u524d\u9762\u6765\uff0c\u5e76\u4e14\u5728\u6700\u540e\u52a0\u4e00\u4e2a\u7279\u5224\uff08\u5224\u65ad\u8fd9\u4e2a\u70b9\u662f\u4e0d\u662f\u4e00\u4e2a\u5272\u70b9\uff09 \n            if(low[vv]>=dfn[nv])\n            {\n                ++fenliangtot; //\u6c42\u5230\u4e86\u4e00\u4e2a\u53cc\u8fde\u901a\u5206\u91cf \n                int place=zhan[top];\n                while(place!=nv)\n                {\n                    --top;\n                    if(num[place]) ++group[fenliangtot].gediannum; //\u73b0\u5728\u8fd9\u4e2a\u70b9\u662f\u5272\u70b9 \n                    else ++group[fenliangtot].num; //\u73b0\u5728\u8fd9\u4e2a\u70b9\u4e0d\u662f\u5272\u70b9 \n                    place=zhan[top];\n                }\n                //\u5bf9\u4e8e\u8fd9\u4e00\u68f5\u5b50\u6811\u7684\u6839\u8282\u70b9\u7684\u7279\u5224 \n                if(num[place]) ++group[fenliangtot].gediannum;\n                else ++group[fenliangtot].num;\n            }\n        }\n    }\n}\ninline int read()//\u65e5\u5e38\u8bfb\u5165\u4f18\u5316 \n{\n    int x=0,f=1;char c=getchar();\n    while(c<'0'||c>'9') {if(c=='-') f=-1;c=getchar();}\n    while(c>='0'&&c<='9') {x=x*10+c-'0';c=getchar();}\n    return x*f;\n}\nint main()\n{\n    while(true)\n    {\n        m=read();//\u8bfb\u5165\u8fb9\u6570 \n        if(m==0) return 0;//\u8f93\u5165\u7ed3\u675f \n        memset(con,0,sizeof(con));\n        memset(dfn,0,sizeof(dfn));\n        memset(num,0,sizeof(num));\n        memset(vis,0,sizeof(vis));\n        memset(group,0,sizeof(group));\n        ans=n=roottot=fenliangtot=0;\n        fanganshu=1;\n        //\u8be5\u521d\u59cb\u5316\u7684\u4e1c\u897f\u5168\u90e8\u521d\u59cb\u5316\u4e00\u904d \n        while(m--)\n        {\n            u=read();v=read();\n            n=max(n,max(u,v));\n            ins(u,v);ins(v,u);\n        }//\u4e0d\u65ad\u5f80\u56fe\u4e2d\u52a0\u8fb9\uff0c\u56e0\u4e3a\u662f\u65e0\u5411\u56fe\uff0c\u6240\u4ee5\u52a0\u4e24\u6b21 \n        for(int i=1;i<=n;++i)\n            if(dfn[i]==0)\n            {root[++roottot]=i;tarjan(i);}//tarjan\u627e\u5272\u70b9 \n        //\u8bb0\u5f55\u6839\u8282\u70b9\u662f\u56e0\u4e3a\u6839\u8282\u70b9\u8981\u7279\u5224\uff0c\u8981\u5728tarjan\u4e2d\u6c42\u51fa\u7684num\u503c\u51cf\u4e00\u624d\u662f\u5b83\u7684\u771f\u5b9e\u7684num\u503c \n        for(int i=1;i<=roottot;++i)\n            if(num[root[i]]!=0) --num[root[i]];//\u7ecf\u8fc7\u8fd9\u6837\u5904\u7406\u540e\u6240\u6709num\u503c\u4e3a\u771f\u7684\u70b9\u5c31\u662f\u5272\u70b9\u4e86 \n        for(int i=1;i<=n;++i)\n            if(vis[i]==false) dfs(i);//dfs\u6c42\u70b9\u53cc\u8fde\u901a\u5206\u91cf \n        for(int i=1;i<=fenliangtot;++i)//\u904d\u5386\u6c42\u5230\u7684\u53cc\u8fde\u901a\u5206\u91cf\u7684\u6570\u636e \n        {\n            int a=group[i].num,b=group[i].gediannum;\n            if(b>=2) continue;//\u5982\u679c\u8fd9\u4e2a\u53cc\u8fde\u901a\u5206\u91cf\u4e2d\u5272\u70b9\u6570\u5927\u4e8e\u7b49\u4e8e2\uff0c\u8bf4\u660e\u4e0d\u8981\u5efa\u51fa\u53e3 \n            else if(b==1) {++ans;fanganshu*=a;}//\u5982\u679c\u5272\u70b9\u6570\u7b49\u4e8e1\uff0c\u5219\u9700\u8981\u5efa\u4e00\u4e2a\u51fa\u53e3 \n            else if(b==0) {ans+=2;fanganshu*=(a*(a-1)/2);}//\u5982\u679c\u4e0d\u5b58\u5728\u5272\u70b9\uff0c\u5219\u8981\u5efa\u4e24\u4e2a\u51fa\u53e3 \n        }\n        printf(\"Case %d: %lld %lld\\n\",++casenum,ans,fanganshu);//\u8f93\u51fa\u7ed3\u679c\n    }\n}\n```\n\u5e0c\u671b\u5bf9\u5404\u4f4d\u5c0f\u4f19\u4f34\u6709\u5e2e\u52a9QAQ\u3002\n",
        "postTime": 1513481088,
        "uid": 28747,
        "name": "LDlornd",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3225 \u3010[HNOI2012]\u77ff\u573a\u642d\u5efa\u3011"
    },
    {
        "content": "[yybyyb\u5de8\u4f6c\u8bf4\u7684\u597d\u50cf\u4e0d\u662f\u5f88\u6e05\u695a](https://www.luogu.org/blog/cjyyb/solution-p3225)\n\n\u8003\u8651\u6bcf\u4e00\u4e2a\u6ca1\u6709\u5272\u70b9\u7684\u5b50\u56fe\uff0c\u574d\u584c\u4e00\u4e2a\u70b9\u53ef\u4ee5\u5229\u7528\u5176\u4ed6\u70b9\u4e92\u8fbe\u3002\n\u9700\u8981\u8003\u8651\u7684\u662f\u5272\u70b9\uff0c\u53ea\u6709\u5272\u70b9\u584c\u6389\u624d\u4f1a\u4ea7\u751f\u5835\u6b7b\u7684\u60c5\u51b5\u3002\n\nyybyyb\u7684\u5206\u7ec4\u5e94\u8be5\u662f\u4ece\u6bcf\u4e00\u4e2a\u70b9\uff08\u975e\u5272\u70b9\uff09\u8fdb\u884c\u641c\u7d22\uff0c\u9047\u5230\u5272\u70b9\u4e0d\u641c\uff0c\u8bb0\u5f55\u5272\u70b9\u6570\u76ee\uff0c\u8fd9\u6837\u5c31\u6309\u88ab\u5272\u70b9\u5305\u56f4\u5206\u6210\u4e86\u51e0\u5757\uff0c\u6bcf\u4e00\u5757\u5185\u90e8\u6ca1\u6709\u5272\u70b9\uff0c\u4e0e\u8be5\u5757\u76f4\u63a5\u76f8\u8fde\u7684\u70b9\u90fd\u662f\u5272\u70b9\u3002\n\n\u8003\u8651\u5982\u679c\u8be5\u5b50\u56fe\u4e0e0\u4e2a\u5272\u70b9\u76f8\u8fde\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5b50\u56fe\u4e00\u5b9a\u8981\u5efa\u4e24\u4e2a\u51fa\u53e3\uff0c\u65b9\u6848\u6570\u5c31\u662f\u4e00\u4e2a\u7ec4\u5408\u6570\u3002\uff08\u53ea\u5efa\u9020\u4e00\u4e2a\u53ef\u80fd\u584c\u6389\u7684\u662f\u51fa\u53e3\uff09\n\n\u5982\u679c\u4e0e\u4e00\u4e2a\u5272\u70b9\u76f8\u8fde\uff0c\u5982\u679c\u5272\u70b9\u584c\u6389\uff0c\u90a3\u4e48\u5c31\u4f1a\u88ab\u5835\u6b7b\u3002\u5982\u679c\u4e0d\u662f\u5272\u70b9\u584c\u6389\uff0c\u4eba\u6c11\u5c31\u53ef\u4ee5\u901a\u8fc7\u5272\u70b9\u5230\u5176\u4ed6\u5757\uff0c\uff08\u8fd9\u79cd\u60c5\u51b5\u5c31\u662f\u8981\u5728\u5176\u4ed6\u5757\u6c42\u89e3\u4e86\uff09\uff0c\u6240\u4ee5\u81f3\u5c11\u5efa\u4e00\u4e2a\uff0c\u65b9\u6848\u6570\u5c31\u662f\u8be5\u5757\u70b9\u7684\u6570\u76ee\n\n\u5982\u679c\u4e0e\u4e24\u4e2a\u5272\u70b9\u76f8\u8fde\uff0c\u90a3\u4e48\u65e0\u8bba\u54ea\u4e00\u4e2a\u5272\u70b9\u584c\u6389\uff0c\u90fd\u53ef\u4ee5\u901a\u8fc7\u53e6\u4e00\u4e2a\u5272\u70b9\u5230\u8fbe\u522b\u7684\u5757\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u5efa\u9020\u51fa\u53e3\u3002\n\n\u5de8\u4f6c\u7684\u4ee3\u7801\uff08\u4e0d\u662f\u6211\u5199\u7684\u54e6\uff09\n\n```cpp\n#include<iostream>\n#include<cstdlib>\n#include<cstring>\n#include<cstdlib>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n\n#define MAX 501\n\nint Dfn[MAX],vis[MAX],Low[MAX];\nbool cut[MAX];\nlong long Num,Cut,Time,root,rs,m,n,Ans1,Ans2,Case,Group;\n\nvoid Init();//\u591a\u7ec4\u6570\u636e\uff0c\u521d\u59cb\u5316 \n\nstruct Node  //\u5b9a\u4e49\u8fb9 \n{\n       int v,next;\n}e[MAX*MAX];\n\nint h[MAX],cnt;\n\nvoid Add(int u,int v)  //\u6dfb\u52a0\u8fb9 \n{\n      e[cnt]=(Node){v,h[u]};\n      h[u]=cnt++;\n}\n\nvoid Tarjan(int u,int f)  //Tarjan\u8dd1\u51fa\u6240\u6709\u5272\u70b9 \n{\n       int v;\n       Dfn[u]=Low[u]=++Time;   \n\n       for(int i=h[u];i!=-1;i=e[i].next)//\u679a\u4e3e\u6240\u6709\u76f4\u63a5\u8fde\u63a5\u7684\u70b9 \n       {\n                v=e[i].v;\n                if(!Dfn[v])  //\u5982\u679c\u6ca1\u6709\u8bbf\u95ee\u8fc7\uff0c\u8bc1\u660ev\u662fu\u7684\u5b50\u8282\u70b9 \n                {\n                       Tarjan(v,u);\n                       Low[u]=min(Low[u],Low[v]); //\u66f4\u65b0Low\u503c \n                       if(Low[v]>=Dfn[u])  //\u5982\u679cv\u80fd\u591f\u56de\u5230u\u6216\u8005u\u7684\u7956\u5148 \n                       {\n                               if(u!=root)    //\u5982\u679cu\u4e0d\u662f\u5b50\u6811\u7684\u6839\u8282\u70b9 \n                                   cut[u]=true; //u\u662f\u5272\u70b9 \n                               else \n                                   rs++;      //\u6839\u8282\u70b9\u5b50\u8282\u70b9\u6570\u589e\u52a0 \n                       }\n                }\n                else\n                   if(v!=f)    //\u5982\u679cv\u4e0d\u662fu\u7684\u7236\u8282\u70b9\uff0c\u4f46\u662fv\u5df2\u7ecf\u8bbf\u95ee\u8fc7 \n                      Low[u]=min(Low[u],Dfn[v]);  //\u5224\u65ad\u662f\u5426\u80fd\u591f\u66f4\u65b0Low \n       }\n}\n\nvoid DFS(int u)//DFS\u641c\u7d22\u4e00\u8fb9\u8054\u901a\u5757 \n{\n        int v;\n\n        vis[u]=Group; //\u6807\u8bb0\u7ec4 \n        Num++;        //\u975e\u5272\u70b9\u6570 \n\n        for(int i=h[u];i!=-1;i=e[i].next)//\u8bbf\u95ee\u5b50\u8282\u70b9 \n        {\n               v=e[i].v;\n               if(cut[v]&&vis[v]!=Group) //\u5982\u679cv\u662f\u5272\u70b9\u5e76\u4e14v\u6ca1\u6709\u5728\u8fd9\u4e2a\u5206\u7ec4\u5185\u88ab\u8bbf\u95ee\u8fc7 \n               {\n                        Cut++;         //\u5272\u70b9\u6570\u589e\u52a0 \n                        vis[v]=Group;  //\u6807\u8bb0\u5206\u7ec4 \n               }\n               if(!vis[v])     //\u5982\u679cvis\u672a\u88ab\u8bbf\u95ee\u8fc7 \n                   DFS(v);     //\u641c\u7d22v \n        }\n}\n\nint main()\n{\n       long long u,v;       \n       Case=1;\n\n       while(cin>>m&&m)\n       {\n              Init(); //\u521d\u59cb\u5316 \n\n           for(int i=1;i<=m;++i)//\u8bfb\u5165\u8fb9 \n           {\n                   cin>>u>>v;\n                   Add(u,v);\n                   Add(v,u);\n                   n=max(n,v);\n                   n=max(n,u);\n           }\n\n           for(int i=1;i<=n;++i)//Tarjan\u7b97\u6cd5\u6c42\u5272\u70b9 \n           {\n                     if(!Dfn[i])\n                     {\n                              root=i;\n                              rs=0;\n                              Tarjan(i,i);\n                              if(rs>=2)       //\u5982\u679c\u5b50\u6811\u6839\u8282\u70b9\u7684\u513f\u5b50\u6570\u4e0d\u5c11\u4e8e2\u4e2a\uff0c\u5219\u8fd9\u4e2a\u6839\u8282\u70b9\u624d\u662f\u5272\u70b9 \n                                  cut[i]=true;\n                     }\n           }\n\n           for(int i=1;i<=n;++i)//\u679a\u4e3e\u6240\u6709\u70b9\u6765\u641c\u7d22\u5206\u7ec4 \n           {\n                    if(!vis[i]&&!cut[i])//\u5982\u679ci\u8282\u70b9\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\u5e76\u4e14\u4e0d\u662f\u5272\u70b9 \n                    {\n                            ++Group;  //\u589e\u52a0\u4e00\u4e2a\u5206\u7ec4 \n                            Num=Cut=0;\n                            DFS(i);   //\u641c\u7d22\u8fd9\u4e2a\u5206\u7ec4 \n\n                            if(Cut==0)//\u5982\u679c\u6ca1\u6709\u5272\u70b9 \n                            {\n                                      Ans1+=2;//\u81f3\u5c11\u9700\u8981\u5efa\u7acb\u4e24\u4e2a\u51fa\u53e3 \n                                      Ans2*=(Num-1)*Num/2;//\u4ece\u4efb\u610f\u975e\u5272\u70b9\u7684\u5730\u65b9\u9009\u62e9\u4e24\u4e2a\u70b9\u5efa\u7acb \n                            }\n\n                            if(Cut==1)//\u5982\u679c\u8fd9\u4e2a\u5206\u7ec4\u53ea\u6709\u4e00\u4e2a\u5272\u70b9 \n                            {\n                                Ans1+=1;  //\u53ea\u9700\u8981\u5728\u5206\u7ec4\u5185\u8bbe\u7acb\u4e00\u4e2a\u51fa\u53e3 \n                                Ans2*=Num;//\u53ef\u4ee5\u8bbe\u7acb\u5728\u4efb\u610f\u4e00\u4e2a\u975e\u5272\u70b9\u7684\u5730\u65b9 \n                            }\n\n                            if(Cut>=2)//\u5982\u679c\u6709\u4e24\u4e2a\u53ca\u4ee5\u4e0a\u4e2a\u5272\u70b9\uff0c\u5219\u65e0\u9700\u5efa\u7acb\uff0c\u53ef\u4ee5\u76f4\u63a5\u5230\u8fbe\u5176\u4ed6\u8054\u901a\u5757 \n                            {\n                                ; \n                        } \n                    }\n           }\n\n           cout<<\"Case \"<<Case++<<\": \"<<Ans1<<\" \"<<Ans2<<endl;//\u8f93\u51fa\u7ed3\u679c     \n       }\n\n       return 0; \n}\n\nvoid Init()\n{\n       memset(h,-1,sizeof(h));\n       memset(Dfn,0,sizeof(Dfn));\n       memset(Low,0,sizeof(Low));\n       memset(cut,0,sizeof(cut));\n       memset(vis,0,sizeof(vis));\n       Time=cnt=n=Ans1=Group=0;\n       Ans2=1;\n}\n```\n",
        "postTime": 1571789812,
        "uid": 169137,
        "name": "k\uff0c\u706b\u9b42",
        "ccfLevel": 0,
        "title": "P3225 [HNOI2012]\u77ff\u573a\u642d\u5efa"
    },
    {
        "content": "\u5f3a\u8054\u901a\u672c\u6765\u5c31\u4e0d\u719f\uff0c\u8fd9\u6b21\u5199\u7bc7\u9898\u89e3\u505a\u4e2a\u7b14\u8bb0\u3002\n\n\u5176\u5b9e\u8fd9\u9898lrj\u7684\u4e66\u91cc\u6709\n\n\u76f4\u63a5\u8d34\u4ee3\u7801\uff0c\u91cc\u9762\u6709\u89e3\u91ca\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define M(a) memset(a,0,sizeof(a))\n#define v e[i].to\ntypedef long long ll;\nconst int N=503;\nstruct kk{\n    int to,ne;\n}e[N*2];//\u53cc\u5411\u5efa\u8fb9\uff0c\u4e24\u500d\nint tot,n,m,T,cnt,num,low[N],dfn[N],ans1,vis[N],cut[N],head[N],Case,x,y,tim,i;\nll ans2;\nint read(){\n    int x=0;char ch;\n    do ch=getchar();while(ch<48||ch>57);\n    while(ch>=48&&ch<=57)x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\n    return x;\n}\nvoid add(int x,int y){\n    e[++tot].to=y;\n    e[tot].ne=head[x];\n    head[x]=tot;\n}\nvoid tarjan(int u,int fa){\n    int child=0;//u\u7684\u5b69\u5b50\u6570\u91cf\n    dfn[u]=low[u]=++tim;\n    for (int i=head[u];i;i=e[i].ne)\n        if (!dfn[v]){\n            child++;\n            tarjan(v,u);\n            low[u]=min(low[u],low[v]);\n            if (low[v]>=dfn[u]) cut[u]=1;\n        }else if (dfn[v]<dfn[u] && v!=fa) low[u]=min(low[u],dfn[v]);\n    if (child==1 && !fa) cut[u]=0;//\u82e5\u8be5\u70b9\u4e3a\u6839\u8282\u70b9\u4e14\u53ea\u6709\u4e00\u4e2a\u513f\u5b50\uff0c\u5c31\u4e0d\u662f\u5272\u70b9\n}\nvoid dfs(int u){\n    vis[u]=T;cnt++;\n    for (int i=head[u];i;i=e[i].ne){\n        if (vis[v]!=T && cut[v]) num++,vis[v]=T;\n//\u521a\u5f00\u59cb\u628avis[v]!=T\u5199\u6210!vis[v]\uff0c\u540e\u6765\u53d1\u73b0\u4e00\u4e2a\u5272\u9876\u53ef\u80fd\u4f1a\u5728\u591a\u4e2a\u8054\u901a\u5757\u4e2d\u51fa\u73b0\n        if (!vis[v] && !cut[v]) dfs(v);\n    }\n}\nint main(){\n    do{\n        m=read();\n        if (!m) return 0;\n        M(vis);M(cut);M(dfn);M(head);//\u5077\u4e86\u4e2a\u61d2\uff0clow\u4e0d\u7528\u6e05\u7a7a\n        n=ans1=T=tot=tim=0;ans2=1;//\u6e05\u7a7a\uff0c\u6709\u591a\u7ec4\u6570\u636e\n        for (i=1;i<=m;i++) x=read(),y=read(),add(x,y),add(y,x),n=max(n,max(x,y));\n        for (i=1;i<=n;i++)\n            if (!dfn[i]) tarjan(i,0);\n        for (i=1;i<=n;i++)\n            if (!vis[i] && !cut[i]){\n                T++,cnt=num=0;\n//cnt\u4e3a\u5f53\u524d\u8054\u901a\u5757\u4e2d\u603b\u7684\u70b9\u7684\u4e2a\u6570\uff0cnum\u4e3a\u5272\u70b9\u4e2a\u6570\n                dfs(i);\n                if (!num) ans1+=2,ans2*=cnt*(cnt-1)/2;\n                //\u5185\u90e8\u65e0\u5272\u70b9\uff0c\u5219\u4efb\u610f\u9009\u4e24\u4e2a\u51fa\u53e3\n                if (num==1) ans1++,ans2*=cnt;\n     //\u5185\u90e8\u6709\u4e00\u4e2a\u5272\u70b9\uff0c\u5c31\u4efb\u610f\u9009\u4e00\u4e2a\u975e\u5272\u9876\u7684\u70b9\u5f53\u4f5c\u51fa\u53e3\n            }\n        printf(\"Case %d: %d %lld\\n\",++Case,ans1,ans2);\n    }while (1);\n}\n```",
        "postTime": 1517924326,
        "uid": 22469,
        "name": "Mingoal",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3225 \u3010[HNOI2012]\u77ff\u573a\u642d\u5efa\u3011"
    },
    {
        "content": "[[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.org/problem/P3225)]\n\n\u601d\u8def\u7684\u8bdd\u5176\u4ed6\u5927\u4f6c\u90fd\u5df2\u7ecf\u8bb2\u7684\u5f88\u6e05\u695a\u4e86qwq\n\u6211\u4e3b\u8981\u662f\u60f3\u518d\u63d0\u4f9b\u4e00\u79cd\u5199\u6cd5\n\n~~\u5176\u5b9e\u662f\u81ea\u5df1\u592a\u83dc\u770b\u4e0d\u61c2\u5176\u4ed6\u5de8\u4f6c\u7684\u4ee3\u7801QAQ~~\n\n\u4ee3\u7801\u91cc\u4e5f\u6709\u4e00\u4e9b\u89e3\u91ca\uff0c\u4e3b\u8981\u5c31\u662f\u8981\u4f1a\u70b9\u53cc\u8054\u901a\u5206\u91cf(\u4ee3\u7801\u91cc\u7684 \u70b9\u5206 )\u5c31\u597d\u4e86\n\n\u732e\u4e0a\u849f\u84bb\u7684\u4ee3\u7801\nCode:\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int N = 1e4 + 7;\nint n, m;\nint tot, head[N];\nbool cut[N];//\u8bb0\u5f55\u4e00\u4e2a\u70b9\u662f\u4e0d\u662f\u5272\u70b9 \nvector<int> dcc[N];//\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u53cc\u91cc\u9762\u70b9 \nint id, top, vdcc, dfn[N], low[N], stk[N];\nstruct edge{\n\tint net, to;\n}e[N * 3];\nvoid add(int u, int v) {\n\te[++tot] = {head[u], v};\n\thead[u] = tot;\n}\nvoid tarjan(int u, int fa) {//\u6c42\u70b9\u5206\u6a21\u677f \n\tdfn[u] = low[u] = ++id;\n\tstk[++top] = u;\n\tif (u == fa && !head[u]) {//\u5355\u72ec\u7684\u70b9\u5c31\u8ba1\u5165\u5355\u72ec\u7684\u70b9\u5206 \n\t\tdcc[++vdcc].push_back(u);\n\t\treturn;\n\t}\n\tint flag = 0;\n\tfor (int i = head[u]; i; i = e[i].net) {\n\t\tint to = e[i].to;\n\t\tif (!dfn[to]) {\n\t\t\ttarjan(to, u);\n\t\t\tlow[u] = min(low[u], low[to]);\n\t\t\tif (low[to] >= dfn[u]) {\n\t\t\t\tflag++;\n\t\t\t\tif (u != fa || flag > 1) {\n\t\t\t\t\tcut[u] = true;//\u8bb0\u4e0b\u5272\u70b9 \n\t\t\t\t}\n\t\t\t\tvdcc++;\n\t\t\t\tdcc[vdcc].clear();//\u591a\u7ec4\u6570\u636e\u8981\u6e05\u7a7a \n\t\t\t\tint y;\n\t\t\t\tdo {\n\t\t\t\t\ty = stk[top--];\n\t\t\t\t\tdcc[vdcc].push_back(y);\n\t\t\t\t} while (y != to);//\u6ce8\u610f\u8fd9\u91cc\u662fto \n\t\t\t\tdcc[vdcc].push_back(u);\n\t\t\t}\n\t\t} else {\n\t\t\tlow[u] = min(low[u], dfn[to]);\n\t\t}\n\t}\n}\nint main () {\n\tint Case = 0;\n\twhile (scanf(\"%d\", &m) && m != 0) {\n\t\tCase++;\n\t\tll ans1 = 0, ans2 = 1; \n\t\tvdcc = tot = top = id = 0;\n\t\tmemset(head, 0, sizeof head);\n\t\tmemset(cut, 0, sizeof cut);\n\t\tmemset(dfn, 0, sizeof dfn);\n\t\t//\u6ce8\u610f\u4e00\u4e0b\u591a\u7ec4\u6570\u636e\u7684\u6e05\u7a7a,low\u6570\u7ec4\u4f1a\u88abid\u66f4\u65b0,\u4e0d\u7528\u6e05 \n\t\tn = 0;\n\t\tfor(int i = 1; i <= m; i++) {\n\t\t\tint u, v;\n\t\t\tscanf(\"%d%d\", &u, &v);\n\t\t\tadd(u, v), add(v, u);\n\t\t\tn = max(n, max(u, v));//\u9898\u91cc\u9762\u6ca1\u8bf4\u70b9\u6807\u53f7\u5c31\u53ea\u597d\u81ea\u5df1\u53d6max \n\t\t}\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tif (!dfn[i]) {\n\t\t\t\ttarjan(i, i);\n\t\t\t}\n\t\t}\n\t\tfor (int i = 1; i <= vdcc; i++) {\n\t\t\tint cutnum = 0;\n\t\t\tint siz = (int)dcc[i].size();\n\t\t\tfor (int j = 0; j < siz; j++) {\n\t\t\t\tif (cut[dcc[i][j]]) {\n\t\t\t\t\tcutnum++;//\u8bb0\u5f55\u8be5\u70b9\u5206\u4e4b\u4e2d\u7684\u5272\u70b9\u6570 \n\t\t\t\t}\n\t\t\t}\n\t\t\tif (siz == 1) {//\u5355\u72ec\u7684\u70b9\u7279\u5224\u4e00\u4e0b \n\t\t\t\tans1++;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (cutnum == 1) {\n\t\t\t\tans1++;\n\t\t\t\tans2 *=(siz - 1);\n\t\t\t\t//\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u5272\u70b9\u7684\u8bdd,\u5fc5\u987b\u8981\u518d\u5efa\u4e00\u4e2a\u975e\u5272\u70b9\u7684\u51fa\u53e3\n\t\t\t\t//\u8fd9\u6837\u624d\u80fd\u4fdd\u8bc1\u5728\u5272\u70b9\u574d\u584c\u4e4b\u540e\u8be5\u70b9\u5206\u8fd8\u80fd\u51fa\u53bb \n\t\t\t} else if (!cutnum) {\n\t\t\t\tans1 += 2;\n\t\t\t\tans2 *= siz * (siz - 1) / 2;\n\t\t\t\t//\u5982\u679c\u6ca1\u6709\u5272\u70b9\u7684\u8bdd\u5c31\u5fc5\u987b\u5efa\u4e24\u4e2a\u51fa\u53e3,\u7136\u540e\u5c31\u662fC(n,2),\u5316\u7b80\u540e\u5c31\u662fn*(n-1)/2\n\t\t\t}\n\t\t\t//\u8fd8\u6709\u4e00\u79cd\u60c5\u51b5\u5c31\u662f\u6709\u4e24\u4e2a\u5272\u70b9\n\t\t\t//\u6b64\u65f6\u65e0\u8bba\u54ea\u4e2a\u70b9\u584c\u4e86,\u8be5\u70b9\u5206\u91cc\u7684\u70b9\u90fd\u80fd\u6709\u5730\u65b9\u51fa\u53bb,\u6240\u4ee5\u4e0d\u9700\u8981\u5efa\u51fa\u53e3\u4e86 \n\t\t}\n\t\tprintf(\"Case %d: %lld %lld\\n\", Case, ans1,ans2);\n\t}\n\treturn 0;\n}\n```\n\u849f\u84bb\u4e5f\u662f\u624d\u5f00\u59cb\u770b\u53cc\u8054\u901a\u5206\u91cf\uff0c\u5982\u679c\u6709\u4e0d\u59a5\u7684\u5730\u65b9\u8fd8\u8bf7\u5de8\u4f6c\u4eec\u6307\u51fa\n\n\u611f\u8c22\u89c2\u8d4f\n",
        "postTime": 1572657209,
        "uid": 155944,
        "name": "Sundial",
        "ccfLevel": 0,
        "title": "LuoguP3225[HNOI2012]\u77ff\u573a\u642d\u5efa"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\u5728\u4e00\u4e2a\u65e0\u5411\u56fe\u4e0a\u9009\u62e9\u5c3d\u91cf\u5c11\u7684\u70b9\u6d82\u9ed1\uff0c\u4f7f\u5f97\u5220\u9664\u4efb\u610f\u4e00\u4e2a\u70b9\u540e\uff0c\u6bcf\u4e2a\u8fde\u901a\u5206\u91cf\u91cc\u90fd\u81f3\u5c11\u6709\u4e00\u4e2a\u9ed1\u70b9\u3002\n\n\u5148\u8003\u8651\u7b2c\u4e00\u4e2a\u95ee\u9898\uff0c\u5373\u81f3\u5c11\u9700\u8981\u8bbe\u7f6e\u51e0\u4e2a\u6551\u63f4\u51fa\u53e3\u3002\u5f88\u5bb9\u6613\u770b\u51fa\u8fd9\u4e0e\u5272\u70b9\u6709\u5173\uff0c\u4e00\u4e2a\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u53ef\u4ee5\u901a\u8fc7\u5272\u70b9\u901a\u5411\u53e6\u4e00\u4e2a\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b\uff1a\n\n1\u3001\u5f53\u4e00\u4e2a\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u6ca1\u6709\u5272\u70b9\uff1a\u9700\u8981\u8bbe\u7f6e\u4e24\u4e2a\u6551\u63f4\u51fa\u53e3\uff0c\u56e0\u4e3a\u5f53\u67d0\u4e00\u4e2a\u8bbe\u6709\u6551\u63f4\u51fa\u53e3\u7684\u6316\u7164\u70b9\u574d\u584c\u4e4b\u540e\uff0c\u5fc5\u987b\u8981\u6709\u53e6\u5916\u4e00\u4e2a\u6551\u63f4\u51fa\u53e3\u3002\n\n2\u3001\u5f53\u4e00\u4e2a\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u6709\u4e00\u4e2a\u5272\u70b9\uff1a\u9700\u8981\u8bbe\u7f6e\u4e00\u4e2a\u6551\u63f4\u51fa\u53e3\uff0c\u867d\u7136\u901a\u8fc7\u5272\u70b9\u53ef\u4ee5\u901a\u5411\u53e6\u4e00\u4e2a\u70b9\u53cc\u8fde\u901a\u5206\u91cf\uff0c\u4f46\u662f\u5f53\u5272\u70b9\u574d\u584c\u4e4b\u540e\uff0c\u5c31\u4e0d\u80fd\u901a\u5411\u522b\u5904\uff0c\u6240\u4ee5\u9700\u8981\u5728\u5185\u90e8\u8bbe\u7f6e\u4e00\u4e2a\u6551\u63f4\u51fa\u53e3\u3002\n\n3\u3001\u5f53\u4e00\u4e2a\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u6709\u4e24\u4e2a\u6216\u4ee5\u4e0a\u5272\u70b9\uff1a\u663e\u7136\u8fd9\u65f6\u4e0d\u9700\u8981\u8bbe\u7f6e\u6551\u63f4\u51fa\u53e3\uff0c\u5f53\u4e00\u4e2a\u5272\u70b9\u574d\u584c\u4e4b\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u53e6\u5916\u4e00\u4e2a\u5272\u70b9\u901a\u5411\u53e6\u4e00\u4e2a\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u3002\n\n\u6240\u4ee5\u6211\u4eec\u7684\u505a\u6cd5\u5373\u4e3a\uff1a\u6c42\u51fa\u6240\u7ed9\u65e0\u5411\u56fe\u7684\u5272\u70b9\u548c\u70b9\u53cc\u8054\u901a\u5206\u91cf\uff0c\u518d\u8ba1\u7b97\u6bcf\u4e2a\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u7684\u5272\u70b9\u6570\uff0c\u7136\u540e\u6309\u4e0a\u8ff0\u5206\u7c7b\u7edf\u8ba1\u81f3\u5c11\u9700\u8981\u8bbe\u7f6e\u51e0\u4e2a\u6551\u63f4\u51fa\u53e3\uff0c\u5373ans1\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u95ee\u9898\uff0c\u53ea\u9700\u6309\u7167\u65b9\u6848\u6570\u7684\u4e58\u6cd5\u539f\u7406\uff0c\u628a\u6bcf\u4e2a\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u8bbe\u7f6e\u6551\u63f4\u51fa\u53e3\u7684\u65b9\u6848\u6570\u7d2f\u4e58\u5373\u53ef\u3002\u8bbe\u6bcf\u4e2a\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u7684\u5927\u5c0f\u4e3aSize\uff0c\u82e5\u9700\u8981\u8bbe\u7f6e\u4e00\u4e2a\u6551\u63f4\u51fa\u53e3\uff0c\u5219ans2*=(Size-1)\uff1b\u82e5\u9700\u8981\u8bbe\u7f6e\u4e24\u4e2a\u6551\u63f4\u51fa\u53e3\uff0c\u5219ans2*=Size*(Size-1)/2\u3002\u6ce8\u610f\u4e00\u4e2a\u72ec\u7acb\u7684\u70b9\u4e5f\u662f\u53cc\u8fde\u901a\u5206\u91cf\uff0c\u8fd9\u79cd\u60c5\u51b5\u9700\u8981\u7279\u5224\uff0c\u5426\u5219ans2\u7684\u503c\u4f1a\u53d8\u4e3a0.\n\n\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<vector>\n#include<algorithm>\nusing namespace std;\nconst int N=505;\nint n,m,T;\nint a[N],used[N];\nint head[N],ver[N],Next[N],tot;\nint dfn[N],low[N],stack[N],top,num,cnt,fa; \nint cut[N];//\u5b58\u50a8\u5272\u70b9 \nlong long ans1,ans2=1;\nvector<int> dcc[N];//\u5b58\u50a8\u6bcf\u4e2a\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u4e2d\u6bcf\u4e2a\u70b9\u7684\u7f16\u53f7 \nvoid add(int x,int y)\n{\n\tver[++tot]=y;\n\tNext[tot]=head[x];\n\thead[x]=tot;\n}\nvoid tarjan(int x,int fa)//tarjan\u6c42\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u548c\u5272\u70b9 \n{\n\tdfn[x]=low[x]=++num;\n\tstack[++top]=x;\n\tif(x==fa && !head[x])//\u72ec\u7acb\u70b9 \n\t{\n\t\tdcc[++cnt].push_back(x);\n\t\treturn;\n\t}\n\tint flag=0;\n\tfor(int i=head[x];i;i=Next[i])\n\t{\n\t\tint y=ver[i];\n\t\tif(!dfn[y])\n\t\t{\n\t\t\ttarjan(y,fa);\n\t\t\tlow[x]=min(low[x],low[y]);\n\t\t\tif(low[y]>=dfn[x])\n\t\t\t{\n\t\t\t\tflag++;\n\t\t\t\tif(x!=fa || flag>1)\n\t\t\t\t\tcut[x]=1;\n\t\t\t\tcnt++;\n\t\t\t\tint z;\n\t\t\t\tdo\n\t\t\t\t{\n\t\t\t\t\tz=stack[top--];\n\t\t\t\t\tdcc[cnt].push_back(z);\n\t\t\t\t}while(z!=y);\n\t\t\t\tdcc[cnt].push_back(x);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t\tlow[x]=min(low[x],dfn[y]);\n\t}\n}\nvoid clear()//\u591a\u7ec4\u6570\u636e\uff0c\u9700\u8981\u6e05\u7a7a\n{\n\ttot=num=top=cnt=n=ans1=0;\n\tans2=1;\n\tfor(int i=1;i<=N;i++)\n\t\tdcc[i].clear();\n\tmemset(dfn,0,sizeof(dfn));\n\tmemset(head,0,sizeof(head));\n\tmemset(cut,0,sizeof(cut));\n\tmemset(low,0,sizeof(low));\n\tmemset(stack,0,sizeof(stack));\n\tmemset(a,0,sizeof(a));\n\tmemset(used,0,sizeof(a));\n}\nint main()\n{\n\twhile(~scanf(\"%d\",&m) && m)\n\t{\n\t\tT++;\n\t\tclear();\n\t\t/*\n\t\t\u56e0\u4e3a\u9898\u76ee\u6ca1\u6709\u7ed9\u51fa\u70b9\u7684\u6570\u76ee\n\t\t\u6240\u4ee5\u6211\u4eec\u5c06\u70b9\u7684\u7f16\u53f7\u653e\u8fdba\u6570\u7ec4\n\t\t\u8fd9\u6837\u53ef\u4ee5\u5ffd\u7565\u5176\u4e2d\u6ca1\u6709\u7528\u7684\u5230\u70b9\u7684\u7f16\u53f7 \n\t\t*/ \n\t\tfor(int i=1;i<=m;i++) \n\t\t{\n\t\t\tint x,y;\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tadd(x,y);\n\t\t\tadd(y,x);\n\t\t\tif(!used[x])\n\t\t\t{\n\t\t\t\ta[++n]=x;\n\t\t\t\tused[x]=1;\n\t\t\t}\n\t\t\tif(!used[y])\n\t\t\t{\n\t\t\t\ta[++n]=y;\n\t\t\t\tused[y]=1;\n\t\t\t}\n\t\t}\n\t\tsort(a+1,a+n+1);\n\t\tfor(int i=1;i<=n;i++)//\u6c42\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u548c\u5272\u70b9\n\t\t\tif(!dfn[a[i]])\n\t\t\t\ttarjan(a[i],a[i]);\n\t\tfor(int i=1;i<=cnt;i++)\n\t\t{\n\t\t\tint sum=0,Size=dcc[i].size();\n\t\t\tfor(int j=0;j<Size;j++)//\u7edf\u8ba1\u5f53\u524d\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u7684\u5272\u70b9\u6570\u76ee \n\t\t\t\tif(cut[dcc[i][j]])\n\t\t\t\t\tsum++;\n\t\t\tif(!sum && Size!=1)\n\t\t\t{\n\t\t\t\tans1+=2;\n\t\t\t\tans2*=(Size*(Size-1)/2);\n\t\t\t}\n\t\t\tif(!sum && Size==1)//\u7279\u5224\u72ec\u7acb\u70b9\u7684\u60c5\u51b5 \n\t\t\t\tans1++;\n\t\t\tif(sum==1)\n\t\t\t{\n\t\t\t\tans1++;\n\t\t\t\tans2*=(Size-1);\n\t\t\t}\n\t\t}\n\t\tprintf(\"Case %d: %lld %lld\\n\",T,ans1,ans2);\n\t}\n\treturn 0;\n}\n```\n[UVA1108](https://www.luogu.org/problem/UVA1108)\n[SP16185](https://www.luogu.org/problem/SP16185)\n\u4e00\u6837\u7684\u9898\u76ee \u4e0d\u8fc7\u6570\u636e\u66f4\u5927 \u800c\u4e14\u8981\u8bb0\u5f97\u591a\u5f00\u51e0\u4e2along long\n\n",
        "postTime": 1572427545,
        "uid": 157777,
        "name": "\u9526\u5fe0\u79c0\u554a",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 P3225 \u3010[HNOI2012]\u77ff\u573a\u642d\u5efa\u3011"
    },
    {
        "content": "```.cpp\n/*\n\u5148tarjan\u6c42\u5272\u70b9\n\u628a\u6240\u6709\u5272\u70b9\u53bb\u6389\u4ee5\u540e\u5bfb\u627e\u5757 \n\u5982\u679c\u6709\u4e00\u4e2a\u5757\u6ca1\u6709\u5272\u70b9\uff0c\u5373\u8fd9\u4e2a\u5b50\u56fe\u8054\u901a\uff0c\u9700\u8981\u52a0\u4e24\u4e2a\u70b9\uff0c\u65b9\u6848\u603b\u6570*C2,n(\u5373n*(n-1)/2)\n\u5982\u679c\u4e00\u4e2a\u5757\u53ea\u6709\u4e00\u4e2a\u5272\u70b9\uff0c\u5219\u9700\u8981\u5728\u6240\u6709\u4e0d\u542b\u5272\u70b9\u7684\u56fe\u91cc\u4efb\u9009\u4e00\u70b9\uff0c\u65b9\u6848\u603b\u6570*(n-1) \n\u5982\u679c\u4e00\u4e2a\u5757\u6709\u591a\u4e8e\u4e00\u4e2a\u5272\u70b9\uff0c\u5219\u8fd9\u4e2a\u70b9\u8981\u4e48\u53ef\u4ee5\u901a\u8fc7\u5176\u4e2d\u4e00\u4e2a\u5272\u70b9\u53ef\u4ee5\u901a\u5f80\u6551\u63f4\u51fa\u53e3\uff0c\u8981\u4e48\u53ef\u4ee5\u901a\u8fc7\u81ea\u5df1\u6240\u5728\u7684\u53e6\u4e00\u4e2a\u5757\u5230\u8fbe\u6551\u63f4\u51fa\u53e3\uff0c\u4e0d\u9700\u64cd\u4f5c\n\u6ce8\u610f\uff1a\u4e00\u5b9a\u8981\u6700\u540e\u7edf\u8ba1\u5272\u70b9\u6570\n\u4e0a\u4ee3\u7801 \n*/\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#include<cstdio>\n#define rep(i,a,b) for(long long i=a;i<=b;i++)\n#define N 505\n#define M 1050\nusing namespace std;\ntypedef long long ll;\nll m,fir[N],nxt[M],to[M],tot,n;\nvoid ade(ll u,ll v)\n{\n\tto[++tot]=v;\n\tnxt[tot]=fir[u];\n\tfir[u]=tot;\n}\nll dfn[N],low[N],num,col,book[N][N],sta[N],top,l[N];\nbool vis[N];\nvoid Tarjan_dfs(ll x)\n{\n\tdfn[x]=low[x]=++num;\n\tsta[++top]=x;\n\tll son=0;\n\tfor(ll k=fir[x];k!=-1;k=nxt[k]){\n\t\tif(!dfn[to[k]]){\n\t\t\tTarjan_dfs(to[k]);son++;\n\t\t\tlow[x]=min(low[x],low[to[k]]);\n\t\t\tif((x==1 && son>1) || (x!=1 && dfn[x]<=low[to[k]])) vis[x]=1;\n\t\t\tif(dfn[x]<=low[to[k]]){\n\t\t\t\tl[++col]=0;\n\t\t\t\tbook[col][++l[col]]=x;\n\t\t\t\t//printf(\"col=%lld,x=%lld\\n\",col,x);\n\t\t\t\twhile(sta[top]!=x)   book[col][++l[col]]=sta[top],top--;\n\t\t\t\t//printf(\"x=%lld,col=%lld,book[%lld]=%lld,si[%lld]=%lld\\n\",x,col,col,book[col],col,si[col]);\n\t\t\t}\n\t\t}\n\t\telse low[x]=min(low[x],dfn[to[k]]);\n\t}\n}\nvoid init()\n{\n\tmemset(fir,-1,sizeof(fir));\n\ttot=-1;\n\tn=col=num=0;\n\tmemset(dfn,0,sizeof(dfn));\n\tmemset(vis,0,sizeof(vis));\n}\nll t=0; \nvoid slove()\n{\n\tinit();\n\trep(i,1,m){\n\t\tll u,v;\n\t\tscanf(\"%lld%lld\",&u,&v);\n\t\tade(u,v);ade(v,u);\n\t\tn=max(n,max(u,v));\n\t}\n\trep(i,1,n) if(!dfn[i]){\n\t\ttop=0;Tarjan_dfs(i);\n\t} \n\tll ans=1,sum=0;\n\trep(i,1,col){\n\t\tll f=0;\n\t\trep(j,1,l[i]) if(vis[book[i][j]]) f++;\n\t\tif(f==0) sum+=2,ans=ans*l[i]*(l[i]-1)/2;\n\t\telse if(f==1) sum++,ans=ans*(l[i]-1);\n\t}\n\tt++;\n\tprintf(\"Case %lld: %lld %lld\\n\",t,sum,ans);\n}\nint main()\n{\n\twhile(scanf(\"%lld\",&m) && m) slove();\n\treturn 0;\n}\n```",
        "postTime": 1539062579,
        "uid": 67840,
        "name": "niolle",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3225 \u3010[HNOI2012]\u77ff\u573a\u642d\u5efa\u3011"
    },
    {
        "content": "https://www.luogu.org/problemnew/show/P3225\n\n\u53cc\u8fde\u901a\u5206\u91cf\n\n\u540e\u9762\u4e0d\u7528dfs\u7684\u65b9\u6cd5\uff08\u76f4\u63a5\u5728Tarjan\u4e2d~~\u80e1\u641e~~\u5904\u7406\uff09\n\nfrom \u4fe1\u606f\u5b66\u7ade\u8d5b\u4e00\u672c\u901a\u63d0\u9ad8\u7bc7\uff08\u6392\u7248\u4e0d\u9519~~\u4f46\u4ee3\u7801\u98ce\u683c\u5f88\u8ff7~~\uff09\n\n\u5177\u4f53\u6709\u4e09\u79cd\u60c5\u51b5\uff08\u8bben\u4e3a\u53cc\u8fde\u901a\u5206\u91cf\u6240\u542b\u7684\u70b9\u6570\uff09\uff1a\n- \u53cc\u8fde\u901a\u5206\u91cf\u5272\u70b9\u6570==0\uff0c\u7b54\u6848\u4e3aC2n\uff08n\u4e2a\u70b9\u4e2d\u90092\u4e2a\u7684\u65b9\u6848\u6570\uff09\n- \u53cc\u8fde\u901a\u5206\u91cf\u5272\u70b9\u6570==1\uff0c\u7b54\u6848\u4e3aC1n\uff08n\u4e2a\u90091\u4e2a\u7684\u65b9\u6848\u6570\uff09\n- \u53cc\u8fde\u901a\u5206\u91cf\u5272\u70b9\u6570>=2\uff0c\u4e0d\u7528\u518d\u6dfb\u52a0\u7b54\u6848\n\nbe[i][j]\uff1a\u7b2ci\u4e2a\u53cc\u8fde\u901a\u5206\u91cf\u5185\u7684\u7b2cj\u4e2a\u70b9\n\n\u8be6\u89c1\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstring>\n#include<vector>\n#include<cstdio>\nusing namespace std;\ninline int min(int a,int b) {return a<b ? a:b;}\ninline int max(int a,int b) {return a>b ? a:b;}\nconst int maxn=503;\nvector <int> g[maxn],be[maxn];\nint dfn[maxn],low[maxn],st[maxn];\nbool cut[maxn];\nint dfs_clock,cnt,top,m,n,root;\nvoid tarjan(int x)\n{\n    dfn[x]=low[x]=++dfs_clock;\n    st[++top]=x;\n    int len=g[x].size(),child=0;\n    for(int i=0;i<len;i++)\n    {\n        int to=g[x][i];\n        if(!dfn[to])\n        {\n            child++;\n            tarjan(to);\n            low[x]=min(low[x],low[to]);\uff0c\n            if((x==root&&child>1)||(x!=root&&dfn[x]<=low[to])) cut[x]=1;\n            if(dfn[x]<=low[to]) //dfs\u53d8\u6210\u4e86\u8fd9\u4e2a\uff0c\u5269\u4e0b\u5c31\u662f\u88f8Tarjan\u4e86\n            {\n                be[++cnt].clear(); //\u5148\u628a\u4e0a\u7ec4\u7684\u6e05\u7a7a\n                do\n                {\n                    be[cnt].push_back(st[top--]);\n                }while(st[top+1]!=to);\n            //\twhile(st[top]!=x) be[cnt].push_back(st[top--]);\n            //\u4e0a\u9762\u8fd9\u4e2a\u770b\u4f3c\u7b49\u4ef7\u7684\u8bed\u53e5\u5374\u53ea\u80fd\u5f9740\uff08\u6211\u67e5\u4e86\u4e00\u65e9\u4e0a\u90fd\u627e\u4e0d\u51fa\u6765\u4e3a\u5565\uff0c\u77e5\u9053\u539f\u56e0\u7684\u8bf7\u79c1\u6211QAQ\uff09\uff08\u5df2\u89e3\u51b3\uff09\n                be[cnt].push_back(x); //\u5272\u70b9\u5c5e\u4e8e\u591a\u4e2a\u53cc\u8fde\u901a\u5206\u91cf\n            }\n        }\n        else low[x]=min(low[x],dfn[to]);\n    }\n}\nint main()\n{\n    //freopen(\"P3225.in\",\"r\",stdin);\n    int p=0;\n    while(scanf(\"%d\",&m)&&m)\n    {\n        memset(cut,0,sizeof(cut));\n        memset(dfn,0,sizeof(dfn));\n        memset(low,0,sizeof(low));\n        top=cnt=dfs_clock=0;\n        n=0; int q1,q2;\n        for(int i=1;i<=maxn;i++) g[i].clear();\n        for(int i=1;i<=m;i++)\n        {\n            scanf(\"%d%d\",&q1,&q2);\n            g[q1].push_back(q2);\n            g[q2].push_back(q1);\n            n=max(n,max(q1,q2)); //\u7ed3\u70b9\u603b\u6570\u8981\u81ea\u5df1\u627e\n        }\n        for(int i=1;i<=n;i++)\n            if(!dfn[i])\n            {\n                root=i;\n                tarjan(i);\n            } \n//----------\u4ee5\u4e0a\u4e3a\u88f8\u7684Tarjan-----------\n        long long ans1=0,ans2=1;\n        for(int i=1;i<=cnt;i++) //\u5224\u65ad\u53cc\u8fde\u901a\u5206\u91cf\u5185\u7684\u5272\u70b9\u6570\n        {\n            int tge=0;\n            int len=be[i].size();\n            for(int j=0;j<len;j++)\n                if(cut[be[i][j]])\n                    tge++;\n            if(tge==0)\n            {\n                ans1=ans1+2;\n                ans2=ans2*(long long)(len*(len-1)/2);\n            }else if(tge==1)\n            {\n                ans1=ans1+1;\n                ans2=ans2*(long long)(len-1);\n            }\n        }\n        printf(\"Case %d: \",++p);\n        cout<<ans1<<\" \"<<ans2<<endl;\n    }\n    return 0;\n}\n```\n\u5173\u4e8e\u4ee3\u7801\u4e2d\u5f39\u6808\u7684\u95ee\u9898\uff08by mts_246\uff09\uff1a\n\ntarjan\u7684\u65f6\u5019\u53ef\u80fd\u5b58\u5728\u4e00\u4e2a\u513f\u5b50\u6709\u4e00\u6761\u8fd4\u7956\u8fb9\uff0clow[v]<dfn[x]\uff0c\u8fd9\u6837\u5f39\u6808\u7684\u65f6\u5019\u4e0d\u4f1a\u5f39\u51fa\uff0c\u6240\u4ee5\u627e\u5144\u5f1f\u8282\u70b9\u7684\u65f6\u5019\u6808\u9876\u4e0d\u4e00\u5b9a\u662fx\u3002",
        "postTime": 1530842067,
        "uid": 21679,
        "name": "\u9999\u98ce\u667a\u4e43",
        "ccfLevel": 7,
        "title": "P3225 [HNOI2012]\u77ff\u573a\u642d\u5efa"
    },
    {
        "content": "\u9996\u5148\uff0c\u5982\u679c\u56fe\u672c\u6765\u5c31\u662f\u70b9\u8fde\u901a\u56fe\uff08\u5373\u4e0d\u5b58\u5728\u5272\u70b9\uff09\uff0c\u90a3\u4e48\u4ece\u8fd9\u4e2a\u56fe\u4e2d\u9009\u51fa\u4efb\u610f\u4e24\u4e2a\u70b9\u5c31\u53ef\uff0c\u5982\u679c\u5b58\u5728\u5272\u70b9\u4e14\u53ea\u4e0e\u4e00\u4e2a\u5272\u70b9\u76f8\u8fde\u7684\u5757\uff0c\u8fd9\u4e2a\u5757\u5219\u81f3\u5c11\u8981\u9009\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u9003\u751f\u901a\u9053\uff0c\u800c\u4e14\u53ef\u4efb\u610f\u9009\u62e9\uff1b\u5bf9\u4e8e\u4e0e\u591a\u4e2a\u5272\u70b9\u76f8\u8fde\u7684\u5757\u5219\u6ca1\u5fc5\u8981\u9009\u70b9\u5efa\u9003\u751f\u901a\u9053\n\n------------\n### \u5177\u4f53\u6709\u4e09\u79cd\u60c5\u51b5\uff1a\n\n#### 1.\u53ea\u6709\u4e00\u4e2a\u53cc\u8fb9\u8054\u901a\u5206\u91cf\uff0c\u5272\u70b90\uff0c\u65b9\u6848C\uff082\uff0cn\uff09\uff1b\n\n#### 2.\u4e00\u4e2a\u53cc\u8fb9\u8054\u901a\u5206\u91cf\u53ea\u6709\u4e00\u4e2a\u5272\u70b9\uff0c\u5219\u5728\u975e\u5272\u70b9\u5904\u4efb\u610f\u9009\u62e9\u4e00\u4e2a\u70b9\u5efa\u901a\u9053\uff1b\n\n#### 3.\u5272\u70b9\u5927\u4e8e\u7b49\u4e8e2\uff0c\u4e0d\u9700\u5efa\u901a\u9053\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define M 100005\nusing namespace std;\nint dfn[M],low[M],dfstime,st[M],top;\nint head[M],cnt,root,gedian[M];\nint m,n,col,bt,T=1;\nvector<int> block[M];\nstruct node{\n\tint v,next;\n}e[M*2];\ninline void add_edge(int u,int v)\n{\n\te[++cnt].v=v;\n\te[cnt].next=head[u];\n\thead[u]=cnt;\n}\ninline void tarjan(int x)\n{\n\tdfn[x]=low[x]=++dfstime;\n\tst[++top]=x;\n\tint ant=0;\n\tfor(int i=head[x];i!=-1;i=e[i].next)\n\t{\n\t\tint y=e[i].v;\n\t\tif(!dfn[y])\n\t\t{\n\t\t\tant++;\n\t\t\ttarjan(y);\n\t\t\tlow[x]=min(low[x],low[y]);\n\t\t\tif((x==root&&ant>1)||(x!=root&&dfn[x]<=low[y]))//\u5224\u65ad\u5272\u70b9\u4e24\u4e2a\u6761\u4ef6\uff0c\u4e0d\u7528\u5224\u91cd\u8fb9\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u5272\u70b9\uff0c\u4e24\u70b9\u591a\u8fb9\u548c\u4e00\u6761\u8fb9\u6548\u679c\u4e00\u6837\n\t\t\tgedian[x]=1;\n\t\t\tif(low[y]>=dfn[x])//\u6784\u9020\u53cc\u8fb9\u8fde\u901a\n\t\t\t{\n\t\t\t\tbt++;\n\t\t\t\tblock[bt].clear();\n\t\t\t\tdo{\n\t\t\t\t\tblock[bt].push_back(st[top--]);\n\t\t\t\t}while(st[top+1]!=y);\n\t\t\t\tblock[bt].push_back(x);//\u5272\u70b9\u5c5e\u4e8e\u591a\u4e2a\u53cc\u8fb9\u8fde\u901a\n\t\t\t}\n\t\t}\n\t\telse low[x]=min(low[x],dfn[y]);//\u65e0\u5411\u56fe\uff0c\u4e0d\u7528\u5224\u65ad\u662f\u5426\u5728\u6808\u4e2d\n\t}\n}\ninline void solve()\n{\n\tn=bt=0;\n\tfor(int i=1;i<=m*2;i++)\n\t{\n\t\tdfn[i]=low[i]=0;\n\t\thead[i]=-1;\n\t\tgedian[i]=0;\n\t}\n\ttop=dfstime=cnt=0;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint a,b;\n\t\tscanf(\"%d %d\",&a,&b);\n\t\tn=max(n,max(a,b));\n\t\tadd_edge(a,b);\n\t\tadd_edge(b,a);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(!dfn[i])//\u56fe\u53ef\u80fd\u6709\u591a\u4e2a\u8054\u901a\u5feb\n\t\t{\n\t\t\troot=i;\n\t\t\ttarjan(i);\n\t\t}\n\t}\n\tll num=1,rest=0;\n\tfor(int i=1;i<=bt;i++)\n\t{\n\t\tint len=block[i].size();\n\t\tint genum=0;\n\t\tfor(int j=0;j<len;j++)\n\t\t{\n\t\t\tif(gedian[block[i][j]])\n\t\t\tgenum++;\n\t\t}\n\t\tif(!genum)//\u65e0\u5272\u70b9\n\t\t{\n\t\t\trest+=2;\n\t\t\tnum=num*(len-1)*len/2;\n\t\t}\t\n\t\telse if(genum==1)//\u4e00\u4e2a\u5272\u70b9\n\t\t{\n\t\t\trest+=1;\n\t\t\tnum=num*(len-1);\n\t\t}\n\t}\n\tprintf(\"Case %d: \",T++);\n\tprintf(\"%lld %lld\\n\",rest,num);\n}\nint main()\n{\n\twhile(scanf(\"%d\",&m)&&m)\n\t{\n\t\tsolve();\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1572312371,
        "uid": 228395,
        "name": "\u5b64\u53f6\u6b8b\u5f71",
        "ccfLevel": 4,
        "title": "\u77ff\u573a\u642d\u5efa"
    },
    {
        "content": "[\u6233\u6211\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8cqwq](https://www.goldenpotato.cn/%E5%9B%BE%E8%AE%BA/luogu-p3225-hnoi2012%E7%9F%BF%E5%9C%BA%E6%90%AD%E5%BB%BA/)\n\n---\n# Solution\n\u8fd9\u9898\u6bd4\u8f83\u5999\u3002\n\n\u9996\u5148\uff0c~~\u6839\u636e\u5e38\u8bc6~~\uff0c**\u5982\u679c\u4e00\u4e2a\u70b9\u7206\u4e86\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b83\u662f\u5272\u70b9\u7684\u65f6\u5019\u624d\u4f1a\u5f71\u54cd\u6574\u4e2a\u56fe\u7684\u8fde\u901a\u6027**\u3002    \n\u56e0\u6b64\uff0c\u6211\u4eec\u8003\u8651\u628a\u8fd9\u9053\u9898\u5f80\u70b9\u53cc\u90a3\u65b9\u9762\u60f3\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u601d\u8003\u8fd9\u4e2a\u95ee\u9898\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u70b9\u53cc\uff0c\u6211\u4eec\u4ec0\u4e48\u65f6\u5019\u9700\u8981\u5728\u5b83\u8fd9\u91cc\u9762\u653e\u7f6e\u9003\u751f\u901a\u9053\uff1a\n1. \u5982\u679c\u4e0e\u5b83\u76f8\u8fde\u7684\u70b9\u53cc\u5757\u53ea\u6709\u4e00\u4e2a\uff1a**\u5982\u679c\u7206\u7684\u662f\u5272\u70b9\uff0c\u5219\u5fc5\u987b\u5728\u5f53\u524d\u5757\u4e2d\u7684\u4efb\u610f\u70b9\u5efa\u4e00\u4e2a\u901a\u9053\uff1b\u5982\u679c\u7206\u7684\u662f\u666e\u901a\u70b9\uff0c\u5219\u5f53\u524d\u5757\u5219\u53ef\u4ee5\u4e0e\u522b\u7684\u5757\u7167\u6837\u8054\u901a\u3002**\n2. \u5982\u679c\u4e0e\u5b83\u76f8\u8fde\u7684\u70b9\u53cc\u5757\u6709\u4e24\u4e2a\u4ee5\u4e0a\uff1a**\u65e0\u8bba\u7206\u7684\u662f\u5272\u70b9\u8fd8\u662f\u666e\u901a\u70b9\uff0c\u90fd\u4e0d\u5f71\u54cd\u5b83\u91cc\u9762\u7684\u5176\u4ed6\u70b9\u5230\u5176\u4ed6\u5757\u53bb\u9003\u751f**\u3002 \n\n\u7efc\u4e0a\uff0c**\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u53ea\u9700\u8981\u5728\u53ea\u4e0e1\u4e2a\u5176\u4ed6\u70b9\u53cc\u5757\u8fde\u63a5\u7684\u70b9\u53cc\u5757\u9632\u6b62\u9003\u751f\u901a\u9053\u5373\u53ef**\u3002\u6211\u5728\u8fd9\u91cc\u6682\u65f6\u79f0\u8fd9\u79cd\u5757\u4e3a\u201c\u53f6\u5b50\u70b9\u53cc\u201d\u3002  \n\n\u5982\u4e0b\u56fe\uff1a\u6211\u4eec\u53ea\u9700\u8981\u5728\u7d2b\u8272\u7684\u70b9\u53cc\u5757\u4e2d\u6bcf\u4e00\u4e2a\u90fd\u653e\u7f6e\u4e00\u4e2a\u9003\u751f\u901a\u9053\u5373\u53ef\u3002\u7ea2\u8272\u7684\u662f\u5176\u4ed6\u70b9\u53cc\u5757\n![image](https://wx3.sinaimg.cn/large/0061a3rzly1g1wrhf0x7rj30el0bt40b.jpg)\n\n\u56e0\u6b64\uff0c\u8981\u653e\u7f6e\u7684\u9003\u751f\u901a\u9053\u7684\u603b\u6570\u4e3a\u201c\u53f6\u5b50\u70b9\u53cc\u201d\u7684\u4e2a\u6570\uff0c\u603b\u65b9\u6848\u4e3a$\\prod (size[x]-1)$ \uff08x\u4e3a\u53f6\u5b50\u70b9\u53cc\uff09\uff08\u7531\u4e58\u6cd5\u539f\u7406\u53ef\u5f97\uff09\u3002\n\n\u4f46\u662f\uff0c\u6211\u4eec\u8981\u5c0f\u5fc3\u4e00\u4e2a\u7ec6\u8282\uff1a\u5c31\u662f\u6211\u4eec\u5728\u505aTarjan\u7684\u65f6\u5019\uff0c\u65e0\u8bba\u5982\u4f55\u90fd\u4f1a\u628a1\u53f7\u8282\u70b9\u8ba4\u4e3a\u662f\u5272\u70b9\u3002\u4f46\u662f\uff0c1\u53f7\u8282\u70b9\u6709\u53ef\u80fd\u5e76\u4e0d\u662f\u5272\u70b9\u3002**1\u53f7\u8282\u70b9\u6709\u53ef\u80fd\u5c5e\u4e8e\u67d0\u4e00\u4e2a\u70b9\u53cc\u5757\uff0c\u800c\u4e14\u8fd9\u4e2a\u70b9\u53cc\u5757\u662f\u6709\u53ef\u80fd\u4e3a\u53f6\u5b50\u8282\u70b9\u7684**\uff0c\u6211\u4eec\u505a\u7684\u65f6\u5019\u8981\u5c0f\u5fc3\u5224\u65ad\u4e00\u4e0b\u3002  \n\n\u63a5\u4e0b\u6765\uff0c\u5b9e\u73b0\u7684\u8bdd\u5c31\u968f\u4fbf\u5199\u5c31\u597d\u3002~~\u7b14\u8005\u5199\u7684\u65f6\u5019\u8111\u888b\u6709\u70b9\u72af\u4e8c\uff0c\u5c31\u7528\u4e86\u5706\u65b9\u6811\u6765\u5b9e\u73b0~~  \n\u65f6\u95f4\u590d\u6742\u5ea6$O(\\sum n)$  \n\u5c31\u9171\uff0c\u8fd9\u9053\u9898\u5c31\u88ab\u6211\u4eec\u5207\u6389\u5566(\uff5e\uffe3\u25bd\uffe3)\uff5e \n\n---\n# Code\n```cpp\n//Luogu P3225 [HNOI2012]\u77ff\u573a\u642d\u5efa\n//Apr,8th,2019\n//Tarjan\u6c42\u70b9\u53cc+\u5706\u65b9\u6811\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<cstring>\nusing namespace std;\nlong long read()\n{\n\tlong long x=0,f=1; char c=getchar();\n\twhile(!isdigit(c)){if(c=='-') f=-1;c=getchar();}\n\twhile(isdigit(c)){x=x*10+c-'0';c=getchar();}\n\treturn x*f;\n}\nconst int N=2*500+20;\nvector <int> e[N],e2[N];\nint n,m;\nint dfn[N],low[N],dfn_to,mstack[N],top,cnt,size[N];\nbool vis[N];\nvoid Tarjan(int now,int father)\n{\n\tvis[now]=true;\n\tlow[now]=dfn[now]=++dfn_to;\n\tmstack[++top]=now;\n\tfor(int i=0;i<int(e[now].size());i++)\n\t\tif(vis[e[now][i]]==false)\n\t\t{\n\t\t\tTarjan(e[now][i],now);\n\t\t\tlow[now]=min(low[now],low[e[now][i]]);\n\t\t\tif(low[e[now][i]] >= dfn[now])\n\t\t\t{\n\t\t\t\te2[now].push_back(n+ ++cnt);\n\t\t\t\tsize[cnt]=1;\n\t\t\t\twhile(mstack[top+1]!=e[now][i])\n\t\t\t\t\te2[n+cnt].push_back(mstack[top--]),\n\t\t\t\t\tsize[cnt]++;\n\t\t\t}\n\t\t}\n\t\telse if(e[now][i]!=father)\n\t\t\tlow[now]=min(low[now],dfn[e[now][i]]);\n}\nlong long ans,ans2;\nint dfs(int now)//\u8fd4\u56denow\u7684\u5b50\u6811\u5185\u7684\u65b9\u70b9\u4e2a\u6570\n{\n\tint t_cnt=(now>n);\n\tfor(int i=0;i<int(e2[now].size());i++)\n\t\tt_cnt+=dfs(e2[now][i]);\n\tif(now>n and t_cnt==1)\n\t\tans2++,ans*=(size[now-n]-1);\n\treturn t_cnt;\n}\nbool Check()//\u5224\u65ad1\u6240\u5728\u5757\u662f\u5426\u4e3a\u53f6\u5b50\u5757\n{\n\tint x=e2[1][0],t_cnt=0;\n\tfor(int i=0;i<int(e2[x].size());i++)\n\t\tif(e2[e2[x][i]].size()!=0)\n\t\t\tt_cnt++;\n\treturn t_cnt==1;\n}\nint main()\n{\n\tfor(int o=1;;o++)\n\t{\n\t\tm=read();\n\t\tif(m==0) break;\n\t\tfor(int i=1;i<=500*2+5;i++)\n\t\t\te[i].clear(),e2[i].clear();\n\t\tdfn_to=cnt=0;\n\t\tmemset(vis,0,sizeof vis);\t\n\t\t\t\n\t\tn=0;\n\t\tfor(int i=1;i<=m;i++)\n\t\t{\n\t\t\tint s=read(),t=read();\n\t\t\te[s].push_back(t);\n\t\t\te[t].push_back(s);\n\t\t\tn=max(max(n,s),t);\n\t\t}\n\t\t\n\t\tTarjan(1,0);\n\t\tans=1,ans2=0;\n\t\tdfs(1);\n\t\tif(e2[1].size()==1 and Check()==true)//\u7279\u6b8a\u5904\u74061\u53f7\u8282\u70b9\n\t\t\tans*=(size[e2[1][0]-n]-1),\n\t\t\tans2++;\n\t\tif(cnt==1)//\u7279\u5224\u53ea\u6709\u4e00\u4e2a\u8fde\u901a\u5757\u7684\u60c5\u51b5\n\t\t\tans=(n*(n-1))/2,ans2=2;\n\t\t\t\n\t\t\n\t\tprintf(\"Case %d: %lld %lld\\n\",o,ans2,ans);\n\t}\n\treturn 0;\n}\n\n```\n\n\n\n\n\n",
        "postTime": 1554731223,
        "uid": 52563,
        "name": "GoldenPotato137",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3225 \u3010[HNOI2012]\u77ff\u573a\u642d\u5efa\u3011"
    },
    {
        "content": "\u505a\u6b64\u9898\uff0c\u9700\u8981\u77e5\u9053\u70b9\u53cc\u8fde\u901a\uff1b\u77e5\u9053\u70b9\u53cc\u8fde\u901a\uff0c\u5c31\u8981\u77e5\u9053\u5272\u9876\n\n### \u5272\u9876\n\n#### \u4ec0\u4e48\u662f\u5272\u70b9\uff1f\n\n> \u5bf9\u4e8e\u65e0\u5411\u56fe$G$\uff0c\u5982\u679c\u5220\u9664\u67d0\u4e2a\u70b9$u$\u540e\uff0c\u8fde\u901a\u5206\u91cf\u6570\u76ee\u589e\u52a0\uff0c\u79f0$u$\u4e3a\u56fe\u7684\u5173\u8282\u70b9\u6216**\u5272\u9876**\u3002\u5bf9\u4e8e\u8fde\u901a\u56fe\uff0c\u5272\u9876\u5c31\u662f\u5220\u9664\u4e4b\u540e\u4f7f\u56fe\u4e0d\u518d\u8054\u901a\u7684\u70b9\u3002\n\n#### \u600e\u4e48\u6c42\uff1f\n\n##### DFS\u6811\n\n\u5b66\u4e60\u6c42\u5272\u9876\u4e4b\u524d\u8981\u5148\u5b66\u4e60dfs\u6811\u3002\n\ndfs\u6811\u5c31\u662f\u5c06\u6709\u5411\u8fde\u901a\u56fe\u8f6c\u5316\u4e3a\u641c\u7d22\u6811\uff0c\u8282\u70b9\u4ee5dfs\u5e8f\u6392\u5217\u3002\n\n######  \u6811\u4e0a\u7684\u4e00\u4e9b\u5b9a\u4e49\uff1a\n\n>- $dfn$\uff1a\u65f6\u95f4\u6233\uff0c\u7ed3\u70b9\u88ab\u8bbf\u95ee\u7684\u6b21\u5e8f\u3002\uff08\u8d77\u70b9\u4e3a$1 $\uff0c\u6bcf\u6b21\u641c\u7d22$+1$\uff09\n>\n>- $low$\uff1a\u7ed3\u70b9\u6240\u80fd\u5230\u8fbe\u7684\u6700\u5c0f$dfn$\u503c \u3002\n>\n>- \u6811\u8fb9\uff1a$dfs$\u6811\u4e0a\u5e94\u6709\u7684\u8fb9\uff0c\u53c8\u7236\u8282\u70b9\u6307\u5411\u5b50\u8282\u70b9 \u3002\n>\n>- \u8fd4\u7956\u8fb9\uff1a$dfs$\u6811\u4e0a\u4e0d\u5e94\u6709\u7684\u8fb9\uff0c\u4e14\u8be5\u8fb9\u7531\u5b50\u8f88\u8282\u70b9\u6307\u5411\u7236\u8f88\u8282\u70b9\u3002\uff08\u6ce8\u610f\u8fd9\u91cc\u4e0d\u4e00\u5b9a\u662f\u7236\u5b50\u8282\u70b9\uff09 \n>\n>- \u6a2a\u53c9\u8fb9\uff1a\u8fde\u63a5\u7684\u4e24\u4e2a\u70b9\u65e0\u7236\u5b50\u8f88\u5173\u7cfb\u3002\uff08\u6ce8\u610f\u6a2a\u53c9\u8fb9\u4e00\u5b9a\u7531$dfn$\u503c\u5927\u7684\u8282\u70b9\u6307\u5411$dfn$\u503c\u5c0f\u7684\u8282\u70b9\uff0c\u5426\u5219\u5b83\u662f\u6811\u8fb9\uff09\n>-  \u56fe\u4e2d$5$\u8282\u70b9\u7684$low$\u503c\u4e3a$5$\u800c\u4e0d\u662f$4$\uff0c\u662f\u56e0\u4e3a\u6a2a\u63d2\u8fb9$(5,6)$\u4f1a\u88ab\u5ffd\u7565\uff0c\u770b\u4e0d\u61c2\u7684\u8bdd\uff0c\u7b49\u5230\u4e0b\u9762\u8bb2\u5230\u5904\u7406\u6a2a\u53c9\u8fb9\u7684\u65f6\u5019\u518d\u7406\u89e3\u5373\u53ef\u3002\n\n\u6211\u8981\u5f15\u7528**\u51af\u5de8\u4f6c**\u7684\u4e00\u5f20\u56fe\uff0c\u6765\u4e3e\u4f8b\uff1a\n\n![006oZqiLly1g0o78oufhyj30hk0kdjui.jpg](https://img.langlangago.xyz/2019/04/06/5ca88b4dd085e.jpg)\n\n\u5b66\u5b8c\u5927\u6cd5\u5e08\u6811\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5b66\u4e60\u6c42\u5272\u9876\u4e86\n\n##### \u601d\u8def\n\n\u4e3a\u4e86\u65b9\u4fbf\u53d9\u8ff0\uff0c\u6211\u4eec\u53ea\u8ba8\u8bba\u8fde\u901a\u56fe\u3002\u5728\u8fd9\u6837\u7684\u60c5\u51b5\u4e0b\uff0c\u5927\u6cd5\u5e08\u68ee\u6797\u4e00\u5b9a\u53ea\u6709\u4e00\u68f5\u6811\u3002\u90a3\u4e48\u6811\u6839\u662f\u4e0d\u662f\u5272\u9876\u5462\uff1f\u4e0d\u96be\u53d1\u73b0\uff0c**\u5f53\u4e14\u4ec5\u5f53\u5b83\u6709\u4e24\u4e2a\u6216\u66f4\u591a\u7684\u5b50\u8282\u70b9**\u65f6\uff0c\u5b83\u624d\u662f\u5272\u9876\u2014\u2014\u65e0\u5411\u56fe\u53ea\u6709\u6811\u8fb9\u548c\u53cd\u5411\u8fb9\uff0c\u4e0d\u5b58\u5728\u8de8\u8d8a\u4e24\u68f5\u5b50\u6811\u7684\u8fb9\u3002\u5bf9\u4e8e\u5176\u4ed6\u70b9\uff0c\u6211\u4eec\u6709\u4e0b\u9762\u7684\u5b9a\u7406\uff1a\n\n> \u5b9a\u7406\uff1a\u5728\u65e0\u5411\u8054\u901a\u56feG\u7684\u5927\u6cd5\u5e08\u6811\u4e2d\uff0c\u975e\u6839\u8282\u70b9u\u662fG\u7684\u5272\u9876\u5f53\u4e14\u4ec5\u5f53u\u5b58\u5728\u4e00\u4e2a\u5b50\u8282\u70b9v\uff0c\u4f7f\u5f97v\u53ca\u5176\u6240\u6709\u540e\u4ee3\u90fd\u6ca1\u6709\u53cd\u5411\u8fb9\u8fde\u56deu\u7684**\u7956\u5148**\u3002\n\n\u53ef\u4ee5\u770b\u4e0b\u56fe\uff0c\u5f88\u5bb9\u6613\u770b\u51fau\u662f\u4e00\u4e2a\u5272\u70b9\u3002\n\n![1.jpg](https://img.langlangago.xyz/2019/07/13/5d292b28875c8.jpg)\n\n\u53ef\u4ee5\u770b\u4e0b\u56fe\uff0c\u5f88\u5bb9\u6613\u770b\u51fau\u4e0d\u662f\u4e00\u4e2a\u5272\u70b9\u3002\n\n![2.jpg](https://img.langlangago.xyz/2019/07/13/5d292deac708d.jpg)\n\n**\u7efc\u4e0a\uff0c\u5f88\u5bb9\u6613\u770b\u51fa\uff0c\u82e5$low_v \\ge dfn_u$\uff0c\u5219\u6ee1\u8db3\u5b9a\u7406\u4e2d\u7684\u6761\u4ef6\uff0c$u$\u5373\u4e3a\u5272\u9876\u3002**\n\n\u5982\u679c\u4e0d\u77e5\u9053$dfn$\u548c$low$\u662f\u4ec0\u4e48\uff0c\u5c31\u53bb\u770b\u770b\u4e0a\u9762\u7684\u5927\u6cd5\u5e08\u6811\u5427\u3002\n\n\u5982\u679c\u8fd8\u662f\u4e0d\u7406\u89e3\uff0c\u5c31\u591a\u8bfb\u51e0\u904d\uff01\n\n#### \u6a21\u677fcode\n\n```cpp\n//\u6a21\u677f\uff1ahttps://www.luogu.org/problemnew/show/P3388\nconst\u2026\u2026maxn1\u2026\u2026\nconst\u2026\u2026maxn2\u2026\u2026\n\nstruct edge{\u2026\u2026}map[maxn2<<1];\n\nint n,m,dfn[maxn1],low[maxn1],tot;bool iscut[maxn1];\nint cnt,head[maxn1];\n\ninline int read(){\u2026\u2026}\n\ninline void add(int x,int y){\u2026\u2026}\n\nvoid dfs(int x,int fa){//x\u662f\u5f53\u524d\u8282\u70b9\uff0cfa\u662f\u5f53\u524d\u8282\u70b9\u7684\u7236\u4eb2\u8282\u70b9\u3002\u89c4\u5b9a\u6811\u6839\u7684\u7236\u4eb2\u8282\u70b9\u662f0.\n    int child=0;//\u5f53\u524d\u70b9\u7684\u5b50\u8282\u70b9\u6570\n    dfn[x]=low[x]=++cnt;//\u65f6\u95f4\u6233\u66f4\u65b0\n    for(int i=head[x];i;i=map[i].next){\n        int y=map[i].to;\n        if(!dfn[y]){//\u5982\u679c\u6ca1\u6709\u8bbf\u95ee\u8fc7\n            child++;//\u5b50\u8282\u70b9\u6570+1\n            dfs(y,x);//\u5411\u4e0b\u8d70\n            low[x]=std::min(low[x],low[y]);//\u66f4\u65b0low\u503c\n            if(low[y]>=dfn[x]) iscut[x]=true;//\u5982\u679c\u7b26\u5408\u5b9a\u7406\uff0c\u90a3\u4e48x\u5c31\u662f\u5272\u9876\n        }\n        else if(y!=fa) low[x]=std::min(low[x],dfn[y]);//\u5982\u679c\u8bbf\u95ee\u8fc7\u4e86\uff0c\u66f4\u65b0low\u503c\n    }\n    if(!fa&&child==1) iscut[x]=false;//\u5f53\u4e14\u4ec5\u5f53\u5b83\u6709\u4e24\u4e2a\u6216\u66f4\u591a\u7684\u5b50\u8282\u70b9\u65f6\uff0c\u6811\u6839\u624d\u662f\u5272\u9876\n    return;\n}\n\nint main(){\n    n=read(),m=read();\n    for(register int i=1;i<=m;i++){\n        int x=read(),y=read();\n        add(x,y),add(y,x);//\u53cc\u5411\u8fb9\n    }\n    cnt=0;\n    for(register int i=1;i<=n;i++)\n        if(!dfn[i]) dfs(i,0);//\u5c06\u70b9\u5168\u90e8\u904d\u5386\u4e00\u904d\n    for(register int i=1;i<=n;i++){\n        if(iscut[i]) ++tot;//\u5982\u679c\u662f\u5272\u9876\uff0c\u603b\u6570tot++\n    }\n    printf(\"%d\\n\",tot);\n    for(register int i=1;i<=n;i++){\n        if(iscut[i]) printf(\"%d \",i);//\u5c06\u662f\u5272\u70b9\u7684\u70b9\u8f93\u51fa\n    }\n    return 0;\n}\n```\n\n### \u70b9\u53cc\u8fde\u901a\u5206\u91cf\n\n\u6765\u81ea\u51af\u5de8\u4f6c\u2026\u2026\n\n> \u5b66\u4f1a\u4e86\u6c42\u89e3\u5272\u9876\uff0c\u6c42\u51faBCC\u5c31\u5728\u5bb9\u6613\u4e0d\u8fc7\u4e86\u3002\u2014\u2014\u51af\u5de8\u4f6c\n\n\u7ef4\u62a4\u4e00\u4e2a\u6808\uff0c\u6808\u5185\u4fdd\u5b58\u6bcf\u4e00\u6b21\u8d70\u8fc7\u7684\u8fb9\uff08\u4e00\u5b9a\u4fdd\u5b58\u8fb9\uff0c\u56e0\u4e3a\u4e24\u4e2a\u4e0d\u540c\u7684\u53cc\u8fde\u901a\u5b50\u56fe\u53ef\u80fd\u6709\u4ea4\u70b9\uff0c\u4f46\u4e00\u5b9a\u6ca1\u6709\u4ea4\u8fb9\u4f46\uff09\u3002\u6bcf\u5f53\u53d1\u73b0\u5272\u9876\u65f6\uff0c\u51fa\u6808\uff0c\u76f4\u5230\u53d1\u73b0\u5f53\u524d\u51fa\u6808\u7684\u8fb9\u6070\u597d\u662f\u8fde\u63a5\u5272\u9876\u4e0e\u5224\u5b9a\u5b83\u7684\u5b50\u8282\u70b9\u7684\u8fb9\u3002\u5219\u51fa\u6808\u7684\u6240\u6709\u8fb9\u540c\u5c5e\u4e00\u4e2a\u53cc\u8fde\u901a\u5b50\u56fe\uff0c\u8fd9\u4e9b\u8fb9\u7684\u7aef\u70b9\u4e5f\u540c\u5c5e\u4e00\u4e2a\u53cc\u8fde\u901a\u5b50\u56fe\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\u56e0\u4e3a\u56de\u6eaf\u5230\u6839\u7684\u65f6\u5019\uff0c\u5269\u4f59\u6808\u5185\u5143\u7d20\u4e00\u5b9a\u662f\u4e00\u4e2a\u53cc\u8fde\u901a\u5b50\u56fe\uff0c\u6545\u5148\u51fa\u6808\u518d\u7279\u5224\u6839\u3002\n\n#### \u6a21\u677fcode\n\n```cpp\n//from \u51af\u5de8\u4f6c\uff0c\u589e\u52a0\u6ce8\u91ca\nconst int CP=1e3+3;\nconst int CE=CP*CP;\n\n//\u8fb9\u8868\nclass fs{\n    public:\n        int from,to,nxt;\n}E[CE];\nint hd[CP],cnt=0;\nvoid add(int x,int y){\u2026\u2026}\n\n//bcc\nint dfn[CP],low[CP];\nint idx=0;\n\nint bel[CP],bcnt=0; //\u6bcf\u4e2a\u70b9\u6240\u5c5e\u7684bcc\u7f16\u53f7\uff0c\u4e3a-1\u5219\u8868\u793a\u8be5\u70b9\u662f\u5272\u9876\uff08\u5272\u9876\u540c\u65f6\u5c5e\u4e8e\u4e24\u4e2abcc\uff0c\u6240\u4ee5\u5b83\u7684bel\u65e0\u610f\u4e49\uff09\nint stack[CE],top=0;\n\nvoid tarjan(int cur,int prv)\n{\n    int child = 0; \n    \n    dfn[cur] = low[cur] = ++idx; \n    \n    for(int k=hd[cur]; k; k=E[k].nxt)\n    {\n        int to=E[k].to;\n        \n        if(!dfn[to]) \n        {\n            child++;\n            stack[++top]=k; //\u5165\u6808\n            tarjan(to,cur); //\u5411\u4e0b\u641c\u7d22\n            \n            low[cur] = min(low[cur], low[to]); \n            \n            if(low[to] >= dfn[cur]) //\u662f\u5272\u9876\n            {\n                  int pos;\n                  ++bcnt;\n                  while(true)\n                  {\n                      pos=stack[top--]; //\u51fa\u6808\n                      bel[E[pos].from] = bel[E[pos].to] = bcnt;\n                      if(E[pos].from==cur && E[pos].to==to) //\u5230\u8fbe\u5f53\u524d\u7684\u6811\u8fb9\n                           break;//\u76f4\u63a5\u9000\u51fa\u5faa\u73af\n                  }\n                bel[cur] = -1; //\u6807\u8bb0\u5272\u9876\n            }\n        }\n        else if(to != prv) low[cur] = min(low[cur], dfn[to]); \n    }\n    \n    if(!prv && child==1) //\u5904\u7406\u6839\n        bel[cur] = bcnt;\n}\n\nvoid bcc() //\u4e3b\u6c42\u89e3\u51fd\u6570\n{\n    for(int i=1;i<=n;i++)\n        if(!dfn[i])\n            tarjan(i,0);\n}\n```\n\n### \u9898\u76ee\u601d\u8def\n\n\u55ef\uff0c\u57fa\u672c\u662f\u4e00\u4e2a\u88f8\u7684\u6a21\u677f\u9898\uff0c\u7b80\u5316\u9898\u610f\uff1a\u5728\u4e00\u4e2a\u65e0\u5411\u56fe\u4e0a\u9009\u62e9\u5c3d\u91cf\u5c11\u7684\u70b9\u6d82\u9ed1\uff0c\u4f7f\u5f97\u5220\u9664\u4efb\u610f\u4e00\u4e2a\u70b9\u540e\uff0c\u6bcf\u4e2a\u8fde\u901a\u5206\u91cf\u91cc\u90fd\u81f3\u5c11\u6709\u4e00\u4e2a\u9ed1\u70b9\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u6c42\u51fa\u6240\u6709\u7684\u8fde\u901a\u5b50\u56fe\uff0c\u7136\u540e\u5224\u65ad\u5176\u4e2d\u7684\u5272\u70b9\u3002\n\n\u82e5\u5272\u70b9\u4e3a1\uff0c\u5219\u5e94\u5f53\u5c06\u7b54\u6848+2\u3002\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\uff0c\u6211\u4eec\u5e94\u5f53\u8003\u8651\u5b58\u5728\u5272\u70b9\u7684\u8fde\u901a\u5757\u4e0d\u662f\u70b9-\u53cc\u8fde\u901a\u3002\u5c31\u662f\u8bf4\uff0c\u5f53\u5272\u70b9\u584c\u9677\u540e\uff0c\u5c06\u4f1a\u5206\u6210\u4e24\u4e2a\u8fde\u901a\u5757\uff0c\u8fd9\u4e24\u4e2a\u8fde\u901a\u5757\u4e0d\u80fd\u4e92\u76f8\u5230\u8fbe\u3002\n\n\u82e5\u5272\u70b9\u4e3a0\uff0c\u5219\u5e94\u5f53\u5c06\u7b54\u6848+1\u3002\u5f88\u5bb9\u6613\u7406\u89e3\u3002\n\n\u5bf9\u4e8e\u53ea\u6709\u4e00\u4e2a\u5272\u9876\u7684\u8fde\u901a\u5757\uff0c\u8bbe\u5b83\u7684\u5927\u5c0f\u4e3as\uff0c\u5219\u5171\u6709s\u22121\u79cd\u4e0d\u540c\u7684\u6d82\u9ed1\u65b9\u6848\uff0c\u6839\u636e\u4e58\u6cd5\u539f\u7406\u5c06\u8fd9\u4e9bs\u22121\u76f8\u4e58\u5373\u53ef\u3002\n\u5bf9\u4e8e\u6ca1\u6709\u5272\u9876\u7684\u8fde\u901a\u5757\uff0c\u65b9\u6848\u6570\u4e3as\u2217(s\u22121)/2\uff0c\u4e0e\u524d\u9762\u7684\u76f8\u4e58\u5373\u53ef\u3002\n\n### code\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<vector>\n#include<iostream>\n\n#define int long long\nconst int maxn=1e5+10;\n\nstruct edge{\n    int from,to,next;\n}map[maxn];\n\nint n,m,dfn[maxn],low[maxn],stk[maxn],top,bcnt,ins[maxn],ans1,ans2,idx;\nint cnt,head[maxn];\nbool iscut[maxn];\nstd::vector<int>bcc[maxn];\n\ninline void add(int x,int y){\n    map[++cnt]=(edge){x,y,head[x]};\n    head[x]=cnt;\n    return ;\n}\n\ninline void init(){\n    ans1=bcnt=idx=n=top=cnt=0;\n    memset(dfn,0,sizeof(dfn));\n    memset(low,0,sizeof(low));\n    memset(iscut,false,sizeof(iscut));\n    memset(map,0,sizeof(map));\n    memset(stk,0,sizeof(stk));\n    memset(head,0,sizeof(head));\n    memset(ins,0,sizeof(ins));\n    return ;\n}\n\nvoid dfs(int x,int fa){\n    dfn[x]=low[x]=++idx;\n    int child=0;\n    for(int i=head[x];i;i=map[i].next){\n        int y=map[i].to;\n        if(!dfn[y]){\n            child++;\n            stk[++top]=i;//\u6808\u5b58\u8fb9\n            dfs(y,x);\n            low[x]=std::min(low[x],low[y]);\n            if(low[y]>=dfn[x]){\n                int pos;\n                bcnt++;\n                bcc[bcnt].clear();//\u521d\u59cb\u5316bcc\n                while(true){\n                    pos=stk[top--];\n                    if(!ins[map[pos].from]){//\u5982\u679c\u5b83\u4e0d\u5728\u4efb\u4f55\u4e00\u4e2a\u8fde\u901a\u5757\u4e2d\n                        ins[map[pos].from]=true;\n                        bcc[bcnt].push_back(map[pos].from);\n                    }\n                    if(!ins[map[pos].to]){\n                        ins[map[pos].to]=true;\n                        bcc[bcnt].push_back(map[pos].to);\n                    }\n                    if(x==map[pos].from&&y==map[pos].to) break ;\n                }\n                iscut[x]=true,ins[x]=false;\n            }\n        }\n        else low[x]=std::min(low[x],dfn[y]);\n    }\n    if(!fa&&child==1) iscut[x]=false;\n    return ;\n}\n\ninline int read(){\n    char ch=getchar();int x=0,f=1;\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return f*x;\n}\n\nsigned main(){\n    int Case=0;\n    while(scanf(\"%lld\",&m)&&m){\n        init();\n        for(register int i=1;i<=m;i++){\n            int x=read(),y=read();\n            add(x,y),add(y,x);\n            n=std::max(n,std::max(x,y));\n        }\n        for(register int i=1;i<=n;i++){\n            if(!dfn[i]) dfs(i,0);\n        }\n        ans2=1;\n        for(int i=1;i<=bcnt;i++){\n            int cut=0,sz=bcc[i].size(); \n            for(int j=0;j<sz;j++) if(iscut[bcc[i][j]]) ++cut;//\u7edf\u8ba1\u5272\u70b9\u6570\n            if(cut==1) ans1+=1,ans2*=(sz-1);\n            if(cut==0) ans1+=2,ans2*=(sz*(sz-1))/2;\n        }\n        printf(\"Case %lld: %lld %lld\\n\",++Case,ans1,ans2);\n    }\n    return 0;\n} \n```",
        "postTime": 1562982954,
        "uid": 70178,
        "name": "noall",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3225 \u3010[HNOI2012]\u77ff\u573a\u642d\u5efa\u3011"
    },
    {
        "content": "[\u535a\u5ba2\u98df\u7528\u6548\u679c\u66f4\u4f73](https://www.luogu.org/blog/oldherd/solution-p3225)\n### \u5bf9\u4e8etarjan - d-vcc\u6c42\u6cd5\u7684\u8003\u5bdf\n\u5982\u679c\u4e00\u4e2a\u5efa\u7acb\u9003\u751f\u70b9\u7684\u70b9\u584c\u4e86\uff0c\u90a3\u4e48\u5176\u4ed6\u70b9\u90fd\u4e0d\u80fd\u5230\u54ea\u91cc\u53bb\uff0c\u4e5f\u4e0d\u80fd\u7ecf\u8fc7\u5b83\u3002  \n\u5173\u4e8e\u7ecf\u8fc7\u4e0d\u7ecf\u8fc7\uff0c\u8fd9\u4e0d\u5c31\u662f\u8bf4\u6709\u5173\u4e8e\u53cc\u8fde\u901a\u7684\u95ee\u9898\u5417?\u5728\u540c\u4e00\u4e2a\u53cc\u8fde\u901a\u5206\u91cf\u4e2d\uff0c\u574d\u584c\u4efb\u610f\u4e00\u4e2a\u70b9\uff0c\u539f\u56fe\u5fc5\u7136\u8fd8\u662f\u8fde\u901a\u3002\u56e0\u800c\u81f3\u591a\u5728\u6bcf\u4e2av-dcc\u4e2d\u5efa\u7acb\u4e00\u4e2a\u9003\u751f\u70b9\u3002  \n\u8fd8\u80fd\u5426\u518d\u53bb\u6389\u4e00\u4e9b\u70b9\uff1f\u7f29\u70b9\u4e4b\u540e\uff0c\u662f\u4e00\u68f5\u6811\uff0c\u4e00\u4e2a\u7ed3\u70b9\u7684\u5ea6\u5982\u679c\u5927\u4e8e1\uff0c\u90a3\u4e48\u5176\u4e2d\u4e00\u4e2a\u574d\u584c\u8fd8\u80fd\u4ece\u53e6\u4e00\u4e2a\u4e2d\u9003\u8dd1\u5230\u5176\u4ed6\u70b9\u4e4b\u4e2d\u3002v-dcc\u901a\u8fc7\u4ec0\u4e48\u4e0e\u5176\u5b83v-dcc\u76f8\u8fde\u5462\uff1f\u5fc5\u7136\u662f\u5272\u70b9\uff0c\u5426\u5219\u4e0d\u6ee1\u8db3\u5206\u91cf\u7684\u6781\u5927\u6027\u3002\u800c\u5ea6\u6570\u5c31\u7b49\u4ef7\u4e8e\u6bcf\u4e2a\u5206\u91cf\u4e2d\u7684\u5272\u70b9\u6570\u3002  \n\u7279\u6b8a\u60c5\u51b5\u662f\uff0c\u5982\u679c\u6574\u4e2a\u56fe\u4e3av-dcc\uff0c\u90a3\u4e48\u5fc5\u987b\u8bbe\u7acb2\u4e2a\u70b9\uff0c\u56e0\u4e3a\u4e0d\u80fd\u518d\u8dd1\u5230\u5176\u4ed6\u5730\u65b9\u53bb\u4e86\u3002  \n\u65b9\u6848\u6570\u5bb9\u6613\u7528\u6570\u5b66\u624b\u6bb5\u7edf\u8ba1\u5f97\u5230\u3002\n\u9644\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <vector>\n\nusing namespace std;\n\nconst int maxn = 510, maxm = 510;\n#define min(x, y) (x) < (y) ? (x) : (y)\n\nint head[maxn], ver[maxm<<1], nex[maxm<<1], tot;\ninline void addedge(int u, int v) {\n    ver[tot] = v; nex[tot] = head[u]; head[u] = tot++;\n}\n\nvector<int> dcc[maxn];\nint dfn[maxn], low[maxn], cut[maxn], stack[maxn], st, root, dfs_clock = 1, cc;\ninline void tarjan(int cur) {\n    stack[st++] = cur;\n    dfn[cur] = low[cur] = dfs_clock++;\n    if(cur == root && head[cur] == -1) {\n        dcc[cc++].push_back(cur);\n        return;\n    }\n    int flag = 0;\n    for(int i = head[cur]; i != -1; i = nex[i]) {\n        if(!dfn[ver[i]]) {\n            tarjan(ver[i]);\n            low[cur] = min(low[cur], low[ver[i]]);\n            if(dfn[cur] <= low[ver[i]]) {\n                flag++;\n                if(cur != root || flag == 2) cut[cur] = 1;\n                int t;\n                do {\n                    t = stack[(st--)-1];\n                    dcc[cc].push_back(t);\n                }while(t != ver[i]);\n                dcc[cc++].push_back(cur);\n            }\n        } else \n            low[cur] = min(low[cur], dfn[ver[i]]);\n    }\n}\n\n\n\nint main() {\n    int n, m, u, v, cases = 1;\n    while(scanf(\"%d\", &m) == 1 && m) {\n        memset(head, -1, sizeof(head));\n        memset(dfn, 0, sizeof(dfn));\n        memset(cut, 0, sizeof(cut)); \n        n = cc = tot = 0;\n        while(m--) {\n            scanf(\"%d %d\", &u, &v);\n            addedge(u, v);\n            addedge(v, u);\n        }\n        n = max(n, u); n = max(n, v);\n        for(int i = 1; i <= n; i++)\n            if(!dfn[i]) {\n                st = 0;\n                root = i, tarjan(i);\n            }\n        if(cc == 1) {\n            printf(\"Case %d: %d %lld\\n\", cases++, 2, (long long)dcc[0].size() * (dcc[0].size()-1) / 2);\n            dcc[0].clear();\n            continue;\n        }\n        long long num = 0, sor = 1;\n        for(int i = 0; i < cc; i++) {\n            int ncut = 0;\n            for(vector<int>::iterator it = dcc[i].begin(); it != dcc[i].end(); it++)\n                if(cut[*it]) ncut++;\n            if(ncut == 1) {\n                num++; sor *= (dcc[i].size()-ncut);\n            }\n            dcc[i].clear();\n        }\n        printf(\"Case %d: %lld %lld\\n\", cases++, num, sor);\n    }\treturn 0;\n\n}\n```\n\u6b22\u8fce\u4e92\u76f8\u5173\u6ce8(\u7136\u800c\u5728oi\u754c\u849f\u84bb\u7684\u5708\u5f88\u5c0f)\u3002  \n\u6700\u540e\u518d\u6b21\u5b89\u5229\u4e00\u4e0b[\u849f\u84bb\u7684\u6d1b\u8c37\u535a\u5ba2](https://www.luogu.org/blog/oldherd/)",
        "postTime": 1557848053,
        "uid": 88735,
        "name": "\u5bd2\u9e3d\u513f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3225 \u3010[HNOI2012]\u77ff\u573a\u642d\u5efa\u3011"
    },
    {
        "content": " \u8fd9\u4e2a\u9898\u5148\u6c42\u51fa\u5272\u70b9\uff08\u5982\u679c\u6ca1\u6709\uff0c\u76f4\u63a5\u51fa\u53e3\u65702\uff0c\u65b9\u6848\u6570\uff08\u70b9\u6570-1\uff09*\u70b9\u6570/2\u5c31\u884c\u4e86 \uff09\uff0c\u7136\u540e\u5269\u4e0b\u7684\u70b9\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n 1\u3001\u53ea\u548c\u4e00\u4e2a\u5272\u70b9:\u6709\u8054\u901a\u7528\u5e76\u67e5\u96c6\u8d70\u4e00\u904d\u5c31\u53ef\u4ee5\n 2\u3001\u548c\u591a\u4e2a\u5272\u70b9\u8054\u901a\uff08****\u4e0d\u7b97\uff09\n ```c\n#include <bits/stdc++.h>\n#define N 5050\n#define M 110000\n#define inf 2147483647\nusing namespace std;\nint p[N],b[M],nt[M],num,n,fa[N],flag[N],f[N],ans,T,belong[N],o[N],ff;\nlong long sum=1;\nvoid add(int x,int y)\n{\n    num++;\n    nt[num]=p[x];\n    p[x]=num;\n    b[num]=y;\n}\nint father(int x)\n{\n    if(fa[x]==x)return x;\n    return fa[x]=father(fa[x]);\n}\nint dfs(int x)\n{\n    int e=p[x],_size=1;\n    while(e>0)\n    {\n        int k=b[e];\n        if(!flag[k])\n        {\n            flag[k]=1;\n            _size+=dfs(k);\n        }\n        e=nt[e];\n    }\n    return _size;\n}\nvoid dfs1(int x)\n{\n    int e=p[x];\n    while(e>0)\n    {\n        int k=b[e];\n        if(fa[k]!=-1&&!flag[k])\n        {\n            belong[k]++;\n            flag[k]=1;\n            dfs1(k);\n        }\n        e=nt[e];\n    }\n}\nint main()\n{\n    while(scanf(\"%d\",&n)&&n)\n    {\n        T++;\n        memset(f,0,sizeof(f));\t\t//\u7edf\u8ba1\u5e76\u67e5\u96c6\u6bcf\u4e00\u5806\u7684\u4e2a\u6570\n        memset(o,0,sizeof(o));\t\t//\u5b58\u5272\u70b9\n        num=0;\n        ans=0;\n        sum=1;\n        ff=0;\t\t\t\t\t\t\t//\u662f\u5426\u6709\u5272\u70b9\n        int t=0;\n        memset(belong,0,sizeof(belong));//\u6807\u8bb0\u5173\u8054\u7684\u5272\u70b9\u6570\n        memset(p,0,sizeof(p));\t\t\t//\u524d\u5411\u661f\n        int m=0;//\u70b9\u6570\t\t\t\t\t\t//\u66f4\u65b0\n        for(int i=1;i<=n;i++)\n        {\n            int x,y;\n            scanf(\"%d%d\",&x,&y);\n            add(x,y);\n            add(y,x);\n            m=max(x,max(m,y));\n        }\n        for(int i=1;i<=m;i++)fa[i]=i;\n        for(int i=1;i<=m;i++)\n        {\n            memset(flag,0,sizeof(flag));\n            flag[i]=1;\n            flag[b[p[i]]]=1;\n            if(dfs(b[p[i]])<m-1)\n            {\n                fa[i]=-1;\n                o[++t]=i;\n                ff++;\n            }\n        }\n        for(int i=1;i<=t;i++)\n        {\n            memset(flag,0,sizeof(flag));\n            flag[o[i]]=1;\n            dfs1(o[i]);\n        }\n        for(int i=1;i<=m;i++)if(belong[i]>1)fa[i]=-1;\n        for(int i=1;i<=m;i++)\n        {\n            if(fa[i]==-1)continue;\n            int e=p[i];\n            while(e>0)\n            {\n                int k=b[e];\n                if(fa[k]!=-1)\n                {\n                    int fx=father(i);\n                    int fy=father(k);\n                    if(fx!=fy)fa[fx]=fy;\n                }\n                e=nt[e];\n            }\n        }\n        for(int i=1;i<=m;i++)f[father(fa[i])]++;\n        for(int i=1;i<=m;i++)\n        {\n            if(f[i]!=0)\n            {\n                sum*=f[i];\n                ans++;\n            }\n        }\n        if(ff==0)\n        {\n            sum=m*(m-1)/2;\n            ans=2;\n        }\n        printf(\"Case %d: %d %lld\\n\",T,ans,sum);\n    }\n}\n\n\n```",
        "postTime": 1549094641,
        "uid": 138891,
        "name": "\u5706\u6ee1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3225 \u3010[HNOI2012]\u77ff\u573a\u642d\u5efa\u3011"
    },
    {
        "content": "# \u5272\u70b9+DFS\n\n\u9996\u5148\u6211\u4eec\u77e5\u9053\uff0c\u5bf9\u4e8e\u8fd9\u5f20\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u574d\u584c\u7684\u662f\u54ea\u4e2a\u70b9\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u574d\u584c\u7684\u70b9\uff0c\u6700\u591a\u53ef\u4ee5\u5c06\u56fe\u5206\u6210\u82e5\u5e72\u4e2a\u4e0d\u8fde\u901a\u7684\u5757\uff0c\u8fd9\u6837\u6bcf\u4e2a\u5757\u6211\u4eec\u53ef\u80fd\u9700\u8981\u4e00\u4e2a\u51fa\u53e3\u624d\u80fd\u6ee1\u8db3\u9898\u76ee\u7684\u8981\u6c42\uff0c\u679a\u4e3e\u6bcf\u4e2a\u574d\u584c\u7684\u70b9\u663e\u7136\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6bcf\u4e2a\u56fe\u7684\u82e5\u5e72\u4e2a\u5272\u70b9\uff0c\u8fd9\u6837\u9664\u53bb\u5272\u70b9\u7684\u56fe\u6709\u82e5\u5e72\u4e2a\u5757\uff0c\u6211\u4eec\u53ef\u4ee5\u6c42\u51fa\u53ea\u4e0e\u4e00\u4e2a\u5272\u70b9\u76f8\u8fde\u7684\u5757\uff0c\u8fd9\u4e9b\u5757\u5fc5\u987b\u8981\u4e00\u4e2a\u51fa\u53e3\u624d\u80fd\u6ee1\u8db3\u9898\u76ee\u7684\u8981\u6c42\uff0c\u6bcf\u4e2a\u5757\u5185\u6709\u5757\u5185\u4e2a\u6570\u79cd\u9009\u6cd5\uff0c\u7136\u540e\u5c06\u6240\u6709\u6ee1\u8db3\u4e00\u4e2a\u5272\u70b9\u76f8\u8fde\u7684\u5757\u7684\u70b9\u6570\u8fde\u4e58\u5c31\u884c\u4e86\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u4e0e\u4e00\u4e2a\u5272\u70b9\u76f8\u8fde\u7684\u5757\u5fc5\u987b\u5efa\u51fa\u53e3\u53ef\u4ee5\u6362\u4e00\u79cd\u65b9\u5f0f\u7406\u89e3\uff0c\u6211\u4eec\u5c06\u6bcf\u4e2a\u5757\u770b\u505a\u4e00\u4e2a\u70b9\uff0c\u90a3\u4e48\u7b97\u4e0a\u5272\u70b9\u4e4b\u540e\uff0c\u8fd9\u5f20\u56fe\u5c31\u53d8\u6210\u4e86\u4e00\u9897\u6811\uff0c\u53ea\u6709\u53f6\u5b50\u8282\u70b9\u6211\u4eec\u9700\u8981\u5efa\u7acb\u51fa\u53e3\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u975e\u53f6\u5b50\u8282\u70b9\u6211\u4eec\u4e0d\u8bba\u65ad\u6389\u54ea\u4e2a\u70b9\u6211\u4eec\u90fd\u6709\u53e6\u4e00\u79cd\u65b9\u5f0f\u76f8\u8fde\uff0c\u8fd9\u91cc\u7684\u53f6\u5b50\u8282\u70b9\u5c31\u662f\u4e0e\u4e00\u4e2a\u5272\u70b9\u76f8\u8fde\u7684\u5757\u3002\n\n\u6700\u540e\u8fd8\u6709\u4e2a\u7279\u5224\uff0c\u5c31\u662f\u5bf9\u4e8e\u4e00\u4e2a\u53cc\u8fde\u901a\u56fe\uff0c\u6211\u4eec\u81f3\u5c11\u9700\u8981\u9009\u53d6\u4e24\u4e2a\u70b9\u4f5c\u4e3a\u51fa\u53e3\uff0c\u56e0\u4e3a\u5982\u679c\u5c31\u9009\u4e00\u4e2a\uff0c\u53ef\u80fd\u8be5\u70b9\u4e3a\u574d\u584c\u70b9\uff0c\u8fd9\u65f6\u6211\u4eec\u5c31\u4efb\u9009\u4e24\u4e2a\u70b9\u5c31\u884c\u4e86\uff0c\u65b9\u6848\u6570\u4e3a\u70b9\u6570(\u70b9\u6570-1)>>1\u3002\n\u5148tarjan\u6c42\u4e00\u4e0b\u6240\u6709\u7684\u70b9\u53cc\u3002 \u000b\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u53cc\uff0c\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n1\u3001\u53ea\u6709\u4e00\u4e2a\u5272\u70b9\uff0c\u5fc5\u987b\u9009\u4e00\u4e2a\u975e\u5272\u70b9\u3002\n\n2\u3001\u6709>=2\u4e2a\u5272\u70b9\uff0c\u4e0d\u7528\u9009 \n\n3\u3001\u67090\u4e2a\u5272\u70b9\uff0c\u5fc5\u987b\u9009\u4fe9\u3002\n\n\u4e0b\u9762\u662f\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#define ll long long\n#define max(a,b) ((a)>(b)?(a):(b))\nusing namespace std;\nint const maxn=100000+10;\nll low[maxn],dfn[maxn],head[maxn];\nbool cut[maxn];\nll n,t,maxx,cnt,tot,top,len,root;\nstruct node{\n\tint next,to;\n}a[maxn*2];\nvoid wash(){\n\tt++;   maxx=-1;\n\tlen=tot=cnt=top=0;\n\tmemset(cut,0,sizeof(cut));\n    memset(low,0,sizeof(low));\n    memset(a,0,sizeof(a));\n    memset(head,0,sizeof(head));\n    memset(dfn,0,sizeof(dfn));\n}\nvoid add(int u,int to){\n\t++cnt;\n\ta[cnt].to=to;\n\ta[cnt].next=head[u];\n\thead[u]=cnt;\n}\nvoid tarjan(int x){\n\tint flag=0,i=head[x];\n    for(dfn[x]=low[x]=++len;i;i=a[i].next){\n        int v=a[i].to;\n        if(dfn[v]==0){\n            ++flag;\n            tarjan(v);\n            if(low[v]>=dfn[x]) cut[x]=1,++cnt;//cnt\u8868\u793a\u5272\u70b9\u7684\u4e2a\u6570\uff0c\u4ee5\u4fbf\u540e\u9762\u7684\u76f4\u63a5\u4f7f\u7528 \n        }\n        low[x]=min(low[x],low[v]);\n    }\n    if(x==root && flag==1)  cut[x]=0,--cnt;//\u5bf9\u6839\u8282\u70b9\u8fdb\u884c\u7279\u5224 \n}\nvoid dfs(int x,int t){\n    dfn[x]=t;\n    if(cut[x]==1){\n\t    ++cnt;\n\t\treturn;\n\t}\n\t++tot;\n    for(int i=head[x];i;i=a[i].next){\n        int v=a[i].to;\n        if(dfn[v]!=t)dfs(v,t);\n    }\n}\nvoid init(){\n\twash();\n\tfor(int i=1;i<=n;i++){\n\t\tint x,y;  cin>>x>>y;\n\t\tadd(x,y),add(y,x);\n\t\tmaxx=max(maxx,max(x,y));\n\t}cnt=0;\n\tfor(int i=1;i<=maxx;i++) {\n\t\troot=i;\n\t\tif(!dfn[i]) tarjan(i);\n\t}\n\tif(!cnt){\n\t\tprintf(\"Case %d: 2 %d\\n\",t,maxx*(maxx-1)/2);//\u56e0\u4e3a\u6ca1\u6709\u5272\u70b9\uff0c\u5fc5\u987b\u81f3\u5c11\u9009\u62e9\u4e24\u4e2a\u70b9\uff0c\u5426\u5219\u552f\u4e00\u70b9\u53ef\u80fd\u662f\u574d\u584c\u70b9 \n\t\treturn;\n\t}\n\tlen=0;\n\tmemset(dfn,0,sizeof(dfn));\n\tlong long ans=1;\n\ttop=0;\n\tfor(int i=1;i<=maxx;i++){\n\t\tif(!dfn[i] && !cut[i]){\n\t\t\ttot=cnt=0;\n\t\t\tdfs(i,i);\n\t\t\tif(cnt==0)  top+=2,ans*=(long long)((tot-1)*tot/2);//\u5982\u679c\u6ca1\u6709\u5272\u70b9\u3002\u3002\u3002\u7406\u7531\u540c\u4e0a \n        \tif(cnt==1)  top+=1,ans*=(long long)(tot); //\u6709\u5272\u70b9\uff0c\u5219\u76f8\u4e58 \n\t\t}\n\t}\n\tprintf(\"Case %d: %d %lld\\n\",t,top,ans);\n\treturn;\n}\nint main(){\n\t//freopen(\"1.in\",\"r\",stdin);\n\twhile(cin>>n && n) init();//\u591a\u7ec4\u6570\u636e \n\treturn 0;\n}\n```\n\n",
        "postTime": 1572423892,
        "uid": 11101,
        "name": "\u4e00\u6c34\u9611\u73ca",
        "ccfLevel": 0,
        "title": "P3225 \u77ff\u573a\u642d\u5efa\u9898\u89e3"
    },
    {
        "content": "\u672c\u9898\u89e3\u540c\u6b65\u5728\u6211\u7684[blog](https://www.cnblogs.com/wzztabaorz/articles/11411493.html)\n\u4e2d\u53d1\u8868\n\n~~tarjan\u7684\u9898\u76ee\u4e00\u822c\u626b\u4e00\u773c\u5c31\u770b\u51fa\u6765\u4e86~~\n\n~~\u4e5f\u53ef\u80fd\u662f\u6211\u592a\u84bb\u4e86\u53ea\u4f1a\u6c34\u6c34\u9898~~\n\n\u601d\u8def\uff1atarjan\u6c42\u65e0\u5411\u56fe\u7684\u5f3a\u8fde\u901a\u5206\u91cf\n\nPS\uff1a\u6c42tarjan\u65f6\u987a\u4fbf\u628a\u5272\u70b9\u6c42\u51fa\u6765\n\n\u4e0e\u6a21\u677f\u4e0d\u540c\u7684\u662f\u6b64\u9898\u4e0d\u80fd\u76f4\u63a5cout\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u4e2a\u6570\n\n\u8981\u6839\u636e\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u5272\u70b9\u6570\u91cf\u5224\u65ad\n\n\u5728\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff08dcc[i]\uff09\u5185\uff1a\n\n1.\u8bbeans1\u4e3a\u81f3\u5c11\u8981\u4fee\u5efa\u7684\u6551\u63f4\u51fa\u53e3\u6570\u91cf\uff0cans2\u4e3a\u65b9\u6848\u603b\u6570\n\n2.\u82e5\u5272\u70b9\u6570\u91cf>1\uff0c\u5219\u5bf9\u7b54\u6848\u65e0\u5f71\u54cd\n\n3.\u82e5\u5272\u70b9\u6570\u91cf=1\uff0c\u5219\u6709\n```cpp\nans1++;\nans2*=(dcc[i].size()-1);\n```\n\n4.\u82e5\u5272\u70b9\u6570\u91cf=0\uff0c\u5219\u6709\n```cpp\nans1+=2;\nans2*=dcc[i].size()*(dcc[i].size()-1)/2;\n```\n\n\u53e6\u5916\u5728\u5224\u65ad\u7b2c4\u70b9\u65f6\uff0c\u5de8\u5751\uff1a\u65b9\u6848\u603b\u6570\u6bcf\u6b21\u8981\u51cf\u534a\uff0c\u56e0\u4e3a\u6709\u91cd\u590d\u3002\n\ncode\u5982\u4e0b\uff08\u4ee3\u7801\u7565\u4e11\uff0c\u52ff\u55b7\uff09\n```cpp\n#include<bits/stdc++.h>\n#define re register int\nusing namespace std;\nint n,m,t,gs,cnt,root,dfn[50010],low[50010],cut[50010];\nlong long ans1,ans2=1;\nvector<int>Edge[50010],dcc[50010];\nstack<int>stk;\nint read()\n{\n\tint ans=0;\n\tchar w=' ',ch=getchar();\n\twhile(ch<'0' || ch>'9')\n\t{\n\t\tw=ch;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0' && ch<='9')\n\t{\n\t\tans=(ans<<3)+(ans<<1);\n\t\tans+=ch-'0';\n\t\tch=getchar();\n\t}\n\treturn (w=='-'?-ans:ans);\n}\nvoid tarjan(int x)\n{\n\tdfn[x]=low[x]=++t;\n\tstk.push(x);\n\tif(x==root && Edge[x].size()==0)\n\t{\n\t\tdcc[++cnt].push_back(x);\n\t\treturn;\n\t}\n\tint flag=0;\n\tfor(re j=0;j<Edge[x].size();j++)\n\t{\n\t\tint y=Edge[x][j];\n\t\tif(!dfn[y])\n\t\t{\n\t\t\ttarjan(y);\n\t\t\tlow[x]=min(low[x],low[y]);\n\t\t\tif(low[y]>=dfn[x])\n\t\t\t{\n\t\t\t\tflag++;\n\t\t\t\tif(x!=root || flag>1) cut[x]=1;\n\t\t\t\tcnt++;\n\t\t\t\tint z=0;\n\t\t\t\tdo\n\t\t\t\t{\n\t\t\t\t\tz=stk.top();\n\t\t\t\t\tstk.pop();\n\t\t\t\t\tdcc[cnt].push_back(z);\n\t\t\t\t}while(z!=y);\n\t\t\t\tdcc[cnt].push_back(x);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlow[x]=min(dfn[y],low[x]);\n\t\t}\n\t}\n}\nint main()\n{\n\tint a1,a2;\n\twhile(cin>>m && m)\n\t{\n\t\tfor(re i=1;i<=m;i++)\n\t\t{\n\t\t\ta1=read();a2=read();\n\t\t\tEdge[a1].push_back(a2);\n\t\t\tEdge[a2].push_back(a1);\n\t\t\tn=max(n,max(a1,a2));\n\t\t}\n\t\tfor(re i=1;i<=n;i++)\n\t\t{\n\t\t\tif(!dfn[i])\n\t\t\t{\n\t\t\t\troot=i;\n\t\t\t\ttarjan(i);\n\t\t\t}\n\t\t}\n\t\tfor(re i=1;i<=cnt;i++)\n\t\t{\n\t\t\tint sum=0;\n\t\t\tfor(re j=0;j<dcc[i].size();j++)\n\t\t\t{\n\t\t\t\tif(cut[dcc[i][j]])\n\t\t\t\t{\n\t\t\t\t\tsum++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(sum==0)\n\t\t\t{\n\t\t\t\tans1+=2;\n\t\t\t\tans2*=dcc[i].size()*(dcc[i].size()-1)/2;\n\t\t\t}\n\t\t\telse if(sum==1)\n\t\t\t{\n\t\t\t\tans1++;\n\t\t\t\tans2*=(dcc[i].size()-1);\n\t\t\t}\n\t\t}\n\t\tprintf(\"Case %d: %lld %lld\\n\",++gs,ans1,ans2);\n\t\tn=0;ans1=0;ans2=1;cnt=0;t=0;\n\t\tmemset(dfn,0,sizeof(dfn));\n\t\tmemset(low,0,sizeof(low));\n\t\tmemset(Edge,0,sizeof(Edge));\n\t\tmemset(dcc,0,sizeof(dcc));\n\t\tmemset(cut,0,sizeof(cut));\n\t\tstk=stack<int>();\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1566790028,
        "uid": 95573,
        "name": "\u6d1b\u8c37\u6700\u84bb\u84bb\u9e21",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3225 \u3010[HNOI2012]\u77ff\u573a\u642d\u5efa\u3011"
    }
]