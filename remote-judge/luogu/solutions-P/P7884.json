[
    {
        "content": "\u662f\u7684\uff0c\u8fd9\u662f\u4e00\u7bc7\u4f7f\u7528 min25 \u7b5b\u7684\u9898\u89e3\u3002\u3002\u3002\n\n\u672c\u9898\u89e3\u53c2\u8003[command_block\u5927\u4f6c\u7684\u535a\u5ba2](https://www.luogu.com.cn/blog/command-block/new-sieve)\uff0c\u4ee3\u7801\u662f\u5bf9\u5176\u5728 LOJ \u4e0a\u7684\u63d0\u4ea4\u5361\u5e38\u540e\u5199\u51fa\u6765\u7684\u3002\n\nML \u677f\u5b50\u628a\u6570\u636e\u5f00\u5230 $ 10^{13} $ \u901f\u5ea6\u8fd8\u548c\u4f9b\u9898\u4eba\u7684 ML \u901f\u5ea6\u5dee\u4e0d\u591a\u5feb\u5c31\u79bb\u8c31\u3002\u3002\u3002\n\n\u8fd9\u4e2a\u677f\u5b50\u7684\u539f\u7406\u662f\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u4f18\u5316\u7684 min25 \u7b5b\uff0c\u5728\u4e0b\u9762\u4f1a\u8be6\u7ec6\u8bb2\u89e3\u3002\u590d\u6742\u5ea6\u662f $ O((\\frac n {\\log n})^{\\frac 2 3}) $ \u7684\u3002\n\n\u9996\u5148\u6709\u7ecf\u5178 DP\uff1a\n$$ G(n,k)=G(n,k-1)-G(\\frac n {pri_k},k-1)+G(pri_{k-1},k-1) $$\n\u8fb9\u754c\u6761\u4ef6\u4e3a\uff1a\n$$ G(n,0)=n $$\n\u6839\u636e\u79ef\u5206\uff0c\u53ef\u4ee5\u5f97\u5230\u6734\u7d20\u7684 DP \u662f $ O(\\frac {n^{\\frac 3 4}} {\\log n}) $ \u7684\u3002\u63a5\u4e0b\u6765\u5c1d\u8bd5\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5bf9\u4e8e $ n $ \u8fc7\u5c0f\u65f6\u7684 $ G $\u3002\n\n\u8bbe\u5206\u6cbb\u7ebf\u4e3a $ B1 $\u3002\u5bf9 $ B1 $ \u4e00\u4e0b\u7684\u6240\u6709 $ G $ \u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\uff0c\u5bf9\u4e8e $ B1 $ \u4ee5\u4e0a\u7684 $ G $ \u4f7f\u7528 DP\u3002\n\n\u8fd9\u4e00\u90e8\u5206\u7684\u590d\u6742\u5ea6\u4e3a $ O(B1\\log B1+\\frac n {\\sqrt{B1}\\log n}) $\uff0c\u53d6 $ B1=\\frac {n^{\\frac 2 3}} {\\log^{\\frac 4 3} n} $ \u53ef\u4ee5\u5f97\u5230\u590d\u6742\u5ea6\u4e3a $ O(\\frac {n^{\\frac 2 3}} {\\log^{\\frac 1 3} n}) $\u3002\n\n\u7ee7\u7eed\u5206\u6cbb\uff0c\u4ee4 $ B2 $ \u4ee5\u4e0b\u7684\u90e8\u5206\u66b4\u529b\u7edf\u8ba1\u3002\n\n\u5f53 $ B2=\\sqrt [6] n $ \u65f6\uff0c\u590d\u6742\u5ea6\u4e3a $ O(n^{\\frac 2 3}\\log n+\\frac n {\\sqrt{B1}\\log n}+B1) $\uff0c\u53d6 $ B1=(\\frac n {\\log n})^{\\frac 2 3} $ \u53ef\u4ee5\u5f97\u5230\u590d\u6742\u5ea6\u4e3a $ O((\\frac n {\\log n})^{\\frac 2 3}) $\u3002\n\n\u590d\u6742\u5ea6\u7684\u5177\u4f53\u63a8\u5bfc\u53ef\u4ee5\u770b blog\u3002~~\u7b14\u8005\u770b\u4e0d\u61c2\u4e8e\u662f\u61d2\u5f97\u89e3\u91ca\u76f4\u63a5\u8d3a\u4ee3\u7801\u4e86~~\n```cpp\n//\u611f\u8c22@command_block\u7684\u677f\u5b50 \n#include<cstdio>\n#include<cmath>\nconst int M=3e7,Lim=8.5e7+10;\ntypedef unsigned long long ull;\nint l2,tot,lim,BIT[Lim];\null n,g[M],w[M];\ndouble inv[M];\nbool e[Lim];\ninline ull min(const ull&a,const ull&b){\n\treturn a>b?b:a;\n}\ninline ull max(const ull&a,const ull&b){\n\treturn a>b?a:b;\n}\ninline void Add(int x){\n\te[x]=1;\n\twhile(x<=lim)++BIT[x],x+=x&-x;\n}\ninline ull Query(int x){\n\tull sum=x;\n\twhile(x)sum-=BIT[x],x^=x&-x;\n\treturn sum;\n}\nsigned main(){\n\tregister int i,j,tl,tl2,tl3;\n\tregister ull t,r,x0;\n\tscanf(\"%llu\",&n);\n\tlim=min(max(max((pow(n/log2(n),0.66)),l2=sqrtl(n)+1),10000),n);\n\tfor(i=1;i<=l2;i++)w[i]=i-1,inv[i]=1./i;\n\tfor(tot=1;1ull*lim*tot<n;tot++)g[tot]=n*inv[tot]+1e-6-1;\n\t--tot;Add(1);\n\tfor(i=2;1ull*i*i<=n;i++){\n\t\tif(e[i])continue;\n\t\tx0=w[i-1];t=n/i;r=1ull*i*i;\n\t\ttl=min(n/r,(ull)tot);tl2=min(tl,n/(1ull*l2*i));tl3=min(tl2,tot/i);\n\t\tfor(j=1;j<=tl3;++j)g[j]-=g[j*i]-x0;\n\t\tfor(j=tl3+1;j<=tl2;j++)g[j]-=Query(t*inv[j]+1e-6)-x0;\n\t\tfor(j=tl2+1;j<=tl;++j)g[j]-=w[int(t*inv[j]+1e-6)]-x0;\n\t\tfor(j=l2;j>=r;--j)w[j]-=w[int(j*inv[i]+1e-6)]-x0;\n\t\tif(1ull*i*i<=lim){\n\t\t\tfor(j=i*i;j<=lim;j+=i)if(!e[j])Add(j);\n\t\t}\n\t}\n\tif(!tot)g[1]=Query(n);\n\tprintf(\"%llu\",g[1]);\n}\n```",
        "postTime": 1633097094,
        "uid": 160839,
        "name": "Prean",
        "ccfLevel": 7,
        "title": "\u6570\u8bba min25\u7b5b P7884\u9898\u89e3"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P7884)\n\n\n------------\n#### \u524d\u8a00\n\n\u8fd9\u7bc7\u9898\u89e3\u63d0\u4f9b\u4e00\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\dfrac{n^{\\frac{2}{3}}}{\\log ^{2}n})$ \u7684\u8f83\u6613\u5b9e\u73b0\u7684\u65b9\u6cd5\u3002\n\n------------\n#### \u6d41\u7a0b\n\u8003\u8651\u6734\u7d20\u7684 DP :\n\n$S(n,a)=S(n,a-1)-S(\\dfrac{n}{p_a},a-1)+S(p_{a-1},a-1)$\n\n\u5bf9\u4e8e $p \\le n^{\\frac{1}{8}}$ \uff0c\u6211\u4eec\u4f7f\u7528\u4ee5\u4e0a\u5f0f\u5b50\u8fdb\u884c\u8f6c\u79fb\n\n\u5bf9\u4e8e $p > n^{\\frac{1}{8}}$ \uff0c\u6211\u4eec\u8003\u8651\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4 k \u4ee5\u4e0b\u7684\u6570\u3002\u6ce8\u610f\u5230\u542b\u6709\u5c0f\u4e8e $n^{\\frac{1}{8}}$ \u7684\u7d20\u56e0\u6570\u7684\u6570\u5df2\u88ab\u7b5b\u53bb\uff0c\u6811\u72b6\u6570\u7ec4\u53ea\u9700\u8fdb\u884c $O(\\dfrac{k}{\\log n})$ \u6b21\u4fee\u6539\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(k)$\u3002\n\n\u5982\u679c\u6211\u4eec\u6bcf\u6b21\u90fd\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u67e5\u8be2 k \u4ee5\u4e0b\u7684\u503c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5c06\u8d85\u51fa\u6211\u4eec\u7684\u9884\u671f\u3002\u4e8e\u662f\u6211\u4eec\u8003\u8651\u5728\u6bcf\u4e00\u6b21\u7b5b\u5b8c\u7d20\u6570\u540e\uff0c\u5c06\u4e0d\u4f1a\u518d\u66f4\u6539\u7684\u503c\u5b58\u50a8\u4e8e\u9759\u6001\u6570\u7ec4\u4e2d\u3002\n\u8fd9\u4e00\u90e8\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\sum\\limits_{i=1}^{n/k}\\dfrac{\\sqrt{n/i}}{\\log n}) = O(\\dfrac{n}{\\sqrt{k}\\log n})$\u3002\n\n\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u6ca1\u6709\u5fc5\u8981\u5bf9\u6bcf\u4e2a $\\frac{n}{i}$ \u7684\u6570\u8fdb\u884c\u8f6c\u79fb\uff0c\u5728\u7b5b\u5b8c\u67d0\u4e2a\u7d20\u6570 $p$ \u540e\uff0c\u4f1a\u5f71\u54cd\u7ed3\u679c\u7684\u53ea\u6709\u6ee1\u8db3\u6700\u5c0f\u7d20\u56e0\u6570\u5927\u4e8e $p$ \u7684 $i$ \uff0c\u6211\u4eec\u8003\u8651\u5728\u6734\u7d20 dp \u540e\u8fdb\u884c\u8fd9\u4e00\u4f18\u5316 \u3002\u4e8e\u662f\u8fd9\u90e8\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4f18\u5316\u4e3a $O(\\dfrac{n}{\\sqrt{k}\\log ^{2}n})$\u3002\n\n\u7136\u800c\u6211\u4eec\u5e76\u6ca1\u6709\u5fc5\u8981\u8f6c\u79fb $p$ \u81f3 $\\sqrt{n}$\uff0c\u5c06 $p$ \u8f6c\u79fb\u81f3 $n^{\\frac{1}{4}}$ \u540e\u53ef\u501f\u52a9\u5bb9\u65a5\u5f97\u5230\u7b54\u6848\u3002\u4e8e\u662f\u6211\u4eec\u518d\u6b21\u4f18\u5316\u4e3a$O(\\dfrac{n\\pi(n^{\\frac{1}{4}})}{k\\log n}) = O(\\dfrac{n^{\\frac{5}{4}}}{k\\log ^{2}n})$\u3002\u53d6 $k = O(\\dfrac{n^{\\frac{5}{8}}}{\\log n})$\uff0c\u5f97 $O(\\dfrac{n^{\\frac{5}{8}}}{\\log n})$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n\n\u5bb9\u65a5\u90e8\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\sum\\limits_{n^{\\frac{1}{4}} <p\\le n^{\\frac{1}{3}}}\\pi(\\sqrt{\\dfrac{n}{p}})) = O(\\dfrac{n^{\\frac{2}{3}}}{\\log ^{2}n})$\u3002\n\n\u56e0\u6b64\u603b\u4f53\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\dfrac{n^{\\frac{2}{3}}}{\\log ^{2}n})$\u3002\n\n------------\n#### \u5b9e\u73b0\n\u4ee3\u7801\u6ca1\u505a\u8fc7\u591a\u4f18\u5316\uff0c\u4ee5\u4f9b\u9605\u8bfb\u53c2\u8003\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nusing i64 = long long;\ni64 count_pi(i64 N) {\n    if(N <= 1) return 0;\n    int v = sqrt(N + 0.5);\n    int n_4 = sqrt(v + 0.5);\n    int T = min((int)sqrt(n_4) * 2, n_4);\n    int K = pow(N, 0.625) / log(N) * 2;\n    K = max(K, v);\n    K = min<i64>(K, N);\n    int B = N / K;\n    B = N / (N / B);\n    B = min<i64>(N / (N / B), K);\n\n    vector<i64> l(v + 1);\n    vector<int> s(K + 1);\n    vector<bool> e(K + 1);\n    vector<int> w(K + 1);\n    for (int i = 1; i <= v; ++i) l[i] = N / i - 1;\n    for (int i = 1; i <= v; ++i) s[i] = i - 1;\n\n    const auto div = [] (i64 n, int d) -> int { return double(n) / d; };\n    int p;\n    for (p = 2; p <= T; ++p) \n        if (s[p] != s[p - 1]) {\n            i64 M = N / p;\n            int t = v / p, t0 = s[p - 1];\n            for (int i = 1; i <= t; ++i) l[i] -= l[i * p] - t0;\n            for (int i = t + 1; i <= v; ++i) l[i] -= s[div(M, i)] - t0;\n            for (int i = v, j = t; j >= p; --j)\n                for (int l = j * p; i >= l; --i)\n                    s[i] -= s[j] - t0;\n            for (int i = p * p; i <= K; i += p) e[i] = 1;\n        }\n    e[1] = 1;\n    int cnt = 1;\n    vector<int> roughs(B + 1);\n    for (int i = 1; i <= B; ++i)\n        if(!e[i]) roughs[cnt++] = i;\n    roughs[cnt] = 0x7fffffff;\n    for (int i = 1; i <= K; ++i) w[i] = e[i] + w[i - 1];\n    for (int i = 1; i <= K; ++i) s[i] = w[i] - w[i - (i & -i)];\n\n    const auto query = [&] (int x) -> int {\n        int sum = x;\n        while(x) sum -= s[x], x ^= x & -x;\n        return sum;\n    };\n    const auto add = [&] (int x) -> void {\n        e[x] = 1;\n        while(x <= K) ++s[x], x += x & -x;\n    };\n    cnt = 1;\n    for (; p <= n_4; ++p) \n        if(!e[p]) {\n            i64 q = i64(p) * p, M = N / p;\n            while(cnt < q) w[cnt] = query(cnt), cnt++;\n            int t1 = B / p, t2 = min<i64>(B, M / q), t0 = query(p - 1);\n            int id = 1, i = 1;\n            for (; i <= t1; i = roughs[++id]) l[i] -= l[i * p] - t0;\n            for (; i <= t2; i = roughs[++id]) l[i] -= query(div(M, i)) - t0;\n            for (; i <= B; i = roughs[++id]) l[i] -= w[div(M, i)] - t0;\n            for (int i = q; i <= K; i += p)\n                if(!e[i]) add(i);\n        }\n    while(cnt <= v) w[cnt] = query(cnt), cnt++;\n\n    vector<int> primes;\n    primes.push_back(1);\n    for (int i = 2; i <= v; ++i)\n        if(!e[i]) primes.push_back(i);\n    l[1] += i64(w[v] + w[n_4] - 1) * (w[v] - w[n_4]) / 2;\n    for (int i = w[n_4] + 1; i <= w[B]; ++i) l[1] -= l[primes[i]];\n    for (int i = w[B] + 1; i <= w[v]; ++i) l[1] -= query(N / primes[i]);\n    for (int i = w[n_4] + 1; i <= w[v]; ++i) {\n        int q = primes[i];\n        i64 M = N / q;\n        int e = w[M / q];\n        if (e <= i)  break;\n        l[1] += e - i;\n        i64 t = 0;\n        int m = w[sqrt(M + 0.5)];\n        for (int k = i + 1; k <= m; ++k) t += w[div(M, primes[k])];\n        l[1] += 2 * t - (i + m) * (m - i);\n    }\n    return l[1];\n}\nint main() {\n    i64 n;\n    cin >> n;\n    cout << count_pi(n);\n    return 0;\n}\n```",
        "postTime": 1638079542,
        "uid": 224584,
        "name": "\u6e10\u53d8\u8272",
        "ccfLevel": 0,
        "title": "\u9898\u89e3  P7884 \u3010\u6a21\u677f\u3011Meissel\u2013Lehmer \u7b97\u6cd5"
    },
    {
        "content": "\nUpdate\uff1aMarkdown \u6302\u4e86\uff0c\u4fee\u590d\u4e00\u4e0b\u3002\n\n------------\n\n\u4ea4\u4e86\u4e24\u53d1\uff0c\u4e0a\u4e86\u6700\u4f18\u89e3\u3002\u8bf4\u5b9e\u8bdd\uff0c\u6211\u4e2a\u4eba\u662f\u501f\u9274\u4e86\u4e0d\u5c11 LOJ \u6700\u4f18\u89e3 min_25 \u7684[\u4ee3\u7801](https://loj.ac/s/796720)\uff0c\u6700\u4f18\u89e3\u7b2c\u4e00\u9875\u4e0a\u7684\u4ee3\u7801\u51e0\u4e4e\u90fd\u662f larges,smalls,roughs \u4ec0\u4e48\u7684\uff08\u5927\u5bb6\u90fd\u662f\u4e00\u4e2a\u601d\u8def\uff0c\u548c min_25 \u7684\u4ee3\u7801\u5f88\u50cf\uff09\u3002\u4f46\u662f min_25 \u672c\u4eba\u5176\u5b9e\u6ca1\u6709\u89e3\u91ca\u4ee3\u7801\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u5199\uff0c\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u4ee3\u7801\u5c31\u5feb\uff0c\u6240\u4ee5\u6211\u731c\u5f88\u591a\u4eba\u4e5f\u53ea\u662f\u501f\u9274\u4e86\u4ee3\u7801\u5b9e\u73b0\uff0c\u5374\u4e0d\u77e5\u9053\u539f\u7406\uff0c\u6211\u5728\u8fd9\u91cc\u53c2\u7167 min_25 \u5927\u4f6c\u7684\u4ee3\u7801\uff0c\u7ed9\u4e00\u4e2a\u7c97\u6d45\u7684\u89e3\u91ca\u3002\n\n**\u524d\u7f6e\u77e5\u8bc6**\uff1aEratosthenes \u7b5b\u6cd5\u3002Eratosthenes \u7b5b\u6cd5\u662f\u6700\u7b80\u5355\u7684\u7b5b\u6cd5\u4e4b\u4e00\uff08\u4ee3\u7801\u5b9e\u73b0\u6765\u81ea OI-wiki\uff09\uff1a\n\n``` cpp\nint Eratosthenes(int n) {\n  int p = 0;\n  for (int i = 0; i <= n; ++i) is_prime[i] = 1;\n  is_prime[0] = is_prime[1] = 0;\n  for (int i = 2; i <= n; ++i) {\n    if (is_prime[i]) {\n      prime[p++] = i;\n      if ((long long)i * i <= n) for (int j = i * i; j <= n; j += i)\n          is_prime[j] = 0; //(*)\n    }\n  }\n  return p;\n}\n```\n\n\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u5728\u6807\u661f\u53f7\u7684\u90a3\u4e00\u884c\u4ee3\u7801\u6267\u884c\u65f6\u6709\u591a\u5c11\u4e2a is_prime \u4ece true \u53d8\u4e3a false \u3002\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u8fd9\u4e2a\u503c\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u77e5\u9053\u4ece 1 \u5230 n \u7684\u7d20\u6570\u4e2a\u6570\u4e86\u3002\u636e\u8bf4\uff0c\u8fd9\u4e2a\u4e1c\u897f\u5728 Project Euler \u4e0a\u66fe\u7ecf\u6709\u4e00\u4e2a\u6240\u8c13 Lucy DP \u7684\u4e1c\u897f\u53ef\u4ee5\u89e3\u51b3\uff0c\u4f46\u662f\u8fd9\u4e2a\u4e0d\u662f\u73b0\u5728\u6211\u4eec\u60f3\u8981\u7684\u3002\n\n**\u5b9a\u4e49\uff1a** \u8bb0 is_prime \u4e3a a\uff0c$S(v,p)$ \u4e3a  $a_j ( 2\\le j\\le v)$ \u5728 $i=p$ \u65f6\u5904\u7406\u5b8c\u6bd5\u540e\u4e3a true \u7684\u4e2a\u6570\u3002\n\n**\u8ba8\u8bba\uff1a** \u5982\u679c $p^2\\gt v $\uff0c\u4ece$i=p-1$ \u65f6\u5f00\u59cb $a_j $ \u5c31\u4e0d\u518d\u53d8\u5316\uff0c\u6b64\u65f6 $S(v, p) = S(v, p-1)$\uff0c$p$ \u4e0d\u662f\u7d20\u6570\u7684\u60c5\u51b5\u4e5f\u4e00\u6837\u3002\u81f3\u4e8e $p$ \u662f\u7d20\u6570\uff0c\u5e76\u4e14 $p^2\\le v$ \u7684\u60c5\u51b5\u6bd4\u8f83\u9ebb\u70e6\uff0c\u9700\u8981\u4ed4\u7ec6\u601d\u8003\u3002\u5bf9\u4e8e $j=p,p+1,p+2,...,\\left\\lfloor  \\frac {v}{p} \\right\\rfloor$\uff0c$a_{pj}$ \u90fd\u662f false\uff0c\u4f46\u5c0f\u4e8e $p$ \u7684\u7d20\u6570\u80fd\u7b5b\u6389\u7684\u5df2\u7ecf\u88ab\u7b5b\u6389\u4e86\uff0c\u4ece\u800c \n\n$$S(v,p)=S(v,p-1)-(S(\\left\\lfloor  \\frac {v}{p} \\right\\rfloor,p-1)-\\pi(p-1))$$\n\n\u53c8 $\\pi(n)=S(n,\\sqrt n)$\uff0c\u6211\u4eec\u8003\u8651\u6839\u53f7\u5206\u6cbb\uff0c\u53ea\u5bf9 $v=1,2,3,...,\\left\\lfloor  \\sqrt n \\right\\rfloor$ \u548c $v=\\left\\lfloor \\frac n 1 \\right\\rfloor,\\left\\lfloor \\frac n 2 \\right\\rfloor,\\left\\lfloor \\frac n 3 \\right\\rfloor,...,\\left\\lfloor \\frac n {\\sqrt {n}} \\right\\rfloor$ \u7684\u60c5\u51b5\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u5728 min_25 \u7684\u4ee3\u7801\u4e2d\u7684\u4e00\u4e9b\u53d8\u91cf\u89e3\u91ca\uff1a\n\n- $\\texttt{smalls}[i] = S(i, p)$\n- $\\texttt{roughs}[i]$\uff1a\u6ca1\u6709\u88ab\u7b5b\u6389\u7684\u7b2c $i$ \u4e2a\u6574\u6570\u3002\n  - \u5176\u5927\u5c0f\u7531\u4e00\u4e2a\u53d8\u91cf $\\texttt s$ \u7ef4\u62a4\u3002\n  - \u628a 1 \u7559\u4e0b\uff0c\u8fc7\u7b5b\u65f6\u4f7f\u7528\u7684\u7d20\u6570\u4f1a\u6d88\u5931\u3002\n- $\\texttt{larges}[i] = S(\\lfloor n/\\texttt{roughs}[i]\\rfloor, p)$\n- $\\texttt{pc} = \\pi(p-1)$\n- $\\texttt{skip}[i]$\uff1a$i$ \u5982\u679c\u88ab\u7b5b\u51fa\u6765\u7684\u8bdd\u5c31\u662f\u771f\u7684\u3002\n  - \u4f46\u662f\u4e0d\u66f4\u65b0\u5076\u6570\u3002\n\n\u4e0b\u9762\u662f min_25 \u7684\u4ee3\u7801\uff0c\u5176\u4e2d\u5982\u4f55\u66f4\u65b0\u8fd9\u4e9b\u53d8\u91cf\u5728\u4ee3\u7801\u540e\u9762\u89e3\u91ca\uff1a\n\n```cpp\nusing i64 = long long;\nint isqrt(i64 n) {\n  return sqrtl(n);\n}\n__attribute__((target(\"avx\"), optimize(\"O3\", \"unroll-loops\")))\ni64 prime_pi(const i64 N) {\n  if (N <= 1) return 0;\n  if (N == 2) return 1;\n  const int v = isqrt(N);\n  int s = (v + 1) / 2;\n  vector<int> smalls(s); for (int i = 1; i < s; ++i) smalls[i] = i;\n  vector<int> roughs(s); for (int i = 0; i < s; ++i) roughs[i] = 2 * i + 1;\n  vector<i64> larges(s); for (int i = 0; i < s; ++i) larges[i] = (N / (2 * i + 1) - 1) / 2;\n  vector<bool> skip(v + 1);\n  const auto divide = [] (i64 n, i64 d) -> int { return double(n) / d; };\n  const auto half = [] (int n) -> int { return (n - 1) >> 1; };\n  int pc = 0;\n  for (int p = 3; p <= v; p += 2) if (!skip[p]) {\n    int q = p * p;\n    if (i64(q) * q > N) break;\n    skip[p] = true;\n    for (int i = q; i <= v; i += 2 * p) skip[i] = true;\n    int ns = 0;\n    for (int k = 0; k < s; ++k) {\n      int i = roughs[k];\n      if (skip[i]) continue;\n      i64 d = i64(i) * p;\n      larges[ns] = larges[k] - (d <= v ? larges[smalls[d >> 1] - pc] : smalls[half(divide(N, d))]) + pc;\n      roughs[ns++] = i;\n    }\n    s = ns;\n    for (int i = half(v), j = ((v / p) - 1) | 1; j >= p; j -= 2) {\n      int c = smalls[j >> 1] - pc;\n      for (int e = (j * p) >> 1; i >= e; --i) smalls[i] -= c;\n    }\n    ++pc;\n  }\n  larges[0] += i64(s + 2 * (pc - 1)) * (s - 1) / 2;\n  for (int k = 1; k < s; ++k) larges[0] -= larges[k];\n  for (int l = 1; l < s; ++l) {\n    int q = roughs[l];\n    i64 M = N / q;\n    int e = smalls[half(M / q)] - pc;\n    if (e < l + 1) break;\n    i64 t = 0;\n    for (int k = l + 1; k <= e; ++k) t += smalls[half(divide(M, roughs[k]))];\n    larges[0] += t - i64(e - l) * (pc + l - 1);\n  }\n  return larges[0] + 1;\n}\n```\n\n\u4ed4\u7ec6\u770b\u4e0a\u9762\u7684\u4ee3\u7801\u5e94\u8be5\u80fd\u5927\u81f4\u4e86\u89e3\u7b97\u6cd5\uff0c\u8981\u662f\u4e0d\u61c2\u53ef\u4ee5\u770b\u8fd9\u91cc\u6211\u7684\u4e00\u4e9b\u89e3\u91ca\uff1a\n\n- roughs \u7684\u66f4\u65b0\uff1aroughs[..s]\u662f\u672a\u8fc7\u7b5b\u7684\u6574\u6570\u3002ns \u662f\u4e0b\u4e00\u4e2a\u5faa\u73af\u4e2d\u7684 s\u3002ns = 0\uff0c\u5728 roughs[ns] \u4e2d\u6709\u503c\u7684\u8bdd ns \u5c31\u81ea\u589e\u3002\n- larges[smalls[d]-pc] \u7684\u542b\u4e49\uff1asmalls[d] - pc \u662f \u201c\u672a\u8fc7\u7b5b\u5269\u4e0b\u7684\u6574\u6570\u4e2d d \u662f\u7b2c\u51e0\u4e2a\u6570\u5b57?\u201d \u7684\u610f\u601d\u3002\n- smalls[i] \u7684\u66f4\u65b0\uff1a\u4fdd\u6301 $j = \\frac i p $ \u88ab\u66f4\u65b0\u3002\u5f53 $i \\ge pj $ \u65f6\uff0csmalls[i] \u88ab\u66f4\u65b0\uff0c\u5b83\u7684\u503c\u88ab\u51cf\u53bb smalls[j] - pc\uff0c\u4e5f\u5c31\u662f\u88ab\u51cf\u53bb smalls[i / p] - pc\u3002\n\n**\u590d\u6742\u5ea6\uff1a** \u5206\u6790\u7701\u7565\uff0c\u7ed3\u8bba\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\frac {n^{0.75-\\epsilon} }{\\log n})$\uff08\u8fd9\u91cc\u7684\u5206\u5b50\u66f4\u51c6\u786e\u7684\u8bf4\u662f $n^{0.75}-n^{0.5}$\uff09\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(\\sqrt n)$\u3002\n\n**\u53c2\u8003\u6587\u732e\uff1a** [\u3048\u3073\u3061\u3083\u3093\u306e\u65e5\u8a18](https://rsk0315.hatenablog.com/entry/2021/05/18/015511)\uff0c\u672c\u6587\u4e3b\u8981\u8bd1\u81ea\u8be5\u535a\u5ba2\uff0c\u8bd1\u8005\u53ea\u662f\u7a0d\u5fae\u6dfb\u52a0\u4e00\u4e9b\u89e3\u91ca\uff0c\u8bd1\u8005\u65e5\u8bed\u6c34\u5e73\u4e0d\u9ad8\uff0c\u5982\u6709\u9519\u8bef\u8bf7\u6307\u660e\u3002\u5e0c\u671b\u9898\u89e3\u53ef\u4ee5\u901a\u8fc7\u5ba1\u6838\u3002\n\n",
        "postTime": 1636468033,
        "uid": 496840,
        "name": "SAMSHAWCRAFT",
        "ccfLevel": 0,
        "title": "\u3010\u6a21\u677f\u3011Meissel\u2013Lehmer \u7b97\u6cd5 - \u9898\u89e3"
    }
]