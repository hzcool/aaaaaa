[
    {
        "content": "[\u9898\u9762](https://www.luogu.com.cn/problem/P8959)\n\n\u6a21\u62df\u8d5b\u65f6\u5f53\u66b4\u529b\u5199\u7684\uff0c\u7ed3\u679c AC \u4e86\u3002\n\n\u5411\u5927\u4f6c\u8bf7\u6559\u540e\u53d1\u73b0\u590d\u6742\u5ea6\u7adf\u662f $O(n\\log n)$\uff01\n\n\u8be5\u505a\u6cd5\u79bb\u7ebf\u3002\u597d\u60f3\u4e5f\u597d\u5199\uff0c\u4e0d\u9700\u8981\u5206\u7c7b\u8ba8\u8bba\u3002\n\n---\n\n## \u601d\u8def\n\n\u5c06\u9898\u76ee\u4e2d\u52a0/\u5220\u70b9\u64cd\u4f5c\u7684\u96c6\u5408\u8bb0\u4f5c $S$\u3002\n\n\u8bb0 $f_x(i)$ \u8868\u793a $i$ \u65f6\u523b $S$ \u4e2d\u53ef\u4ee5\u5230\u8fbe $x$ \u7684\u6240\u6709\u70b9\u7684\u70b9\u6743\u548c\u3002\n\n\u5bf9\u6bcf\u4e00\u4e2a\u70b9 $x$ \u7ef4\u62a4\u957f\u4e3a $q$ \u7684\u5e8f\u5217 $f_x$\uff0c\u521d\u59cb\u5168\u4e3a $0$\u3002 \n\n\u5c06\u6240\u6709\u52a0/\u5220\u70b9\u64cd\u4f5c\u79bb\u7ebf\u4e0b\u6765\u3002\u82e5\u4e00\u4e2a\u70b9 $x$ \u5728 $l$ \u65f6\u523b\u52a0\u5165\uff0c$r+1$ \u65f6\u523b\u5220\u9664\uff0c\u5219\u5c06 $f_x$ \u7684 $[l,r]$ \u533a\u95f4\u52a0 $a_x$\u3002\u53e6\u5916\uff0c\u7b2c $q$ \u6b21\u64cd\u4f5c\u540e\u8fd8\u5728 $S$ \u4e2d\u7684\u70b9\u8ba4\u4e3a\u5728 $q+1$ \u65f6\u523b\u5220\u9664\u3002\n\n\u62d3\u6251\u6392\u5e8f\u3002\u5220\u6389\u4e00\u6761\u8fb9 $u\\rightarrow v$ \u65f6\uff0c\u56e0\u4e3a\u80fd\u5230\u8fbe $u$ \u7684\u70b9\u4e00\u5b9a\u80fd\u5230\u8fbe $v$\uff0c\u6240\u4ee5\u5c06 $f_u$ \u5411 $f_v$ \u5bf9\u5e94\u4f4d\u7f6e\u76f8\u52a0\u3002\u4e00\u4e2a\u70b9\u88ab\u52a0\u5165\u961f\u5217\u65f6\uff0c\u6240\u6709\u80fd\u5230\u8fbe\u5b83\u7684\u70b9\u90fd\u76f4\u63a5\u6216\u95f4\u63a5\u5411\u5b83\u8d21\u732e\u5b8c\u6210\u4e86\u3002\u6574\u4e2a\u62d3\u6251\u6392\u5e8f\u7ed3\u675f\u540e\uff0c\u6240\u6709 $f$ \u90fd\u6b63\u786e\u4e86\u3002\n\n\u5728 $t$ \u65f6\u523b\u67e5\u8be2 $x$\uff0c\u5373\u4e3a\u67e5\u8be2 $\\max_{i\\in [1,t]}f_x(i)$\u3002\n\n\u8003\u8651\u91c7\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4 $f$\uff0c\u9700\u8981\u652f\u6301\u7684\u64cd\u4f5c\u6709\uff1a\u533a\u95f4\u52a0\uff0c\u5408\u5e76\uff0c\u524d\u7f00 $\\max$\u3002\u7ebf\u6bb5\u6811\u5373\u53ef\u3002\n\n---\n\n## \u590d\u6742\u5ea6\n\n\u5e38\u89c1\u7684\u7ebf\u6bb5\u6811\u5408\u5e76\u56e0\u4e3a\u5c06 $x$ \u5411 $y$ \u5408\u5e76\u540e\uff0c$x$ \u4e0d\u518d\u53c2\u4e0e\u5408\u5e76\uff0c\u76f8\u5f53\u4e8e\u5220\u6389\u4e00\u4e2a\u70b9\uff0c\u6240\u4ee5\u5408\u5e76\u590d\u6742\u5ea6\u4e0d\u8d85\u8fc7\u603b\u7ed3\u70b9\u6570\uff0c\u4e3a $O(n\\log n)$\u3002\u5178\u4f8b\u662f\u5728\u5185\u5411\u6811\u4e0a\u6309\u62d3\u6251\u5e8f\u5408\u5e76\u3002\n\n\u672c\u9898\u6ca1\u6709\u8fd9\u6837\u7684\u6027\u8d28\u3002\n\n\u5047\u5982\u5b58\u5728 $x\\rightarrow y,\\ x\\rightarrow z$ \u8fd9\u4e24\u6761\u8fb9\uff0c$x$ \u5411 $y$ \u5408\u5e76\u540e\uff0c\u8fd8\u4f1a\u518d\u5411 $z$ \u5408\u5e76\u3002\u4e4d\u4e00\u770b\u597d\u50cf\u5f88\u5bc4\uff0c\u4f46\u53ef\u4ee5\u53d1\u73b0\u8fd9\u6837\u5408\u5e76\u7684\u590d\u6742\u5ea6\u4e0d\u52a3\u4e8e $x\\rightarrow y,\\ y\\rightarrow z$\u3002 \n\n\u91cd\u590d\u5bf9\u51fa\u5ea6\u5927\u4e8e $1$ \u7684\u70b9\u6267\u884c\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u6700\u7ec8\u6240\u6709\u70b9\u51fa\u5ea6 $\\le 1$\uff0c\u5f97\u5230\u4e00\u68f5\u5185\u5411\u6811\u3002\u800c\u5185\u5411\u6811\u4e0a\u5408\u5e76\u7684\u590d\u6742\u5ea6\u4e3a $O(n\\log n)$\u3002\u4e8e\u662f\u8be5\u505a\u6cd5\u7684\u590d\u6742\u5ea6\u4e5f\u662f $O(n\\log n)$\u3002\n\n---\n\n## \u5b9e\u73b0\u7ec6\u8282\n\n- \u56e0\u4e3a\u5b58\u5728\u590d\u7528\uff0c\u6240\u4ee5\u7ebf\u6bb5\u6811\u5408\u5e76\u65f6\u4e00\u5b9a\u8981\u65b0\u5efa\u7248\u672c\u518d\u4fee\u6539\u3002\u6211\u5199\u7684\u662f\u6807\u8bb0\u6c38\u4e45\u5316\uff0c\u5982\u679c $\\rm{pushdown}$ \u7684\u8bdd\u4e5f\u8981\u6ce8\u610f\u8fd9\u4e2a\u95ee\u9898\u3002\n\n- $\\max(a_i+b_i)\\not = \\max a_i+\\max b_i$\uff0c\u6240\u4ee5\u5904\u7406\u4e24\u4e2a\u7ebf\u6bb5\u6811\u4e0a\u90fd\u6709\u7684\u8282\u70b9\u65f6\uff0c$\\rm{tag}$ \u76f8\u52a0\uff0c\u4f46\u662f $\\rm{ans}$ \u4e0d\u80fd\u76f4\u63a5\u76f8\u52a0\uff0c\u8981\u7b49\u513f\u5b50\u5904\u7406\u5b8c\u518d $\\rm{pushup}$\u3002\n\n---\n\n\u5b8c\u7ed3\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=2e5+7;\nint n,q,rt[N],que[N],indeg[N],a[N],t[N],ans[N];\nvector<int> G[N];\nvector<pair<int,int>> Q[N];\nnamespace SGT\n{\n    int tot;\n    struct node{int ls,rs,ans,tag;}tr[N*80];\n    #define ls(p) tr[p].ls\n    #define rs(p) tr[p].rs\n    inline void pushup(int p){tr[p].ans=tr[p].tag+max(tr[ls(p)].ans,tr[rs(p)].ans);}\n    void add(int &p,int L,int R,int x,int l=1,int r=q)\n    {\n        if(!p) p=++tot;\n        if(L<=l&&r<=R) return tr[p].ans+=x,tr[p].tag+=x,void();\n        int mid=(l+r)>>1;\n        if(L<=mid) add(ls(p),L,R,x,l,mid);\n        if(R>mid)  add(rs(p),L,R,x,mid+1,r);\n        pushup(p);\n    }\n    void merge(int &p,int q)\n    {\n        if(!p||!q) return p|=q,void();\n        int o=++tot;tr[o]=tr[p],p=o;\n        merge(ls(p),ls(q));\n        merge(rs(p),rs(q));\n        tr[p].tag+=tr[q].tag;\n        pushup(p);\n    }\n    int query(int p,int L,int R,int l=1,int r=q)\n    {\n        if(!p) return 0;\n        if(L<=l&&r<=R) return tr[p].ans;\n        int mid=(l+r)>>1,res=0;\n        if(L<=mid) res=query(ls(p),L,R,l,mid);\n        if(R>mid)  res=max(res,query(rs(p),L,R,mid+1,r));\n        return res+tr[p].tag;\n    }\n}\nint main()\n{\n    ios::sync_with_stdio(0),cin.tie(0);\n    int i,x,y,op,qcnt=0,hd,tl,u;\n    cin>>n>>q;\n    for(i=1;i<=n;++i) cin>>a[i];\n    for(i=1;i<n;++i)\n    {\n        cin>>x>>y;\n        G[x].push_back(y),++indeg[y];\n    }\n    for(i=1;i<=q;++i)\n    {\n        cin>>op>>x;\n        if(op==1) t[x]=i;\n        else if(op==2) SGT::add(rt[x],t[x],i-1,a[x]),t[x]=0;\n        else Q[x].emplace_back(i,++qcnt);\n    }\n    for(i=1;i<=n;++i)if(t[i]!=0) SGT::add(rt[i],t[i],q,a[i]);\n    //topo\n    hd=1,tl=0;\n    for(i=1;i<=n;++i)if(indeg[i]==0) que[++tl]=i;\n    while(hd<=tl)\n    {\n        u=que[hd++];\n        for(int v:G[u])\n        {\n            SGT::merge(rt[v],rt[u]);\n            if(!--indeg[v]) que[++tl]=v;\n        }\n        for(auto p:Q[u]) ans[p.second]=SGT::query(rt[u],1,p.first);\n    }\n    for(i=1;i<=qcnt;++i) cout<<ans[i]<<'\\n';\n    return 0;\n}\n```\n",
        "postTime": 1675501081,
        "uid": 372162,
        "name": "jrxxx",
        "ccfLevel": 7,
        "title": "[CGOI-3] \u7075\u6c14"
    },
    {
        "content": "\u5148\u8003\u8651\u53ea\u67e5\u8be2\u5f53\u524d\u503c\u600e\u4e48\u505a\u3002\n\n\u4fee\u6539\u76f8\u5f53\u4e8e\u628a\u4ece\u5f53\u524d\u70b9\u5f00\u59cb\u4e00\u6761\u4e0d\u65ad\u5411\u4e0a\u8df3\u7684\u94fe\u4e0a\u7684\u6bcf\u4e2a\u70b9\u70b9\u6743\u52a0\uff0c\u67e5\u8be2\u76f8\u5f53\u4e8e\u4ece\u5f53\u524d\u70b9\u5f00\u59cb\u4e00\u6761\u4e0d\u65ad\u5411\u4e0a\u8df3\u53cd\u5411\u8fb9\u7684\u94fe\u4e0a\u7684\u6bcf\u4e2a\u70b9\u70b9\u6743\u548c\u3002\n\n\u8003\u8651\u7b49\u4ef7\u4e8e\u4fee\u6539\u76f8\u5f53\u4e8e\u628a\u4ece\u5f53\u524d\u70b9\u5f00\u59cb\u4e00\u6761\u4e0d\u65ad\u5411\u4e0a\u8df3\u7684\u94fe\u4e0a\u7684\u6bcf\u4e2a\u70b9\u6240\u5f80\u4e0b\u80fd\u5230\u7684\u70b9\u70b9\u6743\u52a0\uff0c\u67e5\u8be2\u5355\u70b9\u67e5\u8be2\u3002\n\n\u90a3\u4e48\u53ea\u8981\u628a\u8fd9\u4e9b\u70b9\u8d34\u5728\u4e00\u8d77\u5f62\u6210\u4e00\u4e2a\u533a\u95f4\u6211\u4eec\u5c31\u80fd\u591f\u628a\u533a\u95f4\u52a0\u533a\u95f4\u51cf\u67e5\u8be2\u5386\u53f2\u6700\u5927\u503c\u5957\u4e0a\u53bb\u4e86\u3002\n\n\u8003\u8651\u6bcf\u4e2a\u7531\u5411\u4e0a\u7684\u8fb9\u5f62\u6210\u7684\u8fde\u901a\u5757\uff0c\u5bf9\u8fde\u901a\u5757\u8fdb\u884c\u6811\u5256\uff0c\u7136\u540e\u5c06\u6bcf\u4e2a\u91cd\u94fe\u6309\u987a\u5e8f\u628a\u6bcf\u4e2a\u70b9\u5f80\u4e0b\u80fd\u591f\u8df3\u5230\u7684\u70b9\u52a0\u5165\u5e8f\u5217\u5373\u53ef\u3002\n\n\u76f4\u63a5\u505a $O(n\\log^2n)$\uff0c\u5229\u7528\u5168\u5c40\u5e73\u8861\u4e8c\u53c9\u6811\u53ef\u4ee5\u505a\u5230 $O(n\\log n)$\u3002 ",
        "postTime": 1675695897,
        "uid": 120911,
        "name": "Lynkcat",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P8959 \u300cCGOI-3\u300d\u7075\u6c14"
    },
    {
        "content": "## CGOI Round 3 T4 \u7075\u6c14 \u9898\u89e3\n\n### subtask 1\n\u6bcf\u6b21\u52a0\u5165\u5220\u9664\u70b9\u7684\u65f6\u5019\u76f4\u63a5\u66f4\u65b0\u6bcf\u4e2a\u70b9\u7684\u7b54\u6848\uff0c\u5e76\u53d6 $\\max$\u3002\n\n### subtask 2\n\u6811\u5256\u4ec0\u4e48\u7684\u5404\u663e\u795e\u901a\u6574\u5c31\u5b8c\u4e86\u3002\n\n### subtask 3\n\n\u6ca1\u6709\u5220\u9664\u64cd\u4f5c\uff0c\u7b49\u4ef7\u4e8e\u6700\u5927\u503c\u5728\u5f53\u524d\u65f6\u523b\u53d6\uff0c\u5373\u53bb\u6389\u4e86\u201c\u5386\u53f2\u6700\u5927\u503c\u201d\u3002\n\n\u5f00\u4e00\u4e2a\u6570\u7ec4 $sum$\u3002\n\n\u52a0\u5165\u4e00\u4e2a\u70b9 $x$ \u65f6\uff0c\u5148\u6539 $x$ \u7684\u7b54\u6848\u3002\u5982\u679c $x$ \u7684\u7236\u8fb9\u65b9\u5411\u4e3a $x\\rightarrow fa_x$\uff0c\u5c31\u4ee4 $sum_{fa_x}$ \u52a0\u4e0a $a_x$ \u5e76\u7ee7\u7eed\u5f80\u4e0a\u8df3\uff0c\u5426\u5219\u505c\u6b62\u3002\n\n\u8be2\u95ee\u4e00\u4e2a\u70b9\u65f6\uff0c\u5148\u7d2f\u52a0 $sum_x$\u3002\u5982\u679c\u8be5\u70b9 $x$ \u7684\u7236\u8fb9\u65b9\u5411\u4e3a $fa_x\\rightarrow x$\uff0c\u5c31\u7d2f\u52a0 $sum_{fa_x}$ \u5e76\u7ee7\u7eed\u5f80\u4e0a\u8df3\uff0c\u5426\u5219\u505c\u6b62\u5e76\u8f93\u51fa\u7b54\u6848\u3002\n\n\u8fd9\u53ef\u4ee5\u6811\u5256\u89e3\u51b3\u3002\n\n~~\u4f46\u662f\u8fd9\u548c\u6b63\u89e3\u6ca1\u4ec0\u4e48\u5173\u7cfb\uff08\uff09~~\n\n### subtask 4\n#### \u524d\u7f6e\u77e5\u8bc6\uff1a\u7ebf\u6bb5\u6811\u5408\u5e76\n\n\u8003\u8651\u79bb\u7ebf\uff0c\u6c42\u51fa\u6bcf\u4e2a\u8282\u70b9\u5728\u96c6\u5408\u4e2d\u7684\u65f6\u95f4\u6bb5\u3002\n\n\u5b9a\u4e49\u7236\u8fb9\u65b9\u5411\u4e3a $x\\rightarrow fa_x$ \u7684\u70b9\u4e3a\u4e0a\u8282\u70b9\uff0c\u53cd\u4e4b\uff0c\u4e3a\u4e0b\u8282\u70b9\u3002\n\n\u4ee5\u8282\u70b9 $1$ \u4e3a\u6839 dfs\uff0c\u6bcf\u5230\u4e00\u4e2a\u4e0a\u8282\u70b9 $x$\uff0c\u6309\u987a\u5e8f\u505a\u4e0b\u5217\u4e8b\u60c5\uff1a\n\n1. dfs \u6240\u6709\u4e3a\u4e0a\u8282\u70b9\u7684\u513f\u5b50\u8282\u70b9\u7684\u5b50\u6811\u3002\u56e0\u4e3a\u8fd9\u4e9b\u5b50\u6811\u91cc\u7684\u70b9\u7684\u7b54\u6848\u4e0d\u4f1a\u88ab\u5916\u754c\u5e72\u6270\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u5f53\u505a\u72ec\u7acb\u7684\u4e00\u68f5\u6811\u6c42\u3002\n\n2. \u7ed9 $x$ \u5f00\u4e00\u68f5 \u7ef4\u62a4\u6bcf\u4e2a\u65f6\u523b\u96c6\u5408\u5185\u80fd\u5230 $x$ \u8282\u70b9\u7684\u70b9\u7684\u6743\u503c\u548c \u7684\u7ebf\u6bb5\u6811\uff0c\u5c06\u6240\u6709\u4e3a\u4e0a\u8282\u70b9\u7684\u513f\u5b50\u8282\u70b9\u7684\u7ebf\u6bb5\u6811\u4e0e\u4e4b\u5408\u5e76\uff0c\u5e76\u5c06 $x$ \u7684\u533a\u95f4\u52a0\u5165\u5176\u4e2d\u3002\n\n3. \u6c42\u51fa\u8fd9\u4e2a\u8282\u70b9\u4e0a\u6240\u6709\u8be2\u95ee\u7684\u7b54\u6848\uff08\u533a\u95f4\u6700\u5927\u503c\u7ebf\u6bb5\u6811\uff09\u3002\n\n4. dfs \u6240\u6709\u4e3a\u4e0b\u8282\u70b9\u7684\u513f\u5b50\u8282\u70b9\u7684\u5b50\u6811\u3002\n\n\n\u5230\u4e00\u4e2a\u4e0b\u8282\u70b9 $x$\uff0c\u6309\u987a\u5e8f\u505a\u4e0b\u5217\u4e8b\u60c5\uff1a\n\n1. \u5c06\u7236\u4eb2\u8282\u70b9\u7684\u7ebf\u6bb5\u6811\u590d\u5236\u7ed9\u5f53\u524d\u8282\u70b9\uff0c\u201c\u590d\u5236\u201d\u7684\u610f\u601d\u4e3a\uff1a\n```root[x]=root[fa]```\uff0c```root[x]``` \u8868\u793a $x$ \u70b9\u7ebf\u6bb5\u6811\u7684\u6839\u8282\u70b9\u3002\n2. dfs \u6240\u6709\u4e3a\u4e0a\u8282\u70b9\u7684\u513f\u5b50\u8282\u70b9\u7684\u5b50\u6811\uff0c\u5408\u5e76\u3002\u5408\u5e76\u65f6\u9700\u65b0\u5f00\u8282\u70b9\uff0c\u9632\u6b62\u6c61\u67d3\u5230\u7236\u4eb2\u8282\u70b9\u7684\u7ebf\u6bb5\u6811\u3002\n\n3. \u6c42\u7b54\u6848\uff0c\u5e76\u4e14 dfs \u6240\u6709\u4e3a\u4e0b\u8282\u70b9\u7684\u513f\u5b50\u8282\u70b9\u7684\u5b50\u6811\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u53ef\u4ee5\u89c1 [std](/paste/d22s4is7)\u3002\n___\n\n### \u590d\u6742\u5ea6\u5206\u6790\n\u74f6\u9888\u5728\u4e8e\u7ebf\u6bb5\u6811\u5408\u5e76\u3002\u5206\u4e24\u7c7b\u8003\u8651\u7ebf\u6bb5\u6811\u5408\u5e76\u64cd\u4f5c\uff1a\n\n\u5bf9\u4e8e\u5408\u5e76\u81f3\u4e0b\u8282\u70b9\u7684\u64cd\u4f5c\uff0c\u53ef\u4ee5\u8003\u8651\u6bcf\u4e2a\u8be2\u95ee\u6240\u8d21\u732e\u7684\u8282\u70b9\u88ab\u5408\u5e76\u7684\u6b21\u6570\uff0c\u663e\u7136\u6b21\u6570\u4e3a $1$\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/cpvjl6u5.png?x-oss-process=image/resize,m_lfit,h_200,w_450)\n\n\uff08\u7ea2\u8272\u8282\u70b9\u4e0a\u7684\u8be2\u95ee\u8d21\u732e\u7684\u8282\u70b9\u51e0\u7ecf\u5468\u6298\u540e\u53ea\u4f1a\u7ecf\u5386\u4e00\u6b21\u5408\u5e76\u5230\u4e0b\u8282\u70b9\u7684\u64cd\u4f5c\uff09\n\n\u8fd9\u4e00\u90e8\u5206\u590d\u6742\u5ea6\u4e3a\u8282\u70b9\u6570\uff1a$\\mathcal O(n\\log q)$\u3002\n\n\u5bf9\u4e8e\u5408\u5e76\u81f3\u4e0a\u8282\u70b9\u7684\u64cd\u4f5c\uff0c\u4e3a\u4e00\u822c\u7684\u7ebf\u6bb5\u6811\u5408\u5e76\uff0c\u590d\u6742\u5ea6\u4e3a\u7ebf\u6bb5\u6811\u7684\u603b\u7ed3\u70b9\u6570 $\\mathcal O(n\\log q)$\u3002\n\n\u8bc1\u660e\u53ef\u4ee5\u7528\u52bf\u80fd\u5206\u6790\uff08by @ljc1301\uff09\uff1a\n\n\u53ef\u4ee5\u8003\u8651\u7ebf\u6bb5\u6811\u603b\u8282\u70b9\u6570\u7684\u53d8\u5316\u3002\n\n\u533a\u95f4\u4fee\u6539\u53ef\u4ee5\u89c6\u4e3a\u52a0\u5165\u4e00\u4e2a\u533a\u95f4\uff0c\u4e00\u6b21\u64cd\u4f5c\u6700\u591a\u4f1a\u589e\u52a0 $\\log q$ \u4e2a\u8282\u70b9\u3002\n\n\u5408\u5e76\u4e24\u4e2a\u8282\u70b9\u65f6\u53ef\u4ee5\u89c6\u4e3a\u5176\u4e2d\u4e00\u4e2a\u8282\u70b9\u6ca1\u4e86\uff0c\u90a3\u4e48\u6bcf\u5408\u5e76\u4e24\u4e2a\u8282\u70b9\uff0c\u603b\u7ed3\u70b9\u6570\u4f1a $-1$\u3002\n\n\u518d\u8003\u8651\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u4f1a\u5728\u4e00\u6b21\u533a\u95f4\u4fee\u6539\u4e2d\u52a0\u5165\uff0c\u67d0\u4e00\u6b21\u5408\u5e76\u4e2d\u88ab\u5220\u9664\uff0c\u6240\u4ee5\u5bf9\u6bcf\u4e2a\u8282\u70b9\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\mathcal O(1)$\u3002\n___\n### \u5199\u5728\u540e\u9762\u7684\u5e9f\u8bdd\n\u8fd9\u9053\u9898\u771f\u7684\u51fa\u4e86\u5f88\u4e45\u5f88\u4e45~~~\n\n\u8fd9\u9898\u6e90\u81ea\u4e8e\u4e00\u5e74\u524d\u7684 idea\uff0c\u662f\u628a\u8fd9\u9053\u9898\u53bb\u6389\u5386\u53f2\u6700\u5927\u503c\uff0c\u628a\u6811\u53d8\u6210\u6709\u5411\u56fe\u7684\u7248\u672c\uff08\u53ef\u4ee5\u7f29\u70b9\u53d8\u6210 dag\uff09\uff0c\u4f46\u662f\u53d1\u73b0\u6839\u672c\u4e0d\u53ef\u505a\uff0c\u5c31\u653e\u5f03\u4e86\u3002\n\n\u7136\u540e\u67d0\u5929\u5b66\u4e86\u6dc0\u7c89\u8d28\uff0c\u4ee5\u4e3a\u628a\u8fd9\u9053\u9898\u653e\u5230\u6811\u4e0a\u5c31\u53ef\u6dc0\u7c89\u8d28\u505a\u3002\n\n\u628a\u6ca1\u6709\u5386\u53f2\u6700\u5927\u503c\u7684\u7248\u672c\u7ed9 ac \u505a\uff0c\u88ab ac \u7528\u6811\u5256\u79d2\u4e86\uff0c\u4e8e\u662f\u52a0\u4e0a\u4e86\u5386\u53f2\u6700\u5927\u503c\uff0c\u4ee5\u4e3a\u7528\u6dc0\u7c89\u8d28\u8fd8\u662f\u80fd\u505a\u3002\n\n\u540e\u6765\u53d1\u73b0\u6dc0\u7c89\u8d28\u5047\u98de\u4e86\u3002\u4f46\u53c8\u53d1\u73b0\u628a\u8fd9\u9898\u8f6c\u6210\u79bb\u7ebf\u7684\u65b9\u6cd5\u5f88\u65b0\uff0c\u4e8e\u662f\u7ee7\u7eed\u601d\u8003\u3002\n\n\u4e8e\u662f\u60f3\u4e86\u4e2a dsu \u7684\u505a\u6cd5\u3002\n\n\u540e\u6765\u53d1\u73b0 dsu \u5047\u4e86\uff0c\u4e8e\u662f\u60f3\u4e86\u4e2a\u7ebf\u6bb5\u6811\u5408\u5e76\u3002\n\n\u6211\u751a\u81f3\u6253\u5b8c\u4e86 std\uff0c\u8c03\u8bd5\u7684\u65f6\u5019\u624d\u53d1\u73b0\u8fd8\u8981\u64a4\u9500\uff0c\u4ee5\u4e3a\u66b4\u529b\u64a4\u9500\u590d\u6742\u5ea6\u662f\u5bf9\u7684\uff0c\u5e76\u4e14\u968f\u673a\u6570\u636e\u8dd1\u5f88\u5feb\uff0c\u6781\u9650\u6570\u636e\u4e5f\u5f88\u5feb\u3002\n\n\u548c ac \u4ea4\u6d41\u53d1\u73b0\u590d\u6742\u5ea6\u5047\u4e86\uff0c\u800c\u4e14\u6781\u9650\u6570\u636e\u9020\u9519\u4e86\uff0c\u521a\u51c6\u5907\u81ea\u95ed\uff0cac \u544a\u8bc9\u6211\u5176\u5b9e\u7ebf\u6bb5\u6811\u5408\u5e76\u53ef\u4ee5\u53ef\u6301\u4e45\u5316\u3002\n\n\uff08\u4e0a\u9762\u8bf4\u7684\u662f\u6211\u4e4b\u524d\u4ee5\u4e3a\u7684\u505a\u6cd5\uff09\n\n\u4e4b\u540e\u4e00\u76f4\u4ee5\u4e3a\u8fd9\u9898\u662f\u4e2a\u53ea\u80fd\u505c\u7559\u5728\u53e3\u80e1\u4e0a\u7684\u9898\uff0c\u7801\u91cf\u7206\u70b8\u4e14\u4e0d\u53ef\u8c03\u3002\n\n\u4e0d\u8fc7\u6253\u5b8c std \u53d1\u73b0\u4e5f\u4e0d\u957f\uff08\uff09\n\n\u4e4b\u540e\u63d0\u4ea4 rated \u88ab\u8ba4\u4e3a\u5047\u4e86\uff0c\u4f46\u6211 AFO \u4e86\u4e4b\u540e\u6210\u4e86\u5e9f\u7269\uff08\u867d\u7136\u4e4b\u524d\u4e5f\u662f\uff09\uff0c\u5c31\u627e\u4e86\u4f17\u591a\u91d1\u94a9\u7237\uff08\u91d1\u724c\u7237\uff09\u4ea4\u6d41\uff0c\u53d1\u73b0\u662f\u9898\u89e3\u60f3\u9519\u4e86\uff0cstd \u6ca1\u9519\uff08\u5c31\u79bb\u8c31\uff09\uff0c\u5176\u5b9e\u53ea\u662f\u6b63\u5e38\u7684\u7ebf\u6bb5\u6811\u5408\u5e76\u3002\u4e4b\u540e\u4fee\u6539\u4e86\u9898\u89e3\u3002\n\nrated \u4e86\uff01\n\n\u8d5b\u65f6\u88ab\u5927\u4f6c\u7528\u5728\u7ebf\u505a\u6cd5\u5207\u4e86\uff0c\u795e/bx/bx/bx/bx/bx\u3002\u4e4b\u524d\u672c\u6765\u60f3\u52a0\u5f3a\u6210\u4e00\u6bb5\u65f6\u95f4\u533a\u95f4\u5185\u7684\u6700\u5927\u503c\uff0c\u4f46\u6015\u5bb9\u6613\u88ab\u770b\u51fa\u662f\u79bb\u7ebf\uff0c\u5c31\u6ca1\u6539\u3002\u7ed3\u679c\u771f\u7684\u6709\u5728\u7ebf\u505a\u6cd5\u3002\n\n\u9644\u4e0a @ljc1301 \u5bf9\u5728\u7ebf\u505a\u6cd5\u7684\u7406\u89e3\u3002\n\n![\u4e00\u5f20\u56fe](https://cdn.luogu.com.cn/upload/image_hosting/4r6lj76a.png?x-oss-process=image/resize,m_lfit,h_300,w_300)\n\n\u968f\u673a\u6570\u636e\u5f88\u6c34\uff0c\u4e0d\u4f1a\u51fa\u6570\u636e\uff0c\u4e0d\u4f1a\u6784\u9020/kk\n\n\u4e0d\u8fc7\uff0cTerraria \u771f\u662f\u4e00\u4e2a\u5f88\u597d\u73a9\u7684\u6e38\u620f\uff0c\u5feb\u6765\u5165\u5751\uff01\uff01\uff01/kx",
        "postTime": 1668689616,
        "uid": 119124,
        "name": "iamzq",
        "ccfLevel": 7,
        "title": "CGOI Round 3 T4 \u7075\u6c14 \u9898\u89e3"
    },
    {
        "content": "\u8d5b\u65f6\u6240\u6709\u505a\u6cd5\u90fd\u662f\u5728\u7ebf\u7684\uff0c\u4f46\u9898\u89e3\u505a\u6cd5\u5b9e\u9645\u4e0a\u662f\u79bb\u7ebf\u7684/qd/qd\n\n\u4ee5\u4e0b\u662f\u9a8c\u9898\u7684\u601d\u8def\u3002\n\n---------\n\n\u9996\u5148\u5148\u628a\u64cd\u4f5c\u79bb\u7ebf\u3002\n\n\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9 $x$ \u4e0e\u80fd\u5230\u8fbe $x$ \u7684\u70b9\u96c6 $S$\uff08**\u4e0d\u5305\u542b $x$ \u5b50\u6811\u5185\u80fd\u5230\u8fbe $x$ \u7684\u70b9**\uff09\uff0c\u4e0a\u513f\u5b50\u7684\u5b50\u6811 $T$ \u4f1a\u5bf9 $S$ \u4ea7\u751f\u8d21\u732e\uff0c\u800c $S$ \u4e0d\u4f1a\u5bf9 $T$ \u4ea7\u751f\u8d21\u732e\uff1b$S$ \u4f1a\u5bf9\u4e0b\u513f\u5b50\u7684\u5b50\u6811 $T'$ \u4ea7\u751f\u8d21\u732e\uff0c\u800c $T'$ \u4e0d\u4f1a\u5bf9 $S$ \u4ea7\u751f\u8d21\u732e\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e24\u79cd\u513f\u5b50\uff0c\u4e00\u4e2a\u6ca1\u6709\u540e\u6548\u6027\uff0c\u4e00\u4e2a\u6ca1\u6709\u524d\u6548\u6027\u3002\n\n\u6240\u4ee5\u8003\u8651\u91c7\u7528\u7c7b\u4f3c\u4e8e\u4e8c\u53c9\u6811\u4e2d\u5e8f\u904d\u5386\u7684\u65b9\u5f0f\u53bb\u5904\u7406\u6574\u68f5\u6811\uff1a\n\n- \u904d\u5386\u5230 $x$ \u65f6\uff0c$x$ \u7684\u7ebf\u6bb5\u6811\u4e2d\u542b\u6709\u80fd\u5230\u8fbe\u5b83\u7684\u8282\u70b9\uff08**\u5728\u5b50\u6811\u5916\u7684**\uff09\u7684\u4fe1\u606f\u3002\n\n- \u5148\u904d\u5386\u4e0a\u513f\u5b50\uff0c\u5c06\u4e0a\u513f\u5b50\u7684\u4fe1\u606f\u5408\u5e76\u81f3 $x$\uff08\u904d\u5386\u4e0a\u513f\u5b50\u7684\u65f6\u5019\u4e0d\u9700\u8981\u4f20 $x$ \u7ebf\u6bb5\u6811\u7684\u4fe1\u606f\uff0c\u56e0\u4e3a\u4e0a\u513f\u5b50\u6ca1\u6709\u524d\u6548\u6027\uff09\u3002\n\n- \u7136\u540e\u7528\u6b64\u65f6 $x$ \u7ebf\u6bb5\u6811\u7684\u4fe1\u606f\u66f4\u65b0 $x$ \u5904\u8be2\u95ee\u7684\u7b54\u6848\u3002\n\n- \u63a5\u7740\u518d\u904d\u5386\u4e0b\u513f\u5b50\u3002\u904d\u5386\u4e0b\u513f\u5b50\u65f6\uff0c\u76f4\u63a5\u5c06 $x$ \u7684\u4fe1\u606f\u5168\u76d8\u4e0b\u4f20\u5373\u53ef\uff08`rt[v]=rt[x]`\uff09\u3002\n\n## \u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790\n\n\u7531\u4e8e\u6240\u6709\u5143\u7d20\u90fd\u662f\u5411\u4e0a\u5408\u5e76\u7684\uff0c\u6240\u4ee5\u4f9d\u7136\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u7684\u65b9\u5f0f\u5206\u6790\u590d\u6742\u5ea6\u3002\n\n\u53d1\u73b0\u8be5\u7b97\u6cd5\u4e0e\u666e\u901a\u7ebf\u6bb5\u6811\u5408\u5e76\u7684\u552f\u4e00\u533a\u522b\u5728\u4e8e\u8be5\u9898\u6709\u533a\u95f4\u4fee\u6539\u3002\u901a\u8fc7\u6807\u8bb0\u6c38\u4e45\u5316\u7684\u6280\u5de7\uff0c\u53ef\u4ee5\u5c06\u5173\u952e\u5143\u7d20\u4e2a\u6570\u63a7\u5236\u5728 $\\log$ \u7ea7\u522b\u3002\u56e0\u6b64\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n\\log^2n)$ \u7684\u3002\n\n----------\n\nupd\uff1a\u4e0d\u8fc7\u91d1\u724c\u7237\u8bf4\u6574\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u901a\u8fc7\u52bf\u80fd\u5206\u6790\u964d\u5230\u5355 $\\log$\u3002\n\n--------\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define mp make_pair\n#define il inline\nusing namespace std;\nconst int maxn=200010;\nconst int N=maxn*500;\nil int read(){\n\tint x=0;\n\tchar c=getchar();\n\tfor(;!(c>='0'&&c<='9');c=getchar());\n\tfor(;c>='0'&&c<='9';c=getchar())\n\t\tx=(x<<1)+(x<<3)+c-'0';\n\treturn x; \n}\nstruct edge{\n\tint v,w,to;\n}e[maxn<<1];\nint head[maxn],ecnt;\nvoid addedge(int u,int v,int w){\n\te[++ecnt].v=v,e[ecnt].w=w;\n\te[ecnt].to=head[u],head[u]=ecnt;\n}\nvector<pair<int,int> >v[maxn];\nvector<int>q[maxn];\nint a[maxn],ans[maxn],n,m,cnt;\nint lz[N],d[N],ls[N],rs[N],rt[maxn],L[maxn];\nil void Copy(int i,int j){d[j]=d[i],lz[j]=lz[i],ls[j]=ls[i],rs[j]=rs[i];}\nint merge(int a,int b,int l,int r){\n\tif(!a||!b) return a|b;\n\tint k=++cnt;\n\tlz[k]=lz[a]+lz[b];\n\tif(l==r) return k;\n\tint mid=l+r>>1;\n\tif(mid>=l) ls[k]=merge(ls[a],ls[b],l,mid);\n\tif(mid<r) rs[k]=merge(rs[a],rs[b],mid+1,r);\n\td[k]=max(d[ls[k]]+lz[k],d[rs[k]]+lz[k]);\n\treturn k;\n}\nvoid Add(int &i,int l,int r,int L,int R,int x){\n\tCopy(i,++cnt),i=cnt;\n\tif(l>=L&&r<=R){\n\t\tlz[i]+=x,d[i]+=x;\n\t\treturn ;\n\t}int mid=l+r>>1;\n\tif(mid>=L) Add(ls[i],l,mid,L,R,x);\n\tif(mid<R) Add(rs[i],mid+1,r,L,R,x);\n\td[i]=max(d[ls[i]]+lz[i],d[rs[i]]+lz[i]);\n}\nint Query(int i,int l,int r,int L,int R,int s=0){\n\tif(l>R||r<L) return 0;\n\tif(!i||(l>=L&&r<=R)) return s+d[i];\n\tint mid=l+r>>1;\n\treturn max(Query(ls[i],l,mid,L,R,s+lz[i]),Query(rs[i],mid+1,r,L,R,s+lz[i]));\n}\nvoid dfs(int fa,int x){\n\tfor(int i=head[x];i;i=e[i].to)\n\t\tif(e[i].v!=fa&&!e[i].w)\n\t\t\tdfs(x,e[i].v),rt[x]=merge(rt[x],rt[e[i].v],1,m);\n\tfor(int i=0;i<v[x].size();i++)\n\t\tAdd(rt[x],1,m,v[x][i].first,v[x][i].second,a[x]);\n\tfor(int i=0;i<q[x].size();i++)\n\t\tans[q[x][i]]=Query(rt[x],1,m,1,q[x][i]);\n\tfor(int i=head[x];i;i=e[i].to)\n\t\tif(e[i].v!=fa&&e[i].w)\n\t\t\trt[e[i].v]=rt[x],dfs(x,e[i].v);\n}\nint main(){\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++) a[i]=read();\n\tfor(int i=1;i<n;i++){\n\t\tint x=read(),y=read();\n\t\taddedge(x,y,1),addedge(y,x,0);\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tint x=read(),y=read();\n\t\tif(x==2) v[y].push_back(mp(L[y],i)),L[y]=0;\n\t\telse if(x==1) L[y]=i;\n\t\telse q[y].push_back(i);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tif(L[i]) v[i].push_back(mp(L[i],m));\n\tmemset(ans,-1,sizeof(ans));\n\tdfs(0,1);\n\tfor(int i=1;i<=m;i++)\n\t\tif(~ans[i]) printf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1674139379,
        "uid": 288716,
        "name": "lzqy_",
        "ccfLevel": 7,
        "title": "P8959 \u300cCGOI-3\u300d\u7075\u6c14 \u9898\u89e3"
    }
]