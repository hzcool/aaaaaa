[
    {
        "content": "### Description\n\n\u73b0\u6709\u4e00\u53f0\u9884\u6d4b\u673a\uff0c\u53ef\u4ee5\u9884\u6d4b\u5f53\u524d $n$ \u4e2a\u4eba\u5728 $T$ \u4e2a\u65f6\u523b\u5185\u7684\u751f\u6b7b\u5173\u7cfb\u3002\u5173\u7cfb\u6709\u4e24\u79cd\uff1a\n\n- $\\texttt{0 t x y}$\uff1a\u5982\u679c $t$ \u65f6\u523b $x$ \u6b7b\u4e86\uff0c\u90a3\u4e48 $y$ \u5728\u7b2c $t+1$ \u65f6\u523b\u4e5f\u4f1a\u6b7b\u4ea1\u3002\n- $\\texttt{1 t x y}$\uff1a\u5982\u679c $t$ \u65f6\u523b $x$ \u6d3b\u7740\uff0c\u90a3\u4e48 $y$ \u5728 $t$ \u65f6\u523b\u5c31\u4f1a\u6b7b\u4ea1\u3002\n\n\u8fd9\u6837\u7684\u5173\u7cfb\u5171\u6709 $m$ \u6761\u3002\u73b0\u5728\u4f60\u9700\u8981\u5728\u4e0d\u8fdd\u80cc\u8fd9\u4e9b\u5173\u7cfb\u7684\u524d\u63d0\u4e0b\uff0c\u8ba1\u7b97\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4eba $i$\uff0c\u53ef\u80fd\u53ef\u4ee5\u4e0e $i$ \u6d3b\u5230\u7b2c $T+1$ \u65f6\u523b\u7684\u6709\u591a\u5c11\u4eba\u3002\u5f62\u5f0f\u5316\u7684\u8bb2\uff0c\u8bbe $\\text{Live}(i, j)$ \u8868\u793a\u662f\u5426 $i, j$ \u53ef\u4ee5\u540c\u65f6\u5b58\u6d3b\uff0c\u5982\u679c\u53ef\u4ee5\u5219\u4e3a $1$\uff0c\u53cd\u4e4b\u4e3a $0$\u3002\u90a3\u4e48\u4f60\u9700\u8981\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $i\\in[1, n]$\uff0c\u8ba1\u7b97\n$$\n\\sum_{j\\in[1, n],i\\ne j}\\text{Live}(i, j)\n$$\n\u7684\u503c\u3002\n\n### Hint\n\n$1\\le n\\le 5\\times 10^4, 1\\le m\\le 10^5, 1\\le T\\le 10^6$\u3002\n\n### Solution\n\n\u8003\u8651\u7528 **2-SAT** \u601d\u60f3\u5c06\u751f\u6b7b\u5173\u7cfb\u8f6c\u5316\u4e3a\u56fe\uff1a\u8bb0 $(x,t), \\neg (x,t)$ \u5206\u522b\u8868\u793a $x$ \u8fd9\u4e2a\u4eba\u5728\u65f6\u523b $t$ \u7684 \u6d3b / \u6b7b \u4e24\u4e2a\u72b6\u6001\uff08\u56fe\u4e0a\u7684\u9876\u70b9\uff09\uff0c$a\\to b$ \u8868\u793a\u4e00\u6761\u4ece $a$ \u5230 $b$ \u7684\u6709\u5411\u8fb9\u3002\n\n- \u5bf9\u4e8e\u4e00\u4e2a\u4eba $i$\uff0c\u5982\u679c $t$ \u65f6\u523b\u4ed6\u6b7b\u4e86\uff0c\u90a3\u4e48\u663e\u7136 $t+1$ \u65f6\u523b\u4e5f\u662f\u6b7b\u7684\u3002\u540c\u7406\uff0c\u5982\u679c $t+1$ \u65f6\u523b\u662f\u6d3b\u7684\uff0c\u90a3\u4e48 $t$ \u65f6\u523b\u4e00\u5b9a\u4e5f\u662f\u6d3b\u7684\u3002\u8fde\u8fb9 $\\neg(i, t)\\to \\neg(i,t+1),(i,t+1)\\to(i,t)$\u3002\n- \u5bf9\u4e8e\u4e00\u4e2a\u5173\u7cfb $\\texttt{0 t x y}$\uff0c\u663e\u7136\u8fde\u8fb9 $\\neg(x, t)\\to \\neg(y,t+1)$\u3002\u6ce8\u610f\u5982\u679c $t+1$ \u65f6 $y$ \u6ca1\u6b7b\uff0c\u90a3\u4e48\u8bf4\u660e\u8fd9\u4e2a\u6761\u4ef6\u6ca1\u6709\u751f\u6548\uff0c\u5728 $t$ \u65f6\u523b $x$ \u662f\u6d3b\u7684\uff0c\u6240\u4ee5 $(y,t+1)\\to (x,t)$\u3002\n- \u5bf9\u4e8e\u4e00\u4e2a\u5173\u7cfb $\\texttt{1 t x y}$\uff0c\u663e\u7136\u8fde\u8fb9 $(x, t)\\to \\neg(y,t)$\u3002\u540c\u4e0a\u53cd\u5411\u8003\u8651\u6709 $(y, t)\\to \\neg(x,t)$\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u628a\u56fe\u5efa\u597d\u4e86\u3002\u7136\u800c\u6211\u4eec\u53d1\u73b0 ~~\u95f7\u58f0\u53d1\u5927\u8d22~~ \u70b9\u6570\u662f $O(n\\times T)$ \u7684\u3002\u5176\u5b9e\u8fd9\u4e2a\u8fd8\u597d\u529e\uff0c\u6211\u4eec\u53ea\u8981\u5bf9\u6bcf\u4e2a\u70b9 $x$\uff0c\u628a\u5b83\u5728\u6761\u4ef6\u4e2d\u51fa\u73b0\u8fc7\u7684 $t$ \u4f5c\u4e3a\u70b9\u5f00\u51fa\u6765\uff0c\u5176\u4ed6 **\u6ca1\u6709\u51fa\u73b0\u5728\u6761\u4ef6\u4e2d\u7684\u5c31\u662f\u6ca1\u7528\u7684\u70b9**\u3002\u5177\u4f53\u6765\u8bb2\uff0c\u5bf9\u6bcf\u4e2a\u70b9\u5f00\u4e00\u4e2a ```set``` \u5b58\u50a8\u6709\u7528\u7684\u65f6\u523b\uff08\u5305\u62ec $T+1$\uff09\uff0c\u7136\u540e\u7528\u4e00\u4e2a ```map``` \u5b58\u4e00\u4e0b\u7f16\u53f7\u5373\u53ef\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u70b9\u548c\u8fb9\u7684\u89c4\u6a21\u4e3a $O(m+n)$\uff0c\u53ef\u4ee5\u627f\u53d7\u3002\n\n------------------------------\n\n\u90a3\u4e48\uff0c\u5982\u4f55\u7528\u8fd9\u5f20\u56fe\u6c42\u89e3\u7b54\u6848\u5462\uff1f\u4e3a\u4e86\u65b9\u4fbf\uff0c\u8bbe $\\text{alive}(x) = (x, T+1),\\text{dead}(x) = \\neg(x, T+1)$\uff0c\u5206\u522b\u8868\u793a\u6700\u540e\u7ed3\u675f\u65f6 $x$ \u8fd9\u4e2a\u4eba\u751f\u6b7b\u5bf9\u5e94\u7684\u4e24\u4e2a\u72b6\u6001\u3002\n\n\u6211\u4eec\u8003\u8651\u4e00\u6761\u6709\u5411\u8fb9 $a\\to b$ \u7684\u5b9e\u9645\u610f\u4e49\uff1a\u5982\u679c $a$ \u4e3a\u771f\uff0c\u90a3\u4e48\u53ef\u4ee5\u63a8\u51fa $b$ \u4e5f\u4e3a\u771f\u3002\u5982\u679c\u8bf4\u5b58\u5728\u4e00\u4e2a $y\\ne x$ \u4f7f\u5f97 $\\text{alive}(x)$ \u53ef\u4ee5\u5230\u8fbe $\\text{dead}(y)$\uff0c\u90a3\u4e48\u8868\u660e $x$ \u6d3b\u7740\u7684\u8bdd $y$ \u5c31\u4f1a\u6b7b\uff0c\u8fd9\u6837\u4e24\u4e2a\u4eba\u663e\u7136\u65e0\u6cd5\u540c\u65f6\u6d3b\u7740\u3002\n\n\u5982\u679c\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a $x$ \u90fd\u6c42\u51fa\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\u7684 $y$ \u96c6\u5408\u7684\u5927\u5c0f\uff0c\u90a3\u4e48 $n$ \u51cf\u53bb\u8fd9\u4e2a\u96c6\u5408\u7684\u5927\u5c0f\u518d\u51cf\u4e00\uff08\u51cf\u53bb\u81ea\u5df1\uff09\u5373\u4e3a\u7b54\u6848\u3002\n\n\u5728\u5b9e\u9645\u5b9e\u73b0\u65f6\uff0c\u6211\u4eec\u679a\u4e3e $i\\in [1, n]$ \u5e76\u4ece $\\text{alive}(i)$ \u5f00\u59cb DFS\uff0c\u641c\u51fa\u8fd9\u4e2a $\\text{alive}(i)$ \u53ef\u4ee5\u641c\u5230\u90a3\u4e9b $\\text{dead}(j)$\uff0c\u6700\u540e\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u7531\u6240\u6709 $\\text{alive}(i)$ \u53ef\u53ca\u7684 $\\text{dead}(j)$ \u7ec4\u6210\u7684\u4e00\u4e2a\u96c6\u5408\uff0c\u7136\u540e\u7b54\u6848\u5c31\u6bd4\u8f83\u663e\u7136\u4e86\u3002\n\n\u4f46\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662f\u5e73\u65b9\u7ea7\u522b\uff0c\u6211\u4eec\u8003\u8651\u4f18\u5316\u3002\u53d1\u73b0\u5bf9\u4e8e DFS \u6811\u4e0a\u7684\u4e00\u4e2a\u7ed3\u70b9 $x$ \u4ee5\u53ca\u5176\u5b50\u8282\u70b9 $y_1, y_2, \\cdots y_k$\u3002\u82e5\u8bb0 $f(i)$ \u4e3a $i$ \u53ef\u4ee5\u5230\u8fbe\u7684\u70b9\u96c6\uff0c\u90a3\u4e48 $f(x) = \\left(\\cup_{i=1}^k f(y_i)\\right)\\cup\\{x\\}$\u3002\u4e0d\u96be\u53d1\u73b0\u8fd9\u4e2a $\\cup$ \u5176\u5b9e\u662f\u53ef\u4ee5\u7528 **```bitset``` \u7684\u4f4d\u8fd0\u7b97** \u8fdb\u884c\u4f18\u5316\u7684\uff0c\u590d\u6742\u5ea6\u964d\u4e3a $O(\\frac 1 \\omega n(n+m))$\u3002\u6ce8\u610f\uff0c\u8fd9\u91cc $f$ \u4e5f\u6709\u8bb0\u5fc6\u5316\u7684\u4f5c\u7528\uff0c\u4f7f\u5f97\u4e00\u4e2a\u70b9\u4e0d\u88ab\u641c\u4e24\u6b21\u3002\u65e2\u7136\u662f\u8bb0\u5fc6\u5316\uff0c\u90a3\u4e48\u76f8\u5f53\u4e8e\u5728 DAG \u4e0a dp\u3002\u5177\u4f53\u4e3a\u4ec0\u4e48\u662f DAG\uff0c\u53d1\u73b0\u53ea\u4f1a\u6709\u751f $\\to$ \u6b7b\u7684\u8fb9\u800c\u6ca1\u6709\u6b7b $\\to$ \u751f\u7684\uff0c\u5e76\u4e14\u6b7b $\\to$ \u6b7b\u7684\u8fb9\u5b58\u5728\u65f6\u95f4\u5148\u540e\u987a\u5e8f\uff0c\u4e0d\u4f1a\u5b58\u5728 SCC\u3002\n\n------------------------------------\n\n\u96be\u53d7\u7684\u662f $\\frac 1 \\omega n(n+m)$ \u5927\u5c0f\u7684 ```bitset``` \u76f4\u63a5\u70b8\u7a7a\u95f4\u4e86\uff0c\u4e8e\u662f\u6211\u4eec\u4f7f\u7528\u795e\u5947\u6280\u5de7\u5f3a\u884c\u5361\u8fdb\u53bb\u3002\n\n\u8003\u8651\u628a $n$ \u4e2a\u4eba\u5206\u6210\u82e5\u5e72\u5757 **\u5206\u6279\u5904\u7406**\uff0c\u4e00\u5757 $B$ \u4e2a\uff0c\u7136\u540e\u7a7a\u95f4\u5e38\u6570\u5c31\u5c0f\u4e0b\u6765\u4e86\u3002\u5b9e\u6d4b $B\\approx 2\\times 10^4$ \u65f6\u53ef\u8fc7\u3002\n\n\u5b9e\u73b0\u4e0a\u4e00\u4e2a\u7ec6\u8282\uff1a\u7279\u522b\u6807\u8bb0 **\u5fc5\u6b7b\u70b9**\uff0c\u5373 $\\text{alive}(x)$ \u53ef\u4ee5\u5230\u8fbe $\\text{dead}(x)$\u3002\u8fd9\u79cd\u70b9\u5355\u72ec\u8f93\u51fa $0$\u3002\n\n### Code\n\n\u4ee5\u4e0b\u4ee3\u7801\u90e8\u5206\u53c2\u8003\u4e86 [\u8fd9\u7bc7\u535a\u5ba2](https://blog.csdn.net/qq_39972971/article/details/93032127)\u3002\n\n```cpp\n/*\n * Author : _Wallace_\n * Source : https://www.cnblogs.com/-Wallace-/\n * Problem : JSOI2019 \u7cbe\u51c6\u9884\u6d4b\n */\n#include <algorithm>\n#include <bitset>\n#include <iostream>\n#include <set>\n#include <map>\n#include <vector>\n\nusing namespace std;\nconst int N = 5e4 + 5;\nconst int MaxT = 1e6 + 5;\nconst int M = 1e5 + 5;\nconst int B = 1e4;\nconst int V = (M + N) << 1;\n\nint n, m, T;\nint type[M], t[M], x[M], y[M];\nint ans[N];\n\nset<int> vaild[N];\nmap<int, int> idx[N][2];\nint total = 0;\n\nvector<int> adj[V]; // graph\nvoid link(int u, int v) { adj[u].emplace_back(v); }\n\nint l[N], d[N], bel[V]; // live, dead\nbitset<N> dead;\nbitset<V> vis;\nbitset<B> statu[V]; // f\n\nvoid dfs(int x, int p, int q) {\n    if (vis[x]) return; vis.set(x);\n    statu[x].reset();\n    if (p <= bel[x] && bel[x] <= q) statu[x].set(bel[x] - p);\n    for (auto y : adj[x]) dfs(y, p, q), statu[x] |= statu[y];\n}\n\nsigned main() {\n    ios::sync_with_stdio(false), cin >> T >> n >> m;\n    for (int i = 1; i <= m; i++) cin >> type[i] >> t[i] >> x[i] >> y[i];\n    for (int i = 1; i <= n; i++) vaild[i].insert(T + 1);\n    for (int i = 1; i <= m; i++) vaild[x[i]].insert(t[i]);\n    for (int i = 1; i <= n; i++) {\n        for (auto t : vaild[i])\n            idx[i][0][t] = ++total, idx[i][1][t] = ++total;\n        for (auto t = vaild[i].begin(); t != vaild[i].end() && next(t) != vaild[i].end(); t++)\n            link(idx[i][0][*t], idx[i][0][*next(t)]), link(idx[i][1][*next(t)], idx[i][1][*t]);\n    }\n    for (int i = 1; i <= m; i++) {\n        if (!type[i]) {\n            int to = *vaild[y[i]].upper_bound(t[i]);\n            link(idx[x[i]][0][t[i]], idx[y[i]][0][to]);\n            link(idx[y[i]][1][to], idx[x[i]][1][t[i]]);\n        } else {\n            int to = *vaild[y[i]].lower_bound(t[i]);\n            link(idx[x[i]][1][t[i]], idx[y[i]][0][to]);\n            link(idx[y[i]][1][to], idx[x[i]][0][t[i]]);\n        }\n    }\n\n    for (int i = 1; i <= n; i++) l[i] = idx[i][1][T + 1], bel[d[i] = idx[i][0][T + 1]] = i;\n    for (int p = 1, q; p <= n; p += B) {\n        q = min(p + B - 1, n), vis.reset();\n        for (int i = 1; i <= n; i++) dfs(l[i], p, q);\n        bitset<B> cur;\n        for (int i = p; i <= q; i++) if (statu[l[i]][i - p]) dead.set(i), cur.set(i - p);\n        for (int i = 1; i <= n; i++) ans[i] += (q - p + 1) - (cur | statu[l[i]]).count();\n    }\n    for (int i = 1; i <= n; i++)\n        cout << (dead[i] ? 0 : ans[i] - 1) << ' ';\n    return cout << endl, 0;\n}\n```\n\n",
        "postTime": 1603193088,
        "uid": 61430,
        "name": "_Wallace_",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P5332 \u3010[JSOI2019]\u7cbe\u51c6\u9884\u6d4b\u3011"
    },
    {
        "content": "~~\u672c\u6765\u60f3\u5199\u4e2a\u7ebf\u6027\u7a7a\u95f4\u7684\u6015\u5361\u4e0d\u8fc7\u53bb\u5c31\u771f\u9999\u4e86\uff08\uff09~~\n\n\u9898\u610f\uff1a\n\n\u7ed9\u5b9a $n$ \u4e2a\u4eba\u548c $m$ \u7ec4\u9650\u5236\uff0c\u5206\u4e3a\u4e24\u79cd\uff1a\n\n1. \u5982\u679c $x$ \u5728 $t$ \u65f6\u95f4\u524d\u6b7b\u4e86\uff0c\u5219 $y$ \u5728 $t+1$ \u65f6\u95f4\u524d\u4e5f\u6b7b\u4e86\u3002\n2. \u5982\u679c $x$ \u5728 $t$ \u65f6\u95f4\u8fd8\u6d3b\u7740\uff0c\u5219 $y$ \u5728 $t$ \u65f6\u95f4\u524d\u6b7b\u4e86\u3002\n\n\u8bf7\u4f60\u5bf9\u6bcf\u4e00\u4e2a\u4eba\u8ba1\u7b97\u51fa\u5728 $T+1$ \u65f6\u95f4\u65f6\u53ef\u80fd\u4e0e\u5176\u540c\u65f6\u5b58\u6d3b\u7684\u4eba\u6570\u3002\u5982\u679c\u8fd9\u4e2a\u4eba\u5728 $T+1$ \u65f6\u523b\u5fc5\u7136\u6b7b\u5219\u7b54\u6848\u4e3a $0$\u3002\n\n$n\\leq 5\\times 10^4,m\\leq 10^5,T\\leq 10^6$\u3002\n\n\u89e3\u6cd5\uff1a\n\n\u9996\u5148\u89c2\u5bdf\u5230\u4e00\u4e2a\u4eba\u6709\u4e24\u4e2a\u4e92\u65a5\u7684\u72b6\u6001\uff1a\u5b58\u6d3b\u548c\u53bb\u4e16\uff0c\u800c\u6bcf\u4e00\u4e2a\u9650\u5236\u53ea\u6d89\u53ca\u5230\u4e24\u4e2a\u4eba\uff0c\u6240\u4ee5\u8003\u8651 2-SAT\u3002\n\n\u7136\u540e\u662f\u5957\u8def\u6784\u56fe\uff0c\u7b2c\u4e00\u79cd\u9650\u5236\u53ef\u4ee5\u8868\u793a\u4e3a $\\text{Dead}(x,t)\\rightarrow \\text{Dead}(y,t+1)$\uff0c\u4ee5\u53ca\u5b83\u7684\u9006\u5426\u547d\u9898 $\\text{Alive}(y,t+1)\\rightarrow \\text{Alive}(x,t)$\u3002\n\n\u7b2c\u4e8c\u79cd\u9650\u5236\u7c7b\u4f3c\uff0c\u8868\u793a\u4e3a $\\text{Alive}(x,t)\\rightarrow \\text{Dead}(y,t)$\uff0c\u548c\u9006\u5426\u547d\u9898 $\\text{Alive}(y,t)\\rightarrow \\text{Dead}(x,t)$\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\u9650\u5236\uff1a\u4e00\u4e2a\u4eba\u6b7b\u4e86\u4e0d\u80fd\u590d\u6d3b\uff0c\u6240\u4ee5\u76f8\u5f53\u4e8e $\\text{Dead}(x,t)\\rightarrow \\text{Dead}(x,t+1)$\u3002\u540c\u6837\u6709\u9006\u5426\u547d\u9898 $\\text{Alive}(x,t+1)\\rightarrow \\text{Alive}(x,t)$\u3002\n\n\u76f4\u63a5\u8fd9\u6837\u6784\u56fe\uff0c\u70b9\u6570\u662f $O(nT)$ \u7684\uff0c\u4e0d\u53ef\u63a5\u53d7\u3002\n\n\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u4eba\u53ea\u6709\u8981\u5224\u5b9a\u522b\u4eba\u7684\u751f\u6b7b\u72b6\u6001\u7684\u65f6\u5019\u9700\u8981\u77e5\u9053\u81ea\u5df1\u7684\u751f\u6b7b\u72b6\u6001\uff0c\u6240\u4ee5\u5bf9\u6bcf\u4e00\u4e2a\u4eba\u53ea\u4fdd\u5b58 $x$ \u4e3a\u81ea\u5df1\u7684\u5224\u5b9a\u65f6\u95f4\u70b9\u5c31\u591f\u4e86\uff0c\u5177\u4f53\u662f\u4ec0\u4e48\u65f6\u95f4\u6b7b\u7684\u5176\u5b9e\u6211\u4eec\u4e0d\u5173\u5fc3\u3002\n\n\u8fd9\u6837\u70b9\u6570\u964d\u5230\u4e86 $O(n+m)$\uff0c\u8fb9\u6570\u4e5f\u5c31\u968f\u4e4b\u964d\u5230\u4e86 $O(n+m)$\u3002\n\n\u8fd9\u4e2a\u56fe\u7531\u4e8e\u53ea\u6709 $\\text{Alive}\\rightarrow \\text{Alive}$\u3001$\\text{Alive}\\rightarrow \\text{Dead}$\u3001$\\text{Dead}\\rightarrow \\text{Dead}$ \u7684\u8fb9\uff0c\u800c\u4e14 $\\text{Alive}\\rightarrow \\text{Alive}$ \u5728\u65f6\u95f4\u4e0a\u5168\u90fd\u5411\u524d\uff0c$\\text{Dead}\\rightarrow \\text{Dead}$ \u5728\u65f6\u95f4\u4e0a\u5168\u90fd\u5411\u540e\uff0c\u6240\u4ee5\u8fd9\u4e2a\u56fe\u672c\u8eab\u5c31\u662f\u4e00\u4e2a DAG\uff0c\u6545\u53ef\u4ee5\u7701\u53bb\u7f29\u70b9\u3002\n\n\u7136\u540e\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u5bf9\u6bcf\u4e00\u4e2a $\\text{Alive}(i,T+1)$\uff0c\u6c42\uff1a\n\n- \u5b83\u80fd\u5426\u5230\u8fbe $\\text{Dead}(i,T+1)$\uff1b\n- \u5982\u679c\u4e0d\u80fd\uff0c\u80fd\u5230\u8fbe\u591a\u5c11\u4e2a $\\text{Dead}(j,T+1)$\u3002\n\n\u5982\u679c\u7b2c\u4e00\u4e2a\u95ee\u9898\u7684\u7b54\u6848\u662f\u201c\u80fd\u201d\uff0c\u5219\u7b54\u6848\u4e3a $0$\uff1b\u5426\u5219\u7b54\u6848\u4e3a $n$ \u51cf\u53bb\u7b2c\u4e8c\u4e2a\u95ee\u9898\u7684\u7b54\u6848\u518d\u51cf\u53bb $1$\uff08\u81ea\u5df1\u4e0d\u88ab\u7b97\u8fdb\u7b54\u6848\uff09\u3002\n\n\u8fd9\u662f\u4e00\u4e2a\u5f88\u5957\u8def\u7684 bitset\uff0c\u95ee\u9898\u662f\u7a7a\u95f4\u5f00\u4e0d\u4e0b\uff0c\u6240\u4ee5\u627e\u4e00\u4e2a\u5757\u957f $S$\uff0c\u7b2c\u4e00\u6b21\u6c42\u51fa\u5230 $\\text{Dead}([1,S],T+1)$ \u7684\u6240\u6709\u70b9\u7684\u53ef\u8fbe\u6027\uff0c\u7b2c\u4e8c\u6b21\u6c42\u51fa\u5230 $\\text{Dead}([S+1,2S],T+1)$ \u7684\u6240\u6709\u70b9\u7684\u53ef\u8fbe\u6027\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\n\n\u8fd9\u91cc\u7684\u95ee\u9898\u662f $S$ \u592a\u5927\u4f1a\u5bfc\u81f4\u7a7a\u95f4\u70b8\u88c2\uff0c$S$ \u592a\u5c0f\u4f1a\u5bfc\u81f4\u904d\u5386\u56fe\u7684\u6b21\u6570\u975e\u5e38\u591a\u4ece\u800c\u65f6\u95f4\u5e38\u6570\u70b8\u88c2\u3002\n\n\u6211\u7684\u4ee3\u7801\u53d6\u7684 $S=10^4$\uff0c\u5b9e\u9645\u8dd1\u8d77\u6765\u6548\u679c\u8fd8\u662f\u4e0d\u9519\u7684\u3002\n\n\u6700\u7ec8\u65f6\u95f4\u590d\u6742\u5ea6 $O\\left(\\dfrac{n(n+m)}{\\omega}\\right)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O\\left(\\dfrac{nS}{\\omega}\\right)$\u3002\n\n```cpp\n#include <iostream>\n#include <cmath>\n#include <cstring>\n#include <cstdio>\n#include <algorithm>\n#include <bitset>\n#include <vector>\n#include <set>\nusing namespace std;\n\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1 << 21], *p1 = buf, *p2 = buf;\n\ninline int qread() {\n\tregister char c = getchar();\n\tregister int x = 0, f = 1;\n\twhile (c < '0' || c > '9') {\n\t\tif (c == '-') f = -1;\n\t\tc = getchar();\n\t}\n\twhile (c >= '0' && c <= '9') {\n\t\tx = (x << 3) + (x << 1) + c - 48;\n\t\tc = getchar();\n\t}\n\treturn x * f;\n}\n\ninline int Abs(const int& x) {return (x > 0 ? x : -x);}\ninline int Max(const int& x, const int& y) {return (x > y ? x : y);}\ninline int Min(const int& x, const int& y) {return (x < y ? x : y);}\n\nconst int BSIZE = 10000;\nvector <int> g[300005];\nset <int> v[50005];\nvector <int> vc[50005];\nint type[100005], t[100005], x[100005], y[100005], n, T, m, sizsum[100005], fA[50005], fD[50005], ans[50005], mustdie[50005];\nbitset <BSIZE> dp[300005], cur;\nbool vis[300005];\n\ninline void Read() {\n\tT = qread(); n = qread(); m = qread();\n\tfor (int i = 1;i <= m;i++) {\n\t\ttype[i] = qread(); t[i] = qread(); x[i] = qread(); y[i] = qread();\n\t\tv[x[i]].insert(t[i]);\n\t}\n}\n\n//i -> Alive\n//i + sizsum[n] -> Dead\n\ninline int Alive(int i, int j) {\n\treturn sizsum[i - 1] + j + 1;\n}\n\ninline int Dead(int i, int j) {\n\treturn sizsum[i - 1] + j + 1 + sizsum[n];\n}\n\ninline void AddEdge(int u, int v) {\n\tg[u].push_back(v);\n\t//printf(\"%d %d\\n\", u, v);\n}\n\ninline void Prefix() {\n\tfor (int i = 1;i <= n;i++) v[i].insert(T + 1);\n\tfor (int i = 1;i <= n;i++) sizsum[i] = sizsum[i - 1] + v[i].size();\n\tfor (int i = 1;i <= n;i++) {\n\t\tint siz = v[i].size();\n\t\tfor (int j = 1;j < siz;j++) AddEdge(Alive(i, j), Alive(i, j - 1));\n\t\tfor (int j = 0;j < siz - 1;j++) AddEdge(Dead(i, j), Dead(i, j + 1));\n\t}\n\tfor (int i = 1;i <= n;i++) {\n\t\tfor (set<int>::iterator it = v[i].begin();it != v[i].end();it++) vc[i].push_back(*it);\n\t}\n\tfor (int i = 1;i <= m;i++) {\n\t\tint xj = lower_bound(vc[x[i]].begin(), vc[x[i]].end(), t[i]) - vc[x[i]].begin();\n\t\tint yj = lower_bound(vc[y[i]].begin(), vc[y[i]].end(), t[i] + (!type[i])) - vc[y[i]].begin();\n\t\tif (!type[i]) {\n\t\t\tAddEdge(Dead(x[i], xj), Dead(y[i], yj));\n\t\t\tAddEdge(Alive(y[i], yj), Alive(x[i], xj));\n\t\t} else {\n\t\t\tAddEdge(Alive(x[i], xj), Dead(y[i], yj));\n\t\t\tAddEdge(Alive(y[i], yj), Dead(x[i], xj));\n\t\t}\n\t}\n\t//puts(\"\");\n\tfor (int i = 1;i <= n;i++) {\n\t\tfA[i] = Alive(i, vc[i].size() - 1);\n\t\tfD[i] = Dead(i, vc[i].size() - 1);\n\t\t//printf(\"%d %d\\n\", fA[i], fD[i]);\n\t}\n}\n\ninline void Dfs(int u) {\n\tif (vis[u]) return;\n\tvis[u] = 1;\n\tint siz = g[u].size();\n\tfor (int i = 0;i < siz;i++) {\n\t\tDfs(g[u][i]);\n\t\tdp[u] |= dp[g[u][i]];\n\t}\n}\n\ninline void Clear(int u) {\n\tif (vis[u]) return;\n\tvis[u] = 1;\n\tdp[u].reset();\n\tint siz = g[u].size();\n\tfor (int i = 0;i < siz;i++) Clear(g[u][i]);\n}\n\ninline void Solve() {\n\tfor (int l = 1, r;l <= n;l += BSIZE) {\n\t\tr = Min(l + BSIZE - 1, n);\n\t\tfor (int i = l;i <= r;i++) dp[fD[i]].set(i - l);\n\t\tmemset(vis, 0, sizeof(vis));\n\t\tfor (int i = 1;i <= n;i++) Dfs(fA[i]);\n\t\tcur.reset();\n\t\tfor (int i = l;i <= r;i++) {\n\t\t\t//cout << dp[fA[i]] << endl;\n\t\t\tif (dp[fA[i]][i - l]) {\n\t\t\t\tmustdie[i] = 1;\n\t\t\t\tcur.set(i - l);\n\t\t\t}\n\t\t}\n\t\t//cout << cur << endl << endl;\n\t\tfor (int i = 1;i <= n;i++) ans[i] += r - l + 1 - (cur | dp[fA[i]]).count();\n\t\tmemset(vis, 0, sizeof(vis));\n\t\tfor (int i = 1;i <= n;i++) Clear(fA[i]);\n\t}\n\tfor (int i = 1;i <= n;i++) printf(\"%d \", (mustdie[i] ? 0 : ans[i] - 1));\n}\n\nint main() {\n\tRead();\n\tPrefix();\n\tSolve();\n\t#ifndef ONLINE_JUDGE\n\twhile (1);\n\t#endif\n\treturn 0;\n}\n```\n\nP.S. \u53d6 $S=64$ \u53ef\u4ee5\u7ebf\u6027\u7a7a\u95f4 + \u533a\u95f4\u67e5\u8be2\uff0c\u7f3a\u70b9\u662f\u5e38\u6570\u8f83\u5927\uff0c\u8be6\u89c1 [Dream and the Multiverse](https://www.luogu.com.cn/problem/P7349)\u3002",
        "postTime": 1613879564,
        "uid": 61088,
        "name": "Solystic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5332 \u3010[JSOI2019]\u7cbe\u51c6\u9884\u6d4b\u3011"
    },
    {
        "content": "\u5361\u4e86\u4e00\u665a\u4e0a\u5e38\u6570\u7ec8\u4e8e\u5361\u8fc7\u53bb\u4e86\uff0c\u89c9\u5f97\u6709\u5fc5\u8981\u5199\u7bc7\u9898\u89e3\u7eaa\u5ff5\u4e00\u4e0bqwq\n\n\u8fd9\u7bc7\u9898\u89e3\u7684\u8fb9\u6570\u662f$4M$\u7684\uff0c\u5982\u679c\u60a8\u9700\u8981\u8fb9\u6570\u662f$2(N+M)$\u7684\u9898\u89e3\u8bf7\u770b\u53e6\u5916\u4e00\u7bc7\uff08\n\n---\n\n### \u672c\u9898\u9898\u89e3\n\n\u770b\u5230\u9898\u9762\uff0c\u6211\u4eec\u5c31\u77e5\u9053\u8981\u7528**2-sat**\u6765\u89e3\u51b3\u95ee\u9898\u3002\u6211\u4eec\u6709\u4e09\u5143\u7ec4`Node(date,person,status)`\u8868\u793a\u67d0\u4e2a\u65f6\u95f4\uff0c\u67d0\u4e2a\u4eba\uff0c\u662f\u6b7b(0)\u8fd8\u662f\u662f\u6d3b(1)\u7684\u72b6\u6001\u3002\u6734\u7d20\u7684\u5efa\u8fb9\u662f\u8fd9\u6837\u7684\uff1a\n\n\u5bf9\u4e8e$o=0$ **\uff081\uff09**:\n\n$(t,x,0)\\rightarrow(t+1,y,0),(t+1,y,1)\\rightarrow(t,x,1)$\n\n\u5bf9\u4e8e$o=1$ **\uff082\uff09**: \n\n$(t,x,1)\\rightarrow(t,y,0),(t,y,1)\\rightarrow(t,x,0)$\n\n\u7136\u540e\u5bf9\u4e8e$t\\in[1,t],x\\in[1,n]$**\uff083\uff09**\n\n$(t,x,0)\\rightarrow(t+1,x,0),(t+1,x,1)\\rightarrow(t,x,1)$\n\n\u6211\u4eec\u628a\u56fe\u5efa\u51fa\u6765\u4e86\uff0c\u600e\u4e48\u7edf\u8ba1\u7b54\u6848\u5462\uff1f\n\n\u6211\u4eec\u8fdb\u884c**\u53ef\u8fbe\u6027\u7edf\u8ba1**\u3002\u9996\u5148\u6211\u4eec\u627e\u5230\u4e00\u4e9b\u201c\u5fc5\u6b7b\u201d\u7684\u70b9\uff0c\u5373\n\n$(t+1,x,1)\\rightarrow(t+1,x,0)$\n\n\u8fd9\u4e9b\u70b9\u7b54\u6848\u663e\u7136\u4e3a0\u3002\u5ffd\u7565\u8fd9\u4e9b\u70b9\uff0c\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u70b9\u53ef\u4ee5\u5230\u8fbe\u7684\u70b9\u4e0a\uff0c\u6709\u591a\u5c11\u4e2a$(t+1,?,0)$\uff0c\u4ee3\u8868\u5982\u679c\u4e00\u4e2a\u70b9\u8981\u6d3b\uff0c\u6709\u591a\u5c11\u4e2a\u70b9\u5f97\u6b7b\u3002\u90a3\u4e48\u5269\u4e0b\u7684\u70b9\u90fd\u53ef\u4ee5\u88ab\u7edf\u8ba1\u5230Live\u4e2d\u53bb\u3002\n\n\u6211\u4eec\u7b97\u4e00\u4e0b\u590d\u6742\u5ea6\uff1a\n\n- \u56fe\u7684\u89c4\u6a21$O(Tn+m)$\n\n- \u904d\u5386\u7684\u6b21\u6570$O(n)$\n\n\u603b\u590d\u6742\u5ea6$O(Tn^2+nm)$\uff0c\u53ea\u670930\u5206\u3002\u6240\u4ee5\u6211\u4eec\u8981\u5728**\u5efa\u56fe**\u548c**\u904d\u5386**\u4e0a\u4e0b\u529f\u592b\u4f18\u5316\u3002\n\n### \u5efa\u56fe\n\n\u6211\u7684\u5efa\u56fe\u65b9\u5f0f\u4e0d\u662f\u6700\u4f18\u7684\uff0c\u4f46\u8db3\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n**(1)(2)\u7c7b\u8fb9\u662f\u5fc5\u8981\u7684\uff0c\u4f46\u662f(3)\u7c7b\u8fb9\u5b58\u5728\u5927\u91cf\u7684\u5197\u4f59\u3002** **(1)(2)\u7c7b\u8fb9** \u7ed9\u6574\u5f20\u56fe\u4e0a\u6807\u8bb0\u4e86$4M$\u4e2a**\u5173\u952e\u70b9**\u3002\u6211\u4eec\u4fdd\u7559\u8fd9\u4e9b\u5173\u952e\u70b9\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u4eba\uff0c\u6211\u4eec\u6839\u636e$date$\u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u53ea\u5728\u5173\u952e\u70b9\u4e4b\u95f4\u5efa\u7acb **(3)** \u7c7b\u8fb9\u3002\u5bb9\u6613\u53d1\u73b0\u6211\u4eec\u5efa\u51fa\u4e86$4M$\u70b9\u8fb9\u3002\n\n### \u8f6c\u79fb\n\n\u6211\u4eec\u4f7f\u7528`std::bitset`\u7ef4\u62a4\u67d0\u4e2a\u70b9\u7684\u53ef\u8fbe\u6027\u3002\u4f46\u662f\u8fd9\u6837\u7206\u7a7a\u95f4\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5**\u5206\u5757**\uff0c\u5373\u6bcf\u6b21\u53ea\u8003\u8651$[l,r]$\u4e4b\u95f4\u7684\u70b9\uff0c\u5176\u4f59\u70b9\u4e0d\u8003\u8651\u3002\n\n### \u5173\u4e8e\u5361\u5e38\u6570\n\n- \u4e0d\u8981\u8dd1tarjan\uff0c\u56e0\u4e3a\u53ef\u4ee5\u8bc1\u660e\u56fe\u662f\u6709\u5411\u65e0\u73af\u56fe\u3002\n\n- \u4f7f\u7528\u57fa\u4e8e`fread` `fwrite`\u7684\u5feb\u8bfb\uff0c\u5feb\u5199\u3002\n\n- \u4e0d\u8981\u7528`set`,`map`\n\n- \u4f7f\u7528[\u9884\u7f16\u8bd1\u706b\u8f66\u5934](https://www.luogu.com.cn/blog/master-040626/yu-bian-yi-huo-ju-tou)\n\n- bitset\u7684\u5757\u957f\u8bbe\u7f6e\u4e3a12500\uff0c\u6b63\u597d\u53ef\u4ee5\u57284\u6b21\u5185\u8dd1\u5b8c\u5927\u6570\u636e\u800c\u4e14\u4e0d\u7206\u7a7a\u95f4\u3002\n\n- \u4e0d\u8981\u5efa\u51fa$(t+1,x,?)$\uff0c\u53ef\u4ee5\u7528\u67d0\u4e2a\u4eba\u65e5\u671f\u6700\u5927\u7684\u90a3\u4e2a\u70b9\u4ee3\u66ff\u8fd9\u4e2a\u70b9\u3002\n\n- ......\n\n\u603b\u590d\u6742\u5ea6$O(\\frac{nm}{w})$\uff0c\u52c9\u5f3a\u5361\u8fc7\u3002\n\n```cpp\n//\u706b\u8f66\u5934\u7565\n#include <bits/stdc++.h>\nusing namespace std;\n\ninline char nc() {\n    static char buf[500000], *p1 = buf, *p2 = buf;\n    return p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 500000, stdin), p1 == p2) ? EOF : *p1++;\n}\ninline int read() {\n    char ch = nc();\n    int sum = 0;\n    while (!(ch >= '0' && ch <= '9')) ch = nc();\n    while (ch >= '0' && ch <= '9') sum = sum * 10 + ch - 48, ch = nc();\n    return sum;\n}\n\ninline void write(int x) {\n    char s[15] = {}, *p = s + 13, *q = s + 13;\n    if (x < 0)\n        putchar('-'), x = -x;\n    do\n        *(--p) = x % 10 + '0', x /= 10;\n    while (x);\n    while (p != q) putchar(*p++);\n    putchar(' ');\n}\nconst int N = 100010, M = 400050, B = 12500;\n\nstruct Node {\n    int date;\n    int person;\n    bool status;\n    Node() {}\n    Node(int date, int person, bool status) : date(date), person(person), status(status) {}\n    bool operator<(const Node &t) const {\n        if (person != t.person)\n            return person < t.person;\n        if (date != t.date)\n            return date < t.date;\n        return status < t.status;\n    }\n    bool operator==(const Node &t) const {\n        return person == t.person && status == t.status && date == t.date;\n    }\n} node[M];\nint n, m, t, tot, maxdate[N];\nint id(Node t) { return lower_bound(node + 1, node + 1 + tot, t) - node; }\n\nvector<int> adj[M];\n#define Add(u, v) adj[u].push_back(v)\nvoid build() {\n    t = read(), n = read(), m = read();\n    static int o[N], t[N], x[N], y[N];\n    for (int i = 0; i < m; ++i) {\n        o[i] = read();\n        t[i] = read();\n        x[i] = read();\n        y[i] = read();\n        if (o[i] == 0) {\n            if (t[i] > ::t) {\n                i--, m--;\n                continue;\n            }\n            node[++tot] = Node(t[i], x[i], true), node[++tot] = Node(t[i], x[i], false);\n            node[++tot] = Node(t[i] + 1, y[i], true), node[++tot] = Node(t[i] + 1, y[i], false);\n        } else {\n            if (t[i] > ::t + 1) {\n                i--, m--;\n                continue;\n            }\n            node[++tot] = Node(t[i], x[i], true), node[++tot] = Node(t[i], x[i], false);\n            node[++tot] = Node(t[i], y[i], true), node[++tot] = Node(t[i], y[i], false);\n        }\n    }\n    //    for (int i = 1; i <= n; ++i) node[++tot] = Node(::t + 1, i, true), node[++tot] = Node(::t + 1, i,\n    //    false);\n\n    sort(node + 1, node + 1 + tot);\n    tot = unique(node + 1, node + 1 + tot) - node - 1;\n    for (int i = 0; i < m; ++i) {\n        if (o[i] == 0) {\n            int A = id(Node(t[i], x[i], false)), B = id(Node(t[i] + 1, y[i], false));\n            Add(A, B);\n            Add(B + 1, A + 1);\n        } else {\n            int A = id(Node(t[i], x[i], false)), B = id(Node(t[i], y[i], false));\n            Add(A + 1, B);\n            Add(B + 1, A);\n        }\n    }\n    for (int i = 1; i < tot; ++i) {\n        maxdate[node[i].person] = node[i].date;\n        if (node[i].date != node[i + 1].date && node[i].person == node[i + 1].person) {\n            Add(i - 1, i + 1);\n            Add(i + 2, i);\n        }\n    }\n}\n\nbool must_die[N], mark[M];\nbitset<B> vis[M];\nint ans[N];\n\nvoid dfs1(int x, int l, int r) {\n    if (mark[x])\n        return;\n    mark[x] = 1;\n\n    for (auto y : adj[x]) dfs1(y, l, r), vis[x] |= vis[y];\n    int c = node[x].person;\n    if (node[x].date == maxdate[c] && c >= l && c < r) {\n        if (node[x].status == false)\n            vis[x][c - l] = 1;\n        else\n            must_die[c] |= vis[x][c - l];\n    }\n}\n\nvoid check() {\n    for (int l = 1; l <= n; l += B) {\n        for (int i = 1; i <= tot; ++i) vis[i].reset(), mark[i] = 0;\n        for (int i = 1; i <= tot; ++i)\n            if (!mark[i])\n                dfs1(i, l, l + B);\n    }\n    int rest = n;\n    for (int i = 1; i <= n; ++i)\n        if (must_die[i])\n            rest--;\n    for (int i = 1; i <= n; ++i)\n        if (!must_die[i])\n            ans[i] = rest - 1;\n}\n\nvoid dfs2(int x, int l, int r) {\n    if (mark[x])\n        return;\n    mark[x] = 1;\n\n    for (auto y : adj[x]) dfs2(y, l, r), vis[x] |= vis[y];\n    int c = node[x].person;\n    if (node[x].date == maxdate[c] && !must_die[c]) {\n        if (node[x].status == false && c >= l && c < r)\n            vis[x][c - l] = 1;\n        if (node[x].status == true)\n            ans[c] -= vis[x].count();\n    }\n}\n\nvoid update() {\n    for (int l = 1; l <= n; l += B) {\n        for (int i = 1; i <= tot; ++i) vis[i].reset(), mark[i] = 0;\n        for (int i = 1; i <= tot; ++i)\n            if (!mark[i])\n                dfs2(i, l, l + B);\n    }\n    for (int i = 1; i <= n; ++i) write(ans[i]);\n}\n\nint main() {\n    build();\n    check();\n    update();\n}\n```",
        "postTime": 1591619795,
        "uid": 138511,
        "name": "GreenDay",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P5332 \u3010[JSOI2019]\u7cbe\u51c6\u9884\u6d4b\u3011"
    },
    {
        "content": "\u5c5e\u4e8e\u662f\u5efa\u51fa\u56fe\u4f1a bitset \u4e0d\u4f1a\u5206\u5757 bitset \u4e86\uff0c\u5168\u573a\u6700\u4f73\u61a8\u7b11\u4eba\u3002\n\n----------------------------------------\n\n\u5f88\u591a\u4eba\u8bf4\u8fd9\u4e2a\u5efa\u56fe\u662f 2-sat\uff1f              \n\n\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u5f88\u4e00\u822c\u7684\u95ee\u9898\u5427\u3002                  \n\n\u6211\u4eec\u8003\u8651\u5efa\u7acb\u4e24\u79cd\u70b9\uff0c\u4e00\u79cd\u662f\u6b7b\u4ea1\u70b9\u4e00\u79cd\u662f\u751f\u5b58\u70b9\uff0c\u6bcf\u4e2a\u70b9\u4ee5\u4e00\u4e2a\u4e8c\u5143\u7ec4 $(x,t)$ \u8868\u793a\u70b9 $x$ \u5728\u65f6\u523b $t$ \u7684\u72b6\u6001\uff0c\u4ee5\u4e0b\u8bb0 $a(x,y)$ \u8868\u793a\u70b9 $x$ \u5728 $y$ \u65f6\u523b\u751f\u5b58\uff0c$d(x,y)$ \u8868\u793a\u70b9 $x$ \u5728 $y$ \u65f6\u523b\u6b7b\u53bb\u4e24\u79cd\u72b6\u6001\uff0c\u5219\uff1a       \n\n\uff08\u8fd9\u91cc\u9898\u610f\u53ef\u80fd\u6709\u70b9\u4e0d\u6e05\u695a\uff0c\u4e8b\u5b9e\u4e0a\u6761\u4ef6\u662f\u5145\u8981\u6761\u4ef6\uff09\n\n\u5bf9\u4e8e\u64cd\u4f5c $1$\uff0c\u8003\u8651\u5efa\u8fb9 $d(x,t) \\rightarrow d(y , t + 1)$ \u4ee5\u53ca $a(y , t + 1) \\rightarrow a(x,t)$\uff1b\n\n\u5bf9\u4e8e\u64cd\u4f5c $2$\uff0c\u8003\u8651\u5efa\u8fb9 $a(x,t) \\rightarrow d(y,t)$ \u4ee5\u53ca $a(y,t) \\rightarrow d(x,t)$\uff1b\n\n\u63a5\u7740\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u6027\u8d28\uff1a\u5982\u679c\u77e5\u9053\u4e00\u4e2a\u70b9\u5728\u4e00\u4e2a\u65f6\u523b\u662f\u6d3b\uff0c\u90a3\u4e48\u5728\u8fd9\u4e2a\u65f6\u523b\u4e4b\u524d\u8fd9\u4e2a\u70b9\u90fd\u662f\u6d3b\uff1b\u5982\u679c\u77e5\u9053\u4e00\u4e2a\u70b9\u5728\u4e00\u4e2a\u65f6\u523b\u662f\u6b7b\uff0c\u90a3\u4e48\u5728\u8fd9\u4e2a\u65f6\u523b\u4e4b\u540e\u8fd9\u4e2a\u70b9\u90fd\u662f\u6b7b\u3002         \n\n\u6240\u4ee5\u8fde\u8fb9 $d(x,t) \\rightarrow d(x,t + 1),a(x,t) \\rightarrow a(x,t - 1)$ \u5373\u53ef\u3002                \n\n\u7531\u4e8e\u6211\u4eec\u53ea\u8981\u77e5\u9053\u4e00\u4e2a\u70b9\u6d3b\u4e0b\u6765\u540e\u54ea\u4e9b\u70b9\u5fc5\u6b7b\uff0c\u6240\u4ee5\u5c31\u662f\u8be2\u95ee\u5206\u522b\u6c42\u51fa $(i \\in [1,n],a(i,T + 1))$ \u80fd\u5230\u8fbe\u591a\u5c11\u4e2a $(j \\in [1,n],d(j,T + 1))$\u3002        \n\n\u518d\u4ed4\u7ec6\u89c2\u5bdf\u4e00\u4e0b\u56fe\uff0c\u53d1\u73b0\u8fd9\u662f\u4e2a DAG\uff08\u5982\u679c\u4e0d\u662f DAG \u7f29\u4e00\u4e0b\u70b9\u5c31\u884c\u4e86\uff09\uff0c\u90a3\u4e48\u73b0\u5728\u5c31\u662f\u8be2\u95ee DAG \u4e0a\u7684\u70b9\u5bf9\u8fde\u901a\u6027\u95ee\u9898\u3002                \n\n\u8fd9\u65f6\u5019\u53ea\u80fd\u8003\u8651 bitset \u4e86\uff0c\u4f46\u662f\u5b83\u7a7a\u95f4\u5f00\u4e0d\u4e0b\uff01\uff01\uff01\uff01        \n\n\u8fd9\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4e00\u4e2a\u6bd4\u8f83\u7ecf\u5178\u7684\u5957\u8def\uff1a\u5206\u7ec4 bitset\u3002            \n\n\u6211\u4eec\u5206\u7ec4\uff0c\u6bcf\u6b21\u53ea\u5c06\u6bcf\u7ec4\u7684\u8d21\u732e\u6254\u8fdb\u6240\u6709\u70b9\u91cc\u9762\u53bb\uff0c\u8bbe\u6bcf\u7ec4\u7684\u5927\u5c0f\u4e3a $S$ \u5219\u6211\u4eec\u6b64\u90e8\u5206\u9700\u8981\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\frac{n ^ 2}{S})$\u3002        \n\n\u7531\u4e8e\u603b\u7684\u70b9\u7684\u6570\u91cf\u7ea7\u4e3a $O(n + m)$\uff0c\u7531\u4e8e\u6211\u4eec\u6bcf\u6b21\u53ea\u5904\u7406\u4e00\u7ec4\u7684\u70b9\u7684\u8d21\u732e\uff0c\u5373\u8be2\u95ee\u662f\u5426\u80fd\u8054\u901a\u7ec4\u5185\u7684\u70b9\uff0cbitset \u5c31\u53ea\u7528\u5f00 $S$ \u5927\u5c0f\u5c31\u591f\u4e86\u3002       \n\n\u90a3\u4e48\u5bf9\u4e8e\u5728 DAG \u4e0a\u7ef4\u62a4 bitset \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f $O(\\frac{n}{S} \\times (n + m) \\times S \\times \\frac{1}{w}) = O(\\frac{n ^ 2 + nm}{w})$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u5219\u662f $O(\\frac{S(n + m)}{w})$\u3002               \n\n\u6700\u540e\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\frac{n ^ 2}{S} + \\frac{n ^ 2 + nm}{w})$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $O(\\frac{S(n + m)}{w})$\uff0c\u4e2a\u4eba\u5199\u7684 $O(2n + 4m)$ \u7684\u8282\u70b9\u6570\uff0c$S$ \u53d6\u5f97 $1 \\times 10 ^ 4$\uff0c\u8f7b\u5fae\u5361\u5e38\u3002\n\n```cpp\n/*\n\u53ea\u8bb0\u5f97\u8fd9\u9053\u9898\u662f bitset \u4e86\n\u8003\u8651\u600e\u4e48\u6253\u66b4\u529b\uff0c\u5982\u679c\u6307\u5b9a\u4e00\u4e2a\u4eba\u6d3b\uff0c\u90a3\u4e48\u5012\u7740\u626b\uff1a\n\u78b0\u5230\u4e00\u4e2a\u8be2\u95ee\uff0c\u5982\u679c\u5176\u4e2d\u6709\u4e00\u4e2a\u5df2\u7ecf\u786e\u5b9a\u4e86\uff0c\u90a3\u4e48\u5bf9\u4e8e\u53e6\u5916\u4e00\u4e2a\u4eba\uff0c\u5982\u679c\u88ab\u63a8\u51fa\u6765\u662f\u6d3b\u7684\u90a3\u5c31\u8bf4\u660e\u524d\u9762\u90fd\u662f\u6d3b\uff0c\u5426\u5219\u8bf4\u660e\u540e\u9762\u90fd\u662f\u6b7b\n\u4f30\u8ba1\u662f\u8981\u5efa\u4e2a\u56fe\u4ec0\u4e48\u7684\u7528 bitset \u6765\u8dd1\uff1f\u9884\u6d4b\u662f\u4e2a DAG\n\u4e0d\u59a8\u6211\u4eec\u5f00 2m \u4e2a\u70b9\u8868\u793a\u5404\u4e2a\u65f6\u95f4\u4e0a\u7684\u70b9\u7684\u60c5\u51b5\u3002\n\u6b38\u90a3\u6211\u5efa 4m \u4e2a\u8282\u70b9\uff0c\u6bcf\u6b21\u8fd8\u9644\u5e26\u6b7b/\u6ca1\u6b7b\u5462\n\u6211\u7528 1 \u8868\u793a\u6b7b\u90a3\u4e48\u6211\u6bcf\u6b21\u5c31\u662f bst[x] = or_{bst[to][0]} \u4e4b\u7c7b\u7684\u9012\u63a8\u4e86 \n\u90a3\u5c31\u662f\u4e2a dag \u4e86\uff0c\u53ef\u4ee5\u505a\u4e86\uff01\nAfter reading the solution\n\u539f\u6765\u8fd8\u8981\u5206\u5757 bst\uff0c\u5455\u5410\u3002\n\u4f46\u662f\u6211\u5b8c\u5168\u4e0d\u4f1a\u554a\uff01\u8fd9\u4e2a\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u5206\u5757\u4e3a\u4ec0\u4e48\u4e3a\u4ec0\u4e48\u4e3a\u4ec0\u4e48\uff01\nhhh \u5999\u554a\u5999\u554a\u5999\u554a\uff0c\u679c\u7136\u8111\u6b8b\u5c31\u662f\u8111\u6b8b\uff0c\u4e00\u65f6\u662f\u8111\u6b8b\u4e00\u4e16\u90fd\u662f\u8111\u6b8b \n*/\n#include \"bits/stdc++.h\"\nusing namespace std;\nconst int Len = 5e5 + 5 , B = 1e4 + 5;\nint n,m,T,tot,beg[Len];\nmap<int,int> dX[Len][2];\nset<int> st[Len][2];\nset<int>::iterator it; \nbitset<B> fx[Len],KILLMYSELF;\nbitset<Len> vis,SUICIDE;\nint head[Len],cnt,L,R,ans[Len],bel[Len];\nstruct node\n{\n\tint next,to;\n}edge[Len << 1];\nvoid add(int from,int to)\n{\n\tedge[++ cnt].to = to;\n\tedge[cnt].next = head[from];\n\thead[from] = cnt;\n}\nvoid dfs(int x)\n{\n\tif(vis[x]) return;\n\tvis[x] = 1;\n\tfx[x].reset();\n\tif(L <= bel[x] && bel[x] <= R) fx[x].set(bel[x] - L , 1);\n\tfor(int e = head[x] ; e ; e = edge[e].next)\n\t{\n\t\tint to = edge[e].to;\n\t\tdfs(to);\n\t\tfx[x] |= fx[to];\n\t}\n}\nint main()\n{\n\tscanf(\"%d %d %d\",&T,&n,&m);\n\tfor(int i = 1 ; i <= m ; i ++)\n\t{\n\t\tint u,v,s,t;scanf(\"%d %d %d %d\",&u,&v,&s,&t);\n\t\tif(!u) \n\t\t{\n\t\t\tst[s][0].insert(v);\n\t\t\tst[t][0].insert(v + 1);\n\t\t\tif(!dX[s][0][v]) dX[s][0][v] = ++ tot;\n\t\t\tif(!dX[t][0][v + 1]) dX[t][0][v + 1] = ++ tot;\n\t\t\tadd(dX[s][0][v] , dX[t][0][v + 1]);\n\t\t\tst[s][1].insert(v);\n\t\t\tst[t][1].insert(v + 1);\n\t\t\tif(!dX[s][1][v]) dX[s][1][v] = ++ tot;\n\t\t\tif(!dX[t][1][v + 1]) dX[t][1][v + 1] = ++ tot;\n\t\t\tadd(dX[t][1][v + 1] , dX[s][1][v]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tst[s][1].insert(v);\n\t\t\tst[t][0].insert(v);\n\t\t\tif(!dX[s][1][v]) dX[s][1][v] = ++ tot;\n\t\t\tif(!dX[t][0][v]) dX[t][0][v] = ++ tot;\n\t\t\tadd(dX[s][1][v] , dX[t][0][v]);\n\t\t\tst[s][0].insert(v);\n\t\t\tst[t][1].insert(v);\n\t\t\tif(!dX[s][0][v]) dX[s][0][v] = ++ tot;\n\t\t\tif(!dX[t][1][v]) dX[t][1][v] = ++ tot;\n\t\t\tadd(dX[t][1][v] , dX[s][0][v]);\n\t\t}\n\t}\n\tfor(int i = 1 ; i <= n ; i ++) \n\t{\n\t\tif(!dX[i][0][T + 1]) dX[i][0][T + 1] = ++ tot , st[i][0].insert(T + 1);\n\t\tif(!dX[i][1][T + 1]) dX[i][1][T + 1] = ++ tot , st[i][1].insert(T + 1);\n\t}\n\tfor(int i = 1 ; i <= n ; i ++)\n\t{\n\t\tvector<int> LYC;LYC.clear();\n\t\tfor(it = st[i][0].begin() ; it != st[i][0].end() ; it ++) LYC.push_back(*it);\n\t\tfor(int j = 0 ; j < LYC.size() - 1 ; j ++) add(dX[i][0][LYC[j]] , dX[i][0][LYC[j + 1]]); \n\t\tLYC.clear();\n\t\tfor(it = st[i][1].begin() ; it != st[i][1].end() ; it ++) LYC.push_back(*it);\n\t\tfor(int j = LYC.size() - 1 ; j >= 1 ; j --) add(dX[i][1][LYC[j]] , dX[i][1][LYC[j - 1]]);\n\t}\n\tfor(int i = 1 ; i <= n ; i ++) beg[i] = dX[i][1][T + 1] , bel[dX[i][0][T + 1]] = i;\n\tint BB = 10000;\n\tfor(int i = 1 ; i <= n ; i += BB)\n\t{\n\t\tL = i;\n\t\tR = min(n , L + BB - 1);\n\t\tvis.reset();KILLMYSELF.reset();\n\t\tfor(int j = 1 ; j <= n ; j ++) dfs(beg[j]);\n\t\tfor(int j = L ; j <= R ; j ++) if(fx[beg[j]][j - L]) KILLMYSELF.set(j - L , 1) , SUICIDE.set(j , 1);\n\t\tfor(int j = 1 ; j <= n ; j ++) ans[j] += (R - L + 1) - (KILLMYSELF | fx[beg[j]]).count();\n\t} \n\tfor(int i = 1 ; i <= n ; i ++)\n\t{\n\t\tif(SUICIDE[i]) printf(\"0 \");\n\t\telse printf(\"%d \",ans[i] - 1);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1646125257,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5332 [JSOI2019] \u7cbe\u51c6\u9884\u6d4b"
    },
    {
        "content": "\u9996\u5148\uff0c\u53ef\u4ee5\u53d1\u73b0\u706b\u661f\u4eba\u53ea\u6709\u6b7b\u548c\u6d3b\u4e24\u79cd\u72b6\u6001\uff0c\u4e14\u9650\u5236\u6761\u4ef6\u53ea\u6709 $x$ \u6b7b $y$ \u6b7b\u6216\u8005 $x$ \u6d3b $y$ \u6b7b\u8fd9\u4e24\u79cd\u9650\u5236(\u4e5f\u5c31\u662f\u4e8c\u5143\u9650\u5236)\uff0c\u56e0\u6b64\u76f4\u63a5\u8003\u8651 $2-SAT$ \u3002\n\n\u6211\u4eec\u8003\u8651\u8fd9\u6837\u5efa\u8fb9:\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u706b\u661f\u4eba\uff0c\u5c06\u5b83\u62c6\u6210\u5f88\u591a\u4e2a\u90e8\u5206\uff0c\u6bcf\u4e2a\u90e8\u5206\u4e24\u4e2a\u70b9\u5206\u522b\u4ee3\u8868\u5b83\u8fd9\u4e2a\u65f6\u523b\u662f\u6b7b\u8fd8\u662f\u6d3b\u3002\u8bbe\u7b2c $i$ \u4e2a\u706b\u661f\u4eba\u65f6\u95f4 $t$ \u7684\u6d3b\u70b9\u4e3a $(i,t,0)$ \uff0c\u6b7b\u70b9\u4e3a $(i,t,1)$ \u3002\n\n\u7136\u540e\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u706b\u661f\u4eba\uff0c\u6211\u4eec\u5982\u4e0b\u8fde\u8fb9:\n\n$$(i,t,0)\\to(i,t+1,0)$$\n\n$$(i,t+1,1)\\to(i,t,1)$$\n\n\u4e0b\u9762\u90a3\u6761\u8fb9\u662f\u6309\u7167 $2-SAT$ \u7684\u5bf9\u79f0\u6027\u8fde\u7684\u3002\n\n\u5bf9\u4e8e\u9650\u5236 $0$ \uff0c\u8fde\u8fb9\u4e3a:\n\n$$(x,t,0)\\to(y,t+1,0)$$\n\n$$(y,t+1,1)\\to(x,t,1)$$\n\n\u5bf9\u4e8e\u9650\u5236 $1$ \uff0c\u8fde\u8fb9\u4e3a:\n\n$$(x,t,1)\\to(y,t,0)$$\n\n$$(y,t,1)\\to(x,t,0)$$\n\n\u6211\u4eec\u7684\u95ee\u9898\u662f\u9009\u62e9\u70b9 $(i,T+1,0)$ \u65f6\u6709\u591a\u5c11\u4e2a $j$ \u4f7f\u5f97 $(j,T+1,1)$ \u70b9\u4e00\u5b9a\u88ab\u9009\u62e9\u3002\u5bf9\u5e94\u5230 $2-SAT$ \u4e2d\u5c31\u662f\u6709\u591a\u5c11\u4e2a $(j,T+1,1)$ \u5728 $(i,T+1,0)$ \u7684\u540e\u7ee7\u8282\u70b9\u4e2d\u3002\u8fd9\u5c31\u53d8\u6210\u4e86\u4e00\u9053\u7ecf\u5178\u7684\u6709\u5411\u56fe\u4f20\u9012\u95ed\u5305\u95ee\u9898\u3002\u6211\u4eec\u7f29\u70b9\u540e\uff0c\u76f4\u63a5\u8dd1 $DAGdp$ \u3002\u590d\u6742\u5ea6\u4e3a $O(Tnm)$ \u3002\u8fd0\u7528 $bitset$ \u4f18\u5316\u53ef\u4ee5\u505a\u5230 $O(\\frac{Tnm}{\\omega})$ \u3002\n\n\u8fd9\u6837\u663e\u7136\u8fc7\u4e0d\u53bb\u3002\u4f46\u662f\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u706b\u661f\u4eba\uff0c\u6709\u7528\u7684\u70b9\u53ea\u6709 $T+1$ \u548c\u5b83\u4f5c\u4e3a\u9650\u5236 $x$ \u7684\u70b9\u3002\u6211\u4eec\u53ea\u63d0\u51fa\u8fd9\u4e9b\u70b9\uff0c\u7136\u540e\u70b9\u6570\u5c31\u7531 $2Tn$ \u53d8\u6210\u4e86 $2(n+m)$ \uff0c\u4e5f\u5c31\u662f $300000$ \u4e2a\u5de6\u53f3\u3002\n\n\u7136\u540e\u590d\u6742\u5ea6\u4e3a $O(\\frac{(n+m)m}{\\omega})$ \u3002\u6ce8\u610f\u5361\u7a7a\u95f4\uff0c\u56e0\u6b64\u6211\u4eec\u4ee5 $B$ \u4e3a\u5355\u4f4d\u5206\u6bb5\u8ba1\u7b97\u3002\u8fd9\u6837\u590d\u6742\u5ea6\u4ecd\u4e3a $O(\\frac{(n+m)m}{\\omega})$ \uff0c\u800c\u7a7a\u95f4\u964d\u5230\u4e86 $O((n+m)B)$ \u3002\u4e0d\u8fc7\u6ce8\u610f $B$ \u8d8a\u5c0f\u5e38\u6570\u8d8a\u5927\uff0c\u56e0\u6b64\u6211\u4eec\u5c3d\u91cf\u9009\u62e9\u5927\u7684 $B$ \u3002\u7ecf\u8fc7\u6d4b\u8bd5\uff0c $B=10^4$ \u8868\u73b0\u6700\u4f18\u79c0\u4e14\u4e0d\u4f1a $MLE$ \u3002\u4e0d\u8fc7\u6211\u8fd8\u662f\u5199\u5f97\u592a\u5783\u573e\u4e86\uff0c\u56e0\u6b64\u7528\u4e86\u4e00\u4e9b\u5c0f\u624b\u6bb5\u5361\u5e38\u3002\n\n\u4ee3\u7801:\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<cctype>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#include<cassert>\n#include<iostream>\n#include<climits>\n#include<vector>\n#include<bitset>\n#include<queue>\n#define Rep(i,a,b) for(register int i=(a);i<=(b);++i)\n#define Repe(i,a,b) for(register int i=(a);i>=(b);--i)\n#define rep(i,a,b) for(register int i=(a);i<(b);++i)\n#define pb push_back\n#define mp make_pair\n#define mx(a,b) (a>b?a:b)\n#define mn(a,b) (a<b?a:b)\ntypedef unsigned long long uint64;\ntypedef unsigned int uint32;\ntypedef long long ll;\nusing namespace std;\n\nnamespace IO\n{\n\tconst uint32 Buffsize=1<<15,Output=1<<24;\n\tstatic char Ch[Buffsize],*S=Ch,*T=Ch;\n\tinline char getc()\n\t{\n\t\treturn((S==T)&&(T=(S=Ch)+fread(Ch,1,Buffsize,stdin),S==T)?0:*S++);\n\t}\n\tstatic char Out[Output],*nowps=Out;\n\t\n\tinline void flush(){fwrite(Out,1,nowps-Out,stdout);nowps=Out;}\n\n\ttemplate<typename T>inline void read(T&x)\n\t{\n\t\tx=0;static char ch;T f=1;\n\t\tfor(ch=getc();!isdigit(ch);ch=getc())if(ch=='-')f=-1;\n\t\tfor(;isdigit(ch);ch=getc())x=x*10+(ch^48);\n\t\tx*=f;\n\t}\n\n\ttemplate<typename T>inline void write(T x,char ch='\\n')\n\t{\n\t\tif(!x)*nowps++='0';\n\t\tif(x<0)*nowps++='-',x=-x;\n\t\tstatic uint32 sta[111],tp;\n\t\tfor(tp=0;x;x/=10)sta[++tp]=x%10;\n\t\tfor(;tp;*nowps++=sta[tp--]^48);\n\t\t*nowps++=ch;\n\t\tif(nowps-Out>=1<<23)flush();\n\t}\n\n\tinline void getstr(char*q)\n\t{\n\t\tregister char ch;\n\t\tfor(ch=getc();!isgraph(ch);ch=getc());\n\t\tfor(;isgraph(ch);ch=getc())*q++=ch;\n\t\t*q='\\0';\n\t}\n\n\tinline void getwd(char&x){for(x=getc();!isupper(x);x=getc());}\n}\nusing namespace IO;\n\nvoid file()\n{\n#ifndef ONLINE_JUDGE\n\tFILE*DSD=freopen(\"water.in\",\"r\",stdin);\n\tFILE*CSC=freopen(\"water.out\",\"w\",stdout);\n#endif\n}\n\ninline void Chkmin(int&u,int v){u>v?u=v:0;}\n\ninline void Chkmax(int&u,int v){u<v?u=v:0;}\n\ninline void Chkmax(double&u,double v){u<v?u=v:0;}\n\ninline void Chkmax(ll&u,ll v){u<v?u=v:0;}\n\ninline void Chkmin(ll&u,ll v){u>v?u=v:0;}\n\nconst int MAXN=3e5+7,MN=5e4+7,MM=1e5+7;\n\nstatic int n,m;\n\nstatic struct quer{int op,t,x,y;}q[MM];\n\nvector<int>tm[MN],dr[MN];\n\ninline void init()\n{\n\tread(n),read(n),read(m);\n\tRep(i,1,m)\n\t{\n\t\tread(q[i].op),read(q[i].t),read(q[i].x),read(q[i].y);\n\t\ttm[q[i].x].pb(q[i].t);\n\t}\n}\n\nstatic int e;\n\nvector<int>ed[MAXN],Ed[MAXN],nd[MAXN],rp[MAXN];\n\nstatic int ls[MAXN];\n\nstatic int dfn[MAXN],low[MAXN],dfs_clock,inq[MAXN],sta[MAXN],tp,z,tg[MAXN];\n\nvoid tarjan(int u)\n{\n\tdfn[u]=low[u]=++dfs_clock,inq[u]=1,sta[++tp]=u;\n\tfor(int v:ed[u])if(!dfn[v])tarjan(v),Chkmin(low[u],low[v]);\n\telse if(inq[v])Chkmin(low[u],dfn[v]);\n\tif(dfn[u]==low[u])\n\t{\n\t\t++z;\n\t\tdo\n\t\t{\n\t\t\tif(sta[tp]&1&&ls[sta[tp]/2+1])\n\t\t\t\tnd[z].pb(ls[sta[tp]/2+1]);\n\t\t\telse if(~sta[tp]&1&&ls[sta[tp]>>1])\n\t\t\t\trp[z].pb(ls[sta[tp]>>1]);\n\t\t\tinq[sta[tp]]=0;\n\t\t\ttg[sta[tp--]]=z;\n\t\t}while(sta[tp+1]^u);\n\t}\n}\n\nconst int lb=1e4;\n\nbitset<lb>Ak[MAXN],as;\n\nstatic int di[MAXN],ans[MAXN],d[MAXN],hs[MAXN];\n\nqueue<int>G;\n\ninline void getans()\n{\n\tRep(i,1,e)for(int j:ed[i])\n\t\tif(tg[i]^tg[j])Ed[tg[j]].pb(tg[i]);\n\tRep(i,1,z)\n\t{\n\t\tsort(Ed[i].begin(),Ed[i].end());\n\t\tEd[i].resize(unique(Ed[i].begin(),Ed[i].end())-Ed[i].begin());\n\t\tfor(int j:Ed[i])++d[j];\n\t}\n\tRep(i,1,e)if(!rp[i].empty())hs[i]=1;\n\tfor(register int l=1;l<=n;l+=lb)\n\t{\n\t\tmemcpy(di+1,d+1,sizeof(int)*e);\n\t\tRep(i,1,e)if(!di[i])G.push(i);\n\t\tregister int r=l+lb-1,al=min(r,n)-l+1;\n\t\twhile(!G.empty())\n\t\t{\n\t\t\tint u=G.front();G.pop();\n\t\t\tfor(int j:nd[u])if(j>=l&&j<=r)Ak[u].set(j-l);\n\t\t\tfor(int j:rp[u])if(j>=l&&j<=r&&Ak[u].test(j-l))\n\t\t\t\tans[j]=-INT_MAX,as.set(j-l);\n\t\t\tfor(int v:Ed[u])\n\t\t\t{\n\t\t\t\tAk[v]|=Ak[u];\n\t\t\t\tif(!--di[v])G.push(v);\n\t\t\t}\n\t\t}\n\t\tRep(i,1,e)\n\t\t{\n\t\t\tif(hs[i])\n\t\t\t{\n\t\t\t\tint w=al-(Ak[i]|as).count();\n\t\t\t\tfor(int j:rp[i])if(as[j]>=0)ans[j]+=w;\n\t\t\t}\n\t\t\tAk[i].reset();\n\t\t}\n\t\tas.reset();\n\t}\n}\n\n//1:dead,0:live\n\ninline void solve()\n{\n\tRep(i,1,n)\n\t{\n\t\ttm[i].pb(1e6+7);\n\t\tsort(tm[i].begin(),tm[i].end());\n\t\ttm[i].resize(unique(tm[i].begin(),tm[i].end())-tm[i].begin());\n\t\tint las=-1;\n\t\tfor(int j:tm[i])\n\t\t{\n\t\t\tdr[i].pb(++e);\n\t\t\tif(~las)ed[las*2-1].pb(e*2-1),ed[e<<1].pb(las<<1);\n\t\t\tlas=e;\n\t\t}\n\t\tls[las]=i;\n\t}\n\tRep(i,1,m)\n\t{\n\t\tint u=dr[q[i].x][lower_bound(tm[q[i].x].begin(),\n\t\t\t\ttm[q[i].x].end(),q[i].t)-tm[q[i].x].begin()];\n\t\tint v=dr[q[i].y][lower_bound(tm[q[i].y].begin(),\n\t\t\t\ttm[q[i].y].end(),q[i].t+1-q[i].op)-tm[q[i].y].begin()];\n\t\tif(q[i].op==0)ed[u*2-1].pb(v*2-1),ed[v<<1].pb(u<<1);\n\t\telse ed[u<<1].pb(v*2-1),ed[v<<1].pb(u*2-1);\n\t}\n\te<<=1;\n\tRep(i,1,e)if(!dfn[i])tarjan(i);\n\tgetans();\n\tRep(i,1,n)write(ans[i]<0?0:ans[i]-1,'\\n');\n\tflush();\n}\n\nint main()\n{\n\tfile();\n\tinit();\n\tsolve();\n\treturn 0;\n}\n```",
        "postTime": 1556800631,
        "uid": 7035,
        "name": "Great_Influence",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5332 \u3010[JSOI2019]\u7cbe\u51c6\u9884\u6d4b\u3011"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P5332)\n\n[\u66f4\u597d\u7684\u4f53\u9a8c](https://www.cnblogs.com/ZCETHAN/p/15965927.html)\n\n## \u9898\u76ee\u5927\u610f\n\n\u73b0\u5728\u6709 $n$ \u4e2a\u4eba\u548c $m$ \u6761\u9650\u5236\uff0c\u5bf9\u4e8e\u6bcf\u6761\u9650\u5236\uff0c\u5305\u542b\u4e00\u4e2a $c,t,x,y$\u3002\u603b\u65f6\u95f4\u662f $T$\u3002\n\n\u82e5 $c=0$\uff0c\u5219\u8868\u793a\u5982\u679c\u5728 $t$ \u65f6\u523b\u7b2c $x$ \u4e2a\u4eba\u6b7b\u4e86\uff0c\u90a3\u4e48\u5728 $t+1$ \u65f6\u523b\u7b2c $y$ \u4e2a\u4eba\u4e5f\u6b7b\u4e86\u3002\n\u82e5 $c=1$\uff0c\u5219\u8868\u793a\u5982\u679c\u5728 $t$ \u65f6\u523b\u7b2c $x$ \u4e2a\u4eba\u6d3b\u7740\uff0c\u90a3\u4e48\u5728 $t$ \u65f6\u523b\u7b2c $y$ \u4e2a\u4eba\u5c31\u6b7b\u4e86\u3002\n\n\u73b0\u5728\u4f60\u9700\u8981\u5bf9\u6bcf\u4e2a\u4eba\u6c42\u51fa\u5728 $T+1$ \u53ef\u80fd\u4e0e\u5b83\u540c\u65f6\u6d3b\u7740\u7684\u4eba\u7684\u4e2a\u6570\u3002\u5982\u679c\u8fd9\u4e2a\u4eba\u5728 $T+1$ \u4e00\u5b9a\u6b7b\u4e86\uff0c\u90a3\u4e48\u8f93\u51fa `0`\u3002\n\n## Solution\n\n**\u9996\u5148\u8003\u8651\u4e00\u4e2a\u66b4\u529b**\uff0c\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u663e\u7136\u7684 2-SAT \u95ee\u9898\u3002\u6211\u4eec\u628a\u6bcf\u4e2a\u4eba\u5206\u6210 $T+1$ \u4e2a\uff0c\u5bf9\u4e8e\u4e8c\u5143\u7ec4 $(x,t)$ \u8868\u793a\u7b2c $x$ \u4e2a\u4eba\u7684 $t$ \u65f6\u523b\u3002\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e2a\u4e8c\u5143\u7ec4\uff0c\u53ea\u6709\u4e24\u79cd\u60c5\u51b5\u2014\u2014\u6d3b\u7740\u6216\u8005\u6b7b\u4e86\uff0c\u5e76\u4e14\u662f\u76f8\u65a5\u7684\u4e24\u79cd\u72b6\u6001\u3002\n\n\u8003\u8651\u5bf9\u4e00\u4e9b\u9650\u5236\u8fde\u8fb9\u3002\n\u6211\u4eec\u7528 $(x,t,0)$ \u8868\u793a $(x,t)$ \u7684\u6b7b\u4ea1\u72b6\u6001\u70b9\uff0c$(x,t,1)$ \u8868\u793a $(x,t)$ \u7684\u5b58\u6d3b\u72b6\u6001\u70b9\u3002\u90a3\u4e48\u6709\u4ee5\u4e0b\u4e00\u4e9b\u8fde\u8fb9\u3002\n\n1. $(x,t,0)\\to (x,t+1,0)$\uff0c\u8868\u793a\u5982\u679c $t$ \u65f6\u523b $x$ \u5df2\u7ecf\u6302\u4e86\uff0c\u90a3\u4e48 $t+1$ \u4e00\u5b9a\u6302\u4e86\u3002\n2. $(x,t,1)\\to (x,t-1,1)$\uff0c\u540c\u7406\uff0c\u8868\u793a $t$ \u65f6\u523b $x$ \u6d3b\u7740\u610f\u5473\u7740 $t-1$ \u4e5f\u4e00\u5b9a\u6d3b\u7740\u3002\n3. \u5bf9\u4e8e\u9898\u76ee\u4e2d\u7b2c\u4e00\u79cd\u9650\u5236\uff0c\u6709 $(x,t,0)\\to (y,t+1,0)$ \u548c\u9006\u5426\u547d\u9898 $(y,t+1,1)\\to (x,t,1)$\u3002\n4. \u5bf9\u4e8e\u9898\u76ee\u4e2d\u7b2c\u4e8c\u79cd\u9650\u5236\uff0c\u6709 $(x,t,1)\\to (y,t,0)$ \u548c\u9006\u5426\u547d\u9898 $(y,t,1)\\to (x,t,0)$\u3002\n\n\u9996\u5148\u660e\u786e\u4e0d\u9700\u8981 Tarjan\uff0c\u56e0\u4e3a\u5bb9\u6613\u770b\u51fa\u5df2\u7ecf\u662f DAG \u4e86\u3002\n\n\u7136\u540e\u8003\u8651\u9898\u76ee\u8981\u6c42\u4ec0\u4e48\u3002\u5b9e\u9645\u4e0a\u662f\u5bf9\u6bcf\u4e2a\u70b9 $x$\uff0c\u4ece $(x,T+1,1)$ \u80fd\u5230\u8fbe\u591a\u5c11\u4e2a $(y,T+1,0)$\uff0c\u7136\u540e $n-cnt-1$ \u5c31\u662f\u8fd9\u4e2a\u70b9\u7684\u7b54\u6848\u3002\u4ec0\u4e48\u610f\u601d\uff1f\u5c31\u662f\u5047\u8bbe $x$ \u662f\u6d3b\u7740\u7684\uff0c\u90a3\u4e48\u80fd\u5f97\u5230\u4e00\u4e9b\u5728 $T+1$ \u5fc5\u7136\u6b7b\u6389\u7684\u4eba\uff0c\u7136\u540e\u7528\u603b\u4eba\u6570\u51cf\u53bb\u8fd9\u4e2a\u4eba\u6570\u518d\u5228\u53bb\u81ea\u5df1\u5c31\u662f\u53ef\u80fd\u4e0e $x$ \u540c\u65f6\u5b58\u6d3b\u7684\u4eba\u6570\u4e86\u3002\n\n---\n\n**\u7136\u540e\u4f18\u5316\u8fd9\u4e2a\u6b8b\u5fcd\u7684\u66b4\u529b**\uff0c\u8003\u8651\u4e0a\u9762\u7684\u5149\u662f\u5efa\u56fe\u5c31\u662f $O(nT)$ \u4e86\uff0c\u975e\u5e38\u4e0d\u9760\u8c31\u3002\u90a3\u8003\u8651\u628a\u4e00\u4e9b\u6ca1\u6709\u7528\u7684\u70b9\u6740\u4e86\uff0c\u9996\u5148\u4e00\u70b9\u5c31\u662f\u6ca1\u6709\u5728\u8be2\u95ee\u4e2d\u51fa\u73b0\u7684\u70b9\uff0c\u4e00\u5b9a\u662f\u6ca1\u6709\u7528\u7684\u3002\u4e8e\u662f\u8003\u8651\u5bf9\u6bcf\u4e2a\u70b9 $x$ \u5f00\u4e00\u4e2a vector \u5b58\u5b83\u51fa\u73b0\u8fc7\u7684\u65f6\u523b\uff0c\u7136\u540e\u5efa\u56fe\u7684\u65f6\u5019\u53ea\u5b58\u8fd9\u51e0\u4e2a\u70b9\u5c31\u597d\u4e86\u3002\n\n\u8fd9\u6837\u70b9\u6570\u662f $O(2m+n)$ \u7684\uff0c\u5176\u5b9e\u4ed4\u7ec6\u4e00\u60f3\u53ef\u4ee5\u66f4\u4f18\uff0c\u8be2\u95ee\u4e2d\u51fa\u73b0\u4e86 $x$ \u548c $y$\uff0c\u5176\u5b9e\u53ea\u8981 $x$ \u5b58 $t$ \u5c31\u884c\u4e86\uff0c$y$ \u6ca1\u6709\u5fc5\u8981\u3002\u56e0\u4e3a\u5982\u679c $y$ \u540e\u7eed\u6ca1\u6709\u4f5c\u4e3a $x$ \u51fa\u73b0\u5728\u8be2\u95ee\u4e2d\u7684\u8bdd\uff0c\u5bf9\u6700\u540e\u7ed3\u679c\u6ca1\u6709\u5f71\u54cd\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528\u5927\u4e8e\u5b83\u7684\u6700\u5c0f\u51fa\u73b0\u7684\u90a3\u4e2a\u8282\u70b9\u4ee3\u66ff\u5b83\u3002\u662f\u4e00\u6837\u7684\u3002\uff08\u4e0d\u8fc7\u8fd9\u6ca1\u6709\u5173\u7cfb\uff0c\u6ca1\u770b\u61c2\u4e5f\u4e0d\u8981\u7d27\uff09\n\n\u8fd9\u6837\u70b9\u6570\u5c31\u4f18\u5316\u4e0b\u6765\u4e86\uff0c\u540c\u65f6\u8fb9\u6570\u4e5f\u4e0b\u6765\u4e86\u3002\n\n---\n\n**\u7136\u540e\u8003\u8651\u7a7a\u95f4\u7684\u95ee\u9898**\uff0c\u53d1\u73b0\u5982\u679c\u5bf9\u6bcf\u4e2a\u8282\u70b9\u66b4\u529b\u8dd1\u80af\u5b9a\u662f\u4f1a\u70b8\u7684\uff0c\u90a3\u4e48\u5bb9\u6613\u60f3\u5230\u7528 bitset \u4f18\u5316\u8fd9\u4e2a\u8fc7\u7a0b\u3002\u53ef\u662f\u5982\u679c\u5bf9\u6bcf\u4e2a\u8282\u70b9\u5f00\u4e00\u4e2a\u5927\u5c0f\u4e3a $n$ \u7684 bitset \u6211\u662f\u60f3\u90fd\u4e0d\u6562\u60f3\u3002\u6240\u4ee5\u8fd9\u91cc\u7528\u5230\u4e00\u4e2a\u5c0f trick\u2014\u2014\u5e73\u8861\u590d\u6742\u5ea6\uff0c\u65e2\u7136\u4e24\u8fb9\u4e00\u8fb9\u662f\u7a7a\u95f4\u5927\uff0c\u4e00\u8fb9\u662f\u65f6\u95f4\u5927\uff0c\u90a3\u4e48\u4f55\u4e0d\u5e73\u8861\u4e00\u6ce2\u3002\u6211\u4eec\u8003\u8651\u628a $n$ \u4e2a\u4eba\u5206\u6279\u5904\u7406\uff0c\u6bcf\u6b21\u5904\u7406 $S$ \u4e2a\u4eba\uff0c\u8fd9\u6837\u7a7a\u95f4\u590d\u6742\u5ea6\u5c31\u6210\u4e86 $O(\\dfrac{nS}{8})$\uff0c\u5361\u5361\u53ef\u4ee5\u8fc7\u53bb\uff0c\u65f6\u95f4\u5c31\u662f $O(\\dfrac{n(n+m)}{S})$\uff0c$S=10000$ \u53ef\u4ee5\u8fc7\u53bb\u3002\n\n## Code\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define inf (1<<30)\n#define INF (1ll<<60)\n#define pb push_back\n#define pii pair<int,int>\n#define fi first\n#define se second\n#define mkp make_pair\n#define pll pair<ll,ll>\n#define rep(i,j,k) for(int i=(j);i<=(k);i++)\n#define per(i,j,k) for(int i=(j);i>=(k);i--)\nusing namespace std;\nconst int MAXN=1e6+10;\nconst int MAXM=300010;\nvector<int> used[MAXN],e[MAXM];\nmap<int,int> mp[MAXN][2];//mp[x][0/1][t] \u8868\u793a\u70b9 (x,t,0/1) \u7684\u7f16\u53f7\nbitset<10010> dp[MAXM],tmp;\nint tot=0,deg[MAXM];\nvoid sprd(){\n\tqueue<int> q;\n\trep(i,1,tot) for(int s:e[i]) deg[s]++;\n\trep(i,1,tot) if(!deg[i]) q.push(i);\n\twhile(!q.empty()){\n\t\tint x=q.front();q.pop();\n\t\tfor(int s:e[x]){\n\t\t\tdp[s]|=dp[x];\n\t\t\tif(--deg[s]==0) q.push(s);\n\t\t}\n\t}\n}//\u76f4\u63a5\u62d3\u6251\u4e00\u4e0b\nstruct Query{\n\tint c,t,x,y;\n\tvoid input(){\n\t\tcin>>c>>t>>x>>y;\n\t\tused[x].pb(t);//\u53ef\u4ee5\u52a0\u4e0a used[y].pb(t);\n\t}\n}q[MAXN];\nint ans[MAXN];\nint main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0);cout.tie(0);\n\tint T,n,m;\n\tcin>>T>>n>>m;\n\trep(i,1,m) q[i].input();\n\trep(i,1,n) used[i].pb(T+1),sort(used[i].begin(),used[i].end()),\n\tused[i].erase(unique(used[i].begin(),used[i].end()),used[i].end());\n\trep(i,1,n){\n\t\tfor(int t:used[i]) mp[i][0][t]=++tot,mp[i][1][t]=++tot;\n\t\trep(j,0,(int)used[i].size()-1){\n\t\t\tif(j) e[mp[i][1][used[i][j-1]]].pb(mp[i][1][used[i][j]]);\n\t\t\tif(j<(int)used[i].size()-1)\n\t\t\t\te[mp[i][0][used[i][j+1]]].pb(mp[i][0][used[i][j]]);\n\t\t}\n\t}\n\trep(i,1,m){\n\t\tif(q[i].c==0){\n\t\t\tint v=upper_bound(used[q[i].y].begin(),used[q[i].y].end(),q[i].t)-used[q[i].y].begin();\n\t\t\tint to=used[q[i].y][v];\n\t\t\te[mp[q[i].y][0][to]].pb(mp[q[i].x][0][q[i].t]);\n\t\t\te[mp[q[i].x][1][q[i].t]].pb(mp[q[i].y][1][to]);\n//\t\t\tcerr<<mp[q[i].y][0][to]<<' '<<mp[q[i].x][0][q[i].t]<<'\\n';\n//\t\t\tcerr<<mp[q[i].x][1][q[i].t]<<' '<<mp[q[i].y][1][to]<<'\\n';\n\t\t}else{\n\t\t\tint v=lower_bound(used[q[i].y].begin(),used[q[i].y].end(),q[i].t)-used[q[i].y].begin();\n\t\t\tint to=used[q[i].y][v];\n\t\t\te[mp[q[i].y][0][to]].pb(mp[q[i].x][1][q[i].t]);\n\t\t\te[mp[q[i].x][0][q[i].t]].pb(mp[q[i].y][1][to]);\n//\t\t\tcerr<<mp[q[i].y][0][to]<<' '<<mp[q[i].x][1][q[i].t]<<'\\n';\n//\t\t\tcerr<<mp[q[i].x][0][q[i].t]<<' '<<mp[q[i].y][1][to]<<'\\n';\n\t\t}\n\t}\n\trep(i,1,n) ans[i]=n-1;\n\tfor(int l=1,r;l<=n;){\n\t\tr=min(l+9999,n);\n\t\trep(i,1,tot) dp[i].reset();\n\t\trep(i,l,r) dp[mp[i][0][T+1]][i-l+1]=1;\n\t\tsprd();tmp.reset();\n\t\trep(i,l,r) if(dp[mp[i][1][T+1]][i-l+1]) ans[i]=0,tmp[i-l+1]=1;\n\t\trep(i,1,n) dp[mp[i][1][T+1]]|=tmp;//\u8fd9\u91cc\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u5fc5\u7136\u6b7b\uff0c\u8981\u8bb0\u5f97\u52a0\u4e0a\u8d21\u732e\uff0c\u56e0\u4e3a\u6709\u53ef\u80fd\u6ca1\u6709\u8dd1\u5230\n\t\trep(i,1,n) if(ans[i]) ans[i]-=dp[mp[i][1][T+1]].count();\n\t\tl=r+1;\n\t}\n\trep(i,1,n) cout<<ans[i]<<' ';\n\treturn 0;\n}\n```",
        "postTime": 1646395572,
        "uid": 292315,
        "name": "ZCETHAN",
        "ccfLevel": 7,
        "title": "[JSOI2019]\u7cbe\u51c6\u9884\u6d4b"
    },
    {
        "content": "# [JSOI2019]\u7cbe\u51c6\u9884\u6d4b  \u89e3\u9898\u62a5\u544a\n\n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P5332)\n\n## \u9898\u9762\n\n### \u9898\u610f\n\n\u6709 $T$ \u4e2a\u65f6\u523b, $n$ \u4e2a\u5c45\u6c11, $m$ \u6761\u9884\u8a00 $(ty,t,x,y)$, \u542b\u4e49\u4e3a :\n\n- $ty==0$, \u5728 $t$ \u65f6\u523b, \u82e5 $x$ \u662f\u6b7b\u4ea1\u72b6\u6001, \u5219\u5728 $t+1$ \u65f6\u523b, $y$ \u662f\u6b7b\u4ea1\u72b6\u6001.\n- $ty==1$, \u5728 $t$ \u65f6\u523b, \u82e5 $x$ \u662f\u751f\u5b58\u72b6\u6001, \u5219\u5728 $t$ \u65f6\u523b, $y$ \u662f\u6b7b\u4ea1\u72b6\u6001.\n\n\u6bcf\u4e00\u65f6\u523b\u90fd\u53ef\u80fd\u6709\u5c45\u6c11\u6b7b\u53bb, \u6709\u4e9b\u5c45\u6c11\u4f1a\u5728 $0$ \u65f6\u523b\u6b7b\u53bb. (\u7531\u4f60\u51b3\u5b9a)\n\n\u5bf9\u6bcf\u4e00\u4e2a\u5c45\u6c11\u6c42\u51fa, \u6709\u591a\u5c11\u4e2a\u9664\u4e86\u4ed6\u672c\u8eab\u7684\u5c45\u6c11**\u6709\u53ef\u80fd**\u548c\u4ed6\u4e00\u8d77\u6d3b\u5230 $T+1$ \u65f6\u523b.\n\n### \u6570\u636e\u8303\u56f4\n\n$T \\le 10^6, n\\le 5\\times10^4,m \\le 10^5.$\n\n<br/>\n\n## \u601d\u8def\n\n$bool$ \u53d8\u91cf + \u9650\u5236\u6761\u4ef6, \u770b\u5230\u8fd9\u4e24\u4e2a\u5143\u7d20\u5728\u4e00\u8d77\u7b2c\u4e00\u53cd\u5e94\u5c31\u5e94\u8be5\u662f $2-SAT$.\n\n\u4f46\u6bd5\u7adf\u4e0d\u662f\u677f\u5b50\u9898, \u8fd8\u662f\u9700\u8981\u4e00\u4e9b\u7279\u6b8a\u5904\u7406.\n\n\u8ba9\u6211\u4eec\u5206\u6b65\u9aa4\u6765\u5427.\n\n### \u5efa\u70b9 & \u8fde\u8fb9\n\n\u663e\u7136, \u6211\u9700\u8981\u628a\u6bcf\u4e00\u4e2a\u5c45\u6c11\u62c6\u6210\u4ee3\u8868\u82e5\u5e72\u4e2a\u65f6\u523b\u7684\u70b9, \u5982\u679c\u76f4\u63a5\u62c6\u6210 $T$ \u4e2a\u70b9\u7684\u8bdd\u663e\u7136\u4f1a\u70b8, \u90a3\u4e48\u5bf9\u4e8e\u70b9 $u$, \u5bf9\u4e8e\u6bcf\u4e00\u6761\u9884\u8a00 $(ty,t,u,v)$, \u6211\u4eec\u90fd\u65b0\u5efa\u4e00\u4e2a\u65f6\u523b\u4e3a $t$ \u7684\u70b9. \u5168\u90e8\u9884\u8a00\u90fd\u5904\u7406\u5b8c\u540e, \u518d\u5bf9\u6bcf\u4e2a\u70b9\u5efa\u4e00\u4e2a\u65f6\u523b\u4e3a $T+1$ \u7684\u70b9, \u8868\u793a\u5b83\u6700\u7ec8\u7684\u751f\u6b7b\u72b6\u6001.\n\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u6761\u9884\u8a00 $(ty,t,u,v)$, \u6211\u4eec\u4e0d\u9700\u8981\u5bf9 $v$ \u5efa\u4e00\u4e2a\u65f6\u523b\u4e3a $t$ (\u6216 $t+1$) \u7684\u70b9, \u53ea\u9700\u8981\u5728 $v$ \u7684\u6240\u6709\u65f6\u523b\u7684\u70b9\u4e2d\u627e\u51fa\u7b2c\u4e00\u4e2a\u65f6\u523b $\\ge t$ (\u6216 $>t$) \u7684\u70b9, \u5e76\u8fdb\u884c\u8fde\u8fb9.\n\n\u9664\u6b64\u4e4b\u5916, \u5bf9\u4e8e\u6bcf\u4e2a\u70b9 $u$, \u6211\u4eec\u8fd8\u9700\u8981\u5728\u5b83\u8868\u793a\u6b7b\u4ea1\u72b6\u6001\u7684\u70b9\u4e2d, \u6309\u7167\u65f6\u523b\u4ece\u5c0f\u5230\u5927\u5f80\u540e\u8fde\u8fb9; \u5728\u5b83\u8868\u793a\u6b7b\u4ea1\u72b6\u6001\u7684\u70b9\u4e2d, \u6309\u7167\u65f6\u523b\u4ece\u5927\u5230\u5c0f\u5f80\u524d\u8fde\u8fb9.\n\n\u8fd9\u6837, \u70b9\u6570\u5c31\u662f $2n+2m \\le 3 \\times 10^5$, \u8fb9\u6570\u4e3a $2m+2m \\le 4 \\times 10^5.$ \n\n### \u7edf\u8ba1\u7b54\u6848\n\n\u628a\u56fe\u5efa\u51fa\u6765\u540e, \u518d\u8003\u8651\u5982\u4f55\u8ba1\u7b97\u7b54\u6848.\n\n\u4e0e\u4e00\u822c\u7684 $2-SAT$ \u677f\u5b50\u4e0d\u540c, \u8fd9\u9898\u4e0d\u662f\u8981\u6c42\u6211\u4eec\u5224\u65ad\u662f\u5426\u6709\u53ef\u884c\u65b9\u6848\u6216\u8f93\u51fa\u4e00\u4e2a\u53ef\u884c\u65b9\u6848, \u6240\u4ee5\u6211\u4eec\u5c31\u4e0d\u80fd\u76f4\u63a5\u5957 $Tarjan$.\n\n\u8003\u8651\u5982\u4f55\u8ba1\u7b97\u7b54\u6848.\n\n\u8bbe $d'_u,l'_u$ \u5206\u522b\u8868\u793a\u70b9 $u$ \u5728\u65f6\u523b $T+1$ \u65f6\u8868\u793a\u6b7b\u4ea1\u72b6\u6001\u548c\u751f\u5b58\u72b6\u6001\u7684\u70b9.\n\n\u5bf9\u4e8e\u70b9 $u$, \u8bbe $num_u=\\sum_{v\\in V\\ and \\ v \\not= u} [path(l'_u,d'_v)]$, \u5176\u4e2d $[path(x,y)]=1$ \u8868\u793a\u5b58\u5728\u4e00\u6761\u7531 $x$ \u5230 $y$ \u7684\u8def\u5f84. \u5219 $ans_u=n-1-num_u.$\n\n\u7279\u522b\u5730, \u5bf9\u4e8e $[path(l'_u,d'_u)]=1$ \u7684\u70b9 $u$, $ans_u=0$, \u5e76\u4e14\u4f1a\u4f7f\u5f97\u603b\u4f53\u7b54\u6848 $-1.$\n\n\u5047\u8bbe\u6211\u4eec\u5efa\u51fa\u6765\u7684\u56fe\u662f\u4e00\u4e2a $DAG$ (\u6709\u5411\u65e0\u73af\u56fe), \u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7528 $\\rm bitset$ \u8f85\u52a9 $DP$, \u8ba1\u7b97\u51fa\u6bcf\u4e2a\u70b9 $u$ \u7684 $num_u$, \u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O\\left(\\frac{n(2n+2m)}{w}\\right) (w=32)$, \u7ea6\u4e3a $5\\times10^8$.\n\n\u7531\u4e8e\u5185\u5b58\u9650\u5236, $\\rm bitset$ \u4e0d\u80fd\u76f4\u63a5\u5f00\u5230 $n$, \u6240\u4ee5\u6211\u4eec\u9700\u8981\u5206\u6b21\u8fdb\u884c $DP$. \u867d\u7136\u770b\u8d77\u6765 $\\rm bitset$ \u7684\u5927\u5c0f\u548c\u65f6\u95f4\u590d\u6742\u5ea6\u6ca1\u4ec0\u4e48\u5173\u7cfb, \u4f46\u4e3a\u4e86\u907f\u514d $DP$ \u521d\u59cb\u5316,\u8d4b\u503c\u7b49\u64cd\u4f5c\u5e26\u6765\u7684\u5e38\u6570, \u8fd8\u662f\u5c3d\u91cf\u8d8a\u5927\u8d8a\u597d.\u4e0a\u9762\u8ba8\u8bba\u7684\u662f $DAG$ \u7684\u60c5\u51b5, \u800c\u5b9e\u9645\u4e0a, \u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8bc1\u660e\u6211\u4eec\u5efa\u51fa\u6765\u7684\u8fd9\u5f20\u56fe\u5c31\u662f\u4e00\u4e2a $DAG$.\n\n### \u8bc1\u660e\u539f\u56fe\u662f\u4e00\u4e2a $DAG$\n\n\u6211\u4eec\u8003\u8651\u628a\u6240\u6709\u70b9\u5206\u4e3a $d$ (\u6b7b\u4ea1\u72b6\u6001), $l$ (\u751f\u5b58\u72b6\u6001), \u7136\u540e\u5206\u7c7b\u8bc1\u660e.\n\n\u4e3a\u4e86\u65b9\u4fbf\u63cf\u8ff0, \u6211\u4eec\u89c4\u5b9a\n\n- $x \\rightarrow y$ \u8868\u793a\u5b58\u5728\u4e00\u6761\u4ece $x$ \u5230 $y$ \u7684\u8def\u5f84, \u4e14 $x$ \u6240\u4ee3\u8868\u7684\u65f6\u523b\u5c0f\u4e8e $y$ \u6240\u4ee3\u8868\u7684\u65f6\u523b.\n- $y \\leftarrow x$ \u8868\u793a\u5b58\u5728\u4e00\u6761\u4ece $x$ \u5230 $y$ \u7684\u8def\u5f84, \u4e14 $x$ \u6240\u4ee3\u8868\u7684\u65f6\u523b\u5927\u4e8e $y$ \u6240\u4ee3\u8868\u7684\u65f6\u523b.\n- $x \\Rightarrow y$ \u8868\u793a\u5b58\u5728\u4e00\u6761\u4ece $x$ \u5230 $y$ \u7684\u8def\u5f84, \u4e14 $x$ \u6240\u4ee3\u8868\u7684\u65f6\u523b\u5c0f\u4e8e\u7b49\u4e8e $y$ \u6240\u4ee3\u8868\u7684\u65f6\u523b.\n- $y \\Leftarrow x$ \u8868\u793a\u5b58\u5728\u4e00\u6761\u4ece $x$ \u5230 $y$ \u7684\u8def\u5f84, \u4e14 $x$ \u6240\u4ee3\u8868\u7684\u65f6\u523b\u5927\u4e8e\u7b49\u4e8e $y$ \u6240\u4ee3\u8868\u7684\u65f6\u523b.\n\n\u6309\u7167\u4e0a\u6587\u6240\u8ff0\u7684\u8fde\u8fb9\u65b9\u6cd5, \u4f1a\u5b58\u5728\u4ee5\u4e0b\u8fd9\u51e0\u79cd\u8fb9.\n\n- $d \\rightarrow d$\n- $l \\leftarrow l$\n- $l \\Rightarrow d$\n- $d \\Leftarrow l$\n\n\u9996\u5148\u8003\u8651 $d$. \u7531\u4e8e\u4e0d\u5b58\u5728\u4ece $d$ \u51fa\u53d1\u5230 $l$ \u7684\u8fb9, \u6240\u4ee5\u82e5\u5b58\u5728\u4e00\u4e2a\u4ece $d$ \u5230 $d$ \u7684\u73af, \u5219\u73af\u4e0a\u7684\u70b9\u4e00\u5b9a\u90fd\u662f $d$. \u53c8\u56e0\u4e3a $d$ \u53ea\u80fd\u8fde\u5411\u65f6\u523b\u6bd4\u5b83\u5927\u7684 $d$, \u6240\u4ee5\u4e0d\u53ef\u80fd\u8fde\u56de\u81ea\u5df1. \u6545\u4e0d\u5b58\u5728\u4e00\u4e2a\u4ee5 $d$ \u4e3a\u8d77\u70b9, $d$ \u4e3a\u7ec8\u70b9\u7684\u73af.\n\n\u518d\u6765\u8003\u8651 $l$. \u540c\u6837, \u7531\u4e8e\u4e0d\u5b58\u5728\u4ece $d$ \u51fa\u53d1\u5230 $l$ \u7684\u8fb9, \u6240\u4ee5\u82e5\u5b58\u5728\u4e00\u4e2a\u4ece $l$ \u5230 $l$ \u7684\u73af, \u5219\u73af\u4e0a\u7684\u70b9\u4e00\u5b9a\u90fd\u662f $l$, \u53c8\u56e0\u4e3a $l$ \u53ea\u80fd\u8fde\u5411\u65f6\u523b\u6bd4\u5b83\u5c0f\u7684 $l$, \u6240\u4ee5\u4e0d\u53ef\u80fd\u8fde\u56de\u81ea\u5df1. \u6545\u4e0d\u5b58\u5728\u4e00\u4e2a\u4e00 $l$ \u4e3a\u8d77\u70b9, $l$ \u4e3a\u7ec8\u70b9\u7684\u73af.\n\n\u6545, \u539f\u56fe\u4e0a\u4e0d\u5b58\u5728\u73af. \u5373\u8bc1\u660e\u4e86\u539f\u56fe\u662f\u4e00\u4e2a $DAG$.\n\n\u90a3\u4e48, \u6211\u4eec\u5c31\u53ef\u4ee5\u6309\u7167\u4e0a\u8ff0\u7684\u65b9\u6cd5\u8ba1\u7b97\u51fa $num_u$ \u4ece\u800c\u8ba1\u7b97\u51fa $ans_u$ \u4e86.\n\n### ~~\u6ca1\u4e86~~\n\n\u8fd8\u6709\u4e00\u4e9b\u5c0f\u7ec6\u8282, \u6bd4\u5982\u4e3a\u4e86\u907f\u514d $[path(l'_u,d'_u)=1$ \u7684\u70b9\u7684\u5f71\u54cd, \u9700\u8981\u505a\u4e24\u904d $DP$ (\u672c\u4eba\u53ea\u60f3\u5230\u8fd9\u79cd\u65b9\u6cd5), \u8fd8\u6709\u8fde\u8fb9\u65f6\u4e0d\u8981\u628a $t$ \u7684\u5173\u7cfb\u5f04\u6df7\u4e86.\n\n\u8fd8\u6709, \u8fd9\u9053\u9898\u9700\u8981\u75af\u72c2\u5361\u5e38, \u6211\u8fd9\u4efd\u4ee3\u7801\u5361\u5230\u6700\u540e\u4e5f\u53ea\u80fd\u968f\u7f18\u8fc7...\n\n\u8d60\u9001([@GreenDay](https://www.luogu.com.cn/blog/master-040626/#)\u7684)[\u5361\u5e38\u706b\u8f66\u5934](https://www.luogu.com.cn/blog/master-040626/yu-bian-yi-huo-ju-tou#)\n\n<br/>\n\n## \u4ee3\u7801\n\n```cpp\n#pragma GCC optimize(3) // \u624b\u52a8\u5f00\u4e86\u4e2a O3 \u4f18\u5316\n#include<bits/stdc++.h>\n\nusing namespace std;\n\n#define pb push_back\n#define sz(x) (int)(x).size()\n#define mkp make_pair\n#define fi first\n#define se second\n#define lb lower_bound\n\nconst int _=5e5+7;\nconst int X=12500;\n\nbool be;\nint n,m,T;\nint de[_],tms[_],bel[_],np,num[_],p[_];\nint lst[_],nxt[_],to[_],tot;\nbool mst[_];\nbitset<X+7> f[_];\nqueue<int> q;\nvector<pair<int,int> > ve[_];\nstruct edge{\n\tint p,t,u,v;\n#define p(i) e[i].p\n#define t(i) e[i].t\n#define u(i) e[i].u\n#define v(i) e[i].v\n}e[_];\nbool en;\n\nbool cmp(edge a,edge b){ return a.t<b.t; }\n\nvoid add(int x,int y){\n\tnxt[++tot]=lst[y]; to[tot]=x; lst[y]=tot; de[x]++;            // \u5efa\u53cd\u5411\u8fb9\n}\n\nvoid _init(){\n\tcin>>T>>n>>m;\n\tfor(int i=1;i<=m;i++) cin>>p(i)>>t(i)>>u(i)>>v(i);\n\tsort(e+1,e+1+m,cmp);\n\tfor(int i=1;i<=m;i++){\n\t\tint u=u(i),t=t(i),sz=sz(ve[u]);\n\t\tif(!sz||ve[u][sz-1].fi!=t) ve[u].pb(mkp(t,++np)),++np;\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tve[i].pb(mkp(T+1,++np)); ++np;\n\t\tbel[np]=bel[np-1]=i;\n\t\tp[i]=np;\n\t\tfor(int j=0;j<sz(ve[i])-1;j++){\n\t\t\tadd(ve[i][j].se,ve[i][j+1].se);\n\t\t\tadd(ve[i][j+1].se+1,ve[i][j].se+1);\n\t\t}\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tint u=u(i),v=v(i),t=t(i);\n\t\tpair<int,int> tmp=mkp(t,0);\n\t\tint t1=lb(ve[u].begin(),ve[u].end(),tmp)-ve[u].begin(),t2=lb(ve[v].begin(),ve[v].end(),tmp)-ve[v].begin();\n\t\tif(!p(i)&&ve[v][t2].fi==t) t2++;\n\t\tif(p(i)) add(ve[u][t1].se+1,ve[v][t2].se),add(ve[v][t2].se+1,ve[u][t1].se);\n\t\telse add(ve[u][t1].se,ve[v][t2].se),add(ve[v][t2].se+1,ve[u][t1].se+1);\n\t}\n}\n\nvoid _dp(int L,int R){\n\tfor(int i=1;i<=np;i++){\n\t\tf[i].reset(); tms[i]=0;\n\t\tif(!de[i]) q.push(i);\n\t}\n\twhile(!q.empty()){\n\t\tint u=q.front(); q.pop();\n\t\tif(u%2&&!mst[bel[u]]&&bel[u]>=L&&bel[u]<=R) f[u][bel[u]-L]=1;\n\t\tfor(int i=lst[u];i;i=nxt[i]){\n\t\t\tint v=to[i];\n\t\t\tf[v]|=f[u];\n\t\t\ttms[v]++;\n\t\t\tif(tms[v]==de[v]){ q.push(v); tms[v]++; }\n\t\t}\n\t}\n}\n\nvoid _run(){\n\tint ls=0;\n\tfor(int i=1;i<=n;i+=X){\n\t\t_dp(i,i+X-1);\n\t\tfor(int j=i;j<=min(n,i+X-1);j++)\n\t\t\tif(f[p[j]][j-i]) mst[j]=1,ls++;\n\t}\n    \n\tfor(int i=1;i<=n;i+=X){\n\t\t_dp(i,i+X-1);\n\t\tfor(int j=1;j<=n;j++) num[j]-=f[p[j]].count();\n\t}\n\n\tfor(int i=1;i<=n;i++)\n\t\tif(mst[i]) cout<<0<<' ';\n\t\telse cout<<n-1+num[i]-ls<<' ';\n    \n\tcout<<endl;\n}\nint main(){\n#ifndef ONLINE_JUDGE\n\tfreopen(\"9.in\",\"r\",stdin);\n\tfreopen(\"x.out\",\"w\",stdout);\n#endif\n\tios::sync_with_stdio(false);\n\tclock_t st=clock();\n\t_init();\n\tst=clock();\n\t_run();\n\tcerr<<(double)(clock()-st)/CLOCKS_PER_SEC<<endl;\n\tcerr<<(double)1.0*(&en-&be)/(1<<20)<<endl;\n\treturn 0;\n}\n```\n\n \n\n",
        "postTime": 1592231947,
        "uid": 113693,
        "name": "BruceW_07",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5332 \u3010[JSOI2019]\u7cbe\u51c6\u9884\u6d4b\u3011"
    }
]