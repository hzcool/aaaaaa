[
    {
        "content": "\u6708\u8d5b\u7684\u65f6\u5019\u6709\u4e8b\u6ca1\u8003\u2026\u2026\u540e\u6765\u624d\u770b\u5230\u8fd9\u9898\u51fa\u7684\u8d85\u68d2\uff01\u624b\u52a8\u819czcy\u2026\u2026\n\n\u521a\u5f00\u59cb\u4ee5\u4e3a\u662f\u4e00\u4e2a\u7f51\u7edc\u6d41\u6a21\u578b\uff0c\u7136\u540e\u5efa\u6a21\u5efa\u4e86\u5341\u51e0\u5206\u949f\u6ca1\u6210\u529f\u2026\u2026\u540e\u6765\u731b\u7136\u95f4\u60f3\u5230\u79bb\u6563\u5316\u4e4b\u540e\u5206\u7c7b\u8ba8\u8bba\u7ebf\u6bb5\u7aef\u70b9\u4f3c\u4e4e\u53ef\u884c\u3002\n\n\u8003\u8651\u5230\u6211\u4eec\u53ea\u9700\u8981\u6c42\u51fa\u5173\u95e8\u7684\u6700\u957f\u65f6\u95f4\u5373\u53ef\u3002\u4e8e\u662f\u53ef\u4ee5\u7ed9\u6bcf\u4e2a\u8003\u5bdf\u961f\u5efa\u4e00\u4e2a\u5e26\u6743\u70b9\uff0c\u7136\u540e\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c\uff1a\n\n1.\u4e00\u4e2a\u7ebf\u6bb5\u5de6\u8fb9\u4e3a\u8d77\u70b9\uff0c\u53f3\u8fb9\u4e3a\u7ec8\u70b9\u3002\u5982\u679c\u8fd9\u4e24\u4e2a\u70b9\u540c\u5c5e\u4e8e\u4e00\u4e2a\u8003\u5bdf\u961f\uff0c\u90a3\u4e48\u5c31\u7ed9\u8be5\u70b9\u6743\u52a0\u4e0a\u5f53\u524d\u7ebf\u6bb5\u957f\u5ea6\uff0c\u8868\u793a\u5982\u679c\u7ed9\u8be5\u8003\u5bdf\u961f\u94a5\u5319\u53ef\u4ee5\u83b7\u5f97\u7684\u8d21\u732e\uff1b\u5426\u5219\u5c31\u5728\u5206\u5c5e\u7684\u4e24\u4e2a\u8003\u5bdf\u961f\u4e4b\u95f4\u8fde\u4e00\u6761\u6743\u503c\u4e3a\u7ebf\u6bb5\u957f\u5ea6\u7684\u8fb9\uff0c\u8868\u793a\u5982\u679c\u7ed9\u8fd9\u4e24\u4e2a\u8003\u5bdf\u961f\u94a5\u5319\u53ef\u4ee5\u83b7\u5f97\u7684\u8d21\u732e\u3002\n\n2.\u4e00\u4e2a\u7ebf\u6bb5\u5de6\u8fb9\u548c\u53f3\u8fb9\u90fd\u662f\u8d77\u70b9\uff0c\u5219\u7ed9\u5de6\u8fb9\u7684\u8003\u5bdf\u961f\u70b9\u6743\u52a0\u4e0a\u7ebf\u6bb5\u957f\u5ea6\uff0c\u539f\u56e0\u540c\u4e0a\uff1b\n\n3.\u4e00\u4e2a\u7ebf\u6bb5\u5de6\u8fb9\u548c\u53f3\u8fb9\u90fd\u662f\u7ec8\u70b9\uff0c\u5219\u7ed9\u53f3\u8fb9\u7684\u8003\u5bdf\u961f\u70b9\u6743\u52a0\u4e0a\u7ebf\u6bb5\u957f\u5ea6\uff1b\n\n4.\u4e00\u4e2a\u7ebf\u6bb5\u5de6\u8fb9\u662f\u7ec8\u70b9\uff0c\u53f3\u8fb9\u662f\u8d77\u70b9\uff0c\u5219\u5fc5\u7136\u7ed9\u7b54\u6848\u9020\u6210\u8d21\u732e\uff0c\u76f4\u63a5\u7ed9\u7b54\u6848\u52a0\u4e0a\u8d21\u732e\u5373\u53ef\u3002\n\n\u63a5\u4e0b\u6765\u6211\u60f3\u7740\u8fd9\u4e2a\u56fe\u61f5\u4e86\u4e00\u4f1a\u513f\uff0c\u600e\u4e48\u6c42\u89e3\u4ece\u4e2d\u9009k\u4e2a\u70b9\u4f7f\u5f97\u8bf1\u5bfc\u5b50\u56fe\u7684\u6743\u503c\u548c\u6700\u5927\uff1f\u521a\u5f00\u59cb\u60f3\u7740\u8fd9\u4e2a\u56fe\u662f\u4e2a\u4e8c\u5206\u56fe\uff0c\u53ef\u4ee5\u600e\u4e48\u505a\uff1b\u540e\u6765\u731b\u7136\u53d1\u73b0\u8fd9\u4e2a\u56fe\u5b9e\u9645\u4e0a\u662f\u7531\u5f88\u591a\u94fe\u7ec4\u6210\u7684\u2026\u2026\n\n\u4e8e\u662f\u5c31\u5f88\u663e\u7136\u4e86\uff0c\u5bf9\u4e8e\u6bcf\u6761\u94fe\u90fddp\u4e00\u4e0b\uff0cdp[i][j][0/1]\u5c31\u8868\u793a\u5f53\u524ddp\u5230\u4e86\u524di\u4e2a\u70b9\uff0c\u9009j\u4e2a\u70b9\uff0c\u5f53\u524d\u70b9\u662f\u5426\u9009\u62e9\u7684\u6700\u5927\u503c\uff0c\u8fd9\u4e2adp\u662f\u5f88easy\u7684\uff0c\u4e8e\u662f\u95ee\u9898\u5c31\u5728O(n^2)\u7684\u65f6\u95f4\u5185\u89e3\u51b3\u4e86\u3002\n\n\u518d\u6b21\u819c\u51fa\u9898\u4ebaOrz\u2026\u2026/\u83dc\u9e21\u7684\u6211\u521a\u5f00\u59cb\u8fdedp\u7684\u521d\u59cb\u503c\u90fd\u6ca1\u8d4b2333\n\n``````cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n\nconst int maxn = 2005;\nmap<int, int> mp;\nint srt[maxn * 2], f[maxn][maxn][2], val[maxn], ss[maxn];\nint vis[maxn], nxt[maxn], ord[maxn], tot, n, m;\nvoid dfs(int u){\n\tvis[ord[++tot] = u] = 1;\n\tif(nxt[u]) dfs(nxt[u]);\n}\nint main(){\n\tfreopen(\"input.txt\", \"r\", stdin);\n\tfreopen(\"out1.txt\", \"w\", stdout);\n\tscanf(\"%d%d\", &n, &m);\n\tfor(int i = 1; i <= n; i++){\n\t\tint l, r;\n\t\tscanf(\"%d%d\", &l, &r);\n\t\tmp[l] = i * 2;\n\t\tmp[r] = i * 2 + 1;\n\t\tsrt[i] = l;\n\t\tsrt[i + n] = r;\n\t}\n\tsort(srt + 1, srt + n + n + 1);\n\tint res = 0;\n\tfor(int i = 1; i < n + n; i++){\n\t\tint l = srt[i], r = srt[i + 1];\n\t\tint ld = mp[l], rd = mp[r];\n\t\tif((ld & 1) && !(rd & 1)) res += r - l;\n\t\tif((ld & 1) && (rd & 1)) val[rd >> 1] += r - l;\n\t\tif(!(ld & 1) && !(rd & 1)) val[ld >> 1] += r - l;\n\t\tif(!(ld & 1) && (rd & 1)){\n\t\t\tif((ld >> 1) == (rd >> 1)) val[ld >> 1] += r - l;\n\t\t\telse nxt[rd >> 1] = ld >> 1, ss[rd >> 1] = r - l;\n\t\t}\n\t}\n\tfor(int i = 1; i <= n + n; i++){\n\t\tint d = mp[srt[i]];\n\t\tif(!(d & 1) && !vis[d >> 1]) dfs(d >> 1);\n\t}\n\t//for(int i = 1; i <= n; i++) printf(\"%d \", ord[i]);\n\tmemset(f, 0xbf, sizeof(f));\n\tf[n + 1][0][0] = 0;\n\tfor(int i = n; i > 0; i--){\n\t\tf[i][0][0] = 0;\n\t\tfor(int j = min(n - i + 1, m); j > 0; j--){\n\t\t\tf[i][j][0] = max(f[i + 1][j][0], f[i + 1][j][1]);\n\t\t\tif(!nxt[ord[i]]) f[i][j][1] = max(f[i + 1][j - 1][0], f[i + 1][j - 1][1]) + val[ord[i]];\n\t\t\telse f[i][j][1] = max(f[i + 1][j - 1][0], f[i + 1][j - 1][1] + ss[ord[i]]) + val[ord[i]];\n\t\t}\n\t}\n\tprintf(\"%d\\n\", srt[n + n] - srt[1] - res - max(f[1][m][0], f[1][m][1]));\n\treturn 0;\n}\n```",
        "postTime": 1537795911,
        "uid": 30575,
        "name": "waaadreamer",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4890 \u3010Never\u00b7island\u3011"
    },
    {
        "content": "\u9898\u610f\u7b80\u8ff0\uff1a\u628ak\u628a\u94a5\u5319\u5206\u914d\u7ed9n\u4e2a\u8003\u5bdf\u961f\uff0c\u83b7\u5f97\u94a5\u5319\u7684\u8003\u5bdf\u961f\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e9b\u7279\u6743\uff08\u5982\u4e0b\u8868\uff09\uff0c\u6c42\uff1a\u4fdd\u8bc1 \u6ca1\u6709\u94a5\u5319\u7684\u8003\u5bdf\u961f \u56de\u6765\u65f6\u95e8\u662f\u5f00\u542f\u7684\u524d\u63d0\u4e0b\uff0c\u95e8\u4fdd\u6301\u542f\u5f00\u542f\u7684\u65f6\u95f4\u7684\u6700\u5c0f\u503c\u3002\n\n|  | \u51fa\u95e8\u65f6 | \u56de\u6765\u65f6 | \u56de\u6765\u540e |\n| :----------: | :----------: | :----------: | :----------: |\n| \u6ca1\u6709\u94a5\u5319\u7684\u8003\u5bdf\u961f | \u95e8\u4f1a\u6253\u5f00 | \u95e8\u5fc5\u987b\u5904\u5728\u5f00\u542f\u7684\u72b6\u6001 | \u53ef\u4ee5\u628a\u95e8\u5173\u4e0a |\n| \u6709\u94a5\u5319\u7684\u8003\u5bdf\u961f| \u53ef\u4ee5\u628a\u95e8\u5173\u4e0a | \u95e8\u7684\u72b6\u6001\u4efb\u610f | \u53ef\u4ee5\u628a\u95e8\u5173\u4e0a |\n\n\u5206\u6790\u9898\u76ee\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u95e8\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u7684\u72b6\u6001\u53ea\u8ddf \u4e0a\u4e00\u4e2a\u51fa\u53d1/\u56de\u6765\u7684\u8003\u5bdf\u961f \u548c \u4e0b\u4e00\u4e2a\u51fa\u53d1/\u56de\u6765\u7684\u8003\u5bdf\u961f\u6709\u5173\u7cfb\u3002\u56e0\u6b64\u6b64\u9898\u7684\u4e3b\u8981\u601d\u8def\u662f\u5bf9\u6240\u6709\u8003\u5bdf\u961f\u7684\u51fa\u53d1\u65f6\u523b\u548c\u56de\u6765\u65f6\u523b\u6392\u5e8f\uff0c\u4f9d\u6b21\u5904\u7406\u6bcf\u4e24\u4e2a\u65f6\u523b\u4e4b\u95f4\u7684\u65f6\u6bb5\u3002\n\n\u53e6\u5916\uff0c\u5bf9\u4e8e\u4e00\u6bb5\u65f6\u95f4\uff0c\u6211\u4eec\u6709\u65f6\u628a\u94a5\u5319\u5206\u914d\u7ed9\u76f8\u5173\u7684\u8003\u5bdf\u961f\uff0c\u53ef\u4ee5\u589e\u52a0\u95e8\u5173\u95ed\u7684\u65f6\u95f4\uff0c\u4f7f\u7b54\u6848\u66f4\u4f18\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u8003\u5bdf\u961f\u83b7\u5f97\u94a5\u5319\u7684\u65f6\u5019\uff0c\u80fd\u591f\u7ed9\u7b54\u6848\u5e26\u6765\u7684\u8d21\u732e(\u95e8\u5173\u95ed\u7684\u65f6\u95f4\uff0c\u56e0\u4e3a\uff1a\u603b\u65f6\u95f4-\u6700\u957f\u7684\u95e8\u5173\u95ed\u65f6\u95f4=\u6700\u77ed\u7684\u95e8\u5f00\u542f\u65f6\u95f4 \uff09\uff0c\u7136\u540e\u518d\u6839\u636e\u8fd9\u4e9b\u7ed3\u679c\uff0c\u6765\u5f97\u51fa\u6700\u4f18\u89e3\u3002\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u4e24\u65f6\u523b\u95f4\u7684\u4e00\u6bb5\u65f6\u95f4\u6709\u8fd9\u4e9b\u60c5\u51b5\uff1a\n\n### 1.\u524d\u4e00\u4e2a\u65f6\u523b\u548c\u540e\u4e00\u4e2a\u65f6\u523b \u90fd\u6709\u8003\u5bdf\u961f\u8981\u51fa\u53d1\n\n\u5982\u679c\u6211\u4eec\u628a\u4e00\u628a\u94a5\u5319\u5206\u914d\u7ed9\u524d\u4e00\u4e2a\u8003\u5bdf\u961f\uff0c\u90a3\u4e48\u8fd9\u6bb5\u65f6\u95f4\u95e8\u5c31\u4f1a\u5904\u5728\u5173\u95ed\u72b6\u6001\u3002\u7ed9\u524d\u4e00\u4e2a\u8003\u5bdf\u961f\u94a5\u5319\u7ed9\u7b54\u6848\u5e26\u6765\u7684\u8d21\u732e+=\u8fd9\u6bb5\u65f6\u95f4\u7684\u957f\u5ea6\uff08\u5de6\u95ed\u53f3\u5f00\uff09\n\n### 2.\u524d\u4e00\u4e2a\u65f6\u523b\u548c\u540e\u4e00\u4e2a\u65f6\u523b \u90fd\u6709\u8003\u5bdf\u961f\u56de\u6765\n\n\u524d\u4e00\u4e2a\u8003\u5bdf\u961f\u56de\u6765\u540e\uff0c\u53ef\u4ee5\u628a\u95e8\u5173\u4e0a\uff0c\u53ef\u662f\uff0c\u540e\u9762\u7684\u8003\u5bdf\u961f\u53ef\u80fd\u6ca1\u94a5\u5319\u8fdb\u6765\u554a\u3002\u6240\u4ee5\u8981\u4e48\u524d\u4e00\u4e2a\u8003\u5bdf\u961f\u628a\u95e8\u6253\u5f00\uff0c\u8981\u4e48\u7ed9\u540e\u9762\u7684\u8003\u5bdf\u961f\u94a5\u5319\u3002\u7ed9\u540e\u4e00\u4e2a\u8003\u5bdf\u961f\u94a5\u5319\u7ed9\u7b54\u6848\u5e26\u6765\u7684\u8d21\u732e+=\u8fd9\u6bb5\u65f6\u95f4\u7684\u957f\u5ea6\uff08\u5de6\u95ed\u53f3\u5f00\uff09\n\n### 3.\u524d\u4e00\u4e2a\u65f6\u523b\u6709\u8003\u5bdf\u961f\u56de\u6765 \u540e\u4e00\u4e2a\u65f6\u523b\u6709\u8003\u5bdf\u961f\u51fa\u53d1 \n\n\u7531\u4e8e\u524d\u4e00\u4e2a\u8003\u5bdf\u961f\u4e0d\u7ba1\u662f\u5f00\u95e8\u8fd8\u662f\u5173\u95e8\uff0c\u90fd\u4e0d\u4f1a\u5f71\u54cd\u4e0b\u4e00\u4e2a\u8003\u5bdf\u961f\u51fa\u53d1\uff0c\u6240\u4ee5\u524d\u4e00\u4e2a\u8003\u5bdf\u961f\u9009\u62e9\u5173\u95e8\u4e00\u5b9a\u66f4\u4f18\u3002\u7b54\u6848+=\u8fd9\u6bb5\u65f6\u95f4\u7684\u957f\u5ea6\uff08\u5de6\u95ed\u53f3\u5f00\uff09\u3002\n\n### 4.\u524d\u4e00\u4e2a\u65f6\u523b\u8003\u5bdf\u961f\u51fa\u53d1\uff0c\u540e\u4e00\u4e2a\u65f6\u523b\u8003\u5bdf\u961f\u56de\u6765 \n\n\u8fd9\u4e24\u4e2a\u65f6\u523b\u7684\u8003\u5bdf\u961f\u53ef\u80fd\u662f\u540c\u4e00\u4e2a\u8003\u5bdf\u961f\uff0c\u4e5f\u53ef\u80fd\u662f\u4e0d\u540c\u7684\u8003\u5bdf\u961f\uff0c\u8fd9\u65f6\u5c31\u8981\u5206\u60c5\u51b5\u8ba8\u8bba\u4e86:\n\n#### 1\uff09\u540c\u4e00\u4e2a\u8003\u5bdf\u961f\n\n\u5982\u679c\u7ed9\u8fd9\u4e2a\u8003\u5bdf\u961f\u94a5\u5319\uff0c\u90a3\u4e48\u51fa\u53d1\u65f6\u5c31\u80fd\u628a\u95e8\u5173\u4e0a\u4e86\uff0c\u56de\u6765\u4e5f\u4e0d\u4f1a\u53d7\u5f71\u54cd\u3002\u7ed9\u8be5\u8003\u5bdf\u961f\u94a5\u5319\u7ed9\u7b54\u6848\u5e26\u6765\u7684\u8d21\u732e+=\u8fd9\u6bb5\u65f6\u95f4\u7684\u957f\u5ea6\uff08\u5de6\u95ed\u53f3\u5f00\uff09\n\n#### 2\uff09\u4e0d\u540c\u7684\u8003\u5bdf\u961f\n\n\u5982\u679c\u8981\u8ba9\u8fd9\u6bb5\u65f6\u95f4\u7684\u95e8\u5173\u4e0a\uff0c\u4e0d\u4ec5\u8981\u7ed9\u524d\u4e00\u4e2a\u8003\u5bdf\u961f\u94a5\u5319\uff0c\u540e\u4e00\u4e2a\u8003\u5bdf\u961f\u4e5f\u9700\u8981\u94a5\u5319\uff08\u56e0\u4e3a\u56de\u6765\u7684\u65f6\u5019\u95e8\u662f\u5173\u7684\uff09\u3002\u8fd9\u5c31\u662f\u672c\u9898\u7684\u96be\u70b9\u6240\u5728\u4e86\u3002\u6211\u4eec\u628a\u4e24\u4e2a\u8003\u5bdf\u961f\u5f53\u505a\u4e24\u4e2a\u8282\u70b9\uff0c\u5728\u5b83\u4eec\u4e4b\u95f4\u8fde\u63a5\u4e00\u6761\u6743\u503c\u4e3a\u7b54\u6848\u8d21\u732e\uff08\u4f9d\u65e7\u662f\u8fd9\u6bb5\u65f6\u95f4\u7684\u957f\u5ea6\uff08\u5de6\u95ed\u53f3\u5f00\uff09\uff09\u7684\u8fb9\uff0c\u5982\u679c\u6211\u4eec\u540c\u65f6\u9009\u62e9\u4e86\u8fd9\u4e24\u4e2a\u70b9\uff0c\u7b54\u6848\u5c31\u4f1a\u52a0\u4e0a\u8fd9\u6761\u8fb9\u7684\u8fb9\u6743\u3002\u53e6\u5916\uff0c\u7531\u4e8e\u9898\u76ee\u7684\u6027\u8d28\uff0c\u8fde\u63a5\u540e\u7684\u56fe\u53ea\u4f1a\u662f\u4e00\u6761\u6216\u591a\u6761\u94fe\u3002\n\n------------\n\n\u5efa\u6a21\u8fc7\u540e\uff0c\u6211\u4eec\u4f1a\u5f97\u5230\u4e00\u4e2a\u7531\u8bb8\u591a\u6761\u94fe\u548c\u5b64\u7acb\u70b9\u6784\u6210\u7684\u56fe\uff0c\u8fd9\u65f6\u5019\u53ea\u9700\u8981\u6c42\u51fa\u9009\u70b9\u540e\u6700\u5927\u7684\u7b54\u6848\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u80fd\u591f\u7528O(n^2)\u7684\u52a8\u6001\u89c4\u5212\u641e\u5b9a\uff0c\u5177\u4f53\u89c1\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=2000+10,INF=21e8;\nstruct Edge{\n    int v,w,nxt;\n}e[N*4];\nint front[N],en,du[N];\nvoid add(int u,int v,int w){\n    e[++en].nxt=front[u];\n    front[u]=en;\n    e[en].v=v;\n    e[en].w=w;\n    du[u]++;    //\u8bb0\u5f55\u51fa\u5ea6 \n}\nstruct Point{   //\u50a8\u5b58\u6bcf\u4e2a\u65f6\u523b\u7684\u4fe1\u606f \n    int sit,    //\u65f6\u523b\u7684\u4f4d\u7f6e \n        bel,    //\u5c5e\u4e8e\u7684\u8003\u5bdf\u961f \n        fel;    //\u4e3a0\u65f6\u8868\u793a\u8fd9\u4e2a\u65f6\u523b\u8003\u5bdf\u961f\u51fa\u53d1\uff0c\u4e3a1\u65f6\u8868\u793a\u8003\u5bdf\u961f\u56de\u6765 \n    bool operator < (const Point &pl) {     //\u6309\u7167\u65f6\u523b\u7684\u4f4d\u7f6e\u4ece\u5c0f\u5230\u5927\u6392\u5e8f \n        return sit<pl.sit;\n    }\n}p[N*2];\nint n,\n    val[N], \n    k,      \n    ans,    \n    dpans,  //dp\u7684\u6700\u7ec8\u503c \n    sitl,   //\u6700\u65e9\u65f6\u523b \n    sitr;   //\u6700\u665a\u65f6\u523b \nint dp[N][N][2];    //dp[i][j][1/0]\u8868\u793a\u5728\u524di\u8003\u5bdf\u961f\u4e2d\u5206\u914dj\u628a\u94a5\u5319\uff0c\u6700\u957f\u7684\u5173\u95e8\u65f6\u95f4 (1\u8868\u793a\u7ed9\u8be5\u8003\u5bdf\u961f\u5206\u914d\u94a5\u5319\uff0c0\u5219\u4e0d\u5206\u914d)\nint seq[N],         //\u52a8\u6001\u89c4\u5212\u7684\u987a\u5e8f \n    chs[N],         //chs[i]\u8868\u793a\u5982\u679c\u7ed9i\u8003\u5bdf\u961f\u94a5\u5319\u5e76\u4e14\u9009\u62e9\u4e86 i\u8003\u5bdf\u961f\u5728\u5e8f\u5217\u4e2d\u7684\u524d\u4e00\u4e2a\u8003\u5bdf\u961f \u7684\u989d\u5916\u8d21\u732e \n    num;\nbool vis[N];\nvoid dfs(int u,int w){\n    if(vis[u])return;\n    chs[u]=w;\n    seq[++num]=u;\n    vis[u]=1;\n    for(int i=front[u];i;i=e[i].nxt)\n        dfs(e[i].v,e[i].w);\n}\nint main(){\n    scanf(\"%d%d\",&n,&k);\n    sitl=INF;\n    for(int i=1;i<=n;i++){\n        scanf(\"%d\",&p[i].sit);\n        p[i].bel=i;\n        p[i].fel=0;\n        sitl=min(sitl,p[i].sit);\n        scanf(\"%d\",&p[i+n].sit);\n        p[i+n].bel=i;\n        p[i+n].fel=1;\n        sitr=max(sitr,p[i+n].sit);\n    }\n    sort(p+1,p+1+2*n);\n    for(int i=1;i<2*n;i++){             //\u4f9d\u6b21\u8003\u8651\u6bcf\u4e24\u70b9\u4e4b\u95f4\u7684\u4f4d\u7f6e \n        int l=p[i].sit,r=p[i+1].sit,v=r-l;\n        int lf=p[i].fel,rf=p[i+1].fel;\n        if((!lf)&&rf){                  //\u524d\u4e00\u4e2a\u65f6\u523b\u8003\u5bdf\u961f\u51fa\u53d1\uff0c\u540e\u4e00\u4e2a\u65f6\u523b\u8003\u5bdf\u961f\u56de\u6765 \n            if(p[i].bel!=p[i+1].bel)\n                add(p[i].bel,p[i+1].bel,v), \n                add(p[i+1].bel,p[i].bel,v);\n            else val[p[i].bel]+=v;\n        }\n        else if((!lf)&&(!rf))   val[p[i].bel]+=v;       //\u524d\u4e00\u4e2a\u65f6\u523b\u548c\u540e\u4e00\u4e2a\u65f6\u523b \u90fd\u6709\u8003\u5bdf\u961f\u8981\u51fa\u53d1 \n        else if(lf&(!rf))       ans+=v;                 //\u524d\u4e00\u4e2a\u65f6\u523b\u6709\u8003\u5bdf\u961f\u56de\u6765 \u540e\u4e00\u4e2a\u65f6\u523b\u6709\u8003\u5bdf\u961f\u51fa\u53d1 \n        else if(lf&&rf)         val[p[i+1].bel]+=v;     //\u524d\u4e00\u4e2a\u65f6\u523b\u548c\u540e\u4e00\u4e2a\u65f6\u523b \u90fd\u6709\u8003\u5bdf\u961f\u56de\u6765 \n    }\n    for(int u=1;u<=n;u++)\n        if(du[u]<2)dfs(u,0);\n    for(int i=1;i<=n;i++)\n        for(int j=0;j<=min(i,k);j++){\n            dp[i][j][0]=max(dp[i-1][j][0],dp[i-1][j][1]);\n            if(j>0)dp[i][j][1]=max(dp[i-1][j-1][0],dp[i-1][j-1][1]+chs[seq[i]])+val[seq[i]];\n            else dp[i][j][1]=-INF;      //\u6ce8\u610f\uff1a\u5982\u679c j==0 \uff0c\u90a3\u4e48 \u8be5\u8003\u5bdf\u961f\u88ab\u5206\u914d\u94a5\u5319\u7684\u72b6\u6001\u662f\u4e0d\u5b58\u5728\u7684 \n        }\n    printf(\"%d\\n\",sitr-sitl-ans-max(dp[n][k][0],dp[n][k][1]));  //\u603b\u65f6\u95f4-\u6700\u957f\u7684\u95e8\u5173\u95ed\u65f6\u95f4=\u6700\u77ed\u7684\u95e8\u5f00\u542f\u65f6\u95f4 \n    return 0;\n}\n```\n\n[\u63d0\u4ea4\u8bb0\u5f55](https://www.luogu.org/record/25780139)",
        "postTime": 1572103225,
        "uid": 116241,
        "name": "Playtime00",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4890 \u3010Never\u00b7island\u3011"
    },
    {
        "content": "\u6458\u81ea\u6211\u7684\u535a\u5ba2\u6587\u7ae0\uff1a[\u94a5\u5319\u9898\u4e13\u9879\u8bad\u7ec3](https://www.luogu.com.cn/blog/666666new/keys-tm)\u3002\n\n\u9898\u610f\uff1a\n\n\u6709 $n$ \u4e2a\u5e08\u5085\u4ece $0$ \u5230 $M$ \u65f6\u523b\u4e0a\u73ed\uff0c\u7b2c $i$ \u4e2a\u5e08\u5085\u4f1a\u5728 $S_i$ \u65f6\u523b\u53bb\u996e\u6c34\u673a\u6d17\u624b\u518d\u5728 $T_i$ \u65f6\u523b\u56de\u6765\u3002\u6ca1\u6487\u94a5\u5319\u7684\u5e08\u5085\u51fa\u95e8\u4ee5\u540e\u4e0d\u80fd\u5173\u95e8\uff0c\u6487\u8d77\u94a5\u5319\u7684\u5e08\u5085\u53ef\u4ee5\u968f\u4fbf\u8fdb\u51fa\uff0c\u6ca1\u6487\u94a5\u5319\u7684\u5e08\u5085\u8981\u95e8\u5f00\u8d77\u624d\u80fd\u56de\u53bb\uff0c\u6487\u8d77\u94a5\u5319\u7684\u5e08\u5085\u56de\u53bb\u7684\u65f6\u5019\u53ef\u4ee5\u628a\u95e8\u9501\u8d77\u3002\u603b\u5171 $K$ \u4e32\u94a5\u5319\u5206\u7ed9\u8fd9\u4e9b\u5e08\u5085\uff0c\u6c42\u5206\u914d\u65b9\u6848\u4f7f\u5f97\u5173\u95e8\u65f6\u95f4\u6700\u5c0f\u3002\n\n\u505a\u6cd5\uff1a\n\n\u8003\u8651\u6bcf\u4e2a\u65f6\u95f4\u6bb5\u7684\u8d21\u732e\u3002\u5982\u679c\u524d\u4e00\u4e2a\u65f6\u95f4\u70b9\u662f\u67d0\u4e2a\u5e08\u5085\u51fa\u53bb\u6d17\u624b\uff0c\u540e\u9762\u4e00\u4e2a\u65f6\u95f4\u70b9\u4e5f\u662f\u67d0\u4e2a\u5e08\u5085\u51fa\u53bb\u6d17\u624b\uff0c\u90a3\u4e48\u8fd9\u6bb5\u65f6\u95f4\u53ef\u4ee5\u5173\u8d77\u5f53\u4e14\u4ec5\u5f53\u524d\u9762\u4e00\u4e2a\u5e08\u5085\u6487\u8d77\u94a5\u5319\u3002\n\n\u5982\u679c\u524d\u9762\u4e00\u4e2a\u65f6\u95f4\u70b9\u662f\u67d0\u4e2a\u5e08\u5085\u56de\u6765\uff0c\u540e\u9762\u4e00\u4e2a\u65f6\u95f4\u70b9\u4e5f\u662f\u67d0\u4e2a\u5e08\u5085\u56de\u6765\uff0c\u90a3\u4e48\u8fd9\u6bb5\u65f6\u95f4\u53ef\u4ee5\u5173\u8d77\u5f53\u4e14\u4ec5\u5f53\u540e\u9762\u7684\u5e08\u5085\u6487\u8d77\u94a5\u5319\u3002\n\n\u5982\u679c\u524d\u9762\u4e00\u4e2a\u7684\u65f6\u95f4\u70b9\u662f\u67d0\u4e2a\u5e08\u5085\u56de\u6765\uff0c\u540e\u9762\u4e00\u4e2a\u65f6\u95f4\u70b9\u662f\u67d0\u4e2a\u5e08\u5085\u51fa\u53bb\u6d17\u624b\uff0c\u90a3\u4e48\u4e0d\u7ba1\u6709\u6ca1\u6709\u5e08\u5085\u53bb\u6d17\u624b\u8fd9\u6bb5\u65f6\u95f4\u4e00\u5b9a\u80fd\u5173\u8d77\u3002\n\n\u5982\u679c\u524d\u9762\u4e00\u4e2a\u65f6\u95f4\u70b9\u662f\u67d0\u4e2a\u5e08\u5085\u51fa\u53bb\u6d17\u624b\uff0c\u540e\u9762\u4e00\u4e2a\u65f6\u95f4\u70b9\u662f\u67d0\u4e2a\u5e08\u5085\u56de\u6765\uff0c\u6b64\u65f6\u5982\u679c\u5b83\u4eec\u662f\u540c\u4e00\u4e2a\u5e08\u5085\uff0c\u90a3\u4e48\u53ea\u8981\u8fd9\u4e2a\u5e08\u5085\u6487\u8d77\u94a5\u5319\u8fd9\u6bb5\u65f6\u95f4\u5c31\u53ef\u4ee5\u5173\u8d77\uff0c\u4e0d\u7136\u5fc5\u987b\u4e24\u4e2a\u5e08\u5085\u90fd\u6487\u8d77\u94a5\u5319\u624d\u80fd\u5173\u8d77\u3002\n\n\u6211\u4eec\u628a\u5fc5\u987b\u4e24\u4e2a\u5e08\u5085\u540c\u65f6\u6487\u8d77\u94a5\u5319\u7684\u65f6\u95f4\u6bb5\u55f2\u51fa\u6765\u8fde\u6761\u8fb9\uff0c\u53ef\u4ee5\u53d1\u73b0\u8fd9\u5f20\u56fe\u5c31\u662f\u4e00\u5927\u4e32\u4e00\u5927\u4e32\u7684\u94fe\uff0c\u8ddf\u6487\u94a5\u5319\u4e00\u6837\u6ef4\u628a\u4e32\u4e32\u4e9b\u6487\u5230\u4e00\u8d77\u5728\u5e8f\u5217\u4e0a\u505a\u4e2a DP \u7b97\u4e00\u4e0b\u8d21\u732e\u5c31\u53ef\u4ee5\u4e86\u5f97\u54a9\u3002\u5177\u4f53\u6765\u8bf4\u5c31\u662f $dp_{i,j,0/1}$ \u8868\u793a\u94fe\u4e0a\u524d $i$ \u4e2a\u5e08\u5085\u6487\u8d77 $j$ \u4e32\u94a5\u5319\uff0c\u5e08\u5085 $i$ \u6487\u6ca1\u6487\u94a5\u5319\uff0c\u8f6c\u79fb\u5c31\u679a\u4e3e\u4e00\u4e0b\u524d\u4e00\u4e2a\u5e08\u5085\u6709\u6ca1\u6709\u6487\u94a5\u5319\u8f6c\u79fb\u8fc7\u6765\uff0c\u6487\u8d77\u94a5\u5319\u7684\u8bdd\u5c31\u52a0\u4e0a\u8fd9\u4e2a\u5e08\u5085\u6487\u94a5\u5319\u7684\u8d21\u732e\uff0c\u8981\u662f\u4e24\u4e2a\u5e08\u5085\u90fd\u6487\u8d77\u94a5\u5319\u5c31\u52a0\u4e0a\u8fd9\u90e8\u5206\u7684\u8d21\u732e\u5c31\u53ef\u4ee5\u4e86\u5f97\u54a9\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,k,tot,b[2008],c[2008],dp[2][2008][2],nxt[2008];\nstruct node\n {\n  int x,id,typ;\n bool operator<(node q){return x<q.x;\n}\n}a[6666];\nvoid cmax(int&x,int y){if(y>x)x=y;\n}\nint main()\n{scanf(\"%d%d%d\",&n,&m,&k);\nfor(int i=1,x;i<=n;++i)\n  {\n scanf(\"%d\",&x);a[++tot]=(node){x,i,0};\nscanf(\"%d\",&x),a[++tot]=node{x,i,1};\n }\n sort(a+1,a+tot+1);\nint yu=m+a[1].x-a[tot].x;\n  for(int i=1;i<tot;++i)\n   {\n int len=a[i+1].x-a[i].x;\n if(a[i].typ&&!a[i+1].typ)\n yu+=len;\n else if(a[i].typ&&a[i+1].typ)c[a[i+1].id]+=len;\nelse if(!a[i].typ&&!a[i+1].typ)\nc[a[i].id]+=len;\n  else if(a[i].id==a[i+1].id)\nc[a[i].id]+=len;\nelse nxt[a[i+1].id]=a[i].id,b[a[i].id]+=len;\n  }\nfor(int i=1,las=0;i<=n;++i)\n if(!b[i]){\n nxt[las]=i;\n  while(nxt[las])\nlas=nxt[las];\n}\ndp[0][0][0]=yu;\n int w=0;\n  for(int i=nxt[0];i;i=nxt[i]){\nw^=1;\nfor(int j=0;j<=k;++j)for(int t:{0,1})\n  {if(!dp[!w][j][t])\ncontinue;\ncmax(dp[w][j][0],dp[!w][j][t]);\n   cmax(dp[w][j+1][1],dp[!w][j][t]+t*b[i]+c[i]);\n dp[!w][j][t]=0;\n  }\n}\ncout<<max(dp[w][k][0],dp[w][k][1]);\n return 0;\n  }\n```",
        "postTime": 1679963263,
        "uid": 337548,
        "name": "myyes",
        "ccfLevel": 0,
        "title": "LOJ2999 JOISC2015 \u94a5\u5319 && P4890 Never\u00b7island \u672a\u6765\u5c9b\u7684\u5f00\u9501\u95ee\u9898"
    }
]