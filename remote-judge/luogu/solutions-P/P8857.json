[
    {
        "content": "## \u9898\u610f\u7b80\u8ff0\n- \u539f\u9898\u94fe\u63a5\uff1a[P8857](https://www.luogu.com.cn/problem/P8857)  \n\n- \u7ed9\u5b9a\u4e00\u4e2a $n$ \u4e2a\u70b9\u7684 DAG, \u6c42\u6700\u5c11\u7528\u591a\u5c11\u6761\u4ece\u70b9 $1$ \u5230\u70b9 $n$ \u7684\u8def\u5f84\u80fd\u8986\u76d6\u56fe\u4e0a\u7684**\u6240\u6709\u8fb9**\uff08\u4e0d\u540c\u8def\u5f84\u53ef\u4ee5\u7ecf\u8fc7\u76f8\u540c\u7684\u8fb9\uff09  \n\n## \u9898\u76ee\u5206\u6790\n\u89c2\u5bdf\u9898\u76ee\u6761\u4ef6\uff0c\u7528\u6700\u5c0f\u8def\u5f84\u8986\u76d6\u505a\u597d\u50cf\u6709\u70b9\u56f0\u96be\uff0c\u56e0\u4e3a\u9898\u76ee\u8981\u6c42\u7684\u5e76\u4e0d\u662f\u8986\u76d6\u70b9\u5e76\u4e14\u8def\u5f84\u53ef\u91cd\u3002\u4f46\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u628a\u6bcf\u4e2a\u5de5\u4eba\u7684\u8def\u5f84\u5f53\u6210\u4e00\u6761\u6d41\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u6c42\u51fa\u6bcf\u6761\u5f27\u4e0a\u90fd\u6709 $\\geq1$ \u7684\u6d41\u91cf\u65f6\u7684\u6700\u5c0f\u6d41\uff0c\u5373\u4e0a\u754c\u4e3a\u65e0\u7a77\u5927\uff0c\u4e0b\u754c\u4e3a $1$ \u7684\u6709\u6e90\u6c47\u4e0a\u4e0b\u754c\u6700\u5c0f\u6d41\u3002  \n\n\u6211\u4eec\u4e0d\u59a8\u6839\u636e\u5b83\u7684\u601d\u60f3\uff08[\u6a21\u677f](https://www.luogu.com.cn/problem/solution/P5192)\uff09\uff0c\u5148\u627e\u51fa\u4e00\u4e2a\u53ef\u884c\u6d41 $f_0$, \u518d\u5c1d\u8bd5\u628a\u5b83\u8f6c\u5316\u4e3a\u6700\u5c0f\u6d41\u3002\u56e0\u4e3a $f_{\\min}(s\u2192t)=f_0+\\min(f^{'}(s\u2192t))$, \u800c\u53c8\u56e0\u4e3a $\\min(f^{'}(s\u2192t))=-\\max(f^{'}(t\u2192s))$, \u4e8e\u662f\u53ea\u9700\u518d\u6c42\u51fa $G^{'}$\u4e2d\u7531 $T$ \u5230 $S$\uff08\u53cd\u5411\uff09\u7684\u6700\u5927\u6d41\u5373\u53ef\u3002    \n\n\u7279\u522b\u5730\uff0c\u5728\u8fd9\u9053\u9898\u91cc\uff0c\u7531\u4e8e\u53ea\u6709\u4e0b\u754c\u800c\u6ca1\u6709\u4e0a\u754c\uff0c\u6211\u4e3a\u4e86\u7b80\u5355\u5c31\u7528\u66b4\u529b\u679a\u4e3e\u6784\u9020\u6700\u521d\u7684\u53ef\u884c\u6d41\u4e86\uff0c\u4ee3\u7801\u5f88\u7b80\u5355\u3002\n\n## \u4ee3\u7801\n```cpp\n#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <cstdio>\n#include <queue>\nusing namespace std;\nint n,k,u,s,t,head[5005],cnt,fl1,dep[5005],gap[5005],nowb[5005],maxflow,ans,to[5005]; \nbool zt[5005];\nqueue <int> Q;\nstruct edge\n{\n\tint son;\n\tint next;\n\tint val;\n}edge[1000005];\ninline int read()\n{\n\tint now=0; char c=getchar();\n\twhile(c<'0' || c>'9') { c=getchar();}\n\twhile(c>='0' && c<='9') { now=(now<<1)+(now<<3)+(c&15); c=getchar(); }\n\treturn now;\n}\nvoid adde(int x,int y,int z)\n{\n\tcnt++;\n\tedge[cnt].son=y;\n\tedge[cnt].next=head[x];\n\tedge[cnt].val=z;\n\thead[x]=cnt;\n}\nint dfs1(int now)//\u5148\u66b4\u529b\u51fa\u6700\u521d\u7684\u53ef\u884c\u6d41 \n{\n\tif(now==t)\n\t{\n\t\treturn 1;\n\t}\n\tint nowuse=0;\n\tif(!zt[now])\n\t{\n\t\tzt[now]=1;\n\t\tfor(int i=head[now];i>0;i=edge[i].next)\n\t\t{\n\t\t\tif(i%2==0)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tint nf=dfs1(edge[i].son);\n\t\t\tedge[((i-1)^1)+1].val+=nf;//\u5904\u7406\u53cd\u5411\u8fb9 \n\t\t\tnowuse+=nf;\n\t\t\tto[now]=i;\n\t\t}\n\t}\n\telse//\u8fd9\u4e2a\u70b9\u7684\u6240\u6709\u5b50\u8282\u70b9\u90fd\u904d\u5386\u8fc7\u4e86\uff0c\u4e0d\u9700\u8981\u518d\u904d\u5386\u4e86 \n\t{\n\t\tint nl=dfs1(edge[to[now]].son);\n\t\tedge[((to[now]-1)^1)+1].val+=nl;\n\t\tnowuse+=nl;\n\t}\n\treturn nowuse;\n}\nvoid bfs()//ISAP\u7684\u53cd\u5411BFS \n{\n\tmemset(dep,127,sizeof(dep));\n\tmemset(gap,0,sizeof(gap));\n\tdep[t]=0;\n\tgap[0]=1;//gap\u4f18\u5316 \n\tQ.push(t);\n\twhile(!Q.empty())\n\t{\n\t\tint nr=Q.front();\n\t\tQ.pop();\n\t\tfor(int i=head[nr];i>0;i=edge[i].next)\n\t\t{\n\t\t\tif(dep[edge[i].son]>dep[nr]+1)\n\t\t\t{\n\t\t\t\tdep[edge[i].son]=dep[nr]+1;\n\t\t\t\tgap[dep[edge[i].son]]++;\n\t\t\t\tQ.push(edge[i].son);\n\t\t\t}\n\t\t}\n\t}\n}\nint dfs(int now,int nowflow)//\u627e\u589e\u5e7f\u8def \n{\n\tif(now==t)\n\t{\n\t\treturn nowflow;\n\t}\n\tint nowuse=0;\n\tfor(int i=nowb[now];i>0;i=edge[i].next)//\u5f53\u524d\u5f27\u4f18\u5316 \n\t{\n\t\tnowb[now]=i;\n\t\tif(edge[i].val&&dep[edge[i].son]+1==dep[now])\n\t\t{\n\t\t\tint fl=dfs(edge[i].son,min(nowflow-nowuse,edge[i].val));\n\t\t\tedge[i].val-=fl;\n\t\t\tedge[((i-1)^1)+1].val+=fl;\n\t\t\tnowuse+=fl;\n\t\t\tif(nowuse==nowflow)\n\t\t\t{\n\t\t\t\treturn nowuse;\n\t\t\t}\n\t\t}\n\t}\n\tnowb[now]=head[now];\n\tgap[dep[now]]--;\n\tdep[now]++;\n\tgap[dep[now]]++;\n\tif(gap[dep[now]-1]==0)//gap\u4f18\u5316\uff0c\u51fa\u73b0\u65ad\u5c42\u76f4\u63a5\u8fd4\u56de \n\t{\n\t\tdep[s]=n+3;\n\t}\n\treturn nowuse;\n}\nvoid isap()//ISAP\u6700\u5927\u6d41 \n{\n\tmemcpy(nowb,head,sizeof(head));\n\tbfs();\n\twhile(dep[s]<=n+2)\n\t{\n\t\tmaxflow+=dfs(s,1000000000);\n\t}\n}\nint main()\n{\n\tn=read();\n\ts=1;\n\tt=n;\n\tfor(int i=1;i<=n-1;i++)\n\t{\n\t\tk=read();\n\t\tfor(int j=1;j<=k;j++)\n\t\t{\n\t\t\tu=read();\n\t\t\tadde(i,u,0);\n\t\t\tadde(u,i,0);\n\t\t}\n\t}\n\tfor(int i=2;i<=cnt;i+=2)\n\t{\n\t\tedge[i].val=-1;\n\t}\n\tfor(int i=1;i<=cnt;i+=2)//\u5bb9\u91cf\u4e0a\u754c\u90fd\u662fINF \n\t{\n\t\tedge[i].val=1000000;\n\t}\n\tfl1=dfs1(1); \n\ts=n;\n\tt=1;\n\tisap();\n\tans=fl1-maxflow; \n\tcout<<ans<<endl;\n}\n```\n\u611f\u89c9\u6709\u66f4\u597d\u7684\u505a\u6cd5\uff0c~~\u4f46\u6211\u4e0d\u4f1a~~\u3002",
        "postTime": 1668860348,
        "uid": 529697,
        "name": "PEKKA_l",
        "ccfLevel": 6,
        "title": "P8857\u9898\u89e3"
    }
]