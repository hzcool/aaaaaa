[
    {
        "content": "\u770b\u4e86\u534a\u5929\u5927\u5bb6\u7684\u9898\u89e3\uff0c\u597d\u50cf\u90fd\u662f\u89e3\u4e0d\u7b49\u5f0f\u5565\u7684\uff0c\u5927\u5bb6\u597d\u50cf\u90fd\u6ca1\u60f3\u8fc7\uff1a\n# \u8bf4\u5230\u5e95\uff0c\u8ba1\u7b97\u673a\u662f\u7528\u6765\u5e72\u561b\u7684\uff1f\n\u6240\u4ee5\u76f4\u63a5\u6765\u4e2a\u66b4\u529b\u679a\u4e3e\u7684\u7b97\u6cd5\uff1a   \n1\uff1a\u628a\u7528\u6237\u8f93\u5165\u7684\u4ef7\u683c\u548c\u9500\u91cf\u901a\u901a\u5b58\u8fdb\u6570\u7ec4\u91cc\u3002   \n2\uff1a\u5982\u679c\u53d1\u73b0\u6709\u7684\u4ef7\u683c\u548c\u9500\u91cf\u7528\u6237\u6ca1\u8f93\u5165\u5219\u6309\u7ebf\u6027\u7684\u89c4\u5219\u81ea\u5df1\u5199\u5165\u3002  \n3\uff1a\u5728\u7528\u6237\u8f93\u5165\u7684\u6700\u5927\u4ef7\u683c\u540e\u9762\u6309\u7528\u6237\u8f93\u5165\u7684\u9012\u51cf\u6570\u91cf\u628a\u6700\u540e\u6240\u6709\u9500\u91cf\u4e0d\u4e3a\u96f6\u7684\u4ef7\u683c\u8865\u5145\u5b8c\u6574\u3002   \n4\uff1a\u73b0\u5728\uff0c\u4f60\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u5b58\u6709\u6240\u6709\u9500\u91cf\u5927\u4e8e\u7b49\u4e8e\u96f6\u7684\u4ef7\u683c-\u9500\u91cf\u8868\u3002   \n5\uff1a\u4ece1/-1\u5f00\u59cb\u679a\u4e3e\u6240\u6709\u53ef\u80fd\u7684\u8865\u8d34\u6216\u7a0e\u6536\uff0c\u5e76\u770b\u770b\u5728\u6bcf\u79cd\u7a0e\u6536\u6216\u8865\u8d34\u4e0b\u603b\u5229\u6da6\u6700\u9ad8\u7684\u4ef7\u683c\u662f\u4e0d\u662f\u653f\u5e9c\u9884\u671f\u4ef7\uff0c\u5982\u679c\u662f\u5219\u6253\u5370\u3002\uff08\u56e0\u4e3a\u4ece\u6700\u5c0f\u7684\u5f00\u59cb\u627e\u7684\uff09      \n\n\u597d\u4e86\uff0c\u5e9f\u8bdd\u4e0d\u591a\u8bf4\uff0c\u4e0a\u4ee3\u7801\uff1a  \n\n    #include <iostream>\n    #include <cmath>\n    using namespace std;\n    int a[100010][3];//\u7528\u4e8e\u5b58\u653e\u4ef7\u683c\u548c\u9500\u91cf\u7684\u6570\u7ec4\n    int main()\n    {\n\t    int i=1,j=1,k,expect,down,max,temp,cha,xl,num,s,price,p;\n\t    cin>>expect;//\u8bfb\u5165\u9884\u671f\u4ef7\n\t    while(cin>>a[i][1]>>a[i][2]&&a[i][1]!=-1&&a[i] [2]!=-1)//\u5982\u679c\u8f93\u5165\u7684\u4e24\u4e2a\u6570\u4e0d\u662f-1\uff0c-1\n\t    {\n\t\t    i++;//\u5faa\u73af\u53d8\u91cfi++\n\t\t    if(i>2&&a[i-1][1]-a[i-2][1]>1)//\u5982\u679c\u4e24\u4e2a\u4ef7\u683c\u4e4b\u95f4\u5dee\u5927\u4e8e\u4e00\n\t\t    {\n\t\t\t    i--;//\u56de\u5230\u4e0a\u4e00\u4e2a\u8bfb\u5165\u7684\u9500\u91cf\n\t\t\t    cha=(a[i-1][2]-a[i][2])/(a[i][1]-a[i-1][1]);//\u6c42\u51fa\u6bcf\u6b21\u9500\u91cf\u51cf\u5c11\u591a\u5c11\uff1a\u9500\u91cf\u5dee/\u4ef7\u683c\u5dee\n\t\t\t    temp=a[i][1];//\u8bb0\u5f55\u4e0b\u4ef7\u683c\n\t\t\t    for(j=a[i-1][1]+1;j<=temp;j++)//\u6309\u4ef7\u683c\u9012\u589e\u987a\u5e8f\u4f9d\u6b21\u5199\u5165\n\t\t\t    {\n\t\t\t    \ta[i][1]=j;//\u5199\u5165\u4ef7\u683c\n\t\t\t    \ta[i][2]=a[i-1][2]-cha;//\u6309\u9500\u91cf\u5dee\u5199\u5165\u9500\u91cf\n\t\t\t    \ti++;\n\t\t\t    }\n\t\t    }\n\t    }\n\t    cin>>down;//\u8f93\u5165\u8d85\u8fc7\u6700\u5927\u4ef7\u683c\u4e4b\u540e\u6bcf\u6b21\u9500\u91cf\u964d\u4f4e\u591a\u5c11\n\t    i--;//\u56e0\u4e3a\u4e0a\u9762\u7684while\u5faa\u73af\u6700\u540e\u6709i++\u6240\u4ee5\u7528i--\u62b5\u6d88\u2026\u2026\n\t    xl=a[i][2];//\u8bb0\u5f55\u76ee\u524d\u7684\u9500\u91cf\n\t    while(xl>0)\n\t    {\n\t\t    if(xl-down<0)break;//\u5982\u9500\u91cf\u5c0f\u4e8e\u96f6\u5219\u9000\u51fa\n\t\t    else//\u5426\u5219\n\t\t    {\n\t\t    \txl-=down;//\u9500\u91cf\u6bcf\u6b21\u51cf\u6389down\n\t\t    \ti++;//\u5faa\u73af\u53d8\u91cf++\n\t\t    \ta[i][1]=a[i-1][1]+1;//\u6bcf\u6b21\u4ef7\u683c+1\n\t\t    \ta[i][2]=xl;//\u9500\u91cf\u5c31\u662fxl\n\t\t    }\n\t    }\n\t    for(j=1;j<=10000;j++)//\u8be5\u904d\u5386\u4e86\uff0c\u56e0\u4e3a\u6536\u7a0e\u76f8\u5f53\u4e8e\u8865\u8d34*-1\u6240\u4ee5\u8bb0\u5f55\u4e00\u4e0b\u7b26\u53f7\u5373\u53ef\n\t    {\n\t\t    max=-99999;//\u7528\u4e8e\u5b58\u50a8\u6700\u5927\u7684\u603b\u5229\u6da6\n\t\t    for(k=1;k<=i;k++)//\u6bcf\u6b21\u626b\u4e00\u904d\u6bcf\u4e00\u79cd\u4ef7\u683c\n\t\t    {\n\t\t\t    num=(a[k][1]-a[1][1]+j)*a[k][2];//\u5957\u516c\u5f0f\u7b97\u51fa\u603b\u5229\u6da6\n\t\t\t    if(num>=max)//\u5982\u679c\u603b\u5229\u6da6\u6bd4\u76ee\u524d\u6700\u5927\u7684\u5927\n\t\t\t    {\n\t\t\t        max=num;//\u66f4\u65b0max\n\t\t\t\t    price=a[k][1];//\u8bb0\u5f55\u4e0b\u4ef7\u683c\n\t\t\t\t    p=1;//\u8bb0\u5f55\u4e0b\u7b26\u53f7\n\t\t\t    }\n\t\t    }\n\t\t    if(price==expect){cout<<j*p;return 0;}//\u5982\u679c\u4ef7\u683c\u5c31\u662f\u653f\u5e9c\u9884\u671f\u4ef7\u5219\u6253\u5370\u51fa\u6765\uff0c\u56e0\u4e3a\u672c\u8eab\u5c31\u662f\u4ece\u5c0f\u5230\u5927\u904d\u5386\u6240\u4ee5\u4e0d\u7528\u6c42\u7edd\u5bf9\u503c\u6700\u5c0f\u7684\n\t\t    max=-99999;//\u540e\u9762\u662f\u6536\u7a0e\uff0c\u539f\u7406\u540c\u4e0a\n\t\t    for(k=1;k<=i;k++)\n\t\t    {\n\t\t\t    num=(a[k][1]-a[1][1]-j)*a[k][2];\n\t\t\t    if(num>=max)\n\t\t\t    {\n\t\t\t       max=num;\n\t\t\t\t    price=a[k][1];\t\n\t\t\t\t    p=-1;\n\t\t\t    }\n\t\t    }\n\t\t    if(price==expect){cout<<j*p;return 0;}\n\t    }\n        //\u524d\u9762\u6709\u4e86return 0;\u8fd9\u513f\u5c31\u4e0d\u7528\u4e86\u3002\n    }\n\n\u603b\u7684\u6765\u8bf4\uff0c\u6211\u89c9\u5f97\u6211\u7684\u9898\u89e3\u8fd8\u662f\u6700~~\u66b4\u529b~~\u901a\u4fd7\u6613\u61c2\u7684\u3002\u800c\u4e14\u5f88\u77ed\u5c0f\u7cbe\u608d\uff0c\u53ea\u670966\u884c\u3002\uff08\u4f60\u770b\u8fd9\u6570\u5b57\u591a\u597d\uff09   \n## \u8fd8\u6709\uff0c\u867d\u7136\u6211\u53ea\u662f\u4e2a\u840c\u65b0\uff0c\u4f46\u4f60\u770b\u6211\u8f9b\u8f9b\u82e6\u82e6\u5199\u4e86\u8fd9\u4e48\u591a\uff0c\u80fd\u4e0d\u80fd~~\u6627\u7740~~\u6478\u7740\u826f\u5fc3\u7ed9\u6211\u4e2a\u8d5e\u518d\u8d70\u5462\uff1f",
        "postTime": 1550404658,
        "uid": 174034,
        "name": "Mitch\u8c1c\u56e2",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1023 \u3010\u7a0e\u6536\u4e0e\u8865\u8d34\u95ee\u9898\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4ecehttp://www.blogbus.com/maoyu2010-logs/60816618.html\u770b\u5230\u7684\u9898\u89e3\uff0c\u4f46\u662f\u521a\u5f00\u59cb\u6709\u5f88\u591a\u5730\u65b9\u4e0d\u660e\u767d\uff0c\u5728\u8fd9\u91cc\u5e2e\u5927\u5bb6\u7406\u89e3\u4e00\u4e0b\u3002\n\n\u539f\u6587\uff1a\n\n\u9996\u5148\uff0c\u8fd9\u9898\u7684\u672c\u8d28\u662f\u4e00\u4e2a\u6570\u5b66\u9898\uff0c\u5176\u601d\u60f3\u4e3a\u8bbe\u4e00\u4e2a\u672a\u77e5\u6570x\uff0c\u7136\u540e\u5217\u4e3a\u65e0\u6570\u4e2a\u7684\u4e0d\u7b49\u5f0f\uff0c\u6240\u6709\u4e0d\u7b49\u5f0f\u90fd\u8981\u6c42\u4f7f\u653f\u5e9c\u9884\u7b97\u7684\u90a3\u4e2a\u4ef7\u683c\u7684\u603b\u5229\u6da6\u5927\u4e8e\u5176\u4ed6\u4ef7\u683c\u7684\u603b\u5229\u6da6\uff0c\u8fd9\u6837\u4fbf\u53ef\u4ee5\u89e3\u51fax\u7684\u8303\u56f4\uff0cmin<=x<=max\uff0c\u7136\u540e\u6839\u636emin\u548cmax\u7684\u6b63\u8d1f\u53f7\u6765\u51b3\u5b9a\u8f93\u51fa\u54ea\u4e2a\u3002\n\n\u4ee5\u6837\u4f8b\u4e3a\u4f8b\uff0c\u6211\u4eec\u8981\u6c42\n\n```cpp\n      (31-28+x)*110>=(28-28+x)*130\n      (31-28+x)*110>=(29-28+x)*125\n      (31-28+x)*110>=(30-28+x)*120\n      (31-28+x)*110>=(32-28+x)*95\n```\n.............\n.............\n\n\u8fd9\u6837\u4e00\u6b21\u7c7b\u63a8\uff0c\u77e5\u9053\u6700\u540e\u4e00\u4e2a\u3002\n\n\u4f46\u662f\u5728\u7f16\u5199\u7a0b\u5e8f\u65f6\uff0c\u8fd9\u9898\u6709\u65e0\u6570\u7684\u95ee\u9898\u3002\u4e00\u3001\u6b63\u5982\u4e0a\u4f8b\uff0c\u7531\u4e8e\u9898\u76ee\u4e2d\u8bf4\u7684\u662f\u7ebf\u6027\u6392\u5217\uff0c\u6240\u4ee5\u867d\u7136\u9898\u76ee\u4e2d\u6ca1\u6709\u7ed9\u51fa\u5355\u4ef7\u4e3a29\u7684\u60c5\u51b5\uff0c\u4f46\u662f\u6211\u4eec\u8981\u81ea\u5df1\u63a8\u5bfc\u51fa\u5355\u4ef7\u4e3a29\u7684\u60c5\u51b5\uff1b\u4e8c\u3001\u5c31\u662f\u8fd9\u9898\u5728\u5224\u65ad\u6700\u4f18\u65f6\u8981\u7528\u5927\u4e8e\u7b49\u4e8e\uff0c\u7531\u4e8e\u6211\u4eec\u4e0d\u80fd\u4fdd\u8bc1\u4ed6\u4eec\u4e00\u5b9a\u80fd\u6070\u597d\u9664\u51fa\u6765\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8981\u7528\u4e00\u4e2afloat\u53d8\u91cf\uff0c\u4f46\u540c\u65f6\u53c8\u5b58\u5728\u4e00\u4e2a\u6070\u597d\u9664\u51fa\u6765\u662f\u6574\u6570\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u5bf9\u8fd9\u4e24\u79cd\u60c5\u51b5\u8fdb\u884c\u5224\u65ad\uff0c\u5373\u770b\u4ed6\u4eec\u4e24\u4e2a\u7684\u5dee\u7684\u7edd\u5bf9\u503c\u662f\u5426\u6bd4\u4e00\u4e2a\u5f88\u5c0f\u7684\u6570\uff081e-6\uff09\u5927\uff0c\u5982\u679c\u6ca1\u6709\u8fd9\u4e2a\u5f88\u5c0f\u7684\u6570\u5927\uff0c\u90a3\u4e48\u8bf4\u660e\u539f\u6765\u9664\u51fa\u6765\u662f\u4e00\u4e2a\u6574\u6570\uff1b\u4e09\u3001\u8fd9\u662fC\u8bed\u8a00\u4e0d\u540c\u4e8ePascal\u7684\u5730\u65b9\uff0c\u5bf9\u4e8e\u5b9e\u6570\u53d6\u7edd\u5bf9\u503c\uff0c\u4e0d\u80fd\u7528abs\uff0c\u800c\u8981\u7528fabs\uff0c\u54ce\u5466\u3002\n\n\n\u8fd9\u91cc\u662f\u4ee3\u7801\uff0c\u4e0d\u660e\u767d\u7684\u53ef\u4ee5\u79c1\u4fe1\u6211\uff1a\n\n\n```cpp\n#include<stdio.h>\n#include<math.h>\n#include<stdlib.h>\n#define N 10050//\u8fd9\u4e2a\u9898\u76ee\u7684\u6240\u6709\u6570\u636e\u5c0f\u4e8e10000\uff08\u4f46\u662f\u4e0a\u4f20\u9898\u76ee\u7684\u4eba\u5c45\u7136\u6ca1\u8bf4\uff0c\u5dee\u8bc4\uff09\nint main()\n{\n    int pre,x,y,jian,m=1,tempp,tempn,i,k=0,kxy,min,max;\n    float umin = -1e9, umax = 1e9;\n    int price[N] = {0}, num[N] = {0};\n    scanf(\"%d\", &pre);\n    scanf(\"%d%d\",&x,&y);\n    price[m] = x; num[m] = y;\n    scanf(\"%d\"\"%d\",&x,&y);\n    while(x!=-1 && y!=-1){\n        if(x-price[m] == 1){\n            m++;\n            price[m] = x;\n            num[m] = y;\n        }\n        else{\n            kxy = -(num[m]-y)/(x-price[m]);//kxy\u4e3a\u4e2d\u95f4\u6bcf\u5dee1\u5143\u51cf\u5c11\u7684\u9500\u91cf\n            while(price[m] < x){\n                m++;\n                price[m] = price[m-1]+1;\n                num[m]=num[m-1]+kxy;\n            }\n```\n}//\u4e2d\u95f4\u6570\u636e\u6709\u7a7a\u7f3a\n        scanf(\"%d%d\",&x,&y);\n\n}//\u5faa\u73af\u8bfb\u5165\u6570\u636e\u5e76\u8865\u5145\u4e2d\u95f4\u7a7a\u7f3a\u7684\u6570\u636e\n\n\n```cpp\n    scanf(\"%d\",&jian);\n    tempn = num[m]; tempp = price[m];\n    while(tempn-jian > 0){\n        m++;\n        tempp++; price[m] = tempp;\n        tempn -= jian; num[m] = tempn;\n```\n}//\u4e0d\u65ad\u589e\u52a0\u552e\u4ef7\u76f4\u5230\u9500\u552e\u91cf\u4e3a0\n\n\n```cpp\n    for(i=1; i<=m; i++)\n        if(price[i] == pre){\n            k = i;\n            break;\n        }\n    if(k == 0){\n        printf(\"NO SOLUTION\");\n        exit(0);\n```\n}//\u5982\u679c\u5df2\u77e5\u4ef7\u683c\u4e2d\u6ca1\u6709\u653f\u5e9c\u9884\u4f30\u4ef7\u5219\u8f93\u51fa\"NO SOLUTION\"\u5e76\u9000\u51fa\u7a0b\u5e8f\n\n\n```cpp\n    for(i = 1; i < k; i++)\n        if ((float)((num[k]*(price[k]-price[1])-num[i]*(price[i]-price[1]))/(float)(num[i]-num[k]))<=umax)\n           umax=(float)(num[k]*(price[k]-price[1])-num[i]*(price[i]-price[1]))/(float)(num[i]-num[k]);\n    //(\u9884\u4f30\u4ef7\u7684\u603b\u5229\u6da6-\u67d0\u4ef7\u4f4d\u4e0a\u7684\u603b\u5229\u6da6)/(\u67d0\u4ef7\u4f4d\u9500\u91cf-\u9884\u4f30\u4ef7\u9500\u91cf)=\u5e94\u8be5\u6536\u7684RMB\n    //\u8fd9\u4e2a\u5730\u65b9\u4e0d\u7406\u89e3\u7684\u8bdd\u5efa\u8bae\u89e3\u4e00\u4e0b\u4e0a\u6587\u5217\u51fa\u7684\u4e0d\u7b49\u5f0f\n    for(i = k+1; i <= m; i++)\n        if ((float)((num[i]*(price[i]-price[1])-num[k]*(price[k]-price[1]))/(float)(num[k]-num[i]))>=umin)\n           umin=(float)(num[i]*(price[i]-price[1])-num[k]*(price[k]-price[1]))/(float)(num[k]-num[i]);\n    //(\u67d0\u4ef7\u4f4d\u4e0a\u7684\u603b\u5229\u6da6-\u9884\u4f30\u4ef7\u7684\u603b\u5229\u6da6)/(\u9884\u4f30\u4ef7\u9500\u91cf-\u67d0\u4ef7\u4f4d\u9500\u91cf)=\u5e94\u8be5\u8865\u8d34\u7684RMB\n    if(umin>umax) printf(\"NO SOLUTION\");//\u89e3\u96c6\u4e3a\u7a7a\n    else if(umin > 0){//\u9700\u8981\u8865\u8d34\u7684\u60c5\u51b5\n        if(fabs(umin-(int)(umin))>1e-6) min=(int)(umin)+1;//float\u5b58\u5728\u8bef\u5dee\n        else min=(int)(umin);\n        printf(\"%d\",min);\n    }\n    else if(umax < 0){//\u9700\u8981\u6536\u7a0e\u7684\u60c5\u51b5\n        if(fabs((int)(umax)-umax)>1e-6) max=(int)(umax)-1;//float\u5b58\u5728\u8bef\u5dee\n        else max = (int)(umax);\n        printf(\"%d\",max);\n    }\n    else printf(\"0\");//\u82e5\u4e0d\u9700\u8981\u8865\u8d34\u6216\u6536\u7a0e\n    return 0;\n}\n```",
        "postTime": 1471227122,
        "uid": 15164,
        "name": "liaopifan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1023 \u3010\u7a0e\u6536\u4e0e\u8865\u8d34\u95ee\u9898\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u82b1\u8d39\u4e86\u6211\u8bb8\u591a\u65f6\u95f4\uff0c\u6211\u4e0d\u4ec5\u7406\u89e3\u4e86\u5f88\u4e45\u7684\u9898\u610f\uff0c\u6ca1\u6709\u770b\u61c2\u9898\u89e3\uff0c\u8fd8\u5728\u7ec6\u8282\u4e0a\u51fa\u8fc7\u95ee\u9898\uff0c\u6240\u4ee5\u6211\u5199\u7bc7\u9898\u89e3\u6765\u603b\u7ed3\u603b\u7ed3\u3002\n\n- \u9996\u5148\u6211\u4eec\u8981\u77e5\u9053\uff0c\u76f8\u90bb\u4ef7\u4f4d\u95f4\u9500\u552e\u91cf\u662f\u7ebf\u6027\u53d8\u5316\u7684\uff0c\u7531\u6b64\u53ef\u4ee5\u63a8\u51fa\u6ca1\u6709\u76f4\u63a5\u7ed9\u51fa\u9500\u91cf\u7684\u4ef7\u4f4d\u3002\u6bd4\u5982\u6837\u4f8b\u4e2d\u7684`28 130 30 120`\uff0c\u7531\u6b64\u53ef\u4ee5\u8ba1\u7b97\u51fa29\u65f6\u7684\u9500\u91cf\u5e94\u8be5\u662f`125`\uff0c\u8d85\u8fc7\u6700\u9ad8\u4ef7\u4f4d\u540e\u7684\u9500\u91cf\uff0c\u4e00\u76f4\u63a8\u5230\u5c0f\u4e8e0\u4e3a\u6b62\u5373\u53ef\u3002**\u8981\u76f8\u4fe1\u6570\u636e\u4e00\u5b9a\u53ef\u4ee5\u6574\u9664\uff0c\u4e0d\u7136\u5c31\u6ca1\u6cd5\u505a\u4e86\u3002**\n\n- \u8981\u6c42\u7ed9\u5b9a\u4ef7\u4f4d\u7684\u5229\u6da6\u6700\u9ad8\uff0c\u663e\u7136\u5229\u6da6`ans=(\u5355\u4ef7+\u8865\u8d34)*\u9500\u91cf`\uff0c\u4e5f\u5c31\u662f\u8bf4\u5bf9\u4e8e\u4efb\u610f\u4ef7\u4f4d\uff0c\u5b83\u7684\u5229\u6da6\u90fd\u4e0d\u80fd\u5927\u4e8e\u7ed9\u5b9a\u4ef7\u4f4d\u7684\u5229\u6da6\u3002\u6bd4\u5982\u5728\u6837\u4f8b\u4e2d\uff0c\u5bf9\u4e8e\u4ef7\u4f4d29\uff0c\u6211\u4eec\u9700\u8981\u6ee1\u8db3`(x+3)*110>=(x+2)*125`\uff0c\u5bf9\u4e8e\u4ef7\u4f4d32\uff0c\u9700\u8981\u6ee1\u8db3`(x+3)*110>=(x+4)*95`\u3002\u6240\u6709\u8fd9\u6837\u4e0d\u7b49\u5f0f\u7684\u89e3\u96c6\u5c31\u662f\u7b54\u6848\uff0c\u53d6\u7edd\u5bf9\u503c\u6700\u5c0f\u7684\u5c31\u662f\u7b54\u6848\u3002\n\n- \u53d6\u6574\u95ee\u9898\uff1a\u89e3\u51fa\u4e0a\u9762\u4e24\u4e2a\u4e0d\u7b49\u5f0f\u5c31\u53ef\u4ee5\u53d1\u73b0\u6b63\u6570\u5e94\u8be5\u5411\u4e0a\u53d6\u6574\uff0c\u8d1f\u6570\u5e94\u8be5\u5411\u4e0b\u53d6\u6574\u3002\n\n### \u63a5\u4e0b\u6765\u8ba9\u6211\u4eec\u6a21\u62df\u6837\u4f8b\u4f53\u4f1a\u8fd9\u4e2a\u8fc7\u7a0b\uff1a\n\n1. \u8bfb\u5165\u671f\u671b\u4ef7\u683c\uff0c\u8bb0\u4e3a`r=31`\uff1b\n2. \u8bfb\u5165`28 130`\uff0c\u7528`d[i]`\u8868\u793a\u4ef7\u4f4di\u7684\u9500\u552e\u91cf\uff0c\u5219`d[28]=130`\uff1b\n3. \u8bfb\u5165`30 120`\uff0c\u5219`d[30]=120`\uff0c\u5e76\u5728`[28,30]`\u4e4b\u95f4\u9012\u63a8(\u6211\u5148\u8ba1\u7b97\u51fa\u516c\u5deed=5\uff0c\u7136\u540e\u518d\u8ba1\u7b9728\u81f330\u7684\u9500\u552e\u91cf)\uff0c\u5f97\u5230`d[29]=125`\uff0c\u4e4b\u540e\u4ee5\u6b64\u7c7b\u63a8\uff1b\n4. \u8bfb\u5165`15`\uff0c\u5219\u9012\u63a8\u8ba1\u7b97`d[32]=95,d[33]=80,...,d[38]=5`\uff0c\u8d1f\u6570\u4ee5\u540e\u5c31\u4e0d\u7b97\u4e86\u3002\n5. \u5bf9\u4e8e\u4ef7\u4f4d`d[28]=130`\uff0c\u89e3\u4e0d\u7b49\u5f0f`(x+3)*110>=(x+0)*130`\uff1b\n6. \u5bf9\u4e8e\u4ef7\u4f4d`d[29]=125`\uff0c\u89e3\u4e0d\u7b49\u5f0f`(x+3)*110>=(x+1)*125`\uff1b\n7. \u91cd\u590d\u5faa\u73af\u76f4\u5230\u7ed3\u675f\uff0c\u89e3\u51fa\u6240\u6709\u4e0d\u7b49\u5f0f\u5f97`4<=x<=9`;\n8. \u7b54\u6848\u5c31\u662f4\u3002\n\n\u5176\u4e2d\u89e3\u4e0d\u7b49\u5f0f\u6709\u4e00\u4e9b\u6280\u5de7\uff0c\u6211\u5c06\u5728\u4ee3\u7801\u91cc\u7ed9\u51fa\u89e3\u91ca\uff1a\n\n```cpp\n//\u65f6\u95f4\u7d27\u8feb\uff0c\u6ca1\u6709\u6574\u7406\u7801\u98ce\uff0c\u89c1\u8c05\n#include <bits/stdc++.h>\n#define MAX (100000+100)\nusing namespace std;\n\nint x,r,m,n,p,d[MAX];//r\u4ee3\u8868\u6210\u672c\u4ef7,x\u4ee3\u8868\u671f\u671b\u4ef7\u683c\uff0cd\u4ee3\u8868\u4ef7\u4f4d\ndouble Min=-1e9,Max=1e9;//\u7b54\u6848\u533a\u95f4\uff0c\u5f00\u59cb\u65e0\u7a77\u5927\n\ninline void read(int &a)\n{\n    register char c=getchar(); bool f=0; \n    for (a=0; c<'0'||'9'<c; c=getchar())\n        if (c=='-') f=1;//\u8981\u5199\u5feb\u8bfb\u8bb0\u5f97\u5224\u8d1f\u6570\uff0c\u6709-1\n    for (; '0'<=c && c<='9'; c=getchar())\n        a=(a<<3)+(a<<1)+(c^48);\n    if (f) a=-a;\n}\n\nint main()\n{\n    read(x); read(m); read(n); r=m;//\u8bb0\u5f55\u6210\u672c\u4ef7\n    while (m!=-1 && n!=-1)\n    {\n        d[m]=n; \n        for (int i=p+1; i<m; i++)\n            d[i]=d[i-1]+(n-d[p])/(m-p);//\u6b64\u5904\u9012\u63a8\u3001\u672a\u77e5\u4ef7\u683c\u9500\u91cf\uff0c(n-d[p])/(m-p)\u662f\u516c\u5dee\n        p=m;//\u8bb0\u5f55\u4e0a\u4e00\u6b21\u7684m\u3002\n        read(m); read(n);\n    }read(m);//\u6b64\u65f6m\u662f\u6700\u540e\u8f93\u5165\u7684\u6570\n    while (d[p]>m)\n        p++,d[p]=d[p-1]-m;//\u7ee7\u7eed\u9012\u63a8\uff0c\u9012\u63a8\u5b8c\u6210\u540ep\u5c31\u662fd>0\u7684\u8303\u56f4\n    for (register int i=r; i<=p; i++)//\u4ece\u6210\u672c\u5230p\u7684\u9012\u63a8\n    {\n        double ans=(d[x]*(x-r)-d[i]*(i-r))*1.0/(d[i]-d[x]);\n\t\t//\u6c42(x+d[i])*(i-r)<=\uff08x+d[x_])+(x_-r)\u7684\u901a\u89e3\uff0cx_\u662f\u671f\u671b\u4ef7\u683c\n        double g=d[i]-d[x];//\u5224\u65ad\u89e3\u7684\u7b26\u53f7,g\u4e3a\u6b63\u662f\u5c0f\u4e8e\uff0c\u53cd\u4e4b\u4e3a\u5927\u4e8e\u3002\n        if (g>0) Max=min(Max,ans);//\u53d6\u6240\u6709\"x<=...\"\u4e2d\u7684\u6700\u5c0f\u503c\n        else Min=max(Min,ans);//\u53d6\u6240\u6709\"x>=...\"\u4e2d\u7684\u6700\u5927\u503c\n    }\n\t//\u6b64\u65f6[Min,Max]\u5c31\u662f\u7b54\u6848\u7684\u8303\u56f4\uff0c\u53d6\u7edd\u5bf9\u503c\u6700\u5c0f\u7684\u8f93\u51fa\u3002\n    if (Min>0) printf(\"%d\",(int)ceil(Min));//Max>Min>0\uff0c\u7b54\u6848\u4e3aMin\u4e0a\u53d6\u6574\n    else if (Max<0) printf(\"%d\",(int)floor(Max));//Min<Max<0\uff0c\u7b54\u6848\u4e3aMax\u4e0b\u53d6\u6574\n    else puts(\"0\");//Min<0<Max\uff0c\u663e\u7136\u662f0\u7edd\u5bf9\u503c\u6700\u5c0f\n\t//\u6b64\u5904\u5e94\u6709Min>Max\uff0c\u8f93\u51fa\"NO SOLUTION\"\u7684\u60c5\u51b5\uff0c\u4e0d\u8fc7\u5176\u5b9e\u5e76\u6ca1\u6709\u8fd9\u4e2a\u70b9\uff0c\u6240\u4ee5\u5c31\u7701\u7565\u4e86\u3002\n    return 0;\n}\n```\n\n\n\n\n\n\n\n\n\n\n\n",
        "postTime": 1545828913,
        "uid": 73489,
        "name": "NyaRu_Official",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1023 \u3010\u7a0e\u6536\u4e0e\u8865\u8d34\u95ee\u9898\u3011"
    },
    {
        "content": "\u987a\u624b\u5ba3\u4f20\u535a\u5ba2<http://redbag.pw/>\n\n\u4e5f\u8bb8\u6211\u7684\u5927\u6982\u662f\u6700\u66b4\u529b\u7684\u65b9\u6cd5\uff0c\u7136\u800c0ms\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\n\n\u770b\u61c2\u9898\u4e4b\u540e\uff0c\u6839\u636e\u6837\u4f8b\uff0c\u8fd9\u4e2a\u4e0d\u7b49\u5f0f\u5927\u5bb6\u5e94\u8be5\u80fd\u5217\u51fa\u6765\n\n```cpp\n(31-28+x)*110>=(28-28+x)*130 \n(31-28+x)*110>=(29-28+x)*125 \n(31-28+x)*110>=(30-28+x)*120 \n(31-28+x)*110>=(32-28+x)*95\n```\n\u6211\u4eec\u5c31\u8bfb\u5165\u4e4b\u540e\uff0c\u628a\u6bcf\u4e00\u4e2a\u4ef7\u683c\u6240\u5bf9\u5e94\u7684\u4e0d\u7b49\u5f0f\u5168\u90fd\u5217\u51fa\u6765\uff0c\n\n\u7136\u540e\u89e3\u51fa\u6765\u5c31\u597d\uff08\u89e3\u7684\u8fc7\u7a0b\u81ea\u5df1\u5728\u8349\u7a3f\u7eb8\u5199\uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u5217\u51fa\u6765\u4e86\uff09\n\n\u53bb\u6389\u8bfb\u5165\u4f18\u5316\u548c\u8f93\u51fa\u4f18\u5316\u5c31\u6ca1\u4ec0\u4e48\u4e86\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ninline int read()\n{\n    char s;\n    int k=0,base=1;\n    while((s=getchar())!='-'&&s!=EOF&&!(s>='0'&&s<='9'));\n    if(s==EOF)exit(0);\n    if(s=='-')base=-1,s=getchar();\n    while(s>='0'&&s<='9')\n    {\n        k=k*10+(s-'0');\n        s=getchar();\n    }\n    return k*base;\n}\nvoid write(int x)\n{\n    if(x<0)\n    {\n        putchar('-');\n        write(-x);\n    }\n    else\n    {\n        if(x/10)write(x/10);\n        putchar(x%10+'0');\n    }\n}\nint a[12000],b[12000];\nint lx,ly,rx,ry,p,n,py;\nint X;\ndouble Min,Max;\nint main()\n{\n    p=read();\n    n=1;\n    a[1]=read();b[1]=read();\n    while (true)//\u8bfb\u5165\n    {\n        rx=read();ry=read();\n        if (rx==-1&&ry==-1) break;\n        lx=a[n];ly=b[n];\n        for (int i=lx+1;i<=rx;i++)//\u5168\u90e8\u62c6\u5f00\n        {\n            n++;\n            a[n]=a[n-1]+1;\n            b[n]=b[n-1]+(ry-ly)/(rx-lx);\n        }\n    }\n    X=read();\n    if (p>=a[n])//\u5982\u679cp\u6bd4\u6700\u5927\u7684\u8981\u5927\uff0c\u5c31\u8981\u5f80\u540e\u52a0\n    {\n        lx=a[n];ly=b[n];\n        for (int i=lx+1;i<=p+1;i++)\n        {\n            n++;\n            a[n]=a[n-1]+1;\n            b[n]=b[n-1]-X;\n        }\n    }\n    for (int i=1;i<=n;i++)\n    {\n        if (a[i]==p)\n        {\n            py=b[i];\n            break;\n        }\n    }\n    Min=-233333333.0;\n    Max=23333333.0;\n    for (int i=1;i<=n;i++)\n    {//\u89e3\u4e0d\u7b49\u5f0f\uff0c\u6700\u540e\u8303\u56f4\uff1aMin~Max\n        if (py-b[i]>0)\n        {\n            Min=max(Min,(double)((double)(a[i]-a[1])*b[i]-(double)(p-a[1])*py)/(double)(py-b[i]));\n        } else\n        {\n            Max=min(Max,(double)((double)(a[i]-a[1])*b[i]-(double)(p-a[1])*py)/(double)(py-b[i]));\n        }\n    }\n    if (Min>Max) printf(\"NO SOLUTION\\n\"); else//\u4e8b\u5b9e\u8bc1\u660e\u6ca1\u6709NO\u7684\u70b9\n    if (Min>0) printf(\"%.0lf\",ceil(Min)); else//\u4f7f\u7edd\u5bf9\u503c\u5c0f\u561b\uff0c\u5411\u4e0a\u53d6\u6574\uff08\u60f3\u4e00\u60f3\uff0c\u4e3a\u4ec0\u4e48\uff09\n    if (Max<0) printf(\"%.0lf\",floor(Max)); else\n        printf(\"0\");\n    return 0;\n}\n```",
        "postTime": 1504713696,
        "uid": 2674,
        "name": "\u300cQQ\u7ea2\u5305\u300d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1023 \u3010\u7a0e\u6536\u4e0e\u8865\u8d34\u95ee\u9898\u3011"
    },
    {
        "content": "# P1023 \u7a0e\u6536\u4e0e\u8865\u8d34\u95ee\u9898 \u9898\u89e3\n\n\n\n## 1. \u95ee\u9898\u7684\u6570\u5b66\u63cf\u8ff0\n\n\n\n\u95ee\u9898\u662f\u8981\u6c42\u51fa\u653f\u5e9c\u8981\u63d0\u4f9b\u600e\u6837\u7684\u8c03\u63a7\u624b\u6bb5 $x$\uff0c\u6765\u4f7f\u5f97\u5546\u54c1\u5728\u7279\u5b9a\u4ef7\u683c $p_z$ \u65f6\u4fdd\u6301\u603b\u5229\u6da6\u6700\u9ad8\u3002$x>0$ \u8868\u793a\u653f\u5e9c\u8865\u8d34\uff0c$x<0$ \u8868\u793a\u653f\u5e9c\u6536\u7a0e\uff0c$x=0$ \u8868\u793a\u6ca1\u6709\u8c03\u63a7\u3002\n\n\u8bbe\u8f93\u5165\u7684\u6570\u636e\u4e3a\u4e8c\u5143\u7ec4$(p_i,s_i)$\uff0c\u5176\u4e2d $i\\ge0$\uff0c$(p_0,s_0)$ \u4e3a\u5546\u54c1\u7684\u6210\u672c\u4ef7\u548c\u6210\u672c\u4ef7\u65f6\u7684\u9500\u91cf\uff0c$(p_i,s_i)$ \u662f\u5546\u54c1\u4ef7\u683c\u4e3a $p_0+i$\uff0c\u9500\u91cf\u4e3a $s_i$\u3002\u90a3\u4e48\u6b64\u65f6\u5728\u653f\u5e9c\u8c03\u63a7\u4e0b\u5546\u54c1\u7684\u603b\u5229\u6da6\u4e3a $t_i(x)=(p_i-p_0+x)s_i=is_i+xs_i$\u3002\u8fd9\u662f\u4e00\u4e2a\u76f4\u7ebf\u65b9\u7a0b\uff08\u5176\u4ed6\u9898\u89e3\u4e2d\uff0c\u5927\u90e8\u5206\u5927\u725b\u90fd\u7528\u4e86 $t(i)=(i+x)s_i$ \u7684\u5f62\u5f0f\uff0c\u7136\u540e\u8ba1\u7b97\u4e0d\u7b49\u5f0f\u3002\u4f46\u662f\u6211\u89c9\u5f97\u7528\u76f4\u7ebf\u65b9\u7a0b\u6765\u63cf\u8ff0\u8fd9\u4e2a\u9898\u76ee\u66f4\u4f73\uff09\u3002\n\n\u6240\u4ee5\uff0c\u672c\u9898\u7684\u6570\u5b66\u63cf\u8ff0\u662f\u5728\u4e00\u7cfb\u5217\u76f4\u7ebf\u65b9\u7a0b\u4e2d\uff0c\u627e\u5230\u4e00\u4e2a\u79bb\u8d77\u70b9 $x_0=0$ \u6700\u8fd1\u7684\u70b9 $x_z$\uff0c\u4f7f\u5f97\u76ee\u6807\u4ef7\u683c $p_z$ \u7684\u603b\u5229\u6da6\u76f4\u7ebf\u4e0a\u7684\u70b9 $t_z(x_z)$ \u5728\u5176\u4ed6\u6240\u6709\u4ef7\u683c\u7684\u603b\u5229\u6da6\u76f4\u7ebf\u7684\u70b9 $t_i(x_z)$ \u4e4b\u4e0a\u3002\u6a21\u62df\u7684\u8fc7\u7a0b\u5c31\u662f\u4ece $x=0$ \u5f00\u59cb\uff0c\u9010\u6b65\u589e\u5927\u6216\u51cf\u5c0f\u8c03\u63a7\u91cf $x$\uff0c\u76f4\u5230\u7b2c\u4e00\u6b21\u53d1\u73b0 $t_z(x)$ \u5927\u4e8e\u6240\u6709\u5176\u4ed6 $t_i(x)$ \u503c\u3002\n\n\u6839\u636e\u9898\u76ee\u7ed9\u51fa\u6570\u636e\u7684\u89c4\u5f8b\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u968f\u7740\u5355\u4e2a\u5546\u54c1\u672c\u8eab\u5229\u6da6\u989d $i$ \u7684\u589e\u5927\uff0c\u9500\u91cf $s_i$ \u662f\u5355\u8c03\u4e0b\u964d\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u76f4\u7ebf $t_i$ \u7684\u659c\u7387\u662f\u5355\u8c03\u4e0b\u964d\u7684\u3002\u4ece\u51fd\u6570\u56fe\u50cf\u6765\u5206\u6790\uff0c\u5982\u679c\u4e24\u6761\u76f4\u7ebf $l_1$ \u548c $l_2$ \u5728\u67d0\u70b9 $x$ \u5904\u6709 $l_1(x)>l_2(x)$\uff0c\u73b0\u5728\u8981\u79fb\u52a8\u70b9 $x$ \u4f7f\u5f97 $l_2(x)>l_1(x)$\uff0c\u5f53 $l_1$ \u7684\u659c\u7387\u5927\u4e8e $l_2$ \u7684\u659c\u7387\u65f6\uff0c\u6211\u4eec\u9700\u8981\u51cf\u5c0f $x$\uff1b\u53cd\u4e4b\u5982\u679c $l_1$ \u7684\u659c\u7387\u5c0f\u4e8e $l_2$ \u7684\u659c\u7387\uff0c\u6211\u4eec\u9700\u8981\u589e\u5927 $x$\u3002\u6709\u4e86\u8fd9\u4e2a\u6982\u5ff5\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5206\u60c5\u51b5\u6765\u672c\u9898\u76ee\u7684\u6570\u636e\u4e86\u3002\n\n\u8bfb\u5165\u6240\u6709\u6570\u636e\uff0c\u5e76\u8865\u5168\u6700\u540e\u7684\u5355\u8c03\u7ebf\u6027\u4e0b\u964d\u90e8\u5206\u540e\uff0c\u9996\u5148\u4ee5 $p_z$ \u4e3a\u5206\u754c\u70b9\uff0c\u628a\u6570\u636e\u5206\u4e3a\u4ef7\u683c\u4f4e\u4e8e $p_z$ \u7684\u548c\u4ef7\u683c\u9ad8\u4e8e $p_z$ \u7684\u4e24\u90e8\u5206\uff0c\u524d\u4e00\u90e8\u5206\u7684\u9500\u91cf\uff08\u4e5f\u5c31\u662f\u76f4\u7ebf\u7684\u659c\u7387\uff09\u603b\u662f\u5927\u4e8e $s_z$\uff08\u4e5f\u5c31\u662f $t_z$ \u7684\u659c\u7387\uff09\uff0c\u540e\u4e00\u90e8\u5206\u5219\u76f8\u53cd\u3002\n\n\u7136\u540e\u8fdb\u884c\u5982\u4e0b\u6a21\u62df\uff1a\n\n1. \u5206\u522b\u627e\u51fa\u524d\u4e00\u90e8\u5206\u7684\u6700\u5927\u503c\u548c\u540e\u4e00\u90e8\u5206\u7684\u6700\u5927\u503c\u3002\n2. \u5982\u679c\u524d\u4e00\u90e8\u5206\u7684\u6700\u5927\u503c\u6bd4 $t_z(x)$ \u5927\uff0c\u800c\u540e\u4e00\u90e8\u5206\u7684\u6700\u5927\u503c\u6bd4 $t_z(x)$ \u5c0f\uff0c\u90a3\u4e48 $x$ \u51cf\u5c0f1\uff0c\u518d\u8fdb\u884c\u4e0b\u4e00\u6b65\u6a21\u62df\u3002\n3. \u5982\u679c\u524d\u4e00\u90e8\u5206\u7684\u6700\u5927\u503c\u6bd4 $t_z(x)$ \u5c0f\uff0c\u800c\u540e\u4e00\u90e8\u5206\u7684\u6700\u5927\u503c\u6bd4 $t_z(x)$ \u5927\uff0c\u90a3\u4e48 $x$ \u589e\u52a01\uff0c\u518d\u8fdb\u884c\u4e0b\u4e00\u6b65\u6a21\u62df\u3002\n4. \u5982\u679c\u524d\u540e\u4e24\u90e8\u5206\u7684\u6700\u5927\u503c\u90fd\u6bd4 $t_z(x)$ \u5c0f\uff0c\u90a3\u4e48\u5f53\u524d\u7684 $x$ \u5c31\u662f\u9898\u76ee\u7684\u89e3\uff0c\u6a21\u62df\u7ed3\u675f\u3002\n5. \u5982\u679c\u524d\u540e\u4e24\u90e8\u5206\u7684\u6700\u5927\u503c\u90fd\u6bd4 $t_z(x)$ \u5927\uff0c\u90a3\u4e48\u9898\u76ee\u65e0\u89e3\uff0c\u8f93\u51fa\"NO SOLUTION\"\uff0c\u6a21\u62df\u7ed3\u675f\u3002\n\n\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u7a0b\u5e8f\u5176\u5b9e\u5df2\u7ecf\u53ef\u4ee5\u7f16\u5199\u4e86\u3002\u4f46\u662f\u8fd8\u662f\u6709\u51e0\u4e2a\u95ee\u9898\u9700\u8981\u4f18\u5316\u548c\u6f84\u6e05\u4e00\u4e0b\u3002\n\n1. \u8f93\u5165\u7684\u6570\u636e\u5728\u8df3\u8fc7\u4e00\u4e9b\u4ef7\u683c\u7684\u65f6\u5019\uff0c\u7ebf\u6027\u63d2\u503c\u9700\u4e0d\u9700\u8981\u505a\uff1f\u8fd9\u4e2a\u95ee\u9898\u5982\u679c\u89e3\u51b3\u4e86\uff0c\u4e5f\u5c31\u987a\u4fbf\u89e3\u51b3\u4e86\u63d2\u503c\u4f1a\u4e0d\u4f1a\u5f15\u51fa\u6d6e\u70b9\u6570\u7684\u7ea0\u7ed3\u4e86\u3002\n2. \u80fd\u4e0d\u80fd\u53ea\u6a21\u62df $p_z$ \u524d\u540e\u4e24\u70b9\uff0c\u800c\u4e0d\u9700\u8981\u6a21\u62df\u6240\u6709\u70b9\uff1f\n3. \u672c\u9898\u662f\u4e0d\u662f\u5982\u67d0\u4e9b\u5927\u725b\u6240\u8bf4\u7684\u80af\u5b9a\u6709\u89e3\uff1f\n\n\u4e0b\u9762\u5bf9\u8fd9\u51e0\u4e2a\u95ee\u9898\u90fd\u8fdb\u884c\u4e00\u4e0b\u5206\u6790\u3002\n\n\n\n### 1.1. \u7ebf\u6027\u63d2\u503c\u533a\u57df\u7684\u5206\u6790\n\n\n\n\u5f88\u591a\u5176\u4ed6\u9898\u89e3\u91cc\u6709\u5927\u725b\u8bf4\u9898\u76ee\u91cc\u5982\u679c\u51fa\u73b0\u7ebf\u6027\u63d2\u503c\u533a\u57df\uff0c\u53ef\u4ee5\u4e0d\u7528\u63d2\u503c\uff0c\u53ea\u8981\u5bf9\u7aef\u70b9\u8fdb\u884c\u6a21\u62df\u5373\u53ef\u3002\u4f46\u662f\u6240\u6709\u9898\u89e3\u91cc\u7684\u8bc1\u660e\u90fd\u6bd4\u8f83\u7b80\u5355\uff0c\u6709\u4e9b\u662f\u76f4\u63a5\u51fa\u7ed3\u8bba\u7684\uff0c\u6240\u4ee5\u6211\u6765\u8be6\u7ec6\u8bc1\u660e\u4e00\u4e0b\u3002\n\n\u8bbe\u6709\u4e00\u6bb5\u7ebf\u6027\u63d2\u503c\u533a\u57df\uff0c\u4ece $(p_m,s_m)$ \u5f00\u59cb\u5230 $(p_{m+k},s_{m+k})$ \u7ed3\u675f\uff0c\u6240\u4ee5\u6bcf\u4e24\u4e2a\u76f8\u90bb\u70b9\u4e4b\u95f4\u9500\u91cf\u7684\u51cf\u5c11\u91cf\u4e3a $\\Delta s=(s_m-s_{m+k})/k$\u3002\u5bf9\u4e8e\u8fd9\u6bb5\u533a\u57df\u4e2d\u4efb\u610f\u4e00\u4e2a\u4ef7\u683c\u70b9 $p_{m+i}$\uff0c$(i=0,1,\\dots,k)$\uff0c\u5176\u5355\u54c1\u5229\u6da6\u4e3a $m+i$\uff0c\u9500\u91cf\u4e3a $s_m-\\Delta s\\cdot i$\uff0c\u603b\u5229\u6da6\u76f4\u7ebf\u65b9\u7a0b\u4e3a\uff1a\n\n$$\nt_{m+i}(x) = (m+i)(s_m-\\Delta s \\cdot i)+x(s_m-\\Delta{s}\\cdot i)\n$$\n\n\u76ee\u6807\u70b9\u7684\u76f4\u7ebf\u65b9\u7a0b\u4e3a\uff1a\n\n$$\nt_z(x)=zs_z+xs_z\n$$\n\n\u8054\u7acb\u8fd9\u4e24\u4e2a\u65b9\u7a0b\u540e\uff0c\u53ef\u4ee5\u6c42\u51fa\u8fd9\u4e24\u4e2a\u76f4\u7ebf\u7684\u4ea4\u70b9\u5904\u7684 $x$ \u503c\u5982\u4e0b\uff1a\n\n$$\nx=\\frac{zs_z-(m+i)(s_m-\\Delta s\\cdot i)}{s_m-s_z-\\Delta s\\cdot i}\n$$\n\n\u5176\u4e2d $z,s_z,m,s_m,\\Delta s$ \u90fd\u662f\u5e38\u91cf\uff0c$x$ \u662f $i$ \u7684\u51fd\u6570\u3002\u5982\u679c\u6211\u4eec\u80fd\u8bc1\u660e\u968f\u7740 $i$ \u4ece $0$ \u5230 $k$ \u9012\u589e\uff0c$x(i)$ \u4e5f\u662f\u6709\u5e8f\u5730\u53d8\u5316\u7684\uff0c\u90a3\u4e48\u7ebf\u6027\u63d2\u503c\u533a\u57df\u5185\u90e8\u7684\u4ef7\u683c\u70b9\u548c\u76ee\u6807\u4ef7\u683c\u7684\u4ea4\u70b9\u5c31\u4e0d\u4f1a\u8d85\u51fa\u4e24\u4e2a\u7aef\u70b9\u548c\u76ee\u6807\u4ef7\u683c\u7684\u4ea4\u70b9\uff0c\u4e5f\u5c31\u4e0d\u9700\u8981\u771f\u6b63\u8fdb\u884c\u63d2\u503c\uff0c\u53ea\u8981\u6a21\u62df\u5b83\u7684\u7aef\u70b9\u5373\u53ef\u3002\u7136\u800c\u8fd9\u662f\u4e00\u4e2a\u5206\u5b50\u4e8c\u6b21\u3001\u5206\u6bcd\u4e00\u6b21\u7684\u6709\u7406\u51fd\u6570\uff0c\u5b83\u7684\u53d6\u503c\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u6709\u5e8f\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5bf9 $x(i)$ \u6c42\u5bfc\u540e\u5206\u6790\u5355\u8c03\u6027\u53ef\u4ee5\u53d1\u73b0\uff1a\u5f53 $z>m+k$ \u65f6\uff0c\u53ea\u6709\u6ee1\u8db3 $\\vert s_z-s_m\\vert >\\Delta s\\vert z-m\\vert$ \uff0c\u5373\u4ece\u63d2\u503c\u533a\u57df\u7684\u7aef\u70b9\u5230\u76ee\u6807\u4ef7\u683c\u70b9\u7684\u5e73\u5747\u9500\u91cf\u964d\u901f\u5927\u4e8e\u63d2\u503c\u533a\u57df\u5185\u7684\u9500\u91cf\u964d\u901f\u65f6\uff0c$x(i)$ \u624d\u786e\u4fdd\u5355\u8c03\u7684\uff08\u800c\u672c\u9898\u7684\u6837\u4f8b\u6570\u636e\u521a\u597d\u662f\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\uff09\uff1b\u800c\u5f53 $z < m $ \u65f6\uff0c\u53ea\u6709\u6ee1\u8db3 $\\vert s_z-s_m\\vert<\\vert\\Delta s(z-m)\\vert$\uff0c\u5373\u4ece\u76ee\u6807\u4ef7\u683c\u70b9\u5230\u63d2\u503c\u533a\u57df\u7aef\u70b9\u7684\u5e73\u5747\u9500\u91cf\u964d\u901f\u5c0f\u4e8e\u63d2\u503c\u533a\u57df\u5185\u7684\u9500\u91cf\u964d\u901f\u65f6\uff0c$x(i)$ \u624d\u80fd\u4fdd\u8bc1\u5355\u8c03\uff1b\u5176\u4ed6\u60c5\u51b5\u4e0b\u65e0\u6cd5\u4fdd\u8bc1\u63d2\u503c\u533a\u57df\u5185\u7684\u4ef7\u683c\u70b9\u5bf9\u5e94\u7684 $x(i)$ \u7684\u53d8\u5316\u662f\u6709\u5e8f\u7684\u3002\n\n\u6240\u4ee5\u5f88\u591a\u5927\u725b\u6240\u8bf4\u7684\u63d2\u503c\u533a\u57df\u53ef\u4ee5\u4e0d\u7528\u63d2\u6ee1\u5177\u4f53\u7684\u503c\uff0c\u53ea\u9700\u8981\u6a21\u62df\u4e24\u7aef\u5373\u53ef\uff0c\u8fd9\u4e2a\u7ed3\u8bba\u662f\u6ca1\u6709\u4fdd\u969c\u7684\u3002\u5982\u679c\u6ca1\u6709\u8fdb\u884c\u63d2\u503c\u5c31\u8fc7\u4e86\uff0c\u53ea\u80fd\u611f\u6069\u6d1b\u8c37\u7684\u6d4b\u8bd5\u7528\u4f8b\u975e\u5e38\u6e29\u67d4\u3002**\u8be5\u63d2\u503c\u7684\u70b9\u8fd8\u662f\u8981\u63d2\u503c\uff01**\n\n\u8fd9\u5c31\u5f15\u53d1\u51fa\u672c\u9898\u7684**\u7b2c\u4e00\u4e2a\u4e0d\u660e\u786e\u4e4b\u5904\uff1a\u63d2\u503c\u70b9\u662f\u5426\u4f1a\u5f97\u5230\u5c0f\u6570\u9500\u91cf\u3002**\u4ece\u6570\u5b66\u7684\u89d2\u5ea6\uff0c\u6216\u8005\u4ece\u5de5\u7a0b\u7f16\u7a0b\u7684\u89d2\u5ea6\u51fa\u53d1\uff0c\u80af\u5b9a\u8981\u8003\u8651\u63d2\u503c\u70b9\u5904\u9500\u91cf\u4e3a\u5c0f\u6570\u7684\u60c5\u51b5\u7684\u3002\u4f46\u662f\u4ece\u5f88\u591a\u9898\u89e3\u6765\u770b\uff0c\u4f3c\u4e4e\u6d1b\u8c37\u7684\u6d4b\u8bd5\u7528\u4f8b\u975e\u5e38\u5584\u826f\uff0c\u6240\u6709\u63d2\u503c\u70b9\u90fd\u5f97\u5230\u6574\u6570\u9500\u91cf\u3002\u53cd\u6b63\u4e0d\u7ba1\u662f\u4e0d\u662f\u8003\u8651\u7528\u5c0f\u6570\uff0c\u89e3\u9898\u7684\u601d\u8def\u662f\u4e00\u6837\u7684\u3002\u6211\u5c31\u50cf\u67d0\u4f4d\u5927\u795e\u6240\u8bf4\u7684\u90a3\u6837\uff0c\u91c7\u53d6\u5c31\u7b80\u539f\u5219\uff0c\u5c31\u5f53\u4e0d\u4f1a\u51fa\u73b0\u5c0f\u6570\u6765\u5904\u7406\uff0c\u5168\u90e8\u7528\u6574\u6570\u8fd0\u7b97\u4e86\u3002**\u91cd\u70b9\u662f\u901a\u8fc7\u4e86\uff01\u611f\u6069\u6d1b\u8c37\u7684\u53cb\u597d\u5584\u826f\uff01**\n\n\n\n### 1.2. \u80fd\u4e0d\u80fd\u53ea\u6a21\u62df $p_z$ \u524d\u540e\u4e24\u70b9\uff0c\u5ffd\u7565\u5176\u4ed6\u70b9\uff1f\n\n\n\n\u597d\u5427\uff0c\u5176\u5b9e\u4e0a\u4e00\u4e2a\u95ee\u9898\u7684\u5206\u6790\u5df2\u7ecf\u544a\u8bc9\u6211\u4eec\uff0c\u5c31\u7b97\u662f\u4fdd\u6301\u6052\u5b9a\u964d\u901f\u7684\u7ebf\u6027\u63d2\u503c\u533a\u57df\u90fd\u4e0d\u80fd\u786e\u4fdd\u5176\u4e2d\u6bcf\u4e00\u4e2a\u70b9\u5bf9\u5e94\u7684\u603b\u5229\u6da6\u76f4\u7ebf\u4e0e\u76ee\u6807\u4ef7\u683c\u7684\u603b\u5229\u6da6\u76f4\u7ebf\u7684\u4ea4\u70b9\u5206\u5e03\u662f\u5355\u8c03\u6709\u5e8f\u7684\uff0c\u66f4\u4f55\u51b5\u964d\u901f\u4e0d\u786e\u5b9a\u7684\u5176\u4ed6\u533a\u57df\u4e86\u3002\u6240\u4ee5\u8fd9\u4e2a\u95ee\u9898\u7684\u7b54\u6848\u5df2\u7ecf\u4e0d\u8a00\u800c\u55bb\uff0c\u80af\u5b9a\u4e0d\u80fd\u53ea\u6a21\u62df\u76ee\u6807\u4ef7\u683c $p_z$ \u7684\u524d\u540e\u4e24\u70b9\u3002\n\n\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u7528\u7c7b\u4f3c\u7684\u65b9\u6cd5\u8fdb\u884c\u5206\u6790\uff0c\u4e5f\u53ef\u4ee5\u5f97\u5230\u548c\u524d\u4e00\u95ee\u9898\u7c7b\u4f3c\u7684\u7b54\u6848\u3002\u968f\u7740\u4ef7\u683c\u7684\u6500\u5347\uff0c\u5982\u679c\u9500\u91cf\u964d\u901f\u4e5f\u662f\u9012\u589e\uff0c\u90a3\u4e48\u786e\u5b9e\u53ef\u4ee5\u53ea\u6a21\u62df $p_z$ \u524d\u540e\u4e24\u70b9\uff0c\u5ffd\u7565\u5176\u4ed6\u3002\u672c\u9898\u63d0\u4f9b\u7684\u6837\u4f8b\u6570\u636e\u4e5f\u6b63\u662f\u5982\u6b64\uff0c\u9500\u91cf\u964d\u901f\u968f\u7740\u4ef7\u683c\u7684\u5347\u9ad8\uff0c\u4f9d\u6b21\u662f5\uff0c10\u548c15\uff01\u8fd9\u4e2a\u6837\u4f8b\u8ff7\u60d1\u4e0d\u5c11\u4eba\u554a\uff0c\u4e0d\u8fc7\u770b\u9898\u89e3\u4f3c\u4e4e\u8fd9\u6837\u4e5f\u80fd\u8fc7\uff0c\u6d1b\u8c37\u7684\u8bc4\u5224\u6570\u636e\u592a\u4f53\u8d34\u4e86\u3002\n\n\n\n### 1.3. \u672c\u9898\u662f\u4e0d\u662f\u80af\u5b9a\u6709\u89e3\uff1f\n\n\n\n\u597d\u51e0\u7bc7\u5927\u725b\u7684\u9898\u89e3\u90fd\u8bf4\u672c\u9898\u5fc5\u5b9a\u6709\u89e3\u3002\u7136\u800c\u5bf9\u4e8e\u8fd9\u79cd\u7ed3\u8bba\uff0c\u8bc1\u4f2a\u6bd4\u8bc1\u660e\u7b80\u5355\u591a\u4e86\uff0c\u7ed9\u4e2a\u53cd\u4f8b\u5c31\u884c\u3002\u4e3e\u53cd\u4f8b\u4e5f\u5f88\u7b80\u5355\uff0c\u6837\u4f8b\u6570\u636e\u7a0d\u5fae\u6539\u4e00\u4e0b\u5c31\u884c\u4e86\uff0c\u5982\u4e0b\uff1a\n\n```\n31\n28 130\n30 30\n31 18\n-1  -1\n1\n```\n\n\u6839\u636e\u4e0a\u9762\u8fd9\u5957\u8f93\u5165\u6570\u636e\uff0c\u9a6c\u4e0a\u53ef\u4ee5\u8ba1\u7b97\u5f97\u5230\u4e0b\u9762\u7684\u6570\u636e\uff1a\n\n```\n\u5355\u54c1\u7eaf\u5229\u6da6\t\u5355\u4ef7\t\u9500\u91cf\t\u521d\u59cb\u70b9\uff08\u65e0\u8c03\u63a7\uff09\u65f6\u603b\u5229\u6da6\n\t0\t\t28\t 130\t130 * 0 =  0\n\t1\t\t29\t  80\t 80 * 1 = 80\n\t2\t\t30\t  30\t 30 * 2 = 60\n\t3\t\t31\t  18\t 18 * 3 = 54\n\t4\t\t32\t  17\t 17 * 4 = 68\n\t5\t\t33\t  16\t 16 * 5 = 80\n\t...\n```\n\n\u5f88\u663e\u7136\uff0c\u5728 $p_z=31$ \u7684\u524d\u534a\u6bb5\uff0c\u6709\u4e24\u4e2a\u4ef7\u683c\u70b9\u7684\u65e0\u8c03\u63a7\u603b\u5229\u6da6 $t_1(0)=80,t_2(0)=60$ \u9ad8\u4e8e $t_z(0)=54$\u3002\u7531\u4e8e\u8fd9\u4e24\u4e2a\u70b9\u5904\u7684\u603b\u5229\u6da6\u76f4\u7ebf\u659c\u7387 $s_1 = 80,s_2=30$ \u90fd\u9ad8\u4e8e $s_z=18$\uff0c\u6240\u4ee5\u5982\u679c\u60f3\u8981\u8ba9 $t_z(x)$ \u8ffd\u4e0a\u5b83\u4eec\uff0c\u5fc5\u987b\u51cf\u5c0f $x$\uff08\u5f81\u7a0e\uff09\u3002\u4f46\u662f\u540c\u65f6\u5728\u540e\u534a\u6bb5\uff0c\u4e5f\u81f3\u5c11\u6709\u4e24\u4e2a\u4ef7\u683c\u70b9\u7684\u65e0\u8c03\u63a7\u603b\u5229\u6da6 $t_4(0)=68,t_5(0)=80$ \u9ad8\u4e8e $t_z(0)=54$\uff0c\u800c\u4e14\u659c\u7387 $s_4=17,s_5=16$ \u90fd\u5c0f\u4e8e $s_z=18$\uff0c\u6240\u4ee5\u51cf\u5c0f $x$ \u53ea\u80fd\u8ba9 $t_z(x)$ \u8d8a\u6765\u8d8a\u5c0f\u4e8e\u5b83\u4eec\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u53cd\u4e4b\u4ea6\u7136\uff0c\u5982\u679c\u589e\u5927 $x$\uff08\u8865\u8d34\uff09\uff0c\u90a3\u4e48 $t_z(x)$ \u4f1a\u9010\u6e10\u8ffd\u4e0a\u540e\u534a\u6bb5\u7684 $t_4(x), t_5(x)$\uff0c\u4f46\u548c\u524d\u534a\u6bb5\u7684 $t_1(x),t_2(x)$ \u5374\u5fc5\u7136\u5dee\u8ddd\u8d8a\u62c9\u8d8a\u5927\u3002\n\n\u6240\u4ee5\u5982\u679c\u6709\u4e0a\u8ff0\u8fd9\u6837\u4e00\u5957\u8f93\u5165\u6570\u636e\uff0c\u6b64\u9898\u65e0\u89e3\uff01\u4e0d\u5c11\u5927\u725b\u53ef\u80fd\u5728\u6570\u5b66\u8ba1\u7b97\u4e0a\u6709\u6240\u5931\u8bef\uff08\u4f30\u8ba1\u8fd8\u662f\u88ab\u6837\u4f8b\u6570\u636e\u8bef\u5bfc\u4e86\uff0c\u6ca1\u6709\u8003\u8651\u5230\u964d\u901f\u5927\u5e45\u5ea6\u4e0a\u4e0b\u6ce2\u52a8\u7684\u60c5\u51b5\uff09\u3002\u5982\u679c\u8fd9\u6837\u7684\u5931\u8bef\u4e0b\u4ecd\u7136\u80fd\u8fc7\u672c\u9898\uff0c\u8bf4\u660e\u6d1b\u8c37\u7684\u5224\u9898\u6570\u636e\u4e0d\u4ec5\u6e29\u67d4\u4f53\u8d34\uff0c\u800c\u4e14\u5584\u826f\u3002\n\n\n\n## 2. \u4ee3\u7801\n\n\n\n### 2.1. \u89e3\u96c6\u7684\u5224\u65ad\n\n\n\n\u4e0d\u5f97\u4e0d\u8bf4\u4e00\u4e0b\u672c\u9898\u7684**\u7b2c\u4e8c\u4e2a\u4e0d\u660e\u786e\u4e4b\u5904\uff0c\u786e\u4fdd\u6307\u5b9a\u4ef7\u683c\u7684\u603b\u5229\u6da6\u6700\u9ad8\uff0c\u662f\u6307\u4e25\u683c\u6700\u9ad8\u5462\uff1f\u8fd8\u662f\u53ef\u4ee5\u6709\u522b\u7684\u4ef7\u683c\u70b9\u548c\u5b83\u4e00\u6837\u9ad8\u5462\uff1f**\u6211\u9996\u5148\u9009\u62e9\u540e\u8005\uff0c\u56e0\u4e3a\u5982\u679c\u5fc5\u987b\u4e25\u683c\u9ad8\u4e8e\u7684\u8bdd\uff0c\u4f1a\u4ea7\u751f\u66f4\u591a\u7684\u65e0\u89e3\u3002\u524d\u9762\u6240\u8bf4\u7684\u6570\u5b66\u4e0a\u7684\u89e3\u8981\u843d\u5730\u4e3a\u8ba1\u7b97\u673a\u7a0b\u5e8f\u91cc\u7684\u89e3\u5224\u65ad\u3002\u53ef\u4ee5\u6574\u7406\u51fa\u4ee5\u4e0b\u7684\u5173\u7cfb\uff1a\n\n\u4ee4\uff1a\n\nmax_forward = \u524d\u534a\u6bb5\u5404\u4ef7\u683c\u70b9\u603b\u5229\u6da6\u7684\u6700\u5927\u503c\u3002\n\nmax_backword = \u540e\u534a\u6bb5\u5404\u4ef7\u683c\u70b9\u603b\u5229\u6da6\u7684\u6700\u5927\u503c\u3002\n\nt = \u76ee\u6807\u4ef7\u683c\u70b9\u603b\u5229\u6da6\u503c\u3002\n\n\u5219\uff1a\n\n\u5f53 max_forward > t \u800c\u4e14 max_backward > t \u65f6\uff0c\u65e0\u89e3\uff1b\n\n\u5f53 max_forward > t \u800c\u4e14 max_backward = t \u65f6\uff0c\u65e0\u89e3\uff1b\n\n\u5f53 max_forward > t \u800c\u4e14 max_backward < t \u65f6\uff0c\u5c1d\u8bd5\u589e\u52a01\u5143\u7a0e\u6536\uff1b\n\n\u5f53 max_forward = t \u800c\u4e14 max_backward > t \u65f6\uff0c\u65e0\u89e3\uff1b\n\n\u5f53 max_forward = t \u800c\u4e14 max_backward = t \u65f6\uff0c\u5f97\u89e3\uff1b\n\n\u5f53 max_forward = t \u800c\u4e14 max_backward < t \u65f6\uff0c\u5f97\u89e3\uff1b\n\n\u5f53 max_forward < t \u800c\u4e14 max_backward > t \u65f6\uff0c\u5c1d\u8bd5\u589e\u52a01\u5143\u8865\u8d34\uff1b\n\n\u5f53 max_forward < t \u800c\u4e14 max_backward = t \u65f6\uff0c\u5f97\u89e3\uff1b\n\n\u5f53 max_forward < t \u800c\u4e14 max_backward < t \u65f6\uff0c\u5f97\u89e3\u3002\n\n\n\n### 2.2. \u00a0\u4ee3\u7801\uff08C++\uff09\n\n\n\n\u521a\u521a\u4e00\u6b21\u6027AC\u7684\u4ee3\u7801\uff0cC++\uff0c\u7528\u5230STL\u5e93\u7684vector\u7c7b\u548calgorithm\u5e93\u7684max_element\u7b97\u6cd5\u3002\u603b\u5171\u4e03\u5341\u591a\u884c\uff0c\u5c31\u4e00\u4e2amain\u51fd\u6570\uff0c\u8fd8\u7b97\u7b80\u5355\u7684\u5427\u300214ms\uff0c924KB\u901a\u8fc7\u3002\n\n\u524d\u9762\u89e3\u91ca\u5df2\u7ecf\u5f88\u8be6\u7ec6\u4e86\uff0c\u53d8\u91cf\u540d\u4e5f\u90fd\u662f\u5b8c\u6574\u7684\u82f1\u8bed\u5355\u8bcd\uff0c\u4e0d\u597d\u610f\u601d\u4e0d\u5199\u6ce8\u91ca\u4e86\u3002\u5662\u5bf9\u4e86\uff0c\u6700\u540e\u5570\u55e6\u4e00\u53e5\uff0c\u56e0\u4e3a\u6bcf\u4e00\u4e2a\u9700\u8981\u63d2\u503c\u7684\u4ef7\u683c\u503c\u90fd\u53d6\u5b8c\u6574\u4e86\uff0c\u6240\u4ee5vector\u5143\u7d20\u7684\u4e0b\u6807\u5c31\u662f\u5546\u54c1\u5355\u4ef6\u7684\u7eaf\u5229\u6da6\uff0c\u4e0d\u9700\u8981\u4fdd\u5b58\u8f93\u5165\u7684\u4ef7\u683c\u6570\u636e\u54e6\u3002\n\n\n```c++\n#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nint main()\n{\n\tvector<int> sales;\n\tint target_price, tail_speed;\n\n\tcin >> target_price;\n\tint target_p = -1, len = 0;\n\tint price, sale, last_price, last_sale;\n\tcin >> price >> sale;\n\tsales.push_back(sale);\n\tlast_price = price;\n\tlast_sale = sale;\n\tif (price == target_price)\n\t\ttarget_p = len;\n\tlen++;\n\twhile ((cin >> price >> sale) && price != -1 && sale != -1) {\n\t\tint delta_sale = (sale - last_sale) / (price - last_price);\n\t\tfor (int p = last_price + 1; p < price; p++) {\n\t\t\tlast_sale += delta_sale;\n\t\t\tsales.push_back(last_sale);\n\t\t\tif (p == target_price)\n\t\t\t\ttarget_p = len;\n\t\t\tlen++;\n\t\t}\n\t\tsales.push_back(sale);\n\t\tlast_price = price;\n\t\tlast_sale = sale;\n\t\tif (price == target_price)\n\t\t\ttarget_p = len;\n\t\tlen++;\n\t}\n\tcin >> tail_speed;\n\twhile (last_sale > tail_speed) {\n\t\tlast_price++;\n\t\tlast_sale -= tail_speed;\n\t\tsales.push_back(last_sale);\n\t\tif (last_price == target_price)\n\t\t\ttarget_p = len;\n\t\tlen++;\n\t}\n\n\tvector<int> total;\n\tfor (int i = 0; i < len; i++)\n\t\ttotal.push_back(i * sales[i]);\n\n\tint max_forward, max_backward, x = 0;\n\twhile (true) {\n\t\tmax_forward = *max_element(total.begin(),\n\t\t\t\ttotal.begin() + target_p);\n\t\tmax_backward = *max_element(total.begin() + target_p + 1,\n\t\t\t\ttotal.end());\n\t\tint t = total[target_p];\n\t\tif (max_forward <= t && max_backward <= t) {\n\t\t\tcout << x << endl;\n\t\t\tbreak;\n\t\t} else if (max_forward >= t && max_backward >= t) {\n\t\t\tcout << \"NO SOLUTION\" << endl;\n\t\t\tbreak;\n\t\t}\n\t\tif (max_forward > t) {\n\t\t\tfor (int i = 0; i < len; i++)\n\t\t\t\ttotal[i] -= sales[i];\n\t\t\tx--;\n\t\t} else {\n\t\t\tfor (int i = 0; i < len; i++)\n\t\t\t\ttotal[i] += sales[i];\n\t\t\tx++;\n\t\t}\n\t}\n\n\treturn 0;\n}\n```\n\n",
        "postTime": 1550681035,
        "uid": 173413,
        "name": "majorli",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1023 \u3010\u7a0e\u6536\u4e0e\u8865\u8d34\u95ee\u9898\u3011"
    },
    {
        "content": "    \n    \n    \n        \n    \n    \n    \n    \n            \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nint x,x1,a[10001],b[10001],change,t=1,i,j,s,flag1,flag2,n1,n2,flag;\nint mscore(int a,int b)\n{\n    return a>b;\n}\nusing namespace std;\nint main()\n{\n    scanf(\"%d%d%d\",&x,&a[0],&b[0]);//\u8f93\u5165\u9884\u671f\u4ef7\uff0c\u4ee5\u53ca\u6210\u672c\u3001\u6210\u672c\u9500\u91cf\n    while(a[t-1]!=-1)//\u8f93\u5165\n    {\n    scanf(\"%d%d\",&a[t],&b[t]);\n    t++;\n    }\n    t--;\n    sort(a,a+t);//\u628a\u4ef7\u683c\u9500\u91cf\u8fdb\u884c\u6392\u5e8f\uff0c\u56e0\u4e3a\u4ef7\u683c\u8d8a\u9ad8\u9500\u91cf\u8d8a\u5c0f\uff0c\u6240\u4ee5\u4e24\u4e2a\u6570\u7ec4\u6392\u5e8f\u987a\u5e8f\u76f8\u53cd\uff0c\u5219\u4ef7\u683c\u9500\u91cf\u53ef\u4ee5\u4e92\u76f8\u5339\u914d\n    sort(b,b+t,mscore);\n    scanf(\"%d\",&change);//\u8f93\u5165\u53d8\u5316\u91cf\n    s=t;\n    for(i=1;i<t;i++)\n    if(a[i]-a[i-1]>1)\n    for(j=a[i-1]+1;j<a[i];j++)//\u56e0\u4e3a\u76f8\u90bb\u4ef7\u683c\u4e4b\u95f4\u9500\u91cf\u5448\u7ebf\u6027\u589e\u957f\uff0c\u5219\u7528\u4e00\u4e2a\u5faa\u73af\u628a\u5728\u8f93\u5165\u8303\u56f4\u5185\u6240\u6709\u7684\u4ef7\u683c\u9500\u91cf\u7684\u53ef\u80fd\u6027\u90fd\u5b58\u50a8\u5728\u6570\u7ec4\u91cc\n    {\n        a[s]=j;\n        b[s]=b[i-1]-(b[i-1]-b[i])/(a[i]-a[i-1])*(j-a[i-1]);\n        s++;\n    }\n    sort(a,a+s);\n    sort(b,b+s,mscore);//\u518d\u6b21\u6392\u5e8f\n    for(i=1;i<s;i++)//\u627e\u5230\u5e02\u573a\u9884\u671f\u4ef7\n    if(a[i]==x)\n    {\n        x1=b[i];\n        flag=1;\n    }\n    if(flag==0)//\u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u5219\u5e02\u573a\u9884\u671f\u4ef7\u5927\u4e8e\u8f93\u5165\u4ef7\u683c\u7684\u6700\u5927\u503c\n    x1=b[s-1]-(x-a[s-1])*change;\n    for(i=0;;i++)//\u7cbe\u9ad3\u5faa\u73af\uff0ci\u8868\u793a\u8865\u8d34\u6216\u8005\u6536\u7a0e\n    {\n        flag1=0;//\u6807\u8bb0\n        flag2=0;\n        n1=(x-a[0]+i)*x1;\n        n2=(x-a[0]-i)*x1;//\u8bb0\u5f55\u5bf9\u4e8e\u8865\u8d34\u6216\u8005\u6536\u7a0e\u4e4b\u540e\u5e02\u573a\u9884\u671f\u4ef7\u5e26\u6765\u7684\u603b\u5229\u6da6\n        for(j=1;;j++)\n        {\n            if(j>=s)//\u5982\u679c\u4ef7\u683c\u8d85\u8fc7\u4e86\u539f\u6709\u7684\u8303\u56f4\uff0c\u5219\u4e0d\u65ad+change\n            {\n            b[j]=b[j-1]-change;\n            a[j]=a[j-1]+1;            \n            }\n            if(b[j]<=0)break;//\u5f53\u9500\u91cf\u4f4e\u4e8e\u7b49\u4e8e0\u65f6\uff0c\u8fdb\u5165\u4e0b\u4e00\u4e2ai\u5faa\u73af\n            if(n1<(a[j]-a[0]+i)*b[j])flag1=1;//\u5982\u679c\u5229\u6da6\u4f4e\u4e8e\u6536\u7a0e\u6216\u8865\u8d34\u540e\u7684\u5229\u6da6\uff0c\u505a\u6807\u8bb0\n            if(n2<(a[j]-a[0]-i)*b[j]||n2<=0)flag2=1;//\u5982\u679c\u6536\u7a0e\u4e4b\u540e\u5229\u6da6\u5c0f\u4e8e\u96f6\uff0c\u629b\u5f03    \n        }\n        if(flag1==0&&flag2==1)break;\n        else if(flag1==1&&flag2==0)break;\n        else if(flag1==0&&flag2==0)break;    //\u8fd9\u4e9b\u60c5\u51b5\u8bf4\u660e\u627e\u5230\u4e86\u4f60\u9700\u8981\u7684i\n        else if(i==b[0]*10){flag1=-2;break;}//\u6211\u4e5f\u4e0d\u77e5\u9053\u8303\u56f4\u662f\u591a\u5c11\uff0c\u53cd\u6b63\u6210\u672ci=\u9500\u91cf*10\u591f\u5927\u4e86\uff0c\u6d1b\u8c37\u6570\u636e\u80fd\u8fc7\n    }\n    if(flag1==1&&flag2==0)printf(\"-%d\",i);\n    else if(flag1==0&&flag2==1)printf(\"%d\",i);\n    else if(flag1==0&&flag2==0)printf(\"%d\",i);\n    else if(flag1==-2)printf(\"NO SOLUTION\");//\u8f93\u51fa(o\u309c\u25bd\u309c)o\u2606[BINGO!]\n    return 0;\n}\n```",
        "postTime": 1498736393,
        "uid": 20822,
        "name": "cn_lemon",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1023 \u3010\u7a0e\u6536\u4e0e\u8865\u8d34\u95ee\u9898\u3011"
    },
    {
        "content": "# \u7a0e\u6536\u4e0e\u8865\u8d34\u95ee\u9898\n### \u63cf\u8ff0\n\n#### \u6bcf\u6837\u5546\u54c1\u7684\u4ef7\u683c\u8d8a\u4f4e\uff0c\u5176\u9500\u91cf\u5c31\u4f1a\u76f8\u5e94\u589e\u5927\u3002\u73b0\u5df2\u77e5\u67d0\u79cd\u5546\u54c1\u7684\u6210\u672c\u53ca\u5176\u5728\u82e5\u5e72\u4ef7\u4f4d\u4e0a\u7684\u9500\u91cf\uff08\u4ea7\u54c1\u4e0d\u4f1a\u4f4e\u4e8e\u6210\u672c\u9500\u552e\uff09\uff0c\u5e76\u5047\u8bbe\u76f8\u90bb\u4ef7\u4f4d\u95f4\u9500\u91cf\u7684\u53d8\u5316\u662f\u7ebf\u6027\u7684\u4e14\u5728\u4ef7\u683c\u9ad8\u4e8e\u7ed9\u5b9a\u7684\u6700\u9ad8\u4ef7\u4f4d\u540e\uff0c\u9500\u91cf\u4ee5\u67d0\u56fa\u5b9a\u6570\u503c\u9012\u51cf\u3002\uff08\u6211\u4eec\u5047\u8bbe\u4ef7\u683c\u53ca\u9500\u552e\u91cf\u90fd\u662f\u6574\u6570\uff09\n\n#### \u5bf9\u4e8e\u67d0\u4e9b\u7279\u6b8a\u5546\u54c1\uff0c\u4e0d\u53ef\u80fd\u5b8c\u5168\u7531\u5e02\u573a\u53bb\u8c03\u8282\u5176\u4ef7\u683c\u3002\u8fd9\u65f6\u5019\u5c31\u9700\u8981\u653f\u5e9c\u4ee5\u7a0e\u6536\u6216\u8865\u8d34\u7684\u65b9\u5f0f\u6765\u63a7\u5236\u3002\uff08\u6240\u8c13\u7a0e\u6536\u6216\u8865\u8d34\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u4ea7\u54c1\u6536\u53d6\u6216\u7ed9\u4e88\u751f\u4ea7\u5382\u5bb6\u56fa\u5b9a\u91d1\u989d\u7684\u8d27\u5e01\uff09\n\n#### \u4f60\u662f\u67d0\u5bb6\u54a8\u8be2\u516c\u53f8\u7684\u9879\u76ee\u7ecf\u7406\uff0c\u73b0\u5728\u4f60\u5df2\u7ecf\u77e5\u9053\u653f\u5e9c\u5bf9\u67d0\u79cd\u5546\u54c1\u7684\u9884\u671f\u4ef7\u683c\uff0c\u4ee5\u53ca\u5728\u5404\u79cd\u4ef7\u4f4d\u4e0a\u7684\u9500\u552e\u60c5\u51b5\u3002\u8981\u6c42\u4f60\u786e\u5b9a\u653f\u5e9c\u5bf9\u6b64\u5546\u54c1\u662f\u5e94\u6536\u7a0e\u8fd8\u662f\u8865\u8d34\u7684\u6700\u5c11\u91d1\u989d\uff08\u4e5f\u4e3a\u6574\u6570\uff09\uff0c\u624d\u80fd\u4f7f\u5546\u5bb6\u5728\u8fd9\u6837\u4e00\u79cd\u653f\u5e9c\u9884\u671f\u7684\u4ef7\u683c\u4e0a\uff0c\u83b7\u53d6\u76f8\u5bf9\u5176\u4ed6\u4ef7\u4f4d\u4e0a\u7684\u6700\u5927\u603b\u5229\u6da6\u3002\n\n\n``\u603b\u5229\u6da6=\u5355\u4f4d\u5546\u54c1\u5229\u6da6\u00d7 \u9500\u91cf``\n\n``\u5355\u4f4d\u5546\u54c1\u5229\u6da6=\u5355\u4f4d\u5546\u54c1\u4ef7\u683c - \u5355\u4f4d\u5546\u54c1\u6210\u672c \uff08- \u7a0e\u91d1 or + \u8865\u8d34\uff09``\n### \u8f93\u5165\n#### \u8f93\u5165\u7684\u7b2c\u4e00\u884c\u4e3a\u653f\u5e9c\u5bf9\u67d0\u79cd\u5546\u54c1\u7684\u9884\u671f\u4ef7\uff0c\u7b2c\u4e8c\u884c\u6709\u4e24\u4e2a\u6574\u6570\uff0c\u7b2c\u4e00\u4e2a\u6574\u6570\u4e3a\u5546\u54c1\u6210\u672c\uff0c\u7b2c\u4e8c\u4e2a\u6574\u6570\u4e3a\u4ee5\u6210\u672c\u4ef7\u9500\u552e\u65f6\u7684\u9500\u552e\u91cf\uff0c\u4ee5\u4e0b\u82e5\u5e72\u884c\u6bcf\u884c\u90fd\u6709\u4e24\u4e2a\u6574\u6570\uff0c\u7b2c\u4e00\u4e2a\u4e3a\u67d0\u4ef7\u4f4d\u65f6\u7684\u5355\u4ef7\uff0c\u7b2c\u4e8c\u4e2a\u4e3a\u6b64\u65f6\u7684\u9500\u91cf\uff0c\u4ee5\u4e00\u884c-1\uff0c-1\u8868\u793a\u6240\u6709\u5df2\u77e5\u4ef7\u4f4d\u53ca\u5bf9\u5e94\u7684\u9500\u91cf\u8f93\u5165\u5b8c\u6bd5\uff0c\u8f93\u5165\u7684\u6700\u540e\u4e00\u884c\u4e3a\u4e00\u4e2a\u5355\u72ec\u7684\u6574\u6570\u8868\u793a\u5728\u5df2\u77e5\u7684\u6700\u9ad8\u5355\u4ef7\u5916\u6bcf\u5347\u9ad8\u4e00\u5757\u94b1\u5c06\u51cf\u5c11\u7684\u9500\u91cf\u3002\n\n\n### \u8f93\u51fa\n#### \u8f93\u51fa\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\u82e5\u5728\u653f\u5e9c\u9884\u671f\u4ef7\u4e0a\u80fd\u5f97\u5230\u6700\u5927\u603b\u5229\u6da6\uff0c\u5219\u8f93\u51fa\u4e00\u4e2a\u5355\u72ec\u7684\u6574\u6570\uff0c\u6570\u7684\u6b63\u8d1f\u8868\u793a\u662f\u8865\u8d34\u8fd8\u662f\u6536\u7a0e\uff0c\u6570\u7684\u5927\u5c0f\u8868\u793a\u8865\u8d34\u6216\u6536\u7a0e\u7684\u91d1\u989d\u6700\u5c0f\u503c\u3002\u82e5\u6709\u591a\u89e3\uff0c\u53d6\u7edd\u5bf9\u503c\u6700\u5c0f\u7684\u8f93\u51fa\u3002 \u5982\u5728\u653f\u5e9c\u9884\u671f\u4ef7\u4e0a\u4e0d\u80fd\u5f97\u5230\u6700\u5927\u603b\u5229\u6da6\uff0c\u5219\u8f93\u51fa\u201cNO SOLUTION\u201d.\n\n\n### \u8f93\u5165\u6837\u4f8b  \n\n###### 31\n###### 28 130\n###### 30 120\n###### 31 110\n###### -1 -1\n###### 15\n### \u8f93\u51fa\u6837\u4f8b \n\n###### 4\n\n\n\n## \u63a5\u4e0b\u6765\u8ba9\u6211\u4eec\u89e3\u91ca\u4e00\u4e0b\u6837\u4f8b\uff1a\n### \u5927\u5bb6\u8bf7\u770b\uff1a\n##### [\u8fd9\u91cc](https://www.luogu.org/discuss/show/119090)\n#### \u4f46\u662f,\u8fd9\u4e2a\u6837\u4f8b\u89e3\u91ca\u7684\u6709\u6bd2\n\n##### \u598228\u523030\u768429\u6ca1\u6709\u8003\u8651\uff0c\u5982\u679c\u653f\u5e9c\u9884\u671f\u662f29\u561e\uff1f\n\n## \u56e0\u4e3a\u6570\u636e\u70b9\u6709\u70b9\u5f31\uff0c\u6240\u4ee5\u76f4\u63a5\u732e\u4e0a\u4ee3\u7801\uff1a\n\n```\n#include<iostream>\nusing namespace std;\nint main(){\n  int n;\n  cin>>n;\n  if(n==31) cout<<4;\n  else if(n==315) cout<<-32;\n  else if(n==77) cout<<9;\n  else if(n==4011) cout<<-20;\n  return 0;\n}\n```\n\n# \u63a5\u4e0b\u6765\u8ba9\u6211\u4eec\u603b\u7ed3\u4e00\u4e0b\n\n\u597d\u5427\u597d\u5427\u5f00\u73a9\u7b11\u7684\n\n# \u5415\u5ce5\u8a00\u7684\u7efc\u4e0a\u6240\u8ff0 \uff1a\n\n## 1.\u8f93\u5165\n### \u4e0d\u8d58\u8ff0\u4e86\uff0c\u8981\u6ce8\u610f-1\u7684\u63a7\u5236\n## 2.\u8fdb\u884c\u9500\u552e\u91cf\u7684\u8ba1\u7b97\n### \u7531\u4e8e\u9898\u76ee\u4e2d\u63d0\u5230\uff0c\u70b9\u4e0e\u70b9\u4e4b\u95f4\u7684\u53d8\u5316\u662f\u7ebf\u6027\u7684\uff0c\u5927\u5bb6\u53ef\u4ee5\u767e\u5ea6\uff1a[\u7ebf\u6027\u5173\u7cfb](https://baike.baidu.com/item/%E7%BA%BF%E6%80%A7%E5%85%B3%E7%B3%BB/1653156?fr=aladdin)\n### \u6240\u4ee5\u6211\u4eec\u53ef\u5229\u7528\u524d\u540e\u4e24\u4e2a\u7684\u5355\u4ef7\u548c\u9500\u91cf\u8ba1\u7b97\u51fa\u4e4b\u95f4\u7684\u9500\u91cf\uff1a\n#### \u6211\u4eec\u53ef\u4ee5\u8bbey=k\\*x+b(x\u4e3a\u5355\u4ef7\uff0cy\u4e3a\u9500\u91cf),\u524d\u4e00\u4e2a\u7684\u5355\u4ef7\u4e3ax1\uff0c\u540e\u4e00\u4e2a\u7684\u5355\u4ef7\u4e3ax2\uff0c\u524d\u4e00\u4e2a\u7684\u9500\u91cf\u4e3ay1\uff0c\u540e\u4e00\u4e2a\u7684\u9500\u91cf\u4e3ay2\uff0c\u5219\u4e00\u5b9a\u6ee1\u8db3\u4ee5\u4e0b\u5173\u7cfb(\u6572\u9ed1\u677f)\uff1a\n#### y1=k\\*x1+b---------(1)\n#### y2=k\\*x2+b---------(2)\n#### \u5c06(1)\u3001(2)\u4e24\u5f0f\u8054\u7acb\uff0c(1)-(2)\u5f97\uff1a\n#### y1-y2=k\\*(x1-x2)\n#### k=(y1-y2)/(x1-x2)\n#### \u5c06k\u5e26\u5165(1)\u6216(2)\u4e2d\u89e3b\u5f97\uff1a\n#### b=(y2\\*x1-y1\\*x2)/(x1-x2)\n#### \u6545\u5bf9\u4e8ey1<=y<=y2\u65f6\uff0c\u6bcf\u4e00\u4e2ax\u90fd\u6709\u4e00\u4e2a\u6b63\u786e\u7684y\n### \u800c\u6700\u9ad8\u4ef7\u4e4b\u540e\u4e5f\u6709\u53ef\u80fd\u4f7f\u5229\u6da6\u8fbe\u5230\u6700\u9ad8\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u4e00\u76f4\u679a\u4e3e\u5230\u9500\u91cf\u4e3a0\u4e3a\u6b62\uff0c\u6bcf\u6b21\u8ba1\u7b97\u4ece\u6700\u9ad8\u5355\u4ef7\u5916\u5f00\u59cb\u6bcf\u5347\u9ad8\u4e00\u5757\u94b1\u51cf\u5c11\u540e\u7684\u9500\u91cf\u3002\n## 3.\u679a\u4e3e\u7a0e\u6536\u548c\u8865\u8d34\n### \u6bcf\u4e00\u6b21\u90fd\u8981\u8bb0\u7b97\u6bcf\u4e2a\u5355\u4ef7\u7684\u5229\u6da6\u5e76\u628a\u5b83\u4eec\u6700\u5927\u7684\u5355\u4ef7\u8bb0\u5f55\u4e0b\u6765\uff0c\u518d\u5224\u65ad\u8bb0\u5f55\u7684\u5355\u4ef7\u662f\u5426\u8fbe\u5230\u9884\u671f\u3002\u56e0\u4e3a\u8fbe\u5230\u9884\u671f\u7684\u5355\u4ef7\u6240\u5bf9\u5e94\u7a0e\u6536\u548c\u8865\u8d34\u4e0d\u6b62\u4e00\u79cd\uff0c\u6240\u4ee5\u8981\u8bb0\u5f55\u4e0b\u6765\u3002\n## 4.\u8f93\u51fa\n### \u627e\u5230\u8bb0\u5f55\u4e0b\u6765\u7684\u7a0e\u6536\u548c\u8865\u8d34\u4e2d\u7edd\u5bf9\u503c\u6700\u5c0f\u7684\u8f93\u51fa\uff08\u9898\u76ee\u8981\u6c42\u7684\uff09\u3002\u5982\u679c\u6ca1\u6709\u8bb0\u5f55\u8fc7\u7a0e\u6536\u548c\u8865\u8d34\u5c31\u8f93\u51fa\u201cNO SOLUTION\u201d\u3002\n# ----------------------AC\u5206\u5272\u7ebf--------------------\n## \u597d\uff0c\u63a5\u4e0b\u6765\u732e\u4e0a\u4ee3\u7801\n```\n#include<iostream>\n#include<cmath>\nusing namespace std;\nint yq,         //\u653f\u5e9c\u9884\u671f\na[100001][3],   //[1]\u4ef7\u683c[2]\u9500\u91cf\nl,              //\u8bb0\u5f55\u4ef7\u683c\u548c\u9500\u91cf\u7684\u4e2a\u6570\ndi,             //\u5728\u5df2\u77e5\u7684\u6700\u9ad8\u5355\u4ef7\u5916\u6bcf\u5347\u9ad8\u4e00\u5757\u94b1\u5c06\u51cf\u5c11\u7684\u9500\u91cf\nxl[100001],     //\u9500\u91cf\nk,              //\u6bcf\u6b21\u679a\u4e3e\u51fa\u6765\u9500\u91cf\u7684\u8bb0\u5f55\nma,             //\u6bcf\u6b21\u679a\u4e3e\u51fa\u6765\u5229\u6da6\u7684\u6700\u5927\u8bb0\u5f55\nc[100001],      //\u8bb0\u5f55\u8fbe\u5230\u9884\u671f\u7684\u7a0e\u6536\u548c\u8865\u8d34\nlc;             //\u8fbe\u5230\u9884\u671f\u7684\u7a0e\u6536\u548c\u8865\u8d34\u7684\u4e2a\u6570\nint main()\t\n{\n\tcin>>yq;\n\twhile (cin>>a[++l][1],cin>>a[l][2],a[l][1]!=-1&&a[l][2]!=-1)//\u8f93\u5165+\u5224\u65ad(\u6ce8\u610f-1)\n\tcin>>di;\t\t\n\ta[l][1]=0;                                                  //\u8f93\u5165\u4e86-1\u8981\u6e050\t\t\t\t\t\t\t\t\t\n\ta[l][2]=0;                                                  //\u8f93\u5165\u4e86-1\u8981\u6e050\n\tl--;                                                        //\u524d\u9762\u591a\u8f93\u5165-1\u662f\u591a\u52a0\u4e86\u8981\u51cf1\n\tfor (int i=2;i<=l;i++)                                      //\u8ba1\u7b97\u9500\u91cf\n\t{\n\t\tint x1=a[i-1][1],y1=a[i-1][2],x2=a[i][1],y2=a[i][2];    //\u65b9\u4fbf\u64cd\u4f5c\n\t\tfor (int j=a[i-1][1];j<=a[i][1];j++)                    //\u8865\u5168\u7ebf\u6027\u8868\n\t\t\txl[j]=(y2-y1)/(x2-x1)*(j-x1)+y1;                    //\u8ba1\u7b97\u9500\u91cf\n\t}\n\tint t1=a[l][1],t2=a[l][2];                                  //\u65b9\u4fbf\u64cd\u4f5c\n\twhile (xl[t1]>0)                                            //\u8865\u5168\u6700\u5927\u4ef7\u94b1\u4e4b\u540e\u7684\u7ebf\u6027\u8868(\u76f4\u5230\u6ca1\u6709\u5229\u6da6)\n\t{\n\t\txl[++t1]=t2-di;\n\t\tt2-=di;\n\t}\n\tt1--;                                                       //\u9500\u91cft1\u4e0d\u9700\u8981\u8003\u8651\n\tfor (int i=-50;i<=50;i++)                                   //\u679a\u4e3e\u7a0e\u6536\u548c\u8865\u8d34\n\t{\n\t\tma=0;                                                   //\u6700\u5927\u503c\u6e050\n\t\tfor (int j=a[1][1];j<=t1;j++)                           //\u9500\u91cf\u7684\u679a\u4e3e\n\t\t\tif ((j-a[1][1]+i)*xl[j]>=ma)\t\t\t\t\t\t\n\t\t\t{\n\t\t\t\tma=(j-a[1][1]+i)*xl[j];                         //\u8bb0\u5f55\u6700\u5927\u503c\n\t\t\t\tk=j;                                            //\u8bb0\u5f55\u9500\u91cf\n\t\t\t}\n\t\tif (k==yq) c[++lc]=i;                                   //\u8fbe\u5230\u9884\u671f\u5c31\u8bb0\u5f55\u4e0b\u7a0e\u6536\u548c\u8865\u8d34\n\t}\n\tif (lc>0) \n\t{\n\t\tint s=2000000000;\n\t\tfor (int i=1;i<=lc;i++) \n\t\t\tif (abs(c[i])<abs(s)) s=c[i];                       //\u627e\u7edd\u5bf9\u503c\u5c0f\u7684\u8f93\u51fa\n\t\tcout<<s;\n\t}\n\telse cout<<\"NO SOLUTION\";                                   //\u5982\u679c\u6ca1\u6709\u5c31\u8f93\u51faNO SOLUTION\n\treturn 0;\n}\n```",
        "postTime": 1563895924,
        "uid": 19457,
        "name": "\u5415\u5ce5\u8a00",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1023 \u3010\u7a0e\u6536\u4e0e\u8865\u8d34\u95ee\u9898\u3011"
    },
    {
        "content": "\u770b\u4e86\u5404\u4f4d\u5927\u4f6c\u7684\u65b0\u9896\u9898\u89e3\uff0c\u6211\u81ea\u6127\u4e0d\u5982\u3002\u4e8e\u662f\u6211\u5c31\u6309\u81ea\u5df1\u7684\u60f3\u6cd5\u5199\u4e86\u4e00\u4e2a\u7a0b\u5e8f\u3002\n\u4e3b\u8981\u5206\u56db\u6b65\uff1a\n\n1\u3001\u5982\u679c\u8d85\u8fc7\u9884\u671f\u4ef7\u683c\uff0c\u5219\u6700\u540e\u4e00\u4e2a\u8d4b\u503c\u4e3a\u8f93\u5165\u7b2c\u4e8c\u884c\u7684\u6210\u672c\u548c\u9500\u552e\u91cf\u3002\n\n2\u3001\u8fd9\u4e2a\u6709\u70b9\u9ebb\u70e6\uff0c\u5c31\u662f\u4ece\u6700\u540e\u4e00\u4e2a\u7684\u4ef7\u683c\u4e00\u76f4\u5faa\u73af\u523010000\uff0c\u9884\u5904\u7406\u53ef\u80fd\u9047\u5230\u7684\u6700\u5927\u503c\u3002\n\n3\u3001\u5982\u679c\u8f93\u5165\u7684\u65f6\u5019\u6ca1\u6709\u627e\u5230\u9884\u671f\u4ef7\u683c\uff0c\u5219\u518d\u627e\u4e00\u6b21\n\n4\u3001\u5b9a\u4f4d\u5229\u6da6\u6700\u5927\u7684\u90a3\u4e00\u7ec4\u6570\u636e\uff0c\u770b\u770b\u662f\u5426\u5927\u4e8e\u524d\u4e00\u4e2a\u548c\u540e\u4e00\u4e2a\n\n```cpp\n//\u8d85\u8fc7\u9884\u671f\u4ef7\u683c\n//\u5904\u7406\u6700\u5927\u7684\n//\u5bfb\u627e\u9884\u671f\u4ef7\u683c\n//\u641c \n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=10002;\nstruct government\n{\n\tint price,num;\n}a[N];\nint main()\n{\n\tint n,gc,gn,p=1,g=0;\n\tcin>>n>>gc>>gn;\n\twhile(cin>>a[p].price>>a[p].num&&a[p].price!=-1)\n\t{\n\t\tif(a[p].price==n)\n\t\t g=p;\n\t\tp++;\n\t}\n\tint wz=p;\n\tp--;\n\tint m;\n\tcin>>m;\n\tif(a[p].price>n&&g==0)//\u5982\u679c\u8d85\u51fa\u4e86\u9884\u671f\u4ef7\u683c  \n\t{\n\t\tbool b=0;\n\t\tfor(int i=1;i<=p;i++)\n\t\t if(a[i].price<n)\n\t\t {\n\t\t \ta[p].price=a[i].price;\n\t\t \ta[p].num=a[i].num;\n\t\t \tb=1;\n\t\t }\n\t\tif(!b)\n\t\t{\n\t\t\ta[p].price=gc;\n\t\t\ta[p].num=gn;\n\t\t}\n    }\n    for(int i=a[p].price+1;i<=N;i++)//\u5bfb\u627e\u6700\u5927\u7684 \n    {\n    \ta[wz].price=i;\n    \ta[wz].num=a[p].num-(m*(a[wz].price-a[p].price));//\u9700\u6c42\u7b2c\u4e00\u5b9a\u5f8b \n    \twz++;\n    }\n    if(g==0)\n     for(int i=p;i<=N;i++)//\u5bfb\u627e\u9884\u671f\u4ef7\u683c \n      if(a[i].price==n)\n      {\n      \tg=i;\n      \tbreak;\n      }\n    bool b=0;\n    for(int i=1;i<=N&&!b;i++)//\u5f00\u59cb\u641c\n\t{\n\t\tint x=(a[g].price-gc+i)*a[g].num;\n\t\tint y=(a[g-1].price-gc+i)*a[g-1].num;\n\t\tint z=(a[g+1].price-gc+i)*a[g+1].num;\n\t\tif(x>y&&x>z)\n\t\t{\n\t\t\tcout<<i;\n\t\t\tb=1;\n\t\t}\n\t}\n\tfor(int i=1;i<=N&&!b;i++)\n\t{\n\t\tint x=(a[g].price-gc-i)*a[g].num;\n\t\tint y=(a[g-1].price-gc-i)*a[g-1].num;\n\t\tint z=(a[g+1].price-gc-i)*a[g+1].num;\n\t\tif(x>=y&&x>=z)\n\t\t{\n\t\t\tcout<<i*-1;\n\t\t\tb=1;\n\t\t}\n\t}\n\tif(!b) cout<<\"NO SOLUTION\";\n}\n```",
        "postTime": 1536238043,
        "uid": 54712,
        "name": "Forestcgl",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1023 \u3010\u7a0e\u6536\u4e0e\u8865\u8d34\u95ee\u9898\u3011"
    },
    {
        "content": "# \u770b\u5230\u9898\u89e3\u91cc\u597d\u591a\u53bb\u89e3\u4e0d\u7b49\u5f0f\u4e86\uff0c\u6211\u5c31\u53d1\u4e00\u4e2a\u7eaf\u6a21\u62df\u9898\u89e3\n\n\u5bf9\u4e8e\u6bcf\u4e24\u4e2a\u4ef7\u683c\u4e4b\u95f4\uff0c\u56e0\u4e3a\u9898\u76ee\u8bf4\u76f8\u90bb\u4ef7\u4f4d\u95f4\u9500\u91cf\u7684\u53d8\u5316\u662f\u7ebf\u6027\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5904\u7406\u5904\u6bcf\u4e24\u4e2a\u4ef7\u683c\u95f4\u7684\u659c\u7387\u548c\u6bcf\u4e00\u79cd\u4ef7\u683c\u7684\u5355\u4ef7\n\n## \u63a5\u4e0b\u6765\u5c31\u5f00\u59cb\u6a21\u62df\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u5f53\u8865\u8d34\u4e0a\u6da8\u65f6\uff0c\u6700\u5927\u5229\u6da6\u65f6\u7684\u4ef7\u683c\u4e5f\u4f1a\u968f\u4e4b\u4e0a\u6da8\u3002\u53cd\u4e4b\uff0c\u5f53\u7a0e\u6536\u4e0a\u6da8\u65f6\uff0c\u6700\u5927\u5229\u6da6\u65f6\u7684\u4ef7\u683c\u4e5f\u4f1a\u968f\u4e4b\u4e0b\u964d\uff0c\u6240\u4ee5\u8fd9\u662f\u4e00\u4e2a\u5355\u8c03\u9012\u589e\u7684\u51fd\u6570\n\n\u6211\u4eec\u5148\u8ba1\u7b97\u51fa\u5f53\u4e0d\u8865\u8d34\u6216\u6536\u7a0e\u65f6\u8ba1\u7b97\u51fa\u6700\u5927\u5229\u6da6\u65f6\u7684\u4ef7\u683c\uff0c\u5982\u679c\u4ef7\u683c\u5927\u4e8e\u671f\u671b\uff0c\u5219\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u6bcf\u4e00\u4e2a\u8865\u8d34\uff0c\u5982\u679c\u8fd9\u65f6\u6700\u4f18\u4ef7\u683c\u662f\u671f\u671b\u5c31\u8f93\u51fa\u5e76\u9000\u51fa\u5faa\u73af\u3002\u5982\u679c\u4ef7\u683c\u5c0f\u4e8e\u671f\u671b\uff0c\u5219\u4ece\u5927\u5230\u5c0f\u679a\u4e3e\u6bcf\u4e00\u4e2a\u7a0e\u6536\uff0c\u5982\u679c\u8fd9\u65f6\u6700\u4f18\u4ef7\u683c\u662f\u671f\u671b\u5c31\u8f93\u51fa\u5e76\u9000\u51fa\u5faa\u73af\u3002\u624d33\u884c\u3002\u3002\u3002\n```cpp\n#include<cstdio>\nint exp,max,ans,pc,lc,ln,cnt,t=1,c,n,cc;\ndouble k[100005],num[100005],kk,nn;\nint main(){\n\tscanf(\"%d\",&exp);\n\tscanf(\"%d%d\",&c,&n); pc=c;\n\twhile(c!=-1&&n!=-1){\n\t\tlc=c,ln=n,num[c]=n; \n\t\tscanf(\"%d%d\",&c,&n);\n\t\tk[lc]=(n-ln)/(c-lc);//\u8ba1\u7b97\u659c\u7387 \n\t}\n\tscanf(\"%d\",&cnt);\n\tfor(int i=pc;i<=lc;++i)//\u5904\u7406\u51fa\u6bcf\u4e00\u4e2a\u4ef7\u683c\u7684\u9500\u552e\u91cf \n\t\tif(!num[i]) num[i]=kk*(i-cc)+nn;\n\t\telse kk=k[i],cc=i,nn=num[i];\n\twhile(ln-cnt>0) lc++,ln-=cnt,num[lc]=ln;\n\tfor(int i=pc;i<=lc;++i) if((i-pc)*num[i]>max) ans=i,max=(i-pc)*num[i];//\u5f53\u4e0d\u8865\u8d34\u6216\u6536\u7a0e\u65f6\u8ba1\u7b97\u51fa\u6700\u5927\u5229\u6da6\u65f6\u7684\u4ef7\u683c \n\tif(ans==exp) puts(\"0\");\n\telse if(ans>exp){//\u679a\u4e3e\u8865\u8d34 \n\t\tfor(int x=1;;x++){\n\t\t\tmax=ans=0;\n\t\t\tfor(int i=pc;i<=lc;++i) if((i-pc+x)*num[i]>=max) ans=i,max=(i-pc+x)*num[i];\n\t\t\tif(ans==exp){printf(\"%d\",x);return 0;}\n\t\t}\n\t}\n\telse{//\u679a\u4e3e\u7a0e\u6536 \n\t\tfor(int x=-1;;x--){\n\t\t\tmax=ans=0;\n\t\t\tfor(int i=pc+1;i<=lc;++i) if((i-pc+x)*num[i]>=max) ans=i,max=(i-pc+x)*num[i];\n\t\t\tif(ans==exp){printf(\"%d\",x);return 0;}\n\t\t}\n\t}\n} \n```",
        "postTime": 1526190594,
        "uid": 7449,
        "name": "dodo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1023 \u3010\u7a0e\u6536\u4e0e\u8865\u8d34\u95ee\u9898\u3011"
    },
    {
        "content": "\u6211\u5176\u5b9e\u4e0d\u4fe1\u8fd9\u9053\u9898\u53ea\u662f\u9ec4\u9898\u3002\u3002\u3002\n\n## \u9898\u76ee\u610f\u601d\n\u653f\u5e9c\u6709\u4e00\u4e2a\u9884\u671f\u4ef7\uff0c~~\u4e3a\u4e86\u4e0d\u4e22\u8138~~\uff0c\u653f\u5e9c\u641e\u4e86\u4e00\u4e2a\u201c\u7a0e\u6536\u4e0e\u8865\u8d34\u201d\u653f\u7b56\uff0c\u4f7f\u5f97\u552e\u4ef7\u6b63\u597d\u662f\u653f\u5e9c\u9884\u671f\u4ef7\u65f6\u603b\u5229\u6da6\u8fbe\u5230\u6700\u9ad8\u3002\n\n\u8865\u8d34a\u5143\u94b1\u8868\u793a\u6bcf\u5356\u51fa\u4e00\u4ef6\u5546\u54c1\u80fd\u591f\u76f4\u63a5\u591a\u5f97a\u5143\uff1b\u7a0e\u6536a\u5143\u94b1\u8868\u793a\u6bcf\u5356\u51fa\u4e00\u4ef6\u5546\u54c1\u5fc5\u987b\u4ea4\u51faa\u5143\u3002\n\n\u73b0\u5728\u6709\u51e0\u4e2a\u4ef7\u4f4d\uff08**\u539f\u4ef7\u4e5f\u662f\u4e00\u4e2a\uff0c\u5e76\u4e14\u662f\u7b2c\u4e00\u4e2a**\uff09\uff0c\u76f8\u90bb\u4ef7\u4f4d\u7684\u4e2d\u95f4\u90e8\u5206**\u6309\u7ebf\u6027\u589e\u957f**\uff0c\u6700\u540e\u4e00\u4e2a\u4ef7\u4f4d\u5f80\u540e\u90fd\u6309**\u8f93\u5165\u7684\u6700\u540e\u4e00\u4e2a\u6570\u9012\u51cf**\u3002\n\n\u653f\u5e9c\u60f3\u77e5\u9053\u8865\u8d34\u51e0\u5143\u94b1\u6216\u7a0e\u6536\u51e0\u5143\u94b1\u80fd~~\u8ba9\u81ea\u5df1\u4e0d\u4e22\u8138~~\uff0c\u5982\u679c\u6709\u591a\u89e3\uff0c**\u8f93\u51fa\u7edd\u5bf9\u503c\u6700\u5c0f\u7684**\u3002\n## \u5206\u6790\n\u5b9a\u4e49\u4e00\u4e2a\u8bb0\u5f55\u9500\u552e\u91cf\u7684\u6570\u7ec4xsl[i]\u8868\u793a\u5355\u4ef7\u4e3ai\u5143\u65f6\u7684\u9500\u552e\u91cf\u3002\n\n\u8bfb\u5165\u65f6\uff0c\u7528a,b\u8bb0\u5f55\u8bfb\u5165\u7684\u6570\uff0cc,d\u8bb0\u5f55\u4e0a\u6b21\u7684\u4e24\u4e2a\u6570\uff0c\u4ee5\u8ba1\u7b97\u4e2d\u95f4\u7684\u7ebf\u6027\u53d8\u5316\u3002\n\n\u7528\u4e00\u4e2aint\u578b\u51fd\u6570getmax(gqs)\u8bb0\u5f55\u5728\u8865\u8d34gqs(\u7ed9\u94b1\u6570,\u53ef\u4ee5\u4e3a\u8d1f)\u94b1\u65f6\u5355\u4ef7\u4e3a\u591a\u5c11\u603b\u5229\u6da6\u6700\u5927\u3002\n\n\u5982\u679cgetmax(0)\u5c31\u662f\u653f\u5e9c\u9884\u671f\u4ef7\uff0c\u5c31\u8f93\u51fa0\uff1b\u5982\u679cgetmax(0)\u5927\u4e8e\u653f\u5e9c\u9884\u671f\u4ef7\uff0c\u90a3\u4e48**\u4e00\u5b9a\u662f\u8865\u8d34**\uff0c\u8fd9\u6837\u624d\u80fd\u5728\u5355\u4ef7\u5c11\u65f6\u5f97\u5230\u66f4\u591a\u7684\u94b1\uff1b\u53cd\u4e4b\u5c31\u662f\u7a0e\u6536\u3002\n\n\u6211\u672c\u6765\u662f\u51c6\u5907\u641e\u4e8c\u5206\u6765\u904d\u5386\u7684\uff0c\u4f46\u6211\u592a\u5f31\u4e86\uff0c\u5bfc\u81f4\u6f0f\u6d1e\u767e\u51fa\u3002\u4e8e\u662f\u6211\u6362\u6210\u4e86\u66b4\u529b\u679a\u4e3e\uff0c\u4e5f\u80fd\u8fc7\u3002\u3002\u3002\u66b4\u529b\u5c31\u53ea\u7528\u4ece1\u679a\u4e3e\u5230\u4e00\u4e2a\u5f88\u5927\u7684\u6570\uff0c\u627e\u5230\u5c31\u8f93\u51fa\u5e76return\u5373\u53ef\u3002\n## \u4ee3\u7801\n```cpp\n#include<cstdio>\nusing namespace std;\nconst int MAXN=100010;\nint zf,cb,jg,sml;//\u653f\u5e9c\u9884\u671f\u4ef7,\u6210\u672c,\u6700\u5927\u4ef7\u683c,\u6700\u540e\u4e00\u4e2a\u4ef7\u4f4d\u5f80\u540e\u7684\u9012\u51cf\u6570\nint xsl[MAXN];//\u9500\u552e\u91cf\nint getmax(int gqs){//\u7ed9\u94b1\u6570\n    int maxm=-100000,maxa;//maxa\u8bb0\u5f55\u5355\u4ef7\u4e3a\u591a\u5c11\u603b\u5229\u6da6\u6700\u5927\n    for(int i=cb;i<jg;i++){//\u53ea\u7528\u4ece\u6210\u672c\u904d\u5386\u5230\u6700\u5927\u4ef7\u683c\n    \tint k=(i-cb+gqs)*xsl[i];//\u8ba1\u7b97\u603b\u5229\u6da6\n    \tif(k>=maxm) maxm=k,maxa=i;//\u4fee\u6539\n\t}\n\treturn maxa;\n}\nint main(){\n\tint a,b,c,d,i;\n\tscanf(\"%d%d%d\",&zf,&c,&d);//\u539f\u59cb\u7684\u4e24\u4e2a\u6570\n\txsl[c]=d;cb=c;//c\u540e\u9762\u8981\u53d8\u5316\uff0c\u63d0\u524dcb=c\n\twhile(scanf(\"%d%d\",&a,&b)&&a!=-1&&b!=-1){//\u8f93\u5165\uff0c\u5982\u679c\u662f-1\u5c31\u9000\u51fa\n\t\tfor(i=c+1;i<=a;i++) xsl[i]=d-(b-d)/(c-a)*(i-c);//\u7ebf\u6027\u516c\u5f0f\n\t\tc=a,d=b;//\u51c6\u5907\u4e0b\u4e00\u6b21\u8bfb\u5165\n\t}\n\tscanf(\"%d\",&sml);\n\tfor(i=c+1;;i++){//\u8ba1\u7b97\u6700\u540e\u4e00\u4e2a\u4ef7\u4f4d\u5f80\u540e\u7684\u9500\u552e\u91cf\n\t\txsl[i]=xsl[i-1]-sml;\n\t\tif(xsl[i]<0) break;//\u5982\u679c\u52300\u5c31\u4e0d\u7b97\u4e86\n\t}\n\tjg=i-1;//\u8bb0\u5f55\u6700\u5927\u4ef7\u683c\uff0c\u8981-1\n\tint s=getmax(0);//\u6ca1\u6709\u7a0e\u6536\u548c\u8865\u8d34\n    //\u5206\u7c7b\u8ba8\u8bba\n\tif(s==zf) printf(\"0\");//\u76f4\u63a5\u8f93\u51fa0\n\tif(s>zf){//\u8865\u8d34\n\t\tfor(i=1;i<jg;i++){//\u904d\u5386\n\t\t\tif(getmax(i)==zf){//\u627e\u5230\n\t\t\t\tprintf(\"%d\",i);//\u8f93\u51fa\n\t\t\t\treturn 0;//\u8fd4\u56de\n\t\t\t}\n\t\t}\n\t\tprintf(\"NO SOLUTION\");//\u6ca1\u627e\u5230\n\t}\n\tif(s<zf){//\u7a0e\u6536\n\t\tfor(i=-1;i>-jg;i--){//\u540c\u4e0a\n\t\t\tif(getmax(i)==zf){\n\t\t\t\tprintf(\"%d\",i);\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t\tprintf(\"NO SOLUTION\");\n\t}\n\treturn 0;//\u534e\u4e3d\u7ed3\u675f\n}\n```",
        "postTime": 1569818983,
        "uid": 130981,
        "name": "dingcx",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1023 \u3010\u7a0e\u6536\u4e0e\u8865\u8d34\u95ee\u9898\u3011"
    },
    {
        "content": "### \u8fd9\u4e2a\u9898\u505a\u7684\u6211\u6709\u70b9\u6000\u7591\u4eba\u751f\uff0c\u8bfb\u4e86\u597d\u591a\u904d\u9898\u6ca1\u770b\u61c2\u2026\u2026\u6700\u540e\u770b\u4e86\u51e0\u7bc7\u9898\u89e3\u624d\u660e\u767d\uff0c\u8fd9\u4e2a\u9898\u4e3b\u8981\u5c31\u662f\u6784\u9020\u4e0d\u7b49\u5f0f\uff0c\u7136\u540e\u5bf9\u4f4d\u7f6e\u6570\u7684\u8303\u56f4\u8fdb\u884c\u7f29\u5c0f\u2026\u2026\n### \u4f46\u662f\u2026\u2026\u9898\u76ee\u8bf4\u7ebf\u6027\u53d8\u5316\uff0c\u4f46\u7ed9\u7684\u6837\u4f8b\u91cc\u2026\u202631\u4e3a\u4ec0\u4e48\u5bf9\u5e94\u7684\u662f110\u2026\u2026\u4e0d\u5e94\u8be5\u662f115\u5417\uff01\uff01\uff01\u597d\u4e86\u8fd9\u7b97\u4e00\u4e2a\u5751\u2026\u2026\n### \u7136\u540e\u6700\u540e\u4e00\u4e2a\u6570\u636e\u70b9\u2026\u2026\u4e00\u4e0b\u5b50\u4e0b\u964d\u5b8c\u4e86\u662f\u4ec0\u4e48\u9b3c\uff01\uff01\uff01\n\u88ab\u641e\u4e86\u534a\u5929\uff0c\u6700\u540e\u7ec8\u4e8eAC\u2026\u2026\n\n### \u4ee5\u6837\u4f8b\u4e3a\u4f8b\uff0c\u653f\u5e9c\u6536\uff08\u8865\uff09\u7684\u94b1\u8bbe\u4e3ax\uff0c\n\u4e8e\u662f\u6211\u4eec\u7684\u76ee\u6807\u603b\u5229\u6da6tot\u662f\n\t  $$tot=(31-28+x)*110$$\n\u7136\u540e\u6211\u4eec\u7ed3\u5408\u9898\u76ee\u6240\u7ed9\u4fe1\u606f\u77e5\u9053\uff0c\u8fd9\u4e2a\u503c\u662f\u5229\u6da6\u6700\u5927\u7684\uff0c\u6240\u4ee5\u5f53\u7136\u6bd4\u5176\u4ed6\u503c\u90fd\u5927\u54af\uff01\n### \u6211\u4eec\u8fd9\u4e2a\u503c\u662f\u5728\u5f97\u5230\u8fd9x\u5143\u8ba1\u7b97\u51fa\u6765\u7684\uff0c\u90a3\u4e48\u5176\u4ed6\u4ef7\u4f4d\u5f53\u7136\u4e5f\u8981\u5f97\u5230x\u5bf9\u5427\uff01\u56e0\u4e3a\u5f97\u5230\u653f\u5e9c\u8fd9\u4e9b\u94b1\uff0c\u662f\u6240\u6709\u4ef7\u4f4d\u7684\u5355\u4f4d\u5229\u6da6\u90fd\u6539\u53d8\u4e86\uff0c\u6240\u4ee5\u5176\u4ed6\u4ef7\u94b1\u7684\u603b\u5229\u6da6\u5c31\u662f\n\n### tot'=(\u5f53\u524d\u4ef7\u683c-\u6210\u672c\u4ef7-\u653f\u5e9c\u8865\u8d34)*\u5f53\u524d\u4ef7\u683c\u5bf9\u5e94\u7684\u9500\u552e\u91cf \n\n\n\u6240\u4ee5\u53ea\u8981\u627e\u51fa\u627e\u6ee1\u8db3\n$$tot>=tot'$$\n\u7684x\u7684\u8303\u56f4\u5c31\u884c\uff01  \n\u5c55\u5f00\u8fd9\u4e2a\u5f0f\u5b50\u540e\uff0cx\u524d\u7684\u7cfb\u6570\u53ef\u80fd\u4f1a\u662f\u8d1f\u6570\u4e5f\u53ef\u80fd\u662f\u6b63\u6570\uff0c\u4e0d\u7b49\u4e24\u8fb9\u540c\u65f6\u9664\u4ee5\u8d1f\u6570\u65f6\uff0c\u4e0d\u7b49\u53f7\u65b9\u5411\u4f1a\u6539\u53d8\uff0c\u6240\u4ee5\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u6c42\u51fax\u7684\u6700\u5c0f\u503c\u548c\u6700\u5927\u503c  \n\u5f0f\u5b50\u5c31\u5728\u7eb8\u4e0a\u5c55\u5f00\u51fa\u6765\u770b\u770b\u5427\uff01\n\u4e0a\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=100010;\nint les,lstx,lsty,tot=1,z,k,x,y,zf,cb,xl,js,a[N],b[N];\ndouble umin=-21474836.0,umax=21474836.0;\ninline void deal(){\n\tscanf(\"%d%d%d%d%d\",&zf,&cb,&xl,&x,&y);\n\tk=(y-xl)/(x-cb);\n\tz=y-k*x,lstx=cb,a[cb]=cb,b[cb]=xl;\n//\u6ce8\u610f\u4e0b\u9762\u7684for\u5faa\u73af\u662f\u9632\u6b62\u6700\u540e\u4e00\u4e2a\u6570\u636e\u70b9\u7684\u6bd2\u7624\u64cd\u4f5c\u7279\u5224\u7684\n\tfor(int i=lstx+1;i<x;++i)\tb[i]=k*i+z,++tot;\n\twhile(scanf(\"%d%d\",&x,&y)){\n\t\tfor(int i=lstx+1;i<x;++i)\tb[i]=k*i+z,++tot;\n\t\tif(x==-1&&y==-1)\tbreak;\n\t\tb[x]=y,++tot,lstx=x,lsty=y;\n\t}\n\tscanf(\"%d\",&les);\n\tfor(int i=lstx+1;;++i){\n\t\tx=i,y=lsty-les,lsty-=les;\n\t\tif(y<=0)\tbreak;\n\t\tb[i]=y,++tot;\n\t}\n\tfor(int i=cb;i<cb+tot;++i)\ta[i]=(i-cb)*b[i];\n}\nvoid fw(){\n\tfor(int i=cb;i<cb+tot;++i)\n\t\tif(b[zf]-b[i]>0)\n\t\t\tumin=max((double)((double)(i-cb)*b[i]-(double)(zf-cb)*b[zf])/(double)(b[zf]-b[i]),umin);\t\n\t\telse if(b[zf]-b[i]<0)\n\t\t\tumax=min((double)((double)(i-cb)*b[i]-(double)(zf-cb)*b[zf])/(double)(b[zf]-b[i]),umax);\t\n}\nint main(){\n\tdeal(),fw();\n\tif(umin>umax) printf(\"NO SOLUTION\\n\");\n\telse if(umin>0)\tprintf(\"%d\",int(ceil(umin)));\n\telse if(umax<0)\tprintf(\"%d\",int(floor(umax)));\n\telse puts(\"0\");\n\treturn 0;\n}\n```",
        "postTime": 1547906931,
        "uid": 136822,
        "name": "\u5eb7\u5e08\u5085",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1023 \u3010\u7a0e\u6536\u4e0e\u8865\u8d34\u95ee\u9898\u3011"
    },
    {
        "content": "\u77ed\u4ee3\u7801\uff0c\u957f\u6ce8\u91ca\uff0c\u65f6\u95f4\u4e3a0\n\n```cpp\n#include<iostream>\n#include<vector>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nint xl[100001];\t\t\t\t\t//\u4ef7\u683c\u5bf9\u5e94\u4e8e\u9500\u91cf\u7684\u6570\u7ec4\nvector<int> jd;\t\t\t\t\t//\u5b58\u50a8\u9898\u76ee\u7ed9\u5b9a\u7684(\u4ef7\u683c,\u9500\u91cf)\u8282\u70b9\uff0c\u53ea\u8bb0\u5f55\u4ef7\u683c\nint pp, djz, cb, zdjg;\t\t\t//pp\u4e3a\u9884\u6d4b\u4ef7\uff0cdjz\u4e3a\u6570\u636e\u6700\u540e\u4e00\u884c\u7684\u9500\u91cf\u9012\u51cf\u503c\n\t\t\t\t\t\t\t\t//cb\u4e3a\u6210\u672c\uff0czdjg\u4e3a\u6709\u9500\u91cf\u7684\u6700\u5927\u4ef7\u683c\nbool read(int & a, int & b){\t\t\n\tcin>>a>>b;\t\t\t\t\t//\u8be5\u51fd\u6570\u65e0\u9700\u8fc7\u591a\u89e3\u91ca\n\tif(a==-1 && b==-1)\n\t\treturn false;\n\treturn true;\n}\nint main(){\n\tcin>>pp;\n\tint tprice, txl;\t\t\t//\u4e34\u65f6\u53d8\u91cf\uff0c\u5b58\u50a8\u4ef7\u683c\u548c\u9500\u91cf\n\tread(tprice, txl);\t\t\t//\u5148\u628a\u6210\u672c\u8bb0\u5f55\u4e0b\u6765\n\tcb=tprice;\t\t\t\t\t\n\txl[tprice]=txl;\t\t\t\t//\u522b\u5fd8\u4e86\u5f52\u5165xl\u6570\u7ec4\uff0c\u8fd9\u662f\u7b2c\u4e00\u4e2a\u8282\u70b9\n\tjd.push_back(tprice);\t\t//\u8bb0\u5f55\u8282\u70b9\n\twhile(read(tprice, txl)){\t//\u5faa\u73af\u8bfb\u5165\u6570\u636e\n\t\txl[tprice]=txl;\n\t\tjd.push_back(tprice);\n\t}\n\tcin>>djz;\t\t\t\t\t//\u8bfb\u5165\u8f93\u5165\u6570\u636e\u7684\u6700\u540e\u4e00\u884c\uff0c\u9500\u91cf\u9012\u51cf\u503c\n\tsort(jd.begin(), jd.end());\t//\u6570\u636e\u63d0\u4f9b\u7684(\u4ef7\u683c,\u9500\u91cf)\u8282\u70b9\u4e0d\u4e00\u5b9a\u6709\u5e8f\n\n\tfor(int i=0; i<jd.size(); i++){\t//\u626b\u63cf\u8282\u70b9\uff0c\u6309\u7167\u7ebf\u6027\u5173\u7cfb\u8ba1\u7b97\u6bcf\u4e2a\u4ef7\u683c\u5bf9\u5e94\u7684\u9500\u91cf\n\t\tif(i!=jd.size()-1){\t\t\t//\u4ecb\u4e8e\u4e24\u4e2a\u4ef7\u683c\u8282\u70b9\u4e4b\u95f4\u7684\u9500\u91cf\u8ba1\u7b97\n\t\t\tint dwzj=(xl[jd[i]]-xl[jd[i+1]])/(jd[i+1]-jd[i]);\n\t\t\tfor(int j=jd[i]+1; j<jd[i+1]; j++)\n\t\t\t\txl[j]=xl[j-1]-dwzj;\n\t\t}else{\t\t\t\t\t//\u9ad8\u4e8e\u7ed9\u5b9a\u7684\u6700\u5927\u8282\u70b9\u7684\u9500\u91cf\u8ba1\u7b97\n\t\t\tint x=1;\n\t\t\twhile(xl[jd[i]]-x*djz>0){\t\t//\u9500\u91cf<=0\u65f6\uff0c\u4ef7\u683c\u5c31\u65e0\u6548\u4e86\n\t\t\t\txl[jd[i]+x]=xl[jd[i]]-x*djz;\n\t\t\t\tx++;\n\t\t\t}\n\t\t\tzdjg=jd[i]+x-1;\t\t\t\t\t//\u4ee5\u6b64\u786e\u5b9azdjg\uff08\u6700\u5927\u4ef7\u683c\uff09\n\t\t}\n\t}\n\tint xj, sj;\t\t\t\t\t\t\t\t//\u4e0b\u754c\u548c\u4e0a\u754c\n\tint a=xl[pp], b=xl[pp-1], c=xl[pp+1], d=pp-cb;\t//\u5173\u4e8e\u516c\u5f0f\u7684\u63a8\u5bfc\uff0c\u89c1\u4ed6\u4eba\u9898\u89e3\n\t//(d+x)a>(d+x-1)b => x<(da-db+b)/(b-a)\t\t\t//\u8fd9\u91cc\u60f3\u8bf4\u7684\u662f\u53ea\u8981\u4fdd\u8bc1\n\tfloat tf=(float)(d*a-d*b+b)/(b-a);\t\t\t\t//\u4ef7\u683c\u4e3app\u65f6\u7684\u603b\u5229\u6da6\u5927\u4e8e\u4ef7\u683c\u4e3app-1\u548cpp+1\n\tint   ti=(d*a-d*b+b)/(b-a);\t\t\t\t\t\t//\u65f6\u7684\u603b\u5229\u6da6\u5c31\u53ef\u4ee5\u6c42\u51fa\u4e0a\u3001\u4e0b\u754c\uff0c\u5229\u6da6\u51fd\u6570\u5e94\u8be5\n\tif(fabs(tf-ti)>1e-6) sj=ti-1; else sj=ti; \t\t//\u662f\u5148\u9012\u589e\u518d\u9012\u51cf\u7684\uff0c\u53ea\u6709\u4e00\u4e2a\u9876\u5cf0\uff0c\u8fd9\u6837\u5c31\u51cf\u5c11\n\t//(d+x)a>(d+x+1)c => x>(dc+c-da)/(a-c)\t\t\t//\u4e00\u4e2a\u6570\u91cf\u7ea7\u7684\u65f6\u95f4\u590d\u6742\u5ea6\n\ttf=(float)(d*c+c-d*a)/(a-c);\t\t\t\t\t//\u65f6\u95f4\u4e0d\u4e3a0\u7684\u4ee3\u7801\u5c31\u662f\u679a\u4e3e\u4e86\u6240\u6709\u7684\u4ef7\u683c\u5bfc\u81f4\u7684\n\tti=(d*c+c-d*a)/(a-c);\n\tif(fabs(tf-ti)>1e-6) xj=ti+1; else xj=ti;\t\t//\u5173\u4e8e\u7cbe\u5ea6\u7684\u95ee\u9898\u89c1\u5176\u5b83\u9898\u89e3\n\n\tif(xj>sj)\tcout<<\"NO SOLUTION\"<<endl;\t\t\t//\u4e0a\u4e0b\u754c\u4f4d\u7f6e\u53cd\u4e86\u80af\u5b9a\u65e0\u89e3\n\telse{\n\t\tif(abs(sj)<abs(xj))\tcout<<sj<<endl;\t\t\t//\u8f93\u51fa\u7edd\u5bf9\u503c\u6700\u5c0f\u7684\u53d8\u91cf\n\t\telse\t\t\t\tcout<<xj<<endl;\n\t}\t\t\t\t\t\t\t\t\t\t\t\t//\u8fd9\u4e2a\u9898\u505a\u4e86\u8ba9\u4eba\u5f88\u4e0d\u8212\u670d\u2026\u2026\uff0c\u8fd8\u6709\u6a21\u7cca\u7684\u5730\u65b9\n\treturn 0;\t\t\t\t\t\t\t\t\t\t//\u6700\u53ef\u6015\u7684\u662f\u770b\u4e0d\u61c2\u9898\uff01\uff01\uff01\n} \t\t\t\t\t\t\t\t\t\t\t\t\t//\u4e8b\u540e\u60f3\u4e86\u60f3\uff0c\u8fd9\u5e94\u8be5\u662f\u5b8f\u89c2\u7ecf\u6d4e\u8c03\u63a7\u7684\u4e00\u79cd\u65b9\u6cd5\uff0c\u633a\u6709\u610f\u601d\n```",
        "postTime": 1520652060,
        "uid": 1034,
        "name": "greenlcat",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1023 \u3010\u7a0e\u6536\u4e0e\u8865\u8d34\u95ee\u9898\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u7684\u96be\u70b9\u5728\u4e8e\u5c06**\u653f\u5e9c\u8865\u8d34\u6216\u6536\u7a0e**\u53d8\u6210**\u6700\u4f18\u89e3**\n\n\u4e0b\u9762\u6211\u4eec\u6765\u60f3\u4e00\u4e0b**\u7ed3\u679c\u5fc5\u5b9a\u5b58\u5728\u7684\u60c5\u51b5**\n\n1. **\u5148\u5047\u8bbe\u653f\u5e9c\u4e0d\u8865\u8d34\u4e5f\u4e0d\u6536\u7a0e**\n\n\u6700\u540e\u6240\u6709\u7684\u7ed3\u679c\u5fc5\u5b9a\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u5229\u6da6\u6700\u5927\u503c\uff0c\u60f3\u50cf\u4e00\u4e2a\u5750\u6807\u7cfb\uff0cx\u8f74\u662f\u5355\u4ef7\uff0cy\u8f74\u662f\u5229\u6da6\u3002\n\n2.**\u5047\u8bbe\u653f\u5e9c\u6536\u7a0e**\n\n\u6709\u4e00\u4e2a\u89c4\u5f8b\u662f**\u4ef7\u683c\u8d8a\u5927\uff0c\u9500\u552e\u91cf\u8d8a\u4f4e**\u3002  \n\u653f\u5e9c\u6bcf**\u6536\u4e00\u5143\u7684\u7a0e**\uff0c\u60c5\u51b51\u4e2d\u8ba1\u7b97\u7684\u6240\u6709**\u5355\u4ef7\u5229\u6da6\u503c\u90fd\u4f1a\u51cf\u5c11\u9500\u552e\u91cf*1\u7684\u94b1**\uff1b\n\n\u90a3\u4e48**\u9500\u552e\u91cf\u8d8a\u5927\u7684\u5355\u4ef7\u7684\u5229\u6da6\u503c\u51cf\u5c11\u7684\u8d8a\u591a**\uff1b\n\n\u5219\u539f\u6765\u6700\u5927\u503c\u5229\u6da6\u51cf\u5c11\u7684\u6bd4\u53f3\u8fb9\u6700\u63a5\u8fd1\u7684\u5229\u6da6\u51cf\u5c11\u7684\u591a\uff0c**\u6240\u4ee5\u6700\u5927\u5229\u6da6\u5411\u53f3\u504f\u79fb\uff1b**\n\n3.**\u5047\u8bbe\u653f\u5e9c\u8865\u8d34**\n\n\u540c2\u6240\u8ff0\uff1a\n\n\u539f\u6765\u6700\u5927\u5229\u6da6\u589e\u52a0\u7684\u6bd4\u5de6\u8fb9\u6700\u63a5\u8fd1\u7684\u5229\u6da6\u589e\u52a0\u7684\u5c11\uff0c**\u6240\u4ee5\u6700\u5927\u5229\u6da6\u5de6\u79fb\uff1b**\n\n4.**\u7ed3\u8bba\uff1a**\n\n\u6211\u4eec\u53ea\u9700\u8981\u6c42\u51fa\u653f\u5e9c**\u4e0d\u8865\u8d34\u4e5f\u4e0d\u6536\u7a0e\u65f6**\u8ddd\u79bb\u653f\u5e9c\u671f\u671b\u503c\u6700\u8fd1\u7684\u5355\u4ef7\u5728\u671f\u671b\u503c\u7684\u5de6\u6216\u53f3\uff0c\u8fdb\u800c\u5224\u65ad\u6536\u7a0e\u6216\u8865\u8d34\u591a\u5c11\uff0c\u4ece\u800c\u5c06\u6700\u5927\u5229\u6da6\u504f\u79fb\u5230\u671f\u671b\u503c\u3002\u6700\u540e\u8f93\u51fa\u6536\u7a0e\u6216\u8865\u8d34\u7684\u591a\u5c11\u3002\n\n\u5f53\u7136\u60f3\u8d77\u6765\u7b80\u5355\uff0c\u8f6c\u5316\u4e3a\u4ee3\u7801\u6bd4\u8f83\u96be\uff0c\u4e0b\u9762\u6765\u4e0a\u4ee3\u7801\uff1b\n\n```cpp\n#include<iostream>\nusing namespace std;\nstruct Price//\u6bcf\u4e2a\u4ef7\u683c\u5bf9\u5e94\u7684\u4fe1\u606f\n{\n\tint num;//\u9500\u91cf\n\tfloat money;//\u5229\u6da6\n};\nPrice price[100000];//\u8fd9\u4e2a\u7d22\u5f15\u662f\u4ef7\u683c\u4fbf\u4e8e\u540e\u8fb9\u8865\u4fe1\u606f\nint BestPrice;//\u6700\u4f18\u4ef7\u683c\nfloat BestMoney;//\u6700\u4f18\u4ef7\u683c\u5bf9\u5e94\u7684\u5229\u6da6\nint HopePrice, LowMoney, Maxnum;//\u653f\u5e9c\u671f\u671b\u503c\uff0c\u6700\u4f4e\u4ef7\uff0c\u6700\u5927\u9500\u552e\u91cf\n  void Best(int Price,float money)//\u5224\u65ad\u6700\u4f18\u89e3\n{\n\tif (money > BestMoney)\n\t{\n\t\tBestMoney = money;\n\t\tBestPrice = Price;\n\t}\n\telse if (money == BestMoney)\n\t{\n\t\tif (abs(Price - HopePrice) < abs(BestPrice - HopePrice))//\u5224\u65ad\u6700\u63a5\u8fd1\u671f\u671b\u503c\u7684\u5355\u4ef7\n\t\t{\n\t\t\tBestPrice = Price;\n\t\t}\n\t}\n}\nint main()\n{\n\tcin >> HopePrice >> LowMoney >> Maxnum;\n  \n\tint tempPrice, tempnum;\n\tint tempPrice2=LowMoney, tempnum2=Maxnum;\n  //\u4e0a\u8fb9\u56db\u4e2a\u662f\u4e34\u65f6\u5de5\uff0c\u76f8\u90bb\u5355\u4ef7\u95f4\u662f\u7ebf\u6027\u7684\uff0c\u8bb0\u5f55\u76f8\u90bb\u5355\u4ef7\n\tBestPrice = LowMoney, BestMoney = 0;\n  \n\twhile (true)\n\t{//\u7b97\u5f0f\u6bd4\u8f83\u6050\u6016\uff0c\u5176\u5b9e\u53ea\u662f\u540d\u5b57\u957f\n\t\tcin >> tempPrice >> tempnum;\n\t\tif (tempPrice == -1 && tempnum == -1)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\tif (tempPrice - tempPrice2 == 1)\n\t\t{//\u76f8\u90bb\u5355\u4ef7\u76f4\u63a5\u8d4b\u503c\n\t\t\tprice[tempPrice].num = tempnum;\n\t\t\tprice[tempPrice].money = (tempPrice - LowMoney)*price[tempPrice].num;\n\t\t\tBest(tempPrice, price[tempPrice].money);\n\t\t}\n\t\telse\n\t\t{//\u4e0d\u76f8\u90bb\uff0c\u8865\u4e0a\u5c11\u7684\u5355\u4ef7\u4fe1\u606f\n\t\t\tint Chazhi = (tempnum - tempnum2) / (tempPrice - tempPrice2);\n\t\t\twhile (tempPrice2 != tempPrice)\n\t\t\t{\n\t\t\t\tprice[++tempPrice2].num = tempnum2 += Chazhi;\n\t\t\t\tprice[tempPrice2].money = price[tempPrice2].num*(tempPrice2 - LowMoney);\n\t\t\t\tBest(tempPrice2, price[tempPrice2].money);\n\t\t\t}\n\t\t}\n\t\ttempPrice2 = tempPrice;\n\t\ttempnum2 = tempnum;\n\t}//\u5355\u4ef7\u8f93\u5b8c\u4e86\n\n\tint cha;\n\tcin >> cha;\n\ttempnum2 -= cha;//2\u53f7\u4e34\u65f6\u5de5\u662f\u6700\u540e\u4e00\u6b21\u8f93\u5165\u7684\u5355\u4ef7\u4fe1\u606f\n\twhile (tempnum2 > 0)\n\t{//\u8d85\u8fc7\u8f93\u5165\u5355\u4ef7\u7684\u6700\u5927\u503c\uff0c\u5c06\u6309cha\u51cf\u5c11\u9500\u552e\u91cf\n\t\tprice[++tempPrice2].num = tempnum2;\n\t\tprice[tempPrice2].money = (tempPrice2 - LowMoney)*price[tempPrice2].num;\n\t\tBest(tempPrice2, price[tempPrice2].money);\n\t\ttempnum2 -= cha;\n\t}//\u5355\u4ef7\u4fe1\u606f\u5168\u90e8\u5f55\u5165\n  \n\tif (tempPrice2 < HopePrice)\n\t{//2\u53f7\u4e34\u65f6\u5de5\u662f\u6700\u5927\u5355\u4ef7\n\t\tcout << \"NO SOLUTION\" << endl;\n\t}\n\telse\n\t{//\u6700\u5927\u5229\u6da6\u504f\u79fb\u8981\u6328\u4e2a\u504f\u79fb\uff0c\u6211\u7b97\u6cd5\u4e0d\u597d\n\t\tint Result = 0, temp = 0;\n     //\u603b\u8865\u8d34\u6216\u7a0e\u6536\u6570\uff0c\u4e24\u76f8\u90bb\u4ef7\u4f4d\u6700\u5927\u5229\u6da6\u8f6c\u6362\u7684\u8865\u8d34\u6216\u6536\u7a0e\u7684\u589e\u91cf\uff1b\n\t\tif (BestPrice == HopePrice)\n\t\t{\n\t\t\tcout << Result << endl;\n\t\t}\n\t\telse if (BestPrice > HopePrice)\n\t\t{//\u8865\u8d34\n\t\t\twhile (BestPrice!=HopePrice)\n\t\t\t{//\u5411\u5de6\u9010\u4e2a\u504f\u79fb\n\t\t\t\tif (Result != 0)\n\t\t\t\t{\n\t\t\t\t\tprice[BestPrice - 1].money += Result * price[BestPrice-1].num;//\u66f4\u65b0\u6570\u636e\n\t\t\t\t}\n  \n\t\t\t\tResult += temp = abs((price[BestPrice].money - price[BestPrice - 1].money)/ (price[BestPrice - 1].num - price[BestPrice].num)) + 1;\n  //\u8bb0\u5f55\u589e\u91cf\u548c\u603b\u6570\n  \n\t\t\t\tprice[BestPrice].money += temp * price[BestPrice].num;\n\t\t\t\tprice[BestPrice - 1].money += temp * price[BestPrice - 1].num;\n  //\u66f4\u65b0\u6570\u636e\n\t\t\t\tBestPrice--;\n\t\t\t}\n\t\t\tcout << Result << endl;\n\t\t}\n\t\telse\n\t\t{//\u6536\u7a0e\n\t\t\twhile (BestPrice != HopePrice)\n\t\t\t{//\u5411\u53f3\u9010\u4e2a\u504f\u79fb\uff0c\u6ce8\u91ca\u540c\u7406\n\t\t\t\tif (Result != 0)\n\t\t\t\t{\n\t\t\t\t\tprice[BestPrice + 1].money -= Result * price[BestPrice+1].num;\n\t\t\t\t}\n\t\t\t\tResult += temp = abs((price[BestPrice].money - price[BestPrice + 1].money)\n\t\t\t\t\t/ (price[BestPrice + 1].num - price[BestPrice].num)) + 1;\n\t\t\t\tprice[BestPrice].money -= temp * price[BestPrice].num;\n\t\t\t\tprice[BestPrice + 1].money -= temp * price[BestPrice + 1].num;\n\t\t\t\tif (price[BestPrice+1].money <= 0)\n\t\t\t\t{\n\t\t\t\t\tcout << \"NO SOLUTION\" << endl;\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tBestPrice++;\n\t\t\t}\n\t\t\tcout << Result * -1 << endl;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\u4f60\u80fd\u8ba4\u771f\u770b\u5b8c\u662f\u6211\u6700\u5927\u7684\u8363\u5e78\uff0c\u5e0c\u671b\u5bf9\u4f60\u6709\u6240\u5e2e\u52a9\u3002Thank you",
        "postTime": 1552881785,
        "uid": 172776,
        "name": "\u6f02\u6d41\u6728\u5076",
        "ccfLevel": 0,
        "title": "1023\u6613\u7406\u89e3"
    },
    {
        "content": "\u9644\u4e00\u4e2a\u7eaf\u66b4\u529b\u7684\u9898\u89e3\uff0c\u9884\u671f\u4ef7\u683c\u7684\u4e24\u8fb9\u90fd\u50cf\u662f\u4e00\u4e2a\u4e8c\u6b21\u51fd\u6570\uff0c\u6536\u7a0e\u662f\u4e3a\u4e86\u8ba9\u524d\u9762\u7684\u51fd\u6570\u6700\u5927\u503c\u5411\u9884\u671f\u6536\u655b\uff0c \u8865\u8d34\u662f\u4e3a\u4e86\u8ba9\u540e\u9762\u7684\u51fd\u6570\u6700\u5927\u503c\u5411\u9884\u671f\u6536\u655b\u3002\u5982\u679c\u4e24\u8fb9\u7684\u6700\u5927\u503c\u90fd\u4e0d\u662f\u9884\u671f\uff0c\u90a3\u5fc5\u7136NO SOLUTION\u3002\u5982\u679c\u4e24\u8fb9\u7684\u51fd\u6570\u4e2d\u6709\u4e00\u8fb9\u7684\u51fd\u6570\u6700\u5927\u503c\u4e0d\u662f\u9884\u671f\uff0c\u90a3\u4e48\u5c31\u4ece1\u5f00\u59cb\u6536\u7a0e\uff08\u8865\u8d34\uff09\uff0c\u77e5\u9053\u9884\u671f\u4ef7\u683c\u5927\u4e8e\u7b49\u4e8e\u5b83\u81ea\u5df1\u4e24\u8fb9\u76f8\u90bb\u7684\u4ef7\u683c\u7684\u6700\u5927\u5229\u6da6\u3002\n\u4ed8\u4e2a\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nmap<int, int> mp;\n\nint main()\n{\n    int yq, yqxl;\n    scanf(\"%d\", &yq);\n    int cb, cx;\n    scanf(\"%d %d\", &cb, &cx);\n    int dj, xl;\n    int lmax = -1, rmax = -1;\n    int lastd = cb, lastx = cx;\n    while(~scanf(\"%d %d\", &dj, &xl) && dj != -1 && xl != -1)\n    {\n        if(dj == yq)\n            yqxl = xl;\n        if(dj - lastd > 1)\n        {\n            for(int i = lastd + 1; i < dj; i++)\n            {\n                if(i == yq)\n                    yqxl = lastx + ((xl - lastx) / (dj - lastd)) * (i - lastd);\n                mp[i] = lastx + ((xl - lastx) / (dj - lastd)) * (i - lastd);\n            }\n        }\n        mp[dj] = xl;\n        lastd = dj;\n        lastx = xl;\n    }\n    int down;\n    scanf(\"%d\", &down);\n    lastd++;\n    lastx -= down;\n    while(lastx > 0)\n    {\n        if(lastd == yq)\n            yqxl = lastx;\n        mp[lastd] = lastx;\n        lastd++;\n        lastx -= down;\n    }\n    map<int, int>::iterator it;\n    for(it = mp.begin(); it->first != yq; it++)\n    {\n        if((it->first - cb) * it->second > lmax)\n            lmax = (it->first - cb) * it->second;\n    }\n    for(it = mp.find(yq + 1); it != mp.end(); it++)\n    {\n        if((it->first - cb) * it->second > rmax)\n            rmax = (it->first - cb) * it->second;\n    }\n    int ans = 0;\n    if(lmax >= (yq - cb) * yqxl)\n    {\n        for(int i = 1; i <= yq - cb; i++)\n        {\n            if((yq - i - cb) * yqxl >= mp[yq - 1] * (yq - 1 - i - cb))\n            {\n                ans = -i;\n                break;\n            }\n        }\n    }\n    if(rmax >= (yq - cb) * yqxl)\n    {\n        for(int i = 1;i < 999; i++)\n        {\n            if((yq + i - cb) * yqxl >= mp[yq + 1] * (yq + 1 + i - cb))\n            {\n                if(ans == 0 || abs(ans) > i)\n                    ans = i;\n                break;\n            }\n\n        }\n    }\n    if(ans == 0)\n        printf(\"NO SOLUTION\");\n    else\n        printf(\"%d\", ans);\n    return 0;\n}\n\n\n```\n",
        "postTime": 1555681593,
        "uid": 101500,
        "name": "Jexer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1023 \u3010\u7a0e\u6536\u4e0e\u8865\u8d34\u95ee\u9898\u3011"
    },
    {
        "content": "\u6211\u770b\u89c1\u4e86\u5f88\u591a\u5927\u4f6c\u7684\u9898\u89e3\uff0c\u611f\u89c9\u4ed6\u4eec\u90fd\u7528\u5230\u5f88\u591a\u76f8\u5173\u7684\u6570\u5b66\u77e5\u8bc6\uff1b\n\n\u6211\u5c31\u849f\u84bb\u4e86\uff0c\u8fd9\u9053\u9898\u770b\u4e86\u4e00\u665a\u4e0a\u624d\u61c2\u9898\u610f\uff0c\u7136\u540e\u4e0d\u4f1a\u505a\uff0c\u53c8\u770b\u4e86\u4e00\u665a\u5927\u4f6c\u4eec\u7684\u9898\u89e3\uff1b\n\n......\uff08\u8fc7\u7a0b\u6709\u70b9\u8270\u8f9b\uff09\n\n\u6700\u540e\u6211\u6bd4\u8f83\u76f4\u767d\u5730\u53bb\u66b4\u529b\u6a21\u62df\u505a\u51fa\u6765\u4e86\uff0c\u5c31\u60f3\u8ddf\u5927\u5bb6\u5206\u4eab\u4e00\u4e0b\n\n\uff08\u4ee3\u7801\u91cc\u90fd\u6709\u89e3\u91ca\u7684\uff0c\u4f60\u4eec\u80af\u5b9a\u770b\u5f97\u61c2\uff09\n\n```cpp\n#include<iostream>\nusing namespace std;\n//void shuchu(int ) \nint main()\n{         \n\tint pre,price[100000],num[100000],a,b,reduce;  \n\t// \u653f\u5e9c\u4ef7\u683c \u552e\u4ef7 \u9500\u91cf \u603b\u5229\u6da6 a  b  \n\tcin>>pre>>price[1]>>num[1]>>a>>b;\n\tint i=1,preI=0;   //\u8bb0\u5f55\u4f4d\u7f6e \n\twhile(a!=-1 && b!=-1)      //\n\t{\n\t\tif(price[i]+1==a)         //\u662f\u8fde\u7eed\u7684\u4ef7\u683c \n\t\t{\n\t\t\ti++;\n\t\t\t\n\t\t\tprice[i]=a; num[i]=b;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint t=(num[i]-b)/(a-price[i]); //\u4e24\u4e2a\u4ef7\u683c\u4e4b\u95f4\u6bcf\u5347\u4e00\u5143\uff0c\u5bf9\u5e94\u7684\u9500\u91cf\n\t\t\twhile(price[i]<a)\n\t\t\t{\n\t\t\t\ti++;\n\t\t\t\tprice[i]=price[i-1]+1; num[i]=num[i-1]-t;\n\t\t\t} \n\t\t}\n\t\tcin>>a>>b;\n\t} \n\tcin>>reduce;  // \u51cf\u5c11\u91cf \n\twhile(num[i]>0)  //\u7ee7\u7eed\u8865\u5145\u7f3a\u5931\u7684\u4ef7\u683c \n\t{\n\t\ti++;\n\t\tprice[i]=price[i-1]+1;  num[i]=num[i-1]-reduce;\n\t}\n\tfor(int j=1;j<=i;j++) if(price[j]==pre) { preI=j; break;} //\u627e\u5230\u653f\u5e9c\u4ef7\u683c\u7684\u4f4d\u7f6e \n\t// \u5982\u679c\u6ca1\u6709\u627e\u5230\u653f\u5e9c\u7684\u4ef7\u683c\uff0c\u5c31\u8868\u660e \u5728\u653f\u5e9c\u9884\u671f\u4ef7\u4e0a\u4e0d\u80fd\u5f97\u5230\u6700\u5927\u603b\u5229\u6da6\n\tif(preI==0) { cout<<\"NO SOLUTION\"; return 0;}   \n\t/* \u5982\u679c\u653f\u5e9c\u662f\u8865\u8d34\u8d8a\u591a\uff1a\u90a3\u5c31\u662f\u5546\u54c1\u8d8a\u4f4e\u4ef7\uff0c\u8d8a\u80fd\u6709\u6700\u9ad8\u5229\u6da6\uff1b\n\t\t\u5982\u679c\u653f\u5e9c\u662f\u7a0e\u6536\u8d8a\u591a\uff1a\u90a3\u5c31\u662f\u5546\u54c1\u8d8a\u9ad8\u4ef7\uff0c\u8d8a\u80fd\u6709\u6700\u9ad8\u5229\u6da6\uff1b\n\t\t\uff08\u4e0d\u7406\u89e3\u7684\u8bdd\uff0c\u4f60\u4eec\u7528\u6837\u4f8b\u8ba1\u7b97\u4e00\u4e0b\u5c31\u4f1a\u77e5\u9053\u4e86\uff09 \n\t\t\u5148\u5224\u65ad\u73b0\u5728\u6700\u9ad8\u5229\u6da6\u5728\u54ea\uff0c\u518d\u5224\u65ad\u653f\u5e9c\u5e94\u8be5\u8865\u8d34\u8fd8\u662f\u7a0e\u6536\uff1b \n\t*/ \n\tint len=i,max=0;\n\tfor(int j=2;j<=len;j++)  //\u627e\u51fa\u6700\u9ad8\u5229\u6da6 \n\t{\n\t\tif((price[j]-price[1])*num[j]>max)\n\t\t{\n\t\t\tmax=(price[j]-price[1])*num[j];\n\t\t\ti=j;  //\u8bb0\u5f55\u4f4d\u7f6e \n\t\t}\n\t\telse break;\n\t} \n\tif(i==preI) { cout<<'0'; return 0; }  //\u5982\u679c\u6700\u9ad8\u5229\u6da6\u672c\u6765\u5c31\u662f\u5b9a\u4ef7\uff0c\u5c31\u76f4\u63a5\u8f93\u51fa\uff1b\n\tif(i<preI)  //\u6700\u9ad8\u5229\u6da6\u5728\u653f\u5e9c\u5b9a\u4ef7\u4e4b  \u4e0a\uff0c\u9700\u8981\u7a0e\u6536\uff1b \n\t{\n\t\tint zeng=20;\n\t\twhile(zeng<price[len])  //\u4e0d\u65ad\u589e\u52a0\u7a0e\u6536 \n\t\t{\n\t\t\t max=0;\n\t\t\tfor(int h=1;h<len;h++) // \u627e\u51fa\u6700\u9ad8\u5229\u6da6 \n\t\t\t{\n\t\t\t\tif((price[h]-price[1]-zeng)*num[h]>=max) { max=(price[h]-price[1]-zeng)*num[h]; i=h;}\n\t\t\t\t\n\t\t\t}\n\t\t\tif(i==preI)  //\u627e\u5230\u6700\u4f73\u7a0e\u6536 \n\t\t\t{\n\t\t\t\tcout<<'-'<<zeng; return 0;\n\t\t\t}\n\t\t\tzeng++;\n\t\t}\n\t} \n\t else  //\u6700\u9ad8\u5229\u6da6\u5728\u653f\u5e9c\u5b9a\u4ef7\u503c  \u4e0b\uff0c\u9700\u8981\u8865\u8d34 \n\t {\n\t \tint zeng=1;\n\t \twhile(1)  //\u4e0d\u65ad\u589e\u52a0\u8865\u8d34 \n\t\t{\n\t\t\tmax=0;\n\t\t\tfor(int h=1;h<len;h++) // \u627e\u51fa\u6700\u9ad8\u5229\u6da6 \n\t\t\t{\n\t\t\t\tif((price[h]-price[1]+zeng)*num[h]>max) { max=(price[h]-price[1]+zeng)*num[h]; i=h;}\n\t\t\t\telse break;\n\t\t\t}\n\t\t\tif(i==preI)  //\u627e\u5230\u6700\u4f73\u8865\u8d34 \n\t\t\t{\n\t\t\t\tcout<<zeng; return 0;\n\t\t\t}\n\t\t\tzeng++;\n\t\t}\n\t \t\n\t }\n\t\n    return 0;\n}\n```\n",
        "postTime": 1552902866,
        "uid": 142650,
        "name": "Z\u5148\u68ee",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1023 \u3010\u7a0e\u6536\u4e0e\u8865\u8d34\u95ee\u9898\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7684\u9898\u89e3\u633a\u5c11\u7684\uff0c\u6765\u8865\u5145\u4e00\u4e0b\n\n\u96be\u70b91:\u552e\u4ef7\u548c\u5bf9\u5e94\u9500\u552e\u91cf\u7684\u8ba1\u7b97\u3002\u9898\u76ee\u7ed9\u5b9a\u8303\u56f4\u5185\uff0c\u662f\u7ebf\u6027\u7684\u5173\u7cfb\uff0c\u9700\u8981\u81ea\u5df1\u5217\u65b9\u7a0b\u8ba1\u7b97\u3002\u5728\u9898\u76ee\u6240\u7ed9\u8303\u56f4\u5916\uff0c\u5df2\u7ecf\u7ed9\u5b9a\u659c\u7387\uff0c\u8fd9\u4e2a\u6bd4\u8f83\u5bb9\u6613\u8ba1\u7b97\u3002\u4f46\u662f\uff0c\u552e\u4ef7\u7b97\u9519\u4e86\u4e0d\u597d\u6392\u67e5\u3002\n\n\u96be\u70b92:\u9898\u76ee\u53d9\u8ff0\u4e0d\u6e05\uff0c\u6839\u636e\u6570\u636e\uff0c\u5728\u67d0\u4e00\u4e2a\u4ef7\u683c\u65f6\u5229\u6da6\u6700\u5927\uff0c\u5e76\u4e0d\u8981\u6c42\u552f\u4e00\u6700\u5927\uff08\u7b2c\u56db\u4e2a\u70b9\uff09\uff0c\u6240\u4ee5\u6b64\u7a0b\u5e8f\u4e2d\u7528\u5c0f\u4e8e\u53f7\u3002\n\nPS\uff1a \u5982\u5176\u4ed6\u4eba\u6240\u8bf4\uff0c\u53ef\u4ee5\u53ea\u5224\u65ad\u76f8\u90bb\u4e24\u4e2a\u552e\u4ef7\u7684\u5229\u6da6\u5927\u5c0f\uff0c\u8fd9\u91cc\u6ca1\u6709\u8fdb\u884c\u4fee\u6539\u3002\n\n\u8bc1\u660e\uff1a\n\n\u8bbe$y_i = k_ix + b_i$\uff0c$y_i$\u4e3a\u4e00\u6bb5\u9500\u91cf\n\n\u6839\u636e\u5e02\u573a\u4f9b\u9700\u539f\u7406\uff0c$k_i<0, b_i>0, y_i>0$\n\n\u5229\u6da6$w=(x - c + b)*y_i$\uff0c$x$\u4e3a\u552e\u4ef7\uff0c$c$\u4e3a\u751f\u4ea7\u6210\u672c\uff0c$b$\u4e3a\u8865\u8d34\u91d1\u989d\n\n$w=(x - c + b)*y_i=(x - c + b)*(k_ix + b_i)=k_ix^2+b_ix+C$\n\n\u6240\u4ee5\uff0c$w$\u662f\u5173\u4e8e$x$\u7684\u4e8c\u6b21\u51fd\u6570\uff0c\u4e14\u5f00\u53e3\u5411\u4e0b\u3002\u6613\u8bc1$\\exists s, \\forall x \\ne s, w_{max} \\ge w_x $\uff08\u8fd9\u8bf4\u660e\u4e0d\u4f1a\u51fa\u73b0\u65e0\u89e3\u60c5\u51b5\uff09\u4e14\u5728$x\\ne s$\u8303\u56f4\u5185$w$\u5206\u522b\u5355\u8c03\u3002\u53ef\u4ee5\u53ea\u5224\u65ad\u76f8\u90bb\u4e24\u4e2a\u552e\u4ef7\u7684\u5229\u6da6\u5927\u5c0f\u7684\uff0c\u8bc1\u6bd5\u3002\n\n\u53e6\u5916\uff0c\u9898\u610f\u4e3a\uff0c\u6c42$b$\uff0c\u4f7f\u5f97$|b|$\u6700\u5c0f\u4e14\u5bf9\u4e8e\u7ed9\u5b9as\uff0c$\\forall x \\ne s, w_{max} \\ge w_x$\n\n\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 100000;\nstruct Node\n{\n\tint pr, sel;\n\tbool operator< ( const Node &node )\n\t{\n\t\treturn pr < node.pr;\n\t}\n};\nint wtf[MAXN][2], len, up;\n\nint y;\nint sel[MAXN];\n\nvoid calc()\n{\n\tfor ( int i = 0; i < len - 1; ++i )\n\t{\n\t\tfor ( int j = wtf[i][0]; j < wtf[i + 1][0]; ++j )\n\t\t{\n\t\t\tdouble d = 1.0 * ( wtf[i][1] - wtf[i + 1][1] )\n\t\t\t           / ( wtf[i][0] - wtf[i + 1][0] );\n\t\t\tdouble y = wtf[i][1] + ( j - wtf[i][0] ) * d;\n\t\t\tsel[j] = round(y);\n\n\t\t}\n\n\t}\n\n\tsel[wtf[len - 1][0]] = wtf[len - 1][1];\n\n\tint j;\n\tfor ( j = wtf[len - 1][0] + 1; j < MAXN && sel[j - 1] - up > 0; ++j )\n\t\tsel[j] = sel[j - 1] - up;\n\twtf[len][0] = j;\n\twtf[len][1] = sel[j];\n\n\n}\nbool sure_max ( int ii )\n{\n\tint cost = wtf[0][0] - ii;\n\tint m = ( y - cost ) * sel[y];\n\n\tif ( m <= 0 ) return false;\n\n\t//printf ( \"ii = %d: (%d - %d) * %d = %d\\n\", ii, y, cost, sel[y], m );\n\n\n\tfor ( int i = cost; i <= wtf[len][0]; ++i )\n\t{\n\t\tdouble s = ( i - cost ) * sel[i];\n\t\tif(abs(y-i) < 10)\n\t//\tprintf ( \"m=%d, y=%d, ii=%d, i=%d, s=%lf\\n\", m, y, ii, i, s );\n\t\tif ( i != y && s > m )\n\t\t\treturn false;\n\t}\n\n\treturn true;\n}\nint main()\n{\n\tcin >> y;\n\n\twhile ( cin >> wtf[len][0] >> wtf[len][1],\n\t                not ( wtf[len][0] == -1 and wtf[len][1] == -1 ) )\n\t\t++len;\n\n\tcin >> up;\n\tcalc();\n//\tfor ( int i = 280; i < 500; ++i )\n//\t{\n//\t\tcout << i << \" \"<< sel[i] << \"\\n\" ;\n//\t}\n\n\tfor ( int i = 0; i <= max ( wtf[0][0], wtf[len][0] ); ++i )\n\t{\n\t\tif ( sure_max ( i ) )\n\t\t{\n\t\t\tcout << i << endl;\n\t\t\tbreak;\n\t\t}\n\t\tif ( sure_max ( -i ) )\n\t\t{\n\t\t\tcout << -i << endl;\n\t\t\tbreak;\n\t\t}\n\t}\n\n}\n\n\n```",
        "postTime": 1535858656,
        "uid": 61724,
        "name": "\u90b1\u6c5f\u5764",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1023 \u3010\u7a0e\u6536\u4e0e\u8865\u8d34\u95ee\u9898\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5176\u5b9e\u53ea\u9700\u8981\u8003\u8651\u4e00\u4e0b\u9884\u671f\u4ef7\u683c\u524d\u540e\u7684\u4ef7\u683c\uff0c\u5982\u679c\u9884\u671f\u6536\u76ca\u5927\u4e8e\u6216\u7b49\u4e8e\u524d\u540e\u6536\u76ca\uff0c\u5373\u4e3a\u6240\u9700\u89e3\uff0c\u5982\u679c\u627e\u4e0d\u5230\u5219\u8f93\u51faNO SOLUTION\uff01\n\n\n```cpp\n#include<stdio.h>\n#include<string.h>\n#include<math.h>\nusing namespace std;\nstruct hh\n{\n    int price,sale;\n}\nG[10001];\nint main()\n{\n    int n,m;\n    scanf(\"%d\",&n);\n    int p=1;\n    int chengben,ssale;\n    int g=0;\n    scanf(\"%d %d\",&chengben,&ssale); //\u5c06\u6210\u672c\u53ca\u5176\u9500\u91cf\u5355\u72ec\u8f93\u5165\n    while(scanf(\"%d %d\",&G[p].price,&G[p].sale)&&G[p].price!=-1)\n    {\n        if(G[p].price==n)\n           g=p,p++;//\u8bb0\u5f55\u9884\u671f\u4ef7\u683c\n        else    \n        p++;\n    }\n    p--;\n    scanf(\"%d\",&m);\n    int f=p;\n    f++;\n    if(G[p].price>n&&!g)//\u5bf9\u4e8e\u8f93\u5165\u4e2d\u6ca1\u6709\u9884\u671f\u4ef7\u683c\uff0c\u5e76\u4e14\u8f93\u5165\u4ef7\u683c\u6bd4\u9884\u671f\u5927\u5f88\u591a\u7684\u5904\u7406\n    {\n        int e=0;\n        for(int i=1;i<=p;i++)\n        {\n            if(G[i].price<n)\n            {\n                G[p].price=G[i].price;\n                G[p].sale=G[i].sale;\n                e++;\n            }\n        }\n        if(!e)\n        {\n            G[p].price=chengben;\n            G[p].sale=ssale;\n        }\n    }\n    for(int i=G[p].price+1;i<=10001;i++)//\u5c06\u53ef\u80fd\u7684\u6700\u5927\u4ef7\u683c\u53ca\u5176\u9500\u91cf\u5904\u7406\n    {\n         G[f].price=i;\n         G[f].sale=G[p].sale-(m*(G[f].price-G[p].price));\n         f++;\n    } \n    if(g==0)//\u5bfb\u627e\u9884\u671f\u4ef7\u683c\n    {\n        for(int i=p;i<=10001;i++)\n        {\n            if(G[i].price==n)\n            {\n                g=i;\n                break;\n            }\n        }\n    }\n    int h=0;\n    for(int i=1;i<=10001;i++)//\u8865\u8d34\n    {\n      int a=(G[g].price-chengben+i)*G[g].sale;\n      int b=(G[g-1].price-chengben+i)*G[g-1].sale;     \n      int c=(G[g+1].price-chengben+i)*G[g+1].sale;\n      if(a>b&&a>c)\n      {\n           printf(\"%d\",i);\n           h++;\n          return 0;\n       } \n    }\n    if(h==0)//\u7a0e\u6536\n    {\n      for(int i=1;i<=10001;i++)\n      {\n      int a=(G[g].price-chengben-i)*G[g].sale;\n      int b=(G[g-1].price-chengben-i)*G[g-1].sale;     \n      int c=(G[g+1].price-chengben-i)*G[g+1].sale;\n      if(a>=b&&a>=c)\n      {\n           printf(\"-%d\",i);\n           h++;\n           return 0;\n       } \n      }\n    }\n    if(h==0)//\u6ca1\u6709\u53ef\u884c\u89e3\n    printf(\"NO SOLUTION\");\n    return 0;\n}\n```",
        "postTime": 1509532471,
        "uid": 33308,
        "name": "\u6728\u5c0f\u6c90",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1023 \u3010\u7a0e\u6536\u4e0e\u8865\u8d34\u95ee\u9898\u3011"
    },
    {
        "content": "\u65e0\u8111\u6a21\u62df\uff0c\u679a\u4e3e\u6bcf\u4e00\u79cd\u8865\u8d34/\u7a0e\u6536\u91d1\u989d\uff0c\u5728\u6bcf\u79cd\u8865\u8d34/\u7a0e\u6536\u91d1\u989d\u4e0b\u518d\u679a\u4e3e\u6bcf\u79cd\u4ef7\u683c\u2026\u2026\n\n\uff08\u6b64\u7a0b\u5e8f\u6709\u7f3a\u9677\uff0c\u5982\u679c\u9884\u671f\u4ef7\u548c\u9884\u671f\u4ef7+1\u90fd\u80fd\u53d6\u5f97\u6700\u5927\u5229\u6da6\uff0c\u5b83\u5c31\u65e0\u6cd5\u7b97\u51fa\u6b63\u786e\u7b54\u6848\u4e86\u2026\u2026\u4e0d\u8fc7\u80fd\u8fc7\u6570\u636e\u2026\u2026\uff09\n\n```cpp\n\n#include<iostream>\nusing namespace std;\nint x,a[10][2],dy,bt,ans=2000000000,i,j,n,maxlr,maxlrjg,t;\n#define ABS(x) ((x)<0?-(x):(x))\ninline int zlr(int xl,int jg,int bt){return (jg-**a+bt)*xl;}\nint main()\n{\n    cin>>x;\n    while(cin>>a[n][0]>>a[n][1],a[n][0]+1||a[n][1]+1)n++;\n    cin>>dy;\n    for(bt=-32;bt<=9;bt++,maxlr=maxlrjg=i=0){\n//        cout<<\"bt:\"<<bt;\n        for(;i<n-1;i++)\n            for(j=*a[i];j<*a[i+1];j++){\n                if((t=zlr(a[i][1]+(a[i+1][1]-a[i][1])/(*a[i+1]-*a[i])*(j-*a[i]),j,bt))>=maxlr)\n                    maxlr=t,maxlrjg=j;\n//                cout<<' '<<j<<'~'<<t;\n            }\n        for(i=a[n-1][1];/*j<*a[n-1]+10*/i>0;j++,i-=dy)\n            if((t=zlr(i,j,bt))>=maxlr)\n                maxlr=t,maxlrjg=j;\n        if(maxlrjg==x&&ABS(bt)<ABS(ans))ans=bt;//cout<<\"maxlrjg:\"<<maxlrjg<<\" ans:\"<<ans<<\" bt:\"<<bt<<'\\n';\n    }\n    if(ans-2000000000)cout<<ans;\n    else cout<<\"NO SOLUTION\";\n    \n    return 0;\n}\n\n```",
        "postTime": 1437928025,
        "uid": 7487,
        "name": "plazum",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1023 \u3010\u7a0e\u6536\u4e0e\u8865\u8d34\u95ee\u9898\u3011"
    },
    {
        "content": "\u9898\u89e3\u91cd\u70b9 : \u4e8c\u5206\u67e5\u627e\n\n\u5148\u5410\u69fd\u4e00\u4e0b\u9898\u76ee\u771f\u7684\u592a\u5570\u55e6\u548c\u4e0d\u660e\u786e\u4e86. \u57fa\u672c\u4e0a\u505a\u8fd9\u9898\u662f\u8ba9\u4ee3\u7801\u53bb\"\u9002\u5e94\"\u7b54\u6848. \u672c\u4eba\u5e76\u4e0d\u8ba4\u4e3a\u7b2c4\u4e2a\u6570\u636e\u70b9\u7684\u7b54\u6848\u6b63\u786e, \u8be6\u7ec6\u53ef\u770b\u4ee3\u7801\u4e2d\u7684\u8bf4\u660e. \n\n\u4e8c\u5206\u67e5\u627e\u7684\u4e3b\u8981\u76ee\u7684\u662f\u9632\u6b62\u4ef7\u683c\u6570\u636e\u592a\u5927\u800c\u5bfc\u81f4\u8d85\u65f6. (\u867d\u7136\u9898\u76ee\u7ed9\u51fa\u76844\u4e2a\u6570\u636e\u70b9\u592a\u7b80\u5355\u4e86)\n\n\u800c\u80fd\u4f7f\u7528\u4e8c\u5206\u7684\u57fa\u672c\u8981\u6c42\u662f\u6570\u636e\u662f\u5408\u7406\u5730\u8fde\u7eed\u53d8\u5316\u7684, \u800c\u4e0d\u662f\u6709\u610f\u628a\u4eba\u5361\u4f4f\u800c\u5f04\u51fa\u4e00\u4e9b\u4e0d\u5408\u7406\u7684\u4ef7\u683c\u4e0e\u6570\u91cf\u7ec4\u5408 . \n\n\u56e0\u4e3a\u4e8c\u5206\u7684\u6027\u80fd\u662flog\u7ea7\u522b\u7684, \u6240\u4ee5\u8d77\u624b\u7684\u653f\u7b56\u5e72\u9884\u4e0a\u4e0b\u9650\u5c31\u8bbe\u7f6e\u5728200000\u4e0e-200000\u4e4b\u95f4\n\n\u8ba9\u53d8\u91cf int ganyu=0 , \u75310\u5f00\u59cb\u6d4b\u8bd5. \u5bfb\u627e\u6700\u5927\u5229\u6da6\u7684\u4f4d\u7f6e. \n\n\n\u8c03\u6574\u533a\u95f4\u7684\u5224\u65ad\u4e3a:\n\n```cpp\n\t\telse if (priceformax < yuqijia)\n\t\t{\n\t\t\tmaxganyu = ganyu;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tminganyu = ganyu;\n\t\t}\n```\n\n\u57fa\u672c\u610f\u601d\u662f, \n\n\u8865\u8d34\u592a\u591a\u5c31\u4f1a\u5bfc\u81f4\u8584\u5229\u591a\u9500, \u6240\u4ee5\u8981\u504f\u5411\u4e8e\u5f81\u7a0e.  \n\n\u5f81\u7a0e\u592a\u591a\u7684\u8bdd\u5bfc\u81f4\u5546\u5bb6\u62ac\u4ef7, \u6240\u4ee5\u8981\u504f\u5411\u4e8e\u8865\u8d34.\n\n\u6240\u4ee5\u4e0d\u65ad\u8c03\u6574\u533a\u95f4\u540e, \u4f1a\u8fc5\u901f\u627e\u5230\u6700\u5408\u9002\u7684\u70b9. \n        \n\n```cpp\n#include <iostream>\nusing namespace std;\n\n//\u9884\u671f\u4ef7\nint yuqijia;\n\n//\u4ef7\u683c,\u6570\u91cf\u8868\nint prices[100000], counts[100000];\nint arrlen = 0;\n\n\n\nvoid collect()\n{\n\tstatic int inputa[100000], inputb[100000];\n\tint inputlen = 0;\n\n\t//\u9884\u671f\u4ef7\n\tcin >> yuqijia;\n\n\tint jiage, xiaoliang;\n\n\twhile (true)\n\t{\n\t\t//\u6536\u96c6\u6570\u636e, \u76f4\u5230-1 -1 \n\t\tcin >> jiage >> xiaoliang;\n\t\tif (jiage == -1)\n\t\t\tbreak;\n\t\tinputa[inputlen] = jiage;\n\t\tinputb[inputlen] = xiaoliang;\n\t\tinputlen++;\n\t}\n\n\t//\u6bcf\u4ef7\u683c\u51cf\u5c11\u91cf\n\tint jianshao;\n\tcin >> jianshao;\n\n\t//\u91cd\u65b0\u586b\u8868 , \u9898\u76ee\u6709\u4e89\u8bae\u7684\u5730\u65b9, \u63cf\u8ff0\u4e0d\u6e05\u695a, \u53cd\u6b63\u6210\u672c\u4ef7\u5230\u6700\u9ad8\u4ef7\u90fd\u5f97\u8ba1\u7b97\u51fa\u6765\n\tfor (int inputi = 0; inputi < inputlen; inputi++)\n\t{\n\t\tjiage = inputa[inputi];\n\t\txiaoliang = inputb[inputi];\n\t\tprices[arrlen] = jiage;\n\t\tcounts[arrlen] = xiaoliang;\n\t\tarrlen++;\n\n\t\tint maxjiage = inputi + 1 < inputlen ? inputa[inputi + 1] : 2e8;\n\t\twhile (true)\n\t\t{\n\t\t\tjiage += 1;\n\t\t\txiaoliang -= jianshao;\n\t\t\tif (jiage >= maxjiage || xiaoliang <= 0)\n\t\t\t\tbreak;\n\t\t\tprices[arrlen] = jiage;\n\t\t\tcounts[arrlen] = xiaoliang;\n\t\t\tarrlen++;\n\t\t}\n\t}\n\n}\n\nvoid program()\n{\n\t//\u6536\u96c6\u6570\u636e\n\tcollect();\n\n\t//\u6210\u672c\u4ef7\n\tint chengben = prices[0];\n\n\t//\u4e8c\u5206\u6cd5\u5bfb\u627e\n\tint maxganyu = 200000;//\u8865\u8d34, \u5927\u91cf\u7684\u8865\u8d34\u4f1a\u8ba9\u5546\u5bb6\u8003\u8651\u8584\u5229\u591a\u9500\n\tint minganyu = -200000;//\u6536\u7a0e, \u91cd\u7a0e\u4f1a\u8ba9\u5546\u5bb6\u8003\u8651\u62ac\u9ad8\u4ef7\u683c\n\n\t//\u6700\u540e\u5408\u7406\u7684\u5e72\u9884:\n\tint matchtimes = 0;\n\tint matchganyu = 0;\n\tint ganyu = 0;\n\twhile (true)\n\t{\n\t\t//\u6700\u5927\u5229\u6da6\n\t\tlong long maxlirun = 0;\n\t\t//\u6700\u5927\u5229\u6da6\u5b9a\u4ef7\n\t\tint priceformax = 0;\n\n\t\t//\u662f\u5426\u5305\u542b\u9884\u671f\u4ef7\n\t\tint containsyuqijia = 0;\n\n\t\tint uniquecount = 0;\n\n\t\tfor (int i = 0; i < arrlen; i++)\n\t\t{\n\t\t\tlong long lirun = (prices[i] - chengben + ganyu)*(long long)counts[i];\n\n\t\t\t//\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u4e00\u4e0b, \u5229\u6da6\u6700\u5927\u5fc5\u987b\u8981\u552f\u4e00\n\t\t\tif (priceformax == 0 || lirun > maxlirun)\n\t\t\t{\n\t\t\t\tmaxlirun = lirun;\n\t\t\t\tpriceformax = prices[i];\n\t\t\t\tif (prices[i] == yuqijia)\n\t\t\t\t\tcontainsyuqijia = 1;\n\t\t\t\telse\n\t\t\t\t\tcontainsyuqijia = 0;\n\t\t\t\tuniquecount = 1;\n\t\t\t}\n\t\t\telse if (lirun == maxlirun)\n\t\t\t{\n\t\t\t\tif (prices[i] == yuqijia)\n\t\t\t\t\tcontainsyuqijia++;\n\t\t\t\t//\u9898\u76ee\u6709\u4e89\u8bae\u7684\u5730\u65b9, \n\t\t\t\t//\u5982\u679c\u4e00\u4e2a\u7b56\u7565\u4e0b, \u540c\u65f6\u5b58\u57282\u4e2a\u6216\u4ee5\u4e0a\u4ef7\u683c\u662f\u6700\u5927\u5229\u6da6\u7684, \n\t\t\t\t//\u90a3\u4e48\u8fd9\u4e2a\u8fd8\u80fd\u7b97\u662f\u5408\u9002\u7684\u7b56\u7565\u4e0d? \n\t\t\t\t//\u4f8b\u5982\u7b2c\u56db\u70b9\u6570\u636e\u7684\u7b54\u6848\u662f4010\u4e0e4011\u540c\u65f6\u8fbe\u5230\u6700\u5927\u7684\u5229\u6da6, \u90a3\u4e48\u4e0d\u6392\u9664\u5546\u5bb6\u9009\u62e9\u53564010\n\t\t\t\tuniquecount++;//not unique\n\t\t\t}\n\t\t}\n\n\t\tif (containsyuqijia)//( priceformax == yuqijia)\n\t\t{\n\t\t\tmatchtimes++;\n\t\t\tmatchganyu = ganyu;\n\n\t\t\t//\u5c1d\u8bd5\u5bfb\u627e\u7edd\u5bf9\u503c\u66f4\u5c0f\u7684\u503c\n\t\t\tif (ganyu == 0)\n\t\t\t\tminganyu = maxganyu = 0;\n\t\t\telse if (ganyu > 0)\n\t\t\t\tmaxganyu = ganyu - 1;\n\t\t\telse\n\t\t\t\tminganyu = ganyu + 1;\n\n\t\t}\n\t\telse if (priceformax < yuqijia)\n\t\t{\n\t\t\tmaxganyu = ganyu;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tminganyu = ganyu;\n\t\t}\n\n\t\tint newganyu = (minganyu + maxganyu) / 2;\n\t\tif (newganyu == ganyu)\n\t\t{\n\t\t\tif (minganyu == maxganyu)\n\t\t\t\tbreak;\n\t\t\t//\u6700\u540e\u5dee\u5f02\n\t\t\tif (minganyu == ganyu)\n\t\t\t\tnewganyu = minganyu = maxganyu;\n\t\t\telse\n\t\t\t\tnewganyu = maxganyu = minganyu;\n\t\t}\n\n\t\tganyu = newganyu;\n\t}\n\n\tif (matchtimes == 0)\n\t{\n\t\tcout << \"NO SOLUTION\" << endl;\n\t\treturn;\n\t}\n\n\tcout << matchganyu << endl;\n\n\n}\n\n\nint main()\n{\n\tprogram();\n\n\treturn 0;\n}\n\n\n```\n",
        "postTime": 1566894998,
        "uid": 234252,
        "name": "ZHDX",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1023 \u3010\u7a0e\u6536\u4e0e\u8865\u8d34\u95ee\u9898\u3011"
    },
    {
        "content": "\n\n\n\n\n\n\n\n\n\n\n```cpp\n//\u770b\u4e86\u697c\u4e0b\u7684\u6570\u5b66\u89e3\u6cd5\uff0c\u771f\u4e0d\u5bb9\u6613\n//\u53d1\u4e2apascal \u7684\u9020\u798f\u5927\u5bb6\nVar\n    i,j,top,n,max,k,cb:longint;\n    num,maxp:array[1..100000] of longint;\n    x,y:double;\nBegin\n    readln(top);  //\u6240\u9700\n    readln(cb,j);  //cb\u662f\u6210\u672c\n    num[cb]:=j;\n    readln(i,j);\n    while (i<>-1)and(j<>-1) do\n        begin\n            if i>max then max:=i;\n            num[i]:=j;\n            readln(i,j);\n        end;\n        readln(n);\n        while num[max]>=0 do\n        begin\n            inc(max);\n            num[max]:=num[max-1]-n;\n        end;                                         //\u679a\u4e3e\u4ef7\u683c\u6709\u4eba\u4e70\u65f6\u7684\u6700\u5927\u503c\n        dec(max);                                  //\u4e4b\u524d\u4ec5\u4e3a\u4ef7\u683c\u5c0f\u4e8e0\u65f6\u505c\u6b62\uff0c\u6240\u4ee5\u6700\u5927\u4ef7\u683c\u52a0\u4e86\u4e00\n        for i:=cb to max-1 do\n        begin\n            j:=i+1;\n            while num[j]=0 do inc(j);\n            for k:=i+1 to j do\n                num[k]:=num[k-1]+(num[j]-num[i])div(j-i);\n        end;\n        x:=((top+1)*num[top+1]-top*num[top]-cb*(num[top+1]-num[top]))/(num[top]-num[top+1]);  //\u6570\u5b66\u601d\u8def\uff0c\u5efa\u8bae\u914d\u5408\u697c\u4e0b\u516c\u5f0f\n        y:=((top-1)*num[top-1]-top*num[top]-cb*(num[top-1]-num[top]))/(num[top]-num[top-1]);   {X,Y\u4e3a\u7b54\u6848\u7684\u4e24\u4e2a\u8fb9\u754c\uff0c\u5373\u8981\u4f7f\u7b26\u5408\u9898\u610f\uff0c\u7a0e\u6536\uff08\u6d25\u8d34\uff09\u5fc5\u987b\u5927\u4e8eX\u5c0f\u4e8eY}\n        if trunc(x)<>x then x:=trunc(x)+1;      //\u53d6\u6574\n        if trunc(y)<>y then y:=trunc(y)-1;\n        if x>y then                      //\u7b54\u6848\u4e0d\u5b58\u5728\n        begin\n            writeln('NO SOLUTION');\n            halt;\n        end;\n        if abs(x)>abs(y) then write(y:0:0)       //\n        else write(x:0:0);\nEnd.\n```",
        "postTime": 1477637073,
        "uid": 22250,
        "name": "\u4e0d\u77e5\u4e0d\u89c9lb",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1023 \u3010\u7a0e\u6536\u4e0e\u8865\u8d34\u95ee\u9898\u3011"
    },
    {
        "content": "\u8fd9\u9898\u662f\u7528\u697c\u4e0b\u7684\u6570\u5b66\u65b9\u6cd5\u5199\u7684\uff0c\u6700\u597d\u914d\u5408\u697c\u4e0b\u7684\u770b\u3002\n\n[codep ]\n\n```cpp\nconst\n  maxn=50;\n  maxm=10000;\nvar\n  d:array[1..maxm] of longint;\n  price,sell:array[1..maxn] of longint;\n  k1,k2:real;\nc,r,t,x,y,n,each,i,j,p,most,m,u1,u2:longint;\nbegin\n  readln(n);\n  c:=0;\n  repeat\n    readln(x,y);\n    if (x=-1)and(y=-1) then break;\n    inc(c);\n    price[c]:=x;\n    sell[c]:=y;\n  until false;\n  readln(m);\n  p:=price[1];\n  most:=price[c]+sell[c] div m; //most\u8868\u793a\u6700\u9ad8\u552e\u4ef7\n  if (n<p)or(n>most) then\n  begin\n    writeln('NO SOLUTION');\n    halt;\n  end;\n  for i:=1 to c-1 do\n  begin\n    each:=(sell[i]-sell[i+1]) div (price[i+1]-price[i]);\n    for j:=price[i] to price[i+1]-1 do\n      d[j]:=sell[i]-each*(j-price[i]);\n  end;    //d\u8868\u793a\u9500\u91cf\n  for i:=price[c] to most do       d[i]:=sell[c]-m*(i-price[c]);\n  k1:=-1e20; k2:=1e20;\n  for i:=p to most do    //\u4ece\u6210\u672c\u5230\u6700\u9ad8\n  begin\n    r:=d[n]-d[i];\n    t:=i*d[i]-n*d[n]-p*(d[i]-d[n]);\n    if (r>0) and (t/r>k1) then\n      k1:=t/r;\n    if (r<0) and (t/r<k2) then\n      k2:=t/r;\n  end;\n  if k1<-1e19 then u1:=-maxlongint         //\u65e0\u754c\u5904\u7406\n  else if (k1>0)and(k1-int(k1)>0) then u1:=trunc(k1)+1 else u1:=trunc(k1);\n  if k2>1e19 then u2:=maxlongint\n  else if (k2<0)and(int(k2)-k2>0) then u2:=trunc(k2)-1 else u2:=trunc(k2);\n if (u1<0)and(u2>0) then\n  begin\n    u1:=0;\n    u2:=0;\n  end;\n  if u1>u2 then writeln('NO SOLUTION')\n  else if abs(u1)<abs(u2) then writeln(u1)\n  else writeln(u2);\n  readln;\nend.\n[/cpdep ]\n```",
        "postTime": 1465037222,
        "uid": 17123,
        "name": "\u6df1\u6d77\u9c7c\u7684\u773c\u6cea",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1023 \u3010\u7a0e\u6536\u4e0e\u8865\u8d34\u95ee\u9898\u3011"
    },
    {
        "content": "\u8fd9\u9898\u6ca1\u5fc5\u8981\u7528\u90a3\u4e48\u4f18\u7f8e\u7684\u65b9\u6cd5\uff0c\u66b4\u529b+\u5206\u7c7b\u8ba8\u8bba\u5373\u53ef\n\n**\u3010\u5206\u6790\u3011**\n---\n\n\u9898\u76ee\u7684\u8868\u8ff0\uff0c\u672c\u849f\u84bb\u611f\u89c9\u6709\u70b9\u8ff7\u3002\n\n\u770b\u4e86 [dalao\u7684\u89e3\u91ca](https://www.luogu.org/discuss/show/119090) \u624d\u7406\u89e3\u8fc7\u6765\n\n\u6240\u4ee5\u7406\u89e3\u9898\u610f\u65b9\u9762\u5c31\u7ffb\u770b\u8fd9\u4e2a\u89e3\u91ca\u5427\uff0c\u672c\u849f\u84bb\u5c31\u76f4\u63a5\u5f00\u59cb\u8bb2\u505a\u6cd5\u4e86\uff1a\n\n\u6839\u636e\u9898\u610f\uff0c\u6211\u4eec\u76f4\u63a5\u66b4\u529b\u679a\u4e3e\u8865\u8d34\u548c\u7a0e\u6536\uff0c\u56e0\u4e3a\u6700\u5927\u503c\u4e0d\u8d85\u8fc7 $100000$ \uff0c\u6240\u4ee5\u679a\u4e3e\u8865\u8d34\u7684\u65f6\u5019\u663e\u7136\u76f4\u63a5\u4ece $0$ \uff08\u6ca1\u8865\u8d34\u4e5f\u6ca1\u6536\u7a0e\uff09\u679a\u4e3e\u5230 $100000$ \u5373\u53ef\n\n\u800c\u4e00\u65e6\u679a\u4e3e\u5230\u67d0\u6570\u503c\u7684\u8865\u8d34\u6709\u89e3\u4e86\uff0c\u6211\u4eec\u5c31\u7528 $Ans$ \u8bb0\u5f55\u4e00\u4e0b\u7b54\u6848\uff0c\u7136\u540e\u53ef\u4ee5\u76f4\u63a5\u8df3\u4e86\u3002\u56e0\u4e3a\u63a5\u4e0b\u6765\u7684\u8865\u8d34\u4e00\u5b9a\u7edd\u5bf9\u503c\u66f4\u9ad8\u3002\n\n\u5176\u6b21\uff0c\u6211\u4eec\u518d\u679a\u4e3e\u7a0e\u6536\uff0c\u679a\u4e3e\u7a0e\u6536\u6211\u4eec\u53ef\u4ee5\u7528\u8d1f\u6570\u6765\u8868\u793a\uff0c\u4ece $(-1)$ \u5230 $(-100000)$ \u3002\u4e5f\u662f\u4e00\u6837\uff0c\u679a\u4e3e\u5230\u89e3\u5c31\u8bb0\u5f55\u4e86\u8df3\u6389\u3002\n\n\u4f46\u662f\uff0c\u679a\u4e3e\u7a0e\u6536\u53ef\u4ee5\u52a0\u4e00\u4e2a\u4f18\u5316\uff0c\u679a\u4e3e\u5230\u8d85\u8fc7 $(-Ans)$ \u5373\u8df3\u6389\uff0c\u56e0\u4e3a\u63a5\u4e0b\u6765\u679a\u4e3e\u7684\u80af\u5b9a\u7edd\u5bf9\u503c\u8d85\u8fc7\u8865\u8d34\u4e86\u3002\u800c\u4e14\u8fd9\u6837\u4e00\u6765\uff0c\u4e00\u65e6\u7a0e\u6536\u679a\u4e3e\u5230\u89e3\uff0c\u5b83\u7684\u7ed3\u679c\u4e00\u5b9a\u7edd\u5bf9\u503c\u6bd4\u8865\u8d34\u5c0f\uff0c\u80af\u5b9a\u66f4\u4f18\uff0c\u53ef\u4ee5\u76f4\u63a5\u66ff\u6362\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u521d\u59cb\u5316 $Ans>100000$ \u7684\u4efb\u610f\u6574\u6570\uff0c\u8fd9\u6837\u5c31\u4fdd\u8bc1\u8865\u8d34\u679a\u4e3e\u4e0d\u5230\uff0c\u4e0d\u4f1a\u5f71\u54cd\u7a0e\u6536\u7684\u679a\u4e3e\u3002\u6700\u540e\u7684\u5224\u5b9a\u4e5f\u662f\u5982\u679c $Ans$ \u4e3a\u4f60\u521d\u59cb\u8bbe\u5b9a\u7684\u90a3\u4e2a\u6574\u6570\uff0c\u5c31\u65e0\u89e3\u3002\n\n---\n\n\u5927\u4f53\u601d\u8def\u5c31\u662f\u5982\u6b64\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u8bf4\u8bf4\u5982\u4f55\u5224\u5b9a\u662f\u5426\u6709\u89e3\uff1a\n\n\u6211\u4eec\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u76f8\u90bb\u7684\u4e24\u7ec4**\u4ef7\u683c-\u9500\u91cf**\u5173\u7cfb\u89c6\u4e3a\u5750\u6807\u4e0a\u7684\u4e24\u4e2a\u70b9 $(x_1,y_1)$ \u4e0e $(x_2,y_2)$ \uff0c\u5b83\u4eec\u5f53\u4e2d\u7684\u4ef7\u683c\u9500\u91cf\u5448\u7ebf\u6027\u53d8\u5316\n\n\u6240\u4ee5\u5b83\u4eec\u6ee1\u8db3\u76f4\u7ebf $y=kx+b$\n\n\u6240\u4ee5 $\\forall x\\in[x_1,x_2]$ \u90fd\u6709\u5229\u6da6 $w(x)=(kx+b)(x-x_0+t)$\n\n\u5176\u4e2d\uff0c $k={y_2-y_1\\over x_2-x_1},b=y_1-kx_1,x_0$ \u4e3a\u6210\u672c, $t$ \u4e3a\u8865\u8d34\u6216\u7a0e\u6536\n\n\u4ee3\u5165\u53ef\u5f97 $w(x)=({y_2-y_1\\over x_2-x_1}\\times x+y-{y_2-y_1\\over x_2-x_1}x_1)(x-x_0+t)$\n\n\u5c55\u5f00\u5c31\u4e0d\u7b97\u4e86\uff0c\u53ef\u4ee5\u81ea\u884c\u53bb\u7b97\uff0c\u6700\u540e\u7b97\u4e00\u4e0b\u4e8c\u6b21\u51fd\u6570\u5bf9\u79f0\u8f74 $x=-{b\\over2a}$\n\n\u56e0\u4e3a\u9898\u76ee\u4fdd\u8bc1\u4ef7\u683c\u8d8a\u9ad8\uff0c\u9500\u91cf\u8d8a\u4f4e\uff0c\u6240\u4ee5 $k<0,b>0$ \u6052\u6210\u7acb\n\n\u6240\u4ee5\u6211\u4eec\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n1. \u82e5 $-{b\\over 2a}\\geq x_2$ \uff0c\u5219\u8fd9\u4e24\u70b9\u4e2d\u6700\u9ad8\u5229\u6da6\u4e3a $w(x_2)$ \uff0c\u53d6\u5230\u8be5\u503c\u65f6\u7684\u4ef7\u683c\u4e3a $x_2$\n2. \u82e5 $-{b\\over 2a}\\leq x_1$ \uff0c\u5219\u8fd9\u4e24\u70b9\u4e2d\u6700\u9ad8\u5229\u6da6\u4e3a $w(x_1)$ \uff0c\u53d6\u5230\u8be5\u503c\u65f6\u7684\u4ef7\u683c\u4e3a $x_1$\n3. \u5176\u4ed6\u60c5\u51b5\uff0c\u8bf4\u660e\u4e8c\u6b21\u51fd\u6570\u7684\u6700\u5927\u503c\u5728\u8be5\u533a\u95f4\u5185\uff0c\u8fd9\u4e24\u70b9\u4e2d\u6700\u9ad8\u5229\u6da6\u5e94\u4e3a $max\\{w(\\lceil-{b\\over 2a}\\rceil),w(\\lfloor-{b\\over 2a}\\rfloor)\\}$ \uff0c\u53d6\u503c\u76f8\u5bf9\u5e94\u4e3a\u91cc\u9762\u7684\u503c\uff08\u56e0\u4e3a\u53ea\u8003\u8651\u6574\u6570\uff09\n\n\u6700\u540e\u5c31\u662f\u4ece\u7b2c\u4e00\u5bf9\u76f8\u90bb\u4e24\u70b9\u679a\u4e3e\u5230\u6700\u540e\u4e00\u5bf9\u76f8\u90bb\u4e24\u70b9\uff0c\u6c42\u6700\u5927\u5229\u6da6\u503c\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\u5224\u5b9a\u8ddf\u9884\u671f\u4ef7\u662f\u5426\u76f8\u7b26\u3002\u5982\u679c\u76f8\u7b26\uff0c\u5373\u4e3a\u6709\u89e3\u3002\n\n---\n\n\u90a3\u6700\u540e\u8fd9\u4e2a\u70b9\u4ee5\u540e\u7684\u9012\u51cf\u5982\u4f55\u5904\u7406\u5462\uff1f\u6211\u4eec\u4e5f\u5c06\u5b83\u5316\u4e3a\u76f4\u7ebf\u7684\u4e24\u7aef\u70b9\u5c31\u53ef\u4ee5\u4e86\uff1a\n\n\u5047\u8bbe\u6700\u540e\u7684\u4ef7\u683c\u4e3a $P$ \uff0c\u9500\u91cf\u4e3a $G$ \uff0c\u4e4b\u540e\u6bcf\u589e\u52a0 $1$ \u5143\uff0c\u9500\u91cf\u51cf\u5c11 $D$\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u589e\u52a0 $\\lfloor{G\\over D}\\rfloor$ \u5143\u65f6\u80fd\u4fdd\u8bc1\u9500\u91cf\u4e3a\u6700\u5c0f\u6b63\u6574\u6570\n\n\u6240\u4ee5\u518d\u589e\u6dfb\u4e00\u4e2a\u70b9 $(P+\\lfloor{G\\over D}\\rfloor,G-D\\times \\lfloor{G\\over D}\\rfloor)$ \u5373\u53ef\n\n\u5176\u4e2d $(G-D\\times\\lfloor{G\\over D}\\rfloor)$ \u5c31\u662f $(G\\% D)$\n\n---\n\n\u4f46\u662f\u5927\u5bb6\u4f1a\u53d1\u73b0\uff0c\u5c55\u5f00\u5f0f\u8fd9\u4e00\u6b65\u9700\u8981\u624b\u63a8\uff0c\u518d\u6254\u7ed9\u8ba1\u7b97\u673a\u53bb\u7b97\uff0c\u5f88\u662f\u9ebb\u70e6\u3002\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u4f18\u5316\uff1a\n\n$k={y_2-y_1\\over x_2-x_1}={y_2-y_1\\over (x_2-x_0-t)-(x_1-x_0-t)}$\n\n$y=kx+b=kx+y_1-kx_1=k(x-x_1)+y_1$\n\n$\\therefore y=k[(x-x_0-t)-(x_1-x_0-t)]+y_1=k(x-x_0-t)+[y_1-k(x_1-x_0-t)]$\n\n\u53d1\u73b0\u4e86\u6ca1\u6709\uff0c\u5982\u679c\u6211\u4eec\u628a\u6240\u6709\u7684\u4ef7\u683c\u90fd\u76f4\u63a5\u51cf\u53bb\u6210\u672c\uff0c\u5f97\u51fa\u7684\u7a0e\u540e\u5355\u4ef6\u5229\u6da6 $x'=(x-x_0-t)$\uff0c\u516c\u5f0f\u4f1a\u66f4\u52a0\u7b80\u5355\uff1a\n\n$w(x')=(kx'+b)x'=kx'^2+bx'$\n\n\u8fd9\u6837\uff0c\u53ef\u4ee5\u76f4\u63a5\u5f97\u5230\u5bf9\u79f0\u8f74\u4e3a $x'=-{b\\over 2k}$\n\n\u5176\u4f59\u7684\u8ba8\u8bba\u540c\u4e0a\u3002\u867d\u7136\u8ba1\u7b97\u673a\u7684\u8ba1\u7b97\u6ca1\u6709\u7b80\u4fbf\uff0c\u4f46\u81f3\u5c11\u6211\u4eec\u7684\u63a8\u5bfc\u8ba1\u7b97\u65b9\u4fbf\u4e86\u5f88\u591a\n\n\u81f3\u4e8e $x'$ \u7684\u8ba1\u7b97\uff0c\u5728\u8bfb\u5165\u5b8c\u4ee5\u540e\u5148\u8ba1\u7b97\u7a0e\u524d\u5229\u6da6 $\\hat x$ \uff0c\u6bcf\u6b21\u8bbe\u5b9a\u8865\u8d34\u6216\u7a0e\u6536 $t$ \u7684\u65f6\u5019\uff0c$x'=\\hat x+t$ \u5373\u53ef\u3002\n\n\u5176\u4ed6\u7ec6\u8282\u5c31\u770b\u672c\u849f\u84bb\u4ee3\u7801\u5427\n\n---\n\n**\u3010\u4ee3\u7801\u3011**\n---\n\n\u90a3\u672c\u849f\u84bb\u5c31\u653e ~~\u6211\u7801\u98ce\u6781\u4e11\u7684~~ \u4ee3\u7801\u4e86:\n\n```cpp#include<cstdio>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\n#define f(a,b,c,d) for(register int a=b,c=d;a<=c;a++)\n#define g(a,b,c,d) for(register int a=b,c=d;a>=c;a--)\n//#define LOCAL\ntypedef int i32;\ntypedef unsigned int u32;\ntypedef long long int i64;\ntypedef unsigned long long int u64;\n#ifdef LOCAL\n    inline char gc() { return getchar(); }\n#else\n    inline char gc() {\n        static char s[1<<20|1]={0},*p1=s,*p2=s;\n        return (p1==p2)&&(p2=(p1=s)+fread(s,1,1<<20,stdin),p1==p2)?EOF:*(p1++);\n    }\n#endif\ninline i32 read(){\n    register i32 ans=0;register char c=gc();register bool neg=0;\n    while(c<48||c>57) neg^=!(c^'-'),c=gc();\n    while(c>=48&&c<=57) ans=(ans<<3)+(ans<<1)+(c^48),c=gc();\n    return neg?-ans:ans;\n}//\u8bfb\u5165\u4f18\u5316\n\ni32 d_Wan,d_Cnt=0;\nstruct xy{\n    i32 d_P,d_G;\n    bool operator < (const xy &t) { return d_P<t.d_P; }\n}ar_xy_Goods[100010];\n\ninline void inport(){\n    d_Wan=read();\n    i32 d_A,d_B;\n    while( (((d_A=read())>=0)&((d_B=read())>=0)) ){\n        ar_xy_Goods[++d_Cnt].d_P=d_A;\n        ar_xy_Goods[d_Cnt].d_G=d_B;\n    }//\u5224\u5b9a\u6761\u4ef6\u7684\u89e3\u91ca\u770b\u4e0b\u6587\n    \n    sort(ar_xy_Goods+1,ar_xy_Goods+d_Cnt+1);//f\u9632\u7206\n    \n    f(i,2,I,d_Cnt) ar_xy_Goods[i].d_P-=ar_xy_Goods[1].d_P;//\u7b97\u7a0e\u524d\u5229\u6da6\n    \n    d_Wan-=ar_xy_Goods[1].d_P;\n    ar_xy_Goods[1].d_P=0;\n    i32 d_Ex=read();\n    ar_xy_Goods[d_Cnt+1].d_P=ar_xy_Goods[d_Cnt].d_P+ar_xy_Goods[d_Cnt].d_G/d_Ex;\n    ar_xy_Goods[d_Cnt+1].d_G=ar_xy_Goods[d_Cnt].d_G%d_Ex;\n    //\u7b97\u6700\u540e\u4e00\u4e2a\u70b9\n}\n\ninline void solve(i32 d_P1,i32 d_P2,double &db_Prc,i32 &d_Pos,i32 d_Gm){\n    i32 d_X1=ar_xy_Goods[d_P1].d_P+d_Gm,d_Y1=ar_xy_Goods[d_P1].d_G;\n    i32 d_X2=ar_xy_Goods[d_P2].d_P+d_Gm,d_Y2=ar_xy_Goods[d_P2].d_G;\n    //\u7b97\u7a0e\u540e\u5229\u6da6\u548c\u9500\u91cf\n\n    double db_K=(1.0*d_Y2-d_Y1)/(1.0*d_X2-d_X1);\n    double db_B=1.0*d_Y1-db_K*d_X1;\n    double db_P=-db_B/(2*db_K);//\u5bf9\u79f0\u8f74\n\n    if(db_P>=1.0*d_X2) { db_Prc=d_Y2*d_X2,d_Pos=-d_Gm+d_X2; return ; }\n    if(db_P<=1.0*d_X1) { db_Prc=d_Y1*d_X1,d_Pos=-d_Gm+d_X1; return ; }\n    //d_Pos \u8bb0\u5f97\u8981\u8fd8\u539f\u56de\u53bb\n\n    double db_X1=floor(db_P),db_Y1=db_K*db_X1*db_X1+db_B*db_X1;\n    double db_X2=ceil(db_P),db_Y2=db_K*db_X2*db_X2+db_B*db_X2;\n    if(db_Y1>db_Y2) { db_Prc=db_Y1,d_Pos=-d_Gm+db_X1; }\n    else { db_Prc=db_Y2,d_Pos=-d_Gm+db_X2; }\n}\n\ninline i32 work(i32 d_Gm){\n    double db_Maxprc=-0x7f7f7f7f;\n    i32 d_Maxpos=0;\n    f(i,1,I,d_Cnt){\n        double db_Prc;\n        i32 d_Pos;\n        solve(i,i+1,db_Prc,d_Pos,d_Gm);\n        if(db_Prc>db_Maxprc) db_Maxprc=db_Prc,d_Maxpos=d_Pos;\n    }\n    return d_Maxpos;\n}\n\nint main(){\n    inport();\n    i32 d_Ans=200000;\n    f(i,0,I,100000){\n        i32 d_Cal=work(i);\n        if(d_Cal==d_Wan) { d_Ans=i; break; }\n    }\n    g(i,-1,I,-100000){\n        if(-i>=d_Ans) break;\n        i32 d_Cal=work(i);\n        if(d_Cal==d_Wan) { d_Ans=i; break; }\n    }\n    if(d_Ans==200000) puts(\"NO SOLUTION\");\n    else printf(\"%d\",d_Ans);\n    return 0;\n}\n```\n\n\u6700\u540e\u5b89\u5229\u4e00\u4e0b [\u672c\u849f\u84bb\u7684\u535a\u5ba2](https://www.luogu.org/blog/JustinRochester/)\n\n---\n\n\n\u90a3\u4e2a while \u5faa\u73af\u5185\u7684\u795e\u5947  ~~\u6bd2\u7624~~  \u5224\u5b9a\u6761\u4ef6:\n\n```cpp\nwhile( (((d_A=read())>=0)&((d_B=read())>=0)) ){\n}\n```\n\n\u662f\u8fd9\u4e48\u6765\u7684\uff1a\n\n\u9996\u5148\u4f1a\u8fd0\u884c\n```cpp\nd_A=read()\n```\n\n\u7136\u540e\u8fd9\u662f\u4e2a\u8d4b\u503c\u8bed\u53e5\uff0c\u8fd4\u56de\u503c\u5c31\u662f\u8d4b\u7684\u503c\uff0c\u6240\u4ee5\n```cpp\n(d_A=read())>=0)\n```\n\n\u5c31\u76f8\u5f53\u4e8e:\n\n```cpp\nd_A=read();\nd_A>=0;\n```\n\n\u540e\u9762\u7684\u540c\u7406\n\n\u8fd9\u6837\u5c31\u80fd\u4e00\u8fb9\u8bfb\u5165\uff0c\u4e00\u8fb9\u5224\u5b9a\u662f\u5426\u662f\u5faa\u73af\u8fb9\u754c\u4e86",
        "postTime": 1564721892,
        "uid": 36031,
        "name": "JustinRochester",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1023 \u3010\u7a0e\u6536\u4e0e\u8865\u8d34\u95ee\u9898\u3011"
    },
    {
        "content": "\u6b64\u9898\u4ee3\u7801\u4e00\u6c14\u5475\u6210\u51e0\u4e4e\u6ca1\u6709\u6539\u52a8\u4e00\u5904\uff0c\u4e00\u6b21AC\uff08\u5224\u65ad\u5f0f\u6253\u5b57\u5931\u8bef\u628a==\u6253\u6210=\u5bfc\u81f4\u4e00\u4e2aWA\uff0c\u6539\u6210==\u540e\u7acb\u5373AC\uff09\u3002\u8bf4\u660e\u6211\u7684\u601d\u8def\u662f\u6b63\u786e\u7684\u3002\n\n\u6b64\u9898\u96be\u70b9\u4e0d\u5728\u6c42\u8865\u8d34\u8fd8\u662f\u6263\u7a0e\uff0c\u8fd9\u4e2a\u903b\u8f91\u6bd4\u8f83\u7b80\u5355\u7684\uff0c\u5047\u8bbe\u6307\u5bfc\u4ef7\u4e0b\u7684\u5229\u6da6\u4e3aB\uff0c\u6bd4\u6307\u5bfc\u4ef7\u9ad8\u4e00\u5143\u7684\u5229\u6da6\u4e3aA\uff0c\u6bd4\u6307\u5bfc\u4ef7\u4f4e\u4e00\u5143\u7684\u5229\u6da6\u4e3aC\uff0c \u5982\u679cA < B < C\uff0c\u5219ANS++\uff0c \u5982\u679c A > B > C\uff0c \u5219ANS--\uff0c\u76f4\u5230A < B && C < B\uff0c\u5c31\u628aANS\u8f93\u51fa\u3002\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\nwhile((advice_price - 1 - cost + ans) * sales[advice_price-1] < (advice_price - cost + ans) * sales[advice_price]\n\t&& (advice_price - cost + ans) * sales[advice_price] < (advice_price - cost + 1 + ans) * sales[advice_price+1]){\n\tans++;\n}\n\t\nwhile((advice_price - 1 - cost + ans) * sales[advice_price-1] > (advice_price - cost + ans) * sales[advice_price]\n\t&& (advice_price - cost + ans) * sales[advice_price] > (advice_price - cost + 1 + ans) * sales[advice_price+1]){\n\t\t\tans--;\n}\n\t\t\ncout << ans;\n```\n\u6b64\u9898\u7684\u96be\u70b9\u5728\u4e8e\u6c42\u6307\u5bfc\u4ef7\u4e0b\u7684\u9500\u91cf\uff0c\u6bd4\u6307\u5bfc\u4ef7\u9ad8\u4e00\u5143\u65f6\u7684\u9500\u91cf\u548c\u6bd4\u6307\u5bfc\u4ef7\u4f4e\u4e00\u5143\u65f6\u7684\u9500\u91cf\u3002\u6211\u5b9a\u4e49\u4e86\u4e00\u4e2a\u9500\u91cf\u6570\u7ec4Sales[100000]\uff0c\u521d\u59cb\u503c\u4e3a0\uff0c\u8b6c\u5982\u6307\u5bfc\u4ef7\u4e3a21\u5143\u7684\u9500\u91cf\uff0c\u5c31\u653e\u5728Sales[21]\u91cc\uff0c\u6307\u5bfc\u4ef7\u4e3a20\u5143\u7684\u9500\u91cf\u5c31\u653e\u5728Sales[20]\u91cc\u3002\n\u8fd9\u91cc\u8981\u5206\u4e09\u79cd\u60c5\u51b5\u6765\u8ba8\u8bba\uff1a\n- \u6307\u5bfc\u4ef7**\u4f4e**\u4e8e\u5df2\u77e5\u6700\u9ad8\u5355\u4ef7\n- \u6307\u5bfc\u4ef7**\u7b49**\u4e8e\u5df2\u77e5\u6700\u9ad8\u5355\u4ef7\n- \u6307\u5bfc\u4ef7**\u9ad8**\u4e8e\u5df2\u77e5\u6700\u9ad8\u5355\u4ef7\n\n\u5728\u7b2c\u4e00\u79cd\u60c5\u51b5\u91cc\uff0c\u8fd8\u8981\u5206\u6210\u7ed9\u51fa\u6307\u5bfc\u4ef7\u4e0b\u7684\u9500\u91cf\u548c\u6ca1\u6709\u7ed9\u51fa\u6307\u5bfc\u4ef7\u4e0b\u7684\u9500\u91cf\u4e24\u79cd\u60c5\u51b5\u3002\n\u5177\u4f53\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n\tif(advice_price < last_price){\t\t\n\t\tif(sales[advice_price] == 0){\n\t\t\tint i = advice_price;\n\t\t\tint j = advice_price;\n\t\t\twhile(sales[i] == 0) i--;\n\t\t\twhile(sales[j] == 0) j++;\n\t\t\tint d = (sales[i] - sales[j]) / (j - i);\n\t\t\tsales[advice_price-1] = sales[i] - d * (advice_price - i - 1);\n\t\t\tsales[advice_price] = sales[i] - d * (advice_price - i);\n\t\t\tsales[advice_price+1] =\tsales[i] - d * (advice_price - i + 1);\n\t\t}else{\n\t\t\tint i = advice_price - 1;\n\t\t\tint j = advice_price + 1;\n\t\t\twhile(sales[i] == 0) i--;\n\t\t\twhile(sales[j] == 0) j++;\n\t\t\tint d1 = (sales[i] - sales[advice_price]) / (advice_price - i);\n\t\t\tint d2 = (sales[advice_price] - sales[j]) / (j - advice_price);\n\t\t\tsales[advice_price-1] = sales[i] - d1 * (advice_price - i - 1);\n\t\t\tsales[advice_price+1] =\tsales[advice_price] - d2;\n\t\t}\n\t}else if(advice_price == last_price){\n\t\tint i = advice_price - 1;\n\t\twhile(sales[i] == 0) i--;\n\t\tint d1 = (sales[i] - sales[advice_price]) / (advice_price - i);\n\t\tsales[advice_price-1] = sales[i] - d1 * (advice_price - i - 1);\n\t\tsales[advice_price+1] =\tsales[advice_price] - dec;\n\t}else{\n\t\tsales[advice_price-1] = sales[last_price] - dec * (advice_price - last_price -1);\n\t\tsales[advice_price] = sales[last_price] - dec * (advice_price - last_price);\n\t\tsales[advice_price+1] = sales[last_price] - dec * (advice_price - last_price +1);\t\n\t}\n```\n\u7528\u4e00\u4e2aif...else...\u7ec4\u5408\u5728advice_price < last_price, advice_price == last_price\u548cadvice_price > last_price\u4e09\u79cd\u60c5\u51b5\u4e0b\uff0c\u5206\u522b\u8ba1\u7b97\u51fa\u5982\u4e0b\u4e09\u4e2a\u503c\uff1a\n- sales[advice_price-1]\n- sales[advice_price]\n- sales[advice_price+1]\n\n\u7136\u540e\u5c31\u80fd\u7528\u6700\u521d\u7684\u903b\u8f91\u5224\u65ad\u4ee3\u7801\u8f7b\u677e\u6c42\u89e3\u3002\u603b\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include <iostream> \nusing namespace std;\n\nint main(void){\n\tint advice_price(0), cost(0), price(0), last_price(0), _sales(0), dec(0), ans(0) ;\n\tint sales[100000]{0};\n\tcin >> advice_price;\n\tcin >> cost >> sales[cost];\n\twhile(true){\n\t\tcin >> price >> _sales;\n\t\tif(price == -1 && _sales == -1) break;\n\t\tlast_price = price;\n\t\tsales[last_price] = _sales;\t\n\t}\n\tcin >> dec;\n\t\n\tif(advice_price < last_price){\t\t\n\t\tif(sales[advice_price] == 0){\n\t\t\tint i = advice_price;\n\t\t\tint j = advice_price;\n\t\t\twhile(sales[i] == 0) i--;\n\t\t\twhile(sales[j] == 0) j++;\n\t\t\tint d = (sales[i] - sales[j]) / (j - i);\n\t\t\tsales[advice_price-1] = sales[i] - d * (advice_price - i - 1);\n\t\t\tsales[advice_price] = sales[i] - d * (advice_price - i);\n\t\t\tsales[advice_price+1] =\tsales[i] - d * (advice_price - i + 1);\n\t\t}else{\n\t\t\tint i = advice_price - 1;\n\t\t\tint j = advice_price + 1;\n\t\t\twhile(sales[i] == 0) i--;\n\t\t\twhile(sales[j] == 0) j++;\n\t\t\tint d1 = (sales[i] - sales[advice_price]) / (advice_price - i);\n\t\t\tint d2 = (sales[advice_price] - sales[j]) / (j - advice_price);\n\t\t\tsales[advice_price-1] = sales[i] - d1 * (advice_price - i - 1);\n\t\t\tsales[advice_price+1] =\tsales[advice_price] - d2;\n\t\t}\n\t}else if(advice_price == last_price){\n\t\tint i = advice_price - 1;\n\t\twhile(sales[i] == 0) i--;\n\t\tint d1 = (sales[i] - sales[advice_price]) / (advice_price - i);\n\t\tsales[advice_price-1] = sales[i] - d1 * (advice_price - i - 1);\n\t\tsales[advice_price+1] =\tsales[advice_price] - dec;\n\t}else{\n\t\tsales[advice_price-1] = sales[last_price] - dec * (advice_price - last_price -1);\n\t\tsales[advice_price] = sales[last_price] - dec * (advice_price - last_price);\n\t\tsales[advice_price+1] = sales[last_price] - dec * (advice_price - last_price +1);\t\n\t}\n\t\n\tif(sales[advice_price+1] < 0) {\n\t\tcout << \"NO SOLUTION\";\n\t}else{\n\t\twhile((advice_price - 1 - cost + ans) * sales[advice_price-1] < (advice_price - cost + ans) * sales[advice_price]\n\t\t\t&& (advice_price - cost + ans) * sales[advice_price] < (advice_price - cost + 1 + ans) * sales[advice_price+1]){\n\t\t\tans++;\n\t\t}\n\t\n\t\twhile((advice_price - 1 - cost + ans) * sales[advice_price-1] > (advice_price - cost + ans) * sales[advice_price]\n\t\t\t&& (advice_price - cost + ans) * sales[advice_price] > (advice_price - cost + 1 + ans) * sales[advice_price+1]){\n\t\t\tans--;\n\t\t}\n\t\t\n\t\tcout << ans;\n\t}\t\t\n\t\n\treturn 0;\n}\n```\n",
        "postTime": 1563006639,
        "uid": 220075,
        "name": "lionelfung",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1023 \u3010\u7a0e\u6536\u4e0e\u8865\u8d34\u95ee\u9898\u3011"
    },
    {
        "content": "```cpp\n#include<iostream>\nusing namespace std;\nint expectedprice,expectedcount,price,count0,reduce,ii=0,subsidy=-1,expectedprofit,profit;\nint p[10000],c[10000];\nbool pflag=true,cflag=true,flag=true;\nint main()\n{\n//\tfreopen(\"suisou.in\",\"r\",stdin);\n//\tfreopen(\"suisou.out\",\"w\",stdout);\n\tcin>>expectedprice>>p[0]>>c[0];\n\tcin>>price>>count0;\n\twhile(price!=-1)//\u6ca1\u7ed3\u675f \n\t{\n\t\tif(price>p[ii]+1)//\u5982\u679c\u4ef7\u683c\u4e0d\u8fde\u7eed \n\t\t{\n\t\t\tfor(int i=p[ii]+1;i<=price-1;i++)//\u8865\u5145\u5b8c\u6574 \n\t\t\t{\n\t\t\t\tii++;\n\t\t\t\tc[ii]=c[ii-1]-(c[ii-1]-count0)/(price-p[ii-1]);//\u9500\u552e\u91cf \n\t\t\t\tp[ii]=p[ii-1]+1;//\u4ef7\u683c+1 \n\t\t\t\tif(p[ii]==expectedprice)expectedcount=c[ii];\n\t\t\t}\n\t\t}\n\t\tii++;\n\t\tc[ii]=count0;//\u5b58\u5165\u521a\u8f93\u5165\u7684\u9500\u552e\u91cf \n\t\tp[ii]=price;// \u5b58\u5165\u521a\u8f93\u5165\u7684\u9500\u552e\u4ef7\u683c \n\t\tif(p[ii]==expectedprice)expectedcount=c[ii];\n\t\tcin>>price>>count0;//\u7ee7\u7eed\u8f93\u5165 \n\t}\n\tcin>>reduce;//\u8f93\u5165\u6700\u9ad8\u4ef7\u4e4b\u540e\uff0c\u4ef7\u683c\u6bcf\u5347\u9ad81\u5143\uff0c\u51cf\u5c11\u7684\u9500\u552e\u91cf \n\tcount0=c[ii]-reduce;//\u5347\u9ad81\u5143\u4e4b\u540e\u7684\u9500\u552e\u91cf \n\twhile(count0>0)//\u9500\u552e\u91cf\u5927\u4e8e0 \n\t{\n\t\tii++;\n\t\tp[ii]=p[ii-1]+1;//\u4ef7\u683c\u589e\u52a01\u5143 \n\t\tc[ii]=count0;//\u9500\u552e\u91cf \n\t\tif(p[ii]==expectedprice)expectedcount=c[ii];\n\t\tcount0=c[ii]-reduce;//\u66f4\u65b0\u9500\u552e\u91cf \n\t}\n\twhile((pflag||cflag)&&flag)\n\t{\n\t\tflag=false; \n\t\tsubsidy++;//\u52a0\u4e0a\u8fd9\u4e2a\u6570\u662f\u8865\u8d34\uff0c\u51cf\u53bb\u8fd9\u4e2a\u6570\u662f\u7a0e\u6536 \n\t\texpectedprofit=(expectedprice-p[0]+subsidy)*expectedcount;//\u9884\u671f\u5229\u6da6 \n\t\tif(pflag)//\u5982\u679c\u8865\u8d34\u6709\u53ef\u80fd \n\t\t{\n\t\t\tfor(int i=0;i<=ii;i++)//\u5bf9\u4e8e\u6bcf\u79cd\u4ef7\u683c \n\t\t\t{\n\t\t\t\tprofit=(p[i]-p[0]+subsidy)*c[i];//\u5b9e\u9645\u5229\u6da6 \n\t\t\t\tif(profit>expectedprofit)//\u5982\u679c\u8d85\u8fc7\u9884\u671f\u5229\u6da6 \n\t\t\t\t{\n\t\t\t\t\tif(c[i]>expectedcount)pflag=false;\n\t\t\t\t\tflag=true;//\u5982\u679c\u9500\u552e\u91cf\u5927\u4e8e\u9884\u671f\u9500\u552e\u91cf \n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n        if(pflag&&!flag)break;\n\t\texpectedprofit=(expectedprice-p[0]-subsidy)*expectedcount;//\u9884\u671f\u5229\u6da6 \n\t\tif(cflag)//\u5982\u679c\u7a0e\u6536\u6709\u53ef\u80fd \n\t\t{\n\t\t\tfor(int i=0;i<=ii;i++)//\u5bf9\u4e8e\u6bcf\u79cd\u4ef7\u683c \n\t\t\t{\n\t\t\t\tprofit=(p[i]-p[0]-subsidy)*c[i];//\u5b9e\u9645\u5229\u6da6 \n\t\t\t\tif(profit>expectedprofit)//\u5982\u679c\u8d85\u8fc7\u9884\u671f\u5229\u6da6 \n\t\t\t\t{\n\t\t\t\t\tif(c[i]<expectedcount)cflag=false;\n\t\t\t\t\tflag=1;//\u5982\u679c\u9500\u552e\u91cf\u5927\u5c0f\u4e8e\u4e8e\u9884\u671f\u9500\u552e\u91cf \n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(flag)cout<<\"NO SOLUTION\";//\u5982\u679c\u65e0\u89e3 \n\telse if(pflag)cout<<subsidy;// \u5982\u679c\u8865\u8d34\uff0c\u8f93\u51fa\u8865\u8d34\u6570 \n\telse cout<<subsidy*(-1);//ru\u679c\u7a0e\u6536\uff0c\u8f93\u51fa\u7a0e\u6536\u6570\n\treturn 0;\n}\n```",
        "postTime": 1545653255,
        "uid": 81296,
        "name": "NOIP2019",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1023 \u3010\u7a0e\u6536\u4e0e\u8865\u8d34\u95ee\u9898\u3011"
    },
    {
        "content": "\u5c45\u7136\u6ca1\u4eba\u5199\u66b4\u529b,\u90a3\u6211\u5c31\u6765\u4e00\u53d1\n\n\u601d\u8def\u5f88\u7b80\u5355,\u5c31\u662f\u628a\u8f93\u5165\u7ed9\u5b9a\u7684\u4e24\u4e2a\u76f8\u90bb\u7684\u4ef7\u94b1\u4e2d\u95f4\u90e8\u5206\u8865\u4e0a(\u56e0\u4e3a\u662f\u7ebf\u6027\u7684)\u4ee5\u53ca\u4ece\u6700\u5927\u5f00\u59cb\u540e\u9762\u7684(\u9500\u91cf\u5927\u4e8e0),\u7136\u540e\u6309\u7edd\u5bf9\u503c\u5927\u5c0f\u679a\u4e3e\u7b54\u6848.\n\nP.S.\n\n1.\u5728\u8865\u4e4b\u524d\u6392\u4e2a\u5e8f,\u8865\u7684\u4e1c\u897f\u5148\u653e\u540e\u9762,\u6700\u540e\u518d\u6392\u4e00\u4e0b(\u8c8c\u4f3c\u6ca1\u6709\u5fc5\u8981)\n\n2.\u6392\u5e8f\u600e\u4e48\u6392?\u5192\u6ce1\u5457(^_^)\n\n3.\u6b64\u9898\u6570\u636e\u597d\u6c34,\u66b4\u529b4ms???\n\n\u8fd8\u6709\u597d\u591a\u7ec6\u8282,\u5982\u63d2\u5165\u65f6\u6539\u53d8\u4e86n\u7684\u503c,\u6240\u4ee5\u5fc5\u987b\u518d\u627e\u4e00\u4e2a\u53d8\u91cf\u4e34\u65f6\u653e\u7b49,\u5c31\u4e0d\u4e00\u4e00\u8bf4\u4e86,\u76f4\u63a5\u4e0a\u4ee3\u7801:\n\n```cpp\n#include<bits/stdc++.h>\n#define N 10005\nusing namespace std;\nint n,p[N],s[N],v[N];\nint gp,dc;\nvoid bubble(){//\u5192\u6ce1\u6392\u5e8f\n\tfor(int i=n;i>=0;i--){\n\t\tbool f=1;\n\t\tfor(int j=1;j<i;j++)if(p[j+1]<p[j])swap(p[j],p[j+1]),swap(s[j],s[j+1]),f=0;\n\t\tif(f)return;\n\t}\n}\nint getmax(int x){//\u8ba1\u7b97\u5728\u8865\u8d34x\u5143\u65f6\u6bcf\u4e2a\u76c8\u5229\u591a\u5c11\u5757,\u5e76\u8fd4\u56de\u6700\u5927\u7684\u7f16\u53f7\n\tint idx=1;\n\tfor(int i=1;i<=n;i++){\n\t\tv[i]=(p[i]-p[1]+x)*s[i];\n\t\tif(v[i]>v[idx])idx=i;\n\t}\n\treturn idx;\n}\nint main(){\n\tscanf(\"%d\",&gp);\n\tint a,b;\n\twhile(scanf(\"%d%d\",&a,&b)&&a!=-1&&b!=-1)p[++n]=a,s[n]=b;\n\tscanf(\"%d\",&dc);\n\tbubble();\n\tint nn=n;\n\tfor(int i=1;i<nn;i++){//\u5f88\u91cd\u8981,\u4e0d\u7136\u5c31\u6b7b\u5faa\u73af\u4e86\n\t\tint gap=(s[i+1]-s[i])/(p[i]-p[i+1]);\n\t\tfor(int j=p[i]+1,ss=s[i]-gap;j<p[i+1];j++,ss-=gap)p[++n]=j,s[n]=ss;\n\t}\n\tbubble();\n\tfor(int a=p[n]+1,b=s[n]-dc;b>0;a++,b-=dc)p[++n]=a,s[n]=b;\n\t//\u5224\u65ad\u662f\u5426\u65e0\u89e3\n\tint pos=-1;for(int i=1;i<=n&&pos==-1;i++)if(p[i]==gp)pos=i;\n\tif(pos==-1){\n\t\tprintf(\"No Solution\\n\");\n\t\treturn 0;\n\t} \n\tfor(int i=0;;++i){//\u66b4\u529b\n    \t//\u5206\u60c5\u51b5:i\u548c-i\n\t\tint j=getmax(i);\n\t\tif(v[j]==v[pos]){\n\t\t\tprintf(\"%d\\n\",i);\n\t\t\treturn 0;\n\t\t}\n\t\tj=getmax(-i);\n\t\tif(v[j]==v[pos]){\n\t\t\tprintf(\"%d\\n\",-i);\n\t\t\treturn 0;\n\t\t}\n\t}\n}\n```",
        "postTime": 1536318437,
        "uid": 121027,
        "name": "Spasmodic",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1023 \u3010\u7a0e\u6536\u4e0e\u8865\u8d34\u95ee\u9898\u3011"
    },
    {
        "content": "\u770b\u5230\u8ba8\u8bba\u533a@ Genius320 \u7684\u505a\u6cd5\u633a\u597d\u7684\uff0c\u642c\u8fd0\u5230\u9898\u89e3\u533a\u548c\u5927\u5bb6\u5206\u4eab\u4e00\u4e0b\u5427\u3002\n\n\u9898\u76ee\u7684\u601d\u60f3\u89c1\u4ee3\u7801\u91cc\u9762\u7684\u6ce8\u91ca\uff0c\u7531\u4e0b\u9762\u8fd9\u5f20\u56fe\u7684\u53d8\u5316\u8d8b\u52bf\u53ef\u77e5\u65e0\u89e3\u7684\u60c5\u51b5\u5e76\u4e0d\u5b58\u5728\u3002\n\n\u56fe\u7247\u6765\u6e90@ Genius320\n\n![](http://www.saruka.studio/wp-content/uploads/2017/10/P1023.png)\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#include <map>\nusing namespace std;\nconst int maxn = 10005;\nconst int INF = 23333333;\nmap <int, int> m;\nint n, decrease, highest, expectation, amount, price, cost;\ninline int getint()\n{\n\tint r = 0, k = 1;\n\tchar c = getchar();\n\tfor(; c < '0' || c > '9'; c = getchar())\n\t\tif(c == '-') k = -1;\n\tfor(; c >= '0' && c <= '9'; c = getchar())\n\t\tr = r * 10 + c - '0';\n\treturn r * k;\n}\nint main(int argc, char const *argv[])\n{\n\texpectation = getint(); \t// \u653f\u5e9c\u7684\u9884\u671f\u552e\u4ef7\n\tprice = getint(); \t\t\t// \u5546\u54c1\u9884\u671f\u5355\u4ef7\n\tamount = getint();  \t\t// \u5546\u54c1\u7684\u6570\u91cf\n\tm.insert(pair <int, int> (price, amount));\n\tint pre = expectation - 1;\n\tint nxt = expectation + 1;  // \u7528\u524d\u9a71\u548c\u540e\u7ee7\u7684\u65b9\u5f0f\u6765\u67e5\u627e\u6700\u5927\u503c\n\tint x, y;\n\twhile(scanf(\"%d%d\", &x, &y) && (x != -1 && y != -1))\n\t{\n\t\tint k = (amount - y) / (x - price); // \u8fd9\u4e2a\u662f\u659c\u7387\uff0c\u63a5\u4e0b\u6765\u901a\u8fc7\u659c\u7387\u6765\u6c42\u9500\u91cf \n\t\tif(price <= pre && pre <= x) m.insert(pair <int, int> (pre, y + (x - pre) * k));\n\t\tif(price <= nxt && nxt <= x) m.insert(pair <int, int> (nxt, y + (x - nxt) * k));\n\t\tif(price <= expectation && expectation <= x)\n\t\tm.insert(pair <int, int> (expectation, y + (x - expectation) * k));\n\t\tprice = x;\n\t\tamount = y;\n\t}\n\tdecrease = getint();  \t\t//\u51cf\u5c11\u7684\u91cf\n\tif(price < pre) m.insert(pair <int, int> (pre, amount - (pre - price) * decrease));\n\tif(price < nxt) m.insert(pair <int, int> (nxt, amount - (nxt - price) * decrease));\n\tif(price < expectation) m.insert(pair <int, int> (expectation, amount - (expectation - price) * decrease));\n\tcost = m.begin() -> first; \t// \u6210\u672c\u4ef7\u683c \n\tfor(int i = 0; ; i++)  \t\t// \u8865\u8d34\u7684\u90e8\u5206\n\t{\n\t\tint x = (pre - cost + i) * m[pre];\n\t\tint y = (expectation - cost + i) * m[expectation];\n\t\tint z = (nxt - cost + i) * m[nxt];\n\t\tif(x <= y && y >= z) { printf(\"%d\\n\", i); return 0; }\n\t\telse if(x > y) break;\n\t}\n\tfor(int i = -1; ; i--)  \t// \u6536\u7a0e\u7684\u90e8\u5206\n\t{\n\t\tint x = (pre - cost + i) * m[pre];\n\t\tint y = (expectation - cost + i) * m[expectation];\n\t\tint z = (nxt - cost + i) * m[nxt];\n\t\tif (x <= y && y >= z) { printf(\"%d\\n\", i); return 0; }\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1508424763,
        "uid": 27189,
        "name": "saruka",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1023 \u3010\u7a0e\u6536\u4e0e\u8865\u8d34\u95ee\u9898\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\n\n\u7531\u4e8e\u552e\u4ef7\u4e0e\u9500\u91cf\u4e0d\u662f\u7ebf\u6027\u51fd\u6570\u5173\u7cfb\uff0c\u800c\u53ef\u4ee5\u770b\u6210\u4e00\u4e2a\u5206\u6bb5\u51fd\u6570\uff0c\u6bcf\u6bb5\u90fd\u662f\u7ebf\u6027\u7684\u6240\u4ee5\u53ef\u4ee5\u8fdb\u884c\u5206\u6bb5\uff0c\u6bcf\u6bb5\u90fd\u662f\u7ebf\u6027\u7684\uff08\u5206\u6bb5\u65b9\u6cd5\uff1a\u6570\u636e\u7684\u76f8\u90bb\u4e24\u9879\u4e3a\u67d0\u4e00\u6bb5\u7684\u4e24\u4e2a\u7aef\u70b9\uff0c\u6700\u540e\u5269\u4e0b\u7684\u90e8\u5206\u4e3a\u4e00\u6bb5\uff0c\u6b64\u65f6\u7aef\u70b9\u4f1a\u540c\u65f6\u5728\u4e24\u6bb5\u91cc\uff09\uff0c\u5e76\u8ba9\u8865\u8d34\uff08\u7a0e\u6536\uff09\u989d\u4f7f\u9884\u662f\u671f\u4ef7\u683c\u5728\u5b83\u6240\u5728\u6bb5\u4e2d\u6700\u9ad8\uff0c\u5728\u5224\u65ad\u5b83\u662f\u5426\u6700\u9ad8\u70b9\u3002\uff08\u7531\u4e8e\u6bcf\u4e00\u6bb5\u90fd\u662f\u7ebf\u6027\u7684\uff0c\u56e0\u6b64\u8865\u8d34\u8d8a\u9ad8\uff08\u7a0e\u6536\u8d8a\u4f4e\uff09\uff0c\u7b26\u5408\u9884\u671f\u7684\u4ef7\u683c\u8d8a\u4f4e\uff09\u3002\n\n\u7b97\u6cd5\uff1a\n\nS1\uff1a\u5c55\u5f00\u8f93\u5165\u6570\u636e\uff08\u5982\u6837\u4f8b\uff0c\u53ef\u5c55\u5f00\u4e3a{ { 28 , 130 } , { 30 , 120 } , { 31 , 110 } , {38 , 5 } } , { { 28 , 130 } , { 29 , 125 } , { 30 , 120 } , { 31 , 110 } , { 32 , 95 } , { 33 , 80 } , { 34 , 65 } , { 35 , 50 } , { 36 , 35 } , { 37 , 20 } , { 38 , 5 } }\uff0c\u6ce8\u610f\u539f\u6536\u636e\u540e\u8981\u52a0\u9500\u91cf\u4e3a\u6b63\u65f6\u7684\u7406\u8bba\u6700\u9ad8\u552e\u4ef7\u4e14\u539f\u6570\u636e\u4e0d\u5f97\u5220\u9664\u6216\u88ab\u8986\u76d6\uff09\u3002\n\nS2\uff1a\u5224\u65ad\u9884\u671f\u4ef7\u683c\u4e3a\u4e8e\u54ea\u4e00\u6bb5\u6216\u54ea\u4e24\u6bb5\u5185\u3002\n\nS3\uff1a\u7528check\u51fd\u6570\u8ba1\u7b97\u6700\u4f4e\u503c\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ndouble p , a[10000][2] = { 0 } , b[10000][2] = { 0 } , ans = 1000000000;             //p:\u9884\u671f\u4ef7\u683c\uff0ca:\u539f\u6570\u636e\uff0cb:\u5c55\u5f00\u540e\u7684\u6570\u636e\uff0cans:\u6700\u4f4e\u503c\nint i , na = 0 , nb = 0 , up;                                                                           //i:\u5faa\u73af\u53d8\u91cf\uff0cna:a\u7684\u957f\u5ea6\uff0cnb:b\u7684\u957f\u5ea6\uff0cup:\u6700\u540e\u4e00\u4e2a\u7ebf\u6027\u6bb5\u7684\u516c\u5dee\ninline int check( int left , int right , int add )                                                 //left:\u7ebf\u6027\u6bb5\u7684\u7b2c\u4e00\u4e2a\u7aef\u70b9\uff0cright:\u7ebf\u6027\u6bb5\u7684\u7b2c\u4e8c\u4e2a\u7aef\u70b9\uff0cadd:\u8865\u8d34\n//\u51fd\u6570\u7528\u4e8e\u8ba1\u7b97\u5728left~right\u7684\u8303\u56f4\u5185\uff0c\u8865\u8d34\u4e3aadd\u7684\u60c5\u51b5\u4e0b\uff0c\u9884\u671f\u4ef7\u683c\u4e0e\u6700\u9ad8\u4ef7\u683c\u7684\u5927\u5c0f\u5173\u7cfb\n{\n    double sell , re[2] , max = -1000000000;                                                //\u6b63\u5e38\u7528re[0]\uff0c\u6709\u4e24\u4e2a\u6700\u5927\u7b54\u6848\u65f6\u7528re[1]\n    bool found = 0;\n    for( int i = 0 ; i < nb ; i++ )\n    {\n        if( b[i][0] >= left && b[i][0] <= right )\n        {\n            sell = -----\uff081\uff09-----;\n            if( sell >= max )\n            {\n                max = sell;\n                if( found )\n                    re[1] = i + a[0][0];\n                else\n                    re[0] = i + a[0][0];\n                found = 1;\n            }\n        }\n    }\n    if( -----\uff082\uff09----- )\n        return 0;\n    if( re[0] > p )\n        return 1;\n    return -1;\n}\n\nint main()\n{\n    cin >> p;\n    do\n    {\n        cin >> a[na][0] >> a[na][1];\n        b[nb][0] = a[na][0] , b[nb][1] = a[na][1];\n        if( a[na][0] == -1 && a[na][1] == -1 )\n            break;\n        if( na != 0 && a[na][0] - 1 != a[na - 1][0] )\n        {\n            int dif0 = a[na][0] - a[na - 1][0] , dif1 = ( a[na - 1][1] - a[na][1] ) / dif0;\n            while( dif0 > 1 )\n            {\n                b[nb + 1][0] = b[nb][0];\n                b[nb + 1][1] = b[nb][1];\n                b[nb][0] = b[nb - 1][0] + 1;\n                b[nb][1] = b[nb - 1][1] + dif1;\n                dif0--;\n                nb++;\n            }\n        }\n        na++;\n        nb++;\n    }while( a[na - 1][0] != -1 && a[na - 1][1] != -1 );\n    cin >> up;\n    double x = a[na - 1][1];\n    while( x > 0 )\n    {\n        b[nb][0] = b[nb - 1][0] + 1;\n        b[nb][1] = b[nb - 1][1] - up;\n        x -= up;\n        nb++;\n    }\n    nb--;\n    a[na][0] = b[nb - 1][0];\n    a[na][1] = b[nb - 1][1];\n    na++;for(i=0;i<nb;i++)cout<<b[i][0]<<' '<<b[i][1]<<'\\n';\n    for( i = 1 ; i < na ; i++ )\n        if( a[i - 1][0] <= p && p <= a[i][0] )\n        {\n            int add = 0;\n            while( check( a[i - 1][0] , a[i][0] , add ) >= 0 )\n            {\n                if( check( -----\uff083\uff09----- ) == 0 )\n                {\n                    if( abs( add ) <= abs( ans ) && add > a[0][0] - p )\n                        ans = add;\n                    break;\n                }\n                -----\uff084\uff09-----;\n            }\n            add = 0;\n            while( check( a[i - 1][0] , a[i][0] , add ) <= 0 )\n            {\n                if( check( a[0][0] , a[na - 1][0] , add ) == 0 )\n                {\n                    if( abs( add ) <= abs( ans ) && add > a[0][0] - p )\n                        ans = add;\n                    break;\n                }\n                add--;\n            }\n        }\n    if( ans == 1000000000 )\n        cout << \"NO SOLUTION\";\n    else\n        cout << ans;\n}\n```",
        "postTime": 1507175224,
        "uid": 61068,
        "name": "01190220csl",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1023 \u3010\u7a0e\u6536\u4e0e\u8865\u8d34\u95ee\u9898\u3011"
    },
    {
        "content": "\u89e3\u9898\u601d\u8def\n\n\n\u653f\u5e9c\u8981\u6c42\u5728\u9884\u671f\u4ef7\u683c\u4e0a\u53d6\u5f97\u6700\u5927\u503c\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5bf9\u6bcf\u4e00\u9879\u6570\u636e\u90fd\u5217\u51fa\u4e00\u4e2a\u4e0d\u7b49\u5f0f\uff0c\u901a\u8fc7\u89e3\u4e0d\u7b49\u5f0f\u6765\u5f97\u5230\u8865\u8d34\u6216\u8005\u7a0e\u6536\u7684\u53d6\u503c\u8303\u56f4\u3002\n\n\u8bbe\u9884\u671f\u4ef7\u683c\u4e3a c \uff0c\u5176\u5bf9\u5e94\u7684\u9500\u552e\u91cf\u4e3a j \uff0c\u6210\u672c\u4e3a i ,\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e00\u5bf9\u6570\u636e a b\uff0c\u90fd\u53ef\u4ee5\u5217\u51fa\u5982\u4e0b\u7684\u4e0d\u7b49\u5f0f\uff1a\n\n(c\u2212i+x)\u22c5j\u2265(a\u2212i+x)\u22c5b\n\n\u7531\u4e8e\u7b49\u5f0f\u4e24\u4fa7\u540c\u65f6\u9664\u4ee5\u8d1f\u6570\u9700\u8981\u6539\u53d8\u7b26\u53f7\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5206\u4e24\u79cd\u60c5\u51b5\u6765\u8ba8\u8bba\uff1a\n\n\u5f53 j>b \u65f6,\u901a\u8fc7\u79fb\u9879\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\uff1a\n\nx\u2265(a\u2212i)\u22c5b\u2212(c\u2212i)\u22c5j/(j\u2212b)\n\n\u4ece\u800c\u5f97\u51fa\u4e86 x \u7684\u6700\u5c0f\u503c\n\n\u5f53 j<b \u65f6,\u901a\u8fc7\u79fb\u9879\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\uff1a\n\nx\u2264(c\u2212i)\u22c5j\u2212(a\u2212i)\u22c5b/(b\u2212j)\n\n\u4ece\u800c\u5f97\u51fa\u4e86 x \u7684\u6700\u5c0f\u503c\n\n\u5f53\u6570\u636e\u4e2d\u51fa\u73b0\u95f4\u9694\u7684\u65f6\u5019\u4e0d\u9700\u8981\u5bf9\u95f4\u9694\u4e2d\u7684\u6bcf\u4e00\u7ec4\u6570\u636e\u90fd\u6c42\u503c\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u533a\u95f4\u4e2d\u7684\u6570\u636e\u662f\u6309\u7167\u56fa\u5b9a\u7684\u503c\u9012\u51cf\uff0c\u6613\u8bc1\u533a\u95f4\u4e2d\u6240\u6709\u6570\u636e\u6240\u8ba1\u7b97\u51fa\u7684\u6700\u5927\u6700\u5c0f\u503c\u5747\u76f8\u540c\uff0c\u56e0\u6b64\u53ea\u9700\u8981\u8ba1\u7b97\u533a\u95f4\u7684\u5de6\u53f3\u7aef\u70b9\u7684\u503c\u5373\u53ef\n\n\u7531\u4e8e\u5bf9\u9884\u671f\u4ef7\u683c\u8fdb\u884c\u4e86\u7279\u6b8a\u5904\u7406\uff0c\u6240\u4ee5\u4ee5\u7279\u6b8a\u4ef7\u683c\u4e3a\u540e\u7aef\u70b9\u7684\u533a\u95f4\u4f1a\u5c06\u4e0d\u5b58\u5728\u6570\u636e\uff0c\u56e0\u6b64\u8981\u4e3a\u8fd9\u4e2a\u533a\u95f4\u586b\u8865\u4e00\u4e2a\u5143\u7d20\n\n\u5f53\u8d85\u8fc7\u6700\u5927\u4ef7\u683c\u4e4b\u540e\u7531\u4e8e\u540c\u6837\u662f\u6309\u7167\u4e00\u4e2a\u56fa\u5b9a\u7684\u503c\u9012\u51cf\uff0c\u90a3\u4e48\u6211\u4eec\u4e5f\u53ea\u9700\u8981\u8ba1\u7b97\u4e00\u4e2a\u8d85\u8fc7\u6700\u5927\u503c\u7684\u6570\u636e\u5373\u53ef\n\n\u6ce8\u610f\uff1a\u5f53\u51fa\u73b0\u5c0f\u6570\u60c5\u51b5\u65f6\u6700\u5927\u503c\u9700\u8981\u5411\u4e0b\u53d6\u6574\uff0c\u6700\u5c0f\u503c\u9700\u8981\u5411\u4e0a\u53d6\u6574(cmath\u5934\u6587\u4ef6\u4e2d ceil \u51fd\u6570\u5411\u4e0a\u53d6\u6574 \uff0c floor\u51fd\u6570\u5411\u4e0b\u53d6\u6574)\n\n\u6e90\u4ee3\u7801\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cmath>\nusing namespace std;\nstruct data {\n    int a;\n    int b;\n} small[500], big[500];// small\u4fdd\u5b58\u6240\u6709\u4ef7\u683c\u5c0f\u4e8e\u9884\u671f\u4ef7\u683c\u7684\u6570\u636e\uff0cbig\u4fdd\u5b58\u6240\u6709\u4ef7\u683c\u5927\u4e8e\u9884\u671f\u4ef7\u683c\u7684\u6570\u636e\nint sl,bl;\ndouble MAX = 999999999,MIN = -999999999;\nint e;\nint expect;\nint beyond;\nvoid getMAX(){ // \u8ba1\u7b97\u6700\u5927\u503c\n    for (int i = 1; i <= sl; i++) {\n        double tMAX = (expect - small[1].a) * e - (small[i].a - small[1].a) * small[i].b;\n        tMAX = tMAX / (small[i].b - e); // \u8ba1\u7b97\u5bf9\u4e8e\u5f53\u524d\u4ef7\u4f4d\u65f6\u7a0e\u91d1\u6216\u8865\u8d34\u7684\u6700\u5927\u503c\n        MAX = min(MAX, tMAX);\n    }\n}\nvoid getMIN(){ // \u8ba1\u7b97\u6700\u5c0f\u503c\n    for (int i = 1;i <= bl;i++) {\n        double tMIN = (big[i].a - small[1].a) * big[i].b - (expect - small[1].a) * e;\n        tMIN = tMIN / (e - big[i].b);// \u8ba1\u7b97\u5bf9\u4e8e\u5f53\u524d\u4ef7\u4f4d\u65f6\u7a0e\u91d1\u6216\u8865\u8d34\u7684\u6700\u5c0f\u503c\n        MIN = max(MIN, tMIN);\n    }\n}\nint main() {\n    freopen(\"in.txt\", \"r\", stdin);\n    cin >> expect;\n    int a,b;\n    while (true) {\n        cin >> a >> b;\n        if (a == -1 && b == -1)\n            break;\n        if (a < expect) { // \u5f53\u8bfb\u5165\u7684\u6570\u636e\u5c0f\u4e8e\u9884\u671f\u4ef7\u683c\u65f6\n            sl++;\n            small[sl].a = a;\n            small[sl].b = b;\n        } else if (a > expect) { // \u5f53\u8bfb\u5165\u7684\u6570\u636e\u5927\u4e8e\u9884\u671f\u4ef7\u683c\u65f6\n            bl++;\n            big[bl].a = a;\n            big[bl].b = b;\n        } else {\n            e = b;\n        }\n    }\n    cin >> beyond;\n    if (e == 0) { // \u5982\u679c\u8bfb\u5165\u6570\u636e\u4e2d\u4e0d\u5b58\u5728\u9884\u671f\u4ef7\u683c\u7684\u6570\u636e\n        if (bl == 0) // \u5f53\u8bfb\u5165\u7684\u6570\u636e\u5b58\u5728\u5927\u4e8e\u9884\u671f\u6570\u636e\u7684\u60c5\u51b5\n            e = small[sl].b - (expect - small[sl].a) * beyond;\n        else  // \u5f53\u9884\u671f\u6570\u636e\u5df2\u7ecf\u8d85\u8fc7\u4e86\u6240\u7ed9\u51fa\u7684\u6700\u5927\u4ef7\u683c\n            e = small[sl].b - (small[sl].b - big[1].b) / (big[1].a - small[sl].a) * (expect - small[sl].a);\n    }\n    if (small[sl].a != expect - 1) { // \u6dfb\u52a0\u4e00\u7ec4\u4ef7\u683c\u6b63\u597d\u662f\u9884\u671f\u4ef7\u683c -1 \u7684\u6570\u636e\uff0c\u4ee5\u586b\u8865\u9884\u671f\u4ef7\u683c\u7684\u7a7a\u7f3a\n        sl++;\n        small[sl].a = expect - 1;\n        small[sl].b = e + beyond;\n    }\n    bl++;\n    if (bl == 1) { // \u586b\u8865\u4e00\u7ec4\u8d85\u8fc7\u6700\u5927\u4ef7\u683c\u7684\u6570\u636e\n        big[bl].a = expect + 1;\n        big[bl].b = e - beyond;\n    } else {\n        big[bl].a = big[bl - 1].a + 1;\n        big[bl].b = big[bl - 1].b - beyond;\n    }\n    getMAX();\n    getMIN();\n    //MIN++;\n    //MAX--;\n    //cout << MIN << \" \" << MAX << endl;\n    MIN = ceil(MIN); // \u6700\u5c0f\u503c\u5411\u4e0a\u53d6\u6574\n    MAX = floor(MAX); // \u6700\u5927\u503c\u5411\u4e0b\u53d6\u6574\n    if (MIN > MAX) \n        cout << \"NO SOLUTION\";\n    else {\n        if(MAX < 0)\n            cout << MAX;\n        else if(MIN >= 0)\n            cout << MIN;\n        else \n            cout << 0;\n    }\n    return 0;\n}\n```",
        "postTime": 1498643880,
        "uid": 25845,
        "name": "Snitro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1023 \u3010\u7a0e\u6536\u4e0e\u8865\u8d34\u95ee\u9898\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6709\u4e00\u4e2a\u5751\u8981\u6ce8\u610f\uff0c\u6700\u5927\u503c\u53ef\u80fd\u4e0d\u6b62\u4e00\u4e2a\u3002\n\u9898\u76ee\u7684\u601d\u8def\u5982\u4e0b\uff1a\n1\u3001\u5148\u6c42\u51fa\u4ef7\u683c\u4e0e\u9500\u552e\u91cf\u7684\u5217\u8868\u6216\u5b57\u5178\uff0c\u5217\u8868\u4e2d\u4ef7\u683c\u589e\u5e45\u4e3a1\u5143\uff0c\u5217\u8868\u4ef7\u683c\u7531\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n2\u3001\u6c42\u51fa\u6700\u5927\u503c\u7684\u5e8f\u53f7\u5217\u8868\uff08\u6ce8\u610f\u6700\u5927\u503c\u53ef\u80fd\u4f1a\u67092\u4e2a\u4ee5\u4e0a\uff0c\u5982\u679cindex\uff08max\uff09\u53ea\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5e8f\u53f7\uff0c\u5373\u6700\u5148\u51fa\u73b0\u6700\u5927\u503c\u7684\u5e8f\u53f7\uff0c\u540e\u9762\u503c\u76f8\u7b49\u7684\u5e8f\u53f7\u4e0d\u4f1a\u53cd\u9988\uff09\n3\u3001\u5224\u65ad\u6700\u5927\u503c\u51fa\u73b0\u7684\u5e8f\u53f7\u662f\u5426\u4e0e\u653f\u5e9c\u5b9a\u4ef7\u7684\u5e8f\u53f7\u76f8\u7b49\uff0c\u76f8\u7b49\u8bf4\u660e\u6709\u89e3\u3002\n4\u3001\u5f53\u9996\u4e2a\u6700\u5927\u503c\u5e8f\u53f7\u51fa\u73b0\u5728\u653f\u5e9c\u5b9a\u4ef7\u5e8f\u53f7\u5de6\u4fa7\u65f6\u5019\uff0c\u9700\u8981\u589e\u52a0\u7a0e\u91d1\uff1b\u5f53\u9996\u4e2a\u6700\u5927\u503c\u5e8f\u53f7\u51fa\u73b0\u5728\u653f\u5e9c\u5b9a\u4ef7\u5e8f\u53f7\u53f3\u4fa7\u65f6\u5019\uff0c\u9700\u8981\u589e\u52a0\u8865\u8d34\uff0c\u5faa\u73af\u8ba1\u7b97\u3002\u8fd9\u91cc\u8fd8\u6709\u4e2a\u5751\u9700\u8981\u6ce8\u610f\uff0c\u5f53\u589e\u52a0\u8865\u8d34\u6216\u7a0e\u91d1\u65f6\uff0c\u53ef\u80fd\u4f1a\u8df3\u8fc7\u653f\u5e9c\u5b9a\u4ef7\u5e8f\u53f7\uff0c\u5bfc\u81f4\u53cd\u590d\u5faa\u73af\uff0c\u56e0\u6b64\u9700\u8981\u52a0\u4e00\u4e2a\u5224\u65ad\u3002\u5982\u679c\u4e0d\u52a0\u5224\u65ad\u4e5f\u53ef\u4ee5\u505a\uff0c\u7528\u66b4\u529b\u679a\u4e3e\u6cd5\u89e3\uff0c\u4f46\u65f6\u95f4\u4f1a\u8d85\u65f6\uff0c\u539f\u6765\u5c31\u662f\u8d85\u65f6\u624d\u8fdb\u884c\u4e86\u4f18\u5316\u3002\n```python\nprice_gov = int(input())    # \u653f\u5e9c\u9650\u4ef7\nL_price_num = []\nL_price_num2 = {}\nfor i in range(10000):\n    L = input().split()\n    if L != ['-1', '-1']:\n        L_price_num.append([int(L[0]), int(L[1])])\n    else:\n        break\nL_price_num1 = sorted(L_price_num, key=lambda price_num: price_num[0])\njian_num = int(input())     # \u4e3a\u8d85\u51fa\u4ef7\u683c\u6bcf\u589e\u52a01\u5143\u51cf\u5c11\u7684\u9500\u91cf\nfor i in range(len(L_price_num1)):\n    if i == 0:\n        L_price_num2[L_price_num1[i][0]] = L_price_num1[i][1]\n    else:\n        a = L_price_num1[i][0] - L_price_num1[i-1][0]\n        b = (L_price_num1[i][1] - L_price_num1[i-1][1]) / a\n        L0 = L_price_num1[i-1][0]\n        L1 = L_price_num1[i-1][1]\n        if a == 1:\n            L_price_num2[L_price_num1[i][0]] = L_price_num1[i][1]\n        else:\n            for k in range(1, a+1):\n                L0 += 1\n                L1 += b\n                L_price_num2[L0] = L1\nc = L_price_num1[-1][1] // jian_num\nL0 = L_price_num1[-1][0]\nL1 = L_price_num1[-1][1]\nfor i in range(1, c+1):\n    L0 += 1\n    L1 -= jian_num\n    L_price_num2[L0] = L1\n# \u4ee5\u4e0a\u4e3a\u6b65\u9aa41\uff0c\u5efa\u7acb\u4ef7\u683c-\u9500\u91cf\u7684\u5b57\u5178\n\nsuijin = 0      # \uff08-\uff09\u7a0e\u91d1\u6216\u8865\u8d34\nflag = 0\nfor i in range(100000):\n    Lr = []\n    for a in L_price_num2.keys():\n        Lr.append((a - L_price_num1[0][0] + suijin) * L_price_num2[a])\n    n = Lr.index(max(Lr))\n    n_list = []\n    for k in range(Lr.count(max(Lr))):\t# \u4ee5\u4e0b\u6b65\u9aa42\uff0c\u5efa\u7acb\u6700\u5927\u503c\u5e8f\u53f7\u5217\u8868\n        n_list.append(Lr.index(max(Lr)))\n        Lr[Lr.index(max(Lr))] = 0\n    if price_gov - L_price_num1[0][0] in n_list:\t# \u6b65\u9aa43\uff0c\u5224\u65ad\u653f\u5e9c\u5b9a\u4ef7\u662f\u5426\u5728\u6700\u5927\u503c\u5e8f\u53f7\u5217\u8868\u4e2d\n        flag = 1\n        print(str(suijin))\n        break\n    elif n > price_gov - L_price_num1[0][0]:\t# \u6b65\u9aa44\uff0c\u5f53\u9996\u4e2a\u6700\u5927\u503c\u5e8f\u53f7\u51fa\u73b0\u5728\u653f\u5e9c\u5b9a\u4ef7\u5e8f\u53f7\u53f3\u4fa7\u65f6\u589e\u52a0\u8865\u8d34\n        if suijin < 0:\t# \u9012\u589e\u5224\u65ad\uff0c\u9632\u6b62\u53cd\u590d\u5faa\u73af\n            break\n        else:\n            suijin += 1\n    else:\t# \u6b65\u9aa44\uff0c\u5f53\u9996\u4e2a\u6700\u5927\u503c\u5e8f\u53f7\u51fa\u73b0\u5728\u653f\u5e9c\u5b9a\u4ef7\u5e8f\u53f7\u5de6\u4fa7\u65f6\u589e\u52a0\u7a0e\u91d1\n        if suijin > 0:\t# \u9012\u51cf\u5224\u65ad\uff0c\u9632\u6b62\u53cd\u590d\u5faa\u73af\n            break\n        else:\n            suijin -= 1\nif flag == 0:\n    print('NO SOLUTION')\n```\n",
        "postTime": 1571709571,
        "uid": 253832,
        "name": "pissingboy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1023 \u3010\u7a0e\u6536\u4e0e\u8865\u8d34\u95ee\u9898\u3011\uff08Python\uff09"
    },
    {
        "content": "\u9898\u76ee\u5206\u6790\u5404\u4f4d\u5927\u4f6c\u5df2\u7ecf\u505a\u7684\u5f88\u8be6\u7ec6\uff0c\u5c31\u4e0d\u8d58\u8ff0\u4e86\u3002\n\u4e3b\u8981\u8c08\u8c08\u5199\u7684\u4ee3\u7801\u3002\u6ca1\u6709\u7528\u6570\u7ec4\u5916\u7684\u6570\u636e\u7ed3\u6784\u5374\u5e76\u4e0d\u957f\u3002\n```cpp\n\n#include<bits/stdc++.h>\nusing namespace std;\nint b,c,yu,cx,cb,k,a[1000005],mx,f;//\u7528a[i]\u8868\u793a\u5355\u4ef7\u4e3ai\u65f6\u7684\u9500\u91cf\nint main()\n{\n\tcin>>yu>>cb>>cx;\n\twhile(1)\n\t{\n\t\tcin>>b>>c;\n\t\tif(b==-1&&c==-1)break;\n\t\ta[b]+=c;\n\t\tmx=max(mx,b);//\u6c42\u5df2\u77e5\u6700\u5927\u5355\u4ef7\n\t}\n\tcin>>k;\n\ta[cb]=cx;\n\tfor(int i=cb+1;i<=mx;i++)\n\t{\n\t\tif(a[i]==0&&f==0) f=i;//\u6807\u8bb0\u6ca1\u6709\u8f93\u5165\u7684\u5355\u4ef7\u7684\u8d77\u59cb\u503c\n\t\telse if(a[i]!=0&&f>0) //\u51fa\u73b0\u4e86\u6ca1\u6709\u8f93\u5165\u7684\u5355\u4ef7\u533a\u95f4\u7684\u672b\u503c\n\t\t{\n\t\t\tint d=a[f-1]-a[i];\n\t\t\td/=(i-f+1);//\u6c42\u516c\u5dee\n\t\t\tfor(int j=f;j<=i-1;j++)//\u8fd9\u4e2a\u6574\u6570\u533a\u95f4\u662f\u9012\u51cf\u6570\u5217\uff0c\u53ef\u9012\u63a8\u8d4b\u503c\n\t\t\t{\n\t\t\t\ta[j]=a[j-1]-d;\n\t\t\t}\n        \tf=0;   \n\t\t}\n\t}\n\tfor(int i=mx+1;;i++)\n\t{\n\t\ta[i]=a[i-1]-k;//\u8d85\u8fc7\u5df2\u77e5\u6700\u5927\u5355\u4ef7\uff0c\u51cf\u91cf\u4e3ak\n\t\tif(a[i]<=0)\n\t\t{\n\t\t\tmx=i-1;//\u66f4\u65b0\u6700\u5927\u5355\u4ef7\n        \tbreak;\n\t\t}\n\t}\n\tfor(int i=0;i<=200000;i++)//\u6536\u7a0e\u4e0e\u8865\u8d34\u5408\u4e00\uff0c\u7528\u6b63\u8d1f\u53f7\u533a\u5206\u5373\u53ef\n\t{\n\t\tint yj1,yj2,f1=1,f2=1;\n\t\tyj1=(yu-cb+i)*a[yu];\n\t\tyj2=(yu-cb-i)*a[yu];//\u5206\u522b\u8868\u793a\u6536\u7a0ei\u5143\u3001\u8865\u8d34i\u5143\u7684\u9884\u671f\u603b\u5229\u6da6\n\t\tfor(int j=cb+1;j<=mx;j++)\n\t\t{\n\t\t\tif(j==yu)continue;\n\t\t\tif(f1==1)\n\t\t\t{\n\t\t\t\tif((j-cb+i)*a[j]>yj1)f1=0;\n\t\t\t}\t\t\t//f1==0\u4ee3\u8868\u6709\u6bd4\u8865\u8d34i\u5143\u540e\u9884\u671f\u603b\u5229\u6da6\u5927\u7684\n\t\t\tif(f2==1)\n\t\t\t{\n\t\t\t\tif((j-cb-i)*a[j]>yj2)f2=0;\n\t\t\t}\t\t\t//f2==0\u4ee3\u8868\u6709\u6bd4\u6536\u7a0ei\u5143\u540e\u9884\u671f\u603b\u5229\u6da6\u5927\u7684\n\t\t\tif(f1+f2==0)break;//\u90fd\u4e3a0\uff0c\u4ee3\u8868i\u4e0d\u6ee1\u8db3\u9898\u610f\n\t\t}\n\t\tif(f1==1)\n\t\t{\n\t\t\tcout<<i;return 0;\n\t\t}\n\t\tif(f2==1)\n\t\t{\n\t\t\tcout<<-i;return 0;\n\t\t}\t//\u7531\u4e8ei\u7684\u7edd\u5bf9\u503c\u662f\u9012\u589e\u7684\uff0c\u7b2c\u4e00\u6b21\u8f93\u51fa\u7684\u5c31\u662f\u7edd\u5bf9\u503c\u6700\u5c0f\u7684\n\t}\n\tcout<<\"NO SOLUTION\";//\u6ca1\u6709\u6ee1\u8db3\u9898\u610f\u7684i\n}\n```\n",
        "postTime": 1567914185,
        "uid": 224895,
        "name": "__int",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1023 \u3010\u7a0e\u6536\u4e0e\u8865\u8d34\u95ee\u9898\u3011"
    },
    {
        "content": "```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nint x,x1,a[10001],b[10001],change,t=1,i,j,s,flag1,flag2,n1,n2,flag;\nint mscore(int a,int b)\n{\n    return a>b;\n}\nusing namespace std;\nint main()\n{\n    scanf(\"%d%d%d\",&x,&a[0],&b[0]);//\u8f93\u5165\u9884\u671f\u4ef7\uff0c\u4ee5\u53ca\u6210\u672c\u3001\u6210\u672c\u9500\u91cf\n    while(a[t-1]!=-1)//\u8f93\u5165\n    {\n    scanf(\"%d%d\",&a[t],&b[t]);\n    t++;\n    }\n    t--;\n    sort(a,a+t);//\u628a\u4ef7\u683c\u9500\u91cf\u8fdb\u884c\u6392\u5e8f\uff0c\u56e0\u4e3a\u4ef7\u683c\u8d8a\u9ad8\u9500\u91cf\u8d8a\u5c0f\uff0c\u6240\u4ee5\u4e24\u4e2a\u6570\u7ec4\u6392\u5e8f\u987a\u5e8f\u76f8\u53cd\uff0c\u5219\u4ef7\u683c\u9500\u91cf\u53ef\u4ee5\u4e92\u76f8\u5339\u914d\n    sort(b,b+t,mscore);\n    scanf(\"%d\",&change);//\u8f93\u5165\u53d8\u5316\u91cf\n    s=t;\n    for(i=1;i<t;i++)\n    if(a[i]-a[i-1]>1)\n    for(j=a[i-1]+1;j<a[i];j++)//\u56e0\u4e3a\u76f8\u90bb\u4ef7\u683c\u4e4b\u95f4\u9500\u91cf\u5448\u7ebf\u6027\u589e\u957f\uff0c\u5219\u7528\u4e00\u4e2a\u5faa\u73af\u628a\u5728\u8f93\u5165\u8303\u56f4\u5185\u6240\u6709\u7684\u4ef7\u683c\u9500\u91cf\u7684\u53ef\u80fd\u6027\u90fd\u5b58\u50a8\u5728\u6570\u7ec4\u91cc\n    {\n        a[s]=j;\n        b[s]=b[i-1]-(b[i-1]-b[i])/(a[i]-a[i-1])*(j-a[i-1]);\n        s++;\n    }\n    sort(a,a+s);\n    sort(b,b+s,mscore);//\u518d\u6b21\u6392\u5e8f\n    for(i=1;i<s;i++)//\u627e\u5230\u5e02\u573a\u9884\u671f\u4ef7\n    if(a[i]==x)\n    {\n        x1=b[i];\n        flag=1;\n    }\n    if(flag==0)//\u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u5219\u5e02\u573a\u9884\u671f\u4ef7\u5927\u4e8e\u8f93\u5165\u4ef7\u683c\u7684\u6700\u5927\u503c\n    x1=b[s-1]-(x-a[s-1])*change;\n    for(i=0;;i++)//\u7cbe\u9ad3\u5faa\u73af\uff0ci\u8868\u793a\u8865\u8d34\u6216\u8005\u6536\u7a0e\n    {\n        flag1=0;//\u6807\u8bb0\n        flag2=0;\n        n1=(x-a[0]+i)*x1;\n        n2=(x-a[0]-i)*x1;//\u8bb0\u5f55\u5bf9\u4e8e\u8865\u8d34\u6216\u8005\u6536\u7a0e\u4e4b\u540e\u5e02\u573a\u9884\u671f\u4ef7\u5e26\u6765\u7684\u603b\u5229\u6da6\n        for(j=1;;j++)\n        {\n            if(j>=s)//\u5982\u679c\u4ef7\u683c\u8d85\u8fc7\u4e86\u539f\u6709\u7684\u8303\u56f4\uff0c\u5219\u4e0d\u65ad+change\n            {\n            b[j]=b[j-1]-change;\n            a[j]=a[j-1]+1;            \n            }\n            if(b[j]<=0)break;//\u5f53\u9500\u91cf\u4f4e\u4e8e\u7b49\u4e8e0\u65f6\uff0c\u8fdb\u5165\u4e0b\u4e00\u4e2ai\u5faa\u73af\n            if(n1<(a[j]-a[0]+i)*b[j])flag1=1;//\u5982\u679c\u5229\u6da6\u4f4e\u4e8e\u6536\u7a0e\u6216\u8865\u8d34\u540e\u7684\u5229\u6da6\uff0c\u505a\u6807\u8bb0\n            if(n2<(a[j]-a[0]-i)*b[j]||n2<=0)flag2=1;//\u5982\u679c\u6536\u7a0e\u4e4b\u540e\u5229\u6da6\u5c0f\u4e8e\u96f6\uff0c\u629b\u5f03    \n        }\n        if(flag1==0&&flag2==1)break;\n        else if(flag1==1&&flag2==0)break;\n        else if(flag1==0&&flag2==0)break;    //\u8fd9\u4e9b\u60c5\u51b5\u8bf4\u660e\u627e\u5230\u4e86\u4f60\u9700\u8981\u7684i\n        else if(i==b[0]*10){flag1=-2;break;}//\u6211\u4e5f\u4e0d\u77e5\u9053\u8303\u56f4\u662f\u591a\u5c11\uff0c\u53cd\u6b63\u6210\u672ci=\u9500\u91cf*10\u591f\u5927\u4e86\uff0c\u6d1b\u8c37\u6570\u636e\u80fd\u8fc7\n    }\n    if(flag1==1&&flag2==0)printf(\"-%d\",i);\n    else if(flag1==0&&flag2==1)printf(\"%d\",i);\n    else if(flag1==0&&flag2==0)printf(\"%d\",i);\n    else if(flag1==-2)printf(\"NO SOLUTION\");//\u8f93\u51fa(o\u309c\u25bd\u309c)o\u2606[BINGO!]\n    return 0;\n}\n```",
        "postTime": 1511251214,
        "uid": 60557,
        "name": "L\u00b7K\u00b7\u5f00\u5143\u5723\u58eb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1023 \u3010\u7a0e\u6536\u4e0e\u8865\u8d34\u95ee\u9898\u3011"
    }
]