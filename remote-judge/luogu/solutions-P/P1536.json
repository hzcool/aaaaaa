[
    {
        "content": "\u9898\u76ee\u63cf\u8ff0\n\n\u67d0\u5e02\u8c03\u67e5\u57ce\u9547\u4ea4\u901a\u72b6\u51b5\uff0c\u5f97\u5230\u73b0\u6709\u57ce\u9547\u9053\u8def\u7edf\u8ba1\u8868\u3002\u8868\u4e2d\u5217\u51fa\u4e86\u6bcf\u6761\u9053\u8def\u76f4\u63a5\u8fde\u901a\u7684\u57ce\u9547\u3002\u5e02\u653f\u5e9c\u201c\u6751\u6751\u901a\u5de5\u7a0b\u201d\u7684\u76ee\u6807\u662f\u4f7f\u5168\u5e02\u4efb\u4f55\u4e24\u4e2a\u57ce\u9547\u95f4\u90fd\u53ef\u4ee5\u5b9e\u73b0\u4ea4\u901a\uff08**\u4f46\u4e0d\u4e00\u5b9a\u6709\u76f4\u63a5\u7684\u9053\u8def\u76f8\u8fde\uff0c\u53ea\u8981\u76f8\u4e92\u4e4b\u95f4\u53ef\u8fbe\u5373\u53ef**\uff09\u3002\u8bf7\u4f60\u8ba1\u7b97\u51fa\u6700\u5c11\u8fd8\u9700\u8981\u5efa\u8bbe\u591a\u5c11\u6761\u9053\u8def\uff1f\n\n\n\n------------\n\n\n**\u8fd9\u4e00\u9053\u9898\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u7684\u65b9\u6cd5\u505a**\n\n**\u601d\u8def\uff1a\u8f93\u5165\u4e24\u4e2a\u6751\u5e84\u540e\u5c31\u628a\u5b83\u4eec\u8fde\u8d77\u6765\uff0c\u8f93\u5165\u5b8c\u6bd5\u540e\u7528i\u4ece1\u5faa\u73af\u5230n\uff0c\u6240\u4ee5\u5982\u679ci\u7684\u7236\u4eb2\u4e3a\u5b83\u672c\u8eab\u7684\u8bdd\uff08\u5b83\u662f\u7956\u5148\uff0c\u5b83\u6ca1\u6709\u7236\u4eb2\uff09\uff0cans+1\u3002\u7b54\u6848\u8981\u51cf1\uff0c\u56e0\u4e3a\u4e09\u4e2a\u70b9\u4e2d\u53ea\u9700\u7528\u4e24\u6761\u7ebf\u8fde\u63a5\uff0c\u65e0\u9700\u7528\u4e09\u6761\u7ebf\u8fde\u63a5\u3002**\n\n### \u5e76\u67e5\u96c6\n\n**\u5e76\u67e5\u96c6\u662f\u4e00\u79cd\u6811\u578b\u7684\u6570\u636e\u7ed3\u6784\uff0c\u7528\u4e8e\u5904\u7406\u4e00\u4e9b\u4e0d\u4ea4\u96c6\u7684\u5408\u5e76\u53ca\u67e5\u8be2\u95ee\u9898\uff08\u4e0d\u4ea4\u96c6\u7684\u610f\u601d\u662f\u4e24\u4e2a\u96c6\u5408\u4e2d\u6ca1\u6709\u76f8\u540c\u7684\u5143\u7d20\uff09\u3002**\n\n\u5e76\u67e5\u96c6\u5206\u4e24\u4e2a\u4e3b\u8981\u6b65\u9aa4\u2014\u2014**\u5408\u5e76**\uff0c**\u67e5\u627e**\n\n### 1.find\uff1a\u786e\u5b9a\u5143\u7d20\u5c5e\u4e8e\u54ea\u4e00\u4e2a\u5b50\u96c6\u3002\u5b83\u53ef\u4ee5\u88ab\u7528\u6765\u786e\u5b9a\u4e24\u4e2a\u5143\u7d20\u662f\u5426\u5c5e\u4e8e\u540c\u4e00\u5b50\u96c6\u3002\n\n\ncode : \n\n```cpp\nint find(int x) \n{\n    if(x != fa[x])//\u5f53x\u4e0d\u7b49\u4e8e\u5b83\u7684\u7238\u7238\u65f6(\u5f53\u5b83\u662f\u7956\u5148\u65f6\uff0c\u5b83\u6ca1\u6709\u7238\u7238) \n    {\n        fa[x] = find(fa[x]);//\u7ee7\u7eed\u627e\u4ed6\u7684\u7238\u7238\u7684\u7238\u7238 \n    }\n    return fa[x];//\u8fd4\u56de\u7956\u5148 \n}//\u67e5\u627e \n\n```\n\n### 2.unity\uff1a\u5c06\u4e24\u4e2a\u5b50\u96c6\u5408\u5e76\u6210\u540c\u4e00\u4e2a\u96c6\u5408\u3002\n\ncode : \n\n```cpp\nvoid unity(int x, int y)\n{\n    int r1 = find(x);//\u627e\u5230x\u7684\u7956\u5148 \n    int r2 = find(y);//\u627e\u5230y\u7684\u7956\u5148 \n    fa[r1] = r2;//\u7956\u5148\u548c\u7956\u5148\u7ed3\u4e3a\u7236\u5b50(\u8c01\u662f\u7236\u4eb2\u8c01\u662f\u513f\u5b50\u90fd\u53ef\u4ee5) \n}//\u5408\u5e76 \n```\n\n\n\n\n\n\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a\n\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint fa[1000001], n, m, x, y;\nint find(int x)//\u5e76\u67e5\u96c6(\u8def\u5f84\u538b\u7f29) \n{\n    if(x != fa[x])//\u5f53x\u4e0d\u7b49\u4e8e\u5b83\u7684\u7238\u7238\u65f6(\u5f53\u5b83\u662f\u7956\u5148\u65f6\uff0c\u5b83\u6ca1\u6709\u7238\u7238) \n    {\n        fa[x] = find(fa[x]);//\u7ee7\u7eed\u627e\u4ed6\u7684\u7238\u7238\u7684\u7238\u7238 \n    }\n    return fa[x];//\u8fd4\u56de\u7956\u5148 \n}//\u67e5\u627e \nvoid unity(int x, int y)\n{\n    int r1 = find(x);//\u627e\u5230x\u7684\u7956\u5148 \n    int r2 = find(y);//\u627e\u5230y\u7684\u7956\u5148 \n    fa[r1] = r2;//\u7956\u5148\u548c\u7956\u5148\u7ed3\u4e3a\u7236\u5b50(\u8c01\u662f\u7236\u4eb2\u8c01\u662f\u513f\u5b50\u90fd\u53ef\u4ee5) \n}//\u5408\u5e76 \nint main()\n{\n\twhile(true)\n\t{\n\t\tint ans = 0;//ans\u8981\u5728\u5faa\u73af\u4e2d\u5b9a\u4e49\u4e3a0\n\t\tscanf(\"%d\", &n);\n\t\tif(n == 0)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t\tscanf(\"%d\", &m);\n\t    for(int i = 1; i <= n; i++)\n\t    {\n\t        fa[i] = i;//\u521d\u59cb\u5316\u81ea\u5df1\u7684\u7236\u4eb2\u662f\u81ea\u5df1 \n\t    }\n\t    for(int i = 1; i <= m; i++)\n\t    {\n\t        scanf(\"%d %d\", &x, &y);\n\t        unity(x, y);//\u5408\u5e76x\u548cy \n\t    }\n\t    for(int i = 1; i <= n; i++)\n\t    {\n\t    \tif(find(i) == i)//\u81ea\u5df1\u7684\u7236\u4eb2\u7b49\u4e8e\u81ea\u5df1\u672c\u8eab\n\t    \t{\n\t    \t\tans++;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\", ans - 1);//\u7b54\u6848\u51cf\u4e00 \n\t}\n    return 0;\n}\n```\n\n",
        "postTime": 1550711915,
        "uid": 143681,
        "name": "Strong_Jelly",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1536 \u3010\u6751\u6751\u901a\u3011"
    },
    {
        "content": "## \u770b\u89c1\u4e0b\u9762\u5927\u4f6c\u6ca1\u6709\u53d1LCT\u9898\u89e3\u7684\u6211\u5c31\u6765\u4e00\u53d1LCT\u9898\u89e3\n**\u8fd9\u660e\u663e\u662fLCT\uff08~~\u5e76\u67e5\u96c6~~\uff09\u88f8\u9898\u554a**\n\n~~\u54b3\u54b3~~ \u5148\u8bf4\u8bf4LCT\u662f\u5565\n\nLCT\uff08~~\u5218\u741bTree~~\uff09link-cut-tree\n\n\u53ef\u4ee5\u52a8\u6001\u7ef4\u62a4\u56fe\u7684\u8fde\u901a\u6027\uff08\u662f\u4e0d\u662f\u548c\u9898\u76ee\u8bf4\u7684\u4e00\u6837\uff09\n\n\u8d44\u74f7\u7684\u64cd\u4f5c\uff1a\n\n1. \u52a8\u6001\u8fde\u8fb9\uff0c\u5220\u8fb9\n2. \u52a8\u6001\u7ef4\u62a4\u8fb9\u6743\uff0c\u70b9\u6743\n3. \u67e5\u8be2\u3001\u4fee\u6539\u94fe\u4e0a\u7684\u4fe1\u606f\uff08\u6700\u503c\uff0c\u603b\u548c\u7b49\uff09\n4. \u968f\u610f\u6307\u5b9a\u539f\u6811\u7684\u6839\uff08\u5373\u6362\u6839\uff09\n5. \u5408\u5e76\u4e24\u68f5\u6811\u3001\u5206\u79bb\u4e00\u68f5\u6811\uff08\u8ddf\u4e0a\u9762\u4e0d\u662f\u4e00\u6bdb\u4e00\u6837\u5417\uff09\n6. \u52a8\u6001\u7ef4\u62a4\u8fde\u901a\u6027\n\n\u5176\u4e2d\u7ef4\u62a4\u8054\u901a\u6027\u5c31\u53ef\u4ee5\u89e3\u51b3\u6b64\u9898\n\n\u9898\u76ee\u8bf4\u7ed9\u4f60n\u4e2a\u70b9\uff0cm\u4e2a\u8fb9\u7136\u540e\u8ba9\u4f60\u6c42\u8fd8\u9700\u8981\u51e0\u4e2a\u8fb9\u624d\u80fd\u8ba9\u6574\u5f20\u56fe\u8054\u901a\n\n\u6240\u4ee5\u8fd9\u5c31\u662f\u4e00\u4e2a\u4e0d\u8fde\u901a\u56fe\uff0c\u6211\u4eec\u53ea\u8981\u77e5\u9053\u6574\u5f20\u56fe\u91cc\u9762\u6709\u591a\u5c11\u8054\u901a\u7684\u90e8\u5206\u518d\u5c06\u5b83\u4eec\u8fde\u5728\u4e00\u8d77\u5c31\u884c\u5566\n\n\u770b\u4e0b\u56fe\uff1a\n![lct.png](https://i.loli.net/2018/09/05/5b8f82b5b1be1.png)\n\n\u5176\u4e2d\u7eff\u8272\u5708\u8d77\u6765\u7684\u5c31\u662f\u6bcf\u4e00\u4e2a\u90e8\u5206\u6211\u4eec\u53ea\u9700\u8981\u5c06\u5b83\u4eec\u8fde\u8d77\u6765\u5c31\u53ef\u4ee5\u8ba9\u6574\u5f20\u56fe\u8fbe\u5230\u8054\u901a\n\n\u6240\u4ee5\u7b54\u6848\u4e3a\u8054\u901a\u5757\u4e2a\u6570\u51cf\u4e00\n\n\u5c31\u50cf\u8fd9\u6837\uff1a\n![lct.png](https://i.loli.net/2018/09/05/5b8f832bded02.png)\n\u6b64\u65f6\u6574\u5f20\u56fe\u5c31\u662f\u8054\u901a\u7684\u4e86\n\n\u6240\u4ee5\u5bf9\u4e8e\u56fe\u4e2d\u7684\u8fb9\u94fe\u63a5\u7684\u4e24\u4e2a\u70b9\u6240\u5c5e\u7684\u96c6\u5408\u7684\u5173\u7cfb\u7ef4\u62a4\u6211\u4eec\u5c31\u53ef\u4ee5\u7528LCT(~~\u5e76\u67e5\u96c6~~)\u7ef4\u62a4\n\n\u56fe\u4e2d\u7684\u8fb9\u9519\u7efc\u590d\u6742\u4f7f\u5f97\u7ef4\u62a4\u4fe1\u606f\u975e\u5e38\u9ebb\u70e6\uff0c\n\u65e2\u7136\u590d\u6742\u5c31\u8bf7\u780d\u54e5\u51fa\u573a\uff1a\u628a\u6811\u5f62\u7ed3\u6784\u780d\u6210\u4e00\u6761\u4e00\u6761\u7684\u94fe\n\u6b64\u65f6\u94fe\u4e0a\u7684\u4fe1\u606f\u7ef4\u62a4\u5c31\u65b9\u4fbf\u4e86\u8bb8\u591a\n\n\u4f46\u94fe\u4e0e\u94fe\u4e4b\u95f4\u9700\u8981\u8fde\u63a5 \u8fd9\u6837\u6811\u4e0a\u7684\u4fe1\u606f\u624d\u597d\u8f6c\u79fb\n\n\u5728\u6811\u5256\u4e2d\u6211\u4eec\u662f\u901a\u8fc7\u8df3\u8f7b\u8fb9\u6765\u8fdb\u884c\u91cd\u94fe\u4e4b\u95f4\u7684\u8df3\u8f6c\n\n\u4f46Lct\u9700\u8981\u52a8\u6001\u7ef4\u62a4\uff0c\u6240\u4ee5\u6211\u4eec\u9009\u7528\u66f4\u7075\u6d3b\u7684\u6570\u636e\u7ed3\u6784\u6765\u7ef4\u62a4\u94fe\u4e2d\u7684\u4fe1\u606f-splay\n\n\u7531\u4e8esplay\u53ef\u4ee5\u7ef4\u62a4\u533a\u95f4\u7ffb\u8f6c\uff08\u8fd8\u8bb0\u5f97\u90a3\u4e2a\u6362\u6839\u64cd\u4f5c\u5417\uff09\u6240\u4ee5\u6211\u4eec\u9009\u7528\u5b83\u4f5c\u4e3aLCT\u7684\u8f85\u52a9\u6811\n\n**\u4e86\u89e3\u4e00\u4e9b\u57fa\u672c\u6982\u5ff5\uff08LCT\uff09\uff1a**\n1. \u540c\u6837\u5c06\u67d0\u4e00\u4e2a\u513f\u5b50\u7684\u8fde\u8fb9\u5212\u5206\u4e3a\u5b9e\u8fb9\uff0c\u800c\u8fde\u5411\u5176\u4ed6\u5b50\u6811\u7684\u8fb9\u5212\u5206\u4e3a\u865a\u8fb9\u3002\n2. \u533a\u522b\u5728\u4e8e\u865a\u5b9e\u662f\u53ef\u4ee5\u52a8\u6001\u53d8\u5316\u7684\uff0c\u56e0\u6b64\u8981\u4f7f\u7528\u66f4\u9ad8\u7ea7\u3001\u66f4\u7075\u6d3b\u7684Splay\u6765\u7ef4\u62a4\u6bcf\u4e00\u6761\u7531\u82e5\u5e72\u5b9e\u8fb9\u8fde\u63a5\u800c\u6210\u7684\u5b9e\u94fe\u3002\u57fa\u4e8e\u6027\u8d28\u66f4\u52a0\u4f18\u79c0\u7684\u5b9e\u94fe\u5256\u5206\uff0cLCT(Link-Cut Tree)\u5e94\u8fd0\u800c\u751f\u3002\n\n\u8fd9\u91cc\u586b\u4e00\u4e2a\u81ea\u5df1\u7684\u7406\u89e3\uff1a\n\n\u865a\u8fb9 \uff1a \u8be5\u8fb9\u7684\u513f\u5b50\u4f4d\u7f6e \u8bb0\u5f55\u4ed6\u7684\u7236\u4eb2 \uff0c\u4f46\u7236\u4eb2\u4e0d\u8bb0\u5f55\u5b83\n\n\u5b9e\u8fb9 \uff1a\u7236\u5b50\u90fd\u4e92\u76f8\u8ba4\u8bc6\n\n1\u6bcf\u4e00\u4e2aSplay\u7ef4\u62a4\u7684\u662f\u4e00\u6761\u4ece\u4e0a\u5230\u4e0b\u6309\u5728\u539f\u6811\u4e2d\u6df1\u5ea6\u4e25\u683c\u9012\u589e\u7684\u8def\u5f84\uff0c\u4e14\u4e2d\u5e8f\u904d\u5386Splay\u5f97\u5230\u7684\u6bcf\u4e2a\u70b9\u7684\u6df1\u5ea6\u5e8f\u5217\u4e25\u683c\u9012\u589e\u3002\u662f\u4e0d\u662f\u6709\u70b9\u62bd\u8c61\u54c8\u6bd4\u5982\u6709\u4e00\u68f5\u6811\uff0c\u6839\u8282\u70b9\u4e3a1\uff08\u6df1\u5ea61\uff09\uff0c\u6709\u4e24\u4e2a\u513f\u5b502,3\uff08\u6df1\u5ea62\uff09\uff0c\u90a3\u4e48Splay\u67093\u79cd\u6784\u6210\u65b9\u5f0f\uff1a\n\n{1\u22122},{3}\n\n{1\u22123},{2}\n\n{1},{2},{3}\n\n\u4f8b\u5982\uff1a\n![clt.png](https://i.loli.net/2018/09/05/5b8f9230520f4.png)\n\u56fe\u4e2d1\u548c2\u5728\u4e00\u4e2asplay\u4e2d3\u5728\u53e6\u4e00\u4e2asplay\u4e2d\u4f463\u4e0e1\u901a\u8fc7\u865a\u8fb9\u76f8\u8fde\n\n\u7eff\u6811\u4e3a\u539f\u6811\uff0c\u7ea2\u6811\u4e3asplay\n\n\n\u6bcf\u4e00\u6761\u94fe\u8868\u793a\u4e00\u4e2a\uff08Splay\uff09\u800c\u4e0d\u80fd\u628a1,2,3\u540c\u653e\u5728\u4e00\u4e2aSplay\u4e2d\uff08\u5b58\u5728\u6df1\u5ea6\u76f8\u540c\u7684\u70b9\uff09\n\n\u6027\u8d28\uff1a\n1. \u6bcf\u4e2a\u8282\u70b9\u5305\u542b\u4e14\u4ec5\u5305\u542b\u4e8e\u4e00\u4e2aSplay\u4e2d\n2. \u8fb9\u5206\u4e3a\u5b9e\u8fb9\u548c\u865a\u8fb9\uff0c\u5b9e\u8fb9\u5305\u542b\u5728Splay\u4e2d\uff0c\u800c\u865a\u8fb9\u603b\u662f\u7531\u4e00\u68f5Splay\u6307\u5411\u53e6\u4e00\u4e2a\u8282\u70b9\uff08\u6307\u5411\u8be5Splay\u4e2d\u4e2d\u5e8f\u904d\u5386\u6700\u9760\u524d\u7684\u70b9\u5728\u539f\u6811\u4e2d\u7684\u7236\u4eb2\uff09\u3002\n\n\n\u63a8\u8bba\uff1a\n1. \u56e0\u4e3a\u6027\u8d282\uff0c\u5f53\u67d0\u70b9\u5728\u539f\u6811\u4e2d\u6709\u591a\u4e2a\u513f\u5b50\u65f6\uff0c\u53ea\u80fd\u5411\u5176\u4e2d\u4e00\u4e2a\u513f\u5b50\u62c9\u4e00\u6761\u5b9e\u94fe\uff08\u53ea\u8ba4\u4e00\u4e2a\u513f\u5b50\uff09\uff0c\u800c\u5176\u5b83\u513f\u5b50\u662f\u4e0d\u80fd\u5728\u8fd9\u4e2aSplay\u4e2d\u7684\u3002\n2. \u90a3\u4e48\u4e3a\u4e86\u4fdd\u6301\u6811\u7684\u5f62\u72b6\uff0c\u6211\u4eec\u8981\u8ba9\u5230\u5176\u5b83\u513f\u5b50\u7684\u8fb9\u53d8\u4e3a\u865a\u8fb9\uff0c\u7531\u5bf9\u5e94\u513f\u5b50\u6240\u5c5e\u7684Splay\u7684\u6839\u8282\u70b9\u7684\u7236\u4eb2\u6307\u5411\u8be5\u70b9\uff0c\u800c\u4ece\u8be5\u70b9\u5e76\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\u8be5\u513f\u5b50\uff08\u8ba4\u7236\u4e0d\u8ba4\u5b50\uff09\u3002\n\n\n#### LCT \u7684\u4e24\u4e2a\u57fa\u672c\u64cd\u4f5c \u2014\u2014 \u4e00.access\nLCT\u6838\u5fc3\u64cd\u4f5c\uff0c\u4e5f\u662f\u6700\u96be\u7406\u89e3\u7684\u64cd\u4f5c\u3002\u5176\u5b83\u6240\u6709\u7684\u64cd\u4f5c\u90fd\u662f\u5728\u6b64\u57fa\u7840\u4e0a\u5b8c\u6210\u7684\n\n\u56e0\u4e3a\u6027\u8d283\uff0c\u6211\u4eec\u4e0d\u80fd\u603b\u662f\u4fdd\u8bc1\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8def\u5f84\u662f\u76f4\u63a5\u8fde\u901a\u7684\uff08\u5728\u4e00\u4e2aSplay\u4e0a\uff09\n\naccess\u5373\u5b9a\u4e49\u4e3a\u6253\u901a\u6839\u8282\u70b9\u5230\u6307\u5b9a\u8282\u70b9\u7684\u5b9e\u94fe\uff0c\u4f7f\u5f97\u4e00\u6761\u4e2d\u5e8f\u904d\u5386\u4ee5\u6839\u5f00\u59cb\u3001\u4ee5\u6307\u5b9a\u70b9\u7ed3\u675f\u7684Splay\u51fa\u73b0\n\n\u6bd4\u5982\u4e00\u9897\u8fd9\u6837\u5212\u5206\u7684\u6811\n![lct.png](https://i.loli.net/2018/09/05/5b8f940d9d8e6.png)\n\n\u5b9e\u9645\u5728LCT \u4e2d\u4ee5\u8fd9\u6837 \u7684\u5f62\u5f0f\u5448\u73b0\uff08\u7eff\u6846\u4e2d\u4e3a\u4e00\u4e2asplay\uff09\n![lct.png](https://i.loli.net/2018/09/05/5b8f946d1cd08.png)\n\n- \u73b0\u5728\u6211\u4eec\u8981access\uff08N\uff09 \uff0c\u628aA-N\u4e0a\u7684\u8def\u5f84\u62c9\u8d77\u6765\u6210\u4e00\u6761splay.\n- \u56e0\u4e3a\u6027\u8d282\uff0c\u8be5\u8def\u5f84\u4e0a\u5176\u5b83\u94fe\u90fd\u8981\u7ed9\u8fd9\u6761\u94fe\u8ba9\u8def\uff0c\u4e5f\u5c31\u662f\u628a\u6bcf\u4e2a\u70b9\u5230\u8be5\u8def\u5f84\u4ee5\u5916\u7684\u5b9e\u8fb9\u53d8\u865a\n- \u6240\u4ee5\u6211\u4eec\u5e0c\u671b\u91cd\u65b0\u5212\u5206\u6210\u8fd9\u6837\n\n![lct.png](https://i.loli.net/2018/09/05/5b8f9497e4b79.png)\n\n\n\u7136\u540e\u600e\u4e48\u5b9e\u73b0\u5462\uff1f\u6211\u4eec\u8981\u4e00\u6b65\u6b65\u5f80\u4e0a\u62c9\u3002\u9996\u5148\u628asplay(N)\uff0c\u4f7f\u4e4b\u6210\u4e3a\u5f53\u524dSplay\u4e2d\u7684\u6839\u3002\u4e3a\u4e86\u6ee1\u8db3\u6027\u8d282\uff0c\u539f\u6765N\u2212O\u7684\u91cd\u8fb9\u8981\u53d8\u8f7b\u3002\u56e0\u4e3a\u6309\u6df1\u5ea6O\u5728N\u7684\u4e0b\u9762\uff0c\u5728Splay\u4e2dO\u5728N\u7684\u53f3\u5b50\u6811\u4e2d\uff0c\u6240\u4ee5\u76f4\u63a5\u5355\u65b9\u9762\u5c06N\u7684\u53f3\u513f\u5b50\u7f6e\u4e3a0\uff08\u8ba4\u7236\u4e0d\u8ba4\u5b50\uff09\u7136\u540e\u5c31\u53d8\u6210\u4e86\u8fd9\u6837\u2014\u2014\n![lct.png](https://i.loli.net/2018/09/05/5b8f966c132fb.png)\n\u8fd9\u6837\u5728\u539f\u6811\u4e2d\u6b63\u597d\u6210\u4e86\u521a\u624d\u90a3\u4e2a\u6837\u5b50\n\n\n#### LCT \u7684\u4e24\u4e2a\u57fa\u672c\u64cd\u4f5c \u2014\u2014 \u4e8c.makeroot\n\n\u8fd9\u4e2a\u64cd\u4f5c\u662f\u5efa\u7acb\u5728access\u4e4b\u4e0a\u7684\u3002\n\nMakeroot(x)  \u5b9e\u9645\u610f\u4e49\u4e3a \u5c06\u8282\u70b9x\u8f6c\u53d8\u4e3a\u5b83\u6240\u7684\u6811\u7684\u6839\n\n\n\u6211\u4eec\u7c7b\u6bd4\u4e00\u68f5\u6709\u6839\u6811\u7684\u6362\u6839\u64cd\u4f5c \u4e3a\u4e86\u65b9\u4fbf\u8bb2\u89e3\n\u6211\u4eec\u7528 x \u4ee3\u8868 \u6211\u4eec\u5373\u5c06\u6362\u6839\u7684\u70b9\n1. \u7531\u4e8e\u662f\u6811 \uff0c \u90a3\u4e48\u9664\u4e86 \u548cx\u76f8\u5173\u7684\u70b9 \uff0c \u5176\u7236\u5b50\u5173\u7cfb\u662f\u4e0d\u53d8\u7684\u4e0ex\u76f8\u5173\u7684\u70b9 \u552f\u4e00\u53d8\u5316\u5c31\u662f\u7236\u4eb2\u6210\u4e86\u513f\u5b50\n2. \u5bf9\u4e8e\u6240\u6709\u7684\u70b9\u7684\u53d8\u5316 \uff0c \u53ea\u6709dep\u53d8\u4e86\n\u6211\u8003\u8651\u7528access \uff0c splay\u65b9\u4fbf\u7684\u5b9e\u73b0\n\u4e09\u4e2a\u64cd\u4f5c\u5b8c\u6210makeroot:\nAccess(x) , splay(x) , pushr(x)\n\u5b8c\u6210 // pushr \u4e3a\u4ea4\u6362x\u7684\u5de6\u53f3\u513f\u5b50 (\u533a\u95f4\u7ffb\u8f6c)\n\n\u56e0\u4e3a\u5728access\u626f\u51fa\u4e00\u6761\u94fe\u6765\u540e\uff0c\u5f53\u524d\u8282\u70b9\u80af\u5b9a\u662f\u94fe\u4e2ddep\u6700\u6df1\u7684\u4e00\u4e2a\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u8fdb\u884c\u533a\u95f4\u7ffb\u8f6c\uff0c\u5c06\u5f53\u70b9\u53d8\u4e3adep\u6700\u6d45\u7684\u70b9\uff0c\u5b9e\u73b0\u6362\u6839\n\n#### \u9009\u7528\u64cd\u4f5c \u4e8c.findroot\uff08x\uff09\n\n\u5b9a\u4e49\uff1afindroot(x) \u7684 \u5b9e\u9645\u610f\u4e49\u662f\n\u627e\u51fa x \u5728\u5176\u6811\uff08\u539f\u6811\uff0c\u4e0d\u662fsplay\uff09\u4e2d\u7684\u6839\n\u610f\u4e49\uff1a\u53ef\u4ee5\u52a8\u6001\u5224\u65ad\u56fe\u7684\u8fde\u901a\u6027\uff08\u9898\u76ee\uff09\n\n\n\u540c\u6837\u53ea\u9700\u8981\u4e09\u4e2a\u64cd\u4f5c\uff1a\n```cpp\n\nAccess(x) , splay(x) ;\nWhile(ls)push_down(x) ,  x = ls;\nReturn x ;\n\n```\n\naccess\u626f\u51fa\u4e00\u6761\u94fe\u540e\u6839\u80af\u5b9a\u4e3adep\u6700\u6d45\u7684\u70b9,\u90a3\u4e48\u4e5f\u5c31\u662fsplay\u4e2d\u6700\u9760\u5de6\u5b50\u6811\u7684\u70b9\uff0c\u6240\u4ee5\u4e0d\u65ad\u53bb\u627e\u5de6\u513f\u5b50\n\n#### \u9009\u7528\u64cd\u4f5c \u4e09.link\uff08x\uff0cy\uff09\n\n\u5b9a\u4e49\uff1a\u8868\u793a \u8fde\u63a5 \u8fb9 x - > y\n\n\u610f\u4e49\uff1a \u6ca1\u6709\u610f\u4e49  \n\n\u5b9e\u73b0\uff1a \n\n\u628ax\u8f6c\u6210\u6839 \uff0c\u76f4\u63a5\u8fde\u5c31\u884c\n\n\u5982\u679c x  , y  \u672c\u6765\u4e0d\u8fde\u901a \u76f4\u63a5 x - >  y\u8fde\u4e00\u6761**\u865a\u8fb9**\n\n\u5982\u679c  \u51fa\u9898\u4eba\u4e0d\u8d1f\u8d23 \uff08\u6e23\u6e23\u2014\u2014\n\n\u6211\u4eec\u5c31\u9700\u8981\u7279\u5224\n```cpp\nmakeroot(x) ;\nif(findroot(y) == x)return;\nfa[x] = y ;\n```\n\n\u7136\u540e\u6709\u4e86\u8fd9\u51e0\u4e2a\u64cd\u4f5c\u6211\u4eec\u5c31\u53ef\u4ee5\u6bcf\u6b21\u8bfb\u5165\u4e00\u6761\u8fb9\uff0clink\u4e00\u4e0b\uff0c\n\u7528findroot\u5224\u65ad\u5728\u4e0d\u5728\u4e00\u4e2a\u8fde\u901a\u5757\u91cc\u9762\uff0c\u5982\u679c\u4e0d\u662f\u4e00\u4e2a\u90a3\u4e48\u603b\u5757\u4e2a\u6570\u51cf\u4e00\uff0c\u4e00\u76f4\u5230\u6700\u540e\u7528\u603b\u8fde\u901a\u5757\u4e2a\u6570\u51cf\u4e00\u5373\u4e3a\u7b54\u6848\n\n\ncode\uff1a\nsplay\u7684\u7ed3\u6784\u4f53\uff1a\n```cpp\nstruct node{\n\tnode * fa,*ch[2];//\u7236\u4eb2\u53ca\u513f\u5b50\u8282\u70b9\n\t// int sum,val;//\u6ca1\u7528\n\tbool rev;//\u533a\u95f4\u7ffb\u8f6c\u6807\u8bb0\n\tnode(){//\u6784\u9020\u51fd\u6570\n\t\tfa=ch[0]=ch[1]=NULL;\n\t\t// sum=val=0;\n\t\trev=0;\n\t}\n\tbool d(){return fa->ch[1]==this;}//\u5224\u65ad\u4e3a\u7236\u4eb2\u7684\u54ea\u4e2a\u513f\u5b50\n\tbool ntr(){return fa!=NULL&&(fa->ch[0]==this||fa->ch[1]==this);}//\u4e0d\u4e3a\u6839\uff08not the root\uff09\u52a0\u5165\u865a\u8fb9\u5224\u65ad\n\tvoid r(){//\u7ffb\u8f6c\n\t\tswap(ch[0],ch[1]);\n\t\trev^=1;\n\t}\n\tvoid up(){\n\t\t// sum=val;\n\t\t// if(ch[0]!=NULL)sum+=ch[0]->sum;\n\t\t// if(ch[1]!=NULL)sum+=ch[1]->sum;\n\t}\n\tvoid down(){//\u4e0b\u4f20\u6807\u8bb0\n\t\tif(!rev)return ;\n\t\tif(ch[0]!=NULL)ch[0]->r();\n\t\tif(ch[1]!=NULL)ch[1]->r();\n\t\trev=0;\n\t}\n}s[maxn];\n```\n\naccess\u51fd\u6570:\n```cpp\nvoid access(ptr x){\n\tfor(ptr y=NULL;x!=NULL;x=(y=x)->fa){\n\t\tsplay(x);x->ch[1]=y;x->up();//\u65ad\u5b9e\u8fde\u865a\n\t}\n}\n```\nmakeroot:\n```cpp\nvoid makeroot(ptr x){\n\taccess(x);splay(x);x->r();//\u533a\u95f4\u7ffb\u8f6c\n}\n```\nfindroot:\n```cpp\nptr findroot(ptr x){\n\taccess(x);splay(x);\n\twhile(x->down(),x->ch[0]!=NULL)x=x->ch[0];//\u5411\u5de6\u627e\n\tsplay(x);\n\treturn x;\n}\n```\nlink:\n```cpp\nvoid link(ptr x,ptr y){\n\tif(findroot(x)==findroot(y))return;\n\tans--;\n\tmakeroot(y);\n\ty->fa=x;//\u8fde\u865a\u8fb9\n}\n```\n\u5b8c\u6574\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int maxn=1e4+5;\nstruct node{\n\tnode * fa,*ch[2];//\u7236\u4eb2\u53ca\u513f\u5b50\u8282\u70b9\n\t// int sum,val;//\u6ca1\u7528\n\tbool rev;//\u533a\u95f4\u7ffb\u8f6c\u6807\u8bb0\n\tnode(){//\u6784\u9020\u51fd\u6570\n\t\tfa=ch[0]=ch[1]=NULL;\n\t\t// sum=val=0;\n\t\trev=0;\n\t}\n\tbool d(){return fa->ch[1]==this;}//\u5224\u65ad\u4e3a\u7236\u4eb2\u7684\u54ea\u4e2a\u513f\u5b50\n\tbool ntr(){return fa!=NULL&&(fa->ch[0]==this||fa->ch[1]==this);}//\u4e0d\u4e3a\u6839\uff08not the root\uff09\u52a0\u5165\u865a\u8fb9\u5224\u65ad\n\tvoid r(){//\u7ffb\u8f6c\n\t\tswap(ch[0],ch[1]);\n\t\trev^=1;\n\t}\n\tvoid up(){\n\t\t// sum=val;\n\t\t// if(ch[0]!=NULL)sum+=ch[0]->sum;\n\t\t// if(ch[1]!=NULL)sum+=ch[1]->sum;\n\t}\n\tvoid down(){//\u4e0b\u4f20\u6807\u8bb0\n\t\tif(!rev)return ;\n\t\tif(ch[0]!=NULL)ch[0]->r();\n\t\tif(ch[1]!=NULL)ch[1]->r();\n\t\trev=0;\n\t}\n}s[maxn];\nint ans=0;\ntypedef node* ptr ;\nvoid rot(ptr x){\n\tptr y=x->fa,z=y->fa;int k=x->d();ptr w=x->ch[!k];\n\tif(y->ntr())z->ch[y->d()]=x;\n\tx->ch[!k]=y;y->ch[k]=w;\n\tx->fa=z;y->fa=x;\n\tif(w!=NULL)w->fa=y;\n\ty->up();\n}\nvoid splay(ptr x){\n\tstatic ptr st[maxn];//\u624b\u5de5\u6808\uff0c\u901f\u5ea6\u66f4\u5feb\n\tint top;st[top=1]=x;\n\twhile(st[top]->ntr()){st[top+1]=st[top]->fa;top++;}\n\twhile(top)st[top--]->down();//\u4e0b\u4f20\u6807\u8bb0\n\twhile(x->ntr()){\n\t\tif(x->fa->ntr())rot(x->d()==x->fa->d()? x->fa:x);\n\t\trot(x);\n\t}\n\tx->up();\n}\nvoid access(ptr x){\n\tfor(ptr y=NULL;x!=NULL;x=(y=x)->fa){\n\t\tsplay(x);x->ch[1]=y;x->up();\n\t}\n}\nvoid makeroot(ptr x){\n\taccess(x);splay(x);x->r();\n}\nptr findroot(ptr x){\n\taccess(x);splay(x);\n\twhile(x->down(),x->ch[0]!=NULL)x=x->ch[0];\n\tsplay(x);\n\treturn x;\n}\nvoid link(ptr x,ptr y){\n\tif(findroot(x)==findroot(y))return;\n\tans--;\n\tmakeroot(y);\n\ty->fa=x;\n}\nint n,m;\nint main(){\n\twhile(233){\n\t\tmemset(s,0,sizeof s);ans=0;\n\t\tcin>>n>>m;\n\t\tif(!n)break;\n\t\tans=n;\n\t\tfor(int i=1;i<=m;++i){\n\t\t\tint x,y;\n\t\t\tcin>>x>>y;\n\t\t\tlink(s+x,s+y);\n\t\t}\n\t\tcout<<ans-1<<endl;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1536138376,
        "uid": 87940,
        "name": "kraylas",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1536 \u3010\u6751\u6751\u901a\u3011"
    },
    {
        "content": "## \u601d\u8def\uff1atarjan\n\n#### \u672c\u9898\u4f7f\u7528\u5e76\u67e5\u96c6\u7684\u601d\u8def\u662f\u6700\u4f18\u7684\uff0c\u4f46\u662f\u849f\u84bb\u89c9\u5f97\u7f29\u70b9\u7684\u601d\u8def\u624d\u662f\u663e\u7136\u7684\u2026\u2026\n\n\u89c2\u5bdf\u9898\u76ee\uff0c**\u5e02\u653f\u5e9c\u201c\u6751\u6751\u901a\u5de5\u7a0b\u201d\u7684\u76ee\u6807\u662f\u4f7f\u5168\u5e02\u4efb\u4f55\u4e24\u4e2a\u57ce\u9547\u95f4\u90fd\u53ef\u4ee5\u5b9e\u73b0\u4ea4\u901a**\uff0c\u8868\u660e\u56fe\u4e3a\u591a\u4e2a\u8054\u901a\u5757\uff0c\u56e0\u4e3a\u662f\u65e0\u5411\u8fb9\uff0c\u6240\u4ee5\u6bcf\u4e2a\u8054\u901a\u5757\u4e00\u5b9a\u662f\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff08\u663e\u7136\uff09\u3002\n\n\u90a3\u4e48\u95ee\u9898\u5c31\u53d8\u6210\u4e86 **\u67e5\u627e\u8054\u901a\u5757\uff0c\u5c06\u6240\u6709\u8054\u901a\u5757\u8054\u901a**\uff0c\u663e\u7136\u9700\u8981n-1\u6761\u8fb9\u3002\n\n### \u6240\u4ee5 \u53ea\u9700\u8981tarjan\u641c\u7d22\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u4e2a\u6570\uff0c\u7136\u540e\u8f93\u51fa\u5f3a\u8fde\u901a\u5206\u91cf\u4e2a\u6570\u51cf\u4e00\u5373\u4e3a\u7b54\u6848\u3002\n\n\u4e0b\u9762\u9001\u4e0a\u753b\u98ce~~\u8fe5\u5f02~~\u6e05\u5947\u7684\u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<cstring>\nnamespace read{\n    void imop(int&x){\t\t//\u4e0d\u5e26\u53f7\u8bfb\u5165\u4f18\u5316 \n        char ch=getchar();\n        while(ch<'0'||ch>'9') ch=getchar();\n        while(ch>='0'&&ch<='9')   x=x*10+ch-'0',  ch=getchar();\n        return;\n    }\n    void op(int&x){\n        char ch=getchar();\t//\u5e26\u53f7\u8bfb\u5165\u4f18\u5316 \n        int f=1;\n        while(ch<'0'||ch>'9'){\n            if(ch=='-') f=-1;\n            ch=getchar();\n        }\n        while(ch>='0'&&ch<='9')   x=x*10+ch-'0',  ch=getchar();\n        x*=f;\n        return;\n    }\n}\nnamespace fusu{\n    const int maxn = 1010 , maxm = 1000010;\n    struct Edge{\n        int next,to;\n    };\n    Edge edge[maxm];int head[maxn],ecnt;\n    int n,m;\n    int top,vistime,cnt,dfn[maxn],low[maxn],stack[maxn];bool instack[maxn];\n    /*\n    \t*\u987a\u5e26\u8bf4\u4e00\u4e0btarjan\u5427\n\t\t*stack,top\u4e3a\u624b\u5199\u6808\u4ee5\u53ca\u6808\u9876\uff0cinstack\u5224\u5b9a\u5143\u7d20\u662f\u5426\u5728\u6808\u4e2d\n\t\t*dfn[i]\u4e3a\u6574\u5f20\u56fe\u4e2di\u53f7\u70b9\u88ab\u7b2c\u4e00\u6b21\u904d\u5386\u7684\u5e8f\u53f7\n\t\t*low[i]\u8868\u793a\u4ecei\u53f7\u70b9\u5411\u4e0a\u63a8\uff08\u8fde\u63a5\uff09\u6700\u9760\u4e0a\u80fd\u63a8\u5230\u7684\u70b9 \n\t\t*\u8fd9\u91cc\u201c\u5411\u4e0a\u63a8\u201d\u6307\u7684\u662f\u5728dfs\u641c\u7d22\u6811\u4e2d\uff0ci\u53f7\u70b9\u6240\u8054\u901a\u7684\u6700\u9760\u8fd1\u6839\u8282\u70b9\uff08\u641c\u7d22\u6811\u4e2d\uff09\u7684\u70b9\u7684\u5e8f\u53f7\n\t\t*\u9010\u5c42\u6269\u5c55\uff0c\u5f53dfn\u7684\u503c\u4e0elow\u7684\u503c\u76f8\u7b49\uff0c\u5373\u8fd9\u4e2a\u70b9\u65e0\u6cd5\u518d\u5411\u6839\u8282\u70b9\u65b9\u5411\u8054\u901a\u65f6\n\t\t*\u8fd9\u4e2a\u70b9\u53ca\u5176\u5b50\u6811\u4e00\u5b9a\u6784\u6210\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\n\t\t*\u4ee5\u4e0a\u5185\u5bb9\u662f\u5728\u5404tarjan\u9898\u89e3\u4e2d\u53d9\u8ff0\u6bd4\u8f83\u6a21\u7cca\u7684\u90e8\u5206\uff0c\u4ec5\u4f9b\u53c2\u8003\u3002\u7bc7\u5e45\u95ee\u9898\uff0c\u8be6\u7ec6\u9898\u89e3\u8bf7\u79fb\u6b65P3387\u3010\u6a21\u677f\u3011\u7f29\u70b9\uff08\u5176\u5b9e\u90a3\u91cc\u4e5f\u4e0d\u8be6\u7ec6\uff09 \n\t*/ \n    inline int min(int a,int b){return a<b?a:b;}\n    inline void connect(int from,int to){\t\t\t//\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe \n        edge[++ecnt].to=to;\n        edge[ecnt].next=head[from];\n        head[from]=ecnt;\n        return;\n    }\n    void tarjan(int u){\n        int v;\n        dfn[u]=low[u]=++vistime;\t\t\t\t//dfn\u641c\u7d22\u6811\u7f16\u53f7 \n        stack[++top]=u;\t\t\t\t\t\t\t//\u5165\u6808 \n        instack[u]=true;\t\t\t\t\t\t//\u6807\u8bb0 \n        for(int i=head[u];i;i=edge[i].next){\n            v=edge[i].to;\n            if(!dfn[v]){\n                tarjan(v);\t\t\t\t\t\t//\u62d3\u5c55\u53f6\u8282\u70b9 \n                low[u]=min(low[u],low[v]);\t\t//\u663e\u7136\uff0c\u8be5\u70b9\u6240\u80fd\u5230\u8fbe\u7684\u6700\u9760\u8fd1\u6839\u8282\u70b9\u7684\u70b9\u4e3a\u81ea\u5df1\u672c\u8eab\u7684\u503c\u4e0e\u4ed6\u6240\u80fd\u5230\u8fbe\u7684\u70b9\u7684\u503c\u53d6\u6700\u5c0f\u503c \n            }\n            else if(instack[v]){\n                low[u]=min(low[u],dfn[v]);\t\t//\u5982\u679c\u5df2\u7ecf\u62d3\u5c55\u8fc7\uff0c\u5219\u4ecd\u7136\u53ef\u4ee5\u66f4\u65b0\uff0c\u65e0\u9700\u641c\u7d22\u3002 \n            }\n        }\n        if(!(low[u]^dfn[u])){\t\t\t\t\t//\u4f4d\u8fd0\u7b97!(a^b)\u8868\u793aa==b\uff0c\u5373\u81ea\u5df1\u6700\u5411\u4e0a\u80fd\u6269\u5c55\u7684\u662f\u81ea\u5df1\uff0c\u5219\u4e3a\u5f3a\u8fde\u901a\u5206\u91cf \n            ++cnt;\t\t\t\t\t\t\t\t//\u8bb0\u5f55\u5f3a\u8fde\u901a\u5206\u91cf\u4e2a\u6570 \n            do{\n                v=stack[top--];\t\t\t\t\t//\u9000\u6808 \n                instack[v]=false;\n            }while(u^v);\n        }\n    }\n    void work(){\n        read::imop(m);\n        while(m){\n            int a=0,b=0;\n            read::imop(a);read::imop(b);\n            connect(a,b);connect(b,a);\n            --m;\n        }\n        for(int i=1;i<=n;++i)\t\n            if(!dfn[i])\ttarjan(i);\t\t\t\t//\u5982\u679c\u6ca1\u641c\u8fc7\u5219\u641c\u7d22 \n        printf(\"%d\\n\",cnt-1);\t\t\t\t\t//\u8f93\u51fa \n        return;\n    }\n    void clear(){\n        n=m=ecnt=cnt=vistime=top=0;\n        std::memset(dfn,0,sizeof dfn);\n        std::memset(low,0,sizeof low);\n        std::memset(instack,false,sizeof instack);\n        std::memset(head,0,sizeof head);\n        std::memset(edge,0,sizeof edge);\n        return;\n    }\n    int doit(){\n        read::imop(n);\n        do{\n            work();\n            clear();\n            read::imop(n);\n        }while(n);\n        return 0;\n    }\n}\nint main(){\n    return fusu::doit()\uff1b\t\t\t\t\t\t//\u7cbe\u7b80\u7684main\u51fd\u6570 \n}\n```\n\n\u53e6\u5916\u9274\u4e8eluogu\u4e0a\u7f29\u70b9\u6a21\u677f\u9898\u7684\u9898\u89e3\u7684\u89e3\u91ca\u6709\u70b9\u5c11\uff0c\u5728\u6b64\u63a8\u8350\u4e00\u7bc7\u535a\u5ba2[](http://www.cnblogs.com/shadowland/p/5872257.html)\uff0c\u8f83\u4e3a\u8be6\u5c3d\u3002",
        "postTime": 1524876157,
        "uid": 65363,
        "name": "\u4e00\u6276\u82cf\u4e00",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1536 \u3010\u6751\u6751\u901a\u3011"
    },
    {
        "content": "## \u5e76\u67e5\u96c6+\u6876\u6392\u5e8f\n\n\n------------\n\u663e\u7136\uff0c\u57ce\u9547\u4e4b\u95f4\u6784\u6210\u4e86\u4e00\u4e2a\u53c8\u4e00\u4e2a\u7684\u96c6\u5408\n\n\u800c\u5bf9\u4e8e\u96c6\u5408\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\uff08\u57ce\u9547\uff09\u53c8\u6ca1\u6709\u7279\u6b8a\u9650\u5b9a\n\n\u90a3\u6211\u4eec\u76f4\u63a5\u7528**\u5e76\u67e5\u96c6**\u89e3\u51b3\n\n\u6bcf\u5efa\u4e00\u6761\u516c\u8def\uff0c\u5c31\u662f\u628a\u4e24\u57ce\u9547\u6240\u5728\u7684\u96c6\u5408\u5408\u5e76\n\n\u663e\u7136\uff0c**\u5bf9\u4e8e$n$\u4e2a\u4e0d\u540c\u7684\u96c6\u5408\uff0c\u60f3\u8981\u628a\u5b83\u4eec\u8fde\u8d77\u6765**\n\n**\u81f3\u5c11\u9700\u8981\u8fde$n-1$\u6761\u7ebf**\n\n\u90a3\u6211\u4eec\u6c42\u51fa**\u4e00\u5171\u6709\u591a\u5c11\u4e2a\u96c6\u5408**\n\n\u628a**\u96c6\u5408\u6570\u51cf\u53bb1**\uff0c\u8f93\u51fa\uff0c\u641e\u5b9a\uff01\n\n------------\n\u5982\u4f55\u6c42\u96c6\u5408\u7684\u6570\u91cf\u5462\uff1f\n\n\u6bcf\u4e2a\u96c6\u5408\u90fd\u6709\u4e00\u4e2a\u201c\u7956\u5b97\u201d\n\n\u53c8\u77e5\u9053\u201c\u7956\u5b97\u201d\u7684\u5e8f\u53f7\u4e0d\u4f1a\u8d85\u8fc71000\n\n\u90a3\u597d\u529e\uff0c**\u6876\u6392\u5e8f**\u554a\uff01\n\n\u6bcf\u9047\u5230\u4e00\u4e2a\u57ce\u9547\uff0c\u5c31\u628a\u5b83\u7684\u201c\u7956\u5b97\u201d\u5bf9\u5e94\u7684\u4e0b\u6807\u53d8\u4e3a1\n\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7**\u8def\u5f84\u538b\u7f29**\u4f7f\u540c\u4e00\u4e2a\u96c6\u5408\u7684\u57ce\u9547\u62e5\u6709\u540c\u4e00\u4e2a\u7956\u5b97\n\n\u90a3\u6700\u540e\u904d\u5386\u6876\uff0c\u770b\u770b\u6709\u591a\u5c11\u88ab\u6807\u4e3a1\u7684\u5143\u7d20\u4e0d\u5c31\u884c\u4e86\n\n\u6ce8\u610f\u6709\u591a\u7ec4\u6570\u636e\u54e6\n\n------------\n\u4ee3\u7801\u6765\u4e86~\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int maxn=1001;//\u5b9a\u4e49\u5e38\u91cfmaxn\u4f5c\u4e3a\u6570\u7ec4\u5927\u5c0f\nint a[maxn];//\u5e76\u67e5\u96c6a\nbool ok[maxn];//\u6876\nint cz(int x){//\u5e76\u67e5\u96c6\u67e5\u627e\u51fd\u6570\n\tif(a[x]==x) return x;\n\telse return a[x]=cz(a[x]);//\u8def\u5f84\u538b\u7f29\n}\nvoid hb(int x,int y){//\u5408\u5e76\u51fd\u6570\n\tint x1=cz(x),y1=cz(y);\n\ta[x1]=a[y1];\n}\nint main(){\n\tint n,m,x,y,ans;\n\twhile(1){\n\t\tscanf(\"%d\",&n);//\u5148\u8bfb\u4e00\u4e2a\u6570\u636e\n\t\tif(n==0) break;//\u662f0\uff0c\u505c\u6b62\u8bfb\u5165\n\t\tscanf(\"%d\",&m);//\u4e0d\u662f0\uff0c\u7ee7\u7eed\n\t\tans=0;//\u96c6\u5408\u6570\u91cf\n\t\tfor(int i=1;i<=n;++i){\n\t\t\ta[i]=i;//\u5e76\u67e5\u96c6\u521d\u59cb\u5316\n\t\t}\n\t\tfor(int i=1;i<=m;++i){\n\t\t\tscanf(\"%d%d\",&x,&y);//\u628ax,y\u4e24\u4e2a\u57ce\u9547\u8fde\u8d77\u6765\n\t\t\thb(x,y);//\u5c31\u662f\u5408\u5e76x,y\u6240\u5728\u7684\u96c6\u5408\n\t\t}\n\t\tfor(int i=1;i<=n;++i){\n\t\t\tok[cz(i)]=1;//\u5165\u6876\n\t\t}\n\t\tfor(int i=1;i<=n;++i){\n\t\t\tif(ok[i]) ans++;//\u88ab\u6807\u8bb0\u8fc7\uff0c\u4ee3\u8868\u7740\u4e00\u4e2a\u96c6\u5408\n\t\t}\n\t\tprintf(\"%d\\n\",ans-1);//\u8f93\u51fa\u7b54\u6848\n\t\tmemset(ok,0,sizeof(ok));//\u6e05\u7a7a\u6876\n\t}\n\treturn 0;\n}\n```\n\n\n------------\n\n\u4f60AC\u4e86\u6ca1\uff1fAC\u4e86\u5c31\u70b9\u4e2a\u8d5e\u5457",
        "postTime": 1577968324,
        "uid": 238408,
        "name": "vectorwyx",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1536 \u3010\u6751\u6751\u901a\u3011"
    },
    {
        "content": "\u8fde\u63a5\u9053\u8def\u7684\u9898\u76ee\u5f88\u5bb9\u6613\u60f3\u5230\u7684\u4e00\u79cd\u65b9\u6cd5\u5c31\u662f\n\n#\u5e76\u67e5\u96c6\n\n- \u6211\u7684\u65b9\u6cd5\u662f\uff1a\u628a\u6240\u6709\u7684\u6751\u5e84\u770b\u4f5c\u4e00\u4e2a\u4e2a\u70b9\uff0c\u7528\u9053\u8def\u8fde\u63a5\u8d77\u6765\u5c31\u6210\u4e86\u4e00\u68f5\u68f5\u6811\uff0c\u6700\u540e\u6570\u4e00\u6570\u6709\u591a\u5c11\u68f5\u6811\u5c31\u884c\u4e86\uff0c\u8981\u6c42\u7684\u9053\u8def\u5c31\u662f\u6811\u7684\u6570\u76ee-1\uff1b\n\n- \u600e\u4e48\u624d\u80fd\u77e5\u9053\u6709\u591a\u5c11\u6811\u5462\uff1f\u6211\u7684\u60f3\u6cd5\u662f\u8def\u5f84\u538b\u7f29\uff0c\u628a\u6811\u7684\u8282\u70b9\u90fd\u6307\u5411\u6839\u8282\u70b9\uff0c\u8fd9\u6837\u6839\u8282\u70b9\u7684\u6570\u76ee\u5c31\u662f\u6811\u7684\u6570\u76ee\u4e86~\n\n- \u6700\u540e\u672c\u849f\u84bb\u5e76\u4e0d\u77e5\u9053\u600e\u4e48\u6570\u6839\u8282\u70b9\uff0c\u770b\u5230n<1000\u5c31\u76f4\u63a5\u5efa\u4e86\u4e00\u4e2a\u6876\u628a\u6839\u8282\u70b9\u4e22\u8fdb\u53bb\uff0c0\u52301000\u8dd1\u4e00\u8fb9\u6570\u51fa\u6765\u4e86\uff0c\u53cd\u6b63\u53c8\u4e0d\u5927\u2026\u2026\n\n\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u7684\u5427\n\n```cpp\n#include <iostream>\nusing namespace std;\nint n,m,a,b,p;\nint f[20001]={0};\nint get(int b)\n{\n    if (f[b]==b) return b;\n    else\n    {\n        f[b]=get(f[b]);\n        return f[b];\n    }\n}\nint find(int a)\n{\n    if (f[a]==a) return a;\n    else return find(f[a]);\n}\nint main()\n{\n    cin>>n;\n    if (n!=0) cin>>m;\n    while (n!=0)\n    {\n        int t[1001]={0};\n        for (int i=1;i<=n;i++) f[i]=i;\n        for (int i=1;i<=m;i++)\n        {\n            cin>>a>>b;\n            int k1=find(b);\n            f[k1]=get(a);\n        }\n        for (int i=1;i<=n;i++) f[i]=find(f[i]);\n        for (int i=1;i<=n;i++) t[f[i]]++;\n        int ans=0;\n        for (int i=0;i<=1000;i++) if (t[i]!=0) ans++;\n        cout<<ans-1<<endl;\n        cin>>n;\n        if (n!=0) cin>>m;\n    }\n    return 0;\n} \n```",
        "postTime": 1508424365,
        "uid": 15984,
        "name": "\u5929\u6cfd\u9f9f",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1536 \u3010\u6751\u6751\u901a\u3011"
    },
    {
        "content": "\u5e76\u67e5\u96c6\u7684\u601d\u8def\u3002\n\n\u7b2c\u4e00\u6b21\u5b66\uff0c\u6240\u4ee5\u5728\u4ee3\u7801\u4e0a\u52a0\u4e86\u5f88\u591a\u6279\u6ce8\uff0c\u5404\u8def\u5927\u795e\u4e5f\u53ef\u4ee5\u5e2e\u5fd9\u770b\u770b\u3002\u3002\n\n\u5e76\u67e5\u96c6\u4e3b\u8981\u5c31\u662f\u601d\u60f3\u7406\u89e3\uff0c\u4ee3\u7801\u8fd8\u662f\u5f88\u597d\u5b9e\u73b0\u7684\u3002\n\n\u5e0c\u671b\u80fd\u5e2e\u5230\u840c\u65b0\u4eec\uff01\uff01\uff08\u4e5f\u662f\u6211\u7684\u63d0\u5347(\u2299o\u2299)\u54e6\uff09\n\n\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,x,y,ans=0;          //n\u57ce\u9547\u6570\u76ee\uff0cm\u9053\u8def\u6570\u76ee \nint pre[1005];              //\u7528\u6765\u5b58\u50a8\u7236\u8282\u70b9 \nint find(int x)            //\u67e5\u627ex\u7684\u6839\u8282\u70b9 \n{\n    int r=x;                //\u7528r\u6765\u5e2e\u52a9\u67e5\u627ex\u7684\u6839\u8282\u70b9 \n    while(pre[r]!=r)       //r\u7684\u6839\u8282\u70b9\u4e0d\u662f\u4ed6\u81ea\u5df1 \n    {\n        r=pre[r];          //pre[r]\u662fr\u7684\u7236\u8282\u70b9\uff0c\u5c31\u518d\u5411\u4e0a\u67e5\u627e\u4e00\u5c42 \n    }                      //\u6b64\u65f6\u67e5\u5230\u4e86x\u7684\u6839\u8282\u70b9\u4e3ar\uff0c\u8fd4\u56de \n    int i,j;               //\u8def\u5f84\u538b\u7f29 \n    i=x;\n    while(pre[i]!=r)       //\u82e5\u4e00\u4e2a\u6570\u7684\u7236\u8282\u70b9\u4e0d\u662f\u5e94\u67e5\u5230\u7684\u6839\u8282\u70b9r \n    {                      //\u5373\u5b50\u8282\u70b9i(\u4e5f\u662fx)\u5e76\u4e0d\u662f\u76f4\u63a5\u8fde\u5728\u6839\u8282\u70b9r\u4e0a\u7684 \n        j=pre[i];         //\u5148\u8bb0\u5f55i\u7684\u7236\u8282\u70b9 \n        pre[i]=r;         //\u8ba9\u7236\u8282\u70b9\u76f4\u63a5\u7b49\u4e8e\u6839\u8282\u70b9r \n        i=j;              //\u5728\u628ai\u7684\u7236\u8282\u70b9j\u4ee5\u540c\u6837\u65b9\u6cd5\u5411\u4e0a\u67e5\u627e \n    }\n    return r;             //\u8fd4\u56de\u6839\u8282\u70b9 \n}\nvoid join(int r1,int r2)  //\u5408\u5e76 \n{\n    int fr1=find(r1),fr2=find(r2);//\u67e5\u627e\u4e24\u4e2a\u6570r1\uff0cr2\u7684\u6839\u8282\u70b9 \n    if(fr1!=fr2)          //\u82e5\u6839\u8282\u70b9\u4e0d\u540c \n    {\n        pre[fr2]=fr1;      //\u5408\u5e76 \n    }\n}\nint main()\n{\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)\n        pre[i]=i;          //\u5efa\u7acb\u65b0\u7684\u96c6\u5408\uff0c\u5176\u4ec5\u6709\u7684\u6210\u5458\u662fi\uff1b\n    for(int i=1;i<=m;i++)\n     {\n         scanf(\"%d%d\",&x,&y);//\u8f93\u5165\u4e24\u4e2a\u6570\uff0c\u4e00\u4e2a\u662f\u8def\u7684\u8d77\u70b9\uff0c\u4e00\u4e2a\u662f\u7ec8\u70b9\n         int r1=find(x);\n         int r2=find(y);\n         if(r1!=r2) join(r1,r2);//\u5224\u65ad\u5143\u7d20\u662f\u5426\u5728\u540c\u4e00\u96c6\u5408\u4e2d\uff1b\n     }\n    for(int j=1;j<=n;j++)\n    {\n        if(pre[j]==j) ans++;\n    }\n    cout<<ans-1<<endl;\n    return 0;\n} \n```\n\u53e6\uff1a\u63a8\u8350\u4e00\u7bc7\u6587\u7ae0\uff0c\u5728CSDN\u535a\u5ba2\u4e0a\u5b66\u4e60\u5e76\u67e5\u96c6\u770b\u5230\u7684\uff08\u597d\u8bc4\u5f88\u9ad8\uff09\n\u8bb2\u5f97\u5f88\u597d\uff0c\u7528\u4e86\u4e00\u4e2a\u7279\u6709\u7231\u7684\u4f8b\u5b50\uff0c\u6e05\u6670\u6613\u61c2\uff08\u8eab\u4e3a\u849f\u84bb\u7684\u6211\u90fd\u770b\u61c2\u4e86\uff09\n\n\u94fe\u63a5\uff1ahttp://blog.csdn.net/dellaserss/article/details/7724401/\n",
        "postTime": 1512470832,
        "uid": 60906,
        "name": "Yuan1126",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2839 \u3010\u7545\u901a\u5de5\u7a0b\u3011"
    },
    {
        "content": "## P1536 \u6751\u6751\u901a\n[\u9898\u76ee\u94fe\u63a5](https://www.luogu.org/problemnew/show/P1536)  \n\u8fd9\u9898\u7c97\u7565\u5730\u770b\u4e86\u4e00\u4e0b\uff0c\u5176\u5b9e\u4e3b\u8981\u601d\u60f3\u5c31\u662f\u628a\u5df2\u7ecf\u8fde\u597d\u7684\u57ce\u9547\u770b\u6210\u4e00\u4e2a\u70b9\u3002\u90a3\u4e48\uff0c\u63a5\u4e0b\u6765\u5b9a\u4e49\u4e00\u4e2a\u6570\u7ec4\uff08\u7528\u4f5c\u6876\uff09\uff0c\u6765\u8bb0\u5f55\u6709\u591a\u5c11\u4e2a\u4e0d\u540c\u7684\u70b9\u3002\u8bbe\u6709$n$\u4e2a\u70b9\uff0c\u90a3\u4e48\u5c31\u8f93\u51fa$n-1$\u5c31\u597d\u5566\u3002\n\n$\\mathcal{Code:}$  \n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint n=1,m;//n\u4ee3\u8868\u6709\u591a\u5c11\u4e2a\u6751\u5e84\uff0cm\u662f\u4ee3\u8868\u5df2\u6709\u591a\u5c11\u6761\u8def\nint f[10000];//\u50a8\u5b58\u6bcf\u4e2a\u8282\u70b9\u7684\u201c\u7956\u5148\u201d\nvoid init()//\u9884\u5904\u7406\uff0c\u4e00\u5f00\u59cb\u628a\u6bcf\u4e2a\u7ed3\u70b9\u7684\u7956\u5148\u8bbe\u4e3a\u81ea\u5df1\n{\n\tfor(int i=1;i<=n;i++)f[i]=i;\n    //\u5343\u4e07\u4e0d\u80fd\u5728\u8f93\u5165\u524d\u7528\u6b64\u51fd\u6570\uff08n\u90fd\u6ca1\u8f93\u5165\u600e\u4e48\u9884\u5904\u7406\uff09\n}\nint find_(int x)//\u7528\u5230\u4e86\u8def\u5f84\u538b\u7f29\uff0c\u6bd4\u5355\u7eaf\u7684while\u66f4\u5feb\n{\n\tif(f[x]==x)//\u5982\u679cx\u7684\u7956\u5148\u662f\u81ea\u5df1\n    \tretrun x;//\u90a3\u4e48\u8fd4\u56dex\u5c31\u597d\u4e86\u3002\n    return find_(f[x]);//\u5982\u679c\u4e0d\u662f\u7684\u8bdd\uff0cx\u7684\u7956\u5148\u7684\u7956\u5148\u5c31\u662fx\u7684\u7956\u5148\n}\nvoid union_(int x,int y)//\u5408\u5e76x,y\u4e24\u4e2a\u7ed3\u70b9\n{\n\tf[find_(y)]=find_(x);//\u8ba9x\u7684\u7956\u5148\u6210\u4e3ay\u7684\u7956\u5148\u7684\u7956\u5148\uff0c\u8fd9\u6837y\u6240\u5728\u7684\u96c6\u5408\u91cc\u6240\u6709\u7ed3\u70b9\u7684\u7956\u5148\u5168\u53d8\u4e3ax\u7684\u7956\u5148\u3002\n}\nint main()\n{\n\twhile(n!=0)\n\t{\n\t\tscanf(\"%d\",&n);//\u8f93\u5165n\n\t\tif(n!=0)//\u5224\u65adn\u662f\u5426\u7b49\u4e8e0\n\t\t\tscanf(\"%d\",&m);//\u662f\u5c31\u8f93\u5165m\n\t\telse//\u5426\u5219\u5c31\u8df3\u8fc7\n\t\t\tcontinue;\n\t\tif(m==0)//\u5982\u679cm\uff08\u8def\u7684\u6761\u6570\uff09\u7b49\u4e8e0\u7684\u8bdd\uff0c\u90a3\u4e48\u60f3\u5fc5\u5c31\u6ca1\u6709\u8def\u4e86\n\t\t{\n\t\t\tprintf(\"%d\\n\",n-1);//\u8fde\u8d77n\u4e2a\u8282\u70b9\u6700\u5c11\u5c31\u8981n-1\u6761\u7ebf\n\t\t\tcontinue;\n\t\t}\n\t\tinit();//\u9884\u5904\u7406\n\t\tint x,y;//\u5b9a\u4e49x\u57ce\u9547\u7684y\u57ce\u9547\u7684\u7f16\u53f7\n\t\tint sum=0;//\u7528\u4e8e\u5b58\u50a8\u6700\u5c11\u7684\u8def\u5f84\u6761\u6570\n\t\tint a[10000]={0};//\u6876\uff0c\u7528\u4e8e\u8bb0\u5f55\u6709\u591a\u5c11\u4e2a\u6ca1\u6709\u8def\u5f84\u7684\u57ce\u9547\n\t\tfor(int i=1;i<=m;i++)\n\t\t{\n\t\t\tscanf(\"%d%d\",&x,&y);//\u8f93\u5165x and y\u7684\u7f16\u53f7\n\t\t\tunion_(x,y);//\u56e0\u4e3ax y\u4e4b\u95f4\u6709\u8def\u7ebf\u4e86\uff0c\u5c31\u5408\u5e76\u5b83\u4eec\n\t\t}\n\t\tfor(int i=1;i<=n;i++)//\u5f00\u59cb\u5224\u65ad\n\t\t{\n\t\t\tint c=find_(i);//\u5224\u65ad\u7f16\u53f7\u4e3ac\u7684\u57ce\u9547\u7684\u201c\u7956\u5148\u201d\n\t\t\tif(!a[c])//\u5982\u679c\u8fd9\u4e2a\u201c\u7956\u5148\u201d\u7684\u7f16\u53f7\u6ca1\u6709\u88ab\u8bb0\u5f55\u8fc7\u7684\u8bdd\n\t\t\t\ta[c]++,sum++;//\u90a3\u4e48\u5c31\u8bb0\u5f55\u5b83\uff0c\u8282\u70b9\u6570\u52a0\u4e00\u3002\n\t\t}\n\t\tprintf(\"%d\\n\",sum-1);//\u56e0\u4e3a\u6709n\u4e2a\u4e0d\u540c\u7684\u96c6\u5408\uff0c\u90a3\u4e48\u5c31\u81f3\u5c11\u8981n-1\u6761\u8fb9\u624d\u80fd\u628a\u5b83\u4eec\u8fde\u8d77\u6765\u3002\n\t}\n    return 0;\n}\n\n\n```\n\u4ee5\u4e0a\u5c31\u662f\u672c\u9898\u7684\u4e3b\u8981\u601d\u60f3\uff0c\u5176\u4ed6\u5de8\u4f6c\u4eec\u4e5f\u53ef\u4ee5\u7528\u5404\u79cd\u7384\u5b66\u6570\u636e\u7ed3\u6784\u6765~~\u73a9~~\u505a\u8fd9\u9053\u9898\u4e86\u3002\u5176\u5b9e\u8fd9\u9053\u9898\u53ef\u4ee5\u7528\u4e8e\u7ed9\u5e76\u67e5\u96c6\u5165\u95e8\u7684\u840c\u65b0\u4eec\u6253\u57fa\u7840\uff0c\u90a3\u4e48\u6211\u6765\u901a\u4fd7\u5730\u8bb2\u8bb2```\u5e76\u67e5\u96c6```\u5230\u5e95\u662f\u4ec0\u4e48\u5427\u3002\n\n\u5047\u8bbe\u6700\u5f00\u59cb\uff0c\u6709\u4e00\u5806\u65e0\u4f9d\u65e0\u9760\u7684\u7ed3\u70b9\uff08\u53ef\u4ee5\u628a\u5b83\u4eec\u90fd\u770b\u4f5c\u4e00\u68f5\u6811\uff09\uff0c\u5982\u4e0b:  \n![](https://cdn.luogu.com.cn/upload/pic/52115.png)\n\n\u5b83\u4eec\u90fd\u5f88\u4f24\u5fc3\uff0c\u56e0\u4e3a\u5b83\u4eec\u90fd\u5f88\u5b64\u72ec\u3002\u8fd9\u65f6\uff0c\u4e0a\u5e1d\u6765\u4e86\uff0c\u4ed6\u8bf4:\u201c$2$\u53f7\u6709\u4e2a\u670b\u53cb\uff0c\u5b83\u7684\u540d\u5b57\u53eb$1$\u53f7\uff01\u201d\u8fd9\u65f6\uff0c$1$\u53f7\u548c$2$\u53f7\u4fbf\u88ab\u4e00\u6761\u8fb9\u8fde\u4e86\u8d77\u6765\uff0c\u6210\u4e3a\u4e86\u540c\u4e00\u68f5\u6811\uff08$1$\u53f7\u662f$2$\u53f7\u7684\u670b\u53cb\uff0c\u6240\u4ee5$1$\u53f7\u50a8\u5b58\u7684\u503c\u66f4\u6539\u4e3a$2$\uff0c\u5176\u5b9e\u53cd\u8fc7\u6765\u4e5f\u53ef\u4ee5\uff09\u3002\u5982\u4e0b\uff1a  \n![](https://cdn.luogu.com.cn/upload/pic/52116.png)  \n\n\u8fd9\u65f6\uff0c\u4e0a\u5e1d\u53c8\u8bf4\uff1a\u201c$1$\u53f7\u6709\u4e2a\u670b\u53cb\uff0c\u5b83\u7684\u540d\u5b57\u53eb$5$\u53f7\uff01\u201d\uff0c\u8fd9\u65f6\uff0c$1$\u53f7\u5c31\u4e3a\u96be\u4e86\uff0c\u5b83\u662f\u8be5\u201c\u5f52\u987a\u201d$5$\u53f7\uff0c\u8fd8\u662f\u8be5\u201c\u5f52\u987a\u201d$2$\u53f7\u5462\uff1f\u8fd9\u65f6\uff0c$1$\u53f7\u60f3\u5230\u4e86\u4e00\u4e2a\u529e\u6cd5\uff1a\u76f4\u63a5\u8ddf\u4ed6\u7684\u5927\u54e5\uff08\u7956\u5148\uff1a$2$\u53f7\uff09\u8c08\uff01\u56e0\u4e3a\u6211\u4eec\u77e5\u9053\uff0c\u670b\u53cb\u7684\u670b\u53cb\u5c31\u662f\u670b\u53cb\uff0c\u90a3\u4e48\u76f4\u63a5\u5c06$2$\u53f7\u7684\u503c\u8d4b\u503c\u4e3a$5$\u5c31\u597d\u4e86\uff08\u53cd\u8fc7\u6765\u4e5f\u53ef\u4ee5\uff09\uff01\u5982\u4e0b\uff1a  \n![](https://cdn.luogu.com.cn/upload/pic/52120.png)  \n\u63a5\u7740\uff0c\u4e0a\u5e1d\u8bf4:\u201c$3$\u53f7\u6709\u4e2a\u670b\u53cb\uff0c\u5b83\u7684\u540d\u5b57\u53eb$7$\u53f7\uff01\u201d\u8fd9\u65f6\uff0c\u6211\u4eec\u8fd0\u7528\u521a\u624d\u6240\u8bf4\u7684\u65b9\u6cd5\uff0c\u628a$3,7$\u5408\u5e76\u3002\u5982\u4e0b:  \n![](https://cdn.luogu.com.cn/upload/pic/52121.png)  \n\u540e\u6765\uff0c\u4e0a\u5e1d\u8bf4\uff1a\u201c$7$\u53f7\u6709\u4e2a\u670b\u53cb\uff0c\u5b83\u7684\u540d\u5b57\u53eb$4$\u53f7\uff01\u201d\u8fd9\u65f6\uff0c$7$\u53f7\u4e3a\u96be\u4e86\uff0c\u5b83\u662f\u8be5\u201c\u5f52\u987a\u201d$4$\u53f7\uff0c\u8fd8\u662f\u8be5\u201c\u5f52\u987a\u201d$3$\u53f7\u5462\uff1f\u6ca1\u5173\u7cfb\uff0c\u8fd0\u7528\u4e4b\u524d\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u89e3\u51b3\u6389\u8fd9\u4e2a\u95ee\u9898\uff01  \n![](https://cdn.luogu.com.cn/upload/pic/52163.png)  \n\u4e0a\u5e1d\u53c8\u8bf4\uff1a\u201c$8$\u53f7\u6709\u4e2a\u670b\u53cb\uff0c\u5b83\u7684\u540d\u5b57\u53eb$6$\u53f7\uff01\u201d\u8fd9\u65f6\uff0c\u4f60\u662f\u4e0d\u662f\u89c9\u5f97\u5f88$easy$?\u53ea\u9700\u628a$6,8$\u5408\u5e76\u5c31\u597d\u4e86\uff01  \n![](https://cdn.luogu.com.cn/upload/pic/52164.png)  \n\u8fd9\u65f6\uff0c\u7a0d\u5fae\u6709\u70b9\u96be\u5ea6\u7684\u6765\u4e86\uff0c\u4e0a\u5e1d\u8bf4:\u201c$2$\u53f7\u6709\u4e2a\u670b\u53cb\uff0c\u5b83\u7684\u540d\u5b57\u53eb$6$\u53f7\uff01\u201d\u5440\uff0c\u662f\u4e24\u4e2a\u7ed3\u70b9\u6709$2$\u4e2a\u4ee5\u4e0a\u7684\u96c6\u5408\u5408\u5e76\uff01\u8be5\u600e\u4e48\u529e\u5462\uff1f\u4e0d\u8981\u614c\uff0c\u53ea\u9700\u628a$6$\u7684\u7956\u5148\uff08$8$\uff09\u8bbe\u4e3a$2$\u7684\u7956\u5148\uff08$5$\uff09\u5373\u53ef\uff01  \n![](https://cdn.luogu.com.cn/upload/pic/52168.png)  \n\u5e76\u67e5\u96c6\u4e2d\u7684\u201c\u5e76\u201d\u662f\u4e0d\u662f\u5f88\u5bb9\u6613\uff1f\u90a3\u4e48\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u770b\u53e6\u4e00\u4e2a\u64cd\u4f5c\u2014\u2014\u2014\u201c\u67e5\u201d\u5427\uff01\n\n\u8ba9\u6211\u4eec\u56de\u5230\u4e4b\u524d\u7684\u5185\u5bb9\u2014\u2014\u2014\u73b0\u5728\uff0c\u6bcf\u4e2a\u4eba\u90fd\u6709\u670b\u53cb\u4e86^_^\uff0c\u4e0a\u5e1d\u73b0\u5728\u60f3\u77e5\u9053\uff0c\u8c01\u548c\u8c01\u662f\uff08\u6216\u8005\u4e0d\u662f\uff09\u670b\u53cb\uff1f  \n\u6b64\u65f6\uff0c\u4e0a\u5e1d\u95ee\u9053\uff1a\u201c$1$\u548c$6$\u662f\u670b\u53cb\u5417\uff1f\u201d\u8fd9\u65f6\u5019\uff0c\u6211\u4eec\u521a\u8d4b\u7684\u503c\u6d3e\u4e0a\u7528\u573a\u4e86\uff01  \n![](https://cdn.luogu.com.cn/upload/pic/52169.png)  \n\u5982\u56fe\uff0c\u7ea2\u8272\u7bad\u5934\u4ee3\u8868$6$\u53f7\u5bfb\u627e\u7956\u5148\u4e4b\u8def\uff0c\u7eff\u8272\u7bad\u5934\u4ee3\u8868$1$\u53f7\u5bfb\u627e\u7956\u5148\u4e4b\u8def\uff0c\u7136\u540e\uff0c\u4ed6\u4eec\u627e\u5230\u4e86\u5171\u540c\u7684\u7956\u5148\uff0c\u201c\u670b\u53cb\u7684\u670b\u53cb\u5c31\u662f\u670b\u53cb\u201d\uff0c\u65e2\u7136\u4ed6\u4eec\u6709\u5171\u540c\u7684\u670b\u53cb\uff08\u7956\u5148\uff09\uff0c\u90a3\u4e48\u4ed6\u4eec\u5c31\u662f\u670b\u53cb\u4e86\uff01  \n\u7136\u540e\uff0c\u4e0a\u5e1d\u53c8\u95ee\u9053\uff1a\u201c$2$\u548c$7$\u662f\u670b\u53cb\u5417\uff1f\u201d\u518d\u6b21\u8fd0\u7528\u521a\u624d\u7684\u65b9\u6cd5\uff0c\u53ef\u5f97\u5230\u5982\u4e0b\u56fe\uff1a  \n![](https://cdn.luogu.com.cn/upload/pic/52167.png)  \n\u6a59\u8272\u7bad\u5934\u4ee3\u8868$2$\u53f7\u5bfb\u627e\u7956\u5148\u4e4b\u8def\uff0c\u84dd\u8272\u7bad\u5934\u4ee3\u8868$7$\u53f7\u5bfb\u627e\u7956\u5148\u4e4b\u8def\uff0c\u6700\u7ec8\uff0c\u4ed6\u4eec\u7684\u7956\u5148\u5e76\u4e0d\u4e00\u6837\uff08\u5206\u522b\u662f$5$\u548c$4$\uff09\u3002\u65e2\u7136\u4ed6\u4eec\u7684\u7956\u5148\u90fd\u4e0d\u4e00\u6837\uff0c\u90a3\u4e48\u4ed6\u4eec\u5c31\u7edd\u5bf9\u4e0d\u662f\u670b\u53cb\uff08\u4e0d\u5728\u540c\u4e00\u96c6\u5408\uff09\u3002   \n\u5982\u679c\u4f60\u7406\u89e3\u4e86\u4ee5\u4e0a\u8bb2\u7684\u5185\u5bb9\uff0c\u90a3\u4e48\u4f60\u5c31\u7406\u89e3\u4e86\u5e76\u67e5\u96c6\u7684\u7cbe\u9ad3\u4e86\uff01\u5e76\u67e5\u96c6\u7684\u201c\u5e76\u201d\u3001\u201c\u67e5\u201d\u64cd\u4f5c\u53ef\u4ee5\u5728\u4e0a\u9762\u627e\u5230\u3002\u53bb\u770b\u4e00\u770b\u5427\uff01  \n\u4f46\u662f\uff0c\u806a\u660e\u7684\u4eba\u4f1a\u95ee\uff1a\u627e$1$\u548c$6$\u7684\u670b\u53cb\u65f6\uff0c\u5176\u5b9e\u53ef\u4ee5\u5efa\u4e00\u6761\u8fb9\uff0c\u4f7f$8$\u53ef\u4ee5\u76f4\u63a5\u5230\u8fbe$5$\u3002\u5bf9\uff0c\u6ca1\u9519\uff01\u8fd9\u5c31\u662f\u2014\u2014\u2014\u8def\u5f84\u538b\u7f29\uff01  \n\u5176\u5b9e\uff0c\u8def\u5f84\u538b\u7f29\u53ea\u9700\u5728\u201c\u67e5\u201d\u65f6\u52a0\u4e94\u4e2a\u5b57\u7b26\u5373\u53ef\uff01  \n$\\mathcal{Code}$\n```cpp\nint find_(int x)\n{\n    if(f[x]==x)\n        return x;\n    return f[x]=find_(f[x]);\n}\n```  \n\u8fd9\u6837\uff0c\u5bfb\u627e$1$\u548c$6$\u7684\u7956\u5148\u65f6\uff0c\u5c31\u4f1a\u53d8\u6210\u4e0b\u56fe\uff01  \n![](https://cdn.luogu.com.cn/upload/pic/52172.png)  \n\u540c\u7406\uff0c\u5bfb\u627e$2$\u548c$7$\u7956\u5148\u65f6\uff0c\u5c31\u4f1a\u53d8\u6210\u4e0b\u56fe\uff01  \n![](https://cdn.luogu.com.cn/upload/pic/52166.png)  \n\u662f\u4e0d\u662f\u611f\u89c9\u5feb\u4e86\u5f88\u591a\uff1f\u5176\u5b9e\uff0c\u5e76\u67e5\u96c6\u662f\u5f88\u7b80\u5355\u7684\u3002\u4ee5\u4e0b\u662f\u6211\u7ed9\u5927\u5bb6\u63a8\u8350\u7684\u9898\u76ee\uff1a  \n- [P3367 \u3010\u6a21\u677f\u3011\u5e76\u67e5\u96c6](https://www.luogu.org/problemnew/show/P3367)\n- [P1551 \u4eb2\u621a ](https://www.luogu.org/problemnew/show/P1551)\n- [P2256 \u4e00\u4e2d\u6821\u8fd0\u4f1a\u4e4b\u767e\u7c73\u8dd1](https://www.luogu.org/problemnew/show/P2256)    ",
        "postTime": 1550405829,
        "uid": 101484,
        "name": "Ticzone",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1536 \u3010\u6751\u6751\u901a\u3011"
    },
    {
        "content": "\u8bf4\u53e5\u5b9e\u8bdd\uff0c\u8fd9\u9898\u7528\u5e76\u67e5\u96c6\u5199\u975e\u5e38\u7b80\u5355\uff0c\u51e0\u4e4e\u662f\u88f8\u9898\u3002\u5404\u4f4d\u5927\u4f6c\u7528\u5404\u79cd\u9ad8\u6df1\u7b97\u6cd5\u6765\u5199\u8fd9\u79cd\u7b80\u5355\u7684\u9898\u76ee\u5b9e\u5728\u6ca1\u4ec0\u4e48\u5fc5\u8981\uff08\u5410\u69fd\u4e00\u4e0b\uff09\u3002\n\n\u5e76\u67e5\u96c6\u662f\u4e2a\u4ec0\u4e48\u4e1c\u897f\u5462\uff1f\u5b9e\u73b0\u8d77\u6765\u975e\u5e38\u7b80\u5355\uff08\u8be6\u89c1find\u51fd\u6570\uff0c\u4e24\u884c\u4ee3\u7801\uff09\uff0c\u4f46\u662f\u53ef\u4ee5\u5feb\u901f\u7684\u89e3\u51b3 \u96c6\u5408\u5408\u5e76 \u5e76\u4e14\u627e\u51fa\u67d0\u4e2a\u5143\u7d20\u5c5e\u4e8e\u54ea\u4e2a\u96c6\u5408\u7684\u95ee\u9898\uff08\u901a\u4fd7\u7684\u8bf4\uff09\uff0c\u4e0d\u4f1a\u7684\u540c\u5b66\u53ef\u4ee5[\u6233\u8fd9\u91cc](https://blog.csdn.net/u013546077/article/details/64509038)\n\n\u6211\u4eec\u6bcf\u8f93\u5165\u4e00\u6761\u9053\u8def\uff0c\u53ea\u9700\u8981\u627e\u8fd9\u4e24\u4e2a\u9053\u8def\u662f\u5426\u5728\u540c\u4e00\u96c6\u5408\uff0c\u5982\u679c\u4e0d\u5728\u4e00\u4e2a\u96c6\u5408\u5c31\u5c06ans\u51cf\u4e00\uff08\u5df2\u7ecf\u8fde\u597d\u4e86\uff0c\u4e0d\u9700\u8981\u518d\u4fee\u8def\uff09\uff0c\u6ce8\u610fans\u7684\u521d\u503c\u662fn-1\uff0c\u56e0\u4e3a\u628a\u6240\u6709\u70b9\u8fde\u8d77\u6765\u4e0e\u7528\u8fd9\u4e9b\u70b9\u6784\u9020\u4e00\u68f5\u6811\u662f\u7b49\u4ef7\u7684\uff08\u81f3\u5c11\u4ece\u7b54\u6848\u4e0a\u6765\u8bf4\uff09\u3002\n\n\u4ee3\u7801\u6bd4\u8f83\u7b80\u6d01\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint f[66666];\nint find(int x){//find\u51fd\u6570\n\tif (f[x]==x) return x;\n\telse return f[x]=find(f[x]);\n}\nint main(){\n\tint i,n,m,x,y,ans;\n\t\n\twhile (cin>>n>>m){//\u5982\u679c\u8fd8\u80fd\u8f93\u5165n,m\u5c31\u8f93\u5165\uff08\u61d2\u5f97\u591a\u5199\u4ee3\u7801\uff09\n\t\tans=n-1;//ans\u8d4b\u521d\u503c\n\t\tfor (i=1; i<=n; i++){\n\t\t\tf[i]=i;//\u5e76\u67e5\u96c6\u521d\u59cb\u5316\n\t\t}\n\t\tfor (i=1; i<=m; i++){\n\t\t\tscanf(\"%d%d\",&x,&y);//\u8f93\u5165\u9053\u8def\u7684\u5934\u548c\u5c3e\n\t\t\tx=find(x); y=find(y);//\u627e\u51fa\u5934\u5c3e\u5c5e\u4e8e\u54ea\u4e2a\u96c6\u5408\n\t\t\tif  (x==y) continue;//\u5982\u679c\u662f\u540c\u4e00\u96c6\u5408\u5c31\u4e0d\u7ba1\n\t\t\tf[x]=y;//\u96c6\u5408\u5408\u5e76\n\t\t\tans--;\n\t\t}\n\t\tprintf(\"%d\\n\",ans);//\u8f93\u51fa\u7b54\u6848\n\t}\t\n\treturn 0;\n} \n```",
        "postTime": 1541674273,
        "uid": 39533,
        "name": "Rocket_raccoon_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1536 \u3010\u6751\u6751\u901a\u3011"
    },
    {
        "content": "\u9898\u76ee\u76f4\u901a\u8f66\uff1a[P1536 \u6751\u6751\u901a](https://www.luogu.org/problemnew/show/P1536)\n\n\u5927\u6982\u770b\u4e86\u4e00\u4e0b\u5e95\u4e0bdaolao\u7684\u9898\u89e3\uff0c\u53d1\u73b0\u597d\u50cf\u6ca1\u6709\u548c\u6211\u5b8c\u5168\u4e00\u6837\u7684\n\n~~\u4e00\u5b9a\u8981\u8fc7\u5440~~\n\n## **\u8fdb\u5165\u6b63\u9898**\n\n\u770b\u5230\u8fd9\u9898\u5f88\u5bb9\u6613\u60f3\u5230\u7684\u4e00\u79cd\u65b9\u6cd5\u5c31\u662f**\u5e76\u67e5\u96c6**\n\n\u4eca\u5929\u521a\u597d\u5b66\u4e86\u5e76\u67e5\u96c6\uff0c\u5c31\u62ff\u8fd9\u9898\u6765\u7ec3\u7ec3\u624b\n\n\u6211\u7684\u601d\u8def\u662f\u5148\u5c06\u63d0\u4f9b\u7684\u8def\u5f84\u5408\u5e76\uff0c\u7136\u540e\u672a\u8054\u901a\u7684\u8def\u5f84\u8fde\u63a5\u8d77\u6765\uff0c\u7b54\u6848+1\n\n#### \u8bdd\u4e0d\u591a\u8bf4\uff0c\u4e0a\u4ee3\u7801  (\u89e3\u91ca\u90fd\u5728\u4ee3\u7801\u91cc\u4e86)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint f[1000001],ans=0;\nint find(int k){ //find\u51fd\u6570 (\u5bfb\u627e \"\u7236\u4eb2\") \n\tif(f[k]==k) return k;\n\telse return f[k]=find(f[k]);\n}\nvoid pin(int x,int y){ //\u8fdb\u884c\u8fde\u63a5\u7684\u51fd\u6570 (\u6211\u4e3a\u4ec0\u4e48\u8981\u5199\u8fd9\u4e2a\u51fd\u6570\uff1f\uff1f\uff1f) \n\tf[find(x)]=find(y);\n}\nint main(){\n\tint a,b;\n\twhile(1){\n\t\tans=0; //\u7b54\u6848de\u8ba1\u6570\u5668 \n\t\tcin>>a;\n\t\tif(a==0) return 0; //\u5224\u65ad\u662f\u5426\u9000\u51fa\u7a0b\u5e8f \n\t\tcin>>b;\n\t\tfor(int i=1;i<=a;i++) f[i]=i; //\u521d\u59cb\u5316 \n\t\tfor(int i=1;i<=b;i++){\n\t\t\tint x,y;\n\t\t\tcin>>x>>y;\n\t\t\tpin(x,y); //\u8fde\u63a5\u63d0\u4f9b\u7684\u8def\u5f84 \n\t\t}\n\t\t//\u5f00\u59cb\u8ba1\u7b97\u8fd8\u9700\u8981\u7684\u8def\u5f84 \n\t\tfor(int i=1;i<a;i++){\n\t\t\tif(find(f[i])==find(f[i+1])){ //\u524d\u540e\u4e61\u6751\u8054\u901a (\u597d\u50cf\u8981\u4e0d\u8981\u8fd9\u53e5\u90fd\u65e0\u6240\u8c13)\n\t\t\t\tcontinue;\n\t\t\t}else{ //\u5982\u679c\u524d\u540e\u4e61\u6751\u672a\u8054\u901a\n\t\t\t\tpin(i,i+1); //\u8fdb\u884c\u8fde\u63a5 \n\t\t\t\tans++; //\u7b54\u6848+1 \n\t\t\t}\n\t\t}\n\t\tcout<<ans<<\"\\n\"; //\u8f93\u51fa\u7b54\u6848 \n\t}\n\treturn 0;\n}\n```\n**\u672c\u849f\u84bb\u53d1\u9898\u89e3\u4e0d\u6613\uff0c\u8bf7\u5404\u4f4ddaolao\u8f7b\u55b7**\n\n~~**\u6c42\u8fc7\u554a**~~",
        "postTime": 1562251985,
        "uid": 125113,
        "name": "cxfyg",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 P1536 \u3010\u6751\u6751\u901a\u3011"
    },
    {
        "content": "\u5e76\u67e5\u96c6\u7684\u7b80\u5355\u9898\u597d\u50cf\u6bcf\u9053\u90fd\u4e00\u6837\n\n```cpp\nvar n,m,i,x,y,r1,r2,ans:longint;\nfather:array[0..100000] of longint;\na:array[0..100000] of boolean;\nfunction find(x:longint):longint;//\u627e\u7236\u8282\u70b9\nbegin\nif father[x]<>x then father[x]:=find(father[x]);\nfind:=father[x];\nend;\nbegin\nread(n);\nwhile n>0 do//\u9898\u4e2d\u8bf4n\u4e3a0\u65f6\u7ed3\u675f\nbegin\nreadln(m);\nfor i:=1 to m do//\u521d\u59cb\u7236\u8282\u70b9\u6307\u5411\u81ea\u5df1\nfather[i]:=1;\nans:=n;\nfor i:=1 to m do//\u5408\u5e76\nbegin\nreadln(x,y);\nr1:=find(x);\nr2:=find(y);//\u627e\u51fa\u4e24\u4e2a\u70b9\u7684\u7956\u5148\nif r1<>r2 then//\u5408\u5e76\u7956\u5148\nbegin\ndec(ans);//\u89e3\u91ca\u5728\u4e0b\u9762\nfather[r1]:=r1;\nend;\nend;\nwriteln(ans-1);\nread(n);\nend;\nend.\n```\n\u89e3\u91ca\u4e00\u4e0bans\n\u4e0d\u7406\u89e3\u4e3a\u751a\u8981\u72ec\u7acb\u518d\u505a\u4e00\u4e2a\n\n\u53ea\u8981ans\u6bcf\u6b21\u8d4b\u6751\u5e84\u6570\u5373\u53ef\n\n\u8054\u901a\u4e00\u4e2a\u51cf\u4e00\n\n\u5269\u4e0b\u6765\u7684-1\u5c31\u662f\u8fd8\u672a\u8054\u901a\u7684\n\n\u597d\u50cf\u53eb\u4ec0\u4e48\u514b\u9c81\u65af\u5361\u5c14\n\n\u505a\u4e86\u4e00\u70b9\u5c0f\u624b\u811a~\n",
        "postTime": 1498820152,
        "uid": 32355,
        "name": "AuroraIris",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1536 \u3010\u6751\u6751\u901a\u3011"
    },
    {
        "content": "### \u672c\u849f\u84bb\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\uff0c\u8bf7\u5404\u4f4d\u5927\u4f6c\u591a\u591a\u5305\u6db5~~\n\n\u5176\u5b9e\u672c\u9898\u53ef\u4ee5\u7528kruskal\u6765\u505a\uff0c\u53ea\u8981\u8bb0\u5f55\u4e00\u4e0b\u6709\u54ea\u51e0\u4e2a\u6751\u5e84\u901a\u4e86\uff0c\u8dd1\u4e00\u4e0bkruskal\uff0c\u518d\u7528\u4e00\u4e2a\u53d8\u91cf\u6765\u8bb0\u5f55\u6709\u51e0\u4e2a\u8282\u70b9\u88ab\u5408\u5e76\uff0c\u51cf\u4e00\u4e2an\uff0c\u5c31OK\u4e86\uff01\n\n    \n    \n    \n    \n```cpp\n    #include <iostream>\n    #include <algorithm>\n    #define INF 99999999\n    using namespace std;\n    int n,m,s,t;\n    int i,j;\n    int dad[1000 + 1];//\u6bcf\u4e2a\u8282\u70b9\u5c5e\u4e8e\u7684\u7236\u4eb2\u96c6\u5408\n    struct edge\n    {\n        int xi,yi;\n    }k[100000+1];\n    int getfather (int x)//\u627e\u7236\u4eb2\n    {\n        if (x == dad[x])\n            return x;\n        dad[x] = getfather(dad[x]);\n        return dad[x];\n    }\n    void kruskal()\n    {\n        int p = 1;//\u8fd9\u91ccp = 1\u5c31\u53ef\u4ee5\u76f4\u63a5n - p\n        for (i = 1;i <= n;i ++)\n        {\n            dad[i]=i;//\u521d\u59cb\u5316\n        }   \n        for (i = 1;i <= m;i ++)\n        {\n               if (getfather(k[i].xi) != getfather(k[i].yi))//\u5224\u65ad\u662f\u5426\u4e3a\u540c\u4e00\u4e2a\u96c6\u5408\n            {\n                   dad[getfather(k[i].xi)] = k[i].yi;//\u5408\u5e76\u96c6\u5408\n                   p ++;//\u8bb0\u5f55\u5408\u5e76\n               }\n        }\n        cout << n - p << '\\n';//\u8f93\u51fa\n        return ;\n    }\n    int main ()\n    {\n        while (1)\n        {\n            cin >> n >>m;\n            if (n == 0)//\u5f53n == 0\u65f6\u9000\u51fa\u5faa\u73af\n                break; \n            for (i = 1;i <= m;i ++)\n            {\n                 cin >> k[i].xi >> k[i].yi;//\u8bb0\u5f55\u54ea\u51e0\u4e2a\u6751\u5e84\u76f8\u901a\n            }\n            kruskal ();\n        }\n        return 0;\n}\n```",
        "postTime": 1514372066,
        "uid": 37469,
        "name": "Guzx",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1536 \u3010\u6751\u6751\u901a\u3011"
    },
    {
        "content": "**- \u56e0\u4e3a\u662f\u9700\u8981\u7684\u6700\u5c11\u7684\u9053\u8def\u7684\u6761\u6570**\n\n**- \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e9b\u57ce\uff08cun\uff09\u5e02\uff08zhuang\uff09\u60f3\u6210\u4e00\u6761\u94fe**\n\n**- \u90a3\u4e48\u8fd9\u6761\u94fe\u4e0a\u7684\u6240\u6709\u5143\u7d20\u8054\u901a\u6240\u9700\u8981\u7684\u9053\u8def\u6761\u6570\u6700\u5c11\u5373\u4e3an-1**\n\n**- \u6211\u4eec\u6bcf\u8054\u901a\u4e24\u4e2a\u57ce\u5e02\u90fd\u9700\u8981\u4e00\u6761\u9053\u8def**\n\n**- \u90a3\u4e48\u6240\u9700\u8981\u5efa\u9020\u7684\u9053\u8def\u7684\u6761\u6570\u5c31\u662f\u603b\u5171\u7684n-1\u6761\u51cf\u53bb\u5df2\u5efa\u9020\u7684\u9053\u8def\u7684\u6761\u6570**\n\n**- \u8fd9\u6837\u5c31\u4fdd\u8bc1\u4e86\u6240\u9700\u7684\u9053\u8def\u7684\u6761\u6570\u662f\u6700\u5c11\u7684**\n\n------------------------------------------------------------------------------------------------------------------------\n\n```cpp\n#include\"stdafx.h\"\n#include<cstdio>\n#include<algorithm>\n#include<iostream>\nusing namespace std;\nint n,m;\nint f[1001];\nint find(int x)       //\u627e\u7956\u5b97\uff0c\u9012\u5f52+\u538b\u7f29\u8def\u5f84\n{\n    if(f[x]!=x) f[x]=find(f[x]);   //\u9012\u5f52\u8fc7\u7a0b\u4e2d\u987a\u4fbf\u628a\u8def\u4e0a\u7684\u7236\u4eb2\u7684\u7956\u5b97\u66f4\u6539\u8fc7\u6765\uff0c\u4fbf\u4e8e\u540e\u9762\u67e5\u627e\u65f6\u65b9\u4fbf\uff08\u540e\u9762\u9012\u5f52\u5c42\u6570\u5c11\uff09\n    return f[x];\n}\nint main()\n{\n    cin>>n;\n    while(n!=0)         //n\u4e0d\u4e3a0\u65f6\u8f93\u5165\n    {\n        int ans=0;\n        cin>>m;\n        for(int i=1;i<=n;i++)\n            f[i]=i;\n        for(int i=1;i<=m;i++)\n        {\n            int a,b;\n            cin>>a>>b;       //\u5c06a,b\u4e24\u4e2a\u57ce\uff08cun\uff09\u5e02\uff08zhuang\uff09\u8054\u901a\n            if(find(a)!=find(b))        //\u4e24\u4e2a\u57ce\uff08cun\uff09\u5e02\uff08zhuang\uff09\u672a\u8054\u901a\n            {\n                f[find(a)]=find(b);      //\u5c06\u8fd9\u4e24\u4e2a\u57ce\uff08cun\uff09\u5e02\uff08zhuang\uff09\u8054\u901a\uff0c\u5e76\u4e14\u4e0e\u8fd9\u4e24\u4e2a\u57ce\uff08cun\uff09\u5e02\uff08zhuang\uff09\u76f8\u901a\u7684\u57ce\uff08cun\uff09\u5e02\uff08zhuang\uff09\u4e5f\u76f8\u901a\n                ans++;         //\u8bb0\u5f55\u4e0b\u5df2\u7ecf\u8054\u901a\u7684\u57ce\uff08cun\uff09\u5e02\uff08zhuang\uff09\u7684\u9053\u8def\u9700\u8981\u7684\u6761\u6570\n            }\n        }\n        cout<<n-1-ans<<endl;     //n\u4e2a\u57ce\uff08cun\uff09\u5e02\uff08zhuang\uff09\u8054\u901a\u6700\u5c11\u9700\u8981n-1\u6761\u8def\uff0c\u518d\u51cf\u53bb\u5df2\u7ecf\u8fde\u901a\u7684\u9053\u8def\uff08ans\uff09\u5c31\u662f\u6240\u9700\u5efa\u9020\u7684\u9053\u8def\n        cin>>n;         //\u8f93\u5165\u4e0b\u4e00\u4e2an\n    }\n    return 0;\n}\n\n```",
        "postTime": 1484902385,
        "uid": 18441,
        "name": "Drug__Lover",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1536 \u3010\u6751\u6751\u901a\u3011"
    },
    {
        "content": "\u5e76\u67e5\u96c6\u7684\u601d\u8def\u5e94\u8be5\u975e\u5e38\u663e\u7136\uff0c\u5c45\u7136\u6709\u697c\u4e0b\u5927\u4f6c\u613f\u610f\u5199\u5854\u6d0b\u7f29\u70b9\u6211\u4e5f\u65e0\u6cd5\u53ef\u8bf4\u3002\n\n\u7b80\u5355\u8bb2\u8ff0\u4e00\u4e0b\u601d\u8def\uff0c\u5e76\u67e5\u96c6\u5927\u6982\u7684\u601d\u8def\u5c31\u662f\n\n\u6bcf\u6b21\u6211\u4eec\u8bfb\u5165\u4e00\u6761\u8fb9\uff0c\u90a3\u4e48\u8bf4\u660e\u8fd9\u8fb9\u76f8\u8fde\u7684\u4e24\u4e2a\u70b9\u5c31\u662f\u5728\u540c\u4e00\u4e2a\u8054\u901a\u5feb\u4e4b\u4e2d\u7684\n\n\u5e76\u4e14\u8fd9\u4e2a\u9898\u76ee\u8bf4\u5b9e\u5728\u8bdd\u610f\u601d\u5c31\u662f\u5bf9\u4e8e\u6bcf\u7ec4\u8f93\u5165\u6570\u636e\uff0c\u8981\u6c42\u627e\u5230\u8fde\u901a\u5757\u4e2a\u6570\uff0c\u5e76\u4e14\u8f93\u51fa\n\n\u4e2a\u6570\u51cf\u4e00\u3002\n\n\u4e3a\u4ec0\u4e48\u662f\u4e2a\u6570\u51cf\u4e00\u5462\uff1f\u5b66\u8fc7\u6811\u7684\u90fd\u77e5\u9053\uff0c\u6811\u5c31\u662f\u6700\u7b80\u5355\u7684\u8fde\u901a\u56fe\uff0c\u6211\u4eec\u8981\u5efa\u6210\u4e00\u9897\n\n\u6811\uff0cn\u4e2a\u8282\u70b9\u52bf\u5fc5\u8981n-1\u4e2a\u8fb9\uff0c\u8fd9\u5c31\u975e\u5e38\u663e\u7136\u4e86\uff0c\u5e76\u67e5\u96c6\u5c31\u662f\u7528\u6765\u68c0\u7d22\u8054\u901a\u5feb\u7684\u9ad8\u6548\u65b9\n\n\u6cd5\uff0c\u5e9f\u8bdd\u4e0d\u591a\u8bf4\u4e0a\u4ee3\u7801\u3002\u76f8\u4fe1\u5927\u5bb6\u5e76\u67e5\u96c6\u7684\u57fa\u672c\u65b9\u6cd5\u90fd\u4f1a\u7684\uff0c\u8fd9\u91cc\u4e0d\u8d58\u8ff0\u3002\n```cpp\n#include <cstdio>\n#include <iostream>\nusing namespace std;\n\nint father[100001];\nint visited[10001];\nint find(int x)\n{\n\tif(father[x]!=x)father[x]=find(father[x]);\n\treturn father[x];\n}\n\nint main()\n{\n\twhile(1)\n\t{\n\t\tint n,m;\n\t\tcin>>n>>m;\n\t\tif(n==0)break;\n\t\tfor(int i=1;i<=n;i++)father[i]=i;\n\t\tfor(int i=1;i<=m;i++)\n\t\t{\n\t\t\tint u,v;\n\t\t\tcin>>u>>v;\n\t\t\tif(u>v)swap(u,v);\n\t\t\tint uu=find(u);int vv=find(v);\n\t\t\tif(father[uu]!=father[vv])\n\t\t\t\tfather[vv]=uu;\n\t\t}\n\t\tfor(int i=1;i<=n;i++)visited[i]=0;\n\t\tint ans=0;\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tif(visited[father[find(i)]]==0)\n\t\t\t{\n\t\t\t\tans++;\n\t\t\t\tvisited[father[find(i)]]=1;\n\t\t\t}\n\t\t}\n\t\tif(ans==0)cout<<0<<endl;else cout<<ans-1<<endl;\n\t}\n\treturn 0;\n} \n```",
        "postTime": 1535157516,
        "uid": 22985,
        "name": "dzysc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1536 \u3010\u6751\u6751\u901a\u3011"
    },
    {
        "content": "\u4e3b\u8981\u662f\u5e76\u67e5\u96c6\u7684\u601d\u8def\uff1a\n\nstep1\uff1a\u8ba4\u7239\n\nstep2\uff1a\u6709\u51e0\u4e2a\u5bb6\u5ead\n\nstep3\uff1a\u8f93\u51fa\u5bb6\u5ead\u6570\u51cf\u4e00\uff08\u690d\u6811\u95ee\u9898\uff09\n\n\n\u7b2c\u4e00\u6b65\u6ca1\u4ec0\u4e48\u597d\u8bb2\u7684\uff0c\u6a21\u7248\n\n\n\u7b2c\u4e8c\u6b65\u5c31\u662f\u628a\u6240\u6709\u7684\u57ce\u5e02\u641c\u4e00\u904d\uff0c\u770b\u770b\u6709\u6ca1\u6709\u81ea\u5df1\u662f\u81ea\u5df1\u7238\u7238\u7684\n\n\n\u7b2c\u4e09\u6b65\u8f93\u51fa\u5bb6\u5ead\u6570\u51cf\u4e00\n\n\n\u4e0b\u9762\u662f\u5145\u6ee1\u849f\u84bb\u6c14\u606f\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\nusing namespace std;\nint father[1001];\nlong long pc=0;\nint find(int a)\n{\n    if(father[a]!=a) father[a]=find(father[a]);\n    return father[a];\n}\nint main()\n{\n    int n,m;\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n    {\n        father[i]=i;\n    }\n    for(int i=0,a,b,fa,fb;i<m;i++)\n    {\n        scanf(\"%d%d\",&a,&b);\n        fa=find(a);  \n        fb=find(b);\n        if (fa!=fb) father[fa]=fb;\n    }\n    for(int i=1;i<=n;i++)\n    {\n        if(father[i]==i) pc++;\n    }\n    printf(\"%lld\",pc-1);\n    return 0;\n}\n```\n\u7701\u653f\u5e9c\u592a\u849f\u84bb\u4e86\uff0c\u8fd9\u90fd\u4e0d\u4f1a\uff08\u5212\u6389\uff09\n",
        "postTime": 1514172073,
        "uid": 59221,
        "name": "gravf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2839 \u3010\u7545\u901a\u5de5\u7a0b\u3011"
    },
    {
        "content": "\u6211\u7684\u505a\u6cd5\u5927\u6982\u5c31\u662f\u627en\u4e2a\u70b9\u4e2d\u7684\u8054\u901a\u5757\u4e2a\u6570\uff0c\u6bcf\u4e2a\u8054\u901a\u5757\u90fd\u53ef\u4ee5\u770b\u6210\u4e00\u4e2a\u70b9\uff0c\u90a3\u4e48\u5c06\u4ed6\u4eec\u5168\u90e8\u8054\u901a\u9700\u8981\u7684\u8fb9\u6570\u5c31\u662f\u8054\u901a\u5757\u4e2a\u6570-1\uff0c\u627e\u8054\u901a\u5757\u7684\u8bdd\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\uff0c\u4f46\u662f\u5df2\u7ecf\u6709\u5f88\u591a\u5e76\u67e5\u96c6\u7684\u9898\u89e3\u4e86\u6240\u4ee5\u6211\u7528\u7684\u662f\u53e6\u4e00\u79cd\u65b9\u6cd5\uff0c\u611f\u89c9\u5b9e\u73b0\u8d77\u6765\u6bd4\u5e76\u67e5\u96c6\u8981\u5bb9\u6613\u4e00\u4e9b\u3002\u5177\u4f53\u5b9e\u73b0\u65b9\u6cd5\u5c31\u662f\u4ece1~n\u4e00\u4e2a\u4e2a\u627e\uff0c\u5982\u679c\u8fd9\u4e2a\u70b9\u8fd8\u6ca1\u6709\u88ab\u6807\u8bb0\uff08\u8fd8\u6ca1\u6709\u5728\u4efb\u4f55\u4e00\u4e2a\u8054\u901a\u5757\u91cc\uff09\u5219\u641c\u7d22\u4e00\u904d\u8fd9\u4e2a\u70b9\u80fd\u5230\u8fbe\u7684\u6240\u6709\u70b9\u5e76\u52a0\u4e0a\u6807\u8bb0\uff0c\u7136\u540e\u8054\u901a\u5757\u7684\u4e2a\u6570+1\uff0c\u6c42\u51fa\u8054\u901a\u5757\u7684\u4e2a\u6570\u4e4b\u540e\u7b54\u6848\u5c31\u662f\u8054\u901a\u5757\u4e2a\u6570-1\n\n\u4e0b\u9762\u662f\u4ee3\u7801:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint w[1001][1001],n,m,u,v,sum;//w[i][j]\u8868\u793ai\u548cj\u662f\u5426\u6709\u8fb9\u76f8\u8fde sum\u8bb0\u5f55\u8054\u901a\u5757\u4e2a\u6570  \nbool vis[1001];//\u8bb0\u5f55\u70b9\u662f\u5426\u5728\u8054\u901a\u5757\u91cc \nvoid dfs(int x){\n    vis[x]=1;//\u8d70\u8fc7\u7684\u70b9\u6807\u8bb0\u9632\u6b62\u91cd\u590d\u8d70\n    for(int i=1;i<=n;i++)\n        if(w[x][i]&&!vis[i])//\u627e\u5230\u4e00\u4e2a\u4e0ex\u76f8\u8fde\u4e14\u672a\u8d70\u8fc7\u7684\u70b9\u5e76\u7ee7\u7eed\u641c\u7d22 \n            dfs(i);\n}\n\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++){\n        scanf(\"%d%d\",&u,&v);\n        w[u][v]=w[v][u]=1;//\u6807\u8bb0\u4e24\u70b9\u662f\u5426\u76f8\u8fde\n    }\n    for(int i=1;i<=n;i++)\n        if(!vis[i]){//\u82e5\u5f53\u524d\u7684\u70b9\u6ca1\u6709\u8d70\u8fc7\u5219\u8bf4\u660e\u53d1\u73b0\u4e86\u4e00\u4e2a\u65b0\u7684\u8054\u901a\u5757\n            sum++; \n            dfs(i);\n        }\n    printf(\"%d\",sum-1);//sum\u4e2a\u8054\u901a\u5757\u7528sum-1\u6761\u8fb9\u5373\u53ef\u5c06\u5176\u5168\u90e8\u8fde\u63a5\n    return 0;\n}\n```",
        "postTime": 1508312814,
        "uid": 48438,
        "name": "\u827e\u857e",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2839 \u3010\u7545\u901a\u5de5\u7a0b\u3011"
    },
    {
        "content": "\u6211\u7528\u7684\u5e76\u67e5\u96c6\uff0c\u4eb2\u621a\u7684\u4eb2\u621a\u5c31\u662f\u4f60\u7684\u4eb2\u621a\uff01\u6c42\u5927\u5bb6\u4e0d\u559c\u52ff\u55b7\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint f[5050];//\u5b58\u50a8\u4e00\u4e2a\u8282\u70b9\u7684\u7236\u4eb2\u8282\u70b9\u662f\u8c01\nint find(int x){\n    if (f[x]==x) return x;\n    else return find(f[x]);\n```\n}//\u7528\u9012\u5f52\u5224\u65ad\u4e00\u4e2a\u8282\u70b9\u7684\u7956\u5b97\u8282\u70b9\u662f\u8c01\uff0c\u8bb0\u4f4f\uff0c\u7236\u4eb2\u7684\u7956\u5b97\u5c31\u662f\u4f60\u7684\u7956\u5b97\uff01\n```cpp\nint main(){\n    int root1,root2,n,m,i,a,b,j,s=0;\n    cin>>n>>m;\n    for (i=1;i<=n;i++) f[i]=i;\n    for (i=1;i<=m;i++){\n        cin>>a>>b;\n        root1=find(a);//a\u7684\u7956\u5b97\n        root2=find(b);//b\u7684\u7956\u5b97\n        if (root1!=root2) f[root2]=root1;//\u5982\u679c\u4ed6\u4eec\u7684\u7956\u5b97\u4e0d\u662f\u540c\u4e00\u4e2a\u4eba\uff0c\u73b0\u5728a\u548cb\u662f\u4eb2\u621a\uff0c\u5c31\u628aa\u7684\u7956\u5b97\u8bbe\u4e3ab\u7684\u7956\u5b97\u7684\u7236\u4eb2\uff0c\u8fd9\u4e24\u4e2a\u8c01\u662f\u8c01\u7684\u7236\u4eb2\u65e0\u6240\u8c13\uff0c\u56e0\u4e3a\u4ed6\u4eec\u662f\u65e0\u5411\u7684\n    }\n    for (i=1;i<=n;i++)\n        if (f[i]==i) s++;//\u5982\u679c\u4e00\u4e2a\u70b9\u7684\u7236\u4eb2\u8282\u70b9\u662f\u81ea\u5df1\uff0c\u8bf4\u660e\u8fd9\u4e2a\u70b9\u548c\u522b\u7684\u70b9\u6ca1\u6709\u8054\u901a\uff0cs\u8bb0\u7684\u662f\u8fd9\u6837\u70b9\u7684\u6570\u91cf\n    cout<<s-1;//s\u4e2a\u70b9\u4e4b\u95f4\u53ea\u8981s-1\u7ebf\n    return 0;\n}\n```",
        "postTime": 1503803795,
        "uid": 41003,
        "name": "LMB_001",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2839 \u3010\u7545\u901a\u5de5\u7a0b\u3011"
    },
    {
        "content": "\u8d85\u7b80\u5355\u5e76\u67e5\u96c6\u4e0d\u89e3\u91ca\u3002\n\n\n\u8d60\u9001C++\u4ee3\u7801\u3002\n\n\u00b7\u00b7\u00b7cpp\n\n\n\n\n\n\n\n```cpp\n#include <cstdio>\nconst int size = 100005;\nint father[size],n,m,ans;\nint getfather(int x){\n    if(father[x] == x) return x;\n    else return father[x] = getfather(father[x]);\n}\nvoid Union(int x, int y){\n    int fx = getfather(x);\n    int fy = getfather(y);\n    if(fx != fy) father[fy] = fx;\n}\nint main(){\n    int x,y;\n    scanf(\"%d %d\",&n,&m);\n    for(int i = 1; i <= n; i++) father[i] = i;\n    for(int i = 1; i <= m; i++){\n        scanf(\"%d %d\",&x,&y);\n        Union(x, y);\n    }\n    for(int i = 1; i <= n; i++){\n        if(father[i] == i) ans++;\n    }\n    printf(\"%d\\n\",ans-1);\n    return 0;\n}\n```\n```cpp",
        "postTime": 1472257240,
        "uid": 17170,
        "name": "Deny_\u5c0f\u7530",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2839 \u3010\u7545\u901a\u5de5\u7a0b\u3011"
    },
    {
        "content": "**\u6700\u8fd1\u5728\u7ec3\u5e76\u67e5\u96c6\n\u5148\u4ece\u6a21\u677f\u9898\u7ec3\u8d77...**\n\n\u56e0\u4e3a\u5e76\u67e5\u96c6\u5408\u5e76\u601d\u60f3\u662f\uff1a\n\n**\u5c06\u4e24\u4e2a\u4e8c\u53c9\u6811\u5408\u5e76\uff0c\u5728\u5176\u4e2d\u53ea\u6709\u4e00\u4e2a\u6839\u8282\u70b9\u3002**\n\n\u6240\u4ee5\u5982\u679c\u6bcf\u6761\u8def\u5168\u90e8\u8fde\u901a\u7684\u8bdd\u5c31\u5fc5\u987b\u53ea\u6709\u4e00\u4e2a\u5730\u70b9\u6240\u6807\u8bc6\u7684\u6839\u8282\u70b9\u662f\u4ed6\u81ea\u5df1\u3002\u6240\u4ee5\u5728\u626b\u63cf\u7684\u65f6\u5019\u5982\u679c\u9047\u89c1\u662f\u81ea\u5df1\u6839\u8282\u70b9\u662f\u81ea\u5df1\u7684\u5c31\u662f\u672a\u88ab\u8fde\u63a5\u5230\u4e00\u8d77\u7684\u3002\uff08\u9664\u201c\u5927\u6811\u201d\u7684\u6839\u8282\u70b9\uff09\n\n\u7a0b\u5e8f\u5982\u4e0b\uff1a\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cstring>\nusing namespace std;\nint fa[10001],n,m,ans;\nint find(int x)\n{\n\treturn x==fa[x]?x:fa[x]=find(fa[x]);\n}  //\u5e76\u67e5\u96c6\u538b\u7f29\u8def\u5f84\nvoid he(int x,int y)\n{\n\tint x1=find(x),x2=find(y);\n\tfa[x2]=x1;\n\treturn ;\n}\nint main()\n{\t\n\twhile(1)\n\t{\n\t\tans=0;\n\t\t//memset(fa,0,sizeof(fa));\n\t\tscanf(\"%d%d\",&n,&m);\n\t\tif (n==0)\n\t\tbreak;\n\t\tfor (int i=1;i<=n;i++)\n\t\tfa[i]=i;\n\t\tfor (int i=1;i<=m;i++)\n\t\t{\n\t\t\tint x,y;\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\the(x,y);\n\t\t}   //\u5c06\u4ed6\u4eec\u5408\u5e76\n\t\tfor (int i=1;i<=n;i++)\n\t\tif (find(fa[i])==i)\n\t\tans++;   \n\t    printf(\"%d\\n\",ans-1); \n   //\u5728\u81ea\u5df1\u7684\u7956\u5148\u662f\u81ea\u5df1\u7684\u60c5\u51b5\u4e0b\u8fd8\u4f1a\u6709\u4e00\u4e2a\u786e\u5b9e\u662f\u5927\u6811\u6839\u8282\u70b9\u800c\u4e0d\u662f\u672a\u88ab\u8fde\u63a5\u5728\u4e00\u8d77\u7684\u70b9\uff0c\u6240\u4ee5\u9700\u8981\u628a\u90a3\u4e2a\u70b9\u51cf\u53bb\n\t}\n\treturn 0;\n} \n\n```",
        "postTime": 1564671576,
        "uid": 24812,
        "name": "Sakura_Peng",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1536 \u3010\u6751\u6751\u901a\u3011"
    },
    {
        "content": "\u8bed\u8a00\uff1apas/cpp\n\n\u5c06\u6709\u8def\u76f8\u8fde\u7684\u70b9\u5e76\u5165\u540c\u4e00\u4e2a\u96c6\u4e2d\uff0c\u6700\u540e\u7b97\u6709\u51e0\u4e2a\u70b9\u7684\u7236\u8282\u70b9\u662f\u672c\u8eab\uff0c\n\n##\u8f93\u51fa\u4e2a\u6570\u8981-1\uff0c\u56e0\u4e3an\u4e2a\u70b9\u7684\u6700\u5c0f\u751f\u6210\u6811\u6709n-1\u6761\u8fb9\uff01\n\n\n```pascal\nvar\n i,n,m,x,y,f1,f2,count:longint;\n father:array[0..1010] of longint;\n\nfunction searchfather(v:longint):longint;//\u5bfb\u627e\u7236\u8282\u70b9\n begin\n  if father[v]=v then searchfather:=v//\u7236\u8282\u70b9\u662f\u672c\u8eab\n                 else searchfather:=searchfather(father[v]);\n  father[v]:=searchfather;//\u8def\u5f84\u538b\u7f29\nend;\n\nbegin\n read(n);\n while n<>0 do\n  begin\n   readln(m);\n   for i:=1 to n do father[i]:=i;//\u521d\u59cb\u5316\n\n   for i:=1 to m do\n    begin\n     readln(x,y);\n     f1:=searchfather(x);\n     f2:=searchfather(y);\n     if father[f1]<>father[f2] then father[f1]:=f2;//\u5f53\u5b83\u4eec\u4e0d\u5728\u540c\u4e00\u4e2a\u96c6\u65f6\u5e76\u5165\n    end;\n\n# count:=-1;//\u521d\u503c\u8d4b\u6210-1\uff01\uff01\uff01\n   for i:=1 to n do\n    if father[i]=i then inc(count);//\u8ba1\u6570\u5668\u52a01\n   writeln(count);\n   read(n);\n  end;\nend.\n```\n\n```cpp\n#include<iostream>\nusing namespace std;\nint n,m,x,y,f1,f2,count,father[1010];\n\nint searchfather(int v)//\u5bfb\u627e\u7236\u8282\u70b9\n{\n    if (father[v]==v) return v;//\u7236\u8282\u70b9\u662f\u672c\u8eab\n    else\n    {\n        father[v]=searchfather(father[v]);//\u8def\u5f84\u538b\u7f29\n        return father[v];\n    }\n}\nint main()\n{\n    cin>>n;\n    while(n!=0)\n    {\n        cin>>m;\n        for(int i=1; i<=n; i++) father[i]=i;//\u521d\u59cb\u5316\n        \n        for(int i=1; i<=m; i++)\n        {\n            cin>>x>>y;\n            f1=searchfather(x);\n            f2=searchfather(y);\n            if(father[f1]!=father[f2]) father[f1]=f2;//\u5f53\u5b83\u4eec\u4e0d\u5728\u540c\u4e00\u4e2a\u96c6\u65f6\u5e76\u5165\n        }\n        \n#        count=-1;//\u521d\u503c\u8d4b\u6210-1\uff01\uff01\uff01\n        for(int i=1; i<=n; i++)\n         if(father[i]==i) count++;//\u8ba1\u6570\u5668\u52a01\n        cout<<count<<endl;\n        cin>>n;\n    }\n    return 0;\n}\n```",
        "postTime": 1510036767,
        "uid": 27924,
        "name": "xukuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1536 \u3010\u6751\u6751\u901a\u3011"
    },
    {
        "content": "\u50cf\u8fd9\u79cd\u591a\u4e2a\u6563\u70b9\u7684\u8054\u5408\u5173\u7cfb\u7c7b\u7684\u9898\u76ee\uff0c\n\n\u7528\u5e76\u67e5\u96c6\u5c31\u597d\uff0c\u80fd\u5f88\u5feb\u53c8\u5b8c\u7f8e\u5730\u89e3\u51b3\u6211\u4eec\u7684\u95ee\u9898\u3002\n\n\u8fd9\u9898\u7684\u5e76\u67e5\u96c6\u5c31\u975e\u5e38\u7684\u88f8\u3002\n\n\u67e5\u627e\u5143\u7d20\u6240\u5728\u7684\u96c6\u5408\uff0c\u5373\u6839\u8282\u70b9\u3002\n\n\u5408\u5e76 \u5c06\u4e24\u4e2a\u5143\u7d20\u6240\u5728\u7684\u96c6\u5408\u5408\u5e76\u4e3a\u4e00\u4e2a\u96c6\u5408\u3002\n\n\u901a\u5e38\u6765\u8bf4\uff0c\u5408\u5e76\u4e4b\u524d\uff0c\u5e94\u5148\u5224\u65ad\u4e24\u4e2a\u5143\u7d20\u662f\u5426\u5c5e\u4e8e\u540c\u4e00\u96c6\u5408\uff0c\u8fd9\u53ef\u7528\u4e0a\u9762\u7684\u201c\u67e5\u627e\u201d\u64cd\u4f5c\u5b9e\u73b0\u3002\n\n\u7edf\u8ba1\u8054\u901a\u5757\u7684\u4e2a\u6570\u65f6\u6ca1\u5fc5\u8981\u679a\u4e3e\u554a\uff0c\u5b8c\u5168\u53ef\u4ee5O(1)\u7edf\u8ba1\u51fa\n\n\u7ef4\u62a4\u4e00\u4e2aCNT\uff0c\u8868\u793a\u6b64\u65f6\u7684\u8054\u901a\u5757\u7684\u4e2a\u6570\uff0c\u521d\u59cb\u65f6CNT=N\uff0c \u56e0\u4e3a\u6bcf\u6b21\u8fde\u901a\u64cd\u4f5c\u90fd\u4f1a\u4f7f\u8fde\u901a\u5757\u4e2a\u6570-1\uff0c\u6240\u4ee5\u53ea\u8981\u6bcf\u6b21--CNT\u5c31\u53ef\u4ee5\u4e86\n\n\u6811n-1\u4e2a\u70b9\n\nans\u4e3acnt-1\n\n\n\n```cpp\nvar n,m,i,j,cnt,fx,fy,x,y:longint;\n    f:array[1..1000]of longint;\nfunction father(x:longint):longint;\nbegin\n if f[x]=x then exit(x);\n f[x]:=father(f[x]);\n exit(f[x]);\nend;\nbegin\n readln(n,m);\n cnt:=n;\n for i:=1 to n do f[i]:=i;\n for i:=1 to m do begin\n  readln(x,y);\n  fx:=father(x);\n  fy:=father(y);\n  if fx<>fy then begin\n   dec(cnt);\n   f[fx]:=fy;\n  end;\n end;\n writeln(cnt-1);\nend.\n```",
        "postTime": 1502181440,
        "uid": 16456,
        "name": "ljc20020730",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2839 \u3010\u7545\u901a\u5de5\u7a0b\u3011"
    },
    {
        "content": "\u601d\u8def\u5982\u4e0b\n\n\u8bfb\u5165\u8fb9\u5e76\u5c06\u4ed6\u4eec\u6240\u8fde\u7684\u70b9\u90fd\u7528\u5e76\u67e5\u96c6\u8fde\u8d77\u6765\n\n\u7136\u540e\u67e5\u627efather \u6570\u7ec4 \u5982\u679cfather[i]==i\u5219\u8bf4\u660e\u5b83\u662f\u4ee5\u4ed6\u4e3a\u7236\u8282\u70b9\u8fd9\u4e00\u7247\uff08\u57ce\u5e02\uff09\u533a\u7684\u4e2d\u5fc3\n\n\u6700\u540e\u5c06ans\u4e2a\u4e2d\u5fc3\u8fde\u63a5\u8d77\u6765\u9700\u8981ans-1\u6761\u8def\n\n\u7136\u540e\u5c31\u505a\u5b8c\u4e86\n\n\u5176\u5b9e\u8fd9\u9898\u8ddf\u6700\u5c0f\u751f\u6210\u6811\u6ca1\u5565\u5173\u7cfb \u9664\u975e\u628a\u5b83\u60f3\u6210\u8def\u5f84\u957f\u5ea6\u90fd\u662f\u4e00\u7684\u6700\u5c0f\u751f\u6210\u6811\n\n\u90a3\u4e0d\u5c31\u662f\u5e76\u67e5\u96c6\u4e48\n\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<cstring>\n#include<iostream>\ntemplate <typename T>\nT read(){\n    T num=0,f=1;\n    char ch=getchar();\n    while(!isdigit(ch)){\n        if(ch=='-')    f=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch)){\n        num=num\\*10+ch-'0';\n        ch=getchar();\n    }\n    return num\\*f;\n}\n#define read()    read<long long>()\nint father[500000];\nint find(int x){\n    if(father[x]!=x)    father[x]=find(father[x]);\n    return father[x];\n}\n\nvoid unionn(int x,int y){\n    x=find(x);y=find(y);\n    father[y]=x;\n}\nusing namespace std;\n\nint main(){\n    int n,m,ans=0;\n    while(cin>>n&&n!=0){\n        m=read();\n        for(int i=1;i<=n;++i)\n            father[i]=i;\n        for(int i=1;i<=m;++i){\n            int x=read(),y=read();\n            unionn(x,y);\n        }\n        for(int i=1;i<=n;++i){\n            if(father[i]==i)    ans++;\n        }\n        printf(\">>>>>>>>>>>>%d\\n\",ans-1);\n        ans=0;\n    }\n    return 0;\n}",
        "postTime": 1493188100,
        "uid": 25815,
        "name": "\u5c01\u766b",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1536 \u3010\u6751\u6751\u901a\u3011"
    },
    {
        "content": "\u770b\u89c1\u5404\u8def\u5927\u795e\u90fd\u5199\u7684\u5e76\u67e5\u96c6\u7684\u4ee3\u7801\n\n\u6211\u51b3\u5b9a\u6572\u4e00\u4e2a\u9012\u5f52\u6765\u6c34\u4e00\u6c34\u3002\u6bd5\u7adf\u6280\u672f\u542b\u91cf\u5f88\u5c11\uff08\u5176\u5b9e\u662f\u81ea\u5df1\u60f3\u5199\u4e00\u4e2a\u65b0\u578b\u7684\u5e76\u67e5\u96c6  \u7ed3\u679cgg\u4e86****/\u5bb3\u7f9e****\uff09\n\n\n\u601d\u8def\uff1a\n\n\u7ecf\u8fc7\u9898\u76ee\u7684\u8def\u5f84\u8fde\u901a\u540e \u5fc5\u7136\u4f1a\u4ea7\u751f****>=1****\u7684\u7247\u56fe\uff08\u5373\u76f8\u4e92\u72ec\u7acb\u7684\u56fe\uff09\u3002\u800c\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u8bb2\u8fd9\u4e9b\u7247\u56fe\u8fde\u63a5\u8d77\u6765  ****\u5982\u679c\u5c06\u6bcf\u4e2a\u7247\u56fe\u90fd\u770b\u4f5c\u4e00\u4e2a\u96c6\u5408\u7684\u8bdd  \u5176\u5b9e\u5c31\u662f\u7ed9 n \u4e2a\u70b9\u8fde\u7ebf****  \u5f53\u7136\u7b54\u6848\u5c31\u662fn-1\u4e86\n\n\n\u6240\u4ee5\u6211\u5c31\u641e\u4e86\u4e2a\u9012\u5f52\u7684\u505a\u6cd5 \u7c7b\u4f3c\u4e8e\u8fde\u901a\u5757\uff08\u591a\u4e8f\u6570\u636e\u8303\u56f4\u5c0f\uff09\n\n\n\u4e0a\u4ee3\u7801\uff1a\uff08\u6b22\u8fce\u8bc4\u8bba\u4ea4\u6d41\uff09\n\n\u00b7\u00b7\u00b7cpp\n\n        \n```cpp\n#define MAXN 1005\nbool road[MAXN];\nint Map[MAXN][MAXN];\nint n,m;\nvoid dfs(int x)\n{\n    road[x]=false;\n    for(int i=1;i<=n;i++)\n        if(road[i]&&Map[x][i])\n            dfs(i);\n}\nint main() {\n#ifdef LOCAL\n    freopen(\"sample.in\", \"r\", stdin);\n#endif\n    //ios::sync_with_stdio(false);\n    while(scanf(\"%d\",&n),n)\n    {   \n        scanf(\"%d\",&m);\n        int a,b;\n        memset(Map,0,sizeof(Map));//\u591a\u7ec4\u6d4b\u8bd5\u8fd8\u662f\u8981\u8bb0\u4f4f  \u4ea4\u9898\u65f6\u50bb\u903c\u4e86\u4e00\u6b21\n        memset(road,true,sizeof(road));\n        for(int i=0;i<m;i++)\n        {\n            scanf(\"%d%d\",&a,&b);\n            Map[a][b]=1;Map[b][a]=1;\n        }\n        int ans=0;\n        for(int i=1;i<=n;i++)\n        {\n            if(road[i])\n            {\n                ans++;//\u56e0\u4e3a\u662f\u5b9e\u65f6\u66f4\u65b0\u8bbf\u95ee\u70b9  \u53ef\u4ee5\u76f4\u63a5\u5bf9\u7b54\u6848\u505a\u51fa\u8d21\u732e\n                dfs(i);\n            }\n        }\n        cout<<ans-1<<endl;\n    }\n    return 0;\n}\n```\n/\\* \u5206\u5272\u7ebffrom DDullahan\n\\* \u4ee3\u7801\u5c11\u590d\u5236\u7ec8\u7ed3\u8005\\*/\n\n\nps\uff1a KEKE \u5305\u4f6c\u771f\u662f\u592a\u53ef\u7231\u4e86\n",
        "postTime": 1491453391,
        "uid": 33548,
        "name": "DDullahan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1536 \u3010\u6751\u6751\u901a\u3011"
    },
    {
        "content": "\u88f8\u7684\u5e76\u67e5\u96c6\u3002\n\n\u7531\u4e8e\u9898\u76ee\u4e2d\u8bf4\u201c\u662f\u4f7f\u5168\u5e02\u4efb\u4f55\u4e24\u4e2a\u57ce\u9547\u95f4\u90fd\u53ef\u4ee5\u5b9e\u73b0\u4ea4\u901a\uff08\u4f46\u4e0d\u4e00\u5b9a\u6709\u76f4\u63a5\u7684\u9053\u8def\u76f8\u8fde\uff0c\u53ea\u8981\u76f8\u4e92\u4e4b\u95f4\u53ef\u8fbe\u5373\u53ef\u201d\uff0c\u6240\u4ee5\u53ef\u4ee5\u770b\u51fa\u662f\u5e76\u67e5\u96c6\u3002\n\n\u601d\u8def\uff1a\n\n\u5148\u8bfb\u5165N\u3002\n\n\u7136\u540e\uff0c\u7528\u4e00\u4e2awhile\u5faa\u73af\uff0c\u5faa\u73af\u7684\u6761\u4ef6\u662fn!=0\uff0c\u5373\u9898\u76ee\u4e2d\u8bf4\u7684\u6761\u4ef6\u3002\n\n```cpp\n    while (n!=0)\n    {\n        ans=0;\n        scanf(\"%d\",&m);\n        for (i=1;i<=n;i++)             //\u521d\u59cb\u5316\uff0c\u5b66\u8fc7\u5e76\u67e5\u96c6\u7684\u5e94\u8be5\u90fd\u770b\u5f97\u61c2\u3002\n        {\n            pre[i]=i;\n        }\n        for (i=1;i<=m;i++)\n        {\n            cin>>a1>>a2;\n            join(a1,a2);         //\u5c06\u7ed9\u51fa\u7684a1\u548ca2\uff08\u5df2\u7ecf\u6709\u8def\u7684\u6751\u5b50\uff09\u8fde\u8d77\u6765\u3002\n        }\n```\n\u5176\u4e2d\uff0cjoin\u7684\u5177\u4f53\u6b65\u9aa4\u662f\u8fd9\u6837\uff1a\n```cpp\nint sch(int x)\n{\n    if (pre[x]==x) return pre[x];       //\u641c\u7d22\u6bcf\u4e00\u4e2a\u6751\u5e84\u7684\u7956\u5148\uff0c\u8fd4\u56de\u503c\u662f\u5b83\u7684\u7956\u5148\u7684\u503c\u3002\n    pre[x]=sch(pre[x]);\n    return pre[x];\n}\nvoid join(int x,int y)\n{\n    if (sch(x)!=sch(y))        //\u5982\u679c\u4e24\u4e2a\u6751\u5b50\u7684\u7956\u5148\u4e0d\u4e00\u6837\uff0c\u8bf4\u660e\u5b83\u4eec\u6ca1\u6709\u8fde\u5728\u4e00\u8d77\u3002\n    {\n        ans++;                 //\u90a3\u4e48\u5df2\u7ecf\u4fee\u4e86\u7684\u8def\u5c31\u589e\u52a0\u3002\n        pre[sch(x)]=sch(y);    //\u8fde\u8d77\u6765\u3002\n    }\n}\n```\n\u6700\u540e\u8f93\u51faans\u5c31\u53ef\u4ee5\u4e86\u3002\n\u7a0b\u5e8f\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint ans,i,n,m,a1,a2,pre[10000];\nint sch(int x)\n{\n    if (pre[x]==x) return pre[x];\n    pre[x]=sch(pre[x]);\n    return pre[x];\n}\nvoid join(int x,int y)\n{\n    if (sch(x)!=sch(y))\n    {\n        ans++;\n        pre[sch(x)]=sch(y);\n    }\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    while (n!=0)\n    {\n        ans=0;\n        scanf(\"%d\",&m);\n        for (i=1;i<=n;i++)\n        {\n            pre[i]=i;\n        }\n        for (i=1;i<=m;i++)\n        {\n            cin>>a1>>a2;\n            join(a1,a2);\n        }\n        ans=n-ans-1;             //\u603b\u6570n\u51cf\u53bb\u5df2\u7ecf\u4fee\u4e86\u7684\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u8fd8\u9700\u8981\u4fee\u7684\u3002\n        printf(\"%d\\n\",ans);      //\u8f93\u51fa\n        cin>>n;            //\u518d\u6b21\u8bfb\u5165n\n    }\n}\n```",
        "postTime": 1482320430,
        "uid": 12613,
        "name": "PTC06",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1536 \u3010\u6751\u6751\u901a\u3011"
    },
    {
        "content": "        \n```cpp\n//\u770b\u4e86\u697c\u4e0b\u7684\u9898\u89e3\u611f\u89c9\u81ea\u5df1\u662f\u4e2a\u849f\u84bb\u3002\u3002\u3002\n//\u6700\u540e\u5904\u7406\u7b54\u6848\u65f6\uff0c\u6211\u679a\u4e3e\u6bcf\u4e2a\u70b9\uff0c\u770b\u4ed6\u4e0e\u5176\u4ed6\u70b9\u662f\u5426\u8054\u901a\uff0c\u5982\u679c\u4e0d\u8fde\u901a\u5c31\u5408\u5e76\uff0c\u8bb0\u5f55\u7b54\u6848\n//\u611f\u89c9\u6709\u70b9\u5f31\u3002\u3002\u3002\n#include<iostream>\n#include<cstdlib>\n#include<cmath>\n#include<cstring>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint f[1005],ans;\nint find(int x)\n{\n    if(f[x]!=x)\n    f[x]=find(f[x]);\n    return f[x];\n}\nvoid UN(int x,int y)\n{\n    int a=find(x);\n    int b=find(y);\n    f[a]=b;\n}\nint Read()\n{\n    int num(0);\n    int flag(0);\n    char a;\n    while(!isdigit(a=getchar())&&a!='-');\n    if(a=='-')\n    flag=1;\n    else\n    num=a-'0';\n    while(isdigit(a=getchar()))\n    {\n        num=num*10+a-'0';\n    }\n    if(flag)return num*-1;\n    return num;\n}\nint n,m;\nvoid handle()\n{\n    n=Read();m=Read();\n    for(int i=1;i<=n;i++)\n    f[i]=i;\n    for(int i=1;i<=m;i++)\n    {\n        int x,y;\n        x=Read();\n        y=Read();\n        UN(x,y);\n    }\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=n;j++)\n        {\n            int now=find(i);\n            int now2=find(j);\n            if(now!=now2)\n            {\n                ans++;\n                UN(i,j);\n            }\n        }\n    }\n    printf(\"%d\\n\",ans);\n    return ;\n}\nint main()\n{\n    handle();\n    return 0;\n}\n```\n/\\*\n3 3\n1 2\n1 2\n2 1\n\\*/",
        "postTime": 1479303160,
        "uid": 12005,
        "name": "zclzslz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2839 \u3010\u7545\u901a\u5de5\u7a0b\u3011"
    },
    {
        "content": "\u53d1\u4e00\u4e2a\u7b80\u5355\u7684\uff0c\u5927\u5bb6\u90fd\u80fd\u770b\u61c2\u7684\n\n```cpp\n#include <iostream>\nusing namespace std;\nint f[1001];\nint getf(int x)//\u7ecf\u5178\u7684\u9012\u5f52\u627e\u7239+\u8def\u5f84\u538b\u7f29\n{\n    return f[x]==x?x:f[x]=getf(f[x]);\n}\nint main()\n{\n    int n,m,t1,t2,ans=-1;//\u4e3a\u4ec0\u4e48ans=-1\u5462\uff1f\n    cin >> n >> m;\n    for(int i=1;i<=n;i++)//\u5e76\u67e5\u96c6\u521d\u59cb\u5316\n        f[i]=i;\n    for(int i=1;i<=m;i++)\n    {\n        cin >> t1 >> t2;//\u8bfb\u5165\n        f[getf(t1)]=getf(t2);//\u5408\u5e76\u5e76\u67e5\u96c6\n    }\n    for(int i=1;i<=n;i++)\n        if(f[i]==i)ans++;//\u5982\u679c\u67d0\u4e00\u4e2a\u8282\u70b9\u7684\u7236\u4eb2\u662f\u81ea\u5df1\uff0c\u8bf4\u660e\u4ed6\u5e26\u9886\u4e86\u4e00\u4e2a\u8fde\u901a\u5757\u513f\n    cout << ans << endl;\n    return 0;\n}\n```",
        "postTime": 1473228331,
        "uid": 13091,
        "name": "ghj1222",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2839 \u3010\u7545\u901a\u5de5\u7a0b\u3011"
    },
    {
        "content": "\u53d1\u4e00\u4e2aCPP\u7684\n\n```cpp\n#include<cstdio>\n#include<vector>\nusing namespace std;\nint n,m;\nint father[1010];                            \u8868\u793a\u7236\u8282\u70b9\nint a,b;\nvector<int> fa;\nint findfa(int u){                            \u5bfb\u627e\u4e00\u4e2a\u8282\u70b9\u7684\u6839\n    while(father[u]!=u){\n        u=father[u];\n    }\n    return u;\n}\nvoid comb(int x,int y){                        \u5c06\u4e24\u4e2a\u5e76\u67e5\u96c6\u5408\u5e76\n    father[findfa(y)]=findfa(x);\n}\nint main(){\n    int i,j;\n    bool dif;\n    scanf(\"%d%d\",&n,&m);\n    for(i=1;i<=n;i++){\n        father[i]=i;                        \u521d\u59cb\u5316\uff1a\u6bcf\u4e2a\u8282\u70b9\u90fd\u662f\u4e00\u4e2a\u5e76\u67e5\u96c6\n    }\n    for(i=1;i<=m;i++){\n        scanf(\"%d%d\",&a,&b);                \u8bfb\u5165\u8fb9\n        comb(a,b);                        \u5c06\u8fb9\u4e24\u8fb9\u7684\u8282\u70b9\u6240\u5c5e\u5e76\u67e5\u96c6\u5408\u5e76\n    }\n    for(i=1;i<=n;i++){                        \u8bb0\u5f55\u5e76\u67e5\u96c6\u603b\u6570\n        dif=true;\n        for(j=0;j<fa.size();j++){\n            if(fa[j]==findfa(i)){\n                dif=false;\n                break;\n            }\n        }\n        if(dif){\n            fa.push_back(findfa(i));\n        }\n    }\n    printf(\"%d\\n\",fa.size()-1);                \u8fde\u63a5\u6240\u6709\u5e76\u67e5\u96c6\u9700\u8981\u7684\u8fb9\u6570\n    return 0;\n}\n```",
        "postTime": 1472285034,
        "uid": 21903,
        "name": "vegetabird",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2839 \u3010\u7545\u901a\u5de5\u7a0b\u3011"
    },
    {
        "content": "```cpp\nvar\n  father:array[1..1000]of longint;\n    i,j,n,q,ans,x,y:longint;\nfunction search(x:longint):longint;//\u5bfb\u627e\u7236\u8282\u70b9\nbegin\n  if father[x]<>x then father[x]:=search(father[x]);\n  exit(father[x]);\nend;\nprocedure judge(x,y:longint);//\u5408\u5e76\nvar a,b:longint;\nbegin\n  a:=search(x); b:=search(y);\n  if a<>b then father[b]:=a;\nend;\nbegin\n  readln(n,q);\n    for i:=1 to n do father[i]:=i;\n    for i:=1 to q do begin\n      readln(x,y);\n        judge(x,y);//\u5e76\u67e5\u96c6\u7684\u57fa\u672c\u64cd\u4f5c\uff0c\u6211\u61d2\u5f97\u8bf4\u4e86\n    end;\n    ans:=0;\n    for i:=1 to n do\n      if father[i]=i then inc(ans);//\u53d1\u73b0\u5b64\u70b9\n    write(ans-1);\nend.\n```",
        "postTime": 1472136354,
        "uid": 3116,
        "name": "\u98de\u7fd4",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2839 \u3010\u7545\u901a\u5de5\u7a0b\u3011"
    },
    {
        "content": "\u653epas\u4ee3\u7801\u3002\n\n\u5e76\u67e5\u96c6\u7684\u7b80\u5355\u9898\u3002\n\n```cpp\nvar i,n,m,x,y,a,b,ans:longint;\nfa:array [1..1000] of longint;\nfunction ask(x:longint):longint;\nbegin\n  if fa[x]=x then exit(fa[x]);\n  fa[x]:=ask(fa[x]);\n  exit(fa[x]);\nend;\nbegin\n  read(n);\n  while n>0 do\n  begin\n    read(m);\n    for i:=1 to n do\n    fa[i]:=i;//\u6bcf\u7ec4\u6570\u636e\u5148\u6e05\u7a7a\n    for i:=1 to m do\n    begin\n      read(x,y);\n      a:=ask(x);\n      b:=ask(y);\n      if a<>b then fa[a]:=b;//\u6709\u8fb9\u76f8\u8fde\uff0c\u540c\u4e00\u96c6\u5408\n    end;\n    for i:=1 to n do\n    if ask(i)=i then inc(ans);//\u7edf\u8ba1\u96c6\u5408\u4e2a\u6570\n    writeln(\u2018sbsbsb\u2019);//\u6709\u51e0\u4e2a\u96c6\u5408\uff0c\u5c31\u53ea\u8981***\u6761\u8fb9\u4fbf\u53ef\u8054\u901a\n    ans:=0;\n    read(n);\n  end;\nend.\n```",
        "postTime": 1471571203,
        "uid": 13940,
        "name": "pupuvovovovovo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1536 \u3010\u6751\u6751\u901a\u3011"
    },
    {
        "content": "\u6c42\u51fa\u8fd9\u4e2a\u65e0\u5411\u56fe\u8054\u901a\u5206\u91cf\u7684\u4e2a\u6570\uff0c\u518d-1\u5c31\u662f\u7b54\u6848\uff08\u5c06\u6240\u6709\u8054\u901a\u5206\u91cf\u7528\u8fb9\u8fde\u63a5\u5728\u4e00\u8d77\uff09\u3002\n\n\u6c42\u8054\u901a\u5206\u91cf\u4e2a\u6570\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u6765\u6c42\n",
        "postTime": 1440420054,
        "uid": 3182,
        "name": "Created_equal1",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1536 \u3010\u6751\u6751\u901a\u3011"
    },
    {
        "content": "`\n\u5927\u4f6c\u4eec\u90fd\u5199\u5f97\u5982\u6b64** \u8be6\u7ec6**\uff0c\u5728\u4e0b\u4e00\u540d\u849f\u84bb\uff0c\u53ea\u80fd\u6839\u636e\u81ea\u5df1\u7684\u7406\u89e3\u6765\u5199\u9898\u89e3\uff0c\u6240\u4ee5\u663e\u5f97\u6709\u4e9b\u4e0d\u4e13\u4e1a\uff0c\u8bf7\u591a\u591a\u6307\u6559\n------------\n\n\n\n```\n\u4f18\u5316\uff1a\n     while(lx != cx)   //\u8def\u5f84\u538b\u7f29\n    {\n         sum = fa[lx];//\u5728\u6539\u53d8\u4e0a\u4e00\u4e2a\u70b9\u4e4b\u524d\u7528sum\u8bb0\u5f55\u4e0b\u4ed6\u7684\u503c \n         fa[lx]= cx ; //\u628a\u4e0a\u4e00\u4e2a\u70b9\u6539\u4e3a\u6839\u8282\u70b9\n         lx = sum;\n     }\n_______________________________//\u5206\u5272\u7ebf\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\nusing namespace std;\nint fa[1001],n,t,m,a,b,ans = 0,vis[1001];\nint find(int x)//\u5e76\u67e5\u96c6\u6838\u5fc3\uff0c\u627e\u6839\u8282\u70b9\n{\n\tint cx = x;\n\twhile(cx != fa[cx]) cx = fa[cx];//\u5982\u679c\u81ea\u5df1\u4e0d\u662f\u6839\u8282\u70b9\u5c31\u4e00\u76f4\u627e\u76f4\u5230\u627e\u5230\u4e3a\u6b62 \n\treturn cx;\n\tint sum,lx = x;\n    while(lx != cx)   //\u8def\u5f84\u538b\u7f29\n    {\n         sum = fa[lx];//\u5728\u6539\u53d8\u4e0a\u4e00\u4e2a\u70b9\u4e4b\u524d\u7528sum\u8bb0\u5f55\u4e0b\u4ed6\u7684\u503c \n         fa[lx]= cx ; //\u628a\u4e0a\u4e00\u4e2a\u70b9\u6539\u4e3a\u6839\u8282\u70b9\n         lx = sum;\n    }\n}\nvoid mix(int a,int b)//\u5408\u5e76 \n{\n\tint aa,bb;\n\taa = find(a);//aa\u4e3aa\u7684\u6839\u8282\u70b9 \n\tbb = find(b);//\u540c\u4e0a \n\tif(aa != bb)//\u5982\u679c\u4e24\u4e2a\u7684\u6839\u8282\u70b9\u4e0d\u540c \n\tfa[bb] = aa;//\u90a3\u5c31\u53ea\u597d\u8ba9aa\u4f5cbb\u7684\u7236\u4eb2\uff0c\u6709\u70b9\u2014\u2014\u2014\u2014 \n}\nint main()\n{\n\twhile(scanf(\"%d%d\",&n,&m) != EOF && n != 0)//\u8f93\u5165 \n\t{\n\t\tfor(int i = 1;i <= n;i++)\n\t\tfa[i] = i;//\u521d\u59cb\u5316\uff0c\u4e00\u5f00\u59cb\u6bcf\u4e2a\u4eba\u7684\u7236\u4eb2\u90fd\u662f\u81ea\u5df1 \n\t\tfor(int i = 1;i <= m;i++)\n\t\t{\n\t\t\tscanf(\"%d%d\",&a,&b);\n\t\t\tmix(a,b);//\u5408\u5e76\u8fd9\u4e24\u4e2a\u70b9 \n\t\t}\t\n\t\tmemset(vis,0,sizeof vis);//\u56e0\u4e3a\u6709\u591a\u7ec4\u6570\u636e\uff0c\u6bcf\u6b21\u90fd\u8981\u521d\u59cb\u5316 \n\t\tfor(int i = 1;i <= n;i++)\n\t\t{\n\t\t\tvis[find(i)] = 1;//vis[i] = 1\uff0c\u56e0\u4e3a\u4e0ei\u6709\u5173\u7cfb\u7684\u70b9\u4e4b\u95f4\u90fd\u6709\u8def\u53ef\u901a\uff0c\u5c31\u4e0d\u9700\u8981\u518d\u4fee\u8def\u4e86 \n\t\t}\n\t\tans = 0;//\u4e00\u5b9a\u8bb0\u5f97\u521d\u59cb\u5316\uff0c\u6211\u4e00\u5f00\u59cb\u5fd8\u4e86 \n\t\tfor(int i = 1;i <= n;i++)\n\t\tif(vis[i] != 0) ans++;//\u53d1\u73b0\u4e00\u4e2a\u6ca1\u6709\u70b9\u4e0e\u4ed6\u8fde\u63a5\u7684\u70b9\uff0cans++ \n\t\tprintf(\"%d\\n\",ans - 1);//\u5343\u4e07\u83ab\u5fd8\u8bb0\uff0c\u8fb9 = \u70b9 - 1\uff1b \n\t}\n\treturn 0;\n}\n```\n```",
        "postTime": 1542602378,
        "uid": 56594,
        "name": "tzj666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1536 \u3010\u6751\u6751\u901a\u3011"
    },
    {
        "content": "\u770b\u89c1\u9760\u591a\u4eba\u90fd\u7528\u6700\u5c0f\u751f\u6210\u6811\uff0c\u5c45\u7136\u8fd8\u6709\u7528\u6df1\u641c\u7684\u5927\u4f6c\uff0c\u6211\u4e00\u4e2a\u53ea\u7528\u4e86\u5e76\u67e5\u96c6\u5c31AC\u7684\u849f\u84bb\u7a81\u7136\u60f3\u79c0\u4e00\u79c0\u2026\u2026\n\n```cpp\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934\u6587\u4ef6\nusing namespace std;\nint f[20001];//\u5e76\u67e5\u96c6\u6570\u7ec4\nint ans;//\u8f93\u51fa\nint find(int x)//\u4f1a\u5e76\u67e5\u96c6\u7684\u90fd\u77e5\u9053\u7684find\u51fd\u6570\n{\n    return f[x]==x?x:f[x]=find(f[x]);//\u8def\u5f84\u538b\u7f29\n}\nint main()\n{\n    int n,m;\n    int x,y;\n    while(1)\n    {\n        scanf(\"%d\",&n);//\u8f93\u5165\u57ce\u9547\u6570\u76ee\n        if(n==0)return 0;//\u82e5\u57ce\u9547\u6570\u76ee\u4e3a0\u5219\u4f1a\u8df3\u51fa\u5faa\u73af\n        scanf(\"%d\",&m);//\u8f93\u5165\u9053\u8def\u6570\u76ee\n        for(int i=1;i<=n;i++)\n            f[i]=i;//\u521d\u59cb\u5316\n        for(int i=1;i<=m;i++)\n        {\n            scanf(\"%d%d\",&x,&y);\n            f[find(x)]=find(y);//\u627e\u51fa\u6bcf\u4e00\u4e2a\u70b9\u7684\u6839\n        }\n        for(int i=1;i<=n;i++)\n            f[i]=find(i);//\u518d\u626b\u4e00\u904d\u6839\uff0c\u907f\u514d\u51fa\u73b0\u50cf\u6837\u4f8b\u7684\u7b2c\u4e8c\u7ec4\u6570\u636e\u51fa\u73b0\u7684\u60c5\u51b5\n        sort(f+1,f+n+1);//\u5229\u7528sort\u5c06\u8ddf\u662f\u4e00\u6837\u7684\u6570\u653e\u5230\u4e00\u8d77\n        for(int i=2;i<=n;i++)\n            if(f[i]!=f[i-1])ans++;//\u82e5\u76f8\u90bb\u4e24\u4e2a\u6570\u4e0d\u4e00\u6837\u7684\u8bdd\u8868\u793a\u8fd9\u4e24\u4e2a\u6570\u7684\u8ddf\u4e0d\u4e00\u6837\n        cout<<ans<<endl;//\u8f93\u51fa\n        ans=0;\n    }\n    return 0;\n}\n```",
        "postTime": 1534644907,
        "uid": 93488,
        "name": "Porsche",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1536 \u3010\u6751\u6751\u901a\u3011"
    },
    {
        "content": "\u672c\u4eba\u4f7f\u7528kruskal\u7b97\u6cd5\u3002\u3002\u3002\u7531\u4e8ekruskal\u57fa\u4e8e\u5e76\u67e5\u96c6\u3002\u3002\u3002\u6240\u4ee5\u5c31\u5f53\u662f\u4e00\u4e0b\u7ec3\u4e60\u4e86\u4e24\u6b21\uff1b\n\n\u5148krusal\u6c42\u51fa\u8054\u901a\u7684\u8fb9\u3002\u3002\u3002\u5982\u679c\u7b49\u4e8e\u70b9\u7684\u603b\u6570\u51cf\u4e00\uff08n-1\uff09\uff0c\n\n\u4e5f\u5c31\u662f\u8bf4\u5168\u90e8\u8fde\u901a\uff08\u56e0\u4e3a\u4e24\u70b9\u4e4b\u95f4\u6709\u4e00\u6761\u8fb9\uff0cn\u4e2a\u70b9\u4e4b\u95f4\u6709n-1\u6761\u8fb9\uff09\uff1b\u5982\u679c\u4e0d\u5168\u90e8\u8fde\u901a\uff0cn-1\u51cf\u53bb\u8054\u901a\u7684\u8fb9\u6811\u5c31\u662f\u5269\u4e0b\u9700\u8981\u7684\u8fb9\u6570\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int maxn=200005;\nint n,m;\nint father[maxn],sum,cnt;\nstruct node\n{\n    int u;\n    int v;\n    int val;\n}edge[maxn];\nint find(int v)//\u5e76\u67e5\u96c6\u5bfb\u627e\u516c\u5171\u7956\u5148\u7684\u51fd\u6570\n{\n    if(father[v]==v)\n        return v;\n    else\n    {\n        //\u8def\u5f84\u538b\u7f29\n        father[v]=find(father[v]);\n        return father[v];\n    }\n}\nbool join(int v,int u)\n{\n    int x,y;\n    x=find(v);\n    y=find(u);\n    if(x!=y)\n    {\n        father[y]=x;\n        return true;\n    }\n    return false;\n}\n//\u5408\u5e76\u4e24\u4e2a\u5e76\u67e5\u96c6*/\n//\u6309\u7167\u6743\u503cw\u4ece\u5c0f\u5230\u5927\u5c06\u7ed3\u6784\u4f53\u6392\u5e8f\nbool operator < (node a,node b)\n{\n    return a.val < b.val;\n}\n/*bool cmp(node a,node b)\n{\n    return a.val<b.val;\n}*/\nint main()\n{\n    scanf(\"%d %d\",&n,&m);\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d %d\",&edge[i].u,&edge[i].v);\n    }\n    sort(edge+1,edge+m+1);\n    //\u5e76\u67e5\u96c6\u521d\u59cb\u5316\n    for(int i=1;i<=n;i++)\n    {\n        father[i]=i;\n    }\n    //kruskal\u7b97\u6cd5\n    for(int i=1;i<=m;i++)\n    {\n        if(join(edge[i].u,edge[i].v))\n        {\n            cnt++;\n        }\n        if(cnt==n-1)\n        {\n            cout<<0;//\u5982\u679c\u8fb9\u6570\u7b49\u4e8en-1\uff0c\u5219\u4e0d\u9700\u8981\u52a0\u8fb9 \n            return 0;\n        }\n    }\n    cout<<n-1-cnt;//\u5426\u5219\u8f93\u51fa\u8fd8\u9700\u8981\u591a\u5c11\u6761\u8fb9 \n    return 0;\n}\n```",
        "postTime": 1507896307,
        "uid": 33266,
        "name": "Ash1mar",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2839 \u3010\u7545\u901a\u5de5\u7a0b\u3011"
    },
    {
        "content": "\u8fd9\u4e00\u9898\u5f88\u6c34\u8d85\u7ea7\u6c34\uff0c\u51e0\u4e4e\u662f\u5e76\u67e5\u96c6\u6a21\u677f\uff0c\u672c\u4eba\u4e5f\u5f88\u5f31\u9e21\uff0c\u8fde\u7279\u5224\u90fd\u5199\u9519\u4e86\uff08n\u5199\u6210\u4e86m\uff09\uff0c\u6211\u4e5f\u662f\u9189\u4e86\uff0c\u4e00\u6012\u4e4b\u4e0b\u5220\u4e86\u7279\u5224\u624d\u8fc7\u5f97\uff0c\u540e\u6765\u770b\u4e86\u697c\u4e0bdalao\u7684\u624d\u53d1\u73b0\u9519\u4e86\uff1b\n\n\u8fd9\u4e00\u9898\u662f\u7528\u8def\u5f84\u538b\u7f29\u4f18\u5316\u89e3\u7684\uff0c\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u672c\u849f\u84bb\u592a\u83dc\u4e86\uff0c\u7ec6\u8282\u6ca1\u6ce8\u610f\u54ce\uff0c\n\n\u4ee5\u4e0b\u662f\u6211\u7684\u4ee3\u7801\uff0c\u4ec5\u4f9b\u53c2\u8003\uff0c\u4e0d\u8981\u6284\u88ad\uff0c\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\n#define maxn 20001\nint father[maxn];\nint n,m,i,x,y,ans=0;\nint find(int x)//\u5bfb\u627e\u6839\u7ed3\u70b9\u7f16\u53f7\u5e76\u538b\u7f29\u8def\u5f84\n{\n    if(father[x]!=x) father[x]=find(father[x]);//\u8def\u5f84\u538b\u7f29\uff0c\u4f18\u5316\u7684\u6838\u5fc3\n    return father[x];\n}\nvoid unionn(int r1,int r2)//\u5408\u5e76\u4e24\u4e2a\u96c6\u5408\n{\n    father[r2]=r1;\n}\nint main()\n{\n    cin>>n>>m;\n    for(i=1;i<=n;i++)\n        father[i]=i;//\u5efa\u7acb\u65b0\u7684\u96c6\u5408\uff0c\u5176\u4ec5\u6709\u7684\u6210\u5458\u662fi\uff1b\n    for(i=1;i<=m;i++)\n     {\n         scanf(\"%d%d\",&x,&y);\n            int r1=find(x);\n        int r2=find(y);\n        if(r1!=r2) unionn(r1,r2);//\u5224\u65ad\u5143\u7d20\u662f\u5426\u5728\u540c\u4e00\u96c6\u5408\u4e2d\uff1b\n     }\n    for(int j=1;j<=n;j++)\n    {\n        if(father[j]==j) ans++;\n```\n}//\u8bb0\u5f55\uff0c\u8def\u8d8a\u591a\uff0cans\u5c31\u4f1a\u8d8a\u5c11\uff0c\u6240\u9700\u65b0\u5efa\u7684\u8def\u5c31\u8d8a\u5c11\uff0c\n    cout<<ans-1;//\u8fd9\u91cc-1\u77e5\u9053\u5427\uff0c\u6211\u5c31\u4e0d\u591a\u8bf4\u4e86\n\n    return 0;\n\n}\n//\u6700\u540e\u8bf4\u4e00\u53e5\uff0c\u548c\u672c\u849f\u84bb\u4e00\u6837\u7684\u83dc\u9e1f\u4eec\u52a0\u6cb9\uff0cnoip\u5c31\u8981\u5f00\u59cb\u4e86\uff0c\u53ea\u6709\u51e0\u5341\u5929\u4e86\uff0c\u7559\u7ed9\u6211\u4eec\u7684\u65f6\u95f4\u4e0d\u591a\u4e86\uff0c\u597d\u597d\u505a\u9898\uff0c\u597d\u597d\u5237\u9898\uff0c\u5b9d\u5251\u950b\u4ece\u78e8\u783a\u51fa\uff0c\u6885\u82b1\u9999\u81ea\u82e6\u5bd2\u6765\uff0c\u52aa\u529b\u4e86\u5c31\u4f1a\u6709\u56de\u62a5\u7684\uff0c\n",
        "postTime": 1503648792,
        "uid": 50269,
        "name": "\u9f98\u9f98\u9f98\u9f98\u9f98\u9f98",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2839 \u3010\u7545\u901a\u5de5\u7a0b\u3011"
    },
    {
        "content": "\u50cf\u8fd9\u79cd\u591a\u4e2a\u6563\u70b9\u7684\u8054\u5408\u5173\u7cfb\u7c7b\u7684\u9898\u76ee\uff0c\u7528\u5e76\u67e5\u96c6\u5c31\u597d\uff0c\u80fd\u5f88\u5feb\u53c8\u5b8c\u7f8e\u5730\u89e3\u51b3\u6211\u4eec\u7684\u95ee\u9898\u3002\u8fd9\u9898\u7684\u5e76\u67e5\u96c6\u5c31\u975e\u5e38\u7684\u88f8\u3002\n\n\u5e76\u67e5\u96c6\u7684\u505a\u6cd5\u5f88\u7b80\u5355\uff0c\u4e5f\u548c\u4e0b\u9762\u7684\u9898\u89e3\u5dee\u4e0d\u591a\uff0c\u8fd9\u91cc\u5c31\u4e0d\u63d0\u4e86\u3002\u4f46\u6700\u540e\u4e0e\u4e0b\u9762\u7684\u9898\u89e3\u505a\u6cd5\u4e0d\u540c\u3002\u6700\u540e\u6c42\u7b54\u6848\u7684\u65b9\u5f0f\uff0c\u6211\u662f\u4f7f\u7528 STL \u4e2d\u7684\u5bb9\u5668 set\uff0c\u7531\u4e8e\u4e00\u5f00\u59cb set \u5c31\u662f\u7a7a\u7684\uff0c\u5f97\u5230\u6bcf\u4e2a\u57ce\u5e02\u7684\u6700\u7ec8\u7684\u4e0a\u7ea7\uff0c\u4e5f\u5c31\u662f\u8001\u5927\u65f6\uff0c\u6211\u4eec\u5c06\u6bcf\u4e2a\u57ce\u5e02\u7684\u8001\u5927\u7f16\u53f7\u90fd\u6295\u5165 set \u91cc\u53bb\uff0c\u4f9d\u8d56 set \u7684\u53bb\u91cd\u6765\u5f97\u51fa\u7b54\u6848\u3002\u8fd9\u6837\u505a\u7684\u539f\u7406\u662f\u6bcf\u4e2a\u6751\u5e84\u4fee\u5b8c\u516c\u8def\u540e\u53ef\u80fd\u4e0d\u662f\u4e2a\u8fde\u901a\u56fe\uff0c\u800c\u662f\u5206\u6210\u597d\u51e0\u4e2a\u8fde\u901a\u56fe\uff0c\u4f46\u5206\u6563\u7684\u8fde\u901a\u56fe\u7684\u8001\u5927\u662f\u4e00\u6837\u7684\uff0c\u8001\u5927\u7684\u6570\u76ee\u5c31\u662f\u5206\u6563\u7684\u8fde\u901a\u56fe\u7684\u6570\u76ee\u3002\u60f3\u8981\u8fde\u63a5\u5404\u4e2a\u5206\u6563\u7684\u56fe\uff0c\u4ec5\u9700\u8981 \u56fe\u7684\u6570\u91cf \u51cf\u53bb\u4e00 \u6761\u8fb9\uff0c\u4e5f\u5c31\u662f\u516c\u8def\u3002\u8fd0\u7528\u4e0a\u9762\u4f7f\u7528 set \u7684\u65b9\u6cd5\u6c42\u51fa\u8001\u5927\u7684\u6570\u76ee\uff0c\u53e6\u5916\u518d\u51cf\u53bb\u4e00\uff0c\u4e0d\u5c31\u662f\u7b54\u6848\u4e86\uff1f\n\n\u4e60\u60ef\u52a0\u4e86\u8bfb\u5165\u4f18\u5316\uff0c\u53bb\u6389\u8bfb\u5165\u4f18\u5316\u4e3b\u7a0b\u5e8f\u4ee3\u7801\u8fd8\u662f\u975e\u5e38\u7cbe\u70bc\u7684\uff1a\n\n```cpp\n#include <cstdio>\n#include <set>\n#define f(i , n) for(int i=1 ; i <= n ; i++)\nusing namespace std;\nset < int > S;\nint v[1000];\ninline int Input(){\n    char C=getchar();\n    int N=0;\n    while('0' >  C || C >  '9') C=getchar(); \n    while('0' <= C && C <= '9') N=N*10 + (C-'0') , C=getchar();\n    return N;\n}\nint Find(int n){\n    return v[n] == n ? n : (v[n]=Find(v[n]));\n}\nint main(){\n    int n=Input() , m=Input();\n    f(i , n) v[i]=i;\n    f(i , m) v[Find(Input())]=v[Find(Input())];\n    f(i , n) S.insert(Find(v[i]));\n    printf(\"%d\\n\" , S.size()-1);\n    return 0;\n}\n```",
        "postTime": 1498826565,
        "uid": 26673,
        "name": "Sooke",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2839 \u3010\u7545\u901a\u5de5\u7a0b\u3011"
    },
    {
        "content": "##\u5f88\u88f8\u7684\u5e76\u67e5\u96c6\u9898\u3002\n\n\u5e76\u67e5\u96c6\u7684\u5408\u5e76\u548c\u67e5\u8be2\u64cd\u4f5c\u548c\u697c\u4e0a\u7684\u9898\u89e3\u662f\u6ca1\u6709\u591a\u5927\u533a\u522b\u7684\uff0c\u552f\u4e00\u4e0d\u540c\u7684\u5730\u65b9\u662f\u5f97\u5230\u7b54\u6848\u7684\u65b9\u6cd5\uff08\u5373\u9700\u8981\u4fee\u5efa\u591a\u5c11\u6761\u516c\u8def\uff09\u3002\u8c8c\u4f3c\u5927\u591a\u6570\u4eba\u90fd\u662f\u7edf\u8ba1\u6709\u591a\u5c11\u70b9\u7684\u4e0a\u7ea7\u6ca1\u6709\u6539\u53d8\u800c\u4ecd\u7136\u662f\u81ea\u5df1\uff0c\u7136\u800c\u672c\u849f\u84bb\u5e76\u6ca1\u6709\u60f3\u5230\u8fd9\u79cd\u65b9\u6cd5\u2026\u2026\u6211\u662f\u4f7f\u7528 STL \u91cc\u7684 set \u5bb9\u5668\uff0c\u6bcf\u6b21\u7f6e\u7a7a\u5bb9\u5668\uff0c\u6700\u540e\u5c06 1 ~ n \u7684\u4e0a\u7ea7\u7684\u4e0a\u7ea7\u7684\u2026\u2026\u7684\u4e0a\u7ea7\u4e5f\u5c31\u662f\u5b83\u7684\u8001\u5927\u7f6e\u5165\u5bb9\u5668\uff0c\u5229\u7528 set \u672c\u8eab\u7684\u53bb\u91cd\u5927\u6cd5\uff0c\u6700\u540e\u7528 size \u5224\u65ad\u4e00\u4e0b\u5927\u5c0f\u51cf\u53bb\u4e00\u5c31\u884c\u4e86\u3002\u539f\u7406\u5c31\u662f\u6700\u540e\u7684\u6751\u5e84\u56fe\u53ef\u80fd\u5e76\u6ca1\u6709\u8054\u901a\uff0c\u800c\u662f\u5206\u6210\u591a\u4e2a\u5206\u6563\u7684\u8fde\u901a\u56fe\uff0c\u56e0\u6b64\uff0c\u8001\u5927\u7684\u6570\u91cf\u5c31\u662f\u5206\u6563\u56fe\u7684\u6570\u91cf\uff0c\u5c06\u5206\u6563\u56fe\u8fde\u5728\u4e00\u8d77\u6545\u5c31\u9700\u8981\u8001\u5927\u6570\u91cf\u51cf\u4e00\u7684\u516c\u8def\u5566\u3002\n\n\u7531\u4e8e\u4e60\u60ef\uff0c\u8fd8\u662f\u52a0\u4e0a\u4e86\u8bfb\u5165\u4f18\u5316\uff0c\u9664\u53bb\u8bfb\u5165\u4f18\u5316\u7684\u4ee3\u7801\uff0c\u4e3b\u7a0b\u5e8f\u76f8\u5bf9\u8fd8\u662f\u975e\u5e38\u7cbe\u70bc\u7684\uff0c\u4ee3\u7801\u5982\u4e0b\uff08\u8c22\u7edd\u76f2\u76ee\u590d\u5236\uff0c\u5173\u952e\u662f\u81ea\u5df1\u7406\u89e3\uff01\uff09\uff1a\n\n```cpp\n#include <cstdio>\n#include <set>\n#define f(i , n) for(int i=1 ; i <= n ; i++)\nusing namespace std;\nset < int > S;\nint v[1000];\ninline int Input(){\n    char C=getchar();\n    int N=0;\n    while('0' >  C || C >  '9') C=getchar(); \n    while('0' <= C && C <= '9') N=N*10 + (C-'0') , C=getchar();\n    return N;\n}\nint Find(int n){\n    return v[n] == n ? n : (v[n]=Find(v[n]));\n}\nint main(){\n    int n , m;\n    while((n=Input()) != 0){\n        m=Input();\n        f(i , n) v[i]=i;\n        f(i , m) v[Find(Input())]=v[Find(Input())];\n        S.clear();\n        f(i , m) S.insert(Find(v[i]));\n        printf(\"%d\\n\" , S.size()-1);\n    }\n    return 0;\n}\n```\n##\u6700\u540e\u63d0\u9192\u4e00\u53e5\uff0c\u6211\u5df2\u7ecf\u7ed9\u4ee3\u7801\u52a8\u4e86\u4e00\u4e2a\u624b\u811a\uff0c\u5343\u4e07\u4e0d\u8981\u76f2\u76ee\u590d\u5236\u7c98\u8d34\u54e6\uff01\n",
        "postTime": 1498825005,
        "uid": 26673,
        "name": "Sooke",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1536 \u3010\u6751\u6751\u901a\u3011"
    },
    {
        "content": "\u6838\u5fc3\u601d\u8def\uff1a\u539f\u6765\u6211\u6ca1\u60f3\u660e\u767d\u539f\u56e0\uff0c\u73b0\u5728\u60f3\u597d\u4e86\u3002\n\n\u5148\u5904\u7406\u597d\u5408\u5e76\uff0c\u7136\u540e\u4e00\u4e2a\u4e2a\u5224\u65ad\u3002\n\n\u5982\u679c\u4e00\u4e2a\u6751\u5e84\u6307\u5411\u81ea\u5df1\uff0c\u8bf4\u660e\uff1a1\u3001\u6ca1\u6709\u6751\u5e84\u548c\u5b83\u76f8\u8fde\u30022\u3001\u522b\u7684\u6751\u5e84\u90fd\u6307\u5411\u5b83\u3002\n\n\u65e2\u7136\u8fd9\u6837\uff0c\u90a3\u4e48\u6211\u4eec\u6765\u5206\u6790\u3002\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u6751\u5e84\u5904\u4e8e\u8fd9\u79cd\u72b6\u6001\uff0c\u90a3\u4e48\u5c31\u8bf4\u660e\u6240\u6709\u7684\u6751\u5e84\u90fd\u76f8\u8fde\u5e76\u6307\u5411\u5b83\uff0c\u4e5f\u5c31\u4e0d\u7528\u518d\u4fee\u8def\u4e86\u3002\n\n\u4f46\u5982\u679c\u6709\u4e24\u4e2a\uff0c\u5c31\u8bf4\u660e\u8fd9\u4e24\u4e2a\u6751\u5e84\u548c\u5b83\u4eec\u7684\u5b50\u96c6\u90fd\u4e92\u4e0d\u76f8\u8fde\uff0c\u5426\u5219\u5c31\u90fd\u6307\u5411\u5176\u4e2d\u4e00\u4e2a\u6751\u5e84\u3002\n\n\u4ee5\u6b64\u7c7b\u63a8\uff0c\u6709n\u4e2a\u6751\u5e84\u662f\u96c6\u5408\u7684\u9876\u70b9\uff0c\u5c31\u8981\u5728\u4e4b\u95f4\u4feen-1\u6761\u8def\u3002\n\n\n\n```cpp\n-#include <iostream> -\n-#define sb \"aa\"-\n-#define doby \"aa\"-\n-using namespace std;-\n-int n=1,m,p,a[5001]={0},s=0;-\n-int find(int x)---\u627e\u8be5\u70b9\u7684\u6839\n-{-\n-    if(a[x]==x)return x;-\n-    a[x]=find(a[x]);-\n-    return a[x];-\n-}-\n-void mash(int u,int v)---\u5408\u5e76\u4fe9\u70b9\n-{-\n-    if(find(u)!=find(v))a[find(u)]=find(v);---\u5982\u679c\u4e24\u4e2a\u70b9\u4e0d\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u5c31\u5408\u5e76\n-}-\n-int main()-\n-{-\n-    while(doby==sb)---\u53ea\u8981doby\u770b\u5230\u8fd9\u91cc\u4e0d\u6253\u6211\u5c31\u597d\u3002\n-    {-\n-        cin>>n;-\n-        if(n==0)break;---\u9898\u76ee\u8bf4\u5982\u679cn=0\u5c31\u7ed3\u675f\n-        cin>>m;-\n-        for(int i=1;i<=n;i++)a[i]=i;---\u6bcf\u4e2a\u70b9\u6307\u5411\u81ea\u5df1\uff0c\u5e76\u67e5\u96c6\u7684\u521d\u59cb\u5316\n-        for(int u,v,i=1;i<=m;i++)-\n-        {-\n-            cin>>u>>v;-\n-            mash(u,v);---\u628a\u4e24\u4e2a\u70b9\u8fde\u8d77\u6765\n-        }-\n-        for(int i=1;i<=n;i++)-\n-        {-\n-            if(a[i]==i)s++;---\u5224\u65ad\u6709\u51e0\u4e2a\u6751\u5e84\u6307\u5411\u81ea\u5df1\n-        }-\n-        cout<<--s<<endl;---\u53ea\u8981\u4fee\u8fd9\u4e9b\u6751\u5e84\u7684\u6570\u91cf-1\u7684\u9053\u8def\u5c31\u597d\u4e86\uff0c\u4e0d\u7406\u89e3\u5c31\u770b\u624b\u638c\n-        s=0;-\n-    }-\n-    return 0;-\n-}-\n```",
        "postTime": 1498038118,
        "uid": 14381,
        "name": "1jia1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1536 \u3010\u6751\u6751\u901a\u3011"
    },
    {
        "content": "\u521d\u59cb\u5316\n\n\u628a\u6bcf\u4e2a\u70b9\u6240\u5728\u96c6\u5408\u521d\u59cb\u5316\u4e3a\u5176\u81ea\u8eab\u3002\n\n\u901a\u5e38\u6765\u8bf4\uff0c\u8fd9\u4e2a\u6b65\u9aa4\u5728\u6bcf\u6b21\u4f7f\u7528\u8be5\u6570\u636e\u7ed3\u6784\u65f6\u53ea\u9700\u8981\u6267\u884c\u4e00\u6b21\uff0c\u65e0\u8bba\u4f55\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5747\u4e3aO(N)\u3002\n\n\u67e5\u627e\n\u67e5\u627e\u5143\u7d20\u6240\u5728\u7684\u96c6\u5408\uff0c\u5373\u6839\u8282\u70b9\u3002\n\n\u5408\u5e76\n\u5c06\u4e24\u4e2a\u5143\u7d20\u6240\u5728\u7684\u96c6\u5408\u5408\u5e76\u4e3a\u4e00\u4e2a\u96c6\u5408\u3002\n\n\u901a\u5e38\u6765\u8bf4\uff0c\u5408\u5e76\u4e4b\u524d\uff0c\u5e94\u5148\u5224\u65ad\u4e24\u4e2a\u5143\u7d20\u662f\u5426\u5c5e\u4e8e\u540c\u4e00\u96c6\u5408\uff0c\u8fd9\u53ef\u7528\u4e0a\u9762\u7684\u201c\u67e5\u627e\u201d\u64cd\u4f5c\u5b9e\u73b0\u3002\n\n\u8fd9\u5c31\u662f\u5e76\u67e5\u96c6\uff0c\u5176\u5b9e\u5927\u5bb6\u90fd\u61c2\uff0c\u53ef\u662f\u3002\u3002\u3002\u3002\u7edf\u8ba1\u8054\u901a\u5757\u7684\u4e2a\u6570\u65f6\u6ca1\u5fc5\u8981\u679a\u4e3e\u554a\uff0c\u5b8c\u5168\u53ef\u4ee5O(1)\u7edf\u8ba1\u51fa\u554a\u3002\u3002\u3002\u3002\u3002\u3002\n\n\u7ef4\u62a4\u4e00\u4e2aCNT\uff0c\u8868\u793a\u6b64\u65f6\u7684\u8054\u901a\u5757\u7684\u4e2a\u6570\uff0c\u521d\u59cb\u65f6CNT=N\uff0c \u56e0\u4e3a\u6bcf\u6b21\u8fde\u901a\u64cd\u4f5c\u90fd\u4f1a\u4f7f\u8fde\u901a\u5757\u4e2a\u6570-1\uff0c\u6240\u4ee5\u53ea\u8981\u6bcf\u6b21--CNT\u5c31\u53ef\u4ee5\u4e86\n\n```cpp\nvar\n  fa:array[0..1005]of longint;\n  list,toit,next:array[0..1005]of longint;\n  cnt,i,j,x,y,n,m:longint;\nfunction find(x:longint):longint;\nbegin\n  if fa[x]=x then find:=x else find:=find(fa[x]);\n  fa[x]:=find;\nend;\nbegin\n  readln(n,m);\n  cnt:=n;\n  for i:=1 to n do fa[i]:=i;\n  for i:=1 to m do\n  begin\n    readln(x,y);\n    x:=find(x); y:=find(y);\n    if x<>y then\n    begin\n      dec(cnt); fa[x]:=y;\n    end;\n  end;\n  writeln(cnt-1);\nend.\n\n```",
        "postTime": 1495500934,
        "uid": 34910,
        "name": "\u91cd\u56de\u5dc5\u5cf0\uff01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2839 \u3010\u7545\u901a\u5de5\u7a0b\u3011"
    },
    {
        "content": "\u7b80\u5355\u7684\u5e76\u67e5\u96c6\uff0c\u4e00\u5f00\u59cb\u4ee5\u4e3a\u662f\u6700\u5c0f\u751f\u6210\u6811\u3002\u3002\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstdlib>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint n,m,f[1005],ans(0);\nint find(int x)\n{\n    if(f[x]==x)return x;\n    return find(f[x]);\n}\nvoid UN(int x,int y)\n{\n    int a=find(x);\n    int b=find(y);\n    f[a]=b;\n}\nint main()\n{\n    while(scanf(\"%d %d\",&n,&m)==2)\n    {\n        ans=0;\n        for(int i=1;i<=n;i++)\n        f[i]=i;\n        for(int i=1;i<=m;i++)\n        {\n            int x,y;\n            scanf(\"%d %d\",&x,&y);\n            if(find(x)!=find(y))\n            {\n                UN(x,y);\n                ans++;\n            }\n        }\n        printf(\"%d\\n\",n-1-ans);\n    }\n    return 0;\n}\n```",
        "postTime": 1469626521,
        "uid": 12005,
        "name": "zclzslz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1536 \u3010\u6751\u6751\u901a\u3011"
    },
    {
        "content": "\u5e76\u67e5\u96c6\u53ef\u4ee5\u5f88\u5bb9\u6613\u89e3\u51b3\u8fd9\u9053\u9898\u3002\n\n\u7528\u4e00\u4e2aJudge\uff08\uff09\u51fd\u6570\u5224\u65ad\u76ee\u524d\u72ec\u7acb\u7684\u57ce\u5e02\uff08\u6839\u8282\u70b9\uff09\u7684\u6570\u91cf\uff0c\u8fd9n\u5ea7\u57ce\u5e02\u9700\u8981n-1\u6761\u9053\u8def\u8fde\u901a\u3002\n\n\u4ee5\u4e0b\u662f\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<iostream>\nusing namespace std;\nconst int maxn=1002;\nint vi[maxn];\nint n,m,ans;\nint Find(int x)        //\u67e5\u627e\n{\n    if(vi[x]!=x)    vi[x]=Find(vi[x]);\n    return vi[x];\n}\nint Union(int x,int y)        //\u5408\u5e76 \n{\n    if(Find(x)!=Find(y))    vi[Find(y)]=vi[Find(x)];    \n}\nvoid Judge()        //\u5224\u65ad \n{\n    for(int j=1;j<=n;j++)\n    {\n        if(vi[j]==j)    ans++;        \n    }\n//    \u8ba1\u7b97\u72ec\u7acb\u6839\u8282\u70b9\u7684\u6570\u91cf \n}\nint main()\n{\n    cin>>n>>m;\n    if(m==0)        //\u4e00\u6761\u8def\u90fd\u6ca1\u6709\u65f6\uff0cn\u4e2a\u57ce\u5e02\u9700\u8981\uff08n-1\uff09\u6761\u8def\u76f8\u8fde \n    { \n        cout<<n-1;\n        return 0;      \n    } \n    int i,a,b;\n    for(i=1;i<=n;i++)        //\u521d\u59cb\u5316 \n        vi[i]=i;\n    for(i=1;i<=m;i++)\n    {\n        cin>>a>>b;\n        Union(a,b);\n    }\n    Judge();\n    cout<<ans-1;    //ans\u8868\u793a\u72ec\u7acb\u6839\u8282\u70b9\u6570\uff0c\u6240\u4ee5\u5e94\u6709\uff08n-1\uff09\u6761\u8def\u8fde\u901a \n    return 0;\n}\n```",
        "postTime": 1497834262,
        "uid": 29212,
        "name": "\u6c34\u58a8\u4e66\u9999",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2839 \u3010\u7545\u901a\u5de5\u7a0b\u3011"
    },
    {
        "content": "```cpp\n#include<stdio.h>\nint father[1010];\nint find(int x)\n{\n    if(father[x]!=x)\n    father[x]=find(father[x]);//find\u4f18\u5316\n    return father[x];\n}\nvoid combine(int x,int y)\n{\n    int r1,r2;\n    r1=find(x);\n    r2=find(y);\n    if(r1!=r2)//\u4ed6\u4eec\u4e0d\u662f\u4e00\u4e2a\u7956\u5148\n    father[r2]=r1;//\u5408\u5e76\n}\nint main()\n{\n    int n,m,sum,i,j,x,y;\n    while(scanf(\"%d\",&n)!=0)\n{\n    if(n==0)\n    break;//\u8fd9\u53e5\u4e00\u5b9a\u8981\u52a0\uff0c\u4e0d\u7136\u4f1a10\u4e2a\u70b9\u5168\u90e8\u8d85\u65f6\n    for(j=1;j<=n;j++)\n    father[j]=j;//father\u521d\u59cb\u5316\n    scanf(\"%d\",&m);\n    sum=0;\n    for(i=1;i<=m;i++)\n{\n    scanf(\"%d %d\",&x,&y);\n    combine(x,y);//\u5408\u5e76\n}\n    for(i=1;i<=n;i++)\n    if(father[i]==i)//\u6307\u5411\u81ea\u5df1\n    sum++;\n    printf(\"%d\\n\",sum-1);//\u6709sum\u4e2a\u70b9\uff0c\u5219\u6709sum-1\u6761\u7ebf\n}\n    return 0;\n}//\u7ed3\u675f\u7a0b\u5e8f \u5c31\u8fd9\u6837\n```",
        "postTime": 1507556372,
        "uid": 51135,
        "name": "\u661f\u4e4b\u6d77",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1536 \u3010\u6751\u6751\u901a\u3011"
    }
]