[
    {
        "content": "\u8fd9\u9053\u9898\u7528\u4e0a\u4e0b\u754c\u7f51\u7edc\u6d41\u53ef\u80fd\u6709\u70b9\u5927\u6750\u5c0f\u7528\u4e86\uff0c\u5176\u5b9e\u4e00\u4e2a\u666e\u901a\u7684\u7f51\u7edc\u6d41\u5c31\u80fd\u89e3\u51b3\u95ee\u9898\u3002\u9996\u5148\u8003\u8651\u9006\u5411\u601d\u7ef4\uff0c\u6c42\u6700\u5c11\u8981\u4f7f\u7528\u7684\u58eb\u5175\u4e2a\u6570\uff0c\u8f6c\u5316\u4e3a\uff0c\u521d\u59cb\u7684\u65f6\u5019\u6240\u6709\u80fd\u653e\u58eb\u5175\u7684\u5730\u65b9\u90fd\u653e\u4e86\u58eb\u5175\u7684\u60c5\u51b5\u4e0b\uff0c\u6700\u591a\u80fd\u5220\u6389\u591a\u5c11\u4e2a\u58eb\u5175\u3002\n\n\u7ed9\u6bcf\u4e00\u884c\u6bcf\u4e00\u5217\u5206\u522b\u5efa\u4e00\u4e2a\u70b9\uff0c\u5bf9\u4e8e\u6240\u6709\u975e\u969c\u788d\u5750\u6807(x,y)\uff0c\u4ecex\u884c\u5bf9\u5e94\u7684\u70b9 \u5411 y\u5217\u5bf9\u5e94\u7684\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a1\u7684\u8fb9\uff0c\u8868\u793a\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u58eb\u5175\u6700\u591a\u53ef\u4ee5\u5220\u9664\u4e00\u6b21\u3002\n\n\u6e90\u70b9\u5411\u6bcf\u4e00\u884c\u5bf9\u5e94\u7684\u70b9\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a\u8fd9\u4e00\u884c\u80fd\u5220\u9664\u7684\u58eb\u5175\u4e2a\u6570\u7684\u6700\u5927\u503c\uff08\u5373 \u5217\u6570m - \u8fd9\u4e00\u884c\u7684\u969c\u788d\u6570 - \u8fd9\u4e00\u884c\u9700\u8981\u7684\u58eb\u5175\u6570L\\[i\\]\uff09\u3002\n\n\u6bcf\u4e00\u5217\u5bf9\u5e94\u7684\u70b9\u5411\u6c47\u70b9\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a\u8fd9\u4e00\u5217\u80fd\u5220\u9664\u7684\u58eb\u5175\u4e2a\u6570\u7684\u6700\u5927\u503c\uff08\u5373 \u884c\u6570n - \u8fd9\u4e00\u5217\u7684\u969c\u788d\u6570 - \u8fd9\u4e00\u5217\u9700\u8981\u7684\u58eb\u5175\u6570C\\[i\\]\uff09\u3002\n\n\u8fd9\u6837\u8dd1\u4e00\u4e2a\u6700\u5927\u6d41\uff0c\u6bcf\u4e00\u4e2a\u5355\u4f4d\u7684\u6d41\u91cf\u8868\u793a\u5220\u9664\u4e00\u4e2a\u58eb\u5175\uff0c\u4e0d\u96be\u8bc1\u660e \u4efb\u610f\u4e00\u79cd\u6d41\u91cf\u72b6\u6001\u90fd\u4e0e\u4e00\u79cd\u5408\u6cd5\u7684\u58eb\u5175\u5220\u9664\u65b9\u6848\u76f8\u5bf9\u5e94\u3002\n\n\u7279\u5224\u65e0\u89e3\u7684\u60c5\u51b5\uff0c\u5982\u679c\u6240\u6709\u80fd\u653e\u58eb\u5175\u7684\u5730\u65b9\u90fd\u653e\u4e0a\u4e86\u58eb\u5175\uff0c\u4ecd\u7136\u5b58\u5728\u884c\u6216\u5217\u4e0d\u6ee1\u8db3\u9650\u5236\u6761\u4ef6\uff0c\u8f93\u51fa\u65e0\u89e3\u5373\u53ef\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <queue>\n#include <cstdio>\n#include <cctype>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n\nconst int maxn = 2*100 + 7, inf = 0x7f7f7f7f;\n\nnamespace dinic {\n\tstruct Edge {\n\t\tint to, res;\n\t};\n\tvector<int> G[maxn];\n\tvector<Edge> edges;\n\tinline void addedge(int f, int t, int c) {\n\t\tedges.push_back((Edge){t, c});\n\t\tedges.push_back((Edge){f, 0});\n\t\tint m = edges.size();\n\t\tG[f].push_back(m - 2);\n\t\tG[t].push_back(m - 1);\n\t}\n\tint vis[maxn], d[maxn], cur[maxn], s, t;\n\tbool bfs() {\n\t\tmemset(vis, 0x00, sizeof(vis));\n\t\tqueue<int> q; q.push(s); vis[s] = 1; d[s] = 0;\n\t\twhile(!q.empty()) {\n\t\t\tint x = q.front(); q.pop();\n\t\t\tfor(int i = 0; i < G[x].size(); i ++) {\n\t\t\t\tEdge& e = edges[G[x][i]];\n\t\t\t\tif(e.res>0 && !vis[e.to]) {\n\t\t\t\t\tvis[e.to] = 1;\n\t\t\t\t\td[e.to] = d[x] + 1;\n\t\t\t\t\tq.push(e.to);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn vis[t];\n\t}\n\tint dfs(int x, int a) {\n\t\tif(x==t || a==0) return a;\n\t\tint flow = 0, f;\n\t\tfor(int& i = cur[x]; i < G[x].size(); i ++) {\n\t\t\tEdge& e = edges[G[x][i]];\n\t\t\tif(e.res>0 && d[e.to]==d[x]+1 && (f=dfs(e.to,min(a,e.res)))>0) {\n\t\t\t\tflow += f;\n\t\t\t\ta -= f;\n\t\t\t\tedges[G[x][i]^1].res += f;\n\t\t\t\te.res -= f;\n\t\t\t\tif(a == 0) break;\n\t\t\t}\n\t\t}\n\t\treturn flow;\n\t}\n\tint maxflow(int S, int T) {\n\t\ts=S;t=T; int flow = 0;\n\t\twhile(bfs()) {\n\t\t\tmemset(cur, 0x00, sizeof(cur));\n\t\t\tflow += dfs(s, inf);\n\t\t}\n\t\treturn flow;\n\t}\n}\nusing dinic::addedge;\nusing dinic::maxflow;\n\nint m, n, k, L[maxn], C[maxn];\n#define LX(x) (x)\n#define LY(y) (m+(y))\n#define ST    (n+m+1)\n#define ED    (n+m+2)\n\nint sol[maxn][maxn], iL[maxn], iC[maxn], acnt;\n\nint main() {\n\tscanf(\"%d%d%d\", &m, &n, &k); acnt = n*m;\n\tfor(int i = 1; i <= m; i ++) scanf(\"%d\", &L[i]);\n\tfor(int i = 1; i <= n; i ++) scanf(\"%d\", &C[i]);\n\tfor(int i = 1; i <= k; i ++) {\n\t\tint x, y; scanf(\"%d%d\", &x, &y);\n\t\tsol[x][y] = 1; iL[x] ++; iC[y] ++;\n\t\tacnt --;\n\t}\n\tfor(int i = 1; i <= m; i ++) {\n\t\tfor(int j = 1; j <= n; j ++)\n\t\t\tif(!sol[i][j]) addedge(LX(i), LY(j), 1);\n\t}\n\tfor(int i = 1; i <= m; i ++) {\n\t\tint c = (n - iL[i]) - L[i];\n\t\tif(c < 0) {puts(\"JIONG!\"); return 0;}\n\t\taddedge(ST, LX(i), c);\n\t\t//printf(\"[%3d] c = %3d iL = %3d L = %3d\\n\", i, c, iL[i], L[i]);\n\t}\n\tfor(int i = 1; i <= n; i ++) {\n\t\tint c = (m - iC[i]) - C[i];\n\t\tif(c < 0) {puts(\"JIONG!\"); return 0;}\n\t\taddedge(LY(i), ED, c);\n\t\t//printf(\"[%3d] c = %3d iC = %3d C = %3d\\n\", i, c, iC[i], C[i]);\n\t}\n\tint ans = acnt - maxflow(ST, ED);\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1522813497,
        "uid": 36456,
        "name": "GGN_2015",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4311 \u3010\u58eb\u5175\u5360\u9886\u3011"
    },
    {
        "content": "[$\\Large\\color{#FFBBFF}\\textit{Tian-Xing's blog}$](https://Tian-Xing.github.io)\n\n------------\n\n# Description\n\n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P4311)\n\n------------\n\n# Solution\n\n\u9996\u5148\u5982\u679c\u58eb\u5175\u53ea\u80fd\u7ed9\u4e00\u884c\u6216\u4e00\u5217\u9020\u6210\u8d21\u732e\u7684\u7b54\u6848\u662f$\\sum_{i = 1}^m l_i + \\sum_{i = 1}^n c_i$\u3002\n\n\u4f46\u662f\u53d1\u73b0\u6709\u7684\u58eb\u5175\u53ef\u4ee5\u540c\u65f6\u7ed9\u4e00\u5217\u548c\u4e00\u884c\u9020\u6210\u8d21\u732e\u3002\n\n\u90a3\u5c31\u7b97\u51fa\u8fd9\u4e9b\u58eb\u5175\u7684\u4e2a\u6570\u5c31\u884c\u4e86\u3002\n\n$S$\u5411\u6bcf\u4e00\u884c\u8fde\u5bb9\u91cf\u4e3a$l_i$\u7684\u6709\u5411\u8fb9\uff1b\u6bcf\u4e00\u5217\u5411$T$\u8fde\u5bb9\u91cf\u4e3a$c_i$\u7684\u6709\u5411\u8fb9\u3002\n\n\u5982\u679c\u5750\u6807$(i,j)$\u4e0d\u662f\u969c\u788d\uff0c\u90a3\u4e48\u7b2c$i$\u884c\u5411\u7b2c$j$\u5217\u8fde\u5bb9\u91cf\u4e3a$1$\u7684\u6709\u5411\u8fb9\u3002\n\n\u8dd1\u51fa\u6765\u7684\u6700\u5927\u6d41\u5c31\u662f\u8d21\u732e\u4e3a$2$\u7684\u58eb\u5175\u6570\u91cf\u3002\n\n------------\n\n# Code\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <queue>\nusing namespace std;\n\nconst int INF = 999999999;\nconst int N = 10050;\nconst int M = 200050;\n\nint n, m, s, t, head[N], num = 1, dis[N], k, l[150], c[150], p[150][150], sum[500], ans;\n\nstruct Node\n{\n    int next, to, dis;\n} edge[M * 2];\n\nvoid Addedge(int u, int v, int w)\n{\n    edge[++num]= (Node){head[u], v, w};\n    head[u] = num;\n}\n\ntemplate <class T>\nvoid Read(T &x)\n{\n    x = 0; int p = 0; char st = getchar();\n    while (st < '0' || st > '9') p = (st == '-'), st = getchar();\n    while (st >= '0' && st <= '9') x = (x << 1) + (x << 3) + st - '0', st = getchar();\n    x = p ? -x : x;\n    return;\n}\n\ntemplate <class T>\nvoid Put(T x)\n{\n    if (x < 0) putchar('-'), x = -x;\n    if (x > 9) Put(x / 10);\n    putchar(x % 10 + '0');\n    return;\n}\n\nbool Bfs()\n{\n    queue<int> q;\n    for (int i = 0; i <= t; i++) dis[i] = 0;\n    dis[s] = 1; q.push(s);\n    while (!q.empty())\n    {\n        int u = q.front(); q.pop();\n        for (int i = head[u]; i; i = edge[i].next)\n            if (!dis[edge[i].to] && edge[i].dis)\n            {\n                dis[edge[i].to] = dis[u] + 1;\n                q.push(edge[i].to);\n                if (edge[i].to == t) return 1;\n            }\n    }\n    return 0;\n}\n\nint Dinic(int x, int flow)\n{\n    if (x == t || !flow) return flow;\n    int rest = flow;\n    for (int i = head[x]; i && rest; i = edge[i].next)\n        if (edge[i].dis && dis[edge[i].to] == dis[x] + 1)\n        {\n            int v = edge[i].to;\n            int tmp = Dinic(v, min(flow, edge[i].dis));\n            rest -= tmp;\n            edge[i].dis -= tmp;\n            edge[i ^ 1].dis += tmp;\n            if (!tmp) dis[v] = 0;\n        }\n    return flow - rest;\n}\n\nvoid Add(int u, int v, int w)\n{\n\tAddedge(u, v, w);\n\tAddedge(v, u, 0);\n\treturn;\n}\n\nint Maxflow()\n{\n\tint maxflow = 0, tmp;\n\twhile (Bfs())\n\t{\n\t\ttmp = Dinic(s, INF);\n\t\tif (tmp) maxflow += tmp;\n\t}\n\treturn maxflow;\n}\n\nint main()\n{\n\tRead(m); Read(n); Read(k);\n\tfor (int i = 1; i <= m; i++) Read(l[i]), ans += l[i];\n\tfor (int i = 1; i <= n; i++) Read(c[i]), ans += c[i];\n\tint x, y;\n\tfor (int i = 1; i <= k; i++) Read(x), Read(y), p[x][y] = 1;\n\ts = 0, t = n + m + 1;\n\tfor (int i = 1; i <= m; i++) Add(s, i, l[i]);\n\tfor (int i = 1; i <= n; i++) Add(i + m, t, c[i]);\n\tfor (int i = 1; i <= m; i++)\n\t\tfor (int j = 1; j <= n; j++)\n\t\t{\n\t\t\tif (!p[i][j])\n\t\t\t\tAdd(i, j + m, 1);\n\t\t\tsum[i] = sum[i] + !p[i][j];\n\t\t\tsum[j + m] = sum[j + m] + !p[i][j];\n\t\t}\n\tfor (int i = 1; i <= m; i++) if (sum[i] < l[i]) { puts(\"JIONG!\"); return 0; } \n\tfor (int j = 1; j <= n; j++) if (sum[j + m] < c[j]) { puts(\"JIONG!\"); return 0; } \n\tPut(ans - Maxflow());\n    return 0;\n}\n```",
        "postTime": 1583918156,
        "uid": 73983,
        "name": "Infiltrator",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4311 \u3010\u58eb\u5175\u5360\u9886\u3011"
    },
    {
        "content": "\u56e0\u4e3a\u770b\u5230\u4e4b\u524d\u7684\u7528\u4e0a\u4e0b\u754c\u7f51\u7edc\u6d41\u7684\u65b9\u6cd5\u90fd\u662f\u6709\u9519\u7684\uff0c\u53ea\u662f\u56e0\u4e3a\u6570\u636e\u8f83\u5f31\u5f97\u4ee5\u901a\u8fc7\u4e86\u3002\u56e0\u6b64\u5728\u8fd9\u91cc\u7b80\u8981\u5730\u5199\u4e00\u5199\u7528\u4e0a\u4e0b\u754c\u7f51\u7edc\u6d41\u7684\u6b63\u786e\u5efa\u56fe\u65b9\u6cd5\u3002\n\n> \u4ee5\u4e0b\u63cf\u8ff0\u5f27\u7684\u5c5e\u6027\u5747\u7528\u6570\u5bf9 $(\\text{lowerbound},\\text{upperbound})$ \u8868\u793a\n\n## \u9519\u8bef\u7684\u5efa\u56fe\n\n\u6211\u4e4b\u524d\u9519\u8bef\u7684\u5efa\u56fe\u662f\u8fd9\u6837\u7684\uff1aS\u5411\u6bcf\u4e2a\u6ca1\u6709\u969c\u788d\u7684\u65b9\u683c\u8fde\u8fb9 (0,2)\uff0c\u65b9\u683c\u5411\u5bf9\u5e94\u7684\u884c\u5217\u8fde\u8fb9 (0, 1)\uff0c\u884c\u5217\u5411T\u8fde\u8fb9 $(C_i/L_i,+\\infty)$.\n\n\u8fd9\u6837\u5efa\u540e\u8dd1\u6700\u5c0f\u6d41\u3002\u4f46\u662f\u6700\u540e\u7b97\u7b54\u6848\u7684\u65f6\u5019\u7ed3\u679c\u662f\u4e0d\u786e\u5b9a\u7684\uff0c\u56e0\u4e3a\u4e00\u4e2a\u70b9\u5bf9\u4e8e\u884c\u5217\u7684\u8d21\u732e\u53ef\u80fd\u4f1a\u88ab\u7b97\u4e00\u6b21\u6216\u8005\u4e24\u6b21\uff0c\u8fd9\u53d6\u51b3\u4e8e\u5bf9\u4e8e\u884c\u5217\u7684\u6d41\u91cf\u4e0b\u9650\u3002\u800c\u4e14\u6211\u4eec\u4e0d\u597d\u53bb\u63a7\u5236\u4e00\u4e2a\u70b9\u88ab\u9009\u4e86\u4e4b\u540e\u5b83\u5c31\u4f1a\u81ea\u52a8\u5411\u884c\u548c\u5217\u90fd\u6d411\u7684\u6d41\u91cf\u3002\n\n## \u6b63\u786e\u7684\u5efa\u56fe\n\n\u6bcf\u4e2a\u884c\u5217\u90fd\u5efa\u4e00\u4e2a\u70b9\uff0cS\u5411\u6bcf\u884c\u8fde\u8fb9 $(L_i, +\\infty)$\uff0c\u6bcf\u5217\u5411T\u8fde\u8fb9 $(C_i,+\\infty)$\uff0c\u5bf9\u4e8e\u6ca1\u6709\u969c\u788d\u7684\u70b9 $(x,y)$\uff0c\u7531\u884c $x$ \u5411\u5217 $y$ \u8fde\u8fb9 $(0,1)$.\n\n\u8fd9\u65f6\u5019\u884c\u548c\u5217\u7684\u7ea6\u675f\u662f\u5b8c\u5168\u53ef\u4ee5\u5f97\u5230\u6ee1\u8db3\u7684\uff0c\u5e76\u4e14\u4e5f\u4e0d\u4f1a\u51fa\u73b0\u4e00\u4e2a\u70b9\u88ab\u7b97\u4e24\u6b21\u6216\u8005\u4e00\u6b21\u7684\u60c5\u51b5\uff0c\u6700\u540e\u8dd1\u6700\u5c0f\u6d41\u51fa\u6765\u7684\u7ed3\u679c\u5c31\u76f4\u63a5\u662f\u7b54\u6848\u4e86\u3002\n\n> \u7f51\u7edc\u6d41\u5efa\u56fe\u771f\u662f\u5947\u5999\uff5e",
        "postTime": 1562753618,
        "uid": 28022,
        "name": "CaptainSlow",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4311 \u3010\u58eb\u5175\u5360\u9886\u3011"
    },
    {
        "content": "\u6709\u4e0a\u4e0b\u754c\u6700\u5c0f\u8d39\u7528\u6d41\u3002\n\n\u51e0\u4e4e\u5c31\u662f\u6a21\u677f\u4e86\u3002\n\n\u7528$(u,v,b,c,w)$\u8868\u793a\u4e00\u6761\u4ece$u$\u8fde\u5411$v$\uff0c\u4e0b\u754c\u4e3a$b$\uff0c\u4e0a\u754c\u4e3a$c$\uff0c\u8d39\u7528\u4e3a$w$\u7684\u8fb9\uff0c\u5219\n\n\u5bf9\u4e8e\u6bcf\u4e00\u884c\uff0c\u8fde\u8fb9$(s,i,l[i],m,0)$\n\n\u5bf9\u4e8e\u6bcf\u4e00\u5217\uff0c\u8fde\u8fb9$(i,t,c[i],n,0)$\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u8fde\u8fb9$(i,j,0,1,1)$\n\n\u7136\u540e\u6539\u6210\u65e0\u6e90\u6c47\u7f51\u7edc\u6d41\uff0c\u8dd1\u4e00\u904d\u8d39\u7528\u6d41\u5373\u53ef\u3002\n\n\u4ee3\u7801(Dinic)\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#include<ext/pb_ds/assoc_container.hpp>\n#define Rep(i,a,b) for(register int i=(a),i##end=(b);i<=i##end;++i)\n#define Repe(i,a,b) for(register int i=(a),i##end=(b);i>=i##end;--i)\n#define For(i,a,b) for(i=(a),i<=(b);++i)\n#define Forward(i,a,b) for(i=(a),i>=(b);--i)\ntemplate<typename T>inline void read(T &x)\n{\n    T f=1;x=0;char c;\n    for(c=getchar();!isdigit(c);c=getchar())if(c=='-')f=-1;\n    for(;isdigit(c);c=getchar())x=x*10+(c^48);\n    x*=f;\n}\nusing namespace std;\nvoid file()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\"water.in\",\"r\",stdin);\n    freopen(\"water.out\",\"w\",stdout);\n#endif\n}\nconst int MAXN=811;\nstatic int n,m,k;\nstatic int l[MAXN],c[MAXN];\nstatic int ans;\nstatic struct edge\n{\n    int v,w,f,nxt;\n}p[MAXN*MAXN<<2];\nstatic int head[MAXN],e=1,s,t,ss,tt;\nstatic bool a[MAXN][MAXN];\ninline void add(int u,int v,int f,int w,bool laz=1)\n{\n    p[++e]=(edge){v,w,f,head[u]};head[u]=e;\n    if(laz)add(v,u,0,-w,0);\n}\ninline void init()\n{\n    read(n);read(m);read(k);\n    Rep(i,1,n)read(l[i]);\n    Rep(i,1,m)read(c[i]);\n    s=n+m+1;t=s+1;ss=t+1;tt=ss+1;\n    static int x,y,cnt,cnss=0,cntt=0;\n    Rep(i,1,k)read(x),read(y),a[x][y]=true;\n    Rep(i,1,n)\n    {\n        cnt=0;\n        Rep(j,1,m)if(!a[i][j])\n        {\n            ++cnt;\n            add(i,n+j,1,1);\n        }\n        if(cnt<l[i]){cout<<\"JIONG!\"<<endl;exit(0);}\n        add(s,i,cnt-l[i],0);if(l[i])add(ss,i,l[i],0);\n\t\tcnss+=l[i];\n    }\n    Rep(i,1,m)\n    {\n        cnt=0;\n        Rep(j,1,n)if(!a[j][i])++cnt;\n        if(cnt<c[i]){cout<<\"JIONG!\"<<endl;exit(0);}\n        add(n+i,t,cnt-c[i],0);if(c[i])add(n+i,tt,c[i],0);\n\t\tcntt+=c[i];\n    }\n    add(ss,t,cntt,0);add(s,tt,cnss,0);\n    add(t,s,0xFFFFFFF,0);\n}\nstatic int cur[MAXN],fee;\nstatic int vis[MAXN],dis[MAXN];\nstatic deque<int>G;\ninline bool spfa(int s,int t)\n{\n    memset(dis,0x3f,sizeof dis);\n    dis[s]=0;G.push_back(s);\n    static int u;vis[s]=true;\n    while(!G.empty())\n    {\n        u=G.front();G.pop_front();\n        for(register int v=head[u];v;v=p[v].nxt)\n            if(p[v].f&&dis[p[v].v]>dis[u]+p[v].w)\n            {\n                dis[p[v].v]=dis[u]+p[v].w;\n                if(!vis[p[v].v])\n                {\n                    vis[p[v].v]=true;\n                    if(G.empty()||dis[p[v].v]<dis[G.front()])\n                        G.push_front(p[v].v);\n                    else G.push_back(p[v].v);\n                }\n            }\n        vis[u]=false;\n    }\n    return dis[t]^dis[0];\n}\nint dfs(int u,int t,int flow=0xFFFFFFF)\n{\n    if(!flow||u==t)return flow;\n    vis[u]=true;int sum=0;\n    for(register int &v=cur[u];v;v=p[v].nxt)\n        if(!vis[p[v].v]&&p[v].f&&dis[p[v].v]==dis[u]+p[v].w)\n        {\n            int f=dfs(p[v].v,t,min(flow,p[v].f));\n            p[v].f-=f;p[v^1].f+=f;\n            fee+=p[v].w*f;sum+=f;flow-=f;\n        }\n    vis[u]=false;\n    return sum;\n}\ninline void Dinic(int s,int t)\n{while(spfa(s,t))memcpy(cur,head,sizeof head),dfs(s,t);}\ninline void solve()\n{\n    Dinic(ss,tt);\n    cout<<fee<<endl;\n}\nint main()\n{\n    file();\n    init();\n    solve();\n    return 0;\n}\n\n```\n\n### Upt:\n\u554a\u5440\u88ab\u53c9\u4e86\u3002\u3002\u3002\n\n\u5176\u5b9e\u63a8\u5bfc\u6ca1\u6709\u5199\u9519\uff0c\u53ea\u662f\u6709\u51e0\u6761\u8fb9\u5fd8\u8bb0\u5efa\u4e86\u3002\u3002\u3002",
        "postTime": 1520855587,
        "uid": 7035,
        "name": "Great_Influence",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4311 \u3010\u58eb\u5175\u5360\u9886\u3011"
    },
    {
        "content": "### \u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\n\n\u65b9\u4fbf\u8868\u8ff0\uff0c $(x,y)$\u8868\u793a\u6d41\u91cf\u4e3a$x$\uff0c\u8d39\u7528\u4e3a$y$\u7684\u8fb9\n\n$S$\u4e3a\u6e90\u70b9\uff0c$T$\u4e3a\u6c47\u70b9\n\n\u6bcf\u4e2a\u7a7a\u5730\u90fd\u662f\u4e00\u4e2a\u70b9\uff0c\u6bcf\u4e00\u884c\u548c\u6bcf\u4e00\u5217\u989d\u5916\u5efa\u4e00\u4e2a\u70b9\n\n\u9996\u5148\u5220\u53bb\u4e0d\u5408\u6cd5\u7684\u70b9\n\n$S$\u4e0e\u5750\u6807\u4e3a$(i,j)$\u7684\u70b9\u8fde$(inf,0)$\n\n\u5750\u6807$(i,j)$\u7684\u70b9\u4e0e\u8868\u793a\u6a2a\u5750\u6807$i$\u7684\u70b9\u8fde$(1,1)$\n\n\u5750\u6807$(i,j)$\u7684\u70b9\u4e0e\u8868\u793a\u7eb5\u5750\u6807$j$\u7684\u70b9\u8fde$(1,1)$\n\n\u8868\u793a\u6a2a\u5750\u6807$i$\u7684\u70b9\u4e0e$T$\u8fde$(lin[i],0)$\n\n\u8868\u793a\u6a2a\u5750\u6807$j$\u7684\u70b9\u4e0e$T$\u8fde$(col[j],0)$\n\n\u8fd9\u6837\u7684\u8fde\u8fb9\uff0c\u8868\u793a\u5982\u679c\u51b3\u7b56$(i,j)$\uff0c\u4f1a\u5bf9\u6a2a\u5750\u6807$i$\u7684\u70b9,\u6a2a\u5750\u6807$j$\u7684\u70b9\u4ea7\u751f$1$\u7684\u8d21\u732e\uff0c\u6d88\u8017$1$\u7684\u4ee3\u4ef7\n\n\u8dd1\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u5c31\u662f\u7b54\u6848$*2$\n\n\u6700\u540e\u8f93\u51fa$ans/2$",
        "postTime": 1534132453,
        "uid": 66915,
        "name": "Tyher",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4311 \u3010\u58eb\u5175\u5360\u9886\u3011"
    }
]