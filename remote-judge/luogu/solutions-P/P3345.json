[
    {
        "content": "\u770b\u5230\u6570\u636e\u8303\u56f4\u548c6s\u7684\u65f6\u9650\uff0c\u5f97(cai)\u51fa\u662f\u4e00\u9053\u52a8\u6001\u70b9\u5206\u6cbb\u3002\n\n\u8fd9\u9053\u9898\u6709\u4e00\u4e2a\u5de7\u5999\u7684\u601d\u8def\uff1a\n\n\u5047\u8bbe\u5f53\u524d\u8865\u7ed9\u7ad9\u4e3a$u$\uff0c\u5e76\u5f3a\u5236\u4ee5$u$\u4e3a\u6839\uff0c$v$\u4e3a$u$\u7684\u4e00\u4e2a\u5b50\u8282\u70b9\uff0c$sumd_u$\u548c$sumd_v$\u5206\u522b\u4e3a$u$\u7684\u5b50\u6811\u5185\u7684$d$\u4e4b\u548c\u4ee5\u53ca$v$\u7684\u5b50\u6811\u5185\u7684$d$\u4e4b\u548c\uff0c$len(u,v)$\u4e3a\u8fb9$(u,v)$\u7684\u957f\u5ea6\u3002\n\n\u5982\u679c\u5c06\u8865\u7ed9\u7ad9\u8fc1\u79fb\u5230\u70b9$v$\uff0c\u90a3\u4e48$v$\u7684\u5b50\u6811\u5185\u7684\u70b9\u5230\u8865\u7ed9\u7ad9\u7684\u8ddd\u79bb\u51cf\u5c11\u4e86$len(u,v)$\uff0c\u5176\u4ed6\u7684\u70b9\u5230\u8865\u7ed9\u7ad9\u7684\u8ddd\u79bb\u589e\u52a0\u4e86$len(u,v)$\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8865\u7ed9\u7ad9\u8fc1\u79fb\u5230\u70b9$v$\u65f6\uff0c\u4ee3\u4ef7\u7684**\u589e\u91cf**\u4e3a\uff1a\n\n$$len(u,v)\\times(sumd_u-sumd_v-sumd_v)$$\n\n\u6574\u7406\u4e00\u4e0b\uff0c\u5f97\u51fa\u6027\u8d28\uff1a$u$\u4e3a\u6839\uff0c$v$\u4e3a$u$\u7684\u5b50\u8282\u70b9\uff0c\u8865\u7ed9\u7ad9\u5728$v$\u6bd4$u$\u4f18\uff0c\u5f53\u4e14\u4ec5\u5f53\uff1a\n\n$$2\\times sumd_v>sumd_u$$\n\n\u663e\u7136\u6ee1\u8db3\u6761\u4ef6\u7684$v$\u6700\u591a\u53ea\u6709\u4e00\u4e2a\u3002\n\n\u8fd9\u65f6\u5019\uff0c\u5982\u679c\u6ca1\u6709\u6ee1\u8db3\u6761\u4ef6\u7684$v$\uff0c\u5219$u$\u4e3a\u6700\u4f18\u4f4d\u7f6e\u3002\u5426\u5219\u6700\u4f18\u4f4d\u7f6e\u5728$v$\u7684**\u5b50\u6811\u5185**\u3002\n\n\u8003\u8651\u52a8\u6001\u70b9\u5206\u6cbb\u65f6\u6bcf\u4e2a\u70b9\u7ef4\u62a4$d$\uff0c$sumd$\uff0c$sumpd$\u4e09\u4e2a\u503c\uff0c\u5206\u522b\u8868\u793a\uff1a\n\n$d_u$\uff1a\u70b9$u$\u7684$d$\u503c\u3002\n\n$sumd_u$\uff1a\u70b9$u$\u7684\u5b50\u6811\u5185\u6240\u6709\u7684$d$\u503c\u4e4b\u548c\u3002\n\n$sumpd_u$\uff1a\u5982\u679c$u$\u4e3a\u6839\uff0c\u5219\u8be5\u503c\u7b49\u4e8e\u6811\u4e2d\u6240\u6709\u70b9$v$\u7684$dis(v,u)\\times d_v$\u4e4b\u548c\uff0c\u5426\u5219\u7b49\u4e8e$u$\u7684\u5b50\u6811\u5185\u6240\u6709\u70b9$v$\u7684$dis(v,fa_u)\\times d_v$\u4e4b\u548c\u3002\n\n\uff08$dis(a,b)$\u4e3a$a$\u548c$b$\u4e24\u70b9\u5728**\u539f\u6811**\u4e2d\u7684\u8ddd\u79bb\uff0c$fa_u$\u4e3a\u70b9$u$\u5728**\u5206\u6cbb\u6811**\u4e0a\u7684\u7236\u8282\u70b9\uff09\n\n\u4fee\u6539\u6bd4\u8f83\u7b80\u5355\uff0c\u4ece$u$\u5f00\u59cb\u4e0d\u65ad\u5730\u5f80$fa_u$\u66f4\u65b0\u4e09\u4e2a\u503c\u5373\u53ef\u3002\n\n\u8be2\u95ee\u65f6\uff0c\u5148\u628a\u6700\u4f18\u89e3\u6682\u5b9a\u4e3a\u5206\u6cbb\u6811\u7684\u6839\u8282\u70b9\u3002\n\n\u5047\u8bbe\u73b0\u5728\u5230\u4e86\u70b9$u$\u7684\u5206\u6cbb\u5b50\u6811\uff0c\u5e76\u4e14\u53d1\u73b0\u6700\u4f18\u89e3\u5728$v$\u7684\u5206\u6cbb\u5b50\u6811\u5185\uff08$v$\u4e3a$u$\u5728\u5206\u6cbb\u6811\u4e0a\u7684\u4e00\u4e2a\u5b50\u8282\u70b9\uff0c\u539f\u6811\u4e0a\u6709\u8fb9$(u,w)$\u5e76\u4e14$w$\u5728$v$\u7684\u5206\u6cbb\u5b50\u6811\u5185\uff09\n\n\u5219\u53ef\u4ee5\u8f6c\u79fb\u5230$v$\u7684\u5206\u6cbb\u5b50\u6811\u5185\u6c42\u89e3\u3002\n\n\u9996\u5148\u8ba1\u7b97\u51fa$u$\u7684\u5206\u6cbb\u5b50\u6811\u5185**\uff08\u9664$v$\u7684\u5206\u6cbb\u5b50\u6811\u5185\u7684\u70b9\u4e4b\u5916\uff09**\u7684\u6240\u6709\u70b9\u5230$w$\u7684$dis\\times d$\u4e4b\u548c\uff08\u53ef\u4ee5\u4f7f\u7528$sumpd$\u8ba1\u7b97\u5f97\u51fa\uff09\uff0c\u8fd9\u6837$v$\u7684\u5206\u6cbb\u5b50\u6811**\u4e4b\u5916\u8282\u70b9**\u7684\u5f71\u54cd\u5c31\u8ba1\u7b97\u597d\u4e86\u3002\n\n\u6b64\u5916\uff0c\u8fd8\u8981\u8003\u8651\u8282\u70b9$w$\u7684\u5f71\u54cd\u56e0\u7d20\uff1a\u5b9e\u9645\u4e0a\u5bf9\u4e8e$u$\u7684\u5206\u6cbb\u5b50\u6811\u5185\u4f46\u5728$v$\u7684\u5206\u6cbb\u5b50\u6811\u4e4b\u5916\u7684\u4e00\u4e2a\u70b9$k$\uff0c\u4e0a\u9762\u7684\u8ba1\u7b97\u53ea\u662f\u8ba1\u7b97\u597d\u4e86$w->k$\u8fd9\u4e00\u6bb5\u8def\u5f84\u7684\u5f71\u54cd\uff0c\u800c$v->w$\u8fd9\u4e00\u6bb5\u8def\u5f84\u7684\u5f71\u54cd\u8fd8\u6ca1\u5c31\u7b97\u51fa\u6765\u3002\u6240\u4ee5\uff0c\u8fd8\u9700\u8981\u628a$d_w$\u52a0\u4e0a$sumd_u-sumd_v$\uff08\u5bf9\u5e94\u7684$sumd$\u548c$sumpd$\u4e5f\u8981\u8ddf\u7740\u8c03\u6574\uff09\uff0c\u8fd9\u6837\u5c31\u5904\u7406\u597d\u4e86$v->w$\u8fd9\u4e00\u6bb5\u8def\u5f84\u7684\u5f71\u54cd\u3002\u8fd9\u6837\u5c31\u80fd\u8fdb\u5165$v$\u7684\u5206\u6cbb\u5b50\u6811\u8fdb\u884c\u6c42\u89e3\u4e86\u3002\u4f46$v$\u7684\u5206\u6cbb\u5b50\u6811\u6c42\u89e3\u5b8c\u6bd5\u540e\uff0c\u8fd8\u9700\u8981\u628a$d_w$\u6062\u590d\u539f\u503c\u3002\n\n\u6700\u597d\u8981\u4f7f\u7528RMQ\u6c42LCA\u6765\u67e5\u8be2\u4e24\u70b9\u8ddd\u79bb\u3002\n\n\u590d\u6742\u5ea6$O(n\\log^2n)$\uff08\u8bbe$n,q$\u540c\u9636\uff09\n\n~~\u7b2c\u4e00\u6b21\u5199\u52a8\u6001\u70b9\u5206\u6cbb\uff0c\u8c03\u4e86\u4e00\u6574\u4e2a\u4e0b\u5348~~\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#define For(i, a, b) for (i = a; i <= b; i++)\n#define Edge(u) for (int e = adj[u], v; e; e = nxt[e])\n#define Edge2(u) for (int e = adj2[u], v; e; e = nxt2[e])\nusing namespace std;\ninline int read() {\n\tint res = 0; bool bo = 0; char c;\n\twhile (((c = getchar()) < '0' || c > '9') && c != '-');\n\tif (c == '-') bo = 1; else res = c - 48;\n\twhile ((c = getchar()) >= '0' && c <= '9')\n\t\tres = (res << 3) + (res << 1) + (c - 48);\n\treturn bo ? ~res + 1 : res;\n}\ntypedef long long ll;\nconst int N = 1e5 + 5, M = N << 1, LogN = 22;\nint n, q, ecnt, nxt[M], adj[N], go[M], val[M], sze[N], maxs[N], G,\ndep[N], dis[N], m, a[M], Log[M], RMQ[M][LogN], fir[N], fa[N],\nRoot, ecnt2, nxt2[N], adj2[N], go2[N], sc2[N];\nll d[N], sumd[N], sumpd[N];\nbool vis[N];\nvoid add_edge(int u, int v, int w) {\n\tnxt[++ecnt] = adj[u]; adj[u] = ecnt; go[ecnt] = v; val[ecnt] = w;\n\tnxt[++ecnt] = adj[v]; adj[v] = ecnt; go[ecnt] = u; val[ecnt] = w;\n}\nvoid add_edge2(int u, int v, int w) {\n\tnxt2[++ecnt2] = adj2[u]; adj2[u] = ecnt2; go2[ecnt2] = v; sc2[ecnt2] = w;\n}\nvoid dfs(int u, int fu) {\n\tdep[u] = dep[fu] + 1; a[fir[u] = ++m] = u;\n\tEdge(u) {\n\t\tif ((v = go[e]) == fu) continue;\n\t\tdis[v] = dis[u] + val[e]; dfs(v, u); a[++m] = u;\n\t}\n}\nvoid initRMQ()\n{\n\tint i, j; For (i, 1, m) RMQ[i][0] = a[i];\n\tFor (j, 1, 18) For (i, 1, m - (1 << j) + 1) {\n\t\tint x = RMQ[i][j - 1], y = RMQ[i + (1 << j - 1)][j - 1];\n\t\tRMQ[i][j] = dep[x] < dep[y] ? x : y;\n\t}\n}\nint dist(int u, int v) {\n\tint l = fir[u], r = fir[v]; if (l > r) swap(l, r);\n\tint x = Log[r - l + 1], r1 = RMQ[l][x], r2 = RMQ[r - (1 << x) + 1][x];\n\tint lca = dep[r1] < dep[r2] ? r1 : r2;\n\treturn dis[u] + dis[v] - (dis[lca] << 1);\n}\nvoid dfs1(int u, int fu) {\n\tsze[u] = 1; for (int e = adj[u], v; e; e = nxt[e]) {\n\t\tif ((v = go[e]) == fu || vis[v]) continue;\n\t\tdfs1(v, u); sze[u] += sze[v];\n\t}\n}\nvoid dfs2(int r, int u, int fu) {\n\tmaxs[u] = sze[r] - sze[u]; Edge(u) {\n\t\tif ((v = go[e]) == fu || vis[v]) continue;\n\t\tmaxs[u] = max(maxs[u], sze[v]);\n\t}\n\tif (maxs[u] < maxs[G]) G = u;\n\tEdge(u) if ((v = go[e]) != fu && !vis[v]) dfs2(r, v, u);\n}\nvoid calcG(int u) {dfs1(u, 0); G = u; dfs2(u, u, 0);}\nint dfs3(int u, int fu) {\n\tcalcG(u); if (!Root) Root = G; vis[G] = 1; fa[G] = fu; int t = G;\n\tEdge(G) {\n\t\tif (vis[v = go[e]]) continue;\n\t\tint w = dfs3(v, t); add_edge2(t, w, v);\n\t}\n\treturn t;\n}\nvoid change(int u, int delta) {\n\tint v = u; d[u] += delta; while (u) {\n\t\tsumd[u] += delta;\n\t\tsumpd[u] += 1ll * delta * dist(v, fa[u] ? fa[u] : u);\n\t\tu = fa[u];\n\t}\n}\nll exc(int u, int w, int x) {\n\tll ans = 0, cnt = d[u];\n\tEdge2(u) if ((v = go2[e]) != w) ans += sumpd[v], cnt += sumd[v];\n\td[x] += cnt; return ans + cnt * dist(u, x);\n}\nll query(ll ans, int u) {\n\tEdge2(u) if ((sumd[v = go2[e]] << 1) > sumd[u]) {\n\t\tll wr = d[sc2[e]], tmp, delta = exc(u, v, sc2[e]);\n\t\ttmp = d[sc2[e]] - wr; for (int w = sc2[e]; w != u; w = fa[w])\n\t\t\tsumd[w] += tmp, sumpd[w] += tmp * dist(sc2[e], fa[w] ? fa[w] : w);\n\t\tll nans = 0; for (int z = adj2[v]; z; z = nxt2[z]) nans += sumpd[go2[z]];\n\t\tans = delta + query(nans, v); for (int w = sc2[e]; w != u; w = fa[w])\n\t\t\tsumd[w] -= tmp, sumpd[w] -= tmp * dist(sc2[e], fa[w] ? fa[w] : w);\n\t\td[sc2[e]] = wr; return ans;\n\t}\n\treturn ans;\n}\nint main() {\n\tint i, x, y, z; n = read(); q = read(); Log[0] = -1;\n\tFor (i, 1, n << 1) Log[i] = Log[i >> 1] + 1;\n\tFor (i, 1, n - 1)\n\t\tx = read(), y = read(), z = read(), add_edge(x, y, z);\n\tdfs(1, 0); initRMQ(); dfs3(1, 0); while (q--) {\n\t\tx = read(); y = read(); change(x, y);\n\t\tprintf(\"%lld\\n\", query(sumpd[Root], Root));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1522476463,
        "uid": 29936,
        "name": "xyz32768",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3345 \u3010[ZJOI2015]\u5e7b\u60f3\u4e61\u6218\u7565\u6e38\u620f\u3011"
    },
    {
        "content": "\u5176\u4ed6\u9898\u89e3\u90fd\u662f\u52a8\u6001\u70b9\u5206\u6cbb\uff0c\u8fd9\u7bc7\u9898\u89e3\u662f\u7528**\u7ebf\u6bb5\u6811+\u6811\u5256**\u7684\u3002\n\n\u6b22\u8fce\u6765\u6211\u7684Blog\u6765\u770b\uff1a[[ZJOI2015] \u5e7b\u60f3\u4e61\u6218\u7565\u6e38\u620f](https://baka.online/zjoi2015-%e5%b9%bb%e6%83%b3%e4%b9%a1%e6%88%98%e7%95%a5%e6%b8%b8%e6%88%8f/)\n\n\n---\n\n\u5148\u4e0a\u4e2a\u590d\u6742\u5ea6\u5427\uff1a\u4fee\u6539$O(nlog^2n)$\uff0c\u67e5\u8be2$O(nlogn)$\uff0c\u622a\u6b62\u5230\u53d1\u9898\u89e3\u662f\u6700\u4f18\u89e3\u7b2c\u4e8c\u540d\n\n**\u4e00\u4e2a\u7ed3\u8bba\uff1a \u672c\u9898\u4e2d\uff0c\u91cd\u5fc3\u4f4d\u7f6e\u548c\u70b9\u6743\uff0c\u8fb9\u6743\u65e0\u5173**\n\n\u770b\u8d77\u6765\u4e0d\u53ef\u601d\u8bae\u5427\u3002\n\n\u8bc1\u660e\uff1a\n\n\u6211\u4eec\u53ef\u4ee5\u6362\u4e00\u79cd\u65b9\u5f0f\u8ba1\u7b97\u7b54\u6848\u3002\u679a\u4e3e\u8fb9$edge_i$\uff0c\u8fd9\u6761\u8fb9\u628a\u6811\u5206\u4e3a\u4e24\u90e8\u5206\u3002\u5b83\u7684\u4e24\u7aef\u70b9\u662f$x_i,y_i$\uff0c\u4e24\u5b50\u6811\u7684\u5927\u5c0f\u4e3a$size_x,size_y$\uff0c\u90a3\u4e48\u6709\uff1a\n\n$$ans=\\sum edge_i * size_x * size_y$$\n\n\u901a\u8fc7\u76f4\u63a5\u6784\u9020\u51fa\u91cd\u5fc3\u4f4d\u7f6e\uff0c\u5e76\u8bc1\u660e\u5176\u5b83\u4f4d\u7f6e\u4e0d\u6bd4\u5b83\u66f4\u4f18\u8bc1\u660e\u7ed3\u8bba\uff1a\n\n\u5728\u6811\u4e0a\u9009\u4e00\u4e2a\u70b9\uff0c\u4f7f\u5f97\u5b83\u6700\u5927\u7684\u5b50\u6811\u5927\u5c0f\uff08\u5b50\u6811\u5185\u519b\u961f\u6570\u91cf\uff09\u6700\u5c0f\u3002\u8fd9\u4e2a\u70b9\u5c31\u662f\u91cd\u5fc3\u3002\n\n\u53ef\u4ee5\u4efb\u9009\u4e00\u4e2a\u5176\u5b83\u70b9\uff0c\u8ba1\u7b97\u51fa\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u8865\u7ed9\u7ad9\u7684\u7b54\u6848\u3002\u8003\u8651\u628a\u9009\u62e9\u7684\u70b9\u5411\u91cd\u5fc3\u79fb\u52a8\u4e00\u6761\u8fb9\u5bf9\u7b54\u6848\u7684\u5f71\u54cd\u3002\u8fd9\u6761\u8fb9\u662f$edge$\uff0c\u4e24\u8fb9\u4e3a$x,y$\uff0c\u5927\u5c0f\u5206\u522b\u4e3a$size_x,size_y$\u3002\u4ece$x$\u8d70\u5230$y$\u3002\n\n\u7531\u63a8\u5bfc\u51fa\u7684\u65b0\u8ba1\u7b97\u5f0f\uff0c\u53ea\u6709\u79fb\u52a8\u7ecf\u8fc7\u7684\u8fd9\u6761\u8fb9\u5bf9\u7b54\u6848\u4ea7\u751f\u7684\u8d21\u732e\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u662f\uff1a\n\n$$-edge * size_y + edge * size_x$$\n\n\u663e\u7136\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u70b9\u4e0d\u5728\u6211\u4eec\u9009\u51fa\u7684\u91cd\u5fc3\uff0c$size_y$\u4e0d\u53ef\u80fd\u5c0f\u4e8e$size_x$\uff0c\u5373\uff0c\u8ba9\u7b54\u6848\u66f4\u4f18\u4e86\u3002\n\n\u5b9e\u9645\u4e0a\uff0c\u8fd9\u4e2a\u70b9\u548c\u666e\u901a\u4e0d\u5e26\u6743\u6811\u7684\u91cd\u5fc3\u4f4d\u7f6e\u4e00\u6837\u3002\n\n**\u5feb\u901f\u627e\u5230\u91cd\u5fc3**\n\n\u5728\u6811\u4e0a\u627e\u5230\u4e00\u4e2a\u70b9$x$\uff0c\u6ee1\u8db3$size_{root} \\leq size_x * 2$\uff0c\u4e14$x$\u6700\u6df1\u3002\n\n\u8fd9\u4e2a\u7ed3\u5408\u666e\u901a\u6811\u91cd\u5fc3\u6027\u8d28\u5f88\u5bb9\u6613\u5f97\u51fa\u3002\n\n\u7ebf\u6bb5\u6811\u53f6\u5b50\u7ef4\u62a4\u5b50\u6811\u5927\u5c0f\uff0c\u5176\u4ed6\u8282\u70b9\u7ef4\u62a4\u7ebf\u6bb5\u6811\u4e0a\u5b50\u8282\u70b9\u5927\u5c0f\u6700\u5927\u503c\u3002\u67e5\u8be2\u7684\u65f6\u5019\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u3002\n\n**\u6c42\u7b54\u6848**\n\n$$ans=\\sum dis(x,y) * e(y)$$\n\n$$=\\sum (dis(x,root)+dis(y,root)-2* dis(lca,root)) * e(y)$$\n\n$$=\\sum dis(x,root)* e(y) + \\sum dis(y,root) * e(y) $$\n$$ -2\\sum dis(lca,root) * e(y)$$\n\n\u524d\u4e24\u4e2a\u968f\u4fbf\u7ef4\u62a4\uff0c\u91cd\u70b9\u662f\u7b2c\u4e09\u4e2a\u3002\n\n\u4ee4\u70b9\u6743\u4e3a$w_x=edge(x,fa(x))$\uff0c\u6bcf\u6b21\u4fee\u6539\u4e00\u4e2a\u70b9\u7684\u65f6\u5019\uff0c\u5c31\u628a\u5b83\u5230\u6839\u7684\u5927\u5c0f$size$\u5168\u90e8\u52a0\u4e0a\u4fee\u6539\u7684\u503c\u3002\u67e5\u8be2\u91cd\u5fc3\u5230\u6839\uff0c\u6bcf\u4e2a\u70b9$size_x * w_x$\u3002\n\n\u8fd9\u662f\u56e0\u4e3a\u4e24\u4e2a\u70b9\u5230lca\u5230\u6839\u7684\u8def\u5f84\uff0c\u662f\u4e24\u4e2a\u70b9\u5230\u6839\u7684\u5171\u540c\u8def\u5f84\u3002\n\n```cpp\n#include <bits/stdc++.h>\ntypedef long long LL;\n\ninline int rd() {\n\tint a = 1, b = 0; char c = getchar();\n\twhile (!isdigit(c)) a = c == '-' ? 0 : 1, c = getchar();\n\twhile (isdigit(c)) b = b * 10 + c - '0', c = getchar();\n\treturn a ? b : -b;\n}\n\nconst int N = 1e5 + 233;\nint n, m;\n\nstruct Graph { int to, nxt, cost; } g[N * 2];\nint head[N], tot;\n\ninline void addedge(int x, int y, int c) {\n\tg[++tot].to = y, g[tot].nxt = head[x],\n\tg[tot].cost = c, head[x] = tot;\n}\n\nint fa[N], son[N], size[N], dep[N], dis[N];\nint top[N], id[N], wh[N], wt[N], num;\n\nvoid dfs1(int x) {\n\tfor (int i = head[x]; i; i = g[i].nxt) {\n\t\tint y = g[i].to;\n\t\tif (y != fa[x]) {\n\t\t\tfa[y] = x; dep[y] = dep[x] + 1;\n\t\t\tdis[y] = dis[x] + g[i].cost;\n\t\t\tsize[y] = 1;\n\t\t\tdfs1(y);\n\t\t\tif (size[son[x]] < size[y])\n\t\t\t\tson[x] = y;\n\t\t\tsize[x] += size[y];\n\t\t}\n\t}\n}\n\nvoid dfs2(int x, int topf) {\n\ttop[x] = topf; id[x] = ++num; wh[num] = x;\n\twt[num] = dis[x] - dis[fa[x]];\n\tif (son[x]) {\n\t\tdfs2(son[x], topf);\n\t\tfor (int i = head[x]; i; i = g[i].nxt) {\n\t\t\tint y = g[i].to;\n\t\t\tif (y != fa[x] && y != son[x])\n\t\t\t\tdfs2(y, y);\n\t\t}\n\t}\n}\n\n#define ls(p) p << 1\n#define rs(p) p << 1 | 1\n\nint sz[N * 4], tag[N * 4];\nLL edge[N * 4], sum[N * 4];\n\nvoid build(int p, int L, int R) {\n\tif (L == R) {\n\t\tedge[p] = wt[L];\n\t\treturn;\n\t}\n\tint mid = (L + R) >> 1;\n\tbuild(ls(p), L, mid);\n\tbuild(rs(p), mid + 1, R);\n\tedge[p] = edge[ls(p)] + edge[rs(p)];\n}\n\ninline void pushup(int p) {\n\tsz[p] = std::max(sz[ls(p)], sz[rs(p)]);\n\tsum[p] = sum[ls(p)] + sum[rs(p)];\n}\n\ninline void pushdown(int p) {\n\tif (tag[p]) {\n\t\tsz[ls(p)] += tag[p];\n\t\tsz[rs(p)] += tag[p];\n\t\ttag[ls(p)] += tag[p];\n\t\ttag[rs(p)] += tag[p];\n\t\tsum[ls(p)] += (LL)tag[p] * edge[ls(p)];\n\t\tsum[rs(p)] += (LL)tag[p] * edge[rs(p)];\n\t\ttag[p] = 0;\n\t}\n}\n\nvoid add(int p, int l, int r, int v, int L, int R) {\n\tif (l <= L && r >= R) {\n\t\tsz[p] += v; tag[p] += v;\n\t\tsum[p] += (LL)v * edge[p];\n\t\treturn;\n\t}\n\tpushdown(p);\n\tint mid = (L + R) >> 1;\n\tif (l <= mid)\n\t\tadd(ls(p), l, r, v, L, mid);\n\tif (r > mid)\n\t\tadd(rs(p), l, r, v, mid + 1, R);\n\tpushup(p);\n}\n\nLL query(int p, int l, int r, int L, int R) {\n\tif (l <= L && r >= R)\n\t\treturn sum[p];\n\tpushdown(p);\n\tint mid = (L + R) >> 1;\n\tLL ret = 0;\n\tif (l <= mid)\n\t\tret += query(ls(p), l, r, L, mid);\n\tif (r > mid)\n\t\tret += query(rs(p), l, r, mid + 1, R);\n\treturn ret;\n}\n\ninline int weight() {\n\tint p = 1, L = 1, R = n;\n\twhile (L < R) {\n\t\tpushdown(p);\n\t\tint mid = (L + R) >> 1;\n\t\tif (sz[rs(p)] * 2 >= sz[1])\n\t\t\tL = mid + 1, p = rs(p);\n\t\telse R = mid, p = ls(p);\n\t}\n\treturn wh[L];\n}\n\ninline void range_add(int x, int y) {\n\twhile (top[x] != 1) {\n\t\tadd(1, id[top[x]], id[x], y, 1, n);\n\t\tx = fa[top[x]];\n\t}\n\tadd(1, 1, id[x], y, 1, n);\n}\n\ninline LL range_query(int x) {\n\tLL ret = 0;\n\twhile (top[x] != 1) {\n\t\tret += query(1, id[top[x]], id[x], 1, n);\n\t\tx = fa[top[x]];\n\t}\n\treturn ret + query(1, 1, id[x], 1, n);\n}\n\nLL sum_dis_e, sum_e;\n\ninline LL getans(int x) {\n\treturn sum_dis_e + dis[x] * sum_e - 2 * range_query(x);\n}\n\nint main() {\n\tn = rd(); m = rd();\n\tfor (int i = 1; i < n; ++i) {\n\t\tint x = rd(), y = rd(), c = rd();\n\t\taddedge(x, y, c);\n\t\taddedge(y, x, c);\n\t}\n\t\n\tdfs1(1); dfs2(1, 1);\n\tbuild(1, 1, n);\n\t\n\twhile (m--) {\n\t\tint x = rd(), y = rd();\n\t\tsum_e += y;\n\t\tsum_dis_e += (LL)dis[x] * y;\n\t\trange_add(x, y);\n\t\tprintf(\"%lld\\n\", getans(weight()));\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1564403203,
        "uid": 52068,
        "name": "kai586123",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3345 \u3010[ZJOI2015]\u5e7b\u60f3\u4e61\u6218\u7565\u6e38\u620f\u3011"
    },
    {
        "content": "\u8fd9\u9898\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u505a\uff0c\u4e0d\u8fc7\u6b63\u89e3\u6050\u6015\u662f\u52a8\u6001\u70b9\u5206\u6cbb\uff1f\uff08\u70b9\u5206\u6811\uff09\n\n\u7b80\u5355\u4ecb\u7ecd\u4e0b\u52a8\u6001\u70b9\u5206\u6cbb\u7684\u6982\u5ff5\uff1a\u5728\u70b9\u5206\u6cbb\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e00\u822c\u6211\u4eec\u9762\u5bf9\u7684\u95ee\u9898\u90fd\u662f\u9759\u6001\u7684\u3002\u5982\u679c\u6d89\u53ca\u5230\u4fee\u6539\u8fd9\u7c7b\u7684\u64cd\u4f5c\uff0c\u6211\u4eec\u5c31\u5e0c\u671b\u627e\u5230\u6211\u4eec\u662f\u5982\u4f55\u5904\u7406\u5230\u5f53\u524d\u7684\u4fee\u6539\u70b9\u7684\uff0c\u6362\u800c\u8a00\u4e4b\uff0c\u6211\u4eec\u5e0c\u671b\u8bb0\u5f55\u4e0b\u70b9\u5206\u6cbb\u7684\u8fc7\u7a0b\uff0c\u8fd9\u6837\u53ef\u4ee5\u901a\u8fc7\u722c\u70b9\u5206\u6811\u7b49\u64cd\u4f5c\u6d88\u9664\u5f71\u54cd\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u6211\u4eec\u4fdd\u5b58\u8fd9\u4e2a\u5b50\u6811\u7684dv\u7684\u603b\u548c\u5df2\u7ecf\u628a\u8be5\u8282\u70b9\u4f5c\u4e3a\u70b9\u7684\u7b54\u6848\u503c\n\n\u8fd9\u6837\u5bf9\u4e8e\u4fee\u6539\u80fd\u5728log n\u7684\u65f6\u95f4\u5185\u89e3\u51b3\n\n\n\u5bfb\u627e\u7b54\u6848\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u73b0\u5728\u8282\u70b9\u7684\u5b50\u6811dv\u548c\\*2\u5927\u4e8e\u603b\u8282\u70b9\uff0c\u90a3\u4e48\u5411\u90a3\u4e2a\u65b9\u5411\u8fc7\u53bb\u4e00\u5b9a\u6bd4\u539f\u65b9\u6848\u597d\n\n\n\u6211\u4eec\u5148\u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u82e5\u53d1\u73b0\u7b54\u6848\u5728\u67d0\u68f5\u5b50\u6811\u65f6\uff0c\u6211\u4eec\u8003\u8651\u5982\u4f55\u4f7f\u5176\u513f\u5b50\u8282\u70b9\u7684\u7b54\u6848\u8f6c\u53d8\u4e3a\u6574\u4e2a\u6811\u7684\u7b54\u6848\uff0c\u53ef\u4ee5\u53d1\u73b0\u628a\u9664\u8fd9\u4e2a\u5b50\u6811\u5916\u7684\u6240\u6709\u8282\u70b9\u53ef\u4ee5\u7f29\u6210\u4e00\u4e2a\u8282\u70b9\u5e76\u8fde\u5728\u8fd9\u68f5\u5b50\u6811\u4e0a\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u4e00\u76f4\u8fd9\u6837\u505a\u4e0b\u53bb\uff0c\u627e\u5230\u64cd\u4f5c\u4e4b\u540e\u518d\u628a\u8fd9\u4e9b\u64a4\u9500\u3002\n\n\u4e0b\u9762\u662f\u54b8\u9c7c\u7ed9\u51fa\u7684\u4e00\u4e9b\u5b9e\u73b0\u7ec6\u8282\uff1a\n\n1.\u8ddf\u865a\u6811\u4e00\u6837\uff08\u4e0d\u77e5\u9053\u7684\u53ef\u4ee5\u767e\u5ea6\u201c\u4e16\u754c\u6811\u201d\uff09\uff0c\u8fd9\u4e5f\u662f\u8981\u5728\u7b2c\u4e8c\u68f5\u6811\u4e0a\u5bf9\u539f\u6811\u8fdb\u884c\u7edf\u8ba1\uff0c\u6240\u4ee5\u4e00\u5b9a\u5343\u4e07\u5c0f\u5fc3\u4e0d\u8981\u5f04\u6df7\uff0c\u6211\u5b66\u5230\u7684\u529e\u6cd5\u662f\u5bf9\u539f\u6811\u8fdb\u884c\u5c01\u88c5\uff0c\u8fd9\u6837\u5373\u4f7f\u4e0d\u5c0f\u5fc3\u8bbf\u95ee\u9519\u4e86\u4ed6\u4e5f\u4f1a\u7ed9\u4f60\u63d0\u793a\u3002\n\n2.\u5bf9\u6811\u8fdb\u884c\u6b27\u62c9\u5e8f\u904d\u5386\u53ef\u4ee5\u5229\u7528rmq\u5728O(1)\u67e5\u8be2LCA\uff0c\u8fd9\u70b9\u4e5f\u662f\u7279\u522b\u597d\u61c2\u7684\u3002\uff08\u53ea\u4f1a\u6811\u5256\u7684\u849f\u84bb\u745f\u745f\u53d1\u6296\uff09\n\n\u4ee3\u7801\u603b\u5171113\u884c\uff0c\u53ef\u8bfb\u6027\u4e5f\u4e0d\u9519\u5462~~\n\n\u5e94\u8be5\u662f\u76ee\u524d\u6bd4\u8f83\u80fd\u770b\u7684\u70b9\u5206\u6811\u4ee3\u7801\u4e4b\u4e00\u5427\uff08\u81f3\u5c11\u6211\u5728CSDN\u4e4b\u7c7b\u7684\u5730\u65b9\u627e\u5230\u7684\u90fd\u5f88\u957f\u5440\uff09\n\n```cpp\n#include<bits/stdc++.h>\n#define N 100010\ntypedef long long ll;\nusing namespace std;\nint n,m,x,y,z,size[N],tot;\nint head[N],sum,rt,f[N],vis[N],par[N],cnt,lg[N<<2];\nll dis1[N],dis2[N],sumv[N];\nstruct Edge{int u,v,next,w;}G[2*N];\nvoid Addedge(int u,int v,int w){\n    G[++tot].u=u;G[tot].v=v;G[tot].w=w;G[tot].next=head[u];head[u]=tot;\n}\nstruct Orinal_Tree{\n    int head[N],cnt,tot;\n    int st[N<<2][21],dis[N],tpos[N<<1];\n    struct edge{int u,v,next,w;}E[2*N];\n    inline void addedge(int u,int v,int w){\n        E[++tot].u=u;E[tot].v=v;E[tot].w=w;E[tot].next=head[u];head[u]=tot;\n        E[++tot].u=v;E[tot].v=u;E[tot].w=w;E[tot].next=head[v];head[v]=tot;\n    }\n    inline int getdis(int u,int v){\n        if(tpos[u]>tpos[v])swap(u,v);\n        int k=lg[tpos[v]-tpos[u]+1];\n        return dis[u]+dis[v]-2*min(st[tpos[u]][k],st[tpos[v]-(1<<k)+1][k]);\n    }\n    void dfs(int u,int fa){\n        st[++cnt][0]=dis[u];tpos[u]=cnt;\n        for(int i=head[u];i;i=E[i].next){\n            int v=E[i].v;if(v==fa)continue;\n            dis[v]=dis[u]+E[i].w;\n            dfs(v,u);\n            st[++cnt][0]=dis[u];\n        }\n    }\n    inline void initrmq(){\n        memset(tpos,0,sizeof(tpos));cnt=0;tot=0;dis[1]=0;\n        dfs(1,0);\n        for(int j=1;(1<<j)<=cnt;j++)\n        for(int i=1;i+(1<<j)-1<=cnt&&i<=cnt;i++)\n        st[i][j]=min(st[i][j-1],st[i+(1<<(j-1))][j-1]);\n    }\n}T;\nvoid getroot(int u,int fa){\n    size[u]=1;f[u]=0;\n    for(int i=T.head[u];i;i=T.E[i].next){\n        int v=T.E[i].v;if(vis[v]||v==fa)continue;\n        getroot(v,u);size[u]+=size[v];\n        f[u]=max(f[u],size[v]);\n    }\n    f[u]=max(f[u],sum-size[u]);\n    if(f[u]<f[rt])rt=u;\n}\nvoid work(int u,int fa){\n    vis[u]=1;par[u]=fa;//printf(\"%d\\n\",u);puts(\"!!!\");\n    for(int i=T.head[u];i;i=T.E[i].next){\n        int v=T.E[i].v;if(vis[v])continue;\n        sum=size[v];f[0]=size[v];rt=0;\n        getroot(v,0);Addedge(u,rt,v);\n        work(rt,u);\n    }\n}\ninline void ins(int u,int val){\n    sumv[u]+=val;\n    for(int i=u;par[i];i=par[i]){\n        int dist=T.getdis(par[i],u);\n        dis1[par[i]]+=(ll)dist*val;\n        dis2[i]+=(ll)dist*val;\n        sumv[par[i]]+=val;\n    }\n}\ninline ll calc(int u){\n    ll ans=dis1[u];\n    for(int i=u;par[i];i=par[i]){\n        int dist=T.getdis(par[i],u);\n        ans+=dis1[par[i]]-dis2[i];\n        ans+=dist*(sumv[par[i]]-sumv[i]);\n    }\n    return ans;\n}\nll query(int u){\n    ll ans=calc(u);//printf(\"%lld\\n\",ans);\n    for(int i=head[u];i;i=G[i].next){\n        ll tmp=calc(G[i].w);\n        if(tmp<ans)return query(G[i].v);\n    }\n    return ans;\n}\ninline int read(){\n    int f=1,x=0;char ch;\n    do{ch=getchar();if(ch=='-')f=-1;}while(ch<'0'||ch>'9');\n    do{x=x*10+ch-'0';ch=getchar();}while(ch>='0'&&ch<='9');\n    return f*x;\n}\nvoid init(){\n    memset(dis1,0,sizeof(dis1));\n    memset(dis2,0,sizeof(dis2));\n    memset(sumv,0,sizeof(sumv));\n    lg[0]=-1;\n    for (int i=1;i<(N<<2);i++)lg[i]=lg[i>>1]+1;\n    n=read();m=read();//printf(\"%d %d\\n\",n,m);\n    for (int i=1;i<n;i++)\n    x=read(),y=read(),z=read(),T.addedge(x,y,z);\n}\nint main(){\n    init();T.initrmq();sum=n;f[0]=n;\n    rt=0;getroot(1,0);\n    int LastOrder=rt;work(rt,0);rt=LastOrder;\n    //for(int i=1;i<=20;i++)//printf(\"%d \",T.head[i]);puts(\"\");\n    for(int i=1;i<=m;i++){\n        x=read();y=read();ins(x,y);\n        printf(\"%lld\\n\",query(rt));\n    }\n    return 0;\n}\n```",
        "postTime": 1493459639,
        "uid": 2978,
        "name": "zcysky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3345 \u3010[ZJOI2015]\u5e7b\u60f3\u4e61\u6218\u7565\u6e38\u620f\u3011"
    },
    {
        "content": "\u770b\u4e86\u4e00\u4e0a\u5348\u7684\u9898\u89e3\u624d\u52c9\u5f3a\u770b\u61c2\uff0c\u7136\u540e\u8fd8\u6ca1\u6709\u6309\u7167\u6211\u770b\u7684\u90a3\u7bc7\u9898\u89e3\u7684\u601d\u8def\u53bb\u5199\u3002\u3002\u3002\u3002\n\n\u9996\u5148\u8003\u8651\u8981\u5e72\u4ec0\u4e48\uff0c\u4e0d\u96be\u53d1\u73b0\u8fd9\u5c31\u662f\u6c42\u4e00\u4e2a\u5e26\u6743\u91cd\u5fc3\uff0c\u8fd9\u4e00\u90e8\u5206\u7684\u63a8\u5bfc\u5927\u90e8\u5206\u9898\u89e3\u90fd\u8bf4\u7684\u5f88\u660e\u767d\u6240\u4ee5\u4e0d\u518d\u8be6\u7ec6\u53d9\u8ff0\u3002\n\n\u6709\u4e00\u4e2a\u66b4\u529b\u7684\u505a\u6cd5\u662f\u4ee5\u4e00\u4e2a\u70b9\u4e3a\u6839\uff0c\u5411\u513f\u5b50\u4e0d\u65ad\u6269\u5c55\uff0c\u8fd9\u6837\u663e\u7136\u4f1aTLE\uff0c\u8003\u8651\u600e\u4e48\u4f18\u5316\uff0c\u5bb9\u6613\u53d1\u73b0\u8fd9\u6837\u505a\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u548c\u6700\u5927\u6df1\u5ea6\u6709\u5173\u7cfb\u7684\uff0c\u53ea\u8981\u63a7\u5236\u597d\u6700\u5927\u6df1\u5ea6\u90a3\u4e48\u5c31\u53ef\u4ee5\u7ee7\u7eed\u4f7f\u7528\u4e0a\u8ff0\u7684\u66b4\u529b\u7b97\u6cd5\u3002\n\n\u5982\u679c\u5f53\u524d\u70b9\u4e0d\u662f\u5e26\u6743\u91cd\u5fc3\uff0c\u90a3\u4e48\u5b58\u5728\u4e14\u4ec5\u5b58\u5728\u4e00\u4e2a\u513f\u5b50\u4f7f\u5f97\u4ece\u5f53\u524d\u70b9\u8d70\u5411\u5b83\u4f1a\u66f4\u4f18\uff0c\u800c\u786e\u5b9a\u4e86\u8fd9\u4e2a\u513f\u5b50\u4e4b\u540e\uff0c\u5e26\u6743\u91cd\u5fc3\u4e00\u5b9a\u5728\u8fd9\u4e2a\u513f\u5b50\u7684\u5b50\u6811\u91cc\u8fb9\uff0c\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528\u70b9\u5206\u6cbb\uff0c\u7531\u4e8e\u6709\u591a\u7ec4\u8be2\u95ee\uff0c\u8003\u8651\u4f7f\u7528i\u70b9\u5206\u6811\u3002\n\n\u7528\u70b9\u5206\u6811\u505a\u4e00\u4e9b\u4e8b\u60c5\u5c31\u6bd4\u8f83\u65b9\u4fbf\uff0c\u9996\u5148\u70b9\u5206\u6811\u7684\u6700\u5927\u6df1\u5ea6\u662f $log$ \u7ea7\u522b\u7684\uff0c\u4e8e\u662f\u53ef\u4ee5\u66b4\u529b\u5f80\u4e0b\u8d70\uff0c\u5176\u6b21\u53ef\u4ee5\u901a\u8fc7\u66b4\u529b\u8df3\u7236\u4eb2\u6765\u505a\u5230\u66f4\u65b0\u6570\u7ec4\uff0c\u4f46\u662f\u7f3a\u70b9\u5c31\u662f\u8d70\u5411\u4e00\u4e2a\u513f\u5b50\u7684\u5b50\u6811\u4e4b\u540e\u4f1a\u4e22\u5931\u6389\u67d0\u4e9b\u4fe1\u606f\uff0c\u5927\u90e8\u5206\u9898\u89e3\u662f\u901a\u8fc7\u5c06\u4f4d\u4e8e\u8be5\u70b9\u5b50\u6811\u5916\u7684\u4fe1\u606f\u5408\u5e76\u5230\u90a3\u4e2a\u513f\u5b50\u4e0a\u6700\u540e\u5728\u56de\u6eaf\u65f6\u64a4\u9500\uff0c\u672c\u8d28\u4e0a\u662f\u505a\u4e86\u4e00\u4e2a\u6362\u6839\uff0c\u7531\u4e8ewtcl\u4e86\u82b1\u4e86\u5f88\u957f\u65f6\u95f4\u624d\u7406\u89e3\u5e76\u4e14\u53d1\u73b0\u5b9e\u73b0\u7565\u6709\u56f0\u96be\u6240\u4ee5\u60f3\u5230\u4e86\u53e6\u5916\u4e00\u4e2a\u89e3\u6cd5\u3002\n\n\u56e0\u4e3a\u6700\u4f18\u51b3\u7b56\u513f\u5b50\u5982\u679c\u5b58\u5728\u90a3\u4e48\u53ea\u4f1a\u5b58\u5728\u4e00\u4e2a\uff0c\u6240\u4ee5\u53ef\u4ee5\u66b4\u529b\u7b97\u51fa\u6bcf\u4e00\u4e2a\u513f\u5b50\u4f5c\u4e3a\u6839\u65f6\u7684\u7b54\u6848\u4e0e\u5f53\u524d\u70b9\u4f5c\u4e3a\u6839\u65f6\u7684\u7b54\u6848\u505a\u6bd4\u8f83\uff0c\u70b9\u5206\u6811\u7684\u6df1\u5ea6\u662f $log$ \u7684\u6240\u4ee5\u66b4\u529b\u8df3\u7236\u4eb2\u505a\u53ef\u884c\u3002\n\n\u95ee\u9898\u8f6c\u5316\u6210\u5df2\u77e5\u4e00\u4e2a\u70b9\u6c42\u6811\u4e0a\u6240\u6709\u70b9\u5230\u8fd9\u4e2a\u70b9\u7684\u5e26\u6743\u8ddd\u79bb\uff0c\u51e0\u4e4e\u5c31\u6210\u4e86\u70b9\u5206\u6811\u7684\u6a21\u677f\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(nlog^2n\\times 20)$\uff0c\u53ef\u4ee5\u901a\u8fc7\uff0c\u4f46\u662f\u8c8c\u4f3c\u5e38\u6570\u6709\u70b9\u5927\u6216\u8005\u662f\u6211\u5199\u4e11\u4e86\uff0c\u7531\u4e8e\u4f7f\u7528\u4e86\u4e0d\u5c11 $STL$ \u6240\u4ee5\u4e0d\u5f00 $O2$ \u4f1a $T$ \u98de\u3002\n\n```cpp\n\n\n#include<cstdio>\n#include<vector>\n#include<cstring>\n#include<algorithm>\n#include<unordered_map>\nusing namespace std;\nconst int N=1e5+10;\n#define rint register int\n#define rll register long long\ntypedef long long ll;\nvector<int> vec[N];\nunordered_map<int,ll> dis[N];\nstruct Edge{\n\tint to,nxt,val;\n}e[N<<1];\nint h[N],idx;\nvoid Ins(rint a,rint b,rint c){\n\te[++idx].to=b;e[idx].nxt=h[a];\n\th[a]=idx;e[idx].val=c;\n}\nint Max[N],siz[N],Tsiz,rt;\nbool vis[N];\nvoid getrt(rint u,rint fa){\n\tsiz[u]=1;Max[u]=0;\n\tfor(rint i=h[u];i;i=e[i].nxt){\n\t\trint v=e[i].to;\n\t\tif(v==fa||vis[v])continue;\n\t\tgetrt(v,u);\n\t\tsiz[u]+=siz[v];\n\t\tMax[u]=max(Max[u],siz[v]);\n\t}\n\tMax[u]=max(Max[u],Tsiz-siz[u]);\n\tif(Max[rt]>Max[u])rt=u;\n}\nvoid calc(rint u,rint fa,rint r){\n\tsiz[u]=1;\n\tfor(rint i=h[u];i;i=e[i].nxt){\n\t\trint v=e[i].to;\n\t\tif(v==fa||vis[v])continue;\n\t\tdis[r][v]=dis[r][u]+e[i].val;\n\t\tcalc(v,u,r);\n\t\tsiz[u]+=siz[v];\n\t}\n}\nint pre[N],fa[N];\nll sd[N],s1[N],s2[N];\nvoid dfs(rint x){\n\tvis[x]=1;dis[x][x]=0;\n\tcalc(x,0,x);\n\tfor(rint i=h[x];i;i=e[i].nxt){\n\t\trint v=e[i].to;\n\t\tif(vis[v])continue;\n\t\tTsiz=siz[v];rt=0;\n\t\tgetrt(v,x);\n\t\tvec[x].push_back(rt);\n\t\tfa[rt]=x,pre[rt]=v;\n\t\tdfs(rt);\n\t}\n}\n// sd The sumd of subtree\n// s1 The wsum to np\n// s2 The wsum to fa-np\nvoid update(rint x,rint v){\n\tfor(rint i=x;i;i=fa[i]){\n\t\tsd[i]+=v;\n\t\ts1[i]+=dis[i][x]*v;\n\t\tif(fa[i])s2[i]+=dis[fa[i]][x]*v;\n\t}\n}\nll get(rint x){\n\trll res=s1[x];\n\tfor(rint i=x;fa[i];i=fa[i])\n\t\tres+=s1[fa[i]]-s2[i]+dis[fa[i]][x]*(sd[fa[i]]-sd[i]);\n\treturn res;\n}\nll query(rint x){\n\trll now=get(x);\n\tfor(rint v:vec[x]){\n\t\trll wv=get(pre[v]);\n\t\tif(wv<now)return query(v);\n\t}\n\treturn now;\n}\nint main(){\n//\tfreopen(\"data.in\",\"r\",stdin);\n\trint n,m;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(rint i=2;i<=n;i++){\n\t\trint a,b,c;\n\t\tscanf(\"%d%d%d\",&a,&b,&c);\n\t\tIns(a,b,c);Ins(b,a,c);\n\t}\n\tMax[0]=1e9;\n\tTsiz=n;\n\tgetrt(1,0);\n\trint st=rt;\n\tdfs(rt);\n\twhile(m--){\n\t\trint x,e;\n\t\tscanf(\"%d%d\",&x,&e);\n\t\tupdate(x,e);\n\t\tprintf(\"%lld\\n\",query(st));\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1610530323,
        "uid": 305262,
        "name": "Su_Zipei",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3345 \u3010[ZJOI2015]\u5e7b\u60f3\u4e61\u6218\u7565\u6e38\u620f\u3011"
    },
    {
        "content": "\u70b9\u5206\u6811\u4e0a\u4e8c\u5206\u627e\u5e26\u6743\u91cd\u5fc3\u2026\u2026\n\n\u5199\u8d77\u6765\u8fd8\u662f\u975e\u5e38\u7cbe\u795e\u6c61\u67d3\u7684\n\n\u53e6\u5916\u6211\u89c9\u5f97\u8fd9\u4e2a\u5e38\u6570\u975e\u5e38\u7684\u9b54\u5e7b\uff0c\u4e3a\u4ec0\u4e48$O(nlog^2n)$\u5c31\u8dd1\u4e86500ms\u554a\u2026\u2026\n\n___________________\n\n# \u672c\u9898\u9898\u89e3\n\n### \u524d\u7f6e\u829d\u58eb:\u70b9\u5206\u6811\n\n\u9996\u5148\u4f60\u5f97\u786e\u4fdd\u4f60\u4e86\u89e3\u70b9\u5206\u6811\u662f\u4ec0\u4e48\u4ee5\u53ca\u5982\u4f55\u5728\u70b9\u5206\u6811\u4e0a\u67e5\u627e\u4e00\u4e2a\u70b9\u5230\u6811\u4e0a\u6240\u6709\u70b9\u7684\u8ddd\u79bb\u3002\u53e6\u5916\u4f60\u9700\u8981\u6ce8\u610f\u7684\u662f\u70b9\u5206\u6811\u552f\u4e8c\u7684\u6027\u8d28\u662f\u70b9\u5206\u6811\u4e0a\u4e24\u70b9\u7684lca\u4e00\u5b9a\u5728\u539f\u6811\u4e24\u70b9\u7684\u8def\u5f84\u4e0a\u4ee5\u53ca\u70b9\u5206\u6811\u7684\u4e00\u4e2a\u5b50\u6811\u603b\u662f\u539f\u6811\u4e0a\u7684\u4e00\u4e2a\u8054\u901a\u5757\uff0c\u9664\u6b64\u4e4b\u5916\u70b9\u5206\u6811\u548c\u539f\u6811\u7684\u8054\u7cfb\u76f8\u5f53\u7684\u5fae\u5c0f\uff0c\u57fa\u672c\u53ef\u4ee5\u770b\u505a\u6ca1\u6709\u8054\u7cfb\uff0c\u6240\u4ee5\u5728\u505a\u70b9\u5206\u6811\u7684\u9898\u7684\u65f6\u5019\u4e00\u5b9a\u4e0d\u8981\u60f3\u5f53\u7136\n\n___________________________________\n\n\u90a3\u4e48\u4e0b\u9762\u6211\u4eec\u6765\u8bb2\u89e3\u4e00\u4e0b\u70b9\u5206\u6811\u4e0a\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u6280\u5de7\uff1a\u70b9\u5206\u6811\u4e0a\u4e8c\u5206\u5bfb\u627e\u67d0\u79cd\u5173\u952e\u70b9\n\n\u90a3\u4e48\u5c31\u4ee5\u8fd9\u9053\u9898\u4e3a\u4f8b\u5427\n\n\u9996\u5148\u53ef\u4ee5\u8bc1\u660e\u7684\u662f\u6211\u4eec\u7684\u8865\u7ed9\u70b9\u5c31\u662f\u6811\u4e0a\u7684\u5e26\u6743\u91cd\u5fc3\uff0c\u5373\u5220\u6389\u8fd9\u4e2a\u70b9\u4e4b\u540e\u5404\u4e2a\u5b50\u6811\u7684\u5e26\u6743size\u81f3\u591a\u4e3a\u539f\u6811\u4e0a\u603bsize\u7684\u4e00\u534a\u3002\n\n\u8bc1\u660e\u8fc7\u7a0b\u7684\u8bdd\u53ef\u4ee5\u8003\u8651\u8fd9\u6837\u4e00\u4e2a\u6709\u70b9\u8d2a\u5fc3\u7684\u8bc1\u660e\u65b9\u5f0f\n\n\u5047\u5982\u8bf4\u6211\u4eec\u9009\u62e9\u7684\u70b9\u4e0d\u662f\u5e26\u6743\u91cd\u5fc3\u800c\u662f\u53e6\u5916\u4e00\u4e2a\u5176\u4ed6\u7684\u70b9\uff0c\u90a3\u4e48\u53ef\u4ee5\u8bc1\u660e\u8fd9\u4e2a\u70b9\u4e00\u5b9a\u6709\u4e00\u4e2a\u5e26\u6743size\u8fc7\u534a\u7684\u5b50\u6811\uff0c\u6b64\u65f6\u6211\u4eec\u5c06\u51b3\u7b56\u70b9\u632a\u5230\u8fd9\u4e2a\u8fc7\u534a\u5b50\u6811\u7684\u6839\u4e0a\u6211\u4eec\u4f1a\u53d1\u73b0\u6211\u4eec\u7684\u4ee3\u4ef7\u53d8\u5316\u91cf\u662f$val\u00d7(tot-2size)$\u5176\u4e2dsize\u662f\u6211\u4eec\u8fd9\u4e2a\u8fc7\u534a\u5b50\u6811\u7684size\n\n\u53d1\u73b0\u8fd9\u4e2a\u53d8\u5316\u91cf\u603b\u662f\u8d1f\u7684\uff0c\u53ea\u6709\u5e26\u6743\u91cd\u5fc3\u4e0d\u4f1a\u5b58\u5728\u8fd9\u4e2a\u53ef\u4ee5\u632a\u8fc7\u53bb\u7684\u70b9\n\n\u95ee\u9898\u6765\u4e86\u4f1a\u4e0d\u4f1a\u6709\u591a\u4e2a\u5e26\u6743\u91cd\u5fc3\uff1f\u7b54\u6848\u662f\u5426\u5b9a\u7684\uff0c\u5e26\u6743\u91cd\u5fc3\u53ea\u6709\u4e00\u4e2a\uff0c\u56e0\u6b64\u6211\u4eec\u8d2a\u5fc3\u7684\u8bc1\u660e\u4e86\u5e26\u6743\u91cd\u5fc3\u5c31\u662f\u6700\u4f18\u51b3\u7b56\u70b9\n\n\u5f53\u7136\u4e0a\u8ff0\u7684\u8bc1\u660e\u6211\u4eec\u4e5f\u7ed9\u51fa\u4e86\u4e00\u79cd\u66b4\u529b\u7b97\u6cd5\uff0c\u968f\u4fbf\u627e\u6811\u4e0a\u7684\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u8d77\u59cb\u70b9\uff0c\u7136\u540e\u6bcf\u6b21\u8d2a\u5fc3\u7684\u9009\u53d6\u4e00\u6761\u8fb9\u79fb\u52a8\uff0c\u6700\u7ec8\u603b\u662f\u53ef\u4ee5\u627e\u5230\u8fd9\u4e2a\u5e26\u6743\u91cd\u5fc3\u7684\n\n\u5f53\u7136\u4f60\u7684\u590d\u6742\u5ea6\u663e\u7136\u662f\u5355\u6b21$O(n)$\u7684\u5982\u679c\u5728\u94fe\u4e0a\u7684\u8bdd\u4f60\u4f1a\u53d1\u73b0\u4ed6\u6709\u70b9\u50cf\u7ebf\u6027\u641c\u7d22\u7b97\u6cd5\uff0c\u56e0\u6b64\u6211\u4eec\u8003\u8651\u5427\u8fd9\u4e2a\u7ebf\u6027\u641c\u7d22\u7b97\u6cd5\u6539\u6210\u4e8c\u5206\u7b97\u6cd5\n\n\u4f46\u662f\u6211\u4eec\u4f1a\u53d1\u73b0\u6211\u4eec\u4e4b\u524d\u7684\u8d2a\u5fc3\u7b97\u6cd5\u5931\u6548\u4e86\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u80fd\u8003\u8651\u7b54\u6848\u7684\u6539\u53d8\u91cf\u6765\u51b3\u5b9a\u6211\u4eec\u5411\u70b9\u5206\u6811\u7684\u54ea\u4e2a\u5b50\u6811\u53bb\u8d70\uff0c\u56e0\u4e3a\u6211\u4eec\u4f1a\u53d1\u73b0\u4e00\u4e2a\u975e\u5e38\u96be\u53d7\u7684\u4e8b\u5b9e\u5c31\u662f\u6211\u4eec\u7684\u70b9\u5206\u6811\u53ef\u80fd\u4f1a\u957f\u6210\u8fd9\u6837(\u539f\u6811\u662f\u4e00\u6761\u94fe)\n\n![](https://cdn.luogu.com.cn/upload/pic/20101.png)\n\n\u56fe\u4e2d\u7eff\u8272\u70b9\u662f\u6211\u4eec\u7684\u6700\u4f18\u51b3\u7b56\u70b9\n\n\u4f46\u662f\u6211\u4eec\u4ece\u70b9\u5206\u6811\u7684\u6811\u6839\u51fa\u53d1\u7684\u65f6\u5019\u5c06\u4f1a\u7ecf\u8fc7\u7ea2\u8272\u7684\u8fb9\uff0c\u8fd9\u4e00\u6b65\u7684\u51b3\u7b56\u662f\u975e\u5e38\u52a3\u7684\u2026\u2026\uff0c\u4f46\u662f\u4e3a\u4e86\u53ef\u4ee5\u6210\u529f\u4e8c\u5206\u6211\u4eec\u53c8\u4e0d\u5f97\u4e0d\u7ecf\u8fc7\u8fd9\u4e2a\u7ea2\u8272\u7684\u8fb9\n\n\u56e0\u6b64\u6211\u4eec\u5148\u5728\u70b9\u5206\u6811\u4e0a\u4e8c\u5206\u51fa\u6700\u4f18\u51b3\u7b56\u70b9\u7136\u540e\u6700\u540e\u4f7f\u7528\u70b9\u5206\u6811\u8be2\u95ee\u8fd9\u4e2a\u6700\u4f18\u51b3\u7b56\u70b9\u5230\u6811\u4e0a\u6240\u6709\u70b9\u7684\u5e26\u6743\u8ddd\u79bb\u5373\u53ef\n\n\u90a3\u4e48\u5047\u8bbe\u6211\u4eec\u4ece\u70b9\u5206\u6811\u7684\u6839\u51fa\u53d1\u7136\u540e\u5bfb\u627e\u6700\u4f18\u7684\u51b3\u7b56\u70b9\u5728\u54ea\u4e00\u4e2a\u5b50\u8054\u901a\u5757\u5f53\u4e2d\uff0c\u90a3\u4e48\u663e\u7136\u5728\u6839\u7684\u65f6\u5019\u51b3\u7b56\u5341\u5206trival\uff0c\u627esize\u6700\u5927\u7684\u5b50\u8054\u901a\u5757\u8fdb\u53bb\u5c31\u884c\u4e86,\u5bf9\u4e8e\u6bcf\u4e2a\u5b50\u8054\u901a\u5757\u7684size\u6211\u4eec\u53ef\u4ee5\u6bcf\u4e2a\u8282\u70b9\u66b4\u529b\u5f00\u4e00\u4e2avector\u8bb0\u5f55\n\n\u95ee\u9898\u6765\u4e86\uff0c\u6211\u4eec\u5728\u9012\u5f52\u4e0b\u53bb\u7684\u65f6\u5019\u6211\u4eec\u4e0d\u80fd\u7b80\u5355\u7684\u627esize\u6700\u5927\u7684\u5b50\u8054\u901a\u5757\u8fdb\u53bb\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u8003\u8651\u8fd9\u4e2a\u5b50\u8054\u901a\u5757\u5916\u90e8\u70b9\u7684\u5e26\u6743size\n\n\u89e3\u51b3\u65b9\u6cd5\u662f\u628a\u5916\u90e8\u7684\u70b9\u5f3a\u884c\u7f29\u6210\u4e00\u4e2a\u70b9\uff0c\u8bbe\u8fd9\u4e2a\u5916\u90e8\u8054\u901a\u5757\u5bf9\u8fd9\u4e2a\u5b50\u8054\u901a\u5757\u7684\u201c\u63a5\u5165\u70b9\u201d\u4e3ai\uff0c\u7136\u540e\u5f3a\u884c\u589e\u52a0\u8fd9\u4e2a\u63a5\u5165\u70b9\u7684\u70b9\u6743\uff0c\u6ce8\u610f\uff0c\u8fd9\u4e2a\u63a5\u5165\u70b9\u6709\u975e\u5e38\u5927\u7684\u6982\u7387\u4e0d\u662f\u5b50\u91cd\u5fc3\uff0c\u6bd4\u5982\u4e0a\u8fb9\u8fd9\u4e2a\u56fe\uff0c\u7eff\u8272\u70b9\u662f\u6839\u8282\u70b9\u5bf9\u4e8e\u5de6\u513f\u5b50\u7684\u63a5\u5165\u70b9\uff0c\u4f46\u662f\u7eff\u8272\u70b9\u4e0d\u662f\u5de6\u513f\u5b50\u7684\u5b50\u91cd\u5fc3\n\n\u4ec0\u4e48\uff1f\u600e\u4e48\u63a5\u5165\u70b9\u6743\uff1f\u70b9\u5206\u6811\u4e0a\u66b4\u529b\u4fee\u6539\u5373\u53ef\n\n\u90a3\u4e48\u95ee\u9898\u53c8\u6765\u7684\uff0c\u6211\u4eec\u600e\u4e48\u6d88\u9664\u8fd9\u4e2a\u70b9\u7684\u5f71\u54cd\uff1f\u4f60\u628a\u4e8c\u5206\u51fd\u6570\u5199\u6210\u9012\u5f52\u7684\u51fd\u6570\uff0c\u7136\u540e\u5728\u56de\u6eaf\u7684\u65f6\u5019\u624b\u52a8\u6d88\u6389\u5373\u53ef\u4e86\n\n\u90a3\u4e48\u6211\u4eec\u63a5\u4e0b\u6765\u8981\u505a\u5230\u5c31\u662f\u8be2\u95ee\u51b3\u7b56\u5230\u6811\u4e0a\u5176\u4ed6\u6240\u6709\u70b9\u7684\u8ddd\u79bb\u4e86\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u65b9\u4fbf\u7684\u4f7f\u7528\u70b9\u5206\u6811\u6765\u66b4\u529b\u8bb0\u5f55\n\n\u4ee3\u7801\u5176\u5b9e\u8fd8\u662f\u975e\u5e38\u597d\u5199\u7684~\n\n\u4e0a\u4ee3\u7801~\n\n```C\n// luogu-judger-enable-o2\n#include<cstdio>\n#include<algorithm>\n#include<vector>\nusing namespace std;const int N=1e5+10;typedef long long ll;\nint v[2*N];int x[2*N];int val[2*N];int al[N];int ct;ll wtot;int rt;int itr[N];\nbool book[N];bool cut[N];int siz[N];int dep[N];ll wsiz[N];int hv[N];ll rel[N];\nstruct ed{int v;ll dis;};vector <ed> fa[N];vector <ed> s[N];int n;int m;\ninline void add(int u,int V,int va){v[++ct]=V;x[ct]=al[u];al[u]=ct;val[ct]=va;}\nint dfs1(int u)//\u5904\u7406siz\n{\n    book[u]=true;\n    for(int i=al[u];i;i=x[i])if(!book[v[i]]&&!cut[v[i]])siz[u]+=dfs1(v[i]);\n    book[u]=false;return siz[u];\n}\nint findg(int u,const int& tot)//\u627e\u4e2d\u5fc3\n{\n    book[u]=true;int ret=u;\n    for(int i=al[u];i;i=x[i])\n        if(!book[v[i]]&&!cut[v[i]]&&2*siz[v[i]]>=tot){ret=findg(v[i],tot);break;}\n    book[u]=false;return ret;\n}\nvoid dfs2(int u,const int& g)//\u9884\u5904\u7406\u6811\u4e0a\u8ddd\u79bb\n{\n    book[u]=true;fa[u].push_back((ed){g,dep[u]});\n    for(int i=al[u];i;i=x[i])\n    {\n        if(book[v[i]]||cut[v[i]]){continue;}\n        dep[v[i]]=dep[u]+val[i];dfs2(v[i],g);\n    }book[u]=false;siz[u]=1;return;\n}\ninline void solve(int u,const int& f)//\u70b9\u5206\u6cbb\u5efa\u70b9\u5206\u6811\n{\n    dfs1(u);int g=findg(u,siz[u]);cut[g]=true;itr[g]=u;\n    s[f].push_back((ed){g,0});fa[g].push_back((ed){g,0});\n    for(int i=al[g];i;i=x[i])\n        if(!cut[v[i]]){dep[v[i]]=val[i];dfs2(v[i],g);solve(v[i],g);}rt=g;\n}\ninline void modify(int u,int e)//\u4fee\u6539\u6811\u4e0a\u8ddd\u79bb\u7684\u4fe1\u606f\u4ee5\u53cafather\u7684\u4fe1\u606f\n{\n    wtot+=e;int p=u;rel[u]+=e;\n    for(int i=fa[u].size()-1;i>=0;i--){wsiz[fa[u][i].v]+=e;}\n    for(int i=fa[u].size()-1;i>=0;p=fa[u][i].v,i--)\n    {\n        for(int f=fa[u][i].v,j=0;j<s[f].size();j++)\n        if(s[f][j].v==p){s[f][j].dis+=e*fa[u][i].dis;break;}\n    }\n}\ninline void modi(int u,int e){for(int i=0;i<fa[u].size();i++){wsiz[fa[u][i].v]+=e;}}//\u66b4\u529b\u4fee\u6539\u70b9\u6743\ninline int find(int u)//\u6811\u4e0a\u4e8c\u5206\n{\n    int ret=u;\n    for(int i=0;i<s[u].size();i++)\n    {\n        if(wsiz[s[u][i].v]*2>=wtot)\n        {\n            int del=wsiz[u]-wsiz[s[u][i].v];//\u4fee\u6539\u63a5\u5165\u70b9\u7684\u70b9\u6743\n            modi(itr[s[u][i].v],del);ret=find(s[u][i].v);modi(itr[s[u][i].v],-del);break;\n        }\n    }return ret;\n}\ninline ll query(int u)//\u66b4\u529b\u8df3\u70b9\u5206\u6811\u8be2\u95ee\u6811\u4e0a\u8ddd\u79bb\n{\n    ll ret=0;int p=u;\n    for(int i=fa[u].size()-1;i>=0;p=fa[u][i].v,i--)\n    {\n        ret+=fa[u][i].dis*rel[fa[u][i].v];\n        for(int f=fa[u][i].v,j=0;j<s[f].size();j++)\n            if(s[f][j].v!=p){ret+=fa[u][i].dis*wsiz[s[f][j].v]+s[f][j].dis;}\n    }return ret;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++){siz[i]=1;}\n    for(int i=1,u,v,va;i<n;i++){scanf(\"%d%d%d\",&u,&v,&va);add(u,v,va);add(v,u,va);}\n    solve(1,0);\n    for(int i=1,u,e;i<=m;i++)\n    {scanf(\"%d%d\",&u,&e);modify(u,e);printf(\"%lld\\n\",query(find(rt)));}return 0;//\u62dc\u62dc\u7a0b\u5e8f~\n}\n\n```\n\n\n\n\n\n\n\n\n",
        "postTime": 1527407386,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3345 \u3010[ZJOI2015]\u5e7b\u60f3\u4e61\u6218\u7565\u6e38\u620f\u3011"
    },
    {
        "content": "# \u9898\u610f\n\u6811\u7684\u7ed3\u6784\u4e0d\u53d8,\u6bcf\u4e2a\u70b9\u6709\u70b9\u6743,\u6bcf\u4e00\u6761\u8fb9\u6709\u8fb9\u6743,\u6709\u4fee\u6539\u70b9\u6743\u7684\u64cd\u4f5c,\u8bbe$x$\u4e3a\u6811\u4e2d\u4e00\u70b9.\u6c42$\\sum_idist(x,i)*a[i]$\u7684\u6700\u5c0f\u503c\n# \u5206\u6790\n\u6211\u4eec\u628a\u8865\u7ed9\u7ad9\u53eb\u505a\u51b3\u7b56\u70b9,\u90a3\u4e48\u5047\u8bbe\u5f53\u524d\u6700\u4f18\u51b3\u7b56\u70b9\u4e3a$u$.\u628a$u$\u770b\u4f5c\u6839\u8282\u70b9,\u6211\u4eec\u8003\u8651\u5c06\u51b3\u7b56\u70b9\u4ece$u$\u8f6c\u5230\u513f\u5b50$v$,\u5148\u5047\u8bbe$sum[i]$\u8868\u793a$i$\u5b50\u6811\u5185\u70b9\u6743\u4e4b\u548c,\u90a3\u4e48\u51cf\u5c11\u7684\u4ee3\u4ef7\u5c31\u662f$sum[v]*len(u,v)$,\u589e\u591a\u7684\u4ee3\u4ef7\u5c31\u4e3a$(sum[u]-sum[v])*len(u,v)$\n\n\u6240\u4ee5\u8bf4$v$\u6bd4$u$\u4f18,\u5f53\u4e14\u4ec5\u5f53\n\n$sum[v]*len(u,v)>(sum[u]-sum[v])*len(u,v)$\n\n\u4e5f\u5c31\u662f\n\n$2*sum[v]>sum[u]$\n\n\u4e0d\u96be\u53d1\u73b0,\u6ee1\u8db3\u8fd9\u4e2a\u5f0f\u5b50\u7684\u513f\u5b50\u81f3\u591a\u6709\u4e00\u4e2a.\u90a3\u4e48\u4e00\u4e2a\u66b4\u529b\u7684\u60f3\u6cd5\u5c31\u662f\u6bcf\u6b21\u8be2\u95ee\u4ece\u6839\u5f00\u59cb,\u5f80\u513f\u5b50\u4e0b\u9762\u8d70,\u5982\u679c\u4e0d\u5b58\u5728\u513f\u5b50\u6bd4\u81ea\u5df1\u66f4\u4f18,\u90a3\u4e48\u81ea\u5df1\u5c31\u662f\u51b3\u7b56\u70b9,\u5426\u5219\u5c31\u8fdb\u5165\u6bd4\u81ea\u5df1\u4f18\u7684\u513f\u5b50\u7684\u5b50\u6811.\n\n\u8fd9\u6837\u6bcf\u6b21\u8be2\u95ee\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u770b\u4f3c\u662f$O(n)$\u7684.\u4f46\u662f\u5b9e\u9645\u4e0a\u662f$O(Maxdepth)$\u7684.\u4e8e\u662f\u6211\u4eec\u5c31\u6709\u4e86\u60f3\u6cd5,\u70b9\u5206\u6cbb\u4e0d\u5c31\u662f\u5c06\u6df1\u5ea6\u51cf\u5c0f\u4e3a$O(logn)$\u4e86\u5417?\u6211\u4eec\u628a\u70b9\u5206\u6cbb\u4e2d\u6bcf\u4e00\u4e2a\u91cd\u5fc3\u7684\u7236\u4eb2\u8bbe\u4e3a\u4e0a\u4e00\u5c42\u7684\u91cd\u5fc3,\u5c31\u5728$O(nlogn)$\u7684\u65f6\u95f4\u5185\u6784\u9020\u4e86\u4e00\u68f5\u70b9\u5206\u6811,\u8fd9\u68f5\u6811\u7684\u6df1\u5ea6\u662f$O(logn)$\u7684,\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u5728\u6bcf\u4e2a\u91cd\u5fc3\u4e0a\u7ef4\u62a4\u5b50\u6811\u4fe1\u606f,\u5c31\u53ef\u4ee5\u5728$O(logn)$\u7684\u65f6\u95f4\u5185\u6c42\u51fa\u628a\u4e00\u4e2a\u70b9\u5f53\u4f5c\u51b3\u7b56\u70b9\u7684\u7b54\u6848,\u56e0\u4e3a\u53ef\u4ee5\u8bc1\u660e(\u4f46\u6211\u4e0d\u4f1a)\u7684\u662f\u4e00\u5bf9\u70b9\u5728\u70b9\u5206\u6811\u4e2d\u7684$lca$\u4e00\u5b9a\u5b58\u5728\u4e8e\u5b83\u4eec\u5728\u539f\u6811\u4e0a\u7684\u8def\u5f84,\u90a3\u4e48\u4ed6\u4eec\u95f4\u7684\u8ddd\u79bb\u4e58\u4ee5\u70b9\u6743\u53ea\u9700\u8981\u5229\u7528\u5728$lca$\u4e0a\u7ef4\u62a4\u7684\u5b50\u6811\u4fe1\u606f\u6765\u8ba1\u7b97,\u5177\u4f53\u65b9\u6cd5\u5c31\u662f\u4e00\u4e2a\u70b9\u5728\u70b9\u5206\u6811\u4e0a\u5f80\u6839\u8282\u70b9\u8dd1,\u5728\u8def\u5f84\u4e0a\u7edf\u8ba1\u5c31\u80fd\u6c42\u51fa\u5b83\u4f5c\u4e3a\u51b3\u7b56\u70b9\u7684\u7b54\u6848(\u5177\u4f53\u4e4b\u540e\u770b\u4ee3\u7801).\n\n\u6211\u4eec\u5c06\u6811\u7684\u6df1\u5ea6\u51cf\u5c0f\u5230\u4e86$O(logn)$,\u6240\u4ee5\u6bcf\u6b21\u67e5\u8be2\u53ea\u9700\u8981\u4ece\u6839\u8282\u70b9(\u6574\u68f5\u6811\u7684\u91cd\u5fc3)\u5f00\u59cb,\u770b\u54ea\u4e00\u4e2a(\u539f\u6811\u4e2d)\u513f\u5b50\u66f4\u4f18,\u5982\u679c\u4f18\u5c31\u5f80**\u513f\u5b50\u5bf9\u5e94\u7684\u5b50\u6811\u7684\u91cd\u5fc3**\u4e0a\u8d70.\u6bcf\u4e00\u6b21\u67e5\u8be2\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(20log^2n)$,\u4e00\u4e2a$log$\u662f\u8981\u8d70\u7684\u6df1\u5ea6,\u4e00\u4e2a$log$\u662f\u6c42\u5bf9\u5e94\u7684\u7b54\u6848,$20$\u662f\u56e0\u4e3a\u5bf9\u4e8e\u5f53\u524d\u70b9$u$\u8981\u8ba1\u7b97\u6240\u6709\u513f\u5b50$v$\u4f5c\u4e3a\u51b3\u7b56\u70b9\u7684\u503c,\u9898\u76ee\u4e2d\u4fdd\u8bc1\u4e86\u4e00\u4e2a\u70b9\u5ea6\u6570\u4e0d\u8d85\u8fc7$20$.\u800c\u4e14\u56e0\u4e3a\u662f\u4e00\u65e6\u641c\u5230\u6bd4\u81ea\u5df1\u4f18\u7684\u513f\u5b50\u5c31\u53bb\u90a3\u4e00\u5768\u5b50\u6811\u7684\u91cd\u5fc3,\u4e00\u822c\u662f\u8dd1\u4e0d\u6ee1$20$\u7684.\n\n\u518d\u8003\u8651\u4fee\u6539,\u53ea\u7528\u628a\u81ea\u5df1\u5728\u70b9\u5206\u6811\u4e2d\u7684\u7956\u5148\u4fee\u6539\u5c31\u884c\u4e86,\u6bcf\u4e00\u6b21\u65f6\u95f4\u590d\u6742\u5ea6$O(logn)$\n\n\u5b9e\u9645\u4e0a,\u6bcf\u4e00\u6b21\u8ba1\u7b97/\u4fee\u6539\u90fd\u9700\u8981\u7b97\u4e24\u4e2a\u70b9\u5728\u539f\u6811\u4e0a\u7684\u8ddd\u79bb,\u8981\u6c42$lca$,\u53ef\u4ee5\u7528$dfs$\u5e8f\u9884\u5904\u7406$+O(1)RMQ$,\u4ece\u800c\u6574\u9053\u9898\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(20nlog^2n)$,\u800c\u6211\u6bd4\u8f83\u61d2,\u6c42$lca$\u7528\u7684\u6811\u5256,\u4e25\u683c\u6765\u8bf4\u662f$O(20nlog^3n)$\u7684,\u4f46\u662f\u6811\u5256\u5927\u591a\u6570\u65f6\u5019\u8fbe\u4e0d\u5230$log$,\u800c\u4e14$20$\u4e5f\u8dd1\u4e0d\u6ee1,\u90a3\u4e48\u5c31\u80fd\u8fc7\u4e86...\n\n\u4fee\u6539/\u8ba1\u7b97\u5177\u4f53\u770b\u4ee3\u7801\n# CODE\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\ntypedef long long LL;\ntemplate<typename T>inline void read(T &num) {\n\tchar ch; int flg = 1;\n\twhile((ch=getchar())<'0'||ch>'9')if(ch=='-')flg=-flg;\n\tfor(num=0;ch>='0'&&ch<='9';num=num*10+ch-'0',ch=getchar());\n\tnum*=flg;\n}\nconst int MAXN = 100005;\nint n, q, fir[MAXN], cnt;\nstruct edge { int to, nxt, w; }e[MAXN<<1];\ninline void add(int u, int v, int wt) {\n\te[cnt] = (edge){ v, fir[u], wt }, fir[u] = cnt++;\n\te[cnt] = (edge){ u, fir[v], wt }, fir[v] = cnt++;\n}\nint dis[MAXN], son[MAXN], sz[MAXN], top[MAXN], fa[MAXN], dep[MAXN];\nvoid dfs(int u, int ff) {\n\tdep[u] = dep[fa[u]=ff] + (sz[u]=1);\n\tfor(int i = fir[u], v; ~i; i = e[i].nxt)\n\t\tif((v=e[i].to) != ff) {\n\t\t\tdis[v] = dis[u] + e[i].w;\n\t\t\tdfs(v, u), sz[u] += sz[v];\n\t\t\tif(sz[v] > sz[son[u]]) son[u] = v;\n\t\t}\n}\nvoid dfs2(int u, int tp) {\n\ttop[u] = tp;\n\tif(son[u]) dfs2(son[u], tp);\n\tfor(int i = fir[u], v; ~i; i = e[i].nxt)\n\t\tif((v=e[i].to) != fa[u] && v != son[u])\n\t\t\tdfs2(v, v);\n}\nint lca(int u, int v) { //\n\twhile(top[u] != top[v]) {\n\t\tif(dep[top[u]] < dep[top[v]]) swap(u, v);\n\t\tu = fa[top[u]];\n\t}\n\treturn dep[u] < dep[v] ? u : v;\n}\nint dist(int u, int v) { return dis[u] + dis[v] - 2*dis[lca(u,v)]; }\nint Fa[MAXN], size[MAXN], Size, Minr, root, info[MAXN], CNT;\nstruct EDGE { int to, nxt, rt; }E[MAXN];\ninline void ADD(int u, int v, int rr) {\n\tE[CNT] = (EDGE){ v, info[u], rr }, info[u] = CNT++;\n}\nbool vis[MAXN];\n\nvoid Getrt(int u, int ff) {\n\tsize[u] = 1;\n\tint ret = 0;\n\tfor(int i = fir[u], v; ~i; i = e[i].nxt)\n\t\tif((v=e[i].to) != ff && !vis[v]) {\n\t\t\tGetrt(v, u), size[u] += size[v];\n\t\t\tret = max(ret, size[v]);\n\t\t}\n\tret = max(ret, Size-size[u]);\n\tif(ret < Minr) Minr = ret, root = u;\n}\nvoid DFS(int u, int ff) {\n\tvis[u] = 1; Fa[u] = ff;\n\tfor(int i = fir[u], v; ~i; i = e[i].nxt)\n\t\tif(!vis[v=e[i].to]) {\n\t\t\tMinr = n; Size = size[v];\n\t\t\tGetrt(v, u);\n\t\t\tADD(u, v, root);\n\t\t\tDFS(root, u);\n\t\t}\n}\n\nLL sum[MAXN]; //\u5b50\u6811\u70b9\u6570\u4e4b\u548c\nLL sumd[MAXN]; //\u5b50\u6811\u5185\u7684\u8ddd\u79bb\u4e4b\u548c\nLL sumf[MAXN]; //\u5b50\u6811\u5bf9\u7236\u4eb2\u7684\u8d21\u732e\n\ninline void Modify(int u, int val) {\n\tsum[u] += val;\n\tfor(int i = u; Fa[i]; i = Fa[i]) {\n\t\tint len = dist(u, Fa[i]);\n\t\tsum[Fa[i]] += val;\n\t\tsumd[Fa[i]] += 1ll * val * len;\n\t\tsumf[i] += 1ll * val * len;\n\t}\n}\n\ninline LL Count(int u) { //\u591a\u7406\u89e3\u4e00\u4f1a,\u753b\u753b\u56fe\u591aYY\u4e0b\n\tLL res = sumd[u]; //\u81ea\u5df1\u5b50\u6811\u7684\u8ddd\u79bb\u4e4b\u548c\n\tfor(int i = u; Fa[i]; i = Fa[i]) {\n\t\tint len = dist(u, Fa[i]);\n\t\tres += (sum[Fa[i]]-sum[i]) * len; //Fa[i]\u7684\u5176\u4ed6\u5b50\u6811\u989d\u5916\u7684\u70b9\u6570 * \u8fd9\u4e00\u6761\u8fb9\n\t\tres += (sumd[Fa[i]]-sumf[i]); //Fa[i]\u7684\u5176\u4ed6\u5b50\u6811\u7684\u70b9\u5230Fa[i]\u7684\u8ddd\u79bb\u4e4b\u548c\n\t\t//\u4e0a\u9762\u4e24\u4e2a\u7edf\u8ba1\u90fd\u5fc5\u987b\u8981\u51cf\u53bb\u8fd9\u4e2a\u5b50\u6811\u7684\u8d21\u732e,\u5426\u5219\u7b97\u91cd\u4e86\n\t}\n\treturn res;\n}\nLL Query(int u) {\n\tLL tmp = Count(u);\n\tfor(int i = info[u]; ~i; i = E[i].nxt)\n\t\tif(Count(E[i].to) < tmp) return Query(E[i].rt); //\u513f\u5b50\u6bd4\u81ea\u5df1\u4f18\u5c31\u53bb\u5bf9\u5e94\u7684\u91cd\u5fc3\n\treturn tmp;\n}\nint main () {\n\tmemset(fir, -1, sizeof fir);\n\tmemset(info, -1, sizeof info);\n\tread(n), read(q);\n\tfor(int i = 1, x, y, z; i < n; ++i)\n\t\tread(x), read(y), read(z), add(x, y, z);\n\tdfs(1, 0), dfs2(1, 1);\n\tSize = Minr = n; Getrt(1, 0); //\u5148\u6c42\u4e00\u6b21\u91cd\u5fc3\n\tint RT = root; \t\t\t\t  //\u4f5c\u4e3a\u6839\n\tDFS(root, 0);\n\tint x, y;\n\twhile(q--) {\n\t\tread(x), read(y);\n\t\tModify(x, y);\n\t\tprintf(\"%lld\\n\", Query(RT));\n\t}\n}\n```",
        "postTime": 1553070003,
        "uid": 30433,
        "name": "Ark_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3345 \u3010[ZJOI2015]\u5e7b\u60f3\u4e61\u6218\u7565\u6e38\u620f\u3011"
    },
    {
        "content": "\u6811\u4e0a\u70b9\u6743\u4fee\u6539\uff0c\u8be2\u95ee\u5e26\u6743\u91cd\u5fc3\u3002\n\n\n\u6709\u4e00\u4e2a\u8d2a\u5fc3\u7684\u60f3\u6cd5\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u513f\u5b50\u7684\u67d0\u4e2a\u5b50\u6811\u7684\u70b9\u6743\u548c\u5927\u4e8e\u4ed6\u8fd9\u4e00\u4fa7\u7684\u5b50\u6811\u7684\u70b9\u6743\u548c\uff0c\n\n\n\u4e5f\u5c31\u662f\u8bf4\u8fd9\u6761\u8fb9\u4e24\u8fb9\u7684\u5b50\u6811\u90a3\u8fb9\u66f4\u91cd\uff0c\u90a3\u4e48\u5f80\u90a3\u8fb9\u8d70\u4e00\u5b9a\u66f4\u4f18\u3002\n\n\n\u800c\u4e14\uff0c\u4ece\u4e00\u4e2a\u70b9\u51fa\u53d1\u8fd9\u6837\u8d70\u5230\u4e0d\u80fd\u8d70\u4e3a\u6b62\uff0c\u5c31\u80fd\u627e\u5230\u6700\u4f18\u70b9\u3002\n\n\n\u6211\u4eec\u9700\u8981\u70b9\u5206\u6cbb\u5f62\u6210\u7684\u70b9\u5206\u6811\u6765log\u5b9e\u73b0\u8fd9\u4e00\u8fc7\u7a0b\uff0c\u5e76\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u91cc\u7ef4\u62a4\u7b54\u6848\u3002\n\n\n\u521d\u59cb\u7b54\u6848\u53ef\u4ee5\u53ea\u7ef4\u62a4\u6839\u8282\u70b9\u7684\uff0c\u8fd9\u6837\u6211\u4eec\u53ea\u7528\u8003\u8651\u5982\u4f55\u8ba1\u7b97\u7b54\u6848\u7684\u53d8\u5316\u91cf\u3002\n\n\n\u4ece\u70b9\u5206\u6811\u4e0a\u7684\u7238\u7238\u8f6c\u79fb\u8fc7\u6765\u65f6\uff0c\n\n\n\u7238\u7238\u90a3\u4e00\u4fa7\u7684\u5b50\u6811\u7684\u8ddd\u79bb\u589e\u52a0\u4e86dis(\u7238\u7238\uff0c\u81ea\u5df1)\uff0c\u5e26\u6743\u8def\u5f84\u548c\u7684\u589e\u52a0=dis\\*\u70b9\u6743\u548c\uff1b\n\n\n\u81ea\u5df1\u8fd9\u4e00\u4fa7\u7684\u5b50\u6811\u7684\u8ddd\u79bb\u51cf\u5c11\u4e86dis(\u7238\u7238\uff0c\u81ea\u5df1)\uff0c\u5e26\u6743\u8def\u5f84\u548c\u7684\u51cf\u5c11=dis\\*\u70b9\u6743\u548c\uff1b\n\n\n\u81ea\u5df1\u548c\u7238\u7238\u4e4b\u95f4\u7684\u5b50\u6811\u7684\u53d8\u5316\u5c31\u4e0d\u597d\u7b97\u4e86\u3002\n\n\n\u6240\u4ee5\u70b9\u5206\u6811\u4e0a\u6bcf\u4e2a\u70b9\u8bb0\u5f55\n\n\n\u81ea\u5df1\u8fd9\u4e00\u5b50\u6811\u7684\u70b9\u6743\u548csum\uff0c\n\n\n\u5230\u7238\u7238\u7684\u8ddd\u79bbdis\uff0c\n\n\n\u548c\u7238\u7238\u4e4b\u95f4\u7684\u5b50\u6811\u4e0a\u81ea\u5df1\u7684\u5e26\u6743\u8def\u5f84\u548c\u548c\u7238\u7238\u5e26\u6743\u8def\u5f84\u548c\u7684\u5dee\u503cdel\uff0c\n\n\n\u6bcf\u4e2a\u70b9\u5728\u70b9\u5206\u6811\u4e0a\u7684\u539f\u6811\u4e2d\u5c5e\u4e8e\u7238\u7238\u4fa7\u7684\u513f\u5b50son\u3002\n\n\n\u9700\u8981\u6ce8\u610f\uff0c\u5f53\u4ece\u7238\u7238\u90a3\u91cc\u8f6c\u79fb\u8fc7\u6765\u7684\u65f6\u5019\uff0c\u76f8\u5f53\u4e8e\u7238\u7238\u6307\u5411\u5b83\u7684\u90a3\u4e2a\u70b9link\u90a3\u91cc\u63a5\u4e86\u4e00\u4e2a\u5916\u4fa7\u7684\u5b50\u6811\u3002\n\n\n\u53ef\u4ee5\u5f53\u4f5clink\u7684\u6743\u503c\u589e\u52a0\u3002\n\n\n\u5b8c\u4e86\u518d\u51cf\u56de\u53bb\u5c31\u884c\u4e86\u3002\n\n\n(\u4f46\u662f\u8fd9\u6837\u6bcf\u4e00\u4e2a\u70b9\u6211\u4eec\u90fd\u9700\u8981O(\u513f\u5b50)\u7684\u65f6\u95f4\u627e\u5230\u6700\u91cd\u513f\u5b50\uff0c\u5982\u679c\u6811\u662f\u83ca\u82b1\u72b6\u65f6\u95f4\u5c31\u4f1a\u70b8\uff1b\u6216\u8bb8\u53ef\u4ee5\u8003\u8651\u7528\u4e2a\u5806\u7ef4\u62a4\u6700\u91cd\u513f\u5b50\uff1f)\n\n\n\u6211\u6c42\u4e24\u70b9\u8ddd\u79bb\u7528\u7684\u6811\u5256\uff0c\u6240\u4ee5\u65f6\u95f4nlog^3n\u3002\u3002\n\n\n(\u6811\u7684\u6df1\u5ea6log\uff0c\u6240\u4ee5\u4e00\u6b21\u67e5\u8be2\u9700\u8981log\u6b21\u70b9\u6743\u4fee\u6539,\u4e00\u6b21\u70b9\u6743\u4fee\u6539\u5f71\u54cdlog\u4e2asum,del,\u8ba1\u7b97\u5bf9del\u7684\u5f71\u54cd\u65f6\u6c42\u8ddd\u79bb\u4e00\u4e2alog)\n\n\nupd: \u8fd8\u6709\u4e00\u4e2a\u65b9\u6cd5:\n\n\n\u8003\u8651\u4ece1\u5f00\u59cb\u8d2a\u5fc3\u8d70\u7684\u8fc7\u7a0b\uff0c\u53ea\u6709\u5f53\u4e00\u4e2a\u70b9\u7684\u5b50\u6811\u70b9\u6743\u548c>=\u603b\u70b9\u6743/2\u7684\u65f6\u5019\u4ed6\u624d\u4e0d\u4f1a\u5f80\u4e0a\u8d70\uff0c\u76f8\u53cd\u6211\u4eec\u4f1a\u4ece\u4e0a\u9762\u8d70\u5411\u4ed6\uff0c\n\n\n\u800c\u53ea\u6709\u5f53\u4e00\u4e2a\u70b9\u4e0b\u9762\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u70b9\u7684\u65f6\u5019\uff0c\u4ed6\u624d\u4e0d\u4f1a\u5f80\u4e0b\u8d70\uff0c\u4e5f\u5c31\u662f\u8bf4\u4ed6\u5c31\u662f\u7b54\u6848\u7684\u70b9\u3002\n\n\n\u6240\u4ee5\u6211\u4eec\u8981\u6c42\u7684\u5c31\u662fdeep\u6700\u5927\u7684\u5b50\u6811\u70b9\u6743\u548c>=\u603b\u70b9\u6743/2\u7684\u70b9\u3002\n\n\n\u7528\u4ee5dfs\u5e8f\u4e3a\u4e0b\u6807,\u70b9\u6743\u548c\u4e3a\u6743\u503c\u7684\u7ebf\u6bb5\u6811\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5728\u6811\u4e0a\u4e8c\u5206\u5f97\u5230\u8fd9\u4e2a\u70b9\uff0c\n\n\n\u56e0\u4e3a\u6ee1\u8db3\u6761\u4ef6\u7684\u70b9\u4e00\u5b9a\u662f\u4ece1->\u7b54\u6848\u7684\u70b9\u7684\u4e00\u6761\u94fe\uff0c\u800c\u4ed6\u4eec\u7684dfs\u5e8f\u662f\u9012\u589e\u7684\u3002\n\n\n\u5f53\u4fee\u6539\u70b9\u6743\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6811\u94fe\u5256\u5206\u628a\u4ed6\u62c6\u6210log\u4e2a\u533a\u95f4\u7ef4\u62a4\u7ebf\u6bb5\u6811\u3002O(log^2)\n\n\n\u95ee\u9898\u53ea\u5269\u4e0b\uff0c\u5982\u4f55\u77e5\u9053\u5176\u4ed6\u70b9\u5230\u8fd9\u4e2a\u70b9\u7684\u5e26\u6743\u8ddd\u79bb\u548c\u3002\n\n\n\u8fd9\u4e5f\u662f\u53ef\u4ee5\u7528\u94fe\u5256\u7ef4\u62a4\u7684\uff0c\u6211\u7684\u60f3\u6cd5\u6bd4\u8f83\u9ebb\u70e6\uff0c\n\n\n\u5927\u6982\u5c31\u662f\u7ebf\u6bb5\u6811\u7ef4\u62a4\u91cd\u94fe\u6bcf\u4e2a\u70b9\u53bb\u9664\u91cd\u513f\u5b50\u5f71\u54cd\u540e\u5b50\u6811\u7684\u5e26\u6743\u8ddd\u79bb\u548c,\u70b9\u6743\u548c\\*deep,\u67e5\u8be2\u65f6\u91cd\u94fe\u7ebf\u6bb5\u6811\uff0c\u8f7b\u94fe\u66b4\u529b\u3002\n\n\n(\u5176\u5b9e\u6211\u5199\u7684\u662f\u5b9a\u671f\u91cd\u6784:\u4ece\u4e0b\u5411\u4e0adp\u4e00\u904d\uff0c\u518d\u4ece\u4e0a\u5411\u4e0bdp\u4e00\u904d\uff0c\n\n\n\u8be2\u95ee\u65f6\u66b4\u529b\u679a\u4e3e\u65b0\u52a0\u5165\u7684\u70b9\u8ba1\u7b97\u8d21\u732e\uff0cO(n\u6839\u53f7n)\u7136\u800c\u88abtle\u4e86)\n\n\n2\u6b21upd:\u5bf9\u5e26\u6743\u8ddd\u79bb\u548c\u7684\u67e5\u8be2\uff0c\u94fe\u5256\u786e\u5b9e\u53ef\u4ee5\u65b9\u4fbf\u7684\u7ef4\u62a4 \u89c1http://kczno1.blog.uoj.ac/blog/2794\n",
        "postTime": 1501050053,
        "uid": 9168,
        "name": "kczno1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3345 \u3010[ZJOI2015]\u5e7b\u60f3\u4e61\u6218\u7565\u6e38\u620f\u3011"
    },
    {
        "content": "\u52a8\u6001\u70b9\u5206\u6cbb\u5c0f\u767d\uff0c\u5149\u662f\u56e0\u4e3a\u601d\u8def\u4e0d\u6e05\u6670\u5c31\u8017\u8d39\u4e86\u4e0d\u77e5\u9053\u591a\u5c11\u65f6\u95f4\u53bbgang\u8fd9\u9898\uff0c\u6240\u4ee5\u8fd8\u662f\u6765\u7406\u7406\u601d\u8def\u5427\u3002\n\n\u4e00\u4e2a\u6811$T$\u91cc\u9762$\\sum\\limits_{v\\in T} D_vdist(u,v)$\u53d6\u5230\u6700\u5c0f\u503c\u7684$u$\u6211\u4eec\u53ef\u4ee5\u79f0\u4f5c\u5e26\u6743\u91cd\u5fc3\u3002\u7c7b\u4f3c\u91cd\u5fc3\u5404\u79cd\u6027\u8d28\u7684\u8bc1\u660e\u8fc7\u7a0b\uff0c\u6211\u4eec\u4e0d\u96be\u8bc1\u51fa\u8fd9\u6837\u7684\u70b9\u9876\u591a\u53ea\u6709\u4e24\u4e2a\u3002\n\n\u5982\u679c$e$\u90fd\u662f\u6b63\u6570\u7684\u8bdd\u6bd4\u8f83\u597d\u505a\u3002\u7c7b\u6bd4\u91cd\u5fc3\u6027\u8d28\uff0c\u65b0\u5e26\u6743\u91cd\u5fc3\u4e00\u5b9a\u5728\u539f\u5e26\u6743\u91cd\u5fc3\u548c\u4fee\u6539\u70b9\u4e4b\u95f4\u7684\u8def\u5f84\u4e0a\uff0c\u53ef\u4ee5\u76f4\u63a5\u50cf\u9996\u90fd\uff08[\u849f\u84bb\u9898\u89e3](http://www.cnblogs.com/flashhu/p/8626003.html)\uff09\u90a3\u6837\u7528LCT\u7ef4\u62a4\u4ee5\u5e26\u6743\u91cd\u5fc3\u4e3a\u6839\u7684\u6811\uff0c\u4fee\u6539\u65f6\u63d0\u51fa\u94fe\u4e8c\u5206\u67e5\u627e\u51fa\u65b0\u5e26\u6743\u91cd\u5fc3\u5373\u53ef\u3002\n\n\u53ef\u662f$e$\u4f1a\u662f\u8d1f\u6570\u554a\uff01\u8fd9\u65f6\u5019\uff0c\u65b0\u5e26\u6743\u91cd\u5fc3\u4e00\u5b9a\u4f1a\u6709\u8fdc\u79bb\u4fee\u6539\u70b9\u7684\u8d8b\u52bf\u3002\u4f46\u662f\u5b50\u6811\u592a\u591a\u4e86\uff0c\u6211\u4eec\u6839\u672c\u4e0d\u80fd\u5feb\u901f\u77e5\u9053\u5f80\u54ea\u91cc\u79fb\u3002\u6211\u4eec\u53ea\u80fd\u66b4\u529b\u5224\u65ad\uff0c\u5982\u679c\u5f53\u524d\u51b3\u7b56\u70b9\u662f$x$\uff0c$y$\u4e0e$x$\u6709\u8fb9\u76f8\u8fde\uff0c\u90a3\u4e48\u5047\u5982\u628a\u8865\u7ed9\u7ad9\u79fb\u8fc7\u53bb\uff0c\u663e\u7136\u7b54\u6848\u4f1a\u51cf\u53bb$y$\u4e00\u4fa7\u5b50\u6811\u7684$w\u00d7\\sum\\limits_{v\\in Y} D_v$\uff08$w$\u4e3a\u5f53\u524d\u8fb9\u6743\uff09\uff0c\u52a0\u4e0a$x$\u4e00\u4fa7\u5b50\u6811\u7684$w\u00d7\\sum\\limits_{v\\in X} D_v$\u3002\u90a3\u4e48\u5f53$\\sum\\limits_{v\\in Y} D_v\\geq\\sum\\limits_{v\\in X} D_v$\u4e5f\u5c31\u662f$2\\sum\\limits_{v\\in Y} D_v\\geq\\sum\\limits_{v\\in T} D_v$\u65f6\u6211\u4eec\u5f53\u7136\u53ef\u4ee5\u66f4\u6539\u51b3\u7b56\u70b9\uff0c\u7136\u540e\u7ee7\u7eed\u5bfb\u627e\u66f4\u4f18\u7684\u70b9\uff0c\u76f4\u5230\u627e\u4e0d\u5230\u4e3a\u6b62\u3002\u53ea\u53ef\u60dc\u8fd9\u6837\u662f$O(n^2)$\u7684\u3002\n\n\u600e\u4e48\u5feb\u901f\u627e\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u52a8\u6001\u70b9\u5206\u6cbb\uff0c\u70b9\u5206\u6811\u7684\u9ad8\u5ea6\u662f$\\log$\u7ea7\u522b\u7684\uff0c\u628a\u5b83\u5efa\u597d\u540e\uff0c\u7ef4\u62a4\u6bcf\u4e2a\u4ee5$u$\u4e3a\u6839\u7684\u70b9\u5206\u5b50\u6811\u7684$D$\u4e4b\u548c$s_u$\u3002\u6839\u636e\u4e0a\u5f0f\u5224\u65ad\uff0c\u5982\u679c\u5f53\u524d\u70b9\u7684\u67d0\u4e00\u4e2a\u6709\u8fb9\u76f8\u90bb\u7684\u70b9\u66f4\u4f18\uff0c\u6211\u4eec\u76f4\u63a5\u628a\u51b3\u7b56\u70b9\u6539\u6210\u8be5\u70b9\u6240\u5728\u7684\u70b9\u5206\u5b50\u6811\u7684\u6839\u8282\u70b9\uff01\u7531\u4e8e\u6bcf\u4e2a\u70b9\u5ea6\u6570\u5f88\u5c0f\uff0c\u6211\u4eec\u751a\u81f3\u53ef\u4ee5\u66b4\u529b`for`\u4e00\u904d\u5224\u65ad\u3002\u8fd9\u4e5f\u662f\u50cf\u9996\u90fd\u4e00\u6837\u4e8c\u5206\u67e5\u627e\u91cd\u5fc3\u3002\n\n\u4f46\u662f\uff0c\u5177\u4f53\u5b9e\u73b0\u8d77\u6765\u53c8\u6709\u4e0d\u5c11\u95ee\u9898\u3002\n\n\u9996\u5148\uff0c\u70b9\u5206\u6811\u4fdd\u8bc1\u4e86\u9ad8\u5ea6\uff0c\u5374\u4fdd\u8bc1\u4e0d\u4e86\u4fe1\u606f\u7684\u5b8c\u6574\u6027\uff0c\u6bcf\u4e2a\u8282\u70b9\u53ea\u80fd\u7ef4\u62a4\u8be5\u8282\u70b9\u6240\u5728\u70b9\u5206\u5b50\u6811\u7684\u4fe1\u606f\u3002\u800c\u4e0a\u9762\u90a3\u4e2a\u5f0f\u5b50\u9700\u8981\u7ef4\u62a4\u539f\u6811\u7684\u5b50\u6811$\\sum D$\u3002\u8bd5\u60f3\u4e00\u4e0b\u5f53\u6211\u4eec\u5728\u70b9\u5206\u6811\u91cc\u4ece\u6839\u5411\u4e0b\u8df3\u4e86$k$\u5c42\uff0c\u90a3\u4e48\u5f53\u524d\u7684\u5b50\u6811\u8fd8\u4f1a\u901a\u8fc7\u8fb9\u8fde\u63a5\u4e0a$O(k)$\u4e2a\u5916\u90e8\u5b50\u6811\u3002\u5982\u679c`for`\u6bcf\u4e00\u6761\u8fb9\u7684\u65f6\u5019\u90fd\u8981\u5224\u65ad\u6bcf\u4e00\u4e2a\u5916\u90e8\u5b50\u6811\u5728\u8fb9\u7684\u54ea\u4e00\u4fa7\uff0c\u5c82\u4e0d\u662f\u5f88\u8d39\u52b2\uff1f\n\n\u806a\u660e\u7684\u505a\u6cd5\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u7f29\u70b9\uff0c\u662f\u5728\u6bcf\u6b21\u627e\u5230\u66f4\u4f18\u70b9\u4e4b\u540e\uff0c\u8df3\u5411\u70b9\u5206\u5b50\u6811$v$\u4e4b\u524d\uff0c\u628a\u66f4\u4f18\u70b9\u7684$D$\u4e34\u65f6\u52a0\u4e0a$s_u-s_v$\u5373\u5916\u90e8\u5b50\u6811\u7684$\\sum D$\u3002\u5f53\u7136\uff0c\u6ce8\u610f\u533a\u5206\u70b9\u5206\u6811\u548c\u539f\u6811\uff0c\u66f4\u4f18\u70b9\u5e76\u4e0d\u4e00\u5b9a\u662f\u5f53\u524d\u70b9\u7684\u5b50\u8282\u70b9\uff0c\u6240\u4ee5\u66f4\u4f18\u70b9\u7684\u70b9\u5206\u6811\u4e0a\u7684\u7956\u5148\u7684$s$\u4e5f\u8981\u66f4\u65b0\u3002\u7528\u9012\u5f52\u5b9e\u73b0\uff0c\u7b49\u5230\u627e\u51fa\u4e86\u5e26\u6743\u91cd\u5fc3\uff0c\u56de\u6eaf\u4e86\u4e4b\u540e\uff0c\u518d\u628a\u5b83\u8fd8\u539f\u3002\u7a0d\u7a0d\u8111\u8865\u4e00\u4e0b\uff0c\u662f\u4e0d\u662f\u5f88\u8f7b\u677e\u5730\u6d88\u9664\u4e86\u5916\u90e8\u5b50\u6811\u7684\u5f71\u54cd\uff1f\n\n\u5176\u6b21\uff0c\u627e\u51fa\u4e86\u91cd\u5fc3\uff0c\u6211\u4eec\u8fd8\u8981\u7edf\u8ba1\u7b54\u6848\u3002\u4ed4\u7ec6\u60f3\u60f3\uff0c\u8fd9\u4e2a\u7b54\u6848\u5b9e\u5728\u4e0d\u65b9\u4fbf\u4e5f\u6ca1\u5fc5\u8981\u4e22\u5230\u522b\u7684\u6570\u636e\u7ed3\u6784\uff08\u7ebf\u6bb5\u6811\uff0cLCT\u4ec0\u4e48\u7684\uff09\u52a8\u6001\u7ef4\u62a4\u4e86\u3002\u628a\u70b9\u5206\u6811\u5efa\u51fa\u6765\u4e86\uff0c\u8fd8\u4e0d\u597d\u597d\u4f7f\u7528\u5b83\uff1f\u6211\u4eec\u663e\u7136\u8981\u7ef4\u62a4\u6bcf\u4e2a\u4ee5$x$\u4e3a\u6839\u70b9\u5206\u5b50\u6811\u4e2d\u7684$\\sum\\limits_{v\\in X} D_vdist(x,v)$\uff0c\u8bb0\u4e3a$tot_x$\u3002\u8bbe\u7edf\u8ba1$x$\u7684\u7b54\u6848\uff0c\u9996\u5148$tot_x$\u76f4\u63a5\u7b97\u8fdb\u53bb\u4e86\u3002\u4f46\u662f\u5982\u679c\u52a0\u4e0a$x$\u7956\u5148\u7684$tot$\uff0c\u5c31\u4f1a\u6709\u591a\u4f59\u7684\uff0c\u591a\u4f59\u51fa$x$\u6240\u5728\u70b9\u5206\u5b50\u6811\u7684\u8d21\u732e\u3002\u8fd9\u65f6\u5019\u6765\u4e00\u6ce2\u6811\u4e0a\u5dee\u5206\uff0c\u518d\u8bb0$tof_x$\u8868\u793a$\\sum\\limits_{v\\in X} D_vdist(fa_x,v)$\uff08$fa_x$\u4e3a$x$\u70b9\u5206\u6811\u4e0a\u7684\u7236\u4eb2\uff09\uff0c\u6bcf\u52a0\u4e0a$tot_{fa_x}$\u5c31\u51cf\u6389$tof_x$\u5c31\u597d\u5566\u3002\n\n\u601d\u8def\u81f3\u6b64\uff0c\u70b9\u5206\u6811\u91cc\u7684\u4e09\u4e2a\u53d8\u91cf\u600e\u4e48\u7ef4\u62a4\u4e5f\u4e0d\u662f\u5927\u95ee\u9898\u4e86\u3002\u5f53$D_x$\u52a0\u4e0a$e$\u7684\u65f6\u5019\uff0c\u66f4\u65b0\u70b9\u5206\u6811\u4e0a$x$\u53ca\u5176\u7956\u5148\uff0c\u8bbe\u5f53\u524d\u4fee\u6539$y$\uff0c\u90a3\u4e48$s_y$\u52a0\u4e0a$e$\u3001$tot_{fa_y}$\u548c$tof_y$\u90fd\u52a0\u4e0a$e\u00d7dist(x,{fa_y})$\u5c31\u662f\u663e\u7136\u7684\u4e86\u3002\u90a3\u4e48\u6211\u4eec\u8fd8\u8981\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u5230\u70b9\u5206\u6811\u4e0a\u6bcf\u4e2a\u7956\u5148\u7684\u8ddd\u79bb\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u79bb\u7ebf\uff0c\u4e3a\u4ec0\u4e48\u6ca1\u4eba\u5199Tarjan\u6c42LCA\u5462\uff1f\uff08\u8bdd\u8bf4\u849f\u84bb\u4e5f\u662f\u7b2c\u4e00\u6b21\u5199\uff09\u628a\u8be2\u95ee\u4e22\u8fdb\u53bb\uff0c\u4ee5$1$\u4e3a\u6839\u6c42\u6bcf\u4e2a\u70b9\u7684\u5e26\u6743\u6df1\u5ea6$dep$\uff0c\u5904\u7406\u51faLCA\u4e4b\u540e\u76f4\u63a5\u5dee\u5206\uff0c$dist(x,y)=dep_x+dep_y-2dep_{LCA}$\uff0c\u8fd9\u4e2a\u5927\u5bb6\u90fd\u4f1a\u5427\u3002\n\n\u601d\u8def\u5b9e\u5728\u4e0d\u6e05\u6670\u5c31\u770b\u770b\u4ee3\u7801\u5427\u3002\u8bdd\u8bf4\u52a8\u6001\u70b9\u5206\u6cbb\u7684\u4ee3\u7801\u90fd\u77ed\u4e0d\u4e86\u5427\u3002\u3002\u3002\u3002\u3002\u3002\u4e0d\u8fc7Tarjan\u5199\u8d77\u6765\u65b9\u4fbf\u4e0d\u5c11\uff0c\u849f\u84bb\u6ca1~~\u8fc7\u5206~~\u538b\u884c\u4e5f\u53ea\u670990\u591a\u884c\u3002\n```cpp\n#include<cstdio>\n#include<cstring>\n#define LL long long\n#define RG register\n#define R RG int\n#define G c=getchar()\nconst int N=1e5+9,M=2e5+9,L=2e6;\nnamespace E{int he[N],ne[M],to[M];}//\u539f\u6811\nnamespace T{int he[N],ne[N],to[N];}//\u70b9\u5206\u6811\nnamespace Q{int he[L],ne[L<<1],to[L<<1];}//LCA\u8be2\u95ee\nusing namespace E;//\u5c01\u4e86namespace\u786e\u5b9e\u6e05\u695a\u591a\u4e86\nint n,p,rt,w[M],s[N],mx[N],h[N],dep[N],fa[N],top[N],dis[N][20],*at[L<<1];\nLL tot[N],tof[N];//\u8be5\u5f00longlong\u7684\u522b\u5fd8\u8bb0\nbool vis[N];\ninline int in(){\n    RG char G;RG bool f=0;\n    while(c<'-')G;\n    if(c=='-')f=1,G;\n    R x=c&15;G;\n    while(c>'-')x*=10,x+=c&15,G;\n    return f?-x:x;\n}\ninline void max(R&x,R y){if(x<y)x=y;}\nvoid getrt(R x){//\u5efa\u70b9\u5206\u6811\u6c42\u91cd\u5fc3\n    vis[x]=1;s[x]=1;mx[x]=0;\n    for(R y,i=he[x];i;i=ne[i]){\n        if(vis[y=to[i]])continue;\n        getrt(y);\n        s[x]+=s[y];max(mx[x],s[y]);\n    }\n    max(mx[x],n-s[x]);\n    if(mx[rt]>mx[x])rt=x;\n    vis[x]=0;\n}\nint div(R x){//\u9012\u5f52\u5efa\u6811\n    getrt(x);vis[x=rt]=1;rt=0;\n    for(R t=n,y,i=he[x];i;i=ne[i]){\n        if(vis[y=to[i]])continue;\n        n=s[x]>s[y]?s[y]:t-s[x];\n        T::ne[++p]=T::he[x];T::he[x]=p;\n        fa[T::to[T::he[x]]=div(top[p]=y)]=x;\n    }//\u5c0f\u5fc3\u9012\u5f52\u540ep\u53d8\u4e86\uff0c\u5199T::to[p]\u4f1a\u51fa\u4e8b\n    return x;\n}\nint geth(R x){return x==h[x]?x:h[x]=geth(h[x]);}//\u8def\u5f84\u538b\u7f29\nvoid tarjan(R x){//\u9884\u5904\u7406dist\n    vis[x]=1;\n    for(R y,i=he[x];i;i=ne[i]){\n        if(vis[y=to[i]])continue;\n        dep[y]=dep[x]+w[i];\n        tarjan(y);h[y]=x;\n    }\n    for(R y,i=Q::he[x];i;i=Q::ne[i])\n        if(vis[y=Q::to[i]])\n            *at[i]=dep[x]+dep[y]-(dep[geth(y)]<<1);//\u5dee\u5206\n}\nLL find(R x){\n    R i;\n    for(i=T::he[x];i&&s[T::to[i]]<<1<s[x];i=T::ne[i]);//\u627e\u66f4\u4f18\u70b9\n    if(!i)return x;//\u627e\u4e0d\u5230\u7684\u8bdd\u5f53\u524d\u70b9\u5c31\u662f\u6700\u4f18\u70b9\n\tR y,del=s[x]-s[T::to[i]];\n\tfor(y=top[i];y!=x;y=fa[y])s[y]+=del;//\u7f29\u70b9\n    R ret=find(T::to[i]);\n\tfor(y=top[i];y!=x;y=fa[y])s[y]-=del;//\u8fd8\u539f\n    return ret;\n}\nint main(){\n    mx[0]=1e9;//\u8bb0\u5f97\u7ed9\u521d\u503c\n    R n=::n=in(),q=in(),x,y,v,i;\n    for(i=1;i<n;++i){\n        x=in();y=in();\n        ne[++p]=he[x];to[he[x]=p]=y;\n        ne[++p]=he[y];to[he[y]=p]=x;\n        w[p]=w[p-1]=in();\n    }\n    p=0;rt=div(1);p=0;\n    for(x=1;x<=n;++x)\n        for(i=0,y=fa[h[x]=x];y;y=fa[y],++i){\n            Q::ne[++p]=Q::he[x];Q::to[Q::he[x]=p]=y;\n            Q::ne[++p]=Q::he[y];Q::to[Q::he[y]=p]=x;\n            at[p]=at[p-1]=&dis[x][i];//\u641e\u4e2a\u6307\u9488\uff0cTarjan\u7684\u65f6\u5019\u76f4\u63a5\u628a\u503c\u653e\u8fdb\u53bb\n        }\n\tmemset(vis,0,n+1);memset(s,0,(n+1)<<2);//\u4e4b\u524d\u7528\u8fc7\u8981\u6e05\u7a7a\n    tarjan(1);\n    RG LL t;\n    while(q--){\n        x=y=in();s[rt]+=v=in();\n\t\tfor(i=0;y!=rt;++i)//\u7ef4\u62a4\n\t\t\tt=(LL)dis[x][i]*v,s[y]+=v,tof[y]+=t,tot[y=fa[y]]+=t;\n\t\tt=tot[x=y=find(rt)];\n\t\tfor(i=0;y!=rt;++i)//\u7b97\u7b54\u6848\n\t\t\tt+=(LL)dis[x][i]*(s[fa[y]]-s[y])+tot[fa[y]]-tof[y],y=fa[y];\n\t\tprintf(\"%lld\\n\",t);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1532528113,
        "uid": 61325,
        "name": "FlashHu",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3345 \u3010[ZJOI2015]\u5e7b\u60f3\u4e61\u6218\u7565\u6e38\u620f\u3011"
    },
    {
        "content": "\u5669\u68a6\u2026\u2026\u771f\u7684\u5669\u68a6\u2026\u2026\u6211\u5feb\u88ab\u5e7d\u9999\u7ed9\u73a9\u6b7b\u4e86\u2026\u2026\n\n\u3000\u3000\u7528\u8fd9\u9053\u9898\u6765\u7406\u89e3\u52a8\u6001\u6dc0\u7c89\u8d28\u70b9\u5206\u6cbb\u7684\uff08\u56e0\u4e3a\u5f53\u521d\u6349\u8ff7\u85cf\u90a3\u9898\u76f4\u63a5\u5b66\u5c9b\u5a18\u7684\u62ec\u53f7\u5e8f\u5217\u2026\u2026\u5c31\u6ca1\u53bb\u518d\u6253\u4e00\u904d\u2026\u2026\uff09\uff0c\u7136\u800c\u9898\u89e3\u5927\u4f6c\u4eec\u90fd\u76f4\u63a5\u9ed8\u8ba4\u6211\u4eec\u5df2\u7ecf\u4f1a\u52a8\u6001\u70b9\u5206\u7136\u540e\u76f4\u63a5\u4e0a\u2026\u2026\u7ed3\u679c\u6211\u6628\u5929\u770b\u4e86\u4e00\u4e2a\u665a\u4e0a\u624d\u5f04\u61c2\u2026\u2026\u7136\u540e\u4eca\u5929\u53c8\u82b1\u4e86\u4e00\u4e2a\u65e9\u4e0a\u7801\u5b8c\uff0c\u4ea4\u4e0a\u53bb\u7adf\u71361A\u4e86\u4e0d\u53ef\u601d\u8bae\n\n\u3000\u3000\u5148\u8bf4\u4e00\u4e0b\u4ec0\u4e48\u662f\u52a8\u6001\u70b9\u5206\u6cbb\u5427\u3002\u5bf9\u4e8e\u4e00\u822c\u7684\u70b9\u5206\u6cbb\uff0c\u56e0\u4e3a\u6211\u4eec\u6bcf\u4e00\u6b21\u90fd\u627e\u51fa\u91cd\u5fc3\uff0c\u6240\u4ee5\u6bcf\u4e00\u6b21\u9012\u5f52\u5f80\u5de6\u53f3\u5b50\u6811\u627e\u7684\u65f6\u5019\u6df1\u5ea6\u4e0d\u4f1a\u8d85\u8fc7$O(log n)$\u5c42\u3002\u4f46\u662f\u5982\u679c\u6709\u4e86\u4fee\u6539\u64cd\u4f5c\u600e\u4e48\u529e\u5462\uff1f\u6bcf\u4fee\u6539\u4e00\u6b21\u70b9\u5206\u4e00\u6b21\u4e48\uff1f\u90a3\u6015\u662f\u5f97T\u98de\n\n\u3000\u3000\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u8fd9\u9053\u9898\u76ee\uff0c\u5b83\u7684\u6bcf\u4e00\u6b21\u4fee\u6539\uff0c\u66f4\u6539\u7684\u53ea\u6709\u70b9\u6743\uff0c\u6811\u7684\u7ed3\u6784\u662f\u6ca1\u6709\u53d8\u5316\u7684\uff08\u5982\u679c\u6709\u7684\u8bdd\u6015\u662f\u53ea\u80fd\u4e0aLCT\u4e86\u2026\u2026\uff09\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u4e00\u6b21\u70b9\u5206\u7684\u65f6\u5019\u627e\u5230\u7684\u91cd\u5fc3\u662f\u4e0d\u4f1a\u6539\u53d8\u7684\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4e0d\u53ef\u4ee5\u628a\u70b9\u5206\u6cbb\u6bcf\u4e00\u5c42\u7684\u91cd\u5fc3\u7ed9\u8fde\u6210\u4e00\u68f5\u6811\u5462\uff1f\u56e0\u4e3a\u70b9\u5206\u7684\u9012\u5f52\u5c42\u6570\u53ea\u6709$O(log n)$\u5c42\uff0c\u6240\u4ee5\u8fd9\u68f5\u70b9\u5206\u6811\u7684\u6df1\u5ea6\u4e5f\u662f$O(log n)$\u7684\n\n\u3000\u3000\u90a3\u4e48\u8003\u8651\u4e00\u4e0b\u5728\u6bcf\u4e00\u4e2a\u70b9\u5206\u6811\u7684\u8282\u70b9\u7ef4\u62a4\u4ec0\u4e48\u4e1c\u897f\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u6211\u4eec\u7ef4\u62a4\u4ed6\u7684\u5b50\u6811\u4e2d\u7684\u6240\u6709\u4fe1\u606f\uff0c\u4e5f\u5c31\u662f\u5728\u539f\u6811\u4e2d\u5b83\u88ab\u9009\u4e3a\u91cd\u5fc3\u65f6\u7684\u90a3\u4e2a\u5b50\u6811\u7684\u6240\u6709\u4fe1\u606f\u3002\u4fee\u6539\u7684\u65f6\u5019\uff0c\u53ea\u8981\u4ece\u4e00\u4e2a\u70b9\u5f00\u59cb\u5728\u70b9\u5206\u6811\u91cc\u5f80\u4e0a\u8df3\uff0c\u5e76\u4e0d\u65ad\u66f4\u65b0\u4fe1\u606f\u5373\u53ef\u3002\u67e5\u8be2\u4e00\u4e2a\u70b9\u7684\u65f6\u5019\uff0c\u70b9\u5206\u6811\u91cc\u8df3\uff0c\u4e0d\u65ad\u8003\u8651\u4e0e\u7236\u4eb2\u4e4b\u95f4\u7684\u8d21\u732e\u5c31\u597d\u4e86\u3002\n\n\u3000\u3000\u4e0a\u9762\u90a3\u4e00\u6bb5\u770b\u4e0d\u61c2\u4e5f\u6ca1\u5173\u7cfb\uff0c\u56e0\u4e3a\u6211\u53ea\u662f\u5728\u53e3\u80e1\uff0c\u5047\u88c5\u81ea\u5df1\u5df2\u7ecf\u5f88\u61c2\u52a8\u6001\u70b9\u5206\u7684\u6837\u5b50\n\n\u3000\u3000\u90a3\u4e48\u6211\u4eec\u5177\u4f53\u6765\u5206\u6790\u4e00\u4e0b\u8fd9\u9053\u9898\u76ee\u6211\u4eec\u8981\u7ef4\u62a4\u4ec0\u4e48\n\n\u3000\u3000\u9898\u76ee\u8981\u6c42\u4f7f$\\sum d_v*dis(u,v)$\u6700\u5c0f\uff0c\u5176\u4e2d$d_v$\u4e3a$v$\u70b9\u7684\u70b9\u6743\uff0c$dis(u,v)$\u4e3a\u539f\u6811\u4e2d$u,v$\u4e24\u70b9\u7684\u8ddd\u79bb\u3002\u9898\u76ee\u8981\u6c42\u5c31\u662f\u6c42\u5e26\u6743\u91cd\u5fc3\u3002\u5047\u8bbe\u6211\u4eec\u5f53\u524d\u5df2\u7ecf\u9009\u5b9a\u4e86\u70b9$v$\u4e3a\u7b54\u6848\uff0c\u90a3\u4e48\u8003\u8651\u5b83\u7684\u4e00\u4e2a\u5b50\u8282\u70b9$w$\uff0c\u5982\u679c\u628a\u8865\u7ed9\u7ad9\u4ece\u70b9$v$\u8f6c\u79fb\u5230$w$\uff0c\u90a3\u4e48$w$\u7684\u6240\u6709\u5b50\u6811\u5185\u7684\u70b9\u5230\u8865\u7ed9\u7ad9\u7684\u8ddd\u79bb\u5c11\u4e86$dis(v,w)$\uff0c\u800c\u5176\u4ed6\u6240\u6709\u70b9\u5230\u8865\u7ed9\u7ad9\u7684\u8ddd\u79bb\u591a\u4e86$dis(v,w)$\u3002\u6211\u4eec\u5047\u8bbe$sum_v[v]$\u4e3a$v$\u7684\u5b50\u6811\u5185\u7684\u70b9\u6743\u548c\uff0c\u90a3\u4e48\u7b54\u6848\u603b\u5171\u7684\u53d8\u5316\u91cf\u662f$$dis(u,v)*(sum_v[v]-sum_v[w]-sum_v[w])$$\n\n\u3000\u3000\u4e0d\u96be\u53d1\u73b0\uff0c\u5f53$sum_v[w]*2>sum_v[v]$\u7684\u65f6\u5019\uff0c\u7b54\u6848\u7684\u53d8\u5316\u91cf\u662f\u5c0f\u4e8e\u96f6\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u4ee3\u4ef7\u51cf\u5c0f\uff0c\u53ef\u4ee5\u53d8\u5f97\u66f4\u4f18\u3002\u800c\u4e14\uff0c\u6ee1\u8db3\u8fd9\u6837\u6761\u4ef6\u7684\u70b9$w$\u6700\u591a\u53ea\u6709\u4e00\u4e2a\n\n\u3000\u3000\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u6bcf\u4e00\u6b21\u9009\u5b9a\u4e00\u4e2a\u70b9\uff0c\u7136\u540e\u770b\u770b\u5f80\u4ed6\u7684\u54ea\u4e2a\u5b50\u6811\u8d70\u66f4\u4f18\uff0c\u5982\u679c\u6ca1\u6709\u8bf4\u660e\u4ed6\u81ea\u5df1\u5c31\u5df2\u7ecf\u662f\u6700\u4f18\u7684\u4e86\u3002\u8fd9\u6837\u4e0d\u65ad\u4e0b\u53bb\u80af\u5b9a\u80fd\u627e\u5230\u7b54\u6848\u3002\n\n\u3000\u3000\u4f46\u662f\u7531\u4e8e\u539f\u56fe\u53ef\u80fd\u662f\u4e00\u6761\u94fe\uff0c\u8981\u600e\u4e48\u505a\u624d\u80fd\u4fdd\u8bc1\u590d\u6742\u5ea6\u5462\uff1f\u6211\u4eec\u9009\u62e9\u5728\u70b9\u5206\u6811\u4e0a\u8d70\uff0c\u6bcf\u4e00\u6b21\u90fd\u8df3\u5230\u5b83\u4e0b\u4e00\u5c42\u7684\u91cd\u5fc3\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u5c42\u6570\u6700\u591a\u53ea\u6709$O(log n)$\n\n\u3000\u3000\u7136\u540e\u8003\u8651\u5982\u4f55\u7ef4\u62a4\u7b54\u6848\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u5bf9\u4e8e\u70b9\u5206\u6811\u4e0a\u4e00\u4e2a\u70b9$v$\uff0c\u5b83\u7684\u5b50\u6811\u4e2d\u7684\u70b9\u5c31\u662f\u5728\u70b9\u5206\u6cbb\u65f6\u5b83\u88ab\u9009\u4e3a\u91cd\u5fc3\u65f6\u7684\u90a3\u68f5\u6811\u4e0a\u7684\u70b9\u3002\u8003\u8651\u70b9\u5206\u6811\u4e0a\u7684\u4e00\u5bf9\u7236\u5b50$u,v$\uff0c\u6211\u4eec\u8bbe$sum_a[v]$\u8868\u793a$v$\u7684\u5b50\u6811\u5185\u7684\u6240\u6709\u70b9\u5230\u4ed6\u7684\u4ee3\u4ef7\u4e4b\u548c\uff0c$sum_b[v]$\u4e3a$v$\u7684\u5b50\u6811\u5185\u7684\u6240\u6709\u70b9\u5230$v$\u70b9\u7236\u4eb2\uff08\u4e5f\u5c31\u662f\u70b9$u$\uff09\u7684\u8ddd\u79bb\u4e4b\u548c\uff0c$sum_v[v]$\u8fd8\u662f\u8868\u793a\u5b50\u6811\u7684\u70b9\u6743\u4e4b\u548c\u3002\u90a3\u4e48\u6211\u4eec\u8bbe\u7b54\u6848\u5df2\u7ecf\u9009\u5b9a\u4e3a\u70b9$v$\uff0c\u52a0\u4e0a$u$\u7684\u4e0d\u5305\u62ec$v$\u7684\u5b50\u6811\u540e\u7b54\u6848\u5c31\u662f$sum_a[v]-sum_b[v]+sum_a[u]+sum_v[u]*dis(u,v)$\u3002\u4e8e\u662f\u53ea\u8981\u5728\u70b9\u5206\u6811\u4e0a\u4e0d\u65ad\u627e\u7236\u4eb2\u5e76\u5408\u5e76\uff0c\u5c31\u53ef\u4ee5\u77e5\u9053\u7b54\u6848\u4e86\n\n\u3000\u3000\u7136\u540e\u6211\u4eec\u53ea\u8981\u80fd\u5728\u4fee\u6539\u65f6\u7ef4\u62a4\u597d\u8fd9\u4e09\u4e2a\u6570\u7ec4\u5c31\u53ef\u4ee5\u4e86\uff01\uff01\uff01\n\n\u3000\u3000\u81f3\u4e8e\u4fee\u6539\u65f6\u5982\u4f55\u7ef4\u62a4\u5462\uff1f\u6211\u4eec\u4fee\u6539\u4e00\u4e2a\u70b9\u4e4b\u540e\uff0c\u7136\u540e\u4e0d\u65ad\u5728\u70b9\u5206\u6811\u4e0a\u5f80\u7236\u8282\u70b9\u8df3\uff0c\u5e76\u4e0d\u65ad\u66f4\u65b0\u5373\u53ef\u3002\u67e5\u8be2\u7684\u65f6\u5019\u4e5f\u662f\uff0c\u4e0d\u65ad\u8df3\u5e76\u5408\u5e76\u7b54\u6848\n  \n  \u7136\u540e\u53c8\u65b0\u5b66\u4f1a\u4e86\u4e00\u62db\uff0c\u7528$RMQO(1)$\u67e5\u8be2$LCA$\uff08\u53ea\u4f1a\u500d\u589e\u548c\u6811\u5256\u7684\u6211\u745f\u745f\u53d1\u6296\uff09\n  \n```\n//minamoto\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#define ll long long\n#define N 100005\n#define inf 0x3f3f3f3f\n#define rint register int\nusing namespace std;\n#define getc() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\nchar buf[1<<21],*p1=buf,*p2=buf;\ntemplate<class T>inline bool cmax(T&a,const T&b){return a<b?a=b,1:0;}\ninline int read(){\n    #define num ch-'0'\n    char ch;bool flag=0;int res;\n    while(!isdigit(ch=getc()))\n    (ch=='-')&&(flag=true);\n    for(res=num;isdigit(ch=getc());res=res*10+num);\n    (flag)&&(res=-res);\n    #undef num\n    return res;\n}\nchar sr[1<<21],z[20];int C=-1,Z;\ninline void Ot(){fwrite(sr,1,C+1,stdout),C=-1;}\ninline void print(ll x){\n    if(C>1<<20)Ot();if(x<0)sr[++C]=45,x=-x;\n    while(z[++Z]=x%10+48,x/=10);\n    while(sr[++C]=z[Z],--Z);sr[++C]='\\n';\n}\nstruct G{\n\tint head[N],Next[N<<1],edge[N<<1],ver[N<<1],tot;\n\tG(){tot=0;memset(head,0,sizeof(head));}\n\tinline void add(int u,int v,int e){\n\t\tver[++tot]=v,Next[tot]=head[u],head[u]=tot,edge[tot]=e;\n\t}\n}T1,T2;\nint n,q,st[N<<1][18],logn[N<<1],bin[25],tp;\nll sum,ans,d[N],dis1[N],dis2[N],sumv[N];\nint dfn[N],num;\nvoid dfs1(int u,int fa){\n\tst[dfn[u]=++num][0]=d[u];\n\tfor(int i=T1.head[u];i;i=T1.Next[i]){\n\t\tint v=T1.ver[i];\n\t\tif(v==fa) continue;\n\t\td[v]=d[u]+T1.edge[i],dfs1(v,u),st[++num][0]=d[u];\n\t}\n}\ninline ll LCA(int a,int b){\n\tif(dfn[a]>dfn[b]) a^=b^=a^=b;\n\tint k=logn[dfn[b]-dfn[a]+1];\n\treturn min(st[dfn[a]][k],st[dfn[b]-bin[k]+1][k])<<1;\n}\ninline ll dis(int a,int b){return d[a]+d[b]-LCA(a,b);}\nint sz[N],son[N],size,rt,fa[N];bool vis[N];\nvoid dfs2(int u,int fa){\n\tsz[u]=1,son[u]=0;\n\tfor(int i=T1.head[u];i;i=T1.Next[i]){\n\t\tint v=T1.ver[i];\n\t\tif(vis[v]||v==fa) continue;\n\t\tdfs2(v,u),sz[u]+=sz[v],cmax(son[u],sz[v]);\n\t}\n\tcmax(son[u],size-sz[u]);\n\tif(son[u]<son[rt]) rt=u;\n}\nvoid dfs3(int u){\n\tvis[u]=true;\n\tfor(int i=T1.head[u];i;i=T1.Next[i]){\n\t\tint v=T1.ver[i];\n\t\tif(vis[v]) continue;\n\t\trt=0,size=sz[v],son[0]=n+1;\n\t\tdfs2(v,0),T2.add(u,rt,v),fa[rt]=u,dfs3(rt);\n\t}\n}\ninline void update(int u,int val){\n\tsumv[u]+=val;\n\tfor(int p=u;fa[p];p=fa[p]){\n\t\tll dist=dis(fa[p],u)*val;\n\t\tdis1[fa[p]]+=dist;\n\t\tdis2[p]+=dist;\n\t\tsumv[fa[p]]+=val;\n\t}\n}\ninline ll calc(int u){\n\tll ans=dis1[u];\n\tfor(int p=u;fa[p];p=fa[p]){\n\t\tll dist=dis(fa[p],u);\n\t\tans+=dis1[fa[p]]-dis2[p];\n\t\tans+=dist*(sumv[fa[p]]-sumv[p]);\n\t}\n\treturn ans;\n}\nll query(int u){\n\tll ans=calc(u);\n\tfor(int i=T2.head[u];i;i=T2.Next[i]){\n\t\tll tmp=calc(T2.edge[i]);\n\t\tif(tmp<ans) return query(T2.ver[i]);\n\t}\n\treturn ans;\n}\nvoid init(){\n\tn=read(),q=read();\n\tbin[0]=1,logn[0]=-1;\n\tfor(rint i=1;i<=20;++i) bin[i]=bin[i-1]<<1;\n\twhile(bin[tp+1]<=(n<<1)) ++tp;\n\tfor(rint i=1;i<=(n<<1);++i) logn[i]=logn[i>>1]+1;\n\tfor(rint i=1;i<n;++i){\n\t\trint u=read(),v=read(),e=read();\n\t\tT1.add(u,v,e),T1.add(v,u,e);\n\t}\n\tdfs1(1,0),rt=0,son[0]=n+1,size=n,dfs2(1,0);\n\tfor(rint j=1;j<=tp;++j)\n\tfor(rint i=1;i+bin[j]-1<=(n<<1);++i)\n\tst[i][j]=min(st[i][j-1],st[i+bin[j-1]][j-1]);\n}\nint main(){\n\tinit();\n\tint LastOrder=rt;dfs3(rt);\n\twhile(q--){\n\t\tint x=read(),y=read();update(x,y);\n\t\tprint(query(LastOrder));\n\t}\n\tOt();\n\treturn 0;\n}\n```",
        "postTime": 1534297477,
        "uid": 41781,
        "name": "bztMinamoto",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3345 \u3010[ZJOI2015]\u5e7b\u60f3\u4e61\u6218\u7565\u6e38\u620f\u3011"
    },
    {
        "content": "# [ZJOI2015]\u5e7b\u60f3\u4e61\u6218\u7565\u6e38\u620f \u89e3\u9898\u62a5\u544a (\u52a8\u6001\u70b9\u5206\u6cbb\uff09\n\n[[ZJOI2015]\u5e7b\u60f3\u4e61\u6218\u7565\u6e38\u620f](https://www.luogu.com.cn/problem/P3345)\n\n\n\n## \u9898\u610f\n\n\u6709\u4e00\u68f5\u5927\u5c0f\u4e3a $n$ \u7684\u5e26\u6743\u6811, \u6bcf\u4e2a\u70b9\u6709\u4e00\u4e2a\u6743\u503c, \u6743\u503c\u53ef\u4ee5\u4fee\u6539 $q$ \u6b21, \n\n\u627e\u51fa\u4e00\u4e2a\u8865\u7ed9\u70b9 $x$ , \u4f7f\u5f97 $\\sum_{u \\in V} val[u] \\times dis(x,u)$ \u6700\u5c0f, \u5e76\u6c42\u51fa\u8fd9\u4e2a\u6700\u5c0f\u503c.\n\n<br/>\n\n\u4e00\u53e5\u8bdd : \u6c42\u5e26\u6743\u91cd\u5fc3  (zsy\u8bf4\u7684)\n\n</br>\n\n\u9644\u52a0\u6761\u4ef6 : \u6811\u4e2d\u6240\u6709\u70b9\u7684\u5ea6\u6570\u4e0d\u8d85\u8fc7 $20$.\n\n## \u601d\u8def\n\n\u4e00\u9053\u4f60\u4ee5\u4e3a\u590d\u6742\u5ea6\u8fc7\u4e0d\u4e86, \u4f46\u5176\u5b9e\u662f\u8fc7\u5f97\u4e86\u7684\u9898.\n\n<br/>\n\n\u9996\u5148, \u6211\u4eec\u5047\u5b9a\u5148\u9009\u4e86\u4e00\u4e2a\u70b9 $u$ \u4f5c\u4e3a\u8865\u7ed9\u70b9, \u6211\u4eec\u53ef\u4ee5\u7b97\u51fa\u5b83\u7684\u6240\u6709\u5b50\u8282\u70b9 $v$ \u4f5c\u4e3a\u8865\u7ed9\u70b9\u65f6\u6240\u9700\u8981\u7684\u4ee3\u4ef7.\n\n\u90a3\u4e48\u6211\u4eec\u9009\u53d6\u4e00\u4e2a\u4ee3\u4ef7\u6700\u5c0f\u7684\u70b9, \u5e26\u6743\u91cd\u5fc3\u5c31\u4e00\u5b9a\u5728\u5b83\u7684\u5b50\u6811\u5185;\n\n\u5047\u82e5\u70b9 $u$ \u7684\u4ee3\u4ef7\u6700\u5c0f, \u90a3\u4e48\u70b9 $u$ \u5c31\u662f\u5e26\u6743\u91cd\u5fc3.\n\n</br>\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u5927\u81f4\u601d\u8def : \n\n\u5148\u4ece\u4e00\u4e2a\u70b9\u5f00\u59cb, \u6bcf\u6b21\u51b3\u5b9a\u8981\u5f80\u54ea\u4e2a\u5b50\u8282\u70b9\u8d70, \u7136\u540e\u5728\u8fd9\u4e2a\u5b50\u8282\u70b9\u7684\u5b50\u6811\u5185\u9012\u5f52\u5904\u7406\u8fd9\u4e2a\u5b50\u4efb\u52a1.\n\n</br>\n\n\u90a3\u4e48\u4e3a\u4e86\u51cf\u5c0f\u9012\u5f52\u6b21\u6570, \u6211\u4eec\u53ef\u4ee5\u7528\u52a8\u6001\u70b9\u5206\u6cbb, \u6cbf\u7740\u70b9\u5206\u6811\u4e00\u5c42\u4e00\u5c42\u5f80\u4e0b\u5904\u7406, \u6700\u540e\u7ecf\u8fc7 $\\log n$ \u5c42\u627e\u5230\u5e26\u6743\u91cd\u5fc3.\n\n\u800c\u6211\u4eec\u5728\u6bcf\u6b21\u5c42\u4e2d\u7684\u64cd\u4f5c\u5c31\u662f : \u679a\u4e3e\u5f53\u524d\u70b9\u7684\u6bcf\u4e00\u4e2a\u5b50\u8282\u70b9, \u627e\u51fa\u6700\u5c0f\u7684\u90a3\u4e2a, \u7136\u540e\u8df3\u5411\u5b83\u5bf9\u5e94\u7684\u91cd\u5fc3.\n\n</br>\n\n\u90a3\u6211\u4eec\u73b0\u5728\u7684\u95ee\u9898\u5c31\u662f : \u8be5\u5982\u4f55\u8ba1\u7b97\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u8865\u7ed9\u70b9\u65f6\u6240\u9700\u7684\u4ee3\u4ef7.\n\n\u9996\u5148, \u6709\u4e86\u52a8\u6001\u70b9\u5206\u6cbb, \u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u8865\u7ed9\u70b9\u65f6, \u5b83\u5728 **\u70b9\u5206\u6811\u4e2d\u7684\u5b50\u6811** \u4e2d\u7684\u70b9\u5230\u5b83\u7684\u4e2d\u4ee3\u4ef7, \u8bbe\u4e3a $v1$, \n\n\u90a3\u4e48, \u8bbe\u5f53\u524d\u70b9\u4e3a $u$ ,\u6839\u636e $ft[u]$ ( $u$  \u5728\u70b9\u5206\u6811\u4e0a\u7684\u7236\u4eb2) \u7684 $v1$, \u518d\u52a0\u4e0a **\u4e00\u4e9b\u5176\u4ed6\u4e1c\u897f** , \u6211\u4eec\u5c31\u53ef\u4ee5\u6c42\u51fa $ft[u]$ \u5728\u70b9\u5206\u6811\u4e2d\u7684\u5b50\u6811\u7684\u70b9\u5230\u70b9 $u$ \u7684\u603b\u4ee3\u4ef7, \u8fd9\u6837\u4e00\u5c42\u4e00\u5c42\u5f80\u4e0a, \u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u6574\u68f5\u6811\u5230\u70b9 $u$ \u7684\u4ee3\u4ef7.\n\n\u90a3, \u8fd9\u4e9b **\"\u5176\u4ed6\u4e1c\u897f\"** \u662f\u4ec0\u4e48\u5462?\n\n\u6211\u4eec\u53ef\u4ee5\u628a $ft[u]$ \u7684\u5b50\u6811\u5206\u4e3a\u4e24\u90e8\u5206, (\u6ce8 : \u4ece\u8fd9\u91cc\u5f00\u59cb, **\"\u5b50\u6811\"** \u5747\u6307 **\u70b9\u5206\u6811\u4e0a\u7684\u5b50\u6811**.)\n\n1. \u5728\u70b9 $u$ \u7684\u5b50\u6811\u4e2d\u7684\u90e8\u5206.\n2. \u4e0d\u5728\u70b9 $u$ \u7684\u5b50\u6811\u4e2d\u7684\u90e8\u5206.\n\n\u7b2c\u4e00\u90e8\u5206\u6240\u9700\u7684\u4ee3\u4ef7\u5c31\u662f $v1[u]$, \n\n\u4e3a\u4e86\u8ba1\u7b97\u7b2c\u4e8c\u90e8\u5206\u7684\u4ee3\u4ef7, \u6211\u4eec\u589e\u6dfb\u51e0\u4e2a\u503c,\n\n1. $v2[u]$ : \u8868\u793a\u70b9 $u$ \u5b50\u6811\u4e2d\u7684\u70b9\u5230 $ft[u]$ \u6240\u9700\u7684\u4ee3\u4ef7.\n2. $s2[u]$ : \u8868\u793a\u70b9 $u$ \u5b50\u6811\u4e2d\u7684\u70b9\u7684\u603b\u6743\u503c.\n\n\u90a3\u4e48\u7b2c\u4e8c\u90e8\u5206\u7684\u4ee3\u4ef7\u5c31\u4e3a $v1[ft[u]]-v2[u]+dis(u,ft[u])*(s2[fa]-s2[u])$.\n\n\u53ef\u4ee5\u8fd9\u6837\u7406\u89e3 : \n\n$v1[ft[u]]-v2[u]$ \u8868\u793a\u5c06\u70b9 $u$ \u7684\u5b50\u6811\u7684\u4ee3\u4ef7\u53bb\u9664.\n\n$+dis(u,ft[u])*(s2[fa]-s2[u])$ \u8868\u793a\u5c06\u5230 $ft[u]$ \u7684\u4ee3\u4ef7\u8f6c\u4e3a\u5230 $u$ \u7684\u4ee3\u4ef7.\n\n</br>\n\n\u7531\u4e0a\u53ef\u5f97, \u6c42\u4e00\u4e2a\u70b9\u7684\u4ee3\u4ef7\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a : \u5728\u70b9\u5206\u6811\u4e0a\u9010\u5c42\u5411\u4e0a\u7684 $\\log n$ \u4e58\u4e0a\u7b97 $dis$ \u7684 $\\log n$, \u603b\u5171\u4e3a $O(\\log^2 n)$.\n\n\u518d\u4e58\u4e0a\u4e4b\u524d\u7684\u590d\u6742\u5ea6, \u5f97\u5230\u4e00\u6b21\u8be2\u95ee\u7684\u590d\u6742\u5ea6\u4e3a $O(20\\log^3 n)$,\n\n\u90a3\u4e48\u603b\u590d\u6742\u5ea6\u4e3a $O(20n\\log^3 n)$ (\u56e0\u4e3a $q$ \u548c $n$ \u662f\u76f8\u540c\u89c4\u6a21\u7684), \u5927\u6982\u6709 $10^9$, \u770b\u8d77\u6765\u5c31\u5f88\u4e0d\u9760\u8c31, \u4f46\u662f\u5982\u679c\u628a\u7528\u6811\u5256\u6c42 $lca$, \u8fd9\u4e2a\u590d\u6742\u5ea6\u5c31\u8dd1\u4e0d\u6ee1, \u518d\u52a0\u4e0a $6s$ \u7684\u65f6\u9650, \u8fd8\u662f\u53ef\u4ee5\u8fc7\u7684, \u5e76\u4e14\u6d1b\u8c37\u4e0a\u6700\u4f18\u89e3\u603b\u65f6\u95f4\u53ea\u6709 $500$ \u591a\u6beb\u79d2....\n\n\n\n\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int _=1e5+7;\nconst int __=2e5+7;\nconst int L=20;\nconst int inf=0x3f3f3f3f;\nbool be;\nint n,q,dep[_],sz[_],top[_],son[_],fat[_],rt,minx,ft[_],rtt[__];   // v1: to self  v2: to father\nll v1[_],v2[_],s2[_],dis[_];\nint lst[_],nxt[__],to[__],tot;\nll len[__];\nbool vis[_];\nbool en;\nvoid add(int x,int y,ll w){ nxt[++tot]=lst[x]; to[tot]=y; len[tot]=w; lst[x]=tot; }\nvoid dfs1(int u,int fa){\n  fat[u]=fa;\n  dep[u]=dep[fa]+1;\n  for(int i=lst[u];i;i=nxt[i]){\n    int v=to[i];\n    if(v==fa) continue;\n    dis[v]=dis[u]+len[i];\n    dfs1(v,u);\n    sz[u]+=sz[v];\n    if(sz[v]>sz[son[u]]) son[u]=v;\n  }\n}\nvoid dfs2(int u){\n  if(son[u]){\n    top[son[u]]=top[u];\n    dfs2(son[u]);\n  }\n  for(int i=lst[u];i;i=nxt[i])\n    if(!top[to[i]]){\n      top[to[i]]=to[i];\n      dfs2(to[i]);\n    }\n}\nint Lca(int x,int y){\n  while(top[x]!=top[y]){\n    if(dep[top[x]]<dep[top[y]]) swap(x,y);\n    x=fat[top[x]];\n  }\n  return dep[x]<=dep[y] ?x :y;\n}\nll dist(int x,int y){ return dis[x]+dis[y]-2*dis[Lca(x,y)]; }\nvoid g_rt(int u,int fa,int sum){\n  int maxn=0; sz[u]=1;\n  for(int i=lst[u];i;i=nxt[i]){\n    int v=to[i];\n    if(vis[v]||v==fa) continue;\n    g_rt(v,u,sum);\n    sz[u]+=sz[v];\n    maxn=max(maxn,sz[v]);\n  }\n  maxn=max(maxn,sum-sz[u]);\n  if(maxn<minx){ minx=maxn; rt=u; }\n}\nvoid init(int u,int lrt,int sum){\n  minx=inf;\n  g_rt(u,0,sz[u]<sz[lrt] ?sz[u] :sum-sz[lrt]);\n  sum=sz[u];\n  ft[rt]=lrt; \n  vis[rt]=1; u=rt;\n  for(int i=lst[u];i;i=nxt[i])\n    if(!vis[to[i]]){\n      init(to[i],u,sum);\n      rtt[i]=rt;\n    }\n  rt=u;\n  vis[rt]=0;\n}\nvoid modify(int x,ll w){\n  int u=x,fa=ft[u];\n  ll len;\n  while(fa){\n    len=dist(fa,x);\n    //printf(\"u: %d fa: %d len: %d\\n\",u,fa,len);\n    v1[fa]+=w*len;\n    v2[u]+=w*len;\n    s2[u]+=w;\n    u=ft[u]; fa=ft[u];\n  }\n  s2[u]+=w;\n}\nll cst(int x){\n  int u=x,fa=ft[u];\n  ll len,res=v1[x];\n  while(fa){\n    len=dist(x,fa);\n    res+=v1[fa]-v2[u]+len*(s2[fa]-s2[u]);\n    u=ft[u]; fa=ft[u];\n  }\n  return res;\n}\nll query(){\n  int u=rt;\n  ll ans=1e17;\n  while(u){\n    ans=min(ans,cst(u));\n    int x=0;\n    ll minx=1e17;\n    for(int i=lst[u];i;i=nxt[i]){\n      if(!rtt[i]) continue;\n      int v=to[i];\n      ll tmp=cst(v);\n      if(tmp<minx){ minx=tmp; x=rtt[i]; }\n    }\n    u=x;\n  }\n  return ans;\n}\nint main(){\n  //freopen(\"x.in\",\"r\",stdin);\n  //freopen(\"x.out\",\"w\",stdout);\n  cin>>n>>q;\n  int x,y; ll w;\n  for(int i=1;i<n;i++){\n    scanf(\"%d%d%lld\",&x,&y,&w);\n    add(x,y,w);\n    add(y,x,w);\n  }\n  init(1,0,n);\n  dfs1(1,0);\n  top[1]=1;\n  dfs2(1);\n  for(int i=1;i<=q;i++){\n    scanf(\"%d%lld\",&x,&w);\n    modify(x,w);\n    printf(\"%lld\\n\",query());\n  }\n}\n```\n\n",
        "postTime": 1577888361,
        "uid": 113693,
        "name": "BruceW_07",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3345 \u3010[ZJOI2015]\u5e7b\u60f3\u4e61\u6218\u7565\u6e38\u620f\u3011"
    },
    {
        "content": "**\u6811\u7684\u91cd\u5fc3**\n\n\u8003\u8651\u4e00\u4e2a\u70b9\uff0c\u4ee5\u5b83\u4e3a\u6839\u7684\u6811\u4e2d\uff0c\u6700\u5927\u7684\u5b50\u6811\u8282\u70b9\u6570\u6700\u5c11\uff0c\u6211\u4eec\u628a\u8fd9\u4e2a\u70b9\u79f0\u4e3a\u6811\u7684\u91cd\u5fc3\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u4e0b\u56fe\u4e2d\u91cd\u5fc3\u4e3a$1$\u548c$2$\n\n![2333](https://cdn.luogu.com.cn/upload/pic/62751.png)\n\n**\u6811\u5f62dp\u6c42\u91cd\u5fc3**\n\n\u6c42\u89e3\u6811\u7684\u91cd\u5fc3\u7684\u65f6\u5019\uff0c\u6211\u4eec\u901a\u5e38\u4f1a\u91c7\u7528\u6811\u5f62dp\n\n\u6211\u4eec\u7528$s[i]$\u4ee3\u8868\u4ee5$i$\u4e3a\u6839\u7684\u5b50\u6811\u8282\u70b9\u6570\n\n$f[i]$\u4ee3\u8868\u4ee5$i$\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u6700\u5927\u7684\u5b50\u6811\u8282\u70b9\u4e2a\u6570\n\n\u663e\u7136\uff0c$f[u]=max(f[u],s[v])$\n\n\u4f46\u662f\u6211\u4eec\u6c42\u91cd\u5fc3\u7684\u65f6\u5019\uff0c**\u662f\u4ee5$u$\u4e3a\u6839**\u3002\n\n\u8fd8\u662f\u4e3e\u4e0a\u56fe\u7684\u4f8b\u5b50\uff0c\u5f53\u6211\u4eec\u628a2\u53f7\u70b9\u5f53\u6210\u91cd\u5fc3\u65f6\uff0c\u5b83\u5c31\u53d8\u6210\u4e86\u8fd9\u6837\n\n![2333](https://cdn.luogu.com.cn/upload/pic/62758.png)\n\n\u8fd9\u65f6\u5019$2$\u53f7\u8282\u70b9\u7684~~\u7236\u4eb2\u53d8\u6210\u4e86\u513f\u5b50~~\n\n\u6240\u4ee5\u6700\u540e\u7edf\u8ba1$f[u]$\u7684\u65f6\u5019\uff0c\u8fd8\u8981\u8bb0\u5f97\u7edf\u8ba1$n-s[u]$(\u5373\u4ee5\u539f\u6765\u7236\u4eb2\u4e3a\u6839\u7684\u5b50\u6811\u7684\u8282\u70b9\u6570)\n\n**code:**\n\n```\nvoid dfs(int u,int fa)\n{\n\ts[u]=1,f[u]=0;\n\tfor(int i=head[u];i;i=e[i].nxt)\n\t{\n\t\tint v=e[i].to;\n\t\tif(v==fa)continue;\n\t\tdfs(v,u);\n\t\ts[u]+=s[v];\n\t\tf[u]=max(f[u],s[v]); \n\t}\n\tf[u]=max(f[u],n-s[u]);\n}\n```\n\n\u5982\u679c\u9898\u76ee\u8ba9\u6211\u4eec\u6c42\u591a\u4e2a\u91cd\u5fc3\u7684\u7f16\u53f7\uff0c\u5728\u6700\u540e\u7edf\u8ba1\u7684\u65f6\u5019\u6ce8\u610f\u4e00\u4e0b\u5373\u53ef\n\n**code:**\n\n```\n#include<bits/stdc++.h>\n\n#define rd(x) x=read()\n\n#define N 20005\n\nusing namespace std;\n\nint n,m;\n\nstruct E{\n\tint to,nxt;\n}e[N];\nint tot; \nint ans,pos;\nint head[N];\nint f[N],s[N];\n\nvoid addEdge(int u,int v){e[++tot].nxt=head[u],e[tot].to=v,head[u]=tot;}\n\ninline int read()\n{\n    int x=0,f=1;char ch=getchar();\n    while(ch>'9'||ch<'0'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\n\ninline void write(int x)\n{\n    if(x<0){putchar('-');x=-x;}\n    if(x>=10)write(x/10);\n    putchar(x%10+'0');\n}\n\nvoid dfs(int u,int fa)\n{\n\ts[u]=1,f[u]=0;\n\tfor(int i=head[u];i;i=e[i].nxt)\n\t{\n\t\tint v=e[i].to;\n\t\tif(v==fa)continue;\n\t\tdfs(v,u);\n\t\ts[u]+=s[v];\n\t\tf[u]=max(f[u],s[v]); \n\t}\n\tf[u]=max(f[u],n-s[u]);\n}\n\nint main()\n{\n\trd(n);\n\tfor(int i=1;i<=n-1;i++)\n\t{\n\t\tint u,v;\n\t\trd(u),rd(v);\n\t\taddEdge(u,v);\n\t\taddEdge(v,u);\n\t}\n\tdfs(1,-1);\n\tint minn=1e9;\n\tfor(int i=1;i<=n;i++)minn=min(minn,f[i]);\n\tfor(int i=1;i<=n;i++)if(f[i]==minn)printf(\"%d \",i);\n\tprintf(\"\\n\");\n\n    return 0;\n}\n\n```\n\n---\n\n**\u4e00\u4e9b\u6027\u8d28**\n\n\u6811\u7684\u91cd\u5fc3\u6709\u4e00\u5806~~\u7a00\u5947\u53e4\u602a~~\u597d\u73a9\u7684\u6027\u8d28\n\n\u4f46\u662f\u4e00\u5806\u7ec8\u7a76\u8fd8\u662f\u4e00\u4e2a\n\n**\u7b2c\u4e00\u4e2a\u6027\u8d28**\n\n\u628a\u5b83\u6446\u5728\u7b2c\u4e00\u4e2a\uff0c\u4e5f\u4ee3\u8868\u5b83\u662f\u6700\u91cd\u8981\u7684\u6027\u8d28\n\n\u8003\u8651\u4e0a\u56fe\u4e2d\u7684$2$\u53f7\u70b9\n\n\u5b83\u7684\u5b50\u6811\u4e2d\u8282\u70b9\u4e2a\u6570\u6700\u5927\u7684\u5b50\u6811\u662f\u4ee5$1$\u53f7\u70b9\u4e3a\u6839\u7684\u5b50\u6811\n\n\u6211\u4eec\u8003\u8651\u4ee5$1$\u53f7\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u7684\u6839\u8282\u70b9\uff0c\u628a\u5b83\u4f5c\u4e3a\u6211\u4eec\u5047\u60f3\u7684\u91cd\u5fc3\uff0c\u6211\u4eec\u628a\u5b83\u79f0\u4e3a**\u4f2a\u91cd\u5fc3**\uff08\u4e3a\u4e86\u65b9\u4fbf\u8bf4\u660e\uff0c\u8fd9\u4e2a\u540d\u8bcd\u662f\u6211\u9020\u7684\uff09\n\n\u4f2a\u91cd\u5fc3\u7684\u5b50\u6811\u663e\u7136\u662f\u4e0d\u5e73\u8861\u7684\n\n\u5f53\u6211\u4eec\u53d6\u4f2a\u91cd\u5fc3\u4f5c\u4e3a\u91cd\u5fc3\u7684\u65f6\u5019\n\n\u8bbe\u4ee5\u4f2a\u91cd\u5fc3\u4e3a\u6839\u7684\u5b50\u6811\u7684\u8282\u70b9\u4e2a\u6570\uff08\u5373\u539f\u91cd\u5fc3\u6700\u5927\u5b50\u6811\u7684\u8282\u70b9\u4e2a\u6570\uff09\u4e3a$x$,\u539f\u91cd\u5fc3\u5176\u4ed6\u5b50\u6811\u7684\u8282\u70b9\u6570\u4e4b\u548c\u4e3a$y$\n\n\u4ee5\u4f2a\u91cd\u5fc3\u4e3a\u6839\uff0c\u6709\u4e24\u68f5\u5b50\u6811\uff0c\u4e00\u9897\u4e3a$x-1$\uff0c\u4e00\u9897\u4e3a$y+1$\n\n\u6211\u4eec\u8981\u4fdd\u8bc1\u91cd\u5fc3\u662f\u6700\u4f18\u7684\n\n\u6240\u4ee5$x-1<[(n-1)/2]$\n\n$x<=[n/2]$\n\n\u8fd9\u5c31\u662f\u7b2c\u4e00\u4e2a\u6027\u8d28:\n\n**\u4ee5\u91cd\u5fc3\u4e3a\u6839\uff0c\u6240\u6709\u7684\u5b50\u6811\u7684\u5927\u5c0f\u90fd\u4e0d\u8d85\u8fc7\u6574\u4e2a\u6811\u5927\u5c0f\u7684\u4e00\u534a\u3002**\n\n**\u6811\u7684\u91cd\u5fc3\u6700\u591a\u6709\u4e24\u4e2a\u3002**\n\n\u5f53\u4e00\u68f5\u6811\u6709\u4e24\u4e2a\u91cd\u5fc3\u65f6\uff0c\u4e3a\u4e86\u4fdd\u6301\u5c3d\u91cf\u5e73\u8861\uff0c\u5b83\u7684\u7b2c\u4e8c\u4e2a\u91cd\u5fc3\u80af\u5b9a\u5728\u4ee5\u7b2c\u4e00\u4e2a\u91cd\u5fc3\u4e3a\u6839\u7684\u6700\u5927\u7684\u5b50\u6811\u6839\u8282\u70b9\u4e0a\u3002\n\n\u6839\u636e\u6027\u8d281\u4e2d\u7684\u8bc1\u660e\uff1a\u5f53$x=[n/2]$\u65f6\uff0c\u8fd9\u9897\u6811\u5c31\u6709\u4e24\u4e2a\u91cd\u5fc3\u3002\n\n**\u6811\u7684\u91cd\u5fc3\u5230\u5176\u4ed6\u8282\u70b9\u7684\u8ddd\u79bb\u662f\u6700\u5c0f\u7684**\n\n\u6ce8\uff1a\u76f8\u90bb\u4e24\u4e2a\u8282\u70b9\u8ddd\u79bb\u4e3a$1$.\n\n\u6bcf\u4e00\u6b21\u6211\u4eec\u4e00\u683c\u4e00\u683c\u7684\u4ece\u91cd\u5fc3\u79fb\u52a8\u3002\n\n\u5047\u8bbe\u6211\u4eec\u5c06\u91cd\u5fc3\u5411\u4e00\u68f5\u5b50\u6811\u79fb\u52a8\uff0c\u8bbe\u90a3\u9897\u5b50\u6811\u7684\u8282\u70b9\u6570\u4e3a$s$\n\n\u6bcf\u79fb\u52a8\u4e00\u683c\uff0c\u6811\u7684\u6839\u8282\u70b9\u5c31\u53d8\u5316\u4e00\u6b21\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u79fb\u52a8\uff0c\u8bbe\u4e0a\u4e00\u6b21\u91cd\u5fc3\u4e3a$u$\n\n\u5f53\u524d\u91cd\u5fc3\u4e3a$v$\n\n\u8bbe$v$\u7684\u5b50\u6811\u8282\u70b9\u6570\u4e3a$s[v]$\n\n$v$\u7684\u5b50\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\u8ddd\u79bb\u91cd\u5fc3\u51cf\u5c111\n\n\u5176\u4ed6\u7684\u6240\u6709\u8282\u70b9\u8ddd\u79bb\u91cd\u5fc3\u589e\u52a01\n\n\u8bbe$ans[u]$\u8868\u793a$u$\u5230\u5176\u4ed6\u8282\u70b9\u7684\u8ddd\u79bb\n\n\u5219$ans[u]=ans[v]+n-s[v]-s[v]=ans[v]+n-2*s[v]$\n\n\u56e0\u4e3a\u5bf9\u4e8e\u91cd\u5fc3\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9$s[i]<=[n/2]$\n\n\u6240\u4ee5\u91cd\u5fc3\u5230\u5176\u4ed6\u8282\u70b9\u7684\u8ddd\u79bb\u662f\u6700\u5c0f\u7684\u3002\n\n\u7528\u4e0a\u9762\u90a3\u4e2a\u9012\u63a8\u5f0f\u8fd8\u53ef\u4ee5\u6c42\u51fa\u8ddd\u79bb\u5176\u4ed6\u8282\u70b9\u6700\u8fdc\u7684\u8282\u70b9\n\n**\u628a\u4e24\u4e2a\u6811\u901a\u8fc7\u4e00\u6761\u8fb9\u76f8\u8fde\u5f97\u5230\u4e00\u4e2a\u65b0\u7684\u6811\uff0c\u90a3\u4e48\u65b0\u7684\u6811\u7684\u91cd\u5fc3\u5728\u8fde\u63a5\u539f\u6765\u4e24\u4e2a\u6811\u7684\u91cd\u5fc3\u7684\u8def\u5f84\u4e0a\u3002**\n\n\u5173\u4e8e\u8fd9\u4e00\u70b9\u7684\u8bc1\u660e\u8f83\u4e3a\u611f\u6027\n\n\u6211\u4eec\u8003\u8651\u4ee5\u4e24\u68f5\u6811\u7684\u91cd\u5fc3\u4e3a\u6839\uff0c\u5373\u4ee5\u91cd\u5fc3\u628a\u6574\u68f5\u6811\u63d0\u8d77\u6765\u3002\n\n\u5f53\u6211\u4eec\u7528\u4e00\u6761\u8fb9\u628a\u4e24\u68f5\u6811$A,B$\u8fde\u63a5\u8d77\u6765\u65f6\uff0c\n\n\u6211\u4eec\u5148\u8003\u8651\u6811$A$\n\n\u5bf9\u4e8e\u6811$A$,\u6211\u4eec\u53ef\u4ee5\u7406\u89e3\u4e3a\u6811$A$\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9\u62e5\u6709\u4e86\u6240\u6709\u6811$B$\u7684\u8282\u70b9\n\n\u90a3\u4e48\u6574\u4f53\u7684\u4e2d\u5fc3\u80af\u5b9a\u504f\u5411\u90a3\u4e00\u4fa7\n\n\u5bf9\u4e8e\u6811$B$\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u8fd9\u4e48\u7406\u89e3\n\n\u6240\u4ee5\u5728\u504f\u5411\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e2d\u5fc3\u53ef\u80fd\u5b58\u5728\u7684\u4f4d\u7f6e\u4e00\u5b9a\u5728\u6811$A$\u91cd\u5fc3\u548c\u6811$B$\u91cd\u5fc3\u7684\u8fde\u7ebf\u4e0a\n\n\n**\u628a\u4e00\u4e2a\u6811\u6dfb\u52a0\u6216\u5220\u9664\u4e00\u4e2a\u53f6\u5b50\uff0c\u90a3\u4e48\u5b83\u7684\u91cd\u5fc3\u6700\u591a\u53ea\u79fb\u52a8\u4e00\u6761\u8fb9\u7684\u8ddd\u79bb\u3002**\n\n\u8fd9\u4e2a\u8bf7\u8bfb\u8005\u5229\u7528\u4ee5\u4e0a\u6027\u8d28\u81ea\u884c\u8bc1\u660e\n\n---\n\n\u73b0\u5728\uff0c\u9898\u76ee\u8981\u6c42\u6211\u4eec\u7ef4\u62a4\u5e7f\u4e49\u4e2d\u5fc3\u7684\u70b9\u6743\uff08\u52a0\u51cf\u4e00\u4e2a\u503c\uff09\n\n\u52a8\u6001\u70b9\u5206\u6cbb\uff08\u70b9\u5206\u6811\uff09\u56fa\u7136\u53ef\u505a\uff0c\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u6811\u94fe\u5256\u5206\u7684\u65b9\u6cd5.\n\n**\u5373\u4f7f\u6211\u4eec\u628a\u91cd\u5fc3\u7684\u5b9a\u4e49\u5e7f\u4e49\u5316\u4e86\uff0c**\n\n**\u91cd\u5fc3\u4f9d\u65e7\u4e0d\u4f9d\u8d56\u4e8e\u8fb9\u6743**\n\n\u56de\u987e\u4e00\u4e0b\u91cd\u5fc3\u7684\u539f\u5b9a\u4e49\uff1a\n\n> **\u8003\u8651\u4e00\u4e2a\u70b9\uff0c\u4ee5\u5b83\u4e3a\u6839\u7684\u6811\u4e2d\uff0c\u6700\u5927\u7684\u5b50\u6811\u8282\u70b9\u6570\u6700\u5c11\uff0c\u6211\u4eec\u628a\u8fd9\u4e2a\u70b9\u79f0\u4e3a\u6811\u7684\u91cd\u5fc3**\n\n\u8fd9\u91cc\uff0c\u6211\u4eec\u8981\u628a\u8282\u70b9\u6570\u6539\u4e3a\u8282\u70b9\u6743\u503c\u603b\u548c\n\n\u8fd9\u91cc\u8bc1\u660e\u4e00\u4e0b\uff1a\n\n\u6211\u4eec\u7528\u7c7b\u4f3c\u8bc1\u660e\u6027\u8d28**\u6811\u7684\u91cd\u5fc3\u5230\u5176\u4ed6\u8282\u70b9\u7684\u8ddd\u79bb\u662f\u6700\u5c0f\u7684**\u7684\u65b9\u6cd5\uff0c\u8003\u8651\u4ece\u91cd\u5fc3\u79fb\u52a8\u4e00\u6b21\n\n\u6211\u4eec\u7528$w(u,v)$\u8868\u793a$u->v$\u7684\u8ddd\u79bb,$e(u)$\u8868\u793a$u$\u7684\u70b9\u6743,$f(u)$\u8868\u793a\u603b\u548c\n\n\u5b9a\u4e49$f(u)=\\sum e(v)*w(u,v)$\n\n\u56e0\u4e3a\u8fd9\u662f\u4e00\u9897\u65e0\u6839\u6811\uff0c\u6240\u4ee5\u6211\u4eec\u4ee5\u6700\u5927\u7684\u5b50\u6811\u8282\u70b9\u6743\u503c\u603b\u548c\u6700\u5c0f\u7684\u70b9$u$\u4e3a\u6839,$size_i$\u8868\u793a$u$\u8282\u70b9\u7684\u7b2c$i$\u4e2a\u5b50\u6811\u7684\u5927\u5c0f\uff0c$s_i$\u8868\u793a$size_i$\u8868\u793a$u$\u8282\u70b9\u7684\u7b2c$i$\u4e2a\u5b50\u6811\n\n\u79fb\u52a8\u4e00\u6761\u8fb9\u4e4b\u540e\uff0c\u8bbe$u'$\u662f$u$\u7684\u7b2c$k$\u4e2a\u5b50\u6811\u7684\u6839\u8282\u70b9\uff0c\n\n$f(u')=f(u)-\\sum e(v)(v \\in s_i)+\\sum e(v)(v \\notin s_i)$\n\n\u56e0\u4e3a\u4fdd\u8bc1\u4e86$\\sum e(v)(v \\in s_i)<=[\\sum e(v)/2]$\n\n\u6240\u4ee5$f(u')>=f(u)$\n\n\u6240\u4ee5$f(u)$\u662f\u6700\u4f18\u7684\u3002\n\n---\n\n\u56e0\u4e3a\u4e00\u6761\u94fe\u4e0a\u6df1\u5ea6\u8d8a\u5927dfs\u5e8f\u8d8a\u5927\uff0c\n\n\u6240\u4ee5\u6839\u636e\u8fd9\u4e2a\u6027\u8d28\uff0c\u6211\u4eec\u53ea\u8981\u627e\u5230\u4e00\u4e2a\u70b9$u$,\n\n\u4f7f\u5f97$f(u)*2>=f(rt)$\uff0c\u4e14$u$\u8282\u70b9\u6700\u6df1\n\n\u8fd9\u4e2a\u53ef\u4ee5\u5728\u7ebf\u6bb5\u6811\u4e0a\u5229\u7528\u4e8c\u5206\u5feb\u901f\u627e\u51fa\u3002\n\n\u6211\u4eec\u7528$cost$\u8868\u793a\u82b1\u8d39\uff0c$e(v),w(u,v)$\u7684\u5b9a\u4e49\u540c\u4e0a\n\n$cost=\\sum e(v)*w(u,v)$\n\n\u5bf9\u4e8e$w(u,v)$\u6211\u4eec\u53ef\u4ee5\u7528LCA\u7ef4\u62a4\uff1a$w(u,v)=w(u,rt)+w(v,rt)-2*w(lca,rt)$\n\n\u5219\u539f\u5f0f\u53ef\u5316\u4e3a\uff1a$cost=\\sum w(u,rt)*e(v)+\\sum w(v,rt)*e(v)-2*w(lca,rt)*e(v)$\n\n\u5728\u66f4\u65b0\u7684\u65f6\u5019\uff0c\u8bb0\u5f55\u4e00\u4e0b$\\sum \\Delta e$\u548c$\\sum \\Delta w(u,rt)*e$\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(1)$\n\n\u5bf9\u4e8e$w(lca,rt)*e(v)$\u6bcf\u4e00\u6b21\u66f4\u65b0\u65f6\uff0c\u6211\u4eec\u90fd\u4ece\u5f53\u524d\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u5927\u5c0f$size$\u4e00\u8def\u4fee\u6539\n\n\u67e5\u8be2\u65f6\uff0c\u5373\u67e5\u8be2$\\sum (w(u,rt)-w(fa[u],rt))*size(u)$\n\n$w(u,rt)-w(fa[u],rt)$\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(nlog^2n)$",
        "postTime": 1570436568,
        "uid": 53807,
        "name": "Erusel",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3345 \u3010[ZJOI2015]\u5e7b\u60f3\u4e61\u6218\u7565\u6e38\u620f\u3011"
    },
    {
        "content": "[P3345 [ZJOI2015]\u5e7b\u60f3\u4e61\u6218\u7565\u6e38\u620f](https://www.luogu.com.cn/problem/P3345)\n\n\u6309\u7167\u627e\u91cd\u5fc3\u7684\u666e\u904d\u601d\u8def\uff0c\u6211\u4eec\u4ece\u6839\u8282\u70b9\u5f00\u59cb dfs\u3002\u5047\u8bbe\u5f53\u524d\u8865\u7ed9\u7ad9\u4e3a $u$\uff0c$v$ \u4e3a $u$ \u7684\u4e00\u4e2a\u5b50\u8282\u70b9\uff0c\u5982\u679c\u5c06\u8865\u7ed9\u7ad9\u8fc1\u79fb\u5230\u70b9 $v$ \u66f4\u4f18\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5f80 $v$ \u7684\u65b9\u5411\u7ee7\u7eed dfs\u3002\n\n\u6211\u4eec\u7528\u52a8\u6001\u70b9\u5206\u6cbb\u4f18\u5316\u8fd9\u4e2a\u8fc7\u7a0b\uff1a\u5047\u8bbe\u73b0\u5728\u5230\u4e86\u70b9 $u$ \u7684\u5206\u6cbb\u5b50\u6811\uff0c\u5e76\u4e14\u53d1\u73b0\u6700\u4f18\u89e3\u5728 $v$ \u7684\u5206\u6cbb\u5b50\u6811\u5185\uff08 $v$ \u4e3a $u$ \u5728\u70b9\u5206\u6811\u4e0a\u7684\u4e00\u4e2a\u5b50\u8282\u70b9\uff0c\u539f\u6811\u4e0a\u6709\u8fb9 $(u,w)$ \u4e14 $w$ \u5728 $v$ \u7684\u5206\u6cbb\u5b50\u6811\u5185\uff09\uff0c\u5219\u8f6c\u79fb\u5230 $v$ \u7684\u5206\u6cbb\u5b50\u6811\u5185\u6c42\u89e3\u3002\n\n\u90a3\u4e48\u5269\u4e0b\u7684\u95ee\u9898\u5c31\u662f\u5f53\u8865\u7ed9\u7ad9\u7684\u4f4d\u7f6e\u786e\u5b9a\u65f6\uff0c\u5982\u4f55\u5feb\u901f\u6c42\u51fa\u4ee3\u4ef7\u3002\u501f\u9274\u6362\u6839 dp \u7684\u601d\u60f3\uff0c\u6211\u4eec\u8003\u8651\u7528\u7236\u4eb2\u7684\u4ee3\u4ef7+\u4ee3\u4ef7\u7684\u53d8\u5316\u91cf\u6c42\u51fa\u513f\u5b50\u7684\u4ee3\u4ef7\u3002\u5177\u4f53\u5730\uff0c\u8bbe $dis1_u$ \u8868\u793a $u$ \u7684\u5206\u6cbb\u5b50\u6811\u5185 $\\sum d_v\\times dis(u,v)$\uff0c$dis2_u$ \u8868\u793a $u$ \u5411\u5176\u70b9\u5206\u6811\u4e0a\u7236\u4eb2\u7684 $dis1$ \u7684\u8d21\u732e\uff0c\u5373 $\\sum d_v\\times dis(fa_u,v)$\u3002\u8ba1\u7b97\u589e\u91cf\u65f6\uff0c\u6211\u4eec\u66b4\u529b\u8df3\u70b9\u5206\u6811\u4e0a\u7684\u7236\u4eb2\uff0c\u7d2f\u52a0\u8d21\u732e\u5373\u53ef\uff0c\u5177\u4f53\u5f0f\u5b50\u89c1\u4ee3\u7801\u3002\u8fd9\u90e8\u5206\u5355\u6b21\u8ba1\u7b97\u7684\u590d\u6742\u5ea6\u4e3a $O(\\log n)$\u3002\n\n\u8003\u8651\u8fd9\u6837\u505a\u7684\u590d\u6742\u5ea6\uff1a\u5047\u8bbe\u5f53\u524d\u8865\u7ed9\u7ad9\u4e3a $u$\uff0c$v$ \u4e3a $u$ \u7684\u4e00\u4e2a\u5b50\u8282\u70b9\uff0c\u8bbe $sum$ \u4e3a\u5b50\u6811\u5185\u70b9\u6743\u548c\uff0c\u5982\u679c\u5c06\u8865\u7ed9\u7ad9\u8fc1\u79fb\u5230\u70b9 $v$\uff0c\u4ee3\u4ef7\u7684**\u589e\u91cf**\u4e3a$w(u,v)\\times(sum_u-sum_v-sum_v)$\u3002\u5f97\u51fa\u6027\u8d28\uff1a\u8865\u7ed9\u7ad9\u5728 $v$\u6bd4 $u$ \u4f18\uff0c\u5f53\u4e14\u4ec5\u5f53 $2\\times sum_v>sum_u$\u3002\u663e\u7136\u6ee1\u8db3\u6761\u4ef6\u7684 $v$ \u6700\u591a\u53ea\u6709\u4e00\u4e2a\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u9012\u5f52\u627e\u91cd\u5fc3\u65f6\uff0c\u6bcf\u6b21\u6700\u591a\u53ea\u4f1a\u8fdb\u5165 $u$ \u7684\u4e00\u4e2a\u5b50\u6811\u5185\uff0c\u56e0\u4e3a\u70b9\u5206\u6811\u53ea\u6709 $\\log$ \u5c42\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6\uff08\u9700\u8981 $O(1) $ LCA \u6216\u8005\u9884\u5904\u7406 LCA\uff09 \u4e3a $O(n\\log^2n)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\ntypedef long long ll;\nusing namespace std;\nnamespace FGF\n{\n\tint n,m;\n\tconst int N=1e5+5;\n\tstruct edg{\n\t\tint to,nxt,w;\n\t}E[N<<1],e[N<<1];\n\tint fa[N],dep[N<<1],st[N<<2][25],head[N],cnt,cnt1,head1[N],dfn[N<<1],id[N<<1],num,lo[N<<2],mxson[N],sz,siz[N];\n\tll dis[N],dis1[N],dis2[N],sum[N],ro;\n\tbool vis[N];\n\tvoid add(int u,int v,int w)\n\t{\n\t\tcnt++;\n\t\te[cnt].to=v;\n\t\te[cnt].nxt=head[u];\n\t\thead[u]=cnt;\n\t\te[cnt].w=w;\n\t}\n\tvoid Add(int u,int v,int w)\n\t{\n\t\tcnt1++;\n\t\tE[cnt1].to=v;\n\t\tE[cnt1].nxt=head1[u];\n\t\thead1[u]=cnt1;\n\t\tE[cnt1].w=w;\n\t}\n\tvoid predfs(int u,int f,int d)\n\t{\n\t\tdfn[u]=++num,id[num]=u,dep[num]=d;\n\t\tfor(int i=head[u];i;i=e[i].nxt)\n\t\t\tif(e[i].to!=f)dis[e[i].to]=dis[u]+e[i].w,predfs(e[i].to,u,d+1),id[++num]=u,dep[num]=d;\n\t}\n\tvoid init()\n\t{\n\t\tpredfs(1,0,1);lo[0]=-1;\n\t\tfor(int i=1;i<=num;i++)lo[i]=lo[i>>1]+1;\n\t\tfor(int i=1;i<=num;i++)st[i][0]=i;\n\t\tfor(int j=1;j<=lo[num];j++)\n\t\t\tfor(int i=1;i+(1<<j)-1<=num;i++)\n\t\t\t\tst[i][j]=(dep[st[i][j-1]]<=dep[st[i+(1<<(j-1))][j-1]]? st[i][j-1]:st[i+(1<<(j-1))][j-1]);\n\t}\n\tint getlca(int x,int y)\n\t{\n\t\tint l=dfn[x],r=dfn[y];\n\t\tif(l>r)swap(l,r);\n\t\tint k=lo[r-l+1];\n\t\treturn dep[st[l][k]]<=dep[st[r-(1<<k)+1][k]]? id[st[l][k]]:id[st[r-(1<<k)+1][k]];\n\t}\n\tll getdis(int u,int v)\n\t{\n\t\treturn dis[u]+dis[v]-2LL*dis[getlca(u,v)];\n\t}\n\tvoid getrt(int u,int f)\n\t{\n\t\tsiz[u]=1;mxson[u]=0;\n\t\tfor(int i=head[u];i;i=e[i].nxt)\n\t\t{\n\t\t\tint v=e[i].to;\n\t\t\tif(v==f||vis[v])continue;\n\t\t\tgetrt(v,u);\n\t\t\tsiz[u]+=siz[v],mxson[u]=max(mxson[u],siz[v]);\n\t\t}\n\t\tmxson[u]=max(mxson[u],sz-siz[u]);\n\t\tif(mxson[u]<mxson[ro])ro=u;\n\t}\n\tvoid build(int u)\n\t{\n\t\tvis[u]=1;\n\t\tfor(int i=head[u];i;i=e[i].nxt)\n\t\t{\n\t\t\tint v=e[i].to;\n\t\t\tif(vis[v])continue;\n\t\t\tmxson[ro=0]=n,sz=siz[v];\n\t\t\tgetrt(v,0);\n\t\t\tfa[ro]=u;Add(u,ro,v);\n\t\t\tbuild(ro);\n\t\t}\n\t}\n\tvoid updat(int u,int val)\n\t{\n\t\tsum[u]+=val;\n\t\tfor(int i=u;fa[i];i=fa[i])\n\t\t{\n\t\t\tll d=getdis(fa[i],u);\n\t\t\tdis1[fa[i]]+=d*val;\n\t\t\tdis2[i]+=d*val;\n\t\t\tsum[fa[i]]+=val;\n\t\t}\n\t}\n\tll calc(int u)\n\t{\n\t\tll ans=dis1[u];\n\t\tfor(int i=u;fa[i];i=fa[i])\n\t\t\tans+=dis1[fa[i]]-dis2[i]+getdis(fa[i],u)*(sum[fa[i]]-sum[i]);\n\t\treturn ans;\n\t}\n\tll query(int u)\n\t{\n\t\tll ans=calc(u);\n\t\tfor(int i=head1[u];i;i=E[i].nxt)\n\t\t\tif(calc(E[i].w)<ans)return query(E[i].to);\n\t\treturn ans;\n\t}\t\n\tvoid work()\n\t{\n\t\tscanf(\"%d%d\",&n,&m);\n\t\tfor(int i=1;i<n;i++)\n\t\t{\n\t\t\tint u,v,w;\n\t\t\tscanf(\"%d%d%d\",&u,&v,&w);\n\t\t\tadd(u,v,w),add(v,u,w);\n\t\t}\n\t\tinit();\n\t\tmxson[0]=sz=n;getrt(1,0);\n\t\tint tmp=ro;build(ro); ro=tmp;\n\t\twhile(m--)\n\t\t{\n\t\t\tint x,y;\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tupdat(x,y);\n\t\t\tprintf(\"%lld\\n\",query(ro));\n\t\t}\n\t}\n}\nint main()\n{\n\tFGF::work();\n\treturn 0;\n}\n```",
        "postTime": 1609856975,
        "uid": 224403,
        "name": "\u6728xx\u6728\u5927",
        "ccfLevel": 9,
        "title": "P3345 [ZJOI2015]\u5e7b\u60f3\u4e61\u6218\u7565\u6e38\u620f\uff08\u70b9\u5206\u6811\u7ef4\u62a4\u6811\u7684\u91cd\u5fc3\uff09"
    },
    {
        "content": "\u5f88\u4e45\u6ca1\u6709\u88ab\u9898\u76ee\u6076\u5fc3\u5f97\u6b32\u4ed9\u6b32\u6b7b\u4e86\n\n\u4e8e\u662f\u4eca\u5929\u627e\u4e86\u4e2a\u8650\n\n## \u6b63\u6587\n\n\u6574\u7406\u597d\u601d\u8def\u5176\u5b9e\u8fd9\u9898\u662f\u8981\u6bd4\u6349\u8ff7\u85cf\u3001Qtree4\u597d\u5199\u7684\n\n### Step1\n\n\u5efa\u597d\u70b9\u5206\u6811\u4ee5\u53ca\u6253\u597d\u6811\u5256\uff08\u7528\u6765\u6c42\u4e24\u70b9\u8ddd\u79bb\uff09\n\n### Step2\n\n\u7ef4\u62a4\u4e09\u4e2a\u4e1c\u897f\u5c31\u5f88\u597d\u8ba1\u7b97\u4ee5\u6307\u5b9a\u7684\u67d0\u4e2a\u70b9\u4e3a\u8865\u7ed9\u7ad9\u7684\u7b54\u6848\u4e86\n```\n  d[x]\u8868\u793a\u70b9\u5206\u6811\u4e0a\u4ee5x\u4e3a\u6839\u7684\u5b50\u6811\u7684\u5175\u961f\u603b\u6570\n  val[x]\u8868\u793a\u70b9\u5206\u6811\u4e0a\u4ee5x\u4e3a\u6839\u7684\u5b50\u6811\u7684\u5175\u961f\u5230\u8fbex\u7684\u4ee3\u4ef7\u548c\n  tofa[x]\u8868\u793a\u70b9\u5206\u6811\u4e0a\u4ee5x\u4e3a\u6839\u7684\u5b50\u6811\u7684\u5175\u961f\u5230\u8fbex\u7684\u7236\u4eb2\u7684\u4ee3\u4ef7\u548c\n```\n\u4e8e\u662f\u5177\u4f53\u64cd\u4f5c\u5728Calc\u51fd\u6570\u4e2d\uff0c\u6709\u8be6\u7ec6\u89e3\u91ca\n\n### Step3\n\n\u5177\u4f53\u4ee3\u7801\u6d41\u7a0b\n\n1.\u5efa\u597d\u70b9\u5206\u6811\n\n2.\u4fee\u6539\u67d0\u4e2a\u70b9\uff0c\u66b4\u8df3\u70b9\u5206\u6811\u7684\u7236\u4eb2\u5bf9\u5e94\u4fee\u6539\u4e09\u4e2a\u503c\n\n3.\u4ece\u70b9\u5206\u6811\u6839\u5f00\u59cb\u67e5\u8be2\uff0c\u627e\u5230\u771f\u6b63\u7684\u5e26\u6743\u91cd\u5fc3\u540e\u8fd4\u56de\u7b54\u6848\uff08Query\u51fd\u6570\u6709\u8be6\u7ec6\u6ce8\u91ca\uff09\n\n### \u6ce8\u610f\u4e8b\u9879\n1.\u8981\u5f00long long \uff08\u53cd\u6b63\u67096\u79d2\u4f60\u5f00gedit\u5c31\u53ef\u4ee5\u628aint\u5168\u90e8\u6362\u6210long long\uff09\n\n2.\u8d2a\u5fc3\u8df3\u5e26\u6743\u91cd\u5fc3\uff0c\u4f60\u6b64\u65f6\u5728x\u70b9\uff0c\u70b9\u5206\u6811\u4e0ax\u7684\u513f\u5b50\u6709y\uff0c\u4f60\u770bx\u8981\u4e0d\u8981\u8df3\u5230y\uff0c\u9700\u8981\u68c0\u67e5\u7684\u662fy\u7684\u5206\u6cbb\u533a\u57df\u4e0ex\u76f4\u63a5\u76f8\u8fde\u7684\u90a3\u4e2a\u70b9\uff08near[y]\uff09\u7684\u7b54\u6848\u662f\u5426\u6bd4x\u7684\u5c0f\uff0c\u800c\u4e0d\u662f\u68c0\u67e5y\u7684\n\n3.\u672c\u4eba\u592a\u83dc\u5728Getroot\u6ca1\u6709\u5224\u65advis\u800cTLE\u4e86\u4e00\u6b21\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<vector>\n#define ll long long\nusing namespace std;\nll read()\n{\n\tchar ch=getchar();ll h=0,t=1;\n\twhile((ch>'9'||ch<'0')&&ch!='-') ch=getchar();\n\tif(ch=='-') t=-1,ch=getchar();\n\twhile(ch>='0'&&ch<='9') h=h*10+ch-'0',ch=getchar();\n\treturn h*t;\n}\nconst ll N=100100;\nstruct edge{ll next,to,w;}a[N<<1];\nll n,q,head[N],cnt,rt,mx[N],siz[N],fa[N],vis[N],sum;\nll d[N],val[N],tofa[N],Root,near[N];\nvector<int> erz[N];\n/*\n  d[x]\u8868\u793a\u70b9\u5206\u6811\u4e0a\u4ee5x\u4e3a\u6839\u7684\u5b50\u6811\u7684\u5175\u961f\u603b\u6570\n  val[x]\u8868\u793a\u70b9\u5206\u6811\u4e0a\u4ee5x\u4e3a\u6839\u7684\u5b50\u6811\u7684\u5175\u961f\u5230\u8fbex\u7684\u4ee3\u4ef7\u548c\n  tofa[x]\u8868\u793a\u70b9\u5206\u6811\u4e0a\u4ee5x\u4e3a\u6839\u7684\u5b50\u6811\u7684\u5175\u961f\u5230\u8fbex\u7684\u7236\u4eb2\u7684\u4ee3\u4ef7\u548c\n  erz[x]\u8bb0\u5f55\u70b9\u5206\u6811\u4e0ax\u7684\u513f\u5b50\n  near[x]\u8868\u793ax\u7684\u5206\u6cbb\u533a\u57df\u4e0ex\u70b9\u5206\u6811\u7236\u4eb2\u7684\u76f8\u90bb\u7ed3\u70b9\n */\nvoid Max(ll &a,ll b) {if(b>a) a=b;}\nvoid link(ll x,ll y,ll w)\n{\n\ta[++cnt]=(edge){head[x],y,w};head[x]=cnt;\n\ta[++cnt]=(edge){head[y],x,w};head[y]=cnt;\n}\nnamespace sp\n{\n\tll siz[N],dep[N],son[N],top[N],tot,dfn[N],fa[N];\n\tvoid dfs1(ll x)\n\t{\n\t\tfor(ll i=head[x];i;i=a[i].next)\n\t\t{\n\t\t\tll R=a[i].to;if(R==fa[x]) continue;\n\t\t\tfa[R]=x;siz[R]=1;dep[R]=dep[x]+a[i].w;\n\t\t\tdfs1(R);siz[x]+=siz[R];\n\t\t\tif(siz[R]>siz[son[x]]) son[x]=R;\n\t\t}\n\t}\n\tvoid dfs2(ll x)\n\t{\n\t\ttop[x]=x;dfn[x]=++tot;\n\t\tif(son[fa[x]]==x) top[x]=top[fa[x]];\n\t\tif(son[x]) dfs2(son[x]);\n\t\tfor(ll i=head[x];i;i=a[i].next)\n\t\t\tif(a[i].to!=son[x]&&a[i].to!=fa[x]) dfs2(a[i].to);\n\t}\n\tll LCA(ll x,ll y)\n\t{\n\t\twhile(top[x]^top[y])\n\t\t{\n\t\t\tif(dep[top[x]]<dep[top[y]]) swap(x,y);\n\t\t\tx=fa[top[x]];\n\t\t}\n\t\treturn dep[x]<dep[y]?x:y;\n\t}\n\tll Dis(ll x,ll y) {return dep[x]+dep[y]-2*dep[LCA(x,y)];}\n}\nvoid Getroot(ll x,ll f)\n{\n\tsiz[x]=1;mx[x]=0;\n\tfor(ll i=head[x];i;i=a[i].next)\n\t{\n\t\tll R=a[i].to;if(R==f||vis[R]) continue;\n\t\tGetroot(R,x);siz[x]+=siz[R];\n\t\tMax(mx[x],siz[R]);\n\t}\n\tMax(mx[x],sum-siz[x]);\n\tif(mx[x]<mx[rt]) rt=x;\n}\nvoid solve(ll x,ll f)\n{\n\tvis[x]=1;\n\tfor(ll i=head[x],tt=sum;i;i=a[i].next)\n\t{\n\t\tll R=a[i].to;if(vis[R]) continue;\n\t\trt=0;sum=siz[R]>siz[x]?tt-siz[x]:siz[R];\n\t\tGetroot(R,x);\n\t\tfa[rt]=x;near[rt]=R;\n\t\terz[x].push_back(rt);\n\t\tsolve(rt,x);\n\t}\n}\nvoid Update(ll x,ll e)\n{\n\tll st=x;d[x]+=e;\n\twhile(x)\n\t{\n\t\tll dis=sp::Dis(st,fa[x]);\n\t\td[fa[x]]+=e;//\u52a0\u4e0a\u5175\u961f\u603b\u6570\n\t\tval[fa[x]]+=e*dis;//\u52a0\u4e0a\u5230\u8fbe\u7236\u4eb2\u7684\u4ee3\u4ef7\n\t\ttofa[x]+=e*dis;//\u52a0\u4e0a\u5bf9\u7236\u4eb2\u7684\u8d21\u732e\n\t\tx=fa[x];\n\t}\n}\nll Calc(ll x)//\u8be2\u95ee\u4ee5x\u4e3a\u8865\u7ed9\u7ad9\u65f6\u7684\u7b54\u6848\n{\n\tll res=val[x],st=x;//\u521d\u503c\u4e3a\u513f\u5b50\u5230x\u7684\u7b54\u6848\n\twhile(x)//\u66b4\u8df3\u70b9\u5206\u6811\u7236\u4eb2\n\t{\n\t\tll dis=sp::Dis(st,fa[x]);\n\t\tres+=(d[fa[x]]-d[x])*dis;//\u5176\u4ed6\u5144\u5f1f\u4f1a\u591a\u8d70\u4e00\u6bb5\u8def\n\t\tres+=val[fa[x]]-tofa[x];//\u52a0\u4e0a\u5176\u4ed6\u5144\u5f1f\u5bf9\u7b54\u6848\u7684\u8d21\u732e\n\t\tx=fa[x];\n\t}\n\treturn res;\n}\nll Query(ll x)\n{\n\tll tt=Calc(x);\n\tfor(ll i=0,l=erz[x].size();i<l;i++)\n\t\tif(Calc(near[erz[x][i]])<tt) return Query(erz[x][i]);\n\treturn tt;\n}\nint main()\n{\n\tn=read();q=read();\n\tfor(ll i=2;i<=n;i++)\n\t{\n\t\tll x=read(),y=read(),w=read();\n\t\tlink(x,y,w);\n\t}\n\tsp::dfs1(1);sp::dfs2(1);\n\trt=0;sum=mx[0]=n;\n\tGetroot(1,0);\n\tRoot=rt;\n\tsolve(rt,0);\n\tfor(ll i=1;i<=q;i++)\n\t{\n\t\tll x=read(),w=read();\n\t\tUpdate(x,w);\n\t\tprintf(\"%lld\\n\",Query(Root));\n\t}\n\treturn 0;\n}\n\n```\n\u5199\u8d77\u6765\u771f\u7684\u8981\u6bd4\u6349\u8ff7\u85cf\u7b80\u5355\u591a\u4e86\u8bf6\n\n\u4f60\u6765\u770b\u770b\u54af https://www.cnblogs.com/xzyxzy/p/9481496.html\n\n~~\u6b22\u8fce\u7ed9\u535a\u4e3b\u63d0\u4f9b\u6bd2\u7624\u9898~~",
        "postTime": 1534316700,
        "uid": 43628,
        "name": "xzyxzy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3345 \u3010[ZJOI2015]\u5e7b\u60f3\u4e61\u6218\u7565\u6e38\u620f\u3011"
    },
    {
        "content": "\t\u9996\u5148\u60f3\u5230dp\uff0c\u4f46\u662f\u4e0d\u80fd\u652f\u6301\u4fee\u6539\u3002~~\u542c\u67d0\u4e9b\u5927\u4f6c\u8bf4\u662f\u52a8\u6001\u70b9\u5206\u6cbb\uff0c\u7136\u800c\u672c\u849f\u84bb\u5e76\u4e0d\u4f1a\u3002~~\n\t\u666e\u901a\u7684\u70b9\u5206\u6cbb\u662f\u9759\u6001\u7684\uff0c\u53ef\u4ee5nlogn\u7684\u65f6\u95f4\u6c42\u89e3\u3002\u52a8\u6001\u70b9\u5206\u6cbb\u4e2d\u5148\u6309\u5404\u5c42\u5206\u6cbb\u7684\u4e2d\u5fc3\u5efa\u4e00\u4e2a\u70b9\u5206\u6811\u3002\u53ef\u4ee5\u8bc1\u660e\uff0c\u8fd9\u68f5\u6811\u7684\u6df1\u5ea6\u4e0d\u8d85\u8fc7logn\u7ea7\u522b\u7136\u540e\u5728\u8fd9\u68f5\u6811\u4e0a\u4fee\u6539\u6216\u6c42\u89e3\u5373\u53ef\u3002\n\t\u56de\u5230\u8fd9\u9053\u9898\uff0c\u5148\u5efa\u70b9\u5206\u6811\u3002\u5982\u679c\u4e0d\u52a0\u8bf4\u660e\uff0c\u6240\u6709\u64cd\u4f5c\u90fd\u662f\u5728\u70b9\u5206\u6811\u4e0a\u8fdb\u884c\u7684\u3002\u901a\u8fc7\u89c2\u5bdf\uff0c\u53d1\u73b0\u6700\u4f18\u7684\u8865\u7ed9\u7ad9\u662f\u8fd9\u68f5\u6811\u7684\u5e26\u6743\u91cd\u5fc3\uff0c\u5373\u5982\u679c\u73b0\u5728\u8282\u70b9\u7684\u5b50\u6811d\u7684\u548c*2\u5927\u4e8e\u603b\u8282\u70b9\uff44\u7684\u548c\uff0c\u90a3\u4e48\u5411\u90a3\u4e2a\u65b9\u5411\u8fc7\u53bb\u4e00\u5b9a\u6bd4\u539f\u65b9\u6848\u597d\u3002\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff0c\u8bb0f[i]\u4e3a\u4ee5\uff49\u4e3a\u6839\u7684\u5b50\u6811d\u7684\u548c\u3002\u5148\u4ece\u6839\u5f00\u59cb\uff0c\u5982\u679cf[s]*2>f[r]\uff08\uff53\u662f\uff52\u7684\u513f\u5b50\uff09\uff0c\u5219\u5411\uff53\u641c\u7d22\u3002\u7136\u800c\u6709\u4e00\u4e2a\u95ee\u9898\uff0cf[s]\u53ea\u5305\u542b\u4e00\u90e8\u5206\u7684\u7ed3\u70b9\uff0c\u6240\u4ee5\u8981\u628a\u5269\u4f59\u90e8\u5206\u52a0\u5230\u91cc\u9762\u3002\u56e0\u6b64\u5728\u5efa\u6811\u7684\u65f6\u5019\u8981\u628a\u6839\u5411\u539f\u6811\u6bcf\u4e2a\u5757\u7684\u7b2c\u4e00\u4e2a\u70b9\u8bb0\u4e0b\u6765\uff08\u8bb0\u4e3au\uff09\uff0c\u7136\u540e\u627e\u5e26\u6743\u91cd\u5fc3\u7684\u65f6f[u]+=f[r]-f[s]\uff0c\u5411\u4e0a\u66f4\u65b0\u3002\n    \u53e6\u5916\u8fd8\u8981\u5bf9\u6bcf\u4e2a\u7ed3\u70b9\u8bb0\uff1a\n   \th[i]\u8868\u793a\u4ee5i\u4e3a\u6839\u7684\u5b50\u6811\u7684d*dis\u7684\u548c\u3002\n    g[i]\u8868\u793a\u4ee5i\u4e3a\u6839\u7684\u5b50\u6811\u5230i\u7684\u7236\u4eb2\u7684d*dis\u7684\u548c\u3002\n    \u6bcf\u4e2a\u70b9\u5230\u6bcf\u4e2a\u7956\u5148\u7684dis\u3002\n   \t\u5411\u4e0a\u66f4\u65b0\u65f6\uff0c\u81ea\u5df1YY\u3002",
        "postTime": 1521464690,
        "uid": 72583,
        "name": "zhangyuxi",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3345 \u3010[ZJOI2015]\u5e7b\u60f3\u4e61\u6218\u7565\u6e38\u620f\u3011"
    },
    {
        "content": "[\u4e00\u5200999\uff0c\u88c5\u5907\u53ef\u56de\u6536](https://www.cnblogs.com/HN-wrp/p/12832861.html)  \n\u53d1\u73b0\u9898\u89e3\u91cc\u9762\u5bf9\u4e8e\u4fe1\u606f\u7ef4\u62a4\u7684\u6765\u7531\u8bb2\u5f97\u4f3c\u4e4e\u4e0d\u662f\u5f88\u6e05\u695a\u5c31\u6765\u53d1\u4e86\u4e0b\u9898\u89e3\u3002  \n\u663e\u7136\uff0c\u4e00\u68f5\u6811\u7684\u5e26\u6743\u91cd\u5fc3\u6700\u591a\u53ea\u6709\u4e24\u4e2a\uff0c\u6700\u5c11\u4f1a\u6709\u4e00\u4e2a\uff0c\u800c\u4e14\u5728\u8fd9\u4e24\u4e2a\u70b9\u7684\u7b54\u6848\u4e00\u5b9a\u76f8\u7b49\u3002\uff08\u90fd\u662f\u5e26\u6743\u91cd\u5fc3\u5f53\u7136\u76f8\u7b49\uff09\u9274\u4e8e\u70b9\u5206\u6cbb\u7684\u5199\u6cd5\u8c8c\u4f3c\u5e76\u4e0d\u592a\u9700\u8981\u8fd9\u6837\u7684\u5206\u6790\uff0c\u5c31\u4e0d\u8bf4\u4e86\u3002~~\u6211\u4e0d\u4f1a~~  \n\u9996\u5148\u5efa\u51fa\u4e00\u9897\u70b9\u5206\u6811\uff0c\u7136\u540e\u8003\u8651\u5728\u70b9\u5206\u6811\u4e0a\u8df3\u513f\u5b50\u6765\u4fdd\u8bc1\u590d\u6742\u5ea6\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u9700\u8981\u5feb\u901f\u7b97\u51fa\u6240\u6709\u70b9\u5230\u8fd9\u4e2a\u91cd\u5fc3\u7684\u5e26\u6743\u8ddd\u79bb\u548c\u3002~~\u7531\u4e8e\u8fd9\u9898\u662f\u70b9\u5206\u6811~~\uff0c\u8003\u8651\u5728\u70b9\u5206\u6811\u4e0a\u7ef4\u62a4\u4e00\u4e9b\u4fe1\u606f\u6765\u5feb\u901f\u8ba1\u7b97\u8fd9\u4e2a\u4e1c\u897f\u3002  \n\u5bf9\u4e8e\u6211\u4eec\u5f53\u524d\u679a\u4e3e\u5230\u7684\u8fd9\u4e2a\u70b9$x$\uff0c\u4e00\u90e8\u5206\u7b54\u6848\u8d21\u732e\u6765\u81ea\u70b9\u5206\u6811\u4e0a$x$\u7684\u5b50\u6811\u4ee5\u5185\uff0c\u8fd9\u90e8\u5206\u53ef\u4ee5\u76f4\u63a5\u8bb0\u5f55\u4e00\u4e2a$dsum[x]$\u8868\u793a\u5728\u70b9\u5206\u6811\u4e0a$x$\u7684\u5b50\u6811\u5185\u7684\u6240\u6709\u70b9\u5230$x$\u7684\u8ddd\u79bb\u548c\u3002\u53e6\u4e00\u90e8\u5206\u6765\u81ea\u5b50\u6811\u5916\uff0c\u6211\u4eec\u5148\u53ea\u8003\u8651$x$\u5728\u70b9\u5206\u6811\u4e0a\u7684\u7236\u8282\u70b9$fa[x]$\u7684\u5b50\u6811\u91cc\u7684\u70b9\u5bf9\u8fd9\u91cc\u7684\u8d21\u732e\uff0c\u81f3\u4e8e$fa[fa[x]]$\u53ef\u4ee5\u4ee5\u6b64\u7c7b\u63a8\u3002\u90a3\u4e48\u8fd9\u4e2a\u8d21\u732e\u5c31\u53c8\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u662f$fa[x]$\u7684\u5b50\u6811\u5185\u6839\u4e0d\u4e3a$x$\u7684\u5b50\u6811\u5185\u7684\u70b9\u5230$fa[x]$\u7684\u8ddd\u79bb\u3002\u8fd9\u4e2a\u65f6\u5019\u663e\u7136\u5982\u679c\u76f4\u63a5\u4f7f\u7528$dsum[fa[x]]$\u4f1a\u5bfc\u81f4\u91cd\u590d\u8ba1\u7b97\uff0c\u6240\u4ee5\u8981\u8bb0\u5f55\u4e00\u4e2a$fsum[x]$\u6765\u8868\u793a$x$\u8fd9\u4e2a\u5b50\u6811\u5185\u7684\u6240\u6709\u70b9\u5230$fa[x]$\u7684\u8ddd\u79bb\u548c\u3002\u90a3\u4e48\u8fd9\u4e00\u90e8\u5206\u7684\u7b54\u6848\u8d21\u732e\u5c31\u662f$dsum[fa[x]]-fsum[x]$\u3002\u90a3\u4e48\u8fd8\u6709\u4e00\u90e8\u5206\u7684\u7b54\u6848\u5c31\u662f\u8fd9\u4e9b\u70b9\u90fd\u5230\u4e86$fa[x]$\u4e4b\u540e\u518d\u5230$x$\u7684\u8ddd\u79bb\u548c\uff0c\u90a3\u8fd9\u90e8\u5206\u7684\u7b54\u6848\u5c31\u662f$dis(fa[x],x)\\times(ssum[fa[x]]-ssum[x])$\u3002\u8fd9\u91cc\u7684$ssum[x]$\u5c31\u662f$x$\u5b50\u6811\u5185\u7684$size$\u4e4b\u548c\u3002$dis$\u7684\u5904\u7406\u4e5f\u9700\u8981\u6811\u5256\u6765\u7ef4\u62a4\u3002\u7136\u540e\u5411\u4e0a\u722c\u70b9\u5206\u6811\u7684\u65f6\u5019\u6ce8\u610f\u4e00\u4e0b\uff0c\u54ea\u4e9b\u5730\u65b9\u5e94\u8be5\u7528\u539f\u59cb\u7684$x$\uff0c\u54ea\u4e9b\u5730\u65b9\u5e94\u8be5\u7528\u5411\u4e0a\u8df3\u4e86\u7684\u7ed3\u70b9\u5c31\u53ef\u4ee5\u4e86\u3002\u5177\u4f53\u7684\u5b9e\u73b0\u5728\u4ee3\u7801\u91cc\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(nlogn^3)$\uff0c\u7531\u4e8e\u6811\u5256\u5e38\u6570\u5c0f\uff0c\u53ef\u4ee5\u8dd1\u8fc7\u3002  \n\u7136\u540e\u6211\u5199\u7684\u65f6\u5019\u6709\u4e00\u4e2a\u60f3\u6cd5\uff0c\u5728\u4e8e\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u76f4\u63a5\u7ef4\u62a4\u4e00\u4e2a\u70b9\u548c\u6839\u7684\u5173\u7cfb\u5462\uff1f\u8fd9\u6837\u4e0d\u5c31$O(1)$\u4e86\u5417\uff1f\u540e\u6765\u60f3\u60f3\u53d1\u73b0\uff0c\u6211\u4eec\u7684\u7b97\u6cd5\u662f\u57fa\u4e8e\u5916\u90e8\u7684\u70b9\u8981\u5230$x$\u5fc5\u987b\u8981\u7ecf\u8fc7$x$\u5728\u70b9\u5206\u6811\u4e0a\u7684\u7956\u5148\u624d\u80fd\u591f\u505a\u5230\u679a\u4e3e\u7684\u3002\u8fd9\u70b9\u8981\u60f3\u901a\u6211\u4e2a\u4eba\u8ba4\u4e3a\u8fd8\u662f\u5f88\u91cd\u8981\u7684\u3002  \nupd:\u4e00\u4e2a\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\u5728\u6c42\u7b54\u6848\u7684\u65f6\u5019\u8981\u5728\u539f\u6811\u4e0a\u627e\u513f\u5b50\uff0c\u5728\u70b9\u5206\u6811\u4e0a\u8df3\u91cd\u5fc3\u3002\n```cpp\n#include <cstdio>\nusing namespace std;\n#define R register\n#define LL long long\nconst int MAXN=5e5+10;\ninline int read() {\n\tint x=0,f=1; char a=getchar();\n\tfor(;a>'9'||a<'0';a=getchar()) if(a=='-') f=-1;\n\tfor(;a>='0'&&a<='9';a=getchar()) x=x*10+a-'0';\n\treturn x*f;\n}\ninline int max(int x,int y) { return x > y ? x : y; }\ninline int min(int x,int y) { return x < y ? x : y; }\nint n,q;\nnamespace Graph {\n\tint cnt,head[MAXN];\n\tstruct edge { int to,w,next; } e[MAXN<<1];\n\tinline void add(int x,int y,int w) {\n\t\te[++cnt]={y,w,head[x]}; head[x]=cnt; \n\t}\n\tint dep[MAXN],dis[MAXN],fa[MAXN],son[MAXN],siz[MAXN],top[MAXN];\n\tinline void dfs1(int x,int fx) {\n\t\tfa[x]=fx; dep[x]=dep[fx]+1; siz[x]=1;\n\t\tfor(R int i=head[x];i;i=e[i].next) {\n\t\t\tint y=e[i].to; if(y==fx) continue;\n\t\t\tdis[y]=dis[x]+e[i].w; dfs1(y,x); siz[x]+=siz[y];\n\t\t\tif(siz[y]>siz[son[x]]) son[x]=y;\n\t\t}\n\t}\n\tinline void dfs2(int x,int topx) {\n\t\ttop[x]=topx;\n\t\tif(son[x]) dfs2(son[x],topx);\n\t\tfor(R int i=head[x];i;i=e[i].next) {\n\t\t\tint y=e[i].to; \n\t\t\tif(y==fa[x]||y==son[x]) continue;\n\t\t\tdfs2(y,y);\n\t\t}\n\t}\n\tinline int Lca(int x,int y) {\n\t\twhile(top[x]!=top[y]) \n\t\t\tif(dep[top[x]]>dep[top[y]]) x=fa[top[x]];\n\t\t\telse y=fa[top[y]];\n\t\treturn dep[x]<dep[y]?x:y;\n\t}\n\tinline int Dist(int x,int y) {\n\t\treturn dis[x]+dis[y]-dis[Lca(x,y)]*2;\n\t}\n\tinline void Build() {\n\t\tdfs1(1,0); dfs2(1,1);\n\t}\n}\nnamespace Tree {\n\tint Cnt,Head[MAXN];\n\tstruct Edge { int to,rt,next; } E[MAXN<<1];\n\tinline void Add(int x,int y,int rt) {\n\t\tE[++Cnt]={ y, rt, Head[x] }; Head[x]=Cnt; \n\t}\n\tint RT,Root,mx[MAXN],vis[MAXN],siz[MAXN],total,fa[MAXN];\n\tinline void findrt(int x,int fx) {\n\t\tmx[x]=0; siz[x]=1;\n\t\tfor(R int i=Graph::head[x];i;i=Graph::e[i].next) {\n\t\t\tint y=Graph::e[i].to;\n\t\t\tif(y==fx||vis[y]) continue;\n\t\t\tfindrt(y,x); siz[x]+=siz[y];\n\t\t\tmx[x]=max(mx[x],siz[y]);\n\t\t}\n\t\tmx[x]=max(mx[x],total-siz[x]);\n\t\tif(mx[x]<mx[Root]) Root=x;\n\t}\n\tinline void build(int x,int fx) {\n\t\tfa[x]=fx; vis[x]=1;\n\t\tfor(R int i=Graph::head[x];i;i=Graph::e[i].next) {\n\t\t\tint y=Graph::e[i].to; if(vis[y]) continue;\n\t\t\ttotal=siz[y]; Root=0;\n\t\t\tfindrt(y,0); Add(x,y,Root); \n\t\t\tbuild(Root,x);\n\t\t}\n\t}\n\tinline void Build() {\n\t\tmx[0]=0x7f7f7f7f;\n\t\tRoot=0; findrt(1,0);findrt(Root,0); RT=Root; build(Root,0);\n\t}\n\tLL sums[MAXN],sumd[MAXN],sumf[MAXN];\n\tinline void Modify(int x,int k) {\n\t\tsums[x]+=k;\n\t\tfor(R int i=x;fa[i];i=fa[i]) {\n\t\t\tint len=Graph::Dist(x,fa[i]);\n\t\t\tsums[fa[i]]+=k;\n\t\t\tsumd[fa[i]]+=1LL*k*len;\n\t\t\tsumf[i]+=1LL*k*len;\n\t\t}\n\t}\n\tinline LL Count(int x) {\n\t\tLL res=sumd[x];\n\t\tfor(R int i=x;fa[i];i=fa[i]) {\n\t\t\tint len=Graph::Dist(x,fa[i]);\n\t\t\tres+=(sums[fa[i]]-sums[i])*len;\n\t\t\tres+=sumd[fa[i]]-sumf[i];\n\t\t}\n\t\treturn res;\n\t}\n\tinline LL Ask(int x) {\n\t\tLL res=Count(x);\n\t\tfor(R int i=Head[x];i;i=E[i].next) {\n\t\t\tint y=E[i].to;\n\t\t\tif(Count(y)<res) return Ask(E[i].rt);\n\t\t}\n\t\treturn res;\n\t}\n\tinline LL Ask() { return Ask(RT); }\n}\nint main() {\n//\tfreopen(\"a.in\",\"r\",stdin);\n//\tfreopen(\"a.out\",\"w\",stdout);\n\tn=read(); q=read();\n\tfor(R int i=1;i<n;i++) {\n\t\tint x=read(),y=read(),z=read();\n\t\tGraph::add(x,y,z); Graph::add(y,x,z);\n\t}\n\tGraph::Build(); Tree::Build();\n\twhile(q--) {\n\t\tint x=read(),y=read();\n\t\tTree::Modify(x,y);\n\t\tprintf(\"%lld\\n\",Tree::Ask());\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1588685253,
        "uid": 139012,
        "name": "______OvO______",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3345 \u3010[ZJOI2015]\u5e7b\u60f3\u4e61\u6218\u7565\u6e38\u620f\u3011"
    },
    {
        "content": "\u6807\u7b7e: \u52a8\u6001\u70b9\u5206\u6cbb.\n\n**\u4e4b\u524d\u4ee3\u7801\u70b9\u5206\u6cbb\u90e8\u5206\u6709\u70b9\u9519\u8bef\uff0c \u73b0\u5df2\u66f4\u6b63**\n\n#### Part 1\n\n\u5148\u4e0d\u8003\u8651\u4fee\u6539, \u5373\u6c42\u6811\u7684\u4e00\u4e2a\u5e26\u6743\u91cd\u5fc3. \n\n\u5c06\u4efb\u610f\u70b9\u8bbe\u4e3a\u6839, \u7ef4\u62a4:\n\n* $size_u$ \u8868\u793a\u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811\u7684\u6743\u503c $d$ \u548c.\n\n\u90a3\u4e48\u5c06\u5173\u952e\u70b9(\u5373\u8865\u7ed9\u7ad9)\u4ece $u$ \u79fb\u52a8\u5230 $u$ \u7684\u67d0\u4e00\u4e2a\u513f\u5b50 $v$ \u7684\u4f1a\u4f7f\u7b54\u6848\u589e\u52a0 $dis_{u,v}(size_{root}-size_v)-dis_{u,v}size_v=dis_{u,v}(size_{root}-2size_v)$, \u5f53 $2size_v>size_{root}$ \u65f6\u7b54\u6848\u66f4\u4f18, \u663e\u7136\u6ee1\u8db3\u6761\u4ef6\u7684 $v$ \u81f3\u591a\u53ea\u6709\u4e00\u4e2a, \u5bb9\u6613\u8bc1\u660e\u5e26\u6743\u91cd\u5fc3\u4e00\u5b9a\u4f1a\u5728\u5b50\u6811 $v$ \u5185.\n\n#### Part 2\n\n\u8003\u8651\u8fd0\u7528\u70b9\u5206\u6811\u6765\u652f\u6301\u7ef4\u62a4\u4fee\u6539\u64cd\u4f5c.\n\n(\u5bf9\u4e8e\u70b9\u5206\u6811\u7684\u4e00\u4e2a\u63cf\u8ff0\u6027\u7684\u5b9a\u4e49)\u70b9\u5206\u6cbb\u7684\u8fc7\u7a0b: \u9009\u53d6\u91cd\u5fc3, \u5c06\u6811\u5206\u5272\u6210\u82e5\u5e72\u68f5\u5b50\u6811, \u9012\u5f52\u5730\u5904\u7406\u5b50\u6811. \u8fd9\u4e2a\u8fc7\u7a0b\u8574\u542b\u4e86\u4e00\u4e2a\u6811\u5f62\u7ed3\u6784:\u5c06**\u6811\u7684\u91cd\u5fc3**\u4e0e**\u5206\u5272\u540e\u7684\u82e5\u5e72\u5b50\u6811\u91cd\u5fc3**\u5206\u522b\u8fde\u63a5, **\u9012\u5f52\u5904\u7406**\u5206\u5272\u540e\u7684\u5b50\u6811, \u53ef\u4ee5\u5f97\u5230\u4e00\u68f5**\u6709\u6839\u6811**, \u6211\u4eec\u79f0\u8fd9\u68f5\u6811\u4e3a**\u70b9\u5206\u6811**.\n\n\u5c06**\u91cd\u5fc3** $u$ \u4f5c\u4e3a\u539f\u6811\u7684\u6839\u4e0a, \u5bf9\u4e8e $u$ \u5728**\u70b9\u5206\u6811**\u4e0a\u7684\u4e00\u4e2a\u513f\u5b50 $v$ , \u8bbe $w$ \u4e3a $u$ \u5230 $v$ \u5728**\u539f\u6811**\u8def\u5f84\u4e0a\u4e0e $u$ \u76f8\u90bb\u7684\u70b9(\u53ef\u80fd\u4e0e $v$ \u91cd\u5408). \u82e5\u6709 $2size_w>size_{u}$ , \u5219**\u5e26\u6743\u91cd\u5fc3**\u5728\u4ee5 $w$ \u4e3a\u6839\u7684\u5b50\u6811\u91cc, \u5426\u5219**\u5e26\u6743\u91cd\u5fc3**\u5373\u4e3a $u$ . \u5bf9\u4e8e\u524d\u4e00\u79cd\u60c5\u51b5, \u8003\u8651\u5c06\u6240\u6709**\u539f\u6811**\u4e0a\u5230 $w$ \u9700\u8981\u7ecf\u8fc7 $u$ \u7684\u519b\u961f\u79fb\u52a8\u5230 $w$ , \u8fd9\u6837\u505a\u663e\u7136\u5e26\u6743\u91cd\u5fc3\u4e0d\u4f1a\u6539\u53d8, \u5e76\u4e14\u6211\u4eec\u53ef\u4ee5\u5ffd\u7565 $w$ \u5b50\u6811\u5916\u7684\u70b9(\u70b9\u4e0a\u65e0\u519b\u961f)\u4ece\u800c\u5f97\u5230\u4e00\u4e2a\u5b50\u95ee\u9898, \u663e\u7136\u8fd9\u4e2a\u5b50\u95ee\u9898\u6d89\u53ca\u7684\u6811\u5c31\u662f $v$ \u5728**\u70b9\u5206\u6811**\u4e0a\u7684\u5b50\u6811, \u9012\u5f52\u5904\u7406\u5b50\u95ee\u9898\u5c31\u597d\u4e86. \u6ce8\u610f\u5230\u6211\u4eec\u79fb\u52a8\u4e86\u6211\u4eec\u5c06\u8981\u7ecf\u8fc7 $u$ \u7684\u519b\u961f\u79fb\u52a8\u5230\u4e86 $w$ , \u6211\u4eec\u8981\u66f4\u65b0 $d_w$.\n\n\u5982\u4e0a\u8fc7\u7a0b\u5728\u64cd\u4f5c\u4e0a\u6709\u4e24\u4e2a\u4e0d\u662f\u5f88\u597d\u505a\u7684\u5730\u65b9:\n\n1. \u5224\u65ad $2size_w>size_{root}$.\n2. \u66f4\u65b0 $d_w$.\n\n\u6ce8\u610f\u5728\u9012\u5f52\u5b50\u95ee\u9898\u7684\u65f6\u5019\u6811\u7684\u5f62\u6001\u4f1a\u53d1\u751f\u6539\u53d8(\u5305\u62ec**\u6839\u8282\u70b9\u7684\u6539\u53d8**\u548c**\u7ed3\u70b9\u7684\u5220\u9664**), $size$ \u662f\u4e0d\u80fd\u76f4\u63a5\u7ef4\u62a4\u7684, \u8003\u8651\u7ef4\u62a4:\n\n* $size'_v$ \u8868\u793a\u5728**\u70b9\u5206\u6811**\u4e0a\u4ee5\u70b9 $v$ \u4e3a\u6839\u7684\u5b50\u6811 $d$ \u503c\u7684\u548c.\n\n\u663e\u7136 $size_w=size'_v$ , \u56e0\u4e3a\u6211\u4eec\u6c42\u5b50\u95ee\u9898\u6d89\u53ca\u7684\u6811\u7684\u5f62\u6001\u4e0e**\u70b9\u5206\u6811**\u7684\u5f62\u6001\u662f\u4e00\u81f4\u7684, $size'$ \u662f\u53ef\u4ee5\u7ef4\u62a4\u7684, \u540c\u65f6\u8fd9\u6837\u6211\u4eec\u8fd8\u89e3\u51b3\u4e86\u66f4\u65b0 $d_w$ \u7684\u95ee\u9898, \u7531\u4e8e**\u70b9\u5206\u6811**\u6811\u9ad8\u7ea7\u522b\u662f $\\mathcal O(\\log n)$ \u7684, \u6211\u4eec\u66b4\u529b\u5730\u7528 $\\mathcal O(\\log n)$ \u7684\u65f6\u95f4\u4fee\u6539 $w$ \u548c\u5176**\u7956\u5148**\u7684$size'$\u5c31\u597d\u4e86.\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528\u70b9\u5206\u6811\u627e\u5230**\u5e26\u6743\u91cd\u5fc3**\u4e86, \u7531\u4e8e\u9898\u76ee\u4fdd\u8bc1\u4e86 $deg\\leqslant 20$ , \u67e5\u8be2\u4e00\u6b21**\u5e26\u6743\u91cd\u5fc3**$\\mathcal O((deg+\\log n)\\times\\log n)$ \u7684\u65f6\u95f4\u662f\u53ef\u4ee5\u63a5\u53d7\u7684.\n\n#### Part 3\n\n\u627e\u5230\u5e26\u6743\u91cd\u5fc3\u540e, \u8003\u8651\u5982\u4f55\u6c42\u7b54\u6848(\u5728\u6b64\u4e4b\u524d\u5148\u64a4\u9500\u66f4\u65b0 $d$ \u7684\u5f71\u54cd). \u672c\u90e8\u5206\u7684\u6240\u6709\u64cd\u4f5c\u548c\u7ef4\u62a4\u7684\u4fe1\u606f\u90fd\u662f\u5728 **\u70b9\u5206\u6811** \u4e0a\u7684, \u4e0b\u6587\u4e0d\u518d\u5f3a\u8c03.\n\n\u7b80\u8981\u6765\u8bb2\u5c31\u662f\u4ece**\u5e26\u6743\u91cd\u5fc3**\u66b4\u529b\u5411\u4e0a\u8df3, \u7edf\u8ba1\u5176\u6240\u6709\u7956\u5148\u5b50\u6811\u5185\u7684\u7b54\u6848.\n\n\u5177\u4f53\u5730\u8bf4, \u8003\u8651\u7ef4\u62a4:\n\n* $f_u$ \u8868\u793a\u5c06 $u$ \u5b50\u6811\u6240\u6709\u519b\u961f\u79fb\u52a8\u5230 $u$ \u4e0a\u7684\u82b1\u8d39, \u5373 $\\sum dis_{u,v}*d_v$ , \u5176\u4e2d $v$ \u5728 $u$ \u7684\u5b50\u6811\u5185.\n* $g_u$ \u8868\u793a\u5c06 $u$ \u5b50\u6811\u6240\u6709\u519b\u961f\u79fb\u52a8\u5230 $fa_u$ \u4e0a\u7684\u82b1\u8d39, \u5373 $\\sum dis_{fa_u,v}*d_v$ , \u5176\u4e2d $v$ \u5728 $u$ \u7684\u5b50\u6811\u5185, \u6839\u8282\u70b9\u4e0d\u9700\u8981\u7ef4\u62a4 $g$.\n\n\u7531\u4e8e\u4e00\u4e2a\u70b9\u7684\u7956\u5148\u6570\u662f $\\mathcal O(\\log n)$, \u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u5230\u6240\u6709\u7956\u5148\u7684 $\\mathcal O(\\log n)$ \u4e2a $dis$ , \u8fdb\u884c\u4fee\u6539\u64cd\u4f5c\u65f6\u5c31\u53ef\u4ee5\u66b4\u529b\u5730\u7ef4\u62a4\u5566.\n\n\u7edf\u8ba1\u7b54\u6848\u65f6\u8bbe\u4e24\u4e2a\u70b9 $x, y$, \u521d\u59cb\u5c06 $x$ \u8bbe\u4e3a**\u5e26\u6743\u91cd\u5fc3** $u$, $y$ \u8bbe\u4e3a $fa_x$,  $x$ \u5b50\u6811\u5185\u7684\u70b9\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u662f $f_x$. \u6bcf\u6b21\u52a0\u4e0a $y$ \u5b50\u6811\u9664\u53bb $x$ \u5b50\u6811\u7684\u8d21\u732e, \u8fd9\u4e9b\u70b9\u663e\u7136\u662f\u8981\u8d70\u5230 $y$ , \u518d\u8d70\u5230 $u$, \u6240\u4ee5\u8d21\u732e\u662f $ dis_{u,y}(size'_y-size'_x)+f_y-g_x$ , \u7136\u540e\u8ba9 $x, y$ \u4e00\u8d77\u5411\u4e0a\u8df3\u5c31\u597d\u4e86, \u8fd9\u4e2a\u90e8\u5206\u7684\u590d\u6742\u5ea6\u662f $\\mathcal O(log n)$ \u7684.\n\n\u603b\u590d\u6742\u5ea6 $\\mathcal O(Q(deg+\\log n)\\times\\log n)$.\n\n\u4ee3\u7801\u7a0d\u5fae\u8d34\u4e00\u4e0b, \u6548\u7387\u4e00\u822c, \u91cc\u5934\u5c06**\u70b9\u5206\u6811**\u5c01\u88c5\u5728 `PD_Tree` \u91cc, **\u539f\u6811**\u5c01\u88c5\u5728 `Tree` \u91cc.\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <vector>\nusing namespace std;\nint read();\n\nint n, Q;\n\nint Dis(int, int);\n\nstruct PD_Tree {\n    int fa[100005], root;\n    int hd[100005], nx[100005], to[100005], link[100005], cnt;\n    vector<int> dis[100005];\n    long long f[100005], g[100005], sz[100005];\n    void add(int f, int t) { nx[++cnt] = hd[f], hd[f] = cnt, to[cnt] = t; }\n    void dfs(int u) {\n        int x = fa[u];\n        while (x) dis[u].push_back(Dis(x, u)), x = fa[x];\n        for (int i = hd[u]; i; i = nx[i]) dfs(to[i]);\n    }\n    void init() {\n        for (int i = 1; i <= n; ++i)\n            if (fa[i])\n                add(fa[i], i);\n            else\n                root = i;\n        dfs(root);\n    }\n    void modi(int u, int d) {\n        int x = fa[u], y = u, cnt = 0;\n        sz[u] += d;\n        while (x) {\n            sz[x] += d;\n            f[x] += 1ll * d * dis[u][cnt], g[y] += 1ll * d * dis[u][cnt++];\n            x = fa[x], y = fa[y];\n        }\n    }\n    void tmodi(int u, int d) {\n        while (u) sz[u] += d, u = fa[u];\n    }\n\n    int stu[102], std[102], top;\n\n    void calc(int u) {\n        long long res = f[u];\n        int x = u, y = fa[x], cnt = 0;\n        while (fa[x]) {\n            res += dis[u][cnt++] * (sz[y] - sz[x]) + f[y] - g[x];\n            x = fa[x], y = fa[y];\n        }\n        printf(\"%lld\\n\", res);\n    }\n\n    void work() {\n        int x = root, u, d;\n        while (1) {\n            u = 0;\n            for (int i = hd[x]; i; i = nx[i]) {\n                if (sz[to[i]] * 2 > sz[x]) {\n                    u = to[i];\n                    break;\n                }\n            }\n\n            if (!u) {\n                u = x;\n                while (top) tmodi(stu[top], -std[top]), top--;\n                return calc(u);\n            }\n\n            ++top, tmodi(stu[top] = link[u], std[top] = sz[x] - sz[u]), x = u;\n        }\n    }\n} t2;\n\nstruct Tree {\n    int hd[100005], nx[200005], to[200005], w[200005], cnt;\n    void add(int f, int t, int wei) {\n        nx[++cnt] = hd[f], hd[f] = cnt, to[cnt] = t, w[cnt] = wei;\n    }\n    int vis[100005], sz[100005], mx[100005], rt, tot;\n    void dfs(int u, int fa) {\n        sz[u] = 1, mx[u] = 0;\n        for (int i = hd[u], v; i; i = nx[i]) {\n            v = to[i];\n            if (vis[v] || v == fa) continue;\n            dfs(v, u), sz[u] += sz[v], mx[u] = max(mx[u], sz[v]);\n        }\n        if (rt == -1 || max(tot - sz[u], mx[u]) < max(tot - sz[rt], mx[rt]))\n            rt = u;\n    }\n\n    void build(int u, int F) {\n        rt = -1, dfs(u, 0), t2.fa[rt] = F, t2.link[rt] = u, vis[rt] = 1;\n        if (sz[u] == 1) return;\n        int trt = rt;\n        for (int i = hd[rt], v; i; i = nx[i])\n            if (!vis[v = to[i]]) {\n                tot = (sz[v] > sz[trt] ? sz[u] - sz[trt] : sz[v]);\n                build(v, trt);\n            }\n    }\n\n    int fa[100005][20], dep[100005];\n    long long dis[100005];\n    void init(int u) {\n        dep[u] = dep[fa[u][0]] + 1;\n        for (int i = 1; i <= 17; ++i) fa[u][i] = fa[fa[u][i - 1]][i - 1];\n        for (int i = hd[u], v; i; i = nx[i])\n            if ((v = to[i]) != fa[u][0])\n                fa[v][0] = u, dis[v] = dis[u] + w[i], init(v);\n    }\n\n    int lca(int u, int v) {\n        if (dep[u] < dep[v]) swap(u, v);\n        for (int i = 17; i >= 0; --i)\n            if (dep[fa[u][i]] >= dep[v]) u = fa[u][i];\n        if (u == v) return u;\n        for (int i = 17; i >= 0; --i)\n            if (fa[u][i] != fa[v][i]) u = fa[u][i], v = fa[v][i];\n        return fa[u][0];\n    }\n} t1;\n\nint Dis(int u, int v) {\n    return t1.dis[u] + t1.dis[v] - 2 * t1.dis[t1.lca(u, v)];\n}\n\nint main() {\n    n = read(), Q = read();\n    for (int i = 1, u, v, w; i < n; ++i)\n        u = read(), v = read(), w = read(), t1.add(u, v, w), t1.add(v, u, w);\n    t1.tot = n, t1.build(1, 0), t1.init(1), t2.init();\n    for (int i = 1, u; i <= Q; ++i) u = read(), t2.modi(u, read()), t2.work();\n    return 0;\n}\n\nint read() {\n    int x = 0, f = 1;\n    char c = getchar();\n    while (c < '0' || c > '9') f = (c == '-') ? -1 : f, c = getchar();\n    while (c >= '0' && c <= '9') x = x * 10 + c - '0', c = getchar();\n    return x * f;\n}\n\n\n```\n",
        "postTime": 1571976164,
        "uid": 51237,
        "name": "Kinandra",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3345 \u3010[ZJOI2015]\u5e7b\u60f3\u4e61\u6218\u7565\u6e38\u620f\u3011"
    },
    {
        "content": "\u6811\u5256\u7684\u505a\u6cd5\uff1a\n\n\u4ee41\u4e3a\u6811\u6839\uff0cT=\u03a3d[i],sum[x]\u662f\u5b50\u6811x\u4e2d\u7684d\u4e4b\u548c\uff0cdis[x]\u662f\u8282\u70b9x\u7684\u5e26\u6743\u6df1\u5ea6\u3002\n\n\u5bf9\u4e8e\u8282\u70b9x\u7684\u513f\u5b50y\uff0c\u8fb9\u957f\u4e3aw\uff0c\u5982\u679cy\u6bd4x\u66f4\u4f18\uff0c\u5219(T-sum[y])\\*w-sum[y]\\*w<=0\u5373sum[y]>=T/2\u3002\n\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u82e5\u5b58\u5728sum[y]>T/2\uff0c\u663e\u7136y\u66f4\u4f18\uff0c\u4e14y\u53ea\u5b58\u5728\u4e00\u4e2a\uff08\u5bf9\u4e8ex\uff09\uff1b\u82e5\u5b58\u5728sum[y]=T/2\uff0c(1\u4e2a\u62162\u4e2a)\uff0c\u56e0\u4e3ay\u7684\u5b50\u6811\u5185\u90fd\u4e0d\u5b58\u5728sum>T/2\u7684\u70b9\uff0c\u6240\u4ee5y\u5c31\u662f\u4e00\u4e2a\u6700\u4f18\u89e3\uff0c\u4e0d\u5fc5\u9012\u5f52\u5730\u505a\u3002\n\n\u8003\u8651\u4e00\u7c7b\u66b4\u529b\u6c42\u51fa\u6700\u4f18\u70b9\uff1a\u4ece\u6839\u51fa\u53d1\u4f9d\u6b21\u8fdb\u5165sum>T/2\u7684\u513f\u5b50\uff0c\u6700\u6df1\u7684\u90a3\u4e2a\u70b9\u5373\u4e3a\u5e26\u6743\u91cd\u5fc3\u3002\u8fd9\u53ef\u4ee5\u6811\u5256\u7ef4\u62a4sum/\u533a\u95f4\u6700\u5927\u503c\uff0c\u5982\u679c\u53f3\u534a\u533a\u95f4(\u8f83\u6df1)\u5b58\u5728>=T/2\uff0c\u5373\u5411\u53f3\u8df3\u8f6c\u3002\n\n\u8bbe\u5df2\u7ecf\u6c42\u51fa\u4e86\u6700\u4f18\u70b9R\uff0c\u7b54\u6848\u662f\u03a3(d[i]\\*dis[i]+d[i]\\*dis[R]-2\\*d[i]\\*dis[lca(R,i)])\uff0c\u5957\u8def\u5730\u7ef4\u62a4\u5c31\u884c\u4e86\u3002\n\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long \n#define trvl(x,i,y) for(int i=ehd[x],y; y=to[i],i; i=lst[i]) \n#define ls (x<<1)\n#define rs (x<<1|1)\nusing namespace std;\n\nconst int N=1e5+10;\n\nint n,m;\nint ehd[N],to[N<<1],len[N<<1],lst[N<<1];\nint fa[N],siz[N],son[N],top[N],id[N],dfn[N];\nll S,T,dis[N];\n\nvoid insert(int x,int y,int w) {\n\tstatic int cnt=0;\n\tto[++cnt]=y,len[cnt]=w,lst[cnt]=ehd[x],ehd[x]=cnt;\n\tto[++cnt]=x,len[cnt]=w,lst[cnt]=ehd[y],ehd[y]=cnt;\n}\nvoid dfs1(int x,int p) {\n\tfa[x]=p; siz[x]=1;\n\ttrvl(x,i,y) if(y!=p) {\n\t\tdis[y]=dis[x]+len[i];\n\t\tdfs1(y,x);siz[x]+=siz[y];\n\t\tif(siz[y]>siz[son[x]]) son[x]=y;\n\t}\n}\nvoid dfs2(int x,int t) {\n\tstatic int cnt=0;\n\ttop[dfn[id[x]=++cnt]=x]=t;\n\tif(son[x]) dfs2(son[x],t);\n\ttrvl(x,i,y) if(son[x]!=y&&fa[x]!=y) dfs2(y,y);\n}\n\nint tag[N<<2],mx[N<<2];\nll c[N<<2],s[N<<2];\n\nvoid psd(int x) {\n\tif(!tag[x]) return;\n\tc[ls]+=s[ls]*tag[x],mx[ls]+=tag[x],tag[ls]+=tag[x];\n\tc[rs]+=s[rs]*tag[x],mx[rs]+=tag[x],tag[rs]+=tag[x];\n\ttag[x]=0;\n}\nvoid upd(int x) {\n\tmx[x]=max(mx[ls],mx[rs]);\n\tc[x]=c[ls]+c[rs];\n}\nvoid build(int x,int l,int r) {\n\tif(l==r) {\n\t\ts[x]=dis[dfn[l]]-dis[fa[dfn[l]]];\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(ls,l,mid);\n\tbuild(rs,mid+1,r);\n\ts[x]=s[ls]+s[rs];\n}\nint find(int x,int l,int r) {\n\tif(l==r) return dfn[l];\n\tint mid=(l+r)>>1; psd(x);\n\tif(mx[rs]*2>T) return find(rs,mid+1,r);\n\treturn find(ls,l,mid);\n}\nvoid mdf(int x,int l,int r,int L,int R,ll w) {\n\tif(L<=l&&r<=R) {\n\t\tc[x]+=s[x]*w,mx[x]+=w,tag[x]+=w;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1; psd(x);\n\tif(L<=mid) mdf(ls,l,mid,L,R,w);\n\tif(mid<R) mdf(rs,mid+1,r,L,R,w);\n\tupd(x);\n}\nll qry(int x,int l,int r,int L,int R) {\n\tif(L<=l&&r<=R) return c[x];\n\tint mid=(l+r)>>1; ll c=0; psd(x);\n\tif(L<=mid) c+=qry(ls,l,mid,L,R);\n\tif(mid<R) c+=qry(rs,mid+1,r,L,R);\n\treturn c;\n}\nvoid modify(int x,int w) {\n\tfor(; x; x=fa[top[x]]) mdf(1,1,n,id[top[x]],id[x],w);\n}\nll query(int x,ll w=0) {\n\tfor(; x; x=fa[top[x]]) w+=qry(1,1,n,id[top[x]],id[x]);\n\treturn w;\n}\n\nint main() {\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int x,y,w,i=n; --i; ) {\n\t\tscanf(\"%d%d%d\",&x,&y,&w);\n\t\tinsert(x,y,w);\n\t}\n\tdfs1(1,0);\n\tdfs2(1,1);\n\tbuild(1,1,n);\n\tfor(int x,w; m--; ) {\n\t\tscanf(\"%d%d\",&x,&w);\n\t\tmodify(x,w);\n\t\tS+=dis[x]*w;\n\t\tT+=w;\n\t\tx=find(1,1,n);\n\t\tprintf(\"%lld\\n\",S+T*dis[x]-2*query(x));\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1560138262,
        "uid": 125139,
        "name": "nosta",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3345 \u3010[ZJOI2015]\u5e7b\u60f3\u4e61\u6218\u7565\u6e38\u620f\u3011"
    },
    {
        "content": "\u7b80\u5355\u6765\u8bf4\uff0c\u8fd9\u9898\u5c31\u662f\u4e00\u4e2a\u4fee\u6539\u70b9\u6743\u8be2\u95ee\u5e26\u6743\u91cd\u5fc3\u7684\u9898\u3002\n\n\u9996\u5148\u6211\u4eec\u8003\u8651\u968f\u4fbf\u9009\u62e9\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u7b54\u6848\uff0c\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6682\u4e14\u5c06\u8fd9\u4e2a\u70b9\u5f53\u505a\u6811\u7684\u6839\u3002\n\n\u8003\u8651\u5c06\u7b54\u6848\u79fb\u5411\u76f8\u90bb\u70b9\uff08\u4e5f\u76f8\u5f53\u4e8e\u6362\u6839\uff09\u7684\u6761\u4ef6\uff0c\u4ee4$sumd_i$\u4ee3\u8868$i$\u70b9\u7684\u5b50\u6811\u7684\u5e26\u6743\u5927\u5c0f\u4e5f\u5c31\u662f$\\sum\\limits_{v\\in i}d_v$\u3002\u82e5\u60f3\u4ece$now$\u79fb\u52a8\u5230$v$\uff0c\u8bbe$dis_{now,v}$\u4ee3\u8868\u4ece$now$\u5230$v$\u7684\u957f\u5ea6\u3002\n\n\u90a3\u4e48\u79fb\u52a8\u540e\u7684\u7b54\u6848\u6539\u53d8\u91cf\u5c31\u662f$(sumd_{now}-sumd_v-sumd_v)\\times dis_{now,v}$,\u4e8e\u662f\u5f53$sumd_{now}<sumd_v\\times 2$\u65f6\uff0c\u6211\u4eec\u8fdb\u884c\u79fb\u52a8\uff0c\u53ef\u4ee5\u7b80\u5355\u7684\u8bc1\u660e\uff0c\u6bcf\u4e2a\u70b9\u6700\u591a\u53ea\u6709\u4e00\u4e2a\u513f\u5b50\u53ef\u4ee5\u79fb\u52a8\u8fc7\u53bb\u3002\n\n\u66b4\u529b\u79fb\u52a8\u5e76\u8fdb\u884c\u6362\u6839\u662f\u884c\u4e0d\u901a\u7684\uff0c\u8003\u8651\u6784\u9020\u70b9\u5206\u6811\u8fdb\u884c\u79fb\u52a8\u4e0e\u6362\u6839\u3002\n\n---\n\n\u70b9\u5206\u6811\u6709\u51e0\u4e2a\u663e\u8457\u7279\u70b9\n\n1. \u6811\u9ad8$\\log$\uff0c\u7ef4\u62a4\u4fe1\u606f\u66b4\u529b\u8df3\u5c31\u53ef\u4ee5\u4e86\n2. \u70b9\u5206\u6811\u7684\u5b50\u6811\u662f\u539f\u6811\u7684\u4e00\u4e2a\u8054\u901a\u5feb\uff0c\u8fd9\u4e5f\u662f\u5728\u70b9\u5206\u6811\u4e0a\u8fdb\u884c\u6362\u6839\u64cd\u4f5c\u7684\u57fa\u7840\u3002\n\n\u5bf9\u8fd9\u4e2a\u9898\uff0c\u6211\u4eec\u5148\u5efa\u597d\u70b9\u5206\u6811\uff0c\u7136\u540e\u5bf9\u6bcf\u4e2a\u70b9\u7ef4\u62a4\u51e0\u4e2a\u4fe1\u606f\u3002\n\n$d_i$\u8868\u793a\u81ea\u5df1\u70b9\u6743\uff0c$sumd_i$\u8868\u793a$i$\u70b9\u70b9\u5206\u6811\u7684\u5b50\u6811$\\sum d$\uff0c$sumf_i$\u8868\u793a\u70b9\u5206\u6811\u5b50\u6811\u6240\u6709\u70b9\u5230\u70b9\u5206\u6811\u7236\u4eb2\u7684\u7b54\u6848\uff08\u5982\u679c\u4e00\u4e2a\u70b9\u6ca1\u6709\u7236\u4eb2\uff0c\u53ef\u4ee5\u7b80\u5355\u7684\u6307\u5411\u5b83\u81ea\u5df1\uff09\n\n\u4fee\u6539\u64cd\u4f5c\u6bd4\u8f83\u7b80\u5355\uff0c\u76f4\u63a5\u5728\u70b9\u5206\u6811\u5411\u4e0a\u66b4\u529b\u4fee\u6539\u5373\u53ef\u3002\n\n\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u5148\u9009\u5b9a\u70b9\u5206\u6811\u7684\u6839\uff0c\u7136\u540e\u904d\u5386\u70b9\u5206\u6811\u7684\u513f\u5b50\u6bd4\u8f83$sumd$\uff0c\u6ce8\u610f\u8fd9\u91cc\u70b9\u5206\u6811\u7684$sumd$\u548c\u672c\u8eab\u539f\u6811\u4e0a\u513f\u5b50\u7684$sumd$\u7684\u503c\u662f\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u66f4\u4e25\u8c28\u7684\u8bf4\u5176\u5b9e\u627e\u7684\u8fd8\u662f\u539f\u6811\u7684\u513f\u5b50\u3002\n\n\u5982\u679c\u53ef\u4ee5\u79fb\u52a8\uff0c\u90a3\u4e48\u7b54\u6848\u70b9\u4e00\u5b9a\u5728\u70b9$v$\u7684\u5b50\u6811\u4e2d\uff08\u70b9\u5206\u6811\u7684\uff09\uff0c\u7136\u540e\u6211\u4eec\u8003\u8651\u628a\u6839\u6362\u6210$v$\n\n\u5982\u56fe\uff0c$now$\u662f\u5f53\u524d\u8282\u70b9\uff0c$v$\u662f\u5e94\u8be5\u79fb\u5411\u7684\u5206\u6cbb\u5b50\u6811\uff0c$w$\u662f\u5728$v$\u7684\u5b50\u6811\u4e2d\u4e0e$now$\u5728\u539f\u6811\u4e2d\u76f4\u63a5\u76f8\u8fde\u7684\u70b9\u3002\n\n![](https://i.loli.net/2018/12/05/5c07828214cd7.png)\n\n\u7136\u540e\u6211\u4eec\u76f4\u63a5\u628a$now$\u53ca\u7eff\u8272\u5b50\u6811\u7684\u70b9\u6743\u7ed9$w$\uff0c\u5e76\u5728\u5916\u90e8\u52a0\u4e0a$now$\u548c\u7eff\u8272\u5b50\u6811\u672c\u8eab\u7684\u7b54\u6848\u3002\u8fd9\u6837\u5c31\u628a$v$\u5b50\u6811\u5916\u9762\u7684\u70b9\u7b49\u4ef7\u5230\u4e86\u5185\u90e8\u5e76\u4e14\u7edf\u8ba1\u4e86\u5916\u90e8\u7b54\u6848\u3002\u6ce8\u610f\u66f4\u65b0\u4e86$w$\u4e4b\u540e\u8fd8\u8981\u628a$w$\u7236\u4eb2\u7684\u4fe1\u606f\u540c\u6837\u66f4\u65b0\u3002\n\n![](https://i.loli.net/2018/12/05/5c0782826ec02.png)\n\n\u7136\u540e\u9012\u5f52\u8fdb\u884c\u8fd9\u4e2a\u8fc7\u7a0b\u76f4\u5230\u627e\u4e0d\u5230\u4e00\u4e2a\u513f\u5b50\u53ef\u4ee5\u53bb\u79fb\u52a8\u5373\u53ef\uff0c\u9012\u5f52\u56de\u6eaf\u65f6\u8981\u628a$now$\u52a0\u5728$w$\u7684\u4fe1\u606f\u8fdb\u884c\u8fd8\u539f\u3002\n\n---\n\n\u9700\u8981$RMQLCA$\u8fdb\u884c$O(1)$\u7684\u67e5\u8be2\u4e24\u70b9\u95f4\u8ddd\u79bb\u4fdd\u8bc1\u590d\u6742\u5ea6\u4e3a$O(n\\log^2n)$\uff0c\u4e8b\u5b9e\u4e0a\u6811\u5256\u597d\u50cf\u4e5f\u53ef\u4ee5\u8dd1\u3002\n\n\u6ce8\u610f\u8fd9\u4e2a\u505a\u6cd5\u4f1a\u88ab\u83ca\u82b1\u6811\u5361\u6389\u56e0\u4e3a\u70b9\u5206\u6811\u513f\u5b50\u4e2a\u6570\u53ef\u80fd\u4f1a\u5f88\u591a\u4f46\u9898\u76ee\u4fdd\u8bc1\u4e86\u5ea6\u6570\u5c31\u6ca1\u5173\u7cfb\u4e86\u5566\u3002\n\n----\n\n**Code:**\n\n```cpp\n#include <cstdio>\n#include <vector>\n#define ll long long\nconst int N=2e5+10;\nint head[N],to[N],Next[N],edge[N],cnt;\nvoid add(int u,int v,int w)\n{\n    to[++cnt]=v,edge[cnt]=w,Next[cnt]=head[u],head[u]=cnt;\n}\nnamespace RMQLCA\n{\n    ll dis[N];int dep[N],st[N][20],dfn[N],Log[N],dfs_clock;\n    void dfs(int now,int fa)\n    {\n        dep[now]=dep[fa]+1;\n        st[dfn[now]=++dfs_clock][0]=now;\n        for(int v,i=head[now];i;i=Next[i])\n            if((v=to[i])!=fa)\n                dis[v]=dis[now]+edge[i],dfs(v,now),st[++dfs_clock][0]=now;\n    }\n    void init()\n    {\n        dfs(1,0);\n        for(int i=2;i<=dfs_clock;i++) Log[i]=Log[i>>1]+1;\n        for(int j=1;j<=18;j++)\n        {\n            for(int x,y,i=1;i<=dfs_clock-(1<<j)+1;i++)\n            {\n                x=st[i][j-1],y=st[i+(1<<j-1)][j-1];\n                st[i][j]=dep[x]<dep[y]?x:y;\n            }\n        }\n    }\n    ll getdis(int x,int y)\n    {\n        ll ret=dis[x]+dis[y];\n        x=dfn[x],y=dfn[y];\n        if(x>y) std::swap(x,y);\n        int d=Log[y+1-x],a=st[x][d],b=st[y-(1<<d)+1][d];\n        int lca=dep[a]<dep[b]?a:b;\n        return ret-(dis[lca]<<1);\n    }\n}\nstruct node\n{\n    int v,w,len;\n    node(){}\n    node(int v,int w,int len){this->v=v,this->w=w,this->len=len;}\n};\nstd::vector <node> Edge[N];\nint siz[N],del[N],fa[N],si,rt,mi,root,n,m;\nvoid dfs(int now,int fa)\n{\n    siz[now]=1;int mx=0;\n    for(int v,i=head[now];i;i=Next[i])\n    {\n        if((v=to[i])!=fa&&!del[v])\n            dfs(v,now),siz[now]+=siz[v],mx=mx>siz[v]?mx:siz[v];\n    }\n    mx=mx>si-siz[now]?mx:si-siz[now];\n    if(mi>mx) mi=mx,rt=now;\n}\nint getroot(int now){mi=N+1;dfs(now,0);return rt;}\nvoid divide(int now)\n{\n    del[now]=1;\n    for(int v,w,i=head[now];i;i=Next[i])\n    {\n        if(!del[w=to[i]])\n        {\n            si=siz[w],fa[v=getroot(w)]=now;\n            Edge[now].push_back(node(v,w,edge[i]));\n            divide(v);\n        }\n    }\n}\nint d[N],sumd[N];ll sumf[N];\nvoid change(int now,int To,int delta)\n{\n    d[now]+=delta;int las=now;\n    while(now!=To)\n    {\n        sumd[now]+=delta;\n        sumf[now]+=RMQLCA::getdis(las,fa[now]?fa[now]:now)*delta;\n        now=fa[now];\n    }\n}\nll cal(int now,int oth,int len)\n{\n    ll ret=1ll*d[now]*len;\n    for(int v,i=0;i<Edge[now].size();i++)\n        if((v=Edge[now][i].v)!=oth)\n        {\n            ret+=sumf[v];\n            ret+=1ll*sumd[v]*len;\n        }\n    return ret;\n}\nll query(int now)\n{\n    ll ret,Ret=0;\n    for(int v,w,i=0;i<Edge[now].size();i++)\n    {\n        if(sumd[v=Edge[now][i].v]<<1>sumd[now])\n        {\n            ret=cal(now,v,Edge[now][i].len);\n            int delta=sumd[now]-sumd[v];\n            change(w=Edge[now][i].w,now,delta);\n            ret+=query(v);\n            change(w,now,-delta);\n            return ret;\n        }\n        Ret+=sumf[v];\n    }\n    return Ret;\n}\nint main()\n{\n    //freopen(\"data.in\",\"r\",stdin);\n    //freopen(\"dew.out\",\"w\",stdout);\n    scanf(\"%d%d\",&n,&m);\n    for(int u,v,w,i=1;i<n;i++)\n    {\n        scanf(\"%d%d%d\",&u,&v,&w);\n        add(u,v,w),add(v,u,w);\n    }\n    RMQLCA::init();\n    mi=N,si=n,root=getroot(1);divide(root);\n    for(int u,de,i=1;i<=m;i++)\n    {\n        scanf(\"%d%d\",&u,&de);\n        change(u,0,de);\n        printf(\"%lld\\n\",query(root));\n    }\n    return 0;\n}\n```",
        "postTime": 1543996124,
        "uid": 63727,
        "name": "ButterflyDew",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3345 \u3010[ZJOI2015]\u5e7b\u60f3\u4e61\u6218\u7565\u6e38\u620f\u3011"
    },
    {
        "content": "\u6d1b\u8c37\u4e0a\u5c31\u6709\uff0c\u4f46\u4e3a\u9632\u88ab\u5c01\u53f7\uff0c\u5efa\u8bae\u6ca1\u628a\u63e1\u5148\u53bbloj\u4e0a\u4ea4\uff08\u6ed1\u7a3d\u4fdd\u547d\uff09\n\n## \u9898\u89e3\n\n\u5f53\u52a8\u6001\u70b9\u5206\u6cbb\u6a21\u7248\u6253\u5f97\uff0c\u4f46\u662f\u4e4b\u524d\u6211\u5bf9[\u6811\u7684\u5e26\u6743\u91cd\u5fc3](https://www.luogu.org/blogAdmin/article/edit/156026)\u4e00\u65e0\u6240\u77e5\uff0c\u771f\u7684\u5dee\u70b9\u628a\u547d\u505a\u6ca1\u4e86\u3002\u3002\uff08\u94fe\u63a5\u91cc\u6709\u4ecb\u7ecd\uff0c\u5728\u6587\u7ae0\u7684\u201c\u6811\u4e0a\u7684\u5176\u4ed6\u65b9\u6cd5\u201d\u91cc\uff09\n\n\u7136\u540e\u5927\u5bb6\u770b\u5b8c\u8fd9\u9898\uff0c\u6700\u5173\u6ce8\u7684\u4e00\u5b9a\u662f\u90a3\u4e2a\u6240\u6709\u5ea6\u6570\u5c0f\u4e8e20\uff08\u6216\u8005\u4f60\u5df2\u7ecf\u4e86\u89e3\u5e26\u6743\u91cd\u5fc3\u9a6c\u4e0a\u60f3\u5230\u90a3\u4e2a\u6027\u8d28\uff1f\uff09\uff0c\u4e00\u822c\u90fd\u4f1a\u5148\u5192\u51fa\u8fd9\u6837\u7684\u60f3\u6cd5\uff0c\u8fd9\u9898\u5e94\u8be5\u4e00\u5b9a\u662f\u5bf9\u8282\u70b9\u679a\u4e3e\u6240\u6709\u513f\u5b50\u518d\u7ef4\u62a4\u4ec0\u4e48\u6570\u636e\u7ed3\u6784\u505a\u3002\n\n\u4e00\u8003\u8651\u679c\u7136\u6027\u8d28\u5947\u597d\uff0c\u5f53\u5bf9\u4e00\u4e2a\u8282\u70b9\u679a\u4e3e\u5e26\u6743\u91cd\u5fc3\u5728\u4e00\u4e2a\u513f\u5b50\u7684\u5b50\u6811\u65f6\u5176\u4ed6\u513f\u5b50\u7684\u5b50\u6811\u5305\u62ec\u8282\u70b9\u672c\u8eab\u7684\u6709\u6548\u4fe1\u606f\u53ea\u5269\u4e00\u4e2a\uff1a\u9664\u6b64\u513f\u5b50\u7684\u5b50\u6811\u5916\u6240\u6709\u7684\u70b9\u6743\u548c\uff0c\u95ee\u9898\u5373\u8f6c\u79fb\u5230\u6b64\u513f\u5b50\u7684\u5b50\u6811\u4e2d\uff0c\u518d\u7ed3\u5408\u6811\u7684\u5e26\u6743\u91cd\u5fc3\u7684\u6027\u8d28\uff0c\u4e0d\u96be\u770b\u51fa\u662f\u9053\u52a8\u6001\u70b9\u5206\u6cbb\u3002\n\n[\u52a8\u6001\u70b9\u5206\u6cbb\u4ecb\u7ecd](https://www.cnblogs.com/bztMinamoto/p/9489473.html)(\u8d34\u5927\u4f6c\u535a\u5ba2)\n\n\u505a\u6cd5\u662f\u5bf9\u4e8e\u70b9\u5206\u6811\u4e0a\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u4e24\u4e2a\u6570\u7ec4Sd,Sdis,Sd\u8868\u793a\u6b64\u91cd\u5fc3\u5bf9\u5e94\u6811\u7684\u70b9\u6743\u548c\uff0cSdis\u8868\u793a\u6b64\u91cd\u5fc3\u5bf9\u5e94\u6811\u5230\u5176\u70b9\u5206\u6811\u4e0a\u7684\u7236\u4eb2\u7684dv*dis\u7684\u548c\uff0c\u4fee\u6539\u65f6\u8df3\u70b9\u5206\u6811$O(logn)$\u4fee\u6539\uff0c\u91cd\u65b0\u8ba1\u7b97\u4e00\u6b21\u7b54\u6848\u9700O(logn)\u590d\u6742\u5ea6\uff08\u4e00\u76f4\u4ece\u70b9\u5206\u6811\u9876\u5f80\u4e0b\u8d70\u76f4\u5230\u8fbe\u5230\u5e26\u6743\u91cd\u5fc3\u6027\u8d28\u4e2d\u6240\u6709$\\Delta W$\u90fd\u5927\u4e8e\u7b49\u4e8e0\u65f6\uff0c\u6700\u591a\u8d70$O(logn)$\u5c42\uff09\n\n## \u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <stdio.h>\n#include <string.h>\nusing namespace std;\ntypedef long long ll; \nconst int N=2e5+50;\nint n,Q,cnt,Ecnt,RtG;\nint head[N],pre[N],to[N],len[N],shan[N];\nint Exu[N],xuE[N],Edep[N],Minn[N][20],Minp[N][20],dis[N],Log[N];\nint szG[N],headG[N],preG[N],toG[N],Fa[N],Con[N],Sum[N],Sumd[N];\nll ans,Sumdis[N];\n\nvoid addedge(int u,int v,int w){\n    cnt++;\n    pre[cnt]=head[u];\n    head[u]=cnt;\n    to[cnt]=v;\n    len[cnt]=w;\n}\n\nvoid addedgeG(int u,int v,int id){\n    cnt++;\n    preG[cnt]=headG[u];\n    headG[u]=cnt;\n    toG[cnt]=v;\n    Con[cnt]=id;\n}\n\nvoid dfsE(int now,int fa,int dep){\n    Ecnt++,Exu[Ecnt]=now,Edep[Ecnt]=dep,xuE[now]=Ecnt;\n    for(int i=head[now];i;i=pre[i]){\n        int nex=to[i];\n        if(nex==fa) continue;\n        dis[nex]=dis[now]+len[i];\n        dfsE(nex,now,dep+1);\n        Ecnt++,Exu[Ecnt]=now,Edep[Ecnt]=dep;\n    }\n}\n\nvoid InitE()\n{\n    dfsE(1,-1,1);\n    int log_cnt=0;\n    for(int i=1;i<2*n;i++)\n    {\n        if((1<<(log_cnt+1))>=i) Log[i]=log_cnt;\n        else Log[i]=++log_cnt;\n    }\n    for(int i=1;i<2*n;i++)\n        Minn[i][0]=Edep[i],Minp[i][0]=i;\n    for(int a=1;(1<<a)<2*n;a++)\n        for(int i=1;i+(1<<a)-1<2*n;i++)\n        {\n            if(Minn[i][a-1]<Minn[i+(1<<(a-1))][a-1]) Minn[i][a]=Minn[i][a-1],Minp[i][a]=Minp[i][a-1];\n            else Minn[i][a]=Minn[i+(1<<(a-1))][a-1],Minp[i][a]=Minp[i+(1<<(a-1))][a-1];\n        }\n}\n\ninline int lca(int u,int v){\n    int l=min(xuE[u],xuE[v]),r=max(xuE[u],xuE[v]),a=Log[r-l+1];\n    if(Minn[l][a]<Minn[r-(1<<a)+1][a]) return Exu[Minp[l][a]];\n    return Exu[Minp[r-(1<<a)+1][a]];\n}\n\ninline ll Dis(int u,int v){\n    return (ll)(dis[u]+dis[v]-2*dis[lca(u,v)]);\n}\n\nvoid dfsszG(int now,int fa){\n    szG[now]=1;\n    for(int i=head[now];i;i=pre[i])\n    {\n        int nex=to[i];\n        if(nex==fa || shan[i]) continue;\n        dfsszG(nex,now);\n        szG[now]+=szG[nex];\n    }\n}\n\nvoid findG(int now,int fa,int& maxv,int& maxp,int Asz){\n    int Maxv=Asz-szG[now];\n    for(int i=head[now];i;i=pre[i])\n    {\n        int nex=to[i];\n        if(nex==fa || shan[i]) continue;\n        findG(nex,now,maxv,maxp,Asz);\n        Maxv=max(Maxv,szG[nex]);\n    }\n    if(Maxv && Maxv<maxv) maxv=Maxv,maxp=now;\n}\n\nvoid buildG(int u,int lG,int Id)\n{\n    int maxv=N,maxp=-1;\n    dfsszG(u,-1);\n    findG(u,-1,maxv,maxp,szG[u]);\n    int G=(maxp==-1?u:maxp);\n    if(lG!=-1){\n        addedgeG(lG,G,Id);\n        addedgeG(G,lG,Id);\n        Fa[G]=lG;\n    }\n    else RtG=G;\n    Sum[G]=szG[u];\n    if(maxp==-1) return;\n    for(int i=head[G];i;i=pre[i])\n        shan[i]++,shan[(i&1)?(i+1):(i-1)]++;\n    for(int i=head[G];i;i=pre[i])\n        if(shan[i]==1)\n            buildG(to[i],G,i);\n    for(int i=head[G];i;i=pre[i])\n        shan[i]--,shan[(i&1)?(i+1):(i-1)]--;\n}\n\nvoid InitG(){\n    cnt=0;\n    buildG(1,-1,946);\n}\n\nvoid update(int ui,ll ei)\n{\n    int now=ui;\n    while(Fa[now]){\n        Sumd[now]+=ei;\n        Sumdis[now]+=ei*Dis(Fa[now],ui);\n        now=Fa[now];\n    }\n    Sumd[RtG]+=ei;\n    Sumdis[RtG]+=ei*Dis(RtG,ui);\n}\n\nvoid Solve(int now,ll Add)\n{\n    ll ret=Add;\n    for(int i=headG[now];i;i=preG[i])\n        if(toG[i]!=Fa[now])\n            ret+=Sumdis[toG[i]];\n    for(int i=headG[now];i;i=preG[i])\n    {\n        int nex=toG[i];\n        if(nex==Fa[now]) continue;\n        if(2*Sumd[nex]>Sumd[now]){\n            ll osd=Sumd[now]-Sumd[nex],Dd=len[Con[i]],nAdd=ret-Sumdis[nex]+osd*Dd;\n            update(to[Con[i]],osd);\n            Solve(nex,nAdd);\n            update(to[Con[i]],-osd);\n            return;\n        }\n    }\n    ans=ret;\n}\n\nint main()\n{\n    scanf(\"%d%d\",&n,&Q);\n    for(int i=1;i<n;i++){\n        int u,v,w;\n        scanf(\"%d%d%d\",&u,&v,&w);\n        addedge(u,v,w);\n        addedge(v,u,w);\n    }\n    InitE();\n    InitG();\n    while(Q--)\n    {\n        int ui,ei;\n        scanf(\"%d%d\",&ui,&ei);\n        update(ui,ei);\n        Solve(RtG,0);\n        printf(\"%lld\\n\",ans);\n    }\n    return 0;\n}\n```",
        "postTime": 1567938375,
        "uid": 41271,
        "name": "\u59a9\u5a9a\u7684ak\u841d\u8389",
        "ccfLevel": 9,
        "title": "ZJOI2015\u5e7b\u60f3\u4e61\u6218\u7565\u6e38\u620f(\u52a8\u6001\u70b9\u5206\u6cbb)"
    },
    {
        "content": "[\u9898\u9762](https://www.luogu.org/problemnew/show/P3345)\n\n\u52a8\u6001\u70b9\u5206\u6cbb\u3002\n\n\u9996\u5148\u6211\u4eec\u8981\u627e\u91cd\u5fc3\uff0c\u5173\u4e8e\u6709\u70b9\u6743\u548c\u8fb9\u6743\u7684\u6811\uff0c\u6211\u4eec\u8be5\u5982\u4f55\u627e\u91cd\u5fc3\u5462\uff1f\n\n\u8fd9\u91cc\u9700\u8981\u7b80\u8bc1\u4e00\u4e0b\u91cd\u5fc3\u4f4d\u7f6e\u4e0e\u8fb9\u6743\u65e0\u5173\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/29602.png)\n\n\u5bf9\u4e8e\u4e00\u4e2a\u70b9$p$\uff0c\u8003\u8651\u7b54\u6848\u662f$p$\u8fd8\u662f\u4f1a\u5728\u67d0\u4e2a\u5206\u652f\u4e2d\n\n\u73b0\u5728\uff0c\u6211\u4eec\u8003\u8651\u4e00\u4ef6\u5947\u602a\u7684\u4e8b\u60c5\n\n\u5982\u679c\u80fd\u628a\u70b9\u9009\u62e9\u5728\u4e00\u6761\u8fb9\u7684\u4e2d\u95f4(\u5982\u56fe\u4e2d$p'$)\n\n\u8bbe$p'$\u8ddd\u79bb\u5de6\u8fb9\u8ddd\u79bb\u4e3a$x$\uff0c\u8ddd\u79bb\u548c\u4e3a$f(x)$\n\n\u6211\u4eec\u6709$f(x)$=$\\sum_{q\u2208L}^n Vq*(dist(p,q)+x)$+$\\sum_{q\u2208R}^n Vq*(dist(p,q)-x)$\n\n\u7136\u540e\u6211\u4eec\u5bf9\u8fd9\u6761\u5f0f\u5b50\u6c42\u4e00\u6b21\u5bfc\uff1a\n\n$f'(x)$=$\\sum_{q\u2208L}^n Vq$-$\\sum_{q\u2208R}^n Vq$\n\n\u5bf9\u4e8e\u4e00\u6761\u8fb9\uff0c\u5982\u679c $f'(0)$ < 0\uff0c\u90a3\u4e48\u7b54\u6848\u4e00\u5b9a\u5728\u8fd9\u6761\u8fb9\u7684\u5206\u652f\u91cc\n\n\u6240\u4ee5\u91cd\u5fc3\u4e0e\u8fb9\u6743\u65e0\u5173\u3002\n\n\u6240\u4ee5\u5927\u529b\u5efa\u6784\u70b9\u5206\u6811\uff0c\u7136\u540e\u7edf\u8ba1\u7b54\u6848\u5c31\u597d\u4e86\u3002\n\ncode:\n```\n//2018.8.20 by ljz\n#include<bits/stdc++.h>\nusing namespace std;\n#define res register LL\n#define LL long long\n#define inf 0x3f3f3f3f\n#define eps 1e-15\ninline LL read(){\n    res s=0;\n    bool w=0;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')w=1;ch=getchar();}\n    while(ch>='0'&&ch<='9')s=s*10+ch-'0',ch=getchar();\n    return w?-s:s;\n}\ninline void _swap(res &x,res &y){\n    x^=y^=x^=y;\n}\ninline LL _abs(const res &x){\n    return x>0?x:-x;\n}\ninline LL _max(const res &x,const res &y){\n    return x>y?x:y;\n}\ninline LL _min(const res &x,const res &y){\n    return x<y?x:y;\n}\nconst LL N=1e5+10;\nnamespace MAIN{\n\tLL n,T,RT;\n\tnamespace Tree{\n\t\tstruct E{\n\t\t\tLL next,to,val;\n\t\t\tE() {}\n\t\t\tE(res next,res to,res val):next(next),to(to),val(val) {} \n\t\t}edge[N<<1];\n\t\tLL head[N],cnt;\n\t\tinline void addedge(res u,res v,res w){\n\t\t\tedge[++cnt]=E(head[u],v,w),head[u]=cnt;\n\t\t\tedge[++cnt]=E(head[v],u,w),head[v]=cnt; \n\t\t}\n\t\tLL dep[N],jump[N][21],dis[N];\n\t\tvoid dfs1(res x,res fax,res depx){\n\t\t\tdep[x]=depx,jump[x][0]=fax;\n\t\t\tfor(res i=1;i<=20;i++)jump[x][i]=jump[jump[x][i-1]][i-1];\n\t\t\tfor(res i=head[x];~i;i=edge[i].next){\n\t\t\t\tres tox=edge[i].to;\n\t\t\t\tif(tox==fax)continue;\n\t\t\t\tdis[tox]=dis[x]+edge[i].val;\n\t\t\t\tdfs1(tox,x,depx+1);\n\t\t\t}\n\t\t}\n\t\tinline LL get_lca(res x,res y){\n\t\t\tif(dep[x]<dep[y])_swap(x,y);\n\t\t\tres pos=dep[x]-dep[y];\n\t\t\tfor(res i=20;~i;i--)if(pos&(1<<i))x=jump[x][i];\n\t\t\tif(x==y)return x;\n\t\t\tfor(res i=20;~i;i--)if(jump[x][i]!=jump[y][i])x=jump[x][i],y=jump[y][i];\n\t\t\treturn jump[y][0];\n\t\t}\n\t\tinline LL get_dis(res x,res y){\n\t\t\treturn dis[x]+dis[y]-(dis[get_lca(x,y)]<<1);\n\t\t}\n\t}\n\tnamespace Point{\n\t\tLL sum,w[N],rt,mf[N],siz[N];\n\t\tbool vis[N];\n\t\tstruct E{\n\t\t\tLL next,to,root;\n\t\t\tE() {}\n\t\t\tE(res next,res to,res root):next(next),to(to),root(root) {} \n\t\t}edge[N];\n\t\tLL head[N],cnt;\n\t\tinline void addedge(res u,res v,res root){\n\t\t\tedge[++cnt]=E(head[u],v,root),head[u]=cnt;\n\t\t}\n\t\tvoid getroot(res x,res fax){\n\t\t\tsiz[x]=1,w[x]=0;\n\t\t\tfor(res i=Tree::head[x];~i;i=Tree::edge[i].next){\n\t\t\t\tres tox=Tree::edge[i].to;\n\t\t\t\tif(tox==fax||vis[tox])continue;\n\t\t\t\tgetroot(tox,x);\n\t\t\t\tsiz[x]+=siz[tox],w[x]=_max(w[x],siz[tox]);\n\t\t\t}\n\t\t\tw[x]=_max(w[x],sum-siz[x]);\n\t\t\tif(w[rt]>w[x])rt=x;\n\t\t}\n\t\tvoid solve(res x,res fax){\n\t\t\tmf[x]=fax;\n\t\t\tvis[x]=1;\n\t\t\tfor(res i=Tree::head[x];~i;i=Tree::edge[i].next){\n\t\t\t\tres tox=Tree::edge[i].to;\n\t\t\t\tif(vis[tox])continue;\n\t\t\t\tsum=siz[tox],rt=0;\n\t\t\t\tgetroot(tox,0);\n\t\t\t\taddedge(x,tox,rt);\n\t\t\t\tsolve(rt,x);\n\t\t\t}\n\t\t}\n\t\tinline void init(){\n\t\t\tsum=w[0]=n,rt=0;\n\t\t\tgetroot(1,0);\n\t\t\tRT=rt;\n\t\t\tsolve(rt,0);\n\t\t}\n\t}\n\tnamespace Action{\n\t\tLL sum[N],po[N],ed[N];\n\t\tvoid modify(res x,res y){\n\t\t\tsum[x]+=y;\n\t\t\tfor(res i=x;Point::mf[i];i=Point::mf[i]){\n\t\t\t\tres dist=Tree::get_dis(x,Point::mf[i]);\n\t\t\t\tsum[Point::mf[i]]+=y;\n\t\t\t\tpo[Point::mf[i]]+=y*dist;\n        \t\ted[i]+=y*dist;\n\t\t\t}\n\t\t}\n\t\tLL query(res x){\n\t\t\tres tmp=po[x];\n\t\t\tfor(res i=x;Point::mf[i];i=Point::mf[i]){\n\t\t\t\tres dist=Tree::get_dis(x,Point::mf[i]);\n\t\t\t\ttmp+=dist*(sum[Point::mf[i]]-sum[i])+po[Point::mf[i]]-ed[i];\n\t\t\t}\n\t\t\treturn tmp;\n\t\t}\n\t\tLL calc(res x){\n\t\t\tres tmp=query(x);\n\t\t\tfor(res i=Point::head[x];~i;i=Point::edge[i].next){\n\t\t\t\tres tox=Point::edge[i].to;\n\t\t\t\tif(query(tox)<tmp)return calc(Point::edge[i].root);\n\t\t\t}\n\t\t\treturn tmp;\n\t\t}\n\t}\n\tinline void MAIN(){\n\t\tmemset(Tree::head,-1,sizeof(Tree::head));\n\t\tmemset(Point::head,-1,sizeof(Point::head));\n\t\tn=read(),T=read();\n\t\tfor(res i=1;i<n;i++){\n\t\t\tres u=read(),v=read(),w=read();\n\t\t\tTree::addedge(u,v,w);\n\t\t}\n\t\tTree::dfs1(1,-1,1);\n\t\tPoint::init();\n\t\twhile(T--){\n\t\t\tres x=read(),y=read();\n\t\t\tAction::modify(x,y);\n\t\t\tprintf(\"%Ld\\n\",Action::calc(RT));\n\t\t}\n\t}\n}\nint main(){\n\tMAIN::MAIN();\n\treturn 0;\n} \n```",
        "postTime": 1534727994,
        "uid": 32878,
        "name": "foreverlasting",
        "ccfLevel": 7,
        "title": "\u3010ZJOI2015\u3011\u5e7b\u60f3\u4e61\u6218\u7565\u6e38\u620f"
    }
]