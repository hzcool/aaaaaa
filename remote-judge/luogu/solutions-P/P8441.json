[
    {
        "content": "\u6211\u4eec\u8003\u8651\u4f7f\u7528 `std::set` \u7ef4\u62a4\u6bcf\u79cd\u989c\u8272\u51fa\u73b0\u7684\u8fde\u7eed\u6bb5\u3002\n\n\u4e0b\u9762\u5bf9\u4e8e\u4e00\u4e2a\u8fde\u7eed\u6bb5\u4f7f\u7528 $L,R$ \u8868\u793a\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee\u533a\u95f4\u4f7f\u7528 $l,r$ \u8868\u793a\u3002\n\n\u5bf9\u4e8e\u4e00\u6b21\u8be2\u95ee\uff0c\u6211\u4eec\u94a6\u5b9a\u4e00\u79cd\u989c\u8272\u7684\u8d21\u732e\u7531 $[l,r]$ \u5305\u542b\u6216\u76f8\u4ea4\u7684\u6700\u5de6\u7aef\u7684 $[L,R]$ \u7ed9\u51fa\u3002\n\n\u90a3\u4e48\u82e5\u73b0\u5728\u5728\u989c\u8272 $c$ \u4e2d\u6709\u4e24\u4e2a\u76f8\u90bb\u7684\u8fde\u7eed\u6bb5 $[L_1,R_1]$,$[L_2,R_2]$\uff0c\u90a3\u4e48\u7b2c\u4e8c\u4e2a\u8fde\u7eed\u6bb5\u7684\u8d21\u732e\u5f62\u5f0f\u5c31\u662f\u5bf9\u4e8e $l\\in(R_1,R_2],r\\in[L_2,n]$ \u7684\u8be2\u95ee\u7b54\u6848\u589e\u52a0 $c$ \u3002\u5220\u9664\u4e00\u4e2a\u8fde\u7eed\u6bb5\u7684\u8d21\u732e\u5f62\u5f0f\u662f\u7c7b\u4f3c\u7684\u3002\n\n\u5bf9\u4e8e\u8fd9\u6837\u7684\u77e9\u5f62\u52a0\u5355\u70b9\u67e5\u5f62\u5f0f\uff0c\u6211\u4eec\u8003\u8651\u4f7f\u7528\u6811\u5957\u6811\u6216\u8005 KD \u6811\u7ef4\u62a4\uff0c\u7531\u4e8e\u989c\u8272\u6bb5\u5747\u644a\uff0c\u590d\u6742\u5ea6\u662f $O(nlog^2n)$ \u6216\u8005 $O(n\\sqrt{n})$ \u7684\u3002\n\n\u4f46\u662f\u672c\u9898\u7684\u7a7a\u95f4\u9650\u5236\u4e0d\u80fd\u6ee1\u8db3\u6811\u5957\u6811 $O(n\\log^2n)$ \u7684\u9700\u6c42\uff0c\u4f7f\u7528 KD \u6811\u7684\u5e38\u6570\u8f83\u5927\uff0c\u4e0d\u80fd\u4fdd\u8bc1\u901a\u8fc7\u672c\u9898\u3002\n\n\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u672c\u9898\u5e76\u6ca1\u6709\u5f3a\u5236\u5728\u7ebf\uff0c\u6240\u4ee5\u628a\u6240\u6709\u64cd\u4f5c\u79bb\u7ebf\u4e0b\u6765\u8fdb\u884c CDQ \u5206\u6cbb\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log^2n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n)$\u3002\n\n### Code\n\n```cpp\n#include<set>\n#include<cassert>\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\nnamespace EMT{\n\ttypedef long long ll;typedef double db;\n\t#define pf printf\n\t#define F(i,a,b) for(int i=a;i<=b;i++)\n\t#define D(i,a,b) for(int i=a;i>=b;i--)\n\tinline int read(){int x=0,f=1;char ch=getchar();while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}while(ch>='0'&&ch<='9')x=x*10+ch-'0',ch=getchar();return x*f;}\n\tinline void file(){freopen(\"in.in\",\"r\",stdin);freopen(\"my.out\",\"w\",stdout);}\n\tinline int max(int a,int b){return a>b?a:b;}inline int min(int a,int b){return a<b?a:b;}\n\tinline void pi(int x){pf(\"%d \",x);}inline void pn(){pf(\"\\n\");}\n\tconst int N=1e5+10;\n\tstruct qs{int opt,x,l,r,v;friend bool operator <(qs a,qs b){return a.x<b.x;}}q[N*10];\n\tint n,m,qcnt;\n\tstruct BIT{\n\t\tll t[N];\n\t\tinline void add(int x,int v){while(x<=n)t[x]+=v,x+=x&-x;}\n\t\tinline void add(int l,int r,int v){add(l,v),add(r+1,-v);}\n\t\tinline ll ask(int x){ll ans=0;while(x)ans+=t[x],x-=x&-x;return ans;}\n\t}bit;\n\tll ans[N];\n\tstruct dp{int l,r;friend bool operator <(dp a,dp b){return a.l<b.l;}};\n\tstd::set<dp>s[N];\n\tinline void add(int l,int r,int ql,int qr,int v){\n\t\tq[++qcnt]={1,l,ql,qr,v},\n\t\tq[++qcnt]={1,r+1,ql,qr,-v};\n\t}\n\tinline int ask(std::set<dp> &s,std::set<dp>::iterator it){\n\t\tif(it==s.begin())return 1;it--;return it->r+1;\n\t}\n\tinline void ins(int v,int l,int r){\n\t\tif(1){\n\t\t\tauto it=s[v].upper_bound({r,r});\n\t\t\tif(it!=s[v].begin()){\n\t\t\t\tit--;\n\t\t\t\tif(it->r>=r&&it->l<=l)return;\n\t\t\t}\n\t\t}\n\t\tauto it=s[v].upper_bound({r,r});bool fl=0;\n\t\tif(it!=s[v].end()){\n\t\t\tadd(ask(s[v],it),it->r,it->l,n,-v);\n\t\t\tif(it->l==r+1){r=it->r;it=s[v].erase(it);fl=1;}\n\t\t}\n\t\twhile(it!=s[v].begin()){\n\t\t\tit--;\n\t\t\tif(l<=it->l&&it->r<=r){add(ask(s[v],it),it->r,it->l,n,-v);it=s[v].erase(it);continue;}\n\t\t\tif(it->r+1<l)break;\n\t\t\tif(it->r+1==l){add(ask(s[v],it),it->r,it->l,n,-v);l=it->l;s[v].erase(it);break;}\n\t\t\tif(it->r>r){add(ask(s[v],it),it->r,it->l,n,-v);r=it->r;it=s[v].erase(it);continue;}\n\t\t\tassert(it->l<=l);l=it->l;add(ask(s[v],it),it->r,it->l,n,-v);it=s[v].erase(it);break;\n\t\t}\n\t\tif(!fl){\n\t\t\tit=s[v].upper_bound({r,r});\n\t\t\tif(it!=s[v].end())add(r+1,it->r,it->l,n,v);\n\t\t}\n\t\tit=s[v].insert({l,r}).first;add(ask(s[v],it),r,l,n,v);\n\t}\n\tinline void cdq(int l,int r){\n\t\tif(l==r)return;\n\t\tint mid=(l+r)>>1;\n\t\tcdq(l,mid),cdq(mid+1,r);\n\t\tstd::sort(q+l,q+mid+1),\n\t\tstd::sort(q+mid+1,q+r+1);\n\t\tint j=l;\n\t\tF(i,mid+1,r){\n\t\t\twhile(q[i].x>=q[j].x&&j<=mid){\n\t\t\t\tif(q[j].opt==1)bit.add(q[j].l,q[j].r,q[j].v);\n\t\t\t\tj++;\n\t\t\t}if(q[i].opt==2)ans[q[i].v]+=bit.ask(q[i].r);\n\t\t}\n\t\twhile(j>l){\n\t\t\tj--;\n\t\t\tif(q[j].opt==1)bit.add(q[j].l,q[j].r,-q[j].v);\n\t\t}\n\t}\n\tinline short main(){\n\t\tn=read();m=read();\n\t\tmemset(ans,-1,sizeof(ans));\n\t\tF(i,1,m){\n\t\t\tint opt=read(),l=read(),r=read();\n\t\t\tif(opt==1){ins(read(),l,r);}\n\t\t\telse q[++qcnt]={2,l,r,r,i},ans[i]=0;\n\t\t}\n\t\tcdq(1,qcnt);\n\t\tF(i,1,m)if(~ans[i])pf(\"%lld\\n\",ans[i]);\n\t\treturn 0;\n\t}\n}\nsigned main(){return EMT::main();}\n```",
        "postTime": 1659231483,
        "uid": 451066,
        "name": "letitdown",
        "ccfLevel": 9,
        "title": "P8441"
    }
]