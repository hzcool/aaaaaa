[
    {
        "content": "## P6116 [JOI 2019 Final] \u305f\u306e\u3057\u3044\u305f\u306e\u3057\u3044\u305f\u306e\u3057\u3044\u5bb6\u5ead\u83dc\u5712\n\n------\n\n\u8fd9\u662f\u849f\u84bb ISYRHH \u9519\u8fc7\u7684\u4e00\u6b21\u8003\u8bd5\u7684\u8003\u8bd5\u9898\u2026\u2026\u8003\u8bd5\u7ed3\u675f\u540e\u53d1\u73b0\u601d\u60f3\u548c\u6b63\u89e3\u4e0d\u592a\u4e00\u6837\uff0c\u5b9e\u73b0\u4e86\u4e00\u4e0b\uff0c\u8fc7\u4e86\u6837\u4f8b\u540e\u672c\u7740\u627e\u70b9 debug \u7684\u5fc3\u6001\u4ea4\u4e0a\u53bb\uff0c\u7ed3\u679c\u4e00\u904d\u8fc7\u4e86\uff0c\u53d1\u8868\u8fd9\u7bc7\u9898\u89e3\u7ed9\u540e\u4eba\u63d0\u4f9b\u4e00\u79cd\u65b0\u7684\u601d\u8def\u3002\n\n------\n\n## \u9898\u610f\u5206\u6790\n\n\u9898\u610f\u4e3a\u901a\u8fc7\u5c3d\u53ef\u80fd\u5c11\u6b21\u6570\u7684\u4ea4\u6362\u76f8\u90bb\u4e24\u4e2a\u6570\u7684\u64cd\u4f5c\u4f7f\u4efb\u4f55\u4e24\u4e2a\u76f8\u90bb\u7684\u6570\u4e92\u4e0d\u76f8\u540c\u3002\n\n------\n\n## \u89e3\u6cd5\n\n### \u9996\u5148\u5148\u8003\u8651\u4ec0\u4e48\u6837\u7684\u60c5\u51b5\u4f1a\u4f7f\u65b9\u6848\u65e0\u6cd5\u5b9e\u73b0\uff1a\n\n\u5f53\u4e14\u4ec5\u5f53\u6709\u4e00\u79cd\u989c\u8272\u7684\u6570\u91cf\u8d85\u8fc7\u4e00\u534a\u65f6\uff0c\u65e0\u6cd5\u901a\u8fc7\u5176\u4ed6\u989c\u8272\u63d2\u7a7a\u4f7f\u8be5\u989c\u8272\u88ab\u9694\u5f00\uff0c\u56e0\u6b64\u65b9\u6848\u4e0d\u53ef\u80fd\u5b9e\u73b0\u3002\n\n\u5426\u5219\u4e00\u5b9a\u53ef\u4ee5\u901a\u8fc7\u8f83\u5c11\u4e24\u79cd\u989c\u8272\u4ea4\u53c9\u6392\u5217\uff0c\u548c\u4f7f\u8f83\u591a\u7684\u989c\u8272\u63d2\u7a7a\u6216\u4e0e\u7b2c\u4e8c\u591a\u7684\u989c\u8272\u4ea4\u53c9\u5b9e\u73b0\u81f3\u5c11\u4e00\u79cd\u65b9\u6848\u3002\n\n### \u7136\u540e\u8003\u8651\u65b9\u6848\u7684\u5b9e\u73b0\uff1a\n\n\u663e\u7136\u6709\u4e00\u4e2a\u5c0f\u7684\u8d2a\u5fc3\u7b56\u7565\uff1a\u4ea4\u6362\u4e24\u4e2a\u76f8\u540c\u989c\u8272\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u8fd9\u5e76\u4e0d\u4f1a\u5bf9\u8981\u6c42\u7684\u76f8\u90bb\u989c\u8272\u4e92\u4e0d\u76f8\u540c\u4ea7\u751f\u8d21\u732e\uff0c\u8fd8\u4f1a\u4ea7\u751f\u66f4\u591a\u7684\u4ea4\u6362\u6b21\u6570\u3002\n\n\u6240\u4ee5\u5f00\u59cb\u65f6\u7684\u67d0\u79cd\u989c\u8272\u5185\u90e8\u7684\u987a\u5e8f\u5c31\u662f\u6700\u7ec8\u72b6\u6001\u4e2d\u8be5\u79cd\u989c\u8272\u5185\u90e8\u7684\u987a\u5e8f\u3002\n\n\u53e6\u5916\u989c\u8272\u4ea4\u6362\u7684\u8fc7\u7a0b\u53ef\u4ee5\u7406\u89e3\u4e3a\u5c06\u539f\u5e8f\u5217\u53d8\u6210\u4e00\u4e2a\u65b0\u7684\u5e8f\u5217\uff0c\u5bf9\u65b0\u5e8f\u5217\u7684\u6bcf\u4e00\u4f4d\u987a\u5e8f\u8003\u8651\u3002\n\n#### \u8003\u8651\u4e4b\u524d\u51b3\u7b56\u7684\u54ea\u4e9b\u5185\u5bb9\u4f1a\u5bf9\u4e4b\u540e\u7684\u51b3\u7b56\u4ea7\u751f\u5f71\u54cd\uff1a\n\n1.\u65b0\u5e8f\u5217\u5f53\u524d\u6700\u540e\u4e00\u4f4d\u7684\u989c\u8272\u5173\u7cfb\u5230\u4e0b\u4e00\u4f4d\u80fd\u9009\u4ec0\u4e48\u989c\u8272\uff0c\u4e0d\u80fd\u9009\u4ec0\u4e48\u989c\u8272\uff0c\u4f1a\u5bf9\u4e4b\u540e\u4ea7\u751f\u5f71\u54cd\u3002\n\n2.\u65b0\u5e8f\u5217\u4e2d\u5df2\u7ecf\u4f7f\u7528\u8fc7\u54ea\u4e9b\u6570\uff0c\u8fd8\u6ca1\u7528\u8fc7\u90a3\u4e9b\u6570\uff0c\u4f1a\u5bf9\u4e4b\u540e\u51b3\u7b56\u4ea7\u751f\u5f71\u54cd\uff08\u5269\u4e0b\u6570\u7684\u987a\u5e8f\u65e0\u5173\u7d27\u8981\uff0c\u56e0\u4e3a\u8981\u4e48\u662f\u8fd8\u672a\u88ab\u52a8\u8fc7\uff0c\u8981\u4e48\u662f\u53ef\u4ee5\u901a\u8fc7\u8c03\u6574\u987a\u5e8f\u653e\u5230\u4efb\u610f\u4f4d\u7f6e\uff09\u3002\n\n\u7531\u4e8e\u6570\u7684\u987a\u5e8f\u662f\u4e00\u5b9a\u7684\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u8bb0\u5f55\u5df2\u4f7f\u7528\u6bcf\u79cd\u989c\u8272\u7684\u4e2a\u6570\u5c31\u80fd\u8bb0\u5f55\u4f7f\u7528\u8fc7\u7684\u6570\u3002\n\n\u5c06\u8fd9\u4e24\u9879\u4f5c\u4e3a\u52a8\u6001\u89c4\u5212\u7684\u72b6\u6001\u3002\n\n\u7528\u4e00\u4e2a\u56db\u7ef4\u6570\u7ec4 $dp_{i,j,k,u}$ \u8868\u793a\u65b0\u5e8f\u5217\u4e2d\u5df2\u6709 $i$ \u4e2a R\uff0c$j$ \u4e2a G\uff0c$k$ \u4e2a Y\uff0c\u4e14\u6700\u540e\u4e00\u4f4d\u662f $u$ \u65f6\u82b1\u8d39\u7684\u4ea4\u6362\u6b21\u6570\u3002\n\n( $\\mathtt{' R'}=0,\\mathtt{'G'}=1,\\mathtt{'Y'}=2$ )\n\n\u7136\u540e\u8003\u8651\u8f6c\u79fb\n\n\u9996\u5148\u4ece\u539f\u5e8f\u5217\u7684\u6bcf\u4e00\u4f4d\u5f00\u59cb\u8003\u8651\uff0c\u5982\u679c\u53ea\u5bf9\u539f\u5e8f\u5217\u7684\u524d $i$ \u4f4d\u64cd\u4f5c\uff0c\u65b0\u5e8f\u5217\u4e2d\u6700\u591a\u4f1a\u6709\u4f1a\u6709 $cn_0$ \u4e2a R\uff0c$cn_1$ \u4e2a G\uff0c$cn_2$ \u4e2a Y\u3002\n\n\uff08$cn_i$ \u8868\u793a\u5904\u7406\u5230\u5f53\u524d $i$ \u7684\u51fa\u73b0\u6b21\u6570\uff09\n\n\u82e5\u8981\u5f80\u65b0\u5e8f\u5217\u6dfb\u52a0\u539f\u5e8f\u5217\u7b2c $i$ \u4f4d\u4e0a\u7684 R\uff0c\u8fd9\u4e2a R \u7684\u524d\u9762\u53ef\u4ee5\u6709\u4efb\u610f\u5408\u6cd5\u6570\u91cf\u7684 G \u548c Y\uff0c\u4f46\u662f\u6b64\u65f6\u65b0\u5e8f\u5217\u5fc5\u7136\u5df2\u7ecf\u653e\u7f6e\u4e86\u539f\u5e8f\u5217\u524d\u9762\u6240\u6709\u7684 R\u3002\n\n\u7528 $now$ \u8868\u793a\u5f53\u524d\u4e00\u4f4d\u539f\u5e8f\u5217\u7684\u5b57\u7b26\uff08\u5047\u8bbe\u4e3a R\uff09\u3002\n\n\u8fd9\u6b21\u653e\u7f6e R \u53ef\u4ee5\u8868\u793a\u4e3a $dp_{cn_{now},j,k,now}$ \u4ece $\\mathtt{min}\\left(dp_{cn_{now-1},j,k,u}\\right)$ \u8f6c\u79fb\u800c\u6765\u3002\n\n\uff08\u5176\u4e2d $j\\in\\left[0,cn_1\\right]$\uff0c$k\\in\\left[0,cn_2\\right]$\uff0c$u\\in\\left\\{1,2\\right\\}$\uff09\n\n\u8003\u8651\u5c06 R \u79fb\u52a8\u5230\u65b0\u5e8f\u5217\u7684\u4f4d\u7f6e\uff0c\u4e4b\u524d\u7684\u64cd\u4f5c\u4e2d\u4e0d\u53ef\u80fd\u4f1a\u52a8\u8fd9\u4e2a R\uff0c\u6240\u4ee5\u5b83\u8fd8\u5728\u539f\u4f4d\u7f6e $i$\u3002\n\n\u65b0\u5e8f\u5217\u73b0\u5728\u7684\u957f\u5ea6\u4e3a $cn_{now}+j+k-1$\uff0c\u5e94\u653e\u5230\u7b2c $cn_{now}+j+k$ \u4f4d\u3002\n\n\u5373\u5c06\u5176\u4ece\u7b2c $i$ \u4f4d\u79fb\u5230\u7b2c $cn_{now}+j+k$ \u4f4d\u3002\n\n\u79fb\u52a8\u7684\u6b21\u6570\u4e3a $i-cn_{now}-j-k$\u3002\n\n\u5373 $dp_{cn_{now},j,k,now}=\\mathtt{min}\\left(dp_{cn_{now-1},j,k,u}\\right)+\\left(i-cn_{now}-j-k\\right)$\u3002\n\n\u8fd9\u6837\u5c31\u6709\u4e86\u4e00\u4e2a\u8f6c\u79fb\u5f0f\u3002\n\n\u7136\u540e\u53d1\u73b0\u4e0d\u5bf9\uff0c\u5bf9\u4e8e\u539f\u5e8f\u5217\u4e2d\u8fde\u7eed\u7684\u4e24\u4e2a\u76f8\u540c\u7684\u6570\uff0c\u6211\u4eec\u79fb\u52a8\u540e $cn_0,cn_1,cn_2$ \u6709\u53ef\u80fd\u4e0d\u80fd\u88ab\u6ee1\u8db3\uff0c\u7136\u540e\u7b54\u6848\u6ca1\u6cd5\u7edf\u8ba1\u3002\n\n\u5361\u4e86\u4e00\u4f1a\u540e\u53d1\u73b0\uff1a\n\n\u5bf9\u4e8e\u5176\u4ed6\u7684\u60c5\u51b5\u6211\u4eec\u4f1a\u628a\u6ca1\u7528\u8fc7\u7684\u4e00\u4e9b\u90e8\u5206\u5495\u6389\u6682\u65f6\u653e\u5230 $i$ \u548c $cn_{now}+i+j$ \u4e2d\u95f4\u3002\n\n\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7\u8c03\u6362\u4e4b\u524d\u79fb\u52a8\u7684\u987a\u5e8f\u4f7f\u4efb\u4f55\u4e00\u4e2a\u6570\u4f4d\u4e8e $i$ \u548c $cn_{now}+i+j$ \u4e2d\u95f4\u7684\u4efb\u4f55\u4e00\u4e2a\u4f4d\u7f6e\u3002\n\n\u6240\u4ee5\u5728\u7b2c\u4e00\u79cd\u8f6c\u79fb\u540e\uff0c\u8fd8\u53ef\u4ee5\u5728\u540e\u9762\u8865\u4e0a\u4e00\u4e2a\u4e0d\u4e0e\u6700\u540e\u4e00\u4f4d\u76f8\u540c\u7684\u6570\uff0c\u8fd9\u6b65\u7684\u64cd\u4f5c\u6570\u4e3a $0$\u3002\n\n\u8f6c\u79fb\uff1a$dp_{cn_{now},j+1,k,1}=\\mathtt{min}\\left(dp_{cn_{now},j+1,k,1},dp_{cn_{now},j,k,now}\\right)$\u3002\n\n\u5bf9\u4e8e G\uff0cY \u7684\u8f6c\u79fb\u540c\u7406\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<string>\n#include<cstdio>\nusing namespace std;\nint n,cn[3],now,ans=0x7f7f7f7f,tot[3];\nchar opt[3]={'R','G','Y'};\nstring s;\nint minn(int x,int y)\n{\n    return x<=y?x:y;\n}\nint main()\n{\n    // freopen(\"b.in\",\"r\",stdin);\n    // freopen(\"b.out\",\"w\",stdout);\n    scanf(\"%d\",&n);\n    cin>>s;\n    for(int i=0;i<n;i++)for(int j=0;j<3;j++){if(s[i]==opt[j])tot[j]++;}\n    for(int j=0;j<3;j++)if(tot[j]>((n+1)>>1)){printf(\"-1\");return 0;}\n    int dp[tot[0]+1][tot[1]+1][tot[2]+1][3];\n    memset(dp,0x3f,sizeof(dp));memset(dp[0][0][0],0,sizeof(dp[0][0][0]));\n    for(int i=0;i<n;i++)\n    {\n        for(int j=0;j<3;j++)if(s[i]==opt[j])now=j;\n        if(now==0)\n        {\n            for(int j=cn[1];j>=0;j--)\n            {\n                for(int k=cn[2];k>=0;k--)\n                {\n                    dp[cn[now]+1][j][k][0]=minn(dp[cn[now]+1][j][k][0],minn(dp[cn[now]][j][k][1],dp[cn[now]][j][k][2])+(i-cn[now]-j-k));\n                    if(j<cn[1])dp[cn[now]+1][j+1][k][1]=minn(dp[cn[now]+1][j+1][k][1],dp[cn[now]+1][j][k][0]);\n                    if(k<cn[2])dp[cn[now]+1][j][k+1][2]=minn(dp[cn[now]+1][j][k+1][2],dp[cn[now]+1][j][k][0]);\n                    // printf(\"1\");\n                }\n            }\n            cn[0]++;\n        }\n        if(now==1)\n        {\n            for(int j=cn[0];j>=0;j--)\n            {\n                for(int k=cn[2];k>=0;k--)\n                {\n                    // printf(\"1\");\n                    dp[j][cn[now]+1][k][1]=minn(dp[j][cn[now]+1][k][1],minn(dp[j][cn[now]][k][0],dp[j][cn[now]][k][2])+(i-cn[now]-j-k));\n                    if(j<cn[0])dp[j+1][cn[now]+1][k][0]=minn(dp[j+1][cn[now]+1][k][0],dp[j][cn[now]+1][k][1]);\n                    if(k<cn[2])dp[j][cn[now]+1][k+1][2]=minn(dp[j][cn[now]+1][k+1][2],dp[j][cn[now]+1][k][1]);\n                    // printf(\"1\");\n                }\n            }\n            cn[1]++;\n        }\n        if(now==2)\n        {\n            for(int j=cn[0];j>=0;j--)\n            {\n                for(int k=cn[1];k>=0;k--)\n                {\n                    // printf(\"1\");\n                    dp[j][k][cn[now]+1][2]=minn(dp[j][k][cn[now]+1][2],minn(dp[j][k][cn[now]][0],dp[j][k][cn[now]][1])+(i-cn[now]-j-k));\n                    if(j<cn[0])dp[j+1][k][cn[now]+1][0]=minn(dp[j+1][k][cn[now]+1][0],dp[j][k][cn[now]+1][2]);\n                    if(k<cn[1])dp[j][k+1][cn[now]+1][1]=minn(dp[j][k+1][cn[now]+1][1],dp[j][k][cn[now]+1][2]);\n                    // printf(\"1\");\n                }\n            }\n            cn[2]++;\n        }\n    }\n    for(int i=0;i<3;i++)ans=minn(ans,dp[cn[0]][cn[1]][cn[2]][i]);\n    printf(\"%d\",ans);\n    // fclose(stdin);fclose(stdout);\n    return 0;\n}\n\n```\n\n## **end**\n\n\n------------\n\nupdate 7.22\uff1a\n\n\u4fee\u6539\u4e86 for \u5faa\u73af\u987a\u5e8f\u95ee\u9898\uff0c\u5012\u5e8f\u4fdd\u8bc1\u4e0d\u4f1a\u8fde\u7eed\u4e24\u6b21\u5728\u65b0\u5e8f\u5217\u672b\u5c3e\u52a0\u4e0a\u540c\u6837\u989c\u8272\uff0c\uff08debug \u7684\u65f6\u5019\u53ea\u6539\u4e86\u4e00\u4e2a for\uff0c\u4e0d\u8fc7\u6570\u636e\u592a\u6c34\u6ca1\u88ab\u5361\u6389\u3002\uff09",
        "postTime": 1626823298,
        "uid": 261290,
        "name": "ISYRHH",
        "ccfLevel": 9,
        "title": "P6116 \u5bb6\u5ead\u83dc\u5712 \u9898\u89e3"
    },
    {
        "content": "\u770b\u4e0a\u53bb\u8d2a\u5fc3\u4f3c\u4e4e\u4e0d\u592a\u53ef\u505a\uff0c \u6570\u636e\u8303\u56f4\u4e5f\u53ea\u6709$400$, \u6240\u4ee5\u53ef\u4ee5\u8003\u8651dp\uff0c \n\n\u6709\u4e00\u4e2a\u6734\u7d20\u72b6\u6001$f[i][j][k][p][0/1/2]$\u8868\u793a\u524d$i$\u4e2a\u4f4d\u7f6e\u4e0a$0,1,2$\u7684\u4e2a\u6570\u5206\u522b\u4e3a$j,k,p$\uff0c\u4e14\u7b2c$i$\u4f4d\u4e0a\u7684\u989c\u8272\u4e3a$0/1/2$\u7684\u6700\u5c0f\u82b1\u8d39\uff0c \u663e\u7136\uff0c$f[i][j][k][p]$\u662f\u7531$f[i - 1][j - 1][k][p]$, $f[i - 1][j][k - 1][p]$ \u548c $f[i - 1][j][k][p - 1]$\u8f6c\u79fb\u8fc7\u6765\uff0c \u56e0\u4e3a\u8981\u6c42\u4e0d\u80fd\u540c\u8272\u76f8\u90bb\uff0c\u6240\u4ee5\u8f6c\u79fb\u65f6$f[i]$ \u548c $f[i - 1]$\u7684\u6700\u540e\u4e00\u7ef4$0/1/2$\u4e0d\u80fd\u76f8\u540c\u3002\n\n\u7136\u540e\u5c31\u662f\u8f6c\u79fb\u4ee3\u4ef7\u4e86\u3002  \n\u9996\u5148\u6709\u4e00\u4e2a\u6bd4\u8f83\u663e\u7136\u7684\u6027\u8d28\uff0c\u5373\u540c\u79cd\u989c\u8272\u7684\u76f8\u5bf9\u4f4d\u7f6e\u4e0d\u4f1a\u6539\u53d8\u3002  \n\u5047\u8bbe\u5f53\u524d\u7684\u8f6c\u79fb\u662f  \n$f[i][j - 1][k][p][1/2] --> f[i][j][k][p][0]$  \n\u90a3\u4e48\u7b2c$i$\u4f4d\u4e0a\u586b\u7684\u989c\u8272\u4e3a$0$, \u8be50\u663e\u7136\u7531\u539f\u5e8f\u5217\u4e0a\u7b2cj\u4e2a0\u79fb\u52a8\u8fc7\u6765\uff0c\u6211\u4eec\u53ef\u4ee5\n\u8ba1\u7b97\u51fa\u5f53\u524d\u8be5$0$\u7684\u4f4d\u7f6e $pos$, \u82b1\u8d39\u4ee3\u4ef7\u5373\u4e3a$pos - i$\u3002  \n$k, p$\u7684\u8f6c\u79fb\u7c7b\u4f3c\u3002\n\u4f46\u662f\u73b0\u5728\u8fd9\u4e2a\u590d\u6742\u5ea6\u662f$n^4$\u7684\uff0c \u9700\u8981\u4f18\u5316\u3002  \n\n\u8003\u8651\u4f18\u5316\uff0c \u56e0\u4e3a$j + k + p = i$, \u6211\u4eec\u53ef\u4ee5\u538b\u7f29\u4e00\u7ef4\uff0c \u53d8\u6210 $f[i][j][k][0/1/2]$, \u8868\u793a\u524d$i$\u4e2a\u4f4d\u7f6e$0,1,2$\u7684\u4e2a\u6570\u5206\u522b\u4e3a$j,k,i - j - k$, \u7b2c$i$\u4f4d\n\u4e3a$0/1/2$\u7684\u6700\u5c0f\u4ee3\u4ef7\uff0c\u8f6c\u79fb\u7c7b\u4f3c\uff0c\u5177\u4f53\u7ec6\u8282\u8bf7\u5eb7\u4ee3\u7801\u3002\n```cpp\n#include<bits/stdc++.h>\n#define reg register\n#define maxn 405\nusing namespace std;\nint n, sum[3][maxn], dp[2][maxn][maxn][3], R, G, Y, id[maxn], now, pos, ans, f[3][maxn];\nchar s[maxn];\nint main() {\n    cin >> n; scanf(\"%s\", s + 1);\n    for(int i = 1; i <= n; i++) {\n        if(s[i] == 'R') sum[0][++R] = i; f[0][i] = f[0][i - 1] + (s[i] == 'R');\n        if(s[i] == 'G') sum[1][++G] = i; f[1][i] = f[1][i - 1] + (s[i] == 'G');\n        if(s[i] == 'Y') sum[2][++Y] = i; f[2][i] = f[2][i - 1] + (s[i] == 'Y');\n        id[i] = id[i - 1] ^ 1;\n    }\n    memset(dp, 0x3f3f3f, sizeof dp);\n    dp[1][1][0][0] = sum[0][1] - 1;\n    dp[1][0][1][1] = sum[1][1] - 1;\n    dp[1][0][0][2] = sum[2][1] - 1;\n    for(int i = 2; i <= n; i++) {    \n        for(int j = 0; j <= R; j++)\n            for(int k = 0; k <= G; k++) {\n                if(i - j - k > Y) continue;\n                if(j) { \n                    pos = sum[0][j]; now = pos; now += max(0, k - f[1][pos]); now += max(0, i - j - k - f[2][pos]);  \n                    dp[id[i]][j][k][0] = min(dp[id[i]][j][k][0], dp[id[i] ^ 1][j - 1][k][1] + now - i);\n                    dp[id[i]][j][k][0] = min(dp[id[i]][j][k][0], dp[id[i] ^ 1][j - 1][k][2] + now - i);\n                }\n                if(k) {\n                    pos = sum[1][k]; now = pos; now += max(0, j - f[0][pos]); now += max(0, i - j - k - f[2][pos]); \n                    dp[id[i]][j][k][1] = min(dp[id[i]][j][k][1], dp[id[i] ^ 1][j][k - 1][0] + now - i);\n                    dp[id[i]][j][k][1] = min(dp[id[i]][j][k][1], dp[id[i] ^ 1][j][k - 1][2] + now - i);\n                }\n                    pos = sum[2][i - j - k]; now = pos; now += max(0, k - f[1][pos]); now += max(0, j - f[0][pos]);\n                    dp[id[i]][j][k][2] = min(dp[id[i]][j][k][2], dp[id[i] ^ 1][j][k][0] + now - i);\n                    dp[id[i]][j][k][2] = min(dp[id[i]][j][k][2], dp[id[i] ^ 1][j][k][1] + now - i);\n            }\n        memset(dp[id[i] ^ 1], 0x3f3f3f, sizeof dp[id[i] ^ 1]); \n    }\n    ans = min(dp[id[n]][R][G][0], dp[id[n]][R][G][1]);\n    ans = min(ans, dp[id[n]][R][G][2]); \n    if(ans >= 10000000) cout << -1 << endl;\n    else cout << ans << endl;\n}\n```\n\n",
        "postTime": 1590886942,
        "uid": 97783,
        "name": "yyxmy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6116 \u3010[JOI 2019 Final]\u305f\u306e\u3057\u3044\u305f\u306e\u3057\u3044\u305f\u306e\u3057\u3044\u5bb6\u5ead\u83dc\u5712\u3011"
    },
    {
        "content": "CYJian \u5b66\u957f\u7684 NOIP2020 \u6a21\u62df\u8d5b\u9898\uff0c\u53ea\u6709\u9898\u9762\u88ab\u9b54\u6539\u4e86\uff08\u4e0d\u8fc7\u4e5f\u662f\u642c\u82b1\u76c6\uff09\u3002\u4f46\u662f\u849f\u84bb\u8003\u573a\u53ea\u4f1a\u505a\u7279\u6b8a\u6027\u8d28 QwQ\u3002\n\n### \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u7531 `R`,`G`,`Y` \u7ec4\u6210\u7684\uff0c\u957f\u5ea6\u4e3a $n$ \u7684\u5b57\u7b26\u4e32\uff0c\u6bcf\u6b21\u53ea\u80fd\u4ea4\u6362\u76f8\u90bb\u4e24\u4e2a\u5b57\u7b26\uff0c\u95ee\u6700\u5c11\u64cd\u4f5c\u51e0\u6b21\uff0c\u80fd\u4f7f\u76f8\u90bb\u4e24\u4e2a\u5b57\u7b26\u4e0d\u540c\u3002\u82e5\u65e0\u89e3\uff0c\u8f93\u51fa `-1`\u3002\n\n### Solution\n\n$15pts$\uff1a\n\n$N\\leq 15$ \u679a\u4e3e\u672b\u72b6\u6001\u5373\u53ef\u3002\n\n$20pts$\uff1a\n\n\u8003\u8651\u7279\u6b8a\u6027\u8d28\u7684\u672b\u72b6\u6001\u53ea\u6709\u4e24\u79cd\uff1a`RGRGRG` \u548c `GRGRGR`\u3002\u53ef\u4ee5\u53d1\u73b0\u89c4\u5f8b\uff1a\u7b54\u6848\u4e3a\u6240\u6709\u4e0d\u5728\u6700\u7ec8\u4f4d\u7f6e\u4e0a\u7684 `R` \u4e0e\u6700\u8fd1\u7684\u4e0d\u5728\u4f4d\u7f6e\u4e0a\u7684 `G` \u4e2d\u95f4\u95f4\u9694\u6570 $+1$ \u4e4b\u548c\u3002\n\n$80pts$\uff1a\n\n$N\\leq 60$ \u4e0d\u80fd\u518d\u679a\u4e3e\u4e86\u8003\u8651\uff0cdp\u3002\n\n\u9996\u5148\uff0c\u80fd\u53d1\u73b0\u6027\u8d28\uff1a\n\n1. \u5f53\u4e00\u79cd\u989c\u8272\u7684\u6570\u91cf\u5927\u4e8e $\\frac{n}{2}$ \u65f6\u65e0\u89e3\u3002\n\n2. \u4ea4\u6362\u540c\u79cd\u989c\u8272\u65e0\u610f\u4e49\u3002\n\n3. **\u5047\u8bbe\u6309\u539f\u5b57\u7b26\u4e32\u7ed9\u6bcf\u4e2a\u5b57\u7b26\u7f16\u53f7\uff0c\u76f8\u540c\u5b57\u7b26\u7684\u5185\u90e8\u987a\u5e8f\u4e0d\u53d8\u3002**\n\n\u4ee4 $R\\to0,G\\to1,Y\\to2$\u3002\n\n\u8bbe $f_{i,j,k,l,0/1/2}$ \u8868\u793a\u524d $i$ \u4f4d\u4e2d\u6709 $j$ \u4e2a $0$\u3001$k$ \u4e2a $1$\u3001$l$ \u4e2a $2$ \u4e14\u7b2c $i$ \u4f4d\u4e3a $0/1/2$ \u7684\u6700\u5c0f\u4ea4\u6362\u6b21\u6570\u3002\n\n\u4ee5 $f_{i,j,k,l,0}$ \u4e3a\u4f8b\uff0c\u7531\u6027\u8d28 3 \u53ef\u77e5\uff0c\u7b2c $i$ \u4f4d\u4e0a\u7684\u8fd9\u4e2a $0$ \u4e00\u5b9a\u662f\u539f\u4e32\u7684\u7b2c $j$ \u4e2a $0$ \u79fb\u8fc7\u6765\u7684\uff0c\u5982\u679c\u6211\u4eec\u80fd\u7b97\u51fa**\u6b64\u65f6**\u539f\u4e32\u7684\u7b2c $j$ \u4e2a $0$ \u7684\u4f4d\u7f6e $w$\uff0c\u90a3\u4e48\u8f6c\u79fb\u5c31\u662f $f_{i,j,k,l,0}=\\max(f_{i-1,j-1,k,l,1},f_{i-1,j-1,k,l,2})+(w-i)$\u3002\n\n\u8003\u8651 $w$ \u600e\u4e48\u6c42\uff0c\u9996\u5148\u627e\u5230\u539f\u4e32\u4e2d\u7b2c $j$ \u4e2a $0$ \u7684\u4f4d\u7f6e $p$\uff0c\u5728\u72b6\u6001 $f_{i,j,k,l,0}$ \u65f6\uff0c\u5171\u6709 $k$ \u4e2a $1$\uff0c$l$ \u4e2a $2$\uff0c\u82e5 $p$ \u4e4b\u524d\u6709\u8db3\u591f\u7684 $1,2$ \u90a3\u4e48\u7b2c $j$ \u4e2a $0$ \u7684\u4f4d\u7f6e\u662f\u4e0d\u4f1a\u53d8\u7684\uff0c\u5426\u5219\u5219\u9700\u8981\u628a $p$ \u4e4b\u540e\u7684 $1,2$ \u524d\u79fb\uff0c\u7b2c $j$ \u4e2a $0$ \u4f1a\u88ab\u6324\u5230\u66f4\u9760\u540e\u7684\u4f4d\u7f6e\uff08\u53ef\u80fd\u8981\u7406\u89e3\u4e00\u4e0b\uff09\u3002\n\n\u6211\u4eec\u8bb0\u524d $i$ \u4f4d\u4e2d\u6709 $sum_{i,1}$ \u4e2a $1$\uff0c$sum_{i,2} $ \u4e2a $2$\uff0c\u5219 $w=p+\\max(0,k-sum_{p,1})+\\max(0,l-sum_{p,2})$\u3002\n\n$100pts$\uff1a\n\n$N\\leq 400$\uff0c\u4e0a\u9762\u7684\u72b6\u6001\u662f $O(n^4)$ \u7684\uff0c\u8003\u8651\u4f18\u5316\uff1a$l=i-j-k$ \u53ef\u4ee5\u4f18\u5316\u6389\u4e00\u7ef4\uff0c\u7136\u540e\u6eda\u52a8\u6570\u7ec4\u53ef\u4ee5\u6eda\u6389\u4e00\u7ef4\u3002\n\n\u273f\u30fd(\u00b0\u25bd\u00b0)\u30ce\u273f\u5b8c\u7ed3\u6492\u82b1\u5566\uff01\n\n### Code\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=405;\nint n,id;\nint pos[N][3],sum[N][3],c0,c1,c2;\nint f[2][N][N][3];\nchar s[N];\nint main()\n{\n\tscanf(\"%d\",&n);\n\tscanf(\"%s\",s+1);\n\tfor(int i=1;i<=n;i++) {\n\t\tif(s[i]=='R') pos[++c0][0]=i;//\u7b2c c0 \u4e2a 0 \u7684\u4f4d\u7f6e\n\t\tif(s[i]=='G') pos[++c1][1]=i;\n\t\tif(s[i]=='Y') pos[++c2][2]=i;\n\t\tsum[i][0]=sum[i-1][0]+(s[i]=='R');//\u524d i \u4f4d 0 \u7684\u6570\u91cf\n\t\tsum[i][1]=sum[i-1][1]+(s[i]=='G');\n\t\tsum[i][2]=sum[i-1][2]+(s[i]=='Y');\n\t}\n\tmemset(f,0x7f,sizeof(f));\n\tf[1][1][0][0]=pos[1][0]-1;\n\tf[1][0][1][1]=pos[1][1]-1;\n\tf[1][0][0][2]=pos[1][2]-1;\n\tfor(int i=2;i<=n;i++) {\n\t\tid=(i&1)?1:0;\n\t\tfor(int j=0;j<=c0;j++) {\n\t\t\tfor(int k=0;k<=c1;k++) {\n\t\t\t\tif(i-j-k>c2) continue;\n\t\t\t\tif(j>0) {\n\t\t\t\t\tint p=pos[j][0];\n\t\t\t\t\tint w=p+max(0,k-sum[p][1])+max(0,i-j-k-sum[p][2]);\n\t\t\t\t\tf[id][j][k][0]=min(f[id^1][j-1][k][1],f[id^1][j-1][k][2])+w-i;\n\t\t\t\t}\n\t\t\t\tif(k>0) {\n\t\t\t\t\tint p=pos[k][1];\n\t\t\t\t\tint w=p+max(0,j-sum[p][0])+max(0,i-j-k-sum[p][2]);\n\t\t\t\t\tf[id][j][k][1]=min(f[id^1][j][k-1][0],f[id^1][j][k-1][2])+w-i;\n\t\t\t\t}\n\t\t\t\tif(i-j-k>0) {\n\t\t\t\t\tint p=pos[i-j-k][2];\n\t\t\t\t\tint w=p+max(0,j-sum[p][0])+max(0,k-sum[p][1]);\n\t\t\t\t\tf[id][j][k][2]=min(f[id^1][j][k][0],f[id^1][j][k][1])+w-i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tmemset(f[id^1],0x7f,sizeof(f[id^1]));\n\t}\n\tif(n&1) {\n\t\tint ans=min(min(f[1][c0][c1][0],f[1][c0][c1][1]),f[1][c0][c1][2]);\n\t\tprintf(\"%d\",(ans<1e9)?ans:-1);\n\t}\n\telse {\n\t\tint ans=min(min(f[0][c0][c1][0],f[0][c0][c1][1]),f[0][c0][c1][2]);\n\t\tprintf(\"%d\",(ans<1e9)?ans:-1);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1667719660,
        "uid": 299865,
        "name": "tytyty",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6116 [JOI 2019 Final]\u305f\u306e\u3057\u3044\u305f\u306e\u3057\u3044\u305f\u306e\u3057\u3044\u5bb6\u5ead\u83dc\u5712"
    },
    {
        "content": "**sol of P6116**\n\n\u8003\u8651\u82e5\u786e\u5b9a\u6700\u7ec8\u5e8f\u5217\uff0c\u600e\u4e48\u4ea4\u6362\u4f7f\u5f97\u82b1\u8d39\u6700\u5c0f\u3002\n\n\u663e\u7136\u6211\u4eec\u5c06\u6700\u7ec8\u5e8f\u5217\u7684\u4f4d\u7f6e\u5bf9\u7167\u4e09\u4e2a\u989c\u8272\u7684\u539f\u672c\u4f4d\u7f6e\u4ece\u5c0f\u5230\u5927\u91cd\u65b0\u6807\u53f7\u7136\u540e\u505a\u5192\u6ce1\u6392\u5e8f\u662f\u82b1\u8d39\u6700\u5c0f\u7684\uff0c\u56e0\u4e3a\u82e5\u4e0d\u4ece\u5c0f\u5230\u5927\u663e\u7136\u4e0d\u4f18\uff0c\u5192\u6ce1\u6392\u5e8f\u5df2\u88ab\u8bc1\u660e\u662f\u8be5\u64cd\u4f5c\u4e0b\u6700\u5c0f\u82b1\u8d39\u7684\u4e00\u79cd\u65b9\u6848\u3002\n\n\u8003\u8651\u8fd9\u6837\u64cd\u4f5c\u4e0b\u4efb\u610f\u989c\u8272\u95f4\u7684\u76f8\u5bf9\u4f4d\u7f6e\u4e0d\u4f1a\u53d8\u5316\uff0c\u56e0\u4e3a\u4ea4\u6362\u76f8\u540c\u989c\u8272\u80af\u5b9a\u6d6a\u8d39\u4e86\u64cd\u4f5c\u3002\n\n\u8bbe $dp_{i,sm_0,sm_1,sm_2,op=0/1/2}$ \u8868\u793a\u524d $i$ \u4e2a\u6570\u6709 $sm_0$ \u4e2a $0$\uff0c$sm_1$ \u4e2a $1$\uff0c$sm_2$ \u4e2a $2$ \u4e14\u7b2c $i$ \u4f4d\u662f $0/1/2$ \u7684\u6700\u5c0f\u82b1\u8d39\u3002\n\n\u5192\u6ce1\u6392\u5e8f\u65f6\u6211\u4eec\u5bf9\u4e8e\u4f4d\u7f6e\u662f\u4ece\u524d\u5f80\u540e\u4f9d\u6b21\u586b\uff0c\u6240\u4ee5\u5728\u8fd9\u91cc\u6211\u4eec\u6548\u4eff\u5192\u6ce1\u6392\u5e8f\u5373\u53ef\u3002\u627e\u5230\u5f53\u524d\u7b2c $sm_{op}$ \u4e2a $op$ \u7684\u4f4d\u7f6e\uff0c\u663e\u7136\u5728\u5192\u6ce1\u7684\u8fc7\u7a0b\u4e2d\u975e\u94a6\u5b9a\u5411\u524d\u4ea4\u6362\u7684\u6570\u53ea\u4f1a\u4e00\u76f4\u5411\u540e\u9000\uff0c\u901a\u8fc7\u7ef4\u62a4\u539f\u672c\u5e8f\u5217\u524d\u7f00 $0,1,2$ \u4e2a\u6570\uff0c\u6211\u4eec\u5373\u53ef\u63a8\u7b97\u51fa\u5f53\u524d\u7b2c $sm_{op}$ \u4e2a $op$ \u5728\u5f53\u524d\u5e8f\u5217\u7684\u4f4d\u7f6e\uff0c\u8bbe\u4e3a $now$\u3002\n\n\u8bbe $ano_{op,0},ano_{op,1}$ \u8868\u793a\u975e $op$ \u7684\u53e6\u4e24\u79cd\u989c\u8272\u3002\n\n\u5219\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n- $dp_{i,sm_0,sm_1,sm_2,op} \\leftarrow dp_{i - 1,sm_0-[op == 0],sm_1 - [op == 1],sm_2 - [op == 2],ano_{op,0}}$\n\n- $dp_{i,sm_0,sm_1,sm_2,op} \\leftarrow dp_{i - 1,sm_0-[op == 0],sm_1 - [op == 1],sm_2 - [op == 2],ano_{op,1}}$\n\n\u4e24\u8005\u53d6\u6700\u5c0f\u503c\u3002\n\n\u5c06 $sm2$ \u8868\u793a\u6210 $i - sm_0 - sm_1$\uff0c\u82e5\u8fd8\u8fc7\u4e0d\u4e86\u5c31\u6eda\u52a8\u6570\u7ec4\uff0c\u5373\u53ef\u65f6\u95f4\u590d\u6742\u5ea6 $O(n ^ 3)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n ^ 2)$ \u901a\u8fc7\u6b64\u9898\u3002\n\n```cpp\n#include \"bits/stdc++.h\"\nusing namespace std;\nconst int Len = 405;\nint n,m,dp[2][Len][Len][3];//dp_{i,j,k,p,0/1/2}\nchar s[Len];int a[Len];\nint pos[3][Len],num[3],sum[3][Len],ano[3][2];\ninline int Iabs(int x){if(x < 0) x = -x;return x;}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tano[0][0] = 1 , ano[0][1] = 2 , ano[1][0] = 0 , ano[1][1] = 2 , ano[2][0] = 0 , ano[2][1] = 1;\n\tscanf(\"%s\",s + 1);\n\tfor(int i = 1 ; i <= n ; i ++) \n\t{\n\t\tif(s[i] == 'R') a[i] = 0;\n\t\telse if(s[i] == 'G') a[i] = 1;\n\t\telse if(s[i] == 'Y') a[i] = 2;\n\t}\n\tfor(int i = 1 ; i <= n ; i ++) \n\t{\n\t\tpos[a[i]][++ num[a[i]]] = i;\n\t\tfor(int j = 0 ; j <= 2 ; j ++) sum[j][i] = sum[j][i - 1] + (a[i] == j);\n\t}\n\tif(max(num[0] , max(num[1] , num[2])) > (n + 1) / 2) return puts(\"-1\") & 0;\n\tint ans = n * n + 1;\n\tfor(int i = 0 ; i <= 1 ; i ++)\n\t\tfor(int j = 0 ; j <= n ; j ++) \n\t\t\tfor(int k = 0 ; k <= n ; k ++)\n\t\t\t\tfor(int op = 0 ; op <= 2 ; op ++) dp[i][j][k][op] = n * n + 1;\n\tdp[0][0][0][0] = dp[0][0][0][1] = dp[0][0][0][2] = 0;\n\tfor(int i = 1 ; i <= n ; i ++) \n\t\tfor(int op = 0 ; op <= 2 ; op ++)\n\t\t{\n\t\t\tint sm[3];sm[0] = sm[1] = sm[2] = 0;\n\t\t\tfor(sm[0] = 0 ; sm[0] <= num[0] && sm[0] <= i ; sm[0] ++)\n\t\t\t\tfor(sm[1] = 0 ; sm[0] + sm[1] <= i && sm[1] <= num[1] ; sm[1] ++)\n\t\t\t\t{\n\t\t\t\t\tsm[2] = i - sm[0] - sm[1];\n\t\t\t\t\tif(sm[2] > num[2]) continue;\n\t\t\t\t\tif(!sm[op]) continue;\n\t\t\t\t\tint now = pos[op][sm[op]] , ad = 0;\n\t\t\t\t\tfor(int j = 0 ; j <= 1 ; j ++) ad += max(0 , sm[ano[op][j]] - sum[ano[op][j]][now]);\n\t\t\t\t\tnow += ad;\n\t\t\t\t\tdp[i & 1][sm[0]][sm[1]][op] = min(dp[(i - 1) & 1][sm[0] - (op == 0)][sm[1] - (op == 1)][ano[op][0]] , dp[(i - 1) & 1][sm[0] - (op == 0)][sm[1] - (op == 1)][ano[op][1]]) + Iabs(now - i); \n\t\t\t\t\tif(i == n) ans = min(ans , dp[i & 1][sm[0]][sm[1]][op]);\n\t\t\t\t}\n\t\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1671943126,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u5373\u4f7f\u5386\u7ecf\u5343\u79cb\u4e07\u4ee3 \u4eba\u4e4b\u672c\u6027 \u4ea6\u4e98\u53e4\u4e0d\u53d8 \u8da3\u5473\u975e\u5e38"
    },
    {
        "content": "### 1. $n \\leq 15$\n\n\u8303\u56f4\u5f88\u5c0f\uff0c \u8003\u8651\u66b4\u529b\u3002\n\u6700\u591a\u53ea\u6709 $3^{15}$ \u72b6\u6001\uff0c$bfs$ \u53ef\u505a\n\n[bfs](https://www.luogu.com.cn/paste/vzk7eg2x)\n\n### 2. \u5b57\u7b26\u4e32\u4ec5\u5305\u542b $R$ , $G$\n\n\u672b\u72b6\u6001\u53ea\u6709\u4e24\u79cd\uff0c\u7ea2\u8272\u4e3a\u7b2c\u4e00\u4e2a\u6216\u8005\u7eff\u8272\u4e3a\u7b2c\u4e00\u4e2a\n\n\u4e24\u79cd\u76f8\u540c\u989c\u8272\u4ea4\u6362\u6ca1\u6709\u610f\u4e49\uff0c \u8003\u8651\u5148\u56fa\u5b9a\u4e00\u79cd\u72b6\u6001\uff0c \u53ea\u7ef4\u62a4\u4e00\u79cd\u989c\u8272\uff0c\u8d2a\u5fc3\u3002\u5f53\u4e00\u79cd\u989c\u8272\u5f52\u4f4d\uff0c \u53e6\u4e00\u79cd\u989c\u8272\u4e5f\u5b8c\u6210\n\n\u8bbe $R$ \u7684\u4e2a\u6570\u4e3a $cntR$, G \u7684\u4e2a\u6570\u4e3a $cntG$, \u82e5 $cntR - cntG > 1$, \u65e0\u89e3\n\n### 3. $n \\leq 400$\n\u663e\u7136\u4e0d\u80fd\u679a\u4e3e\u672b\u72b6\u6001\u3002\u8003\u8651\n$dp$\u3002\n\n\u8bbe $0$ \u8868\u793a 'R', $1$ \u8868\u793a 'G', $2$ \u8868\u793a 'Y', \n\n\u6734\u7d20\u72b6\u6001 $f[i][j][k][l][0/1/2]$ \u8868\u793a\u524d $i$ \u4e2a\u4f4d\u7f6e\u4e0a $0,1,2$ \u7684\u4e2a\u6570\u5206\u522b\u4e3a $j,k,l$\uff0c\u4e14\u7b2c $i$ \u4f4d\u4e0a\u7684\u989c\u8272\u4e3a 0/1/2 \u7684\u9006\u5e8f\u5bf9\u6570\uff0c\u663e\u7136\u6700\u5c0f\u79fb\u52a8\u6b65\u6570\u7b49\u4e8e\u9006\u5e8f\u5bf9\u6570\u3002\n\n\u6839\u636e\u540c\u8272\u4ea4\u6362\u65e0\u610f\u4e49\uff0c \u53ef\u77e5\u4ea4\u6362\u540e\u5c40\u9762\u540c\u8272\u4e4b\u95f4\u76f8\u5bf9\u4f4d\u7f6e\u4e0d\u53d8\n\n\u5982\u679c\u7b2c $i$ \u4f4d\u662f $0$, \u663e\u7136\u5e94\u4ece\u5e8f\u5217\u4e0a\u7b2c $j$ \u4e2a $0$ \u8f6c\u79fb\u8fc7\u6765\u3002\u5982\u679c $i$\uff0c \u524d\u9762\u7684 $1$ \u6216 $2$\uff0c\u4e0d\u8db3 k/l \u4e2a\uff0c\u4ea4\u6362\u65f6\u9700\u8981\u540e\u9762\u4ea4\u6362\u8fc7\u6765\u3002\n\n\u56e0\u4e3a $j + k + l = i$, \u53ef\u4ee5\u4f18\u5316\u72b6\u6001\uff0c\u4e3a$f[i][j][k][0/1/2]$\u3002\n\n```cpp\n/*\n * @Autor: suiqingying\n * @Date: 2020-11-17 21:08:41\n * @LastEditors: suiqingying\n * @LastEditTime: 2020-11-18 11:19:43\n */\n#include <bits/stdc++.h>\ninline int read() {\n    int x = 0, f = 1;\n    char c = getchar();\n    while (!isdigit(c)) {\n        if (c == '-')\n            f = -1;\n        c = getchar();\n    }\n    while (isdigit(c)) {\n        x = x * 10 + c - '0', c = getchar();\n    }\n    return x * f;\n}\nconst int maxn = 401;\nint n, cnt[3], w[3][maxn], sum[3][maxn];\nint f[2][maxn][maxn][3];\ninline int calc(int x, int y, int z, int c) {\n    int pos,ans=0;\n    if (c == 0)\n        pos = w[0][x + 1],ans-=std::max(0, sum[0][pos-1] - x);\n    if (c == 1)\n        pos = w[1][y + 1],ans-=std::max(0, sum[1][pos-1] - y);\n    if (c == 2)\n        pos = w[2][z + 1],ans-=std::max(0, sum[2][pos-1] - z);\n    pos--;\n    ans += std::max(0, sum[0][pos] - x) + std::max(0, sum[1][pos] - y) + std::max(0, sum[2][pos] - z);\n    return ans;\n}\nint main() {\n    int n = read();\n    for (int i = 1; i <= n; ++i) {\n        char ch = getchar();\n        while (ch != 'R' && ch != 'G' && ch != 'Y') {\n            ch = getchar();\n        }\n        int c = ch == 'R' ? 0 : ch == 'G' ? 1 : 2;\n        w[c][++cnt[c]] = i;\n        sum[0][i] = sum[0][i - 1], sum[1][i] = sum[1][i - 1], sum[2][i] = sum[2][i - 1];\n        sum[c][i]++;\n    }\n    if (cnt[0] > (n + 1) / 2 || cnt[1] > (n + 1) / 2 || cnt[2] > (n + 1) / 2) {\n        puts(\"-1\");\n        return 0;\n    }\n    for (int i = 0; i <= n; ++i) {\n        for (int j = 0; j <= n; ++j) {\n            f[1][i][j][0] = f[1][i][j][1] = f[1][i][j][2] = 0x3f3f3f3f;\n            f[0][i][j][0] = f[0][i][j][1] = f[0][i][j][2] = 0x3f3f3f3f;\n        }\n    }\n    if (cnt[0])\n        f[1][1][0][0] = w[0][1] - 1;\n    if (cnt[1])\n        f[1][0][1][1] = w[1][1] - 1;\n    if (cnt[2])\n        f[1][0][0][2] = w[2][1] - 1;\n    for (int i = 2; i <= n; ++i) {\n        for (int j = 0; j <= std::min(i, cnt[0]); ++j) {\n            for (int k = std::max(0, i - j - cnt[2]); j + k <= i && k <= cnt[1]; ++k) {\n                if (j) {\n                    f[i & 1][j][k][0] = std::min(f[i & 1 ^ 1][j - 1][k][1], f[i & 1 ^ 1][j - 1][k][2]) +\n                                        calc(j - 1, k, i - j - k, 0);\n                }\n                if (k) {\n                    f[i & 1][j][k][1] = std::min(f[i & 1 ^ 1][j][k - 1][0], f[i & 1 ^ 1][j][k - 1][2]) +\n                                        calc(j, k - 1, i - j - k, 1);\n                }\n                if (i - j - k) {\n                    f[i & 1][j][k][2] =\n                        std::min(f[i & 1 ^ 1][j][k][0], f[i & 1 ^ 1][j][k][1]) + calc(j, k, i - j - k - 1, 2);\n                }\n            }\n        }\n    }\n    int ans = std::min(std::min(f[n & 1][cnt[0]][cnt[1]][0], f[n & 1][cnt[0]][cnt[1]][1]),\n                       f[n & 1][cnt[0]][cnt[1]][2]);\n    printf(\"%d\\n\", ans);\n    return 0;\n}",
        "postTime": 1605679468,
        "uid": 104006,
        "name": "\u968f\u60c5\u82f1",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P6116 \u3010[JOI 2019 Final]\u305f\u306e\u3057\u3044\u305f\u306e\u3057\u3044\u305f\u306e\u3057\u3044\u5bb6\u5ead\u83dc\u5712\u3011"
    }
]