[
    {
        "content": "\u5bf9\u4e8e\u8fd9\u7c7b\u9898\uff08\u7c7b\u4f3c\u62ec\u53f7\u5339\u914d\uff09\uff0c\u6309\u7167\u5957\u8def\u53ef\u4ee5\u628a `C` \u770b\u6210 $1$\uff0c\u628a `T` \u770b\u6210 $-1$\uff0c\u7136\u540e\u8f6c\u5316\u9898\u610f\u3002\n\n- \u5bf9\u4e8e\u5b50\u4e32 $S$\uff0c\u6211\u4eec\u6309\u4e0a\u8ff0\u65b9\u6cd5\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u5e8f\u5217\u3002\n\n- \u8fd9\u6837\uff0c\u9650\u5236\u6761\u4ef6\u5c31\u8f6c\u53d8\u4e3a\u5e8f\u5217\u7684\u6bcf\u4e00\u4e2a\u524d\u7f00\u548c\u4ee5\u53ca\u540e\u7f00\u548c\u90fd\u975e\u8d1f\u3002\n\n- \u800c\u5bf9\u4e8e\u5220\u9664\u64cd\u4f5c\uff0c\u663e\u7136\u8981\u5220\u9664\u5b57\u7b26\u53ea\u53ef\u80fd\u5220\u53bb `T`\uff0c\u800c\u5220\u9664\u4e00\u4e2a\u5b57\u7b26\u53ef\u4ee5\u770b\u6210\u628a\u5e8f\u5217\u4e2d\u8fd9\u4e2a\u4f4d\u7f6e\u6539\u6210 $0$\u3002\n\n\u5148\u8003\u8651\u4e00\u4e2a\u7b80\u5355\u7684\u8d2a\u5fc3\uff1a\n\n- \u4ece\u5de6\u5230\u53f3\u626b\u63cf\u6574\u4e2a\u5e8f\u5217\uff0c\u5982\u679c\u524d\u7f00\u548c\u4e3a\u8d1f\u5c31\u628a\u8fd9\u4e2a\u4f4d\u7f6e\u7684 `T` \u5220\u6389\uff08\u663e\u7136\u8fd9\u4e2a\u4f4d\u7f6e\u4e0a\u4e00\u5b9a\u662f `T`\uff09\uff1b\n\n- \u518d\u5012\u7740\u626b\u63cf\u4e00\u904d\uff0c\u5982\u679c\u540e\u7f00\u548c\u4e3a\u8d1f\u540c\u6837\u628a\u8fd9\u4e2a\u4f4d\u7f6e\u7684 `T` \u5220\u6389\u3002\n\n- \u7531\u4e8e\u7b2c\u4e00\u904d\u626b\u63cf\u65f6\u5df2\u7ecf\u4f7f\u88ab\u5220\u6389\u7684 `T` \u7684\u4f4d\u7f6e\u5c3d\u91cf\u9760\u540e\uff0c\u8fd9\u6837\u80fd\u6700\u5927\u9650\u5ea6\u5730\u5f71\u54cd\u5230\u540e\u7f00\u548c\uff0c\u7531\u6b64\u53ef\u4ee5\u786e\u4fdd\u8d2a\u5fc3\u7684\u6b63\u786e\u6027\u3002\n\n- \u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u6709\u4e86\u4e00\u4e2a $O(nq)$ \u7684\u505a\u6cd5\uff0c\u5bf9\u6bcf\u6b21\u8be2\u95ee\u66b4\u529b\u5373\u53ef\u3002\n\n\u4e0d\u59a8\u6362\u4e2a\u65b9\u5f0f\u8003\u8651\u8fd9\u4e2a\u8d2a\u5fc3\u3002\n\n\u4e0b\u9762\u4e3a\u4fbf\u4e8e\u53d9\u8ff0\uff0c\u6211\u4eec\u8bb0\u4f4d\u7f6e $p$ \u5904\u7684\u524d\u7f00\u548c\u4e0e\u540e\u7f00\u548c\u5206\u522b\u4e3a $\\mathrm{pre}_p$ \u548c $\\mathrm{suf}_p$\uff0c\u6574\u4e2a\u5e8f\u5217\u7684\u6700\u5c0f\u524d\u7f00\u3001\u540e\u7f00\u548c\u5206\u522b\u4e3a $\\mathrm{pre}_{\\min}$ \u548c $\\mathrm{suf}_{\\min}$\u3002\n\n- \u7b2c\u4e00\u904d\u626b\u63cf\u5c31\u662f\u5bf9\u4e8e\u524d\u7f00\u548c $\\mathrm{pre}_p$ \u7b2c\u4e00\u6b21\u53d8\u4e3a $-1, -2, -3, \\ldots$ \u7684\u6bcf\u4e2a\u4f4d\u7f6e $p$ \u8fdb\u884c\u5220\u9664\u64cd\u4f5c\uff0c\u628a $[1,p]$ \u7684\u540e\u7f00\u548c\u5168\u90e8\u52a0\u4e0a $1$\uff0c\u603b\u7684\u64cd\u4f5c\u6b21\u6570\u4e3a\u6700\u5c0f\u524d\u7f00\u548c\u7684\u76f8\u53cd\u6570 $-\\mathrm{pre}_{\\min}$\uff1b\n\n- \u7b2c\u4e8c\u904d\u626b\u63cf\u5c31\u662f\u5bf9\u4e8e\u540e\u7f00\u548c $\\mathrm{suf}'_q$ \u7b2c\u4e00\u6b21\u53d8\u4e3a $-1, -2, -3, \\ldots$ \u7684\u6bcf\u4e2a\u4f4d\u7f6e $q$ \u8fdb\u884c\u5220\u9664\u64cd\u4f5c\uff0c\u603b\u7684\u64cd\u4f5c\u6b21\u6570\u4e3a\u6700\u5c0f\u540e\u7f00\u548c\u7684\u76f8\u53cd\u6570 $-\\mathrm{suf}'_{\\min}$\u3002\u6ce8\u610f\u8fd9\u91cc\u7684\u5e8f\u5217\u662f\u7b2c\u4e00\u904d\u626b\u63cf\u540e\u7684\uff0c\u6240\u4ee5 $\\mathrm{suf}$ \u7684\u53f3\u4e0a\u89d2\u52a0\u4e86\u4e00\u6487\u3002\n\n\u663e\u7136\uff0c$\\mathrm{pre}_{\\min}$ \u662f\u5bb9\u6613\u6c42\u5f97\u7684\uff08\u867d\u7136\u6700\u540e\u5b83\u88ab\u6d88\u6389\u4e86\uff09\uff0c\u73b0\u5728\u6211\u4eec\u5c1d\u8bd5\u6c42\u51fa $\\mathrm{suf}'_{\\min}$\u3002\n\n- \u8003\u8651\u4f4d\u7f6e $q$ \u5728\u7b2c\u4e00\u904d\u626b\u63cf\u65f6\u540e\u7f00\u548c\u88ab\u52a0 $1$ \u7684\u6b21\u6570\u3002\n\n  \u6839\u636e\u524d\u9762\u7684\u5206\u6790\uff0c\u5728\u603b\u5171\u7684 $-\\mathrm{pre}_{\\min}$ \u6b21\u52a0 $1$ \u4e2d\uff0c**\u6ca1\u6709**\u52a0\u5230\u4f4d\u7f6e $q$ \u7684\u6b21\u6570\u5c31\u662f\u5728 $q$ \u4e4b\u524d\u524d\u7f00\u548c\u7b2c\u4e00\u6b21\u53d8\u4e3a $-1, -2, -3, \\ldots$ \u7684\u4f4d\u7f6e\u4e2a\u6570\uff0c\u4e5f\u5c31\u662f $q$ \u4e4b\u524d\u7684\u6700\u5c0f\u524d\u7f00\u548c\u7684\u76f8\u53cd\u6570\uff0c\u5373 $-\\min_{p \\lt q} \\mathrm{pre}_p$\u3002\n\n  \u4e8e\u662f\uff0c\u4f4d\u7f6e $q$ \u540e\u7f00\u548c\u88ab\u52a0 $1$ \u7684\u6b21\u6570\u5373\u4e3a $\\min_{p \\lt q} \\mathrm{pre}_p - \\mathrm{pre}_{\\min}$\u3002\n\n- \u90a3\u4e48\uff0c\u7b2c\u4e00\u904d\u626b\u63cf\u540e\u4f4d\u7f6e $q$ \u7684\u540e\u7f00\u548c\u53d8\u6210\u4e86 $\\mathrm{suf}'_q = \\mathrm{suf}_q + \\min_{p \\lt q} \\mathrm{pre}_p - \\mathrm{pre}_{\\min}$\u3002\n\n- \u6839\u636e\u524d\u9762\u7684\u7ed3\u8bba\uff0c\u603b\u7684\u64cd\u4f5c\u6b21\u6570\u5373\u4e3a\uff1a\n\n  $-\\mathrm{pre}_{\\min}-\\mathrm{suf}'_{\\min} = -\\min (\\mathrm{pre}_{\\min} + \\mathrm{suf}'_q) = -\\min_{p \\lt q} (\\mathrm{pre}_p+\\mathrm{suf}_q)$\n\n- \u51b7\u9759\u4e00\u4e0b\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u73a9\u610f\u7528\u4eba\u8bdd\u8bf4\u5c31\u662f\uff1a\u627e\u5230\u4e00\u5bf9**\u4e0d\u91cd\u5408**\u7684\u524d\u7f00\u4e0e\u540e\u7f00\uff0c\u4f7f\u5f97\u5b83\u4eec\u7684\u548c\u6700\u5c0f\uff0c\u7b54\u6848\u5373\u4e3a\u8fd9\u4e2a\u548c\u7684\u76f8\u53cd\u6570\u3002\n  \n  \u6362\u4e00\u4e2a\u65b9\u9762\u8003\u8651\uff0c\u7528\u300c\u603b\u548c\u300d\u51cf\u53bb\u300c\u4e00\u5bf9\u4e0d\u91cd\u5408\u7684\u524d\u7f00\u4e0e\u540e\u7f00\u7684\u548c\u300d\u5f97\u5230\u7684\u662f\u300c\u5939\u5728\u8fd9\u5bf9\u524d\u7f00\u4e0e\u540e\u7f00\u4e4b\u95f4\u7684\u8fde\u7eed\u5b50\u6bb5\u7684\u548c\u300d\uff0c\u6240\u4ee5\u7b54\u6848\u53ef\u4ee5\u7b49\u4ef7\u5730\u8868\u8ff0\u4e3a\u300c\u533a\u95f4\u7684\u6700\u5927\u8fde\u7eed\u5b50\u6bb5\u548c\u300d\u51cf\u53bb\u300c\u533a\u95f4\u548c\u300d\u3002\n  \n- \u5229\u7528\u7ebf\u6bb5\u6811 / \u5e73\u8861\u6811 / \u732b\u6811 / \u4f60\u80fd\u60f3\u5230\u7684\u4efb\u4f55\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n + q \\log n)$ \u6216 $O(n \\log n + q)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n)$ \u6216 $O(n \\log n)$\uff0c\u53d6\u51b3\u4e8e\u4f60\u4f7f\u7528\u7684\u6570\u636e\u7ed3\u6784\u3002\n\n\n",
        "postTime": 1587861262,
        "uid": 37132,
        "name": "\u70ed\u8a00\u70ed\u8bed",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4786 \u3010[BalkanOI 2018 Day1]Election\u3011"
    },
    {
        "content": "\u628a $c$ \u770b\u505a $1$\n\n$t$ \u770b\u505a $-1$\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5bf9\u9898\u610f\u8fdb\u884c\u8f6c\u5316\uff0c\u53d8\u6210\u5bf9 $[l,r]$ \u533a\u95f4\uff0c\u628a\u67d0\u4e9b $-1$ \u53d8\u6210 $0$\n\n\u4f7f\u5f97\u6240\u6709\u524d\u7f00\u548c\u540e\u7f00\u548c\u90fd\u5927\u4e8e\u7b49\u4e8e $0$\n\n\u90a3\u4e48\u6709\u4e00\u4e2a\u6bd4\u8f83\u663e\u7136\u7684\u8d2a\u5fc3\u5c31\u662f\u5148\u4ece\u5de6\u5411\u53f3\u626b\uff0c\u6bcf\u5230\u524d\u7f00\u548c\u4e3a $-1$ \u5c31\u628a\u8be5\u4f4d\u7f6e\u6539\u4e3a $0$\n\n\u7136\u540e\u518d\u5012\u7740\u626b\u4e00\u904d\n\n\u8003\u8651\u7b80\u5316\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u53d1\u73b0\u6211\u4eec\u5728\u4ece\u5de6\u5411\u53f3\u626b\u7684\u8fc7\u7a0b\u4e2d\u64cd\u4f5c\u6b21\u6570\u4e3a $-\\min(pre_i)$\n\n\u64cd\u4f5c\u4f4d\u7f6e\u4e3a $pre_i$ \u7b2c\u4e00\u6b21\u53d6\u5230 $-1, -2 ...$ \u65f6\u7684\u4f4d\u7f6e\n\n\u7c7b\u4f3c\u7684\uff0c\u5bf9\u4ece\u53f3\u5f80\u5de6\u626b\u7684\u64cd\u4f5c\u6b21\u6570\u4e5f\u662f $\\min(suf'_i)$\n\n\u6839\u636e\u4e0a\u9762\u7684\u6027\u8d28\u6211\u4eec\u53ef\u4ee5\u5f97\u5230 $suf'_i = suf_i + \\min_{j < i}(pre_j)$\n\n\u90a3\u4e48\u7b54\u6848\u5c31\u662f $\\max(-pre_i - suf'i )$\n\n\u4e5f\u5c31\u662f $ -\\min_{i < j}(pre_i + suf_j)$\n\n\u90a3\u4e48\u8fd9\u4e2a\u5176\u5b9e\u662f\u533a\u95f4\u603b\u548c\u51cf\u53bb\u533a\u95f4\u6700\u5927\u5b50\u6bb5\u548c\uff0c\u7528\u7ebf\u6bb5\u6811\u53ef\u4ee5\u7b80\u5355\u7ef4\u62a4\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ninline int read(){\n    int x = 0; char c = getchar();\n    while(c < '0' || c > '9')c = getchar();\n\tdo{x = (x << 3) + (x << 1) + (c ^ 48); c = getchar();}while(c <= '9' && c >= '0');\n\treturn x;   \n}\nconst int maxn = 500005;\nint n; char c[maxn];\n\nstruct node{\n\tint pre, suf, mx, sum;\n}t[maxn << 2 | 1];\nstruct tree{\n\tvoid push_up(int x){\n\t\tint ls = x << 1, rs = x << 1 | 1;\n\t\tt[x].sum = t[ls].sum + t[rs].sum;\n\t\tt[x].pre = max(t[ls].pre, t[ls].sum + t[rs].pre);\n\t\tt[x].suf = max(t[rs].suf, t[rs].sum + t[ls].suf);\n\t\tt[x].mx = max(max(t[x].pre, t[x].suf), max(t[ls].mx, t[rs].mx));\n\t\tt[x].mx = max(t[x].mx, t[ls].suf + t[rs].pre);\n\t}\n\tvoid built(int x, int l, int r){\n\t\tif(l == r){\n\t\t\tt[x].pre = t[x].suf = t[x].sum = t[x].mx = (c[l] == 'C') ? 1 : -1; \n\t\t\tif(t[x].mx < 0)t[x].mx = 0;\n\t\t\treturn;\n\t\t}\n\t\tint mid = (l + r) >> 1;\n\t\tbuilt(x << 1, l, mid);\n\t\tbuilt(x << 1 | 1, mid + 1, r);\n\t\tpush_up(x);\n\t}\n\tnode query(int x, int l, int r, int L, int R){\n\t\tif(L <= l && r <= R)return t[x];\n\t\tint mid = (l + r) >> 1;\n\t\tif(L <= mid && R > mid){\n\t\t\tnode p = query(x << 1, l, mid, L, R);\n\t\t\tnode s = query(x << 1 | 1, mid + 1, r, L, R);\n\t\t\tnode ans;\n\t\t\tans.sum = p.sum + s.sum;\n\t\t\tans.pre = max(p.pre, p.sum + s.pre);\n\t\t\tans.suf = max(s.suf, s.sum + p.suf);\n\t\t\tans.mx = max(max(ans.pre, ans.suf), max(p.mx, s.mx));\n\t\t\tans.mx = max(ans.mx, p.suf + s.pre);\n\t\t\treturn ans;\n\t\t}\n\t\tif(L <= mid)return query(x << 1, l, mid, L, R);\n\t\treturn query(x << 1 | 1, mid + 1, r, L, R);\n\t}\n}T;\nint main(){\n\tn = read();\n\tscanf(\"%s\", c + 1);\n\tT.built(1, 1, n);\n\tint q = read();\n\tfor(int ask = 1; ask <= q; ++ask){\n\t\tint l = read(), r = read();\n\t\tnode ans = T.query(1, 1, n, l, r);\n\t\tprintf(\"%d\\n\",ans.mx - ans.sum);\n\t}\n    return 0;\n}\n```\n",
        "postTime": 1664543212,
        "uid": 291408,
        "name": "Chen_jr",
        "ccfLevel": 7,
        "title": "P4786 [BalkanOI2018]Election"
    },
    {
        "content": "[\u6b22\u8fce\u6765\u6211\u7684blog\u901b\u901b~~](https://blog.csdn.net/Dream_Lolita/article/details/87476570)\n\n~~\u5148\u5728LOJ\u4e0a\u8fc7\u4e86\u9898\uff0c\u53d1\u73b0luogu\u6709\u5c31\u6765\u6c34\u9898\u89e3\u4e86~~\n\n\u6211\u4eec\u5148\u8003\u8651\u4e00\u79cd\u6734\u7d20\u7684\u8d2a\u5fc3\uff0c\u4ee5\u4e0b\u8bbe\u7b2c$i$\u4f4d\u4e3a$\\text{C}$\u65f6$a_i=1$\uff0c\u5426\u5219$a_i=-1$\n\n\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4\uff0c\u6211\u4eec\u4ece\u524d\u5f80\u540e\u8ba1\u7b97\u524d\u7f00\u548c\uff0c\u5f53\u4e3a\u8d1f\u6570\u65f6\uff0c\u8bf4\u660e\u8fd9\u4e2a\u4f4d\u7f6e\u4e0a\u7684$\\text{T}$\u4e00\u5b9a\u8981\u53bb\u6389\uff0c\u6b64\u65f6\u6211\u4eec\u5c06\u524d\u7f00\u548c\u7f6e\u4e3a$0$\u7ee7\u7eed\u8ba1\u7b97\u3002\u7136\u540e\u518d\u5c06\u5e8f\u5217\u53cd\u8fc7\u6765\u505a\u4e00\u904d\u5373\u53ef\u3002\n\n\u8003\u8651\u6b63\u786e\u6027\uff1f\u5b9e\u9645\u4e0a\u6211\u4eec\u7b2c\u4e00\u6b21\u505a\u7684\u65f6\u5019\u64cd\u4f5c\u5c3d\u53ef\u80fd\u9760\u540e\uff0c\u56e0\u6b64\u5176\u5bf9\u4e8e\u540e\u7f00\u7684\u5f71\u54cd\u4e5f\u662f\u5c3d\u53ef\u80fd\u5927\u7684\u3002\n\n\u89c2\u5bdf\u5230\u5b9e\u9645\u4e0a\u6211\u4eec\u7b2c\u4e8c\u6b21\u64cd\u4f5c\u5b9e\u9645\u4e0a\u662f\u5728\u5c06\u67d0\u4e9b\u540e\u7f00\u548c$+1$\u540e\u5bf9\u540e\u7f00\u548c\u53d6\u4e00\u4e2a$\\text{max}$\uff0c\u5e94\u8be5\u662f\u53ef\u4ee5\u901a\u8fc7\u67d0\u79cd\u65b9\u5f0f\u4f7f\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u7684\u3002\n\n\u4e0d\u59a8\u5c06\u8be2\u95ee\u79bb\u7ebf\uff0c\u6309\u8be2\u95ee\u7684$l$\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u7136\u540e$l$\u6307\u9488\u4ece\u540e\u5f80\u524d\u626b\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a\u6808\uff1a\u5f53$a_i=-1$\uff0c\u6211\u4eec\u5c06$i$\u538b\u5165\u6808\u4e2d\uff0c\u5426\u5219\u5f39\u51fa\u6808\u9876\u3002\u8fd9\u6837\u505a\u5b9e\u9645\u4e0a\u662f\u5728\u505a\u6211\u4eec\u8d2a\u5fc3\u65f6\u524d\u7f00\u62b5\u6d88\u7684\u4e00\u4e2a\u64cd\u4f5c\u3002\n\n\u6808\u4e2d\u7684\u6240\u6709\u5143\u7d20\u5b9e\u9645\u4e0a\u90fd\u4f1a\u5bf9\u5176\u524d\u7f00\u7684\u6240\u6709\u540e\u7f00\u548c\u4ea7\u751f\u4e00\u4e2a$+1$\u7684\u8d21\u732e\u3002\n\n\u7531\u4e8e\u6211\u4eec\u7684\u8be2\u95ee\u5b9e\u9645\u4e0a\u5c31\u662f\u8981\u67e5\u8be2\u533a\u95f4\u540e\u7f00\u548c\u7684\u6700\u5c0f\u503c\uff0c\u4e0d\u59a8\u7ef4\u62a4\u4e00\u68f5\u7ebf\u6bb5\u6811\u6765\u5904\u7406\u3002\u4e8e\u662f\u6bcf\u6b21\u6211\u4eec\u5c06\u4e00\u4e2a\u6570\u538b\u5165\u6808\uff0c\u6211\u4eec\u5bf9$[1,n]$\u8fdb\u884c\u533a\u95f4$+1$\uff0c\u51fa\u6808\u65f6\u518d$-1$\u5373\u53ef\u3002\n\n\u7531\u4e8e\u6808\u8d21\u732e\u7684\u540e\u7f00\u53ef\u80fd\u4e0d\u5728\u8be2\u95ee\u533a\u95f4\u4e2d\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5728\u6808\u4e0a\u4e8c\u5206\u51fa\u6709\u591a\u5c11\u4e2a$+1$\u662f\u5bf9\u8fd9\u4e2a\u8be2\u95ee\u533a\u95f4\u6ca1\u6709\u8d21\u732e\u7684\uff0c\u5728\u6700\u540e\u7b54\u6848\u8ba1\u7b97\u4e2d\u8fd8\u8981\u8ba1\u7b97\u8fd9\u90e8\u5206\u7b54\u6848\u3002\u6216\u8005\u6211\u4eec\u76f4\u63a5\u5728\u7ebf\u6bb5\u6811\u4e0a\u8bb0\u5f55\u533a\u95f4\u7684\u540e\u7f00$+1$\u8d21\u732e\u4e86\u591a\u5c11\u6b21\u4e5f\u53ef\u4ee5\u3002\n\n\u590d\u6742\u5ea6$O((n+Q)\\log n)$\n\n\u3010\u53c2\u8003\u4ee3\u7801\u3011\n```cpp\n#include<bits/stdc++.h>\n#define fi first\n#define se second\n#define mkp make_pair\n#define pb push_back\nusing namespace std;\n\ntypedef pair<int,int> pii;\nconst int N=5e5+10,M=N*4;\nint n,Q,cnt;\nint sum[N],a[N],stk[N],ans[N];\nchar buf[N];\nvector<pii>qr[N];\n\nint read()\n{\n\tint ret=0;char c=getchar();\n\twhile(!isdigit(c)) c=getchar();\n\twhile(isdigit(c)) ret=ret*10+(c^48),c=getchar();\n\treturn ret;\n}\nvoid write(int x){if(x>9)write(x/10);putchar(x%10^48);}\nvoid writeln(int x){write(x);putchar('\\n');}\n\nstruct Segment\n{\n#define ls (x<<1)\n#define rs (x<<1|1)\n\tint t[M],s[M],c[M];//target,minsum,change times\n\tvoid pushup(int x){s[x]=min(s[ls],s[rs]);c[x]=c[ls]+c[rs];}\n\tvoid pushdown(int x)\n\t{\n\t\tif(!t[x]) return;\n\t\tt[ls]+=t[x];t[rs]+=t[x];s[ls]+=t[x];s[rs]+=t[x];t[x]=0;\n\t}\n\tvoid build(int x,int l,int r)\n\t{\n\t\tif(l==r){s[x]=sum[l];c[x]=0;return;}\n\t\tint mid=(l+r)>>1;\n\t\tbuild(ls,l,mid);build(rs,mid+1,r);\n\t\tpushup(x);\n\t}\n\tvoid update(int x,int l,int r,int L,int R,int v)\n\t{\n\t\tif(L<=l && r<=R) {s[x]+=v;t[x]+=v;return;}\n\t\tpushdown(x);\n\t\tint mid=(l+r)>>1;\n\t\tif(L<=mid) update(ls,l,mid,L,R,v);\n\t\tif(R>mid) update(rs,mid+1,r,L,R,v);\n\t\tpushup(x);\n\t}\n\tvoid updatep(int x,int l,int r,int p,int v)\n\t{\n\t\tif(l==r){c[x]+=v;return;}\n\t\tint mid=(l+r)>>1;\n\t\tpushdown(x);\n\t\tif(p<=mid) updatep(ls,l,mid,p,v);\n\t\telse updatep(rs,mid+1,r,p,v);\n\t\tpushup(x);\n\t}\n\tpii merge(const pii&a,const pii&b){return mkp(min(a.fi,b.fi),a.se+b.se);}\n\tpii query(int x,int l,int r,int L,int R)\n\t{\n\t\tif(L<=l && r<=R) return mkp(s[x],c[x]);\n\t\tpushdown(x);\n\t\tint mid=(l+r)>>1;pii res=mkp(N,0);\n\t\tif(L<=mid) res=merge(res,query(ls,l,mid,L,R));\n\t\tif(R>mid) res=merge(res,query(rs,mid+1,r,L,R));\n\t\treturn res;\n\t}\n#undef ls\n#undef rs\n}tr;\n\nint main()\n{\n#ifndef ONLINE_JUDGE\n\tfreopen(\"LOJ2710.in\",\"r\",stdin);\n\tfreopen(\"LOJ2710.out\",\"w\",stdout);\n#endif\n\tn=read();scanf(\"%s\",buf+1);\n\tfor(int i=1;i<=n;++i) a[i]=(buf[i]=='C'?1:-1);\n\tfor(int i=n;i;--i) sum[i]=sum[i+1]+a[i];\n\ttr.build(1,1,n);\n\n\tQ=read();\n\tfor(int i=1;i<=Q;++i)\n\t{\n\t\tint l=read(),r=read();\n\t\tqr[l].pb(mkp(r,i));\n\t}\n\t//for(int i=1;i<=n;++i) printf(\"%d \",sum[i]); puts(\"\");\n\tfor(int i=n;i;--i)\n\t{\n\t\tif(a[i]==1) {if(cnt) tr.update(1,1,n,1,stk[cnt],-1),tr.updatep(1,1,n,stk[cnt],-1),--cnt;}\n\t\telse tr.update(1,1,n,1,i,1),tr.updatep(1,1,n,i,1),stk[++cnt]=i;\n\t\t//printf(\"i:%d\\n\",i);\n\t\t//for(int j=1;j<=cnt;++j) printf(\"%d \",stk[j]); puts(\"\");\n\t\tfor(int j=0;j<(int)qr[i].size();++j) \n\t\t{\n\t\t\tint r=qr[i][j].fi,id=qr[i][j].se;\n\t\t\tpii tmp=tr.query(1,1,n,i,r);\n\t\t\tans[id]=tmp.se-min(0,(tmp.fi-sum[r+1]-(cnt-tmp.se)));\n\t\t\t//printf(\"%d %d %d %d %d %d %d\\n\",id,i,r,tmp.fi,tmp.se,cnt,ans[id]);\n\t\t}\n\t}\n\tfor(int i=1;i<=Q;++i) writeln(ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1550326056,
        "uid": 15438,
        "name": "Durant_Lee",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4786 \u3010[BalkanOI 2018 Day1]Election\u3011"
    },
    {
        "content": "## Solution\n\n\u4e00\u4e2a\u91cf\u6bd4\u53e6\u4e00\u4e2a\u591a , \u679c\u65ad\u9009\u62e9 $\\pm1 $ \u5e8f\u5217 .\n\n\u8bbe `C` \u4e3a $+1$ , `T` \u4e3a $-1$ .\n\n\u5206\u89e3\u6210 $3$ \u4e2a\u5b50\u95ee\u9898\u6765\u89e3\u51b3 .\n\n### \u5b50\u95ee\u9898 1\n\n\u5982\u679c\u53ea\u5173\u6ce8\u6574\u4e2a\u5e8f\u5217\u524d\u7f00 , \u5982\u4f55\u89e3\u51b3 ?\n\n\u95ee\u9898\u4e3a\u65f6\u6bcf\u4e00\u4e2a\u524d\u7f00\u90fd\u975e\u8d1f . \u597d\u529e , \u524d\u7f00\u4f1a\u4ece $0$ **\u9010\u4e2a** \u589e\u52a0\u6216\u51cf\u5c11 . \u90a3\u4e48\u6211\u4eec\u7b2c\u4e00\u6b21\u51fa\u73b0\u4e86 $-1$ \u8981\u5220\u6389\u4e00\u4e2a `T` , \u540e\u9762\u7684 $-1$ \u90fd\u89e3\u51b3\u4e86 ; \u7b2c\u4e00\u6b21\u51fa\u73b0 $-2$ \u4e5f\u8981\u5220\u6389\u4e00\u4e2a `T` , \u540e\u9762\u7684 $-2$ \u90fd\u89e3\u51b3\u4e86 ......\n\n\u4ee5\u6b64\u7c7b\u63a8 , \u7b54\u6848\u5c31\u662f $- \\text{min \\{pre}_ \\text{i} \\text{\\}}$ .\n\n### \u5b50\u95ee\u9898 2\n\n\u6269\u5c55\u5230\u5b50\u533a\u95f4 . \u7ebf\u6bb5\u6811\u7ef4\u62a4\n\n### \u5b50\u95ee\u9898 3\n\n\u540c\u65f6\u8003\u8651\u524d\u7f00\u540e\u7f00 , \u6211\u8be5\u600e\u4e48\u529e ?\n\n\u8003\u8651\u8fd8\u662f\u6309\u7167\u5b50\u95ee\u9898 $1$ \u7684\u65b9\u5f0f . \n\n\u5176\u5b9e\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e9b\u5220\u9664\u653e\u5728\u524d\u9762 , \u4f46\u6211\u4eec\u5220\u9664\u4e4b\u540e\u8fd8\u5e94\u8be5\u4ece\u540e\u5f80\u524d\u5220 . ( \u5904\u7406\u540e\u7f00 )\n\n\u8fd9\u544a\u8bc9\u6211\u4eec\u8fd9\u4e2a\u5220\u554a\u5e94\u8be5\u5c3d\u91cf\u5f80\u540e . ( \u8d2a\u5fc3 , \u5176\u5b9e\u5c31\u662f $1$ \u4e2d\u7684\u7b97\u6cd5 )\n\n\u90a3\u4e48\u7b54\u6848\u5e94\u8be5\u662f\u524d\u7f00\u6700\u5c0f\u52a0 **\u5220\u8fc7\u4ee5\u540e** \u540e\u7f00\u6700\u5c0f .\n\n\u8fd9\u4e2a\u65b0\u540e\u7f00\u6700\u5c0f\u600e\u4e48\u641e ?\n\n\u8003\u8651\u65b0\u540e\u7f00 $\\text{Suf} _\\text{i}$ .\n\n\u663e\u7136 , $i$ \u524d\u6700\u5c0f\u662f $ \\text{min \\{pre}_ \\text{j} \\text{\\}}(j<i)$ , \u4e5f\u5c31\u8bf4\u660e $i$ \u4e4b\u540e\u5220\u4e86 $ - \\text{min \\{pre}_ \\text{k} \\text{\\}} +\\text{min \\{pre}_ \\text{j} \\text{(j<i)\\}}$ \u4e2a . \n\n\u90a3\u4e48\t$\\text{Suf} _\\text{i} = \\text{suf} _\\text{i} -(- \\text{min \\{pre}_ \\text{k} \\text{\\}} +\\text{min \\{pre}_ \\text{j} \\text{(j<i)\\}})$\n\n\u7b54\u6848\u4e3a $- \\text{min \\{pre}_ \\text{i} \\text{\\}} -\\text{min \\{Suf}_ \\text{i} \\text{\\}} = - \\text{min \\{pre}_ \\text{i} + \\text{suf} _ \\text{j} (i<j)\\text{\\}}$\n\n\u7528\u4eba\u8bdd : \u6700\u5c0f\u7684\u4e0d\u76f8\u4ea4\u524d\u540e\u7f00\u548c\u7684\u76f8\u53cd\u6570 .\n\n\u8fd9\u4e2a\u4e1c\u897f\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u524d\u7f00\u6700\u5c0f , \u540e\u7f00\u6700\u5c0f , \u5168\u5c40\u548c , \u7b54\u6848\u5373\u53ef . \n\ncode :\n\n```cpp\n#include<bits/stdc++.h>\n#define ffor(i,a,b) for(int i=(a);i<=(b);i++)\n#define roff(i,a,b) for(int i=(a);i>=(b);i--)\nusing namespace std;\nconst int MAXN=5e5+10;\nstruct Segment_Tree {\n\tint lmax,rmax,sum,ans;\n}tr[MAXN<<2];\nSegment_Tree operator + (Segment_Tree A,Segment_Tree B) {\n\treturn {max({0,A.lmax,A.sum+B.lmax}),max({0,B.rmax,B.sum+A.rmax}),A.sum+B.sum,max({A.ans+B.sum,B.ans+A.sum,A.lmax+B.rmax})};\n}\nint n,q,flg[MAXN];\nvoid build(int k,int l,int r) {\n\tif(l==r) return tr[k]={max(0,flg[l]),max(0,flg[l]),flg[l],max(0,flg[l])},void();\n\tbuild(k<<1,l,(l+r>>1)),build(k<<1|1,(l+r>>1)+1,r);\n\ttr[k]=tr[k<<1]+tr[k<<1|1];\n\treturn ;\n}\nSegment_Tree query(int k,int l,int r,int x,int y) {\n\tif(x<=l&&r<=y) return tr[k];\n\tint mid=l+r>>1;\n\tif(x<=mid&&y>mid) return query(k<<1,l,mid,x,y)+query(k<<1|1,mid+1,r,x,y);\n\tif(x<=mid) return query(k<<1,l,mid,x,y);\n\treturn query(k<<1|1,mid+1,r,x,y);\n}\nint main() {\n\tios::sync_with_stdio(false),cin.tie(0),cout.tie(0);\n\tcin>>n;string S;cin>>S;\n\tffor(i,0,n-1) flg[i+1]=((S[i]=='T')?1:-1);\n\tbuild(1,1,n);\n\tcin>>q;\n\tffor(i,1,q) {\n\t\tint l,r;cin>>l>>r;\n\t\tcout<<query(1,1,n,l,r).ans<<'\\n';\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1652016035,
        "uid": 120947,
        "name": "Purslane",
        "ccfLevel": 7,
        "title": "P4786"
    }
]