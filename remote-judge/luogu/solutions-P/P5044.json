[
    {
        "content": "DP\u3002\n\n**19\u5206\u505a\u6cd5\uff1a**\n\n\u672c\u9898\u7684DP\u65b9\u7a0b\u5f88\u663e\u7136,\u5c31\u662f\u627e\u5230x \u4e3a [L,r] \u4e4b\u95f4\u7684 MAX,\u7136\u540e\n\nf[L][R] = min( f[L][x-1] + (R-x+1) \u00d7 a[x] , f[x+1][R] + (x-L+1)  \u00d7 a[x])\u3002\n\nO(n^2)\u76f4\u63a5DP,\u5c31\u80fd\u62ff\u5230\u524d\u4e24\u6863\u90e8\u5206\u5206\u4e86\u3002\n\n**100\u5206\u505a\u6cd5:**\n\n\u9996\u5148\u4f60\u5f97\u77e5\u9053\u4ec0\u4e48\u662f\u7b1b\u5361\u5c14\u6811\u3002\n\n\u660e\u786e\u4e00\u70b9: \u6bcf\u4e2a\u8282\u70b9mid\u4ee3\u8868\u4e00\u4e2a\u533a\u95f4[L,R],\u4e14mid\u4e3a**RMQ(L,R)\u5373[L,R]\u4e4b\u95f4\u7684\u6700\u5927\u503c**\n\n\u6240\u4ee5\u5728\u6253\u597dst\u8868\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5O(n)\u5efa\u51fa\u7b1b\u5361\u5c14\u6811\u3002\n\n\u4e00\u7c7b\u4e0eMin/Max\u6709\u5173\u7684\u52a8\u89c4\u65b9\u7a0b,\u5927\u591a\u53ef\u4ee5\u7528\u7b1b\u5361\u5c14\u6811\u6765\u4f18\u5316\u3002\n\n\u6211\u4eec\u628a\u6bcf\u4e2a\u8be2\u95ee(\u5229\u752819\u5206\u505a\u6cd5\u7684dp\u65b9\u7a0b)\u62c6\u6210\u4e24\u4e2a,\u8fd9\u6837**\u533a\u95f4\u6700\u5de6/\u53f3\u7aef**\u5c31\u6709\u4e00\u4e2a**\u6bd4\u5f53\u524d\u533a\u95f4\u6240\u6709\u6570\u5b57\u90fd\u5927**\u7684\u6570,\u7ffb\u8f6c\u6570\u7ec4\u540e\u53ef\u4ee5\u8f6c\u6362\u4e3a**\u53ea\u6709\u533a\u95f4\u6700\u5de6\u7aef\u5c31\u6709\u4e00\u4e2a\u6bd4\u5f53\u524d\u533a\u95f4\u6240\u6709\u6570\u5b57\u90fd\u5927\u7684\u6570**\n\n\u5efa\u51fah[]\u6570\u7ec4\u7684\u7b1b\u5361\u5c14\u6811\uff0c\u6211\u4eec\u53ea\u8981\u6c42\u51fa\u6bcf\u4e2a\u70b9i\u6240\u4ee3\u8868\u533a\u95f4[L,R]\u7684\nf[L,L] , f[L,L+1] , ... f[L,R] \u5c31\u53ef\u4ee5\u56de\u7b54\u6240\u6709\u8be2\u95ee\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u8981\u627e\u5230\u6bcf\u4e2aL(L\u4ece1\u5230n)\u6700\u5927\u7684R\u4ee5\u53ca\u5bf9\u5e94\u7684\u8282\u70b9x,\u5728\u6c42\u51fa\u8282\u70b9x\u5bf9\u5e94\u7684\u6240\u6709dp\u503c\u4e4b\u540e,\u5c31\u53ef\u4ee5\u56de\u7b54\u6240\u6709\u5bf9\u5e94\u7684\u8be2\u95ee\u4e86\u3002\n\n**\u90a3\u4e48\u95ee\u9898\u6765\u4e86,\u600e\u4e48\u6c42\u6bcf\u4e2a\u8282\u70b9\u7684\u7b54\u6848\u5462\uff1f**\n\n\u8003\u8651**\u5408\u5e76mid\u7684\u5de6\u53f3\u513f\u5b50\u7684\u7b54\u6848\u3002**\n\nf[L][L .. mid - 1]\u5df2\u7ecf\u5728\u5de6\u513f\u5b50\u4e2d\u6c42\u51fa;\n\nf[L][mid] = f[L][mid-1] + a[mid];\n\nf[L][i] **(i > mid)** = min{ **f[L][mid] + (i - mid) * a[mid]**\n, **f[mid+1][i] + (mid - L + 1) * a[mid]**\n}\n\n\u8fd9\u8c8c\u4f3c\u662fO(n^2)\u7684\uff1f\uff1f\uff1f\u600e\u4e48\u529e\uff1f\uff1f\uff1f\n\n\u6211\u4eec\u6ce8\u610f\u5230\u5bf9\u4e8e\u7b2c\u4e09\u4e2a\u65b9\u7a0b,\u9009\u62e9\u5de6\u8fb9\u7684\u5f0f\u5b50\u548c\u53f3\u8fb9\u7684\u5f0f\u5b50\u662f\u5355\u8c03\u7684\u3002\n\n\u56e0\u4e3af[mid+1][i]\u968fi\u589e\u52a0\u7684\u589e\u52a0\u91cf**\u4e0d\u4f1a\u5927\u4e8ea[mid]**\uff0c\u800cf[L][mid] + (i - mid) \u00d7 a[mid] \u968fi\u589e\u52a0\u7684\u589e\u52a0\u91cf**\u7b49\u4e8ea[mid]**,\u6240\u4ee5\u5177\u6709\u5355\u8c03\u6027\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u4e8c\u5206\u5566\uff01\n\n\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u5408\u5e76dp\u6570\u7ec4\uff0c\u6bcf\u6b21O(logn)\u67e5\u7b54\u6848,O(nlogn + qlogn).\n\n\n~~\u76f8\u4fe1\u4e00\u4e2a\u5207IOI\u9898\u7684\u4eba\u4e00\u5b9a\u4f1a\u505a\u8fd9\u79cd\u7ebf\u6bb5\u6811\u4e8c\u5206,\u5426\u5219\u8fd8\u662f\u5f03\u7597\u5427~~\n\n~~\u5ffd\u7565\u4e0a\u9762**\u5212\u6389\u7684**\u9b3c\u8bdd~~\n\n\u8fd8\u662f\u8bb2\u4e00\u4e0b\uff1a\n\n\u6211\u4eec\u7684\u7ebf\u6bb5\u6811\u53ea\u9700\u8981\u652f\u6301**\u8d4b\u503c/\u589e\u52a0\u4e00\u4e2a\u4ee5\u4e0b\u6807i\u4e3a\u81ea\u53d8\u91cf\u7684\u4e00\u6b21\u51fd\u6570ki + b**\u548c**\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206** \u7684\u64cd\u4f5c\n\n~~\u662f\u4e0d\u662f\u5f88\u7b80\u5355\u5462~~\n\nOK\uff0cIOI2018 Day2 T3,\u5b8c\uff01\n\n****\n\u6700\u540e\u603b\u7ed3\u4e00\u4e0b\uff1a\n\n1\u3001\u62c6\u5206\u8be2\u95ee\u62102\u7ec4\uff1b    \n2\u3001O(nlogn) **\u6253\u51fast\u8868**\uff1b  \n3\u3001O(n)\u5efa\u7b1b\u5361\u5c14\u6811\uff1b  \n4\u3001\u7b1b\u5361\u5c14\u6811\u4e0adp;  \n5\u3001\u7ffb\u8f6c\u6570\u7ec4,\u5bf9\u53e6\u4e00\u7ec4\u8be2\u95ee\u505aDP;     \n6\u3001\u5408\u5e76\u7b54\u6848\u5e76\u8f93\u51fa\u3002\n\n\u5177\u4f53\u7ec6\u8282\u8fd8\u662f\u770b\u4ee3\u7801\u5427\u3002\n\n\n```cpp\n#include <bits/stdc++.h>\n#define LL long long\n\nusing namespace std;\n\ninline int read(){\n    int x = 0,f = 1; char c = getchar();\n    while (c < '0' || c > '9') {if (c == '-') f = -1;c = getchar();}\n    while (c <='9' && c >='0') {x = x * 10 + c - '0';c = getchar();}\n    return x * f;\n}\n\ninline void write(LL x){\n    int k = 0;char put[40];\n    if (!x) putchar('0');\n    if (x < 0) putchar('-'),x = -x;\n    while (x)  put[++k] = (x % 10) + '0',x /= 10;\n    while (k)  putchar(put[k]),--k;\n    putchar('\\n');\n}\n\nconst LL INF = 1LL << 62,N = 750050,Q = N;\nint n,m,a[N],b[N],rk[N];\ninline bool cmp(int i,int j){ return a[i] == a[j] ? i > j : a[i] > a[j]; }\n\nint st[N][22],Log[N],Pow[22]; static int tt,xx,yy;\ninline int RMQ(int l,int r){\n    tt = Log[r-l+1],xx = st[l][tt],yy = st[r-Pow[tt]+1][tt];\n    return rk[xx] < rk[yy] ? xx : yy;\n}\nstruct Ask{int l,r,id;}q1[Q],q2[Q]; vector<Ask>q[N];\nint L,R,Mid;\nLL Ans1[Q],Ans2[Q],Ans[Q];\n\nint root,Lc[N],Rc[N];\n\nconst int NN = N<<2;\nint tp[NN]; LL val[NN],var[NN],K[NN],B[NN];\nvoid Build(int o,int l,int r){\n    tp[o] = K[o] = B[o] = 0,val[o] = var[o] = INF;\n    if (l < r){\n        int mid = l + r >> 1;\n        Build(o<<1,l,mid);\n        Build(o<<1|1,mid+1,r);\n    }\n}\ninline void SetT(int o,int l,int r,LL k,LL b){\n    tp[o] = 1,K[o] = k,B[o] = b;\n    val[o] = l * k + b,var[o] = r * k + b;\n}\ninline void AddT(int o,int l,int r,LL k,LL b){\n    tp[o] = tp[o] ? tp[o] : 2;\n    K[o] += k,B[o] += b,val[o] += l * k + b,var[o] += r * k + b;\n}\ninline void DownT(int o,int l,int r){\n    if (tp[o]){\n        int mid = l + r >> 1;\n        if (tp[o] == 1) SetT(o<<1,l,mid,K[o],B[o]),SetT(o<<1|1,mid+1,r,K[o],B[o]);\n        else AddT(o<<1,l,mid,K[o],B[o]),AddT(o<<1|1,mid+1,r,K[o],B[o]);\n        tp[o] = K[o] = B[o] = 0;\n    }\n}\n\nint ll,rr; LL kk,bb;\nvoid Set(int o,int l,int r){\n    if (ll <= l && rr >= r) SetT(o,l,r,kk,bb);\n    else{\n        DownT(o,l,r);\n        int mid = l + r >> 1;\n        if (ll <= mid) Set(o<<1,l,mid); if (rr > mid) Set(o<<1|1,mid+1,r);\n        val[o] = val[o<<1],var[o] = var[o<<1|1];\n    }\n}\nvoid Add(int o,int l,int r){\n    if (ll <= l && rr >= r) AddT(o,l,r,kk,bb);\n    else{\n        DownT(o,l,r);\n        int mid = l + r >> 1;\n        if (ll <= mid) Add(o<<1,l,mid); if (rr > mid) Add(o<<1|1,mid+1,r);\n        val[o] = val[o<<1],var[o] = var[o<<1|1];\n    }\n}\nLL Ask(int o,int l,int r,int p){\n    if (l == r) return val[o];\n    DownT(o,l,r);\n    int mid = l + r >> 1;\n    return p <= mid ? Ask(o<<1,l,mid,p) : Ask(o<<1|1,mid+1,r,p);\n}\nint _ll,_rr; LL k1,b1,b2;\nvoid Maintain(int o,int l,int r){\n    if (_ll <= l && _rr >= r){\n        if (l * k1 + b1 >= val[o] + b2){\n            AddT(o,l,r,0,b2);\n            return;\n        }\n        if (r * k1 + b1 <= var[o] + b2){\n            SetT(o,l,r,k1,b1);\n            return;\n        }\n    }\n    DownT(o,l,r);\n    int mid = l + r >> 1; \n    if (_ll <= mid) Maintain(o<<1,l,mid);\n    if (_rr > mid) Maintain(o<<1|1,mid+1,r);\n    val[o] = val[o<<1],var[o] = var[o<<1|1];\n}\n\nint tl[N],tr[N];\nvoid dfs1(int &o,int l,int r){ //\u5efa\u6811\n    if (l > r) { o = 0; return; }\n    o = RMQ(l,r);\n    tl[o] = l,tr[o] = r;\n    dfs1(Lc[o],l,o-1);\n    dfs1(Rc[o],o+1,r);\n}\nvoid dfs2(int x,bool s){ //DP\n    LL now = a[x];\n    if (Lc[x]) dfs2(Lc[x],0),now += Ask(1,1,n,x-1);\n    if (Rc[x]) dfs2(Rc[x],1);\n    ll = rr = x,kk = 0,bb = now,Set(1,1,n);\n    if (x < tr[x]){\n        _ll = x+1,_rr = tr[x];\n        k1 = a[x],b1 = now - 1LL * x * a[x],b2 = a[x] * (x - tl[x] + 1LL);\n        Maintain(1,1,n);\n    }\n    if (s)\n    for (int i = 0; i < q[tl[x]].size(); ++i) //\u56de\u7b54\u8be2\u95ee\n        Ans[q[tl[x]][i].id] = Ask(1,1,n,q[tl[x]][i].r);\n}\n\nint main(){\n    register int i,j,x,y;\n    n = read(),m = read();\n    \n    for (i = 0; i <= 21; ++i) Pow[i] = 1 << i;\n    for (i = 1; i <= n; ++i){\n        Log[i] = Log[i-1] + 1; while (Pow[Log[i]] > i) --Log[i];\n    }\n    //st\u8868\n    for (i = 1; i <= n; ++i) a[i] = read(),b[i] = i;\n    sort(b+1,b+n+1,cmp);\n    for (i = 1; i <= n; ++i) rk[b[i]] = i,st[i][0] = i;\n    for (j = 1; j <= Log[n] + 1; ++j)\n        for (i = 1; i <= n; ++i) if (i + Pow[j-1] <= n){\n            x = st[i][j-1],y = st[i + Pow[j-1]][j-1];\n            st[i][j] = rk[x] < rk[y] ? x : y;\n        }\n    //\u62c6\u8be2\u95ee\n    for (i = 1; i <= m; ++i){\n        L = read() + 1,R = read() + 1,Mid = RMQ(L,R);\n        q1[i].id = i,q1[i].l = L,q1[i].r = Mid - 1;\n        q2[i].id = i,q2[i].l = Mid + 1,q2[i].r = R;\n        Ans1[i] = 1LL * a[Mid] * (R - Mid + 1);\n        Ans2[i] = 1LL * a[Mid] * (Mid - L + 1);\n    }\n    //\u7b2c\u4e00\u7ec4\u8be2\u95ee(\u8c8c\u4f3c\u6211\u662f\u53cd\u7740\u505a\u7684,\u4e0d\u8fc7\u672c\u8d28\u4e0a\u662f\u4e00\u6837\u7684)\n    for (i = 1; i <= m; ++i) if (q2[i].l <= q2[i].r) q[q2[i].l].push_back(q2[i]);\n    Build(1,1,n);\n    dfs1(root,1,n);\n    dfs2(root,1);\n    for (i = 1; i <= m; ++i) Ans2[i] += Ans[i];\n    //\u7ffb\u8f6c\u6570\u7ec4\u505a\u7b2c\u4e8c\u7ec4\n    reverse(a+1,a+n+1);\n    reverse(rk+1,rk+n+1);\n    for (i = 1; i <= n; ++i) st[i][0] = i;\n    for (j = 1; j <= Log[n] + 1; ++j)\n        for (i = 1; i <= n; ++i) if (i + Pow[j-1] <= n){\n            x = st[i][j-1],y = st[i + Pow[j-1]][j-1];\n            st[i][j] = rk[x] < rk[y] ? x : y;\n        }\n    \n    for (i = 1; i <= n; ++i) q[i].clear();\n    for (i = 1; i <= m; ++i) if (q1[i].l <= q1[i].r){\n        swap(q1[i].l,q1[i].r);\n        q1[i].l = n - q1[i].l + 1;\n        q1[i].r = n - q1[i].r + 1;\n        q[q1[i].l].push_back(q1[i]);\n    }\n    Build(1,1,n);\n    dfs1(root,1,n);\n    dfs2(root,1);\n    for (i = 1; i <= m; ++i) Ans1[i] += Ans[i];//\u5408\u5e76\u7b54\u6848\n    for (i = 1; i <= m; ++i) write(min(Ans1[i],Ans2[i]));\n    return 0;\n}\n```",
        "postTime": 1545486323,
        "uid": 52518,
        "name": "s_r_f",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5044 \u3010[IOI2018] meetings \u4f1a\u8bae\u3011"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/zkyJuruo/p/15666789.html)\n\n\u840c\u65b0\u778e\u60f3\u4e86\u5f88\u76f4\u63a5\u7684 $\\Theta(nq)$\uff08\u5728 $\\rm Luogu$ \u4e0a\u8fc7\u4e86\uff09 \u548c\u4e00\u4e2a $\\Theta(n \\log n +q \\log^3 n)$ \uff08\u5728 $\\rm UOJ$ \u4e0a\u8fc7\u4e86\uff09\u7684\u505a\u6cd5\uff0c\u5c31\u5199\u7bc7\u9898\u89e3\u5427\u3002\n\n\u5728 $\\rm UOJ$ \u8fc7\u4e86\u7684\u505a\u6cd5\u5728 $\\rm Luogu$ \u4e0a\u8fc7\u4e0d\u53bb\u5e94\u8be5\u662f\u56e0\u4e3a $\\rm Luogu$ \u7a7a\u95f4\u5f00\u5c0f\u4e86\u3002\n\n**upd:** \u6d1b\u8c37\u7a7a\u95f4\u5f00\u5927\u4e86\uff0c\u8fc7\u4e86\uff0c\u8c22\u8c22\u7ba1\u7406\u5458\uff01~~\u4e0d\u8fc7\u7a7a\u95f4\u597d\u50cf\u5f00\u592a\u5927\u4e86\uff0c\u662f 805MB\u3002~~\n\n## \u9898\u610f\n\n> \u7ed9\u5b9a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $h$\uff0c$q$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u7ed9\u5b9a\u533a\u95f4 $[l,r]$\uff0c\u4f60\u8981\u5728 $[l,r]$ \u4e2d\u9009\u51fa\u4e00\u4e2a\u4f4d\u7f6e $x$ \u4e3e\u884c\u4f1a\u8bae\uff0c\u4f7f\u5f97 $\\sum\\limits_{l \\le i \\le r} \\max_{j \\in [\\min(i,x),\\max(i,x)]} h_j$ \u6700\u5c0f\u3002\n\n> \u6570\u636e\u8303\u56f4\uff1a$1 \\le n, q \\le 7.5 \\times 10^5$\uff0c$1 \\le h_i \\le 10^9$\u3002\n\n## \u9898\u89e3\n\n\u9996\u5148\u8003\u8651\u66b4\u529b\u600e\u4e48\u505a\uff1a\u6bcf\u6b21\u627e\u5230\u533a\u95f4\u4e2d\u7684 $\\rm max$\uff0c\u7136\u540e\u679a\u4e3e\u662f\u628a\u4f1a\u8bae\u4e22 $\\rm max$ \u7684\u5de6\u8fb9\u8fd8\u662f\u4e22\u53f3\u8fb9\u5373\u53ef\uff0c\u95ee\u9898\u5c31\u88ab\u5206\u6210\u4e86\u4e24\u534a\u3002\n\n\u8003\u8651\u4f18\u5316\uff0c\u5148\u627e\u5230\u6574\u4e2a\u533a\u95f4\u7684\u6700\u5927\u503c\uff0c\u7136\u540e\u628a\u95ee\u9898\u5207\u6210\u4e24\u534a\u3002\u4e0d\u59a8\u8003\u8651\u5de6\u8fb9\u90a3\u4e00\u534a\u600e\u4e48\u505a\u3002\n\n\u8003\u8651\u5148\u5efa\u51fa\u5de6\u8fb9\u90a3\u534a\u7684\u5355\u8c03\u6808\u3002\u8bbe\u6808\u4e2d\u5143\u7d20\u4e3a $S_1,S_2,S_3,...,S_k$\u3002\n\n\u5176\u4e2d $h_{S_i} \\le h_{S_{i+1}}$\uff0c$S_1 = l$\uff0c$S_k = r$\u3002\n\n\u679a\u4e3e\u6211\u4eec\u9009\u62e9\u7684\u4f1a\u8bae\u5904\u4e8e\u6808\u4e2d\u54ea\u4e24\u4e2a\u5143\u7d20\u4e4b\u95f4\u3002\u5047\u8bbe\u8bbe\u5728 $[S_x,S_{x+1})$ \u4e2d\u3002\n\n\u90a3\u4e48\uff1a\n\n1. $[l,S_x)$ \u7684\u8d21\u732e\u5747\u4e3a $h_{S_x}$\u3002\n2. $[S_{x+1},r)$ \u4e2d\u4e00\u4e2a\u5143\u7d20\u7684\u8d21\u732e\u53ea\u548c\u8be5\u5143\u7d20\u5728\u6808\u4e2d\u54ea\u4e24\u4e2a\u5143\u7d20\u4e4b\u95f4\u6709\u5173\u3002\n3. \u7531\u4e8e $x+1$ \u662f $x$ \u540e\u9762\u7b2c\u4e00\u4e2a\u503c $> h_x$ \u7684\u5143\u7d20\uff0c\u56e0\u6b64 $[S_x,S_{x+1})$ \u4e2d\u5143\u7d20\u7684\u8d21\u732e\u53ef\u4ee5\u9884\u5904\u7406\uff08\u627e\u5230 $(S_x,S_{x+1})$ \u4e2d\u7684\u6700\u5927\u503c\uff0c\u7136\u540e\u53ef\u4ee5\u9012\u5f52\u6210\u5f62\u5f0f\u76f8\u540c\u7684\u5b50\u95ee\u9898\uff09\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u4f1a $\\Theta(nq)$ \u4e86\u3002\n\n\u76f4\u63a5\u5199\u662f\u8fc7\u4e0d\u53bb\u7684\u3002\u6211\u4eec\u9884\u5904\u7406\u51fa $fa_i$ \u4e3a $i$ \u540e\u7b2c\u4e00\u4e2a $> h_i$ \u7684\u5143\u7d20\u3002\n\n\u7136\u540e\u4ece $l$ \u5f00\u59cb\u66b4\u529b\u8df3 $fa$ \u8df3\u5230 $r$ \u5c31\u8fc7\u4e86\u3002\n\n[$n^2$ \u8fc7\u767e\u4e07\uff0c\u66b4\u529b\u78be\u6807\u7b97\uff01](https://www.luogu.com.cn/record/64596217)\n\n\u89c2\u5bdf\u6211\u4eec\u7684\u66b4\u529b\u662f\u600e\u4e48\u5b8c\u6210\u7684\uff1a\u5176\u5b9e\u662f\u6c42\u4e86\u6811\u4e0a\u4e00\u6761\u94fe\u7684 $\\max(k_ix+b_i)$\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u6811\u5256\uff0c\u8f6c\u5316\u4e3a\u5e8f\u5217\u4e0a\u533a\u95f4 $\\max(k_ix+b_i)$\u3002\u5efa\u9897\u7ebf\u6bb5\u6811\uff0c\u6bcf\u4e2a\u7ebf\u6bb5\u6811\u4e0a\u7684\u8282\u70b9 $[L,R]$ \u7ef4\u62a4\u4e00\u9897\u674e\u8d85\u6811\u5373\u53ef\u3002\n\n\u4e3a\u4e86\u4f18\u5316\u590d\u6742\u5ea6\uff0c$[L,R]$ \u4e0a\u7684\u674e\u8d85\u6811\u53ef\u4ee5\u7528 $[L,mid]$ \u548c $(mid+1,R]$ \u7684\u674e\u8d85\u6811\u5408\u5e76\u3002\n\n\u5176\u5b9e\u53ef\u4ee5\u7528 [XJOI4182](https://xjoi.net/contest/1712/problem/2) \u7684\u5957\u8def\u4f18\u5316\u5230 $\\Theta(n \\log n + q \\log^2 n)$~~\uff0c\u4e0d\u8fc7\u6211\u61d2\u5c31\u6ca1\u5199~~\u3002\n\n[aclink](https://uoj.ac/submission/519892)\n\n\u611f\u89c9\u8fd9\u79cd\u601d\u8def\u4e5f\u662f\u53ef\u4ee5\u518d\u4f18\u5316\u7684\uff0c\u6bd5\u7adf\u94fe\u4e0a\u7684\u5143\u7d20\u662f\u6709\u5355\u8c03\u6027\u7684\u3002\n\n**\u795d\u5927\u5bb6\u5b66\u4e60\u6109\u5feb\uff01**",
        "postTime": 1639027999,
        "uid": 173660,
        "name": "zhoukangyang",
        "ccfLevel": 0,
        "title": "IOI2018 meetings"
    },
    {
        "content": "\u5b89\u5229\u4e00\u4e0b\u535a\u5ba2[\u6211\u7684\u535a\u5ba2](https://www.cnblogs.com/Khada-Jhin/)\n\n\u8fd8\u662f\u6309\u7167\u7f16\u53f7\u90fd\u4ece1\u5f00\u59cb\u8bb2\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee\u5982\u679c\u786e\u5b9a\u4e86\u5f00\u4f1a\u5730\u5740\u90a3\u4e48\u7b54\u6848\u53ea\u548c\u6bcf\u4e2a\u70b9\u5230\u5f00\u4f1a\u70b9\u533a\u95f4\u6700\u5927\u503c\u6709\u5173\u3002\n\n\u800c\u9898\u76ee\u53c8\u6ca1\u6709\u5f3a\u5236\u5728\u7ebf\uff0c\u6211\u4eec\u53ef\u4ee5\u6309\u533a\u95f4\u6700\u5927\u503c\u6765\u5206\u6cbb\u3002\n\n\u6211\u4eec\u8bbe\u5bf9\u4e8e\u533a\u95f4[l,r]\u7684\u7b54\u6848\u662fans(l,r)\uff0c\u533a\u95f4\u4e2d\u7684\u6700\u5927\u503c\u4f4d\u4e8emid\u5904(\u5373h[mid]\u662f\u533a\u95f4\u6700\u5927\u503c)\u3002\n\n\u90a3\u4e48\u663e\u7136\u7b54\u6848\u9009\u5b9a\u7684\u5f00\u4f1a\u70b9\u4e00\u5b9a\u5728mid\u7684\u5de6\u4fa7\u6216\u53f3\u4fa7\uff0cans(l,r)=min{ans(l,mid-1)+h[mid]*(r-mid+1),ans(mid+1,r)+h[mid]*(mid-l+1)}\u3002\n\n\u5373\u5982\u679c\u5f00\u4f1a\u70b9\u5728mid\u5de6\u8fb9\u90a3\u4e48mid\u53ca\u53f3\u8fb9\u6240\u6709\u70b9\u5230\u5f00\u4f1a\u70b9\u7684\u4ee3\u4ef7\u90fd\u662fh[mid]\uff0c\u5982\u679c\u5f00\u4f1a\u70b9\u5728mid\u53f3\u8fb9\u90a3\u4e48mid\u53ca\u5de6\u8fb9\u6240\u6709\u70b9\u5230\u5f00\u4f1a\u70b9\u7684\u4ee3\u4ef7\u90fd\u662fh[mid]\u3002\n\n\u56e0\u6b64\uff0cans(l,r)\u8981\u7531ans(l,mid-1)\u4e0eans(mid+1,r)\u5408\u5e76\u800c\u6765\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a\u4e00\u4e2a\u5927\u81f4\u601d\u8def\uff1a\u627e\u51fa\u5f53\u524d\u533a\u95f4\u6700\u5927\u503c\u4f4d\u7f6e\u7136\u540e\u5206\u6cbb\u5de6\u53f3\u533a\u95f4\uff0c\u5728\u5f97\u51fa\u5de6\u53f3\u533a\u95f4\u7684\u7b54\u6848\u4e4b\u540e\u518d\u5904\u7406\u8be2\u95ee\u533a\u95f4\u6700\u5927\u503c\u662f\u5f53\u524d\u533a\u95f4\u6700\u5927\u503c\u7684\u8be2\u95ee\uff0c\u7136\u540e\u518d\u9012\u5f52\u56de\u4e0a\u4e00\u4e9b\u5c42\u3002\n\n \u533a\u95f4\u6700\u5927\u503c\u5f88\u597d\u6c42\uff0c\u7528ST\u8868\u7ef4\u62a4\u4e00\u4e0b\u5373\u53ef\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e2a\u533a\u95f4\u7684ans\u600e\u4e48\u7ef4\u62a4\uff1f\n\n\u5bf9\u4e8e\u5de6\u7aef\u70b9\u4e3al\u7684\u533a\u95f4\u96be\u9053\u8981\u540c\u65f6\u7ef4\u62a4\u51faans(l,l),ans(l,l+1),ans(l,l+2)\u2026\u2026\u5417\uff1f\n\n\u663e\u7136\u5e76\u4e0d\u9700\u8981\uff0c\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u9012\u5f52\u7684\u533a\u95f4[l,r]\uff0c\u9700\u8981\u7528\u5230\u5de6\u7aef\u70b9\u4e3al\u7684ans\u53ea\u6709ans(l,mid-1)\u548cans(l,r)\u3002\n\n\u5176\u4e2d\u524d\u8005\u5bf9\u5e94\u5904\u7406\u5f53\u524d\u5c42\u8be2\u95ee\u524d\u9012\u5f52\u5408\u5e76\u4e0a\u6765\u7684\u7b54\u6848\uff0c\u540e\u8005\u5219\u5bf9\u5e94\u5904\u7406\u5b8c\u5f53\u524d\u5c42\u8be2\u95ee\u540e\u9700\u8981\u9012\u5f52\u5408\u5e76\u4e0a\u53bb\u7684\u7b54\u6848\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\u5bf9\u4e8e\u4e00\u4e2a\u70b9x\uff0c\u5728\u540c\u4e00\u65f6\u523b\u53ea\u9700\u8981\u7ef4\u62a4\u5b83\u4f5c\u4e3a\u4e00\u4e2a\u533a\u95f4\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\u65f6\u8fd9\u4e24\u4e2a\u7b54\u6848\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u6765\u5b9e\u73b0\uff0c\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u4e0a\u6bcf\u4e2a\u53f6\u5b50\u7ed3\u70b9\u7ef4\u62a4lm\u548crm\u4e24\u4e2a\u4fe1\u606f\uff0c\u5206\u522b\u8868\u793a\u8fd9\u4e2a\u70b9\u662f\u533a\u95f4\u5de6/\u53f3\u7aef\u70b9\u65f6\u7684\u533a\u95f4\u7b54\u6848\u3002\n\n\u56e0\u4e3a\u6211\u4eec\u4e0d\u77e5\u9053\u5bf9\u4e8e\u5f53\u524d\u9012\u5f52\u533a\u95f4[l,r]\u9012\u5f52\u56de\u4e0a\u4e00\u5c42\u65f6\u662f\u5728\u4e0a\u4e00\u5c42\u6700\u5927\u503c\u7684\u5de6\u8fb9\u8fd8\u662f\u53f3\u8fb9\uff0c\u6240\u4ee5\u8981\u7528\u4e24\u68f5\u7ebf\u6bb5\u6811\u5206\u522b\u7ef4\u62a4\u8fd9\u4e24\u79cd\u60c5\u51b5\u3002\n\n\u603b\u7ed3\u4e00\u4e0b\u5927\u4f53\u601d\u8def\uff1a\u5bf9\u4e8e\u5f53\u524d\u533a\u95f4\u627e\u5230\u533a\u95f4\u6700\u5927\u503c\u4f4d\u7f6e\u5e76\u9012\u5f52\u5de6\u53f3\u5b50\u533a\u95f4\uff0c\u56de\u6eaf\u65f6\u5904\u7406\u5f53\u524d\u533a\u95f4\u9700\u8981\u5904\u7406\u7684\u8be2\u95ee\uff0c\u5bf9\u4e8e\u6bcf\u4e2aans(x,mid-1)(l<=x<=mid-1)\u66f4\u65b0\u4e3aans(x,r)\uff1b\u5bf9\u4e8e\u6bcf\u4e2aans(mid+1,x)(mid+1<=x<=r)\u66f4\u65b0\u4e3aans(l,x)\u3002\n\n\u56e0\u4e3a\u6bcf\u4e2a\u70b9\u88ab\u5f53\u505a\u533a\u95f4\u6700\u5927\u503c\u4e00\u6b21\u4e14\u6bcf\u4e2a\u8be2\u95ee\u88ab\u5904\u7406\u4e00\u6b21\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u662fO((n+q)logn)\u3002\n\n\u5982\u679c\u8fd8\u662f\u4e0d\u592a\u660e\u767d\u53ef\u4ee5\u770b\u4ee3\u7801\u7684\u5177\u4f53\u5b9e\u73b0\u3002\n\n```\n#include<set>\n#include<map>\n#include<queue>\n#include<cmath>\n#include<stack>\n#include<cstdio>\n#include<vector>\n#include<bitset>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define ll long long \nusing namespace std;\nint n,q;\nint h[750010];\nint ql[750010];\nint qr[750010];\nll res[750010];\nint f[750010][21];\nint g[750010][21];\nint ln[750010];\nvector<int>pos[750010];\nstruct miku\n{\n    ll lm[4000010];\n    ll rm[4000010];\n    ll k[4000010];\n    ll b[4000010];\n    int a[4000010];\n    void cover(int rt)\n    {\n        a[rt]=1;\n        lm[rt]=rm[rt]=k[rt]=b[rt]=0;\n    }\n    void add(int rt,int l,int r,ll K,ll B)\n    {\n        k[rt]+=K;\n        b[rt]+=B;\n        lm[rt]+=K*l+B;\n        rm[rt]+=K*r+B;\n    }\n    void pushup(int rt)\n    {\n        lm[rt]=lm[rt<<1];\n        rm[rt]=rm[rt<<1|1];\n    }\n    void pushdown(int rt,int l,int r)\n    {\n        int mid=(l+r)>>1;\n        if(a[rt])\n        {\n            a[rt]=0;\n            cover(rt<<1);\n            cover(rt<<1|1);\n        }\n        if(k[rt]||b[rt])\n        {\n            add(rt<<1,l,mid,k[rt],b[rt]);\n            add(rt<<1|1,mid+1,r,k[rt],b[rt]);\n            k[rt]=b[rt]=0;\n        }\n    }\n    void change(int rt,int l,int r,int L,int R,ll val)\n    {\n        if(L<=l&&r<=R)\n        {\n            add(rt,l,r,0,val);\n            return ;\n        }\n        int mid=(l+r)>>1;\n        pushdown(rt,l,r);\n        if(L<=mid)\n        {\n            change(rt<<1,l,mid,L,R,val);\n        }\n        if(R>mid)\n        {\n            change(rt<<1|1,mid+1,r,L,R,val);\n        }\n        pushup(rt);\n    }\n    void merge(int rt,int l,int r,int L,int R,ll K,ll B)\n    {\n        if(L<=l&&r<=R)\n        {\n            ll LV=K*l+B;\n            ll RV=K*r+B;\n            if(LV>=lm[rt]&&RV>=rm[rt])\n            {\n                return ;\n            }\n            if(LV<=lm[rt]&&RV<=rm[rt])\n            {\n                cover(rt);\n                add(rt,l,r,K,B);\n                return ;\n            }\n        }\n        pushdown(rt,l,r);\n        int mid=(l+r)>>1;\n        if(L<=mid)\n        {\n            merge(rt<<1,l,mid,L,R,K,B);\n        }\n        if(R>mid)\n        {\n            merge(rt<<1|1,mid+1,r,L,R,K,B);\n        }\n        pushup(rt);\n    }\n    ll query_left(int rt,int l,int r,int x)\n    {\n        if(l==r)\n        {\n            return lm[rt];\n        }\n        pushdown(rt,l,r);\n        int mid=(l+r)>>1;\n        if(x<=mid)\n        {\n            return query_left(rt<<1,l,mid,x);\n        }\n        else\n        {\n            return query_left(rt<<1|1,mid+1,r,x);\n        }\n    }\n    ll query_right(int rt,int l,int r,int x)\n    {\n        if(l==r)\n        {\n            return rm[rt];\n        }\n        pushdown(rt,l,r);\n        int mid=(l+r)>>1;\n        if(x<=mid)\n        {\n            return query_right(rt<<1,l,mid,x);\n        }\n        else\n        {\n            return query_right(rt<<1|1,mid+1,r,x);\n        }\n    }\n}s,t;\nint cmp(int l,int r)\n{\n    int len=ln[r-l+1];\n    if(f[l][len]>=f[r-(1<<len)+1][len])\n    {\n        return g[l][len];\n    }\n    else\n    {\n        return g[r-(1<<len)+1][len];\n    }\n}\nvoid solve(int l,int r)\n{\n    if(l>r)\n    {\n        return ;\n    }\n    int mid=cmp(l,r);\n    solve(l,mid-1);\n    solve(mid+1,r);\n    int len=pos[mid].size();\n    for(int i=0;i<len;i++)\n    {   \n        int now=pos[mid][i];\n        res[now]=1ll*h[mid]*(qr[now]-ql[now]+1);\n        if(ql[now]<mid)\n        {\n            res[now]=min(res[now],s.query_left(1,1,n,ql[now])+1ll*h[mid]*(qr[now]-mid+1));\n        }\n        if(qr[now]>mid)\n        {\n            res[now]=min(res[now],t.query_right(1,1,n,qr[now])+1ll*h[mid]*(mid-ql[now]+1));\n        }\n    }\n    ll sx=h[mid];\n    ll tx=h[mid];\n    if(l<mid)\n    {\n        tx+=t.query_right(1,1,n,mid-1);\n    }\n    if(r>mid)\n    {\n        sx+=s.query_left(1,1,n,mid+1);\n    }\n    s.change(1,1,n,mid,mid,sx);\n    t.change(1,1,n,mid,mid,tx);\n    if(l<mid)\n    {\n        s.change(1,1,n,l,mid-1,1ll*h[mid]*(r-mid+1));\n        s.merge(1,1,n,l,mid-1,-1ll*h[mid],sx+1ll*mid*h[mid]);\n    }\n    if(r>mid)\n    {\n        t.change(1,1,n,mid+1,r,1ll*h[mid]*(mid-l+1));\n        t.merge(1,1,n,mid+1,r,1ll*h[mid],tx-1ll*mid*h[mid]);\n    }\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&q);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&h[i]);\n        f[i][0]=h[i];\n        g[i][0]=i;\n    }\n    for(int i=1;i<=q;i++)\n    {\n        scanf(\"%d%d\",&ql[i],&qr[i]);\n        ql[i]++;\n        qr[i]++;\n    }\n    for(int i=2;i<=n;i++)\n    {\n        ln[i]=ln[i>>1]+1;\n    }\n    for(int j=1;j<=20;j++)\n    {\n        for(int i=1;i<=n;i++)\n        {\n            if(i+(1<<j)-1>n)\n            {\n                break;\n            }\n            f[i][j]=max(f[i][j-1],f[i+(1<<(j-1))][j-1]);\n            if(f[i][j]==f[i][j-1])\n            {\n                g[i][j]=g[i][j-1];\n            }\n            else\n            {\n                g[i][j]=g[i+(1<<(j-1))][j-1];\n            }\n        }\n    }\n    for(int i=1;i<=q;i++)\n    {\n        pos[cmp(ql[i],qr[i])].push_back(i);\n    }\n    solve(1,n);\n    for(int i=1;i<=q;i++)\n    {\n        printf(\"%lld\\n\",res[i]);\n    }\n}\n```\n",
        "postTime": 1543323532,
        "uid": 52332,
        "name": "JhinLZH",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5044 \u3010[IOI2018] meetings \u4f1a\u8bae\u3011"
    },
    {
        "content": "\u7ed9\u5b9a\u957f\u4e3a $n$ \u7684\u5e8f\u5217 $h$\uff0c\u6709 $q$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u5728 $[l,r]$ \u5185\u627e\u4e00\u4e2a\u70b9 $x$\uff0c\u4f7f\u5f97 $[l,r]$ \u5185\u6bcf\u4e2a\u70b9\u5230 $x$ \u4e4b\u95f4\u6700\u5927\u503c\u7684\u548c\uff08\u5373 $\\sum\\limits_{i=l}^x\\max\\limits_{j=i}^xh_j+\\sum\\limits_{i=x+1}^r\\max\\limits_{j=x}^ih_j$\uff09\u6700\u5c0f\u3002$n,q\\leqslant 750000,h\\leqslant 10^9$ \u3002\n\n\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u6ca1\u6709\u4ec0\u4e48\u4e00\u822c\u6027\u7ed3\u8bba\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651dp\u6c42\u89e3\u3002\n\n\u8bbe $f[l,r]$ \u4e3a $[l,r]$ \u7684\u7b54\u6848\u3002\u9996\u5148\u6211\u4eec\u6709\u4e00\u4e2a\u7ed3\u8bba\uff0c\u5f53\u533a\u95f4\u5185\u503c\u4e0d\u552f\u4e00\u65f6\uff0c\u533a\u95f4\u7684\u6700\u5927\u503c\u7684\u4f4d\u7f6e\u4e00\u5b9a\u4e0d\u4e3a\u6700\u4f18\u89e3\uff08\u56e0\u4e3a\u8fd9\u6837\u6bcf\u4e00\u4e2a\u5143\u7d20\u7684\u8d21\u732e\u90fd\u662f\u6700\u5927\u503c\uff09\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$$\nf[l,r]=\\min(f[l,mid-1]+(r-mid+1)h[mid],f[mid+1,r]+(mid-l+1)h[mid])\n$$\n\u5176\u4e2d $mid$ \u662f\u6700\u5927\u503c\u7684\u4f4d\u7f6e\uff08\u6709\u591a\u4e2a\u65f6\u4efb\u4f55\u4e00\u4e2a\u90fd\u53ef\u4ee5\uff09\u3002\u5373\u6211\u4eec\u679a\u4e3e\u6700\u4f18\u89e3\u7684\u4f4d\u7f6e\u5728\u6700\u5927\u503c\u7684\u5de6\u8fb9/\u53f3\u8fb9\u3002\u8fd9\u6837\u5c31\u6709\u4e00\u4e2a $n^2$ \u7684\u6734\u7d20\u7b97\u6cd5\u3002\n\n\u6211\u4eec\u53d1\u73b0\u8f6c\u79fb\u65b9\u7a0b\u548c\u533a\u95f4\u5185\u7684\u6700\u5927\u503c\u6709\u5173\u7cfb\uff0c\u6240\u4ee5\u6211\u4eec\u5c1d\u8bd5\u7528\u7b1b\u5361\u5c14\u6811\u6765\u4f18\u5316dp\u3002\u6211\u4eec\u5bf9\u5e8f\u5217\u5efa\u6743\u503c\u4e3a\u5927\u6839\u5806\u7684\u7b1b\u5361\u5c14\u6811\uff0c\u5e76\u4e14\u5bf9\u6bcf\u4e2a $[l,r]$ \u7684\u8be2\u95ee\u66b4\u529b\u5c55\u5f00\u4e00\u6b21\uff0c\u5373\u6c42 $f[l,mid-1]$ \u548c $f[mid+1,r]$\u3002\u8fd9\u65f6\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $f[l,mid-1]$ \u7684\u8be2\u95ee\uff0c\u90fd\u53ef\u4ee5\u627e\u5230\u4e00\u4e2a\u7b1b\u5361\u5c14\u6811\u4e2d\u7684\u70b9 $c$\uff0c\u4f7f\u5f97 $c$ \u5bf9\u5e94\u7684\u53f3\u7aef\u70b9\u4e5f\u4e3a $mid-1$\uff08\u8bc1\u660e\u53ef\u4ee5\u8003\u8651 $mid-1$ \u548c $mid$ \u7684\u4f4d\u7f6e\u5173\u7cfb\uff09\u3002\u540c\u7406\u5bf9\u4e8e\u6bcf\u4e2a $f[mid+1,r]$ \u7684\u8be2\u95ee\uff0c\u90fd\u53ef\u4ee5\u627e\u5230\u7b1b\u5361\u5c14\u6811\u4e2d\u5de6\u7aef\u70b9\u4e3a $mid+1$ \u7684\u70b9\uff08\u5982\u679c\u4e0d\u5c55\u5f00\u4e0d\u4e00\u5b9a\u80fd\u627e\u5230\u8fd9\u4e2a\u70b9\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u8981\u5c55\u5f00\u7684\u539f\u56e0\uff09\u3002\u660e\u663e\u8fd9\u4e24\u7c7b\u8be2\u95ee\u662f\u7c7b\u4f3c\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u8003\u8651\u5904\u7406 $f[mid+1,r]$ \u8fd9\u4e00\u7c7b\uff0c\u5bf9\u4e8e $f[l,mid-1]$ \u8fd9\u4e00\u7c7b\u53ef\u4ee5\u53cd\u8f6c\u6570\u7ec4\u548c\u8be2\u95ee\u4ee5\u540e\u6c42\u5f97\u3002\n\n\u6839\u636e\u4e0a\u9762\u7684\u7ed3\u8bba\uff0c\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e\u7b1b\u5361\u5c14\u6811\u4e2d\u7684\u6bcf\u4e00\u4e2a\u70b9\uff0c\u5982\u679c\u5b83\u5bf9\u5e94\u7684\u533a\u95f4\u662f $[l,r]$\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6c42\u51fa $f[l,l],f[l,l+1]\\dots f[l,r]$ \u7684\u503c\u3002\u5177\u4f53\u5730\uff0c\u5982\u679c\u8fd9\u4e2a\u8282\u70b9\u5bf9\u5e94\u7684\u70b9\u4e3a $mid$\uff0c\u6211\u4eec\u5148\u9012\u5f52\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u6c42\u51fa $f[l,l]\\dots f[l,mid-1]$ \u548c $f[mid+1,mid+1]\\dots f[mid+1,r]$ \u7136\u540e\u8003\u8651\u63a8\u51fa $f[l,mid]\\dots f[l,r]$\u3002\n\n\u8ba9\u6211\u4eec\u518d\u770b\u4e00\u904d\u8f6c\u79fb\u65b9\u7a0b\uff1a\n$$\nf[l,r]=\\min(f[l,mid-1]+(r-mid+1)h[mid],f[mid+1,r]+(mid-l+1)h[mid])\n$$\n\u5de6\u8fb9\u90e8\u5206\u968f\u7740 $r$ \u7684\u589e\u52a0\uff0c\u6bcf\u6b21\u589e\u52a0 $h[mid]$\uff0c\u53f3\u8fb9\u90e8\u5206\u968f\u7740 $r$ \u7684\u589e\u52a0\u6bcf\u6b21\u589e\u52a0\u91cf\u90fd\u5c0f\u4e8e\u7b49\u4e8e $h[mid]$\uff08\u56e0\u4e3a $h[mid]$ \u662f\u533a\u95f4\u5185\u6700\u5927\u7684\u503c\u4e86\uff09\u6240\u4ee5\u8bf4\u5982\u679c\u67d0\u4e00\u523b\u5de6\u8fb9\u7684\u503c\u5927\u4e8e\u4e86\u53f3\u8fb9\uff0c\u90a3\u4e48\u518d\u5f80\u540e\u5de6\u8fb9\u7684\u503c\u90fd\u4f1a\u5927\u4e8e\u53f3\u8fb9\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u5f53\u6211\u4eec\u5728\u7b1b\u5361\u5c14\u6811\u4e0adfs\u5b8c\u67d0\u4e2a\u70b9\u7684\u65f6\u5019\uff0c\u7ebf\u6bb5\u6811\u4e0a\u4f4d\u7f6e $r$ \u5b58\u7684\u4e1c\u897f\u5c31\u662f $f[l,r]$ \uff08$l$ \u662fdfs\u5230\u7684\u8282\u70b9\u4ee3\u8868\u533a\u95f4\u7684\u5de6\u7aef\u70b9\uff09\u3002\u6211\u4eec\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u6765\u627e\u5230\u7b2c\u4e00\u4e2a\u5de6\u8fb9>\u53f3\u8fb9\u7684\u4f4d\u7f6e\uff0c\u8bbe\u4e3a $pos$\u3002\u90a3\u4e48\u5bf9\u4e8e\u5c0f\u4e8e $pos$ \u7684\u4f4d\u7f6e\uff0c\u76f8\u5f53\u4e8e\u5148\u533a\u95f4\u8986\u76d6\u4e00\u6b21\u518d\u533a\u95f4\u52a0\u7b49\u5dee\u6570\u5217\uff08\u6362\u53e5\u8bdd\u8bf4\u5c31\u662f\u7528\u4e00\u6b21\u51fd\u6570\u8986\u76d6\uff09\uff1b\u53f3\u8fb9\u7684\u90e8\u5206\u5c31\u662f\u4e00\u4e2a\u533a\u95f4\u52a0\u4e86\u3002\n\n\u6240\u4ee5\u6211\u4eec\u7684\u7ebf\u6bb5\u6811\u9700\u8981\u652f\u6301\u533a\u95f4\u8986\u76d6\u548c\u533a\u95f4\u52a0\u7b49\u5dee\u6570\u5217\uff08\u52a0\u4e00\u4e2a\u6570\u4e5f\u662f\u7b49\u5dee\u6570\u5217\u5566\uff09\u3002\u5bf9\u4e8e\u8be2\u95ee\uff0c\u627e\u5230\u6211\u4eec\u6240\u8bf4\u7684\u90a3\u4e2a\u70b9 $c$ \u7136\u540e\u628a\u5b83\u4e22\u8fdb\u5bf9\u5e94\u7684\u6876\u91cc\uff0cdfs\u5b8c\u4e00\u4e2a\u70b9\u7684\u65f6\u5019\u8ba1\u7b97\u6240\u6709\u8be2\u95ee\u7684\u7b54\u6848\u3002\n\n\u81f3\u4e8e\u5b9e\u73b0\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u663e\u5f0f\u5730\u5efa\u51fa\u7b1b\u5361\u5c14\u6811\uff0c\u6211\u4eec\u5f00\u4e00\u4e2ast\u8868\u7136\u540edfs\u7684\u65f6\u5019\u53ea\u9700\u8981\u8bb0\u5f55\u5f53\u524d\u533a\u95f4\uff0c\u9012\u5f52\u5de6\u53f3\u513f\u5b50\u5c31\u5728st\u8868\u91cc\u67e5\u8be2\u533a\u95f4\u6700\u5927\u503c\u7684\u4f4d\u7f6e\u5c31\u53ef\u4ee5\u4e86\u3002\u81f3\u4e8e\u5982\u4f55\u628a\u8be2\u95ee\u6302\u5230\u8282\u70b9\u4e0a\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a\u5de6\u7aef\u70b9\u76f8\u540c\u7684\u8be2\u95ee\u653e\u5230\u4e00\u4e2a\u6876\u91cc\uff0c\u5f53dfs\u5230\u4e00\u4e2a\u70b9\u65f6\uff0c\u5982\u679c\u5b83\u662f\u7236\u4eb2\u7684\u53f3\u513f\u5b50\u6216\u8005\u662f\u6839\u8282\u70b9\uff0c\u90a3\u4e48\u5b83\u5c31\u662f\u6240\u6709\u4e0e\u5b83 $l$ \u76f8\u540c\u7684\u8282\u70b9\u4e2d $r$ \u6700\u5927\u7684\u90a3\u4e2a\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u5728\u8fd9\u7c7b\u70b9\u56de\u7b54\u8be2\u95ee\u5c31\u597d\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\ntypedef long long ll;\nusing namespace std;\nstruct query{int l,r;ll ans[2];}c[750005];\nvector<int>v[3000005];\nint now,n,f[2000005][20],lg[750005];\nll h[750005];\nint merge(int x,int y)\n{\n    if(h[x]!=h[y])return h[x]>h[y]?x:y;\n    if(now)return x<y?x:y;\n    return x>y?x:y;\n}\nint ask(int x,int y)\n{\n    int t=lg[y-x+1];\n    return merge(f[x][t],f[y-(1<<t)+1][t]);\n}\nstruct Segment_Tree\n{\n    ll tree[3000005],cov[3000005],addk[3000005],addb[3000005];\n    //\u52a0\u4e00\u4e2a(x-a)*c+d\u7684\u7b49\u5dee\u6570\u5217\n    void init()\n    {\n        memset(tree,0,sizeof(tree));\n        memset(cov,0x80,sizeof(cov));\n        memset(addk,0,sizeof(addk));\n        memset(addb,0,sizeof(addb));\n    }\n    void pushdown(int l,int r,int x)\n    {\n        if(cov[x]!=-2139062144)\n        {\n            tree[x]=cov[x];\n            if(l!=r)cov[x*2]=cov[x],cov[x*2+1]=cov[x],addk[x*2]=addb[x*2]=addk[x*2+1]=addb[x*2+1]=0;\n            cov[x]=-2139062144;\n        }\n        if(addk[x]||addb[x])\n        {\n            tree[x]+=addb[x]+addk[x]*(r-l);\n            if(l!=r)\n            {\n                int mid=(l+r)>>1;\n                addk[x*2]+=addk[x],addb[x*2]+=addb[x];\n                addk[x*2+1]+=addk[x],addb[x*2+1]+=addb[x]+(mid+1-l)*addk[x];\n            }\n            addk[x]=addb[x]=0;\n        }\n    }\n    void add(int l,int r,int x,int a,int b,ll c,ll d)//a\u6070\u597d\u52a0\u4e0ad\n    {\n        pushdown(l,r,x);\n        if(l>=a&&r<=b)\n        {\n            addk[x]+=c,addb[x]+=(l-a)*c+d;\n            return;\n        }\n        int mid=(l+r)>>1;\n        if(a<=mid)add(l,mid,x*2,a,b,c,d);\n        if(b>mid)add(mid+1,r,x*2+1,a,b,c,d);\n        pushdown(l,mid,x*2),pushdown(mid+1,r,x*2+1);\n        tree[x]=tree[x*2+1];\n    }\n    void modify(int l,int r,int x,int a,int b,ll c)\n    {\n        pushdown(l,r,x);\n        if(l>=a&&r<=b)\n        {\n            cov[x]=c;\n            addk[x]=addb[x]=0;\n            return;\n        }\n        int mid=(l+r)>>1;\n        if(a<=mid)modify(l,mid,x*2,a,b,c);\n        if(b>mid)modify(mid+1,r,x*2+1,a,b,c);\n        pushdown(l,mid,x*2),pushdown(mid+1,r,x*2+1);\n        tree[x]=tree[x*2+1];\n    }\n    ll query(int l,int r,int x,int a)\n    {\n        pushdown(l,r,x);\n        if(l==r)return tree[x];\n        int mid=(l+r)>>1;\n        if(a<=mid)return query(l,mid,x*2,a);\n        else return query(mid+1,r,x*2+1,a);\n    }\n    int get(int l,int r,int x,int a,int b,ll c,ll d,int e)\n    {\n        pushdown(l,r,x);\n        if(l==r)return l;\n        int mid=(l+r)>>1;\n        if(a<=mid&&b>mid)\n        {\n            pushdown(l,mid,x*2);\n            if(c+(mid-(a-1)+1)*d>tree[x*2]+((a-1)-e+1)*d)\n                return get(l,mid,x*2,a,b,c,d,e);\n            return get(mid+1,r,x*2+1,a,b,c,d,e);\n        }\n        else if(a<=mid)return get(l,mid,x*2,a,b,c,d,e);\n        return get(mid+1,r,x*2+1,a,b,c,d,e);\n    }\n    ll operator [](int x){return query(1,n,1,x);}\n}T;\nvoid dfs(int l,int r,bool s)\n{\n    int mid=ask(l,r);\n    if(l<mid)\n    {\n        dfs(l,mid-1,0);\n        T.modify(1,n,1,mid,mid,T[mid-1]+h[mid]);\n    }\n    else T.modify(1,n,1,mid,mid,h[mid]);\n    if(r>mid)\n    {\n        dfs(mid+1,r,1);\n        int t;\n        ll tmp=(l<mid)?T[mid-1]:0;\n        if(T[r]+(mid-l+1)*h[mid]>=tmp+(r-mid+1)*h[mid])\n            t=r+1;\n        else t=T.get(1,n,1,mid+1,r,tmp,h[mid],l);\n        //t\u4e3a\u7b2c\u4e00\u4e2a\u4f7f\u5f97\u5de6>\u53f3\u7684\u4f4d\u7f6e\n        if(t!=mid+1)\n        {\n            T.modify(1,n,1,mid+1,t-1,tmp);\n            T.add(1,n,1,mid+1,t-1,h[mid],2*h[mid]);\n        }\n        if(t!=r+1)T.add(1,n,1,t,r,0,(mid-l+1)*h[mid]);\n    }\n    if(s)\n    {\n        for(int i=0;i<v[l].size();i++)\n            c[v[l][i]].ans[now]=T[c[v[l][i]].r];\n    }\n}\nint main()\n{\n    int q;\n    scanf(\"%d%d\",&n,&q);\n    for(int i=1;i<=n;i++)scanf(\"%lld\",&h[i]),f[i][0]=i;\n    for(int i=1;i<=q;i++)scanf(\"%d%d\",&c[i].l,&c[i].r),c[i].l++,c[i].r++;\n    again:\n    for(int i=1;i<=n;i++)v[i].clear();\n    T.init();\n    for(int i=2;i<=n;i++)lg[i]=lg[i>>1]+1;\n    for(int k=1;k<=19;k++)\n        for(int i=1;i<=n;i++)\n            f[i][k]=merge(f[i][k-1],f[i+(1<<(k-1))][k-1]);\n    for(int i=1;i<=q;i++)\n    {\n        int t=ask(c[i].l,c[i].r);\n        if(t!=c[i].r)v[t+1].push_back(i);\n    }\n    \n    dfs(1,n,1);\n    if(!now)\n    {\n        now=1;\n        reverse(h+1,h+n+1);\n        for(int i=1;i<=q;i++)\n            c[i].l=n-c[i].l+1,c[i].r=n-c[i].r+1,swap(c[i].l,c[i].r);\n        goto again;\n    }\n    else\n        for(int i=1;i<=q;i++)\n        {\n            int t=ask(c[i].l,c[i].r);\n            printf(\"%lld\\n\",min(c[i].ans[0]+(c[i].r-t+1)*h[t],c[i].ans[1]+(t-c[i].l+1)*h[t]));\n        }\n    return 0;\n}\n```\n\n",
        "postTime": 1594036608,
        "uid": 96912,
        "name": "AzusaCat",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5044 \u3010[IOI2018] meetings \u4f1a\u8bae\u3011"
    },
    {
        "content": "> [P5044 [IOI2018] meetings \u4f1a\u8bae](https://www.luogu.com.cn/problem/P5044)\n\n\u88ab\u642c\u6210\u4e86\u6a21\u62df\u8d5b\u9898\uff0c\u7136\u800c\u6211\u8003\u573a\u4e0a\u60f3\u5230\u7684 $\\mathcal{O}(nq)$ \u66b4\u529b\u662f\u5355\u8c03\u6808\u8ba1\u7b97\u5de6\u53f3\u8d21\u732e\uff0c\u5c31\u6ca1\u60f3\u5230\u7ee7\u7eed\u4f18\u5316\u7684\u65b9\u6cd5\u3002\uff08\u4f46\u5176\u5b9e\u5355\u8c03\u6808\u4e5f\u548c\u7b1b\u5361\u5c14\u6811\u5173\u7cfb\u5f88\u5927\uff01\uff09\n\n\u8003\u8651\u4e00\u4e2a $\\mathcal{O}(n^2)$ \u66b4\u529b\uff0c\u8bbe $f_{l,r}$ \u8868\u793a\u533a\u95f4 $[l,r]$ \u7684\u7b54\u6848\uff0c\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u533a\u95f4 $\\max$ \u5206\u6cbb\u4e0b\u4e24\u8fb9\u770b\u770b\u5728\u54ea\u8fb9\u4e3e\u529e\uff0c\u8fd9\u6837\u53e6\u4e00\u8fb9\u7684\u8d21\u732e\u5c31\u5df2\u77e5\u4e86\uff1a\n$$f_{l,r}=\\min(f_{l,x-1}+(r-x+1)h_x,f_{x+1,r}+(x-l+1)h_x)$$\n\u5176\u4e2d $x=\\argmax\\limits_{i=l}^r\\{h_i\\}$\u3002\n\n\u5bb9\u6613\u53d1\u73b0\u8fd9\u79cd\u6309\u7167\u533a\u95f4\u6781\u503c\u5411\u4e24\u8fb9\u9012\u5f52\u7684\u7ed3\u6784\u7c7b\u4f3c\u7b1b\u5361\u5c14\u6811\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u5bf9\u4e8e $h$ \u6570\u7ec4\u5efa\u7acb\u7b1b\u5361\u5c14\u6811\u3002\n\n\u4f46\u4f60\u53d1\u73b0\u5efa\u7acb\u4e86\u4e4b\u540e\u8fd8\u662f\u6ca1\u6cd5\u76f4\u63a5\u8f6c\u79fb\uff0c\u4e3b\u8981\u95ee\u9898\u5728\u4e8e\u8fd9\u4e2a\u533a\u95f4\u5b9e\u5728\u662f\u592a\u6ca1\u6709\u89c4\u5f8b\u4e86\u3002\u4f46\u89c2\u5bdf\u5230\u6211\u4eec\u7684 $\\min$ \u7684\u4e24\u4e2a\u53c2\u6570\u4e2d\u7684 $f$\uff0c\u4e00\u5b9a\u6ee1\u8db3\u6709\u4e00\u4e2a\u7aef\u70b9\u662f\u7b1b\u5361\u5c14\u6811\u67d0\u4e2a\u8282\u70b9\u7684\u5de6\u53f3\u7aef\u70b9\u3002\u7531\u4e8e\u4e24\u8fb9\u7684\u6c42\u89e3\u662f\u72ec\u7acb\u7684\uff0c\u6211\u4eec\u4e0d\u59a8\u8bbe\u5747\u6ee1\u8db3\u5de6\u7aef\u70b9\u5728\u7b1b\u5361\u5c14\u6811\u4e0a\u3002\uff08\u53e6\u4e00\u8fb9\u53ef\u4ee5\u628a\u6570\u7ec4 `reverse` \u4e4b\u540e\u518d\u505a\uff09\n\n\u7136\u540e\u5bf9\u4e8e\u4e00\u4e2a\u7b1b\u5361\u5c14\u6811\u4e0a\u7684\u8282\u70b9 $[l,r]$\uff0c\u8bbe\u5b83\u5bf9\u5e94\u7684 $\\max$ \u4f4d\u7f6e\u4e3a $mid$\uff0c\u6211\u4eec\u9700\u8981\u6c42\u89e3\u6240\u6709\u7684 $f_{l,i},l\\le i\\le r$\u3002\u5206\u6cbb\u4e4b\u540e\uff0c\u6240\u6709\u7684 $f_{l,i},l\\le i< mid$ \u90fd\u5df2\u7ecf\u6c42\u51fa\u3002\u7136\u540e\u6211\u4eec\u518d\u5411\u53f3\u5206\u6cbb\uff0c\u6c42\u51fa $f_{mid+1,i},mid<i\\le r$\u3002\u5bb9\u6613\u53d1\u73b0 $f_{l,mid}=f_{l,mid-1}+h_{mid}$\u3002\n\n\u7136\u540e\u518d\u6765\u89c2\u5bdf $f_{l,i},i>mid$ \u7684\u8868\u8fbe\u5f0f\uff1a\n$$f_{l,i}=\\min(f_{l,mid}+(i-mid)h_{mid},f_{mid+1,i}+(mid-l+1)h_{mid})$$\n\u548c\u4e00\u5f00\u59cb $\\rm dp$ \u65b9\u7a0b\u7684\u533a\u522b\u5c31\u662f\u6211\u4eec\u628a $f_{l,mid-1}+h_{mid}$ \u5408\u5e76\u4e86\u4e00\u4e0b\uff0c\u8fd9\u6837\u51fa\u73b0\u4e86\u4e00\u4e2a\u6211\u4eec\u5f88\u597d\u7b97\u7684\u5e38\u6570\u3002\u5176\u4e2d\u7684 $f_{l,mid},f_{mid+1,i}$ \u6211\u4eec\u90fd\u5df2\u7ecf\u6c42\u51fa\u3002\u4f46\u95ee\u9898\u662f\uff0c\u5982\u679c\u6211\u4eec\u8fd8\u662f\u679a\u4e3e $i$ \u6c42\u89e3\u5e76\u6ca1\u6709\u505a\u672c\u8d28\u4e0a\u7684\u4f18\u5316\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4ecd\u7136\u662f $\\mathcal{O}(n^2)$ \u7684\u3002\u4e0d\u8fc7\u6211\u4eec\u6ce8\u610f\u5230\uff0c$\\min$ \u7684\u4e24\u4e2a\u53c2\u6570\u90fd\u662f\u968f\u7740 $i$ \u5355\u8c03\u9012\u589e\u7684\uff0c\u4e14\u524d\u8005\u6bcf\u6b21\u6070\u597d\u52a0 $h_{mid}$\uff0c\u800c\u540e\u8005\u81f3\u591a\u52a0 $h_{mid}$\u3002\u8fd9\u8bf4\u660e\uff0c\u8fd9\u4e2a $\\min$ \u7684\u53d6\u503c\u662f\u5355\u8c03\u7684\uff01\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e8c\u5206\u7684\u65b9\u5f0f\u786e\u5b9a\u53d6\u524d\u8005\u540e\u8005\u7684\u5206\u754c\u70b9\u3002\u4ece\u800c\u53ef\u4ee5\u5feb\u901f\u533a\u95f4\u5904\u7406 $f_{l,i}$ \u7684\u6c42\u89e3\u3002\n\n\u4ee5\u4e0a\u662f\u7406\u8bba\u5206\u6790\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u770b\u770b\u5177\u4f53\u600e\u4e48\u5b9e\u73b0\u8fd9\u4e2a\u8fc7\u7a0b\u3002\u9996\u5148\u662f\u5b58 $f$ \u7684\u95ee\u9898\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u7b2c\u4e8c\u7ef4\u652f\u6301\u8f83\u4e3a\u590d\u6742\u7684\u533a\u95f4\u64cd\u4f5c\uff0c\u6240\u4ee5\u76f4\u63a5\u5bf9\u7b2c\u4e8c\u7ef4\u5efa\u7acb\u4e00\u68f5\u7ebf\u6bb5\u6811\u3002\u6211\u4eec\u9012\u5f52\u8ba1\u7b97\u5de6\u8fb9\u53f3\u8fb9\u540e\uff0c\u7b2c\u4e8c\u7ef4\u5728 $[l,mid)$ \u8303\u56f4\u5185\u7684\u6570\u8868\u793a\u7684\u662f $f_{l,i}$\uff0c\u5728 $(mid,r]$ \u8303\u56f4\u5185\u7684\u8868\u793a\u7684\u662f $f_{mid+1,i}$\u3002\uff08\u56e0\u4e3a\u6bcf\u6b21\u8ba1\u7b97\u7684\u90fd\u662f\u4ee5\u8fd9\u4e2a\u8282\u70b9\u5de6\u7aef\u70b9\u5f00\u59cb\u7684 $f$\uff09\u800c $f_{l,mid}$ \u7684\u8ba1\u7b97\u662f\u7b80\u5355\u7684\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u8003\u8651\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\uff0c\u4e8c\u5206\u5230\u4e00\u4e2a\u88ab\u5b8c\u5168\u8986\u76d6\u7684\u533a\u95f4\u65f6\uff0c\u53ea\u9700\u8981\u5224\u65ad $\\min$ \u53d6\u503c\u7684\u5206\u754c\u70b9\u5728\u4e0d\u5728\u8fd9\u4e2a\u533a\u95f4\u5185\uff0c\u5982\u679c\u4e0d\u5728\u5c31\u76f4\u63a5\u66f4\u65b0\uff08\u8fd9\u91cc\u8981\u4e48\u662f\u533a\u95f4\u52a0\uff0c\u8981\u4e48\u662f\u533a\u95f4\u8d4b\u503c\u4e00\u6b21\u51fd\u6570\uff09\uff0c\u5982\u679c\u5728\u5c31\u9012\u5f52\u4e0b\u53bb\u3002\u5bb9\u6613\u53d1\u73b0\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4\u5185\u6700\u9760\u5de6\u7684 $f$ \u548c\u6700\u9760\u53f3\u7684 $f$ \u5373\u53ef\u3002\u800c\u590d\u6742\u5ea6\uff0c\u663e\u7136\u76f8\u5f53\u4e8e\u4e24\u6b21\u533a\u95f4\u4fee\u6539\u3002\u7136\u540e\u628a\u6bcf\u4e2a\u8be2\u95ee\u62c6\u5206\u6210\u7684\u5176\u4e2d\u4e00\u4e2a\u8be2\u95ee\u6302\u5728\u5b83\u5de6\u7aef\u70b9\u5bf9\u5e94\u8282\u70b9\u4e0a\u5373\u53ef\u3002\n\n\u7136\u540e\u8fd9\u9898\u5c31\u505a\u5b8c\u4e86\uff0c\u56e0\u4e3a\u7ebf\u6bb5\u6811\u9700\u8981\u652f\u6301\u4e24\u79cd\u4e0d\u592a\u4e00\u6837\u7684\u533a\u95f4\u4fee\u6539\uff0c\u6240\u4ee5 tag \u6253\u8d77\u6765\u4f1a\u6709\u70b9\u7e41\u7410\uff0c\u4e0d\u8fc7\u5176\u5b9e\u8fd8\u597d\uff0c\u56e0\u4e3a\u533a\u95f4\u52a0\u4e5f\u53ef\u4ee5\u770b\u6210\u52a0 $k=0$ \u7684\u4e00\u6b21\u51fd\u6570\u3002\u6709\u4e00\u4e2a\u7ec6\u8282\uff0c\u5c31\u662f\u4f60\u9700\u8981 `reverse` \u4e4b\u540e\u5f97\u5230\u7684 $mid$ \u8981\u548c\u4e00\u5f00\u59cb\u4f60\u5206\u8be2\u95ee\u5f97\u5230\u7684 $mid$ \u76f8\u540c\uff0c\u4e0d\u7136\u5c31\u5bf9\u4e0d\u4e0a\u4e86\u3002\uff08\u5982\u679c\u4f60\u662f\u7528 `std::pair<int, int>` \u7684 ST \u8868\u6765\u5904\u7406\u7684\u8bdd\u5c31\u4f1a\u51fa\u8fd9\u4e2a\u95ee\u9898\uff09\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n\\log n)$\u3002\n```cpp\n#include <cstdio>\n#include <vector>\n#include <algorithm>\n#include <functional>\nconst int N = 1e6 + 10; typedef long long ll; \nint a[N], q1[2][N], q2[2][N]; ll ans1[N], ans2[N], ans[N];\ntypedef std::pair<int, int> pii; pii mx[21][N];\nstd::vector<pii> qry[N];\nstruct SegTree\n{\n\t#define ls(k) (k << 1)\n\t#define rs(k) (k << 1 | 1)\n\tstruct node{ int l, r, typ; ll tagk, tagb, vall, valr; }h[N << 2];\n\tvoid modify(int k, ll tagk, ll tagb)\n\t{\n\t\th[k].typ = 1; h[k].tagk = tagk; h[k].tagb = tagb;\n\t\th[k].vall = h[k].l * tagk + tagb;\n\t\th[k].valr = h[k].r * tagk + tagb;\n\t}\n\tvoid add(int k, ll tagk, ll tagb)\n\t{\n\t\th[k].typ = h[k].typ ? h[k].typ : 2;\n\t\th[k].tagk += tagk; h[k].tagb += tagb;\n\t\th[k].vall += h[k].l * tagk + tagb;\n\t\th[k].valr += h[k].r * tagk + tagb;\n\t}\n\tvoid pushup(int k) { h[k].vall = h[ls(k)].vall, h[k].valr = h[rs(k)].valr; }\n\tvoid pushdown(int k)\n\t{\n\t\tif (!h[k].typ) return ;\n\t\tif (h[k].typ == 1)\n\t\t{\n\t\t\tmodify(ls(k), h[k].tagk, h[k].tagb);\n\t\t\tmodify(rs(k), h[k].tagk, h[k].tagb);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tadd(ls(k), h[k].tagk, h[k].tagb);\n\t\t\tadd(rs(k), h[k].tagk, h[k].tagb);\n\t\t}\n\t\th[k].typ = h[k].tagk = h[k].tagb = 0;\n\t}\n\tvoid build(int k, int l, int r)\n\t{\n\t\th[k].l = l; h[k].r = r; \n\t\th[k].tagk = h[k].tagb = h[k].typ = 0; \n\t\th[k].vall = h[k].valr = 1e15;\n\t\tif (l == r) return ;\n\t\tint mid = (l + r) >> 1; build(ls(k), l, mid); build(rs(k), mid + 1, r);\n\t}\n\tvoid modify(int k, int x, int y, ll _k, ll _b)\n\t{\n\t\tif (x <= h[k].l && h[k].r <= y) return modify(k, _k, _b);\n\t\tint mid = (h[k].l + h[k].r) >> 1; pushdown(k);\n\t\tif (x <= mid) modify(ls(k), x, y, _k, _b);\n\t\tif (mid < y) modify(rs(k), x, y, _k, _b);\n\t\tpushup(k);\n\t}\n\tvoid change(int k, int x, int y, ll k1, ll b1, ll b2)\n\t{\n\t\tif (x <= h[k].l && h[k].r <= y) \n\t\t{\n\t\t\tif (h[k].l * k1 + b1 >= h[k].vall + b2) return add(k, 0, b2);\n\t\t\tif (h[k].r * k1 + b1 <= h[k].valr + b2) return modify(k, k1, b1);\n\t\t}\t\n\t\tint mid = (h[k].l + h[k].r) >> 1; pushdown(k);\n\t\tif (x <= mid) change(ls(k), x, y, k1, b1, b2);\n\t\tif (mid < y) change(rs(k), x, y, k1, b1, b2);\n\t\tpushup(k);\n\t}\n\tll query(int k, int p)\n\t{\n\t\tif (h[k].l == h[k].r) return h[k].vall;\n\t\tint mid = (h[k].l + h[k].r) >> 1; pushdown(k);\n\t\treturn p <= mid ? query(ls(k), p) : query(rs(k), p);\n\t}\n\t#undef ls\n\t#undef rs\n}sgt;\nauto query = [](int l, int r) -> int\n{\n\tint s = std::__lg(r - l + 1);\n\treturn std::abs(std::max(mx[s][l], mx[s][r - (1 << s) + 1]).second);\n};\nstruct CTree\n{\n\t#define ls(k) (h[k].ls)\n\t#define rs(k) (h[k].rs)\n\tstruct node{ int ls, rs; }h[N]; int rt;\n\tint build(int l, int r)\n\t{\n\t\tif (l > r) return 0;\n\t\tint mid = query(l, r);\n\t\tls(mid) = build(l, mid - 1);\n\t\trs(mid) = build(mid + 1, r);\n\t\treturn mid;\n\t}\n\tvoid solve(int mid, int l, int r, bool flg)\n\t{\n\t\tll now = a[mid];\n\t\tif (ls(mid)) solve(ls(mid), l, mid - 1, 0), now += sgt.query(1, mid - 1);\n\t\tif (rs(mid)) solve(rs(mid), mid + 1, r, 1);\n\t\tsgt.modify(1, mid, mid, 0, now);\n\t\tif (mid < r)\n\t\t\tsgt.change(1, mid + 1, r, a[mid], now - (ll)a[mid] * mid, (ll)a[mid] * (mid - l + 1));\n\t\tif (flg) for (auto [r, i] : qry[l]) ans[i] = sgt.query(1, r);\n\t}\n\t#undef ls\n\t#undef rs\n}ct;\nint main()\n{\n\tint n, q; scanf(\"%d%d\", &n, &q);\n\tfor (int i = 1; i <= n; ++i) scanf(\"%d\", a + i), mx[0][i] = pii(a[i], i);\n\tfor (int j = 1; j < 21; ++j)\n\t\tfor (int i = 1; i + (1 << j) - 1 <= n; ++i)\n\t\t\tmx[j][i] = std::max(mx[j - 1][i], mx[j - 1][i + (1 << (j - 1))]);\n\tfor (int i = 1, l, r; i <= q; ++i)\n\t{\n\t\tscanf(\"%d%d\", &l, &r); ++l; ++r;\n\t\tint x = query(l, r); \n\t\tq1[0][i] = x + 1; q1[1][i] = r;\n\t\tq2[0][i] = l; q2[1][i] = x - 1;\n\t\tans1[i] = (ll)a[x] * (x - l + 1);\n\t\tans2[i] = (ll)a[x] * (r - x + 1);\n\t}\n\tfor (int i = 1; i <= q; ++i) \n\t\tif (q1[0][i] <= q1[1][i]) qry[q1[0][i]].emplace_back(q1[1][i], i);\n\tsgt.build(1, 1, n); ct.rt = ct.build(1, n); ct.solve(ct.rt, 1, n, 1);\n\tfor (int i = 1; i <= q; ++i) ans1[i] += ans[i], ans[i] = 0;\n\tstd::reverse(a + 1, a + n + 1);\n\tfor (int i = 1; i <= n; ++i) mx[0][i] = pii(a[i], -i);\n\tfor (int j = 1; j < 21; ++j)\n\t\tfor (int i = 1; i + (1 << j) - 1 <= n; ++i)\n\t\t\tmx[j][i] = std::max(mx[j - 1][i], mx[j - 1][i + (1 << (j - 1))]);\n\tfor (int i = 1; i <= n; ++i) qry[i].clear();\n\tfor (int i = 1; i <= q; ++i) \n\t\tif (q2[0][i] <= q2[1][i])\n\t\t{\n\t\t\tint l = q2[0][i], r = q2[1][i];\n\t\t\tqry[n - r + 1].emplace_back(n - l + 1, i);\n\t\t}\n\tsgt.build(1, 1, n); ct.rt = ct.build(1, n); ct.solve(ct.rt, 1, n, 1);\n\tfor (int i = 1; i <= q; ++i) ans2[i] += ans[i];\n\tfor (int i = 1; i <= q; ++i) printf(\"%lld\\n\", std::min(ans1[i], ans2[i]));\n\treturn 0;\n}\n```",
        "postTime": 1679321323,
        "uid": 137603,
        "name": "zhiyangfan",
        "ccfLevel": 9,
        "title": "[P5044 [IOI2018] meetings \u4f1a\u8bae] \u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\u9700\u8981\u8003\u8651\u590d\u6742\u5ea6\u4e3a $O(n^2)$ \u7684\u66b4\u529b\u52a8\u6001\u89c4\u5212\u3002\n\n\u8bbe $f_{l, r}$\u8868\u793a\u8be2\u95ee $[l, r]$ \u7684\u7b54\u6848\u3002\n\n\u8f6c\u79fb\u7684\u65f6\u5019\uff0c\u9700\u8981\u89c2\u5bdf\u5230\u533a\u95f4\u91cc\u7684\u6700\u5927\u503c\u4f5c\u4e3a\u5173\u952e\u70b9\u4e00\u5b9a\u662f\u4e0d\u4f18\u7684\u3002\u6240\u4ee5\u6709\u8f6c\u79fb\u65b9\u7a0b\uff1a\n\n$$f_{l, r} = \\min \\lbrace f_{l, p -1} + a_p \\times  (r - p + 1) , f_{p + 1, r} + a_p \\times (p - l + 1) \\rbrace$$\n\n$p$ \u4e3a\u533a\u95f4\u6700\u5927\u503c\u6240\u5728\u7684\u4f4d\u7f6e\u3002\u542b\u4e49\u5c31\u662f\u5173\u952e\u70b9\u653e\u5728 $p$ \u4e24\u8fb9\u53d6\u4e2a\u6700\u4f18\u3002\n\n\u8fdb\u4e00\u6b65\u4f18\u5316\u9700\u8981\u4f7f\u7528\u5230\u7b1b\u5361\u5c14\u6811\u3002\u56e0\u4e3a\u8f6c\u79fb\u9700\u8981\u7528\u5230\u6700\u503c\u7684\u4f4d\u7f6e\u3002\n\n\u5148\u624b\u52a8\u628a\u4e00\u4e2a\u8be2\u95ee\u62c6\u6210\u4e24\u534a\uff0c\u76f8\u5f53\u4e8e\u6c42 $f_{l, p - 1}, f_{p + 1, r}$\uff0c\u7136\u540e\u53ef\u4ee5\u76f4\u63a5\u5408\u5e76\u8d77\u6765\u5f97\u5230\u7b54\u6848\u3002\u540c\u65f6 $p-1, p+1$ \u4e00\u5b9a\u662f\u7b1b\u5361\u5c14\u6811\u4e0a\u7684\u7aef\u70b9\uff0c\u6240\u4ee5\u53ef\u4ee5\u628a\u8be2\u95ee\u90fd\u79bb\u7ebf\u4e0b\u6765\u6302\u5230\u7b1b\u5361\u5c14\u6811\u7684\u7ed3\u70b9\u4e0a\u3002\n\n\u90a3\u4e48\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u5bf9\u4e8e\u7b1b\u5361\u5c14\u6811\u4e0a\u7684\u4e00\u4e2a\u7ed3\u70b9 $[l, r]$\uff0c\u6c42 $f_{l, i}, i \\in [l, r]$\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5206\u6cbb\u89e3\u51b3\u8fd9\u4e2a\u5b50\u95ee\u9898\uff0c\u5148\u6c42\u51fa\u4e24\u4e2a\u513f\u5b50\u7684\u4fe1\u606f\u3002\n\n\u4e5f\u5c31\u662f\u5df2\u77e5 $f_{l, i}, i \\in [l, p - 1]$ \u548c $f_{p + 1, i}, i \\in [p + 1, r]$ \u3002\n\n\u518d\u89c2\u5bdf\u4e00\u4e0b\u4e0a\u9762\u7ed9\u51fa\u7684\u8f6c\u79fb\u65b9\u7a0b\uff0c\u5de6\u8fb9\u4e00\u9879\u76f8\u5f53\u4e8e\u533a\u95f4\u5bf9\u4e00\u6b21\u51fd\u6570\u53d6\u6700\u5c0f\u503c\uff0c\u53f3\u8fb9\u76f8\u5f53\u4e8e\u76f4\u63a5\u533a\u95f4\u52a0\uff0c\u8003\u8651\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u4f46\u662f\u95ee\u9898\u5728\u4e8e\u76f4\u63a5\u7ef4\u62a4\u590d\u6742\u5ea6\u662f\u7ebf\u6027\u7684\u3002\n\n\u90a3\u4e48\u73b0\u5728\u518d\u89c2\u5bdf\u4e00\u4e0b\u6027\u8d28\uff0c$f_{p+1, r}$ \u7684\u6bcf\u79fb\u52a8\u4e00\u4f4d\uff0c\u589e\u91cf\u4e00\u5b9a\u4e0d\u8d85\u8fc7 $a_p$\uff0c\u56e0\u4e3a $a_p$ \u662f\u533a\u95f4\u6700\u5927\u503c\u3002\u6240\u4ee5\u5f53\u53f3\u8fb9\u4e00\u9879\u66f4\u4f18\u7684\u65f6\u5019\uff0c\u5f80\u53f3\u8d70\u4e00\u5b9a\u90fd\u662f\u66f4\u4f18\u7684\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e86\uff0c\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u5373\u53ef\u3002\n\n\u518d\u6765\u603b\u7ed3\u4e00\u4e0b\uff1a\n\n\u79bb\u7ebf\u8be2\u95ee\uff0c\u6302\u5230\u6bcf\u4e2a\u7b1b\u5361\u5c14\u6811\u7684\u533a\u95f4\u4e0a\uff0c\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u4fe1\u606f\uff0c\u9700\u8981\u652f\u6301**\u533a\u95f4\u52a0**\uff0c**\u533a\u95f4\u5bf9\u4e00\u6b21\u51fd\u6570\u53d6\u6700\u5c0f\u503c**\uff0c\u5355\u70b9\u67e5\u8be2\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O((n+q)\\log n)$\u3002",
        "postTime": 1601047144,
        "uid": 52748,
        "name": "Logey",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5044 \u3010[IOI2018] meetings \u4f1a\u8bae\u3011"
    },
    {
        "content": "[\u6d1b\u8c37\u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P5044)\n\n\u4e00\u9053\u7b1b\u5361\u5c14\u6811\u7684 hot tea\u3002\n\n\u9996\u5148\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u975e\u5e38 naive \u7684\u533a\u95f4 DP\uff1a$dp_{l,r}$ \u8868\u793a\u533a\u95f4 $[l,r]$ \u7684\u7b54\u6848\uff0c\u90a3\u4e48\u6211\u4eec\u8003\u8651\u6c42\u51fa $[l,r]$ \u4e2d\u6700\u5927\u503c\u7684\u4f4d\u7f6e\u6240\u5728\u7684\u4f4d\u7f6e $p$\uff0c\u90a3\u4e48\u5982\u679c\u6211\u4eec\u9009\u53d6\u7684 meeting \u7684\u4f4d\u7f6e $\\le p$\uff0c\u90a3\u4e48\u663e\u7136 $[p+1,r]$ \u90e8\u5206\u7684\u8d21\u732e\u90fd\u662f $a_p$\uff0c$[l,p]$ \u90e8\u5206\u7684\u603b\u5171\u5148\u6700\u5c0f\u662f $dp_{l,p}$\uff0c\u6700\u4f18\u4ee3\u4ef7\u4e3a $dp_{l,p}+a_p\u00b7(r-p)$\uff0c\u5426\u5219 $[l,p]$ \u90e8\u5206\u7684\u8d21\u732e\u90fd\u662f $a_p$\uff0c$[p+1,r]$ \u90e8\u5206\u7684\u603b\u8d21\u732e\u6700\u5c0f\u662f $dp_{p+1,p}$\uff0c\u6700\u4f18\u4ee3\u4ef7\u4e3a $dp_{p+1,p}+a_p\u00b7(p-l+1)$\uff0c\u4e8c\u8005\u53d6 $\\min$ \u5373\u53ef\u3002\n\n\u76f4\u63a5\u505a\u6700\u4f18\u5927\u6982\u662f $n^2$ \u7684\uff0c\u53ef\u4ee5\u83b7\u5f97 19 \u5206\u7684\u597d\u6210\u7ee9\uff08\u96fe\uff09\u3002\u8003\u8651\u4f18\u5316\uff0c\u6ce8\u610f\u5230\u8fd9\u4e1c\u897f\u6709\u70b9\u50cf\u7b1b\u5361\u5c14\u6811\uff0c\u56e0\u6b64\u6211\u4eec\u8003\u8651\u5c06\u7b1b\u5361\u5c14\u6811\u5efa\u51fa\u6765\u3002\u5bf9\u4e8e\u6b64\u9898\u800c\u8a00\uff0c\u7531\u4e8e\u6570\u636e\u8303\u56f4\u5141\u8bb8 $n\\log n$ \u901a\u8fc7\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 $n\\log n$ \u7684 ST \u8868\u5efa\u6811\u65b9\u6cd5\uff0c\u4e0d\u5fc5\u91c7\u7528\u90a3\u4e2a\u4e25\u683c\u7ebf\u6027\u7684\u65b9\u5f0f\u3002\u6211\u4eec\u8003\u8651\u5bf9\u4e8e\u6bcf\u7ec4\u8be2\u95ee $[L,R]$\uff0c\u627e\u5230 $[L,R]$ \u533a\u95f4\u4e2d\u6700\u5927\u503c\u6240\u5728\u7684\u4f4d\u7f6e $p$\uff0c\u7136\u540e\u5c06\u6574\u4e2a\u8be2\u95ee\u62c6\u6210\u4e24\u4e2a\u8be2\u95ee\uff1a$[L,p-1]$ \u548c $[p+1,R]$\u2014\u2014\u4e3a\u4ec0\u4e48\u8981\u8fd9\u6837\u5e72\u5462\uff1f\u539f\u7406\u4e0e P3246 [HNOI2016]\u5e8f\u5217 \u4e00\u81f4\uff0c\u56e0\u4e3a\u8fd9\u6837\u6211\u4eec\u5c31\u9020\u51fa\u4e86\u4e24\u4e2a\u533a\u95f4\uff0c\u4e00\u4e2a\u6ee1\u8db3\u533a\u95f4\u5de6\u8fb9\u90a3\u4e2a\u6570\u5927\u4e8e\u7b49\u4e8e\u533a\u95f4\u4e2d\u6240\u6709\u6570\uff0c\u53e6\u4e00\u4e2a\u5219\u6ee1\u8db3\u533a\u95f4\u53f3\u8fb9\u90a3\u4e2a\u6570\u5927\u4e8e\u7b49\u4e8e\u533a\u95f4\u4e2d\u6240\u6709\u6570\uff08\u65b9\u4fbf\u8d77\u89c1\uff0c\u5bf9\u4e8e\u540e\u9762\u7684\u90e8\u5206\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6574\u4e2a\u6570\u7ec4\u7ffb\u8f6c\u4e00\u904d\u7136\u540e\u5bf9\u7ffb\u8f6c\u540e\u7684\u6570\u7ec4\u518d\u505a\u4e00\u904d\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u8fd9\u6837\u4e24\u90e8\u5206\u5c31\u7b49\u4ef7\u4e86\uff0c\u6ce8\u610f\u5728\u540e\u9762\u4e00\u534a\u5efa\u6811\u90e8\u5206\u6709\u4e9b\u5c0f\u7ec6\u8282\uff0c\u6240\u6709\u503c\u76f8\u540c\u7684\u6700\u5927\u503c\u4e2d\uff0c\u53d6\u4e0b\u6807\u6700\u5927\u7684\u8fd8\u662f\u6700\u5c0f\u7684\u8981\u60f3\u6e05\u695a\uff0c\u4e0d\u8981\u60f3\u5f53\u7136\uff09\u8fd9\u6837\u4e00\u6765\uff0c\u5bf9\u4e8e\u7b1b\u5361\u5c14\u6811\u4e0a\u6bcf\u4e2a\u70b9 $x$ \u6211\u4eec\u5982\u679c\u5047\u8bbe $x$ \u5b50\u6811\u5185\u7684\u70b9\u8868\u793a\u7684\u533a\u95f4\u5de6\u7aef\u70b9\u4e3a $L_x$\uff0c\u53f3\u7aef\u70b9\u4e3a $R_x$\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6ee1\u8db3\u201c\u5de6\u8fb9\u7684\u6570\u5927\u4e8e\u7b49\u4e8e\u533a\u95f4\u4e2d\u6240\u6709\u6570\u7684\u533a\u95f4 $[L,R]$\u201d\uff0c\u6211\u4eec\u5fc5\u7136\u80fd\u591f\u5728\u7b1b\u5361\u5c14\u6811\u4e0a\u627e\u5230\u67d0\u4e2a\u70b9 $x$\uff0c\u6ee1\u8db3 $L_x=L$\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u8be2\u95ee\u6302\u5728\u8fd9\u4e2a\u533a\u95f4\u4e2d\u6240\u6709\u70b9\u5728\u7b1b\u5361\u5c14\u6811\u7684 LCA\uff0c\u4e5f\u5c31\u662f $[L,R]$ \u6700\u5927\u503c\u6240\u5728\u7684\u4f4d\u7f6e\u8868\u793a\u7684\u70b9\u4e0a\uff0c\u7136\u540e\u79bb\u7ebf\u4e00\u904d DFS\uff0cDFS \u7684\u8fc7\u7a0b\u4e2d\u626b\u63cf\u5230\u70b9 $x$ \u65f6\uff0c\u7528\u67d0\u79cd\u65b9\u5f0f\u7ef4\u62a4 $[L_x,L_x],[L_x,L_x+1],\\cdots,[L_x,R_x]$ \u7684 DP \u503c\uff0c\u8fd9\u6837\u5373\u53ef\u67e5\u51fa\u7b54\u6848\u3002\n\n\u90a3\u4e48\u600e\u4e48\u7ef4\u62a4\u8fd9\u6837\u4e9b DP \u503c\u5462\uff1f\u6211\u4eec\u5f00\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u4e0b\u6807\u4e3a $r$ \u7684\u4f4d\u7f6e\u5b9e\u65f6\u7ef4\u62a4\u53f3\u7aef\u70b9\u4e3a $r$ \u7684\u533a\u95f4\u7684 DP \u503c\u3002\u90a3\u4e48\u5047\u8bbe\u6211\u4eec\u904d\u5386\u5230\u70b9 $x$\uff0c$[L_x,R_x]$ \u6700\u5927\u503c\u6240\u5728\u7684\u4f4d\u7f6e\u4e3a $p$\uff0c\u90a3\u4e48\u6211\u4eec\u5148\u904d\u5386 $[L_x,p-1],[p+1,R_x]$\uff0c\u90a3\u4e48\u5bf9\u4e8e $[L_x,p-1]$ \u4e2d\u7684\u4f4d\u7f6e\uff0c\u5176 DP \u503c\u80af\u5b9a\u4e0d\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u5408\u5e76\u7684\u65f6\u5019\u5c31\u4e0d\u7528\u7ba1\u5b83\uff0c\u5bf9\u4e8e $dp_{L_x,p}$\uff0c\u7531\u4e8e\u533a\u95f4 $[L_x,p]$ \u6700\u5927\u503c\u5c31\u662f $a_p$\uff0c\u56e0\u6b64\u6211\u4eec\u80af\u5b9a\u53ea\u80fd\u4ee4 meeting \u7684\u4f4d\u7f6e $\\le p$\uff0c\u6b64\u65f6 $dp_{L_x,p}=dp_{L_x,p-1}+a_p\u00b7(p-L_x+1)$\uff0c\u5728\u7ebf\u6bb5\u6811\u4e0a\u67e5\u8be2 $p-1$ \u4f4d\u7f6e\u7684\u503c\u7136\u540e\u505a\u51fa\u5bf9\u5e94\u4fee\u6539\u5373\u53ef\u3002\n\n\u6bd4\u8f83\u68d8\u624b\u7684\u662f\u533a\u95f4 $[p+1,R_x]$\u3002\u5bf9\u4e8e\u533a\u95f4 $[p+1,R_x]$ \u4e2d\u7684\u67d0\u4e2a $v$\uff0c\u6839\u636e\u4e0a\u9762\u6734\u7d20\u7684 DP \u6709 $dp_{L_x,v}=\\min(dp_{L_x,p}+(v-p)\u00b7a_p,dp_{p+1,v}+(p-L_x+1)\u00b7a_p)$\uff0c\u4e0d\u96be\u53d1\u73b0 $\\min$ \u5de6\u53f3\u4e24\u8fb9\u90fd\u662f\u9012\u589e\u7684\uff0c\u5e76\u4e14\u53f3\u8fb9\u7684\u90e8\u5206\u589e\u957f\u901f\u5ea6\u4e25\u683c\u6162\u4e8e\u5de6\u8fb9\uff0c\u56e0\u6b64\u6211\u4eec\u8003\u8651\u4e8c\u5206\u627e\u51fa\u6700\u53f3\u8fb9\u7684\u4f4d\u7f6e $pos$\uff0c\u6ee1\u8db3 $dp_{L_x,p}+(pos-p)\u00b7a_p\\le dp_{p+1,pos}+(p-L_x+1)\u00b7a_p$\uff0c\u7136\u540e\u4ee4 $[p+1,v]$ \u4f4d\u7f6e\u4e2d\u7684 DP \u503c\u5148\u6e05\u96f6\uff0c\u7136\u540e\u5bf9\u4e8e\u6240\u6709 $i\\in[p+1,v]$\uff0cDP \u503c\u5047\u8bbe $(dp_{L_x,p}-p\u00b7a_p)+i\u00b7a_p$\uff0c$[v+1,p]$ \u4f4d\u7f6e\u4e0a\u7684\u503c\u6574\u4f53\u52a0\u4e0a $(p-L_x+1)\u00b7a_p$\uff0c\u90a3\u4e48\u600e\u4e48\u627e\u5230\u8fd9\u4e2a\u4f4d\u7f6e $pos$ \u5462\uff1f\u76f4\u63a5\u4e8c\u5206\u662f 2log \u7684\uff0c\u4e0d\u8fc7\u6ce8\u610f\u5230\u5982\u679c\u6211\u4eec\u4ee4 $A=dp_{L_x,p}-p\u00b7a_p,B=a_p,C=(p-L_x+1)\u00b7a_p)$\uff0c\u90a3\u4e48\u6211\u4eec\u7b49\u4ef7\u4e8e\u627e\u5230\u6700\u53f3\u8fb9\u7684\u4f4d\u7f6e\u6ee1\u8db3 $A+Bi\\le C+f(i)$\uff0c\u5176\u4e2d $f(i)$ \u8868\u793a\u7ebf\u6bb5\u6811\u4e0a\u4e0b\u6807\u4e3a $i$\u200b \u7684\u4f4d\u7f6e\u4e0a\u7684\u503c\uff0c\u8fd9\u4e2a\u4e00\u8138\u7ebf\u6bb5\u6811\u4e8c\u5206\u7684\u6837\u5b50\uff0c\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u4e00\u4e0b\u5373\u53ef\u505a\u5230 1log\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $(n+q)\\log n$\u3002\n\n```cpp\nconst int MAXN=7.5e5;\nconst int LOG_N=20;\nint n,qu,a[MAXN+5];\npii qp[MAXN+5];\nstruct solver{\n\tpii st[MAXN+5][LOG_N+2];\n\tpii query(int l,int r){\n\t\tint k=31-__builtin_clz(r-l+1);\n\t\treturn max(st[l][k],st[r-(1<<k)+1][k]);\n\t}\n\tint ncnt=0,rt=0,ch[MAXN+5][2],md[MAXN+5];\n\tvoid build_cat(int &k,int l,int r){\n\t\tif(l>r) return;if(!k) k=++ncnt;md[k]=abs(query(l,r).se);\n//\t\tprintf(\"%d %d %d\\n\",l,r,md[k]);\n\t\tbuild_cat(ch[k][0],l,md[k]-1);build_cat(ch[k][1],md[k]+1,r);\n\t}\n\tvoid init(){\n\t\tfor(int i=1;i<=LOG_N;i++) for(int j=1;j+(1<<i)-1<=n;j++)\n\t\t\tst[j][i]=max(st[j][i-1],st[j+(1<<i-1)][i-1]);\n\t\tbuild_cat(rt,1,n);\n\t}\n\tvector<pii> qv[MAXN+5];\n\tvoid add_query(int l,int r,int id){\n\t\tif(l>r) return;int ps=abs(query(l,r).se);\n//\t\tprintf(\"+ %d %d %d %d\\n\",l,r,id,ps);\n\t\tqv[ps].pb(mp(r,id));\n\t}\n\tstruct node{int l,r;ll val,lz0,lz1,t0;} s[MAXN*4+5];\n\tvoid pushup(int k){s[k].val=s[k<<1|1].val;}\n\tvoid build(int k,int l,int r){\n\t\ts[k].l=l;s[k].r=r;if(l==r) return;int mid=l+r>>1;\n\t\tbuild(k<<1,l,mid);build(k<<1|1,mid+1,r);\n\t}\n\tvoid make0(int k){s[k].t0=1;s[k].val=s[k].lz0=s[k].lz1=0;}\n\tvoid tag(int k,ll v0,ll v1){\n\t\ts[k].val+=v0+1ll*s[k].r*v1;\n\t\ts[k].lz0+=v0;s[k].lz1+=v1;\n\t}\n\tvoid pushdown(int k){\n\t\tif(s[k].t0){make0(k<<1);make0(k<<1|1);s[k].t0=0;}\n\t\tif(s[k].lz0||s[k].lz1){\n\t\t\ttag(k<<1,s[k].lz0,s[k].lz1);\n\t\t\ttag(k<<1|1,s[k].lz0,s[k].lz1);\n\t\t\ts[k].lz0=s[k].lz1=0;\n\t\t}\n\t}\n\tvoid addrng(int k,int l,int r,ll v0,ll v1){\n\t\tif(l>r) return;\n\t\tif(l<=s[k].l&&s[k].r<=r) return tag(k,v0,v1),void();\n\t\tpushdown(k);int mid=s[k].l+s[k].r>>1;\n\t\tif(r<=mid) addrng(k<<1,l,r,v0,v1);\n\t\telse if(l>mid) addrng(k<<1|1,l,r,v0,v1);\n\t\telse addrng(k<<1,l,mid,v0,v1),addrng(k<<1|1,mid+1,r,v0,v1);\n\t\tpushup(k);\n\t}\n\tvoid modify(int k,int p,ll x){\n\t\tif(s[k].l==s[k].r) return s[k].val=x,void();\n\t\tpushdown(k);int mid=s[k].l+s[k].r>>1;\n\t\t(p<=mid)?modify(k<<1,p,x):modify(k<<1|1,p,x);\n\t\tpushup(k);\n\t}\n\tint walk(int k,int l,int r,ll lft,int dlt,ll rit){//the rightmost index i satisfying lft+dlt*i<=rit+f(i)\n\t\tif(s[k].l==s[k].r) return (lft+1ll*dlt*s[k].l<=rit+s[k].val)?s[k].l:(s[k].l-1);\n\t\tpushdown(k);int mid=s[k].l+s[k].r>>1;\n\t\tif(r<=mid) return walk(k<<1,l,r,lft,dlt,rit);\n\t\telse if(l>mid) return walk(k<<1|1,l,r,lft,dlt,rit);\n\t\telse{\n\t\t\tif(lft+1ll*dlt*mid<=rit+s[k<<1].val) return walk(k<<1|1,mid+1,r,lft,dlt,rit);\n\t\t\telse return walk(k<<1,l,mid,lft,dlt,rit);\n\t\t}\n\t}\n\tvoid makezero(int k,int l,int r){\n\t\tif(l>r) return;\n\t\tif(l<=s[k].l&&s[k].r<=r) return make0(k),void();\n\t\tpushdown(k);int mid=s[k].l+s[k].r>>1;\n\t\tif(r<=mid) makezero(k<<1,l,r);\n\t\telse if(l>mid) makezero(k<<1|1,l,r);\n\t\telse makezero(k<<1,l,mid),makezero(k<<1|1,mid+1,r);\n\t\tpushup(k);\n\t}\n\tll query_pt(int k,int p){\n\t\tif(s[k].l==s[k].r) return s[k].val;\n\t\tpushdown(k);int mid=s[k].l+s[k].r>>1;\n\t\treturn (p<=mid)?query_pt(k<<1,p):query_pt(k<<1|1,p);\n\t}\n\tll res[MAXN+5];\n\tvoid solve(int k,int l,int r){\n//\t\tprintf(\"solving %d %d %d\\n\",k,l,r);\n\t\tif(!k) return;\n\t\tif(!ch[k][0]&&!ch[k][1]){\n\t\t\tmodify(1,l,st[l][0].fi);\n\t\t\tfor(pii p:qv[l]) res[p.se]=st[l][0].fi;\n\t\t\treturn;\n\t\t} int mid=md[k];\n\t\tsolve(ch[k][0],l,mid-1);solve(ch[k][1],mid+1,r);\n\t\tll val=(!ch[k][0])?st[mid][0].fi:(query_pt(1,mid-1)+st[mid][0].fi);\n\t\tmodify(1,mid,val);\n//\t\tprintf(\"%d %d %d %lld\\n\",l,r,mid,val);\n\t\tif(mid<r){\n\t\t\tint pos=walk(1,mid+1,r,val-1ll*st[mid][0].fi*mid,st[mid][0].fi,1ll*st[mid][0].fi*(mid-l+1));\n\t\t\tmakezero(1,mid+1,pos);addrng(1,mid+1,pos,val-1ll*st[mid][0].fi*mid,st[mid][0].fi);\n\t\t\taddrng(1,pos+1,r,1ll*(mid-l+1)*st[mid][0].fi,0);\n\t\t} for(pii p:qv[mid]) res[p.se]=query_pt(1,p.fi);\n\t}\n\tvoid work(){build(1,1,n);solve(rt,1,n);}\n} fw,bk;\nint main(){\n\tscanf(\"%d%d\",&n,&qu);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n\tfor(int i=1;i<=n;i++) fw.st[i][0]=mp(a[i],i);\n\tfor(int i=1;i<=n;i++) bk.st[i][0]=mp(a[n-i+1],-i);\n\tfw.init();bk.init();\n\tfor(int i=1;i<=qu;i++){\n\t\tscanf(\"%d%d\",&qp[i].fi,&qp[i].se);++qp[i].fi;++qp[i].se;\n\t\tint ps=fw.query(qp[i].fi,qp[i].se).se;\n//\t\tprintf(\"ps=%d\\n\",ps);\n\t\tfw.add_query(ps+1,qp[i].se,i);\n\t\tbk.add_query(n-ps+2,n-qp[i].fi+1,i);\n\t} fw.work();bk.work();\n//\tfor(int i=1;i<=qu;i++) printf(\"%lld %lld\\n\",fw.res[i],bk.res[i]);\n\tfor(int i=1;i<=qu;i++){\n\t\tll r1=fw.res[i],r2=bk.res[i];\n\t\tint ps=fw.query(qp[i].fi,qp[i].se).se;\n\t\tprintf(\"%lld\\n\",min(r1+1ll*a[ps]*(ps-qp[i].fi+1),r2+1ll*a[ps]*(qp[i].se-ps+1)));\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1630596573,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5044 [IOI2018] meetings \u4f1a\u8bae"
    },
    {
        "content": "\u8bb0\u8be2\u95ee\u533a\u95f4 $[l,r]$ \u7684\u7b54\u6848\u4e3a $f_{l,r}$\uff0c\u8bbe\u533a\u95f4 $[l,r]$ \u5185\u7684\u6700\u5927\u503c\u4e3a $a_p$\uff0c\u8003\u8651\u5982\u679c\u4e3e\u529e\u5730\u70b9\u5728 $p$ \u7684\u4e00\u4fa7\u7684\u8bdd\uff0c\u53e6\u4e00\u4fa7\u7684\u6240\u6709\u4f4d\u7f6e\u82b1\u8d39\u7684\u4ee3\u4ef7\u90fd\u5c06\u662f $a_p$\uff0c\u6240\u4ee5\u6709\uff1a\n\n$f_{l,r}=\\min\\{f_{l,p-1}+(r-p+1)\\times a_p,(p-l+1)\\times a_p+f_{p+1,r}\\}$\n\n\u53ef\u4ee5\u628a\u8fd9\u4e2a\u8fc7\u7a0b\u770b\u505a\u662f\u4ece\u6700\u503c\u5904\u5212\u5206\u5408\u5e76\u4e24\u4e2a\u533a\u95f4\uff0c\u800c\u6700\u503c\u5206\u6cbb\u53c8\u53ef\u4ee5\u548c\u7b1b\u5361\u5c14\u6811\u8054\u7cfb\u8d77\u6765\u3002\n\n\u901a\u8fc7\u9884\u5904\u7406\u51fa\u7b1b\u5361\u5c14\u6811\u4e0a\u6bcf\u4e2a\u5b50\u6811\u7684\u7b54\u6848\uff0c\u5728\u5c06\u8be2\u95ee\u7684\u4e24\u4e2a\u7aef\u70b9\u5728\u7b1b\u5361\u5c14\u6811\u4e0a\u8df3 lca \u7684\u8fc7\u7a0b\u4e2d\u5408\u5e76\u533a\u95f4\u7684\u7b54\u6848\uff0c\u5c31\u53ef\u4ee5\u5728 $O(\\text{\u7b1b\u5361\u5c14\u6811\u6811\u9ad8})$ \u7684\u65f6\u95f4\u5185\u5904\u7406\u6bcf\u6b21\u7684\u8be2\u95ee\uff0c\u53ef\u4ee5\u5f97\u5230 $60$ \u5206\u3002\n\n\u8fd9\u4e2a\u65b9\u5411\u6ca1\u6709\u4ec0\u4e48\u4f18\u5316\u7684\u7a7a\u95f4\uff0c\u56e0\u4e3a\u5408\u5e76\u4e24\u4e2a\u533a\u95f4\u7684\u64cd\u4f5c\u5e76\u6ca1\u6709\u7ed3\u5408\u5f8b\uff0c\u6240\u4ee5\u4e5f\u4e0d\u53ef\u80fd\u7528\u500d\u589e\u4e4b\u7c7b\u7684\u65b9\u6cd5\u5904\u7406\u3002\n\n\u6362\u4e00\u4e2a\u601d\u8def\uff0c\u8df3 lca \u7684\u66b4\u529b\u8fc7\u7a0b\u5b9e\u9645\u4e0a\u662f\u5728\u6c42\u51fa\u6bcf\u4e2a\u8be2\u95ee\u5230\u533a\u95f4\u6700\u503c\u5904\u7684\u7b54\u6848\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e2a\u70b9\u5728\u7b1b\u5361\u5c14\u6811\u4e0a\u4e24\u4e2a\u513f\u5b50\u7684\u524d\u7f00\u548c\u540e\u7f00\u7684\u7b54\u6848\u3002\n\n\u5047\u8bbe\u5df2\u7ecf\u6c42\u51fa\u4e86 $[l,p-1],[p+1,r]$ \u7684\u6bcf\u4e2a\u524d\u7f00\u7684\u7b54\u6848\uff0c\u53ea\u9700\u8981\u8003\u8651\u5728\u6bcf\u4e2a $[p+1,i](i\\in[p,r])$ \u524d\u9762\u52a0\u4e0a $[l,p-1]$ \u8fd9\u4e00\u6bb5\u3002\n\n\u8f6c\u79fb\u65b9\u7a0b\u76f8\u540c\uff0c\u5373\uff1a\n\n$f_{l,i}=\\min\\{f_{l,p-1}+(i-p+1)\\times a_p,(p-l+1)\\times a_p+f_{p+1,i}\\}$\n\n\u8bbe $c=(1-p)\\times a_p,d=(p-l+1)\\times a_p$\uff0c\u5c31\u6709\uff1a\n\n$f_{l,i}=\\min\\{i\\times a_p+c,f_{p+1,i}+d\\}$\u3002\n\n\u76f8\u5f53\u4e8e\u8f6c\u79fb\u662f\u4e00\u6b21\u52a0\u6cd5\u548c\u5bf9\u4e00\u4e2a\u4e00\u6b21\u51fd\u6570\u53d6 $\\min$\u3002\n\n\u53c8\u56e0\u4e3a\u4e00\u5b9a\u6709 $f_{p+1,i+1}-f_{p+1,i}\\leq a_p$\uff0c\u6240\u4ee5\u8be5\u4e00\u6b21\u51fd\u6570\u4e0e\u539f\u51fd\u6570\u7684\u4ea4\u70b9\u6700\u591a\u53ea\u6709\u4e00\u4e2a\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u7528\u7c7b\u4f3c\u674e\u8d85\u6811\u7684\u529e\u6cd5\u5728\u7ebf\u6bb5\u6811\u4e0a\u8986\u76d6\u7ebf\u6bb5\uff0c\u590d\u6742\u5ea6\u662f $O(nlogn)$ \u7684\u3002\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define I inline int\n#define V inline void\n#define ll long long int\n#define isnum(ch) ('0'<=ch&&ch<='9')\n#define FOR(i,a,b) for(int i=a;i<=b;i++)\n#define ROF(i,a,b) for(int i=a;i>=b;i--)\n#define gc (_op==_ed&&(_ed=(_op=_buf)+fread(_buf,1,100000,stdin),_op==_ed)?EOF:*_op++)\nchar _buf[100000],*_op(_buf),*_ed(_buf);\nI getint(){\n\tint _s=0;char _ch=gc;\n\twhile(!isnum(_ch))_ch=gc;\n\twhile(isnum(_ch))_s=_s*10+_ch-48,_ch=gc;\n\treturn _s;\n}\nconst int N=75e4+1;\nll ans[N];\nvector<int>q[N];\nint n,m,a[N],ql[N],qr[N],lg[N],st[20][N];\n#define lc p<<1\n#define rc lc|1\n#define root 1,1,n\n#define lson lc,L,mid\n#define rson rc,mid+1,R\nstruct seg{\n\tstruct node{\n\t\tint k;ll b;\n\t\tV clear(){k=b=0;}\n\t\tI empty()const{return !k;}\n\t\tll val(int x)const{return 1ll*k*x+b;}\n\t};\n\tstruct ele{\n\t\tnode tag;\n\t\tll lval,rval,dlt;\n\t\tV add(ll x){lval+=x,rval+=x,dlt+=x,tag.b+=x;}\n\t\tV cha(const node&x,int L,int R){lval=x.val(L),rval=x.val(R),tag=x,dlt=0;}\n\t}t[N<<2];\n\tV upd(int p){t[p].lval=t[lc].lval,t[p].rval=t[rc].rval;}\n\tV psd(int p,int L,int R){\n\t\tt[lc].add(t[p].dlt),t[rc].add(t[p].dlt),t[p].dlt=0;\n\t\tif(t[p].tag.empty())return;int mid=L+R>>1;\n\t\tt[lc].cha(t[p].tag,L,mid),t[rc].cha(t[p].tag,mid+1,R),t[p].tag.clear();\n\t}\n\tV modify(int p,int L,int R,int l,int r,const node&x){\n\t\tif(R<l||L>r)return;\n\t\tint mid=L+R>>1;\n\t\tif(l<=L&&R<=r)\n\t\t\tswitch((t[p].lval>x.val(L))+(t[p].rval>x.val(R))){\n\t\t\t\tcase 1:return psd(p,L,R),modify(lson,l,r,x),modify(rson,l,r,x);\n\t\t\t\tcase 2:return t[p].cha(x,L,R);\n\t\t\t}\n\t\telse psd(p,L,R),modify(lson,l,r,x),modify(rson,l,r,x),upd(p);\n\t}\n\tV modify(int p,int L,int R,int l,int r,ll x){\n\t\tif(R<l||L>r)return;\n\t\tif(l<=L&&R<=r)return t[p].add(x);\n\t\tint mid=L+R>>1;\n\t\tmodify(lson,l,r,x),modify(rson,l,r,x),upd(p);\n\t}\n\tll ask(int p,int L,int R,int x){\n\t\tif(L==R)return t[p].lval;\n\t\tint mid=L+R>>1;psd(p,L,R);\n\t\treturn(x<=mid)?ask(lson,x):ask(rson,x);\n\t}\n\tll operator[](const int&x){return ask(root,x);}\n}T1,T2;\nV input(){\n\tn=getint(),m=getint();\n\tFOR(i,1,n)a[i]=getint(),st[0][i]=i;\n\tFOR(i,1,m)ql[i]=getint()+1,qr[i]=getint()+1;\n}\nI low(int x,int y){return a[x]>=a[y]?x:y;}\nI ask(int l,int r){\n\tint p=lg[r-l+1];\n\treturn low(st[p][l],st[p][r-(1<<p)+1]);\n}\nV init(){\n\tFOR(i,2,n)lg[i]=lg[i>>1]+1;\n\tFOR(i,0,18)FOR(j,1,n-(1<<i))\n\t\tst[i+1][j]=low(st[i][j],st[i][j+(1<<i)]);\n\tFOR(i,1,m)q[ask(ql[i],qr[i])].push_back(i);\n}\nll dfs(int l,int r){\n\tif(l>r)return 0ll;\n\tint p=ask(l,r);\n\tll szl,szr,wl,wr,cl,cr;\n\tcl=dfs(l,p-1),cr=dfs(p+1,r);\n\tfor(int v:q[p]){\n\t\tszl=p-ql[v]+1,szr=qr[v]-p+1,wl=T1[ql[v]],wr=T2[qr[v]];\n\t\tans[v]=min(szl*a[p]+wr,wl+szr*a[p]);\n\t}\n\tszl=p-l+1,szr=r-p+1;\n\tT1.modify(root,l,p,szr*a[p]);\n\tT2.modify(root,p,r,szl*a[p]);\n\tT1.modify(root,l,p,(seg::node){-a[p],cr+(1ll+p)*a[p]});\n\tT2.modify(root,p,r,(seg::node){a[p],cl+(1ll-p)*a[p]});\n\treturn min(szl*a[p]+cr,cl+szr*a[p]);\n}\nV work(){\n\tdfs(1,n);\n\tFOR(i,1,m)cout<<ans[i]<<'\\n';\n}\nint main(){\n\tinput();\n\tinit();\n\twork();\n\treturn 0;\n}\n```",
        "postTime": 1586960454,
        "uid": 109236,
        "name": "Fuyuki",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5044 \u3010[IOI2018] meetings \u4f1a\u8bae\u3011"
    }
]