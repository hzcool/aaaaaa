[
    {
        "content": "## \u4e00\u53e5\u8bdd\u9898\u610f\n\n\u7ed9\u4e00\u4e2a\u957f\u5ea6\u4e3a$n$\u5e8f\u5217$a$\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u5b9a$l, r, x$\uff0c\u95ee\u533a\u95f4$[l, r]$\u5185\u662f\u5426\u80fd\u627e\u51fa\u4e24\u4e2a\u6570\uff0c\u5b83\u4eec\u7684\u5dee/\u548c/\u79ef/\u5546\u4e3a$x$\u3002$n$\u3001\u8be2\u95ee\u6b21\u6570\u3001\u503c\u57df\u5747\u4e0d\u8d85\u8fc7$10 ^ 5$\u3002\n\n## \u89e3\u6cd5\n\n~~\u9996\u5148\uff0c\u770b\u5230[Ynoi]\uff0c\u5e76\u4e14\u6ca1\u6709\u5f3a\u5236\u5728\u7ebf\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8003\u8651\u79bb\u7ebf\u7b97\u6cd5\u3002~~\n\n\u5f31\u5316\u7248\uff1a[=>\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3674)\n\n\u83ab\u961f\uff0c\u540c\u65f6\u7ef4\u62a4\u4e24\u4e2a\u5927\u5c0f\u4e3a\u503c\u57df\u7684`bitset`\uff0c\u6682\u4e14\u53eb\u5b83\u4eec`bs1`\u548c`bs2`\u3002\u5982\u679c$x$\u5728\u5f53\u524d\u533a\u95f4\u51fa\u73b0\uff0c\u4ee4`bs1[i]`\u3001`bs2[100000 - i]`\u90fd$=1$\u3002\n\n\u5bf9\u4e8e\u51cf\u6cd5\u64cd\u4f5c\uff0c\u7b54\u6848\u662f`((bs1 << x) & bs1).any()`\n\n\u5bf9\u4e8e\u52a0\u6cd5\u64cd\u4f5c\uff0c\u7b54\u6848\u662f`ans[qs[i].i] = ((bs1 << (100000 - x)) & bs2).any()`\n\n\u5bf9\u4e8e\u4e58\u6cd5\u64cd\u4f5c\uff0c\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\uff0c\u4ee4$i$\u4ece$1$\u904d\u5386\u5230$\\lfloor \\sqrt {x} \\rfloor$\uff0c\u67e5\u8be2\u662f\u5426$i$\u548c$\\frac{x}{i}$\u540c\u65f6\u5b58\u5728\uff0c\u6ce8\u610f$x$\u5fc5\u987b\u88ab$i$\u6574\u9664\u3002\n\n\u524d\u4e09\u79cd\u64cd\u4f5c\u5728P3674\u7684\u5404\u8def\u5927\u4f6c\u7684\u9898\u89e3\u4e2d\u6709\u8be6\u7ec6\u7684\u590d\u6742\u5ea6\u8bc1\u660e\uff0c\u8fd9\u91cc\u5c31\u4e0d\u8bc1\u4e86\uff0c\u8bb2\u4e00\u4e0b\u7b2c\u56db\u79cd\u64cd\u4f5c\u3002\n\n\u503c\u57df$N = 10 ^ 5$\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u628a$\\sqrt N$\u4f5c\u4e3a\u9608\u503c\uff0c\u6309$x$\u5927\u5c0f\u628a\u7b2c\u56db\u7c7b\u8be2\u95ee\u5206\u6210\u4e24\u7c7b\uff0c\u8bbe\u8ba1\u4e24\u79cd\u7b97\u6cd5\u3002\n\n\u5bf9\u4e8e$x \\geq \\sqrt N$\u7684\u8be2\u95ee\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u679a\u4e3e$i$\uff0c\u4ee4$i$\u4ece$1$\u904d\u5386\u5230$\\lfloor \\frac{N}{x} \\rfloor$\uff0c\u67e5\u8be2\u662f\u5426$i$\u548c$ix$\u662f\u5426\u540c\u65f6\u5b58\u5728\u3002\u7531\u4e8e$x$\u4e0d\u4f4e\u4e8e$\\sqrt N$\uff0c\u6240\u4ee5$\\lfloor \\frac{N}{x} \\rfloor$\u4e0d\u8d85\u8fc7$\\sqrt N$\u3002\u90a3\u4e48\uff0c\u5728\u83ab\u961f\u5904\u7406\u597d\u533a\u95f4\u4fe1\u606f\u540e\uff0c\u8fd9\u6b21\u67e5\u8be2\u7684\u590d\u6742\u5ea6\u662f$\\Theta (\\sqrt N)$\u3002\n\n\u5bf9\u4e8e$x < \\sqrt N$\u7684\u8be2\u95ee\uff0c\u6211\u4eec\u5355\u72ec\u5904\u7406\uff0c\u4e0d\u4f7f\u7528\u83ab\u961f\u3002\n\n\u679a\u4e3e$x$\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a$x$\uff0c\u6211\u4eec$\\Theta (n)$\u4ee4$p$\u4ece$1$\u626b\u5230$n$\uff0c\u540c\u65f6\u7ef4\u62a4\u4e24\u4e2a\u6570\u7ec4$las[i]$\u548c$res[i]$\u3002$las[i]$\u4ee3\u8868\u626b\u5230$p$\u65f6\uff0c$i$\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c$res[p]$\u4ee3\u8868\u626b\u5230$p$\u65f6\uff0c\u6ee1\u8db3\u5728$[l, p]$\u540c\u65f6\u51fa\u73b0$y$\u548c$xy$\uff0c\u6216\u540c\u65f6\u5b58\u5728$y$\u548c$\\frac{y}{x}$\u7684$l$\u7684\u6700\u9760\u53f3\u7684\u4f4d\u7f6e\u3002\u6bcf\u626b\u5230\u4e00\u4e2a\u70b9\uff0c\u6211\u4eec\u7528$p$\u66f4\u65b0$las[a[p]]$\uff0c\u518d\u7528$las[a[p] \\times x]$\u548c$las[\\frac{a[p]}{x}]$\u66f4\u65b0\u5f53\u524d\u7684$res$\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u663e\u7136\uff0c\u5229\u7528\u521a\u624d\u5904\u7406\u51fa\u7684$res[]$\u6570\u7ec4\uff0c\u5bf9\u4e8e$x$\u4e3a\u5f53\u524d$x$\u7684\u6240\u6709\u8be2\u95ee\uff0c\u5b83\u7684\u7b54\u6848\u5747\u53ef\u4ee5$\\Theta (1)$\u6c42\u51fa\uff0c\u5373\u5224\u65ad$l$\u662f\u5426$\\leq res[r]$\u3002\u7531\u4e8e\u679a\u4e3e\u4e86$\\sqrt N$\u4e2a$x$\uff0c\u6bcf\u6b21\u904d\u5386\u4e86\u6574\u4e2a\u5e8f\u5217\uff0c\u6240\u4ee5\u8fd9\u4e00\u7c7b\u8be2\u95ee\u603b\u590d\u6742\u5ea6\u662f$\\Theta (n \\sqrt N)$\n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\nconst int MAXN = 1e5 + 5;\n\nint n, m;\nint a[MAXN];\nint block, blo[MAXN];\nint ans[MAXN];\nint limit = 300;\n\nstruct Data{\n\tint l, r, x, i, t;\n\tData() {}\n\tData(int l, int r, int x, int i, int t) : l(l), r(r), x(x), i(i), t(t) {}\n};\n\nData qs[MAXN];\nint qcnt;\nint cnt[MAXN];\nbitset<MAXN> bs1, bs2;\n\nint Comp(const Data &a, const Data &b) {\n\tif (blo[a.l] != blo[b.l]) return a.l < b.l;\n\treturn (blo[a.l] & 1) ? a.r < b.r : a.r > b.r;\n}\n\nvoid Ins(int x) {\n\tif (!cnt[x]) bs1[x] = 1, bs2[100000 - x] = 1;\n\tcnt[x]++;\n}\n\nvoid Del(int x) {\n\tcnt[x]--;\n\tif (!cnt[x]) bs1[x] = 0, bs2[100000 - x] = 0;\n}\n\nint CalcMul(int x) {\n\tfor (int i = 1; i * i <= x; i++)\n\t\tif (x % i == 0 && bs1[i] && bs1[x / i])\n\t\t\treturn 1;\n\treturn 0;\n}\n\nint CalcDiv(int x) {\n\tfor (int i = 1; i * x <= 100000; i++)\n\t\tif (bs1[i] && bs1[i * x])\n\t\t\treturn 1;\n\treturn 0;\n}\n\nvoid CaptainMo() {\n\tsort(qs + 1, qs + qcnt + 1, Comp);\n\tint nl = 1, nr = 0;\n\tfor (int i = 1; i <= qcnt; i++) {\n\t\tint l = qs[i].l, r = qs[i].r, x = qs[i].x;\n\t\twhile (nr < r) Ins(a[++nr]);\n\t\twhile (nr > r) Del(a[nr--]);\n\t\twhile (nl > l) Ins(a[--nl]);\n\t\twhile (nl < l) Del(a[nl++]);\n\t\tif (qs[i].t == 1) ans[qs[i].i] = ((bs1 << x) & bs1).any();\n\t\telse if (qs[i].t == 2) ans[qs[i].i] = ((bs1 << (100000 - x)) & bs2).any();\n\t\telse if (qs[i].t == 3) ans[qs[i].i] = CalcMul(x);\n\t\telse ans[qs[i].i] = CalcDiv(x);\n\t}\n}\n\nvector<int> ql[MAXN], qr[MAXN], qi[MAXN];\nint pre[MAXN], maxl[MAXN];\n\nvoid Solve() {\n\tfor (int x = 1; x <= limit; x++) {\n\t\tif (ql[x].empty()) continue;\n\t\tint l = 0;\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tint y = a[i];\n\t\t\tpre[y] = i;\n\t\t    if (x * y <= 100000) l = max(l, pre[x * y]);\n\t\t\tif (y % x == 0) l = max(l, pre[y / x]);\n\t\t\tmaxl[i] = l;\n\t\t}\n\t\tfor (unsigned i = 0; i < ql[x].size(); i++)\n\t\t\tans[qi[x][i]] = (ql[x][i] <= maxl[qr[x][i]]);\n\t\tmemset(pre, 0, sizeof(pre));\n\t\tmemset(maxl, 0, sizeof(maxl));\n\t}\n}\n\nint main() {\n\tscanf(\"%d%d\", &n, &m);\n\tblock = sqrt(n);\n\tfor (int i = 1; i <= n; i++) blo[i] = (i - 1) / block + 1;\n\tfor (int i = 1; i <= n; i++) scanf(\"%d\", a + i);\n\tfor (int i = 1; i <= m; i++) {\n\t\tint opt, l, r, x;\n\t\tscanf(\"%d%d%d%d\", &opt, &l, &r, &x);\n\t\tif (opt == 4 && x <= limit)\n\t\t\tql[x].push_back(l), qr[x].push_back(r), qi[x].push_back(i);\n\t\telse\n\t\t\tqs[++qcnt] = Data(l, r, x, i, opt);\n\t}\n\tCaptainMo();\n\tSolve();\n\tfor (int i = 1; i <= m; i++) puts(ans[i] ? \"yuno\" : \"yumi\");\n\treturn 0;\n}\n```",
        "postTime": 1591964390,
        "uid": 126376,
        "name": "Irelia\u10e6",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5355 \u3010[Ynoi2017]\u7531\u4e43\u7684\u7389\u7c73\u7530\u3011"
    },
    {
        "content": "## \u601d\u8def\n\n\u83ab\u961f\u3002\n\n\u6b64\u9898\u6709\u4e00\u4e2a\u5f31\u5316\u7248\uff1a[P3674 \u5c0f\u6e05\u65b0\u4eba\u6e23\u7684\u672c\u613f](https://www.luogu.com.cn/problem/P3674)\uff0c\u5728\u8fd9\u9898\u4e2d\u53ea\u6709\u52a0\u51cf\u4e58\u4e09\u4e2a\u64cd\u4f5c\uff0c\u800c\u672c\u9898\u591a\u4e86\u4e00\u4e2a\u9664\u3002\n\n\u5bf9\u4e8e\u52a0\u51cf\u4e58\u4e09\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u53bb\u770b\u770b[\u6276\u82cf\u7684\u9898\u89e3](https://www.luogu.com.cn/blog/fusu2333/fu-su-di-bitset-qian-tan)\uff0c\u5728\u8fd9\u7bc7\u9898\u89e3\u4e2d\u4e3b\u8981\u8bb2\u8bb2\u9664\u7684\u505a\u6cd5\u3002\n\n\u8003\u8651\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n- \u5982\u679c $x \\ge \\sqrt{n}$\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u66b4\u529b\u679a\u4e3e\u5546\uff0c\u7136\u540e\u5224\u65ad\u6709\u6ca1\u6709\u51fa\u73b0\u5373\u53ef\u3002\u56e0\u4e3a\u8fd9\u4e2a\u5546 $\\le \\sqrt{n}$\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u662f\u6b63\u786e\u7684\u3002\n\n- \u5982\u679c $x < \\sqrt{n}$\uff0c\u6211\u4eec\u5c31\u8981\u53e6\u8f9f\u8e4a\u5f84\u3002\u53ef\u4ee5\u9884\u5904\u7406\u51fa $x \\in [1,\\sqrt{n})$ \u7684\u7b54\u6848\u3002\u5bf9\u4e8e\u6bcf\u4e2a $x$ \u904d\u5386\u4e00\u904d\u5e8f\u5217\uff0c\u627e\u51fa\u6bcf\u4e2a $1 \\le i \\le n$ \u7684\u79bb $i$ \u6700\u8fd1\u4e14 $\\le i$ \u7684 $tp_i$\uff0c\u6ee1\u8db3 $a_i$ \u548c $a_{tp_i}$ \u7684\u5546\u4e3a $x$\uff0c\u4e8e\u662f\u6bcf\u4e2a\u8be2\u95ee\u7684\u7b54\u6848\u4e3a $l$ \u662f\u5426 $\\le tp_{r}$\u3002\u8fd9\u4e00\u90e8\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\sqrt{n})$\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define getchar() (p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 1 << 21, stdin), p1 == p2) ? EOF : *p1++)\nchar buf[1 << 21], *p1 = buf, *p2 = buf;\ninline int read() {\n    char c = getchar();\n    int x = 0;\n    bool f = 0;\n    for (; !isdigit(c); c = getchar())\n        f ^= !(c ^ 45);\n    for (; isdigit(c); c = getchar())\n        x = (x << 1) + (x << 3) + (c ^ 48);\n    if (f)\n        x = -x;\n    return x;\n}\n\nconst int maxn = 100100, N = 100010;\n\nstruct query {\n    int l, r, id, pos, op, v;\n} q[maxn];\nint n, m, block, a[maxn], cnt[maxn], bel[maxn], tp[maxn], pre[maxn];\nbool res[maxn];\nbitset<maxn> b1, b2;\n\nstruct query2 {\n    int l, r, id;\n};\nvector<query2> qs[500];\n\nbool cmp(query a, query b){\n    return a.pos ^ b.pos ? a.l < b.l : ((a.pos & 1) ? a.r < b.r : a.r > b.r);\n}\n\nvoid add(int x) {\n    if ((++cnt[x]) == 1) {\n        b1[x] = b2[N - x] = 1;\n    }\n}\n\nvoid del(int x) {\n    if (!(--cnt[x])) {\n        b1[x] = b2[N - x] = 0;\n    }\n}\n\nint main() {\n    n = read();\n    m = read();\n    for (int i = 1; i <= n; ++i) {\n        a[i] = read();\n    }\n    block = sqrt(n);\n    for (int i = 1; i <= n; ++i) {\n        bel[i] = (i - 1) / block + 1;\n    }\n    int len = 0;\n    for (int i = 1; i <= m; ++i) {\n        int op, ql, qr, x;\n        op = read();\n        ql = read();\n        qr = read();\n        x = read();\n        if (op == 4 && x < block) {\n            qs[x].push_back({ql, qr, i});\n        } else {\n            q[++len] = (query){ql, qr, i, bel[ql], op, x};\n        }\n    }\n    sort(q + 1, q + len + 1, cmp);\n    int l = 1, r = 0;\n    for (int i = 1; i <= len; ++i) {\n        int ql = q[i].l, qr = q[i].r;\n        while (l < ql) {\n            del(a[l++]);\n        }\n        while (l > ql) {\n            add(a[--l]);\n        }\n        while (r < qr) {\n            add(a[++r]);\n        }\n        while (r > qr) {\n            del(a[r--]);\n        }\n        int op = q[i].op, x = q[i].v;\n        if (op == 1) {\n            res[q[i].id] = (b1 & (b1 << x)).any();\n        } else if (op == 2) {\n            res[q[i].id] = (b1 & (b2 >> (N - x))).any();\n        } else if (op == 3) {\n            for (int j = 1; j * j <= x; ++j) {\n                if (x % j == 0) {\n                    if (b1[j] && b1[x / j]) {\n                        res[q[i].id] = 1;\n                        break;\n                    }\n                }\n            }\n        } else {\n            int cnt = 0;\n            for (int j = 1; j * x <= N; ++j) {\n                ++cnt;\n                if (b1[j] && b1[j * x]) {\n                    res[q[i].id] = 1;\n                    break;\n                }\n            }\n        }\n    }\n    for (int i = 1; i < block; ++i) {\n        if (qs[i].empty()) {\n            continue;\n        }\n        memset(pre, 0, sizeof(pre));\n        memset(tp, 0, sizeof(tp));\n        int l = 0;\n        for (int j = 1; j <= n; ++j) {\n            pre[a[j]] = j;\n            if (a[j] * i <= N) {\n                l = max(l, pre[a[j] * i]);\n            }\n            if (a[j] % i == 0) {\n                l = max(l, pre[a[j] / i]);\n            }\n            tp[j] = l;\n        }\n        for (int j = 0; j < qs[i].size(); ++j) {\n            res[qs[i][j].id] = qs[i][j].l <= tp[qs[i][j].r];\n        }\n    }\n    for (int i = 1; i <= m; ++i) {\n        puts(res[i] ? \"yuno\" : \"yumi\");\n    }\n    return 0;\n}\n```\n",
        "postTime": 1621849668,
        "uid": 275273,
        "name": "zltqwq",
        "ccfLevel": 0,
        "title": "P5355 \u9898\u89e3"
    },
    {
        "content": "~~\u4e45\u8fdd\u7684Ynoi\u4e00\u8840~~\n\n\u5176\u5b9e\u5c31\u662fP3674+P5313\u90a3\u4e2a\u5957\u8def\u3002\n\n\u524d\u4e09\u95ee\u4e0d\u8bf4\u4e86\uff0c\u8bf7\u53bb\u770bP3674\u7684\u9898\u89e3\u3002\n\n\u8003\u8651\u7b2c\u56db\u95ee\u3002\n\n\u8fd8\u662f\u83ab\u961f\uff0c\u7136\u540e\u6570\u636e\u5206\u6cbb\u4e00\u4e0b\u3002\n\n\u8bbe\u9608\u503c\u4e3a$S$\u3002\n\n\u5bf9\u4e8e$x>S$\u7684\u90e8\u5206\uff0c\u53ef\u80fd\u7684\u89e3\u7684\u5bf9\u6570\u53ea\u6709$\\frac{10^5}{x}$\u79cd\uff0c\u662f\u4e2a\u80fd\u63a5\u53d7\u7684\u679a\u4e3e\u8303\u56f4\uff0c\u83ab\u961f\u7684\u65f6\u5019\u76f4\u63a5\u679a\u4e3e\u627e\u89e3\u5373\u53ef\u3002\n\n\u5bf9\u4e8e$x\\leqslant S$\u7684\u90e8\u5206\uff0c\u6839\u636e\u5957\u8def\uff0c\u6211\u4eec\u5bf9\u6bcf\u4e2a$x$\u8fdb\u884c\u4e00\u6b21\u83ab\u961f\uff0c\u7528```bitset```\u5b58\u6240\u6709\u51fa\u73b0\u8fc7\u7684$val$\u503c\u548c$\\frac{val}{x}$\u503c\u3002\u67e5\u8be2\u7684\u65f6\u5019```and```\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u7136\u540e\u624b\u52a8\u4e8c\u5206\u4e00\u4e0b$S$\u7684\u503c\u5373\u53ef\u3002",
        "postTime": 1557224126,
        "uid": 6813,
        "name": "mrsrz",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5355 \u3010[Ynoi2017]\u7531\u4e43\u7684\u7389\u7c73\u7530\u3011"
    },
    {
        "content": "\u6ce8\uff1a\u4fee\u6539\u4e86\u683c\u5f0f\uff0c\u7b2c\u4e8c\u6b21\u63d0\u4ea4\u3002\n\n\u5982\u679c\u4f60\u53ea\u4f1a\u505a\u524d\u4e09\u4e2a\u64cd\u4f5c\uff0c\u53ef\u4ee5\u8df3\u8f6c[P3674 \u5c0f\u6e05\u65b0\u4eba\u6e23\u7684\u672c\u613f](https://www.luogu.org/problem/P3674)\n\n\u76ee\u524d\u662f\u672c\u9898rank1\u3002\uff08\u6709\u4e00\u4e9b\u76ee\u524d\u53ea\u6709\u6211\u5199\u7684\u5c0f\u4f18\u5316\uff09\n\n\u4e0d\u7528\u8bf4\uff0cn\u548cm <= 100000, \u8be2\u95ee\u53ef\u4ee5\u79bb\u7ebf\u5c31\u6307\u660e\u4e86\u83ab\u961f\u7b97\u6cd5\u3002\n\n\u53f6\u56fd\u5e73\u8001\u5e08(\u867d\u7136\u4e0d\u662f\u6211\u7684\u6559\u7ec3)\u7684PPT\u4e0a\u5c31\u6709\u5bf9\u524d\u4e09\u79cd\u64cd\u4f5c\u7684\u89e3\u91ca\n\n\u53ef\u4ee5\u8003\u8651\u7ef4\u62a4\u4e00\u4e2abitset S \u8868\u793a\u6570\u5b57\u7684\u51fa\u73b0\u60c5\u51b5\u3002\n\n\u5148\u8003\u8651\u51cf\u6cd5\u600e\u4e48\u505a\u3002\u8be2\u95ee\u662f\u5426\u5b58\u5728a,b\u6ee1\u8db3a - b = x\u3002\n\na - b = x\u5c31\u76f8\u5f53\u4e8ea = b + x,\u5373\u5b58\u5728b\u548cb + x\u5373\u53ef\u3002\n\n\u5c06S\u4e0e(S << x)\u6309\u4f4d & \u4e00\u4e0b\u5224\u65ad\u662f\u5426\u67091\u5373\u53ef\u3002\n\n\u5355\u6b21\u8be2\u95ee\u590d\u6742\u5ea6O(N / w)\u3002\n\n\u52a0\u6cd5\u7c7b\u4f3c\u3002\u4e5f\u662f\u7528bitset\u7ef4\u62a4\uff08\u8bdd\u8bf4S\u8fd8\u53ef\u4ee5\u5f53bool\u6570\u7ec4\uff09\n\n\u800c\u4e58\u6cd5\u53ef\u4ee5\u66b4\u529b\u7b5b\uff0cx <= 10^5\uff0c\u76f4\u63a5O(sqrt(x))\u679a\u4e3e\u56e0\u5b50\u5224\u65ad\u3002\n\n\u90a3\u9664\u6cd5\u5462\uff1f\u5982\u679c\u4f60\u66b4\u529b\u7b5b\u90a3\u4f1aTLE\u4e00\u5230\u4e24\u4e2a\u70b9\u3002\n\n\u53ef\u4ee5\u8003\u8651\u6570\u636e\u5206\u6cbb\u5904\u7406x <= 500\u7684\u5c0f\u6570\u636e\uff0c\u5b83\u4f1a\u5361\u6b7b\u66b4\u529b\u3002\n\n\u5230\u6b64\u4e3a\u6b62\uff0c\u4f60\u7684\u7b97\u6cd5\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\uff0c\u53ef\u5982\u679c\u4f60\u8fd8\u60f3\u4f18\u5316\u4e00\u4e0b\u7b2c\u56db\u4e2a\u8be2\u95ee\uff0c\u53ef\u4ee5\u5f80\u4e0b\u770b\u3002\n\n\u5f88\u591a\u4eba\u5904\u7406\u5927\u6570\u636e\u7684\u5199\u6cd5\u662f\u8fd9\u6837\u7684\uff1a\n\n```cpp\ninline bool Q4(int l, int r, int x) {\n\tif (x == 0) return false;\n\tif (x == 1) return f.count() - f[0] >= 1;\n\tfor (int i = 1; i * x <= N; i++)\n\tif (f[i] && f[i * x]) return true;\n\treturn false;\n}\n```\n\u800c\u5b9e\u9645\u4e0a\u6700\u5c0f\u503c\u4e0d\u662f1\uff0c\u6700\u5927\u503c\u4e5f\u4e0d\u662fN\u3002\n\n\u8fd9\u4f1a\u9020\u6210\u6d6a\u8d39\uff0c\u5c3d\u7ba1\u4f60\u5206\u6cbb\u4e86x\u5c0f\u4e8e500\u7684\u6570\u636e\u3002\n\n\u65e2\u7136\u6570\u636e\u6ca1\u6539\u52a8\uff0c\u5b8c\u5168\u53ef\u4ee5\u7528ST\u8868\u9884\u5904\u7406\u51fa\u8fb9\u754c\u3002\n\n\u50cf\u8fd9\u6837\uff1a\n\n```cpp\nint maxx[N + 1][21], minn[N + 1][21];\nint mi, ma, logg[N + 1];\n\ninline void query(int l, int r) {\n\tregister int tmp = logg[r - l + 1]; \n\tma = max(maxx[l][tmp], maxx[r - (1 << tmp) + 1][tmp]);\n\tmi = min(minn[l][tmp], minn[r - (1 << tmp) + 1][tmp]);\n}\n\ninline void ST_init(void) {\n\tmemset (minn, 0x3f, sizeof minn ); logg[0] = -1;\n\tfor (register int i = 1; i <= n; i++)\n\t\tmaxx[i][0] = minn[i][0] = a[i], logg[i] = logg[i >> 1] + 1;\n\tfor (int j = 1; j <= 20; j++)\n\t\tfor (int i = 1; i + (1 << j) - 1 <= n; i++)\n    \t\tmaxx[i][j] = max(maxx[i][j - 1], maxx[i + (1 << (j - 1))][j - 1]),\n    \t\tminn[i][j] = min(minn[i][j - 1], minn[i + (1 << (j - 1))][j - 1]);\n}\n      \ninline bool Q4(int l, int r, int x) {\n\tif (x == 0) return false;\n\tif (x == 1) return f.count() - f[0] >= 1;\n\tquery(l, r);\n\tfor (int i = mi; i * x <= ma; i++)\n\tif (f[i] && f[i * x]) return true;\n\treturn false;\n}\n```\n\n\u8fd9\u5c31\u53ef\u4ee5\u63d0\u5347\u4f60\u7684\u6548\u7387\u3002\n\n\u8fd8\u6709\u51e0\u70b9\u63d0\u9192\uff0c\u8981\u52a0fread\u548cfwrite\u3002\n\n\u5757\u7684\u5927\u5c0f\u5728\u8fd9\u9053\u9898\u53ef\u4ee5\u662fn / (int) sqrt(m + 1.5) + 1\n\n\u6392\u5e8f\u8981\u5229\u7528\u5947\u5076\u6027\u4e0d\u8981\u5355\u7eaf\u6309\u7167l\u548cr\u3002\n\n\u5904\u7406ST\u8868\u65f6\u4e0d\u8981\u7528cpp\u81ea\u5e26\u7684log2\u51fd\u6570(\u5de8\u6162)\u3002\n\n\u5c31\u8bf4\u8fd9\u4e48\u591a\u4e86\u3002\n\n\u4e3b\u8981\u7a0b\u5e8f\uff1a\n\n```cpp\nenum {\n\tN = 100000\n};\n\nint n, m, k;\nint cnt[N + 1], a[N + 1], b[N + 1], bel[N + 1];\nbool ans[N + 1];\nbitset <N + 1> f, h, g;\n\nstruct Node {\n\tint opt, l, r, x, idx;\n} q[N + 1];\n\nvector <Node> q2[500];\n\ninline void add(int x) {\n\tint p = a[x], q = b[x]; ++cnt[p];\n\tif (cnt[p]) f[p] = 1, g[q] = 1; \n\telse f[p] = 0, g[q] = 0;\n}\n\ninline void del(int x) {\n\tint p = a[x], q = b[x]; --cnt[p];\n\tif (cnt[p]) f[p] = 1, g[q] = 1; \n\telse f[p] = 0, g[q] = 0;\n}\n\nint maxx[N + 1][21], minn[N + 1][21];\nint mi, ma, logg[N + 1];\n\ninline void query(int l, int r) {\n\tregister int tmp = logg[r - l + 1]; \n\tma = max(maxx[l][tmp], maxx[r - (1 << tmp) + 1][tmp]);\n\tmi = min(minn[l][tmp], minn[r - (1 << tmp) + 1][tmp]);\n}\n\ninline void ST_init(void) {\n\tmemset (minn, 0x3f, sizeof minn ); logg[0] = -1;\n\tfor (register int i = 1; i <= n; i++)\n\t\tmaxx[i][0] = minn[i][0] = a[i], logg[i] = logg[i >> 1] + 1;\n\tfor (int j = 1; j <= 20; j++)\n\t\tfor (int i = 1; i + (1 << j) - 1 <= n; i++)\n    \t\tmaxx[i][j] = max(maxx[i][j - 1], maxx[i + (1 << (j - 1))][j - 1]),\n    \t\tminn[i][j] = min(minn[i][j - 1], minn[i + (1 << (j - 1))][j - 1]);\n}\n\ninline bool Q1(int x) {\n\th = f; h <<= x; h &= f;\n\treturn h.any();\n}\n\ninline bool Q2(int x) {\n\th = g; h >>= N - x; h &= f;\n\treturn h.any();\n}\n\ninline bool Q3(int x) {\n\tfor (int i = 1; i * i <= x; i++)\n\tif (x % i == 0 && f[i] && f[x / i])\n\t\treturn true; return false;\n}\n\ninline bool Q4(int l, int r, int x) {\n\tif (x == 0) return false;\n\tif (x == 1) return f.count() - f[0] >= 1;\n\tquery(l, r);\n\tfor (int i = mi; i * x <= ma; i++)\n\tif (f[i] && f[i * x]) return true;\n\treturn false;\n}\n\nclass Compare {\npublic:\n\tinline bool operator () (const Node&p, const Node&q) {\n\t\tif (bel[p.l] == bel[q.l]) return p.r < q.r != (bel[p.l] & 1);\n\t\treturn p.l < q.l;\n\t}\n};\n\nint tot = 1;\ninline bool cmp(const Node&p, const Node&q) {\n\treturn p.l < q.l;\n}\n\ninline void solve(int c) {\n\tif (q2[c].empty()) return;\n\tint l, r, i; ll sum = 0;\n\tvector <Node> :: iterator it; Ms(cnt, 0);\n\tsort(q2[c].begin(), q2[c].end(), cmp);\n\tfor (l = q2[c][0].l, r = l - 1; r <= n && !sum;)\n\t\tif(a[++r] && r <= n) {\n\t\t\tcnt[a[r]]++;\n\t\t\tif (a[r] * c < N) sum += cnt[a[r] * c];\n\t\t\tif (!(a[r] % c)) sum += cnt[a[r] / c];\n\t\t}\n\tfor (it = q2[c].begin(); it != q2[c].end(); ++it) {\n\t\tfor (; l < it->l;) {\n\t\t\tif (a[l] * c < N) sum -= cnt[a[l] * c];\n\t\t\tif (!(a[l] % c)) sum -= cnt[a[l] / c];\n\t\t\tcnt[a[l++]]--;\n\t\t\tfor (; r <= n && !sum;)\n\t\t\t\tif (a[++r] && r <= n) {\n\t\t\t\t\tcnt[a[r]]++;\n\t\t\t\t\tif (a[r] * c < N) sum += cnt[a[r] * c];\n\t\t\t\t\tif (!(a[r] % c)) sum += cnt[a[r] / c];\n\t\t\t\t}\n\t\t}\n\t\tans[it->idx] = it->r >= r;\n\t}\n}\n\nsigned main(void) {\n\tread(n), read(m); k = n / (int) sqrt(m + 1.5) + 1;\n\tfor (int i = 1; i <= n; i++)\n\t\tread(a[i]), b[i] = N - a[i],\n\t\tbel[i] = (i - 1) / k + 1;\n\tST_init();\n\tfor (int i = 1; i <= m; i++) {\n\t\tread(q[tot].opt), read(q[tot].l),\n\t\tread(q[tot].r), read(q[tot].x), q[tot].idx = i;\n\t\tif (q[tot].opt != 4 || q[tot].x >= 500 || q[tot].x <= 1) ++tot;\n\t\telse q2[q[tot].x].push_back(q[tot]);\n\t}\n\t\n\tfor (int i = 0; i < 500; i++) solve(i);\n\tMs(cnt, 0);\n\tsort(q + 1, q + m + 1, Compare());\n\t\n\tint l = 1, r = 0, x, idx;\n\tfor (register int i = 1; i <= m; i++) {\n\t\tx = q[i].x, idx = q[i].idx;\n\t\twhile (r < q[i].r) add(++r);\n\t\twhile (r > q[i].r) del(r--);\n\t\twhile (l < q[i].l) del(l++);\n\t\twhile (l > q[i].l) add(--l);\n\t\tif (q[i].opt == 1) ans[idx] = Q1(x);\n\t\telse if (q[i].opt == 2) ans[idx] = Q2(x);\n\t\telse if (q[i].opt == 3) ans[idx] = Q3(x);\n\t\telse ans[idx] = Q4(l, r, x);\n\t}\n\t\n\tfor (int i = 1; i <= m; i++)\n\t{\n\t\tot('y'), ot('u');\n\t\tif (ans[i]) {\n\t\t\tot('n'), ot('o');\n\t\t} else {\n\t\t\tot('m'), ot('i');\n\t\t} ot('\\n');\n\t} fwrite(pf, 1, o1 - pf, stdout);\n\treturn 0;\n}\n\n/**/\n\n```\n",
        "postTime": 1564473971,
        "uid": 50925,
        "name": "EternalEpic",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5355 \u3010[Ynoi2017]\u7531\u4e43\u7684\u7389\u7c73\u7530\u3011"
    },
    {
        "content": "[$\\large \\texttt{Ynoi2017 \u7531\u4e43\u7684}$~~\u8d6b\u9c81\u6653\u592b~~$\\large \\texttt{\u7389\u7c73\u7530}$](http://xc.fubuki.cn/ynoi2017Nikita_Sergeyevich_Khrushchev/)\n\n\u6211\u8fd9\u4e2a\u83dc\u9e21\u7ec8\u4e8e\u4f1a\u4e00\u9053\u7531\u4e43OI\u9898\u4e86\u3002\n\n\u672c\u9898\u5f31\u5316\u7248\uff1a[P3674 \u5c0f\u6e05\u65b0\u4eba\u6e23\u7684\u672c\u613f ](https://www.luogu.org/problemnew/show/P3674)\n\n\u672c\u9898\u7684\u64cd\u4f5c1~3\u53ef\u4ee5\u76f4\u63a5\u4eceP3674\u8d3a\u8fc7\u6765\u3002\n\n\u6ce8\u610f\uff0c\u9664\u6cd5\u8be2\u95ee\u8981\u6c42**\u6574\u9664**\u3002\n\n\u5bf9\u4e8e\u9664\u6cd5\u7684\u8be2\u95ee\uff0c\u82e5\u6709 $ x \\ge \\sqrt{max\\{a_i\\}} $ \u5219\u66b4\u529b\u67e5\u627e\uff0c\u5355\u6b21\u590d\u6742\u5ea6 $O(\\sqrt{n})$ \u3002\n\n\u5bf9\u4e8e\u5269\u4e0b\u7684\u6bcf\u4e2a $x$ \u7684\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 $O(n\u00b7log_2\u00b7n+q)$ \u7684\u65f6\u95f4\u5185\u5904\u7406\u51fa\u6240\u6709\u8be5\u503c\u7684\u7b54\u6848\uff1a\u5148\u5c06\u8be2\u95ee\u6309\u5de6\u7aef\u70b9\u964d\u5e8f\u6392\u5217\u3002\u7136\u540e\u53d6\u4e00\u4e2a\u6307\u9488\uff0c\u4e00\u5f00\u59cb\u6307\u5411 $n$ \u3002\u82e5\u5f53\u524d\u8be2\u95ee\u7684\u5de6\u7aef\u70b9\u4e3a $l$ \uff0c\u5219\u5c06 $[l,j]$ \u4e0a\u6240\u6709\u5143\u7d20\u7684\u8d21\u732e\u63d2\u5165\u6811\u72b6\u6570\u7ec4\u4e2d\uff0c\u5e76\u4f7f $j = l - 1$\uff0c\u5b8c\u6210\u540e\u76f4\u63a5\u5728\u6811\u72b6\u6570\u7ec4\u4e0a\u83b7\u53d6\u5f53\u524d\u8be2\u95ee\u7684\u7b54\u6848\u3002\n\n\u8fd9\u4e00\u90e8\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\sqrt{max\\{a_i\\}}\u00b7log_2n+q)$\n\n\u6ce8\u610f\u8be2\u95ee\u4e2d\u53ef\u80fd\u5b58\u5728 $x=0$ \u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\sqrt{max\\{a_i\\}}\u00b7log_2n+q+\\frac{n\u00b7q}{64})$\n\n```cpp\n// \u5199\u5f97\u5f88\u957f\uff0c\u5e38\u6570\u5f88\u5927\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <bitset>\n#include <cmath>\n#define maxn 100005\n\nusing namespace std;\n\nbitset<maxn << 1> vis[2], flg;\nint pos[maxn], n, m, ans[maxn], a[maxn], nxt[maxn];\nint cnt[maxn], blck, Maxi, len, lim, tot, c[maxn];\nint sum[maxn];\n\nclass Query\n{\n  public:\n    int l, r, opt, x, id;\n    bool operator < (const Query b)const\n    {\n        if (pos[l] != pos[b.l])\n            return pos[l] < pos[b.l];\n        return (pos[l] & 1) ? r < b.r : r > b.r;\n    }\n} q[maxn], d[maxn];\n\nbool cmp(const Query &a, const Query &b)\n{\n    return a.x < b.x || (a.x == b.x && a.l > b.l);\n}\n\ninline int read()\n{\n    char ch = getchar();\n    int ret = 0, f = 1;\n    while (ch > '9' || ch < '0')\n    {\n        if (ch == '-')\n            f = -f;\n        ch = getchar();\n    }\n    while (ch >= '0' && ch <= '9')\n        ret = ret * 10 + ch - '0', ch = getchar();\n    return ret * f;\n}\n\ninline void add(int x)\n{\n    ++cnt[a[x]];\n    if (cnt[a[x]] == 1)\n    {\n        vis[0][a[x] + maxn] = 1;\n        vis[1][maxn - a[x]] = 1;\n    }\n}\n\ninline void del(int x)\n{\n    --cnt[a[x]];\n    if (!cnt[a[x]])\n    {\n        vis[0][a[x] + maxn] = 0;\n        vis[1][maxn - a[x]] = 0;\n    }\n}\n\ninline int Min(const int &x, const int &y)\n{\n    return x < y ? x : y;\n}\n\ninline void Add(int k, const int &x)\n{\n    while (k <= n)\n    {\n        c[k] = Min(c[k], x);\n        k += k & -k;\n    }\n}\n\ninline int Ask(int k)\n{\n    int res = n + 1;\n    while (k)\n    {\n        res = Min(res, c[k]);\n        k -= k & -k;\n    }\n    return res;\n}\n\nvoid Solve()\n{ // \u5904\u7406\u6240\u6709 x <= sqrt(max{a[i]}) \u7684\u8be2\u95ee\n    sort(d + 1, d + 1 + tot, cmp);\n    for (int l = 1, r; l <= tot; l = r + 1)\n    {\n        r = l + 1;\n        while (d[r].x == d[l].x && r <= tot)\n            ++r;\n        --r;\n        memset(c, 127, sizeof(c));\n        memset(nxt, 127, sizeof(nxt));\n        for (int i = l, j = n; i <= r; ++i)\n        {\n            while (j >= d[i].l)\n            {\n                nxt[a[j]] = j;\n                if (1ll * a[j] * d[l].x <= 1ll * Maxi)\n                    Add(j, nxt[a[j] * d[l].x]);\n                if (a[j] % d[l].x == 0)\n                    Add(j, nxt[a[j] / d[l].x]);\n                --j;\n            }\n            if (d[i].l > d[i].r)\n                ans[d[i].id] = 0;\n            else\n                ans[d[i].id] = (Ask(d[i].r) <= d[i].r);\n        }\n    }\n}\n\nint main()\n{\n    n = read(), m = read();\n    blck = sqrt(n);\n    for (int i = 1; i <= n; ++i)\n    {\n        a[i] = read(), pos[i] = (i - 1) / blck + 1;\n        Maxi = max(Maxi, a[i]);\n        sum[i] = sum[i - 1] + (a[i] == 0 ? 1 : 0);\n    }\n    lim = sqrt(Maxi);\n    for (int i = 1; i <= m; ++i)\n    {\n        ++len;\n        q[len].opt = read();\n        q[len].l = read(), q[len].r = read();\n        q[len].x = read();\n        q[len].id = i;\n        if (q[len].opt == 4 && q[len].x <= lim && q[len].x != 0)\n        {\n            d[++tot] = q[len];\n            --len;\n        }\n    }\n    Solve();\n    sort(q + 1, q + 1 + len);\n    register int L = 1, R = 0;\n    for (int i = 1; i <= len; ++i)\n    {\n        while (R < q[i].r)\n            add(++R);\n        while (L > q[i].l)\n            add(--L);\n        while (L < q[i].l)\n        {\n            del(L);\n            ++L;\n        }\n        while (R > q[i].r)\n        {\n            del(R);\n            --R;\n        }\n        if (q[i].opt == 1)\n        {\n            ans[q[i].id] = ((vis[0] >> q[i].x) & vis[0]).any();\n        }\n        else if (q[i].opt == 2)\n        {\n            ans[q[i].id] = ((vis[0] >> q[i].x) & vis[1]).any();\n        }\n        else if (q[i].opt == 3)\n        {\n            ans[q[i].id] = 0;\n            if (vis[0][maxn] && q[i].x == 0)\n            {\n                ans[q[i].id] = 1;\n                continue;\n            }\n            for (int k = 1; k * k <= q[i].x; ++k)\n            {\n                if (q[i].x % k)\n                    continue;\n                if (vis[0][k + maxn] && vis[0][q[i].x / k + maxn])\n                {\n                    ans[q[i].id] = 1;\n                    break;\n                }\n            }\n        }\n        else\n        {\n            ans[q[i].id] = 0;\n            if (q[i].x == 0)\n            {\n                if (vis[0][maxn] && cnt[0] < R - L + 1)\n                    ans[q[i].id] = 1;\n            }\n            else\n            {\n                for (int k = 1, j = q[i].x; j <= Maxi; ++k, j += q[i].x)\n                {\n                    if (vis[0][k + maxn] && vis[0][j + maxn])\n                    {\n                        ans[q[i].id] = 1;\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    for (int i = 1; i <= m; ++i)\n        printf(\"%s\\n\", ans[i] ? \"yuno\" : \"yumi\");\n    return 0;\n}\n```\n\n$\\color{white} \\text{\u7531\u4e43\u53ef\u7231\uff0c\u6b20\u96f7\u8d5b\u9ad8}$",
        "postTime": 1557299043,
        "uid": 32831,
        "name": "\u5439\u96ea\u5439\u96ea\u5439",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5355 \u3010[Ynoi2017]\u7531\u4e43\u7684\u7389\u7c73\u7530\u3011"
    },
    {
        "content": "[P5355 [Ynoi2017] \u7531\u4e43\u7684\u7389\u7c73\u7530](/problem/P5355)\n\n\u8fd9\u4e2a\u9898\u9762\u8fd8\u7b97\u5f88\u6e05\u6670\u4e86\u3002\u3002\u521a\u770b\u5230\u9898\u9762\u6211\u8fd8\u4ee5\u4e3a\u8fd9\u9898\u5f88\u5c51\u3002\u3002\u4e00\u4e2a\u5c0f\u65f6\u4e4b\u540e\u6211\u518d\u4e5f\u63a8\u4e0d\u52a8\u67ff\u5b50\u4e86\u3002\u3002\n\n---\n\n\u9996\u5148\u5bb9\u6613\u770b\u51fa\u7684\u662f\u83ab\u961f\u91cc\u7ef4\u62a4\u6bcf\u4e2a\u6570\u662f\u5426\u51fa\u73b0\uff0c\u7136\u540e\u7b97\u7b54\u6848\u7684\u65f6\u5019\u7edf\u8ba1\uff0c**\u56e0\u4e3a\u6bcf\u6b21\u8be2\u95ee\u53ea\u9700\u8981\u8c03\u7528\u4e00\u6b21\u7edf\u8ba1\u51fd\u6570\uff0c\u6240\u4ee5\u7edf\u8ba1\u51fd\u6570\u590d\u6742\u5ea6 $\\sqrt n$ \u4e5f\u662f\u53ef\u4ee5\u7684**\u3002\n\n\u5148\u6765\u770b\u52a0\u6cd5\u548c\u51cf\u6cd5\u3002\u666e\u901a\u7684 `bool vis[maxn]` \u5df2\u7ecf\u65e0\u6cd5\u5b9e\u73b0\u8fd9\u4e9b\u64cd\u4f5c\uff0c\u8fd9\u91cc\u9700\u8981 `bitset<maxn>` \u6765\u8bb0\u5f55\u3002  \n\u7ef4\u62a4\u4e24\u4e2a `bitset` \u5206\u522b\u4e3a $b1,b2$\u3002$b1_i$ \u8bb0\u5f55 $i$ \u662f\u5426\u51fa\u73b0\uff0c$b2_i$ \u8bb0\u5f55 $10^5-i$ \u662f\u5426\u51fa\u73b0\uff08\u8fd9\u4e2a\u662f\u51cf\u6cd5\u7528\uff09\u3002  \n\u6240\u4ee5\u52a0\u6cd5\u7684\u7b54\u6848\u662f `b1&(b1<<x)`\uff0c\u51cf\u6cd5\u7684\u7b54\u6848\u662f `b2&b1<<(1e5-x)`\u3002\n\n\u7136\u540e\u662f\u4e58\u6cd5\u3002\u53d1\u73b0\u53ea\u9700\u8981\u679a\u4e3e $i$ \u4ece $1$ \u5230 $\\sqrt n$\uff0c\u5982\u679c $i$ \u548c $\\dfrac{n}{i}$\uff08\u5fc5\u987b\u662f\u6574\u9664\uff09\u540c\u65f6\u51fa\u73b0\uff0c\u90a3\u4e48\u5c31\u6709\u7b54\u6848\u3002\n\n\u6700\u540e\u662f\u9634\u95f4\u7684\u9664\u6cd5\u3002\u8fd9\u91cc\u662f\u9700\u8981\u6839\u53f7\u5206\u6cbb\u7684\u3002\u5047\u5982 $x\\gt\\sqrt n$\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u679a\u4e3e\u6240\u6709 $x$ \u7684\u500d\u6570 $ax$\uff0c\u5982\u679c $ax$ \u548c $x$ \u540c\u65f6\u51fa\u73b0\uff0c\u90a3\u4e48\u5c31\u6709\u7b54\u6848\u3002\n\n\u597d\uff0c~~\u5361\u4e86\u6211\u4e00\u4e2a\u5c0f\u65f6\u7684\u96be\u70b9\u7ec8\u4e8e\u6765\u4e86~~\uff0c\u5f53 $x\\le\\sqrt n$ \u65f6\u600e\u4e48\u529e\uff1f\n\n\u9996\u5148\uff0c**\u83ab\u961f\u662f\u4e0d\u53ef\u80fd\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\uff08\u5982\u679c\u8981\u89e3\u51b3\u5c31\u65e0\u6cd5\u4fdd\u8bc1\u590d\u6742\u5ea6\uff09**\uff0c\u6211\u4eec\u9700\u8981\u7528\u5176\u4ed6\u7684\u529e\u6cd5\u3002\n\n\u7531\u4e8e\u8fd9\u65f6 $x$ \u53ea\u53ef\u80fd\u6709 $\\sqrt n$ \u4e2a\u503c\uff0c\u6240\u4ee5\u628a\u76f8\u540c\u7684\u503c\u653e\u5728\u4e00\u8d77\u5904\u7406\u3002\n\n\u5b9a\u4e49\u4e24\u4e2a\u6570\u7ec4 $l,ans$\u3002$l_i$ \u4ee3\u8868\u76ee\u524d\u5728\u5904\u7406\u4e2d $i$ \u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff1b\u540c\u65f6\u7ef4\u62a4\u4e00\u4e2a\u4f4d\u7f6e $left$\uff0c\u6ee1\u8db3 $left$ \u4e0e $ans_i$ \u521a\u597d\u662f **\u6700\u540e\u7684** \u4e24\u4e2a\u4f4d\u7f6e\uff0c\u4e14\u4ed6\u4eec\u7684\u5546\u4e3a $x$\u3002\u6700\u540e\u5224\u65ad\u5f53\u524d\u7684\u7684 $l$ \u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e $ans_r$\uff08\u5982\u679c\u5927\u4e8e\uff0c\u5c31\u4e0d\u5b58\u5728\u90a3\u4e24\u4e2a\u7b26\u5408\u6761\u4ef6\u7684\u4f4d\u7f6e\uff09  \n\u6bcf\u4e00\u6b21\u7684\u5904\u7406\u5c31\u662f $1\\to n$ \u626b\u4e00\u904d\uff0c\u4e58\u4e0a $\\sqrt n$ \u4e2a\u503c\u5c31\u662f $\\mathcal O(n\\sqrt n)$\u3002\n\n---\n\n\u5982\u679c\u6ca1\u61c2\u53ef\u4ee5\u53bb\u770b\u770b\u4ee3\u7801\u3002\n\n```cpp\n#include<stdio.h>\n#include<math.h>\n#include<string.h>\n#include<bitset>\n#include<algorithm>\n#include<vector>\n\ninline int max2(register int a,register int b){ return a>b?a:b; }\ninline int min2(register int a,register int b){ return a<b?a:b; }\n\n#ifdef ONLINE_JUDGE\nstatic char buf[1000000],*p1=buf,*p2=buf;\n#define getchar() p1==p2&&(p2=(p1=buf)+fread(buf,1,1000000,stdin),p1==p2)?EOF:*p1++\n#endif\n\ninline int read(){\n    register int x = 0;\n    register char c = getchar();\n    for(;c < '0' || c > '9';c = getchar());\n    for(;c >= '0' && c <= '9';c = getchar())\n        x = x * 10 + (c ^ '0');\n    return x;\n}\n\nconst int maxn = 2e5 + 5;\nconst int N = 2e5;\nconst int sqr = sqrt(N);\n\nint n,m,a[maxn],bl;\nbool bs[maxn],vis[maxn];\n\nint ans[maxn],cc[maxn];\n\nstd::bitset<maxn> b1,b2;\n\nvoid add(int x){ if(!cc[x]++) b1[x] = b2[N - x] = 1; }\n\nvoid del(int x){ if(!--cc[x]) b1[x] = b2[N - x] = 0; }\n\nint ask(int x,int o){\n\tif(o == 1) return (b1 & (b1 << x)).any();\n\tif(o == 2) return (b2 & (b1 << (N - x))).any();\n\tif(o == 3){\n\t\tfor(int i = 1;i <= sqr;++i)\n\t\t\tif(x % i == 0 && b1[i] && b1[x / i]) return true;\n\t\treturn false;\n\t}\n\tif(o == 4){ // sqrt divide\n\t\tfor(int i = 1;i * x <= N;++i)\n\t\t\tif(b1[i] && b1[i * x]) return true;\n\t\treturn false;\n\t}\n}\n\nnamespace _{\n\tstruct qry{ int l,r,i; };\n\t\n\tstd::vector<qry> q[sqr];\n\tint pos[maxn],cnt[maxn];\n\t\n\tvoid calc(){\n\t\tfor(int i = 1;i <= sqr;++i){\n\t\t\tmemset(pos,0,sizeof pos);\n\t\t\tmemset(cnt,0,sizeof cnt);\n\t\t\tint lf = 0;\n\t\t\tfor(int j = 1;j <= n;++j){\n\t\t\t\tpos[a[j]] = j;\n\t\t\t\tif(a[j] % i == 0) lf = max2(lf,pos[a[j] / i]);\n\t\t\t\tif(a[j] * i <= N) lf = max2(lf,pos[a[j] * i]);\n\t\t\t\tcnt[j] = lf;\n\t\t\t}\n\t\t\tfor(qry p : q[i]) ans[p.i] = p.l > cnt[p.r] ? false : true;\n\t\t}\n\t}\n}\n\nstruct qry{ int op,l,r,x,i,b; } q[maxn]; int ln;\n\nbool cmp(qry a,qry b){\n\treturn a.b ^ b.b ? a.b < b.b : a.b & 1 ? a.r < b.r : a.r > b.r;\n}\n\nint main(){\n\tn = read(),m = read();\n\tbl = sqrt(n);\n\tfor(int i = 1;i <= n;++i)\n\t\tbs[a[i] = read()] = true;\n\tfor(int i = 1;i <= m;++i){\n\t\tint op = read(),l = read(),r = read(),x = read();\n\t\tif(op == 4 && x <= sqr)\n\t\t\t_::q[x].push_back((_::qry){l,r,i});\n\t\telse {\n\t\t\t++ln;\n\t\t\tq[ln].l = l,q[ln].r = r,q[ln].op = op,q[ln].x = x;\n\t\t\tq[ln].i = i,q[ln].b = (q[ln].l - 1) / bl + 1;\n\t\t}\n\t}\n\t_::calc();\n\tstd::sort(q + 1,q + ln + 1,cmp);\n\tint l = 1,r = 0;\n\tfor(int i = 1;i <= ln;++i){\n\t\twhile(r < q[i].r) add(a[++r]);\n\t\twhile(l > q[i].l) add(a[--l]);\n\t\twhile(r > q[i].r) del(a[r--]);\n\t\twhile(l < q[i].l) del(a[l++]);\n\t\tans[q[i].i] = ask(q[i].x,q[i].op); \n\t}\n\tfor(int i = 1;i <= m;++i) printf(ans[i] ? \"yuno\\n\" : \"yumi\\n\");\n\treturn 0;\n}\n```",
        "postTime": 1642428069,
        "uid": 368107,
        "name": "xfrvq",
        "ccfLevel": 7,
        "title": "\u9898\u89e3-P5355"
    },
    {
        "content": "## \u9898\u610f  \n\u56db\u79cd\u64cd\u4f5c\uff0c\u6bcf\u79cd\u64cd\u4f5c\u8be2\u95ee\u4e00\u4e2a\u533a\u95f4\uff0c\u95ee\u662f\u5426\u6709\u4e24\u4e2a\u6570\u901a\u8fc7\u52a0\u3001\u51cf\u3001\u4e58\u3001\u9664\u56db\u5219\u8fd0\u7b97\u80fd\u5f97\u5230\u4e00\u4e2a\u6570 $x$  \n## \u524d\u7f6e\u77e5\u8bc6  \n\u83ab\u961f\u3001$bitset$   \n\u5173\u4e8e $bitset$  \u53ef\u4ee5\u770b[\u6276\u82cf\u7684bitset\u6d45\u8c08](https://www.cnblogs.com/yifusuyi/p/10072729.html)\uff0c\u8bb2\u7684\u975e\u5e38\u8be6\u7ec6\u5177\u4f53  \n## \u4e00\u4e9b\u95f2\u8bdd  \n\u8fd9\u9898\u6709\u4e2a\u7b80\u5355\u7248\u672c\uff0c\u5c31\u662f\u53ea\u6709\u52a0\u3001\u51cf\u3001\u4e58\u7684\u7248\u672c $\\to$ [\u5c0f\u6e05\u65b0\u4eba\u6e23\u7684\u672c\u613f](https://www.luogu.com.cn/problem/P3674)  \n~~\u5f53\u7136\uff0c\u4f5c\u4e3a\u53ef\u4ee5 AK \u5404\u5927\u6bd4\u8d5b\u7684\u4f60\uff0c\u4e00\u5b9a\u4e0d\u5c51\u4e8e\u505a\u8fd9\u79cd\u5c51\u9898~~  \n\u7531\u4e43\u7684\u7167\u7247\u597d\u8bc4\uff0c\u53ef\u4ee5\u53bb\u5f53\u624b\u673a\u58c1\u7eb8 ? \uff01\uff01\uff01  \n\n## \u6b63\u9898\n\u5148\u5c06\u8be2\u95ee\u79bb\u7ebf\u6392\u5e8f\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\uff0c\u628a\u5b83\u533a\u95f4\u5185\u5305\u542b\u7684\u6240\u6709\u6570\u653e\u5728\u4e00\u4e2a\u6876\u91cc\u3002  \n\u5982\u679c\u662f $3$ \u8be2\u95ee\uff0c\u76f4\u63a5\u66b4\u529b $O(\\sqrt n)$ \u679a\u4e3e\u7ea6\u6570\uff0c\u5373\u53ef\u3002  \n\u5bf9\u4e8e\u8be2\u95ee $1$ \uff0c\u4e00\u4e2a $sb$ \u7684\u505a\u6cd5\u662f\u679a\u4e3e\u6bcf\u4e2a\u6570\uff0c\u5224\u65ad\u662f\u5426\u6709\u6bd4\u5b83\u5c0f $x$ \u7684\u6570\u3002  \n\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 $bitset$ \u538b\u4f4d\uff0c\u4f18\u5316\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u5c06 $bitset$ \u6570\u7ec4\u5de6\u79fb\u6216\u53f3\u79fb $x$ \u4f4d\u5e76\u4e0e\u539f\u6570\u7ec4\u53d6\u4e0e\uff0c\u5224\u65ad\u662f\u5426\u5b58\u5728\u3002  \n\u5bf9\u4e8e\u8be2\u95ee $2$ \uff0c\u5c06 $a+b=x$ \u8f6c\u5316\u4e3a $(100000-a)-b=100000-x$ \u540e\u6309\u7167\u540c\u6837\u7684\u65b9\u6cd5\u5904\u7406\u3002  \n\n------------  \n\u901a\u4fd7\u6613\u61c2\u7684\u8bdd\u5c31\u662f\uff1a  \n\u5148\u83ab\u4e2a\u961f\uff0c\u7136\u540e\u5bf9\u503c\u57df\u5f00\u4e2a $bitset$   \n\u5dee\u76f8\u7b49\u5c31\u662f $f$ \u5e76\u4e0a $f$ \u53f3\u79fb $x$ \u4e0d\u4e3a $0$   \n\u548c\u76f8\u7b49\u5c31\u662f $f$ \u5e76\u4e0a\u7ffb\u8f6c\u7684$f$\u53f3\u79fb $N-x$ \u4f4d\u4e0d\u4e3a $0$   \n\u79ef\u7684\u8bdd\u5c31 $\\sqrt x$ \u679a\u4e3e $x$ \u7684\u7684\u56e0\u5b50\u7136\u540e\u67e5\u8be2\u5b58\u5728\u6027\u5c31\u597d\u4e86  \n\n\u5f88\u7b80\u5355\u5427\uff0c\u7136\u540e\u5c31\u653e\u4ee3\u7801\uff1a  \n```\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<vector>\n#include<bitset>\n#define ll long long\nusing namespace std;\nconst int N=100010;\nstruct MS{\n\tint op,l,r,x,id;\n}q[N];\nint tot;\nvector<MS>qq[N];\nbitset<N>b1,b2;\nint n,m;\nint g;\nint a[N],cnt[N];\nbool ans[N];\nbool cmp(MS x,MS y)\n{\t\n\tif(x.l/g!=y.l/g)return x.l<y.l;\n    else return (x.l/g)&1?x.r<y.r:x.r>y.r;\n}\nvoid lxxxh()\n{\n\tint lst[N],mx[N];\n\tfor(int i=1;i<=316;i++) \n\t{\n        memset(lst,0,sizeof(lst));\n        memset(mx,0,sizeof(mx));\n\t\tif (qq[i].empty())continue;\n\t\tfor(int j=1,p=0;j<=n;j++) \n\t\t{\n\t\t\tlst[a[j]]=j;\n\t\t\tif (i*a[j]<=100000)p=max(p,lst[i*a[j]]);\n\t\t\tif (a[j]%i==0)p=max(p,lst[a[j]/i]);\n\t\t\tmx[j]=p;\n\t\t}\n\t\tfor(auto j:qq[i])ans[j.id]=(j.l<=mx[j.r]);\n\t}\t\n}\nint l=1,r;\nvoid add(int x)\n{\n\tif(cnt[x]==0)b1[x]=b2[100000-x]=1;\n\tcnt[x]++;\n}\nvoid del(int x)\n{\n\tcnt[x]--;\n\tif(cnt[x]==0)b1[x]=b2[100000-x]=0;\n}\nbool q1(int x){return (b1&(b1<<x)).any();}\nbool q2(int x){return (b2&(b1<<(100000-x))).any();}\nbool q3(int x)\n{\n\tfor(int i=1;i*i<=x;i++)\n\t\tif(x%i==0&&b1[i]&&b1[x/i])return true;\n\treturn false;\n}\nbool q4(int x)\n{\n\tfor(int i=1;i*x<=100000;i++)\n\t\tif(b1[i]&&b1[i*x])return true;\n\treturn false;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tg=sqrt(n);\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",&a[i]);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint op,l,r,x;\n\t\tscanf(\"%d%d%d%d\",&op,&l,&r,&x);\n\t\tif(op==4&&x<=316)qq[x].push_back((MS){op,l,r,x,i});\n\t\telse q[++tot]=(MS){op,l,r,x,i};\t\n\t}\n\tlxxxh();\n\tsort(q+1,q+1+tot,cmp);\n\tfor(int i=1;i<=tot;i++)\n\t{\n\t\tint ql=q[i].l,qr=q[i].r,qo=q[i].op,qi=q[i].id;\n\t\twhile(l>ql)add(a[--l]);\n\t\twhile(r<qr)add(a[++r]);\n\t\twhile(l<ql)del(a[l++]);\n\t\twhile(r>qr)del(a[r--]);\n\t\tif(qo==1)ans[qi]=q1(q[i].x);\n\t\tif(qo==2)ans[qi]=q2(q[i].x);\n\t\tif(qo==3)ans[qi]=q3(q[i].x);\n\t\tif(qo==4)ans[qi]=q4(q[i].x);\t\t\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tif(ans[i])printf(\"yuno\\n\");\n\t\telse printf(\"yumi\\n\");\n\t}\n}\n```\n",
        "postTime": 1621755082,
        "uid": 247269,
        "name": "MSqwq",
        "ccfLevel": 0,
        "title": "[Ynoi2017] \u7531\u4e43\u7684\u7389\u7c73\u7530"
    },
    {
        "content": "[\u5e7f\u544a](https://m-sea-blog.com/archives/lg5355/)\n\n---\n\n\u8003\u8651\u83ab\u961f\uff0c\u5e76\u5f00\u4e24\u4e2a bitset\uff0c\u5206\u522b\u5b58 $x$ \u662f\u5426\u5728\u533a\u95f4\u5185\u548c $100000-x$ \u662f\u5426\u5728\u533a\u95f4\u5185\uff0c\u5047\u8bbe\u5206\u522b\u53eb $A$ \u548c $B$\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u8be2\u95ee $-$\uff0c\u76f4\u63a5\u5224\u65ad `A&(A<<x)` \u662f\u5426\u6709 $1$ \u5373\u53ef\uff1b\u5bf9\u4e8e\u8be2\u95ee $+$\uff0c\u76f4\u63a5\u5224\u65ad `B&(A<<(100000-x))` \u662f\u5426\u6709 $1$ \u5373\u53ef\u3002\u8fd9\u4e24\u79cd\u8be2\u95ee\u5355\u6b21\u90fd\u662f $\\mathcal{O}(\\frac{n}{\\omega})$ \u7684\u3002\n\n\u5bf9\u4e8e\u8be2\u95ee $\\times$\uff0c\u76f4\u63a5\u679a\u4e3e $x$ \u7684\u7ea6\u6570 $d$ \u5e76\u5224\u65ad $d$ \u548c $\\frac{x}{d}$ \u662f\u5426\u90fd\u5b58\u5728\u5373\u53ef\uff0c\u5355\u6b21\u8be2\u95ee $\\mathcal{O}(\\sqrt{n})$\u3002\n\n\u5bf9\u4e8e\u8be2\u95ee $\\div$\uff0c\u4e00\u4e2a\u60f3\u6cd5\u662f\u76f4\u63a5\u679a\u4e3e $d$ \u5e76\u5224\u65ad $d$ \u548c $dx$ \u662f\u5426\u90fd\u5b58\u5728\u3002\u7136\u800c\u8fd9\u4e2a\u53ea\u6709\u5728 $x\\geq\\sqrt{n}$ \u65f6\u5355\u6b21\u8be2\u95ee\u7684\u590d\u6742\u5ea6\u624d\u662f $\\mathcal{O}(\\sqrt{n})$\u3002\n\n\u56e0\u6b64\u6211\u4eec\u628a\u6240\u6709 $x<\\sqrt{n}$ \u7684\u8be2\u95ee $\\div$ \u5355\u72ec\u62ff\u51fa\u6765\u6c42\uff1a\u679a\u4e3e $x\\in[1,\\sqrt{n})$\uff0c\u7136\u540e\u4ece\u5de6\u5f80\u53f3\u679a\u4e3e\u53f3\u7aef\u70b9 $r$\uff0c\u5e76\u6c42\u51fa $lst_t$ \u8868\u793a $t$ \u4e0a\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u548c $mx_r$ \u8868\u793a\u6700\u5927\u7684\u6ee1\u8db3 $[l,r]$ \u5185\u80fd\u6709\u4e24\u4e2a\u6570\u5546\u4e3a $x$ \u7684 $l$\uff08\u76f4\u63a5\u7528 $lst$ \u66f4\u65b0\u5373\u53ef\uff09\uff0c\u8fd9\u6837\u5b50\u53ea\u9700\u8981\u5bf9\u4e8e\u53f3\u7aef\u70b9\u662f $r$ \u7684\u8be2\u95ee\u5224\u65ad\u5b83\u7684\u5de6\u7aef\u70b9\u662f\u5426 $\\leq mx_r$ \u5373\u53ef\u3002\u8fd9\u4e00\u90e8\u5206\u603b\u590d\u6742\u5ea6\u662f $\\mathcal{O}(n\\sqrt{n})$\u3002\n\n```cpp\n// ====================================\n//   author: M_sea\n//   website: https://m-sea-blog.com/\n// ====================================\n#include <bits/stdc++.h>\n#define file(x) freopen(#x\".in\",\"r\",stdin); freopen(#x\".out\",\"w\",stdout)\n#pragma GCC optimize(\"Ofast,unroll-loops,fast-math\")\nusing namespace std;\ntypedef long long ll;\n\nnamespace IO {\n    const int SIZE=1<<21;\n    char ibuf[SIZE|1],*iS=ibuf,*iT=ibuf,obuf[SIZE|1],*oS=obuf,*oT=obuf+SIZE-1;\n    void flush() { fwrite(obuf,1,oS-obuf,stdout); oS=obuf; }\n    char getc() {\n        if (iS==iT) {\n            iT=(iS=ibuf)+fread(ibuf,1,SIZE,stdin);\n            if (iS==iT) return EOF;\n        }\n        return *iS++;\n    }\n    void putc(char x) { *oS++=x; if (oS==oT) flush(); }\n    int read() {\n        int X=0,w=1; char c=getc();\n        while (c<'0'||c>'9') { if (c=='-') w=-1; c=getc(); }\n        while (c>='0'&&c<='9') X=X*10+c-'0',c=getc();\n        return X*w;\n    }\n    struct flusher { ~flusher() { flush(); } } io_flusher;\n}\nusing IO::putc;\nusing IO::read;\n\nconst int N=100000+10;\n\nint n,m,Q=0,a[N],B;\nbool ans[N];\nstruct query { int op,l,r,x,id; } q[N];\nbool operator <(query a,query b) {\n\tif (a.l/B!=b.l/B) return a.l<b.l;\n\telse return (a.l/B)&1?a.r<b.r:a.r>b.r;\n}\nvector<query> q2[N];\n\nnamespace SP {\n\tint lst[N],mx[N];\n\tvoid main() {\n\t\tfor (int w=1;w<=316;++w) {\n\t\t\tmemset(lst,0,sizeof(lst)),memset(mx,0,sizeof(mx));\n\t\t\tif (q2[w].empty()) continue;\n\t\t\tfor (int i=1,p=0;i<=n;++i) {\n\t\t\t\tlst[a[i]]=i;\n\t\t\t\tif (w*a[i]<=100000) p=max(p,lst[w*a[i]]);\n\t\t\t\tif (a[i]%w==0) p=max(p,lst[a[i]/w]);\n\t\t\t\tmx[i]=p;\n\t\t\t}\n\t\t\tfor (auto i:q2[w]) ans[i.id]=(i.l<=mx[i.r]);\n\t\t}\n\t}\n}\n\nbitset<N> B1,B2; int cnt[N];\nvoid add(int x) {\n\tif (!cnt[x]) B1[x]=B2[100000-x]=1;\n\t++cnt[x];\n}\nvoid del(int x) {\n\t--cnt[x];\n\tif (!cnt[x]) B1[x]=B2[100000-x]=0;\n}\n\nbool Q1(int x) { // -\n\treturn (B1&(B1<<x)).any();\n}\nbool Q2(int x) { // +\n\treturn (B2&(B1<<(100000-x))).any();\n}\nbool Q3(int x) { // *\n\tfor (int i=1;i*i<=x;++i)\n\t\tif (x%i==0&&B1[i]&&B1[x/i]) return 1;\n\treturn 0;\n}\nbool Q4(int x) { // /\n\tfor (int i=1;i*x<=100000;++i)\n\t\tif (B1[i]&&B1[i*x]) return 1;\n\treturn 0;\n}\n\nint main() {\n\tn=read(),m=read(); B=sqrt(n);\n\tfor (int i=1;i<=n;++i) a[i]=read();\n\tfor (int i=1;i<=m;++i) {\n\t\tint op=read(),l=read(),r=read(),x=read();\n\t\tif (op==4&&x<=316) q2[x].emplace_back((query){op,l,r,x,i});\n\t\telse q[++Q]=(query){op,l,r,x,i};\n\t}\n\tSP::main(); sort(q+1,q+Q+1);\n\tfor (int i=1,l=1,r=0;i<=Q;++i) {\n\t\twhile (l>q[i].l) --l,add(a[l]);\n\t\twhile (r<q[i].r) ++r,add(a[r]);\n\t\twhile (l<q[i].l) del(a[l]),++l;\n\t\twhile (r>q[i].r) del(a[r]),--r;\n\t\tif (q[i].op==1) ans[q[i].id]=Q1(q[i].x);\n\t\tif (q[i].op==2) ans[q[i].id]=Q2(q[i].x);\n\t\tif (q[i].op==3) ans[q[i].id]=Q3(q[i].x);\n\t\tif (q[i].op==4) ans[q[i].id]=Q4(q[i].x);\n\t}\n\tfor (int i=1;i<=m;++i) {\n\t\tif (ans[i]) putc('y'),putc('u'),putc('n'),putc('o');\n\t\telse putc('y'),putc('u'),putc('m'),putc('i');\n\t\tputc('\\n');\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1593699965,
        "uid": 38370,
        "name": "M_sea",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5355 \u3010[Ynoi2017]\u7531\u4e43\u7684\u7389\u7c73\u7530\u3011"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/lingspace/p/p5355.html)\n\n# \u9898\u610f\n\n[P5355 [Ynoi2017] \u7531\u4e43\u7684\u7389\u7c73\u7530](https://www.luogu.com.cn/problem/P5355)\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u4e3a $n$ \u7684\u5e8f\u5217\u548c $m$ \u4e2a\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u8be2\u95ee\u533a\u95f4 $[l, r]$ \u5185\u662f\u5426\u53ef\u4ee5\u9009\u51fa\u4e24\u4e2a\u6570 $a_x, a_y$\uff0c\u4f7f\u5f97\uff1a\n\n1. $a_x - a_y = x$\n\n2. $a_x + a_y = x$\n\n3. $a_x \\cdot a_y = x$\n\n4. $\\min(a_x, a_y) \\mid \\max(a_x, a_y)$ \u4e14 $\\frac{\\max(a_x, a_y)}{\\min(a_x, a_y)} = x$\n\n$n, m \\leq 10^5, 0 \\leq x \\leq 10^5, 1 \\leq a_i \\leq 10^5$\n\n# \u601d\u8def\n\n\u83ab\u961f + `bitset` + \u6839\u53f7\u5206\u6cbb\u3002\n\n[`bitset` \u7684\u57fa\u672c\u7528\u6cd5](https://www.cnblogs.com/magisk/p/8809922.html)\n\n[P3674 \u5c0f\u6e05\u65b0\u4eba\u6e23\u7684\u672c\u613f](https://www.luogu.com.cn/problem/P3674) \u7684\u5f3a\u5316\u7248\u3002\n\n\u4e0d\u7528\u4fee\u6539\uff0c\u4e0d\u5f3a\u5236\u5728\u7ebf\uff0c\u8003\u8651 *\u83ab\u961f* \u5904\u7406\u3002\n\n\u4e0d\u59a8\u4ee4 $N$ \u4e3a\u67d0\u4e00\u6781\u5927\u503c\uff0c\u540c\u65f6\u7ef4\u62a4\u4e24\u4e2a `bitset` $s1, s2$\uff0c\u5176\u4e2d $s1$ \u8868\u793a\u503c $x$ \u662f\u5426\u5728\u5f53\u524d\u533a\u95f4\u5185\u51fa\u73b0\u8fc7\uff0c$s2$ \u8868\u793a\u503c $N - x$ \u662f\u5426\u5728\u5f53\u524d\u533a\u95f4\u5185\u51fa\u73b0\u8fc7\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c $1$\uff0c\u5982\u679c $[l, r]$ \u5185\u5b58\u5728 $a - b = x$\uff0c\u56e0\u4e3a $b$ \u53ef\u4ee5\u8868\u793a\u6210 $a - x$\uff0c\u6240\u4ee5 $[l, r]$ \u5185\u4e5f\u4e00\u5b9a\u5b58\u5728 $a, a - x$\uff0c\u5219\u95ee\u9898\u8f6c\u5316\u6210\uff1a\u662f\u5426\u53ef\u4ee5\u5728 $[l, r]$ \u5185\u9009\u51fa $a$ \u4f7f\u5f97 $[l, r]$ \u5185\u540c\u65f6\u5b58\u5728 $a, a - x$\uff0c\u53ef\u4ee5\u7528 `s1[a] == s1[a - x] == true` \u5224\u65ad\u3002\u4e0d\u96be\u53d1\u73b0\u4e0a\u9762\u7684\u4ee3\u7801\u7b49\u4ef7\u4e8e `(s1 & (s1 << x)).any()`\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c $2$\uff0c\u56de\u987e $s2$ \u7684\u5b9a\u4e49\uff0c\u53d1\u73b0 `(s2 >> (N - x))[i]` \u5b9e\u9645\u4e0a\u7ef4\u62a4\u7684\u662f $[l, r]$ \u5185\u662f\u5426\u5b58\u5728 $(N - i) - (N - x) = x - i$\u3002\u6545\u800c\u6211\u4eec\u53ef\u4ee5\u7528 `(s1 & (s2 >> (N - x))).any()` \u5224\u65ad $[l, r]$ \u5185\u662f\u5426\u5b58\u5728 $a + b = x$\u3002\u7531\u4e8e `bitset` \u4e0d\u80fd\u7ef4\u62a4\u8d1f\u6570\u4e0b\u6807\uff0c$N$ \u5e94\u8be5\u53d6\u5230 $10^5$ \u53ca\u4ee5\u4e0a\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c $3$\uff0c\u56e0\u4e3a $0 \\leq x \\leq 10^5$\uff0c\u6240\u4ee5\u53ef\u4ee5\u66b4\u529b\u679a\u4e3e $x$ \u7684\u56e0\u6570\u5e76\u7528 $s1$ \u5224\u65ad\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c $4$\uff0c\u53d1\u73b0\u96be\u4ee5\u76f4\u63a5\u7528\u83ab\u961f\u7ef4\u62a4\u3002\u4ee4 $[l, r]$ \u4e2d\u7684\u6700\u5927\u503c\u4e3a $k$\uff0c\u56e0\u4e3a\u5f53 $x \\geq \\sqrt{k}$ \u65f6\uff0c\u66b4\u529b\u679a\u4e3e\u5546\u4e3a $x$ \u7684\u4e24\u4e2a\u6570\u590d\u6742\u5ea6\u662f $\\mathcal{O}(\\sqrt{n})$\uff0c\u6240\u4ee5\u53ef\u4ee5\u8003\u8651 *\u6839\u53f7\u5206\u6cbb*\u3002\n\n\u5f53 $x \\geq \\sqrt{k}$ \u65f6\uff0c\u66b4\u529b\u679a\u4e3e\u5546\u4e3a $x$ \u7684\u4e24\u4e2a\u6570\u5373\u53ef\u3002\n\n\u5f53 $x < \\sqrt{k}$ \u65f6\uff0c\u8003\u8651 $\\mathcal{O}(n\\sqrt{n})$ \u9884\u5904\u7406\u7b54\u6848\u3002\u4ee4 $a_i$ \u7684\u6700\u5927\u503c\u4e3a $K$\uff0c\u4e0d\u59a8\u5bf9\u4e8e $1 \\leq x < \\sqrt{K}$ \u9884\u5904\u7406 $p_i$\uff0c$p_i = l$ \u8868\u793a $[l, i]$ \u5185\u5b58\u5728 $\\frac{a}{b} = x$ \u4e14 $i - l$ \u6700\u5c0f\u3002\u5bf9\u4e8e\u8be2\u95ee $[l, r]$ \u5185\u662f\u5426\u5b58\u5728 $\\frac{a}{b} = x$\uff0c\u663e\u7136\u82e5 $l \\leq p_r$ \u5219\u5b58\u5728\uff0c\u53cd\u4e4b\u5219\u4e0d\u5b58\u5728\u3002\n\n\u83ab\u961f\u90e8\u5206\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n \\sqrt{n})$\uff0c\u6839\u53f7\u5206\u6cbb\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n \\sqrt{n})$\uff0c\u56e0\u6b64\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n \\sqrt{n})$\u3002\n\n# \u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <vector>\n#include <bitset>\n#include <algorithm>\nusing namespace std;\n\n#define rint register int\n\ninline int read(){\n    rint x=0,c=getchar();\n    for(;c<48||c>57;c=getchar());\n    for(;c>47&&c<58;c=getchar())x=x*10+(c^48);\n    return x;\n}\n\nconst int maxn = 1e5 + 5;\n\nint n, m;\nint maxv, len;\nint lst[maxn], pre[maxn];\nint a[maxn], bel[maxn], cnt[maxn];\nbool ans[maxn];\nbitset<maxn> s1, s2;\n\nstruct node {\n\tint l, r, x, opt, id;\n\t\n\tnode(): l(), r(), x(), opt(), id() {}\n\t\n\tnode(int _l, int _r, int _x, int _opt, int _id): l(_l), r(_r), x(_x), opt(_opt), id(_id) {}\n\t\n\tbool operator < (const node& rhs) const {\n\t\tif (bel[l] ^ bel[rhs.l]) {\n\t\t\treturn bel[l] < bel[rhs.l];\n\t\t}\n\t\treturn (bel[l] & 1 ? r < rhs.r : r > rhs.r);\n\t}\n} q1[maxn];\n\nvector<node> q2[maxn];\n\ninline void add(rint x) {\n\tcnt[a[x]]++;\n\tif (cnt[a[x]] == 1) {\n\t\ts1[a[x]] = true;\n\t\ts2[maxv - a[x]] = true;\n\t}\n}\n\ninline void del(rint x) {\n\tcnt[a[x]]--;\n\tif (!cnt[a[x]]) {\n\t\ts1[a[x]] = false;\n\t\ts2[maxv - a[x]] = false;\n\t}\n}\n\nint main() {\n\trint opt, l, r, x, tmp;\n\trint left = 0, right = 0;\n\tn = read(), m = read();\n\trint block = sqrt(n);\n\tfor (rint i = 1; i <= n; i++) {\n\t\ta[i] = read();\n\t\tmaxv = max(maxv, a[i] + 1);\n\t\tbel[i] = (i - 1) / block + 1;\n\t}\n\tblock = sqrt(maxv);\n\tfor (rint i = 1; i <= m; i++) {\n\t\topt = read(), l = read(), r = read(), x = read();\n\t\tif ((opt == 4) && (x < block)) {\n\t\t\tq2[x].push_back(node(l, r, x, opt, i));\n\t\t} else {\n\t\t\tlen++;\n\t\t\tq1[len] = node(l, r, x, opt, i);\n\t\t}\n\t}\n\tsort(q1 + 1, q1 + len + 1);\n\tfor (rint i = 1; i <= len; i++) {\n\t\twhile (left > q1[i].l) {\n\t\t\tadd(--left);\n\t\t}\n\t\twhile (right < q1[i].r) {\n\t\t\tadd(++right);\n\t\t}\n\t\twhile (left < q1[i].l) {\n\t\t\tdel(left++);\n\t\t}\n\t\twhile (right > q1[i].r) {\n\t\t\tdel(right--);\n\t\t}\n\t\tif (q1[i].opt == 1) {\n\t\t\tans[q1[i].id] = (s1 & (s1 << q1[i].x)).any();\n\t\t} else if (q1[i].opt == 2) {\n\t\t\tans[q1[i].id] = (s1 & (s2 >> (maxv - q1[i].x))).any();\n\t\t} else if (q1[i].opt == 3) {\n\t\t\tfor (rint j = 1; j * j <= q1[i].x; j++) {\n\t\t\t\tif (q1[i].x % j == 0) {\n\t\t\t\t\tif (s1[j] && s1[q1[i].x / j]) {\n\t\t\t\t\t\tans[q1[i].id] = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (rint j = 1; q1[i].x * j <= maxv; j++) {\n\t\t\t\tif (s1[j] && s1[q1[i].x * j]) {\n\t\t\t\t\tans[q1[i].id] = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor (rint i = 1; i < block; i++) {\n\t\tif (!q2[i].size()) {\n\t\t\tcontinue;\n\t\t}\n\t\tmemset(lst, 0, (maxv + 1) * sizeof(int));\n\t\tmemset(pre, 0, (n + 1) * sizeof(int));\n\t\tfor (rint j = 1; j <= n; j++) {\n\t\t\tpre[j] = pre[j - 1];\n\t\t\tlst[a[j]] = j;\n\t\t\ttmp = a[j] * i;\n\t\t\tif (tmp <= maxv) {\n\t\t\t\tpre[j] = max(pre[j], lst[tmp]);\n\t\t\t}\n\t\t\ttmp = a[j] / i;\n\t\t\tif (a[j] % i == 0) {\n\t\t\t\tpre[j] = max(pre[j], lst[tmp]);\n\t\t\t}\n\t\t}\n\t\tfor (rint j = 0; j < q2[i].size(); j++) {\n\t\t\tans[q2[i][j].id] = (q2[i][j].l <= pre[q2[i][j].r]);\n\t\t}\n\t}\n\tfor (rint i = 1; i <= m; i++) {\n\t\tputchar('y'), putchar('u');\n\t\tif (ans[i]) {\n\t\t\tputchar('n'), putchar('o');\n\t\t} else {\n\t\t\tputchar('m'), putchar('i');\n\t\t}\n\t\tputchar('\\n');\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1643026888,
        "uid": 243544,
        "name": "kymru",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011P5355 [Ynoi2017] \u7531\u4e43\u7684\u7389\u7c73\u7530"
    },
    {
        "content": "# $\\text{Description:}$\n\n\u8be2\u95ee\u533a\u95f4\u5185\u662f\u5426\u5b58\u57282\u4e2a\u6570\u5dee/\u548c/\u5546/\u79ef\u7b49\u4e8ex\u3002\n\n# $\\text{Solution:}$\n\n\u5047\u8bbe\u8be2\u95ee\u7684\u6570\u4e3ax\uff0cbitset\u540d\u79f0\u4e3as1\u3002\n\n1. \u5dee\uff1a\u8003\u8651\u5f00\u4e2abitset\u8bb0\u5f55\u4e0b\u51fa\u73b0\u8fc7\u7684\u6570\uff0c\u7528\u83ab\u961f\u7ef4\u62a4\u533a\u95f4bitset\uff0c\u5e76\u5224\u65ad\u662f\u5426\u6709\u4e00\u4e2a\u6570a\u548c\u53e6\u4e00\u4e2a\u6570a-x\uff0c\u5373 $s1 \\& (s1>>x)$ \u3002\n\n\n2. \u548c\uff1a\u5bf9\u4e8e\u548c\u7684\u5e94\u8be5\u662f\u8fd9\u6837\u5b50\u7684 $a+b=x$ ,\u5bf9\u4e8eb\u5c31\u662f $x-a$ \uff0c\u4f5c\u5dee\u7684\u5f62\u5f0f\u542f\u53d1\u6211\u4eec\u53ef\u4ee5\u5f00\u4e2a\u8bb0\u5f55MAXN-a\u7684bitset\uff0c\u8bb0\u4e3as2\u3002\u5bf9\u4e8e\u539f\u5f0f\uff0c\u53ef\u4ee5\u53d8\u5316\u6210 $b=(MAXN-a)-(MAXN-x)$ \uff0c\u5373 $ s1 \\& (s2>>(MAXN-x))$ \u3002\n\n\n3. \u79ef\uff1a\u8003\u8651 $\\sqrt{n}$ \u679a\u4e3e\u5c0f\u7684\u7ea6\u6570\uff0c\u5e76\u5224\u65ad2\u4e2a\u7ea6\u6570\u662f\u5426\u5b58\u5728\u5373\u53ef\u3002\n\n\n4. \u5546\uff1a\u5373 $a/b=x$\uff0c\u8f6c\u5316\u6210 $a/x=b$ \uff0c\u5219\u5fc5\u987b\u6ee1\u8db3 $ a\u22610 \\ (mod \\ x)$ \uff0c\u8fd9\u4e2a\u5f62\u5f0f\u63d0\u9192\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6839\u53f7\u5206\u6cbb\uff0c\u8003\u8651 $x \\ge \\sqrt{n}$ \u66b4\u529b\u505a\u5373\u53ef\uff0c\u5426\u5219\uff0c\u5bf9\u4e8e\u8fd9\u7c7b\u8be2\u95ee\u6211\u4eec\u53ef\u4ee5\u4e0d\u4f7f\u7528\u83ab\u961f\u5904\u7406\u3002\u56e0\u4e3a\u73b0\u5728 $\\sqrt{n} \\ge x$ \uff0c \u63d0\u9192\u6211\u4eec\u53ef\u4ee5\u4ece $[1,\\sqrt{n}]$ \u679a\u4e3ex\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $a_i$ \u5373\u4e3ab\uff0c\u8bb0\u5f55\u4e0bmxr\u8868\u793a\u5728\u7b2ci\u4e2a\u4f4d\u7f6e\u7684\u8ddd\u79bb\u6700\u8fd1 $a[i]*x$ \u6216\u8005 $a[i]/x$ \uff0c\u5bf9\u4e8e\u8be2\u95ee\u8003\u8651\u662f\u5426L\u5c0f\u4e8e $mxr[R]$ \u5373\u53ef\u3002\n\n\n# $\\text{Code:}$\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <bitset>\n#include <cmath>\n#include <vector>\n\n#define N (int)(1e5+5)\n#define M 320\n#define MXN (int)(1e5)\n\nusing namespace std;\n\nstruct node {\n\tint op,l,r,x,id,ku;\n}q[N];\nvector<int>L[M],R[M],ID[M];\nbitset<N>s1,s2;\nint n,m,bl,f[N],a[N],ans[N],cnt[N],pre[N],mxl[N];\n\nint rd() {\n\tint f=1,sum=0; char ch=getchar();\n\twhile(!isdigit(ch)) {if(ch=='-') f=-1;ch=getchar();}\n\twhile(isdigit(ch)) {sum=(sum<<3)+(sum<<1)+ch-'0';ch=getchar();}\n\treturn sum*f;\n}\n\nbool cmp(node x,node y) {\n\treturn x.ku==y.ku?x.ku&1?x.r<y.r:x.r>y.r:x.l<y.l;\n}\n\nvoid add(int x) {\n\tif(++cnt[x]==1) s1[x]=s2[MXN-x]=1;\n}\n\nvoid del(int x) {\n\tif(--cnt[x]==0) s1[x]=s2[MXN-x]=0;\n}\n\nint main() {\n\tn=rd(); m=rd(); bl=sqrt(n);\n\tfor(int i=1;i<=n;i++) a[i]=rd();\n\tfor(int i=1;i<=m;i++) {\n\t\tq[i]=node{rd(),rd(),rd(),rd(),i}; q[i].ku=q[i].l/bl;\n\t}\n\tsort(q+1,q+1+m,cmp);\n\tint l=1,r=0;\n\tfor(int i=1;i<=m;i++) {\n\t\twhile(l<q[i].l) del(a[l++]);\n\t\twhile(l>q[i].l) add(a[--l]);\n\t\twhile(r<q[i].r) add(a[++r]);\n\t\twhile(r>q[i].r) del(a[r--]);\n\t\tif(q[i].op==1) {\n\t\t\tans[q[i].id]=(s1&(s1>>q[i].x)).any();\n\t\t} else if(q[i].op==2) {\n\t\t\tans[q[i].id]=(s1&(s2>>(MXN-q[i].x))).any();\n\t\t} else if(q[i].op==3) {\n\t\t\tfor(int j=1;j*j<=q[i].x;j++) {\n\t\t\t\tif(q[i].x%j==0) \n\t\t\t\t\tif(s1[j]&&s1[q[i].x/j]) {\n\t\t\t\t\t\tans[q[i].id]=1; break;\n\t\t\t\t\t}\n\t\t\t}\n\t\t} else if(q[i].op==4) {\n\t\t\tif(q[i].x>bl) {\n\t\t\t\tfor(int j=1;j*q[i].x<=MXN;j++) \n\t\t\t\t\tif(s1[j]&&s1[j*q[i].x]) {\n\t\t\t\t\t\tans[q[i].id]=1; break;\n\t\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tL[q[i].x].push_back(q[i].l);\n\t\t\t\tR[q[i].x].push_back(q[i].r); \n\t\t\t\tID[q[i].x].push_back(q[i].id); \n\t\t\t}\n\t\t}\n\t} \n\tfor(int i=1;i<=bl;i++) {\n\t\tif(L[i].empty()) continue;\n\t\tmemset(pre,0,sizeof(pre));\n\t\tmemset(mxl,0,sizeof(mxl));\n\t\tint l=0;\n\t\tfor(int j=1;j<=n;j++) { //i\u4e3ax a[i]\u4e3ab \n\t\t\tpre[a[j]]=j;\n\t\t\tif(a[j]*i<=MXN) l=max(l,pre[a[j]*i]);\n\t\t\tif(a[j]%i==0) l=max(l,pre[a[j]/i]);\n\t\t\tmxl[j]=l;\n\t\t}\n\t\tfor(int j=0;j<L[i].size();j++) ans[ID[i][j]]=L[i][j]<=mxl[R[i][j]];\n\t}\n\tfor(int i=1;i<=m;i++) puts(ans[i]?\"yuno\":\"yumi\");\n\treturn 0; \n}\n```",
        "postTime": 1619954521,
        "uid": 125901,
        "name": "FxorG",
        "ccfLevel": 7,
        "title": "P5355 [Ynoi2017] \u7531\u4e43\u7684\u7389\u7c73\u7530"
    },
    {
        "content": "\u63a8\u4e00\u4e0b\u849f\u84bb [$\\color{violet}{\\texttt {\u535a\u5ba2}}$](https://www.luogu.com.cn/blog/quest233/#) \u3002\n\n-----\n\n\u53c8\u662f\u4e00\u9053 $bitset$ \u597d\u9898\uff0c\u8fd9\u4f7f\u7a9d\u7684 $bitset$ \u7684\u7406\u89e3\u529b$++$ \u5566\uff01\n\n~~\u9898\u9762\u597d\u817f\uff08bushi~~\n\n\u4e0a\u6765\u4e00\u773c\u4ee5\u4e3a\u81ea\u5df1\u79d2\u4e86\uff0c\u95f7\u5934\u7801\u7801\u7801\u7801\u7801\uff0c $\\color{Red}{WA}$ \u3002\n\n\u4e00\u770b\u9898\u89e3\u533a\uff0c\u609f\u4e86\uff0c\u8fd9\u9898\u54ea\u6709\u90a3\u4e48\u7b80\u5355QwQ\u3002\n\n----\n\n\u5148\u8bf4\u6b63\u89e3\uff0c\u4e0e\u5143\u7d20\u5728\u533a\u95f4\u4e2d\u7684\u51fa\u73b0\u60c5\u51b5\u6709\u5173\u4e14\u53ef\u79bb\u7ebf\uff0c\u4e00\u773c\u83ab\u961f\u3002\n\n\u83ab\u961f\u5927\u81f4\u7684\u7528\u5904\u662f\u7ef4\u62a4\u4e00\u4e2a**\u51fa\u73b0\u6b21\u6570** $cnt$ \uff0c\u8fd9\u663e\u7136\u5f88\u597d\u7ef4\u62a4\u3002\n\n\u7528 $bitset$ \u4ee3\u66ff $cnt$ \u6570\u7ec4\u662f\u4e3a\u4e86\u5c0f\u5c0f\u4f18\u5316\u3002\u56de\u60f3\u5176\u5957\u8def\uff0c\u4e3b\u8981\u662f\u628a\u4e24\u4e2a $bitset$ **\u201c\u4e0e\u201d** \u8d77\u6765\u4ee5\u8fbe\u6210\u6c42\u533a\u95f4\u4e2d**\u5143\u7d20\u4ea4\u96c6**\u7684\u4f5c\u7528\u3002\n\n\u6211\u4eec\u8fd9\u91cc\u8bbe\u7f6e $bitset$ \u4e2d\u7b2c $i$ \u4f4d\u8868\u793a\uff1a\n\n**\u300e\u503c\u4e3a $i$ \u7684\u5143\u7d20\u662f\u5426\uff081/0\uff09\u5728\u533a\u95f4\u4e2d\u51fa\u73b0\u3002\u300f**\n\n\u4e00\u4e2a\u8be2\u95ee\u80fd\u8f93\u51fa $\\texttt{\"yuno\"}$ \uff0c\u9700\u8981\u80fd\u5728\u8be2\u95ee\u533a\u95f4\u91cc\uff0c\u627e\u5230\u7b26\u5408\u6761\u4ef6\u7684\u5143\u7d20\u3002\u6211\u4eec\u4e0b\u8fb9\u5bf9\u4e0d\u540c\u8be2\u95ee\u5206\u5f00\u6765\u8bb2\u3002\n\n\n------------\n\n$\\large\\color{salmon}{\\texttt{\u5dee\uff1a}}$\n\n\u6211\u4eec\u7684\u8981\u6c42\u662f $a-b=x$ \uff0c\u79fb\u9879\u5316\u5f97 $a-x=b$ \uff0c\u4e5f\u5c31\u662f\u8981\u6211\u4eec\u67e5\u4e00\u4e0b\uff1a\n\n**\u5728\u8fd9\u4e2a\u533a\u95f4\u4e2d\uff0c\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u5143\u7d20\uff08\u5047\u8bbe\u5176\u503c\u4e3a $a$\uff09\uff0c\u4e14\u503c\u4e3a $a-x$ \u7684\u5143\u7d20\u4e5f\u5b58\u5728\u3002**\n\n\u8bbe\u6211\u4eec\u5f53\u524d\u7684 $bitset$ \u4e3a $b1$ \u3002\n\n\u56e0\u4e3a $bitset$ \u7684\u4e0b\u6807\u4ee3\u8868\u7684\u662f**\u5143\u7d20\u7684\u503c**\uff0c\u90a3\u8981 **\u67e5\u7684\u503c** \u51cf\u6389 $x$ \u5b9e\u5219\u5c31\u662f **\u67e5\u7684\u4f4d\u7f6e** \u5f80\u5de6\u4e86 $x$ \u3002\u8fd9\u5728 $bitset$ \u4e2d\u5f88\u5bb9\u6613\u7528**\u5de6\u79fb**\uff08<<) \u5b9e\u73b0\u3002\n \n\u8fd9\u65f6\u5018\u82e5\u6211\u4eec $(b1<<x)$ \u548c\u539f\u5148\u7684 $b1$  **\u6309\u4f4d** \u4e00\u4e0b\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0 $b1$ \u4e2d\u7684\u6bcf\u4e00\u4e2a\u6570\u4f4d\uff08\u8bbe\u5176\u4ee3\u8868\u7684\u503c\u4e3a $k$ \uff09\uff0c\u5728 $(b1<<x)$ \u4e2d\u7684\u5bf9\u4f4d\u4fbf\u4ee3\u8868\u7740 $k-x$ \u3002\n\n\u5982\u679c **\u4e0e** \u8fd0\u7b97\u540e\u7684\u7ed3\u679c\u91cc\uff0c\u67d0\u4e00\u4f4d\u4f9d\u7136\u662f 1\u3002\u5219\u8bf4\u660e\u8be5\u4f4d\u5728\u4e24\u4e2a $bitset$ \u91cc\u8fb9\u90fd\u662f $1$ \uff0c\u4e5f\u5c31\u4ee3\u8868\u4e86**\u5b83\u548c\u5b83\u51cf $x$ \u90fd\u5728\u533a\u95f4\u4e2d\u51fa\u73b0\u4e86**\u3002\u90a3\u4e48\u8fd9\u5c31\u662f\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u5143\u7d20\u3002\n\n\u67e5\u8be2\u4e00\u4e2a $bitset$ \u91cc\u662f\u5426\u6709\u67d0\u4e00\u4f4d\u4e3a $1$ \u662f\u5f88\u8f7b\u677e\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u7528 $bitset$ \u7684 $\\operatorname{any()}$ \u51fd\u6570\uff0c\u82e5\u6709 $1$ \u5219\u8fd4\u56de\u771f\uff1a\n\n```cpp\nvoid option1(int qid)\n{\n\tans[q[qid].id] = ((b1 << q[qid].x) & b1).any();\n}\n```\n\n\n------------\n\n$\\large\\color{orange}{\\texttt{\u548c\uff1a}}$\n\n\u8fd9\u6b21\u6211\u4eec\u7684\u8981\u6c42\u662f $a+b=x$ \uff0c\u79fb\u9879\u5316\u5f97 $x-a=b$ \uff0c\u4e5f\u5c31\u662f\u8981\u6211\u4eec\u67e5\u4e00\u4e0b\uff1a\n\n**\u5728\u8fd9\u4e2a\u533a\u95f4\u4e2d\uff0c\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u5143\u7d20\uff08\u5047\u8bbe\u5176\u503c\u4e3a $a$\uff09\uff0c\u4e14\u503c\u4e3a $x-a$ \u7684\u5143\u7d20\u4e5f\u5b58\u5728\u3002**\n\n\u8fd9\u91cc\u5c31\u4e0d\u80fd\u53ea\u7528\u7b80\u5355\u7684\u5de6\u79fb\u53f3\u79fb\u6765\u89e3\u51b3\u4e86\u3002\u6211\u4eec\u518d\u5f00\u4e00\u4e2a $bitset\\;b2$ \uff0c\u91cc\u9762\u7684\u5b58\u503c\u89c4\u5219\u4e3a\uff1a\n\n**\u300e$b2$ \u4e2d\uff0c\u7b2c $i$ \u4f4d\u8868\u793a\u503c\u4e3a $100000-i$ \u7684\u5143\u7d20\u662f\u5426\u5728\u533a\u95f4\u4e2d\u51fa\u73b0\u3002\u300f**\n\n\u73b0\u5728\u6211\u4eec\u8981\u505a\u5230 $a$ \u548c $x-a$ \u5bf9\u4f4d\u3002\n\n\u90a3\u6211\u4eec\u5148\u5c06 $b1$ \u5de6\u79fb $100000-x$ \u4f4d\uff0c\u5c31\u53ef\u4ee5\u505a\u5230\u6309\u4f4d\u4e4b\u540e\uff0c\u5bf9\u4f4d\u7684\u4e24\u4e2a\u5206\u522b\u4e3a $100000-a$ \u548c $a-(100000-x)$ \uff0c\u76f8\u52a0\u5373\u4e3a $x$ \u3002\u7136\u540e**\u4e0e\u8fd0\u7b97**\uff0c\u6c42 $\\operatorname{any}$ \u5373\u53ef\uff1a\n\n```cpp\nvoid option2(int qid)\n{\n\tans[q[qid].id] = ((b1 << (100000 - q[qid].x)) & b2).any();\n}\n```\n\n\n\n------------\n\n$\\large\\color{Limegreen}{\\texttt{\u79ef\uff1a}}$\n\n\u6c42 $a\\cdot b=x$ \uff0c\u79fb\u9879\u5316\u5f97 $x\\div a=b$ \uff0c\u4e5f\u5c31\u662f\u8981\u6211\u4eec\u67e5\u4e00\u4e0b\uff1a\n\n**\u5728\u8fd9\u4e2a\u533a\u95f4\u4e2d\uff0c\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u5143\u7d20\uff08\u5047\u8bbe\u5176\u503c\u4e3a $a$\uff09\uff0c\u4e14\u503c\u4e3a $x\\div a$ \u7684\u5143\u7d20\u4e5f\u5b58\u5728\u3002**\n\n\u8fd9\u56de\u5de6\u79fb\u53f3\u79fb\u662f\u771f\u505a\u4e0d\u4e86\u4e86\uff0c\u4f46\u662f\u505a\u4e0d\u4e86 $bitset$ \u662f\u5426\u5c31\u4f1a\u6ca6\u843d\u4e3a\u66b4\u529b\uff1f\n\n${\\texttt {\u663e\u7136\u4e0d\u662f}}$\uff0c\u8003\u8651\u5230 $x\\leq 10^5$ \uff0c\u6211\u4eec\u53ef\u4ee5 $dark$ \u529b\u679a\u4e3e\u7ea6\u6570\uff0c\u8303\u56f4\u5728 $\\sqrt{x}$ \u4e4b\u5185\u3002\n\n\u5018\u82e5\u5bf9\u4e8e\u4e00\u4e2a\u7ea6\u6570 $i$ \uff0c\u6709 $b1_i$ \u548c $b1_{\\large\\frac{x}{i}}$ \uff08 $b1$ \u5b9a\u4e49\u540c\u4e0a\uff09\u90fd\u4e3a $1$ \uff0c\u5373 $i$ \u548c $\\dfrac{x}{i}$ \u540c\u65f6\u5b58\u5728\u4e8e\u533a\u95f4\u5185\u3002\u5219\u8fd9\u662f\u4e00\u4e2a\u53ef\u884c\u7684\u7b54\u6848\u3002\n\n```cpp\nvoid option3(int qid)\n{\n\tint x = q[qid].x;\n\tfor (int i = 1; i <= sqrt(x); i++)\n\t{\n\t\tif (x % i)\n\t\t{\n\t\t\tcontinue;\n            //\u8981\u6c42\u5176\u5fc5\u987b\u80fd\u6574\u9664\n\t\t}\n\t\tif (b1[i] && b1[x / i])\n\t\t{\n        //\u90fd\u5b58\u5728\u5219\u53ef\u884c\n\t\t\tans[q[qid].id] = 1;\n\t\t\treturn;\n\t\t}\n\t}\n\tans[q[qid].id] = 0;//\u5426\u5219\u4e0d\u53ef\u884c\n}\n```\n\n\n------------\n\n$\\large\\color{RoyalBlue}{\\texttt{\u5546\uff1a}}$\n\n\u8fd9\u5c31\u662f\u8fd9\u9053\u9898\u6700\u6bd2\u7624\u7684\u5730\u65b9\u4e86\u3002\u4e5f\u662f\u5b83\u552f\u4e00\u4e0d\u540c\u4e8e[P3674 \u5c0f\u6e05\u65b0\u4eba\u6e23\u7684\u672c\u613f](https://www.luogu.com.cn/problem/P3674)\u7684\u5730\u65b9\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/if2lnjnx.png)\n\n\u6458\u81ea lxl \u5728 P3674 \u7684\u4e00\u7bc7\u9898\u89e3\uff0c\u7136\u540e\u5c31\u6709\u4e86\u300a\u7389\u7c73\u7530\u300b\uff08~~\u6709 **\u70b9** \u9ebb \u70e6/jk~~\uff09\n\n### $\\mathcal{STEP\\; 1}$\n\n\u6211\u4eec\u5148\u8001\u89c4\u77e9\u8f6c\u5316\u8981\u6c42\uff1a\n\n\u6c42 $a\\div b=x$ \uff0c\u79fb\u9879\u5316\u5f97 $a\\div x=b$ \uff0c\u5373\u67e5\uff1a\n\n**\u5728\u8fd9\u4e2a\u533a\u95f4\u4e2d\uff0c\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u5143\u7d20\uff08\u5047\u8bbe\u5176\u503c\u4e3a $a$\uff09\uff0c\u4e14\u503c\u4e3a $a\\div x$ \u7684\u5143\u7d20\u4e5f\u5b58\u5728\u3002**\n\n\u4e00\u6837\u7684\uff0c $bitset$ \u4e5f SPFA \u4e86\u3002\u6211\u4eec\u8fd9\u91cc\u8fd8\u6709\u9003\u51fa\u66b4\u529b\u7684\u505a\u6cd5\u5417\uff1f\n\n\u6709\u7684\u3002\n\n${\\texttt {\u6362\u4e2a\u601d\u8def}}$\uff0c\u65e2\u7136\u9700\u8981\u6709\u4e00\u7ec4 $a$ \uff08\u5373 $b\\cdot x$ \uff09\u548c $b$ \u90fd\u662f\u5b58\u5728\u4e8e\u533a\u95f4\u91cc\u7684\uff0c\u90a3\u4e5f\u53ef\u4ee5\u8bf4\u9700\u8981\u6709\u4e00\u7ec4 $a$ \u548c $a\\cdot x$ \u90fd\u662f\u5728\u533a\u95f4\u91cc\u7684\u3002\n\n\u679a\u4e3e $a$ \u76f4\u81f3 $a\\cdot x\\geq 10^5$ \uff0c\u5f53\u6709 $b1_a$ \u548c $b1_{\\;a\\cdot x}$ \u90fd\u4e3a $1$ \uff0c\u5219\u662f\u4e00\u7ec4\u53ef\u884c\u7684\u7b54\u6848\u3002\n\n\u505a\u6cd5\u590d\u6742\u5ea6 $O(\\dfrac{N}{x})$ \uff0c\u8981\u662f $x$ \u5f88\u5c0f\u7684\u8bdd\uff0c\u8fd9\u91cc\u5c31\u5c06\u8fd1 $O(N)$ \uff0c\u6211\u4eba\u6ca1\u4e86\u3002\u663e\u7136\uff0c\u8fd9\u6837\u7684\u83ab\u961f\u53ea\u80fd\u9ad8\u6548\u5904\u7406**\u5927\u4e8e $\\sqrt{N}$ \u7684 $x$ \u503c\u3002**\n\n\u90a3\u4e5f\u5148\u628a\u8fd9\u90e8\u5206\u7684\u4ee3\u7801\u653e\u4e00\u4e0bQwQ\uff1a\n\n```cpp\nvoid option4(int qid)\n{\n\tint x = q[qid].x;\n\tif (!x)//\u7279\u52240\u9700\u63d0\u9632\n\t{\n\t\tans[q[qid].id] = (b1[0] && b1[0] != b1.count());\n\t\treturn;\n\t}\n\tfor (int i = 1; i * x <= maxx; i++)\n\t{\n\t\tif (b1[i] && b1[i * x])\n\t\t{//\u90fd\u5b58\u5728\u5219\u53ef\u884c\n\t\t\tans[q[qid].id] = 1;\n\t\t\treturn;\n\t\t}\n\t}\n\tans[q[qid].id] = 0;//\u5426\u5219\u4e0d\u53ef\u884c\n}\n```\n### $\\mathcal{STEP\\; 2}$\n\n\u6211\u4eec\u4e0d\u5f97\u4e0d\u628a $\\sqrt{N}$ \u4ee5\u4e0b\u7684\u90e8\u5206\u7279\u6b8a\u5904\u7406\uff0c\u4e0d\u901a\u8fc7\u83ab\u961f\uff0c\u5bfb\u6c42\u65b0\u505a\u6cd5\u3002\u6211\u4eec\u4e0b\u9762\u79f0\u8fd9\u4e9b\u8be2\u95ee\u4e3a\u201c**\u7279\u6b8a\u8be2\u95ee**\u201d\n\n\u9898\u76ee\u4e2d\u6240\u8c13\u7684\u201c\u5546\u201d\uff0c\u5b9e\u5219\u5305\u542b\u4e86\u4e24\u79cd\u60c5\u51b5\uff0c $a\\div b=x$ \u4e0e $b\\div a=x$ \u3002\n\n\u5bf9\u4e8e $x$ \u503c\u76f8\u540c\u7684\u6240\u6709\u7279\u6b8a\u8be2\u95ee\uff0c\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u7528\u4e00\u4e2a\u7ebf\u6027\u505a\u6cd5**\u4e00\u8d77\u6c42\u89e3**\uff0c\u4ee5\u8fbe\u5230 $O(N\\sqrt{N})$\u3002\n\n${\\texttt {\u6709\u4e00\u79cd\u505a\u6cd5\u662f}}$\uff0c\u5bf9\u4e8e $x$ \u76f8\u540c\u7684\u8be2\u95ee\uff0c\u4ece $1$ \u81f3 $N$ \u626b\u4e00\u904d\u539f\u5e8f\u5217\uff0c\u540c\u65f6\u7ef4\u62a4\u4e24\u4e2a\u6570\u7ec4\u3002\n\n$apr$ \uff0c$appear$ \u5373\u51fa\u73b0\uff0c\u8868\u793a\u5e8f\u5217\u4e2d\u7684\u4e00\u4e2a\u503c $v$ \u4e0a\u4e00\u6b21\u51fa\u73b0\u5728 $apr_v$ \u8fd9\u4e2a\u4f4d\u7f6e\u3002\n\n\u6211\u4eec\u5b9a\u4e49\u540d\u8bcd\u201c\u5171\u73b0\u201d\u610f\u4e3a\uff1a\n\n\u300e**\u626b\u5230\u4e86\u67d0\u4e00\u4e2a\u4f4d\u7f6e\u65f6\uff0c\u6709\u4e00\u4e2a\u503c $v$ \u4e0e $v\\cdot x$ \u6216 $v\\div x$ \u4e00\u8d77\u51fa\u73b0** \u3002\u300f\n\n\uff08\u8fd9\u4e2a\u201c**\u6216**\u201d\u5b57\u6b63\u4ee3\u8868\u4e86\u201c\u5546\u201d\u7684\u4e24\u79cd\u60c5\u51b5\uff09\n\n$coapr$ \uff0c$co-$ \u524d\u7f00\u6307\u5171\u540c\uff0c~~\u7a9d\u81ea\u5df1\u7f16\u7684\u8bcd~~\u3002\u8868\u793a\u5e8f\u5217\u4e2d\u7684\u4e00\u4e2a\u4f4d\u7f6e $p$ \uff0c\u76f4\u5230\u626b\u5230\u8fd9\u4e2a\u4f4d\u7f6e\u65f6\uff0c**\u4e0a\u4e00\u6b21\u5171\u73b0**\u662f\u53d1\u751f\u5728 $coapr_{p}$ \u8fd9\u4e2a\u4f4d\u7f6e\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u8f7b\u8f7b\u677e\u677e\u5730\u7528 $apr$ \u6570\u7ec4\u6765\u5b9e\u65f6\u66f4\u65b0 $coapr$ \u6570\u7ec4\u3002\n\n${\\texttt {\u6700\u540e}}$\uff0c\u5982\u679c\u5bf9\u4e8e\u4e00\u4e2a\u53f3\u8fb9\u754c $q[i].R$ \uff0c\u5728**\u53f3\u8fb9\u754c\u524d**\u7684\u6700\u540e\u4e00\u6b21\u5171\u73b0\u4f4d\u7f6e $coapr_{\\;q[i].R}$ \uff0c\u662f\u5728**\u5de6\u8fb9\u754c\u540e**\uff0c\u5219\u8fd9\u662f\u53ef\u884c\u7684\u7b54\u6848\u3002\n\n```cpp\nvoid option_special()\n{\n\tfor (int x = 1; x <= LIMIT; x++)\n\t{//LIMIT\u63d0\u524d\u5904\u7406\uff0c\u5c31\u662f10^5\u7684\u7b97\u672f\u5e73\u65b9\u6839\n\t\tif (sq[x].empty())\n\t\t{\n\t\t\tcontinue;\n\t\t}\n        //\u7528vector\u5b58\u8fd9\u4e9b\u7279\u6b8a\u8be2\u95ee\n\t\tmemset(apr, 0, sizeof(apr));\n\t\tmemset(coapr, 0, sizeof(coapr));\n        //apr\u548ccoapr\u7684\u5b9a\u4e49\u5982\u4e0a\n\t\tint now = 0;//\u6307\u5411\u4e0a\u4e00\u6b21\u5171\u73b0\u53d1\u751f\u7684\u4f4d\u7f6e\n\t\tfor (int i = 1; i <= N; i++)\n\t\t{\n\t\t\tint val = num[i];\n            //num\u5373\u539f\u5e8f\u5217\n            \n\t\t\tapr[val] = i;//\u66f4\u65b0apr\n            \n            /*\u66f4\u65b0\u5171\u73b0\u53d1\u751f\u7684\u4f4d\u7f6e*/\n\t\t\tif (x * val <= maxx)\n\t\t\t{\n\t\t\t\tnow = max(now, apr[x * val]);\n\t\t\t}\n\t\t\tif (!(val % x))\n\t\t\t{\n\t\t\t\tnow = max(now, apr[val / x]);\n\t\t\t}\n            \n\t\t\tcoapr[i] = now; //\u66f4\u65b0coapr\n\t\t}\n\t\tfor (int i = 0; i < sq[x].size(); i++)\n\t\t{\n\t\t\tans[sq[x][i].id] = (sq[x][i].L <= coapr[sq[x][i].R]);//\u53f3\u8fb9\u754c\u524d\u7684\u4e0a\u4e00\u6b21\u5171\u73b0\u53d1\u751f\u5728\u5de6\u8fb9\u754c\u540e\u5219\u53ef\u884c\u3002\n\t\t}\n\t}\n}\n```\n\n\n------------\n\n$\\large{\\texttt {\u81f3\u6b64}}$\uff0c\u672c\u9898\u5df2\u7ecf\u53ef\u505a\u4e86\uff0c\u4e0b\u653e\u4ee3\u7801\uff0c\u5199\u6cd5\u53c2\u7167\u4e86@Irelia\u10e6 \u795e\u4ed9\u7684\u9898\u89e3\uff0c\u4e5f\u8bf7\u5927\u4f6c\u4e0d\u8981\u89c1\u602aQwQ\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\nconst int MAX = 1e5 + 7;\nbitset<MAX> b1, b2;\nint LIMIT;\nint N, M;\nint block[MAX], num[MAX];\nint cntq = 0, cntsq = 0;\nstruct query\n{\n\tint L, R;\n\tint id;\n\tint typ, x;\n} q[MAX];\nstruct special_query\n{\n\tint L, R;\n\tint id;\n\tspecial_query(int a = 0, int b = 0, int c = 0)\n\t{\n\t\tL = a;\n\t\tR = b;\n\t\tid = c;\n\t}\n};\nvector<special_query> sq[MAX];\nbool cmp(query a, query b)\n{\n\tif (block[a.L] != block[b.L])\n\t{\n\t\treturn a.L < b.L;\n\t}\n\treturn (block[a.L] & 2 ? a.R < b.R : a.R > b.R);\n}\nint ans[MAX], cnt[MAX], sum = 0;\nvoid ins(int p)\n{\n\tif (!cnt[num[p]])\n\t{\n\t\tb1.set(num[p]);\n\t\tb2.set(100000 - num[p]);\n\t}\n\tcnt[num[p]]++;\n}\nvoid del(int p)\n{\n\tcnt[num[p]]--;\n\tif (!cnt[num[p]])\n\t{\n\t\tb1.reset(num[p]);\n\t\tb2.reset(100000 - num[p]);\n\t}\n}\nvoid option1(int qid)\n{\n\tans[q[qid].id] = ((b1 << q[qid].x) & b1).any();\n}\nvoid option2(int qid)\n{\n\tans[q[qid].id] = ((b1 << (100000 - q[qid].x)) & b2).any();\n}\nvoid option3(int qid)\n{\n\tint x = q[qid].x;\n\tfor (int i = 1; i <= sqrt(x); i++)\n\t{\n\t\tif (x % i)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tif (b1[i] && b1[x / i])\n\t\t{\n\t\t\tans[q[qid].id] = 1;\n\t\t\treturn;\n\t\t}\n\t}\n\tans[q[qid].id] = 0;\n}\nvoid option4(int qid)\n{\n\tint x = q[qid].x;\n\tif (!x)\n\t{\n\t\tif (b1[0] && b1[0] != b1.count())\n\t\t\tans[q[qid].id] = 1;\n\t\telse\n\t\t\tans[q[qid].id] = 0;\n\t\treturn;\n\t}\n\tfor (int i = 1; i * x <= 100000; i++)\n\t{\n\t\tif (b1[i] && b1[i * x])\n\t\t{\n\t\t\tans[q[qid].id] = 1;\n\t\t\treturn;\n\t\t}\n\t}\n\tans[q[qid].id] = 0;\n}\nint coapr[MAX], apr[MAX];\nvoid option_special()\n{\n\tfor (int x = 1; x <= LIMIT; x++)\n\t{\n\t\tif (sq[x].empty())\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tmemset(apr, 0, sizeof(apr));\n\t\tmemset(coapr, 0, sizeof(coapr));\n\t\tint now = 0;\n\t\tfor (int i = 1; i <= N; i++)\n\t\t{\n\t\t\tint val = num[i];\n\t\t\tapr[val] = i;\n\t\t\tif (x * val <= 100000)\n\t\t\t{\n\t\t\t\tnow = max(now, apr[x * val]);\n\t\t\t}\n\t\t\tif (!(val % x))\n\t\t\t{\n\t\t\t\tnow = max(now, apr[val / x]);\n\t\t\t}\n\t\t\tcoapr[i] = now; //!\n\t\t}\n\t\tfor (int i = 0; i < sq[x].size(); i++)\n\t\t{\n\t\t\tans[sq[x][i].id] = (sq[x][i].L <= coapr[sq[x][i].R]);\n\t\t}\n\t}\n}\nsigned main()\n{\n\tcin >> N >> M;\n\tint lenb = sqrt(M);\n\tLIMIT = 500;\n\tfor (int i = 1; i <= N; i++)\n\t{\n\t\tcin >> num[i];\n\t\tblock[i] = (i - 1) / lenb + 1;\n\t}\n\tfor (int i = 1; i <= M; i++)\n\t{\n\t\tint typ, l, r, x;\n\t\tcin >> typ >> l >> r >> x;\n\t\tif (typ == 4 && x <= LIMIT && x)\n\t\t{\n\t\t\tsq[x].push_back(special_query(l, r, i));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tq[++cntq].L = l;\n\t\t\tq[cntq].R = r;\n\t\t\tq[cntq].typ = typ;\n\t\t\tq[cntq].x = x;\n\t\t\tq[cntq].id = i;\n\t\t}\n\t}\n\tsort(q + 1, q + 1 + cntq, cmp);\n\tint L = 1, R = 0;\n\tfor (int i = 1; i <= cntq; i++)\n\t{\n\t\twhile (L > q[i].L)\n\t\t{\n\t\t\tL--;\n\t\t\tins(L);\n\t\t}\n\t\twhile (R < q[i].R)\n\t\t{\n\t\t\tR++;\n\t\t\tins(R);\n\t\t}\n\t\twhile (L < q[i].L)\n\t\t{\n\t\t\tdel(L);\n\t\t\tL++;\n\t\t}\n\t\twhile (R > q[i].R)\n\t\t{\n\t\t\tdel(R);\n\t\t\tR--;\n\t\t}\n\t\tif (q[i].typ == 1)\n\t\t{\n\t\t\toption1(i);\n\t\t}\n\t\tif (q[i].typ == 2)\n\t\t{\n\t\t\toption2(i);\n\t\t}\n\t\tif (q[i].typ == 3)\n\t\t{\n\t\t\toption3(i);\n\t\t}\n\t\tif (q[i].typ == 4)\n\t\t{\n\t\t\toption4(i);\n\t\t}\n\t}\n\toption_special();\n\tfor (int i = 1; i <= M; i++)\n\t{\n\t\tif (ans[i])\n\t\t\tcout << \"yuno\" << endl;\n\t\telse\n\t\t{\n\t\t\tcout << \"yumi\" << endl;\n\t\t}\n\t}\n}\n```\n\u9530\u950c\u7b14\u8005\u7684\u7b2c\u4e8c\u7bc7 $Ynoi$ \u9898\u89e3 AwA \u3002",
        "postTime": 1602078272,
        "uid": 150879,
        "name": "quest_2",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5355 \u3010[Ynoi2017]\u7531\u4e43\u7684\u7389\u7c73\u7530\u3011"
    },
    {
        "content": "## \u9898\u610f\n- #### \u7ed9\u4f60\u957f\u5ea6\u4e3a $n$ \u7684\u4e00\u4e2a\u5e8f\u5217\uff0c\u4e00\u5171\u6709 $m$ \u7ec4\u8be2\u95ee\uff0c\u5bf9\u4e8e\u6bcf\u7ec4\u8be2\u95ee\u6c42\u51fa\u5728\u533a\u95f4 $[l_i,r_i]$ \u4e2d\u80fd\u5426\u627e\u5230\u4e24\u4e2a\u6570\u4f7f\u5b83\u4eec\u7684\u548c\u6216\u8005\u5dee\u6216\u8005\u79ef\u6216\u8005\u5546\u4e3a $x_i$\u3002\n\n## \u505a\u6cd5\n\u83ab\u961f+\u72b6\u6001\u538b\u7f29\u3002\n\n\u9996\u5148\u7528\u83ab\u961f\u6c42\u51fa\u5f53\u524d\u533a\u95f4\u5404\u4e2a\u6570\u7684\u51fa\u73b0\u60c5\u51b5\uff0c\u7528 `bitset` \u5b58\u8d77\u6765\u3002\u6ce8\u610f\uff0c\u8fd9\u91cc\u9700\u8981\u5b58\u4e24\u4e2a `bitset`\uff0c\u4e00\u4e2a\u5b58\u6b63\u7684\uff0c\u8bb0\u4f5c $zlt$\uff1b\u4e00\u4e2a\u5b58\u53cd\u7684\uff0c\u8bb0\u4f5c $ckj$\u3002\n\n\u5bf9\u4e8e\u5dee\u4e3a $x_i$ \u7684\u60c5\u51b5\uff0c\u53ea\u8981\u5e8f\u5217\u4e2d\u540c\u65f6\u5b58\u5728 $y$ \u548c $y+x_i$ \u5c31\u53ef\u4ee5\u4e86\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f $zlt\\&(zlt<<x_i)$ \u4e2d\u662f\u5426\u6709 `1`\u3002\n\n\u5bf9\u4e8e\u548c\u4e3a $x_i$ \u7684\u60c5\u51b5\uff0c\u53ea\u8981\u5e8f\u5217\u4e2d\u540c\u65f6\u5b58\u5728 $y$ \u548c $x_i-y$ \u5c31\u53ef\u4ee5\u4e86\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f $zlt\\&(ckj>>(n-x_i))$ \u4e2d\u662f\u5426\u6709 `1`\u3002\n\n\u5bf9\u4e8e\u79ef\u4e3a $x_i$ \u7684\u60c5\u51b5\uff0c\u66b4\u529b\u679a\u4e3e\u56e0\u6570\u5c31\u884c\u4e86\u3002\u56e0\u4e3a $\\sqrt x_i$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u4f1a\u6bd4 $\\sqrt n$ \u5927\u3002\n\n\u800c\u5bf9\u4e8e\u5546\u4e3a $x_i$ \u7684\u60c5\u51b5\uff0c\u5c31\u9700\u8981**\u5206\u7c7b\u8ba8\u8bba**\u4e86\u2026\u2026\n\n- ###### \u5bf9\u4e8e $x_i\\ge \\sqrt n$ \u7684\u60c5\u51b5\n\u7531\u4e8e $x_i$ \u6bd4 $\\sqrt n$ \u8fd8\u5927\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u679a\u4e3e\u9664\u6570\u6765\u5224\u65ad\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u6b63\u786e\u7684\u3002\n\n- ###### \u5bf9\u4e8e $x_i< \\sqrt n$ \u7684\u60c5\u51b5\n\u7531\u4e8e $x_i$ \u6bd4 $\\sqrt n$ \u5c0f\uff0c\u6240\u4ee5\u4e0d\u80fd\u66b4\u529b\u679a\u4e3e\u3002\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u6570\u7ec4 $las$\uff0c$las_i$ \u8868\u793a\u79bb\u4f4d\u7f6e $i$ \u6700\u8fd1\u7684\u6ee1\u8db3\u6761\u4ef6\u7684\u5de6\u7aef\u70b9\uff0c\u90a3\u4e48\u53ea\u8981 $l_i\\le las_{r_i}$ \u8fd9\u4e2a\u8be2\u95ee\u5c31\u662f\u5408\u6cd5\u7684\u3002\n\n\u663e\u7136\uff0c\u5bf9\u4e8e\u76f8\u540c\u7684 $x_i$\uff0c$las$ \u6570\u7ec4\u7684\u503c\u662f\u4e0d\u4f1a\u6539\u53d8\u7684\u3002\u90a3\u4e48\u53ef\u4ee5\u7528\u4e00\u4e2a `vector` \u628a $x$ \u76f8\u540c\u7684\u8be2\u95ee\u5b58\u5230\u4e00\u8d77\u3002\n\n\u8003\u8651 $las$ \u6570\u7ec4\u7684\u6c42\u89e3\u3002\u9996\u5148\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $x$ \u503c\u8dd1\u4e00\u904d\u5faa\u73af\uff0c\u5b9a\u4e49\u4e00\u4e2a\u6570\u7ec4 $temp$\uff0c$temp_j$ \u8868\u793a $i$ \u524d\u9762 $j$ \u8fd9\u4e2a\u6570\u5728\u6570\u7ec4\u4e2d\u6700\u540e\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\u518d\u7528\u4e00\u4e2a\u53d8\u91cf $maxx$\uff0c\u8868\u793a $las_{i-1}$\uff0c\u90a3\u4e48\u5faa\u73af\u5230 $i$ \u65f6 $temp_{a_i}$ \u5f88\u663e\u7136\u5c31\u662f $i$\u3002\n\n\u518d\u5bf9 $maxx$ \u8fdb\u884c\u66f4\u65b0\uff0c\u5982\u679c $a_i\\times x \\le n$\uff0c\u90a3\u4e48 $a_i$ \u5c31\u53ef\u4ee5\u505a\u9664\u6570\uff0c$a_i\\times x$ \u53ef\u4ee5\u505a\u88ab\u9664\u6570\uff0c$maxx=\\max(maxx,temp_{a_i\\times x})$ \uff1b\u5982\u679c $a_i \\mid x$\uff0c\u90a3\u4e48 $a_i$ \u5c31\u53ef\u4ee5\u505a\u88ab\u9664\u6570\uff0c$a_i\\div x$ \u53ef\u4ee5\u505a\u9664\u6570\uff0c$maxx=\\max(maxx,temp_{a_i\\div x})$\u3002\n\n\u6700\u540e\u66f4\u65b0\u5b8c\u7684 $maxx$ \u663e\u7136\u5c31\u662f $las_i$\u3002\n\n\u8fd9\u4e00\u90e8\u5206\u548c\u83ab\u961f\u4e00\u6bdb\u94b1\u5173\u7cfb\u90fd\u6ca1\u6709\uff0c\u6240\u4ee5\u8dd1\u5b8c\u83ab\u961f\u5355\u72ec\u5904\u7406\u5c31\u597d\u4e86\u3002\n\n\u6700\u540e\u6ce8\u610f\u5361\u5361\u5e38\u3002\n\n## AC \u4ee3\u7801\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <bitset>\n#include <vector>\n#include <cstring>\n\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\n#define S 100005\n\nchar buf[1<<21],*p1=buf,*p2=buf;\n\nusing namespace std;\n\nstruct node\n{\n\tint opt,l,lx,r,x,id;\n}pro[S];\n\nint n,m,tot,a[S],cnt[S],las[S],temp[S];\nint blo,who[S];\nbitset<S> zlt,ckj;\nbool ans[S];\nvector<node> asks[S]; \n\ninline int read()\n{\n\tint s=0,w=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9')\n\t{\n\t\tif(ch=='-')\n\t\t{\n\t\t\tw=-1;\n\t\t}\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9')\n\t{\n\t\ts=(s<<1)+(s<<3)+(ch^48);\n\t\tch=getchar();\n\t}\n\treturn s*w;\n}\n\ninline bool cmp(node &x,node &y)\n{\n\treturn x.lx^y.lx?x.l<y.l:((x.lx&1)?x.r<y.r:x.r>y.r);\n}\n\ninline void add(int x)\n{\n\tif(++cnt[a[x]]==1)\n\t{\n\t\tzlt[a[x]]=1;\n\t\tckj[n-a[x]]=1;\n\t}\n}\n\ninline void del(int x)\n{\n\tif(--cnt[a[x]]==0)\n\t{\n\t\tzlt[a[x]]=0;\n\t\tckj[n-a[x]]=0;\n\t}\n}\n\nint main()\n{\n\tn=read();\n\tm=read();\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\ta[i]=read();\n\t}\n\tblo=sqrt(n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\twho[i]=(i-1)/blo+1;\n\t}\n\tnode tmp;\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\ttmp.opt=read();\n\t\ttmp.l=read();\n\t\ttmp.r=read();\n\t\ttmp.x=read();\n\t\ttmp.lx=who[tmp.l];\n\t\ttmp.id=i;\n\t\tif(tmp.opt==4&&tmp.x<blo)\n\t\t{\n\t\t\tasks[tmp.x].push_back(tmp);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpro[++tot]=tmp;\n\t\t}\n\t}\n\tsort(pro+1,pro+tot+1,cmp);\n\tint lpos=1,rpos=0;\n\tfor(int i=1;i<=tot;++i)\n\t{\n\t\tint l=pro[i].l,r=pro[i].r,x=pro[i].x,id=pro[i].id;\n\t\twhile(lpos<l) del(lpos++);\n\t\twhile(lpos>l) add(--lpos);\n\t\twhile(rpos<r) add(++rpos);\n\t\twhile(rpos>r) del(rpos--);\n\t\tif(pro[i].opt==1)\n\t\t{\n\t\t\tans[id]=(zlt&(zlt<<x)).any();\n\t\t}\n\t\telse if(pro[i].opt==2)\n\t\t{\n\t\t\tans[id]=(zlt&(ckj>>(n-x))).any();\n\t\t}\n\t\telse if(pro[i].opt==3)\n\t\t{\n\t\t\tans[id]=false;\n\t\t\tfor(int j=1;j*j<=x;++j)\n\t\t\t{\n\t\t\t\tif(x%j==0&&zlt[j]&&zlt[x/j])\n\t\t\t\t{\n\t\t\t\t\tans[id]=true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tans[id]=false;\n\t\t\tfor(int j=1;j*x<=n;++j)\n\t\t\t{\n\t\t\t\tif(zlt[j]&&zlt[j*x])\n\t\t\t\t{\n\t\t\t\t\tans[id]=true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<blo;++i)\n\t{\n\t\tif(asks[i].empty())\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tmemset(temp,0,sizeof(temp));\n\t\tmemset(las,0,sizeof(las));\n\t\tint maxx=0;\n\t\tfor(int j=1;j<=n;++j)\n\t\t{\n\t\t\ttemp[a[j]]=j;\n\t\t\tif(a[j]*i<=n)\n\t\t\t{\n\t\t\t\tmaxx=max(maxx,temp[a[j]*i]);\n\t\t\t}\n\t\t\tif(a[j]%i==0)\n\t\t\t{\n\t\t\t\tmaxx=max(maxx,temp[a[j]/i]);\n\t\t\t}\n\t\t\tlas[j]=maxx;\n\t\t}\n\t\tfor(int j=0;j<asks[i].size();++j)\n\t\t{\n\t\t\tnode now=asks[i][j];\n\t\t\tans[now.id]=now.l<=las[now.r];\n\t\t}\n\t}\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tputs(ans[i]?\"yuno\":\"yumi\");\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1622361587,
        "uid": 251130,
        "name": "lovely_ckj",
        "ccfLevel": 0,
        "title": "P5355 [Ynoi2017] \u7531\u4e43\u7684\u7389\u7c73\u7530 \u9898\u89e3"
    },
    {
        "content": "\u7b2c\u4e8c\u9053 $\\text{Ynoi}$\uff0c\u53d1\u4e2a\u9898\u89e3\u7eaa\u5ff5\u4e00\u4e0b\u3002\n\n\u8fd9\u9898\u52a0\u51cf\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u5f88\u7b80\u5355\uff0c\u83ab\u961f+ $bitset$ \u5c31\u597d\u4e86\u3002\n\n\u5177\u4f53\u7684\u8bdd\u5c31\u662f\u7528\u4e24\u4e2a $bitset$ $f1,f2$\uff0c\u4e00\u4e2a\u8bb0\u5f55\u76ee\u524d\u8fd9\u4e00\u6bb5\u6709\u54ea\u4e9b\u6570\uff0c\u53e6\u4e00\u4e2a\u5219\u53cd\u7740\u8bb0\u5f55\u4e00\u4e0b\uff0c\u4e5f\u5c31\u662f\u5982\u679c\u6709 $x$\uff0c\u5c31 $f2[c-x]=1$\uff0c$c$ \u8868\u793a\u503c\u57df\u6700\u5927\u503c\u3002\n\n\u7136\u540e\u4f1a\u53d1\u73b0\u5982\u679c\u4e24\u4e2a\u6570\u7684\u548c\u4e3a $x$\uff0c\u5219\u4e00\u5b9a\u4e3a $y,x-y$\uff0c\u800c\u5176\u4e2d $x-y$ \u5728 $f2$ \u4e2d\u5bf9\u5e94\u7684\u5c31\u662f $c-x+y$ \uff0c\u6240\u4ee5\u6211\u4eec\u628a $f2$ \u53f3\u79fb $c-x$ \u4f4d\u4e4b\u540e\u518d\u8fdb\u884c `&` \u8fd0\u7b97\u5c31\u597d\u4e86\u3002\n\n\u51cf\u6cd5\u7684\u8bdd\u4e00\u5b9a\u662f $y,x+y$\uff0c\u76f4\u63a5\u5c06 $f1$ `&` \u4e0a\u4e00\u4e2a $f1$ \u53f3\u79fb $x$ \u5c31\u597d\u4e86\u3002\n\n\u7136\u540e\u662f\u4e58\u6cd5\uff0c\u53d1\u73b0\u53ef\u4ee5\u76f4\u63a5\u679a\u4e3e\u7136\u540e\u9a8c\u8bc1\uff0c$O(n\\sqrt c)$\uff0c\u53ef\u4ee5\u3002\n\n\u7136\u540e\u95ee\u9898\u5c31\u662f\u9664\u6cd5\u8fd0\u7b97\uff0c\u6211\u4eec\u9996\u5148\u8fdb\u884c\u6839\u53f7\u5206\u5757\uff0c\u53d1\u73b0\u5f53 $\\sqrt c\\leq x$ \u7684\u65f6\u5019\u679a\u4e3e\u6b21\u6570\u4e00\u5b9a $\\leq \\sqrt c$\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u679a\u4e3e\u9a8c\u8bc1\u3002\n\n\u5f53 $x<\\sqrt c$ \u7684\u65f6\u5019\u6211\u4eec\u4e0d\u8fdb\u884c\u83ab\u961f\uff0c\u76f4\u63a5\u505a\u3002\n\n\u5148\u679a\u4e3e $x$\uff08\u4e00\u5171 $\\sqrt c$\uff09\u6b21\n\n\u5728\u5faa\u73af\u91cc\u7ef4\u62a4\u4e24\u4e2a\u6570\u7ec4 $la,res$\uff0c$la_i$ \u8868\u793a\u6700\u8fd1\u7684\u4e00\u4e2a $i$ \u662f\u5728\u54ea\u91cc\uff0c$res_i$ \u8868\u793a\u679a\u4e3e\u5230\u4e86 $i$ \u65f6\uff0c\u6700\u65e9\u7684\u4e00\u5bf9 $y,\\frac{y}{x}$ \u4e2d\u9760\u5de6\u7684\u6570\u7684\u4f4d\u7f6e\u3002\u7136\u540e\u6bcf\u6b21\u5224\u65ad $\\frac{a_i}{x}$ \u4ee5\u53ca $xa_i$ \u7684 $la$ \u66f4\u65b0 $res$ \u5373\u53ef\u3002\n\n\u6ce8\u610f\u4e00\u4e0b\uff0c\u8fd9\u9898\u4e2d\u4f1a\u51fa\u73b0\u9664\u6cd5\u5e76\u4e14 $x=0$ \u7684\u73b0\u8c61\uff0c\u5982\u679c\u4f60\u5f97\u4e86 $51pts$ \u90a3\u4e48\u4f60\u5f88\u6709\u53ef\u80fd\u662f\u5bf9\u4e8e\u8fd9\u4e2a $0$ \u7684\u7279\u5224\u51fa\u4e86\u95ee\u9898\u3002",
        "postTime": 1612935472,
        "uid": 97136,
        "name": "chenzida",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5355 \u3010[Ynoi2017] \u7531\u4e43\u7684\u7389\u7c73\u7530\u3011"
    },
    {
        "content": "\u6570\u636e\u6709\u70b9\u5f3a\uff0c\u4e2d\u95f4\u5199\u9519\u4e86\u4e00\u70b9\u70b9\u5c31\u8981\u6b7b\u6389\u3002    \n\n\u5b66\u4e60\u5230\u4e86 $bitset$ \u7684\u5947\u8469\u641e\u6cd5\uff0c\u957f\u4e86\u89c1\u8bc6\u3002\n\n\u7531\u4e8e\u53ea\u7528\u7ef4\u62a4\u4e24\u4e24\u76f8\u52a0/\u76f8\u51cf/\u76f8\u4e58/\u76f8\u9664\uff0c\u6211\u4eec\u60f3\u5230\u6211\u4eec\u7684 $bitset$\u3002     \n\n\u9996\u5148\u83ab\u961f\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u5c31\u5f88\u9999\u5730\u628a\u8fd9\u4e2a\u6570\u662f\u5426\u51fa\u73b0\u5728 $bitset$ \u91cc\u9762\u8868\u793a\u51fa\u6765\u3002    \n\n\u5bf9\u4e8e\u51cf\u6cd5\u64cd\u4f5c\uff0c\u4e5f\u5c31\u662f\u770b\u5728 $bitset$ \u91cc\u662f\u5426\u6709\u4e00\u4f4d\u5de6\u79fb\u4e86 $x$ \u4f4d\u540e\u8fd9\u4f4d\u8fd8\u4e3a $1$ \u3002     \n\n\u5bf9\u4e8e\u52a0\u6cd5\u64cd\u4f5c\uff0c\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a $bitset$ \u6709\u70b9\u73a9\u4e0d\u8d77\uff0c\u6211\u4eec\u4e0d\u59a8\u5c31\u5012\u7740\u6765\u8003\u8651\uff0c\u6765\u4e24\u4e2a $bitset$ \u51fa\u6765\uff0c\u5982\u679c\u5f53\u524d\u52a0\u5165\u4e00\u4e2a\u6570 $Ins$ \uff0c\u6211\u4eec\u5c31 $bs1_{Ins} = bs2_{100000 - Ins} = 1$ \uff0c\u611f\u6027\u7406\u89e3\u4e5f\u5c31\u76f8\u5f53\u4e8e $bs2$ \u91cc\u9762\u5c31\u662f\u628a\u8fd0\u7b97 $x + y = k$ \u5168\u90e8\u6620\u5c04\u4e86\u4e00\u4e0b\uff0c\u53ea\u662f\u65b9\u4fbf\u6211\u4eec $bitset$ \u7684\u4f4d\u8fd0\u7b97\u64cd\u4f5c\uff0c\u8fd9\u91cc\u53ea\u662f\u6211\u81ea\u5df1\u7684\u7406\u89e3\uff0c\u4f60\u4e5f\u53ef\u4ee5\u6362\u65b9\u6cd5\u7406\u89e3\u8fd9\u4e2a\u5730\u65b9(\u6bd5\u7adf\u8fd9\u4e2a\u5730\u65b9\u4ed4\u7ec6\u60f3\u60f3\u8fd8\u662f\u4e0d\u96be\u7406\u89e3\u6ef4)\u3002     \n\n\u4e58\u6cd5\u64cd\u4f5c\u7684\u8bdd\u5c31\u66f4\u597d\u529e\u4e86\uff0c\u6211\u4eec\u76f4\u63a5\u679a\u4e3e $x$ \u7684\u56e0\u6570\u8fdb\u884c\u6839\u53f7\u7b97\u6cd5\u5c31\u53ef\u4ee5\u4e86\u3002      \n\n\u6700\u96be\u7684\u5c31\u662f\u9664\u6cd5\u64cd\u4f5c\uff0c\u8fd9\u91cc\u6211\u4eec\u8fdb\u884c\u6839\u53f7\u5206\u6cbb\u3002     \n\n\u5982\u679c $x >= \\sqrt N$ \uff0c\u6211\u4eec\u76f4\u63a5\u679a\u4e3e\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(\\sqrt N)$ \u3002   \n\n\u5426\u5219\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u53bb\u5355\u72ec\u5904\u7406\u51fa\u6765\u6240\u6709\u7684\u6570\uff0c\u5177\u4f53\u800c\u8a00\uff0c\u6211\u4eec\u7b2c\u4e00\u5c42\u5faa\u73af\u679a\u4e3e\u6240\u6709\u9700\u8981\u5904\u7406\u7684\u6570 $x$ \uff0c\u7b2c\u4e8c\u5c42\u5faa\u73af\u8dd1 $O(n)$ \uff0c\u7ef4\u62a4\u4e24\u4e2a\u6570\u7ec4 $pre_i$ \u548c $maxl_i$ \uff0c\u4e24\u4e2a\u6570\u7ec4\u5206\u522b\u8868\u793a\u503c\u4e3a $i$ \u7684\u6570\u6b64\u65f6\u6700\u8fd1\u4e00\u6b21\u51fa\u73b0\u5728\u54ea\u91cc\u4ee5\u53ca\u5982\u679c\u4ee5\u7b2c $i$ \u4e2a\u6570\u4e3a\u533a\u95f4\u7684\u53f3\u7aef\u70b9\u90a3\u4e48\u6211\u4eec\u5de6\u7aef\u70b9\u81f3\u5c11\u8981\u6269\u5230\u54ea\u91cc\u3002    \n\n\u5982\u679c\u6b64\u65f6\u679a\u4e3e\u5230\u4e86\u7b2c $i$ \u4e2a\u6570\uff0c\u6211\u4eec\u9996\u5148\u53ef\u4ee5\u66f4\u65b0\u4e00\u4e0b $pre_{a_i}$ \uff0c\u63a5\u7740\u5c31\u770b\u4ee5\u5f53\u524d\u8fd9\u4e2a\u6570\u4e3a\u9664\u6570\u548c\u88ab\u9664\u6570\u7684\u60c5\u51b5\uff0c\u7528 $pre$ \u66f4\u65b0 $maxl_i$ \u3002(\u8fd9\u91cc\u6709\u70b9\u6ca1\u770b\u61c2\u6ca1\u5173\u7cfb\uff0c\u770b\u770b\u4ee3\u7801\u5c31\u53ef\u4ee5\u7406\u89e3\u4e86)    \n\n\u7a0d\u5fae\u6ce8\u610f\u4e00\u4e0b\u65f6\u95f4\u5373\u53ef\uff0c\u8fd9\u9898\u4e0d\u600e\u4e48\u5361\u5e38\u6240\u4ee5\u8fd8\u662f\u4e0d\u8981\u592a\u62c5\u5fc3\u65f6\u95f4\u3002  \n\n\u987a\u4fbf\u63d0\u4e00\u4e0b $Hack$ \uff0c\u7531\u4e8e\u4e0d\u77e5\u9053\u65e5\u540e\u4f1a\u4e0d\u4f1a\u52a0\u5546\u4e3a $0$ \u7684\u60c5\u51b5\uff0c\u5efa\u8bae\u8fd8\u662f\u628a\u5546\u4e3a $0$ \u7684\u60c5\u51b5\u52a0\u4e0a\u3002\n \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<vector>\n#include<bitset>\nusing namespace std;\nconst int Len = 1e5 + 5 , LIM = 300;\ninline int read() {\n    char ch = getchar(); int x = 0, f = 1;\n    while(ch < '0' || ch > '9') {\n        if(ch == '-') f = -1;\n        ch = getchar();\n    } while('0' <= ch && ch <= '9') {\n        x = x * 10 + ch - '0';\n        ch = getchar();\n    } return x * f;\n}\ninline void write(int x)\n{\n     if(x<0) putchar('-'),x=-x;\n     if(x>9) write(x/10);\n     putchar(x%10+'0');\n}\nint n,m,size,cnt[Len],pre[Len],res[Len],Print[Len],a[Len],Cnt; \nstruct node\n{\n\tint l,r,opt,x,idx,pos;\n}Sec[Len],qs[Len]; \nvector<node> qsqrt[Len];\nbool cmp(node x,node y)\n{\n\tif(x.pos > y.pos || (x.pos == y.pos && x.r > y.r)) return true;\n\treturn false;\n}\nbitset<Len> bs1,bs2;\nvoid Add(int x){if(++ cnt[x] == 1) bs1[x] = 1 , bs2[100000 - x] = 1;}\nvoid Del(int x){if(-- cnt[x] == 0) bs1[x] = 0 , bs2[100000 - x] = 0;}\nint Multi(int x){for(int i = 1 ; i * i <= x ; i ++) if(x % i == 0 && bs1[i] && bs1[x / i]) return 1;return 0;}\nint Div(int x){for(int i = 1 ; i * x <= 100000 ; i ++) if(bs1[i] && bs1[i * x]) return 1;return 0;}\nvoid Sqrt_Solve()\n{\n\tfor(int i = 1 ; i <= LIM ; i ++)\n\t{\n\t\tint len = qsqrt[i].size();\n\t\tif(!len) continue;\n\t\tint l = 0;\n\t\tfor(int k = 1 ; k <= n ; k ++)\n\t\t{\n\t\t\tint now = a[k];\n\t\t\tpre[now] = k;\n\t\t\tif(now * i <= 100000) l = max(l , pre[now * i]);\n\t\t\tif(now % i == 0) l = max(l , pre[now / i]);\n\t\t\tres[k] = l; \n\t\t}\n\t\tfor(int k = 0 ; k < len ; k ++) Print[qsqrt[i][k].idx] = (qsqrt[i][k].l <= res[qsqrt[i][k].r]);\n\t\tmemset(pre , 0 , sizeof pre);\n\t\tmemset(res , 0 , sizeof res);\n\t}\n}\nint main()\n{\n\tn = read() , m = read();\n\tfor(int i = 1 ; i <= n ; i ++) a[i] = read();\n\tsize = sqrt(n);\n\tfor(int i = 1 ; i <= m ; i ++)\n\t{\n\t\tSec[i].opt = read() , Sec[i].l = read() , Sec[i].r = read() , Sec[i].x = read();\n\t\tSec[i].idx = i;\n\t\tSec[i].pos = (Sec[i].l - 1) / size + 1;\n\t\tif(Sec[i].opt == 4 && Sec[i].x <= LIM && Sec[i].x != 0) qsqrt[Sec[i].x].push_back(Sec[i]);\n\t\telse qs[++ Cnt] = Sec[i];\n\t} \n\tSqrt_Solve();\n\tsort(qs + 1 , qs + 1 + Cnt , cmp);\n\tint l = 1 , r = 0;\n\tfor(int i = 1 ; i <= Cnt ; i ++)\n\t{\n\t\twhile(l > qs[i].l) Add(a[-- l]);\n\t\twhile(r < qs[i].r) Add(a[++ r]);\n\t\twhile(l < qs[i].l) Del(a[l ++]);\n\t\twhile(r > qs[i].r) Del(a[r --]);\n\t\tif(qs[i].opt == 1) Print[qs[i].idx] = ((bs1 << qs[i].x) & bs1).any();\n\t\telse if(qs[i].opt == 2) Print[qs[i].idx] = ((bs1 << (100000 - qs[i].x)) & bs2).any();\n\t\telse if(qs[i].opt == 3) Print[qs[i].idx] = Multi(qs[i].x);\n\t\telse if(qs[i].opt == 4) \n\t\t{\n\t\t\tif(qs[i].x == 0) \n\t\t\t{\n\t\t\t\tif(bs1[0] && (bs1 >> 1).any()) Print[qs[i].idx] = 1; \n\t\t\t\telse Print[qs[i].idx] = 0;\n\t\t\t}\n\t\t\telse Print[qs[i].idx] = Div(qs[i].x);\n\t\t}\n\t}\n\tfor(int i = 1 ; i <= m ; i ++) (Print[i] == 0) ? puts(\"yumi\") : puts(\"yuno\");\n\treturn 0;\n}\n```",
        "postTime": 1608876306,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "P5355 [Ynoi2017]\u7531\u4e43\u7684\u7389\u7c73\u7530"
    },
    {
        "content": "## \u9898\u610f\u7b80\u8ff0\n\n\u89c1\u9898\u9762\n\n## \u9898\u89e3\n\n\u524d\u4e09\u4e2a\u64cd\u4f5c\u5c31\u662f\u5c0f\u6e05\u65b0\u4eba\u6e23\u7684\u672c\u613f\u3002\n\n\u8fd9\u91cc\u7b80\u5355\u8bb2\u89e3\u4e00\u4e0b\u3002\n\n\u8bb0\u5f55\u4e24\u4e2a bitset `cla` \u548c `inv`\u3002\n\n\u6211\u4eec\u8003\u8651\u83ab\u961f\u3002\n\n`cla[x]==1` \u8868\u793a $x$ \u8fd9\u4e2a\u6570\u51fa\u73b0\u8fc7\u3002\n\n`inv[x]==1` \u8868\u793a $100000-x$ \u8fd9\u4e2a\u6570\u51fa\u73b0\u8fc7\u3002\n\n\u8fd9\u4e24\u4e2a bitset \u7684\u7ef4\u62a4\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u5728\u83ab\u961f\u7684\u52a0\u51cf\u8d21\u732e\u64cd\u4f5c\u91cc\u6539\u5c31\u884c\u4e86\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u51cf\u6cd5\u7684\u5224\u65ad\uff0c\u6211\u4eec\u7684\u7b54\u6848\u5c31\u662f `((cla<<x)&cla)` \u662f\u5426\u4e3a 0\u3002\n\n\u5982\u679c\u4e3a 0 \u7684\u8bdd\u8868\u793a\u5e94\u8be5\u8f93\u51fa\u6709\u89e3\u3002\n\n\u6b63\u786e\u6027\u5f88\u597d\u5f97\u5230\u3002\n\n\u6bd4\u5982\u6211\u4eec\u7684\u8be2\u95ee\u662f\u662f\u5426\u5b58\u5728 $a,b$ \u4f7f\u5f97 $a-b=x$\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u5b58\u5728 $a$ \u4ee5\u53ca $a-x$ \u5373\u53ef\u3002\n\n\u7b2c\u4e8c\u4e2a\u52a0\u6cd5\u7684\u5224\u65ad\u4e5f\u5dee\u4e0d\u591a\uff0c\u770b\u4f5c\u662f\u52a0\u4e00\u4e2a\u8d1f\u6570\u5373\u53ef\uff0c\u5224\u65ad\u662f `((cla<<(100000-x)&inv))`\u3002\n\n\u7b2c\u4e09\u4e2a\u4e58\u6cd5\u7684\u5224\u65ad\u76f4\u63a5\u66b4\u529b\u679a\u4e3e\u56e0\u5b50 $i$\uff0c\u5224\u65ad $i,\\frac{x}{i}$ \u662f\u5426\u540c\u65f6\u5b58\u5728\u5373\u53ef\u3002($i\\mid x$)\u3002\n\n\u7531\u4e8e\u503c\u57df\u548c $n,m$ \u540c\u9636\uff0c\u6240\u4ee5\u6211\u4eec\u7684\u590d\u6742\u5ea6\u662f\u5bf9\u7684\u3002\n\n\u5bf9\u4e8e\u7b2c\u56db\u4e2a\u64cd\u4f5c\u6211\u4eec\u76f4\u63a5\u4ece\u4e58\u6cd5\u8d3a\u8fc7\u6765\u3002\n\n\u679a\u4e3e\u4e00\u4e2a $i$\uff0c\u4ece 1 \u5f00\u59cb\uff0c\u7ec8\u6b62\u6761\u4ef6\u4e3a $i\\times x\\le100000$\u3002\n\n\u5176\u4e2d $x$ \u4e3a\u5f53\u524d\u8be2\u95ee\u7ed9\u51fa\u7684\u5546\u3002\n\n\u7136\u540e\u76f4\u63a5\u5224\u65ad\u662f\u5426\u540c\u65f6\u5b58\u5728 $i$ \u548c $i\\times x$ \u5373\u53ef\u3002\n\n\u5728 $x\\ge\\sqrt{n}$ \u7684\u65f6\u5019\u6211\u4eec\u7684\u590d\u6742\u5ea6\u662f\u5bf9\u7684\u3002\n\n\u90a3\u4e48 $x<\\sqrt{n}$ \u7684\u65f6\u5019\u6211\u4eec\u5c31\u6362\u4e00\u79cd\u65b9\u6cd5\u5427\u3002\n\n\u6211\u4eec\u679a\u4e3e\u4e00\u4e2a $x\\in[1,\\sqrt{100000}]$\u3002\n\n\u7136\u540e\u7ef4\u62a4\u4e24\u4e2a\u6570\u7ec4 `pre` \u548c `mxp`\u3002\n\n\u5728 $x$ \u7684\u679a\u4e3e\u91cc\u9762\u6211\u4eec\u518d\u679a\u4e3e\u4e00\u4e2a $i\\in[1,n]$\u3002\n\n\u7136\u540e `pre[i]` \u8868\u793a $a_{i}$ \u7684\u4e0a\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e\u3002\n\n`mxp[i]` \u626b\u63cf\u5230 $i$ \u7684\u65f6\u5019\u51fa\u73b0\u4e86\u6ee1\u8db3 $a\\div b=x$ \u7684\u6700\u53f3\u4f4d\u7f6e\u3002\n\n\u7ef4\u62a4\u7684\u5177\u4f53\u65b9\u6cd5\u770b\u6ce8\u91ca\u5427\u3002\n\n\u8fd9\u9053\u9898\u5c31\u5b8c\u4e86\u3002\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <bitset>\n#include <queue>\n\nusing namespace std;\n\nconst int Maxn = 1e5 + 5, Maxs = 400 + 5, Maxv = 310;\nint n, m, each, cube, isa[Maxn], cnt[Maxn], ans[Maxn], pre[Maxn], mxp[Maxn], bel[Maxn], lps[Maxs], rps[Maxs];\nstruct Query\n{\n\tint t, l, r, x, id;\n\tQuery() {}\n\tQuery(int t1, int t2, int t3, int t4, int t5)\n\t{\n\t\tt = t1;\n\t\tl = t2;\n\t\tr = t3;\n\t\tx = t4;\n\t\tid = t5;\n\t}\n};\nstruct Special\n{\n\tint l, r, id;\n\tSpecial() {}\n\tSpecial(int t1, int t2, int t3)\n\t{\n\t\tl = t1;\n\t\tr = t2;\n\t\tid = t3;\n\t}\n};\nvector < Query > Mq; // Mo's Algorithm | Query\nvector < Special > Vq[Maxn]; // Violence | Query\nbitset < Maxn > cla, inv; // classic | inverse\n\nbool cmp(const Query &one, const Query &ano)\n{\n\tif (bel[one.l] != bel[ano.l])   return one.l < ano.l;\n\telse if (bel[one.l] & 1)    return one.r < ano.r;\n\telse    return one.r > ano.r;\n}\n\nvoid Plus_Cont(int x)\n{\n\tx = isa[x];\n\tif (cnt[x] == 0)\n\t{\n\t\tcla[x] = 1;\n\t\tinv[100000 - x] = 1;\n\t}\n\t++cnt[x];\n}\n\nvoid Mins_Cont(int x)\n{\n\tx = isa[x];\n\t--cnt[x];\n\tif (cnt[x] == 0)\n\t{\n\t\tcla[x] = 0;\n\t\tinv[100000 - x] = 0;\n\t}\n}\n\nvoid Pare_v1()\n{\n\tint l = 1, r = 0;\n\tfor (auto it : Mq)\n\t{\n\t\twhile (l > it.l)\tPlus_Cont(--l);\n\t\twhile (l < it.l)\tMins_Cont(l++);\n\t\twhile (r > it.r)\tMins_Cont(r--);\n\t\twhile (r < it.r)\tPlus_Cont(++r);\n\t\tif (it.t == 1)  ans[it.id] = ((cla << it.x) & cla).any();\n\t\telse if (it.t == 2)  ans[it.id] = ((cla << (100000 - it.x)) & inv).any();\n\t\telse if (it.t == 3)\n\t\t{\n\t\t\tbool flag = 0;\n\t\t\tfor (int i = 1; i * i <= it.x; ++i)\n\t\t\t{\n\t\t\t\tif (it.x % i == 0 && cla.test(i) && cla.test(it.x / i))\n\t\t\t\t{\n\t\t\t\t\tans[it.id] = 1;\n\t\t\t\t\tflag = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (flag == 0)  ans[it.id] = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbool flag = 0;\n\t\t\tfor (int i = 1; i * it.x <= 100000; ++i)\n\t\t\t{\n\t\t\t\tif (cla.test(i) && cla.test(i * it.x))\n\t\t\t\t{\n\t\t\t\t\tans[it.id] = 1;\n\t\t\t\t\tflag = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (flag == 0)\tans[it.id] = 0;\n\t\t}\n\t}\n}\n\nvoid Pare_v2()\n{\n\tfor (int x = 1; x <= Maxv; ++x)\n\t{\n\t\tif (Vq[x].empty())\tcontinue;\n\t\tint now = 0;\n\t\tfor (int i = 1; i <= n; ++i)\n\t\t{\n\t\t\tint y = isa[i];\n\t\t\tpre[y] = i;\n\t\t\tif (x * y <= 100000)\tnow = max(now, pre[x * y]);\n\t\t\tif (y % x == 0) \tnow = max(now, pre[y / x]);\n\t\t\tmxp[i] = now;\n\t\t}\n\t\tfor (auto it : Vq[x])\n\t\t{\n\t\t\tif (it.l <= mxp[it.r])\tans[it.id] = 1;\n\t\t\telse\tans[it.id] = 0; \n\t\t}\n\t\tmemset(pre, 0, sizeof pre);\n\t\tmemset(mxp, 0, sizeof mxp);\n\t}\n}\n\nchar ANS[2][10] = { \"yumi\", \"yuno\" };\nsigned main()\n{\n\tscanf(\"%d %d\", &n, &m);\n\teach = 320;\n\tcube = (n - 1) / each + 1;\n\tfor (int i = 1; i <= n; ++i)\tscanf(\"%d\", &isa[i]);\n\tfor (int i = 1; i <= cube; ++i)\n\t{\n\t\tlps[i] = rps[i - 1] + 1;\n\t\trps[i] = rps[i - 1] + each;\n\t\tif (i == cube) \trps[i] = n;\n\t\tfor (int j = lps[i]; j <= rps[i]; ++j)  bel[j] = i;\n\t}\n\tfor (int i = 1, t, l, r, x; i <= m; ++i)\n\t{\n\t\tscanf(\"%d %d %d %d\", &t, &l, &r, &x);\n\t\tif (t == 4 && x <= Maxv)    Vq[x].emplace_back(Special(l, r, i));\n\t\telse    Mq.emplace_back(Query(t, l, r, x, i));\n\t}\n\tsort(Mq.begin(), Mq.end(), cmp);\n\tPare_v1(), Pare_v2();\n\tfor (int i = 1; i <= m; ++i)    puts(ANS[ans[i]]);\n\treturn 0;\n}\n```",
        "postTime": 1597566652,
        "uid": 161849,
        "name": "cirnovsky",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5355 \u3010[Ynoi2017]\u7531\u4e43\u7684\u7389\u7c73\u7530\u3011"
    },
    {
        "content": "\u56db\u4e2a\u8be2\u95ee\u5206\u7c7b\u8ba8\u8bba\n\n1. $a-b=x$\n\n\u8003\u8651\u7ef4\u62a4\u4e00\u4e2a `bitset<N>cnt` \u6765\u5b58\u50a8\u5f53\u524d\u6240\u5728\u7684\u533a\u95f4\u4e2d\u6bcf\u4e2a\u6570\u662f\u5426\u51fa\u73b0\u3002\u82e5 $cnt[b]=1$ \u4e14 $cnt[b+x]=1$ \u5219\u8bf4\u660e\u5b58\u5728 $a-b=x$\uff0c\u53d1\u73b0 $cnt[b+x]$ \u4e0e\u5de6\u79fb $x$ \u4f4d\u540e\u7684 $cnt[b]$ \u76f8\u540c\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u67e5 $cnt$ \u5de6\u79fb $x$ \u4f4d\u4e8e\u539f $cnt$ \u662f\u5426\u6709\u4ea4\u96c6\uff0c\u5373 `return (cnt<<x&cnt).count`\uff0c\u7531\u4e8e `bitset` \u7684\u4f18\u826f\u6027\u8d28\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(\\frac N w)$ \u5176\u4e2d $w$ \u662f\u8ba1\u7b97\u673a\u4e2d `int` \u7684\u4f4d\u6570\uff0c$N$ \u662f\u5e38\u91cf\u503c\u57df\u4e0a\u9650\uff0c\u6240\u4ee5\u8be5\u64cd\u4f5c\u7684\u603b\u590d\u6742\u5ea6\u662f $\\frac{mN}w$\uff0c\u4e0d\u5230 $10^9$\u3002\n\n2. $a+b=x$\n\n\u8bbe $b_0=N-b$\uff0c$\\because a-b_0=a+b-N=x-N$\uff0c$\\therefore a=b_0+x-N$\uff0c\u5957\u7528\u7b2c\u4e00\u7c7b\u8be2\u95ee\u7684\u65b9\u6cd5\uff0c\u8dd1\u83ab\u961f\u65f6\u8bb0\u5f55 `bitset<N>cnt2` \u5b58\u50a8\u6240\u5728\u533a\u95f4\u4e2d\u6bcf\u4e2a\u6570\u662f\u5426\u51fa\u73b0\uff0c\u82e5\u51fa\u73b0\u5219\u5728 $cnt2$ \u4e2d\u4e0b\u6807\u4e3a\u8fd9\u4e2a\u6570\u6240\u5bf9\u5e94\u7684 $b_0$ \u5904\u6807\u8bb0\uff0c\u6700\u540e\u7b54\u6848\u5c31\u662f $cnt2$ \u5de6\u79fb $x-N$ \u4f4d\u4e0e $cnt$ \u662f\u5426\u6709\u4ea4\u96c6\uff0c\u7531\u4e8e `bitset` \u7684\u5de6\u79fb\u548c\u53f3\u79fb\u53c2\u6570\u5fc5\u987b\u662f\u6574\u6570\uff0c\u6240\u4ee5\u4ee3\u7801\u4e0a\u5b9e\u9645\u662f `return (cnt2>>(N-x)&cnt).count`\uff0c\u4e0e\u4e0a\u9762\u63a8\u7684\u7b54\u6848\u662f\u7b49\u4ef7\u7684\u3002\n\n3. $a\\times b=x$\n\n\u8fd9\u4e2a\u8be2\u95ee\u76f8\u5bf9\u7b80\u5355\uff0c\u5bf9\u4e8e\u4e00\u4e2a $x$\uff0c$O(\\sqrt N)$ \u7684\u65f6\u95f4\u679a\u4e3e $x$ \u7684\u6240\u6709\u56e0\u6570\u3002\u679a\u4e3e\u8fc7\u7a0b\u4e2d\u82e5\u5b58\u5728\u4e00\u4e2a\u6570 $i$ \u662f $x$ \u7684\u56e0\u6570\uff0c\u4e14 $i$ \u5728\u5f53\u524d\u533a\u95f4\u4e2d\u51fa\u73b0\u8fc7\u4e14 $\\frac x i$ \u4e5f\u5728\u5f53\u524d\u533a\u95f4\u4e2d\u51fa\u73b0\u8fc7\uff0c\u5219\u7b54\u6848\u4e3a `true`\u3002$m$ \u6b21\uff0c\u603b\u590d\u6742\u5ea6\u4e3a $O(m\\sqrt N)$\u3002\n\n4. $\\frac a b=x$ \u4e14 $b\\mid a$\n\n\u8003\u8651\u5bf9 $x$ \u8fdb\u884c\u6839\u53f7\u5206\u6cbb\u3002\n\n\u8bbe\u9608\u503c\u4e3a $S$\u3002\n\n\u5bf9\u4e8e $x\\ge S$ \u7684\u8be2\u95ee\uff0c\u76f4\u63a5\u679a\u4e3e $x$ \u7684\u500d\u6570\uff0c\u82e5\u5b58\u5728 $x$ \u7684\u500d\u6570 $i$ \u4f7f $i$ \u548c $\\frac i x$ \u540c\u65f6\u5728\u5f53\u524d\u533a\u95f4\u4e2d\u5b58\u5728\u5219\u7b54\u6848\u4e3a `true`\u3002\u590d\u6742\u5ea6 $O(\\frac{mN}S)$\n\n\u5bf9\u4e8e\u5176\u4f59\u8be2\u95ee\uff0c\u79bb\u7ebf\u4e0b\u6765\u6c42\u89e3\u3002\u904d\u5386 $x\\in[1,S-1]$\uff0c\u5bf9\u4e8e\u6bcf\u4e2a $x$\uff0c$O(n)$ \u8bb0\u5f55 $pos[i]$\uff0c\u4f7f $pos[i]\\le i$ \u4e14 $i-pos[i]$ \u5c3d\u91cf\u5c0f\u4e14\u6ee1\u8db3 $a[pos[i]]\\times x=a[i]$ \u6216 $a[i]\\times x=a[pos[i]]$\u3002\u5177\u4f53\u65b9\u6cd5\u662f\u5728\u6c42 $pos[i]$ \u65f6\u540c\u6b65\u7ef4\u62a4\u4e00\u4e2a $p$ \u6570\u7ec4\u8868\u793a\u6bcf\u4e00\u4e2a\u6570\u6700\u540e\u51fa\u73b0\u65f6\u7684\u4e0b\u6807\uff0c\u82e5\u6ca1\u51fa\u73b0\u5219\u4e3a $0$\u3002\u7136\u540e\u904d\u5386 $pos$ \u4ee4 $pos[i]=\\max(pos[i],pos[i-1])$\uff0c\u90a3\u4e48\u8bbe\u533a\u95f4\u7684\u53f3\u6307\u9488\u4e3a $r$\uff0c\u5de6\u6307\u9488\u4e3a $l$\uff0c\u5219\u5f53\u4e14\u4ec5\u5f53 $l\\le pos[r]$ \u662f\u7b54\u6848\u4e3a `true`\u3002\u5229\u7528\u8fd9\u6761\u6027\u8d28\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $x$ \u627e\u5230\u6240\u6709\u4e0e\u5b83\u5bf9\u5e94\u7684\u7b2c\u56db\u7c7b\u8be2\u95ee\u5373\u53ef\u6c42\u51fa\u6240\u6709\u8be2\u95ee\u7684\u7b54\u6848\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(mS)$\n\n\u5b58\u50a8\u8be2\u95ee\u53ef\u4ee5\u7528 `vector`\uff0c\u65f6\u95f4 $O(m)$ \u4f46\u5e38\u6570\u8f83\u5927\uff0c\u53ef\u4ee5\u7528\u6570\u7ec4\u52a0\u6392\u5e8f\uff0c\u95f4 $O(m\\log m)$ \u5e38\u6570\u5c0f\uff0c\u4e5f\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $x$ \u626b\u4e00\u904d\u8be2\u95ee\u6570\u7ec4\uff0c\u65f6\u95f4 $O(mS)$ \u5728\u63a5\u53d7\u8303\u56f4\u3002\n\n\u4ece\u590d\u6742\u5ea6\u4e0a\u5206\u6790\uff0c$S=\\sqrt N$ \u65f6\u6700\u5feb\uff0c\u4f46\u672c\u9898\u7565\u5361\u5e38\uff0c\u628a $S$ \u8bbe\u5c0f\u70b9\u66f4\u597d\u8fc7\u3002\n\n\n\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cmath>\n#include<bitset>\n#include<cstring>\nusing namespace std;\ninline int read(){\n    int res=0,in=getchar();\n    while(in<'0'|in>'9')in=getchar();\n    while(in>='0'&&in<='9')res=(res<<1)+(res<<3)+(in^48),in=getchar();\n    return res;\n}\nconst int N=100100,S=100;\nint n,m,a[N],lp=1,rp,bel[N],cnt[N],mmax,pos[N];\nbool res[N];\nbitset<N>cnt1,cnt2;\nstruct offline{\n    int opt,l,r,x,id;\n    bool operator<(const offline &b)const&{\n        if(bel[l]==bel[b.l])\n            if(bel[l]&1)return r>b.r;\n            else return r<b.r;\n        else return bel[l]<bel[b.l];\n    }\n}ask[N];\nvoid init(){\n    cin>>n>>m;\n    int siz=(int)sqrt(n);\n    for(int i=1;i<=n;i++)a[i]=read(),mmax=max(mmax,a[i]),bel[i]=(i-1)/siz;\n    for(int i=1;i<=m;i++)ask[i]={read(),read(),read(),read(),i};\n    sort(ask+1,ask+m+1);\n}\nvoid insert(int num){\n    cnt[num]++;\n    if(cnt[num]){\n        cnt1[num]=true;\n        cnt2[n-num]=true;\n    }\n}\nvoid erase(int num){\n    cnt[num]--;\n    if(!cnt[num]){\n        cnt1[num]=false;\n        cnt2[n-num]=false;\n    }\n}\nbool get_ans(int opt,int L,int R,int x){\n    while(rp<R)insert(a[++rp]);\n    while(lp>L)insert(a[--lp]);\n    while(rp>R)erase(a[rp--]);\n    while(lp<L)erase(a[lp++]);\n    if(opt==1)return (bool)(cnt1<<x&cnt1).count();\n    else if(opt==2)return (bool)(cnt2>>(n-x)&cnt1).count();\n    else if(opt==3){\n        int end=(int)sqrt(x);\n        for(int i=1;i<=end;i++)if(cnt1[i]&&x%i==0&&cnt1[x/i])return true;\n        return false;\n    }\n    else{\n        if(x>S)for(int i=1;i*x<=mmax;i++){\n            if(cnt1[i]&&cnt1[i*x])\n                return true;\n        }return false;\n    }\n}\nint main(){\n//    freopen(\"read.in\",\"r\",stdin);\n    init();\n    for(int i=1;i<=m;i++)res[ask[i].id]=get_ans(ask[i].opt,ask[i].l,ask[i].r,ask[i].x);\n    for(int i=1;i<=S;i++){\n        memset(cnt,0,sizeof(cnt));\n        memset(pos,0,sizeof(pos));\n        for(int j=1;j<=n;j++){\n            cnt[a[j]]=j;\n            if(a[j]%i==0)pos[j]=cnt[a[j]/i];\n            if(a[j]*i<N)pos[j]=max(pos[j],cnt[a[j]*i]);\n            pos[j]=max(pos[j],pos[j-1]);\n//            cout<<pos[j]<<' ';\n        }\n        for(int j=1;j<=m;j++)if(ask[j].opt==4&&ask[j].x==i)\n            res[ask[j].id]=(ask[j].l<=pos[ask[j].r]);\n    }\n    for(int i=1;i<=m;i++)printf(\"%s\\n\",(res[i]?\"yuno\":\"yumi\"));\n    return 0;\n}\n```",
        "postTime": 1643104154,
        "uid": 455558,
        "name": "yuanjiabao",
        "ccfLevel": 0,
        "title": "[Ynoi2017] \u7531\u4e43\u7684\u7389\u7c73\u7530 \u9898\u89e3"
    },
    {
        "content": "[\u539f\u9898\u94fe\u63a5](https://www.luogu.com.cn/problem/P5355)\n\n## \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217\uff0c\u6709 $m$ \u6b21\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u51fa\u4e00\u4e2a\u533a\u95f4 $[l,r]$ \u548c\u4e00\u4e2a $x$\uff0c\u95ee\u533a\u95f4\u5185\u662f\u5426\u5b58\u5728\u4e24\u4e2a\u6570\uff08\u53ef\u4ee5\u76f8\u540c\uff09\uff0c\u4f7f\u5f97\u5b83\u4eec\u7684\u548c\u6216\u5dee\u6216\u79ef\u6216\u5546\u7b49\u4e8e $x$ \u3002\n\n#### \u6570\u636e\u8303\u56f4\n\n\u6240\u6709\u8f93\u5165\u7684\u6570\u5728 $[0,10^5]$ \u5185\uff0c\u5e8f\u5217\u4e2d\u7684\u5143\u7d20\u5728 $[0,10^5]$ \u5185\u3002\n\n### \u601d\u8def\n\n\u5bf9\u4e8e\u8be2\u95ee\u548c\u3001\u5dee\u3001\u79ef\u7684\u64cd\u4f5c\uff0c\u76f4\u63a5\u6309\u7167 [P3674](https://www.luogu.com.cn/problem/P3674) \u7684\u505a\u6cd5\u6c42\u89e3\u5373\u53ef\u3002\u8fd9\u91cc\u4e3b\u8981\u8ba8\u8bba\u4e00\u4e0b\u5982\u4f55\u89e3\u51b3\u8be2\u95ee\u5546\u7684\u64cd\u4f5c\u3002\n\n\u82e5\u60f3\u5728\u7ed9\u5b9a\u533a\u95f4\u4e2d\u627e\u5230\u4e00\u5bf9 $a,b$\uff0c\u4f7f\u5f97 $a \\div b = x$ \u3002\u6700\u6734\u7d20\u7684\u60f3\u6cd5\u5c31\u662f\u4ece $1$ \u5230 $10^5$ \u679a\u4e3e $i$\uff0c\u5224\u65ad $i$ \u4ee5\u53ca $ix$ \u662f\u5426\u5728\u533a\u95f4\u4e2d\u3002\u6ce8\u610f\u5230\u5e8f\u5217\u4e2d\u7684\u5143\u7d20\u5728 $[0,10^5]$ \u5185\u3002\u53ef\u4ee5\u53d1\u73b0\u5982\u679c $ix > 10^5$ \u5c31\u6ca1\u6709\u5fc5\u8981\u7ee7\u7eed\u679a\u4e3e\u4e86\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u968f\u7740 $x$ \u7684\u589e\u5927\uff0c\u679a\u4e3e $i$ \u7684\u6b21\u6570\u4f1a\u8d8a\u6765\u8d8a\u5c11\uff0c\u8fd9\u5c31\u542f\u793a\u6211\u4eec\u53ef\u4ee5\u91c7\u7528**\u6839\u53f7\u5206\u6cbb**\u7684\u529e\u6cd5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u9996\u5148\uff0c\u5bf9\u4e8e $x \\geq \\sqrt{N}$ \u7684\u90e8\u5206\uff08$N$ \u8868\u793a\u5e8f\u5217\u5143\u7d20\u7684\u6700\u5927\u503c\uff0c\u4e0b\u540c\uff09\uff0c\u76f4\u63a5\u66b4\u529b\u679a\u4e3e $i$\u3002\u5355\u6b21\u679a\u4e3e\u6b21\u6570\u4e0d\u4f1a\u8d85\u8fc7 $\\sqrt N$\uff0c\u90a3\u4e48\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u5c31\u4fdd\u6301\u5728 $O(n\\sqrt N)$\uff0c\u53ef\u4ee5\u63a5\u53d7\u3002\n\n\u5176\u6b21\uff0c\u5bf9\u4e8e $x < \\sqrt N$ \u7684\u90e8\u5206\u3002\u53ef\u4ee5\u5c06 $x$ \u76f8\u540c\u7684\u8be2\u95ee\u4e00\u8d77\u5904\u7406\uff0c\u5373\u5bf9\u4e8e\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e00\u4e2a $a[i]$\uff0c\u9884\u5904\u7406\u51fa\u5728 $[1,i]$ \u4e2d\u6240\u6709\u6ee1\u8db3\u5546\u4e3a $x$ \u7684\u4e00\u5bf9\u6570\u4e2d\u8f83\u5c0f\u5750\u6807\u7684\u6700\u5927\u503c\uff08\u53ef\u4ee5\u7b80\u5355\u7406\u89e3\u4e3a\u6700\u8fd1\u7684\u4e00\u5bf9\u6570\uff0c\u56e0\u4e3a\u8981\u6ee1\u8db3\u4e24\u4e2a\u6570\u90fd\u5728\u533a\u95f4\u4e2d\uff0c\u6240\u4ee5\u53d6\u8f83\u5c0f\u503c\uff09\uff0c\u8bb0\u4e3a $late[i]$\u3002\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee\u533a\u95f4 $[l,r]$\uff0c\u53ea\u8981\u6ee1\u8db3 $late[r] \\geq l$\uff0c\u90a3\u4e48\u5c31\u5fc5\u5b9a\u6709\u89e3\uff0c\u53cd\u4e4b\u5219\u65e0\u89e3\u3002\u7531\u4e8e\u53ea\u4f1a\u904d\u5386 $[1,\\sqrt N]$ \u6b21\uff0c\u6bcf\u6b21\u904d\u5386\u7684\u590d\u6742\u5ea6\u90fd\u4e3a $O(n)$\uff0c\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u8fd8\u662f\u7ef4\u6301\u5728 $O(n \\sqrt N)$ \u7ea7\u522b\u3002\n\n\u6700\u540e\uff0c\u9700\u8981\u6ce8\u610f\uff0c\u5728\u9884\u5904\u7406\u65f6\uff0c $a[j]$ \u5373\u53ef\u4ee5\u662f\u9664\u6570\uff0c\u4e5f\u53ef\u4ee5\u662f**\u88ab\u9664\u6570**\uff0c\u4e0d\u8981\u5fd8\u4e86\u5224\u65ad $a[j] \\div x$ \uff08\u5f53\u4e14\u4ec5\u5f53 $a[j] \\bmod x=0$ \u65f6\uff09\u7684\u60c5\u51b5\u3002\n\n### code\uff1a\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<vector>\n#include<bitset>\nusing namespace std;\nconst int N=1e5+10;\nconst int K=320;\nbitset<N> s1,s2;\nint tot,len,n,m,a[N],cnt[N],las[N],lat[N]; int ans[N];\nstruct query{int opt,l,r,x,id;}q[N];\nvector<query>q1[N];\nbool cmp(query a,query b){int i=a.l/len,j=b.l/len; return i!=j?i<j:a.r<b.r;}\nvoid add(int x){cnt[x]++;if(cnt[x]==1) s1[x]=1,s2[N-x]=1;}\nvoid del(int x){cnt[x]--;if(cnt[x]==0) s1[x]=0,s2[N-x]=0;}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m); len=n/sqrt(m);for(int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n\tfor(int opt,l,r,x,i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d%d%d\",&opt,&l,&r,&x);\n\t\tif(opt!=4||x>K) q[++tot]=query{opt,l,r,x,i};\n\t\telse q1[x].push_back(query{opt,l,r,x,i});\n\t}\n\tfor(int i=1;i<=K;i++)\n\t{\n\t\tif(!q1[i].size()) continue;\n\t\tmemset(las,0,sizeof(las));memset(lat,0,sizeof(lat));int now=0;\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tlas[a[j]]=j; //\u522b\u5fd8\u4e86\u66f4\u65b0\u6bcf\u4e2a\u6570\u6700\u540e\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u56e0\u4e3a\u53ef\u4ee5\u662f\u540c\u4e00\u4e2a\u6570\uff0c\u6240\u4ee5\u653e\u5728\u5224\u65ad\u524d\u66f4\u65b0 \n\t\t\tif(i*a[j]<N) now=max(now,las[a[j]*i]);\n\t\t\tif(a[j]%i==0) now=max(now,las[a[j]/i]);\n\t\t\tlat[j]=now;\n\t\t}\n\t\tfor(int j=0;j<q1[i].size();j++)\n\t\t    ans[q1[i][j].id]=lat[q1[i][j].r]>=q1[i][j].l;\n\t}\n\tsort(q+1,q+tot+1,cmp);\n\tfor(int i=0,j=1,k=1;k<=tot;k++)\n\t{\n\t\tint l=q[k].l,r=q[k].r,id=q[k].id,x=q[k].x;\n\t\twhile(i<r) add(a[++i]);\n\t\twhile(i>r) del(a[i--]);\n\t\twhile(j>l) add(a[--j]);\n\t\twhile(j<l) del(a[j++]);\n\t\tif(q[k].opt==1) ans[id]=(s1&(s1<<x)).any();\n\t\telse if(q[k].opt==2) ans[id]=(s1&(s2>>(N-x))).any();\n\t\telse if(q[k].opt==3)\n\t\t{\n\t\t\tfor(int t=1;t*t<=x;t++)\n\t\t\t    if(x%t==0&&(s1[t]&s1[x/t])){ans[id]=true;break;}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor(int t=1;t*x<N;t++)\n\t\t\t    if(s1[t]&&s1[t*x]) {ans[id]=true;break;}\n\t\t}\n\t}\n\tfor(int i=1;i<=m;i++) puts(!ans[i]?\"yumi\":\"yuno\");\n\treturn 0;\n}\n```\n",
        "postTime": 1643028013,
        "uid": 288192,
        "name": "ListenSnow",
        "ccfLevel": 7,
        "title": "P5355 [Ynoi2017] \u7531\u4e43\u7684\u7389\u7c73\u7530"
    },
    {
        "content": "[P5355 [Ynoi2017] \u7531\u4e43\u7684\u7389\u7c73\u7530](https://www.luogu.com.cn/problem/P5355)\n\n> \u8fd9\u4e00\u9898\u662f\u51fa\u5728\u6a21\u62df\u8d5b\u91cc\u7684\uff0c\u60f3\u5199\u4e00\u4e0b\u81ea\u5df1\u7684\u7ef4\u62a4\u65b9\u6cd5\u3002\n\n\u5927\u81f4\u601d\u8def\uff1a\n\n\u9996\u5148\u53ef\u4ee5\u8be2\u95ee\u79bb\u7ebf\uff0c\u4e4b\u540e\u8003\u8651\u83ab\u961f\u7ef4\u62a4\uff0c\u672c\u6b21\u9700\u8981\u7ef4\u62a4\u7684\u662f\u4ece\u533a\u95f4\u4e2d\u627e\u4e24\u4e2a\u6570\u662f\u5426\u53ef\u4ee5\u5dee\u4e3a x \u6216\u8005\u548c\u4e3a x \u7b49\u7b49\u3002\n\n\u4e4b\u540e\u53d1\u73b0\u503c\u57df\u662f $10^5$ \u6240\u4ee5\u8003\u8651\u4ece\u8fd9\u65b9\u9762\u5165\u624b\u3002\n\n\u51cf\u6cd5\uff1a\n\n> \u56e0\u4e3a\u8003\u8651\u5230\u5dee\uff0c\u6211\u4eec\u8003\u8651 $a - x = b$ \u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u6211\u4eec\u5728\u4e00\u4e2a\u6876\u91cc\u8bb0\u5f55\u4e86\u6bcf\u4e00\u4e2a\u6570\u51fa\u73b0\u4e86\u6ca1\u6709\uff0c\u4e4b\u540e\u5411\u53f3\u79fb\u52a8 x \u4f4d\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u53d1\u73b0\u8fd9\u4e2a\u5411\u53f3\u79fb\u52a8\u64cd\u4f5c\u5f88\u50cf\u4f4d\u8fd0\u7b97\uff0c\u90a3\u4e48\u6211\u4eec\u8003\u8651\u7528 bitset \u8fdb\u884c\u7ef4\u62a4\u3002\n\n\u8003\u8651\u52a0\u7684\u60c5\u51b5:\n\n> $a + b = a - (-b) = x$ \u90a3\u4e48\u6211\u4eec\u8fd8\u662f\u53ef\u4ee5\u7528\u51cf\u6cd5\u7684\u65b9\u5f0f\u6765\u7ef4\u62a4\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u5173\u4e8e\u8d1f\u6570\u7684 bitset \u5c31\u53ef\u4ee5\u4e86\u3002\n\n> \u6211\u4eec\u5f62\u8c61\u7684\u6765\u8003\u8651\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u6570\u8f74\uff1a\n\n> ![cuFeLF.png](https://z3.ax1x.com/2021/04/03/cuFeLF.png)\n\n> \u90a3\u4e48\u6211\u4eec\u8003\u8651\u5c06 3 \u5411\u53f3\u79fb\u52a8 5 \u4e2a\u5355\u4f4d\u5c31\u662f -2 \u4e86\uff0c\u90a3\u4e48\u8fd9\u6b63\u662f\u610f\u5473\u7740 $|3| + |-2| = 5$ \u56e0\u4e3a\u4ed6\u4eec\u7684\u8ddd\u79bb\u662f 5\u3002\n\n> \u4f7f\u7528\u8d1f\u6570\u7684\u539f\u56e0\u5728\u4e8e\u4e24\u4e2a\u6570 $a > 0, b < 0$ \u5728\u6570\u8f74\u4e4b\u95f4\u7684\u8ddd\u79bb\u76f4\u63a5\u4e0a\u5c31\u662f\u4e24\u4e2a\u6570\u7684\u7edd\u5bf9\u503c\u4e4b\u548c\u3002\n\n\u90a3\u4e48\u524d\u9762\u4e24\u4e2a\u64cd\u4f5c\u5df2\u7ecf\u505a\u5b8c\u4e86\uff0c\u6211\u4eec\u8003\u8651\u4e58\u6cd5\uff1a\n\n> \u6211\u4eec\u53d1\u73b0\u76f4\u63a5\u66b4\u529b\u679a\u4e3e\u56e0\u6570\u4e0d\u4f1a\u5f71\u54cd\u590d\u6742\u5ea6\uff0c\u6240\u4ee5\u76f4\u63a5\u505a\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u9664\u6cd5\uff1a\n\n> \u5982\u679c $a \\div b = x$ \u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8f6c\u5316\u6210 $a = b \\times x$ \u6211\u4eec\u8003\u8651\u5728\u6574\u4e2a bitset \u91cc\u9762\u627e\u80af\u5b9a\u662f\u4e0d\u73b0\u5b9e\u7684\uff0c\u53d1\u73b0\u6211\u4eec\u76ee\u524d\u7684\u590d\u6742\u5ea6\u662f $O(n\\sqrt n)$ \u5de6\u53f3\uff0c\u90a3\u4e48\u6211\u4eec\u8003\u8651\u5982\u679c $\\lfloor\\frac{n}{x}\\rfloor < \\sqrt n$ \u662f\u4e0d\u662f\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b\u53bb\u627e\u5c31\u53ef\u4ee5\u4e86\uff0c\u5f97\u5230\u8fd9\u91cc\u7684 $x > \\sqrt n$\u3002\n\n> \u4e4b\u540e\u6211\u4eec\u8003\u8651 $x < \\sqrt n$ \u7684\u60c5\u51b5\uff0c\u56e0\u4e3a $\\sqrt n < 317$ \u6240\u4ee5\u6211\u4eec\u8003\u8651\u5c06\u76f8\u540c\u503c\u7684 x \u8bb0\u5f55\u4e0b\u6765\uff0c\u4e4b\u540e\u518d\u6bcf\u4e00\u6b21\u626b\u904d\u6570\u7ec4\u6765\u6c42\uff0c\u8fd9\u6837\u590d\u6742\u5ea6\u662f $O(n \\sqrt n)$ \u7684\u3002\n\n> \u6211\u4eec\u901a\u8fc7\u6570\u7ec4\u7ef4\u62a4\u5462\uff1f\u6211\u4eec\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4 $[l,r]$ \u5982\u679c\u5728 r \u7684\u5de6\u8fb9\u8ddd\u79bb r \u6700\u8fd1\u7684\u6ee1\u8db3\u6761\u4ef6\u7684 $l'\\ge l$ \u5c31\u662f\u5408\u6cd5\u7684\u3002\n\n> \u5bf9\u4e8e\u4e00\u4e2a\u9012\u589e\u7684 r\uff0c$l'$ \u663e\u7136\u662f\u5355\u8c03\u9012\u589e\u7684\uff0c\u6211\u4eec\u8003\u8651\u8bbe $pre[i]$ \u8868\u793a\u5728\u503c i \u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e \uff08\u4e5f\u5c31\u662f\u6700\u53f3\u8fb9\uff09\uff0c\u6ce8\u610f\u8fd9\u662f\u6211\u4eec\u5728\u626b\u6570\u7ec4\u7684\u65f6\u5019\u7ef4\u62a4\u7684\uff0c\u6240\u4ee5 $pre[i] < \\tt nowpos$\u3002\u6211\u4eec\u6bcf\u4e00\u6b21\u66f4\u65b0 pre \u7136\u540e\u8bb0 maxl[i] \u8868\u793a\u5728\u4f4d\u7f6e i \u6ee1\u8db3\u6761\u4ef6\u7684\u6700\u8fd1\u7684 l\uff0c\u6211\u4eec\u52a8\u6001\u66f4\u65b0 l \u53d1\u73b0\u53ea\u6709\u4e24\u79cd\u66f4\u65b0\u65b9\u5f0f\uff1a\n\n> \u6211\u4eec\u5047\u8bbe\u5f53\u524d\u8981\u6c42\u7684\u503c\u4e3a x\uff0c\u5f53\u524d\u679a\u4e3e\u5230\u7684\u503c\u4e3a w\u3002\n\n$$\n\\begin{cases}\nl = \\max{(l, pre[x \\times w])} \\\\\nl = \\max{(l, pre[w / x])}, w\\ |\\ x\n\\end{cases}\n$$\n\n> \u6240\u4ee5\u9664\u6cd5\u5c31\u89e3\u51b3\u4e86\u3002\n\n---\n\n\u8fd9\u91cc\u8bb2\u4e00\u4e0b\u5b9e\u73b0\u7684\u6ce8\u610f\u70b9\uff0c\u6211\u4eec\u7ef4\u62a4\u6b63\u8d1f bitset \u7684\u65f6\u5019\u4e00\u5b9a\u8981\u6ce8\u610f\u5411\u53f3\u79fb\u52a8\u7684\u8ddd\u79bb\uff0c\u5177\u4f53\u53ef\u4ee5\u770b\u5b9e\u73b0\u3002\n\n$Code$\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n//#define Fread\n\n#ifdef Fread\n#define getchar() ((p1 == p2 && p2 = (p1 = buf) + fread(buf, 1, 1 << 21, stdin)) ? EOF : *p1 ++)\nchar buf[1 << 21], *p1, *p2;\n#endif // Fread\n\ntemplate <typename T>\nvoid r1(T &x) {\n\tx = 0;\n\tchar c(getchar());\n\tint f(1);\n\tfor(; !isdigit(c); c = getchar()) if(c == '-') f = -1;\n\tfor(; isdigit(c);c = getchar()) x = (x << 1) + (x << 3) + (c ^ 48);\n\tx *= f;\n}\n\nconst int maxn = 1e5 + 5;\nconst int maxm = maxn << 1;\n\ntypedef int room[maxn];\n\nint n, m;\nint a[maxn], bel[maxn];\n\nconst int lim = 316;\nconst int Z = 1e5;\n\nbitset<maxn * 2> B0, S0;\n\nstruct Node {\n    int opt, l, r, val, id;\n    int operator < (const Node &z) const {\n        return (bel[l] == bel[z.l]) ? r < z.r : bel[l] < bel[z.l];\n    }\n}q[maxn];\nint tot;\nvector<int> ql[maxn], qr[maxn], qid[maxn];\nint pre[maxn], maxl[maxn];\nint cnt[maxn];\n\nvoid Add(int x) {\n    int w = a[x];\n    ++ cnt[w];\n    B0[Z + w + 1] = 1;\n    S0[Z - w] = 1;\n}\nvoid Del(int x) {\n    int w = a[x];\n    -- cnt[w];\n    if(cnt[w] == 0) B0[Z + w + 1] = 0, S0[Z - w] = 0;\n}\n\nint ans[maxn];\n\n#define yes(_) ans[_] = 1\n\nsigned main() {\n//    freopen(\".in\", \"r\", stdin);\n//    freopen(\".out\", \"w\", stdout);\n\tint i, j, B;\n    r1(n), r1(m);\n    B = sqrt(n);\n    for(i = 1; i <= n; ++ i) r1(a[i]);\n    for(i = 1; i <= n; ++ i) bel[i] = (i - 1) / B + 1;\n    for(i = 1; i <= m; ++ i) {\n        int opt, l, r, x;\n        r1(opt), r1(l), r1(r), r1(x);\n        if(opt != 4 || (opt == 4 && x > lim)) {\n            q[++ tot] = (Node) {opt, l, r, x, i};\n        }\n        else {\n            ql[x].push_back(l), qr[x].push_back(r), qid[x].push_back(i);\n        }\n    }\n    int m1 = m;\n    m = tot;\n    sort(q + 1, q + m + 1);\n    int L(1), R(0);\n    for(i = 1; i <= m; ++ i) {\n        int x = q[i].val, opt = q[i].opt;\n        while(L > q[i].l) Add(-- L);\n        while(R < q[i].r) Add(++ R);\n        while(L < q[i].l) Del(L ++);\n        while(R > q[i].r) Del(R --);\n        if(opt == 1) { if((B0 & (B0 >> x)) != 0) ans[q[i].id] = 1; }\n        else if(opt == 2) { if(((B0 >> (x + 1)) & S0) != 0) ans[q[i].id] = 1; }\n        else if(opt == 3) {\n            for(int j = 1; j * j <= x; ++ j) if(x % j == 0) {\n                if(j <= Z && (x / j) <= Z && B0[j + Z + 1] == 1 && B0[x / j + Z + 1] == 1) {ans[q[i].id] = 1;break;}\n            }\n        }\n        else {\n            for(int j = 1; j * x <= Z; ++ j) if(B0[j + Z + 1] && B0[j * x + Z + 1]) { ans[q[i].id] = 1; break; }\n        }\n    }\n//    Solve();\n    for(int x = 1; x <= lim; ++ x) if(!ql[x].empty()) {\n        int l(0);\n        for(i = 1; i <= n; ++ i) {\n            // pre[i] \u8868\u793a i \u6700\u665a\u51fa\u73b0\u7684\u4f4d\u7f6e\n            // maxl[r] \u8868\u793a\u5728\u4e8c\u5143\u7ec4 (x, r) \u4e2d\u5de6\u7aef\u70b9\u51fa\u73b0\u7684\u8ddd\u79bb r \u6700\u8fd1\u7684\u4f4d\u7f6e\n            // \u4e0a\u9762\u662f\u5728\u5de6\u8fb9\u7b97\n            int w = a[i];\n            pre[w] = i;\n            if(w * x <= Z) l = max(l, pre[w * x]);\n            if(w % x == 0) l = max(l, pre[w / x]);\n            maxl[i] = l;\n        }\n        for(unsigned int i = 0; i < ql[x].size(); ++ i) {\n            ans[qid[x][i]] = (ql[x][i] <= maxl[qr[x][i]]);\n        }\n        memset(pre, 0, sizeof(pre));\n        memset(maxl, 0, sizeof(maxl));\n    }\n    #define YNOI\n    #ifdef YNOI\n        for(i = 1; i <= m1; ++ i) {\n            if(ans[i]) puts(\"yuno\");\n            else puts(\"yumi\");\n        }\n    #endif // YNOI\n    #ifndef YNOI\n        for(i = 1; i <= m1; ++ i) {\n            if(ans[i]) puts(\"hana\");\n            else puts(\"bi\");\n        }\n    #endif\n//    for(i = 1; i <= m1; ++ i) {\n//        if(ans[i] == 1) puts(\"yuno\");\n//        else puts(\"yumi\");\n//    }\n//    for(i = 1; i <= m1; ++ i) printf(\"%d\\n\", ans[i]);\n\treturn 0;\n}\n\n\n\n```\n",
        "postTime": 1617455327,
        "uid": 151723,
        "name": "legendgod",
        "ccfLevel": 7,
        "title": "P5355 [Ynoi2017] \u7531\u4e43\u7684\u7389\u7c73\u7530"
    },
    {
        "content": "Update\uff1a\u88abFz\u795e\u4ed9hack\u4e86\u6240\u4ee5\u52a0\u4e86\u7279\u5224\u3002\n\n\u524d\u7f6e\u829d\u58eb\uff1a[\u5c0f\u6e05\u65b0~~\u5bf9\u4f60\u8bf4\u518d\u89c1~~\u4eba\u6e23\u7684\u672c\u613f](https://www.luogu.com.cn/problem/P3674)\n\n\u64cd\u4f5c1~3\u89c1\u90a3\u9898\u9898\u89e3\u533a\u5427\uff0c\u5927\u81f4\u5c31\u662f\u83ab\u961f\u7ef4\u62a4bitset\u52a0\u51cf\u4f4d\u79fb\u66b4\u529b\u4e58\u7279\u5224+\u66b4\u529b\u679a\u4e3e\u3002\n\n\uff08\u8c14\u8c14\uff0c\u8fd9\u9898\u7684\u5927\u90e8\u5206\u5176\u5b9e\u4e0d\u96be\u7684\uff09\u3002\n\n\u53ea\u8981\u8003\u8651\u9664\u6cd5\u3002\n\n\u53ef\u4ee5\u4e5f\u50cf\u4e58\u6cd5\u90a3\u6837\u66b4\u529b\u679a\u4e3e\u5417\uff1f\n\n\u4f5b\u8bf4\u4e0d\u884c\uff0c\u7ed9\u5b9a\u7684\u5546\u6bd4\u8f83\u5c0f\u7684\u65f6\u5019\u4f1aSPFA\u7684\u3002\n\n\u8c14\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u81f3\u5c11\u5546\u5927\u7684\u65f6\u5019\u53ef\u4ee5\u8fd9\u4e48\u5e72\u3002\n\n\u4ece\u53e6\u4e00\u4e2a\u89d2\u5ea6\u8003\u8651\uff0c\u5982\u679c\u591a\u4e2a\u8be2\u95ee\u5171\u7528\u4e00\u4e2a\u5546\u6570\uff0c**\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u4eec\u5408\u5728\u4e00\u8d77\u5904\u7406\u3002**\n\n\uff08\u4e00\u4e2a\u4e5f\u662f\u7c7b\u4f3c\u589e\u91cf\u5f0f\u7684\u505a\u6cd5\uff0c\u4e0d\u662f\u5f88\u96be\u3002\uff09\n\n\u90a3\u5c31\u7edf\u4e00\u628a\u5546\u76f8\u540c\u7684\u5408\u8d77\u6765\u5904\u7406\uff1f\n\n\u4f5b\u8bf4\u4e5f\u4e0d\u884c\uff0c\u7ed9\u5b9a\u7684\u5546\u6bd4\u8f83\u5927\uff08\u5206\u6563\uff09\u7684\u65f6\u5019\u4f1aSPFA\u7684\u3002\n\n\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n\n\u90a3\u5c31\u5546\u6570\u5c0f\u7684\u5408\u8d77\u6765\u5904\u7406\uff0c\u5546\u6570\u5927\u7684\u66b4\u529b\u679a\u4e3e\u597d\u4e86\u3002\n\n\u4f5b\u54ed\u4e86\uff0c\u8bf4\u8fd9\u6837\u5c31\u80fdAC\u3002\n\n\u55ef\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u90a3\u5c31\u8fd9\u6837\u5427\u3002\n\n\u603b\u7ed3\uff1a\u7b97\u662f\u4e00\u4e2a\u6839\u53f7\u5206\u6cbb\u3002\n\n\u6839\u53f7\u5206\u6cbb\u5e38\u7528\u5957\u8def\uff1a\u6570\u636e\u5927\u5c0f\u4ee5\u9619\u503c\u4e3a\u754c\uff0c\u5927\u7684\u7528\u4e00\u79cd\u7b97\u6cd5\uff0c\u5c0f\u7684\u7528\u53e6\u4e00\u79cd\u7b97\u6cd5\u3002\n\n\u901a\u5e38\u662f\u4e00\u79cd\u76f4\u63a5\u66b4\u529b\uff0c\u53e6\u4e00\u79cd\u6bcf\u4e00\u79cd\u6570\u636e\u90fd\u5355\u72ec\u62c9\u51fa\u6765\u7ef4\u62a4\u3002\n\n\u4e8e\u662f\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u5c31\u80fdAC\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\nchar buf[1<<29|1],*p1=buf;\n#define getchar() (*p1++)\n#pragma GCC optimize(\"Ofast\",3)\nusing namespace std;\nconst int N=1e5,bound=1e4+9;\nint n,m,a[N+9],cnt[N+9],s,i,l,r,sum;\nbool ans[N+9];\nclass query{\n    public:\n        int op,l,r,x,id;\n};//\u8be2\u95ee\nvector<query>qbig,qext[bound];//\u8be2\u95ee\uff0cqbig\u662f\u5546\u6570\u5927\uff0cqext\u662f\u6bcf\u4e00\u4e2a\u5c0f\u5546\u6570\u5355\u72ec\u62d6\u7684\u8be2\u95ee\nbitset<N>posS,negS;\ninline void update(const int&x,const bool&mode){\n    if(mode){\n        if(!cnt[x])posS[x]=negS[N-x]=1;\n        ++cnt[x];\n    }else{\n        --cnt[x];\n        if(!cnt[x])posS[x]=negS[N-x]=0;         \n    }\n}//\u83ab\u961f\u7528\uff0c\u6bd4\u8f83\u7b80\u5355\u4e0d\u89e3\u91ca\ninline int read(){\n    register char ch=getchar();\n    while(!isdigit(ch))ch=getchar();\n    register int x=ch^48;\n    while(isdigit(ch=getchar()))x=x*10+(ch^48);\n    return x;\n}//\u5feb\u8bfb\nint main(){\n    fread(buf,1,1<<27,stdin);\n    n=read(),m=read();\n    for_each(a+1,a+n+1,[](int&x){\n        x=read();\n    });//\u8bfb\u5165\u539f\u5e8f\u5217\n    const int mx=sqrt(*max_element(a+1,a+n+1));//\u9619\u503c\n    for(i=1;i<=m;++i){\n        query tmp;\n        tmp.op=read(),tmp.l=read(),tmp.r=read(),tmp.x=read(),tmp.id=i;\n        //\u8bfb\u5165\u8be2\u95ee\n        if(tmp.op==4&&tmp.x<=mx&&tmp.x)qext[tmp.x].push_back(tmp);//\u5c0f\u5546\n        else qbig.push_back(tmp);//\u83ab\u961f\u5904\u7406\uff08\u52a0\u51cf\u4e58+\u5927\u5546\uff09\n    }\n    for(i=1;i<=mx;++i){//\u6bcf\u4e2a\u5c0f\u6570\u636e\n        if(qext[i].empty())continue;\n        sort(qext[i].begin(),qext[i].end(),[](const query&x,const query&y){\n            return x.l<y.l;\n        });//\u6309\u5de6\u7aef\u70b9\u6392\u5e8f\n        for(l=qext[i].begin()->l,r=l-1,sum=0;r<=n&&!sum;){  \n        if(!a[++r]||r>n)continue;\n            ++cnt[a[r]];\n            if(a[r]*i<N)sum+=cnt[a[r]*i];\n            if(!(a[r]%i))sum+=cnt[a[r]/i];  \n        }\n        for(const auto&it:qext[i]){\n            while(l<it.l){\n                if(a[l]*i<N)sum-=cnt[a[l]*i];\n                if(!(a[l]%i))sum-=cnt[a[l]/i];\n                for(--cnt[a[l++]];r<=n&&!sum;){\n                    if(!a[++r]||r>n)continue;\n                    ++cnt[a[r]];\n                    if(a[r]*i<N)sum+=cnt[a[r]*i];\n                    if(!(a[r]%i))sum+=cnt[a[r]/i];  \n                }       \n            }\n            ans[it.id]=it.r>=r;\n        }\n        memset(cnt,0,sizeof cnt);\n    }//\u5c0f\u6570\u636e\u7b97\u6cd5\uff0c\u4e0d\u662f\u90a3\u4e48\u597d\u8bf4\u61c2\uff0c\u5927\u81f4\u5c31\u662f\u7ef4\u62a4\u500d\u6570\u8ba1\u6570\u5668\uff0c\u4e0d\u61c2\u7684\u79c1\u4fe1\u597d\u4e86\n    sort(qbig.begin(),qbig.end(),[](const query&x,const query&y){\n        return x.l/318==y.l/318?(y.l/318&1)?x.r>y.r:x.r<y.r:x.l<y.l;\n    });\n    l=1,r=0;\n    for(const auto&tmp:qbig){//\u83ab\u961f\n        while(r<tmp.r)update(a[++r],1); \n        while(l>tmp.l)update(a[--l],1);\n        while(r>tmp.r)update(a[r--],0);\n        while(l<tmp.l)update(a[l++],0);\n        switch(tmp.op){//\u5206\u7c7b\n            case 1:\n                ans[tmp.id]=(posS&(posS<<tmp.x)).any();//\u52a0\n                break;\n            case 2:\n                ans[tmp.id]=(posS&(negS>>N-tmp.x)).any();//\u51cf\n                break;\n            case 3:\n                if(tmp.x){\n                    for(int i=1;i*i<=tmp.x;++i)\n                        if(!(tmp.x%i)&&posS[i]&&posS[tmp.x/i]){\n                            ans[tmp.id]=1;\n                            break;\n                    }\n                }\n                else ans[tmp.id]=posS[0];\n                //\u4e58\uff08\u66b4\u529b\uff09\n                break;\n            default:\n                if(!tmp.x)ans[tmp.id]=posS[0]&&posS[0]!=posS.count();//\u7279\u5224\n                else for(int i=1;i*tmp.x<N;++i)//\u5927\u5546\u9664\uff08\u66b4\u529b\uff09\n                    if(posS[i]&&posS[i*tmp.x]){\n                        ans[tmp.id]=1;\n                        break;\n                }\n        }\n    }   \n    for_each(ans+1,ans+m+1,[](const int&x){\n        puts(x?\"yuno\":\"yumi\");\n    });//\u8f93\u51fa\n    return 0;\n}\n```\n\nOver.\n\n\u795d\u5927\u5bb6AC\uff01",
        "postTime": 1587618994,
        "uid": 338178,
        "name": "__\u767d\u8863\u6e21\u6c5f__",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5355 \u3010[Ynoi2017]\u7531\u4e43\u7684\u7389\u7c73\u7530\u3011"
    }
]