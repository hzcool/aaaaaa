[
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n\u7ef4\u62a4\u957f\u5ea6\u4e3a $10^{18}$\u00a0\u7684\u96f6\u4e00\u5e8f\u5217 $a$\uff0c\u652f\u6301 $m$ \u4e2a\u64cd\u4f5c\uff0c\u64cd\u4f5c\u5206\u4e24\u79cd\uff1a\n\n- `1 l r`\uff1a\u533a\u95f4\u586b\u5145\u4e3a $1$\u3002\n- `2 l r`\uff1a\u533a\u95f4\u5168 $1$\u00a0\u5b50\u533a\u95f4\u7684\u6570\u91cf\u3002\n\n## \u7b80\u8981\u505a\u6cd5\n\n\u8003\u8651\u7ef4\u62a4\u533a\u95f4\u8fde\u7eed\u5168 $1$ \u6bb5\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u4f7f\u7528\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u5c06\u4f1a\u53d8\u4e3a $O(m \\log 10^{18})$\uff0c\u65e0\u6cd5\u63a5\u53d7\u3002\u8003\u8651\u4f7f\u7528\u5e73\u8861\u6811\u7ef4\u62a4\u6781\u957f\u8fde\u7eed\u5168 $1$ \u6bb5\uff0c\u5bb9\u6613\u53d1\u73b0\uff0c\u6bcf\u4e2a\u8fde\u7eed\u6bb5\u7684\u8d21\u732e\u4e3a $len\\cdot (len+1)/2$\u3002\n\n\u8fd9\u91cc\u4f7f\u7528\u4e00\u79cd Leafy \u7684\u5e73\u8861\u6811\u3002\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u7ef4\u62a4\u4e00\u4e2a\u4e92\u4e0d\u76f8\u4ea4\u7684\u8fde\u7eed\u6bb5\u3002\u6bcf\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u7ef4\u62a4\u5b50\u6811\u91cc\u6240\u6709\u53f6\u5b50\u8282\u70b9\u7684\u8d21\u732e\u4e4b\u548c\uff0c\u4ee5\u53ca\u5b50\u6811\u5185\u5de6\u7aef\u70b9\u6700\u5927\u7684\u7684\u53f6\u5b50\u8282\u70b9\u7684\u5de6\u53f3\u7aef\u70b9\u3002\n\n\u4fee\u6539\u65f6\uff0c\u628a $[l,r]$ \u4e2d\u95f4\u7684\u90a3\u4e00\u6bb5 split \u51fa\u6765\u76f4\u63a5\u6254\u6389\u3002\u7136\u540e\u6309\u7167 $[1,l),[l,r],(r,+\\infty)$ \u7684\u987a\u5e8f\u628a\u4e09\u6bb5 merge \u8d77\u6765\u3002\u6ce8\u610f\u7279\u5224\u5de6\u53f3\u8fb9\u754c\u91cd\u53e0\u7684\u60c5\u51b5\u3002\n\n\u67e5\u8be2\u65f6\uff0c\u540c\u6837\u628a $[l,r]$ split \u51fa\u6765\uff0c\u8ba1\u7b97 $[l,r]$ \u8ddf\u8282\u70b9\u7684\u8d21\u732e\uff0c\u518d\u52a0\u4e0a\u5de6\u53f3\u8fb9\u754c\u91cd\u53e0\u65f6\u7684\u8d21\u732e\u5373\u53ef\u3002\n\n## \u4ee3\u7801\u53c2\u8003\n\n```cpp\nstruct Tree {\n  static const int RA = 4;\n  struct T {\n    int ls, rs;\n    ll l, r;\n    int v, sz;\n    T() {}\n    T(int ls, int rs) : ls(ls), rs(rs), l(0), r(0), v(0), sz(0) {}\n    T(int ls, int rs, ll l, ll r, int v, int sz) : ls(ls), rs(rs), l(l), r(r), v(v), sz(sz) {}\n  } d[N * 15];\n  int tot, id;\n\n  inline void Up(int u) {\n    d[u].l = max(d[d[u].ls].l, d[d[u].rs].l);\n    d[u].r = max(d[d[u].ls].r, d[d[u].rs].r);\n    d[u].sz = d[d[u].ls].sz + d[d[u].rs].sz;\n    d[u].v = d[d[u].ls].v + d[d[u].rs].v, umod(d[u].v);\n  }\n\n  inline void Reb(int u) {\n    if (!d[u].ls || !d[u].rs) return d[u] = d[d[u].ls + d[u].rs], void();\n    Up(u);\n    if (d[d[u].ls].sz > d[d[u].rs].sz * RA)\n      d[++tot] = T(d[d[u].ls].rs, d[u].rs), Up(tot), d[u].ls = d[d[u].ls].ls, d[u].rs = tot;\n    if (d[d[u].rs].sz > d[d[u].ls].sz * RA)\n      d[++tot] = T(d[u].ls, d[d[u].rs].ls), Up(tot), d[u].rs = d[d[u].rs].rs, d[u].ls = tot;\n    Up(u);\n  }\n\n  void SplitR(int u, int &x, int &y, ll k) {\n    if (!u || (!d[u].ls && !d[u].rs)) return x = y = 0, (d[u].r <= k ? x : y) = u, void();\n    k < d[d[u].ls].r ? (y = u, SplitR(d[u].ls, x, d[u].ls, k))\n                     : (x = u, SplitR(d[u].rs, d[u].rs, y, k));\n    Reb(u);\n  }\n\n  void SplitL(int u, int &x, int &y, ll k) {\n    if (!u || (!d[u].ls && !d[u].rs)) return x = y = 0, (d[u].l <= k ? x : y) = u, void();\n    k < d[d[u].ls].l ? (y = u, SplitL(d[u].ls, x, d[u].ls, k))\n                     : (x = u, SplitL(d[u].rs, d[u].rs, y, k));\n    Reb(u);\n  }\n\n  int Merge(int u, int v) {\n    if (!u || !v) return u | v;\n    int rt;\n    return d[rt = ++tot] = T(u, v), Reb(rt), rt;\n  }\n\n  void Ins(ll L, ll R, int &u) {\n    int x, y, z, rt;\n    SplitR(u, x, y, L - 2);\n    int yy = y;\n    while (d[yy].sz > 1) yy = d[yy].ls;\n    if (yy) down(L, d[yy].l);\n    SplitL(y, y, z, R + 1);\n    yy = y;\n    while (d[yy].sz > 1) yy = d[yy].rs;\n    if (yy) up(R, d[yy].r);\n    d[rt = ++tot] = T(0, 0, L, R, 1ll * (R - L + 1) % mo * ((R - L + 2) % mo) % mo * inv2 % mo, 1);\n    x = Merge(x, rt);\n    u = Merge(x, z);\n  }\n\n  int Ask(ll L, ll R, int &u) {\n    int x, y, z, ans = 0;\n    SplitL(u, x, y, L - 1);\n    int xx = x, id = 0;\n    while (d[xx].sz > 1) xx = d[xx].rs;\n    if (xx && d[xx].r >= L)\n      ans +=\n          (1ll * min(R, d[xx].r) - L + 1) % mo * ((min(R, d[xx].r) - L + 2) % mo) % mo * inv2 % mo,\n          id = xx;\n    SplitR(y, y, z, R);\n    ans += d[y].v, umod(ans);\n    int zz = z;\n    while (d[zz].sz > 1) zz = d[zz].ls;\n    if (zz && d[zz].l <= R && zz != id)\n      ans += (1ll * (R - d[zz].l + 1) % mo * ((R - d[zz].l + 2) % mo) % mo * inv2) % mo, umod(ans);\n    x = Merge(x, y);\n    u = Merge(x, z);\n    return ans;\n  }\n} tr;\n```\n\n",
        "postTime": 1648037582,
        "uid": 207996,
        "name": "yzy1",
        "ccfLevel": 9,
        "title": "P8233 \u9898\u89e3"
    },
    {
        "content": "\u4e00\u4e2a\u611f\u89c9\u6709\u70b9\u5361\u7a7a\u95f4\u7684\u505a\u6cd5\uff0c\u53ef\u80fd\u662f\u5199\u6cd5\u7684\u95ee\u9898\u3002\n\n\u9996\u5148\u53d1\u73b0\u4e00\u6bb5\u957f\u5ea6\u4e3a $k$ \u7684\u8fde\u7eed\u9ed1\u8272\u6bb5\u5bf9\u7b54\u6848\u4ea7\u751f\u7684\u8d21\u732e\u662f $\\dfrac{k(k+1)}{2}$\uff0c\u8003\u8651\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7b54\u6848\u3002\n\n\u548c\u6700\u5927\u5b50\u6bb5\u548c\u7c7b\u4f3c\uff0c\u5bf9\u6bcf\u4e2a\u8282\u70b9\u8bb0\u5f55\uff1a\n\n- \u5f53\u524d\u533a\u95f4\u7684\u7b54\u6848\uff0c\u8bb0\u4e3a $ans$\u3002\n- \u4ece\u5de6\u7aef\u70b9\u5f00\u59cb\u7684\u6700\u957f\u8fde\u7eed\u9ed1\u8272\u6bb5\u957f\u5ea6\uff0c\u8bb0\u4e3a $maxl$\u3002\n- \u4ece\u53f3\u7aef\u70b9\u5f00\u59cb\u7684\u6700\u957f\u8fde\u7eed\u9ed1\u8272\u6bb5\u957f\u5ea6\uff0c\u8bb0\u4e3a $maxr$\u3002\n- \u5f53\u524d\u533a\u95f4\u662f\u5426\u5168\u662f\u9ed1\u8272\uff0c\u8bb0\u4e3a $tag$\u3002\n\n\u518d\u8003\u8651\u5408\u5e76\u4e24\u4e2a\u533a\u95f4\u3002\n\n\u8f6c\u79fb $ans$ \u65f6\uff0c\u5de6\u533a\u95f4\u7684\u53f3\u7aef\u70b9\u548c\u53f3\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u5408\u5e76\u4f1a\u4ea7\u751f\u65b0\u7684\u8d21\u732e\u3002\n\n\u663e\u7136\u53ef\u4ee5\u5148\u51cf\u53bb\u4e24\u4e2a\u6bb5\u4ea7\u751f\u7684\u8d21\u732e\uff0c\u518d\u52a0\u4e0a\u4e24\u6bb5\u5408\u5e76\u540e\u7684\u8d21\u732e\u3002\u7528\u5de6\u533a\u95f4\u7684 $maxl$ \u548c\u53f3\u533a\u95f4\u7684 $maxr$ \u641e\u4e00\u641e\u5c31\u597d\u4e86\u3002\n\n\u8f6c\u79fb $maxl$ \u65f6\u5982\u679c\u5de6\u533a\u95f4\u5168\u4e3a\u9ed1\u8272\u5c31\u8fd8\u8981\u52a0\u4e0a\u53f3\u533a\u95f4\u7684 $maxl$\uff0c$maxr$ \u540c\u7406\u3002\n\n\u8f6c\u79fb $tag$ \u663e\u7136\u3002\n\n\u7ebf\u6bb5\u6811\u90e8\u5206\u5c31\u641e\u5b8c\u4e86\u3002\u4f46\u662f\u53d1\u73b0\u503c\u57df\u592a\u5927\u4e86\u9700\u8981\u79bb\u6563\u5316\u3002\n\n\u79bb\u6563\u5316\u7684\u90e8\u5206\u6211\u7684\u5199\u6cd5\u662f\u5c06 $l-1$\uff0c$l$\uff0c$r$\uff0c$r+1$ \u90fd\u79bb\u6563\u5316\u4e86\u3002\n\n\u8bb0 $lsh_i$ \u4e3a $i$ \u79bb\u6563\u5316\u4e4b\u524d\u7684\u6570\uff0c\u90a3\u4e48\u4e00\u4e2a\u79bb\u6563\u5316\u540e\u7684\u533a\u95f4 $[l,r]$ \u5b83\u5b9e\u9645\u7684\u957f\u5ea6\u4e3a $lsh_r-lsh_{l-1}$\u3002\n\n\u53ef\u80fd\u5c31\u662f\u56e0\u4e3a\u79bb\u6563\u5316\u4e86\u56db\u4e2a\u6570\u6240\u4ee5\u7a7a\u95f4\u5f00\u9500\u5f88\u5927\uff0c\u4e0d\u77e5\u9053\u6709\u6ca1\u6709\u66f4\u597d\u7684\u5199\u6cd5\u3002\n\n[Code](https://www.luogu.com.cn/paste/k4k6wpz2)",
        "postTime": 1647881704,
        "uid": 639649,
        "name": "KemononeRou",
        "ccfLevel": 0,
        "title": "P8233"
    },
    {
        "content": "## \u601d\u8def\n\n\u9047\u5230\u8fd9\u79cd\u64cd\u4f5c\u9898\uff0c\u4e0d\u96be\u60f3\u5230\u7ebf\u6bb5\u6811\u3002\n\n\u7ebf\u6bb5\u6811\u80af\u5b9a\u8981\u5b58\u7684\u5c31\u662f\u8fd9\u4e00\u6bb5\u7684\u5408\u6cd5\u533a\u95f4\u6570\uff0c\u96be\u5728 `pushup` \u4e0e `pushdown` \u4e0a\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u8003\u8651\u5c06\u4e24\u4e2a\u533a\u95f4\u5408\u5e76\u65f6\u7684 `pushup` \u9700\u8981\u54ea\u4e9b\u5185\u5bb9\u3002\u8003\u8651\u5230\u533a\u95f4\u603b\u6570\u7b49\u4e8e\u5de6\u533a\u95f4\u52a0\u53f3\u533a\u95f4\u52a0\u6a2a\u8de8\u5de6\u53f3\u533a\u95f4\u7684\u6ee1\u8db3\u8981\u6c42\u7684\u533a\u95f4\u6570\u3002\u4e8e\u662f\u6211\u4eec\u53ea\u9700\u8981\u8003\u8651\u6a2a\u8de8\u5de6\u53f3\u533a\u95f4\u7684\u65b9\u6848\u6570\u5373\u53ef\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u5176\u5b9e\u65b9\u6848\u6570\u5c31\u662f\u5de6\u8fb9\u533a\u95f4\u53f3\u7aef\u8fde\u7eed\u7684\u9ed1\u8272\u683c\u5b50\u6570\u548c\u53f3\u8fb9\u533a\u95f4\u5de6\u7aef\u8fde\u7eed\u7684\u9ed1\u8272\u683c\u5b50\u6570\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u8fd8\u8981\u8bb0\u5f55\u4e24\u7aef\u8fde\u7eed\u9ed1\u8272\u683c\u5b50\u6570 $lmax,rmax$\u3002\u90a3\u4e48\u6211\u4eec\u5f88\u5bb9\u6613\u5f97\u5230 $sum$ \u7684 `pushup` \u65b9\u6cd5\uff1a\n\n$$sum_{i}=sum_{i\\times2}+sum_{i\\times2+1}+rmax_{i\\times2}\\times lmax_{i\\times2+1}$$\n\n`pushdown` \u64cd\u4f5c\u5f53\u505a\u4e00\u822c\u4fee\u6539\u505a\u5373\u53ef\u3002\n\n\u63a5\u4e0b\u6765\u7684\u4e00\u4e2a\u95ee\u9898\u6211\u4eec\u4f1a\u53d1\u73b0\u6570\u636e\u8303\u56f4 $1\\leq l\\leq r\\leq 10^{18}$\u3002\n\n\u8fd9\u65f6\u6211\u4eec\u4f1a\u53d1\u73b0\u8fd9\u9898\u662f\u4e00\u4e2a\u79bb\u7ebf\u95ee\u9898\uff0c\u663e\u7136\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u7684\u79bb\u6563\u5316\u89e3\u51b3\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n#define int __int128\nusing namespace std;\nconst int mod=1e9+7;\nstruct node{\n\tint sum,lzt,lmax,rmax,len;\n};\nnode empty(){\n\tnode x;\n\tx.sum=x.lzt=x.lmax=x.rmax=x.len=0;\n\treturn x; \n}\nint a[4000005],k,opt[1000005],ll[1000005],rr[1000005];\nstruct sgt{\n\tnode f[16000005];\n\tnode merge(node x,node y){\n\t\tnode z=empty();\n\t\tz.sum=x.sum+y.sum+x.rmax*y.lmax;\n\t\tif(y.rmax==y.len) z.rmax=x.rmax+y.rmax;\n\t\telse z.rmax=y.rmax;\n\t\tif(x.lmax==x.len) z.lmax=x.lmax+y.lmax;\n\t\telse z.lmax=x.lmax;\n\t\tz.len=x.len+y.len;\n\t\treturn z;\n\t}\n\tvoid pushdown(int i){\n\t\tif(f[i].lzt==1){\n\t\t\tf[i*2].lmax=f[i*2].rmax=f[i*2].sum=f[i*2].len;\n\t\t\tf[i*2].sum=f[i*2].len*(f[i*2].len+1)/2;\n\t\t\tf[i*2].lzt=1;\n\t\t\tf[i*2+1].lmax=f[i*2+1].rmax=f[i*2+1].sum=f[i*2+1].len;\n\t\t\tf[i*2+1].sum=f[i*2+1].len*(f[i*2+1].len+1)/2;\n\t\t\tf[i*2+1].lzt=1;\n\t\t\tf[i].lzt=0;\n\t\t}\n\t}\n\tvoid build(int i,int l,int r){\n\t\tif(l==r){\n\t\t\tf[i]=empty();\n\t\t\tf[i].len=a[l]-a[l-1];\n\t\t\treturn ;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tbuild(i*2,l,mid);\n\t\tbuild(i*2+1,mid+1,r);\n\t\tf[i]=merge(f[i*2],f[i*2+1]);\n\t}\n\tvoid change(int i,int l,int r,int ql,int qr){\n\t\tif(ql<=l&&qr>=r){\n\t\t\tf[i].lmax=f[i].rmax=f[i].sum=f[i].len;\n\t\t\tf[i].sum=f[i].len*(f[i].len+1)/2;\n\t\t\tf[i].lzt=1;\n\t\t\treturn ;\n\t\t}\n\t\tif(r<ql||l>qr){\n\t\t\treturn ;\n\t\t}\n\t\tpushdown(i);\n\t\tint mid=(l+r)>>1; \n\t\tchange(i*2,l,mid,ql,qr);\n\t\tchange(i*2+1,mid+1,r,ql,qr);\n\t\tf[i]=merge(f[i*2],f[i*2+1]);\n\t}\n\tnode qry(int i,int l,int r,int ql,int qr){\n\t\tif(ql<=l&&qr>=r){\n\t\t\treturn f[i];\n\t\t}\n\t\tif(r<ql||l>qr){\n\t\t\treturn empty();\n\t\t}\n\t\tpushdown(i);\n\t\tint mid=(l+r)>>1;\n\t\treturn merge(qry(i*2,l,mid,ql,qr),qry(i*2+1,mid+1,r,ql,qr));\n\t}\n}tree;\nsigned main(){\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\tcout.tie(0);\n\tint n;\n\tlong long N;\n\tcin>>N;\n\tn=N;\n\tfor(int i=1;i<=n;i++){\n\t\tlong long OPT,LL,RR;\n\t\tcin>>OPT>>LL>>RR;\n\t\topt[i]=OPT,ll[i]=LL,rr[i]=RR;\n\t\tk++;\n\t\ta[k]=ll[i]-1;\n\t\tk++;\n\t\ta[k]=rr[i];\n\t}\n\tsort(a+1,a+k+1);\n\tfor(int i=1;i<=n;i++){\n\t\tll[i]=(lower_bound(a+1,a+k+1,ll[i]-1)-a)+1;\n\t\trr[i]=lower_bound(a+1,a+k+1,rr[i])-a;\n\t}\n\ttree.build(1,1,k);\n\tfor(int i=1;i<=n;i++){\n\t\tif(opt[i]==1){\n\t\t\ttree.change(1,1,k,ll[i],rr[i]);\n\t\t}\n\t\telse{\n\t\t\tint tt=tree.qry(1,1,k,ll[i],rr[i]).sum%mod;\n\t\t\tlong long TT=tt;\n\t\t\tcout<<TT<<endl;\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1647854886,
        "uid": 116664,
        "name": "Daniel_lele",
        "ccfLevel": 8,
        "title": "P8233 \u533a\u95f4 \u9898\u89e3"
    }
]