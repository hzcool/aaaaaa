[
    {
        "content": "\n\u89e3\u6cd5\uff1a\n------------\n\u9898\u76ee\u6709\u4e2a\u6761\u4ef6\uff0c\u5c31\u662fm<=6\uff0c\u4e8e\u662f\u542f\u53d1\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u884c\u5efa\u7acb\u6570\u636e\u7ed3\u6784\uff0c\u7531\u4e8e\u5217\u5f88\u5c11\u53ef\u4ee5\u5feb\u901f\u7ef4\u62a4\u884c\u4e0e\u884c\u4e4b\u95f4\u7684\u4fe1\u606f\u3002\u7a0d\u52a0\u601d\u8003\u53d1\u73b0\u7ebf\u6bb5\u6811\u662f\u53ef\u884c\u7684\u3002\u7ef4\u62a4\u884c\u4e0e\u884c\u4e4b\u95f4\u7684\u5173\u7cfb\u4e5f\u5f88\u7b80\u5355\uff0c\u53ea\u8981\u901a\u8fc7\u5e76\u67e5\u96c6\u6765\u5b9e\u73b0\uff0c\u5982\u679c\u4e0d\u4f1a\u53ef\u4ee5\u53bb\u505a\u505a[wc2005]\u53cc\u9762\u68cb\u76d8\u8fd9\u9053\u9898\u3002\n\n\u8fd9\u9898\u7684\u4e00\u4e2a\u7ec6\u8282\u662f\uff0c\u5982\u679c\u53ea\u6709\u9053\u8def\u7684\u8fde\u901a\u5757\u662f\u4e0d\u80fd\u7b97\u8fdb\u7b54\u6848\u7684\uff0c\u6240\u4ee5\u5b9e\u73b0\u65f6\u52a0\u4e00\u4e2a\u5e03\u5c14\u6570\u7ec4\u5224\u65ad\u8fd9\u4e2a\u8fde\u901a\u5757\u5185\u662f\u5426\u6709\u2018O\u2019\u3002\u8fd9\u9898\u7684\u601d\u7ef4\u96be\u5ea6\u4e00\u822c\uff0c\u4e3b\u8981\u8003\u5bdf\u5b9e\u73b0\u80fd\u529b\u548c\u4ee3\u7801\u7ec6\u5fc3\u3002\u3002\n\n\u6700\u540e\u8fd8\u8981orz Xietutu\u3002\u3002\u4e00\u5f00\u59cb\u8fde\u901a\u7684\u6761\u4ef6\u7406\u89e3\u9519\uff0c\u8fde\u66b4\u529b\u90fdwa\u4e86\u3002~~\u540e\u6765\u662f\u67d0\u5927\u4f6c\u544a\u8bc9\u6211\u6b63\u786e\u7684\u7406\u89e3\u3002\u6211\u592a\u5f31\u4e86...~~\n\nAC\u4ee3\u7801\n------------\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <cmath>\nusing namespace std;\nconst int maxn=100003;\nstruct node\n{\n    int sum,u[7],d[7];\n    bool avld[7],avlu[7];\n}tree[maxn*4];\nint n,m,fa[100],lab[100],cnt[100];\nbool flag[100];\nchar a[maxn][7];\n \ninline int get()\n{\n    int f=0,v=0;char ch;\n    while(!isdigit(ch=getchar()))if(ch=='-')break;\n    if(ch=='-')f=1;else v=ch-48;\n    while(isdigit(ch=getchar()))v=v*10+ch-48;\n    if(f==1)return -v;else return v;\n}\ninline void write(int x)\n{\n    int _=x,len=0,p[20];\n    if(_<0)putchar('-'),_=-_;\n    while(_)p[++len]=_%10,_/=10;\n    if(!x)p[++len]=0;\n    while(len)putchar(p[len--]+'0');\n}\ninline void writeln(int x)\n{\n    write(x);puts(\"\");\n}\ninline bool check(const char &a,const char &b,const char &c) \n{\n    return (a=='O'||a==c||a=='+')&&(b=='O'||b==c||b=='+');\n}\ninline void init(int p,int x)\n{\n    tree[p].sum=0;\n    for(int i=1;i<=m;i++)tree[p].u[i]=tree[p].d[i]=tree[p].avld[i]=tree[p].avlu[i]=0;\n    int tot=0;\n    for(int i=1,j;i<=m;i++)\n    {\n        if(a[x][i]=='.')continue;\n        bool avl=0;\n        for(j=i;j<m&&check(a[x][j],a[x][j+1],'-');j++);\n        for(int k=i;k<=j&&!avl;k++)avl|=a[x][k]=='O';\n        ++tot;\n        for(int k=i;k<=j;k++)tree[p].u[k]=tree[p].d[k]=tot,tree[p].avld[k]=tree[p].avlu[k]=avl;\n        tree[p].sum+=int(avl);\n        i=j;\n    }\n}\n \ninline int getfa(int x){return x==fa[x]?x:fa[x]=getfa(fa[x]);}\n \ninline void merge(node &x,const node &ls,const node &rs,const int &l,const int &r,const int &mid)\n{\n    x.sum=ls.sum+rs.sum;\n    for(int i=1;i<=m;i++)x.u[i]=x.d[i]=x.avld[i]=x.avlu[i]=0;\n    for(int i=1;i<=4*m;i++)fa[i]=i,lab[i]=0,flag[i]=0;\n    for(int i=1;i<=m;i++)\n    {\n        if(ls.d[i])cnt[ls.d[i]]=ls.avld[i],flag[ls.d[i]]=1;\n        if(rs.u[i])cnt[rs.u[i]+2*m]=rs.avlu[i],flag[rs.u[i]+2*m]=1;;\n        if(ls.u[i])cnt[ls.u[i]]=ls.avlu[i];\n        if(rs.d[i])cnt[rs.d[i]+2*m]=rs.avld[i];\n    }\n    for(int i=1;i<=m;i++)\n    {\n        if(!check(a[mid][i],a[mid+1][i],'|'))continue;\n        int fx=getfa(ls.d[i]),fy=getfa(rs.u[i]+2*m);\n        if(fx!=fy)fa[fx]=fy,cnt[fy]+=cnt[fx];\n    }\n    for(int i=1;i<=m*4;i++)\n        if(flag[i]&&fa[i]==i&&cnt[i]>0)x.sum-=cnt[i]-1;\n    for(int i=1,tot=0;i<=m;i++)\n    {\n        int fx;\n        if(ls.u[i])\n        {\n            fx=getfa(ls.u[i]);\n            if(!lab[fx])lab[fx]=++tot;\n            x.u[i]=lab[fx],x.avlu[i]=cnt[fx];\n        }\n        if(rs.d[i])\n        {\n            fx=getfa(rs.d[i]+2*m);\n            if(!lab[fx])lab[fx]=++tot;\n            x.d[i]=lab[fx],x.avld[i]=cnt[fx];\n        }\n    }\n}\n \ninline void build(int p,int l,int r)\n{\n    if(l==r){init(p,l);return;}\n    int mid=(l+r)/2;\n    build(p*2,l,mid),build(p*2+1,mid+1,r);\n    merge(tree[p],tree[p*2],tree[p*2+1],l,r,mid);\n}\n \ninline node ask(int p,int l,int r,int a,int b)\n{\n    if(a<=l&&r<=b)return tree[p];\n    int mid=(l+r)/2;node res;\n    if(b<=mid)res=ask(p*2,l,mid,a,b);\n    else if(a>mid)res=ask(p*2+1,mid+1,r,a,b);\n    else merge(res,ask(p*2,l,mid,a,mid),ask(p*2+1,mid+1,r,mid+1,b),a,b,mid);\n    return res;\n}\n \ninline void modify(int p,int l,int r,int num)\n{\n    if(l==r){init(p,l);return;}\n    int mid=(l+r)/2;\n    if(num<=mid)modify(p*2,l,mid,num);else modify(p*2+1,mid+1,r,num);\n    merge(tree[p],tree[p*2],tree[p*2+1],l,r,mid);\n}\n \nint main()\n{\n    n=get(),m=get();\n    for(int i=1;i<=n;i++)scanf(\"%s\",a[i]+1);\n    build(1,1,n);\n    int Q=get();\n    while(Q--)\n    {\n        char ch;while(!isalpha(ch=getchar()));\n        int x=get(),y=get();node res;\n        if(ch=='C')\n        {\n            scanf(\" %c\",&a[x][y]);\n            modify(1,1,n,x);\n        }else res=ask(1,1,n,x,y),writeln(res.sum);\n    }\n    return 0;\n}\n\n```",
        "postTime": 1534327964,
        "uid": 109955,
        "name": "gongbangrui",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3300 \u3010[SDOI2013]\u57ce\u5e02\u89c4\u5212\u3011"
    }
]