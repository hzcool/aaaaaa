[
    {
        "content": "## \u9898\u89e3\n\u9996\u5148\u9898\u76ee\u4e2d\u7684 $L$ \u548c $R$ \u6211\u4eec\u53ef\u4ee5\u5206\u522b\u7528 $0$ \u548c $1$\u6765\u4ee3\u66ff\uff1b \n\n\u4e00\u4e2a\u5f88\u81ea\u7136\u7684\u60f3\u6cd5\u662f**\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7b54\u6848\u533a\u95f4\u7684\u5de6\u53f3\u7aef\u70b9**\uff1b\n\n\u601d\u8def\u7b80\u5355\u66b4\u529b\uff0c\u4f46\u662f\u5408\u5e76\u4fe1\u606f\u7684\u65f6\u5019\u9700\u8981\u8003\u8651\u7684\u60c5\u51b5\u8f83\u591a\uff0c\u4e14\u590d\u6742\u5ea6\u8f83\u9ad8\uff0c\u4f1a$TLE$\uff1b\n### \u5de7\u5999\u7684\u601d\u8def\n\u5148\u4ecb\u7ecd\u4e00\u4e0b\u4ee3\u7801\u91cc\u7684\u6570\u7ec4\uff1a\n\n$len [ i ]$\uff1a\u7ebf\u6bb5\u6811\u4e2d\u7b2c $i$ \u4e2a\u8282\u70b9\u6240\u7ef4\u62a4\u7684\u533a\u95f4\u7684\u957f\u5ea6\uff1b\n\n$L [ i ]$\uff1a\u7ebf\u6bb5\u6811\u4e2d\u7b2c $i$ \u4e2a\u8282\u70b9\u6240\u7ef4\u62a4\u7684\u533a\u95f4\u7684\u5de6\u7aef\u70b9\uff1b\n\n$R [ i ]$\uff1a\u7ebf\u6bb5\u6811\u4e2d\u7b2c $i$ \u4e2a\u8282\u70b9\u6240\u7ef4\u62a4\u7684\u533a\u95f4\u7684\u53f3\u7aef\u70b9\uff1b\n\n$S [ i ]$\uff1a\u7ebf\u6bb5\u6811\u4e2d\u7b2c $i$ \u4e2a\u8282\u70b9\u6240\u7ef4\u62a4\u7684\u533a\u95f4\u7684\u6700\u5de6\u7aef\u5f00\u59cb\u6700\u957f\u7684\u7b26\u5408\u6761\u4ef6\u7684\u533a\u95f4\u957f\u5ea6\uff08\u524d\u7f00\uff09\uff1b\n\n$H [ i ]$\uff1a\u7ebf\u6bb5\u6811\u4e2d\u7b2c $i$ \u4e2a\u8282\u70b9\u6240\u7ef4\u62a4\u7684\u533a\u95f4\u7684\u6700\u53f3\u7aef\u5f00\u59cb\u6700\u957f\u7684\u7b26\u5408\u6761\u4ef6\u7684\u533a\u95f4\u957f\u5ea6\uff08\u540e\u7f00\uff09\uff1b\n\n$ans [ i ]$\uff1a\u7ebf\u6bb5\u6811\u4e2d\u7b2c $i$ \u4e2a\u8282\u70b9\u6240\u7ef4\u62a4\u7684\u533a\u95f4\u7684\u6700\u957f\u7b26\u5408\u6761\u4ef6\u7684\u533a\u95f4\u957f\u5ea6\uff1b\n\n\u8fd9\u6837\u641e\u6709\u4ec0\u4e48\u597d\u5904\u5462\uff1f\n\n\u53ef\u4ee5 $O ( 1 )$ \u5b8c\u6210\u4fe1\u606f\u7684\u7ef4\u62a4\u64cd\u4f5c\uff1b\n\n\u91cd\u70b9\u6765\u8003\u8651\u4e00\u4e0b $pushup$ \u7684\u64cd\u4f5c\u600e\u4e48\u641e\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5\uff1a\n\n**\u2460. \u5f53\u524d\u533a\u95f4\u7684\u5de6\u513f\u5b50\u7684\u53f3\u7aef\u70b9\u4e0e\u53f3\u513f\u5b50\u7684\u5de6\u7aef\u70b9\u76f8\u540c\uff1a**\n![](https://cdn.luogu.com.cn/upload/image_hosting/w365j0ev.png)\n\n\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5927\u533a\u95f4\u7684\u6700\u957f\u7b26\u5408\u6761\u4ef6\u7684\u533a\u95f4\u53ea\u53ef\u80fd\u662f\u4e24\u4e2a\u5b50\u533a\u95f4\u4e2d\u7684\u6700\u5927\u503c\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/q5cxqqhm.png)\n\n**\u2461. \u5f53\u524d\u533a\u95f4\u7684\u5de6\u513f\u5b50\u7684\u53f3\u7aef\u70b9\u4e0e\u53f3\u513f\u5b50\u7684\u5de6\u7aef\u70b9\u4e0d\u540c\uff1a**\n![](https://cdn.luogu.com.cn/upload/image_hosting/o7gjp8d1.png)\n\n\u8fd9\u79cd\u60c5\u51b5\u76f8\u6bd4\u4e8e\u4e0a\u4e00\u79cd\u60c5\u51b5\u6765\u8bf4\u8981\u591a\u8003\u8651\u4e00\u79cd\u60c5\u51b5\uff1a\n\n**\u5c31\u662f\u5de6\u533a\u95f4\u9760\u53f3\u7684\u90a3\u4e00\u90e8\u5206\u52a0\u4e0a\u53f3\u533a\u95f4\u9760\u5de6\u7684\u90a3\u4e00\u90e8\u5206\u6240\u5f62\u6210\u7684\u65b0\u7684\u7b26\u5408\u6761\u4ef6\u7684\u533a\u95f4\u53ef\u80fd\u6bd4\u5de6\u53f3\u533a\u95f4\u4e2d\u7684\u90fd\u5927 \u3002**\n![](https://cdn.luogu.com.cn/upload/image_hosting/9ekusn1h.png)\n\n\u867d\u7136\u8fd9\u79cd\u60c5\u51b5\u770b\u8d77\u6765\u6bd4\u8f83\u6bd2\u7624\uff0c\u4f46\u662f\u5229\u7528\u6211\u4eec\u7684 $S$ \u6570\u7ec4\u548c $H$ \u6570\u7ec4\u5c31\u8f7b\u677e\u89e3\u51b3\u95ee\u9898\u4e86\uff1b\n\n**\u6240\u62fc\u6210\u7684\u533a\u95f4\u7684\u957f\u5ea6\u5c31\u662f $H [ node << 1 ($\u5de6\u513f\u5b50\u7f16\u53f7$) ] + S [ node<<1 | 1 ($\u53f3\u513f\u5b50\u7f16\u53f7$) ]$\uff1b**\n```\nif(R[node<<1]^L[node<<1|1])             //\u5982\u679c\u5de6\u533a\u95f4\u7684\u53f3\u7aef\u70b9\u548c\u53f3\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u4e0d\u540c \n{\n    ans[node]=H[node<<1]+S[node<<1|1];  //\u8003\u8651\u4e24\u7aef\u5408\u5e76\u540e\u7684\u7b26\u5408\u6761\u4ef6\u7684\u533a\u95f4\u957f\u5ea6 \n    ans[node]=max(ans[node],ans[node<<1]);  //\u4e0e\u5de6\u533a\u95f4\u7684\u8fdb\u884c\u6bd4\u8f83 \n    ans[node]=max(ans[node],ans[node<<1|1]);//\u4e0e\u53f3\u533a\u95f4\u7684\u8fdb\u884c\u6bd4\u8f83 \n}\nelse ans[node]=max(ans[node<<1],ans[node<<1|1]);  //\u5426\u5219\u53ea\u7528\u8003\u8651\u5de6\u53f3\u533a\u95f4\u4e2d\u6700\u957f\u7684\u533a\u95f4\n```\n\u63a5\u4e0b\u6765\u8003\u8651\u600e\u4e48\u7ef4\u62a4 $S$ \u548c $H$ \u6570\u7ec4\uff0c\u4e5f\u662f\u5206\u4e24\u79cd\u60c5\u51b5\u6765\u8003\u8651\uff1a \n\n**\u2460. $S$ \u548c $H$ \u6570\u7ec4\u6240\u7ef4\u62a4\u7684\u533a\u95f4\u957f\u5ea6\u5c0f\u4e8e\u5f53\u524d\u533a\u95f4\u957f\u5ea6\uff1a**\n![](https://cdn.luogu.com.cn/upload/image_hosting/v70hsqzv.png)\n\n\u50cf\u4e0a\u9762\u5de6\u533a\u95f4\u7684 $S$ \u5e76\u6ca1\u6709\u8986\u76d6\u6574\u4e2a\u5de6\u533a\u95f4\uff0c\u6240\u4ee5\u66f4\u65b0\u5b8c\u4fe1\u606f\u540e\u5927\u533a\u95f4\u7684 $S$ \u5c31\u662f\u5de6\u533a\u95f4\u7684 $S$ \u5373\u53ef\uff1b \n\n\u7ef4\u62a4\u53f3\u533a\u95f4\u7684 $H$ \u540c\u7406\uff1b \n\n**\u2461. $S$ \u548c $H$ \u6570\u7ec4\u6240\u7ef4\u62a4\u7684\u533a\u95f4\u957f\u5ea6\u7b49\u4e8e\u5f53\u524d\u533a\u95f4\u957f\u5ea6\uff1a**\n![](https://cdn.luogu.com.cn/upload/image_hosting/4e89jfvt.png)\n\n\u6b64\u65f6\u6709$ S [ node<<1 ] = len [ node<< 1 ]$ \uff1b\n\n\u4e3a\u4ec0\u4e48\u8981\u628a\u8fd9\u79cd\u60c5\u51b5\u5355\u72ec\u62ff\u51fa\u6765\u8003\u8651\u5462\uff1f\u56e0\u4e3a\u5b83\u6bd2\u7624$qwq$ \u3002\n\n\u5982\u679c\u6b64\u65f6\u6709 $R [ node<<1 ]$  $^$   $L [ node<<1 | 1 ] = 1$\uff08\u5de6\u533a\u95f4\u7684\u53f3\u7aef\u70b9\u4e0e\u53f3\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u4e0d\u540c\uff09\uff0c\u90a3\u4e48\u4e24\u6bb5\u53ef\u4ee5\u5408\u6210\u4e00\u4e2a\u65b0\u6bb5\u6765\u4f5c\u4e3a\u5927\u533a\u95f4\u7684 $S$\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/niawax3o.png)\n![](https://cdn.luogu.com.cn/upload/image_hosting/c9zduxli.png)\n\n\u7ef4\u62a4\u53f3\u533a\u95f4\u7684 $H$ \u540c\u7406\uff1b\n```\nif(S[node<<1]==len[node<<1]&&R[node<<1]^L[node<<1|1]) S[node]=S[node<<1]+S[node<<1|1];  //\u5de6\u533a\u95f4\u7684S\u5305\u542b\u6574\u4e2a\u533a\u95f4\u5e76\u4e14\u5de6\u533a\u95f4\u7684\u53f3\u7aef\u70b9\u4e0e\u53f3\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u4e0d\u540c,\u5219\u4e24\u4e2a\u533a\u95f4\u7684S\u5408\u5e76\u6210\u5927\u533a\u95f4\u7684S \nelse S[node]=S[node<<1];                //\u5426\u5219\u5c31\u7ee7\u627f\u5de6\u533a\u95f4\u7684S             \nif(H[node<<1|1]==len[node<<1|1]&&R[node<<1]^L[node<<1|1]) H[node]=H[node<<1|1]+H[node<<1]; //\u53f3\u533a\u95f4\u7684H\u5305\u542b\u6574\u4e2a\u533a\u95f4\u5e76\u4e14\u5de6\u533a\u95f4\u7684\u53f3\u7aef\u70b9\u4e0e\u53f3\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u4e0d\u540c,\u5219\u4e24\u4e2a\u533a\u95f4\u7684H\u5408\u5e76\u6210\u5927\u533a\u95f4\u7684H \nelse H[node]=H[node<<1|1];              //\u5426\u5219\u5c31\u7ee7\u627f\u53f3\u533a\u95f4\u7684H \n```\npushup \u64cd\u4f5c\u8bb2\u5b8c\u4e86\uff0c\u8fd9\u4e2a\u9898\u5c31\u8bb2\u5b8c\u4e86~\n\n#### $Code:$\n```\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nconst int N=8e5+5;\nint n,m;\nint S[N],H[N],L[N],R[N],len[N],ans[N];\nvoid work(int node,int k)                   //\u5c06node\u8282\u70b9\u7684\u503c\u8d4b\u503c\u4e3ak,\u5e76\u66f4\u65b0\u4e00\u4e0b\u8be5\u70b9\u4fe1\u606f \n{\n\tans[node]=S[node]=H[node]=1;\n\tL[node]=R[node]=k;\n}\nvoid pushup(int node)\n{\n\tif(R[node<<1]^L[node<<1|1])             //\u5982\u679c\u5de6\u533a\u95f4\u7684\u53f3\u7aef\u70b9\u548c\u53f3\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u4e0d\u540c \n\t{\n\t\tans[node]=H[node<<1]+S[node<<1|1];  //\u8003\u8651\u4e24\u7aef\u5408\u5e76\u540e\u7684\u7b26\u5408\u6761\u4ef6\u7684\u533a\u95f4\u957f\u5ea6 \n\t\tans[node]=max(ans[node],ans[node<<1]);  //\u4e0e\u5de6\u533a\u95f4\u7684\u8fdb\u884c\u6bd4\u8f83 \n\t\tans[node]=max(ans[node],ans[node<<1|1]);//\u4e0e\u53f3\u533a\u95f4\u7684\u8fdb\u884c\u6bd4\u8f83 \n\t}\n\telse ans[node]=max(ans[node<<1],ans[node<<1|1]);  //\u5426\u5219\u53ea\u7528\u8003\u8651\u5de6\u53f3\u533a\u95f4\u4e2d\u6700\u957f\u7684\u533a\u95f4 \n\tL[node]=L[node<<1];R[node]=R[node<<1|1];//L\u548cR\u6570\u7ec4\u7684\u7ef4\u62a4\u663e\u800c\u6613\u89c1   \n\tif(S[node<<1]==len[node<<1]&&R[node<<1]^L[node<<1|1]) S[node]=S[node<<1]+S[node<<1|1];  //\u5de6\u533a\u95f4\u7684S\u5305\u542b\u6574\u4e2a\u533a\u95f4\u5e76\u4e14\u5de6\u533a\u95f4\u7684\u53f3\u7aef\u70b9\u4e0e\u53f3\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u4e0d\u540c,\u5219\u4e24\u4e2a\u533a\u95f4\u7684S\u5408\u5e76\u6210\u5927\u533a\u95f4\u7684S \n\telse S[node]=S[node<<1];                //\u5426\u5219\u5c31\u7ee7\u627f\u5de6\u533a\u95f4\u7684S             \n\tif(H[node<<1|1]==len[node<<1|1]&&R[node<<1]^L[node<<1|1]) H[node]=H[node<<1|1]+H[node<<1]; //\u53f3\u533a\u95f4\u7684H\u5305\u542b\u6574\u4e2a\u533a\u95f4\u5e76\u4e14\u5de6\u533a\u95f4\u7684\u53f3\u7aef\u70b9\u4e0e\u53f3\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u4e0d\u540c,\u5219\u4e24\u4e2a\u533a\u95f4\u7684H\u5408\u5e76\u6210\u5927\u533a\u95f4\u7684H \n\telse H[node]=H[node<<1|1];              //\u5426\u5219\u5c31\u7ee7\u627f\u53f3\u533a\u95f4\u7684H \n}\nvoid build(int node,int l,int r)            \n{\n\tlen[node]=r-l+1;                        //\u533a\u95f4\u957f\u5ea6 \n\tif(l==r)                                //\u9012\u5f52\u5230\u4e86\u53f6\u5b50\u8282\u70b9 \n\t{\n\t\twork(node,0);                       //\u5c06\u8be5\u70b9\u8d4b\u503c0,\u5e76\u66f4\u65b0\u4e00\u4e0b\u8be5\u70b9\u4fe1\u606f \n\t\treturn ;\n\t}\n\tint mid=(l+r)/2;\n\tbuild(node<<1,l,mid);\n\tbuild(node<<1|1,mid+1,r);\n\tpushup(node);\n}\nvoid change(int node,int l,int r,int x)\n{\n\tif(l==r)                                //\u9012\u5f52\u5230\u4e86\u53f6\u5b50\u8282\u70b9 \n\t{\n\t\twork(node,!L[node]);                //\u5c06\u8be5\u8282\u70b9\u8d4b\u503c\u4e3a!L[node],\u4ece\u800c\u8fbe\u52300\u53d8\u62101,1\u53d8\u62100\u7684\u6548\u679c \n\t\treturn ;\n\t}\n\tint mid=(l+r)/2;\n\tif(x<=mid) change(node<<1,l,mid,x);\n\telse change(node<<1|1,mid+1,r,x);\n\tpushup(node);\n}\nint main()\n{\n\tscanf(\"%d %d\",&n,&m);\n\tbuild(1,1,n);                           //\u5efa\u6811     \n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x;\n\t\tscanf(\"%d\",&x);\n\t\tchange(1,1,n,x);                    //\u5355\u70b9\u4fee\u6539 \n\t\tprintf(\"%d\\n\",ans[1]);              //\u6bcf\u6b21\u8981\u8f93\u51fa\u6700\u957f\u7684\u7b26\u5408\u6761\u4ef6\u7684\u533a\u95f4 \n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1592655702,
        "uid": 177070,
        "name": "\u6697\u3056\u4e4b\u6b87",
        "ccfLevel": 6,
        "title": "\u9898\u89e3P6492 [COCI2010-2011#6] STEP"
    },
    {
        "content": "# \u4e00\u4e9b\u95f2\u626f\n\u8fd9\u9053\u9898\u8bf4\u5b9e\u8bdd\u53ef\u4ee5\u5f53\u4f5c\u6a21\u677f\u3002  \n\u6211\u4e60\u60ef\u79f0\u8fd9\u7c7b\u9898\u4e3a~~\u7ebf\u6bb5\u6811\u5de6\u53f3\u524d\u7f00\u533a\u95f4\u7ef4\u62a4\u6a21\u677f~~  \n\u8fd9\u79cd\u9898\u7684\u601d\u60f3\u5c31\u662f\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4\u7684\u524d\u7f00max\u548c\u540e\u7f00max\uff0c\u7136\u540e\u8f6c\u79fb\u7684\u65f6\u5019\u5c31\u5224mid\u548cmid + 1\u7684\u6761\u4ef6\uff0c\u5047\u5982O\u4e86\uff0c\u90a3\u4e48\u5c31\u7ee7\u7eed\u8f6c\u79fb\u3002\u5176\u5b9e\u8fd9\u4e2a\u601d\u60f3\u633a\u6709\u610f\u601d\u7684\uff0c\u518d\u52a0\u4e0a\u8fd9\u7c7b\u9898\u7684\u601d\u60f3\u53c8\u548c\u6700\u5927\u5b50\u6bb5\u548c\u7684\u5206\u6cbb\u505a\u6cd5\u5f88\u76f8\u4f3c\uff0c\u6240\u4ee5\u2026\u2026\u5c31\u6ca1\u6709\u6240\u4ee5\u5566\uff01\u81f3\u5c11\u5f97\u719f\u7ec3\u8fd9\u79cd\u505a\u6cd5\u5427\uff0c\u6bd5\u7adf\u7528\u4e86\u8fd9\u79cd\u601d\u60f3\u7684\u7ebf\u6bb5\u6811\u9898\u8fd8\u662f\u5f88\u591a\u7684\uff08\u6d1b\u8c37\u4e5f\u8fd8\u6709\u53ea\u4e0d\u8fc7\u6211\u5fd8\u4e86\u5728\u54ea\u91cc\u2026\u2026\uff09  \n# \u6b63\u9898  \n\u9996\u5148\u8f6c\u4eba\u8a00\uff0c\u9898\u76ee\u662f\u8981\u8ba9\u6211\u4eec\u641e\u4e00\u4e2a\u7ef4\u62a4\u6700\u5927\u4e0d\u8fde\u7eed01\u7684\u8fde\u7eed\u5b50\u4e32\u3002  \n\u6211\u4eec\u8981\u7ef4\u62a4\u7684\u4e1c\u897f\u6211\u7f57\u5217\u4e00\u4e0b\n```cpp\n\u4e00\u3001\u4e00\u4e2a\u533a\u95f4\u7684\u6700\u592701\u8fde\u7eed\u5b50\u4e32\n\u4e8c\u3001\u4e00\u4e2a\u533a\u95f4\u7684\u524d\u7f00\u6700\u592701\u8fde\u7eed\u5b50\u4e32\n\u4e09\u3001\u4e00\u4e2a\u533a\u95f4\u7684\u540e\u7f00\u6700\u592701\u8fde\u7eed\u5b50\u4e32\n\u56db\u3001\u4e00\u4e2a\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u3001\u53f3\u7aef\u70b9\u3001\u603b\u957f\n```  \n\u5bf9\u4e8e\u56db\uff0c\u6211\u4eec\u53ea\u8981\u5728update\u7684\u65f6\u5019\u7ed9push_up\u91cc\u9762\u52a0\u4e2al,r\u53c2\u6570\u5c31\u597d\u4e86\u6ca1\u5fc5\u8981\u5355\u72ec\u5f00\u4e2a\u6570\u7ec4\u5565\u7684\u53bb\u7ef4\u62a4\u3002\uff08\u4e0d\u8fc7\u4f60\u8fd9\u6837\u505a\u4e5f\u65e0\u59a8\uff0c\u53cd\u6b63\u7ebf\u6bb5\u6811\u7684\u5927\u90e8\u5206\u9898\u4e5f\u4e0d\u4f1a\u523b\u610f\u5361\u4f60\u7a7a\u95f4\uff09  \n\u5bf9\u4e8e\u4e8c\u3001\u4e09\u6211\u4eec\u8981\u5206\u7c7b\u8ba8\u8bba\uff1a\n```cpp  \n\u4e00\u3001\u5de6\u53f3\u533a\u95f4\u4e0d\u80fd\u5408\u5e76\uff1a  \n\u90a3\u4e48\u6211\u4eec\u8be5\u533a\u95f4\u7684\u524d\u7f00\u6700\u592701\u8fde\u7eed\u5b50\u4e32\u4e0d\u5c31\u662f\u5de6\u533a\u95f4\u7684\u524d\u7f00\u6700\u592701\u8fde\u7eed\u5b50\u4e32\uff1f\u8be5\u533a\u95f4\u7684\u540e\u7f00\u6700\u592701\u8fde\u7eed\u5b50\u4e32\u4e0d\u5c31\u662f\u53f3\u533a\u95f4\u7684\u540e\u7f00\u6700\u592701\u8fde\u7eed\u5b50\u4e32\uff1f\u56e0\u4e3a\u4f60\u6ca1\u6709\u65b0\u7684\u53ef\u4ee5\u5408\u5e76\u7684\u65b9\u6cd5\u4ea7\u751f\u5bf9\u5427\uff0c\u76f8\u5f53\u4e8e\u5de6\u8fb9\u8fd8\u662f\u5de6\u8fb9\u53f3\u8fb9\u8fd8\u662f\u53f3\u8fb9\uff0c\u6211\u5373\u4f7f\u5408\u5e76\u4e86\u4e5f\u4e92\u4e0d\u5f71\u54cd\uff1b  \n\u4e8c\u3001\u5de6\u53f3\u533a\u95f4\u53ef\u4ee5\u5408\u5e76\uff1a\n\u8fd9\u65f6\u5019\u5c31\u9700\u8981\u7ec6\u5fc3\u4e00\u70b9\uff0c\u5047\u5982\u5de6\u533a\u95f4\u7684\u6700\u592701\u5b50\u4e32\u5c31\u662f\u4ed6\u672c\u8eab\u7684\u957f\u5ea6\uff0c\u6362\u53e5\u8bdd\u8bf4\u5c31\u662f\u8fd9\u4e2a\u533a\u95f4\u5f88\u7ed9\u529b\u76f4\u63a5\u5c31\u628a\u4ed6\u81ea\u5df1\u5168\u90e8\u62ff\u51fa\u6765\u8d21\u732e\u7ed9\u7b54\u6848\u4e86\uff0c\u8fd9\u65f6\u7531\u4e8e\u5408\u5e76\u4e86\u6211\u4eec\u5c31\u8981\u8003\u8651\u53f3\u533a\u95f4\u3002\u73b0\u5728\u53f3\u533a\u95f4\u4e0d\u662f\u4e5f\u53ef\u4ee5\u5408\u5e76\u4e86\u5417\uff1f\u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u52a0\u4e0a\u6709\u533a\u95f4\u7684\u524d\u7f00\u6700\u592701\u8fde\u7eed\u5b50\u4e32\u5c31\u884c\u4e86\u3002\u540e\u7f00\u4e5f\u662f\u540c\u7406\u3002\n```\n\u5bf9\u4e8e\u4e00\u4e5f\u662f\u7c7b\u4f3c\u7684\u5206\u7c7b\u8ba8\u8bba\uff1a\n```cpp\n\u4e00\u3001\u5de6\u53f3\u533a\u95f4\u4e0d\u80fd\u5408\u5e76\uff1a  \n\u65e2\u7136\u4e0d\u80fd\u5408\u5e76\u7684\u8bdd\u90a3\u8fd8\u7ba1\u5565\uff1f\u6211\u4eec\u76f4\u63a5\u628a\u5de6\u53f3\u533a\u95f4\u91cc\u9762\u6700\u592701\u8fde\u7eed\u5b50\u4e32\u957f\u7684\u90a3\u4e2a\u7ed9\u8d4b\u503c\u8fc7\u53bb\u4e0d\u5c31\u5b8c\u4e86\uff1f\u4f60\u53c8\u4e0d\u80fd\u4ea7\u751f\u65b0\u7684\u65b9\u6cd5\u6211\u9e1f\u4f60\u6709\u4f55\u7528\uff1f  \n\u4e8c\u3001\u5de6\u53f3\u533a\u95f4\u53ef\u4ee5\u5408\u5e76\uff1a  \n\u8fd9\u65f6\u5019\u6211\u4eec\u601d\u8003\uff1a\u4e24\u4e2a\u533a\u95f4\u5408\u5e76\u5230\u5e95\u6539\u53d8\u7684\u662f\u4ec0\u4e48\uff1f\u5176\u5b9e\u5c31\u662f\u4ed6\u4eec\u7684\u9996\u5c3e\u76f8\u8fde\uff0c\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u5de6\u533a\u95f4\u7684\u6700\u5927\u540e\u7f00\u548c\u53f3\u533a\u95f4\u7684\u6700\u5927\u524d\u7f00\uff0c\u8fd9\u4e24\u4e2a\u65e2\u7136\u80fd\u5408\u5e76\u90a3\u8fd8\u7b49\u5565\uff1f\u8d76\u7d27\u5224\u65ad\u4e00\u6ce2max\u3002\n```\n~~\u8bb2\u7684\u8c8c\u4f3c\u6709\u70b9\u53e3\u6c34\u8bdd\u4e0d\u8fc7\u6211\u4e2a\u4eba\u611f\u89c9\u633a\u8be6\u7ec6\u7684~~  \n# \u9644\u4e0apush_up\u4ee3\u7801\uff1a\n```cpp\nvoid push_up(int p,int l,int r)\n{\n\tint mid = (l + r) >> 1;//\u6c42\u5de6\u513f\u5b50\u7684\u53f3\u7aef\u70b9\uff0c\u63a8\u4e4b\u5219mid + 1\u662f\u53f3\u513f\u5b50\u7684\u5de6\u7aef\u70b9\u5bf9\u5427 \n\tint L = (mid - l + 1),R = r - mid;//\u5de6\u5b69\u5b50\u7684\u957f\u3001\u53f3\u5b69\u5b50\u7684\u957f \n\tlsum[p] = lsum[ls(p)],rsum[p] = rsum[rs(p)],sum[p] = max(sum[ls(p)],sum[rs(p)]);//\u6211\u4eec\u5148\u5168\u90e8\u90fd\u4ece\u5de6\u53f3\u5b69\u5b50\u8eab\u4e0a\u6252\u4ed6\u4eec\u7684\u6700\u503c\uff0c\u4fdd\u8bc1\u6211\u4eec\u64cd\u4f5c\u7684\u6b63\u786e\u6027 \n\tif(a[mid] != a[mid + 1])//\u8003\u8651\u8fde\u63a5\u60c5\u51b5 \n\t{\n\t\tsum[p] = max(sum[p],rsum[ls(p)] + lsum[rs(p)]);//\u7ef4\u62a4\u6700\u5927\u503c\uff0c\u8fd9\u4e2a\u5e94\u8be5\u90fd\u770b\u7684\u61c2\u5427 \n\t\tif(sum[ls(p)] == L) lsum[p] = L + lsum[rs(p)];//\u5982\u679c\u7b49\u4e8e\u4e86\u5de6\u5b69\u5b50\u7684\u957f\u5ea6\uff0c\u5219\u8bf4\u660e\u6211\u4eec\u5927\u533a\u95f4\u7684max\u524d\u7f0001\u9700\u8981\u66f4\u5927\u7684\u7a7a\u95f4\uff0c\u90a3\u5c31\u4ece\u53f3\u513f\u5b50\u90a3\u91cc\u6252\u4ed6\u7684max\u524d\u7f0001 \n\t\tif(sum[rs(p)] == R) rsum[p] = R + rsum[ls(p)];//\u5982\u679c\u7b49\u4e8e\u4e86\u53f3\u5b69\u5b50\u7684\u957f\u5ea6\t\u5219\u8bf4\u660e\u6211\u4eec\u5927\u533a\u95f4\u7684max\u540e\u7f0001\u9700\u8981\u66f4\u5927\u7684\u7a7a\u95f4\uff0c\u90a3\u5c31\u4ece\u5de6\u513f\u5b50\u90a3\u91cc\u6252\u4ed6\u7684max\u540e\u7f0001 \n\t} \n}\n```\n\u5176\u4ed6\u7684\u51fd\u6570\u5176\u5b9e\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u8981\u662f\u8fd9\u90fd\u641e\u4e0d\u61c2\u8bf4\u660e\u4f60\u8fde\u7ebf\u6bb5\u6811\u6700\u57fa\u672c\u7684\u4e00\u4e9b\u4e1c\u897f\u90fd\u662f\u6ca1\u641e\u61c2\u2026\u2026\u5f53\u7136\u4e5f\u4e0d\u662f\u8bf4\u4f60\u6487\uff0c\u81f3\u5c11\u4e5f\u8981\u5148\u641e\u61c2\u539f\u7406\u4f60\u518d\u6765\u505a\u9898\u2026\u2026\u5427\uff1f  \n# \u9644\u4e0a\u4ee3\u7801~~\u4f9b\u5404\u4f4d\u62cd\u62cd?~~\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\nusing namespace std;\nconst int Len = 3e5 + 5;\nint n,m,opt,a[Len],sum[Len << 2],lsum[Len << 2],rsum[Len << 2];//\u5206\u522b\u5bf9\u5e94\u4e00\u4e2a\u533a\u95f4\u7684\u6700\u592701\u8fde\u7eed\u5b50\u4e32\uff0c\u4e00\u4e2a\u533a\u95f4\u524d\u7f00\u6700\u592701\u8fde\u7eed\u5b50\u4e32\u3001\u4e00\u4e2a\u533a\u95f4\u540e\u7f00\u6700\u592701\u8fde\u7eed\u5b50\u4e32 \nint ls(int x){return x << 1;}\nint rs(int x){return x << 1 | 1;}//\u61d2\u5f97\u6253<<1\u4e86\u2026\u2026 \nvoid push_up(int p,int l,int r)\n{\n\tint mid = (l + r) >> 1;//\u6c42\u5de6\u513f\u5b50\u7684\u53f3\u7aef\u70b9\uff0c\u63a8\u4e4b\u5219mid + 1\u662f\u53f3\u513f\u5b50\u7684\u5de6\u7aef\u70b9\u5bf9\u5427 \n\tint L = (mid - l + 1),R = r - mid;//\u5de6\u5b69\u5b50\u7684\u957f\u3001\u53f3\u5b69\u5b50\u7684\u957f \n\tlsum[p] = lsum[ls(p)],rsum[p] = rsum[rs(p)],sum[p] = max(sum[ls(p)],sum[rs(p)]);//\u6211\u4eec\u5148\u5168\u90e8\u90fd\u4ece\u5de6\u53f3\u5b69\u5b50\u8eab\u4e0a\u6252\u4ed6\u4eec\u7684\u6700\u503c\uff0c\u4fdd\u8bc1\u6211\u4eec\u64cd\u4f5c\u7684\u6b63\u786e\u6027 \n\tif(a[mid] != a[mid + 1])//\u8003\u8651\u8fde\u63a5\u60c5\u51b5 \n\t{\n\t\tsum[p] = max(sum[p],rsum[ls(p)] + lsum[rs(p)]);//\u7ef4\u62a4\u6700\u5927\u503c\uff0c\u8fd9\u4e2a\u5e94\u8be5\u90fd\u770b\u7684\u61c2\u5427 \n\t\tif(sum[ls(p)] == L) lsum[p] = L + lsum[rs(p)];//\u5982\u679c\u7b49\u4e8e\u4e86\u5de6\u5b69\u5b50\u7684\u957f\u5ea6\uff0c\u5219\u8bf4\u660e\u6211\u4eec\u5927\u533a\u95f4\u7684max\u524d\u7f0001\u9700\u8981\u66f4\u5927\u7684\u7a7a\u95f4\uff0c\u90a3\u5c31\u4ece\u53f3\u513f\u5b50\u90a3\u91cc\u6252\u4ed6\u7684max\u524d\u7f0001 \n\t\tif(sum[rs(p)] == R) rsum[p] = R + rsum[ls(p)];//\u5982\u679c\u7b49\u4e8e\u4e86\u53f3\u5b69\u5b50\u7684\u957f\u5ea6\t\u5219\u8bf4\u660e\u6211\u4eec\u5927\u533a\u95f4\u7684max\u540e\u7f0001\u9700\u8981\u66f4\u5927\u7684\u7a7a\u95f4\uff0c\u90a3\u5c31\u4ece\u5de6\u513f\u5b50\u90a3\u91cc\u6252\u4ed6\u7684max\u540e\u7f0001 \n\t} \n}\nvoid build(int p,int l,int r)\n{\n\tsum[p] = lsum[p] = rsum[p] = 1;//\u8d4b\u521d\u59cb\u503c\uff0c\u522b\u5fd8\u4e86\u4e09\u4e2a\u90fd\u8981\u8d4b\u503c\u2026\u2026 \n\tif(l == r) return;//\u9012\u5f52\u7ed3\u675f \n\tint mid = (l + r) >> 1;\n\tbuild(ls(p),l,mid);\n\tbuild(rs(p),mid + 1,r);\n\tpush_up(p,l,r);//\u57fa\u672c\u5efa\u6811\u64cd\u4f5c^ \n}\nvoid update(int p,int l,int r,int idx)\n{\n\tif(l == r && l == idx){a[l] ^= 1;return;}//\u627e\u5230\u4e86\u9700\u8981\u66f4\u6539\u7684\u8282\u70b9 \n\tint mid = (l + r) >> 1; \n\tif(idx <= mid) update(ls(p),l,mid,idx);\n\telse update(rs(p),mid + 1,r,idx);//\u7c7b\u4f3c\u4e8e\u6298\u534a\u67e5\u627e\u64cd\u4f5c\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u4e8c\u5206\u91cc\u9762\u7684\u627e\u6570\u90a3\u64cd\u4f5c \n\tpush_up(p,l,r);\n} \nint query(){return sum[1];}//\u76f4\u63a5return\u6700\u5927\u533a\u95f4\u7684sum\u503c\u5c31\u597d\u4e86 \nint main()\n{\n\tscanf(\"%d %d\",&n,&m);\n\tbuild(1,1,n);//\u522b\u5fd8\u4e86\u5efa\u6811 \n\twhile(m --)\n\t{\n\t\tscanf(\"%d\",&opt);\n\t\tupdate(1,1,n,opt);\n\t\tprintf(\"%d\\n\",query());\n\t}\n\treturn 0;\n}//\u5b8c\u7ed3\u6492\u82b1\uff01\uff01\uff01\n```\n# \u5b8c\u7ed3\u6492\u82b1\uff01\uff01\uff01",
        "postTime": 1589126047,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "P6492 [COCI2010-2011#6] STEP \u9898\u89e3[\u7ebf\u6bb5\u6811\u5de6\u53f3\u524d\u7f00\u533a\u95f4\u7ef4\u62a4\u6a21\u677f]"
    },
    {
        "content": "## \u3010\u7ebf\u6bb5\u6811\u3011\u3010P6492\u3011 [COCI2010-2011#6] STEP\n\n### Analysis\n\n\u4e3a\u5565\u8fd8\u8981\u8f6c\u5316\u4e00\u6b65\u554a\u2026\u2026\u76f4\u63a5\u7ef4\u62a4\u5c31\u53ef\u4ee5\u2026\u2026\n\n\u65b9\u4fbf\u8d77\u89c1\uff0c\u7ea6\u5b9a `L` \u4e3a $0$\uff0c`R` \u4e3a $1$\u3002\n\n\u4e0e\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u5b50\u6bb5\u548c\u7684\u505a\u6cd5\u7c7b\u4f3c\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u533a\u95f4\u7ef4\u62a4\u524d\u7f00\u6700\u957f `01` \u4e32\u957f\u5ea6 $p$\uff0c\u540e\u7f00\u6700\u957f `01` \u4e32\u957f\u5ea6 $s$ \uff0c\u548c\u533a\u95f4\u5185\u6700\u957f `01` \u4e32\u957f\u5ea6 $v$\u3002pushup \u65f6\uff0c$p$ \u548c $s$ \u5206\u522b\u4ece\u5de6\u53f3\u5b69\u5b50\u8f6c\u79fb\u3002\u5982\u679c\u5de6\u5b69\u5b50\u7684\u53f3\u7aef\u70b9\u7684\u503c\u4e0e\u53f3\u5b69\u5b50\u5de6\u7aef\u70b9\u7684\u503c\u4e0d\u540c\uff0c\u8bf4\u660e\u4e2d\u95f4\u90e8\u5206\u53ef\u4ee5\u62fc\u8d77\u6765\uff0c\u7528\u62fc\u8d77\u6765\u7684\u957f\u5ea6\u66f4\u65b0\u4e00\u4e0b $v$ \u5373\u53ef\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\u5982\u679c\u5de6\uff08\u53f3\uff09\u5b69\u5b50\u672c\u8eab\u662f\u4e00\u4e2a\u8fde\u7eed $01$ \u4e32\uff0c\u5e76\u4e14\u4e24\u5b69\u5b50\u4e2d\u95f4\u90e8\u5206\u53ef\u4ee5\u62fc\u8d77\u6765\u7684\u8bdd\uff0c\u90a3\u4e48\u5411\u4e0a\u8f6c\u79fb\u7684 $p$\uff08$s$\uff09\u503c\u9700\u8981\u52a0\u4e0a\u53f3\uff08\u5de6\uff09\u5b69\u5b50\u7684 $s$\uff08$p$\uff09\u503c\u3002\u5177\u4f53\u53ef\u4ee5\u770b\u4ee3\u7801\u91cc\u7684 pushup \u90e8\u5206\u3002\n\n### Code\n\n```cpp\nnamespace Fusu {\n\nconst int maxn = 200005;\n\nint n, q;\nint a[maxn];\n\nstruct Node {\n  int l, r;\n  int lv, rv, vv;  //lv means (the length of) the longest prefix, rv means the longest suffix, vv means the longest substring of this range.\n  Node *ls, *rs;\n\n  inline void pushup() {\n    lv = ls->lv; rv = rs->rv;\n    if (a[ls->r] != a[rs->l]) {\n      if (ls->lv == (ls->r - ls->l + 1)) {\n        lv += rs->lv;\n      }\n      if (rs->rv == (rs->r - rs->l + 1)) {\n        rv += ls->rv;\n      }\n    }\n    vv = std::max({(a[ls->r] != a[rs->l]) ? ls->rv + rs->lv : 0, ls->vv, rs->vv});\n  }\n\n  void upd(const int x) {\n    if (l == r) return;\n    if (ls->r >= x) {\n      ls->upd(x);\n    } else {\n      rs->upd(x);\n    }\n    pushup();\n  }\n};\nNode Mem[maxn << 1], *pool = Mem;\nNode *New(const int l, const int r) {\n  auto u = pool++;\n  u->l = l; u->r = r;\n  if (l != r) {\n    int m = (l + r) >> 1;\n    u->ls = New(l, m);\n    u->rs = New(m + 1, r);\n    u->pushup();\n  } else {\n    u->lv = u->rv = u->vv = 1;\n  }\n  return u;\n}\n\nvoid Main() {\n  qr(n); qr(q);\n  auto rot = New(1, n);\n  for (int x; q; --q) {\n    qr(x);\n    a[x] ^= 1;\n    rot->upd(x);\n    qw(rot->vv, '\\n');\n  }\n}\n\n} // namespace Fusu\n```",
        "postTime": 1588923218,
        "uid": 65363,
        "name": "\u4e00\u6276\u82cf\u4e00",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6492 \u3010[COCI2010-2011#6] STEP\u3011"
    },
    {
        "content": "\u8fd9\u9897\u7ebf\u6bb5\u6811\u4e0a\u7684\u8282\u70b9\u5982\u679c\u53ea\u8bb0\u5f55\u533a\u95f4\u4e2d\u7684\u6700\u957f\u7684\u7b26\u5408\u6761\u4ef6\u7684\u533a\u95f4\u957f\u5ea6\u60f3\u5fc5\u662f\u65e0\u6cd5\u8f6c\u79fb\u7684,\u6240\u4ee5\u9700\u8981\u8bb0\u5f55\u4e00\u4e0b\u7684\u91cf:\n\n 1. \u5f53\u524d\u533a\u95f4\u6700\u5de6\u7aef\u5f00\u59cb\u7684\u6700\u957f\u7684\u7b26\u5408\u6761\u4ef6\u7684\u533a\u95f4\u7684\u957f\u5ea6\n 2. \u5f53\u524d\u533a\u95f4\u6700\u53f3\u7aef\u5f00\u59cb\u7684\u6700\u957f\u7684\u7b26\u5408\u6761\u4ef6\u7684\u533a\u95f4\u7684\u957f\u5ea6\n 3. \u5f53\u524d\u533a\u95f4\u4e2d\u6700\u957f\u7684\u7b26\u5408\u6761\u4ef6\u7684\u533a\u95f4\u7684\u957f\u5ea6\n 4. \u5f53\u524d\u533a\u95f4\u7684\u6700\u5de6\u8fb9\u7684\u6570\n 5. \u5f53\u524d\u533a\u95f4\u7684\u6700\u53f3\u8fb9\u7684\u6570\n 6. \u5f53\u524d\u533a\u95f4\u7684\u957f\u5ea6\n \n \u7136\u540e\u5c31\u53ef\u4ee5\u5408\u5e76\u4e86.\n \u4e0b\u9762\u662f\u51e0\u4e2a\u5408\u5e76\u65f6\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9:\n \n 1. \u6574\u68f5\u6811\u7684\u6700\u5de6\u7aef\u7684\u503c\u5c31\u662f\u5de6\u5b50\u6811\u7684\u6700\u5de6\u7aef\u7684\u503c(\u53f3\u8fb9\u540c\u7406)\n 2. \u6574\u68f5\u6811\u7684\u4e2d\u95f4\u7684\u6700\u957f\u5206\u7b26\u5408\u533a\u95f4\u4e3a\u5de6\u53f3\u5b50\u6811\u7684\u6700\u957f\u533a\u95f4\u4e2d\u7684\u5927\u503c,\u4f46\u5982\u679c\u5de6\u53f3\u533a\u95f4\u5728\u76f8\u8fde\u5904\u7684\u6570\u5b57\u4e0d\u540c,\u90a3\u4e48\u5de6\u5b50\u6811\u7684\u53f3\u8fb9\u53ef\u4ee5\u548c\u53f3\u5b50\u6811\u7684\u5de6\u8fb9\u76f8\u8fde,\u6240\u4ee5\u8fd8\u6709\u548c\u8fd9\u4e24\u4e2a\u6570\u76f8\u52a0\u7684\u6570\u53bb\u4e00\u4e2amax\n 3. \u6574\u9897\u5b50\u6811\u7684\u5982\u679c\u4ece\u5934\u5230\u5c3e\u90fd\u7b26\u5408\u65f6\u9700\u8981\u7279\u522b\u5904\u7406:\u5f53\u5de6\u53f3\u5b50\u6811\u53ef\u4ee5\u76f8\u8fde\u65f6\u6574\u9897\u6811\u7684\u5de6\u53f3\u6700\u5927\u503c\u4e0d\u80fd\u76f4\u63a5\u4ece\u5355\u4e00\u4e00\u68f5\u5b50\u6811\u4e2d\u83b7\u5f97,\u800c\u9700\u8981\u4e00\u68f5\u5b8c\u6574\u7684\u5b50\u6811\u52a0\u4e0a\u53e6\u4e00\u68f5\u5b50\u6811\u7684\u4e00\u90e8\u5206(\u4e5f\u53ef\u80fd\u662f\u5168\u90e8)\n```cpp\n\u5982:\n\u5de6\u5b50\u6811:1 0 1\n\u53f3\u5b50\u6811 0 0 1\n\u5982\u679c\u6ca1\u6709\u8fd9\u4e2a\u7279\u5224\u65f6\u90a3\u4e48\u6574\u9897\u6811\u7684\u5de6\u8fb9\u6700\u957f\u4e3a3\n\u4f46\u662f\u5982\u679c\u76f8\u8fde\u540e1 0 1 0 0 1,\u5de6\u8fb9\u6700\u957f\u4e3a4\n```\n\n\u4ee5\u4e0a\u5185\u5bb9\u53ef\u80fd\u6709\u70b9\u62bd\u8c61,\u5177\u4f53\u89c1\u4ee3\u7801.\n\n```cpp\n#include<bits/stdc++.h>\n#define rap(i,first,last) for(int i=first;i<=last;++i)\n#define Lson now*2\n#define Rson now*2+1\n#define Middle (left+right)/2\n#define Left Lson,left,Middle\n#define Right Rson,Middle+1,right\nusing namespace std;\nconst int maxN=1e5+7;\nstruct Tree//\u4fdd\u5b58\u6574\u68f5\u6811\n{\n\tint lmax,rmax,mmax,l,r,len;//\u5982\u4e0a\u6240\u793a\u7684\u9700\u8981\u4fdd\u7559\u7684\u503c\n}tree[maxN*4];\nint N,M;\nvoid PushUp(int now)\n{\n\ttree[now].lmax=tree[Lson].lmax;//\u5148\u76f4\u63a5\u5c06\u5b50\u6811\u7684\u5de6\u53f3\u6700\u957f\u8d4b\u503c\u5230\u6574\u9897\u6570\u4e2d\n\ttree[now].rmax=tree[Rson].rmax;\n\ttree[now].l=tree[Lson].l;//\u6574\u9897\u6811\u7684\u5de6\u53f3\u503c\n\ttree[now].r=tree[Rson].r;\n\ttree[now].mmax=max(tree[Lson].mmax,tree[Rson].mmax);//\u5148\u4ece\u5de6\u53f3\u5b50\u6811\u4e2d\u4e2d\u95f4\u7684\u6700\u957f\u7b26\u5408\u533a\u95f4\u4e2d\u53d6\u4e00\u4e2a\u6700\u5927\u7684\n\tif(tree[Lson].r!=tree[Rson].l)//\u5f53\u5de6\u53f3\u53ef\u4ee5\u76f8\u8fde\u65f6\n\t{\n\t\ttree[now].mmax=max(tree[now].mmax,tree[Lson].rmax+tree[Rson].lmax);//\u9700\u8981\u518d\u53d6\u4e00\u4e2a\u5927\u503c\n\t\tif(tree[Lson].mmax==tree[Lson].len)//\u5982\u4e0a\u6ce8\u610f3\n\t\t{\n\t\t\ttree[now].lmax=tree[Rson].lmax+tree[Lson].len;\n\t\t}\n\t\tif(tree[Rson].mmax==tree[Rson].len)\n\t\t{\n\t\t\ttree[now].rmax=tree[Lson].rmax+tree[Rson].len;\n\t\t}\n\t}\n}\nvoid Build(int now=1,int left=1,int right=N)//\u5efa\u6811,\u4e0d\u591a\u8bf4\n{\n\ttree[now].len=right-left+1;\n\tif(left==right)\n\t{\n\t\ttree[now].lmax=tree[now].rmax=1;\n\t\ttree[now].mmax=1;\n\t\ttree[now].l=tree[now].r=1;\n\t\treturn;\n\t}\n\tBuild(Left);\n\tBuild(Right);\n\tPushUp(now);\n}\nvoid UpData(int change,int now=1,int left=1,int right=N)//\u4fee\u6539,\u56e0\u4e3a\u53ea\u6709\u5355\u70b9\u4fee\u6539\u6240\u4ee5\u4e5f\u7528\u4e0d\u4e0a\u61d2\u6807\u8bb0,\u76f4\u63a5\u5c06\u8986\u76d6\u9700\u8981\u4fee\u6539\u4f4d\u7f6e\u7684\u6240\u6709\u533a\u95f4\u90fd\u4fee\u6539\u5c31\u597d\u4e86\n{\n\tif(left>change||right<change)return;\n\tif(left==right)//\u5230\u53f6\u8282\u70b9\u65f6\n\t{\n\t\ttree[now].l^=1;\n\t\ttree[now].r^=1;\n\t\treturn;\n\t}\n\tUpData(change,Left);\n\tUpData(change,Right);\n\tPushUp(now);//\u5408\u5e76\n}\nint Query()\n{\n\treturn max(tree[1].mmax,max(tree[1].lmax,tree[1].rmax));//\u5168\u5c40\u67e5\u627e,\u76f4\u63a5\u5728\u6574\u9897\u6811\u4e2d\u627e\u4e00\u4e2a\u6700\u957f\u7684\u9644\u548c\u6761\u4ef6\u65f6\u533a\u95f4\n}\nint main()\n{\n\tscanf(\"%d%d\",&N,&M);\n\tBuild();//\u5efa\u6811\n\tint change;\n\trap(i,1,M)\n\t{\n\t\tscanf(\"%d\",&change);\n\t\tUpData(change);//\u4fee\u6539\n\t\tprintf(\"%d\\n\",Query());//\u67e5\u8be2\n\t}\n\treturn 0;\n}\n```\n\n~~\u76f4\u63a5\u642cP2253\u7684\u9898\u89e3,\u4e0d\u8981\u5728\u610f\u6539\u4e86\u7801\u98ce~~",
        "postTime": 1588830558,
        "uid": 86625,
        "name": "Limit",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6492 \u3010[COCI2010-2011#6] STEP\u3011"
    },
    {
        "content": "### \u9898\u610f\r\n\r\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5b57\u7b26\u5e8f\u5217 $a$\uff0c\u521d\u59cb\u5168\u4e3a `L`\uff0c\u6709 $q$ \u6b21\u64cd\u4f5c\uff0c\u6bcf\u4e00\u6b21\u53ef\u4ee5\u5c06 `L` \u53d8\u4e3a `R` \u6216\u8005\u5c06 `R` \u53d8\u4e3a `L`\uff0c\u6bcf\u4e00\u6b21\u64cd\u4f5c\u540e\u6c42\u51fa\u6700\u957f\u4ea4\u9519\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u3002\r\n\r\n$\\texttt{Data Range:}1\\leq n,q\\leq 2\\times 10^5$\r\n\r\n### \u9898\u89e3\r\n\r\n\u8001\u5e74\u9009\u624b\u5927\u6982\u6bcf\u5929\u5c31\u53ea\u80fd\u505a\u505a\u8fd9\u79cd\u9898\u6df7\u6df7\u65e5\u5b50\u4e86\u5427\u3002\r\n\r\n\u6765\u70b9\u4e0d\u4e00\u6837\u7684\u89e3\u6cd5\u3002\r\n\r\n\u8003\u8651\u5c06 `L` \u8bb0\u4f5c $1$\uff0c`R` \u8bb0\u4f5c $0$\uff0c\u518d\u6784\u9020\u5e8f\u5217 $b_i=a_i\\operatorname{and}\\ (l_i\\operatorname{and}1)$\uff0c\u90a3\u4e48 $a$ \u4e2d\u4e00\u6bb5\u4ea4\u9519\u5b50\u5e8f\u5217\u5bf9\u5e94\u7740 $b$ \u4e2d\u4e00\u6bb5 $0$ \u6216\u662f\u4e00\u6bb5 $1$\uff0c\u90a3\u4e48\u53ea\u8981\u7ef4\u62a4\u4e00\u4e0b\u8fd9\u4e2a\u4e1c\u897f\u7684\u957f\u5ea6\u5c31\u597d\u4e86\u3002\r\n\r\n\u8fd9\u4e2a\u7684\u8bdd\u5c31\u662f\u8ddf GSS \u90a3\u4e2a\u4e1c\u897f\u4e00\u6837\u7684\uff0c\u552f\u4e00\u6709\u4e2a\u4e0d\u540c\u7684\u70b9\uff08\u4ee5\u7ef4\u62a4\u6700\u957f\u7684 $0$ \u524d\u7f00\u4e3a\u4f8b\uff09\u5c31\u662f\u5982\u679c\u53ea\u6709\u5de6\u5b50\u533a\u95f4\u5168\u4e3a $0$ \u7684\u65f6\u5019\u624d\u80fd\u8ba9\u53f3\u5b50\u533a\u95f4\u5e26\u6765\u8d21\u732e\u3002\r\n\r\n\u7ec6\u8282\u6709\u70b9\u591a\uff0c\u5efa\u8bae\u6c89\u4e0b\u5fc3\u6765\u505a\u3002\r\n\r\n### \u4ee3\u7801\r\n\r\n```cpp\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef int ll;\r\ntypedef long long int li;\r\nconst ll MAXN=2e5+51; \r\nstruct SegmentTree{\r\n\tll l,r,mx0,mx1,pr0,pr1,sf0,sf1,all0,all1;\r\n};\r\nSegmentTree tree[MAXN<<2];\r\nll n,qcnt;\r\ninline ll read()\r\n{\r\n    register ll num=0,neg=1;\r\n    register char ch=getchar();\r\n    while(!isdigit(ch)&&ch!='-')\r\n    {\r\n        ch=getchar();\r\n    }\r\n    if(ch=='-')\r\n    {\r\n        neg=-1;\r\n        ch=getchar();\r\n    }\r\n    while(isdigit(ch))\r\n    {\r\n        num=(num<<3)+(num<<1)+(ch-'0');\r\n        ch=getchar();\r\n    }\r\n    return num*neg;\r\n}\r\n#define ls node<<1\r\n#define rs (node<<1)|1\r\ninline void update(ll node)\r\n{\r\n\tll lenl=tree[ls].r-tree[ls].l+1,lenr=tree[rs].r-tree[rs].l+1;\r\n\ttree[node].mx0=max(tree[ls].mx0,tree[rs].mx0);\r\n\ttree[node].mx1=max(tree[ls].mx1,tree[rs].mx1);\r\n\ttree[node].pr0=tree[ls].pr0,tree[node].pr1=tree[ls].pr1;\r\n\ttree[node].sf0=tree[rs].sf0,tree[node].sf1=tree[rs].sf1;\r\n\ttree[node].all0=tree[ls].all0&tree[rs].all0;\r\n\ttree[node].all1=tree[ls].all1&tree[rs].all1;\r\n\ttree[ls].all0?tree[node].pr0=max(tree[node].pr0,lenl+tree[rs].pr0):1;\r\n\ttree[ls].all1?tree[node].pr1=max(tree[node].pr1,lenl+tree[rs].pr1):1;\r\n\ttree[rs].all0?tree[node].sf0=max(tree[node].sf0,lenr+tree[ls].sf0):1;\r\n\ttree[rs].all1?tree[node].sf1=max(tree[node].sf1,lenr+tree[ls].sf1):1;\r\n\ttree[node].mx0=max(tree[node].mx0,tree[ls].sf0+tree[rs].pr0);\r\n\ttree[node].mx1=max(tree[node].mx1,tree[ls].sf1+tree[rs].pr1);\r\n}\r\ninline void create(ll l,ll r,ll node)\r\n{\r\n\ttree[node]=(SegmentTree){l,r,0,0,0,0};\r\n\tif(l==r)\r\n\t{\r\n\t\tif(l&1)\r\n\t\t{\r\n\t\t\ttree[node].mx1=tree[node].pr1=tree[node].sf1=tree[node].all1=1;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\ttree[node].mx0=tree[node].pr0=tree[node].sf0=tree[node].all0=1;\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tll mid=(l+r)>>1;\r\n\tcreate(l,mid,ls),create(mid+1,r,rs),update(node);\r\n}\r\ninline void change(ll pos,ll node)\r\n{\r\n\tif(tree[node].l==tree[node].r)\r\n\t{\r\n\t\tif(tree[node].mx1)\r\n\t\t{\r\n\t\t\ttree[node].mx1=tree[node].pr1=tree[node].sf1=tree[node].all1=0;\r\n\t\t\ttree[node].mx0=tree[node].pr0=tree[node].sf0=tree[node].all0=1;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\ttree[node].mx0=tree[node].pr0=tree[node].sf0=tree[node].all0=0;\r\n\t\t\ttree[node].mx1=tree[node].pr1=tree[node].sf1=tree[node].all1=1;\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tll mid=(tree[node].l+tree[node].r)>>1;\r\n\tchange(pos,pos<=mid?ls:rs),update(node);\r\n}\r\nint main()\r\n{\r\n\tcreate(1,n=read(),1),qcnt=read();\r\n\tfor(register int i=0;i<qcnt;i++)\r\n\t{\r\n\t\tchange(read(),1),printf(\"%d\\n\",max(tree[1].mx0,tree[1].mx1));\t\r\n\t}\t\r\n}\r\n```",
        "postTime": 1599485368,
        "uid": 60990,
        "name": "Karry5307",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6492 \u3010[COCI2010-2011#6] STEP\u3011"
    },
    {
        "content": "$\\color{blue}{\\texttt{\u3010\u601d\u8def\u3011\uff1a}}$\n\n\u9996\u5148\uff0c\u6211\u4eec\u4e3a\u4e86\u65b9\u4fbf\u5904\u7406\uff0c\u628a `L` \u62bd\u8c61\u6210\u4e00\u4e2a\u6570\u5b57 $0$\uff0c\u540c\u7406\u628a `R` \u62bd\u8c61\u6210 $1$\u3002\n\n\u6570\u636e\u8303\u56f4\u63d0\u793a\u6211\u4eec\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(q \\times \\log n)$ \u7684\u7b97\u6cd5 ~~\uff08\u6216\u8005\u662f $O(n \\times \\log q)$\uff0c\u4f46\u662f\u5e94\u8be5\u6ca1\u6709\u4eba\u80fd\u628a\u8be2\u95ee\u7ed9 $\\log$ \u6389\uff09~~ \u3002\u60f3\u5230\u4e86\u4ec0\u4e48\uff1f\u5bf9\u6ef4\uff0c\u7ebf\u6bb5\u6811\uff01\n\n\u7ebf\u6bb5\u6811\u7684\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u64cd\u4f5c\u5c31\u662f `pushup` \u64cd\u4f5c\uff0c\u4e5f\u5c31\u662f\u6807\u8bb0\u5408\u5e76\u64cd\u4f5c\u3002\u6211\u4eec\u8003\u8651\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e2a `pushup` \u64cd\u4f5c\u3002\n\n\u8bb0 $sum_o$ \u4e3a\u7ebf\u6bb5\u6811\u4e0a $o$ \u53f7\u8282\u70b9\u6240\u8868\u793a\u533a\u95f4\u6700\u957f\u7684\u6ee1\u8db3\u8981\u6c42\u7684\u5b57\u7b26\u4e32\u3002\u6211\u4eec\u8003\u8651 $sum_o$ \u80fd\u53d6\u5230\u4ec0\u4e48\u503c\uff1a\n\n- \u4e00\u79cd\u6bd4\u8f83\u663e\u7136\u7684\u662f\u5de6\u53f3\u513f\u5b50\u7684 $sum$ \u503c\u7684\u8f83\u5927\u503c\u3002\n- \u8fd8\u6709\u4e00\u79cd\u5c31\u662f\u5de6\u513f\u5b50\u7684\u7ed3\u5c3e\u548c\u53f3\u513f\u5b50\u7684\u5f00\u5934\u5408\u5e76\uff0c\u4ea7\u751f\u4e86\u4e00\u4e2a\u65b0\u7684\u6ee1\u8db3\u8981\u6c42\u7684\u5b57\u7b26\u4e32\u3002\n\n\u7b2c\u4e00\u4e2a\u975e\u5e38\u597d\u7ef4\u62a4\uff0c\u91cd\u70b9\u5728\u4e8e\u7b2c\u4e8c\u4e2a\u3002\u5982\u4f55\u65b9\u4fbf\u800c\u5feb\u6377\u5730\u6c42\u51fa\u7b2c\u4e8c\u79cd\u60c5\u51b5\u7684\u89e3\u5462\uff1f\n\n\u663e\u7136\uff0c\u5355\u72ec\u4e00\u4e2a $sum$ \u4e0d\u80fd\u7ef4\u62a4\u7b2c\u4e8c\u79cd\u60c5\u51b5\u3002\u6211\u4eec\u8003\u8651\u591a\u5f15\u5165\u51e0\u4e2a\u53d8\u91cf\uff1a\n\n- $le_o$\uff1a\u8282\u70b9 $o$ \u6240\u8868\u793a\u533a\u95f4\u7684\u6700\u5de6\u8fb9\u7684\u5b57\u7b26\u3002\n- $ri_o$\uff1a\u8282\u70b9 $o$ \u6240\u8868\u793a\u533a\u95f4\u7684\u6700\u53f3\u8fb9\u7684\u5b57\u7b26\u3002\n- $al_o$\uff1a\u8282\u70b9 $o$ \u6240\u8868\u793a\u533a\u95f4\u7684\u6700\u957f\u6ee1\u8db3\u6761\u4ef6\u7684\u524d\u7f00\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002\n- $ar_o$\uff1a\u8282\u70b9 $o$ \u6240\u8868\u793a\u533a\u95f4\u7684\u6700\u957f\u6ee1\u8db3\u6761\u4ef6\u7684\u540e\u7f00\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002\n\n\u5b83\u4eec\u6709\u4ec0\u4e48\u7528\uff1f\u663e\u7136\uff0c\u524d\u4e24\u4e2a\u503c\u53ef\u4ee5\u65b9\u4fbf\u7684\u544a\u8bc9\u6211\u4eec\u7b2c\u4e8c\u79cd\u60c5\u51b5\u662f\u5426\u5b58\u5728\uff08\u5982\u679c\u5de6\u513f\u5b50\u7684 $ri$ \u503c $\\neq$ \u53f3\u513f\u5b50\u7684 $le$ \u503c\u5219\u6709\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u5426\u5219\u6ca1\u6709\uff09\u3002\n\n\u540e\u4e24\u4e2a\u5462\uff1f\u4e5f\u5f88\u663e\u7136\uff0c\u5f53\u6709\u7b2c\u4e8c\u79cd\u60c5\u51b5\u65f6\uff0c\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4e2d\u7684\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u5c31\u662f\u5de6\u513f\u5b50\u7684 $ar+$ \u53f3\u513f\u5b50\u7684 $al$ \u503c\u3002\n\n\u5230\u8fd9\u91cc\uff0c\u6211\u4eec\u4fbf\u53ef\u4ee5 $O(1)$ \u5b8c\u6210 `pushup` \u64cd\u4f5c\u4e86\u3002\n\n$\\color{blue}{\\texttt{\u3010\u4ee3\u7801\u3011\uff1a}}$\n\n```cpp\nconst int N=2e5+100,M=N<<2;\nint sum[M],le[M],ri[M],al[M],ar[M],len[M];\ninline void pushup(int o){\n\tif (ri[o<<1]!=le[o<<1|1]){\n\t\tsum[o]=ar[o<<1]+al[o<<1|1];\n\t\tsum[o]=max(sum[o],sum[o<<1]);\n\t\tsum[o]=max(sum[o],sum[o<<1|1]);\n\t}\n\telse sum[o]=max(sum[o<<1],sum[o<<1|1]);\n\tle[o]=le[o<<1];ri[o]=ri[o<<1|1];\n\tif (al[o<<1]==len[o<<1]&&ri[o<<1]!=le[o<<1|1])\n\t\tal[o]=al[o<<1]+al[o<<1|1];//\u7279\u6b8a\u60c5\u51b5 \n\telse al[o]=al[o<<1];//\u5426\u5219\u76f4\u63a5\u7ee7\u627f\u5de6\u513f\u5b50 \n\tif (ar[o<<1|1]==len[o<<1|1]&&le[o<<1|1]!=ri[o<<1])\n\t\tar[o]=ar[o<<1|1]+ar[o<<1];//\u4e00\u5207\u540c\u4e0a \n\telse ar[o]=ar[o<<1|1];//\u53ea\u662f\u53d8\u6210\u4e86\u53f3\u513f\u5b50 \n}//\u4e0d\u80fd\u7406\u89e3\uff1f\u4e0d\u59a8\u753b\u4e2a\u56fe\u8bd5\u8bd5\u770b~\ninline void init_node(int o,int t){\n\tsum[o]=al[o]=ar[o]=1;le[o]=ri[o]=t;\n}\nvoid build(int o,int l,int r){\n\tlen[o]=r-l+1;//\u533a\u95f4\u957f\u5ea6 \n\tif (l==r){//\u5230\u8fbe\u53f6\u8282\u70b9 \n\t\tinit_node(o,0);\n\t\treturn;\n\t}\n\tregister int mid=(l+r)>>1;\n\tbuild(o<<1,l,mid);\n\tbuild(o<<1|1,mid+1,r);\n\tpushup(o);return;\n}\nvoid updata(int o,int l,int r,int p){\n\tif (l==r){\n\t\tinit_node(o,!le[o]);\n\t\treturn;\n\t}\n\tregister int mid=(l+r)>>1;\n\tif (p<=mid) updata(o<<1,l,mid,p);\n\telse updata(o<<1|1,mid+1,r,p);\n\tpushup(o);return;\n}\nint main(){\n\tint n=read(),m=read();\n\tbuild(1,1,n);//\u5efa\u6811 \n\tfor(int i=1;i<=m;i++){\n\t\tregister int x=read();\n\t\tupdata(1,1,n,x);//\u4fee\u6539 \n\t\tprintf(\"%d\\n\",sum[1]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1589609167,
        "uid": 95624,
        "name": "HPXXZYY",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6492 \u3010[COCI2010-2011#6] STEP\u3011"
    },
    {
        "content": "\u6bd4\u8f83\u6a21\u677f\u7684\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u4fe1\u606f\n\n\u5982\u679c\u5bf9\u8fd9\u4e2a\u95ee\u9898\u4e0d\u662f\u5f88\u719f\u6089\u7684\u540c\u5b66\u53ef\u4ee5\u53bb\u770b\u4e00\u4e0b[\u8fd9\u9053\u9898](https://www.luogu.com.cn/problem/SP1043) \u6216\u8005\u662f can you answer these question \u7cfb\u5217\u7684\u9898\u76ee\uff0c\u90fd\u662f\u5173\u4e8e\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u5404\u79cd\u503c\u7684\u9898\u76ee\n\n## \u6b63\u7bc7\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u533a\u95f4\uff0c\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u8fd9\u4e2a\u533a\u95f4\u7684\n \n1. \u5de6\u7aef\u70b9\u503c\n\n2. \u53f3\u7aef\u70b9\u503c\n\n3. \u5de6\u8fb9\u5f00\u59cb\u7684\u6700\u5927\u957f\u5ea6\n\n4. \u53f3\u8fb9\u5f00\u59cb\u7684\u6700\u5927\u957f\u5ea6\n\n5. \u533a\u95f4\u957f\u5ea6\n\n6. \u533a\u95f4\u6700\u957f\u7684\u7b26\u5408\u8981\u6c42\u7684s\u4e32\n\n\u8fd9\u9053\u9898\u7684\u96be\u70b9\u5728\u4e8epushup\u51fd\u6570\u8be5\u600e\u4e48\u5199\u3002\u6211\u4eec\u53ef\u4ee5\u5148\u6309\u90e8\u5c31\u73ed\u5730\u66f4\u65b0\u4e00\u4e0b\uff0c\u7136\u540e\u518d\u6839\u636e\u6211\u4eec\u5408\u5e76\u7684\u4e24\u4e2a\u533a\u95f4\u76f8\u8fde\u63a5\u5904\u7684\u503c\u6765\u8fdb\u884c\u8fdb\u4e00\u6b65\u5730\u5224\u5b9a\u3002\n\u66f4\u52a0\u51c6\u786e\u7684\u8bf4\uff0c\u5c31\u662f\u5982\u679c\u76f8\u8fde\u5904\u7684\u503c\u76f8\u7b49\u5c31\u6ca1\u6709\u540e\u7eed\u4e86\uff0c\u5982\u679c\u4e0d\u76f8\u7b49\u5c31\u53ef\u4ee5\u7ee7\u7eed\u66f4\u65b0\uff0c\u66f4\u65b0\u7684\u7ec6\u8282\u5728\u4ee3\u7801\u91cc\u9762\u53ef\u4ee5\u81ea\u5df1\u770b\u4e00\u4e0b\n\n\u5269\u4e0b\u7684\u5c31\u662f\u4e00\u4e2a\u5f88\u666e\u901a\u7684\u7ebf\u6bb5\u6811\u4e86\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn=200005;\nstruct node{\n\tint lv,rv,lenl,lenr,sum,len;\n}t[maxn<<2];\nint n,m;\nvoid pushup(int pos){\n\tt[pos].lv=t[pos<<1].lv;\n\tt[pos].rv=t[pos<<1|1].rv;\n\tt[pos].lenl=t[pos<<1].lenl;\n\tt[pos].lenr=t[pos<<1|1].lenr;\n\tt[pos].sum=max(t[pos<<1].sum,t[pos<<1|1].sum);\n\tif(t[pos<<1].rv!=t[pos<<1|1].lv){\n\t\tt[pos].sum=max(t[pos].sum,t[pos<<1].lenr+t[pos<<1|1].lenl);\n\t\tif(t[pos<<1].sum==t[pos<<1].len){\n\t\t\tt[pos].lenl=t[pos<<1].sum+t[pos<<1|1].lenl;\n\t\t}\n\t\tif(t[pos<<1|1].sum==t[pos<<1|1].len){\n\t\t\tt[pos].lenr=t[pos<<1|1].sum+t[pos<<1].lenr;\n\t\t}\n\t}\n}\nvoid build(int l,int r,int pos){\n\tt[pos].len=(r-l+1);\n\tif(l==r){\n\t\tt[pos].lv=t[pos].rv=1;\n\t\tt[pos].lenl=t[pos].lenr=1;\n\t\tt[pos].sum=1;\n\t\treturn;\n\t}\n\tint mid=(l+r)/2;\n\tbuild(l,mid,pos<<1);\n\tbuild(mid+1,r,pos<<1|1);\n\tpushup(pos);\n}\nvoid change(int x,int l,int r,int pos){\n\tif(l==r){\n\t\tt[pos].lv^=1;\n\t\tt[pos].rv=t[pos].lv;\n\t\treturn;\n\t}\n\tint mid=(l+r)/2;\n\tif(x<=mid) change(x,l,mid,pos<<1);\n\tif(x>mid) change(x,mid+1,r,pos<<1|1);\n\tpushup(pos);\n}\nint main(void){\n\tscanf(\"%d %d\",&n,&m);\n\tbuild(1,n,1);\n\tint x;\n\twhile(m--){\n\t\tscanf(\"%d\",&x);\n\t\tchange(x,1,n,1);\n\t\tprintf(\"%d\\n\",max(t[1].sum,max(t[1].lenl,t[1].lenr)));\n\t}\n}\n```\n",
        "postTime": 1595422504,
        "uid": 109266,
        "name": "Michael_Kong",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6492 \u3010[COCI2010-2011#6] STEP\u3011"
    },
    {
        "content": "\u6c34\u70b9\u793e\u533a\u8d21\u732e\u3002\n### \u9898\u76ee\n[P6492 [COCI2010-2011#6] STEP](https://www.luogu.com.cn/problem/P6492)\n### \u601d\u8def\n\u7ebf\u6bb5\u6811\u3002\u5148\u660e\u786e\u7ebf\u6bb5\u6811\u8981\u7ef4\u62a4\u4ec0\u4e48\u4fe1\u606f\u3002\n\n\u4e00\u4e2a\u533a\u95f4\u7684\u6700\u957f\u7684\u7b26\u5408\u8981\u6c42\u7684\u5e8f\u5217\u6709\u4ee5\u4e0b\u51e0\u79cd\u53ef\u80fd\n\n* \u8be5\u533a\u95f4\u7684\u5de6\u5b50\u533a\u95f4\u7684\u6700\u53f3\u8fb9\u7684\u5143\u7d20\u7b49\u4e8e\u53f3\u5b50\u533a\u95f4\u7684\u6700\u5de6\u8fb9\u7684\u5143\u7d20\uff0c\u5373\u4e24\u4e2a\u533a\u95f4\u65e0\u6cd5\u5408\u5e76\uff0c\u90a3\u4e48\u8be5\u533a\u95f4\u7684\u7b54\u6848\u4e3a\u5de6\u5b50\u533a\u95f4\u548c\u53f3\u5b50\u533a\u95f4\u4e2d\u6700\u5927\u7684\u3002\n* \u4e24\u4e2a\u533a\u95f4\u53ef\u4ee5\u5408\u5e76\uff0c\u90a3\u4e48\u8be5\u533a\u95f4\u7684\u7b54\u6848\u4e3a\u5de6\u5b50\u533a\u95f4\u3001\u53f3\u5b50\u533a\u95f4\u3001\u5de6\u5b50\u533a\u95f4\u4ece\u6700\u53f3\u8fb9\u5f00\u59cb\u7684\u7b54\u6848\u52a0\u4e0a\u53f3\u5b50\u533a\u95f4\u4ece\u6700\u5de6\u8fb9\u5f00\u59cb\u7684\u7b54\u6848\u4e2d\u7684\u6700\u5927\u503c\u3002\n\n\u6240\u4ee5\u6211\u4eec\u7684\u7ebf\u6bb5\u6811\u8981\u7ef4\u62a4\u533a\u95f4\u7684\u7b54\u6848\uff0c\u533a\u95f4\u7684\u6700\u5de6\u8fb9\u7684\u5143\u7d20\uff0c\u533a\u95f4\u7684\u6700\u53f3\u8fb9\u7684\u5143\u7d20\uff0c\u533a\u95f4\u4ece\u6700\u5de6\u8fb9\u5f00\u59cb\u7684\u7b54\u6848\uff0c\u533a\u95f4\u4ece\u6700\u53f3\u8fb9\u5f00\u59cb\u7684\u7b54\u6848\u3002\n\n### Code\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<string>\n#include<iostream>\n#include<algorithm>\n#define MAXN 200001\n#define lson now<<1\n#define rson now<<1|1\n\ninline void read(int &T) {\n\tint x=0;bool f=0;char c=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-')f=!f;c=getchar();}\n\twhile(c>='0'&&c<='9'){x=x*10+c-'0';c=getchar();}\n\tT=f?-x:x;\n}\n\nint n,q;\nstruct Node {\n\tint l,r,w,lw,rw;\n\tint lmax,rmax;\n}tree[MAXN<<2];\n\nint max(int a,int b) {return a>b?a:b;}\n\nvoid build(int l,int r,int now) {\n\ttree[now].l=l,tree[now].r=r;\n\tif(tree[now].l==tree[now].r) {\n\t\ttree[now].w=tree[now].lw=tree[now].rw=1;\n\t\ttree[now].lmax=tree[now].rmax=1;return;\n\t}\n\tint mid=(tree[now].l+tree[now].r)>>1;\n\tbuild(l,mid,lson),build(mid+1,r,rson);\n\ttree[now].lw=tree[lson].lw,tree[now].rw=tree[rson].rw;\n\tif(tree[lson].lmax==tree[lson].r-tree[lson].l+1) {\n\t\tif(tree[lson].rw==tree[rson].lw) tree[now].lmax=tree[lson].lmax;\n\t\telse tree[now].lmax=tree[lson].lmax+tree[rson].lmax;\n\t}else tree[now].lmax=tree[lson].lmax;\n\tif(tree[rson].rmax==tree[rson].r-tree[rson].l+1) {\n\t\tif(tree[lson].rw==tree[rson].lw) tree[now].rmax=tree[rson].rmax;\n\t\telse tree[now].rmax=tree[lson].rmax+tree[rson].rmax;\n\t}else tree[now].rmax=tree[rson].rmax;\n\ttree[now].w=max(tree[lson].w,tree[rson].w);\n\tif(tree[lson].rw!=tree[rson].lw) {\n\t\ttree[now].w=max(tree[now].w,tree[lson].rmax+tree[rson].lmax);\n\t}\n}\n\nvoid update(int x,int now) {\n\tif(tree[now].l==tree[now].r) {\n\t\ttree[now].lw=tree[now].rw=tree[now].w^=1;\n\t\ttree[now].lmax=tree[now].rmax=1;return;\n\t}\n\tint mid=(tree[now].l+tree[now].r)>>1;\n\tif(x<=mid) update(x,lson);\n\telse update(x,rson);\n\ttree[now].lw=tree[lson].lw,tree[now].rw=tree[rson].rw;\n\tif(tree[lson].lmax==tree[lson].r-tree[lson].l+1) {\n\t\tif(tree[lson].rw==tree[rson].lw) tree[now].lmax=tree[lson].lmax;\n\t\telse tree[now].lmax=tree[lson].lmax+tree[rson].lmax;\n\t}else tree[now].lmax=tree[lson].lmax;\n\tif(tree[rson].rmax==tree[rson].r-tree[rson].l+1) {\n\t\tif(tree[lson].rw==tree[rson].lw) tree[now].rmax=tree[rson].rmax;\n\t\telse tree[now].rmax=tree[lson].rmax+tree[rson].rmax;\n\t}else tree[now].rmax=tree[rson].rmax;\n\ttree[now].w=max(tree[lson].w,tree[rson].w);\n\tif(tree[lson].rw!=tree[rson].lw) {\n\t\ttree[now].w=max(tree[now].w,tree[lson].rmax+tree[rson].lmax);\n\t}\n}\n\nint main() {\n\tread(n),read(q),build(1,n,1);\n\tfor(int i=1,x;i<=q;++i) {\n\t\tread(x),update(x,1);\n\t\tprintf(\"%d\\n\",tree[1].w);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1590303581,
        "uid": 142110,
        "name": "yu__xuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6492 \u3010[COCI2010-2011#6] STEP\u3011"
    },
    {
        "content": "\u672c\u9898\u7406\u89e3\uff1a\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\n\n\u6240\u4ee5\u4f60\u4ee5\u4e3a\u7b97\u6cd5\u662f\u6811\u72b6\u6570\u7ec4\uff1f\n\nko no \u7ebf\u6bb5\u6811 da\uff01\n\n\u8fd9\u9053\u9898\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u6ca1\u6709pushdown\u7684\u7ebf\u6bb5\u6811\u8fc7\u6389\u3002\n\n### \u601d\u8def\uff1a\n\u7ebf\u6bb5\u6811\u7ed3\u6784\u4f53\u4e2d\u67095\u4e2a\u53d8\u91cf\uff1al,r(\u533a\u95f4\u8303\u56f4)\uff0czc(\u5de6\u8fb9\u6700\u957f),yc(\u53f3\u8fb9\u6700\u957f),c(\u603b\u5171\u6700\u957f)\n\n\u7136\u540e\u53ea\u6709\u7ef4\u62a4\u540e\u4e09\u4e2a\u503c\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u91cc\u9700\u8981\u5206\u60c5\u51b5\u8ba8\u8bba\u3002\n\n1.\u5de6\u513f\u5b50\u548c\u53f3\u513f\u5b50\u4e0d\u80fd\u5e76\u5230\u4e00\u8d77\n\n\u8fd9\u4e2a\u65f6\u5019 zc=\u5de6\u513f\u5b50\u7684zc yc=\u53f3\u513f\u5b50\u7684yc c=\u5de6\u53f3\u513f\u5b50\u7684c\u4e2d\u7684\u8f83\u5927\u503c\n\n2.\u5de6\u513f\u5b50\u548c\u53f3\u513f\u5b50\u53ef\u4ee5\u5e76\u5230\u4e00\u8d77\n\n\u8fd9\u4e2a\u65f6\u5019\u53c8\u9700\u8981\u8ba8\u8bba\u3002\n\n\u5982\u679c\u5de6\u513f\u5b50\u7684zc\u548c\u5b83\u533a\u95f4\u7684\u957f\u4e00\u6837\uff0czc=\u5de6\u513f\u5b50\u7684zc+\u53f3\u513f\u5b50\u7684yc\n\n\u4e0d\u7136zc=\u5de6\u513f\u5b50\u7684zc\n\nyc\u540c\u7406\n\nc=\u5de6\u513f\u5b50\u7684c\uff0c\u53f3\u513f\u5b50\u7684c\uff0c\u5de6\u513f\u5b50\u7684yc+\u53f3\u513f\u5b50\u7684zc\u4e2d\u7684\u6700\u5927\u503c\n\n\u7136\u540e\u5c31\u53ef\u4ee5AC\u4e86\n\n\u4e0a\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct tree{\n\tint yc,zc,c,l,r;\n}tr[200005*4];\nbool a[200005];\nvoid xg(int k,int l){\n\tif(tr[k].l==tr[k].r)\n\t\treturn;\n\tint mid=(tr[k].l+tr[k].r)>>1;\n\tif(mid>=l)\n\t\txg(k<<1,l);\n\telse\n\t\txg(k<<1|1,l);\n\tif(a[tr[k<<1|1].l]!=a[tr[k<<1].r]){\n\t\tif(tr[k<<1|1].yc==tr[k<<1|1].r-tr[k<<1|1].l+1)\n\t\t\ttr[k].yc=tr[k<<1].yc+tr[k<<1|1].yc;\n\t\telse\n\t\t\ttr[k].yc=tr[k<<1|1].yc;\n\t\tif(tr[k<<1].zc==tr[k<<1].r-tr[k<<1].l+1)\n\t\t\ttr[k].zc=tr[k<<1].zc+tr[k<<1|1].zc;\n\t\telse\n\t\t\ttr[k].zc=tr[k<<1].zc;\n\t\ttr[k].c=max(tr[k<<1].yc+tr[k<<1|1].zc,max(tr[k<<1].c,tr[k<<1|1].c));\n\t}\n\telse{\n\t\ttr[k].yc=tr[k<<1|1].yc;\n\t\ttr[k].zc=tr[k<<1].zc;\n\t\ttr[k].c=max(tr[k<<1].c,tr[k<<1|1].c);\n\t}\n\treturn;\n}\nvoid build(int k){\n\ttr[k].yc=tr[k].zc=tr[k].c=1;\n\tif(tr[k].l==tr[k].r)\n\t\treturn;\n\tint mid=(tr[k].l+tr[k].r)>>1;\n\ttr[k<<1].l=tr[k].l;tr[k<<1].r=mid;\n\ttr[k<<1|1].l=mid+1;tr[k<<1|1].r=tr[k].r;\n\tbuild(k<<1);\n\tbuild(k<<1|1);\n\treturn;\n}\nint n,q,x;\nint main(){\n\tcin>>n>>q;\n\ttr[1].l=1;\n\ttr[1].r=n;\n\tbuild(1);\n\twhile(q--){\n\t\tscanf(\"%d\",&x);\n\t\ta[x]^=1;\n\t\txg(1,x);\n\t\tprintf(\"%d\\n\",tr[1].c);\n\t}\n\treturn 0;\n} \n```\n",
        "postTime": 1592446475,
        "uid": 181521,
        "name": "\u73c8\u4e50\u552f\u6bd2",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6492 \u3010[COCI2010-2011#6] STEP\u3011"
    },
    {
        "content": "\u770b\u8fd9\u9053\u9898\uff0c\u533a\u95f4\u8be2\u95ee\uff0c\u7b54\u6848\u5177\u6709\u53ef\u5e76\u6027\uff0c\u4e8e\u662f\u8003\u8651\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002\n\n\u6b64\u9898\u5f88\u50cf\u90a3\u79cd\u6c42\u533a\u95f4\u6700\u5927\u5b50\u6bb5\uff0c\u8003\u8651\u7ef4\u62a4\u4e00\u4e2a\u7ebf\u6bb5\u6811\u7684\u8282\u70b9\u3002\n\n\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u5982\u4e0b\u4fe1\u606f\uff1a\n\n1. $lmax$ \u6307\u6700\u5de6\u7aef\u7684\u8fde\u7eed\u6700\u957f\u5b50\u4e32\u957f\u5ea6\u3002\n\n2. $rmax$ \u6307\u6700\u53f3\u7aef\u7684\u8fde\u7eed\u6700\u957f\u5b50\u4e32\u957f\u5ea6\u3002\n\n3. $allmax$ \u6307\u8fde\u7eed\u6700\u957f\u5b50\u4e32\u957f\u5ea6\u3002\n\n4. $lsum$ \u6307\u6700\u5de6\u7aef\u5b57\u7b26\u3002\n\n5. $rsum$ \u6307\u6700\u53f3\u7aef\u5b57\u7b26\u3002\n\n6. $len$ \u6307\u533a\u95f4\u957f\u5ea6\u3002\n\n\u8003\u8651\u5408\u5e76\u5de6\u53f3\u4e24\u4e2a\u5b50\u8282\u70b9\u5e76\u8ba1\u7b97\u8d21\u732e\u3002\n\nlmax\u548crmax\u53ea\u9700\u8981\u8003\u8651\u4e2d\u95f4\u662f\u5426\u80fd\u62fc\u63a5\u8d77\u6765\u66f4\u65b0\uff0c\nallmax\u5219\u662f\u5404\u6bb5allmax\u53d6\u6700\u503c\uff0c\u518d\u8003\u8651\u4e2d\u95f4\u662f\u5426\u80fd\u62fc\u63a5\u8d77\u6765\u66f4\u65b0\u3002\n\n\u5176\u4f59\u7684\u503c\u76f4\u63a5\u8c03\u7528\u5de6\u53f3\u8282\u70b9\u7684\u503c\u6765\u8d21\u732e\u5373\u53ef\u3002\n\n```cpp\ninline Node operator + (const Node&rhs) const {\n\treturn Node(\n\t\tallmax == len && rsum != rhs.lsum ? len + rhs.lmax : lmax,\n\t\trhs.allmax == rhs.len && rsum != rhs.lsum ? rmax + rhs.len : rhs.rmax,\n\t\tmax(rsum != rhs.lsum ? rmax + rhs.lmax : 0, allmax, rhs.allmax),\n\t\tlsum,\n\t\trhs.rsum,\n\t\tlen + rhs.len\n\t);\n}\n```\n\n\u7136\u540e\u7ebf\u6bb5\u6811\u5c31\u662f\u5e38\u89c4\u64cd\u4f5c\u3002\n\n```cpp\nstruct SegmentTree {\n\tstruct Node {\n\t\tint lmax, rmax, allmax, lsum, rsum, len;\n\t\tNode() { lsum = rsum = 0; len = lmax = rmax = allmax = 1; }\n\t\tNode(int _lmax, int _rmax, int _allmax, int _lsum, int _rsum, int _len)\n\t\t: lmax(_lmax), rmax(_rmax), allmax(_allmax), lsum(_lsum), rsum(_rsum), len(_len) {}\n\t\tinline void Vary(void) { rsum ^= 1; lsum ^= 1; }\n\t\tinline Node operator + (const Node&rhs) const {\n\t\t\treturn Node(\n\t\t\t\tallmax == len && rsum != rhs.lsum ? len + rhs.lmax : lmax,\n\t\t\t\trhs.allmax == rhs.len && rsum != rhs.lsum ? rmax + rhs.len : rhs.rmax,\n\t\t\t\tmax(rsum != rhs.lsum ? rmax + rhs.lmax : 0, allmax, rhs.allmax),\n\t\t\t\tlsum,\n\t\t\t\trhs.rsum,\n\t\t\t\tlen + rhs.len\n\t\t\t);\n\t\t}\n\t} t[Maxn];\n\t\n\tinline void pushup(int pos) { t[pos] = t[pos << 1] + t[pos << 1 | 1]; }\n\tinline void build(int pos, int l, int r) {\n\t\tif (l == r) return;\n\t\tint mid = l + r >> 1;\n\t\tbuild(pos << 1, l, mid);\n\t\tbuild(pos << 1 | 1, mid + 1, r);\n\t\tpushup(pos);\n\t}\n\n\tinline void change(int pos, int l, int r, int idx) {\n//\t\tcout << l << ' ' << r << endl;\n//\t\tif (l > idx || r < idx) return;\n\t\tif (l == r) { t[pos].Vary(); return; }\n\t\tint mid = l + r >> 1;\n\t\tif (idx <= mid) change(pos << 1, l, mid, idx);\n\t\telse change(pos << 1 | 1, mid + 1, r, idx);\n\t\tpushup(pos);\n\t}\n\t\n\tinline Node query1(int pos, int l, int r, int L, int R) {\n\t\tif (L <= l && R >= r) return t[pos];\n\t\tint mid = l + r >> 1; // Node ret;\n\t\tif (L <= mid && R > mid) return query1(pos << 1, l, mid, L, R) + query1(pos << 1 | 1, mid + 1, r, L, R);\n\t\tif (L <= mid) return query1(pos << 1, l, mid, L, R);\n\t\tif (R > mid) return query1(pos << 1 | 1, mid + 1, r, L, R);\n\t}\n\t\n\tinline int query(void) { return t[1].allmax; }\n} T;\n```\n\n\n",
        "postTime": 1590754147,
        "uid": 50925,
        "name": "EternalEpic",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P6492 \u3010[COCI2010-2011#6] STEP\u3011"
    },
    {
        "content": "~~\u8fd9\u9898\u597d\u50cf\u5c31\u662f\u4e4b\u524d\u90a3\u4e2a\u5565\u8170\u9f13\u7684\u90a3\u9898..~~\n\n\u65e2\u7136\u5176\u8981\u6c42\u4e0d\u5b58\u5728\u8fde\u7eed\u7684`L`\u548c`R`\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5c06\u521d\u59cb\u5e8f\u5217\u5f04\u6210`L`\u4e0e`R`\u76f8\u95f4\u7684\u60c5\u51b5\uff0c\u8fd9\u6837\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u6c42\u533a\u95f4\u5185\u8fde\u7eed\u6700\u957f\u5168\u4e3a`L`\u7684\u957f\u5ea6\u4e0e\u533a\u95f4\u5185\u8fde\u7eed\u6700\u957f`R`\u7684\u957f\u5ea6\u7684\u8f83\u5927\u503c\uff0c\u8fd9\u4e2a\u5f88\u597d\u7ef4\u62a4\uff0c\u6709\u4e9b\u7c7b\u4f3c [[USACO08FEB]Hotel G](https://www.luogu.com.cn/problem/P2894) \u3002\n\n\u7ebf\u6bb5\u6811\u677f\u5b50\u3002\n\n\u9700\u8981\u7ef4\u62a4\u7684\u4fe1\u606f:\n\n1. \u533a\u95f4\u9760\u5de6\u7aef\u7684\u8fde\u7eed\u6700\u957f`L`\u957f\u5ea6\n2. \u533a\u95f4\u5185\u8fde\u7eed\u6700\u957f`L`\u957f\u5ea6\n3. \u533a\u95f4\u9760\u53f3\u7aef\u7684\u8fde\u7eed\u6700\u957f`L`\u957f\u5ea6\n4. \u533a\u95f4\u9760\u5de6\u7aef\u7684\u8fde\u7eed\u6700\u957f`R`\u957f\u5ea6\n5. \u533a\u95f4\u5185\u8fde\u7eed\u6700\u957f`R`\u957f\u5ea6\n6. \u533a\u95f4\u9760\u53f3\u7aef\u7684\u8fde\u7eed\u6700\u957f`R`\u957f\u5ea6\n\n### \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define N 20010\n\nusing namespace std;\n\nint n,m,x;\nstruct node{\n\tint l,r,lmax0,rmax0,max0,lmax1,rmax1,max1;\n\t#define l(x) tree[x].l\n\t#define r(x) tree[x].r\n\t#define lm0(x) tree[x].lmax0\n\t#define rm0(x) tree[x].rmax0\n\t#define m0(x) tree[x].max0\n\t#define lm1(x) tree[x].lmax1\n\t#define rm1(x) tree[x].rmax1\n\t#define m1(x) tree[x].max1\n\t#define ls p<<1\n\t#define rs ls|1\n}tree[N<<2];\n\nvoid push_up(int p) {\n\tm0(p)=max(rm0(ls)+lm0(rs),max(m0(ls),m0(rs)));\n\tm1(p)=max(rm1(ls)+lm1(rs),max(m1(ls),m1(rs)));\n\tlm0(p)=(lm0(ls)==r(ls)-l(ls)+1)?lm0(ls)+lm0(rs):lm0(ls);\n\trm0(p)=(rm0(rs)==r(rs)-l(rs)+1)?rm0(rs)+rm0(ls):rm0(rs);\n\tlm1(p)=(lm1(ls)==r(ls)-l(ls)+1)?lm1(ls)+lm1(rs):lm1(ls);\n\trm1(p)=(rm1(rs)==r(rs)-l(rs)+1)?rm1(rs)+rm1(ls):rm1(rs);\n}\n\nvoid build(int p,int l,int r) {\n\tl(p)=l,r(p)=r;\n\tif(l==r) {\n\t\tlm1(p)=rm1(p)=m1(p)=l&1;\t\t\n\t\tlm0(p)=rm0(p)=m0(p)=l&1^1;\n\t\treturn ;\n\t}\n\tint mid=l+r>>1;\n\tbuild(ls,l,mid);\n\tbuild(rs,mid+1,r);\n\tpush_up(p);\n}\n\nvoid change(int p,int x) {\n\tif(l(p)>x||r(p)<x) return ;\n\tif(l(p)==r(p)) {\n\t\tm1(p)^=1;\n\t\tlm1(p)^=1;\n\t\trm1(p)^=1;\n\t\tm0(p)^=1;\n\t\tlm0(p)^=1;\n\t\trm0(p)^=1;\n\t\treturn ;\n\t}\n\tchange(ls,x);\n\tchange(rs,x);\n\tpush_up(p);\n}\n\nint main() {\n\tcin>>n>>m;\n\t\n\tbuild(1,1,n);\n\tfor(int i=1;i<=m;i++) {\n\t\tcin>>x;\n\t\tchange(1,x);\n\t\tcout<<max(m0(1),m1(1))<<endl;\n\t}\n\t\n\treturn 0;\n}\n```",
        "postTime": 1588869123,
        "uid": 71936,
        "name": "HoshiuZ",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P6492 \u3010[COCI2010-2011#6] STEP\u3011"
    },
    {
        "content": "\u5bf9\u539f\u5e8f\u5217$a$\u6784\u5efa\u4e00\u4e2a\u957f\u5ea6\u4e3a\u5176\u957f\u5ea6$n-1$\u7684\u5e8f\u5217$b$\u3002\n\n\u82e5$a$\u4e2d\u76f8\u90bb\u4e24\u9879\u76f8\u540c\uff0c\u5219$b$\u4e2d\u90a3\u4e2a\u4f4d\u7f6e\u4e3a$0$\uff0c\u5426\u5219\u4e3a$1$\u3002\n\n\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u6c42$b$\u4e2d\u6700\u591a\u8fde\u7eed$1$\u7684\u4e2a\u6570\u3002\n\n\u7ebf\u6bb5\u6811\u677f\u5b50\u3002\n\n\u6bcf\u6b21\u4fee\u6539\u53ea\u9700\u4fee\u6539$b$\u4e2d\u7684\u4e24\u4e2a\u6570\uff0c\u6ce8\u610f\u7279\u5224$1$\u548c$n$\u3002\n\ncode:\n\n```cpp\nconst int N = 2e5 + 5;\n\nstruct Segmenttr{\n\tint l , r , maxl , maxr , maxm , val;\n}tr[N << 2];\n\nint n , q , x;\n\nvoid build(int rt , int l , int r){\n\ttr[rt].l = l , tr[rt].r = r , tr[rt].val = 0;\n\tif(l == r)\n\t\treturn;\n\tint mid = (l + r) >> 1;\n\tbuild(rt << 1 , l , mid) , build(rt << 1 | 1 , mid + 1 , r);\n}\n\nvoid update(int rt , int k){\n\tif(tr[rt].l > k || tr[rt].r < k)\n\t\treturn;\n\tif(tr[rt].l == tr[rt].r){\n\t\ttr[rt].val = 1 - tr[rt].val;\n\t\tif(tr[rt].val)\n\t\t\ttr[rt].maxl = tr[rt].maxm = tr[rt].maxr = 1;\n\t\telse\n\t\t\ttr[rt].maxl = tr[rt].maxm = tr[rt].maxr = 0;\n\t\treturn;\n\t}\n\tupdate(rt << 1 , k) , update(rt << 1 | 1 , k);\n\tif(tr[rt << 1].maxl == tr[rt << 1].r - tr[rt << 1].l + 1)\n\t\ttr[rt].maxl = tr[rt << 1].maxl + tr[rt << 1 | 1].maxl;\n\telse\n\t\ttr[rt].maxl = tr[rt << 1].maxl;\n\tif(tr[rt << 1 | 1].maxr == tr[rt << 1 | 1].r - tr[rt << 1 | 1].l + 1)\n\t\ttr[rt].maxr = tr[rt << 1 | 1].maxr + tr[rt << 1].maxr;\n\telse\n\t\ttr[rt].maxr = tr[rt << 1 | 1].maxr;\n\ttr[rt].maxm = max(max(tr[rt << 1].maxm , tr[rt << 1 | 1].maxm),max(max(tr[rt].maxl , tr[rt].maxr) , tr[rt << 1].maxr + tr[rt << 1 | 1].maxl));\n}\n\nint main(){\n\tcin >> n >> q;\n\tbuild(1 , 1 , n - 1);\n\twhile(q--){\n\t\tcin >> x;\n\t\tif(x != 1)\n\t\t\tupdate(1 , x - 1);\n\t\tif(x != n)\n\t\t\tupdate(1 , x);\n\t\tcout << tr[1].maxm + 1 << endl;\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1588255420,
        "uid": 241090,
        "name": "Retucl",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6492 \u3010[COCI2010-2011#6] STEP\u3011"
    },
    {
        "content": "\u5982\u679c\u683c\u5f0f\u6709\u95ee\u9898\u8bf7\u89c1[\u8fd9\u91cc](https://www.luogu.com.cn/blog/xzc/solution-p6489)\n\u3002\n\n\u770b\u89c1\u662f\u95ee\u8fde\u7eed\u6700\u957f01\u5b50\u533a\u95f4,\u7b2c\u4e00\u53cd\u5e94\u662fdp,\u4f46\u662f\u8fd9\u9053\u9898\u662f\u8981\u652f\u6301\u4fee\u6539\u7684.\n~~(\u518d\u770b\u4e00\u4e0b\u6807\u7b7e)~~\n\u5e94\u8be5\u662f\u7ebf\u6bb5\u6811\u4e0a\u7684dp.\n\u5982\u679c\u4f60\u76f4\u63a5\u7edf\u8ba101\u5b50\u533a\u95f4\u7684\u8bdd,\u662f\u4f1a\u51fa\u9519\u7684(\u5e94\u8be5\u662f\u6211\u592a\u83dc)\u4f60\u5e94\u8be5\u4f1a\u6253\u51fa\u8fd9\u6837\u7684\u4ee3\u7801:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define N 11400000\nstruct node{\n\tint l,r,Lmax,Rmax,tot,L,R;\n}t[N];\nint read()\n{\n\tint x=0,f=0;char ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-')f=1;ch=getchar();}\n\twhile(isdigit(ch)){x=x*10+ch-'0';ch=getchar();}\n\treturn f?-x:x;\n}\nvoid update(int x)\n{\n\tif(t[x<<1].R != t[x<<1|1].L) t[x].tot = t[x<<1].Rmax + t[x<<1|1].Lmax;\n\tt[x].tot = max(max(t[x<<1].tot,t[x<<1|1].tot),t[x].tot);\n\tt[x].L = t[x<<1].L;\n\tt[x].R = t[x<<1|1].R;\n\tif(t[x<<1].R != t[x<<1|1].L && t[x<<1].Lmax == t[x<<1].r-t[x<<1].l+1) \n\tt[x].Lmax = t[x<<1].tot + t[x<<1|1].Lmax;\n\telse t[x].Lmax = t[x<<1].Lmax;\n\tif(t[x<<1].R != t[x<<1|1].L && t[x<<1|1].Rmax == t[x<<1|1].r-t[x<<1|1].l+1)\n\tt[x].Rmax = t[x<<1].Rmax + t[x<<1|1].tot;\n\telse t[x].Rmax = t[x<<1|1].Rmax;\n\tt[x].tot = max(t[x].Lmax,max(t[x].Rmax,t[x].tot));\n}\nvoid build(int q,int l,int r)\n{\n\tt[q].l = l;t[q].r = r;\n\tif(l == r)\n\t{\n\t\tt[q].Lmax=t[q].Rmax=t[q].tot=t[q].L=t[q].R=1;\n\t\treturn ;\n\t}\n\tint mid = l + r>>1;\n\tbuild(q<<1,l,mid);\n\tbuild(q<<1|1,mid+1,r);\n\tupdate(q);\n}\nvoid change(int q,int l,int r,int key)\n{\n\tif(key == l && key == r)\n\t{\n\t\tt[q].R = t[q].L = t[q].L^1;\n\t\treturn;\n\t}\n\tint mid = l+r>>1;\n\tif(key <= mid) change(q<<1,l,mid,key);\n\tif(key > mid) change(q<<1|1,mid+1,r,key);\n\tupdate(q);\n}\nint n,m;\nsigned main()\n{\n\tn=read();m=read();\n\tbuild(1,1,n);\n\tfor(int i = 1;i <= m;i++)\n\t{\n\t\tint a = read();\n\t\tchange(1,1,n,a);\n\t\tprintf(\"%d\\n\",t[1].tot);\n\t}\n}\n```\n\u7136\u540e\u5c31WA\u4e86.......\n\n\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u5957\u8def\u5c06\u76f8\u540c\u7684\u5b57\u6bcd\u4e3a0,\u4e0d\u76f8\u540c\u7684\u4e3a1.\u5c31\u8f6c\u5316\u4e3a\u6c42\u6700\u957f\u5e8f\u5217\u95ee\u9898\u4e86,\u8fd9\u9053\u9898\u4e5f\u5c31\u8fce\u5203\u800c\u89e3\u4e86,\u7528 $tot$ \u8868\u793a\u8fd9\u4e2a\u533a\u95f4\u6700\u957f\u7684\u5e8f\u5217.\u5219\u6709\u4ee5\u4e0b\u8f6c\u79fb:\n\n$$\ntot_x=\\begin{cases}tot_{Lson}\\\\tot_{Rson}\\\\Rmax_{Lson}+Lmax_{Rson}\\end{cases}\n$$ \n\u4f46\u662f\u5f53 $Rmax_{Lson} = tot_{Lson}$ \u65f6\u662f\u53ef\u4ee5\u5408\u5e76\u533a\u95f4\u7684( $Rson$ \u540c\u7406)\u8fd9\u6837\u8fd9\u9053\u9898\u5c31\u89e3\u51b3\u4e86\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define N 11400000\nstruct node{\n\tint l,r,Lmax,Rmax,tot;\n}t[N];\nint read()\n{\n\tint x=0,f=0;char ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-')f=1;ch=getchar();}\n\twhile(isdigit(ch)){x=x*10+ch-'0';ch=getchar();}\n\treturn f?-x:x;\n}\nvoid update(int q)\n{\n\tt[q].Lmax = t[q<<1].Lmax;\n\tt[q].Rmax = t[q<<1|1].Rmax;\n\tif(t[q<<1].tot == t[q<<1].r+1-t[q<<1].l) t[q].Lmax = t[q<<1].tot + t[q<<1|1].Lmax;\n\tif(t[q<<1|1].tot == t[q<<1|1].r+1-t[q<<1|1].l) t[q].Rmax = t[q<<1|1].tot+t[q<<1].Rmax;\n\tt[q].tot = t[q<<1].Rmax+t[q<<1|1].Lmax;\n\tint M = max(max(t[q<<1|1].tot,t[q<<1].tot),max(t[q].Lmax,t[q].Rmax));\n\tt[q].tot = max(t[q].tot,M);\n}\nvoid build(int q,int l,int r)\n{\n\tt[q].l = l;t[q].r = r;\n\tif(l == r)\n\t{\n\t\tt[q].Lmax=t[q].Rmax=t[q].tot=0;\n\t\treturn ;\n\t}\n\tint mid = l + r>>1;\n\tbuild(q<<1,l,mid);\n\tbuild(q<<1|1,mid+1,r);\n\tupdate(q);\n}\nvoid change(int q,int l,int r,int key,int val)\n{\n\tif(key == l && key == r)\n\t{\n\t\tt[q].tot = t[q].Rmax = t[q].Lmax = val;\n\t\treturn;\n\t}\n\tint mid = l+r>>1;\n\tif(key <= mid) change(q<<1,l,mid,key,val);\n\tif(key > mid) change(q<<1|1,mid+1,r,key,val);\n\tupdate(q);\n}\nint n,m,Val[N];\nsigned main()\n{\n\tn=read();m=read();\n\tbuild(1,1,n-1);\n\tfor(int i = 1;i <= m;i++)\n\t{\n\t\tint a = read();\n\t\tif(a>1) change(1,1,n-1,a-1,Val[a-1]^=1);\n\t\tif(a<n) change(1,1,n-1,a,Val[a]^=1);\n\t\tprintf(\"%d\\n\",t[1].tot+1);\n\t}\n}\n\n```\n",
        "postTime": 1587954062,
        "uid": 227824,
        "name": "JK_LOVER",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6492 \u3010[COCI2010-2011#6] STEP\u3011"
    }
]