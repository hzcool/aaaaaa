[
    {
        "content": "## Solution\n\n\u9898\u76ee\u5f88\u957f\uff0c\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u7ef4\u62a4\u4e00\u4e2a\u6bd4\u8d5b\u7cfb\u7edf\u3002\n\n\u5148\u7ed9\u51fa\u8981\u7ef4\u62a4\u7684\u4e1c\u897f\uff1a\n\n\u6bcf\u573a\u6bd4\u8d5b\u6bcf\u4e2a\u7528\u6237\u5bf9\u5e94\u7684 AC \u6570\u91cf\uff0c\u6bcf\u573a\u6bd4\u8d5b\u5bf9\u5e94 AC \u6570\u91cf\u7684\u4eba\u6570\uff0c\u6bcf\u4e2a\u63d0\u4ea4\u5bf9\u5e94\u7684\u7f16\u53f7\u3001\u7528\u6237\u3001\u6bd4\u8d5b\u3001\u548c\u7ed3\u679c\u3002\n\n\u4e0b\u9762\u5206\u64cd\u4f5c\u8bb2\u8ff0\u3002\n\n---\n\n\u65b0\u5efa\u6bd4\u8d5b\u3002\n\n\u5176\u5b9e\u65b0\u5efa\u6bd4\u8d5b\u662f\u6ca1\u6709\u7528\u7684\uff0c\u56e0\u4e3a\u4e4b\u540e\u5176\u4ed6\u7684\u64cd\u4f5c\u4e2d\u90fd\u4f1a\u7ed9\u51fa\u5bf9\u5e94\u7684\u6bd4\u8d5b\u7f16\u53f7\u548c\u9898\u76ee\u7f16\u53f7\uff08\u6216\u8005\u63d0\u4ea4\u7f16\u53f7),\u6240\u4ee5\u5e76\u4e0d\u9700\u8981\u8bb0\u5f55\u6bd4\u8d5b\u4e2d\u6709\u54ea\u4e9b\u9898\u76ee\u3002\n\n---\n\n\u63d0\u4ea4\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a UNAC \u7684\u63d0\u4ea4\uff0c\u8bb0\u5f55\u6bcf\u573a\u6bd4\u8d5b\u6709\u54ea\u4e9b\u4eba\u662f\u4ea4\u8fc7\u9898\u4e86\uff0c\u5982\u679c\u5f53\u524d\u8fd9\u4e2a\u63d0\u4ea4\u5bf9\u5e94\u7684\u7528\u6237\u4e4b\u524d\u4ea4\u8fc7\u9898\uff0c\u90a3\u4e48\u8fd9\u4e2a\u63d0\u4ea4\u662f\u4e0d\u7528\u7ba1\u7684\uff0c\u5426\u5219\u9700\u8981\u5c06 AC \u6570\u91cf\u4e3a 0 \u7684\u4eba\u6570 +1\uff08\u5728\u5bf9\u5e94\u7684\u6bd4\u8d5b\u4e2d)\u3002\n\n\u5982\u679c\u662f AC \u7684\u63d0\u4ea4\uff0c\u5219\u5c06\u5bf9\u5e94\u7528\u6237\u5728\u5bf9\u5e94\u6bd4\u8d5b\u4e2d\u7684 AC \u6570\u91cf +1\u3002\u6ce8\u610f\u6211\u4eec\u8981\u5148\u5224\u65ad\u8fd9\u4e2a\u4eba\u662f\u5426\u66fe\u7ecf AC \u8fc7\u8fd9\u9053\u9898\u76ee\uff0c\u4f46\u5982\u679c\u76f4\u63a5\u5f00\u6570\u7ec4\u4f1a\u7206\u7a7a\u95f4\uff0c\u6240\u4ee5\u8981\u7528\u94fe\u5f0f\u524d\u5411\u661f\uff0c\u5c06\u5bf9\u4e8e\u8fd9\u4e2a\u7528\u6237\u548c\u8fd9\u9053\u9898\u5bf9\u5e94\u6bd4\u8d5b\u7684 AC \u6570\u91cf\u6253\u5728\u8fde\u5411\u5bf9\u5e94\u6bd4\u8d5b\u7684\u8fb9\u4e0a\uff08\u8fd9\u91cc\u53ef\u80fd\u6709\u70b9\u96be\u61c2\uff0c\u53ef\u4ee5\u7ed3\u5408\u4e0b\u9762\u7684\u4ee3\u7801\u7406\u89e3\uff09\u3002\n\n---\n\n\u67e5\u8be2\u6392\u540d\u3002\n\n\u76f8\u5f53\u4e8e\u7ed9\u51fa\u4e00\u4e2a\u8fc7\u9898\u6570\uff0c\u5728\u5bf9\u5e94\u6bd4\u8d5b\u4e2d\u67e5\u627e\u6709\u591a\u5c11\u4eba\u7684\u8fc7\u9898\u6570\u5927\u4e8e\uff0c\u591a\u5c11\u4eba\u8fc7\u9898\u6570\u7b49\u4e8e\u3002\u8fd9\u91cc\u53ef\u4ee5\u7528\u6570\u636e\u7ed3\u6784\u6216\u8005\u524d\u7f00/\u540e\u7f00\u548c\u3002\n\n---\n\n\u91cd\u6d4b\u3002\n\n\u8ddf\u63d0\u4ea4\u5dee\u4e0d\u591a\uff0c\u5982\u679c\u539f\u672c\u7684\u72b6\u6001\u662f UNAC \u7684\u8bdd\uff0c\u4e0d\u9700\u8981\u7ba1\u3002\n\n\u5982\u679c\u662f AC\uff0c\u5219\u53ea\u9700\u8981\u5c06\u5bf9\u5e94\u7528\u6237\u7684 AC \u6570\u91cf -1\u3002\n\n## Code\n\n```cpp\n#include<cstdio>\n#define N 5005\n#define M 350005\nusing namespace std;\nstruct sub\n{\n    int pid,cid,uid;\n    bool res;\n}sub[M];\nstruct contest\n{\n    int num[N],solve[N];\n}con[55];\nstruct node\n{\n    int to,next;\n}a[M];\nint n,m,q,id,sid,cid,pid,uid,tot,cnt[M],head[N][N];\nbool b[55][N];\nchar ch[20];\nint read()\n{\n    int res=0;char ch=getchar();\n    while (ch<'0'||ch>'9') ch=getchar();\n    while (ch>='0'&&ch<='9') res=(res<<1)+(res<<3)+(ch-'0'),ch=getchar();\n    return res;\n}\nvoid add(int uid,int pid,int cid)\n{\n    a[++tot].to=cid;\n    a[tot].next=head[uid][pid];\n    head[uid][pid]=tot;\n}\nint find(int uid,int pid,int cid)\n{\n    for (int i=head[uid][pid];i;i=a[i].next)\n    {\n        int v=a[i].to;\n        if (v==cid) return i;\n    }\n    return 0;\n}\nint main()\n{\n    n=read();m=read();q=read();\n    while (q--)\n    {\n        scanf(\"%s\",ch);\n        if (ch[0]=='c')\n        {\n            int num,x;\n            cid=read();num=read();\n            for (int i=1;i<=num;++i)\n                x=read();\n        }\n        else if (ch[0]=='s')\n        {\n            int sid,cid,pid,uid;\n            sid=read();cid=read();pid=read();uid=read();scanf(\"%s\",ch);\n            sub[sid].cid=cid;sub[sid].pid=pid;sub[sid].uid=uid;sub[sid].res=(ch[0]=='A');\n            if (!b[cid][uid])\n            {\n                b[cid][uid]=true;\n                con[cid].num[0]++;\n            }\n            if (ch[0]=='A')\n            {\n                id=find(uid,pid,cid);\n                if (!id) add(uid,pid,cid),id=tot;\n                ++cnt[id];\n                if (cnt[id]==1) con[cid].num[++con[cid].solve[uid]]++;\n            }\n        }\n        else if (ch[0]=='g')\n        {\n            cid=read();uid=read();\n            int pnum=con[cid].solve[uid];\n            printf(\"%d %d %d %d\\n\",uid,pnum,con[cid].num[pnum+1]+1,con[cid].num[pnum]);\n        }\n        else if (ch[0]=='r')\n        {\n            sid=read();\n            uid=sub[sid].uid;cid=sub[sid].cid;pid=sub[sid].pid;\n            if (sub[sid].res)\n            {\n                int id=find(uid,pid,cid);\n                --cnt[id];\n                if (cnt[id]==0) con[cid].num[con[cid].solve[uid]--]--;\n            }\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1644840931,
        "uid": 166078,
        "name": "Thunder_S",
        "ccfLevel": 6,
        "title": "P3892 [GDOI2014]OJ"
    }
]