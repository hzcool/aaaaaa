[
    {
        "content": "\u53d1\u73b0\u9898\u76ee\u8981\u6c42\u6c42\u51fa\u770b\u8d77\u6765\u5f88\u6709\u89c4\u5f8b\u7684\u65e0\u5411\u56fe\u751f\u6210\u6811\u4e2a\u6570\uff0c\u663e\u7136\u53ef\u4ee5\u627e\u4e00\u4e9b\u89c4\u5f8b/\u6253\u8868/\u9012\u63a8\u4e4b\u7c7b\u7684\uff0c\u4f46\u4e0d\u59a8\u91c7\u7528\u6bd4\u8f83\u66b4\u529b\u7684\u65b9\u6cd5\uff0c\u77e9\u9635\u6811\u5b9a\u7406\u3002\n\n\u7136\u540e\u53d1\u73b0\u4e8b\u60c5\u5e76\u6ca1\u6709\u90a3\u4e48\u7b80\u5355\uff0c\u5982\u679c\u7528\u77e9\u9635\u6811\u5b9a\u7406\u66b4\u529b\u53bb\u505a\u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9\u4e00\u4e9b\u4e71\u641e/\u624b\u5199\u9ad8\u7cbe\u5ea6\u5c0f\u6570\u7c7b\u4e4b\u7c7b\u7684\u65b9\u6cd5\n\n\u800c\u4e4b\u524d\u53c8\u8bf4\uff0c\u8fd9\u4e2a\u56fe\u6bd4\u8f83\u7279\u6b8a\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u7814\u7a76\u4e00\u4e0b\u57fa\u5c14\u970d\u592b\u77e9\u9635\u7684\u884c\u5217\u5f0f\u6709\u6ca1\u6709\u4ec0\u4e48\u6bd4\u8f83\u7279\u6b8a\u7684\u6c42\u6cd5\uff0c$n+1(n>2)$\u9636\u7684\u57fa\u5c14\u970d\u592b\u77e9\u9635\u5927\u6982\u957f\u8fd9\u4e2a\u6837\u5b50\n\n$$\\begin{bmatrix}n&-1&-1&-1&-1&\\cdots&-1&-1&-1\\\\-1&3&-1&0&0&\\cdots&0&0&-1\\\\-1&-1&3&-1&0&\\dots&0&0&0\\\\-1&0&-1&3&-1&\\cdots&0&0&0\\\\\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\ddots&\\vdots&\\vdots&\\vdots\\\\-1&0&0&0&0&\\cdots&-1&3&-1\\\\-1&-1&0&0&0&\\cdots&0&-1&3\\end{bmatrix}$$\n\n$n$\u9636\u4e3b\u5b50\u5f0f\u80af\u5b9a\u662f\u6254\u7b2c\u4e00\u884c\u7b2c\u4e00\u5217\u554a\uff0c\u56e0\u4e3a\u6211\u4eec\u60f3\u627e\u884c\u5217\u5f0f\u7684\u9012\u63a8\u89c4\u5f8b\uff0c\u7136\u540e\u53d8\u6210\u8fd9\u6837\n\n$$\\begin{bmatrix}3&-1&0&0&\\cdots&0&0&-1\\\\-1&3&-1&0&\\dots&0&0&0\\\\0&-1&3&-1&\\cdots&0&0&0\\\\\\vdots&\\vdots&\\vdots&\\vdots&\\ddots&\\vdots&\\vdots&\\vdots\\\\0&0&0&0&\\cdots&-1&3&-1\\\\-1&0&0&0&\\cdots&0&-1&3\\end{bmatrix}$$\n\n\u8bbe\u8fd9\u4e2a\u77e9\u9635\u4e3a$A_n$\uff0c\u90a3\u4e48$n$\u7684\u7b54\u6848\u5c31\u662f$\\det A_n$\uff0c\u7136\u540e\u6211\u4eec\u8003\u8651\u6c42\u51fa\u8fd9\u4e2a\u77e9\u9635\u7684\u884c\u5217\u5f0f\n\n\u7531\u201c\u884c\u5217\u5f0f\u7b49\u4e8e\u5b83\u7684\u4efb\u4e00\u884c\uff08\u5217\uff09\u7684\u5404\u5143\u7d20\u4e0e\u5176\u5bf9\u5e94\u7684\u4ee3\u6570\u4f59\u5b50\u5f0f\u4e58\u79ef\u4e4b\u548c\u201d\n\n- \u4f59\u5b50\u5f0f\uff1a\u5728$n$\u9636\u884c\u5217\u5f0f\u4e2d\uff0c\u628a\u5143\u7d20$a_{i,j}$\u6240\u5728\u7b2c$i$\u884c\u548c\u7b2c$j$\u884c\u5212\u53bb\u540e\uff0c\u7559\u4e0b\u7684$n-1$\u9636\u884c\u5217\u5f0f\u53eb\u5143\u7d20$a_{i,j}$\u7684\u4f59\u5b50\u5f0f\uff0c\u8bb0\u505a$M_{i,j}$\uff0c\u5b9a\u4e49\u4ee3\u6570\u4f59\u5b50\u5f0f\u4e3a$A_{i,j}=(-1)^{i+j}M_{i,j}$\n\n\u6211\u4eec\u53ef\u4ee5\u6254\u7b2c\u4e00\u884c\uff0c\u56e0\u4e3a$(1,n)$\u548c$(n,1)$\u4e24\u4e2a\u4f4d\u7f6e\u7684\u4e1c\u897f\u770b\u8d77\u6765\u5de8\u96be\u53d7\u3002\n\n\u62c6\u5f00\u7b2c\u4e00\u884c\u7b2c\u4e00\u5217\u5f97\u5230\n\n$$3\\begin{vmatrix}3&-1&0&\\dots&0&0&0\\\\-1&3&-1&\\cdots&0&0&0\\\\\\vdots&\\vdots&\\vdots&\\ddots&\\vdots&\\vdots&\\vdots\\\\0&0&0&\\cdots&-1&3&-1\\\\0&0&0&\\cdots&0&-1&3\\end{vmatrix}$$\n\n\u8fd9\u4e2a\u770b\u8d77\u6765\u5c31\u53ef\u4ee5\u9012\u63a8\u7684\u4e1c\u897f\uff0c\u8bbe$n-1$\u9636\u7684\u5b83\u4e3a$B_{n-1}$\u3002\u4e3a\u4e86\u65b9\u4fbf\uff0c\u4ee5\u4e0b$A_n,B_n$\u4e5f\u6307\u4ee3\u884c\u5217\u5f0f\u7684\u503c\u3002\n\n\u7136\u540e\u5269\u4e0b\u6709\u8d21\u732e\u7684\u7b2c\u4e00\u884c\u7b2c\u4e8c\u5217\u548c\u7b2c\u4e00\u884c\u7b2c$n-1$\u5217\uff0c\u56e0\u4e3a\u4f59\u5b50\u5f0f\u7684\u6b63\u8d1f\u4e0e$n$\u6709\u5173\uff0c\u4e0d\u59a8\u5148\u8bbe$n$\u4e3a\u5947\u6570\uff0c\u5076\u6570\u7684\u60c5\u51b5\u662f\u4e00\u6837\u7684\u3002\n\n$$\\begin{vmatrix}-1&-1&0&\\dots&0&0&0\\\\0&3&-1&\\cdots&0&0&0\\\\\\vdots&\\vdots&\\vdots&\\ddots&\\vdots&\\vdots&\\vdots\\\\0&0&0&\\cdots&-1&3&-1\\\\-1&0&0&\\cdots&0&-1&3\\end{vmatrix}$$\n\n\u8fd9\u662f\u62c6\u4e86\u7b2c\u4e00\u884c\u7b2c\u4e8c\u5217\uff0c\u6ca1\u601d\u8def\u518d\u62c6\uff0c\u53d1\u73b0\u6254\u7b2c\u4e00\u884c\u7b2c\u4e00\u5217\u540e\u662f$-B_{n-2}$\uff0c\u6254\u7b2c$n-1$\u884c\u7b2c$1$\u5217\u662f\u4e3b\u5bf9\u89d2\u7ebf\u5168\u4e3a$-1$\u7684\u4e0b\u4e09\u89d2\uff0c\u884c\u5217\u5f0f\u7684\u503c\u4e3a$-1$\uff0c\u518d\u4e58\u4e0a$(-1)^{n-1+1}(-1)$\u8fd8\u662f$-1$\n\n\u7136\u540e\u662f\u7b2c\u4e00\u884c\u7b2c$n$\u5217\n\n$$-\\begin{vmatrix}-1&3&-1&0&\\dots&0&0\\\\0&-1&3&-1&\\cdots&0&0\\\\\\vdots&\\vdots&\\vdots&\\vdots&\\ddots&\\vdots&\\vdots\\\\0&0&0&0&\\cdots&-1&3\\\\-1&0&0&0&\\cdots&0&-1\\end{vmatrix}$$\n\n\u6ce8\u610f\u8fd9\u91cc\u662f\u8d1f\u7684\uff0c\u56e0\u4e3a$n$\u662f\u5947\u6570\u3002\u7136\u540e\u8fd8\u662f\u62c6\u7b2c\u4e00\u5217\uff0c\u53d1\u73b0\u7b54\u6848\u8fd8\u662f$-B_{n-2}$\u548c$-1$\n\n\u4e8e\u662f\u6211\u4eec\u6709$A_n=3B_{n-1}-2B_{n-2}-2$\n\n\u4ee5\u540c\u6837\u7684\u65b9\u6cd5\u5bf9$B$\u505a\u8ba8\u8bba\uff0c\u53ef\u4ee5\u5f97\u5230$B_n=3B_{n-1}-B_{n-2}$\n\n\u7136\u540e\u8054\u7acb\u4e00\u4e0b\u5f97\u5230$A_{n}=3A_{n-1}-A_{n-2}+2$\uff0c\u5e26\u5165\u5230$n\\le2$\u53d1\u73b0\u5f0f\u5b50\u4ecd\u7136\u6210\u7acb\uff0c\u7136\u540e\u76f4\u63a5\u9012\u63a8+\u9ad8\u7cbe\u5373\u53ef\u3002",
        "postTime": 1545280960,
        "uid": 63727,
        "name": "ButterflyDew",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2144 \u3010[FJOI2007]\u8f6e\u72b6\u75c5\u6bd2\u3011"
    },
    {
        "content": "# Dp(\u5229\u7528\u591a\u9636\u5dee\u5206)\n### \u9012\u63a8\u5f0f\n\n\u5982\u679c\u7528$f[x]$\u8868\u793a\u52a0\u5165\u4e86x\u4e2a\u5468\u56f4\u7684\u70b9\u540e\u7684\u65b9\u6848\u6570\uff0c\u6211\u4eec\u9996\u5148\u60f3\u5230\u7684\u9012\u63a8\u5f0f\u662f\uff1a\n\n$$f[i]=\\sum_{j=1}^{i}f[i-j]\\cdot j$$\n\n\u610f\u601d\u662f\uff0c\u6700\u540e\u52a0\u5165\u7684j\u4e2a\u70b9\u6bcf\u4e2a\u90fd\u53ef\u80fd\u4e0e\u4e2d\u5fc3\u70b9\u8fde\u8fb9\uff0c\u5c06\u6240\u6709\u65b9\u6848\u6570\u7d2f\u52a0\u5373\u53ef\u3002\n\n\u4f46\u662f\uff0c\u6211\u4eec\u9047\u5230\u4e00\u4e2a\u95ee\u9898\uff1a\u7b2c\u4e00\u4e2a\u70b9\u6c38\u8fdc\u4e0d\u4f1a\u4e0e\u7b2cn\u4e2a\u70b9\u8fde\u8fb9\uff0c\u56e0\u6b64\u65b9\u6848\u6570\u7edf\u8ba1\u5e76\u4e0d\u51c6\u786e\u3002\n\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5bf9\u4e0a\u9762\u7684f[x]\u4f5c\u4e00\u4e9b\u4fee\u6b63\n\n$$g[i]=\\sum_{j=2}^{i}f[i-j]\\cdot j\\cdot(j-1)$$\n\n\u8fd9\u6837\u7684$g[i]+f[i]$\u5c31\u662f\u6211\u4eec\u8981\u6c42\u7684\u8f6e\u72b6\u75c5\u6bd2\u7684\u6570\u91cf\u3002\n\n\u7b2c\u4e8c\u4e2a\u5f0f\u5b50\u7684\u610f\u601d\u662f\uff1a\u5982\u679c\u6709j\u4e2a\u5468\u56f4\u7684\u70b9\u8fde\u6210\u4e00\u6761\uff0c\u4e14\u8de8\u8d8a\u4e861\u548cn\uff0c\u6211\u4eec\u5c06\u6240\u6709\u8fd9\u6837\u7684\u60c5\u51b5\u7d2f\u52a0\u5230\u7b54\u6848\u4e2d\u53bb\u3002\u5982\u679c\u8fd9\u6837\u7684\u70b9\u6709j\u4e2a\uff0c\u5269\u4e0b\u7684\u70b9\u80af\u5b9a\u4e0d\u4e0e\u8fd9j\u4e2a\u70b9\u76f8\u8fde\uff0c\u6240\u4ee5\u8fde\u8fb9\u65b9\u6848\u6570\u5c31\u662f$f[i-j]\u200b$\uff0c\u8fd9j\u4e2a\u70b9\u6709$(j-1)\u200b$\u79cd\u9009\u6cd5(\u8de8\u8d8a1\u548cn)\uff0c\u4e0e\u4e2d\u5fc3\u70b9\u8fde\u8fb9\u7684\u65b9\u6848\u6570\u662fj\uff0c\u6839\u636e\u4e58\u6cd5\u539f\u7406\uff0c\u7b54\u6848\u8981\u7d2f\u52a0$f[i-j]\\times j\\times (j-1)$\u3002\n\n\u4e0b\u9762\u6211\u4eec\u601d\u8003\u5982\u4f55\u5feb\u901f\u6c42\u51faf\u548cg\u3002\u663e\u7136\u7531\u4e8e\u6d89\u53ca\u9ad8\u7cbe\u5ea6\u52a0\u6cd5\uff0c\u6211\u4eec\u9700\u8981$O(n^3)$\u7684\u590d\u6742\u5ea6\u6c42\u89e3\u8fd9\u4e2a\u9b3c\u4e1c\u897f\u3002\u4e3a\u4e86\u8ffd\u6c42\u901f\u5ea6\uff0c\u6211\u4eec\u9700\u8981\u66f4\u5feb\u4e00\u4e9b\u3002\n\n### \u591a\u9636\u5dee\u5206\n\n\u9996\u5148\u5206\u6790$f[i]$\u3002\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u6c42\u51fa\u6240\u6709$f[i-j]*j$\u7684\u524d\u7f00\u548c\uff0c\u8fd9\u4e2a\u95ee\u9898\u5c31\u53d8\u5f97\u975e\u5e38\u65b9\u4fbf\u4e86\u3002\u95ee\u9898\u662f\u5bf9\u4e8e\u4e0d\u540c\u7684i\uff0c\u8fd9\u4e2a\u524d\u7f00\u548c\u4e2d\u6bcf\u4e00\u9879\u90fd\u4f1a\u53d1\u751f\u53d8\u5316\u3002\u6240\u4ee5\uff0c\u524d\u7f00\u548c\u5e76\u4e0d\u9760\u8c31\u3002\n\n\u524d\u7f00\u548c\u6bcf\u4e00\u9879\u90fd\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u90a3\u5982\u679c\u6211\u4eec\u77e5\u9053\u4e86\u53d8\u5316\u7684\u91cf\u662f\u591a\u5c11\u5462\uff1f\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u5bf9\u524d\u7f00\u548c\u8fdb\u884c\u5dee\u5206\u3002\n$$\\sum_{j=1}^{i}f[i-j]\\cdot j \\ - \\ \\sum_{j=1}^{i-1}f[i-1-j]\\cdot j$$\n$$=\\sum_{j=0}^{i}f[j]\\cdot(i-j) \\ - \\ \\sum_{j=0}^{i-1}f[j]\\cdot(i-1-j)$$\n$$=\\sum_{j=0}^{i}f[i]$$\n\u592a\u68d2\u4e86\uff0c\u524d\u7f00\u548c\u7684\u53d8\u5316\u91cf\u5c31\u662f\u5355\u7eaf\u7684$f[i]$\u7684\u524d\u7f00\u548c\uff01\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u7ef4\u62a4$f[i]$\u7684\u524d\u7f00\u548c\uff0c\u4ee5\u53ca$f[i-j]\\cdot j$\u7684\u524d\u7f00\u548c\uff0c\u6bcf\u6b21\u5c06$f[i]$\u7d2f\u52a0\u8fdb$f[i]$\u7684\u524d\u7f00\u548c\uff0c\u5c06$f[i]$\u7684\u524d\u7f00\u548c\u7d2f\u52a0\u8fdb$f[i-j]\\cdot j$\u7684\u524d\u7f00\u548c\u3002\u4e8b\u5c31\u8fd9\u6837\u6210\u4e86\u3002\n\n\u7136\u800c\u6211\u4eec\u8fd8\u5269\u4e0b$g[i]$\u6ca1\u529e\u6cd5\u5904\u7406\u3002\u5176\u5b9e\u5904\u7406\u529e\u6cd5\u662f\u4e00\u6837\u7684\u3002\n\n$$g[i]=\\sum_{j=2}^{i}f[i-j]\\cdot j\\cdot(j-1) $$\n$$g[i]=\\sum_{j=0}^{i}f[j]\\cdot (i-j)\\cdot (i-j-1) $$\n$$\\Delta g[i]=\\sum_{j=0}^{i}f[j]\\cdot(i-j)\\cdot 2 $$\n$$\\Delta^2 g[i]=\\sum_{j=0}^{i}f[j]\\cdot2 $$\n$$\\Delta^3 g[i]=2f[i]$$\n\n\u4e5f\u5c31\u662f\u8bf4$g$\u7684\u4e09\u9636\u5dee\u5206\u5c31\u662f$f$\uff0c\u90a3\u4e48\u6211\u4eec\u6bcf\u6b21\u628a\u6bcf\u9636\u5dee\u5206\u5f80\u4e0a\u7d2f\u52a0\u5c31\u884c\u4e86\u3002\n\n### \u603b\u7ed3\n\n\u6240\u4ee5\uff0c\u5982\u679c$f[i]$\u9012\u63a8\u5f0f\u4e2d\u9047\u5230\u4e86\u542b\u6709i\u7684\u7b80\u5355\u591a\u9879\u5f0f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u624b\u52a8\u5dee\u5206\u4e00\u4e0b\uff0c\u5206\u522b\u7ef4\u62a4\u6bcf\u9636\u5dee\u5206\uff0c\u4f9d\u6b21\u5411\u4e0a\u7d2f\u52a0\u5373\u53ef\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u53ea\u7528\u52a0\u6cd5\u5b8c\u6210\u5f88\u591a\u6709\u8da3\u7684\u4e8b\u60c5(\u6bd4\u5982\u73b0\u5728\u8fd9\u9053\u9898)\u3002\n\n```cpp\n#include <stdio.h>\n#define max(x,y) (x>y?x:y)\nstruct BI{\n\tchar x[43],n;\n\tvoid operator+=(BI &a)\n\t{\n\t\tchar mx=max(n,a.n),k=0;\n\t\tfor(char i=1;i<=mx||k;i++)\n\t\t{\n\t\t\tif(i>n)x[i]=0;\n\t\t\tx[i]+=a.x[i]+k;\n\t\t\tk=x[i]/10,x[i]%=10;\n\t\t\tn=max(n,i);\n\t\t}\n\t}\n\tvoid operator=(char a){n=1,x[1]=a;}\n\tvoid out(){for(char i=n;i>=1;i--)printf(\"%d\",x[i]);}\n};\nBI f,g,f1,f2,g1,g2;\nint main()\n{\n\tchar n;\n\tscanf(\"%d\",&n);\n\tf=1,f1=1,f2=1,g1=0,g2=0;\n\tfor(char i=1;i<=n;i++)\n\t{\n\t\tif(i)g2+=f,g2+=f;\n\t\tif(i<n)g1+=g2;\n\t\tif(i<n)g+=g1;\n\t\tf=f1;\n\t\tf2+=f;\n\t\tf1+=f2;\n\t}\n\tg+=f;\n\tg.out();\n\treturn 0;\n}\n```\n\n",
        "postTime": 1519824242,
        "uid": 41155,
        "name": "totorato",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2144 \u3010[FJOI2007]\u8f6e\u72b6\u75c5\u6bd2\u3011"
    },
    {
        "content": "\u505a\u8fd9\u9898\u9887\u6709\u611f\u89e6\u554a\uff0c\u611f\u89c9\u7701\u9009\u9898\u76ee\u753b\u534a\u4e2a\u5c0f\u65f6\u753b\u56fe\u4e0d\u5403\u4e8f\u3002\n\n\u770b\u5230\u9898\u76ee\uff0c\u53cd\u6b63\u6211\u7684\u7b2c\u4e00\u53cd\u5e94\u662f\u9012\u63a8\u3002\u9012\u63a8\u5c31\u8981\u6709\u9012\u63a8\u5f0f\uff0c\u4e8e\u662f\u6211\u82b1\u4e86\u5c06\u8fd120\u5206\u949f\uff0c\u753b\u51fan=1~5\u60c5\u51b5\u7684\u8f6e\u72b6\u75c5\u6bd2\u4e2a\u6570:\n\n1 5 16 45 121\u2026\u2026\n\n\u4e4d\u4e00\u770b\uff0c\u5947\u6570\u9879\u662f\u5b8c\u5168\u5e73\u65b9\u6570\uff0c\u5076\u6570\u9879\u662f5\u7684\u500d\u6570\uff0c\u6211\u60f3\u7684\u662f\u5f80\u5e73\u65b9\u6570\u4e0a\u9760\uff0c\u4e8e\u662f\u8f6c\u5316\u6210\u4e86\u8fd9\u6837\uff1a\n\n1\\*1 3\\*3-4 4\\*4 7\\*7-4 11\\*11\u2026\u2026\n\n1 3 4 7 11\u2026\u2026\n\n\u5c31\u662f\u8fd9\u6837\uff0c\u539f\u6765\u662f\u4e2a\u53d8\u5f62\u7684Fibonacci\u6570\u5217\uff0c\u524d\u4e24\u9879\u4e3a1\u548c3\uff0c\u7136\u540e\u5bf9\u6bcf\u4e00\u9879\u5e73\u65b9\uff0c\u5982\u679c\u662f\u5076\u6570\u9879\u5c31\u51cf4\uff0cAC~\n\n\u9012\u63a8\u5f0f\uff1aF[n]=f[n]\\*f[n]-4\\*(n+1 mod 2)\uff0cf[n]=f[n-1]+f[n-2]\uff0cf[1]=1\uff0cf[2]=3\n\n\u7136\u540e\u96be\u70b9\u5c31\u5728\u4e8e\u9ad8\u7cbe\u5ea6\u4e86\u3002\n\n\u5bf9\u4e8e\u9ad8\u7cbe\u5ea6\uff0c\u6211\u559c\u6b22\u7528\u5218\u6c5d\u4f73\u300a\u7b97\u6cd5\u7ade\u8d5b\u5165\u95e8\u7ecf\u5178\u300b\u4e0a\u7684\u5927\u6574\u6570\u7c7b\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5c31\u662f\u5b9a\u4e49\u4e00\u4e2aclass\uff0c\u901a\u8fc7\u7b26\u53f7\u91cd\u8f7d\uff0c\u8ba9\u6253\u9ad8\u7cbe\u5ea6\u8fd0\u7b97\u548c\u6253\u666e\u901a\u8fd0\u7b97\u4e00\u6837\u7b80\u5355\u3002\u8fd9\u6837\u5c31\u4e0d\u7528\u4e13\u4e3a\u6bcf\u9053\u9898\u6253\u4e13\u95e8\u7684\u9ad8\u7cbe\u5ea6\uff0c\u9700\u8981\u65f6\u5728\u7a0b\u5e8f\u524d\u5957\u677f\u5b50\u5373\u53ef\u3002(~~\u4f46\u8fd9\u6837\u4f3c\u4e4e\u52a0\u5927\u4e86\u4ee3\u7801\u91cf~~)\n\n\u968f\u4ee3\u7801\u9644\u4e0a\u9ad8\u7cbe\u5ea6\u6a21\u677f\uff1a\n\n```cpp\n#include<iostream>\n#include<cmath>\n#include<cstring>\n#include<cstdio>\n#include<cstdlib>\n#include<algorithm>\n#define fp(i,a,b) for(int i=a;i<=b;i++)\n#define fq(i,a,b) for(int i=a;i>=b;i--)\n#define il inline\n#define re register\n#define ll long long \nusing namespace std;\nconst int maxN=100001;\nconst int inf=2147483647;\n```\nclass BigInteger\n{\npublic:\n\nint size,num[1000];//size\u4ee3\u8868\u6570\u7684\u957f\u5ea6\uff0cnum\u5b58\u5927\u6574\u578b\u6570\n\n\n\n\n\n```cpp\n    BigInteger()//\u5b9a\u4e49\u65f6\u81ea\u52a8\u6e05\u96f6\n        {\n            size=0;\n            memset(num,0,sizeof(num));\n        }\n    BigInteger(int data)\n        {\n            size=0;\n            while (data!=0)\n            {\n                size++;\n                num[size]=data%10;\n                data=data/10;\n            }\n        }\n    void init(int data)//\u7528\u6765\u7ed9\u5927\u6574\u578b\u53d8\u91cf\u8d4b\u6574\u578b\u503c\n        {\n            size=0;\n            while (data!=0)\n            {\n                size++;\n                num[size]=data%10;\n                data=data/10;\n            }\n        }\n};\nBigInteger operator + (BigInteger A,BigInteger B)//\u9ad8\u7cbe\u5ea6\u52a0\u6cd5\n{\n    BigInteger Ans;\n    int s=max(A.size,B.size);\n    Ans.size=s;\n    for (int i=1;i<=s;i++)\n        Ans.num[i]=A.num[i]+B.num[i];\n    for (int i=1;i<=s;i++)\n        if (Ans.num[i]>=10)\n        {\n            Ans.num[i+1]+=Ans.num[i]/10;\n            Ans.num[i]=Ans.num[i]%10;\n        }\n    if (Ans.num[s+1]!=0)\n        Ans.size++;\n    return Ans;\n}\nBigInteger operator - (BigInteger A,BigInteger B)//\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\n{\n    BigInteger Ans;\n    int s=max(A.size,B.size);\n    Ans.size=s;\n    for (int i=1;i<=s;i++)\n        Ans.num[i]=A.num[i]-B.num[i];\n    for (int i=1;i<=s;i++)\n        if (Ans.num[i]<0)\n        {\n            Ans.num[i+1]-=Ans.num[i]/10;\n            Ans.num[i]=Ans.num[i]%10;\n        }\n    if (Ans.num[s+1]!=0)\n        Ans.size++;\n    return Ans;\n}\nostream & operator << (ostream &os,BigInteger A)//\u7528\u4e8e\u5927\u6574\u578b\u6570\u7684\u8f93\u51fa\uff08\u53ea\u80fd\u7528cout\uff09\n{\n    int s=A.size;\n    for (int i=s;i>=1;i--)\n        os<<A.num[i];\n    return os;\n}\nBigInteger operator * (BigInteger A,BigInteger B)//\u9ad8\u7cbe\u5ea6\u4e58\u6cd5\n{\n    BigInteger Ans;\n    int s1=A.size,s2=B.size;\n    for (int i=1;i<=s1;i++)\n        for (int j=1;j<=s2;j++)\n            Ans.num[i+j-1]+=A.num[i]*B.num[j];\n    int s=s1+s2-1;\n    int k=1;\n    while ((Ans.num[k]!=0)||(k<=s))\n    {\n        Ans.num[k+1]+=Ans.num[k]/10;\n        Ans.num[k]=Ans.num[k]%10;\n        k++;\n    }\n    if (Ans.num[k]==0)\n        k--;\n    Ans.size=k;\n    return Ans;\n}\nBigInteger Ans,Ans1,Ans2;//\u5b9a\u4e49\u5927\u6574\u578b\u6570\nil int gi()\n{\n   int x=0;\n   short int t=1;\n   char ch=getchar();\n  while((ch<'0'||ch>'9')&&ch!='-') ch=getchar();\n  if(ch=='-') t=-1,ch=getchar();\n  while(ch>='0'&&ch<='9') x=x*10+ch-48,ch=getchar();\n  return x*t;\n}\nint main()\n{\n    Ans1.init(1);//\u628aAns1\u8d4b\u503c\u4e3a1,\u4e0d\u80fd\u5199Ans1=1\uff01\uff01\uff01\n    Ans2.init(3);//\u628aAns2\u8d4b\u503c\u4e3a3,\u4e0d\u80fd\u5199Ans2=3\uff01\uff01\uff01\n    int n=gi();\n    for(int i=3;i<=n;i++) if(i%2) Ans1=Ans1+Ans2;\n        else Ans2=Ans2+Ans1;\n    if(n%2) Ans=Ans1;\n    else Ans=Ans2;//\u6c42f[n]\n    if(n%2) Ans=Ans*Ans;\n    else Ans=Ans*Ans-4;//\u6c42F[n]\n    cout<<Ans<<endl;\n    return 0;\n}\n```",
        "postTime": 1503584236,
        "uid": 21534,
        "name": "ysner",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2144 \u3010[FJOI2007]\u8f6e\u72b6\u75c5\u6bd2\u3011"
    },
    {
        "content": "# ~~\u9047\u5230\u8fd9\u79cd\u9898\u6211\u53ea\u4f1a\u6253\u8868~~\n\n\u8bbef[i]\u8868\u793an=i\u65f6\u7684\u7b54\u6848\uff0c~~\u6253\u8868\u53ef\u5f97~~ \uff1a\n\n\tf[1]=1,f[2]=5,f[3]=16,\n    \n   \tf[i]=3*f[i-1]-f[i-2]+2 \n    \n    \n \uff08\u600e\u4e48\u611f\u89c9\u81ea\u5df1\u7684\u516c\u5f0f\u6bd4\u522b\u4eba\u7684\u7b80\u5355\u597d\u591a\u554a\uff09\n \n \u518d\u5957\u9ad8\u7cbe\u5ea6\u5373\u53ef\u3002\u3002\u3002\n \n \u6253\u8868\u4ee3\u7801\u5982\u4e0b\uff1a\n \n ```cpp\n #include<bits/stdc++.h>\nusing namespace std;\n#define N 107\n#define M 13\n#define ll long long\nconst ll bit=1e9;\nstruct edge\n{\n\tint x,y;\n}e[N];\nint tot,fa[N],n,ans;\nint find(int x)\n{\n\treturn x==fa[x]?x:fa[x]=find(fa[x]);\n}\nvoid dfs(int x,int d)\n{\n\tif(d+tot-x+1<n)return;\n\tif(d>=n){ans++;return;}\n\tdfs(x+1,d);\n\tint a=e[x].x,b=e[x].y;\n\tint u=find(a),v=find(b);\n\tif(u!=v)\n\t{\n\t\tint tmp[N];\n\t\tmemcpy(tmp,fa,sizeof(fa));\n\t\tfa[u]=v;\n\t\tdfs(x+1,d+1);\n\t\tmemcpy(fa,tmp,sizeof(fa));\n\t}\n}\nint main()\n{\n\tint i;\n\tfor(n=1;n<=10;n++)\n\t{\n\t\tans=0;tot=0;\n\t\tfor(i=1;i<n;i++)\n\t\t\te[++tot]={i,i+1};\n\t\te[++tot]={n,1};\n\t\tfor(i=1;i<=n;i++)\n\t\t\te[++tot]={i,n+1};\n\t\tfor(i=1;i<=n+1;i++)\n\t\t\tfa[i]=i;\n\t\tdfs(1,0);\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n```\n\n\u7136\u540e\u662fAC\u7684\u4ee3\u7801\uff1a\n```cpp\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define N 107\n#define M 13\nconst ll bit=1e9;\nstruct nb\n{\n    ll a[M];\n    int l;\n    nb(){memset(a,0,sizeof(a)),l=0;}\n    ll &operator [](int x){return a[x];}\n    void operator =(int x){a[0]=x;}\n    void operator +=(int x)\n    {\n        int i=0;\n        a[0]+=x;\n        while(a[i]>=bit)\n        {\n            a[i]-=bit;\n            a[i+1]++;\n            i++;\n        }\n        if(a[l+1])l++;\n    }\n    void operator *=(int x)\n    {\n        int i=0;\n        ll rest=0;\n        for(i=0;i<=l;i++)\n        {\n            a[i]=a[i]*x+rest;\n            rest=a[i]/bit;\n            a[i]%=bit;\n        }\n        if(rest)a[++l]=rest;\n    }\n    void operator -=(nb b)\n    {\n        int i=0;\n        for(i=0;i<=b.l;i++)\n        {\n            a[i]-=b[i];\n            if(a[i]<0)a[i]+=bit,a[i+1]--;\n        }\n        while(a[i]<0)a[i]+=bit,a[i+1]--,i++;\n        while(l>0&&a[l]==0)l--;\n    }\n    void print()\n    {\n        printf(\"%lld\",a[l]);\n        for(int i=l-1;i>=0;i--)\n            printf(\"%09lld\",a[i]);\n    }\n}f[N];\nint main()\n{\n    int i,n;\n    scanf(\"%d\",&n);\n    f[1]=1,f[2]=5,f[3]=16;\n    for(i=4;i<=n;i++)\n    {\n        f[i]=f[i-1];\n        f[i]*=3;\n        f[i]-=f[i-2];\n        f[i]+=2;\n    }\n    f[n].print();\n    return 0;\n}\n```\n",
        "postTime": 1557149833,
        "uid": 100806,
        "name": "lyyi2003",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2144 \u3010[FJOI2007]\u8f6e\u72b6\u75c5\u6bd2\u3011"
    },
    {
        "content": "\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u591a\u4eba\u6253\u8868\u2026\u2026\u8fd8\u6709\u4eba\u7528\u5404\u79cd\u4ec0\u4e48\u57fa\u5c14\u970d\u592b\u77e9\u9635\u2026\u2026\u53ea\u80fdOrz\u554a\n\n\u2026\u2026~~\u8fd9\u4e0d\u662f\u660e\u663e\u7684DP\u5417~~\n\n\u7ecf\u8fc7\u89c2\u5bdf\uff0c\u53ef\u4ee5\u53d1\u73b0\u6bcf\u4e00\u4e2a\u8f6e\u72b6\u75c5\u6bd2\u90fd\u662f\u628a\u5916\u56f4\u7684 $ n $ \u4e2a\u70b9\u5206\u6210\u4e86\u82e5\u5e72\u7ec4\uff0c\u5176\u4e2d\u6bcf\u7ec4\u7684\u70b9\u662f\u8fde\u7eed\u7684\uff0c\u7136\u540e\u6bcf\u7ec4\u4e2d\u6709\u4e00\u4e2a\u70b9\u4e0e\u4e2d\u5fc3\u76f8\u8fde\u3002\u4e8e\u662f\u8fd9\u5c31\u662f\u4e00\u4e2a\u5206\u7ec4DP\u4e86\u3002\n\n\u4f46\u662f\u56e0\u4e3a\u6709\u73af\u4e0d\u597d\u5904\u7406\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u8003\u8651 $ 1 $ \u548c $ n $ \u4e0d\u5728\u4e00\u4e2a\u7ec4\u91cc\u7684\u60c5\u51b5\u3002\u8bbe $ f_i $ \u4e3a $ 1 $ \u548c $ n $ \u4e0d\u5728\u4e00\u4e2a\u7ec4\u5185\u65f6\u6240\u6709\u8f6e\u72b6\u75c5\u6bd2\u7684\u603b\u6570\u3002\u5219\u8003\u8651 $ i $ \u8fd9\u4e2a\u70b9\u53ef\u4ee5\u5f97\u5230\u8f6c\u79fb\u65b9\u7a0b\n\n### $ f_i = \\sum\\limits_{j=1}^i(f_{i-j} \\times j) $\n\n\u5176\u4e2d $ j $ \u8868\u793a $ i $ \u8ddf\u5b83\u524d\u9762\u7684 $ j $ \u4e2a\u70b9\uff08\u5305\u62ec $ i $\uff09\uff0c\u4e5f\u5c31\u662f $ i-j+1 $ \u5230 $ i $ \u4e00\u7ec4\uff0c\u90a3\u4e48\u524d\u9762 $ i-j $ \u4e2a\u70b9\u7684\u65b9\u6848\u603b\u6570\u662f $ f_{i-j} $\uff0c\u800c\u8fd9\u4e2a\u957f\u5ea6\u4e3a $ j $ \u7684\u7ec4\u53ef\u4ee5\u5728\u4efb\u4f55\u4e00\u4e2a\u70b9\u8fde\u63a5\u4e2d\u5fc3\uff0c\u6240\u4ee5\u5171\u6709 $ j $ \u79cd\u65b9\u6848\u3002\u6839\u636e\u4e58\u6cd5\u539f\u7406\uff08\u4e0d\u662f\u52a0\u6cd5\u539f\u7406\uff01\uff09\uff0c\u53ef\u4ee5\u5f97\u5230\u8fd9\u79cd\u60c5\u51b5\u4e0b $ f_i $ \u7684\u65b9\u6848\u6570\u662f $ f_{i-j} \\times j $\u3002\u679a\u4e3e $ j $ \u7d2f\u52a0\u5373\u53ef\u3002\n\n\u8fb9\u754c\u60c5\u51b5\u4e3a $ f_0 = 1 $\u3002\n\n\u4f46\u662f\u8fd9\u6837\u53ea\u80fd\u7b97\u51fa $ 1 $ \u548c $ n $ \u4e0d\u5728\u4e00\u7ec4\u7684\u60c5\u51b5\u3002\u6211\u4eec\u8003\u8651\u4e00\u822c\u60c5\u51b5\uff1a\n\n1. \u5982\u679c $ 1 $ \u548c $ 2 $ \u4e0d\u5728\u4e00\u7ec4\uff0c\u90a3\u4e48\u65b9\u6848\u6570\u4e3a $ \\sum\\limits_{i=1}^n(f_{n-i} \\times i) $\uff08\u4e3a\u4e86\u4e00\u822c\u6027\u4e0d\u7528 $ f_n $\uff09\n\n2. \u5982\u679c $ 1 $ \u548c $ 2 $ \u5728\u4e00\u7ec4\uff0c\u4f46 $ 2 $ \u548c $ 3 $ \u4e0d\u5728\u4e00\u7ec4\uff0c\u90a3\u4e48\u65b9\u6848\u6570\u4e3a $ \\sum \\limits_{i=2}^n(f_{n-i} \\times i )$\u3002\u5176\u5b9e\u8ddf\u4e0a\u9762\u7684\u5206\u6790\u65b9\u6cd5\u6ca1\u6709\u533a\u522b\uff0c\u53ea\u662f\u56e0\u4e3a $ 1 $ \u548c $ 2 $ \u5fc5\u987b\u5728\u4e00\u7ec4\uff0c\u6240\u4ee5\u542b $ 1 $ \u7684\u8fd9\u4e00\u7ec4\u957f\u5ea6 $ \\geqslant 2 $\uff0c\u6240\u4ee5\u4ece $ 2 $ \u5f00\u59cb\u679a\u4e3e\u3002\n\n3. \u5982\u679c $ 1 $ \u548c $ 2 $ \u5728\u4e00\u7ec4\uff0c$ 2 $ \u548c $ 3 $ \u5728\u4e00\u7ec4\uff0c\u4f46 $ 3 $ \u548c $ 4 $ \u4e0d\u5728\u4e00\u7ec4\uff0c\u90a3\u4e48\u65b9\u6848\u6570\u4e3a $ \\sum \\limits_{i=3}^n(f_{n-i} \\times i )$\u3002\n\n...\n\n$ n-1. $ \u5982\u679c $ 1 $ \u5230 $ n-1 $ \u90fd\u5728\u4e00\u7ec4\uff0c\u800c $ n-1 $ \u548c $ n $ \u4e0d\u5728\u4e00\u7ec4\uff0c\u90a3\u4e48\u65b9\u6848\u6570\u4e3a $ \\sum \\limits_{i=n-1}^n(f_{n-i} \\times i )$\n\n$ n. $ \u5982\u679c $ 1 $ \u5230 $ n $ \u90fd\u5728\u4e00\u7ec4\uff0c\u90a3\u4e48\u65b9\u6848\u6570\u4e3a $ \\sum \\limits_{i=n}^n(f_{n-i} \\times i )$\uff0c\u5176\u5b9e\u5c31\u662f $ f_0 \\times n = n $\n\n\u90a3\u4e48\u628a\u524d\u9762\u8bf4\u7684\u4e1c\u897f\u5168\u90fd\u52a0\u8d77\u6765\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u6700\u7ec8\u7b54\u6848\uff1a\n\n$ \\sum\\limits_{i=1}^n\\sum\\limits_{j=i}^n(f_{n-j} \\times j) $\n\n### $ = \\sum\\limits_{i=1}^n(f_{n-i} \\times i^2) $\n\n\u6700\u540e\u4e00\u4e2a\u5f0f\u5b50\u7684 $ i $ \u5176\u5b9e\u662f\u4e0a\u9762\u7684 $ j $\uff0c\u6211\u4eec\u7edf\u8ba1 $ (f_{n-j} \\times j) $ \u51fa\u73b0\u7684\u6b21\u6570\u5c31\u53ef\u4ee5\u5f97\u5230\u8fd9\u4e2a\u7b54\u6848\u3002\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u53ef\u4ee5\u5728\u8ba1\u7b97 $ f_i $ \u7684\u65f6\u5019\u5c31\u7edf\u8ba1\u5b83\u5bf9\u7b54\u6848\u7684\u8d21\u732e\uff0c\u6240\u4ee5\u8fb9\u7b97\u8fb9\u505a\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $ O(n^2) $\u3002\n\n\u7136\u800c\u51fa\u9898\u4eba\u5f88~~\u4e0d~~\u826f\u5fc3\u5730\u6ca1\u8ba9\u53d6\u6a21\uff0c\u6240\u4ee5\u5f97\u5199\u4e00\u4e2a\u9ad8\u7cbe\u3002\u5b9e\u6d4b\u6700\u5927\u7b54\u6848\u957f\u5ea6 $ = 44 $\uff0c\u4f46\u662f\u5f00 $ 100 $ \u4e5f\u53ef\u4ee5\u3002\n\n\u4e0aCode\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct cint\n{\n    int a[101];\n    cint(int x=0)\n    {\n        memset(a,0,sizeof(a));\n        a[1]=x;\n    }\n    int size()const\n    {\n        for(int i=100;i>=2;i--)\n            if(a[i])\n                return i;\n        return 1;\n    }\n    cint operator+(const cint& ano)const\n    {\n        int s=max(size(),ano.size());\n        cint ans;\n        for(int i=1;i<=s;i++)\n        {\n            ans.a[i]+=a[i]+ano.a[i];\n            ans.a[i+1]+=ans.a[i]/10;\n            ans.a[i]%=10;\n        }\n        return ans;\n    }\n    cint operator*(const int& ano)const\n    {\n        int s=size();\n        cint ans;\n        for(int i=1;i<=s;i++)\n        {\n            ans.a[i]+=a[i]*ano;\n            ans.a[i+1]+=ans.a[i]/10;\n            ans.a[i]%=10;\n        }\n        while(ans.a[++s])\n        {\n            ans.a[s+1]+=ans.a[s]/10;\n            ans.a[s]%=10;\n        }\n        return ans;\n    }\n    void print()const\n    {\n        int s=size();\n        for(int i=s;i>=1;i--)\n            putchar(a[i]+'0');\n        putchar('\\n');\n    }\n}f[101];\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    f[0]=1;\n    cint ans=0;\n    for(int i=0;i<n;i++)\n    {\n        for(int j=1;j<=i;j++)\n            f[i]=f[i]+f[i-j]*j;\n        ans=ans+f[i]*(n-i)*(n-i);\n    }\n    ans.print();\n    return 0;\n}\n```",
        "postTime": 1554708788,
        "uid": 73645,
        "name": "_ztyqwq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2144 \u3010[FJOI2007]\u8f6e\u72b6\u75c5\u6bd2\u3011"
    },
    {
        "content": "\u77e9\u9635\u6811\u5b9a\u7406\u88f8\u9898\u3002  \n\u4e2d\u95f4\u7684\u70b9\u5ea6\u6570\u4e3an\uff0c\u5176\u4ed6\u70b9\u5ea6\u6570\u4e3a3\uff0c\u5b9a\u4e49\u57fa\u5c14\u970d\u592b\u77e9\u9635\u4e3a\u5ea6\u6570\u77e9\u9635\u51cf\u53bb\u90bb\u63a5\u77e9\u9635\uff0c\u5212\u53bb\u4e00\u884c\u4e00\u5217\u6c42\u884c\u5217\u5f0f\u503c\u5373\u53ef\u3002  \n\u4f46\u662flong double\u90fd\u5b58\u4e0d\u4e0b\u3002\u7531\u4e8e $0 \\le n \\le 100$\uff0c\u6211\u4eec\u53ef\u4ee5\u6109\u5feb\u5730 python \u6253\u8868\u518d\u4ea4\u8868\u3002    \npython\u4ee3\u7801\u5982\u4e0b\uff0c\u5199\u4e86\u4e2a\u7528Decimal\u7684\u9ad8\u65af\u6d88\u5143\u3002\n\n```python3\n#!/usr/bin/env python3\nfrom decimal import Decimal, getcontext\ngetcontext().prec = 50\n\ndef main():\n\tn = int(input())\n\tif n == 1:\n\t\tprint(1)\n\telif n == 2:\n\t\tprint(5)\n\telse: # \u751f\u6210\u57fa\u5c14\u970d\u592b\u77e9\u9635A\n\t\tA = [[Decimal(3 * int(i == j) - int(j == (i-1+n)%n or j == (i+1+n) % n)) \\\n\t\t\t for j in range(n)] for i in range(n)]\n\t\tfor i in range(n): # \u9ad8\u65af\u6d88\u5143\n\t\t\tr = i\n\t\t\tfor j in range(i+1, n):\n\t\t\t\tif abs(A[j][i]) > abs(A[r][i]):\n\t\t\t\t\tr = j\n\t\t\tif r != i:\n\t\t\t\tA[r], A[i] = A[i], A[r]\n\t\t\tfor t in range(i+1, n):\n\t\t\t\tk = A[t][i] / A[i][i]\n\t\t\t\tfor j in range(n):\n\t\t\t\t\tA[t][j] -= A[i][j] * k\n\t\tAns = Decimal('1')\n\t\tfor i in range(n):\n\t\t\tAns *= A[i][i]\n\t\tprint(\"{:.0f}\".format(Ans))\nif __name__ == '__main__':\n\tmain()\n```",
        "postTime": 1520765534,
        "uid": 23865,
        "name": "panda_2134",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2144 \u3010[FJOI2007]\u8f6e\u72b6\u75c5\u6bd2\u3011"
    },
    {
        "content": "\u4e00\u5f00\u59cb\u6211\u770b\u5230\u8fd9\u4e2a\u5c31\u50cf\u76f4\u63a5\u4e0a\u4e00\u4e2a $\\mathrm{MatrixTree}$ + \u9ad8\u7cbe\u5ea6\uff0c\u636e\u8bf4\u662f\u8fd1\u4f3c $O(n^4)$\u3002\n\n\n\u63a5\u7740\u6211\u7528\u5206\u6570\u6765\u4f18\u5316\u9ad8\u7cbe\u5ea6\uff08\u663e\u7136\u4e0d\u884c\uff09\uff1b\n\n\n\u63a5\u7740\u6211\u6253\u8868\u627e\u89c4\u5f8b\uff08\u5e76\u6ca1\u6709\u53d1\u73b0\u4ec0\u4e48\uff09\u3002\n\n\n\u4e8e\u662f\u53ea\u80fd\u63a8\u5f0f\u5b50\u4e86\u3002\n\n\n\u8003\u8651\u628a\u5148\u4e0d\u7ba1\u4e2d\u5fc3\u70b9\uff0c\u7136\u540e\u628a\u5916\u56f4\u7684 $n$ \u4e2a\u70b9\u62c6\u73af\u6210\u94fe\uff0c\u6682\u65f6\u5f3a\u5236\u7b2c\u4e00\u4e2a\u70b9\u4e0d\u80fd\u548c\u6700\u540e\u4e00\u4e2a\u70b9\u8fde\u8fb9\u3002\n\n\n\u4e8e\u662f\u65b9\u6848\u6570\u5c31\u7c7b\u4f3c\u4e00\u4e2a\u6574\u6570\u62c6\u5206\uff0c\u5c06\u5916\u56f4\u7684\u70b9\u5206\u6210\u82e5\u5e72\u4e2a\u8054\u901a\u5757\uff0c\n\n\n\u5373\u8bbe $f_i$ \u4e3a\u5f53\u524d\u5df2\u7ecf\u5206\u914d\u4e86\u524d $i$ \u4e2a\u70b9\u7684\u65b9\u6848\u6570\uff0c$f_i = \\sum_{j=1}^{i} f_{i-j} \\times j$\uff08\u56e0\u4e3a\u6bcf\u52a0\u5165\u4e00\u4e2a\u8054\u901a\u5757\uff0c\u4e2d\u5fc3\u70b9\u90fd\u53ef\u4ee5\u5411\u5176\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u70b9\u8fde\u8fb9\uff09\u3002\n\n\n\u4f46\u662f\u6211\u4eec\u8fd8\u9700\u8981\u8003\u8651\u4e0a\u7b2c\u4e00\u4e2a\u70b9\u4e0e\u6700\u540e\u4e00\u4e2a\u70b9\u8fde\u8fb9\u7684\u60c5\u51b5\uff0c\u53d1\u73b0\uff0c\u5982\u679c\u5206\u914d\u7b2c\u4e00\u4e2a\u8054\u901a\u5757\u5927\u5c0f\u4e3a $x$\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u5f20\u56fe\u9006\u65f6\u9488\u65cb\u8f6c\uff0c\u5219\u603b\u5171\u6709 $x$ \u79cd\u4e0d\u540c\u7684\u65b9\u6848\u3002\n\n\n\u4e8e\u662f\u7b54\u6848\u7684\u8ba1\u7b97\u65b9\u5f0f\u5c31\u7b49\u4e8e $$f_i=\\sum_{j=1}^{i-1} f_{i-j} \\times j +f_0 \\times i \\times i$$\n\n\n\u518d\u5957\u4e2a\u9ad8\u7cbe\u5ea6\uff0c\u590d\u6742\u4e3a $O(n^3)$\u3002\n\n\n\u672c\u6587\u8ba4\u4e3a\u6b64\u9898\u9ad8\u7cbe\u5ea6\u8fd1\u4f3c $O(n)$\u3002\n\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#define R register\n#define Max(_A, _B) (_A > _B ? _A : _B)\nconst int Mod = 1e8;\nstruct BigNum\n{\n    int a[110], len;\n    BigNum(){ len = 1; }\n    friend BigNum operator + (R BigNum A, R BigNum B)\n    {\n        A.len = Max(A.len, B.len);\n        for(R int i = 0; i < A.len; i++) \n        {\n            R int tmp = A.a[i] + B.a[i];\n            A.a[i] = tmp % Mod;\n            A.a[i + 1] += tmp / Mod;\n        }\n        while(A.a[A.len]) A.len++;\n        return A;\n    }\n    BigNum operator * (R int K)\n    {\n        R BigNum T; \n        memset(T.a, 0, sizeof(T.a)); T.len = len;\n        for(R int i = 0; i < len; i++)\n        {\n            R long long tmp = 1ll * a[i] * K + T.a[i];\n            T.a[i + 1] += tmp / Mod;\n            T.a[i] = tmp % Mod;\n        }\n        while(T.a[T.len]) T.len++;\n        return T;\n    }\n    void Print()\n    {\n        printf(\"%d\", a[len - 1]);\n        for(R int i = len - 2; i >= 0; i--) printf(\"%.8d\", a[i]);\n        puts(\"\");\n    }\n} f[110];\nint n;\nint main()\n{\n    scanf(\"%d\", &n);\n    f[0].a[0] = 1;\n    for(R int i = 0; i < n; i++)\n        for(R int j = 1; i + j <= n; j++)\n            if(i == 0) f[i + j] = f[i + j] + f[i] * (j * j);\n            else f[i + j] = f[i + j] + f[i] * j;\n    f[n].Print();\n    return 0;\n}\n```",
        "postTime": 1516665266,
        "uid": 20224,
        "name": "WJiannan",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2144 \u3010[FJOI2007]\u8f6e\u72b6\u75c5\u6bd2\u3011"
    },
    {
        "content": "\u90fd\u8bf4\u6253\u8868\u627e\u89c4\u5f8b\uff0c\u8fd9\u4e2a\u8868\u600e\u4e48\u6253\uff1f\n\n\u6bcf\u79cdn\u8f6e\u72b6\u75c5\u6bd2\u5bf9\u5e94\u7740\u4e00\u79cd\u4e0d\u540c\u7684\u751f\u6210\u6811\n\n\u540c\u6837\uff0cn+1\u4e2a\u70b9\u7684\u751f\u6210\u6811\u5bf9\u5e94\u7740\u4e0d\u540c\u7684n\u8f6e\u72b6\u75c5\u6bd2\n\n\u6240\u4ee5\nn\u8f6e\u72b6\u75c5\u6bd2\u7684\u79cd\u6570 ==\n\nn+1\u4e2a\u70b9\uff0c\u5df2\u77e5\u6bcf\u4e2a\u70b9\u53ef\u4ee5\u8fde\u51fa\u7684\u8fb9 \u7684\u751f\u6210\u6811\u7684\u4e2a\u6570\n\n\u73b0\u5728\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42\u751f\u6210\u6811\u7684\u4e2a\u6570\n\n\u6784\u9020\u51fa\u57fa\u5c14\u970d\u592b\u77e9\u9635\u89e3\u884c\u5217\u5f0f\u5373\u53ef\n\n\u4ee3\u7801\uff1a\uff08\u56e0\u4e3a\u6ca1\u6709\u6253\u9ad8\u7cbe\u6240\u4ee5\u53ea\u80fd\u505a\u5230n=44\uff09\n\n        \n\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\ntypedef long long LL;\nLL C[101][101];\nint n;\nvoid Matrix_tree()\n{\n    memset(C,0,sizeof(C));\n    if(n==1)\n    {\n        C[0][0]=C[1][1]=1;\n        C[0][1]=C[1][0]=-1;\n    }\n    else if(n==2)\n    {\n        C[0][0]=2;\n        C[1][1]=C[2][2]=3;\n        C[0][1]=C[0][2]=C[1][0]=C[2][0]=-1;\n        C[1][2]=C[2][1]=-2;\n    }\n    else\n    {\n        C[0][0]=n;\n        for(int i=1;i<=n;i++) C[i][0]=C[0][i]=-1;\n        for(int i=1;i<=n;i++) C[i][i]=3;\n        C[1][2]=C[1][n]=-1;\n        C[n][n-1]=C[n][1]=-1;\n        for(int i=1;i<n;i++) C[i][i-1]=C[i][i+1]=-1;\n    }\n    LL ans=1,t;\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=i+1;j<=n;j++)\n            while(C[j][i])\n            {\n                t=C[i][i]/C[j][i];\n                for(int k=i;k<=n;k++) C[i][k]-=C[j][k]*t;\n                for(int k=i;k<=n;k++) swap(C[i][k],C[j][k]);\n                ans=-1;\n            }\n        ans*=C[i][i];\n    }\n    if(ans<0) ans=-ans;\n    cout<<ans<<endl;\n}\nint main()\n{\n    while(scanf(\"%d\",&n)!=EOF)\n    Matrix_tree();\n}\n\n```",
        "postTime": 1503538705,
        "uid": 21351,
        "name": "xuxinyu",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2144 \u3010[FJOI2007]\u8f6e\u72b6\u75c5\u6bd2\u3011"
    },
    {
        "content": "\u770b\u5230\u9898\u76ee\uff0c\u6211\u7684\u601d\u8def\u4e3b\u8981\u662f\uff1a\n\n> 1. \u8f93\u5165\u4e3a $1$ \u4e2a\uff0c\u8f93\u51fa\u4e5f\u4e3a $1$ \u4e2a $\\Rightarrow$ \u7b54\u6848\u4e4b\u95f4\u5b58\u5728\u5173\u7cfb\uff08\u9012\u63a8\uff09\n\n\u624b\u7b97\u4e2d\u2026\u2026\n```plain\n   n | 1 | 2 |  3 |  4 |  5  |  6  |  7  |  8 \n-----+---+---+----+----+-----+-----+-----+------\n ans | 1 | 5 | 16 | 45 | 121 | 320 | 841 | 2205\n```\n\n\uff08\u4e3a\u4ec0\u4e48\u4e0d\u7528 markdown \u7684\u8868\u683c\uff1f$luogu <\\!3.9\\!>$ \u7684 markdown \u8868\u683c\u5b9e\u5728\u592a\u4e11\u4e86\uff09\n\n> 2. \u5c1d\u8bd5\u53d1\u73b0\u89c4\u5f8b\n\n\u5947\u6570\u9879\uff1a\u5b8c\u5168\u5e73\u65b9\u6570  \n\u5076\u6570\u9879\uff1a\u524d\u4e00\u9879\u7684 $3$ \u500d \u51cf\u53bb \u524d\u4e8c\u9879 \u52a0\u4e0a $2$\n\n\u7136\u540e\u7ecf\u8fc7\u4e00\u5806\u63a8\u5bfc\u2026\u2026\n\n$f[i]=\\begin{cases}f[i-1]+f[i-2]&(i\\geqslant3)\\\\3&(i=2)\\\\1&(i=1)\\end{cases}$\n\n$ans[i]=\\begin{cases}f[i]^2&(i\\equiv 1 \\pmod{2})\\\\f[i]^2-4&(i\\equiv 0 \\pmod{2})\\end{cases}$\n\n\u7136\u540e\u2026\u2026\n\n\u5c31\u6ca1\u7136\u540e\u4e86\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u52a0\u4e0a\u9ad8\u7cbe\u5ea6\uff0c\u7136\u540e\u6109\u5feb\u5730 $AC$\u3002\n\n\u672c\u4eba\u6240\u7528\u9ad8\u7cbe\u5ea6\u6a21\u677f\uff1a[\u4f20\u9001\u95e8](https://www.luogu.org/paste/lwimhe43) \uff08\u652f\u6301\u50cf\u666e\u901a\u6574\u6570\u4e00\u6837\u4f7f\u7528\uff0c\u8f93\u5165\u8f93\u51fa\u652f\u6301 cin, cout\uff09\n\nAC\u4ee3\u7801\uff1a\n```\n/*************************************\n * problem:      P2144 [FJOI2007]\u8f6e\u72b6\u75c5\u6bd2.\n * user ID:      63720.\n * user name:    \u822a\u7a7a\u4fe1\u5965.\n * time:         2019-03-31.\n * language:     C++.\n * upload place: Luogu.\n*************************************/ \n\n#include <bits/stdc++.h>\nusing namespace std;\n\nstruct big_integer\n{\n    static const int base = 1000;\n    static const int width = 3;\n\n    vector<int> v;\n    bool is_negative;\n\n    big_integer(long long num = 0)\n    {\n        *this = num;\n        is_negative = false;\n    }\n\n    big_integer operator = (long long val)\n    {\n        v.clear();\n\n        if (val < 0)\n        {\n            val = -val;\n            is_negative = true;\n        }\n        do\n        {\n            v.push_back(val % base);\n            val /= base;\n        } while (val > 0);\n\n        return *this;\n    }\n\n    big_integer operator = (const string &str) \n    {\n        v.clear();\n\n        string str2 = str;\n        if (str2[0] == '-')\n        {\n            is_negative = true;\n            for (string::iterator i = str2.begin(); i < str2.end() - 1; i++)\n            {\n                *i = *(i + 1);\n            }\n            *(str2.end() - 1) = '\\0';\n            str2.resize(str2.length() - 1);\n        }\n\n        int cur, len = (str2.length() - 1) / width + 1;\n        for (int i = 0; i < len; i++)\n        {\n            int end = str2.length() - i * width;\n            int begin = max(0, end - width);\n            sscanf(str2.substr(begin, end - begin).c_str(), \"%d\", &cur);\n            v.push_back(cur);\n        }\n\n        return *this;\n    }\n\n    big_integer operator + (const big_integer &addend) const \n    {\n        big_integer sum;\n        sum.v.clear();\n\n        if (is_negative == true)\n        {\n            if (addend.is_negative == true) sum.is_negative = true;\n            else return addend - (-*this);\n        }\n        else if (addend.is_negative == true)\n        {\n            return *this - (-addend);\n        }\n\n        for (int i = 0, carry = 0; carry != 0 || i < v.size() || i < addend.v.size(); i++)\n        {\n            int cur = carry;\n            if (i < v.size()) cur += v[i];\n            if (i < addend.v.size()) cur += addend.v[i];\n            carry = cur / base;\n            cur %= base;\n            sum.v.push_back(cur);\n        }\n\n        return sum;\n    }\n\n    big_integer operator - (const big_integer &subtrahend) const \n    {\n        big_integer difference;\n        difference.v.clear();\n\n        if (is_negative == false && subtrahend.is_negative == false && *this < subtrahend)\n            return -(subtrahend - *this);\n        if (is_negative == true && subtrahend.is_negative == false)\n            return -(-*this + subtrahend);\n        else if (is_negative == false && subtrahend.is_negative == true)\n            return *this + (-subtrahend);\n        else if (is_negative == true && subtrahend.is_negative == true)\n            return -subtrahend - (-*this);\n\n        for (int i = 0, carry = 0; carry != 0 || i < v.size(); i++)\n        {\n            int cur = v[i] + carry;\n            if (i < subtrahend.v.size()) cur -= subtrahend.v[i];\n            if (cur >= 0) carry = 0;\n            else\n            {\n                carry = -1;\n                cur += base;\n            }\n            difference.v.push_back(cur);\n        }\n\n        for (int i = difference.v.size() - 1; i >= 0; i--)\n        {\n            if (difference.v[i] == 0) difference.v.resize(difference.v.size() - 1);\n            else break;\n        }\n        if (difference.v.size() == 0) difference.v.resize(1, 0);\n\n        return difference;\n    }\n\n    big_integer operator - () const \n    {\n        big_integer big_int = *this;\n        big_int.is_negative = !(is_negative);\n        return big_int;\n    }\n\n    big_integer operator * (const big_integer &multiplier) const\n    {\n        big_integer product;\n        product.v.clear();\n\n        if (is_negative != multiplier.is_negative) product.is_negative = true;\n\n        for (int i = 0; i < v.size(); i++)\n        {\n            for (int j = 0; j < multiplier.v.size(); j++)\n            {\n                if (i + j >= product.v.size()) product.v.resize(i + j + 1, 0);\n                product.v[i + j] += this->v[i] * multiplier.v[j];\n                if (product.v[i + j] >= base)\n                {\n                    if (i + j + 1 >= product.v.size()) product.v.resize(i + j + 1 + 1, 0);\n                    product.v[i + j + 1] += product.v[i + j] / base;\n                    product.v[i + j] %= base;\n                }\n            }\n        }\n\n        for (int i = product.v.size() - 1; i >= 0; i--)\n        {\n            if (product.v[i] == 0) product.v.resize(product.v.size() - 1);\n            else break;\n        }\n        if (product.v.size() == 0) product.v.resize(1, 0);\n\n        return product;\n    }\n\n    big_integer operator / (const big_integer &divisor) const // Division\n    {\n        big_integer divisor__ = divisor;\n        big_integer quotient = 0;\n\n        if (is_negative != (divisor < 0)) quotient.is_negative = true;\n\n        big_integer remainder = 0;\n        for (int i = v.size() - 1; i >= 0; i--)\n        {\n            remainder = remainder * base + v[i];\n\n            int lwr_bound = 0, upr_bound = base - 1, mid;\n            big_integer mid_bi;\n            while (lwr_bound <= upr_bound)\n            {\n                mid = (lwr_bound + upr_bound) / 2;\n                mid_bi = (long long)mid;\n                big_integer bi = remainder - mid_bi * divisor;\n                if (remainder - mid_bi * divisor < divisor && remainder - mid_bi * divisor >= 0) break;\n                else if (remainder - mid_bi * divisor >= divisor) lwr_bound = mid + 1;\n                else upr_bound = mid - 1;\n            }\n\n            quotient = quotient * base + mid_bi;\n            remainder = remainder - mid_bi * divisor;\n        }\n\n        for (int i = quotient.v.size() - 1; i >= 0; i--)\n        {\n            if (quotient.v[i] == 0) quotient.v.resize(quotient.v.size() - 1);\n            else break;\n        }\n        if (quotient.v.size() == 0) quotient.v.resize(1, 0);\n\n        return quotient;\n    }\n\n    big_integer operator % (const big_integer &divisor) const \n    {\n        big_integer quotient = *this / divisor;\n        big_integer remainder = *this - quotient * divisor;\n        return remainder;\n    }\n\n    big_integer operator += (const big_integer &addend)\n    {\n        *this = *this + addend;\n        return *this;\n    }\n\n    big_integer operator -= (const big_integer &subtrahend) \n    {\n        *this = *this - subtrahend;\n        return *this;\n    }\n\n    big_integer operator *= (const big_integer &multiplier) \n    {\n        *this = *this * multiplier;\n        return *this;\n    }\n\n    big_integer operator /= (const long long &divisor) \n    {\n        *this = *this / divisor;\n        return *this;\n    }\n\n    big_integer operator %= (const long long &divisor) \n    {\n        *this = *this / divisor;\n        return *this;\n    }\n\n    big_integer operator ++ () \n    {\n        big_integer addend = (long long)1;\n        *this = *this + addend;\n        return *this;\n    }\n\n    big_integer operator -- () \n    {\n        big_integer subtrahend = (long long)1;\n        *this = *this - subtrahend;\n        return *this;\n    }\n\n    big_integer operator ++ (int) \n    {\n        big_integer addend = (long long)1;\n        *this = *this + addend;\n        return *this;\n    }\n\n    big_integer operator -- (int) \n    {\n        big_integer subtrahend = (long long)1;\n        *this = *this - subtrahend;\n        return *this;\n    }\n\n    bool operator < (const big_integer &big_int) const \n    {\n        if (is_negative == true && big_int.is_negative == false) return true;\n        if (is_negative == false && big_int.is_negative == true) return false;\n        if (is_negative == true && big_int.is_negative == true)\n        {\n            big_integer big_int1, big_int2;\n            big_int1 = *this; big_int1.is_negative = false;\n            big_int2 = big_int; big_int2.is_negative = false;\n            return big_int2 < big_int1;\n        }\n\n        if (v.size() != big_int.v.size()) return v.size() < big_int.v.size();\n        for (int i = v.size() - 1; i >= 0; i--)\n        {\n            if (v[i] != big_int.v[i]) return v[i] < big_int.v[i];\n        }\n\n        return false;\n    }\n\n    bool operator > (const big_integer &big_int) const\n    {\n        return big_int < *this;\n    }\n\n    bool operator <= (const big_integer &big_int) const \n    {\n        return !(*this > big_int);\n    }\n\n    bool operator >= (const big_integer &big_int) const \n    {\n        return !(*this < big_int);\n    }\n\n    bool operator != (const big_integer &big_int) const \n    {\n        return *this < big_int || *this > big_int;\n    }\n\n    bool operator == (const big_integer &big_int) const \n    {\n        return !(*this != big_int);\n    }\n\n    friend istream &operator >> (istream &in, big_integer &big_int) \n    {\n        string str;\n        if (!(in >> str)) return in;\n        big_int = str;\n        return in;\n    }\n\n    friend ostream &operator << (ostream &out, big_integer &big_int)\n    {\n        if (big_int.is_negative == true) out << '-';\n        out << big_int.v.back();\n\n        for (int i = big_int.v.size() - 1 - 1; i >= 0; i--)\n        {\n            char str[base + 5];\n            sprintf(str, \"%0*d\", width, big_int.v[i]);\n            out << str;\n        }\n\n        return out;\n    }\n};\n\nint n;\n\nbig_integer f[107], ans;\n\nint main()\n{\n    cin >> n;\n    f[1] = 1;\n    f[2] = 3;\n    for (int i = 3; i <= n; i++) {\n        f[i] = f[i - 1] + f[i - 2];\n    }\n    ans = f[n] * f[n];\n    if ((n & 1) == 0) ans -= 4;\n    cout << ans;\n    return 0;\n}\n\n```",
        "postTime": 1554000938,
        "uid": 63720,
        "name": "brealid",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2144 \u3010[FJOI2007]\u8f6e\u72b6\u75c5\u6bd2\u3011"
    },
    {
        "content": "\u600e\u4e48pascal\u9898\u89e3\u8fd9\u4e48\u5c11\u554a\uff0c\u672c\u849f\u84bb\u4e5f\u6765\u8d21\u732e\u4e00\u7bc7\u5457~~~\n\n\u4e00\u770b\u8fd9\u9898\uff0c\u7b2c\u4e00\u60f3\u5230~~(\u6253\u8868)~~\u627e\u89c4\u5f8b\uff0c\n\n\u4e8e\u662f\u5c31\u5f00\u5fc3\u7684\u624b\u63a8\u4e86\u524d\u51e0\u4e2a\u7b54\u6848\u4e3a1 5 16 45 121...\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u5947\u6570\u9879\u662f\u5b8c\u5168\u5e73\u65b9\u6570\uff0c\u5076\u6570\u9879\u662f5\u7684\u500d\u6570\uff0c\n\n\u53c8\u53ef\u5f97\u524d\u4e24\u9879\u662f1\u548c3\u7684\u6590\u6ce2\u90a3\u5951\u6570\u5217\uff0c\u4e8e\u662f\u6709\u4e86\u9012\u63a8\u5f0f\n  \n  f[n]=f[n-1]+f[n-2]; \n\n  F[n]=F[n]^2-(1-n mod 2)*4\n  \n  \u5f53n=100\u65f6\u663e\u7136\u8981\u7206int64\uff0c\u4e8e\u662f\u8981\u5199\u9ad8\u7cbe\n  \n  ```pascal\n  \n uses math;\nvar\n  a,b,c,d,f:array[0..1000005] of longint;\n  i,j,n,k,m,la,lb,lc:longint;\nprocedure jia(p:longint); \u6590\u6ce2\u90a3\u5951\u6570\u5217\u7684\u52a0\u6cd5\uff0c\u75282\u4e2a\u6570\u7ec4\u8f6e\u6362\u5b58\u50a8\uff0c\u4e00\u4e2ad\u6570\u7ec4\u4e34\u65f6\u5b58\u50a8 \nvar\n  i,j,n,k,m:longint;\nbegin\n    fillchar(d,sizeof(d),0);\n    for i:=1 to max(la,lb) do\n    begin\n      d[i]:=d[i]+c[i]+b[i];\n      d[i+1]:=d[i] div 10;\n      d[i]:=d[i] mod 10;\n    end;\n    if odd(p) then\n    begin\n      lb:=lb+d[lb+1];\n      for i:=1 to lb do c[i]:=d[i];\n    end\n    else\n    begin\n      la:=la+d[la+1];\n      for i:=1 to la do b[i]:=d[i];\n    end;\n    if (b[la+1]<>0) then inc(la);\n    if (c[lb+1]<>0) then inc(lb);\n    lc:=max(la,lb);//d\u6570\u7ec4\u7684\u957f\u5ea6\u662fla,lb\u4e2d\u7684\u6700\u5927\u7684\u957f\u5ea6\n  end;\nprocedure cheng1();//\u5904\u7406c*f\nvar\n  i,j,n,k,m,x:longint;\nbegin\n  fillchar(d,sizeof(d),0);\n  for i:=1 to la do\n  begin\n    x:=0;\n    for j:=1 to lb do\n    begin\n      d[i+j-1]:=c[i]*f[j]+x+d[i+j-1];\n      x:=d[i+j-1] div 10;\n      d[i+j-1]:=d[i+j-1] mod 10;\n    end;\n    d[i+j]:=x;\n  end;\n  lc:=la+lb;\n  while (d[lc]=0)and(lc>1) do dec(lc);\nend;\nprocedure cheng();//\u5904\u7406b*f\u7684\u60c5\u51b5\nvar\n  i,j,n,k,m,x:longint;\nbegin\n  fillchar(d,sizeof(d),0);//d\u6570\u7ec4\u6e05\u96f6\n  for i:=1 to la do\n  begin\n    x:=0;\n    for j:=1 to lb do\n    begin\n      d[i+j-1]:=b[i]*f[j]+x+d[i+j-1];\n      x:=d[i+j-1] div 10;\n      d[i+j-1]:=d[i+j-1] mod 10;\n    end;\n    d[i+j]:=x;\n  end;\n  lc:=la+lb;\n  while (d[lc]=0)and(lc>1) do dec(lc);\nend;\nprocedure jian();//\u516c\u5f0f\u5f97\u53ea\u51cf4\nvar\n  i:longint;\nbegin\n  d[1]:=d[1]-4;\n  for i:=1 to lc do\n  begin\n    if d[i]<0 then\n    begin\n      d[i]:=d[i]+10;\n      dec(d[i+1]);\n    end;\n  end;\n  while (d[lc]=0)and(lc>1)  do dec(lc);\nend;\nbegin\n  readln(n);\n  la:=1;\n  lb:=1;//la,lb\u662fb,c\u6570\u7ec4\u7684\u957f\u5ea6\n  b[1]:=3;\n  c[1]:=1;\n  if n=1 then begin writeln(1); halt; end;\n  if n=2 then begin writeln(5); halt; end;\n  //\u6839\u636e\u63a8\u51fa\u6765\u7684\u516c\u5f0f\uff0c\u9700\u8981\u7279\u5224n=1,2\u7684\u60c5\u51b5\n  for i:=3 to n do\n  begin\n    if i mod 2=0 then\n    begin\n      jia(i);//\u52a0\u6cd5\n      for j:=1 to lc do f[j]:=b[j];\n      //f\u6570\u7ec4\u662f\u4e34\u65f6\u6570\u7ec4\uff0c\u6682\u5b58\u503c\n      lb:=lc;\n      cheng();//\u4e58\u6cd5\n      jian();//\u51cf\u6cd5\n    end else\n    begin\n      jia(i);\n      for j:=1 to lc do f[j]:=c[j];\n      la:=lc;\n      cheng1();\n    end;\n  end;\n  for j:=lc downto 1 do write(d[j]);\n  //\u8f93\u51fa,\u56e0\u4e3a\u7528\u4e86\u53cd\u5b58\uff0c\u6240\u4ee5\u8981\u5012\u5e8f\u8f93\u51fa\nend.\n\n```",
        "postTime": 1550538549,
        "uid": 10601,
        "name": "shuiyuhan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2144 \u3010[FJOI2007]\u8f6e\u72b6\u75c5\u6bd2\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9053\u9898\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u6253\u8868\u5373\u53ef\uff08\u6211\u662f\u8ba4\u771f\u7684\uff01\uff09\n\n\u9996\u5148\uff0c\u624b\u7b97\u51fa\u524d4\u4e2a\u7b54\u6848\u3002\n\n\u5c06\u5176\u8f93\u5165\u5230[\u8fd9\u4e2a\u7f51\u7ad9](http://oeis.org/)\u4e2d\u3002\n\n\u4f60\u627e\u5230\u7684\u7b2c\u4e00\u4e2a\u5e8f\u5217\u5c31\u662f[\u7b54\u6848\u5e8f\u5217](http://oeis.org/A004146)\u3002\n\n\u590d\u5236\u8fd9\u4e2a\u5e8f\u5217\u7684\u524d15\u4e2a\u6570\u3002\n\n\u7136\u540e\uff0c\u5c06\u8fd9\u5341\u4e94\u4e2a\u6570\u7c98\u8d34\uff08\u4e2d\u95f4\u6709\u7a7a\u683c\uff09\u5230[\u8fd9\u4e2a\u7f51\u7ad9](https://www.wolframalpha.com/)\n\u7684\u641c\u7d22\u6846\u4e2d\u3002\n\n\u70b9\u51fbEnter\uff0c\u7ffb\u5230\u5e95\u90e8\uff0c\u4f60\u5c31\u4f1a~~\u60ca\u5947\u5730~~\u53d1\u73b0\u8fd9\u4e2a\u7f51\u7ad9\u7ed9\u4f60\u4e86\u6253\u8868\u7684\u673a\u4f1a\uff01\n\n\u591a\u6b21\u70b9\u51fb\u56fe\u8868\u53f3\u4e0a\u89d2\u7684`More`\u952e\u4f60\u5c31\u53ef\u4ee5\u83b7\u5f97100\u4e2a\u5566\uff01\n\n\u70b9\u51fb\u5de6\u4e0b\u89d2\u7684`Plaintext`\u590d\u5236\u5230\u7f16\u7a0b\u8f6f\u4ef6\u4e2d\uff0c\u7f16\u4e00\u4e2a\u5c0f\u7a0b\u5e8f\u5e2e\u52a9\u6bcf\u4e2a\u6570\u52a0\u4e0a\u4e00\u4e2a\u53cc\u5f15\u53f7\uff0cC++\u4ee3\u7801\u5982\u4e0b\uff08\u52a0\u5f15\u53f7\uff09:\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n#define MAXN 100100\nchar ch[MAXN];\nint main(){\n    freopen(\"1.txt\", \"w\", stdout); // \u8f93\u51fa\u52301.txt\u4e2d\n    cin.getline(ch, 100100);\n    int len = strlen(ch);\n    for(int i = 0; i < len; i)\n        if(ch[i] >= '0' && ch[i] <= '9'){\n            printf(\"\\\"\"); // \u52a0\u5f15\u53f7\n            while(ch[i] >= '0' && ch[i] <= '9') printf(\"%c\", ch[i]), i++;\n            printf(\"\\\"\");\n        } else printf(\"%c\", ch[i]), i++;\n    return 0;\n}\n```\n\n\u7136\u540e\u5c31\u7b80\u5355\u5566\u3002\u3002\u3002",
        "postTime": 1546603978,
        "uid": 54628,
        "name": "eros1on",
        "ccfLevel": 0,
        "title": "\u9898\u89e3P2144\u8f6e\u72b6\u75c5\u6bd2"
    },
    {
        "content": "\u51b3\u5fc3\u5199\u4e00\u7bc7\u771f\u6b63\u6613\u61c2\u7684\u9898\u89e3\u3002\u7b2c\u4e00\u9875\u7684\u51e0\u4e2a\u5927\u4f6c\u4eec\u5199\u7684\u6709\u70b9\u6666\u6da9\u96be\u61c2\uff0c\u5236\u88c1\u4e86\u4e00\u4e0b\u4ec0\u4e48\u90fd\u4e0d\u60f3\u5c31\u8981\u770b\u9898\u89e3\u7684\u6211\u3002\u81ea\u5df1\u60f3\u8fd9\u79cd\u9898\u771f\u7684\u975e\u5e38\u6709\u5fc5\u8981\u3002\n\n\u7ed9\u81ea\u5df1\u603b\u7ed3\uff0c\u7ed9\u5927\u5bb6\u8bb2\u89e3\u4e00\u4e0b\u89e3\u4e00\u9053\u8fd9\u79cd\u7c7b\u578b\u7684\u9898\u7684\u89e3\u9898\u6b65\u9aa4\u3002\n\n## Step 1 \u6a21\u578b\u8f6c\u5316\n\u6211\u4eec\u628a\u4e2d\u5fc3\u70b9\u72ec\u7acb\u51fa\u53bb\u3002\u91cd\u70b9\u5173\u6ce8\u5916\u5708\u70b9\u3002\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u5916\u5708\u7684\u70b9\u672c\u8d28\u4e0a\u662f\u88ab\u5206\u6210\u4e86\u4e00\u4e9b\u8054\u901a\u5757\u3002 \u800c\u6bcf\u4e00\u4e2a\u8054\u901a\u5757\u4e2d**\u6709\u4e14\u4ec5\u6709**\u4e00\u4e2a\u70b9\u4e0e\u4e2d\u95f4\u76f8\u8fde\u3002\n\n\u4e8e\u662f\u6211\u4eec\u7684\u95ee\u9898\u5c31\u8f6c\u5316\u5b8c\u4e86\u3002\u73b0\u5728\u6211\u4eec\u8981\u9488\u5bf9\u7684\uff0c\u5c31\u662f\u5916\u5708\u70b9\u3002\n\n## Step 2 \u5bfb\u627e\u5408\u9002\u7684\u7b97\u6cd5\n\u8fd9\u4e00\u6b65\u91cc\u7ecf\u9a8c\u6210\u5206\u6bd4\u8f83\u591a\u3002\n\n\u8fd9\u9053\u9898\u611f\u89c9\u50cf\u662f\u4e00\u4e2a\u73af\u4e0a$dp$\u95ee\u9898\u3002\u90a3\u4e48\u6b64\u65f6\uff0c\u6211\u4eec\u5c31\u5e94\u8be5\u6765\u6d45\u6d45\u5730\u8003\u8651\u4e00\u4e0b\u9012\u63a8\u5f0f\u3002\u5982\u679c\u611f\u89c9\u4e0d\u5bf9\uff0c\u5c31\u5e94\u8be5\u53bb\u601d\u8003\u522b\u7684\u7b97\u6cd5\u3002\u4f46\u7279\u522b\u6ce8\u610f\uff0c\u5c31\u7b97\u4f60\u8ba4\u4e3a\u4e00\u4e2a\u7b97\u6cd5\u662f\u4e0d\u80fd\u89e3\u51b3\u8fd9\u9053\u9898\u7684\uff0c\u4e5f\u8bf7\u5728\u65f6\u95f4\u5145\u8db3\u7684\u65f6\u5019\u4ed4\u4ed4\u7ec6\u7ec6\u5730\u601d\u8003\u5b83\u3002\u6709\u53ef\u80fd\u4f1a\u6709\u610f\u5916\u7684\u6536\u83b7\u3002\n\n\u975e\u5e38\u5e78\u8fd0\u5730\uff0c\u6211\u4eec\u53d1\u73b0\u6b64\u9898\u4f3c\u4e4e\u53ef\u4ee5\u8fd9\u6837\u89e3\u51b3\u3002\n## Step 3 \u6df1\u5165\u601d\u8003\n\n\u9996\u5148\uff0c\u73af\u4e0a$dp$\u7684\u5957\u8def\u5c31\u662f\u65ad\u73af\u6210\u94fe\u3002\u6211\u4eec\u8003\u8651\u5148\u4e0d\u8fde\u63a5\u8fb9$1-n$\u3002\n\n\u6211\u4eec\u5b9a\u4e49 $dp_i$ \u8868\u793a\u524d $i$ \u4e2a\u70b9\u8fde\u63a5\u7684\u4e0d\u540c\u65b9\u6848\u6570\u3002\n\n\u90a3\u4e48\u6211\u4eec\u679a\u4e3e$(i, i-1, i-2, ..., i-j+1)$\u8fd9\u4e00\u4e2a\u8fde\u901a\u5757\u7684**\u957f\u5ea6**$j$\u3002\u6211\u4eec\u8003\u8651\u5230\u4e2d\u95f4\u7684\u70b9\u53ef\u4ee5\u8fde\u63a5\u8fd9\u4e2a\u8fde\u901a\u5757\u4e2d\u4efb\u4f55\u4e00\u4e2a\u70b9\uff0c\u6709$j$\u79cd\u65b9\u6848\u3002\u7531\u6211\u4eec\u7684\u679a\u4e3e\u65b9\u5f0f\uff0c$i-j+1$\u548c$i-j$\u4e4b\u95f4\u4e00\u5b9a\u662f\u65ad\u5f00\u7684\uff08\u5426\u5219\u8fde\u901a\u5757\u957f\u5ea6\u5c31\u662f$j+1$\u4e86\uff09\u3002\u6b64\u65f6\u524d\u9762$i-j$\u4e2a\u70b9\u5c31\u6709$dp_{i-j}$\u79cd\u8fde\u63a5\u65b9\u5f0f\u3002\u90a3\u4e48\u5c31\u6709\u8f6c\u79fb\u65b9\u7a0b$dp_i = \\sum\\limits_{j=1}^{i}dp_{i-j} * j$\u3002\u8fd9\u6837\u7684\u6700\u7ec8\u65b9\u6cd5\u6570\u5c31\u662f$dp_n$\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u5b58\u5728$1-n$\u8fde\u8fb9\u7684\u60c5\u51b5\u3002\u8fd9\u662f\u672c\u9898\u7684\u96be\u70b9\u3002\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u5bf9\u4e8e\u5305\u542b$1-n$\u8fd9\u4e2a\u8054\u901a\u5757\uff0c\u4e0d\u7ba1\u5b83\u591a\u5927\uff0c\u90fd\u662f\u4e00\u79cd\u65b0\u65b9\u6848.\n\n\u8fd9\u542f\u793a\u6211\u4eec\u679a\u4e3e$1-n$\u8054\u901a\u5757\u7684\u5927\u5c0f$sz$\u3002\u90a3\u4e48\u5269\u4e0b\u4e86$n-sz$\u4e2a\u70b9\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\u5305\u542b$1-n$\uff0c\u5927\u5c0f\u4e3a$sz$\u7684\u8054\u901a\u5757\u4e00\u5171\u6709$sz$\u4e2a\u3002\u6bcf\u4e00\u79cd\u65b9\u6848\u4e0b\uff0c\u4e2d\u95f4\u70b9\u90fd\u53ef\u4ee5\u548c\u8fd9\u4e2a\u8054\u901a\u5757\u4e2d\u4efb\u4f55\u4e00\u4e2a\u70b9\u8fde\u8fb9\uff0c\u5171\u6709$sz$\u4e2d\u65b9\u6cd5\u3002\u5269\u4f59$n-sz$\u4e2a\u70b9\u7684\u65b9\u6848\u6570\u5c31\u662f$dp_{n-sz}$\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u5927\u5c0f\u4e3a$sz$\u7684\u65b9\u6cd5\u6570\u5c31\u662f$sz^2*dp_{n-sz}$\n\n\u90a3\u4e48\u5c31\u53ef\u4ee5\u7684\u5230\u6700\u7ec8\u7684\u7ed3\u679c\u4e86\u3002\n\n##  Step 4 \u7ec6\u8282\u5b9e\u73b0\n\u6211\u4eec\u7c97\u7565\u4f30\u8ba1\uff0c\u53d1\u73b0\u6700\u7ec8\u7ed3\u679c\u53ef\u80fd\u4f1a\u7206ll\u3002\n\u4e8e\u662f\u8981\u4f7f\u7528\u9ad8\u7cbe\u5ea6\u6765\u5b9e\u73b0\u8fd9\u9898\u3002\n\n\u4ee3\u7801\u975e\u5e38\u7b80\u5355\uff0c\u4e0d\u4e88\u8d58\u8ff0\u3002",
        "postTime": 1580178043,
        "uid": 55078,
        "name": "YLWang",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2144 \u3010[FJOI2007]\u8f6e\u72b6\u75c5\u6bd2\u3011"
    },
    {
        "content": "\u672c\u7bc7\u4e3b\u8981\u8bb2\u8be5\u9898\u9012\u63a8\u5f0f\u7684\uff08\u7b80\u7565\uff09\u8bc1\u660e\n\n\u524d\u7f6e\u77e5\u8bc6\uff1aMatrix-Tree\u5b9a\u7406\u3001\u884c\u5217\u5f0f\u76f8\u5173\u77e5\u8bc6\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c(cnblogs)](https://www.cnblogs.com/xuyixuan/p/11317006.html)\n\n---\n\u8bc1\u660e\uff1a\n\n\u6211\u4eec\u4ee4\u8f6e\u72b6\u75c5\u6bd2\u5706\u5fc3\u7f16\u53f7\u4e3a1\uff0c\u5706\u73af\u4e0a\u70b9\u7f16\u53f7\u4ece2~n+1\n\n\u5219\u53ef\u4ee5\u5f97\u51fa\u65e0\u5411\u56fe\u7684\u5ea6\u6570\u77e9\u9635D\u548c\u90bb\u63a5\u77e9\u9635E\n\nD=\n$\\begin{bmatrix}n&0&0&0&0&\\cdots&0&0&0&0\\\\0&3&0&0&0&\\cdots&0&0&0&0\\\\0&0&3&0&0&\\cdots&0&0&0&0\\\\0&0&0&3&0&\\cdots&0&0&0&0\\\\0&0&0&0&3&\\cdots&0&0&0&0\\\\\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\ddots&\\vdots&\\vdots&\\vdots&\\vdots\\\\0&0&0&0&0&\\cdots&3&0&0&0\\\\0&0&0&0&0&\\cdots&0&3&0&0\\\\0&0&0&0&0&\\cdots&0&0&3&0\\\\0&0&0&0&0&\\cdots&0&0&0&3\\\\\\end{bmatrix}$\nE=\n$\\begin{bmatrix}0&1&1&1&1&\\cdots&1&1&1&1\\\\1&0&1&0&0&\\cdots&0&0&0&1\\\\1&1&0&1&0&\\cdots&0&0&0&0\\\\1&0&1&0&1&\\cdots&0&0&0&0\\\\1&0&0&1&0&\\cdots&0&0&0&0\\\\\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\ddots&\\vdots&\\vdots&\\vdots&\\vdots\\\\1&0&0&0&0&\\cdots&0&1&0&0\\\\1&0&0&0&0&\\cdots&1&0&1&0\\\\1&0&0&0&0&\\cdots&0&1&0&1\\\\1&1&0&0&0&\\cdots&0&0&1&0\\\\\\end{bmatrix}$\n\n\u518d\u5f97\u5230\n\n\u57fa\u5c14\u970d\u592bKirchhoff\u77e9\u9635 K=\n$\\begin{bmatrix}n&-1&-1&-1&-1&\\cdots&-1&-1&-1&-1\\\\-1&3&-1&0&0&\\cdots&0&0&0&-1\\\\-1&-1&3&-1&0&\\cdots&0&0&0&0\\\\-1&0&-1&3&-1&\\cdots&0&0&0&0\\\\-1&0&0&-1&3&\\cdots&0&0&0&0\\\\\\vdots&\\vdots&\\vdots&\\vdots&\\vdots&\\ddots&\\vdots&\\vdots&\\vdots&\\vdots\\\\-1&0&0&0&0&\\cdots&3&-1&0&0\\\\-1&0&0&0&0&\\cdots&-1&3&-1&0\\\\-1&0&0&0&0&\\cdots&0&-1&3&-1\\\\-1&-1&0&0&0&\\cdots&0&0&-1&3\\\\\\end{bmatrix}$\n\n\u7136\u540e\u6211\u4eec\u8981\u6c42K\u7684\u4ee3\u6570\u4f59\u5b50\u5f0f\u7684\u503c\uff0c\u663e\u7136\u662f\u5c06\u5e26\u6709n\u7684\u90a3\u4e00\u884c\uff0c\u90a3\u4e00\u5217\uff08\u5373\u7b2c\u4e00\u884c\uff0c\u7b2c\u4e00\u5217\uff09\u53bb\u6389\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u6c42n\u9636\u884c\u5217\u5f0fA=\n$\\begin{vmatrix}3&-1&0&0&\\cdots&0&0&0&-1\\\\-1&3&-1&0&\\cdots&0&0&0&0\\\\0&-1&3&-1&\\cdots&0&0&0&0\\\\0&0&-1&3&\\cdots&0&0&0&0\\\\\\vdots&\\vdots&\\vdots&\\vdots&\\ddots&\\vdots&\\vdots&\\vdots&\\vdots\\\\0&0&0&0&\\cdots&3&-1&0&0\\\\0&0&0&0&\\cdots&-1&3&-1&0\\\\0&0&0&0&\\cdots&0&-1&3&-1\\\\-1&0&0&0&\\cdots&0&0&-1&3\\\\\\end{vmatrix}$\n\u7684\u503c\u4e86\n\n\u5bf9\u4e8eA\uff0c\u663e\u7136\u4e0d\u80fd\u7528$n^3$\u7684\u9ad8\u65af\u6d88\u5143\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u63a2\u7a76A\u7684\u6027\u8d28\u3002\n\n\u5c06A\u7684\u7b2c\u4e00\u884c\u53d8\u6362\u5230\u6700\u540e\u4e00\u884c\uff0c\u5f97\u5230B=\n$\\begin{vmatrix}-1&3&-1&0&\\cdots&0&0&0&0\\\\0&-1&3&-1&\\cdots&0&0&0&0\\\\0&0&-1&3&\\cdots&0&0&0&0\\\\0&0&0&-1&\\cdots&0&0&0&0\\\\\\vdots&\\vdots&\\vdots&\\vdots&\\ddots&\\vdots&\\vdots&\\vdots&\\vdots\\\\0&0&0&0&\\cdots&-1&3&-1&0\\\\0&0&0&0&\\cdots&0&-1&3&-1\\\\-1&0&0&0&\\cdots&0&0&-1&3\\\\3&-1&0&0&\\cdots&0&0&0&-1\\\\\\end{vmatrix}$\n\n\u5148\u6839\u636e\u884c\u5217\u5f0f\u7684\u6027\u8d28\u5f97\u5230$A=(-1)^{n-1}\\times B$\n\n\u6211\u4eec\u53d1\u73b0\u9664\u4e86\u5de6\u4e0b\u89d2\u6709\u4e09\u4e2a\u6570\u5b57\u5916\uff0cB\u5df2\u7ecf\u662f\u4e00\u4e2a\u4e0a\u4e09\u89d2\u884c\u5217\u5f0f\uff0c\u63a5\u4e0b\u6765\u662f\u8981\u6d88\u53bb\u5de6\u4e0b\u89d2\u7684\u4e09\u4e2a\u6570\u5b57\n\n\u5148\u6d88\u7b2cn-1\u884c\uff08\u5012\u6570\u7b2c\u4e8c\u884c\uff09\n\n\u5047\u8bbe\u73b0\u5728\u5728\u6d88\u7b2ci\u4f4d\uff0c\u8bbe$F_i$\u8868\u793a\u8fd9\u4e00\u884c\u7684\u7b2ci\u4e2a\u6570\uff0c$G_i$\u8868\u793a\u8fd9\u4e00\u884c\u7b2ci+1\u4e2a\u6570\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5c06B\u7684\u7b2ci\u884c$\\times F_i$\u52a0\u5230\u8fd9\u4e00\u6765\uff0c\u5c31\u53ef\u6d88\u53bb\u7b2ci\u4f4d\u3002\u56e0\u4e3a\u7b2ci\u884c-1\u540e\u9762\u4e00\u5b9a\u662f3\uff0c\u6240\u4ee5\u7b2ci+1\u4f4d$+3\\times F_i$\u540c\u7406\uff0c\u7b2ci+2\u4f4d$+(-F_i)$\u3002\n\n\u5373\n$\\begin{cases}F_{i+1}=G_i+3\\times F_i\\\\G_{i+1}=-F_i\\\\\\end{cases}$\n\n\u7531\u7b2c\u4e8c\u4e2a\u5f0f\u5b50\u63a8\u51fa$G_i=-F_{i-1}$\u5e26\u4eba\u7b2c\u4e00\u4e2a\u5f0f\u5b50\u4e2d\uff0c\u5f97\u5230$F_{i+1}=3\\times F_i-F_{i-1}$\uff0c\u540c\u65f6\u4e5f\u53ef\u5f97\u5230$G_{i+1}=3\\times G_i-G_{i-1}$\n\n\u7136\u540e\u53ef\u4ee5\u5feb\u901f\u5730\u5c06\u7b2cn-1\u884c\u6d88\u6210$\\begin{bmatrix}0&0&0&0&\\cdots&0&0&F_{n-1}-1&G_{n-1}+3\\end{bmatrix}$ \u4e86\n\n\u540c\u6837\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u6765\u6d88\u7b2cn\u884c\n\u8bbe\u7b2ci\u4f4d\u4e3a$H_i$,\u7b2ci+1\u4f4d\u4e3a$L_i$\n\u53ef\u5f97\u65b9\u7a0b\n$\\begin{cases}H_{i+1}=L_i+3\\times H_i\\\\L_{i+1}=-H_i\\\\\\end{cases}$\n\n\u89e3\u5f97$H_{i+1}=3\\times H_i-H_{i-1}$;$L_{i+1}=3\\times L_i-L_{i-1}$\n\n\u5c06\u7b2cn\u884c\u6d88\u6210$\\begin{bmatrix}0&0&0&0&\\cdots&0&0&H_{n-1}&L_{n-1}-1\\end{bmatrix}$\n\n\u8bbe$F_{n-1}-1=f;G_{n-1}+3=g;H_{n-1}=h;L_{n-1}-1=l;$\n\n\u5219B=\n$\\begin{vmatrix}-1&3&-1&0&\\cdots&0&0&0&0\\\\0&-1&3&-1&\\cdots&0&0&0&0\\\\0&0&-1&3&\\cdots&0&0&0&0\\\\0&0&0&-1&\\cdots&0&0&0&0\\\\\\vdots&\\vdots&\\vdots&\\vdots&\\ddots&\\vdots&\\vdots&\\vdots&\\vdots\\\\0&0&0&0&\\cdots&-1&3&-1&0\\\\0&0&0&0&\\cdots&0&-1&3&-1\\\\0&0&0&0&\\cdots&0&0&f&g\\\\0&0&0&0&\\cdots&0&0&h&l\\\\\\end{vmatrix}$=$(-1)^{n-2}\\times \\begin{vmatrix}f&g\\\\h&l\\\\\\end{vmatrix}$\n\n\u6240\u4ee5$A=(-1)^{n-1}\\times B=(-1)^{2n-3}\\times \\begin{vmatrix}f&g\\\\h&l\\\\\\end{vmatrix}=-f\\times l+g\\times h$\n\n\u518d\u63a8\u4e00\u63a8F,G,H,L,\u53ef\u4ee5\u770b\u51fa\n$H_{i-1}=L_{i}=F_{i}=G_{i+1}$\n\n\u6700\u540e\u5c31\u53ef\u4ee5\u63a8\u51fa$Ans(n)=3\\times Ans(n-1)-Ans(n-2)+2$\u4e86\n\n\u5982\u679c\u63a8\u4e0d\u51fa\uff0c\u4e5f\u53ef\u4ee5\u6c42\u51fa$F_{i-1},F_{i},F_{i+1}$\u518d\u6765\u6c42\u7b54\u6848\n\n---\n\u8bc1\u660e\u7ed3\u675f\u4e86\uff0c\u5982\u679c\u6709\u9519\u8bef\uff0c\u6b22\u8fce\u6307\u6b63\n\n\u6700\u540e\u653e\u4e00\u4e0b\u4ee3\u7801\n\n```\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nint n;\nstruct Number {\n\tint len;\n\tint num[1000];\n\tNumber() {\n\t\tlen=0;\n\t\tmemset(num,0,sizeof(num));\n\t}\n\tvoid operator =(const Number x) {\n\t\tlen=x.len;\n\t\tfor (register int i=1;i<=len;++i) num[i]=x.num[i];\n\t}\n\tvoid operator +=(const Number x) {\n\t\tlen=std::max(len,x.len);\n\t\tfor (register int i=1;i<=len;++i) {\n\t\t\tnum[i]=num[i]+x.num[i];\n\t\t\tif (num[i]>=10) num[i]-=10,++num[i+1];\n\t\t}\n\t\tif (num[len+1]) ++len;\n\t}\n\tvoid operator -=(const Number x) {\n\t\tint xx=std::min(len,x.len);\n\t\tfor (register int i=1;i<=xx;++i) {\n\t\t\tnum[i]=num[i]-x.num[i];\n\t\t\tif (num[i]<0) num[i]+=10,--num[i+1];\n\t\t}\n\t\twhile (!num[len]) --len;\n\t}\n\tNumber operator *(const int& x) {\n\t\tNumber res;\n\t\tfor (register int i=1;i<=len;++i) {\n\t\t\tres.num[i]+=num[i]*3;\n\t\t\tres.num[i+1]+=res.num[i]/10;\n\t\t\tres.num[i]=res.num[i]%10;\n\t\t}\n\t\tres.len=len;\n\t\tif (res.num[len+1]) ++res.len;\n\t\treturn res;\n\t}\n\tvoid print() {\n\t\tfor (register int i=len;i;--i) printf(\"%d\",num[i]);\n\t\tputs(\"\");\n\t}\n} x,y,z,_2;\nint main() {\n\tscanf(\"%d\",&n);\n\tif (n==1) puts(\"1\");\n\telse if (n==2) puts(\"5\");\n\telse {\n\t\t_2.len=1; _2.num[1]=2;\n\t\tx.len=x.num[1]=1;\n\t\ty.len=1; y.num[1]=5;\n\t\tfor (register int i=3;i<=n;++i) {\n\t\t\tz=y*3; z-=x; z+=_2;\n\t\t\tx=y; y=z;\n\t\t}\n\t\tz.print();\n\t}\n} \n```",
        "postTime": 1565155752,
        "uid": 10602,
        "name": "xuyixuan",
        "ccfLevel": 0,
        "title": "P2144 [FJOI2007]\u8f6e\u72b6\u75c5\u6bd2"
    },
    {
        "content": "\u8fd9\u9053\u9898\u9700\u8981\u7528\u9ad8\u7cbe~~\uff08\u5e9f\u8bdd\uff0c\u8c01\u90fd\u77e5\u9053\uff09~~\n\n\u4e8e\u662f\u6211\u7528Python\u5199\u4e86\u4e00\u4e2a\u6253\u8868\u7a0b\u5e8f\uff1a\n```\nf=[0,1,3]\nddd=3\nwhile ddd<=100 :\n    f.append(f[ddd-1]+f[ddd-2])\n    ddd=ddd+1\nddd=1\nwhile ddd<=100 :\n    print(f[ddd]**2-4*((ddd+1)%2))\n    print(\"\\n\")\n    ddd=ddd+1\n```\n\u53c8\u5199\u4e86\u4e00\u4e2a\u6253\u8868\u7528\u673a\u5668\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n\tint n=100;\n\tfreopen(\"cout.txt\",\"w\",stdout);\n\tfreopen(\"cin.txt\",\"r\",stdin);\n\tcout<<\"int a[\"<<n<<\"]={\";\n\tn--;\n\twhile(n--)\n\t{\n\t\tstring a;\n\t\tcin>>a;\n\t\tcout<<(char)34;\n\t\tcout<<a<<(char)34<<',';\n\t}\n\tstring a;\n\tcin>>a;\n\tcout<<(char)34;\n\tcout<<a<<(char)34;\n\tcout<<\"};\";\n\tfclose(stdin);\n\tfclose(stdout);\n\treturn 0;\n}\n```\n\u7136\u540e\u4f1a\u6709\uff1a\n```\nint a[100]={};\n```\n\u52a0\u5de5\u4e00\u4e0b\uff0c\u6210\u4e86\u6700\u7ec8\u4ee3\u7801\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\nstring a[101]={};\nint main()\n{\n\tint n;\n\tcin>>n;\n\tcout<<a[n];\n\treturn 0;\n}\n```\n\u8fd9\u9053\u9898\u5c31\u5b8c\u4e86\uff0c~~\u5168\u7a0b\u6253\u8868~~\u3002",
        "postTime": 1550493226,
        "uid": 165676,
        "name": "PRXOR",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2144 \u3010[FJOI2007]\u8f6e\u72b6\u75c5\u6bd2\u3011"
    },
    {
        "content": "### [\u5f00\u5934\u5c0f\u5e7f\u544a\uff1a\u81ea\u5df1\u505a\u7684\u4e00\u4e2a\u6a21\u677f\u5e93OwO](https://www.luogu.org/blog/29354/Templet)\n------------\n### \u601d\u8def\uff1a\n\u9996\u5148~~\u770b\u9898\u89e3~~\u81ea\u5df1\u63a8\u51fa\u9012\u63a8\u5f0f\uff08\u849f\u84bb\u81ea\u5df1\u63a8\u7684\u65f6\u5019\u5e76\u6ca1\u6709\u6ce8\u610f\u5230\u90a3\u4e2a\u662f\u6590\u6ce2\u90a3\u5951\u7684\u5c0f\u4fee\u6539\uff09\n\n\u7a81\u7136\u53d1\u73b0\u8fd9\u9053\u9898\u597d\u50cf\u8981\u6253\u9ad8\u7cbeqwq\n\n\u4f46\u662f\u53c8\u7a81\u7136\u60f3\u5230__int128\u662f\u4e0d\u60f3\u6253\u9ad8\u7cbe\u53c8\u53ef\u4ee5\u9a97\u5f88\u591a\u5206\u641e\u4e0d\u597d\u80fdA\u7684\u597d\u4e1c\u897f\uff01\n\n\u6211\u4eec\u7528double\u53ef\u4ee5\u7528\u79d1\u5b66\u8ba1\u6570\u6cd5\u8868\u793a\uff0c\u6211\u4eec\u7528\u5b83\u6765\u7b97\u4e00\u4e0b100\u4f4d\u7684\u6590\u6ce2\u90a3\u5951\u5230\u5e95\u6709\u591a\u5927\uff1a\n\n$3.54224848179262*10^{20}$\n\n\u5982\u679c\u6211\u4eec\u8981\u7b97\u6590\u6ce2\u90a3\u5951\u7684\u5e73\u65b9\uff0c\u8fd9\u4e2a\u4e1c\u897f\u7528__int128\u5dee\u4e00\u70b9\u70b9\u5c31\u80fd\u8868\u793a\u4e86qwq\u3002\n\n\u4e8e\u662f\u62b1\u7740\u6570\u636e\u6c34\u7684\u5fc3\u6001\u4ea4\u4e86\uff1a90WA\n\n\u6ca1\u529e\u6cd5\uff0c\u8fd8\u662f\u53ea\u80fd\u6253\u9ad8\u7cbe\u4e86qwq\u3002\u3002\u3002~~\u5148\u9a9790~~\n\n\u867d\u7136\u4e0a\u9762\u7684\u8bdd\u770b\u8d77\u6765\u5f88\u5e9f\u3002\u3002\u4f46\u662f\u4e5f\u544a\u8bc9\u4e86\u6211\u4eec\uff0c\u5982\u679c\u6570\u636e\u521a\u521a\u597d\u80fd\u5361\u591f__int128\uff0c\u4e0d\u59a8\u5148\u7b97\u4e00\u4e0b\u4f4d\u6570\uff0c\u7136\u540e\u8bd5\u4e00\u8bd5\uff0c\u7f3a\u70b9\u53ea\u662f\u8981\u624b\u5199\u8f93\u51fa\u7f62\u4e86\u3002\n\u5f53\u7136\uff0cint128\u8fd8\u53ef\u4ee5\u7528\u5728\u4e00\u4e9b\u610f\u60f3\u4e0d\u5230\u7684\u5730\u65b9\uff0c\u4f8b\u5982\u9f9f\u901f\u4e58\u5c31\u53ef\u4ee5\u7528int128\u4f18\u5316\u6210$O(1)$\u4e86\uff08int128\u53ef\u4ee5\u53d6\u6a21\u4e0d\u7528\u624b\u5199\uff09\uff0c\u867d\u7136\u4e5f\u53ef\u4ee5\u7528\u62c6\u6570\u7684\u529e\u6cd5\u5728long long\u4e0b\u4f18\u5316\u5230O(1)\u5c31\u662f\u4e86\uff08\u5982\u679c\u6709\u5174\u8da3\u4e86\u89e3\u53ef\u4ee5\u79c1\u4fe1\u6211\uff09\n\n## CODE\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n\nconst int MAXN = 105;\n\n__int128 f[MAXN] = {0, 1, 3};\n\n__int128 a, b, ans;\nint n;\n\ninline void Print(__int128 x)\n{\n    if (x > 9)\n        Print(x / 10);\n    putchar(x % 10 + '0');\n\n    return;\n}\n\nsigned main(void)\n{\n    cin >> n;\n    for (int i = 3; i <= n; i++)\n        f[i] = f[i - 1] + f[i - 2];\n\n    if (n == \"naive!\")\n    {\n        puts(\"\u4e0d\u63a8\u8350\u6253\u8868\u901a\u8fc7\u6b64\u9898\uff0c\u4ee3\u7801\u4ec5\u4ec5\u5c55\u73b0__int128\u7684\u5e94\u7528\");\n        return 0;\n    }\n\n    ans = f[n] * f[n] - 4 * (n % 2 == 0);\n\n    Print(ans);\n\n    return 0;\n}\n```\n",
        "postTime": 1544702145,
        "uid": 29354,
        "name": "CodyTheWolf",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2144 \u3010[FJOI2007]\u8f6e\u72b6\u75c5\u6bd2\u3011"
    },
    {
        "content": "\u665a\u4e0a\u6563\u6b65\u60f3\u51fa\u6765\u7684\u4e00\u4e2a\u601d\u8def\uff1a\n\n\u8fd9\u9053\u9898\u5b9e\u9645\u4e0a\u5c31\u662f\u8981\u5c06\u5706\u5708\u5916\u56f4\u7684n\u4e2a\u70b9\u5212\u5206\u6210k\u4e2a\u8054\u901a\u5feb\uff08k<=n\uff09\u3002\u4e2d\u5fc3\u7684\u70b9\u4e0e\u6bcf\u4e2a\u8054\u901a\u5757\u6709\u4e14\u4ec5\u6709\u4e00\u6761\u8fde\u7ebf\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5212\u5206\uff0c\u6240\u80fd\u5f62\u6210\u7684\u72b6\u6001\u6570\u4e3a\u6bcf\u4e2a\u8054\u901a\u5757\u4e2d\u70b9\u6570\u7684\u4e58\u79ef\u3002\n\n\u6211\u4eec\u9996\u5148\u6765\u8003\u8651\u628a\u4e00\u6761\u94fe\u8fdb\u884c\u8fd9\u6837\u7684\u5212\u5206\u6240\u80fd\u5f97\u5230\u7684\u603b\u72b6\u6001\u6570\u3002\u5bf9\u4e8e\u957f\u5ea6\u4e3an\u7684\u94fe\uff0c\u8bbe f[n]\u4e3a\u5176\u5212\u5206\u540e\u7684\u603b\u72b6\u6001\u6570\uff0c\u679a\u4e3e\u5176\u6700\u540e\u4e00\u6761\u94fe\u7684\u957f\u5ea6\uff0c\u5c06\u5176\u957f\u5ea6\u4e58\u4e0a\u4e4b\u524d\u7684\u70b9\u5212\u5206\u540e\u7684\u603b\u72b6\u6001\u6570\u5373\u53ef\u6c42\u89e3\u3002\u5373f[n]=\u2211i*f[n-i]\u3002\n\n\u7531\u4e8e\u672c\u9898\u662f\u5728\u73af\u4e2d\u8fdb\u884c\u5212\u5206\uff0c\u6545\u53ef\u679a\u4e3e\u73af\u4e2d\u7f16\u53f7\u4e3a1\u7684\u70b9\u6240\u5728\u8054\u901a\u5757\u7684\u70b9\u6570\uff0c\u5728\u7b54\u6848\u4e2d\u52a0\u4e0ai^2f[n-i]\u5373\u53ef\u3002\n\nPython \u4ee3\u7801\u5982\u4e0b\uff1a\n```python\nx=[1]\ndef apd(nu):\n\ta=nu;\n\tfor i in range(len(x)):\n\t\ta+=(i+1)*x[len(x)-i-1]\n\tx.append(a)\n\nn=int(input())\nfor i in range(1,n):\n\tapd(i+1)\nans=0\nfor i in range(n):\n\tans+=i*i*x[n-i-1]\nans+=n*n\nprint(ans)\n\n```",
        "postTime": 1539447419,
        "uid": 113188,
        "name": "yxchar",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2144 \u3010[FJOI2007]\u8f6e\u72b6\u75c5\u6bd2\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u4e2a\u6bd4\u8f83\u65b0\u9896\u7684\u89e3\u6cd5\u5427\uff01\n\n\u76f4\u63a5\u4e0a\u77e9\u9635\u6811\u5b9a\u7406\u4e5f\u662f\u53ef\u4ee5\u8fc7\u7684\uff08\u77e9\u9635\u6811\u5b9a\u7406\uff1a\u8bbe\u65e0\u5411\u56fe$G$\u7684\u5ea6\u6570\u77e9\u9635\u4e3a$D$\uff0c\u90bb\u63a5\u77e9\u9635\u4e3a$A$\uff0c$C=D-A$\uff0c\u90a3\u4e48\u5c06$C$\u7684\u7b2c$i$\u884c\u7b2c$i$\u5217\uff08$i$\u53ef\u4ee5\u4efb\u610f\u9009\u62e9\uff09\u53bb\u6389\u4ee5\u540e\u7684\u884c\u5217\u5f0f\u5c31\u662f$G$\u7684\u751f\u6210\u6811\u4e2a\u6570\u3002\uff09\uff01\n\n\u5f53\u7136\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e9b\u6280\u5de7\u3002\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5c06\u7b54\u6848\u5bf9\u4e00\u4e2a$int$\u8303\u56f4\u7684\u7d20\u6570\u53d6\u6a21\uff0c\u4e8e\u662f\u5229\u7528\u77e9\u9635\u6811\u5b9a\u7406\u5c31\u53ef\u4ee5\u5728$O(n^3)$\u7684\u65f6\u95f4\u5185\u5f97\u51fa\u7b54\u6848\u3002\n\n\u53ef\u662f\u8fd9\u9053\u9898\u4e0d\u8ba9\u53d6\u6a21\uff0c\u600e\u4e48\u529e\u5462\uff0c\u4e8e\u662f\u6211\u4eec\u60f3\u5230\u4e86\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\u3002\n\n\u6ca1\u9519\uff0c\u6211\u4eec\u53ea\u8981\u5bf9\u82e5\u5e72\u4e2a\u7d20\u6570\u53d6\u6a21\uff0c\u518d\u7528\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\u5c06\u7b54\u6848\u5408\u5e76\u5c31\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\u5bf9\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u6570\u53d6\u6a21\u4ee5\u540e\u7684\u7ed3\u679c\uff0c\u5f53\u8fd9\u4e2a\u6a21\u6570\u5927\u4e8e\u7b54\u6848\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\u7684\u51c6\u786e\u503c\u3002\n\n\u7136\u800c\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\u4f3c\u4e4e\u6d89\u53ca\u5230\u4e86\u53d6\u6a21\u548c\u6c42\u9006\u5143\u4e4b\u7c7b\u7684\u64cd\u4f5c...\u8fd9\u6837\u9ad8\u7cbe\u5ea6\u4f3c\u4e4e\u5f88\u9ebb\u70e6\uff0c\u4f46\u662f\u6211\u4eec\u662f\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u6280\u5de7\u907f\u514d\u8fd9\u6837\u7684\u8fd0\u7b97\u3002\n\n\u5148\u5217\u51fa\u6211\u4eec\u9700\u8981\u7684\u6240\u6709\u9ad8\u7cbe\u5ea6\u8fd0\u7b97\uff1a\u9ad8\u7cbe\u5ea6\u52a0\u51cf\u6cd5\uff0c\u9ad8\u7cbe\u5ea6\u4e58\u4ee5\u5355\u7cbe\u5ea6\uff0c\u5927\u5c0f\u6bd4\u8f83\uff0c\u56e0\u6b64\u4e0b\u6587\u7684\u4e58\u6cd5\u90fd\u6307\u9ad8\u7cbe\u5ea6\u4e58\u4ee5\u5355\u7cbe\u5ea6\u3002\n\n\u56de\u987e\u4e00\u4e0b\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\u7684\u8fc7\u7a0b\uff1a\n\n\u6211\u4eec\u5df2\u77e5$k$\u4e2a\u6a21\u7ebf\u6027\u65b9\u7a0b\u7ec4\uff1a\n\n$$x \\equiv a_1(\\mod m_1)$$\n$$x \\equiv a_2(\\mod m_2)$$\n$$...$$\n$$x \\equiv a_k(\\mod m_k)$$\n\n\u8bbe$M=\\prod_{i=1}^k m_i$\uff0c$M_i=\\frac{M}{m_i}$\uff0c\u90a3\u4e48\uff1a\n$$Ans=(\\sum_{i=1}^k a_i*M_i*M_i^{-1})\\mod M$$\n\n\u5176\u4e2d$M_i^{-1}$\u8868\u793a$M_i$\u5728\u6a21$m_i$\u610f\u4e49\u4e0b\u7684\u9006\u5143\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c$a_i$\u548c$M_i^{-1}$\u90fd\u662f\u53ef\u4ee5\u7528\u5355\u7cbe\u5ea6\u76f4\u63a5\u8ba1\u7b97\u7684\uff0c\u4e8e\u662f\u53ea\u8981\u5c06$M_i$\u8ba1\u7b97\u51fa\u4ee5\u540e\u518d\u4e58\u4ee5\u8fd9\u4e24\u4e2a\u6570\u5373\u53ef\u3002\u53ef\u662f\u8fd9\u91cc\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u6211\u4eec\u8981\u5c06\u7ed3\u679c\u5bf9$M$\u53d6\u6a21\uff0c\u600e\u4e48\u529e\u5462\uff0c\u53ef\u4ee5\u53d1\u73b0\u552f\u4e00\u9700\u8981\u4fdd\u7559\u9ad8\u7cbe\u7684\u7684$M_i$\u6709\u4e00\u4e2a\u5f88\u597d\u7684\u6027\u8d28\uff0c\u5c31\u662f$M_i*m_i \\equiv 0(\\mod M)$\uff0c\u56e0\u6b64\u5c06$a_i$\u4e0e$M_i^{-1}$\u76f8\u4e58\u4ee5\u540e\u6a21$m_i$\u518d\u548c$M_i$\u76f8\u4e58\u7ed3\u679c\u4e5f\u662f\u4e0d\u53d8\u7684\uff0c\u6240\u4ee5\u8fd9\u4e2a\u548c\u5f0f\u4e2d\u7684\u6bcf\u4e00\u9879\u90fd\u5c0f\u4e8e$M$\uff0c\u6211\u4eec\u53ea\u8981\u9010\u4e00\u76f8\u52a0\u5e76\u5224\u65ad\u662f\u5426\u5927\u4e8e\u7b49\u4e8e$M$\uff0c\u5982\u679c\u662f\u7684\u8bdd\u51cf\u53bb\u4e00\u4e2a$M$\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u81f3\u4e8e\u7d20\u6570\u7684\u9009\u62e9\uff0c\u6211\u89c9\u5f97\u9009\u62e9$7$\u4e2a\u5728$10^9$\u5de6\u53f3\u7684\u7d20\u6570\u5c31\u8db3\u591f\u4e86\u3002\n\n\u4e8e\u662f\u6574\u4f53\u590d\u6742\u5ea6\u662f$O(n^3+\\log Ans)$\uff0c\u901a\u8fc7\u4e86\u8fd9\u9053\u9898\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#define register\nusing std::min;\nusing std::max;\nusing std::swap;\nusing std::vector;\ntypedef long long ll;\nstruct __int65536\n{\n\tll base=1000000000;\n\tvector<ll> v;\n\tinline void out()\n\t{\n\t\tif(!v.size())\n\t\t\treturn void(putchar('0'));\n\t\tregister int i;\n\t\tprintf(\"%lld\",v[(int)v.size()-1]);\n\t\tfor(i=(int)v.size()-2;i>=0;i--)\n\t\t\tprintf(\"%09lld\",v[i]);\n\t\treturn;\n\t}\n\tinline void update()\n\t{\n\t\tregister int i;\n\t\tfor(i=0;i<(int)v.size()-1;i++)\n\t\t{\n\t\t\tv[i+1]+=v[i]/base;v[i]%=base;\n\t\t\tif(v[i]<0)\n\t\t\t\tv[i]+=base,v[i+1]--;\n\t\t}\n\t\twhile(v[(int)v.size()-1]>=base)\n\t\t\tv.push_back(v[(int)v.size()-1]/base),v[(int)v.size()-2]%=base;\n\t\twhile(v[(int)v.size()-1]==0)\n\t\t\tv.pop_back();\n\t\treturn;\n\t}\n\tinline bool operator>=(__int65536 th)\n\t{\n\t\tif(v.size()!=th.v.size())\n\t\t\treturn v.size()>th.v.size();\n\t\tregister int i;\n\t\tfor(i=(int)v.size()-1;i>=0;i--)\n\t\t\tif(v[i]!=th.v[i])\n\t\t\t\treturn v[i]>th.v[i];\n\t\treturn 1;\n\t}\n\tinline __int65536 operator=(int th)\n\t{\n\t\tv.resize(1);\n\t\tv[0]=th;\n\t\tupdate();\n\t\treturn *this;\n\t}\n\tinline __int65536 operator+(__int65536 th)\n\t{\n\t\t__int65536 res;\n\t\tregister int i;\n\t\tres.v.resize((int)max(v.size(),th.v.size()));\n\t\tfor(i=0;i<(int)min(v.size(),th.v.size());i++)\n\t\t\tres.v[i]=v[i]+th.v[i];\n\t\tfor(i=(int)v.size();i<(int)max(v.size(),th.v.size());i++)\n\t\t\tres.v[i]=v[i];\n\t\tfor(i=(int)th.v.size();i<(int)max(v.size(),th.v.size());i++)\n\t\t\tres.v[i]=th.v[i];\n\t\tres.update();\n\t\treturn res;\n\t}\n\tinline __int65536 operator+=(__int65536 th)\n\t{\n\t\tregister int i;\n\t\tv.resize((int)max(v.size(),th.v.size()));\n\t\tfor(i=0;i<(int)th.v.size();i++)\n\t\t\tv[i]+=th.v[i];\n\t\tupdate();\n\t\treturn *this;\n\t}\n\tinline __int65536 operator-=(__int65536 th)\n\t{\n\t\tregister int i;\n\t\tv.resize((int)max(v.size(),th.v.size()));\n\t\tfor(i=0;i<(int)th.v.size();i++)\n\t\t\tv[i]-=th.v[i];\n\t\tupdate();\n\t\treturn *this;\n\t}\n\tinline __int65536 operator*(int th)\n\t{\n\t\t__int65536 res;\n\t\tregister int i;\n\t\tres.v.resize((int)v.size());\n\t\tfor(i=0;i<(int)res.v.size();i++)\n\t\t\tres.v[i]*=th;\n\t\tres.update();\n\t\treturn res;\n\t}\n\tinline __int65536 operator*=(int th)\n\t{\n\t\tregister int i;\n\t\tfor(i=0;i<(int)v.size();i++)\n\t\t\tv[i]*=th;\n\t\tupdate();\n\t\treturn *this;\n\t}\n};\nconst int prime[7]={998244353,998244389,998244391,1000000007,1000000009,1000000021,1000000033};\nint mod;\ninline int add(int a,int b)\n{\n\tif((a+=b)>=mod)\n\t\ta-=mod;\n\treturn a;\n}\ninline int sub(int a,int b)\n{\n\tif((a-=b)<0)\n\t\ta+=mod;\n\treturn a;\n}\ninline int mul(int a,int b)\n{\n\treturn (ll)a*b%mod;\n}\ninline int qpow(int a,int b)\n{\n\tint res=1;\n\tfor(;b;a=mul(a,a),b>>=1)\n\t\tif(b&1)\n\t\t\tres=mul(res,a);\n\treturn res;\n}\nconst int N=105;\nint n;\nint a[N][N];\ninline int det(int n)\n{\n\tint res=1,now;\n\tregister int i,j,k;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tfor(now=i;now<=n;now++)\n\t\t\tif(a[now][i])\n\t\t\t\tbreak;\n\t\tif(now>n)\n\t\t\treturn 0;\n\t\tif(now!=i)\n\t\t{\n\t\t\tres=sub(0,res);\n\t\t\tfor(j=i;j<=n;j++)\n\t\t\t\tswap(a[i][j],a[now][j]);\n\t\t}\n\t\tnow=qpow(a[i][i],mod-2);\n\t\tfor(j=i+1;j<=n;j++)\n\t\t{\n\t\t\ta[j][i]=mul(a[j][i],now);\n\t\t\tfor(k=i+1;k<=n;k++)\n\t\t\t\ta[j][k]=sub(a[j][k],mul(a[j][i],a[i][k]));\n\t\t\ta[j][i]=0;\n\t\t}\n\t}\n\tfor(i=1;i<=n;i++)\n\t\tres=mul(res,a[i][i]);\n\treturn res;\n}\ninline int solve(int x)\n{\n\tregister int i,j;\n\tmod=prime[x];\n\tfor(i=1;i<=n;i++)\n\t\tfor(j=1;j<=n;j++)\n\t\t\ta[i][j]=0;\n\tfor(i=1;i<n;i++)\n\t\ta[i][i+1]=sub(a[i][i+1],1),a[i+1][i]=sub(a[i+1][i],1);\n\ta[n][1]=sub(a[n][1],1);a[1][n]=sub(a[1][n],1);\n\tfor(i=1;i<=n;i++)\n\t\ta[i][i]=3;\n\treturn det(n);\n}\nint ans[7];\n__int65536 final,b,Mod;\nsigned main()\n{\n\tint cur;\n\tregister int i,j;\n\tscanf(\"%d\",&n);\n\tMod=1;\n\tfor(i=0;i<7;i++)\n\t\tans[i]=solve(i),Mod*=prime[i];\n\tfor(i=0;i<7;i++)\n\t{\n\t\tmod=prime[i];\n\t\tcur=1;b=1;\n\t\tfor(j=0;j<7;j++)\n\t\t\tif(i!=j)\n\t\t\t\tcur=mul(cur,prime[j]),b*=prime[j];\n\t\tb*=mul(ans[i],qpow(cur,mod-2));\n\t\tfinal+=b;\n\t\tif(final>=Mod)\n\t\t\tfinal-=Mod;\n\t}\n\tfinal.out();\n\tputchar('\\n');\n\treturn 0;\n}\n```",
        "postTime": 1535802411,
        "uid": 7253,
        "name": "Mr_Spade",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2144 \u3010[FJOI2007]\u8f6e\u72b6\u75c5\u6bd2\u3011"
    },
    {
        "content": "## \u9996\u5148\u6253\u6807\u627e\u89c4\u5f8b\uff1a\n\n```cpp\n1:1-------------->1^2;\n2:5-------------->3^2-4;\n3:16------------>4^2;\n4:45------------>7^2-4;\n5:121---------->11^2;\n6:320---------->18^2-4;\n```\nThen,\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u89c4\u5f8b\uff1a\n\n- **\u8be5\u5e8f\u5217\u5404\u9879\u5e95\u6570\u7684\u6027\u8d28\u4e0e\u6590\u6ce2\u90a3\u5951\u6570\u5217\u76f8\u4f3c\uff0c\u5747\u6ee1\u8db3f[i]=f[i-1]+f[i-2] (i>=3)**(\u5ea6\u5a18\u8bf4\uff1a\u8be5\u5e8f\u5217\u53eb[\u5362\u5361\u65af\u6570\u5217](http://baike.baidu.com/item/%E5%8D%A2%E5%8D%A1%E6%96%AF%E6%95%B0%E5%88%97#5))\n\n- **\u5728\u8be5\u5e8f\u5217\u5185\u5bf9\u4e8e\u7b2ci\u6570\u6765\u8bf4\uff1a\u82e5i\u5947\u6570\uff0c\u5219\u6570\u5b57\u4e3a\u4e3af[i]^2\uff0c\u53cd\u4e4b\u4e3af[i]^2-4**\n\n- \u518d\u89c2\u5bdf\u6570\u636e\u8303\u56f4n<=100\uff0c\u6240\u4ee5\u8981\u9ad8\u7cbe\u641e\u4e00\u4e0b\uff1b\n\n\u7136\u540e\uff0c\u5c31AC\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nstruct nond{\n    int a[50000];\n}f[110];\nlong long n;\nnond add(nond A,nond B){//\u9ad8\u7cbe\u52a0\u6cd5 \n    for(int i=1;i<=A.a[0];i++)\n        A.a[i]+=B.a[i];\n    for(int i=1;i<=A.a[0];i++){\n        A.a[i+1]+=A.a[i]/10;\n        A.a[i]=A.a[i]%10;\n    }\n    if(A.a[A.a[0]+1]!=0)    A.a[0]+=1;\n    return A;\n}\nnond axa(nond A){//\u9ad8\u7cbe\u5e73\u65b9 \n    nond C;\n    for(int i=0;i<=A.a[0]*2;i++)\n        C.a[i]=0;\n    for(int i=1;i<=A.a[0];i++){\n        int k=0;\n        for(int j=1;j<=A.a[0];j++){\n            C.a[i+j-1]+=A.a[i]*A.a[j]+k;\n            k=C.a[i+j-1]/10;\n            C.a[i+j-1]%=10;\n        }\n        C.a[i+A.a[0]]=k;\n    }\n    C.a[0]=A.a[0]+A.a[0];\n    while(C.a[C.a[0]]==0&&C.a[0]>0)\n        C.a[0]--;\n    return C;\n}\nnond mins(nond A){//\u9ad8\u7cbe\u51cf4 \n    if(A.a[1]>=4)    A.a[1]-=4;\n    else{\n        A.a[1]=10+A.a[1]-4;\n        A.a[2]-=1;\n    }\n    return A;\n}\nint main(){\n    cin>>n;\n    f[1].a[0]=1;f[2].a[0]=1;//f[i].a[0]\u5b58\u50a8\u7b2ci\u4e2a\u6570\u7684\u4f4d\u6570\u3002 \n    f[1].a[1]=1;f[2].a[1]=3;//f[i].a[1]~f[i].a[f[i].a[0]]\u5012\u5e8f\u5b58\u50a8\u6570\u5b57\uff1b \n    for(int i=3;i<=n;i++)\n        f[i]=add(f[i-1],f[i-2]);\n    f[n]=axa(f[n]);\n    if(n%2==0)    f[n]=mins(f[n]);\n    for(int i=f[n].a[0];i>=1;i--)\n        cout<<f[n].a[i];    \n}\n```\n",
        "postTime": 1500191121,
        "uid": 21719,
        "name": "\u6ca7\u6f9c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2144 \u3010[FJOI2007]\u8f6e\u72b6\u75c5\u6bd2\u3011"
    },
    {
        "content": "# **\u65e0\u8111\u4e09\u7ef4DP**\n\n\u9996\u5148\u53ef\u4ee5\u60f3\u5230\uff0c**\u4ec5\u5916\u73af\u4e0a\u6bcf\u4e00\u4e2a\u70b9\u5404\u5f15\u51fa\u4e00\u6761\u8fb9**\u4e14\u8fb9\u4e92\u4e0d\u91cd\u590d\uff0c\u8fd9\u6837\u5b50\u662f\u53ef\u4ee5\u6784\u6210\u4e00\u4e2a\u201c\u8f6e\u72b6\u75c5\u6bd2\u201d\u7684\uff08n+1\u4e2a\u70b9n\u6761\u8fb9\uff0c\u800c\u4e14\u6bcf\u8fb9\u5fc5\u5b9a\u8fde\u901a\u4e92\u4e0d\u8fde\u901a\u7684\u4e24\u5757\uff09\n\n\u5bf9\u4e8e\u5916\u73af\u4e0a\u4e00\u70b9\uff0c\u5728\u4e0d\u8003\u8651\u91cd\u590d\u65f6\uff0c\u5176\u5f15\u51fa\u8fb9\u6709\u4e09\u79cd\u65b9\u5f0f\uff1a\u987a\u65f6\u9488\u5411\u540e\uff0c\u9006\u65f6\u9488\u5411\u524d\uff0c\u6307\u5411\u4e2d\u5fc3\u3002\n\n\u53ef\u4ee5\u8bc1\u660e\uff1a\u5bf9\u4e8e\u6bcf\u4e00\u70b9\uff0c\u5176\u4e0d\u540c\u4e24\u79cd\u51fa\u8fb9\u65b9\u5f0f\u4e00\u5b9a\u5bf9\u5e94\u7740\u4e24\u4e2a\u4e92\u4e0d\u91cd\u590d\u7684\u89e3\u96c6\u3002\n\n\u5411\u524d\u3001\u540e\u51fa\u8fb9\u4e0e\u5411\u4e2d\u5fc3\u51fa\u8fb9\u663e\u7136\u4e0d\u540c\uff0c\u552f\u4e00\u8ba9\u6211\u4eec\u6709\u6240\u987e\u8651\u7684\u662f\u5411\u524d\u4e0e\u5411\u540e\u5f15\u8fb9\u662f\u5426\u53ef\u80fd\u662f\u91cd\u590d\u53ef\u884c\u89e3\u3002\n\n\u8bc1\u660e\u5982\u4e0b\uff1a\n\n\n\n.................................................\n\n\u5047\u5b9a\u539f\u6709\u4e00\u5408\u6cd5\u65b9\u6848\uff0c\u4e14\u8be5\u65b9\u6848\u4e2d\u6709\u4e00\u70b9**\u70b9n\u51fa\u8fb9\u4e0d\u6307\u5411\u70b9n-1**\u3002\n\n\u8bc1\u660e\uff1a\u201c\u5c06\u7b2cn\u53f7\u70b9\u7684\u8fb9\u6539\u4e3a\u6307\u5411n-1\u53f7\u70b9\uff0c\u5219\u5f97\u5230\u7684\u65b9\u6848\u4e0e\u539f\u65b9\u6848\u5fc5\u7136\u4e0d\u540c\u3002\u201d\n\n\u57fa\u672c\u60c5\u51b5\uff1a\u82e5\u7b2cn-1\u70b9\u5f15\u51fa\u7684\u8fb9\u4e0d\u6307\u5411\u5f53\u524d\u70b9\uff0c\u90a3\u4e48\u663e\u7136\u662f\u4e24\u79cd\u4e0d\u540c\u7684\u89e3\u3002\uff08\u539f\u5148\u4e24\u70b9\u95f4\u65e0\u8fb9\uff0c\u73b0\u5728\u6709\u8fb9\uff09\n\n\u82e5\u7b2cn-1\u53f7\u70b9\u5f15\u51fa\u7684\u8fb9\u6307\u5411\u7b2cn\u53f7\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u628a\u8fd9\u6761\u8fb9\u6539\u5411\u4ee5\u4f7f\u5f97\u65b9\u6848\u5408\u6cd5\u3002**\u82e5\u6307\u5411\u4e2d\u5fc3\u70b9**\uff0c\u663e\u7136\u4e5f\u662f\u4e0d\u540c\u7684\u65b9\u6848\uff08\u539f\u65b9\u6848\u4e2d\u4e2d\u5fc3\u70b9\u4e0en-1\u70b9\u65e0\u8fde\u8fb9\uff0c\u800c\u65b0\u65b9\u6848\u4e2d\u6709\u8fde\u8fb9\uff09\uff1b**\u82e5\u6307\u5411n-2\u53f7\u70b9**\uff0c\u5219\u8981\u6c42\u8bc1\u660e\uff1a\u201c\u5c06\u7b2cn-1\u53f7\u70b9\u7684\u51fa\u8fb9\u6307\u5411\u7b2cn-2\u53f7\u70b9\uff0c\u5219\u5f97\u5230\u7684\u65b9\u6848\u4e0e\u539f\u65b9\u6848\u5fc5\u7136\u4e0d\u540c\u3002\u201d\u663e\u7136**\u547d\u9898\u7684\u6a21\u7f29\u51cf\u4e861**\u3002\n\n\u7531\u4e8e\u201c\u8f6e\u72b6\u75c5\u6bd2\u201d\u5916\u73af\u7684\u8fb9\u4e0d\u80fd\u6210\u73af\uff0c\u6545**\u4e00\u5b9a\u5b58\u5728\u4e00\u70b9\u5176\u8fb9\u4e0d\u6307\u5411\u5176\u524d\u9a71**\u3002\u6545\u8be5\u547d\u9898\u6700\u7ec8\u4e00\u5b9a\u5f52\u7eb3\u4e3a\u57fa\u672c\u60c5\u51b5\u3002\n\n\u5f52\u7eb3\u5f97\u8bc1\u3002\n\n.................................................\n\n\n\u6709\u4e86\u8fd9\u4e2a\u8bc1\u660e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8bf4\u660e\u5982\u4e0bdp\u6240\u5f97\u5230\u7684\u89e3\u662f\u4e0d\u91cd\u53e0\u7684\u4e86\u3002\n\n\u4ee4dp[n][s1][s2]\u8868\u793a\uff1a\u53ea\u8003\u8651\u5728\u524dn\u4e2a\u70b9\u4e2d\uff0c\u70b9n\u7684\u51fa\u8fb9\u60c5\u51b5\u4e3as1\uff0c\u70b91\u7684\u51fa\u8fb9\u60c5\u51b5\u4e3as2\uff0c\u6240\u53ef\u884c\u7684\u65b9\u6848\u6570\u3002\u5176\u4e2ds1,s2\u2208[0,2]\uff0c\u5bf9\u5e94\u7740\u4e09\u79cd\u51fa\u8fb9\u60c5\u51b5\u3002\n\n\u7531\u4e8e\u201c\u4e00\u4e2a\u70b9\u4e0d\u540c\u7684\u51fa\u8fb9\u65b9\u5f0f\u5fc5\u7136\u5bf9\u5e94\u7740\u4e0d\u540c\u7684\u89e3\u201d\uff0c\u6240\u4ee5\u5bf9\u4e8e\u4e0d\u540c\u7684s2,s2\uff0c\u5176dp\u6240\u8ba1\u5165\u7684\u89e3\u4e00\u5b9a\u4e0d\u91cd\u53e0\u3002\n\n\u663e\u7136dp[n][][]\u9700\u8981\u7279\u6b8a\u5904\u7406\uff08\u8fd9\u91cc\u7684n\u6307\u9898\u610f\u4e2d\u7684n\uff09\uff0c\u56e0\u4e3a\u6211\u4eec\u5728\u4e3a\u5b83\u5f15\u51fa\u8fb9\u65f6\u9700\u8981\u8003\u8651\u5230\u7b2c1\u4e2a\u70b9\u7684\u51fa\u8fb9\u60c5\u51b5\u3002\n\n\u6ce8\u610f\u8fd9\u6837\u4f1a\u7b97\u51fa\u6765\u4e24\u79cd\u4e0d\u548c\u4e2d\u5fc3\u76f8\u8fde\u7684\u65e0\u6548\u60c5\u51b5\uff08\u4e24\u4e2a\u76f8\u540c\u7684\u73af\uff09\u3002\n\n\u5177\u4f53dp\u65b9\u7a0b\u5e94\u8be5\u4e0d\u96be\u60f3\u5230\uff0c\u53ef\u4ee5\u53c2\u7167\u4ee3\u7801\u3002\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n\n#include <algorithm>\n\n#define TOT(x, s) (dp[x][0][s] + dp[x][1][s] + dp[x][2][s])\n#define HEADTOT(x, s) (dp[x][s][0] + dp[x][s][1] + dp[x][s][2])\n\nconst int maxn(112);\nclass bigint {//\u9ad8\u7cbe\n\tpublic:\n\t\tbigint() : end(1) { memset(val, 0, sizeof(val)); }\n\t\tbigint operator+(const bigint& v) const {\n\t\t\tbigint ret;\n\t\t\tret.end = std::max(end, v.end);\n\t\t\tfor (int i(0); i != ret.end; ++i) {\n\t\t\t\tret.val[i] += val[i] + v.val[i];\n\t\t\t\tif (ret.val[i] >= 10) ret.val[i] -= 10, ++ret.val[i + 1];\n\t\t\t}\n\t\t\tif (ret.val[ret.end]) ++ret.end;\n\t\t\treturn ret;\n\t\t}\n\t\tbigint& operator-=(int v) {\n\t\t\tint pos(0);\n\t\t\tval[pos] -= v;\n\t\t\twhile (val[pos] < 0) {\n\t\t\t\tval[pos] += 10, --val[++pos];\n\t\t\t}\n\t\t\tif (!val[end - 1]) --end;\n\t\t\treturn *this;\n\t\t}\n\t\tbigint& operator=(const bigint& v) {\n\t\t\tfor (int i(v.end); i < end; ++i) val[i] = 0;\n\t\t\tfor (int i(0); i != v.end; ++i) val[i] = v.val[i];\n\t\t\tend = v.end;\n\t\t\treturn *this;\n\t\t}\n\t\tbigint& operator=(int v) {\n\t\t\tfor (int i(0); i != end; ++i) val[i] = 0;\n\t\t\tif (v == 0) {\n\t\t\t\tend = 1;\n\t\t\t\treturn *this;\n\t\t\t} end = 0;\n\t\t\twhile (v) {\n\t\t\t\tval[end++] = v % 10;\n\t\t\t\tv /= 10;\n\t\t\t}\n\t\t\treturn *this;\n\t\t}\n\t\tvoid print() const {\n\t\t\tfor (int i(end - 1); ~i; --i) printf(\"%d\", val[i]);\n\t\t}\n\t\tint val[112], end;\n};\n\nint n;\nbigint dp[maxn][3][3], ans;//0 -> back, 1 -> front, 2 -> center\nint main() {\n\tscanf(\"%d\", &n);\n\tif (n == 1) {\n\t\tprintf(\"1\\n\"); return 0;\n\t} else if (n == 2) {\n\t\tprintf(\"5\\n\"); return 0;\n\t}\n\tdp[0][0][0] = 1, dp[0][1][1] = 1, dp[0][2][2] = 1;\n\tfor (int i(1); i != n - 1; ++i) {\n\t\tdp[i][0][0] = dp[i - 1][0][0] + dp[i - 1][2][0];\n\t\tdp[i][0][1] = dp[i - 1][0][1] + dp[i - 1][2][1];\n\t\tdp[i][0][2] = dp[i - 1][0][2] + dp[i - 1][2][2];\n\t\tdp[i][2][0] = dp[i][1][0] = TOT(i - 1, 0);\n\t\tdp[i][2][1] = dp[i][1][1] = TOT(i - 1, 1);\n\t\tdp[i][2][2] = dp[i][1][2] = TOT(i - 1, 2);\n\t}\n\tint p(n - 2);\n\tans = ans + HEADTOT(p, 0) + HEADTOT(p, 2) + TOT(p, 1) + TOT(p, 2) + TOT(p, 0) + TOT(p, 1) + TOT(p, 2);\n    //\u8fd9\u6bb5ans\u7684\u516c\u5f0f\u53ef\u4ee5\u62c6\u6210\u4e09\u6bb5\uff0c\u5bf9\u5e94\u4e86\u4e09\u79cd\u51fa\u8fb9\u60c5\u51b5\n\tans -= 2;\n\tans.print(), printf(\"\\n\");\n\treturn 0;\n}\n\n```",
        "postTime": 1558013257,
        "uid": 163894,
        "name": "kyel",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2144 \u3010[FJOI2007]\u8f6e\u72b6\u75c5\u6bd2\u3011"
    },
    {
        "content": "\u6253\u8868\u9898\u7adf\u7136\u6ca1\u6709\u6253\u8868\u7a0b\u5e8f\uff01  \n\u6253\u8868\u601d\u8def\uff1a\u679a\u4e3e\u9009\u8fb9\uff0c\u5e76\u67e5\u96c6\u7ef4\u62a4\u526a\u679d  \n\u590d\u6742\u5ea6O\uff08\u7b54\u6848\uff09\uff08\u5b9e\u9645\u4e0a\u591a\u5f88\u591a\uff09\n```cpp\n#pragma GCC optimize(2)\n#pragma GCC optimize(3)\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"inline\")\n#pragma GCC optimize(\"-fgcse\")\n#pragma GCC optimize(\"-fgcse-lm\")\n#pragma GCC optimize(\"-fipa-sra\")\n#pragma GCC optimize(\"-ftree-pre\")\n#pragma GCC optimize(\"-ftree-vrp\")\n#pragma GCC optimize(\"-fpeephole2\")\n#pragma GCC optimize(\"-ffast-math\")\n#pragma GCC optimize(\"-fsched-spec\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC optimize(\"-falign-jumps\")\n#pragma GCC optimize(\"-falign-loops\")\n#pragma GCC optimize(\"-falign-labels\")\n#pragma GCC optimize(\"-fdevirtualize\")\n#pragma GCC optimize(\"-fcaller-saves\")\n#pragma GCC optimize(\"-fcrossjumping\")\n#pragma GCC optimize(\"-fthread-jumps\")\n#pragma GCC optimize(\"-funroll-loops\")\n#pragma GCC optimize(\"-fwhole-program\")\n#pragma GCC optimize(\"-freorder-blocks\")\n#pragma GCC optimize(\"-fschedule-insns\")\n#pragma GCC optimize(\"inline-functions\")\n#pragma GCC optimize(\"-ftree-tail-merge\")\n#pragma GCC optimize(\"-fschedule-insns2\")\n#pragma GCC optimize(\"-fstrict-aliasing\")\n#pragma GCC optimize(\"-fstrict-overflow\")\n#pragma GCC optimize(\"-falign-functions\")\n#pragma GCC optimize(\"-fcse-skip-blocks\")\n#pragma GCC optimize(\"-fcse-follow-jumps\")\n#pragma GCC optimize(\"-fsched-interblock\")\n#pragma GCC optimize(\"-fpartial-inlining\")\n#pragma GCC optimize(\"no-stack-protector\")\n#pragma GCC optimize(\"-freorder-functions\")\n#pragma GCC optimize(\"-findirect-inlining\")\n#pragma GCC optimize(\"-fhoist-adjacent-loads\")\n#pragma GCC optimize(\"-frerun-cse-after-loop\")\n#pragma GCC optimize(\"inline-small-functions\")\n#pragma GCC optimize(\"-finline-small-functions\")\n#pragma GCC optimize(\"-ftree-switch-conversion\")\n#pragma GCC optimize(\"-foptimize-sibling-calls\")\n#pragma GCC optimize(\"-fexpensive-optimizations\")\n#pragma GCC optimize(\"-funsafe-loop-optimizations\")\n#pragma GCC optimize(\"inline-functions-called-once\")\n#pragma GCC optimize(\"-fdelete-null-pointer-checks\")\n#include<bits/stdc++.h>\nusing namespace std;\t\nstruct gzw\n{\n\tlong long st,ed;\t\n}way[1000009];\nlong long bcj[1000009];\nlong long n,m;\nlong long ans;\nlong long find(long long x)\n{\n\treturn x==bcj[x]?x:find(bcj[x]);//\u4e0d\u4f7f\u7528\u8def\u5f84\u538b\u7f29\u7684\u5e76\u67e5\u96c6\u652f\u6301\u5220\u9664ovo\t\n}\nvoid dfs(long long now,long long cs)\n{\n\tif(m-now+1<n-1-cs) return;//\u5269\u4e0b\u7684\u8fb9\u5168\u9009\u4e5f\u9009\u4e0d\u5230n-1\u6761\n\tif(cs==n-1) {++ans;return;}//\u9009\u597d\u4e86\n\tdfs(now+1,cs);\n\tif(find(way[now].st)!=find(way[now].ed))\n\t{\n\t\tregister long long tmp=bcj[find(way[now].st)];\n\t\tbcj[find(way[now].st)]=find(way[now].ed);//\u8fde\u63a5\n\t\tdfs(now+1,cs+1);\n\t\tbcj[tmp]=tmp;//\u56e0\u4e3a\u6ca1\u6709\u8def\u5f84\u538b\u7f29\uff0c\u6240\u4ee5\u76f4\u63a5\u628a\u539f\u6765\u7684\u7236\u8282\u70b9\u7684\u7236\u4eb2\u6539\u4e3a\u81ea\u5df1\u5c31\u884c\u4e86\n\t}\n}\nint main()\n{\n    for(register long long i=3;i<=20;++i)\n    {\n    \tn=i+1,m=0,ans=0;//\u521d\u59cb\u5316\n\t\tfor(long long j=1;j<=i+1;++j)\n\t\t{\n\t\t\tbcj[j]=j;//\u521d\u59cb\u5316\n\t\t}\n\t\tfor(int j=1;j<i;++j)\n\t\t{\n\t\t\t++m;\n\t\t\tway[m].st=j;\n\t\t\tway[m].ed=j+1;\t\n\t\t}\n\t\t++m;\n\t\tway[m].st=1;\n\t\tway[m].ed=i;\n\t\tfor(int j=1;j<=i;++j)\n\t\t{\n\t\t\t++m;\n\t\t\tway[m].st=j;\n\t\t\tway[m].ed=n;\t\n\t\t}\n        //\u4ee5\u4e0a\u4e3a\u8fde\u8fb9\n\t\tdfs(1,0);\n\t\tcout<<ans<<\" \";\n    }\n}\n```\n\u8fd9\u6837\u7684\u4ee3\u7801\u8dd1\u523020\u8fd8\u662f\u5728\u53ef\u4ee5\u7b49\u5f85\u7684\u65f6\u95f4\u5185\u7684\uff08\u672c\u673a3\u5206\u949f\u5de6\u53f3\uff09 \n\u6700\u540e\u8dd1\u51fa\u6765\u7684\u7ed3\u679c\u662f\uff1a  \n16 45 121 320 841 2205 5776 15125 39601 103680 271441 710645 1860496 4870845 12752041 33385280 87403801 228826125  \n\u7136\u540e\u660e\u663e\u7684\u662f 16 121 841 5776 \u90fd\u662f\u5e73\u65b9\uff08\u5176\u5b9e\u53ea\u6709 16,121 \u6bd4\u8f83\u660e\u663e\u540e\u4e24\u4e2a\u662f\u6839\u636e\u524d\u4e24\u4e2a\u731c\u7684\uff09  \n\u5206\u522b\u662f 4,11,29,76\u7684\u5e73\u65b9\n\u63a5\u4e0b\u6765\u5728\u8003\u865145,320,2205,15125\u548c\u5e73\u65b9\u6709\u4ec0\u4e48\u5173\u7cfb  \n\u7531\u5c0f\u5b66\u5965\u6570\u627e\u89c4\u5f8b\u5f97\uff0c\u4ed6\u4eec\u53ef\u80fd\u662f\u4e00\u4e2a\u5e73\u65b9\u6570\u52a0\u51cf\u4e00\u4e2a\u6570\u5f97\u5230\u7684\uff0c\u5219\u53bb\u627e\u79bb\u4ed6\u4eec\u6700\u8fd1/\u8fdc\u7684\u5e73\u65b9\u6570\u662f\u54ea\u4e9b  \n\u8ba1\u7b97\u5668\u5f97\u79bb\u4ed6\u4eec\u6700\u8fd1\u7684\u5e73\u65b9\u6839\u5206\u522b\u662f\uff1a7,18,47,123  \n\u7136\u540e\u548c\u5728\u4e00\u8d77\u5c31\u662f 4,7,11,18,29,47,76,123  \n\u7136\u540e\u5c31\u662f\u5f88\u660e\u663e\u7684\u6590\u6ce2\u90a3\u5951\u6570\u5217\u4e86   \n\u5728\u5076\u6570\u4f4d\u4e0a\u8981\u51cf\u53bb4  \n\u7136\u540e\u4ed4\u7ec6\u601d\u8003\u53d1\u73b0\u66b4int_128\u4e86  \n\u4e8e\u662f\u5c31\u5199\u4e86python ~~\u4e0d\u592a\u61c2\u8bed\u6cd5\u6240\u4ee5\u5199\u7684\u5341\u5206\u4e11\u7801\u98ce\u6bd2\u7624~~\n```python\nn=input()\nn=int(n)\na=1\nb=3\nc=3\nd=666\nif n==1:\n    print(\"1\");\nelif n==2:\n    print(\"5\");\nelse:\n    while c<=n:\n        d=a\n        a=b\n        b=d+b\n        c=c+1\n    print(b*b-4*((n+1)%2))\n\n```\n~~\u8fd9\u4e48\u6bd2\u7624\u7684\u7801\u98ce\u8981\u662f\u88ab\u6284\u9898\u89e3\u7684\u8bdd\u5e94\u8be5\u5f88\u597d\u627e\u5427~~  \n\u5982\u679c\u4f60\u6253\u5b8c\u8868\u4e0d\u60f3\u505a\u5c0f\u5b66\u5965\u6570\u9898\u7684\u8bdd\u53ef\u4ee5\u4e0a\u8fd9\u4e2a\u7f51\u7ad9[OIES](https://oeis.org/)\n\n\n\n\n",
        "postTime": 1545972275,
        "uid": 26199,
        "name": "wenjing233",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2144 \u3010[FJOI2007]\u8f6e\u72b6\u75c5\u6bd2\u3011"
    },
    {
        "content": "\u9119\u4eba\u4e0d\u624d\uff0c\u89e3\u6cd5\u601d\u8def\u6bd4\u8f83\u590d\u6742\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u5e76\u4e0d\u662f\u6700\u4f18\uff0c\u4f46\u7684\u786e\u662f\u6211\u89e3\u9898\u7684\u5fc3\u8def\u5386\u7a0b\uff0c\u5e0c\u671b\u80fd\u5e2e\u5230\u5927\u5bb6\n\n#### \u9996\u5148\u8003\u8651\u5bf9\u8fd9\u4e2a\u95ee\u9898\u7684\u6a21\u578b\u8fdb\u884c\u4e00\u4e9b\u8f6c\u5316\uff1a\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u539f\u56fe\u7684\u4e00\u4e2a\u6700\u5c0f\u751f\u6210\u6811\uff0c\u5fc5\u7136\u662f\u5728\u5916\u5708\u7684\u73af\u4e0a\u53bb\u6389\u4e00\u4e9b\u8fb9\u4e4b\u540e\u5f62\u6210\u82e5\u5e72\u6bb5\u76f8\u8fde\u7684\u5916\u5708\u70b9\uff0c\u6bcf\u4e00\u6bb5\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u70b9\u4e0e\u4e2d\u95f4\u7684\u70b9\u76f8\u8fde\n\n\u4e5f\u5c31\u662f\u8bf4\u8fd9\u9898\u9700\u8981\u6211\u4eec\u5c06\u4e00\u4e2a\u73af\u5206\u6210\u82e5\u5e72\u6bb5\uff0c\u4e0d\u592a\u597d\u8003\u8651\uff0c\u6211\u7684\u601d\u8def\u662f\u5c06\u73af\u5148\u4ece\u4e00\u7aef\u62c6\u5f00\u53d8\u6210**\u4e00\u6761\u94fe**\u6765\u5904\u7406\n\n\u8fd9\u6837\u7684\u6a21\u578b\u5728\u4e00\u6761\u94fe\u4e0a\u53ef\u4ee5\u7406\u89e3\u4e3a\uff1an\u4e2a\u4e0d\u540c\u7684\u7269\u54c1\u6309\u987a\u5e8f\u6392\u4e00\u5217\uff0c\u5206\u6210\u82e5\u5e72\u8fde\u7eed\u7684\u7ec4\uff0c\u6bcf\u79cd\u5206\u7ec4\u65b9\u6848\u4e2d\u6bcf\u7ec4\u7269\u54c1\u6570\u91cf\u4e4b\u79ef\u7684\u603b\u548c\u5c31\u662f\u8fd9\u6837\u4e00\u6761\u94fe\u7684\u603b\u65b9\u6848\u6570\n\n**\u90a3\u4e48\u6211\u4eec\u8bbef[i][j]\u4e3a\u957f\u5ea6\u4e3ai\u7684\u94fe\uff0c\u5206\u6210j\u7ec4\uff0c\u6bcf\u79cd\u65b9\u6848\u4e0b\u6bcf\u7ec4\u70b9\u6570\u4e4b\u79ef\u7684\u603b\u548c**\n\n\u5bb9\u6613\u53d1\u73b0\u6709\n\n$f[i][j] = \\sum_{k=j-1}^{i-1}f[k][j-1]*(i-k)$\n\n#### OK,\u73b0\u5728\u628a\u773c\u5149\u653e\u5230\u9898\u9762\u4e2d\u7684\u73af\u4e0a\uff1a\n\n\u5982\u679c\u8981\u5c06\u4e00\u4e2a\u73af\u62c6\u6210\u4e00\u6761\u94fe\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u65ad\u5f00\u5176\u4e2d\u4e00\u6761\u8fb9\uff08\u5982\u56fe\u4e2d(1)\uff09\uff0c\u5f62\u6210\u7684\u94fe\u5982\u7ea2\u7ebf\u6807\u8bb0\u90e8\u5206\n\n\u5f88\u660e\u663e\uff0c\u6211\u4eec\u9700\u8981\u4f9d\u6b21\u94a6\u5b9a\u65ad\u5f00\u6bcf\u4e00\u6761\u8fb9\uff0c\u624d\u80fd\u8986\u76d6\u6240\u6709\u7684\u60c5\u51b5......\u4f46\u662f\u8fd9\u6837\u4f1a\u4ea7\u751f\u91cd\u590d\n\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5728\u65ad\u5f00\u4e0b\u4e00\u6761\u8fb9\u5e76\u4e14\u7edf\u8ba1\u7b54\u6848\u7684\u65f6\u5019\uff0c\u8ba9\u4e4b\u524d\u65ad\u5f00\u8fc7\u7684\u6240\u6709\u8fb9\u90fd\u4fdd\u6301\u76f8\u8fde\uff08\u5982\u56fe\u4e2d(2)\u7528\u84dd\u8272\u5708\u8d77\u6765\u7684\u8fb9\uff09\n\n![luogu](https://cdn.luogu.com.cn/upload/pic/31958.png)\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u628a\u56fa\u5b9a\u76f8\u8fde\u7684\u6240\u6709\u70b9\u90fd\u770b\u4f5c\u4e00\u4e2a\u6709\u6743\u503c\u7684\u70b9\uff08\u6bd4\u5982\u5728\u56fe\u4e2d\uff0c\u84dd\u8272\u5708\u8d77\u7684\u90e8\u5206\u5c31\u770b\u4f5c\u4e00\u4e2a\u6743\u503c\u4e3a2\u7684\u70b9\uff09\uff0c\u8fd9\u6837\u7684\u8bdd\u539f\u6765\u5f62\u6210\u76848\u4e2a\u70b9\u7684\u94fe\u5c31\u53ef\u4ee5\u770b\u4f5c\u4e00\u67617\u4e2a\u70b9\u7684\u94fe\uff08\u5982\u56fe\u4e2d\u84dd\u7ebf\u6807\u8bb0\u90e8\u5206\uff09\uff0c\u5176\u4e2d\u6709\u4e00\u4e2a\u70b9\u7684\u6743\u503c\u4e3a2\n\n\u90a3\u4e48\u8fd9\u4e00\u6761\u94fe\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5c31\u662f\u5c06\u5176\u5206\u7ec4\u540e\u6bcf\u7ec4\u6743\u503c\u548c\u4e4b\u79ef\u7684\u603b\u548c\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5728\u679a\u4e3e\u7b2ci\u6761\u94fe\u7684\u65f6\u5019\uff0c\u4f60\u7684\u94fe\u957f\u5ea6\u4e3an-i+1,\u5176\u4e2d\u5982\u679c\u6709\u6743\u503c\u5927\u4e8e1\u7684\u70b9\u7684\u8bdd\uff0c\u90a3\u4e48\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u6743\u503c\u4e3ai\u7684\u70b9 \u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u4e8e\u76f8\u540c\u957f\u5ea6\u94fe\uff0c\u5176\u4e2d\u70b9\u6743\u7684\u60c5\u51b5\u662f\u786e\u5b9a\u7684\uff0c\u53ea\u6709\u6700\u540e\u4e00\u4e2a\u662f\u6743\u503c\u4e3ai\u7684\u70b9\n\n**\u4e8e\u662f\u6211\u4eec\u518d\u8bbe\u4e00\u4e2ag[i][j],\u8868\u793a\u957f\u5ea6\u4e3ai\u7684\u94fe\u4e2d\uff0c\u5206\u4e3aj\u7ec4\uff0c\u6bcf\u79cd\u65b9\u6848\u6bcf\u7ec4\u6743\u503c\u548c\u4e4b\u79ef\u7684\u603b\u548c**\n\n\u5728\u4ecef[k][j-1]\u8f6c\u79fb\u8fc7\u6765\u7684\u65f6\u5019\uff0c\u6ce8\u610f\u5230\u52a0\u5165\u6700\u540e\u4e00\u7ec4\u5f62\u6210\u957f\u5ea6\u4e3ai\u7684\u94fe\u4e4b\u540e\uff0c\u6240\u6709\u7684\u70b9\u6743\u503c\u603b\u548c\u4e3an\uff0c\u4e5f\u5c31\u662f\u8bf4\u6700\u540e\u4e00\u7ec4\u7684\u6743\u503c\u4e3an-k\n\n\u6240\u4ee5\u6709\uff1a\n\n$g[i][j] = \\sum_{k=j-1}^{i-1}f[k][j-1]*(n-k)$\n\n\n\n\u90a3\u4e48\u6839\u636e\u4e4b\u524d\u7684\u679a\u4e3e\u94fe\u7684\u65b9\u6cd5\uff0c\u6700\u7ec8\u7684\u7b54\u6848\u5c31\u662f\uff1a\n\n\n$ans = \\sum_{i=1}^{n}\\sum_{j=1}^{i}g[i][j]$\n\n\n\u7136\u540e\u5199\u4e2a\u9ad8\u7cbe\u5c31\u5b8c\u4e8b\u513f\u4e86\n\n#### \u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <cstdlib>\n#include <cstdio>\n#include <cstring>\n#define mod 10\n\nusing namespace std;\nconst int MAXN = 105;\nint n;\nstruct bigint\n{\n    int k,a[105];\n    bigint operator+(bigint t) \n    {\n        bigint res;\n        memset(res.a,0,sizeof(res.a));\n        int tmp = max(k,t.k);\n        for(int i = 1; i<=tmp; i++)\n        {\n            res.a[i] += a[i]+t.a[i];\n            res.a[i+1] += res.a[i]/mod;\n            res.a[i] %= mod;\n        }\n        if(res.a[tmp+1]) tmp++;\n        res.k = tmp+1;\n        while((!res.a[res.k])&&res.k>1) res.k--;\n        return res;\n    }\n    bigint operator*(int t)\n    {\n        bigint res;\n        memset(res.a,0,sizeof(res.a));\n        int tmp = k;\n        for(int i = 1; i<=tmp; i++)\n        {\n            res.a[i] += a[i]*t;\n            res.a[i+1] += res.a[i]/mod;\n            res.a[i] %= mod;\n        }\n        res.k = tmp+1;\n        while((!res.a[res.k])&&res.k>1) res.k--;\n        return res;\n    }\n};\nbigint f[MAXN][MAXN],g[MAXN][MAXN];\ninline bigint init(int x)\n{\n    bigint tmp;\n    tmp.k = 0;\n    memset(tmp.a,0,sizeof(tmp.a));\n    while(x)\n    {\n        tmp.a[++tmp.k] = x%10;\n        x /= 10;\n    }\n    return tmp;\n}\ninline void print(bigint x)\n{\n    for(int i = x.k; i>0; i--)\n        printf(\"%d\",x.a[i]);\n    cout << endl;\n}\nint main()\n{\n    cin >> n;\n    for(int i = 1; i<=n; i++)\n        f[i][1] = init(i), f[i][i] = init(1);\n    for(int i = 3; i<=n; i++)\n        for(int j = 2; j<i; j++)\n            for(int k = j-1; k<i; k++)\n                f[i][j] = f[i][j]+f[k][j-1]*(i-k);\n    for(int i = 1; i<=n; i++)\n        g[i][1] = init(n), g[i][i] = init(n-i+1);\n    for(int i = 3; i<=n; i++)\n        for(int j = 2; j<i; j++)\n            for(int k = j-1; k<i; k++)\n                g[i][j] = g[i][j]+f[k][j-1]*(n-k);\n    bigint ans = init(0);\n    for(int i = n; i>=1; i--)\n        for(int j = 1; j<=i; j++)\n            ans = ans+g[i][j];\n    print(ans); \n    return 0;\n} \n```",
        "postTime": 1536230272,
        "uid": 31098,
        "name": "Caro23333",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2144 \u3010[FJOI2007]\u8f6e\u72b6\u75c5\u6bd2\u3011"
    },
    {
        "content": "\u8003\u8651\u5220\u53bb\u6240\u6709\u548c\u4e2d\u5fc3\u70b9\u76f8\u8fde\u7684\u8fb9\uff0c\u90a3\u4e48\u5269\u4e0b\u7684\u8fb9\u4e00\u5b9a\u6784\u6210\u82e5\u5e72\u4e2a\u8054\u901a\u5757\n    \n\u8fd9\u5c31\u5f88\u50cf\u4e00\u4e2a\u5e8f\u5217\u4e86\n   \n\u6211\u4eec\u5148\u4e0d\u8003\u8651\u4ece\u54ea\u91cc\u5f00\u59cb\u7684\u95ee\u9898\uff0c\u4ece\u65e0\u73af\u5e8f\u5217\u95ee\u9898\u72b6\u6001\u7740\u624b\n    \n   \u4ee4$f[i]$\u8868\u793a\u4ece1\u5230i\u4ea7\u751f\u7684\u8fde\u63a5\u65b9\u6848\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u8003\u8651\u6700\u540e\u4e00\u6bb5\u8054\u901a\u5757\n   \n\u90a3\u4e48\u6709 $f[i]=\\sum_{j=0}^{j<i}f[j]*(i-j)$\n    \n   \u5f53j=0\u7684\u65f6\u5019\uff0c\u76f8\u5f53\u4e8e\u628a\u6240\u6709\u7684\u5408\u5e76\u6210\u4e00\u4e2a\u8054\u901a\u5757\uff0c\u56e0\u800cf[0]=1\n   \n   \u73b0\u5728\u95ee\u9898\u6765\u4e86\uff0c\u6211\u4eec\u8981\u8003\u8651\u73af\u7684\u5f71\u54cd\n   \n   \u6211\u4eec\u6307\u5b9a\u4e00\u4e2a\u8d77\u59cb\u70b9\uff0c\u8fd9\u4e2a\u8d77\u59cb\u70b9\u4e00\u5b9a\u4f1a\u843d\u5728\u4e00\u4e2a\u8054\u901a\u5757\u91cc\u9762\n   \n   \u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u8fd9\u4e2a\u8054\u901a\u5757\u7684\u5927\u5c0f\u662f\u786e\u5b9a\u7684\uff0c\u90a3\u4e48\u540e\u9762\u5f62\u6210\u7684\n   \u5e8f\u5217\u7684\u5206\u5272\u65b9\u6848\u6570\u90fd\u662f\u4e00\u6837\u7684\n   \n   \u6240\u4ee5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u679a\u4e3e\u8d77\u59cb\u8054\u901a\u5757\u7684\u5927\u5c0f\uff0c\n   \n   \u7136\u540e\u8fd9\u4e2a\u8054\u901a\u5757\u7684\u4efb\u610f\u4e00\u70b9\u90fd\u53ef\u4ee5\u5411\u4e2d\u5fc3\u70b9\u8fde\u8fb9\uff0c\u8fd9\u6837\u5c31\u8003\u8651\u4e86\u8fd9\u4e2a\u5f71\u54cd\n   \n   \u4f46\u662f\u8fd9\u6837\u6211\u4eec\u53ea\u8003\u8651\u4e86\u5927\u4e8e\u7b49\u4e8e\u4e24\u4e2a\u8054\u901a\u5757\u7684\u60c5\u51b5\uff0c\u8fd8\u6709\u53ea\u6709\u4e00\u4e2a\u8054\u901a\u5757\u7684\u60c5\u51b5\uff01\n    \n   \u8fd9\u4e00\u90e8\u5206\u4e3a\uff1a\u679a\u4e3e\u8fde\u63a5\u5230\u4e2d\u5fc3\u7684\u70b9*\u679a\u4e3e\u73af\u4e0a\u65ad\u5f00\u7684\u8fb9\uff08\u753b\u56fe\u81ea\u5df1\u8003\u8651\uff09$=i*i$\n    \n   \u56e0\u800c$f[i]=f[0]*i*i+\\sum_{j=1}^{j<i}j*f[i-j]$\n   \n   \u5f00\u59cb\u72b6\u6001$f[0]=1$\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\n///defs&tools================\n/**\n    1->1\n    2->5\n    3->16\n    \u8003\u8651\u5220\u53bb\u6240\u6709\u548c\u4e2d\u5fc3\u70b9\u76f8\u8fde\u7684\u8fb9\uff0c\u90a3\u4e48\u5269\u4e0b\u7684\u8fb9\u4e00\u5b9a\u6784\u6210\u82e5\u5e72\u4e2a\u8054\u901a\u5feb\n    \u8fd9\u5c31\u5f88\u50cf\u4e00\u4e2a\u5e8f\u5217\u4e86\n    \u6211\u4eec\u5148\u4e0d\u8003\u8651\u4ece\u54ea\u91cc\u5f00\u59cb\u7684\u95ee\u9898\uff0c\u4ece\u65e0\u73af\u5e8f\u5217\u95ee\u9898\u72b6\u6001\u7740\u624b\n    \u4ee4f[i]\u8868\u793a\u4ece1\u5230i\u4ea7\u751f\u7684\u8fde\u63a5\u65b9\u6848\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u8003\u8651\u6700\u540e\u4e00\u6bb5\u8054\u901a\u5757\n    \u90a3\u4e48\u6709 f[i]=\\sum_{j=0}^{j<i}f[j]*(i-j)\n    \u5f53j=0\u7684\u65f6\u5019\uff0c\u76f8\u5f53\u4e8e\u628a\u6240\u6709\u7684\u5408\u5e76\u6210\u4e00\u4e2a\u8054\u901a\u5757\uff0c\u56e0\u800cf[0]=0\n    \u73b0\u5728\u95ee\u9898\u6765\u4e86\uff0c\u6211\u4eec\u8981\u8003\u8651\u73af\u7684\u5f71\u54cd\n    \u6211\u4eec\u6307\u5b9a\u4e00\u4e2a\u8d77\u59cb\u70b9\uff0c\u8fd9\u4e2a\u8d77\u59cb\u70b9\u4e00\u5b9a\u4f1a\u843d\u5728\u4e00\u4e2a\u8054\u901a\u5757\u91cc\u9762\n    \u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u8fd9\u4e2a\u8054\u901a\u5757\u7684\u5927\u5c0f\u662f\u786e\u5b9a\u7684\uff0c\u90a3\u4e48\u540e\u9762\u5f62\u6210\u7684\u5e8f\u5217\u7684\u5206\u5272\u65b9\u6848\u6570\u90fd\u662f\u4e00\u6837\u7684\n    \u6240\u4ee5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u679a\u4e3e\u8d77\u59cb\u8054\u901a\u5757\u7684\u5927\u5c0f\uff0c\n        \u7136\u540e\u8fd9\u4e2a\u8054\u901a\u5757\u7684\u4efb\u610f\u4e00\u70b9\u90fd\u53ef\u4ee5\u5411\u4e2d\u5fc3\u70b9\u8fde\u8fb9\uff0c\u8fd9\u6837\u5c31\u8003\u8651\u4e86\u8fd9\u4e2a\u5f71\u54cd\n        \u4f46\u662f\u8fd9\u6837\u6211\u4eec\u53ea\u8003\u8651\u4e86\u5927\u4e8e\u7b49\u4e8e\u4e24\u4e2a\u8054\u901a\u5757\u7684\u60c5\u51b5\uff0c\u8fd8\u6709\u53ea\u6709\u4e00\u4e2a\u8054\u901a\u5757\u7684\u60c5\u51b5\uff01\n        \u8fd9\u4e00\u90e8\u5206\u4e3a\uff1a\u679a\u4e3e\u8fde\u63a5\u5230\u4e2d\u5fc3\u7684\u70b9*\u679a\u4e3e\u73af\u4e0a\u65ad\u5f00\u7684\u8fb9\uff08\u753b\u56fe\u81ea\u5df1\u8003\u8651\uff09=i*i\n    \u56e0\u800cf[i]=\\sum_{j=1}^{j<i}j*f[i-j]   +f[0]*i*i\n    \u5f00\u59cb\u72b6\u6001f[0]=0\n\n*/\nconst ll mo=1e9;\nstruct bignum{\n    ll a[50];\n    bignum(int x=0){\n        memset(a,0,sizeof(a));\n        if (!x) return;\n        a[1]=x; a[0]=1;\n    }\n    friend bignum operator +(bignum a,bignum b){\n        bignum c;\n        c.a[0]=max(a.a[0],b.a[0]);\n        for (int i=1;i<=c.a[0];i++) c.a[i]=a.a[i]+b.a[i];\n        for (int i=1;i<=c.a[0];i++){\n            c.a[i+1]+=c.a[i]/mo;\n            c.a[i]%=mo;\n        }\n        if (c.a[c.a[0]+1]) c.a[0]++;\n        return c;\n    }\n    friend bignum operator *(bignum a,bignum b){\n        bignum c;\n        for (int i=1;i<=a.a[0];i++){\n            ll x=0;\n            for (int j=1;j<=b.a[0];j++){\n                x+=c.a[i+j-1]+a.a[i]*b.a[j];\n                c.a[i+j-1]=x%mo;\n                x/=mo;\n            }\n            c.a[i+b.a[0]]=x;\n        }\n        c.a[0]=a.a[0]+b.a[0];\n        while (c.a[0]&&!c.a[c.a[0]]) c.a[0]--;\n        return c;\n    }\n    void print(){\n        printf(\"%lld\",a[a[0]]);\n        for (int i=a[0]-1;i>0;i--)\n            printf(\"%09lld\",a[i]);\n        puts(\"\");\n    }\n}f[110],ans;\nint N;\n///main======================\nint main() {\n    scanf(\"%d\",&N);\n    f[0]=1;\n    for(int i=1;i<=N;++i) {\n        f[i]=i*i;\n        for(int j=1;j<i;++j) {\n            f[i]=f[i]+f[j]*(i-j);\n        }\n        //f[i].print();\n    }\n    f[N].print();\n    return 0;\n}\n\n```",
        "postTime": 1535954329,
        "uid": 20565,
        "name": "wzj423",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2144 \u3010[FJOI2007]\u8f6e\u72b6\u75c5\u6bd2\u3011"
    },
    {
        "content": "emm\u2026\u2026\n\n\u6b63\u89e3\uff1a\u77e9\u9635\u6811\u5b9a\u7406\uff0c\u4f46\u662f\u672c\u5b9d\u5b9d\u4e0d\u4f1a\u6c42\u57fa\u5c14\u970d\u592b\u77e9\u9635\u3002\n\n\u5f00\u59cb\u8003\u573a\u65b9\u6cd5\uff1a\n\n\u624b\u52a8\u6a21\u62df$n=1--5$\u65f6\u7684\u7b54\u6848\uff08\u6570\u4e0d\u5927\uff0c~~\u753b\u753b\u5c31\u51fa\u6765\u4e86~~\u8981\u753b\u4e0a\u534a\u4e2a\u5c0f\u65f6\uff09\u3002\n\n\u753b\u51fa\u6765\uff0c\u7b54\u6848\u662f\u8fd9\u6837\u7684\uff1a$1$ $5$ $16$ $45$ $121$\n\n\u7136\u540e\u7b80\u5355\u6839\u636e\u9898\u76ee\u51fa\u5904\u548c\u96be\u5ea6\u8499\u4e86\u4e00\u4e0b\u611f\u89c9\u7b2c$n$\u9879\u7684\u7b54\u6848\u548c$n-1$,$n-2$\u7684\u7b54\u6848\u6709\u5173\u3002\n\n\u518d\u770b\u770b\u589e\u957f\u7387$(\\frac{ans[n-1]}{ans[n-2]})$\u5927\u6982\u662f$2--3$\u4e4b\u95f4\uff0c\u5e76\u4e14\u6bd4\u8f83\u9760\u8fd1\u4e09\u3002\n\n\u4e8e\u662f\uff0c\u5c31\u60f3 $ans[n]$ $=$ $ans[n-1]*3$ $\u00b1$ $\u2026\u2026$ \n\n\u53c8\u56e0\u4e3a\u5dee\u7684\u4e0d\u662f\u4e00\u4e2a\u5e38\u6570\uff0c\u6240\u4ee5\n$ans[n]$ $=$ $3*ans[n-1]-ans[n-2]$ $\u00b1$ $\u2026\u2026$\n\n\u4e4b\u540e\uff0c\u60ca\u559c\u7684\u53d1\u73b0\u6bcf\u4e2a$ans[n]$ \u4e0e $3*ans[n-1]-ans[n-2]$ \u90fd\u5dee$2$\u3002\n\n\u6700\u7ec8\uff0c\u8499\u4e86\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff1a$ans[n]=$ $3*ans[n-1]-ans[n-2]+2$\n\n\u770b\u6570\u636e\u8303\u56f4\uff0c\u9700\u8981\u9ad8\u7cbe\u3002\n\n\u4e4b\u540e\u4e00\u8138\u61f5\u903c\u7684$AC$\u4e86\u3002\n\n\u4ee3\u7801\u9644\u4e0a\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\n//F(n)=3*F(n-1)-F(n-2)+2,F(1)=1,F(2)=5.;\nint ans[103][10010];\nint len[103];\nint mul[10010];\nvoid pluse(int x)\n{\n\tint m=x-2;\n\tint n=x-1;\n\tint cnt=0;int l=len[n];\n\tfor(int i=1;i<=l;i++)\n\t{\n\t\tmul[i]=(ans[n][i]*3+cnt)%10;\n\t\tcnt=(ans[n][i]*3+cnt)/10;\n\t}\n\tif(cnt!=0) mul[++l]=cnt;\n\t\n\tcnt=2;\n\tfor(int i=1;i<=l;i++)\n\t{\n\t\tans[x][i]=(mul[i]-ans[m][i]+cnt+100)%10;\n\t\tif(mul[i]-ans[m][i]+cnt<0) cnt=-1;\n\t\telse cnt=(mul[i]-ans[m][i]+cnt)/10;\n\t}\n\tif(cnt!=0) ans[x][l+1]=cnt,len[x]=l+1;\n\telse len[x]=l;\n\treturn ;\n}\nint n;\nint main()\n{\n\tscanf(\"%d\",&n);\n\tans[1][1]=1;len[1]=1;\n\tans[2][1]=5;len[2]=1;\n\tfor(int i=3;i<=n;i++) pluse(i);\n\tfor(int i=len[n];i>=1;i--) printf(\"%d\",ans[n][i]);\n\treturn 0;\n}\n```",
        "postTime": 1524987964,
        "uid": 57699,
        "name": "Arcturus1350",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2144 \u3010[FJOI2007]\u8f6e\u72b6\u75c5\u6bd2\u3011"
    },
    {
        "content": "# \u8c8c\u4f3c\u9898\u89e3\u91cc\u5f88\u5c11\u6709\u5199\u9012\u63a8\u5f0f\u601d\u8def\u7684\uff1f\n\n\u7531\u4e8e\u53d1\u73b0\u6211\u7684\u9012\u63a8\u5f0f\u8ddf\u5927\u5bb6\u7684\u90fd\u4e0d\u4e00\u6837 ~~\uff08\u6211\u662f\u4e8c\u7ef4\u7684\uff0c\u4f30\u8ba1\u662f\u6211\u592a\u83dc\u4e86\u5427\uff09~~ \n\n\u5e76\u4e14\u611f\u89c9\u81ea\u5df1\u7684\u601d\u8def\u6bd4\u8f83\u597d\u7406\u89e3\uff0c\u51b3\u5b9a\u8ddf\u5927\u5bb6\u5206\u4eab\u4e00\u4e0b\n\n------------\n\n\u5176\u5b9e\u9898\u76ee\u8981\u6c42\u7684\u4e1c\u897f\u5c31\u662f\u5728 $ N $ \u8f6e\u72b6\u57fa\u4e2d\u7684\u751f\u6210\u6811\u4e2a\u6570\uff08\u6bcf\u4e24\u4e2a\u7ed3\u70b9\u53ea\u6709\u4e00\u6761\u7b80\u5355\u8def\u5f84\uff09\n\n\u8fd9\u4f1a\u8ba9\u4eba\u4e00\u4e0b\u5b50\u60f3\u5230 $ Matrix-Tree $ \u5b9a\u7406\uff0c\u4f46\u662f\u7531\u4e8e\u8f6e\u72b6\u57fa\u662f\u4e2a\u7279\u6b8a\u7684\u56fe\uff0c\u6240\u4ee5\u7528\u4e0d\u5230\n\n\u8f6e\u72b6\u57fa\u53ef\u4ee5\u770b\u6210\u662f\u4e00\u4e2a\u6709 $ N $ \u4e2a\u7ed3\u70b9\u7684\u73af\uff0c\u6bcf\u4e2a\u70b9\u53c8\u5411\u8f6e\u72b6\u57fa\u4e2d\u5fc3\u7684\u6838\u539f\u5b50\u8fde\u7ebf\n\n\u5148\u5c06\u5916\u9762\u7684\u73af\u5206\u6210\u82e5\u5e72\u8fde\u7eed\u7684\u6bb5\uff08\u6ce8\u610f\u4e0d\u80fd\u4e0d\u5206\uff0c\u4e0d\u7136\u5c31\u4e0d\u662f\u6811\u4e86\uff09\uff0c\u6bcf\u6bb5\u81f3\u5c11\u6709\u4e00\u4e2a\u7ed3\u70b9\uff0c\u7136\u540e\u8003\u8651\u8fd9\u4e9b\u6bb5\u5982\u4f55\u5411\u6838\u539f\u5b50\u8fde\u63a5\n\n\u7531\u4e8e\u6bcf\u6bb5\u4e4b\u95f4\u4e92\u76f8\u4e0d\u8054\u901a\uff0c\u6240\u4ee5\u53ea\u80fd\u901a\u8fc7\u6838\u539f\u5b50\u8054\u901a\uff0c\u6240\u4ee5\u6bcf\u6bb5\u4e0a\u81f3\u5c11\u6709\u4e00\u4e2a\u7ed3\u70b9\u4e0e\u6838\u539f\u5b50\u76f8\u8fde\u3002\u90a3\u80fd\u4e0d\u80fd\u6bcf\u6bb5\u6709\u591a\u4e8e\u4e00\u4e2a\u7ed3\u70b9\u4e0e\u6838\u539f\u5b50\u76f8\u8fde\u5462\uff1f\u663e\u7136\u4e0d\u884c\uff0c\u4e0d\u7136\u5c31\u51fa\u73b0\u73af\u4e86\n\n\u6240\u4ee5\u6bcf\u4e00\u6bb5\u4e0a\u7684\u6bcf\u4e00\u4e2a\u7ed3\u70b9\u90fd\u6709\u53ef\u80fd\u4e0e\u6838\u539f\u5b50\u76f8\u8fde\uff0c\u6bcf\u4e00\u79cd\u5206\u6bb5\u6cd5\u6240\u5bf9\u5e94\u7684\u751f\u6210\u6811\u4e2a\u6570\u5c31\u662f\u6240\u6709\u6bb5\u4e0a\u7ed3\u70b9\u6570\u4e4b\u79ef\n\n\uff08\u8fd9\u4e2a\u5f88\u591a\u9898\u89e3\u90fd\u60f3\u5230\u4e86\uff09\n\n------------\n\n\u5c06\u6240\u6709\u57fa\u539f\u5b50 $1 - N$ \u7f16\u53f7\uff0c\u8003\u8651\u679a\u4e3e\u5de6\u7aef\u70b9\u4e3a $ now $ \u7684\u6bb5\u7684\u53f3\u7aef\u70b9 $ i $\n\n\u7531\u4e8e\u662f\u5728\u73af\u4e0a\u5206\u6bb5\uff0c\u4e8e\u662f\u5148\u4e8b\u5148\u679a\u4e3e\u6240\u6709\u7ecf\u8fc7\u7ed3\u70b9 $ 1 $ \u7684\u6bb5\uff0c\u5c06\u73af\u7834\u6210\u94fe\u65b9\u4fbf\u679a\u4e3e\n\n\u8bbe\u7ecf\u8fc7\u7ed3\u70b9 $ 1 $ \u7684\u6bb5\u7684\u5de6\u7aef\u70b9\u7f16\u53f7\u4e3a $ Limit $\uff08\u7ed3\u70b9 $ 1 $ \u8bb0\u4e3a $ N+1 $\uff09\uff0c$ dp_{now,Limit} $ \u4e3a\u4ece $ now $ \u5f00\u59cb\u5206\u6bb5\u5206\u5230 $ Limit $ \u4e4b\u524d\u7684\u4e0e\u6838\u539f\u5b50\u7684\u8fde\u63a5\u65b9\u6848\u6570\uff0c\u5219\u6709\u9012\u63a8\u5f0f\n\n$ dp_{now,Limit}=\\sum\\limits_{i=now}^{Limit-1}(i-now+1) \\times dp_{i+1,Limit} $\n\n\u5176\u5b9e\u5c31\u662f\u8fd9\u6bb5\u7684\u65b9\u6848\u6570\uff08\u6bb5\u7684\u957f\u5ea6\uff09\u4e58\u4ee5\u540e\u9762\u7684\u6bb5\u7684\u65b9\u6848\u6570\uff0c\u7531\u4e8e\u8fd9\u6bb5\u7684\u957f\u5ea6\u4e0d\u786e\u5b9a\uff0c\u56e0\u6b64\u603b\u65b9\u6848\u6570\u5c31\u662f\u6240\u6709\u53f3\u7aef\u70b9\u4ea7\u751f\u7684\u65b9\u6848\u6570\u4e4b\u548c\n\n\u7279\u522b\u5730\uff0c\u8ba4\u4e3a\u5f53 $ now=Limit $ \u65f6 $ dp_{now,Limit}=1 $\uff08\u53ef\u4ee5\u7406\u89e3\u4e3a\u6240\u6709\u6bb5\u90fd\u5206\u5b8c\u4e86\uff0c\u6ca1\u6cd5\u4e0e\u6838\u539f\u5b50\u8fde\u63a5\u4e5f\u662f\u4e00\u79cd\u65b9\u6848\uff09\n\n\u6700\u540e\u7edf\u8ba1\u7b54\u6848\uff0c\u679a\u4e3e\u6240\u6709\u7ecf\u8fc7\u7b2c\u4e00\u7ed3\u70b9\u7684\u6bb5\n\n$ ans=\\sum\\limits_{Limit=2}^{N+1}\\sum\\limits_{now=1}^{Limit-1}(n+1-Limit+now)\\times dp_{now,Limit} $\n\n\u55ef\u5bf9\uff0c\u8bb0\u5f97\u628a\u7b2c\u4e00\u6bb5\u7684\u957f\u5ea6\u4e5f\u4e58\u4e0a\u53bb\n\n\u7136\u540e\u2026\u2026\u8fd8\u662f\u4e0a\u4ee3\u7801\u5427\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int MAXN=100;\ntypedef unsigned long long ull;\n\nconst int SIZE=40;\nconst int k=8;//\u538b k \u4f4d \nconst int CNOD=pow(10,k);\n\nstruct HPA\n{\n    unsigned long long dig[SIZE];\n    int len;\n    void Scan()\n    {\n        string temp;\n        cin>>temp;\n        int tlen=temp.length();\n        len=ceil(double(tlen)/double(k));\n        for(int i=1;i<=len;i++)\n            for(int j=max(tlen-i*k,0);j<=tlen-i*k+k-1;j++)\n                dig[i]=dig[i]*10+temp[j]-48;\n    }\n    void Print()\n    {\n        cout<<dig[len];\n        for(int i=len-1;i;i--)\n        {\n            for(int j=CNOD/10;dig[i]<j;j/=10) cout<<0;\n            if(dig[i]) cout<<dig[i];\n        }\n        cout<<endl;\n    }\n    void One() {len=1,dig[1]=1;}\n    void Two() {len=1,dig[1]=2;}\n    void Ten() {len=1,dig[1]=10;}\n    void Clean()\n\t{\n\t\tfor(int i=1;i<=len;i++) dig[i]=0;\n\t\tlen=0;\n\t}\n}zero,one,ten,ans;\n\nshort m;\n\nHPA Translate(int ob)\n{\n\tHPA cnt;cnt.Clean();\n\twhile(ob)\n\t{\n\t\tcnt.dig[++cnt.len]=(ob%CNOD);\n\t\tob/=CNOD;\n\t}\n\treturn cnt;\n}\n\nHPA Multi(HPA a,HPA b)\n{\n    HPA cnt=zero;\n    cnt.len=a.len+b.len+2;\n    for(int i=1;i<=a.len;i++)\n    \tfor(int j=1;j<=b.len;j++)\n    \t\tcnt.dig[i+j-1]+=a.dig[i]*b.dig[j];\n    for(int i=1;i<=cnt.len;i++)\n    {\n        cnt.dig[i+1]+=cnt.dig[i]/CNOD;\n        cnt.dig[i]%=CNOD;\n    }\n    while(!cnt.dig[cnt.len] && cnt.len>1) cnt.len--;\n    return cnt;\n}\n\nHPA Plus(HPA a,HPA b)\n{\n    HPA cnt=zero;\n    cnt.len=max(a.len,b.len);\n    for(int i=1;i<=cnt.len;i++)\n    {\n        cnt.dig[i]+=a.dig[i]+b.dig[i];\n        cnt.dig[i+1]+=cnt.dig[i]/CNOD;\n        cnt.dig[i]%=CNOD;\n    }\n    cnt.len+=(cnt.dig[cnt.len+1]);\n    return cnt;\n}\n\nHPA Diff1(HPA ob)\n{\n    for(int i=0;i<ob.len;i++)\n        if(ob.dig[i+1]) {ob.dig[i+1]--,ob.dig[i]=CNOD-1;break;}\n        else ob.dig[i]=CNOD-1;\n    ob.dig[0]=0;\n    ob.len-=(!ob.dig[ob.len]);\n    return ob;\n}\n\nHPA Pow(HPA base,short idex)\n{\n    HPA cnt=zero;\n    cnt.dig[1]=1;\n    for(;idex;idex>>=1)\n    {\n        if(idex&1) cnt=Multi(base,cnt);\n        base=Multi(base,base);\n    }\n    return cnt;\n}\n\nHPA Divide2(HPA ob)\n{\n    HPA cnt=zero;\n    cnt.len=ob.len;\n    unsigned long long temp=0;\n    for(int i=ob.len;i>=1;i--)\n    {\n    \ttemp=temp*CNOD+ob.dig[i];\n    \tcnt.dig[i]=temp>>1;\n    \ttemp%=2;\n    }\n    while(!cnt.dig[cnt.len] && cnt.len>1) cnt.len--;\n    return cnt;\n}\n\nbool LessEqu(HPA a,HPA b)\n{\n    if(a.len<b.len) return 1;\n    if(a.len>b.len) return 0;\n    for(int i=a.len;i>=1;i--)\n    {\n        if(a.dig[i]<b.dig[i]) return 1;\n        if(a.dig[i]>b.dig[i]) return 0;\n    }\n    return 1;\n}\n\nbool Greater(HPA a,HPA b)\n{return !LessEqu(a,b);}\n\nbool Equal(HPA a,HPA b)\n{\n\tif(a.len!=b.len) return 0;\n\tfor(int i=a.len;i>=1;i--)\n\t\tif(a.dig[i]!=b.dig[i]) return 0;\n\treturn 1;\n}\n\nint n;\n\nHPA dp[MAXN+5][MAXN+5];\nHPA DFS(int now,int Limit)\n{\n\tif(!Equal(dp[now][Limit],zero)) return dp[now][Limit];\n\tif(now==Limit) return one;\n\tfor(int i=now;i<Limit;i++)\n\t\tdp[now][Limit]=Plus(dp[now][Limit],Multi(Translate(i-now+1),DFS(i+1,Limit)));\n\treturn dp[now][Limit];\n}\n\nint main()\n{\n\tzero.len=1;\n\tone.One();\n\tten.Ten();\n\tans=zero;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n+1;i++)\n\t\tfor(int j=1;j<=n+1;j++)\n\t\t\tdp[i][j]=zero;\n\tfor(int i=n+1;i>=2;i--)//\u5411\u5de6\u5ef6\u4f38 n+2-i \u4e2a \n\t\tfor(int j=1;j<i;j++)//\u5411\u53f3\u5ef6\u4f38 j \u4e2a \n\t\t\tans=Plus(ans,Multi(Translate(n+1-i+j),DFS(j+1,i)));\n\tans.Print();\n\treturn 0;\n}\n```\n\u7528\u4e86\u8bb0\u5fc6\u5316\uff0c\u5176\u4e2d\u5927\u90e8\u5206\u7684\u7801\u91cf\u8fd8\u662f\u5173\u4e8e\u9ad8\u7cbe\u5ea6\n\n\u7136\u540e\u5c31\u80fd\u5b8c\u7f8e\u5730\u8fc7\u8fd9\u9053\u9898\u4e86\uff0c\u590d\u6742\u5ea6 $ O(n^3) $\uff0c\u7531\u4e8e\u6709\u9ad8\u7cbe\uff0c\u5e38\u6570\u8f83\u5927\u4f46\u662f\u6211\u52a0\u4e86\u538b\u4f4d\uff0c\u8fdc\u8fdc\u5c0f\u4e8e $ N $",
        "postTime": 1577371913,
        "uid": 54591,
        "name": "Seauy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2144 \u3010[FJOI2007]\u8f6e\u72b6\u75c5\u6bd2\u3011"
    },
    {
        "content": "\u8fd9\u9898\u6211\u89c9\u5f97\u5427\u2026\u2026\u8bc4\u5206\u865a\u9ad8\uff0c\u96be\u5ea6\u771f\u7684\u4e0d\u5927\u554a\uff0c\u6839\u672c\u4e0d\u9700\u8981\u627e\u89c4\u5f8b\uff0c\u6211\u975e\u9ad8\u7cbe\u7684\u4ee3\u7801\u82b1\u4e86$5$\u5206\u949f\u5c31\u6253\u5b8c\u4e86\uff08\u96be\u5ea6\u5b8c\u5168\u5728\u4e8e\u9ad8\u7cbe\u5ea6qaq\uff09\u3002\u6570\u636e\u8303\u56f4\u8fd9\u4e48\u5c0f\uff0c\u5b8c\u5168\u53ef\u4ee5\u505a\u5230$O(\\log n)$\u7684\u597d\u5427\u3002\n\n\u8bf4\u4e00\u4e0b\u6211\u770b\u5230\u8fd9\u9898\u7684\u601d\u8def\u5427\u3002\u770b\u5230\u8fd9\u9898\uff0c\u9996\u5148\u60f3\u5230\u53ef\u4e0d\u53ef\u4ee5\u7528$dp$\u89e3\u51b3\u3002\u7136\u540e\u53d1\u73b0\u4e00\u4e2a\u75c5\u6bd2\u4e2d\u4f1a\u5b58\u5728\u4e00\u79cd\u7279\u6b8a\u7684\u8fb9\uff0c\u53ca\u4ece\u5706\u5fc3\u8fde\u5230\u5706\u73af\u4e0a\u7684\u70b9\u7684\u8fb9\u3002\u6211\u4eec\u89c2\u5bdf\u4e00\u4e2a\u8f6e\u72b6\u75c5\u6bd2\uff1a![](https://cdn.luogu.com.cn/upload/pic/53859.png)\uff08\u7279\u6b8a\u8fb9\u53ca\u5176\u4e2d\u7684$a,b,c,d$\uff09\n\n\u7136\u540e\u7814\u7a76\u76f8\u90bb\u7684\u4e24\u4e2a\u7279\u6b8a\u8fb9\uff08\u5373\u4e24\u4e2a\u7279\u6b8a\u8fb9\u4e4b\u95f4\u65e0\u5176\u4ed6\u7279\u6b8a\u8fb9\uff0c\u4f8b\u5982$a,d$\u4e3a\u76f8\u90bb\u7279\u6b8a\u8fb9\uff0c\u800c$a,c$\u4e0d\u4e3a\u7279\u6b8a\u8fb9\uff08\u4e4b\u95f4\u6709$d$\uff09\uff09\u3002\u89c2\u5bdf$b,c$\uff0c\u5b83\u4eec\u76f8\u90bb\u7684\u533a\u95f4\u5185\u6709\u70b9$A,B,C$\u3002\u7531\u5706\u5fc3\u4e0d\u80fd\u7ee7\u7eed\u5411\u5b83\u4eec\u8fde\u8fb9\u3002\u56e0\u6b64\u5728\u5b83\u4eec\u4e4b\u95f4\u53ea\u53ef\u80fd\u5982\u4e0b\u8fde\u8fb9\uff08\u5ffd\u7565\u5176\u4ed6\u70b9\uff09\uff1a![](https://cdn.luogu.com.cn/upload/pic/53862.png)![](https://cdn.luogu.com.cn/upload/pic/53861.png)![](https://cdn.luogu.com.cn/upload/pic/53859.png)![](https://cdn.luogu.com.cn/upload/pic/53865.png)\uff0c\u5171\u56db\u79cd\u3002\n\n\u4e8e\u662f\u5f52\u7eb3\u603b\u7ed3\u5f97\u7ed3\u8bba\uff1a\u5bf9\u4e8e\u4e24\u4e2a**\u4f4d\u7f6e\u786e\u5b9a**\u7684\u76f8\u90bb\u7279\u6b8a\u8fb9\uff0c\u5b83\u4eec\u95f4\u533a\u95f4\u7684\u70b9\u7684\u8fde\u8fb9\u65b9\u5f0f\u4e3a\u70b9\u6570$+1$\u3002\n\n\u6211\u4eec\u5f00\u59cb\u8fdb\u884c$dp$\u3002\u6ce8\u610f\u4e0a\u9762\u7684\u9650\u5236\u6761\u4ef6\uff1a\u4f4d\u7f6e\u786e\u5b9a\u3002\u6240\u4ee5\u6211\u4eec\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u7684\u72b6\u6001\u5fc5\u987b\u542b\u6709\u4f4d\u7f6e\u3002\u6211\u4eec\u8003\u8651\u6309\u9006\u65f6\u9488\u987a\u5e8f$dp$\uff0c$dp$\u4e2d\u9700\u8981\u5305\u542b\u7b2c\u4e00\u4e2a\u7279\u6b8a\u8fb9\u7684\u4f4d\u7f6e\u548c\u6700\u540e\u4e00\u4e2a\u7279\u6b8a\u8fb9\u7684\u4f4d\u7f6e\u3002\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u4ece$12$\u70b9\u65b9\u5411\u9006\u65f6\u9488\u65b9\u5411\u6570\u7b2c\u4e00\u4e2a\u7279\u6b8a\u8fb9\u4e0d\u5728\u6b63$12$\u70b9\u4f4d\u7f6e\u7684\u8f6e\u72b6\u75c5\u6bd2\uff0c\u90fd\u53ef\u4ee5\u901a\u8fc7\u987a\u65f6\u9488\u65cb\u8f6c\u5f97\u5230\u7b2c\u4e00\u4e2a\u7279\u6b8a\u8fb9\u5728\u6b63$12$\u70b9\u4f4d\u7f6e\u7684\u75c5\u6bd2\uff0c\u5982\u56fe\uff1a![](https://cdn.luogu.com.cn/upload/pic/53871.png)\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4e0d\u7528\u8003\u8651\u7b2c\u4e00\u4e2a\u7279\u6b8a\u8fb9\u7684\u4f4d\u7f6e\uff0c\u76f4\u63a5\u9ed8\u8ba4\u8bbe\u4e3a$1$\u3002\u4e8e\u662f\uff0c\u5c31\u53ef\u4ee5\u4ee4$f[i]$\u8868\u793a\u6700\u540e\u4e00\u4e2a\u7279\u6b8a\u8fb9\u4f4d\u7f6e\u4e3a$i$\u65f6\u7684\u65b9\u6848\u6570\u3002$f[i]$\u53ef\u7531$f[j],1\\le j <i$\u5f97\u5230\u3002\u53c8\u6839\u636e\u4e0a\u9762\u5f52\u7eb3\u7684\u4e24\u4e2a\u76f8\u90bb\u7279\u6b8a\u8fb9\u95f4\u8fde\u8fb9\u7684\u65b9\u6848\u6570\u7ed3\u8bba\uff0c\u53ef\u77e5$f[i]=\\sum f[j]\\times (i-j)$\u3002\n\n\u4f46\u662f$f[i]$\u5e76\u4e0d\u662f\u6700\u540e\u4e00\u4e2a\u7279\u6b8a\u8fb9\u4f4d\u7f6e\u4e3a$i$\u65f6\u65b9\u6848\u6570\u7684\u7b54\u6848\uff0c\u56e0\u4e3a\u6211\u4eec\u8fd8\u6ca1\u6709\u8003\u8651\u7279\u6b8a\u8fb9$i$\u4e0e\u7b2c\u4e00\u4e2a\u7279\u6b8a\u8fb9$1$\u4e4b\u95f4\u7684\u8fde\u8fb9\u65b9\u6848\u6570\u3002\u6240\u4ee5\u6bcf\u4e2a$f[i]$\u8fd8\u9700\u8981\u4e58\u4e0a$n-i+1$\uff08\u6839\u636e\u7ed3\u8bba\u7b80\u5355\u8ba1\u7b97\u53ef\u5f97\uff09\u3002\n\n\u7136\u540e\u8fd8\u8981\u8bb0\u5f97\u6211\u4eec\u5ffd\u7565\u4e86\u7b2c\u4e00\u4e2a\u7279\u6b8a\u8fb9\u4e0d\u5728$1$\u7684\u60c5\u51b5\uff0c\u56e0\u6b64\u73b0\u5728\u5e94\u8be5\u5c06\u5b83\u4eec\u7b97\u56de\u53bb\u3002\u6211\u4eec\u5c06\u4e00\u4e2a\u7b2c\u4e00\u8fb9\u4e3a$1$\u3001\u6700\u540e\u8fb9\u4e3a$i$\u7684\u75c5\u6bd2\u4e0d\u65ad\u65cb\u8f6c\uff0c\u5f97\u5230\u4e00\u8fb9$2$\u3001\u7ec8\u8fb9$i+1$\uff0c\u4e00\u8fb9$3$\u3001\u7ec8\u8fb9$i+2$\u2026\u2026\u4e00\u8fb9$n-i+1$\u3001\u7ec8\u8fb9$n$\u5171$n-i+1$\u79cd\u60c5\u51b5\u3002\n\n\u6240\u4ee5\u6700\u7ec8\u7b54\u6848$ans=\\sum (n-i+1)^2 f[i]$\uff08\u6ce8\u610f\u8fd9\u91cc\u7684$f[i]$\u662f\u521a$dp$\u51fa\u6765\u7684\u6ca1\u6709\u505a\u4efb\u4f55\u5176\u4ed6\u5904\u7406\u7684$f[i]$\uff09\u3002\n\n\u6ce8\u610f\u6b64\u9898\u96be\u70b9\uff1a\u9ad8\u7cbe\u5ea6\u2026\u2026\n\n\u590d\u6742\u5ea6$O(n^2)$\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<string>\n#include<algorithm>\n#include<iostream>\nusing namespace std;\nint n; \nstruct SHU\n{\n    int shu[1000],len;\n    SHU(){memset(shu,0,sizeof(shu));len=0;}\n    SHU operator +(const SHU&a)\n    {\n        SHU lc;int sy=0;\n        for(lc.len=0;lc.len<=a.len||lc.len<=len||sy;lc.len++)\n        {\n            lc.shu[lc.len]=a.shu[lc.len]+shu[lc.len]+sy;\n            sy=lc.shu[lc.len]/10;lc.shu[lc.len]%=10;\n        }\n        while(lc.len>=1&&lc.shu[lc.len-1]==0)lc.len--;\n        return lc;\n    }\n    SHU operator *(int&b)\n    {\n        SHU lc;int sy=0;\n        for(lc.len=0;lc.len<=len||sy;lc.len++)\n        {\n            lc.shu[lc.len]=shu[lc.len]*b+sy;\n            sy=lc.shu[lc.len]/10;lc.shu[lc.len]%=10;\n        }\n        while(lc.len>=1&&lc.shu[lc.len-1]==0)lc.len--;\n        return lc;\n    }\n}f[200],dp[200],ans;\nint main()\n{\n    scanf(\"%d\",&n);\n    f[1].shu[0]=1;f[1].len=1;\n    int a;\n    for(int i=2;i<=n;i++)\n    {\n        for(int j=1;j<i;j++)\n        {\n        \ta=i-j;\n            f[i]=f[i]+(f[j]*a);\n        }\n    }\n    for(int i=1;i<=n;i++)\n    {\n    \ta=(n-i+1)*(n-i+1);\n        dp[i]=f[i]*a;\n    }\n    ans.shu[0]=0;ans.len=1;\n    for(int i=1;i<=n;i++)ans=ans+dp[i];\n    for(int i=ans.len-1;i>=0;i--)printf(\"%d\",ans.shu[i]);\n    printf(\"\\n\");\n    return 0;\n}\n```\n\n\u662f\u4e0d\u662f\u592a\u6162\u4e86\uff1f\n\n\u6211\u4eec\u89c2\u5bdf\u521d\u59cb$f$\u5e8f\u5217\uff1a\n\n$1,1,3,8,21,55,144,377...$\n\n\u53ef\u4ee5\u53d1\u73b0\u4ece\u7b2c\u56db\u9879\u5f00\u59cb\uff0c$f[i]=f[i-1]*3-f[i-2]$\u3002\u8fd9\u4e2a\u53ef\u4ee5\u7528\u6570\u5b66\u5f52\u7eb3\u6cd5\u8bc1\u660e\uff0c\u8fd9\u91cc\u5c31\u4e0d\u5c55\u5f00\u4e86\u3002\n\n\u5f97\u5230\u4e86\u4e00\u7ef4\u9012\u63a8\u5f0f\uff0c\u6211\u4eec\u77e5\u9053\u6b64\u9898\u53ef\u4ee5\u7528\u77e9\u9635\u5feb\u901f\u5e42\u89e3\u51b3\u4e86\u2026\u2026\n\n\u5177\u4f53\u4ee3\u7801\u4e0d\u6253\u4e86\uff0c\u5927\u5bb6\u8bf7\u81ea\u884cyy\u3002\n\n\u603b\u7ed3\u4e00\u4e0b\uff0c\u6b64\u9898\u96be\u5ea6\u771f\u7684\u4e0d\u9ad8\uff0c\u9700\u8981\u6709\u4e00\u5b9a\u7684\u6392\u5217\u7ec4\u5408\u57fa\u7840\uff0c\u662f\u4e00\u9053\u6bd4\u8f83\u6709\u610f\u601d\u7684\u6570\u5b66\u9898\u3002",
        "postTime": 1552379827,
        "uid": 32275,
        "name": "KesdiaelKen",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2144 \u3010[FJOI2007]\u8f6e\u72b6\u75c5\u6bd2\u3011"
    },
    {
        "content": "\u6211\u5bf9\u8fd9\u9898\u975e\u5e38\u6709\u611f\u89e6\uff0c\u4e00\u770b\u5230\u8fd9\u9053\u9898\u5c31\u77e5\u9053\u80af\u5b9a\u662f\u6392\u5217\u7ec4\u5408\uff0c\u4f46\u4ed4\u7ec6\u4e00\u770b\uff0c\u5374\u4e0d\u662f\u90a3\u4e48\u7684\u7b80\u5355\uff0c\u5b83\u867d\u7136\u6570\u636e\u7ed9\u5b9a\u7684\u662fn<=100\uff0c\u4f46\u5b9e\u9645\u4e0a\u5b83\u4e00\u4e2a\u4e2a\u52a0\u8d77\u6765\uff0c\u6570\u636e\u662f\u975e\u5e38\u7684\u5927\uff01\n    \n\u6240\u4ee5\u8bf4\uff0c\u8fd9\u9053\u9898\u662f\u975e\u5e38\u7684\u6bd2\u7624\uff01\u5f53\u4f60\u5c06\u8fd9\u9053\u9898\u7684\u6570\u636e1~5\u4e00\u4e00\u5217\u51fa\u65f6\uff0c\u4f60\u4f1a\u53d1\u73b0\uff1a\u8fd9\u7ec4\u6570\u636e\u975e\u5e38\u773c\u719f\uff01\u6ca1\u9519\u5b83\u5c31\u662f\u53d8\u5f62\u7684\u6590\u6ce2\u90a3\u5951\u6570\u5217\uff01\u9664\u4e86\u7b2c\u4e00\u4e2a1\u4ee5\u5916\uff0c\u5176\u4ed6\u9879\u90fd\u662f\uff08n*2-1\uff09\u7684\u6590\u6ce2\u90a3\u5951\u6570\u5217\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u4e2a\u6570\u5217\u6709\u4e9b\u7279\u6b8a\uff0c\u5c31\u662f\u4ee5\u201c1,3\u201d\u4e3a\u5f00\u7aef\u7684\u6570\u5217\uff01\n\n\u597d\u4e86\uff0c\u8bdd\u4e0d\u591a\u8bf4\uff0c\u8bf7\u5404\u4f4d\u5927\u4fa0\u6b23\u8d4f\u4ee3\u7801\uff01\n```cpp\n#include<iostream>  \nusing namespace std;  \nlong long n,i;  \nstring s1=\"4\",s[3]= {\"0\",\"1\",\"3\"};  \nusing namespace std;  \nint compare(string s1,string s2) {\n \n  \tif(s1.length()>s2.length()) {  \n\t\treturn 1;  \n\t} else if(s1.length()<s2.length()) {  \n\t\treturn -1;  \n\t} else return s1.compare(s2);  \n}\nstring add(string s1,string s2) {  \n                                       \n\tstring s;\n\tint sz1=s1.length();\n\tint sz2=s2.length();\n\tif(sz1<sz2) {\n\t\tfor(int i=1; i<=sz2-sz1; i++)\n\t\t\ts1=\"0\"+s1;\n\t} else {\n\t\tfor(int i=1; i<=sz1-sz2; i++) {\n\t\t\ts2=\"0\"+s2;\n\t\t}\n\t}\n\tsz1=s1.length();\n\tint cf=0;\n\tint temp;\n\tfor(int i=sz1-1; i>=0; i--) {\n\t\ttemp=s1[i]-'0'+s2[i]-'0'+cf;\n\t\tcf=temp/10;\n\t\ttemp%=10;\n\t\ts=char(temp+'0')+s;\n\t}\n\tif(cf!=0) {\n\t\ts=char(cf+'0')+s;\n\t}\n\treturn s;\n}\nstring sub(string s1,string s2) {  \n\tstring s;  \n\tint tmp=s1.length()-s2.length();  \n\tint cf=0;  \n\tfor(int i=s2.length()-1; i>=0; i--) {  \n\t\tif(s1[tmp+i]<s2[i]+cf) {  \n\t\t\ts=char(s1[tmp+i]-s2[i]-cf+'0'+10)+s; \n\t\t\tcf=1;  \n\t\t} else {  \n\t\t\ts=char(s1[tmp+i]-s2[i]-cf+'0')+s;  \n\t\t\tcf=0;  \n\t\t}  \n\t}  \n\tfor(int i=tmp-1; i>=0; i--) {  \n\t\tif(s1[i]-cf>='0') {  \n\t\t\ts=char(s1[i]-cf)+s;  \n\t\t\tcf=0;  \n\t\t} else {  \n\t\t\ts=char(s1[i]-cf+10)+s;  \n\t\t\tcf=1;  \n\t\t}  \n\t}  \n\ts.erase(0,s.find_first_not_of('0'));  \n\treturn s;  \n}  \nstring mul(string s1,string s2) {  \n\tstring s;  \n\tint sz1=s1.length();  \n\tint sz2=s2.length();  \n\tstring tempstr;  \n\tfor(int i=sz2-1; i>=0; i--) {  \n\t\ttempstr=\"\";  \n\t\tint temp=s2[i]-'0';  \n\t\tint t=0;  \n\t\tint cf=0;  \n\t\tif(temp!=0) {  \n\t\t\tfor(int j=1; j<=sz2-1-i; j++)  \n\t\t\t\ttempstr+=\"0\";  \n\t\t\tfor(int j=sz1-1; j>=0; j--) {  \n\t\t\t\tt=(temp*(s1[j]-'0')+cf)%10;  \n\t\t\t\tcf=(temp*(s1[j]-'0')+cf)/10;  \n\t\t\t\ttempstr=char(t+'0')+tempstr;  \n\t\t\t}  \n\t\t\tif(cf!=0)  \n            tempstr=char(cf+'0')+tempstr;\n\t\t}  \n\t\ts=add(s,tempstr);  \n\t}  \n\ts.erase(0,s.find_first_not_of('0'));  \n\treturn s;  \n}  \nint main() {  \n\tcin>>n;  \n\tfor(i=3; i<=n; i++) {  \n\t\ts[i%3]=add(s[(i-1)%3],s[(i-2)%3]);  \n\t}  \n\tif(n%2==1) {  \n\t\tcout<<mul(s[n%3],s[n%3])<<endl;  \n\t} else {  \n\t\tcout<<sub(mul(s[n%3],s[n%3]),s1)<<endl;  \n\t}  \n}  \n```\n\n\u5176\u5b9e\u6211\u8fd9\u4ee3\u7801\u5c31\u662f\u5957\u7528\u4e86\u9ad8\u7cbe\u5ea6\u52a0\u51cf\u4e58\u9664\u6a21\u677f\uff0c\u518d\u5c06\u5b83\u8f6c\u6362\u4e3a\u6590\u6ce2\u90a3\u5951\u6570\u5217\uff01\u8bf7\u5404\u4f4d\u5927\u4f6c\u4eec\u53c2\u8003",
        "postTime": 1550556129,
        "uid": 112334,
        "name": "HCY55",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2144 \u3010[FJOI2007]\u8f6e\u72b6\u75c5\u6bd2\u3011"
    },
    {
        "content": "\u6d1b\u8c37\u5c45\u7136\u6ca1\u6709\u6253\u8868\u7684\u9898\u89e3\uff0c\u8fd9\u4e0d\u79d1\u5b66...\n\n\u8868\u793a\u6211\u8fd9\u79cd\u849f\u84bb\u9762\u5bf9\u8fd9\u79cd\u9012\u63a8\u7b2c\u4e00\u601d\u60f3\u663e\u7136\u662f\u6253\u8868\u554a\n\n\u5148\u8d34\u4e2a\u7528\u6765\u6253\u8868\u7684\u66b4\u529b\uff1a\n\n```cpp\n#include <cstdio>\nstruct node\n{\n\tint l,r;\n}p[100005];\nbool used[100005];\nint f[100005];\nint n,cnt,cct;\nint findf(int x)\n{\n\tif(x==f[x])\n\t{\n\t\treturn x;\n\t}\n\treturn f[x]=findf(f[x]);\n}\nbool check()\n{\n\tfor(int i=1;i<=n+1;i++)\n\t{\n\t\tf[i]=i;\n\t}\n\tfor(int i=1;i<=cct;i++)\n\t{\n\t\tif(used[i])\n\t\t{\n\t\t\tint f1=findf(p[i].l);\n\t\t\tint f2=findf(p[i].r);\n\t\t\tf[f2]=f1;\n\t\t}\n\t}\n\tint ff=0;\n\tfor(int i=1;i<=n+1;i++)\n\t{\n\t\tint f1=findf(i);\n\t\tif(!ff)\n\t\t{\n\t\t\tff=f1;\n\t\t}else if(ff!=f1)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 1;\n}\nvoid dfs(int dep,int tot)\n{\n\tif(dep==cct+1)\n\t{\n\t\tif(tot==n)\n\t\t{\n\t\t\tif(check())\n\t\t\t{\n\t\t\t\tcnt++;\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\tused[dep]=1;\n\tdfs(dep+1,tot+1);\n\tused[dep]=0;\n\tdfs(dep+1,tot);\n}\nint main()\n{\n\tscanf(\"%d\",&n);\t\n\tfor(int i=2;i<=n+1;i++)\n\t{\n\t\tp[++cct].l=1;\n\t\tp[cct].r=i;\t\n\t}\n\tfor(int i=2;i<=n+1;i++)\n\t{\n\t\tif(i==n+1)\n\t\t{\n\t\t\tp[++cct].l=i;\n\t\t\tp[cct].r=2;\n\t\t}else\n\t\t{\n\t\t\tp[++cct].l=i;\n\t\t\tp[cct].r=i+1;\n\t\t}\n\t}\n\tdfs(1,0);\n\tprintf(\"%d\\n\",cnt);\n\treturn 0;\n}\n/*\n1 1\n2 5\n3 16\n4 45\n5 121\n6 320\n*/\n```\n\n\u5b9e\u6d4b\u8fd9\u4e2a\u6253\u8868\u7a0b\u5e8f\u662f\u6b63\u786e\u7684\uff08\u53ef\u4ee5\u83b7\u5f9730\u5206\uff09\n\n\u63a5\u4e0b\u6765\u662f\u672c\u4eba\u5fc3\u8def\u5386\u7a0b\uff1a\n\n\u89c2\u5bdf\u4e00\u4e0b\uff1a1-1,2-5,3-16,4-45...\u627e\u4e00\u4e0b\u524d\u540e\u9879\u5427\uff01\n\n\u89c2\u5bdf\u524d\u540e\u9879\u7684\u500d\u6570\u5173\u7cfb\u5e94\u8be5\u57282~3\u4e4b\u95f4\uff0c\u90a3\u5148\u5b9a\u4e00\u4e2a\u57fa\u7840\u8868\u8fbe\u5f0f\n\nf[i]=2f[i-1]+...\u6216f[i]=3f[i-1]+...\n\n\u5982\u679c\u7cfb\u6570\u75282\uff0c\u53d1\u73b0\u5269\u4e0b\u7684\u90e8\u5206\u957f\u8fd9\u6837\u554a...\n\nf[3]=2f[2]+6\n\nf[4]=2f[3]+13\n\nf[5]=2f[4]+31\n\n...\n\n\u597d\u50cf\u540e\u9762\u7684\u6ca1\u5565\u89c4\u5f8b...\n\n\u90a3\u6362\u7cfb\u6570\u75283\uff01\n\nf[4]=3f[3]-3\n\nf[5]=3f[4]-14\n\n...\n\n\u597d\u50cf\u4e5f\u6ca1\u5565\u554a...\n\n\u7b49\u4e00\u4e0b\uff01\n\n-3=-5+2\n\n-14=-16+2\n\n\u5982\u679c\u4e0b\u9762\u518d\u5199\u4e0b\u6765\uff0c\u5e94\u8be5\u662f-43=-45+2\uff01\n\n\u8fd9\u4e0d\u5c31\u627e\u51fa\u6765\u4e86\u5417\uff01\n\nf[i]=3f[i-1]-f[i-2]+2!\n\n\u4e8e\u662f\u6572\u4e2a\u9ad8\u7cbe\u5ea6\u8fd9\u9898\u5c31\u7ed3\u675f\u4e86...\n\n```cpp\n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <cstdlib>\n#include <iostream>\n#include <algorithm>\n#include <queue>\n#include <stack>\nusing namespace std;\nstruct Bignum\n{\n\tint a[10005];\n\tint ilen;\n}f[105],zero;\nint n;\nBignum add(Bignum x)\n{\n\tBignum ret=x;\n\tret.a[1]+=2;\n\tint i=1;\n\twhile(ret.a[i]>=10)\n\t{\n\t\tret.a[i+1]+=ret.a[i]/10;\n\t\tret.a[i]%=10;\n\t\ti++;\n\t}\n\tif(ret.a[ret.ilen+1])\n\t{\n\t\tret.ilen++;\n\t}\n\treturn ret;\n}\nBignum mul(Bignum x)\n{\n\tBignum ret=zero;\n\tfor(int i=1;i<=x.ilen;i++)\n\t{\n\t\tret.a[i]+=3*x.a[i];\n\t\tret.a[i+1]+=ret.a[i]/10;\n\t\tret.a[i]%=10;\n\t}\n\tret.ilen=x.ilen;\n\twhile(ret.a[ret.ilen+1])\n\t{\n\t\tret.ilen++;\n\t}\n\treturn ret;\n}\nBignum sub(Bignum x,Bignum y)\n{\n\tBignum ret=zero;\n\tfor(int i=1;i<=y.ilen;i++)\n\t{\n\t\tret.a[i]+=x.a[i]-y.a[i];\n\t\tif(ret.a[i]<0)\n\t\t{\n\t\t\tret.a[i]+=10;\n\t\t\tret.a[i+1]--;\n\t\t}\n\t}\n\tfor(int i=y.ilen+1;i<=x.ilen;i++)\n\t{\n\t\tret.a[i]+=x.a[i];\n\t}\n\tret.ilen=x.ilen;\n\twhile(!ret.a[ret.ilen]&&ret.ilen>1)\n\t{\n\t\tret.ilen--;\n\t}\n\treturn ret;\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tf[1].a[1]=1;\n\tf[1].ilen=1;\n\tf[2].a[1]=5;\n\tf[2].ilen=1;\n\tf[3].a[1]=6;\n\tf[3].a[2]=1;\n\tf[3].ilen=2;\n\tfor(int i=4;i<=n;i++)\n\t{\n\t\tf[i]=mul(f[i-1]);\n\t\tf[i]=add(f[i]);\n\t\tf[i]=sub(f[i],f[i-2]);\n\t}\n\tfor(int i=f[n].ilen;i>=1;i--)\n\t{\n\t\tprintf(\"%d\",f[n].a[i]);\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}\n```",
        "postTime": 1539676659,
        "uid": 66905,
        "name": "leozhang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2144 \u3010[FJOI2007]\u8f6e\u72b6\u75c5\u6bd2\u3011"
    },
    {
        "content": "\u600e\u4e48\u505a\u7684\u5c31\u4e0d\u53d1\u4e86\u5176\u4ed6\u9898\u89e3\u4e0a\u6709\uff08\u5176\u5b9e\u6211\u4e5f\u4e0d\u4f1a\u563f\u563f\uff09\uff0c\u53d1\u4e0b\u89c4\u5f8b\u65b9\u4fbf\u5927\u5bb6\u5077\u61d2\uff1a\n\na[i]=3*a[i-1]-a[i-2]+2;\n\na[i]\u8868\u793a i \u8f6e\u75c5\u6bd2\u6709\u51e0\u79cd\uff1b\n\n\u7136\u540e\u6570\u636e\u6d4b\u51fa\u6765\u662f\u8981\u7528\u9ad8\u7cbe\u5ea6\u7684\uff0clong long 60 \u5206\uff1b\n\n\u4ee3\u7801\uff1a\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n\tint a[102][102]={0},w[102]={0};int n;\n\ta[1][1]=1;a[2][1]=5;\n\tscanf(\"%d\",&n);\n\tfor(int i=3;i<=n;i++)a[i][1]=2;\n\tw[1]=1;w[2]=1;\n\tfor(int i=3;i<=n;i++) \n\t{\n\t   for(int j=1;j<=w[i-1]+2;j++)\n\t   {\n\t   \ta[i][j]+=3*a[i-1][j]-a[i-2][j];\n\t   \tif(a[i][j]<0)\n\t\t   {\n\t\t   a[i][j+1]-=((0-a[i][j])/10)+1;\n\t\t    a[i][j]+=(((0-a[i][j])/10)+1)*10;\n\t\t   }\n\t\tif(a[i][j]>=10)\n\t\t{\n\t\t\ta[i][j+1]+=a[i][j]/10;\n\t\t\ta[i][j]%=10;\n\t\t}\n\t   }\n\t   w[i]=w[i-1]+2;\n\t   while(a[i][w[i]]==0)w[i]--;\n\t}\n\t \n\tfor(int i=w[n];i>=1;i--)\n\tprintf(\"%d\",a[n][i]);\n\treturn 0;\n\t\n}\n```  ",
        "postTime": 1526738627,
        "uid": 46557,
        "name": "ROBOT233",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2144 \u3010[FJOI2007]\u8f6e\u72b6\u75c5\u6bd2\u3011"
    },
    {
        "content": "\u9012\u63a8\u5f0f\u697c\u4e0b\u5df2\u7ecf\u8bb2\u5f97\u5f88\u6e05\u695a\u4e86\n\n\u4e00\u4e2a\u53d8\u5f62\u7684\u6590\u6ce2\u90a3\u5951\u6570\u5217\n\nf[0]=1,f[1]=3,f[n]=f[n-1]+f[n-2]\n\n\u7136\u540eF[n]=f[n]^2-4\\*((n+1)%2)\n\n\u81f3\u4e8e\u9ad8\u7cbe\u5c31\u7528py\u6c34\u8fc7\u4e86\n\n# \u8bfb\u5165n\n\n    n=input()\n\n# \u521d\u59cb\u5316\n\n    f=[1,3]\n\n# i\u5faa\u73af\u5230n\uff0c\u8ba1\u7b97f[i]\n\n    for i in range(2,n):\n\n        f.append(f[i-1]+f[i-2])\n\n# \u8f93\u51faF[n]\n\nprint(f[n-1]\\*f[n-1]-4\\*((n+1)%2))\n",
        "postTime": 1515994291,
        "uid": 34238,
        "name": "zhylj",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2144 \u3010[FJOI2007]\u8f6e\u72b6\u75c5\u6bd2\u3011"
    },
    {
        "content": "\u4eca\u5929\u7ed9\u5927\u5bb6\u4ecb\u7ecd\u884c\u5217\u5f0f\n\n\u5f15\u5165\u4e24\u4e2a\u6982\u5ff5 \u6392\u5217\u548c\u9006\u5e8f\n\n\u6392\u5217\u5373\u4e3a\u4e00\u4e2a\u5e8f\u5217\uff0c\u9006\u5e8f\u4e3ai<j&&a[i]>a[j]\u7684\u4e2a\u6570\u8bb0\u4e3ar\uff08a[1],a[2]...a[n]\uff09\n\n\u7136\u540e\u6211\u4eec\u5bf9\u4e8e\u4e00\u4e2an^n\u7684\u884c\u5217\u5f0f\uff0c\u4ed6\u7684\u503c\u5c31\u662f\u03a3\uff08-1\uff09^r(j1,j2,j3...jn)\\*a[1][j1]\\*a[2][j2]\\*...\\*a[n][jn].\u6b64\u65f6j\u4e92\u4e0d\u76f8\u7b49\n\n\u7531\u4e0a\u9762\u53ef\u4ee5\u770b\u51fa\u5171\u6709n\uff01\u4e2a\u6570\u76f8\u52a0\u3002\n\n\u4e0b\u9762\u4ecb\u7ecd\u884c\u5217\u5f0f\u7684\u51e0\u4e2a\u6027\u8d28\n\n1.\u8f6c\u7f6e\u4e0d\u6539\u53d8\u884c\u5217\u5f0f\u7684\u503c\n\n\u8f6c\u7f6e\uff1a\u7b2ci\u884c\u53d8\u6210\u7b2ci\u5217\uff0c\u76f8\u5f53\u4e8e\u5c06\u884c\u5217\u5f0f\u65cb\u8f6c\u4e5d\u5341\u5ea6\u3002\n\n2.\u884c\uff08\u5217\uff09\u7684\u516c\u56e0\u5b50\u53ef\u4ee5\u63d0\u51fa\u6765\n\n3.\u884c\u5217\u5f0f\u5177\u6709\u53ef\u52a0\u6027\n\n4.\u884c\u5217\u5f0f\u4e2d\u5982\u679c\u67d0\u4e24\u884c\uff08\u5217\uff09\u5bf9\u5e94\u4f4d\u7f6e\u6210\u6bd4\u4f8b\u884c\u5217\u5f0f\u7684\u503c\u4e3a0\n\n5.\u884c\u5217\u5f0f\u4e2d\u4efb\u610f\u4e24\u884c\u8c03\u6362\u987a\u5e8f\u884c\u5217\u5f0f\u503c\u4e3a\u76f8\u53cd\u6570\n\n\\*6.\u884c\u5217\u5f0f\u4e2d\u67d0\u884c\uff08\u5217\uff09\u7684\u500d\u6570\u52a0\u5230\u53e6\u5916\u4e00\u884c\uff08\u5217\uff09\u4e0a\u65f6\u884c\u5217\u5f0f\u7684\u503c\u4e0d\u53d8\n\n\u4e0b\u9762\u518d\u4ecb\u7ecd\u4e24\u4e2a\u6982\u5ff5\n\n\u4f59\u5b50\u5f0f\u548c\u4ee3\u6570\u4f59\u5b50\u5f0f\n\n\u4f59\u5b50\u5f0f\uff1a\u62ff\u6389\u4efb\u610f\u4e00\u4e2a\u542b\u6709a[i][j]\u7684\u884c\u548c\u5217\u540e\u5269\u4e0b\u7684n-1\u9636\u7684\u884c\u5217\u5f0f\u4e3aa[i][j]\u7684\u4f59\u5b50\u5f0f,\u503c\u4e3adet(a[i][j])\u3002\n\n\u4ee3\u6570\u4f59\u5b50\u5f0f\uff1aM(i,j)=(-1)^(i+j)\\*det(a[i][j])\u3002\n\n\u5bf9\u4e8e\u884c\u5217\u5f0f\u6211\u4eec\u5fc5\u987b\u8981\u8ba4\u6e05\u4e00\u4e2a\u6982\u5ff5\u5c31\u662f\u867d\u7136\u5b83\u770b\u4e0a\u53bb\u662f\u77e9\u9635\u4f46\u4ed6\u5b9e\u9645\u4e0a\u8868\u73b0\u5f97\u662f\u4e00\u4e2a\u6570\u503c\u3002\n\n\u4f8b\u5982\u4e00\u4e2a\u4e09\u9636\u7684\u884c\u5217\u5f0f\u6211\u4eec\u53ef\u4ee5\u62bd\u8c61\u770b\u6210\u662f\u4e09\u6761\u5411\u91cf\u7684\u9762\u76f8\u4ea4\u6240\u6210\u7684\u51e0\u4f55\u6a21\u578b\u7684\u4f53\u79ef\u3002\n\n\u4e0b\u9762\u7ed9\u51fa\u884c\u5217\u5f0f\u7684\u901a\u9879\n\ndet(A)={ \n\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0 a[1][1] \u00a0 (n=1)\n\n \u00a0\u00a0 \u2211(-1)^(i+j)\\*a[1][j]\\*det(A[1][j]) (j=1.....n) (n>1)\n\n\u00a0 }\n\u884c\u5217\u5f0f\u7684\u503c\u8fd8\u53ef\u4ee5\u5c55\u5f00\u4e3adet(A)=\u2211a[i][1]\\*M(i,1)\u00a0 (i=1.....n)=\u2211a[1][i]\\*M(1,i)\u00a0 (i=1.....n)\u3002\n\n\u5982\u679c\u6211\u4eec\u7a0d\u4f5c\u4fee\u6539\u5c31\u53ef\u4ee5\u5f97\u5230\u53e6\u5916\u4e00\u4e2a\u5f0f\u5b50\u2211a[i][j]\\*M(i,j)\u00a0 (i=1.....n&&i!=j)=\u2211a[j][i]\\*M(j,i)\u00a0 (i=1.....n&&i!=j)=0\u3002\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u975e\u5e38\u6709\u5229\u4e8e\u6211\u4eec\u6c42\u884c\u5217\u5f0f\u503c\u7684\u65b9\u6cd5\n\n\u5728\u884c\u5217\u5f0f\u4e2d\u6211\u4eec\u628a\u5de6\u4e0a\u5230\u53f3\u4e0b\u8fde\u7ebf\uff0c\u5982\u679c\u5728\u8fd9\u6761\u76f4\u7ebf\u4e24\u8fb9\u5b58\u5728\u4e00\u8fb9\u7684\u503c\u90fd\u4e3a0\uff0c\u5219\u7b54\u6848\u4e3aa[1][1]\\*a[2][2]\\*......\\*a[n][n]\n\n\u90a3\u4e48\u5982\u679c\u662f\u53f3\u4e0a\u548c\u5de6\u4e0b\u8fde\u8fb9\u5462\uff0c\u7ed3\u679c\u5c31\u662f\u4e0a\u9762\u7b54\u6848\\*(-1)^((n-1)\\*n/2)\n\n\u770b\u5230\u8fd9\u91cc\u5c31\u53ef\u4ee5\u7528\u6211\u4eec\u7684\u9ad8\u65af\u6d88\u5143\u6c42\u89e3\u884c\u5217\u5f0f\u7684\u503c\u4e86\u590d\u6742\u5ea6\u662fO\uff08n^3\uff09\n\n\u672c\u9898\u5176\u5b9e\u5c31\u662f\u6c42\u751f\u6210\u6811\u4e2a\u6570\uff0c\u5bf9\u4e8e\u57fa\u5c14\u970d\u592b\u77e9\u9635\u53ef\u4ee5\u53c2\u8003\u6211\u7684blog\uff1ahttp://www.cnblogs.com/nbwzyzngyl/p/8120127.html\n\n\u5bf9\u4e8e\u884c\u5217\u5f0f\u53ef\u4ee5\u53c2\u8003\u6211\u7684blog\uff1ahttp://www.cnblogs.com/nbwzyzngyl/p/8039714.html\n\n\u5bf9\u4e8emaxtrix\u5b9a\u7406\u53ef\u4ee5\u53c2\u8003\u6211\u7684blog\uff1a\n\n```cpp\nhttp://www.cnblogs.com/nbwzyzngyl/p/8035005.html\n#include<bits/stdc++.h>\nusing namespace std;\nstruct dayi\n{\n    int s[500],l;\n    void print()\n    {\n        for(int i=l;i;--i)\n        printf(\"%d\",s[i]);\n        return;\n    }\n}f[105];\ndayi mul(dayi a,int x)\n{\n    for(int i=1;i<=a.l;++i)a.s[i]=a.s[i]*x;\n    for(int i=1;i<=a.l;++i)a.s[i+1]+=a.s[i]/10,a.s[i]%=10;\n    if(a.s[a.l+1])++a.l;\n    return a;\n}\ndayi work(dayi a,dayi b)\n{\n    a.s[1]+=2;int j=1;while(a.s[j]>=10)a.s[j+1]++,a.s[j]%=10,j++;\n    for(int i=1;i<=a.l;++i)\n    {\n        a.s[i]-=b.s[i];\n        if(a.s[i]<0)a.s[i]+=10,a.s[i+1]--;\n    }\n    while(!a.s[a.l])a.l--;\n    return a;\n}\nint main()\n{\n    int n;f[1].l=f[2].l=1;f[1].s[1]=1;f[2].s[1]=5;\n    scanf(\"%d\",&n);\n    for(int i=3;i<=n;++i)\n    f[i]=work(mul(f[i-1],3),f[i-2]);\n    f[n].print();\n}\n```",
        "postTime": 1514296376,
        "uid": 25438,
        "name": "\u5927\u5955\u54e5",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2144 \u3010[FJOI2007]\u8f6e\u72b6\u75c5\u6bd2\u3011"
    },
    {
        "content": "\u5f00\u59cb\u5199\u4e86\u4e00\u4e2a\u77e9\u9635\u6811,\u53d1\u73b0\u7b54\u6848\u4f1a\u8d85\u8fc7long long\u7684\u8303\u56f4\uff0c\u800c\u7528\u9ad8\u7cbe\u597d\u50cf\u4f1aT\uff0c\u4e8e\u662f\u82b1\u4e86\u51e0\u5341\u5206\u949f\u53bb\u63a8\u8fd9\u4e2a\u57fa\u5c14\u970d\u592b\u77e9\u9635\u884c\u5217\u5f0f\u7684\u9012\u63a8\u5f0f\u3002\u6211\u4eec\u628a\u8fd9\u4e2a\u56fe\u7684\u57fa\u5c14\u970d\u592b\u77e9\u9635\u6700\u540e\u4e00\u884c\u6700\u540e\u4e00\u5217\u6d88\u53bb\uff0c\u73b0\u5728\u53ea\u9700\u8981\u6c42\u8fd9\u4e2a\u77e9\u9635A\u7684\u884c\u5217\u5f0f\u3002\u6211\u4eec\u5bf9\u8fd9\u4e2a\u77e9\u9635\u6c42\u5b83\u7684\u4ee3\u6570\u4f59\u5b50\u5f0f(\u4e24\u6b21\u6d88\u53bb\u7b2c\u4e00\u884c\u53ef\u4ee5\u5f97\u5230\u4e0b\u9762\u7684f(n))\u3002\n\n\u8bbef(n)\u8868\u793a\u4e0b\u5217\u77e9\u9635\u7684\u884c\u5217\u503c\uff1a\uff08\u4e0eA\u4e0d\u540c\u5728(1,n)\u4e0e(n,1)\uff09\n\n|3 -1 0 ... ... 0  0|\n|-1 3 -1 0 ....0  0|\n|0 -1 3 -1 0 ...  0|\n|...      ...         ...|\n|0  0... ... ...-1 3 |\n\u6d88\u4e24\u6b21\u540e\u53ef\u4ee5\u5f97\u5230f(n)=3\\*f(n-1)-f(n-2)\n\n\u4e8e\u662fdet(A)=3\\*f(n-1)-2\\*f(n-2)-2\n\n\u4e8e\u662f\u7279\u5224n=1,n=2\uff0c\u5176\u4f59\u5199\u9ad8\u7cbe\u9012\u63a8\u5373\u53ef\n\n\u7bc7\u5e45\u539f\u56e0\uff0c\u5177\u4f53\u8fc7\u7a0b\u53ef\u4ee5\u53c2\u89c1\u6211\u7684\u535a\u5ba2:\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n```cpp\nhttp://www.cnblogs.com/thkkk/p/7657664.html\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<iostream>\n#include<vector>\n#include<algorithm>\n#include<queue>\n#include<bitset>\n#include<cmath>\n#define P puts(\"lala\")\n#define pc cerr<<\"lala\"<<endl\n#define HH puts(\"\")\n#define pb push_back\n#define pf push_front\n#define fi first\n#define se second \n#define mkp make_pair\nusing namespace std;\ninline void read(int &re)\n{\n    char ch=getchar();int g=1;\n    while(ch<'0'||ch>'9') {if(ch=='-')g=-1;ch=getchar();}\n    re=0;\n    while(ch<='9'&&ch>='0') re=(re<<1)+(re<<3)+(ch^48),ch=getchar();\n    re*=g;\n}\ntypedef long long ll;\ninline void read(ll &re)\n{\n    char ch=getchar();ll g=1;\n    while(ch<'0'||ch>'9') {if(ch=='-')g=-1;ch=getchar();}\n    re=0;\n    while(ch<='9'&&ch>='0') re=(re<<1)+(re<<3)+ch-48ll,ch=getchar();\n    re*=g;\n}\nconst int N=109;\nint n;\nstruct big\n{\n    int len;\n    int s[100];\n    big() {clean();}\n    void clean()\n    {\n        memset(s,0,sizeof(s));len=0;\n    }\n    void operator = (int x)\n    {\n        for(;x;x/=10) s[len++]=x%10;\n    }\n    void print()\n    {\n        for(int i=len-1;i>=0;--i) printf(\"%d\",s[i]);\n        putchar('\\n');\n    }\n};\nbig c;\nbig operator + (big a,big b)\n{\n    int len=max(a.len,b.len);\n    c.clean();\n    c.len=len;\n    for(int i=0;i<len;++i) c.s[i]=a.s[i]+b.s[i];\n    for(int i=0;i<len;++i) c.s[i+1]+=c.s[i]/10,c.s[i]%=10;\n    if(c.s[len]) c.len++;\n    return c;\n}\nbig operator - (big a,big b)//a > b\n{\n    c.clean();\n    for(int i=0;i<a.len;++i) \n    {\n        c.s[i]+=a.s[i]-b.s[i];\n        if(c.s[i]<0) c.s[i]+=10,a.s[i+1]--;\n    }\n    int len=a.len-1;\n    for(;!c.s[len];len--);\n    c.len=len+1;\n    return c;\n}\nbig operator * (big a,big b)\n{\n    int len=a.len+b.len-1;\n    c.clean();\n    c.len=len;\n    for(int i=0;i<a.len;++i) for(int j=0;j<b.len;++j) c.s[i+j]+=a.s[i]*b.s[j];\n    for(int i=0;i<len;++i) c.s[i+1]+=c.s[i]/10,c.s[i]%=10;\n    if(c.s[len]) c.len++;\n    return c;\n}\nbig f[N];\nint main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\"1.in\",\"r\",stdin);freopen(\"1.out\",\"w\",stdout);\n#endif\n    int i,j,opt,T;\n    read(n);\n    f[1]=3;f[2]=8;\n    if(n==1) {printf(\"1\");return 0;}\n    else if(n==2) {printf(\"5\");return 0;}\n    big three,two;\n    three=3;two=2;\n    for(i=3;i<=n;++i) f[i]=three*f[i-1]-f[i-2];\n    big ans=(three*f[n-1])-(two*f[n-2])-two;\n    ans.print();\n    return 0;\n}\n```",
        "postTime": 1507807562,
        "uid": 32776,
        "name": "BLMontgomery",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2144 \u3010[FJOI2007]\u8f6e\u72b6\u75c5\u6bd2\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u76ee\u7684\u4f5c\u6cd5\u849f\u84bb\u8ba4\u4e3a\u5c31\u662f\u9760\u9012\u63a8\uff0c\u9012\u63a8\u5173\u7cfb\u867d\u7136\u96be\u627e\u4f46\u6bd5\u7adf\u8fd8\u662f\u53ef\u4ee5\u901a\u8fc7\u6b7b\u7b97\u53d1\u73b0\u5982\u4e0b\u89c4\u5f8b\uff1a\n\n\u82e5n\u4e3a\u5076\u6570\uff0c\u5219ff[n]=f[n]\\*f[n]-4\\*((n+1))mod 2;\u82e5n\u4e3a\u5947\u6570\uff0c\u5219ff[n]=f[n]\\*f[n]\uff0cf[n]\u4e3a\u7b2c\u4e00\u9879\u662f1\uff0c\u7b2c\u4e8c\u9879\u662f3\u7684\u6590\u6ce2\u90a3\u5951\u6570\u5217\uff08\u53c2\u89c1\u697c\u4e0a\uff09\n\n\u505a\u5b8c\u8fd9\u9053\u9898\uff0c\u6211\u53d1\u73b0\u4e86\u9ad8\u7cbe\u5ea6\u6a21\u7248\u7684\u91cd\u8981\u6027\u3002\u3002\u3002\u4e0b\u9644PASCAL\u4ee3\u7801\uff1a\n\n\n```cpp\nuses math;\ntype arr1=array[0..1000]of integer;\nvar i,j,k,m,n,sum:longint;\n    f,ff:array[0..1000]of arr1;\n    fff:arr1;\nfunction jia(a,b:arr1):arr1;//\u4e09\u5927\u6a21\u7248\nvar i,j,k:longint;\nbegin\n  fillchar(jia,sizeof(jia),0);//\u522b\u5fd8\u4e86\u521d\u59cb\u5316\n  k:=max(a[0],b[0]);\n  for i:=1 to k do\n    begin\n      jia[i]:=jia[i]+a[i]+b[i];\n      jia[i+1]:=jia[i] div 10;\n      jia[i]:=jia[i] mod 10;\n    end;\n  if jia[k+1]<>0 then\n    jia[0]:=k+1\n  else\n    jia[0]:=k;\nend;\nfunction cheng(a,b:arr1):arr1;\nvar i,j,x:longint;\nbegin\n  fillchar(cheng,sizeof(cheng),0);\n  for i:=1 to a[0] do\n    begin\n      x:=0;\n      for j:=1 to b[0] do\n        begin\n          cheng[i+j-1]:=a[i]*b[j]+x+cheng[i+j-1];\n          x:=cheng[i+j-1] div 10;cheng[i+j-1]:=cheng[i+j-1] mod 10;\n        end;\n      cheng[i+j]:=x;\n    end;\n  cheng[0]:=i+j;\n  while (cheng[cheng[0]]=0) and (cheng[0]>1) do dec(cheng[0]);\nend;\nfunction jian(a,b:arr1):arr1;\nvar i,j,k:longint;\nbegin\n  jian:=a;\n  for i:=1 to jian[0] do\n    begin\n      if jian[i]<b[i] then\n        begin\n          jian[i+1]:=jian[i+1]-1;\n          jian[i]:=jian[i]+10;\n        end;\n      jian[i]:=jian[i]-b[i];\n    end;\n  while jian[jian[0]]=0 do dec(jian[0]);\nend;\nbegin\n  readln(n);\n  fillchar(f,sizeof(f),0);\n  f[1][0]:=1;f[1][1]:=1;\n  f[2][0]:=1;f[2][1]:=3;\n  fff[0]:=1;fff[1]:=4;//\u82e5\u5176\u4e3a\u5076\u6570\u9700\u8981\u51cf4\uff0c\u5c064\u6254\u8fdb\u6570\u7ec4\uff0c\u4e3b\u8981\u662f\u4e3a\u4e86\u65b9\u4fbf\u4f7f\u7528\u6a21\u7248\n  if n=1 then\n    begin\n      writeln(1);\n      exit;\n    end;\n  if n=2 then\n    begin\n      writeln(5);\n      exit;\n    end;\n  for i:=3 to n do\n    begin\n      f[i]:=jia(f[i-1],f[i-2]);\n      ff[i]:=jian(cheng(f[i],f[i]),fff);\n    end;\n  for i:=ff[n][0] downto 1 do\n    write(ff[n][i]);\nend.\n\n```",
        "postTime": 1506519511,
        "uid": 55927,
        "name": "\u83dc\u9e1fztc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2144 \u3010[FJOI2007]\u8f6e\u72b6\u75c5\u6bd2\u3011"
    },
    {
        "content": "\u5bf9\u4e8e\u8fd9\u4e2a\u6211\u4eec\u53ef\u4ee5\u9012\u63a8\u51fa\u6765\n\n\u6211\u4eec\u53ea\u8981\u9009\u62e9\u8fde\u5728\u4e00\u8d77\u6709\u51e0\u4e2a\u5c31\u884c\u4e86\uff0c\u76f8\u5f53\u4e8e\u628an\u5206\u6210\u5f88\u591a\u6bb5\u8fde\u7eed\u7684\u5706\u5f27\n\n\u6216\u8005\uff0c\u4f60\u53ef\u4ee5\u628an\u4e2a\u70b9\u6446\u6210\u4e00\u6392\uff0c\u4e2d\u5fc3\u6446\u5728\u4e0b\u9762\n\n\u5c31\u662f\u628an\u62c6\u6210\u5f88\u591a\u4e2a\u6570\u5b57\n\nf[i]:=i\\*i\uff08\u4ecef[0]\u9012\u63a8\u7684\uff0c\u5373\u628a\u5916\u9762\u7684n\u4e2a\u5168\u90e8\u8fde\u8d77\u6765\uff0c\u518d\u8fde\u4e00\u6761\u5f80\u4e2d\u95f4\uff09+f[i-1]+f[i-2]\\*2+...+f[1]\\*(i-1)\n\n\u7136\u540e\u53ef\u4ee5\u5199\u51fa\n\nf[i]:=f[i-1]+f[1]+f[2]+...+f[i-1]+2\\*i-1\n\nf[1]+f[2]+f[3]+...+f[i-1]\u53ef\u4ee5\u7528\u4e00\u4e2asum\u6765\u8bb0\u5f55\n\n```delphi\n\nconst\n  h=1000000000000000000;\ntype\n  aa=array[0..4]of int64;\nvar\n  f1,f2,sum:aa;\n  n,i,j:longint;\n  k:int64;\n \nprocedure jia(var a,b:aa);\nbegin\n  for j:=1 to b[0] do\n    inc(a[j],b[j]);\n  if a[0]<b[0] then a[0]:=b[0];\n  for j:=1 to a[0] do\n    begin\n      inc(a[j+1],a[j]div h);\n      a[j]:=a[j]mod h;\n    end;\n  j:=a[0]+1;\n  while a[j]>0 do\n    begin\n      inc(a[0]);\n      inc(a[j+1],a[j]div h);\n      a[j]:=a[j]mod h;\n      inc(j);\n    end;\nend;\n \nprocedure print(var a:aa);\nbegin\n  write(a[a[0]]);\n  for j:=a[0]-1 downto 1 do\n    begin\n      k:=h div 10;\n      while k>1 do\n        begin\n          if a[j]<k then write(0);\n          k:=k div 10;\n        end;\n      write(a[j]);\n    end;\nend;\n \nbegin\n  read(n);\n  for i:=1 to n do\n    begin\n      inc(f2[1],2*i-1);\n      jia(f2,sum);\n      jia(sum,f2);\n      f1:=f2;\n    end;\n  print(f1);\nend.\n\n```",
        "postTime": 1439214844,
        "uid": 3911,
        "name": "Skywalker_David",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2144 \u3010[FJOI2007]\u8f6e\u72b6\u75c5\u6bd2\u3011"
    },
    {
        "content": "       \u4e00\u5f00\u59cb\u770b\u8fd9\u9053\u9898\u53ef\u80fd\u6ca1\u6709\u4ec0\u4e48\u5934\u7eea\uff0c\u4ed4\u7ec6\u4e00\u770b\u6211\u4eec\u53d1\u73b0\uff0c\u6838\u539f\u5b50\u81f3\u5c11\u548c\u57fa\u539f\u5b50\u6709\u4e00\u6761\u4fe1\u606f\u901a\u9053\u76f4\u63a5\u76f8\u8fde\uff0c\u4e14\u5982\u679c\u8bf4p\u6761\u4e0e\u6838\u539f\u5b50\u8fde\u63a5\u7684\u4fe1\u606f\u901a\u9053\u53ca\u5176\u4e24\u7aef\u5c06\u75c5\u6bd2\u5206\u6210p\u4e2a\u57fa\u539f\u5b50\u548c\u57fa\u539f\u5b50\u4e4b\u95f4\u7684\u4fe1\u606f\u901a\u9053\u7684\u96c6\u5408V={s,t,u}\uff0c\u5176\u4e2ds\u662f\u57fa\u539f\u5b50\u96c6\u5408\uff0ct\u662f\u57fa\u539f\u5b50\u4e4b\u95f4\u7684\u4fe1\u606f\u901a\u9053\u96c6\u5408\uff0cu\u662f\u4e0e\u6838\u539f\u5b50\u8fde\u63a5\u7684\u4fe1\u606f\u901a\u9053\u96c6\u5408\uff0c\u5fc5\u6709|s|=|t|\u4e14|u|>0\uff08\u8bf7\u8bfb\u8005\u81ea\u5df1\u8bc1\u660e\uff09\u3002\n       \u6240\u4ee5\uff0c\u6211\u4eec\u8bbef[i][j]\u8868\u793a\u5728\u5df2\u77e5\u67d0\u4e24\u4e2a\u76f8\u90bb\u7684\u57fa\u539f\u5b50\u6ca1\u6709\u76f8\u8fde\u7684\u60c5\u51b5\u4e0b\uff0c\u6709i\u6761\u76f4\u63a5\u76f8\u8fde\u7684\u6838\u539f\u5b50\u548c\u57fa\u539f\u5b50\u7684\u4fe1\u606f\u901a\u9053\uff0c\u6709j\u4e2a\u57fa\u539f\u5b50\u7684\u8f6e\u72b6\u75c5\u6bd2\uff0c\u5219f[i][j]=\u2211(f[i-1][k-1]\\*(j-k+1)(1<=k<=j))\u3002\u600e\u4e48\u8bc1\u660e\u8fd9\u4e2a\u516c\u5f0f\u5462\uff1f\u8bbe\u4e00\u4e2a\u6838\u539f\u5b50x\u8fde\u63a5\u7684\u4fe1\u606f\u901a\u9053\u53ca\u5176\u4e24\u7aefx,y\u5c06\u57fa\u539f\u5b50a1,b1\u6ca1\u6709\u76f8\u8fde\u75c5\u6bd2V={s,t,u}\u5206\u6210\u4e24\u4e2a\u96c6\u5408V1={s1,t1,\u2205}\u548cV2={s2,t2,u2}\uff0c\u5176\u4e2ds1\u7684\u5143\u7d20\u987a\u65f6\u9488\u4f9d\u6b21\u4e3aa1,a2,\u2026,a|s1|\uff1bs2\u7684\u5143\u7d20\u987a\u65f6\u9488\u4f9d\u6b21\u4e3ab|s2|,b(|s2|-1),\u2026,b1\u3002\u5219V1\u6709C(|s1|+1,|t1|)=C(|s1|+1,|s1|)=|s1|+1=|s|-|s2|+1\u60c5\u51b5\uff1bV2\u76f8\u5f53\u4e8e\u4e00\u4e2ab1,b|s2|\u6ca1\u6709\u76f8\u90bb\u7684\u75c5\u6bd2V2'={s2,t2,u-{x}},\u6709f[|u|-1][s2]\u79cd\u60c5\u51b5\uff0c\u6240\u4ee5V\u6709(|s|-|s2|+1)\\*f[|u|-1][s2]\u79cd\u60c5\u51b5\u3002\u82e5y\u4e0d\u786e\u5b9a\uff0cs2\u4fbf\u4e0d\u786e\u5b9a\uff0c\u4e8e\u662f\u6709\u2211((|s|-l+1)\\*f[|u|-1][s2](1<=l<=|s|))=f[i][j]\u79cd\u60c5\u51b5\u3002\u4f46\u662f\u4e00\u4e2a\u8f6e\u72b6\u75c5\u6bd2\u53ea\u8981\u662f\u76f8\u90bb\u7684\u4e24\u70b9\u90fd\u6709\u53ef\u80fd\u8fde\u8fb9\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4efb\u610f\u8fde\u63a5\u4e00\u6761\u4e0e\u6838\u539f\u5b50\u8fde\u63a5\u5f97\u4fe1\u606f\u901a\u9053\uff0c\u5c06\u5176\u8f6c\u5316\u4e3aV\u7684\u5f62\u5f0f\u3002\u4e0d\u8fc7\u56e0\u4e3a\u6709\u53ef\u80fd\u51fa\u73b0\u91cd\u590d\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u9664\u4ee5\u91cd\u590d\u7684\u4e2a\u6570\u3002\u82e5\u7b54\u6848\u4e3am\uff0c\u5177\u4f53\u516c\u5f0f\u662fm=f[i][n-1]\\*n/(i+1)\uff08\u8bf7\u8bfb\u8005\u81ea\u5df1\u63a8\u5bfc\uff09\u3002\n\u8fd8\u6709\u4e00\u70b9\uff0c\u8fd9\u9053\u9898\u9700\u8981\u9ad8\u7cbe\u5ea6\u3002\u5219\u8fd9\u9053\u9898\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO((floor(log10(m))+1)\u00b7n^3)\uff0clog10\u662f\u6c42\u4ee510\u4e3a\u5e95\u7684\u5bf9\u6570\uff0cfloor\u5c06\u5c0f\u6570\u7528\u53bb\u5c3e\u6cd5\u4fdd\u7559\u6574\u6570\u3002\n\n\u9644\u4ee3\u7801\uff1a\n\n1\u3001\u5355\u7cbe\u5ea6\uff1a\n\n```cpp\n\n#include<iostream>   \nusing namespace std;  \nlong long n,i,f[101][100]={},j,k,l,answer=0;  \nint main ()  \n{  \n    cin>>n;  \n    for (i=0;i<n;i++)  \n    f[0][i]=i+1;  \n    for (i=1;i<n;i++)  \n    for (j=i;j<n;j++)  \n    for (k=1;k<=j;k++)  \n    f[i][j]+=f[i-1][k-1]*(j-k+1);  \n    for (i=0;i<n;i++)  \n    answer+=f[i][n-1]*n/(i+1);  \n    cout<<answer<<endl;  \n    return 0;  \n}  \n\n```\n2\u3001\u9ad8\u7cbe\u5ea6\uff1a\n\n```cpp\n\n#include<iostream> \nusing namespace std;\nlong long n,i,f[101][100][51]={},j,k,l,answer[51]={},temp1[51]={},temp2[51]={};\nint main ()\n{\n    cin>>n;\n    for (i=0;i<n;i++)\n    f[0][i][0]=i+1;\n    for (i=0;i<n;i++)\n    for (j=0;j<50;j++)\n    {\n        f[0][i][j+1]=f[0][i][j]/10;\n        f[0][i][j]%=10;\n    }\n    for (i=1;i<n;i++)\n    for (j=i;j<n;j++)\n    for (k=1;k<=j;k++)\n    for (l=0;l<50;l++)\n    {\n        f[i][j][l]+=f[i-1][k-1][l]*(j-k+1);\n        f[i][j][l+1]+=f[i][j][l]/10;\n        f[i][j][l]%=10;\n    }\n    for (i=0;i<n;i++)\n    {\n        for (j=0;j<50;j++)\n        temp1[j]=0;\n        for (j=0;j<50;j++)\n        temp2[j]=0;\n        for (j=0;j<50;j++)\n        {\n            temp1[j]+=f[i][n-1][j]*n;\n            temp1[j+1]=temp1[j]/10;\n            temp1[j]%=10;\n        }\n        for (j=50;j>=0;j--)\n        {\n            if (j>0)\n            temp1[j-1]+=temp1[j]%(i+1)*10;\n            temp2[j]+=temp1[j]/(i+1);\n        }\n        for (j=0;j<=50;j++)\n        {\n            answer[j]+=temp2[j];\n            answer[j+1]+=answer[j]/10;\n            answer[j]%=10;\n        }\n    }\n    for (i=50;answer[i]==0;i--);\n    for (;i>=0;i--)\n    cout<<answer[i];:\n    return 0;\n}\n\n```",
        "postTime": 1438603691,
        "uid": 4865,
        "name": "Mr_Li",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2144 \u3010[FJOI2007]\u8f6e\u72b6\u75c5\u6bd2\u3011"
    },
    {
        "content": "\u9996\u5148\u8fd9\u9898\u9898\u610f\u5148\u770b\u61c2\uff0c\u5c31\u662f\u6c42\u4e00\u4e2a\u56fe\u4e2d\u7684\u6700\u5c0f\u751f\u6210\u6811\u6570\u91cf~~\u7136\u540e\u7528\u77e9\u9635\u6811\u5b9a\u7406+\u9ad8\u7cbe\u778e\u641e\u641e~~\n\n\u7136\u800c\u4f5c\u4e3a\u4e00\u4e2a\u5565\u4e5f\u4e0d\u4f1a\u7684\u83dc\u9e21\uff0c\u600e\u4e48\u624d\u80fdA\u6389\u8fd9\u9898\u5462\uff1f\n\n\u8fd9\u79cd\u9898\u5f53\u7136\u662f\u627e\u9012\u63a8\u5f0f\u5b50\n\n\u6240\u4ee5\u6253\u8868\u627e\u89c4\u5f8b\uff0c\u81ea\u5df1\u5199\u5199\u753b\u753b\u6570\u6570~~\u7136\u800cn=4\u670945\u79cd\u60c5\u51b5233~~\n\n\u7136\u540e\u4f60\u53d1\u73b0\uff1a\n\n| n | ans |\n| :----------: | :----------: |\n| 0 | 0 |\n| 1 | 1 |\n| 2 | 5 |\n| 3 | 16 |\n| 4 |  45|\n\n\n\u53ef\u4ee5\u6109\u5feb\u7684\u53d1\u73b0$f[i]=3*(f[i-1]-f[i-3])+f[i-4]$\n\n\u672c\u6765\u6211\u60f3\u7528\u77e9\u4e58\u7684\u7ed3\u679c\u53d1\u73b0$n<=100$\u6ca1\u5fc5\u8981\n\n\u5957\u4e0a\u9ad8\u7cbe\u5ea6\uff0c\u4e71\u6253\u4e00\u901a\u8fd9\u9898\u5c31A\u5566\n\n\u4ee3\u7801\uff1a\n```\n# include<iostream>\n# include<cstring>\n# include<cstdio>\nusing namespace std;\nint n;\nint a[101],b[101];\nstring f[101];\nstring GET1(string A,string B)\n{\n  \tint len;\n\tmemset(a,0,sizeof(a));\n\tmemset(b,0,sizeof(b));\n  \ta[0]=A.length();\n  \tfor(int i=1;i<=a[0];++i)\n      a[i]=A[a[0]-i]-'0';\n\tb[0]=B.length();\n  \tfor(int i=1;i<=b[0];++i)\n      b[i]=B[b[0]-i]-'0';\n  \tlen=(a[0]>b[0]?a[0]:b[0]);\n  \tfor(int i=1;i<=len;++i)\n      a[i]+=b[i],a[i+1]+=a[i]/10,a[i]%=10;   \n  \t++len;\n  \twhile(!a[len]&&len>1) --len;\n  \tstring ans=\"\";\n\tfor(int i=len;i>=1;--i)\n      ans+=a[i]+48;\n    return ans;\n}\nstring GET2(string A,int B)\n{\n\tint len;\n  \tmemset(a,0,sizeof(a));\n  \tmemset(b,0,sizeof(b));\n  \ta[0]=A.length();\n  \tfor(int i=1;i<=a[0];++i)\n      a[i]=A[a[0]-i]-'0';\n  \tfor(int i=1;i<=a[0];++i)\n      b[i]+=a[i]*B,b[i+1]+=b[i]/10,b[i]%=10;   \n  \tlen=a[0]+2;\n  \twhile(!b[len]&&len>1) --len;\n  \tstring ans=\"\";\n  \tfor(int i=len;i>=1;--i)\n  \t  ans+=b[i]+48;\n  \treturn ans;\n}\nstring GET3(string A,string B)\n{\n\tmemset(a,0,sizeof(a));\n  \tmemset(b,0,sizeof(b));\n\ta[0]=A.length();\n  \tfor(int i=1;i<=a[0];++i)\n      a[i]=A[a[0]-i]-'0';\n  \tb[0]=B.length();\n  \tfor(int i=1;i<=b[0];++i)\n      b[i]=B[b[0]-i]-'0';\n    for(int i=1;i<=a[0];++i)\n      {\n\t  \ta[i]-=b[i];\n       \tif(a[i]<0) --a[i+1],a[i]+=10;\n      }\n    ++a[0];\n    while(!a[a[0]]&&a[0]>1) --a[0];\n    string ans=\"\";\n    for(int i=a[0];i>=1;--i)\n      ans+=a[i]+48;\n    return ans;\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tf[0]=\"0\",f[1]=\"1\",f[2]=\"5\",f[3]=\"16\";\n\tfor(int i=4;i<=n;++i)\n\t  f[i]=GET1(GET2(GET3(f[i-1],f[i-3]),3),f[i-4]);\n\tint len=f[n].length();\n\tfor(int i=0;i<len;++i)\n\t  printf(\"%c\",f[n][i]);\n\treturn 0;\n}\n```\n\nemmm\u3002\u3002\u3002\u6211\u4f30\u8ba1\u627e\u89c4\u5f8b+\u63a8\u5f0f\u5b50+\u6253\u9ad8\u7cbe\u8003\u8bd5\u5c31\u7ed3\u675f\u4e86233\n\n\u6240\u4ee5\u8fd8\u662f\u4e56\u4e56\u53bb\u5b66\u77e9\u9635\u6811\u5427~~\u8d77\u7801\u627e\u89c4\u5f8b\u4e0d\u7528\u4e00\u4e2a\u4e00\u4e2a\u753b\u4e86~~",
        "postTime": 1526996738,
        "uid": 49206,
        "name": "Dispwnl",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2144 \u3010[FJOI2007]\u8f6e\u72b6\u75c5\u6bd2\u3011"
    }
]