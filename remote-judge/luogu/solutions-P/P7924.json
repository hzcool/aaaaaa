[
    {
        "content": "## P7924 \u51fa\u9898\u4eba\u9898\u89e3\n\n+ **\u5206\u6790**\n\n\u5c31\u62ff\u9898\u76ee\u91cc\u7684\u56fe\u7247\u5206\u6790\u5427\u5427qwq\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/a2oku1vq.png)\n\n\u5f88\u663e\u7136\uff0c $6$ \u8282\u70b9\u5230 $5$ \u8282\u70b9\u6709\u4e24\u79cd\u65b9\u5f0f\u53ef\u4ee5\u5230\u8fbe\uff0c\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u5230\uff0c\u7531\u4e8e\u8fd9\u4e2a\u56fe\u662f\u65e0\u5411\u56fe\uff0c\u6240\u4ee5\u53ea\u8981\u6709\u4e24\u6761\u53ca\u4ee5\u4e0a\u7684\u8def\u5f84\uff0c\u5c31\u4f1a\u5f62\u6210\u4e00\u4e2a\u73af\uff0c\u6b64\u5916\u8fd9\u4e2a\u73af\u53ef\u80fd\u4e0d\u662f\u7b80\u5355\u73af\u3002\n\n\u90a3\u8fd9\u662f\u4ec0\u4e48\u5462\uff1f \u5f88\u663e\u7136\uff0c\u8fb9\u53cc\u8054\u901a\u5206\u91cf\uff01\n\n\u90a3\u8fd9\u4e2a\u65f6\u5019\u5c31\u53ef\u4ee5\u5bf9\u8fd9\u4e2a\u56fe\u8fdb\u884c\u8fb9\u53cc\u7f29\u70b9\uff0c\u53ef\u5f97\uff0c\u7f29\u5b8c\u70b9\u540e\u4e00\u5b9a\u662f\u4e00\u9897\u6811\u3002\u8fd9\u65f6\u5019\u4e24\u70b9\u4e4b\u95f4\u6240\u6709\u7684\u8def\u5f84\u5c31\u662f\u4e24\u70b9\u6240\u5728\u6811\u7684\u70b9\u4e4b\u95f4\u7684\u8def\u5f84\u4e86\uff0c\u8fd9\u4e2a\u8def\u5f84\u80af\u5b9a\u662f\u552f\u4e00\u7684\u3002\u7531\u4e8e\u9898\u76ee\u8981\u6c42\uff0c\u4e00\u4e2a\u70b9\u7684\u4ef7\u503c\u53ea\u80fd\u53d6\u4e00\u6b21\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u770b\u770b\u54ea\u4e9b\u6811\u4e0a\u7684\u70b9\u88ab\u8986\u76d6\u8fc7\u5c31\u597d\u4e86\uff0c\u6811\u4e0a\u5dee\u5206\u53ef\u4ee5\u5f88\u7b80\u5355\u7684\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u4ee3\u7801\u601d\u8def\uff1a\u7f29\u70b9\uff0c\u6bcf\u4e00\u4e2a\u5927\u70b9\u4e2d\u4fdd\u5b58\u8be5\u8fb9\u53cc\u4e2d\u7684\u6240\u6709\u5c0f\u70b9\u7684\u6743\u503c\u548c\u3002\u7136\u540e\u5bf9\u5927\u70b9\u91cd\u65b0\u5efa\u56fe\uff0c\u7531\u4e0a\u9762\u7684\u5206\u6790\u53ef\u5f97\uff0c\u4e00\u5b9a\u662f\u68f5\u6811\u3002\u7136\u540e\u5c31\u6109\u5feb\u7684\u8dd1 LCA \u7136\u540e\u5dee\u5206\u5c31\u597d\u4e86\u3002\n\n\u7531\u4e8e\u672c\u9898\u65f6\u95f4\u9650\u5236\u6bd4\u8f83\u7d27\uff0c\u5efa\u8bae\u91c7\u7528\u5feb\u8bfb\u548c\u6811\u5256\u8dd1 LCA \u9632\u6b62\u8d85\u65f6\u95ee\u9898\u3002\n\n\u6ce8\u610f\uff0c\u4e8c\u6b21\u5efa\u56fe\u7684\u65f6\u5019\u4e0d\u8981\u4ece $1$ \u5230 $n$ \u7136\u540e\u904d\u5386\u90bb\u63a5\u8868\uff0c\u8981\u63d0\u524d\u5b58\u597d\u7136\u540e\u8fdb\u884c\u904d\u5386\u3002\n\n+ **Code**\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<iostream>\n#include<cstring>\n#include<ctime>\n#include<cmath>\nusing namespace std;\n#define maxn 4000005\nstruct aaa{\n\tint to,nxt;\n}a[maxn];\ninline int read() {\n\tint res=0; char ch;\n\tdo ch=getchar(); while(ch<'0' || ch>'9');\n\twhile(ch>='0' && ch<='9') res=res*10+(ch&15), ch=getchar();\n\treturn res;\n}\nint head[maxn],color[maxn],col,dfn[maxn],low[maxn],cnt,sum[maxn],val[maxn];\n#include<stack>\nstack<int> s;\nbool vis[maxn];\nvoid dfs(int u,int fa) {\n\tlow[u]=dfn[u]=++cnt;\n\ts.push(u);\n\tvis[u]=true;\n\tfor(int i=head[u];i!=-1;i=a[i].nxt) {\n\t\tint v=a[i].to;\n\t\tif(v==fa) continue;\n\t\tif(!dfn[v]) {\n\t\t\tdfs(v,u);\n\t\t\tlow[u]=min(low[u],low[v]);\n\t\t} else if(vis[v]) low[u]=min(low[u],dfn[v]);\n\t}\n\tif(dfn[u]==low[u]) {\n\t\tint y; col++;\n\t\twhile(1) {\n\t\t\ty=s.top();\n\t\t\ts.pop();\n\t\t\tvis[y]=0;\n\t\t\tsum[col]+=val[y]; color[y]=col;\n\t\t\tif(y==u) break;\n\t\t}\n\t}\n}\nint n,m,tot;\nvoid add(int x,int y) {\n\ta[tot].to=y;\n\ta[tot].nxt=head[x];\n\thead[x]=tot++;\n}\nint Tot,Head[maxn];\naaa b[maxn];\nvoid Add(int x,int y) {\n\tb[Tot].to=y;\n\tb[Tot].nxt=Head[x];\n\tHead[x]=Tot++;\n}\nint ci;\nint fa[maxn],top[maxn],son[maxn],d[maxn],dep[maxn],siz[maxn];\nvoid dfs1(int u,int f) {\n\tfa[u]=f;\n\tdep[u]=dep[f]+1;\n\tsiz[u]=1;\n\tint maxsiz=0;\n    ci++;\n\tfor(int i=Head[u];i!=-1;i=b[i].nxt) {\n\t\tint v=b[i].to;\n\t\tif(v==f) continue;\n\t\tdfs1(v,u);\n\t\tsiz[u]+=siz[v];\n\t\tif(siz[v]>maxsiz) {\n\t\t\tmaxsiz=siz[v];\n\t\t\tson[u]=v;\n\t\t}\n\t}\n}\nvoid dfs2(int u,int t) {\n\ttop[u]=t;\n\tif(son[u]) dfs2(son[u],t);\n\tfor(int i=Head[u];i!=-1;i=b[i].nxt) {\n\t\tint v=b[i].to;\n\t\tif(v==fa[u] || v==son[u]) continue;\n\t\tdfs2(v,v);\n\t}\n}\nint lca(int x,int y) {\n\twhile(top[x]!=top[y]) {\n\t\tif(dep[top[x]] < dep[top[y]]) swap(x,y);\n\t\tx=fa[top[x]];\n\t}\n\treturn dep[x]<dep[y]?x:y;\n}\nint ans;\nbool viss[maxn];\nvoid dfs3(int u) {\n\tviss[u]=true;\n\tfor(int i=Head[u];i!=-1;i=b[i].nxt) {\n\t\tint v=b[i].to;\n\t\tif(v==fa[u] || viss[v]) continue;\n\t\tdfs3(v);\n\t\td[u]+=d[v];\n\t}\n\tif(d[u] > 0) ans+=sum[u];\n}\nint from[maxn],to[maxn];\nint main() { \n    //int c1=clock();\n#ifdef LOCAL\n\tfreopen(\"in.in\",\"r\",stdin);\n\tfreopen(\"out.out\",\"w\",stdout);\n#endif\n\tint c1=clock();\n    //=========================================\n    //  freopen(\"in4.in\",\"r\",stdin);\n\t memset(head,-1,sizeof(head));\n\t memset(Head,-1,sizeof(Head));\n     scanf(\"%d%d\",&n,&m);\n\t for(int i=1;i<=n;i++) {\n\t\t val[i]=read();\n\t }\n\t for(int i=1;i<=m;i++) {\n\t\t from[i]=read();\n\t\t to[i]=read();\n\t\t int x=from[i],y=to[i];\n\t\t add(x,y);\n\t\t add(y,x);\n\t }\n\t dfs(1,0);\n\t for(int i=1;i<=m;i++) {\n\t\t if(color[from[i]] != color[to[i]]) {\n\t\t\t Add(color[from[i]],color[to[i]]);\n\t\t\t Add(color[to[i]],color[from[i]]);\n\t\t }\n\t }\n\t dfs1(1,0);\n\t dfs2(1,1);\n\t int q;\n\t q=read();\n\t for(int i=1;i<=q;i++) {\n\t\t int x,y;\n\t\t x=read();\n\t\t y=read();\n\t\t x=color[x];\n\t\t y=color[y];\n\t\t d[x]++;\n\t\t d[y]++;\n\t\t d[lca(x,y)]--;\n\t\t d[fa[lca(x,y)]]--;\n\t }\t \n\t dfs3(1);\n\t printf(\"%d\\n\",ans);\n\t//=========================================\n\tcerr<<\"Time Used:\"<<clock()-c1<<\"ms\"<<endl;\n    return 0;\n}\n```",
        "postTime": 1635764229,
        "uid": 229919,
        "name": "\u4e00E\u5b64\u884c",
        "ccfLevel": 6,
        "title": "P7924 \u9898\u89e3"
    },
    {
        "content": "~~\u7b97\u6cd5\u6807\u7b7e\u624d\u662f\u4e00\u5207\u7075\u611f\u7684\u6e90\u6cc9~~\n### \u601d\u8def\uff1a\n\u6253\u5f00\u6807\u7b7e\u4e00\u770b\uff1a\u7f29\u70b9\u3002\n\n\u6211\u4eec\u5206\u6790\u4e0b\u9762\u7ed9\u7684\u56fe\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u4eec\u628a\u4e24\u6761\u4ece $1$ \u5230 $6$ \u7684\u8def\u5f84\u53e0\u8d77\u6765\uff0c\u5c31\u53ef\u4ee5\u8986\u76d6\u7531\u7ea2\u8272\u6846\u6846\u5708\u4f4f\u7684\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u4ece\u800c\u83b7\u5f97\u8be5\u5f3a\u8fde\u901a\u5206\u91cf\u5185\u6240\u6709\u7684\u70b9\u7684\u6743\u503c\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/zjqjebkh.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5148\u7f29\u70b9\uff0c\u628a\u56fe\u7b80\u5316\u6210\u4e00\u68f5\u6811\u3002\n\n\u518d\u6253\u5f00\u6807\u7b7e\u4e00\u770b\uff1aLCA\u3002\n\n\u63a5\u4e0b\u6765\uff0c\u56e0\u4e3a\u4e00\u6761\u8fb9\u53ea\u80fd\u7ecf\u8fc7\u4e00\u6b21\uff0c\u6240\u4ee5\u4f1a\u51fa\u73b0\u4e0b\u9762\u8fd9\u79cd\u60c5\u51b5\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/8gl6sksz.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\uff08\u6ce8\uff1a\u6b64\u56fe\u8ddf\u4e0a\u56fe\u4e0d\u5339\u914d\u3002\uff09\n\n\u53d1\u73b0\u6ca1\uff1f\u4e0d\u5c31\u662f\u6c42\u4e24\u4e2a\u70b9\u7684 LCA\uff0c\u518d\u628a\u8fd9\u4e24\u4e2a\u70b9\u4e0e LCA \u4e4b\u95f4\u6240\u6709\u7684\u70b9\uff08\u5305\u62ec\u8fd9\u4e24\u4e2a\u70b9\u548c LCA\uff09\u7684\u6743\u503c\u52a0\u5165\u7b54\u6848\u561b\u3002\n\n\u4f46\u5982\u4f55\u7ef4\u62a4\u7b54\u6848\u5462\uff1f\n\n\u53c8\u6253\u5f00\u6807\u7b7e\u4e00\u770b\uff1a\u5dee\u5206\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u7528\u6811\u4e0a\u5dee\u5206\u6765\u8bb0\u5f55**\u4e00\u4e2a\u70b9\u7684\u7ecf\u8fc7\u6b21\u6570**\u548c**\u8be5\u70b9\u7684\u513f\u5b50\u7684\u7ecf\u8fc7\u6b21\u6570**\u7684\u5dee\u3002\n\n\u6700\u540e\u5f80\u4e0b\u4e00\u4e2a dfs\uff0c\u628a\u5dee\u5206\u6570\u7ec4\u5408\u5e76\uff0c\u5982\u679c\u8be5\u70b9\u88ab\u7ecf\u8fc7\u81f3\u5c11\u4e00\u6b21\uff0c\u5219\u628a\u8be5\u70b9\u6743\u503c\u52a0\u5165\u7b54\u6848\u3002\n### \u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define N 2000010\n#define int long long\nusing namespace std;\nstruct hhh{\n\tint v,next;\n}dl[2*N];\nint n,m,q,x,y,u[N],v[N],tot,cnt,top,sum,logn,ans;\nint a[N],head[N],dfn[N],low[N],stk[N],vis[N],col[N],jh[N],used[N],dep[N],f[N][30],yys[N];//yys\u5373\u5dee\u5206\u6570\u7ec4\nvoid qxx(int u,int v){\n\tdl[++tot].v=v;\n\tdl[tot].next=head[u];\n\thead[u]=tot;\n}\nvoid tarjan(int x,int fa){//\u7f29\u70b9\n\tdfn[x]=low[x]=++cnt;\n\tstk[++top]=x;\n\tvis[x]=1;\n\tfor(int i=head[x];i;i=dl[i].next){\n\t\tint v=dl[i].v;\n\t\tif(v==fa) continue;\n\t\tif(!dfn[v]) tarjan(v,x),low[x]=min(low[x],low[v]);\n\t\telse if(vis[v]) low[x]=min(low[x],low[v]);\n\t}\n\tif(dfn[x]==low[x]){\n\t\tsum++;\n\t\twhile(stk[top+1]!=x){\n\t\t\tcol[stk[top]]=sum;\n\t\t\tjh[sum]+=a[stk[top]];\n\t\t\tvis[stk[top]]=0;\n\t\t\ttop--;\n\t\t}\n\t}\n}\nvoid build(int u,int h){//\u5efa\u7acbLCA\n\tdep[u]=h;\n\tfor(int i=1;i<=logn;i++){\n\t\tif(h<=(1<<i)) break;\n\t\tf[u][i]=f[f[u][i-1]][i-1];\n\t}\n\tfor(int i=head[u];i;i=dl[i].next){\n\t\tint v=dl[i].v;\n\t\tif(vis[v]) continue;\n\t\tvis[v]=1;\n\t\tf[v][0]=u;\n\t\tbuild(v,h+1);\n\t}\n}\nint lca(int x,int y){//\u6c42LCA\n\tif(dep[x]<dep[y]) swap(x,y);\n\tint cha=dep[x]-dep[y];\n\tfor(int i=0;i<=logn;i++) if(cha&(1<<i)) x=f[x][i];\n\tif(x==y) return x;\n\tfor(int i=logn;i>=0;i--){\n\t\tif(!dep[f[x][i]]||f[x][i]==f[y][i]) continue;\n\t\tx=f[x][i],y=f[y][i];\n\t}\n\treturn f[x][0];\n}\nvoid Go(int x){//\u5408\u5e76\u5dee\u5206\u6570\u7ec4\n\tfor(int i=head[x];i;i=dl[i].next){\n\t\tint v=dl[i].v;\n\t\tif(v==f[x][0]) continue;\n\t\tGo(v);\n\t\tyys[x]+=yys[v]; \n\t}\n\tif(yys[x]) ans+=jh[x];\n}\nsigned main(){\n\tios::sync_with_stdio(0);\n\tcin.tie(0),cout.tie(0);\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++) cin>>a[i];\n\tfor(int i=1;i<=m;i++){\n\t\tcin>>u[i]>>v[i];\n\t\tqxx(u[i],v[i]),qxx(v[i],u[i]);\n\t}\n\tfor(int i=1;i<=n;i++) if(!dfn[i]) tarjan(i,-1);\n\ttot=0;\n\tmemset(head,0,sizeof(head));\n\tfor(int i=1;i<=m;i++) if(col[u[i]]!=col[v[i]]) qxx(col[u[i]],col[v[i]]),qxx(col[v[i]],col[u[i]]);\n\tvis[1]=1;\n\tlogn=log2(sum)+1;\n\tbuild(1,1);\n\tcin>>q;\n\twhile(q--){\n\t\tcin>>x>>y;\n\t\tint fa=lca(col[x],col[y]);\n\t\tyys[col[x]]++,yys[col[y]]++;\n\t\tyys[fa]--,yys[f[fa][0]]--;\n\t}\n\tGo(1);\n\tcout<<ans;\n\treturn 0;\n}\n```\n",
        "postTime": 1653369224,
        "uid": 477118,
        "name": "Noby_Gld",
        "ccfLevel": 0,
        "title": "P7924 \u300cEVOI-RD2\u300d\u65c5\u884c\u5bb6"
    },
    {
        "content": "#### \u9898\u76ee\u5927\u610f\n\n\n------------\n\u7ed9\u5b9a\u4e00\u4e2a\u6709 $n$ \u4e2a\u70b9 $m$ \u6761\u8fb9\u7684\u65e0\u5411\u56fe\uff0c\u6bcf\u4e2a\u70b9\u6709\u4e00\u4e2a\u70b9\u6743\u3002\u6709 $q$ \u7ec4\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u9876\u70b9 $x$ \u5230\u9876\u70b9 $y$ \u4e4b\u95f4\u7684\u6240\u6709**\u975e\u4e25\u683c\u7b80\u5355\u8def\u5f84**\u6240\u5305\u542b\u7684\u70b9\u6743\u503c\u4e4b\u548c\uff0c\u6bcf\u4e2a\u70b9\u6743\u503c\u53ea\u4f1a\u88ab\u8ba1\u7b97\u4e00\u6b21\u3002\n\n#### \u9898\u76ee\u5206\u6790\n\n\n------------\n\u6839\u636e\u9898\u76ee\u63cf\u8ff0\uff0c\u6bcf\u4e2a\u70b9\u6743\u53ea\u4f1a\u88ab\u7d2f\u52a0\u4e00\u6b21\uff0c\u6545\u6211\u4eec\u53ef\u4ee5\u5904\u7406\u51fa\u603b\u5171\u6709\u591a\u5c11\u4e2a\u70b9\u5728\u6240\u6709\u7684\u8be2\u95ee\u4e2d\u88ab\u8986\u76d6\uff0c\u8ba1\u7b97\u51fa\u8fd9\u4e9b\u70b9\u7684\u6743\u503c\u4e4b\u548c\u5373\u53ef\u3002\n\n\u9996\u5148\u8003\u8651\u5982\u4f55\u5728\u65f6\u95f4\u8303\u56f4\u5185\u5b9e\u73b0\u6bcf\u4e2a\u70b9\u53ea\u88ab\u7d2f\u52a0\u4e00\u6b21\u3002\n\n\u4ee5\u6837\u4f8b\u4e3a\u4f8b\uff1a\n\n![\u6837\u4f8b1](https://cdn.luogu.com.cn/upload/image_hosting/wqllhj01.png)\n\n\u4e09\u6b21\u8be2\u95ee\u5171\u8986\u76d6\u4e86 $1,2,3,4$ \u8fd9 $4$ \u4e2a\u70b9\uff0c\u6545\u7b54\u6848\u4e3a $10$\u3002\n\n\u8003\u8651\u7b2c\u4e00\u7ec4\u8be2\u95ee ```1 2``` \u4ece $1$ \u5230 $2$ \u5171\u6709\u4e24\u6761\u8def\u5f84\uff0c\u5206\u522b\u662f $1\u21922$ \u4e0e\n$1\u21924\u21923\u21922$\u3002\u4ed4\u7ec6\u89c2\u5bdf\u4e0d\u96be\u53d1\u73b0\uff1a\u7531\u4e8e\u56fe\u662f\u65e0\u5411\u7684\uff0c\u6240\u4ee5\u4ece\u9876\u70b9 $x$ \u5230\u9876\u70b9 $y$ \u5982\u679c\u6709\u591a\u6761\u8def\u5f84\uff0c\u90a3\u4e48\u5fc5\u5b9a\u884c\u6210**\u73af**\u3002\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5c06\u6b64\u65e0\u5411\u56fe\u4e2d\u6240\u6709\u7684\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u7f29\u70b9\uff0c\u4e5f\u5c31\u662f\u8bf4\u56fe\u4e2d\u6240\u6709\u7684\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u53ef\u4ee5\u7b49\u6548\u6210\u4e00\u4e2a\u70b9\uff0c\u8fd9\u4e2a\u70b9\u7684\u70b9\u6743\u503c\u5c31\u662f\u6b64\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u4e2d\u6240\u6709\u70b9\u7684\u6743\u503c\u4e4b\u548c\u3002\n\n\u7ecf\u8fc7\u8fd9\u6837\u64cd\u4f5c\u4e4b\u540e\uff0c\u6574\u5f20\u56fe\u4e0a\u5c31\u6ca1\u6709\u73af\u4e86\uff0c\u90a3\u4e48\u5fc5\u7136\u5f62\u6210\u4e00\u68f5\u6811\u3002\u9898\u76ee\u4e2d\u8981\u6c42\u4e24\u4e2a\u9876\u70b9\u4e4b\u95f4\u7684\u70b9\u6743\u548c\uff0c\u53ef\u4ee5\u901a\u8fc7\u6811\u4e0a\u5dee\u5206\u89e3\u51b3\u3002\n\n\u6811\u4e0a\u5dee\u5206\u662f\u5229\u7528\u4e24\u70b9\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u4e3a\u4e2d\u8f6c\u70b9\u6765\u7ef4\u62a4\u67d0\u4e00\u70b9\u7ecf\u8fc7\u7684\u6b21\u6570\u3002\n\n\u5728\u672c\u9898\u4e2d\uff0c\u6211\u4eec\u5229\u7528\u6811\u4e0a\u5dee\u5206\u7ef4\u62a4\u64cd\u4f5c\u5b8c\u6210\u540e\u81f3\u5c11\u88ab\u7ecf\u8fc7\u4e00\u6b21\u7684\u70b9\u7684\u70b9\u6743\u548c\u3002\n\n#### \u4ee3\u7801\u5b9e\u73b0\n\n\n------------\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <cstdlib>\n#include <algorithm>\n#include <queue>\n#define INF 0x3f3f3f3f\nusing namespace std;\n\ninline int read(){\n    int x=0,f=1;char ch=getchar();\n    for(;!isdigit(ch);ch=getchar()) if(ch=='-') f=-1;\n    for(; isdigit(ch);ch=getchar()) x=(x<<3)+(x<<1)+ch-'0';\n    return x*f;\n}\n\nconst int N=5000050;\nconst int M=5050;\n\nint n,m,a[N],Vis[N],tot,dfn[N],low[N],stk[N],sc,Belong[N],Sum[N],t,cnt;\nint pre[N],Size[N],depth[N],fa[N],son[N],Tot,head[N],Head[N],top[N];\nbool vis[N]; \nint Cnt,Q;\nstruct node{\n\tint u,v,nxt;\n}edge[N],E[N];\nvoid Add_edge(int u,int v){\n\tedge[++cnt].u=u;\n\tedge[cnt].v=v;\n\tedge[cnt].nxt=head[u];\n\thead[u]=cnt;\n}\nvoid Add(int u,int v){\n\tE[++Cnt].v=v;\n\tE[Cnt].u=u;\n\tE[Cnt].nxt=Head[u];\n\tHead[u]=Cnt;\n}\n\nint dep[N],f[N][21];\n\nvoid dfs(int now,int fath){\n\tdep[now]=dep[fath]+1;\n\tf[now][0]=fath;\n\tfor(int i=1;(1<<i)<=dep[now];i++){\n\t\tf[now][i]=f[f[now][i-1]][i-1];\n\t}\n\tfor(int i=Head[now];i;i=E[i].nxt){\n\t\tif(E[i].v != fath) dfs(E[i].v,now);\n\t}\n}\n\nint LCA(int x,int y){\n\tif(dep[x]>dep[y]) swap(x,y);\n\tfor(int i=20;i>=0;i--)\n\tif(dep[x]+(1<<i)<=dep[y]) \n\ty=f[y][i];\n\tif(x==y) return x;\n\tfor(int i=20;i>=0;i--){\n\t\tif(f[x][i]==f[y][i]) continue;\n\t\telse{\n\t\t\ty=f[y][i];\n\t\t\tx=f[x][i];\n\t\t}\n\t}\n\treturn f[x][0];\n}  \nvoid tarjan(int now,int fath){\n    low[now]=dfn[now]=++tot;\n    stk[++sc]=now;vis[now]=1;\n    for(int i=head[now];i;i=edge[i].nxt){\n        int to=edge[i].v;\n        if(!dfn[to]) tarjan(to,now),low[now]=min(low[now],low[to]);\n        else if(vis[to]&&to!=fath) low[now]=min(low[now],dfn[to]);\n    }\n    if(dfn[now]==low[now]){\n        int pre=stk[sc--];\n        Sum[++t]+=a[pre];\n        Belong[pre]=t;vis[pre]=0;\n        while(pre!=now){\n            pre=stk[sc--],Sum[t]+=a[pre];\n            Belong[pre]=t;vis[pre]=0;\n        }\n    }\n}\nlong long Ans;\nvoid Dfs(int now,int fath){\n\tfor(int i=Head[now];i;i=E[i].nxt){\n\t\tif(E[i].v != fath) Dfs(E[i].v,now),\n\t\tVis[now] += Vis[E[i].v];\n\t}\n\tif(Vis[now]) Ans+=Sum[now];\n} \n\nsigned main() {\n    n=read(); m=read();\n    for(int i=1;i<=n;i++) a[i]=read();\n    for(int i=1,u,v;i<=m;i++){\n   \t    u=read();v=read();\n\t\tAdd_edge(u,v);Add_edge(v,u);\n    }\n    Q=read();\n    for(int i=1;i<=n;i++) if(!dfn[i]) tarjan(i,0);\n    for(int i=1;i<=cnt;i+=2){\n   \t    if(Belong[edge[i].u]^Belong[edge[i].v]){\n   \t        Add(Belong[edge[i].u],Belong[edge[i].v]);\n   \t        Add(Belong[edge[i].v],Belong[edge[i].u]);\t\n\t\t}\n    } \n    memset(dfn,0,sizeof dfn);\n    for(int i=1;i<=Q;i++){\n   \t    int u=read(),v=read();\n        int Lca=LCA(Belong[u],Belong[v]);\n   \t    Vis[Belong[u]]++;Vis[Belong[v]]++;\n   \t    Vis[Lca]--;\n       \tVis[fa[Lca]]--;\n       \tVis[f[Lca][0]]--;\n   }\n   Dfs(Belong[1],0); \n   printf(\"%lld\\n\",Ans);\n   return 0;\n}\n```\n",
        "postTime": 1647598337,
        "uid": 335615,
        "name": "0xFF",
        "ccfLevel": 0,
        "title": "P7924"
    },
    {
        "content": "Update \uff1a\u6838\u5fc3\u8bc1\u660e\u5df2\u7ed9\u51fa\u3002\n\n## \u9898\u9762\u7ffb\u8bd1\uff1a\n\u7ed9\u51fa\u4e00\u5f20\u65e0\u5411\u56fe\uff0c\u6bcf\u4e00\u4e2a\u70b9\u6709\u70b9\u6743\u3002\u73b0\u7ed9\u51fa $q$ \u7ec4 $(x,y)$\uff0c\u6c42\u6240\u6709 $x$ \u5230\u6240\u6709\u5bf9\u5e94 $y$ \u7684\u8def\u5f84\u4e0a\u7684**\u8fb9\u53cc\u8fde\u901a\u5206\u91cf**\u7684\u70b9\u6743\u548c\u3002\n\n\u6709\u70b9\u61f5\uff0c\u5bf9\u5427\uff1f\u4e3a\u4ec0\u4e48\u662f\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u5462\uff1f\u6765\u770b\uff1a\n## \u5206\u6790\n\n### \u7f29\u70b9\n\n\u5982\u56fe\uff08\u9ed1\u8272\u4e3a\u70b9\u7f16\u53f7\uff0c\u7ea2\u8272\u4e3a\u70b9\u6743\uff09\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/beexkade.png)\n\u5f53\u6709\u8fd9\u4e48\u4e00\u5bf9 $(1,6)$ \u65f6\uff0c\u5c0f $A$ \u4f1a\u628a\u4ece $1$ \u5230 $5$ \u7684\u8def\u5f84\u90fd\u8d70\u904d\uff0c\u518d\u8d70\u5230 $6$\u3002\n\n\u5982\u679c\u5f80\u540e\u8d70\u4e0d\u4f1a\u8d70\u5230\u6b7b\u80e1\u540c\u91cc\uff0c\u5c31\u63a5\u7740\u8d70\u3002\n\n_Q_: \u90a3\u8fd9\u4e2a\u201c\u6b7b\u80e1\u540c\u201d\u662f\u4ec0\u4e48\uff1f\n\n_A_: \u4e00\u4e2a\u65b0\u7684\u8fb9\u53cc\u8fde\u901a\u5206\u91cf \u3002\uff08~~\u6bd5\u7adf\u7b97\u6cd5\u6807\u7b7e\u91cc\u6709\u7f29\u70b9\u561b~~\uff09\n\n_Q_: \u4e3a\u4ec0\u4e48\uff1f\n\n_A_:\n\n\u6211\u4eec\u77e5\u9053\uff0c\u4e24\u4e2a\u8fb9\u53cc\u662f\u7531\u4e00\u6761\u5272\u8fb9\u8fde\u63a5\u8d77\u6765\u7684\uff0c\u800c\u4e14\u5728\u4e00\u4e2a\u8fde\u901a\u56fe\u4e2d\uff0c\u4efb\u610f\u4e24\u4e2a\u8fb9\u53cc\u7684\u8def\u5f84\u552f\u4e00\u3002\n\n\u5373\uff1a\u4ece\u7532\u8fb9\u53cc\u5230\u4e59\u8fb9\u53cc\u95f4\u6709\u4e00\u6761\u8fb9\u4e0e\u4e4b\u76f8\u8fde\uff0c\u800c\u8fd9\u6761\u8fb9\u4fbf\u662f\u4ece\u7532\u5230\u4e59\u7684\u201c\u5fc5\u7ecf\u4e4b\u8def\u201d\n\n\u800c\u9898\u76ee\u4e2d\u8bf4\uff1a\u70b9\u53ef\u4ee5\u91cd\u590d\u7ecf\u8fc7\uff0c\u800c\u8fb9\u4e0d\u53ef\u4ee5\u3002\n\n\u5373\u5728\u540c\u4e00\u6761\u8def\u5f84\u4e2d\uff0c\u4e00\u6761\u8fb9\u4e0d\u80fd\u7ecf\u8fc7\u4e24\u6b21\u3002\n\n\u800c\u5728\u540c\u4e00\u4e2a\u8fb9\u53cc\u91cc\u9762\uff0c\u7531\u4e8e\u6ca1\u6709\u5272\u8fb9\u7684\u9650\u5236\uff0c\u4e8e\u662f\u53ef\u4ee5\u4fdd\u8bc1\u91cc\u9762\u7684\u70b9\u4fbf\u90fd\u53ef\u4ee5\u5230\u8fbe\uff0c\u800c\u4e0d\u4f1a\u51fa\u73b0\u8d70\u56de\u5934\u8def\u7684\u60c5\u51b5\u3002\n\n\u56e0\u4e3a\u540c\u4e00\u4e2a\u8fb9\u53cc\u91cc\u7684\u70b9\u4e4b\u95f4\u7684\u8def\u5f84\u4e0a\u6ca1\u6709\u5272\u8fb9\uff0c\u4e14\u8def\u5f84\u4e0d\u552f\u4e00\u3002\n\n\u4f46\u662f\u5982\u679c\u8fc7\u4e86\u7ec8\u70b9\u6240\u5728\u7684\u8fb9\u53cc\uff0c\u5c31\u4e0d\u80fd\u591f\u901a\u8fc7\u5272\u8fb9\u8fd4\u56de\u4e86\u3002\n\n\u4e8e\u662f\u4e00\u4e2a\u65c5\u6e38\u5b63\u7684\u7b54\u6848\u4e3a\uff1a\u4ece $x$ \u5230 $y$ \u6240\u7ecf\u8fc7\u8fb9\u53cc\u91cc\u7684\u70b9\u7684\u70b9\u6743\u4e4b\u548c\u3002\n\n\u8fd8\u4e0d\u660e\u767d\u4ec0\u4e48\u662f\u8fb9\u53cc\uff0c\u4ee5\u53ca\u5982\u4f55\u7f29\u70b9\u7684OIer\u8bf7\u81ea\u884c\u67e5\u627e\u535a\u5ba2\u3002\n\n#### PS\uff1a\n\u8fd9\u4e9b\u70b9\u53ef\u4ee5\u7f29\u5230\u4e00\u8d77\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/ticp3wck.png)\n\n------------\n\n### LCA\n\n\u7f29\u5b8c\u70b9\uff0c\u8fd9\u4e2a\u56fe\u7acb\u9a6c\u6e05\u6670\u5f97\u591a\u4e86\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/k3k4jnxi.png)\n\n\u5bf9\u4e8e\u4e00\u4e2a\u65e0\u5411\u56fe\uff0c\u7531\u4e8e\u5b83\u662f\u8fde\u901a\u7684\uff0c\u6240\u4ee5\u5269\u4e0b\u6765\u7684\u662f\u4e00\u4e2a\u65e0\u6839\u6811\u3002\n\n\u800c\u6c42\u4e24\u4e2a\u70b9\u6240\u5728\u7684\u8fb9\u53cc\u7684\u8def\u5f84\u7684\u8bdd\uff0c\u5c31\u6709\u8bf7 LCA \u767b\u573a\uff01\n\nLCA \u4e4b\u524d\u8981\u5148\u8dd1\u4e00\u904d DFS \u8f6c\u6362\u4e3a\u6709\u6839\u6811\u3002\n\nLCA \u7528\u7684\u4fbf\u662f~~\u559c\u95fb\u4e50\u89c1~~\u7684\u500d\u589e\u5927\u6cd5\u3002\u4ee3\u7801\u91cc\u6709\u5b8c\u6574\u6a21\u677f\u3002\n\n------------\n\n### \u6811\u4e0a\u5dee\u5206\n\n\u7531\u4e8e\u8981\u7edf\u8ba1\u70b9\u6743\u4e4b\u548c\uff0c_**\u800c\u4e14**_ \u91cd\u590d\u7ecf\u8fc7\u7684\u53ea\u7edf\u8ba1\u4e00\u6b21\uff01\n\n\u6240\u4ee5\u4f20\u7edf\u7684\u6811\u4e0a\u5dee\u5206\u6539\u4e00\u4e0b\uff0c\u6539\u6210\u6807\u8bb0\u5dee\u5206\uff1a\u8fc7\u4e00\u4e2a\u70b9\uff0c\u6807\u8bb0++\u3002\n\n\u6807\u8bb0 $\\geq 1$ \u7684\uff0c\u52a0\u5165\u5230\u7b54\u6848\u5185\u5373\u53ef\u3002\n\n\u4e00\u5b9a\u8981\u6ce8\u610f\uff1a\u662f**\u70b9\u6743**\u800c\u4e0d\u662f**\u8fb9\u6743**\u3002\n\n\u6a21\u677f\u4e5f\u5728\u4ee3\u7801\u5185\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=800005;\nint n,m,a[N],tot,head[N],q,dfn[N],low[N],inx,st[N],top,bel[N],cnt,val[N],dis[N];\nlong long cha[N];\nbool in[N];\nstruct EDGE{\n\tint v,nxt;\n}ed[N<<3];\nvoid add(int u,int v){\n\ted[++tot]={v,head[u]};\n\thead[u]=tot;\n}\nvoid tarjan(int x,int f){\n\tlow[x]=dfn[x]=++inx;\n\tst[++top]=x;in[x]=true;\n\tfor(int i=head[x];i;i=ed[i].nxt){\n\t\tint v=ed[i].v;\n\t\tif(v==f) continue;\n\t\tif(!dfn[v]){\n\t\t\ttarjan(v,x);\n\t\t\tlow[x]=min(low[x],low[v]);\n\t\t}\n\t\telse if(in[v]) low[x]=min(low[x],dfn[v]);\n\t}\n\tif(low[x]==dfn[x]){\n\t\tint y;++cnt;\n\t\twhile(y=st[top--]){\n\t\t\tval[cnt]+=a[y];\n\t\t\tin[y]=false;\n\t\t\tbel[y]=cnt;\n\t\t\tif(x==y) break;\n\t\t}\n\t}\n}\nint u[N<<2],v[N<<2],dep[N],fa[N][25];\nvoid dfs(int x,int dept,int f){\n\tdep[x]=dept;fa[x][0]=f;\n\tdis[x]=val[x]+dis[f];\n\tfor(int i=head[x];i;i=ed[i].nxt){\n\t\tint v=ed[i].v;\n\t\tif(v==f) continue;\n\t\tdfs(v,dept+1,x);\n\t}\n}\nint lca(int x,int y){\n\tif(dep[x]<dep[y]) swap(x,y);\n\twhile(dep[x]>dep[y])\n\t\tx=fa[x][(int)log2(dep[x]-dep[y])-1];\n\tif(x==y) return x;\n\tfor(int i=20;i>=0;i--)\n\t\tif(fa[x][i]!=fa[y][i]){\n\t\t\tx=fa[x][i];\n\t\t\ty=fa[y][i];\n\t\t}\n\treturn fa[x][0];\n}\nint dfs2(int x,int f){\n\tfor(int i=head[x];i;i=ed[i].nxt){\n\t\tint v=ed[i].v;\n\t\tif(v==f) continue;\n\t\tdfs2(v,x);\n\t\tcha[x]+=cha[v];\n\t}\n\treturn cha[x];\n}\nint main(){\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d\",&u[i],&v[i]);\n\t\tadd(u[i],v[i]);\n\t\tadd(v[i],u[i]);\n\t}\n\ttarjan(1,0);//\u7f29\u70b9\uff0c\u56e0\u4e3a\u56fe\u662f\u8fde\u901a\u7684\uff0c\u6240\u4ee5\u4efb\u9009\u4e00\u70b9\u4f5c\u4e3a\u8d77\u70b9\n\ttot=0;\n\tmemset(head,0,sizeof head);\n\tfor(int i=1;i<=m;i++){\n\t\tu[i]=bel[u[i]],v[i]=bel[v[i]];\n\t\tif(u[i]!=v[i]) add(u[i],v[i]),add(v[i],u[i]);\n\t}\n\tdfs(bel[1],1,0);\n\tcin>>q;\n\tfor(int i=1;i<=20;i++)\n\t\tfor(int j=1;j<=cnt;j++)\n\t\t\tfa[j][i]=fa[fa[j][i-1]][i-1];\n\tint x,y;\n\tint ans=0;\n\tfor(int i=1;i<=q;i++){ // LCA\u3001\u6811\u4e0a\u5dee\u5206\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tx=bel[x],y=bel[y];\n\t\tint s=lca(x,y);\n\t\tcha[x]++;\n\t\tcha[y]++;\n\t\tcha[s]--;\n\t\tcha[fa[s][0]]--;\n\t}\n\tdfs2(bel[1],0);//\u8fd8\u539f\u6807\u8bb0\n\tfor(int i=1;i<=cnt;i++)\n\t\tif(cha[i])\n\t\t\tans+=val[i];\n\tcout<<ans;\n\treturn 0;\n}\n```\n",
        "postTime": 1655636721,
        "uid": 527574,
        "name": "exited",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P7924 \u300cEVOI-RD2\u300d\u65c5\u884c\u5bb6"
    },
    {
        "content": "## \u524d\u7f6e\u77e5\u8bc6\n\n- \u6811\u4e0a\u5dee\u5206\n\n- $LCA$\n\n- \u8fb9\u53cc\u8054\u901a\uff0c\u7f29\u70b9\n\n\u90fd\u6bd4\u8f83\u7b80\u5355\uff0c\u4e0d\u4f1a\u8bf7\u81ea\u884c\u767e\u5ea6\uff0c\u8fd9\u91cc\u7b80\u5355\u5206\u6790\u9898\u610f\u3002\n\n## \u5206\u6790\u9898\u610f\n\n\u6211\u4eec\u601d\u8003\uff0c\u56fe\u662f\u65e0\u5411\u7684\uff0c\u82e5 $x$ \u5230 $y$ \u4e4b\u95f4\u6709\u591a\u6761\u8def\u5f84\uff0c\u5219\u5fc5\u5b9a\u4f1a\u51fa\u73b0\u73af\uff0c\u90a3\u6211\u4eec\u53ea\u9700\u8981\u7f29\u70b9\u4e4b\u540e\u52a0\u4e0a\u5b83\u7684\u4ef7\u503c\u5c31\u597d\u4e86\u3002\n\n\u518d\u60f3\u56fe\u662f\u4e00\u4e2a\u65e0\u5411\u65e0\u73af\u56fe\uff0c\u7f29\u70b9\u4e4b\u540e\u73af\u6ca1\u6709\u4e86\uff0c\u5219\u53d8\u6210\u4e86\u65e0\u5411\u65e0\u73af\u56fe \uff0c\u5373\u6811\uff0c\u5728\u6811\u4e0a\u6c42 $x$\u5230 $y$\u4e4b\u95f4\u7684\u4ef7\u503c\u548c\uff0c\u81ea\u7136\u60f3\u5230\u6811\u4e0a\u5dee\u5206\u3002\n\n\u6700\u540e\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u7ecf\u8fc7\u7684\u6b21\u6570\uff0c\u7ecf\u8fc7\u7684\u70b9\u52a0\u4e0a\u70b9\u5bf9\u5e94\u7684\u4ef7\u503c\u5c31\u597d\u4e86\u3002\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u6109\u5feb\u5730\u5207\u6389\u8fd9\u4e00\u9898\u4e86\u3002\n\n\u8fd9\u91cc\u63d0\u4f9b\u4e24\u79cd\u6c42 $LCA$ \u7684\u65b9\u6cd5\u3002\n\n## Code\n\n```cpp\n#include<cmath>\n#include<queue>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define INF 0x3f3f3f3f\nusing namespace std;\n\nint read() {\n\tchar ch=getchar();int x=0,f=0;\n\tfor(;!isdigit(ch);ch=getchar()) f|=(ch=='-');\n    for(;isdigit(ch);ch=getchar()) x=(x<<1)+(x<<3)+(ch^48);\n\treturn f?-x:x;\n}\n\nvoid print(long long x) {\n\tif(x<0){putchar('-');x=-x;}\n\tif(x>9) print(x/10);\n\tputchar(x%10+48);\n}\n\nconst int N=4e6+2049;\nconst int M=2049;\n\nint n,m,a[N],diff[N],tot,dfn[N],low[N],stc[N],sc,Num[N],Sum[N],t,cnt;\nint pre[N],Size[N],depth[N],fa[N],son[N],Tot,head[N],Head[N],top[N];\nbool vis[N]; int Cnt,Q;\nstruct node{\n\tint u,v,nxt;\n}e[N],E[N];\nvoid Add_edge(int u,int v){\n\te[++cnt].u=u;\n\te[cnt].v=v;\n\te[cnt].nxt=head[u];\n\thead[u]=cnt;\n}\nvoid Add(int u,int v){\n\tE[++Cnt].v=v;\n\tE[Cnt].u=u;\n\tE[Cnt].nxt=Head[u];\n\tHead[u]=Cnt;\n}\n\nnamespace Cut{\n\tvoid dfs1(int u,int Fa){\n\t\tdepth[u]=depth[Fa]+1;Size[u]=1;fa[u]=Fa;\n\t\tfor(int i=Head[u];i;i=E[i].nxt){\n\t\t\tint v=E[i].v;\n\t\t\tif(v==Fa) continue;\n\t\t\tdfs1(v,u);\n\t\t\tSize[u]+=Size[v]; \n\t\t    if(Size[son[u]]<Size[v]) son[u]=v;\n\t\t}\n\t}\n\t\n\tvoid dfs2(int u,int Top){\n\t\ttop[u]=Top;dfn[u]=++Tot;pre[Tot]=u;\n\t\tif(son[u]) dfs2(son[u],Top);\n\t\tfor(int i=Head[u];i;i=E[i].nxt){\n\t\t\tint v=E[i].v;\n\t\t\tif(v==fa[u]||v==son[u]) continue;\n\t\t\tdfs2(v,v);\n\t\t}\n\t}\n\t\n\tint LCA(int u,int v){\n\t\twhile(top[u]^top[v]){\n\t\t\tif(depth[top[u]]<depth[top[v]]) swap(u,v);\n\t\t\tu=fa[top[u]];\n\t\t}\n\t\treturn depth[v]<depth[u]?v:u;\n\t}\n\t\n} \n/*\nint dep[N],f[N][21];\n\nvoid dfs(int u,int fa){\n\tdep[u]=dep[fa]+1;\n\tf[u][0]=fa;\n\tfor(int i=1;(1<<i)<=dep[u];i++){\n\t\tf[u][i]=f[f[u][i-1]][i-1];\n\t}\n\tfor(int i=Head[u];i;i=E[i].nxt){\n\t\tif(E[i].v^fa) dfs(E[i].v,u);\n\t}\n}\n\nint LCA(int u,int v){\n\tif(dep[u]>dep[v]) swap(u,v);\n\tfor(int i=20;i>=0;i--)\n\tif(dep[u]+(1<<i)<=dep[v]) \n\tv=f[v][i];\n\tif(u==v) return u;\n\tfor(int i=20;i>=0;i--){\n\t\tif(f[u][i]==f[v][i]) continue;\n\t\telse{\n\t\t\tv=f[v][i];\n\t\t\tu=f[u][i];\n\t\t}\n\t}\n\treturn f[u][0];\n}  \n*/\nvoid tarjan(int u,int fa){\n    low[u]=dfn[u]=++tot;\n    stc[++sc]=u;vis[u]=1;\n    for(int i=head[u];i;i=e[i].nxt){\n        int to=e[i].v;\n        if(!dfn[to]) tarjan(to,u),low[u]=min(low[u],low[to]);\n        else if(vis[to]&&to!=fa) low[u]=min(low[u],dfn[to]);\n    }\n    if(dfn[u]==low[u]){\n        int pre=stc[sc--];\n        Sum[++t]+=a[pre];\n        Num[pre]=t;vis[pre]=0;\n        while(pre!=u){\n            pre=stc[sc--],Sum[t]+=a[pre];\n            Num[pre]=t;vis[pre]=0;\n        }\n    }\n}\n\n\nlong long Ans;\nvoid Dfs(int u,int fa){\n\tfor(int i=Head[u];i;i=E[i].nxt){\n\t\tif(E[i].v^fa) Dfs(E[i].v,u),\n\t\tdiff[u]+=diff[E[i].v];\n\t}\n\tif(diff[u]) Ans+=Sum[u];\n} \n\nsigned main() {\n   n=read();m=read();\n   for(int i=1;i<=n;i++) a[i]=read();\n   for(int i=1,u,v;i<=m;i++){\n   \t    u=read();v=read();\n\t\tAdd_edge(u,v);Add_edge(v,u);\n   }\n   Q=read();\n   for(int i=1;i<=n;i++) if(!dfn[i]) tarjan(i,0);\n   for(int i=1;i<=cnt;i+=2){\n   \t    if(Num[e[i].u]^Num[e[i].v]){\n   \t        Add(Num[e[i].u],Num[e[i].v]);\n   \t        Add(Num[e[i].v],Num[e[i].u]);\t\n\t\t}\n   } memset(dfn,0,sizeof dfn);\n   Cut::dfs1(Num[1],0);Cut::dfs2(Num[1],Num[1]);\n   for(int i=1;i<=Q;i++){\n   \t    int u=read(),v=read();\n       int Lca=Cut::LCA(Num[u],Num[v]);\n      // int Lca=LCA(Num[u],Num[v]);\n   \t    diff[Num[u]]++;diff[Num[v]]++;\n   \t    diff[Lca]--;\n       diff[fa[Lca]]--;\n      // diff[f[Lca][0]]--;\n   }\n   Dfs(Num[1],0); \n   print(Ans);\n   return 0;\n}\n```\n\n### \u540e\u8bb0\n\n\u6211\u56e0\u4e3a\u6811\u5256\u65f6\u5199\u9519\u4e86\u4e00\u4e2a\u5c0f\u5730\u65b9\u5bfc\u81f4\u63d0\u4ea4$30$\u591a\u6b21\u2026\u2026\u7531\u4e8e\u662f\u5728\u5f71\u54cd\u6df1\u523b\uff0c\u6240\u4ee5\u5199\u7bc7\u9898\u89e3\u8bb0\u5f55\u4e00\u4e0b\uff0c\u671b\u7ba1\u7406\u901a\u8fc7qwq",
        "postTime": 1640391831,
        "uid": 397317,
        "name": "Gym_nastics",
        "ccfLevel": 0,
        "title": "P7924 \u300cEVOI-RD2\u300d\u65c5\u884c\u5bb6"
    },
    {
        "content": "```\n\u5b9a\u4e49\u4e00\u6761\u65c5\u6e38\u8def\u5f84\u4e3a\u4e24\u4e2a\u666f\u70b9\u4e4b\u95f4\u7684\u4e00\u6761\u975e\u4e25\u683c\u7b80\u5355\u8def\u5f84\uff0c\u4e5f\u5c31\u662f\u70b9\u53ef\u4ee5\u91cd\u590d\u7ecf\u8fc7\uff0c\u800c\u8fb9\u4e0d\u53ef\u4ee5\u3002\n\n\u6307\u5b9a\u4e24\u4e2a\u9876\u70b9 x \u548c y\uff0c\u8d70\u904d x \u5230 y \u7684\u6240\u6709\u65c5\u6e38\u8def\u5f84\u3002\n```\n\n\u624b\u73a9\u4e00\u4e0b\uff0c\u53d1\u73b0\u4e00\u4e2a\u5904\u4e8e\u540c\u4e00\u4e2a\u8fb9\u53cc\u91cc\u9762\u7684\u6240\u6709\u70b9\uff0c\u5982\u679c\u6709\u4efb\u610f\u4e00\u4e2a\u80fd\u591f\u88ab\u7ecf\u8fc7\uff0c\u90a3\u4e48\u6574\u4e2a\u8fde\u901a\u5206\u91cf\u7684\u70b9\u90fd\u80fd\u88ab\u7ecf\u8fc7\u3002\uff08\u5b83\u4eec\u53ef\u4ee5\u7b49\u6548\u4e3a\u4e00\u4e2a\u70b9\uff09\n\n\u518d\u60f3\u4e00\u60f3\uff0c\u6709\u5411\u56fe\u4e2d\u5f3a\u8fde\u901a\u5206\u91cf\u7f29\u6210\u4e00\u4e2a\u70b9\u662f\u4ec0\u4e48\uff08\u6709\u5411\u65e0\u73af\u56fe\uff0cDAG\uff09\uff0c\u90a3\u4e48\u8fde\u901a\u7684\u65e0\u5411\u56fe\u4e2d\u8fb9\u53cc\u8fde\u901a\u5206\u91cf\u7f29\u6210\u4e00\u4e2a\u70b9\u540e\uff0c\u539f\u56fe\u5c31\u662f\u4e00\u4e2a\u65e0\u5411\u65e0\u73af\u56fe\uff0c\u5373\u6811\u3002\n\n\u597d\uff0c\u6211\u4eec\u5c06\u539f\u56fe\u7528 tarjan \u628a\u6240\u6709\u8fb9\u53cc\u7f29\u6210\u4e00\u4e2a\u70b9\uff0c\u73b0\u5728\u95ee\u9898\u8f6c\u53d8\u4e3a\u4e86\uff0c\u7ed9\u4f60\u4e00\u68f5\u6811\uff0c $n$ \u4e2a\u8282\u70b9\uff0c$n - 1$ \u6761\u8fb9\uff0c\u6bcf\u4e2a\u70b9\u6709\u70b9\u6743\u3002\u6709 $q$ \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u7ecf\u8fc7 $x$ \u5230 $y$ \u7684\u7b80\u5355\u8def\u5f84\u4e0a\u7684\u6240\u6709\u70b9\uff0c\u56de\u7b54\u64cd\u4f5c\u5b8c\u6210\u540e\u81f3\u5c11\u88ab\u7ecf\u8fc7\u4e00\u6b21\u7684\u70b9\u7684\u70b9\u6743\u7684\u548c\u3002\n\n\u5982\u679c\u662f\u64cd\u4f5c\u4e2d\u8be2\u95ee\u5c31\u662f\u6811\u94fe\u5256\u5206\u7684\u677f\u5b50\uff0c\u64cd\u4f5c\u540e\u8be2\u95ee\u5c31\u662f\u6811\u4e0a\u5dee\u5206\u7684\u677f\u5b50\u3002\n\nLCA \u7b97\u6cd5\u7684\u8bdd\u500d\u589e\u548c\u8f7b\u91cd\u94fe\u5256\u5206\u90fd\u53ef\u4ee5\uff0c\u51ed\u4e2a\u4eba\u559c\u597d\u5427\uff08\u5176\u5b9e\u4e2a\u4eba\u611f\u89c9\u52a0\u5f3a\u6210\u64cd\u4f5c\u4e2d\u56de\u7b54\u8be2\u95ee\u540e\u53cd\u800c\u7701\u5f97\u4e13\u95e8\u5199\u4e00\u4e2a\u6c42 LCA \u7684\u7b97\u6cd5\uff09\u3002\n\nCode\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\ninline void read(int &x)\n{\n\tx = 0;\n\tint f = 0;\n\tchar ch = getchar();\n\twhile(ch < '0' || ch > '9')\n\t{\n\t\tf |= ch == '-';\n\t\tch = getchar();\n\t}\n\twhile(ch >= '0' && ch <= '9')\n\t{\n\t\tx = x * 10 + ch - 48;\n\t\tch = getchar();\n\t}\n\tx = f ? -x : x;\n\treturn;\n}\n#define N 500005\n#define M 2000005\nclass Graph\n{\n\tpublic:\n\tint first[N], Next[M << 1], to[M << 1], vis[M << 1], tot;\n\tinline void add(int x, int y)\n\t{\n\t\tNext[++tot] = first[x];\n\t\tfirst[x] = tot;\n\t\tto[tot] = y;\n\t\treturn;\n\t}\n};\nGraph G1, G2;\nint n, m, a[N];\nint dfn[N], low[N], sign;\nint cnt, sum[N], bel[N];\nint sta[N], top;\nvoid tarjan(int u, int pre)\n{\n\tdfn[u] = low[u] = ++sign;\n\tsta[++top] = u;\n\tfor(int i = G1.first[u]; i; i = G1.Next[i])\n\t{\n\t\tint v = G1.to[i];\n\t\tif(!dfn[v])\n\t\t{\n\t\t\ttarjan(v, u);\n\t\t\tlow[u] = min(low[u], low[v]);\n\t\t}\n\t\telse if(v != pre)\n\t\t{\n\t\t\tlow[u] = min(low[u], dfn[v]);\n\t\t}\n\t}\n\tif(low[u] == dfn[u])\n\t{\n\t\tcnt++;\n\t\twhile(sta[top] != u)\n\t\t{\n\t\t\tbel[sta[top]] = cnt;\n\t\t\tsum[cnt] += a[sta[top]];\n\t\t\ttop--;\n\t\t}\n\t\tbel[sta[top]] = cnt;\n\t\tsum[cnt] += a[sta[top]];\n\t\ttop--;\n\t}\n\treturn;\n}\ninline void link()\n{\n\tfor(int u = 1; u <= n; u++)\n\t{\n\t\tfor(int i = G1.first[u]; i; i = G1.Next[i])\n\t\t{\n\t\t\tint v = G1.to[i];\n\t\t\tif(bel[u] != bel[v])\n\t\t\t{\n\t\t\t\tG2.add(bel[u], bel[v]);\n\t\t\t}\n\t\t}\n\t}\n\treturn;\n}\nint dep[N], fa[N][25], vis[N];\nvoid dfs(int u)\n{\n\tfor(int i = 1; i <= 20; i++)\n\t{\n\t\tfa[u][i] = fa[fa[u][i - 1]][i - 1];\n\t}\n\tfor(int i = G2.first[u]; i; i = G2.Next[i])\n\t{\n\t\tint v = G2.to[i];\n\t\tif(dep[v])\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tdep[v] = dep[u] + 1;\n\t\tfa[v][0] = u;\n\t\tdfs(v);\n\t}\n\treturn;\n}\ninline int lca(int x, int y)\n{\n\tif(dep[x] > dep[y])\n\t{\n\t\tswap(x, y);\n\t}\n\tfor(int i = 20; i >= 0; i--)\n\t{\n\t\tif(dep[fa[y][i]] >= dep[x])\n\t\t{\n\t\t\ty = fa[y][i];\n\t\t}\n\t}\n\tif(x == y)\n\t{\n\t\treturn x;\n\t}\n\tfor(int i = 20; i >= 0; i--)\n\t{\n\t\tif(fa[x][i] != fa[y][i])\n\t\t{\n\t\t\tx = fa[x][i];\n\t\t\ty = fa[y][i];\n\t\t}\n\t}\n\treturn fa[x][0];\n}\nvoid solve(int u)\n{\n\tfor(int i = G2.first[u]; i; i = G2.Next[i])\n\t{\n\t\tint v = G2.to[i];\n\t\tif(v == fa[u][0])\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tsolve(v);\n\t\tvis[u] += vis[v];\n\t}\n\treturn;\n}\nsigned main()\n{\n\tread(n), read(m);\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tread(a[i]);\n\t}\n\tint x, y;\n\tfor(int i = 1; i <= m; i++)\n\t{\n\t\tread(x), read(y);\n\t\tG1.add(x, y), G1.add(y, x);\n\t}\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tif(!dfn[i])\n\t\t{\n\t\t\ttarjan(i, i);\n\t\t}\n\t}\n\tlink();\n\tdep[bel[1]] = 1;\n\tdfs(bel[1]);\n\tint q;\n\tread(q);\n\twhile(q--)\n\t{\n\t\tread(x), read(y);\n\t\tvis[bel[x]]++;\n\t\tvis[bel[y]]++;\n\t\tint lc = lca(bel[x], bel[y]);\n\t\tvis[lc]--;\n\t\tvis[fa[lc][0]]--;\n\t}\n\tsolve(bel[1]);\n\tint ans = 0;\n\tfor(int i = 1; i <= cnt; i++)\n\t{\n\t\tif(vis[i])\n\t\t{\n\t\t\tans += sum[i];\n\t\t}\n\t}\n\tprintf(\"%d\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1637591667,
        "uid": 90027,
        "name": "GG_jok_er",
        "ccfLevel": 0,
        "title": "P7924 \u300cEVOI-RD2\u300d\u65c5\u884c\u5bb6"
    },
    {
        "content": "### \u524d\u8a00\n\u611f\u89c9\u4e0a\u51fa\u9898\u4eba\u60f3\u5361 $O(n\\log n)$\uff0c\u6240\u4ee5\u5728\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u7ebf\u6027\u505a\u6cd5\u3002\uff08\u5c06\u5d07\u9ad8\u7684\u656c\u610f\u732e\u7ed9 **Tarjan**\uff09  \n\n### \u601d\u8def & \u7b97\u6cd5\n\u7531\u65e0\u5411\u56fe\u4e2d\u7684\u7b80\u5355\u8def\u5f84\u60f3\u5230\u53ef\u4ee5\u4f7f\u7528 **Tarjan** \u7b97\u6cd5\u7f29\u70b9\uff0c\u5efa\u6811\uff1b\u5bf9\u4e8e\u6bcf\u4e2a\u65c5\u6e38\u5b63\u7684\u7edf\u8ba1\uff0c\u53ef\u4ee5\u4f7f\u7528\u6811\u4e0a\u5dee\u5206\u7ef4\u62a4\u3002  \n\n\u65c5\u6e38\u5b63\u5355\u6b21\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u4e3a $O(\\log n)$\uff0c\u4e3a\u6c42\u89e3 **LCA** \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u4f46\u662f\u672c\u9898\u7684\u6570\u636e\u91cf\u975e\u5e38\u5927\uff0c\u76f4\u63a5\u6811\u4e0a\u500d\u589e\u5341\u5206\u5361\u5e38\uff0c\u800c\u672c\u4eba\u53c8\u4e0d\u613f\u610f\u5199\u6811\u5256\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u8bf7\u51fa\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n+m+q)$ \u7684 **Tarjan LCA** \u7b97\u6cd5\u3002\n\n#### Tarjan LCA\n\u8fd9\u4e2a\u7b97\u6cd5\u91c7\u7528\u79bb\u7ebf\u7684\u65b9\u6cd5\uff0c\u7ed3\u5408\u5e76\u67e5\u96c6\uff0c\u7ebf\u6027\u6c42\u89e3\u6811\u4e0a **LCA** \u95ee\u9898\u3002\u65b9\u6cd5\u4e3a\u9996\u5148\u50a8\u5b58\u597d\u6240\u6709\u7684\u8be2\u95ee\uff0c\u63a5\u7740 **DFS** \u904d\u5386\u6811\uff0c\u5728\u56de\u6eaf\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6c42\u89e3 **LCA**\u3002\u5177\u4f53\u5982\u4e0b\uff1a  \n1. \u6807\u8bb0 $vis_u=true$\uff1b\n2. \u904d\u5386 $u$ \u7684\u6811\u8fb9 $(u,v)$\uff0c\u5411\u4e0b\u9012\u5f52\uff0c\u56de\u6eaf\u65f6\u5c06\u5e76\u67e5\u96c6 $v$ \u5408\u5e76\u5230 $u$\uff1b\n1. \u904d\u5386\u4e0e\u5f53\u524d\u8282\u70b9 $u$ \u6709\u5173\u7684\u8be2\u95ee\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8be2\u95ee\uff0c\u67e5\u8be2 **LCA** \u7684\u53e6\u4e00\u76ee\u6807\u70b9 $v$ \u7684 $vis_v$ \u72b6\u6001\u3002\u82e5 $vis_v$ \u4e3a\u771f\uff0c\u5219\u6b64\u65f6\u70b9 $v$ \u6240\u5c5e\u7684\u5e76\u67e5\u96c6\u5219\u4e3a $(u,v)$ \u7684 **LCA**\u3002\n\n### \u5b9e\u73b0 & \u4ee3\u7801\n\u8981\u6ce8\u610f\u7684\u7ec6\u8282\u4e0d\u591a\uff0c\u53ea\u662f\u4ee3\u7801\u504f\u957f\uff0c**Tarjan LCA** \u7684\u4ee3\u7801\u91cf\u4e0d\u6bd4\u6811\u5256\u5c0f\u5f88\u591a\u3002\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <vector>\n#include <stack>\n\nusing namespace std;\n\nconst int Max = 500005;\n\nint n, m, q, a[Max], c[Max], cnt, s[Max], w[Max], par[Max], ans;\nvector<int> g[Max], G[Max], Q[Max]; // \u5206\u522b\u4e3a\u539f\u56fe\u3001\u7f29\u70b9\u540e\u7684\u56fe\u3001\u8be2\u95ee\n\nnamespace TarjanDCC { // Tarjan \u6c42\u53cc\u8fde\u901a\u5206\u91cf\n\tint t, dfn[Max], low[Max], w[Max];\n\tstack<int> st;\n\tbool ins[Max];\n\n\tvoid tarjan(int u, int _u = 0) {\n\t    dfn[u] = low[u] = ++t;\n\t    st.push(u);\n\t    ins[u] = true;\n\n\t    for (int v: g[u])\n\t        if (v != _u) {\n\t            if (!dfn[v]) {\n\t                tarjan(v, u);\n\t                low[u] = min(low[u], low[v]);\n\t            } else if (ins[v])\n\t                low[u] = min(low[u], dfn[v]);\n\t        }\n\n\t    if (dfn[u] == low[u]) {\n\t        int v;\n\t        ++cnt;\n\t        do {\n\t            v = st.top();\n\t            st.pop();\n\t            ins[v] = false;\n\t            c[v] = cnt;\n\t            s[cnt] += a[v];\n\t        } while (v != u);\n\t    }\n\t}\n\n\tvoid rebuild() { // \u91cd\u65b0\u5efa\u56fe\n\t\tfor (int i = 1; i <= n; i++)\n\t        for (auto j: g[i])\n\t            if (c[i] != c[j])\n\t                G[c[i]].push_back(c[j]);\n\t}\n\n\tvoid main() {\n\t\ttarjan(1);\n\t\trebuild();\n\t}\n}\n\nnamespace TarjanLCA { // Tarjan \u6c42 LCA\n\tint anc[Max]; // \u5e76\u67e5\u96c6\u6570\u7ec4\n\tbool vis[Max];\n\n\tvoid init() { // \u5e76\u67e5\u96c6\u521d\u59cb\u5316\n\t\tfor (int i = 1; i <= cnt; i++) \n\t\t\tanc[i] = i;\n\t}\n\n\tint findAncestor(int u) {\n\t\treturn anc[u] == u ? u : anc[u] = findAncestor(anc[u]);\n\t}\n\n\tvoid merge(int u, int v) {\n\t\tu = findAncestor(u), v = findAncestor(v);\n\t\tanc[v] = u;\n\t}\n\n\tvoid tarjan(int u, int _u = 0) {\n\t\tvis[u] = true;\n\t\tpar[u] = _u;\n\n\t\tfor (int v: G[u]) \n\t\t\tif (!vis[v]) {\n\t\t\t\ttarjan(v, u);\n\t\t\t\tmerge(u, v);\n\t\t\t}\n\n\t\tfor (int v: Q[u])\n\t\t\tif (vis[v]) { // \u6c42\u51fa LCA \u4e4b\u540e\u76f4\u63a5\u6811\u4e0a\u5dee\u5206\n\t\t\t\tint lca = findAncestor(v);\n\t\t\t\tw[u]++, w[v]++;\n\t\t\t\tw[lca]--;\n\t\t\t\tw[par[lca]]--;\n\t\t\t}\n\t}\n\n\tvoid main() {\n\t\tinit();\n\t\ttarjan(c[1]);\n\t}\n}\n\nvoid read(int &x) {\n    x = 0;\n    char ch;\n    while (!isdigit(ch = getchar()));\n    do x = x * 10 + ch - '0';\n    while (isdigit(ch = getchar()));\n} \n\nint main() {\n    read(n), read(m);\n    for (int i = 1; i <= n; i++)\n        read(a[i]);\n\n    for (int i = 1, u, v; i <= m; i++) {\n        read(u), read(v);\n        g[u].push_back(v);\n        g[v].push_back(u);\n    }\n\n    TarjanDCC::main();\n\n    read(q);\n    for (int i = 1, u, v; i <= q; i++) {\n        read(u), read(v);\n    \tu = c[u], v = c[v];\n    \tQ[u].push_back(v);\n    \tQ[v].push_back(u);\n    }\n\n    TarjanLCA::main();\n    \n    // \u7531 Tarjan \u7f29\u70b9\u7b97\u6cd5\u7684\u6027\u8d28\uff0c\n    // DCC \u7f16\u53f7\u4e3a\u9006\u62d3\u6251\u5e8f\uff0c\n    // \u53ef\u4ee5\u76f4\u63a5 For \u5faa\u73af\u6c42\u5b50\u6811\u548c\u3002\n    for (int i = 1; i <= cnt; i++) { \n        if (w[i] > 0)\n            ans += s[i];\n        w[par[i]] += w[i];\n    }\n\n    cout << ans << endl;\n    return 0;\n}\n```",
        "postTime": 1668133156,
        "uid": 258563,
        "name": "\u6211\u662f\u900d\u900d",
        "ccfLevel": 6,
        "title": "P7924"
    }
]