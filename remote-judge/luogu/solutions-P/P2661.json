[
    {
        "content": "**\u5e76\u67e5\u96c6\u6c42\u6700\u5c0f\u73af**\n\n\u628a\u6bcf\u4e2a\u540c\u5b66\u770b\u6210\u4e00\u4e2a\u70b9\uff0c\u4fe1\u606f\u7684\u4f20\u9012\u5c31\u662f\u5728\u4ed6\u4eec\u4e4b\u95f4\u8fde\u6709\u5411\u8fb9\uff0c\u6e38\u620f\u8f6e\u6570\u5c31\u662f\u6c42\u6700\u5c0f\u73af\u3002\n\n\u56fe\u8bba\u6c42\u6700\u5c0f\u73af\uff0c\u6211\u5728\u91cc\u9762\u770b\u5230\u4e86\u5e76\u67e5\u96c6\u3002\n\n\u5047\u5982\u8bf4\u4fe1\u606f\u7531A\u4f20\u9012\u7ed9B\uff0c\u90a3\u4e48\u5c31\u8fde\u4e00\u6761\u7531A\u6307\u5411B\u7684\u8fb9\uff0c\u540c\u65f6\u66f4\u65b0A\u7684\u7236\u8282\u70b9\uff0cA\u5230\u5b83\u7684\u7236\u8282\u70b9\u7684\u8def\u5f84\u957f\u4e5f\u5c31\u662fB\u5230\u5b83\u7684\u7236\u8282\u70b9\u7684\u8def\u5f84\u957f+1\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u5efa\u7acb\u597d\u4e86\u4e00\u4e2a\u56fe\uff0c\u4e4b\u540e\u4fe1\u606f\u4f20\u9012\u7684\u6240\u6709\u73af\u8282\u90fd\u6309\u7167\u8fd9\u4e9b\u8def\u5f84\u3002\u6e38\u620f\u7ed3\u675f\u7684\u8f6e\u6570\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e2a\u56fe\u91cc\u6700\u5c0f\u73af\u7684\u957f\u5ea6\u3002\n\n\u5982\u679c\u6709\u4e24\u4e2a\u70b9\u7956\u5148\u8282\u70b9\u76f8\u540c\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u6784\u6210\u4e00\u4e2a\u73af\uff0c\u957f\u5ea6\u4e3a\u4e24\u4e2a\u70b9\u5230\u7956\u5148\u8282\u70b9\u957f\u5ea6\u4e4b\u548c+1\u3002\n\n\u548c\u4e0b\u9762\u7684\u5e76\u67e5\u96c6\u6709\u70b9\u4e0d\u4e00\u6837\u7684\u3002\n\n\uff08\u5408\u4f5c&\u601d\u8def\u57fa\u7840\uff1a bie\u6dd6\\_kkk \uff09\n\n\n\n```cpp\n#include<cstdio>\n#include<iostream>\nusing namespace std;\nint f[200002],d[200002],n,minn,last;   //f\u4fdd\u5b58\u7956\u5148\u8282\u70b9\uff0cd\u4fdd\u5b58\u5230\u5176\u7956\u5148\u8282\u70b9\u7684\u8def\u5f84\u957f\u3002 \nint fa(int x)\n{\n    if (f[x]!=x)                       //\u67e5\u627e\u65f6\u6cbf\u9014\u66f4\u65b0\u7956\u5148\u8282\u70b9\u548c\u8def\u5f84\u957f\u3002 \n    {\n        int last=f[x];                 //\u8bb0\u5f55\u7236\u8282\u70b9\uff08\u4f1a\u5728\u9012\u5f52\u4e2d\u88ab\u66f4\u65b0\uff09\u3002 \n        f[x]=fa(f[x]);                 //\u66f4\u65b0\u7956\u5148\u8282\u70b9\u3002 \n        d[x]+=d[last];                 //\u66f4\u65b0\u8def\u5f84\u957f\uff08\u539f\u6765\u8fde\u5728\u7236\u8282\u70b9\u4e0a\uff09\u3002 \n    }\n    return f[x];\n}\nvoid check(int a,int b)\n{\n    int x=fa(a),y=fa(b);               //\u67e5\u627e\u7956\u5148\u8282\u70b9\u3002 \n    if (x!=y) {f[x]=y; d[a]=d[b]+1;}   //\u82e5\u4e0d\u76f8\u8fde\uff0c\u5219\u8fde\u63a5\u4e24\u70b9\uff0c\u66f4\u65b0\u7236\u8282\u70b9\u548c\u8def\u5f84\u957f\u3002 \n    else minn=min(minn,d[a]+d[b]+1);   //\u82e5\u5df2\u8fde\u63a5\uff0c\u5219\u66f4\u65b0\u6700\u5c0f\u73af\u957f\u5ea6\u3002 \n    return;\n}\nint main()\n{\n    int i,t;\n    scanf(\"%d\",&n);\n    for (i=1;i<=n;i++) f[i]=i;         //\u7956\u5148\u8282\u70b9\u521d\u59cb\u5316\u4e3a\u81ea\u5df1\uff0c\u8def\u5f84\u957f\u4e3a0\u3002 \n    minn=0x7777777;\n    for (i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&t);\n        check(i,t);                    //\u68c0\u67e5\u5f53\u524d\u4e24\u70b9\u662f\u5426\u5df2\u6709\u8fb9\u76f8\u8fde\u63a5\u3002 \n    }\n    printf(\"%d\",minn);\n    return 0;\n}\n```",
        "postTime": 1509092669,
        "uid": 44120,
        "name": "anyway",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u55ef\u2026\u2026\u672c\u4eba\u8868\u793a\u771f\u7684\u8fd8\u4e0d\u4f1atoposort\u2026\u2026\u6240\u4ee5\uff0c\u6211\u5c31\u6253\u4e86\u4e2a\u5947\u5947\u602a\u602a\u7684\u65b9\u6cd5\uff0c\u5c45\u7136\u4e5f\u8fc7\u4e86\u3002\n\n\u4e0b\u9762\u4ecb\u7ecd\u4e00\u4e0b\u6211\u5728\u672c\u9898\u7684\u7ecf\u5386\u2014\u2014\n\n\u9996\u5148\uff0c\u6211\u4ee5\u4e3a\u7528set\u66b4\u529b\u5224\u91cd\u80fd\u8fc7\uff0c\u7136\u800cT\u4e866\u4e2a\u70b9\u3002\n\n\u7136\u540e\uff0c\u6211\u5f7b\u591c\u4e0d\u7720\uff0c\u601d\u8003\u7740\u672c\u9898\u3002\u7136\u540e\uff0c\u6211\u5c31\u60f3\u51fa\u6765\u4e86\uff0c\u7136\u540e\u5c31\u8fc7\u4e86\u2026\u2026\n\n\u597d\u5427\uff0c\u8fd8\u662f\u4ecb\u7ecd\u4e00\u4e0b\u601d\u8def\u3002\n\n\u53ef\u4ee5\u628a\u8fd9\u4e9b\u5173\u7cfb\u770b\u6210\u4e00\u4e2a\u6709\u5411\u56fe\u3002\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u8282\u70b9\u8fdb\u5165\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u70b9\u7684\u51fa\u5ea6\u5747\u4e3a1\uff0c\u6240\u4ee5\u6700\u591a\u53ea\u80fd\u6784\u6210\u4e09\u79cd\u60c5\u51b5\uff1a1\u3001\u4e00\u6761\u94fe\uff1b2\u3001\u4e00\u4e2a\u73af\u94fe\uff1b3\u3001\u4e00\u6761\u94fe\u8fde\u63a5\u7740\u4e00\u4e2a\u73af\u94fe\u3002\u56e0\u4e3a\u8fd9\u4e09\u79cd\u60c5\u51b5\u6781\u4e3a\u7684\u7b80\u5355\uff0c\u6240\u4ee5\u5c31\u53ef\u4ee5\u5982\u4e0b\u5904\u7406\uff1a\n\n\u627e\u4efb\u610f\u4e00\u4e2a\u70b9\u8fdb\u5165\uff0c\u8bb0\u5f55\u5230\u8fbe\u6bcf\u4e00\u4e2a\u70b9\u6240\u8d70\u8fc7\u7684\u904d\u6570\u3002\u5f53\u8d70\u5230\u4e00\u4e2a\u5728\u8fd9\u6b21\u67e5\u627e\u4e2d\u5df2\u7ecf\u51fa\u73b0\u8fc7\u7684\u8282\u70b9\uff0c\u5373\u627e\u5230\u4e86\u4e00\u4e2a\u73af\uff0c\u7528\u5f53\u524d\u8d70\u5230\u7684\u6b65\u6570\u51cf\u53bb\u5728\u6b64\u8282\u70b9\u539f\u5148\u8bb0\u5f55\u7684\u6b65\u6570\uff0c\u4fbf\u5f97\u5230\u8fd9\u4e2a\u73af\u7684\u957f\u5ea6\u3002\u7531\u6b64\u641c\u904d\u6240\u6709\u70b9\uff0c\u627e\u5230\u8fd9\u4e9b\u73af\u4e2d\u6700\u5c0f\u957f\u5ea6\u7684\u4e00\u4e2a\uff0c\u5e76\u628a\u5b83\u8f93\u51fa\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u800c\u5982\u679c\u5c31\u8fd9\u6837\u53bb\u505a\uff0c\u4f1aTLE\uff0c\u6240\u4ee5\u5f97\u518d\u52a0\u4e00\u70b9\u4f18\u5316\u3002\u5bf9\u4e8e\u4e00\u6b21\u67e5\u627e\u73af\u4e2d\uff0c\u7531\u4e8e\u6b64\u6b21\u67e5\u627e\u4e2d\u81f3\u591a\u53ea\u6709\u4e00\u4e2a\u73af\uff0c\u800c\u6b64\u73af\u5df2\u7ecf\u786e\u5b9a\uff0c\u6240\u4ee5\u518d\u6709\u5916\u90e8\u7684\u94fe\u4ecb\u5165\u6b64\u73af\uff0c\u5b83\u7684\u72b6\u6001\u4ecd\u7136\u4e0d\u53d8\u3002\u6240\u4ee5\u53ef\u4ee5\u52a0\u4e2a\u5224\u65ad\uff0c\u5982\u679c\u8d70\u5230\u4e86\u5df2\u7ecf\u88ab\u67e5\u627e\u8fc7\u7684\u8282\u70b9\uff0c\u4fbf\u76f4\u63a5\u8df3\u51fa\u3002\n\n\u4e0b\u4e3a\u4ee3\u7801\uff0c\u4f9b\u5927\u5bb6\u53c2\u8003\uff1a\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<string>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nint dx[300000];//\u5b58\u6bcf\u4e00\u4e2a\u4eba\u4f20\u8bdd\u7684\u5bf9\u8c61\nbool visit[300000]={0},novisit[300000]={0};//visit\u5b58\u6bcf\u6b21\u67e5\u627e\u4e2d\u88ab\u67e5\u5230\u7684\u70b9\uff0c\u800cnovisit\u5b58\u6bcf\u6b21\u67e5\u627e\u524d\uff0c\u5df2\u7ecf\u88ab\u67e5\u627e\u8fc7\u7684\u70b9\uff08\u53ca\u4e0d\u7528\u7ee7\u7eed\u67e5\u627e\u4e86\uff09\nint bs[300000]={0};//\u6bcf\u6b21\u67e5\u627e\u4e2d\u7b2c\u4e00\u6b21\u5230\u4e00\u4e2a\u8282\u70b9\u6240\u7ecf\u8fc7\u7684\u8fb9\u6570\nint minn=2e9;\nvoid dfs(int node,int num)\n{\n    if(novisit[node])return;//\u4e0d\u9700\u8981\u7ee7\u7eed\u627e\u4e86\n    if(visit[node])//\u5728\u6b64\u6b21\u67e5\u627e\u4e2d\u51fa\u73b0\u8fc7\n    {\n        minn=min(minn,num-bs[node]);//\u5f62\u6210\u4e00\u4e2a\u73af\uff0c\u53d6\u6700\u5c0f\u503c\n    }\n    else\n    {\n        visit[node]=true;//\u5728\u6b64\u6b21\u5faa\u73af\u4e2d\u7ecf\u8fc7\n        bs[node]=num;//\u8bb0\u5f55\u7b2c\u4e00\u6b21\u5230\u8fbe\u65f6\u7684\u6b65\u6570\n        dfs(dx[node],num+1);//\u641c\u7d22\n        novisit[node]=true;//\u5df2\u7ecf\u641c\u8fc7\n    }\n}\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&dx[i]);\n    }\n    for(int i=1;i<=n;i++)\n    {\n        dfs(i,0);//\u679a\u4e3e\u5168\u90e8\u8282\u70b9\n    }\n    printf(\"%d\",minn);//\u8f93\u51fa\n    return 0;//\u65f6\u95f4\u590d\u6742\u5ea6O(n)\n}\n```",
        "postTime": 1506135397,
        "uid": 32275,
        "name": "KesdiaelKen",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7528\u5e76\u67e5\u96c6\u6765\u505a\u8fd9\u9053\u9898\u3002\n\n\u6211\u4eec\u5728\u8fde\u63a5\u4e00\u4e2a\u70b9\u5230\u53e6\u4e00\u4e2a\u70b9\u4e4b\u524d\uff0c\u5148\u7528\u5e76\u67e5\u96c6\u5224\u65ad\u662f\u5426\u6784\u6210\u4e00\u4e2a\u73af\uff0c\u5982\u679c\u662f\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8bb0\u5f55\u4e0b\u8fd9\u4e2a\u7b54\u6848\uff0c\u7136\u540e\u7ef4\u62a4\u6700\u5c0f\u7684\u7b54\u6848\u3002\n\n\u90a3\u4e48\uff0c\u5982\u679c\u6784\u6210\u4e00\u4e2a\u73af\u7684\u8bdd\uff0c\u600e\u4e48\u8bb0\u5f55\u5b83\u7684\u957f\u5ea6\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cfcnt\uff0c\u5728\u5e76\u67e5\u96c6\u83b7\u53d6\u7956\u5148\u7684\u51fd\u6570\u4e2d\u4f7fcnt\u7684\u503c\u52a01\uff0c\u6700\u540e\u51fd\u6570\u7ed3\u675f\u65f6\u5c31\u80fd\u5f97\u5230\u8fd9\u4e2a\u73af\u7684\u957f\u5ea6\u4e86qwq\uff01\n\n#### \u540c\u65f6\uff0c\u5982\u679c\u6784\u6210\u4e86\u4e00\u4e2a\u73af\uff0c\u5c31\u4e0d\u9700\u8981\u628a\u8fd9\u4e2a\u73af\u7684\u7ed3\u5c3e\u63a5\u4e0a\uff0c\u5426\u5219\u4f1a\u9677\u5165\u6b7b\u5faa\u73af\uff01\uff01\n\n\u6700\u540e\u9644\u4e0a\u77ed\u77ed\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\nusing namespace std;\nconst int N = 200010;\nint n, fa[N], ans = 0x3f3f3f3f;\nint get (int x, int &cnt) { //cnt\u8bb0\u5f55\u73af\u7684\u957f\u5ea6 \n    cnt ++;\n    if (fa[x] == x) return x;\n    else return get(fa[x], cnt);\n}\nint main () {\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n; i ++)\n        fa[i] = i;\n    for (int i = 1; i <= n; i ++) {\n        int cnt = 0, f;\n        scanf(\"%d\", &f);\n        if (get(f, cnt) == i) {\n            ans = min(ans, cnt); //\u7ef4\u62a4\u6700\u5c0f\u7684\u73af \n        }else\n        \tfa[i] = f;\n    }\n    printf(\"%d\", ans);\n    return 0;\n}\n```",
        "postTime": 1540121887,
        "uid": 107640,
        "name": "duoluoluo",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u8bfb\u9898\u4e4b\u540e\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5c06\u6bcf\u4e2a\u540c\u5b66\u5f53\u4f5c\u4e00\u4e2a\u7ed3\u70b9\uff0c\u5c06\u6bcf\u6b21\u4f20\u9012\u5f53\u4f5c\u4e00\u6761\u6709\u5411\u7684\u7ebf\uff0c\u4e00\u8f6e\u6e38\u620f\u4fbf\u53ef\u4ee5\u770b\u4f5c\u662f\u4e2a\u56fe\u3002\u90a3\u4e48\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u5982\u679c\u60f3\u8981\u6709\u4e00\u4e2a\u540c\u5b66\u8bf4\u51fa\u7684\u751f\u65e5\u91cd\u65b0\u4f20\u56de\u81ea\u5df1\u7684\u8033\u4e2d\uff0c\u56fe\u4e2d\u5fc5\u5b9a\u6709\u4e00\u4e2a\u73af\uff08\u73af\u4e2d\u7684\u6bcf\u4e2a\u7ed3\u70b9\u4e92\u76f8\u53ef\u4ee5\u8fde\u901a\uff09\u3002\u5982\u679c\u6709\u4e00\u4e2a\u540c\u5b66\u65e0\u6cd5\u4ece\u522b\u4eba\u53e3\u4e2d\u4f20\u5230\u81ea\u5df1\u7684\u751f\u65e5\uff0c\u4e5f\u80fd\u8bf4\u660e\u662f\u5728\u6e38\u620f\u4e2d\u4ed6\u7684\u751f\u65e5\u843d\u5165\u4e86\u4e00\u4e2a\u5faa\u73af\uff0c\u4f9d\u65e7\u662f\u4e00\u4e2a\u73af\uff0c\u53ea\u4e0d\u8fc7\u73af\u7684\u7ed3\u70b9\u4e0d\u5305\u62ec\u90a3\u4e2a\u4eba\u7f62\u4e86\u3002\u65e2\u7136\u8981\u6c42\u6700\u5c0f\u7684\u6e38\u620f\u8f6e\u6570\uff0c\u4e5f\u5c31\u662f\u8981\u6c42\u6700\u5c0f\u7684\u73af\uff0c\u697c\u4e0a\u5bf9\u4e8e\u73af\u7684\u89e3\u6790\u5f88\u6e05\u695a\u4e86\u3002\u6211\u7684\u601d\u8def\u662f\uff0c\u4ece\u6bcf\u4e2a\u4eba\u5f00\u59cb\uff0c\u6309\u7167\u8f93\u5165\u7684\u4fe1\u606f\uff0c\u5bfb\u627e\u73af\uff0c\u5982\u679c\u6709\u4e2a\u73af\u6ca1\u6709\u88ab\u627e\u5230\uff0c\u5c31\u6253\u4e2a\u6807\u8bb0\uff08\u90a3\u4e2a\u4eba\u7684\u7f16\u53f7\uff09\uff0c\u5982\u679c\u73af\u5df2\u7ecf\u88ab\u6253\u6807\u8bb0\u4e86\uff0c\u5c31\u4e0d\u7528\u591a\u6d6a\u8d39\u65f6\u95f4\u590d\u6742\u5ea6\u4e86\u3002\u7136\u540e\uff0c\u7528\u5f97\u5230\u7684\u73af\u7684\u8fb9\u6570\u66f4\u65b0 x \u6700\u5c0f\u503c\u3002\u9884\u8ba1\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n)\u3002\n\n\u55ef\uff0c\u8fd9\u91cc\u4f7f\u7528\u4e86\u975e\u9012\u5f52\u7684\u641c\u7d22\uff0c\u52a0\u4e86\u4e2a\u8bfb\u5165\u4f18\u5316\uff0c80ms\uff0c\u8fd8\u53ef\u4ee5\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <cstdio>\n#define NodeMax 200001\nint a[NodeMax] , f[NodeMax] , v[NodeMax];\ninline int InP()\n{\n    int N=0;\n    char C;\n    C=getchar();\n    while('0' <= C && C <= '9')\n    N=N*10 + (C-'0') , C=getchar();\n    return N;\n}\nint main()\n{\n    int n=InP() , p , t , x=NodeMax;\n    for(int i=1 ; i <= n ; i++) a[i]=InP();\n    for(int i=1 ; i <= n ; i++)\n    {\n        v[i]=1 , t=i , p=a[i];\n        while(f[p] != i)\n        {    \n            if(f[p] != 0 && f[p] < i) break;        \n            v[p]=v[t]+1 , f[t]=i;\n            t=p , p=a[t];\n        }\n    \n        if(f[p] == i && x > v[t]+1-v[p]) x=v[t]+1-v[p];\n    }\n    printf(\"%d\" , x);\n    return 0;\n}\n```",
        "postTime": 1497173922,
        "uid": 26673,
        "name": "Sooke",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u9898\u610f\u5f88\u6e05\u695a\uff0c\u6c42\u56fe\u4e2d\u6700\u5c0f\u7684\u73af\u3002\n\n\u5982\u679c\u4e00\u4e2a\u4eba\u7684\u5165\u5ea6\u4e3a0\uff0c\u5219\u80af\u5b9a\u4e0d\u53ef\u80fd\u6210\u73af\uff0c\u90a3\u4e48\u628a\u8fd9\u4e2a\u4eba\u548c\u4ed6\u8fde\u51fa\u7684\u8fb9\u5220\u53bb\uff08\u5373\u6807\u8bb0\u8fd9\u4e2a\u4eba\u5e76\u5c06\u4ed6\u4e0b\u4e00\u4e2a\u4eba\u7684\u5165\u5ea6\u51cf 1\uff09\uff0c\n\n\u5982\u679c\u4e0b\u4e00\u4e2a\u4eba\u7684\u5165\u5ea6\u4e3a0\u5219\u5c06\u4ed6\u4e5f\u5220\u53bb\u2026\u2026\u6700\u540e\u628a\u6240\u6709\u5165\u5ea6\u4e3a0\u7684\u4eba\u90fd\u5220\u53bb\u4e86\uff0c\u5269\u4e0b\u7684\u90fd\u662f\u73af\u3002\n\n\u6bcf\u4e2a\u4eba\u7684\u51fa\u5ea6\u4e3a1\uff0c\u6240\u4ee5\u6bcf\u4e2a\u4eba\u53ea\u80fd\u5728\u4e00\u4e2a\u73af\u4e2d\uff0c\u6bcf\u6761\u8fb9\u53ea\u80fd\u5728\u4e00\u4e2a\u73af\u4e2d\uff0c\u4e5f\u5c31\u662f\u8bf4\u6bcf\u4e2a\u73af\u90fd\u662f\u5206\u5f00\u7684\uff0c\n\n\u7136\u540e\u8fdb\u884c\u4e00\u904d dfs\uff0c\u627e\u51fa\u6700\u5c0f\u7684\u73af\u3002\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <string>\n#include <cmath>\n#include <algorithm>\n#include <queue>\nusing namespace std;\nint n,t[200050],d[200050],ans=1000000000,r[200050];\nvoid read(int& x){\n    x=0;\n    int y=1;\n    char ch=getchar();\n    while (ch<'0'||ch>'9'){\n        if (ch=='-') y=-1;\n        ch=getchar();\n    }\n    while (ch>='0'&&ch<='9'){\n        x=x*10+ch-'0';\n        ch=getchar();\n    }\n    x=x*y;\n}\nvoid dfs(int ti,int s,int l){\n    if (ti==s&&l){                                //\u5982\u679c\u56de\u5230\u5f00\u59cb\u8bf4\u660e\u8fde\u6210\u4e86\u73af \n        ans=min(ans,l);\n        return;\n    }\n//    que.push(s);\n//    int l=0;\n//    while (!que.empty()){\n//        int x=que.front();\n//        que.pop();\n//        if (x==s&&l){\n//            ans=min(ans,l);\n//            return;\n//        }\n//        \n//    }\n//    if (t[ti]!=-1) que.push(t[ti]);\n    if (!d[t[ti]]) {\n        d[t[ti]]=1;                                //\u6807\u8bb0 \n        dfs(t[ti],s,l+1);\n    }\n}\nvoid rmove(int ti){                                //\u5220\u9664ti \n    d[ti]=-1;                                    //\u6807\u8bb0 \n    r[t[ti]]--;                                    //ti\u7684\u4e0b\u4e00\u4e2a\u4eba\u7684\u5165\u5ea6\u51cf\u4e00 \n    if (!r[t[ti]]&&d[t[ti]]!=-1) rmove(t[ti]);\n}\nint main(){\n    freopen(\"ferry.in\",\"r\",stdin);\n    freopen(\"message.out\",\"w\",stdout);\n    memset(d,0,sizeof(d));\n    memset(r,0,sizeof(r));                        //r[i]\u4e3a\u7b2c i \u4e2a\u4eba\u7684\u5165\u5ea6 \n    int i;\n    read(n);\n    for (i=1;i<=n;i++){\n        read(t[i]);\n        r[t[i]]++;\n    }\n    for (i=1;i<=n;i++){\n        if (!r[i]&&d[i]!=-1) rmove(i);            //\u5982\u679c i \u7684\u5165\u5ea6\u4e3a 0 \u4e14\u8fd8\u672a\u88ab\u5220\u9664\uff0c\u5219\u5220\u9664i \n    }\n    for (i=1;i<=n;i++){\n        if (!d[i]){                                //\u5982\u679ci\u8fd8\u672a\u641c\u8fc7\u4e14\u672a\u88ab\u5220\u9664\uff0c\u5219\u4ecei\u5f00\u59cb\u641c\u7d22 \n            //cout<<i<<' ';\n            dfs(i,i,0);\n        }\n    }\n    //cout<<endl;\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1478956604,
        "uid": 17123,
        "name": "\u6df1\u6d77\u9c7c\u7684\u773c\u6cea",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "[${\\color{#11aaee}\\text{\u6b22\u8fce\u62dc\u8bbf\u6211\u8fd9\u4e2a\u849f\u84bb\u7684\u535a\u5ba2}}$](https://www.luogu.org/blog/Wendigo/)\n\n[P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011](https://www.luogu.org/problem/P2661)\n\n### \u6b64\u9898\u7b97\u6cd5:\u56fe\u8bba+\u9012\u5f52$(dfs)$\n\n\u7b2c\u4e00\u6b21\u62ff\u5230\u8fd9\u9898\u7684\u65f6\u5019\uff0c\u53d1\u73b0\u8fd9\u9898\u5df2\u7ecf\u505a\u8fc7\u4e86~~en~~\u3002\n\n\u8fd9\u9898\u4e00\u770b\u4ee5\u4e3a\u662ftarjan\uff0c\u4e8e\u662f\u5199\u4e86\u4e00\u4e2a70\u884c\u7684\u4ee3\u7801\u3002\n\n\u53c8\u611f\u89c9\u4e0d\u5bf9\uff0c\u5c31\u628atarjan\u6ce8\u91ca\u6389\u4e86\uff0c\u9012\u5f52\u624d\u662f\u6b63\u89e3\u3002\n\n**\u5927\u81f4\u601d\u8def\uff1a**\n\n\u7528$inc[i]$\u8bb0\u5f55$i$\u70b9\u7684\u904d\u5386\u60c5\u51b5\uff0c\u7528$count(x,f)$\u51fd\u6570\u7edf\u8ba1\u6bcf\u4e2a\u70b9\u7684\u7b54\u6848\uff0c$f$\u8868\u793a\u4f20\u7ed9$x$\u8fd9\u4e2a\u4eba\u7684\u4eba\u3002\n\n\u5982\u679c\u6709\u73af\uff0c$inc[]$\u6570\u7ec4\u80fd\u7ef4\u62a4\u8fd9\u4e2a\u73af\u4e2d\u7684\u70b9\u7684\u7b54\u6848\u3002\n\n**\u5bf9\u4e8e$count(int~x,int~f)$\uff1a**\n\n**\u5982\u679c$x$\u7684\u7b54\u6848\u5df2\u7ecf\u7edf\u8ba1\u8fc7\u4e86\uff0c\u90a3\u4e48\u8df3\u51fa\u7edf\u8ba1**\u3002\n\n```cpp\nif(ans[x]) return;\u3002\n```\n\n**\u5982\u679c$x$\u70b9\u5df2\u7ecf\u904d\u5386\u8fc7\uff0c\u8bf4\u660e$x$\u4e0e$f$\u5728\u540c\u73af\u4e2d\u3002**\n\n**\u7531\u4e8e\u540c\u73af\u4e2d\u7684\u70b9\u7b54\u6848\u4e00\u6837\uff0c\u6240\u4ee5\u518d\u66f4\u65b0$ans[to[x]]$**\n\n```cpp\nif(inc[x]){\n\tans[x]=inc[x]=inc[f];\n\tcount(to[x],x);\n\treturn;\n} \n```\n![](https://s2.ax1x.com/2019/11/12/M3Tkkj.jpg)\n\n**\u5982\u679c$to[x]$\u7684\u7b54\u6848\u672a\u7edf\u8ba1\u4f46\u5df2\u7ecf\u904d\u5386\u8fc7\u4e86\uff0c\u518d\u5e76\u4e14$f$\u5df2\u904d\u5386\uff0c**\n\n**\u5219\u6b64\u65f6\u53d1\u73b0\u4e86\u4e00\u4e2a\u73af\uff0c\u7b54\u6848\u4e3a\u73af\u7684\u5927\u5c0f\uff0c\u66f4\u65b0\u73af\u4e2d\u70b9\u7684\u7b54\u6848\u3002**\n\n```cpp\nif(!ans[to[x]]&&inc[to[x]]&&inc[f]){\n\tinc[x]=inc[f]+2-inc[to[x]];\n\tcount(to[x],x);\n\treturn;\n}\n```\n\u2191\n\n\u4e09\u4e2a\u6761\u4ef6\u7684\u4e0d\u5199\u7684\u540e\u679c:\n\n\u4e0d\u5199$!ans[to[x]]$\uff1a $x$\u53ef\u80fd\u53ea\u662f\u94fe\u4e2d\u7684\u4e00\u70b9\u3002\n\n(\u4e0d\u5199$inc[to[x]]$\uff0c$ans[to[x]]$\u81ea\u7136\u4e0d\u6210\u7acb)\u3002\n\n\u4e0d\u5199$inc[f]$\uff1a \u5565\u90fd\u4e0d\u4f1a\u53d1\u751f\u3002\n\n\n\n**\u5426\u5219\uff0c\u8fd9\u4e2a\u70b9\u5728\u4e00\u6761\u94fe\u4e2d\u6216\u8fd8\u672a\u53d1\u73b0\u73af**\n\n```cpp\ninc[x]=inc[f]+1;\ncount(to[x],x);\nif(!ans[x]) ans[x]=ans[to[x]]+1;//ans\u7edf\u8ba1\u8fc7\u5c31\u4e0d\u7528\u7edf\u8ba1\u4e86\u3002\n```\n\n## \u6b64\u9898\u4ee3\u7801+\u6ce8\u91ca\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=2e5+10;\nint n,to[N],ans[N];\nint inc[N],minn=INT_MAX;\nvoid count(int x,int f){ //\u8fd8\u539fcount\u51fd\u6570\n\tif(ans[x]) return;\n\tif(inc[x]){\n\t\tans[x]=inc[x]=inc[f];\n\t\tcount(to[x],x);\n\t\treturn;\n\t} \n\tif(!ans[to[x]]&&inc[to[x]]&&inc[f]){\n\t\tinc[x]=inc[f]+2-inc[to[x]];\n\t\tcount(to[x],x);\n\t\treturn;\n\t}\n\tinc[x]=inc[f]+1;\n\tcount(to[x],x);\n\tif(!ans[x]) ans[x]=ans[to[x]]+1;\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d\",to+i); //\u8f93\u5165\n\tfor(int i=1;i<=n;i++){\n\t\tcount(i,i); //\u81ea\u5df1\u60f3\u60f3\u8fd9\u4e48\u5199\u7684\u6548\u679c\uff1a\u4fe1\u606f\u662f\u81ea\u5df1\u4f20\u6765\u7684\n//\t\tcout<<ans[i]<<endl; \u6709\u529b\u5730\u8c03\u8bd5\uff0c\u4e0d\u5220WA\u5149\u65e0\u4fa5\u5e78\n\t\tminn=min(minn,ans[i]);\n//\t\t\u968f\u65f6\u66f4\u65b0\u7b54\u6848(\u6700\u5c0f\u503c)\u3002\n\t}\n\tprintf(\"%d\\n\",minn);\n\treturn 0;\n}\n\n```\n\u5199\u9898\u89e3\u4e0d\u6613\uff0c\u8d5e\u540c\u8bf7\u70b9\u8d5e\u3002\n\n\u5176\u5b9e\u6211\u5df2\u7ecf\u7b2c\u4e8c\u6b21\u505a\u8fd9\u9898\u4e86\uff0c\u4f46\u5199\u9898\u89e3\u662f\u7b2c\u4e00\u6b21\u5199\u3002\n\n\u505a\u6cd5\u4e0e\u7b2c\u4e00\u6b21\u4e0d\u4e00\u6837\uff0c\u7b2c\u4e00\u6b21\u662f\u7528\u5e76\u67e5\u96c6\u3002\n\n\u9898\u89e3\u7684\u56fe\u662f\u7528\u753b\u56fe\u8f6f\u4ef6\u753b\u7684\u3002\n\n~~\u5feb\u70b9\u8d5e\u5427QwQ~~\n\n\u8c22\u8c22\u5927\u5bb6! !\n\n\n",
        "postTime": 1573559815,
        "uid": 118365,
        "name": "George1123",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\n## \u5df2\u66f4\u65b0\uff1a$update\\:on\\:2019.9.19$\n\n\n------------\n\n\n------------\n\n\n**\u8fd9\u7bc7\u6587\u7ae0\u8bf4\u660e\u4e86tarjan\u5728\u8fd9\u9053\u9898\u91cc\u7684\u5c40\u9650\u6027\uff0c\u5e0c\u671b\u80fd\u8ba9\u66f4\u591a\u540c\u5b66\u7406\u89e3\u666e\u9002\u7684\u6700\u5c0f\u73af\u6c42\u6cd5.**\n\n\n[P2661 \u4fe1\u606f\u4f20\u9012](https://www.luogu.org/problemnew/show/P2661)\n\n\u6700\u8fd1\u521a\u5b66\u5b8ctarjan\u7b97\u6cd5\uff0c\u6240\u4ee5\u770b\u5230\u8fd9\u9053\u9898\u7684\u7b2c\u4e00\u60f3\u6cd5\u5c31\u662f\u80fd\u4e0d\u80fd\u7528tarjan\u6765\u505a\u3002\u8bd5\u7740\u753b\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0\u53ef\u884c\uff0c\n\t\n    \u6700\u5c0f\u73af\u7684\u5927\u5c0f=\u6700\u5c0f\u5f3a\u8054\u901a\u5206\u91cf\u7684\u8fb9\u6570=\u6700\u5c0f\u5f3a\u8054\u901a\u5206\u91cf\u7684\u70b9\u6570\n    \n\u7136\u540e\u82b1\u4e86\u4e09\u5206\u949f\u5c31AC\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 200010\nusing namespace std;\nint n,ans=0x7f7f7f;\nvector<int >g[maxn];\nint deep,top,dfn[maxn],low[maxn],color[maxn],stac[maxn],sum;\nbool vis[maxn];\nvoid tarjan(int u){\n    deep+=1;\n    dfn[u]=deep;\n    low[u]=deep;\n    top+=1;\n    stac[top]=u;\n    vis[u]=true;\n    for(int i=0;i<g[u].size();i++){\n        int v=g[u][i];\n        if(!dfn[v]){\n            tarjan(v);\n            low[u]=min(low[v],low[u]);\n        }\n        else{\n            if(vis[v]){\n                low[u]=min(low[v],low[u]);\n            }\n        }\n    }\n    if(dfn[u]==low[u]){\n        sum+=1;\n        vis[u]=false;\n        color[sum]++;\n        while(stac[top]!=u){\n            top--;\n            vis[stac[top]]=false;\n            color[sum]++;\n        }\n        top--;\n    }\n}\nint main(){\n    scanf(\"%d\",&n);\n    int x;\n    for(int i=1;i<=n;i++){\n        scanf(\"%d\",&x);\n        g[i].push_back(x);\n    }\n    for(int i=1;i<=n;i++)\n        if(!dfn[i])tarjan(i);\n    for(int i=1;i<=sum;i++)\n        if(color[i]>1)ans=min(ans,color[i]);//\u9664\u81ea\u73af\u6216\u5355\u4e2a\u5143\u7d20 \n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```\n## \u4f46\u662f\uff01\n\n\u5982\u6b64\u505a\u5b8c\u4e4b\u540e\uff0c\u6211\u4ed4\u7ec6\u4e00\u60f3\uff0c\u53c8\u89c9\u5f97\u4e0d\u662f\u5f88\u5999\uff0c\u5728\u7eb8\u4e0a\u6bd4\u5212\u51e0\u4e0b\uff0c\u7adf\u7136\u628a\u8fd9\u79cd\u7b97\u6cd5hack\u6389\u4e86\uff01\n\n![](https://s2.ax1x.com/2019/06/09/VsHtEt.md.jpg)\n\n\u5982\u56fe\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\uff0c\u4f46\u662f\u6700\u5c0f\u73af\u662f3\u800c\u4e0d\u662ftarjan\u76846.\n\n\n\n------------\n\n\n------------\n\n\n------------\n\n\n\u4e0d\u7531\u5f97\u60ca\u51fa\u4e86\u4e00\u8eab\u51b7\u6c57\uff0c\u96be\u9053\u9898\u76ee\u5982\u6b64\u4e4b\u6c34\uff0c\u8fde\u8fd9\u79cd\u9519\u8bef\u7684\u7b97\u6cd5\u90fd\u4e0d\u80fd\u67e5\u51fa\u6765\u5417\uff1f\n\n\u8d76\u5fd9\u56de\u53bb\u770b\u9898\uff0c\u53d1\u73b0\u4e86\u8fd9\u6837\u4e00\u884c\uff1a\n\n\t\u6ce8\u610f\uff1a\u53ef\u80fd\u6709\u4eba\u53ef\u4ee5\u4ece\u82e5\u5e72\u4eba\u90a3\u91cc\u83b7\u53d6\u4fe1\u606f\uff0c \u4f46\u662f\u6bcf\u4eba\u53ea\u4f1a\u628a\u4fe1\u606f\u544a\u8bc9\u4e00\u4e2a\u4eba\uff0c\u5373\u81ea\u5df1\u7684\u4fe1\u606f\u4f20\u9012\u5bf9\u8c61\n    \n\u602a\u4e0d\u5f97\u6211\u7684\u5783\u573etarjan\u80fd\u8fc7\u5462\u2026\u2026\n\n\u90a3\u4e48\uff0c\u65e2\u7136\u4e0d\u662f\u6240\u6709\u7684\u6700\u5c0f\u73af\u90fd\u80fd\u591f\u7528tarjan\u7b97\u6cd5\uff0c\u5e76\u67e5\u96c6\u600e\u4e48\u6837\u5462\uff1f\n\n\u6211\u4eec\u5148\u6309\u4e0a\u56fe\u6784\u9020\u4e00\u7ec4\u6570\u636e\uff1a\n\n\t6 7\n\t1 2\n\t2 3\n\t3 4\n\t4 1\n\t2 6\n\t6 5\n\t5 2\n\n\u7136\u540e\u5bf9\u4ee3\u7801\u7684\u8bfb\u5165\u7a0d\u4f5c\u4fee\u6539\uff0c\u4f7f\u5176\u53ef\u4ee5\u8bfb\u5165\u8fd9\u7ec4\u6570\u636e\u3002\n\n\u8fd0\u884ctarjan\uff0c\u5f97\u5230\u4e86\u5982\u4e0b\u7ed3\u679c\uff1a\n\n![](https://s2.ax1x.com/2019/06/10/Vy3nXV.png)\n\n\u663e\u7136\u4e0d\u6b63\u786e\u3002\n\n\u6211\u5728\u8fd9\u91cc\u501f\u7528\u524d\u9762[\u4e00\u4f4d\u5927\u4f6c\u7684\u4ee3\u7801](https://www.luogu.org/blog/duoluoluo/solution-p2661#)\uff08\u5bf9\u4e0d\u8d77\uff01\uff09\u6765\u8fd0\u884c\uff0c\u7ed3\u679c\u5982\u4e0b:\n\n![](https://s2.ax1x.com/2019/06/10/Vy361I.png)\n\n# \u6b63\u786e\uff01\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\u6211\u4eec\u7814\u7a76\u4e00\u4e0b\uff0c\u8fd9\u4e24\u4efd\u4ee3\u7801\u6709\u4ec0\u4e48\u4e0d\u540c\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 200010\nusing namespace std;\nint n,m,fa[maxn],ans=0x3f3f3f3f;\nint get(int x,int &cnt){//\u7531\u4e8ecnt\u8981\u4fee\u6539\uff0c\u6240\u4ee5\u5f97\u4f20\u53c2 \n\tcnt++;\n\tif(fa[x]==x)return x;\n\telse return get(fa[x],cnt); \n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)fa[i]=i;\n\tfor(int i=1;i<=m;i++){\n\t\tint cnt=0,f,e;\n\t\tscanf(\"%d%d\",&f,&e);\n\t\tif(get(e,cnt)==f){//\u8fd9\u91cc\u6700\u540e\u4e5f\u6ca1\u6709\u8fde\u6210\u73af\n\t\t\tans=min(ans,cnt);\n\t\t}else fa[f]=e;//f\u7684\u7236\u4eb2\u8282\u70b9\u524d\u8fdb\u4e00\u683c\uff0c\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\u5b9e\u9645\u4e0a[duoluoluo](https://www.luogu.org/space/show?uid=107640)\u5de8\u4f6c\u5df2\u7ecf\u8bf4\u5f97\u5f88\u6e05\u695a\u4e86\uff0c\n\n\t\n\n\t\u6211\u4eec\u5728\u8fde\u63a5\u4e00\u4e2a\u70b9\u5230\u53e6\u4e00\u4e2a\u70b9\u4e4b\u524d\uff0c\u5148\u7528\u5e76\u67e5\u96c6\u5224\u65ad\u662f\u5426\u6784\u6210\u4e00\u4e2a\u73af\uff0c\u5982\u679c\u662f\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8bb0\u5f55\u4e0b\u8fd9\u4e2a\u7b54\u6848\uff0c\u7136\u540e\u7ef4\u62a4\u6700\u5c0f\u7684\u7b54\u6848\u3002\n\n\t\u90a3\u4e48\uff0c\u5982\u679c\u6784\u6210\u4e00\u4e2a\u73af\u7684\u8bdd\uff0c\u600e\u4e48\u8bb0\u5f55\u5b83\u7684\u957f\u5ea6\u5462\uff1f\n\t\n    \u6211\u4eec\u53ef\u4ee5\u5148\u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cfcnt\uff0c\u5728\u5e76\u67e5\u96c6\u83b7\u53d6\u7956\u5148\u7684\u51fd\u6570\u4e2d\u4f7fcnt\u7684\u503c\u52a01\uff0c\u6700\u540e\u51fd\u6570\u7ed3\u675f\u65f6\u5c31\u80fd\u5f97\u5230\u8fd9\u4e2a\u73af\u7684\u957f\u5ea6\u4e86qwq\uff01\n\t\n    \u540c\u65f6\uff0c\u5982\u679c\u6784\u6210\u4e86\u4e00\u4e2a\u73af\uff0c\u5c31\u4e0d\u9700\u8981\u628a\u8fd9\u4e2a\u73af\u7684\u7ed3\u5c3e\u63a5\u4e0a\uff0c\u5426\u5219\u4f1a\u9677\u5165\u6b7b\u5faa\u73af\uff01\uff01\n\n\n\u7531\u6b64\u53ef\u89c1\uff0c\u5e76\u67e5\u96c6\u7b97\u6cd5\u662f\u52a8\u6001\u66f4\u65b0\u7684\uff0c\u800ctarjan\u662f\u9759\u6001\u66f4\u65b0\u7684\uff0c\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48tarjan\u5728\u6267\u884c\u65f6\u4f1a\u51fa\u9519\u4e86\u3002\n\n\n\n------------\n\n\n------------\n\n\n------------\n\n\n------------\n# \u7efc\u4e0a\u6240\u8ff0\uff0c\u867d\u7136\u5728\u8fd9\u9053\u9898\u91cctarjan\u7b97\u6cd5\u80fd\u591fAC\uff0c\u4f46\u662f\u5b83\u5e76\u4e0d\u80fd\u666e\u904d\u9002\u7528\u3002\u5b66\u4f1a\u5e76\u67e5\u96c6\u7684\u6c42\u6700\u5c0f\u73af\u65b9\u6cd5\u624d\u662f\u786c\u9053\u7406\u3002\n\n\n[\u6700\u540e\u8d34\u4e00\u4e0b\u6d4b\u8bd5\u4ee5\u4e0a\u6837\u4f8b\u7684\u4ee3\u7801]( https://www.luogu.org/paste/dm0ko0wb)\n\n\n\n\n------------\n\n\n------------\n\n\n------------\n\n\n------------\n\n$update\\:on\\:2019.9.19$\n\n\u540e\u6765\u53d1\u73b0\u5b9e\u9645\u4e0a\u5e76\u67e5\u96c6\u7684\u505a\u6cd5\u4e5f\u4e0d\u80fd\u666e\u904d\u9002\u7528.\n\n\u6ce8\u610f\u5230\u8fd9\u91cc\u7684\u6240\u6709\u8fb9\u6743\u90fd\u4e3a1\uff0c\u6240\u4ee5\u5e76\u67e5\u96c6\u7b97\u6cd5\u624d\u6210\u7acb.\n\n\u5982\u679c\u662f\u5e26\u6743\u56fe\uff0c\u5e76\u67e5\u96c6\u548c$tarjan$\u7b97\u6cd5\u90fd\u4e0d\u9002\u7528\uff0c\u8fd9\u65f6\u5019\u5c31\u8981\u7528\u5230\u53e6\u5916\u7684\u7b97\u6cd5.\n\n\u65e0\u5411\u56fe\u4e0a\u636e\u6211\u6240\u77e5\u6bd4\u8f83\u65b9\u4fbf\u7684\u662f$floyd$\u6c42\u6700\u5c0f\u73af\uff08\u540c\u6837\u5728\u6709\u5411\u56fe\u4e0a\u9002\u7528\uff0c\u4f46\u662f\u9700\u8981\u4fee\u6539\u4e00\u4e0b\u8f6c\u79fb\u65b9\u7a0b\uff0c\u56e0\u4e3a\u65e0\u5411\u56fe\u6700\u5c0f\u73af\u81f3\u5c11\u7ecf\u8fc7\u4e09\u4e2a\u8282\u70b9\uff09.\n\n\u6709\u5411\u56fe\u4e0a\u6c42\u6700\u5c0f\u73af\u53ef\u4ee5\u4f7f\u7528$dijkstra$\u7b97\u6cd5\u7684\u53d8\u4f53. \u64cd\u4f5c\u5982\u4e0b\uff1a\n\n\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u8d77\u70b9\uff0c\u5728\u677e\u5f1b\u5b8c\u8d77\u70b9\u6240\u6709\u7684\u51fa\u8fb9\u540e\u628a\u5176$dis$\u91cd\u7f6e\u4e3a$inf$\u3001$vis$\u91cd\u7f6e\u4e3a$false$\uff0c\u4e4b\u540e\u518d\u626b\u5230\u8be5\u8d77\u70b9\u65f6\u8be5\u8d77\u70b9\u7684$dis$\u4e3a\u6700\u5c0f\u73af. \u53ef\u884c\u6027\u7531$dijkstra$\u7684\u8d2a\u5fc3\u6613\u8bc1.\n\n\u5806\u4f18\u5316\u540e\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(n(n+m)\\:log\\:n)$\uff0c\u6bd4\u6734\u7d20\u7684\u60f3\u6cd5\u679a\u4e3e\u8fb9\u7136\u540e\u65ad\u8fb9\u6c42\u6700\u77ed\u8def$O(m(n+m)\\:log\\:n)$\u8981\u4f18.",
        "postTime": 1560137327,
        "uid": 126621,
        "name": "HRLYB",
        "ccfLevel": 6,
        "title": "P2661 \u4fe1\u606f\u4f20\u9012Exp."
    },
    {
        "content": "~~\u65e2\u7136\u670980\u591a\u7bc7\u9898\u89e3\u4e86~~\uff0c\u90a3\u6211\u5728\u8fd9\u91cc\u5c31\u4e3b\u8981\u8bb2\u4e00\u4e9b\u5751\u5427\u3002\n# \u601d\u8def\n\u9996\u5148\u6211\u7684\u65b9\u6cd5\u662f\u5e76\u67e5\u96c6\uff0c\u8bbe\u6570\u7ec4$fa$\u8868\u793a\u8fd9\u4e2a\u70b9\u7684\u7956\u5148\u8282\u70b9\uff0c\u6570\u7ec4$dis$\u8868\u793a\u8fd9\u4e2a\u70b9\u8ddd\u79bb\u7956\u5148\u8282\u70b9\u7684\u8ddd\u79bb\u3002\n\n\u8fd9\u9053\u9898\u6c42\u7684\u662f\u7531$n$\u6761\u5355\u5411\u8fb9\u7ec4\u6210\u7684\u56fe\u4e2d\uff0c\u6700\u5c0f\u73af\u7684\u957f\u5ea6\u3002\n\n\u5728\u627e\u7956\u5148\uff08$getfa$\uff09\u8fd9\u4e2a\u51fd\u6570\u91cc\uff0c\u4e0d\u4ec5\u8981\u66f4\u65b0\u7956\u5148\u8282\u70b9\uff0c\u8fd8\u8981\u66f4\u65b0\u8ddd\u79bb\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u6bd4\u8f83\u5de7\u5999\u7684\u65b9\u6cd5\uff1a\u7531\u4e8e\u771f\u6b63\u7684\u7956\u5148\u8282\u70b9\u662f\u76ee\u524d\u7684\u7956\u5148\u8282\u70b9\u7684\u7956\u5148\u8282\u70b9\uff0c\u6240\u4ee5\u8fd9\u4e2a\u70b9\u5230\u771f\u6b63\u7956\u5148\u8282\u70b9\u7684\u8ddd\u79bb\u5c31\u662f\u5b83\u5230\u76ee\u524d\u7684\u7956\u5148\u8282\u70b9\u7684\u8ddd\u79bb\u52a0\u4e0a\u76ee\u524d\u7684\u7956\u5148\u8282\u70b9\u5230\u771f\u6b63\u7956\u5148\u8282\u70b9\u7684\u8ddd\u79bb\u3002\uff08~~\u6bd4\u8f83\u7ed5~~\uff09\n\n\u8fd8\u6709\u4e00\u4e2a\u5408\u5e76\u7684\u51fd\u6570\uff08$union$\u8fd9\u4e2a\u540d\u5b57\u88ab\u7528\u8fc7\u4e86\uff0c\u6240\u4ee5\u6211\u8fd9\u91cc\u53eb$unio$\uff09\u3002\u5bf9\u4e8e\u8f93\u5165\u7b2c\u4e8c\u884c\u7684\u6bcf\u4e2a\u6570\uff0c\u90fd\u9700\u8981\u4e0e\u5f53\u65f6\u7684$i$\u505a\u4e00\u6b21\u5408\u5e76\u64cd\u4f5c\u3002\u5148\u627e\u5230\u9700\u8981\u5408\u5e76\u7684\u4e24\u4e2a\u8282\u70b9\u7684\u7956\u5148\u3002\n\n\u5982\u679c\u7956\u5148\u76f8\u540c\uff0c\u90a3\u4e48\u51fa\u73b0\u73af\uff0c\u6b64\u73af\u7684\u957f\u5ea6\u5c31\u662f$dis[v]+1$\u3002\u5982\u679c\u4e0d\u597d\u7406\u89e3\uff0c\u90a3\u4e48\u770b\u4e0b\u9762\u7684\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/owcpa82g.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u5176\u4e2d\u6b63\u5728\u5904\u7406$u=4,v=1$\u7684\u5408\u5e76\uff0c\u53ef\u4ee5\u5f97\u5230$fa[1]=4,dis[1]=3,fa[4]=4,dis[4]=0$\u3002\u4e0d\u96be\u53d1\u73b0\uff0c$dis[u]$\u6c38\u8fdc\u662f$0$\uff0c\u6240\u4ee5\u7b54\u6848\u5c31\u662f$dis[v]$\u52a0\u4e0a$<4,1>$\u8fd9\u6761\u8fb9\u7684$1$\u3002\n\n\u5982\u679c\u7956\u5148\u4e0d\u76f8\u540c\uff0c\u90a3\u4e48\u5c31\u6309\u7167\u5e76\u67e5\u96c6\u7684\u6b63\u5e38\u505a\u6cd5\uff0c\u518d\u52a0\u4e0a\u4e00\u53e5$dis[u]=dis[v]+1$\u5c31\u597d\u4e86\u3002\n# \u5751\n\u6211\u6765\u53d1\u8fd9\u7bc7\u9898\u89e3\u4e3b\u8981\u8fd8\u662f\u56e0\u4e3a\u8fd9\u9053\u9898\u5751\u5f88\u591a\u3002\uff08~~\u6211\u6ca1\u6709\u4e00\u6b21AC~~\uff09\n## \u51e0\u4e2a\u6d45\u5751\n\u8fd9\u91cc\u5927\u4f6c\u4eec\u53ef\u4ee5\u8df3\u8fc7\uff0c\u53ea\u6bd4\u6211\u5f3a\u4e00\u4e9b\u7684\u4eba\u53ef\u4ee5\u770b\u4e00\u4e0b\u3002\uff08~~\u6211\u592a\u849f\u4e86~~\uff09\n\n1. \u9996\u5148\uff0c\u7531\u4e8e\u6c42\u7684\u662f\u6700\u5c0f\u503c\uff0c$ans$\u521d\u59cb\u5316\u5e94\u8be5\u4e3a\u6b63\u65e0\u7a77\u3002\n\n2. $getfa$\u51fd\u6570\u91cc\u662f$fa[u]=getfa(fa[u])$\uff08\u4e0d\u80fd\u5199\u6210$u=getfa(fa[u])$\uff09\n\n3. $unio$\u51fd\u6570\u91cc\u6ce8\u610f\u533a\u5206$u$\u548c$fu$\u3002\n\n4. $fa[i]$\u521d\u503c\u4e3a$i$\u3002\n\n5. \u4e3b\u51fd\u6570\u91cc\u8c03\u7528$unio$\u65f6$i$\u5728\u524d\uff0c$a[i]$\u5728\u540e\u3002\uff08$a[i]$\u5c31\u662f\u8f93\u5165\u7684\u4e1c\u897f\uff09\n\n## \u4e00\u4e2a\u6df1\u5751\n\u6211\u5efa\u8bae\u6240\u6709\u770b\u5230\u8fd9\u7bc7\u9898\u89e3\u7684\u4eba\u770b\u4e00\u4e0b\u8fd9\u91cc\u3002\n\n$getfa$\u91cc\u8981\u5148\u5904\u7406$fa[u]$\uff0c\u518d\u5904\u7406$dis[u]$\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\nint tmp=fa[u];//\u8bb0\u4e0a\nfa[u]=getfa(fa[u]);//\u5148\u7b97fa[u]\ndis[u]+=dis[tmp];//\u518d\u7b97dis[u]\uff0c\u4fdd\u8bc1dis[\u539f\u5148fa[u]]\u662f\u539f\u5148\u7956\u5148\u5230\u771f\u6b63\u7956\u5148\u7684\u8ddd\u79bb\n```\n    \n# \u4ee3\u7801\n\u4e0b\u9762\u653e\u5b8c\u6574\u4ee3\u7801\u2014\u2014\n\n\uff08~~\u6211\u77e5\u9053\u4f60\u4eec\u53ea\u770b\u8fd9\u91cc~~\uff09\n```cpp\n#include<cstdio>\n#include<algorithm>//\u7528\u5230min\nusing namespace std;\nconst int MAXN=200010;\nint a[MAXN],fa[MAXN],dis[MAXN];//\u542b\u4e49\u89c1\u4e0a\nint ans=0x3f3f3f3f;//\u6d45\u57511\nint read(){//\u5feb\u8bfb\uff0c\u8fd9\u91cc\u5c31\u4e0d\u7ed9\u6ce8\u91ca\u4e86\n\tint x=0,f=1;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9'){\n\t\tif(c=='-') f=-1;\n\t\tc=getchar();\n\t}\n\twhile(c>='0'&&c<='9'){\n\t\tx=x*10+c-'0';\n\t\tc=getchar();\n\t}\n\treturn x*f;\n}\nint getfa(int u){//\u627e\u7956\u5148\n\tif(fa[u]==u) return u;//\u4e0d\u7528\u627e\uff0c\u76f4\u63a5\u8fd4\u56de\n\tint tmp=fa[u];//\u6df1\u5751\uff0c\u89e3\u91ca\u89c1\u4e0a\n\tfa[u]=getfa(fa[u]);//\u6d45\u57512\n\tdis[u]+=dis[tmp];\n\treturn fa[u];//\u8fd4\u56de\n}\nvoid unio(int u,int v){//\u5408\u5e76\n\tint fu=getfa(u),fv=getfa(v);//\u5148\u627e\u7956\u5148\n\tif(fu==fv) ans=min(ans,dis[v]+1);//\u66f4\u65b0\u7b54\u6848\uff0c\u89e3\u91ca\u89c1\u4e0a\n\telse fa[fu]=fv,dis[u]=dis[v]+1;//\u66f4\u65b0fa\u548cdis\uff0c\u6d45\u57513\n}\nint main(){//\u4e3b\u51fd\u6570\n\tint n=read();\n\tfor(int i=1;i<=n;i++) fa[i]=i;//\u6d45\u57514\n\tfor(int i=1;i<=n;i++){\n\t\ta[i]=read();\n\t\tunio(i,a[i]);//\u5408\u5e76\uff0c\u6d45\u57515\n\t}\n\tprintf(\"%d\",ans);//\u8f93\u51fa\n\treturn 0;//\u534e\u4e3d\u7ed3\u675f\n}\n```\n\u770b\u6211\u8fd9\u4e48\u8f9b\u82e6\uff0c\u5199\u51fa\u4e86\u8fd9\u4e48\u591a\u53ef\u80fd\u9519\u7684\u5751\uff0c\u603b\u5f97\u70b9\u4e2a\u8d5e\u518d\u8d70\u5440~",
        "postTime": 1579771620,
        "uid": 130981,
        "name": "dingcx",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u7b80\u5355\u6765\u8bf4\uff0c\u672c\u9898\u5c31\u662f\u5728\u627e\u6700\u5c0f\u7684\u73af\uff0c\u6211\u7528tarjan\u505a\u7684\n\n\u7528tarjan\u627e\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u5c06\u5927\u4e8e1\u7684\u5206\u91cf\u548cans\u8fdb\u884c\u6bd4\u8f83\u53d6\u5c0f\u503c\n\ntarjan\u5177\u4f53\u662f\u4ec0\u4e48\u5c31\u81ea\u5df1\u767e\u5ea6\u53bb\u5427\n\n\n```cpp\n    #include<cstdio>\n    #include<cstring>\n    #include<algorithm>\n    #include<cstdlib>\n    #include<iostream>\n    #define N 250000\n    using namespace std;\n    struct Edge{\n        int next,to;\n    }edge[N*100];//\u5f97\u5f00\u5927\u70b9 \n    int n,t,head[N*100],cnt,low[N],dfn[N],sta[N];\n    int sa,ans=0x7ffffff/3,tot,num;\n    bool insta[N];\n    void in(int &read){\n        int x=0;char ch=getchar();\n        while(ch<'0'||ch>'9')ch=getchar();\n        while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n        read=x;//\u8bfb\u5165\u4f18\u5316 \n    }\n    inline void add(int x,int y){\n        cnt++;\n        edge[cnt].to=y;\n        edge[cnt].next=head[x];\n        head[x]=cnt;//\u94fe\u5f0f\u524d\u5411\u661f\uff08\u624d\u60f3\u8d77\u6765\u8fd8\u6709\u8fd9\u4e48\u4e2a\u9ad8\u7aef\u540d\u5b57 \n    }\n    void tarjan(int x){\n        dfn[x]=low[x]=++tot;//\u5165\u6808 \n        sta[++num]=x;insta[x]=true;\n        for(int i=head[x];i;i=edge[i].next){\n            if(!dfn[edge[i].to]){\n                tarjan(edge[i].to);\n                low[x]=min(low[x],low[edge[i].to]);\n            }\n            else if(insta[edge[i].to])\n            low[x]=min(low[x],dfn[edge[i].to]);\n        }\n        if(low[x]==dfn[x]){\n            sa=0;\n            do{sa++;insta[sta[num--]]=false;}//\u5f39\u6808 \n            while(x!=sta[num+1]);\n            if(sa==2){puts(\"2\");exit(0);}//\u52302\u5c31\u6ca1\u5fc5\u8981\u7ee7\u7eed\u4e86 \n            if(sa>1)ans=min(ans,sa);//\u53d6\u6700\u5c0f\u503c \n        }\n    }\n    int main(){\n        in(n);\n        for(register int i=1;i<=n;i++){\n            in(t);\n            add(i,t);\n        }\n        for(register int i=1;i<=n;i++)tarjan(i);\n        printf(\"%d\\n\",ans);\n        return 0;\n}\n```",
        "postTime": 1515253225,
        "uid": 52605,
        "name": "\u6765\u65e5\u65b9\u957f",
        "ccfLevel": 4,
        "title": "P2661 \u4fe1\u606f\u4f20\u9012 tarjan"
    },
    {
        "content": "\u8fd9\u91cc\u7ed9\u5927\u5bb6\u4ecb\u7ecd\u4e00\u79cd\u5947\u602a\u7684\u505a\u6cd5\uff0c\u4e3a\u4ec0\u4e48\u5947\u602a\u5462\uff0c\u56e0\u4e3a\u8fd9\u73a9\u610f\u513f\u53c8\u4e0d\u50cf\u5e76\u67e5\u96c6\uff0c\u53c8\u4e0d\u50cf\u62d3\u6251\u5e8f\n\n\uff08~~\u5176\u5b9e\u662f\u6211\u6a21\u62df\u8d5b\u7684\u65f6\u5019\u5148\u60f3\u7684\u62d3\u6251\u5e8f\uff0c\u53c8\u60f3\u7684\u5e76\u67e5\u96c6\uff0c\u7136\u540e\u4e00\u6b65\u6b65\u6539\u6210\u4e86\u73b0\u5728\u8fd9\u4e2a\u6837\u5b50~~\uff09\n\n## \u601d\u8def\n\n\u9996\u5148\uff0c\u6211\u4eec\u901a\u8fc7\u9898\u76ee\uff0c\u53d1\u73b0\u8fd9\u662f\u4e00\u4e2a\u6709\u5411\u975e\u8054\u901a\u56fe\uff0c\u4e14\u6bcf\u4e2a\u70b9**\u6709\u4e14\u4ec5\u6709\u4e00\u6761\u51fa\u8fb9**\u3002\n\n\u5176\u6b21\uff0c\u7b54\u6848\u53ea\u4f1a\u5b58\u5728\u4e8e\u4ee5\u4e0b\u4e24\u79cd\u60c5\u51b5\u4e2d\n\n![QQ\u622a\u56fe20191111170929.png](https://i.loli.net/2019/11/11/pGXxNzWalSDPkBb.png)\n\n**\u56fe\u4e00**\n\n![QQ\u622a\u56fe20191111170909.png](https://i.loli.net/2019/11/11/RexOy1cqWD3pC6b.png)\n\n**\u56fe\u4e8c**\n\n3. \u4e00\u822c\u6211\u4eec\u4f7f\u7528\u62d3\u6251\u5e8f\u65f6\uff0c\u662f\u8981\u4ece\u5165\u5ea6\u4e3a $0$ \u7684\u70b9\u5f00\u59cb\u904d\u5386\uff0c\u4f46\u662f\u663e\u7136\u4e0b\u9762\u8fd9\u5f20\u56fe\u4e0d\u4f1a\u88ab\u904d\u5386\u5230\uff0c\u90a3\u5982\u679c\u4ece\u5165\u5ea6\u4e3a $1$ \u7684\u70b9\u5f00\u59cb\u5462\uff1f\n\n![QQ\u622a\u56fe20191112061134.png](https://i.loli.net/2019/11/12/W8PyhMBwZJnV6dX.png)\n\n4. \u90a3\u4e48\u8fd9\u5f20\u56fe\u4e5f\u663e\u7136\uff0c\u53ea\u6709\u5165\u5ea6\u4e3a $0$ \u548c $2$  \u7684\u70b9\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u5355\u7eaf\u4ece\u4efb\u4f55\u4e00\u79cd\u5165\u5ea6\u4e3a\u67d0\u4e2a\u503c\u7684\u70b9\u5f00\u59cb\u904d\u5386\u662f\u4e0d\u5408\u9002\u7684\u3002\n\n5. \u6240\u4ee5\u6211\u4eec\u8fd8\u662f\u8003\u8651\u6700\u4e0a\u9762\u4e24\u5f20\u57fa\u672c\u7684\u56fe\uff0c\u56fe\u4e00\u5e26\u7740\u4e2a\u201c\u5c0f\u5c3e\u5df4\u201d\uff0c\u4e00\u5b9a\u6709\u5165\u5ea6\u4e3a $0$ \u7684\u70b9\uff1b\u56fe\u4e8c\u672c\u8eab\u662f\u4e00\u4e2a\u5927\u73af\uff0c\u53ea\u6709\u5165\u5ea6\u4e3a $1$ \u7684\u70b9\n6. \u5982\u679c\u4e00\u904d\u4e0d\u884c\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u904d\u5386\u4e24\u904d\u5462\uff1f\u601d\u8def\u4e5f\u5c31\u51fa\u6765\u4e86\u3002\n\n## \u5b9e\u73b0\n\n\u5173\u4e8e\u5b9e\u73b0\uff0c\u6211\u5728\u6a21\u62df\u8d5b\u65f6\u8fd8\u53d1\u73b0\u4e86\u4e24\u4e2a\u5c0f\u95ee\u9898\n\n1. \u5982\u679c\u5bf9\u6bcf\u4e00\u4e2a\u70b9\u5224\u65ad\uff0c\u7136\u540e\u904d\u5386\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u6bd4\u8f83\u9ad8\uff0c\u53ef\u80fd\u4f1a $TLE$\uff0c\u6211\u5728\u6a21\u62df\u7684\u65f6\u5019\u5148\u6253\u4e86\u8fd9\u4e2a\u590d\u6742\u5ea6\u8f83\u9ad8\u7684\u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u6982\u662f $O(n^2)$\uff0c\u8fd9\u6837\u4ea4\u4e0a\u53bb\u662f\u6709\u98ce\u9669\u7684\uff0c\u5b81\u613f\u8981\u4e00\u4e2a\u5e38\u6570\u5927\u4e00\u70b9\u7684 $O(n)$ \u7b97\u6cd5\uff0c\u54b1\u4e5f\u4e0d\u80fd $T$ \u662f\u4e0d\u662f\uff1f\n\n$Sol: $ \u6240\u4ee5\u6211\u4eec\u5728\u4e24\u6b21\u904d\u5386\u524d\uff0c\u5404\u9884\u5904\u7406\u4e00\u4e0b\uff0c\u5904\u7406\u6389\u6ca1\u7528\u7684\u70b9\uff0c\u4e4b\u540e\u5728\u5269\u4e0b\u7684\u70b9\u91cc\u9762\u9009\u8d77\u70b9\u904d\u5386\u5c31\u597d\u4e86\u3002\n\n2. \u591a\u6b21\u8bbf\u95ee\u5230\u540c\u4e00\u4e2a\u70b9\u5bfc\u81f4\u7b54\u6848\u88ab\u4e0d\u6b63\u786e\u5730\u66f4\u65b0\u5982\u4f55\u5904\u7406\n\n$Sol:$ \u6211\u7528\u4e00\u4e2a\u6570\u7ec4\uff0c\u8bb0\u5f55\u4e00\u4e2a\u70b9\u662f\u88ab\u54ea\u6b21\u7684 $DFS$ \u904d\u5386\u7684\uff0c\u53e6\u5916\uff0c\u7531\u4e8e\u6211\u61d2\uff0c\u6211\u6ca1\u6709\u65b0\u5f00\u6570\u7ec4\uff0c\u800c\u662f\u7528\u7684\u5165\u5ea6 $in$ \u6570\u7ec4\uff0c\u53c8\u9632\u6b62\u6df7\u6dc6\uff0c\u6211\u7528\u7684\u8d1f\u6570\uff0c\u4e0b\u9762\u4e3e\u4e2a\u6817\u5b50\n\n![QQ\u622a\u56fe20191112063012.png](https://i.loli.net/2019/11/12/EkvbJmfK1ZFtwDu.png)\n\n\u7b2c\u4e00\u6b65\uff0c\u4ece $1$ \u5f00\u59cb\u904d\u5386\uff0c $1,2,3,4,5,6$ \u7684 $in$ \u6570\u7ec4\u5747\u88ab\u66f4\u65b0\u6210 $-1$\uff0c\u7b2c\u4e8c\u6b21\u4ece $8$ \u5f00\u59cb\uff0c$8,7$ \u88ab\u66f4\u65b0\u4e3a $-2$\uff0c\u8fd9\u65f6\u904d\u5386\u5230 $2$\uff0c\u7ecf\u8fc7\u5224\u65ad\uff0c$in[7]\\not=in[2]$\uff0c\u4e0d\u66f4\u65b0\u7b54\u6848\n\n## Code\n\n\u5404\u53d8\u91cf\u8868\u793a\uff1a\n\n$cnt, tot$ \u8ba1\u6570\u7528\n\n$to$ \u6bcf\u4e2a\u70b9\u6307\u5411\u7684\u8282\u70b9\n\n$vis$ \u5224\u65ad\u662f\u5426\u88ab\u904d\u5386\u8fc7\uff0c\u987a\u4fbf\u8bb0\u5f55\u6df1\u5ea6\n\n$in$ \u521d\u671f\u662f\u6bcf\u4e2a\u70b9\u7684\u5165\u5ea6\uff0c\u540e\u671f\u4e5f\u53d8\u6210\u4e86\u4e00\u4e2a\u5224\u65ad\u6570\u7ec4\n\n$zero$ \u8bb0\u5f55\u5165\u5ea6\u4e3a $0$ \u7684\u70b9\n\n$one$ \u8bb0\u5f55\u5165\u5ea6\u4e3a $1$ \u7684\u70b9\n\n\u4ee3\u7801\u81ea\u8ba4\u4e3a\u53ef\u8bfb\u6027\u8f83\u9ad8\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <cstdlib>\n#include <algorithm>\nusing namespace std;\nconst int N = 200005;\nint cnt, to[N], n, vis[N], ans = 1000000007, in[N], zero[N], one[N];\n\nvoid dfs(int k, int tot)\n{\n\tif(vis[to[k]] && in[to[k]] == tot)\n\t\tans = min(ans, vis[k] + 1 - vis[to[k]]);\n\telse if(vis[to[k]] && in[to[k]] != tot)\n\t\treturn;\n\telse {\n\t\tvis[to[k]] = vis[k] + 1;\n\t\tin[to[k]] = tot;\n\t\tdfs(to[k], tot);\n\t}\n}\n\nint main()\n{\n//\tfreopen(\"message.in\", \"r\", stdin);\n//\tfreopen(\"message.out\", \"w\", stdout);\n\tcin >> n;\n\tfor(int i = 1; i <= n; i++) {\n\t\tcin >> to[i];\n\t\tin[to[i]]++;\n\t}\n\tcnt = 0;\n\tfor(int i = 1; i <= n; i++) {\n\t\tif(in[i] == 0 && vis[i] == 0) {\n\t\t\tzero[++cnt] = i;\n\t\t}\n\t}\n\tint tot = 0;\n\tfor(int i = 1; i <= cnt; i++) {\n\t\tif(vis[zero[i]] == 0) {\n\t\t\tvis[zero[i]] = 1;\n\t\t\tdfs(zero[i], --tot);\n\t\t}\n\t}\n\tcnt = 0;\n\tfor(int i = 1; i <= n; i++) {\n\t\tif(in[i] == 1 && vis[i] == 0) {\n\t\t\tone[++cnt] = i;\n\t\t}\n\t}\n\tfor(int i = 1; i <= cnt; i++) {\n\t\tif(vis[one[i]] == 0) {\n\t\t\tvis[one[i]] = 1;\n\t\t\tin[one[i]] = 1;\n\t\t\tdfs(one[i], 1);\n\t\t}\n\t}\n\tcout << ans << \"\\n\";\n//\tfclose(stdin);\n//\tfclose(stdout);\n\treturn 0;\n}\n```\n\n$EOF$\n\n[\u6211\u7684\u535a\u5ba2\uff01](https://www.cnblogs.com/xuanfly/p/11839495.html)",
        "postTime": 1573513751,
        "uid": 183736,
        "name": "xuanfly",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u540c\u6837\u662f\u4e00\u79cd\u57fa\u4e8e\u65f6\u95f4\u6233\u7684\u505a\u6cd5\uff0c\u4f46\u662f\u548c\u697c\u4e0b\u7684\u6709\u4e00\u4e9b\u4e0d\u540c\n\n\u9996\u5148\uff0c\u7531\u4e8e\u6bcf\u4e2a\u70b9\u51fa\u5ea6\u90fd\u662f1\uff0c\u53ef\u4ee5\u76f4\u63a5\u5f80\u4e0b\u8d70\u800c\u4e0d\u7528dfs\n\n\u7528\u4e00\u79cd\u7c7b\u4f3c\u4e8etarjan\u7684\u601d\u60f3\uff1a\n\n\u4e00\u4e2a\u5b50\u56fe\u662f\u73af\uff0c\u5f53\u4e14\u4ec5\u5f53\u4ece\u67d0\u4e2a\u70b9\u5f00\u59cb\u8d70\uff0c\u8d70\u5230\u7684\u6700\u540e\u4e00\u4e2a\u6ca1\u8d70\u8fc7\u7684\u70b9\u6307\u5411\u7684\u8282\u70b9\u7684\u65f6\u95f4\u6233\uff0c\u5927\u4e8e\u5f00\u59cb\u8d70\u7684\u65f6\u5019\u7684\u65f6\u95f4\u6233\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u6109\u5feb\u7684\u66b4\u529b\u4e86\uff0c\u4e5f\u4e0d\u9700\u8981\u526a\u679d\u548c\u5220\u70b9\u4ec0\u4e48\u7684\n\n\u4ee3\u7801:\n\n```cpp\n//\u7531\u4e8e\u6bcf\u4e2a\u70b9\u51fa\u5ea6\u4e00\u5b9a\u4e3a1\uff0c\u53ef\u4ee5\u66b4\u529b\u627e\u51fa\u6240\u6709\u7684\u73af\n//\u5bf9\u4e8e\u67d0\u4e00\u4e2a\u73af\uff0c\u627e\u5230\u73af\u4e0a\u4efb\u610f\u4e00\u70b9\u7b2c\u4e00\u6b21\u548c\u7b2c\u4e8c\u6b21\u8bbf\u95ee\u7684\u65f6\u95f4\u5dee\u5373\u53ef\n//\u800c\u627e\u65f6\u95f4\u5dee\u53ef\u4ee5\u7528\u65f6\u95f4\u6233\u5b8c\u6210 \u590d\u6742\u5ea6O(n)\n#include <cstdio> \n#include <algorithm>\nusing namespace std;\nconst int MAXN=200000,INF=0x3f3f3f3f;\nint dfs_clock,N,Ans=INF,T[MAXN+10],Clk[MAXN+10];\nint main(){\n    scanf(\"%d\",&N);\n    for(int i=1;i<=N;i++)\n        scanf(\"%d\",&T[i]);\n    for(int i=1,j;i<=N;i++)\n        if(!Clk[i]) {\n            int st=++dfs_clock;\n            for(j=i;!Clk[j];j=T[j])\n                Clk[j]=++dfs_clock;\n            if(Clk[j]>=st) Ans=min(Ans,dfs_clock-Clk[j]+1);\n        }\n    printf(\"%d\",Ans);\n}\n```",
        "postTime": 1503465009,
        "uid": 23865,
        "name": "panda_2134",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u7b2c\u4e00\u6b21\u51fa\u9898\u89e3\u597d\u6fc0\u52a8\\(//\u2207//)\\\n\n\u8fd9\u8fb9\u7684\u8bdd\u89c9\u5f97\u81ea\u5df1\u5199\u7684\u7a0b\u5e8f\u53ef\u8bfb\u6027\u4f1a\u9ad8\u4e00\u70b9\uff0c\u4f1a\u6bd4\u524d\u9762\u7684\u770b\u8d77\u6765\u7b80\u5355\u4e9b\u5427\n\n\u53ef\u4ee5\u628a\u8fd9\u4e2a\u9898\u770b\u6210\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u6bd4\u5982\u8bf4\u6837\u4f8b\u76842 4 2 3 1\u5c31\u662f\u70b91\u8fde\u5230\u70b92\uff0c\u70b92\u8fde\u5230\u70b94......\u4ee5\u6b64\u7c7b\u63a8\uff0c\u6c42\u7684\u662f\u6700\u5c0f\u73af\u8def\u7684\u957f\u5ea6\u3002\n\n\u57fa\u672c\u601d\u60f3\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u8fdb\u884cdfs\u641c\u7d22\u5e76\u4e14\u52a0\u4e0adfs\u65f6\u95f4\u6233\uff0c\u5982\u679c\u5728\u641c\u7d22\u65f6\u627e\u5230\u65f6\u95f4\u6233\u4e0d\u4e3a\u96f6\u7684\u8282\u70b9\u5c31\u662f\u4e4b\u524d\u641c\u5230\u8fc7\uff0c\u5373\u627e\u5230\u73af\u8def\uff0c\u7136\u540e\u8bb0\u5f55\u6700\u5c0f\u73af\u8def\u957f\u5ea6\u3002\u7ed3\u675f\u641c\u7d22\u65f6\u5220\u9664\u65f6\u95f4\u6233\u548c\u7ebf\u6bb5\u8fde\u63a5\u503c\uff08\u9632\u6b62\u91cd\u590d\u641c\u7d22\uff09\u3002\n\n\u4e0a\u4ee3\u7801\n\n'''cpp\n\n\n\n    \n\n\n```cpp\n#include<iostream>\nusing namespace std;\nlong long n,a[200000],gett[200000]={0},ans=0x7f7f7f7f,dfsc=0;\n//dfsc\u662f\u65f6\u95f4\u6233\nvoid dfs(long long k){\n    if(a[k]==0)return;\n    dfsc++;\n    if((dfsc>gett[k])&&gett[k]!=0){\n        //\u8fc7\u7b2c\u4e8c\u4e2a\u70b9\u8981\u52a0dfsc>gett[k]\n        ans=min(ans,dfsc-gett[k]);\n        //cout<<dfsc<<' '<<gett[k]<<' '<<k<<'\\n';\n        a[k]=0;\n        gett[k]=0;\n        return;\n    }\n    gett[k]=dfsc;\n    //cout<<'k'<<' '<<k<<' '<<dfsc<<'\\n';\n    dfs(a[k]);\n   gett[k]=0;\n    a[k]=0;\n}\nint main(){\n    ios::sync_with_stdio(false);\n    cin>>n;\n    for(long long i=1;i<=n;i++)cin>>a[i];\n    for(long long i=1;i<=n;i++)\n    dfs(i);\n    cout<<ans;\n}\n\n```",
        "postTime": 1506168214,
        "uid": 50775,
        "name": "Appleseed",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": " \u770b\u5230\u5f88\u591a\u5927\u4f6c\u5199**\u5e76\u67e5\u96c6** \u7684\u5199\u6cd5\uff0c\u4f46\u5f88\u591a\u5927\u4f6c\u90fd\u5199\u7684\u5f88\u9ebb\u70e6\uff0c\u611f\u89c9\u5e76\u67e5\u96c6\u53ef\u4ee5\u4e0d\u538b\u884c\u5199\u7684\u5f88\u77ed~~\uff08\u849f\u84bb\u592a\u5f31\u4e0d\u6562\u538b\u884c\uff09~~\n \n \u5f88**\u663e\u7136**\uff0c\u5bf9\u4e8e\u6709\u5411\u56fe\uff0c\u5982\u679c\u8003\u8651\u4ece\u6bcf\u4e00\u4e2a\u70b9\u51fa\u53d1\uff0c\u7528DFS\u6c42\u51fa\u5b83\u5230\u81ea\u5df1\u7684\u8ddd\u79bb\uff0c\u5982\u679c\u904d\u5386\u4e86N\u4e2a\u70b9\u4ecd\u672a\u4fbf\u5229\u5230\u81ea\u5df1\uff0c\u5219\u8be5\u70b9\u4e0d\u5728\u73af\u4e2d\u3002\u4f46\u662f\u8fd9\u6837\u505a\u7684\u590d\u6742\u5ea6\u975e\u5e38\u611f\u4eba\u2026\u2026\u5982\u679c\u6ca1\u6709\u5206\u6790\u9519\u7684\u8bdd\u6700\u574f\u5e94\u8be5\u662fO(n^2m)\u3002\n \n \u806a\u660e\u7684\u6211\u4eec\u53c8\u53d1\u73b0\uff0c\u6b64\u9898\u4e24\u4e2a\u5c0f\u7834\u5b69\u4e4b\u95f4\u6ca1\u6709\u6743\u503c\uff0c\u6240\u4ee5\u53ea\u8981\u5199\u4e00\u4e2a\u666e\u901a\u5e76\u67e5\u96c6\u5c31\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n \n \u53ea\u8981\u5148\u6253\u4e00\u6bb5\u5e76\u67e5\u96c6\u6a21\u677f\uff08**\u6ca1\u6709\u8def\u5f84\u538b\u7f29\u4f18\u5316\u7684**\uff09\n ```cpp\ninline int find(int x) //\u6b63\u5e38\u7684\u5e76\u67e5\u96c6\n{\n    if (fa[x]!=x)\n\t  return find(fa[x]);\n    else\n\t  return x;\n}\n```\n\n\u7136\u540e\u5728\u6dfb\u52a0\u4e00\u4e2a\u53d8\u91cfdeep\uff0c\u7528\u6765\u8bb0\u5f55\u6b64\u65f6\u904d\u5386\u4e86\u51e0\u4e2a\u5c0f\u76c6\u53cb\u4e86\n```cpp\ninline int find(int x,int &deep) //\u4e00\u8fb9\u904d\u5386\uff0c\u4e00\u8fb9\u8bb0\u5f55\u6b64\u65f6\u662f\u7b2c\u51e0\u8f6e\n{\n    deep++;//\u8bb0\u5f55\u6df1\u5ea6\uff08\u7b2c\u51e0\u4e2a\u4eba\uff0c\u8003\u8651\u5230\u5e76\u67e5\u96c6\u662f\u68f5\u6811\uff0c\u6240\u4ee5\u53ef\u4ee5\u8bb0\u6210deep\uff09\n    if (fa[x]!=x)\n\t  return find(fa[x],deep);\n    else\n\t  return x;\n}\n```\n\u7136\u540e\u5f00\u59cb\u904d\u5386\uff0c\u8bb0\u5f97\u6bcf\u6b21\u5f00\u59cb\u524d\u5148\u8bb2deep\u7f6e\u96f6\uff08\u7528ans\u6765\u8bb0\u5f55\u5168\u5c40\u6700\u5c0f\u503c\uff09\u5f88\u591a\u5927\u4f6c\u7528\u5e76\u67e5\u96c6\u65f6\u90fd\u5f00\u4e86\u6570\u7ec4\u8bb0\u5f55\u73af\u7684\u957f\u5ea6\uff0c\u5176\u5b9e\u4e0d\u7528\u8fd9\u4e48\u9ebb\u70e6\u3002\n```cpp\nfor (int i=1;i<=n;i++) \n\t{\n        int deep=0,now;\n        cin>>now;//\u5f53\u524d\u8fd9\u4e2a\u5c0f\u76c6\u53cb\u4f20\u9012\u5bf9\u8c61\u662f\u8c01\n        if(find(now,deep)==i)//\u5982\u679c\u53c8\u904d\u5386\u5230\u4ed6\u81ea\u5df1\uff0c\u5c31\u662f\u8bf4\u4ed6\u5728\u8fd9\u4e2a\u73af\u91cc\n          ans=min(ans,deep);//\u8bb0\u5f55\u5f53\u524d\u73af\u7684\u957f\u5ea6\n        else\n          fa[i]=now;\n    }\n```\n \n \u7136\u540e\u5b8c\u7f8e\u7ed3\u675f~~\n \n\u4f46\u5e76\u67e5\u96c6\u6c42\u6700\u5c0f\u73af\u4e0d\u662f\u5f88\u5feb\uff0c\u673a\u623f\u6d4b\u8bd5\u65f610\u4e2a\u70b9\u8dd1\u4e861.3S\uff0c\u540c\u673a\u623f\u7ea2\u540d\u5927\u4f6c\u7528\u62d3\u6251+DFS\u7528\u4e860.37S\uff0c~~\u6211\u592a\u5f31\u4e86~~\uff0c\u4f46\u597d\u5904\u662f\u4ee3\u7801\u77ed\u3002\u3002\u3002\u3002\n\n\n## \u5b8c\u6574\u4ee3\u7801\uff1a\n\n\u524d\u9762\u8bf4\u7684\u5f88\u6e05\u695a\u4e86\uff0c\u6240\u4ee5\u4ee3\u7801\u4e0d\u5e26\u89e3\u91ca\uff01\uff01\uff01\n\n```cpp\n#include <iostream>\n#include <cstdio>\nusing namespace std;\nint n, fa[1000001],ans=121432423;\nint find(int x,int &deep) \n{\n    deep++;\n    if (fa[x]!=x)\n\t  return find(fa[x],deep);\n    else\n\t  return x;\n}\nint main () \n{\n\tfreopen(\"message.in\",\"r\",stdin);\n    freopen(\"message.out\",\"w\",stdout)\uff1b\n    cin>>n;\n    for(int i=1;i<=n;i++);\n      fa[i]=i\uff1b\n    for (int i=1;i<=n;i++) \n\t{\n        int deep=0,now;\n        cin>>now;\n        if(find(now,deep)==i)\n          ans=min(ans,deep);\n        else\n          fa[i]=now;\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n```\n~~\u636e\u8bf4\u6284\u9898\u89e3\u4f1a\u53d8\u68d5~~\n",
        "postTime": 1540785543,
        "uid": 29384,
        "name": "KING__Arthur",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u849f\u84bb\u7684\u6211\u770b\u5230\u7b2c\u4e00\u7bc7\u5347\u7ea7\u4e86\u7684\u5e76\u67e5\u96c6\u7684\u9898\u89e3\uff0c\u624d\u604d\u7136\u5927\u609f\u5e76\u4e0d\u9700\u8981\u8fd9\u4e2a\u89e3\u6cd5\u7684\u540e\u4e00\u534a\uff0c\u4f46\u662f\u8fd8\u662f\u6597\u80c6\u6765\u53d1\u4e2a\u9898\u89e3\u5427\u3002\n\n\n#### \u4e00\u5f00\u59cb\u6211\u4ee5\u4e3a\u8fd9\u4e2a\u56fe\u91cc\u9762\u53ea\u6709\u4e00\u4e2a\u5708\u3002\n\n\u5982\u679c\u662f\u8fd9\u6837\u7684\u8bdd\uff0c\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n1. \u4e0d\u5b58\u5728\u5165\u5ea6\u4e3a0\u7684\u70b9\u3002\u90a3\u4e48\uff0c\u6574\u4e2a\u56fe\u6784\u6210\u4e00\u4e2a\u5708\uff0c\u76f4\u63a5\u8f93\u51fan\n\n1. \u5b58\u5728\u5165\u5ea6\u4e3a0\u7684\u70b9\u3002\u90a3\u4e48\uff0c\u4e0d\u59a8\u76f4\u63a5\u4ece\u5b83\u5f00\u59cb\u8d70\uff0c\u5b83\u5fc5\u5b9a\u4f1a\u8d70\u5230\u4e00\u4e2a\u5708\u91cc\u3002\u8d70\u7684\u65f6\u5019\uff0c\u8bb0\u5f55\u8ddd\u79bb\uff1b\u5f53\u8d70\u5230\u66fe\u7ecf\u8d70\u8fc7\u7684\u70b9\uff0c\u8f93\u51fa\u8ddd\u79bb\n\n\u65e0\u6bd4\u632f\u594b\u7684\u6211\u5bf9\u81ea\u5df1\u8bf4\uff0c\u201c\u4e00\u5b9a\u4f1a\u8fc7\u7684\u3002\u201d\n\n\u6211\u4e0d\u8bb0\u5f97\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u6211\u53ea\u8bb0\u5f97\uff0c\u90a3\u4e2a\u65f6\u5019\uff0c\u7ea2\u8272\u548c\u7eff\u8272\u4ea4\u9519\u5728\u5c4f\u5e55\u4e0a\uff0c\u6b63\u5982\u8ff7\u60d8\u548c\u60c6\u6005\u4ea4\u9519\u5728\u6211\u7684\u5fc3\u4e0a\u3002\n\n#### \u540e\u6765\u6211\u60f3\u4e86\u60f3\uff0c\u8fd9\u6709\u95ee\u9898\uff0c\u56e0\u4e3a\u8fd9\u4e0d\u4e00\u5b9a\u662f\u4e2a\u8fde\u901a\u56fe\u3002\n\n\u5f53\u8fd9\u4e48\u60f3\u7684\u65f6\u5019\uff0c\u81ea\u7136\u5730\u5c31\u4f1a\u8003\u8651\u5230\u7528\u6765\u5904\u7406\u5c0f\u96c6\u56e2\u8fde\u901a\u7684\u5e76\u67e5\u96c6\u3002\n\n\u6240\u4ee5\u4fee\u6539\u4e86\u7684\u7b97\u6cd5\u5982\u4e0b\uff1a\n\n\u6bcf\u6b21\u4e24\u4e2a\u4eba\u76f8\u8fde\uff0c\u5c31\u628a\u4ed6\u4eec\u62c9\u5230\u4e00\u4e2a\u5e76\u67e5\u96c6\u91cc\u5934\u53bb\u3002\n\n1. \u5982\u679c\u4ed6\u4eec\u4e4b\u524d\u5e76\u4e0d\u5728\u540c\u4e00\u4e2a\u5e76\u67e5\u96c6\u91cc\u5934\uff0c\u90a3\u5c31\u6ca1\u4ec0\u4e48\u4e8b \n\n2. \u5982\u679c\u4ed6\u4eec\u4e4b\u524d\u6070\u597d\u5df2\u7ecf\u5728\u540c\u4e00\u4e2a\u5e76\u67e5\u96c6\u91cc\u5934\u4e86\uff0c\u90a3\u4ed6\u4eec\u663e\u7136\u5728\u4e00\u4e2a\u5708\u91cc\u3002\u8fd9\u65f6\u5019\uff0c \u628a\u5176\u4e2d\u4e00\u4e2a\u52a0\u5165\u961f\u5217\uff0c\u7a0d\u540e\u8fdb\u884c\u6a21\u62df\n\n\u6a21\u62df\u5176\u5b9e\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u3002\u5c31\u662f\u8d70\u561b\u3002\n\n\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<queue>\n#define MAXN 200000+10\nusing namespace std;\nint par[MAXN];\nint to[MAXN]; //\u8fd9\u4e2a\u70b9\u6307\u5411\u54ea\u91cc \nint in[MAXN]; //\u4e00\u4e2a\u70b9\u7684\u5165\u5ea6 \n\nint root(int x){\n\tif (par[x]==x) return x;\n\treturn par[x]=root(par[x]);\n}\n\nvoid join(int x, int y){\n\tpar[root(y)]=root(x);\n}\n\nbool judge(int x, int y){\n\treturn root(x)==root(y);\n}\n\nint main(){\n\t//freopen(\"2661.in\", \"r\", stdin);\n\tint n;\n\tcin>>n;\n\tint best=MAXN;\n\tqueue<int> q;\n\tmemset(in, 0, sizeof(in));\n\tfor (int i=1; i<=n; i++) par[i]=i;\n\n\tfor (int i=1; i<=n; i++) {\n\t\tcin>>to[i];\n\t\tin[to[i]]++;\n\t\tif (judge(i, to[i])) q.push(i);\n\t\tjoin(i, to[i]);\n\t}\n\t\n\tint v;\n\tint ans=n;\n\twhile (!q.empty()){\n\t\tv=q.front();\n\t\tq.pop();\n\t\tint u=v;\n\t\t\n\t\tint cnt=0;\n\t\twhile (1){\n\n\t\t\tv=to[v];\n\t\t\tcnt++;\n\t\t\tif (cnt>=ans) break;\n\t\t\tif (v==u){\n\t\t\t\tans=min(cnt, ans);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t}\n\tcout<<ans<<endl;\n\t\n} \n```\n\n\u663e\u793a\u5c4f\u53d1\u51fa\u6ecb\u6ecb\u58f0\uff0c\u673a\u7bb1\u7684\u98ce\u6247\u54cd\u7740\u3002\u6211\u75b2\u60eb\u5730\u770b\u7740\u7ec8\u4e8e\u7eff\u4e86\u7684\u5c4f\u5e55\uff0c\u968f\u624b\u70b9\u5f00\u9898\u89e3\u3002\n\n\u201c\u6211\u600e\u4e48\u60f3\u4e0d\u5230\u5462\uff1f\u201d\n\n\u6ca1\u6709\u4eba\u56de\u7b54\u6211\u3002\u53ea\u6709\u51cc\u4e71\u7684\u8349\u7a3f\u548c\u5c4f\u5e55\u53f3\u4e0b\u89d2\u4e0d\u53cb\u597d\u7684\u5f88\u8fdf\u4e86\u7684\u65f6\u95f4\uff0c\u65e0\u8a00\u5730\u671b\u7740\u6211\u3002",
        "postTime": 1525621730,
        "uid": 81690,
        "name": "EricWay1024",
        "ccfLevel": 6,
        "title": "\u666e\u901a\u5e76\u67e5\u96c6+\u6a21\u62df"
    },
    {
        "content": "\u6ca1\u6709\u5e76\u67e5\u96c6  \u6ca1\u6709DFS\uff08\u5176\u5b9e\u662f\u7528\u5faa\u73af\u4f18\u5316\u4e86\uff09 \u6ca1\u6709\u7384\u5b66\n\n\u601d\u8def\u662f\u628a\u56fe\u4e0d\u505c\u5730\u7b80\u5316\uff0c\u4ece\u539f\u6765\u7684\u5404\u79cd\u73af\u5957\u6811\u5220\u6210\u53ea\u5269\u5404\u79cd\u73af\uff08\u5177\u4f53\u5c31\u662f\u628a\u5165\u5ea6\u4e3a0\u7684\u70b9\u5220\u6389\uff0c\u56e0\u4e3a\u4ed6\u4eec\u597d\u50cf\u6ca1\u7528\uff09\n\n\u6700\u540e\u7edf\u8ba1\u4e00\u4e0b\u73af\u7684\u957f\u5ea6\u5c31\u884c\u4e86\n\n\u8fd9\u5947\u8469\u7b97\u6cd532ms \u597d\u50cf\u8dd1\u7684\u633a\u5feb\u7684\u5475\n\n\u6211\u7684for\u5faa\u73af\u633a\u590d\u6742\u7684\uff0c\u4f46\u662f\u4e0b\u9762\u7684\u6ce8\u91ca\u6309\u987a\u5e8f\u89e3\u91ca\u4e86\u6bcf\u4e2a\u8bed\u53e5\uff0c\u4ed4\u7ec6\u63a8\u6572\u4e00\u4e0b\u8fd8\u662f\u633a\u7b80\u5355\u7684\n\n\n\n\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <iostream>\n#include <string.h>\n#include <math.h>\nusing namespace std;\nstruct node{\n    int T,n;//T\u8bb0\u7684\u662fi\u7684\u513f\u5b50\uff0cn\u8bb0\u7684\u662fi\u7684\u5165\u5ea6 \n}a[200005];\nint n;\nbool s[200005];//\u8bb0\u5f55\u662f\u5426\u8fd8\u5b58\u5728 \nint main(){\n    int i,ans;\n    cin>>n;  ans=n;\n    for(i=1;i<=n;i++)  a[i].n=0;\n    for(i=1;i<=n;i++){\n        scanf(\"%d\",&a[i].T);\n        a[ a[i].T ].n++;//i\u7684\u513f\u5b50\u7684\u5165\u5ea6+1 \n        s[i]=1;\n    }\n    int j,fa;\n    for(i=1;i<=n;i++)//\u8fd9\u91cc\u662f\u5c06\u6240\u6709\u5165\u5ea6\u4e3a0\u7684\u70b9\u5220\u53bb\uff0c\u53ea\u7559\u4e0b\u8bb8\u8bb8\u591a\u591a\u7684\u73af \n        if(s[i]==1&&a[i].n==0)//\u5982\u679c\u8fd8\u5b58\u5728\u5e76\u4e14\u5165\u5ea6\u4e3a0 \n            for(fa=i;a[fa].n==0&&s[fa]==1;s[fa]=0,a[a[fa].T].n--,fa=a[fa].T);\n    //fa\u8bb0\u7684\u662f\u5f53\u524d\u7684\u679a\u4e3e\uff1b\u5982\u679cfa\u5b58\u5728\u5e76\u4e14\u5165\u5ea6\u4e3a\u4e00\uff1b\u6807\u8bb0fa\u5220\u9664\uff0cfa\u7684\u513f\u5b50\u7684\u5165\u5ea6-1\uff0cfa\u66ff\u6362\u4e3a\u4ed6\u7684\u513f\u5b50 \n    for(i=1;i<=n;i++)\n        if(s[i]){//\u5982\u679c\u8fd8\u672a\u679a\u4e3e \uff08\u672a\u88ab\u5220\u9664\uff09 \n            for(s[i]=0,fa=a[i].T,j=1;fa!=i;s[fa]=0,fa=a[fa].T,j++);\n    //\u6807\u8bb0i\u5df2\u679a\u4e3e\uff0c\u7528fa\u66ff\u6362\uff0cj\u8bb0\u73af\u7684\u957f\u5ea6\uff1bfa\u8fd8\u672a\u56de\u5230i\uff1b\u6807\u8bb0fa\u5df2\u679a\u4e3e\uff0cfa\u66ff\u6362\u4e3a\u4ed6\u7684\u513f\u5b50\uff0c\u957f\u5ea6++ \n            ans=min(ans,j);//\u66f4\u65b0\u7b54\u6848 \n        }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1510154379,
        "uid": 26584,
        "name": "\u795e\u517dalpaca",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u4e0b\u9762\u90a3\u4e9b\u62d3\u6251\u6392\u5e8f\u554a\u5e76\u67e5\u96c6\u554a\u751a\u81f3\u8fd8\u6709\u7528tarjan\u7684\n\n\u90fd\u662fdalao\u554a\u3002\u3002\u819c\u4e00\u4e0b\n\n\u6211\u7684\u601d\u8def\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u5148\u53d6\u4e00\u4e2a\u70b9\u8fdb\u884cdfs\uff08\u5176\u5b9e\u4e0d\u5e94\u8be5\u53ebdfs\u56e0\u4e3a\u51fa\u5ea6\u53ea\u67091\uff09\n\ndfs\u65f6\u4f1a\u7ed9\u904d\u5386\u7684\u8282\u70b9\u52a0\u4e0a\u4e00\u4e2amark\uff0c\u8868\u793a\u7b2c\u51e0\u6b21dfs\uff08\u56e0\u4e3a\u56fe\u4e0d\u662f\u8054\u901a\u7684\uff0c\u6240\u4ee5\u8981dfs\u591a\u6b21\uff09\n\n\u7136\u540e\u7ed3\u675f\u540e\u518d\u904d\u5386\u6ca1mark\u8fc7\u7684\u8282\u70b9\u8fdb\u884cdfs\u53cd\u590d\u5c31\u53ef\u4ee5\u904d\u5386\u6240\u6709\u8282\u70b9\n\n**DFS\u90e8\u5206**\n\n\u8fd9\u91cc\u6211\u5c31\u5728dfs\u65f6\u7ed9\u5404\u4e2a\u8282\u70b9\u52a0\u4e86\u4e00\u4e2adfs\u6b21\u5e8f\n\n\u5f53\u9047\u5230\u4e0d\u662f\u672c\u6b21\u641c\u7d22\u7684\u8282\u70b9\u5c31\u8df3\u51fa\uff08\u56e0\u4e3a\u4e0e\u90a3\u4e2a\u8282\u70b9\u76f8\u8fde\u901a\u7684\u90e8\u5206\u5df2\u7ecfdfs\u8fc7\u4e86\uff09\n\n\u5f53\u9047\u5230\u672c\u6b21\u641c\u7d22\u8fc7\u7684\u8282\u70b9\u65f6\uff08\u5373mark[p]==now\uff09\u5c31\u7528\u6b64\u65f6\u7684\u6b21\u5e8f\u51cf\u8be5\u8282\u70b9\u7684\u6b21\u5e8f\u5f97\u5230\u73af\u957f\u5ea6\uff0c\u548cans\u76f8\u6bd4\u8f83\u5373\u53ef\n\n\u4e0b\u9762\u662f\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define MAXN 200010\n#define INF 0xf66ccff\nusing namespace std;\nint n,t[MAXN],dfn[MAXN],mark[MAXN],ans=INF,now=1;\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)scanf(\"%d\",&t[i]);\n    for(int i=1;i<=n;i++)\n        if(!mark[i])\n        {\n//            printf(\"Start Searching In %d!\\n\",i);\n            int p=i,s=0;\n            while(1)\n            {\n//                printf(\"Step %d : %d  \",s,p);\n                if(mark[p]==now)\n                {\n//                    printf(\"Find Circle ! mark[p]=%d equate to now=%d\\ndfn[p]=%d,Length=%d\",mark[p],now,dfn[p],s-dfn[p]);\n                    if(ans>s-dfn[p])ans=s-dfn[p];\n                    break;\n                }\n                else if(mark[p]>0&&mark[p]!=now)break;\n                else\n                {\n                    mark[p]=now;dfn[p]=s;\n                    s++;\n                    p=t[p];\n//                    cout << endl;\n                }\n                \n            }\n            now++;\n        }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1509453467,
        "uid": 24779,
        "name": "Mother_Dry",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u6211\u4eec\u77e5\u9053\uff0c\u5e76\u67e5\u96c6\u53ef\u4ee5\u7ef4\u62a4\u8fde\u901a\u6027\u3001\u4f20\u9012\u6027\uff0c\u5176\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u5e94\u7528\u5c31\u662f\u5224\u73af\u3002\uff08\u5982\u679c\u4f60\u4e0d\u77e5\u9053\u8fd9\u4e2a\u4e1c\u897f\uff0c\u8bc1\u660e\u4f60\u5e76\u6ca1\u6709\u5b8c\u5168\u7406\u89e3\u5e76\u67e5\u96c6\uff0c\u8bf7\u81ea\u884c\u8865\u4e60\uff09\u3002\u90a3\u4e48\u6211\u4eec\u5206\u6790\u4e00\u4e0b\u672c\u9898\uff1a\u6839\u636e\u9898\u610f\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6574\u4e2a\u4fe1\u606f\u4f20\u9012\u8fc7\u7a0b\u89c6\u4e3a\u4e00\u5f20\u56fe\uff0c\u56fe\u4e2d\u7684\u73af\u8bc1\u660e\u6709\u4fe1\u606f\u4f20\u9012\u56de\u4e86\u672c\u4eba\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53d1\u73b0\uff0c\u56fe\u4e2d\u6700\u5c0f\u73af\u7684\u957f\u5ea6\u5c31\u662f\u8fd9\u4e2a\u6e38\u620f\u80fd\u8fdb\u884c\u7684\u65f6\u95f4\u3002\n\n\u90a3\u4e48\u6211\u4eec\u600e\u4e48\u7528\u5e76\u67e5\u96c6\u6c42\u6700\u5c0f\u73af\u5462\uff1f\u56e0\u4e3a\u6211\u4eec\u8981\u8bb0\u5f55\u73af\u7684\u957f\u5ea6\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5728\u9012\u5f52\u8fdb\u884cfind()\u64cd\u4f5c\u7684\u65f6\u5019\u987a\u4fbf\u628a\u8fd9\u4e2a\u70b9\u5230\u5b83\u7684\u7956\u5148\u7684\u8def\u5f84\u957f\u8bb0\u5f55\u4e0b\u6765\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u5728\u8fdb\u884c\u5224\u65ad\u7684\u65f6\u5019\uff0c\u5982\u679c\u4e24\u4e2a\u70b9\u4e0d\u5728\u540c\u4e00\u4e2a\u73af\u4e0a\uff0c\u90a3\u4e48\u5c31\u8fde\u4e0a\u8fd9\u4e24\u4e2a\u70b9\uff0c\u5e76\u66f4\u65b0\u5b50\u8282\u70b9\u5230\u5176\u7956\u5148\u7684\u8def\u5f84\u957f\u3002\u5982\u679c\u5728\u4e00\u4e2a\u73af\u4e0a\u7684\u8bdd\uff0c\u5c31\u6301\u7eed\u66f4\u65b0\u73af\u7684\u6700\u5c0f\u957f\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u6027\u8d28\uff1a\u73af\u957f\u7b49\u4e8e\u4e24\u4e2a\u70b9\u5404\u81ea\u5230\u516c\u5171\u7956\u5148\u7684\u957f\u5ea6\u52a01.\u8fd9\u4e2a1\u662f\u600e\u4e48\u6765\u7684\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u753b\u56fe\u6a21\u62df\u4e00\u4e0b\uff1a\u4e00\u4e2a\u73af\u7684\u957f\u5ea6\uff0c\u5982\u679c\u53ea\u7edf\u8ba1\u73af\u4e0a\u4e24\u4e2a\u70b9\u5230\u516c\u5171\u7956\u5148\u7684\u957f\u5ea6\u7684\u8bdd\uff0c\u4f1a\u5bfc\u81f4\u5c11\u52a0\u4e00\u4e2a1.\u6211\u4eec\u5728\u8ba1\u7b97\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u628a\u8fd9\u4e2a1\u8865\u56de\u6765\u3002\n\n\u7efc\u4e0a\uff0c\u8fd9\u9053\u9898\u5c31\u53ef\u4ee5AC\u4e86\uff0c\u7801\u957f\u4e0d\u662f\u5f88\u957f\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint n,ans=1e9;\nint fa[200001],dist[200001];\nint find(int x)\n{\n    if(fa[x]!=x)\n    {\n        int last=fa[x];\n        fa[x]=find(fa[x]);\n        dist[x]+=dist[last];\n    }\n    return fa[x];\n}\nvoid unionn(int x,int y)\n{\n    int fx=find(x);\n    int fy=find(y);\n    if(fx!=fy)\n    {\n        fa[fx]=fy;\n        dist[x]=dist[y]+1;\n    }\n    else\n        ans=min(ans,dist[x]+dist[y]+1);\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n        fa[i]=i;\n    for(int i=1;i<=n;i++)\n    {\n        int to;\n        scanf(\"%d\",&to);\n        unionn(i,to);\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n",
        "postTime": 1568722386,
        "uid": 175131,
        "name": "\u5085\u601d\u7ef4666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "# P2661 \u4fe1\u606f\u4f20\u9012 \u9898\u89e3 \n### ~~\u8fd9\u91cc\u9898\u89e3\u600e\u4e48\u90a3\u4e48\u591a...~~\n\n\u5f88\u591aDalao\u90fd\u8bf4\u4e86\u662f\u6c42\u6700\u5c0f\u73af\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u5e76\u67e5\u96c6\u548c\u62d3\u6251\u6392\u5e8f\uff0c\u8fd9\u91cc\u4e0d\u591a\u8bf4\uff0c\u4f46\u5982\u679c\u4e00\u65f6\u95f4\u8111\u5b50\u77ed\u8def\u53c8\u60f3\u5230\u62ff\u5230\u5206\u600e\u4e48\u529e\uff1f\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4e2a\u66b4\u529b\uff0c**\u66b4\u529b\u51fa\u5947\u8ff9\uff01**\n\n**\u66b4\u529b\u8fc7\u7a0b**\n------------\n\n### Step1\uff1a30\u5206\n\u5176\u5b9e\u66b4\u529b\u7684\u601d\u8def\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u7528\u4e09\u4e2amap\u5c31\u53ef\u4ee5\u89e3\u51b3\uff0c\u5f53\u7136\u4f60\u53ef\u4ee5\u7528set\uff0c~~\u4e0d\u8fc7\u6211\u4e0d\u4f1a\uff08\u4e0d\u7136\u5e72\u561b\u6765\u6253\u66b4\u529b\uff09~~ \n\n```cpp\n  map< int,bool > p[SIZE];\n  map< int,vector<int> > a;\n  map< int,vector<int> > spread;\n  //p\u6570\u7ec4\u7528\u4e8e\u5224\u91cd\uff08\u7528set\u96c6\u5408\u5c31\u4e0d\u5fc5\u4e86\uff09\n  //a\u6570\u7ec4\u50a8\u5b58\u6570\u636e\n  //spread\u6570\u7ec4\u8868\u793a\u5ef6\u8fdf\u6807\u8bb0\uff0c\u5168\u90e8\u4f20\u9012\u5b8c\u540e\u66f4\u65b0\u96c6\u5408\u5143\u7d20\n```\n\u5176\u5b9e\u5177\u4f53\u5b9e\u73b0\u8fd8\u662f\u5f88\u7b80\u5355\u7684\uff0c\u4e0b\u9762\u7ed9**\u5173\u952e\u4ee3\u7801**\uff1a\n\n```cpp\n  map< int,bool > p[SIZE];\n  map< int,vector<int> > a;\n  map< int,vector<int> > spread;\n  int n,t[SIZE];  \n  for(int i=1;i<=n;i++) {\n      scanf(\"%d\",t+i);\n      a[i].push_back(i);\n      //\u521d\u59cb\u5316\n      p[i][i]=true;\t\n  }\n  bool flag=false;\n  int k=0;\n  while(++k) {\n    for(int i=1;i<=n && !flag;i++) {\n      int s=a[i].size();\n      for(int j=0;j<s;j++) {\n        int x=a[i][j];\n        if(t[i]==x) {flag=true;break;}\n        if(p[t[i]][x]==false) {\n          spread[t[i]].push_back(x);\n          //\u6253\u4e0a\u5ef6\u8fdf\u6807\u8bb0\uff0c\u7b49\u4f1a\u66f4\u65b0\n          p[t[i]][x]=true;\n          //\u5224\u91cd\n        }\t \t\t\n      }\n    }\t\n    //\u66f4\u65b0\u96c6\u5408\u5143\u7d20\n    for(int i=1;i<=n;i++) {\n      int s=spread[i].size();\n        if(s) {\n          for(int j=0;j<s;j++) {\n            int x=spread[i][j];\n            a[i].push_back(x);\n           }\n            spread[i].clear();\n            //\u6e05\u7a7a\u6807\u8bb0\n          }\n      }\n      if(flag) break;\n  }\n```\n~~\u66b4\u529b\u8fd8\u662f\u4e0d\u9519\u7684\uff08\u8d77\u7801\u4e0d\u4f1a\u8fd8\u80fd\u62ff30~40\u5206\uff09~~\n\n($PS:$\u4e0a\u8ff0\u601d\u8def\u7528set\u5e94\u8be5\u53ef\u4ee5\u8fc740\u5206\u7684\u6570\u636e)\n\n**\u7136\u800c\u6211\u53d1\u73b0\u8fd9\u6837\u5199\u7684\u66b4\u529b\u592a\u9ebb\u70e6\u4e86**\uff0c\u4ee5\u81f3\u4e8e\u590d\u6742\u5ea6\u592a\u9ad8\uff0c\u6211\u4eec\u53ef\u4ee5\u6362\u4e2a\u65b9\u5f0f\u5199\uff0c\u7701\u53bbmap\uff1a\n\n### Step 2\uff1a80\u5206\n\n**\u6211\u4eec\u53ea\u9700\u8981\u4e00\u76f4\u5faa\u73af\u627e\u73af\u5c31\u597d\u4e86\uff0c\u800c\u4e0d\u662f\u4e00\u76f4\u66f4\u65b0\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u518d\u4e00\u4e2a\u4e00\u4e2a\u590d\u5236\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u6ca1\u6709\u5fc5\u8981\u8bb0\u5f55\u96c6\u5408\u4e2d\u7684\u5143\u7d20**\uff1a\n\n```cpp\n  #include<cstdio>\n  #define SIZE 200002\n  using namespace std;\n  int n,t[SIZE],f[SIZE];\n  int main() {\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++) {\n      scanf(\"%d\",t+i);\n      f[i]=t[i];\n    }\n    bool flag=true;\n    int k=1;\n    while(flag) {\n      ++k;\n      for(int i=1;i<=n && !flag;i++) {\n        f[i]=t[f[i]];\n        //\u5faa\u73af\u66f4\u65b0\u73af\n        if(f[i]==i) {\n          flag=false;\n          break;\n      \t}\n      }\t\n    }\n    printf(\"%d\",k);\n    return 0;\n  }\n```\n**\u8fd9\u6837\u5c31\u53ef\u4ee5\u8dd1\u8fc780\u5206\u4e86\uff01** \u53ef\u89c1\u6211\u4eec\u4e0a\u9762\u90a3\u79cd\u505a\u6cd5\u5728\u6570\u636e\u5904\u7406\u4e0a\u6d6a\u8d39\u4e86\u592a\u591a\u65f6\u95f4\u3002\u90a3\u4e48\u8fd9\u4e2a80\u5206\u8fd8\u6709\u6ca1\u6709\u53ef\u4ee5\u4f18\u5316\u7684\u5730\u65b9\u5462\uff1f\u7b54\u6848\u662f\u80af\u5b9a\u7684\uff01\n\n### Step 3\uff1aAC\n\n\u6211\u4eec\u89c2\u5bdf\u4e0a\u9762\u7684\u7a0b\u5e8f(\u6ca1\u60f3\u5230\u90a3\u4e48\u66b4\u529b\u62ff\u4e8680\u5206)\uff0c**\u6211\u4eec\u4f1a\u5bf9\u4e00\u4e2a\u626b\u63cf\u8fc7\u7684\u91cd\u590d\u626b\u63cf**\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5**\u5bf9\u6bcf\u4e2a\u8282\u70b9\u8fdb\u884c\u7f16\u53f7**\uff0c**\u5373\u5bf9\u6bcf\u6b21\u5faa\u73af\u8fdb\u884c\u5355\u72ec\u7684\u5904\u7406**\uff0c\u8fd9\u4e2a\u4f18\u5316\u6548\u7387\u8fd8\u662f\u4e0d\u9519\u7684\u3002\n\n```cpp\n  #include<cstdio>\n  #define SIZE 200002\n  using namespace std;\n  int t[SIZE],f[SIZE];\n  int n,ans=0x3f3f3f3f;\n  int main() {\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++) {\n    scanf(\"%d\",t+i);\n    }\n    bool flag=true;\n    int len=1;\n    for(int i=1;i<=n;i++) {\n      int now=i,fir=len;\n      flag=!f[now];\n      while(!f[now]) {\n        f[now]=len++;\n        now=t[now];\n      }\n      //\u5982\u679cflag\u4e3a\u771f\uff0c\u8bf4\u660e\u672c\u6b21\u5faa\u73af\u7684\u7f16\u53f7\u7531\u672c\u6b21\u5faa\u73af\u4ea7\u751f\uff0c\u4e0d\u4f1a\u91cd\u590d\u8ba1\u7b97\n      //\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u6839\u636ef\u6570\u7ec4\u662f\u5426\u5927\u4e8e\u539f\u6765\u7684\u957f\u5ea6\u6765\u5224\u65ad\u6700\u5c0f\u73af\u957f\u5ea6\n      //\u5982\u679cf[now]>=fir \u8bf4\u660e\u5f53\u524d\u73af\u8def\u66f4\u5c0f\uff0c\u6700\u5c0f\u73af\u957f\u5ea6=len-f[now] \n      #define Min(a,b) a<b?a:b\n      if(flag && f[now]>=fir) \n        ans=Min(ans,len-f[now]);\n    }\n    printf(\"%d\",ans);\n    return 0;\n  }\n```\n~~\u7adf\u7136\u8dd1\u7684\u6bd4\u6b63\u89e3\u5feb\u70b9(???)~~\n\n**\u52a0\u5165\u8fd9\u4e2a\u4f18\u5316\u5c31\u53efAC\u672c\u9898\u4e86\u3002**\n\n$PS:$\u5982\u679c\u5bf9\u4e0a\u9762\u4f18\u5316\u4e0d\u7406\u89e3\u7684\u81ea\u5df1\u591a\u8dd1\u51e0\u904d\u7a0b\u5e8f\uff0c\u591a\u601d\u8003\u4e00\u4e0b\u3002(\u5f53\u7136\uff0c\u5982\u679c\u5b9e\u5728\u4e0d\u61c2\u53ef\u4ee5\u770b\u4e0b\u9762\u6b63\u89e3)\n\n\n**\u6b63\u89e3**\n------------\n\n~~\u5f53\u7136\u6b63\u89e3\u8fd8\u662f\u8981\u6709\u7684\u3002~~\n\n\u6b63\u89e3\u601d\u8def\uff1a\u6700\u5c0f\u73af\u95ee\u9898\uff0c\u53ef\u4ee5\u901a\u8fc7\u5e76\u67e5\u96c6\u6216\u662f\u62d3\u6251\u6392\u5e8f\u5b9e\u73b0\uff08~~\u5176\u4ed6\u7b97\u6cd5\u6211\u90fd\u4e0d\u4f1a orz\u2026\u2026~~\uff09\n\n\u8fd9\u9898\u8fd8\u662f\u5f88\u597d\u7684\u5e76\u67e5\u96c6\u6c42\u6700\u5c0f\u73af\u7684\u677f\u5b50\uff1b\n\n- \u672c\u9898\u6240\u8c13\u7684\u4fe1\u606f\u4f20\u9012\uff0c\u5b9e\u9645\u4e0a\u6bcf\u6b21\u4f20\u9012\u5c31\u76f8\u5f53\u4e8e\u5728\u6709\u5411\u56fe\u4e2d\u8fde\u4e00\u6761\u8fb9\uff0c\u5728\u5e76\u67e5\u96c6\u4e2d\u8bb0\u5f55\u7236\u8282\u70b9\uff0c\u7531\u4e8e\u5e76\u67e5\u96c6\u5e26\u6743\uff0c\u6211\u4eec\u5f00\u4e00\u4e2a\u6570\u7ec4 $d$ \u8bb0\u5f55\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\n\n- \u800c\u5f53\u67d0\u4e2a\u8282\u70b9\u5f97\u77e5\u81ea\u5df1\u7684\u4fe1\u606f\u65f6\uff0c\u8bf4\u660e\u5728\u6709\u5411\u56fe\u4e2d\u6784\u6210\u4e86\u4e00\u4e2a\u73af\u3002\u800c\u9898\u76ee\u4fbf\u662f\u8981\u6c42\u6211\u4eec\u6c42\u4e00\u4e2a\u6700\u5c0f\u73af\u4e86\u3002\n\n- \u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u628a $(i,t[i])$\u5f53\u4f5c\u8fb9\u52a0\u5165\u5e76\u67e5\u96c6\u5373\u53ef($t[i]$\u4e3a\u7b2c$i$\u4e2a\u4eba\u7684\u4f20\u9012\u5bf9\u8c61)\n\n\u597d\u4e86\u8bdd\u4e0d\u591a\u8bf4\uff0c\u8d34\u4ee3\u7801\uff1a\n\n```cpp\n  #include<cstdio>\n  #define SIZE 200002\n  using namespace std;\n  int f[SIZE],d[SIZE];\n  //f\u6570\u7ec4\u4e3a\u7236\u4eb2\u8282\u70b9\n  //d[i] \u4e3a i \u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb \n  int ans=0x3f3f3f3f;\n  int n;\n  int get(int x) {\n    if(f[x]!=x) {\n      int last=f[x];\n      f[x]=get(f[x]);\n      d[x]+=d[last];\n      //\u628a\u4e4b\u524d\u8282\u70b9\u5230\u7236\u8282\u70b9\u7684\u8ddd\u79bb\u4f20\u9012\u4e0b\u6765 \n    }\n    return f[x];\n  }\n  void find(int x,int y) {\n    #define Min(a,b) a<b?a:b\n    int m=get(x),n=get(y);\n    if(m!=n) \n      f[m]=n,d[x]=d[y]+1;\n      //\u8fde\u63a5\u4e00\u6761\u8fb9 \n      //x \u5230 y \u7684\u8ddd\u79bb\u662f y\u5230\u5176\u6839\u8282\u70b9\u7684\u8ddd\u79bb+1 \n      //\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014 \n    else \n      ans=Min(ans,d[x]+d[y]+1);\n      //\u8bb0\u5f55\u6700\u5c0f\u503c \n      //\u6839\u8282\u70b9\u6307\u5411\u4e86\u5b50\u8282\u70b9\uff0c\u6784\u6210\u73af\n      //\u4e3a\u4e86\u9632\u6b62\u9519\u9009\u6839\u8282\u70b9\uff0c\u628ad[x]\u548cd[y]\u7684\u503c\u90fd\u52a0\uff0c\u6700\u540e\u8bb0\u5f97\u52a01 \n    return;\n  }\n  int main() {\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++) f[i]=i;\n    for(int i=1;i<=n;i++) {\n      int a;scanf(\"%d\",&a);\n      find(i,a);\n    }\n    printf(\"%d\",ans);\n    return 0;\n  }\n```\n\n$END$ & \u6d4b\u8bd5\u60c5\u51b5\n------------\n\n[30\u5206](https://www.luogu.org/recordnew/show/19470697)\n\n[80\u5206](https://www.luogu.org/recordnew/show/19520294)\n\n[\u66b4\u529bAC](https://www.luogu.org/recordnew/show/19520467)\n\n[\u6b63\u89e3AC](https://www.luogu.org/recordnew/show/19519298)\n\n\n\u770b\u6211\u8fd9\u4e48\u8f9b\u82e6\u5199\u9898\u89e3\u7684\u4efd\u4e0a\u70b9\u4e2a\u8d5e\u5457 Orz\n------------\n",
        "postTime": 1559321128,
        "uid": 196649,
        "name": "xiejinhao",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u65e5\u5e38\u5de5\u4f5c\uff0c\u4eca\u5929\u8981\u4ea4\u8fd9\u6700\u540e\u4e00\u7bc7\u9898\u89e3\u4e86\uff0c\u4e00\u9053\u9ec4\u9898\u3002\u4e3e\u8d77\u9f20\u6807\uff0c\u4eab\u53d7\u4eba\u751f\u3002\n\n\n------------\n\u4e0a\u9898\uff1a[ P2661 \u4fe1\u606f\u4f20\u9012](https://www.luogu.org/problemnew/show/P2661#sub)\n\n\u672c\u9898\u5f88\u5178\u578b\uff0c\u5173\u4e8e\u4ed9\u4eba\u638c\u6811\uff08\u96fe\uff09\u3002\n\n\u6211\u4eec\u9996\u5148\u5b9a\u4e49\u4e00\u4e0b\u4ed9\u4eba\u638c\u6811\uff1a \u4e00\u4e2a\u8282\u70b9\u53ea\u6709\u4e00\u4e2a\u51fa\u5ea6\u7684\u6709\u5411\u56fe\uff1a\n![](https://cdn.luogu.com.cn/upload/pic/40466.png \n )\n\n\u5f88\u5bb9\u6613\u53d1\u73b0\uff0c\u4e00\u5f20\u8fde\u901a\u56fe\u4e2d\u53ea\u6709\u4e00\u4e2a\u73af\u3002\n\n\u672c\u9898\u7684\u76ee\u7684\u662f\u627e\u5230\u4e00\u4e2a\u6700\u5c0f\u7684\u73af\u7684\u957f\u5ea6\u3002\n\n------------\n### \u7b97\u6cd5\u601d\u8def\n1. \u6211\u4f7f\u7528\u6df1\u641c\u7684\u529e\u6cd5\uff0c\u7ed9\u6bcf\u4e2a\u8282\u70b9\u6253\u4e0a\u65f6\u95f4\u6233\u3002\n   \u6ce8\u610f\uff0c\u6211\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u6253\u4e86\u4e24\u4e2a\u6807\u8bb0\uff1a\n   a)mode\uff1a\u662f\u7b2c\u51e0\u6279\u6b21\u641c\u7d22\u4e2d\u53d1\u73b0\u7684\u8282\u70b9\u3002\n   b)time\uff1a\u5728\u672c\u8fde\u901a\u56fe\u4e2d\u662f\u7b2c\u51e0\u4e2a\u8bbf\u95ee\u7684\u3002\n2. \u63a5\u4e0b\u6765\u53ea\u8981\u5728DFS\u65f6\u8fdb\u884c\u4e00\u5b9a\u7684\u5904\u7406\u5c31\u53ef\u4ee5\u76f8\u5f53\u7b80\u5355\u7684\u627e\u5230\u6bcf\u5e45\u56fe\u4e2d\u7684\u73af\uff1a\n   ![](https://cdn.luogu.com.cn/upload/pic/40471.png )\n   \n\n------------\n## CODE\n```\n#include<bits/stdc++.h>\n#define Maxn 200002\n\nusing namespace std;\n\nint to[Maxn];\nint vis[Maxn];\nint mode[Maxn];\n\nint Ans=Maxn+1;\n\nvoid dfs(int now,int time,int mod){\n\t\n\tvis[now]=time;\n\tmode[now]=mod;\n\t// \u6709\u73af\n\tif(vis[to[now]]!=0&&mode[to[now]]==mod){\n\t\tAns=min(Ans,vis[now]-vis[to[now]]+1);\n\t\treturn;\n\t}\n\tif(vis[to[now]]!=0)\n\t\treturn;\n\tif(vis[to[now]]==0)\n\t\tdfs(to[now],time+1,mod);\n\t\n}\n\nint main(){\n\t\n\tint n;\n\tcin>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>to[i];\n\t}\n\t\n\tint n_mod=0;\n\tfor(int i=1;i<=n;i++){\n\t\tif(vis[i]==0){\n\t\t\tn_mod++;//\u6279\u6b21\u6570\u589e\u52a0\n\t\t\tdfs(i,1,n_mod);\n\t\t}\n\t}\n\tcout<<Ans;\n\t\n\treturn 0;\n}\n```\n   ",
        "postTime": 1540736661,
        "uid": 29304,
        "name": "DYI_ZJZGC",
        "ccfLevel": 0,
        "title": "10.28\u65e5\u5fd7\uff08NOIP2015D1T2\uff09"
    },
    {
        "content": "\u8c8c\u4f3c\u6ca1\u6709\u4eba\u8ddf\u6211\u505a\u6cd5\u76f8\u4f3c\u7684\uff1f\uff1f\u8d76\u7d27\u5199\u4e00\u53d1\u3002\n\n\u6211\u4eec\u6ce8\u610f\u5230\uff0c\u5982\u679c\u7b2c$i$\u4e2a\u6570\u662f$a[i]$\uff0c\u90a3\u4e48\u8fde\u4e00\u6761$i$\u5230$a[i]$\u7684\u8fb9\uff0c\u5c31\u7b54\u6848\u5c31\u662f\u56fe\u4e2d\u7684\u6700\u5c0f\u73af\uff08\u751f\u65e5\u4f1a\u901a\u8fc7\u73af\u95f4\u63a5\u5230\u81ea\u5df1\uff09\uff0c\u90a3\u4e48\u95ee\u9898\u662f\u5982\u4f55\u6c42\u6700\u5c0f\u73af\uff1f\u6211\u7684\u65b9\u6cd5\u662f\u62d3\u6251\u6392\u5e8f+dfs\u3002\u5177\u4f53\u5b9e\u73b0\u65b9\u6cd5\u5982\u4e0b\uff1a\n\n\u7528\u62d3\u6251\u6392\u5e8f\u5c06\u975e\u73af\u4e0a\u7684\u7ed3\u70b9\u90fd\u5220\u6389\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u73af\uff0c\u505a\u4e00\u4e2a\u70b9\u7684dfs\uff0c\u8bb0\u5f55\u4e00\u4e0b\u4ef7\u503c\u3002\u53d6min\u5373\u53ef\u3002\u7406\u8bba\u65f6\u95f4\u590d\u6742\u5ea6O(n^2)\uff0c\u4f46\u7531\u4e8e\u662f\u73af\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u5bf9\u4e8e\u6240\u6709\u7684n\u4e2a\u70b9\u90fd\u505adfs\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u8f83\u4f4e\u3002\u5199\u4e86\u4e2a\u8bfb\u4f1848ms\uff0c\u5982\u679c\u5728toposort\u7684\u65f6\u5019\u7528\u624b\u5199\u961f\u5217\u6548\u7387\u53ef\u80fd\u66f4\u4f18\u3002\n\norz 0ms dalao\uff01\uff01\uff01\n\n\u4ee3\u7801\uff1a\n```\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#include <map> // STL\n#include <string> \n#include <vector>\n#include <queue>\n#include <stack>\n#define mpr make_pair\n#define debug() puts(\"okkkkkkkk\")\n\nusing namespace std;\n\ntypedef long long LL;\n\nconst int inf = 1 << 26;\n\nint n;\nint a[200005],in[200005],vis[200005];\n\nstruct edges{\n\tint to,next;\n}ed[200005];\nint head[200005],cntt=0;\n\nvoid add(int x,int y){\n\ted[cntt].to=y;\n\ted[cntt].next=head[x];\n\thead[x]=cntt++;\n}\n\nvoid topo(){\n\tint sd=0;\n\tqueue<int>Q;\n\tfor(int i=1;i<=n;i++)if(!in[i])Q.push(i);\n\twhile(!Q.empty()){\n\t\tint v=Q.front();Q.pop();\n\t\tfor(int i=head[v];i!=-1;i=ed[i].next){\n\t\t\tint u=ed[i].to;\n\t\t\t--in[u];\n\t\t\tif(!in[u])Q.push(u);\n\t\t}\n\t}\n}\n\nint dfs(int u){\n\tif(vis[u])return 0;\n\tvis[u]=1;\n\tfor(int i=head[u];i!=-1;i=ed[i].next){\n//\t\tprintf(\"%d\\n\",ed[i].to);\n\t\tint v=ed[i].to;\n\t\treturn 1+dfs(v);\n\t}\n}\n\nint read(){\n\tint x=0,f=1;\n\tchar ch;\n\tfor(ch=getchar();ch<'0'||ch>'9';ch=getchar())if(ch=='-')f=-f;\n\tfor(;ch>='0'&&ch<='9';ch=getchar())x=x*10+ch-'0';\n\treturn x*f;\n}\n\nint main(){\n//\tfreopen(\"Luogu2661-2.in\",\"r\",stdin);\n\tmemset(head,-1,sizeof(head));\n\tmemset(vis,0,sizeof(vis));\n\tn=read();\n\tfor(int i=1;i<=n;i++){\n\t\ta[i]=read();\t// i->a[i]\n\t\tadd(i,a[i]);\n\t\t++in[a[i]];\n\t}\n\tint ans=(1<<30);\n\ttopo();\n\tfor(int i=1;i<=n;i++){\n\t\tif(in[i]&&!vis[i]){\n\t\t\tans=min(ans,dfs(i));\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n\n\treturn 0;\n}\n\n```",
        "postTime": 1519223457,
        "uid": 84042,
        "name": "SkyRainWind",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "## \u3010\u601d\u8def\u3011\n\u65f6\u95f4\u4e3b\u8981\u662f\u82b1\u5728\u4e86\u8003\u8651\u8fd9\u4e2a\u9898\u76ee\u548c\u56fe\u7684\u5173\u7cfb\uff0c\u5728\u5904\u7406\u9898\u76ee\u548c\u56fe\uff0c\u5c06\u770b\u4f3c\u548c\u56fe\u6ca1\u6709\u5173\u7cfb\u7684\u9898\u76ee\u8f6c\u5316\u4e3a\u56fe\u7684\u5730\u65b9\u638c\u63e1\u7684\u4e0d\u597d      \n\u5f88\u96be\u60f3\u51fa\u5230\u5e95\u548c\u56fe\u6709\u4ec0\u4e48\u8054\u7cfb\uff0c\u518d\u5c31\u662f\u5728\u5904\u7406\u6df1\u5ea6\u8fd9\u4e00\u4e2a\u5730\u65b9\u82b1\u8d39\u4e86\u4e0d\u5c11\u7684\u65f6\u95f4      \n \n\u5e76\u67e5\u96c6\u6c42\u6700\u5c0f\u73af     \n\u628a\u6bcf\u4e2a\u540c\u5b66\u770b\u6210\u4e00\u4e2a\u70b9\uff0c    \n\u4fe1\u606f\u7684\u4f20\u9012\u5c31\u662f\u5728\u4ed6\u4eec\u4e4b\u95f4\u8fde\u6709\u5411\u8fb9\uff0c   \n\u6e38\u620f\u8f6e\u6570\u5c31\u662f\u6c42\u6700\u5c0f\u73af\u3002    \n\u56fe\u8bba\u6c42\u6700\u5c0f\u73af\uff0c\u6211\u5728\u91cc\u9762\u770b\u5230\u4e86\u5e76\u67e5\u96c6\u3002    \n\u5047\u5982\u8bf4\u4fe1\u606f\u7531A\u4f20\u9012\u7ed9B\uff0c    \n\u90a3\u4e48\u5c31\u8fde\u4e00\u6761\u7531A\u6307\u5411B\u7684\u8fb9\uff0c     \n\u540c\u65f6\u66f4\u65b0A\u7684\u7236\u8282\u70b9\uff0c    \nA\u5230\u5b83\u7684\u7236\u8282\u70b9\u7684\u8def\u5f84\u957f      \n\u4e5f\u5c31\u662fB\u5230\u5b83\u7684\u7236\u8282\u70b9\u7684\u8def\u5f84\u957f+1\u3002     \n\u8fd9\u6837\u6211\u4eec\u5c31\u5efa\u7acb\u597d\u4e86\u4e00\u4e2a\u56fe\uff0c    \n\u4e4b\u540e\u4fe1\u606f\u4f20\u9012\u7684\u6240\u6709\u73af\u8282\u90fd\u6309\u7167\u8fd9\u4e9b\u8def\u5f84\u3002     \n\u6e38\u620f\u7ed3\u675f\u7684\u8f6e\u6570\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e2a\u56fe\u91cc\u6700\u5c0f\u73af\u7684\u957f\u5ea6\u3002    \n\u5982\u679c\u6709\u4e24\u4e2a\u70b9\u7956\u5148\u8282\u70b9\u76f8\u540c\uff0c   \n\u90a3\u4e48\u5c31\u53ef\u4ee5\u6784\u6210\u4e00\u4e2a\u73af\uff0c    \n\u957f\u5ea6\u4e3a\u4e24\u4e2a\u70b9\u5230\u7956\u5148\u8282\u70b9\u957f\u5ea6\u4e4b\u548c+1\u3002    \n\u548c\u4e0b\u9762\u7684\u5e76\u67e5\u96c6\u6709\u70b9\u4e0d\u4e00\u6837\u7684\u3002   \n\n## \u3010\u5b8c\u6574\u4ee3\u7801\u3011\n```cpp\n#include<iostream>\n#include<cstdio>\n\nusing namespace std;\n\nconst int Max = 200005;\nint father[Max];\nint d[Max]; \nint Min;\n\nint find(int x)\n{\n\tif(x != father[x])//\u8fd9\u4e2a\u672c\u8eab\u4e0d\u662f\u6700\u9ad8\u7956\u5148\u8fd8\u53ef\u4ee5\u66f4\u65b0 \n\t{\n\t\tint last = father[x];//\u5148\u8bb0\u5f55\u4e00\u4e0b\u6ca1\u6709\u66f4\u65b0\u524d\u7684\u7236\u4eb2\u662f\u8c01 \n\t\tfather[x] = find(father[x]);//\u627e\u51fa\u6700\u9ad8\u7956\u5148 \n\t\td[x] += d[last];//\u56de\u6eaf\u66f4\u65b0\u66f4\u65b0\u6700\u9ad8\u7956\u5148\u4e4b\u540e\u4e5f\u5c31\u662f\u5728\u7236\u4eb2\u8fd9\u4e00\u5757\u591a\u4e86\u90a3\u4e00\u90e8\u5206\u4e4b\u540e\u591a\u51fa\u6765\u7684\u8def\u5f84\u8ddd\u79bb \n\t}\n\treturn father[x];\n}\n\nvoid hebing(int x,int y)\n{\n\tint xx = find(x);int yy = find(y);\n\tif(xx == yy)//\u627e\u5230\u4e00\u4e2a\u73af\n\t\tMin = min(Min,d[x] + d[y] + 1);//\u6c42\u51fa\u8fd9\u4e2a\u73af \u7684 \u957f\u5ea6\uff0c\u6bd4\u8f83\u627e\u51fa\u6700\u77ed\u7684\u73af \n\telse\n\t\tfather[xx] = yy,//\u5408\u5e76 \n\t\td[x] = d[y] + 1;//\u8fd9\u4e2a\u70b9\u5230\u4ed6\u7684\u6700\u9ad8\u7956\u5148\u7684\u8ddd\u79bb\u5c31\u662f\u8ddd\u79bb\u4ed6\u4e3a1\u7684\u7236\u4eb2\u5230\u8fd9\u4e2a\u6700\u9ad8\u7956\u5148\u7684\u8ddd\u79bb\u52a0\u4e0a\u4ed6\u548c\u7236\u4eb2\u95f4\u8ddd\u79bb\u7684\u8fd9\u4e2a1\u5c31\u53ef\u4ee5\u53bb\u66f4\u65b0\u4e86 \n\t//\u4e0a\u9762\u6ce8\u610f\u7b2c52\u884c\u548c\u7b2c53\u884c\u7684xx\u548cyy\uff0cx\u548cy\u7684\u987a\u5e8f\u662f\u8981\u5bf9\u5e94\u7684\uff0cxx\u5bf9\u5e94x\uff0cyy\u5bf9\u5e94y \n\treturn;\n}\n\nint main()\n{\n\tint n;\n\tcin >> n;\n\tfor(int i = 1;i <= n;++ i)father[i] = i;\n\tint a;\n\tMin = 0x7fffffff;\n\tfor(int i = 1;i <= n;++ i)\n\t{\n\t\tcin >> a;\n\t\thebing(i,a);\n\t}\n\tcout << Min <<endl;\n\treturn 0;\n}\n```",
        "postTime": 1570866403,
        "uid": 186489,
        "name": "EarthGiao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u4e00\u9053\u6709\u5f88\u591a\u79cd\u89e3\u6cd5\u7684\u9898\u76ee\n\n\n\u901a\u8fc7\u5212\u5f52\uff0c\u53d1\u73b0\u5c31\u662f\u6c42\u6700\u5c0f\u73af\n\n\n\u90a3\u4e48\u7acb\u5373\u80fd\u60f3\u5230\u7684\u7b97\u6cd5\uff1a1\u3001Tarjan\u6c42\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u6700\u65e0\u8111\n\n\n2\u3001\u5bf9\u4e8e\u6bcf\u4e2a\u8fde\u901a\u5206\u91cf\u7528Topo Sort\uff0c\u76f8\u5f53\u4e8e\u526a\u53bb\u5176\u4ed6\u4e0d\u5728\u73af\u4e0a\u7684\u8fb9\n\n\n \n\n\u4e0d\u8fc7\u7528\u5e26\u6743\u5e76\u67e5\u96c6\u4e5f\u53ef\u4ee5\u89e3\u51b3\u8fd9\u9053\u9898\u76ee\n\n\n\u9996\u5148\u53d1\u73b0\u53ea\u8981\u4e00\u6761\u8fb9\u8fde\u63a5\u7684\u4e24\u4e2a\u70b9A\u3001B\u5728\u4e4b\u524d\u5df2\u7ecf\u5728\u4e00\u4e2a\u96c6\u5408\u4e2d\uff0c\u5219\u5fc5\u5b9a\u4f1a\u5f62\u6210\u4e00\u4e2a\u73af\n\n\n\u90a3\u4e48\u96be\u70b9\u5c31\u5728\u4e8e\u5982\u4f55\u6bcf\u6b21\u9ad8\u6548\u5730\u6c42\u51fa\u73af\u7684\u5927\u5c0f\n\n\n\u786e\u5b9e\u53ef\u4ee5\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u5230\u5176\u6839\u8282\u70b9\u7684\u8ddd\u79bb\uff0c\u4f46\u6bcf\u6b21merge\u64cd\u4f5c\u8981\u6539\u53d8\u5f88\u591a\u70b9\u7684\u503c\n\n\n**\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u6bcf\u6b21merge\u65f6\u53ea\u7ef4\u62a4\u5176\u5230\u7236\u8282\u70b9\u7684\u8ddd\u79bb\uff0c\u4e0d\u7528\u6709\u5176\u4ed6\u64cd\u4f5c**\n\n\n**\u800c\u5728find\u65f6\u518d\u901a\u8fc7\u9012\u5f52\u6c42\u51fa\u8fd9\u4e2a\u70b9\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb**\n\n\nEx\uff1a\u67093\u4e2a\u70b9A\u3001B\u3001C\uff0cf[A]=B,f[B]=C\u3002\u5728find\u524dd[A]=cost(A,B),d[B]=cost(B,C)\uff0c\u5728\u9012\u5f52\u65f6\u4ec5\u8981d[A]+=d[f[A]]\u5373\u53ef\u3002\n\n\n \n\n\u53ef\u4ee5\u53d1\u73b0\u8fd9\u6837\u7684\u5904\u7406\u548c\u7ebf\u6bb5\u6811\u4e2d\u7684lazy\\_tag\u8fd0\u7528\u4e86\u540c\u6837\u7684\u601d\u60f3\n\n\n**\u4e3a\u4e86\u964d\u4f4e\u590d\u6742\u5ea6\uff08\u53ea\u8981\u4e0d\u5f71\u54cd\u5176\u4ed6\u503c\u7684\u67e5\u627e\uff09\u5728\u4fee\u6539\u64cd\u4f5c\u65f6\u4e0d\u7528\u5bf9\u53ef\u80fd\u53d7\u5f71\u54cd\u7684\u70b9\u5168\u90e8\u8fdb\u884c\u4fee\u6539\uff0c\u53ea\u7ef4\u62a4\u6700\u8fd1\u70b9\u7684\u6570\u636e\uff0c\u5728\u67e5\u627e\u64cd\u4f5c\u65f6\u7edf\u4e00\u64cd\u4f5c\u5373\u53ef**\n\n\n \n\n**Tips:1\u3001\u5728\u8fd9\u6837\u8fdb\u884c\u7ef4\u62a4\u65f6\uff0c\u5408\u5e76\u64cd\u4f5c\u4e0d\u80fd\u4f7f\u7528\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u56e0\u4e3a\u5728\u67e5\u627e\u65f6\u5fc5\u987b\u4fdd\u8bc1\u4e00\u6761\u8fb9\u4e24\u4e2a\u8282\u70b9\u95f4\u7684\u7236\u5b50\u5173\u7cfb\u4e0d\u53d1\u751f\u6539\u53d8**\n\n\n** 2\u3001n\u4e2a\u70b9n-1\u6761\u8fb9\u7edd\u4e0d\u610f\u5473\u7740\u53ea\u53ef\u80fd\u51fa\u73b0\u4e00\u4e2a\u73af\uff0c\u5f88\u53ef\u80fd\u6709\u591a\u4e2a\u8fde\u901a\u5206\u91cf\uff0c\u4ece\u800c\u51fa\u73b0\u591a\u4e2a\u73af**\n\n\n\n\n\n    \n        \n    \n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n,f[200005],d[200005];\nint find(int x)\n{\n    if(f[x]!=x)  //\u5bf9d\u8fdb\u884c\u7ef4\u62a4 \n    {\n        int root=find(f[x]);\n        d[x]+=d[f[x]];\n        return f[x]=root;\n    }\n    else return x;\n}\nint main()\n{\n    cin >> n;\n    for(int i=1;i<=n;i++) f[i]=i,d[i]=0;\n    int res=1<<27;\n    for(int i=1;i<=n;i++)\n    {\n        int x;cin >> x;\n        int px=find(x),py=find(i);\n        if(px==py) res=min(res,d[i]+d[x]+1);\n        else f[i]=x,d[i]=1; //\u53ea\u80fd\u4f7f\u7528\u6734\u7d20\u5408\u5e76\u65b9\u5f0f \n    }\n    cout << res;\n    return 0;\n}\n```",
        "postTime": 1511781812,
        "uid": 18490,
        "name": "NewErA",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u505a\u9898\u4e4b\u524d\u5148\u7785\u4e86\u4e00\u773c\u9898\u89e3 \u53d1\u73b0dalao\u4eec\u7528\u7684\u90fd\u662f\u5e26\u6743\u5e76\u67e5\u96c6\u3001\u62d3\u6251\u6392\u5e8f\u3001DFS\u3001tarjan...   \n\u7136\u800c\u4f5c\u4e3a\u4e00\u4e2a\u849f\u84bb \u4e0a\u9762\u7684\u7b97\u6cd5\u6211\u90fd\u4e0d\u4f1a \u4e8e\u662f\u6211\u51b3\u5b9a\u81ea\u5df1\u5199~~\u66b4\u529b~~\u8bd5\u8bd5\u770bQAQ   \n\u770b\u5230\u9898\u6700\u5bb9\u6613\u60f3\u5230\u7684\u65b9\u6cd5\u5c31\u662f\u6bcf\u4e00\u4e2a\u70b9\u7528\u9012\u5f52\u6765\u627e\u73af \u627e\u5230\u4e86\u5c31\u6bd4\u8f83\u5b83\u548c\u7b54\u6848\u7684\u5927\u5c0f \u6bd4\u7b54\u6848\u5c0f\u5c31\u66f4\u65b0\u7b54\u6848\u4e3a\u5b83 \u4e8e\u662f\u6211\u5199\u51fa\u4e86\u8fd9\u6837\u7684\u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n,f[200010],ans = 200010,b[200010];\n\nvoid find(int s,int cur,int num){//\u7528\u9012\u5f52\u6765\u627e\u73af\n    b[cur]++;\n    if(b[cur] > 1){\n        if(cur != s) return;\n        else{\n            if(num < ans){\n                ans = num;\n                return;\n            }\n        }\n    }\n    find(s,f[cur],num + 1);\n}\n\nint main(){\n    cin>>n;\n    for(int i = 1; i <= n; i++){\n        cin>>f[i];\n    }\n    for(int i = 1; i <= n; i++){//\u6bcf\u4e00\u4e2a\u70b9\u90fd\u641c\u4e00\u6b21\n        memset(b,0,sizeof(b));\n        b[i]++;\n        find(i,f[i],1);\n    }\n    cout<<ans;\n    return 0;\n}\n```\n\u7136\u800c\u8fd9\u68372,9,10\u70b9\u4f1a\u8d85\u65f6 \u53ea\u80fd\u62ff\u523070\u5206...  \n\u4e8e\u662f\u6211\u5c31\u5728\u7eb8\u4e0a\u5212\u62c9\u4e00\u756a \u53d1\u73b0\u8d85\u65f6\u7684\u95ee\u9898\u5728\u4e8e\u91cd\u590d\u641c\u7d22 \u5982\u679c\u6bcf\u6b21\u53d1\u73b0\u4e00\u4e2a\u73af\u5c31\u628a\u91cc\u9762\u7684\u70b9\u90fd\u6807\u8bb0\u4e00\u904d \u4e0b\u6b21\u518d\u78b0\u5230\u76f4\u63a5\u5c31\u8df3\u8fc7\u4e0d\u5c31\u597d\u4e86\u4e48\uff1f\u4e8e\u662f\u6211\u679c\u65ad\u6539\u4e86\u4e00\u4e0bb\u6570\u7ec4 \u5982\u679c\u78b0\u5230b\u5927\u4e8e0\u5c31\u76f4\u63a5\u8df3\u8fc7  \n\u7136\u9e45\u8fd9\u4e00\u6b21\u63d0\u4ea4\u53d8\u6210\u4e86\u4e94\u5341\u5206 \u4e8e\u662f\u6211\u53c8\u4e00\u6b21\u5728\u7eb8\u4e0a\u5212\u62c9\u4e00\u756a \u7136\u540e\u53d1\u73b0\u4e86\u95ee\u9898\uff1a\u5982\u679c\u9047\u5230\u4e86\u4e00\u6761\u94fe\u52a0\u4e00\u6761\u73af\u7684\u60c5\u51b5\u7684\u65f6\u5019\u4f1a\u628a\u6ca1\u6709\u641c\u8fc7\u7684\u73af\u4e5f\u6807\u8bb0\u8fdb\u53bb \u4e8e\u662f\u4e4e\u6211\u5c31\u53c8\u6539\u4e86\u4e00\u4e0b\uff08\u5177\u4f53\u89e3\u91ca\u8bf7\u770b\u6ce8\u91ca\uff09\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n,f[200010],ans = 200010,b[200010];\nbool del = true,nolink = false;\n\nvoid find(int s,int cur,int num){\n    b[cur]++;\n    if(b[cur] > 1){\n        if(cur != s){\n            nolink = true; //\u78b0\u5230\u94fe+\u73af\u7684\u60c5\u51b5 \u5220\u9664\u73af\u7684\u6807\u8bb0\n            return;\n        }\n        else{\n            if(num < ans){\n                ans = num;\n                return;\n            }\n        }\n    }\n    find(s,f[cur],num + 1);\n    if(b[cur] > 1){//\u5230\u4e86\u73af\u548c\u94fe\u7684\u4ea4\u70b9 \u505c\u6b62\u5220\u9664\u6807\u8bb0\n        b[cur] = 0;\n        del = false;\n    }\n    if(del && nolink){//\u5220\u9664\u73af\u4e0a\u7684\u6807\u8bb0\n        b[cur] = 0;\n    }\n}\n\nint main(){\n    cin>>n;\n    for(int i = 1; i <= n; i++){\n        cin>>f[i];\n    }\n    for(int i = 1; i <= n; i++){\n    \tdel = true; nolink = false;\n        if(b[i] != 0) continue; //\u5982\u679c\u73af\u5df2\u7ecf\u88ab\u641c\u8fc7 \u5219\u8df3\u8fc7\n        b[i]++; //\u6807\u8bb0\u8d77\u59cb\u70b9\n        find(i,f[i],1); //\u5f00\u59cb\u641c\u7d22\n    }\n    cout<<ans;\n    return 0;\n}\n```\n\u8fd9\u6837\u5c31\u53ef\u4ee5A\u6389\u4e86 \u8dd1\u7684\u8fd8\u662f\u86ee\u5feb\u7684 \u70b92\u53ea\u7528\u4e8655ms  \n[\u8bc4\u6d4b\u8bb0\u5f55](https://www.luogu.org/record/24047550)  \n\u800c\u4e14\u8fd9\u79cd\u65b9\u6cd5\u5728\u8003\u573a\u4e5f\u8bb8\u6bd4\u8f83\u597d\u60f3\u597d\u5199 ~~\u4e0d\u53ea\u6709\u4f60\u4e0d\u4f1a\u9ad8\u7ea7\u65b9\u6cd5~~  \u54b3\u54b3  \n\u5b8c\u6bd5\uff01",
        "postTime": 1568722700,
        "uid": 64067,
        "name": "lrzlin",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u6709\u4e00\u4e2a\u53eb\u505aKosaraju\u7684\u7b97\u6cd5\u53ef\u4ee5\u5728O\uff082n\uff09\u65f6\u95f4\u5185\u5c31\u53ef\u4ee5\u7ed9\u51fa\u6700\u5c0f\u73af\u3002\n\n\u8fd9\u9053\u9898\u76ee\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u4eba\u628a\u81ea\u5df1\u7684\u4f20\u8f93\u5bf9\u8c61\u4f5c\u4e3a\u94fe\u5411\u7684\u4e00\u4e2a\u70b9\uff0c\u4e8e\u662f\u6211\u4eec\u5728O\uff08n\uff09\u7684\u65f6\u95f4\u91cc\u5f97\u51fa\u4e00\u4e2a\u56fe\uff0c\u9898\u76ee\u7684\u610f\u601d\u5c31\u662f\u6c42\u8fd9\u5f20\u56fe\u91cc\u9762\u7684\u6700\u5c0f\u73af\u3002\u8fd9\u5176\u5b9e\u4e0d\u96be\u53d1\u73b0\u3002\n\n\u73b0\u5728\u5c31\u662f\u600e\u4e48\u6837\u5728\u6709\u9650\u7684\u65f6\u95f4\u5185\u6c42\u51fa\u6700\u5c0f\u73af\uff0c\u9996\u5148floyd\u7b97\u6cd5\u53ef\u4ee5\u5728O\uff08n^3\uff09\u5f97\u51fa\u7b54\u6848\uff0c\u4f46\u662f\u7531\u4e8e\u65f6\u95f4\u590d\u6742\u5ea6\u53d7\u9650\uff0c\u6211\u4eec\u8981\u6c42\u5728O\uff08n\uff09-O\uff08n log n\uff09\u5f97\u51fa\u6b63\u89e3\u3002\u8fd9\u91cc\u7ed9\u51faO\uff08n\uff09\u7684\u7b97\u6cd5\n\n\u6211\u4eec\u53ef\u4ee5\u6c42\u51fa\u4e00\u4e2a\u6709\u5411\u56fe\u4e2d\u5f3a\u8054\u901a\u5206\u91cf\u7684\u4e2a\u6570\uff0c\u5e76\u5bf9\u8fd9\u4e9b\u5f3a\u8054\u901a\u5206\u91cf\u505a\u64cd\u4f5c\u6c42\u51fa\u6700\u5c0f\u73af\u3002\n\n\u8bbe\u539f\u56fe\u4e3aG\uff0c\u5b83\u7684\u53cd\u56fe\u4e3aF\n\n1.\u5bf9G\u8fdb\u884cDFS\u904d\u5386\uff0c\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u70b9\u7684\u9000\u51fa\u987a\u5e8f\n\u81ea\u5df1\u753b\u4e0b\u6709\u5411\u56feG\n```\n1 2\n2 3\n3 5\n5 2\n1 5\n1 4 \n4 1\n```\n\u5982\u679c\u4ee51\u4e3a\u8d77\u70b9\u904d\u5386\u987a\u5e8f\u4e3a\n1 2 3 5\uff085 3 2 \uff091 4\uff084 1\uff09\ndfn\u5e8f\u4e3a 5 3 2 4 1\n\n2.\u5012\u8f6c\u6bcf\u4e00\u6761\u8fb9\uff0c\u5f97\u5230\u53cd\u56feF\uff0c\u4ee5dfn\u5e8f\u7684\u9006\u5e8f\u904d\u5386\uff0c\u6309\n1 4 2 3 5\u7684\u9006\u5e8f\u7b2c\u4e8c\u6b21DFS\u904d\u5386F\n\n\u8bbf\u95ee\u7ed3\u679c\u662f\uff1a1 4 \uff08return\uff09 2 5 3 \uff08return\uff09\n\u5f97\u5230\u5f3a\u8054\u901a\u5206\u91cf\u4e3a\n1 4\uff1b2 5 3\n\u8981\u6ce8\u610fdfs\u65f6\u8981\u8bd5\u6bcf\u4e00\u4e2a\u70b9\u3002\n\n\u5e94\u7528\u5230\u8fd9\u9053\u9898\u76ee\u5c31\u5341\u5206\u7b80\u5355\u4e86\u3002\u3002\n\n```\n# include <cstdio>\n# include <cstring>\n# include <iostream>\n# include <climits>\nusing namespace std;\nstruct rec{\n    int pre,to;\n};\nconst int MAXN=1000005;\nint n,m,tot1=0,tot2=0,cnt;\nint dfn[MAXN],head1[MAXN],head2[MAXN];\nbool vis[MAXN];\nrec a[MAXN],b[MAXN];\nint adde1(int u,int v) //\u6b63\u56fe\u524d\u5411\u661f\n{\n    tot1++;\n    a[tot1].pre=head1[u];\n    a[tot1].to=v;\n    head1[u]=tot1;\n}\nint adde2(int u,int v)//\u53cd\u56fe\u524d\u5411\u661f\n{\n    tot2++;\n    b[tot2].pre=head2[u];\n    b[tot2].to=v;\n    head2[u]=tot2;\n}\nint dfs1(int u) //\u6c42dfn\u5e8f\n{\n    vis[u]=true;\n    for (int i=head1[u];i!=0;i=a[i].pre)\n     {\n         int v=a[i].to;\n         if (vis[v]==true) continue;\n         dfs1(v);\n     }\n     dfn[++dfn[0]]=u;\n}\nint dfs2(int u) //\u6c42\u73af\n{\n    vis[u]=true;\n    for (int i=head2[u];i!=0;i=b[i].pre)\n    {\n        int v=b[i].to;\n        if (vis[v]==true) continue;\n        dfs2(v);\n    }\n    cnt++;\n}\nint min(int a,int b)\n{\n\treturn a>b?b:a;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for (int i=1;i<=n;i++)\n    {\n        int t; \n        scanf(\"%d\",&t);\n        adde1(i,t); adde2(t,i);//\u6b63\u56feA\uff0c\u53cd\u56feB\uff1b\n    }\n    memset(dfn,0,sizeof(dfn));\n    memset(vis,false,sizeof(vis));\n    for (int i=1;i<=n;i++)\n     if (vis[i]==false) dfs1(i);\n    memset(vis,false,sizeof(vis));\n    cnt=0;\n    int ans=INT_MAX;\n    for (int i=dfn[0];i>0;i--) //\u53cd\u5e8f\u641e\u4e00\u641e\u6c42\u5f3a\u8054\u901a\u5757\n    {\n        if (vis[dfn[i]]==true) continue;\n        cnt++;\n        cnt=0;\n        dfs2(dfn[i]); \n        if (cnt==1) continue;\n        ans=min(ans,cnt);\n\t\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```\n\n ",
        "postTime": 1532418985,
        "uid": 16456,
        "name": "ljc20020730",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "#P2611\n#####\u6765\u4e00\u79cd\u522b\u6837\u7684\u65b9\u6cd5\n\n#####28ms\uff0c\u5927\u6982\u662f\u6700\u5feb\u4ee3\u7801\u4e86\n\n#####while\u6a21\u62dfdfs\uff0c\u624b\u5199\u4eba\u5de5\u6808\u52a0\u901f\n\n#####\u4e3b\u8981\u601d\u60f3\uff1a\u5230\u8fc7\u7684\u70b9\u5728\u53bb\u4e00\u904d\u662f\u6beb\u65e0\u610f\u4e49\u7684\uff0c\u56e0\u4e3a\u9020\u6210\u7684\u73af\u7684\u957f\u5ea6\u662f\u4e00\u6837\u7684\n\n#####\u7406\u8bba\u590d\u6742\u5ea6 \u65f6\u95f4O(n) \u7a7a\u95f4O(4n)\n\n#\u4e0a\u4ee3\u7801\n\n```cpp\n    #include<bits/stdc++.h>\n    #pragma GCC optimize(2)//O2\u4f18\u5316\n    using namespace std;\n    int dis[200001];\n    int a[200001];\n    int ans;\n    bool b[200001];\n    int s[200001],top=0;//\u4eba\u5de5\u6808\n    inline void read(int&x)//\u8bfb\u5165\u4f18\u5316\n    {\n        x=0;\n        char ch=getchar();\n        while(ch<'0'||ch>'9')ch=getchar();\n        while(ch>='0'&&ch<='9')x=x*10+(ch^48),ch=getchar();\n    }\n    int main()\n    {\n        int n;\n        read(n);\n        for(int i=1;i<=n;++i)read(a[i]);\n        ans=n;\n        //\u6838\u5fc3\u4ee3\u7801begin\n        for(int i=1;i<=n;++i)\n            if(!b[i])\n            {\n                int x=i,dist=1;//\u4ecei\u5f00\u4f7f\n                while(1)\n                {\n                    if(dis[x])//\u662f\u73af\u5219\u9000\n                    {\n                        ans=dist-dis[x];\n                        b[x]=true;\n                        break;\n                    }\n                    if(b[x])break;//\u7075\u9b42\u526a\u679d\n                    b[x]=true;\n                    dis[x]=dist;\n                    s[++top]=x;\n                    x=a[x];\n                    ++dist;\n                    if(ans<dist)break;//\u5c0f\u526a\u679d\n                }\n                for(int i=1;i<=top;++i)dis[s[i]]=0;\n                top=0;//\u4eba\u5de5\u6808\u7684\u6548\u7528\n            }\n        //\u6838\u5fc3\u4ee3\u7801end\n        printf(\"%d\",ans);\n        return 0;\n}\n```",
        "postTime": 1515074719,
        "uid": 29519,
        "name": "qianfujia",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u8981\u6c42\u7684\u662f\u6700\u5c0f\u73af;\n\n\u6b65\u9aa4\u662f\uff0c\u7528topsort\u5c06\u4e0d\u53ef\u80fd\u662f\u73af\u4e0a\u7684\u70b9\u67d3\u8272\uff1b\n\ndfs\u6bcf\u4e2a\u6ca1\u6709\u88ab\u67d3\u8272\u7684\u70b9\uff0cdfs\u8fd4\u56de\u7684\u662f\u4ece\u8d77\u70b9\u8d70\u5230\u88ab\u67d3\u8272\u7684\u70b9\u6240\u9700\u6b65\u6570\uff0c\uff08\u56e0\u4e3a\u662f\u5355\u5411\u56fe\u4e14\u6bcf\u4e2a\u70b9\u51fa\u8fb9\u53ea\u6709\u4e00\u4e2a\uff0cdfs\u4e0d\u9700\u8981\u9012\u5f52\uff1b)\n\n\u8f93\u51fa\u6700\u5c0f\u7684\u6b65\u6570\u3002\n\n    \n```cpp\n#include<iostream>\n#include<cstring>\nusing namespace std;\nint n,father[200001],degree[200001];bool visited[200001];//degree[]\u5165\u5ea6; visited[]\u662f\u5426\u88ab\u67d3\u8272;\nvoid topsort(int);int dfs(int);\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;i++){\n        cin>>father[i];\n        degree[ father[i] ]++;\n    }\n    for(int i=1;i<=n;i++)    if( !degree[i]  and !visited[i]) topsort(i);\n    int ans=0x3f3f3f;\n    for(int i=1;i<=n;i++){\n        if(!visited[i]) ans=min(ans, dfs(i) );\n    }\n    cout<<ans<<endl;\n    return 0;    \n}\nvoid topsort(int x){\n    while(1){\n        if(!degree[x]) visited[x]=true;        else break;\n        degree[ father[x] ]--;\n        x=father[x];\n    }\n}\nint dfs(int x){\n    int steps=0;\n    while( !visited[x] ){\n        visited[x]=true;\n        x=father[x];\n        steps++;\n    }\n    return steps;\n}\n```",
        "postTime": 1506417831,
        "uid": 34462,
        "name": "exi3t",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "###P2661\u9898\u89e3\n\n\n#\u5f88\u53ef\u60dc15\u5e74\u6211\u505a\u7684\u65f6\u5019p\u515a\u5806+\u62d3\u6251\u53ea\u5f97\u4e5d\u5341\u5206\uff0c\u73b0\u5728\u91cd\u65b0\u8003\u8651\u8fd9\u4e2a\u95ee\u9898...\u5fc3\u8840\u6765\u6f6e\uff0c\u60f3\u5199\u4e00\u7bc7\u5927\u9898\u89e3\u3002\n\n#\u5176\u5b9e\u8fd9\u4e2a\u9898\uff0c\u5982\u679c\u60f3\u660e\u767d\u4e86\uff0c\u4ee3\u7801\u5c0f\u5b66\u751f\u96be\u5ea6...\n\n#\u7ed9\u5927\u5bb6\u5949\u4e0a\u4e00\u4efd\u53ea\u6709**22\u884c**\u7684AC\u4ee3\u7801\u548c\u6211\u7684\u601d\u8def\uff0c\u672c\u4eba\u539f\u521b\uff0c\u901f\u5ea6\u4e5f\u5f88\u5feb\uff0c\u6700\u540e\u4e00\u4e2a\u70b9\u82b1\u4e86240ms\u3002\n\n#\u4ee3\u7801\u5c5e\u4e8e**DFS**\u3002\n\n\n##\u601d\u8def\n\n\u5bf9\u4e8e\u8fd9\u4e2a\u9898\uff0c\u4e00\u770b\u5c31\u660e\u767d\uff0c\u5c31\u662f\u8981\u5bfb\u627e**\u6700\u5c0f\u7684\u73af**\uff0c\u672c\u80fd\u7684\u60f3\u5230\u62d3\u6251\u3002\n\n\u4f46\u662f\u5b9e\u9645\u4e0a\u8fd9\u4e2a\u9898\u7528\u4e0d\u7740\u62d3\u6251\uff0c\u53ea\u9700\u8981**\u6162\u6162\u201c\u6563\u6b65\u201d\u5c31\u884c\u4e86\uff01**\n\n\u968f\u4fbf\u53d6\u4e00\u4e2a\u70b9\u4e3a\u7b2c\u4e00\u4e2a\u70b9\uff0c\u6211\u4eec\u987a\u7740\u8def\u7ebf\u8d70\u4e0b\u53bb\uff0c\u4e00\u8def\u4e0a\u6211\u4eec\u53ea\u9700\u6807\u8bb0\u4e24\u4e2a\u91cf\uff0c\u7b2c\u4e00\u4e2a\u91cf\u662f\u8fd9\u4e2a\u679d\u5b50\u7684\u8d77\u70b9\u7684\u7f16\u53f7i\uff0c\u5b58\u5165s\u6570\u7ec4\uff0c\u7b2c\u4e8c\u4e2a\u91cf\u662f\u8d70\u4e86\u591a\u5c11\u6b65\uff0c\u5b58\u5165p\u6570\u7ec4\uff0c \u4e00\u65e6\u627e\u5230\u4e86\u4e00\u4e2as\u503c\u4e0d\u4e3a0\u7684\u70b9\uff0c\u4e5f\u5c31\u662f\u51b2\u7a81\u70b9\uff0c\u90a3\u5c31\u8bf4\u660e\u627e\u5230\u4e86\u73af\u3002\n\n\u9762\u5bf9\u51b2\u7a81\uff0c\u5904\u7406\u4e24\u79cd\u60c5\u51b5\uff0c\u7b2c\u4e00\u4e2a\u662f\u627e\u5230\u65b0\u73af\uff0c\u7b2c\u4e8c\u4e2a\u662f\u627e\u5230\u5df2\u7ecf\u8bbf\u95ee\u8fc7\u7684\u70b9\uff08\u8fd9\u4e9b\u70b9\u80af\u5b9a\u5df2\u7ecf\u627e\u5230\u4e86\u73af\u4e86\uff09\u3002\n\n1.\u627e\u5230\u65b0\u73af\n\n\u65b0\u73af\u7279\u5f81\u5c31\u662f\u51b2\u7a81\u70b9\u7684s\u503c\u7b49\u4e8e\u76ee\u524d\u7684i\uff0c\u90a3\u4e48\u76f4\u63a5\u7528\u8d70\u7684\u6b65\u6570\uff0c\u51cf\u53bb\u8fd9\u4e2a\u4e0d\u4e3a0\u7684\u70b9\u7684\u6b65\u6570\uff0c\u5c31\u662f\u73af\u957f\u3002\u4e0eans\u53d6\u5c0f\u3002\n\n2.\u627e\u5230\u5df2\u8bbf\u95ee\u7684\n\n\u5df2\u8bbf\u95ee\u7684\u7279\u5f81\u5c31\u662f\u51b2\u7a81\u70b9\u7684s\u503c\u4e0d\u7b49\u4e8e\u76ee\u524d\u7684i\uff0c\u76f4\u63a5\u8df3\u8fc7\u3002\n\n\u7136\u540e\u53d6\u4e0b\u4e00\u4e2as\u503c\u4e3a0\u7684\u70b9\u4f5c\u4e3a\u8d77\u70b9\uff0c\u518d\u6765\u4e00\u904d\u3002\n\n\u8fd9\u6837\u6700\u540e\u8f93\u51faans\uff0c\u7136\u540e\u5c3122\u884c\u89e3\u51b3\u95ee\u9898\u4e86\u3002\n\n\u590d\u6742\u5ea6\u4e0d\u597d\u8bf4\u3002\u7eaf\u7406\u8bba\u7684\u8bf4\u662f**O\uff08nk\uff09\u7684\uff0ck\u662f\u4e00\u4e2a\u5c0f\u5e38\u6570**\uff0ck\u53d6\u51b3\u4e8e\u56fe\u7684\u7ed3\u6784\u72b6\u51b5\uff0c\u4e2a\u4eba\u611f\u89c9\u4e0d\u8d85\u8fc710\uff0c\u5e0c\u671b\u6709\u5de8\u64d8\u7ed9\u8bc1\u660e\u4e00\u4e0b\u51c6\u786e\u7684\u503c\u3002\n\n\\_\u65f6\u95f4\u89c11\u3002\\_\n\n\n##\u5173\u4e8e\u526a\u679d\n\n\u6b65\u6570\u5927\u4e8eans\u7684\u526a\u679d\uff0c\u590d\u6742\u5ea6**\u53d8\u5316\u4e0d\u660e\u663e\uff0c\u7565\u964d\u4e00\u70b9**\u3002\u6211\u8bd5\u8fc7\u4e86\uff0c\u6700\u540e\u4e00\u4e2a\u70b9\u65f6\u95f4\u6ca1\u53d8\u5316\uff0c\u4f46\u524d\u9762\u6570\u636e\u7a0d\u5c0f\u7684\u70b9\uff0c\u65f6\u95f4\u7f29\u77ed\u4e86\u4e00\u4e9b\u3002\u6c42\u5de8\u64d8\u89e3\u91ca\u4e00\u4e0b\u3002\u672c\u4ee3\u7801\u52a0\u4e86\u6b64\u526a\u679d\u3002\\_\u4e0d\u52a0\u526a\u679d\u65f6\u95f4\u89c1\u4e0b2\u3002\\_\n\n\\_\u5f53\u7136\u8fd8\u6709\u4e00\u4e2a\u5f88\u65e0\u804a\u7684\u526a\u679d\uff0c\u5c31\u662f\u5982\u679cans\u4e3a1\uff0c\u5c31\u4e0d\u7528\u627e\u4e86\uff0c\u80af\u5b9a\u662f\u5b83...\u4f60\u8981\u662f\u90a3\u8fd9\u4e2a\u5361\u6211\u6211\u4e5f\u662f\u9189\u4e86\u3002\u4f46\u5b9e\u9645\u4e0a\uff0c\u8fd9\u4e2a\u526a\u679d\u4e5f\u4f1a\u88ab\u5361\uff0c\u56e0\u4e3a\u591a\u4e86\u4e00\u6b65\u5224\u65ad\u662f\u4e00\uff0c\u518d\u4e00\u4e2a\u90a3\u79cd\u81ea\u73af\u70b9\u771f\u7684\u5f88\u65e0\u804a\uff0c\u8fd9\u6837\u7684\u6570\u636e\u7b80\u76f4\u5c31\u662f\u9001\u5206\uff0c\u6839\u672c\u4e0d\u4f1a\u6709\u3002\u672c\u9898\u4e2d\u65f6\u95f4\u66f4\u662f\u4e0d\u964d\u53cd\u5347\uff0c\u5475\u5475\u3002\\_\\_\u65f6\u95f4\u89c1\u4e0b3\u3002\\_\n\n\n##**\u6ce8\u610f\u5fc5\u987b\u8981\u628a\u6240\u6709\u7684\u70b9\u90fd\u8bbf\u95ee\u8fc7\uff0c\u4e0d\u7136\u53ef\u80fd\u5b58\u5728\u66f4\u5c0f\u7684\u73af\u3002**\n\n\n##\u65f6\u95f4\u8868\n\n1. #8 21ms #9 82ms #10 240ms\n\n2. #8 41ms #9 119ms #10 240ms\n\n3. #8 93ms #9 118ms #10 399ms\n\n\n```cpp\n#include<cstdio>\nint n,a[200001],p[200001],s[200001],ans=2147483647,t,tmp,tmp2,check;\nint main(){\n    scanf(\"%d\",&n);\n    for (int i=1;i<=n;i++) scanf(\"%d\",&a[i]);//\u8bfb\u5165 \n    for (int i=1;i<=n;i++){\n        if (s[i]!=0) continue;//\u5df2\u7ecf\u8bbf\u95ee\u8fc7 \n        t=i;tmp=0;check=0;\n        while (!s[t]){\n            p[t]=tmp;//\u6807\u8bb0\u6b65\u6570 \n            s[t]=i;//\u6807\u8bb0s \n            t=a[t];//\u4e0b\u4e00\u4e2a\u70b9 \n            tmp++;//\u6b65\u6570\u589e\u52a0 \n            if (tmp>ans) {check=1;break;}//tmp\u5927\u4e8eans\u526a\u679d \n        }\n        if (s[t]!=i||check) continue;//\u65e7\u73af\u5224\u65ad \n        tmp2=tmp-p[t];\n        if (tmp2<ans) ans=tmp2;//\u5224\u5c0f \n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1477756715,
        "uid": 26096,
        "name": "CRyan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u7b2c\u4e8c\u6b21\u63d0\u4ea4\u4e86= =\uff0c\u96be\u9053\u662f\u56e0\u4e3a//\u5224\u65ad\u4e3a\u7eaf\u4ee3\u7801= =\uff0c\u597d\u6c14\u554a\u3002\n\n\u5148\u5c06\u5708\u524d\u7684\u94fe\u5168\u90e8\u53bb\u9664\uff0c\u5269\u4e0b\u7684\u4fbf\u662f\u4e00\u4e2a\u4e2a\u5708\u3002\u5bfb\u627e\u6700\u5c0f\u5708\u5373\u53ef\u3002\n\n```cpp\n#include<stdio.h>\n#define maxn 200010\nint n,ans=maxn,s=1;\nint data[maxn];//\u5b58\u653e\u56fe \nint count[maxn];//\u8bb0\u5f55\u5165\u5ea6 \ninline int read(void)//\u5feb\u901f\u8bfb\u5165  \n{\n    int x=0,sign=1;char ch=getchar();\n    while ((ch<'0'||ch>'9')) {if(ch=='-')sign=-1;ch=getchar();}      \n    while ((ch>='0'&&ch<='9')){(x*= 10)+=ch-'0'; ch=getchar();}\n    return x*sign;\n}\nint main()\n{\n    n=read();\n    for(int i=1;i<=n;i++)\n    {\n        int w=read();\n        data[i]=w;\n        count[data[i]]++;//\u8bb0\u5f55\u5165\u5ea6 \n    }\n    for(int i=1;i<=n;i++)\n    {\n        if(count[i]==0)//\u8bfb\u53d6\u67d0\u4e2a\u5f00\u5934 \n        {\n            count[i]=-1;//\u5c06\u5f00\u5934\u81f3\u5708\u524d\u7684\u94fe\u7684\u5165\u5ea6\u90fd\u8bbe\u4e3a-1\uff0c\u5f03\u6389 \n            int k=data[i];\n            while(count[k])\n            {\n                count[k]--;\n                if(count[k]==0)count[k]=-1;\n                else break;\n                k=data[k];\n            }\n        }\n```\n}//\u5904\u7406\u5b8c\u540e\u5269\u4e0b\u7684\u5165\u5ea6\u4e3a1\u7684\u90fd\u662f\u5708\n```cpp\n    for(int i=1;i<=n;i++)\n    {\n        if(count[i]>0)\n        {\n            s=1;\n            int k=data[i];\n            while(k!=i)\n            {\n                count[k]=-1;\n                s++;\n                k=data[k];\n            }\n            if(s<ans)ans=s;\n        }\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1471680190,
        "uid": 21237,
        "name": "JJYZLXJ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u4ece\u6bcf\u4e2a\u70b9\u5f00\u59cb\u8d70\uff0c\u53d1\u73b0\u73af\u4e86\u5c31\u66f4\u65b0\u6700\u5c0f\u957f\u5ea6\u3002\u56e0\u4e3a\u56fe\u6ca1\u6709\u5206\u53c9\uff0c\u6240\u4ee5\u6bcf\u4e2a\u70b9\u6700\u591a\u5728\u4e00\u4e2a\u73af\u91cc\uff0c\u56e0\u6b64\u53ef\u4ee5\u5224\u91cd\u3002\n\n\n\u590d\u6742\u5ea6O(n)\u662f\u663e\u7136\u7684\n\n\n```cpp\n\n#include <cstdio>\n#include <climits>\n#include <algorithm>\nusing namespace std;\n\nconst int size = 1e6;\nint next[size], dist[size], ix, minlen = INT_MAX;\n\nvoid walk(int t)\n{\n    int last = ix;\n    while(true)\n    {\n    if(dist[t])\n    {\n        if(dist[t] > last)\n        minlen = min(minlen, ix - dist[t] + 1);\n        return;\n    }\n    ix++; dist[t] = ix; t = next[t];\n    }\n}\n\nint main()\n{\n    int N;\n    scanf(\"%d\", &N);\n    for(int i = 1; i <= N; i ++)\n    scanf(\"%d\", &next[i]);\n  \n    for(int i = 1; i <= N; i ++)\n    walk(i);\n  \n    printf(\"%d\\n\", minlen);\n}\n\n<hr>\n```",
        "postTime": 1446900278,
        "uid": 3809,
        "name": "dram",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "~~A\u4e86\u8fd9\u9053\u9898\u4e00\u4e2a\u591a\u6708\u540e\u56de\u6765\u5199\u9898\u89e3\u4ee5\u793a\u7eaa\u5ff5~~\n\n\u9996\u5148\u611f\u8c22[\u8fd9\u4f4d\u5927\u4f6c\u63d0\u4f9b\u7684\u601d\u8def](https://www.luogu.com.cn/blog/user17123/solution-p2661)qwq\n\n\u4e8e\u662f\u6211\u6309\u7167\u8fd9\u4e2a\u601d\u8def\uff0c\u6253\u4e86\u8fd9\u4e48\u4e00\u4efd\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\nusing namespace std;\n\nint n,in[200005],ans=0x3f3f3f3f;//in\u8bb0\u5f55\u5165\u5ea6\uff0cans\u662f\u6700\u5c0f\u73af\u5927\u5c0f\nstruct node\n{\n\tint next;\n}t[200005];//\u94fe\u8868\u8bb0\u5f55\u540e\u7ee7\u8282\u70b9\nbool vis[200005];//\u5224\u65ad\u662f\u5426\u8d70\u8fc7\n\nint dfs(int x)//O(n)\u7684\u641c\u7d22\u904d\u5386\u56fe\n{\n\tif(vis[x])return 0;//\u4e0d\u80fd\u8d70\n\tvis[x]=1;//\u8d70\u8fc7\u4e86\n\treturn dfs(t[x].next)+1;//\u8d70\u4e86\u4e00\u6b65\uff0c\u6b65\u6570++\uff0c\u5e76\u8d70\u5230\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\n}\n\nvoid clear(int i)//\u5220\u9664\u8282\u70b9\n{\n\tvis[i]=1;//\u6807\u8bb0\uff0c\u4e4b\u540e\u4e0d\u7528\u8d70\u4e86\n\tin[t[i].next]--;//\u540e\u7ee7\u8282\u70b9\u5165\u5ea6--\n\tif(!in[t[i].next])//\u5982\u679c\u540e\u7ee7\u8282\u70b9\u4e5f\u5e94\u88ab\u5220\u9664\n\t\tclear(t[i].next);//\u5220\u9664\u540e\u7ee7\u8282\u70b9\n}\n\nint main()\n{\n\tios::sync_with_stdio(false);//cin\u52a0\u901f\u5668\n\tcin>>n;\n\tfor(register int i=1;i<=n;i++)\n\t\tcin>>t[i].next,in[t[i].next]++;//\u540e\u7ee7\u8282\u70b9\u5165\u5ea6++\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tif(!in[i])//\u5982\u679c\u5165\u5ea6\u4e3a0\uff0c\u5373\u4e3a\u4e00\u6761\u94fe\u7684\u5f00\u5934\n\t\t{\n\t\t\tclear(i);//\u987a\u7740\u94fe\u5220\u9664\u8282\u70b9\n\t\t}\n\t}\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tif(!vis[i])//\u5982\u679c\u80fd\u8d70\uff0c\u8bf4\u660e\u5728\u4e00\u4e2a\u72ec\u7acb\u73af\u4e0a\n\t\t\tans=min(ans,dfs(i));//\u66f4\u65b0\u7b54\u6848\n\t}\n\tcout<<ans;//\u8f93\u51fa\n\treturn 0;\n}\n```\n\u597d\u50cf\u6ca1\u6709\u95ee\u9898\uff0c\u5bf9\u5427\uff1f\n\n\u4f46\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u6e05\u6670\u5730\u53d1\u73b0\u2014\u2014\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/vx7xt6gh.png)\n\n\u8fd9\u7a76\u7adf\u662f~~\u4eba\u6027\u7684\u626d\u66f2\u8fd8\u662f\u9053\u5fb7\u7684\u6ca6\u4e27~~\u600e\u4e48\u56de\u4e8b\uff1f\n\n\u81ea\u51fahack\u6570\u636e\u5982\u4e0b\uff1a\n```\ninput:\n7\n2 3 4 5 6 3 5\n\nstd_output:\n4\n```\n\u826f\u5fc3\u5730\u9644\u4e0a\u56fe\u7247\u6ce8\u89e3\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/lz4otfqs.png)\n\n\u4f46\u662f\u2014\u2014\n```\nCrab_Dave's_output\n1061109567\uff08\u8bf4\u767d\u4e86\u5c31\u662f\u4e00\u5f00\u59cb\u8d4b\u76840x3f3f3f3f\uff09\n```\n\u8fd9\u4e2a\u60e8\u75db\u7684\u4e8b\u5b9e\u544a\u8bc9\u6211\u4eec\uff1a**\u6240\u6709\u7684\u70b9\u90fd\u88ab\u5220\u9664\u4e86\uff0c\u6ca1\u6709\u4efb\u4f55\u70b9\u80fd\u8fdb\u5165\uff01**\n\n\u601d\u8003\u8fd9\u662f\u4e3a\u4ec0\u4e48\uff1a\n\n\u6a21\u62df\u5220\u70b9\u7684\u64cd\u4f5c\u8fc7\u7a0b\u2014\u2014\n\n$i=1$\uff0c\u6b64\u65f6 $i$ \u53ef\u5220\uff0c\u6545\u5220\u9664\uff1b\n\n\u5220\u9664\u5b8c\u6bd5\u540e\u5982\u56fe\u6240\u793a\uff08\u7ea2\u8272\u6846\u4e2d\u90e8\u5206\u4e3a\u5269\u4e0b\u7684\u70b9\uff09\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/e7gw2i96.png)\n\n\u597d\uff0c\u90a3\u4e48\u6309\u7167\u4eba\u8111\u6a21\u62df\uff0c\u6211\u4eec\u5e94\u8be5\u8bbf\u95ee $3$ \u53f7\u8282\u70b9\u4e86\u5427......\n\n# \u4e14\u6162\uff01\n\n$i=2$\uff0c\u6b64\u65f6 $2$ \u53f7\u8282\u70b9\u5165\u5ea6\u4e3a0\uff0c\u6267\u884c\u5220\u9664\u2014\u2014\n\n\u4e8e\u662f $3$ \u53f7\u8282\u70b9\u5165\u5ea6\u518d\u6b21--\uff0c\u53d8\u4e3a0 -> \u5220\u9664 $3$ \u53f7\u8282\u70b9 -> ... -> \u5220\u6389\u6240\u6709\u8282\u70b9 -> \u7b54\u6848\u6ca1\u6709\u66f4\u65b0\uff0c\u8f93\u51fa0x3f3f3f3f\u3002\n\n\u4e3a\u4ec0\u4e48\uff1f\n\n**\u56e0\u4e3a\u4f60\u867d\u7136\u5220\u4e86 $2$ \u53f7\u8282\u70b9\uff0c\u4f46\u662f\u53ea\u662f\u5224\u65ad\u4e86\u4e0d\u80fd\u5b58\u5728\u4e8e\u73af\u4e0a\uff0c\u5e76\u6ca1\u6709\u5224\u65ad\u4e0d\u80fd\u518d\u5220\u3002**\n\n\u6539\u4e86\u5c31\u597d\u5566~\n\n72ms\uff0c\u8fd8\u7b97\u4f18\u79c0\u2014\u2014\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/73t7bjq0.png)\n\n\u9644\u4e0aAC\u4ee3\u7801\uff1a\n```\n#include<iostream>\nusing namespace std;\n\nint n,in[200005],ans=0x3f3f3f3f;//in\u8bb0\u5f55\u5165\u5ea6\uff0cans\u662f\u6700\u5c0f\u73af\u5927\u5c0f\nstruct node\n{\n\tint next;\n}t[200005];//\u94fe\u8868\u8bb0\u5f55\u540e\u7ee7\u8282\u70b9\nbool vis[200005];//\u5224\u65ad\u662f\u5426\u8d70\u8fc7\n\nint dfs(int x)//O(n)\u7684\u641c\u7d22\u904d\u5386\u56fe\n{\n\tif(vis[x])return 0;//\u4e0d\u80fd\u8d70\n\tvis[x]=1;//\u8d70\u8fc7\u4e86\n\treturn dfs(t[x].next)+1;//\u8d70\u4e86\u4e00\u6b65\uff0c\u6b65\u6570++\uff0c\u5e76\u8d70\u5230\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\n}\n\nvoid clear(int i)//\u5220\u9664\u8282\u70b9\n{\n\tvis[i]=1;//\u6807\u8bb0\uff0c\u4e4b\u540e\u4e0d\u7528\u8d70\u4e86\n\tin[t[i].next]--;//\u540e\u7ee7\u8282\u70b9\u5165\u5ea6--\n\tif(!in[t[i].next])//\u5982\u679c\u540e\u7ee7\u8282\u70b9\u4e5f\u5e94\u88ab\u5220\u9664\n\t\tclear(t[i].next);//\u5220\u9664\u540e\u7ee7\u8282\u70b9\n}\n\nint main()\n{\n\tios::sync_with_stdio(false);//cin\u52a0\u901f\u5668\n\tcin>>n;\n\tfor(register int i=1;i<=n;i++)\n\t\tcin>>t[i].next,in[t[i].next]++;//\u540e\u7ee7\u8282\u70b9\u5165\u5ea6++\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tif(!in[i]&&!vis[i])//\u6ce8\u610f\u8fd9\u4e00\u6b65\u54e6\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\n\t\t{\n\t\t\tclear(i);//\u987a\u7740\u94fe\u5220\u9664\u8282\u70b9\n\t\t}\n\t}\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tif(!vis[i])//\u5982\u679c\u80fd\u8d70\uff0c\u8bf4\u660e\u5728\u4e00\u4e2a\u72ec\u7acb\u73af\u4e0a\n\t\t\tans=min(ans,dfs(i));//\u66f4\u65b0\u7b54\u6848\n\t}\n\tcout<<ans;//\u8f93\u51fa\n\treturn 0;//\u7ed3\u675f\u4e86\u7f6a\u6076\u7684\u4e00\u751f\n}\n```\n\u5199\u4e861h+\uff0c\u8d44\u74f7\u4e00\u4e0b\u53edqwq",
        "postTime": 1575710484,
        "uid": 65502,
        "name": "Crab_Dave",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\u53ef\u4ee5\u5c06\u8fd9\u9053\u9898\u770b\u6210\u4e00\u4e2a\u5bfb\u627e\u73af\u7684\u8fc7\u7a0b\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u4eba\u6765\u8bf4\uff0c\u542c\u5230\u522b\u4eba\u8bf4\u4ed6\u81ea\u5df1\u7684\u751f\u65e5\u5c31\u76f8\u5f53\u4e8e\u8d70\u4e86\u4e00\u4e2a\u73af\u56de\u5230\u81ea\u8eab\uff0c\u8fd9\u91ccn\u6700\u5927\u53ef\u5230200000,\u53ef\u4ee5\u8fd0\u7528\u62d3\u6251\u6392\u5e8f\u7684\u601d\u8def\uff1a\u5728\u8f93\u5165\u4e2d\u7edf\u8ba1\u51fa\u6bcf\u4e2a\u70b9\u7684\u5165\u8bfb\uff0c\u63a5\u7740\u4e0d\u65ad\u641c\u7d22\u51fa\u5165\u8bfb\u4e3a0\u7684\u70b9\uff08\u4e0d\u5728\u73af\u4e0a\uff09\uff0c\u5e76\u63a5\u7740\u8ba9\u8ddf\u5b83\u76f8\u90bb\u7684\u70b9\u5165\u8bfb\u51cf\u4e00\uff0c\u6301\u7eed\u6b64\u8fc7\u7a0b\u76f4\u5230\u7ed3\u675f\uff08\u5df2\u627e\u5230\u73af\uff09\uff0c\u63a5\u7740\u7edf\u8ba1\u6240\u6709\u73af\u4e2d\u6700\u5c0f\u7684\u73af\u7684\u957f\u5ea6\u5373\u53ef\u3002\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn=200000+10,INF=2147483647;\nint n,a[maxn],rd[maxn],ans=INF;\nbool vis[maxn];\nvoid tuopu(int x){\n\twhile(!rd[x]){//\u627e\u5230&\u6807\u8bb0\u5165\u8bfb\u4e3a0\uff08\u4e0d\u5728\u73af\u4e0a\u7684\u70b9\uff09\n\t\tvis[x]=true;\n\t\trd[a[x]]--;//\u4e0e\u5b83\u76f8\u90bb\u7684\u90a3\u4e00\u4e2a\u70b9\u5165\u8bfb\u51cf\u4e00 PS:\u6b64\u9898\u53ea\u6709\u4e00\u70b9\u4e0e\u4e00\u70b9\u76f8\u8fde\n\t\tx=a[x];//\u7ee7\u7eed\u641c\n\t}\n\treturn ;\n}\nint dfs(int now){\n\tif(vis[now])\n\t\treturn 0;//\u5df2\u5728\u73af\u4e0a\u7684\u70b9\u957f\u5ea6\u4e3a0\n\tvis[now]=true;//b\u6807\u8bb0\n\treturn dfs(a[now])+1;//\u7edf\u8ba1\u7ecf\u8fc7\u70b9\u7684\u4e2a\u6570\n}\nint read(){//\u5feb\u8bfb\n\tint x=0,f=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){\n\t\tif(ch=='-')\n\t\t\tf=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9'){\n\t\tx=(x<<1)+(x<<3)+(ch^48);\n\t\tch=getchar();\n\t}\n\treturn x*f;\n}\nint main(){\n\tn=read();\n\tfor(int i=1;i<=n;i++){\n\t\ta[i]=read();\n\t\trd[a[i]]++;//\u9884\u5904\u7406\u6240\u6709\u70b9\u7684\u5165\u8bfb\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tif(!vis[i])\n\t\t\ttuopu(i);//\u62d3\u6251\u6c42\u73af\n\tfor(int i=1;i<=n;i++)\n\t\tif(!vis[i])//\u5982\u679c\u5c1a\u672a\u6807\u8bb0\n\t\t\tans=min(ans,dfs(i));//\u7edf\u8ba1\u51fa\u6700\u5c0f\u7684\u7b54\u6848 PS:\u56e0\u6bcf\u4e00\u4e2a\u73af\u4e2d\u73af\u4e0a\u7684\u70b9\u90fd\u4f1a\u5728\u904d\u5386\u4e2d\u6807\u8bb0\uff0c\u6240\u4ee5\u5e76\u4e0d\u4f1a\u91cd\u590d\u8dd1\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1573286187,
        "uid": 35747,
        "name": "\u5931\u4e4b_\u8fde\u5fc3",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u7a0d\u5fae\u60f3\u4e00\u4e0b\u5c31\u80fd\u77e5\u9053\uff0c\u4e00\u4e2a\u4eba\u5982\u679c\u5f97\u77e5\u4e86\u81ea\u5df1\u7684\u4fe1\u606f\uff0c\u90a3\u4e48\u4ed6\u4e00\u5b9a\u5728\u4e00\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u4e2d\uff0c\u5e76\u4e14\u4ed6\u63a5\u53d7\u5230\u4fe1\u606f\u7684\u65f6\u95f4\u5c31\u662f\u5f3a\u8054\u901a\u5206\u91cf\u7684\u5927\u5c0f\n\n\u539f\u56e0\uff1a\u9996\u5148\uff0c\u81ea\u5df1\u7684\u4fe1\u606f\u4f20\u9012\u7ed9\u81ea\u5df1\u8bf4\u660e\u4ed6\u4e00\u5b9a\u81f3\u5c11\u5728\u4e00\u4e2a\u73af\u4e2d\u3002\u8003\u8651\u6b64\u9898\u6bcf\u4e2a\u70b9\u6709\u4e14\u4ec5\u6709\u4e00\u6761\u51fa\u8fb9\uff0c\u56e0\u6b64\u6bcf\u4e2a\u73af\u90fd\u662f\u539f\u56fe\u7684\u6781\u5927\u5f3a\u8054\u901a\u5b50\u56fe\u3002\u56e0\u4e3a\u5982\u679c\u4e00\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u4e0d\u662f\u6781\u5927\u7684\uff0c\u5c31\u610f\u5473\u7740\u8fd9\u4e2a\u5206\u91cf\u4e2d\u7684\u67d0\u4e2a\u70b9\u5fc5\u987b\u6709\u4e00\u6761\u51fa\u8fb9\u8fde\u5411\u5176\u4ed6\u70b9\uff0c\u800c\u8fd9\u53c8\u4e0e\u9898\u8bbe\u77db\u76fe\u3002\n\n\u76f4\u63a5\u4e0a\u677f\u5b50\uff0c\u8bb0\u5f55\u4ec0\u4e48\u7684\u90fd\u4e0d\u9700\u8981\u3002\u9898\u76ee\u5df2\u7ecf\u4fdd\u8bc1\u4e86\u6ca1\u6709\u81ea\u73af\uff0c\u6240\u4ee5\u6bcf\u4e2a\u5927\u5c0f\u4e3a$1$\u7684\u5f3a\u8054\u901a\u5206\u91cf\u90fd\u4e0d\u9700\u8981\u5224\u65ad\uff0c\u76f4\u63a5\u5ffd\u7565\u5373\u53ef\uff0c\u7b54\u6848\u5373\u4e3a\u6240\u6709\u5f3a\u8054\u901a\u5206\u91cf\u5404\u81ea\u5305\u542b\u7684\u70b9\u6570\u91cf\u7684\u6700\u5c0f\u503c\n\n\u597d\u50cf\u548cdfs\u6ca1\u6709\u4ec0\u4e48\u533a\u522b\u4e86\u3002\u3002\u3002\uff08\u5c31\u662f\u591a\u4e86\u4e00\u5806\u5e38\u6570\uff09\n\n```cpp\n#include <bits/stdc++.h>\n\n#define N 210000\n\nusing namespace std;\n\nint dfn[N],low[N],num,top;//\u627e\u6700\u5c0f\u73af\nint Stack[N],ins[N];\n\nint ver[N],nex[N],head[N],nu;\n\nint ans,n,x2;\n\ninline void add(int x,int y){\n\tver[++nu]=y;nex[nu]=head[x];head[x]=nu;\n}\n\ninline void tarjan(int x){//tarjan\u677f\u5b50\n\tdfn[x]=low[x]=++num;\n\tStack[++top]=x,ins[x]=1;\n\tfor(int i=head[x];i;i=nex[i])\n\t{\n\t\tint y=ver[i];\n\t\tif(!dfn[y]){\n\t\t\ttarjan(y);\n\t\t\tlow[x]=min(low[x],low[y]);\n\t\t}\n\t\telse if(ins[y])\n\t\t  low[x]=min(low[x],dfn[y]);\n\t}\n\tif(dfn[x]==low[x]){\n\t\tint cnt=0,y=0;\n\t\tdo{\n\t\t\ty=Stack[top--],ins[y]=0;\n\t\t\tcnt++;\n\t\t}while(x!=y);\n\t\tif(cnt!=1)\n\t\tans=min(cnt,ans);\n\t}\n}\n\ninline int read(){\n\tint x=0;char c=getchar();bool y=1;\n\tfor(;c<'0' || c>'9';c=getchar()) if(c=='-') y=0;\n\tfor(;c>='0' && c<='9';c=getchar()) x=(x<<1)+(x<<3)+c-48;\n\tif(y) return x;\n\treturn -x;\n}\n\nint main(){\n\tans=0x7f7f7f7f;\n\tn=read();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tx2=read();\n\t\tadd(i,x2);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tif(!dfn[i]) tarjan(i);\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1566098616,
        "uid": 55357,
        "name": "Thaumaturge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "## \u9996\u5148\uff0c\u770b\u4e00\u4e0b\u9898\u76ee\n\n \u4e00\u5806\u4eba\u5728\u4f20\u4e00\u4e2a\u4e1c\u897f\n\n\n**\u6211\u2192\u2192\u6211\u670b\u53cb\u2192\u2192\u6211\u670b\u53cb\u7684\u670b\u53cb\u2192\u2192\u6211\u53e6\u4e00\u4e2a\u670b\u53cb\u2192\u2192\u6211**\n\n\n\u5c31\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f20\u9012\u5173\u7cfb\n\n**\u5f88\u663e\u7136\uff0c\u8fd9\u6784\u6210\u4e86\u4e00\u4e2a\u73af\uff08\u5708\uff09**\n\n\u7136\u540e\u5f88\u5bb9\u6613\u60f3\u5230\u628a\u8fd9\u4e9b\u70b9\u5f04\u6210\u4e00\u4e2a\u5e76\u67e5\u96c6\uff08\u6bd5\u7adf\u5728\u4e00\u4e2a\u5708\u5185\uff09\uff0c\u7136\u540e\u6c42\u6700\u5c0f\u7684\u5e76\u67e5\u96c6\n\n~~\u7136\u540e\u4f60\u4f1a\u53d1\u73b0\u4f60\u4e0d\u4f1a\u600e\u4e48\u5f04\u6210\u4e00\u4e2a\u5e76\u67e5\u96c6..~~\n\n \u4e8e\u662f\u6211\u4eec\u6362\u4e00\u4e2a\u601d\u7ef4\u96be\u5ea6\u4f4e\u4e00\u70b9\u7684\u7b97\u6cd5\n## Tarjan\u6c42\u5f3a\u8fde\u901a\u5206\u91cf\n\n\u8be6\u89c1\u4ee3\u7801\n\n```c\n#include<cstdio>\n#include<iostream>\n#include<stack>\n#define N 200010\nusing namespace std;\nstack<int> st;\nint cut=0,sjc=0,qlt=0;\nint dad[N],sum[N],head[N],low[N],dfn[N],vis[N];\nstruct node\n{\n   int ne,to;\n}e[N<<1];\nvoid add(int u,int v)\n{\n   e[++cut].ne = head[u];\n   e[cut].to = v;\n   head[u] =cut;\n}\nint MIN(int x,int y)\n{\n   return x > y ? y : x;\n   // \u82e5 x>y \u4e3a\u771f(true),\u90a3\u4e48\u8fd4\u56de y,\u4e3a\u5047(false)\u5c31\u8fd4\u56de x \n}\nvoid Tarjan(int now)\n{\n   int i,k;\n   sjc++; //\u53c8\u8d70\u8fc7\u4e86\u4e00\u4e2a\u65f6\u95f4\u70b9\n   low[now] = sjc;\n   dfn[now] = sjc;//\u66f4\u65b0 low\u503c\u4e0edfn\u503c\n   vis[now] = 1;//\u6807\u8bb0\u8d70\u8fc7\n   st.push(now);//\u5165\u6808\n   for(i = head[now]; i ;i = e[i].ne)\n   {\n      if(dfn[e[i].to] == 0)//\u4e00\u4e2a\u70b9\u6ca1\u6709\u5230\u8fc7\n      {\n         Tarjan(e[i].to);\n         low[now] = MIN(low[now],low[e[i].to]);\n      // low[now] = MIN(low[now],dfn[e[i].to]);\n         //\u4e0a\u9762\u4e24\u53e5\u4ee3\u7801\u4efb\u53d6\u4e00\u53e5\u5373\u53ef\n         //\u53d6\u66f4\u5c0f\u7684 low \u503c\n      }\n      if(vis[e[i].to] != 0) //\u5982\u679c\u4e00\u4e2a\u70b9\u5df2\u7ecf\u5230\u8fc7\u4e86\n      {\n         low[now] = MIN(low[now],low[e[i].to]);\n         //\u76f4\u63a5\u53d6\u6700\u5c0f\u503c\n      }\n   }\n   //\u5f53\u627e\u5230\u4e00\u4e2a low \u4e0e dfn \u76f8\u7b49\u7684\u70b9\n   //\u5c31\u628a\u6808\u4e2d now \u4e4b\u540e\u7684\u5143\u7d20\u90fd\u8bb0\u4e3a\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\n   if(low[now] == dfn[now])\n   {\n      qlt++;\n      while(!st.empty())\n      {\n         k = st.top();\n         st.pop();\n         //\u53d6\u51fa\u6808\u9876\u5143\u7d20\u5e76\u5f39\u51fa\n         dad[k] = qlt;\n         //\u628a k(\u6808\u9876\u5143\u7d20) \u653e\u5165\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\n         sum[qlt]++;\n         //\u6bcf\u65b0\u52a0\u5165\u4e00\u4e2a\u70b9\uff0c\u8fd9\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6743\u503c\u5c31\u52a0\u4e00\n         if(k == now)\n         {\n            return ;\n         }\n      }\n   }\n}\nint main()\n{\n   int i,n,cc,ans = 999999999;\n   scanf(\"%d\",&n);\n   for(i=1;i<=n;i++)\n   {\n      scanf(\"%d\",&cc);\n      add(i,cc);\n      //\u5efa\u4e00\u4e2a\u6709\u5411\u56fe\n   }\n   for(i=1;i<=n;i++)\n   {\n      //\u627e\u5230\u4e00\u4e2a\u6ca1\u6709\u8d70\u8fc7\u7684\u70b9,\u8fdb\u884c\u67e5\u627e\n      if(dfn[i] == 0)\n      {\n         Tarjan(i);\n      }\n   }\n   //\u679a\u4e3e\u627e\u51fa\u6765\u7684\u6240\u6709 \u5f3a\u8fde\u901a\u5206\u91cf(qlt)\n   //\u627e\u51fa\u6700\u5c0f\u7684 \u5f3a\u8fde\u901a\u5206\u91cf\u6743\u503c \u5c31OK\u5566\n   for(i=1;i<=qlt;i++)\n   {\n      if(sum[i] > 1)//\u53ea\u67091\u4e2a\u70b9\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u5c31\u4e0d\u7b97\u5728\u5185\u4e86\n      //\u4f20\u51fa\u53bb\u4e86\u5c31\u4e0d\u56de\u6765\u4e86\n      {\n         ans = MIN(ans,sum[i]);\n      }\n   }\n   printf(\"%d\\n\",ans);\n   return 0;\n}\n\n```\n\n",
        "postTime": 1564537863,
        "uid": 179007,
        "name": "lacunes",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u8981\u6c42\u4f60\u6c42\u6bcf\u4e00\u4e2a\u70b9\u6240\u5f62\u6210\u7684\u6700\u5c0f\u7684\u73af\u3002\n\n\u5f88\u663e\u7136\u66b4\u529b\u662f $O(n^2)$ \u7684,\u800c\u4e14\u4f60\u8fd8\u8981\u6e05\u7a7a\u6807\u8bb0,\u66b4\u529b\u770b\u4f3c\u8fc7\u4e0d\u4e86\u3002\n\n\u6211\u5728\u8003\u573a\u4e0a\u628a\u60c5\u51b5\u6807\u8bb0\u653e\u5728 $\\texttt{Dfs}$ \u91cc\u5c31\u98de\u8fc7\u53bb\u4e86\u3002\n\n```pascal\nUses math;\n\nConst\n    total=100000 << 2;\n\nvar\n    ask:array[-1..total] of boolean;\n    num:array[-1..total] of longint;\n    i,j,n,k,ans:longint;\n\nprocedure Dfs(x,reach:longint;var dis:longint);\nbegin\n    if (x<>reach)and(ask[x]) then begin ask[reach]:=True; dis:=ans; exit; end;\n    ask[x]:=True; if ask[reach] then exit;\n    inc(dis); Dfs(num[x],reach,dis); ask[x]:=False;\nend;\n\nbegin\n    read(n); ans:=maxlongint div 843;\n    for i:=1 to n do read(num[i]);\n    for i:=1 to n do begin k:=0; Dfs(num[i],i,k); ans:=min(ans,k+1); end;\n    writeln(ans);\nend.\n```",
        "postTime": 1558499382,
        "uid": 77760,
        "name": "arfa",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u5341\u5206\u5947\u7279\u7684\u9012\u5f52\u505a\u6cd5\n\n\u8003\u8651\u8fb9\u6570\u4e3an,\u70b9\u6570\u4e3an.\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u82e5\u4e00\u70b9\u5165\u5ea6\u4e3a0,\u5219\u5220\u53bb\u8be5\u70b9\u4ee5\u53ca\u5b83\u7684\u51fa\u8fb9\u5bf9\u56fe\u4e0a\u7684\u73af\u90fd\u6ca1\u6709\u5f71\u54cd.\n\n\u5728\u5bf9\u5168\u56fe\u8fdb\u884c\u4e00\u6b21\u5220\u70b9\u5220\u8fb9\u4e4b\u540e\u5c31\u53ef\u4ee5\u5f97\u5230\u65b0\u56fe,\u5176\u4e2d\u53ef\u80fd\u542b\u6709\u65b0\u7684\u5165\u5ea6\u4e3a0\u7684\u70b9.\n\n\u6240\u4ee5\u540c\u6837\u7ee7\u7eed\u5904\u7406,\u76f4\u5230\u56fe\u4e2d\u4e0d\u5b58\u5728\u5165\u5ea6\u4e3a0\u7684\u70b9.\n\n\u5982\u4e0b\u56fe\u64cd\u4f5c\n\n![\u6240\u4ee5\u9012\u5f52\u5904\u7406\u5982\u56fe](https://cdn.luogu.com.cn/upload/pic/36538.png)\n\n\u6b64\u65f6\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u56fe,\u5176\u51fa\u5ea6\u5165\u5ea6\u5168\u4e3a1\n\n\u4e4b\u540e\u518d\u6b21\u7b80\u5355\u904d\u5386\u4e00\u904d\u73af\u5c31\u53ef\u4ee5\u6c42\u51fa\u7b54\u6848\n\n\u4e0b\u9762\u662f\u6e23\u6e23\u4ee3\u7801\n\u6ca1\u5199\u5feb\u8bfb,\u53ef\u80fd\u6709\u70b9\u6162\n\n\u7528\u65f6: 119ms / \u5185\u5b58: 2320KB\n\n```\n#include <iostream>\n#define N 200005\n#define INF 200005\nusing namespace std;\nint to[N],indgree[N];\nbool visit[N];\nint n;\nvoid delzero(){//\u5220\u70b9\u64cd\u4f5c\n\tbool flag=1;\n\tfor (int i=1;i<=n;i++){\n\t\tif (indgree[i]==0&&!visit[i]){\n\t\t\tflag=0;\n\t\t\tvisit[i]=1;\n\t\t\tindgree[to[i]]--;\n\t\t}\n\t}\n\tif (flag) return;\n\telse delzero();\n\treturn;\n}\nint ans=INF;\nvoid search(int start,int now,int step){//\u904d\u5386\u73af\u64cd\u4f5c\n\tif (start==now) {ans=min(ans,step);return;}\n\tvisit[now]=1;\n\tsearch(start,to[now],step+1);\n\treturn;\n}\nint main(){\n\tcin>>n;\n\tfor (int i=1;i<=n;i++){\n\t\tcin>>to[i];//\u6e23\u6e23\u8f93\u5165\n\t\tindgree[to[i]]++;//\u8ba1\u7b97\u5165\u5ea6\n\t}\n\tdelzero();//\u5220\u70b9\n\tfor (int i=1;i<=n;i++){\n\t\tif(!visit[i]){\n\t\t\tvisit[i]=1;\n\t\t\tsearch(i,to[i],1);//\u904d\u5386\u73af\n            //\u662f(i,to[i],1)\u800c\u4e0d\u662f(i,i,0)\u88ab\u5751\u4e86\n\t\t}\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1538844011,
        "uid": 25169,
        "name": "mureZ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "## \u7075\u611f\u7684\u6765\u6e90\n\n\u539f\u6765\u5199\u8fd9\u9053\u9898\u7684\u65f6\u5019\uff0c\u8fd8\u662f\u6309\u7167\u5927\u5bb6\u4f20\u7edf\u7684\u601d\u8def\uff0c\u5e76\u67e5\u96c6/BFS\u4ec0\u4e48\u7684\uff0c\u4f46\u53d1\u73b0\u81ea\u5df1\u4e00\u76f4\u505c\u7559\u572880\u5206\uff0c\u4e0d\u77e5\u9053\u4ec0\u4e48\u539f\u56e0\uff0c~~\u53ef\u4ee5\u770b\u6211\u7684\u63d0\u4ea4\u8bb0\u5f55~~\uff0c\u4eca\u5929\u6765\u770b\u7684\u65f6\u5019\uff0c\u5076\u7136\u53d1\u73b0\u5176\u5b9e\u53ef\u4ee5\u7528\u7f29\u70b9\u7684\u7b97\u6cd5\u6c42\u51fa\u672c\u9898\uff0c\u8bd5\u4e86\u4e00\u4e0b\uff0c\u901a\u8fc7\u4e86\uff0c\u7136\u540e\u5c31\u628a\u8fd9\u79cd\u8111\u6d1e\u5927\u5f00\u7684\u505a\u6cd5\u5206\u4eab\u7ed9\u5927\u5bb6\u3002\n\n\u987a\u4fbf\u7ed9\u5927\u5bb6\u63a8\u8350\u4e00\u4e0b\u7f29\u70b9\u7684Kosaraju\u7b97\u6cd5\uff0c\u76f8\u5bf9\u4e8eTarjan\u7b97\u6cd5\u5bb9\u6613\u7406\u89e3\uff0c\u800c\u4e14\u4e00\u5e76\u53ef\u4ee5\u6c42\u51fa\u5f3a\u8fde\u901a\u5206\u91cf\u62d3\u6251\u6392\u5e8f\u3002\n\n## \u5176\u5b9e\u53ef\u4ee5\u7528\u7f29\u70b9\u7684\u7b97\u6cd5\u6c42\u51fa\u672c\u9898\n\n\u8fd9\u9053\u9898\u5176\u5b9e\u5c31\u662f\uff0c\u7ed9\u4e00\u5f20\u56fe\uff0c\u6c42\u4e00\u4e2a\u6700\u5c0f\u7684\u56de\u8def\u7684\u70b9\u7684\u4e2a\u6570\uff0c\u4e0d\u8fc7\u8fd9\u4e2a\u9898\u6709\u70b9\u7279\u6b8a\uff0c\u9898\u76ee\u7ed9\u51fa\u7684\u56fe**\u6bcf\u4e2a\u70b9\u53ea\u6709\u4e00\u4e2a\u51fa\u5ea6**\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u5e76\u67e5\u96c6\u7b49\u7b97\u6cd5\u6c42\u51fa\uff0c\u4e0d\u8fc7\u7531\u4e8e\u8fd9\u4e2a\u7279\u6b8a\u7684\u6027\u8d28\uff0c\u5176\u5b9e\u4e5f\u53ef\u4ee5\u7528\u5f3a\u8fde\u901a\u5206\u91cf\u505a\u51fa\u6765\uff0c\u5566\u5566~\u3002\n\n\u81ea\u5df1\u53ef\u4ee5\u8bd5\u8bd5\u53bb\u8bc1\u660e\u4e00\u4e0b\uff0c\u5728\u8fd9\u79cd\u7c7b\u578b\u7684\u56fe\u91cc\u9762\uff0c\u4e00\u4e2a\u56fe\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u4e00\u5b9a\u662f\u4e00\u4e2a\u56fe\u7684\u56de\u8def\u3002\u6211\u8fd9\u91cc\u5c31\u4e0d\u8bc1\u660e\u5566\u3002\n\n\u7136\u540e\u8bb2\u4e00\u4e0b\u600e\u4e48\u7f29\u70b9\u5427~\n\n## Kosaraju\u7b97\u6cd5\n\n\u5728\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u7b97\u6cd5\u4e2d\uff0c\u5f88\u591a\u4eba\u63d0\u53ca\u4e86Tarjan\u7b97\u6cd5\uff0c\u6211\u8fd9\u91cc\u8bb2\u8bb2Kosaraju\u7b97\u6cd5\u3002\n\n\u76f8\u5bf9\u4e8eTarjan\u7b97\u6cd5\uff0cKosaraju\u7b97\u6cd5\u66f4\u5bb9\u6613\u7406\u89e3\uff0c\u539f\u7406\u975e\u5e38\u7b80\u5355\uff0c\u5c31\u662f\u5bf9\u4e00\u5f20\u6709\u5411\u56fe\u8fdb\u884c\u4e24\u6b21DFS\u904d\u5386\u3002\n\n\u4e0b\u9762\u6211\u4eec\u7528\u4e00\u5f20\u56fe\u4f5c\u4e3a\u5b9e\u4f8b\uff0c\u8bb2\u89e3Kosaraju\u7b97\u6cd5\u7684\u5b9e\u73b0\u8fc7\u7a0b\uff1a\n\n![](https://img-blog.csdn.net/20180803163157651?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMyNDU0MzI=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n\n\u8fd9\u662f\u4e00\u5f20\u6709\u5411\u56fe\uff0c\u5bf9\u4e8e\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u6211\u4eec\u4e00\u773c\u5c31\u770b\u51fa\u6765\u4e86\uff0c\u800c\u673a\u5668\u6709\u6ca1\u6709\u773c\u775b\uff0c\u90a3\u600e\u4e48\u8bc6\u522b\u5462\uff1f\n\n\u9996\u5148\u6211\u4eec\u4ee5\u4ece\u4e00\u53f7\u5230\u4e94\u53f7\u8282\u70b9\u987a\u5e8f\u8fdb\u884cDFS\uff0c\u6211\u4eec\u7528dfn\u6570\u7ec4\u8bb0\u5f55dfs\u8bbf\u95ee\u9000\u51fa\u7684\u8bb0\u5f55\u3002\n\n\u904d\u5386\u4e4b\u540e\u8bb0\u5f55\uff0c\u6211\u4eec\u8bb0\u5f55\u4e0b\u5148\u540e\u9000\u51fa\u8bb0\u5f55\u4e3a [5][3][2][4][1]\u3002\n\n\u7136\u540e\u6211\u4eec\u5bf9\u56fe\u7684\u8fb9\u53cd\u5411\uff0c\u5f97\u5230\u53cd\u56fe\uff1a\n\n![](https://img-blog.csdn.net/20180803163845788?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMyNDU0MzI=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n\n\u6211\u4eec\u7528\u5f97\u5230dfn\u6570\u7ec4\u6309\u7167**\u53cd\u5411**\u987a\u5e8f\u518d\u6b21\u904d\u5386\u8fd9\u5f20\u53cd\u56fe\uff0c\u540c\u6b21dfs\u904d\u5386\u5230\u7684\u70b9\u7684\u96c6\u5408\u662f\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u3002\n\n\u82e5\u8fd9\u6837\u8fd8\u662f\u4e0d\u61c2\uff0c\u6211\u4eec\u7ee7\u7eed\u6a21\u62df\u8fc7\u7a0b\uff1a\n\n\u6211\u4eec\u4ee5[1][4][2][3][5]\u7684\u987a\u5e8f\u5bf9\u53cd\u56fedfs\u3002\n\n\u6211\u4eec\u4ee51\u4e3a\u8d77\u70b9\u904d\u5386\uff0c\u5f97\u5230\u96c6\u5408{1,4}\uff0c\u662f\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u3002\n\n\u6211\u4eec\u540e\u9762\u518d\u4ee52\u4e3a\u8d77\u70b9\u904d\u5386\uff0c\u5f97\u5230\u96c6\u5408{2,5,3}\uff0c\u4e5f\u662f\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u8fd9\u6837\uff0c\u6211\u4eec\u7684\u7b97\u6cd5\u5c31\u5b9e\u73b0\u4e86\u3002\n\n\u8fd9\u9053\u9898\u53ea\u9700\u5728\u7b2c\u4e8c\u6b21\u904d\u5386\u7684\u65f6\u5019\u53d6\u6bcf\u6b21dfs\u904d\u5386\u5230\u7684\u6700\u5c0f\u503c\u5c31\u53ef\u4ee5\u5566\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(2n)$\u3002\n\n## \u503c\u5f97\u6ce8\u610f\u7684\u5730\u65b9\n\n\u4f46\u662f\u8fd9\u4e2a\u9898\u76ee\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u518d\u6c42\u8fd9\u4e2a\u9898\u76ee\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u65f6\u5019\uff0c\u6709\u53ef\u80fd\u5b58\u5728\u65e0\u6cd5\u7f29\u70b9\u7684\u70b9\uff0c\u56e0\u6b64**\u5728\u7b2c\u4e8c\u6b21dfs\u904d\u5386\u4e4b\u540e\u5f97\u5230\u7684\u503c\u662f1\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5fc5\u987b\u628a\u5b83\u7ed9\u7279\u5224\u4e00\u4e0b\u3002**\uff0c\u56e0\u4e3a\u9898\u4e2d\u7ed9\u7684\u56fe\u6ca1\u6709\u81ea\u73af\uff0c\u6240\u4ee5dfs\u5f97\u52301\u7684\u503c\u90fd\u662f\u4e0d\u5408\u6cd5\u7684\u3002\n\np.s.\u53ef\u4ee5\u770b\u770b\u6837\u4f8b\uff0c\u82e5\u4e0d\u52a0\u6b64\u7279\u5224\uff0c\u7b54\u6848\u5c31\u662f1\uff0c\u800c\u6b63\u786e\u7b54\u6848\u662f3\u3002\n\n## \u4ee3\u7801\n\n\u597d\u4e86\uff0c\u4e0d\u591a\u8bf4\u4e86\uff0c\u653e\u51fa\u672c\u9898\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define gmin(x,y) x<y?x:y\n#define gmax(x,y) x<y?y:x\n\nstruct node{\n\tint v,next;\n}edge[200010],edge1[200010];\nint dfn[200010],head[200010],head1[200010],e_num,n,ans,dfn_n,cnt;\nbool vis[200010];\n//dfn\u8bb0\u5f55\u9000\u51fa\u8bb0\u5f55 \n\ninline int read(){\n\tchar c=getchar();\n\tint f=1,x=0;\n\twhile(!isdigit(c)){\n\t\tif(c=='-')\n\t\t\tf=-1;\n\t\tc=getchar();\n\t}\n\twhile(isdigit(c)){\n\t\tx*=10;\n\t\tx+=c-48;\n\t\tc=getchar();\n\t}\n\treturn f*x;\n}\n\ninline void add(int u,int v){\n\tedge[++e_num].v=v;\n\tedge[e_num].next=head[u];\n\thead[u]=e_num;\n\t//\u5efa\u7acb\u53cd\u56fe \n\tedge1[e_num].v=u;\n\tedge1[e_num].next=head1[v];\n\thead1[v]=e_num;\n}\n\nvoid dfs(int k){\n\tvis[k]=true;\n\tfor(int i=head[k];i;i=edge[i].next){\n\t\tif(!vis[edge[i].v]){\n\t\t\tdfs(edge[i].v);\n\t\t}\n\t}\n\tdfn[++dfn_n]=k;\n}\n\nvoid dfs1(int k){\n\tcnt++;\n\tvis[k]=true;\n\tfor(int i=head1[k];i;i=edge1[i].next){\n\t\tif(!vis[edge1[i].v])\n\t\t\tdfs1(edge1[i].v);\n\t}\n}\n\ninline void kosaraju(){\n\tfor(register int i=1;i<=n;i++)\n\t\tif(!vis[i])\n\t\t\tdfs(i);\n\tmemset(vis,0,sizeof(vis));\n\tans=200001;\n\tfor(register int i=n;i>=1;i--){\n\t\tcnt=0;\n\t\tif(!vis[dfn[i]]){\n\t\t\tdfs1(dfn[i]);\n\t\t\tif(cnt>1)\n\t\t\t\tans=gmin(cnt,ans);\n\t\t}\n\t}\n}\n\nint main(){\n\tn=read();\n\tint tmp;\n\tfor(register int i=1;i<=n;i++){\n\t\ttmp=read();\n\t\tadd(i,tmp);\n\t}\n\tkosaraju();\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n\n```\n\n## \u5176\u4e2d\u7684\u7b97\u6cd5\u5b9e\u73b0\u90e8\u5206\u9009\u81ea\u672c\u4eba\u535a\u5ba2\nhttps://blog.csdn.net/u013245432/article/details/81390154",
        "postTime": 1534669879,
        "uid": 6303,
        "name": "feicx",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u8868\u793a\u4e4b\u524d\u4e0b\u9762\u7684\u9898\u89e3\u6709\u4e00\u5904\u9519\u8bef\uff0c\u4e0d\u77e5\u5927\u5bb6\u627e\u5230\u4e86\u6ca1\u6709\uff0c\u7136\u540e\u89c9\u5f97\u975e\u5e38\u5c34\u5c2c\n\n\u00b7\u00b7\u00b7\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define N 200000+5\nbool p[N];\nint a[N],book[N],mina=10000007;\nvoid dfs(int x,int y)\n{\n    if(book[x]!=0&&p[x]==false)\n    {\n        mina=min(y-book[a[x]],mina);\n        return ;\n    }\n    if(book[x]!=0) return ;\n    p[x]=true;\n    book[a[x]]=y;\n    dfs(a[x],y+1);\n    p[x]=true;\n    return ;\n}\nint main()\n{\n    int m,n;\n    cin>>n;\n    for(int i=1;i<=n;i++)\n        cin>>a[i];\n    for(int i=1;i<=n;i++)\n        if(book[i]==0) dfs(i,1);\n        else p[i]=true;\n    cout<<mina;\n    return 0;\n}\n```\n\u00b7\u00b7\u00b7\n\u8fd9\u91cc\u6709\u4e00\u5904\u9519\u8bef\uff0c\u5728\u4e8ep[i]\u4e00\u5f00\u59cb\u88ab\u7f6e\u4e3atrue\uff0c\u7136\u800c\u53bb\u6389\u8fd9\u4e00\u4e2a\u5730\u65b9\u4e4b\u540e\uff0c\u8fd8\u662fWA.....\n\n\u7136\u540e\u6ce8\u610f\u5230book\u6570\u7ec4\u8bb0\u5f55\u7684\u4e3a\u65f6\u95f4\uff0c\u6211\u5176\u5b9e\u4e00\u5f00\u59cb\u6709\u4e00\u5904\u5730\u65b9\u6ca1\u6709\u8bb2\u597d\n\n\u5c31\u662f\u5173\u4e8e\u7528book\u6570\u7ec4\u6765\u8fdb\u884c\u5224\u91cd\n\n\u8fd9\u91cc\u8003\u8651\u65b0\u5efa\u4e00\u4e2aX\u6570\u7ec4\u7528\u4e8e\u8bb0\u5f55\u90a3\u4e9b\u70b9\u8bbf\u95ee\u8fc7......\n\n\u800c\u4e14\u53ea\u8bb0\u5f55\u641c\u7d22\u65f6\u8bbf\u95ee\u8fc7\u7684\u70b9\n\n\u533a\u522b\u4e0ep\u6570\u7ec4\u7684\u662fp\u6570\u7ec4\u662f\u5728\u56de\u6eaf\u65f6\u66f4\u65b0\uff0c\u800cs\u6570\u7ec4\u662f\u4e00\u65e6\u8bbf\u95ee\u5c31\u4f1a\u66f4\u65b0\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u5bf9\u4e8e\u53e6\u4e00\u70b9\u63a5\u4e0a\u73af\u65f6\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7s\u6570\u7ec4\u53bb\u5224\u65ad\u4e86\n\n\u00b7\u00b7\u00b7\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define N 200000+5\nbool s[N],p[N];\nint a[N],book[N],mina=10000007,m;\nvoid dfs(int x,int y)\n{\n    if(s[x]==true&&p[x]==false)\n    {\n        mina=min(y-book[a[x]],t);\n        return ;\n    }\n    if(s[x]==true) return ;\n    s[x]=true;\n    book[a[x]]=y;\n    dfs(a[x],y+1);\n    p[x]=true;\n    return ;\n}\nint main()\n{\n    int m,n;\n    cin>>n;\n    for(int i=1;i<=n;i++)\n        cin>>a[i];\n    for(int i=1;i<=n;i++)\n        if(book[i]==0) dfs(i,1);\n        else p[i]=true;\n    cout<<mina;\n    return 0;\n}\n```\n\u00b7\u00b7\u00b7\n",
        "postTime": 1510118468,
        "uid": 30036,
        "name": "Soulist",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u6211\u7684\u65b9\u6cd5\u662f\u4e00\u79cd\u7c7b\u4f3c\u4e8eTarjan\u7684\u601d\u8def\uff0c\u4e5f\u53ef\u4ee5\u770b\u6210\u662fKesdiaelKen\u540c\u5b66\u65b9\u6cd5\u7684\u4e00\u4e2a\u4f18\u5316\u3002\n\n\u6b64\u9898\u7684\u5b9e\u8d28\u5c31\u662f\u6c42\u56fe\u4e2d\u6700\u5c0f\u7684\u73af\u8def\u7684\u957f\u5ea6\uff0c\u6bcf\u4e2a\u8282\u70b9\u6709\u4e14\u4e00\u6761\u51fa\u8fb9\u3002\u5173\u4e8e\u662f\u5426\u53ef\u4ee5\u5b58\u5728\u81ea\u73af\u7684\u95ee\u9898\uff0c\u6211\u7684\u7b54\u6848\u662f\u53ef\u4ee5\uff0c\u6b64\u65f6\u7b54\u6848\u5e94\u8be5\u662f1\u3002\n\n\u8003\u8651\u4e00\u4e2a\u4ece1\u53f7\u8282\u70b9\u53ef\u4ee5\u8054\u901a\u5168\u56fe\u7684\u6709\u5411\u56fe\uff0c\u6211\u4eec\u4ece1\u53f7\u8282\u70b9\u5f00\u59cb\uff0c\u5bf9\u6bcf\u4e2a\u8282\u70b9\u8fdb\u884cDFS\uff0c\u5bf9\u6bcf\u4e2a\u8282\u70b9\u8fdb\u884c\u7f16\u53f7\uff08\u7f16\u53f7\u7684\u65b9\u5f0f\u5373\u4e3a\u5728DFS\u6811\u4e0a\uff0c\u8be5\u8282\u70b9\u52301\u53f7\u8282\u70b9\u7684\u8ddd\u79bb\u3002\u5bf9\u4e00\u4e2a\u8fde\u901a\u56fe\u7684\u6bcf\u6b21DFS\u904d\u5386\u90fd\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2aDFS\u6811\uff0c\u8fd9\u6837\u7f16\u53f7\u7684\u7279\u70b9\u5c31\u662f\n\n** \u5982\u679cdfn[a1]==dfn[a2]\uff0c\u90a3\u4e48\u4e00\u5b9a\u4e0d\u5b58\u5728\u4e00\u6761\u8def\u5f84\uff0c\u53ef\u4ee5\u4e0d\u901a\u8fc71\u53f7\u8282\u70b9\u4ecea1\u5230a2\uff08\u5373\u4f7f\u628a\u6709\u5411\u56fe\u8f6c\u4e3a\u65e0\u5411\u56fe\uff09 **\n\n\uff0c\u8bc1\u660e\u662f\u663e\u7136\u7684\uff09\n\n\u6839\u636e\u8fd9\u4e2a\u6027\u8d28\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u5728DFS\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u9047\u5230\u4e86\u5df2\u7ecf\u8bbf\u95ee\u8fc7\u7684\u8282\u70b9\uff0c\u90a3\u4e48\u80af\u5b9a\u5f62\u6210\u4e86\u4e00\u4e2a\u73af\uff0c\u8fd9\u65f6\uff0c\u73af\u7684\u957f\u5ea6\u4e3adfn[cur]-dfn[t[cur]]+1\uff0c\u5176\u4e2dcur\u4ee3\u8868\u5f53\u524d\u6b63\u5728\u8bbf\u95ee\u7684\u8282\u70b9\uff0ct\u7684\u5b9a\u4e49\u5982\u9898\u76ee\u4e2d\u6240\u793a\u3002\n\n\u73b0\u5728\u6211\u4eec\u9700\u8981\u8003\u8651\u7684\u5c31\u662f\u4e0d\u5b58\u5728\u4e00\u4e2a\u8282\u70b9\u53ef\u4ee5\u8fde\u901a\u5168\u56fe\u7684\u60c5\u51b5\uff0c\u5904\u7406\u5df2\u7ecf\u8bbf\u95ee\u8fc7\u4f46\u4e0d\u662f\u5f53\u524d\u6839\u8282\u70b9\u6700\u5148\u8bbf\u95ee\u7684\u60c5\u51b5\uff0c\u4e5f\u5c31\u662f\u8bbf\u95ee\u5230\u5df2\u7ecf\u88ab\u5176\u4ed6DFS\u6807\u8bb0\u8fc7dfn\u7684\u8282\u70b9\u3002\u8fd9\u5f88\u7b80\u5355\uff0c\u53ea\u8981\u5728\u6bcf\u6b21\u9012\u5f52\u8c03\u7528\u7ed3\u675f\u540e\u6807\u8bb0\u4e0a\u5c31\u884c\u4e86\uff0c\u56e0\u4e3a\u5728\u8fd9\u4e2a\u8282\u70b9\u5f00\u59cb\u7684DFS\u6811\u4e2d\uff0c\u4e00\u5b9a\u4e0d\u5b58\u5728\u5176\u4ed6\u7684\u8282\u70b9\u540c\u6837\u53ef\u4ee5\u88ab\u4ed6\u7684\u7236\u4eb2\u8282\u70b9\u8bbf\u95ee\u3002\n\n\u8d34\u4ee3\u7801\uff1a\uff08\u8bf7\u8ba4\u771f\u9605\u8bfb\u6ce8\u91ca\uff09\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int maxn=200010;\nint n,t[maxn],dfn[maxn],ans;//dfn\u662f\u65f6\u95f4\u6233\uff0c\u5b9a\u4e49\u548cTarjan\u7684\u6709\u4e9b\u4e0d\u4e00\u6837\nbool tf[maxn];//tf\u6570\u7ec4\u6807\u8bb0\u5728\u4e4b\u524d\u7b2ci\u4e2a\u8282\u70b9\u6709\u6ca1\u6709\u88ab\u5176\u4ed6\u8282\u70b9\u7684DFS\u6811\u8bbf\u95ee\u8fc7\nvoid dfs(int cur,int fa)//DFS\u4e3b\u8fc7\u7a0b\uff0ccur\u8868\u793a\u5f53\u524d\u8282\u70b9\uff0cfa\u8868\u793aDFS\u6811\u4e0acur\u7684\u7236\u4eb2\u8282\u70b9\n{\n    dfn[cur]=dfn[fa]+1;//\u8ba1\u7b97cur\u5728DFS\u6811\u4e0a\u7684dfn\u503c\n    if(dfn[t[cur]]&&!tf[t[cur]])ans=min(ans,dfn[cur]-dfn[t[cur]]+1);//\u5982\u679ccur\u7684\u51fa\u8fb9\u662f\u5df2\u7ecf\u88ab\u8bbf\u95ee\u8fc7\u5e76\u4e14\u6ca1\u6709\u5728\u4e4b\u524d\u88ab\u5176\u4ed6\u8282\u70b9\u5f00\u59cb\u7684DFS\u6811\u8bbf\u95ee\u8fc7\uff0c\u66f4\u65b0\u6700\u5c0f\u73af\u8def\u7684\u957f\u5ea6\n    if(!dfn[t[cur]])dfs(t[cur],cur);//\u5982\u679ccur\u7684\u51fa\u8fb9\u8fde\u5411\u7684\u8282\u70b9\u5e76\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\uff0c\u5219\u7ee7\u7eedDFScur\u7684\u51fa\u8fb9\u8fde\u5411\u7684\u8282\u70b9\n    tf[cur]=true;//\u5728\u9012\u5f52\u8c03\u7528\u7ed3\u675f\u540e\u6807\u8bb0cur\u5df2\u7ecf\u88ab\u5176\u4ed6\u8282\u70b9\u5f00\u59cb\u7684DFS\u8fc7\u7a0b\u8bbf\u95ee\u8fc7\n}\nint main()\n{\n    scanf(\"%d\",&n);ans=n;//ans\u7684\u503c\u6700\u5927\u662fn\uff0c\u56e0\u4e3a\u5728\u8282\u70b9\u6570\u4e3an\u7684\u56fe\u4e2d\u5b58\u5728\u7684\u957f\u5ea6\u6700\u957f\u7684\u73af\u7684\u957f\u5ea6\u4e0d\u4f1a\u8d85\u8fc7n\n    for(int i=1;i<=n;i++)scanf(\"%d\",t+i);\n    for(int i=1;i<=n;i++)if(!dfn[i])dfs(i,i);//\u5982\u679ci\u53f7\u8282\u70b9\u8fd8\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\uff0c\u90a3\u4e48\u4ee5i\u53f7\u8282\u70b9\u4e3aDFS\u6570\u7684\u6839\u8282\u70b9\u5f00\u59cbDFS\u8fc7\u7a0b\n        //\u4e4b\u6240\u4ee5\u8c03\u7528dfs(i,i)\u662f\u4e3a\u4e86\u8d4b\u503c\u65b9\u4fbf\uff0c\u628adfn[i]\u76f4\u63a5\u8bbe\u62101\n        //\u5982\u679c\u60f3\u8ba9\u7a0b\u5e8f\u7684\u601d\u8def\u66f4\u52a0\u6e05\u6670\u548c\u6613\u61c2\uff0c\u53ef\u4ee5\u8bbe\u7acb\u4e00\u4e2a\u865a\u62df\u8282\u70b90\uff0c\u8fd9\u662f\u60ef\u7528\u5957\u8def\u4e86\uff0c\u5728\u6b64\u4e0d\u8ba8\u8bba\n    printf(\"%d\\n\",ans);//\u8f93\u51fa\u6700\u5c0f\u73af\u8def\u7684\u957f\u5ea6\n    return 0;\n}\n```\n\u5173\u4e8e\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u8ba8\u8bba\uff1a\n\n\u56e0\u4e3a\u6bcf\u4e2a\u8282\u70b9\u6700\u591a\u8bbf\u95ee1\u6b21\uff0c\u6bcf\u6b21\u8bbf\u95ee\u90fd\u8981O(1)\u7684\u65f6\u95f4\u5904\u7406\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u7ebf\u6027\uff08O(N)\uff09\u7684\n\n\u5982\u679c\u60f3\u8981\u964d\u4f4e\u5e38\u6570\uff08\u6216\u8005\u5bb3\u6015\u6808\u7a7a\u95f4\u7206\u70b8\uff09\uff0c\u53ef\u4ee5\u5c06DFS\u8fc7\u7a0b\u8f6c\u5316\u4e3awhile()\n\n\u7a7a\u95f4\u590d\u6742\u5ea6O(N)\n",
        "postTime": 1506334706,
        "uid": 43486,
        "name": "hsfzLZH1",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5462\u5f88\u7b80\u5355\uff0ctop\u6392\u5e8f+DFS\uff1b\n\n\ntop\u6392\u5e8f\u5904\u7406\u51fa\u73af\uff0cDFS\u627e\u6700\u5c0f\u73af\uff1b\n\n\n###\u4e0d\u4f1atop\u6392\u5e8f\u7684\u540c\u5b66\u770b\u8fd9\u91cc\uff1a\n\n\n\u9996\u5148\u8981\u627e\u5230\u4efb\u610f\u5165\u5ea6\u4e3a0\u7684\u4e00\u4e2a\u9876\u70b9\uff0c\u5220\u9664\u5b83\u53ca\u6240\u6709\u76f8\u90bb\u7684\u8fb9\uff08\u5165\u5ea6--\uff09\uff0c\u518d\u627e\u5165\u5ea6\u4e3a0\u7684\u9876\u70b9\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u76f4\u5230\u5220\u9664\u6240\u6709\u9876\u70b9\u3002\u9876\u70b9\u7684\u5220\u9664\u987a\u5e8f\u5373\u4e3a\u62d3\u6251\u6392\u5e8f\u3002\n\n\n\u8fd9\u9053\u9898\u5c31\u662f\u8fd9\u6837\u4e86\uff0c\u4e0a\u4ee3\u7801\uff1a\n\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<cmath>\n#include<queue>\n#include<algorithm>\nusing namespace std;\nconst int N=200005;\nint n,k=1,head[N],ss,rd[N],ans=0x7f7f7f,temp=0;//\u6ce8\u610fans\u521d\u59cb\u503c\nbool vis[N];\nstruct node\n{\n    int to,next;\n}edge[N*2];\nvoid add(int u,int v)\n{\n    edge[++k].to=v;\n    edge[k].next=head[u];\n    head[u]=k;\n}\nvoid topsort()\n{\n    queue<int>q;\n    for(int i=1;i<=n;i++)\n    if(rd[i]==0)\n    {\n        q.push(i);\n        vis[i]=true;\n    }\n    while(!q.empty())\n    {\n        int x=q.front();q.pop();\n        for(int i=head[x];i;i=edge[i].next)\n        {\n            rd[edge[i].to]--;//\u5165\u5ea6--\n            if(rd[edge[i].to]==0)\n            {\n                vis[edge[i].to]=true;//\u5220\u70b9\n                q.push(edge[i].to);\n            }\n        }\n    }\n}\nvoid dfs(int s)//\u627e\u73af\n{\n    for(int i=head[s];i;i=edge[i].next)\n    {\n        if(!vis[edge[i].to])\n        {\n            temp++;//\u627e\u5230\u73af\u4e2d\u4e00\u4e2a\u70b9\n            vis[edge[i].to]=true;\n            dfs(edge[i].to);\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int u=1;u<=n;u++)\n    {\n        int v;\n        scanf(\"%d\",&v);\n        add(u,v);rd[v]++;//\u5165\u5ea6++\n    }\n    topsort();\n    for(int i=1;i<=n;i++)\n    {\n        if(!vis[i])temp=0,dfs(i),ans=min(temp,ans);//\u627e\u6700\u5c0f\u73af\n    }\n    printf(\"%d\",ans);\n}\n//\u5982\u679c\u8fd8\u6709\u4e0d\u61c2\u7684\u540c\u5b66\u53ef\u4ee5\u79c1\u4fe1\u6211\n```",
        "postTime": 1504188817,
        "uid": 25709,
        "name": "SNiFe",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "#\u66b4\u529b+\u4f18\u5316(?)\n\n\u8fd9\u9898\u66b4\u529b\u597d\u50cf\u670980\u5206\u7684\u6837\u5b50?\n\nT\u4e24\u4e2a\u70b9\u7684\u8bdd\n\n\u6211\u60f3\u60f3...\n\n\u52a0\u4e2aMax\u53d8\u91cf\u8bb0\u5f55\u5c1d\u8bd5\u6570\n\n\u968f\u4fbf\u53d6\u4e2a\u6700\u5927\u503c\n\n\u597d\u50cf\u5c31\u8fc7\u4e86\u5509(\u256f\u25bd\u2570 )???\n\n\u6263\u4e0a\u4ee3\u7801\uff1a\n\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#define fi(x,y) for (int i=x;i<=y;++i)\nusing namespace std;\nconst int INF=6666666;\nint to[200010],target,ans,cnt,n,pos,Max;\nint main(){\n    ans=~0u>>1;//\u5c0632\u4f4d\u76840\u53d6\u53cd\u540e\u53f3\u79fb\u4e00\u4f4d,\u5373ans=2147483647 \n    scanf(\"%d\",&n);\n    fi(1,n) scanf(\"%d\",&to[i]);\n    fi(1,n){\n        pos=target=i,cnt=0;\n        for (;to[pos]!=target;pos=to[pos],cnt++)//\u6d3b\u7528for\u4f7f\u4ee3\u7801\u66f4\u5de5(jian)\u6574(duan)\n          if (cnt>n+1 || cnt>ans) break;\n        Max+=cnt;\n        if (Max>INF) break ;//\u8fd9\u6837\u5c31\u4e0d\u4f1aTLE\u4e86 \n        ans=min(ans,cnt+1);\n    }\n    printf(\"%d\",ans);\n}\n```",
        "postTime": 1500815599,
        "uid": 40976,
        "name": "\u60a0\u732b\u4e36\u6708\u8d30",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u6bcf\u4e2a\u70b9\u7684\u51fa\u5ea6\u90fd\u662f1\uff0c\u6240\u4ee5\u662f\u5f88\u591a\u57fa\u73af\u5185\u5411\u6811\uff0c\u6bcf\u4e2a\u70b9\u6cbf\u7740\u51fa\u8fb9\u4e00\u5b9a\u4f1a\u8d70\u5230\u73af\uff0c\u76f4\u63a5\u66b4\u529b\u5373\u53ef\u3002\n\n>#include<cstdio>\n>#include<cstring>\n>int n,i,j,a[200005],b[200005],c[200005],ans;\n>int main()\n>{\n>scanf(\"%d\",&n);\n>for(i=1;i<=n;++i)scanf(\"%d\",&a[i]);\n>memset(b,0,sizeof(b));ans=n;\n>for(i=1;i<=n;++i)\n>{\n>if(b[i])continue;\n>b[i]=i;c[i]=1;\n>for(j=i;!b[a[j]];j=a[j])b[a[j]]=i,c[a[j]]=c[j]+1;\n>if(b[a[j]]==i&&c[j]-c[a[j]]+1<ans)ans=c[j]-c[a[j]]+1;\n>}\n>printf(\"%d\",ans);\n>return 0;\n>}",
        "postTime": 1498034899,
        "uid": 4542,
        "name": "hhhhhh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u5f88\u591a\u4eba\u90fd\u7528\u88f8\u7684DFS\u8dd1\u51fa\u4e8670\u5206\u6216\u800580\u5206\u3002\n\n\u7136\u540e\u81ea\u66b4\u81ea\u5f03\u7684\u8bf4\u611f\u89c9\u6c38\u8fdc\u7a81\u4e0d\u783480\u5206\u4e86\uff08\u6765\u81ea\u8ba8\u8bba\u533a\uff09\n\n\u6211\u4eec\u53ef\u4ee5\u60f3\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u4f1a\u8d85\u65f6\uff1f\n\n\u56e0\u4e3a\u8fdb\u884c\u4e86\u5927\u91cf\u7684\u65e0\u7528\u641c\u7d22\n\n\u4f46\u662f\u5728\u8fdb\u884c\u8fd9\u4e9b\u641c\u7d22\u7684\u65f6\u5019\u7b54\u6848\u5df2\u7ecf\u786e\u5b9a\u4e86\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u52a0\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u5361\u65f6\u7684tot\u53d8\u91cf\n\n\u5f53\u5b83\u5927\u4e8e\u4e00\u4e2a\u6570(\u6211\u53d6\u5f97\u662f4384380\uff0c\u8fd9\u4e2a\u6570\u4e0d\u80fd\u6bd410^8\u5927)\u65f6\u5c31\u9000\u51fa\n\n\u8f93\u51fa\u5f53\u524d\u7684\u6700\u4f18\u89e3\u5373\u53ef\n\n\u88f8\u7684DFS\u4e0d\u4ec5\u5bb9\u6613\u7406\u89e3\uff0c\u800c\u4e14\u4ee3\u7801\u8fd8\u77ed\n\n\u5efa\u4e2a\u94fe\u8868\uff0c\u7136\u540e\u7206\u641c\u5373\u53ef\n\n\u6ce8\u610f\u5224\u65ad\u4e00\u4e0b\u65e0\u7528\u73af\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\nusing namespace std;\nconst int MAXN=200001;\nvoid read(int & n)\n{\n    char c='+';int x=0;\n    while(c<'0'||c>'9')\n    c=getchar();\n    while(c>='0'&&c<='9')\n    {\n        x=x*10+(c-48);\n        c=getchar();\n    }\n    n=x;\n}\nint n;\nint ans=0x7ffffff;\nint a[MAXN];\nint tot=0;\nint main()\n{\n    read(n);\n    for(int i=1;i<=n;i++)\n    read(a[i]);\n    for(int i=1;i<=n;i++)\n    {\n        int bg=i;\n        int now=i;\n        int num=0;\n        while(a[now]!=bg)\n        {\n            tot++;\n            num++;\n            now=a[now];\n            if(num>n+1||num>ans)\n            {\n                num=0x7ffffff;\n                break;\n            }\n        }\n        if(tot>4384380)\n        break;\n        ans=min(num+1,ans);\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1497927954,
        "uid": 36984,
        "name": "attack",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "dfs\u53ef\u4ee5\u8fc7\u7684\uff0c\u76f4\u63a5\u53ef\u4ee5\u66b4\u529b\u627e\u73af\u3002\u4f18\u5316\u5c31\u662f\u8bb0\u5f55\u641c\u8fc7\u7684\u70b9\u4e0d\u518d\u641c\uff0c\u5982\u679c\u641c\u5230\u4e00\u534a\u53d1\u73b0\u73af\u5c31\u9000\u56de\u53bb\u8ba1\u7b97\u4e2d\u95f4\u51fa\u73b0\u7684\u8fd9\u4e2a\u73af\u7684\u957f\u5ea6\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,t[200001],pre[200001],ans=INT_MAX;//pre\u662f\u8bb0\u5f55\u524d\u9a71\u7ed3\u70b9\u7684\uff0c\u7528\u6765\u8ba1\u7b97\u641c\u7d22\u4e2d\u95f4\u51fa\u73b0\u7684\u73af\u7684\u957f\u5ea6\u3002\nbool b[200001];\nvoid dfs(int num,int i,int x)//num\u662f\u5df2\u7ecf\u8f6e\u8fc7\u7684\u8f6e\u6570\uff0ci\u662f\u73b0\u5728\u5230\u4e86\u7b2ci\u4e2a\u4eba\uff0cx\u662f\u51fa\u53d1\u5730\u3002\n{\n    b[i]=1;//\u8bb0\u5f55\u8d70\u8fc7\n    if(num>=ans)return;//\u7b80\u5355\u800c\u6709\u6548\u7684\u526a\u679d\n    if(i==x)//\u5982\u679c\u6784\u6210\u73af\u5c31\u8bb0\u5f55\u5e76\u9000\u51fa\n    {\n        if(num<ans)ans=num;\n        return;\n    }\n    if(!b[t[i]])//\u5982\u679c\u4e0b\u4e00\u4e2a\u70b9\u6ca1\u6709\u8d70\u8fc7\uff0c\u5c31\u641c\u7d22\u4e0b\u4e00\u4e2a\u70b9\n    {\n        pre[t[i]]=i;//\u8bb0\u5f55\u524d\u9a71\u7ed3\u70b9\n        dfs(num+1,t[i],x);//\u641c\u7d22\u4e0b\u4e00\u4e2a\u70b9\n    }\n    else   //\u5982\u679c\u4e0b\u4e00\u4e2a\u70b9\u8d70\u8fc7\uff0c\u90a3\u4e48\u5728\u8fd9\u8f6e\u641c\u7d22\u4e2d\u95f4\u4e00\u5b9a\u51fa\u73b0\u4e86\u73af\n    {\n        int m=2,k=i;//\u521d\u59cb\u5316\u73af\u7684\u957f\u5ea6\u4e3a2\n        while(pre[k]&&pre[k]!=t[i])//\u5982\u679ck\u7ed3\u70b9\u7684\u524d\u9a71\u7ed3\u70b9\u4e0d\u662f\u7a7a\u7684\u5e76\u4e14\u5b83\u7684\u524d\u9a71\u7ed3\u70b9\u8fd8\u6ca1\u6709\u4e0et[i]\u6784\u6210\u73af\n        {\n            m++;//\u73af\u957f\u52a0\u4e00\uff0c\u6ce8\u610f\u73af\u957f\u521d\u59cb\u503c\u8981\u4e3a2\n            k=pre[k];//\u56de\u6eaf\u627e\u73af\n        }\n        if(pre[k]&&m<ans)ans=m;//pre[k]\u8868\u793a\u73af\u5b58\u5728\n    }\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d\",&t[i]);\n    for(int i=1;i<=n;i++)\n    {\n        if(!b[i]&&!b[t[i]])//\u5982\u679c\u6ca1\u6709\u641c\u7d22\u8fc7\n        {\n            memset(pre,0,sizeof(pre));//\u524d\u9a71\u7ed3\u70b9\u6e05\u96f6\n            pre[t[i]]=i;//\u521d\u59cb\u5316\u524d\u9a71\u7ed3\u70b9\u6570\u7ec4\uff0c\u6ce8\u610f\u521d\u59cb\u5316\u53ea\u80fd\u653e\u5728\u8fd9\u91cc\u548c\u641c\u7d22\u91cc\uff0c\u4e0d\u80fd\u8fb9\u8f93\u8fb9\u521d\u59cb\u5316\n                           //\u56e0\u4e3a\u67d0\u4e9b\u7ed3\u70b9\u4e0d\u4e00\u5b9a\u53ea\u6709\u4e00\u4e2a\u524d\u9a71\n            dfs(1,t[i],i);\n            b[i]=1;//\u8bb0\u5f55i\u53f7\u7ed3\u70b9\u641c\u7d22\u8fc7\u4e86\n        }\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1474295205,
        "uid": 20176,
        "name": "Salamander",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "/\\*\ntarjan\u88f8\u9898\u3002\n\n\u6211\u4eec\u53ea\u9700\u8981\u627e\u51fa\u5927\u4e8e1\u7684\u6700\u5c0f\u73af\u5373\u53ef\uff0c\u5e76\u4e0d\u9700\u8981\u786e\u5207\u7684\u77e5\u9053\u67d0\u4e2a\u4eba\u77e5\u9053\u54ea\u51e0\u4e2a\u4eba\u7684\u4fe1\u606f2333\n\n\u7b2c\u4e00\u6b21\u505a\u7684\u65f6\u5019\u8111\u6d1e\u5927\u5f00\uff0c\u5f00\u4e86\u4e2a\u6570\u7ec4\u8bb0\u5f55\u7b2ci\u4e2a\u4eba\u6240\u77e5\u9053\u7684\u4fe1\u606f\uff0c\u7136\u540e\u6bcf\u6b21\u4f20\u9012\u65f6\u90fd\u5224\u65ad\u4e00\u4e0b\u4ed6\u6240\u77e5\u9053\u7684\u4fe1\u606f\u4e2d\u6709\u6ca1\u6709\u81ea\u5df1\u7684...\u4f46\u8fd9\u4e2a\u60f3\u6cd5\u5f88\u5feb\u5c31\u88abpxg\u627c\u6740\u5728\u6447\u7bee\u91cc\u4e86\n\n\u518d\u8bf4\u4e00\u904d\uff0c\u88f8\u7684tarjan\u5c31\u591f\u4e86...\n\n\u542c\u8bf4\u8fd8\u6709\u5e76\u67e5\u96c6\uff0cbfs...\u6211\u4e0d\u4f1a\n\n\\*/\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<vector>\n#include<algorithm>\nusing namespace std;\nconst int MAX=200010;\nint low[MAX],dfn[MAX];\nbool isins[MAX];\nint zhan[MAX],top=0;\nint lts=0;\nint js=0,n,m;\nvector<int>tu[MAX];\nvector<int>lt[MAX];\nvoid tarjan(int i)\n{\n    int j;\n    dfn[i]=low[i]=++js;\n    isins[i]=1;\n    zhan[top++]=i;\n    for(j=0;j<tu[i].size();j++)\n    {\n        int tp=tu[i][j];\n        if(dfn[tp]==-1)\n        {\n            tarjan(tp);\n            low[i]=min(low[i],low[tp]);\n        }\n        else if(isins[tp])\n            low[i]=min(low[i],dfn[tp]);\n    }\n    if(dfn[i]==low[i])\n    {\n        ++lts;\n        do\n        {\n            j=zhan[--top];\n            isins[j]=0;\n            lt[lts].push_back(j);\n        }\n        while(i!=j);\n    }\n}\nvoid solve(int n)\n{\n    memset(low,-1,sizeof(low));\n    memset(dfn,-1,sizeof(dfn));\n    memset(isins,0,sizeof(isins));\n    memset(zhan,-1,sizeof(zhan));\n    for(int i=1;i<=n;i++)\n    {\n        if(dfn[i]==-1)\n        tarjan(i);\n    }\n}\nint main()\n{\n    cin>>n;\n    int i;\n    for(i=1;i<=n;i++)\n    {\n        int b;\n        scanf(\"%d\",&b);\n        tu[i].push_back(b);\n    }\n    solve(n);\n    int ans=2001000;\n    for(i=1;i<=lts;i++)\n    {\n        int  x=lt[i].size();\n        if(x>1)\n            ans=min(ans,x);\n    }\n    cout<<ans;\n    return 0;\n}\n```",
        "postTime": 1473324944,
        "uid": 17257,
        "name": "lemon",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u56fe\u8bba\u6c34\u9898\u3002\n\n\u5728\u6709\u5411\u56fe\u4e2d\u627e\u4e00\u4e2a\u6700\u77ed\u73af\u3002\n\n\u7531\u4e8e\u6bcf\u4e2a\u70b9\u51fa\u5ea6\u5747\u4e3a1\uff0c\u56e0\u6b64\uff0c\u4ece\u4efb\u610f\u70b9\u51fa\u53d1\u90fd\u80fd\u627e\u5230\u4e00\u4e2a\u73af\u3002\n\n\u4e00\u6761\u94fe\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u73af\u3002\uff08\u611f\u8c22\u697c\u4e0b\uff09\n\n\u56e0\u6b64\uff0c\u4ece\u4efb\u610f\u672a\u5230\u8fbe\u8fc7\u7684\u70b9\u627e\u73af\uff0c\u53d6\u6700\u5c0f\u3002\n\n\u6807\u7a0b\uff1a\n\n```cpp\nuses math;//Pascal\u5927\u6cd5\u597d\nvar t,p:array[1..200000] of longint; f,f1:array[1..200000] of boolean;\n    n,i,ans,now:longint;\nbegin\n read(n);\n fillchar(f,sizeof(f),true);//\u5b58\u653e\u67d0\u4e2a\u70b9\u662f\u5426\u5230\u8fbe\u8fc7\n ans:=200000;\n fillchar(p,sizeof(p),0);//\u5b58\u653e\u6b65\u6570\n for i:=1 to n do \n  begin \n   read(t[i]);\n  end;\n for i:=1 to n do\n  if f[i] then//dfs\n  begin\n   now:=i;\n   f[i]:=false;\n   fillchar(f1,sizeof(f1),true);\n   f1[i]:=false;//\u5224\u65ad\u662f\u5426\u6784\u6210\u73af\uff08\u907f\u514d\u4e24\u94fe\u76f8\u4ea4\u7684\u60c5\u51b5\uff09\n   while f[t[now]] do \n    begin\n     p[t[now]]:=p[now]+1;\n     now:=t[now];\n     f[now]:=false;\n     f1[now]:=false;\n    end;\n   if f1[t[now]]=false then ans:=min(ans,p[now]-p[t[now]]+1);//\u53d6\u6700\u5c0f\n  end;\n write(ans);\nend.\n```",
        "postTime": 1472625726,
        "uid": 10291,
        "name": "fighter_OI",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u6b22\u8fce\u8bbf\u95ee\uff1ahttp://www.cnblogs.com/harden/\n\n\u4e3a\u4ec0\u4e48\u9898\u89e3\u4e2d\u6ca1\u4eba\u7528tarjan\uff0c\u5f88low\u5417\uff1f\n\n\u627e\u6700\u5c0f\u7684\u4e14\u5305\u542b\u70b9\u7684\u6570\u91cf\u4e0d\u4e3a1\u7684\u7f29\u70b9\uff0c\u8f93\u51fa\u5373\u53ef\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<string>\n#include<vector>\n#include<stack>\n#include<algorithm>\n#define M 201000\nusing namespace std;\nint low[M],num[M],ans[M],vis[M],instack[M*2];\nint cnt,n,indexx;\nvector<int> grap[M];\nstack<int> s;\nvoid tarjan(int v)\n{\n    num[v]=low[v]=++indexx;\n    s.push(v);\n    vis[v]=1;\n    instack[v]=1;\n    for(int i=0;i<grap[v].size();i++)\n    {\n        int w=grap[v][i];\n        if(!vis[w])\n        {\n            tarjan(w);\n            low[v]=min(low[v],low[w]);\n        }\n        else if(instack[w])\n          low[v]=min(low[v],num[w]);\n    }\n    int u;\n    if(low[v]==num[v])\n    {\n        ++cnt;\n        do\n        {\n            u=s.top();\n            ans[cnt]++;\n            instack[u]=0;\n            s.pop();\n        }\n        while(u!=v);\n    }\n}\nint main()\n{\n    int x;\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&x);\n        grap[i].push_back(x);\n    }\n    for(int i=1;i<=n;i++)\n      if(!vis[i])\n        tarjan(i);\n    sort(ans+1,ans+cnt+1);\n    for(int i=1;i<=cnt;i++)\n      if(ans[i]>1)\n      {\n          printf(\"%d\\n\",ans[i]);\n          break;\n      }\n    return 0;\n}\n```",
        "postTime": 1467375127,
        "uid": 19017,
        "name": "harden",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u597d\u50cf\u5927\u5bb6\u6ca1\u6709\u7528\u5e76\u67e5\u96c6\u505a\u7684\u554a\u3002\u3002\u3002\n\n\u4e0b\u9762\u8bf4\u4e00\u4e0b\u601d\u8def\uff1a\n\n\u9996\u5148\u5404\u79cd\u8bfb\u5165\u548c\u5e76\u67e5\u96c6\u7684\u521d\u59cb\u5316\uff0c\u4e4b\u540e\uff0c\u5728**\u8bfb\u5165\u6bcf\u4e2a\u8fde\u901a\u7684\u9053\u8def\u65f6**\u8981\u5148\u5224\u65ad\u5b83\u4eec\u662f\u5426\u5df2\u7ecf\u76f8\u4e92\u8fde\u63a5\uff0c\n\n\u5982\u679c\u5df2\u7ecf\u8fde\u63a5\u4e86\uff0c\u5c31\u8bf4\u660e\u5b83\u4eec\u5c06\u6210\u4e00\u4e2a\u73af\uff0c\u540c\u65f6\u7531\u4e8e\u4e0d\u4f1a\u6709\u4e24\u4e2a\u73af\u5171\u7528\u4efb\u4f55\u4e00\u6761\u8fb9\uff08\u611f\u8c22fengjunjie\u63d0\u51fa\u8fd9\u6761\u6027\u8d28\uff09\uff0c\n\n\u5c31\u53ef\u4ee5\u4ece\u4e24\u4e2a\u7aef\u70b9\u4e2d\u53ef\u4ee5\u5230\u8fbe\u53e6\u4e00\u4e2a\u7aef\u70b9\u7684\u90a3\u4e2a\u70b9\u5f00\u59cbDFS\uff0c\u540c\u65f6\u7531\u4e8e\u4e0a\u8ff0\u6027\u8d28\uff0c\u53ea\u8981\u67d0\u4e2a\u70b9\u88ab\u641c\u7d22\u8fc7\uff0c\u5c31\u65e0\u9700\u518d\u6b21\u641c\u7d22\uff0c\n\n\u53ef\u4ee5\u8fdb\u884c\u526a\u679d\u3002\u5728DFS\u540e\u5224\u65ad\u7ed3\u679c\u662f\u5426\u6bd4\u4e4b\u524d\u7684\u73af\u7684\u4eba\u6570\u5c11\uff0c\u8fd9\u6837\u5230\u6700\u540e\u518d\u5408\u5e76\u8fd9\u4e24\u4e2a\u7ed3\u70b9\u3002\n\n\n\n\n```cpp\nvar n,i,g,h,j,k,l,be,en,minnum:longint;\n    root:array[1..200000] of longint;\n    next:array[1..200000] of longint;\n    round:array[1..200000] of longint;\nprocedure dfs(curr,num:longint);\n var i,j:longint;\n  begin\n   if curr=en then\n                begin\n                 if (num<minnum)and(num>0) then\n                                             minnum:=num;\n                 exit;\n                end;\n   if round[curr]<>0 then\n                       exit;\n   dfs(next[curr],num+1);\n   round[curr]:=num;\n  end;\nfunction getroot(v:longint):longint;\n var xx:longint;\nbegin\n  if root[v]=v then\n    exit(v);\n//  root[v]:=getroot(root[v]);  //\u8981\u662f\u6309\u666e\u901a\u7684\u9012\u5f52\u5728\u6d1b\u8c37\u4f1a\u7206\u680860\u5206\u3002\u3002\u3002\n//  exit(root[v]);         \n    while v<>root[v] do\n      v:=root[v];\n    exit(v);\nend;\nprocedure merge(x,y:longint);\nvar\n  xx,yy:longint;\nbegin\n  xx:=getroot(x);\n  yy:=getroot(y);\n  root[yy]:=xx;\nend;\nfunction judge(x,y:longint):boolean;\nvar\n  xx,yy:longint;\nbegin\n  xx:=getroot(x);\n  yy:=getroot(y);\n  exit(xx=yy);\nend;\n Begin\n  fillchar(round,sizeof(round),0);\n  minnum:=maxlongint;\n  readln(n);\n  for i:= 1 to n do\n   root[i]:=i;\n  for i:= 1 to n do\n   begin\n    read(next[i]);\n                                           if judge(i,next[i])=true then\n                                                                      if (round[i]=0)and(round[next[i]]=0) then\n                                                                      begin\n                                                                       be:=next[i];\n                                                                       en:=i;\n                                                                       dfs(be,1);\n                                                                      end;\n    merge(i,next[i]);\n   end;\n  writeln(minnum);\n  readln;\n  readln;\n End.\n\n```",
        "postTime": 1463815892,
        "uid": 9508,
        "name": "\u9648\u56fd\u51ef",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u5176\u5b9e\u5206\u6790\u4e00\u4e0b\uff0c\u8fd9\u4e2a\u9898\u67093\u4e2akey\u70b9\n\n\u6bcf\u4e00\u4e2a\u7ed3\u70b9\u53ea\u6709\u4e00\u4e2a\u51fa\u5ea6\uff0c\u90a3\u4e48\uff0c1\uff1a\u5728\u540c\u4e00\u4e2a\u94fe\u91cc\u4e0d\u4f1a\u51fa\u73b0\u4e24\u4e2a\u73af\n\n2\uff1a\u5728\u6bcf\u4e00\u6761\u4e0d\u76f8\u8fde\u7684\u94fe\u4e2d\u90fd\u5fc5\u6709\u4e00\u4e2a\u73af\n\n3\uff1a\u65e0\u8bba\u4ece\u67d0\u6761\u94fe\u7684\u54ea\u4e2a\u8282\u70b9\u5f00\u59cb\u641c\u7d22\uff0c\u90fd\u80fd\u641c\u5230\u8be5\u6761\u94fe\u7684\u73af\u3002\n\n\u90a3\u4e48\uff0c\u5bf9\u4e8e200000 \u7684\u6570\u636e\u89c4\u6a21\uff0c \u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u7528---\u679a\u4e3e\uff01\uff01\uff01\n\n```cpp\nprogram ex02;\nvar map:array[1..200000] of longint;\n    v,u:array[1..200000] of boolean;\n    n,i,j,h,t,k,ans,min:longint;\nbegin\n  min:=maxlongint;\n  readln(n);\n  for i:=1 to n do begin read(map[i]); v[map[i]]:=true; end;\n  for i:=1 to n do\n   begin\n     ans:=0;\n     if v[i]=true then\n     begin\n       fillchar (u,sizeof(u),true);\n       h:=i; t:=h;\n       while (u[t]<>false)and(v[t]<>false) do\n        begin\n          u[t]:=false;\n          v[t]:=false;\n          t:=map[t];\n        end;\n       if u[t]= false then\n       begin\n         k:=map[t]; ans:=1;\n         while k<>t do\n          begin\n            k:=map[k];\n            ans:=ans+1;\n          end;\n       end;\n       if (ans<>0) and(ans<min) then min:=ans;\n     end;\n   end;\n  writeln(min);\nend.\n```",
        "postTime": 1463815054,
        "uid": 9525,
        "name": "fengjunjie",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u6ce8\u610f\u5230\u5982\u679c1\u544a\u8bc92,2\u544a\u8bc91,2\u8f6e\u6e38\u620f\u5c31\u7ed3\u675f\u4e86\uff0c\u8fd9\u6837\u8bf4\u660e\u4ec0\u4e48\uff1f\u6211\u4eec\u9700\u8981\u627e\u5230\u4e00\u4e2a\u201c\u5faa\u73af\u8282\u201d\uff0c\u6bd4\u59821\u544a\u8bc92,2\u544a\u8bc93,3\u544a\u8bc94,4\u544a\u8bc91\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u5468\u671f\u4e3a4\u7684\u5faa\u73af\u8282\u3002\n\n\u8fd9\u9053\u9898\u53ea\u8981\u60f3\u6e05\u695a\u7684\u8bdd\u8fd8\u662f\u5f88\u597d\u505a\u7684\uff0c\u53ea\u4e0d\u8fc7\u60f3\u6e05\u695a\u5927\u6982\u9700\u89811\u4e2a\u5c0f\u65f6\u3002\n\n\u7136\u800c\uff0c\u60f3\u6e05\u695a\u540e\uff0c\u6211\u4eec\u77e5\u9053\u662f\u9700\u8981\u627e\u5faa\u73af\u8282\uff0c\u53ef\u662f\u4e00\u5b9a\u8981\u6ce8\u610f\uff0c\u8fd9\u9053\u9898\u6709\u53ef\u80fd\u51fa\u73b0\u4e24\u4e2a\u5faa\u73af\u8282\uff01\n\n\u6bd4\u59827\u4e2a\u4eba\uff0c1,2,3\uff0c4\u5f62\u6210\u5faa\u73af\uff1b5,6\uff0c7\u5f62\u6210\u5faa\u73af\uff0c\u90a3\u4e48\u7b54\u6848\u662f\u591a\u5c11\uff1f\u6beb\u65e0\u7591\u95ee\uff0c3.\n\n\u6240\u4ee5\u8981\u627e\u5168\u6240\u6709\u5faa\u73af\u8282\u3002\n\n\u4e0b\u9762\u662f\u6211\u7684\u65b9\u6cd5\uff0c\u81ea\u8ba4\u4e3a\u662f\u4e0d\u7528\u6307\u9488\uff0c\u4e0d\u7528\u4f4d\u8fd0\u7b97\uff08\u90fd\u4e0d\u4f1a\uff09\u4e2d\u7684\u9ad8\u660e\u65b9\u6cd5\u4e86\u3002\n\n\u601d\u8def\u5c31\u662f\u4ece\u4e00\u4e2a\u4ee5\u524d\u6ca1\u641c\u7d22\u8fc7\u7684\u4eba\u51fa\u53d1\uff0c\u5411\u540e\uff08\u4ed6\u7684\u6d88\u606f\u8005\uff09\u8d70\uff0c\u6211\u4eec\u77e5\u9053\u5982\u679c\u8fd9\u4e2a\u4eba\u5728\u5faa\u73af\u4e2d\uff0c\u8d70n+1\u6b21\u5fc5\u987b\u4f1a\u6709\u5faa\u73af\u3002\u4e0b\u9762\u5c31\u662f\u641c\u7d22\u4e86\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n\n#include<iostream>  \n#include<cstdio>  \nusing namespace std;          \n  \nint n,T[200010],r[200010],v[200010]={0};  \nint main()//find the smallest for  \n{     \n    int i,j,ans=2000010,x;  \n    cin>>n;  \n    for(i=1;i<=n;i++) cin>>T[i];  \n    for(j=1;j<=n;j++)  \n    {  \n        x=j;  \n        for(i=1;i<=n+1;i++)  \n        {  \n\n            r[i]=x;  \n            if(v[x]<j&&v[x]!=0)   \n            {  \n                   x=-1;  \n                break;  \n            }              \n            v[x]=j;\n            x=T[x];  \n        }  \n        if(x==-1) continue;  \n        for(i=n;i>=1;i--)  \n        {  \n            if(r[i]==r[n+1])   \n            {  \n                if(n-i<ans) ans=n-i;  \n                break;  \n            }  \n        }  \n    }  \n    cout<<ans+1;  \n    return 0;  \n}  \n\n```",
        "postTime": 1448449063,
        "uid": 6274,
        "name": "riven",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "  \n   \n            \n    \n     \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nbool v[200100];\nint a[200100],n,m,ru[200100],k,ans=1,minn=9999999;\nvoid search(int x,int y)\n{\n    int p,t;\n  if(x==y) return;//\u5f53\u53c8\u8be2\u95ee\u5230\u5df2\u7ecf\u8be2\u95ee\u8fc7\u7684\u70b9\u65f6\uff0c\u5c31\u8fd4\u56de\n  if(!v[y]) v[y]=true;\n  if(!v[x]) {\n              v[x]=true;//\u5df2\u7ecf\u8bbf\u95ee\u8fc7\uff0c\u505a\u6807\u8bb0\n              ans++;\n              search(a[x],y);//\u63a5\u7740\u8bbf\u95ee\u4e0b\u4e00\u4e2a\u8fde\u63a5\u5730\u70b9\n            }\n}\nint main()\n{ \n   int i,j;\n  memset(v,false,sizeof(v));\n  scanf(\"%d\",&n);\n  for(i=1;i<=n;i++) \n {\n   scanf(\"%d\",&a[i]);\n   ru[a[i]]++;\n }\n  while(1)//\u53bb\u9664\u5165\u5ea6\u4e3a\u96f6\u7684\u70b9\n {  k=1;\n   for(i=1;i<=n;i++)\n    if(ru[i]==0&&!v[i]) \n                { \n                    k=0;\n                   v[i]=true;//\u82e5\u5165\u5ea6\u4e3a\u96f6\uff0c\u5c31\u8bbe\u4e3a\u5df2\u8bbf\u95ee\u8fc7\n                   ru[a[i]]--;//\u4e0e\u4ed6\u76f8\u8fde\u7684\u70b9\u7684\u5165\u5ea6\u51cf\u4e00\n                 }\n   if(k==1) break;\n  }\n  for(i=1;i<=n;i++)\n  if(!v[i]) {\n              search(a[i],i);\n              if(minn>ans) minn=ans;\n              ans=1;\n            }\n    printf(\"%d\",minn);\n    return 0;\n}                      \n\n```",
        "postTime": 1448004414,
        "uid": 7427,
        "name": "\u5979\u8bf4123",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u9898\u89e3\u91ccdalao\u90fd\u592a\u5f3a\u4e86...\n\n\u54b1\u849f\u84bb\u4e5f\u4e0d\u4f1a\u4ec0\u4e48\u5e76\u67e5\u96c6\n\n### \u9898\u76ee\u89e3\u91ca:\n\n~~\u4e0d\u5c31\u662f\u8bf4\u6c42\u4e00\u4e2a\u6700\u5c0f\u73af\u5417~~\n\n\u4e0d\u4f1a\u5e76\u67e5\u96c6,\u611f\u89c9\u4e0d\u5982tarjan\u597d\u7406\u89e3\u554a...\n\n### \u548c\u666e\u901atarjan\u4e00\u6837,\u5c31\u52a0\u4e00\u4e2at\u6570\u7ec4\u7edf\u8ba1\u6bcf\u4e00\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u6709\u51e0\u4e2a\u70b9\n\n### \u5982\u679c\u4e00\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u67091\u4e2a\u70b9,\u4f46\u662f\u9898\u76ee\u4e2d\u8bf4\u4e86,\u81ea\u5df1\u4e0d\u80fd\u544a\u8bc9\u81ea\u5df1...\n\n\u6240\u4ee5\u4e0d\u7528\u7ba1\n\n```\n#define \u5f3a\u8054\u901a \u5f3a\u8054\u901a\u5206\u91cf\n```\n\u4ee5\u4e0b\u4e3a\u4ee3\u7801(\u5e26\u6ce8\u91ca)\n```cpp\n#include<bits/stdc++.h>\n\n#define AC 0\n\nusing namespace std;\n\ninline int read(){int s=0,w=1;char ch=getchar();while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();return s*w;}\n\nint v[200001],N[200001],f[200001],tot;\n//\u90bb\u63a5\u8868\nint a[200001],dfn[200001],low[200001],cnt;//dfn\u548clow\u4e0d\u540c\u8bf4\u4e86\u5427..\nint s[200001],top;//\u6808\nint co[200001],t[200001],vis[200001],rs;\n//rs\u7edf\u8ba1\u5f3a\u8054\u901a\u4e2a\u6570,vis\u5b58\u5728\u4e0d\u5728\u6808\u4e2d,t\u662f\u5f3a\u8054\u901a\u4e2d\u70b9\u7684\u4e2a\u6570,co\u5b58\u67d0\u4e00\u4e2a\u70b9\u5728\u54ea\u4e2a\u5f3a\u8054\u901a\u91cc\u9762(\u5176\u5b9e\u6ca1\u7528\nvoid add(int x,int y){\n\tv[++tot] = y;\n\tN[tot] = f[x];\n\tf[x] = tot;\n}\n\nvoid tarjan(int x){\n\tdfn[x] = ++cnt;\n\tlow[x] = dfn[x];\n\ts[++top] = x;\n\tvis[x] = 1;\n\tfor(int i = f[x];i;i = N[i]){\n\t\tint p = v[i];\n\t\tif(dfn[p] == 0){\n\t\t\ttarjan(p);\n\t\t\tlow[x] = min(low[x],low[p]);\n\t\t}\n\t\telse if(vis[p])\n\t\t\tlow[x] = min(low[x],low[p]);\n\t}\n\tif(low[x] == dfn[x]){\n\t\tco[x] = ++rs;\n\t\tt[rs] = 1;\n\t\twhile(s[top] != x){\n\t\t\tvis[s[top]] = 0;//\u6e05\u7a7a\u6807\u8bb0\n\t\t\tco[s[top--]] = rs;\n\t\t\tt[rs]++;\n\t\t}\n\t\tvis[s[top--]] = 0;\n\t}\n}\n\nint main(int argc, char const *argv[])\n{\n\tint n;\n\tmemset(t,9999999,sizeof t);\n\tcin>>n;\n\tfor(int i = 1;i <= n;++i){\n\t\ta[i] = read();\n\t\tadd(i,a[i]);\n\t}\n\tfor(int i = 1;i <= n;++i)\n\t\tif(!dfn[i])\n\t\t\ttarjan(i);\n    int ans = 99999999;\n\tfor(int i = 1;i <= n;++i){\n\t\tif(t[i] != 1)//\u5982\u679c\u5f3a\u8054\u901a\u53ea\u6709\u4e00\u4e2a\u8bf4\u660e\u4e0d\u662f\n\t\t\tans = min(ans,t[i]);\n\t}\n\tcout<<ans;\n\treturn AC;\n}\n\n```\n",
        "postTime": 1572918718,
        "uid": 192006,
        "name": "liuzitong",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\u9898\u76ee\u5c31\u662f\u6c42\u6700\u5c0f\u73af\uff0c\u770b\u4e86\u5f88\u591a\u904d\u8fd8\u662f\u6ca1\u770b\u61c2\u600e\u4e48\u7528\u5e76\u67e5\u96c6\u6765\u5199\uff0c\u6ca1\u5f97\u529e\u6cd5\uff0c\u53c8\u7528\u56de\u4e86\u62d3\u6251\u6392\u5e8f\u3002\u7b2c\u4e00\u6b65\uff1a\u5220\u70b9\uff08\u5220\u53bb\u6240\u6709\u5165\u5ea6\u4e3a0\uff0c\u51fa\u5ea6\u4e3a1\u7684\u70b9\uff09\u3002\n\u7b2c\u4e8c\u6b65\uff1a\u56fe\u4e0a\u53ea\u5269\u4e0b\u73af\u4e86\u3002\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u4f7f\u7528dfs\u5c31\u597d\u4e86\u3002\u5f97\u5230\u6bcf\u4e2a\u70b9\u7684\u6df1\u5ea6\u3002\u4e5f\u5c31\u662fd[x]\u7684\u503c\u3002\u5f53\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u70b9\u5df2\u7ecf\u8bbf\u95ee\u8fc7\u65f6\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u73af\u7684\u5927\u5c0f\u4e3ad[x]-d[v]+1;\u5176\u4e2d\u8fd9\u4e2av\u662f\u5df2\u7ecf\u8bbf\u95ee\u8fc7\u7684\u8282\u70b9\uff08\u5728tarjain\u7b97\u6cd5\u4e2d\u53eb\u505a\u6700\u65e9\u65f6\u95f4\u6233\uff09\u3002\u7136\u540e\u4e0d\u65ad\u7684\u53bb\u66f4\u65b0\u6700\u5c0f\u73af\u7684\u5927\u5c0f\uff0c\u5c31\u597d\u4e86\u3002\u5220\u70b9\u6211\u4f7f\u7528\u5e7f\u641c\u89e3\u51b3\u7684\uff0c\u5176\u5b9e\u4e5f\u662f\u53ef\u4ee5\u4f7f\u7528\u9012\u5f52\u5220\u70b9\u7684\uff0c\u51e0\u884c\u4ee3\u7801\u5c31\u53ef\u4ee5\u641e\u5b9a\u3002\n```c\n#include<bits/stdc++.h>\n#define MAXN 200005\n#define INF 0x3f3f3f3f\nusing namespace std;\n\nint n;\nvector<int> G[MAXN];\nint in[MAXN],out[MAXN];\nbool vis[MAXN];\nbool vv[MAXN];\nint d[MAXN];\nint minn;\n\nvoid dfs(int x,int deep)\n{\n    d[x]=deep;\n    vv[x]=true;\n    for(int i=0;i<G[x].size();i++)\n    {\n        int v=G[x][i];\n        if(vis[v]&&!vv[v])\n        {\n            dfs(v,deep+1);\n        }\n        else if(vis[v]&&vv[v])\n        {\n            minn=min(minn,d[x]-d[v]+1);\n        }\n    }\n}\n\nvoid solve()\n{\n    memset(vis,true,sizeof(vis));\n    queue<int> Q;\n    for(int i=1;i<=n;i++)\n    {\n        if(!in[i]&&out[i])\n        {\n            Q.push(i);\n            vis[i]=false;\n        }\n    }\n    while(!Q.empty())\n    {\n        int x=Q.front();\n        Q.pop();\n        for(int i=0;i<G[x].size();i++)\n        {\n            int v=G[x][i];\n            in[v]--;\n            if(!in[v]&&out[v])\n            {\n                Q.push(v);\n                vis[v]=false;\n            }\n        }\n    }\n    for(int i=1;i<=n;i++)\n    {\n        if(vis[i]&&!vv[i])\n        {\n            dfs(i,0);\n        }\n    }\n    printf(\"%d\\n\",minn);\n}\n\nint main()\n{\n    scanf(\"%d\",&n);\n    minn=INF;\n    for(int i=1;i<=n;i++)\n    {\n        int tg;\n        scanf(\"%d\",&tg);\n        G[i].push_back(tg);\n        out[i]++;\n        in[tg]++;\n    }\n    solve();\n    return 0;\n}\n\n```\n",
        "postTime": 1571310610,
        "uid": 210155,
        "name": "abandentsky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u672c\u9898\u7684\u7279\u70b9\u5728\u4e8e\u6bcf\u4e2a\u70b9\u51fa\u5ea6\u90fd\u662f1\uff0c\u6240\u4ee5\u5b58\u56fe\u548c\u904d\u5386\u90fd\u5f88\u65b9\u4fbf\u3002\u8fd9\u9898\u7684\u4e3b\u8981\u601d\u8def\u8fd8\u662f\u904d\u5386+\u5e76\u67e5\u96c6\u5224\u65ad\u73af\u3002\u6211\u7684\u601d\u8def\u548c\u5e26\u6743\u5e76\u67e5\u96c6\u8fd8\u6709\u4e9b\u4e0d\u4e00\u6837\u3002ff\u6570\u7ec4\u7684\u4f5c\u7528\u662f\u8bb0\u5f55\u5728\u641c\u7d22\u4e2d\u67d0\u8282\u70b9\u7684\u5c42\u6570\u3002\u5f53\u9047\u5230\u4e00\u4e2a\u8282\u70b9\u5df2\u7ecf\u904d\u5386\u8fc7\uff0c\u8bf4\u660e\u6b64\u65f6\u5f62\u6210\u4e86\u4e00\u4e2a\u73af\uff0c\u53ea\u8981\u5c06\u5c42\u6570\u76f8\u51cf\u518d+1\u5373\u53ef\u3002\u5f53\u9047\u5230\u4e00\u4e2a\u8282\u70b9\u5df2\u7ecf\u904d\u5386\u8fc7\uff0c\u4f46\u4e0d\u662f\u5728\u672c\u6b21\u904d\u5386\u4e2d\u9047\u5230\u7684\uff0c\u8bf4\u660e\u9047\u5230\u4e86\u4e00\u4e2a\u5728\u5148\u524d\u641c\u7d22\u4e2d\u7684\u8282\u70b9\uff0c\u5408\u5e76break\u5373\u53ef\u3002\u5426\u5219\u5c31\u662f\u4e00\u4e2a\u5168\u65b0\u8282\u70b9\uff0c\u5408\u5e76\u5373\u53ef\u3002\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint g[200001];\nint q[200001];\nint ff[200001],father[200001];\nint i,j,k,m,n,x,y,f,r,minn;\nint getfather(int x){\n\tif(father[x]==x) return x;\n\tfather[x]=getfather(father[x]);\n\treturn father[x];\n}\nvoid merge(int x,int y){\n\tint fx=getfather(x);\n\tint fy=getfather(y);\n\tif(fx!=fy) father[fx]=father[fy];\n}\nbool find(int x,int y){\n\tif(getfather(x)==getfather(y)) return true;\n\t    else return false;\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tminn=n+1;\n\tfor(i=1;i<=n;i++) father[i]=i;\n\tfor(i=1;i<=n;i++){\n\t\tscanf(\"%d\",&x);\n\t    g[i]=x;\n\t}\n\tfor(i=1;i<=n;i++){\n\t\tif(!ff[i]){\n\t\t\tf=0;\n\t\t\tr=1;\n\t\t\tq[1]=i;\n\t\t\tff[i]=1;\n\t\t\twhile (f<r){\n\t\t\t\tf++;\n\t\t\t\tif(!ff[g[q[f]]]){\n\t\t\t\t\tr++;\n\t\t\t\t\tq[r]=g[q[f]];\n\t\t\t\t\tff[q[r]]=ff[q[f]]+1;\n\t\t\t\t\tmerge(q[f],g[q[f]]);\n\t\t\t\t}else if(find(q[f],g[q[f]])){\n\t\t\t\t\tminn=min(minn,ff[q[f]]+1-ff[g[q[f]]]);\n\t\t\t\t\tbreak;\n\t\t\t\t}else {\n\t\t\t\t  merge(q[f],g[q[f]]);\n\t\t\t\t  break;\t\n\t\t\t    }\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\",minn);\n\treturn 0;\n}\n```\n",
        "postTime": 1567044645,
        "uid": 88748,
        "name": "Baker",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "~~\u8fd9\u9053\u56fe\u8bba\u5176\u5b9e\u633a\u6c34\u7684...~~\n\n------\n\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u5f00\u4e00\u4e2a\u7ed3\u6784\u4f53\u6765\u5b58\u50a8\u5404\u4e2a\u540c\u5b66\u7684\u4fe1\u606f\uff1a\n```cpp\nstruct Node{\n\tint id,c,root,time;\t//c\u4e3a\u8be5\u540c\u5b66\u7684\u4fe1\u606f\u4f20\u9012\u5bf9\u8c61\uff0croot\u6807\u8bb0\u8be5\u540c\u5b66\u5728\u54ea\u4e2a\u73af\u5185\uff0ctime\u8bb0\u5f55\u4f20\u9012\u65f6\u95f4\n}a[200010];\n```\n\u56e0\u4e3a\u8fd9\u9053\u9898\u7c7b\u4f3c\u4e8e[P3958 \u5976\u916a](https://www.luogu.org/problem/P3958)\uff0c\u6240\u4ee5\u6211\u7528\u4e86DFS\n```cpp\ninline void dfs(int i,int r,int t)\n{\n\ta[i].root=r;\n\ta[i].time=t;\n\tif(!a[a[i].c].root)\n\t \tdfs(a[i].c,r,t+1);\n\telse\n\t\tif(a[a[i].c].root==r)\t//\u68c0\u6d4b\u662f\u5426\u201c\u6784\u6210\u4e00\u4e2a\u2018\u6b63\u786e\u2019\u7684\u73af\u201d\uff0c\u907f\u514d\u6b7b\u5faa\u73af\u5f53\u573a\u53bb\u4e16\n\t\t \tans=min(ans,a[i].time-a[a[i].c].time+1);\t//+1\u7684\u539f\u56e0\u662f\uff0c\u50cf\u662f3\u65f6\u95f4\u52306\u65f6\u95f4\u6784\u6210\u6b63\u786e\u7684\u73af\uff0c\u867d\u71366-3=3\uff0c\u4f46\u662f\u5176\u5b9e\u6709\u56db\u4e2a\u8282\u70b9\n\treturn;\n}\n```\n\u6ce8\uff1a\u8fd9\u91cc\u201c\u6784\u6210\u4e00\u4e2a\u2018\u6b63\u786e\u2019\u7684\u73af\u201d\u6307\u7684\u662f\u5f53\u4e14\u4ec5\u5f53\u8be5\u540c\u5b66\u7684\u4f20\u9012\u5bf9\u8c61\u4e0e\u5176\u201c\u540c\u6839\u201d\uff0c\u5373\u90fd\u53ef\u4ee5\u7531\u540c\u4e00\u8282\u70b9\u6df1\u641c\u800c\u6765\u3002\u8fd9\u70b9\u4ed4\u7ec6\u60f3\u4e00\u60f3\u5c31\u4f1a\u77e5\u9053\u4e86\u3002\u800c\u8ba1\u7b97\u65f6\u95f4\u7528\u5f53\u524d\u65f6\u95f4\u51cf\u53bb\u76ee\u6807\u65f6\u95f4\uff0c\u800c\u4e0d\u662f\u51cf\u53bb\u201c\u6839\u201d\u65f6\u95f4\uff0c\u662f\u56e0\u4e3a\u53ef\u80fd\u6709\u7c7b\u4f3c\u4e0b\u56fe\u7684\u5751\n~~\u7075\u9b42\u753b\u624b\u8b66\u544a~~\n\uff1a\n![\u6837\u4f8b](https://cdn.luogu.com.cn/upload/pic/74377.png)\n\n\u5176\u4ed6\u5c31\u7b80\u5355\u591a\u4e86\u3002\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#define INF 0x7f7f7f7f\nusing namespace std;\n\nstruct Node{\n\tint id,c,root,time;\n}a[200010];\n\nint n,ans=INF;\n\ninline void dfs(int i,int r,int t)\n{\n\ta[i].root=r;\n\ta[i].time=t;\n\tif(!a[a[i].c].root)\n\t \tdfs(a[i].c,r,t+1);\n\telse\n\t\tif(a[a[i].c].root==r)\n\t\t \tans=min(ans,a[i].time-a[a[i].c].time+1);\n\treturn;\n}\n\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i].c);\n\t\ta[i].id=i;\n\t\ta[i].root=0;\n\t}\n\tfor(register int i=1;i<=n;i++)\n\t\tif(!a[i].root)\n\t\t \tdfs(i,i,0);\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n----------",
        "postTime": 1566558360,
        "uid": 123535,
        "name": "SetsunaFSeiei",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u6211\u5148\u8bf4\u4e24\u4e2a\u89c4\u5219\uff0c\u8fd9\u4e24\u4e2a\u89c4\u5219\u4f7f\u5f97\u6211\u5f97\u51fa\u4e86\u6b63\u786e\u7684\u590d\u6742\u5ea6\uff08\u770b\u4f3c\u662fn^2\uff0c\u5176\u5b9e\u662f2n\uff09\n\n1.\u4e00\u6761\u8fb9\u53ea\u6709\u8f93\u5165\u540e\u624d\u53ef\u80fd\u53d8\u6210\u73af\u7684\u4e00\u6761\u8fb9\uff08\u5c31\u662f\u8bf4\u5148\u8f93\u8fdb\u53bb\u624d\u80fd\u5224\u65ad\uff09\n\n2.\u4e00\u4e2a\u70b9\u548c\u4e00\u6761\u8fb9\u6700\u591a\u5728\u4e00\u4e2a\u73af\u4e2d\n\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u4e00\u6761\u8fb9\u6700\u591a\u662f\u8fdb\u5165\u548c\u51fa\u53bb\uff0c\u4e5f\u5c31\u662f\u8be2\u95ee\u4e24\u6b21\n\n\u8fd9\u4e24\u6761\u662f\u5728A\u6389\u540e\u624d\u60f3\u660e\u767d\u7684\uff08\u672c\u6765\u6211\u662f\u60f3\u66b4\u529b\u6253\u5b8c\uff0c\u62ff\u4e86\u5206\u5c31\u8dd1\uff0c\u7ed3\u679c\u5c31A\u6389\u4e86\uff09\n\n\u5e76\u67e5\u96c6\u5224\u73af\u5c31\u4e0d\u89e3\u91ca\u4e86\uff0c\u8fd9\u91cc\u5e76\u6ca1\u6709\u8def\u5f84\u538b\u7f29\u662f\u56e0\u4e3a\u63a5\u4e0b\u6765\u6709\u4e00\u4e2awhile\u56de\u6eaf\u67e5\u627e\u8fd9\u4e2a\u73af\u4e2d\u6709\u51e0\u4e2a\u70b9\uff08\u6709\u51e0\u4e2a\u70b9\u5c31\u73a9\u51e0\u8f6e\u561b\uff09\n\n\u4ee3\u7801\u5e94\u8be5\u633a\u597d\u7406\u89e3\uff0c\u81f3\u4e8e\u90a3\u4e2amin\u7684\u8f6c\u79fb\u4e3a\u4ec0\u4e48\u52a0\u4e862\u5462\uff1f\u662f\u56e0\u4e3a\u6700\u540e\u6210\u73af\u7684\u4e24\u4e2a\u70b9\u6ca1\u6709\u7b97\u4e0a\n\n\u6bd4\u5982\u8bf4\u6837\u4f8b\uff0c\u7b2c\u4e00\u6b21while\u662ffa[3]\uff01=4\uff0c\u7b2c\u4e8c\u6b21while\u662ffa[2]==4,\u6240\u4ee5\u6ca1\u6709\u8bb0\u5f552\u548c4\u8fd9\u4e24\u4e2a\u70b9\n\n\n\n```cpp\n#include<cstdio>\nint n;\nint fa[200005];\nint l[200005];\nint masu=1000000;\nint ans;\ninline int find(int x)\n{\n\tif(x!=fa[x])\n\t{\n\t\treturn find(fa[x]);\n\t}\n\treturn fa[x];\n}\ninline int min(int a,int b)\n{\n\tif(a<b)\n\t{\n\t\treturn a;\n\t}\n\treturn b;\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfa[i]=i;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&l[i]);\n\t\tif(find(i)!=find(l[i]))\n\t\t{\n\t\t\tfa[i]=l[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tans=0;\n\t\t\tint ti=l[i];//\u56e0\u4e3a\u4e86l[i]\u4e00\u5b9a\u5728\u4e4b\u524d\u51fa\u73b0\u8fc7\uff0c\u6709\u7236\u8282\u70b9\uff0c\u800c\u6211\u4eec\u8fd8i\u8fd9\u4e2a\u8282\u70b9\u5374\u4e0d\u4e00\u5b9a\u6709\u7236\u8282\u70b9\uff0c\u5982\u6837\u4f8b\uff0c\u6b64\u65f6fa[i]==i\uff0c\u4e0d\u80fd\u56de\u6eaf\n\t\t\twhile(fa[ti]!=i)\n\t\t\t{\n\t\t\t\tans++;\n\t\t\t\tti=fa[ti];\n\t\t\t}\n\t\t\tmasu=min(masu,ans+2);\n\t\t}\n\t}\n\tprintf(\"%d\",masu);\n\treturn 0;\n}\n```\n",
        "postTime": 1566294674,
        "uid": 144482,
        "name": "\u6c34\u5343_\u5f31",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "# \u8fd0\u7528\u77e5\u8bc6\u70b9\uff1a\u5e76\u67e5\u96c6+DFS\n\n\n------------\n### \u8fd9\u9053\u9898\u5462\uff0c\u662f\u5c5e\u4e8e\u90a3\u79cd\u53ea\u8981\u7528\u81ea\u5df1\u7684\u8bed\u8a00\u63cf\u8ff0\u5c31\u80fd\u505a\u51fa\u7684\u6c34\u9898\u3002\n\n#### \u90a3\u4e48\uff0c\u6211\u4eec\u4ece\u5206\u6790\u9898\u76ee\u5f00\u59cb\u3002\n\n- \u6bcf\u4e2a\u4eba\u5c06\u81ea\u5df1\u6240\u6709\u7684\u4fe1\u606f\u4ea4\u7ed9\u53e6\u4e00\u4f4d**\u56fa\u5b9a**\u7684\u4eba\n- \u6bcf\u4e2a\u4eba**\u540c\u65f6**\u4f20\u9012\u4fe1\u606f\n- \u6e38\u620f\u7ed3\u675f\u7684\u6761\u4ef6\u4e3a\u4e00\u4e2a\u4eba\u6536\u5230**\u81ea\u5df1\u7684\u4fe1\u606f**\n\n\u90a3\u4e48\uff0c\u663e\u800c\u6613\u89c1\u5730\uff0c\u6211\u4eec\u53ef\u4ee5\u63a8\u51fa\u4ee5\u4e0b\u51e0\u4e2a\u7ed3\u8bba\uff1a\n\n **\u5982\u679c\u628a\u6bcf\u4e2a\u4eba\u770b\u505a\u4e00\u4e2a\u70b9\uff0c\u628a\u4fe1\u606f\u6e20\u9053\u770b\u505a\u4e00\u6761\u5355\u5411\u8fb9**\n \n1. \u6bcf\u4e2a\u70b9\u5c06\u70b9\u4e0a\u4fe1\u606f\u4f20\u7ed9\u4e0b\u4e00\u4e2a\u70b9\u3002\n2. \u6bcf\u4e2a\u70b9\u540c\u65f6\u4f20\u9012\uff0c\u5373\u4e00\u6761\u4fe1\u606f\u57281\u5355\u4f4d\u65f6\u95f4\u5185\u901a\u8fc7\u4e00\u6761\u8fb9\n3. \u70b9\u6536\u5230\u672c\u8eab\u7684\u4fe1\u606f\u65f6\uff0c\u6e38\u620f\u7ed3\u675f\n\n**\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u53ea\u9700\u8981\u627e\u5230\u4ece\u4e00\u4e2a\u70b9\u51fa\u53d1\u518d\u7531\u6e20\u9053\u56de\u5230\u81ea\u5df1\u7684\u6700\u77ed\u8def\u5f84\uff0c\u5373\u6b64\u6709\u5411\u56fe\u4e2d\u6700\u5c0f\u73af\u3002**\n\n\n```c++\n\nvoid dfs(int x)//\u8fd9\u91cc\u662f\u4e3a\u4e86\u627e\u51fa\u73af\n{\n\tif (vis[x])//\u6807\u8bb0\u8def\u5f84\u4e0a\u7684\u70b9\n\t{\n\t\tans = min(ans,getlen(x,x));\n\t\treturn ;\n\t}\n\tvis[x] = 1;\n   dfs(to[x]);//\u53ef\u4ee5\u56de\u6eaf\u7684\u641c\u7d22\n   vis[x] = 0;\n    \n```\n\n### \u8fd9\u91cc\u5c31\u4e0d\u5f97\u4e0d\u63d0\u5230\u4e00\u4e2a\u9012\u5f52\u6c42\u73af\u89c4\u6a21\u7684\u529e\u6cd5 : dg(x)\n\n```cpp\nint getlen(int target,int x) //\u8868\u793a\u5728x\u8282\u70b9\uff0c\u76ee\u6807\u4e3atarget\n{   \n   //to[x]\u6307x\u7684\u4e0b\u4e00\u4e2a\u70b9\n\treturn to[x] != target ? getlen(target,to[x])  + 1 : 1;\n}\n```\n\n\n------------\n## \u56e0\u4e3a\u8981\u8003\u8651\u5b58\u5728\u591a\u4e2a\u4e0d\u8fde\u901a\u7684\u56fe\uff0c\u6211\u4eec\u9700\u8981\u904d\u5386\u6240\u6709\u56fe\u3002\n# BUT\uff0c\u6211\u53ef\u6ca1\u8bf4\u904d\u5386\u6240\u6709\u70b9\u3002\n\n#### - \u65b9\u6cd51\uff1a \u641c\u7d22\u4e00\u4e2a\u8fde\u901a\u56fe\u65f6\u6807\u8bb0\u5b83\u4e0a\u9762\u7684\u70b9\uff0c\u7136\u540e\u53bb\u8dd1\u4e0d\u5728\u70b9\u96c6\u91cc\u7684\u70b9\n```cpp\n\n\nfor (int i = 1;i <= n;i++)\n\t{\n\t\tif (!vvis[fa[i]]) \n\t\t{\n\t\t\tdfs(i);\n\t\t\tvvis[fa[i]] = 1;\n\t\t}\n\t}\n```\n\n#### - \u65b9\u6cd52\uff1a \u5229\u7528\u5e76\u67e5\u96c6\u7684\u7edf\u4e00\u6027\uff0c\u7ed9\u6bcf\u4e2a\u56fe\u9009\u4e00\u4e2a\u7236\u4eb2\uff0c\u62fc\u7239\u5373\u53ef\n\n```\nfor (int i = 1;i <= n;i++) fa[i] = i;\n\tfor (int i = 1;i <= n;i++)\n\t{\n\t\tscanf(\"%d\",&to[i]);\n\t\tint xx = find(i),yy = find(to[i]);\n\t\tif (fa[xx] != fa[yy]) fa[xx] = yy;\n\t}\n\tfor (int i = 1;i <= n;i++)\n\t{\n\t\tif (!vvis[find(i)]) \n\t\t{\n\t\t\tdfs(i);\n\t\t\tvvis[find(i)] = 1;\n\t\t}\n\t}\n```\n\n\n# ~~**\u6652\u4e0a\u4e8c\u8d27\u8bdd\u75e8\u7684\u6211\u7684\u4ee3\u7801**~~\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstring>\n#include<cstdio>\nusing namespace std;\nint n;\nint to[200001],vis[200001],ans = 2147483647,vvis[200001],fa[200001];\nint find(int x)\n{\n\treturn fa[x] = (fa[x] == x) ? x : find(fa[x]);\n}\nint getlen(int target,int x) \n{\n\treturn to[x] != target ? getlen(target,to[x])  + 1 : 1;\n}\nvoid dfs(int x)\n{\n\tif (vis[x]) \n\t{\n\t\tans = min(ans,getlen(x,x));\n\t\treturn ;\n\t}\n\tvis[x] = 1,dfs(to[x]),vis[x] = 0;\n}\nint main()\n{\n\tfreopen(\"message.in\",\"r\",stdin);freopen(\"message.out\",\"w\",stdout);\n\tscanf(\"%d\",&n);\n\tfor (int i = 1;i <= n;i++) fa[i] = i;\n\tfor (int i = 1;i <= n;i++)\n\t{\n\t\tscanf(\"%d\",&to[i]);\n\t\tint xx = find(i),yy = find(to[i]);\n\t\tif (fa[xx] != fa[yy]) fa[xx] = yy;\n\t}\n\tfor (int i = 1;i <= n;i++)\n\t{\n\t\tif (!vvis[find(i)]) \n\t\t{\n\t\t\tdfs(i);\n\t\t\tvvis[find(i)] = 1;\n\t\t}\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1558167720,
        "uid": 56849,
        "name": "\u96f7\u5dde\u534a\u5c9b\u5c9b\u4e3b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u76ee\u7ecf\u8fc7\u6211\u4eec\u5206\u6790\uff0c\u53ef\u4ee5\u53d1\u73b0\u8fd9\u662f\u4e00\u4e2a\u6c42\u6700\u5c0f\u73af\u7684\u9898\u76ee\n\n\u56e0\u4e3a\u5982\u679c\u4e0d\u662f\u5b58\u5728\u73af\u6bcf\u4e2a\u4eba\u90fd\u4e0d\u4f1a\u4ece\u522b\u7684\u540c\u5b66\u5904\u542c\u5230\u81ea\u5df1\u7684\u4fe1\u606f\n\n\u81f3\u6b64\u9898\u76ee\u8f6c\u5316\u4e3a\u6c42\u6700\u5c0f\u73af\u7684\u9898\u76ee\n\n\u770b\u4e86\u4e0b\u9898\u89e3\u90fd\u662f\u7528\u5e76\u67e5\u96c6\u7684\u601d\u8def\u7684\uff0c\u56e0\u4e3a\u521a\u521a\u5b66\u5b8ctarjan\uff0c\u56e0\u6b64\u53ef\u4ee5\u628a\u8fd9\u7bc7\u9898\u89e3\u65b9\u6cd5\u662f\u8ff7\u4f60\u7248\u7684tarjan\uff0c\u6216\u8005\u8bf4\u662f\u4e00\u79cddfs\u601d\u60f3\u7684\u66b4\u529b\u7b97\u6cd5\u3002\n\n\u6211\u4eec\u60f3\u4e00\u4e0btarjan\u6c42\u5f3a\u8fde\u901a\u5206\u91cf\u662f\u5982\u4f55\u53bb\u6c42\u7684\uff0c\u6ca1\u9519\u901a\u8fc7dfn\u8ddflow\u4e24\u4e2a\u6570\u7ec4\uff0c\u8fd9\u6b21\u6211\u4eec\u8981\u6c42\u51fa\u6700\u5c0f\u73af\uff0c\u4f46\u662f\u53ea\u9700\u8981\u77e5\u9053\u662f\u591a\u5c11\u5c31\u53ef\u4ee5\u4e86\uff0c\u6240\u4ee5\u53ea\u9700\u8981dfn\u6570\u7ec4\u5373\u53ef\n\n\u65f6\u95f4\u590d\u6742\u5ea6O\uff08n\uff09\n\n\u4e0b\u9762\u4e0a\u4ee3\u7801\n\n```cpp\n#include \"cstring\"\n#include \"iostream\"\nusing namespace std;\nint head[200009];//\u5b58\u56fe\nint dfn[200009],tong[200009];//\u5176\u5b9e\u8fd9\u4e2a\u5224\u65ad\u662f\u4e0d\u662f\u641c\u5230\u7684\u6570\u7ec4\u6ca1\u5fc5\u8981\u6709\uff0c\u65e0\u8bba\u4ec0\u4e48\u60c5\u51b5\u90fd\u4e0d\u4f1a\u5f71\u54cd\u6700\u5c0f\u503c\nint t,ans=0x7f7f7f7f;//\u6781\u5927\u503c\nvoid dfs(int a,int p)\n{\n\tdfn[a]=++t,tong[a]=p;//\u8bb0\u5f55\u5f53\u524d\u65f6\u95f4\u6233\n\tint v=head[a];\n\tif(dfn[v])\n\t{\n\t     if(tong[a]==tong[v])\n\t\tans=min(ans,dfn[a]-dfn[v]+1);\n\t}\n\telse\n\t\tdfs(v,p);\n}\nint main()\n{\n\tint N;\n\tcin>>N;\n\tfor(int i=1;i<=N;i++)\n\t{\n\t\tint a;\n\t\tscanf(\"%d\",&a);\n\t\thead[i]=a;\n\t}\n\tfor(int i=1;i<=N;i++)\n\t\tif(!dfn[i])//\u4fdd\u8bc1\u6bcf\u4e00\u4e2a\u70b9\u90fd\u4f1a\u88ab\u641c\u5230\n\t\t\tdfs(i,i);\n\tcout<<ans;\n \n}\n```\n",
        "postTime": 1557631508,
        "uid": 185016,
        "name": "lqbgsdy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "code by remind_0\n\n#  _**tarjan\uff01**_ \n\n\u770b\u5230\u90a3\u4e48\u591a\u597d\u7684\u9898\u89e3\uff0c\u5374\u6ca1\u6709\u4e00\u7bc7\u7528\u5230tarjan\u7b97\u6cd5\u7684\n\n~~tarjan\u4ed6\u8001\u4eba\u5bb6\u8981\u662f\u6cc9\u4e0b\u6709\u77e5\uff0c\u4e00\u5b9a\u4f1a\u3002\u3002\u3002~~\n\n\u55ef\uff0c\u8ba4\u771f\u8bb2\u9898\n\n\u9996\u5148\uff0c\u5efa\u7acb\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u6211\u4eec\u53d1\u73b0n\u4e2a\u70b9\u6709n\u6761\u8fb9\uff0c\n\n\u6240\u4ee5\u80af\u5b9a\u5728\u6709\u5411\u56fe\u4e2d\u5fc5\u5b9a\u5b58\u5728\u81f3\u5c11\u4e00\u4e2a\u73af\uff08\u62bd\u5c49\u539f\u7406\uff09\n\n\u800c\u6211\u4eec\u6839\u636e\u9898\u610f\u53ef\u4ee5\u5f97\u51fa\uff1a\u6700\u5148\u4ece\u4ed6\u4eba\u53e3\u4e2d\u77e5\u9053\u81ea\u5df1\u751f\u65e5\u7684\u4eba\uff0c\u5fc5\u5b9a\u5728\u6700\u5c0f\u7684\u90a3\u4e2a\u73af\u4e2d\u3002\n\n\u6240\u4ee5\u6c42\u51fa\u56fe\u4e2d\u6700\u5c0f\u73af\u5305\u542b\u70b9\u7684\u6570\u76ee\uff0c\u5c31\u662f\u7b54\u6848\u4e86\n\n\u6240\u4ee5\u6211\u4eec\u5f00\u5fc3\u7684\u8dd1\u4e00\u904dtarjan\u7b97\u6cd5\u7684\u5f3a\u8fde\u901a\u5206\u91cf\uff08\u73af\uff09,\u5e76\u540c\u65f6\u7ef4\u62a4\u6700\u5c0f\u7684\u5f3a\u8fde\u901a\u5206\u91cf\uff08\u6392\u9664\u81ea\u73af\uff09\u5c31\u53ef\u4ee5\u4e86\uff1b\n\u5c31\u53ef\u4ee5\u5f97\u51fa\u6b63\u89e3\u4e86QWQ\n\n\u5176\u4f59\u7ec6\u8282\u90fd\u5728\u4ee3\u7801\u91cc\u7565\n\n```\n//code by Remind_0\n#include<bits/stdc++.h> \n\n\n\nusing namespace std;\n\nint n;\nstruct edge{\n\tint next,zd;\n}ed[200005];\nint first[200005],en;\nvoid add(int a,int b){//\u524d\u5411\u661f\u52a0\u8fb9\n\ten++;\n\ted[en].next=first[a];\n\ted[en].zd=b;\n\tfirst[a]=en;\n}\nint num[200005];\nbool p[200005];\n\nint whole;//\u7ef4\u62a4\u6700\u5c0f\u73af\nint dfn[200005],low[200005];//\u65f6\u95f4\u6233\u548c\u8ffd\u6eaf\u503c\nint tot;\nint stact[200005],timm;\nvoid tarjan(int x){\n\tdfn[x]=low[x]=++tot;\n\tstact[++timm]=x;\n\tp[x]=1;\n\tfor(int i=first[x];i;i=ed[i].next){\n\t\tint y=ed[i].zd;\n\t\tif(dfn[y]==0){\n\t\t\ttarjan(y);\n\t\t\tlow[x]=min(low[x],low[y]);\n\t\t}\n\t\telse if(p[y]==1){\n\t\t\tlow[x]=min(low[x],dfn[y]);\n\t\t}\n\t\t\n\t}\n\n\tif(dfn[x]==low[x]){\n\t\tint l;\n\t\tl=stact[timm];\n\t\tint m=0;\n\t\tfor(;;){\n\t\t\tp[l]=0;\n\t\t\tm++;//\u7b97\u51fa\u8be5\u5f3a\u8054\u540c\u5206\u91cf\u4e2d\u7684\u70b9\u6570\n\t\t\t\n\t\t\tif(stact[timm]==x){\n\t\t\t\ttimm--;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttimm--;\n\t\t\tl=stact[timm];\n\t\t}\n\t\tif(m!=1){//\u6392\u9664\u662f\u81ea\u73af\n\t\t\twhole=min(whole,m);\n\t\t}\n\t}\n}\nbool d[200005];\nint  dep[200005];\nqueue<int> q;\n\nvoid bfs(){\n\tq.push(0);\n\twhile(q.size()){\n\t\tint x=q.front();\n\t\tq.pop();\n\t\tfor(int i=first[x];i;i=ed[i].next){\n\t\t\tint y=ed[i].zd;\n\t\t\tdep[y]=max(dep[y],dep[x]+1);\n\t\t\tq.push(y);\n\t\t}\n\t}\n}\nint main(){\n\twhole=99999999;\n\tcin>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tint a;\n\t\tscanf(\"%d\",&a);\n\t\tadd(i,a);\n\t\td[a]=1;\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tif(dfn[i])continue;\n\t\ttarjan(i);\n\t}\t\n\tcout<<whole<<endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1552580985,
        "uid": 78636,
        "name": "Remind_Arwen",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "## \u601d\u8def\uff1a\u627e\u6700\u5c0f\u73af\n- $dfs$\u91cc\uff1a\n- $fst$\u6307\u4ece\u7b2c\u51e0\u4e2a\u70b9\u5f00\u59cb\u627e\n- $i$\u8868\u793a\u73b0\u5728\u5728\u7b2c\u51e0\u4e2a\u70b9\n- $num$\u8868\u793a\u5728\u8fd9\u6b21\u5bfb\u627e\u7684\u7b2c\u51e0\u4e2a\u70b9\n\n## \u6ce8\u610f\uff1a\u627e\u5230\u73af\u5fc5\u987b\u662f\u5728\u540c\u4e00\u6b21\u627e\u5230\u7684\u3002![](https://cdn.luogu.com.cn/upload/pic/45625.png)\u6bd4\u5982\u8fd9\u4e2a\uff0c\u4ece$1$\u5f00\u59cb\u627e\u7684\u65f6\u5019\u7b2c\u4e8c\u6b21\u627e\u5230$2$\uff0c\u8fd9\u662f\u4e00\u4e2a\u73af\uff0c\u56e0\u4e3a\u4ed6\u4eec\u7684$f$\u503c\u76f8\u7b49\u3002\u4ece$8$\u5f00\u59cb\u627e\u7684\u65f6\u5019\u627e\u5230$1$\u5c31\u505c\u6b62\u4e86\uff0c\u4f46\u4e0d\u662f\u4e00\u4e2a\u73af\uff0c\u56e0\u4e3a\u4ed6\u4eec\u4e0d\u662f\u540c\u4e00\u6b21\u627e\u5230\u7684\uff0c$f$\u503c\u4e0d\u4e00\u6837\u3002\n```cpp\n#include<stdio.h>\n#define min(x,y) ((x)<(y)?(x):(y))\n#define rpt(n) for(register int ttxyc=0;ttxyc<n;++ttxyc)\ninline int read()\n{\n    register int x=0,t=0;register char c=getchar();\n    for(;c<'0'||c>'9';t|=c=='-',c=getchar());\n    for(;c>='0'&&c<='9';x=(x<<3)+(x<<1)+(c^48),c=getchar());\n    return t?-x:x;\n}\nint n,a[200000],ans,v[200000],f[200000];\nint dfs(int fst,int i,int num)\n{\n\tif(v[i])//\u8d70\u5230\u8fc7\u8fd9\u4e2a\u70b9\n\t{\n\t\tif(f[i]==fst)return num-v[i];//\u662f\u5728\u540c\u4e00\u6b21\u91cc\u9762\u627e\u7684\n\t\telse return n;//\u4e0d\u662f\u540c\u4e00\u6b21\uff0c\u65e0\u6548\n\t}\n\tv[i]=num;f[i]=fst;return dfs(fst,a[i],num+1);//\u9012\u5f52\n}\nmain()\n{\n    ans=n=read();rpt(n)a[ttxyc]=read()-1;//\u8f93\u5165 \n    for(register int i=0;i<n;++i)\n    {\n    \tif(v[i])continue;//\u8d70\u5230\u8fc7\u8fd9\u4e2a\u70b9\n    \tregister int _=dfs(i,i,1);//\u8868\u793a\u8fd9\u4e2a\u73af\u7684\u957f\u5ea6\n    \tans=min(ans,_);//\u53d6\u6700\u5c0f\u503c\n    }\n    printf(\"%d\",ans);//\u8f93\u51fa\n}/**/\n```",
        "postTime": 1544238180,
        "uid": 90693,
        "name": "_\u2022\u0301\u3078\u2022\u0301\u256c_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5176\u5b9e\u5c31\u662f\u8981\u6c42\u56fe\u4e2d\u7684\u6700\u5c0f\u73af\uff0c\u800c\u8fd9\u5c31\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u6765\u505a\uff0c\uff08\u5f53\u7136\u4e5f\u53ef\u4ee5\u7528floyd\u505a\uff09\u3002\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u53ef\u4ee5\u7528\u4e24\u79cd\u65b9\u6cd5\u505a\u3002\u5148\u4ecb\u7ecd\u4ee3\u7801\u7684\u505a\u6cd5\uff1a\u5bf9\u4e8e\u6bcf\u6b21\u8f93\u5165\u7684i\u548cx\uff0c\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n1. \u5df2\u7ecf\u662f\u5728\u4e00\u4e2a\u73af\u4e0a\u4e86\uff0c\u90a3\u4e48\u76f4\u63a5\u6309\u5e76\u67e5\u96c6\u53bb\u627e\uff08\u6ce8\u610f\u4e0d\u80fd\u8def\u5f84\u538b\u7f29\uff09\uff0c\u8bb0\u5f55\u8def\u5f84\u957f\u5ea6\u5e76\u53d6\u6700\u5c0f\u503c\u3002\n1. \u8fd8\u4e0d\u5728\u4e00\u4e2a\u73af\u4e0a\uff0c \u90a3\u4e48i\u6307\u5411x,\u5373f[i]=x; \u6ce8\u610f\u662f\u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\uff0c\u6240\u4ee5\u5728\u7b2c\u4e00\u6b65\u627e\u73af\u7684\u65f6\u5019\uff0c\u5c31\u8981\u4ecex\u5f00\u59cb\u627e\uff0c\u76f4\u5230\u627e\u5230i\u3002\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint n,x,cnt,mn,f[200012];\ninline int find(int x)\n{\n\tcnt++;//\u5982\u679c\u6709\u6743\u503c\u4e5f\u53ef\u4ee5+=a[x];\n\tif (f[x]==x) return x; \n\treturn find(f[x]);\n} \nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor (int i=1; i<=n; i++) f[i]=i;\n\tmn=100000012;\n\tfor (int i=1; i<=n; i++)\n\t{\n\t\tcnt=0;\n\t\tscanf(\"%d\",&x);\n\t\tif (find(x)==i) mn=min(mn,cnt);\n\t\telse f[i]=x;\n\t}\n\treturn printf(\"%d\\n\",mn),0;\n}\n```\n\u8fd8\u6709\u4e00\u79cd\u65b9\u6cd5\uff0c\u901a\u8fc7\u8def\u5f84\u538b\u7f29\u6c42\u51fa\u5728\u67d0\u4e00\u56fe\u4e2d\u7684\u73af\uff0c\u82e5\u5b58\u5728\u4e24\u4e2a\u8fde\u8fb9\u7684\u70b9\u5728\u540c\u4e00\u5e76\u67e5\u96c6\u4e2d\uff0c\u90a3\u4e48\u4e00\u5b9a\u6709\u73af\uff0c\u73af\u7684\u6743\u503c\u4e3a\u4e24\u70b9\u5230\u7956\u5148\u7684\u6743\u503c\u548c\u52a01\uff0c\u4e0b\u9762\u662f\u535a\u5ba2\u91cc\u7684\u4ee3\u7801\uff1a\n```cpp\nint find(int x){ \n    if(f[x] != x){\n        int o = f[x];\n        f[x] = find(f[x]);\n        d[x] += d[o];\n    }\n    return f[x];\n}\nint main(){\n  scanf(\"%d\", &n);\n  for(int i=1;i<=n;i++) f[i] = i;\n  for(int i=1;i<=n;i++){\n    scanf(\"%d\", &x);\n    int a = find(i), b = find(x);\n    if(a != b) { f[a] = b; d[i] = d[x]+1; }\n    else  min = std::min(min, d[x] + d[i] + 1);\n  }\n  printf(\"%d\\n\" ,min);\n  return 0;\n}\n```\n\u8fd8\u6709floyd\u4ee3\u7801:\n```cpp\nint G[N][N], dis[N][N];\nint main(){\n    for(int k = 1; k <= n; k++){\n    for(int i=1;i<=k-1;i++)    \n         for(int j=i+1;j<=k-1;j++)\n              ans = std::max(ans, dis[i][j]+G[k][i]+G[k][j]);\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=n;j++)\n          dis[i][j] = std::max(dis[i][j], G[i][k]+G[k][j]);                   \n    }                         \n    return 0;\n}\n```\n\n\u63a8\u8350&\u5f15\u7528\u81ea\uff1a\u6c42\u6700\u5c0f\u73af\u535a\u5ba2\uff1ahttps://www.cnblogs.com/fseject-2002/p/9724557.html",
        "postTime": 1541071458,
        "uid": 43103,
        "name": "Tanktt",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "~~\u849f\u84bb\u65f6\u9694\u8bb8\u4e45\u518d\u6b21\u53d1\u9898\u89e3~~\n\n\u672c\u9898\u7684\u9898\u610f\u4e0d\u96be\u7406\u89e3\uff0c\u5373\n## \u6c42\u56fe\u4e2d\u7684\u6700\u5c0f\u73af\u7684\u957f\u5ea6\n\n\u56e0\u4e3a\u6e38\u620f\u7ed3\u675f\u662f\u4e00\u4e2a\u4eba\u4ece\u522b\u4eba\u53e3\u4e2d\u542c\u5230\u4e86\u81ea\u5df1\u7684\u751f\u65e5\uff0c\u90a3\u4e48\u6e38\u620f\u8fdb\u884c\u7684\u56de\u5408\u6570\u5373\u4e3a\u6700\u5c0f\u73af\u7684\u957f\u5ea6\u3002\n\n #### \u6c42\u73af\u6700\u7b80\u4fbf\u7684\u65b9\u6cd5\u5c31\u662fdfs\uff0c\u5f53\u627e\u5230\u4e00\u4e2a\u70b9\u7684v[i]\u4e0d\u4e3a0\uff0c\u5373\u4ee3\u8868\u5df2\u7ecf\u6765\u8fc7\u8fd9\u4e2a\u70b9\uff0c\u4fbf\u66f4\u65b0\u7b54\u6848\n \n \u4f46\u662f\uff0c\u5982\u679c\u4f60\u5c31\u8fd9\u4e48\u8fdb\u884c\u6d4b\u8bd5\u7684\u8bdd\uff0c\u5c31\u4f1a\u53d1\u73b0\u6837\u4f8b\u8f93\u51fa1\u3002\u56e0\u4e3a\n ### \u6700\u540e\u4e00\u4e2a\u70b95\u4e0d\u57281\u5f00\u59cb\u7684\u73af\u4e2d\uff0c\u5374\u80fd\u8d70\u5230\u73af\u4e0a\uff0c\u53c8\u56e0\u4e3a\u73af\u4e0a\u7684v[i]\u5df2\u7ecf\u66f4\u65b0\u4e0d\u5728\u7b49\u4e8e1\uff0c\u6240\u4ee5\u7a0b\u5e8f\u8bef\u4ee5\u4e3a\u627e\u5230\u4e86\u73af\u3002\n \n \u90a3\u4e48\u600e\u4e48\u907f\u514d\u5462\uff1f\n \n \u5176\u5b9e\u5f88\u7b80\u5355\u3002\n \n ## \u53ea\u8981\u628a\u6bcf\u4e00\u6b21dfs\u6807\u8bb0\u7684\u70b9\u6807\u8bb0\u6210\u4e0d\u540c\u7684\u6570\uff0c\u5c31\u80fd\u5206\u8fa8\u51fa\u662f\u4e0d\u662f\u540c\u4e00\u6b21dfs\u6807\u8bb0\u7684\u4e86\n\n\u90a3\u4e48\u4e0a\u4ee3\u7801\n```cpp\n#include <iostream>\n#include <cstdio>\nusing namespace std;\nint n,ans=1e9,tot;\nint t[200005],b[200005];//b\u8868\u793a\u662f\u7b2c\u51e0\u6b21\u641c\u5230\u7684\uff0c\u4ee5\u8ba1\u7b97\u957f\u5ea6\nshort v[200005],f=0;\nvoid dfs(int k,int p)//k\u8868\u793a\u6b63\u5728\u641cK\u53f7\u70b9\uff0cp\u8868\u793a\u662f\u672c\u6b21dfs\u641c\u7684\u7b2cp\u4e2a\u70b9\n{\n    if(v[k])\n    {\n        if(v[k]==f)//\u5224\u65ad\u662f\u4e0d\u662f\u540c\u4e00\u6b21\uff0c\u5982\u679c\u662f\uff0c\u66f4\u65b0\u7b54\u6848\n        ans=min(ans,p-b[k]);\n        return ;\n    }\n    v[k]=f;b[k]=p;//\u66f4\u65b0\n    dfs(t[k],p+1);\n}\nint main()\n{\n//\tfreopen(\"in.txt\",\"r\",stdin);\n   \tcin>>n;\n   \tfor(int i=1;i<=n;i++)\n   \tcin>>t[i];\n   \tfor(int i=1;i<=n;i++)\n   \t{\n   \t\tf++;//\u8868\u793a\u662f\u7b2c\u51e0\u6b21dfs\u4ee5\u4fbf\u533a\u5206\n   \t\tif(!v[i])\n   \t\t\tdfs(i,1);\n   \t}\n   \tcout<<ans;\n    return 0;\n}\n```\n\u6ce8\u610f\uff0c\u80fd\u8fd9\u4e48\u505a\u7684\u524d\u63d0\u662f\n\n### \u201c\u53ef\u80fd\u6709\u4eba\u53ef\u4ee5\u4ece\u82e5\u5e72\u4eba\u90a3\u91cc\u83b7\u53d6\u4fe1\u606f\uff0c \u4f46\u662f\u6bcf\u4eba\u53ea\u4f1a\u628a\u4fe1\u606f\u544a\u8bc9\u4e00\u4e2a\u4eba\uff0c\u5373\u81ea\u5df1\u7684\u4fe1\u606f\u4f20\u9012\u5bf9\u8c61\u201d",
        "postTime": 1540822673,
        "uid": 80407,
        "name": "\u8001\u5361\u624b\u673a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5f88\u7b80\u5355\u7684 \u849f\u84bb\u7684\u6211\u8c8c\u4f3c\u505a\u590d\u6742\u4e86 \u7528**Kusaraju**\u505a\u7684 233\n\u5b9e\u9645\u4e0a\u5c31\u662f\u7528Kusaraju\u6c42\u5f97\u5f3a\u8fde\u901a\u5206\u91cf \u6e38\u620f\u8f6e\u6570\u4e5f\u5c31\u662f\u70b9\u4e2a\u6570\u6700\u5c0f\u7684\u5f3a\u8fde\u901a\u5206\u91cf\n\u7531\u9898\u610f\u5f97 \u6d88\u606f\u4e0d\u53ef\u80fd\u76f4\u63a5\u81ea\u5df1\u4f20\u7ed9\u81ea\u5df1 \u4e5f\u5c31\u662f\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\u9762\u7684\u70b9\u7684\u4e2a\u6570\u4e0d\u80fd\u4e3a1\u3002\n\u6240\u4ee5\u53d6\u6700\u5c0f\u503c\u7684\u65f6\u5019\u8981\u7279\u5224\u4e00\u4e0b \u5982\u679c\u4e3a1\u5c31\u4e0d\u66f4\u65b0\n\u4e0b\u9762\u5c31\u662f\u6211\u6df7\u4e71\u7684\u4ee3\u7801233 \uff08windows\u4e0b\u8fd0\u884c\u5c31\u7206\u70b8\uff09 \nwindows\u4e0bmain\u51fd\u6570\u7684\u6808\u8c8c\u4f3c\u6709\u70b9\u5c0f \u5efa\u8bae\u7528\u6d1b\u8c37\u5728\u7ebfide \u6d1b\u8c37ide\u4e0a\u5b8c\u7f8e\u8fd0\u884c 233 \n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\ntypedef int _int;\n\nconst _int MAXN=200010;\n\n_int ver[2][MAXN],next[2][MAXN],head[2][MAXN],tot,toc;\n\nint tempa[MAXN],tempb[MAXN],n;\n\nclass kosaraju_callback{\n    private:\n        int scc_num;set<int> scc[MAXN];\n    public:\n    \n        int get_scc_num(){\n            return this->scc_num;\n        }\n    \n        void add_scc(set<int> &g){\n            scc_num++;\n            this->scc[scc_num]=g;\n        }\n        \n        set<int> get_scc(int id){\n            return this->scc[id];\n        }\n};\n\nvoid add(int x,int y,int type){\n    if(!type){\n        tot++;ver[0][tot]=y;next[0][tot]=head[0][x];head[0][x]=tot;\n    }else{\n        toc++;ver[1][tot]=y;next[1][tot]=head[1][x];head[1][x]=toc;\n    }\n}\n\nvoid first_dfs(int cur,stack<int> &s){\n    tempa[cur]=1;\n    for(int i=head[0][cur];i;i=next[0][i]){\n        if(!tempa[ver[0][i]]){\n            first_dfs(ver[0][i],s);\n        }\n    }\n    s.push(cur);\n}\n\nvoid second_dfs(int cur,set<int> &g){\n    tempb[cur]=1;\n    g.insert(cur);\n    for(int i=head[1][cur];i;i=next[1][i]){\n        if(!tempb[ver[1][i]]){\n            second_dfs(ver[1][i],g);\n        }\n    }\n}\n\nkosaraju_callback kosaraju(){\n    stack<int> s;kosaraju_callback call_back;\n    for(int i=1;i<=n;i++){\n        if(!tempa[i]){\n            first_dfs(i,s);\n        }\t\n    }\n    while(!s.empty()){\n        int x=s.top();\n        if(!tempb[x]){\n            set<int> g;\n            second_dfs(x,g);\n            call_back.add_scc(g);\n        }\n        s.pop();\n    }\n    return call_back;\n}\n\nint ans=233333333;\n\nint main(){\n    cin>>n;\n    for(int i=1;i<=n;i++){\n        int to;\n        cin>>to;\n        add(i,to,0);\n        add(to,i,1);\n    }\n    kosaraju_callback call_back=kosaraju();\n    for(int i=1;i<=call_back.get_scc_num();i++){\n        int size=call_back.get_scc(i).size();\n        ans=size>1?min(ans,size):ans;\t\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n```",
        "postTime": 1537703023,
        "uid": 60467,
        "name": "Cloud_Shadow",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u840c\u65b0\u6765\u53d1\u9898\u89e3\u5566~\u8fd9\u662f\u4e00\u9053\u6709\u8da3\u7684\u56fe\u8bba\u9898\uff0c\u53ef\u6253\u6a21\u677f\uff0c\u4ea6\u53ef\u953b\u70bc\u601d\u7ef4\u3002\n\n\u63d0\u4f9b\u4e00\u4e2a\u6613\u4e8e\u7406\u89e3\u7684\u601d\u8def\uff0c\n###  BFS\u3002\n\nps\uff1a\u6b64**BFS**\u57fa\u4e8e**tarjian**\u7b97\u6cd5\u7684\u601d\u8def\u53ca\u539f\u7406\u3002~~\uff08\u4e2a\u4eba\u8ba4\u4e3a\uff09~~\n\n\u9996\u5148\u660e\u786e\u9898\u610f\uff1a\u6c42\u6700\u5c0f\u73af\u3002\u4e0d\u96be\u60f3\u5230\uff0c\u6b64\u9898\u53ef\u7528\u6c42\u6709\u5411\u56fe\u5f3a\u8fde\u901a\u5206\u91cf\u7684 **tarjian** \u7b97\u6cd5\uff0c\u6253\u4e00\u904d\u5c31\u53ef\u4ee5\u8fc7\u4e86\u3002\u4f46\u8981\u6ce8\u610f\uff0c\u5e76\u4e0d\u662f\u6240\u6709\u6c42\u6700\u5c0f\u73af\u7684\u9898\u76ee\u90fd\u53ef\u4ee5\u4f7f\u7528**tarjian**!!\uff09\uff0c\n\n######  \u672c\u9898\u7684\u7279\u6b8a\u6027\u5728\u4e8e\uff1a\n\n\u6bcf\u4e2a\u70b9\u7684\u51fa\u5ea6\u90fd\u4e3a1\uff0c\u4fdd\u8bc1\u4e86\u4e0d\u5b58\u5728\u67d0\u4e2a\u70b9\uff0c\u540c\u65f6\u8fde\u63a5\u4e86\u4e0d\u6b62\n\u4e00\u4e2a\u73af\uff08\u4e0d\u7406\u89e3\u7684\u7ae5\u978b\u53ef\u4ee5\u753b\u4e2a\u201c**8**\u201d\u4f53\u4f1a\u4e00\u4e0b\uff09\n\n~~tarjian\u5927\u6750\u5c0f\u7528\uff1f~~  \n\n\u7b80\u5355\u6613\u61c2**BFS **\u4e0a\u7ebf\uff01\uff01\n\n\n\u5b9e\u73b0\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u672a\u8bbf\u95ee\u7684\u70b9\u8fdb\u884cBFS\uff0c\u5728\u6bcf\u6b21BFS\u65f6\uff0c\u8bb0\u5f55\u6b64\u6b21\u641c\u7d22\u5230\u7684\u70b9\uff0c\u53ca\u5f53\u524d\u70b9\u5230\u51fa\u53d1\u70b9\u7684\u8ddd\u79bbd\u3002\n\n #####  \u600e\u4e48\u5224\u73af\u5462\uff1f\n \n\u5f53\u904d\u5386\u5230\u4e86\u5df2\u7ecf\u5728\u961f\u5217\u4e2d\u7684\u70b9\u65f6\uff0c\u5373\u627e\u5230\u4e86\u4e00\u4e2a\u73af\u3002\n\n\u7406\u7531\uff1a\u961f\u5217\u4e2d\u7684\u70b9\u90fd\u662f\u8054\u901a\u7684~~\uff08os:\u597d\u82cd\u767d\u554a~~)\n      up\u4e3b\u592a\u5f31\uff0c\u8bf7\u5927\u5bb6\u81ea\u884c\u53c2\u8003tarjian\u7b97\u6cd5\u8bc1\u660e\u3002\u3002\n      \n##### \u90a3\u600e\u4e48\u5224\u65ad\u73af\u7684\u5927\u5c0f\u5462\uff1f\n(d[i]-d[j]+1)\u5373\u4e3a\u73af\u7684\u5927\u5c0f\n\uff08\u4e0d\u7406\u89e3\u7684\u7ae5\u978b\u53ef\u4ee5\u753b\u4e2a\u201c**6**\u201d\u4f53\u4f1a\u4e00\u4e0b\uff09\n\n\n\u6700\u540e\u9644\u4e0aAC\u4ee3\u7801\n     \n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#define N 200100\nusing namespace std;\nint n,T[N],ans=N,q[N],d[N],l,r,to;\nbool in[N],vs[N];\nchar cc;\ninline void read(int &v){\n    v=0;cc=getchar();\n    while(cc<'0'||cc>'9') cc=getchar();\n    while(cc>='0'&&cc<='9'){\n        v=v*10+cc-'0';cc=getchar();\n    }\n}\n\nvoid check(int x){\n    l=0;r=1;q[1]=x;d[x]=1;vs[x]=1;in[x]=1;\n    do{\n        x=q[++l];to=T[x];\n        if(!vs[to]){\n            in[to]=1;\n            vs[to]=1;\n            d[to]=d[x]+1;\n            q[++r]=to;\n        }else if(in[to]){\n            ans=min(ans,d[x]-d[to]+1);\n            //\u904d\u5386\u5230\u4e86\u6808\u4e2d\u7684\u70b9        \n        }\n    }while(l<r);\n \twhile(l)in[q[l--]]=0;//\u7edf\u4e00\u51fa\u6808\n    return ;\n}\nint main(){\n    read(n);\n    for(int i=1;i<=n;++i) read(T[i]); \n    for(int i=1;i<=n;++i)\n    if(!vs[i]) check(i);\n    cout<<ans; \n}\n```",
        "postTime": 1535516314,
        "uid": 78258,
        "name": "\u5b50\u68ee\u541b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "# \u7b97\u6cd5\uff1aTarjan\u7f29\u73af\n\n\u8fd9\u9053\u9898\u8981\u6c42\u6709\u5411\u56fe\u7684\u6700\u5c0f\u73af\uff0c\u4e8e\u662f\u5c31\u53ef\u4ee5\u7528Tarjan\u8f7b\u677eA\u6389\uff0c\u7a0b\n\u5e8f\u548c\u677f\u5b50\u552f\u4e00\u7684\u533a\u522b\u5c31\u5728\u4e8e\u5f39\u6808\u65f6\u8bb0\u5f55\u73af\u7684\u5927\u5c0f\uff0c\u6bd4\u51fa\u6700\u5c0f\u503c\u540e\u8f93\u51fa\u5373\u53ef\u3002\n\n\u7531\u4e8e\u8fd9\u9053\u9898\u53ea\u8981\u6c42\u6700\u5c0f\u73af\u7684\u5927\u5c0f\uff0c\u6240\u4ee5\u65e0\u9700\u91cd\u6784\u56fe\uff0c\u662f\u4e2a\u7b80\u5316\uff08\u6b8b\u7f3a\uff09\u7684Tarjan\uff0c\u4ee3\u7801\u4e5f\u7b80\u5355\uff0c\u5982\u4e0b\u4f9b\u53c2\u8003\uff1a\n\n```c\n#include<cstdio>\n#include<stack>\nusing namespace std;\nconst int SIZE=1024*256,INF=1024*1024;\nint n,a[SIZE],dfn[SIZE],lowlink[SIZE],ins[SIZE],idx,minc=INF;\nstack<int> st;\nvoid tarjan(int x){\n\tdfn[x]=lowlink[x]=++idx;\n\tst.push(x);\n\tins[x]=1;\n\tif(!dfn[a[x]]){\n\t\ttarjan(a[x]);\n\t\tlowlink[x]=min(lowlink[x],lowlink[a[x]]);\n\t}else if(ins[a[x]]){\n\t\tlowlink[x]=min(lowlink[x],dfn[a[x]]);\n\t}\n\tif(dfn[x]==lowlink[x]){\n\t\tint ii=0,jj;\n\t\twhile(!st.empty()){\n\t\t\tjj=st.top();\n\t\t\tst.pop();\n\t\t\tins[jj]=0;\n\t\t\tii++;\n\t\t\tif(jj==x){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(ii>1){\n\t\t\tminc=min(minc,ii);\n\t\t}\n\t}\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tif(!dfn[i]){\n\t\t\ttarjan(i);\n\t\t}\n\t}\n\tprintf(\"%d\",minc);\n\treturn 0;\n}\n```",
        "postTime": 1533184648,
        "uid": 70252,
        "name": "guoshaoyang",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "[\u6253\u4e2a\u5e7f\u544a\uff0c\u535a\u5ba2\u91cc\u6709\u9898\u89e3\u8fd8\u6709\u5404\u79cd\u6a21\u62df\u8d5b\u7684\u9898\u89e3\u548c\u9898\u76ee](http://www.vixbob-lwc.pw/)\n\n\u89e3\u9898\u601d\u8def\u5982\u4e0b\uff1a\n\n\u627e\u73af\uff0c\u90a3\u4e48\u8be5\u5982\u4f55\u5728\u4e00\u4e2a\u6709\u5411\u56fe\u4e2d\u627e\u73af\u5462\uff0c\u56e0\u4e3a\u9898\u76ee\u91cc\u9762\u8bf4\u4e86\u4e00\u4e2a\u4eba\u53ea\u80fd\u628a\u81ea\u5df1\u7684\u4fe1\u606f\u544a\u8bc9\u53e6\u4e00\u4e2a\u4eba\uff0c\u4e5f\u5c31\u662f\u8bf4\u4ed6\u4e0e\u5916\u754c\u53ea\u6709\u4e00\u6761\u8fb9\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u662f\u4e00\u4e2a\u6709\u5411\u6709\u73af\u56fe\uff0c`\u8003\u8651\u5230\u4e0d\u53ef\u80fd\u53ea\u6709\u4e00\u4e2a\u73af`\uff08\u6709\u53ef\u80fd\u662f\u6211\u60f3\u591a\u4e86\uff0c\u4f46\u662f\u8fd8\u662f\u8003\u8651\u6bd4\u8f83\u4fdd\u9669\uff0c\u800c\u4e14\u65f6\u95f4\u5e76\u4e0d\u4f1a\u8d85\uff09\uff0c\uff08`\u4f46\u662f\u4e00\u4e2a\u8fde\u901a\u56fe\u91cc\u53ea\u53ef\u80fd\u4e0e\u4e00\u4e2a\u73af`\uff09\u6240\u4ee5\u518d\u6765\u4e00\u904d\u5e76\u67e5\u96c6\uff0c\u628a\u6240\u6709\u8fde\u901a\u56fe\u627e\u51fa\u6765\uff0c\u4f9d\u6b21\u904d\u5386\u6bcf\u4e2a\u8fde\u901a\u56fe\uff0c\u627e\u51fa\u6700\u5c0f\u7684\u73af\uff0c\u5c31\u53ef\u4ee5\u4e86\uff0c\u66f4\u591a\u7ec6\u8282\u89c1\u4ee3\u7801\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <iostream>\nusing namespace std;\nint n,fa[210000],v[210000],vis[210000],ans=(1<<30),judge[210000],head[210000],cnt,con,flag;\nstruct node{int to,nt;}e[210000];//\u524d\u5411\u661f\u7ed3\u6784\u4f53\nint findx(int x){//\u5e76\u67e5\u96c6\u51fd\u6570\n    if(fa[x]==x)return fa[x];\n    return findx(fa[x]);\n}\nvoid mergex(int x,int y){fa[findx(x)]=findx(y);}//\u5408\u5e76\u51fd\u6570\nvoid ini(int x,int y){e[++cnt].to=y;e[cnt].nt=head[x];head[x]=cnt;}//\u5b58\u8fb9\u51fd\u6570\nvoid dfs(int x){//dfs\u904d\u5386\u6bcf\u4e2a\u70b9\n    if(!flag)return ;\n    for(int j=head[x];j;j=e[j].nt){\n        if(vis[e[j].to]){//\u5224\u65ad\u8fd9\u4e2a\u70b9\u662f\u5426\u88ab\u627e\u4e86\u4e24\u6b21\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e2a\u70b9\u662f\u4e0d\u662f\u73af\u7684\u8282\u70b9\n            int pos=con+1-vis[e[j].to];//\u73af\u7684\u957f\u5ea6\u4e5f\u5c31\u662f\u4fe1\u606f\u4f20\u9012\u7684\u6b21\u6570\n            ans=min(ans,pos);flag=0;return ;//\u8bb0\u5f55\u7b54\u6848\u5e76return\n        }con++;vis[e[j].to]=con;//\u73af\u7684\u957f\u5ea6++\n        dfs(e[j].to);//\u7ee7\u7eed\u641c\n    }\n}\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)fa[i]=i;\n    for(int i=1;i<=n;i++){\n        scanf(\"%d\",&v[i]);\n        mergex(i,v[i]);\n                ini(i,v[i]);//\u52a0\u8fb9\uff0c\u6709\u5411\u8fb9\u6240\u4ee5\u53ea\u7528\u52a0\u4e00\u6b21\n    }\n    for(int i=1;i<=n;i++){\n        if(judge[findx(i)])continue;con=1;judge[findx(i)]=1;vis[i]=1;flag=1;//\u5224\u65ad\u8fd9\u4e00\u4e2a\u8054\u901a\u56fe\u662f\u5426\u5df2\u7ecf\u904d\u5386\u8fc7\u4e86\n        dfs(i);//\u5f00\u59cb\u904d\u5386\n    }\n    printf(\"%d\",ans);//\u8f93\u51fa\u7b54\u6848\n    return 0;\n}\n```\nOVER",
        "postTime": 1510233005,
        "uid": 50971,
        "name": "ViXbob",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u7531\u9898\u610f\u7684\uff0c\u4fe1\u606f\u4e92\u76f8\u4f20\u9012\uff0c\u5982\u679c\u6b21\u6570\u6700\u5c11\uff0c\u5219\u4e00\u5b9a\u662f\u4f1a\u8f6c\u5708\u7684\uff0c\u6240\u4ee5\u8bf4\u6211\u4eec\u8981\u6c42\u7684\u5c31\u662f**\u6700\u5c0f\u73af**\uff1b\n\n\u6211\u4eec\u6c42\u6700\u5c0f\u73af\u7684\u65f6\u5019\u9700\u8981\u7528\u5230dfs\uff1b\n\ndfs\u7684\u65f6\u5019\u8981\u5728\u6bcf\u4e2a\u73af\u4e0adfs   \u6240\u4ee5\u8bf4\u8981\u5148\u628a\u56fe\u9884\u5904\u7406\u4e58\u82e5\u5e72\u4e2a\u73af\uff08\u53ef\u80fd\u4e0d\u6b62\u4e00\u4e2a\u73af\uff09\uff0ct\u6389\u6240\u6709\u73af\u5916\u7684\u8282\u70b9\u3002\u628a\u4ed6\u4eec\u5f97vis\u53d8\u4e3a1\uff0c\u8868\u793a\u8be5\u70b9\u88abt\u6389\uff0c\n\n\u800c\u62d3\u6251\u6392\u5e8f\u53ef\u4ee5\u8d77\u5230t\u70b9\u8fd9\u6837\u7684\u4f5c\u7528\uff1b\n\n\uff08\u5269\u4e0b\u7684\u5728\u4ee3\u7801\u4e2d\u6ce8\u91ca\u4e86\uff09\n\n\n\n\n\n\n\n     \n             \n            \n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include\"queue\"\nusing namespace std;\nconst int maxn =600000;//\u968f\u4fbf\u5199\u7684\u6211\nint r[maxn],n,vis[maxn];\nint tot,link[maxn],son[maxn],nnext[maxn];\nint count;\nvoid addedge(int x,int y) //\u90bb\u63a5\u8868\u5b58\u56fe\uff0c\u6bd4\u90bb\u63a5\u77e9\u9635\u597d\uff0cson\u3010x\u3011\u5c31\u662f\u5b83\u4f20\u5411\u7684\u70b9\n{\n    tot++,nnext[tot]=link[x],link[x]=tot,son[tot]=y;\n}\nvoid dfs(int x)\n {\n     count++,vis[x]=1;//dfs\u8be5\u70b9\u7684\u65f6\u5019 \u8ba9vis x=1\u8868\u793a\u8be5\u70b9\u5df2\u7ecf\u88abdfs\uff0ccount\u8bb0\u5f55\u73af\u4e0a\u70b9\u7684\u4e2a\u6570\n     for (int i=link[x];i;i=nnext[i])    //\u8fd9\u4e2a\u662f\u90bb\u63a5\u8868\u7684\u904d\u5386\n        {\n              if (!vis[son[i]]){//\u5224\u65ad\uff0c\u6211\u5fd8\u4e86\u8fd9\u4e00\u4e2a\u5c31\u65e0\u9650\u5728\u73af\u4e0a\u6253\u8f6c\u4e86= =\n            vis[son[i]]=1;\n              dfs(son[i]);\n            }\n       }\n }\nint main()\n{\n    cin>>n;\n    int temp;\n    for (int i=1;i<=n;i++)\n       {\n             cin>>temp;\n             r[temp]++;//\u62d3\u6251\u7684\u65f6\u5019\u9700\u8981\u7528\u5230\u6bcf\u4e2a\u70b9\u7684\u5165\u5ea6\n             addedge(i,temp);\n       }\n    queue<int > q;//STL\u961f\u5217\n    for (int i=1;i<=n;i++)//\u62d3\u6251\n        {\n            if (!r[i]) q.push(i),vis[i]=1;\n        }\n    int x;\n    while (!q.empty())//\u62d3\u6251\n        {\n            x=q.front(),q.pop();\n            for (int i=link[x];i;i=nnext[i])//\u90bb\u63a5\u8868\u7684\u904d\u5386\n                {\n                    r[son[i]]--;\n                    if (!r[son[i]]) q.push(son[i]),vis[son[i]]=1;\n                }\n        }\n   int ans=1e9;//\u521d\u59cb\u5316ans\uff1b\n   //for (int i=1;i<=n;i++) cout<<r[i]<<endl; //\u8c03\u8bd5\u4ee3\u7801\n    for (int i=1;i<=n;i++)\n        { \n            count=0;//\u6bcf\u6b21dfs\u4e00\u4e2a\u73af\u8981\u521d\u59cb\u5316\u7528\u6765\u8ba1\u6b21\u7684count\n            if (!vis[i])// \u5982\u679c\u8fd9\u4e2a\u70b9\u6ca1\u88abdfs\u8fc7\u4e14\u6ca1\u6709\u88abt\u6389\u5c31dfs\uff0c\u5176\u5b9e\u8fd9\u4e2aif\u8bed\u53e5\u6210\u7acb\u4e00\u6b21\u5c31\u662f\u4ee3\u8868\u641c\u7d22\u4e00\u4e2a\u65b0\u7684\u73af\uff0c\u56e0\u4e3a\u6bcf\u6b21dfs\u90fd\u4f1a\u4f7f\u73af\u4e0a\u7684\u70b9\u7684vis=1\uff0c\n               {\n                    dfs(i);\n               }\n           if (count)// \u56e0\u4e3a\u6bcf\u4e2afor\u90fd\u4f1a\u4f7fcount=0\uff0c\u6240\u4ee5\u5f53count\u4e0d\u7b49\u4e8e0\u7684\u65f6\u5019\u624d\u4ee3\u8868\u641c\u7d22\u5230\u4e86\u4e00\u4e2a\u73af\uff0c\u624d\u8981\u66f4\u65b0ans\uff1b\n     ans=min(ans,count); //\u6c42\u6700\u5c0f\u7684\u8f6e\u6570\u5c31\u8981\u6c42\u70b9\u6570\u6700\u5c11\u7684\u73af\n        }\n    cout<<ans;\n}\n\n```",
        "postTime": 1507114330,
        "uid": 50852,
        "name": "zhangbubu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "##\u5e76\u67e5\u96c6\u601d\u8def\n\n\u672c\u8d28\u4e0a\u9898\u76ee\u6240\u6c42\u7684\u5c31\u662f\u6709\u5411\u56fe\u4e2d\u7684\u6700\u5c0f\u73af\uff0c\u5927\u591a\u6570\u9898\u89e3\u90fd\u662f\u7528DFS\u904d\u5386\uff0c\u800c\u6309\u7167\u5e76\u67e5\u96c6\u7406\u89e3\u4e5f\u662f\u53ef\u4ee5\u901a\u8fc7\u7684\u3002\n\ni\u2192t[i]\u7684\u4f20\u9012\u8def\u5f84\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a**\u5e76\u67e5\u96c6\u4e2d\uff0ct[i]\u662fi\u7684\u7236\u8282\u70b9**\u3002\n\n- \u53ef\u4ee5\u4f9d\u6b21\u6309\u7167\u5e76\u67e5\u96c6\u7684\u65b9\u6cd5\u6dfb\u52a0\u8fb9\uff0c\u4e0d\u540c\u5728\u4e8e\u6bcf\u6b21\u8981\u68c0\u67e5i\u548ct[i]\u662f\u5426\u5c5e\u4e8e\u540c\u4e00\u4e2a\u96c6\u5408\uff0c\u5982\u679c\u662f\uff0c\u90a3\u5c31\u610f\u5473\u7740\u51fa\u73b0\u4e86\u4e00\u4e2a\u73af\uff0c\u8fd9\u65f6\u4e0d\u8981\u6dfb\u52a0\u8fd9\u6761\u8fb9\uff0c\u4ecet[i]\u5f00\u59cb\u627e\u524d\u9a71\u5e76\u7edf\u8ba1\u7ecf\u8fc7\u7684\u8282\u70b9\u6570\uff0c\u76f4\u5230\u627e\u5230i\u4e3a\u6b62\uff0c\u6b64\u65f6\u7ecf\u8fc7\u7684\u8282\u70b9\u603b\u6570\u5c31\u662f\u73af\u7684\u5927\u5c0f\u3002\n\n- \u6bcf\u627e\u5230\u4e00\u4e2a\u73af\uff0c\u5c31\u5c06\u5176\u5927\u5c0f\u548c\u5df2\u77e5\u7684\u6700\u5c0f\u73af\u5927\u5c0f\u6bd4\u8f83\uff0c\u66f4\u65b0\u6700\u5c0f\u73af\u5927\u5c0f\uff08\u521d\u59cb\u5316\u4e3a\u221e\uff09\u3002\n\n\u663e\u7136\uff0c\u5e76\u67e5\u96c6\u4f18\u5316\u4e2d\u7684\u6309\u79e9\u5408\u5e76\u4e0d\u80fd\u7528\uff0c\u5426\u5219\u4f1a\u6539\u53d8\u4f20\u9012\u5173\u7cfb\uff0c\u800c\u8def\u5f84\u538b\u7f29\u4e5f\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528\uff0c\u56e0\u4e3a\u4f1a\u6539\u53d8\u73af\u3002\n\n\u6211\u7684\u505a\u6cd5\u662f\u8fd9\u6837\u7684\uff1a\u540c\u65f6\u5efa\u7acb\u4e24\u4e2a\u5e76\u67e5\u96c6\u6570\u7ec4\uff0c\u4e00\u4e2a\u8def\u5f84\u538b\u7f29\u7528\u6765\u9ad8\u6548\u67e5\u8be2\uff0c\u53e6\u4e00\u4e2a\u4e0d\u538b\u7f29\u7528\u6765\u904d\u5386\uff0c\u8be6\u89c1\u4ee3\u7801\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#define maxn 200001\nusing namespace std;\nint find(int x);\nbool uni(int x,int y);\nint pre[maxn],father[maxn],t[maxn],n,ans=0x7fffffff,temp;\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&t[i]);\n        father[i]=pre[i]=i;\n    }\n    for(int i=1;i<=n;i++)\n        if(!uni(i,t[i]))\n        {\n            temp=1;\n            for(int j=t[i];j!=i;j=pre[j])\n                temp++;\n            ans=temp<ans? temp:ans;\n        }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\nint find(int x)\n{\n    int pos=x,i=x,temp;\n    while(father[pos]!=pos)\n        pos=father[pos];\n    while(father[i]!=pos)\n    {\n        temp=father[i];\n        father[i]=pos;\n        i=temp;\n    }\n    return pos;\n}\nbool uni(int x,int y)\n{\n    int rx=find(x),ry=find(y);\n    if(rx==ry)\n        return false;\n    else\n    {\n        pre[x]=y;    //pre[]\u662f\u4e0d\u538b\u7f29\u7684\u5e76\u67e5\u96c6\u6570\u7ec4\n        father[x]=ry;    //father[]\u662f\u8def\u5f84\u538b\u7f29\u7684\u5e76\u67e5\u96c6\u6570\u7ec4\n        return true;\n    }\n}\n```",
        "postTime": 1506441188,
        "uid": 14664,
        "name": "greyishsong",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u4e0b\u9762\u5927\u4f6c\u4ec0\u4e48top\u6392\u5e8f\u554a\u6211\u53cd\u6b63\u662f\u89c9\u5f97\u53ef\u80fd\u5199\u4e0d\u51fa\u6765\uff0c\u4f46\u662f\u5bf9\u9898\u8fdb\u884c\u5206\u6790\u540e\uff0c\u5f88\u5bb9\u6613\u53d1\u73b0\u5c31\u662f\u627e\u6700\u5c0f\u73af\uff0c\u627e\u73af\u7528\u5565\uff1ftarjan\u554a\u3002\u5f88\u5bb9\u6613\u5c31\u4f1a\u60f3\u5230\u5199\u4e2atarjan\uff0c\u53ef\u4ee5\u628a\u8fd9\u9053\u9898\u770b\u4f5c\u90fd\u53ea\u6709\u4e00\u6761\u8def\u7684\u6709\u5411\u56fe\u3002\u3002\u90a3\u4e0d\u5c31\u5f88\u6c34\u4e86\u4e48\u3002\u3002\u3002\u5c31\u662f\u4e00\u4e2a\u88f8\u7684tarjan\uff0c\u6570\u636e\u4e5f\u4e0d\u5927\uff0c\u5f88\u5bb9\u6613\u53ef\u4ee5\u8fc7\u6389\u3002\n\ntarjan\u4e0d\u7528\u518d\u8bf4\u5565\u4e86\u5427\u3002\u3002\u4e0b\u9762\u4ee3\u7801\uff08\u5199\u7684\u4e11\u89c1\u8c05\uff09\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define MAXN 200005\nint n;\nint a[MAXN];\nint sta[MAXN],t=0,top=0,mini1=MAXN+10,timel[MAXN],dfn[MAXN];\nbool vis[MAXN],insta[MAXN];\nvoid dfs(int x)\n{\n    vis[x]=1;\n    insta[x]=1;\n    sta[++top]=x;\n    timel[x]=dfn[x]=++t;\n    if(!vis[a[x]])\n    {\n        dfs(a[x]);\n        dfn[x]=min(dfn[a[x]],dfn[x]);\n    }\n    else\n    {\n        if(insta[a[x]])\n        dfn[x]=timel[a[x]];\n    }\n    if(dfn[x]==timel[x])\n    {\n        int y=sta[top],mini2=0;\n        while(timel[y]!=dfn[y])\n        {\n            insta[y]=0;\n            top--;\n            y=sta[top];\n            mini2++;\n        }\n        mini2++;\n        top--;\n        if(mini2>1&&mini2<mini1)\n        {\n            mini1=mini2;\n        }    \n    }\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    for(int i=1;i<=n;i++)\n    {\n        if(!vis[i])\n        dfs(i);\n    }\n    cout<<mini1;\n}\n```",
        "postTime": 1506424412,
        "uid": 52576,
        "name": "moye\u5230\u7897\u91cc\u6765",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u5982\u679c\u4e00\u4e2a\u70b9\u5165\u5ea6\u4e3a0\uff0c\u5219\u6ca1\u6709\u4eba\u80fd\u544a\u8bc9\u4ed6\u751f\u65e5\u3002\n\n\u8fd9\u4e2a\u70b9\u7684\u540e\u7ee7\u5982\u679c\u5165\u5ea6\u4e3a1\uff0c\u5219\u4ed6\u6c38\u8fdc\u53ea\u80fd\u77e5\u9053\u4ed6\u524d\u9a71\u7684\u751f\u65e5\uff0c\u4e0d\u53ef\u80fd\u77e5\u9053\u4ed6\u81ea\u5df1\u7684\u751f\u65e5\u3002\n\n\u4ee5\u6b64\u7c7b\u63a8\uff0c\u6211\u4eec\u53ef\u4ee5\u526a\u6389\u6240\u6709\u4e0d\u53ef\u80fd\u5904\u4e8e\u73af\u4e2d\u7684\u94fe\u3002\n\n\u526a\u6389\u4e4b\u540e\u76f4\u63a5\u66b4\u529bDFS\uff0c\u6ce8\u610f\u5224\u65ad\u8fd9\u4e2a\u70b9\u662f\u88ab\u526a\u6389\u4e86\uff0c\u8fd8\u662f\u88ab\u627e\u8fc7\u4e86\u3002\n\n\u88ab\u627e\u8fc7\u7684\u70b9\u8981\u7279\u522b\u6807\u8bb0\uff08\u6211\u9009\u62e9\u538b\u5165\u6808\u4e2d\uff09\uff0c\u6700\u540e\u627e\u5230\u201c\u88ab\u627e\u8fc7\u201d\u6807\u8bb0\u5219\u8fd9\u662f\u4e00\u4e2a\u73af\uff0c\u6b64\u65f6\u5c06\u6808\u4e2d\u5143\u7d20\u4e00\u4e00\u5f39\u51fa\u5e76\u6253\u4e0a\u201c\u88ab\u526a\u6389\u201d\u7684\u6807\u8bb0\uff08\u6216\u8005\u53e6\u5f00\u4e00\u4e2a\u65b0\u7684\u6807\u8bb0\uff09\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define rep(i,a,n) for(register int i=a;i<=n;++i)\n#define per(i,a,n) for(register int i=a;i>=n;--i)\n#define mem(a) memset(a,0,sizeof(a))\n#define elif else if\nusing namespace std;\ntypedef unsigned long long ull;\ntypedef long long ll;\ninline ll read()\n{\n    ll f=1,x=0;\n    char ch;\n    do\n    {\n        ch=getchar();\n        if(ch=='-')\n        f=-1;\n    }\n    while(ch<'0'||ch>'9');\n    do\n    {\n        x=x*10+ch-'0';\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9');\n    return f*x;\n}\nll k[200001]={0},d[200001]={0},n,m,b[200001];\nstack<ll>s,r;\nvoid del(ll x)\n{\n    --d[k[x]];\n    if(!d[k[x]])\n    del(k[x]);\n    b[x]=2;\n    return;\n}\nvoid dfs(ll x,ll t)\n{\n    if(b[x]==2)\n    return;\n    if(b[x]==0)\n    {\n        m=min(m,t-1);\n        while(!r.empty())\n        {\n            b[r.top()]=2;\n            r.pop();\n        }\n        return;\n    }\n    b[x]=0;\n    r.push(x);\n    dfs(k[x],t+1);\n    return;\n} \nint main()\n{\n    m=233333;\n    n=read();\n    rep(i,1,n)\n    {\n        k[i]=read();\n        ++d[k[i]];\n        b[i]=1;\n    }\n    rep(i,1,n)\n    {\n        if(!d[i])\n        s.push(i);\n    }\n    while(!s.empty())\n    {\n        del(s.top());\n        s.pop();\n    }\n    rep(i,1,n)\n    dfs(i,1);\n    printf(\"%lld\",m);\n    return 0;\n}\n```",
        "postTime": 1503022658,
        "uid": 20743,
        "name": "AdzearDisjudge",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u672c\u849f\u84bb\u6bd4\u8f83\u5947\u8469\uff0c\u7528\u4e86\u4e2atarjan\u6c42\u5f3a\u8054\u901a\u5206\u91cf= =\uff0c\u7adf\u7136\u8fc7\u4e86\uff01\uff01\n\n\uff08\u4e0d\u8fc7\u5176\u5b9e\u5b8c\u5168\u53ef\u4ee5\u628a\u4e0d\u662f\u53ea\u6709\u4e00\u4e2a\u70b9\u7684\u5f3a\u8054\u901a\u5206\u91cf\u5f53\u73af\u4f7f\uff09\n\n\u4ee3\u7801\u957f\u5ea6\u76f8\u5bf9\u6765\u8bf4\u53ef\u80fd\u4e0d\u662f\u5f88\u77ed\uff0c\u5176\u5b9e\u6839\u672c\u6ca1\u5fc5\u8981\u6253tarjan\n\n\u4f46\u662ftarjan\u5f88\u65e0\u8111\uff0c\u55ef\u55ef\u3002\u6309\u7740\u6a21\u677f\u6572\u4e00\u904d\u5c31\u884c\u3002\u4e0d\u559c\u52ff\u55b7\n\n\n\n\n```cpp\n    #include<cstdio>\n    #include<cstring>\n    #include<iostream>\n    #include<algorithm>\n    using namespace std;\n    int n,ans=1000000;\n    int sta[200001],top=0;\n    int dfn[200001],low[200001],tot=0;\n    int head[200001],nxt[200001],to[200001],cnt=0;\n    int f[200001];\n    void addedge(int x,int y)//\u90bb\u63a5\u94fe\u8868\u5b58\u56fe\n    {\n        cnt++;\n        nxt[cnt]=head[x];\n        head[x]=cnt;\n        to[cnt]=y;\n    }\n    void tarjan(int u)//tarjan\u6c42\u5f3a\u8054\u901a\u5206\u91cf\n    {\n        f[u]=1;\n        dfn[u]=low[u]=++tot;\n        sta[++top]=u;//\u5165\u6808\n        for(int i=head[u];i!=0;i=nxt[i])\n        {\n            int v=to[i];\n            if(!dfn[v])\n            {\n                tarjan(v);\n                low[u]=min(low[u],low[v]);\n            }\n            else if(f[v]) low[u]=min(low[u],dfn[v]);\n        }\n        if(low[u]==dfn[u])\n        {\n            int res=0;\n            do\n            {\n                f[sta[top]]=0;\n                res++;\n            }while(sta[top--]!=u);//\u51fa\u7ad9\u5e76\u7edf\u8ba1\u4e2a\u6570\n            if(res!=1) ans=min(ans,res);//\u6ce8\u610f\uff0c\u4e00\u4e2a\u70b9\u4e0d\u7b97\u4e00\u4e2a\u73af\uff0c\u6392\u9664\u6389\u5c31\u80fd\u8fc7\u5566\n        }\n    }\n    int main()\n    {\n        scanf(\"%d\",&n);\n        for(int i=1;i<=n;i++)\n        {\n            int a;\n            scanf(\"%d\",&a);\n            addedge(i,a);//\u52a0\u8fb9\uff0c\u662f\u6709\u5411\u8fb9\uff0c\u522b\u52a0\u4e24\u6b21\n        }\n        for(int i=1;i<=n;i++)\n            if(!dfn[i]) tarjan(i);\n        cout<<ans;\n        return 0;\n}\n```",
        "postTime": 1502792508,
        "uid": 21874,
        "name": "hicc0305",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u672c\u849f\u84bbAC\u8fd9\u9898\u8fd8\u662f\u975e\u5e38\u5f00\u5fc3\u7684\uff0c\u56e0\u4e3a\u81ea\u5df1\u505a\u7684\u4f18\u5316\u5e2e\u81ea\u5df1\u7a81\u7834\u4e8680\u5206\u3002\n\n\n\u8fd9\u9053\u9898\u6211\u548c\u8bb8\u591a\u4eba\u4e00\u6837\u5229\u7528\u5165\u5ea6\u4e3a1\u7684\u70b9\u4e0d\u53ef\u80fd\u662f\u73af\u4e0a\u7684\u70b9\u8fd9\u4e00\u6761\u4ef6\u53bb\u9664\u6bcf\u6761\u73af\u4e0a\u7684\u76f2\u679d\u3002\u628a\u6240\u6709\u5165\u5ea6\u4e3a1\u7684\u70b9\u53bb\u6389\u540e\u5c31\u6df1\u641c\u5269\u4f59\u7684\u70b9\u6c42\u6700\u5c0f\u73af\u3002\n\n\u6ce8\u610f\uff01\u5728\u6df1\u641c\u4e0e\u53bb\u76f2\u679d\u65f6\u8981\u526a\u679d\u4f18\u5316\uff0c\u907f\u514dTLE\u3002\n\n\u9644\u4e0a\u5173\u952e\u6ce8\u91ca\n\n\n\n```cpp\n~~#include<bits/stdc++.h>\nusing namespace std;\nint father[200001],er[200001],n;//er[]\u6570\u7ec4\u50a8\u5b58\u5165\u5ea6 \nint minn=99999999;\nint dfs(int x)\n{\n    int step=0;\n    while(er[x])\n    {\n        er[x]=0;//\u628a\u641c\u8fc7\u7684\u70b9\u7684er[]\u503c\u7f6e0\uff0c\u8868\u793a\u8be5\u70b9\u5728\u67d0\u4e00\u73af\u4e2d\u5df2\u641c\u8fc7\uff0c\u4e0d\u7528\u518d\u641c \n        x=father[x];\n        step++;\n    }\n    return step;\n}\nint main()\n{\n    int vis[n+1];//vis\u5728\u53bb\u76f2\u679d\u65f6\u7528\u6765\u8bb0\u5f55\u8be5\u70b9\u662f\u5426\u88ab\u8bbf\u95ee\u8fc7\uff0c\u82e5\u662f\uff0c\u4ee5\u540e\u5c31\u4e0d\u7528\u518d\u627e\u5b83 \u53bb\u76f2\u679d\u4e86\uff1b \n    cin>>n;//\u4e0d\u660e\u767d\u5176\u4ed6\u4eba\u6ca1\u8fd9\u4e2a\u4f18\u5316\u662f\u600e\u4e48AC\u7684\uff0c\u53ef\u80fd\u6709\u8ddf\u597d\u7684\u505a\u6cd5\u5427\u3002\u3002\u3002 \n    memset(er,0,sizeof(er));\n    memset(vis,false,sizeof(vis));\n    for(int i=1;i<=n;i++)\n    {\n        int a;\n        scanf(\"%d\",&a);\n        father[i]=a;\n        er[a]++;\n    }\n    for(int i=1;i<=n;i++)\n        if(!er[i]&&!vis[i]) //\u53bb\u76f2\u679d \n        {\n            int a=i;\n            while(1)    \n            {\n                vis[a]=true;//\u6807\u8bb0vis\uff0c\u8868\u793a\u8be5\u70b9\u88ab\u8bbf\u95ee\u8fc7 \n                a=father[a];\n                if(er[a]>1)\n                {\n                    er[a]--;\n                    break;\n                }\n                er[a]--;\n            }\n        }\n    for(int i=1;i<=n;i++)\n    {\n        if(er[i])//\u526a\u679d\u4f18\u5316 \n            minn=min(minn,dfs(i));\n    }\n    printf(\"%d\",minn);\n}\n```",
        "postTime": 1502717730,
        "uid": 34259,
        "name": "GadTD",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u9898\u610f\u53ef\u4ee5\u77e5\u9053\u6bcf\u4e2a\u70b9\u53ea\u6709\u4e00\u6761\u51fa\u8fb9\n\n\u4e8e\u662f\u662f\u5f20\u6709\u5411\u65e0\u73af\u56fe\n\n\u53ef\u4ee5\u5148\u7528topsort\u628a\u975e\u73af\u7684\u8fb9\u5220\u53bb\n\n\u5bf9\u4e8e\u73af\u4e0a\u7684\u70b9\u641c\u7d22dfs\u5c31\u53ef\u4ee5\u7edf\u8ba1\u7ed3\u679c\u4e86\n\n\uff08\u5982\u679c70\u4e0d\u8981\u614c,\u628astl\u7684\u961f\u5217\u624b\u6253\u5c31\u8fc7\u4e86\uff09\n\n\u9644\u4e0a\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdlib>\n#include<cstdio>\n#include<cstring>\n#define re register\nint cnt=0,n,d[200005],vis[200005],ans=1e9+7,to[200005],q[200005];\ninline void topsort()\n{\n    int head=0,tail=0;\n    for(re int i=1;i<=n;i++)\n        if(!d[i])\n        {\n            vis[i]=1;\n            q[++tail]=i;\n        }\n    while(head<tail)\n    {\n        int now=q[++head];\n        d[to[now]]--;\n        if(!d[to[now]])\n        {\n            vis[to[now]]=1;\n            q[++tail]=to[now];\n        }\n    }\n}\ninline void dfs(int now,int k)\n{\n    vis[now]=1;\n    if(!vis[to[now]])    dfs(to[now],k+1);\n    else    ans=std::min(ans,k);\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(re int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&to[i]);\n        d[to[i]]++;\n    }\n    topsort();\n    for(re int i=1;i<=n;i++)\n    {\n        if(!vis[i])        dfs(i,1);\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1502372555,
        "uid": 44250,
        "name": "Zzh20011004",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u6211\u662f\u4ece\u56fe\u8bba\u7684\u5206\u7c7b\u91cc\u770b\u5230\u8fd9\u9053\u9898\u7684\uff0c\u6240\u4ee5\u548b\u7b97\u7528\u56fe\u8bba\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u5199\u5b8c\u4ee3\u7801\u540e\u53d1\u73b0\u5199\u7684\u662f\u4e00\u4e2adfs\u961f\u5217\u2026\u2026\n\n\u8bf4\u4e00\u4e0b\u6211\u7684\u601d\u8def\u5427\uff1a\n\n1.\u5efa\u7acb\u90bb\u63a5\u8868->\u5176\u5b9e\u53ea\u7528\u4e00\u4e2a\u6570\u7ec4\u8868\u793a\u5b50\u8282\u70b9\u5c31\u884c\n\n2.\u6df1\u641c\u6bcf\u4e2a\u8282\u70b9\u5e76\u4e14\u6253\u4e0a\u6807\u8bb0\u653e\u7f6e\u91cd\u590d\u641c\u7d22\n\n3.\u6df1\u641c\u65f6\u5c06\u8be5\u8282\u70b9\u8fdb\u961f->\u5176\u5b9e\u53ea\u7528\u6253\u4e0a\u5165\u961f\u6807\u8bb0\u5c31\u884c\n\n4.\u5982\u679c\u53d1\u73b0\u5b50\u8282\u70b9\u5df2\u7ecf\u8fdb\u961f\u4e86\u5c31\u53ef\u4ee5\u5224\u73af\u4e86->\u5b50\u8282\u70b9\u6709\u6807\u8bb0\u5c31\u884c\n\n\u7136\u540e\u5c31\u53d1\u73b0\uff1a\u5f3a\u8fde\u901a->\u961f\u5217+dfs\n\n\n\u9644\u4e0a\u4ee3\u7801\uff1a\u81ea\u5e26\u6ce8\u91ca\n\n```cpp\n#include<cstdio>\n#include<cstring>\nconst int N=220000;\nint son[N];//\u6bcf\u4e2a\u8282\u70b9\u7684\u5b50\u8282\u70b9 \nbool flag[N];//\u8bb0\u5f55\u8282\u70b9\u662f\u5426\u5df2\u7ecf\u641c\u7d22\u8fc7\u4e86 \nbool qflag[N];//\u8bb0\u5f55\u6bcf\u4e2a\u8282\u70b9\u662f\u5426\u8fdb\u5165\u961f\u5217(\u5176\u5b9e\u5c31\u662f\u8be5\u8282\u70b9\u5728\u6df1\u641c\u8def\u5f84\u4e0a\u7684\u6807\u8bb0)\u4f46\u662f\u8fd9\u9898\u4e0d\u9700\u8981\u628a\u961f\u5217\u5199\u51fa\u6765 \nint num[N];//\u8bb0\u5f55\u6bcf\u4e2a\u73af\u7684\u8282\u70b9\u6570 \nint belong[N];//\u6bcf\u4e2a\u6210\u73af\u8282\u70b9\u5c5e\u4e8e\u54ea\u4e2a\u73af \nint n,sum,num1;//sum\u4e3a\u73af\u7684\u4e2a\u6570\uff0ctop\u961f\u5217\u4e2d\u5143\u7d20\u4e2a\u6570 \nvoid dfs(int x)\n{\n    flag[x]=true;//\u6807\u8bb0\uff0c\u9632\u6b62\u91cd\u590d\u641c\u7d22 \n    if(qflag[son[x]])//\u5b50\u8282\u70b9\u5728\u8def\u5f84\u4e0a\uff0c\u6210\u73af \n    {\n        ++sum;\n        num1=1;belong[x]=sum;//for\u5faa\u73af\u6ca1\u6709\u7b97\u8fd9\u4e2a\u70b9 \n        for(int i=son[x];i!=x;i=son[i]) belong[i]=sum,num1++;\n        num[sum]=num1;//\u7531\u4e8e\u8fd9\u9898\u6ca1\u6709\u4ea4\u53c9\u73af\uff0c\u4e5f\u53ef\u4ee5\u5728\u8fd9\u91cc\u76f4\u63a5\u641c\u6700\u5c0f\u503c \n        return;\n    }\n    if(flag[son[x]]) return;//\u5b50\u8282\u70b9\u5df2\u7ecf\u641c\u8fc7\u4e86\uff0c\u8fd9\u4e2a\u8282\u70b9\u518d\u4e0d\u53ef\u80fd\u6210\u73af\uff0c\u6ce8\u610f\u8fd9\u53e5\u8981\u653e\u5230\u6210\u73af\u540e\u9762 \n    //\u7ee7\u7eed\u641c\u7d22 \n    qflag[x]=true;\n    dfs(son[x]);\n//    \u8fd9\u9898\u597d\u50cf\u4e0d\u7528\u51fa\u961f\u56e0\u4e3a\u6ca1\u4ec0\u4e48\u597d\u56de\u6eaf\u7684 \n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++) scanf(\"%d\",&son[i]);\n    memset(flag,false,sizeof flag);\n    for(int i=1;i<=n;i++) \n        if(flag[i]==false) //\u4ece\u6bcf\u4e2a\u8282\u70b9\u5f00\u59cb\u6df1\u641c\uff0c\u4f46\u662f\u641c\u8fc7\u7684\u4e0d\u641c\uff0c\u4fdd\u8bc1\u590d\u6742\u5ea6\u4e3aO(n) \n        {\n            memset(qflag,0,sizeof qflag);//\u4e0d\u5199\u8fd92\u4e2a\u6362\u6210\u51fa\u961f\u4e5f\u884c \n            dfs(i);\n        }\n    int min=2147483647;//\u5c31\u662fINF \n    for(int i=1;i<=sum;i++) \n        if(num[i]<min) min=num[i];//\u6700\u5c0f\u7684\u73af\u5c31\u662f\u7b54\u6848 \n    printf(\"%d\\n\",min);\n    return 0;\n}\n//\u6211\u5199\u5f97\u54ea\u91cc\u6709\u95ee\u9898\u53ef\u4ee5\u7ed9\u6211\u53d1\u90ae\u4ef61425257712@qq.com \n```",
        "postTime": 1501680432,
        "uid": 41180,
        "name": "\u9759\u9ed8\u4e4b\u5149",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u8fd9\u4e00\u9898\u76ee\u8bf4\u5b9e\u8bdd\uff0c\u7528\u6734\u7d20\u7b97\u6cd5\u5f9780\u5206\u771f\u7684\u4e0d\u96be\uff0c\u4f46\u662f\u7528\u6734\u7d20\u7684\u7b97\u6cd5\u5f97\u6ee1\u5206\u6211\u89c9\u5f97\u9700\u8981\u5f88\u9ad8\u7684\u7f16\u7a0b\u6280\u5de7\uff08\u53ef\u80fd\u6211\u6bd4\u8f83\u5f31\uff09\uff0c\u4e3b\u8981\u662f\u53bb\u91cd\u4e0d\u597d\u53bb\u91cd\uff0c\u4e0d\u53bb\u91cd\u53c8\u4f1a\u8d85\u65f6\u3002\u3002\u3002\u6240\u4ee5\u8fd8\u662f\u7528\u6211\u5927\u62d3\u6251\u6392\u5e8f\u7684\u601d\u60f3\uff08\u867d\u7136\u8fd9\u662f\u53c8\u5411\u6709\u73af\u56fe\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u554a\uff09\uff01\uff01\uff01\uff01\u5c31\u662f\u627e\u5230\u4e00\u4e2a\u5165\u5ea6\u4e3a0\u7684\u70b9\uff0c\u4f9d\u6b21\u5220\u6389\u548c\u5b83\u76f8\u8fde\u7684\u70b9\uff08\u5165\u5ea6\u4e0d\u4e3a1\uff09\uff0c\u6700\u540e\u5269\u4e0b\u7684\u5c31\u53ea\u6709\u73af\u4e86\uff0c\u7136\u540e\u5c31\u679a\u4e3e\u73af\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O\uff08N\uff09\uff1b\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\nusing namespace std;\nconst int maxn=200000+10;\nint to[maxn],into[maxn],n,q[maxn],ans=1e7;\nbool vis[maxn];\nvoid bfs()\n{\n    int head=0,tail=0;\n    for(int i=1;i<=n;i++)\n    if(!into[i])\n    {\n        vis[i]=1;\u5c06\u5165\u5ea6\u4e3a0\u7684\u70b9\u5165\u961f\n        tail++;\n        q[tail]=i;\n    }\n    while(head<tail)\n    {\n        head++;\n        into[to[q[head]]]--;//\u5220\u6389\u4e00\u4e2a\u5165\u5ea6\n        if(!into[to[q[head]]])//\u5982\u679c\u8fd9\u4e2a\u70b9\u7684\u4e00\u4e2a\u5165\u5ea6\u5220\u6389\u4e4b\u540e\u5c31\u4e3a0\u4e86\uff0c\u90a3\u4e48\u6b64\u70b9\u5fc5\u5b9a\u4e0d\u5728\u73af\u5185\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u6b64\u70b9\u4e5f\u5165\u961f\uff0c\u5220\u9664\n        {\n            tail++;\n            q[tail]=to[q[head]];\n            vis[q[tail]]=1;\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&to[i]);\n        into[to[i]]++;//\u8bb0\u5f55\u8fd9\u4e2a\u70b9\u7684\u5165\u5ea6\n    }\n    bfs();\n    for(int i=1;i<=n;i++)\n    {\n        int cnt=0;//\u63a5\u4e0b\u6765\u5269\u4e0b\u7684\u5c31\u53ea\u6709\u73af\u5185\u7684\u70b9\u4e86\n        if(!vis[i])\n        {\n            int k=i;\n            while(!vis[k])\n            {\n                vis[k]=1;\n                k=to[k];\n                cnt++;\n            }\n            ans=min(cnt,ans);\n        }\n    }\n    cout<<ans;\n    return 0;\n}\n```",
        "postTime": 1500723459,
        "uid": 20059,
        "name": "ylsoi",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "//\u5148\u8bf4\u4e00\u4e0b\u601d\u8def\uff0c\u8fd9\u6574\u9053\u9898\u5c31\u662f\u7ed9\u4f60\u51e0\u4e2a\u5e26\u679d\u53f6\u7684\u73af\u8981\u4f60\u6c42\u6700\u77ed\u73af\u800c\u5df2\uff0c\u4e8e\u662f\u5728\u8f93\u5165\u7684\u65f6\u5019\u53ef\u4ee5\u628a\u56fe\u4e2d\u6bcf\u4e2a\u70b9\u7684\u5165\u5ea6\u8bb0\u5f55\u4e0b\u6765\uff0c\u7136\u540e\u518d\u5220\u9664\u90a3\u4e9b\u5165\u5ea6\u4e3a0\u7684\u70b9\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u70b9\u4e0d\u80fd\u52fe\u6210\u73af\uff0c\u53e6\u5916\uff0c\u5f53\u5220\u9664\u8fd9\u4e2a\u70b9\u540e\u5982\u679c\u5176\u5bf9\u5e94\u7684\u4e0b\u4e00\u4e2a\u70b9\u5165\u5ea6\u4e3a0\u8fd9\u7ee7\u7eed\u9012\u5f52\u8fdb\u884c\u5220\u9664\uff0c\u5728\u8fd9\u4e4b\u540e\uff0c\u5c31\u76f4\u63a5\u7528dfs\u6c42\u6bcf\u4e2a\u73af\u7684\u957f\u5ea6\uff0c\u6c42\u6700\u5c0f\u503c\u5373\u53ef\uff0c\u8fd9\u91cc\u7684dfs\u6211\u7528\u5230\u4e86\u201c\u65f6\u95f4\u6233\u201d\u8fd9\u4e2a\u6982\u5ff5\u3002\u5982\u679c\u4e0d\u77e5\u9053\u201c\u65f6\u95f4\u6233\u201d\u662f\u4ec0\u4e48\u53ef\u4ee5\u5728\u767e\u5ea6\u67e5\u627e\uff0c\u4e0b\u9762\u7ed9\u51fa\u4ee3\u7801\uff0c\u5e0c\u671b\u80fd\u5e2e\u5230\u4f60\u3002\u3002\n\n\n\n\n\n\n\n    \n    \n    \n```cpp\n#include<iostream>\n#define MAXN 200000+10\nusing namespace std;\nint T[MAXN],in[MAXN],vis[MAXN],pre[MAXN],post[MAXN],n;\nvoid del(int u){\n    int v = T[u];\n    T[u] = 0;\n    in[v]--;\n    if(in[v] == 0)del(v);\n}\nint dfs(int u,int &dfs_clock){\n    vis[u] = 1;\n    pre[u] = ++dfs_clock;\n    int v = T[u];\n    if(!vis[v])dfs(v,dfs_clock);\n    post[u] =++dfs_clock;\n}\nint main(){\n    ios::sync_with_stdio(false);\n    cin >> n;\n    for(int i = 1; i <= n;i++){\n        cin >> T[i];\n        in[T[i]]++;\n    }\n    for(int i = 1; i <= n;i++){\n        if(!in[i])del(i);\n    }\n    int ans = 0xffffff,dfs_clock = 0;\n    for(int i = 1; i <= n;i++){\n        if(!vis[i] && in[i]){\n            dfs(i,dfs_clock);\n            ans = min(ans,(pre[i] + post[i] -1)/2);\n            dfs_clock = 0;\n        }\n    }\n    cout << ans <<endl;\n}\n```",
        "postTime": 1495031269,
        "uid": 32526,
        "name": "\u9648\u65b0\u6708",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "//luogu 2661\n\n\u6734\u7d20\u7684\u641c\u7d22\uff08\u6c42\u6700\u5c0f\u73af\uff09\uff0c\u7565\u52a0\u4e86\u4e00\u70b9\u526a\u679d2333\n\n\u6211\u4eec\u5728\u8f93\u5165\u7684\u65f6\u5019\u8bb0\u5f55\u6bcf\u4e2a\u4eba\u53ef\u4ee5\u4ece\u51e0\u4e2a\u4eba\u90a3\u91cc\u83b7\u5f97\u4fe1\u606f\n\n\uff08\u5373\u6bcf\u4e2a\u70b9\u7684\u5165\u5ea6\uff09\n\n\u7136\u540e\u5904\u7406\u4e00\u4e0b\u5165\u8bfb\u4e3a\u96f6\u7684\u70b9\n\n\uff08\u56e0\u4e3a\u8fd9\u4e9b\u4eba\u4e0d\u53ef\u80fd\u4ece\u522b\u4eba\u90a3\u542c\u5230\u81ea\u5df1\u7684\u751f\u65e5\uff0c\u56e0\u4e3a\u6ca1\u4eba\u548c\u4ed6\u4eec\u8bf4\u6d88\u606f\uff09\n\n\u7136\u540e\u518d\u4ece\u6ca1\u88ab\u5220\u7684\u70b9\u4e2d\u4e00\u4e2a\u4e2a\u7684dfs\uff0c\u9010\u6e10\u66f4\u65b0\u6700\u5c0f\u73af\u7684\u5927\u5c0f\n\n\u540c\u4e8b\u5728dfs\u4e2d\u526a\u679d\uff08\u5426\u5219\u4f1aTLE\u7684233\uff09 \u5177\u4f53\u526a\u679d\u5728\u4ee3\u7801\u6ce8\u91ca\u4e2d\n\n\n\n------------\n\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\nusing namespace std;\nint n;\nint T[200001];\nint in[200001];\nint de[200001];\nint s,ans=0x3f3f3f3f;\nvoid destory(int poi)\n{\n    de[poi]=1;\n    in[T[poi]]--;\n    if(in[T[poi]]==0)\n        destory(T[poi]);\n}\nvoid dfs(int poi,int step)\n{\n    de[poi]=1;//\u526a\u679d\uff0c\u627e\u5230\u4e00\u4e2a\u70b9\uff0c\u4f1adfs\u5b83\u6240\u5728\u73af\u4e2d\u6240\u6709\u7684\u70b9\n    if(poi==s)//\u8fd9\u65f6\u5c31\u4e0d\u7528\u518d\u628a\u540c\u4e00\u4e2a\u73af\u4e2d\u5176\u4ed6\u70b9\u518d\u904d\u5386\u4e00\u6b21\u4e86233\n    {\n        ans=min(ans,step);\n        return ;\n    }\n    dfs(T[poi],step+1);\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&T[i]);\n        in[T[i]]++;\n    }\n    for(int i=1;i<=n;i++)\n    {\n        if(!in[i]&&!de[i])\n            destory(i);\n    }\n    for(int i=1;i<=n;i++)\n    {\n        if(!de[i])\n        {\n            s=i;\n            dfs(T[i],1);\n        }\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n\n\n------------\n",
        "postTime": 1492860159,
        "uid": 21596,
        "name": "Forever\u4e36CIL",
        "ccfLevel": 6,
        "title": "P2661 \u4fe1\u606f\u4f20\u9012"
    },
    {
        "content": "```cpp\n#include<cstdio>\n#include<queue>\n#define r register int\nusing namespace std;\nconst int N=220000;\nint n,ans=0xfffff,to[N],in[N],flag[N];\ninline void read(int&x){//\u8bfb\u5165\u4f18\u5316 \n    x=0;int y=1;char c;\n    while(c=getchar(),c!='-'&&(c<'0'||c>'9'));\n    if(c=='-')y=-1;else x=c-'0';\n    while(c=getchar(),'0'<=c&&c<='9')x=10*x+c-'0';\n    x*=y;\n}\ninline void init(){\n    read(n);\n    for(r i=1;i<=n;i++)read(to[i]),in[to[i]]++;//\u5165\u5ea6++ \n}\ninline void top(){//\u62d3\u6251\u6392\u4e2a\u5e8f,\u628a\u4e0d\u5728\u73af\u7684\u70b9\u5168\u90e8\u5220\u4e86 \n    queue<int>q;\n    for(r i=1;i<=n;i++)if(!in[i])q.push(i);//\u5165\u5ea6\u4e3a0\u7684\u5165\u961f \n    while(!q.empty()){\n        int u=q.front();q.pop();\n        flag[u]=1;in[to[u]]--;\n        if(!in[to[u]])q.push(to[u]);//\u5165\u5ea6\u4e3a0\u7684\u5165\u961f \n    }\n}\ninline int sum(){\n    for(r u,now,i=1;i<=n;i++)\n        if(!flag[i]&&in[i]){//\u5982\u679c\u8fd9\u4e2a\u70b9\u5728\u73af\u4e2d \n            flag[i]=1;u=to[i];now=1;//\u5927\u5c0f\u4e3a1 \n            while(!flag[u])now++,flag[u]=1,u=to[u];//\u628a\u8fd9\u4e2a\u73af\u8dd1\u4e00\u904d \n            ans=ans<now?ans:now;//\u66f4\u65b0\u6700\u5c0f\u73af\u5927\u5c0f \n        }\n    return ans;\n}\nint main(){\n    init();top();\nreturn!printf(\"%d\",sum());\n}\n//\u9898\u76ee\u5c31\u662f\u88f8\u7684\u6c42\u6700\u5c0f\u73af\uff0ctarjan\u4e0d\u4f1a\u4e8e\u662f\u5c31 \u62d3\u6251\u6392\u5e8f+\u641c\u6700\u5c0f\u73af \u4e86\u7f57 \u53cd\u6b63\u65e0\u81ea\u73af(\u56e0\u4e3ato[i]!=i)\n//\u56e0\u4e3a\u5982\u679c\u5165\u5ea6\u4e3a0\u7684\u8bdd\u5c31\u6ca1\u6709\u4eba\u544a\u8bc9\u4ed6\u7b54\u6848\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u5728\u4e00\u4e2a\u73af\u4e2d\uff0c\u90a3\u4e48x(\u73af\u7684\u5927\u5c0f)\u8f6e\u540e\u5c31\u4f1a\u542c\u5230\u81ea\u5df1\u7684\u751f\u65e5\u4e86\n```",
        "postTime": 1484880171,
        "uid": 20156,
        "name": "Kelin",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u6211\u770b\u5927\u591a\u6570\u9898\u89e3\u90fd\u662f\u62d3\u6251\u526a\u679d\u7136\u540e\u641c\u7d22\u6700\u5c0f\u73af\u6216\u662f\u7ed3\u5408\u5e76\u67e5\u96c6\u641c\u7d22\uff0c\u5176\u5b9e\u7528tarjan\u7b97\u6cd5\u5feb\u5f97\u591a\u3002\u6bcf\u6b21\u53ea\u9700\u8981\u7edf\u8ba1\u51fa\u6808\u8282\u70b9\u4e2a\u6570\uff0c\u5982\u679c\u4e2a\u6570\u5927\u4e8e1\n\n\u5c06\u4e2a\u6570\u4e0e\u5f53\u524d\u6700\u5c0f\u503c\u6bd4\u8f83\u53d6\u6700\u5c0f\u503c\uff0c\u5373\u53ef\u5f97\u51fa\u6700\u5c0f\u73af\uff0c\u590d\u6742\u5ea6O(2N)\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n  #include<cstdio>\n  #include<cstring>\n  #include<algorithm>\n  #include<iostream>\n  #define re register int\n  #define ll long long\n  #define cls(a,b) memset(a,b,sizeof(a))\n  using namespace std;\n  const int N=200001;\n  int n,t[N],ans=N,low[N],dfn[N],dindex,sta[N],top,tot;\n  bool ins[N];\n  inline void read(int &data){\n      data=0;\n      char ch=getchar();\n      while(ch<'0'||ch>'9')ch=getchar();\n      while(ch>='0'&&ch<='9')data=data*10+ch-'0',ch=getchar();\n  }\n  inline void tarjan(int u){\n      dfn[u]=low[u]=++dindex;\n      sta[++top]=u,ins[u]=1;\n      if(!dfn[t[u]]){\n          tarjan(t[u]);\n          low[u]=min(low[u],low[t[u]]);\n      }\n      else if(ins[t[u]])low[u]=min(low[u],dfn[t[u]]);\n      if(low[u]==dfn[u]){\n          tot=0;\n          int k;\n          do{\n              k=sta[top--];\n              ins[k]=0;\n              ++tot;\n          }while(k!=u);\n          if(tot>1)ans=min(tot,ans);\n      }\n  }\n  int main(){\n      read(n);\n      int i;\n      for(i=1;i<=n;i++)read(t[i]);\n      for(i=1;i<=n;i++)if(!dfn[i])tarjan(i);\n      printf(\"%d\\n\",ans);\n      return 0;\n}\n```",
        "postTime": 1479131579,
        "uid": 23798,
        "name": "cz2zxy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "p\u515a\u849f\u84bb+\u7a7a\u884c\u7f29\u8fdb\u72c2\u9b54\u3002\u3002\u3002\u3002\u3002\u3002\n\n\u627e\u6700\u5c0f\u73af\uff0ctarjan\u6c42\u51fa\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u72af\u4e86\u4e2a\u4f4e\u7ea7\u9519\u8bef\uff0c\u4e00\u4e2a\u73af\u8981\u81f3\u5c11\u7531\u4e09\u4e2a\u9876\u70b9\u6784\u6210\u3002\u3002\u3002\u3002\u3002\u3002\n\n\n\n    \n\n    \n\n\n\n\n\n\n\n\n\n    \n    \n        \n    \n\n    \n    \n    \n    \n    \n    \n```cpp\nprogram mess;\nvar  dfs,low,stack,qlt:array[0..200000] of longint;\n     flag,ins:array[0..200000] of boolean;\n    next,e,v:array[0..400000] of longint;\n    i,j,k,n,m,time,top,temp,num,count:longint;\n    book:array[0..200000] of longint;\n    ans:longint;\nfunction get:longint;\nbegin\n    exit(stack[top]); //\u8fd4\u56de\u6808\u9876\u5143\u7d20\nend;\nprocedure pop;  //\u5f39\u6808\nbegin\n    if top > 0 then  \n    begin\n        ins[stack[top]] := false;\n        dec(top);\n    end;\nend;\nprocedure push(a:longint);//\u538b\u6808\nbegin\n    ins[a] := true;\n    inc(top);\n    stack[top] := a;\nend;\nprocedure clean(a:longint); //\u6e05\u9664\u6808\uff08tarjan\uff09\nvar temp:longint;\nbegin\n    inc(num);\n     repeat\n         temp := get;\n         qlt[temp]:=num;\n        pop; \n    until temp=a;\nend;\nprocedure tarjan(a:longint); // tarjan\u7b97\u6cd5\u6838\u5fc3\nvar temp:longint;\nbegin\n    push(a);\n    inc(time);\n    dfs[a] := time;\n    low[a] := time;\n    flag[a] := true;\n    temp := v[a];\n    while temp <> 0 do\n    begin\n        if not flag[e[temp]] then \n        begin\n            tarjan(e[temp]);\n            if low[a] > low[e[temp]] then low[a] := low[e[temp]];\n        end\n        else if (ins[e[temp]]) and (dfs[e[temp]] < low[a]) then low[a] := dfs[e[temp]];\n        temp := next[temp];\n    end;\n    if dfs[a] = low[a] then\n    begin\n        clean(a);\n    end;\nend;\nbegin\n    readln(n);\n    for i := 1 to n do\n    begin\n        read(temp); //\u90bb\u63a5\u8868\n        e[i] := temp;\n        next[i] := v[i];\n        v[i] := i;\n    end;\n    for i := 1 to n do\n    begin\n        if not flag[i] then tarjan(i);\n    end;\n    ans := maxlongint;\n    for i := 1 to n do\n    begin\n        inc(book[qlt[i]]);\n        //if ans > book[qlt[j]] then ans := book[qlt[j]];\n    end;\n    for i := 1 to num do\n    begin\n        if (ans > book[i]) and (book[i] >= 3) then ans := book[i];  //\u4e00\u5b9a\u8981\u5927\u4e8e3\u554a\u3002\u3002\u3002\u3002\u3002\u3002\n        //writeln(book[i]);\n    end;\n    writeln(ans);\nend.\n\n```",
        "postTime": 1479131094,
        "uid": 27907,
        "name": "sudo_rm_rf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "//noip 2015 T2 \u6539\u4e86\u4e24\u4e2a\u5c0f\u65f6\u7684\u6734\u7d20\u7b97\u6cd5\uff0c\u80fd\u591fac\u6837\u4f8b\u6211\u597d\u5f00\u5fc3 \uff01\u3002\n\n//\u8fd9\u9053\u9898\u6ca1\u6709\u81ea\u73af\u6ca1\u6709\u73af\u5957\u73af\u3002\u6240\u6709\u7684\u70b9\u548c\u8fb9\u90fd\u662f\u5355\u7eaf\u7684\u3002\u3002\u3002\n\n\n\n```cpp\n//\u7b2c\u4e00\u6b21\u641c\u7d22\u627e\u51fa\u6240\u6709\u5165\u5ea6\u4e3a0\u7684\u70b9\uff0c\u5220\u6389\u3002\n//\u7b2c\u4e8c\u6b21\u641c\u7d22\u5224\u73af\u3002\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\nusing namespace std;\nint n,T[200020],in[200020],ans=200000; //ans\u521d\u59cb\u6700\u5927\u503c\uff0cT\u4e3a\u4e0b\u4e00\u4e2a\u70b9\u5750\u6807\uff0cin\u4e3a\u5165\u5ea6\nbool out[200020]; //\u8fd9\u4e2a\u70b9\u662f\u5426\u88ab\u5220\u9664 or \u88ab\u627e\u8fc7\nint begin,sum;//begin\u548csum\u5b9a\u4f4d\u5168\u5c40\u53d8\u91cf\uff0c\u5c31\u4e0d\u7528\u628a\u8fd9\u4e24\u4e2a\u503c\u5199\u5230void\u91cc\u9762\u3002\ninline void dfs(int x){ //dfs\u5bfb\u627e\u70b9x\u5728\u54ea\u4e2a\u73af\u4e0a\u3002\n    sum++;//\u73af\u5927\u5c0f\u52a0\u4e00\n    out[x] = true;//\u6807\u8bb0\u3002\n    if(T[x] == begin) return;//\u73af\u4e0a\u6240\u6709\u70b9\u90fd\u627e\u5230\u4e86\uff0creturn\u3002\n    dfs(T[x]);\n}\ninline void del(int x){ //dfs \u5220\u70b9\n    out[x] = true; //\u5220\u9664\u5f53\u524d\u70b9\n    in[T[x]] --; //\u4e0b\u4e00\u4e2a\u70b9\u5165\u5ea6\u51cf\u4e00\u3002\n    if(!in[T[x]]) del(T[x]); //\u5982\u679c\u4e0b\u4e00\u4e2a\u70b9\u5165\u5ea6\u4e5f\u53d8\u6210\u4e860\uff0c\u5220\u9664\u4e0b\u4e00\u4e2a\u70b9\u3002\n}\nint main(){\n    memset(out,false,sizeof(out));//\u8d4b\u521d\u503c\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++) {\n        scanf(\"%d\",&T[i]);\n        in[T[i]] ++;\n    }\n    for(int i=1;i<=n;i++)\n        {if (!out[i] && !in[i]) del(i);}\n    for(int i=1;i<=n;i++) {\n        if(!out[i]) {\n            begin=i;\n            sum = 0;\n            dfs(i);\n            ans = min(sum,ans);\n        }\n    }\n        printf(\"%d\",ans);\n        return 0;\n}\n//OIer\u597d\u8fd0\uff0cRP++\uff01\n```",
        "postTime": 1479128256,
        "uid": 28598,
        "name": "\u5c18\u5c0f\u4e03",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u4e3a\u867e\u7c73luogu\u4e0d\u53ef\u4ee5\u5361\u65f6\n\n\u81ea\u6d4b\u5168\u8fc7\n\n\u6d1b\u8c37\u4f1are\n\n\u601d\u8def\u7b80\u5355,\u66b4\u529b\n\n\u56e0\u4e3a\u6bcf\u4e2a\u70b9\u53ea\u6709\u4e00\u6761\u8fb9\u51fa\u6765,\u6240\u4ee5\u5e94\u8be5\u662f\u5f88\u591a\u4e2a\u5e26\u5165\u8fb9\u7684\u5c0f\u5708\n\n//\u8981\u6c42\u6700\u5c0f\u5708\u662f\u5e72\u5565\u7684\u5e94\u8be5\u4e0d\u8981\u8bb2\u4e86\u5427\n\n\u4e8e\u662f\u8bb0\u5f55\u54ea\u4e9b\u70b9\u662f\u5c5e\u4e8e\u90a3\u4e2a\u5708\u7684,\u8fd9\u91cc\u7528\u4e86r[]\u6570\u7ec4\u8bb0\u5f55\n\n\u7136\u540e\u4e00\u4e2a\u4e00\u4e2a\u67d3\u8272,\u8bb0\u5f55\u6b65\u6570,\u627e\u5230\u76f8\u540c\u7684r[]\u5c31\u66f4\u65b0\n\n\n      \n```cpp\n#include<cstdio>\n#include<ctime>\n#include<cstdlib>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<string>\n#define maxn 200000+10\nusing namespace std;\n///////////////////////////\nint n,ans=210000000;\nint fa[maxn];\nint r[maxn];\nint col[maxn];\n///////////////////////////\ninline int gi()\n{\n    int cnt=0;\n    char temp=getchar();\n    while(!(temp<='9'&&temp>='0'))\n      temp=getchar();\n    while(temp<='9'&&temp>='0')\n      {\n          cnt*=10;\n          cnt+=temp-'0';\n          temp=getchar();\n      }\n    return cnt;\n}\nint dfs(int root,int x,int d)\n{\n    if((double)clock()/(double)CLOCKS_PER_SEC>0.98)\n      {\n          cout<<ans;\n          exit(0);\n      }\n    col[x]=d;\n    r[x]=root;\n    if(col[fa[x]]&&r[fa[x]]==root) \n      {\n          ans=min(ans,col[x]-col[fa[x]]+1);\n          return 0;\n      }\n    dfs(root,fa[x],d+1);\n}\n///////////////////////////\nint main()\n{\n    freopen(\"message.in\",\"r\",stdin);\n    freopen(\"message.out\",\"w\",stdout);\n    n=gi();\n    for(int i=1;i<=n;i++)\n      fa[i]=gi();\n    for(int i=n;i>=1;i--)\n      if(!r[i])\n        dfs(i,i,0);\n    cout<<ans;\n}\n```",
        "postTime": 1478763487,
        "uid": 14941,
        "name": "\u65f6\u5149_Memory",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "Tarjan\u627e\u4e00\u4e2a\u6700\u5c0f\u7684\u73af\u5373\u53ef \u5f88\u88f8\u5f88\u88f8....\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<algorithm>\nusing namespace std;\nint n,strongnum=0,top=0,k=0,c_clock=0,num=0x7f7f7f;\nstruct node{\n    int to,next;\n}e[200010];\nint head[200010],stack[200010],dfn[200010],low[200100],strong[200010];\nvoid add(int u,int v)\n{\n    e[++k].next=head[u];\n    e[k].to=v;\n    head[u]=k;\n}\nvoid dfs(int x)\n{\n    low[x]=dfn[x]=++c_clock;\n    stack[++top]=x;\n    for(int i=head[x];i;i=e[i].next)\n    {\n        int v=e[i].to;\n        if(!dfn[v])\n        {\n            dfs(v);\n            low[x]=min(low[x],low[v]);\n        }\n        else if(!strong[v]) low[x]=min(low[x],dfn[v]);\n    }\n    if(low[x]==dfn[x])\n    {\n        strongnum++;int sum=0;\n        while(1)\n        {\n            int p=stack[top--];\n            sum++;\n            strong[p]=strongnum;\n            if(p==x)\n            {\n               if(sum!=1) num=min(sum,num);\n               return;\n            }\n        }\n    }\n}\nint main()\n{\n    memset(low,0,sizeof(low));\n    memset(dfn,0,sizeof(dfn));\n    scanf(\"%d\",&n);int x;\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&x);\n        add(i,x);\n    }\n    for(int i=1;i<=n;i++) if(!dfn[i])\n    dfs(i);\n    printf(\"%d\",num);\n    return 0;\n}\n```",
        "postTime": 1477050685,
        "uid": 22060,
        "name": "Memorize",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    },
    {
        "content": "\u849f\u84bb\u7684\u60f3\u6cd5\u5f88\u7b80\u5355\uff1a\u8981\u662f\u56fe\u4e2d\u53ea\u6709\u73af\u5c31\u597d\u4e86\uff01\n\n\n\u8fd9\u65f6\uff0c\u849f\u84bb\u60f3\u5230\u4e86\u601d\u8def\uff1a\u5148\u62d3\u6251\uff0c\u53bb\u6389\u56fe\u4e2d\u4e0d\u5728\u73af\u5185\u7684\u8282\u70b9\uff0c\u518d\u5224\u65ad\u6bcf\u4e2a\u73af\u7684\u957f\u5ea6\uff0c\u6700\u77ed\u7684\u90a3\u4e2a\u73af\u7684\u957f\u5ea6\u5c31\u662f\u7b54\u6848\u4e86\uff01\n\n\n\u4e8e\u662f\uff0c\u849f\u84bb\u4e00\u904d\u8fc7\u4e86\u2026\u2026\n\n\n```cpp\n#include <iostream>\n#include <queue>\n#include <algorithm>\nusing namespace std;\nstruct node{int next,in;bool book;node(){next=in=0;book=0;}}p[200001];\nint n,ans=100000000;\nqueue<node> que;\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;i++){cin>>p[i].next;p[p[i].next].in++;}\n    for(int i=1;i<=n;i++)if(!p[i].in){que.push(p[i]);p[i].book=1;}\n    while(!que.empty())\n    {\n        node q=que.front();\n        que.pop();\n        if(--p[q.next].in==0){que.push(p[q.next]);p[q.next].book=1;}\n    }\n    for(int i=1;i<=n;i++)\n        if(!p[i].book)\n        {\n            int j=i,count=0;\n            do{count++;p[j].book=1;j=p[j].next;}while(j!=i);\n            ans=min(ans,count);\n        }\n    cout<<ans;\n    return 0;\n}\n```",
        "postTime": 1476020886,
        "uid": 22388,
        "name": "XZYQvQ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2661 \u3010\u4fe1\u606f\u4f20\u9012\u3011"
    }
]