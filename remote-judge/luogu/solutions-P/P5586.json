[
    {
        "content": "## P5586 \u5e8f\u5217\u52a0\u5f3a\u7248\n\n### \u9898\u610f\n\n\u7ef4\u62a4\u4e00\u4e2a\u5e8f\u5217\uff0c\u652f\u6301\u533a\u95f4\u6c42\u548c\u3001\u8d4b\u503c\u3001\u52a0\u503c\u3001\u590d\u5236\u3001\u4ea4\u6362\u3001\u7ffb\u8f6c\u64cd\u4f5c\uff0c\u5176\u4e2d\u4ea4\u6362\u548c\u590d\u5236\u64cd\u4f5c\u4fdd\u8bc1\u4e24\u6bb5\u533a\u95f4\u957f\u5ea6\u76f8\u7b49\u4e14\u4e0d\u4ea4\u3002\u7b54\u6848\u5bf9 $1e9+7$ \u53d6\u6a21\u3002\n\n### \u601d\u8def\n\n\u5bf9\u4e8e\u533a\u95f4\u6c42\u548c\u3001\u8d4b\u503c\u3001\u52a0\u503c\u3001\u4ea4\u6362\u3001\u7ffb\u8f6c\u64cd\u4f5c\u6211\u4eec\u90fd\u53ef\u4ee5\u5f88\u8f7b\u677e\u5730\u4f7f\u7528\u5e73\u8861\u6811\u8fdb\u884c\u7ef4\u62a4\u3002\u6240\u4ee5\u73b0\u5728\u7684\u96be\u70b9\u5c31\u5728\u4e8e\u590d\u5236\u64cd\u4f5c\uff1a\u5982\u4f55\u590d\u5236\u4e00\u6bb5\u533a\u95f4\uff1f\n\n\u5982\u679c\u6211\u4eec\u66b4\u529b\u590d\u5236\u7684\u8bdd\uff0c\u6bcf\u6b21\u6211\u4eec\u4e0d\u5f97\u4e0d\u5c06\u88ab\u590d\u5236\u7684\u5b50\u6811\u626b\u4e00\u904d\u8fdb\u884c\u590d\u5236\uff0c\u8fd9\u662f\u80af\u5b9a\u4e0d\u884c\u7684\u3002\n\n\u4e8e\u662f\u6211\u4eec\u4f7f\u7528**\u53ef\u6301\u4e45\u5316\u5e73\u8861\u6811**\u3002\u5176\u4e2d\u5fc3\u601d\u60f3\u5c31\u662f\u6bcf\u6b21\u4fee\u6539\u4e00\u4e2a\u8282\u70b9\u7684\u4fe1\u606f\u65f6\uff0c\u5c06\u8be5\u8282\u70b9\u590d\u5236\u4e00\u904d\u3002\u8fd9\u6837\u6211\u4eec\u5728\u8fdb\u884c\u590d\u5236\u64cd\u4f5c\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u590d\u5236\u51fa\u6765\u4e00\u4e2a\u65b0\u7684\u6811\u800c\u4e0d\u4f1a\u5bf9\u539f\u6811\u6709\u5f71\u54cd\uff0c\u800c\u4e14\u56e0\u4e3a\u4e0d\u662f\u6bcf\u6b21\u90fd\u904d\u5386\u5b50\u6811\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u6b63\u786e\u3002\n\n\u4f46\u662f\u56e0\u4e3a\u8981\u4e22\u5f03\u4e4b\u524d\u7684\u8282\u70b9\u6240\u4ee5\u7a7a\u95f4\u590d\u6742\u5ea6\u7565\u5fae\u6709\u4e9b\u5927\u3002\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c~~\u5783\u573e\u56de\u6536~~\u5b9a\u671f\u91cd\u6784\u4f7f\u5f97\u7a7a\u95f4\u88ab\u5408\u7406\u91cd\u590d\u5229\u7528\u3002\n\n\u4e8e\u662f\u8fd9\u9053\u9898\u5c31\u89e3\u51b3\u4e86\u3002\u6211\u4f7f\u7528\u4e86 FHQ treap \u8fdb\u884c\u5b9e\u73b0\uff0c\u56e0\u4e3a\u53d1\u73b0\u5bf9\u4e8e\u8fd9\u4e9b\u64cd\u4f5c FHQ \u4f1a\u6bd4\u8f83\u65b9\u4fbf\u3002\n\n\u7136\u540e\u8fd9\u9053\u9898 ODT \u88ab\u5361\u6389\u4e86\uff08\u597d\u8036\uff09\n\n### \u7ec6\u8282\u548c\u6211\u72af\u8fc7\u7684\u9519\u8bef\n\n* \u8fd9\u662f\u4e2a\u5b9a\u957f\u7684\u5e8f\u5217\uff0c\u6240\u4ee5\u6211\u4eec\u6bcf\u6b21\u91cd\u6784\u7684\u65f6\u5019\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528\u6784\u5efa\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u65b9\u6cd5\u7ebf\u6027\u6784\u5efa\uff0c~~\u5426\u8005\u4f1a\u88ab\u5361\u5e38~~\u3002\n\n* **\u6bcf\u6b21\u66f4\u6539\u8282\u70b9\u4fe1\u606f\u65f6\u90fd\u8981\u8fdb\u884c\u590d\u5236**\uff0c`pushdown`,`merge`,`split` \u51fd\u6570\u548c\u4fee\u6539\u64cd\u4f5c\u91cc\u90fd\u8981\u590d\u5236\u3002\n\n* \u6ce8\u610f `pushdown` \u548c `clone` \u7684\u524d\u540e\u987a\u5e8f\u3002\u6709\u65f6\u5019\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u5c06\u539f\u8282\u70b9\u8fdb\u884c\u4e0b\u4f20\u6807\u8bb0\u4ee5\u514d\u5efa\u51fa\u65e0\u7528\u8282\u70b9\u589e\u5927\u5e38\u6570\u3002\n\n* \u6ce8\u610f\u4f20\u53c2\u65f6\u7528\u7684\u662f\u54ea\u4e2a\u8282\u70b9\u7684\u53c2\u6570\u3002\u6211\u66fe\u5728 `split` \u64cd\u4f5c\u4e2d\u4e0b\u4f20\u539f\u8282\u70b9\u7684\u513f\u5b50\uff0c\u5b9e\u9645\u4e0a\u662f\u590d\u5236\u540e\u7684\u8282\u70b9\u7684\u513f\u5b50\u3002\n\n* FHQ \u5728\u65b0\u5efa\u8282\u70b9\u540e\u7684 `rand` \u503c\u5360\u7a7a\u95f4\uff0c\u6211\u4eec\u7528\u4e00\u6bb5\u8bdd\u5728 `merge` \u7684\u65f6\u5019\u73b0\u573a\u968f\u673a\uff0c\u5373\uff1a\n\n  `rd(0,(e[a].siz+e[b].siz)-1)<e[a].siz`\n\n  \u53ef\u4ee5\u7701\u4e0b\u4e00\u70b9\u7a7a\u95f4\u3002\n\n* \u590d\u5236\u548c\u4ea4\u6362\u7684\u65f6\u5019\u8bb0\u4f4f\uff0c\u7ed9\u51fa\u7684\u533a\u95f4\u7aef\u70b9\u4f4d\u7f6e\u53ef\u4e0d\u4fdd\u8bc1\u5347\u5e8f\u7684\u3002\n\n* \u91cd\u6784\u4e4b\u540e\u518d\u6e05\u7a7a\u8282\u70b9\u6570\uff0c\u56e0\u4e3a\u5728\u904d\u5386\u641c\u7d22\u6811\u7684\u65f6\u5019\u4f1a `pushdown` \u800c\u65b0\u52a0\u8282\u70b9\u3002\n\n### \u4ee3\u7801\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cctype>\n#include<cstring>\n#include<cmath>\n#include<chrono>\n#include<random>\nusing namespace std;\ninline int read(){\n\tint w=0,x=0;char c=getchar();\n\twhile(!isdigit(c))w|=c=='-',c=getchar();\n\twhile(isdigit(c))x=x*10+(c^48),c=getchar();\n\treturn w?-x:x;\n}\nchar buf[1 << 21], a[20]; int p, p2 = -1;\ninline void flush() {\n\tfwrite(buf, 1, p2 + 1, stdout);\n\tp2 = -1;\n}\ninline void print(int x) {\n\tif (p2 > 1 << 20) flush();\n\tif (x < 0) buf[++p2] = 45, x = -x;\n\tdo a[++p] = x % 10 + 48;while (x /= 10);\n\tdo buf[++p2] = a[p];while (--p);\n} \nnamespace star\n{\n\tconst int maxn=3e5+10,maxm=4e6+10,mod=1e9+7;\n\tmt19937 rnd(std::chrono::system_clock::now().time_since_epoch().count());\n\tint rd(int l,int r){return std::uniform_int_distribution<int>(l,r)(rnd);}\n\tint n,m,a[maxn];\n\tstruct FHQ{\n\t\t#define ls e[ro].son[0]\n\t\t#define rs e[ro].son[1]\n\t\tstruct node{\n\t\t\tint son[2],siz,tag,add,val,sum;\n\t\t\tbool rev;\n\t\t}e[maxm];\n\t\tint tot,rt;\n\t\tFHQ():e(),tot(0),rt(0){}\n\t\tinline void clone(int &x){e[++tot]=e[x],x=tot;}\n\t\tinline int newnode(int a){return e[++tot]=(node){{0,0},1,-1,0,a,a,false},tot;}\n\t\tinline void pushup(int ro){e[ro].siz=e[ls].siz+e[rs].siz+1,e[ro].sum=(1ll*e[ls].sum+e[rs].sum+e[ro].val)%mod;}\n\t\tvoid rev(int ro){if(ro)e[ro].rev^=1,swap(ls,rs);}\n\t\tvoid add(int ro,int v){if(ro)e[ro].val=(e[ro].val+v)%mod,e[ro].sum=(e[ro].sum+1ll*e[ro].siz*v)%mod,e[ro].add=(e[ro].add+v)%mod;}\n\t\tvoid assign(int ro,int v){if(ro)e[ro].val=v,e[ro].sum=1ll*e[ro].siz*v%mod,e[ro].add=0,e[ro].tag=v;}\n\t\tinline void pushdown(int ro){\n\t\t\tif(!e[ro].rev and e[ro].tag==-1 and !e[ro].add) return;\n\t\t\tif(ls) clone(ls);if(rs) clone(rs);\n\t\t\tif(e[ro].rev) rev(ls),rev(rs),e[ro].rev=false;\n\t\t\tif(e[ro].tag!=-1) assign(ls,e[ro].tag),assign(rs,e[ro].tag),e[ro].tag=-1;\n\t\t\tif(e[ro].add) add(ls,e[ro].add),add(rs,e[ro].add),e[ro].add=0;\n\t\t}\n\t\tint build(int l=1,int r=n){\n\t\t\tif(l>r)return 0;\n\t\t\tint mid=(l+r)>>1;\n\t\t\tint ro=newnode(a[mid]);\n\t\t\tls=build(l,mid-1),rs=build(mid+1,r);\n\t\t\tpushup(ro);\n\t\t\treturn ro;\n\t\t}\n\t\tint merge(int a,int b){\n\t\t\tif(!a or !b)return a|b;\n\t\t\tif(rd(0,(e[a].siz+e[b].siz)-1)<e[a].siz){\n\t\t\t\tclone(a),pushdown(a);\n\t\t\t\te[a].son[1]=merge(e[a].son[1],b);\n\t\t\t\tpushup(a);return a;\n\t\t\t}else{\n\t\t\t\tclone(b),pushdown(b);\n\t\t\t\te[b].son[0]=merge(a,e[b].son[0]);\n\t\t\t\tpushup(b);return b;\n\t\t\t}\n\t\t}\n\t\tvoid split(int ro,int k,int &a,int &b){\n\t\t\tif(!ro) return a=b=0,void();\n\t\t\tif(e[ls].siz<k) a=ro,clone(a),pushdown(a),split(e[a].son[1],k-e[e[a].son[0]].siz-1,e[a].son[1],b),pushup(a);\n\t\t\telse b=ro,clone(b),pushdown(b),split(e[b].son[0],k,a,e[b].son[0]),pushup(b);\n\t\t}\n\t\tinline void copy(){\n\t\t\tint l1=read(),r1=read(),l2=read(),r2=read(),a,b,c,d,e;int bk=1;\n\t\t\tif(r1>r2)swap(l1,l2),swap(r1,r2),bk=0;\n\t\t\tsplit(rt,r2,d,e);split(d,l2-1,c,d);split(c,r1,b,c);split(b,l1-1,a,b);\n\t\t\tif(bk) rt=merge(a,merge(b,merge(c,merge(b,e))));\n\t\t\telse rt=merge(a,merge(d,merge(c,merge(d,e))));\n\t\t}\n\t\tinline void Swap(){\n\t\t\tint l1=read(),r1=read(),l2=read(),r2=read(),a,b,c,d,e;\n\t\t\tif(r1>r2)swap(l1,l2),swap(r1,r2);\n\t\t\tsplit(rt,r2,d,e);split(d,l2-1,c,d);split(c,r1,b,c);split(b,l1-1,a,b);\n\t\t\trt=merge(a,merge(d,merge(c,merge(b,e))));\n\t\t}\n\t\tinline void push(int ro){\n\t\t\tif(!ro)return;\n\t\t\tpushdown(ro);\n\t\t\tpush(ls),a[++n]=e[ro].val,push(rs);\n\t\t}\n\t\t#undef ls\n\t\t#undef rs\n\t}S;\n\tinline void work(){\n\t\tn=read(),m=read();\n\t\tfor(int i=1;i<=n;i++) a[i]=read();\n\t\tS.rt=S.build();\n\t\twhile(m--){\n\t\t\tswitch(read()){\n\t\t\t\tcase 1:{\n\t\t\t\t\tint l=read(),r=read(),a,b,c;\n\t\t\t\t\tS.split(S.rt,r,b,c);S.split(b,l-1,a,b);\n\t\t\t\t\tprintf(\"%d\\n\",S.e[b].sum);\n\t\t\t\t\tS.rt=S.merge(a,S.merge(b,c));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 2:{\n\t\t\t\t\tint l=read(),r=read(),a,b,c;\n\t\t\t\t\tS.split(S.rt,r,b,c);S.split(b,l-1,a,b);\n\t\t\t\t\tS.clone(b);\n\t\t\t\t\tS.assign(b,read());\n\t\t\t\t\tS.rt=S.merge(a,S.merge(b,c));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 3:{\n\t\t\t\t\tint l=read(),r=read(),a,b,c;\n\t\t\t\t\tS.split(S.rt,r,b,c);S.split(b,l-1,a,b);\n\t\t\t\t\tS.clone(b);\n\t\t\t\t\tS.add(b,read());\n\t\t\t\t\tS.rt=S.merge(a,S.merge(b,c));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 4:S.copy();break;\n\t\t\t\tcase 5:S.Swap();break;\n\t\t\t\tcase 6:{\n\t\t\t\t\tint l=read(),r=read(),a,b,c;\n\t\t\t\t\tS.split(S.rt,r,b,c);S.split(b,l-1,a,b);\n\t\t\t\t\tS.clone(b);\n\t\t\t\t\tS.rev(b);\n\t\t\t\t\tS.rt=S.merge(a,S.merge(b,c));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(S.tot>3600000) n=0,\n\t\t\tS.push(S.rt),S.rt=S.tot=0,\n\t\t\tS.rt=S.build();\n\t\t}\n\t\tn=0,S.push(S.rt);\n\t\tfor(int i=1;i<=n;i++) printf(\"%d \",a[i]);\n\t}\n}\nsigned main(){\n\tstar::work();\n\tflush();\n\treturn 0;\n}\n```\n\n",
        "postTime": 1610330481,
        "uid": 280015,
        "name": "Star_Cried",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5586 \u3010[P5350] \u5e8f\u5217 (\u52a0\u5f3a\u7248)\u3011"
    },
    {
        "content": "\u8fd9\u9898\u662f\u53cc\u500d\u7ecf\u9a8c[P5350](https://www.luogu.com.cn/problem/P5350)\u3001[P5586](https://www.luogu.com.cn/problem/P5586)\n\n~~\u5e0c\u671b\u9898\u89e3\u4e5f\u80fd\u662f\u53cc\u500d\u7ecf\u9a8c~~\n\nfhq\u7684\u505a\u6cd5\u795e\u9c7c\u5199\u4e86\uff0c\u8fd9\u91cc\u5199\u4e00\u4e0b\u5b83\u7684\u9b54\u6539\u7248\u2014\u2014\u53ef\u6301\u4e45\u5316ODT\uff01\n\n\u5177\u4f53\u64cd\u4f5c\u5c31\u662f\u7528fhq\u6a21\u62dfODT\uff0c\u7136\u540e\u53ef\u6301\u4e45\u5316\u3002\u8fd9\u6837\u533a\u95f4\u8d4b\u503c\u65f6\u5c31\u80fd\u65e0\u8111\u538b\u8282\u70b9\u8fdb\u884c\u63d0\u901f\u548c\u51cf\u5c0f\u5185\u5b58\uff0c\u8fd8\u4e0d\u7528\u6253\u63a8\u5e73\u6807\u8bb0\u548c\u4e0b\u4f20\uff0c\u5373\u4f7f\u5728\u52a0\u5f3a\u7248\u8d4b\u503c\u8f83\u5c11\u7684\u60c5\u51b5\u4e0b\u4e5f\u6709\u52a0\u901f\u6548\u679c\u3002\n\n\u8fd9\u6837\uff0c\u53ea\u9700\u8981\u5728\u539f\u6765\u505a\u6cd5\u4e2d\u7684pushdown\u3001pushup\u548csplit\u64cd\u4f5c\u4e2d\u8fdb\u884c\u6539\u52a8\u5c31\u884c\u4e86\uff5e\n\npushup\uff1asiz\u3001sum\u7b97\u65f6\u7528\u8282\u70b9\u957f\u5ea6\u6765\u7b97\n\npushdown\uff1a\u5220\u6389\u533a\u95f4\u8d4b\u503c\u7684\u6807\u8bb0\u548c\u5bf9\u5e94\u7684\u4e0b\u4f20\u64cd\u4f5c\n\nsplit\uff1a\u548c\u4e4b\u524d\u4e00\u6837\uff0c\u6309\u5b50\u6811\u5927\u5c0f\u5206\u88c2\uff0c\u5982\u679c\u5206\u88c2\u70b9\u5728\u5f53\u524d\u8282\u70b9\u533a\u95f4\u5185\u5c31\u628a\u8282\u70b9\u4e00\u5206\u4e3a\u4e8c\u5e76\u91cd\u65b0\u8ba1\u7b97\u5404\u9879\u503c\n\n\u8fd9\u91cc\u653e\u4e00\u4e0b\u4ee3\u7801\n```cpp\n\n        if (!now)\n        {\n            x = y = 0;\n            return;\n        }\n        pushdown(now);\n        if (k >= tr[tr[now].ls].siz + tr[now].len)\n            //\u2026\u2026\u2026\u2026\u2026\u2026\n        else if (k <= tr[tr[now].ls].siz)\n            //\u2026\u2026\u2026\u2026\u2026\u2026\n        else\n            //\u2026\u2026\u2026\u2026\u2026\u2026\u5206\u88c2\u8282\u70b9\uff0c\u8bb0\u5f97\u53ef\u6301\u4e45\u5316\n        return;\n```\n\n\u8fd9\u6837\uff0c\u518d\u52a0\u4e0a\u5b9a\u671f\u7ebf\u6027\u91cd\u6784\uff0c\u5728P5350\u4e2dfhq\u5c31\u53ef\u4ee5\u8dd1\u8fc7ODT\u4e86\uff08\u76ee\u524d\u6700\u4f18\u89e3\uff09\uff0c\n\u5728P5586\u4e2d\u4e5f\u53ef\u4ee5-1s\uff08\u8d4b\u503c\u64cd\u4f5c\u592a\u5c11\uff0c\u8fd8\u662f\u8dd1\u4e0d\u8fc7\u7528leefty tree\u7684\u5927\u4f6c\uff09\u3002\n\n\u5176\u5b9e\u8fd9\u9898\u4e0d\u591f\u723d\uff0c\u53ef\u6301\u4e45\u5316\u5e73\u8861\u6811\u5c31\u5e94\u8be5\u5f001Gb\u624d\u53eb\u4e0d\u5361\u7a7a\u95f4\uff08\u89c1P5055 \u3010\u6a21\u677f\u3011\u53ef\u6301\u4e45\u5316\u6587\u827a\u5e73\u8861\u6811\uff09\uff0c\u7136\u540e\u4e0d\u8981\u7ebf\u6027\u91cd\u6784\uff0c\u6700\u540e\u4e0d\u8f93\u51fa\u5e8f\u5217\uff0c\u901a\u8fc7\u533a\u95f4\u590d\u5236\u8fbe\u5230\n1e18\uff0c\u624d\u53eb\u723d\uff08\u6309\u8fd9\u4e2a\u64cd\u4f5c\u6b21\u6570\u6765\u7b97\u5e94\u8be5\u53ef\u4ee5\u8f7b\u677e\u901a\u8fc7\u65f6\u9650\uff0c\u6b64\u9898\u5f88\u5927\u4e00\u90e8\u5206\u65f6\u95f4\u5316\u5728\u7ebf\u6027\u91cd\u6784\u4e0a\u4e86\uff09\u3002\n\n\u6700\u540e\u5410\u69fd\u4e00\u4e0b **_ Wallace _** \u5e38\u6570\u597d\u5927\u3002\n\n\n**Code\uff1a**\n\n```cpp\n//\u76f8\u4fe1\u5404\u4f4d\u90fd\u80fd\u8f7b\u677e\u5199\u51fa\uff0c\u6211\u5c31\u4e0d\u653e\u4e86\n```\n\n\n\u8fd9\u9898\u8c03\u4e86\u597d\u4e45\uff0c\u6211\u8fd8\u662f\u592a\u83dc\u4e86\u3002\n",
        "postTime": 1603944642,
        "uid": 55807,
        "name": "LJC00101",
        "ccfLevel": 0,
        "title": "\u5e8f \u5217"
    },
    {
        "content": "### P.S.\n\u4ece `03-27,11:54` \u5ba3\u5e03\u8981\u5199\u5199\u5230 `03-27,16:25` \u4ea4\u4e86\u7b2c\u4e00\u53d1\u4ee3\u7801\u3002  \n\u4ece `03-27,16:25` \u8c03\u5230 `03-28 18:18:04` \u6b63\u5f0f AC\u3002  \n\u8fd9\u9898\u4e5f\u592a\u6bd2\u7624\u4e86\u7f62\uff0c\u8fd8\u6709 @\u9c30 \u51fa\u6765\u89e3\u91ca\u4e00\u4e0b\u4e0d\u5361\u7a7a\u95f4\u662f\u4ec0\u4e48\u610f\u601d\uff1f  \n\n### Description.\n\u7565\u3002  \n\n### Solution.\n~~ODT \u505a\u5b8c\u4e86~~\uff0c\u52a0\u5f3a\u7248\u5361 ODT\u3002  \n\u524d\u7f6e\u77e5\u8bc6\uff1a[\u53ef\u6301\u4e45\u5316\u6587\u827a\u5e73\u8861\u6811](https://www.luogu.com.cn/problem/P5055)  \n~~\u7136\u540e\u5c31\u505a\u5b8c\u4e86~~  \n\u8fd9\u9898\u53ef\u4ee5\u7406\u89e3\u6210\u6a21\u677f\u7684\u52a0\u5f3a\u7248\u3002  \n\u6bd5\u7adf\u6a21\u677f\u53ea\u6709\u4e00\u4e2a\u7ffb\u8f6c\u64cd\u4f5c\uff0c\u6570\u636e\u6bd4\u8f83\u5f31\u3002  \n\n\u9996\u5148\uff0c\u8fd9\u4e2a `1/2/3/5/6` \u64cd\u4f5c\u90fd\u5f88\u663e\u7136\u5f88\u5bb9\u6613\u505a\u3002  \n\u4f46\u662f\u8fd9\u4e2a `4` \u64cd\u4f5c\u5982\u679c\u66b4\u529b\u590d\u5236/\u66b4\u529b\u4fee\u6539\u663e\u7136\u65f6\u95f4\u590d\u6742\u5ea6\u7206\u70b8\u3002  \n\u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u5f3a\u884c\u5bf9\u8fd9\u68f5\u6811\u53ef\u6301\u4e45\u5316\u5c31\u597d\u4e86\u3002  \n\u8fd9\u6837\u6211\u4eec\u65b0\u63d2\u5165\u4e00\u4e2a\u7ed3\u70b9\u65f6\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u628a\u8fd9\u4e2a\u7ed3\u70b9\u590d\u5236\u4e00\u4efd\u7136\u540e\u63d2\u5165\u3002  \n\u8fd9\u6837\u4fdd\u8bc1\u4e86\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u6b63\u786e\u3002  \n\n\u6211\u4eec\u6bcf\u6b21\u4e0b\u63a8\u6807\u8bb0\u65f6\u9700\u8981\u628a\u4e24\u4e2a\u5b69\u5b50\u590d\u5236\u4e00\u4efd\u3002  \n\u8fd9\u6837\u624d\u80fd\u4fdd\u8bc1\u4e4b\u524d\u7684\u4fe1\u606f\u4e0d\u88ab\u8986\u76d6\u3002  \n\n\u7136\u540e\u5c31\u505a\u5b8c\u4e86\uff0c\u4e0d\u8fc7\u80e1\u9898 5min\uff0c\u5199\u9898 5h+\u3002  \n\n\u6865\u8c46\u9ebb\u888b\uff0c\u8fd9\u6837\u5199\u5b8c\u4e00\u4ea4\uff0c\u76f4\u63a5 RE\uff01  \n\u679c\u7136\uff0c\u8fd9\u4e2a\u4e0d\u5361\u7a7a\u95f4\u662f\u5047\u7684\uff0c\u7a7a\u95f4\u5f00 256MB \u76f4\u63a5\u539f\u5730\u7206\u70b8\u3002  \n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5b9a\u671f\u91cd\u6784\u3002\u3002\u3002  \n### Coding.\n~~\u4ee3\u7801\u5e72\u8d27\uff0c\u4e0d\u8fc7\u5728\u5ea7\u7684\u90fd\u80fd\u770b\u5f97\u61c2\u7f62~~\n```cpp\n//\u662f\u554a\u2026\u2026\u4f60\u5c31\u662f\u90a3\u53ea\u9b3c\u4e86\u2026\u2026\u6240\u4ee5\u88ab\u4f60\u78b0\u5230\u4ee5\u540e\uff0c\u5c31\u8f6e\u5230\u6211\u53d8\u6210\u9b3c\u4e86\n#include<bits/stdc++.h>\nusing namespace std;typedef long long ll;\ntemplate<typename T>inline void read(T &x)\n{\n\tx=0;char c=getchar(),f=0;\n\tfor(;c<'0'||c>'9';c=getchar()) if(c=='-') f=1;\n\tfor(;c>='0'&&c<='9';c=getchar()) x=(x<<1)+(x<<3)+(c^48);\n\tif(f) x=-x;\n}\nconst int P=1e9+7;int st[7666666],tp,nn,a[500005];\nstruct node{int sm,vl,sz,ls,rs,pl,as;char rv;}T[7666666];int tt,rt,n,q;\ninline void New(int &x,int w) {T[x=tp?st[tp--]:++tt]=(node){w,w,1,0,0,0,-1,0};}\ninline void Del(int &x) {st[++tp]=x,T[x]=(node){0,0,0,0,0,0,0,0},x=0;}\ninline void Cpy(int &x) {if(x) {int nx=tp?st[tp--]:++tt;T[nx]=T[x],x=nx;}}\ninline int& mod(int &x) {return x>=P?x-=P:x,x;}\ninline void pushup(int x) {T[x].sm=(0ll+T[T[x].ls].sm+T[T[x].rs].sm+T[x].vl)%P,T[x].sz=T[T[x].ls].sz+T[T[x].rs].sz+1;}\ninline void allr(int x) {if(x) swap(T[x].ls,T[x].rs),T[x].rv^=1;}\ninline void allp(int x,int c) {if(x) mod(T[x].vl+=c),mod(T[x].pl+=c),T[x].sm=(T[x].sm+1ll*T[x].sz*c)%P;}\ninline void allf(int x,int c) {if(x) T[x].pl=T[x].rv=0,T[x].as=T[x].vl=c,T[x].sm=1ll*T[x].sz*c%P;}\ninline void pushr(int x) {if(x&&T[x].rv) allr(T[x].ls),allr(T[x].rs),T[x].rv=0;}\ninline void pushp(int x) {if(x&&T[x].pl) allp(T[x].ls,T[x].pl),allp(T[x].rs,T[x].pl),T[x].pl=0;}\ninline void pushf(int x) {if(x&&~T[x].as) allf(T[x].ls,T[x].as),allf(T[x].rs,T[x].as),T[x].as=-1;}\ninline void pushdw(int x)\n{\n\tif(x&&(T[x].pl||T[x].rv||~T[x].as)) Cpy(T[x].ls),Cpy(T[x].rs);\n\tif(x&&(T[x].pl||T[x].rv||~T[x].as)) pushf(x),pushp(x),pushr(x);\n}\ninline char rnd(int a,int b) {return rand()%(a+b)<a;}\ninline void split(int x,int k,int &a,int &b)\n{\n\tif(!x) return a=b=0,void();else pushdw(x);\n\tif(k<=T[T[x].ls].sz) Cpy(b=x),split(T[b].ls,k,a,T[b].ls),pushup(b);\n\telse Cpy(a=x),split(T[a].rs,k-T[T[x].ls].sz-1,T[a].rs,b),pushup(a);\n}\ninline int merge(int a,int b)\n{\n\tif(!a||!b) return a|b;\n\tif(rnd(T[a].sz,T[b].sz)) return pushdw(a),Cpy(a),T[a].rs=merge(T[a].rs,b),pushup(a),a;\n\telse return pushdw(b),Cpy(b),T[b].ls=merge(a,T[b].ls),pushup(b),b;\n}\ninline void Clear(int &x) {if(!x);else Clear(T[x].ls),Clear(T[x].rs),Del(x);}\ninline void paint(int x) {if(!x);else pushdw(x),paint(T[x].ls),printf(\"%d \",T[x].vl),paint(T[x].rs);}\ninline void pull(int x) {if(!x);else pushdw(x),pull(T[x].ls),a[++nn]=T[x].vl,pull(T[x].rs);}\ninline int qry(int l,int r)\n{\n\tint a,b,c,v;split(rt,r,b,c),split(b,l-1,a,b);\n\treturn v=T[b].sm,rt=merge(a,merge(b,c)),v;\n}\ninline void ass(int l,int r,int v)\n{\n\tint a,b,c;split(rt,r,b,c),split(b,l-1,a,b);\n\tCpy(b),allf(b,v),rt=merge(a,merge(b,c));\n}\ninline void pls(int l,int r,int v)\n{\n\tint a,b,c;split(rt,r,b,c),split(b,l-1,a,b);\n\tCpy(b),allp(b,v),rt=merge(a,merge(b,c));\n}\ninline void swp(int l,int r,int x,int y)\n{\n\tint a,b,c,d,e;if(l>x) swap(l,x),swap(r,y);\n\tsplit(rt,y,d,e),split(d,x-1,c,d),split(c,r,b,c),split(b,l-1,a,b);\n\tswap(b,d),rt=merge(a,merge(b,merge(c,merge(d,e))));\n}\ninline void psh(int l,int r,int x,int y)\n{\n\tint a,b,c,d,e,f;if(l>x) swap(l,x),swap(r,y),f=1;else f=0;\n\tsplit(rt,y,d,e),split(d,x-1,c,d),split(c,r,b,c),split(b,l-1,a,b);\n\tif(f) Cpy(b=d);else Cpy(d=b);\n\trt=merge(a,merge(b,merge(c,merge(d,e))));\n}\ninline void rev(int l,int r)\n{\n\tint a,b,c;split(rt,r,b,c),split(b,l-1,a,b);\n\tCpy(b),allr(b),rt=merge(a,merge(b,c));\n}\ninline void build(int &x,int l,int r)\n{\n\tint md;if(l>r) return;else md=(l+r)>>1,New(x,a[md]);\n\tbuild(T[x].ls,l,md-1),build(T[x].rs,md+1,r),pushup(x);\n}\nint main()\n{\n\tsrand(114514),read(n),read(q);for(int i=1;i<=n;i++) read(a[i]);\n\tbuild(rt,1,n);for(int op,l,r,a,b,ls=0;q--;)\n\t{\n\t\tread(op),read(l),read(r),l^=ls,r^=ls;\n\t\tif(op==1) printf(\"%d\\n\",ls=qry(l,r));\n\t\tif(op==2) read(a),a^=ls,ass(l,r,a);\n\t\tif(op==3) read(a),a^=ls,pls(l,r,a);\n\t\tif(op==4) read(a),read(b),a^=ls,b^=ls,psh(l,r,a,b);\n\t\tif(op==5) read(a),read(b),a^=ls,b^=ls,swp(l,r,a,b);\n\t\tif(op==6) rev(l,r);\n\t\tif(tt>=6000000) nn=0,pull(rt),tt=tp=rt=0,build(rt,1,n);\n\t}\n\treturn paint(rt),putchar('\\n'),0;\n}\n```",
        "postTime": 1616928858,
        "uid": 44805,
        "name": "Leap_Frog",
        "ccfLevel": 7,
        "title": "P5586 [P5350] \u5e8f\u5217 (\u52a0\u5f3a\u7248)\uff08\u9898\u89e3\uff09"
    },
    {
        "content": "\u7ed9\u51fa\u4e00\u79cd\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u53d8\u4f46\u7ebf\u6027\u7a7a\u95f4\u7684\u505a\u6cd5\u3002\n\n\u601d\u8003\u4e3a\u4ec0\u4e48\u53ef\u6301\u4e45\u5316\u5e73\u8861\u6811\u5c31\u53ef\u4ee5\u5b8c\u6210\u533a\u95f4\u590d\u5236\uff0c\u56e0\u4e3a\u53ef\u6301\u4e45\u5316\u540e\u4fee\u6539\u4e0d\u4f1a\u5bfc\u81f4\u539f\u7248\u672c\u88ab\u4fee\u6539\uff0c\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u590d\u5236\u3002\n\n\u4f46\u53ef\u6301\u4e45\u5316\u5bf9\u7a7a\u95f4\u6709\u5de8\u5927\u7684\u6d88\u8017\uff0c\u8003\u8651\u4f7f\u7528\u5f15\u7528\u8ba1\u6570\uff08\u73b0\u4ee3\u5bf9\u4e8e\u591a\u4e2a\u5b57\u7b26\u4e32\u5904\u7406\u7684\u5e38\u89c1\u65b9\u5f0f\uff09\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u5c3d\u53ef\u80fd\u628a\u76f8\u540c\u7684\u5185\u5bb9\u4f7f\u7528\u540c\u4e00\u5757\u7a7a\u95f4\u8868\u793a\uff0c\u5f53\u8fdb\u884c\u4fee\u6539\u65f6\u5982\u679c\u5f15\u7528\u4e0d\u4e3a \u4e00 \u5c31\u8fdb\u884c\u590d\u5236\u3002\u5f53\u5f15\u7528\u4e3a\u96f6\u65f6\u5373\u53ef\u5220\u9664\u8282\u70b9\u3002\n\n\u590d\u6742\u5ea6\uff1a\n\n\u65f6\u95f4\uff1a\n\n\u56e0\u4e3a\u6bcf\u6b21\u6211\u4eec\u53ea\u4f1a\u8bbf\u95ee $\\log n$ \u4e2a\u8282\u70b9\uff0c\u6b64\u65f6\u624d\u53ef\u80fd\u53d1\u751f\u590d\u5236\u3002\u590d\u5236\u5e26\u6765\u7684\u603b\u8282\u70b9\u6570\u91cf $O(n \\log n)$\u3002\n\n\u5220\u9664\u7684\u65f6\u5019\u6bcf\u5220\u9664\u4e00\u4e2a\u8282\u70b9\u7684\u590d\u6742\u5ea6\u4e3a $O(1)$ \u5220\u9664\u8282\u70b9\u6570\u91cf\u4e0d\u53ef\u80fd\u8d85\u8fc7\u603b\u7ed3\u70b9\u6570\u91cf \u56e0\u6b64\u5220\u9664\u5e26\u6765\u7684\u603b\u590d\u6742\u5ea6\u540c\u6837\u4e3a $O(n \\log n)$\u3002\n\n\u7a7a\u95f4\uff1a\n\n\u8003\u8651\u603b\u5f15\u7528\u6b21\u6570\u4e0d\u8d85\u8fc7 $O(n)$\uff0c\u56e0\u6b64\u5728\u6bcf\u4e2a\u65f6\u523b\u8282\u70b9\u603b\u4e2a\u6570\u4e0d\u8d85\u8fc7 $O(n)$\u3002\n\n\u5b9e\u73b0\u4e0a\uff1a\n\n\u6211\u4eec\u989d\u5916\u8bb0\u5f55\u4e00\u4e2a\u8be5\u70b9\u88ab\u5f15\u7528\u7684\u6b21\u6570\uff0c\u6839\u8282\u70b9\u56fa\u5b9a\u4e3a\u4e00\uff0c\u6b64\u5916\u6bcf\u4e2a\u8282\u70b9\u5f15\u7528\u4e00\u6b21\u5b83\u7684\u5de6\u53f3\u5b69\u5b50\u3002\n\n\u90a3\u4e48\u5728\u6ca1\u6709\u533a\u95f4\u590d\u5236\u65f6\u6bcf\u4e2a\u8282\u70b9\u7684\u5f15\u7528\u8ba1\u6570\u90fd\u4e3a\u4e00\u3002\n\n\u73b0\u5728\u6211\u4eec\u5bf9\u5b83\u8fdb\u884c\u533a\u95f4\u590d\u5236\u3002\n\n\u8981\u590d\u5236\u7684\u90a3\u4e2a\u533a\u95f4\u56e0\u4e3a\u6b64\u65f6\u4e0d\u6d89\u53ca\u4fee\u6539\u53ea\u9700\u8981\u628a\u5b83\u7684\u5f15\u7528\u6b21\u6570\u589e\u52a0\u4e00\u6b21\uff0c\u7136\u540e\u5408\u5e76\u3002\n\n\u88ab\u590d\u5236\u7684\u90a3\u4e2a\u533a\u95f4\u7684\u5f15\u7528\u8ba1\u6570\u51cf\u5c11\u4e00\u6b21\uff0c\u5982\u679c\u53d1\u73b0\u5f15\u7528\u6b21\u6570\u5df2\u7ecf\u4e3a\u96f6\u5c31\u9012\u5f52\u5220\u9664\u3002\n\n\u6ce8\u610f\u6253\u6807\u8bb0\u65f6\u6709\u4fee\u6539\u56e0\u6b64\u68c0\u67e5\u662f\u5426\u8981\u590d\u5236\u3002\n\n```cpp\n//HAVE WE BECOME BLASPHEMOUS?\n#include<bits/stdc++.h>\nusing i64=long long;\nconstexpr int mod=1e9+7,maxn=3e5+50;\nint rand01(i64 x,i64 y){\n\treturn y*rand()<x*RAND_MAX;\n}//x/y\u7684\u51e0\u7387\u8fd4\u56de1 \u5426\u5219\u8fd4\u56de0\nstruct FHQtreap{\n\tstruct Node{\n\t\ti64 sum,val,add,set;\n\t\tint l,r,siz,rev,ref;\n\t\tinline void Set(i64 v){val=set=v,sum=v*siz,add=0;}\n\t\tinline void Add(i64 v){add+=v,sum+=v*siz,val+=v;}\n\t\tinline void Rev(){std::swap(l,r),rev^=1;}\n\t}tr[maxn];//FHQtreap\u7684\u8282\u70b9\n\tint cnt,bin[maxn],top,root;\n\t//\u4f7f\u7528\u7684\u8282\u70b9\u603b\u6570 \u5783\u573e\u6876 \u5783\u573e\u6876\u9876 \u6839\u8282\u70b9id\n\tinline void delid(int id){bin[++top]=id;}\n\tint newid(){return top?bin[top--]:++cnt;}\n\tinline int newnode(i64 val){\n\t\tint id=newid();\n\t\ttr[id]={val,val,0,-1,0,0,1,0,1};\n\t\treturn id;\n\t}//\u65b0\u5efa\u4e00\u4e2a\u5bf9\u5e94\u6743\u503c\u7684\u8282\u70b9\u5e76\u8fd4\u56de\u5176\u7f16\u53f7\n\t#define ls tr[rt].l\n\t#define rs tr[rt].r\n\tvoid Kill(int rt){\n\t\tif(!rt){return ;}\n\t\tif(tr[rt].ref>1){return --tr[rt].ref,void();}\n\t\tKill(ls),Kill(rs),delid(rt);\n\t}//\u5220\u9664\u4ee5rt\u4e3a\u6839\u7684\u8282\u70b9\n\tinline void pushup(int rt){\n\t\ttr[rt].sum=tr[ls].sum+tr[rt].val+tr[rs].sum;\n\t\ttr[rt].siz=tr[ls].siz+1+tr[rs].siz;\n\t}\n\tinline void check(int &rt){\n\t\tif(tr[rt].ref>1){\n\t\t\tint nw=newid();\n\t\t\t(tr[nw]=tr[rt]).ref=1,--tr[rt].ref,rt=nw;\n\t\t\tif(ls)++tr[ls].ref;\n\t\t\tif(rs)++tr[rs].ref;\n\t\t}\n\t}//\u68c0\u6d4b\u662f\u5426\u5f15\u7528\u5927\u4e8e1 (copy on write)\n\tinline void pushdown(int &rt){\n\t\tcheck(rt);\n\t\tif(~tr[rt].set){\n\t\t\tif(ls)check(ls),tr[ls].Set(tr[rt].set);\n\t\t\tif(rs)check(rs),tr[rs].Set(tr[rt].set);\n\t\t\ttr[rt].set=-1;\n\t\t}\n\t\tif(tr[rt].rev){\n\t\t\tif(ls)check(ls),tr[ls].Rev();\n\t\t\tif(rs)check(rs),tr[rs].Rev();\n\t\t\ttr[rt].rev=0;\n\t\t}\n\t\tif(tr[rt].add){\n\t\t\tif(ls)check(ls),tr[ls].Add(tr[rt].add);\n\t\t\tif(rs)check(rs),tr[rs].Add(tr[rt].add);\n\t\t\ttr[rt].add=0;\n\t\t}\n\t}//\u4e0b\u4f20 \u4fdd\u8bc1\u4e0d\u51b2\u7a81\n\tvoid split(int rt,int k,int &x,int &y){\n\t\tif(!rt){return x=y=0,void();}\n\t\tpushdown(rt);\n\t\tif(tr[ls].siz<k){\n\t\t\tx=rt,split(rs,k-tr[ls].siz-1,rs,y);\n\t\t\tpushup(x);\n\t\t}\n\t\telse{\n\t\t\ty=rt,split(ls,k,x,ls);\n\t\t\tpushup(y);\n\t\t}\n\t}\n\tint merge(int x,int y){\n\t\tif(!x){return y;}\n\t\tif(!y){return x;}\n\t\tpushdown(x),pushdown(y);\n\t\tif(rand01(tr[x].siz,tr[y].siz+tr[x].siz)){\n\t\t\ttr[x].r=merge(tr[x].r,y),pushup(x);\n\t\t\treturn x;\n\t\t}\n\t\telse{\n\t\t\ttr[y].l=merge(x,tr[y].l),pushup(y);\n\t\t\treturn y;\n\t\t}\n\t}\n\tvoid print(int rt){\n\t\tif(!rt){return ;}\n\t\tpushdown(rt);\n\t\tprint(ls),std::cout<<tr[rt].val%mod<<' ',print(rs);\n\t}//\u4e2d\u5e8f\u904d\u5386\u5373\u4e3a\u6253\u5370\u8fd9\u4e2a\u5e8f\u5217\n\t#undef ls\n\t#undef rs\n\ti64 Sum(int l,int r){\n\t\tint x,y,z;\n\t\tsplit(root,r,x,z),split(x,l-1,x,y);\n\t\ti64 res=tr[y].sum;\n\t\troot=merge(merge(x,y),z);\n\t\treturn res;\n\t}//\u83b7\u53d6\u533a\u95f4\u548c\n\tvoid Assign(int l,int r,i64 v){\n\t\tint x,y,z;\n\t\tsplit(root,r,x,z),split(x,l-1,x,y);\n\t\tcheck(y),tr[y].Set(v);\n\t\troot=merge(merge(x,y),z);\n\t}//\u533a\u95f4\u8d4b\u503c\n\tvoid Add(int l,int r,i64 v){\n\t\tint x,y,z;\n\t\tsplit(root,r,x,z),split(x,l-1,x,y);\n\t\tcheck(y),tr[y].Add(v);\n\t\troot=merge(merge(x,y),z);\n\t}//\u533a\u95f4\u52a0\n\tvoid Copy(int l1,int r1,int l2,int r2){\n\t\tint con=0,v,w,x,y,z;\n\t\tif(l1>l2){\n\t\t\tstd::swap(l1,l2),std::swap(r1,r2);\n\t\t\tcon=1;\n\t\t}\n\t\tsplit(root,r2,v,z),split(v,l2-1,v,y);\n\t\tsplit(v,r1,v,x),split(v,l1-1,v,w);\n\t\tif(con){\n\t\t\tstd::swap(w,y);\n\t\t}\n\t\ttr[w].ref++;\n\t\tif(tr[y].ref>1){--tr[y].ref;}else{Kill(y);}\n\t\troot=merge(v,merge(w,merge(x,merge(w,z))));\t\n\t}//\u533a\u95f4\u590d\u5236\n\tvoid Swap(int l1,int r1,int l2,int r2){\n\t\tif(l1>l2){std::swap(l1,l2),std::swap(r1,r2);}\n\t\tint v,w,x,y,z;\n\t\tsplit(root,r2,v,z),split(v,l2-1,v,y);\n\t\tsplit(v,r1,v,x),split(v,l1-1,v,w);\n\t\troot=merge(v,merge(y,merge(x,merge(w,z))));\n\t}//\u533a\u95f4\u4ea4\u6362\n\tvoid Reverse(int l,int r){\n\t\tint x,y,z;\n\t\tsplit(root,r,x,z),split(x,l-1,x,y);\n\t\tcheck(y),tr[y].Rev();\n\t\troot=merge(merge(x,y),z);\n\t}//\u533a\u95f4\u7ffb\u8f6c\n}T;\nvoid solve(){\n\tint n,q;\n\tstd::cin>>n>>q;\n\tfor(int i=0,x;i!=n;i++){\n\t\tstd::cin>>x;\n\t\tT.root=T.merge(T.root,T.newnode(x));\n\t}\n\tfor(int i=0,op,l,r,x,y,las=0;i!=q;i++){\n\t\tstd::cin>>op>>l>>r,l^=las,r^=las;\n\t\tswitch(op){\n\t\t\tcase 1:std::cout<<(las=T.Sum(l,r)%mod)<<'\\n';break;\n\t\t\tcase 2:std::cin>>x,x^=las;T.Assign(l,r,x);break;\n\t\t\tcase 3:std::cin>>x,x^=las;T.Add(l,r,x);break;\n\t\t\tcase 4:std::cin>>x>>y,x^=las,y^=las;T.Copy(l,r,x,y);break;\n\t\t\tcase 5:std::cin>>x>>y,x^=las,y^=las;T.Swap(l,r,x,y);break;\n\t\t\tcase 6:T.Reverse(l,r);break;\n\t\t}\n\t}\n\tT.print(T.root);\n}\nint main(){\n\tstd::ios::sync_with_stdio(false);\n\tstd::cin.tie(nullptr);\n\tsolve();\n\tstd::cerr<<\"T.cnt:\"<<T.cnt<<std::endl;\n\treturn 0;\n}\n```",
        "postTime": 1676972237,
        "uid": 746640,
        "name": "Pulsating_Dust",
        "ccfLevel": 7,
        "title": "P5586 \u9898\u89e3"
    },
    {
        "content": "\u4e2a\u4eba\u611f\u89c9\u672c\u9898\u548c[\u8fd9\u9898](https://www.luogu.com.cn/problem/P2042)\u7ed9\u6211\u7684\u611f\u89c9\u5dee\u4e0d\u591a\uff08\u90fd\u5f88\u6076\u5fc3\uff09\u3002\n\n\u7531\u4e8e\u590d\u5236\u64cd\u4f5c\u7684\u5b58\u5728\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528**\u53ef\u6301\u4e45\u5316\u6587\u827a\u5e73\u8861\u6811**\uff08\u6211\u7528\u7684 FHQ_Treap\uff0c\u4e3b\u8981\u662f\u597d\u5199\uff09\u3002\n\n\u7136\u540e\u5c31\u662f\u6839\u636e\u6bcf\u4e2a\u64cd\u4f5c\u8981\u6c42\u7ed9\u51fa\u64cd\u4f5c\u5c31\u597d\u3002\n\n\u903b\u8f91\u4ec0\u4e48\u7684\u90fd\u662f\u76f8\u5f53\u7b80\u5355\u7684\uff0c\u5c31\u662f\u7801\u91cf\u5927\u4e86\u4e9b\u3002\n\n\u628a\u5f31\u5316\u7248\u7684\u4ee3\u7801\u62ff\u8fc7\u6765\u52a0\u4e2a\u5f3a\u5236\u5728\u7ebf\u76f4\u63a5\u5c31\u80fd\u8fc7\u3002\n\n\u6ce8\u610f\u53ef\u6301\u4e45\u5316\u7684\u5199\u6cd5\uff1asplit\uff0cmerge \u548c Copy \u90fd\u9700\u8981\u590d\u5236\u3002\n\n\u5176\u6b21\u5c31\u662f pushdown \u7684\u5199\u6cd5\uff0c\u6ce8\u610f\u5224\u65ad\u662f\u5426\u5b58\u5728\u5de6\u53f3\u5b69\u5b50\uff0c\u7136\u540e\u5982\u679c[\u4e0a\u9762\u90a3\u4e2a\u9898](https://www.luogu.com.cn/problem/P2042)\u7684 pushdown \u4f60\u4f1a\u5199\u4e86\u8fd9\u4e2a\u5c31\u6ca1\u95ee\u9898\u4e86\u3002\n\n\u7136\u540e\u7b14\u8005\u5c31\u6ca1\u9047\u5230\u4ec0\u4e48\u95ee\u9898\u4e86\u3002\n\n\u8d34\u4e2a\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define l(x) t[x].ls\n#define r(x) t[x].rs\n#define p 1000000007\nconst int M = 3e6 + 6e5 + 5;\nconst int N = 3e5 + 5;\nint root, cnt, m, n, a[N], top, last;\nstruct FHQ_Treap\n{\n\tint sum, val, size, ls, rs, cov, add, rev, key;\n}t[M];\ntemplate <typename T> void read(T &x)\n{\n\tT f = 1; x = 0; char ch = getchar();\n\twhile(ch > '9' || ch < '0') { if(ch == '-') f = -1; ch = getchar(); }\n\twhile(ch >= '0' && ch <= '9') { x = (x << 3) + (x << 1) + (ch ^ 48); ch = getchar(); }\n\tx *= f;\n}\ntemplate <typename T> void write(T x, char ch)\n{\n\tif(x < 0) putchar('-'), x = -x;\n\tif(x > 9) write(x / 10, 0); putchar(x % 10 + '0');\n\tif(ch == ' ') putchar(' '); if(ch == '\\n') putchar('\\n');\n}\nint add(int a, int b) { return a + b >= p ? a + b - p : a + b; }\nint clone(int now) { return t[++cnt] = t[now], cnt; }\nvoid update(int x)\n{\n\tt[x].size = t[l(x)].size + t[r(x)].size + 1;\n\tt[x].sum = add(add(t[l(x)].sum, t[r(x)].sum), t[x].val);\n}\nvoid Rev(int now)\n{\n\tswap(l(now), r(now));\n\tt[now].rev ^= 1;\n}\nvoid Add(int now, int k)\n{\n\tt[now].val = add(t[now].val, k);\n\tt[now].add = add(t[now].add, k);\n\tt[now].sum = (t[now].sum + 1ll * t[now].size * k) % p;\n}\nvoid Cov(int now, int k)\n{\n\tt[now].add = 0;\n\tt[now].val = t[now].cov = k;\n\tt[now].sum = 1ll * t[now].size * k % p;\n}\nvoid pushdown(int now)\n{\n\tif(t[now].add || t[now].cov != -1 || t[now].rev)\n\t{\n\t\tif(l(now)) l(now) = clone(l(now));\n\t\tif(r(now)) r(now) = clone(r(now));\n\t}\n\tif(t[now].cov != -1)\n\t{\n\t\tif(l(now)) Cov(l(now), t[now].cov);\n\t\tif(r(now)) Cov(r(now), t[now].cov);\n\t\tt[now].cov = -1;\n\t}\n\tif(t[now].add)\n\t{\n\t\tif(l(now)) Add(l(now), t[now].add);\n\t\tif(r(now)) Add(r(now), t[now].add);\n\t\tt[now].add = 0;\n\t}\n\tif(t[now].rev)\n\t{\n\t\tif(l(now)) Rev(l(now));\n\t\tif(r(now)) Rev(r(now));\n\t\tt[now].rev = 0;\n\t}\n}\nvoid split(int now, int size, int &x, int &y)\n{\n\tif(!now) return x = y = 0, void();\n\tpushdown(now);\n\tif(t[l(now)].size < size)\n\t\tx = clone(now), split(r(x), size - t[l(x)].size - 1, r(x), y), update(x);\n\telse y = clone(now), split(l(y), size, x, l(y)), update(y);\n}\nint merge(int x, int y)\n{\n\tif(!x || !y) return x | y;\n\tif(t[x].key > t[y].key)\n\t\treturn x = clone(x), pushdown(x), r(x) = merge(r(x), y), update(x), x;\n\telse return y = clone(y), pushdown(y), l(y) = merge(x, l(y)), update(y), y;\n}\nint addnode(int val)\n{\n\tt[++cnt].cov = -1;\n\tt[cnt].val = t[cnt].sum = val;\n\tl(cnt) = r(cnt) = t[cnt].add = t[cnt].rev = 0;\n\tt[cnt].key = rand();\n\tt[cnt].size = 1;\n\treturn cnt;\n}\nint build(int l, int r)\n{\n\tint mid = l + r >> 1;\n\tint now = addnode(a[mid]);\n\tif(l > r) return 0;\n\tl(now) = build(l, mid - 1); r(now) = build(mid + 1, r);\n\treturn update(now), now;\n}\nint Query(int l, int r)\n{\n\tint x, y, z, ans;\n\tsplit(root, r, x, z);\n\tsplit(x, l - 1, x, y);\n\treturn ans = t[y].sum, root = merge(merge(x, y), z), ans;\n}\nvoid Cover(int l, int r, int k)\n{\n\tint x, y, z;\n\tsplit(root, r, x, z);\n\tsplit(x, l - 1, x, y);\n\tCov(y, k); root = merge(merge(x, y), z);\n}\nvoid Change(int l, int r, int k)\n{\n\tint x, y, z;\n\tsplit(root, r, x, z);\n\tsplit(x, l - 1, x, y);\n\tAdd(y, k); root = merge(merge(x, y), z);\n}\nvoid Reverse(int l, int r)\n{\n\tint x, y, z;\n\tsplit(root, r, x, z);\n\tsplit(x, l - 1, x, y);\n\tRev(y); root = merge(merge(x, y), z);\n}\nvoid Copy(int l1, int r1, int l2, int r2)\n{\n\tint a, b, c, d, e; bool f = 0;\n\tif(l1 > l2) swap(l1, l2), swap(r1, r2), f = 1;\n\tsplit(root, r2, a, e);\n\tsplit(a, l2 - 1, a, d);\n\tsplit(a, r1, a, c);\n\tsplit(a, l1 - 1, a, b);\n\tif(!f) d = clone(b); else b = clone(d);\n\troot = merge(merge(merge(merge(a, b), c), d), e);\n}\nvoid Swap(int l1, int r1, int l2, int r2)\n{\n\tint a, b, c, d, e;\n\tif(l1 > l2) swap(l1, l2), swap(r1, r2);\n\tsplit(root, r2, a, e);\n\tsplit(a, l2 - 1, a, d);\n\tsplit(a, r1, a, c);\n\tsplit(a, l1 - 1, a, b);\n\troot = merge(merge(merge(merge(a, d), c), b), e);\n}\nvoid ldr(int now)\n{\n\tpushdown(now);\n\tif(l(now)) ldr(l(now));\n\ta[++top] = t[now].val;\n\tif(r(now)) ldr(r(now));\n}\nint main()\n{\n\tsrand((unsigned)time(0)); srand(rand());\n\tread(n); read(m);\n\tfor(int i = 1; i <= n; ++ i) read(a[i]);\n\troot = build(1, n);\n\tfor(int i = 1, opt, l1, r1, l2, r2, val; i <= n; ++ i)\n\t{\n\t\tread(opt); read(l1); read(r1); l1 ^= last; r1 ^= last;\n\t\tswitch(opt)\n\t\t{\n\t\t\tcase 1: write(last = Query(l1, r1), '\\n'); break;\n\t\t\tcase 2: read(val); val ^= last; Cover(l1, r1, val); break;\n\t\t\tcase 3: read(val); val ^= last; Change(l1, r1, val); break;\n\t\t\tcase 4: read(l2); read(r2); l2 ^= last; r2 ^= last; Copy(l1, r1, l2, r2); break;\n\t\t\tcase 5: read(l2); read(r2); l2 ^= last; r2 ^= last; Swap(l1, r1, l2, r2); break;\n\t\t\tcase 6: Reverse(l1, r1); break;\n\t\t}\n\t\tif(cnt > 3200000) \n\t\t{\n\t\t\ttop = 0; ldr(root);\n\t\t\troot = cnt = 0;\n\t\t\troot = build(1, n);\n\t\t}\n\t}\n\ttop = 0; ldr(root);// \u8fd9\u91cc\u6ce8\u610f top \u7684\u521d\u59cb\u5316\n\tfor(int i = 1; i <= n; ++ i) write(a[i], ' ');\n\treturn 0;\n}\n```\n",
        "postTime": 1685103942,
        "uid": 765449,
        "name": "wwwjy4612code",
        "ccfLevel": 4,
        "title": "P5586 [P5350] \u5e8f\u5217 (\u52a0\u5f3a\u7248) \u9898\u89e3"
    }
]