[
    {
        "content": "\u6682\u65f6\u8fd8\u6ca1\u6709\u9898\u89e3\u561b\u3002\u3002\u3002\u6765\u4e00\u7bc7\u597d\u4e86\u3002\n\n\u9996\u5148\u7b2ck\u5927\u5e76\u4e0d\u597d\u6c42\uff0c\u4e0d\u5982\u4e8c\u5206\u6389\uff0c\u591a\u7528\u4e00\u4e2alog\u628a\u5b83\u53d8\u6210\u5224\u5b9a\u6027\u95ee\u9898\u3002\n\n\u90a3\u4e48\u8fd9\u6837\uff0c\u52a0\u4e0a\u9898\u76ee\u4e2d\u6c42\u6700\u5c0f\u503c\u7684\u8981\u6c42\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad\uff1a\u662f\u5426\u80fd\u627e\u51fa\u81f3\u5c11n-k+1\u4e2a\u6570\uff0c\u4f7f\u5f97\u8fd9\u4e9b\u6570\u4e0d\u5927\u4e8e\u5f53\u524d\u503c\u4e14\u6ee1\u8db3\u6761\u4ef6\u3002\n\n\u6ce8\u610f\u5230\u6bcf\u884c\u3001\u5217\u6700\u591a\u53d6\u4e00\u4e2a\u6570\uff0c\u56e0\u6b64\u53d6\u4e86\u8fd9\u4e2a\u6570\uff0c\u5c31\u76f8\u5f53\u4e8e\u628a\u6b64\u884c\u548c\u6b64\u5217\u5339\u914d\u5230\u4e00\u8d77\u54af\u3002\n\n\u5982\u6b64\u770b\u6765\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e8c\u5206\u56fe\u5339\u914d\u95ee\u9898\u3002\n\n\u7531\u4e8e\u6bd4\u8f83\u61d2\uff0c\u4e00\u76f4\u6ca1\u6709\u5b66\u4e8c\u5206\u56fe\u5339\u914d\u7684\u7b97\u6cd5\uff0c~~\u53cd\u6b63dinic\u4e5f\u5feb~~\uff0c\u8fd9\u91cc\u7528dinic\u89e3\u51b3\uff0c\u628a\u6bcf\u884c\u548c\u6bcf\u5217\u770b\u505a\u4e00\u4e2a\u70b9\uff1a\n\n#### 1.\u4ece\u6e90\u70b9\u5411\u6bcf\u884c\u8fde\u8fb9\n#### 2.\u4ece\u6bcf\u5217\u5411\u6c47\u70b9\u8fde\u8fb9\n#### 3.\u82e5\u77e9\u9635a\u884cb\u5217\u7684\u6570\u5c0f\u4e8e\u7b49\u4e8e\u4e8c\u5206\u4e2d\u70b9\uff0c\u5219\u7531a\u884c\u5411b\u5217\u8fde\u8fb9\n\n\u8dd1\u6700\u5927\u6d41\u5224\u5b9a\u5373\u53ef\uff0c\u6700\u540e\u4e8c\u5206\u51fa\u591a\u5c11\u5c31\u662f\u591a\u5c11\u54af~\n\n```cpp\n// luogu-judger-enable-o2\n#include <bits/stdc++.h>\nusing namespace std;\n#define maxn 550\n#define inf 1000000007\nstruct edge{\n\tint ti;\n\tint wi;\n\tint ri;\n};\nint m,n;\nqueue <int> q;\nvector <edge> ed[maxn];\nint dis[maxn]={0}; \nint s=511,t=512;\nint xx[maxn][maxn]={{0}};\nvoid addedge(int ss,int tt,int ww){\n\tedge ee;\n\tee.ti=tt;ee.wi=ww;ee.ri=ed[tt].size();\n\ted[ss].push_back(ee);\n\tee.ri=ed[ss].size()-1;ee.ti=ss;ee.wi=0;\n\ted[tt].push_back(ee);\n\treturn;\n}\nvoid bfs(){\n    int i,j;\n    for(i=0;i<maxn;i++)\n    dis[i]=inf;\n    \n    dis[s]=0;\n    q.push(s);\n    while(1)\n    {\n        if(q.size()==0) break;\n        i=q.front();\n        q.pop();\n        for(j=0;j<ed[i].size();j++)\n        {\n            if(ed[i][j].wi>0&&dis[i]+1<dis[ed[i][j].ti])\n            {\n                dis[ed[i][j].ti]=dis[i]+1;\n                q.push(ed[i][j].ti);\n            }\n        }\n    }\n}\n\nint find(int x,int low){\n    int i,j,k;\n    int tt,rr,ww;\n    \n    if(x==t||low==0) return low;\n    \n    for(i=0;i<ed[x].size();i++)\n    {\n        tt=ed[x][i].ti;\n        rr=ed[x][i].ri;\n        ww=ed[x][i].wi;\n        if(ww>0&&dis[tt]==dis[x]+1)\n        {\n            j=find(tt,min(ww,low));\n            if(j>0)\n            {\n                ed[x][i].wi-=j;\n                ed[tt][rr].wi+=j;\n                return j;\n            }\n        }\n    }\n    return 0;\n}\nint dinic(){\n    int ans=0,a;\n    while(1)\n    {\n        bfs();\n        if(dis[t]==inf) break;\n        while(a=find(s,inf))\n        ans+=a;\n    }\n    return ans;\n}\nint main(){\n\tint a,b,c,i,j,k;\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tfor(a=1;a<=n;a++)\n\t\tfor(b=1;b<=m;b++)\n\t\t\tscanf(\"%d\",&xx[a][b]);\n\tint l=1,r=inf,mid;\n\twhile(l<r)\n\t{\n\t\tmid=(l+r)/2;\n\t\tfor(i=0;i<maxn;i++) ed[i].clear();\n\t\tfor(a=1;a<=n;a++) addedge(s,a,1);\n\t\tfor(b=1;b<=m;b++) addedge(b+250,t,1);\n\t\tfor(a=1;a<=n;a++)\n\t\t\tfor(b=1;b<=m;b++)\n\t\t\t\tif(xx[a][b]<=mid) addedge(a,b+250,1);\n\t\tif(dinic()>=n-k+1) r=mid;\n\t\telse l=mid+1;\n\t}\n\tprintf(\"%d\\n\",l);\n\treturn 0;\n}\n```",
        "postTime": 1519568512,
        "uid": 24608,
        "name": "winxp_qwq",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4251 \u3010[SCOI2015]\u5c0f\u51f8\u73a9\u77e9\u9635\u3011"
    },
    {
        "content": "## \u9898\u76ee\u5206\u6790\n\n\u6bcf\u884c\u6bcf\u5217\u53ea\u80fd\u9009\u4e00\u4e2a,\u53ef\u4ee5\u60f3\u5230\u4e8c\u5206\u56fe\u7684\u5957\u8def:\u5c06\u884c\u548c\u5217\u8fde\u8fb9.\n\n\u8fd9\u6837\u6765\u8dd1\u4e8c\u5206\u56fe\u5339\u914d,\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u4e00\u884c\u5bf9\u5e94\u4e00\u8fb9.\n\n\u56e0\u4e3a\u8981\u6c42\u51fa\u6700\u5c0f\u7684\u7b2ck\u5927\u503c,\u4e8e\u662f\u60f3\u5230\u4e8c\u5206\u51fa\u4e00\u4e2a\u7b2ck\u5927\u7684\u6570,\u7136\u540e\u5c0f\u4e8e\u8fd9\u4e2a\u6570\u7684\u5c31\u884c\u5411\u5217\u5efa\u8fb9,\u8dd1\u51fa\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d.\n\n\u5982\u679c\u6700\u5927\u5339\u914d\u5927\u4e8en-k,\u5c31\u8bf4\u660e\u8fd9\u4e2a\u6570\u5b57\u8fd8\u53ef\u4ee5\u53d8\u5f97\u518d\u5c0f,\u7f29\u5c0f\u4e8c\u5206\u7684\u8fb9\u754c.\n\n\u6211\u7684\u4ee3\u7801\u5199\u51fa\u6765\u5e38\u6570\u6bd4\u8f83\u5927.\n\n## \u4ee3\u7801\n\n```cpp\n#include \"iostream\"\n#include \"cstdio\"\n#include \"cstring\"\n#include \"cmath\"\n#include \"cstdlib\"\n#include \"cctype\"\n#include \"iomanip\"\n#include \"algorithm\"\n#include \"set\"\n#include \"queue\"\n#include \"map\"\n#include \"stack\"\n#include \"deque\"\n#include \"vector\"\n#include \"time.h\"\n#define lxl long long\n#define R register\n#define INF 0x3f3f3f3f\n#define debug(x) printf(\"debug:%lld\\n\",x)\nconst lxl maxn=255;\nlxl n,m,k,l=1,r=1000000000,mid,ans,EdgeSize;\nlxl a[maxn][maxn],match[maxn*maxn<<1],head[maxn*maxn<<1],flag[maxn*maxn<<1];\nstruct _Edge\n{\n\tlxl next,to;\n}e[maxn*maxn<<2];\ninline lxl read()\n{\n\tchar c=getchar();\n\tlxl f=1,x=0;\n\tfor(;!isdigit(c);c=getchar())(c=='-')&&(f=-1);\n\tfor(;isdigit(c);c=getchar())x=(x<<1)+(x<<3)+(c^48);\n\treturn f*x;\n}\ninline void EdgeAdd(lxl from,lxl to)\n{\n\te[EdgeSize].to=to;\n\te[EdgeSize].next=head[from];\n\thead[from]=EdgeSize++;\n}\ninline bool find(lxl now)\n{\n\tfor(R int i(head[now]),to;~i;i=e[i].next)\n\t{\n\t\tto=e[i].to;\n\t\tif(flag[to])continue;\n\t\tflag[to]=true;\n\t\tif(!match[to]||find(match[to]))\n\t\t{\n\t\t\tmatch[to]=now;\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\ninline lxl Hungery()\n{\n\tlxl cnt=0;\n\tfor(R int i(1);i<=n;++i)\n\t{\n\t\tmemset(flag,false,sizeof flag);\n\t\tif(find(i))++cnt;\n\t}\n\treturn cnt;\n}\ninline void build(lxl limit)\n{\n\tEdgeSize=0;\n\tmemset(head,-1,sizeof head),memset(match,0,sizeof match),memset(e,0,sizeof e);\n\tfor(R int i(1);i<=n;++i)\n\t\tfor(R int j(1);j<=m;++j)\n\t\t\tif(a[i][j]<=limit)EdgeAdd(i,j+n);\n}\ninline bool check()\n{\n\treturn Hungery()>n-k;\n}\nint main(void)\n{\n\tn=read(),m=read(),k=read();\n\tfor(R int i(1);i<=n;++i)\n\t\tfor(R int j(1);j<=m;++j)\n\t\t\ta[i][j]=read();\n\twhile(l<=r)\n\t{\n\t\tmid=(l+r)>>1;\n\t\tbuild(mid);\n\t\tif(check())r=mid-1,ans=mid;\n\t\telse l=mid+1;\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1588471388,
        "uid": 54986,
        "name": "lemir3",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P4251 \u3010[SCOI2015]\u5c0f\u51f8\u73a9\u77e9\u9635\u3011"
    },
    {
        "content": "> \u9898\u610f\uff1a\u7ed9\u51fa\u4e00\u4e2a $n \\times n$ \u7684\u77e9\u9635 $A$\uff0c\u9009\u51fa $n$ \u4e2a\u6570\u4f7f\u5f97\u6bcf\u884c\u6bcf\u5217\u6700\u591a\u9009\u51fa\u4e00\u4e2a\u6570\uff0c\u6c42\u8fd9 $n$ \u4e2a\u6570\u4e2d\u7b2c $k$ **\u5927** \u7684\u6570\u7684\u6700\u5c0f\u503c\u3002\n\n> $1 \\leq n \\leq 250$\uff0c$1 \\leq A_{i,j} \\leq 10^9$ \n\n\u6700\u5927\u6d41\u7684\u57fa\u7840\u9898\n\n\u6b64\u9898\u4e2d\u8bf4\u7b2c $k$ \u5927\u503c\u6700\u5c0f\uff0c\u90a3\u4e48\u80af\u5b9a\u662f\u4e8c\u5206\u4e86\u3002\u4e8c\u5206\u51fa\u4e00\u4e2a $x$ \u51fa\u6765\uff0c\u68c0\u67e5 $x$ \u662f\u5426\u53ef\u4ee5\u4f5c\u4e3a\u7b2c $k$ \u5927\u7684\u503c\uff0c\u7531\u4e8e\u6211\u4eec\u8981\u5c06\u7b2c $k$ \u5927\u503c\u5c3d\u53ef\u80fd\u5f97\u5c0f\uff0c\u56e0\u6b64\u6211\u4eec\u8981\u5c3d\u53ef\u80fd\u591a\u5f97\u53d6\u6bd4 $x$ \u5c0f\u6216\u7b49\u4e8e $x$ \u7684\u6570\uff0c\u68c0\u67e5\u662f\u5426\u6709 $n-k+1$ \u4e2a\u3002\u5982\u679c\u6709\uff0c\u90a3\u4e48\u5c31\u8bf4\u660e $x$ \u53ef\u4ee5\u4f5c\u4e3a\u7b2c $k$ \u5927\u7684\u503c\uff0c\u5426\u5219\u8bf4\u660e $x$ \u4e0d\u80fd\u4f5c\u4e3a\u7b2c $k$ \u5927\u7684\u503c\u3002\n\n\u90a3\u4e48\u600e\u4e48\u6c42\u6700\u591a\u80fd\u53d6\u591a\u5c11\u4e2a $\\leq x$ \u7684\u6570\u5462\uff1f\u7f51\u7edc\u6d41\u554a\uff01\u6211\u4eec\u5c06\u6240\u6709 $\\leq x$ \u7684\u6570\u8d4b\u4e0a $1$\uff0c\u5c06\u6240\u6709 $>x$ \u7684\u6570\u8d4b\u4e0a $0$\u3002\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u884c\u5217\u5316\u70b9\uff0c\u70b9\u5316\u8fb9\uff08\u5982\u679c\u4e0d\u77e5\u9053\u8fd9\u4e2a\u6280\u5de7\u7684\u51fa\u95e8\u53f3\u8f6c CF217A\uff09\uff0c\u4ee5\u884c\u548c\u5217\u5efa\u4e00\u5f20\u4e8c\u5206\u56fe\u3002\u5bf9\u4e8e\u77e9\u9635\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20 $(i,j)$\uff0c\u8fde\u4e00\u6761\u4ece\u7b2c $i$ \u884c\u5230\u7b2c $j$ \u5217\uff0c\u5bb9\u91cf\u4e3a $a_{i,j}$ \u6240\u8d4b\u4e0a\u7684\u503c\u7684\u8fb9\u3002\u5982\u679c\u8fd9\u6761\u8fb9\u901a\u8fc7\u53bb\u7684\u6d41\u91cf\u4e3a $1$\uff0c\u90a3\u4e48\u8bf4\u660e $a_{i,j} \\leq x$ \u5e76\u4e14\u6211\u4eec\u9009\u4e86 $a_{i,j}$\uff0c\u5426\u5219\uff0c\u8bf4\u660e $a_{i,j}>x$ \u6216\u8005\u6211\u4eec\u6ca1\u6709\u9009\u62e9 $a_{i,j}$\u3002\u5bf9\u4e8e\u77e9\u9635\u4e2d\u7684\u6bcf\u4e00\u884c $i$\uff0c\u5efa\u4e00\u6761\u4ece\u6e90\u70b9 $S$ \u5230\u7b2c $i$ \u884c\u7684\u8fb9\uff0c\u5bb9\u91cf\u4e3a $1$\u3002\u5bf9\u4e8e\u77e9\u9635\u4e2d\u70b9\u6bcf\u4e00\u5217 $j$\uff0c\u5efa\u4e00\u6761\u4ece\u7b2c $j$ \u5217\u5230\u6c47\u70b9 $T$ \u7684\u8fb9\uff0c\u5bb9\u91cf\u4e3a $1$\uff0c\u7136\u540e\u8dd1\u6700\u5927\u6d41\u5c31\u662f\u6700\u591a\u80fd\u53d6\u51fa $\\leq x$ \u7684\u6570\u7684\u4e2a\u6570\u3002\n\n```cpp\n/*\n\u6570\u636e\u4e0d\u6e05\u7a7a\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u591a\u6d4b\u4e0d\u8bfb\u5b8c\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u8fb9\u754c\u4e0d\u7279\u5224\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u8d2a\u5fc3\u4e0d\u8bc1\u660e\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\nD P \u987a\u5e8f\u9519\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u5927\u5c0f\u5c11\u7b49\u53f7\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u53d8\u91cf\u4e0d\u7edf\u4e00\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u8d8a\u754c\u4e0d\u5224\u65ad\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u8c03\u8bd5\u4e0d\u6ce8\u91ca\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u6ea2\u51fa\u4e0d l l\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n#define fi\t\t\tfirst\n#define se\t\t\tsecond\n#define fz(i,a,b)\tfor(int i=a;i<=b;i++)\n#define fd(i,a,b)\tfor(int i=a;i>=b;i--)\n#define put(x)\t\tputchar(x)\n#define eoln        put('\\n')\n#define space\t\tput(' ')\ninline int read(){\n\tint x=0,neg=1;char c=getchar();\n\twhile(!isdigit(c)){\n\t\tif(c=='-')\tneg=-1;\n\t\tc=getchar();\n\t}\n\twhile(isdigit(c))\tx=x*10+c-'0',c=getchar();\n\treturn x*neg;\n}\ninline void print(int x){\n\tif(x<0){\n\t\tputchar('-');\n\t\tprint(abs(x));\n\t\treturn;\n\t}\n\tif(x<=9)\tputchar(x+'0');\n\telse{\n\t\tprint(x/10);\n\t\tputchar(x%10+'0');\n\t}\n}\nint n=read(),m=read(),k=read();\nint a[255][255],s[255][255];\nint head[100005];\nstruct edge{\n\tint to,nxt,cap;\n} e[2000005];\nint ecnt=1;\ninline void addedge(int u,int v,int f){\n\te[++ecnt].to=v;e[ecnt].cap=f;e[ecnt].nxt=head[u];head[u]=ecnt;\n}\nint dep[100005];\ninline bool bfs(int s,int t){\n\tqueue<int> q;\n\tmemset(dep,-1,sizeof(dep));\n\tq.push(s);dep[s]=0;\n\twhile(!q.empty()){\n\t\tint cur=q.front();q.pop();\n\t\tfor(int i=head[cur];i;i=e[i].nxt){\n\t\t\tint to=e[i].to;\n\t\t\tif(dep[to]==-1&&e[i].cap){\n\t\t\t\tdep[to]=dep[cur]+1;\n\t\t\t\tq.push(to);\n\t\t\t}\n\t\t}\n\t}\n\tif(dep[t]!=-1)\treturn 1;\n\treturn 0;\n}\ninline int dfs(int x,int t,int f){\n\tif(x==t)\treturn f;\n\tint ret=0;\n\tfor(int i=head[x];i;i=e[i].nxt){\n\t\tint y=e[i].to;\n\t\tif(dep[y]==dep[x]+1&&e[i].cap){\n\t\t\tint w=dfs(y,t,min(f-ret,e[i].cap));\n\t\t\te[i].cap-=w;\n\t\t\te[i^1].cap+=w;\n\t\t\tret+=w;\n\t\t\tif(ret==f)\treturn f;\n\t\t}\n\t}\n\tif(ret==0)\tdep[x]=-1;\n\treturn ret;\n}\ninline int Dinic(int s,int t){\n\tint tot=0;\n\twhile(bfs(s,t))\ttot+=dfs(s,t,0x3f3f3f3f);\n\treturn tot;\n}\ninline bool check(int mid){\n\tint cnt=0;\n\tfz(i,1,n)\tfz(j,1,m)\ts[i][j]=(a[i][j]<=mid);\n\tecnt=1;\n\tmemset(head,0,sizeof(head));\n\tfz(i,1,n){\n\t\tfz(j,1,m){\n\t\t\taddedge(i,j+n,s[i][j]);\n\t\t\taddedge(j+n,i,0);\n\t\t}\n\t}\n\tfz(i,1,n){\n\t\taddedge(0,i,1);\n\t\taddedge(i,0,0);\n\t}\n\tfz(i,1,m){\n\t\taddedge(i+n,1+n+m,1);\n\t\taddedge(1+n+m,i+n,0);\n\t}\n\tint t=Dinic(0,n+m+1);\n\treturn t>=(n-k+1);\n}\nint key[100005],cnt,hs[100005],cnt2;\nint main(){\n\tfz(i,1,n)\tfz(j,1,m){\n\t\ta[i][j]=read();\n\t\tkey[++cnt]=a[i][j];\n\t}\n\tsort(key+1,key+cnt+1);\n\tfz(i,1,cnt)\tif(key[i]!=key[i-1])\ths[++cnt2]=key[i];\n\tfz(i,1,n)\tfz(j,1,m)\ta[i][j]=lower_bound(hs+1,hs+cnt2+1,a[i][j])-hs;\n//\tcout<<check(1169)<<endl;\n//\tcout<<check(1170)<<endl;\n\tint l=0,r=cnt2,ans=0;\n\twhile(l<=r){\n\t\tint mid=(l+r)>>1;\n\t\tif(check(mid))\tans=mid,r=mid-1;\n\t\telse\t\t\tl=mid+1;\n\t}\n\tcout<<hs[ans]<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1583406000,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4251 \u3010[SCOI2015]\u5c0f\u51f8\u73a9\u77e9\u9635\u3011"
    },
    {
        "content": "# \u9898\u610f\n\u5728 $n \\times m$ \u7684\u77e9\u9635\u4e2d\u53d6\u51fa $n$ \u4e2a\u4e0d\u540c\u884c\u4e14\u4e0d\u540c\u5217\u7684\u6570\uff0c\u6c42\u53d6\u51fa\u7684 $n$ \u4e2a\u6570\u4e2d\u7b2c $k$ \u5927\u7684\u6700\u5c0f\u503c\u3002\n# \u9898\u89e3\n\u5bf9\u4e8e\u9898\u9762\u4e2d\u7684 \u7b2c $k$ \u5927\u503c\u6700\u5c0f \uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\u4e8c\u5206\u7b54\u6848\u6c42 \u6700\u5927\u503c\u6700\u5c0f/\u6700\u5c0f\u503c\u6700\u5927 \u95ee\u9898\uff0c\u5c06\u9898\u76ee\u8f6c\u6362\u6210\u5224\u5b9a\u6027\u95ee\u9898\u3002\u90a3\u4e48\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u9700\u8981\u505a\u7684\u5c31\u662f\u5224\u65ad\u662f\u5426\u80fd\u5b58\u5728\u7b2c $k$ \u5927\uff0c\u4e5f\u5c31\u662f\u5224\u65ad\u80fd\u4e0d\u80fd\u53d6\u51fa $n-k+1$ \u4e2a $<=mid$ \u7684\u6570\u3002\n\n\u5efa\u56fe\uff1a  \n\u5bf9\u4e8e\u6bcf\u4e00\u884c\uff0c$S \\to i$ \u8fde\u8fb9\uff1b  \n\u5bf9\u4e8e\u6bcf\u4e00\u5217\uff0c$j+n \\to T$ \u8fde\u8fb9\uff1b  \n\u4e8c\u5206\u4e00\u4e2a $mid$ \uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a $a[i][j]$ \uff0c\u5982\u679c $a[i][j]<=mid$ \uff0c$i\\to j+n$ \u8fde\u8fb9\u3002   \n\u8dd1\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\uff0c\u5982\u679c\u5339\u914d\u6570 $>=n-k+1$\uff0c\u90a3\u4e48 $r=mid-1$\uff0c\u5426\u5219 $l=mid+1$\u3002  \n\u8fd9\u6837\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u884c\u548c\u6bcf\u4e00\u5217\u53ea\u80fd\u9009\u62e9\u6700\u591a\u4e00\u6b21\uff0c\u4e14\u6ee1\u8db3\u9009\u51fa\u7684\u6570\u4e0d\u540c\u884c\u4e14\u4e0d\u540c\u5217\u3002\n# \u4ee3\u7801  \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\n#define N 1005\n\nint n,m,K;\nint a[255][255];\n\ninline int read() {\n    int tmp=0,w=1;\n    char ch=0;\n    while(!isdigit(ch)) {if(ch=='-') w=-1;ch=getchar();}\n    while(isdigit(ch)) tmp=(tmp<<1)+(tmp<<3)+ch-'0',ch=getchar();\n    return tmp*w;\n}\n\nstruct node {\n    int v,nex;\n}e[N*N];\nint tot,h[N];\nvoid add(int u,int v) {\n    e[++tot].v=v,e[tot].nex=h[u],h[u]=tot;\n}\n\nbool vis[N];\nint match[N];\nbool find(int x) {\n    int xx;\n    for(int i=h[x];i;i=e[i].nex) {\n        xx=e[i].v;\n        if(!vis[xx]) {\n            vis[xx]=1;\n            if(!match[xx]||find(match[xx])) {\n                match[xx]=x;\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n\nbool pd(int mid) {\n    memset(h,0,sizeof(h)),tot=1;\n    memset(match,0,sizeof(match));\n    for(int i=1;i<=n;++i) {\n        for(int j=1;j<=m;++j) {\n            if(a[i][j]<=mid) add(i,j+n);\n        }\n    }\n    int res=0;\n    for(int i=1;i<=n;++i) {\n        memset(vis,0,sizeof(vis));\n        res+=find(i);\n    }\n    return res>=n-K+1;\n}\nint maxx=-1e9,minn=1e9;\nvoid Bsearch() {\n    int l=minn,r=maxx,mid,ans;\n    while(l<=r) {\n        mid=(l+r)>>1;\n        if(pd(mid)) r=mid-1,ans=mid;\n        else l=mid+1;\n    }\n    printf(\"%d\\n\",ans);\n}\n\nint main()\n{\n    n=read(),m=read(),K=read();\n    for(int i=1;i<=n;++i) {\n        for(int j=1;j<=m;++j) {\n            a[i][j]=read();\n            maxx=max(maxx,a[i][j]);\n            minn=min(minn,a[i][j]);\n        }\n    }\n    Bsearch();\n    return 0;\n} \n```",
        "postTime": 1522623047,
        "uid": 36728,
        "name": "\u96e8\u5b63",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4251 \u3010[SCOI2015]\u5c0f\u51f8\u73a9\u77e9\u9635\u3011"
    },
    {
        "content": "# P4251\u9898\u89e3\r\n\u5206\u6790\uff1a\r\n\r\n\u8fd9\u9053\u9898\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u7b54\u6848\u548c\u4e8c\u5206\u56fe\u5339\u914d\u89e3\u51b3\u3002\r\n\r\n\u7531\u4e8e\u6bcf\u884c\u6bcf\u5217\u53ea\u80fd\u9009\u4e00\u4e2a\uff0c\u53ef\u4ee5\u60f3\u5230\u4e8c\u5206\u56fe\u7684\u5957\u8def\uff0c\u4e5f\u5c31\u662f\u5c06\u884c\u548c\u5217\u8fde\u8fb9\u3002\r\n\r\n\u8fd9\u6837\u6765\u8dd1\u4e8c\u5206\u56fe\u5339\u914d\uff0c\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u4e00\u884c\u5bf9\u5e94\u4e00\u8fb9\u3002\r\n\r\n\u56e0\u4e3a\u8981\u6c42\u51fa\u6700\u5c0f\u7684\u7b2c $k$ \u5927\u503c\uff0c\u4e8e\u662f\u60f3\u5230\u4e8c\u5206\u51fa\u4e00\u4e2a\u7b2c $k$ \u5927\u7684\u6570\uff0c\u7136\u540e\u5c0f\u4e8e\u8fd9\u4e2a\u6570\u7684\u5c31\u884c\u5411\u5217\u5efa\u8fb9\uff0c\u8dd1\u51fa\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u3002\r\n\r\n\u5982\u679c\u6700\u5927\u5339\u914d\u5927\u4e8e $n-k$\uff0c\u5c31\u8bf4\u660e\u8fd9\u4e2a\u6570\u5b57\u8fd8\u53ef\u4ee5\u53d8\u5f97\u518d\u5c0f\uff0c\u7f29\u5c0f\u4e8c\u5206\u7684\u8fb9\u754c\u3002\r\n\r\n# code\r\n```cpp\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long\r\nll n,m,k;\r\nll mapp[309][309],maxn=-1,head[309],last[90009],to[90009],tot=1,l,r;\r\nll ans,match[309],vis[309];\r\nvoid init()\r\n{\r\n\tmemset(last,0,sizeof(last));\r\n\tmemset(head,0,sizeof(head));\r\n\tmemset(to,0,sizeof(to));\r\n}\r\nvoid add(ll x,ll y)//\u52a0\u8fb9 \r\n{\r\n\ttot++;\r\n\tto[tot]=y;\r\n\tlast[tot]=head[x];\r\n\thead[x]=tot;\r\n}\r\n\r\nbool path(ll u)\r\n{\r\n\tfor(ll i=head[u];i!=0;i=last[i])//\u4e8c\u5206\u56fe\u5339\u914d\u6a21\u677f \r\n\t{\r\n\t\tll v=to[i];\r\n\t\tif(vis[v]==1)\r\n\t\t\tcontinue;\r\n\t\tvis[v]=1;\r\n\t\tif(match[v]==-1||path(match[v])==true)\r\n\t\t{\r\n\t\t\tmatch[v]=u;\r\n\t\t\treturn true; \r\n\t\t}\r\n\t}\r\n\treturn false;\r\n}\r\nvoid slove()\r\n{\r\n\tans=0;\r\n\tmemset(match,-1,sizeof(match));//match\u6570\u7ec4\u8868\u793a\u5339\u914d\u91cf \r\n\tfor(ll i=1;i<=n;i++)\r\n\t{\r\n\t\tmemset(vis,0,sizeof(vis));\r\n\t\tif(path(i)==true)\r\n\t\t{\r\n\t\t\tans++;\r\n\t\t}\r\n\t}\r\n}\r\nint main()                    \r\n{\r\n\tcin>>n>>m>>k;\r\n\tfor(ll i=1;i<=n;i++)\r\n\t{\r\n\t\tfor(ll j=1;j<=m;j++)\r\n\t\t{\r\n\t\t\tcin>>mapp[i][j];\r\n\t\t\tmaxn=max(maxn,mapp[i][j]);//maxn\u8868\u793a\u77e9\u9635\u6700\u5927\u503c \r\n\t\t}\r\n\t}\r\n\tl=0,r=maxn;\r\n\twhile(l<=r)//\u4e8c\u5206\u6c42\u503c \r\n\t{\r\n\t\tinit(); //\u4e00\u5b9a\u8981\u521d\u59cb\u5316\uff01\uff01\uff01 \r\n\t\tll mid=(l+r)/2;\r\n\t\tfor(ll i=1;i<=n;i++)\r\n\t\t{\r\n\t\t\tfor(ll j=1;j<=m;j++)\r\n\t\t\t{\r\n\t\t\t\tif(mapp[i][j]<mid)\r\n\t\t\t\t{\r\n\t\t\t\t\tadd(i,j);//\u82e5\u5f53\u524d\u8fb9\u7684\u6743\u503c\u6bd4\u4e8c\u5206\u7684\u6570\u8981\u5c0f\uff0c\u52a0\u8fb9 \r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t } \r\n\t\t slove(); //\u4e8c\u5206\u56fe\u5339\u914d \r\n\t\t if(ans>n-k)//\u5982\u601d\u8def\uff0c\u6539\u53d8l\u548cr\u7684\u503c \r\n\t\t {\r\n\t\t \tr=mid-1;\r\n\t\t }\r\n\t\t else\r\n\t\t {\r\n\t\t \tl=mid+1;\r\n\t\t }\r\n\t}\r\n\tcout<<r;//\u8f93\u51fa \r\n\treturn 0;\r\n } \r\n```\r\n",
        "postTime": 1673943695,
        "uid": 368346,
        "name": "\u5c0f\u660e\u5c0f\u7ea2",
        "ccfLevel": 5,
        "title": "P4251\u9898\u89e3"
    },
    {
        "content": "\u4e8c\u5206\u7b54\u6848+\u4e8c\u5206\u56fe\u5339\u914d\uff08\u679c\u7136\u6211\u662f\u4e0d\u4f1a\u5199\u7f51\u7edc\u6d41\u7684\u849f\u84bb\uff09\n\n\u4e8c\u5206\u7b2ck\u5927\u7684\u503c\u662f\u591a\u5c11$(mid)$\uff0c\u5982\u679c\u6700\u5927\u8fb9\u4e0d\u8d85\u8fc7$mid$\u7684**\u6700\u5927\u5339\u914d**\u6ee1\u8db3 $\\le n-k+1$ \u5219\u4e3a\u5408\u6cd5\u7b54\u6848\n\n\u3010\u4ee3\u7801\u3011\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,k,ans;\nint mp[255][255];\nint vis[255],lin[255],tot;\ninline bool dfs(int u,int lim){\n    for(int i=1;i<=m;++i)\n       if(mp[u][i]<=lim&&vis[i]!=tot){\n       \t  vis[i]=tot;\n       \t  if(!lin[i]||dfs(lin[i],lim))\n       \t    return lin[i]=u,true;\n       }\n    return false;\n}\ninline int check(int x){\n    memset(vis,0,sizeof(vis));\n    memset(lin,0,sizeof(lin));\n    tot=1,ans=0;\n    for(int i=1;i<=n;++i,++tot)\n       ans+=dfs(i,x);\n    return ans;\n}\nint main()\n{\n     scanf(\"%d%d%d\",&n,&m,&k);\n     k=n-k+1;\n     int lim=-1;\n     for(int i=1;i<=n;++i)\n        for(int j=1;j<=m;++j){\n        \tscanf(\"%d\",&mp[i][j]);\n        \tlim=max(lim,mp[i][j]);\n        }\n     int mid,l=1,r=lim;\n     while(l<r){\n     \tmid=(l+r)/2;\n     \tif(check(mid)>=k) r=mid;\n     \telse l=mid+1;\n     }\n     printf(\"%d\",l);\n     return 0;\n}\n```",
        "postTime": 1539910490,
        "uid": 64488,
        "name": "huangdu233",
        "ccfLevel": 0,
        "title": "luogu P4251 [SCOI2015]\u5c0f\u51f8\u73a9\u77e9\u9635"
    },
    {
        "content": "# [[SCOI2015]\u5c0f\u51f8\u73a9\u77e9\u9635](https://www.luogu.com.cn/problem/P4251)\n\n## \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a ${n}\\times{m}$ \u7684\u77e9\u9635\uff0c\u77e9\u9635\u7b2c $i$ \u884c\u7b2c $j$ \u5217\u7684\u6743\u503c\u4e3a $a_{i,j}$\u3002\u73b0\u5728\u8981\u6c42\u4ece\u77e9\u9635\u4e2d\u9009\u51fa $n$ \u4e2a\u6570\uff0c\u6bcf\u884c\u6bcf\u5217\u53ea\u80fd\u9009\u62e9\u4e00\u4e2a\u6570\uff0c\u8be2\u95ee**\u7b2c $k$ \u5927\u503c**\u7684**\u6700\u5c0f\u503c**\u662f\u591a\u5c11\uff1f\n\n## \u601d\u8def\n\n\u5bf9\u4e8e\u7c7b\u4f3c\u4e8e**\u6700X\u503c\u6700X**\u8fd9\u7c7b\u8bed\u6c14\u7684\u95ee\u9898\uff0c\u4e00\u822c\u90fd\u4f1a\u7528\u5230\u4e8c\u5206\uff1b\u7136\u540e\u5bf9\u4e8e**\u9650\u5236\u6bcf\u884c\u6bcf\u5217\u9009\u62e9**\u7684\u95ee\u9898\uff0c\u672c\u8d28\u4e0a\u5c31\u662f**\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d**\uff0c\u53ef\u4ee5\u4f7f\u7528**\u7f51\u7edc\u6700\u5927\u6d41**\u6216\u8005**\u5308\u7259\u5229\u7b97\u6cd5**\u89e3\u51b3\u3002\u81f3\u6b64\uff0c\u8fd9\u9053\u9898\u76ee\u7684\u7b97\u6cd5\u5c31\u663e\u7136\u4e86\uff1a\n\n- \u4e8c\u5206\u7b54\u6848\n- \u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\n\n### \u4e8c\u5206\u7b54\u6848\n\n\u8003\u8651\u5982\u4f55\u6c42**\u7b2c $k$ \u5927\u503c**\u7684**\u6700\u5c0f\u503c**\uff0c\u6709\u4e24\u79cd\u4e8c\u5206\u65b9\u6cd5\uff0c\u4f46\u662f\u672c\u8d28\u4e0a\u662f\u4e00\u6837\u7684\uff1a\n\n- \u4e8c\u5206\u7b54\u6848\u7684\u4f4d\u7f6e\n- \u4e8c\u5206\u7b54\u6848\u7684\u6743\u503c\n\n\u524d\u8005\uff1a\u5148\u5c06\u77e9\u9635\u4e2d\u6240\u6709\u7684\u6743\u503c**\u53bb\u91cd\u4ece\u5c0f\u5230\u5927**\u6392\u5e8f\uff0c\u4f7f\u6ee1\u8db3\u5355\u8c03\u6027\uff0c\u7136\u540e\u4e8c\u5206\u7b54\u6848\u6240\u5904\u7684\u4f4d\u7f6e\uff1b\n\n\u540e\u8005\uff1a\u5bf9\u77e9\u9635\u4e2d\u6240\u6709\u7684\u6743\u503c\u53d6 $\\max$\uff0c\u7136\u540e\u4e8c\u5206\u503c\u57df\u5bfb\u627e\u7b54\u6848\u3002\n\n\u6700\u540e\u5c31\u662f\u68c0\u67e5\u7b54\u6848 $mid$ \u7684\u5408\u6cd5\u6027\uff1a**\u5224\u65ad\u662f\u5426\u5b58\u5728\u4e00\u79cd\u5408\u6cd5\u7684\u65b9\u6848\u6ee1\u8db3\u4e0d\u5927\u4e8e $mid$ \u7684\u5143\u7d20\u6709 $n-k+1$ \u4e2a**\u3002\u82e5\u6ee1\u8db3\uff0c\u51cf\u5c0f\u53f3\u8fb9\u754c $r$\uff1b\u5426\u5219\uff0c\u589e\u5927\u5de6\u8fb9\u754c $l$\u3002\n\n### \u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\n\n\u8003\u8651\u5982\u4f55\u6c42\u51fa\u662f\u5426\u5b58\u5728\u5408\u6cd5\u65b9\u6848\uff0c\u94a6\u5b9a\u5bf9\u4e8e\u5f53\u524d\u7684\u7b54\u6848\u4e3a $mid$\uff0c\u5bf9\u4e8e\u6ee1\u8db3 $a_{i,j}\\leqslant mid$ \u6761\u4ef6\u7684\uff0c\u4ece $i$ \u5411 $j$ \u8fde\u8fb9\uff0c\u6700\u540e\u6c42\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u6570\u4e0e $n-k+1$ \u8fdb\u884c\u6bd4\u8f83\u3002\n\n\u6b64\u5904\u91c7\u7528\u7f51\u7edc\u6d41\u7b97\u6cd5\uff0c\u8bf4\u660e\u4e00\u4e0b\u5efa\u8fb9\uff1a\n\n- \u6e90\u70b9 $S$ \u5411\u6bcf\u884c\u8fde\u8fb9\u3002\n- \u6bcf\u5217\u5411\u6c47\u70b9 $T$ \u8fde\u8fb9\u3002\n- \u6ee1\u8db3 $a_{i,j}\\leqslant mid$ \u6761\u4ef6\u7684\uff0c\u4ece\u884c $i$ \u5411\u5217 $j$ \u8fde\u8fb9\u3002\n\n### \u603b\u7ed3\n\n\u4e8c\u5206\u7b54\u6848\uff0c\u7136\u540e\u5224\u65ad\u662f\u5426\u5b58\u5728\u4e00\u79cd\u65b9\u6848\u6ee1\u8db3\u4e0d\u5927\u4e8e $mid$ \u7684\u6570\u6709 $n-k+1$ \u4e2a\uff0c\u5224\u65ad\u5c31\u662f\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u6570\u3002\n\n## Code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 250 + 5;\nconst int M = N * N + 2 * N;\nconst int s = 2 * N - 1;\nconst int t = 2 * N - 2;\nnamespace IO{}\nusing namespace IO;\nnamespace netflow\n{\n    struct edge\n    {\n        int u, v, w;\n        int nxt;\n        edge (int u = 0, int v = 0, int w = 0, int nxt = 0) : u(u), v(v), w(w), nxt(nxt) {}\n    };\n    edge e[M << 1];\n    int head[N << 1];\n    int cur[N << 1];\n    int dep[N << 1];\n    int ecnt;\n    inline void add(int u, int v, int w)\n    {\n        e[++ecnt] = edge (u, v, w, head[u]); head[u] = ecnt;\n        e[++ecnt] = edge (v, u, 0, head[v]); head[v] = ecnt;\n    }\n    inline bool bfs()\n    {\n        memset(dep, 0x00, sizeof(dep));\n        memcpy(cur, head, sizeof(cur));\n        queue<int> q; q.push(s), dep[s] = 1;\n        while (!q.empty())\n        {\n            int u = q.front();\n            q.pop();\n            for (int i = head[u], v; i && (v = e[i].v); i = e[i].nxt)\n            {\n                if (!dep[v] && e[i].w)\n                {\n                    dep[v] = dep[u] + 1;\n                    q.push(v);\n                }\n            }\n        }\n        return dep[t];\n    }\n    inline int dfs(int u, int flow)\n    {\n        if (u == t) return flow;\n        int rest = flow;\n        for (int i = cur[u], v; i && (v = e[i].v); i = e[i].nxt)\n        {\n            cur[u] = i;\n            if (dep[v] == dep[u] + 1 && e[i].w)\n            {\n                int k = dfs(v, min(e[i].w ,rest));\n                e[i].w -= k;\n                e[i ^ 1].w += k;\n                rest -= k;\n                if (!rest) break;\n            }\n        }\n        return flow - rest;\n    }\n    inline int dinic()\n    {\n        int ans(0);\n        while (bfs())\n            ans += dfs(s, 2e9);\n        return ans;\n    }\n    inline void clear()\n    {\n        ecnt = 1;\n        memset(head, 0, sizeof(head));\n    }\n}\nusing namespace netflow;\nint n, m, k;\nint a[N][N];\nint b[N * N];\nint calc(int x)\n{\n    clear();\n    for (int i = 1; i <= n; i++)\n        add(s, i, 1);\n    for (int i = 1; i <= m; i++)\n        add(n + i, t, 1);\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= m; j++)\n            if (a[i][j] <= x)\n                add(i, n + j, 1);\n    return dinic();\n}\nsigned main()\n{\n    int cnt(0);\n    read(n, m, k);\n    for (int i = 1; i <= n; i++)\n    {\n        for (int j = 1; j <= m; j++)\n        {\n            read(a[i][j]);\n            b[++cnt] = a[i][j];\n        }\n    }\n    sort(b + 1, b + cnt + 1);\n    int l = 1, r = unique(b + 1, b + cnt + 1) - b - 1, ans(0);\n    while (l <= r)\n    {\n        int mid = (l + r) >> 1;\n        if (calc(b[mid]) >= n - k + 1) ans = b[mid], r = mid - 1;\n        else l = mid + 1;\n    }\n    write(ans);\n    return 0;\n}\n```",
        "postTime": 1672108809,
        "uid": 239163,
        "name": "MarchKid_Joe",
        "ccfLevel": 6,
        "title": "P4251 [SCOI2015]\u5c0f\u51f8\u73a9\u77e9\u9635 \u9898\u89e3"
    },
    {
        "content": "upd\uff1a\u4fee\u6539\u4e00\u5904\u7b14\u8bef\u3002\n\n# \u9898\u76ee\u5927\u610f\n\n\u5c0f\u51f8\u548c\u5c0f\u65b9\u662f\u597d\u670b\u53cb\uff0c\u5c0f\u65b9\u7ed9\u4e86\u5c0f\u51f8\u4e00\u4e2a $n\\times m$ $(n \\leq m)$ \u7684\u77e9\u9635 $A$\uff0c\u5e76\u4e14\u8981\u6c42\u5c0f\u51f8\u4ece\u77e9\u9635\u4e2d\u9009\u51fa $n$ \u4e2a\u6570\uff0c\u5176\u4e2d\u4efb\u610f\u4e24\u4e2a\u6570\u90fd\u4e0d\u80fd\u5728\u540c\u4e00\u884c\u6216\u8005\u540c\u4e00\u5217\u3002\u73b0\u5728\u5c0f\u51f8\u60f3\u77e5\u9053\uff0c\u9009\u51fa\u7684 $n$ \u4e2a\u6570\u4e2d\u7b2c $k$ \u5927\u7684\u6570\u7684\u6700\u5c0f\u503c\u662f\u591a\u5c11\u3002\n\n# \u9898\u76ee\u5206\u6790\n\n\u5165\u95e8\u9898\u3002\n\n\u6c42\u7b2c $k$ \u5927\u4e0d\u5bb9\u6613\uff0c\u4e0d\u59a8\u4e8c\u5206\u7b54\u6848 $mid$ \u80fd\u5426\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u60c5\u51b5\u4e0b\u4f5c\u4e3a\u7b2c $k$ \u5927\uff0c\u5373\u80fd\u5426\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u60c5\u51b5\u4e0b\u627e\u5230 $n-k+1$ \u4e2a\u5c0f\u4e8e\u7b49\u4e8e $mid$ \u7684\u6570\u3002\n\n\u7136\u540e\u6c42\u6ee1\u8db3\u60c5\u51b5\u6761\u4ef6\u4e0b\u6700\u591a\u80fd\u627e\u5230\u591a\u5c11\u4e2a\u6570\u5c31\u662f\u7ecf\u5178\u7684\u201c\u8eca\u7684\u653e\u7f6e\u201d\u95ee\u9898\uff0c\u4e5f\u5c31\u662f\u6bcf\u884c\u6bcf\u5217\u53ea\u80fd\u51fa\u73b0\u4e00\u4e2a\u6570\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002\u627e\u5230\u6240\u6709\u4e0d\u8d85\u8fc7 $mid$ \u7684\u6570\uff0c\u5c06\u5b83\u7684\u884c\u3001\u5217\u5750\u6807\u8fde\u8fb9\uff0c\u8dd1\u5308\u7259\u5229\u7b97\u6cd5\u6c42\u51fa\u6700\u5927\u5339\u914d\u5373\u53ef\u3002\n\n-----\n\n\u4e8c\u5206\u7b54\u6848\uff0c\u628a\u77e9\u9635 $A$ \u6240\u6709\u503c\u4f7f\u7528\u4e8c\u5411\u7b94\u964d\u7ef4\u6253\u51fb\u5e76\u6392\u5e8f\uff0c\u7136\u540e\u4e8c\u5206\u3002\u7b54\u6848\u663e\u7136\u6ee1\u8db3\u5355\u8c03\u6027\u3002\n\n# \u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <climits>//need \"INT_MAX\",\"INT_MIN\"\n#include <cstring>//need \"memset\"\n#include <numeric>\n#include <algorithm>\n#include <cmath>\n#define enter putchar(10)\n#define debug(c,que) std::cerr << #c << \" = \" << c << que\n#define cek(c) puts(c)\n#define blow(arr,st,ed,w) for(register int i = (st);i <= (ed); ++ i) std::cout << arr[i] << w;\n#define speed_up() std::ios::sync_with_stdio(false),std::cin.tie(0),std::cout.tie(0)\n#define mst(a,k) memset(a,k,sizeof(a))\n#define stop return(0)\nconst int mod = 1e9 + 7;\ninline int MOD(int x) {\n\tif(x < 0) x += mod;\n\treturn x % mod;\n}\nnamespace Newstd {\n\tchar buf[1 << 21],*p1 = buf,*p2 = buf;\n\tinline int getc() {\n\t\treturn p1 == p2 && (p2 = (p1 = buf) + fread(buf,1,1 << 21,stdin),p1 == p2) ? EOF : *p1 ++;\n\t}\n\t#ifndef ONLINE_JUDGE\n\t#define getc getchar\n\t#endif\n\tinline int read() {\n\t\tint ret = 0,f = 0;char ch = getc();\n\t\twhile (!isdigit(ch)) {\n\t\t\tif(ch == '-') f = 1;\n\t\t\tch = getc();\n\t\t}\n\t\twhile (isdigit(ch)) {\n\t\t\tret = (ret << 3) + (ret << 1) + ch - 48;\n\t\t\tch = getc();\n\t\t}\n\t\treturn f ? -ret : ret;\n\t}\n\tinline double double_read() {\n\t\tlong long ret = 0,w = 1,aft = 0,dot = 0,num = 0;\n\t\tchar ch = getc();\n\t\twhile (!isdigit(ch)) {\n\t\t\tif (ch == '-') w = -1;\n\t\t\tch = getc();\n\t\t}\n\t\twhile (isdigit(ch) || ch == '.') {\n\t\t\tif (ch == '.') {\n\t\t\t\tdot = 1;\n\t\t\t} else if (dot == 0) {\n\t\t\t\tret = (ret << 3) + (ret << 1) + ch - 48;\n\t\t\t} else {\n\t\t\t\taft = (aft << 3) + (aft << 1) + ch - '0';\n\t\t\t\tnum ++;\n\t\t\t}\n\t\t\tch = getc();\n\t\t}\n\t\treturn (pow(0.1,num) * aft + ret) * w;\n\t}\n\tinline void write(int x) {\n\t\tif(x < 0) {\n\t\t\tputchar('-');\n\t\t\tx = -x;\n\t\t}\n\t\tif(x > 9) write(x / 10);\n\t\tputchar(x % 10 + '0');\n\t}\n}\nusing namespace Newstd;\n\nconst int N = 255;\nstruct Graph {\n\tint v,nxt;\n} gra[N * N];\nint mat[N * 2],vis[N * 2],head[N * 2],t[N * N],a[N][N];\nint n,m,k,idx,nowidx,num;\ninline void add(int u,int v) {\n\tgra[++ idx] = (Graph){v,head[u]},head[u] = idx;\n}\ninline bool dfs(int now) {\n\tfor (register int i = head[now];i;i = gra[i].nxt) {\n\t\tint v = gra[i].v;\n\t\tif (vis[v] != nowidx) {\n\t\t\tvis[v] = nowidx;\n\t\t\tif (!mat[v] || dfs(mat[v])) {\n\t\t\t\tmat[v] = now;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\ninline bool check(int now) {\n\tidx = nowidx = 0;\n\tmst(vis,0),mst(mat,0),mst(head,0),mst(gra,0);\n\tfor (register int i = 1;i <= n; ++ i) {\n\t\tfor (register int j = 1;j <= m; ++ j) {\n\t\t\tif (a[i][j] <= now) {\n\t\t\t\tadd(i,j + m);\n\t\t\t}\n\t\t}\n\t}\n\tint ans = 0;\n\tfor (register int i = 1;i <= n; ++ i) {\n\t\tnowidx ++;\n\t\tif (dfs(i)) ans ++;\n\t}\n\treturn ans >= n - k + 1;\n}\nint main(void) {\n\tn = read(),m = read(),k = read();\n\tint R = 0;\n\tfor (register int i = 1;i <= n; ++ i) {\n\t\tfor (register int j = 1;j <= m; ++ j) {\n\t\t\ta[i][j] = t[++ num] = read();\n\t\t\tR = std::max(R,a[i][j]);\n\t\t}\n\t}\n\tstd::sort(t + 1,t + num + 1);\n\tint l = 1,r = num,ans = -1;\n\twhile (l <= r) {\n\t\tint mid = l + r >> 1;\n\t\tif (check(t[mid])) r = mid - 1,ans = mid;\n\t\telse l = mid + 1;\n\t}\n\tprintf(\"%d\\n\",t[ans]);\n\t\n\treturn 0;\n}\n```",
        "postTime": 1655607209,
        "uid": 430409,
        "name": "Coros_Trusds",
        "ccfLevel": 6,
        "title": "P4251 [SCOI2015]\u5c0f\u51f8\u73a9\u77e9\u9635"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u76f4\u63a5\u505a\u80af\u5b9a\u4e0d\u597d\u505a\uff0c\u4e8e\u662f\u6211\u4eec\u4e8c\u5206\u8f6c\u5316\u4e3a\u5224\u5b9a\u4e00\u4e2a $x$ \u662f\u5426\u53ef\u884c\u3002\n\n\u5f88\u660e\u663e\uff0c\u53ef\u884c\u7b49\u4ef7\u4e8e\u53ef\u4ee5\u5728\u8868\u4e2d\u9009\u51fa $n-k+1$ \u4e2a\u4e0d\u540c\u884c\uff0c\u4e0d\u540c\u5217\u4e14 $\\le x$ \u7684\u6570\u3002\n\n\u6211\u4eec\u5728\u8868\u4e2d\u628a\u6240\u6709 $\\le x$ \u7684\u6570\u7684\u4f4d\u7f6e\u90fd\u6311\u51fa\u6765\uff0c\u56e0\u4e3a\u6bcf\u4e00\u884c\uff0c\u6bcf\u4e00\u5217\u90fd\u53ea\u80fd\u9009\u4e00\u4e2a\u6570\uff0c\u4e5f\u5c31\u662f\u9009\u4e00\u4e2a\u5bf9\u5e94\u7684\u884c/\u5217\u3002\n\n\u4e0d\u96be\u60f3\u5230\u8f6c\u5316\u4e3a\u4e8c\u5206\u56fe\u5339\u914d\uff0c\u5982\u679c $a_{i,j} \\le x$\uff0c\u90a3\u4e48\u5728 $row_i,column_j$ \u4e4b\u95f4\u8fde\u4e00\u6761\u8fb9\u3002\u8dd1\u4e8c\u5206\u56fe\u5339\u914d\u5373\u53ef\u3002\n\n\u5b9e\u73b0\u6211\u7528\u7684\u662f $\\text{Dinic}$\uff0c\u5355\u6b21\u7684\u590d\u6742\u5ea6\u662f $O(nm)$\uff0c\u603b\u590d\u6742\u5ea6 $O(nm\\log n)$\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int NR=1e3+10;\nconst int MR=1e5+10;\nint n,m,k,s,t,a[NR][NR];\nint v[MR],cnt;\n\nint tot=1,fte[NR];\nint dis[NR],cur[NR];\nstruct edge{\n\tint to,next;\n\tint flow;\n}g[MR<<1];\nvoid add(int x,int y,int z){\n\tg[++tot]=(edge){y,fte[x],z};fte[x]=tot;\n\tg[++tot]=(edge){x,fte[y],0};fte[y]=tot;\n}\nbool bfs(){\n\tmemset(dis,-1,sizeof(dis));\n\tqueue<int>q;q.push(s);\n\tdis[s]=0;cur[s]=fte[s];\n\twhile(!q.empty()){\n\t\tint x=q.front();q.pop();\n\t\tfor(int i=fte[x];i;i=g[i].next){\n\t\t\tint y=g[i].to;\n\t\t\tif(dis[y]==-1&&g[i].flow){\n\t\t\t\tq.push(y);dis[y]=dis[x]+1;\n\t\t\t\tcur[y]=fte[y];\n\t\t\t\tif(y==t)return true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nint dfs(int id,int Limit){\n\tif(id==t)return Limit;\n\tint flow=0;\n\tfor(int i=cur[id];i&&flow<Limit;i=g[i].next){\n\t\tcur[id]=i;\n\t\tint y=g[i].to;\n\t\tif(g[i].flow!=0&&dis[y]==dis[id]+1){\n\t\t\tint f=dfs(y,min(g[i].flow,Limit-flow));\n\t\t\tif(!f)dis[y]=-1;\n\t\t\tg[i].flow-=f;g[i^1].flow+=f;\n\t\t\tflow+=f;\n\t\t}\n\t}\n\treturn flow;\n}\nint Dinic(){\n\tint MaxFlow=0,flow=0;\n\twhile(bfs())\n\t\twhile(flow=dfs(s,1e9))MaxFlow+=flow;\n\treturn MaxFlow;\n}\n\nvoid clear(){\n\tfor(int i=2;i<=tot;i++)g[i]=(edge){0,0,0};\n\tmemset(fte,0,sizeof(fte));\n\tmemset(cur,0,sizeof(cur));tot=1;\n}\nbool check(int x){\n\tclear();\n\tfor(int i=1;i<=n;i++)add(s,i,1);\n\tfor(int i=1;i<=m;i++)add(i+n,t,1);\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tif(a[i][j]<=v[x])add(i,j+n,1);\n\treturn Dinic()>=n-k+1;\n} \n\nint main(){\n\tcin>>n>>m>>k;s=n+m+1;t=s+1;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)cin>>a[i][j],v[++cnt]=a[i][j];\n\tsort(v+1,v+1+cnt);\n\tcnt=unique(v+1,v+1+cnt)-v-1;\n\tint l=1,r=cnt,res=cnt;\n\twhile(l<=r){\n\t\tint mid=(l+r)>>1;\n//\t\tprintf(\"%d %d %d\\n\",l,r,mid);\n\t\tif(check(mid))res=mid,r=mid-1;\n\t\telse l=mid+1;\n\t}\n\tcout<<v[res]<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1652363589,
        "uid": 117771,
        "name": "intel_core",
        "ccfLevel": 7,
        "title": "P4251 \u9898\u89e3"
    },
    {
        "content": "## \u601d\u8def\n**\u4efb\u610f\u4e24\u4e2a\u6570\u90fd\u4e0d\u80fd\u5728\u540c\u4e00\u884c\u6216\u8005\u540c\u4e00\u5217**\u3002\u5f88\u660e\u663e\u7684\u6697\u793a\u4e86\uff0c\u4e8c\u5206\u56fe\u3002\u4e8e\u662f\u6211\u4eec\u8003\u8651\u5c06\u884c\u548c\u5217\u62c6\u6210\u4e8c\u5206\u56fe\u7684\u4e24\u4e2a\u70b9\u96c6\u3002\u5efa\u56fe\u548c[ZJOI2007]\u77e9\u9635\u6e38\u620f\u5f88\u7c7b\u4f3c\u3002\n\n**\u7b2ck\u5927\u7684\u6570\u7684\u6700\u5c0f**\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u4e8c\u5206\u3002\u4e8e\u662f\u6211\u4eec\u8003\u8651\u4e8c\u5206\u7b54\u6848\u3002\u5982\u679c\u70b9\u6743\u5c0f\u4e8e\u4e8c\u5206\u503c\u5c31\u5c06\u8be5\u70b9\u6240\u5728\u884c\u5217\u52a0\u8fb9\u3002\u5224\u65ad\u6700\u540e\u6d41\u91cf\u662f\u5426\u5927\u4e8e**n-k+1**;\n\n**n-k+1**\u56e0\u4e3a\u662f\u6c42\u7b2c**k**\u5927\u3002\u4e5f\u5c31\u662f\u8bf4\u7b2c**k-1**\u4e4b\u524d\u7684\u8fb9\u591a\u5927\u662f\u6ca1\u6709\u9650\u5236\u7684\u3002\u4e8e\u662f\u5f88\u5bb9\u6613\u60f3\u5230\u4e00\u5b9a\u4f1a\u6709**k-1**\u5217\u4e0e\u884c\u662f\u4e00\u5b9a\u8fde\u901a\u7684\u3002\n## \u4ee3\u7801\n\u7f51\u7edc\u6d41\u589e\u5e7f\u8def**Dinic**\n\n```cpp\n#include<bits/stdc++.h>\n#define inf 0x3f3f3f3f \nusing namespace std;\nconst int maxn=500+100;\nconst int md=250+5;\nint head[maxn],cur[maxn],dep[maxn];\nint mapn[md][md];\nint s,t;\nstruct edge\n{\n    int to,next,cap;\n}e[maxn*maxn];\nint n,m,k;\nint size=1;\ninline int read()\n{\n    int x=0,f=1;char ch=getchar();\n    while(ch>'9'||ch<'0'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch<='9'&&ch>='0'){x=(x<<3)+(x<<1)+ch-'0';ch=getchar(); }\n    return x*f;\n}\nvoid addedge(int u,int v,int val)\n{\n    e[++size].to=v;e[size].cap=val;e[size].next=head[u];head[u]=size;\n    e[++size].to=u;e[size].cap=0;e[size].next=head[v];head[v]=size;\n}\nint id(int i,int j)\n{\n    return (i-1)*n+j;\n}\nbool bfs()\n{\n    memset(dep,0,sizeof(dep));\n    queue<int>q;\n    q.push(s);\n    dep[s]=1;\n    while(!q.empty())\n    {\n        int u=q.front();\n        q.pop();\n        for(int i=head[u];i;i=e[i].next)\n        {\n            int to=e[i].to;\n            if(!dep[to]&&e[i].cap>0)\n            {\n                dep[to]=dep[u]+1;\n                q.push(to);\n            }\n        }\n    }\n    return dep[t];\n}\nint dinic(int u,int f)\n{\n    if(u==t||!f)return f;\n    int flow=0;\n    for(int &i=cur[u];i;i=e[i].next)\n    {\n        int to=e[i].to;\n        if(e[i].cap>0&&dep[to]==dep[u]+1)\n        {\n            int d=dinic(to,min(f,e[i].cap));\n            if(d>0)\n            {\n                e[i].cap-=d;\n                e[i^1].cap+=d;\n                flow+=d;\n                f-=d;\n                if(!f)break;\n            }\n        }\n    }\n    return flow;\n}\nint maxflow()\n{\n    int mf=0;\n    while(bfs())\n    {\n        memcpy(cur,head,sizeof(head));\n        while(1)\n        {\n            int f=dinic(s,inf); \n            if(f==0)break;\n            mf+=f;\n        }\n    }\n    return mf;\n}\nvoid init()\n{\n    memset(e,0,sizeof(e));\n    memset(head,0,sizeof(head));\n    size=1;\n    for(int i=1;i<=n;i++)\n    addedge(s,i,1);\n    for(int j=1;j<=m;j++)\n    addedge(n+j,t,1);\n}\nbool judge(int mid)\n{\n    init();\n    for(int i=1;i<=n;i++)\n      for(int j=1;j<=m;j++)\n      {\n      \tif(mapn[i][j]<=mid)\n      \taddedge(i,j+n,1);\n      }\n    if(maxflow()>=n-k+1)return true;\n    return false;\n}\nint main()\n{\n    n=read(),m=read(),k=read();\n    s=0,t=n+m+1;\n    for(int i=1;i<=n;i++)\n      for(int j=1;j<=m;j++)\n      mapn[i][j]=read();\n    int l=0,r=1e9;\n    while(l<=r)\n    {\n    \tint mid=(l+r)>>1;\n    \tif(judge(mid))r=mid-1;\n    \telse l=mid+1;\t\n    }\n    printf(\"%d\",l);\n    return 0;\n} \n```\n",
        "postTime": 1553846168,
        "uid": 58707,
        "name": "Edward_Elric",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4251 \u3010[SCOI2015]\u5c0f\u51f8\u73a9\u77e9\u9635\u3011"
    },
    {
        "content": "## \u505a\u6cd5\n\n\u4e8c\u5206+\u7f51\u7edc\u6700\u5927\u6d41\u3002\n\n\u6839\u636e\u9898\u9762 `\u7b2c k \u5927\u7684\u6570\u7684\u6700\u5c0f\u503c` \u8fd9\u4e00\u53e5\u5c31\u5f88\u5bb9\u6613\u60f3\u5230\u4e8c\u5206\u3002\u53ef\u4ee5\u4e8c\u5206\u679a\u4e3e\u8fd9\u4e2a\u503c\uff0c\u5047\u8bbe\u5b83\u4e3a $x$\uff0c\u5219 $\\le x$ \u7684\u6240\u6709\u6570\u90fd\u80fd\u9009\uff0c\u5982\u679c\u6700\u7ec8\u80fd\u9009\u51fa $n-k+1$ \u4e2a\u6570\u5373\u6ee1\u8db3\u6761\u4ef6\u3002\n\n\u8003\u8651\u5982\u4f55\u7b97\u51fa\u6700\u7ec8\u6700\u591a\u80fd\u9009\u51fa\u591a\u5c11\u4e2a\u6570\u3002\u53ef\u4ee5\u4ece\u6e90\u70b9\u8fde\u6d41\u91cf\u4e3a `1` \u7684\u8fb9\u5230 $[1,n]$ \u7684\u6240\u6709\u70b9\uff0c\u4ee3\u8868\u884c\uff1b\u4ece $[n+1,n+m]$ \u8fde\u6d41\u91cf\u4e3a `1` \u7684\u8fb9\u5230\u6c47\u70b9\uff0c\u4ee3\u8868\u5217\u3002\u56e0\u4e3a\u6bcf\u4e00\u884c\u53ea\u80fd\u9009\u4e00\u4e2a\u6570\u4e14\u6bcf\u4e00\u5217\u53ea\u80fd\u9009\u4e00\u4e2a\u6570\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u80fd\u9009\u7684\u6570 $a_{i,j}$\uff0c\u9700\u8981\u4ece $i$ \u5230 $n+j$ \u8fde\u4e00\u6761\u6d41\u91cf\u4e3a `1` \u7684\u8fb9\u3002\u6700\u540e\u8dd1\u4e00\u904d\u7f51\u7edc\u6700\u5927\u6d41\u5373\u53ef\u3002\n\n## AC \u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <queue>\n\nusing namespace std;\n\n#define S 1000005\n#define MS 100005\n\nint n,m,k,s,t;\nlong long a[255][255];\nint esum,to[S],nxt[S],h[MS];\nlong long c[S];\nint dep[MS],cur[MS];\n\ninline void init() // \u521d\u59cb\u5316 \n{\n\tesum=1;\n\tmemset(h,0,sizeof(h));\n\ts=0;\n\tt=n+m+1;\n}\n\ninline void add(int x,int y,long long w)\n{\n\tto[++esum]=y;\n\tc[esum]=w;\n\tnxt[esum]=h[x];\n\th[x]=esum;\n}\n \ninline bool bfs()\n{\n\tmemset(dep,0,sizeof(dep));\n\tqueue<int> q;\n\tq.push(s);\n\tdep[s]=1;\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tfor(int i=h[u];i;i=nxt[i])\n\t\t{\n\t\t\tint v=to[i];\n\t\t\tif(c[i]>0&&dep[v]==0)\n\t\t\t{\n\t\t\t\tdep[v]=dep[u]+1;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n\treturn dep[t]>0;\n}\n\nlong long dfs(int u,long long w)\n{\n\tif(u==t)\n\t{\n\t\treturn w;\n\t}\n\tlong long sum=0;\n\tfor(int &i=cur[u];i;i=nxt[i])\n\t{\n\t\tint v=to[i];\n\t\tif(c[i]>0&&dep[v]==dep[u]+1)\n\t\t{\n\t\t\tlong long res=dfs(v,min(c[i],w));\n\t\t\tif(res>0)\n\t\t\t{\n\t\t\t\tc[i]-=res;\n\t\t\t\tc[i^1]+=res;\n\t\t\t\tw-=res;\n\t\t\t\tsum+=res;\n\t\t\t\tif(w==0)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn sum;\n}\n\ninline long long dinic() // \u7f51\u7edc\u6700\u5927\u6d41 dinic \u7b97\u6cd5\u677f\u5b50 \n{\n\tlong long res=0;\n\twhile(bfs())\n\t{\n\t\tfor(int i=s;i<=t;i++)\n\t\t{\n\t\t\tcur[i]=h[i];\n\t\t}\n\t\tres+=dfs(s,1e17);\n\t}\n\treturn res;\n}\n\ninline bool check(long long mid)\n{\n\tinit(); // \u521d\u59cb\u5316 \n\tfor(int i=1;i<=n;i++) // \u6bcf\u4e00\u884c\u7684\u70b9 \n\t{\n\t\tadd(s,i,1);\n\t\tadd(i,s,0);\n\t}\n\tfor(int i=1;i<=m;i++) // \u6bcf\u4e00\u5217\u7684\u70b9 \n\t{\n\t\tadd(n+i,t,1);\n\t\tadd(t,n+i,0);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tif(a[i][j]>mid)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// \u5728\u8be5\u70b9\u5bf9\u5e94\u7684\u884c\u548c\u5217\u5efa\u8fb9 \n\t\t\tadd(i,n+j,1);\n\t\t\tadd(n+j,i,0);\n\t\t}\n\t}\n\treturn dinic()>=n-k+1;\n}\n\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tscanf(\"%lld\",&a[i][j]);\n\t\t}\n\t}\n\tlong long l=1,r=1e11,ans;\n\twhile(l<=r) // \u4e8c\u5206\u7b54\u6848\u677f\u5b50 \n\t{\n\t\tlong long mid=l+r>>1;\n\t\tif(check(mid))\n\t\t{\n\t\t\tans=mid;\n\t\t\tr=mid-1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tl=mid+1;\n\t\t}\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1634612553,
        "uid": 251130,
        "name": "lovely_ckj",
        "ccfLevel": 0,
        "title": "P4251 [SCOI2015]\u5c0f\u51f8\u73a9\u77e9\u9635 \u9898\u89e3"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P4251)\n\n\u601d\u8def\uff1a\u9898\u76ee\u8981\u6c42\u53d8\u76f8\u89e3\u7b54\u4e00\u4e0b\uff0c\u6c42\u51fa\u662f\u5426\u6709n-k\u4e2a\u6570\uff0c\u4e0d\u5927\u4e8e\u5f53\u524d\u6c42\u7684\u7b2ck\u4e2a\u6570\n\n\u800c\u6bcf\u4e00\u884c\u6bcf\u4e00\u5217\u53ea\u80fd\u6709\u4e00\u4e2a\u6570\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u4e8c\u5206\u56fe\u7684\u601d\u8def\uff0c\u8fb9\u4e0a\u7684\u6743\u503c\u5c31\u662f\u7b2ci\u884c\u7b2cj\u5217\u8fd9\u4e2a\u6570\u7684\u503c\n\n\u5bf9\u4e8e\u7b54\u6848\u5c31\u662f\u7b2ck\u5927\u7684\u6570\uff0c\u5219\u7528\u4e8c\u5206\u6765\u6c42\n\n\u6bcf\u4e00\u6b21\u5bf9mid\u8fdb\u884c\u5224\u65ad\u65f6\uff0c\u8981\u91cd\u5efa\u56fe\uff0c\u4ee5\u6ee1\u8db3\u8981\u6c42\n\n~~\u6c34\u9898\u89e3\uff0c\u8d5a\u5495\u503c~~\n\n```cpp\n\n#include <cstdio>\n#include <iostream>\n#include <cctype>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\nusing namespace std;\n\n#define clr(x) memset(x,0,sizeof(x))\n#define int long long\n\ninline int read(){\n    int s=0;bool flag=true;char ch=getchar();\n    while(!isdigit(ch)){if(ch=='-')flag=false;ch=getchar();}\n    while(isdigit(ch)){s=(s<<3)+(s<<1)+ch-'0';ch=getchar();}\n    return flag?s:-s;\n}\n\ninline void out_put(int x){\n    if(x<0)    putchar('-'),x=-x;\n    if(x>9)    out_put(x/10);\n    putchar(x%10+'0');\n}\n\ninline void print(int x){out_put(x),puts(\"\");}\n\nconst int N=255;\nconst int inf=0x3f3f3f3f3f3f3f3f3f;\nbool vis[N],line[N][N];\nint row[N],w[N][N];\nint n,m,k;\n\ninline bool find(int x){\n    for(int i=1;i<=m;i++)\n        if(line[x][i] && !vis[i]){\n            vis[i]=true;\n            if(!row[i] || find(row[i])){\n                row[i]=x;\n                return true;\n            }\n        }\n    return false;\n}\n\ninline void rebuild(int limit){\n    clr(line),clr(row);\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            if(w[i][j]<=limit)    \n                line[i][j]=true;\n}\n\ninline bool check(int x){\n    rebuild(x);\n    int cnt=0;\n    for(int i=1;i<=n;i++){\n        clr(vis);\n        if(find(i))    cnt++;\n    }\n    if(cnt>n-k)    return true;\n    return false;\n}\n\nsigned main(void){\n    n=read(),m=read(),k=read();\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            w[i][j]=read();\n    int l=1,r=inf,ans;\n    while(l<=r){\n        int mid=(l+r)>>1;\n        if(check(mid))r=mid-1,ans=mid;\n        else l=mid+1;\n    }\n    print(ans);\n    return 0;\n} \n\n \n```\n",
        "postTime": 1588946590,
        "uid": 38168,
        "name": "USTC_Ming",
        "ccfLevel": 0,
        "title": "[SCOI2015]\u5c0f\u51f8\u73a9\u77e9\u9635"
    },
    {
        "content": "[\u9898\u9762](https://www.luogu.com.cn/problem/P4251)\n\n\n\u6211\u4eec\u5148\u770b\u4e00\u9053\u4f8b\u9898\uff1a\n\n[P1129 [ZJOI2007]\u77e9\u9635\u6e38\u620f](https://www.luogu.com.cn/problem/P1129)\n\n\u8fd9\u9053\u4f8b\u9898\u662f\u4e8c\u5206\u56fe\u7684\u5165\u95e8\u9898\u5f53\u4e2d\u7684\u96be\u9898\uff08\u5bf9\u6211\u6765\u8bf4\uff09\uff0c\u5f53\u65f6\u6211\u5728\u673a\u623f\u548c\u4ee5\u4e3a\u540c\u5b66\u8ba8\u8bba\u4e86\u4e00\u665a\u4e0a\u624d\u61c2\uff0c\u54c8\u54c8\u54c8\u3002\n\n\n#### \u6e38\u620f\u7684\u76ee\u6807\uff0c\u5373\u901a\u8fc7\u82e5\u5e72\u6b21\u64cd\u4f5c\uff0c\u4f7f\u5f97\u65b9\u9635\u7684\u4e3b\u5bf9\u89d2\u7ebf(\u5de6\u4e0a\u89d2\u5230\u53f3\u4e0b\u89d2\u7684\u8fde\u7ebf)\u4e0a\u7684\u683c\u5b50\u5747\u4e3a\u9ed1\u8272\u3002\n\n\u6211\u4eec\u4e00\u770b\uff0c\u5bf9\u89d2\u7ebf\u5747\u4e3a\u9ed1\u8272\uff0c\u597d\u5427\uff0c\u6211\u8bb2\u4e0d\u6e05\u695a\uff0c\u4f46\u662f\u4f60\u770b\u4e86\u6211\u8bb2\u7684\u4e4b\u540e\u53ef\u4ee5\u770b\u770b\u8bb2\u61c2\u6211\u7684\u9898\u89e3\u3002\n\n\u6211\u4eec\u770b\u5f97\u51fa\u6765\u65e0\u8bba\u600e\u4e48\u4ea4\u6362\u90fd\u4e0d\u4f1a\u5f71\u54cd\u884c\u548c\u5217\u7684\u9ed1\u5b50\u6709\u77db\u76fe\uff0c\u5c31\u662f\u91cd\u5408\uff0c\u6240\u6709\u5c31\u5c06\u6bcf\u884c\u548c\u6bcf\u5217\u8fde\u8fb9\uff0c\u7136\u540e\u8dd1\u4e8c\u5206\u56fe\u5339\u914d\uff08\u8bf4\u5b9e\u5728\u8bdd\uff0c\u6211\u89c9\u5f97\u4f8b\u9898\u5bf9\u4e8e\u4e8c\u5206\u56fe\u7684\u601d\u7ef4\u96be\u5ea6\u90fd\u6bd4\u8fd9\u9053\u9898\u9ad8\u2026\u2026\uff09\n\n\u73b0\u5728\u7ed9\u5927\u5bb6\u770b\u770b\u8bb2\u61c2\u6211\u7684[\u535a\u5ba2](https://www.luogu.com.cn/blog/sswcdak/solution-p1129)\n\n\u8fd9\u4e2a\u662f[\u4ffe\u65af\u9ea6](https://www.luogu.com.cn/user/119937)\uff08\u6d1b\u8c37\u540d\uff09\u7684\uff0c\u5982\u6709\u4fb5\u6743\uff0c\u4f5c\u8005\u5c06\u53ca\u65f6\u5220\u9664\u3002\n\n\u73b0\u5728\u6211\u4eec\u770b\u8fd9\u9053\u9898\n\n#### \u5176\u4e2d\u4efb\u610f\u4e24\u4e2a\u6570\u90fd\u4e0d\u80fd\u5728\u540c\u4e00\u884c\u6216\u8005\u540c\u4e00\u5217\u3002\n\n\u8fd9\u5c31\u662f\u88f8\u9898\u4e86\u554a\uff01\u6211\u4eec\u5c31\u76f4\u63a5\u6bcf\u4e00\u6b21\u6bcf\u884c\u548c\u6bcf\u5217\u8fde\u8fb9\uff0c\u5f53\u7136\uff0c\u56e0\u4e3a\u6211\u4eec\u8981\u6c42\u7b54\u6848\uff0c\u53d1\u73b0\u4e0d\u80fd\u76f4\u63a5\u6c42\u51fa\uff0c\u6240\u4ee5\u8003\u8651\u4e8c\u5206\u7b54\u6848\uff0c\u56e0\u6b64\u6211\u4eec\u8fde\u7684\u8fb9\u5fc5\u987b\u662f\u5c0f\u4e8e\u7b49\u4e8e\u6211\u4eec\u4e8c\u5206\u51fa\u6765\u7684\u4e1c\u897f\uff0c\u56e0\u6b64\u6211\u4eec\u5c31\u6bcf\u6b21\u6e05\u96f6\u4e00\u6b21\uff0c\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u73b0\u5728\u8d34\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<cstdlib>\n\nusing namespace std;\nconst int MAXN = 255;\n\ninline int rd(){\n    int x=0,f=1;char ch=getchar();\n    while(!isdigit(ch)) {f=ch=='-'?0:1;ch=getchar();}\n    while(isdigit(ch))  {x=(x<<1)+(x<<3)+ch-'0';ch=getchar();}\n    return f?x:-x;\n}\n\nint n,m,k,w[MAXN*MAXN];\nint a[MAXN][MAXN],tot,ans,now;\nint head[MAXN*MAXN],cnt;\nint vis[MAXN*MAXN],num,match[MAXN*MAXN];\nint to[MAXN*MAXN<<1],nxt[MAXN*MAXN<<1];\n\ninline void add(int bg,int ed){\n    to[++cnt]=ed,nxt[cnt]=head[bg],head[bg]=cnt;\n}\n\nbool dfs(int x){\n    for(register int i=head[x];i;i=nxt[i]){\n        int u=to[i];\n        if(vis[u]!=num){\n            vis[u]=num;\n            if(!match[u] || dfs(match[u])){\n                match[u]=x;\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\ninline bool check(int Mid){\n    memset(head,0,sizeof(head));\n    memset(match,0,sizeof(match));\n    ans=cnt=0;\n    for(register int i=1;i<=n;i++)\n        for(register int j=1;j<=m;j++)  \n            if(a[i][j]<=Mid) add(i,j);\n    for(register int i=1;i<=n;i++){\n        num++;\n        if(dfs(i)) ans++;\n    }\n    if(ans>n-k) return true;\n    return false;\n}\n\nint main(){\n    n=rd(),m=rd(),k=rd();\n    for(register int i=1;i<=n;i++)\n        for(register int j=1;j<=m;j++){\n            a[i][j]=rd();\n            w[++tot]=a[i][j];\n        }\n    sort(w+1,w+1+tot);\n    int l=1,r=tot,mid;\n    while(l<=r){\n        mid=l+r>>1;\n        if(check(w[mid])) {\n            now=mid;\n            r=mid-1;\n        }\n        else l=mid+1;\n    }cout<<w[now]<<endl;\n    return 0;\n}\n\n```",
        "postTime": 1588942168,
        "uid": 233198,
        "name": "starseven",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4251 \u3010[SCOI2015]\u5c0f\u51f8\u73a9\u77e9\u9635\u3011"
    }
]