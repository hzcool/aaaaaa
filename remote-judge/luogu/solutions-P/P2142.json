[
    {
        "content": "# \u9898\u89e3 /\u3010\u5b66\u4e60\u7b14\u8bb0\u3011-- \u9ad8\u7cbe\u5ea6\u51cf\u6cd5\n\n## \u4fee\u6539\u65e5\u5fd7\uff1a\n- 1\u300119/3/31 \u4fee\u6539\uff1a\u4f18\u5316\u4e86\u6279\u6ce8\uff0c\u5199\u7684\u66f4\u6613\u61c2\u4e00\u4e9b\u3002\n\n- **2\u300119/8/8 \u4fee\u6539\uff1a\u589e\u52a0\u4e86\u56fe\u7247\uff0c\u7ec6\u8282\u66f4\u591a\uff0c\u8c03\u6574\u7801\u98ce\uff0c\u89e3\u51b3\u4e86\u4e00\u4e9b\u5c0fBUG\uff0c\u79d1\u666e\u4e86\u4e00\u4e9b~~\u65e0\u5173\u7d27\u8981~~\u7684\u77e5\u8bc6\u3002\uff08\u91cd\u5927\u4fee\u6539\uff09**\n\n\n------------\n\n- ## 1\u3001$int$\u7684\u60b2\u4f24\u4e0e\u9ad8\u7cbe\u5ea6\u7684\u9700\u6c42\u3002\n\n\t\u6211\u4eec\u5f80\u5e38\u5728\u4f5c\u8fd0\u7b97\u7684\u65f6\u5019\uff0c\u5f80\u5f80\u76f4\u63a5\u7528\u8fd0\u7b97\u7b26\u5b8c\u6210\u8fd0\u7b97\uff08\u8b6c\u5982a - b\uff09\u3002\u8fd9\u5f53\u7136\u975e\u5e38\u5730\u7b80\u4fbf\u3002\n\n\t\u4f46\u662f\u5f53**\u6570\u636e\u8303\u56f4\u7279\u522b\u5927**\u7684\u65f6\u5019\uff0c\u4f60\u53bb\u7528\u8fd0\u7b97\u7b26\u505a\u51cf\u6cd5\u5f80\u5f80\u5f97\u4e0d\u5230\u6b63\u786e\u7684\u7ed3\u679c\uff0c**\u4e3a\u4ec0\u4e48\uff1f\uff1f**\n\n\t\u9996\u5148\uff0c\u5728$c++$\u91cc\uff0c\u6bcf\u4e00\u79cd\u5b9e\u6570\u53d8\u91cf\u578b\u90fd\u662f\u6709\u4e00\u4e2a\u6570\u636e\u50a8\u5b58\u8303\u56f4\u7684\u3002**\u8b6c\u5982$int$\u578b\uff0c\u5b83\u7684\u6570\u636e\u8303\u56f4\u5c31\u4e3a $-2147483648 < int < 2147483647$\uff0c\u4e5f\u5c31\u662f $-2^{31} < int < 2^{31} -1$\u3002\u4e00\u65e6\u4f60\u7ed9\u4e00\u4e2aint\u578b\u53d8\u91cf\u5b58\u4e00\u4e2a\u5927\u4e8e\u8fd9\u4e2a\u8303\u56f4\u7684\u6570\uff0c\u5b83\u5c31\u4f1a\u4ea7\u751f\u6ea2\u51fa\uff0c\u7136\u540e\u4f60\u5b58\u7684\u6570\u5b57\u4f1a\u53d8\u6210\u53e6\u5916\u4e00\u4e2a\u975e\u5e38\u795e\u5947\u7684\u6570\u5b57** \u3002\u53ef\u4ee5\u81ea\u5df1\u5728\u7ebf\u4e0b\u8bd5\u4e00\u8bd5\u54e6\u3002\n    \n   ~~\u4e0d\u8981\u548c\u6211\u63d0Py\u548cjava\uff01~~\n    \n   \u8fd9\u4e2a\u65f6\u5019\uff0c\u4f60\u5b58\u7684\u6570\u5b57\u672c\u8eab\u5c31\u5df2\u7ecf\u53d1\u751f\u9519\u8bef\uff0c\u5c31\u4e0d\u7528\u6307\u671b\u4ed6\u6765\u8fd0\u7b97\u4e86\u3002\n   \n   \u5f53\u7136\u4e5f\u6709\u89e3\u51b3\u529e\u6cd5\uff0c\u8b6c\u5982\u5f00$long long$\u3002\u4f46\u662f\u5f53\u6570\u636e\u8303\u56f4\u9ad8\u5230\u6050\u6016\u7684\u5730\u6b65\u7684\u65f6\u5019\uff08\u751a\u81f3\u5927\u4e8e$10^{1000}$\uff09\uff0c\u522b\u8bf4$long long$\u4e86\uff0c\u5f00\u6302\u795e\u5668__$int128$\u90fd\u6551\u4e0d\u4e86\u4f60\u3002\n   \n   \u8fd9\u4e2a\u65f6\u5019\uff0c\u5c31\u9700\u8981\u9ad8\u7cbe\u5ea6\u7b97\u6cd5\u6765\u89e3\u51b3\u95ee\u9898\u3002\n\n------------\n\n- ## 2\u3001\u6570\u7ec4\u641e\u5b9a\u9ad8\u7cbe\u5ea6\u6570\u5b57\n\n\t\u4e0a\u9762\u6211\u4eec\u6709\u63d0\u5230\u8fc7\uff0c\u5728\u6570\u636e\u8303\u56f4\u5f88\u5927\u7684\u65f6\u5019\uff0c\u4efb\u4f55\u53d8\u91cf\u578b\u5df2\u7ecf\u65e0\u6cd5\u6ee1\u8db3\u6211\u4eec\u7684\u9700\u6c42\u3002\u8fd9\u4e2a\u65f6\u5019\u600e\u4e48\u529e\uff1f\n    \n   \u63a5\u4e0b\u6765\u4ecb\u7ecd\u4e00\u79cd\u6700\u4f20\u7edf\u7684\u505a\u6cd5\uff1a\u5f00\u6570\u7ec4\u3002\n   \n   \u6211\u4eec\u5f00\u4e00\u4e2a\u6570\u7ec4\u3002\u8fd9\u4e2a\u6570\u7ec4\u5f00\u5230\u591a\u5927\uff1f\u5c31\u8981\u770b\u4f60\u8981\u5b58\u7684\u6570\u7684\u4f4d\u6570\u6709\u591a\u5c11\u3002\u82e5\u60f3\u5b58\u4e00\u4e2a$2000$\u4f4d\u7684\u6570\uff0c\u5c31\u628a\u6570\u7ec4\u5f00\u5230$2000$\u4ee5\u4e0a\u3002\n   \n   \u4f60\u4f4d\u6570\u53ef\u4ee5\u591a\u554a\uff0c\u4f60\u591a\u4e00\u4f4d \u4f4d\u6570\uff0c\u6211\u5c31\u628a\u6570\u7ec4\u591a\u5f00\u4e00\u4e2a\u7a7a\u95f4\u3002~~\u770b\u8c01\u6597\u5f97\u8fc7\u8c01~~\n   \n   \u800c\u672c\u9898\u751a\u81f3\u5f00\u5230\u4e86$10086$\u4f4d\uff0c\u6240\u4ee5\u6211\u9009\u62e9\u628a\u6570\u7ec4\u5f00\u5230$10500$\u4f4d\u3002\uff08\u5f00\u591a\u70b9\u6ca1\u574f\u5904\uff09\n   \n   **\u60f3\u5fc5\u8fd9\u6837\u8bf4\u5927\u6982\u90fd\u6e05\u695a\u4e86\u3002\u6211\u4eec\u7528\u6570\u7ec4\u7684\u6bcf\u4e00\u4e2a\u7a7a\u95f4\u6765\u5b58\u6bcf\u4e00\u4f4d\u6570\u7684\u90a3\u4e2a\u6570\u5b57\u3002**\n   \n   \u8fd9\u53e5\u8bdd\u662f\u4ec0\u4e48\u610f\u601d\u5462\uff1f\u6211\u4eec\u6253\u4e2a\u6bd4\u65b9\u3002\n   \n   \u6bd4\u5982\u8bf4\u6211\u4eec\u73b0\u5728\u8981\u5b58$123$\u8fd9\u4e2a\u6570\uff0c\u628a\u5b83\u5b58\u8fdb$na$\u6570\u7ec4\u91cc\u3002\n   \n   \u6211\u4eec\u53ef\u4ee5\u53d6\u51fa\u6700\u540e\u4e00\u4f4d\uff08\u4e2a\u4f4d\uff09$3$\uff0c\u653e\u5230$na[1]$\u4e2d\u3002\u4e8e\u662f$na[1] = 3$\n   \n   \u540c\u7406\uff0c\u6211\u4eec\u53d6\u51fa$2,1$\u653e\u8fdb\u6570\u7ec4\uff0c\u4e8e\u662f\u5c31\u6709\uff1a\n   \n   ```cpp\n\tna[1] = 3;\n\tna[2] = 2;\n\tna[3] = 1;\n\n\t//\u4e5f\u5c31\u662f: na[MAXN] = {3, 2, 1};\n    \n\t```\n   \n   **\u6b64\u65f6\uff0c$na[i]$\u5c31\u4ee3\u8868\u4e86\u6b64\u6570\u7684\u6700\u540e$i$\u4f4d**\n   \n   ### \u4f46\u662f\n    \n   **\u6211\u4eec\u5e76\u4e0d\u9009\u62e9\u76f4\u63a5\u4e00\u4e2a\u4e00\u4e2a\u8f93\u5165\u6bcf\u4f4d\u6570\u5b57\uff0c\u628a\u6570\u5b57\u5b58\u8fdb\u6570\u7ec4\u3002**\n   \n \t\u6211\u4eec\u9009\u62e9\u4f7f\u7528**\u5b57\u7b26\u4e32** \uff0c\u50cf\u8fd9\u6837\uff1a\n   \n  \t```cpp\n\tstring a, b;\n\tcin >> a >> b;\n  \tfor(int i = a.size(); i > 0; i --)na[i] = a[a.size() - i] - '0';\n  \tfor(int i = b.size(); i > 0; i --)nb[i] = b[b.size() - i] - '0';\n\t//\u8fd9\u4e2a\u4ee3\u7801\u5e95\u4e0b\u6709\u89e3\u91ca\n  \t```\n   **\u4e3a\u4ec0\u4e48\u8fd9\u6837\u505a\uff1f**\n    \n   \u9996\u5148\uff0c**\u5b57\u7b26\u4e32\u8f93\u5165\u4e24\u4e2a\u6570\u5b57\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5730\u77e5\u9053\u6bcf\u4e2a\u6570\u5b57\u7684\u957f\u5ea6\uff0c\u4e5f\u5c31\u662f\u4f4d\u6570**\uff08\u5b57\u7b26\u4e32$a$\u7684\u957f\u5ea6\u4e3a$a.size()$\uff0c\u4f9d\u6b21\u7c7b\u63a8\uff09\u3002**\u77e5\u9053\u957f\u5ea6\u5c31\u53ef\u4ee5\u76f4\u63a5\u7ed9$for$\u5faa\u73af\u670d\u52a1\u3002**\n   \n   \u5176\u6b21\uff0c\u5b57\u7b26\u4e32\u5b83\u8f93\u5165\u65b9\u4fbf\u554a\uff0c\u4e00\u4e2a$cin$\u5c31\u5b8c\u6210\u4e86\uff0c\u4e5f\u4e0d\u5fc5\u53bb\u68c0\u9a8c\u4ec0\u4e48\u8f93\u5165\u5230\u7a7a\u683c\u4e4b\u7c7b\u7684\u4e86\u3002\n   \n   \u5f53\u7136\uff0c\u6700\u65b9\u4fbf\u7684\u662f\u53ef\u4ee5\u5c06\u5b57\u7b26\u4e32\u6254\u8fdb\u5b50\u51fd\u6570\u91cc\uff08\u8fd9\u4e2a\u5728\u6700\u540e\u6709\u62d3\u5c55\uff09\n   \n   **\u5f53\u7136\uff1a\u5c06\u5b57\u7b26\u4e32\u8f6c\u5316\u8fdb\u6570\u7ec4\u9700\u8981\u4e00\u5b9a\u6280\u5de7\uff1a**\n   \n   1\u3001\u9996\u5148\uff0c\u5b57\u7b26\u4e32\u91cc\u540c\u6837\u53ef\u4ee5\u7528\u4e0b\u8868\u5f62\u5f0f\u8868\u793a\u67d0\u4f4d\u7684\u6570\uff08\u8b6c\u5982$a[i]$\uff09\uff0c**\u4f46\u662f\u548c\u6211\u4eec\u4e4b\u524d\u7684\u5b58\u6cd5\u76f8\u53cd\uff0c$a[0]$ \u8868\u793a\u7684\u6570\u5b57\u7684\u6700\u9ad8\u4f4d\uff0c\u6b21\u9ad8\u4f4d\u662f$a[1]$\u3002\u4ed6\u662f\u4ece$0$\u4e14\u662f\u4ece\u9ad8\u4f4d\u7b97\u8d77\u7684\uff0c\u548c\u6211\u4eec\u4e4b\u524d\u8bf4\u7684\u4ece\u4f4e\u4f4d\u5f00\u59cb\u5b58\u6070\u597d\u76f8\u53cd\u3002**\n   \n   2\u3001\u5176\u6b21\uff0c\u5b57\u7b26\u4e32\u91cc\u6bcf\u4e2a\u6570\u5176\u5b9e\u90fd\u662f$char$\u578b\u7684\u3002\u867d\u7136\u770b\u8d77\u6765\u548c$int$\u578b\u6ca1\u4ec0\u4e48\u4e0d\u540c\uff0c**\u4f46\u662f\u60f3\u628a$char$\u578b\u8f6c\u5316\u6210$int$\u578b\u9700\u8981\u901a\u8fc7\u4e00\u4e2a\u4ecb\u8d28\uff1a$ASCII$\u7801\u3002**\n   \n\t\u6bcf\u4e2a$char$\u5b57\u7b26\u90fd\u6709\u5bf9\u5e94\u7684$ASCII$\u7801\uff0c\u800c$0-9$\u7684$ASCII$\u7801\u662f$48 - 57$\u3002**\u5982\u679c\u4f60\u5c1d\u8bd5\u628a\u4e00\u4e2a$char$\u578b\u7684$0$\u5b58\u8fdb$int$\uff0c\u90a3\u4e48\u5b58\u8fdb\u53bb\u7684\u5219\u662f$0$\u7684$ASCII$\u7801\uff0c\u4e5f\u5c31\u662f$48$\u3002**\n    \n   \u8fd9\u4e24\u4e2a\u60c5\u51b5\u600e\u4e48\u89e3\u51b3\uff1f\n   \n   - **1\u3001\u7b2c\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a\u6570\u7ec4\u7684\u7b2c$i$\u4f4d\u548c\u5b57\u7b26\u4e32\u7684\u7b2c\uff08\u4f4d\u6570 $-  i$\uff09\u4f4d\u5bf9\u5e94\u8d77\u6765\u5c31\u53ef\u4ee5\u4e86\u3002\u8fd9\u662f\u5f88\u597d\u8bc1\u660e\u7684\u3002** \n   \n   \t\u5047\u8bbe\u6211\u4eec\u8981\u5b58\u4e00\u4e2a$3$\u4f4d\u6570\uff0c\u5b83\u7684\u6bcf\u4e00\u4f4d\uff1a\n    \n   \t\u7528\u6570\u7ec4\u8868\u793a\uff1a$na[1], na[2], na[3]$\n   \t\n   \t\u7528\u5b57\u7b26\u4e32\u8868\u793a:$a[3 - 1], a[3 - 2], a[3 - 3]$**\uff08\u8fd9\u91cc\u5343\u4e07\u8981\u6ce8\u610f\u5b57\u7b26\u4e32\u4e0b\u6807\u662f\u4ece$0$\u5f00\u59cb\u5b58\u7684\uff0c\u4e5f\u5c31\u662f$a[0]$\u8868\u793a\u6700\u9ad8\u4f4d\uff09**\n    \n   \t\u4ee3\u7801\u4e2d\u624b\u6253\u51fa\u6765\u5c31\u53ef\u4ee5\u4e86\u3002\n    \n   -  2\u3001\u7b2c\u4e8c\u4e2a\u95ee\u9898\uff0c$0-9$\u7684$ASCII$\u7801\u4e0d\u662f$48 - 57$\u4e48\uff0c\u90a3\u4e48\u628a\u5b57\u7b26\u5f15\u5165$int$\u578b\u7684\u65f6\u5019\uff0c**\u6211\u4eec\u53ea\u9700\u8981\u5f15\u5165\u65f6\u628a\u6bcf\u4e2a\u6570\u51cf\u53bb$48$\u5c31\u884c\u4e86\u3002** $48-57$\u51cf\u53bb$48 = 0-9$ \u9053\u7406\u90fd\u61c2\uff0c\u5bf9\u5427\u3002\n   \n   \t**\u5f53\u7136\u4f60\u53ef\u4ee5\u628a$48$\u5199\u6210$'0'$\u3002$'0'$\u5c31\u4ee3\u8868\u7740$0$\u7684$ASCII$\u7801**\n    \n   \t**\u4e8e\u662f\u8fd9\u5c31\u6709\u4e86\u6211\u4e0a\u9762\u7ed9\u51fa\u7684\u4ee3\u7801\uff1a**\n   \n      \n   ```cpp\n\tstring a, b;\n\tcin >> a >> b;\n   for(int i = a.size(); i > 0; i --)na[i] = a[a.size() - i] - '0';//\u5176\u5b9e\u8fd9\u91cc\u6b63\u8fd9\u5012\u7740\u5faa\u73af\u771f\u7684\u65e0\u6240\u8c13\n   for(int i = b.size(); i > 0; i --)nb[i] = b[b.size() - i] - '0';\n\t\n   ```\n   - **\u4e8e\u662f\u4e4e\uff0c\u6211\u4eec\u5c31\u6709\u4e86\u4e24\u4e2a\u6570\u7ec4\uff0c\u5b58\u4e86\u4e24\u4e2a\u9ad8\u7cbe\u5ea6\u6570\u5b57\u3002**\n\t\n    \n- ## 3\u3001\u5c0f\u5b66\u8ba1\u7b97\u6559\u4f60\u505a\u51cf\u6cd5\n\n\t**\u6570\u5b57\u5b58\u8fdb\u6570\u7ec4\u53bb\u4e86\uff0c\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c\u5982\u4f55\u8ba9\u4e24\u4e2a\u6570\u7ec4\u4f5c\u51cf\u6cd5\uff1f\uff1f**\n\n\t\u7b54\u6848\u5f88\u7b80\u5355\uff1a**\u5c0f\u5b66\u7ad6\u5f0f\u8fd0\u7b97\uff01**\n   \n   ~~\u4ec0\u4e48\uff1f\u4f60\u5c45\u7136\u6559\u6211\u51cf\u6cd5\u7528\u7ad6\u5f0f\uff1f\uff1f\uff1f~~\n   \n   \u597d\u5427\uff0c\u53ef\u80fd\u5404\u4f4d\u505a\u51cf\u6cd5\u719f\u80fd\u751f\u5de7\uff0c\u4e0d\u9700\u8981\u5217\u7ad6\u5f0f\u5c31\u53ef\u4ee5\u53e3\u7cca\u51fa\u6765\u3002\u4f46\u662f\u4f60\u8981\u77e5\u9053\uff0c\u8ba1\u7b97\u673a\u5e76\u4e0d\u4f1a\u505a\u6570\u7ec4\u76f8\u51cf\u7684\u8fd0\u7b97\u3002\u4e8e\u662f\u6211\u4eec\u5c31\u9700\u8981\u201c\u6559\u4ed6\u201d\u7b97\u3002\n   \n   \u5c0f\u5b66\u8001\u5e08\u600e\u4e48\u6559\u4f60\u7b97\u51cf\u6cd5\uff1f\u5f53\u7136\u662f\u7ad6\u5f0f\u8fd0\u7b97\u3002\n   \n   \u5177\u4f53\u505a\u6cd5\u5c31\u662f\uff1a**\u628a\u4e24\u4e2a\u6570\u5b57\u7684\u6bcf\u4e00\u4f4d\u5bf9\u9f50\uff0c\u4ece\u4f4e\u4f4d\u5230\u9ad8\u4f4d\uff0c\u540c\u4e00\u4f4d\u9010\u6b21\u76f8\u51cf\uff0c\u5982\u679c\u51cf\u4e0d\u591f\u5c31\u5411\u540e\u4e00\u4f4d\u501f\u4f4d\u3002**\uff08\u5c0f\u5b66\u7ad6\u5f0f\u501f\u4f4d\u751a\u81f3\u8fd8\u8981\u5411\u501f\u7684\u4f4d\u6253\u6807\u8bb0\u9632\u6b62\u4f60\u5fd8\u4e86\uff09\n\n\t\u8ba1\u7b97\u673a\u7684\u7ad6\u5f0f\u8fd0\u7b97\u540c\u6837\u662f\u8fd9\u4e2a\u9053\u7406\u3002\u6211\u4eec\u5047\u8bbe\u6709\u4e24\u4e2a\u5b58\u4e86\u6570\u5b57\u7684\u6570\u7ec4$na,nb$\u3002\n    \n   \u6211\u4eec\u628a\u4e24\u4e2a\u6570\u7684\u6bcf\u4f4d\u5bf9\u9f50\uff0c\u521a\u521a\u6211\u4eec\u63d0\u5230\uff1a$na[i]$\u4ee3\u8868$a$\u8fd9\u4e2a\u6570\u7684\u7b2c$i$\u4f4d\u3002\u540c\u7406\uff1a$nb[i]$\u4ee3\u8868$b$\u8fd9\u4e2a\u6570\u7684\u7b2c$i$\u4f4d\u3002\n   \n   **\u90a3\u4e48\uff0c\u6211\u4eec\u53ea\u9700\u8981\u505a\u7684\u5c31\u662f$na[i] - nb[i]$\u5c31\u884c\u4e86\u3002\u8fd9\u5c31\u4ee3\u8868\u4e86$a$\u7684\u7b2c$i$\u4f4d\u51cf\u53bb\u4e86$b$\u7684\u7b2c$i$\u4f4d**\n   \n   \u6211\u4eec\u7528\u8868\u683c\u6f14\u793a\u4e00\u4e0b$456789$\u51cf\u53bb$135353$\uff0c\u5176\u4e2d\uff0c$ans$\u6570\u7ec4\u7528\u6765\u5b58\u50a8\u7b54\u6848\n   \n   ![](http://zhzxoj-tuchuang-1256463233.cos.ap-hongkong.myqcloud.com/2019/08/07/5d4ace314a2d7.png)\n   \n   \u53ef\u4ee5\u770b\u5230\uff0c\u6bcf\u4e00\u4f4d\u4f9d\u6b21\u76f8\u51cf\uff0c\u6700\u540e\u4f20\u8fdb\u7b54\u6848\u6570\u7ec4\uff0c\u8fd9\u4e2a\u76f8\u51cf\u7684\u8fc7\u7a0b\u5c31\u5b8c\u6210\u4e86\u3002\n   \n   \u7528\u4ee3\u7801\u8868\u793a\uff0c\u53ef\u4ee5\u8868\u793a\u6210\uff1a\n   \n   ```\n   ans[i] = na[i] - nb[i];\n   ```\n   \n   ### \u53ef\u662f\uff01\u4ee5\u4e0a\u95ee\u9898\u6ca1\u6709\u8003\u8651\u8fc7\u501f\u4f4d\u7684\u60c5\u51b5\uff01\n   \n   \u5982\u679c\u8981\u501f\u4f4d\uff0c\u6211\u4eec\u600e\u4e48\u5904\u7406\uff1f\uff1f\n   \n   \u6839\u636e\u5c0f\u5b66\u7ad6\u5f0f~~\u7684\u535a\u5927\u7cbe\u6df1~~\u6765\u770b\uff0c\u6211\u4eec\u53ef\u4ee5\u5411\u9ad8\u4f4d\u501f\u4f4d\uff0c\u7136\u540e\u518d\u76f8\u51cf\u3002\n   \n   \u8fd9\u4e2a**\u501f\u4f4d**\u5982\u679c\u8981\u8bf4\u660e\u767d\u70b9\uff0c\u5c31\u662f\u9ad8\u4f4d\u51cf\u53bb\u4e00\u4e2a$1$\uff0c\u7ed9\u4f4e\u4f4d\u4e00\u4e2a$10$\u52a0\u4e0a\u7136\u540e\u518d\u76f8\u51cf\u3002\n   \n   \u5177\u4f53\u7684\uff0c\u5982\u679c\u8fd0\u7b97$34 - 19$\uff0c$4 - 9$\u660e\u663e\u51cf\u4e0d\u591f\uff0c\u4e8e\u662f\uff1a\n   \n   ```\n\t34 - 19 = (30 + 4) - (10 + 9) = (20 + 14) - (10 + 9) \n    = (20 - 10) + (14 - 9) = 10 + 5 = 15\n\t```\n   \u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c$30$\u5f88\u660e\u663e\u501f\u4e86$10$\u7ed9$4$\uff0c\u7136\u540e$14$ - $9$\u8fdb\u884c\u8fd0\u7b97\n\t\n   \u8fd9\u4e2a\u4e1c\u897f\u653e\u5230\u6211\u4eec\u6570\u7ec4\u76f8\u51cf\u4e5f\u9002\u7528\u3002**\u7b80\u5355\u6765\u8bf4\uff0c\u5f53\u4e00\u4f4d\u51cf\u4e0d\u591f\u53e6\u4e00\u4f4d\u65f6\uff0c\u5c31\u4ece\u9ad8\u4f4d\u501f$10$\u8fc7\u6765\u518d\u51cf\uff0c\u5f53\u7136\uff0c\u9ad8\u4f4d\u4f1a\u6bd4\u539f\u6765\u5c11$1$**\u3002\n   \n   \u6211\u4eec\u518d\u7528\u8868\u683c\u4e3e\u4e2a\u4f8b\u5b50\uff1a$456789 - 147791$\n   \n   ![QQ\u6d4f\u89c8\u5668\u622a\u56fe20190807215325.png](http://zhzxoj-tuchuang-1256463233.cos.ap-hongkong.myqcloud.com/2019/08/07/5d4ad80ae92ab.png)\n   \n   \u8fd9\u6837\u5c31\u6210\u529f\u5904\u7406\u4e86\u51cf\u4f4d\u7684\u95ee\u9898\u3002\n   \n   \u7528\u4ee3\u7801\u5c31\u8fd9\u6837\u8868\u793a\uff1a\n   \n   ```\n\tint maxl = max(a.size(), b.size());\n\t/*\n\t\u627e\u5230\u4e24\u4e2a\u6570\u4e2d\u7684\u6700\u5927\u4f4d\uff0c\u4e3afor\u5faa\u73af\u670d\u52a1 \n\t\u5982\u679c\u4e24\u4e2a\u6570\u4f4d\u6570\u4e0d\u76f8\u7b49\uff0c\u76f8\u51cf\u4e5f\u65e0\u59a8\uff0c\u56e0\u4e3a\u4f4d\u6570\u5c11\u7684\u6570\u90a3\u90e8\u5206\u88ab0\u8865\u9f50\uff0c\u51cf\u4e0b\u53bb\u4e0d\u5f71\u54cd\n\t*/\n\tfor(int i = 1; i <= maxl; i ++)\n\t{\n\t\tif(na[i] < nb[i])//\u51cf\u4e0d\u591f\n\t\t{\n\t\t\tna[i + 1] --;//\u501f\u4f4d\n\t\t\tna[i] += 10;//\u5230\u4f4e\u4f4d\u53bb\n\t\t}\n\t\tans[i] = na[i] - nb[i];//\u76f8\u51cf\n\t}\n\t```\n    \n   **\u4e8e\u662f\uff0c\u76f8\u51cf\u4ee3\u7801\u5c31\u662f\u8fd9\u6837\u4e86**\n\n- ## 4\u3001\u770b\u4f3c\u5df2\u5b8c\u6210\uff0c\u8f93\u51fa\u5374\u5168\u662f\u5751\n\n\t\u4f60\u4ee5\u4e3a\u8fd9\u6837\u5c31\u505a\u5b8c\u4e86\uff1f\u8bc4\u6d4b\u59ec\u544a\u8bc9\u4f60\uff1a**Too Young Too Simple**\n    \n   **\u8f93\u51fa\u91cc\u8fd8\u6709\u4e00\u4e9b\u5751\uff0c\u628a\u4f60\u5751\u7684\u5934\u76ae\u53d1\u9ebb\u3002**\n   \n   \u5e73\u5e38\u7684\u8f93\u51fa\u65b9\u5f0f\u662f\u4ec0\u4e48\uff1f\u6211\u4eec\u73b0\u5728\u77e5\u9053\u4e86\u4e24\u4e2a\u6570\u7684\u6700\u5927\u4f4d\uff0c\u4e0a\u9762\u4e5f\u6709\u63d0\u5230\u8fc7\u3002\u6211\u4eec\u7528$maxl$\u8868\u793a\u3002\n    \n   **\u56e0\u4e3a\u6211\u4eec\u662f\u4ece\u4e2a\u4f4d\uff0c\u9010\u6e10\u9012\u589e\u5b58\u6bcf\u4f4d\u4e0a\u7684\u4fe1\u606f\uff0c\u4f46\u662f\u6211\u4eec\u8981\u4ece\u6700\u9ad8\u4f4d\u5f00\u59cb\u8f93\u51fa\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u8981\u5148\u8f93\u51fa\u6700\u9ad8\u4f4d\u3002** \u8fd9\u5012\u662f\u548c\u5b57\u7b26\u4e32\u6709\u70b9\u76f8\u4f3c\u3002\n   \n   \u4e8e\u662f\u6211\u4eec\u91c7\u7528\u5012\u7740\u8f93\u51fa\u65b9\u6cd5\uff0c\u4ee3\u7801\u5927\u6982\u662f\u8fd9\u4e2a\u6837\u5b50\u3002\n   \n   ```\n  for(int i = maxl; i > 0; i --)cout << ans[i];\n\t```\n\t\u4f46\u662f\uff01\u5751\u6765\u4e86\u3002\n   \n   - ### **\u5751\u70b91\u3001**\n   \t\n  \t**\u5982\u679c\u4f60\u7528$10001 - 10000$\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f**\n    \n  \t\u5f53\u7136\u4f60\u4f1a\u77e5\u9053\u5b83\u5e94\u8be5\u8f93\u51fa$1$\u3002\u53ef\u4f60\u7684\u8ba1\u7b97\u673a\u4e0d\u8fd9\u4e48\u8ba4\u4e3a\u3002\n    \n  \t\u4f9d\u7167\u4e0a\u9762\u7684\u8f93\u51fa\u65b9\u6cd5\uff0c\u6b64\u65f6$maxl$\u4e3a$5$\u3002**\u90a3\u4e48\uff0c\u5b83\u8f93\u51fa\u7684\u5c31\u4e0d\u662f$1$\uff0c\u800c\u662f$00001$\uff01**\uff0c\u56e0\u4e3a\u4ed6\u4f1a\u8f93\u51fa$maxl$\u6b21\uff0c\u4e5f\u5c31\u662f$5$\u6b21\uff0c\u5e76\u4e14\u662f\u4ece$ans[5]$ \u8f93\u5230 $ans[1]$\u3002**\u4f46\u6b64\u65f6\uff1a$ans[2]-ans[5]$\u90fd\u5df2\u7ecf\u4e3a$0$**\n    \n  \t\u6240\u4ee5\u6211\u4eec\u4e0d\u5f97\u4e0d\u8003\u8651\uff0c\u5728\u76f8\u51cf\u540e\u4f4d\u6570\u4e0b\u964d\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0d\u7279\u6b8a\u5904\u7406\u5c31\u4f1a\u591a\u8f93\u51fa\u82e5\u5e72\u4e2a$0$\u3002\n    \n  \t\u89e3\u51b3\u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u8f93\u51fa\u524d\u52a0\u4e0a\u8fd9\u4e48\u4e00\u53e5\u8bdd\u5373\u53ef\uff1a\n    \n  \t```cpp\n  \twhile(ans[maxl] == 0)maxl --;\n  \t//\u5982\u679c\u6700\u9ad8\u4f4d\u4e3a0\uff0c\u5c31\u4e00\u76f4\u51cf\u5c0f\u6700\u9ad8\u4f4d\uff0c\u76f4\u5230\u4e0d\u4e3a0\u4e3a\u6b62\u3002\n  \t```\n    \n  \t\u7531\u4e8e$maxl$\u76f4\u63a5\u4e3a\u8f93\u51fa\u7684$for$\u5faa\u73af\u670d\u52a1\uff0c\u51cf\u5c0f$maxl$\u76f8\u5f53\u4e8e\u51cf\u5c11\u4e86\u5faa\u73af\u8f93\u51fa\u6b21\u6570\u3002\u6700\u540e\uff0c$ans[maxl]$\u4f1a\u505c\u7559\u5728\u7b2c\u4e00\u4e2a\u4e0d\u4e3a$0$\u7684\u4f4d\u7f6e\u3002\n   \n  \t- ### **\u5751\u70b92\u3001**\n    \n  \t\u4e0a\u9762\u7684\u5751\u70b9\u63d0\u5230\u8981\u53bb\u9664\u591a\u4f59\u7684\u524d\u5bfc\u96f6\uff0c**\u4f46\u662f\uff0c\u662f\u4e0d\u662f\u6240\u6709\u7684\u524d\u5bfc\u96f6\u90fd\u662f\u591a\u4f59\u7684\uff1f**\n    \n  \t**\u8981\u662f\u7b54\u6848\u8f93\u51fa\u672c\u8eab\u5c31\u4e3a$0$\uff0c\u524d\u5bfc\u96f6\u5c31\u662f\u4ed6\u672c\u8eab\u3002\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u4ecd\u7136\u8981\u8f93\u51fa\u4e00\u4e2a$0$\u3002** \uff0c\u5982\u679c\u6211\u4eec\u4e0d\u5904\u7406\u8fd9\u4e2a\u5730\u65b9\uff0c**\u4e0a\u9762\u5904\u7406\u524d\u5bfc\u96f6\u7684\u4ee3\u7801\u5c31\u4f1a\u628a\u9700\u8981\u8f93\u51fa\u7684$0$\u4e5f\u7ed9\u5904\u7406\u6389\u3002**\n    \n  \t**\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u4e24\u51cf\u6570\u76f8\u7b49\uff0c\u7b54\u6848\u4e3a$0$\uff0c\u4e0d\u5904\u7406\u8fd9\u4e2a\u5730\u65b9\uff0c\u4ee3\u7801\u4ec0\u4e48\u90fd\u4e0d\u4f1a\u8f93\u51fa\u3002**\n    \n   \t\u6240\u4ee5\u6211\u4eec\u8981\u5728\u6700\u540e\u8f93\u51fa\u65f6\u8fd9\u4e48\u5199\uff1a\n     \n   \t```cpp\n\t if(maxl < 1)cout << \"0\";\n   \t//\u6700\u5927\u4f4d\u5c0f\u4e8e1\uff0c\u4e5f\u5c31\u662f\u6700\u9ad8\u4f4d\u4e3a0\u65f6\u8f93\u51fa\u3002\n   \t//\u6700\u9ad8\u4f4d\u4e3a0\uff0c\u663e\u800c\u6613\u89c1\u7b54\u6848\u5c31\u4e3a0\u4e86\n   \t//\u8fd9\u79cd\u60c5\u51b5\u4e0b\u524d\u9762\u4ec0\u4e48\u90fd\u4e0d\u4f1a\u8f93\u51fa\uff0c\u8fd9\u91cc\u989d\u5916\u8f93\u51fa\u4e00\u4e2a0\u5012\u4e5f\u65e0\u4f24\u5927\u96c5\n\t ```\n\t- ### **\u5751\u70b93\u3001**\n    \n   \t\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2a\u5751\uff0c**\u90a3\u5c31\u662f\uff1a\u76f8\u51cf\u53ef\u80fd\u5c0f\u4e8e$0$**\n    \n   \t\u663e\u7136\uff0c**\u6211\u4eec\u7528\u4e0a\u9762\u7684\u76f8\u51cf\u4ee3\u7801\u662f\u5904\u7406\u4e0d\u6389\u8fd9\u79cd\u60c5\u51b5\u4e0b\u7684\u3002** \u90a3\u600e\u4e48\u529e\uff1f\n    \n   \t\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981\u624b\u52a8\u52a0\u7279\u5224\u4e86\u3002\n   \t\n   \t\u7a0d\u5fae\u60f3\u4e00\u4e0b\uff0c\u53ea\u6709\u5728\u6570\u5b57 $b > a$\u7684\u60c5\u51b5\u4e0b\uff0c$a - b$\u624d\u53ef\u80fd\u4e3a\u8d1f\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u7528\u975e\u5e38\u7384\u5b66\u7684\u8fd0\u7b97\u5f0f\uff1a\n    \n   \t$(a - b)= - (b - a)$\n    \n   \t\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e2a\u64cd\u4f5c\uff1f\u6211\u4eec\u5728\u5224\u65ad $b > a$ \u6210\u7acb\u540e\uff0c\u53ef\u4ee5\u8c03\u7528\u51fd\u6570$swap$\u4ea4\u6362$a\uff0cb$\uff0c\u7136\u540e\u518d\u7528\u4e00\u4e2a\u5224\u65ad$bool$\u578b\u53d8\u91cf\u6253\u4e0a\u6807\u8bb0\u3002\n    \n   \t\u4ea4\u6362\u8fc7\u540e\uff0c\u5f88\u660e\u663e\uff0c\u8fd0\u7b97\u53d8\u4e3a $b - a$ \uff0c\u800c $b > a$\uff0c\u663e\u7136\u8fd0\u7b97\u4e0d\u4f1a\u51fa\u9519\u3002\u6700\u540e\u8f93\u51fa\u7684\u65f6\u5019\uff0c\u53ea\u9700\u8981\u5728\u524d\u9762\u52a0\u4e00\u4e2a\u8d1f\u53f7\u5373\u53ef\u3002\n    \n  \t```\n  \tbool pd;\n  \tif((a < b && a.size() == b.size()) || a.size() < b.size())\n  \t{\n\t\t swap(a, b);//swap\u51fd\u6570\u4f5c\u7528\uff1a\u4ea4\u6362\u4e24\u6570\n\t\t pd = true;//\u6253\u4e0a\u6807\u8bb0\n  \t}\n  \t//----\u4e2d\u95f4\u7701\u7565\u4e00\u5806\u8ba1\u7b97\u4ee3\u7801-----\n  \t\n  \tif(pd == true)cout << \"-\";\n  \t//b > a\u65f6\uff0ca - b < 0\uff0c\u6253\u5934\u8f93\u51fa\u8d1f\u53f7\n  \t\n  \t//----\u540e\u9762\u7701\u7565\u4e00\u5806\u8f93\u51fa\u4ee3\u7801-----\n\t\n  \t```\n  \t\u8fd9\u91cc\u9700\u8981\u4e00\u63d0\u7684\u662f\u5224\u65ad $b > a$\u7684\u65b9\u6cd5\u3002\u5f88\u663e\u7136\uff0c\u8fd9\u91cc$a\uff0cb$\u90fd\u662f\u5b57\u7b26\u4e32$string$\u578b\u3002\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u5199\uff1f\n   \n  \t\u8fd9\u91cc\u6d89\u53ca**\u5b57\u5178\u5e8f**\u7684\u6bd4\u8f83\u5927\u5c0f\u65b9\u5f0f\u3002$string$\u7c7b\u578b\u4e0d\u662f\u4e0d\u80fd\u6bd4\u5927\u5c0f\uff0c\u800c\u662f\u89c4\u5219\u4e0a\u6709\u6240\u4e0d\u540c\n    \n  \t\u7c97\u7565\u5730\u6982\u62ec\u4e00\u4e0b\uff1a\n    \n  \t**\u4ece\u6700\u9ad8\u4f4d\u6bd4\u8d77\uff0c$ASCII$\u7801\u66f4\u5927\u7684\u5b57\u7b26\u4e32\u66f4\u5927\u3002\u5982\u679c\u76f8\u7b49\uff0c\u6bd4\u6b21\u9ad8\u4f4d\uff0c\u4ee5\u6b64\u5411\u4e0b\u7c7b\u63a8\u3002**\n    \n  \t**\u6240\u4ee5\u5728$string$\u4e2d\uff0c\u4e32 $9 > 89$ \u3002\u56e0\u4e3a\u6700\u9ad8\u4f4d$9 >8$**\n   \n  \t\u5f53\u7136\uff0c\u50cf\u524d\u9762\u51e0\u4e2a\u6570\u5982\u679c\u90fd\u76f8\u7b49\uff0c\u4f4d\u6570\u66f4\u5927\u7684\u663e\u7136\u66f4\u5927\u3002\n    \n  \t\u4f8b\u5982$1234500 > 12345$\n   \n  \t**\u6240\u4ee5\u8bf4\uff1a\u5728\u4f4d\u6570\u76f8\u7b49\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5229\u7528\u5b57\u7b26\u4e32\u6bd4\u5927\u5c0f\u7684\u6027\u8d28\uff0c\u6765\u6bd4\u8f83\u4e24\u6570\u5927\u5c0f\uff0c\u4f46\u53c8\u8981\u9632\u6b62\u51fa\u73b0 $9 > 89$ \u8fd9\u79cd\u60c5\u51b5\uff0c\u6240\u4ee5\u8fd8\u8981\u4fdd\u8bc1\u4f4d\u6570\u5927\u7684\u6570\u503c\u624d\u66f4\u5927**\n    \n  \t\u7efc\u4e0a\u6240\u8ff0\uff0c\u5f97\u51fa\u8fd9\u4e48\u4e00\u53e5\u5224\u65ad\u3002\n    \n  \u5230\u6b64\u4e3a\u6b62\uff1a\u6211\u4eec\u5f97\u51fa\u6765\u4e86\u9ad8\u7cbe\u5ea6\u7684$AC$\u4ee3\u7801\n  \n- ## \u4e0a\u4ee3\u7801\uff01\n\n```cpp\n#include<bits/stdc++.h>\n#define mian main\n#define QWQ puts(\"QWQ\");\n#define MAXN 10500 \n//define\u662f\u5b8f\u5b9a\u4e49\uff0cdefine a b\u7684\u4f5c\u7528\u662f\u628aa\u4ee3\u66ff\u4e3ab\u6267\u884c\u3002 \n//\u8fd9\u91cc\u7684\u610f\u601d\u662f\u628aMAXN\u66ff\u6362\u621010500\u6267\u884c \n//\u8bf7\u65e0\u89c6\u4e0a\u65b9\u4e24\u4e2a\u7684\u5b8f\u5b9a\u4e49\uff08QWQ\uff09 \n\nusing namespace std;\n\nstring a, b;\n//\u9009\u62e9\u5b57\u7b26\u4e32\u3002\u56e0\u4e3a\u5b57\u7b26\u4e32\u50a8\u5b58\u4e86\u6bcf\u4e2a\u4e32\u7684\u957f\u5ea6\uff0c\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u3002\nint na[MAXN], nb[MAXN], ans[MAXN]; \nbool pd;\n\nint main()\n{\n    cin >> a >> b;\n\tif((a < b && a.size() == b.size()) || a.size() < b.size())\n\t{\n\t\tswap(a, b);\n\t\tpd = true;\n\t}\n    for(int i = a.size(); i > 0; i --)na[i] = a[a.size() - i] - '0';\n    for(int i = b.size(); i > 0; i --)nb[i] = b[b.size() - i] - '0';\n    //\u5c06\u5b57\u7b26\u4e32\u4e2d\u7684\u4fe1\u606f\u8f6c\u5316\u5230\u6570\u7ec4\u4e2d\uff0c\u6570\u7ec4\u6a21\u62df\u6570\u5b57\u3002 \n    int maxl = max(a.size(), b.size());\n    //\u627e\u5230\u4e24\u4e2a\u6570\u4e2d\u7684\u6700\u5927\u4f4d\uff0c\u4e3afor\u5faa\u73af\u670d\u52a1 \n\tfor(int i = 1; i <= maxl; i ++)\n\t{\n\t\tif(na[i] < nb[i])\n\t\t{\n\t\t\tna[i + 1] --;\n\t\t\tna[i] += 10;\n\t\t}\n\t\tans[i] = na[i] - nb[i];\n\t}\n\t\n\twhile(ans[maxl] == 0)maxl --;//\u9632\u6b62\u51cf\u540e\u964d\u4f4d\uff0c\u591a\u8f93\u51fa\u82e5\u5e720 \n\t\n\tif(pd == true)cout << \"-\";//b>a\u65f6\uff0ca - b < 0 \u6240\u4ee5\u6253\u4e0a\u8d1f\u53f7 \n\t\n\tfor(int i = maxl; i > 0; i --)cout << ans[i];\n\tif(maxl < 1)cout << \"0\";\n    return 0;\n}\n```\n\n- ## I Need More\uff01\uff01\uff01\n\n\t\u8fd9\u4e2a\u4ee3\u7801\u7684\u786e\u53ef\u4ee5$AC$\u6574\u9053\u9898\uff0c\u4f46\u662f\u5e76\u4e0d\u662f\u5b8c\u7f8e\u7684\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u3002\n   \n   - **\u5f53\u6211\u4eec\u9700\u8981\u591a\u6b21\u8c03\u7528\u9ad8\u7cbe\u5ea6\u8fd0\u7b97\u65f6\uff0c\u8fd9\u79cd\u5199\u6cd5\u5c31\u663e\u5f97\u9e21\u808b\u4e86\u3002**\n   \n   - **\u5e76\u4e14\uff0c\u5b83\u5e76\u4e0d\u80fd\u5904\u7406 $a$ \u6216 $b$ \u4e3a\u8d1f\u6570\u7684\u60c5\u51b5\u3002**\n   \n   - ~~\u6700\u91cd\u8981\u7684\u662f\uff0c\u6362\u79cd\u5199\u6cd5\u903c\u683c\u66f4\u9ad8~~\n   \n   \u4f46\u662f\u8fd9\u91cc\u5c31\u4e0d\u5199\u4e86\uff0c\u6211\u6302\u5728\u5e95\u4e0b\uff0c\u6709\u9700\u6c42\u7684\u53ef\u4ee5\u81ea\u884c\u4e86\u89e3\u54e6\uff08\u4e3b\u8981\u6015\u5360\u7248\u9762\u592a\u591a QWQ \uff09\n\n\t## [\u201c\u5c31\u8fd9\u4e48\u70b9\u4e1c\u897f\u6839\u672c\u65e0\u6cd5\u6ee1\u8db3\u6211\u201d](https://www.luogu.org/blog/stonejuice/gao-jing-du-jian-fa-di-op-xie-fa)\n    \n    \n- ## \u7279\u522b\u9e23\u8c22\uff1a\n\n\t- \u6d1b\u8c37\u63d0\u4f9b\u7684\u5e73\u53f0\n    \n  \t- \u7ba1\u7406\u5458\u7684\u8f9b\u52e4\u5ba1\u6838\n    \n   - \u5927\u5bb6\u7684\u652f\u6301\uff08\u6ca1\u6709\u5927\u5bb6\u7684\u652f\u6301\uff0c\u6211\u53ef\u80fd\u6ca1\u6709\u52a8\u529b\u53bb\u66f4\u65b0Updata\uff09\n   \n  \u5e0c\u671b\u5927\u5bb6\u80fd\u5728\u8bc4\u8bba\u533a\u7559\u8a00\u8ba8\u8bba\uff0c\u6211\u4f1a\u5c3d\u91cf\u770b\u7684\uff01",
        "postTime": 1542534684,
        "uid": 133426,
        "name": "stone_juice\u77f3\u6c41",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 /\u3010\u5b66\u4e60\u7b14\u8bb0\u3011-- \u9ad8\u7cbe\u5ea6\u51cf\u6cd5"
    },
    {
        "content": "\u7761\u4e00\u89c9\u9192\u6765\u53d1\u73b0Luogu\u8d44\u74f7Python\u4e86\uff01\uff01\uff01\n\n\n\u6765\u4ea4\u4e00\u53d1Python\u9898\u89e3\uff08\u9003\n\n```python\n# python3\na=input()\nb=input()\nprint(int(a)-int(b))\n```\n```python\n# python2\na=input()\nb=input()\nprint int(a)-int(b)\n```\n\n\u6d1b\u8c37\u4eca\u5929<del>\u662f\u75af\u4e86\u5427</del>\u6548\u7387\u771f\u9ad8\uff0c\u4e00\u5929\u52a0\u4e86\u4e09\u4e2a\u8bed\u8a00\u3002\u3002\u3002\u518d\u6765\u4e00\u53d1Java\u3002\u3002\u3002\n\n\n```java\nimport java.io.*;\nimport java.util.*;\nimport java.math.*;\n\n\n\n\npublic class Main\n{\n    public static void main(String args[])\n    {\n        Scanner cin = new Scanner(new BufferedInputStream(System.in));\n        BigInteger a = cin.nextBigInteger();\n        BigInteger b = cin.nextBigInteger();\n        System.out.println(a.subtract(b));\n    }\n}\n```\n\uff08\u7ba1\u7406\u628a\u6211\u4eca\u5929\u4e0a\u5348\u53d1\u7684\u90a3\u7bc7\u5220\u6389\u5457~~\u87f9\u87f9\n\n",
        "postTime": 1508049386,
        "uid": 47081,
        "name": "billchenchina",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2142 \u3010\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u636e\u6211\u6240\u77e5\uff0c\u6ca1\u6709\u9898\u89e3\u7528\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff08\u53ef\u80fd\u662f\u6211\u773c\u778e\uff09\uff0cso\u2014\u2014\n----------------------------------\n\u5176\u6b21\uff0c\u6b64 _**\u4ee3\u7801**_ \u4ec5\u4e3a\u79d1\u666e\u7528\uff0c\u90e8\u5206\u975e\u672c\u4eba** _\u539f\u521b_ **\n---------------------\n\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff0c\u987e\u540d\u601d\u4e49\uff0c\u5c06\u52a0\u51cf\u4e58\u9664\u91cd\u8f7d\uff0c\u666e\u901a\u52a0\uff08\u51cf\u4e58\u9664\u7b49\uff09\u53f7\u53d8\u4e3a\u9ad8\u7cbe\u52a0\uff08\u51cf\u4e58\u9664\uff09\uff0c\u5177\u4f53\u5982\u4e0b\uff1a\n\u91cd\u8f7d\u8fd0\u7b97\u7b26\u5206\u4e3a\u4e24\u6b65\uff1a\u91cd\u8f7d\u58f0\u660e\uff08\u8f83\u91cd\u8981\uff09\u548c\u91cd\u8f7d\u51b3\u7b56\n\n\u91cd\u8f7d\u58f0\u660e\u662f\u6307\u4e00\u4e2a\u4e0e\u4e4b\u524d\u5df2\u7ecf\u5728\u8be5\u4f5c\u7528\u57df\u5185\u58f0\u660e\u8fc7\u7684\u51fd\u6570\u6216\u65b9\u6cd5\u5177\u6709\u76f8\u540c\u540d\u79f0\u7684\u58f0\u660e\uff0c\u4f46\u662f\u5b83\u4eec\u7684\u53c2\u6570\u5217\u8868\u548c\u5b9a\u4e49\uff08\u5b9e\u73b0\uff09\u4e0d\u76f8\u540c\u3002\n\n\u5f53\u60a8\u8c03\u7528\u4e00\u4e2a\u91cd\u8f7d\u51fd\u6570\u6216\u91cd\u8f7d\u8fd0\u7b97\u7b26\u65f6\uff0c\u7f16\u8bd1\u5668\u901a\u8fc7\u628a\u60a8\u6240\u4f7f\u7528\u7684\u53c2\u6570\u7c7b\u578b\u4e0e\u5b9a\u4e49\u4e2d\u7684\u53c2\u6570\u7c7b\u578b\u8fdb\u884c\u6bd4\u8f83\uff0c\u51b3\u5b9a\u9009\u7528\u6700\u5408\u9002\u7684\u5b9a\u4e49\u3002\u9009\u62e9\u6700\u5408\u9002\u7684\u91cd\u8f7d\u51fd\u6570\u6216\u91cd\u8f7d\u8fd0\u7b97\u7b26\u7684\u8fc7\u7a0b\uff0c\u79f0\u4e3a\u91cd\u8f7d\u51b3\u7b56\u3002\n\n\u6ce8\u610f\uff0c\u8fd9\u91cc\u7528\u7684\u662f\u538b\u4f4d\u9ad8\u7cbe\n\n\u538b\u4f4d\u9ad8\u7cbe\uff1a\u8fd9\u91cc\u7528\u7684\u662f\u538b8\u4f4d\uff0c\u5373\u53d68\u4f4d\u4e3a\u4e00\u622a\u4ee58\u4f4d\u6570\u4e3a\u8fd0\u7b97\u5355\u4f4d\uff0c\u6bcf8\u4f4d\u5728\u6570\u7ec4\u91cc\u8fdb1\u4f4d\u3002\n\nbignum operator +(bignum x) const\uff1a\u8fd9\u662f\u91cd\u8f7d\u52a0\u53f7\u7684\u683c\u5f0f\uff0c\u5176\u4ed6\u7b26\u53f7\u4e5f\u4e00\u6837\n\n\u5176\u4ed6\u8bf4\u660e\u90fd\u5728\u6ce8\u91ca\u91cc\n\ncode\uff1a\n```cpp\n#include<bits/stdc++.h> \nusing namespace std;\nconst int M=100000000,P=8;//\u538b8\u4f4d\uff0c\u6240\u4ee5M=10\u76848\u6b21\u65b9\uff0cP=8\nstruct bignum \n{\n    int n[5001],l; \t\n    bignum()//\u521d\u59cb\u5316\n    {\n        l=1;\n        memset(n,0,sizeof(n));//\u521d\u59cb\u5316\u4e3a0\n    }\n    void init()//\u8bfb\u5165\n    {\n        string s;\n        cin>>s;//\u8981\u7528\u5b57\u7b26\u4e32\u8f93\u5165\uff0c\u4e0d\u80fd\u7528int\n        int now=0,ct=0,c1=1; \n        for(int i=s.length()-1;i>=0;i--)//\u5012\u5e8f\u8bfb\u5165\uff0c\u56e0\u4e3a\u9ad8\u7cbe\u5ea6\u672c\u8d28\u662f\u7ad6\u5f0f\u8fd0\u7b97\uff0c\u4ece\u6700\u672b\u5c3e\u5f00\u59cb\u7b97\n        {\n            n[now]+=(s[i]-'0')*c1;//\u5904\u7406\u6570\u4f4d\n            c1*=10;\n            ct++;\n            if(ct==P&&i!=0) //\u538b\u4f4d\uff0c\u538b8\u4f4d \n            {\n                now++;\n                ct=0;//\u538b\u4e00\u4f4d\uff0c\u91cd\u65b0\u5f00\u59cb\n                c1=1;\n            }\t\t\n        }\n        l=now+1; \n    }\n    void print()//\u8f93\u51fa\n    {\n        printf(\"%d\",n[l-1]);\n        for(int i=l-2;i>=0;i--)\t//\u6ce8\u610f\u5012\u5e8f\n        \tprintf(\"%0*d\",P,n[i]);  \n        cout<<endl;\n    }\n    bignum operator +(bignum x) const//\u91cd\u8f7d\u52a0\u53f7\t\n    {\n        bignum t=*this;\n        if(x.l>t.l)//\u4e0d\u80fd\u7528max\u51fd\u6570\uff0c\u800c\u5927\u4e8e\u662f\u91cd\u8f7d\u8fc7\u7684\n            t.l=x.l;\n        for(int i=0;i<t.l;i++)\n        {\n            t.n[i]+=x.n[i];\n            if(t.n[i]>=M)//\u8d85\u8fc7\u4e868\u4f4d\n            {\n                t.n[i+1]+=t.n[i]/M;//\u91cd\u65b0\u5f00\u59cb\u65b0\u7684\u4e00\u4f4d\n                t.n[i]%=M;//\u5220\u53bb\u672b\u5c3e8\u4f4d\n            }\n        }//\u8fdb\u4f4d\n        return t;\t\t\t\n    } \n    bool operator < (bignum x) const//\u91cd\u8f7d\u5c0f\u4e8e\u53f7\t \n    {\n        bignum t=*this;\n        if(t.l!=x.l)//\u5982\u679c\u4f4d\u6570\u4e0d\u76f8\u540c\n             return t.l<x.l;\n        for(int i=t.l-1;i>=0;i--)//else\n            if(t.n[i]!=x.n[i]) //\u4ece\u5927\u5230\u5c0f\u3001\u4ece\u9ad8\u5230\u4f4e\u5224\u65ad\n  \t\t\t\t\treturn t.n[i]<x.n[i];\n        return 0;\n    }\n    bignum operator -(bignum x) const//\u91cd\u8f7d\u51cf\u53f7\t \n    {\n        bignum t=*this;\n        if(t<x)//\u9632\u6b62\u9898\u5e72\u4e2d\u8bf4\u7684\u7279\u6b8a\u60c5\u51b5\n        {\n            printf(\"-\");//\u5148\u8f93\u51fa\ufe63\u53f7\n            swap(t,x);//\u4ea4\u6362\n        }\n        int sum=0;//\u5f53\u524d\u538b\u5230\u7b2c\u51e0\u4f4d\n        for(int i=0;i<t.l;i++)\n        {\n            t.n[i]-=x.n[i];\n            while(t.n[i]<0)//\u52a0\u5230\u5927\u4e8e\u96f6\u4f4d\u7f6e\n            {\n                t.n[i]+=M;//M\u53738\u4f4d\n                sum++;//\u8ba1\u7b97\u8981\u8fdb\u51e0\u4f4d\uff08\u51e0\u4e2a8\u4f4d\uff09\n            }\n            t.n[i+1]-=sum;//\u9000\u4f4d\n            sum=0;\n        }\n        while(!t.n[t.l-1]&&t.l>1)\n            t.l--; //\u5220\u9664\u524d\u5bfc\u96f6 \n        return t;//\u8fd4\u56de\n    }\n}a,b,c;\nint main()\n{\n    a.init();\t\n    b.init();//\u8bfb\u5165\n    c=a-b;//\u76f8\u51cf\n    c.print();//\u5b8c\u7f8e\u8f93\u51fa\uff01\n}\n```\n\u6ee1\u610f\u7684\u8bdd\u968f\u624b\u70b9\u4e2a\u8d5e\u5566\uff01\n",
        "postTime": 1561888786,
        "uid": 67958,
        "name": "\u53d6\u540d\u56f0\u96be\u75c7",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2142 \u3010\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u3011"
    },
    {
        "content": "\u6ca1\u6709\u8c03\u51fa\u6765\u65f6\u770b\u4e86\u770b\u9898\u89e3\uff0c\u53d1\u73b0\u6839\u672c\u770b\u4e0d\u61c2\uff08\u96fe\uff09\n\u4e8e\u662f\u60f3\u5199\u4e00\u4e2a\u53ef\u8bfb\u6027\u597d\u4e00\u70b9\u7684C++\u9898\u89e3\n\u6b64\u9898\u89e3\u878d\u5408\u4e86\u52a0\u51cf\u4e58\u4e09\u79cd\u8fd0\u7b97\u548c\u9ad8\u7cbe\u5ea6\u6bd4\u8f83\uff0c\u5e0c\u671b\u4f1a\u6709\u5e2e\u52a9\n\n```cpp\n#include <cstdlib>\n#include <iostream>\n#include <cstring>\n#include <string>\nusing namespace std;\n\n// \u5b9a\u4e49\u4e86\u6bcf\u4e2a\u6570\u4e2d\u5b58\u591a\u5c11\u4f4d\n#define DIGITS 20100\n\n//////////////////// \u9ad8\u7cbe\u5ea6\u6574\u6570 ////////////////////\nstruct BigInt {\n\n\t// \u4e24\u4e2a\u6784\u9020\u51fd\u6570\n    // \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f1a\u628a\u6240\u6709\u6ca1\u7528\u7684\u4f4d\u8bbe\u4e3a\u96f6\n\tBigInt() { memset(digits, 0, sizeof(digits)); }\n\tBigInt(string x) {\n\t\tmemset(digits, 0, sizeof(digits));\n\t\tfor (int i = 1; i <= x.length(); i++) {\n\t\t\tdigits[i] = x[x.length() - i] - '0';\n\t\t}   // \u6ce8\u610f\u5012\u5e8f\uff08\u4e2a\u5341\u767e\u5343\u7684\u987a\u5e8f\uff09\n\t}\n\n\t// \u8f6c\u6362\u4e3a\u53ef\u4ee5\u8f93\u51fa\u7684\u5b57\u7b26\u4e32\n\tstring toString() {\n\t\tstring str;\n\t\tint back = 0;\n        \n        // \u5148\u627e\u5230\u6700\u540e\u4e00\u4e2a\u4e0d\u662f\u96f6\u7684\u6570\u4f4d\n        //\uff08\u590d\u6742\u5ea6\u4e0d\u9ad8\u5b8c\u5168\u6ca1\u5fc5\u8981\u628a\u957f\u5ea6\u5b58\u4e0b\u6765\uff09\n\t\tfor (int i = DIGITS; i >= 1; i--) {\n\t\t\tif (digits[i] != 0) {\n\t\t\t\tback = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n        \n        // \u5012\u7740\u653e\u5230\u5b57\u7b26\u4e32\u91cc\n\t\tfor (int i = back; i >= 1; i--)\n\t\t\tstr += to_string(digits[i]);\n\t\t\n        // \u5982\u679c\u5b57\u7b26\u4e32\u91cc\u4ec0\u4e48\u4e5f\u6ca1\u6709\uff1a\u6240\u6709\u6570\u4f4d\u90fd\u662f\u96f6\uff0c\u624b\u52a8\u8d4b\u4e00\u4e2a\u96f6\n        if (str == \"\")\n\t\t\tstr = \"0\";\n            \n\t\treturn str;\n\t}\n\n\t// \u7528\u53ea\u670916\u4f4d\u7684short\n\tshort digits[DIGITS + 2];\n\n};\n\n//////////////////// \u9ad8\u7cbe\u5ea6\u52a0\u6cd5 ////////////////////\nBigInt add(BigInt x, BigInt y) {\n\tBigInt sum;\n\tint inc = 0; // \u8fdb\u4f4d\u6807\u8bb0\n    \n    // \u4ece\u6700\u4f4e\u4f4d\u5f00\u59cb\u7d2f\u52a0\n\tfor (int i = 1; i <= DIGITS; i++) {\n    \t// \u52a0\u8d77\u6765\n\t\tsum.digits[i] = x.digits[i] + y.digits[i] + inc;\n\t\t\n        // \u5982\u679c\u7ed3\u679c\u5927\u4e8e\u4e86\u5341\uff1a\u8981\u8fdb\u4f4d\n        if (sum.digits[i] >= 10) {\n\t\t\tinc = 1;               // \u6807\u8bb0\u8fdb\u4f4d\n\t\t\tsum.digits[i] -= 10;   // \u628a\u7ed3\u679c\u51cf\u53bb\u5341\n\t\t}\n\t\telse // \u5982\u679c\u4e0d\u9700\u8981\u8fdb\u4f4d\uff0c\u628a\u6807\u8bb0\u6e05\u7a7a\n\t\t\tinc = 0;\n\t}\n\treturn sum;\n}\n\n//////////////////// \u9ad8\u7cbe\u5ea6\u4e58\u6cd5 ////////////////////\n//////// \u6ce8\u610f\uff1a\u5728\u6781\u7aef\u6570\u636e\u4e0b\u987b\u9002\u5f53\u653e\u5bbd\u4fdd\u5b58\u4f4d\u6570 ////////\nBigInt multply(BigInt x, BigInt y) {\n\tBigInt ans, tmp;\n    \n    // \u4e3b\u8981\u601d\u8def\u5c31\u662f \u53d6x\u7684\u6bcf\u4e00\u4f4d\u548cy\u76f8\u4e58\n\t// \u7136\u540e\u5c06\u7ed3\u679c\u7d2f\u52a0\u8d77\u6765\n    // \u4ee5\u4e0b\u7684\u4ee3\u7801\u5c06\u6bcf\u4e00\u4f4d\u5206\u522b\u76f8\u4e58\u7684\u7ed3\u679c\u653e\u5728tmp\u4e2d\n    // \u518d\u7d2f\u52a0\u5230ans\u4e2d\n    \n    for (int i = 1; i <= DIGITS; i++) {\n\t\tif (x.digits[i] == 0)  // \u5982\u679cx\u7684\u8fd9\u4e00\u4f4d\u662f\u96f6\n\t\t\tcontinue;          // \u5c31\u53ef\u4ee5\u8df3\u8fc7\u4e86\n        \n        // \u6e05\u7a7atmp\n\t\tmemset(tmp.digits, 0, sizeof(tmp.digits));\n        \n        // \u66b4\u529b\u76f8\u4e58\n\t\tfor (int j = 1; j <= DIGITS; j++)\n\t\t\ttmp.digits[i + j - 1] = y.digits[j] * x.digits[i];\n            // \u8fd9\u91cc\u5c06\u4e58\u79ef\u653e\u5230i\u4f4d\u4ee5\u540e\uff08\u60f3\u60f3\u7ad6\u5f0f\u4e58\u6cd5\uff09\n        \n        // \u5904\u7406\u8fdb\u4f4d\n\t\tfor (int j = 1; j <= DIGITS; j++) {\n\t\t\ttmp.digits[j + 1] += tmp.digits[j] / 10;\n\t\t\ttmp.digits[j] %= 10;\n\t\t}\n        \n        //\u7d2f\u52a0\n\t\tans = add(ans, tmp);\n\t}\n\treturn ans;\n}\n\n// \u9ad8\u7cbe\u5ea6\u6bd4\u8f83\u7684\u4e09\u79cd\u7ed3\u679c\nenum Result {\n\tLess,   // X\u5c0f\u4e8eY\n\tEqual,  // X\u7b49\u4e8eY\n\tGreater // X\u5927\u4e8eY\n};\n\n//////////////////// \u9ad8\u7cbe\u5ea6\u6bd4\u8f83 ////////////////////\nResult compare(BigInt x, BigInt y) {\n\t// \u8fd9\u91cc\u7684back\u6307\u7684\u662f\u6700\u9ad8\u7684\u975e\u96f6\u4f4d\u7684\u4f4d\u6570\n    //\uff08\u4e5f\u53ef\u4ee5\u770b\u6210\u957f\u5ea6\uff09\n\tint backX = 0, backY = 0;\n    \n    // \u66b4\u529b\u73b0\u573a\u6c42\u957f\u5ea6\n\tfor (int i = DIGITS; i >= 1; i--) {\n\t\tif (x.digits[i] != 0) {\n\t\t\tbackX = i;\n\t\t\tbreak;\n\t\t}\n\t} // \u6c42\u5b8cX\u6c42Y\n\tfor (int i = DIGITS; i >= 1; i--) {\n\t\tif (y.digits[i] != 0) {\n\t\t\tbackY = i;\n\t\t\tbreak;\n\t\t}\n\t}\n    \n    // \u5982\u679cX\u6bd4Y\u957f\uff1aX\u5927\u4e8eY\n\tif (backX > backY)\n\t\treturn Greater;\n    \n    // \u5982\u679cX\u6bd4Y\u77ed\uff1aX\u5c0f\u4e8eY\n\telse if (backX < backY)\n\t\treturn Less;\n\n    // \u4e00\u6837\u957f\uff1a\u4ece\u6700\u9ad8\u4f4d\u5f00\u59cb\u9010\u4f4d\u6bd4\u8f83\n\telse {\n\t\tfor (int i = backX; i >= 1; i--) {\n        \t// \u6bcf\u4e00\u6b21\u80fd\u591f\u5faa\u73af\u5230\u8fd9\u91cc\u90fd\u8bf4\u660e\u4e86\n            // X\u548cY\u4e4b\u524d\u7684\u4f4d\u5168\u90fd\u4e00\u6837\n            \n        \t// \u5982\u679c\u8fd9\u4e00\u4f4d\u4e0aX\u6bd4Y\u5927\uff1aX\u5927\u4e8eY\n\t\t\tif (x.digits[i] > y.digits[i])\n\t\t\t\treturn Greater;\n                \n            // \u5982\u679c\u8fd9\u4e00\u4f4d\u4e0aX\u6bd4Y\u5c0f\uff1aX\u5c0f\u4e8eY\n\t\t\telse if (x.digits[i] < y.digits[i])\n\t\t\t\treturn Less;\n\t\t}\n        // \u4e4b\u524d\u7684\u6240\u6709\u6bd4\u8f83\u90fd\u6ca1\u6709\u7ed3\u679c\uff1a\n        // X\u4e0eY\u5728\u6bcf\u4e00\u4f4d\u4e0a\u90fd\u76f8\u7b49\n\t\treturn Equal;\n\t}\n}\n\n//////////////////// \u9ad8\u7cbe\u5ea6\u51cf\u6cd5 ////////////////////\nBigInt minusX(BigInt x, BigInt y) {\n\tBigInt sum;\n\tint inc = 0; // \u501f\u4f4d\u6807\u5fd7\n    \n    // \u4ece\u6700\u4f4e\u4f4d\u5f00\u59cb\u8ba1\u7b97\n\tfor (int i = 1; i <= DIGITS; i++) {\n    \t// \u76f4\u63a5\u51cf\n\t\tsum.digits[i] = x.digits[i] - y.digits[i] + inc;\n        \n        //\u5982\u679c\u8fd9\u4e00\u4f4d\u7684\u7ed3\u679c\u5c0f\u4e8e\u96f6\uff1a\u8981\u501f\u4f4d\n\t\tif (sum.digits[i] < 0) {\n\t\t\tinc = -1;            //\u6807\u8bb0\u501f\u4f4d\n\t\t\tsum.digits[i] += 10; //\u628a\u7ed3\u679c\u52a0\u4e0a\u5341\n\t\t}\n\t\telse // \u5982\u679c\u4e0d\u9700\u8981\u501f\u4f4d\uff0c\u628a\u6807\u8bb0\u6e05\u7a7a\n\t\t\tinc = 0;\n\t}\n\treturn sum;\n}\n\nstring s1, s2;\nBigInt x, y;\n\n/////////// \u4f4e\u8c03\u7684\u4e3b\u51fd\u6570 ///////////\nint main(int argc, char* argv[]) {\n\n    // \u4ee5\u5b57\u7b26\u4e32\u8f93\u5165\n\tcin >> s1 >> s2;\n\t\n    // \u751f\u6210\u9ad8\u7cbe\u5ea6\u6570\n\tx = BigInt(s1);\n\ty = BigInt(s2);\n\n\t// \u5224\u65ad\u7ed3\u679c\u662f\u5426\u4f1a\u662f\u8d1f\u6570\n\tif (compare(x, y) == Less) { // \u5982\u679c\u88ab\u51cf\u6570\u5c0f\u4e8e\u51cf\u6570\n\t\tcout << \"-\";             // \u5148\u8f93\u51fa\u4e00\u4e2a\u8d1f\u53f7\n\t\tswap(x, y);              // \u4ea4\u6362\u88ab\u51cf\u6570\u4e0e\u51cf\u6570\n\t}\n\n\t// \u8ba1\u7b97\u5e76\u8f93\u51fa\n\tcout << minusX(x, y).toString() << endl;\n\n\treturn 0;\n}\n```",
        "postTime": 1525005334,
        "uid": 53151,
        "name": "\u6d29\u77e2\u8bf9\u8bbf\u5b50",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2142 \u3010\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u3011"
    },
    {
        "content": "\u867d\u7136\u6211\u8d85\u83dc\uff0c\u4f46\u8fd9\u9053\u9898\u5b9e\u5728\u6ca1\u6709\u4ec0\u4e48\u96be\u5ea6\uff0c\u4e3b\u8981\u662f\u5728\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u79cd\u5c06\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u8f6c\u6362\u4e3a\u9ad8\u7cbe\u5ea6\u52a0\u6cd5\uff0c\u5de7\u5999\u907f\u514d\u51cf\u6cd5\u501f\u4f4d\u7684\u65b9\u6cd5\u3002\n\u5728\u7279\u5b9a\u60c5\u51b5\u4e0b\u4e5f\u80fd\u4f18\u5316\u7a0b\u5e8f\u901f\u5ea6\u3002\n\n\u9996\u5148\u8bb2\u539f\u7406\u3002\n\u6bd4\u5982\u6211\u4eec\u7528253-76\uff0c\u5047\u5982\u76f4\u63a5\u505a\u51cf\u6cd5\u7684\u8bdd\uff0c\u4ece\u672b\u5c3e\u5f00\u59cb\u51cf\uff0c3-6 = -3\uff0c\u9700\u8981\u5411\u524d\u9762\u76845\u501f\u4f4d\u30025\u53d8\u62104\uff0c4-7=-3\u8fd8\u9700\u8981\u501f\u4f4d\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u6700\u540e\u7ed3\u679c\u662f77\n\n\u501f\u4f4d\u5c31\u5f88\u70e6\u3002\u6709\u4ec0\u4e48\u529e\u6cd5\u80fd\u907f\u514d\u501f\u4f4d\u5462\uff1f\n\u5176\u5b9e\uff0c253 - 76 = 253 + (999 - 76) + 1 - 1000;\n\u8fd9\u4e2a\u5e94\u8be5\u4e0d\u96be\u7406\u89e3\uff0c\u8865\u4e861+999\uff0c\u6700\u540e\u51cf\u53bb1000.\n\u8fd9\u4e48\u505a\u7684\u597d\u5904\u662f\uff0c999-76\u7684\u8fc7\u7a0b\u4e0d\u9700\u8981\u8fdb\u884c\u501f\u4f4d\u3002\u53ea\u8981\u76f4\u63a5\u51cf\u5c31\u884c\u4e86\u3002\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u628a\u4e00\u6b21\u51cf\u6cd5\u8f6c\u5316\u4e3a\u4e00\u6b21\u52a0\u6cd5\uff0c\u4e00\u6b21\u4e0d\u9700\u8981\u501f\u4f4d\u7684\u51cf\u6cd5\u3002(-1000\u90a3\u4e2a\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u67d0\u4e9b\u65b9\u6cd5\u6d88\u9664\u8fdb\u4f4d)\n\n\u4e0b\u9762\u8d34\u4ee3\u7801\uff0c\u4ee3\u7801\u91cc\u4e5f\u6709\u6ce8\u91ca\u3002\n\n\u7a0d\u7a0d\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u8981\u6c42\u88ab\u51cf\u6570\u6bd4\u51cf\u6570\u66f4\u5927\u3002\u8fd9\u4e5f\u4e0d\u96be\uff0c\u7b80\u5355\u5224\u65ad\u4e00\u4e0b\uff0c\u5982\u679c\u4e0d\u884c\u5c31\u5bf9\u8c03\u51cf\u6570\u548c\u88ab\u51cf\u6570\uff0c\u5e76\u6807\u8bb0\u8d1f\u53f7\u5c31\u884c\u4e86\u3002\n```c\n\n#include<stdio.h>\n#include<stdlib.h>\ntypedef unsigned char BYTE;\n\nBYTE a[10005] = { 0 };\nBYTE b[10005] = { 0 };\nBYTE *pa = 0, *pb = 0;\nint la, lb;\nint sign;//\u6807\u660e\u7ed3\u679c\u6b63\u8d1f\u53f7\u7528\u7684\u3002 \nint main()\n{\n\tscanf_s(\"%s\", a,10005);\n\tscanf_s(\"%s\", b,10005);\n\t//\u901a\u8fc7strlen\u5f97\u51fa\u957f\u5ea6\uff0c\u957f\u7684\u90a3\u4e2a\u6570\u5b57\u5927\u3002\u4e00\u6837\u957f\u6bd4\u8f83\u9996\u4f4d\uff0c\u518d\u4e00\u6837\u7ee7\u7eed\u5faa\u73af\u7b2c\u4e8c\u4f4d\u76f4\u5230\u6bd4\u51fa\u5927\u5c0f\u3002\uff08\u6709\u4e00\u4e2a\u4f18\u5316\uff0c\u5982\u679c\u6709\u4e00\u4f4d\u4e00\u6837\u90a3\u4e48\u53ef\u4ee5\u76f4\u63a5\u6d88\u6389\uff09\n\tla = strlen((char *)a);\n\tlb = strlen((char *)b);\n\n\t//\u5168\u90e8\u51cf\u53bb'0'\n\tint i;\n\tfor (i = 0; i<la; i++)\n\t{\n\t\ta[i] -= '0';\n\t}\n\tfor (i = 0; i<lb; i++)\n\t{\n\t\tb[i] -= '0';\n\t}\n\tif (la>lb)\n\t{\n\t\t//a\u5927\uff0c\u6b63\n\t\tsign = 1;\n\t}\n\telse if (la < lb)\n\t{\n\t\tsign = 0;//\u8d1f\u53f7 \n\t}\n\telse\n\t{\n\t\t//\u5f00\u59cb\u5faa\u73af\u6bd4\u8f83\uff0c\u6709\u76f8\u7b49\u7684\u5c31\u76f4\u63a5\u5168\u90e8\u780d\u6389\u3002\n\t\tsign = -1;//\u6807\u8bb0\u3002\u5982\u679c\u51fa\u6765\u8fd8\u662f-1\uff0c\u8bf4\u660e\u4e24\u6570\u76f8\u7b49 \n\t\tint BitCheckTag;\n\t\tfor (BitCheckTag = 0; BitCheckTag<la; BitCheckTag++)//\u8fd9\u91ccla\u5e94\u8be5\u5c31\u662flb\n\t\t{\n\t\t\tif (a[BitCheckTag] > b[BitCheckTag])\n\t\t\t{\n\t\t\t\t//a > b\n\t\t\t\tsign = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (a[BitCheckTag] < b[BitCheckTag])\n\t\t\t{\n\t\t\t\tsign = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (sign == -1)\n\t\t{\n\t\t\tprintf(\"0\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\n\t//\u8fd9\u91cc\u5e94\u8be5\u5df2\u7ecf\u6807\u8bb0\u597d\u4f4d\u6570\u4e86\u3002\n\tif (sign == 1)\n\t{\n\t\tpa = a;\n\t\tpb = b;\n\t}\n\telse\n\t{\n\t\tpa = b;\n\t\tpb = a;\n\t\tint buf;\n\t\tbuf = la;\n\t\tla = lb;\n\t\tlb = buf;\n\t}\n\t//\u73b0\u5728pa\u5c31\u662f\u5927\u7684\u90a3\u4e2a\uff0c\u5f00\u59cb\u51cf\u5427\n\n\t//\u4e3a\u4e86\u907f\u514d\u501f\u4f4d\uff0c\u91c7\u7528\u6c42\u8865\u7684\u65b9\u6cd5\u3002\u4e0b\u9762\u662f\u4f8b\u5b50\n\n\t//253 - 76 = 253 + (999 - 76) + 1 -1000 \n\t//\u6211\u4eec\u8981\u505a\u7684\u662f\u5bf9\u51cf\u6570\u6c42\u8865\uff0c\u4f4d\u6570\u4ee5\u88ab\u51cf\u6570\u7684\u4e3a\u51c6\u3002\n\n\t//\u5c06 pb \u540e\u79fb\uff0c\u548c pa \u7684\u7ed3\u5c3e\u5bf9\u9f50\n\tmemmove(pb + la - lb, pb, lb);\n\tmemset(pb, 0, la - lb);\n\n\t//\u6309la\u7684\u957f\u5ea6\u7ed9pb\u505a\u6c42\u8865\n\tfor (i = 0; i < la; i++)//la\u53d6\u4e0d\u5230\uff1f \n\t{\n\t\tpb[i] = 9 - pb[i];\n\t}\n\n\tpb[la - 1]++;\n\t//\u8865\u4e0a\u52a0\u4e00\u3002\u5982\u679c\u6709\u8d85\u8fc710\u4e5f\u4e0d\u7528\u7ba1\uff0c\u548c\u88ab\u51cf\u6570\u76f8\u52a0\u7684\u65f6\u5019\u4f1a\u5904\u7406\u7684\u3002\n\n\tfor (i = la - 1; i >= 0; i--)\n\t{\n\t\tpa[i] += pb[i];\n\t\tif (pa[i] >= 10)\n\t\t{\n\t\t\tpa[i] -= 10;\n\t\t\tif (i != 0)\n\t\t\t{\n\t\t\t\tpa[i - 1] ++;\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (i = 0; i<la; i++)\n\t{\n\t\tpa[i] += '0';\n\t}\n\n\tif (sign == 0)\n\t{\n\t\tprintf(\"-\");\n\t}\n\t//\u53bb\u9664\u524d\u5bfc0\n\tfor (i = 0; i<la; i++)\n\t{\n\t\tif (pa[i] != '0')\n\t\t{\n\t\t\tprintf((char *)pa + i);\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1533829727,
        "uid": 105287,
        "name": "kernel_bin",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2142 \u3010\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u3011"
    },
    {
        "content": "\u5148\u5224\u65ad\u8bfb\u5165\u7684\u4e24\u4e2a\u6570\u76f8\u51cf\u4f1a\u4e0d\u4f1a\u4ea7\u751f\u8d1f\u6570\uff0c\u5982\u679c\u4f1a\u5c31\u8f93\u51fa\u8d1f\u53f7\u5e76\u4ea4\u6362\u5b83\u4eec\u3002\n\n\u63a5\u7740\u518d\u628a\u5b57\u7b26\u8f6c\u5316\u6210\u6570\u5b57\uff0c\u4ece\u4f4e\u4f4d\u7b97\u5230\u9ad8\u4f4d\uff0c\u6a21\u62df\u7ad6\u5f0f\u8fd0\u7b97\u7684\u8fc7\u7a0b\u3002\n\n\u6700\u540e\u6ce8\u610f\u8f93\u51fa\u65f6\u4e0d\u80fd\u8f93\u51fa\u524d\u5bfc\u96f6\u3002\n\n\u00b7\u00b7\u00b7cpp\n\n\n\n\n\n\n    \n    \n    \n```cpp\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <iostream>\n#include <algorithm>\nusing namespace std; \nconst int maxn = 10010; \nint len1, len2; \nint a[maxn], b[maxn]; \nstring s1, s2; \nvoid swap(string &a, string &b)  //\u4ea4\u6362\u4e24\u4e2a\u5b57\u7b26\u4e32 \n{\n    string t; \n    t = a; \n    a = b; \n    b = t; \n}\nbool compare(string a, string b) //\u5224\u65ada\u662f\u5426\u5c0f\u4e8eb \n{\n    if (a.size() < b.size()) return true;  //\u5f53a\u7684\u4f4d\u6570\u6bd4b\u5c0f\u65f6\uff0ca\u6bd4b\u5c0f \n    if (a.size() > b.size()) return false; //\u5f53a\u7684\u4f4d\u6570\u6bd4b\u5927\u65f6\uff0ca\u6bd4b\u5927\n    for (int i = 0; i < a.size(); ++i)     //\u5269\u4f59\u60c5\u51b5\u5c31\u662fa\u7684\u4f4d\u6570\u4e0eb\u76f8\u540c \n    {\n        if (a[i] > b[i]) return false;     //\u9010\u4f4d\u6bd4\u8f83 \n        if (b[i] > a[i]) return true; \n    }\n    return false; //\u6700\u540e\u5f53a\u4e0eb\u7684\u5404\u4e2a\u4f4d\u7684\u6570\u5b57\u90fd\u76f8\u540c\u65f6\uff0ca\u7b49\u4e8eb \n}\nint main()\n{\n    cin >> s1;           //\u8bfb\u5165\u4e0d\u89e3\u91ca \n    cin >> s2; \n    if (compare(s1, s2)) //\u5982\u679cs1\u5c0f\u4e8es2\uff0c\u5c31\u8f93\u51fa\u7b26\u53f7\uff0c\u5e76\u4ea4\u6362\u5b83\u4eec \n    {\n        swap(s1, s2);  \n        putchar('-'); \n    }\n    len1 = s1.size(); \n    len2 = s2.size(); \n    for (int i = 0; i < len1; ++i) a[len1 - i] = s1[i] - '0'; \n    for (int i = 0; i < len2; ++i) b[len2 - i] = s2[i] - '0'; \n    //\u5c06\u5b57\u7b26\u8f6c\u5316\u4e3a\u6570\u5b57 \n    for (int i = 1; i <= len1; ++i) //\u4ece\u4f4e\u4f4d\u7b97\u5230\u9ad8\u4f4d\uff0c\u6a21\u62df\u7ad6\u5f0f\u7684\u8fd0\u7b97\u8fc7\u7a0b \n    {\n        a[i] -= b[i];               //\u76f4\u63a5\u7528a\u50a8\u5b58\u7ed3\u679c\uff1aa[i]=a[i]-b[i] \n        if (a[i] < 0)               //\u5982\u679c\u4e0d\u591f\u51cf\uff08\u51cf\u5b8c\u662f\u8d1f\u6570\uff09 \n        {                           \n            a[i + 1]--;             //\u5c31\u5411\u9ad8\u4f4d\u501f\u4e00 \n            a[i] += 10; \n        }\n    }\n    while (a[len1] == 0 && len1 > 1) len1--; //\u53bb\u9664\u524d\u5bfc\u96f6\n    //\u6ce8\u610f\u4e0d\u80fd\u628a\u5355\u4e2a\u96f6\u7ed9\u53bb\u6389 \n    for (int i = len1; i >= 1; --i)          //\u4ece\u9ad8\u4f4d\u5230\u4f4e\u4f4d\u8f93\u51fa\n      printf(\"%d\", a[i]); \n    return 0; \n}\n\u00b7\u00b7\u00b7\n```",
        "postTime": 1471750286,
        "uid": 20729,
        "name": "\u6211\u597d\u84bb\u5440",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2142 \u3010\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u3011"
    },
    {
        "content": "**\u672c\u9898\u8bb2\u89e3\u5c3d\u5728\u4ee3\u7801\u4e2d**\n\n\\_\u4ee3\u7801\u5949\u4e0a\\_\uff1a\n\n```cpp\n#include <iostream>\n#include <cmath>\n#include <cstring> \nusing namespace std;\nint main()\n{\n    char a[100010],b[100010];//\u8bbe\u4e24\u4e2a\u5b57\u7b26\u4e32 \n    cin>>a>>b;//\u8bfb\u5165\u4e24\u4e2a\u5b57\u7b26\u4e32 \n    int c[100010],d[100010],h[100010],n1,n2,i,f=0,l=0;\n    n1=strlen(a);//\u6c42\u5b57\u7b26\u4e32\u957f\u5ea6 \n    n2=strlen(b);\n    for(i=0;i<n1/2;i++) swap(a[i],a[n1-1-i]);\n    for(i=0;i<n2/2;i++) swap(b[i],b[n2-1-i]);\n    for(i=0;i<n1;i++) c[i]=a[i]-'0';//\u628a\u5b57\u7b26\u4e32a\u7684\u5b57\u7b26\u8f6c\u5316\u4e3a\u6570\u5b57\u5b58\u5230\u6570\u7ec4c\u5f53\u4e2d\u3002\u5176\u4e2d\u201c-\u20180\u2019\u201d\u4e3a\u8f6c\u6362\u65b9\u6cd5 \n    for(i=0;i<n2;i++) d[i]=b[i]-'0';\n    if(n2>n1)//\u8fd9\u4e00\u6b65\u662f\u5224\u65ad\u90a3\u4e2a\u6570\u957f\uff0c\u54ea\u4e2a\u5c31\u5927\uff0c\u5c31\u7528\u54ea\u4e2a\u505a\u88ab\u51cf\u6570\u5b58\u5230\u6570\u7ec4c\u4e2d\uff0c\u54ea\u4e2a\u5c0f\u5c31\u5b58\u5230d\u4e2d \n    {\n        for(i=0;i<n2;i++) swap(c[i],d[i]);//\u628a\u4e24\u6570\u4ea4\u6362\uff0cswap\u4e3a\u4ea4\u6362\u51fd\u6570 \n        f=1;//\u8bbe\u4e00\u4e2a\u65d7\u5e1c\uff0c\u4ee5\u540e\u5982\u679cf=1\u5c31\u8bf4\u660e\u8fd9\u6570\u88ab\u51cf\u6570\u6bd4\u51cf\u6570\u5c0f\uff0c\u662f\u8d1f\u6570\u3002 \n    }\n    if(n1>n2) swap(n1,n2); //\u53d6\u957f\u7684\u505afor\u5faa\u73af\u6761\u4ef6 \n    for(i=0;i<n2;i++) h[i]=c[i]-d[i];  \n    for(i=0;i<n2;i++)//\u8fd9\u90e8\u5c31\u662f\u501f\u4f4d \n    {\n         if(h[i]<0)\n         { \n             h[i]=10+h[i];\n             h[i+1]--; \n         } \n    }\n    if(f==1) cout<<\"-\";//\u5982\u679cf\u7b49\u4e8e\u4e00\u4e5f\u5c31\u662f\u7ed3\u679c\u4e3a\u8d1f\u6570\uff0c\u6253\u5370\u201c-\u201d \n    for(i=n2-1;i>=0;i--)//\u8fd9\u6b65\u5f88\u91cd\u8981\uff01 \u8fd9\u662f\u5728\u8f93\u51fa\u65f6\u628a\u9996\u4f4d\u76840\u90fd\u53bb\u6389 \n    {\n         if(l==0)//\u8bbe\u4e86\u4e00\u4e2al\uff0c\u5982\u679cl\u4e3a0\u610f\u5473\u7740\u8fd8\u6ca1\u6709\u78b0\u5230\u975e\u96f6\u6570\uff0c\u4e5f\u5c31\u662f\u67090\u5c31\u8981\u53bb\u6389\u76840 \n         {\n             if(h[i]!=0) //\u5982\u679c\u8fd9\u6570\u4e0d\u4e3a\u96f6 \n             {\n                 l=1;//l=1\u8868\u660e\u78b0\u5230\u4e86\u975e\u96f6\u6570\u4e86\u4ee5\u540e\u76840\u6709\u5b9e\u9645\u610f\u4e49\u8981\u6253\u5370\u51fa\u6765 \n                 cout<<h[i];//\u6253\u5370\u6b64\u6570 \n                 continue;//\u7136\u540e\u8df3\u51fa\u672c\u6b21\u5faa\u73af \n             } \n         }\n         if(l!=0)//\u5982\u679cl\u4e0d\u7b49\u4e8e0\uff0c\u5c31\u8bf4\u660e\u8fd9\u65f6\u76840\u6709\u5b9e\u9645\u610f\u4e49\uff0c\u8981\u6253\u5370\u51fa\u6765 \n         {\n             cout<<h[i];\n         }\n    }\n}\n//\u4e00\u5b9a\u8981\u770b\u61c2\u518d\u6253\uff0c\u522b\u6284\u9898\u89e3\uff0c\u8fd9\u6837\u4f1a\u5bb3\u4e86\u81ea\u5df1\uff01\uff01\n\n```",
        "postTime": 1499690270,
        "uid": 34939,
        "name": "Hammer_cwz_77",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2142 \u3010\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u3011"
    },
    {
        "content": "## PY\u5927\u6cd5\u597d\uff01\n\u5f88\u591a\u8fd9\u79cd\u76f4\u63a5\u9ad8\u7cbe\u5ea6\u7684\u9898\u76ee\u90fd\u662f\u53ef\u4ee5\u76f4\u63a5\u7528Python\u5199\u7684\u54c8\u54c8\u54c8\n\n\u6211\u662f\u4e0d\u4f1a\u8bf4\u51faPython\u81ea\u5e26\u9ad8\u7cbe\u5ea6\u7684\u5b9e\u60c5\u7684\u54c8\u54c8\u54c8\n```python\na = input()\nb = input()\nprint(int(a)-int(b))\n```\n\n\u54c8\u54c8\u54c8\u60f3\u4e0d\u5230\u5427",
        "postTime": 1556259064,
        "uid": 57677,
        "name": "Morski",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2142 \u3010\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u3011"
    },
    {
        "content": "\u5728\u6b64\u9898\u4e2d\u7528\u5230\u4e86 struct\u7ed3\u6784\u4f53\u914d\u5408string\u4f7f\u7528\u3002\n\u5e9f\u8bdd\u4e0d\u591a\uff0c\u4e0a\u4ee3\u7801\u3002\n```\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nstruct stu{\n    string a1;\n    int t;    //\u7528 t \u505a\u6807\u8bb0\n};\nint cmp(stu x, stu y) {\n    if(x.a1.size() < y.a1.size()) return 1;  //\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n    else if(x.a1.size() == y.a1.size() && x.a1 < y.a1) return 1;\n    else return 0;\n}\nint a[1000001], b[1000001];\nint main() {\n    stu p[2];\n    for(int i = 0; i < 2; i++) {   //\u8f93\u5165\n        cin >> p[i].a1;\n        p[i].t = i;         //\u505a\u6807\u8bb0\uff0c\u6700\u540e\u4f1a\u7528\u5230\n    }\n    if(p[0].a1 == p[1].a1) {  //\u7279\u5224\uff1a \u5f53\u4e24\u6570\u76f8\u7b49 \u5219\u8f93\u51fa0\n        cout << 0 << endl;\n        return 0;\n    }\n    sort(p, p + 2, cmp);\n    int len1 = p[1].a1.size(), len0 = p[0].a1.size(), len = len1;    //\u6b64\u65f6p[1].a1 \u5927\u4e8e p[0].a1, len1 \u5927\u4e8e len2\n    for(int i = len1 - 1; i >= 0; i--) {\n        a[len1 - i - 1] = p[1].a1[i] - '0';   //char\u578b \u8f6c\u5316\u4e3a int \u578b\n    }\n    for(int i = len0 - 1; i >= 0; i--) {\n        b[len0 - i - 1] = p[0].a1[i] - '0';  //char \u578b\u8f6c\u5316\u4e3a int \u578b\n    }\n    for(int i = 0; i < len; i++) {\n        if(a[i] < b[i]) {  \n            a[i + 1] -= 1;\n            a[i] += 10;\n        }\n        a[i] -= b[i];\n    }\n    while(a[len - 1] == 0) len--;\n    if(p[1].t > p[0].t) {  //\u5982\u679c\u6ee1\u8db3 p[1].t > p[0].t \u8bc1\u660e\u88ab\u51cf\u6570 \u6bd4 \u51cf\u6570 \u5c0f\uff0c \u5219\u6700\u540e\u7ed3\u679c\u4e3a\u8d1f\u6570\n        cout << '-';\n    }\n    for(int i = len - 1; i >= 0; i--) {\n        cout << a[i];\n    }\n    printf(\"\\n\");\n    return 0;\n}\n```\n\u5e0c\u671b\u6b64\u9898\u89e3\u5bf9\u4f60\u6709\u6240\u5e2e\u52a9\n\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\uff0c\u6c42\u8fc7",
        "postTime": 1555403655,
        "uid": 162850,
        "name": "liangsheng",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2142 \u3010\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u3011"
    },
    {
        "content": "## \u8fd9\u4e00\u9053\u9898\u76ee\u6211\u7528\u7684\u662f\u4e00\u79cd\u5f88\u7b80\u5355\u660e\u4e86\u7684\u65b9\u6cd5~~\uff08\u5176\u5b9e\u662f\u56e0\u4e3a\u5176\u4ed6\u5927\u4f6c\u7684\u770b\u4e0d\u61c2\uff09~~\n### \u4e3b\u8981\u662f\u7528\u4e86c++\u5bf9\u4e8e\u5b57\u7b26\u4e32\u6765\u8bf4\u5341\u5206\u795e\u5947\u7684+\u53f7\u6765\u901a\u8fc7\u52a00\u6765\u5bf9\u9f50\u4e2a\u4f4d\uff08\u65b9\u4fbf\u8ba1\u7b97\uff09\uff0c\u540c\u65f6\u8981\u7528\u5faa\u73af\u52a0\u4e0a\u4e00\u4e2a\u5f00\u5173\u6765\u770b\u662f\u5426\u9700\u8981\u8fdb\u884c\u9000\u4f4d\uff0c\u8fd8\u6709\uff0c\u5982\u679ca<b\uff0c\u53ef\u4ee5\u5148\u8f93\u51fa\u51cf\u53f7\u7136\u540e\u4ea4\u6362a\u548cb\u6765\u8ba1\u7b97\uff0c\u5269\u4e0b\u7684\u5c31\u6bd4\u8f83\u7b80\u5355\u4e86\uff0c\u770b\u4e00\u4e0b\u4ee3\u7801\u7684\u6ce8\u91ca\u5c31\u53ef\u4ee5\u4e86\u3002\n\u5949\u4e0a\u4ee3\u7801\uff08\u5e94\u8be5\u90fd\u770b\u7684\u61c2\u5427\uff09\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstring a,b;//\u9700\u8981\u7528\u5b57\u7b26\u4e32\u6765\u50a8\u5b58\nint l,l1,c[10005],p;//\u6bcf\u4e00\u4f4d\u7684\u5dee\nint main()\n{\n\tcin>>a>>b;\n\ta='0'+a;\n\tb='0'+b;//\u5c06\u7b2c0\u4f4d\u53600\n\tif(a.size()<b.size()||(a.size()==b.size()&&a<b))//\u5047\u5982a<b\n\t{\n\t\tcout<<'-';//\u7ed3\u679c\u4e3a\u8d1f\u6570\uff0c\u5148\u8f93\u51fa\u51cf\u53f7\n\t\tswap(a,b);//\u4ea4\u6362\u4e24\u4e2a\u6570\uff08\u4f8b\u59823-5\u53ef\u4ee5\u53d8\u4e3a0-\uff085-3\uff09\uff09\uff0c\u8fd9\u6837\u5b50\u65b9\u4fbf\u540e\u9762\u8ba1\u7b97\n\t}\n\tl=a.size();\n\tl1=b.size();\n\twhile(l1<l)//\u56e0\u4e3a\u5df2\u7ecf\u786e\u4fdd\u8fd9\u65f6b<a\u4e86\uff0c\u6240\u4ee5\u76f4\u63a5\u5728b\u524d\u9762\u6dfb0\n\t{\n\t\tb='0'+b;\n\t\tl1++;\n\t}//\u5229\u7528c++\u7684\u7279\u6027\u8ba9\u4e2a\u4f4d\u5bf9\u9f50\n\tfor(int i=1;i<l;i++)c[i]=a[i]-b[i];//\u8ba1\u7b97\u5dee\n\twhile(1)//\u7528\u6765\u9000\u4f4d\uff0c\u56e0\u4e3a\u53ef\u80fd\u8981\u591a\u6b21\u9000\u4f4d\uff0c\u6240\u4ee5\u7528while\u5faa\u73af\n\t{\n\tp=1;//\u5f00\u5173\uff0c\u7528\u6765\u770b\u662f\u5426\u9700\u8981\u9000\u4f4d\n\tfor(int i=1;i<l;i++)\n\t{\n\t\tif(c[i]<0)//\u9700\u8981\u9000\u4f4d\n\t\t{\n\t\t\tc[i-1]--;//\u5411\u524d\u4e00\u4f4d\u9000\u4f4d\n\t\t\tc[i]=10+c[i];\n\t\t\tp=0;//\u5f00\u5173\u7f6e\u96f6\uff0c\u9700\u8981\u91cd\u65b0\u590d\u67e5\n\t\t}\n\t}\n\tif(p)break;//\u4e0d\u9700\u8981\u9000\u4f4d\u4e86\uff0c\u5c31\u9000\u51fa\n\t}\n\tp=1;\n\tfor(int i=1;i<l;i++)\n\t{\n\tif(c[i]!=0)p=0;\n\tif(p==0)cout<<c[i];//\u7279\u5224\u524d\u5bfc0\n\t}\n\tif(p==1)cout<<0;//\u7279\u5224\uff0c\u53ef\u80fd\u7ed3\u679c\u672c\u8eab\u5c31\u4e3a0\n\treturn 0;\n}\n```",
        "postTime": 1546865847,
        "uid": 112661,
        "name": "NKL\u4e36",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2142 \u3010\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u3011"
    },
    {
        "content": "```cpp\n//\u4e3a\u4ec0\u4e48pascal\u7684\u90fd\u90a3\u4e48\u957f\u5462\uff1f\u4f55\u5fc5\u90a3\u4e48\u591a\u4f18\u5316\nvar i,lena,lenb,lenc:longint;//lena\u662f\u88ab\u51cf\u6570\u7684\u957f\u5ea6\uff0clenb\u662f\u51cf\u6570\u7684\u957f\u5ea6,lenc\u662f\u5dee\u7684\u957f\u5ea6\n    a,b,c:array[0..20000] of longint;//\u6570\u7ec4\u4e00\u70b9\u8981\u5f00\u7684\u5927\u4e00\u70b9\n    n,m,t:ansistring;//\u7528ansistring\uff0c\u56e0\u4e3a\u957f\u5ea6\u5df2\u7ecf\u8d85\u8fc7255\u4e86\uff0c\u6240\u4ee5\u7528ansistring\uff08\u65e0\u9650\u957f\u5b57\u7b26\u4e32\uff09\uff0ct\u662f\u4ea4\u6362\u53d8\u91cf\nbegin\nreadln(n);//\u8bfb\u5165\u88ab\u51cf\u6570\nreadln(m);//\u8bfb\u5165\u51cf\u6570\nif (length(n)<length(m))or(length(n)=length(m))and(n<m) then//\u5224\u65ad\u88ab\u51cf\u6570\u662f\u5426\u6bd4\u51cf\u6570\u5c0f\n   begin\n   write('-');//\u8f93\u51fa\u8d1f\u53f7\n   t:=n;//\u4ea4\u6362\n   n:=m;\n   m:=t;\n   end;\nlena:=length(n);//\u8d4b\u503c\u88ab\u51cf\u6570\u957f\u5ea6\nlenb:=length(m);//\u8d4b\u503c\u51cf\u6570\u957f\u5ea6\nfor i:=1 to lena do a[lena-i+1]:=ord(n[i])-48;//\u8f6c\u6570\u5b57\nfor i:=1 to lenb do b[lenb-i+1]:=ord(m[i])-48;//\u540c\u4e0a\nfillchar(c,sizeof(c),0);\ni:=0;\nwhile (i<lena)or(i<lenb) do//\u5f00\u51cfduangduangduang!!!!!!!!!\nbegin\ninc(i);\nif a[i]<b[i] then//\u5982\u679c\u4e0d\u591f\u51cf\n   begin\n   dec(a[i+1]);//\u501f\u4f4d\n   inc(a[i],10);\n   end;\nc[i]:=a[i]-b[i];//\u6c42\u8fd9\u4f4d\u4e0a\u7684\u6570\nend;\nlenc:=i;//\u786e\u5b9a\u5dee\u957f\u5ea6\nwhile (c[lenc]=0)and(lenc>1) do dec(lenc);//\u53bb\u9664\u9ad8\u4f4d\u4e0a\u7684\u96f6\nfor i:=lenc downto 1 do write(c[i]);//\u5012\u5e8f\u8f93\u51fa\nend.\n//\u7ed3\u675f\u7a0b\u5e8f\n```",
        "postTime": 1506328428,
        "uid": 41091,
        "name": "yyyyyyy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2142 \u3010\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u3011"
    },
    {
        "content": "\u849f\u84bb\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3  \n~~\u56e0\u4e3a\u6bd4\u8f83\u61d2~~\u6240\u4ee5\u5c31\u53ea\u5199\u4e86\u51cf\u6cd5\u7684,\u4e0d\u50cf\u5176\u4ed6\u5de8\u4f6c\u5199\u4e86\u52a0\u51cf\u4e58\u9664\u7684\u6a21\u677f  \n### \u6211\u662f\u8fd9\u4e48\u505a\u7684\uff1a  \n\u7528\u4e24\u4e2achar\u6570\u7ec4\u5b58\u653ea,b\u4e24\u4e2a\u9ad8\u7cbe\u5ea6\u7684\u6570\uff0c\u7136\u540e\u8bfb\u51fa\u8f83\u957f\u957f\u5ea6\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u5012\u5e8f\u6254\u8fdb\u53e6\u5916\u4e24\u4e2a\u6570\u7ec4\u4ee5\u4fbf\u4e00\u4f4d\u4e00\u4f4d\u8fd0\u7b97\u3002\u7528\u53e6\u4e00\u4e2a\u6570\u7ec4\u5b58\u653e9999\u2026\u2026\uff08\u5927\u6982\u5c31\u662f\u4e3a\u4e86\u907f\u514d\u9000\u4f4d\u7684\u95ee\u9898\u628a\u5b83\u5f53\u6210\u52a0\u6cd5\u505a\uff0cex\uff1a2-457=2+1+\uff08999-457\uff09-1000\uff09\u5982\u540c-1000\u7684\u64cd\u4f5c\u53ef\u4ee5\u540e\u7eed\u5728\u5206\u7c7b\u5224\u65ad\u3002\u8fd9\u65f6\u5019\u5982\u679c\u51fa\u73b0\u5f88\u957f\u7684\u76f8\u540c\u7684\u6570\u76f8\u51cf\u5c31\u4f1a\u51fa\u73b0\u5f88\u591a\u4e2a0\uff0c\u6240\u4ee5\u9700\u8981\u7279\u6b8a\u8bbe\u4e2a\u60c5\u51b5\uff0c\u4e0d\u591a\u8bf4\u4e86\uff0c\u8bf7\u770b\u4ee3\u7801\u3002  \n\n\n------------\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<string.h>\n#include<string>\n#include<algorithm>\nusing namespace std;\n\nint main(){\n    char a[100000],b[100000];\n    int aa[100000],bb[100000];\n    int alen=-1,blen=-1;\n    int m=0;\n    scanf(\"%s%s\",&a,&b);\n    int c[100000];\n    int lena,lenb,l;\n    lena=strlen(a);\n    lenb=strlen(b);\n    l=max(lena,lenb);\n    for(int i=lena-1;i>=0;i--){\n    \taa[++alen]=a[i]-'0';\n    }\n    for(int i=lenb-1;i>=0;i--){\n        bb[++blen]=b[i]-'0';\n    }\n    int d[100000];//\u548c99999\u2026\u2026(n-1\u4e2a9)\u7684\u6570\u7ec4\n\n    for(int i=0;i<l;i++){\n        d[i]=9;\n    }\n    c[0]+=1;\n    for(int i=0;i<l;i++){\n        c[i]+=aa[i]-bb[i]+d[i];\n        if(c[i]>=10){\n            c[i]-=10;\n            ++c[i+1];\n\n        }\n    }\n    for(int i=l-1;i>=0;i--){\n        if(c[i]!=0) m++;\n    }//\u8fd9\u65f6\u5019\u7684c[ ]\u5b58\u7684\u662f10^(l+1)-(a-b)\n    if(m!=0){\n        if(c[l]==0){//\u59822-457+999+1\u7684\u4f4d\u6570\u4e0e457\u662f\u4e00\u6837\u7684\n            for(int i=0;i<l;i++){\n                if(c[i]!=0) {\n                    c[i]-=1;\n                    for(int j=i;j<l;j++){\n                        c[j]=9-c[j];\n                    }\n                    break;\n                }\n            }\n            cout << '-';\n        }\n\n        for(int i=l-1;i>=0;i--){//\u5012\u7740\u8f93\u51fa\n    \t    cout << c[i] ;\n        }\n    }\n    if(m==0){\n        cout << '0';\n    }\n    return 0;\n}\n```  \n\n------------\n\nqwq\u611f\u8c22\u9605\u8bfb",
        "postTime": 1548946854,
        "uid": 123495,
        "name": "Archer_",
        "ccfLevel": 0,
        "title": "\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u7684\u9898\u89e3233"
    },
    {
        "content": "****\n========================================================\n\n=======================\u5f00\u59cb\u5206\u5272\u7ebf========================\n\n========================================================\n***\n## **\u4e00\u3001\u7528\u7c7b\u5c01\u88c5\u7684\u597d\u5904\uff1a**\n- 1\u3001\u65b9\u4fbf\u4f7f\u7528\uff0c\u7528\u6cd5\u53ef\u4ee5\u7c7b\u6bd4int\uff0clong long\n- 2\u3001\u53ef\u53d8\u6027\u5f3a\uff0c\u80fd\u591f\u81ea\u5b9a\u4e49\u8bb8\u591a\u4e1c\u897f\uff0c\u6bd4\u5982> , > , - , + , =(int/long long/string)\u7b49\u7b49\n- 3\u3001\u770b\u7740\u5f88\u6e05\u723d\uff0c\u6572\u4ee3\u7801\u5fc3\u60c5\u8212\u7545\n- 4\u3001\u4fbf\u4e8e\u67e5\u9519\uff0c\u7a0b\u5e8f\u8026\u5408\u6027\u4f4e\uff0cIT\u516c\u53f8\u5de5\u7a0b\u7801\u98ce\n- 5\u3001~~\u88c5\u903c~~\n***\n## **~~\u4e8c\u3001\u5e9f\u8bdd\u4e0d\u591a\u8bf4\uff1a~~**\n\n**\u770b\u4ee3\u7801\uff0c\u5b66\u9ad8\u7cbe\u3002\u6709\u4e0d\u61c2\uff0c\u8bf7\u79c1\u4fe1\u3002**\n\n**\u7c7b\u5c01\u88c5\uff0c\u597d\u5904\u591a\u3002\u67e5\u9519\u5feb\uff0c\u8026\u5408\u4f4e\u3002**\n\n**\u9ad8\u7cbe\u52a0\uff0c\u9ad8\u7cbe\u51cf\u3002\u9ad8\u7cbe\u4e58\uff0c\u9ad8\u7cbe\u9664\u3002**\n\n**\u7528\u5c01\u88c5\uff0c\u90fd\u53ef\u884c\u3002\u4e0d\u5c01\u88c5\uff0c\u8111ko\u6655\u3002**\n\n**\u5b58\u77e9\u9635\uff0c\u505a\u56fe\u8bba\u3002\u7ebf\u6bb5\u6811\uff0cLink Cut Tree\u3002**\n\n**\u5b58\u7ed3\u6784\uff0c\u5b58\u7c7b\u578b\u3002\u60f3\u5f97\u5230\uff0c\u90fd\u80fd\u5b58\u3002**\n\n**\u53ef\u88c5\u903c\uff0c\u53c8\u5b9e\u7528\u3002\u5b66\u4e00\u624b\uff0c\u4e50\u60a0\u60a0\u3002**\n***\n## **[[ AC ] ](https://www.luogu.org/record/25841504)\u4ee3\u7801\uff1a**\n```cpp\n#include<bits/stdc++.h>\n#define maxn 20000\nusing namespace std;\nint _=0,__=0,___=0;//\u6700\u540e\u6492\u82b1\u5b8c\u7ed3\u4f7f\u7528\nstring a,b;\nclass data\n{\n    private://private[\u79c1\u6709\u7684]\uff0c\u4ece\u8fd9\u5f00\u59cb\u5230public\u7684\u5185\u5bb9\u53ea\u6709\u5728class\u91cc\u9762\u624d\u80fd\u4f7f\u7528\uff0c\u76f8\u5f53\u4e8e\u662f\u624b\u673a\u7684\u4e3b\u677f\n        \n        int len,a[maxn];\n        bool flag;// 1 - positive number ; 2 - negative number\n        \n        //\u9000\u4f4d\uff0c\u7c7b\u4f3c\u4e8e\u3010\u52a0\u6cd5\u4e58\u6cd5\u7684 jw()\u3011\n        inline void tw()\n        {\n            for(int i=1;i<=len;i++)\n            {\n                if(a[i]<0)\n                {\n                    a[i]+=10;\n                    a[i+1]--;\n                }\n            }\n            while(!a[len]&&len)len--;//\u53bb\u9664\u524d\u5bfc0\n        }\n\n        /*\n        \u91cd\u8f7d\u8fd0\u7b97\u7b26\n        [\u7c7b\u578b] operator [\u7b26\u53f7] ( [\u4f20\u53c2] ) \u3010const\u3011\n        ps.\u6700\u540e\u53ef\u4ee5\u4e0d\u52a0const\uff0c\u52a0\u4e2aconst\u6307\u51fd\u6570\u5185\u90e8\u4e0d\u80fd\u4fee\u6539\u53c2\u6570\u4fe1\u606f\uff0c\u53ea\u80fd\u6bd4\u8f83\n        pss.\u4f20\u53c2\u5185\u5bb9\u4e2d\u5e38\u5199\u6709const [\u7c7b\u578b] &x ,\u6307\u7684\u662f\u8fd9\u4e2a\u53c2\u6570\u4e0d\u80fd\u6539\u53d8\uff0c\u53ea\u80fd\u53c2\u4e0e\u8fd0\u7b97\u6bd4\u8f83,\u4e0d\u9700\u8981\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5199 [\u7c7b\u578b] x \n        */\n\n       //\u91cd\u8f7d < \u8fd0\u7b97\u7b26\n        bool operator <(const data &b)\n        {\n            if(flag&&!b.flag)return false;//\u6211+\u4f60-\n            if(!flag&&b.flag)return true;//\u6211-\u4f60+\n            if(flag&&b.flag)//\u54b1\u4fe9\u90fd+\n            {\n                if(len<b.len)return true;\n                if(len>b.len)return false;\n                for(int i=len;i>=1;i--)\n                if(a[i]<b.a[i])return true;\n                else if(a[i]>b.a[i])return false;\n                return false;\n            }\n            //\u54b1\u4fe9\u90fd-\n            if(len<b.len)return false;\n            if(len>b.len)return true;\n            for(int i=len;i>=1;i--)\n            if(a[i]<b.a[i])return false;\n            else if(a[i]>b.a[i])return true;\n            return false;\n        }\n        \n        //\u4ea4\u6362\u4fe9data\n        inline void swap(data &A,data &B)\n        {\n            data C=A;\n            A=B;\n            B=C;\n        }\n\n    public://public[\u516c\u5f00\u7684]\uff0c\u4ece\u8fd9\u5f00\u59cb\u5230\u7ed3\u675f\u7684\u5185\u5bb9\u53ef\u4ee5\u5168\u5c40\u8c03\u7528\u4ee5\u53ca\u67e5\u770b\uff0c\u76f8\u5f53\u4e8e\u662f\u624b\u673a\u7684\u663e\u793a\u5c4f\n        \n        //\u6784\u9020\u51fd\u6570  \u6ce8\u610f\uff01\uff01\u7c7b\u7684constructor\u5fc5\u987b\u5199\u5728public\u540e\u8fb9\uff01\uff01\n        data(void)\n        {\n            len=0;\n            for(int i=0;i<=maxn;i++)\n            a[i]=0;\n            flag=1;//\u6ce8\u610f\u521d\u59cb\u5316\u7684flag=1\u3002\n        }\n        \n        //\u91cd\u8f7d - \u8fd0\u7b97\u7b26\uff08\u8fd9\u4e2a\u5730\u65b9\u6ca1\u6709\u53bb\u7279\u5224\u51cf\u6570\u6216\u88ab\u51cf\u6570\u4e3a\u8d1f\u7684\u60c5\u51b5\uff0c\u5177\u4f53\u7684\u64cd\u4f5c\u548c\u8fd9\u4e2a\u7c7b\u4f3c\u3002\n        data operator -(const data &B)\n        {\n            data a,b,c;\n            a=(*this);//this \u662f\u73b0\u5728\u8c03\u7528\u7684\u7c7b\u7684\u6307\u9488\uff0c\u52a0\u4e2a*\u53f7\u5c31\u76f8\u5f53\u4e8e\u662f\u81ea\u5df1\u3002\n            b=(data)B;\n            if(a<b)\n            {\n                swap(a,b);\n                c.flag=0;//\u6ce8\u610f\u8981\u6539\u53d8flag\n            }\n            c.len=a.len;\n            for(int i=1;i<=c.len;i++)\n            c.a[i]=a.a[i]-b.a[i];\n            c.tw();\n            return c;\n        }\n\n        //\u6253\u5370\u51fd\u6570\uff0c\u6ce8\u610f\u8981\u7279\u52240\u7684\u60c5\u51b5\n        inline void print()\n        {\n        \tif(!len)\n        \t{\n        \t\tprintf(\"0\");\n\t\t\t\treturn;\n\t\t\t}\n            if(!flag)cout<<\"-\";\n            for(int i=len;i>=1;i--)\n            printf(\"%d\",a[i]);\n        }\n\n        //\u91cd\u8f7d = \u8fd0\u7b97\u7b26\uff0c\u7528 string \u7ed9 data\u7c7b \u8d4b\u503c\n        void operator =(string s)\n        {\n            if(s[0]=='-')//\u5047\u5982\u662f\u8d1f\u6570\n            {\n                flag=0;\n                s.erase(0,1\t);//\u5220\u9664 -\u53f7\n            }\n            len=s.length();\n            for(int i=len;i>=1;i--)\n            a[len-i+1]=s[i-1]^48;\n        }\n}x,y;\ninline void initialization()//\u521d\u59cb\u5316\n{\n    cin>>a>>b;//\u8f93\u5165\u4fe9string\n    //\u5206\u522b\u8d4b\u503c\n    x=a;\n    y=b;\n}\nint main()\n{\n    initialization();\n    data substraction=x-y;//\u51cf\n    substraction.print();//\u6253\u5370\n    return 0^_^0|0^__^0|0^___^0|0^__^0|0^_^0;//\u6492\u82b1\u5b8c\u7ed3\uff01\uff01 \n}\n```\n***\nThx for watching with patience\n========================================================\n\n========================================================\n\n=======================\u7ed3\u675f\u5206\u5272\u7ebf========================\n\n========================================================",
        "postTime": 1572182861,
        "uid": 117111,
        "name": "BrandonSoong",
        "ccfLevel": 4,
        "title": "\u3010\u7c7b\u5c01\u88c5\u3011\u9ad8\u7cbe"
    },
    {
        "content": "## **\u8fd9\u4e2a\u9898\u89e3\u53ef\u80fd\u5b9e\u9645\u7528\u5904\u4e0d\u5927\uff0c\u4ec5\u4f9b\u53c2\u8003**\n\n\u57fa\u4e8e\u6a21\u62df\u4f4d\u8fd0\u548c1\u4f4dALU\uff08\u7b97\u672f\u903b\u8f91\u5355\u5143\uff09\u7684\u9ad8\u7cbe\u5ea6\u6574\u578b\u53d8\u91cf\u3002\n\n\u7528\u4eba\u8bdd\u8bf4\uff0c\u5c31\u662f\u5c01\u4e86\u4e00\u4e2a\u52a0\u5f3a\u7248\u7684int\uff0c\u4e14\u662f\u7528\u7684\u8fde\u7eed\u5185\u5b58\u5b58\u50a8\uff0c\u5373\u5e76\u6ca1\u6709\u7528\u5230\u6570\u7ec4\u5b58\u5341\u8fdb\u5236\uff0c\u800c\u662f\u7528\u4e00\u4e2a\u4e00\u4e2abit(\u4f4d)\u5b58\u7684\u8fde\u7eed\u7684\u4e8c\u8fdb\u5236\u6570\u636e\n\n\u5565\u53eb\u8fde\u7eed\u5462\uff1f\u5c31\u662f\u6ca1\u6709\u6d6a\u8d39\u7a7a\u95f4\uff0c\u628a\u6bcf\u4e00\u4e2a\u5b57\u8282\u7684\u4f4d\u90fd\u586b\u6ee1\u4e86\u3002\u3002(\u7a76\u6781\u538b\u4f4d)\n\n(\u7136\u540e\u987a\u4fbf\u624b\u6253\u4e86\u4e00\u4e2a\u5e26\u52a0\u6cd5\u5668\u79fb\u4f4d\u5668\u548c\u57fa\u672c\u903b\u8f91\u95e8\u76841\u4f4dALU\uff0c\u4e8e\u662f\u5c31\u53c8\u987a\u4fbf\u629b\u5f03\u4e86C\u8bed\u8a00\u91cc\u81ea\u5e26\u7684\u6574\u578b\u7b97\u672f\u8fd0\u7b97\u3002\u3002\u901a\u4fd7\u7684\u8bf4\u5c31\u662f\u75281\u4f4dALU\u4e32\u884c\u8ba1\u7b97\uff0c\u9020\u4e86\u4e00\u4e2a\u6b8b\u5e9f\u7684BIT\u4f4dALU(\u597d\u50cf\u5e76\u4e0d\u901a\u4fd7))\n\n\u652f\u6301\u52a0\u51cf\u4e58\u9664\u6a21\u4ee5\u53ca\u6c42\u9006\u5143\n\n\u7136\u800c\u56e0\u4e3a\u7684\u7684\u786e\u786e\u662f\u57fa\u4e8e\u6a21\u62df\u4f4d\u8fd0\u548cALU\uff0c\u6240\u4ee5\u3002\u3002\n\n\u6700\u7ec8\u5168\u90fd\u662f\u6c47\u7f16\u8bed\u6cd5\uff08\u5927\u96fe\uff09\n\n**\u5728NOIP\uff08\u73b0\u5728\u597d\u50cf\u6539\u540d\u4e86\uff1f\uff09\u4e2d\u6ca1\u6709\u5b9e\u9645\u4ef7\u503c\uff0c\u56e0\u4e3a\u7528\u4e0d\u7740\u8fd9\u4e48\u590d\u6742\uff0c\u76f4\u63a5\u6570\u7ec4\u5b58\u5341\u8fdb\u5236\u5c31\u884c\u4e86\u3002\u524d\u9762\u9898\u89e3\u4e5f\u5df2\u7ecf\u5f88\u6e05\u695a\u4e86**\n\n\u800c\u4e14\u3002\u3002\u56e0\u4e3a\u6ca1\u6709\u8c03\u8f93\u5165\u8f93\u51fa\u683c\u5f0f\uff0c\u5e76\u4e0d\u80fdA\u8fc7\u6b64\u9898\uff08~~\u5f53\u7136\u786c\u8981\u8c03\u4e5f\u884c~~\uff09\n\n _~~\u5b9e\u9645\u4e0a\u662f\u8eab\u4e3a\u9000\u5f79\u4e24\u5e74\u7684\u5927\u4e00caiji\u7ffb\u4e86\u51e0\u9875CSAPP\u5fc3\u8840\u6765\u6f6e\u6253\u7684\u4ee3\u7801\uff08\u8bef\uff09~~_ \n \n####  \u5e9f\u8bdd\u4e0d\u591a\u8bf4\u4e86\u76f4\u63a5\u4e0a\u4ee3\u7801\uff0c**\u53ef\u80fd\u6709\u70b9\u5c0f\u957f**\uff0c\u4e0d\u8fc7\u5199\u4e86\u6ce8\u91ca\uff08\u56e0\u4e3a\u4e0d\u5199\u6ce8\u91ca\u8fde\u6211\u81ea\u5df1\u90fd\u770b\u4e0d\u61c2\uff09\n\n\n------------\n\n \n\u4ee3\u7801\u6838\u5fc3\u90e8\u5206\uff1a\uff08_char.h)\n```cpp\n/************************************************\n\t\tHow to use:\n\t\t_char a; //declare var \"a\", inital is ZERO\n\t\t_char_scan(int argn, _char* a1, _char* a2, ... _char* a(argn)); \n\t\t_char_print(int argn, _char a1, _char a2, ... _char a(argn)); \n\t\t_char_add(_char a, _char b); //a = a+b; \n\t\t_char_sub(_char a, _char b); //a = a-b; \n\t\t_char_mul(_char a, _char b); //a = a*b; \n\t\t_char_inc(_char n); //n = n+1; \n\t\t_char_dec(_char n); //n = n-1; \n\t\t_char_mul(_char n); //eax = eax*n(low), edx = eax*n(high)\n\t\t_char_div(_char n); //eax = eax/n, edx = eax%n; \n\t\t\n\t\t\n\t\t_char_print_bits(_char a); //print a in bits\n\t\t_char_cmp(_char a, _char b); //compare (a-b) with ZERO\n\t\tCF:carry flag  SF:sign flag  ZF:zero flag\n************************************************/\n//P.S. Operation Based on serial calculation\n#include <stdio.h>\n#include <stdarg.h>\n#ifndef LEN \n#define LEN 16 //inital is 128-bit\n#endif\n#define BIT (LEN*8)\n#define __swich 1 //function print_char print in bytes(1) or bits(else)\n#define INT_BIT BIT //actually could be set as log(10)2 * BIT\n\nbool init_flag; \n\n//Set offset direction\nint offset_address = 0, offset_direction = 1; \nvoid offset_init() {\n\tint a = 1; \n\tchar *p = (char*) &a; \n\tif(!*p) {\n\t\toffset_address = LEN-1; \n\t\toffset_direction = -1; \n\t}\n}\n\t\n\n//Build 128-bit _char, allowed to visit every single bit, automatically offset\nstruct _iterator {\n\tchar* pointer; \n\tchar mask; \n}; \nclass _char {\n\tprivate:\n\t\tchar alloc_space[LEN]; //Allocating a space for memmory\n\tpublic: \n\t\t_iterator visiter; //visit every single bit\n\t\t\n\t\t_char() {\n\t\t\tif(!init_flag) {\n\t\t\t\toffset_init(); \n\t\t\t\tinit_flag = 1; \n\t\t\t}\n\t\t\tfor(int i = 0; i <= LEN-1; i++)\n\t\t\t\talloc_space[i] = 0; \n\t\t\tvisiter.pointer = alloc_space + offset_address; \n\t\t\tvisiter.mask = 0x01; \n\t\t}\n\t\tvoid operator = (_char b); \n\t\tvoid iterator_mov(); \n\t\tvoid iterator_set(); \n\t\tbool sign(); \n\t\tfriend void _char_inc(_char &a); \n\t\tfriend void _char_dec(_char &a); //used for hard-ware acculate\n}; \n_char ZERO, ONE; \n#define GET_BIT(a) (*a.visiter.pointer & a.visiter.mask)\n#define SET_BIT(a) (*(a.visiter.pointer) |= (a.visiter.mask))\n#define DEL_BIT(a) (*(a.visiter.pointer) &= (~(a.visiter.mask)))\nvoid _char::iterator_mov() {\n\tvisiter.mask <<= 1; \n\tif(!visiter.mask) {\n\t\tvisiter.mask = 0x01; \n\t\tvisiter.pointer += offset_direction; \n\t}\n}\nvoid _char::iterator_set() {\n\tvisiter.mask = 0x01; \n\tvisiter.pointer = alloc_space + offset_address; \n}\nbool _char::sign() {\n\tvisiter.pointer = alloc_space + offset_address + (LEN-1)*offset_direction; \n\treturn (*visiter.pointer&0x80); \n}\nvoid _char::operator = (_char b) {\n\tfor(int i = 0; i <= LEN-1; i++)\n\t\talloc_space[i] = b.alloc_space[i]; //tired to visit every bit...\n}\n\n_char eax, ebx, ecx, edx; \nbool CF, CF_set; //CF:used for carry flag  CF_set: used in sub operator\nbool SF, ZF, OF; //SF:used for sign flag  ZF:used for zero flag   OF:overflow flag\n\t\t\t\t //principle: update every flag_register after any calculation\n\t\t\t\t //ps:originally it was automatically changed by electrical power\n\t\t\t\t \nvoid ALU_not(_char &a) { \t\t   //a.point_bit = ~a.point_bit\n\t*(a.visiter.pointer) ^= (a.visiter.mask); \n}\nvoid ALU_and(_char &a, _char &b) { //a.point_bit &= b.point_bit\n\tif(!GET_BIT(b)) DEL_BIT(a); \n}\nvoid ALU_or (_char &a, _char &b) { //a.point_bit |= b.point_bit\n\tif(GET_BIT(b)) SET_BIT(a); \n}\nvoid ALU_add(_char &a, _char &b) { //1 adder: a.point_bit = a.p_b+b.p_b+CF  update CF\n\tCF_set = (GET_BIT(a) && GET_BIT(b)) || (GET_BIT(a) && CF) || (GET_BIT(b) && CF); \n\t*(a.visiter.pointer) ^= GET_BIT(b); \n\tif(CF) *(a.visiter.pointer) ^= (a.visiter.mask); \n\tCF = CF_set; \n\tCF_set = 0; \n}\nvoid ALU_shl(_char &a) {\t\t   //shift left logically\n\t_char shl_reg = ZERO; \n\ta.iterator_set(); \n\tshl_reg.iterator_set(); \n\tshl_reg.iterator_mov(); //move left one bit\n\tfor(int cnt = 1; cnt <= BIT-1; cnt++) {\n\t\tif(GET_BIT(a)) SET_BIT(shl_reg); \n\t\ta.iterator_mov(); \n\t\tshl_reg.iterator_mov(); \n\t}\n\tCF = GET_BIT(a); \n\ta = shl_reg; \n}\n\nvoid _char_not(_char &a) { \t\t\t // a = ~a\n\ta.iterator_set(); \n\tfor(int cnt = 1; cnt <= BIT; cnt++) {\n\t\tALU_not(a); \n\t\ta.iterator_mov(); \n\t}\n\tCF = SF = ZF = 0; \n}\nvoid _char_mov(_char &a, _char &b) { // a = b\n\ta = b; \n\tCF = ZF = SF = 0; \n}\nvoid _char_add(_char &a, _char &b) { // a = a+b, overflow in CF\n\tCF = CF_set; //alternativly decide whether +1 or not\n\tCF_set = 0; \n\tOF = 0; \n\ta.iterator_set(); \n\tb.iterator_set(); \n\tfor(int cnt = 1; cnt <= BIT; cnt++) {\n\t\tALU_add(a, b); \n\t\tif(cnt == BIT-1 && GET_BIT(a)) OF = 1; \n\t\ta.iterator_mov(); \n\t\tb.iterator_mov(); \n\t}\n\tCF = CF; SF = ZF = 0; \n}\n\nvoid _char_inc(_char &a) { \t\t\t // a = a+1\n\ta.iterator_set(); \n\tif(GET_BIT(a)) {\n\t\t_char ONE; \n\t\tSET_BIT(ONE); \n\t\t_char_add(a, ONE); \n\t}\n\telse SET_BIT(a); \n}\nvoid _char_dec(_char &a) { \t\t\t // a = a-1\n\ta.iterator_set(); \n\tif(!GET_BIT(a)) {\n\t\t_char ONE; \n\t\tSET_BIT(ONE); \n\t\t_char_add(a, ONE); \n\t}\n\telse DEL_BIT(a); \n}\nvoid _char_cpm(_char &a) { \t\t\t// a = complement(a)\n\t_char_not(a); \n\t_char_inc(a); \n}\nvoid _char_sub(_char &a, _char  b) { // a = a-b, overflow in CF\n\t_char_cpm(b); \n\t_char_add(a, b); \n}\nvoid _char_cmp(_char  a, _char  b) { // update flag_regester with sign of (a-b)\n\t_char_sub(a, b); //a&b's value is static, now a = a-b\n\ta.iterator_set(); \n\tbool or_gate_container = GET_BIT(a); \n\tfor(int i = 1; i <= BIT-1; i++) {\n\t\ta.iterator_mov(); \n\t\tif(GET_BIT(a))\n\t\t\tor_gate_container = 1; \n\t}\n\t\n\tZF = SF = 0; \n\tif(GET_BIT(a)) SF = 1; \n\telse if(!or_gate_container) ZF = 1;  \n}\t\nvoid _char_mul(_char &a, _char &b) { // a = a*b, overflow will be lost\n\t_char a_mov = a; \n\t_char_mov(a, ZERO); //a_mov = a; a = a_mov*b; \n\ta_mov.iterator_set(); \n\tb.iterator_set(); \n\tCF_set = 0; //avoid add_operator overflow in CF which could influence the calculation\n\tfor(int cnt = 1; cnt <= BIT; cnt++) {\n\t\tif(GET_BIT(b)) //call control_module\n\t\t\t_char_add(a, a_mov); \n\t\tALU_shl(a_mov); \n\t\tb.iterator_mov(); \n\t}\n\tSF = ZF = 0; \n}\nvoid _char_mul(_char &a) { \t\t // eax = eax*a, edx = higher bits    only unsigned numbers\n\t_char eax_mov = eax; //eax_mov: while shift left, lower bits(add on eax)\n\t_char eax_extra;  //eax_extra: higher bits(add on edx)  inital is ZERO\n\t_char_mov(eax, ZERO); \n\t_char_mov(edx, ZERO); \n\teax_mov.iterator_set(); \n\ta.iterator_set(); \n\tCF_set = 0; //avoid add_operator overflow in CF which could influence the calculation\n\tfor(int cnt = 1; cnt <= BIT; cnt++) {\n\t\tif(GET_BIT(a)) { //call control_module\n\t\t\t_char_add(eax, eax_mov); \n\t\t\tif(CF) _char_inc(edx); //eax overflow into edx\n\t\t\t_char_add(edx, eax_extra); \n\t\t}\n\t\tALU_shl(eax_mov); //shift left, if highest bit == 1 then CF = 1, move into eax_extra\n\t\tif(CF) {\n\t\t\tALU_shl(eax_extra); \n\t\t\t_char_inc(eax_extra); //equels to SET_BIT(eax_extra), pointer = 1\n\t\t}\n\t\telse ALU_shl(eax_extra); //overflow into higher bits\n\t\ta.iterator_mov(); \n\t}\n\tSF = ZF = 0; \n}\nvoid _char_div(_char  a) { \t\t // eax = eax/a, edx = eax%a(ps:without edx storing bits)\n\tbool sign_flag = 0; \n\tif(eax.sign()) {\n\t\tsign_flag = 1; \n\t\t_char_cpm(eax); \n\t}\n\tif(a.sign()) {\n\t\t_char_cpm(a); \n\t\tsign_flag = (sign_flag) ? 0 : 1; \n\t}\n\t\n\tbool eax_stack[BIT+3]; \t\n\tbool ans_stack[BIT+3] = {0}; \n\t//ps:in div operation, poccesion are calulated in inversed direction\n\n\teax.iterator_set(); \n\tfor(int cnt = 1; cnt <= BIT; cnt++) {\n\t\teax_stack[cnt] = GET_BIT(eax); \n\t\teax.iterator_mov(); \n\t}\n\t//push every bit in rule   then pop in inverse way\n\t//equels to inverse the whole _char eax \n\t\n\t_char_mov(edx, ZERO); \n\tfor(int cnt = 1; cnt <= BIT; cnt++) {\n\t\tALU_shl(edx); \n\t\tif(eax_stack[BIT+1-cnt]) _char_inc(edx); //(inverse) get new bits\n\t\t_char_cmp(edx, a); \n\t\tif(!SF || ZF) { //edx !< a or edx == a\n\t\t\t_char_sub(edx, a); \n\t\t\tans_stack[cnt] = 1; //successfully div this bit\n\t\t}\n\t\teax.iterator_mov(); \n\t}\n\t\n\t_char_mov(eax, ZERO); \n\teax.iterator_set(); \n\tfor(int cnt = BIT; cnt >= 1; cnt--) {\n\t\tif(ans_stack[cnt]) SET_BIT(eax); \n\t\teax.iterator_mov(); \n\t}\n\tif(sign_flag) {\n\t\t_char_cpm(eax); //set sign...because c is round numbers to zero, so in a/b=c...d, c*b <= a\n\t\t_char_cpm(edx); //so if the equation is negative the remains are negative too.\n\t}\n\tCF = SF = ZF = 0; \n}\n\n```\n\n\n\n------------\n\u5176\u5b9e\u6709\u4e86\u4e0a\u9762\u7684\u5c31\u53ef\u4ee5\u5b9e\u73b0\u52a0\u51cf\u4e58\u9664\u6a21\u4e86\uff0c\u4e0b\u9762\u662fIO\u7684\u90e8\u5206\uff08\u56e0\u4e3a\u662f\u57fa\u4e8e2\u8fdb\u5236\uff0c\u8f93\u5165\u8f93\u51fa10\u8fdb\u5236\u5c31\u5f88\u86cb\u75bc\uff0c\u9700\u8981\u624b\u52a8\u8f6c\u6362\u3002\u3002\u90a3\u4e2a\u6a21\u62df\u624b\u7b97\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u6211\u90fd\u6709\u70b9\u770b\u4e0d\u4e0b\u53bb\u7136\u800c\u4ec0\u4e48\u529e\u6cd5\u4e5f\u6ca1\u6709\uff09\n\n\u4ee5\u4e0b\u4e3a_char_io.h:\n```cpp\n//io head \n#ifndef _CHAR_H \n#include \"_char.h\"\n#define _CHAR_H\n#endif\n\nvoid _char_print_bits(_char ch) { //print _char in bits\n\tch.iterator_set(); \n\tbool cache[BIT+3]; \n\tfor(int i = 1; i <= BIT; i++) {\n\t\tcache[i] = GET_BIT(ch); \n\t\tch.iterator_mov(); \n\t}\n\tfor(int i = 1; i <= BIT; i++) {\n\t\tprintf(\"%d\", cache[BIT+1-i]); \n\t\tif(__swich != 1) printf(\"|\"); \n\t\tif(__swich == 1 && i%8 == 0) printf(\" \"); \n\t\tif(i%64 == 0) printf(\"\\n\"); \n\t}\n\tprintf(\"\\n\"); \n}\n\nvoid scan_int(_char &ch) {\t//scan _char in int\n\tchar num[INT_BIT+2] = {0}; \n\tbool num_add, sign_flag = 0; \n\tint _strlen; \n\twhile(((num[1] = getchar()) > '9' || num[1] < '0') && num[1] != '-'); \n\tif(num[1] == '-') {\n\t\tsign_flag = 1; \n\t\tnum[1] = getchar(); \n\t}\n\tfor(_strlen = 2; (num[_strlen] = getchar()) >= '0' && num[_strlen] <= '9'; _strlen++); \n\tfor(int i = 1; i <= _strlen-1; i++) num[i] -= '0'; \n\t//_strlen is pointing on end (_strlen-1 is usable)\n\tch.iterator_set(); \n\tfor(int cnt = 1; cnt <= BIT; cnt++) {\n\t\tfor(int i = 1, num_add = 0; i <= _strlen-1; i++) {\n\t\t\tif(num_add) {\n\t\t\t\tnum[i] += 10; \n\t\t\t\tnum_add = 0; \n\t\t\t}\n\t\t\tif(num[i]%2) num_add = 1; \n\t\t\tnum[i] >>= 1; \n\t\t\t\n\t\t\tif(i == _strlen-1 && num_add) SET_BIT(ch); \n\t\t}\n\t\tch.iterator_mov(); \n\t}\n\tif(sign_flag) {\n\t\t_char_not(ch); \n\t\t_char_inc(ch); \n\t}\n}\nvoid print_int(_char ch) {\t//print _char in int\n\tchar num[INT_BIT+2] = {0}; //in this function num & ch is stored inversed\n\tbool num_add; \n\tbool ch_stack[BIT+5] = {0}; \n\tint i; \n\t\n\tch.iterator_set(); \n\tfor(int cnt = 1; cnt <= BIT; cnt++) {\n\t\tif(GET_BIT(ch)) ch_stack[cnt] = 1; \n\t\tch.iterator_mov(); \n\t}\n\t\n\tfor(int cnt = 1; cnt <= BIT; cnt++) {\n\t\tnum_add = 0; \n\t\tif(ch_stack[BIT+1-cnt])\tnum_add = 1; \n\t\tfor(i = 1; i <= INT_BIT; i++) {\n\t\t\tnum[i] = num[i]*2+num_add; \n\t\t\tnum_add = 0; \n\t\t\tif(num[i] >= 10) {\n\t\t\t\tnum[i] -= 10; \n\t\t\t\tnum_add = 1; \n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor(i = INT_BIT; i >= 1 && num[i] == 0; i--) ; \n\tif(i == 0) putchar('0'); \n\telse for(; i >= 1; i--) putchar(num[i]+'0'); \n}\nvoid print_signed_int(_char ch) {\t//print _char in int\n\tch.iterator_set(); \n\tfor(int cnt = 1; cnt <= BIT-1; cnt++)\n\t\tch.iterator_mov(); \n\tif(GET_BIT(ch)) {\n\t\t_char_not(ch); \n\t\t_char_inc(ch); \n\t\tputchar('-'); \n\t}\n\tprint_int(ch); \n}\nvoid _char_long_print() {\t//print eax, edx\n\tchar num[2*INT_BIT+2] = {0}; //in this function num & ch is stored inversed\n\tbool num_add; \n\tbool ch_stack[BIT+5] = {0}; \n\tint i; \n\t\n\t_char ch; \n\t_char_mov(ch, edx); \n\tch.iterator_set(); \n\tfor(int cnt = 1; cnt <= BIT; cnt++) {\n\t\tif(GET_BIT(ch)) ch_stack[cnt] = 1; \n\t\tch.iterator_mov(); \n\t}\n\tfor(int cnt = 1; cnt <= BIT; cnt++) {\n\t\tnum_add = 0; \n\t\tif(ch_stack[BIT+1-cnt]) num_add = 1; \n\t\tfor(i = 1; i <= 2*INT_BIT; i++) {\n\t\t\tnum[i] = num[i]*2+num_add; \n\t\t\tnum_add = 0; \n\t\t\tif(num[i] >= 10) {\n\t\t\t\tnum[i] -= 10; \n\t\t\t\tnum_add = 1; \n\t\t\t}\n\t\t}\n\t}\n\t\n\t_char_mov(ch, eax); \n\tch.iterator_set(); \n\tfor(int cnt = 1; cnt <= BIT; cnt++) {\n\t\tif(GET_BIT(ch)) ch_stack[cnt] = 1; \n\t\telse ch_stack[cnt] = 0; \n\t\tch.iterator_mov(); \n\t}\n\tfor(int cnt = 1; cnt <= BIT; cnt++) {\n\t\tif(ch_stack[BIT+1-cnt])\tnum_add = 1; \n\t\tfor(i = 1; i <= 2*INT_BIT; i++) {\n\t\t\tnum[i] = num[i]*2+num_add; \n\t\t\tnum_add = 0; \n\t\t\tif(num[i] >= 10) {\n\t\t\t\tnum[i] -= 10; \n\t\t\t\tnum_add = 1; \n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor(i = 2*INT_BIT; i >= 1 && num[i] == 0; i--) ; \n\tif(i == 0) putchar('0'); \n\telse for(; i >= 1; i--) putchar(num[i]+'0'); \n}\nvoid _char_scan(int argn, ...) {\t//scan _char in various args\n\tva_list(pointer); \n\tva_start(pointer, argn); \n\t_char *buf; \n\tfor(int i = 1; i <= argn; i++) {\n\t\tbuf = va_arg(pointer, _char*); \n\t\tscan_int(*buf); \n\t}\n\tva_end(pointer); \n}\nvoid _char_print(bool flag, int argn, ...) {\t//print _char in various args\n\tva_list(pointer); \n\tva_start(pointer, argn); \n\t_char buf; \n\tfor(int i = 1; i <= argn; i++) {\n\t\tbuf = va_arg(pointer, _char); \n\t\tif(!flag) print_int(buf); \n\t\telse print_signed_int(buf); \n\t\tputchar(' '); \n\t}\n\tva_end(pointer); \n} \n```\n\n\n------------\n\n\u73b0\u5728\u7684\u4ee3\u7801\u5c31\u5df2\u7ecf\u652f\u6301\u52a0\u51cf\u4e58\u9664\u6a21\u4ee5\u53caIO\u4e86\uff0c\u7136\u800c\u8fd8\u6709\u4e2a\u6c42\u9006\u5143\uff0c\u6211\u7528\u7684exgcd\u3002\u4e0a\u9762\u6709\u7b97\u6cd5\u539f\u7406\uff0c\u60f3\u8981\u79d1\u666e\u7684\u76f4\u63a5\u51fa\u95e8\u5de6\u8f6c\u62d3\u6b27\u677f\u5b50\n\n\u7531\u4e8e\u5b8c\u5168\u662f\u6c47\u7f16\u8bed\u6cd5\u6240\u4ee5\u51fd\u6570\u91cc\u9762\u770b\u5f97\u53ef\u80fd\u6709\u70b9\u86cb\u75bc\uff0c\u52a0\u4e86\u6ce8\u91ca\u5e0c\u671b\u53ef\u4ee5\u770b\u5f97\u61c2\u3002\u3002\n\n\u4ee5\u4e0b\u4e3a_char_inverse.h\n```cpp\n/*ex_gcd:get the solution of the equation  ax + by = 1\n\t\u2235a = [a/b]*b + a%b \n\t\u2234equation: ([a/b]*b + a%b)x + by = 1\n\t\t\t\tb*([a/b]+y) + (a%b)*x = 1\n\t\t\t\t  =>  b*x' + (a%b)*y' = 1\n\tthen recursion and calculate bx' + (a%b)y' = 1\n\t\t=> ...\n\t\t\n\tUsing ex_gcd get inverse element:\n\t\ta*(a^-1) = 1(mod b)  =>  (a(a^-1)-1)%b = b*0\n\t\t  =>  exist y, a(a^-1)-1 = b*y , let x = a^-1\n\t\t  =>  exist y, ax + by = 1\n\tthen use ex_gcd get the solution of x  =>  a^-1.\n\t\n*/\n#ifndef _CHAR_H \n#include \"_char.h\"\n#define _CHAR_H\n#endif\n\nvoid ex_gcd(_char a, _char b, _char &x, _char &y) {\n\t_char div_ans; \n\t_char_cmp(b, ZERO); //b == 0?\n\tif(!ZF) goto j1; \n\t\t_char_mov(x, ZERO); \n\t\t_char_inc(x); //x = 1\n\t\t_char_mov(y, ZERO); //init recall calculatioin\n\t\t_char_mov(ecx, a); //gcd is returned in ecx (but no egg use)\n\t\tgoto ret; \n\tj1: \t\t\t\t//b != 0\n\t\t_char_mov(eax, a); \n\t\t_char_div(b); //eax = a, eax/b -> eax   eax%b -> edx\n\t\t_char_mov(div_ans, eax); //store value in eax[eax/b] into ebx, in case to be replaced\n\t\t\n\t\tex_gcd(b, edx, x, y); //ecx = ex_gcd\n\t\t\n\t\t_char_mov(eax, div_ans); \n\t\t_char_mul(y); //eax = div_ans = a/b   eax*y(low) -> eax, eax*y(high) -> edx\n\t\t_char_mov(ebx, x); \n\t\t_char_mov(x, y); \n\t\t_char_sub(ebx, eax); //ebx = x-a/b*y\n\t\t_char_mov(y, ebx); //x = y, y = y-a/b*y, recall calculate is done\n\tret:\n\t\treturn; \n}\nvoid _char_inv(_char &mod_num) { //get inverse element, stored into eax\n\t_char x, y; \n\tex_gcd(eax, mod_num, x, y); //in case x is negative: x = ((x%m)+m)%m\n\t_char_mov(eax, x); \n\t_char_div(mod_num); \n\t_char_mov(eax, edx); \n\t_char_add(eax, mod_num); \n\t_char_div(mod_num); \n\t_char_mov(eax, edx); \n} \n```\n\n------------\n\u6700\u540e\u5c31\u662f\u7fd8\u9996\u4ee5\u5f85\u7684main\u51fd\u6570\u4e3b\u4f53\u4e86\n\uff08\u5176\u5b9e\u5c31\u662f\u7eaf\u7cb9\u7ed9\u4f60\u505a\u4e86\u4e2aUI\u800c\u5df2\uff09\n\n\u5b8f\u91cc\u9762\u90a3\u4e2aLEN\u662f\u5b58\u50a8\u7684\u5b57\u8282\u5927\u5c0f\uff0c\u5728\u8fd9\u91cc\u662f128\u5b57\u8282\u4e5f\u5c31\u662f1024\u4f4d\u7684\u6570\u5b57\uff0c\u6709\u5174\u8da3\u53ef\u4ee5\u624b\u52a8\u6539\u6539\n\n\u4ee5\u4e0b\u4e3acalculate.cpp\n```cpp\n#define LEN 128\n#include \"_char_io.h\"\n#include \"_char_inverse.h\"\n\nint main() {\n\t_char a, b; \n\tprintf(\"Insert %d-bit numbers:  \", BIT); \n\t_char_scan(2, &a, &b); \n\t\n\t_char_mov(eax, a); \n\t_char_add(eax, b); \n\tprintf(\"a + b : \"); \n\t_char_print(1, 1, eax); \n\t\n\t_char_mov(eax, a); \n\t_char_sub(eax, b); \n\tprintf(\"\\na - b : \"); \n\t_char_print(1, 1, eax); \n\t\n\t_char_mov(eax, a); \n\t_char_mul(eax, b); \n\tprintf(\"\\na * b (%d-bit): \", BIT); \n\t_char_print(1, 1, eax); \n\t\n\t_char_mov(eax, a); \n\t_char_mul(b); \n\tprintf(\"\\na * b (%d-bit): \", BIT*2); \n\t_char_long_print(); //only can print unsigned numbers\n\t\n\t\n\t_char_mov(eax, a); \n\t_char_div(b); \n\tprintf(\"\\na / b : \"); \n\t_char_print(1, 1, eax); \n\tprintf(\"\\na %% b : \"); \n\t_char_print(1, 1, edx); \n\t\n\t\n\tprintf(\"\\na*x \u22611 (mod b)  x : \"); \n\t_char_mov(eax, a); \n\t_char_inv(b); \n\t_char_cmp(eax, ZERO); \n\tif(ZF) \tprintf(\"(NULL)\\n\"); \n\telse _char_print(1, 1, eax); \n\t\n\t\n\tprintf(\"\\n\\nPress any key to continue...\"); \n\tgetchar(); \n\treturn 0; \n}\n```\n\n\n------------\n![](http://a3.qpic.cn/psb?/V110NH9Y066OtS/SrmW.2SjvGJ1spLCvwQYlCmbNqpfQ3hEd0chtI1QLLI!/c/dFIBAAAAAAAA&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=rQXZAq0F2QIRADc!&amp;tl=1&amp;tm=1571677200&amp;sce=0-12-12&amp;rf=0-18)\n\n\u5b9e\u6d4b\u6548\u679c\u975e\u5e38\u597d\uff08\u5c31\u662fLEN\u4e0a\u4e86128\u4ee5\u540e\u6c42\u9006\u4f1a\u53d8\u6162\uff0c\u5e38\u6570\u592a\u5927\u4e86\uff09\n\n\u6709\u5174\u8da3\u6216\u8005\u6709bug\u53ef\u4ee5\u5728\u8bc4\u8bba\u533a\u79c1\u6233\u6211\u54df\uff08\u624b\u52a8\u5356\u840c\uff09",
        "postTime": 1571680170,
        "uid": 22729,
        "name": "\u4ec7\u54e5",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2142 \u3010\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5176\u5b9e\u5f88\u6c34\u5566\uff0c\u552f\u4e00\u7684\u95ee\u9898\u5c31\u662f\u4f1a\u51fa\u73b0\u7b2c\u4e8c\u4e2a\u6570\u5927\u4e8e\u7b2c\u4e00\u4e2a\u6570\u7684\u60c5\u51b5\u3002  \n\u4e0d\u4f1a\u666e\u901a\u9ad8\u7cbe\u51cf\u7684\u81ea\u884c\u767e\u5ea6\u3002  \n\u5176\u5b9e\u8fd9\u79cd\u60c5\u51b5\u5c31\u662f\u5927\u6570\u51cf\u5c0f\u6570\uff0c\u518d\u5728\u524d\u9762\u52a0\u4e00\u4e2a\u2018-\u2019\u5c31\u53ef\u4ee5\u4e86\u3002\u90a3\u4e48\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u4e24\u70b9\uff1a  \n1.\u5224\u65ad\u5927\u5c0f\uff1b  \n2.\u8c03\u6362\u4f4d\u7f6e\u3002  \n\u5224\u65ad\u5927\u5c0f\u9700\u8981\u5728\u8f6c\u5316\u4e3a\u6570\u7ec4\u4e4b\u540e\uff0c\u56e0\u4e3a\u5b57\u7b26\u4e32\u7684\u5927\u5c0f\u5224\u65ad\u6cd5\u5219\u4e0e\u6570\u4e0d\u540c\u3002  \n\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u505a\uff1a\n```\nbool dx()\n{\n    if(l1>l2) return false;\n    if(l1<l2) return true;\n    for(int i=l1;i>=1;i--)\n     if(a[i]<b[i]) return true;\n    return false;\n}\n```\n\u5728\u51fd\u6570\u91cc\u5224\u65ad\u4f1a\u66f4\u65b9\u4fbf\u3002\u4ea4\u6362\u53ea\u8981\u6bcf\u4e00\u4f4d\u4ea4\u6362\u5c31\u884c\u4e86  \n**\u4e0a\u4ee3\u7801**\n```\n#include <bits/stdc++.h>\nusing namespace std;\nstring s1,s2;\nint l1,l2,a[10005],b[10005],c[10005];\nbool f;//\u5224\u65ad\u662f\u5426\u8c03\u6362\uff0c\u5373\u662f\u5426\u9700\u8981\u8f93\u51fa'-'\nbool dx()//\u5224\u65ad\u5927\u5c0f\u7684\u51fd\u6570\n{\n    if(l1>l2) return false;\n    if(l1<l2) return true;\n    for(int i=l1;i>=1;i--)\n     if(a[i]<b[i]) return true;\n    return false;\n}\nint main()\n{\n    cin>>s1>>s2;\n    l1=s1.length();//\u8f6c\u6362\u5b57\u7b26\u4e32\u4e3a\u6570\u7ec4\n    for(int i=0;i<l1;i++) a[l1-i]=s1[i]-48;//\u6570\u5b57\u7684ASCII\u7801\u4e0e\u5176\u672c\u8eab\u76f8\u5dee48\n    l2=s2.length();\n    for(int i=0;i<l2;i++) b[l2-i]=s2[i]-48;\n    if(dx())//\u5982\u679c\u9700\u8981\u4ea4\u6362\n    {\n        for(int i=1;i<=l2;i++) swap(a[i],b[i]);//\u9700\u8981\u4ea4\u6362\uff0c\u5219l2\u4e00\u5b9a\u5927\u4e8e\u7b49\u4e8el1\n        swap(l1,l2);//\u4e3a\u4e86\u65b9\u4fbf\uff0c\u4ea4\u6362l1\u548cl2\n        f=true;//\u6807\u8bb0\u9700\u8981\u8f93\u51fa'-'\n    }\n    for(int i=1;i<=l1;i++)\n    {\n        if(a[i]<b[i])\n        {\n            a[i]+=10;\n            a[i+1]--;\n        }\n        c[i]=a[i]-b[i];\n    }\n    while(c[l1]==0&&l1>1) l1--;\n    if(f) cout<<'-';\n    for(int i=l1;i>=1;i--) cout<<c[i];\n    return 0;\n}\n```\n[~~\u65e0\u803b\u5730\u9a97\u4e2a\u8d5e~~](https://www.luogu.org/blog/yhdhg1395754790/)",
        "postTime": 1562674276,
        "uid": 195331,
        "name": "Mine_King",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2142 \u3010\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u3011"
    },
    {
        "content": "```cpp\n\n#include<algorithm>\n#include<iostream>\n#include<cstdlib>\n#include<cstring>\n#include<iomanip>\n#include<string>\n#include<cstdio>\n#include<cmath>\nusing namespace std;\nint pd(int a,int b) //\u7f16\u4e00\u4e2a\u5224\u65ad\u51fd\u6570\uff0c\u53ef\u4ee5\u4f7f\u7a0b\u5e8f\u66f4\u7f8e\u89c2\u3002\n{\n    if(a<b) return -1;\n    if(a==b) return 0;\n    if(a>b) return 1;\n}\nint add2(string &a,string &b) //\u7528\u51fd\u6570\u53ef\u4ee5\u65b9\u4fbf\u4ee5\u540e\u505a\u52a0\u51cf\u4e58\u9664\u5408\u4e3a\u4e00\u4f53\u7684\u4e00\u9053\u9898\u3002\n{\n    int a1[1001],b1[1001],c1[1001];\n    int alen=a.size();\n    int blen=b.size();\n    int y,big;string k;\n    if(alen>blen){big=alen;} else {big=blen;}\n    for(int i=0;i<big;i++)\n    {\n       if(pd(alen,blen)>0){break;}\n       if(pd(alen,blen)==-1)\n       {\n              cout<<\"-\";\n              y=alen;\n              alen=blen;\n              blen=y;\n              k=a;\n              a=b;\n              b=k;\n              break;\n       }\n    }\n    for(int i=0;i<alen;i++)\n       a1[alen-i]=a[i]-'0';\n    for(int i=0;i<blen;i++)\n       b1[blen-i]=b[i]-'0';\n    int i=1;\n    while(i<=alen||i<=blen) //\u53bb\u524d\u5bfc0.\n    {\n      if(a1[i]<b1[i])\n      {\n        a1[i]+=10;a1[i+1]--;\n      }\n      c1[i]=a1[i]-b1[i];\n      i++;\n    }\n    int lenc1=i;\n    while((c1[lenc1]==0)&&(lenc1>1))\n      lenc1--;\n    for(int j=lenc1;j>=1;j--)\n       cout<<c1[j];\n    cout<<endl;\n}\nint main()\n{\n    string a,b;\n    cin>>a>>b;\n    add2(a,b);\n}\n//\u8c22\u8c22\u6b23\u8d4f\u3002\n\n```",
        "postTime": 1435805674,
        "uid": 5875,
        "name": "oreimo_eromanga",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2142 \u3010\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u3011"
    },
    {
        "content": "\u867d\u7136\u611f\u89c9\u597d\u50cf\u5df2\u7ecf\u6709\u5f88\u591a\u9898\u89e3\u4e86\uff0c\u4f46\u662f\u6bd5\u7adf\u8fd9\u4e2a\u9ad8\u7cbe\u51cf\u6211\u6478\u7d22\u4e86\u4e00\u4e0b\u5348\u554aqaq ~~\uff08\u6211\u8fd8\u662f\u592a\u5f31\u4e86qaq\uff09~~\n\n\u8fd9\u4e2a\u6211\u89c9\u5f97\u9002\u5408\u65b0\u4eba\u6765\u7406\u89e3 ~~\uff08dalao\u8bf7\u4f7f\u7528\u9ad8\u7aef\u7b97\u6cd5\u7206\u5207\u5373\u53ef~~\n\n\u8fd9\u4e2a\u9ad8\u7cbe\u5c31\u662f\u7528\u7535\u8111\u6a21\u62df\u6211\u4eec\u7b97\u9ad8\u7cbe\u7684\u65b9\u6cd5\uff0c\u5c31\u50cf\u7ad6\u5f0f\u4e00\u6837\uff0c\u6bd4\u5982\u50cf\u8fd9\u6837\uff1a\n```\n  \u00b7\u00b7\u00b7\n 2333\n- 666\n\u2014\u2014\u2014\u2014\u2014\u2014\n 1667\n```\n\u4f46\u662f\u8fd9\u4e2a\u9898\u96be\u5728\u7ec6\u8282\u90e8\u5206\u554aqaq\uff0c\uff08\u867d\u7136\u53ef\u80fd\u6ce5\u840c\u90fd\u4f1a\u89c9\u5f97\u6211\u592a\u50bb\u4e86qaq\uff09  \n\ncode:\n```\n//\u9e2d\u54e5\u54e5\u4fdd\u4f51\u6211AC\u9e2d\uff01\n//\u8377\u5170\u732a\u4fdd\u4f51\u6211AC\u9e2d\uff01\n//\u8fd9\u4e0a\u9762\u7684\u4e1c\u897f\u4eb2\u6d4b\u6709\u7528\u2191(\u9003\n#include<iostream>\n#include<algorithm>\n#include<stdio.h>\n#include<cstdio>\n\n#include<string>\nusing namespace std;\nstring s,t;//\u4e00\u5f00\u59cb\u7684\u88ab\u51cf\u6570\u548c\u51cf\u6570\nint a[23333];\nint b[23333];//\u8f6c\u5316\u540e\u7684\u88ab\u51cf\u6570\u548c\u51cf\u6570\nint arr[23333];//\u7b54\u6848\u6570\u7ec4\nbool flag=false;//\u662f\u4e0d\u662f\u8d1f\u6570\nint main(){\n    cin>>s>>t;//\u8f93\u5165\n    if(s.size()<t.size()){//\u5982\u679cs<t\u5c31\u8bf4\u660e\u662f\u8d1f\u6570\n        string tep=s;//\u4e00\u4e2a\u8f6c\u6362\uff0c\u8ba9s\u59cb\u7ec8\u5927\n        s=t;\n        t=tep;\n        flag=true;//\u8d1f\u6570\n    }\n    else if(s.size()==t.size()){\n        if(s<t){//s\u8fd8\u662f\u5927\n            string tep=s;\n            s=t;\n            t=tep;\n            flag=true;//\u4e0d\u89e3\u91ca\u60f9\uff01\n        }\n        else if(s==t){//......\n            puts(\"0\");\n            return 0;\n        }\n    }\n    while(s.size()>t.size()){//\u7136\u540e\u8981\u8865\u4e0a0\uff08\u8fd8\u8bb0\u5f971\u5e74\u7ea7\u7684\u65f6\u5019\u6ca1\u6709\u88650\u5360\u4f4d\u5417\uff09\n        t='0'+t;\n    }\n    for(int i=s.size()-1;i>=0;i--){//\u8f6c\u5316\u6570\u5b57\n        a[i]=s[i]-'0';\n    }\n    for(int i=t.size()-1;i>=0;i--){//\u540c\u4e0a\u4e00\u4e2a\u5faa\u73af\n        b[i]=t[i]-'0';\n    }\n    int less=0;//\u662f\u5426\u9000\u4f4d\n    for(int i=s.size()-1;i>=0;i--){\n        b[i]+=less;//\u4e5f\u53ef\u4ee5\u5199\u6210a[i]-=less;\n        if(a[i]<b[i]){//\u8981\u6709\u9000\u4f4d\u4e86\n            arr[i]=10+a[i]-b[i];//\u4ece\u524d\u9762\u501f10\u8fc7\u6765\n            less=1;//\u7136\u540e\u6807\u6ce8\u4e00\u4e0b\n        }\n        else{\n            arr[i]=a[i]-b[i];//\u4e0d\u7136\u5c31\u6b63\u5e38\u5730\u51cf\n            less=0;//\u7136\u540e\u8981\u6807\u6ce8\u4e00\u4e0b\uff01\n        }\n    }\n    if(flag){//\u8d1f\u6570\uff0c\u5148\u884c\u8f93\u51fa\"-\"\u53f7\n        putchar('-');\n    }\n    bool zero;//\u5254\u9664\u524d\u5bfc0\u7684\u5229\u5668\n    if(arr[0]==0){//\u7136\u540e\u5148\u5224\u65ad\u4e00\u4e0b\u8fd9\u4e2a\u7b2c\u4e00\u4f4d\u662f\u4e0d\u662f0\uff0c\u8fd9\u91cc\u4e00\u5b9a\u8981\u5148\u5728\u5faa\u73af\u524d\u9762\u5224\u65ad\u4e00\u6b21\uff0c\u4e0d\u713601111\u6216\u800511111(\u7b54\u6848)\u603b\u8981\u51fa\u9519\u9e2dqaq\n        zero=false;\n    }\n    else{\n        zero=true;\n    }\n    int cnt=s.size()-1;\n    for(int i=0;i<s.size();i++){\n        if(zero){\n            cout<<arr[i];\n        }\n        if(s[i]!=0){\u7136\u540e\u5c31\u662f\u4e00\u76f4\u5230\u6ca1\u6709\u524d\u5bfc0\u7684\u5730\u65b9\u5f00\u59cb\u8f93\u51fa\n            zero=true;\n        }\n    }\n    puts(\"\");\n    return 0;\n}\n```",
        "postTime": 1565950476,
        "uid": 122605,
        "name": "\u7075\u5149\u4e00\u95ea",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2142 \u3010\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u3011"
    },
    {
        "content": "## \u9996\u5148\uff0c\u6211\u770b\u5230\u5404\u4f4ddalao\u4eec\u7684\u9898\u89e3\uff0c\u6211\u81ea\u6127\u4e0d\u5982\uff0c\u4f46\u6211\u7684\u65b9\u6cd5\u53ef\u80fd ~~\u66f4~~ \u6bd4\u8f83\u597d\u7406\u89e3\uff0c\u6240\u4ee5\u6211\u6765\u5199\u4e00\u7bc7\u3002\u7ba1\u7406\u5458\u5927\u5927~~\u4ec1\u6148~~ \u5bbd\u677e\u4e00\u4e0b\n### \u57fa\u672c\u601d\u8def\n\u5c31\u662f\u4e00\u4e2a~~\u666e\u901a~~\u6bd4\u8f83\u7b80\u5355\u7684\u9ad8\u7cbe\u51cf\u9ad8\u7cbe\uff0c\u518d\u52a0\u4e2a\u4e3a\u8d1f\u6570\u7684\u7279\u5224~~\u800c\u5df2~~\u3002\n\n### \u5173\u4e8e\u501f\u4f4d\n\u5148\u4e0d\u7ba1\u5b83\uff0c\u76f4\u63a5\u51cf\uff0c\u540e\u52a0\u4e2a\u5224\u65ad\uff0c\u5982\u679c\u5c0f\u4e8e0\uff0c\u540e\u4e00\u4f4d-1\uff0c\u8fd9\u4e00\u4f4d+10\u3002\n\n### \u5173\u4e8e\u8d1f\u6570\u7279\u5224\n\u5927\u5bb6\u90fd\u77e5\u9053\uff0ca-b=-(b-a),\u6240\u4ee5\u6211\u4eec\u53ea\u7528\u52a0\u4e2a\u7279\u5224\uff0c\u5224\u65ada\u662f\u5426\u5c0f\u4e8eb\uff0c\u82e5\u5c0f\u4e8e\uff0c\u8f93\u51fa\u201c-\u201d,\u518d\u4ea4\u6362a\uff0cb\u5373\u53ef\u3002\n\n### \u4e0a\u4ee3\u7801\n```\n#include<iostream>\n#include<cstring>\nusing namespace std;\nint q1[10005]={0},q2[10005]={0},s[10006]={0};\nint main()\n{\n    string a,b;\n    cin>>a>>b;\n    if((a.size()<b.size())||(a.size()==b.size()&&a<b))//\u7279\u5224\u6bd4\u8f83a,b\u5927\u5c0f\n    {\n        string t=b;\n        b=a;a=t;//\u4ea4\u6362a,b \n        cout<<\"-\";//\u8f93\u51fa\u8d1f\u6570 \n    }\n    int c1=a.size(),c2=b.size(),i;\n    for(i=0;i<c1;i++)q1[c1-i-1]=a[i]-'0';\n    for(i=0;i<c2;i++)q2[c2-i-1]=b[i]-'0';//\u6574\u578b\u6570\u7ec4\u5012\u5e8f\u5b58\u50a8 \n    i=0;\n    while(i<=c1||i<=c2)//\u786e\u8ba4\u4e24\u4e2a\u5b57\u7b26\u4e32\u90fd\u5904\u7406\u5b8c\u4e86\n    {\n        s[i]+=q1[i]-q2[i];\n        if(s[i]<0)//\u82e5\u4e0d\u591f\u51cf \n        {\n            s[i+1]--;\n            s[i]+=10;//\u671d\u4e0a\u4e00\u4f4d\u501f1 \n        }\n        i++;//\u8ddf\u7740\u51cf\n    }\n    i--;//\u5faa\u73af\u4e2d\u591a\u52a0\u4e861\uff0c\u8981\u51cf\u6389 \n    while(i>0&&!s[i])i--;//\u53bb\u6389\u9996\u4f4d0 \n    for(;i>=0;i--)cout<<s[i];//\u5012\u5e8f\u8f93\u51fa\n}\n```\n~~\u8f9b\u82e6~~\u5199\u8fd9\u4e48\u4e45\uff0c\u7ba1\u7406\u5458\u5927\u5927\u653e\u8fc7\u6211\u5427",
        "postTime": 1563852031,
        "uid": 203743,
        "name": "\u6ed1\u5927\u7a3d",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2142 \u3010\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u3011"
    },
    {
        "content": "\u849f\u84bb\u82b1\u4e86\u4e00\u4e0a\u5348\u5199\u4e86\u4e00\u4e2a\u9ad8\u7cbe\u5ea6\n\u4e2a\u4eba\u8ba4\u4e3a\u4ee3\u7801\u5bf9\u65b0\u624b\u6bd4\u8f83\u53cb\u597d\uff08\u5305\u62ec\u52a0\u51cf\u4e58\uff09\n\u6ce8\u91ca\u5728\u4ee3\u7801\u91cc\n\uff08\u4ee3\u7801\u53c2\u8003\u4e86\u6797\u539a\u4ece\u7684\u300a\u4fe1\u606f\u5b66\u5965\u8d5b\u8bfe\u8bfe\u901a\u300b\u4ee5\u53ca@stone_juice\u77f3\u6c41\u7684\u4e00\u7bc7\u9898\u89e3\uff09\n```\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#define res register int\nusing namespace std;\nconst int N=10010;\nchar sa[N],sb[N];\n//\u7528\u5b57\u7b26\u4e32\u5f62\u5f0f\u5b58\u50a8\u6570\u636e \nstring add(char sa[],char sb[])//\u9ad8\u7cbe\u5ea6\u52a0\u6cd5 \n{\n\tstring ans=\"\";\n\tint a[N],b[N],c[N];\n\tint la=strlen(sa);//\u5f97\u5230sa\u6709\u591a\u5c11\u4f4d \n\tint lb=strlen(sb);//\u5f97\u5230sb\u6709\u591a\u5c11\u4f4d \n\tmemset(a,0,sizeof(a));//\u521d\u59cb\u5316\u4e00\u4e0b \n\tmemset(b,0,sizeof(b));\n\tmemset(c,0,sizeof(c));\n\tfor(res i=0;i<la;i++) a[la-i-1]=sa[i]-'0';//\u628a\u5b57\u7b26\u8f6c\u5316\u4e3a\u6570\u5b57  \u540c\u65f6\u628a\u6570\u5b57\u7ffb\u8f6c\u8fc7\u6765 \n\t\t\t\t\t\t\t\t\t\t\t  //\u8fd9\u6837a[i]\u5c31\u8868\u793a\u7b2ci\u4f4d \n\tfor(res i=0;i<lb;i++) b[lb-i-1]=sb[i]-'0';\n\tint lc=max(la,lb);//\u6700\u540e\u7684\u7ed3\u679c\u5c31\u662f\u4e24\u4e2a\u7684\u6700\u5927\u503c \n\tfor(res i=0;i<lc;i++)\n\t{\n\t\tc[i]+=a[i]+b[i];//\u52a0\u6cd5 \n\t\tif(c[i]>=10) c[i+1]=1,c[i]-=10;//\u5904\u7406\u4e00\u4e0b\u8fdb\u4f4d\u7684\u95ee\u9898 \n\t}\n\tif(c[lc]>0) lc++;\n\tfor(res i=lc-1;i>=0;i--)\n\t{\n\t\tchar tmp=c[i]+'0';\n\t\tans=ans+tmp;//\u7ed3\u679c \n\t}\n\treturn ans;\n}\n\nint _compare(char sa[],char sb[])//\u6bd4\u8f83\u4e24\u4e2a\u6b63\u6570\u7684\u5927\u5c0f \n{//1\u4ee3sa>sb 0\u4ee3\u8868\u76f8\u7b49 -1\u4ee3\u8868sa<sb \n\tint la=strlen(sa),lb=strlen(sb);\n\tif(la<lb) return -1;//\u5982\u679c\u957f\u5ea6\u4e0d\u540c \u90a3\u4e48\u5927\u5c0f\u5c31\u53ef\u4ee5\u786e\u5b9a \n\tif(la>lb) return 1;\n\tfor(res i=0;i<la;i++)\n\t{\n\t\tchar tmpa=sa[i];\n\t\tchar tmpb=sb[i];\n\t\tif(tmpa>tmpb) return 1;\n\t\tif(tmpa<tmpb) return -1;\n\t}\n\treturn 0;\n}\n\n\n\nstring _minus(char sa[],char sb[],int x)//\u9ad8\u7cbe\u5ea6\u51cf\u6cd5 x\u4ee3\u8868\u662f\u5426\u53d6\u8d1f\u53f7 \n{\n\tstring ans=\"\";\n\tint a[N],b[N],c[N];\n\tmemset(a,0,sizeof(a));\n\tmemset(b,0,sizeof(b));\n\tmemset(c,0,sizeof(c));\n\tint la=strlen(sa);\n\tint lb=strlen(sb);\n\tfor(res i=0;i<la;i++) a[la-i-1]=sa[i]-'0';\n\tfor(res i=0;i<lb;i++) b[lb-i-1]=sb[i]-'0';//\u524d\u9762\u6709\u89e3\u91ca \n\tint lc=max(la,lb);\n\tfor(res i=0;i<lc;i++)\n    {\n        if(c[i]+a[i]-b[i]<0)\n        {\n            c[i+1]--;\n            c[i]+=10;\n        }//\u501f\u4f4d\u5904\u7406\n        c[i]+=a[i]-b[i];\n    }\n\twhile(c[lc-1]==0&&lc>0) lc--;//\u5220\u9664\u5728\u6700\u5f00\u59cb\u76840 \n\tfor(res i=lc-1;i>=0;i--)\n\t{\n\t\tchar tmp=c[i]+'0';\n\t\tans=ans+tmp;\n\t} \n\tif(x==-1) ans=\"-\"+ans;\n\treturn ans;\n}\n\nstring _mul(char sa[],char sb[])\n{\n\tif(sa[0]=='0'||sb[0]=='0') return \"0\";\n\tstring ans=\"\";\n\tint a[N],b[N],c[N];\n\tmemset(a,0,sizeof(a));\n\tmemset(b,0,sizeof(b));\n\tmemset(c,0,sizeof(c));\n\tint la=strlen(sa);\n\tint lb=strlen(sb);\n\tfor(res i=0;i<la;i++) a[la-i-1]=sa[i]-'0';\n\tfor(res i=0;i<lb;i++) b[lb-i-1]=sb[i]-'0';\n\tfor(res i=0;i<la;i++)\n\t\tfor(res j=0;j<lb;j++)\n\t\t{\n\t\t\tint f,w,jw;//i\u548cj\u4f4d\u76f8\u4e58\u5b58\u50a8\u5728\u7b54\u6848\u7684i+j\u4f4d\u5f53\u4e2d \n\t\t\tf=a[i]*b[j]; jw=f/10; f=f%10;w=i+j;//jw\u8868\u793a\u8fdb\u4f4d f\u8868\u793a\u8fdb\u4f4d\u540e\u5269\u4e0b\u7684\u6570 \n\t\t\tc[w]=c[w]+f;jw+=c[w]/10;c[w]=c[w]%10;\n\t\t\tc[w+1]=c[w+1]+jw;\n\t\t}\n\tint lc=la+lb;\n\twhile(c[lc-1]==0&&lc>0) lc--;//\u524d\u9762\u6709\u89e3\u91ca \n\tfor(res i=lc-1;i>=0;i--)\n\t{\n\t\tchar tmp=c[i]+'0';\n\t\tans=ans+tmp;\n\t}\n\treturn ans;\n}\n\n\nint main()\n{\n//\tfreopen(\"test.txt\",\"r\",stdin);\n\tios::sync_with_stdio(false);\n\tcin>>sa>>sb;\n//\u5728\u505a\u51cf\u6cd5\u4e4b\u524d \u8981\u5148\u6bd4\u8f83\u54ea\u4e00\u4e2a\u6570\u66f4\u5927 \n\tif(_compare(sa,sb)==1) cout<<_minus(sa,sb,1);\n\telse if(_compare(sa,sb)==-1) cout<<_minus(sb,sa,-1);\n\telse cout<<\"0\";\n\n\tcout<<_mul(sa,sb);\n\treturn 0;\n} \n```\nrp++",
        "postTime": 1560739349,
        "uid": 126534,
        "name": "\u849f\u84bb\u6eb4\u5316\u6c22",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2142 \u3010\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u3011"
    },
    {
        "content": "# \u5b66\u4e60\u7b14\u8bb0\uff01\n\n## \u8fd9\u9053\u9898\u4e00\u5171\u505a\u4e86\u4e24\u904d\n**\u7b2c\u4e00\u904d** \u662f\u7528\u7684py\u3002\u3002\u3002\u3002\n```python\n\ta=input()\n    b=input()\n    print(a-b)\n```\nA\u4e86\u4e4b\u540e\u6211\u5c31\u6e9c\u4e86\uff0c\u53bb\u505a\u5176\u4ed6~~\u8270\u6df1~~\u597d\u73a9\u7684\u9898\n\n**\u7b2c\u4e8c\u904d** \u662f\u7528\u7684c++\uff08\u6211\u662f\u9694\u4e86\u597d\u4e45\u624d\u60f3\u8d77\u6765\u505a\uff09\n\n## \u73b0\u5728\u5206\u6790\u4e0b\u601d\u8def\n\t\u6839\u636e\u9898\u610f\u6765\u770b\uff0c\u8fd9\u662f\u4e00\u9053A-B problem\uff08\u5e9f\u8bdd\uff09\uff0c\u800c\u4e14\u7b2c\u4e00\u4e2a\u6709\u53ef\u80fd\u5927\u4e8e\u7b2c\u4e8c\u4e2a\u3002\n\n\u8fd9\u4e2a\u5c31\u610f\u5473\u7740\u6700\u540e\u7684\u7ed3\u679c\u53ef\u80fd\u662f**\u8d1f\u6570**\n\n\u4e0d\u8fc7\uff0c\u8fd9\u4e2a\u5bf9\u6211\u4eec\u7684\u8ba1\u7b97\u8fc7\u7a0b\u5e76\u6ca1\u6709\u592a\u5927\u5f71\u54cd\uff0c\u65e0\u975e\u662f\u591a\u8fdb\u884c\u4e00\u6b65**\u6bd4\u5927\u5c0f**\u7684\u5de5\u4f5c\u3002\u5982\u679c\u7b2c\u4e00\u4e2a\u5c0f\u4e8e\u7b2c\u4e8c\u4e2a\uff0c\u5c31\u5728\u6700\u540e\u7ed3\u679c\u524d\u52a0\u4e00\u4e2a\u201c-\u201d\u3002\n\n\u7136\u540e\uff0c\u5c31\u662f\u8fdb\u884c**\u6a21\u62df\u7ad6\u5f0f**\u7684\u64cd\u4f5c\n\n1. \u5927\u6570\u7684\u6bcf\u4e00\u4f4d\u51cf\u5c0f\u6570\u7684\u6bcf\u4e00\u4f4d\uff0c\u5982\u679c\u4e0d\u591f\u51cf\uff0c\u5c31\u5411\u524d\u4e00\u4f4d\u8fdb\u884c\u501f\u4f4d\n2. \u64cd\u4f5c\u7ed3\u675f\u540e\uff0c\u628a\u524d\u5bfc\u96f6\u53bb\u6389\n3. \u8f93\u51fa\n\n\u597d\u4e86\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u4e3b\u8981\u7684\u601d\u8def\uff0c\u4e0b\u9762\u8bf4\u4e00\u4e0b\u5177\u4f53\u64cd\u4f5c\n\n### \u6bd4\u5927\u5c0f\uff01\n\u5728\u6211\u7684\u7a0b\u5e8f\u4e2d\uff0c\u5b83\u7684\u540d\u5b57\u53eb\u505a``` ucc ```\uff08\u5c31\u662f\u4e00\u4e2a\u778e\u8d77\u7684\u540d\u5b57\uff0c\u65e0\u5b9e\u610f\uff09\n\n#### \u6d41\u7a0b\n1. **\u5224\u65ad\u4f4d\u6570**\n\t\n    \u5982\u679c\u7b2c\u4e00\u4e2a\u6570\u7684\u4f4d\u6570\u5927\u4e8e\u7b2c\u4e8c\u4e2a\u6570\u7684\u4f4d\u6570\uff0c\u90a3\u663e\u800c\u6613\u89c1\u7684\u7b2c\u4e00\u4e2a\u6570\u5927\u4e8e\u7b2c\u4e8c\u4e2a\u6570\uff1b\u53cd\u4e4b\u7b2c\u4e00\u4e2a\u6570\u5c0f\u4e8e\u7b2c\u4e8c\u4e2a\u6570\u3002\n2. **\u4f4d\u6570\u76f8\u540c\u65f6**\n\t\n    \u4ece\u5934\u6bd4\u5230\u5c3e\uff0c\u53ea\u8981\u6709\u4e00\u4f4d\u6570\u6709\u504f\u5dee\uff08\u6216\u5927\u6216\u5c0f\uff09\uff0c\u5c31\u80fd\u5224\u65ad\u8c01\u5927\u8c01\u5c0f\n3. **\u5047\u5982\u4e00\u5207\u7684\u4e00\u5207\u90fd\u76f8\u540c**\n\t\n    \u90a3\u4ed6\u4fe9\u5c31\u76f8\u540c\u5457~~\n    \n**P.S.** \u5982\u679c\u60f3\u7ec3\u4e60\u9ad8\u7cbe\u6bd4\u5927\u5c0f\u7684\u9898\uff0c\u53ef\u4ee5\u8bd5\u8bd5\u8fd9\u9053\u9898\uff0c\u51e0\u4e4e\u662f\u6a21\u677f\u9898\uff1a[P1781 \u5b87\u5b99\u603b\u7edf](www.luogu.com.cn/problem/P1781)\n\n### \u6a21\u62df\u7ad6\u5f0f\uff01\n\u5728\u6211\u7684\u7a0b\u5e8f\u4e2d\uff0c\u5b83\u662f\u5728\u4e3b\u7a0b\u5e8f\u4e2d\uff0c\u5982\u679c\u5927\u5bb6\u6709\u5174\u8da3\u7684\u8bdd\uff0c\u53ef\u4ee5\u8bd5\u7740\u628a\u5b83\u653e\u5230\u51fd\u6570\u4e2d\u6267\u884c\uff0c\u8fd9\u6837\u5b83\u7684**\u529f\u80fd\u6027**\u5c31\u4f1a\u66f4\u5f3a\n\n#### \u6d41\u7a0b\n1. \u6328\u4e2a\u51cf\u5c31\u5b8c\u4e86\uff08\u6309\u7167\u601d\u8def\u4e2d\u7684\u65b9\u6cd5\u6765\uff09\n\n### \u8f93\u51fa\n\u5728\u6211\u7684\u7a0b\u5e8f\u4e2d\uff0c\u5b83\u662fprint(int k)\u51fd\u6570\uff0c\u5177\u4f53\u4e3a\u4ec0\u4e48\u8981\u7528k\u505a\u53c2\u6570\uff0c\u8be6\u89c1\u4ee3\u7801\n\n## \u90a3\u4e48\uff0c\u6700\u6fc0\u52a8\u4eba\u5fc3\u7684\u65f6\u523b\u6765\u4e86\uff01\uff01\uff01\n\u4e0a\u4ee3\u7801\uff01\uff01\uff01\n```cpp\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934\nusing namespace std;\nstring s,t;\nint a[100000],b[100000],c[100000],ll;//ll\u662f\u7528\u6765\u8bb0\u5f55\u4f4d\u6570\nint ucc(int a[],int b[])//\u6bd4\u5927\u5c0f\n{\n\tif(a[0]>b[0])\n\treturn 2;\n\telse if(a[0]<b[0])\n\treturn 0;\n\telse\n\t{\n\t\tfor(int i=a[0];i>=1;i--)\n\t\t{\n\t\t\tif(a[i]>b[i])\n\t\t\treturn 2;\n\t\t\telse if(a[i]<b[i])\n\t\t\treturn 0;\n\t\t}\n\t\treturn 1; \n\t}\n}//\u8fd4\u56de\u503c\u5f88\u91cd\u8981\uff0c\u53ef\u4ee5\u7701\u53bb\u5f88\u591a\u9ebb\u70e6\nvoid print(int k)\n{\n\t\n\tif(k==2)\n\t{\n\t\twhile(c[a[0]]==0&&a[0]>=1) a[0]--;//\u6d88\u53bb\u524d\u5bfc\u96f6\n\t\tfor(int i=a[0];i>=1;i--)\n\t\tcout<<c[i];\n\t}//\u7ed3\u679c\u4e3a\u6b63\u6570\u65f6\n\telse\n\t{\n\t\twhile(c[b[0]]==0&&b[0]>=1) b[0]--;\n\t\tcout<<'-';\n\t\tfor(int i=b[0];i>=1;i--)\n\t\tcout<<c[i];\n\t}//\u7ed3\u679c\u4e3a\u8d1f\u6570\u65f6\n}\nint main ()\n{\n\tcin>>s>>t;\n\ta[0]=s.length();\n\tb[0]=t.length();\n\tfor(int i=1;i<=a[0];i++)\n\ta[i]=s[a[0]-i]-48;//\u8f6c\u5316\n\tfor(int i=1;i<=b[0];i++)\n\tb[i]=t[b[0]-i]-48;\n\tint k=ucc(a,b);\n\tif(k==2)//\u5982\u679ca>b\n\t{\n\t\tfor(int i=1;i<=a[0];i++)//\u6a21\u62df\u7ad6\u5f0f\n\t\t{\n\t\t\tif(a[i]>=b[i])\n\t\t\tc[i]=a[i]-b[i];\n\t\t\telse\n\t\t\t{\n\t\t\t\tc[i]=a[i]+10-b[i];\n\t\t\t\ta[i+1]--;\n\t\t\t}\n\t\t}\n\t}\n\telse if(k==1)//\u5982\u679ca==b\n\t{\n\t\tcout<<0<<endl;//\u8fd9\u6837\u5c31\u8282\u7701\u4e86\u5f88\u591a\u65f6\u95f4\uff0c\u5c11\u5904\u7406\u5f88\u591a\n\t}\n\telse//\u5982\u679ca<b\n\t{\n\t\tfor(int i=1;i<=b[0];i++)\n\t\t{\n\t\t\tif(b[i]>=a[i])\n\t\t\tc[i]=b[i]-a[i];\n\t\t\telse\n\t\t\t{\n\t\t\t\tc[i]=b[i]+10-a[i];\n\t\t\t\tb[i+1]--;\n\t\t\t}\t\n\t\t} \n\t}\n\tif(k!=1)\n\t{\n\t\tprint(k);//\u8f93\u51fa\uff0ck\u662fa\u3001b\u5927\u5c0f\u5173\u7cfb\u7684\u6807\u5fd7\uff01\n\t} \n\treturn 0;//\u5e26\u529f\u544a\u6210\n } \n```\n\n### \u4e0d\u592a\u6307\u671b\u8fd9\u7bc7\u80fd\u8fc7\uff0c\u5c31\u5f53\u662f\u5b66\u4e60\u7b14\u8bb0\u5427\u3002\uff08\u5982\u679c\u80fd\u8fc7\u8bf7\u52a1\u5fc5\u8ba9\u6211\u8fc7\uff01\uff01\uff01\uff09\n",
        "postTime": 1568546883,
        "uid": 129782,
        "name": "Lee02",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2142 \u3010\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u3011"
    },
    {
        "content": "\u849f\u84bb\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\uff0c\u5728\u7f51\u4e0a\u627e\u4e86\u597d\u591a\u4ee3\u7801\uff0c\u90fd\u611f\u89c9\u6bd4\u8f83\u9ebb\u70e6\uff0c\u7136\u540e\u5c31\u81ea\u5df1\u8111\u8865\uff08\n~~\u5934\u90fd\u60f3\u6ca1\u4e86~~\uff09\u4e86\u4e00\u4e2a\n\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u6309\u4f4d\u76f8\u51cf\uff0c\u7136\u540e\u770b\u5f53\u524d\u4f4d\u7f6e\u9700\u8981\u5411\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u501f\u4e00\u4e2a\u4f4d\u8865\u6b63\uff08\u60f3\u4e86\u5f88\u591a\u60c5\u51b5\u5e94\u8be5\u53ea\u8981\u5411\u4e0b\u501f1\u5c31\u884c\u4e86\uff09\u3002\n\u8ddf\u52a0\u6cd5\u5dee\u4e0d\u591a\uff0c\u90fd\u53ea\u8981\u626b\u4e00\u904d\uff0c\u8be6\u60c5\u770b\u6ce8\u91ca~\n\n\n------------\n\n\n```cpp\n#include<bits/stdc++.h>//\u4e07\u5934\u8d5b\u9ad8\uff01\uff01\n\nusing namespace std;\n\nint a[10005],b[10005];\nint main()\n{\n    string sa,sb;\n    cin >> sa >> sb;\n    int f=0,ta=0,tb=0;\n    if(sa.size() < sb.size() || (sa.size()==sb.size() && sa<sb))//\u5224\u65ad\u5927\u5c0f\n        swap(sa,sb),f=1;//f\u5728\u8fd9\u91cc\u662f\u7b26\u53f7flag\n    for(int i=sa.size()-1;i>=0;i--)a[ta++]=sa[i]-'0';\n    for(int i=sb.size()-1;i>=0;i--)b[tb++]=sb[i]-'0';\n\n    for(int i=0;i<ta;i++)\n    {\n        a[i]-=b[i];//\u6309\u4f4d\u76f8\u51cf\n        if(a[i]<0)a[i]+=10,a[i+1]--;//\u5411\u4e0b\u501f\u4f4d\u8865\u6b63\u5f53\u524d\u4f4d\u7f6e\n    }\n\n    if(f)putchar('-');\n    \n    f=0;//f\u8fd9\u91cc\u662f\u524d\u5bfc0 flag\n    for(int i=ta-1;i>=0;i--)\n    {\n        if(a[i])f=1;//\u9047\u5230\u4e00\u4e2a\u4e0d\u4e3a0\u7684\u4f4d\u65f6\u6539\u53d8f\uff0c\u5ffd\u7565\u524d\u5bfc0\uff08\u53ef\u4ee5\u5728\u8fd9\u91cc\u6539\u53d8ta\uff09\n        if(f || !i)putchar(a[i]+'0');//\u52a0\u4e3a\u96f6\u65f6\u7684\u5224\u65ad\n    }\n    return 0;\n}\n```\n\n\n------------\n\uff08~~\u542c\u8bf4\u6709\u67e5\u91cd\uff0c\u6211\u5c31\u4e0d\u52a8\u624b\u811a\u4e8623333~~\uff09",
        "postTime": 1564535143,
        "uid": 150300,
        "name": "huadi2",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2142 \u3010\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u3011"
    },
    {
        "content": "\uff08\u7ee7\u4e0a\u6b21\u9ad8\u7cbe\u52a0\u540e\u7684\u53c8\u4e00\u7bc7\u9ad8\u7cbe\uff09\n\n\u9ad8\u7cbe\u5ea6\u52a0\u6cd5\u8be6\u89c1[\u9898\u89e3 P1601 \u3010A+B Problem\uff08\u9ad8\u7cbe\uff09\u3011](https://www.luogu.org/blog/AuAqwqnoLGBlog/solution-p1601)\n\n\u90a3\u4e48\u8bdd\u4e0d\u591a\u8bf4\uff0c\u8fd9\u5c31\u5f00\u59cb\n\n------------\n\u9996\u5148\u8fd8\u662f\u6309\u7167\u9ad8\u7cbe\u52a0\u7684\u89e3\u9898\u6b65\u9aa4\uff1a\n\n\u8fd8\u662f\u4e3e\u4e2a\u6817\u5b50qwq\uff1a2333-314159\n\n\u4e0b\u9762\u6839\u636e\u9898\u76ee\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u6700\u7ec8\u7684\u7ed3\u679c\u5c31\u662f-(314159-2333)\n\n\u6240\u4ee5\u6211\u4eec\u7684\u601d\u8def\u5c31\u662f\uff1a\n\n1.\u5148\u7b97314159-2333\n\n2.\u53d6\u76f8\u53cd\u6570\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5217\u51fa\u7ad6\u5f0f\uff1a\n\n__314159__\n\n__-  2333__\n\n\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\\-\n\n__311826__\n\n\u6240\u4ee5\u7ed3\u679c\u662f-311826\n\n\u90a3\u4e48\u5173\u4e8e\u501f\u4f4d\u6211\u4eec\u662f\u600e\u4e48\u8fdb\u884c\u5904\u7406\u7684\u5462\uff1f\n\n\u6211\u4eec\u8ba1\u7b97\u7684\u601d\u8def\u662f\uff1a\u5982\u679c\u88ab\u51cf\u6570\u7684\u8fd9\u4e00\u4f4d\u5c0f\u4e8e\u51cf\u6570\u7684\u8fd9\u4e00\u4f4d\uff0c\u6211\u4eec\u5411\u88ab\u51cf\u6570\u7684\u524d\u4e00\u4f4d\u501f\u676510\uff0c\u53d8\u621010+\u88ab\u51cf\u6570\u8fd9\u4e00\u4f4d-\u51cf\u6570\u8fd9\u4e00\u4f4d\uff0c\u540c\u65f6\u88ab\u51cf\u6570\u7684\u4e0a\u4e00\u4f4d\uff0d1\n\n\u5728\u5173\u4e8e\u4f4d\u6570\u4e0d\u540c\u4e0a\uff0c\u6211\u4eec\u548c\u52a0\u6cd5\u53d6\u4e00\u6837\u7684\u5904\u7406\u63aa\u65bd\uff0c\u5728\u4f4d\u6570\u5c11\u7684\u6570\u524d\u9762\u88650\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u7684\u4ee3\u7801\uff1a\n```cpp\ninline string minuss(string a,string b){\n\tre int* al=new int;\t\n\tre int* bl=new int;\t\t//a,b\u6570\u957f\u5ea6\n\tre bool* flag=new bool;\t\t//\u7ed3\u679c\u6b63\u8d1f\n\t*flag=false;\t//\u521d\u59cb\u4e3a\u6b63\u6570\n\t*al=a.size(),*bl=b.size();\n\tre string result;\n\tif(*al<*bl||(*al==*bl)&&(a<b)){\t\t//\u5f53a<b\u65f6\uff0c\u4ea4\u6362a,b\uff0c\u7ed3\u679c\u5b9a\u4f4d\u8d1f\u6570\n\t\tswap(al,bl);\n\t\tswap(a,b);\n\t\t*flag=true;\n\t}\n\telse if(a==b){\t\t//\u4e00\u4e2a\u5c0f\u4f18\u5316\uff0c\u5982\u679c\u4e00\u6837\u76f4\u63a5\u8fd4\u56de0\n\t\tresult=\"0\";\n\t\tdelete al;\n\t\tdelete bl;\n\t\treturn result;\n\t}\n\tfor(re int i=0;i<*al-*bl;i++){\t\t//\u4ea4\u6362\u5b8c\u4ee5\u540eb\u4e00\u5b9a\u662f\u8f83\u5c0f\u7684\u6570\uff0c\u76f4\u63a5\u7ed9b\u88650\n\t\tb='0'+b;\n\t}\n\t*bl=b.size();\t//\u66f4\u65b0b\u7684\u957f\u5ea6\n\tre bool* bor=new bool;\t\t//\u662f\u5426\u501f\u4f4d\n\t*bor=0;\t//\u9ed8\u8ba4\u4e0d\u501f\n\tre int* each=new int;\t//\u6bcf\u4f4d\u7684\u503c\n\tfor(re int i=*al-1;i>=0;i--){\t//\u4ece\u4f4e\u4f4d\u5f00\u59cb\u7b97\n\t\t*each=(a[i]^48)-(b[i]^48)-*bor;\t\t//\u5148\u8ba1\u7b97\u521d\u59cb\u7684each\n\t\tif(*each<0){\t//\u5982\u679ceach<0\u5373\u9700\u8981\u501f\u4f4d\n\t\t\t*each+=10;\t\t//\u501f\u4e00\u4e2a10\n\t\t\t*bor=1;\t\t//\u6807\u8bb0\u501f\u4f4d\u4e86\n\t\t}\n\t\telse{\n\t\t\t*bor=0;\t\t//\u5f88\u91cd\u8981\u4e0d\u7136\u6709\u4e00\u4e2a\u9700\u8981\u501f\u4f4d\u5269\u4e0b\u5c31\u90fd\u501f\u4e86\uff0c\u4e0d\u501f\u4e00\u5b9a\u8981\u7f6e\u4e3a0\n\t\t}\n\t\tresult=char(*each+'0')+result;\t\t//\u66f4\u65b0\u5f53\u524d\u4f4d\n\t}\n\tre int* delz=new int;\t\t//\u53bb0\n\t*delz=0;\t\t//\u4ece\u6700\u9ad8\u4e3a\u5f00\u59cb\n\twhile(result[*delz]=='0') result=result.substr(++*delz,result.size());\t\t//\u53bb\u96f6\uff0c\u628aresult\u76f4\u63a5\u53d8\u6210\u65e00\u7684\u90a3\u4e2a\u5b50\u5b57\u7b26\u4e32\n\tif(*flag==true) result='-'+result;\t\t//\u52a0\u7b26\u53f7\n\tdelete flag;\n\tdelete delz;\n\tdelete al;\n\tdelete bl;\n\tdelete bor;\n\tdelete each;\t\t//\u6307\u9488\u8bb0\u5f97delete\uff0c\u975e\u6307\u9488\u76f4\u63a5\u5ffd\u7565\n\treturn result;\t\t//\u8fd4\u56de\u7ed3\u679c\n}\n```\n\n\u4e0b\u9762\u662f\u7a0b\u5e8f\u5b8c\u6574\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<string>\n#include<iostream>\n#define re register\nusing namespace std;\ninline string fRead();\ninline string minuss(string,string);\nint main(int argc,char* argv[]){\n\tstring *a=new string;\n\tstring *b=new string;\n\t*a=fRead();\n\t*b=fRead();\n\tcout<<minuss(*a,*b)<<endl;\n\tdelete a;\n\tdelete b;\n    return 0;\t//\u8fd9\u91cc\u548ca+b\u7684\u5904\u7406\u5b8c\u5168\u4e00\u6837\n}\ninline string minuss(string a,string b){\t//\u5c31\u662f\u4e0a\u9762\u7684\u51fd\u6570\n\tre int* al=new int;\n\tre int* bl=new int;\n\tre bool* flag=new bool;\n\t*flag=false;\n\t*al=a.size(),*bl=b.size();\n\tre string result;\n\tif(*al<*bl||(*al==*bl)&&(a<b)){\n\t\tswap(al,bl);\n\t\tswap(a,b);\n\t\t*flag=true;\n\t}\n\telse if(a==b){\n\t\tresult=\"0\";\n\t\tdelete al;\n\t\tdelete bl;\n\t\treturn result;\n\t}\n\tfor(re int i=0;i<*al-*bl;i++){\n\t\tb='0'+b;\n\t}\n\t*bl=b.size();\n\tre bool* bor=new bool;\n\t*bor=0;\n\tre int* each=new int;\n\tfor(re int i=*al-1;i>=0;i--){\n\t\t*each=(a[i]^48)-(b[i]^48)-*bor;\n\t\tif(*each<0){\n\t\t\t*each+=10;\n\t\t\t*bor=1;\n\t\t}\n\t\telse{\n\t\t\t*bor=0;\n\t\t}\n\t\tresult=char(*each+'0')+result;\n\t}\n\tre int* delz=new int;\n\t*delz=0;\n\twhile(result[*delz]=='0') result=result.substr(++*delz,result.size());\n\tif(*flag==true) result='-'+result;\n\tdelete flag;\n\tdelete delz;\n\tdelete al;\n\tdelete bl;\n\tdelete bor;\n\tdelete each;\n\treturn result;\n}\n```",
        "postTime": 1560949770,
        "uid": 213346,
        "name": "Null_Cat",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2142 \u3010\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u3011"
    },
    {
        "content": "### \u3010\u601d\u8def\u3011\n\u601d\u8def\u4e0e\u5176\u4ed6\u7684\u89e3\u6cd5\u76f8\u540c\uff0c\u7528\u5b57\u7b26\u4e32\u5904\u7406\u6570\u5b57\uff0c\u4f46\u662f\u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u663e\u5f97\u66f4\u52a0\u7b80\u5355\u3002\n\n(\u53d1\u73b0\u6ca1\u6709\u91cd\u8f7d\u8fd0\u7b97\u7b26\u7684\u9898\u89e3\uff0c\u6765\u4e00\u7bc7\uff0c\u5e0c\u671b\u5bf9\u5176\u4ed6\u4eba\u6709\u5e2e\u52a9)\n### \u3010\u4ee3\u7801\u3011\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int M=10,P=1; \n\nstruct BigNum\n{\n       int n[100000],l,Y;\n       BigNum(){l=1,memset(n,0,sizeof(n));}\n       //----------------------------------\n       void init()\n       {\n            string s;\n            cin>>s;\n            int now=0,ct=0,c1=1;\n            for(int i=s.length()-1;i>=0;i--)\n            {\n             n[now]+=(s[i]-'0')*c1;\n             c1*=10;\n             ct++;\n             if(ct==P&&i!=0)\n             {\n              now++;\n              c1=1;\n              ct=0;\n             }        \n            }\n            l=now+1;     \n       }\n       //-----------------------------------\n       void print()\n       {\n            printf(\"%d\",n[l-1]);\n            for(int i=l-2;i>=0;i--)\n            printf(\"%0*d\",P,n[i]);\n            printf(\"\\n\");\n       }\n       //------------------------------------\n       BigNum operator +(BigNum x)const\n       {\n              BigNum t=*this;\n              if(x.l>t.l)t.l=x.l;\n              for(int i=0;i<t.l;i++)\n              {\n               t.n[i]+=x.n[i];\n               if(t.n[i]>=M)\n               {\n                   t.n[i+1]+=t.n[i]/M;\n                   t.n[i]%=M;             \n               }        \n              }\n              while(t.n[t.l])\n              {\n                  t.n[t.l+1]+=t.n[t.l]/M;\n                  t.n[t.l++]%=M;               \n              }     \n              return t;  \n       }\n       //--------------------------------------\n       bool operator < (BigNum x) const\n       {\n           BigNum t=*this;\n           if(t.l!=x.l)return t.l<x.l;\n           for(int i=t.l-1;i>=0;i--)\n           {\n              if(t.n[i]!=x.n[i])return t.n[i]<x.n[i];        \n           }\n           return 0;       \n       }\n       BigNum operator -(BigNum x)const\n       {\n           BigNum t=*this;\n           if(t<x){printf(\"-\");swap(t,x);} \n           for(int i=0;i<t.l;i++)\n           {\n            t.n[i]-=x.n[i];\n            if(t.n[i]<0)\n            {\n                t.n[i]+=M;\n                --t.n[i+1];            \n            }        \n           } \n           while(!t.n[t.l-1]&&t.l>1)t.l--;\n           return t;     \n       }\n       //--------------------------------------------\n       BigNum operator * (BigNum x) const//\u63d0\u4f9b\u4e862\u79cd*\u8fd0\u7b97\n       {\n              BigNum c,t=*this;\n              c.l=t.l+x.l-1;\n              for(int i=0;i<t.l;i++)\n              for(int j=0;j<x.l;j++)\n              {\n                  c.n[i+j]+=t.n[i]*x.n[j];\n                  if(c.n[i+j]>=M)\n                  {\n                      c.n[i+j+1]+=c.n[i+j]/M;\n                      c.n[i+j]%=M;               \n                  }        \n              }\n              while(c.n[c.l])\n              {\n                   c.n[c.l+1]+=c.n[c.l]/M;\n                   c.n[c.l++]%=M;               \n              }       \n              return c;\n       }\n       BigNum operator * (int x) const\n       {\n          BigNum t=*this,c;\n          c.l=t.l;\n          for(int i=0;i<t.l;i++)\n          {\n              c.n[i]+=t.n[i]*x;\n              if(c.n[i]>=M)\n              {\n                   c.n[i+1]+=c.n[i]/M;\n                   c.n[i]%=M;             \n              }        \n          }       \n          while(c.n[c.l])\n          {\n                 c.n[c.l+1]+=c.n[c.l]/M;\n                 c.n[c.l++]%=M;               \n          }\n          return c;\n       }\n       //--------------------------------------------\n    void Add(int x){if(x||l)n[l++]=x;}\n    void Re(){reverse(n,n+l);}\n    BigNum operator /(const BigNum &x)const//\u63d0\u4f9b\u4e862\u79cd/\u8fd0\u7b97\n    {\n        BigNum t=*this,r,y;\n        y.l=0,r.l=t.l;\n        for(int i=t.l-1;i>=0;--i)\n        {\n            y.Add(t.n[i]);\n            y.Re();\n            while(!(y<x))y=y-x,r.n[i]++;\n            while(!y.n[y.l-1] && y.l>1)--y.l;\n            y.Re();\n        }\n        while(!r.n[r.l-1] && r.l>1)--r.l;\n        return r;\n    }\n    BigNum operator /(const int &x)const\n    {\n        BigNum t=*this,r;\n        r.l=t.l;\n        int tmp=0;\n        for(int i=t.l-1;i>=0;--i)\n        {\n            tmp+=t.n[i];\n            if(tmp>=x)\n                r.n[i]+=tmp/x,tmp%=x;\n            tmp*=M;\n        }\n        while(!r.n[r.l-1] && r.l>1)--r.l;\n        return r;\n    }\n       //---------------------------------------\n       \n}a,b,c;\n \n \nint main()\n{\n    a.init();\n    b.init();\n/*   \n    c=a+b;\n    c.print();\n*/ \n    c=a-b;\n    c.print();\n/*\n    c=a*b;\n    c.print();\n    \n    c=a/b;\n    c.print();\n*/\n    return 0;        \n}\n```\n\u4ee3\u7801\u867d\u7136\u957f\uff0c\u4f46\u662f\u8fd9\u662f\u4e00\u5957\u5f88\u5b8c\u6574\u7684\u4ee3\u7801\u4e86\u3002",
        "postTime": 1530863669,
        "uid": 41868,
        "name": "\u54d4\u54e9\u54d4\u54e9",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 | P2142 \u9ad8\u7cbe\u5ea6\u51cf\u6cd5"
    },
    {
        "content": "\u697c\u4e0b\u6709\u4eba\u8bf4\u8981\u6539\u6210int\u6570\u7ec4\u540e\u518d\u505a\u8ba1\u7b97\u554a,\u5176\u5b9e\u5e76\u4e0d\u7528\r\n\r\n\u9ad8\u7cbe\u5ea6\uff0c\u5176\u5b9e\u5c31\u662f\u4ece\u7535\u8111\u90a3\u628a\u7535\u8111\u5b58\u4e0d\u4e0b\u7684\u6570\u636e\u642c\u5230\u7a0b\u5e8f\u91cc\uff0c\u901a\u8fc7\u81ea\u5df1\u8ba1\u7b97\u7136\u540e\u4ee5\u975e\u6b63\u5e38\u5f62\u5f0f\u53cd\u9988\u56de\u6765\u3002\u8131\u79bb\u4e86\u7535\u8111\uff0c\u6211\u4eec\u5e73\u65f6\u7684\u8ba1\u7b97\u90fd\u662f\u4f9d\u9760\u7ad6\u5f0f\u7684\uff0c\u90a3\u6211\u4eec\u5c31\u6a21\u62df\u4e00\u4e2a\u7ad6\u5f0f\u8ba1\u7b97\r\n\r\n\u91cd\u70b9\u5176\u5b9e\u5c31\u662f\u600e\u6837\u505a\u5230\u5404\u4f4d\u5bf9\u9f50,\u4e0d\u77e5\u9053\u6211\u7684\u65b9\u6cd5\u597d\u4e0d\u597d......\u6211\u662f\u5148\u8ba1\u7b97\u5df2\u8c03\u6362\u8fc7(\u6b64\u65f6a.length()>=b.length())a\u548cb\u4f4d\u6570\u4e4b\u5dee,\u518d\u5728b\u7684\u6700\u9ad8\u4f4d\u5f00\u59cb\u6dfb0,\u6dfb\u5230\u4f4d\u6570\u76f8\u540c\u4e3a\u6b62......\r\n\r\n    \r\n    \r\n```cpp\r\n    #include<bits/stdc++.h>\r\n    using namespace std;\r\n    string a,b,c;//c\u662f\u7528\u6765\u8f85\u52a9b\u6dfb\u4f4d\u7684\r\n    int ans[10010],sum;//\u7528ans\u5b58\u7b54\u6848\r\n    bool pd,bo=1;//pd\u7528\u6765\u5224\u65adb>a\r\n    int main()\r\n    {\r\n        cin>>a>>b;\r\n        if(a==b)//a=b\u76f4\u63a5\u8f93\u51fa0\r\n        {\r\n            cout<<0;\r\n            return 0;\r\n        }\r\n        else if(a.length()>b.length()) pd=1;//a\u7684\u4f4d\u6570\u6bd4b\u591a,\u90a3\u5c31\u80af\u5b9a\u6bd4b\u5927\r\n        else if(a.length()<b.length()) pd=0;//\u53cd\u4e4b,\u4e5f\u662f\u4e00\u6837\u7684\r\n        else if(a.length()==b.length())//a\u7684\u4f4d\u6570\u548cb\u4e00\u6837\r\n        {\r\n            if(a>b) pd=1;//\u53ef\u4ee5\u76f4\u63a5\u5b57\u5178\u5e8f\u6bd4\u8f83\r\n            else pd=0;\r\n        }\r\n        if(!pd) swap(a,b);//b>a,\u8c03\u6362\u4e00\u4e0b\u5c31\u662f\u4e86\r\n        sum=a.length()-b.length();//sum\u5b58a b\u4f4d\u6570\u5dee\r\n        for(int i=0;i<sum;i++) c=c+\"0\";//c\u5b58\u4e86\u9700\u8981\u6dfb\u76840\r\n        b=c+b;//\u7ed9b\u52a0\u4e0a\r\n        for(int i=a.length()-1;i>=0;i--)//\u4e2a\u4f4d\u5bf9\u9f50,\u662f\u4ecea\u8fd8\u662fb\u5f00\u59cb\u4e0d\u91cd\u8981\r\n        {\r\n            if(a[i]>=b[i]) ans[i]=a[i]-b[i];//\u4e00\u4f4d\u4e00\u4f4d\u8fdb\u884c\u8ba1\u7b97\r\n            else\r\n            {\r\n                a[i-1]--;//\u4e0d\u591f\u501f\u4f4d\r\n                ans[i]=a[i]+10-b[i];\r\n            }\r\n        }\r\n        if(!pd) cout<<'-';//\u522b\u5fd8\u4e86\u8f93\u51fa\u8d1f\u53f7\r\n        for(int i=0;i<=b.length()-1;i++)\r\n        {    \r\n            if(bo && ans[i]==0) continue;//\u7ed3\u679c\u6700\u9ad8\u4f4d\u4e0a\u53ef\u80fd\u4e3a0\uff0c\u76f4\u63a5\u8df3\u8fc7\r\n            else if(ans[i]>0) bo=0;//\u627e\u5230\u4e86\u4e0d\u4e3a0\u7684\u6700\u9ad8\u4f4d\r\n             cout<<ans[i];\r\n        }\r\n        //system(\"pause\");\r\n        return 0;\r\n}\r\n```",
        "postTime": 1513317112,
        "uid": 54591,
        "name": "Seauy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2142 \u3010\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6211\u7528\u7684\u52a8\u6001\u6570\u7ec4vector\u3002\n\n\u81ea\u4f5c\u5b7d\u4e0d\u53ef\u6d3b\uff0c\u5199\u4e86\u4e00\u957f\u4e32\u4ee3\u7801\uff0c\u8fd8\u52a0\u4e86\u4e00\u4e2a\u7c7b\u3002\n\n\u6ee1\u6ee1\u7684\u90fd\u662f\u6cea\uff08\u7c7b\uff09\u5440\uff01\n\n\u6211\u5c45\u7136\u5199\u4e8630min!\n\n\n\u8bdd\u4e0d\u591a\u8bf4\uff0c\u9996\u5148\u4ecb\u7ecd\u4e00\u4e0b\u6574\u4f53\u7684\u7ed3\u6784\n\nnum\u7c7b\u4e2d\u6709\u4e00\u4e2a\u52a8\u6001\u6570\u7ec4n\uff0c\u4ee3\u8868\u9ad8\u7cbe\u5ea6\u4e2d\u6bcf\u4e00\u4f4d\u3002\n\n\n```cpp\n#define MAXN (10)\nclass num{\n    public:\n        vector <int> n;\n        ```\n\u7136\u540e\u6709\u4e00\u4e2a\u6784\u9020\u51fd\u6570\uff0c\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\u8fd9\u4e2a\u6765\u7ed9\u9ad8\u7cbe\u5ea6\u6570\u8d4b\u503c\u3002~~\u5176\u5b9e\u6ca1\u5375\u7528~~\n\n```cpp\n        num(int in) {\n            for(; in; in/=MAXN)\n            {\n                n.push_back(in%MAXN);\n            }\n        }\n```\n\u7136\u540e\u662f\u91cd\u8f7d\u4e86\u4e00\u4e2a\u52a0\u6cd5\u8fd0\u7b97\u7b26\uff0c\u5176\u5b9e\u5c31\u662f\u6a21\u62df\u4eba\u5de5\u7ad6\u5f0f\u8ba1\u7b97...\n\n```cpp\n        num operator + (const num &a)\n        {\n            num c;\n            int i;\n            int tmp=0;\n            for(i=0; (i<a.n.size())&&(i<this->n.size()); i++)\n            {\n                c.n.push_back((a.n[i]+this->n[i]+tmp)%MAXN);\n                tmp=(a.n[i]+this->n[i]+tmp)/MAXN;\n            }\n            if(i==a.n.size())\n            {\n                for(; i<n.size(); i++)\n                {\n                    c.n.push_back((n[i]+tmp)%MAXN);\n                    tmp=(n[i]+tmp)/MAXN;\n                }\n                if(tmp) c.n.push_back(tmp);\n            }\n            else\n            {\n                for(; i<a.n.size(); i++)\n                {\n                    c.n.push_back((a.n[i]+tmp)%MAXN);\n                    tmp=(a.n[i]+tmp)/MAXN;\n                }\n                if(tmp) c.n.push_back(tmp);\n            }\n            return c;\n        }\n```\n\u7136\u540e\u53c8\u662f\u4e00\u4e2a\u91cd\u8f7d\u7684\u7b49\u4e8e\uff08\u8d4b\u503c\uff09\u8fd0\u7b97\u7b26\uff0c\u8fd9\u4e2a\u4e0d\u5fc5\u591a\u8bf4\u5427...\n\n```cpp\n        num operator = (num &a)\n        {\n            for(int i=n.size(); i; i--) n.pop_back();\n            for(int i=0; i<a.n.size(); i++) n.push_back(a.n[i]);\n            return *this;\n        }\n```\n\u7136\u540e\u5c31\u662f\u91cd\u8f7dcin>>\u548ccout<<\u4e86\u3002\n\n```cpp\nostream& operator << (ostream &o, const num & N)\n{\n    for(int i=(N.n.size()-1); i>=0; i--) cout<<N.n[i];\n    return o;\n}\nistream& operator >> (istream & in, num & N)\n{\n    string s;\n    in>>s;\n    for(int i=N.n.size(); i; i--) N.n.pop_back();\n    for(int i=(s.length()-1); i>=0; i--) N.n.push_back(s[i]-'0');\n    return in;\n}\n\nint main()\n{\n    num a, b;\n    cin>>a>>b;\n    cout<<a+b;\n    return 0;\n}\n```\n~~\u8bf4\u5b9e\u8bdd\uff0c\u8fd9\u4e9b\u4e1c\u4e1c\u4e00\u672c\u901a\u4e0a\u90fd\u6709\u3002\u3002\u3002~~\uff08\u5212\u6389)\n",
        "postTime": 1506955104,
        "uid": 46381,
        "name": "ynycoding",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2142 \u3010\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u3011"
    },
    {
        "content": "\u770bP\u8bed\u8a00\u7684\u53ea\u6709\u4e00\u4e2a\uff0c\u6765\u653e\u4e00\u4e2a\u81ea\u6211\u611f\u89c9\u6bd4\u8f83\u7e41\u590d\u7684\u7a0b\u5e8f\u3002\n\n\u8fd9\u4e2a\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\uff0c\u6211\u5728\u524d\u671f\u5904\u7406\u8d39\u7684\u4ee3\u7801\u6bd4\u8f83\u591a\uff0c\u540e\u9762\u51cf\u7684\u6bd4\u8f83\u5c11\u3002\n\n\u5148\u7528ansistring\u7c7b\u578b\u8bfb\u5165\u4e86\u4e24\u4e2a\u6570\u3002\n\n\u5148\u6bd4\u8f83\u957f\u5ea6\uff0c\u5982\u679c\u957f\u5ea6\u4e00\u6837\uff0c\u4ece\u9ad8\u4f4d\u5f00\u59cb\u6bd4\u8f83\uff0c\u5982\u679c\u7b2c\u4e00\u4e2a\u6570\u67d0\u4e00\u4f4d\u5c0f\u4e8e\u4e86\u7b2c\u4e8c\u4e2a\u6570\u6240\u5bf9\u5e94\u4f4d\u6570\uff0c\u5c31\u628a\u4e24\u4e2a\u6570\u4ea4\u6362\u4e00\u4e0b\u3002\n\n\u4e5f\u5c31\u662fa\u6570\u7ec4\u653e\u5927\u7684\u6570\uff0cb\u6570\u7ec4\u653e\u5c0f\u7684\u3002\n\n\u6211\u4e3a\u4e86\u65b9\u4fbf\u51cf\u6cd5\uff0c\u6309\u7167\u5217\u7ad6\u5f0f\u7684\u683c\u5f0f\u653e\u8fdb\u6570\u7ec4\u91cc\u4e86\u3002\n\n\u5373\u5f53\u6570\u4e3a96\u4e0e2005\u65f6\uff0ca[2,0,0,5],b[0,0,9,6]\u3002\n\n\u4e4b\u540e\u5c31\u4ece\u6700\u540e\u4e00\u4f4d\u5f00\u59cb\u51cf\uff0c\u5982\u679ca[i]<b[i]\uff0ca[i]:=a[i]+10,a[i-1]:=a[i-1]-1;\n\n\u7528c\u6570\u7ec4\u8bb0\u5f55\u7ed3\u679c\u3002\n\n\u7531\u4e8e\u6211\u662f\u4ece1\u5f00\u59cb\u8bb0\u5404\u4e2a\u4f4d\u7684\u6570\u7684\uff0c\u6240\u4ee5\u6700\u540e\u7684\u65f6\u5019\u8981\u5012\u8f93\u51fa\u3002\n\n\u6ce8\u610f\u52240\uff010\u662f\u4e0d\u80fd\u8f93\u51fa\u7684\u3002\n\n\u4ee5\u4e0b\u4ee3\u7801\uff1a\n\n```cpp\nvar s1,s2:ansistring;\n    x,y,i,j,t:longint;\n    f:boolean;\n    a,b,c:array[0..10001] of longint;\nbegin\n  readln(s1);\n  readln(s2);\n  x:=length(s1);y:=length(s2);f:=true;//f\u8868\u793a\u662f\u5426\u9700\u8981\u4ea4\u6362\uff0c\u540e\u4e5f\u53ef\u505a\u662f\u5426\u8981\u8f93\u51fa'-'\u7684\u5224\u65ad\n  if y>x then f:=false\n         else if x=y then for i:=1 to x do\n                            begin\n                              if s1[i]>s2[i] then break;//\u5982\u679c\u9ad8\u4f4d\u5df2\u7ecf\u5927\u4e8e\uff0c\u5c31\u4e0d\u7528\u5224\u4e86\n                              if s1[i]<s2[i] then begin\n                                                  f:=false;\n                                                  break;\n                                                end;\n                            end;\n  if f then begin//\u5c06\u6570\u653e\u5165a,b\u6570\u7ec4\n              for i:=1 to x do\n                val(s1[i],a[i]);t:=0;\n              for i:=x-length(s2)+1 to x do\n                begin\n                  inc(t);\n                  val(s2[t],b[i]);\n                end;\n            end\n       else begin\n              x:=length(s2);t:=0;\n              for i:=x-length(s1)+1 to x do\n                begin\n                  inc(t);\n                  val(s1[t],b[i]);\n                end;\n              for i:=1 to x do\n                val(s2[i],a[i]);\n            end;\n  t:=0;\n  while (x>0) do//\u505a\u51cf\u6cd5\n    begin\n      inc(t);\n      if a[x]<b[x] then begin \n                          a[x]:=a[x]+10;\n                          a[x-1]:=a[x-1]-1;\n                        end;\n      c[t]:=a[x]-b[x];\n      dec(x);\n    end;\n  if not(f) then write('-');\n  for i:=t downto 1 do \n    if c[i]<>0 then break;\n  for j:=i downto 1 do\n    write(c[j]);writeln;\nend.\n```",
        "postTime": 1505486772,
        "uid": 26724,
        "name": "lhchanyoel7",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2142 \u3010\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u3011"
    },
    {
        "content": "1.\u6570\u636e\u8fc7\u5927\uff0c\u9700\u8981\u7528\u5b57\u7b26\u3002\n\n2.\u901a\u8fc7\u6570\u7ec4\u5c06\u5b57\u7b26\u8f6c\u5316\u4e3a\u6570\u5e76\u4fdd\u5b58\u3002\n\n3.\u5f53\u7b2c\u4e8c\u4e2a\u6570\u5927\u4e8e\u7b2c\u4e00\u4e2a\u6570\u65f6\uff0c\u4e5f\u5c31\u662f\u7b54\u6848\u4e3a\u8d1f\u6570\u65f6\uff0c\u5927\u6570\u51cf\u5c0f\u6570\uff0c\u7b54\u6848\u524d\u52a0\u8d1f\u53f7\u3002\n\n4.\u4f4d\u4e8e\u4f4d\u76f8\u51cf\u65f6\u4e0d\u591f\u51cf\uff0c\u9700\u8981\u501f\u4f4d\u3002\n\n5.\u501f\u4f4d\u65f6\uff0c\u5411\u524d\u501f\u4e00\u4f4d\uff0c\u672c\u8eab\u52a010\uff0c\u524d\u4e00\u4f4d\u51cf1\uff0c\u4e0e\u6574\u6570\u51cf\u6cd5\u76f8\u540c\u3002\n\n6.\u8f93\u51fa\u65f6\u6ce8\u610f\u8f93\u51fa\u987a\u5e8f\uff0c\u9ad8\u4f4d\u5148\u8f93\u51fa\u3002\n\n7.\u5982\u679c\u6709\u524d\u5bfc0\uff0c\u9700\u628a\u524d\u5bfc0\u53bb\u9664\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n   \n     \n     \n        \n                  \n      \n\n       \n```cpp\n#include <iostream>\n#include <string.h>\nusing namespace std;\nchar a[100000],b[100000];  //\u628a\u6570\u5148\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\u518d\u8f93\u5165 \nint  e[100000],d[100000];\nint c[100000]={0};\nint main()\n{   \n    int i,j,x,y,z,p,q,o;\n    q=0;\n    cin>>a>>b;   //\u8f93\u5165\u4e24\u4e2a\u5b57\u7b26\u4e32 \n    x=strlen(a);   // \u6d4b\u91cf\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6 \n    y=strlen(b);    //\u6d4b\u91cf\u7b2c\u4e8c\u4e2a\u6570\u7684\u957f\u5ea6 \n    if(x>y)   //\u6bd4\u8f83\u957f\u5ea6\uff08\u4f4d\u6570\u957f\u5ea6\uff09 \n    {\n        p=x;\n        q=1;  //\u5982\u679c\u7b2c\u4e00\u4e2a\u5927\uff0c\u6807\u8bb0\u4e3a1 \uff0c\u8868\u793a\u7b54\u6848\u662f\u6b63\u6570 \n    }\n    else\n    p=y;\n    for(i=x-1,j=0;i>=0,j<=x-1;i--,j++)  //\u8f6c\u6362\uff0c\u628a\u5b57\u7b26\u8f6c\u6362\u4e3a\u6570\uff0c\u653e\u5230\u6570\u7ec4\u4e2d \n     e[j]=a[i]-'0';     // \u628a\u7b2c\u4e00\u4e2a\u6570\u6309\u4f4d\u5b58\u5165\u6570\u7ec4 \n    for(i=y-1,j=0;i>=0,j<=y-1;i--,j++)\n     d[j]=b[i]-'0';   //\u628a\u7b2c\u4e8c\u4e2a\u6570\u6309\u4f4d\u5b58\u5165\u6570\u7ec4 \n     if(x==y) //  \u5982\u679c\u4e24\u4e2a\u6570\u957f\u5ea6\uff08\u4f4d\u6570\uff09\u4e00\u6837 \n     {    q=1;\n         for(i=p-1;i>=0;i--)\n           if(e[i]<d[i])//\u6bd4\u8f83\u6bcf\u4e00\u4f4d\u4e0a\u7684\u6570\uff0c\u4ece\u9ad8\u4f4d\u5230\u4f4e\u4f4d \n             {\n                q=0;//\u5982\u679c\u7b2c\u4e00\u4e2a\u6570\u5c0f\u4e8e\u7b2c\u4e8c\u4e2a\u6570\uff0c\u6807\u8bb0\u4e3a0 \uff0c\u8868\u793a\u7b54\u6848\u4e3a\u8d1f\u6570 \n                break;  \n             }    \n     }\n    for(i=0;i<p;i++) \n         {\n              if(q==1) //   \u901a\u8fc7\u6807\u8bb0\uff0c\u5224\u65ad\u54ea\u4e2a\u5927\uff0c\u5927\u6570\u51cf\u5c0f\u6570 \n                c[i]=e[i]-d[i];\n              else\n               c[i]=d[i]-e[i];   \n         }  \n    if(q==0)  //\u7b54\u6848\u4e3a\u8d1f\uff0c\u8f93\u51fa\u8d1f\u53f7 \n      cout<<\"-\";\n     for(i=0;i<p;i++) \n     {\n        if(c[i]<0)  //\u5982\u679c\u540c\u4f4d\u76f8\u51cf\u4e3a\u8d1f \n        {\n            c[i]+=10;//\u5411\u524d\u4e00\u4f4d\u501f\u4e00\uff0c\u52a010\uff08\u51cf\u6cd5\u4e0d\u591f\u51cf\u7684\u60c5\u51b5\uff09 \n            c[i+1]-=1;\n        }       \n     }\n       o=p;      \n       for(i=p;i>=0;i--)  //\u5982\u679c\u6709\u524d\u5bfc0\uff0c\u4f8b\u5982001\uff0c\u53bb\u9664\u524d\u5bfc0 \n       {   \n             if(c[i]!=0)\n             break; \n             o=o-1;\n             if(i==0&&c[i]==0) //\u5224\u65ad\u4e24\u4e2a\u6570\u662f\u5426\u90fd\u4e3a0 \n             {\n                 o=0;\n                 break;\n          }\n       }\n       for(i=o;i>=0;i--)  //\u8f93\u51fa\u7ed3\u679c \n       cout<<c[i];\n   return 0;\n}\n\n```",
        "postTime": 1503747324,
        "uid": 47756,
        "name": "\u5514\u897f\u8fea\u897f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2142 \u3010\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u3011"
    },
    {
        "content": "\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\uff0c\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\n\n\n\u5728\u4e0b\u9762\u9644\u4e0a\u9ad8\u7cbe\u6a21\u677f\uff0c\u9ad8/\u4f4e\uff0c\u9ad8+\u9ad8\uff0c\u9ad8++\uff0c\u9ad8-\u9ad8\uff0c\u90fd\u5199\u4e0a\u4e86\uff0c\u611f\u89c9\u53ef\u4ee5\u89e3\u51b3\u5927\u90e8\u5206\u95ee\u9898\u4e86\n\n\n```cpp\n#include<algorithm>\n#include<cstring>\n#include<cstdio>\n#define N 1020000\nusing namespace std;\ntypedef long long LL;\nstruct Bigint{\n    int a[N],len;\n    bool flag;\n    Bigint(){memset(a,0,sizeof a);len=1;flag=true;}\n    bool operator == (const Bigint b) const{\n        if(flag!=b.flag || len!=b.len) return false;\n        for(int i=1;i<=len;i++)\n            if(a[i]!=b.a[i]) return false;\n        return true;\n    }\n    bool operator > (const Bigint b) const{\n        if(flag!=b.flag){\n            if(!flag) return false;\n            if(flag) return true;\n        }\n        if(flag){\n            if(len>b.len) return true;\n            if(len<b.len) return false;\n            for(int i=len;i>=1;i--){\n                if(a[i]>b.a[i]) return true;\n                if(a[i]<b.a[i]) return false;\n            }\n            return false;\n        }\n        else{\n            if(len>b.len) return false;\n            if(len<b.len) return true;\n            for(int i=len;i>=1;i--){\n                if(a[i]>b.a[i]) return false;\n                if(a[i]<b.a[i]) return true;\n            }\n            return true;\n        }\n    }\n    Bigint operator \\* (int b) const{\n        Bigint c;\n        for(int i=1;i<=c.len;i++){\n            c.a[i]+=a[i]\\*b;\n            c.a[i+1]+=c.a[i]/10;\n            c.a[i]=c.a[i]%10;\n        }\n        int num=0;\n        while(b){\n            num++;\n            b=b/10;\n        }\n        c.len=num+len+1;\n        while(!c.a[c.len]) c.len--;\n        return c;\n    }\n    Bigint operator ++ (){\n        Bigint O;\n        O.a[1]=1;\n        \\*this=\\*this+O;\n        return \\*this;\n    }\n    Bigint operator / (int b) const{\n        int c=0;Bigint ans;\n        for(int i=len;i>=1;i--){\n            ans.a[i]=ans.a[i]+(c\\*10+a[i])/b;\n            c=(c\\*10+a[i])%b;\n        }\n        ans.len=len;\n        while(!ans.a[ans.len]) ans.len--;\n        return ans;\n    }\n    bool operator < (const Bigint b) const{\n        if(flag!=b.flag){\n            if(!flag) return true;\n            if(flag) return false;\n        }\n        if(flag){\n            if(len<b.len) return true;\n            if(len>b.len) return false;\n            for(int i=len;i>=1;i--){\n                if(a[i]<b.a[i]) return true;\n                if(a[i]>b.a[i]) return false;\n            }\n            return false;\n        }\n        else{\n            if(len<b.len) return false;\n            if(len>b.len) return true;\n            for(int i=len;i>=1;i--){\n                if(a[i]<b.a[i]) return false;\n                if(a[i]>b.a[i]) return true;\n            }\n            return true;\n        }\n    }\n    Bigint operator + (const Bigint b)const{\n        if(flag&&b.flag){\n            Bigint c;\n            c.len=max(len,b.len);\n            for(int i=1;i<=c.len;i++){\n                c.a[i]+=a[i]+b.a[i];\n                c.a[i+1]+=c.a[i]/10;\n                c.a[i]=c.a[i]%10;\n            }\n            while(c.a[c.len+1]) c.len++;\n            return c;\n        }\n        if(!flag&&!b.flag){\n            Bigint c;\n            c.len=max(len,b.len);\n            for(int i=1;i<=c.len;i++){\n                c.a[i]+=a[i]+b.a[i];\n                c.a[i+1]+=c.a[i]/10;\n                c.a[i]=c.a[i]%10;\n            }\n            while(c.a[c.len+1]) c.len++;\n            c.flag=false;\n            return c;\n        }\n        if(flag&&!b.flag) return \\*this-b;\n        if(!flag&&b.flag) return b-\\*this;\n    }\n    Bigint operator - (Bigint b) const{\n        if(b==\\*this){Bigint O;return O;}\n        if(\\*this<b){\n            Bigint c;\n            c=b-\\*this;\n            c.flag=false;\n            return c;\n        }\n        if(flag&&!b.flag){\n            b.flag=true;\n            return \\*this+b;\n        }\n        if(flag&&b.flag){\n            Bigint c;\n            c.len=max(len,b.len);\n            for(int i=1;i<=c.len;i++){\n                c.a[i]+=a[i]-b.a[i];\n                if(c.a[i]<0){\n                    c.a[i]+=10;\n                    c.a[i+1]--;\n                }\n            }\n            while(!c.a[c.len]) c.len--;\n            return c;\n        }\n        if(!flag&&!b.flag){\n            b.flag=true;\n            Bigint c=\\*this;c.flag=true;\n            return b-c;\n        }\n    }\n    void scan(){\n        char c[N];\n        int top=0;\n        scanf(\"%s\",c);\n        len=strlen(c);\n        flag=true;\n        if(c[0]=='-') {flag=false;top=1;}\n        for(int i=len-1;i>=top;i--)\n            a[len-i]=c[i]-'0';\n    }\n    void print(){\n        if(!flag) printf(\"-\");\n        for(int i=len;i>=1;i--)\n            printf(\"%d\",a[i]);\n    }\n}a,ans,b;\nint main(){\n    a.scan();b.scan();\n    ans=a-b;\n    ans.print();\nreturn 0;\n}",
        "postTime": 1502864457,
        "uid": 21682,
        "name": "Duan2baka",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2142 \u3010\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u3011"
    },
    {
        "content": "#\u57fa\u7840\u9ad8\u7cbe\u7b97\u6cd5\n\n\u5728noi\u9898\u5e93\u4e2d\u6570\u636e\u5f88\u6c34\u5c31\u4e00\u8fb9\u8fc7\u6389\n\n\u5728\u6d1b\u8c37\u51fa\u73b0\u4e86\u8d1f\u6570\u7684\u60c5\u51b5\u5c31\u88ab\u5361\u4e86\u4e00\u534a\n\n\u8fdb\u884c\u8ba8\u8bba\u540eac\n\n1.\u5b57\u7b26\u4e32\u8bfb\u5165\u9006\u5e8f\u5b58\u50a8\n\n2.\u6bd4\u8f83\u4e24\u6570\u5927\u5c0f\uff0c\u5148\u6bd4\u8f83\u4f4d\u6570\u6bd4\u8f83\u4e0d\u51fa\u6765\u7684\u8bdd\u76f4\u63a5\u6bd4\u8f83\n\n3.\u5982\u679c\u51cf\u51fa\u6765\u662f\u8d1f\u6570\u5c31\u7528\u5927\u6570\u51cf\u5c0f\u6570\u52a0\u8d1f\u53f7\n\n#4\u6ce8\u610f\u5224\u65ad\u5f00\u5934\u662f\u4e0d\u662f\u4e3a0\uff01\uff01\uff01\n\n    \n           \n    \n           \n```cpp\n#include<iostream>\n#include<string>\n#include<cstring>\nusing namespace std;\nint a[10005]={0},b[10005]={0},c[10005]={0};\nint main()\n{\n    string aa,bb;\n    cin>>aa>>bb;\n    int m,n,mi,mx,mm;\n    m=aa.length();\n    n=bb.length();\n    for(int i=1;i<=m;i++)\n       a[i]=aa[m-i]-'0';\n    for(int i=1;i<=n;i++)\n       b[i]=bb[n-i]-'0';\n       if(n>m)\n        mx=n;\n        else\n        mx=m;\n    if(m>n||(m==n&&aa>=bb))\n     {\n     for(int i=1;i<=mx;i++)\n        {\n            c[i]=a[i]-b[i]+c[i];\n            while(c[i]<0)\n            {\n                a[i+1]--;\n                c[i]+=10;\n            }\n        }\n          int j=mx;\n          while(c[j]==0)\n          {\n              j--;\n              if(j==0)\n              break;\n          }\n          if(j==0)\n          cout<<0;\n          for(int i=j;i>=1;i--)\n           cout<<c[i];\n    }\n    else\n    {\n     for(int i=1;i<=mx;i++)\n        {\n            c[i]=b[i]-a[i]+c[i];\n            while(c[i]<0)\n            {\n                b[i+1]--;\n                c[i]+=10;\n            }\n        }\n          int j=mx;\n          while(c[j]==0)\n          {\n              j--;\n              if(j==0)\n              break;\n          }\n          if(j==0)\n          cout<<0;\n          else\n          cout<<'-';\n          for(int i=j;i>=1;i--)\n           cout<<c[i];\n    }\n            return 0;\n}\n```",
        "postTime": 1502507476,
        "uid": 48113,
        "name": "yuanchenfei",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2142 \u3010\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u3011"
    },
    {
        "content": "# \u7528C++\u4e2dvector\u4ee5\u53castring\u5199\u7684\uff0c\u6709\u5174\u8da3\u53ef\u4ee5\u770b\u770b\n\n## \u4e3b\u8981\u601d\u8def\u662f\u628a\u5b57\u7b26\u4e32\u5012\u5e8f\u5b58\u5230vector\u4e2d\uff0c\u8fd9\u6837\u5c31\u80fd\u4ece\u5de6\u5230\u53f3\u8ba1\u7b97\uff0c\u5728\u9006\u5e8f\u5b58\u5230vector<int> ans\u4e2d\uff0c\u5f97\u5230\u7684\u5c31\u662f\u6b63\u786e\u7ed3\u679c\uff0c\u6ce8\u610f\u6bd4\u8f83\u4e24\u4e2a\u5927\u6574\u6570\u7684\u5927\u5c0f\uff0c\u4e2a\u4eba\u89c9\u5f97\u7528C++\u81ea\u5e26\u7684vector\u4f1a\u6bd4\u8f83\u597d\u7406\u89e3\n\n\n\n    \n\n\n\n\n\n\n```cpp\n#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\nusing namespace std;\nint main()\n{\n    string str1, str2;\n    cin >> str1 >> str2;\n    string big_str, lit_str;  //\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u5927\u5c0f\uff0c\u628a\u5927\u7684\u5b57\u7b26\u4e32\u653e\u5728big_str\uff0c\u5c0f\u7684\u653e\u5728lit_str\u4e2d\n    if (str1.size() < str2.size()) {\n        big_str = str2;\n        lit_str = str1;\n        cout << \"-\";\n    }\n    else if (str1.size() > str2.size()) {\n        big_str = str1;\n        lit_str = str2;\n    }\n    else if (str1.size() == str2.size()) {\n        string::iterator s_iter1 = str1.begin(), s_iter2 = str2.begin();\n        while (*s_iter1 == *s_iter2) {\n            s_iter1++;\n            s_iter2++;\n            if (s_iter1 == str1.end() && s_iter2 == str2.end()) {\n                cout << \"0\" << endl;\n                return 0;  //\u82e5\u4e24\u4e2a\u5b57\u7b26\u4e32\u5b8c\u5168\u76f8\u7b49\u5219\u76f4\u63a5\u8f93\u51fa\u201c0\u201d\uff0c\u9000\u51fa\u7a0b\u5e8f\n            }\n        }\n        if (*s_iter1 > *s_iter2) {\n            big_str = str1;\n            lit_str = str2;\n        }\n        else if (*s_iter1 < *s_iter2) {\n            big_str = str2;\n            lit_str = str1;\n            cout << \"-\";\n        }\n    }\n    vector<int> r_ivec1, r_ivec2, r_ans;\n    for (int i = big_str.size() - 1; i >= 0; i--) {\n        int x = big_str[i] - '0';\n        r_ivec1.push_back(x);\n    }\n    for (int i = lit_str.size() - 1; i >= 0; i--) {\n        int x = lit_str[i] - '0';\n        r_ivec2.push_back(x);\n    }  //\u4ee5\u4e0a\u4e3a\u9006\u5e8f\u50a8\u5b58\u5230vector<int> r_ivec1, r_ivec2\u4e2d\n    if (r_ivec1.size() < r_ivec2.size()) {\n        int times = r_ivec2.size() - r_ivec1.size();\n        r_ivec1.insert(r_ivec1.end(), times, 0);\n    }\n    else if (r_ivec1.size() > r_ivec2.size()) {\n        int times = r_ivec1.size() - r_ivec2.size();\n        r_ivec2.insert(r_ivec2.end(), times, 0);\n    }  //\u4f4d\u6570\u5c0f\u7684\u8981\u8865\u96f6\uff0c\u5426\u5219\u8ba1\u7b97\u65f6\u4f1aruntime error\n    vector<int>::iterator iter1 = r_ivec1.begin(), iter2 = r_ivec2.begin();\n    while (iter1 != r_ivec1.end() && iter2 != r_ivec2.end()) {\n        int temp_ans = (*iter1) - (*iter2);\n        bool judge = false;\n        if (temp_ans < 0) {\n            temp_ans += 10;\n            judge = true;\n        }\n        if (judge) {\n            iter1++;\n            (*iter1)--;\n        }\n        r_ans.push_back(temp_ans);\n        iter1++;\n        iter2++;\n        if (judge)\n            iter1--;\n    }\n    vector<int> ans;\n    for (vector<int>::reverse_iterator r_iter = r_ans.rbegin(); r_iter != r_ans.rend(); r_iter++) {\n        ans.push_back(*r_iter);\n    }\n    vector<int>::iterator iter = ans.begin();\n    while (iter != ans.end()) {\n        if (*iter != 0) {\n            break;\n        }  //\u627e\u5230\u7b2c\u4e00\u4e2a\u4e0d\u4e3a 0 \u7684\u6570\u5b57\uff0citer\u8fd4\u56de\u5176\u4f4d\u7f6e\n        iter++;\n    }\n    for (iter; iter != ans.end(); iter++) {  //\u4ece\u7b2c\u4e00\u4e2a\u4e0d\u4e3a0\u7684\u6570\u5b57\u5f00\u59cb\u8f93\u51fa\n        cout << *iter;\n    }\n    cout << endl;\n    return 0;\n}\n```",
        "postTime": 1489152828,
        "uid": 26732,
        "name": "iwajef",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2142 \u3010\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u3011"
    },
    {
        "content": "\u770b\u5b8c\u4e86\u5218\u6c5d\u4f73\u5199\u7684\uff0c\u53d1\u73b0\u4ed6\u53ea\u5199\u4e86\u52a0 \u4ee3\u7801\u4ed3\u5e93\u4e5f\u6ca1\u6709\u5176\u4ed6\u7684 \u4e8e\u662f\u81ea\u5df1\u7814\u7a76\u4e86\u4e00\u4e2a\u51cf\n\n\u8c03\u4e86\u5f88\u957f\u65f6\u95f4\u4e4b\u540e\u53d1\u73b0\u4e86\u95ee\u9898\u5e76\u6539\u6b63\u4e86\uff0c\u867d\u7136\u82b1\u4e86\u65f6\u95f4\u4f46\u662f\u5f88\u503c\uff0c\u81f3\u5c11\u662f\u81ea\u5df1\u7422\u78e8\u51fa\u6765\u7684\u51cf\n\n\u89e3\u91ca\u5728\u6ce8\u91ca\u91cc\uff0c\u867d\u7136\u957f\u4f46\u662f\u80af\u5b9a\u80fd\u61c2\n\n```cpp\n#include <iostream> \n#include <fstream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n#include <string>\n//\u5df2\u6d4b\u8bd5 \u52a0\u6cd5\u662f\u5bf9\u7684\nusing namespace std;\ntypedef long long ll;\n\ninline unsigned truelenth(ll k)//\u6d4b\u4e00\u4e2a\u6574\u6570\u7684\u957f\u5ea6\n{\n    unsigned ans=0;\n    do\n    {\n        k/=10;\n        ans++;\n    }while(k>0);\n    return ans;\n}\n\ninline void checkout(vector<int > a,vector<int > b)\n{\n    printf(\"a:\\n\");\n    for(int i=a.size()-1;i>=0;i--)\n    {\n        printf(\"%d\",a[i]);\n    }\n    printf(\"\\n\");\n    printf(\"b:\\n\");\n    for(int i=b.size()-1;i>=0;i--)\n    {\n        printf(\"%d\",b[i]);\n    }\n    printf(\"\\n\");\n}\n    \nstruct biginteger\n{\n    static const int base=100000000;\n    static const int width=8;\n    vector<int > s;\n    char ch;\n    \n    biginteger(ll num=0,char ch='+')\n    {\n        \\*this=num;\n        this->ch=ch;///////////////////\n    }\n    \n    biginteger operator =(ll num)\n    {\n        s.clear();\n        do\n        {\n            int cur=num%base;\n            s.push\\_back(cur);\n            num/=base;\n        }while(num>0);\n        return \\*this;\n    }\n    \n    biginteger operator =(string &num)\n    {\n        s.clear();\n        int len=1+(num.length()-1)/width;\n        for(int i=0;i<len;i++)\n        {\n            int end=num.length()-i\\*width;\n            int start=max(0,end-width);\n            int x;                        //\u4e0b\u65b9\u4e0d\u662fend \u540e\u4e00\u4e2a\u53c2\u6570\u8981\u63a5\u957f\u5ea6\n            sscanf(num.substr(start,/\\*end\\*/end-start).c\\_str(),\"%d\",&x);\n            s.push\\_back(x);\n        }\n        return \\*this;\n    }\n    \n    friend biginteger operator +(const biginteger & a,const biginteger & b)\n    {\n        biginteger ans;\n        ans.s.clear();\n        for(unsigned i=0,g=0;;i++)\n        {\n            if(i>=a.s.size() && i>=b.s.size() && g==0)\n            {\n                break;//\u52a0\u6cd5\u7ed3\u675f\u7684\u6807\u5fd7\uff0c\u8be6\u89c1\u4e66\u4e0a\u5706\u73e0\u7b14\u5b57\n            }\n            int buffer=g;\n            if(i<a.s.size())\n            {\n                buffer+=a.s[i];\n            }\n            if(i<b.s.size())\n            {\n                buffer+=b.s[i];\n            }\n            ans.s.push\\_back(buffer%base);\n            g=buffer/base;\n        }\n        return ans;\n    }\n    \n    \n    friend biginteger operator -(const biginteger & a,const biginteger & b)\n    {\n        biginteger ans;\n        ans.s.clear();\n        vector<int > reala;\n        vector<int > realb;\n        reala.clear();\n        realb.clear();\n        reala.assign(a.s.begin(),a.s.end());\n        realb.assign(b.s.begin(),b.s.end());\n        \n        //checkout(reala,realb);\n        //\u5148\u8fdb\u884c\u4ea4\u6362 \u786e\u4fdda\u4e3a\u8f83\u5927\u6570\n        //\u7b2c\u4e00\u6b65\u5148\u770b\u5b58\u7684\u5143\u7d20\u6709\u591a\u5c11\u4e2a\n        unsigned len1=a.s.size();\n        unsigned len2=b.s.size();\n        //cout<<\"len1=\"<<len1<<endl;\n        //cout<<\"len2=\"<<len2<<endl;\n        if(len1<len2)\n        {\n            swap(reala,realb);\n            ans.ch='-';\n        }\n        if(len1==len2)\n        {\n            int tag=0;\n            //\u7b2c\u4e8c\u6b65\u4e00\u6b65\u4e00\u6b65\u5730\u6bd4\u8f83\u5143\u7d20\u5927\u5c0f\n            for(int i=len1-1;i>=0;i--)\n            {\n                if(a.s[i]<b.s[i])\n                {\n                    tag=1;//\u8868\u660e\u8981\u4ea4\u6362\n                    break;\n                }\n                if(a.s[i]>b.s[i])\n                {\n                    break;\n                }\n            }\n            if(tag==1)\n            {\n                ans.ch='-';\n                swap(reala,realb);\n            }\n        }\n        \n        //checkout(reala,realb);\n        //\u5f00\u59cb\u51cf\n        int buffer=0;\n        for(unsigned i=0;;i++)\n        {\n            if(i>=reala.size() && i>=realb.size())\n            {\n                break;\n            }\n            \n            else\n            {\n                if(i<reala.size())\n                {\n                    buffer+=reala[i];\n                }\n                if(i<realb.size())\n                {\n                    buffer-=realb[i];\n                }\n                if(buffer<0)\n                {\n                    ans.s.push\\_back(base+buffer);\n                    buffer=-1;\n                }\n                else\n                {\n                    ans.s.push\\_back(buffer);\n                    buffer=0;\n                }\n            }\n        }\n        //\u53bb\u6389\u9ad8\u4f4d\u4e0a\u76840\n        for(int i=ans.s.size()-1;i>=0;i--)\n        {\n            if(ans.s[i]>0) break;\n            if(ans.s[i]==0) \n            {\n                ans.s.pop\\_back();\n            }\n        }\n        /\\*/\n        cout<<\"ans:\"<<endl;\n        checkout(ans.s,ans.s);\n        cout<<endl;\n        cout<<ans.ch<<endl;\n        /\\*/\n        return ans;\n    }\n};\n\n    ostream& operator << (ostream &out,const biginteger& x)\n    {\n        if(x.ch=='-') out<<'-';\n        out<<x.s.back();\n        for(int i=x.s.size()-2;i>=0;i--)\n        {\n            char buffer[10];\n            memset(buffer,0,sizeof(buffer));\n            sprintf(buffer,\"%08d\",x.s[i]); \n            //out<<buffer;\n            \n            //\u4e0d\u662f\u50cf\u4e0a\u9762\u8fd9\u6837\u52a0\u7684\n            for(unsigned i=0;i<strlen(buffer);i++)\n            {             \n                out<<buffer[i];\n            }\n        }\n        return out;\n    }\n    \n    istream& operator >> (istream &in,biginteger& x)\n    {\n        string s;\n        if(!(in>>s)) \n            return in;//\u8f93\u5165\u4e0d\u6210\u529f \u76f4\u63a5\u8fd4\u56de\n        x=s;\n        return in;\n    }\n\nint main()\n{\n    //freopen(\"1.in\",\"r\",stdin);\n    //freopen(\"1.out\",\"w\",stdout);\n    ios::sync\\_with\\_stdio(false);\n    biginteger a,b;\n    string sa;\n    string sb;\n    cin>>sa;\n    cin>>sb;\n    //cout<<sa<<endl;\n    //cout<<sb<<endl;\n    a=sa;\n    b=sb;\n    cout<<a-b<<endl;\n    return 0;\n}",
        "postTime": 1487318025,
        "uid": 25794,
        "name": "\u6ca1\u540d\u5b57\u53ef\u88ab\u7528",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2142 \u3010\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u3011"
    },
    {
        "content": "[c]\n```cpp\n#include<stdio.h>\n#include<string.h>\nchar a[101],b[101],c[101],d[101],e[101];\nint i,la,lb,n,t;\nint main()\n{\n    gets(c);\n    gets(d);\n    if (strcmp(c,d)==0)\n    {\n        printf(\"0\");\n        return 0;\n```\n}\\\u76f8\u7b49\u8f93\u51fa0\n```cpp\n    la=strlen(c);\n    lb=strlen(d);\n    if (la>lb||(la==lb&&strcmp(c,d)>0))\n    {\n        strcpy(a,c);\n        strcpy(b,d);\n    }\n    else\n    {\n        printf(\"-\");\n        strcpy(a,d);\n        strcpy(b,c);\n```\n}\\\u5904\u7406\u8d1f\u6570\n```cpp\n    la=strlen(a);\n    lb=strlen(b);\n    t=0;\n    for(i=1;i<=la;i++)\n    {\n        n=a[la-i]-48;\n        n=n-t;\n        if (lb>=i) n=n-b[lb-i]+48;\n        if (n<0)\n        {\n            n+=10;\n            t=1;\n        }\n        else t=0;\n        e[i-1]=n+48;\n```\n}\\\u76f8\u51cf\n```cpp\n    while(e[la-1]=='0')\n        la--;\\\u5904\u74060\n    for(i=la-1;i>=0;i--)\n        printf(\"%c\",e[i]);\\\u5012\u5e8f\u8f93\u51fa\n    return 0;\n}\n```",
        "postTime": 1442125443,
        "uid": 9008,
        "name": "eagadsgbsadfhb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2142 \u3010\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u3011"
    },
    {
        "content": "```cpp\n\n#include<iostream>\n#include<cstdlib>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint main()\n{\n    string d,e,f;\n    int a[101]={0},b[101]={0},c[101]={0},g=0,h,k,l;\n    cin>>d>>e;//\u8f93\u5165\n    h=d.size();//\u6c42\u957f\u5ea6\n    k=e.size();/\u6c42\u957f\u5ea6\n    if (k>h)\n    g=1;//\u6807\u5fd7\n    if (k==h)\n    for (int i=0;i<h;i++)\n    {\n    if (d[i]>e[i])\n    break;\n    if (e[i]>d[i])\n    g=1;\n    if (e[i]=d[i])\n    g=2;\n    }\n    if (g==2)\n    cout<<0<<endl;\n    if (g==1)\n    {\n    cout<<\"-\";//\u5224\u65ad\u8d1f\u6570\n    f=d;\n    d=e;\n    e=f;\n    h=d.size();\n    k=e.size();\n    }\n    for (int i=0;i<h;i++)\n    a[h-i]=d[i]-'0';\n    for (int i=0;i<k;i++)\n    b[k-i]=e[i]-'0';\n    for (int i=1;i<=h||i<=k;i++)\n    {\n    if (a[i]<b[i])\n    {\n    a[i]=a[i]+10;\n    a[i+1]--;\n    }\n    c[i]=a[i]-b[i];\n    l=i;\n    }\n    while (c[l]==0&&l>=1)//\u53bb0\n    l--;\n    for (int i=l;i>0;i--)//\u8f93\u51fa\n    cout<<c[i];\n    return 0;\n}\n\n```",
        "postTime": 1435911115,
        "uid": 5895,
        "name": "Megumi_Cold",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2142 \u3010\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u3011"
    },
    {
        "content": "\u4ece\u952e\u76d8\u8bfb\u5165\u4e24\u4e2a\u6b63\u6574\u6570\uff0c\u6c42\u5b83\u4eec\u7684\u5dee\u3002\n\n\u5206\u6790\uff1a\u7c7b\u4f3c\u52a0\u6cd5\uff0c\u53ef\u4ee5\u7528\u7ad6\u5f0f\u6c42\u51cf\u6cd5\u3002\u5728\u505a\u51cf\u6cd5\u8fd0\u7b97\u65f6\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff1a\u88ab\u51cf\u6570\u5fc5\u987b\u6bd4\u51cf\u6570\u5927\uff0c\u540c\u65f6\u9700\u8981\u5904\u7406\u501f\u4f4d\u3002\n\n\u56e0\u6b64\uff0c\u53ef\u4ee5\u5199\u51fa\u5982\u4e0b\u5173\u7cfb\u5f0f\n\nif a[i]<b[i] then begin a[i+1]:=a[i+1]-1;a[i]:=a[i]+10 end\n\nc[i]:=a[i]-b[i]\n\n\u7c7b\u4f3c\uff0c\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u7684\u53c2\u8003\u7a0b\u5e8f\uff1a\n\n```cpp\nprogram exam2;\nconst\nmax=200;   \nvar\n   a,b,c:array[1..max] of 0..9;\nn,n1,n2:string;\n   lena,lenb,lenc,i,x:integer;\nbegin\nreadln(n1);\nreadln(n2);\n```\n{\u5904\u7406\u88ab\u51cf\u6570\u548c\u51cf\u6570}\nif (length(n1)<length(n2)) or (length(n1)=length(n2)) and (n1<n2) then\n\n```cpp\n        begin\n          n:=n1;n1:=n2;n2:=n;\n          write('-');{n1<n2,\u7ed3\u679c\u4e3a\u8d1f\u6570}\n        end;\n     lena:=length(n1); lenb:=length(n2);\n     for i:=1 to lena do a[lena-i+1]:=ord(n1[i])-ord('0');\n     for i:=1 to lenb do b[lenb-i+1]:=ord(n2[i])-ord('0');\n     i:=1;\n     while (i<=lena) or(i<=lenb) do begin\n         x:=a[i]-b[i]+10+x;{\u4e0d\u8003\u8651\u5927\u5c0f\u95ee\u9898\uff0c\u5148\u5f80\u9ad8\u4f4d\u501f10}\n         c[i]:= x mod 10;{\u4fdd\u5b58\u7b2ci\u4f4d\u7684\u503c}\n         x:=x div 10-1;{\u5c06\u9ad8\u4f4d\u501f\u6389\u76841\u51cf\u53bb}\n         i:=i+1;\n    end;\n    lenc:=i;\n  while (c[lenc]=0) and (lenc>1) do dec(lenc);  {\u6700\u9ad8\u4f4d\u76840\u4e0d\u8f93\u51fa}\n  for i:=lenc downto 1 do write(c[i]);\n```\nwriteln\n\nend.\n(\u6ee1\u5206\u7a0b\u5e8f{\u4e0d\u53ef\u6284\u88ad})\n\n\u8003\u8651\u8d1f\u6570\n",
        "postTime": 1425811215,
        "uid": 5963,
        "name": "Until_The_Day",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2142 \u3010\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u3011"
    },
    {
        "content": "**\u9ad8\u7cbe\u51cf**\u662f\u975e\u5e38\u7ecf\u5178\u7684\u9898\u76ee\u3002[u]\uff08\u5f53\u7136\u4e86\uff0c\u5728NOIP\u4e2d\u57fa\u672c\u662f\u4e0d\u4f1a\u5355\u72ec\u51fa\u6765\u8003\u7684\uff09[/u]\u56e0\u6b64\uff0c\u719f\u7ec3\u7684\u638c\u63e1\u662f\u5f88\u6709\u5fc5\u8981\u7684\u3002\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e2a\u53c2\u8003\uff0c\u672a\u5fc5\u662f\u6700\u4f18\uff0c\u6b22\u8fce\u5404\u4f4d\u63d0\u51fa\u610f\u89c1\u3002\n\n```delphi\n\nvar i,l1,l2:longint;\n    a,b,c:array [1..502] of longint;\n    ch:array [1..502] of char;\n    fan:boolean;\nbegin\n repeat//\u8f93\u5165\u88ab\u51cf\u6570\uff0c\u53ef\u4ee5\u7528array of char\u6216ansistring\u50a8\u5b58\n  inc(l1);\n  read(ch[l1]);\n until eoln;\n for i:=1 to l1 do a[i]:=ord(ch[l1-i+1])-48;//\u8f6c\u5316\u4e3aarray of longint\n readln;\n repeat//\u5bf9\u51cf\u6570\u7684\u5904\u7406\u540c\u4e0a\n  inc(l2);\n  read(ch[l2]);\n until eoln;\n for i:=1 to l2 do b[i]:=ord(ch[l2-i+1])-48;\n if (l1<l2) or (l1=l2) and (a[1]<b[1]) then//\u7279\u6b8a\u60c5\u51b5\uff1a\u5f53\u5dee\u4e3a\u8d1f\u6570\u65f6\n  begin\n   fan:=true;//\u8d1f\u6570\u6807\u8bb0\u4e3a\u771f\uff0c\u4f9b\u540e\u671f\u5224\u65ad\u662f\u5426\u8f93\u51fa\u8d1f\u53f7\n   //\u4ea4\u6362\u4e24\u4e2a\u6570\uff0c\u56e0\u4e3a|a-b|=|b-a|\uff0c\u53ea\u9700\u5224\u65ad\u662f\u5426\u8f93\u51fa\u8d1f\u53f7\u5c31\u884c\u4e86\n   for i:=1 to l1 do c[i]:=a[i];\n   for i:=1 to l2 do a[i]:=b[i];\n   fillchar(b,sizeof(b),0);\n   for i:=1 to l1 do b[i]:=c[i];\n   l1:=l2;//\u51cf\u6cd5\u8fd0\u7b97\u6267\u884cMax(Len1,Len2)\u6b21\uff0c\u8fd9\u91cc\u7528L1\u50a8\u5b58\n  end;\n for i:=1 to l1 do\n begin\n  c[i]:=a[i]-b[i];\n  if (c[i]<0) and (i<l1) then//\u4e0d\u662f\u6700\u9ad8\u4f4d\u65f6\u501f\u4f4d\n   begin\n    dec(a[i+1]);//\u6ce8\u610f\u8fd9\u91cc\u8981\u7d2f\u51cf\u7684\u4e0d\u662fc\u6570\u7ec4\uff0c\u5e94\u8be5\u662fa\u6570\u7ec4\n    inc(c[i],10);\n   end;\n end;\n while c[l1]=0 do dec(l1);//\u627e\u5230\u6700\u9ad8\u7684\u975e0\u4f4d\n if l1<=0 then//\u5f53\u5dee\u4e3a0\u65f6\uff0c\u76f4\u63a5\u8f93\u51fa\u5e76\u9000\u51fa\n  begin\n   writeln(0);\n   halt;\n  end;\n //\u8f93\u51fa\u5dee\n if fan then write('-');\n for i:=l1 downto 1 do write(c[i]);\nend.\n\n```",
        "postTime": 1425795924,
        "uid": 2699,
        "name": "Ufowoqqqo",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2142 \u3010\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u3011"
    },
    {
        "content": " ```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int m=0x3f3f3f;\nint main()\n{\n    //\u5b9a\u4e49\u4e24\u4e2a\u51cf\u6570\u4e3a\u5b57\u7b26\u6570\u7ec4n1\uff0cn2\u3002\u5e76\u5b9a\u4e49\u4e00\u4e2a\u8f6c\u6362\u53d8\u91cf\u3002 \n\tchar n[m],n1[m],n2[m];\n\t//\u5b9a\u4e49\u4e09\u4e2a\u6574\u578b\u6570\u7ec4a\uff0cb,c\u3002 \n\tlong long a[m],b[m],c[m];\n\t//\u5b9a\u4e49\u4e24\u4e2a\u51cf\u6570\u4e0e\u7ed3\u679c\u7684\u957f\u5ea6\u4e0e\u501f\u4f4d\u4e3a\u6574\u578b\u3002\n\tint lena,lenb,lenc,i;\n\t//\u5c06a\uff0cb\uff0cc\u7684\u503c\u6e05\u96f6\u3002\n\tmemset(a,0,sizeof(a));\n\tmemset(b,0,sizeof(b));\n\tmemset(c,0,sizeof(c));\n\t//\u8f93\u5165\u51cf\u6570\u548c\u88ab\u51cf\u6570\u3002\n\tscanf(\"%s%s\",n1,n2); //gets(a1),gets(b1);\n\t//\u6bd4\u8f83\u51cf\u6570\u4e0e\u88ab\u51cf\u6570\u5927\u5c0f\u3002 \n\tif(strlen(n1)<strlen(n2)||(strlen(n1)==strlen(n2)&&strcmp(n1,n2)<0))//if\u8bed\u53e5\u540e\u9762\u5982\u679c\u6709\u591a\u6761\u8bed\u53e5\uff0c\u8981\u52a0\u5927\u62ec\u53f7\u3002 \n\t{\n\t//\u5c06 n1 \u7684\u503c\u5b8c\u5168\u5b58\u653en\uff08\u8fc7\u6e21\uff09\u3002\n\tstrcpy(n,n1);\n    //\u5c06n2 \u7684\u503c\u5b8c\u5168\u8d4b\u7ed9n1.\n    strcpy(n1,n2);\n    //\u5c06n \u7684\u503c\u5b8c\u5168\u8d4b\u7ed9n2.\n    strcpy(n2,n);\n    //\u4ea4\u6362\u4e86\u51cf\u6570\u548c\u88ab\u51cf\u6570\uff0c\u7ed3\u679c\u4e3a\u8d1f\u6570\u3002 \n\tcout<<\"-\";\n\t}\n\t//\u5b57\u7b26\u4e32\u51fd\u6570\u53d6\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u8d4b\u503c\u7ed9 lena\u4e0elenb\u3002 \n\tlena=strlen(n1);\n\tlenb=strlen(n2);\n\t//n1\u51cf\u6570\u5012\u7f6e\u653e\u5165a\u6570\u7ec4\uff08\u5bf9\u9f50\u4e2a\u4f4d) \n\tfor(int i=1;i<=lena;i++) a[i]=n1[lena-i]-'0'; \n\t//n2\u88ab\u51cf\u6570\u5012\u7f6e\u653e\u5165b\u6570\u7ec4\uff08\u5bf9\u9f50\u4e2a\u4f4d) \n\tfor(int i=1;i<=lenb;i++) b[i]=n2[lenb-i]-'0'; \n\t//\u4ece\u4e2a\u4f4d\u5f00\u59cb\u76f8\u51cf\u3002 \n\t\n\tfor(i=1;i<=lena;i++)\n\t{\n\t\t//\u6bd4\u8f83\u88ab\u51cf\u6570\u4e2a\u4f4d\u4e0a\u7684\u6570\u4e0e\u51cf\u6570\u4e2a\u4f4d\u4e0a\u7684\u6570\u3002 \n\t\tif(a[i]<b[i])\n\t\t{\n\t\t\t//\u88ab\u51cf\u6570\u4e0a\u4e2a\u4f4d\u7684\u6570\u5411\u5341\u4f4d\u501f10\u3002 \n\t\t\ta[i]+=10;\n\t\t\t// \u5341\u4f4d\u4e0a\u7684\u6570\u51cf1. \n\t\t\ta[i+1]--;\n\t\t}\n\t\t// \u76f8\u5e94\u4f4d\u6570\u76f8\u51cf\n\t\tc[i]=a[i]-b[i];\n\t\t//\u4ece\u4f4e\u4f4d\u5f80\u9ad8\u4f4d\u76f8\u51cf\u3002 \n\t\t\n\t}\n\t//\u5904\u7406\u6700\u9ad8\u4f4d\u4e3a0 \n\tlenc=i;\n\twhile((c[lenc]==0)&&(lenc>1)) lenc--;\n\t//\u8f93\u51fa\u7ed3\u679c\n\tfor(i=lenc;i>=1;i--)  \n\tcout<<c[i];\n\treturn 0;\n}\n```\n",
        "postTime": 1567909350,
        "uid": 231018,
        "name": "tjq0630",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2142 \u3010\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u3011"
    },
    {
        "content": " `\u9ad8\u7cbe\u5ea6\u51cf\u6cd5` \u548c `\u9ad8\u7cbe\u5ea6\u52a0\u6cd5` \u76f8\u6bd4\uff0c\u51cf\u6cd5\u5728**\u5dee\u4e3a\u8d1f\u6570**\u65f6\u5904\u7406\u7684\u7ec6\u8282\u66f4\u591a\u4e00\u70b9\uff1a\u5f53\u88ab\u51cf\u6570\u5c0f\u4e8e\u51cf\u6570\u65f6\uff0c\u5dee\u4e3a\u8d1f\u6570\uff0c\u5dee\u7684\u7edd\u5bf9\u503c\u662f\u51cf\u6570\u51cf\u53bb\u88ab\u51cf\u6570\uff1b\u5728\u7a0b\u5e8f\u5b9e\u73b0\u4e0a\u7528\u4e00\u4e2a\u53d8\u91cf\u6765\u5b58\u50a8\u7b26\u53f7\u4f4d\uff0c\u7528\u53e6\u4e00\u4e2a\u6570\u7ec4\u5b58\u5dee\u7684\u7edd\u5bf9\u503c\u3002\n\n**\u540c\u65f6\u6ce8\u610f\u6ce8\u610f\u6d88\u9664\u524d\u5bfc $0$**\n\n\n```\n\n#include<iostream>\n\n#include<cstdio>\n  \nusing namespace std;\n\nconst int maxn=10500;\n\nstruct SuperNum{\n\n        int flag;\n        int s[maxn];\n        SuperNum(){\n            flag=0;\n            for(int i=1;i<maxn;i++)  s[i]=0;\n            s[0]=1;\n        }\n        SuperNum(string x){\n            flag=0;\n            s[0]=x.length();\n            for(int i=1;i<=s[0];i++)\n                s[i]=x[s[0]-i]-'0';\n            for (int i=s[0]+1;i<maxn;i++)\n                s[i]=0;\n        }\n};\n\nbool operator < (SuperNum a, SuperNum b){\n\n        if(a.s[0]<b.s[0])  return 1;\n        if(a.s[0]>b.s[0])  return 0;\n        for(int i=a.s[0];i>=1;i--)\n            if(a.s[i]>b.s[i])  return 0;\n            else if(a.s[i]<b.s[i])  return 1;\n        return 0;\n}\n\nSuperNum operator - (SuperNum a, SuperNum b){\n\n        SuperNum c;\n        for(int i=0;i<maxn;i++)  c.s[i]=0;\n        if (a<b){\n            c.flag=1;\n            SuperNum tmp=a;\n            a=b;\n            b=tmp;\n        }\n        else\n            c.flag=0;\n        int s,jw=0;\n        c.s[0]=a.s[0];\n        for(int i=1;i<=c.s[0];i++){\n            s=a.s[i]-b.s[i]-jw;\n            if(s<0){\n                jw=1;\n                s+=10;\n            }\n            else jw=0;\n            c.s[i]=s%10;\n        }\n        while(c.s[0]>1&&c.s[c.s[0]]==0)  c.s[0]-=1;\n        return c;\n}\n\nvoid print(SuperNum c){\n\n       if(c.flag==1)  cout<<\"-\";\n       for(int i=c.s[0];i>=1;i--)\n           cout<<c.s[i];\n}\n\nint main(){\n\n        string a,b;\n        cin>>a>>b;\n        SuperNum x1(a),y1(b);\n        SuperNum a2=x1-y1;\n        print(a2);cout<<endl;\n        return 0;\n}\n```",
        "postTime": 1538728409,
        "uid": 90615,
        "name": "opened",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2142 \u3010\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u3011"
    },
    {
        "content": "\u8fd9\u4e48\u591a\u7eaf\u9ad8\u7cbe\u5ea6\u7248\uff0c\u6211\u5c31\u53d1\u4e00\u7bc7\u8fd0\u7b97\u7b26\u91cd\u8f7d\u7248\u5427\uff01\n\n\u5927\u5bb6\u4e5f\u53ef\u4ee5\u5b66\u4e00\u4e0bBIGNUM\uff0c\u5373\u8fd0\u7b97\u7b26\u91cd\u8f7d\u7248\u9ad8\u7cbe\u5ea6\u8fd0\u7b97\u3002\u3002\u3002\n\n\u52a0\u51cf\u4e58\u9664\u548c\u8bfb\u5165\u8f93\u51fa\u90fd\u6709\u54e6\uff01\n\n\u5982\u6709\u4e0d\u8db3\u4e4b\u5904\u8bf7\u5404\u4f4d\u5927\u4f6c\u4eec\u591a\u591a\u6307\u6559\u672c\u5c0f\u849f\u84bb\u3002****\n\n\n## \u9644\u4e0a\u4ee3\u7801\uff0c\u76f8\u4fe1\u5927\u5bb6\u90fd\u80fd\u770b\u61c2\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn = 20000; \nstruct bign{ \n  int len, s[maxn]; \n```\n/\\*\u4ee5\u4e0b\u7684\u6784\u9020\u51fd\u6570\u662fC++\u4e2d\u7279\u6709\u7684\uff0c\u4f5c\u7528\u662f\u8fdb\u884c\u521d\u59cb\u5316\u3002\n\u4e8b\u5b9e\u4e0a\uff0c\u5f53\u5b9a\u4e49bign x\u65f6\uff0c\u5c31\u4f1a\u6267\u884c\u8fd9\u4e2a\u51fd\u6570\uff0c\u628ax.s\u6e05\u96f6\uff0c\u5e76\u8d4bx.len=1 \u3002\n\n\u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u5728C++\u4e2d\uff0c\u5e76\u4e0d\u9700\u8981typedef\u5c31\u53ef\u4ee5\u76f4\u63a5\u7528\u7ed3\u6784\u4f53\u540d\u6765\u5b9a\u4e49\uff0c\u800c\u4e14\n\n\u8fd8\u63d0\u4f9b\u201c\u81ea\u52a8\u521d\u59cb\u5316\u201d\u7684\u529f\u80fd\uff0c\u4ece\u8fd9\u4e2a\u610f\u4e49\u4e0a\u8bf4\uff0cC++\u6bd4C\u8bed\u8a00\u65b9\u4fbf\n\n\\*/\n   \n   \n```cpp\n  bign() { \n    memset(s, 0, sizeof(s)); \n    len = 1; \n  } \n  bign(int num) { \n    *this = num; \n  } \n  //\u5b9a\u4e49\u4e3aconst\u53c2\u6570\uff0c\u4f5c\u7528\u662f \u4e0d\u80fd\u5bf9const\u53c2\u6570\u7684\u503c\u505a\u4fee\u6539  \n  bign(const char* num) { \n    *this = num; \n  } \n```\n/\\*\u4ee5\u4e0a\u662f\u6784\u9020\u65b9\u6cd5\uff0c\u521d\u59cb\u5316\u65f6\u5bf9\u6267\u884c\u76f8\u5e94\u7684\u65b9\u6cd5\\*/\n   \n   \n     \n     \n     \n```cpp\n  bign operator = (int num) { \n    char s[maxn]; \n    sprintf(s, \"%d\", num); \n    *this = s; \n    return *this; \n  }  \n  //\u51fd\u6570\u5b9a\u4e49\u540e\u7684const\u5173\u952e\u5b57\uff0c\u5b83\u8868\u660e\u201cx.str()\u4e0d\u4f1a\u6539\u53d8x\u201d  \n  string str() const { \n    string res = \"\"; \n    for(int i = 0; i < len; i++) res = (char)(s[i] + '0') + res; \n    if(res == \"\") res = \"0\"; \n    return res; \n  } \n  void clean() { \n    while(len > 1 && !s[len-1]) len--; \n  } \n```\n/\\* \u4ee5\u4e0b\u662f\u91cd\u8f7d\u64cd\u4f5c\u7b26 \\*/\n     \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n```cpp\n  bign operator = (const char* num) { \n    //\u9006\u5e8f\u5b58\u50a8\uff0c\u65b9\u4fbf\u8ba1\u7b97  \n    len = strlen(num); \n    for(int i = 0; i < len; i++) s[i] = num[len-i-1] - '0'; \n    return *this; \n  } \n  bign operator + (const bign& b) const{ \n    bign c; \n    c.len = 0; \n    for(int i = 0, g = 0; g || i < max(len, b.len); i++) { \n      int x = g; \n      if(i < len) x += s[i]; \n      if(i < b.len) x += b.s[i]; \n      c.s[c.len++] = x % 10; \n      g = x / 10; \n    } \n    return c; \n  } \n  bign operator * (const bign& b) { \n    bign c; c.len = len + b.len; \n    for(int i = 0; i < len; i++) \n      for(int j = 0; j < b.len; j++) \n        c.s[i+j] += s[i] * b.s[j]; \n    for(int i = 0; i < c.len-1; i++){ \n      c.s[i+1] += c.s[i] / 10; \n      c.s[i] %= 10; \n    } \n    c.clean(); \n    return c; \n  } \n  bign operator - (const bign& b) { \n    bign c; c.len = 0; \n    for(int i = 0, g = 0; i < len; i++) { \n      int x = s[i] - g; \n      if(i < b.len) x -= b.s[i]; \n      if(x >= 0) g = 0; \n      else { \n        g = 1; \n        x += 10; \n      } \n      c.s[c.len++] = x; \n    } \n    c.clean(); \n    return c; \n  } \n  bool operator < (const bign& b) const{ \n    if(len != b.len) return len < b.len; \n    for(int i = len-1; i >= 0; i--) \n      if(s[i] != b.s[i]) return s[i] < b.s[i]; \n    return false; \n  } \n  bool operator > (const bign& b) const{ \n    return b < *this; \n  } \n  bool operator <= (const bign& b) { \n    return !(b > *this); \n  } \n  bool operator == (const bign& b) { \n    return !(b < *this) && !(*this < b); \n  } \n  bign operator += (const bign& b) { \n    *this = *this + b; \n    return *this; \n  } \n}; \nistream& operator >> (istream &in, bign& x) { \n  string s; \n  in >> s; \n  x = s.c_str(); \n  return in; \n} \nostream& operator << (ostream &out, const bign& x) { \n  out << x.str(); \n  return out; \n} \nint main() { \n  bign a,b;\n  cin>>a>>b;\n  if (a<b) cout<<\"-\"<<b-a<<endl; else cout <<a-b<< endl; \n  return 0; \n} \n```",
        "postTime": 1513678146,
        "uid": 75713,
        "name": "surpassion",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2142 \u3010\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u3011"
    },
    {
        "content": "##  \u9ad8\u7cbe\u5ea6\u51cf\u6cd5\n\n\u548c\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u5728\u5dee\u4e3a\u8d1f\u6570\u65f6\u5904\u7406\u7684\u7ec6\u8282\u66f4\u591a\u4e00\u70b9\uff1a\u5f53\u88ab\u51cf\u6570\u5c0f\u4e8e\u51cf\u6570\u65f6\uff0c\u5dee\u4e3a\u8d1f\u6570\uff0c\u5dee\u7684\u7edd\u5bf9\u503c\u662f\u51cf\u6570\u51cf\u53bb\u88ab\u51cf\u6570\uff1b\u5728\u7a0b\u5e8f\u5b9e\u73b0\u4e0a\u7528\u4e00\u4e2a\u53d8\u91cf\u6765\u5b58\u50a8\u7b26\u53f7\u4f4d\uff0c\u7528\u53e6\u4e00\u4e2a\u6570\u7ec4\u5b58\u5dee\u7684\u7edd\u5bf9\u503c\u3002\n\n\u00a0 \u7b97\u6cd5\u6d41\u7a0b\uff1a\n\n\uff081\uff09\u8bfb\u5165\u88ab\u51cf\u6570S1\uff0cS2\uff08\u5b57\u7b26\u4e32\uff09\uff1b\n\n\uff082\uff09\u7f6e\u7b26\u53f7\u4f4d\uff1a\u5224\u65ad\u88ab\u51cf\u6570\u662f\u5426\u5927\u4e8e\u51cf\u6570\uff1a\u5927\u5219\u5c06\u7b26\u53f7\u4f4d\u7f6e\u4e3a\u7a7a\uff1b\u5c0f\u5219\u5c06\u7b26\u53f7\u4f4d\u7f6e\u4e3a\u201c-\u201d\uff0c\u4ea4\u6362\u51cf\u6570\u4e0e\u88ab\u51cf\u6570\uff1b\n\n\uff083\uff09\u88ab\u51cf\u6570\u4e0e\u51cf\u6570\u5904\u7406\u6210\u6570\u503c\uff0c\u653e\u5728\u6570\u7ec4\u4e2d\uff1b\n\n\uff084\uff09\u8fd0\u7b97\uff1a\n\n\u00a0\u00a0\u00a0 A\u3001\u53d6\u6570\uff1b\n\n\u00a0 \u00a0 B\u3001\u5224\u65ad\u662f\u5426\u9700\u8981\u501f\u4f4d\uff1b\n\n\u00a0\u00a0 C\u3001\u51cf\uff0c\u5c06\u8fd0\u7b97\u7ed3\u679c\u653e\u5230\u5dee\u6570\u7ec4\u76f8\u5e94\u4f4d\u4e2d\uff1b\n\n\u00a0\u00a0 D\u3001\u5224\u65ad\u662f\u5426\u8fd0\u7b97\u5b8c\u6210\uff1a\u662f\uff0c\u8f6c5\uff1b\u4e0d\u662f\uff0c\u8f6cA\uff1b\n\n\uff085\uff09\u6253\u5370\u7ed3\u679c\uff1a\u7b26\u53f7\u4f4d\uff0c\u7b2c1\u4f4d\uff0c\u5faa\u73af\u5904\u7406\u7b2c2\u5230\u6700\u540e\u4e00\u4f4d\uff1b\n\n######\u4e0b\u9762\u662f\u6e90\u4ee3\u7801\uff1a\n\n\n\n```cpp\n    #include <iostream>\n    #include <cstdio>\n    #include <cstring>\n    const int MAXN=1000001;\n    using namespace std;\n    int main() {\n        string a1, b1, t;\n        int a[MAXN] = {0}, b[MAXN] = {0}, c[MAXN] = {0};\n        int lena, lenb, lenc;\n        int i;\n        cin >> a1 >> b1;\n    while (a[lenc] == 0 && lenc > 0) lenc--; \n        memset(a,0,sizeof(a));  //\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\uff0c\u4e0d\u8d4b0\uff0c\u5728\u6d1b\u8c37\u4e2d\u5c31\u8fc7\u4e0d\u53bb\n        memset(b,0,sizeof(b));\n        memset(c,0,sizeof(c));\n        lena = a1.length();\n        lenb = b1.length();\n        if (lena<lenb || lena==lenb && a1<b1) {    //\u4e24\u4e2a\u6570\u4ea4\u6362\uff0c\u4fdd\u8bc1\u88ab\u51cf\u6570\u5927 \n            t = a1;\n            a1 = b1;\n            b1 = t;\n            cout << \"-\";\n        } \n    lena = a1.length();\n        lenb = b1.length();\n        for(i = 0; i < lena ; i++) a[i]=a1[lena-i-1]-'0';  //\u88ab\u51cf\u6570\u5012\u5e8f\u5b58\u5165a\u6570\u7ec4\n        for(i = 0; i < lenb ; i++) b[i]=b1[lenb-i-1]-'0';  //\u51cf\u6570\u5012\u5e8f\u5b58\u5165b\u6570\u7ec4\n        lenc = 0;\n        while (lenc <= lena || lenc <= lenb) {             //\u4ece\u4e2a\u4f4d\u5f00\u59cb\u76f8\u51cf \n        if (a[lenc] < b[lenc]) {\n            a[lenc] = a[lenc] + 10;                        //\u501f\u4f4d\u5904\u7406\n            a[lenc + 1]--;                                 //\u501f\u4f4d\u5904\u7406\n          }\n            a[lenc] = a[lenc] - b[lenc];\n        lenc++;\n          }\n        while (a[lenc] == 0 && lenc > 0) lenc--;           //\u524d\u7aef\u5904\u7406\u6389\u65e0\u7528\u7684 0 \n        for (i = lenc;i >= 0;i--) cout << a[i];\n        return 0; \n    }\n```\n#### \u5177\u4f53\u6b65\u9aa4\n\u6bd4\u8f83 a \u548c b \u7684\u5927\u5c0f\u3002\u4ece\u800c\u786e\u5b9a\uff1a\u7ed3\u679c\u7684\u6b63\u8d1f\u53f7\uff1b\u8c01\u51cf\u8c01\n\n\u4e24\u4e2a\u6570\u6309\u5b57\u7b26\u4e32\u8bfb\u5165\u4e4b\u540e\uff0c\u5148\u5224\u65ad\u5b83\u4eec\u7684\u5927\u5c0f\n\n\n     if (lena<lenb||lena==lenb && a1<b1){  \n```cpp\n    //\u4e24\u4e2a\u6570\u4ea4\u6362\uff0c\u4fdd\u8bc1\u88ab\u51cf\u6570\u5927 \n     t = a1;\n    a1 = b1;\n    b1 = t;\n    cout << \"-\";\n     }\n```\n\u501f\u4f4d\u95ee\u9898\n\n    while (lenc <= lena || lenc <= lenb) {      //\u4ece\u4e2a\u4f4d\u5f00\u59cb\u76f8\u51cf \nif (a[lenc] < b[lenc]) {                //\u4e0d\u591f\u51cf\u65f6\n\na[lenc] = a[lenc] + 10;          //\u501f\u4f4d\u5904\u7406;\n\na[lenc + 1]--;                   //\u501f\u4f4d\u5904\u7406;\n\n```cpp\n            }\n         a[lenc] = a[lenc] - b[lenc];\n         lenc++;\n          }\n```\n\u53bb\u6389\u7ed3\u679c\u524d\u9762\u591a\u4f59\u76840\u3002\n\nwhile (a[lenc] == 0 && lenc > 0) lenc--;\n",
        "postTime": 1513328086,
        "uid": 58832,
        "name": "\u6b87\u796d",
        "ccfLevel": 0,
        "title": "\u9ad8\u7cbe\u5ea6\u51cf\u6cd5"
    },
    {
        "content": "\u57fa\u672c\uff0c\u8981\u591a\u7ec3\u3002\n\n\u6211\u5c31\u662f\u667a\u5546\u4f4e\uff0cn\u8fdewa\n\n\u7b2c\u516d\u70b9\u4e24\u6570\u76f8\u7b49\uff0c\u6ce8\u610f\u8c03\u8bd5\u3002\n\n\n    \n    \n```cpp\n#include<iostream>\n#include<cstring>\nusing namespace std;\nchar a[20000],b[20000];//\u5b57\u7b26\u8f93\u5165\u8f83\u4e3a\u4fbf\u6377\nint c[20000],d[20000],e[20000];\nint main(){\n    cin>>a>>b;\n    int l1,l2,p;\n    l1=strlen(a);\n    l2=strlen(b);\n    p=l2;\n    for(int i=0;i<=l1;i++){c[l1-i]=a[i]-'0';if(c[l1-1]<0)c[l1-1]=0;}//\u5212\u91cd\u70b9\uff1a\u8f6c\u5b57\u7b26\u4e3aint \u5fd8\u4e86\u5c31\u5c34\u5c2c\u4e86\n    for(int i=0;i<=l2;i++){d[l2-i]=b[i]-'0';if(d[l2-1]<0)d[l2-1]=0;}\n    bool k=0,m=0;\n    if (l1>=l2){\n        p=l1;\n        for(int i=1;i<=p;i++)swap(c[i],d[i]);\n```\n}//\u6bd4\u8f83\u957f\u5ea6\uff08\u5f97\u76ca\u4e8e\u8f93\u5165\u90fd\u662f\u6b63\u6574\uff09\n```cpp\n    else m=1;\n    for(int i=1;i<=p;i++)swap(c[i],d[i]);\n    for(int i=p;i>=0;i--){\n        if (c[i]>d[i])break;\n        if (c[i]<d[i]){\n            k=1;\n            break;\n```\n}//\u9010\u4f4d\u6bd4\u8f83\u5927\u5c0f\n\n```cpp\n    }\n    if(k){m=1;for(int i=0;i<p;i++)swap(c[i],d[i]);}\n    for(int i=0;i<=p;i++){\n        e[i]+=c[i]-d[i];\n        if(e[i]<0)e[i]+=10,e[i+1]-=1;\n    }\n    k=0;\n    if(m)cout<<\"-\";\n    for(int i=0;i<p;i++){\n        if(e[p-i]!=0 or i==p-1)k=1;\n        if(k)cout<<e[p-i];    \n    }\n    cout<<endl;\n}\n```\n\u5e38\u89c1\u95ee\u9898\n\u75282345 777777\u4e3e\u4f8b\n\n1\uff1a775432\n\n2\uff1a-224568\n\n3\uff1a\u5d29\n\n\u89e3\u91ca\u4e00\u4e0b\uff1a\n\n1\u8981\u8f93\u51fa\u8d1f\u53f7\uff08\u4e0d\u8981\u91cd\u590d\u6216\u7f3a\u5931\u54e6\uff09\u3002\n\n2\u8bf7\u5bf9\u9f50\u4e2a\u4f4d\u64cd\u4f5c\n\n3\u4ea4\u6362\u4e24\u4e2a\u6570\u7684\u4f4d\u7f6e\n",
        "postTime": 1512364907,
        "uid": 62739,
        "name": "\u51cc\u4e91",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2142 \u3010\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u3011"
    },
    {
        "content": "         \n```cpp\n#include<iostream>\n#include<string>\nlong long a[100001],b[100001],c[100001]\uff1b//\u4e3a\u4e86\u907f\u514d\u4e0d\u591f\u5927\uff0c\u5f00\u5927\u70b9\u65e0\u6240\u8c13\nusing namespace std;\nint main()\n{\n        string str1,str2;//\u5b9a\u4e49\u4e24\u4e2a\u5b57\u7b26\u4e32\n        long long i=1,t;//i\u4e3a\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u4f4d\u6570\uff0ct\u662f\u8f83\u957f\u7684\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\n        cin>>str1>>str2;//\u8bfb\u5165\uff0c\u7528gets\u4f1a\u9519\uff0c\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\n        if (str1.size()<str2.size())t=str2.size();\n          else t=str1.size();//\u5224\u65ad\u54ea\u4e2a\u5b57\u7b26\u4e32\u957f\n      for (int i=1;i<=str1.size();i++)\n        a[i]=str1[str1.size()-i]-'0';//\u5bf9\u6570\u636e\u8fdb\u884c\u5904\u7406\n      for (int i=1;i<=str2.size();i++)\n        b[i]=str2[str2.size()-i]-'0';//\u5bf9\u6570\u636e\u8fdb\u884c\u5904\u7406\n      if (str1.size()<str2.size())//\u91cd\u70b9\u4e4b\u4e00\u6765\u4e86\uff0c\u8003\u8651str1\u5c0f\u4e8estr2\uff0c\u7b2c\u4e00\u76f4\u63a5\u5224\u65ad\u4f4d\u6570\n        {for (int i=1;i<=t;i++)\n          swap(a[i],b[i]);//\u9010\u4e2a\u4ea4\u6362\n          cout<<\"-\";//\u8f93\u51fa\u8d1f\u53f7\n        }\n        else {\n        if (str1.size()==str2.size())//\u5f53\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u76f8\u7b49\u65f6\uff0c\u6bd4\u8f83\u5404\u4e2a\u4f4d\u7684\u5927\u5c0f\n          for (int i=1;i<=t;i++)\n            if (a[i]<b[i])\n              {\n                    for (int j=1;j<=t;j++)\n                      swap(a[j],b[j]);//\u9010\u4e2a\u4ea4\u6362 \n                      cout<<\"-\";//\u8f93\u51fa\u8d1f\u53f7\n                      break; }//\u7ed3\u675f\u5faa\u73af\n        }\n            while(i<=str1.size()||i<=str2.size())//\u5f53i\u5927\u4e8e\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u65f6\uff0c\u7ed3\u675f\n      {\n            if (a[i]<b[i])//\u91cd\u70b9\u4e8c\uff0c\u501f\u4f4d\n            {\n                a[i]=a[i]+10;//\u4e0d\u591f\u51cf\uff0c\u5411\u524d\u4e00\u4f4d\u501f\u5341\n                a[i+1]=a[i+1]-1;//\u540c\u7406\uff0c\u524d\u4e00\u4f4d\u51cf\u4e00\n                }\n                c[i]=a[i]-b[i];//\u76f8\u51cf\u4e4b\u540e\n                i++;//\u4e0b\u4e00\u4f4d\n      }    \n    while (c[i]==0  && i>1)//\u5904\u7406\u6700\u9ad8\u4f4d\n    i--;\n    for(int z=i;z>=1;z--)//\u5012\u5e8f\u8f93\u51fa    \n    cout<<c[z];\n    return 0;                 \n}//\u65b0\u4eba\u4e00\u679a\uff0c\u7b97\u6cd5\u5199\u5f97\u5f88\u70c2\uff0c\u6b22\u8fce\u6709\u5efa\u8bbe\u6027\u7684\u5efa\u8bae\n```",
        "postTime": 1494495315,
        "uid": 40434,
        "name": "Linshaos",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2142 \u3010\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u3011"
    },
    {
        "content": "\u5341\u5206\u7b80\u5355\uff0c\u9664\u4e86\u7528\u51cf\u6cd5\u6a21\u677f\uff0c\u8fd8\u8981\u6bd4\u5927\u5c0f\u3002\u5982\u679ca<b\uff0c\u5c31\u4ea4\u6362\uff0c\u51cf\u5b8c\u540e\u518d\u8f93\u51fa\u8d1f\u6570\u3002\n\n```cpp\n-#include<cstdio>-\n-#include<string>-\n-#include<cstring>-\n-#include<iostream>-\n-#define size 100001-\n-using namespace std;-\n-string n,m;-\n-string minuses(string a,string b)-\n-{-\n-    int x[size],y[size],la=a.length(),lb=b.length(),lc,i-;\n-    memset(y,0,sizeof(y));lc=max(la,lb);string ans;-\n-    for (i=0;i<la;i++)x[la-i-1]=a[i]-48;-\n-    for (i=0;i<lb;i++)y[lb-i-1]=b[i]-48;-\n-    for (i=0;i<lc;i++)-\n-    {-\n-        x[i]-=y[i];-\n-        if (x[i]<0)x[i+1]--,x[i]+=10;-\n-    }-\n-    while (!x[lc-1] && lc>1)lc--;-\n-    for (i=lc-1;i+1;i--)ans.push_back(x[i]+48);-\n-    return ans;-\n-}-\n-bool cmp(string a,string b)-\n-{-\n-    int i;-\n--    if (a.length()<b.length())return 1;\n-    if (a.length()>b.length())return 0;-\n-    for (i=0;i<a.length();i++)if (a[i]<b[i])return 1;-\n-    return 0;-\n-}-\n-int main()-\n-{-\n-    cin>>n>>m;-\n-    if (cmp(n,m)){cout<<\"-\";swap(n,m);}-\n-    cout<<minuses(n,m)<<endl;-\n-}-\n```",
        "postTime": 1481625016,
        "uid": 14381,
        "name": "1jia1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2142 \u3010\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u3011"
    },
    {
        "content": "```cpp\n//\u76f4\u63a5\u7528\u5b57\u7b26\u4e32\u5199:-)\n#include <iostream>\n#include <string>\nusing namespace std;\nint main(){\n    string a,b,temp;\n    int flag=0;//\u8bbe\u7f6e\u4e00\u4e2a\u65d7\u5b50\n    cin>>a>>b;\n    int x=a.length()-1,y=b.length()-1,t=-1,z[300]={0},up[300]={0},down[300]={0};\n    //\u4e0b\u9762\u4e24\u6bb5\u7528\u6765\u5224\u65ad\uff0c\u5982\u679c\u4e00\u6837\u957f\uff0c\u6309\u7167\u5b57\u5178\u5e8f\uff0c\u5982\u679c\u4f4d\u6570\u5c0f\u4e8e\uff0c\u90a3\u4e48\u80af\u5b9a\u662f\u8d1f\u6570\u4e86\n    //\u5f53\u662f\u8d1f\u6570\u65f6\uff0c\u505a\u4e2a\u6807\u8bb0\uff0c\u8ba9falg=1;\n    if (x==y){\n        if (a<b){\n            flag=1;\n            temp=a,a=b,b=temp;\n        }\n    }\n    if (x<y){\n        flag=1;\n        temp=a,a=b,b=temp;\n    }\n    //\u4e0a\u9762\u4e24\u6bb5\u4fdd\u8bc1\u4e86x\u4e00\u5b9a\u6bd4y\u5927\uff0c\u4f46\u662f\u7531\u4e8e\u4ea4\u6362\u4e86\u4e00\u904d\uff0c\u6240\u4ee5\u80af\u5b9a\u8fd8\u8981\u518d\u8ba1\u7b97\u4e00\u4e0b\u957f\u5ea6\u4e3a\u4e86\u540e\u9762\n    x=a.length()-1,y=b.length()-1;\n    //\u5b57\u7b26\u4e32\u8bfb\u8fdb\u53bb\n    for (int i=0;i<=x;++i){\n        up[i]=a[i]-'0';\n    }\n    for (int i=0;i<=y;++i){\n        down[i]=b[i]-'0';\n    }\n    //\u6bd4\u8f83\u673a\u5236\n    while (x>=0 && y>=0){\n        if (up[x]>=down[y]){\n            //\u5982\u679c\u5927\u4e8e\u7b49\u4e8e\uff0c\u76f4\u63a5\u51cf\uff0c\u5b58\u7c97\u518dz\u5b57\u7b26\u4e32\u91cc\n            ++t;\n            z[t]=up[x]-down[y];\n        }\n        else {\n            //\u4e0d\u7136\u5c31\u8981\u501f\u4f4d\n            ++t;\n            up[x-1]--;\n            z[t]=10+up[x]-down[y];\n        }\n        --x;--y;\n    }\n    for (int i=x-y-1;i>=0;--i){//\u56e0\u4e3a\u662f\u4e00\u76f4\u52300\uff0c\u6240\u4ee5\u8981\u51cf\u53bb1\n        ++t;\n        z[t]=up[i];\n    }\n    //\u9632\u6b62\u4ea7\u751f-1\uff0c\u53cc\u91cd\u4fdd\u9669\uff0c\u8fd9\u4e0b\u9762\u7684\u80af\u5b9a\u8981, \u5426\u5219\u5f3a\u6570\u636e\u4f8b\u5982100-1\u5c31\u4f1a\u4ea7\u751f-1\u4e86\n    for (int i=0;i<t;++i){\n        if (z[i]<0){\n            z[i+1]--;\n            z[i]+=10;\n        }\n    }\n    //\u53bb\u6389\u591a\u4f59\u76840\uff0c\u4e00\u4e3e\u4e24\u5f97\uff0c\u4e0d\u4ec5\u53ef\u4ee5\u5bf9\u4ed8\u524d\u5bfc0\uff0c\u8fd8\u80fd\u5bf9\u4ed8\u7c7b\u4f3c\u4e8e100-1\u8fd9\u79cd\u60c5\u51b5\n    while (z[t]==0 && t>0){\n        --t;\n    }\n    if (flag==1){\n        cout<<\"-\";//\u5982\u679cflag=1, \u8f93\u51fa\u8d1f\uff0c\u56e0\u4e3a\u662f\u8d1f\u6570\n    }\n    //\u9006\u5411\u8f93\u51fa\n    for (int i=t;i>=0;--i){\n        cout<<z[i];\n    }\n    //\u4e3a\u4e86\u7f8e\u89c2\n    cout<<endl;\n    return 0;\n}\n//\u603b\u5171\u5728\u6ca1\u6709\u6ce8\u91ca\u60c5\u51b5\u4e0b\uff0c\u53ea\u6709841b\n//\u6548\u7387\u6d4b\u4e86\u4e24\u6b21\uff0c\u4e00\u6b216ms\uff0c\u4e00\u6b217ms\uff0c\u6ce8\u610f\u670911\u4e2a\u6d4b\u8bd5\u70b9\n```",
        "postTime": 1472005296,
        "uid": 21131,
        "name": "Aimyhtixela",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2142 \u3010\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u3011"
    },
    {
        "content": "```cpp\n#include<iostream>\n#include<string>\n#include<cstdlib>\nusing namespace std;\nint gjj(string s1,string s2)//\u5c06\u7a0b\u5e8f\u653e\u5728\u4e00\u4e2a\u51fd\u6570\u91cc\uff0c\u65b9\u4fbf\u8c03\u7528\u3002 \n{\n    string zzz;\n    cin>>s1>>s2;\n    int sa[101]={0},sb[101]={0},c[101]={0},l=1;\n    sa[0]=s1.length();\n    sb[0]=s2.length();\n    if(sb[0]>sa[0])//\u5224\u65ad\u662f\u5426\u4e3a\u8d1f\u6570\u3002 \n    {\n        cout<<\"-\";\n        zzz=s1;\n        s1=s2;\n        s2=zzz;\n    }\n    if(sb[0]==sa[0])\n    {\n        for(int i=0;i<sa[0];i++)\n        {\n            if(s2[i]>s1[i])\n            {\n                cout<<\"-\";\n                zzz=s1;\n                s1=s2;\n                s2=zzz;\n                break;\n            }\n            if(s1[i]>s2[i])\n            {\n                break;\n            }\n        }\n    }\n    sa[0]=s1.length();\n    sb[0]=s2.length();\n    for(int i=1;i<=sa[0];i++)\n    {\n        sa[i]=s1[sa[0]-i]-'0';\n    }\n    for(int i=1;i<=sb[0];i++)\n    {\n        sb[i]=s2[sb[0]-i]-'0';\n    }\n    while(l<=sa[0] || l<=sb[0])//\u8fdb\u884c\u8fd0\u7b97 \u3002 \n    {\n        if(sa[l]<sb[l])\n        {\n            sa[l]+=10;\n            sa[l+1]--;\n        }\n        c[l]=sa[l]-sb[l];\n        l++;\n    }\n    l-=1;\n    while(c[l]==0 && l>1)//\u53bb\u96f6\u3002 \n        l--; \n    while(l>0)\n    {\n        cout<<c[l];\n        l--;\n    }\n}\nmain()\n{\n    string a,b;\n    gjj(a,b);\n    cout<<endl;\n    system(\"pause\");\n    return 0;\n}\n```",
        "postTime": 1435978963,
        "uid": 6023,
        "name": "Tony",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2142 \u3010\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u3011"
    },
    {
        "content": "\u672c\u849f\u84bb\u7684\u7b2c\u4e00\u7bc7\u535a\u5ba2\u54c8\uff01\uff01\uff01\n\n#### **~~\u9ad8\u7cbe\u5ea6\u51cf\u6cd5\u3002~~**\n\n### **\u6d41\u7a0b**\uff1a\n\n1. \u8bfb\u5165\u4e24\u4e2a\u6570A\u3001B\uff08string\uff09\n\n1. \u5224\u65ad\u5927\u5c0f\uff0c\u786e\u5b9a\u7b26\u53f7\n\n1. \u5904\u7406\u4e24\u6570\uff0c\u8bfb\u5165\u6570\u7ec4\n\n1. \u8fd0\u7b97\uff1a\n\na. \u770b\u662f\u5426\u501f\u4f4d\n\nb. \u76f8\u51cf\n\nc. \u7ed3\u679c\u7684\u4f4d\u6570++\n\n1. \u5224\u65ad\u201c0\u201d\u662f\u5426\u6709\u7528\n\n1. \u6253\u5370\u7ed3\u679c\n\n\n------------\n\n\n**\u4e0b\u9762\u732e\u4e0a\u672c\u849f\u84bb\u7684\u4ee3\u7801**\n\n\n\n\n\n\n```cpp\n    #include<bits/stdc++.h>\n    using namespace std;\n    int a[100000]={0},b[100000]={0},c[100000]={0};\n    //\u6e05\u96f6\u6570\u7ec4\uff0c\u4e2a\u4eba\u611f\u89c9\u6bd4memset\u597d\u7528 \n    void pminus(){\n        int i=0;\n        while(i<=a[0]){\n            i++;//\u8fd9\u4e2a\u7eaf\u7cb9\u53ea\u662f\u4e0d\u60f3\u6253c[0]\n            if(a[i]<b[i]){//\u501f\u4f4d\n                a[i+1]--;\n                a[i]+=10;\n            }\n            c[i]=a[i]-b[i];\n            c[0]++;//\u4f4d\u6570 \n        }\n    }\n    int main(){\n        int i,j,k,l,m,n,flag;\n        string an,bn,t;\n        cin>>an>>bn;\n        a[0]=an.length();\n        b[0]=bn.length();\n        if(a[0]<b[0] || (a[0]==b[0] && an<bn)){\n        //\u6bd4\u8f83\u5927\u5c0f\uff0c\u5982\u679c\u5c0f\u5c31\u4ea4\u6362\u3002\n            t=bn;\n            bn=an;\n            an=t;\n            swap(a[0],b[0]);\n            cout<<\"-\";//\u662f\u7684\u8bdd\u5c31\u8f93\u51fa\u201c-\u201d\n        }\n        for(i=1;i<=a[0];i++) a[i]=an[a[0]-i]-'0';\n        for(i=1;i<=b[0];i++) b[i]=bn[b[0]-i]-'0';\n        pminus();\n        while(c[c[0]]==0&&c[0]>1) c[0]--;\n     //\u5224\u65ad0\u662f\u5426\u6709\u7528\u3002 \u201cc[0]>1\u201d\u662f\u56e0\u4e3a\u51cf\u4f1a\u51cf\u591a\uff0c\u4ece\u800c\u4f7fc[0]=0\n        for(i=c[0];i>=1;i--) cout<<c[i];//\u5012\u5e8f\u8f93\u51fa\n        return 0;\n}\n```",
        "postTime": 1514734011,
        "uid": 59623,
        "name": "fpjo",
        "ccfLevel": 0,
        "title": "A-B Problem\uff08\u9ad8\u7cbe\u7248\uff09"
    }
]