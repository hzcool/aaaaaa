[
    {
        "content": "[\u6b64\u5904\u98df\u7528\u66f4\u4f73](https://www.cnblogs.com/Zenyz/p/10311267.html)\n\n---\n# [USACO5.5]\u8d30\u4e94\u8bed\u8a00Two Five\n\n--------\n\n\u4e00\u9053\u8bb0\u5fc6\u5316\u641c\u7d22\u9898\n\n## \u4e00.\u9898\u9762\n\n[\u9898\u76ee](https://www.luogu.org/problemnew/show/P2750)\n\n\u5b9a\u4e49\u4e00\u7c7b\u884c\u5217\u5747\u5355\u8c03\u9012\u589e\u7684$5\\times5$\u77e9\u9635,\u5c06\u5176\u5c55\u5f00\u540e\u6240\u5f62\u6210\u7684\u5b57\u7b26\u4e32\u6309\u5b57\u5178\u5e8f\u7f16\u53f7.\n\n\u9898\u76ee\u8981\u6c42\u5b9e\u73b0\u7f16\u53f7\u4e0e\u5b57\u7b26\u4e32\u7684\u76f8\u4e92\u8f6c\u6362\n\n## \u4e8c.\u89e3\u9898\u6b65\u9aa4\n\n### 1.\u6c42\u9650\u5236\u6761\u4ef6\u4e0b\u7684\u5408\u6cd5\u77e9\u9635\u7684\u6570\u91cf\n\n\u200b\t\u5148\u4e0d\u7ba1\u5b57\u7b26\u4e32\u4e0e\u7f16\u53f7\u7684\u76f8\u4e92\u8f6c\u6362;\n\n\u200b\t\u7ed9\u4f60\u4e00\u4e9b\u9650\u5b9a\u6761\u4ef6(\u5f62\u5982$(x,y)$\u5904\u53ea\u80fd\u586b\u67d0\u5b57\u7b26),\u8ba9\u4f60\u6c42\u6ee1\u8db3\u6761\u4ef6\u7684\u5408\u6cd5\u77e9\u9635\u6570\n\n\n#### (1).\u66b4\u641c\n\n\u200b\t\u6709\u4e24\u79cd\u601d\u8def,\u4e00\u79cd\u662f**\u6309\u987a\u5e8f**\u641c\u6bcf\u4e00\u4e2a\u683c\u5b50\u653e\u54ea\u4e00\u4e2a\u5b57\u6bcd,\u53e6\u4e00\u79cd\u662f**\u6309\u987a\u5e8f**\u641c\u6bcf\u4e00\u4e2a\u5b57\u6bcd\u653e\u54ea\u4e00\u4e2a\u683c\u5b50\n\n\u200b\t\u590d\u6742\u5ea6\u662f$O(25!)$,\u8fc7\u4e0d\u4e86\n\n\u200b\t\u5728\u8fd9\u91cc\u8981\u7279\u522b\u6ce8\u610f\u7b2c\u4e8c\u79cd\u601d\u8def,\u8bb0\u5fc6\u5316\u4e5f\u662f\u5728\u6b64\u57fa\u7840\u4e0a\u8fdb\u884c\n\n#### (2).\u8bb0\u5fc6\u5316\n\n\u200b\t\u5728\u4e0a\u9762\u63d0\u5230\u7684\u7b2c\u4e8c\u79cd\u601d\u8def\u8fdb\u884c\u4f18\u5316.\n\n\u200b\t\u65e2\u7136\u662f\u6309\u7167\u5b57\u6bcd\u987a\u5e8f\u4f9d\u6b21\u653e\u5230\u683c\u5b50\u91cc,\u90a3\u4e48\u4f1a\u4e0d\u4f1a\u6709\u4e00\u4e9b~~\u7f8e\u5999\u7684~~\u6027\u8d28\u5462?\n\n\u200b\t\u5176\u5b9e\u662f\u6709\u7684,\u5982\u4e0b\u56fe,\u53ef\u6709\u4ee5\u4e0b\u6027\u8d28:\n\n\t\t a.\u5df2\u7ecf\u586b\u8fdb\u53bb\u7684\u6570\u5fc5\u5728\u4e00\u4e2a\u8054\u901a\u5757\u5185.\n\n\u200b\t\t\u663e\u7136\u5e94\u5982\u6b64,\u5426\u5219\u4e2d\u95f4\u7684\u7a7a\u80af\u5b9a\u586b\u4e0d\u8fdb\u66f4\u5927\u7684\u5b57\u6bcd\n\n         b.\u8054\u901a\u5757\u7684\u8f6e\u5ed3\u7ebf\u5e94\u662f\u8fde\u7eed\u4e0b\u964d\u7684\u6298\u7ebf\n\n\u200b\t\t\u5982\u56fe,\u84dd\u5757\u662f\u5df2\u7ecf\u586b\u597d\u7684\u5757\n\n\u200b\t\t\u5047\u8bbe\u7eff\u5757\u662f\u6211\u73b0\u5728\u8981\u586b\u5b57\u6bcd\u7684\u5757,\u5982\u679c\u586b\u8fdb\u53bb\u540e,\u5176\u4e0a\u7684\u9ec4\u5757\u5fc5\u5b9a\u5c06\u65e0\u5b57\u6bcd\u53ef\u586b(**\u56e0\u4e3a\u586b\u5b57\u6bcd\u662f\u6309\u987a\u5e8f\u586b\u7684!**)\n\n![](https://cdn.luogu.com.cn/upload/pic/49501.png )\n\n\n\n\t\tc.\u5408\u6cd5\u7684\u8054\u901a\u5757\u5185\u5177\u4f53\u7684\u5b57\u6bcd\u987a\u5e8f\u4e0d\u5f71\u54cd\u5269\u4e0b\u7684\u5b57\u6bcd\u586b\u5165\n\n\u200b\t\t\u56e0\u4e3a\u4ee5\u540e\u5c06\u8981\u586b\u5165\u7684\u5b57\u6bcd\u5fc5\u5b9a\u6bd4\u73b0\u5728\u6240\u6709\u5df2\u7ecf\u586b\u5165\u7684\u5b57\u6bcd\u5927,\u6240\u4ee5\u76f8\u4e92\u4e4b\u95f4\u7684*\"\u5f71\u54cd\"*\u662f\u4e00\u81f4\u7684\n\n\u200b\t\u7efc\u4e0a\u6240\u8ff0,\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8bb0\u5fc6\u5316\u641c\u7d22(\u4e3b\u8981\u662f\u7531\u4e8e\u6027\u8d28c,\u6027\u8d28a,b\u4e3b\u8981\u662f\u65b9\u4fbf\u8bbedp\u72b6\u6001)\n\n\u200b\t\u8bbe\u8bb0\u5fc6\u5316\u6570\u7ec4$f[a][b][c][d][e]$ \u8868\u793a\u7b2c1,2,3,4,5\u884c\u5206\u522b\u586b\u4e86a,b,c,d,e\u4e2a\u5b57\u6bcd\u7684\u60c5\u51b5\u4e0b\u7684\u53ef\u80fd\u5408\u6cd5\u77e9\u9635\u6570\u91cf,\n\n\u8fd9\u6837\u5c31\u6c42\u51fa\u6765\u9650\u5236\u6761\u4ef6\u4e0b\u7684\u5408\u6cd5\u77e9\u9635\u7684\u6570\u91cf.\n\n### 2.\u5b9e\u73b0\u7f16\u53f7\u4e0e\u5b57\u7b26\u4e32\u7684\u76f8\u4e92\u8f6c\u6362\t\n\n\u200b\t(ps:\u53ef\u4ee5\u501f\u9274\u4e00\u4e0b\u6392\u5217\u7684\u751f\u6210\u7b97\u6cd5,\u611f\u89c9\u672c\u8d28\u4e0a\u5dee\u4e0d\u591aQAQ)\n\n\u200b\t\u5373\u901a\u8fc7\u5927\u5bb6\u6240\u8bf4\u7684\u903c\u8fd1\u6cd5\u6765\u5b9e\u73b0,\n\n\u200b\t\u73b0\u5728\u6709\u4e00\u4e2a\u5408\u6cd5\u77e9\u9635\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32$P=p_0p_1p_2...p_{22}p_{23}p_{24}$,\u90a3\u4e48\u5b83\u7684\u524d\u9762\u8fd8\u6709\u591a\u5c11\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u5b57\u7b26\u4e32\u5462?\n\n\u200b\t\u7f16\u53f7\u5c0f\u4e8e$P$ \u7684\u5408\u6cd5\u77e9\u9635\u7684\u5b57\u7b26\u4e32\u96c6\u5408\u5c31\u5f88\u660e\u786e\u4e86,\u9996\u5148\u5c06\u524d\u7f00\u4e3a$k_0(0<k_0<p_0)$\u7684\u4e32\u52a0\u4e0a,\u518d\u52a0\u4e0a$k_0k_1(0<k_0<p_0,0<k_1<p_1)$,\u4ee5\u6b64\u7c7b\u63a8,\u52a0\u4e0a$k_0...k_i(0<k_j<p_j)$\u4e3a\u524d\u7f00\u7684\u5b57\u7b26\u4e32\u5373\u53ef.\n\n\u200b\t\u518d\u7ed3\u5408\u6211\u4eec\u5df2\u7ecf\u53ef\u4ee5\u8f83\u5feb\u5730\u6c42\u51fa\u4e00\u5b9a\u9650\u5236\u6761\u4ef6\u4e0b\u7684\u5408\u6cd5\u77e9\u9635\u7684\u6570\u91cf\n\n\u200b\t\u8fd9\u9898\u5c31\u5230\u6b64\u7ec8\u7ed3\u4e86.\n\n## \u4e09.AC\u4ee3\u7801\n\n```cpp\n/*\n  \u6b64\u9898\u8981\u70b9:\n  1.\u8981\u6309\u5b57\u6bcd\u7684\u987a\u5e8f\u6765\u641c\n* 2.\u53ef\u4ee5\u8bb0\u5fc6\u5316,\u7528\u6570\u7ec4f[][][][][]\u6765\u5b9e\u73b0 * \n  3.\u6709\u503c\u7684f\u6570\u7ec4\u7684\u4e0b\u6807a,b,c,d,e\u5e94\u8be5\u9012\u51cf\n  4.\u6700\u540e\u7528\u903c\u8fd1\u6cd5\u6765\u5b8c\u6210\u4efb\u52a1\n*/\n#include<bits/stdc++.h>\n#define il inline \n#define R register int\n#define ll long long\n#define gc getchar\nusing namespace std;\nil int rd()\n{\n    R x=0,flag=1;\n\tchar ch=0;\n    while((ch>'9'||ch<'0')&&ch!='-')ch=gc();\n\tif(ch=='-')flag=-1,ch=gc();\n    while(ch>='0'&&ch<='9')x=(x<<3)+(x<<1)+(ch^48),ch=gc();\n    return x*flag;\n}\n\nint S[26],ans;\n\ninline bool check(int letter,int pos)\n{\n\treturn (!S[pos])||(letter==S[pos]);\n}\n\nint f[6][6][6][6][6];\nbool ok[30];\nint dfs(int a,int b,int c,int d,int e,int letter)\n{\n\tif(letter>25) return 1;\n\tif(f[a][b][c][d][e]) return f[a][b][c][d][e];\n\tint cnt=0;\n\tif(a<5 && check(letter,a+1)) {cnt+=dfs(a+1,b,c,d,e,letter+1);}\n\tif(b<a && check(letter,b+6)) {cnt+=dfs(a,b+1,c,d,e,letter+1);}\n\tif(c<b && check(letter,c+11)) {cnt+=dfs(a,b,c+1,d,e,letter+1);}\n\tif(d<c && check(letter,d+16)) {cnt+=dfs(a,b,c,d+1,e,letter+1);}\n\tif(e<d && check(letter,e+21)) {cnt+=dfs(a,b,c,d,e+1,letter+1);}\n\treturn f[a][b][c][d][e]=cnt;\n}\nvoid task1(int num)\n{\n\tfor(R i=1;i<=25;i++)\n\t{\n\t\tfor(S[i]=1;;S[i]++)\n\t\t{\n\t\t\tif(ok[S[i]])continue;\n\t\t\tok[S[i]]=1;\n\t\t\tmemset(f,0,sizeof(f));//\u8bb0\u5f97\u6e05\u96f6\n\t\t\tint tmp=dfs(0,0,0,0,0,1);\n\t\t\tif(ans+tmp>=num) break;\n\t\t\tans+=tmp;\n\t\t\tok[S[i]]=0;\n\t\t}\n\t}\n\tfor(R i=1;i<=25;i++) cout<<char(S[i]+'A'-1);\n}\n\nvoid task2()\n{\n\tstring s;\n\tcin>>s;\n\tans=0;\n\tfor(R i=0;i<25;i++)\n\t{\n\t\tfor(S[i+1]=1;S[i+1]<=s[i]-'A';S[i+1]++)\n\t\t{\n\t\t\tif(ok[S[i+1]])continue;\n\t\t\tok[S[i+1]]=1;\n\t\t\tmemset(f,0,sizeof(f));\n\t\t\tans+=dfs(0,0,0,0,0,1);\n\t\t\tok[S[i+1]]=0;\n\t\t}\n\t}\n\tcout<<ans+1<<endl;\n}\n\nint main ()\n{\n\tfreopen(\"twofive.in\",\"r\",stdin);\n\tfreopen(\"twofive.out\",\"w\",stdout);\n\tchar opt;\n\tcin>>opt;\n\tif(opt=='N')task1(rd());\n\telse task2();\n\t//dfs(0,0,0,0,0,1);\n\t//cout<<f[0][0][0][0][0]<<endl;\n    return 0;\n}\n\n```\n\n\n\n\u200b\t\n\n\n\n\u200b\t\n\n\u200b",
        "postTime": 1548246772,
        "uid": 44182,
        "name": "zyzzyzzyzzyz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2750 \u3010[USACO5.5]\u8d30\u4e94\u8bed\u8a00Two Five\u3011"
    },
    {
        "content": "\u53d1\u73b0\u53ea\u6709\u91c7\u7528\u8bb0\u5fc6\u5316\uff1a\n\n\u8bb0\u5fc6\u5316\u53ef\u4ee5\u7528dp[a][b][c][d][e]\u8868\u793a\u7b2c\u4e00\u884c\u9009a\u4e2a\uff0c\u7b2c\u4e8c\u884c\u3002\u3002\u3002\u8fd9\u6837\u53ef\u4ee5\u5927\u529b\u51cf\u5c11\u641c\u7d22\u65f6\u95f4\n\n\u5177\u4f53\u601d\u60f3\uff1a\u903c\u8fd1\u6cd5\uff1a\n\n\u5148\u770b\u7f16\u53f7\u8f6c\u5b57\u7b26\u4e32\uff0c\u679a\u4e3e\u5b57\u7b26\u4e32\u5f00\u5934\uff08\u5373\u4e00\u884c\u4e00\u884c\u5730\u586b\u5b57\u7b26\u77e9\u9635\uff09\uff0c\u6bd4\u5982\u8bf4\u201cAB\u201d\u5f00\u5934\u7684\u5b57\u7b26\u4e32\u6709\u591a\u5c11\u4e2a\uff1f\u5982\u679c\u5927\u4e8e\u8981\u6c42\u7684\u7f16\u53f7\u7684\u8bdd\uff0c\u90a3\u4e48\u81ea\u7136\u7b54\u6848\u5b57\u7b26\u4e32\u7684\u5f00\u5934\u5c31\u662f\u201cAB\u201d\u4e86\u3002\u8fd9\u4e2a\u601d\u60f3\u5341\u5206\u5bb9\u6613\u7406\u89e3\u3002\u5b57\u7b26\u4e32\u8f6c\u7f16\u53f7\uff0c\u7c7b\u4f3c\u5730\uff01\u5982\u679c\u8fd9\u4e2a\u5b57\u7b26\u4e32\u662f\u201cAC~~~~~\u201d\uff0c\u6211\u4eec\u5148\u52a0\u4e0a\"AB~~~~\"\u7684\u5b57\u7b26\u4e32\u4e2a\u6570\uff0c\u7136\u540e\u4e00\u76f4\u903c\u8fd1\uff0c\u76f4\u81f3\u76f8\u540c\u3002(\u770b\u4e86\u4e9b\u7f51\u4e0a\u7684\uff09\n\n```cpp\n    #include<cmath>  \n    #include<cstring>  \n    #include<cstdio>  \n    #include<cstdlib>  \n    #include<iostream>  \n    #include<algorithm>  \n    #define For(i,a,b) for(i=a;i<=b;++i)  \n    #define rep(i,a,b) for(i=a;i>=b;--i)  \n    using namespace std;  \n    int dp[6][6][6][6][6];  \n    char s[10010];  \n    char st[2];  \n    bool pd(int h,int now){  \n        return (!s[h] || s[h]==now+'A');//\u5982\u679c\u5f53\u524d\u8fd9\u4e00\u4f4d\u6ca1\u6709\u9650\u5236\u6216\u8005\u6ee1\u8db3\u9650\u5236  \n    }  \n    int dfs(int a,int b,int c,int d,int e,int now){//now\u662f\u73b0\u5728\u641c\u5230\u4e86\u54ea\u4e00\u4e2a\u5b57\u6bcd  \n        if(now==25)return 1;  \n        int res = dp[a][b][c][d][e];  \n        if(res)return res;  \n        if(a<5 && pd(a,now)){res+=dfs(a+1,b,c,d,e,now+1);}//  \n        if(b<a && pd(b+5,now)){res+=dfs(a,b+1,c,d,e,now+1);}//b<a\u662f\u56e0\u4e3a\u53ea\u6709\u8fd9\u65f6\u5019b\u4f4d\u7f6e\u7684\u4e0a\u65b9\u624d\u586b\u4e86\u6570  \n       if(c<b && pd(c+10,now)){res+=dfs(a,b,c+1,d,e,now+1);}  \n        if(d<c && pd(d+15,now)){res+=dfs(a,b,c,d+1,e,now+1);}  \n        if(e<d && pd(e+20,now)){res+=dfs(a,b,c,d,e+1,now+1);}  \n        return dp[a][b][c][d][e]=res;//\u8bb0\u5fc6\u5316  \n    }  \n    char sss[1010];  \n    int main(){  \n        int i,j,n;  \n        scanf(\"%s\",st);  \n        if(st[0] == 'N'){  \n            scanf(\"%d\",&n);  \n            For(i, 0, 24){  \n                for(s[i]='A' ; ;++s[i]){//\u679a\u4e3e\u7b2ci\u4f4d\u9009\u4ec0\u4e48\u6570\u5b57  \n                    memset(dp,0,sizeof(dp));  \n                    int tmp = dfs(0,0,0,0,0,0);  \n                    if(tmp >= n)break;//\u82e5\u5f53\u524d\u679a\u4e3e\u7684\u4e32\u65b9\u6848\u5df2\u8d85\u8fc7n\uff0c\u5219\u5f53\u524d\u8fd9\u4e00\u4f4d\u4e0d\u80fd\u9009\u5f53\u524d\u679a\u4e3e\u7684\u5b57\u6bcd\uff0c\u53ea\u80fd\u6162\u6162\u903c\u8fd1  \n                    n-=tmp;  \n                }  \n            }  \n            printf(\"%s\\n\",s);  \n        }  \n        else{  \n            int ans=0;  \n            scanf(\"%s\",sss);  \n            For(i,0,24){  \n                for(s[i]='A';s[i]<sss[i];s[i]++){  \n                    memset(dp,0,sizeof(dp));  \n                    int tmp = dfs(0,0,0,0,0,0);  \n                    ans+=tmp;  \n                }  \n            }  \n            printf(\"%d\\n\",ans+1);  \n        }  \n        return 0;  \n}\n```",
        "postTime": 1490961393,
        "uid": 18421,
        "name": "ergeda",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2750 \u3010[USACO5.5]\u8d30\u4e94\u8bed\u8a00Two Five\u3011"
    },
    {
        "content": "\u6df1\u641cdfs + dp + \u903c\u8fd1\n\ndp[a][b][c][d][e] \u8868\u793a\u7b2c\u4e00\u884c\u9009a\u4e2a\uff0c\u7b2c\u4e8c\u884c\u9009b\u4e2a......\uff08\u5927\u529b\u51cf\u5c11\u641c\u7d22\u65f6\u95f4\uff09\n\n\u628a\u4e00\u4e32\u5b57\u7b26\u4e32\u53d8\u62105 \u00d7 5\u7684\u77e9\u9635\uff0c\u5c31\u50cf\u9898\u76ee\u6240\u8bf4\n\n\n\u4e3b\u8981\u601d\u60f3\uff1a\n\n\u6bd4\u5982\u641c\u5b57\u7b26\u4e32\u201cABD.....\u201d\u65f6\u4f1a\u6709\u5b57\u7b26\u4e32\u201cABC.....\u201d\u8981\u5728\u524d\u9762\uff0c\u90a3\u4e48\u5b57\u7b26\u4e32\u201cABD.....\u201d\u4e4b\u524d\u7684\u65b9\u6848\u4e00\u5b9a\u6709\u5728\u5b57\u7b26\u4e32\u201cABC.....\u201d\u4e4b\u524d\u7684\u6240\u6709\u65b9\u6848\uff0c\u6240\u6709\u6211\u4eec\u5c31\u53ef\u4ee5\u4e0d\u65ad\u52a0\u4e0a\u8fd9\u4e9b\u5c0f\u7684\u5b57\u7b26\u4e32\u7684\u65b9\u6848\uff0c\u4e0d\u65ad\u903c\u8fd1\u5230\u6240\u6c42\u7684\u65b9\u6848\n\n\n\u8be6\u60c5\u89c1\u4ee3\u7801\uff1a\uff08\u5185\u6709\u8be6\u7ec6\u89e3\u91ca\uff09\n\n/*************************************************************************\n\n    > Author: wzw-cnyali\n    > Created Time: 2017/5/25 19:23:03\n************************************************************************/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\ntypedef long long LL;\ntypedef unsigned long long uLL;\n#define REP(i, a, b) for(register int i = (a), i##_end_ = (b); i <= i##_end_; ++ i)\n#define DREP(i, a, b) for(register int i = (a), i##_end_ = (b); i >= i##_end_; -- i)\n#define EREP(i, a) for(register int i = (be[a]); i != -1; i = nxt[i])\n#define debug(...) fprintf(stderr, __VA_ARGS__)\n#define mem(a, b) memset((a), b, sizeof(a))\ntemplate<typename T> inline bool chkmin(T &a, const T &b) { return a > b ? a = b, 1 : 0; }\ntemplate<typename T> inline bool chkmax(T &a, const T &b) { return a < b ? a = b, 1 : 0; }\ntemplate <class T>\nT read(T sum = 0, T fg = 0)\n{\n    char c = getchar();\n    while(c < '0' || c > '9') { fg |= c == '-'; c = getchar(); }\n    while(c >= '0' && c <= '9') { sum = sum * 10 + c - '0'; c = getchar(); }\n    return fg ? -sum : sum;\n}\nconst int inf = 0x3f3f3f3f;\nconst int Size = 100000;\nconst int maxn = 100000;\nconst int maxm = 100000;\nchar S[Size];\nchar str[Size];\nint dp[6][6][6][6][6];\nbool check(int x, int now)\n{\n    return (!S[x] || S[x] == now + 'A'); //\u5373\u8be5\u4f4d\u7f6e\u662f\u5426\u6709\u9650\u5236\uff0c\u6216\u8005\u8bf4\u5fc5\u987b\u9009 now + 'A' \u8fd9\u4e2a\u5b57\u6bcd\n}\nint dfs(int a, int b, int c, int d, int e, int now)\n{\n    if(now == 25) return 1;\n    int ret = dp[a][b][c][d][e]; //\u8bb0\u5fc6\u5316\n    if(ret) return ret; //\u6709\u503c\u5c31\u8fd4\u56de\n    if(a < 5 && check(a, now)) ret += dfs(a + 1, b, c, d, e, now + 1); //\u52a0\u4e0a\u5b57\u7b26\u4e32\u5c0f\u7684\u6570\u91cf\n    if(b < a && check(b + 5, now)) ret += dfs(a, b + 1, c, d, e, now + 1); //\u5fc5\u987b\u524d\u9762\u8981\u6709a\u4e2a\u5b57\u6bcd\u624d\u884c\n    if(c < b && check(c + 10, now)) ret += dfs(a, b, c + 1, d, e, now + 1);\n    if(d < c && check(d + 15, now)) ret += dfs(a, b, c, d + 1, e, now + 1);\n    if(e < d && check(e + 20, now)) ret += dfs(a, b, c, d, e + 1, now + 1);\n    return dp[a][b][c][d][e] = ret; //\u8bb0\u5fc6\u5316\u5b58\u5165\n}\nvoid work1(int n)\n{\n    REP(i, 0, 24) //\u679a\u4e3e\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\n    {\n        for(S[i] = 'A'; ; ++S[i]) //\u679a\u4e3e\u8be5\u4f4d\u7f6e\u4e0a\u5e94\u8be5\u9009\u4ec0\u4e48\u5b57\u6bcd\n        {\n            mem(dp, 0);\n            int ret = dfs(0, 0, 0, 0, 0, 0);\n            if(ret >= n) break; //\u5982\u679c\u5927\u4e8e\u7b49\u4e8e\u4e86\u5c31\u8bf4\u660e\u8fd9\u4e2a\u4f4d\u7f6e\u5fc5\u987b\u9009\u4ec0\u4e48\u5b57\u7b26\uff0c\u7136\u540e\u4e0d\u65ad\u903c\u8fd1\n            n -= ret; //\u51cf\u53bb\u8be5\u4e2a\u5b57\u7b26\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u65b9\u6848\n        }\n    }\n    printf(\"%s\\n\", S);\n}\nvoid work2()\n{\n    int ans = 0;\n    REP(i, 0, 24)\n    {\n        for(S[i] = 'A'; S[i] < str[i]; ++S[i]) //\u5728\u524d\u9762\u7684\u65b9\u6848\u4e0d\u80fd\u5927\u4e8e\u5f53\u524d\u5b57\u7b26\u4e32\n        {\n            mem(dp, 0);\n            int ret = dfs(0, 0, 0, 0, 0, 0);\n            ans += ret; //\u52a0\u4e0a\u8fd9\u4e2a\u65b9\u6848\u7684\u503c\n        }\n    }\n    printf(\"%d\\n\", ans + 1);\n}\nint main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\"input.in\", \"r\", stdin);\n    freopen(\"output.out\", \"w\", stdout);\n#endif\n    char ch;\n    cin >> ch;\n    if(ch == 'N')\n    {\n        int n = read<int>();\n        work1(n);\n    }\n    else if(ch == 'W')\n    {\n        scanf(\"%s\", str);\n        work2();\n    }\n    return 0;\n}\n\n```",
        "postTime": 1495720529,
        "uid": 19623,
        "name": "Jason_Yvan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2750 \u3010[USACO5.5]\u8d30\u4e94\u8bed\u8a00Two Five\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\n\n\u8bd5\u56fe\u627e\u89c4\u5f8b \u65e0\u679c  \n\n\u6240\u4ee5\u5c31\u641c\u7d22\u5566 \uff08\u5728\u505a\u4e4b\u524d\u5c31\u77e5\u9053\u662f\u4e00\u9053\u641c\u7d22\u9898qwq\uff09\n \n\u4ece\u5c0f\u5230\u8fbe\u679a\u4e3e\u5b57\u6bcd\u6765\u586b\u65b9\u683c\u65f6\n\n\u5bf9\u4e8e\u6bcf\u4e00\u884c \u5de6\u8fb9\u7684\u5fc5\u987b\u6bd4\u53f3\u8fb9\u5148\u586b\uff08\u4fdd\u8bc1\u4ece\u5de6\u81f3\u53f3\u9012\u589e\uff09\n\n\u5bf9\u4e8e\u6bcf\u4e00\u5217 \u4e0a\u9762\u7684\u5fc5\u987b\u6bd4\u4e0b\u9762\u5148\u586b\uff08\u4fdd\u8bc1\u4ece\u4e0a\u81f3\u4e0b\u9012\u589e\uff09\n\nSo dfs(a,b,c,d,e,now) a\u8868\u793a\u7b2c\u4e00\u884c\u5df2\u7ecf\u586b\u4e86\u51e0\u4e2a b,c,d,e \u540c\u63a8 now\u8868\u793a\u73b0\u5728\u8981\u586b\u7b2c\u51e0\u4e2a\u5b57\u6bcd\u4e86\uff081\u8868\u793aA etc.\uff09\n\n\u5e26\u4e0a\u8bb0\u5fc6\u5316\u641c\u7d22\n\n\u90a3\u4e48\u5c31\u662ff[a][b][c][d][e]\u8868\u793a\u7b2c\u4e00\u884c\u586b\u4e86a\u4e2a,\u7b2c\u4e8c\u884c\u586bb\u4e2a,\u7b2c\u4e09\u884c\u586bc\u4e2a,\u7b2c\u56db\u884c\u586bd\u4e2a,\u7b2c5\u884c\u586be\u4e2a\u7684\u6ee1\u8db3\u9898\u610f\u7684\u603b\u65b9\u6848\u6570\n\n\u73b0\u5728\u6211\u4eec\u5177\u4f53\u6765\u770b\u4e24\u4e2a\u95ee\u9898\uff1a\n\n1.\u7ed9\u5b9a\u5e8f\u5217\u6c42\u7f16\u53f7\n\n\u5c31\u662f\u6c42\u5b57\u5178\u5e8f\u6bd4\u5b83\u5c0f\u7684\u5408\u6cd5\u5e8f\u5217\u4e2a\u6570\u518d\u52a01\uff08\u52a0\u4e0a\u5b83\u81ea\u5df1\uff09\n\n\u679a\u4e3e\u7b2c1-25\u4f4d\u4e0a\u7684\u6570\u7684\u5b57\u6bcd \u6bcf\u4e00\u4f4d\u90fd\u4e0d\u80fd\u8d85\u8fc7\u9898\u76ee\u7ed9\u5b9a\u5e8f\u5217\u5bf9\u5e94\u4f4d\u7f6e\u4e0a\u7684\u5b57\u6bcd \uff08\u4e0d\u80fd\u7b49\u4e8e\uff01\uff09\n\n\u4e3e\u4e2a\u6817\u5b50\uff1a\n\n\u6211\u4eec\u8981\u77e5\u9053\u4ee5BE\u5f00\u5934\u7684\u5408\u6cd5\u5e8f\u5217\u4e2a\u6570 \u90a3\u4e48\u641c\u7b2c\u4e00\u4f4d\u4e3aA\u7684\u5e8f\u5217\u5217\u6570\n\n\u7136\u540e\u641c\u7b2c\u4e00\u4e8c\u4f4d\u4e3aBE\u7684\u5408\u6cd5\u5e8f\u5217\u6570 \u800c\u4e0d\u662f\u641c\u7b2c\u4e00\u4f4d\u4e3aB\u7684\u5408\u6cd5\u5e8f\u5217\u6570\n\n\u7136\u540e\u628a\u641c\u7d22\u5230\u7684\u65b9\u6848\u6570\u90fd\u52a0\u8d77\u6765 \u8f93\u51fa\u7b54\u6848\u8bb0\u5f97\u52a0\u4e0a1\n\n \n2.\u7ed9\u5b9a\u7f16\u53f7\u6c42\u5e8f\u5217\n\n\u540c\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u7b2c1-25\u4f4d\u4e0a\u7684\u6570\u5b57\n\n\u5047\u8bbe \u6211\u4eec\u6c42\u7b2c90\u4e2a\u5e8f\u5217  \u73b0\u5728\u679a\u4e3e\u7b2c\u4e8c\u4f4d\uff08\u7b2c\u4e00\u4f4d\u5fc5\u4e3aA\uff09 \u7b2c\u4e8c\u4f4d\u4e3aB\u65f6 \u6709\u65b9\u684880\u79cd \uff1b\u4e3aC\u65f6 \u6709\u65b9\u684830\u79cd \n\n\u90a3\u4e48\u8981\u6c42\u7684\u7b2c90\u4e2a\u5e8f\u5217\u7684\u7b2c\u4e8c\u4f4d\u4e00\u5b9a\u4e3a C \uff08\u65b9\u6848\u603b\u6570\u521a\u597d\u5927\u4e8e90\uff09   \n\n\u4ee5\u6b64\u7c7b\u63a8 \u4e00\u4f4d\u4e00\u4f4d\u5730\u786e\u5b9a\u4e0b\u53bb\n    \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<string>\nusing namespace std;\nint f[6][6][6][6][6],map[30],ans;\nbool ck(int a,int b) {return (!map[a])||(map[a]==b);}\nint dfs(int a,int b,int c,int d,int e,int now)\n{\n  if(now==26) return 1;\n  int &tmp=f[a-1][b-1][c-1][d-1][e-1];\n  if(tmp) return tmp;\n  if(a<=5 && ck(a,now)) tmp+=dfs(a+1,b,c,d,e,now+1);\n  if(b<a && ck(b+5,now)) tmp+=dfs(a,b+1,c,d,e,now+1);\n  if(c<b && ck(c+10,now)) tmp+=dfs(a,b,c+1,d,e,now+1);\n  if(d<c && ck(d+15,now)) tmp+=dfs(a,b,c,d+1,e,now+1);\n  if(e<d && ck(e+20,now)) tmp+=dfs(a,b,c,d,e+1,now+1);\n  return tmp;\n}\nint main()\n{\n  char tp;scanf(\"%c\",&tp);\n  if(tp=='W') {\n    string s;cin>>s;\n    for(register int i=1;i<=25;i++)\n      for(map[i]=1;map[i]<s[i-1]-'A'+1;map[i]++) {\n    memset(f,0,sizeof(f));\n    ans+=dfs(1,1,1,1,1,1);\n      }\n    printf(\"%d\",ans+1);\n  }\n  else {\n    int n;scanf(\"%d\",&n);\n    for(register int i=1;i<=25;i++)\n      for(map[i]=1;map[i]<25;map[i]++) {\n      memset(f,0,sizeof(f));\n      int tmp=dfs(1,1,1,1,1,1);\n      if(tmp>=n) break ;\n      n-=tmp;\n    }\n    for(register int i=1;i<=25;i++) printf(\"%c\",map[i]-1+'A');\n  }\n  return 0;\n}\n\n\n```",
        "postTime": 1548223936,
        "uid": 113980,
        "name": "hahaha1215",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2750 \u3010[USACO5.5]\u8d30\u4e94\u8bed\u8a00Two Five\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u7c7b\u4f3c  [USACO3.2]Stringsobits\u301001\u4e32\u3011\u7684\u9898\n\n\u6211\u4eec\u53ea\u9700\u8981\u67e5\u627e\u65b9\u6848\u6570+\u903c\u8fd1\uff0c\u4e0d\u65ad\u7684\u903c\u8fd1\u6b63\u786e\u7b54\u6848\uff0c\u6700\u540e\u627e\n\n\u5230\u6b63\u786e\u7b54\u6848\n\ni\uff0cj\u4ece\u5c0f\u5230\u5927\u5206\u522b\u679a\u4e3e\u884c\u548c\u5217\uff0c\u7136\u540e\u67e5\u627e\u8fd9\u4e2a\u5b57\u7b26\u7684\u65b9\u6848\u6570\uff0c\n\n\u4e0d\u65ad\u7684\u903c\u8fd1\uff0c\u65f6\u95f4\u5927\u7ea6\u662f\n\n## O\uff08int_max\uff09\n\n\u5f53\u7136\uff0c\u6211\u4eec\u9700\u8981\u52a0\u4f18\u5316\uff0c\u628a\u66b4\u529b\u641c\u7d22\u6539\u4e3a\u8bb0\u5fc6\u5316\u641c\u7d22\n\n\u5efa\u7acb\u4e00\u4e2a\u6570\u7ec4f[a][b][c][d][e]\uff0c\n\n\u8868\u793a\u7b2c\u4e00\u884c**\u786e\u5b9a**a\u4e2a\u6570\uff0c\u7b2c\u4e8c\u884c**\u786e\u5b9a**b\u4e2a\u6570\u3002\u3002\u3002\u3002\u3002\u7684\u6240\u6709**\u65b9\u6848\u6570**\uff0825\u4e2a\u683c\u5b50\uff09\n\n\u521d\u59cb\u5316\u5c31\u662ff[5][5][5][5][5]=1\uff0c\u56e0\u4e3a\u5168\u90e8\u786e\u5b9a\u5c31\u53ea\u6709\u4e00\u79cd\u65b9\u6848\n\n\u8fd9\uff0c\u5c31\u662f\u8bb0\u5fc6\u5316\u6240\u9700\u8981\u7684\u6570\u7ec4\n\n\u8fd9\u9053\u9898\u4e0d\u662f\u6709\u4e24\u79cd\u60c5\u51b5\u5417\uff1f\n\n\u4e00\u5f00\u59cb\u6253\u4e00\u4e2a\u6309\u7167\u524d\u9762\u6240\u8bf4\u7684\u53cc\u91cd\u5faa\u73af\n\n\uff081\uff09\u628a\u6570\u5b57\u6539\u5b57\u7b26\n\n\u679a\u4e3e25\u4e2a\u5b57\u7b26\uff0c\u7136\u540e\u653e\u5728\u961f\u5217\u91cc\u9762\uff0c\u5e76\u4e14\u67e5\u627e\u65b9\u6848\u6570\n\n\u5982\u679c\u65b9\u6848\u6570\u521a\u597d\u591a\u4e8e\u7f16\u7801\uff0c\u5c31\u8bf4\u660e\u8fd9\u4e2a\u4f4d\u7f6e\u9700\u8981\u653e\u8fd9\u4e2a\u5b57\u7b26\n\n\u4e3a\u4ec0\u4e48\uff1f\n\n\u56e0\u4e3a\u5982\u679c\u662f\u524d\u4e00\u4e2a\uff0c\u90a3\u4e48\u65b9\u6848\u6570\u4f1a\u4e0d\u591f\uff1b\u5982\u679c\u662f\u540e\u4e00\u4e2a\u65b9\u6848\n\n\u6570\u4f1a\u8d85\u8fc7\u6240\u8981\u627e\u7684\uff1b\u8fd9\u4e00\u4e2a\u65b9\u6848\u521a\u597d\u5305\u542b\u4e86\u6240\u8981\u627e\u7684\u5355\u8bcd\uff0c\n\n\u6240\u4ee5\u603b\u7684\u65b9\u6848\u6570\u80af\u5b9a\u4f1a\u5927\u4e8e\u7b49\u4e8e\u6240\u8981\u627e\u7684\u7f16\u7801.\n\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u7ec6\u8282\uff0c\u5c31\u662f\u8bf4\u5982\u679c\u4e00\u6b21\u6ca1\u6709\u627e\u5230\uff0c\u5c31\u8981\u628a\u65b9\u6848\u6570\n\n\u51cf\u53bb\u8fd9\u6837\u653e\u7684\u65b9\u6848\u6570\uff0c\u90a3\u662f\u56e0\u4e3a\u9700\u8981\u627e\u7684\u7f16\u7801\u80af\u5b9a\u5728\u5b83\u7684\u540e\n\n\u9762\uff0c\u800c\u67e5\u627e\u65e0\u6cd5\u76f4\u63a5\u627e\u5230\u524d\u9762\u7684\u65b9\u6848\u6570\n\n\u8fd9\u6837\u8bf4\u53ef\u80fd\u6709\u70b9\u513f\u4e71\uff0c\u5c31\u8bf7\u591a\u8bfb\u51e0\u904d\n\n\uff082\uff09\u628a\u5b57\u7b26\u6539\u6570\u5b57\n\n\u7edf\u8ba1\u521d\u59cb\u53160\n\n\u6bcf\u4e2a\u4f4d\u7f6e\u679a\u4e3e\u8fd9\u4e2a\u4f4d\u7f6e\u524d\u9762\u7684\u6240\u6709\u5b57\u7b26\uff08\u4e0d\u5305\u62ec\u5f53\u524d\u5b57\n\n\u7b26\uff09\uff0c\u4e0d\u65ad\u5730\u589e\u52a0\u67e5\u627e\u5230\u7684\u65b9\u6848\u6570\uff0c\u548c\u524d\u9762\u7684\u5927\u540c\u5c0f\u5f02\uff0c\u6700\n\n\u540e\u8f93\u51fa\u7684\u65f6\u5019\u8981+1\uff0c\u56e0\u4e3a\u524d\u9762\u6709k\u4e2a\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u5c31\u662fk+1\n\n\u8fd9\u6837\u505a\u518d\u52a0\u4e0a\u8bb0\u5fc6\u5316\u641c\u7d22\uff0c\u65f6\u95f4\u5927\u7ea6\u662f\n\n## O(25^3),\u8bc4\u6d4b0ms\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h> \nusing namespace std;\nint f[6][6][6][6][6],flag,len[5],t,bk,maxx[5],maxy[5];\nchar ss[2],a[5][5];\nbool v[25];\nint dfs(int a,int b,int c,int d,int e,int k)//k\u8868\u793a\u5f53\u524d\u641c\u5230\u7b2ck\u4e2a\u5b57\u7b26 \n{\n    int &ans=f[a][b][c][d][e]; \n    if(ans!=0) return ans;//\u8bb0\u5fc6\u5316\u641c\u7d22 \n    if(v[k]==false) return dfs(a,b,c,d,e,k+1);//\u5982\u679c\u5df2\u7ecf\u627e\u8fc7\u4e86 \n    if(a<5 && k>maxx[0] && k>maxy[a]) ans+=dfs(a+1,b,c,d,e,k+1);//\u80fd\u641c\u7d22\u7684\u524d\u63d0\u662f\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u4e0a\u65b9\u548c\u5de6\u8fb9\u90fd\u6709\u6570 \n    if(b<a && k>maxx[1] && k>maxy[b]) ans+=dfs(a,b+1,c,d,e,k+1);//\u5e76\u4e14\u6ee1\u8db3\u6761\u4ef6\n    if(c<b && k>maxx[2] && k>maxy[c]) ans+=dfs(a,b,c+1,d,e,k+1);\n    if(d<c && k>maxx[3] && k>maxy[d]) ans+=dfs(a,b,c,d+1,e,k+1);\n    if(e<d && k>maxx[4] && k>maxy[e]) ans+=dfs(a,b,c,d,e+1,k+1);\n    return ans;\n}\nint main()\n{\n    int i,j,k;\n    scanf(\"%s\\n\",ss);\n    if(ss[0]=='N') scanf(\"%d\",&flag);\n    else\n    {\n        for(i=0;i<5;i++)\n            for(j=0;j<5;j++)\n                scanf(\"%c\",&a[i][j]);\n        bk=1;\n    }\n    memset(v,true,sizeof(v));\n    memset(maxx,-1,sizeof(maxx));//\u8868\u793a\u884c\u7684\u6700\u5927\u503c \n    memset(maxy,-1,sizeof(maxy));//\u8868\u793a\u5217\u7684\u6700\u5927\u503c \n    for(i=0;i<5;i++)\n    {\n        //len[i]=0;\n        for(j=0;j<5;j++)\n        {\n            len[i]++;//\u591a\u653e\u4e00\u4e2a\u6570 \n    \t\tt=max(max(maxx[i],maxy[j])+1,0);\n            if(bk==0)\n            {\n                for(k=t;k<25;k++)//\u679a\u4e3e\u6240\u6709\u5bf9\u7684\u6570\uff0c\u5982\u679c\u4e0d\u559c\u6b22\u8fd9\u6837\uff0c\u53ef\u4ee5\u6539\u4e3afor(k=0;k<25;k++) \n                {\n                    if(v[k]==true)//\u5982\u679c\u6ca1\u6709\u7528\u8fc7\u8fd9\u4e2a\u6570 \n                    {\n                        memset(f,0,sizeof(f));\n                        f[5][5][5][5][5]=1;\n                        v[k]=false;//\u8bbe\u7f6e\u4e3a\u627e\u8fc7 \n                        maxx[i]=maxy[j]=k;\n                        int tmp=dfs(len[0],len[1],len[2],len[3],len[4],0);\n                        if(flag<=tmp)\n                        {\n                            a[i][j]='A'+k;\n                            break;\n                        }\n                        else\n                        {\n                            v[k]=true;//\u5982\u679c\u4e0d\u662f\u8fd9\u4e2a\uff0c\u5c31\u56de\u6eaf \n                            flag-=tmp;\n                        }\n                    }\n                }\n            }\n            else\n            {\n                for(k=t;k<a[i][j]-'A';k++)\n                {\n                    if(v[k]==true)\n                    {\n                        memset(f,0,sizeof(f));\n                        f[5][5][5][5][5]=1;\n                        v[k]=false;\n                        maxx[i]=maxy[j]=k;\n                        flag+=dfs(len[0],len[1],len[2],len[3],len[4],0);\n                        v[k]=true;\n                    }\n                }\n                v[a[i][j]-'A']=false;//\u5f53\u524d\u8fd9\u4e2a\u8bbe\u7f6e\u4e3a\u627e\u8fc7 \n            }\n        }\n    }\n    if(bk==0) //\u8f93\u51fa \n    {\n        for(i=0;i<5;i++)\n            for(j=0;j<5;j++)\n                printf(\"%c\",a[i][j]);\n        printf(\"\\n\");\n    }\n    else printf(\"%d\\n\",flag+1);\n    return 0;\n}\n```",
        "postTime": 1529906042,
        "uid": 66181,
        "name": "Celebrate",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2750 \u3010[USACO5.5]\u8d30\u4e94\u8bed\u8a00Two Five\u3011"
    },
    {
        "content": "\u4e00\u5f00\u59cb\u6211\u76f4\u63a5\u641c\u7d22\uff0c\u4ece\u5c0f\u5230\u5927\u653e\u6570(\u5b57\u6bcd\u5f53\u6210\u6570)\uff0c\u6bcf\u4e2a\u6570\u679a\u4e3e\u884c\uff0c\n\n\u4e4b\u540e\u653e\u5728\u8fd9\u4e00\u884c\u5df2\u653e\u7684\u672b\u5c3e\uff0c\u524d\u63d0\u662f\u4e0a\u4e00\u884c\u653e\u7684\u6bd4\u8fd9\u4e00\u884c\u591a\u3002\n\n\uff08\u56e0\u4e3a\u5426\u5219\u8be5\u6570\u7684\u5de6\u8fb9\u6216\u4e0a\u9762\u5c31\u65e0\u6570\u53ef\u653e\u4e86\uff09\u3002\n\n\u4e4b\u540e\u53d1\u73b0\u53ef\u4ee5\u8bb0\u5fc6\u5316\uff0c\u7528f[a,b,c,d,e](\u7b2ci\u4e2a\u53c2\u6570\u8868\u793a\u7b2ci\u884c\u5df2\u653e\u7684\u6570\u76ee)\u8868\u793a\n\n\u8be5\u60c5\u51b5\u4e0b\u7684\u65b9\u6848\u6570\u3002\n\n\n\u540e\u6765\u6211\u53d1\u73b0\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u5b57\u6bcd\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u5b57\u5178\u5e8f\u4ece\u5c0f\u5230\u5927\uff0c\n\n\u5982\u5c067\u653e\u5728\u7b2c\u4e8c\u884c\u7684\u6240\u6709\u60c5\u51b5\u672a\u5fc5\u6bd4\u5c067\u653e\u5728\u7b2c\u4e09\u884c\u7684\u6240\u6709\u60c5\u51b5\u5b57\u5178\u5e8f\u90fd\u5c0f\uff0c\n\n\u56e0\u4e3a\u7b2c1\u884c\u4f1a\u4f18\u5148\u5f71\u54cd\u5b57\u5178\u5e8f\u3002\n\n\n\u4e8e\u662f\u53ea\u80fd\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u884c\uff0c\u5217\uff0c\u6570\uff1b\u4f46\u662f\u6211\u4eec\u77e5\u9053\u4e4b\u524d\u7684\u641c\u7d22\u867d\u7136\u4e0d\u4fdd\u8bc1\u5b57\u5178\u5e8f\u5347\u5e8f\uff0c\n\n\u4f46\u6c42\u51fa\u7684\u65b9\u6848\u6570\u662f\u6b63\u786e\u7684\u3002\u6240\u4ee5\u53ef\u4ee5\u6c42\u51fa\u5f53\u524d\u72b6\u6001\u4e0b\u7684\u65b9\u6848\u6570\u3002\u6bd4\u5982\u5f53\u524d\u72b6\u6001\u5df2\u7ecf\u653e\u4e86\n\nAB,\u6211\u4eec\u5c31\u53ef\u4ee5\u6c42\u51fa\u63a5\u4e0b\u6765\u7684\u65b9\u6848\u6570\u3002\u5982\u679c\u603b\u65b9\u6848\u6570+\u5f53\u524d\u65b9\u6848\u6570<\u6240\u6c42\u65b9\u6848\u6570\uff0c\n\n\u6211\u4eec\u5c31\u8ba9\u603b\u65b9\u6848\u6570\u52a0\u4e0a\u5f53\u524d\u65b9\u6848\u6570\uff0c\u4e4b\u540e\u518d\u5c1d\u8bd5AC\u3002\n\n\u65f6\u95f4\uff085\\*5\\*25\\*\uff086^7\uff09\u22483\\*10^7\uff09\uff0c\u800c\u5b9e\u9645\u65f6\u95f4\u8fdc\u8fdc\u5c0f\u4e8e\u8fd9\u4e2a\u6570\uff0c\u53ea\u7528\u4e8610ms\u3002\n",
        "postTime": 1474275501,
        "uid": 9168,
        "name": "kczno1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2750 \u3010[USACO5.5]\u8d30\u4e94\u8bed\u8a00Two Five\u3011"
    },
    {
        "content": "\u7528150\u884c\u4ee3\u7801\u6210\u529f\u7684A\u4e86\uff0c\uff08\u8bb0\u5f97\u6211\u7684\u65f6\u95f4\u662f\u6700\u5feb\u7684\uff09\n\n\u601d\u8def\uff1a\n\n\u8bb0\u5fc6\u5316\u641c\u7d22\uff0c\u6bd4\u8f83\u96be\u7684\u4e00\u9053\u9898\u3002\n\n\u901a\u8fc7\u524d\u7f00\u8bb0\u6570\u7684\u65b9\u6cd5\u5b8c\u6210\u5b57\u6bcd\u548c\u6570\u5b57\u4e4b\u95f4\u7684\u8f6c\u6362\u3002\n\n\u95ee\u9898\u8f6c\u6362\u4e3a\u7ed9\u5b9a\u524d\u7f00\uff0c\u6c42\u6709\u591a\u5c11\u4e2a\u5408\u6cd5\u7684\u6446\u653e\u65b9\u6cd5\u3002\n\n\u8003\u8651\u6309\u7167A-Y\u7684\u987a\u5e8f\u4f9d\u6b21\u628a\u5b57\u6bcd\u586b\u8fdb\u8868\u683c\uff0c\u586b\u8868\u65f6\u9700\u8981\u6ee1\u8db33\u6761\u89c4\u5219\uff1a\uff081\uff09\u6240\u586b\u5b57\u6bcd\u7684\u5de6\u8fb9\u4e0d\u80fd\u4e3a\u7a7a\uff1b\n\n\uff082\uff09\u6240\u586b\u5b57\u6bcd\u7684\u4e0a\u65b9\u4e0d\u80fd\u4e3a\u7a7a\uff1b\n\n\uff083\uff09\u5982\u679c\u5b57\u6bcd\u5728\u524d\u7f00\u4e2d\uff0c\u5219\u5fc5\u987b\u586b\u5728\u5bf9\u5e94\u4f4d\u7f6e\uff0c\u5982\u679c\u5b57\u6bcd\u4e0d\u5728\u524d\u7f00\u4e2d\uff0c\u4e5f\u4e0d\u80fd\u5360\u636e\u524d\u7f00\u4e2d\u51fa\u73b0\u7684\u5b57\u6bcd\u7684\u4f4d\u7f6e\u3002\n\n\u56e0\u4e3a\u5b57\u6bcd\u7684\u4f4d\u7f6e\u8c03\u6362\u4f1a\u5e26\u6765\u5927\u91cf\u7684\u5408\u6cd5\u6446\u6cd5\uff0c\u6240\u4ee5\u8fd9\u4e00\u9898\u76f4\u63a5\u641c\u7d22\u662f\u8fc7\u4e0d\u4e86\u7684\u3002\n\n\u6807\u51c6\u505a\u6cd5\u91cc\u641c\u7d22\u72b6\u6001\u7684\u8868\u793a\u5f88\u7cbe\u5999\uff0c\u6211\u4eec\u7528F[a][b][c][d][e]\u8868\u793a\u6309\u7167\u4eceA-Y\u7684\u987a\u5e8f\u6446\uff0c\u7b2c\u4e00\u884c\u6446a\u4e2a\u5b57\u6bcd\uff0c\u7b2c\u4e8c\u884c\u6446b\u4e2a\u5b57\u6bcd\u3002\u3002\u3002\n\n\u7684\u5408\u6cd5\u6446\u6cd5\u6570\u91cf\u3002\n\n\u8fd9\u79cd\u72b6\u6001\u8868\u793a\u7684\u5408\u7406\u6027\u4f9d\u8d56\u4e0a\u8ff0\u7684\uff081\uff09\uff082\uff09\u4e24\u6761\u89c4\u5219\u3002\n\n\u8fd9\u6837\u62bd\u8c61\u8fc7\u7684\u72b6\u6001\u5c31\u5927\u5927\u51cf\u5c11\u4e86\u641c\u7d22\u7a7a\u95f4\u3002\u518d\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u4f18\u5316\u4e00\u4e0b\uff0c\u901f\u5ea6\u975e\u5e38\u5feb\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n//2018.12.31 09:26\n/*\n   Name: Jiang_zi_chuan\n   Copyright: Jiang_zi_chuan\n   Author: Jiang_zi_chuan\n   Date: 31/12/18 09:26\n   Description: \u6df1\u5ea6\u4f18\u5148\u641c\u7d22,DFS&&\u6982\u7387\u8bba,\u7edf\u8ba1&&\u52a8\u6001\u89c4\u5212,\u52a8\u89c4,dp\n*/\n// luogu-judger-enable-o2\n//#define LOCAL\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#include <iostream>\n#include <bits/stdc++.h>\n\n#define INF 0x3f\n#define ull unsigned long long\n#define ll long long\n#define FOR(a, b, n) for(int a = b; b >= n ? a >= n : a <= n; b >= n ? a-- : a++)\n#define M(a, n) memset(a, n, sizeof(a));\n#define S(n) scanf(\"%d\", &n)\n#define P(n) printf(\"%d\", n)\n#define G(n) getline(cin, n)\n#define PI acos(-1.0)\n#define QAQ(n) 0\n#define chen_zhe 0x3f\n\nusing namespace std;\n\nconst int NR = 35;\n\ninline int read()  {\n   \tint s = 0, w = 1;\n   \tchar ch = getchar();\n   \twhile(ch <= '0' || ch > '9') {\n   \t\tif(ch == '-') {\n   \t\t\tw = -1;\n   \t\t\tch = getchar();\n   \t\t}\n   \t}\n   \twhile(ch >= '0' && ch <= '9') {\n   \t\ts = s * 10 + ch - '0';\n   \t\tch = getchar();\n   \t}\n   \treturn s * w;\n}\n\nchar Str[30];\nint Appear[30];\nint Table[6][6][6][6][6];\n \ninline bool dp(int _l, int _c, int _upc) {\n    if(_c == 5) \n    \treturn false;\n    if(Str[_l * 5 + _c] != '\\0') \n    \treturn false;\n    if(_c + 1 > _upc) \n    \treturn false;\n    return true;\n}\n \nint dfs(int _a, int _b, int _c, int _d, int _e) {\n    if(Table[_a][_b][_c][_d][_e] != 0)\n        return Table[_a][_b][_c][_d][_e];\n    int id = _a + _b + _c + _d + _e;\n    if(id == 25) \n    \treturn Table[5][5][5][5][5] = 1;\n    int ret = 0;\n    if(Appear[id] != -1) {\n        int line = Appear[id] / 5;\n        if(line == 0)\n            ret = dfs(_a + 1, _b, _c, _d, _e);\n        else if(line == 1)\n            ret = dfs(_a, _b + 1, _c, _d, _e);\n        else if(line == 2)\n            ret = dfs(_a, _b, _c + 1, _d, _e);\n        else if(line == 3)\n            ret = dfs(_a, _b, _c, _d + 1, _e);\n        else if(line == 4)\n            ret = dfs(_a, _b, _c, _d, _e + 1);\n    }\n    else {\n        if(dp(0, _a, 5))\n            ret += dfs(_a + 1, _b, _c, _d, _e);\n        if(dp(1, _b, _a))\n            ret += dfs(_a, _b + 1, _c, _d, _e);\n        if(dp(2, _c, _b))\n            ret += dfs(_a, _b, _c + 1, _d, _e);\n        if(dp(3, _d, _c))\n            ret += dfs(_a, _b, _c, _d + 1, _e);\n        if(dp(4, _e, _d))\n            ret += dfs(_a, _b, _c, _d, _e + 1);\n    }\n    return Table[_a][_b][_c][_d][_e] = ret;\n}\n \nint main() {\n    char c, s[30], ans_s[30] = {'\\0'};\n    int n, ans_n = 0;\n    scanf(\"%c\", &c);\n    if(c == 'W') {\n        scanf(\"%s\", s);\n        M(Appear, -1);\n        FOR(i, 0, 24) {\n            for(Str[i] = 'A'; Str[i] < s[i]; Str[i]++) {\n                if(Appear[Str[i] - 'A'] != -1) \n                \tcontinue;\n                if(i % 5 != 0 && Str[i] < Str[i - 1]) \n                \tcontinue;\n                if(i / 5 != 0 && Str[i] < Str[i - 5]) \n                \tcontinue;\n                Appear[Str[i] - 'A'] = i;\n                M(Table, 0);\n                ans_n += dfs(0, 0, 0, 0, 0);\n                Appear[Str[i] - 'A'] = -1;\n            }\n            Appear[Str[i] - 'A'] = i;\n        }\n        P(++ans_n);\n        printf(\"\\n\");\n    }\n    else {\n        S(n);\n        M(Appear, -1);\n        FOR(i, 0, 24) {\n            for(Str[i] = 'A';; Str[i]++) {\n                if(Appear[Str[i] - 'A'] != -1) \n                \tcontinue;\n                if(i % 5 != 0 && Str[i] < Str[i - 1]) \n                \tcontinue;\n                if(i / 5 != 0 && Str[i] < Str[i - 5]) \n                \tcontinue;\n                Appear[Str[i] - 'A'] = i;\n                M(Table, 0);\n                int tmp = dfs(0, 0, 0, 0, 0);\n                if(tmp >= n) {\n                    ans_s[i] = Str[i];\n                    break;\n                }\n                n -= tmp;\n                Appear[Str[i] - 'A'] = -1;\n            }\n        }\n        printf(\"%s\\n\", ans_s);\n    }\n    return 0;\n}\n```",
        "postTime": 1546221442,
        "uid": 154004,
        "name": "Jiang_zi_chuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2750 \u3010[USACO5.5]\u8d30\u4e94\u8bed\u8a00Two Five\u3011"
    }
]