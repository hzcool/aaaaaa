[
    {
        "content": "# \u8c8c\u4f3c\u6ca1\u6709\u7528\u4e3b\u5e2d\u6811\u7684\uff0c\u6211\u5c31\u6765\u4e00\u53d1\u4e3b\u5e2d\u6811\u9898\u89e3\n\u770b\u89c1\u697c\u4e0b\u6709\u7528\u7ebf\u6bb5\u6811\u7684\uff0c\u5176\u5b9e\u4e3b\u5e2d\u6811\u5c31\u662f\u53ef\u6301\u4e45\u7684\u7ebf\u6bb5\u6811\n\u666e\u901a\u7684\u7ebf\u6bb5\u6811\u662f\u5bf91\u5230n\u7684\u533a\u95f4\u5efa\u6811\uff0c\u800c\u4e3b\u5e2d\u6811\u662f\u57281\u5230n\u7684\u533a\u95f4\u4e2d\u53ea\u63d2\u5165\u67d0\u4e2a\u524d\u7f00\u4e2d\u7684\u503c\uff0c\u7531\u4e8e\u533a\u95f4\u548c\u5177\u6709\u53ef\u51cf\u6027\u6240\u4ee5\u4e3b\u5e2d\u6811\u7528\u6765\u89e3\u51b3\u533a\u95f4\u7b2ck\u5c0f\u7684\u95ee\u9898\n\n~~\u4e00\u5f00\u59cb\u770b\u89c1\u9898\u76ee\u76f4\u63a5\u5c31\u6253\u4e86\u4e00\u4e2a\u4e3b\u5e2d\u6811\u677f\u5b50~~\n\n\u9996\u5148\u6811\u4e2d\u7684\u8282\u70b9\u4fe1\u606f\u9700\u8981\u8bb0\u5f55\u6b64\u533a\u95f4\u6570\u7684\u6570\u91cf\uff0c\u7136\u540e\u662f\u4e24\u4e2a\u513f\u5b50\u8282\u70b9\n\n```cpp\nstruct pt{\n\tint sum;\n\tpt* ch[2];\n};\n```\n\u7136\u540e\u5efa\u6811\u8fc7\u7a0b\u56e0\u4e3a\u5982\u679c\u6bcf\u4e2a\u524d\u7f00\u90fd\u5efa\u4e00\u68f5\u6811\uff0c\u90a3\u4e48\u6bcf\u68f5\u6811\u90fd\u662fO(n)\u7684\u7a7a\u95f4\uff0c\u603b\u7a7a\u95f4\u4e3a$O(n^2)$\u5f7b\u5e95\u53d8\u4e3a\u70b8\u540c\u5b66\n\n\u6211\u4eec\u53d1\u73b0\u7531\u4e8e\u6bcf\u6b21\u589e\u52a0\u4e00\u4e2a\u6570\u6700\u591a\u4f1a\u53d8$O(logn)$\u4e2a\u8282\u70b9\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u5f53\u524d\u6811\u548c\u524d\u4e00\u4e2a\u6811\u7684\u516c\u5171\u533a\u95f4\u6765\u5efa\u6811\n\u603b\u7a7a\u95f4$O(nlogn)$\n\n```cpp\ntypedef pt* ptr;\nptr root[maxn];\nint n,k;\nvoid add(ptr last,ptr& th,int v,int l=1,int r=n){\n\tth=new pt;\n\t*th=*last;\n\tth->sum=last->sum+1;\n\tif(l==r)return ;\n\tint mid=l+r>>1;\n\tif(v<=mid)add(last->ch[0],th->ch[0],v,l,mid);\n\telse add(last->ch[1],th->ch[1],v,mid+1,r);\n}\n```\n\n\u5efa\u6811\u8fc7\u7a0b\u4e5f\u5b8c\u4e86\uff0c\u7136\u540e\u662f\u67e5\u8be2\uff0c\u548c\u697c\u4e0b\u7ebf\u6bb5\u6811dalao\u4e00\u6837\u53ea\u4e0d\u8fc7\u533a\u95f4$[l,r]$\u7684\u8282\u70b9\u662f$root[r]-root[l-1]$\uff08\u56e0\u4e3aroot\u90fd\u662f\u524d\u7f00\uff09\n\u6240\u4ee5\u67e5\u8be2\u7684\u4ee3\u7801\u4e5f\u5f88\u597d\u5199\n```cpp\nint getid(ptr le,ptr re,int k,int l=1,int r=n){\n\tif(l==r)return l;\n\tint tmp=re->ch[0]->sum-le->ch[0]->sum;\n\tint mid=l+r>>1;\n\tif(k<=tmp)return getid(le->ch[0],re->ch[0],k,l,mid);\n\telse return getid(le->ch[1],re->ch[1],k-tmp,mid+1,r);\n}\n```\n\u7136\u540e\u5c31\u662f\u79bb\u6563\u5316\u548c\u53bb\u91cd\u7b49\u7b49\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int maxn=1e5+5;\nstruct pt{\n\tint sum;\n\tpt* ch[2];\n};\ntypedef pt* ptr;\nptr root[maxn];\nint n,k;\nvoid add(ptr last,ptr& th,int v,int l=1,int r=n){\n\tth=new pt;\n\t*th=*last;\n\tth->sum=last->sum+1;\n\tif(l==r)return ;\n\tint mid=l+r>>1;\n\tif(v<=mid)add(last->ch[0],th->ch[0],v,l,mid);\n\telse add(last->ch[1],th->ch[1],v,mid+1,r);\n}\nint getid(ptr le,ptr re,int k,int l=1,int r=n){\n\tif(l==r)return l;\n\tint tmp=re->ch[0]->sum-le->ch[0]->sum;\n\tint mid=l+r>>1;\n\tif(k<=tmp)return getid(le->ch[0],re->ch[0],k,l,mid);\n\telse return getid(le->ch[1],re->ch[1],k-tmp,mid+1,r);\n}\nint a[maxn];\nint main(){\n\tptr& null=root[0];\n\tnull=new pt;\n\tnull->ch[0]=null->ch[1]=null;null->sum=0;\n\tcin>>n>>k;\n\tfor(int i=1;i<=n;++i){\n\t\tcin>>a[i];\n\t}\n\tsort(a+1,a+1+n);\n\tn=unique(a+1,a+1+n)-a-1;\n\tif(k>n){\n\t\tcout<<\"NO RESULT\"<<endl;\n\t\treturn 0;\n\t}\n\tfor(int i=1;i<=n;++i){\n\t\tadd(root[i-1],root[i],i);\n\t}\n\tcout<<a[getid(root[0],root[n],k)]<<endl;\n\treturn 0;\n}\n```\n\u8ba9\u6211\u4eec\u4e00\u8d77%dalao @[ghj1222](https://www.luogu.org/space/show?uid=13091)",
        "postTime": 1535892542,
        "uid": 87940,
        "name": "kraylas",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "\u4e00\u4f4d\u849f\u84bb\uff08\u5c31\u662f\u61d2\u5f97\u81ea\u5df1\u6572\u4ee3\u7801\uff09\u5728\u67d0\u5927\u4f6c\u7684\u5e2e\u52a9\u4e0b\u77e5\u9053\u4e86\u8fd9\u4e2a\u795e\u5947\u7684STL\u51fd\u6570\u2014\u2014\u2014\u2014unique\uff08\u5c31\u662f\u628a\u6570\u7ec4\u4f2a\u53bb\u91cd\uff0c\u91cd\u590d\u7684\u6570\u653e\u5728\u6570\u7ec4\u672b\uff09\uff0c\u7136\u540e\u8fd9\u9898\u5c31\u505a\u51fa\u6765\u4e86\u3002\u3002\u3002\n\n\u770b\u89e3\uff1a\n\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,k,a[10000];//\u5b9a\u4e49\u53d8\u91cf\u548c\u6570\u7ec4\nint main()\n{\n    cin>>n>>k;\n    for(int i=0;i<n;i++)\n    cin>>a[i];\n    sort(a,a+n);//\u5feb\u6392\u6570\u7ec4a\n    int ans=unique(a,a+n)-a;//\u7ed9\u6570\u7ec4a\u53bb\u91cd\uff0c\u5e76\u4fdd\u7559ans=\u53bb\u91cd\u540e\u975e\u4f2a\u7684\u957f\u5ea6\n    if(k<ans)\n    cout<<a[k-1]; //\u5982\u679c\u53bb\u91cd\u4ee5\u540ek<=ans\uff0c\u5219\u8f93\u51fa\u5bf9\u5e94\u7684\u6570\n    else cout<<\"NO RESULT\";//\u5426\u5219\u8f93\u51fa NO RESULT\n    return 0;\n}\n~~//\u4e8b\u5b9e\u8bc1\u660eSTL\u6700666\uff08\u6ed1\u7a3d\uff09~~\n```",
        "postTime": 1515560111,
        "uid": 58811,
        "name": "\u4e0d\u4f1adp\u9000\u5f79\u83dc\u9e21",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "\u7ffb\u5b8c\u4e8654\u7bc7\u9898\u89e3\uff0c\u53d1\u73b0\u5927\u90e8\u5206\u90fd\u662fsort\uff0c\u6876\u6392\u4e4b\u7c7b\uff0c\u4e5f\u6709\u7528\uff08\u6839\u672c\u6ca1\u5fc5\u8981\u7528\u7684\uff09\u9ad8\u7aef\u6570\u636e\u7ed3\u6784\u7684\u3002\n\n\u5927\u90e8\u5206\u7b97\u6cd5\u90fd\u662fO(nlogn)\u7684\uff0c\u6876\u6392\u5982\u679c\u6539\u201c\u6b63\u6574\u6570\u5747\u5c0f\u4e8e30000\u201d\u4e3a\u201c\u6b63\u6574\u6570\u5728int\u8303\u56f4\u5185\u201d\u5c31\u65e0\u6cd5\u4f7f\u7528\u4e86\u3002\n\n#### \u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e2aO(n)\u7b97\u6cd5\uff0c\u4e14\u4e0d\u53d7\u6570\u5b57\u5927\u5c0f\u9650\u5236\u3002\n\n\u5177\u4f53\u601d\u8def\u5c31\u662f\u501f\u9274\u5feb\u901f\u6392\u5e8f\u7684\u601d\u60f3\uff0c\u5728\u5feb\u6392\u8fc7\u7a0b\u4e2d\u77e5\u9053\u5c0f\u4e8e\u57fa\u51c6\u503c\u7684\u6570\u6709\u591a\u5c11\u4e2a\uff0c\u5927\u4e8e\u57fa\u51c6\u503c\u7684\u6570\u6709\u591a\u5c11\u4e2a\uff0c\u4ece\u800c\u9009\u53d6\u5c0f\u4e8e\u6216\u5927\u4e8e\u57fa\u51c6\u503c\u7684\u90a3**\u4e00\u90e8\u5206**\u533a\u95f4\u7ee7\u7eed\u9012\u5f52\uff0c\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6O(n),\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6O(n\u65b9\uff09\n\n\u5982\u679c\u6709\u7684\u9898\u51fa\u9898\u89d2\u5ea6\u5201\u94bb\uff0c\u65f6\u95f4\u5361\u7684\u7d27\u4e5f\u4e0d\u80fd\u7528\u6876\u6392\uff0c\u53ef\u522b\u5fd8\u4e86\u8bd5\u8bd5\u8fd9\u4e2a\u7b97\u6cd5\u54c8~\n\n```\n#include <stdio.h>\n#include <algorithm>\nusing namespace std;\nint n,tot,k;\nint a[10010];\nbool f[30010];\nint search_k(int l,int r)\n{\n    if(l==r&&l==k) return a[k];\n    if(l<r)\n    {\n    \t//\u8fd9\u90e8\u5206\u548c\u5feb\u6392\u4e00\u6837\u7684 \n        int i=l,j=r,p=a[l];//\u9009\u5de6\u7aef\u70b9\u4e3a\u57fa\u51c6\u6570 \n        while(i<j)\n        {\n            while(i<j&&a[j]>p) j--;//\u4ece\u53f3\u5411\u5de6\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u5c0f\u4e8e\u57fa\u51c6\u6570\u7684\u6570 \n            if(i<j) swap(a[i],a[j]);\n            while(i<j&&a[i]<=p) i++;//\u4ece\u5de6\u5411\u53f3\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u5927\u4e8e\u57fa\u51c6\u6570\u5f97\u6570 \n            if(i<j) swap(a[i],a[j]);\n        }\n        a[i]=p;\n        if(i==k) return a[k];\n        else if(i>k) return search_k(l,i-1);//k\u5728\u5de6\u533a\u95f4 \n        else return search_k(i+1,r);//\u53f3\u533a\u95f4 \n    }\n}\nint main()\n{\n    int x;\n    scanf(\"%d %d\",&n,&k);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&x);\n        if(!f[x]){\n            a[++tot]=x;//\u7528\u6570\u7ec4\u53bb\u91cd\uff0c\u5982\u679c\u6570\u636e\u8303\u56f4\u53d8\u5927\uff0c\u53ef\u4ee5\u7528map \n            f[x]=true;\n        }\n    }\n    if(tot<k) {printf(\"NO RESULT\");return 0;}//tot\u4e3a\u53bb\u91cd\u540e\u6570\u5b57\u6570\u91cf \n    printf(\"%d\",search_k(1,tot));\n    return 0;\n}\n```",
        "postTime": 1548936722,
        "uid": 101526,
        "name": "\u6f5c\u7fce",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u79cd\u65b0\u7684\u601d\u8def\u3002\n\n\u9996\u5148\uff0cC++\u6709\u4e00\u70b9\u597d\u5904\uff0c\u53ef\u4ee5\u7528sort\u51fd\u6570\uff08\u6ca1\u8bf4C\u7279\u522b\u5dee\uff01\uff09\u3002\n\n\u9898\u76ee\u8bf4\uff0c\u91cd\u590d\u7684\u6570\u636e\u4e0d\u80fd\u7b97\u4e0a\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u8981\u8df3\u8fc7\u91cd\u590d\u7684\u6570\uff0c\n\n\u76f8\u5f53\u4e8e\u6c42\u539f\u6570\u540e\u9762\u90a3\u4e2a\u6570\u3002\n\n\u5e9f\u8bdd\u4e0d\u591a\u8bf4\uff0c\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<algorithm>  //\u5934\u6587\u4ef6\u522b\u6f0f\u4e86\nusing namespace std;\nint a[10005]={0},n,k,i;\nint main()\n{\n    cin>>n>>k;\n    for(i=1;i<=n;i++)\n        cin>>a[i];\n    sort(a+1,a+n+1);//\u6392\u4e2a\u5e8f\n    for(i=1;i<=k&&i<=n;i++)\n    {\n        if(a[i]==a[i+1])\n            k++;\n        //\u4e0e\u4f17\u4e0d\u540c\u7684\u4e00\u6b65\uff0c\u5982\u679c\u6709\u91cd\u590d\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u6c42\u5b83\u540e\u9762\u7684\u6570\n    }\n    if(i>n)\n        cout<<\"NO RESULT\";\n    else\n        cout<<a[i-1];\n    return 0;\n}\n\n```",
        "postTime": 1527505800,
        "uid": 101694,
        "name": "yummy",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "\u672c\u4eba\u65b0\u624b\uff0cc++\u6570\u7ec4\u8ba1\u6570\u89e3\u9898\uff0c\u4e0d\u559c\u52ff\u55b7\n\n\u5176\u5b9e\u76f4\u63a5\u6392\u5e8f\u53bb\u91cd\u5c31\u884c\u4e86\n\n\u4f46\u6211\u4e0d\u60f3\u53bb\u91cd\uff0c\u6240\u4ee5\u7528\u6570\u7ec4\u8ba1\u6570\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint n,k,b[30010],gs,a;\nint main()\n{\n        cin>>n>>k;//\u8f93\u5165n\u548ck\n        for(int i=1;i<=n;i++)\n        {\n                cin>>a;\n                b[a]++;//\u7528\u6570\u7ec4\u8ba1\u6570\u7684\u65b9\u6cd5\u628a\u6570\u5b58\u8fdb\u53bb\n        }\n        for(int i=1;i<=30000;i++)\n        {\n                if(b[i]>=1) gs++;//\u7531\u4e8e\u76f8\u540c\u7684\u6570\u5b58\u5728\u4e00\u4e2a\u6570\u7ec4\u91cc,\u6240\u4ee5\u4e0d\u7528\u53bb\u91cd\n                if(gs==k) {cout<<i;return 0;}//\u627e\u51fa\u7b2ck\u5c0f\uff0c\u8f93\u51fa\n        }\n        cout<<\"NO RESULT\";//\u5426\u5219\u627e\u4e0d\u51fa\u7b2ck\u5c0f\n        return 0;\n}\n```",
        "postTime": 1499655941,
        "uid": 13805,
        "name": "Ackoter",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "# \u53d1\u73b0\u81ea\u5df1\u5199\u7684\u597d\u72ec\u7279qwq\n\n### dalao\u4eec\u90fd\u662f\u7528sort\u554a\uff0cstl\u554a\u4ec0\u4e48\u7684\uff0c\u4f46\u6211\u8fd9\u4e2a\u849f\u84bb\u5b8c\u5168\u4e0d\u61c2\u554aqwq\n\n## \u8fd9\u9053\u9898\u7684\u4e3b\u8981\u601d\u8def\u5c31\u662f\u6392\u5e8f\u5b8c\u4e86\u4e4b\u540e\u53bb\u91cd\uff0c\u4f46\u662f\u4e3b\u8981\u95ee\u9898\u5c31\u5728\u8fd9\u4e2a\u53bb\u91cd\u4e0a\uff0c\u6240\u4ee5\u6211\u5728\u8fd9\u91cc\u76f4\u63a5\u7528\u4e86\u6876\u6392\uff0c\u6392\u5e8f\u65f6\u6211\u4eec\u5f00\u4e00\u4e2amaxs\u8868\u793a\u6876\u6392\u65f6\u6700\u5927\u7684\u6570\u662f\u591a\u5c11\uff0c\u56e0\u4e3a\u662f\u6876\u6392\u6240\u4ee5\u6211\u4eec\u540e\u6765\u8981\u7528\u5230\u8fd9\u4e2a\u6570\u3002\n\n## \u6392\u5e8f\u5b8c\u6210\u4e4b\u540e\uff0c\u6211\u4eec\u4ece1\u679a\u4e3e\u5230maxs\uff0c\u5165\u5ea7i\u8fd9\u4e2a\u6570\u7684\u51fa\u73b0\u6b21\u6570\u662f0\u7684\u8bdd\uff0c\u90a3\u4e48\u6211\u4eec\u76f4\u63a5continue\uff0c\u4e0d\u7136\u7684\u8bdd\uff0c\u6211\u4eec\u5224\u65ad\u4e00\u4e0b\uff0c\u5982\u679c\u76eenow_k\u8fd9\u4e2a\u6570\u5df2\u7ecf\u7b49\u4e8e\u4e86k,\u90a3\u4e48\u6211\u4eec\u53ea\u8981\u8ba9k++\u5c31\u597d\u4e86\uff0c\u4e0d\u7136\u7684\u8bdd\uff0c\u6211\u4eec\u8ba9now_k++\uff0c\u7ee7\u7eed\u5f80\u4e0b\u679a\u4e3e\uff08now_k:\u76ee\u524d\u5df2\u7ecf\u679a\u4e3e\u5230\u4e86\u7b2ck\u5927\u7684\u6570\uff09\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <cstring>\n#include <algorithm>\n#define N 30005\n\nusing namespace std;\n\nint n,k,cnt;\nint ans[N];\n\ninline int read(){\n\tint s=0,w=1;\n\tchar ch=getchar();\n\twhile (ch<'0'||ch>'9') {if (ch=='-') w=-1;ch=getchar();}\n\twhile (ch>='0'&&ch<='9') {s=s*10+ch-'0';ch=getchar();}\n\treturn s*w;\n}\ninline int max(int x,int y){\n\treturn x<y?y:x;\n}\n\nint main(void){\n\tint maxs=-2147483647;\n\tn=read();k=read();\n\tfor (int i=1;i<=n;++i){\n\t\tint kkk=read();\n\t\tans[kkk]++;\n\t\tmaxs=max(maxs,kkk);\n\t}\n\tint now_k=1;\n\tfor (int i=1;i<=maxs;++i){\n\t\tif (ans[i]==0) continue;\n\t\tif (now_k==k){\n\t\t\tprintf (\"%d\\n\",i);\n\t\t\treturn 0;\n\t\t}\n\t\tnow_k++;\n\t}\n\tputs(\"NO RESULT\");\n\treturn 0;\n}\n```",
        "postTime": 1529317518,
        "uid": 54047,
        "name": "\u516e\u6c34XiShui\u4e36",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "## \u4e00\u7bc7\u81ea\u8ba4\u4e3a\u5bb9\u6613\u61c2\u7684\u9898\u89e3\n\n\u4f60\u4eec\u90fd\u7528sort\uff0c\u96be\u9053\u5fd8\u8bb0\u4e86\u6876\u6392\uff1f\n\n\u8fd9\u4eec\u5c0f\u7684\u6570\u636e\u91cf\uff0c\u6876\u6392\u662f\u65e0\u654c\u7684\u3002\n\n\u53ea\u9700\u8981\u8bb0\u5f55\u4e00\u4e0b\u54ea\u4e2a\u6570\u5b57\u51fa\u73b0\u8fc7\uff0c\u5728\u5bfb\u627e\u7b2ck\u5c0f\u5373\u53ef\n\n\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n\tint n,k,a[100005],t=0,to[30005];//to\u4e3a\u6876\uff0ct\u4e3a\u7edf\u8ba1\u6876\u4e2d\u51fa\u73b0\u8fc7\u7684\u6570\u662f\u7b2c\u51e0\u5c0f\n\tcin>>n>>k;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>a[i];\n\t\tto[a[i]]=1;//a[i]\u51fa\u73b0\u8fc7\uff0c\u653e\u8fdb\u6876\u91cc\n\t}\n\tfor(int i=1;i<=30005;i++){\n\t\tif(to[i]==1)++t;//\u53ea\u8981\u8fd9\u4e2a\u6570\u662f\u6709\u503c\u7684\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u5c31\u662f\u7b2ct\u5c0f\u6574\u6570\n\t\tif(t==k){//\u5982\u679ct==k\uff0c\u5c31\u4ee3\u8868\u8fd9\u4e2a\u6570\u662f\u7b2ck\u5c0f\uff0c\u76f4\u63a5\u8f93\u51fai\uff0c\u5c31\u53ef\u7ed3\u675f\u7a0b\u5e8f\n\t\t\tcout<<i;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout<<\"NO RESULT\";\n\treturn 0;\n}\n```",
        "postTime": 1575171189,
        "uid": 151647,
        "name": "sycqwq",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "**\u6211\u504f\u4e0d\u7528sort**\n\nTreap\u597d\u9898\u554a\n\n\u770b\u5230\u53ea\u6709\u4e00\u4e2a\u4eba\u5199Treap\uff0c\u800c\u4e14\u5199\u7684\u4e0d\u6e05\u695a\uff0c\u90a3\u6211\u5c31\u6765\u8be6\u7ec6\u5730\u5199\u4e00\u4e0b\uff0c\u65b9\u4fbf\u65b0\u4eba\u5b66\u4e60\n\n---\n\n\u7b2c(-1)\u90e8\u5206\uff1a\u524d\u7f6e\u77e5\u8bc6\n\n\u4e8c\u53c9\u67e5\u627e\u6811\uff1a\u6ee1\u8db3\u5de6\u5b50\u6811\u7684\u6570\u636e\u90fd\u6bd4\u6839\u8282\u70b9\u5c0f\uff0c\u53f3\u5b50\u6811\u7684\u6570\u636e\u90fd\u6bd4\u6839\u8282\u70b9\u5927\u7684\u4e8c\u53c9\u6811\n\n\u5806\uff1a\u6ee1\u8db3\u5b50\u6811\u4e2d\u7684\u6570\u636e\u5747\u6bd4\u6839\u8282\u70b9\u5927\u7684\u6811\uff0c\u6216\u662f\u6ee1\u8db3\u5b50\u6811\u4e2d\u7684\u6570\u636e\u5747\u6bd4\u6839\u8282\u70b9\u5c0f\u7684\u6811\n\n----\n\n\u7b2c\u96f6\u90e8\u5206\uff1aTreap\u7b80\u4ecb & \u7a0b\u5e8f\u5f00\u5934\n\nTreap=Tree+Heap\uff0c\u53c8\u79f0\u201c\u6811\u5806\u201d\u3002\n\n\u8fd9\u662f\u56e0\u4e3aTreap\u7ef4\u62a4\u7684\u6570\u636e\u6ee1\u8db3\u4e8c\u53c9\u67e5\u627e\u6811\u7684\u6027\u8d28\uff0c\u800c\u968f\u673a\u6743\u503c\u6ee1\u8db3\u5806\u7684\u6027\u8d28\u3002\n\n\n```\n#include <bits/stdc++.h> // \u4e07\u80fd\u5934\u6587\u4ef6\n\nusing namespace std;\n```\n\n---\n\n\u7b2c\u4e00\u90e8\u5206\uff1a\u5b9a\u4e49Treap\n\n\u4ee3\u7801\u4e2d\u7684root\u4ee3\u8868\u5e73\u8861\u6811\u7684\u6811\u6839\uff0ccnt\u662f\u5b58Treap\u7684\u65f6\u5019\u7528\u3002\n\n\u7ed3\u6784\u4f53treap\u5b58\u50a8\u7684\u662f\u4e00\u4e2a\u8282\u70b9\u3002\u7ed3\u6784\u4f53\u4e2d\u7684cnt\u8868\u793a\u67d0\u4e2a\u6570\u5b57\u7684\u51fa\u73b0\u4e2a\u6570\uff0csize\u8868\u793a\u4ee5\u8fd9\u4e2a\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u7684\u5927\u5c0f\uff0cval\u5b58\u7684\u662f\u5f53\u524d\u6570\u503c\uff0crnd\u662f\u968f\u673a\u6743\u503c\u3002son\u5b58\u5de6\u53f3\u5b69\u5b50\uff0c\u4e0b\u6807\u4e3a0\u65f6\u4e3a\u5de6\u513f\u5b50\uff0c\u4e3a1\u65f6\u662f\u53f3\u513f\u5b50\u3002\n\n```\nint cnt, root;\n\nstruct treap {\n    int cnt, size, val, rnd, son[2];\n}t[10010];\n```\n\n---\n\n\u7b2c\u4e8c\u90e8\u5206\uff1a\u7ef4\u62a4\u5b50\u6811\u5927\u5c0f\n\n\u53ef\u4ee5\u6a21\u4eff\u7ebf\u6bb5\u6811\u7684\u64cd\u4f5c\uff08\u5982\u679c\u4f60\u4e0d\u77e5\u9053\u7ebf\u6bb5\u6811\u662f\u4ec0\u4e48\u4e5f\u6ca1\u5173\u7cfb\uff09\u3002\u4e00\u4e2a\u4ee5x\u4e3a\u6839\u7684\u4e8c\u53c9\u6811\u7684\u5927\u5c0f\uff0c\u5e94\u8be5\u7b49\u4e8e\u4ee5\u5b83\u5de6\u513f\u5b50\u4e3a\u6839\u7684\u5b50\u6811\u5927\u5c0f+\u53f3\u513f\u5b50\u4e3a\u6839\u7684\u5b50\u6811\u5927\u5c0f+1\u3002\u4e3a\u4ec0\u4e48\u8981+1\u5462\uff1f\u56e0\u4e3a\u8fd8\u6709x\u8fd9\u4e2a\u8282\u70b9\u561b\uff0c\u4e5f\u8981\u7b97\u4e0a\u53bb\u3002\n\n\u4f46\u5728Treap\u91cc\uff0c+1\u7684\u5730\u65b9\u5e94\u8be5\u6539\u4e3a+t[x].size\u3002\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n\u8fd9\u662f\u56e0\u4e3aTreap\u628a\u503c\u76f8\u540c\u7684\u6570\u636e\u5408\u5e76\u6210\u4e86\u4e00\u4e2a\uff0ct[x].size\u8bb0\u5f55\u4e86\u8fd9\u4e2a\u6570\u636e\u7684\u51fa\u73b0\u6b21\u6570\u3002\n\nx\u4e3a\u5b50\u6811\u7684\u6839\u8282\u70b9\u3002\u4ee5\u540e\u7684\u4ee3\u7801\u4e2dx\u90fd\u662f\u8fd9\u4e2a\u610f\u601d\uff0c\u4e0b\u9762\u5c06\u4e0d\u518d\u8d58\u8ff0\u3002\n\n```\nvoid upd(int x) {\n    t[x].size = t[t[x].son[0]].size + t[t[x].son[1]].size + t[x].cnt;\n}\n\n```\n\n----\n\n\u7b2c\u4e09\u90e8\u5206\uff1a\u65cb\u8f6c\n\n\u65cb\u8f6c\u8fd9\u4e2a\u6bd4\u8f83\u96be\u7406\u89e3\n\n\u65cb\u8f6c\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u5c31\u662f\u5f53Treap\u4e0d\u80fd\u540c\u65f6\u6ee1\u8db3\u4e8c\u53c9\u67e5\u627e\u6811\u548c\u5806\u7684\u6027\u8d28\u65f6\uff0c\u6211\u4eec\u505a\u4e00\u6b21\u65cb\u8f6c\uff0c\u8ba9Treap\u7684\u7ed3\u6784\u6539\u53d8\uff0c\u4f46\u5b58\u50a8\u7684\u6570\u636e\u4f9d\u7136\u6ee1\u8db3\u4e8c\u53c9\u67e5\u627e\u6811\u548c\u5806\u7684\u6027\u8d28\u3002\n\n\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u624b\u52a8\u63a8\u4e00\u4e0b\uff0c\u5927\u5bb6\u5e94\u8be5\u90fd\u80fd\u7406\u89e3\u5427\uff08\n\n\u4ee3\u7801\u4e2dd=0\u65f6\u5de6\u65cb\uff0cd=1\u65f6\u53f3\u65cb\u3002\n\n```\nvoid rotate(int &x, int d) {\n    int tmp = t[x].son[d];\n    t[x].son[d] = t[tmp].son[d ^ 1];\n    t[tmp].son[d ^ 1] = x;\n    upd(x); upd(tmp); x = tmp;\n}\n```\n\n----\n\n\u7b2c\u56db\u90e8\u5206\uff1a\u65b0\u5efa\u8282\u70b9\n\n\u8fd9\u65f6\u5019`cnt`\u5c31\u6709\u7528\u5904\u4e86\u5462~\n\n\u770b\u51fd\u6570\u5185\u7b2c\u4e00\u884c\uff1acnt++\uff0c\u65b0\u5efa\u51fa\u4e00\u4e2a\u7a7a\u8282\u70b9\n\n\u7b2c\u4e8c\u884c\u7684\u64cd\u4f5c\u662f\u7ed9\u8fd9\u4e2a\u65b0\u5efa\u8282\u70b9\u5b83\u9700\u8981\u7ef4\u62a4\u7684\u6570\u636e\n\n\u7b2c\u4e09\u884c\u662f\u7ed9\u8fd9\u4e2a\u65b0\u5efa\u8282\u70b9\u968f\u673a\u6743\u503c\n\n\u7b2c\u56db\u884c\u7684\u64cd\u4f5c\u610f\u601d\u662f\u7ef4\u62a4\u7684\u8fd9\u4e2a\u6570\u636e\u76ee\u524d\u53ea\u51fa\u73b0\u4e86\u4e00\u6b21\n\n\u7b2c\u4e94\u884c\u662f\u56e0\u4e3a\u8fd9\u4e2a\u65b0\u5efa\u8282\u70b9\u6ca1\u6709\u5de6\u53f3\u5b50\u6811\uff0c\u6240\u4ee5\u5927\u5c0f\u8d4b\u503c\u4e3a1\n\n\u8fd4\u56de\u503c\u53ef\u4ee5\u8ba9\u6211\u4eec\u77e5\u9053\u8fd9\u4e2a\u65b0\u5efa\u8282\u70b9\u5728t\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\n\n```\nint newnode(int val) {\n    cnt++;\n    t[cnt].val = val;\n    t[cnt].rnd = rand();\n    t[cnt].cnt = 1;\n    t[cnt].size = 1;\n    return cnt;\n}\n```\n---\n\n\u7b2c\u4e94\u90e8\u5206\uff1a\u5efa\u6811\n\n\u5148\u5efa\u4e00\u4e2a\u6839\u8282\u70b9\uff0c\u7ef4\u62a4\u6570\u636e-INF\uff08\u8fd9\u91ccINF\u53d6\u4e860x7fffffff\uff0c\u76f8\u5f53\u4e8e\u5341\u8fdb\u5236\u76842147483647\uff0c\u662fint\u6700\u5927\u80fd\u5b58\u50a8\u7684\u503c\uff09\n\n\u518d\u5efa\u4e00\u4e2a\u8282\u70b9\uff0c\u7ef4\u62a4\u6570\u636eINF\u3002INF\u663e\u7136\u6bd4-INF\u5927\uff0c\u6240\u4ee5\u653e\u5728\u6839\u8282\u70b9\u7684\u53f3\u513f\u5b50\u5904\u3002\n\n\u6700\u540e\u662f\u5efa\u6811\u7684\u6807\u51c6\u64cd\u4f5c\uff1a\u66f4\u65b0\u6811\u5927\u5c0f\n\n\u8fd9\u91cc\u7ef4\u62a4\u7684-INF\u548cINF\u90fd\u662f\u865a\u62df\u8282\u70b9\uff0c\u4e0d\u662f\u6211\u4eec\u771f\u6b63\u8981\u7ef4\u62a4\u7684\uff0c\u4e3a\u7684\u662f\u5176\u4ed6Treap\u64cd\u4f5c\u66f4\u52a0\u65b9\u4fbf\uff08\u4f3c\u4e4e\u4e5f\u6ca1\u65b9\u4fbf\u5230\u54ea\u513f\u53bb\uff09\n\n```\nvoid build() {\n    root = newnode(-0x7fffffff); \n    t[root].son[1] = newnode(0x7fffffff);\n    upd(root);\n}\n```\n\n---\n\n\u7b2c\u516d\u90e8\u5206\uff1a\u63d2\u5165\u4e00\u4e2a\u6570\u636e\n\n\u6211\u4eec\u53ef\u4ee5\u62ff\u7740\u8fd9\u4e2a\u6570\u636e\u4ece\u6839\u8282\u70b9\u5f80\u53f6\u5b50\u8dd1\u3002\u7531\u4e8e\u662f\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u6240\u4ee5\u4e0d\u7528\u904d\u5386\u6574\u4e2a\u6811\uff0c\u540c\u65f6\u4e5f\u4e0d\u80fd\u968f\u4fbf\u627e\u4e00\u4e2a\u5730\u65b9\u5c31\u63d2\u4e0a\u4e86\u3002\n\n\u6211\u4eec\u5728\u5f80\u53f6\u5b50\u8dd1\u7684\u65f6\u5019\uff0c\u628a\u9014\u4e2d\u7ecf\u8fc7\u7684\u8282\u70b9\u7684\u5927\u5c0f\u90fd\u52a0\u4e0a1\uff0c\u56e0\u4e3a\u65b0\u589e\u4e86\u4e00\u4e2a\u5143\u7d20\u3002\n\n\u5982\u679c\u6211\u4eec\u5728\u5f80\u53f6\u5b50\u8dd1\u7684\u4e2d\u9014\u9047\u5230\u4e86\u4e0e\u8fd9\u4e2a\u6570\u636e\u76f8\u7b49\u7684\u8282\u70b9\u7684\u65f6\u5019\uff0c\u6211\u4eec\u76f4\u63a5\u628a\u8fd9\u4e2a\u6570\u636e\u7684\u51fa\u73b0\u6b21\u6570\uff1a\u8282\u70b9\u7684cnt\u503c\u52a0\u4e00\u3002\n\n\u5982\u679c\u6211\u4eec\u7684\u6570\u636e\u8dd1\u5230\u4e86\u53f6\u5b50\u4e0a\u9762\uff0c\u90a3\u5c31\u2026\u2026\u53f6\u4e0a\u53f6\uff08\u6ed1\u7a3d\uff09\u3002\u5f53\u7136\uff0c\u7ecf\u8fc7\u7684\u90a3\u4e2a\u53f6\u5b50\u7ed3\u70b9\u5c31\u53d8\u6210\u4e86\u975e\u53f6\u5b50\u8282\u70b9\u3002\u5f53\u6211\u4eec\u8fd9\u662f\u540e\u8981\u65b0\u5efa\u8282\u70b9\u7684\u65f6\u5019\uff0c\u5c31\u8981\u8fdb\u884c`newnode`\u64cd\u4f5c\u65b0\u5efa\u8282\u70b9\u3001\u8fdb\u884c`rotate`\u64cd\u4f5c\u7ef4\u62a4\u2026\u2026\u603b\u4e4b\u6a21\u62df\u5373\u53ef\u3002\n\n```\nvoid insert(int &x, int val) {\n    if(!x) {\n        x = newnode(val);\n        return ;\n    }\n    t[x].size++;\n    if(t[x].val == val)t[x].cnt++;\n    else {\n        int d = t[x].val < val;\n        insert(t[x].son[d], val);\n        if(t[x].rnd > t[t[x].son[d]].rnd) rotate(x, d);\n    }\n}\n```\n\n----\n\n\u7b2c\u4e03\u90e8\u5206\uff1a\u6c42\u7b2ck\u5c0f\n\n\u6c42\u7b2ck\u5c0f\u5f88\u597d\u8bf4\u5427\n\n\u5982\u679ck\u5c0f\u4e8e\u6216\u7b49\u4e8e\u5de6\u5b50\u6811\u5927\u5c0f\uff0c\u7b54\u6848\u662f\u5de6\u5b50\u6811\u4e2d\u7684\u7b2ck\u5c0f\n\n\u5426\u5219\uff0c\u5982\u679ck\u5c0f\u4e8e\u6216\u7b49\u4e8e\u5de6\u5b50\u6811\u5927\u5c0f+\u6839\u8282\u70b9\u6570\u636e\u51fa\u73b0\u6b21\u6570\uff0c\u5219\u7b54\u6848\u4e3a\u6839\u8282\u70b9\u6570\u636e\n\n\u5426\u5219\uff0c\u7b54\u6848\u4e3a\u53f3\u5b50\u6811\u4e2d\u7684\u7b2c(k-\u6839\u8282\u70b9\u6570\u636e\u51fa\u73b0\u6b21\u6570-\u5de6\u5b50\u6811\u5927\u5c0f)\u5c0f\n\n\u5176\u4e2d\u8fd8\u6709\u4e2a\u7ec6\u8282\uff0c\u56e0\u4e3a\u6211\u4eec\u4e4b\u524d\u7684\u5efa\u6811\u64cd\u4f5c\u5efa\u7684\u662f\u4e24\u4e2a\u865a\u62df\u8282\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u67e5\u8be2\u7684\u65f6\u5019k\u8981+1\uff0c\u56e0\u4e3a\u7b2c1\u5c0f\u88ab-INF\u5360\u6389\u4e86\n\n\u9012\u5f52\u5373\u53ef\u3002\n\n```\nint kth(int x, int rnk) {\n    if(!x) return 0x7fffffff;\n    if(rnk <= t[t[x].son[0]].size) {\n        return kth(t[x].son[0], rnk);\n    } else {\n        if(rnk <= t[t[x].son[0]].size + t[x].cnt) {\n            return t[x].val;\n        } else {\n            return kth(t[x].son[1], rnk - t[x].cnt - t[t[x].son[0]].size);\n        }\n    }\n}\n```\n----\n\n\u7b2c\u516b\u90e8\u5206\uff1a\u4e3b\u7a0b\u5e8f\u7684\u5f00\u7aef\u4ee5\u53ca\u521d\u59cb\u5316\n\nTreap\u7684\u90e8\u5206\u57fa\u672c\u8bf4\u5b8c\u4e86\uff0c\u73b0\u5728\u6765\u770b\u4e3b\u7a0b\u5e8f\u5427\u3002\n\n\u5148\u5b9a\u4e49\u4e00\u4e2aa\u6570\u7ec4\u5e76\u6e05\u96f6\uff08\u540e\u9762\u4f1a\u8bb2\u4e3a\u4ec0\u4e48\uff09\uff0c\u5b9a\u4e49m\u5e76\u521d\u59cb\u5316\u4e3a0\uff08\u540e\u9762\u4f1a\u8bb2\uff09\n\n\u5b9a\u4e49n,k\u548c\u9898\u9762\u610f\u4e49\u76f8\u540c\u3002\n\n\u8fd8\u6709\u968f\u673a\u6570\u521d\u59cb\u5316\uff0c\u641e\u968f\u673a\u6743\u503c\u7528\u7684\u3002\n\n```\nint main() {\n    int n, k, m = 0, a[30010];\n    memset(a, 0, sizeof(a));\n    cin >> n >> k;\n    build();\n    srand(time(NULL));\n```\n---\n\n\u7b2c\u4e5d\u90e8\u5206\uff1a\u6620\u5c04\n\n\u6211\u4e4b\u524d\u8bf4\u8fc7\u4e0d\u7528sort\uff0c\u4e0d\u7528unique\uff0c\u4e8e\u662f\u7528\u4e86\u628a\u6570\u503c\u6620\u5c04\u5230\u6570\u7ec4\u91cc\u7684\u65b9\u6cd5\u3002a\u6570\u7ec4\u5c31\u662f\u505a\u8fd9\u4e2a\u7528\u7684\u3002\n\n\u5f53\u6211\u4eec\u9047\u5230\u4e00\u4e2a\u6570\u636edata\uff0c\u5c31\u628aa[data]++\uff0c\u8868\u793adata\u8fd9\u4e2a\u6570\u51fa\u73b0\u4e86\u4e00\u6b21\u3002\u8fd9\u91cc\u6ca1\u6709\u5b9a\u4e49data[10010]\uff0c\u7701\u4e0b\u4e86\u4e00\u4e2a\u6570\u7ec4\u3002\n\n\u6570\u636e\u7684\u53d6\u503c\u8303\u56f4\u4e3a0~30000\uff0c\u6211\u4eec\u66b4\u529b\u8dd1\u4e00\u8fb9\uff0c\u5982\u679c\u8fd9\u4e2a\u6570\u51fa\u73b0\u4e86\uff0cm++\uff0c\u5728\u5e73\u8861\u6811\u91cc\u63d2\u5165\u8282\u70b9\u3002\n\n\u5927\u5bb6\u5e94\u8be5\u90fd\u660e\u767d\u4e86\uff0c\u6211\u4eec\u7684m\u5b58\u50a8\u7684\u662f\u4e0d\u540c\u7684\u6b63\u6574\u6570\u7684\u6570\u91cf\u3002\n\n\u5982\u679cm<k\uff0c\u56e0\u4e3a\u76f8\u540c\u7684\u6570\u53ea\u8ba1\u7b97\u4e00\u6b21\uff0c\u5c31\u6ca1\u6709\u7b2ck\u5927\uff0c\u8f93\u51fa\"NO RESULT\"\uff1b\u5426\u5219\uff0c\u76f4\u63a5\u8f93\u51fa\u7b2ck\u5927\u3002\n\n```\n    for(int i = 1; i <= n; i++) {\n        int data;\n        cin >> data;\n        a[data]++;\n    }\n    for(int i = 1; i <= 30000; i++) {\n        if(a[i]) {\n            m++;\n            insert(root, i);\n        }\n    }\n    if(m < k) cout << \"NO RESULT\" << endl;\n    else cout << kth(root, k + 1) << endl;\n    return 0;\n}\n```\n\n\u8dd1\u7684\u5176\u5b9e\u633a\u5feb\uff08[34ms, 948kb](https://www.luogu.org/recordnew/show/16231305)\uff09\n\n\u5f53\u7136\uff0c\u8fd9\u9053\u9898\u8fd8\u4e0d\u662fTreap\u80fd\u505a\u7684\u6240\u6709\u4e8b\u60c5\u3002Treap\u8fd8\u53ef\u4ee5\u67e5\u8be2\u4e00\u4e2a\u6570\u7684\u6392\u540d\u3001\u5220\u9664\u4e00\u4e2a\u6570\u3001\u67e5\u8be2\u4e00\u4e2a\u6570\u7684\u524d\u9a71\u540e\u7ee7\u2026\u2026\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u505a\u4e00\u4e0b[\u3010\u6a21\u677f\u3011\u666e\u901a\u5e73\u8861\u6811](https://www.luogu.org/problemnew/show/P3369)\n\n\u8fd9\u4e2a\u9898\u89e3\u5c31\u7ed3\u675f\u4e86\u5462~",
        "postTime": 1549978517,
        "uid": 108185,
        "name": "Acanthe",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "\u849f\u84bb\u6765\u53d1\u9898\u89e3\u4e86\u3002\u3002\u3002  \n\u7b80\u5355\u7684\u770b\u4e86\u4e00\u4e0b\u4f3c\u4e4e\u6ca1\u6709\u548c\u6211\u4e00\u6a21\u4e00\u6837\u7684~~(\u5e9f\u8bdd)~~  \n\u5176\u5b9e\u5927\u5bb6\u90fd\u77e5\u9053\uff0c\u8fd9\u9053\u9898\u6700\u91cd\u8981\u7684\u662f\u53bb\u91cd\u3002  \n\n\u6211\u7684\u53bb\u91cd\u65b9\u6cd5:  \n\u5728\u6392\u5e8f\u65f6\uff0c\u5982\u679c$a[j]==a[j+1]$\u90a3\u4e48\u5c06$a[j+1]$\u6807\u4e3a-1\u3002  \n\u5176\u5b9e\u8fd9\u4e2a-1\u662f\u6700\u5c0f\u503c\uff0c-INF\u6216INF\u90fd\u53ef\u4ee5\u3002  \n\u7136\u540e\u91cd\u65b0\u904d\u5386\uff0c\u5982\u679c$a[i]$\u4e3a-1\uff0c\u90a3\u4e48$top$++\n\n~~\u4e3b\u8981\u662f\u56e0\u4e3a\u524d\u9762\u7684\u5927\u4f6c\u4eec\u7684\u65b9\u6cd5\u6211\u90fd\u4e0d\u4f1a~~\n\n\u4e0a\u4ee3\u7801:\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint main() {\n\tint n,k,a[10010],top;\n\tcin>>n>>k;\n\tfor(int i=0;i<n;i++){\n\t\tcin>>a[i];\n\t}\n\tfor(int i=0;i<n;i++){\n\t\tfor(int j=0;j<n;j++){\n\t\t\tif(a[j]>a[j+1]){\n\t\t\t\tswap(a[j],a[j+1]);\n\t\t\t}\n\t\t\tif(a[j]==a[j+1]){\n\t\t\t\ta[j+1]=-1;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=0;i<=n;i++){\n\t\tif(a[i]==-1){\n\t\t\ttop++;\n\t\t}\n\t}\n\tcout<<a[top+k];\t\n    //\u9632\u6284\u88ad^.^\n\treturn 0;\n}\n```\n\u7136\u800c\u6211\u7528\u4e0a\u9762\u7684\u4ee3\u7801\u4ea4\u4e86\u597d\u591a\u6b21\u90fd\u662f70\u5206\uff0c\u6211\u4ee5\u4e3a\u662f\u6211\u7684\u7b97\u6cd5\u51fa\u9519\u4e86\uff0c\u7136\u540e\u53bb\u770b\u9898\u89e3\uff0c\u53d1\u73b0\u4ed6\u4eec\u90fd\u6709\u4e00\u4e2a`cout<<\"NO RESULT\"`\u4e8e\u662f\u56de\u53bb\u770b\u9898\u76ee\uff0c\u53d1\u73b0\u4e86:\n>\u7b2ckk\u4e2a\u6700\u5c0f\u6574\u6570\u7684\u503c\uff1b\u82e5\u65e0\u89e3\uff0c\u5219\u8f93\u51fa\u201cNO RESULT\u201d\u3002\n\nemm...  \n\u4e8e\u662f\u6539\u8fdb\u4ee3\u7801\uff0cAC\u4ee3\u7801\u5e94\u8be5\u52a0\u4e0a:\n```cpp\nif(k<n-top){\n\t\tcout<<a[top+k];\t\n\t}else{\n\t\tcout<<\"NO RESULT\";\n\t}\n```\nEND\uff1b",
        "postTime": 1540005053,
        "uid": 117489,
        "name": "HAO233",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "#\u5fc3\u8840\u6765\u6f6e\u7528\u4e86\u4e8c\u5206\u7b54\u6848\n\n\u4f5c\u4e3a\u4e00\u9053\u5165\u95e8\u96be\u5ea6\u9898\uff0c\u8fd9\u9053\u9898\u5b8c\u5168\u53ef\u4ee5\u7528\u5404\u79cd\u6392\u5e8f+\u53bb\u91cdAC\uff08\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4e0a\u6876\u6392\u5e8f\uff09\u3002\u4f46\u662f\u4fd7\u8bdd\u8bf4\u5f97\u597d\uff0c\u5165\u95e8\u9898\u4e50\u8da3\u591a\u3010\u6ed1\u7a3d\u3011\uff0c\u800c\u4e14\u8fd9\u9053\u9898\u662f\u8981\u627e\u7b2ck\u5c0f\u7684\u6570\uff0c\u5728\u4e8c\u5206\u7b54\u6848\u7684\u8303\u7574\u91cc\uff0c\u4e8e\u662f\u7b14\u8005\u5728\u5bf9\u8f93\u5165\u6570\u636e\u53bb\u91cd\u540e\uff0c\u76f4\u63a5\u4e0a\u4e8c\u5206\u7b54\u6848\uff0c\u8be6\u60c5\u8bf7\u89c1\u4ee3\u7801\u3002\n\n\u4ee3\u7801\u5982\u4e0b   (\u0e51\u2022\u0300\u3142\u2022\u0301)\u0648\u2727\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdlib>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\n\nint a[10003];  //\u4ea4\u6362\u6570\u7ec4\nbool b[30007] = {0};  //\u5224\u91cd\u6570\u7ec4\nint i, j, m, k, l;\n\nvoid change(int &a, int &b){int c = a; a = b; b = c;}  //\u76f8\u5f53\u4e8eSTL\u4e2d\u7684swap()\nvoid Change(){change(a[i], a[j]); change(i, j);}  //\u4ea4\u6362\u6307\u9488\u4e0e\u6570\u636e\nvoid erfen(int start, int end)\n{\n    i = start;\n    j = end;\n    while(i != j)  //\u5f53\u6307\u9488\u672a\u91cd\u5408\u65f6\n      {\n          if(i < j)  //\u5982i\u6307\u9488\u5728j\u6307\u9488\u5de6\n            {\n                  if(a[i] > a[j])\n                    Change();\n                  else\n                    j--;  //j\u6307\u9488\u5de6\u79fb\n          }\n        else  //\u5982i\u6307\u9488\u5728j\u6307\u9488\u53f3\uff08\u6307\u9488\u5df2\u4e92\u6362\uff09\n          {\n              if(a[i] < a[j])\n                Change();\n              else\n                j++;  //j\u6307\u9488\u53f3\u79fb\n          }\n      }\n    if(i < k) erfen(i + 1, end);  //\u53d6\u53f3\u8fb9\u6570\u7ec4\n    else if(i == k)  //\u82e5\u5df2\u627e\u5230\u7b2ck\u5c0f\u6570\n      {\n          cout << a[i];  //\u8f93\u51fa\u7b54\u6848\n      }\n      else  erfen(start, i - 1);  //\u53d6\u5de6\u8fb9\u6570\u7ec4\n}\n\nint main()\n{\n    cin >> m >> k;\n    for(int i = 1; i <= m; i++)\n      {\n          scanf(\"%d\", &a[i]);\n          if(b[a[i]] == 1) {i--; m--;}  //\u53bb\u91cd\n          else b[a[i]] = 1;\n      }\n    if(m < k)  //\u82e5\u53bb\u91cd\u540e\u6570\u7ec4\u5185\u6570\u636e\u4e2a\u6570\u5c0f\u4e8ek\uff0c\u5219\u4e0d\u7b26\u5408\u9898\u610f\n      {\n          cout << \"NO RESULT\";\n          return 0;\n      }\n    erfen(1, m);  //\u4e8c\u5206\n    return 0;\n}\n```",
        "postTime": 1507864327,
        "uid": 62410,
        "name": "Mashiro_ylb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "\u8c8c\u4f3c\u9898\u89e3\u91cc\u8fd8\u6ca1\u6709\u7528\u7ebf\u6bb5\u6811\u505a\u7684\uff1f\u7ebf\u6bb5\u6811\u53ef\u662f\u795e\u5668\u554a\uff08\u96fe\n\n\u90a3\u4e48\u5c31\u6765\u4e00\u53d1\u7ebf\u6bb5\u6811\u5427\uff01\n\n**\u4e00\u3001\u5efa\u6811\uff1a** \u5bf9\u4e8e\u6570\u503c\u8303\u56f4\u5efa\u6811\u3002\u6811\u4e2d\u8986\u76d6\u533a\u95f4[ l , r ]\u7684\u8282\u70b9\uff0c\u5176\u503c\u8868\u793a\u8303\u56f4\u5728[ l , r ]\u5185\u7684\u6570\u6709\u51e0\u4e2a\u3002\n\uff08\u5982\u679c\u6570\u636e\u5f88\u5927\uff0c\u53ef\u4ee5\u79bb\u6563\u5316\u4e00\u4e0b\uff0c\u4e0d\u8fc7\u672c\u9898\u6570\u636e\u8303\u56f4\u5f88\u5c0f\uff0c\u56e0\u6b64\u76f4\u63a5\u5efa\u7acb\u548c\u6570\u636e\u8303\u56f4\u5927\u5c0f\u4e00\u6837\u7684\u7ebf\u6bb5\u6811\u5373\u53ef\uff09\n\n**\u4e8c\u3001\u67e5\u8be2\u7b2ck\u5c0f\u5143\u7d20\uff1a** \u5148\u770b\u5f53\u524d\u8282\u70b9\u7684\u5de6\u513f\u5b50\u7684\u503c\u3002\u5982\u679c\u5de6\u513f\u5b50\u7684\u503c\u5927\u4e8e\u7b49\u4e8ek\uff08\u5373**\u503c\u5728\u5de6\u513f\u5b50\u7684\u8303\u56f4\u5185\u7684\u6570\u6709\u5927\u4e8e\u7b49\u4e8ek\u4e2a**\uff09\uff0c\u5219\u7b2ck\u5c0f\u7684\u6570\u4e00\u5b9a\u5728\u5de6\u513f\u5b50\u7684\u8303\u56f4\u5185\uff0c\u9012\u5f52\u5904\u7406\u5de6\u513f\u5b50\u3002\n\n\u5982\u679c\u5de6\u513f\u5b50\u5c0f\u4e8e\u7b49\u4e8ek\u5462\uff1f\u4e00\u6837\u7684\u9053\u7406\uff0c\u9012\u5f52\u5904\u7406\u53f3\u513f\u5b50\uff0c\u4e0d\u8fc7\u8981\u6ce8\u610f\uff0c\u6b64\u65f6\u7684\u5e94\u5728\u53f3\u513f\u5b50\u4e2d\u627e\u7684\u4e0d\u518d\u662f\u7b2ck\u5c0f\u7684\u5143\u7d20\uff0c\u800c\u662f\u7b2c**( k - \u5de6\u513f\u5b50\u7684\u503c\uff09**\u5c0f\u7684\u5143\u7d20\uff0c\u5e94\u8be5\u4e0d\u96be\u7406\u89e3\u5427\uff1f\n\n\u8be6\u60c5\u770b\u4ee3\u7801\u6ce8\u91ca\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing namespace std; \nint n, k, a, t[40008], b[10008], maxx, cnt;\n//cnt\u7edf\u8ba1\u603b\u5171\u6709\u51e0\u4e2a\u6570\uff0c\u7528\u6765\u5224\u65ad\u65e0\u89e3\n//t\uff1a\u7ebf\u6bb5\u6811\n//b: \u8f93\u5165\u65f6\u5224\u91cd\u7528\uff0c\u4e5f\u5728\u7ebf\u6bb5\u6811\u7684\u64cd\u4f5c\u4e2d\u7528\u4e8e\u8868\u793a\u67d0\u4e2a\u6570\u51fa\u6ca1\u51fa\u73b0\n\nvoid build_tree(int p, int l, int r){ //\u5efa\u6811 \u5f53\u524d\u5efa\u5230\u8282\u70b9p\uff0c\u5bf9\u5e94\u8303\u56f4l r\n\tif(l==r){ //\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\n\t\tt[p] = b[l]; //\u5982\u679cl\u6ca1\u6709\u51fa\u73b0\u5728\u539f\u5e8f\u5217\u4e2d\uff0ct[p] = 0\u4e5f\u4e0d\u5f71\u54cd\n\t\treturn;\n\t} \n\tint mid = (l+r)>>1; //\u7ebf\u6bb5\u6811\u5e38\u89c4\u64cd\u4f5c\n\tbuild_tree(p<<1, l, mid);\n\tbuild_tree(p<<1|1, mid+1, r);\n\tt[p] = t[p<<1] + t[p<<1|1];\n}\n\nint query(int p, int l, int r, int k){ //\u5904\u7406\u8be2\u95ee \u5728p\u8282\u70b9\u5bf9\u5e94\u7684l r\u533a\u95f4\u5185\u627e\u7b2ck\u5c0f\n\tif(l==r) return l;\n\tint mid = (l+r)>>1;\n\tif(t[p<<1] >= k) //\u5982\u679c\u5de6\u513f\u5b50\u5143\u7d20\u4e2a\u6570\u5927\u4e8e\u7b49\u4e8ek\n\t\tquery(p<<1, l, mid, k);\n\telse\n\t\tquery(p<<1|1, mid+1, r, k-t[p<<1]);\n}\n\nint main(){\n\tcin>>n>>k;\n\tfor(int i=1 ; i<=n ; i++){\n    \tscanf(\"%d\",&a[i]);\n    \tif(!b[a[i]]){ //\u7edf\u8ba1+\u53bb\u91cd\n    \t\tb[a[i]] = 1;\n    \t\tcnt++;\n\t\t}\n    \tmaxx = max(maxx, a[i]); //\u8bb0\u5f55\u6700\u5927\u7684\u6570\uff0c\u7ebf\u6bb5\u6811\u7684\u5927\u5c0f\u53ea\u9700\u8981\u5305\u542b\u6700\u5927\u7684\u6570\u5c31\u884c\n\t}\n\tif(k<=0 || k>cnt){ //\u8be2\u95ee\u7684\u7b2ck\u5927\u4e0d\u5b58\u5728\n\t\tcout<<\"NO RESULT\"<<endl;\n\t\treturn 0;\n\t}\n\tbuild_tree(1, 1, maxx);\n\tcout<<query(1, 1, maxx, k)<<endl;\n\treturn 0;\n}\n```\n\u849f\u84bb\u7b2c\u4e00\u6b21\u8ba4\u771f\u5199\u9898\u89e3Orz",
        "postTime": 1534496867,
        "uid": 58197,
        "name": "BuXiangJuanLe",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "~~~~**\u8fd9\u9898\u849f\u84bb\u8fd8\u662f\u505a\u51fa\u6765\u4e86\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7~~~~\uff08dalao\u52ff\u55b7\uff09~~\n\n\u8fd9\u9053\u9898\u7684\u601d\u8def\u5c31\u662f\u5148\u5229\u7528\u6570\u7ec4\u8ba1\u6570\u53bb\u91cd\uff0c\u7136\u540e\u6392\u5e8f\uff0c\u8f93\u51fa\u7b2ck\u5c0f\u6574\u6570\u6216NO RESULT**\n\n\u8bf7\u770b\u7a0b\u5e8f\uff0c\u672c\u849f\u84bb\u5728\u7a0b\u5e8f\u4e2d\u5df2\u6807\u6ce8\u60f3\u6cd5\uff08dalao\u52ff\u55b7\uff09\n\n         \n```cpp\n#include<iostream>\n#include<algorithm>//\u849f\u84bb\u6587\u4ef6\u5934\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7 \nusing namespace std;\nint n,k,i,a,ma,gs; \nint zs[1000000],dn[1000000];//\u4e8b\u5b9e\u8bc1\u660e\uff0c\u53d8\u91cf\u548c\u6570\u7ec4\u5343\u4e07\u4e0d\u8981\u4e00\u8d77\u5b9a\u4e49\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7 \nint main()\n{\n    ma=-1; \n    cin>>n>>k;//\u8f93\u5165\u6709\u51e0\u4e2a\u6570\u548c\u7b2c\u51e0\u5c0f\u7684\u6570 \n    for(i=1; i<=n; i++) //\u8f93\u5165\u6570\u636e \n    {\n        cin>>a;//\u540c\u4e0a \n        if(a>ma) ma=a;//\u7531\u4e8e\u9898\u76ee\u8bf4\u76f8\u540c\u5927\u5c0f\u7684\u6574\u6570\u53ea\u8ba1\u7b97\u4e00\u6b21\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u53bb\u91cd \n        zs[a]++;//\u5927\u5bb6\u662f\u5426\u505a\u8fc7\u201c\u660e\u660e\u7684\u968f\u673a\u6570\u201d\uff0c\u90a3\u9053\u9898\u4e5f\u662f\u8981\u53bb\u91cd\u3002\u53ef\u8fd9\u9053\u9898\u4e0d\u4e00\u6837\uff0c\u5b83\u8fd8\u8981\u628a\u53bb\u91cd\u5b8c\u7684\u6570\u5217\u50a8\u5b58\u8d77\u6765\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6570\u7ec4\u8ba1\u6570\u7684\u7684\u65b9\u6cd5\u3002\u8fd9\u91cc\uff0c\u6211\u4eec\u4e0b\u4e2a\u5faa\u73af\u518d\u89e3\u91ca\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7(\u624b\u52a8\u6ed1\u7a3d)  }\n    for(i=1; i<=ma; i++)//\u5f53\u5f53\u5f53\u5f53\uff0c\u7b2c\u4e8c\u4e2a\u5faa\u73af\u6765\u4e86\uff01\uff01\uff01 \n    {\n        if(zs[i]>0) //\u524d\u9762\u6211\u4eec\u5df2\u7ecf\u505a\u597d\u4e86\u6570\u7ec4\u8ba1\u6570\uff0c\u51fa\u73b0\u8fc7\u7684\u6570\u5b57\u6570\u91cf\u90fd\u5df2\u50a8\u5b58\u3002\u6240\u4ee5\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u53ea\u8981\u6211\u4eec\u5224\u65ad\u4e00\u4e2a\u4e0b\u6807\u4e2d\u7684\u6570\u5b57\u4e0d\u4e3a0\uff0c\u90a3\u6211\u4eec\u5c31\u89c6\u4e3a\u5b83\u8fd9\u4e2a\u6570\u51fa\u73b0\u8fc7\u3002\u90a3\u4e48\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u8bf7\u770b\u4e0b\u53e5\n        {\n            gs++;//\u6211\u4eec\u540e\u9762\u8fd8\u8981\u6392\u5e8f\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u4fdd\u8bc1\u5b83\u7684\u65b0\u6570\u7ec4\u7684\u50a8\u5b58\u662f\u8fde\u7eed\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5b58\u4e00\u4e2a\u624d\u66f4\u65b0\u4e00\u6b21\u4e0b\u6807\uff08\u5373\u4e3a+1\uff09 \n            dn[gs]=i;//\u7136\u540e\u5c06\u90a3\u4e2a\u6570\u50a8\u5b58 \n        }\n    }\n    sort(dn+1,dn+1+gs);    //c++\u5feb\u6392\uff0c\u8981\u8bb0\u4f4f\u4f60\u6392\u5e8f\u7684\u6570\u7ec4\u5b58\u7684\u6570\u5b57\u4e2a\u6570\u662f\u524d\u9762\u66f4\u65b0\u4e0b\u6807\u7684\u53d8\u91cf\uff08\u5c31\u662fgs\uff09 \n    if(dn[k]==0) cout<<\"NO RESULT\";//\u56e0\u4e3a\u4e0d\u4f1a\u6709\u4e00\u4e2a\u6570\u4e3a0\uff0c\u6240\u4ee5\u53ea\u8981\u7b2ck\u4e0b\u6807\u91cc\u7684\u6570\u5b57\u4e3a0\uff0c\u5c31\u89c6\u4e3a\u5b83\u65e0\u89e3 \n    else\n    cout<<dn[k];//\u5426\u5219\u5c31\u8f93\u51fa\u7b2ck\u5c0f\u7684\u6570 \n    return 0;//\u6c42\u901a\u8fc7\uff01\uff01\uff01\u8c22\u8c22\uff01\uff01\uff01 \n}\n```",
        "postTime": 1514350927,
        "uid": 13675,
        "name": "AK_Zero",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "\u6765\u4e00\u53d1\u5212\u5206\u6811\u7684\u9898\u89e3\n\n**\u5212\u5206\u6811\u662f\u4e00\u79cd\u57fa\u4e8e\u7ebf\u6bb5\u6811\u7684\u6570\u636e\u7ed3\u6784\u3002\u4e3b\u8981\u7528\u4e8e\u5feb\u901f\u6c42\u51fa(\u5728log(n)\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\uff09\u5e8f\u5217\u533a\u95f4\u7684\u7b2ck\u5927\u503c\u3002**\n\n\n------------\n\n\u5efa\u6811\u7684\u8fc7\u7a0b\u6bd4\u8f83\u7b80\u5355\uff0c\u5bf9\u4e8e\u533a\u95f4[l,r]\uff0c\n\n\u9996\u5148\u901a\u8fc7\u5bf9\u539f\u6570\u7ec4\u7684\u6392\u5e8f\u627e\u5230\u8fd9\u4e2a\u533a\u95f4\u7684\u4e2d\u4f4d\u6570a[mid]\uff0c\n\n\u5c0f\u4e8ea[mid]\u7684\u6570\u5212\u5165\u4ed6\u7684\u5de6\u5b50\u6811[l,mid-1]\uff0c\n\u5927\u4e8e\u5b83\u7684\u5212\u5165\u53f3\u5b50\u6811[mid,r]\u3002\n\n\u540c\u65f6\uff0c\u5bf9\u4e8e\u7b2ci\u4e2a\u6570\uff0c\u8bb0\u5f55\u5728[l,i]\u533a\u95f4\u5185\u6709\u591a\u5c11\u6570\u88ab\u5212\u5165\u5de6\u5b50\u6811\u3002\n\n\u6700\u540e\uff0c\u5bf9\u5b83\u7684\u5de6\u5b50\u6811\u533a\u95f4[l,mid-1]\u548c\u53f3\u5b50\u6811\u533a\u95f4[mid,r]\u9012\u5f52\u7684\u7ee7\u7eed\u5efa\u6811\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\n\n\n------------\n\n\u67e5\u627e\u7684\u8fc7\u7a0b\u4e2d\u4e3b\u8981\u95ee\u9898\u5c31\u662f\u786e\u5b9a\u5c06\u8981\u67e5\u627e\u7684\u533a\u95f4\u3002\u8fd9\u4e2a\u95ee\u9898\u6709\u4e9b**\u9ebb\u70e6**\u3002QwQ\n\n\u5728\u5927\u533a\u95f4[st,ed]\u4e2d\u627e\u5c0f\u533a\u95f4[s,e]\u4e2d\u7684\u7b2ck\u5143\u7d20:\n\n\u6211\u4eec\u7684\u60f3\u6cd5\u662f\uff0c\u5148\u5224\u65ad[s,e]\u4e2d\u7b2ck\u5143\u7d20\u5728[st,ed]\u7684\u54ea\u4e2a\u5b50\u6811\u4e2d\uff0c\u7136\u540e\u627e\u51fa\u5bf9\u5e94\u7684\u5c0f\u533a\u95f4\u548ck\uff0c\u9012\u5f52\u7684\u8fdb\u884c\u67e5\u627e\uff0c\u76f4\u5230\u5c0f\u533a\u95f4\u7684s=e\u4e3a\u6b62\u3002\n\n\u90a3\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5462\uff1f\u8fd9\u65f6\u5019\u524d\u9762\u8bb0\u5f55\u7684\u8fdb\u5165\u5de6\u5b50\u6811\u7684\u5143\u7d20\u4e2a\u6570\u5c31\u6d3e\u4e0a\u7528\u573a\u4e86\u3002\n\n\u901a\u8fc7\u4e4b\u524d\u7684\u8bb0\u5f55\u53ef\u4ee5\u77e5\u9053\uff0c\u5728\u533a\u95f4[st,s-1]\u4e2d\u6709el[h,s-1]\u8fdb\u5165\u5de6\u5b50\u6811\uff0c\u8bb0\u5b83\u4e3al\u3002\u540c\u7406\u533a\u95f4[st,e]\u4e2d\u6709el[h,e]\u4e2a\u6570\u8fdb\u53bb\u5de6\u5b50\u6811\uff0c\u8bb0\u5b83\u4e3ar\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u77e5\u9053\u533a\u95f4\u5c0f\u533a\u95f4[s,e]\u4e2d\u6709(r-l)\u4e2a\u6570\u8fdb\u5165\u5de6\u5b50\u6811\u3002\u90a3\u4e48\u5982\u679c(r-l)>=k\uff0c\u90a3\u4e48\u5c31\u5728\u5de6\u5b50\u6811\u4e2d\u7ee7\u7eed\u67e5\u627e\uff0c\u5426\u5219\u5c31\u5728\u53f3\u5b50\u6811\u4e2d\u7ee7\u7eed\u67e5\u627e\u3002\n\n\u4e8e\u662f\u9012\u5f52\u7ee7\u7eed\u67e5\u627e\u76f4\u5230s=e\u5373\u53ef\u3002\n\n\n------------\n\n\u4e0a\u4ee3\u7801\uff1a\n\n\n```cpp\n#include <iostream>\nusing namespace std;\nint a[10001],n=0;\nint sorted[10001],tree[15][10001],to_left[15][10001];\nbool t[30001];\nint read(){\n\tint num,k;\n\tcin>>num>>k;\n\tfor(int i=1,j;i<=num;i++){\n\t\tcin>>j;\n\t\tif(t[j]==0) a[++n]=j,t[j]=1;\n\t}\n\treturn k;\n}\n\nvoid build(int dep,int l,int r){\n\tif(l==r) return;\n\t\n\tint mid=(l+r)>>1;\n\tint same=mid-l+1;\n\tfor(int i=l;i<=r;i++) if(tree[dep][i]<sorted[mid]) same--;\n\tint l1=l,l2=mid+1;\n\tfor(int i=l;i<=r;i++){\n\t\tif(tree[dep][i]<sorted[mid]) tree[dep+1][l1++]=tree[dep][i]; else\n\t\tif(tree[dep][i]==sorted[mid]&&same>0)tree[dep+1][l1++]=tree[dep][i],same--;\n\t\telse tree[dep+1][l2++]=tree[dep][i];\n\t\tto_left[dep][i]=to_left[dep][l-1]+l1-l;\n\t}\n\tbuild(dep+1,l,mid); build(dep+1,mid+1,r);\n}\n\nint qu(int dep,int l,int r,int x,int y,int k){\n\tif(l==r) return tree[dep][l];\n\t\n\tint mid=(l+r)>>1;\n\tint cnt=to_left[dep][y]-to_left[dep][x-1];\n\tif(cnt>=k){\n\t\tint newx=l+to_left[dep][x-1]-to_left[dep][l-1];\n\t\tint newy=newx+cnt-1;\n\t\treturn qu(dep+1,l,mid,newx,newy,k);\n\t}\n\telse{\n\t\tint newy=y+to_left[dep][r]-to_left[dep][y];\n\t\tint newx=newy-(y-x-cnt);\n\t\treturn qu(dep+1,mid+1,r,newx,newy,k-cnt);\n\t}\n}\n\nvoid solve(int k){\n\tif(k<=0||k>n){ cout<<\"NO RESULT\"; return; } \n\tfor(int i=1,j=0;i<=30000;i++)\tif(t[i]) sorted[++j]=i;\n\tfor(int i=1;i<=n;i++) tree[0][i]=a[i];\n\tbuild(0,1,n);\n\tcout<<qu(0,1,n,1,n,k);\n\treturn;\n}\nint main(){\n\tint k=read();\n\tsolve(k);\n\treturn 0;\n}\n```",
        "postTime": 1525857526,
        "uid": 62464,
        "name": "P500",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "##\u8fd9\u9053\u9898\u7684\u8981\u70b9\u5c31\u662f\n\n\n##\u53bb\u91cd\u53bb\u91cd\u53bb\u91cd\n\n\n##\u6240\u4ee5\u5f88\u591a\u4eba\u90fd\u7528\u5230\u4e86\u6876\u6392\n\n\n##\u4f46\u4f60\u4eec\u96be\u9053\u6ca1\u6709\u60f3\u5230\u6211\u4eec\u5927C++\u7684STL\u5e93\u4e86\u5417\uff1f\n\n\n##STL\u5927\u6cd5\u597d\uff01\uff01\uff01\n\n\n##\u4e2a\u4eba\u8ba4\u4e3aset\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u5f88\u4f4e\u7684\uff0c\u6240\u4ee5\u7528\u4e86\n\n\n```cpp\n//P1138\n#include<iostream>\n#include<set>//\u96c6\u5408\uff0c\u5c31\u662f\u6570\u5b66\u91cc\u90a3\u4e2a\u96c6\u5408\uff0c\u672c\u8eab\u5c31\u80fd\u81ea\u52a8\u53bb\u91cd\u548c\u5347\u5e8f\u6392\u5e8f\nusing namespace std;\nset<int> num;\nint main()\n{\n    ios::sync_with_stdio(false);\n    int n,k;\n    cin>>n>>k;\n    for(int i=1;i<=n;i++)\n    {\n        int temp=0;\n        cin>>temp;\n        num.insert(temp);//insert\u51fd\u6570\u628a\u8f93\u5165\u7684\u5185\u5bb9\u6253\u5165set\u4e2d\n    }\n    if(num.size()<k)\n    {\n        cout<<\"NO RESULT\";//\u5982\u679c\u96c6\u5408\u5185\u5143\u7d20\u6570\u91cf\u5c0f\u4e8ek\uff0c\u8bf4\u660e\u7ed3\u679c\u4e0d\u5b58\u5728\n    }\n    else\n    {\n        int s=0;\n        for(set<int>::iterator it=num.begin();it!=num.end();it++)//it\u662f\u8fed\u4ee3\u5668\uff0c\u4ece\u5c0f\u5230\u5927\u904d\u5386\n        {\n            if(*it)s++;//\u5982\u679c\u5728\u96c6\u5408\u5185\u8be5\u5143\u7d20\u5b58\u5728\uff0c\u8ba1\u6570\u5668++\n            if(s==k)//\u5f53s=t\uff0c\u8fd9\u5c31\u662f\u7b2ck\u5c0f\u7684\u6570\uff0c\u8f93\u51fa\n            {\n                cout<<*it;//\u8fed\u4ee3\u5668\u548c\u6307\u9488\u662f\u76f8\u4f3c\u7684\uff0c\u8981\u7528*\u8c03\u7528\n                break;//\u627e\u5230\u4e86\u5c31\u4e0d\u7528\u7ee7\u7eed\u4e86\uff0c\u9000\u51fa\u5faa\u73af\n            }\n        }\n    }\n    return 0;//\u7ed3\u675f\n}\n```\n~~\u5e94\u8be5\u6ca1\u95ee\u9898~~\n",
        "postTime": 1509712239,
        "uid": 56787,
        "name": "EAT_NH4HCO3",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "\u770b\u4e86\u4e0b\u9898\u89e3\n\n\u597d\u591adalao\u7528\u4e86\u4e8c\u5206\u3001\u6811 \u8fd8\u6709\u6876\u6392\u5e8f\n\n\u611f\u89c9\u81ea\u5df1\u7684\u4ee3\u7801\u6bd4\u8f83\u7b80\u5355\uff0c\u7406\u89e3\u4e5f\u65b9\u4fbf\uff0c\u5c31\u53d1\u4e00\u4e2a\u9898\u89e3\n\n\n\u4e3b\u8981\u65b9\u6cd5\u5c31\u662f\uff1a\n\n1\u3001\u5148\u5feb\u6392\u4e00\u904d\n\n2\u3001while\u5faa\u73af\u4e2d\u7528\u4e00\u4e2aint\u7c7b\u578b\u6765\u8bb0\u5f55\u4e00\u5171\u627e\u5230\u4e86\u591a\u5c11\u4e2a\u4e0d\u540c\u7684\u6570\n\n3\u3001\u5f53\u627e\u5230\u7b2ck\u5927\u7684\u65f6\u5019\u5c31\u8f93\u51fa\u5e76\u7ed3\u675f\u7a0b\u5e8f\n\n4\u3001\u5982\u679c\u8df3\u51fa\u4e86\u5faa\u73af\u8bf4\u660e\u627e\u4e0d\u5230\uff0c\u5c31\u8f93\u51faNO\n\n\n\u4ee5\u4e0b\u662f\u849f\u84bb\u7684\u4ee3\u7801\uff1a\n\n\n\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>      //sort\u5fc5\u9700\u8c03\u7528\u7684\u5934\u6587\u4ef6 \nusing namespace std;\nint a[10010],n,k;   //\u6570\u636e\u5b9a\u4e49 \nint main()\n{\n    int i=1,num=0;     //i\u662f\u540e\u9762\u5faa\u73af\u8bb0\u5f55\u4e0b\u6807\u7528\u7684\uff0cnum\u8868\u793a\u627e\u5230\u4e86\u7b2cnum\u5c0f\u7684\u6570 \n    cin>>n>>k;\n    for(int i=1;i<=n;i++) cin>>a[i];\n    sort(a+1,a+n+1);          //\u8bfb\u5165\u540e\u5feb\u6392 \n    while(i<=n)               //\u4e0b\u6807\u6ca1\u6709\u8d85\u8fc7\uff0c\u5c31\u5faa\u73af \n    {\n        if(a[i]!=a[i-1]) num++;   //\u5982\u679c\u7b2ci\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u6570\u4e0d\u7b49\u4e8ei-1\u4e0a\u7684\u5c31\u627e\u5230\u4e86\u7b2cnum++\u5927\u7684\u6570\n                                  //\uff08\u56e0\u4e3a\u5df2\u7ecf\u5feb\u6392\u4e86\uff0c\u53ea\u8981\u4e0d\u7b49\u4e8e\u5c31\u4e00\u5b9a\u662f\u5927\u4e8e\uff09 \n        if(num==k)                //\u627e\u5230\u4e86\u5c31\u8f93\u51fa \n        {\n            cout<<a[i];\n            return 0;             //\u4e0d\u52a0\u6b64\u53e5\u540e\u679c\u5f88\u4e25\u91cd\uff08\u7a0b\u5e8f\u4e0d\u4f1a\u7ed3\u675f\uff0c\u5728\u6700\u540e\u5c31\u4f1a\u5728\u8f93\u51fa\u4e00\u4e2aNO RESULT\uff09 \n        }\n        i++;\n    }\n    cout<<\"NO RESULT\";            //\u5982\u679c\u5faa\u73af\u5b8c\u8fd8\u6ca1\u6709\u627e\u5230\uff0c\u8bf4\u660e\u6ca1\u6709\uff0c\u8f93\u51faNO \n    return 0;\n}\n```",
        "postTime": 1509630583,
        "uid": 48542,
        "name": "MscWood",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "~~\u8d21\u732e\u5206\u6389\u4e86\u6765\u6c34\u9898\u89e3.jpg~~\n\n\u6211\u4eec\u77e5\u9053\uff0c\u6709\u4e00\u4e2a\u4e0e\u5feb\u6392\u76f8\u4f3c\u7684\u201c\u5feb\u901f\u6b21\u5e8f\u9009\u62e9\u201d\u7b97\u6cd5\u3002\n\n\u5927\u6982\u6d41\u7a0b\u5982\u4e0b\uff1a\n\n\u4ee5\u67d0\u4e2a\u6570\u4e3a\u4e2d\u95f4\u70b9\u5c06\u5e8f\u5217\u5206\u4e3a\u4e24\u534a\n\n\u68c0\u67e5\u4e2d\u95f4\u70b9\u7684\u6392\u540d\n\n\u82e5\u5927\u4e8ek\uff0c\u5bf9\u5de6\u534a\u533a\u95f4\u9012\u5f52\n\n\u5c0f\u4e8ek\uff0c\u5bf9\u53f3\u534a\u533a\u95f4\u9012\u5f52\n\n---\n\n\u5f88\u7b80\u5355\u5bf9\u4e0d\u5bf9\uff1f\n\n\u590d\u6742\u5ea6\u663e\u7136$O(n)$\uff0c\u6700\u574f$O(n^2)$\n\n\u5b9e\u73b0\u4e5f\u4e0d\u96be\uff0c\u8ddf\u5e73\u8861\u6811\u7684kth\u5dee\u4e0d\u591a\n\n---\n\n\u7136\u800cSTL\u5e2e\u4f60\u5199\u597d\u4e86\uff08\n\n`std::nth_element(first,nth,last)`\u51fd\u6570\uff0c\u5e2e\u4f60\u628a`[first,last)`\u4e2d\u7684\u5143\u7d20\u5206\u4e3a\u5c0f\u4e8e/\u5927\u4e8e\u7b49\u4e8enth\u7684\u4e24\u90e8\u5206\uff08\n\n\u7136\u540enth\u4f4d\u7f6e\u4e0a\u5c31\u662f\u6b63\u786e\u7b54\u6848\u4e86\uff08\n\n---\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n\nint n,k,tot,a[10005];\n\nbool vis[30005];\n\nint main()\n{\n    scanf(\"%d%d\",&n,&k);\n    while(n--)\n    {\n        int x;\n        scanf(\"%d\",&x);\n        if(!vis[x])\n        {\n            a[tot++]=x;\n            vis[x]=1;\n        }\n    }\n    if(k>tot)\n    {\n        puts(\"NO RESULT\");\n        return 0;\n    }\n    std::nth_element(a,a+k-1,a+tot);\n    printf(\"%d\",a[k-1]);\n}\n```\n\n\u6ce8\u610fSTL\u5de6\u95ed\u53f3\u5f00\uff0c\u6240\u4ee5\u6392\u540d\u4ece0\u5f00\u59cb\uff08",
        "postTime": 1572753879,
        "uid": 60489,
        "name": "\u5c0f\u83dc\u9e1f",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "# \u8001\u5b9e\u4eba\uff08\u849f\u84bb\uff09\u6765\u53d1\u9898\u89e3\u4e86\uff01\n## \u9898\u76ee\u63cf\u8ff0\uff1a\n\n\u73b0\u6709n\u4e2a\u6b63\u6574\u6570\uff0cn\u226410000\uff0c\u8981\u6c42\u51fan\u4e2a\u6b63\u6574\u6570\u4e2d\u7684\u7b2ck\u4e2a\u6700\u5c0f\u6574\u6570\uff08\u76f8\u540c\u5927\u5c0f\u7684\u6574\u6570\u53ea\u8ba1\u7b97\u4e00\u6b21\uff09\uff0ck\u22641000\uff0c\u6b63\u6574\u6570\u5747\u5c0f\u4e8e30000\u3002\n\n\u8f93\u5165\u683c\u5f0f\n\u7b2c\u4e00\u884c\u4e3an\u548ck; \u7b2c\u4e8c\u884c\u5f00\u59cb\u4e3an\u4e2a\u6b63\u6574\u6570\u7684\u503c\uff0c\u6574\u6570\u95f4\u7528\u7a7a\u683c\u9694\u5f00\u3002\n\n\u8f93\u51fa\u683c\u5f0f\n\u7b2ck\u4e2a\u6700\u5c0f\u6574\u6570\u7684\u503c\uff1b\u82e5\u65e0\u89e3\uff0c\u5219\u8f93\u51fa\u201cNO RESULT\u201d\u3002\n\n\u8f93\u5165\u8f93\u51fa\u6837\u4f8b\n\n\u8f93\u5165 #1 \n10 3 \n\n1 3 3 7 2 5 1 2 4 6\n\n\u8f93\u51fa #1\n\n3\n\n\u8bf4\u660e/\u63d0\u793a\nn\u226410000n\u226410000\n\n### \u8fd9\u9053\u9898\u5c31\u662f\u6709\u51e0\u70b9\u9700\u8981\u6ce8\u610f\u7684\uff1a\n\n1.\u53bb\u91cd\uff0c\u5c06\u6bcf\u4e2a\u91cd\u590d\u7684\u6570\u503c\u90fd\u5c06\u5b83\u8d4b\u503c\u6210\u8d85\u51fa\u9898\u76ee\u6570\u636e\u8303\u56f4\u7684\u6570\uff08>30000 \uff09\u3002\n\n2.\u6392\u5e8f\uff0c\u4f7f\u7528c++STL\u5e93\u4e2d\u7684sort\u3002\n\n3.\u5982\u679c\u8981\u6c42\u8f93\u51fa\u7684k\u5927\u4e8e\u53bb\u91cd\u540e\u5269\u4e0b\u7684\u6570\u7684\u6570\u91cf\u5219\u8f93\u51fa\u201cNO RESULT\u201d\n\n### \u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint main()\n{\n\tint n,m,ans;\n\tcin>>n>>m;ans=n;\n\tint a[10000];\n\tfor(int i=1;i<=n;i++)\n\tcin>>a[i];\n\tsort(a+1,a+n+1);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(a[i]==a[i+1])\n\t\t{\n\t\t\ta[i]=30010;\n\t\t\tans--;\n\t\t}\n\t}\n\tsort(a+1,a+n+1);\n\tif(m>ans)\n\t{\n\t\tcout<<\"NO RESULT\";\n\t\treturn 0;\n\t}\n\tcout<<a[m];\n}\n```\n",
        "postTime": 1568524100,
        "uid": 182432,
        "name": "Goashore",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "#### \u5f31\u5f31\u7684\u849f\u84bb\u6765\u53d1\u9898\u89e3\u4e86\n\n\u8fd9\u9898\u672c\u849f\u84bb\u4e4d\u4e00\u770b\u5c31\u5f88\u5bb9\u6613\u60f3\u5230sort\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u4e00\u904d\u627e\u7b2ck\u4e2a\u503c\u5c31\u884c\u4e86\n\n\u4f46\u8fd9\u91cc\u6709\u4e00\u4e2a\u975e\u5e38\u975e\u5e38\u5c0f\u7684\u5751\n\n\u662f\u7684 \u5c31\u662f\u53bb\u91cd\n\n\u6ce8\u610f\u4e00\u4e0b\u53bb\u91cd\u8fd9\u9898\u5c31\u8f7b\u677e\u8fc7\u53bb\u4e86\n\n### \u4e0b\u9762\u662f\u6b63\u5e38\u601d\u8def\u7684\u4ee3\u7801\n\n```\n#include <bits/stdc++.h>\n#define N 111111\nusing namespace std;\nint n,m,sum=0;\nint a[N];\nint b[N];\nint main()\n{\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)\n    {\n        cin>>a[i];\n    }\n    sort(a+1,a+n+1);\n    for(int i=1;i<=n;i++)\n    {\n        if(a[i]==a[i+1])\n            continue;\n        b[++sum]=a[i];\n    }\n    if(b[m]==0)\n    {\n        cout<<\"NO RESULT\";\n        return 0;\n    }\n    cout<<b[m];\n    return 0;\n}\n\n```\n\u4f46\u662f\u770b\u5230\u9898\u89e3\u91cc\u7684\u5404\u8def\u795e\u7287\u5f00\u53d1\u4e86\u4e0d\u5c11\u65b0\u5947\u505a\u6cd5\uff0c\u6240\u4ee5\u672c\u849f\u84bb\u5c31\u53c8\u5199\u4e86\u4e00\u4e2a\u5e73\u8861\u6811\n\n\u4e3a\u4ec0\u4e48\u4f1a\u60f3\u5230\u5e73\u8861\u6811\u5462~~\u5f53\u7136\u662f\u542c\u5176\u4ed6\u795e\u7287\u8bf4\u7684~~\uff0c\u56e0\u4e3a\u591a\u4e2a\u76f8\u540c\u7684\u503c\u5728\u6811\u4e2d\u53ea\u5360\u7528\u4e00\u4e2a\u8282\u70b9\uff0c\u5c31\u53ef\u4ee5\u7701\u7565\u53bb\u91cd\u7684\u64cd\u4f5c\u4e86qwq\n\n\u4e0b\u9762\u662f\u5e73\u8861\u6811\u7684\u4ee3\u7801\n\n### \u4ee3\u7801\u91cc\u6709\u6ce8\u91ca(\u7531\u4e8e\u6ca1\u6709\u538b\u884c\u5bfc\u81f4\u4ee3\u7801\u4e0d\u4ec5\u957f\u800c\u4e14\u4e11\uff09\n\n```\n#include<bits/stdc++.h>\n#define ll long long\n#define INF 1<<30 \n#define FOR(i,l,r) for(register int i=l;i<=r;i++)\n\nusing namespace std;\n\nconst int N=10001;\nint a[N],child[N][2],tot,fa[N],root,num[N],ct[N];\nint n,m,flag;\n//a[i]\u8868\u793ai\u8282\u70b9\u4e0a\u5b58\u7684\u6570\u5b57\n//child[i][0]\u4e3ai\u8282\u70b9\u7684\u5de6\u513f\u5b50\u5e8f\u53f7 child[i][1]\u4e3ai\u8282\u70b9\u7684\u53f3\u513f\u5b50\u5e8f\u53f7\n//tot\u8868\u793a\u6709\u591a\u5c11\u4e2a\u4e0d\u540c\u7684\u6570\u5b57\n//fa[i]\u8868\u793ai\u8282\u70b9\u7684\u7236\u8282\u70b9\n//root\u4e3a\u6839\u7684\u5e8f\u53f7\n//num[i]\u8868\u793ai\u51fa\u73b0\u7684\u6b21\u6570\n//ct[i]\u8868\u793a\u4ee5i\u4e3a\u6839\u6709\u591a\u5c11\u4e2a\u5b50\u8282\u70b9 \nint _search(int x,int w)\n{\n    if(a[x]==w)\n        return x;\n    while(a[x]!=w)\n    {\n        if(a[x]>w)\n        {\n            if(child[x][0])\n                x=child[x][0];\n            else break;\n        }\n        if(a[x]==w)\n            return x;\n        if(a[x]<w)\n        {\n            if(child[x][1])\n                x=child[x][1];\n            else break;\n        }\n    }\n    return x;\n}\nvoid _rotate(int x)\n{\n    int y=fa[x];\n    int z=fa[y];\n    if(child[z][0]==y)\n        child[z][0]=x;\n    else \n        child[z][1]=x;\n    fa[x]=z;\n    int w;\n    if(child[y][0]==x)\n        w=0;\n    else\n        w=1;\n    child[y][w]=child[x][w^1];\n    fa[child[x][w^1]]=y;\n    child[x][w^1]=y;\n    fa[y]=x;\n    ct[x]=ct[child[x][0]]+ct[child[x][1]]+num[x];\n    ct[y]=ct[child[y][0]]+ct[child[y][1]]+num[y];\n}\nvoid splay(int x)//splay\u4e0d\u591a\u8bf4 \n{\n    while(fa[x])\n    {\n        int y=fa[x];\n        int z=fa[y];\n        if(z==0)\n            _rotate(x);\n        else \n        {\n            if((child[z][0]==y)^(child[y][0]==x))\n                _rotate(x);\n            else \n                _rotate(y);\n            _rotate(x);\n        }\n    }\n    root=x;\n}\nint _quary(int x)//\u67e5\u8be2 \n{\n    int k=root;\n    while(!(x>=ct[child[k][0]]+1&&x<=ct[child[k][0]]+num[k])&&k)\n    {\n        if(x>=ct[child[k][0]]+num[k])\n        {\n            x-=ct[child[k][0]]+num[k];\n            k=child[k][1];\n        }\n        else \n            k=child[k][0];\n    }\n    return a[k];\n}\nvoid add(int x)//\u6dfb\u52a0\u6570\u5b57\u5230\u6811\u4e2d \n{\n    if(!tot)\n    {\n        tot=1;root=1;fa[1]=0;ct[1]=1;num[1]=1;a[1]=x;\n        return ;\n    }\n    int k=_search(root,x);\n    int node=0;\n    if(a[k]==x)\n        node=k;\n    else\n    {\n        ++tot;\n        a[tot]=x;\n        num[tot]=1;\n        ct[tot]=1;\n        fa[tot]=k;\n        if(x<a[k])\n            child[k][0]=tot;\n        else\n            child[k][1]=tot;\n    }\n    while(k)\n    {\n        ct[k]++;\n        k=fa[k];\n    }\n    if(node)\n        splay(node);\n        else\n            splay(tot);\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    FOR(i,1,n)\n    {\n        int l;\n        scanf(\"%d\",&l);//\u6bcf\u8f93\u5165\u4e00\u4e2a\u6570\u5c31\u628a\u5b83\u52a0\u5165\u5230\u6811\u4e2d\u53bb \n        add(l);\n    }\n    flag=_quary(m);//\u67e5\u8be2\u4ece\u5c0f\u5230\u5927\u6392\u540d\u4e3am\u7684\u6570\u5b57 \n    if(flag)\n        printf(\"%d\",flag);//\u5b58\u5728\u5c31\u8f93\u51fa \n    else\n        printf(\"NO RESULT\");//\u4e0d\u5b58\u5728\u5c31NO RESULT \n    return 0;\n}\n```\n### \u6700\u540e\u65e5\u5e38\u819c\u4e00\u4e0b[\u795e\u7287\u5927\u5927](https://www.luogu.org/space/show?uid=122988)\u4e86\n\n\u6c42\u7ba1\u7406\u5458\u901a\u8fc7\u8c22\u8c22qwq",
        "postTime": 1546660835,
        "uid": 123318,
        "name": "ViXpop",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "\u770b\u4e86\u770b\u5404\u4f4d\u5927\u795e\u7684\u4ee3\u7801\uff0c\u53d1\u73b0\u6709\u7528sort\u7684\uff0c\u6709\u7528\u6876\u6392\u7684\uff0c\u6240\u4ee5\u6211\u6765\u53d1\u4e00\u6ce2\u5806/\u4f18\u5148\u961f\u5217\u7684\u4ee3\u7801\u3002\n\n\u56e0\u4e3a\u53ea\u9700\u8981\u8be2\u95ee\u7b2ck\u5927\u7684\u6570\uff0c\u6240\u4ee5\u76f8\u5f53\u4e8e\u53ea\u9700\u8981\u6267\u884ck\u6b21top\u6216pop\u64cd\u4f5c\u3002\u65f6\u95f4\u590d\u6742\u5ea6O(K logN)\uff08top\u548cpop\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662fO(log N)\uff09\n\n\u6ce8\u610f\u5224\u91cd\uff01\uff01\uff01\n\n\u4ee3\u7801\uff1a\uff08\u672c\u4eba\u4eb2\u6d4b0ms AC\uff09\n\nSTL\u6a21\u677fpriority\\_queue\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\nusing namespace std;\npriority_queue<int,vector<int>,greater<int> >q;\nint n,k,a,ans=0;\nbool tf[30010];\nint main()\n{\n    scanf(\"%d%d\",&n,&k);\n    for(int i=0;i<n;i++){scanf(\"%d\",&a);if(!tf[a])q.push(a),ans++;tf[a]=true;}\n    if(ans<k){printf(\"NO RESULT\\n\");return 0;}\n    k--;while(k--)q.pop();\n    printf(\"%d\\n\",q.top());\n    return 0;\n}\n```\n\u5927\u6839\u5806\u6a21\u677f\uff08\u5b58\u50a8\u8d1f\u6570\uff09\uff1a\n\n```cpp\n#include<iostream>\nusing namespace std;\nint n,s[100005]={0},k,cur=1;\nbool tf[30010]={}; \nvoid ShiftDown(int s[],int i,int w)//\u5411\u4e0b\u8c03\u6574\n{\n    int p=i,j,t=s[p];\n    while(2*p<=w)\n    {\n       j=2*p;\n       if(j<w&&s[j]<s[j+1])j++;\n       if(t<s[j]){s[p]=s[j];p=j;}\n       else break;\n    }\n    s[p]=t;\n}\nvoid maxHeap(int s[],int w)//\u7ef4\u62a4\u4e00\u4e2a\u5927\u6839\u5806\n{\n    for(int i=w/2;i>0;i--)\n    ShiftDown(s,i,w);\n}\nvoid Hsort(int s[],int w)//\u5806\u6392\u5e8f\uff0c\u8f93\u51fa\u7b2ck\u5c0f\u7684\u6570\n{\n    maxHeap(s,w);\n    for(int i=w;i>w-k;i--)\n    {\n        s[1]=s[i];\n        ShiftDown(s,1,i-1);\n    }\n    cout<<-s[1]<<endl;\n}\nint main()\n{\n    cin>>n;cin>>k;int T=n; \n    while(T--) \n    {\n        cin>>s[cur];\n        if(tf[s[cur]])continue;\n        tf[s[cur]]=true;s[cur]=-s[cur];cur++; \n    }\n    if(cur<=k){printf(\"NO RESULT\\n\");return 0;} \n    Hsort(s,cur);\n    return 0;\n}\n```",
        "postTime": 1502629488,
        "uid": 43486,
        "name": "hsfzLZH1",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "\u5176\u5b9e\uff0c\u8fd9\u9898\u53ef\u4ee5\u5f88\u7b80\u5355\u3002\n\n\u9996\u5148\uff0c\u8bfb\u5165n\u548ck;\n\n\u7136\u540e\uff0c\u8bfb\u5165n\u4e2a\u6574\u6570;\n\n\u8bfb\u5165\u65f6\u53bb\u91cd\u3002\n\n\u53bb\u5b8c\u4e86\u5c31\u6392\u5e8f\u3002\n\n\u7136\u540e\u8f93\u51fa\u3002\n\nOK\uff01\uff01\uff01\uff01\uff01\uff01\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\u4e0a\u4ee3\u7801\uff1a\uff08c++\uff09\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n```cpp\n#include <bits/stdc++.h>//\u5305\u542b\u6240\u6709\u5934\u6587\u4ef6\u7684\u5934\u6587\u4ef6\nusing namespace std;\nint n,a[10005],i,k;//\u4e0d\u89e3\u91ca\nbool s[30005];//\u7528\u6765\u53bb\u91cd\u7684\u6876\nint main(void){\n    scanf (\"%d%d\",&n,&k);\n    for (;i<n;i++){\n        scanf (\"%d\",&a[i]);//\u8bfb\u5165\n        if (s[a[i]])n--,i--;//\u5982\u679c\u51fa\u73b0\u8fc7\u4e86\uff0c\u603b\u6570--\uff0ci--\uff08\u91cd\u8bfba[i]\uff09\n        else s[a[i]]=1;//\u4e0d\u7136\u6807\u8bb0\u4e00\u4e0b\n```\n}//\u8bfb\u5b8c\u4e86\u5c31\u53bb\u91cd\u5b8c\u4e86\n//\u8fd9\u5c31\u662f\u6211\u7684\u548c\u522b\u7684\u8c03\u89e3\u4e0d\u540c\u7684\u5730\u65b9\uff1a\u6211\u7528\u6876\u53bb\u91cd\u3002\n\n    sort (a,a+n);//\u6392\u5e8f\uff01\n\n    if (n<k||k<=0)printf (\"NO RESULT\");//\u5751\u4eba\u7684#3\u30015\u30018\n\n    else printf (\"%d\",a[k-1]);//\u56e0\u4e3a\u6211\u662f0\u4e0b\u6807\uff0c\u6240\u4ee5k\u8981-1\n\n}",
        "postTime": 1493726602,
        "uid": 39863,
        "name": "\u5f15\u9886\u5929\u4e0b",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "So  easy\u7684\u529e\u6cd5\uff01\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nint x=0,d,n,a[30002],k;bool f[30002]={false};//\u91cd\u590d\u7684\u6570\u65e0\u7528\uff0c\u8bfb\u5165\u7684\u65f6\u5019\u820d\u53bb\uff01\nint main()\n{\n     cin>>n>>k;\n    while(n>0)//\u4e0d\u662f>=0\n     {\n         scanf(\"%d\",&d);\n         if(!f[d])\n           {\n               x++;\n               a[x]=d;//\u7b26\u5408\u8981\u6c42\u7684\u8bfb\u5165\n               f[d]=true;//\u522b\u5fd8\u4e86\uff0c\u8bfb\u5165\u4e00\u4e2a\u5c31\u5b9a\u4e49\u4e00\u4e2a\u4e0d\u80fd\u7528\n           }\n        n--;   \n     }\n    sort(a+1,a+x+1);  //\u6392\u597d\u5e8f\uff0c\u76f4\u63a5\u8f93\u5165\u7b2ck\u4e2a\u5c31\u884c\n    if(x<k)cout<<\"NO RESULT\";\n      else cout<<a[k];\n    return 0;  \n}\n```",
        "postTime": 1445425250,
        "uid": 9724,
        "name": "\uc88c\ucd08",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "##   \u4e00\u79cd\u91c7\u7528sort\u7684\u5feb\u901f\u6392\u5e8f\u7684\u65b9\u6cd5\uff08\u5206\u6b65\u9aa4\u8bb2\u89e3\uff09\n   \u8fd9\u9053\u9898\u76ee\u9119\u4eba\u7684\u89e3\u6cd5\u4e3b\u8981\u6709\u4e24\u5927\u6b65\u9aa4\uff0c\u9996\u5148\u662f\u53bb\u91cd\uff0c\u63a5\u7740\u662f\u6392\u5e8f\u3002\n#### \u53bb\u91cd\n   \u9119\u4eba\u53bb\u91cd\u7684\u65b9\u6cd5\u662f\u901a\u8fc7**bool\u7c7b\u578b\u7684\u6570\u7ec4f**\u6765\u5b58\u50a8\u5728\u6570\u636e\u8303\u56f4\u5185\uff08\u5c0f\u4e8e30000\uff09\u6bcf\u4e00\u4e2a\u6570\u7684\u51fa\u73b0\u60c5\u51b5\u3002\u4f7f\u7528for\u5faa\u73af\uff0c\u6765\u5bf9\u8f93\u5165\u7684\u6bcf\u4e00\u4e2a\u6570\u636e\u8fdb\u884c\u5224\u65ad\u3002\u82e5\u8fd9\u4e2a\u6570\u5728\u8f93\u5165\u7684\u6570\u636e\u4e2d\u51fa\u73b0\u8fc7\uff0c\u5219f[\u8fd9\u4e2a\u6570]\u4e3atrue\uff0c\u5426\u5219\u4e3afalse\u3002\u7136\u540e\u5728\u8fd9\u4e2a\u6570\u6ca1\u6709\u51fa\u73b0\u8fc7\u7684\u60c5\u51b5\u4e0b\uff0c\u624d\u628a\u8fd9\u4e2a\u6570\u52a0\u5165\u65b0\u7684\u6570\u7ec4b\uff0c\u540c\u65f6\u7edf\u8ba1\u5904\u7406\u8fc7\u7684\u6570\u636e\u6570\u91cf\uff08num\uff09\uff0c\u5e76\u8c03\u6574f[\u8fd9\u4e2a\u6570]\u7684\u72b6\u6001\u4e3a\u51fa\u73b0\u8fc7\u3002\u5728\u5bf9\u4e8e\u65e7\u7684\u6570\u636e\u5168\u90e8\u5904\u7406\u8fc7\u540e\uff0c\u518d\u5bf9\u65b0\u7684\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\uff08\u8be6\u89c1\u4e0b\u4e00\u90e8\u5206\uff09\u3002\n#### \u6392\u5e8f\n   \u9119\u4eba\u91c7\u7528\u4e86**stl\u91cc\u9762\u7684sort**\u5feb\u901f\u6392\u5e8f\uff0csort\u51fd\u6570\u8fdb\u884c\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(NlogN)\uff0c\u6267\u884c\u6548\u7387\u6bd4\u8f83\u9ad8\uff0c\u9ed8\u8ba4\u4e3a\u964d\u5e8f\u3002\uff08\u672c\u7a0b\u5e8f\u6211\u4eec\u4f7f\u7528\u964d\u5e8f\u66f4\u52a0\u65b9\u4fbf\uff09\u3002sort\u51fd\u6570\u4f7f\u7528\u539f\u5219\u662f\u8981\u5de6\u95ed\u53f3\u5f00\u3002\u6700\u540e\u518d\u5224\u65ad\uff0c\u5982\u679c\u7b2ck\u5c0f\u7684\u6570\u5b58\u5728\uff0c\u90a3\u4e48\u5c31\u8f93\u51fa\u6392\u5e8f\u540e\u7684\u6570\u7ec4\u7684\u7b2ck\u4e2a\u5143\u7d20\uff0c\u5426\u5219\u5c31\u8f93\u51faNO RESULT\u3002\u5230\u8fd9\u91cc\uff0c\u8fd9\u9053\u9898\u5c31\u641e\u5b9a\u4e86\u3002\uff08\u7a0b\u5e8f\u5982\u4e0b\uff09\n\n  \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint a[10001],b[10001];\nbool f[30001];//\u5224\u65ad\u6570\u5b57\u662f\u5426\u51fa\u73b0\u8fc7\nint main() \n{\n\tint n,k,i,num=0;\n\tcin>>n>>k;\n\tfor(i=1;i<=n;i++)\n\t\tcin>>a[i];//\u8f93\u5165\u76f8\u5e94\u6570\u636e\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tif(f[a[i]]==false)//\u6b64\u6570\u636e\u672a\u51fa\u73b0\u8fc7\u7684\u60c5\u51b5\u4e0b\u6267\u884c\uff0c\u5426\u5219\u8df3\u8fc7\n\t\t{\n\t\t\tnum++;\n\t\t\tb[num]=a[i];\n\t\t\tf[a[i]]=true;//\u65b0\u7684\u6570\u636e\u603b\u6570\u52a01\uff0c\u5e76\u628a\u6b64\u6570\u636e\u52a0\u5165\u65b0\u6570\u7ec4\uff0c\u540c\u65f6\u628a\u60c5\u51b5\u6539\u4e3atrue\uff08\u5df2\u51fa\u73b0\uff09\n\t\t}\n\t}//\u53bb\u91cd\n\tsort(b+1,b+num+1);//\u5bf9\u65b0\u6570\u7ec4\u5feb\u901f\u6392\u5e8f\uff08\u5de6\u95ed\u53f3\u5f00\uff0c\u964d\u5e8f\uff09\n\tif(k<=num)//\u5224\u65ad\u5220\u9664\u4e4b\u540e\u65b0\u6570\u636e\u603b\u6570\u662f\u5426\u5c11\u4e8e\u539f\u5148\u8981\u6c42\u7684k\n\t\tcout<<b[k];\n\telse\n\t\tcout<<\"NO RESULT\";\n\treturn 0;\n}\n```\n",
        "postTime": 1570177963,
        "uid": 232262,
        "name": "Charlene_0",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "\u5f53\u770b\u5230\u5176\u4ed6\u5927\u4f6c\u4f7f\u7528\u6392\u5e8f\u53c8\u6216\u662f\u4ec0\u4e48\u6811\u554a\u7684\uff0c\u6211\u60f3\uff0c\u6211\u7684\u673a\u4f1a\u6765\u4e86\u3002\u6211\u611f\u89c9\u8fd9\u9053\u9898\u548c\u6392\u5e8f\u6ca1\u6709\u5173\u7cfb\u554a\uff0c\u5927\u6982\u610f\u601d\u5c31\u662f\u8bfb\u4e00\u4e2a\u6570\u8fdb\u6765\uff0c\u7528\u6570\u7ec4\u5c06\u8fd9\u4e2a\u6570\u6807\u4e3a\u5b58\u5728\uff0c\u53731\uff0c\u522b\u5fd8\u4e86\u521d\u59cb\u503c\u8bbe\u4e3a0\uff0c\u7136\u540e\u627e\u5230\u6700\u5927\u7684\u6570\uff0c\u7136\u540e\u76f4\u63a5\u4ece1\u5230max\uff0c\u53ea\u8981\u8fd9\u4e2a\u6570\u5b58\u5728\uff0c\u5c31\u8ba1\u6570\u52a0\u4e00\uff0c\u4e00\u76f4\u52a0\u5230k\uff0c\u8f93\u51fa\u8fd9\u4e2a\u6570\uff0c\u65f6\u95f4\u4e5f\u7edd\u5bf9\u591f\u7528\u3002\n\n#\u98ce\u4e91\u518d\u8d77\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3#\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#include<algorithm>\n#include<sstream>\nusing namespace std;\nint main()\n{\n    int n,k,g,s=0,max=0;\n    int a[10002]={0};\n    cin>>n>>k;\n    for(int i=1;i<=n;i++)\n    {\n    \tcin>>g;\n    \ta[g]=1;\n    \tif(g>max) max=g;\n\t}\n\tfor(int i=1;i<=max;i++)\n\t\tif(a[i]==1)\n\t\t{\n\t\t\ts++;\n\t\t\tif(s==k) \n\t\t\t{\n\t\t\t    cout<<i;\n\t\t\t    return 0;\n\t\t    }\n\t\t}\n\tcout<<\"NO RESULT\"; \n    return 0;\n}",
        "postTime": 1566123342,
        "uid": 29758,
        "name": "\u5317\u7eac30\u00b0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "### \u4e00\u9053\u201c\u663e\u800c\u6613\u89c1\u201d\u7684\u4e8c\u53c9\u6392\u5e8f\n##### \u5148\u6784\u9020\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u8981\u52a0\u5165\u7684\u6570\u5982\u679c\u6bd4\u5f53\u524d\u8282\u70b9\u5c0f\uff0c\u5c31\u5728\u5de6\u8fb9\uff0c\u5927\u5c31\u5728\u53f3\u8fb9\u3002\n```\n/*\nlike:\n             10\n            /  \\               \n           7   11 \n          / \\   \\\n         6   8   15\n                /            \n               13\n*/\n```\n\n##### \u56e0\u4e3a\u9898\u76ee\u6c42\u7b2ck\u5c0f\uff0c\u6240\u53ca\u52a0\u5165\u7684\u65f6\u5019\u4e00\u65e6\u9047\u5230\u4e00\u6837\u7684\u6570\u5c31\u7acb\u523breturn\n##### \u63d2\u5165\u4ee3\u7801\uff1a\n```cpp\n// insert\nvoid ins(int k){\n\tBT* a=new BT;\n\ta->val=k;\n\tBT* cur=this;\n\twhile(true){\n\t\tif(k<cur->val){\n\t\t\tif(cur->left==NULL){\n\t\t\t\tcur->left=a;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcur=cur->left;\n\t\t}else if(k>cur->val){\n\t\t\tif(cur->right==NULL){\n\t\t\t\tcur->right=a;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcur=cur->right;\n\t\t}else{\n\t\t\treturn ;\n\t\t}\n\t}\n\treturn ;\n}\n```\n##### \u5efa\u597d\u6811\u540e\u5f00\u4e00\u4e2a\u6808f\u6765\u5b58\u50a8\u6392\u5e8f\u597d\u7684\u6570\u3002top\u5c31\u53bb\u91cd\u540e\u5143\u7d20\u7684\u4e2a\u6570\u3002\u6808\u5e94\u8be5\u90fd\u4f1a\u5199\uff0c\u5c31\u76f4\u63a5\u4e0a\u4ee3\u7801\uff1a\n```cpp\nstruct st{\n    int a[10001];\n\tint top=0;\n\tvoid ins(int b){\n\t\t++top;\n\t\ta[top]=b;\n\t}\t\n\tvoid pop(){\n\t\t--top;\n\t}\n\tint numk(int k){ //\u7b2ck\u5c0f\u7684\u5143\u7d20\uff0ck>top\u5c31\u8fd4\u56de-1\n\t\tif(k>top){\n\t\t\treturn -1;\n\t\t}\n\t\treturn a[k];\n\t}\n};\n```\n##### \u7136\u540e\u5c31\u662f\u4e2d\u5e8f\u904d\u5386\u6a21\u677f\uff0c\u628aprintf\u6539\u6210f.ins\u5c31\u53ef\u4ee5\u4e86\u3002\uff08f\u4e3a\u7ad9\u540d\uff09\n```cpp\nvoid sort(){\n\tBT* cur=this;\n\tif(cur->left!=NULL){\n\t\tcur->left->sort();\n\t}\n\tf.ins(cur->val);\n\tif(cur->right!=NULL){\n\t\tcur->right->sort();\n\t}\n\treturn ;\n}\n```\n##### \u6700\u540e\u53ea\u9700\u8981\u8f93\u51fa\u6808\u4e2d\u7b2ck\u4e2a\u6570\uff0c\u552f\u4e00\u8981\u6ce8\u610f\u7684\u662f\u52a0\u4e2ak>top\u7684\u7279\u5224\u5373\u53ef\u3002\n\u5b8c\u6574\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct st{\n   int a[10001];\n\tint top=0;\n\tvoid ins(int b){\n\t\t++top;\n\t\ta[top]=b;\n\t}\n\tint numk(int k){\n\t\tif(k>top){\n\t\t\treturn -1;\n\t\t}\n\t\treturn a[k];\n\t}\n};\nst f;\nstruct BT{\n\tint  val;\n\tBT* left=NULL;\n\tBT* right=NULL;\n\t// insert\n\tvoid ins(int k){\n\t\tBT* a=new BT;\n\t\ta->val=k;\n\t\tBT* cur=this;\n\t\twhile(true){\n\t\t\tif(k<cur->val){\n\t\t\t\tif(cur->left==NULL){\n\t\t\t\t\tcur->left=a;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcur=cur->left;\n\t\t\t}else if(k>cur->val){\n\t\t\t\tif(cur->right==NULL){\n\t\t\t\t\tcur->right=a;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcur=cur->right;\n\t\t\t}else{\n\t\t\t\treturn ;\n\t\t\t}\n\t\t}\n\t\treturn ;\n\t}\n\t//print \u8c03\u8bd5\u7528\uff0c\u8bf7\u65e0\u89c6  \n\tvoid print(){\n\t\tprintf(\"%d \",this->val);\n\t\tif(this->left!=NULL){\n\t\t\tthis->left->print();\n\t\t}\n\t\tif(this->right!=NULL){\n\t\t\tthis->right->print();\n\t\t}\n\t\treturn ;\n\t}\n\t//sort\n\tvoid sort(){\n\t\tBT* cur=this;\n\t\tif(cur->left!=NULL){\n\t\t\tcur->left->sort();\n\t\t}\n\t\tf.ins(cur->val);\n\t\tif(cur->right!=NULL){\n\t\t\tcur->right->sort();\n\t\t}\n\t\treturn ;\n\t}\n};\nint main(){\n\tint n,k;\n\tscanf(\"%d%d\",&n,&k);\n\tBT* root=new BT;\n\tint d;\n\tscanf(\"%d\",&d);\n\troot->val=d;\n\tfor(int i=2;i<=n;i++){\n\t\tscanf(\"%d\",&d);\n\t\troot->ins(d);\n\t}\n\troot->sort();\n\tint m=f.numk(k);\n\tif(m==-1){\n\t\tcout<<\"NO RESULT\";\n\t\treturn 0;\n\t}\n   printf(\"%d\",m);\n\treturn 0;\n}\n```\n~~\u6c42\u6559dalao\uff0c\u4e3a\u4ec0\u4e48\u6b63\u5e38\u7684\u4ee3\u7801\u653e\u5230\u9898\u89e3\u4e2d\u5c31\u4f1a\u51fa\u73b0\u8bb8\u591a\u5947\u602a\u7684\u7a7a\u683c\u4f7f\u7801\u98ce\u6781\u5ea6\u6df7\u4e71\uff1f\uff1f~~",
        "postTime": 1551097540,
        "uid": 98096,
        "name": "Smallbasic",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "\u7167\u4f8b\u5148\u770b\u4e00\u4e0b\u9898\u76ee\u8bf4\u660e\uff1a\n![](https://cdn.luogu.com.cn/upload/pic/25740.png)\n\n\u5e9f\u8bdd\u4e00\u4f1a\u518d\u8bf4\uff0c\u5148\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>   //\u4e07\u80fd\u5934\u6587\u4ef6\nusing namespace std;\nint main()\n{\n    int n,k,i;\n    int a[10001];\n    for(i=0;i<=10001;i++)\n        a[i]=0;     //\u4fdd\u9669\u8d77\u89c1\u6700\u597d\u5f52\u96f6\n    cin>>n>>k;    //\u8f93\u5165\u7b2c\u4e00\u884c\u6570\u636e\n    for(i=0;i<n;i++)    //\u5faa\u73af\u8bfb\u5165\u6570\u636e\n        cin>>a[i];\n    sort(a,a+n);    //\u6392\u5e8f \n    int sum=unique(a,a+n)-a;   //unique\u662f\u4f2a\u53bb\u91cd\u51fd\u6570\uff0c\u4ed6\u4f1a\u5c06\u91cd\u590d\u7684\u6570\u5b57\u653e\u5728\u6570\u7ec4\u672b\u5c3e\n    if(k<sum)   //\u8f93\u51fa\u7b54\u6848\n        cout<<a[k-1]<<endl;   \n    else\n        cout<<\"NO RESULT\"<<endl;\n    return 0;\n}\n```\n\u8fd9\u91cc\u6211\u4eec\u6765\u8bb2\u89e3\u4e00\u4e0b\u5927\u62ec\u53f7\u7684\u7528\u6cd5\u548c\u53d6\u820d\u3002\n\n\u9996\u5148\u79d1\u666e\u4e00\u4e0b\u56f0\u6270\u65e0\u6570\u7a0b\u5e8f\u5458\u7684else\u865a\u60ac\u95ee\u9898\u3002\n\n\u4e0b\u9762\u5949\u4e0a\u5c0f\u660e\u540c\u5b66\u7684\u9519\u8bef\u793a\u8303\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    int a=1,b=2;\n    if(a>0)\n        if(a+b!=3)\n            cout<<\"TEST\"<<endl;   \n    else\n            cout<<\"test\"<<endl;\n    return 0;\n}\n```\n  \u6309\u7167\u6211\u4eec\u9605\u8bfb\u4ee3\u7801\u7684\u4e60\u60ef\uff0c\u4f1a\u5c06else\u548c\u7b2c\u4e00\u4e2aif\u914d\u5bf9\uff0c\u7406\u89e3\u6210\u8fd9\u6837:\n  \n  \u201c\u5982\u679c\u53d8\u91cfa\u5927\u4e8e0\uff0c\u90a3\u4e48\u5224\u65ad\u53d8\u91cfa\u52a0\u53d8\u91cfb\u662f\u5426\u4e0d\u7b49\u4e8e3\uff0c\u5982\u679c\u6210\u7acb\u5219\u8f93\u51faTEST\u3002\u5982\u679c\u53d8\u91cfa\u5c0f\u4e8e\u6216\u7b49\u4e8e0\u8f93\u51fatest\u3002\u201d\n\n\u7167\u8fd9\u4e48\u7406\u89e3\uff0c\u8fd9\u6bb5\u4ee3\u7801\u5e94\u8be5**\u6ca1\u6709\u8f93\u51fa**\u3002\n\n  \u4f46\u662fC++\u89e3\u91ca\u5668\uff08\u4f8b\u5982Dev-C++\u548cVisual c++\u4e4b\u7c7b\u7684\u8fd0\u884cC++\u4ee3\u7801\u7684\u5de5\u5177\uff09\u6709\u8fd9\u4e48\u4e00\u4e2a\u89c4\u5b9a\uff1a\n  \n _**  else\u59cb\u7ec8\u4e0e\u540c\u4e00\u5bf9\u62ec\u53f7\u5185\u6700\u8fd1\u7684\u672a\u5339\u914d\u7684if\u7ed3\u5408\u3002** _ \n  \n\u6240\u4ee5C++\u89e3\u91ca\u5668\u81ea\u8ba4\u800c\u7136\u7684\u4f1a\u5c06\u8fd9\u6bb5\u4ee3\u7801\u7406\u89e3\u6210\u8fd9\u6837\uff1a\n\n\u201c\u5982\u679c\u53d8\u91cfa\u5927\u4e8e0\uff0c\u90a3\u4e48\u5224\u65ad\u53d8\u91cfa\u52a0\u53d8\u91cfb\u662f\u5426\u4e0d\u7b49\u4e8e3\uff0c\u5982\u679c\u6210\u7acb\u5219\u8f93\u51faTEST\uff0c\u5426\u5219\u8f93\u51fatest\u3002\u201d\n\n\u7167\u7f16\u8bd1\u5668\u8fd9\u4e48\u7406\u89e3\uff0c\u8fd9\u6bb5\u4ee3\u7801\u5e94\u8be5\u8f93\u51faTEST\uff0c\u548c\u6211\u4eec\u7684\u60f3\u6cd5\u80cc\u9053\u800c\u9a70\u3002\n\n\u90a3\u4e48\u600e\u6837\u9884\u9632else\u865a\u60ac\u95ee\u9898\u5462\uff1f\u5f88\u7b80\u5355\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/25827.png)\n\n\u6ca1\u9519\uff01\u5c31\u662f\u6211\u4eec\u6700\u5e38\u7528\u7684\u5927\u62ec\u53f7\uff01\n\n\u6211\u4eec\u628a\u5c0f\u660e\u540c\u5b66\u7684\u4ee3\u7801\u8c03\u6574\u4e00\u4e0b\uff0c\u4f7f\u5b83\u80fd\u8fbe\u5230\u6211\u4eec\u60f3\u8981\u7684\u6548\u679c\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    int a=1,b=2;\n    if(a>0)\n    {\n    \tif(a+b!=3)\n            cout<<\"TEST\"<<endl;  \n    }\n    else\n    {\n    \tcout<<\"test\"<<endl;\n    }\n    return 0;\n}\n```\n\n\u81f3\u6b64\u5c0f\u660e\u540c\u5b66\u7684\u4e8b\u513f\u5b8c\u7f8e\u7684\u641e\u5b9a\u4e86\uff0c\u73b0\u5728\u8bb2\u4e00\u4e0b\u5927\u62ec\u53f7\u7684\u53d6\u820d\u3002\n\u76f4\u63a5\u8fdb\u5165\u6b63\u9898\uff1a\n\n**\u201c\u5728while(),do-while(),for(),if(),else,\u4e4b\u7c7b\u7684\u4e1c\u4e1c\uff0c\u5982\u679c\u53ea\u6709\u4e00\u884c\u4ee3\u7801\uff0c\u53ef\u4ee5\u7701\u7565\u5927\u62ec\u53f7\u3002\u201d**\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u50cf\u8fd9\u6837\u7684\u4ee3\u7801\uff1a\n```cpp\nint i=0;a[10001];\nfor(i=0;i<=10001;i++)\n{\n\ta[i]=0;\n}\n```\n\u53ef\u4ee5\u7b80\u5316\u6210\u8fd9\u6837\uff1a\n```cpp\nint i=0;a[10001];\nfor(i=0;i<=10001;i++)\n\ta[i]=0;\n```\n\n\u4f46\u662f\u4e00\u5b9a\u8981\u9884\u9632\u731d\u4e0d\u53ca\u9632\u7684else\u865a\u60ac\u95ee\u9898\u554a\uff01\uff01\uff01\uff01\uff01\uff01\n\n\u597d\u4e86\uff0c\u672c\u671f\u9898\u89e3\u5230\u6b64\u7ed3\u675f\u3002",
        "postTime": 1532872131,
        "uid": 107715,
        "name": "qwq2003",
        "ccfLevel": 0,
        "title": "\u5927\u62ec\u53f7\u7684\u7528\u6cd5\u548c\u53d6\u820d"
    },
    {
        "content": "\u4f2a\u6743\u503c\u7ebf\u6bb5\u6811\n\n\u4e00\u4e2a\u6743\u503c\u4ee3\u8868\u4e00\u4e2a\u70b9\n\n\u521d\u59cb\u90fd\u4e3a\u96f6\n\n\u7528sz\u5b58\u5f53\u524d\u533a\u95f4\u6709\u51e0\u4e2a\u6570\u5b57\n\n\u7136\u540e\u666e\u901a\u67e5\u8be2\u4e00\u4e0b\u5c31\u597d\u5566~\n```cpp\n#include<stdio.h>\n#define OJ\nusing namespace std;\ninline char nc(){\n    #ifdef OJ\n    static char buf[100000],*p1=buf,*p2=buf;\n    if(p1==p2){p2=(p1=buf)+fread(buf,1,100000,stdin);if(p1==p2)return EOF;}\n    return *p1++;\n    #else\n    return getchar();\n    #endif\n}\ninline bool isd(const int &c){return '0'<=c && c<='9';}\ninline int rd(){\n    int x=0,f=1;char ch=nc();\n    for(;!isd(ch);ch=nc())if(ch=='-')f=-1;\n    for(;isd(ch);ch=nc())x=(x<<3)+(x<<1)+ch-'0';\n    return x*f;\n}\ninline void wt(int x,char c){\n    if(x<0)putchar('-'),x=-x;\n    int ch[11],t=0;ch[t]=c;\n    do ch[++t]=x%10+'0',x/=10;while(x);\n    do putchar(ch[t]);while(t--);\n}\ninline int max(const int &a,const int &b){return a>b?a:b;}\nstruct Segment_Tree{\n#define ls t<<1\n#define rs t<<1|1\n#define mid ((l+r)>>1)\n\tstruct node{int mx,sz;}tr[30001<<2];\n\tinline void update(int t){tr[t].sz=tr[ls].sz+tr[rs].sz;tr[t].mx=max(tr[ls].mx,tr[rs].mx);}\n\tinline void ins(int t,int l,int r,int x){\n\t\tif (l==r){tr[t].sz=1;tr[t].mx=l;return;}\n\t\tx<=mid?ins(ls,l,mid,x):ins(rs,mid+1,r,x);update(t);\n\t}\n\tinline int find(int t,int k){\n\t\tif (k==tr[t].sz)return tr[t].mx;\n\t\treturn k>tr[ls].sz?find(rs,k-tr[ls].sz):find(ls,k);\n\t}\n} st;\nint n,k;\nint main(){\n\tn=rd();k=rd();\n\tfor (int x,i=1;i<=n;++i)x=rd(),st.ins(1,1,30000,x);\n\tif (k>st.tr[1].sz)puts(\"NO RESULT\");\n\telse {int ans=st.find(1,k);wt(ans,'\\n');}\n\treturn 0;\n}\n```",
        "postTime": 1527306080,
        "uid": 21836,
        "name": "TaK_Vin",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "\u62b1\u7740\u6211\u7684Treap\u93fc\u93fc\u53d1\u6296emmm\n\n\u8fd9\u53ef\u662f\u4e00\u9053Treap\u543c\u9898\u54c7\uff01\n\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#define maxn (1 << 23) + 10\n#define INF 0x3F3F3F3F\nbool used[maxn];\nint siz = 0;\n\nint R() {\n    int ret = 0;\n    while(!ret || used[ret]) ret = rand() & 0x7FFFFF;\n    return ret;\n}\n\nstruct Node {\n    int v, r, s, c;\n    Node* ch[2];\n    Node(int v = 0);\n} null, *root = &null;\n\nNode::Node(int v): v(v), r(R()), s(0), c(0) {ch[0] = ch[1] = &null;}\n\nvoid maintain(Node* x) { x->s = x->ch[0]->s + x->ch[1]->s + x->c; }\n\nvoid rotate(Node* &x, int t) {\n    Node* o = x->ch[t^1]; \n    x->ch[t^1] = o->ch[t];\n    o->ch[t] = x;\n    maintain(x);\n    maintain(o);\n    x = o;\n}\n\nvoid insert(Node* &x, int v) {\n    if(x->v == v) {\n        return;\n    }\n    int d;\n    if(x == &null) x = new Node(v), x->s = 1, x->c = 1, siz++;\n    else {\n        insert(x->ch[d = v < x->v ? 0 : 1], v);\n        if(x->ch[d]->r > x->r) rotate(x, d ^ 1);\n    }\n    maintain(x);\n    return;\n}\n\nvoid remove(Node* &x, int v) {\n    siz--;\n    Node* u = x;\n    if(x == &null) return;\n    if(x->v == v) {\n        if(x->c == 1) {\n            if(x->ch[0] == &null) x = x->ch[1], delete u;\n            else if(x->ch[1] == &null) x = x->ch[0], delete u;\n            else {\n                int d = x->ch[0]->r > x->ch[1]->r ? 1 : 0;\n                rotate(x, d);\n                remove(x->ch[d], v);\n            }\n        }\n        else x->c--;\n    }\n    else remove(x->ch[v < x->v ? 0 : 1], v);\n    if(x != &null) maintain(x);\n}\n\nint kth(Node* x, int k) {\n    int l = x->ch[0]->s;\n    if(k <= l) return kth(x->ch[0], k);\n    else if(k > l + 1) return kth(x->ch[1], k - l - 1);\n    else return x->v;\n}\n\nint rank(int v) {\n    Node *x = root;\n    int ret = 1;\n    while(x != &null && x->v != v) {\n        int ch = v < x->v ? 0 : 1;\n        if(x->ch[ch] == &null) break;\n        if(ch == 1) ret += x->s - x->ch[1]->s;\n        x = x->ch[ch];\n    }\n    ret += x->ch[0]->s;\n    return ret;\n}\n\nint get(Node* x, int t) {\n    while(x->ch[t] != &null) x = x->ch[t];\n    return x->v;\n}\n\nint ps(int v, int t) {\n    Node *x = root, *las;\n    while(x != &null && x->v != v) {\n        int ch = v < x->v ? 0 : 1;\n        if(ch == (t ^ 1)) las = x;\n        x = x->ch[ch];\n    }\n    if(x -> ch[t] != &null) return get(x->ch[t], t ^ 1);\n    else return las->v;\n}\n\nint main() {\n    srand(20180118);\n    int n, k;\n    scanf(\"%d%d\", &n, &k);\n    for(int i = 0; i < n; i++) {\n        int v;\n        scanf(\"%d\", &v);\n        insert(root, v);\n    }\n    if(k <= siz) printf(\"%d\\n\", kth(root, k));\n    else puts(\"NO RESULT\");\n    return 0;\n}\n```",
        "postTime": 1516205160,
        "uid": 21421,
        "name": "pantw",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "\u5f31\u5f31\u5730\u5199\u4e00\u5199\u521a\u5b66\u7684SBT\u2026\u2026\u6211\u7528\u7684\u662f\u540e\u7ee7\uff0c\u987a\u4fbf\u8d34\u4e00\u8d34\u57fa\u672c\u64cd\u4f5cQwQ\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#define maxn 1000005\nusing namespace std;\ninline int read()\n{\n    char c=getchar(); int num=0,f=1;\n    while (c<'0'||c>'9') { if (c=='-') f=-1; c=getchar(); }\n    while (c<='9'&&c>='0') { num=num*10+c-'0'; c=getchar(); }\n    return num*f;\n}\n\nstruct node{\n    int key,ls,rs,siz;\n}tree[maxn];\n\nint tot=0,root=0;\n\nvoid rrotate(int &now)\n{\n    int lson=tree[now].ls;\n    if (!lson) return;\n    tree[now].ls=tree[lson].rs;\n    tree[lson].rs=now;\n    tree[lson].siz=tree[now].siz;\n    tree[now].siz=tree[tree[now].ls].siz+tree[tree[now].rs].siz+1;\n    now=lson;\n}\n\nvoid lrotate(int &now)\n{\n    int rson=tree[now].rs;\n    if (!rson) return;\n    tree[now].rs=tree[rson].ls;\n    tree[rson].ls=now;\n    tree[rson].siz=tree[now].siz;\n    tree[now].siz=tree[tree[now].ls].siz+tree[tree[now].rs].siz+1;\n    now=rson;\n}\n\nvoid maintain(int &now,bool isright)\n{\n    if (!now) return;\n    if (!isright)\n    {\n        if (tree[tree[tree[now].ls].ls].siz > tree[tree[now].rs].siz)\n         rrotate(now);\n        else if (tree[tree[tree[now].ls].rs].siz > tree[tree[now].rs].siz)\n         lrotate(tree[now].ls),rrotate(now);\n        else return;\n    }\n    else\n     {\n         if (tree[tree[tree[now].rs].rs].siz > tree[tree[now].ls].siz)\n          lrotate(now);\n         else if (tree[tree[tree[now].rs].ls].siz > tree[tree[now].ls].siz)\n          rrotate(tree[now].rs),lrotate(now);\n         else return;\n     }\n     maintain(tree[now].ls,false);\n     maintain(tree[now].rs,true);\n     maintain(now,false);\n     maintain(now,true);\n}\n\nvoid insert(int &now,int val)\n{\n    if (!now)\n    {\n        now=++tot;\n        tree[now].key=val;\n        tree[now].siz=1;\n    }\n    else \n     {\n         tree[now].siz++;\n         if (val<tree[now].key) insert(tree[now].ls,val);\n          else insert(tree[now].rs,val);\n         maintain(now,val>=tree[now].key);\n     }\n}\n\nint del(int &now,int val)\n{\n    int ret;\n    tree[now].siz--;\n    if ((val==tree[now].key)||(val<tree[now].key&&tree[now].ls==0)||(val>tree[now].key&&tree[now].rs==0))\n    {\n        ret=tree[now].key;\n        if ((tree[now].ls==0)||(tree[now].rs==0)) now=tree[now].ls+tree[now].rs;\n         else tree[now].key=del(tree[now].ls,tree[now].key+1);\n    }\n    else\n    {\n        if (val<tree[now].key) ret=del(tree[now].ls,val);\n         else ret=del(tree[now].rs,val);\n    }\n    return ret;\n}\n\nint select(int now,int k)\n{\n    if (k==tree[tree[now].ls].siz+1) return now;\n    if (k<=tree[tree[now].ls].siz) return select(tree[now].ls,k);\n     else return select(tree[now].rs,k-tree[tree[now].ls].siz-1);\n}\n\nint rank(int &now,int val)\n{  \n    if (val<tree[now].key)  \n     return rank(tree[now].ls,val);  \n    else if (val>tree[now].key)  \n     return rank(tree[now].rs,val)+tree[tree[now].ls].siz+1;  \n    return tree[tree[now].ls].siz+1;  \n}\n\nint getmin()\n{\n    int x;\n    for (x=root;tree[x].ls;x=tree[x].ls);\n    return tree[x].key;\n}\n\nint getmax()\n{\n    int x;\n    for (x=root;tree[x].rs;x=tree[x].rs);\n    return tree[x].key;\n}\n\nint pred(int now,int pre,int val)  //\u524d\u9a71 \u5c0f\u4e8e\n{\n    if (now==0) return pre;\n    if (tree[now].key<val) return pred(tree[now].rs,now,val);\n     else return pred(tree[now].ls,pre,val);\n}\n\nint succ(int now,int pre,int val)  //\u540e\u7ee7 \u5927\u4e8e\n{\n    if (now==0) return pre;\n    if (tree[now].key>val) return succ(tree[now].ls,now,val);\n     else return succ(tree[now].rs,pre,val);\n}\n\nint main()\n{\n    int n=read(),k=read();\n    for (int i=1;i<=n;i++)\n    {\n        int x=read();\n        insert(root,x);\n    }\n    int x=getmin(); if (k==1) { printf(\"%d\",x); return 0; }\n    x=succ(root,0,x);\n    for (int i=3;i<=k;i++)\n    {\n        if (x==0) { printf(\"NO RESULT\"); return 0; }\n         x=succ(root,0,tree[x].key);        \n    }\n    if (x==0) printf(\"NO RESULT\"); \n     else printf(\"%d\",tree[x].key);\n    return 0;\n}\n```",
        "postTime": 1512292344,
        "uid": 28645,
        "name": "XHRlyb_2001",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "STL\u6a21\u677f\u7e41\u591a\uff0c\u804a\u501f\u4e00\u6c34\u9898\u5de9\u56fa\u4e00\u4e0b\u52a8\u6001\u6570\u7ec4\uff0c\u4ea6\u662f\u4e00\u95f2\u60c5\u9038\u4e8b\u3002\n\n\u4e3a\u907f\u514d\u9898\u89e3\u906d\u62d2\uff0c\u4ee5\u4e0b\u56de\u8be6\u7ec6\u4ecb\u7ecd\u52a8\u6001\u6570\u7ec4\u7684\u57fa\u672c\u7528\u6cd5\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<vector>//\u6a21\u677f\u5e93\nusing namespace std;\nint main()\n{\n    vector<int>a;//\u5b9a\u4e49a\u4e3a\u4e00\u4e2aint\u7c7b\u578b\u7684\u52a8\u6001\u6570\u7ec4\n    int n,k,h;\n    cin>>n>>k;\n    for(int i=1;i<=n;++i)\n    {\n     cin>>h;\n     a.push_back(h);//\u4e0e\u666e\u901a\u6570\u7ec4\u4e0d\u540c\uff0c\u52a8\u6001\u6570\u7ec4\u5b9e\u8d28\u662f\u4e00\u4e2aLIFO\u8868(\u6808)\uff0c\u6240\u4ee5\u8bfb\u5165\u52a8\u6001\u6570\u7ec4\u65f6\uff0c\u5148cin\u4e00\u4e2a\u53d8\u91cf\uff0c\u518d\u8ba9\u8fd9\u4e2a\u53d8\u91cf\u8fdb\u6808\u3002\n    }\n    sort(a.begin(),a.end());//\u52a8\u6001\u6570\u7ec4\u6392\u5e8f\u7684\u65b9\u6cd5\u4e0e\u666e\u901a\u6570\u7ec4\u5927\u76f8\u5f84\u5ead\uff0c\u800c\u4e0d\u540c\u7684\u662f\uff0csort\u4e2d\u7684\u9996\u5c3e\u4f4d\u7f6e\u53d8\u4e3a\u4e86\u6307\u5411\u4e86vector\u5934\u90e8\u5c3e\u90e8\u7684\u6307\u9488\n    int w=unique(a.begin(),a.end())-a.begin();//unique()\u8fd4\u56de\u7684\u662fa\u53bb\u91cd\u540e\u7684\u5c3e\u5730\u5740,\u800cw\u5c31\u662f\u52a8\u6001\u6570\u7ec4\u4e2d\u4e0d\u540c\u5143\u7d20\u7684\u4e2a\u6570\u3002\n    if(w<k)cout<<\"NO RESULT\";\n      else\n     cout<<a[k-1];//\u52a8\u6001\u6570\u7ec4\u4ecea[0]\u5f00\u59cb\u8bfb\u5165\uff0c\u6240\u4ee5k\u8981\u51cf\u4e00\n    return 0;\n}\n```",
        "postTime": 1501607016,
        "uid": 31798,
        "name": "\u8861\u5c7f\u777f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "\u8fd9\u9898\u7684\u6570\u636e\u8303\u56f4\u5c0f\u4e8e30000\uff0c\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4+\u4e8c\u5206\u6216\u8005\u591a\u52a0\u4e00\u4e2a\u79bb\u6563\u5316\u5904\u7406(\u867d\u7136\u79bb\u6563\u5316\u540e\u53ef\u4ee5\u76f4\u63a5\u8f93\u51fa\u7b54\u6848)\n\n\u7528\u6811\u72b6\u6570\u7ec4\u8bb0\u5f551~x\u7684\u6570\u5b57\u4e2a\u6570\uff0c\u5728\u4e8c\u5206x\u6c42\u7b54\u6848\u3002\n\n```cpp\n#include<cstdio>\nusing namespace std;\n#define fo(a,b,c) for(int a=b;a<=c;a++)\nconst int maxn=30000;\nint b[maxn],c[maxn];\nint main(){\n    //freopen(\"in.txt\",\"r\",stdin);\n    int n,k;scanf(\"%d%d\",&n,&k);\n    fo(i,1,n){\n        int x;scanf(\"%d\",&x);\n        if(b[x])continue;\n        for(b[x]=1;x<maxn;x+=x&-x)c[x]++;\n```\n}//\u4ee5\u4e0a\u6811\u72b6\u6570\u7ec4\n```cpp\n    int l=1,r=maxn;\n    for(;l<r;){\n        int m=(l+r)>>1,sum=0;\n        for(int x=m;x;x-=x&-x)sum+=c[x];\n        if(sum<k)l=m+1;\n        else r=m;\n```\n}//\u4ee5\u4e0a\u4e8c\u5206\n```cpp\n    if(r==maxn)printf(\"NO RESULT\");\n    else printf(\"%d\",l);\n    return 0;\n}\n\n```",
        "postTime": 1500883186,
        "uid": 12668,
        "name": "Minclxc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "\u6709\u4e00\u5929\uff0c\u6211\u95f2\u6765\u65e0\u4e8b(\u95f2\u7684\u86cb\u75bc)\uff0c\u5728\u6d1b\u8c37\u91cc\u968f\u610f\u7ffb\u627e\u7740\u9898\u76ee\n\n\u8fd9\u65f6\u6211\u770b\u5230\u4e86\u4e00\u9053\u53eb\u7b2ck\u5c0f\u6574\u6570\u7684\u6c34\u9898\n\n\u6211:\"\u8fd9\u9898\u597d\u6c34\u554a......\u4e3a\u4ec0\u4e48\u4e0d\u7528\u7ea2\u9ed1\u6811\u5462\uff1f\"(\u54c7\uff0c\u542c\u8d77\u6765\u597d\u9ad8\u7aef\u7684\u6837\u5b50)\n\n<\u4ee5\u4e0a\u4e3a\u5e9f\u8bdd>\n\n\u597d\u5427\uff0c\u5b9e\u9645\u4e0a\u53ea\u662fmap\u800c\u5df2\n\nmap\u4e5f\u53ef\u4ee5\u8d77\u5230\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u6876\u6392\u7684\u4f5c\u7528\uff0c\u4f46\u662f\u53ef\u4ee5\u52a8\u6001\u5206\u914d\u5185\u5b58\n\n\u867d\u7136\u7528\u6765\u505a\u8fd9\u9898\u662f\u6740\u9e21\u7528\u725b\u5200\u4e86\uff0c\u4f46\u662f\u5b66\u4e00\u79cd\u65b0\u65b9\u6cd5\u4e5f\u662f\u4e0d\u9519\u7684\n\n\u5982\u679c\u7528map\u7684\u8bdd\uff0c\u522b\u8bf43\u4e07\u7684\u6574\u6570\u8303\u56f4\u4e86\uff0c\u5c31\u7b97\u662f3\u4e07\u4ebf\u4e5f\u662f\u6beb\u65e0\u95ee\u9898\u7684\uff01\n\n\u5e0c\u671b\u65b0\u4eba\u670b\u53cb\u4eec\u80fd\u4ece\u8fd9\u7bc7\u9898\u89e3\u5f00\u59cb\uff0c\u6df1\u5165\u5b66\u4e60\u5f3a\u5927\u7684stl\u548cmap\n\n```cpp\n#include<cstdio>\n#include<map> //\u5934\u6587\u4ef6\u4e0d\u53ef\u5c11\n#define For(i,j,k) for(int i=j;i<=k;i++)\nusing namespace std;\nint read(){//\u8fd9\u53ea\u662f\u5feb\u901f\u8bfb\u5165\n    int l=1,x=0; char ch=getchar();\n    while((ch<'0'||ch>'9')&&ch!='-')  ch=getchar();\n    if (ch=='-') l=-1,ch=getchar();\n    while(ch>='0'&&ch<='9') x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n    return x*l;\n}\nmap<int,int> mp; //map\u5b9a\u4e49\uff0c\u5f88\u7b80\u5355\u5bf9\u5427\nint main(){\n    int n=read(),s=0,m=read();\n    For(i,1,n) mp[read()]=1; //\u8bfb\u5165\u5e76\u53bb\u91cd\uff0c\u548c\u6876\u6392\u5dee\u4e0d\u591a\n    map<int,int>::iterator it; //\u8fd9\u662f\u8fed\u4ee3\u5668\uff0c\u521a\u5f00\u59cb\u63a5\u89e6\u53ef\u80fd\u4f1a\u89c9\u5f97\u590d\u6742\uff0c\u591a\u7528\u51e0\u6b21\u5c31\u4f1a\u4e86\n    for(it=mp.begin();it!=mp.end();it++){ //\u4ece\u5934\u5f00\u59cb\u904d\u5386map\uff0c\u5185\u90e8\u662f\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u597d\u7684\n        s++; \n        if (s==m) {printf(\"%d\\n\",it->first); return 0;} //\u5230\u7b2ck\u5c0f\u4e86\u5c31\u8f93\u51fa\u7ed3\u679c\u9000\u51fa\u7a0b\u5e8f\n    }\n    printf(\"NO RESULT\\n\"); //\u5230\u4e86\u8fd9\u4e00\u6b65\u5c31\u53ef\u4ee5\u786e\u5b9a\u65e0\u89e3\u4e86\n    return 0; //\u7ed3\u675f\u4e86~  stl\u5927\u6cd5\u597d\uff01\n}\n```",
        "postTime": 1499342731,
        "uid": 20821,
        "name": "wjy666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "vector\u76f4\u63a5\u5b58\u7136\u540e\u54b8\u9c7csort....\n\n[codec]\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <vector>\nusing namespace std;\nbool vis[30010];\nvector<int> v;\nint main(){\n    int x;\n    int N;\n    int K;\n    cin>>N>>K;\n    for(int i=0;i<N;++i){\n        cin>>x;\n        if(!vis[x]){\n            vis[x]=true;\n            v.push_back(x);\n        }\n    }\n    if(v.size()<K){\n        puts(\"NO RESULT\");\n        return 0;\n    }\n    sort(v.begin(),v.end());\n    cout<<v[K-1];\n    return 0;\n}\n[/codec]\n```",
        "postTime": 1471176666,
        "uid": 14667,
        "name": "mike_he",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "\u6b64\u9898\u91cd\u70b9\u662f\u5feb\u6392+\u5224\u65ad\uff0c\u4ee3\u7801\u5982\u4e0b\u2014\u2014\n\n```cpp\n#include<iostream>\n#include<cstdlib>\n#include<algorithm>\nusing namespace std;\nint i,n,k,f;\nint a[10010]; //\u5b9a\u4e49\u53d8\u91cf\nint main(){\n    cin>>n>>k; //\u8bfb\u5165 \n    for(i=1;i<=n;i++){\n        cin>>a[i]; //\u8f93\u5165n\u4e2a\u6570\n    }\n    sort(a+1,a+n+1); //\u4ece\u5c0f\u5230\u5927\u5feb\u6392 \n    for(i=1;i<=n;i++){\n        if(a[i]>a[i-1]){ //\u5224\u65adk\u7b2c\u51e0\u5c0f \n            k--;\n            f=i;\n        }\n        if(k<=0) break; //\u6761\u4ef6break\n    }\n    if(k==0) cout<<a[f]<<endl; \n    else cout<<\"NO RESULT\"<<endl; //\u5224\u65ad\uff0c\u5982\u679c\u5df2\u7ecf\u5faa\u73af\u5b8c\u4e86\u4f46\u662f\u8fd8\u6ca1\u6709\u627e\u5230\u7b2ck\u5c0f\u7684\uff0c\u5c31\u8f93\u51faNO RESULT\n    return 0;\n}>>- 0.\n```",
        "postTime": 1469326536,
        "uid": 18160,
        "name": "\u696f\u5c71\u6587\u4e43",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "\u6b64\u9898\u611f\u89c9\u7528sort\u592a\u9ebb\u70e6\u592a\u8017\u65f6\uff0c\u6240\u4ee5\u6211\u7528\u4e86\u6876\u6392\uff0c\u56e0\u4e3a\u6570\u636e\u8303\u56f4\u5e76\u4e0d\u5927\uff0c\u4e0d\u4f1a\u5185\u5b58\u6ea2\u51fa\u3002\u601d\u8def\u4e5f\u6bd4\u8f83\u5bb9\u6613\u60f3\u51fa\u6765\uff0c\u4ee3\u7801\u5982\u4e0b\u2014\u2014\n\n```cpp\n#include<cstdio>\n#include<iostream>\nusing namespace std;\nlong long i,big,k1,n,k,t,a[30005];         //\u5b9a\u4e49\u53d8\u91cf\nint main()\n{\n    scanf(\"%d%d\",&n,&k);       //\u8f93\u5165n,k\n    for (i=1;i<=n;i++)               //\u5faa\u73af\n    {\n        scanf(\"%d\",&t);          //\u8f93\u5165N\u4e2a\u6570\n        a[t]=1;                        //\u6876\u6392\uff0c\u8f93\u5165\u4e86\u4e00\u4e2a\u6570\u5c31\u5728a\u6570\u7ec4\u505a\u4e00\u4e2a\u6807\u8bb0\n        if (big<t) big=t;          //\u5224\u65ad\u6700\u5927\u503c\uff0c\u65b9\u4fbf\u4e0b\u9762\u7684\u5faa\u73af\uff0c\u4e0d\u7528\u5faa\u73af\u523030000\n    }\n    for (i=1;i<=big;i++)\n    {\n        if (a[i]==1) k1++;           //\u5224\u65ad\uff0c\u5982\u679c\u4e0a\u9762\u66fe\u8f93\u5165\u8fc7i\uff0c\u5c31\u589e\u52a0k1\uff0ck1\u7528\u6765\u5224\u65ad\u8fd9\u4e2a\u6570\u662f\u7b2c\u51e0\u5c0f\u7684\n        if (k1==k)                    //\u5982\u679c\u8fd9\u4e2a\u6570\u662f\u7b2ck\u5c0f\u7684\n        {\n            printf(\"%d\",i);      //\u5c31\u8f93\u51fa\u8fd9\u4e2a\u6570\n            break;                 //break\u7701\u4e00\u70b9\u5faa\u73af\n        }\n    }\n    if (k1<k) cout<<\"NO RESULT\";    //\u5224\u65ad\uff0c\u5982\u679c\u5df2\u7ecf\u5faa\u73af\u5b8c\u4e86\u4f46\u662f\u8fd8\u6ca1\u6709\u627e\u5230\u7b2ck\u5c0f\u7684\uff0c\u5c31\u8f93\u51faNO RESULT\uff0c\u8fd9\u4e00\u6b65\u5fc5\u987b\u8bb0\u5f97\n    return 0;\n}\n```",
        "postTime": 1466054873,
        "uid": 12613,
        "name": "PTC06",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "\u672c\u9898\u5176\u5b9e\u6ca1\u4ec0\u4e48\u96be\u5ea6\uff0c\u6a21\u62df\u76f4\u63a5\u8fc7\u3002\n\n\u4e3b\u8981\u5c31\u662f\u5feb\u6392+\u53bb\u91cd[delete]\u548c\u697c\u4e0b\u8bf4\u7684\u5dee\u4e0d\u591a[/delete]\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u6ce8\u610f\u70b9\uff0c\u8981\u4e0d\u7136\u4f60\u5224\u91cd\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(n^2)\u7684\u8bdd\uff0cn = 10000\u8981\u8fd0\u884c1\u4ebf\u6b21\uff0c\u79bb\u8d85\u65f6\u4e0d\u8fdc\u4e86\uff01\u6240\u4ee5\u5e94\u5728\u6392\u5e8f\u4e4b\u540e\u5224\u91cd\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(n)\n\n\u5224\u65adNO RESULT\u7684\u65b9\u6cd5\u4e5f\u633a\u7b80\u5355\uff0c\u4e0d\u8fc7\u6211\u8fd9\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6\u633a\u5927\u3002\u4e8b\u5148\u8fd0\u884c\u5b8c\u4e3b\u7a0b\u5e8f\u518d\u5224\u65ad\u3002\u5404\u4f4dOIer\u670b\u53cb\u53ef\u4ee5\u81ea\u884c\u4fee\u6539\u4e00\u4e0b\u4ee3\u7801\u3002\n\n\n[delete]\u5e9f\u8bdd\u8bf4\u4e86\u8fd9\u4e48\u591a[/delete]\uff0c\u4e0a\u4ee3\u7801\uff01\n\n\n\n\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#define Size 10001\nusing namespace std;\nint A[Size],B[Size];\nint main(){\n    int i,n,k,cnt = 0;\n    scanf(\"%d %d\",&n,&k);\n    for(i = 0; i < n; i++) scanf(\"%d\",&A[i]);\n```\n/\\*\u4e0b\u9762\u8fdb\u884c\u53bb\u91cd\\*/\n```cpp\n    sort(A,A+n);    //\u5148\u6392\u5e8f\uff0c\u51cf\u5c11\u65f6\u95f4\u590d\u6742\u5ea6\n    B[cnt] = A[0];\n    for(i = 1; i < n; i++){\n        if(A[i] == B[cnt]) continue;\n        else B[++cnt] = A[i];\n    }\n    cnt++;    //cnt\u5f52\u4f4d\u5230\u6570\u7ec4\u957f\u5ea6\uff0c\u7eaf\u5c5e\u4e2a\u4eba\u559c\u597d\u3002\u3002\u3002\n```\n/\\*\u53bb\u91cd\u5b8c\u6bd5\\*/\n    if(k < 0||k >= cnt) printf(\"NO RESULT\\n\");\n    \n```cpp\n    else{\n        for(i = 0; i < cnt; i++) if(i == k-1){    \n            printf(\"%d\\n\",B[i]);    //\u8f93\u51fa\u7ed3\u679c \n            break;\n        }\n    } \n    return 0;\n}\n```",
        "postTime": 1463092230,
        "uid": 17170,
        "name": "Deny_\u5c0f\u7530",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "\u6392\u5e8f\uff0c\u53bb\u91cd\u3002\u867d\u7136\u4f7f\u7528\u9009\u62e9\u6392\u5e8f\u4e5f\u80fdAccepted\uff0c\u4f46\u8003\u8651\u5230\u9898\u76ee\u7684\u6570\u636e\u8303\u56f4\uff0c\u6700\u597d\u8fd8\u662f\u7528\u5feb\u901f\u6392\u5e8f\u3002\n\n```delphi\n\ntype data=array [1..10000] of longint;\nvar\n a:data;\n n,k,i,m:longint;\nprocedure qsort(var a:data);\n procedure sort(l,r:longint);\n var\n  i,j,x,y:longint;\n begin\n  i:=l;\n  j:=r;\n  x:=a[(l+r) div 2];\n  repeat\n   while a[i]<x do inc(i);\n   while x<a[j] do dec(j);\n   if not(i>j) then\n    begin\n     y:=a[i];\n     a[i]:=a[j];\n     a[j]:=y;\n     inc(i);\n     dec(j);\n    end;\n  until i>j;\n  if l<j then sort(l,j);\n  if i<r then sort(i,r);\n end;\nbegin\n sort(1,n);\nend;\nbegin\n readln(n,k);\n for i:=1 to n do read(a[i]);\n qsort(a);\n for i:=1 to n do\n begin\n  if a[i]<>a[i-1] then inc(m);//\u76f8\u540c\u7684\u6570\u53ea\u7b97\u4e00\u6b21\n  if m=k then\n   begin\n    write(a[i]);\n    halt;\n   end;\n end;\n write('NO RESULT');\nend.\n\n```",
        "postTime": 1428139528,
        "uid": 2699,
        "name": "Ufowoqqqo",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "\u9898\u89e3\uff1a\n\n\u6b64\u9898\u5176\u5b9e\u5e76\u4e0d\u96be\uff0c\u90a3\u4e48\u601d\u8def\u5c31\u662f\u5c06\u6570\u636e\u6392\u5e8f\uff0c\u7136\u540e\u53bb\u91cd\u518d\u8f93\u51fa\uff0c\u5373\u53ef\u89e3\u51b3\u95ee\u9898\uff0c\u90a3\u4e48\u8fd9\u9898\u7684\u96be\u70b9\u5c31\u662f\u5982\u4f55\u5feb\u6377\u7684\u53bb\u91cd\u3002\u8bf7\u53c2\u8003\u4ee5\u4e0b\u6807\u7a0b\uff0c\u4ec5\u4f9b\u53c2\u8003\u3002\n\n```delphi\nvar i,j,p,q,k,n,m:longint;\n    a,b:array[1..10000] of longint;\nbegin\n  read(m,n);\n  for i:=1 to m do\n   begin\n    read(a[i]);\n   end;\n  for i:=1 to m do{\u672c\u4eba\u5929\u751f\u8f83\u61d2\uff0c\u6240\u4ee5\u8fd9\u91cc\u53ea\u7528\u4e86\u9009\u6392\uff0c\u90a3\u4e48\u6709\u5fd7\u8005\u53ef\u4ee5\u9009\u62e9\u5feb\u6392\uff0c\u53ef\u80fd\u4f1a\u66f4\u5feb\u4e9b}\n    for j:=i+1 to m do\n    begin\n      if a[i]>a[j] then begin\n        k:=a[i];a[i]:=a[j];a[j]:=k;\n      end;\n    end;\n  q:=1;{q\u662f\u8bb0\u5f55\u5ffd\u7565\u91cd\u590d\u6570\u5b57\u4ee5\u540e\u6570\u5b57\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u4f5c\u4e3a\u6307\u9488\u4f7f\u7528\uff0c\u4ee5\u4fbf\u8bb0\u5f55}\n  for i:=1 to m do{\u53bb\u91cd\uff0c\u8fd9\u4e00\u6b65\u5f88\u91cd\u8981\u4e5f\u548c\u5173\u952e}\n   begin{\u4ee5p\u4f5c\u4e3a\u53bb\u91cd\u7684\u6807\u51c6\u53d8\u91cf}\n     if p<>a[i] then begin{\u5f53\u540c\u4e00\u4e2a\u6570\u5b57\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u65f6\u5019\uff0c\u5c31\u5c06\u5176\u8bb0\u5f55\u4e3a\u6807\u51c6\u53d8\u91cf}\n       p:=a[i];b[q]:=a[i];{\u518d\u5c06\u6b64\u6570\u8bb0\u5f55\u5230\u76f8\u5e94\u7684\u6570\u7ec4\u4e2d}\n       inc(q);{\u5c06\u6307\u9488\u5f80\u540e\u63a8\u4e00\u683c}\n     end;\n   end;\n  if n>=q then write('NO RESULT'){\u56e0\u4e3a\u6307\u9488q\u5728\u6700\u540e\u4e00\u6b21\u8fd8\u4f1a\u52a01\uff0c\u6240\u4ee5\u5b83\u7684\u6700\u7ec8\u503c\u5e94\u8be5\u662f\u5ffd\u7565\u91cd\u590d\u540e\u6240\u6709\u6570\u5b57\u603b\u6570\u518d+1\uff0c\u90a3\u4e48\u5982\u679c\u8fd9\u4e2an\u8981\u662f\u5927\u4e8e\u7b49\u4e8eq\u7684\u8bdd\uff0c\u5c31\u4e0d\u4f1a\u6709\u7b54\u6848\uff0c\u5c31\u76f4\u63a5\u8f93\u51fa\u6ca1\u6709\u5c31\u597d\u4e86}\n  else write(b[n]);\nend.\n```\n\u8fd9\u4e00\u9898\uff0c\u4e5f\u53ef\u4ee5\u8bf4\u662f\u4e00\u9053\u7ec3\u624b\u9898\uff0c\u800c\u8fd9\u53bb\u91cd\u7684\u65b9\u6cd5\u5bf9\u4e8e\u521d\u5b66\u8005\u6765\u8bf4\u5728\u4eca\u540e\u4e5f\u662f\u5927\u6709\u7528\u5904\uff0c\u6240\u4ee5\u8fd8\u8bf7\u540c\u5b66\u4eec\u597d\u597d\u53c2\u609f\uff0c\u5f97\u5176\u4e2d\u7cbe\u9ad3\u4e5f\u3002\n",
        "postTime": 1375801706,
        "uid": 147,
        "name": "\u91ce\u83dc\u6c64",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "**\u8fd9\u662f\u672c\u849f\u84bb\u7b2c\u4e8c\u7bc7\u9898\u89e3\u4e86\uff01\uff01\uff01\u5e0c\u671b\u5927\u5bb6\u652f\u6301\uff01\uff01\uff01**\n\n\n\u672c\u9898\u7684\u4e00\u822c\u601d\u8def\u662f\uff1a\u8bfb\u5165\u540e\u6392\u5e8f\u53bb\u91cd\uff0c\u518d\u8f93\u51fa\u3002\n\n\u4e0d\u8fc7\u672c\u4eba\u5077\u4e86\u4e2a\u5c0f\u61d2\uff0c\u9898\u76ee\u4e0d\u662f\u8bf4\u6b63\u6574\u6570\u5747\u5c0f\u4e8e30000\u561b\u2026\u2026\n\n\u5f00\u4e00\u4e2a\u4e0b\u68070~30000\u7684\u6570\u7ec4a\uff0ca[i]\u8868\u793a\u6570i\u662f\u5426\u51fa\u73b0\uff0c\u5c31\u7701\u53bb\u4e86\u6392\u5e8f\u53bb\u91cd\u8fd9\u4e00\u6b65\u64cd\u4f5c\u3002\n\n\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define rei register int//\u5b8f\u5b9a\u4e49\uff0c\u52a0\u5feb\u5faa\u73af\u901f\u5ea6 \nusing namespace std;\nint n,k,a[30010],t,m,mx;\nint main()\n{\n\tscanf(\"%d%d\",&n,&k);//\u8bfb\u5165 \n\tfor(rei i=1;i<=n;++i)\n\t{\n\t\tscanf(\"%d\",&t);//\u8bfb\u5165\u4e00\u4e2a\u6570 \n\t\tmx=max(mx,t);//\u8bb0\u4e0b\u6700\u5927\u6570\uff0c\u7528\u4e8e\u5224\u65ad \n\t\ta[t]=1;//\u5c06\u6b64\u6570\u6807\u8bb0\u4e3a\u771f \n\t}\n\tm=1;\n\tfor(rei i=1;i<=k;++i)\n\t{\n\t\twhile(a[m]==0 && m-1<=mx) m++;//\u627e\u5230\u4e0b\u4e00\u4e2a\u5b58\u5728\u7684\u6570\uff0c\u201cm-1<=mx\u201d\u7528\u6765\u5224\u5b9am\u7684\u8303\u56f4 \n\t\tm++;//\u8fd9\u4e2a\u64cd\u4f5c\u5fc5\u987b\u6709\uff0c\u5426\u5219m\u6c38\u8fdc\u4e0d\u4f1a\u53d8 \n\t}\n\tif(m-1<=mx) printf(\"%d\",m-1);//\u5982\u679c\u5b58\u5728\u7b2ck\u5927\u6570 \n\telse printf(\"NO RESULT\");//\u5426\u5219\u8f93\u51fa\u201cNO RESULT\u201d \n\treturn 0;\n}\n\n```\n",
        "postTime": 1569145900,
        "uid": 214684,
        "name": "3114129979cc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "# 1.\u5206\u6790\n\n\u672c\u9898\u672c\u8d28\u4e0a\u662f\u8981\u6c42\u5c06$n$\u5404\u6570\u6309\u7167\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u627e\u5230\u5176\u4e2d\u7684\u7b2c$k$\u4e2a\u6700\u5c0f\u6570\uff0c\u53c8\u56e0\u4e3a\u91cd\u590d\u7684\u53ea\u8ba1\u7b97\u4e00\u4e2a\uff0c\u81ea\u7136\u60f3\u5230**\u6876\u6392\u5e8f**\u3002\n\n# 2.\u601d\u8def\n\n1. \u5faa\u73af$n$\u6b21\uff0c\u6bcf\u4e2a\u6570\u8bfb\u5165$input$\uff1b\n\n- \u6876\u6392\u5e8f$(bcuket[input]++)$\uff1b\n\n- \u540c\u65f6\u8fd9\u91cc\u505a\u4e86\u4f18\u5316\uff0c\u627e\u5230\u8f93\u5165\u7684\u6570\u7684\u6700\u5927\u503c$mx$\uff0c\u4e4b\u540e\u904d\u5386$bucket$\u65f6\uff0c\u53ea\u9700\u8981\u904d\u5386$[1,mx]$\u7684\u8303\u56f4\uff0c\u4e0d\u9700\u8981\u904d\u5386\u6574\u4e2a$bucket$\u6570\u7ec4\u3002\n\n2. \u904d\u5386\u6570\u7ec4$bucket[i],i\\in[1,mx]$\uff1b\n\n- \u82e5\u5bf9\u5e94\u7684\u6876\u6709\u6570$(bucket[i]>0)$\uff0c\u8ba1\u6570$(cnt++)$\uff1b\n\n- \u5f53\u627e\u5230\u65f6$(cnt==k)$\uff0c\u8f93\u51fa$i$\uff0c\u63d0\u524d\u9000\u51fa\u7a0b\u5e8f\u3002\n\n3. \u82e5\u6ca1\u6709\u57282\u4e2d\u63d0\u524d\u9000\u51fa\uff0c\u8bf4\u660e\u65e0\u89e3\uff0c\u8f93\u51fa$\"NO\\space RESULT\"$\u3002\n\n# 3.\u4ee3\u7801\n\n```cpp\n#include <iostream>\n\nusing namespace std;\n\nint n;  \t\t\t\t\t//\u6b63\u6574\u6570\u4e2a\u6570\nint k;  \t\t\t\t\t//\u7b2c\u51e0\u4e2a\u6700\u5c0f\u6574\u6570\nint bucket[30005] = {0};    //\u6876\u6392\u5e8f\u7684\u6876\nint mx = 0;                \t//\u8f93\u5165\u7684\u6570\u7684\u6700\u5927\u503c\nint cnt = 0;                //\u7b2c\u51e0\u4e2a\u6570\n\nint main(void)\n{\n\tcin >> n >> k;\n\t\n\tfor(int i = 0; i < n; i++)\n\t{\n\t\tint input;\n\t\tcin >> input;\n\t\tif(input > mx)\n\t\t{\n\t\t\tmx = input;\n\t\t}\n  \t\tbucket[input]++;\n \t}\n\n\tfor(int i = 1; i <= mx; i++)\n\t{\n\t\tif(bucket[i] > 0)\n\t\t{\n\t\t\tcnt++;\n\t\t}\n\t\t\n\t\tif(cnt == k)\n\t\t{\n\t\t\tcout << i;\n\t\t\treturn 0;\n\t\t}\n\t}\n\t\n\tcout << \"NO RESULT\";\n\t\n\treturn 0;\n}\n```\n",
        "postTime": 1565573993,
        "uid": 214264,
        "name": "SingularWind",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "\u9996\u5148\u8fd9\u9053\u9898\u76ee\u4e0d\u662f\u5f88\u96be\uff0c\u770b\u89c1\u5927\u4f6c\u4eec\u7528\u7684\u4ec0\u4e48\u4e3b\u5e2d\u6811\u3001\u7ebf\u6bb5\u6811\uff0c\u849f\u84bb\u90fd\u88ab\u5413\u614c\u4e86\u3002\n# \u5176\u5b9e\u8fd9\u9053\u9898\u76ee\u53ea\u9700\u8981\u7528\u6876\u6392\u5e8f\u5c31\u591f\u4e86\n\u9996\u5148\u6765\u786e\u7acb\u4e00\u4e0b\u65b9\u6cd5\n\n* \u7528vis\u6570\u7ec4\u6807\u8bb0\u6bcf\u4e2a\u6570\u662f\u5426\u51fa\u73b0\u548c\u51fa\u73b0\u4e86\u51e0\u6b21\n\n* \u6211\u4eec\u4f7f\u7528while\u5faa\u73af\uff0c\u5faa\u73afn\u6b21\uff0c\u5982\u679cn\u4e2a\u6570\u5168\u90e8\u5faa\u73af\u5b8c\u6210\u90fd\u6ca1\u6709\u627e\u5230\u7b2ck\u5c0f\u6574\u6570\u5c31\u8f93\u51faNO RESULT\n\n* \u7528i\u5faa\u73af\uff0c\u5982\u679cvis[i]==0\uff0c\u90a3\u4e48coutinue\u6389\u3002\u5982\u679c\u4e0d\u662f\uff0c\u8ba1\u6570\u5668++\uff0c\u5224\u65ad\u4e00\u4e0b\u8ba1\u6570\u5668\u662f\u4e0d\u662f\u4e0ek\u76f8\u7b49\uff0c\u5982\u679c\u8ba1\u6570\u5668\u4e0ek\u76f8\u7b49\u8bf4\u660e\u5df2\u7ecf\u627e\u5230\u7b2ck\u5c0f\u6574\u6570\u4e86\uff0c\u8f93\u51fai\uff0c\u5e76return 0\u3002\u5982\u679c\u8ba1\u6570\u5668\u4e0d\u4e0ek\u76f8\u7b49\uff0ci++\uff0c**\u5e76\u4e14n\u8981\u51cf\u53bbvis[i]\uff08i\u8fd9\u4e2a\u6570\u5b57\u5728\u7ed9\u51fa\u7684\u6570\u636e\u4e2d\u51fa\u73b0\u4e86\u51e0\u6b21\uff09**\n\n* \u8fd8\u6709\u4e00\u4e2a\u7279\u5224\u90a3\u5c31\u662f\u5982\u679cn<k\uff0c\u7ed9\u51fa\u7684\u6570\u636e\u90fd\u6ca1\u6709k\u4e2a\u6570\uff0c\u90a3\u5c31\u4e0d\u5b58\u5728\u7b2ck\u5c0f\u6574\u6570\uff0c\u6240\u4ee5\u76f4\u63a5\u8f93\u51faNO RESULT\u3002\n\n**\u6709\u4eba\u95ee\u90a3\u4f60\u600e\u4e48\u786e\u4fdd\u8f93\u51fa\u7684\u4e00\u5b9a\u662f\u7b2ck*\u5c0f*\u6574\u6570\u5462\uff0c\u5176\u5b9evis\u6570\u7ec4\u91cc\u9762\u7684\u4e0b\u6807\u90fd\u662f\u6309\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u6392\u5217\u7684\uff0c\u800ci\u4e5f\u662f\u4ece\u5c0f\u5f80\u5927\u9012\u589e\u7684\uff0c\u6240\u4ee5\u80fd\u4fdd\u8bc1\u5982\u679c\u5b58\u5728\u7b2ck\u5c0f\u6574\u6570\u7684\u8bdd\uff0c\u7a0b\u5e8f\u4e00\u5b9a\u80fd\u627e\u5230**\n    \n***\n    \n\u7a0b\u5e8f\u5982\u4e0b\uff08\u6211\u4e0d\u60f3\u5199\u6ce8\u91ca\u4e86\uff0c\u539f\u8c05\u7b14\u8005\u5427QAQ\uff08\u53ef\u601c\u516e\u516e.jpg\uff09\uff09    \n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,i,j,k,vis[10005],s,js;\nint main(){\n\tcin>>n>>k;\n\tif(n<k){\n\t\tcout<<\"NO RESULT\"<<endl;\n\t\treturn 0;\n\t}\n\tfor(i=1;i<=n;i++){\n\t\tcin>>s;\n\t\tvis[s]++;\n\t}\n\ti=1; \n\twhile(n){\n\t\tif(vis[i]==0){i++;continue;}\n\t\telse {\n\t\t\tjs++;\n\t\t\tif(js==k){cout<<i<<endl;return 0;}\n\t\t\telse {n=n-vis[i];i++;}\n\t\t}\n\t}\n\tcout<<\"NO RESULT\"<<endl;\n\treturn 0;\n}\n\n```",
        "postTime": 1542450398,
        "uid": 93178,
        "name": "lxy0070102",
        "ccfLevel": 0,
        "title": "\u7b2ck\u5c0f\u6574\u6570\u9898\u89e3"
    },
    {
        "content": "    \u8fd9\u662f\u4e00\u4e2aC++\u521d\u5b66\u8005\uff0c\u63a5\u89e6\u6d1b\u8c37\u4ec5\u51e0\u4e2a\u6708\uff0c\u56e0\u6b64\u4ee3\u7801\u7565\u663e\u590d\u6742\uff0c\u5e0c\u671b\u5927\u795e\u4eec\u80fd\u539f\u8c05\u3002\n    \n    \u4ee5\u4e0b\u662f\u6211\u7684\u4ee3\u7801\uff0c\u8fd9\u9898\u672c\u6765\u60f3\u7528\u5feb\u6392\uff0c\u540e\u9762\u8fd8\u662f\u8001\u8001\u5b9e\u5b9e\u7528\u4e86\u53bb\u91cd+\u9009\u62e9\u6392\u5e8f\n    \n    \u6211\u89c9\u5f97\u8fd9\u6837\u53ef\u80fd\u6bd4\u8f83\u597d\u7406\u89e3\uff0c\u671b\u7ba1\u7406\u5458\u901a\u8fc7\n\n```\n#include<iostream>\nusing namespace std;\nint n,MAXN=30001,i,k,p,changee,w;\nint  m=0,o,outt;\nint main(){\n\tint a[MAXN];\n\tcin>>n>>o;     //o\u5373\u9898\u76ee\u4e2d\u7684k\n\tfor(i=0;i<n;i++)   //\u8f93\u5165\u6570\u636e\n\tcin>>a[i];\n\tfor(i=0;i<n;i++){   //\u4ee5\u4e0b\u662f\u53bb\u91cd(\u4e24\u5c42\u5faa\u73af\uff09\n\t\tk=i;\n\t\tfor(p=i+1;p<=n;p++){\n\t\t\tif(a[k]==a[p]&&a[p]!=0){\n\t\t\ta[p]=0;\n\t\t\tm++;   //m\u4ee3\u8868\u91cd\u590d\u7684\u4e2a\u6570\n\t\t}\n\t\t}\n\t    }          //\u53bb\u91cd\u6b65\u9aa4\u7ed3\u675f\n\t\tfor(i=0;i<n;i++){    //\u4ee5\u4e0b\u662f\u9009\u62e9\u6392\u5e8f\uff08\u4e24\u5c42\u5faa\u73af\uff09\n\t\tw=i;     //i\u63a7\u5236\u5faa\u73af\u6b21\u6570\uff0cw\u7684\u529f\u80fd\u7c7b\u4f3c\u4e8e\u6307\u9488\n\t\tfor(k=i+1;k<n;k++){\n\t\t\tif(a[k]<a[w])\n\t\t\tw=k;     //\u53cd\u590d\u5faa\u73af\u5728\u6570\u7ec4\u4e2d\u9009\u62e9\n\t\t}\n\t\tif(w!=i){     //\u4ea4\u6362\u6570\u5b57\n\t\t\tchangee=a[w];\n\t\t\ta[w]=a[i];\n\t\t\ta[i]=changee; \n\t\t}\n\t}    //\u9009\u62e9\u6392\u5e8f\u7ed3\u675f\n\toutt=o+m-1;    //\u7279\u522b\u6ce8\u610f\u6570\u7ec4\u4e0b\u6807\u4ece0\u5f00\u59cb\uff0c\u56e0\u6b64\u8981\u628a\u8f93\u5165\u7684o(\u5373\u9898\u76ee\u4e2d\u7684k)\u51cf\u53bb1\n\tif(outt>=n)\n\tcout<<\"NO RESULT\"<<endl;   //\u53ef\u80fd\u51fa\u73b0\u7b2ck\u5c0f\u6574\u6570\u5927\u4e8e\u603b\u4f4d\u6570\u7684\u60c5\u51b5\uff0c\u6b64\u65f6\u201cNO RESULT\u201d\n\telse\n\tcout<<a[outt]<<endl;  //\u8f93\u51fa\u6570\u7ec4\u4e2d\u7684\u7b2coutt\u9879\n\treturn 0; \n} \n```\n\n\u8fd9\u91cc\u7279\u522b\u8bf4\u660e\u4e00\u4e0b\uff0c\u7a0b\u5e8f\u4e2d\u9009\u62e9\u6392\u5e8f\u6307\u4ece\u6570\u7ec4\u7b2c0\u9879\u5f00\u59cb\uff0c\u627e\u5230\u7b2c1\u2014\u2014\u7b2cN-1\u9879\u4e2d\u6700\u5c0f\u7684\u9879\u4e0e\u7b2c0\u9879\u4ea4\u6362\uff0c\u4e8e\u662f\u7b2c0\u9879\u4e2d\u4fbf\u662f\u6700\u5c0f\u7684\u6570\u4e86\u3002\n\u7136\u540e\u662f\u6570\u7ec4\u7b2c1\u9879\uff0c\u627e\u5230\u7b2c2\u2014\u2014\u7b2cN-1\u9879\u4e2d\u6700\u5c0f\u7684\u9879\u4e0e\u7b2c1\u9879\u4ea4\u6362\uff0c\u4e8e\u662f\u7b2c1\u9879\u4e2d\u4fbf\u662f\u7b2c\u4e8c\u5c0f\u7684\u6570\u4e86\u3002\n\n\u4ee5\u6b64\u63a8\u7c7b\u3002\u3002\u3002\u6700\u540e\u5c31\u53ef\u4ee5\u6392\u5e8f\u6210\u529f\u3002\n\n\u8fd9\u9898\u4e5f\u53ef\u7528\u5feb\u6392\u505a\uff0c\u4f46\u9898\u89e3\u91cc\u5df2\u7ecf\u6709\u5f88\u591a\u4e86\uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u5217\u51fa\u6765\u4e86\u3002",
        "postTime": 1528612157,
        "uid": 97583,
        "name": "\u8463w\u94ee",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "# \u6765\u4e00\u53d1\u7ebf\u6bb5\u6811\n\n\u6700\u8fd1\u8bf7\u6559\u4e86\u4e00\u4e0b\u5927\u4f6c\u600e\u4e48\u6c42\u5e8f\u5217\u5185\u7b2ck\u5927\u67e5\u8be2\uff0c\u81ea\u5df1\u53c8\u6363\u9f13\u4e86\u4e00\u4e0b\uff0c\u867d\u7136\u8fd8\u6ca1\u6709\u61c2\u5f97\u533a\u95f4\u7b2ck\u5927\u67e5\u8be2\uff0c\u4e0d\u8fc7\u59d1\u4e14\u505a\u4e00\u4e2a\u8bb0\u5f55\u5148\u5427\n\n\u56e0\u4e3a\u6bcf\u4e2a\u5143\u7d20\u5927\u5c0f\u53ef\u80fd\u5f88\u5927\u800c\u5143\u7d20\u4e4b\u95f4\u4e0d\u8fde\u7eed\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u79bb\u6563\u5316\u5904\u7406\u4e00\u4e0b\uff0c\u7a0b\u5e8f\u4e2d\u7684ori[ ]\u4ee3\u8868\u539f\u5e8f\u5217\uff0c\u79bb\u6563\u5316\u540e\u6bcf\u4e2akey\u5bf9\u5e94\u4e00\u4e2a\u503c\uff0cmem[ ]\u5b58\u7684\u662fkey\u5bf9\u5e94\u7684\u503c\uff1amem[i]\u4ee3\u8868\u79bb\u6563\u5316\u540e i \u4ee3\u8868\u7684\u503c\uff0ca[i]\u4ee3\u8868\u79bb\u6563\u5316\u540e\u6709\u51e0\u4e2ai\u5bf9\u5e94\u7684\u503c\uff08mem[i]\u7684\u4e2a\u6570\uff09\n\n\u79bb\u6563\u5316\u4e4b\u540e\u5efa\u6811\uff0csum\u4e2d\u5b58\u7684\u662f\u6709\u5e8f\u7684\u5143\u7d20\u603b\u4e2a\u6570\u5177\u4f53\u53ef\u4ee5\u770b\u7a0b\u5e8f\uff0c\u90a3\u4e48\u5982\u4f55\u67e5\u8be2\uff1f\u6211\u4eec\u67e5\u8be2\u7ebf\u6bb5\u6811\u7684sum\uff0c\u82e5tree[lid].sum >= k \uff0c\u8bf4\u660e\u7b2ck\u5927\u4e00\u5b9a\u5728\u5de6\u513f\u5b50\u533a\u95f4\uff0c\u56e0\u4e3a\u7ebf\u6bb5\u6811\u662f\u4ee5\u6709\u5e8f\u6570\u5217\u6765\u6784\u5efa\u7684\uff0c\u6bcf\u4e2a\u53f6\u5b50\u6392\u8d77\u6765\u662f\u6709\u5e8f\u7684\uff08\u62a0\u4e00\u4e0b\u624b\u6307\u5c31\u51fa\u6765\u4e86\uff09\uff0c\u8bf4\u660ek\u5728\u5de6\u8fb9\u3002\u540c\u7406 \u82e5 tree[lid].sum < k \u8bf4\u660e\u5de6\u8fb9\u5168\u90e8\u5728\u4e00\u8d77\u90fd\u6ca1\u6709 k \u4e2a\uff0c\u7b54\u6848\u81ea\u7136\u5c31\u5728\u53f3\u8fb9\u4e86\n\n\u56e0\u4e3a\u4ece\u53f3\u8fb9\u533a\u95f4\u51fa\u53d1\uff0c\u5df2\u7ecf\u6392\u9664\u5168\u90e8\u5de6\u8fb9\u8282\u70b9\u4e86\uff0c\u6240\u4ee5k\u8981\u51cf\u53bb\u5de6\u8fb9\u7684sum\n\n\u8fd9\u6837\u4e00\u76f4\u627e\u5230\u53f6\u5b50\u8282\u70b9\uff0c\u627e\u5230\u7684\u53f6\u5b50\u5bf9\u5e94\u7684\u5c31\u662f\u79bb\u6563\u5316\u540e\u7684key\u4e86\uff0c\u6211\u4eec\u518d\u5229\u7528mem\u8f93\u51fa\u5c31\u597d\u5566\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint RD(){\n    int out = 0,flag = 1;char c = getchar();\n    while(c < '0' || c >'9'){if(c == '-')flag = -1;c = getchar();}\n    while(c >= '0' && c <= '9'){out = out * 10 + c - '0';c = getchar();}\n    return flag * out;\n    }\n#define lid (id << 1)\n#define rid (id << 1) | 1\nconst int maxn = 100019;\nint num,k;\nint ori[maxn];\nint mem[maxn];\nstruct sag_tree{\n    int l,r,sum;\n    }tree[maxn << 2];\nint a[maxn];\nvoid build(int id,int l,int r){\n    tree[id].l = l;\n    tree[id].r = r;\n    if(l == r){\n        tree[id].sum = a[l];\n        return ;\n        }\n    int mid = (l + r) >> 1;\n    build(lid,l,mid);\n    build(rid,mid + 1,r);\n    tree[id].sum = tree[lid].sum + tree[rid].sum;\n    }\n\nint query(int id,int k){\n    if(tree[id].l == tree[id].r)return tree[id].l;\n    if(tree[lid].sum < k)return query(rid,k - tree[lid].sum);\n    else if(tree[lid].sum >= k)return query(lid,k);\n    }\n\nint main(){\n    num = RD();k = RD();\n    for(int i = 1;i <= num;i++){\n        ori[i] = RD();\n        }\n    sort(ori + 1,ori + 1 + num);\n    int n = 0;\n    for(int i = 1;i <= num;i++){\n        if(i == 1 || ori[i] != ori[i - 1]){\n            n++;//\u6700\u540e\u5f97\u5230\u7684k\u5c31\u662f\u5143\u7d20\u4e2a\u6570\n            }\n        a[n] = 1;//\u56e0\u4e3a\u8981\u53bb\u91cd\uff0c\u5c31\u4e0d\u662fa[n]++\u4e86\n        mem[n] = ori[i];\n        }\n    if(k > n){\n        cout<<\"NO RESULT\"<<endl;\n        return 0;\n        }\n    build(1,1,n);\n    cout<<mem[query(1,k)]<<endl;//\u9644\uff1a\u5176\u5b9e\u53ef\u4ee5\u76f4\u63a5\u8f93\u51famem[k]\u7684\u3002\u3002\u3002\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u601d\u8003\u4e00\u4e0b\u79bb\u6563\u5316\u7684\u529f\u80fd\n    return 0;\n    }\n```\n\n# \u62d3\u5c55\n\n\u63a8\u4e00\u4e0b\u53ef\u4ee5\u5f97\u5230\uff0c\u5e8f\u5217\u7b2ck\u5927\u5c31\u662f\u5e8f\u5217\u7b2c\uff08num - k + \uff11\uff09\u5c0f\uff0c\u6240\u4ee5\u4e5f\u5f88\u597d\u89e3\u51b3",
        "postTime": 1521195988,
        "uid": 56230,
        "name": "\u5929\u4e0a\u4e00\u9897\u86cb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <cstring>\n#include <vector>\n#include <cctype>\nusing namespace std;\nvector <int>a;\nint read()//\u767d\u9001\u4e2a\u5feb\u8bfb\u6a21\u677f\n{\n\tint x=0;char ch;short int neg=0;ch=getchar();\n\twhile(!isdigit(ch)){\n\t\tneg|=(ch=='-');ch=getchar();\n\t}\n\twhile(isdigit(ch)){\n\t\tx=x*10+ch-48;ch=getchar();\n\t}\n\treturn neg?-x:x;\n}\nint main()\n{\n\tint n,k;\n\tcin>>n>>k;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tregister int x=read();\n        a.insert(upper_bound(a.begin(),a.end(),x),x);\n\t}\n\n\t vector<int>::iterator p=unique(a.begin(),a.end());\n\t a.erase(p,a.end()); \n\t int len=a.size();\n\t if(len<k||k<0)cout<<\"NO RESULT\"<<endl;\n\t else cout<<a[k-1]<<endl;\n\treturn 0;\n}\n```\nI love vector\n\n- \u6ce8\u91ca\uff1a\n  - insert()\u63d2\u5165\n\n  - upper_bound()\n    \u5177\u4f53\u7528\u5904\u53ef\u53c2\u7167\u8fd9\u4f4ddalao\u7684\u535a\u5ba2\n     http://blog.csdn.net/kirito_acmer/article/details/46291117\n\n  - unique()\u53bb\u91cd\n\n    \u8fd4\u56de\u53bb\u91cd\u540e\u7684\u6570\u7ec4\u5c3e\u90e8\u6307\u9488\n\n  - erase()\u5220\u9664\n\n    \u6b64\u5904\u5220\u9664\u540e\u9762\u7684\u91cd\u590d\u5143\u7d20\uff0c\u56e0\u4e3aunique()\u53ea\u628a\u91cd\u590d\u7684\u5143\u7d20\u6dfb\u52a0\u5230\u5bb9\u5668\u672b\u5c3e\u6240\u4ee5\u6570\u7ec4\u5927\u5c0f\u5e76\u6ca1\u6709\u6539\u53d8\u3002\n  \n  - size()\u8fd4\u56de\u5143\u7d20\u4e2a\u6570\n\nvector\u548cSTL\u662f\u4e2a\u597d\u4e1c\u897f\uff0c\u5e0c\u671b\u5927\u5bb6\u591a\u4e0a\u7f51\u67e5\u9605\u4e9b\u535a\u5ba2\u8d44\u6599",
        "postTime": 1521192180,
        "uid": 61382,
        "name": "Rye_Catcher",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "\u6765\u4e00\u7bc7\u4e3b\u5e2d\u6811\u7684\u9898\u89e3,\u8fd9\u5c31\u662f\u4e00\u9053\u4e3b\u5e2d\u6811\u7684\u5165\u95e8\u677f\u5b50\u9898\n\n\u9898\u9762\u8981\u6c42\u91cd\u590d\u7684\u6570\u5b57\u53ea\u7b97\u4e00\u6b21,\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u53bb\u91cd(\u5f53\u7136,stl\u5927\u4f6c\u4eec\u53ef\u4ee5\u76f4\u63a5\u7528unique),\u7528\u53bb\u91cd\u540e\u7684\u6570\u5b57\u5efa\u4e00\u68f5\u6709\u524d\u7f00\u5173\u7cfb\u6811,\u8be2\u95ee\u5168\u90e8\u6570\u5b57\u4e2d\u7684\u7b2ck\u5c0f\n\n\u663e\u7136,\u5982\u679c\u53bb\u91cd\u540e\u7684\u6570\u5b57\u6ca1\u6709k\u4e2a,\u90a3\u662f\u4e00\u5b9a\u6ca1\u6709\u7b2ck\u5c0f\u7684,\u6b64\u65f6\u65e0\u89e3\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n#define re register\n#define N 100005\nint a[N],b[N],c[N];\nint cnt,m=1,n,k;\nint root[N],L[N*20],R[N*20],size[N*20]; \ninline void update(int A,int &B,int l,int r,int k){\n    B=++cnt;\n    size[B]=size[A]+1;\n    re int mid=l+r>>1;\n    if(l==r && r==k) return;\n    if(k<=mid) update(L[A],L[B],l,mid,k),R[B]=R[A];\n    else update(R[A],R[B],mid+1,r,k),L[B]=L[A];    \n}\ninline int query(int A,int B,int l,int r,int k){\n    while(l<r){\n        re int mid=l+r>>1;\n        re int lch=size[L[B]]-size[L[A]];\n        if(lch>=k) r=mid,B=L[B],A=L[A];\n        else l=mid+1,B=R[B],A=R[A],k-=lch;\n    }\n    return l;\n}\ninline int dy(){\n    scanf(\"%d%d\",&n,&k);\n    for(re int i=1;i<=n;++i)\n        scanf(\"%d\",&a[i]),b[i]=a[i]; \n    sort(b+1,b+1+n);\n    for(re int i=2;i<=n;++i)\n        if(b[i]!=b[m]) b[++m]=b[i]; // \u53bb\u91cd\n    if(k>m) {printf(\"NO RESULT\");return 0;}\n    for(re int i=1;i<=m;++i) c[i]=lower_bound(b+1,b+1+m,b[i])-b;  //\u79bb\u6563\u5316\n    for(re int i=1;i<=m;++i)\n        update(root[i-1],root[i],1,m,c[i]); //\u5efa\u6811\n    printf(\"%d\\n\",b[query(root[0],root[m],1,m,k)]); //\u8be2\u95ee\n    return 0;\n}\nint QAQ = dy();\nint main(){;}\n```",
        "postTime": 1510716755,
        "uid": 36080,
        "name": "\u51cc\u5e7d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "\u624d\u5199\u4e86\u4e00\u5957SBT\u5e73\u8861\u6811\u6a21\u677f\uff0c\u770b\u5230\u5c31\u521a\u597d\u62ff\u6765\u7528\u7528\u4e86\u3002\n\n\u8fd9\u9053\u9898\u53ea\u9700\u8981\u63d2\u5165\uff0c\u5220\u9664\uff0c\u4ee5\u53ca\u67e5\u8be2\u3002\n\n\u5728\u8f93\u5165\u65f6\u53ef\u4ee5\u7279\u5224\u53bb\u6389\u91cd\u590d\u7684\u6570\uff0c\u4e5f\u53ef\u4ee5\u5728INSERT\u64cd\u4f5c\u4e2d\u5224\u65ad\u3002\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint data[100010],R[100010],L[100010],s[100010],num=0,n;\nbool pd[10001];\nvoid RightRotate(int &x)//\u5de6\u65cb\u53f3\u65cb\u64cd\u4f5c\n{\n    int y;\n    y=L[x];\n    L[x]=R[y];\n    R[y]=x;\n    s[y]=s[x];\n    s[x]=s[R[x]]+s[L[x]]+1;\n    x=y;\n}\nvoid LeftRotate(int &x)\n{\n    int y;\n    y=R[x];\n    R[x]=L[y];\n    L[y]=x;\n    s[y]=s[x];\n    s[x]=s[L[x]]+s[R[x]]+1;\n    x=y;\n}\nvoid maintain(int &x,bool w)//\u7ef4\u62a4\u5e73\u8861\u6811\uff0c0\u4ee3\u8868\u5de6\u504f\uff0c1\u4ee3\u8868\u53f3\u504f\uff1b\n{\n    if(!w)\n    {\n        if(s[L[L[x]]]>s[R[x]])\n          RightRotate(x);\n        else if(s[R[L[x]]]>s[R[x]])\n        {\n            LeftRotate(L[x]);\n            RightRotate(x);\n        }\n        else\n          return;\n    }\n    else\n    {\n        if(s[R[R[x]]]>s[L[x]])\n          LeftRotate(x);\n        else if(s[L[R[x]]]>s[L[x]])\n        {\n            RightRotate(R[x]);\n            LeftRotate(x);\n        }\n        else\n          return;\n    }\n    maintain(L[x],0);\n    maintain(R[x],1);\n    maintain(x,0);\n    maintain(x,1);\n}\nvoid insert(int &x,int w) \n```\n{//\u5728x\u4e3a\u6839\u7684\u6811\u4e2d\u63d2\u5165\u503c\u4e3aw\u7684\u6570\u3002\u7528\u6765\u5efa\u6811\n```cpp\n    if(x==0)\n    {\n        x=++num;\n        data[x]=w;\n        s[x]=1;\n        L[x]=0;\n        R[x]=0;\n    }\n    else\n    {\n        s[x]++;\n        if(w<data[x])\n            insert(L[x],w);\n        else\n            insert(R[x],w);\n        maintain(x,w>=data[x]);        \n    }\n}\nint Delete(int &x,int w)\n```\n{//\u5728\u6839\u4e3ax\u7684\u6811\u4e2d\u5220\u9664\u503c\u4e3aw\u7684\u6570\n```cpp\n    s[x]--;int temp;\n    if(data[x]==w||(w<data[x]&&L[x]==0)||(w>data[x]&&R[x]==0))\n    {\n        temp=data[x];\n        if(!L[x]||!R[x])\n          x=L[x]+R[x];\n        else\n          data[x]=Delete(L[x],data[x]+1);\n        return temp;\n    }\n    else\n    {\n        if(w<data[x])temp=Delete(L[x],w);\n        else temp=Delete(R[x],w);\n        return temp;\n    }\n}\nint select(int &x,int w) \n```\n{//\u5728\u6839\u4e3ax\u7684\u6811\u4e2d\u67e5\u627e\u6392\u540d\u4e3aw\u7684\u6570\n```cpp\n    if(w==s[L[x]]+1)return data[x];\n    if(w<s[L[x]]+1)return select(L[x],w);\n    else return select(R[x],w-s[L[x]]-1);\n}\nint main()\n{\n    int k;\n    scanf(\"%d%d\",&n,&k);int del;int rt=0;\n    for(int t=1;t<=n;t++)\n    {\n        scanf(\"%d\",&del);\n        if(!pd[del])\u53bb\u91cd\n          {\n              insert(rt,del);\n              pd[del]=1;\n          }\n    }\n    int ans=select(rt,k);\n    if(!ans) printf(\"NO RESULT\");\n    else printf(\"%d\",ans);\n    return 0;\n}\n\n```",
        "postTime": 1507368496,
        "uid": 37495,
        "name": "DJOgoP",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "\u597d\u50cf\u697c\u4e0b\u6ca1\u4eba\u7528\u6876\u6392\u505a\u7684\uff0c\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u3002\u3002\u6211\u8fd9\u91cc\u5c31\u53d1\u4e00\u4efd\u6876\u6392\u9898\u89e3\uff0c\u601d\u8def\u7b80\u5355\uff0c\u8be6\u89c1\u7a0b\u5e8f\u3002\n\n\u4e0aAC\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\nusing namespace std;\nint n,k,a;\nint b[30005]; //\u6876\u6570\u7ec4\uff0c\u7528\u6765\u5b58\u50a8\u6bcf\u4e2a\u6570\u5b57\u6709\u591a\u5c11\u4e2a\nvoid init()\n{\n  scanf(\"%d%d\",&n,&k);\n  for(int i=1; i<=n; i++) \n  {\n   scanf(\"%d\",&a);\n   b[a]++; //\u8bfb\u5165\n  }\n}\nvoid bucketsort() //\u6876\u6392\u6807\u7a0b\uff0c\u4e0d\u4f1a\u770b\u4e66\u3002\uff08\u5176\u5b9e\u6211\u60f3\u9ed8\u9ed8\u8bf4\u4e00\u53e5\uff1a\u6876\u8fd9\u73a9\u610f\u513f\u7528\u5904\u771f\u4e0d\u5927\uff0c\u9664\u4e86\u6392\u5e8f\u6211\u4e5f\u60f3\u4e0d\u51fa\u6765\u5b83\u8fd8\u6709\u5565\u7528\u4e86\uff0c\u7136\u800c\u73b0\u5728\u90fd\u662f\u5feb\u6392\u5168\u8986\u76d6\u3002\u3002\uff09\n{\n  int sum=0,ans=0;\n  for(int i=1; i<=30000; i++)\n  {\n    if(b[i]>0) sum++; //\u7528\u6876\u6a21\u62df\n    if(sum==k) {ans=i; break; }\n  }\n  if(ans!=0) printf(\"%d\",ans); //\u4e0d\u4e3a\u96f6\u8f93\u51faans\n    else printf(\"NO RESULT\");\n}\nint main()\n{\n  init();\n  bucketsort();\n  return 0;\n} //\u7ed3\u675f\n```",
        "postTime": 1505400657,
        "uid": 9156,
        "name": "\u5fae\u96e8\u71d5\u53cc\u98de",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "\n\u5148\u8fdb\u884c\u6392\u5e8f\uff0c\u53bb\u91cd\uff0c\u5728\u8bb0\u5f55\u7b2c\u4e00\u4e2a\u91cd\u590d\u7684\u5143\u7d20\u8fdb\u884c\u5224\u65ad\u3002\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint main() {\n    int n,k,m;\n    cin>>n>>k;\n    int a[n+1];\n    for(int i=1; i<=n; i++)\n        cin>>a[i];\n    sort(a+1,a+n+1);\n    unique(a+1,a+n+1)-a;//\u53bb\u91cd\n    for(int i=1; i<=n; i++){\n        if(a[i+1]<=a[i]){\n            m=i;//\u8bb0\u5f55\u7b2c\u4e00\u4e2a\u91cd\u590d\u5143\u7d20\u7684\u8282\u70b9\n            break;//\u6ce8\u610f\u505c\u6b62\n        }\n    }\n    if(k<=m)cout<<a[k];\n    else cout<<\"NO RESULT\";\n    return 0;\n}\n```",
        "postTime": 1503470190,
        "uid": 48622,
        "name": "2016\u7ea78\u73edtaiqi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "\u542c\u8bf4\u8fd9\u9053\u9898\u53ef\u4ee5\u7528\u4f18\u5148\u961f\u5217\u6c34\u3002\n\n\n\u5c1d\u8bd5\u540e\u53d1\u73b0\u8dd1\u5f97\u7a0d\u5fae\u6162\u4e00\u4e9b..\n\n\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <cstdio>\n#include <queue>\n#include <vector>\nusing namespace std;\npriority_queue<int,vector<int>,greater<int> > q;\nint main() {\n    int n,k,ans,u=-233;\n    scanf(\"%d%d\",&n,&k);\n    for(int i=1;i<=n;i++) {\n        int a;\n        scanf(\"%d\",&a);\n        q.push(a);\n    }\n    while(k) {\n        if(q.empty()) {\n            printf(\"NO RESULT\");\n            return 0;\n        }\n        ans=q.top();\n        if(u!=ans) k--;\n        u=ans;\n        q.pop();\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1502611977,
        "uid": 47382,
        "name": "\u7531\u5e0c\u2740",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "#\u5feb\u6392+\u6a21\u62df\u8fc7\uff0c\u6bd4\u8f83\u9002\u5408\u4e0d\u61c2\u6876\u6d3e\u7684\u840c\u65b0\uff0c\n\n#\u6574\u4f53\u601d\u8def\u5927\u6982\uff1a\n\n##1\u3001\u8fdb\u884c\u6392\u5e8f\u3002\n\n##2\u3001\u8fdb\u884c\u6807\u8bb0\u3002\n\n##3\u3001\u5224\u65ad\u3002\n\n###\u8d34\u7a0b\u5e8f\n\n```cpp\n#include<bits/stdc++.h> //\u4e07\u80fd\u5934\u6587\u4ef6\nusing namespace std;\nint a[10001],b[30001];\nint main()\n{\n    int n,k,m=0;\n    cin>>n>>k;\n    for(int i=1; i<=n; i++)\n     cin>>a[i];     //\u8f93\u5165\n    sort(a+1,a+n+1);     //\u9996\u5148\u5feb\u6392\uff0c\u4ece\u5c0f\u5230\u5927\n    for(int i=1; i<=n; i++)\n     b[a[i]]=1;            //\u63a5\u7740\u628a\u6bcf\u4e2a\u6570\u5bf9\u5e94\u7684\u4e0b\u6807\u8fdb\u884c\u6807\u8bb0\n    for(int i=1; i<=a[n]; i++)\n     if(b[i]==1)       //\u5224\u65ad+\u8ba1\u7b97\u7b2ci\u5c0f\u6574\u6570\n     {\n      m++;\n      if(m==k)    //\u76f4\u5230\u7b49\u4e8ek\n      {\n       cout<<i;     //\u8f93\u51fa\n       return 0; \n      }\n     }\n     cout<<\"NO RESULT\";         //\u6700\u540e\u5f53\u6240\u6709\u60c5\u51b5\u4e0d\u6210\u7acb\uff0c\u8f93\u51faNO RESULT \n}\n\n```",
        "postTime": 1502200897,
        "uid": 40756,
        "name": "weige233",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "\u8c8c\u4f3c\u6ca1\u4eba\u7528set\uff08set\u5f88\u4f24\u5fc3\uff09\uff0c\u6240\u4ee5\u8d76\u7d27\u6c34\u4e00\u53d1\n\n\uff08\u8bb0\u5f97\u6ce8\u610f\u4e00\u4e9b\u7ec6\u8282\uff0c\u5c11\u4e00\u4e2a\u7b49\u53f7==WA 2\u4e2a\u70b9\uff09\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n    set <int> a; int n,k,i,q; cin>>n>>k; k--;\n    for(i=1;i<=n;i++) cin>>q,a.insert(q); q=a.size();\n    if(k>=q) {cout<<\"NO RESULT\"; return 0;}  \n    set<int>::iterator it=a.begin();\nfor(;k;k--) it++; cout<<*it;}\n```",
        "postTime": 1502167253,
        "uid": 21679,
        "name": "\u9999\u98ce\u667a\u4e43",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "\u3010\u5206\u6790\u3011\n\n\u6b64\u9898\u8bf4\u660e\u76f8\u540c\u5927\u5c0f\u7684\u6570\u53ea\u8ba1\u7b97\u4e00\u6b21\uff0c\u9898\u76ee\u6570\u636e\u53c8\u662f1\u2264ai\u226430000\uff0c\u5f88\u5bb9\u6613\u8ba9\u4eba\u60f3\u5230\u8ba1\u6570\u6392\u5e8f\uff08\u6876\u6392\u5e8f\uff09\uff0c\u901a\u8fc7\u8bb0\u5f55\u6570\u7ec4\u4e0b\u6807\u6765\u8fc7\u6ee4\u6389\u76f8\u540c\u7684\u6570\u3002\n\n\u7136\u540e\u901a\u8fc7\u4ece\u5c0f\u5230\u5927\u8ba1\u6570\uff0c\u76f4\u5230\u627e\u5230\u7b2ck\u5c0f\u7684\u6570\u3002\u5982\u679c\u5230\u4e86\u9876\u5934\u8fd8\u6ca1\u6709\u5230k\uff0c\u90a3\u4e48\u5c31\u662f\u627e\u4e0d\u5230\uff0c\u76f4\u63a5\u8f93\u51faNO RESULT\u5c31\u53ef\u4ee5\u4e86\u3002\n\n```cpp\n###var\n  b:array[1..30005] of boolean;\n  i,n,k,a,c:longint;\n(*procedure find(l,r:longint);//\u4e0d\u7528\u7ba1\nvar i,j,m,t:longint;\nbegin\n  i:=l;j:=r;m:=a[(l+r) div 2];\n  repeat\n    while a[i]<m do inc(i);\n    while a[j]>m do dec(j);\n    if i<=j then\n    begin\n      t:=a[i];\n      a[i]:=a[j];\n      a[j]:=t;\n      inc(i);dec(j);\n    end;\n  until i>j;\n  if (l<j) and (k<j) then find(l,j);\n  if (i<r) and (k>i) then find(i,r);\nend;*)\nbegin\n  readln(n,k);\n  for i:=1 to n do\n  begin\n    read(a);\n    b[a]:=true;//\u8bb0\u5f55a\u8fd9\u4e2a\u6570\u51fa\u73b0\u8fc7\u4e86\n  end;\n  //find(1,n);//\u901a\u8fc7\u7c7b\u4f3c\u5feb\u6392\u7684\u4ee3\u7801\u627e\u7b2cK\u5c0f\u7684\u6570\u4e0d\u8fc7\u4f1a\u91cd\u590d\u8ba1\u7b97\n  //writeln(a[k]);//\u8f93\u51fadik\u5c0f\u7684\u6570\n  for i:=1 to 30000 do\n  begin\n    if b[i] then inc(c);//\u5982\u679ci\u8fd9\u4e2a\u6570\u51fa\u73b0\u8fc7\u5c31\u7edf\u8ba1\u6b21\u6570\n    if c=k then begin writeln(i);halt;end;//\u627e\u5230\u4e86\u5c31\u7acb\u9a6c\u7ed3\u675f\u7a0b\u5e8f\u8d70\u4eba\n  end;\n  writeln('NO RESULT');//\u627e\u4e0d\u5230\u7b2cK\u5c0f\u7684\u6570\u5c31\u8f93\u51fa\u8fd9\u73a9\u610f\u513f\nend.\n```",
        "postTime": 1501662906,
        "uid": 37084,
        "name": "Yemaster",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "\u9898\u89e3\uff1a\n\n\n\u6b64\u9898\u5176\u5b9e\u5e76\u4e0d\u96be\uff0c\u90a3\u4e48\u601d\u8def\u5c31\u662f\u5c06\u6570\u636e\u6392\u5e8f\uff0c\u7136\u540e\u53bb\u91cd\u518d\u8f93\u51fa\uff0c\u5373\u53ef\u89e3\u51b3\u95ee\u9898\uff0c\u90a3\u4e48\u8fd9\u9898\u7684\u96be\u70b9\u5c31\u662f\u5982\u4f55\u5feb\u6377\u7684\u53bb\u91cd\u3002\u8bf7\u53c2\u8003\u4ee5\u4e0b\u6807\u7a0b\uff0c\u4ec5\u4f9b\u53c2\u8003\u3002\n\n\n```cpp\nvar i,j,p,q,k,n,m:longint;\n    a,b:array[1..10000] of longint;\nbegin\n  read(m,n);\n  for i:=1 to m do\n   begin\n    read(a[i]);\n   end;\n  for i:=1 to m do{\u672c\u4eba\u5929\u751f\u8f83\u61d2\uff0c\u6240\u4ee5\u8fd9\u91cc\u53ea\u7528\u4e86\u9009\u6392\uff0c\u90a3\u4e48\u6709\u5fd7\u8005\u53ef\u4ee5\u9009\u62e9\u5feb\u6392\uff0c\u53ef\u80fd\u4f1a\u66f4\u5feb\u4e9b}\n    for j:=i+1 to m do\n    begin\n      if a[i]>a[j] then begin\n        k:=a[i];a[i]:=a[j];a[j]:=k;\n      end;\n    end;\n  q:=1;{q\u662f\u8bb0\u5f55\u5ffd\u7565\u91cd\u590d\u6570\u5b57\u4ee5\u540e\u6570\u5b57\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u4f5c\u4e3a\u6307\u9488\u4f7f\u7528\uff0c\u4ee5\u4fbf\u8bb0\u5f55}\n  for i:=1 to m do{\u53bb\u91cd\uff0c\u8fd9\u4e00\u6b65\u5f88\u91cd\u8981\u4e5f\u548c\u5173\u952e}\n   begin{\u4ee5p\u4f5c\u4e3a\u53bb\u91cd\u7684\u6807\u51c6\u53d8\u91cf}\n     if p<>a[i] then begin{\u5f53\u540c\u4e00\u4e2a\u6570\u5b57\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u65f6\u5019\uff0c\u5c31\u5c06\u5176\u8bb0\u5f55\u4e3a\u6807\u51c6\u53d8\u91cf}\n       p:=a[i];b[q]:=a[i];{\u518d\u5c06\u6b64\u6570\u8bb0\u5f55\u5230\u76f8\u5e94\u7684\u6570\u7ec4\u4e2d}\n       inc(q);{\u5c06\u6307\u9488\u5f80\u540e\u63a8\u4e00\u683c}\n     end;\n   end;\n  if n>=q then write('NO RESULT'){\u56e0\u4e3a\u6307\u9488q\u5728\u6700\u540e\u4e00\u6b21\u8fd8\u4f1a\u52a01\uff0c\u6240\u4ee5\u5b83\u7684\u6700\u7ec8\u503c\u5e94\u8be5\u662f\u5ffd\u7565\u91cd\u590d\u540e\u6240\u6709\u6570\u5b57\u603b\u6570\u518d+1\uff0c\u90a3\u4e48\u5982\u679c\u8fd9\u4e2an\u8981\u662f\u5927\u4e8e\u7b49\u4e8eq\u7684\u8bdd\uff0c\u5c31\u4e0d\u4f1a\u6709\u7b54\u6848\uff0c\u5c31\u76f4\u63a5\u8f93\u51fa\u6ca1\u6709\u5c31\u597d\u4e86}\n  else write(b[n]);\nend.\n\u8fd9\u4e00\u9898\uff0c\u4e5f\u53ef\u4ee5\u8bf4\u662f\u4e00\u9053\u7ec3\u624b\u9898\uff0c\u800c\u8fd9\u53bb\u91cd\u7684\u65b9\u6cd5\u5bf9\u4e8e\u521d\u5b66\u8005\u6765\u8bf4\u5728\u4eca\u540e\u4e5f\u662f\u5927\u6709\u7528\u5904\uff0c\u6240\u4ee5\u8fd8\u8bf7\u540c\u5b66\u4eec\u597d\u597d\u53c2\u609f\uff0c\u5f97\u5176\u4e2d\u7cbe\u9ad3\u4e5f\u3002\n```",
        "postTime": 1501573488,
        "uid": 41677,
        "name": "\u30c7\u30b9",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "\u6ce8\u610f\u5230n<=10000,\u81ea\u7136\u60f3\u5230\u8fd0\u7528\u6876\u6392\u5e8f\u601d\u60f3\uff0c\u7ed5\u5f00\u76f8\u540c\u7684\u6570\u4e0d\u8ba1\u5165\u7684\u96be\u70b9\uff01\n\n\n\u6876\u6392\u5e8f\uff0c\u8d85\u7b80\u5355\uff01\n\n```cpp\n#include<iostream>\n#include<algorithm>//\u5e93\nusing namespace std;\nint main()\n{ \n    int i,j=1,k,h,n,m;\n    cin>>n>>k;\n    int a1[n+1],x[10001],a[n+1];//x[10001],\u8bbe\u5b9a10000\u4e2a\u6876\n    for(i=1;i<=10000;i++)\n    x[i]=0;//10000 \u4e2a\u6876\u521d\u59cb\u5316\u4e3a\u4e00\n    for(i=1;i<=n;i++)\n    {\n        cin>>a1[i];//\u8f93\u5165\u6570\n        x[a1[i]]++;//\u5bf9\u5e94\u7684\u00b7\u6876\u52a01\n    }\n    for(i=1;i<=10000;i++)\n    {\n        if(x[i]!=0)//\u5982\u679c\u6709\u8fd9\u4e2a\u6570\n        {\n            a[j]=i;//\u5b58\u5165a\u6570\u7ec4\n            j++;\n        }\n    }\n    sort(a+1,a+j);//\u5feb\u6392\n    if(k>j-1)//\u4e0d\u53ef\u80fd\u7684\u60c5\u51b5\n    cout<<\"NO RESULT\";\n    else\n     cout<<a[k];//\u8f93\u51fa\n    return 0;\n}\n```",
        "postTime": 1501067478,
        "uid": 48324,
        "name": "detect",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "\u672c\u5b9d\u5b9d\u5c31\u662f\u4e0d\u6392\u5e8f\uff0c\u6570\u7ec4\u5f04\u523030000\uff0c\u5e03\u5c14\u578b\u6216\u8005\u662f0..1\uff0c\u7279\u732e\u4e0aPascal\u4ee3\u7801\uff0c\u4e0d\u559c\u52ff\u55b7\uff0c\u8c22\u8c22\n\n```cpp\nvar\n a:array[1..30000]of 0..1;//\u8fd9\u4e2a\u6570\u7ec4\u662f\u6253\u6807\u8bb0\uff0c\u770b1\u523030000\u4e2d\u6709\u54ea\u4e9b\u6570\u51fa\u73b0\u8fc7\n n,k,i,x:longint;\nbegin\n readln(n,k);//\u8bfb\u5165\n fillchar(a,sizeof(a),0);//\u5f00\u59cb\u65f6\u628a30000\u4e2a\u6570\u7ec4\u5143\u7d20\u90fd\u7f6e\u4e3a0\n for i:=1 to n do begin\n  read(x);//\u8bfb\u5165\n  a[x]:=1;//\u8bfb\u5165\u4ee5\u540e\u628a\u8fd9\u4e2a\u6570\u5bf9\u5e94\u7684\u6570\u7ec4\u5143\u7d20\u7f6e\u4e3a1\n end;\n x:=0;//\u8bb0\u5f55\u5f53\u524d\u662f\u7b2c\u51e0\u5c0f\u7684\u6570\n for i:=1 to 30000 do begin\n  if a[i]=1 then inc(x);//\u5982\u679ci\u8fd9\u4e2a\u6570\u51fa\u73b0\u8fc7\uff0c\u51e0\u628a\u8ba1\u6570\u5668\u52a0\u4e00\n  if x=k then begin write(i);exit;end;//\u5982\u679c\u5230\u7b2ck\u5c0f\u4e86\uff0c\u5c31\u5148\u8f93\u51fa\uff0c\u518d\u9000\u51fa\u7a0b\u5e8f\n end;\n write('NO RESULT');//\u5982\u679c\u6ca1\u6709\u9000\u51fa\u7a0b\u5e8f\u6267\u884c\u5230\u8fd9\u4e00\u6b65\uff0c\u5c31\u8f93\u51fa\u65e0\u89e3\nend.\n```",
        "postTime": 1499141061,
        "uid": 41003,
        "name": "LMB_001",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9898\u4f18\u5316\u9009\u6392\u5c31\u53ef\u4ee5\u8fc7\uff0c\u4e0d\u5fc5\u7528\u5feb\u6392\n\n\u770b\u4e86\u770b\u697c\u4e0bdalao\u4eec\u7684\u4ee3\u7801\uff0c\u53d1\u73b0\u8c8c\u4f3c\u6ca1\u6709\u4eba\u7528\u4f18\u5316\u9009\u6392\uff0c\u4e8e\u662f\u51b3\u5b9a\u53d1\u4e2a\u4f18\u5316\u9009\u6392\u7684\u4ee3\u7801\uff08interesting\uff09\n\n\n```cpp\nvar a:array[1..10000]of longint;\n    n,i,k,j,t,m:longint;\nbegin\n  readln(n,k);\n  for i:=1 to n do read(a[i]);  \n  for i:=1 to k do             //\u4f18\u5316\u9009\u6392\u5f00\u59cb\uff01\n    begin\n      m:=i;\n      for j:=i+1 to n do\n        if a[m]>a[j] then m:=j;\n      if m<>i then\n        begin\n          t:=a[m];a[m]:=a[i];a[i]:=t;\n        end;\n    end;                       //\u8fd9\u5c31\u662f\u4f18\u5316\u9009\u6392\u8fa3\uff0c\u672c\u4eba\u849f\u84bb\u4e00\u53ea\uff0c\u6b22\u8fcedalao\u6307\u6559~\n  writeln(a[k]);\nend.\n```",
        "postTime": 1490094080,
        "uid": 24356,
        "name": "\u5f85\u6355\u6349\u840c\u65b0QwQ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "\u697c\u4e0b\u7684\u4ee3\u7801\u6211\u6ca1\u770b\u61c2\uff0c\u5176\u5b9e\u7ba1\u4ed6\u52a0\u6ca1\u52a0\u8fc7\u90fd\u80fd\u8fdb\uff0c\u53ea\u4e0d\u8fc7\u6700\u540e\u8981\u2018\u2019\u4e00\u89c6\u540c\u4ec1\u2018\u2019\u3002\n\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\nvar n,m,x,i,g:longint;a,b:array[0..30000] of longint;\nbegin\n   readln(n,m);\n   for i:=1 to n do\n   begin\n      read(x);\n      inc(a[x]);//\u5904\u7406\u6876\n   end;\n   for i:=0 to 30000 do\n   if a[i]<>0 then begin inc(g);b[g]:=i;end;//\u5982\u679c\u8fd9\u6570\u51fa\u73b0\u8fc7\uff0c\u628a\u5b83\u653e\u8fdbb\u6570\u7ec4\u91cc\u3002\n   if b[m]<>0 then writeln(b[m]) else writeln('NO RESULT'); //\u5047\u5982\u7b2ck\u5c0f\u6574\u6570\u6709\uff0c\u5219\u8f93\u51fa\uff0c\u53cd\u4e4b\u5219\u8f93\u51faNO RESULT\nend.\n\n```",
        "postTime": 1482646505,
        "uid": 33348,
        "name": "Kidd",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "\u8fd9\u9898\u65e0\u9700\u5feb\u6392\uff0c\u53ea\u9700\u7528\u4e00\u4e2a\u53d8\u6001\u7684\u6876\u6392\u5373\u53ef\u3002\n\n\u5229\u7528a\u8fd9\u4e2a\u7d2f\u52a0\u5668\uff0c\u5c31\u53ef\u4ee5\u89e3\u51b3\u91cd\u590d\u7684\u95ee\u9898\u3002\n\n=============================================================================\n\n```cpp\nvar a:array[1..30000] of longint;\n    i,z,n,k,sum:longint;\nbegin\n    readln(n,k);\n    for i:=1 to n do\n    begin\n        read(z);if a[z]=0 then inc(a[z]);  //\u505a\u4e00\u4e2a\u7d2f\u52a0\u5668\uff0c\u82e5\u4e3a0\uff0c\u5219\u4ee3\u8868\u5df2\u7ecf\u51fa\u73b0\u8fc7\n    end;\n    for i:=1 to 30000 do  //\u5bf9\u6bcf\u4e2a\u6570\u679a\u4e3e\n    begin\n        sum:=sum+a[i];  //\u7d2f\u52a0\uff0c\u6ca1\u51fa\u73b0\u5c31\u52a00\uff0c\u76f8\u5f53\u4e8e\u6ca1\u6709\u52a0\n        if sum>=k then break;  //\u4ee3\u8868\u5df2\u8fbe\u5230\u7b2ck\u5927\u7684\u6570\n    end;\n    if i<>30000 then write(i)  \n        else writeln('NO RESULT');  //\u6ca1\u627e\u5230\uff0c\u5c31\u8f93\u51faNO RESULT\nend.\n\n```",
        "postTime": 1477186041,
        "uid": 24997,
        "name": "cenbinbin",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "\u6bd4\u8f83\u7b80\u5355\u7684\u4e00\u9053\u6392\u5e8f\u9898\uff0c\u5373\u6392\u5e8f\u540e\u53bb\u91cd\uff0c\u5269\u4e0b\u7684\u6570\u6c42\u7b2ck\u5c0f\u5373\u53ef\u3002\u53ef\u4ee5\u5feb\u6392+\u66b4\u529b\u53bb\u91cd\u5b9e\u73b0\uff0c\u95f2\u6765\u65e0\u4e8b\uff08\u95f2\u7684\u86cb\u75bc\uff09\u4e5f\u53ef\u4ee5\u6253\u4e2a\u5e73\u8861\u6811\u3002\u6700\u540e\u8981\u6ce8\u610f\u5f53\u53bb\u91cd\u540e\u6570\u5b57\u4e2a\u6570\u5c0f\u4e8ek\u65f6\u8f93\u51faNO RESULT\u3002\n\n\n\n```cpp\n0. #include <cstdio>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint n,k,ans,a[10050];\nint main(){\n    scanf(\"%d%d\",&n,&k);\n    for (int i=1; i<=n; i++) scanf(\"%d\",&a[i]);\n    sort(a+1,a+n+1);\n    int now=0;\n    for (int i=1; i<=n; i++) {\n        if (a[i]!=a[i-1]) now++;\n        if (now==k) {\n            ans=a[i];\n            break;\n        }\n    }\n    if (!ans) printf(\"NO RESULT\"); else printf(\"%d\",ans);\n    return 0;\n}0.\n```",
        "postTime": 1476849057,
        "uid": 17939,
        "name": "Zoewilly",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "**#C++ STL\u79d2\u89e3**\n\n##\u601d\u8def\u90fd\u5dee\u4e0d\u591a\uff0c\u53ea\u4e0d\u8fc7\u6539\u4e3a\u7528<algorithm>\u7684\u7b97\u6cd5\u51fd\u6570\u6765\u7b80\u5316\u4e86\n\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n\nint n,k;\nint a[10000+5];\n\nint main(){\n    \n    scanf (\"%d%d\",&n,&k);\n    \n    for (int i=1;i<=n;i++)\n      scanf (\"%d\",&a[i]);\n    sort (a+1,a+n+1);    //\u8c03\u7528\u6392\u5e8f\u51fd\u6570SORT\n    \n    if (k>unique (a+1,a+n-1)-a-1)//unique()\u662f\u8fde\u7eed\u53bb\u91cd\u7684\uff0c\u8fd4\u56de\u503c\u662f\u6570\u7ec4\u6700\u540e\u4e00\u4e2a\u6570\u7684\u540e\u9762\u4e00\u4e2a\u7684\u5730\u5740\n      printf (\"NO RESULT\");           //\u6211\u4eec\u5c06\u4ed6\u7684\u8fd4\u56de\u503c\u51cf\u53bba[0]\u7684\u5730\u5740\u518d-1\u5c31\u662f\u8fd9\u4e2a\u6570\u7ec4\u5143\u7d20\u7684\u4e2a\u6570\u4e86\uff0c\u4ece\u800c\u53ef\u4ee5\u5224\u65adk\u662f\u5426\u8d85\u51fa\u8303\u56f4\n    else \n      printf (\"%d\",a[k]);\n    \n    return 0;\n    \n}\n```",
        "postTime": 1476847418,
        "uid": 22872,
        "name": "Xsy123456",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "```cpp\nvar\n  f:array[1..30000] of boolean;//\u7528\u4e8e\u5224\u65ad\n  i,t,k,n:longint;\nbegin\n  readln(n,k);//\u8bfb\u5165\n  for i:=1 to n do begin\n    read(t);\n    f[t]:=true;\n  end;\n  t:=0;\n  for i:=1 to 30000 do if f[i] then begin\n    inc(t);\n    if t=k then begin//\u5f53\u7b26\u5408\u6761\u4ef6\u65f6\u5f00\u59cb\n      write(i);\n      halt;//\u7ed3\u675f\u4efb\u52a1\n    end;\n  end;\n  writeln('NO RESULT');\nend.\n```",
        "postTime": 1476077772,
        "uid": 21991,
        "name": "ckyao1881",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "\u6211\u6765\u53d1\u4e00\u4e2a\u6876\u6392\u5e8f 23333\n\n\u4f5c\u4e3a\u65f6\u95f4\u590d\u6742\u5ea6\u6700\u5c0f\u7684\u6392\u5e8f\u65b9\u6cd5\uff0c\u6876\u6392\u5e8f\u56e0\u4e3a\u5176\u6050\u6016\u7684\u7a7a\u95f4\u4f7f\u7528\u800c\u88ab\u6253\u5165\u51b7\u5bab\u3002\u3002\u3002\n\n\u7136\u800c\u8fd9\u9898\u7684\u6570\u5f88\u5c0f\uff0c<=30000\uff0c\u4e0d\u7528\u62c5\u5fc3\u7206\u5185\u5b58\uff0c\u6240\u4ee5\u5c31\u53ef\u4ee5\u5149\u660e\u6b63\u5927\u5730\u7528\u6876\u6392\u55662333\n\n```cpp\n#include<cstdio>\n#define Runtime int                                    \u8bf7\u5ffd\u89c6\u8fd9\u4e00\u884c\n#define Error main                                    \u8fd8\u6709\u8fd9\u4e00\u884c\nint n,k,i,num,cnt,max;\nbool a[30010];\nRuntime Error(){                                    \u548c\u8fd9\u4e00\u884c\n    scanf(\"%d%d\",&n,&k);\n    for(i=1;i<=n;i++){\n        scanf(\"%d\",&num);\n        max=num>max?num:max;                    \u627e\u5230\u5f53\u524d\u7684\u6700\u5927\u6570\uff0c\u8282\u7701\u65f6\u95f4\n        a[num]=true;\n    }\n    for(i=1;i<=max;i++){\n        if(a[i]){                                    \u5047\u5982i\u8fd9\u4e2a\u6570\u5728\u6570\u5217\u91cc\n            cnt++;                                \u8fd9\u662f\u7b2c\u51e0\u4e2a\u6570\n            if(cnt==k){                            \u5982\u679c\u8fd9\u662f\u7b2ck\u4e2a\u6570\n                printf(\"%d\\n\",i);                    \u8f93\u51fa\n                return 0;\n            }\n        }\n    }\n    printf(\"NO RESULT\\n\");                            \u5982\u679c\u627e\u4e0d\u5230\u7b2ck\u4e2a\u6570\uff0c\u5219\u8f93\u51fa\u201cNO RESULT\u201d\n    return 0;\n}\n```",
        "postTime": 1472108614,
        "uid": 21903,
        "name": "vegetabird",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "```cpp\n//\u4e3a\u4ec0\u4e48\u6ca1\u4eba\u7528\u8ba1\u6570\u6392\u5e8f \uff0c\u53c8\u77ed\u53c8\u5feb\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nbool a[30010];\nint ma,n,i,k,x,t;\nint main()\n{\n    scanf(\"%d%d\",&n,&k);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&x);\n        if(!a[x]){a[x]=1;t++;ma=max(ma,x);}          \n    }\n    if(t<k) {printf(\"NO RESULT\");return 0;}\n    for(i=1;i<=ma;i++)\n    {\n        if(a[i]) k--;\n        if(!k) {printf(\"%d\",i);return 0;}\n    }\n}\n```",
        "postTime": 1470278642,
        "uid": 17964,
        "name": "yzz2016",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    },
    {
        "content": "## \u8fd9\u662f\u4e00\u9053\u6c34\u9898\n\n\u8fd9\u9053\u9898\u53ef\u4ee5\u7528\u6876\u6392\u5e8f\u7684\u601d\u8def\uff0c\u628a\u8f93\u8fdb\u53bb\u7684\u6570\u90fd\u5b58\u5728\u76f8\u5e94\u7684\u6570\u7ec4\u91cc\n\n[cqz\u5de8\u4f6c](https://www.luogu.com.cn/problem/P1138)\n\n\u9996\u5148\uff0c\u6211\u4eec\u8981\u5efa\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u6570\u7ec4 ans[30001]\n\n\u8fd9\u9053\u9898\u53ef\u4ee5\u5206\u4e3a\u4e09\u4e2a\u90e8\u5206\n\n\n------------\nNo.1  \u8f93\u5165\n```cpp\nfor(int i=1;i<=n;i++){\n\tcin>>a;\n\tans[a]=1;\n}\n```\nNo.2  \u5224\u65ad\n```cpp\nfor(int i=1;i<=30001;i++){\n\tif(ans[i]==1) num++;\n\tif(num==k){\n\t\tcout<<i;\n\t\tflag=1;\n\t\tbreak;\n\t}\n}\n```\n\u90a3\u4e48\u6211\u4eec\u4e3a\u4ec0\u4e48\u8981\u5efa\u4e00\u4e2a\u53ebFLAG\u7684\u6570\u7ec4\uff0c\u56e0\u4e3a\u5982\u679c\u672c\u9898\u4e0d\u6210\u7acb\uff0c\u8981\u8f93\u51faNO RESULT\n\n\u8fd9\u4e5f\u5c31\u662f\u6700\u540e\u4e00\u4e2a\u90e8\u5206\uff0c\u662f\u5426\u6210\u7acb\n```cpp\nif(flag==0) cout<<\"NO RESULT\";\n```\n\n\n------------\n\u6574\u4f53\u601d\u8def\u5c31\u8fd9\u6837\u4e86\uff0c\u6700\u540e\u7ed9\u4e00\u4e0bAC\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint ans[30001],n,k,a,num,flag;\nint main(){\n\tcin>>n>>k;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>a;\n\t\tans[a]=1;\n\t}\n\tfor(int i=1;i<=30001;i++){\n\t\tif(ans[i]==1) num++;\n\t\tif(num==k){\n\t\t\tcout<<i;\n\t\t\tflag=1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(flag==0) cout<<\"NO RESULT\";\n\treturn 0;\n}\n```\n\u6700\u540e\u795d\u67d0\u67d0\u67d0\u65b0\u5a5a\u5feb\u4e50(\u5212\u53bb\uff09\uff01\uff01\uff01\n\u6c42\u8d5e\uff01",
        "postTime": 1574850721,
        "uid": 112521,
        "name": "williamllk",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1138 \u3010\u7b2ck\u5c0f\u6574\u6570\u3011"
    }
]