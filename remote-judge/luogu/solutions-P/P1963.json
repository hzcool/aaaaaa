[
    {
        "content": "\u6211\u4eec\u5148\u4e0d\u8003\u8651\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u5148\u6765\u6c42\u51fa\u4e00\u79cd\u53ef\u884c\u89e3\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2ai\u503c\uff0c\u5b83\u6240\u5bf9\u5e94\u7684T\u503c\u5728\u6a21n\u610f\u4e49\u4e0b\u6700\u591a\u4e24\u4e2a\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u7528\u4e8c\u5206\u56fe\u5339\u914d\u6765\u5224\u65ad\u3002\n\n\u90a3\u5b57\u5178\u5e8f\u6700\u5c0f\u5462\uff1f\n\n~~\u56de\u987e\u4e00\u4e0b\u4e8c\u5206\u56fe\u5339\u914d\u7684\u7b97\u6cd5\uff1a\u7f51\u7edc\u6d41\uff1f\u8c8c\u4f3c\u4e0d\u597d\u505a\u5230\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u6765\u770b\u5308\u7259\u5229\u7b97\u6cd5~~\n\n\u5308\u7259\u5229\u7b97\u6cd5\u662f\u4ece1~n\u679a\u4e3e\u70b9\uff0c\u770b\u662f\u5426\u80fd\u5408\u6cd5\uff0c\u5982\u679c\u5b83\u8981\u7684\u8fb9\u6ca1\u88ab\u8fde\u5c31\u8fde\uff0c\u5982\u679c\u88ab\u8fde\u8fc7\u4e86\u5c31\u4e00\u76f4\u5224\u65ad\u662f\u5426\u6709\u529e\u6cd5\u53ef\u4ee5\u8ba9\u524d\u9762\u7684\u5339\u914d\u6362\u4e00\u79cd\u8fde\u63a5\u65b9\u5f0f\uff0c\u4fbf\u662f\u7528\u8fd9\u79cd\u8fde\u8fb9\u65b9\u5f0f\u3002\n\n\u5982\u679c\u5b9e\u5728\u6ca1\u6709\u529e\u6cd5\u4e86\uff0c\u5c31\u53ea\u80fd\u59d4\u5c48\u4e00\u4e0b\u81ea\u5df1\u4e86\u3002\n\n\u90a3\u4e48\u8fd9\u6837\u5339\u914d\u80fd\u5426\u4f7f\u5b57\u5178\u5e8f\u6700\u5c0f\u5462\uff1f\n\n\u663e\u7136\u662f\u4e0d\u884c\u7684\uff0c\u5373\u4f7f\u6211\u4eec\u8ba9\u7b2c\u4e00\u6761\u8fb9\u627e\u5230\u4e86\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u70b9\uff0c\u5982\u679c\u540e\u9762\u7684\u70b9\u8bf7\u6c42\u66f4\u6362\uff0c\u800c\u4e14\u6b63\u597d\u53c8\u53ef\u4ee5\u66f4\u6362\u627e\u5230\u66f4\u5927\u5339\u914d\uff0c\u90a3\u4e48\u5c31\u4e0d\u4e00\u5b9a\u662f\u5b57\u5178\u5e8f\u6700\u5c0f\u4e86~~\uff08\u6bd2\u7624\uff09~~\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u600e\u4e48\u505a\u5462\uff1f\n\n\u6211\u4eec\u9006\u5411\u601d\u7ef4\uff0c\u8003\u8651\u4ece\u540e\u5f80\u524d\u52a0\u8fb9\uff0c\u540e\u9762\u8fb9\u5148\u9009\u5b57\u5178\u5e8f\u5c0f\u7684\uff0c\u5982\u679c\u524d\u9762\u7684\u8fb9\u9700\u8981\u5c31\u76f4\u63a5\u7ed9\u4e86\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u5b57\u5178\u5e8f\u6700\u5c0f\u4e86\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define il inline\n#define re register\n#define debug printf(\"Now is Line : %d\\n\",__LINE__)\nil int read()\n{\n    re int x=0,f=1; re char c=getchar();\n    while(c<'0'||c>'9') {if(c=='-') f=-1;c=getchar();}\n    while(c>='0'&&c<='9') x=x*10+c-48,c=getchar();\n    return x*f;\n}\n#define maxn 10005\nint n,m,d[maxn],aa[2][maxn],vis[maxn],cnt,ans,match[maxn],to[maxn];\nbool dfs(int u)\n{\n    for(re int i=0;i<2;++i)\n    {\n        int v=aa[i][u];\n        if(vis[v]) continue;\n        vis[v]=1;\n        if(match[v]==-1||dfs(match[v])) return match[v]=u,to[u]=v,1;\n    }\n    return 0;\n}\nint main()\n{\n    n=read();\n    memset(match,-1,sizeof(match));\n    for(re int i=0;i<n;++i) d[i]=read();\n    for(re int i=0;i<n;++i)\n    {\n        int a=(i-d[i]+n)%n,b=(i+d[i])%n;\n        if(a>b) swap(a,b);\n        aa[0][i]=a,aa[1][i]=b;\n    }\n    for(re int i=n-1;~i;--i)\n    {\n        memset(vis,0,sizeof(vis));\n        if(dfs(i)) ++ans;\n    }\n    if(ans<n) return puts(\"No Answer\"),0;\n    for(re int i=0;i<n;++i) printf(\"%d \",to[i]);\n    return 0;\n}\n```",
        "postTime": 1548681854,
        "uid": 57014,
        "name": "Nemlit",
        "ccfLevel": 9,
        "title": "[NOI2009]\u53d8\u6362\u5e8f\u5217"
    },
    {
        "content": "**\u672c\u6765\u4e0d\u6253\u7b97\u5199\u9898\u89e3\u7684\uff0c\u4f46\u6211\u53d1\u73b0\u6d1b\u8c37\u4e0a\u51e0\u4e4e\u6ca1\u6709\u4e00\u7bc7\u9898\u89e3\u5bf9\u672c\u9898\u8fdb\u884c\u4e86\u7cfb\u7edf\u7684\u5206\u6790\uff0c\u5f88\u591a\u9898\u89e3\u7684\u65b9\u6cd5\u90fd\u662f\u56e0\u6570\u636e\u6c34\u548c\u672c\u9898\u7684\u7279\u6b8a\u6027\u8d28\u624d\u8fc7\u7684\uff0c\u6240\u4ee5\u5c31\u5199\u4e86\u672c\u7bc7\u8be6\u7ec6\u7684\u9898\u89e3\u3002**\n\n### \u601d\u8def\n\n\u9996\u5148\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $A_i$ \u6211\u4eec\u53ef\u4ee5\u5411 $T_{A_i+d_i}$\uff0c$T_{A_i-d_i}$\uff0c$T_{A_i-n+d_i}$\uff0c$T_{A_i+n-d_i}$ \u5206\u522b\u8fde\u8fb9\uff0c\u4e8e\u662f\u95ee\u9898\u8f6c\u5316\u4e3a\u6211\u4eec\u8981\u6c42\u4e00\u79cd\u65b9\u6848\uff0c\u4f7f\u6bcf\u4e00\u4e2a $A_i$ \u9700\u5bf9\u5e94\u4e00\u4e2a\u5b83\u8fde\u5411\u7684 $T$\uff0c\u5f88\u660e\u663e\u662f\u4e8c\u5206\u56fe\u5339\u914d\u3002\n\n\u5982\u679c\u4e0d\u80fd\u591f\u5b8c\u7f8e\u5339\u914d\uff0c\u5c31\u76f4\u63a5\u65e0\u89e3\u3002\n\n\u5426\u5219\u82e5\u4e0d\u7528\u6c42\u5b57\u5178\u5e8f\u6700\u5c0f\u5c31\u5f88\u7b80\u5355\u3002\u4f46\u56e0\u4e3a\u8981\u6c42\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u6211\u4eec\u5c31\u8003\u8651\u65b0\u5339\u914d\u4e00\u4e2a\u7684\u5f71\u54cd\u3002\u9996\u5148\u80af\u5b9a\u8981\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u4ed6\u7684\u513f\u5b50\uff08\u5b57\u5178\u5e8f\u6700\u5c0f\uff09\uff0c\u5982\u679c\u6709\u6ca1\u5339\u914d\u7684\uff0c\u5c31\u76f4\u63a5\u5339\u914d\u3002\u5426\u5219\u6211\u4eec\u5fc5\u987b\u53bb\u62a2\u4e00\u4e2a\u5df2\u7ecf\u5339\u914d\u7684\u3002\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u73b0\u5728\u5339\u914d\u8fd9\u4e2a\u70b9\u5b57\u5178\u5e8f\u4e00\u5b9a\u6700\u4f18\uff0c\u4f46\u4e0d\u80fd\u4fdd\u8bc1\u62a2\u7684\u70b9\u4ee5\u53ca\u589e\u5e7f\u8def\u4e0a\u7684\u5176\u5b83\u70b9\u6700\u4f18\u3002\u800c\u4e00\u4e2a\u5e8f\u5217\u7684\u5b57\u5178\u5e8f\u662f\u4ece\u524d\u5f80\u540e\u6bd4\u8f83\u7684\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u9700\u8981\u4fdd\u8bc1\u524d\u9762\u7684\u6700\u4f18\u3002\u4e8e\u662f\u6211\u4eec\u5012\u7740\u5339\u914d\uff0c\u5c31\u53ef\u4ee5\u5b8c\u6210\u672c\u9898\u4e86\u3002\n\n### \u601d\u8003\uff08\u91cd\u70b9\uff09\n\n\u4f46\u5176\u5b9e\u5728\u4e8c\u5206\u56fe\u5b8c\u7f8e\u5339\u914d\u4e2d\u76f4\u63a5\u5012\u7740\u5339\u914d\u662f**\u4e0d\u80fd**\u4fdd\u8bc1\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\uff0c\u53ea\u662f\u56e0\u4e3a\u672c\u9898\u6709\u7279\u6b8a\u6027\u8d28\u2014\u2014\u6bcf\u4e2a\u5de6\u8fb9\u7684\u70b9\u53ea\u4f1a\u6709\u4e24\u6761\u8fb9\u4e0e\u4e4b\u76f8\u8fde\u3002\u8fd9\u662f\u4e3a\u4ec0\u4e48\u5462\uff1f\u6211\u4eec\u5c06\u4ece\u4e09\u4e2a\u95ee\u9898\u5bf9\u6b64\u5206\u6790\u3002\n\n#### 1.\u4e3a\u4ec0\u4e48\u5728\u4e8c\u5206\u56fe\u5b8c\u7f8e\u5339\u914d\u4e2d\u76f4\u63a5\u5012\u7740\u5339\u914d\u4e0d\u80fd\u4fdd\u8bc1\u5b57\u5178\u5e8f\u6700\u5c0f\uff1f\n\n\u8fd9\u662f\u6211\u5728\u77e5\u4e4e\u4e0a\u627e\u5230\u7684\u4e00\u5f20\u56fe\uff1a\n\n![img](https://pic2.zhimg.com/v2-1dafb47f7eb9e3482133be3138623f51_b.png)\n\n\u7531\u56fe\u53ef\u89c1\uff0c\u5728\u7b2c\u4e94\u6b65\u5bfb\u627e\u589e\u5e7f\u8def\u65f6\uff0c$3$ \u53bb\u62a2\u4e86 $2$ \u6240\u5339\u914d\u7684 $5$\uff0c\u4f46 $2$ \u7684\u4f18\u5148\u7ea7\u662f\u9ad8\u4e8e $3$ \u7684\u3002\u63a8\u5e7f\u53ef\u77e5\uff0c\u867d\u7136\u5012\u7740\u5339\u914d\u53ef\u4ee5\u4fdd\u8bc1\u5f53\u524d\u7684\u6700\u5c0f\uff0c\u4f46\u56e0\u4e3a\u6709\u540e\u6548\u6027\uff0c\u540e\u9762\u7684\u589e\u5e7f\u8def\u53ef\u80fd\u4f1a\u4ea4\u53c9\uff0c\u5bfc\u81f4\u987a\u5e8f\u88ab\u6253\u4e71\u3002\u6240\u4ee5\u4e8c\u5206\u56fe\u5b8c\u7f8e\u5339\u914d\u4e2d\u76f4\u63a5\u5012\u7740\u5339\u914d\u662f\u4e0d\u80fd\u4fdd\u8bc1\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u3002\n\n#### 2.\u4e3a\u4ec0\u4e48\u5728\u6bcf\u4e2a\u5de6\u8fb9\u7684\u70b9\u6700\u591a\u53ea\u6709\u4e24\u6761\u8fb9\u4e0e\u4e4b\u76f8\u8fde\u7684\u4e8c\u5206\u56fe\u5b8c\u7f8e\u5339\u914d\u4e2d\u76f4\u63a5\u5012\u7740\u5339\u914d\u80fd\u4fdd\u8bc1\u5b57\u5178\u5e8f\u6700\u5c0f\uff1f\n\n\u8fd9\u662f\u4e00\u4e2a\u5f88\u5de7\u5999\u7684\u8bc1\u660e\uff0c\u6765\u81ea byvoid \u5927\u4f6c\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u4e0d\u505c\u5730\u9009\u62e9\u53f3\u8fb9\u53ea\u6709\u4e00\u6761\u8fde\u8fb9\u7684\u70b9\u3002\u7531\u4e8e\u8981\u8fbe\u5230\u5b8c\u7f8e\u5339\u914d\uff0c\u4e0e\u5b83\u76f8\u8fde\u7684\u5de6\u8fb9\u7684\u70b9\u5fc5\u987b\u4e0e\u5b83\u5339\u914d\u3002\u6240\u4ee5\u53ef\u4ee5\u628a\u90a3\u4e2a\u70b9\u8fde\u7684\u4e24\u6761\u8fb9\u5220\u6389\u3002\n\n\u6b64\u65f6\uff0c\u6240\u6709\u53f3\u8fb9\u5ea6\u6570\u4e3a $1$ \u7684\u70b9\u90fd\u88ab\u5220\u5b8c\u4e86\uff0c\u6240\u4ee5 $min\\ge2$\u3002\u800c\u53f3\u8fb9\u603b\u5ea6\u6570\u5f00\u59cb\u65f6\u4e3a $2n$\uff0c\u6bcf\u5339\u914d\u4e00\u4e2a\u70b9\u5ea6\u6570 $-2$\uff0c\u6240\u4ee5\u5047\u8bbe\u5269\u4e0b $k$ \u4e2a\u70b9\uff0c\u603b\u5ea6\u6570\u4e00\u5b9a\u4e3a $2n-2(n-k)=2k$\uff0c\u53c8\u56e0\u4e3a $min\\ge2$\uff0c\u6240\u4ee5\u6bcf\u4e2a\u53f3\u8fb9\u7684\u70b9\u5ea6\u6570\u90fd\u4e3a $2$\u3002\n\n\u7136\u540e\u56e0\u4e3a\u56fe\u4e2d\u6bcf\u4e2a\u70b9\u5ea6\u6570\u90fd\u4e3a $2$\uff0c\u6240\u4ee5\u88ab\u5206\u6210\u4e86\u82e5\u5e72\u4e2a\u5ea6\u6570\u4e3a $2$ \u7684\u73af\u3002\u5012\u7740\u5339\u914d\u7684\u8fc7\u7a0b\u4e2d\uff0c\u786e\u5b9a\u4e86\u4e00\u4e2a\u5339\u914d\u540e\uff0c\u4e24\u4e2a\u7aef\u70b9\u6240\u8fde\u7684\u53e6\u4e24\u4e2a\u70b9\u7684\u5339\u914d\u4e5f\u5c31\u786e\u5b9a\u4e86\uff0c\u4e00\u76f4\u5faa\u73af\u4e0b\u53bb\uff0c\u73af\u4e2d\u6240\u6709\u5269\u4f59\u7684\u5339\u914d\u4e5f\u5c31\u786e\u5b9a\u4e86\uff08\u81ea\u5df1\u6a21\u62df\u4e00\u4e0b\u6709\u52a9\u4e8e\u7406\u89e3\uff09\u3002\u6240\u4ee5\u867d\u7136\u6709\u540e\u6548\u6027\uff0c\u4f46\u5728\u540e\u9762\u7684\u8fc7\u7a0b\u4e2d\u53ea\u6709\u4e00\u79cd\u9009\u62e9\uff0c\u5c31\u4e00\u5b9a\u53ef\u4ee5\u4fdd\u8bc1\u5b57\u5178\u5e8f\u6700\u5c0f\u4e86\u3002\n\n#### 3.\u4e3a\u4ec0\u4e48\u672c\u9898\u4e2d\u6bcf\u4e2a\u5de6\u8fb9\u7684\u70b9\u53ea\u4f1a\u6709\u4e24\u6761\u8fb9\u4e0e\u4e4b\u76f8\u8fde\uff1f\n\n\u770b\u4f3c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $A_i$ \u6211\u4eec\u53ef\u4ee5\u5411 $T_{A_i+d_i}$\uff0c$T_{A_i-d_i}$\uff0c$T_{A_i-n+d_i}$\uff0c$T_{A_i+n-d_i}$ \u5206\u522b\u8fde\u8fb9\uff0c\u8fd9\u6837\u6bcf\u4e2a\u5de6\u8fb9\u7684\u70b9\u53ef\u80fd\u4f1a\u6709\u56db\u6761\u8fb9\u4e0e\u4e4b\u76f8\u8fde\u3002\u4f46\u5b9e\u9645\u4e0a\uff0c$A_i+d_i$ \u548c $A_i-n+d_i$ \u80af\u5b9a\u53ea\u4f1a\u6709\u4e00\u4e2a\u5728 $1$ \u81f3 $n$ \u8303\u56f4\u5185,$A_i-d_i$ \u548c $A_i+n-d_i$ \u4e5f\u4e00\u6837\uff0c\u6240\u4ee5\u6bcf\u4e00\u4e2a\u70b9\u90fd\u53ef\u4ee5\u6392\u9664\u4e24\u79cd\u60c5\u51b5\uff0c\u4ee5\u81f3\u672c\u9898\u4e2d\u6bcf\u4e2a\u5de6\u8fb9\u7684\u70b9\u53ea\u4f1a\u6709\u4e24\u6761\u8fb9\u4e0e\u4e4b\u76f8\u8fde\u3002\n\n\u73b0\u5728\uff0c\u6211\u4eec\u5df2\u7ecf\u89e3\u51b3\u4e86\u8fd9\u4e09\u4e2a\u95ee\u9898\u4e86\u3002\u4f46**\u5bf9\u4e8e\u4e00\u822c\u7684\u4e8c\u5206\u56fe\u5b8c\u7f8e\u5339\u914d\uff0c\u6c42\u6700\u5c0f\u5b57\u5178\u5e8f\u7684\u901a\u89e3**\u662f\u4ec0\u4e48\u5462\uff1f\n\n#### \u7b97\u6cd5 1:\n\n\u679a\u4e3e\u5168\u6392\u5217\uff0c\u518d\u770b\u80fd\u5426\u5b8c\u7f8e\u5339\u914d\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(2^nmn)$\u3002\n\n#### \u7b97\u6cd5 2:\n\n\u4ece\u524d\u5f80\u540e\u679a\u4e3e\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u4ece\u5c0f\u5230\u5927\u5047\u8bbe\u5b83\u4e0e\u8c01\u5339\u914d\uff0c\u5982\u679c\u5b83\u5339\u914d\u540e\u5269\u4e0b\u7684\u56fe\u4ecd\u6784\u6210\u5b8c\u7f8e\u5339\u914d\uff0c\u5c31\u8bf4\u660e\u5b83\u53ef\u4ee5\u4e0e\u5f53\u524d\u513f\u5b50\u5339\u914d\uff0c\u5220\u6389\u8fd9\u4e2a\u70b9\u4e0e\u5176\u5339\u914d\u70b9\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(m^2n)$\u3002\n\n#### \u7b97\u6cd5 3:\n\n\u5728\u7b97\u6cd5 2 \u4e2d\uff0c\u6bcf\u5047\u8bbe\u5f53\u524d\u70b9 $x$ \u4e0e\u67d0\u4e2a\u70b9 $y$ \u5339\u914d\uff0c\u5c31\u8981\u5bf9\u6574\u4e2a\u56fe\u8dd1\u4e00\u6b21\u4e8c\u5206\u56fe\u5339\u914d\uff0c\u4f46\u5b9e\u9645\u4e0a\u5927\u591a\u70b9\u5728\u8fd9\u6b21\u5339\u914d\u64cd\u4f5c\u540e\u662f\u6ca1\u6709\u5f71\u54cd\u7684\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5148\u5728\u5f00\u59cb\u65f6\u5bf9\u6574\u4e2a\u56fe\u8dd1\u4e00\u6b21\u4e8c\u5206\u56fe\u5339\u914d\u3002\u7ecf\u8fc7\u5206\u6790\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u628a $x$ \u4e0e $y$ \u5339\u914d\u53ea\u4f1a\u5f71\u54cd\u4e24\u4e2a\u70b9\uff1a\u76ee\u524d\u4e0e $x$ \u5339\u914d\u7684\u70b9\u4e0e\u76ee\u524d\u4e0e $y$ \u5339\u914d\u7684\u70b9\u3002\u6240\u4ee5\u6bcf\u6b21\u53ea\u7528\u5bf9\u5f71\u54cd\u7684\u8fd9\u4e24\u4e2a\u70b9\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u70b9\u8dd1\u4e00\u6b21\u589e\u5e7f\u8def\u5c31\u53ef\u4ee5\u4e86\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(m(m+n))$\u3002\n\n\u81f3\u6b64\uff0c\u6211\u4eec\u5df2\u7ecf\u627e\u5230\u4e86\u5728\u8f83\u4f4e\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u5bf9\u4e00\u822c\u7684\u4e8c\u5206\u56fe\u5b8c\u7f8e\u5339\u914d\u6c42\u6700\u5c0f\u5b57\u5178\u5e8f\u7684\u65b9\u6cd5\u4e86\u3002\u5bf9\u4e8e\u4e0d\u662f\u5b8c\u7f8e\u5339\u914d\u7684\uff0c\u9700\u8981\u901a\u8fc7\u7f51\u7edc\u6d41\u5b9e\u73b0\uff0c\u7531\u4e8e\u6211\u8fd8\u6ca1\u5b66\u7f51\u7edc\u6d41\uff0c\u6240\u4ee5\u65e0\u6cd5\u5728\u6b64\u5c55\u5f00\u53d9\u8ff0\u3002\n\n### \u4ee3\u7801\n\n\u5012\u7740\u5339\u914d\u7684\u65b9\u6cd5\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int M=1e4+5;\nint n,m,x[M],ans,linkx[M],linky[M];\nbool vis[M];\nvector<int> son[M];\nint dfs(int k)\n{\n\tif(vis[k]==1) return 0;\n\tvis[k]=1;\n\tfor(int a=0;a<son[k].size();a++)\n\t{\n\t\tint s=son[k][a];\n\t\tif(linky[s]==0||dfs(linky[s])==1)\n\t\t{\n\t\t\tlinkx[k]=s;\n\t\t\tlinky[s]=k;\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn 0;\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int a=1;a<=n;a++) scanf(\"%d\",&x[a]);\n\tfor(int a=1;a<=n;a++)\n\t{\n\t\tif(a+x[a]<=n) son[a].push_back(a+x[a]);\n\t\tif(a-x[a]>=1) son[a].push_back(a-x[a]);\n\t\tif(a+n-x[a]<=n) son[a].push_back(a+n-x[a]);\n\t\tif(a-n+x[a]>=1) son[a].push_back(a-n+x[a]);\n\t\tif(son[a].size()!=0) sort(son[a].begin(),son[a].end());\n\t}\n\tfor(int a=n;a>=1;a--)\n\t{\n\t\tmemset(vis,0,sizeof(vis));\n\t\tans+=dfs(a);\n\t}\n\tif(ans<n)\n\t{\n\t\tprintf(\"No Answer\\n\");\n\t\treturn 0;\n\t}\n\tfor(int a=1;a<=n;a++) printf(\"%d \",linkx[a]-1);\n}\n```\n\n\u901a\u89e3\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int M=1e4+5;\nint n,m,x[M],ans,linkx[M],linky[M];\nbool vis[M],exi[2*M];\nvector<int> son[M];\nint dfs(int k)\n{\n\tif(vis[k]==1||exi[k]==0) return 0;\n\tvis[k]=1;\n\tfor(int a=0;a<son[k].size();a++)\n\t{\n\t\tint s=son[k][a];\n\t\tif(exi[n+s]==0) continue;\n\t\tif(linky[s]==0||dfs(linky[s])==1)\n\t\t{\n\t\t\tlinkx[k]=s;\n\t\t\tlinky[s]=k;\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn 0;\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int a=1;a<=n;a++) scanf(\"%d\",&x[a]);\n\tfor(int a=1;a<=n;a++)\n\t{\n\t\tif(a+x[a]<=n) son[a].push_back(a+x[a]);\n\t\tif(a-x[a]>=1) son[a].push_back(a-x[a]);\n\t\tif(a+n-x[a]<=n) son[a].push_back(a+n-x[a]);\n\t\tif(a-n+x[a]>=1) son[a].push_back(a-n+x[a]);\n\t\tif(son[a].size()!=0) sort(son[a].begin(),son[a].end());\n\t}\n\tfor(int a=1;a<=2*n;a++) exi[a]=1;\n\tfor(int a=1;a<=n;a++)\n\t{\n\t\tmemset(vis,0,sizeof(vis));\n\t\tans+=dfs(a);\n\t}\n\tif(ans<n)\n\t{\n\t\tprintf(\"No Answer\\n\");\n\t\treturn 0;\n\t}\n\tfor(int a=1;a<=n;a++)\n\t{\n\t\tfor(int b=0;b<son[a].size();b++)\n\t\t{\n\t\t\tint s=son[a][b];\n\t\t\tbool check=0;\n\t\t\tif(linkx[a]==s) check=1;\n\t\t\telse\n\t\t\t{\n\t\t\t\texi[a]=exi[n+s]=0;\n\t\t\t\tlinky[linkx[a]]=0;\n\t\t\t\tmemset(vis,0,sizeof(vis));\n\t\t\t\tif(dfs(linky[s])==1) check=1;\n\t\t\t\telse linky[linkx[a]]=a;\n\t\t\t\texi[a]=exi[n+s]=1;\n\t\t\t}\n\t\t\tif(check==1)\n\t\t\t{\n\t\t\t\texi[a]=exi[n+s]=0;\n\t\t\t\tprintf(\"%d \",s-1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n```",
        "postTime": 1655987872,
        "uid": 404107,
        "name": "10000point",
        "ccfLevel": 0,
        "title": "[NOI2009] \u53d8\u6362\u5e8f\u5217"
    },
    {
        "content": "\u600e\u4e48\u4e2a\u4e2a\u90fd\u662f$n^2$\u7684\u505a\u6cd5..\n\u6211\u6765\u5199\u4e2a$O(n)$\u7684\n\n\u663e\u7136\u4e00\u4e2a\u4f4d\u7f6e\u6700\u5bf9\u53ea\u80fd\u548c\u4e24\u4e2a\u70b9\u5339\u914d\uff0c\u90a3\u6211\u4eec\u628a\u8fd9\u4e24\u4e2a\u70b9\u8fde\u8d77\u6765\n\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u8fd9\u4e0d\u662f\u4e00\u4e2a\u57fa\u73af\u68ee\u6797\u90a3\u4ed6\u5c31\u51c9\u51c9\u565c\n\n\u56e0\u4e3a\u8fd9\u6837\u7684\u8bdd\u4f1a\u6709\u67d0\u4e9b\u70b9\u662f\u5b64\u7acb\u70b9\u6216\u8005\u51fa\u73b0\u4e86\u6811\u4e4b\u7c7b\u7684\u7136\u540e\u5c31gg\u4e86\n\n\u7136\u540e\u53c8\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u7ed9\u8fd9\u4e2a\u73af\u5b9a\u5411\u4e86\u4e4b\u540e\uff0c\u90a3\u4e48\u8fd9\u68f5\u6811\u4e0a\u7684\u6bcf\u4e2a\u70b9\u9009\u62e9\u8c01\u662f\u56fa\u5b9a\u7684\n\n\u5b9a\u5411\u5c31\u4ee3\u8868\u5047\u5982\u4f60\u9009\u62e9\u4e86x->y\uff0c\u90a3\u4e48\u8fd9\u6761\u8fb9\u4ee3\u8868\u7684\u4f4d\u7f6e\u5c31\u9009\u62e9\u4e86y\u8fd9\u4e2a\u70b9\u5339\u914d\n\u5426\u5219\u5c31\u662fx\u8fd9\u4e2a\u70b9\n\n\u90a3\u66b4\u529b\u5b9a\u5411\u4e00\u4e0b\u518d\u66b4\u529bcheck\u2026\n\n\u5982\u679c\u4f60\u7528\u57fa\u6570\u6392\u5e8f\u90a3\u4e48\u5c31\u662f$O(n)$\u7684\u4e86\n\n\u6240\u4ee5\u8fd9\u9898\u5176\u5b9e\u5b8c\u5168 \u5b8c\u5168\u53ef\u4ee5\u51fa\u5230$n=1000000$\u7684..\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<algorithm>\n#include<cmath>\n#include<queue>\n#include<vector>\n#include<ctime>\n#include<map>\n#include<bitset>\n#include<set>\n#define LL long long\n#define mp(x,y) make_pair(x,y)\n#define pll pair<long long,long long>\n#define pii pair<int,int>\nusing namespace std;\ninline int read()\n{\n\tint f=1,x=0;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nint stack[20];\ninline void write(LL x)\n{\n\tif(x<0){putchar('-');x=-x;}\n    if(!x){putchar('0');return;}\n    int top=0;\n    while(x)stack[++top]=x%10,x/=10;\n    while(top)putchar(stack[top--]+'0');\n}\ninline void pr1(int x){write(x);putchar(' ');}\ninline void pr2(LL x){write(x);putchar('\\n');}\nconst int MAXN=10005;\nstruct edge{int x,y,op,next;}a[2*MAXN];int len,last[MAXN];\nvoid ins(int x,int y,int op){len++;a[len].x=x;a[len].y=y;a[len].op=op;a[len].next=last[x];last[x]=len;}\n\nint rt[MAXN],num[MAXN],S[MAXN],T[MAXN],g[MAXN],n;\nint findrt(int x){return rt[x]==x?rt[x]:rt[x]=findrt(rt[x]);}\n\nint ans[MAXN];\nstruct node\n{\n\tint x,u;\n\tnode(){}\n\tnode(int _x,int _u){x=_x;u=_u;}\n}w1[MAXN],w2[MAXN];int tot;\nbool cmp(node n1,node n2){return n1.x<n2.x;}\nint vis[MAXN],tim;\nvoid dfs(int x,int fa,int o)\n{\n\tfor(int k=last[x];k;k=a[k].next)\n\t{\n\t\tint y=a[k].y;\n\t\tif(y!=fa&&vis[y]!=tim)\n\t\t{\n\t\t\tvis[y]=tim;\n\t\t\tif(!o)w1[++tot]=node(a[k].op,y);\n\t\t\telse w2[++tot]=node(a[k].op,y);\n\t\t\tdfs(y,x,o);\n\t\t}\n\t}\n}\nint main()\n{\n\tn=read();\n\tfor(int i=1;i<=n;i++)rt[i]=i;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint gg=read();\n\t\tint u=i-gg;if(u<=0)u+=n;\n\t\tint v=i+gg;if(v>n)v-=n;\n\t\tint p=findrt(u),q=findrt(v);\n\t\tif(p!=q)ins(u,v,i),ins(v,u,i),rt[p]=q,num[q]+=num[p],S[q]=max(S[q],S[p]),T[q]=max(T[q],T[p]),g[q]=max(g[q],g[p]);\n\t\telse\n\t\t{\n\t\t\tif(num[p])return puts(\"No Answer\"),0;\n\t\t\tnum[p]++;\n\t\t\tS[p]=u;T[p]=v;g[q]=i;\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)if(findrt(i)==i)\n\t{\n\t\ttim++;w1[tot=1]=node(g[i],S[i]);\n\t\tdfs(S[i],0,0);\n\t\ttim++;w2[tot=1]=node(g[i],T[i]);\n\t\tdfs(T[i],0,1);\n\t\tsort(w1+1,w1+1+tot,cmp);sort(w2+1,w2+1+tot,cmp);\n\t\tbool tf=false;\n\t\tfor(int j=1;j<=tot;j++)\n\t\t{\n\t\t\tif(w1[j].u<w2[j].u){tf=true;break;}\n\t\t\tif(w1[j].u>w2[j].u)break;\n\t\t}\n\t\tif(tf)for(int j=1;j<=tot;j++)ans[w1[j].x]=w1[j].u-1;\n\t\telse for(int j=1;j<=tot;j++)ans[w2[j].x]=w2[j].u-1;\n\t}\n\tfor(int i=1;i<n;i++)pr1(ans[i]);\n\tpr2(ans[n]);\n\treturn 0;\n}\n\n```",
        "postTime": 1549891115,
        "uid": 29367,
        "name": "Rose_max",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1963 \u3010[NOI2009]\u53d8\u6362\u5e8f\u5217\u3011"
    },
    {
        "content": "\u611f\u89c9\u697c\u4e0b\u7684\u9898\u89e3\u90fd\u6ca1\u6709\u8bf4\u6e05\u695a\u4e3a\u4ec0\u4e48QAQ\n\n\n----------------\n\n\n## \u601d\u8def\n\n\u8fd9\u4e2a\u9898\u76ee\u53ef\u4ee5\u770b\u51fa\u4f60\u771f\u6b63\u7406\u89e3\u4e86\u5308\u7259\u5229\u7b97\u6cd5\u6ca1\u6709\u3002\n\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u5efa\u7acb\u4e8c\u5206\u56fe\u7684\u6a21\u578b\uff1a\u6bcf\u4e2a\u4f4d\u7f6e\u53ef\u4ee5\u67092\u79cd\u53d6\u503c\uff0c\u4e8e\u662f\u6211\u4eec\u628a\u4f4d\u7f6e\u4f5c\u4e3a\u5de6\u8fb9\u7684\u70b9\uff0c\u53d6\u503c\u4f5c\u4e3a\u53f3\u8fb9\u7684\u70b9\u3002\u7136\u540e\u8fdb\u884c\u4e8c\u5206\u56fe\u5339\u914d\uff0c\u53ea\u8981\u6709\u5b8c\u7f8e\u5339\u914d\uff0c\u5b8c\u7f8e\u5339\u914d\u5c31\u662f\u4e00\u4e2a\u53ef\u884c\u89e3\u3002\n\n\n\u518d\u8003\u8651\u9898\u9762\u4e2d\u6700\u4f18\u6027\u7684\u8981\u6c42\u3002\u5bf9\u4e8e\u5b57\u5178\u5e8f\u95ee\u9898\uff0c\u6211\u4eec\u5e38\u5e38\u6309\u7167\u5b57\u5178\u5e8f\u679a\u4e3e\u3002\u4e8e\u662f\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u679a\u4e3e\uff1a\u4ece\u4e0a\u5f80\u4e0b\u679a\u4e3e\u5de6\u8fb9\u7684\u70b9\uff0c\u6309\u7167\u5b57\u5178\u5e8f\u679a\u4e3e\u548c\u53f3\u8fb9\u7684\u54ea\u4e2a\u70b9\u5339\u914d\uff0c\u518d\u770b\u9664\u5f00\u5339\u914d\u4e86\u7684\u4e24\u4e2a\u70b9\u5269\u4e0b\u7684\u90a3\u4e2a\u56fe\u4e2d\u6709\u6ca1\u6709\u5b8c\u7f8e\u5339\u914d\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff1a\u4e0d\u59a8\u8bbe\u5de6\u8fb9\u7684\u70b9$u_i$\u548c\u53f3\u8fb9\u7684\u70b9$v_i,v_i'$\u8fde\u4e86\u8fb9\u3002\u9996\u5148\u5c1d\u8bd5\u5339\u914d$(u_i, v_i)$\u3002\u5728\u9664\u5f00\u4e86\u8fd9\u6761\u8fb9\u4ee5\u53ca\u8fd9\u6761\u8fb9\u4e4b\u524d\u4ee5\u53ca\u5339\u914d\u7684\u5b50\u56fe\u540e\uff0c\u770b\u5269\u4e0b\u7684\u56fe\u6709\u65e0\u5b8c\u7f8e\u5339\u914d\u3002\u5982\u679c\u6709\uff0c\u5c31\u9009\u5b9a$(u_i,v_i)$\uff0c\u5426\u5219\u5c1d\u8bd5\u9009\u5b9a$(u_i, v_i')$\u3002\u5982\u679c$(u_i, v_i')$\u8fd8\u4e0d\u884c\u7684\u8bdd\u5c31\u8bf4\u660e\u65e0\u89e3\u3002\n\n\u7531\u4e8e\u679a\u4e3e\u5de6\u8fb9\u7684\u70b9\u662f$O(n)$\u7684\uff0c\u5308\u7259\u5229\u7b97\u6cd5\u662f$O(nm)=O(n^2)$\u7684\uff08\u8fb9\u6570\u662f$O(n)$\u7684\uff09\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u590d\u6742\u5ea6\u662f$O(n^3)$\u7684\uff0c\u6709\u4e9b\u9ad8\u3002\n\n\n\u8fd9\u65f6\u5c31\u8981\u8ffd\u5bfb\u5308\u7259\u5229\u7b97\u6cd5\u7684\u672c\u8d28\u4e86\u3002\u4e0d\u59a8\u8bbe\u5de6\u8fb9\u70b9\u96c6\u4e3aX\uff0c\u53f3\u8fb9\u7684\u4e3aY\uff0c\u90a3\u4e48\u5308\u7259\u5229\u7b97\u6cd5\u662f\u540e\u9762\u7684X\u70b9\u628aY\u70b9\u4ee5\u524d\u5339\u914d\u7684X\u70b9\u201c\u6324\u6389\u201d\u7684\u8fc7\u7a0b\uff0c\u56e0\u4e3a\u6bcf\u6b21\u4ece\u67d0\u4e2aX\u70b9$u$\u5f00\u59cb\u589e\u5e7f\uff0c\u90fd\u4f1a\u8bd5\u7740\u8ba9`mat[v] = u`\u3002\u5982\u679c\u6211\u4eec\u8ba9\u5b57\u5178\u5e8f\u5c0f\u7684\u201c\u6324\u6389\u201d\u5b57\u5178\u5e8f\u5927\u7684\uff0c\u4e0d\u5c31\u521a\u521a\u597d\u53ef\u4ee5\u6ee1\u8db3\u9898\u610f\u4e86\u4e48\uff1f\u6211\u4eec\u628a\u90bb\u63a5\u8868\u6309\u7167\u5b57\u5178\u5e8f\u6392\u5e8f\uff0c\u6bcf\u6b21\u518d\u5012\u7740\u626b\u63cf\uff0c\u5e76\u4e14\u589e\u5e7f\u5373\u53ef\u3002\u590d\u6742\u5ea6\u4e3a$O(n^2)$\uff0c\u4f46\u662f\u4e0a\u754c\u6bd4\u8f83\u677e\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\n\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std; \n\nconst int MAXN = 20000, MAXM = 4e4, INF = 0x3f3f3f3f;\n\nint n, match_cnt, e_ptr, vis[MAXN+10], mat[MAXN+10];\n\nvector<int> G[MAXN+10];\n\ninline void AddPair(int u, int v){ \n    G[u].push_back(v); G[v].push_back(u);\n}\n\nbool augment(int u) {\n    for(int i=0; i<G[u].size(); i++) {\n        int v = G[u][i];\n        if(vis[v] == match_cnt) continue;\n        vis[v] = match_cnt;\n        if(mat[v] == -1 || augment(mat[v])) {\n            mat[v] = u; \n            return true;\n        }\n    }\n    return false;\n}\n\nint Hungary() {\n    memset(mat, 0xff, sizeof(mat));\n    int ret = 0;\n    for(int u=n-1; u>=0; u--) { //!!\n        ++match_cnt;\n        if(augment(u)) ++ret;\n    }\n    return ret;\n}\n\ntemplate<typename T>\ninline void readint(T& x) {\n    T f=1, r=0; char c=getchar();\n    while(!isdigit(c)) { if(c=='-')f=-1; c=getchar(); }\n    while(isdigit(c)) { r=r*10+c-'0'; c=getchar(); }\n    x = f*r;\n}\n\nint main() {\n    int d, a, b, Ans;\n    readint(n);\n    for(int i=0; i<n; i++) {\n        readint(d);\n        a = (i-d+n)%n;\n        b = (i+d)%n;\n        AddPair(i, a+n);\n        AddPair(i, b+n);\n    }\n    for(int i=0; i<2*n; i++)\n        sort(G[i].begin(), G[i].end());\n    Ans = Hungary();\n    if(Ans != n) puts(\"No Answer\");\n    else {\n        for(int i=0; i<n; i++)\n            mat[mat[i+n]]=i;\n        for(int i=0; i<n; i++) {\n            printf(\"%d\", mat[i]);\n            if(i!=n-1) putchar(' '); \n        }\n    }\n    return 0;\n}\n/*\n\u9644\u8d60\u6570\u636e\u4e00\u7ec4\uff1a\n16\n4 5 6 8 5 3 4 6 7 7 4 6 7 4 7 3 \n*/ \n```\n\n\n\u53c2\u8003\uff1a[Byvoid\u795e\u7287\u7684Blog][1]\uff08%%%%%%%\uff09\n\n\n[1]: https://www.byvoid.com/zhs/blog/noi-2009-transform\n",
        "postTime": 1516583801,
        "uid": 23865,
        "name": "panda_2134",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1963 \u3010[NOI2009]\u53d8\u6362\u5e8f\u5217\u3011"
    },
    {
        "content": "\u5bf9\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e $i$ \uff0c\u77e5\u9053 $D(i,T_i)$ \u540e\uff0c\u53ef\u4ee5\u5f97\u5230\u6240\u6709\u53ef\u80fd\u7684 $T_i$ \u7684\u53d6\u503c\uff1a\n\n\u5f53 $ \\mid i - T_i \\mid \\le N - \\mid i - T_i \\mid $ \u65f6\uff0c $ T_i = i - D $ \u6216 $ T_i = i + D $ \u3002\n\n\u5f53 $ \\mid i - T_i \\mid > N - \\mid i - T_i \\mid $ \u65f6\uff0c$ T_i = i-D+N $ \u6216 $ T_i = N-D+i $ \u3002\n\n\u6bcf\u4e2a $i$ \u6700\u7ec8\u53ea\u53ef\u80fd\u4e0e\u4e00\u4e2a $T_i$ \u5bf9\u5e94\uff0c\u4e14 $i \\in [0,n)$ \uff0c $ T_i \\in [0,n) $ \uff0c\n\n~~\u6839\u636e\u6807\u7b7e~~\u4e0d\u96be\u60f3\u5230\u8fd9\u662f\u4e00\u4e2a\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a $i$ \uff0c\u5411\u53ef\u884c\u7684 $T_i$ \u8fde\u8fb9\u8dd1\u5308\u7259\u5229\u5373\u53ef\u5f97\u51fa\u4e00\u7ec4\u53ef\u884c\u7684\u89e3\u3002\n\n\u5f53\u6700\u5927\u5339\u914d\u6570\u5c0f\u4e8e $n$ \u65f6\uff0c\u663e\u7136\u65e0\u89e3\u3002\n\n\u73b0\u5728\u8981\u8003\u8651\u7684\u662f\u6c42\u51fa\u4e00\u7ec4\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u89e3\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u70b9\u7684\u51fa\u8fb9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u7136\u540e\u4ece $n-1$ \u5230 $0$ \u5339\u914d\uff0c\u5e76\u8bb0\u5f55\u65b9\u6848\u3002\n\n\u53ef\u80fd\u5e76\u4e0d\u4e25\u8c28\u7684\u6b63\u786e\u6027\u8bc1\u660e\uff1a\n\n\u5728\u5308\u7259\u5229\u7b97\u6cd5\u4e2d\uff0c\u5f53\u70b9 $i$ \u5f53\u524d\u5c1d\u8bd5\u5339\u914d\u7684\u70b9 $j$ \u5df2\u88ab\u70b9 $k$ \u5339\u914d\u65f6\uff0c\u4f1a\u5c1d\u8bd5\u91cd\u65b0\u5339\u914d\u70b9 $k$ \u3002\n\n\u56e0\u4e3a\u8fb9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u5339\u914d\u65f6\u4e00\u5b9a\u4f18\u5148\u9009\u5c0f\u7684\u70b9\u3002\n\n\u5982\u679c\u8be5\u70b9\u5df2\u88ab\u5339\u914d\uff0c\u90a3\u4e48\u4e00\u5b9a\u662f\u88ab\u6bd4\u5f53\u524d\u70b9\u5927\u7684\u70b9\u5339\u914d\u3002\n\n\u6839\u636e\u5b57\u5178\u5e8f\u7684\u5b9a\u4e49\uff0c\u5c0f\u7684\u70b9\u5728\u524d\u9762\u4e00\u5b9a\u66f4\u4f18\u3002\n\n\u6240\u4ee5\u8fd9\u6837\u7684\u7b56\u7565\u80fd\u591f\u4fdd\u8bc1\u5b57\u5178\u5e8f\u6700\u5c0f\u3002\n\n\u6ce8\u610f\u8fde\u8fb9\u65f6\u5224\u65ad\u662f\u5426\u5728\u8303\u56f4\u5185\u3002\n\n~~\u8bdd\u8bf4 $n \\le 10000$ \u4e5f\u80fd $O(n^2)$ \u8fc7\u7684\u4e48~~\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n#include<vector>\nusing namespace std;\nint n;\nvector<int> e[10003];\nint f[10003],s[10003];\nbool v[10003];\nint ans;\nvoid add(int u,int v)\n{\n\te[u].push_back(v);\n}\nbool dfs(int x)\n{\n\tfor(int i=0;i<e[x].size();i++)\n\t{\n\t\tint to=e[x][i];\n\t\tif(v[to]) continue;\n\t\tv[to]=true;\n\t\tif(f[to]==-1||dfs(f[to]))\n\t\t{\n\t\t\tf[to]=x;\n\t\t\ts[x]=to;\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tint d;\n\t\tscanf(\"%d\",&d);\n\t\tif(i-d>=0) add(i,i-d);\n\t\tif(i+d<n) add(i,i+d);\n\t\tif(i+d-n>=0) add(i,i+d-n);\n\t\tif(n-d+i<n) add(i,n-d+i);\n\t}\n\tfor(int i=0;i<n;i++)\n\t\tsort(e[i].begin(),e[i].end());\n\tmemset(f,-1,sizeof(f));\n\tfor(int i=n-1;i>=0;i--)\n\t{\n\t\tmemset(v,0,sizeof(v));\n\t\tif(dfs(i)) ans++;\n\t}\n\tif(ans!=n)\n\t{\n\t\tputs(\"No Answer\");\n\t\treturn 0;\n\t}\n\tfor(int i=0;i<n;i++)\n\t\tprintf(\"%d \",s[i]);\n\treturn 0;\n}\n```",
        "postTime": 1572505488,
        "uid": 91889,
        "name": "Dirt\u3001",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1963 \u3010[NOI2009]\u53d8\u6362\u5e8f\u5217\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\uff0c\u9996\u5148\u6211\u4eec\u5148\u770b\u4e00\u4e0b\u9898\u76ee\uff0c\u8003\u573a\u4e0a\u9047\u5230\u65f6\u5019\uff0c\u7b2c\u4e00\u53cd\u5e94\u662f\u7528\u641c\u7d22\uff0c\u4e8e\u662f\u3002\u3002\u3002\u6253\u4e86\u4e2a\u641c\u7d22\u3002\u3002\u3002\u7136\u540e\u5b8c\u7f8e\u7684\u7531\u4e8e\u590d\u6742\u5ea6\u7206\u4e86\u3002\u3002\uff08\u641c\u7d22\u5e94\u8be5\u4e09\u5341\u5206\uff0c\u4f46\u6211\u7684\u590d\u6742\u5ea6\u611f\u4eba\u53ea\u6709~~\u5341\u5206~~ \uff09\n\n\u641c\u7d22\u5c31\u4e0d\u591a\u8bf4\uff0c\u76f4\u63a5\u8bb2\u4e00\u4e0b\u6b63\u89e3\uff0c\u6b63\u89e3\u662f\u7528\u4e8c\u5206\u56fe\u5339\u914d\u3002\n\u6bcf\u4e2a\u5143\u7d20\u53ef\u4ee5\u548c\u53e6\u5916\u4e24\u4e2a\u5143\u7d20\u5bf9\u5e94\uff0c\u4e24\u4e2a\u96c6\u5408\u76f8\u4e92\u53ef\u4ee5\u94fe\u63a5\uff0c\u96c6\u5408\u5185\u90e8\u6ca1\u6709\u8054\u7cfb\uff0c\u8fd9\u5c31\u5f62\u6210\u4e86\u4e00\u4e2a\u5f88\u597d\u7684\u4e8c\u5206\u56fe\u5339\u914d\uff0c\u4e8c\u5206\u56fe\u7684\u5339\u914d\u5982\u679c\u4e0d\u77e5\u9053\u7684\u8bddemmmm\u3002\u3002\u3002\u3002https://blog.csdn.net/dark_scope/article/details/8880547 \u5927\u4f6c\u8bb2\u89e3\u7684\u5308\u7259\u5229\u7b97\u6cd5\n\u77e5\u9053\u4e86\u8fd9\u662f\u4e8c\u5206\u56fe\uff0c\u90a3\u4e48\u5c31\u6709\u4e86\u4e00\u4e2a\u5927\u81f4\u601d\u8def\uff0c\u4f46\u662f\uff0c\u5b57\u5178\u5e8f\u8be5\u5982\u4f55\u7ef4\u62a4\u5462\uff0c\u6211\u4eec\u8003\u8651\u5308\u7259\u5229\u7b97\u6cd5\u7684\u539f\u7406\uff0c\u80fd\u8fde\u5219\u8fde\uff08\u8fd9\u662f\u4e00\u79cd\u8d2a\u5fc3\u7684\u601d\u60f3\uff09\u90a3\u4e48\u540e\u9762\u8fde\u4e0a\u7684\u4f1a\u627e\u5230\u6700\u5c0f\u7684\u53ef\u4ee5\u8fde\u4e0a\u7684~~\u5bf9\u8c61~~\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u53cd\u5411\u641c\uff0c\u5c31\u53ef\u4ee5\u627e\u5230\u6700\u5c0f\u5b57\u5178\u5e8f\u4e86 \n\n```cpp\n#include<iostream>\n#include<cstdio>\n#define FOR(i,a,b) for(int i=a;i<=b;i++)\n#define FR(i,a,b) for(int i=a;i>=b;i--)\nusing namespace std;\nconst int N=100100;\nint n,v,d[N],vi[N],to[N],lk[N],s[N][2];\nbool hun(int u){\n\tFOR(i,0,1)if(!vi[s[u][i]]){\n\t\tint v=s[u][i];vi[v]=1;\n\t\tif(lk[v]==-1 || hun(lk[v])) {lk[v]=u;to[u]=v;return 1;}\n\t}return 0;\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tFOR(i,0,n-1) scanf(\"%d\",&d[i]);\n\tFOR(i,0,n-1){\n\t\ts[i][0]=(i+d[i]+n)%n;s[i][1]=(i-d[i]+n)%n;\n\t\tif(s[i][0]>s[i][1]) swap(s[i][0],s[i][1]);\n\t\tlk[i]=to[i]=-1;\n\t}\n\tFR(i,n-1,0){\n\t\tFOR(j,0,n-1) vi[j]=0;\n\t\tif(!hun(i)) {printf(\"No Answer\");return 0;}\n\t}\n\tFOR(i,0,n-1) printf(\"%d \",to[i]);\n}\n```\n",
        "postTime": 1540906346,
        "uid": 119086,
        "name": "zijinjun",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1963 \u3010[NOI2009]\u53d8\u6362\u5e8f\u5217\u3011"
    },
    {
        "content": "\u505a\u6b64\u9898\u524d\u63a8\u8350\u53e6\u4e00\u9053\u9898\uff0c\u601d\u8def\u6709\u90a3\u4e48\u4e00\u70b9\u70b9\u5173\u7cfb\uff1a[[SCOI2010]\u8fde\u7eed\u653b\u51fb\u6e38\u620f](https://www.luogu.com.cn/problem/P1640)\u3002\n\n### \u9898\u9762\u8f6c\u5316\n\n\u9996\u5148\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4f4d\u7f6e $i$\uff0c\u90fd\u80fd\u7b97\u51fa\u653e\u5728\u6b64\u4f4d\u7f6e\u4e0a\u7684 $1$ \u6216 $2$ \u4e2a\u6570\u662f\u4ec0\u4e48\uff0c\u5c06\u8fd9\u4e24\u4e2a\u6570\u8fde\u8fb9\uff08\u4e00\u4e2a\u6570\u5219\u8fde\u81ea\u73af\uff09\uff0c\u8fd9\u6761\u8fb9\u7684\u7f16\u53f7\u5c31\u662f $i$\uff0c\u6bcf\u4e2a\u70b9\u7684**\u70b9\u6743\u5c31\u662f\u70b9\u7684\u7f16\u53f7**\u3002\n\n\u95ee\u9898\u5373\u53ef\u8f6c\u5316\u4e3a\uff1a\u628a\u6bcf\u4e2a\u70b9\u7684**\u70b9\u6743\u653e\u5230\u4e00\u6761\u90bb\u8fb9\u4e0a**\uff0c\u4f7f\u5f97\u6bcf\u6761\u8fb9\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u8fb9\u6743\uff0c\u8bbe\u8fb9\u6743\u6570\u7ec4\u4e3a $w$\uff0c**\u6700\u5c0f\u5316\u6b64\u6570\u7ec4\u7684\u5b57\u5178\u5e8f**\u3002\n\n### \u65e0\u89e3\n\n\u663e\u7136\u4e00\u5171 $n$ \u4e2a\u70b9\uff0c$n$ \u6761\u8fb9\uff0c\u56fe\u4e0d\u4e00\u5b9a\u8054\u901a\u3002\u6211\u4eec\u6765\u770b\u4ec0\u4e48\u65f6\u5019\u65e0\u89e3\uff1a\n\n\u5bf9\u4e8e\u4e00\u4e2a\u6781\u5927\u8fde\u901a\u5b50\u56fe\uff0c\u5982\u679c\u5b83\u662f\u4e00\u68f5\u6811\uff0c\u8fb9\u7684\u6570\u91cf = \u70b9\u6570\u91cf - 1\u3002\u5fc5\u5c06\u6709\u4e00\u4e2a\u70b9\u7684\u70b9\u6743\u65e0\u6cd5\u8d4b\u503c\u7ed9\u8fb9\uff0c\u90a3\u5c31\u4f1a\u6709\u4e00\u6761\u8fb9\u6ca1\u6709\u8fb9\u6743\uff0c\u6b64\u65f6 ```No Answer```\u3002\n\n### \u6709\u89e3\n\n\u663e\u7136\uff0c\u53bb\u6389\u4e86\u6811\u7684\u60c5\u51b5\uff0c\u56fe\u5fc5\u7136\u662f**\u57fa\u73af\u6811\u68ee\u6797**\uff0c\u5373\u82e5\u5e72\u4e2a\u5206\u79bb\u7684\u57fa\u73af\u6811\u3002\n\n\u4e00\u4e2a\u57fa\u73af\u6811\u53ea\u6709\u4e24\u4e2a\u90e8\u5206\uff1a**\u73af\u90e8\u5206**\u548c**\u6811\u90e8\u5206**\u3002\n\n\u7ecf\u8fc7\u4e00\u756a\u601d\u8003\uff0c\u53d1\u73b0**\u6811\u90e8\u5206\u6709\u4e14\u4ec5\u6709\u4e00\u79cd\u8d4b\u503c\u8fb9\u6743\u7684\u65b9\u6cd5\u3002** \u5373\u81ea\u53f6\u5b50\u5411\u6811\u6839\uff08\u73af\uff09\u8d4b\u503c\u3002\u4e8e\u662f**\u6811\u90e8\u5206**\u53ef\u4ee5\u76f4\u63a5\u5f97\u51fa\u7b54\u6848\uff0c\u6d88\u53bb\u4e0d\u7ba1\u3002\n\n\u56fe\u4e2d\u53ea\u5269\u4e0b**\u73af\u90e8\u5206**\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u73af\uff0c\u53ea\u6709\u4e24\u79cd\u8d4b\u503c\u65b9\u6cd5\u3002\u6211\u4eec\u627e\u5230\u8fb9\u7f16\u53f7\u6700\u5c0f\u7684\u90a3\u6761\u8fb9\uff0c\u56e0\u4e3a\u5b83\u7f16\u53f7\u9760\u524d\uff0c\u5bf9\u5b57\u5178\u5e8f\u5f71\u54cd\u66f4\u5927\u3002\u6b64\u6761\u8fb9\u4e00\u5b9a\u53ea\u8fde\u63a5\u4e86\u4e24\u4e2a\u70b9\uff0c\u9009\u62e9\u4e24\u4e2a\u70b9\u4e2d\u8f83\u5c0f\u8005\uff0c\u628a\u70b9\u6743\u8d4b\u503c\u7ed9\u6b64\u8fb9\u5373\u53ef\u3002\u7531\u4e8e\u786e\u5b9a\u4e86\u4e00\u6761\u8fb9\uff0c\u6574\u4e2a\u73af\u5c31\u5df2\u7ecf\u786e\u5b9a\u5b8c\u6210\u4e86\u3002\n\n\u627e\u73af\u6211\u5c45\u7136\u7528\u7684 tarjan\uff0c\u53e6\uff1a\u9700\u8981**\u7279\u5224\u81ea\u73af**\u3002\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <algorithm>\n#include <iostream>\n#include <cassert>\nusing namespace std; \n#define rg register\n#define il inline\n#define MX (10000 + 233)\n\nint head[MX] ,tot = 1 ,tot2 = 1;\nstruct edge{\n\tint fr ,node ,next ,id;\n\tbool operator <(const edge& b)const{\n\t\treturn id < b.id;\n\t}\n}h[MX << 1] ,H[MX << 1];\nvoid addedge(int u ,int v ,int id ,int flg = true){\n\th[++tot].next = head[u];\n\thead[u] = tot ,h[tot].node = v;\n\th[tot].id = id ,h[tot].fr = u;\n\tif(flg) addedge(v ,u ,id ,false);\n}\n\nvoid addedge2(int u ,int v ,int id ,int flg = true){\n\tH[++tot2].next = head[u];\n\tH[tot2].node = v ,H[tot2].id = id;\n\tH[tot2].fr = u;\n\tif(flg) addedge2(v ,u ,id ,false);\n}\n\nint OnCycle[MX];\nint DFN[MX] ,low[MX] ,flg[MX] ,stk[MX] ,dep ,cnt;\nint Ecnt ,Vcnt;\nvoid tarjan(int x ,int last){\n\t++Vcnt;\n\tDFN[x] = low[x] = ++cnt;\n\tflg[x] = true ,stk[++dep] = x;\n\tfor(int i = head[x] ,d ; i ; i = h[i].next){\n\t\t++Ecnt;\n\t\tif(i == (last ^ 1)) continue;\n\t\tif(!DFN[d = h[i].node]){\n\t\t\ttarjan(d ,i);\n\t\t\tif(low[d] < low[x]) low[x] = low[d];\n\t\t}else if(flg[d] && DFN[d] < low[x]) low[x] = DFN[d];\n\t}int j = -1; if(DFN[x] == low[x]){\n\t\tint tag = (stk[dep] != x);\n\t\twhile(j != x){\n\t\t\tj = stk[dep--] ,OnCycle[j] |= tag;\n\t\t\tflg[j] = false;\n\t\t}\n\t}\n}\n\nint vis[MX] ,Ans[MX];\nvoid dfs(int x){\n\tfor(int i = head[x] ,d ; i ; i = h[i].next){\n\t\tif(!vis[d = h[i].node] && !OnCycle[d]){\n\t\t\tvis[d] = true;\n\t\t\tAns[h[i].id] = d;\n\t\t\tdfs(d);\n\t\t}\n\t}\n}\n\nvoid dfs1(int x ,int fr){\n\t\n\tif(vis[x]) return; \n\tvis[x] = true;\n\tfor(int i = head[x] ,d ; i ; i = h[i].next){\n\t\tif(OnCycle[d = h[i].node] && i != (fr ^ 1)){\n\t\t\tAns[h[i].id] = x;\n\t\t\tdfs1(d ,i);\n\t\t}\n\t}\n}\n\nint getedge(int u ,int v ,int id){\n\tfor(int i = head[u] ; i ; i = h[i].next){\n\t\tif(h[i].node == v && h[i].id == id) return i;\n\t}assert(false);\n}\n\nint main(){\n\tmemset(Ans ,-1 ,sizeof Ans);\n\tint n; cin >> n;\n\tfor(int i = 0 ,d ; i < n ; ++i){\n\t\tcin >> d;\n\t\tif(d * 2 == n || d == 0) OnCycle[(i + d) % n] = true;\n\t\tif(d > (n / 2))\treturn 0 * puts(\"No Answer\");\n\t\taddedge((i + n - d) % n ,(i + d) % n ,i);\n\t\taddedge2((i + n - d) % n ,(i + d) % n ,i);\n\t\t// printf(\"%d %d %d\\n\" ,(i + n - d) % n ,(i + d) % n ,i);\n\t}\n\tfor(int i = 0 ; i < n ; ++i){\n\t\tif(!DFN[i]){\n\t\t\tEcnt = Vcnt = 0;\n\t\t\ttarjan(i ,1145141919);\n\t\t\tif(Ecnt != Vcnt * 2){\n\t\t\t\tputs(\"No Answer\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i = 0 ; i < n ; ++i){\n\t\tif(!OnCycle[i]) continue;\n\t\tdfs(i);\n\t}std::sort(H + 2 , H + tot2 + 1);\n\tfor(int i = 2 ,u ,v ; i <= tot ; ++i){\n\t\tu = H[i].fr ,v = H[i].node;\n\t\tif(!vis[u] && !vis[v]){\n\t\t\tif(u < v){\n\t\t\t\tAns[H[i].id] = u;\n\t\t\t\tvis[u] = true;\n\t\t\t\tint fr = getedge(u ,v ,H[i].id);\n\t\t\t\tdfs1(v ,fr);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tAns[H[i].id] = v;\n\t\t\t\tvis[v] = true;\n\t\t\t\tint fr = getedge(v ,u ,H[i].id);\n\t\t\t\tdfs1(u ,fr);\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i = 0 ; i < n ; ++i)\n\t\tprintf(\"%d \" ,Ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1582681175,
        "uid": 47863,
        "name": "Imakf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1963 \u3010[NOI2009]\u53d8\u6362\u5e8f\u5217\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u4e2a\u672c\u9898\u7684\u7ebf\u6027\u505a\u6cd5\u3002  \n\u524d\u9762\u7684\u8f6c\u5316\u8fc7\u7a0b\u76f4\u63a5\u8df3\u8fc7\uff0c\u6765\u5230\u4e8c\u5206\u56fe\u90e8\u5206\u3002\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u8fd9\u662f\u4e2a\u7279\u6b8a\u7684\u4e8c\u5206\u56fe\uff0c\u6bcf\u4e2a\u70b9\u6700\u591a\u53ea\u80fd\u8ddf\u4e24\u4e2a\u70b9\u5339\u914d\u3002\u6211\u4eec\u5c06\u6bcf\u4e2a\u70b9\u6240\u8fde\u8fb9\u7684\u4e24\u4e2a\u70b9\u8fde\u63a5\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u6811/\u57fa\u73af\u6811\u68ee\u6797\u3002\u4e4b\u540e\u8003\u8651\u5339\u914d\u8fc7\u7a0b\uff0c\u5982\u679c\u8be5\u8fde\u901a\u5757\u662f\u4e00\u68f5\u6811\uff0c\u90a3\u4e48 $n-1$ \u6761\u8fb9\u5339\u914d $n$ \u4e2a\u70b9\uff0c\u5fc5\u7136\u4e0d\u80fd\u5b8c\u5168\u5339\u914d\uff0c\u8f93\u51fa `No Answer`\u3002\u5426\u5219\uff0c\u9009\u62e9\u73af\u4e0a\u4e00\u6761\u8fb9\uff0c\u5206\u522b\u5224\u65ad\u5339\u914d\u8fd9\u6761\u8fb9\u7684\u5de6\u7aef\u70b9\u8fd8\u662f\u53f3\u7aef\u70b9\uff08\u8fd9\u4e00\u70b9\u786e\u5b9a\u4e86\u540e\u6240\u6709\u5339\u914d\u90fd\u786e\u5b9a\u4e86\uff09\uff0c\u9009\u62e9\u5b57\u5178\u5e8f\u8f83\u5c0f\u7684\u4e00\u79cd\u66f4\u65b0\u3002\u6700\u540e\u8f93\u51fa\u5373\u53ef\u3002  \n# AC \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int MAXN = 2e5 + 10;\n\nstruct edge {\n\tint v, id, nxt;\n} e[MAXN << 1];\n\nint head[MAXN], tot;\n\ninline \nvoid add(int u, int v, int id) {\n\te[++tot] = { v, id, head[u] }, head[u] = tot;\n}\n\nstruct node {\n\tint u, v, id;\n\tbool operator < (const node &rhs) const { return id < rhs.id; }\n} a[MAXN], b[MAXN];\n\nbool vis[MAXN], used[MAXN], allow[MAXN];\n\nint num, acnt, bcnt;\n\nvoid dfs(int u) {\n\tvis[u] = 1, num++;\n\tfor (int i = head[u]; i; i = e[i].nxt) {\n\t\tif (u <= e[i].v) a[++acnt] = { u, e[i].v, e[i].id };\n\t\tif (!vis[e[i].v]) dfs(e[i].v);\n\t}\n}\n\nvoid pick(int u, int f, int *res) {\n\tfor (int i = head[u]; i; i = e[i].nxt) {\n\t\tif (e[i].v == f || !allow[e[i].id]) continue;\n\t\tres[e[i].id] = e[i].v, pick(e[i].v, u, res);\n\t}\n}\n\nint fa[MAXN];\n\nint find(int k) {\n\treturn k == fa[k] ? k : fa[k] = find(fa[k]);\n}\n\nint ans[MAXN], t[MAXN];\n\nbool solve(int n) {\n\tacnt = bcnt = num = 0, dfs(n);\n\tsort(a + 1, a + acnt + 1);\n\tif (acnt == num - 1) return 0;\n\tbool f = 0; int p = -1;\n\tfor (int i = acnt, x, y; i; i--) {\n\t\tx = find(a[i].u), y = find(a[i].v);\n\t\tif (x == y) {\n\t\t\tif (f) continue;\n\t\t\tb[++bcnt] = a[i], p = bcnt, f = 1;\n\t\t\tcontinue;\n\t\t}\n\t\tb[++bcnt] = a[i], allow[a[i].id] = 1, fa[x] = y;\n\t}\n\tans[b[p].id] = b[p].u, pick(b[p].u, 0, ans);\n\tt[b[p].id] = b[p].v, pick(b[p].v, 0, t);\n\tfor (int i = bcnt; i; i--) {\n\t\tif (ans[b[i].id] > t[b[i].id]) {\n\t\t\tfor (int j = i; j; j--) ans[b[i].id] = t[b[i].id]; break;\n\t\t} else if (ans[b[i].id] < t[b[i].id]) break;\n\t}\n\treturn 1;\n}\n\nint n;\n\nint main() {\n\tscanf(\"%d\", &n);\n\tfor (int i = 0, x, u, v; i < n; i++) {\n\t\tscanf(\"%d\", &x), u = (i - x + n) % n + 1, v = (i + x) % n + 1;\n\t\tadd(u, v, i + 1), add(v, u, i + 1);\n\t}\n\tfor (int i = 1; i <= n; i++) fa[i] = i;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (!vis[i] && !solve(i)) return puts(\"No Answer\"), 0;\n\t}\n\tfor (int i = 1; i <= n; i++) printf(\"%d \", ans[i] - 1);\n}\n```",
        "postTime": 1665747211,
        "uid": 406941,
        "name": "Register_int",
        "ccfLevel": 6,
        "title": "P1963 \u9898\u89e3"
    },
    {
        "content": "# \u9898\u76ee\u5927\u610f\n\u7ed9\u5b9a $ D_i $,\u8ba9\u6211\u4eec\u8fd8\u539f\u5b57\u5178\u5e8f\u6700\u5c0f\u7684 $ T_i $\u3002\n\n### \u524d\u7f6e\n$ D_i = \\lvert T_i  - i\\rvert$\n\n\u7a0d\u5fae\u79fb\u9879\uff0c\u5f97\u5230 $ T_i = D_i \\pm i  $\u3002\n# \u5206\u6790\n\u9996\u5148\uff0c\u6211\u4eec\u5148\u4e0d\u7ba1\u5b57\u5178\u5e8f\u6700\u5c0f\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $ T_i \\bmod 2$ \u7684\u503c\uff0c\u6700\u591a\u53ea\u6709\u4e24\u4e2a\u3002\u6bcf\u6b21\u5728\u4e24\u4e2a\u4e4b\u95f4\u9009\u62e9\uff0c\u8fd9\u4e0d\u5c31\u662f **\u4e8c\u5206\u56fe** \u7684\u903b\u8f91\u5417\uff1f\n\n\u90a3\u52a0\u5165\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u8fd9\u4e00\u4e2a\u6761\u4ef6\u5462\uff1f\n\n\u5982\u679c\u4f7f\u7528\u7f51\u7edc\u6d41\uff0c\u80af\u5b9a\u505a\u4e0d\u5230\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u60f3\u5230\u5308\u7259\u5229\u7b97\u6cd5\u3002\uff08\u4e0d\u4f1a\u6b64\u7b97\u6cd5\u7684\u770b[\u8fd9\u4e00\u9898](https://www.luogu.com.cn/problem/P3386)\uff09\n\n#### \u5728\u6b64\u7b80\u5355\u4ecb\u7ecd\u5308\u7259\u5229\u7b97\u6cd5\uff1a\n\n\u5728\u4e00\u5e45\u56fe\u4e2d\uff0c\u4e0a\u9762\u6709 n \u4e2a\u70b9\uff0c\u4e0b\u9762\u6709 m \u4e2a\u70b9\u3002\n \n$i$ \u662f $1 \u223c n$ \u679a\u4e3e\u5230\u7684\u70b9\uff0c $j$ \u662f $1 \u223c m$ \u679a\u4e3e\u5230\u7684\u70b9\u3002\n\n\u5982\u679c $i$ \u548c $j$ \u4e4b\u95f4\u6ca1\u6709\u8fde\u7ebf\uff0c\u6211\u4eec\u5c31\u8fde\u63a5\u8fd9\u4e24\u70b9\u3002\n\n\u5426\u5219\uff0c\u5982\u679c\u8fd9\u4e2a\u70b9\u5df2\u7ecf\u88ab\u8fde\u63a5\uff0c\u4e14 $j$ \u70b9\u6240\u8fde\u63a5\u7684\u53e6\u5916\u4e00\u4e2a\u70b9\u53ef\u4ee5\u8fde\u63a5\u53e6\u4e00\u4e2a\u70b9\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6362\u6389\u8fd9\u4e2a\u70b9\uff0c\u8fde\u63a5 $i$, $j$\u3002\n\n\u6b64\u7b97\u6cd5\u7684\u4ee3\u7801\uff1a\n```cpp\nbool find(int x){//\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\n\tfor(int i = 1;i <= m;i++){\n\t\tif(vis[a[i][x]])continue;//\u5df2\u7ecf\u8bbf\u95ee\u8fc7\u4e86\n\t\tvis[a[i][x]] = 1;//\u66f4\u6539\u4e3a\u8bbf\u95ee\u8fc7\u4e86\n\t\tif(d[a[i][x]] == -1 || find(d[a[i][x]])){//\u5982\u679c\u8fd8\u6ca1\u6709\u8fde\u8fb9\u6216\u8005\u8fd9\u4e2a\u70b9\u53ef\u4ee5\u8fde\u63a5\u5176\u4ed6\u8fb9\n\t\t\td[a[i][x]] = x;//\u76f4\u63a5\u8fde\u63a5\n\t\t\tans[x] = a[i][x];//\u52a0\u5165\u7b54\u6848\n\t\t\treturn true;//\u8fd4\u56de\u53ef\u4ee5\u8fde\u63a5\t\n\t\t}\n\t}\n\treturn false;//\u4e0d\u53ef\u4ee5\u8fde\u63a5\n}\n```\n\n\u77e5\u9053\u4e86\u601d\u8def\uff0c\u600e\u4e48\u5b9e\u73b0\u5b57\u5178\u5e8f\u6700\u5c0f\u5462\uff1f\u5982\u679c\u7b2c\u4e00\u4e2a\u70b9\u8fde\u63a5\u4e86\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u70b9\uff0c\u6700\u540e\u7b54\u6848\u662f\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u5417\uff1f\n\n**\u4e0d\u53ef\u80fd\uff01**\n\n\u56e0\u4e3a\u7b2c\u4e00\u4e2a\u70b9\u8fde\u63a5\u4e86\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u70b9\uff0c\u540e\u9762\u7684\u70b9\u6709\u53ef\u80fd\u4f1a\u5c06\u7b2c\u4e00\u4e2a\u70b9\u66f4\u6362\u8fd9\u4e00\u6761\u8fb9\uff0c\u6240\u4ee5\uff0c\u8fd9\u79cd\u601d\u8def\u662f\u4e0d\u884c\u7684\u3002\n\n\u6839\u636e\u8fd9\u4e00\u4e2a\u601d\u8def\uff0c\u6211\u4eec\u4f1a\u77e5\u9053\uff1a\u67d0\u4e2a\u70b9\u5982\u679c\u5df2\u7ecf\u8fde\u63a5\u4e86\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u70b9\uff0c\u90a3\u4e48\u540e\u9762\u5c31\u53ef\u80fd\u4f1a\u6709\u4e00\u4e2a\u70b9\u6765\u66f4\u6362\u8fd9\u4e00\u6761\u8fb9\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5**\u9006\u5411\u601d\u7ef4**\uff0c\u4ece $n$ \u5230 $1$ \u5f00\u59cb\u679a\u4e3e\uff0c\u8fd9\u6837\u5c31\u80fd\u8fbe\u5230\u5b57\u5178\u5e8f\u6700\u5c0f\u8fd9\u4e00\u4e2a\u6761\u4ef6\n\n## \u65f6\u95f4\u590d\u6742\u5ea6\n\u5308\u7259\u5229\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e00\u822c\u662f $ O(n \\times m) = O(n^2) $\uff0c\u6240\u4ee5\u5bf9\u4e8e\u672c\u9898\u6570\u636e\u8fd8\u662f\u52c9\u5f3a\u80fd\u8fc7\u5f97\n\n# AC\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cmath>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\ntypedef long long LL;\nconst int MAXN = 1e5 + 10; \nconst int INF = 0x3f;\nint a[3][MAXN], n;//\u672c\u9898\u6570\u636e\u5c0f\uff0c\u53ef\u4ee5\u4f7f\u7528\u90bb\u63a5\u77e9\u9635\u6765\u50a8\u5b58\u8fb9 \nint d[MAXN], vis[MAXN], ans[MAXN];\n//  \u8fde\u63a5\u7684\u70b9 \u662f\u5426\u8fde\u63a5   \u7b54\u6848 \nbool find(int x){//\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\n\tfor(int i = 1;i <= 2;i++){\n\t\tif(vis[a[i][x]])continue;//\u5df2\u7ecf\u8bbf\u95ee\u8fc7\u4e86\n\t\tvis[a[i][x]] = 1;//\u66f4\u6539\u4e3a\u8bbf\u95ee\u8fc7\u4e86\n\t\tif(d[a[i][x]] == -1 || find(d[a[i][x]])){//\u5982\u679c\u8fd8\u6ca1\u6709\u8fde\u8fb9\u6216\u8005\u8fd9\u4e2a\u70b9\u53ef\u4ee5\u8fde\u63a5\u5176\u4ed6\u8fb9\n\t\t\td[a[i][x]] = x;//\u76f4\u63a5\u8fde\u63a5\n\t\t\tans[x] = a[i][x];//\u52a0\u5165\u7b54\u6848\n\t\t\treturn true;//\u8fd4\u56de\u53ef\u4ee5\u8fde\u63a5\t\n\t\t}\n\t}\n\treturn false;//\u4e0d\u53ef\u4ee5\u8fde\u63a5\n}\nint main()\n{\n\tcin >> n;\n\tmemset(d, -1, sizeof(d));//\u8d4b\u503c\u4e3a\u5168\u90e8\u6ca1\u6709\u8fde\u63a5 \n\tfor(int i = 1;i <= n; i++){\n\t\tint x;\n\t\tcin >> x;\t\n\t\tint A = (i - x + n) % n;//\u4e00\u4e2a\u70b9\u5230\u53e6\u4e00\u4e2a\u70b9\u6709\u4e24\u4e2a\u4f4d\u7f6e\uff1a\u5de6\u8fb9\u6216\u53f3\u8fb9 \n\t\tint B = (i + x) % n;\n\t\tif(A > B) swap(A, B);//\u5982\u679c\u5de6\u8fb9\u8ddd\u79bb > \u53f3\u8fb9\u8ddd\u79bb\uff0c\u4ea4\u6362 \n\t\ta[1][i] = A;//1\u8fdei\u7684\u8fb9\u4e3aA \n\t\ta[2][i] = B;//2\u8fdei\u7684\u8fb9\u4e3aB \n\t}\n\tint sum = 0;//\u7edf\u8ba1\u6700\u591a\u80fd\u5206\u914d\u51e0\u4e2a\u9876\u70b9 \n\tfor(int i = n;i >= 0; i--){//\u4ece\u540e\u5f80\u524d\u679a\u4e3e \n\t\tmemset(vis, false, sizeof(vis));//\u521d\u59cb\u5316 \n\t\tif(find(i))sum++;//\u7edf\u8ba1 \n\t}\n\tif(sum < n)cout << \"No Answer\";//\u5982\u679c\u4e0d\u591f\u4e2a\u6570\uff0c\u5c31\u65e0\u89e3 \n\telse{//\u8f93\u51fa\u7b54\u6848 \n\t\tfor(int i = 1;i <= n; i++){\n\t\t\tcout << ans[i] << ' ';\n\t\t}\n\t} \n\t//cout << sum << endl;\n    return 0;\n}\n```\n\u6e29\u99a8\u63d0\u793a\uff1a\u7406\u89e3\u4ee5\u540e\u518dctj\n\n(\u7ba1\u7406\u5458\u8f9b\u82e6\u4e86\uff0c\u9ebb\u70e6\u5ba1\u6838\u4e00\u4e0b\u9898\u89e3\uff09",
        "postTime": 1644491530,
        "uid": 341036,
        "name": "\u8521\u7ae3\u51ef",
        "ccfLevel": 4,
        "title": "P1963 [NOI2009] \u53d8\u6362\u5e8f\u5217 \u9898\u89e3"
    },
    {
        "content": "\n\n\u89c2\u5bdf\u4e0a\u9762\u51e0\u4efd\u9898\u89e3\u4e3b\u8981\u7740\u91cd\u4e8e\u5308\u7259\u5229\u7684\u5185\u90e8\u539f\u7406\n\n\u8fd9\u91cc\u8865\u5145\u4e00\u4e0b\u5efa\u56fe\u7684\u7ec6\u8282\u628a\u3002\n\n\n\u9898\u4e2d:\n\n$$D(i, T_i) = min(|i - T_i|, N - |i - T_i|)$$\n\n\u6784\u9020\u4e8c\u5206\u56fe\uff1a\u5de6\u8fb9\u4e3a\u539f\u5e8f\u5217\uff0c\u53f3\u8fb9\u4e3a\u6ee1\u8db3\u4e0a\u5f0f\u7684\u53ef\u80fd\u7684\u6570\u5b57\n\n\u4e0a\u9762\u7684\u4e00\u4e2a\u5f0f\u5b50\u53ef\u4ee5\u62c6\u6210\u56db\u4e2a\u65b9\u7a0b\n\n$$ D(i, T_i)=\\left\\{\n\\begin{aligned}\n\\pm (i - T_i) \\\\\nn \\pm (i - T_i)\\\\\n\\end{aligned}\n\\right.\n$$\n\n![](https://cdn.luogu.com.cn/upload/pic/54882.png)\n\n\u89e3\u8be5\u65b9\u7a0b\uff1a\n\n$$ T_i=\\left\\{\n\\begin{aligned}\ni \\pm D(i - T_i) \\\\\ni \\pm (n - D(i - T_i))\\\\\n\\end{aligned}\n\\right.\n$$\n\n![](https://cdn.luogu.com.cn/upload/pic/54883.png)\n\n\u82e5 $T_i \\in [0, n)$ \uff0c\u5219\u5c5e\u4e8e\u5408\u6cd5\u89e3\u3002\n\n\u4e8c\u5206\u56fe\u5efa\u51fa\u6765\uff0c\u5269\u4e0b\u7684\u6c42\u6700\u5927\u5339\u914d\u53cd\u800c\u53d8\u5f97\u7b80\u5355\n\n\u81f3\u4e8e\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u56e0\u4e3a\uff08\u6211\u7684\uff09\u5308\u7259\u5229\u9ed8\u8ba4\u662f\u53ef\u4ee5\u589e\u5e7f\u7acb\u9a6c\u5c31\u589e\u5e7f\u7684\uff0c\u6240\u4ee5\u9ed8\u8ba4\u7684\u4f3c\u4e4e\u662f\u5b57\u5178\u5e8f\u6700\u5927\u3002\n\nidea: \u53cd\u6b63\u8981\u817e\uff0c\u4e0d\u5982\u6574\u4f53\u987a\u5e8f\u5012\u8fc7\u6765\uff0c\u4f18\u5148\u817e\u7684\u662f\u6700\u5c0f\u7684\uff0c\u4fdd\u8bc1\u5b57\u5178\u5e8f\u6700\u5c0f\n\n\u4e8e\u662f\u4e4e\u5efa\u5b8c\u8fb9\u540e`sort()`\u4e00\u53d1\uff0c\u5308\u7259\u5229\u91cc\u9762`for`\u5faa\u73af\u5012\u8fc7\u6765\u5c31\u597d\u4e86\n\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 1e4 + 7;\nconst int INF = 0x3f3f3f3f;\nstruct Hungary{\n    vector <int> G[N];\n    bool used[N]; // main\u91cc\u9762\u8bb0\u5f97memset\n    int girl[N], n, boy[N];\n\n    inline void init(int _n){\n        n = _n;\n        for (int i = 0; i <= n; i++) G[i].clear();\n    }\n\n    inline void addEdge(const int &u, const int &v){\n        G[u].push_back(v);\n    }\n\n    bool Find(int x){\n        for (int i = 0; i < G[x].size(); i++){\n            int j = G[x][i];\n            if (used[j]) continue;\n            used[j] = 1;\n            if (girl[j] == -1 || Find(girl[j])) {\n                girl[j] = x;\n                boy[x] = j;\n                return true;\n            }\n        }\n        return false;\n    }\n\n    inline int hungary(const int &n, const int &m){\n        int all = 0;\n        memset(girl, -1, sizeof girl);\n        for (int i = n-1; i >= 0; i--) {\n            memset(used, 0, sizeof(used)); //\u8fd9\u4e2a\u5728\u6bcf\u4e00\u6b65\u4e2d\u6e05\u7a7a\n            if (Find(i)) all += 1;\n        }\n        //for (int i = 0; i < m; i++) printf(\"girl[%d] = %d\\n\", i, girl[i]);\n        //printf(\"all = %d\\n\", all);\n        return all;\n    }\n} g;\n\nint n;\nint dist[N];\n\nbool in_range(const int &x){\n    return 0 <= x && x < n;\n}\n\nint main(){\n    //freopen(\"in.txt\", \"r\", stdin);\n    scanf(\"%d\", &n);\n    g.init(n);\n    for (int i = 0; i < n; i++){\n        scanf(\"%d\", &dist[i]);\n        if (in_range(i - dist[i])) g.addEdge(i, i - dist[i]);\n        if (in_range(i + dist[i])) g.addEdge(i, i + dist[i]);\n        if (in_range(i-n+dist[i])) g.addEdge(i, i-n+dist[i]);\n        if (in_range(i+n-dist[i])) g.addEdge(i, i+n-dist[i]);\n        sort(g.G[i].begin(), g.G[i].end());\n    }\n\n    if (g.hungary(n, n) != n) puts(\"No Answer\");\n    else{\n        for (int i = 0; i < n; i++){\n            printf(\"%d%c\", g.boy[i], i==n-1?'\\n':' ');\n        }\n    }\n    return 0;\n}\n\n// dist[i] = i - transfer[i]\n// dist[i] = transfer[i] - i\n// dist[i] = n - i + transfer[i]\n// dist[i] = n + i - transfer[i]\n\n```\n\nPS\uff1a\u516c\u5f0f\u70b8\u4e86\uff0c\u7f16\u8f91\u5668\u5185\u7684\u516c\u5f0f\u6e32\u67d3\u7684\u5f88\u6b63\u5e38\u554a\uff0c\u524d\u7aef\u4fee\u4e00\u4e0bbug\u554a\uff0cmarkdown\u6e32\u67d3\u7528pandoc\u5f15\u64ce\u4eb2\u6d4b\u4ec0\u4e48\u795e\u4ed9\u516c\u5f0f\u90fd\u80fd\u6e32\u67d3\n\n",
        "postTime": 1553343484,
        "uid": 4741,
        "name": "cww970329",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1963 \u3010[NOI2009]\u53d8\u6362\u5e8f\u5217\u3011"
    },
    {
        "content": "\n\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\n\n\u9488\u5bf9\u6bcf\u4e00\u4e2aD[i]\u7b97\u51fa\u6570\u4f4d\u4e0a\u53ef\u80fd\u76842\u4e2aT[i],\u7136\u540e\u5c06\u6570\u4f4d\u7684\u6570\u5b57\u4e0e\u4e24\u4e2aT[i]\u8fde\u8fb9,\u518d\u6c42\u6700\u5927\u5339\u914d\u5373\u53ef\uff0c\u5982\u679c\u6700\u5927\u5339\u914d\u5c0f\u4e8en,\u5219'No Answer'\n\n\u5bf9\u4e8e\u6309\u5b57\u5178\u5e8f\u6700\u5c0f\u8f93\u51fa\u89e3\uff0c\u5e94\u5f53\u5012\u8fc7\u6765\u626b\u70b9\u3002\u4e3a\u4ec0\u4e48\u8fd9\u6837\u5462\uff0c\u56e0\u4e3a\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u6700\u524d\u9762\u7684\u70b9\u5177\u6709\u6700\u9ad8\u7684\u4f18\u5148\u7ea7.\n\n```cpp\nbool work()\n{\n    memset(linker,-1,sizeof linker);\n    for(int i=n-1;i>=0;i--)\n    {\n        memset(vis,0,sizeof vis);\n        if(!dfs(i))\n        {\n            return false;\n        }\n    }\n    return true;\n} \n```\n\u7ec6\u8282\u6ce8\u610f\u89c1\u6ce8\u91caO(\u2229\\_\u2229)O~~\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<vector>\n#include<queue>\nusing namespace std;\nconst int MAXN=10000;\nint n,G[MAXN+10][2],vis[MAXN+10],linker[MAXN+10],rlinker[MAXN+10];\nbool dfs(int x)\n{\n    for(int i=0;i<=1;i++)//\u5e94\u5f53\u5148\u8003\u8651\u8fb9\u6240\u5bf9\u5e94\u7684\u53e6\u4e00\u4e2a\u70b9\u8f83\u5c0f\u7684\n    {\n        if(!vis[G[x][i]])\n        {\n            vis[G[x][i]]=true;\n            if(linker[G[x][i]]==-1||dfs(linker[G[x][i]]))\n            {\n                linker[G[x][i]]=x;\n                rlinker[x]=G[x][i];\n                return true;\n            }\n        }\n    }\n    return false;\n}\nbool work()\n{\n    memset(linker,-1,sizeof linker);\n    for(int i=n-1;i>=0;i--)//\u5012\u8fc7\u6765\u626b\n    {\n        memset(vis,0,sizeof vis);\n        if(!dfs(i))\n        {\n            return false;\n        }\n    }\n    return true;\n} \nint main()\n{\n    scanf(\"%d\",&n);\n    int k,a,b;\n    for(int i=0;i<n;i++)\n    {\n        scanf(\"%d\",&k);\n        a=(i-k+n)%n;\n        b=(i+k)%n;\n        G[i][0]=min(a,b);\n        G[i][1]=max(a,b);\n    }\n    if(!work())\n    {\n        printf(\"No Answer\");\n        return 0;\n    }\n    for(int i=0;i<n;i++)\n    {\n        printf(\"%d \",rlinker[i]);\n    }\n    return 0;\n}\n```",
        "postTime": 1487508965,
        "uid": 12084,
        "name": "IAMJOBS",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1963 \u3010\u53d8\u6362\u5e8f\u5217\u3011"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P1963)\n\n\u4e3b\u8981\u7684\u7b97\u6cd5\u5308\u7259\u5229\u4e8c\u5206\u56fe\u5339\u914d\u548c\u5206\u7c7b\u8ba8\u8bba\u8fde\u8fb9\u5927\u5bb6\u8bb2\u7684\u5df2\u7ecf\u5f88\u6e05\u695a\u4e86\uff0c\u672c\u7bc7\u6765\u7740\u91cd\u8bb2\u4e00\u4e0b\u672c\u9898\u96be\u70b9\uff1a\u4f7f\u7b54\u6848\u5b57\u5178\u5e8f\u6700\u5c0f\u3002\n\n\u65b9\u6848\uff1a\n\n- \u8fde\u8fb9\u7684\u65f6\u5019\uff0c\u5c06\u6bcf\u4e2a\u4f4d\u7f6e\u4f5c\u4e3a\u5de6\u90e8\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u53d8\u6362\u503c\u4f5c\u4e3a\u53f3\u90e8\u3002**\u5c06\u5de6\u90e8\u6bcf\u4e2a\u70b9\u7684\u8fde\u8fb9\u7684\u53f3\u7aef\u70b9\u5927\u5c0f\u6309\u5347\u5e8f\u6392\u5e8f\uff0c\u6700\u540e\u5bf9\u6bcf\u4e2a\u5de6\u90e8\u70b9\u505a dfs \u7684\u65f6\u5019\u5012\u5e8f\u505a\u3002**\n\n\u611f\u6027\u8bc1\u660e\uff1a\n\n- \u5308\u7259\u5229\u7684\u4e3b\u8981\u6d41\u7a0b\u662f\uff1a\u82e5\u5f53\u524d\u5de6\u90e8\u5c06\u8981\u5339\u914d\u7684\u70b9\u5df2\u88ab\u5339\u914d\uff0c\u4f1a\u5c06\u8fd9\u4e2a\u70b9\u7684\u539f\u914d\u5339\u914d\u5230\u53f3\u90e8\u70b9\u5e8f\u5217\u4e2d\u66f4\u9760\u540e\u7684\u70b9\uff0c\u6240\u4ee5\u9760\u540e\u8fdb\u884c\u5339\u914d\u7684\u5de6\u90e8\u70b9\u7684\u5339\u914d\u503c\u7684\u5b57\u5178\u5e8f\u4e00\u5b9a\u4f1a\u5c3d\u91cf\u5c0f\u3002\u90a3\u4e48\u5c06\u53f3\u90e8\u70b9\u5347\u5e8f\u6392\u5217\uff0c\u82e5\u8fdb\u884c dfs \u65f6\u6b63\u5e8f\u8fdb\u884c\uff0c\u5373\u53ef\u6c42\u5f97\u5b57\u5178\u5e8f\u6700\u5927\u7684\uff0c\u53cd\u8fc7\u6765\uff0c\u82e5\u5012\u5e8f\u8fdb\u884c\uff0c\u5373\u53ef\u6c42\u5f97\u5b57\u5178\u5e8f\u6700\u5c0f\u503c\u3002\n\n\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u5c06\u53f3\u90e8\u70b9\u964d\u5e8f\u6392\u5e8f\u4e4b\u540e\u518d\u6b63\u5e8f\u8fdb\u884c dfs \u5462\uff1f\n\n- \u6b64\u65f6\u6b63\u5e8f\u8fdb\u884c dfs \u4e00\u5b9a\u4f1a\u4f7f\u5f97\u540e\u8fdb\u884c dfs \u7684\u5de6\u90e8\u70b9\u7684\u5339\u914d\u7684\u5b57\u5178\u5e8f\u66f4\u5927\uff0c\u4f46\u662f\u4e0d\u80fd\u4fdd\u8bc1\u5148\u8fdb\u884c dfs \u7684\u5de6\u90e8\u70b9\u7684\u5339\u914d\u7684\u5b57\u5178\u5e8f\u5c3d\u91cf\u5c0f\u3002\n",
        "postTime": 1684933678,
        "uid": 774862,
        "name": "Tsinghua_pwtking",
        "ccfLevel": 0,
        "title": "[NOI2009] \u53d8\u6362\u5e8f\u5217 \u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\u600e\u4e48\u8fde\u8fb9\u3002\u6839\u636e\u4e00\u987f\u53bb\u7edd\u5bf9\u503c\uff0c\u5f97\u5230 $T_i$ \u6709 $4$ \u79cd\u53d6\u503c\uff1a$i-D_i$\uff0c$i-D_i+n$\uff0c$i+D_i$\uff0c$i+D_i-n$\u3002\u7136\u540e\u8fd9\u56db\u79cd\u6ee1\u8db3 $[1,n]$ \u7684\u53d6\u503c\u53ea\u6709\u6700\u591a\u4e24\u4e2a\uff0c\u6240\u4ee5\u6211\u4eec\u501f\u9274\u8d85\u7ea7\u82f1\u96c4\u90a3\u9898\u7684\u5efa\u6a21\uff0c\u4ee5\u4f4d\u7f6e $i$ \u4e3a\u5de6\u90e8\u70b9\uff0c\u5982\u679c $T_i$ \u7684\u53d6\u503c\u53ef\u4ee5\u4e3a $j$\uff0c$i$ \u5411 $j$ \u8fde\u8fb9\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c$T$ \u53ef\u4ee5\u7684\u53d6\u503c $[1,n]$ \u4e3a\u53f3\u90e8\u70b9\u3002\n\n\u63a5\u7740\u8dd1\u6700\u5927\u5339\u914d\u3002\u95ee\u9898\u6765\u4e86\uff0c\u600e\u4e48\u4fdd\u8bc1\u5b57\u5178\u5e8f\u6700\u5c0f\uff1f\u5b57\u5178\u5e8f\u5c0f\uff0c\u5c31\u662f\u8981\u4fdd\u8bc1\u8d8a\u9760\u524d\u7684\u4f4d\u7f6e\u8d8a\u5c0f\uff0c\u90a3\u4e48\u80af\u5b9a\u6700\u4f18\uff0c\u4e8e\u662f\u6211\u4eec\u6539\u53d8\u8dd1\u7684\u987a\u5e8f\uff0c\u5148\u786e\u5b9a\u9760\u540e\u7684\u4f4d\u7f6e\uff0c\u518d\u5411\u524d\u8dd1\uff0c\u8fd9\u6837\u5b50\u9760\u524d\u7684\u4f4d\u7f6e\u5c31\u53ef\u4ee5\u81ea\u7531\u5730\u5339\u914d\u5230\u66f4\u5c0f\u7684 $T$ \u503c\u3002\u800c\u4e14 $G_i$ \u9700\u8981\u6392\u4e2a\u5e8f\uff0c\u56e0\u4e3a\u5308\u7259\u5229\u662f\u679a\u4e3e\u5230\u53ef\u4ee5\u591a\u4e00\u4e2a\u5339\u914d\u5c31\u8df3\u51fa\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u4ece\u7f16\u53f7\u5c0f\u7684\u5f00\u59cb\u8bd5\u7740\u5339\u914d\u4f1a\u66f4\u4f18\u3002\n\n\u8fd8\u6709\uff0c\u8fd9\u9898\u4e0b\u6807\u4ece $0$ \u5f00\u59cb\uff0c\u6240\u4ee5\u6211\u4eec\u6700\u540e\u8f93\u51fa\u7b54\u6848\u7684\u65f6\u5019\u8981\u96c6\u4f53\u51cf $1$\u3002\u4e0d\u4ec5\u8981\u7ef4\u62a4\u4e00\u4e2a $match_v$\uff0c\u8fd8\u9700\u8981\u4e00\u4e2a $dy_u$\uff0c\u53ef\u4ee5\u66f4\u65b9\u4fbf\u5730\u8f93\u51fa\u7b54\u6848\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int N = 1e4 + 5;\nint n, match[N], vis[N], dy[N];\nvector <int> G[N];\n\nbool hungary(int u, int col) {\n\tfor (int v : G[u]) {\n\t\tif(vis[v] == col) continue;\n\t\tvis[v] = col;\n\t\tif(!match[v] || hungary(match[v], col)) return match[v] = u, dy[u] = v, 1;\n\t}\n\treturn 0;\n}\n\nint main() {\n\tscanf(\"%d\", &n);\n\t//0-index,0-index,0-index\n\tfor (int i = 1; i <= n; ++i) {\n\t\tint d; scanf(\"%d\", &d);\n\t\tif(i - d >= 1) G[i].emplace_back(i - d);\n\t\tif(i - d + n <= n) G[i].emplace_back(i - d + n);\n\t\tif(i + d <= n) G[i].emplace_back(i + d);\n\t\tif(i + d - n >= 1) G[i].emplace_back(i + d - n);\n\t\tif(!G[i].empty()) sort(G[i].begin(), G[i].end()); \n\t}\n\tint ans = 0;\n\tfor (int i = n; i >= 1; --i) ans += hungary(i, i);\n    // cout << ans << \"\\n\";\n\tif(ans != n) return puts(\"No Answer\"), 0;\n\tfor (int i = 1; i <= n; ++i) printf(\"%d \", dy[i] - 1);\n\treturn 0;\n}\n```",
        "postTime": 1677459091,
        "uid": 483928,
        "name": "Ziqqurat",
        "ccfLevel": 5,
        "title": "P1963 \u9898\u89e3"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P1963)\n\n\u4e8c\u5206\u56fe\u5165\u95e8\uff0c\u8fd9\u662f\u9053\u597d\u9898\u3002\n\n$\\operatorname{D}(x,y)=\\min(\\left\\vert x-y\\right\\vert,N-\\left\\vert x-y\\right\\vert)$ \u8fd9\u53e5\u8bdd\u7684\u610f\u601d\u662f\u6bcf\u4e2a $i$ \u5bf9\u5e94\u7684 $T_{i}$ \u53ea\u53ef\u80fd\u6709\u4e24\u4e2a\u3002\n\n\u82e5\u7ed3\u679c\u4e0d\u662f \"No Answer\" \uff0c\u90a3\u8fd9\u79cd\u60c5\u51b5\u5c31\u76f8\u5f53\u4e8e\u5b8c\u5168\u5339\u914d\uff0c\u81ea\u7136\u5bb9\u6613\u60f3\u5230\u5308\u7259\u5229\u7b97\u6cd5\u3002\n\n\u5b58\u50a8\u65f6\u6bcf\u4e2a $i$ \u4e0e $(i-d+n)\\bmod n$ \u548c $(i+d)\\bmod n$ \u76f8\u8fde\uff08\u4f9d\u636e $\\operatorname{D}(x,y)$ \u7684\u5b9a\u4e49\uff09\u3002\n\n\u56e0\u4e3a\u9898\u76ee\u8981\u6c42 $T$ \u6570\u7ec4\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u9006\u5411\u601d\u7ef4\uff0c\u540e\u9762\u7684\u70b9\u5148\u9009\u5b57\u5178\u5e8f\u5c0f\u7684\uff0c\u5982\u679c\u524d\u9762\u7684\u70b9\u9700\u8981\u5c31\u518d\u7ed9\u51fa\u53bb\u3002\n\n**\u6709\u4e00\u70b9\u6ce8\u610f\uff1a\u7531\u4e8e $T$ \u662f $0\\sim n-1$\uff0cfor \u5faa\u73af\u5185\u6700\u597d\u662f\u4ece $0$ \u5f00\u59cb\uff0c\u5426\u5219\u5904\u7406\u53ca\u5176\u9ebb\u70e6\u3002**\n\n\n------------\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n\n------------\n```c\n#include<bits/stdc++.h>\nusing namespace std;\nconst int range=1e4+5;\nint n,d,num1,num2,record,vis[2][range],solve[range],match[range],aray[range];\nbool matching(int u)\n{\n\tfor(int i=0;i<2;i++)\n\t{\n\t\tint v=vis[i][u];\n\t\tif(solve[v]) continue;\n\t\tsolve[v]=1;\n\t\tif(match[v]==-1 || matching(match[v]))\n\t\t{\n\t\t\tmatch[v]=u;\n\t\t\taray[u]=v;\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nvoid hungary()\n{\n\tfor(int i=n-1;i>-1;i--)\n\t{\n\t\tmemset(solve,0,sizeof(solve));\n\t\tif(matching(i)) record++;\n\t}\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tscanf(\"%d\",&d);\n\t\tnum1=(i-d+n)%n,num2=(i+d)%n;\n\t\tif(num1>num2) swap(num1,num2);\n\t\tvis[0][i]=num1,vis[1][i]=num2;\n\t}\n\tmemset(match,-1,sizeof(match));\n\thungary();\n\tif(record<n)\n\t{\n\t\tprintf(\"No Answer\");\n\t\treturn 0;\n\t}\n\tfor(int i=0;i<n;i++) printf(\"%d \",aray[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1674046968,
        "uid": 482824,
        "name": "Kelvin2009",
        "ccfLevel": 0,
        "title": "P1963 [NOI2009] \u53d8\u6362\u5e8f\u5217 \u9898\u89e3"
    },
    {
        "content": "\u5bf9\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e\uff0c\u53ef\u4ee5\u5f97\u5230\u4e24\u4e2a\u5907\u9009\u6570\u5b57\n\n\u4ece\u5f53\u524d\u70b9\u5411\u4e24\u4e2a\u5907\u9009\u8fde\u8fb9\n\n\u8dd1\u4e8c\u5206\u56fe\u5339\u914d\u5373\u53ef\n\n\u63a5\u4e0b\u6765\u89e3\u51b3\u5b57\u5178\u5e8f\u6700\u5c0f\u95ee\u9898\uff0c\u6839\u636e\u5308\u7259\u5229\u7b97\u6cd5\u7684\u7279\u70b9\uff0c\u540e\u9762\u904d\u5386\u5230\u7684\u4f1a\u628a\u524d\u9762\u7684\u7ed9\u9876\u6389\uff0c\u90a3\u4e48\u4e0d\u59a8\u5012\u7740\u505a\u4e8c\u5206\u56fe\u5339\u914d\uff0c\u53ef\u4ee5\u6ee1\u8db3\n\nCode\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define maxn 10010\nusing namespace std;\nstruct Edge{\n\tint to, next;\n}edge[maxn << 2];\nint num, head[maxn], n, vis[maxn], link[maxn], ans, print[maxn];\n\ninline int read(){\n\tint s = 0, w = 1;\n\tchar c = getchar();\n\tfor (; !isdigit(c); c = getchar()) if (c == '-') w = -1;\n\tfor (; isdigit(c); c = getchar()) s = (s << 1) + (s << 3) + (c ^ 48);\n\treturn s * w;\n}\n\nvoid addedge(int x, int y){ edge[++num] = (Edge){y, head[x]}, head[x] = num; }\n\nint dfs(int u){\n\tif (vis[u]) return 0;\n\tvis[u] = 1;\n\tfor (int i = head[u]; i; i = edge[i].next){\n\t\tint v = edge[i].to;\n\t\tif (!link[v] || dfs(link[v])){\n\t\t\tlink[v] = u; return 1;\n\t\t}\n\t}\n\treturn 0;\n}\n\nint main(){\n\tn = read();\n\tfor (int i = 1; i <= n; ++i){\n\t\tint x = read();\n\t\tint y = (i - 1 + x) % n, z = (i - 1 - x + n) % n;\n\t\taddedge(i - 1, max(y, z)), addedge(i - 1, min(y, z));\n\t}\n\tfor (int i = n - 1; i >= 0; --i){\n\t\tfor (int j = 0; j < n; ++j) vis[j] = 0;\n\t\tans += dfs(i);\n\t}\n\tif (ans == n){\n\t\tfor (int i = 0; i < n; ++i) print[link[i]] = i;\n\t\tfor (int i = 0; i < n; ++i) printf(\"%d \", print[i]);\n\t} else puts(\"No Answer\");\n\treturn 0;\n}\n```\n",
        "postTime": 1567929473,
        "uid": 51719,
        "name": "ModestCoder_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1963 \u3010[NOI2009]\u53d8\u6362\u5e8f\u5217\u3011"
    },
    {
        "content": "\u6211\u8fd9\u91cc\u63a8\u8350\u4e00\u4e0b[\u6211\u7684\u535a\u5ba2](https://www.luogu.org/blog/szr666--blog/)\n\n\u5728\u535a\u5ba2\u91cc\u89c2\u770b\u66f4\u7f8e\u89c2\u54e6~\n\n[\u9898\u76ee](https://www.luogu.org/problemnew/show/P1963)\n------------\n\n\n------------\n\n\u534e\u4e3d\u7684\u5206\u5272\u7ebf\n# \u89e3\u6790\n\n### \u5efa\u56fe\u524d\u7684\u51c6\u5907\n\u9898\u76ee\u8981\u6c42\u6211\u4eec\u6839\u636e\u7ed9\u51fa\u7684$i$\u548c$D_i$,\u53bb\u6c42\u51fa\u5408\u6cd5\u4e14\u5b57\u5178\u5e8f\u6700\u5c0f\u7684$T_i$\u5e8f\u5217\n\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7$i$\u548c$D_i$\u63a8\u51fa\u6210\u7acb\u7684$T_i$,\u5206\u56db\u79cd\u60c5\u51b5\u8ba8\u8bba,\u4e24\u4e2a\u7edd\u5bf9\u503c\u5185\u6b63\u8d1f\u5171\u56db\u79cd\u60c5\u51b5\n\n(\u5f53\u7136\u4e5f\u6709\u9898\u89e3\u7528\u53d6\u6a21\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5,\u4f46\u4e2a\u4eba\u611f\u89c9\u4e0d\u591f\u76f4\u89c2)\n\n\u6ce8\u610f\u5bf9\u4e0d\u5728\u8303\u56f4\u7684$T_i$\u820d\u53bb,\u8fd8\u6709\u82e5\u7528$\\lvert i-T_i \\rvert =D_i$\u63a8\u51fa\u7684$T_i$,\u4f46\n\n$\\lvert i-T_i \\rvert > N-\\lvert i-T_i \\rvert$,\u5219\u4e0d\u7b26\u5408\u53d6$min$\u64cd\u4f5c,\u5e94\u820d\u53bb\n\n### \u5efa\u56fe\n\n\u73b0\u5728\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4f4d\u7f6e$i$,\u90fd\u53ef\u4ee5\u9009\u62e9\u51e0\u4e2a$T_i$,\u5e76\u4e14\u9009\u4e86\u67d0\u4e2a$T_i$\u5219\u5176\u4ed6\u4f4d\u7f6e\u4e0d\u80fd\u518d\u9009\n\n\u5bf9\u4e8e$i$\u4e0e$T_i$\u95f4\u7684\u5173\u7cfb,\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u5b83\u4eec\u6ee1\u8db3\u4e8c\u5206\u56fe\u7684\u5b9a\u4e49,\u4e14\u6ee1\u8db3\u6700\u5927\u5339\u914d\u7684\u5b9a\u4e49\n\n\u6211\u4eec\u53ef\u4ee5\u5728$i$\u4e0e\u5176\u6240\u80fd\u9009\u62e9\u7684$T_i$\u8fde\u8fb9,(\u81f3\u4e8e\u65b9\u5411\u6211\u4eec\u4e4b\u540e\u8ba8\u8bba)\n\n\u5982\u679c\u6700\u5927\u5339\u914d\u4e3a$n$\u5219\u6709\u89e3,\u4e14\u901a\u8fc7\u5339\u914d\u6570\u7ec4$match$\u53ef\u77e5\u9053\u4e00\u79cd\u5408\u6cd5\u65b9\u6848\n\n### \u5b57\u5178\u5e8f\n\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u5308\u7259\u5229\u7b97\u6cd5\u7684\u6d41\u7a0b,\u5bf9\u5de6\u9762\u7684\u70b9\u8dd1\u641c\u7d22,\u53f3\u9762\u7684\u70b9\u7528$match$\u6570\u7ec4\u627e\u5230\u5339\u914d\n\n\u5bf9\u4e8e\u5de6\u9762\u7684\u4e00\u4e2a\u70b9,\u4f1a\u4f18\u5148\u641c\u7d22\u7b2c\u4e00\u6761\u4e0e\u5b83\u8fde\u8fb9\u7684\u70b9,\u82e5\u80fd\u627e\u5230\u589e\u5e7f\u8def\u5219\u5c06\u5b83\u4eec\u5339\u914d\n\n\u5426\u5219\u53bb\u627e\u7b2c\u4e8c\u6761\u8fb9,\u4ee5\u6b64\u7c7b\u63a8,\u5e76\u4e14\u627e\u5230\u589e\u5e7f\u8def\u65f6\u4e0d\u7ba1\u589e\u5e7f\u8def\u4e0a\u5176\u4ed6\u70b9\u7684\u5339\u914d\u987a\u5e8f\n\n\u5b57\u5178\u5e8f\u7684\u5b9a\u4e49\u4e3a\u8ba9\u524d\u9762\u7684\u6570\u5c3d\u53ef\u80fd\u5c0f,\u6240\u4ee5\u5e94\u4ece$i$\u5411$T_i$\u8fde\u8fb9,\u987a\u5e8f\u4ece\u5c0f\u5230\u5927\n\n\u56e0\u4e3a\u6bcf\u6b21\u5339\u914d\u67d0\u4e2a\u70b9\u4f1a\u5f04\u4e71\u4e4b\u524d\u5339\u914d\u70b9\u7684\u987a\u5e8f,\u6240\u4ee5\u5e94\u8ba9\u5c0f\u7684$i$\u5728\u641c\u7d22\u987a\u5e8f\u4e2d\u9760\u540e\n\n\u56e0\u4e3a\u5373\u4f7f\u4e3a\u6ee1\u8db3\u5f53\u524d\u4f4d\u6700\u5c0f\u800c\u5f04\u4e71$i$\u540e\u9762\u7684\u987a\u5e8f\u662f\u503c\u5f97\u7684\n\n\u5982$1 2 5 4 3$\u548c$1 3 2 4 5$,\u5c3d\u7ba1\u5e8f\u5217\u4e00\u4e2d\u56e0\u4f7f\u7b2c\u4e8c\u4e2a\u6570\u5c0f\u800c\u4f7f\u540e\u9762\u7684\u5b57\u5178\u5e8f\u5f88\u5927\n\n\u4f46\u5728\u6574\u4f53\u4e0a\u5374\u6bd4\u4e3a\u4fdd\u6301\u7b2c\u4e8c\u4e2a\u6570\u5f80\u540e\u5b57\u5178\u5e8f\u5c0f\u800c\u4f7f\u7b2c\u4e8c\u4e2a\u6570\u5e76\u975e\u6700\u5c0f\u7684\u5e8f\u5217\u4e8c\u66f4\u4f18\n\n\u5982\u679c\u5f53\u524d\u6570\u672a\u80fd\u548c\u7b2c\u4e00\u6761\u8fb9\u7684\u6570\u5339\u914d,\u90a3\u5982\u679c\u5339\u914d\u5219\u4e0d\u80fd\u4f7f\u6700\u5927\u5339\u914d\u4e3a$n$,\u7834\u574f\u4e86\u5408\u6cd5\u6027\n\n\u6240\u4ee5\u5728\u4fdd\u8bc1\u5728\u5408\u6cd5\u7684\u524d\u63d0\u4e0b\u4f7f\u524d\u9762\u7684\u6570\u5c3d\u53ef\u80fd\u5c0f\n\n### \u6ce8\u610f\u4e8b\u9879\n1.\u5982\u679c$T_i$\u5411$i$\u8fde\u8fb9\u4f1a\u600e\u6837\uff1f\n\n\u90a3\u5c31\u53d8\u6210\u4e86\u4f7f\u5c0f\u7684\u6570\u5c3d\u53ef\u80fd\u9760\u524d,\u770b\u8d77\u6765\u548c\u5b9a\u4e49\u6ca1\u6709\u533a\u522b,\u5374\u5751\u4e86\u6211\u5f88\u957f\u65f6\u95f4\n\n\u53cd\u4f8b:\n\n![](https://cdn.luogu.com.cn/upload/pic/75991.png)\n\n\u5176\u4e2d\u6570\u5b57\u4ee3\u8868\u4f4d\u7f6e,\u5b57\u6bcd\u4ee3\u8868\u4f4d\u7f6e\u4e0a\u7684\u503c\n\n$i$\u5411$T_i$\u8fde\u8fb9\uff1a$0-B\\  1-C \\ 2-A$ $\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ $ $T_i$\u5411$i$\u8fde\u8fb9\uff1a$A-1\\  B-2\\  C-0$\n\n\u8fd9\u662f\u56e0\u4e3a\u5339\u914d\u5f53\u524d\u70b9\u4f1a\u5f04\u4e71\u4e4b\u524d\u7684\u987a\u5e8f\n\n\u53ef\u4ee5\u770b\u4e00\u4e0b\u672c\u849f\u84bb\u4e0e\u4e00\u4f4d\u5927\u4f6c\u7684\u8ba8\u8bba\uff1a[\u4f20\u9001\u95e8](https://www.luogu.org/discuss/show/139622)\n\n2.\u7528\u94fe\u5f0f\u524d\u5411\u661f\u5efa\u56fe\u4ece\u5927\u5230\u5c0f\u52a0\u8fb9,\u5219\u8bbf\u95ee\u4e3a\u4ece\u5c0f\u5230\u5927\n\n3.\u5de6\u53f3\u4e24\u96c6\u5408\u70b9\u7684\u7f16\u53f7\u8981\u533a\u5206\u5f00\n\n# \u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nconst int N=11000;\nstruct node\n{\n\tint to;\n\tint next;\n};\nnode e[2*N];\nint head[N],ans[N],etot;\nvoid add(int x,int y)\n{\n\tetot++;\n\te[etot].to=y;\n\te[etot].next=head[x];\n\thead[x]=etot;\n}\nvoid read(int &x)\n{\n\tint f;\n\tf=1;\n\tx=0;\n\tchar c;\n\tc=getchar();\n\twhile((c<'0'||c>'9')&&c!='-')\n\t{\n\t\tc=getchar();\n\t}\n\tif(c=='-')\n\t{\n\t\tf=-1;\n\t\tc=getchar();\n\t}\n\twhile(c>='0'&&c<='9')\n\t{\n\t\tx=(x<<3)+(x<<1)+(c^48);\n\t\tc=getchar();\n\t}\n\tx=x*f;\n}\nint d[N];\nstruct node2\n{\n\tint fr;\n\tint to;\n};\nnode2 e2[10];\nint e2tot,vis[2*N],match[2*N];\nbool cmp(const node2& x1,const node2& x2)\n{\n\treturn x1.fr==x2.fr ? x1.to>x2.to : x1.fr<x2.fr; \n}\nbool dfs(int x)\n{\n\tint i,v;\n\tfor(i=head[x];i!=0;i=e[i].next)\n\t{\n\t\tv=e[i].to;\n\t\tif(!vis[v])\n\t\t{\n\t\t\tvis[v]=1;\n\t\t\tif(!match[v]||dfs(match[v]))\n\t\t\t{\t\n\t\t\t\tmatch[v]=x;\n\t\t\t\tans[x]=v;\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\nint main()\n{\n\tint n,i,x,y,z,xx,j;\n\tread(n);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tread(d[i]);\n\t}\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tx=d[i]+(i-1);\n\t\te2tot=0;\n\t\tif(x>=0&&x<=n-1&&x-i+1<=n/2&&x>=i-1)\n\t\t{\n\t\t\te2tot++;\n\t\t\te2[e2tot].fr=i;\n\t\t\te2[e2tot].to=x+n+1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tx=-1;\n\t\t}\n\t\ty=(i-1)-d[i];\n\t\tif(y>=0&&y<=n-1&&y!=x&&i-1-y<=n/2&&y<=i-1)\n\t\t{\n\t\t\te2tot++;\n\t\t\te2[e2tot].fr=i;\n\t\t\te2[e2tot].to=y+n+1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ty=-1;\n\t\t}\n\t\tz=(i-1)+d[i]-n;\n\t\tif(z>=0&&z<=n-1&&z!=x&&z!=y&&i-1-z>n/2&&z<=i-1)\n\t\t{\n\t\t\te2tot++;\n\t\t\te2[e2tot].fr=i;\n\t\t\te2[e2tot].to=z+n+1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tz=-1;\n\t\t}\n\t\txx=n+(i-1)-d[i];\n\t\tif(xx>=0&&xx<=n-1&&xx!=x&&xx!=y&&xx!=z&&xx-i+1>n/2&&xx>=i-1)\n\t\t{\n\t\t\te2tot++;\n\t\t\te2[e2tot].fr=i;\n\t\t\te2[e2tot].to=xx+n+1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\txx=-1;\n\t\t}\n\t\tsort(e2+1,e2+1+e2tot,cmp);\n\t\tfor(j=1;j<=e2tot;j++)\n\t\t{\n\t\t\tadd(e2[j].fr,e2[j].to);\n\t\t}\n\t}\n\tfor(i=n;i>=1;i--)\n\t{\n\t\tmemset(vis,0,sizeof(vis));\n\t\tvis[i]=1;\n\t\tif(!dfs(i))\n\t\t{\n\t\t\tprintf(\"No Answer\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tprintf(\"%d \",ans[i]-1-n);\n\t}\n}\n```\n",
        "postTime": 1566708940,
        "uid": 129849,
        "name": "szr666",
        "ccfLevel": 4,
        "title": "\u7701\u9009NOI-\u4e13\u9898[\u4e8c\u5206\u56fe][\u6700\u5927\u5339\u914d]\uff1aP1963 [NOI2009]\u53d8\u6362\u5e8f\u5217"
    },
    {
        "content": "\u4e8c\u5206\u56fe\u7684\u5b8c\u7f8e\u5339\u914d\uff0c\u7528\u5308\u7259\u5229\u7b97\u6cd5\n\n\u6bcf\u4e2a\u6570\u53ea\u4e0e(di+i)%n\uff0c(n-di+i)%n\u8054\u901a\n\n\u5bf9\u4e8e\u5b57\u5178\u5e8f\uff0c\u9006\u5411\u5339\u914d\n\n\u00b7\u00b7\u00b7\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint aa,re[10001],er[10001],vis[10001],path[10001][2],i,n;//path\u5b58\u50a8\u5339\u914d\u65b9\u6848\nbool get(int x){\n    int j;\n    if(x==-1)return false;\n    for(j=0;j<2;j++){\n//        for(i=0;i<n;i++)printf(\"%d\",6);\n        if(!vis[path[x][j]])\n        {\n            vis[path[x][j]]=1;\n            if(re[path[x][j]]==-1||\n           get(re[path[x][j]]))//\u589e\u5e7f\u8def\u5f84\n            {\n                er[x]=path[x][j];\n                re[path[x][j]]=x;\n                return true;\n            }\n        }\n    }\n    return false;\n}\nvoid zxt(){\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n        scanf(\"%d\",&aa);\n        path[i][0]=min((aa+i)%n,(n-aa+i)%n);\n        path[i][1]=max((aa+i)%n,(n-aa+i)%n);\n    }\n//    for(i=0;i<n;i++)printf(\"%d %d\\n\",path[i][1],path[i][2]);\n    memset(re,-1,sizeof(re)); \n    for(i=n-1;i>=0;i--)//\u4e3a\u4e86\u5b57\u5178\u5e8f\n    {\n        memset(vis,0,sizeof(vis));\n        if(!get(i))\n        {\n            printf(\"No Answer\");\n            return;\n        }\n    }\n//    printf(\"%d\\n\",er[3]);\n    for(i=0;i<n;i++)\n    printf(\"%d \",er[i]);\n}\nint main(){\n    return zxt(),0;\n}\n\u00b7\u00b7\u00b7\n```",
        "postTime": 1487508976,
        "uid": 36429,
        "name": "tene3nt",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1963 \u3010\u53d8\u6362\u5e8f\u5217\u3011"
    },
    {
        "content": "\u8d2a\u5fc3\u7b97\u6cd5\uff1a\n\n\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u6240\u6709\u5df2\u7ecf\u786e\u5b9a\u7684\u5339\u914d\uff0c\u5e76\u5728\u56fe\u4e2d\u5220\u53bb\u3002\u5bf9\u4e8e\u5269\u4e0b\u7684\u6bcf\u4e2a\u73af\uff0c\u53ea\u9700\u4ece\u5e8f\u53f7\u6700\u5c0f\u7684\u70b9\u5f00\u59cb\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff0c\u5e76\u8fdb\u884c\u5339\u914d\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\n\n\u9884\u5904\u7406\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(N)\uff0c\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(N)\uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(N)\u3002\n\n\u800c\u5012\u5e8f\u5339\u914d\uff0c\u6c42\u4e00\u6b21\u5b8c\u7f8e\u5339\u914d\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(N2)\u3002\n\n\u4ee3\u7801\uff1a\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <cstring>\nusing namespace std;\nconst int MAXN=20001,MAXM=MAXN*4;\nstruct edge\n{\n    edge *next;\n    int t;\n}*V[MAXN],ES[MAXM];\nint N,EC,Stack[MAXN];\nint S[MAXN][2],deg[MAXN],mat[MAXN];\nbool nuked[MAXN];\ninline void addedge(int a,int b)\n{\n    ES[++EC].next = V[a]; V[a] = ES + EC;\n    V[a]->t = b;\n    ES[++EC].next = V[b]; V[b] = ES + EC;\n    V[b]->t = a;\n    ++deg[b];\n    mat[b] = a;\n}\nvoid init()\n{\n    scanf(\"%d\",&N);\n    int i,d,t1,t2;\n    for (i=1;i<=N;++i)\n    {\n        scanf(\"%d\",&d);\n        t1 = i + d;\n        if (t1>N) t1-=N;\n        t2 = i - d;\n        if (t2<1) t2+=N;\n        if (t1 < t2)\n            S[i][0] = t1,S[i][1] = t2;\n        else\n            S[i][0] = t2,S[i][1] = t1;\n        addedge(i,S[i][1]+=N);\n        addedge(i,S[i][0]+=N);\n        deg[i] = 2;\n    }\n}\ninline void Match(int i,int j)\n{\n    mat[i] = j;\n    mat[j] = i;\n}\nvoid dfsMatch(int i,bool s)\n{\n    nuked[i] = true;\n    int j;\n    for (edge *e=V[i];e;e=e->next)\n    {\n        j = e->t;\n        if (!nuked[j])\n        {\n            dfsMatch(j,!s);\n            if (s)\n                Match(i,j);\n            break;\n        }\n    }\n}\nvoid noAnswer()\n{\n    printf(\"No Answer\\n\");\n    exit(0);\n}\nvoid cut()\n{\n    int Stop = 0,i,j;\n    for (i=1;i<=N;++i)\n    {\n        if (deg[i+N] == 0)\n            noAnswer();\n        else if (deg[i+N] == 1)\n            Stack[++Stop] = i+N;\n    }\n    while (Stop)\n    {\n        i = Stack[Stop--];\n        nuked[i] = true;\n        for (edge *e=V[i];e;e=e->next)\n        {\n            j = e->t;\n            if (!nuked[j])\n                break;\n        }\n        Match(i,j);\n        i = j;\n        nuked[i] = true;\n        for (edge *e=V[i];e;e=e->next)\n        {\n            j = e->t;\n            if (!nuked[j])\n            {\n                deg[j]--;\n                if (deg[j] == 0)\n                    noAnswer();\n                else if (deg[j] == 1)\n                    Stack[++Stop] = j;\n            }\n        }\n    }\n}\nvoid solve()\n{\n    cut();\n    for (int i=1;i<=N;i++)\n    {\n        if (!nuked[i])\n        {\n            dfsMatch(i,true);\n        }\n    }\n}\nvoid print()\n{\n    int i;\n    for (i=1;i<N;i++)\n        printf(\"%d \",mat[i] - N - 1);\n    printf(\"%d \",mat[i] - N - 1);\n}\nint main()\n{\n    init();\n    solve();\n    print();\n    return 0;\n}\n```",
        "postTime": 1497347154,
        "uid": 26225,
        "name": "\u4e0d\u662f\u61a8\u61a8",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1963 \u3010\u53d8\u6362\u5e8f\u5217\u3011"
    }
]