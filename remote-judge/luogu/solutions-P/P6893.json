[
    {
        "content": "## Link\n\n[P6893 [ICPC2014 WF]Buffed Buffet](https://www.luogu.com.cn/problem/P6893)\n\n## Solution\n\n\u663e\u7136\u8fd9\u4e2a\u95ee\u9898\u770b\u7740\u5c31\u975e\u5e38\u80cc\u5305\u3002\n\n\u6ce8\u610f\u5230\u98df\u7269\u5176\u5b9e\u5206\u6210\u4e24\u7c7b\uff0c\u8d21\u732e\u5206\u522b\u662f\u79bb\u6563\u548c\u8fde\u7eed\u7684\u3002\n\n\u56de\u60f3\u4e00\u4e0b\u6211\u4eec\u521d\u5b66DP\u65f6\uff0c\u6709\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u7ed3\u8bba\uff1a01\u80cc\u5305\u4e0d\u53ef\u4ee5\u8d2a\u5fc3\uff0c\u4f46\u662f\u5206\u6570\u80cc\u5305\u53ef\u4ee5\u3002\n\n\u90a3\u4e48\u4f5c\u7528\u5230\u8fd9\u9898\u4e0a\uff0c\u6211\u4eec\u5206\u5f00\u8003\u8651\u8fd9\u4e24\u79cd\u7269\u54c1\u3002\n\n\u5bf9\u4e8e\u4e0d\u8fde\u7eed\u7684\uff0c\u6211\u4eec\u8bbe\u8ba1\u4e00\u4e2a\u80cc\u5305\uff1b\u5bf9\u4e8e\u8fde\u7eed\u7684\uff0c\u6211\u4eec\u8bbe\u8ba1\u4e00\u4e2a\u8d2a\u5fc3\u3002\n\n\u5148\u8003\u8651\u76f8\u5bf9\u590d\u6742\u4e00\u70b9\u7684\u80cc\u5305\uff1a\n\n\u8bbe $f_{i,j}$ \u8868\u793a\u524d $i$ \u79cd\u83dc\u5403\u4e86 $j$ \u514b\u65f6\u53ef\u83b7\u5f97\u7684\u6700\u5927\u7f8e\u5473\u503c\uff0c\u5219\u6709\u8f6c\u79fb\uff1a\n$$\nf_{i,j}=\\max_{0\\le k \\le \\lfloor\\frac{j}{w_i}\\rfloor}(f_{i-1, j - kw_i}+\\sum_{n=1}^k(t_i - (n - 1)\\Delta t_i))\n$$\n\u76f4\u63a5\u8f6c\u79fb\u8981\u679a\u4e3e $i$\uff0c$j$\uff0c$k$\uff0c\u590d\u6742\u5ea6\u5927\u6982\u662f ${\\mathcal O}(dw^2)$\u3002\u80af\u5b9a\u662f\u8fc7\u4e0d\u53bb\u7684\uff0cT\u200b\u98de\u4e86\uff0c\u90a3\u4e48\u80af\u5b9a\u662f\u8003\u8651\u4f18\u5316\u3002\n\n\u8fd9\u4e2a\u80cc\u5305\u867d\u7136\u662f\u4e24\u7ef4\u7684\uff0c\u4f46\u662f\u719f\u6089\u80cc\u5305\u7684\u4f60\u80af\u5b9a\u77e5\u9053\uff0c$i$ \u8fd9\u4e00\u7ef4\u5b9e\u9645\u4e0a\u662f\u201c\u5047\u201d\u7684\u3002\u6216\u8005\u8bf4\uff0c$i$\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u53ea\u8d77\u5230\u4e86\u4e00\u4e2a\u6807\u8bb0\u7248\u672c\u7684\u4f5c\u7528\u3002\u90a3\u4e48\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f80\u4e00\u7ef4DP\u7684\u5404\u79cd\u4f18\u5316\u7684\u89d2\u5ea6\u8003\u8651\u3002\n\n\u72b6\u6001\u4e0a\u662f\u4e0d\u592a\u80fd\u538b\u7f29\u4e86\u3002\u8003\u8651\u4f18\u5316\u8f6c\u79fb\u7684\u8fc7\u7a0b\uff0c\u5229\u7528\u4e00\u4e0b\u51b3\u7b56\u5355\u8c03\u6027\uff0c\u5148\u628a\u5f0f\u5b50\u62c6\u4e00\u4e0b\uff1a\n$$\nf_{i,j}=\\max_{0\\le k \\le \\lfloor\\frac{j}{w_i}\\rfloor}(f_{i-1, j - kw_i}+kt_i-\\dfrac{\\Delta t_ik(k-1)}2)\n$$\n\u7136\u540e\u4f60\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u957f\u5f97\u975e\u5e38\u7684\u659c\u7387\u4f18\u5316\uff0c\u4e8e\u662f\u6211\u4eec\u5f80\u8fd9\u4e2a\u65b9\u9762\u8003\u8651\uff1a\n$$\nf_j = \\max_{0\\le k \\le \\lfloor\\frac{j}{w}\\rfloor}(g_{j - kw}+kt-\\dfrac{\\Delta tk(k-1)}2)\n$$\n\u6211\u4eec\u628a\u4e0b\u6807\u5173\u4e8e$w_i$\u7684\u540c\u4f59\u7c7b\u5206\u5f00\u8003\u8651\uff0c\u53d8\u6362\u4e0b\u6807\uff0c\u8bb0 $i' = \\lfloor\\dfrac{i}{w}\\rfloor$\uff0c\u5219\u6709\uff1a\n$$\n\\begin{aligned}\nf_j &= \\max_{0\\le i \\le j}(g_i + (j - i)t - \\dfrac{\\Delta t(j-i)(j-i-1)}2) \\\\\n&= \\max_{0\\le i \\le j}(g_i + jt - it - \\dfrac{\\Delta t}2(j^2-2ij+i^2-j+i)) \\\\\n&= \\max_{0\\le i \\le j}(g_i - it - \\dfrac{\\Delta t}2i(i+1) + \\Delta tij) + jt - \\dfrac{\\Delta t}2j(j-1) \\\\\ng_i - it - \\dfrac{\\Delta t}2i(i + 1) &= - \\Delta tj \\times i + f_j - jt + \\dfrac{\\Delta t}2j(j-1)\n\\end{aligned}\n$$\n\u8fd9\u4e2a\u5f0f\u5b50\u5c31\u53ef\u4ee5\u659c\u7387\u4f18\u5316\u505a\u4e86\uff0c\u590d\u6742\u5ea6 $\\mathcal{O}(dw)$\u3002\n\n\u7136\u540e\u8003\u8651\u8fde\u7eed\u7684\u8d2a\u5fc3\u90e8\u5206\u3002\n\n\u6211\u4eec\u6bcf\u6b21\u90fd\u53d6\u5f53\u524d\u7f8e\u5473\u503c\u6700\u5927\u7684\uff0c\u7136\u540e\uff0c\u5f53\u4e24\u79cd\u98df\u54c1\u7684\u7f8e\u5473\u503c\u76f8\u7b49\u7684\u65f6\u5019\uff0c\u6211\u4eec\u201c\u5408\u5e76\u201d\u8fd9\u4e24\u79cd\u98df\u54c1\u3002\n\n\u5177\u4f53\u7684\uff0c\u5f53\u4e24\u79cd\u7f8e\u5473\u503c\u5206\u522b\u4e3a$a$\uff0c$b$\u7684\u8fde\u7eed\u98df\u54c1\u5408\u5e76\u7684\u65f6\u5019\uff0c\u65b0\u98df\u54c1\u7684\u7f8e\u5473\u503c\u5c31\u662f $\\dfrac1{\\frac{1}a + \\frac{1}b}$\uff0c\u90a3\u4e48\u8fd9\u90e8\u5206\u7684\u590d\u6742\u5ea6\u662f $\\mathcal{O}(d + w)$\u3002\n\n\u6700\u540e\u679a\u4e3e\u4e0b\u591a\u5c11\u7ed9\u79bb\u6563\uff0c\u591a\u5c11\u7ed9\u8fde\u7eed\uff0c\u5c31\u505a\u5b8c\u4e86\u3002\n\n## Code\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <deque>\n\n#define _D 260\n#define _W 10010\n#define _INF 1e18\n#define _EPS 1e-10\n\nstruct C {\n\tint t, dt;\n};\nstruct D {\n\tint w, t, dt;\n};\n\nbool inline operator <(const C& left, const C& right) {\n\treturn left.t > right.t;\n}\n\nint d, w;\n\nint ccnt, dcnt;\nC fdc[_D];\nD fdd[_D];\n\nnamespace workD {\n\tint curt, curdt, curw, r;\n\tdouble f[_W], tmp[_W];\n\t\n\tstd::deque<int> q;\n\t\n\tdouble inline x(int p) {\n\t\treturn 1.0 * p;\n\t}\n\tdouble inline y(int p) {\n\t\treturn tmp[p * curw + r] - 1.0 * p * curt - 0.5 * curdt * p * (p + 1);\n\t}\n\tdouble inline slope(int left, int right) {\n\t\tdouble lx = x(left), rx = x(right), ly = y(left), ry = y(right);\n\t\treturn (ry - ly) / (rx - lx == 0 ? _EPS : rx - lx);\n\t}\n\t\n\tvoid ins(int p) {\n\t\twhile (q.size() > 1 && slope(q[q.size() - 2], q.back()) < slope(q[q.size() - 2], p)) {\n\t\t\tq.pop_back();\n\t\t}\n\t\tq.push_back(p);\n\t}\n\tvoid del(double k) {\n\t\twhile (q.size() > 1 && slope(q.front(), q[1]) > k) {\n\t\t\tq.pop_front();\n\t\t}\n\t}\n\n\tvoid add(int wi, int t, int dt) {\n\t\tcurw = wi, curt = t, curdt = dt;\n\t\tfor (int i = 1; i <= w; i++) {\n\t\t\ttmp[i] = f[i];\n\t\t\tf[i] = -_INF;\n\t\t}\n\t\tfor (r = 0; r < wi; r++) {\n\t\t\tq.clear();\n\t\t\tfor (int j = 0; j * wi + r <= w; j++) {\n\t\t\t\tins(j);\n\t\t\t\tdel(-1.0 * dt * j);\n\t\t\t\tint i = q.front();\n\t\t\t\tf[j * wi + r] = std::max(f[j * wi + r], tmp[i * wi + r] + 1.0 * (j - i) * t - 1.0 * (j - i) * (j - i - 1) / 2 * dt);\n\t\t\t}\n\t\t}\n\t}\n\n\tvoid calc() {\n\t\tfor (int i = 1; i <= w; i++) {\n\t\t\tf[i] = -_INF;\n\t\t}\n\t\tfor (int i = 1; i <= dcnt; i++) {\n\t\t\tadd(fdd[i].w, fdd[i].t, fdd[i].dt);\n\t\t}\n\t}\n}\nnamespace workC {\n\tdouble f[_W];\n\n\tvoid calc() {\n\t\tif (ccnt == 0) {\n\t\t\tfor (int i = 1; i <= w; i++) {\n\t\t\t\tf[i] = -_INF;\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tstd::sort(fdc + 1, fdc + ccnt + 1);\n\t\tint pt = 1;\n\t\tdouble curv = fdc[1].t, curdt = fdc[1].dt, curw = 0, cursum = 0;\n\t\tpt++;\n\t\tfor (int i = 1; i <= w; i++) {\n\t\t\twhile (curw < 1.0 * i) {\n\t\t\t\tif (pt > ccnt || curv - curdt * (i - curw) > 1.0 * fdc[pt].t) {\n\t\t\t\t\tcursum += curv * (i - curw) - 0.5 * (i - curw) * (i - curw) * curdt;\n\t\t\t\t\tcurv -= curdt * (i - curw), curw = i;\n\t\t\t\t} else {\n\t\t\t\t\tdouble q = (curv - 1.0 * fdc[pt].t) / curdt;\n\t\t\t\t\tcursum += curv * q - 0.5 * q * q * curdt;\n\t\t\t\t\tcurv = fdc[pt].t, curw += q;\n\t\t\t\t\tcurdt = 1.0 / (1.0 / curdt + 1.0 / (fdc[pt].dt != 0 ? fdc[pt].dt : _EPS));\n\t\t\t\t\tpt++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tf[i] = cursum;\n\t\t}\n\t}\n}\n\nint main() {\n\tscanf(\"%d%d\", &d, &w);\n\twhile (d--) {\n\t\tchar tp[10];\n\t\tscanf(\"%s\", tp);\n\t\tswitch (tp[0]) {\n\t\t\tcase 'D':\n\t\t\t\t++dcnt;\n\t\t\t\tscanf(\"%d%d%d\", &fdd[dcnt].w, &fdd[dcnt].t, &fdd[dcnt].dt);\n\t\t\t\tbreak;\n\t\t\tcase 'C':\n\t\t\t\t++ccnt;\n\t\t\t\tscanf(\"%d%d\", &fdc[ccnt].t, &fdc[ccnt].dt);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\tworkC::calc(), workD::calc();\n\tdouble ans = -_INF;\n\tfor (int i = 0; i <= w; i++) {\n\t\tans = std::max(ans, workC::f[i] + workD::f[w - i]);\n\t}\n\tif (ccnt == 0 && ans < -1e16) {\n\t\tputs(\"impossible\");\n\t} else {\n\t\tprintf(\"%.10lf\\n\", ans);\n\t}\n\treturn 0;\n}\n```\n\n## Inspiration\n\n\u6211\u8ba4\u4e3a\u8fd9\u4e00\u9053\u9898\u76ee\u5904\u7406\u65b9\u6cd5\u6574\u4f53\u6765\u8bf4\u6bd4\u8f83\u81ea\u7136\uff0c\u6ca1\u6709\u592a\u8fc7\u4e8e\u9700\u8981\u201c\u60f3\u8c61\u529b\u201d\u7684\u6b65\u9aa4\uff0c\u57fa\u672c\u4e0a\u8bf4\u662f\u6309\u90e8\u5c31\u73ed\u3002\n\n\u6838\u5fc3\u7ed3\u8bba\uff1a\n\n- \u80cc\u5305\u6709\u4e00\u7ef4\u5b9e\u9645\u4e0a\u4e0d\u91cd\u8981\uff0c\u6545\u53ef\u4ee5\u770b\u6210\u4e00\u7ef4\u7684\u7136\u540e\u659c\u7387\u4f18\u5316\n- \u4e24\u79cd\u8fde\u7eed\u7684\u98df\u54c1\u5728\u7f8e\u5473\u503c\u76f8\u540c\u65f6\u53ef\u4ee5\u5408\u5e76",
        "postTime": 1618733698,
        "uid": 244096,
        "name": "FangZeLi",
        "ccfLevel": 7,
        "title": "P6893\u9898\u89e3"
    },
    {
        "content": "\u5bf9\u4e8e\u79bb\u6563\u7684\u98df\u7269\uff0c$w$ \u76f8\u540c\u7684\u53ea\u7559\u4e0b\u7f8e\u5473\u503c\u6700\u5927\u7684 $W/w$ \u4e2a\uff0c\u56e0\u4e3a\u518d\u591a\u4e86\u4e5f\u6ca1\u7528\u4e0d\u4f1a\u66f4\u4f18\u3002\u6240\u4ee5\u4e00\u5171\u53ea\u6709 $\\sum_{i=1}^n \\frac{W}{i}=\\mathcal{O}(W\\log n)$ \u8fd9\u6837\u66b4\u529b\u80cc\u5305\u590d\u6742\u5ea6\u5c31\u662f $\\mathcal{O}(W^2\\log n)$\uff0e\n\n\u7136\u540e\u8003\u8651\u8fde\u7eed\u7684\u600e\u4e48\u505a\u3002\u679a\u4e3e\u79bb\u6563\u7684\u5360\u4e86 $w$ \u7684\u91cd\u91cf\uff0c\u90a3\u4e48\u79bb\u6563\u7684\u4e00\u5b9a\u662f\u5148\u53d6\u4e0d\u65ad\u5403\u6700\u7f8e\u5473\u7684\uff0c\u76f4\u5230\u6700\u7f8e\u5473\u7684\u548c\u6b21\u7f8e\u5473\u7684\u4e00\u6837\u597d\u5403\uff0c\u8fd9\u6837\u8fd9\u4e24\u4e2a\u98df\u7269\u5c31\u53ef\u4ee5\u770b\u6210\u4e00\u4e2a\u4e86\u3002\u52a0\u5165\u5176\u4e2d\u4e24\u4e2a $\\Delta t$ \u5206\u522b\u662f $x,y$\uff0c\u7a0d\u5fae\u63a8\u63a8\u80fd\u63a8\u51fa\u65b0\u7684\u98df\u7269\u7684 $\\Delta t$ \u4e3a $\\frac{xy^2+x^2y}{(x+y)^2}$\uff0e\n\n\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u5c31\u662f $\\mathcal{O}(W^2\\log n+Wn)$\uff0e\n\n```cpp\n#include<cstdio>\n#include<vector>\n#include<queue>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#include<ctime>\n#include<random>\n#include<assert.h>\n#define pb emplace_back\n#define mp make_pair\n#define fi first\n#define se second\n#define dbg(x) cerr<<\"In Line \"<< __LINE__<<\" the \"<<#x<<\" = \"<<x<<'\\n';\n#define dpi(x,y) cerr<<\"In Line \"<<__LINE__<<\" the \"<<#x<<\" = \"<<x<<\" ; \"<<\"the \"<<#y<<\" = \"<<y<<'\\n';\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double ld;\ntypedef pair<int,int>pii;\ntypedef pair<ld,ld>pdd;\ntypedef pair<ll,int>pli;\ntypedef pair<ll,ll>pll;\ntypedef pair<int,ll>pil;\ntypedef vector<int>vi;\ntypedef vector<ll>vll;\ntypedef vector<pii>vpii;\ntypedef vector<pil>vpil;\ntemplate<typename T>T cmax(T &x, T y){return x=x>y?x:y;}\ntemplate<typename T>T cmin(T &x, T y){return x=x<y?x:y;}\ntemplate<typename T>\nT &read(T &r){\n\tr=0;bool w=0;char ch=getchar();\n\twhile(ch<'0'||ch>'9')w=ch=='-'?1:0,ch=getchar();\n\twhile(ch>='0'&&ch<='9')r=r*10+(ch^48),ch=getchar();\n\treturn r=w?-r:r;\n}\ntemplate<typename T1,typename... T2>\nvoid read(T1 &x,T2& ...y){read(x);read(y...);}\nconst int mod=998244353;\ninline void cadd(int &x,int y){x=(x+y>=mod)?(x+y-mod):(x+y);}\ninline void cdel(int &x,int y){x=(x-y<0)?(x-y+mod):(x-y);}\ninline int add(int x,int y){return (x+y>=mod)?(x+y-mod):(x+y);}\ninline int del(int x,int y){return (x-y<0)?(x-y+mod):(x-y);}\nint qpow(int x,int y){\n\tint s=1;\n\twhile(y){\n\t\tif(y&1)s=1ll*s*x%mod;\n\t\tx=1ll*x*x%mod;\n\t\ty>>=1;\n\t}\n\treturn s;\n}\nconst int N=10010;\nconst ll inf=0x3f3f3f3f3f3f3f3f;\nint n,m,W;\npdd lx[N],b[N];\nvpii vec[N],ls;\nll f[N];\nld calc(pdd x,ld y){\n\treturn x.fi*y-0.5*x.se*y*y;\n}\nsigned main(){\n\t#ifdef do_while_true\n//\t\tassert(freopen(\"data.in\",\"r\",stdin));\n//\t\tassert(freopen(\"data.out\",\"w\",stdout));\n\t#endif\n\tread(n,W);\n\tfor(int i=1;i<=W;i++)f[i]=-inf;\n\tfor(int i=1;i<=n;i++){\n\t\tint w,t,dt;\n\t\tchar c=getchar();while(c<'A'||c>'Z')c=getchar();\n\t\tif(c=='D'){\n\t\t\tread(w,t,dt);\n\t\t\tvec[w].pb(mp(t,dt));\n\t\t}\n\t\telse{\n\t\t\tread(t,dt);\n\t\t\tlx[++m]=mp(t,dt);\n\t\t}\n\t}\n\tsort(lx+1,lx+m+1,[](const pdd &x,const pdd &y){return x>y;});\n\tfor(int o=1;o<=W;o++)if(vec[o].size()){\n\t\tvi a;\n\t\tfor(auto i:vec[o])\n\t\t\tfor(int j=1;j<=W/o;j++)\n\t\t\t\ta.pb(i.fi-(j-1)*i.se);\n\t\tnth_element(a.begin(),a.begin()+W/o,a.end(),[](const int &x,const int &y){return x>y;});\n\t\tfor(int i=0;i<W/o;i++)\n\t\t\tfor(int j=W;j>=o;j--)\n\t\t\t\tif(f[j-o]!=-inf)\n\t\t\t\t\tcmax(f[j],f[j-o]+a[i]);\n\t}\n\tif(m==0){\n\t\tif(f[W]==-inf)puts(\"impossible\");\n\t\telse cout << f[W] << '\\n';\n\t\treturn 0;\n\t}\n\tld ans;\n\tfor(int o=0;o<=W;o++){\n\t\tfor(int i=1;i<=m;i++)b[i]=lx[i];\n\t\tld sum=f[o],rem=W-o;\n\t\tfor(int i=1;i<=m;i++){\n\t\t\tif(i<m){\n\t\t\t\tld delta=(b[i].fi-b[i+1].fi)/b[i].se;\n\t\t\t\tif(rem>delta){\n\t\t\t\t\tsum+=calc(b[i],delta);\n\t\t\t\t\trem-=delta;\n\t\t\t\t\tld x=b[i].se,y=b[i+1].se;\n\t\t\t\t\tb[i+1].se=(x*y*y+x*x*y)/((x+y)*(x+y));\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tsum+=calc(b[i],rem);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse sum+=calc(b[i],rem);\n\t\t}\n\t\tif(o==0)ans=sum;\n\t\telse cmax(ans,sum);\n\t}\n\tprintf(\"%.10lf\\n\",ans);\n    #ifdef do_while_true\n\t\tcerr<<'\\n'<<\"Time:\"<<1.0*clock()/CLOCKS_PER_SEC*1000<<\" ms\"<<'\\n';\n\t#endif\n\treturn 0;\n}\n```",
        "postTime": 1675260040,
        "uid": 223298,
        "name": "do_while_true",
        "ccfLevel": 8,
        "title": "\u300c\u9898\u89e3\u300d\u6d1b\u8c37 P6893 [ICPC2014 WF]Buffed Buffet"
    }
]