[
    {
        "content": "#### \u4e00\u9053\u7f51\u7edc\u6d41\u5efa\u6a21+\u8d2a\u5fc3\u6c42\u5272\u8fb9\u8fb9\u96c6\u597d\u9898\u3002\n\n\u4ece~~\u6570\u636e\u8303\u56f4~~\u4ee5\u53ca\u6c42\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u76f8\u5173\uff0c\u4e0d\u96be\u60f3\u5230[\u8fd9\u9053\u9898](https://www.luogu.com.cn/problem/P2766)\u3002\n\n\u5177\u4f53\u7684\uff0c\u8003\u8651\u7528\u4e00\u4e2a\u6d41\u91cf\u6765\u8868\u793a\u4e00\u4e2a\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u3002\n\n\u4e00\u4e2a\u8f83\u4e3a\u663e\u7136\u7684\u7ed3\u8bba\u662f\uff0c\u6c42\u51fa $\\text{dp}[i]$ \u8868\u793a\u4ee5 $i$ \u4e3a\u7ed3\u5c3e\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u540e\uff0c$i$ \u8fd9\u4e2a\u4f4d\u7f6e\u5728\u6700\u957f\u4e0a\u5347\u5e8f\u5217\u4e2d\u53ea\u80fd\u4f4d\u4e8e\u7b2c $\\text{dp}[i]$ \u4e2a\u4f4d\u7f6e~~\u663e\u7136\u5f88\u663e\u7136~~\uff0c\u5373\u6211\u4eec\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u4e0b\u6807\u5e8f\u5217 $\\text{pos}$ \u4e00\u5b9a\u6ee1\u8db3 $\\text{dp}[\\text{pos}[i]]=i $\u3002\n\n\u90a3\u4e48\u5982\u679c\u6211\u4eec\u5c06\u6240\u6709\u7684\u70b9\u6ee1\u8db3 $i<j$ \u4e14 $\\text{dp}[i]=\\text{dp}[j]-1$ \u7684\u4f4d\u7f6e $(i,j)$ \u5efa\u7acb\u4e00\u6761\u7531 $i$ \u6307\u5411 $j$ \u7684\u8fb9\uff0c\u4ee4\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u4e3a\u4e86 $\\text{len}$\uff0c\u90a3\u4e48\u4efb\u610f\u4e00\u6761\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u5c31\u53ef\u4ee5\u8868\u793a\u4e3a\u4e00\u6761\u4ece $\\text{dp}[s]=1$ \u7684\u70b9\u5230 $\\text{dp}[t]=\\text{len}$ \u7684\u70b9\u7684\u4e00\u6761\u8def\u5f84\uff0c\u800c\u56de\u5230\u8fd9\u9898\u7684\u8981\u6c42\u4fbf\u662f\u7834\u574f\u6240\u6709\u7684\u8fd9\u79cd\u8def\u5f84\u3002\n\n\u5bb9\u6613\u53d1\u73b0\u8fd9\u9898\u5141\u8bb8\u7834\u574f\u7684\u662f\u201d\u70b9\u201c\uff0c\u90a3\u4e48\u6700\u7ec8\u7684\u5efa\u56fe\u4e5f\u57fa\u672c\u660e\u6717\u4e86\u8d77\u6765\u3002\n\n1.\u5c06\u8fd9 $n$ \u4e2a\u70b9\u62c6\u4e3a\u4e24\u4e2a\u70b9\u5373\u5165\u70b9\u548c\u51fa\u70b9\uff0c\u5e76\u5c06\u6bcf\u4e2a\u5165\u70b9\u5411\u5bf9\u5e94\u51fa\u70b9\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $B[i]$ \u7684\u8fb9\uff0c\u8868\u793a\u7834\u574f\u6389\u8fd9\u4e2a\u70b9\u7684\u4ee3\u4ef7\u662f $B[i]$\uff0c\u4e5f\u5c31\u662f\u8fd9\u9898\u4e2d\uff0c\u6211\u4eec\u7528\u201d\u6700\u5c0f\u5272\u201c\u6765\u8868\u793a\u201c\u6700\u5c0f\u7684\u7834\u574f\u4ee3\u4ef7\u201d\u3002\n\n2.\u5c06\u6240\u6709\u6ee1\u8db3 $\\text{dp}[i]=1$ \u7684\u70b9\uff0c\u5efa\u7acb\u4e00\u6761\u7531\u6e90\u70b9 $\\text{S}$ \u5230 $i$ \u5165\u70b9\u7684\uff0c\u6d41\u91cf\u4e3a $\\text{inf}$ \u7684\u8fb9\uff1b\u5c06\u6240\u6709\u6ee1\u8db3 $\\text{dp}[j]=\\text{len}$ \u7684\u70b9\uff0c\u5efa\u7acb\u4e00\u6761\u7531 $j$ \u51fa\u70b9\u5230 \u6c47\u70b9 $\\text{T}$ \u7684\uff0c\u6d41\u91cf\u4e3a $\\text{inf}$ \u7684\u8fb9\u3002\n\n3.\u5c06\u6240\u6709\u7684\u70b9\u6ee1\u8db3 $i<j$ \u4e14 $\\text{dp}[i]=\\text{dp}[j]-1$ \u7684\u4f4d\u7f6e $(i,j)$ \u5efa\u7acb\u4e00\u6761\u7531 $i$ \u51fa\u70b9\u6307\u5411 $j$ \u5165\u70b9\u7684\uff0c\u6d41\u91cf\u4e3a $\\text{inf}$ \u7684\u8fb9\u3002\u8fd9\u6837\u4e00\u6761\u6761\u5f62\u5982 $\\text{S}$ -> $\\text{pos}[1]$\u5165\u70b9 -> $\\text{pos}[1]$\u51fa\u70b9 -> $\\text{pos}[2]$\u5165\u70b9 -> $\\text{pos}[2]$\u51fa\u70b9 -> $\\dots$ -> $\\text{pos}[\\text{len}]$\u5165\u70b9 -> $\\text{pos}[\\text{len}]$\u51fa\u70b9 -> $\\text{T}$ \u7684\u589e\u5e7f\u8def\u5373\u4e3a\u4e00\u6761\u6761\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u3002\u800c\u6d41\u91cf\u4e3a $\\text{inf}$ \u5219\u8868\u793a\u4e0d\u53ef\u7834\u574f\uff0c\u5b9e\u9645\u4e0a\u4e5f\u5c31\u662f\u6211\u4eec\u53ea\u5141\u8bb8\u7834\u574f\u6bcf\u6761\"\u5165\u70b9\u8fde\u5411\u5bf9\u5e94\u51fa\u70b9\u7684\u8fb9\u201c\u3002\n\n\u6700\u540e\u8dd1\u4e00\u904d $\\text{S}$ \u5230 $\\text{T}$ \u7684\u6700\u5c0f\u5272\u5373\u53ef\u6c42\u51fa\u7b2c\u4e00\u95ee\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\n\n\u518d\u8003\u8651\u5982\u4f55\u786e\u5b9a\u51fa\u9644\u52a0\u5c5e\u6027\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u6700\u5c0f\u5272\u5272\u8fb9\u8fb9\u96c6\u3002\n\n\u9996\u5148\u5bb9\u6613\u53d1\u73b0\u7684\u662f\uff0c\u6210\u4e3a\u5272\u8fb9\u7684\u4e00\u5b9a\u662f\u201d\u5165\u70b9\u8fde\u5411\u5bf9\u5e94\u51fa\u70b9\u7684\u8fb9\u201c\uff0c~~\u8fd9\u663e\u7136\u662f\u6211\u4eec\u4e00\u624b\u7b56\u5212\u7684~~\uff0c\u5c06\u9898\u76ee\u4e2d\u7684 $C$ \u6570\u7ec4 $\\text{sort}$ \u4e4b\u540e\uff0c\u6309\u987a\u5e8f\u8003\u8651\u6bcf\u6761\u8fb9\u662f\u5426\u53ef\u80fd\u6210\u4e3a\u5272\u8fb9\uff0c\u5982\u679c\u53ef\u80fd\u7684\u8bdd\u5c31\u5f3a\u5236\u94a6\u5b9a\u5b83\u4e3a\u5272\u8fb9\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u7684\u65f6\u5019\u4e5f\u4e0d\u9700\u8981\u5176\u4ed6\u9898\u89e3\u90a3\u4e48\u9ebb\u70e6\uff0c\u5224\u65ad\u4e00\u6761\u8fb9\u662f\u5426\u4e3a\u5272\u8fb9\uff0c\u663e\u7136\u5c31\u662f\u4ece\u8be5\u8fb9\u7684\u5165\u70b9\u65e0\u6cd5\u5230\u8fbe\u51fa\u70b9\uff08\u5f53\u7136\u4e0d\u8d70\u6d41\u91cf\u4e3a $0$ \u7684\u8fb9\uff09\uff0c\u4ee3\u7801\u5b9e\u73b0\u4e0a\u53ea\u9700\u8981\u8c03\u7528\u4e00\u904d $\\text{dinic}$ \u4e2d\u7684 $\\text{bfs}$ \u51fd\u6570\u5373\u53ef\u3002\u800c\u5f3a\u5236\u94a6\u5b9a\u4ed6\u4e3a\u5272\u8fb9\u53ea\u9700\u8981\u5c06\u6240\u6709\u8fb9\u590d\u539f\u540e\uff0c\u5220\u9664\u8fd9\u6761\u8fb9\uff08\u5c06\u5b83\u548c\u5b83\u7684\u53cd\u5411\u8fb9\u6d41\u91cf\u90fd\u7f6e\u4e3a $0$ \u5373\u53ef\uff09\uff0c\u518d\u91cd\u65b0\u8dd1\u4e00\u904d $S$ \u5230 $T$ \u7684\u6700\u5c0f\u5272\u7528\u4ee5\u5f97\u5230\u65b0\u56fe\u7684\u6700\u5c0f\u5272\u5373\u53ef\u3002\n\n\u6700\u540e\u5c06\u5f97\u5230\u7684\u201d\u9700\u7834\u574f\u70b9\u201c\u4e0b\u6807 $\\text{sort}$ \u4e00\u904d\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6\u5c31\u662f $n$ \u904d $\\text{dinic}$ \u7684\u590d\u6742\u5ea6\uff0c\u5982\u679c\u5c06\u8fb9\u7684\u6570\u91cf\u770b\u4f5c $n^2$ \u7684\u8bdd\uff0c\u590d\u6742\u5ea6\u5c31\u662f $\\Theta(n^5)$ ~~\u5b9e\u9645\u4e0a\u54ea\u91cc\u90fd\u4e0d\u6ee1~~\n\n\u6700\u540e\u653e\u4e00\u4e0b\u4ee3\u7801\n\n```cpp\ninline void add(rint x,rint y,rint flow)\n{\n\te[++cnt]=(Edge){y,head[x],flow},head[x]=cnt;\n}\n\nint bfs(rint s,rint t)\n{\n\tmemset(dis,0,sizeof(dis)),memcpy(tmphead,head,sizeof(head));\n\tqueue<int> q;q.push(s),dis[s]=1;\n\twhile(!q.empty())\n\t{\n\t\trint u=q.front();q.pop();\n\t\tfor(rint i=head[u];i;i=e[i].next)\n\t\t{\n\t\t\trint v=e[i].to;\n\t\t\tif(!e[i].flow||dis[v]) continue;\n\t\t\tdis[v]=dis[u]+1,q.push(v);\n\t\t\tif(v==t) return 1;\n\t\t}\n\t}\n\treturn 0;\n}\n\nint dfs(rint x,rint t,rint flow)\n{\n\tif(x==t) return flow;\n\trint rest=flow;\n\tfor(rint i=tmphead[x];i;i=e[i].next)\n\t{\n\t\ttmphead[x]=i;rint v=e[i].to;\n\t\tif(!e[i].flow||dis[v]!=dis[x]+1) continue;\n\t\trint tmp=dfs(v,t,min(rest,e[i].flow));\n\t\ttmp?e[i].flow-=tmp,e[i^1].flow+=tmp,rest-=tmp:dis[v]=0;\n\t\tif(!rest) return flow;\n\t}\n\treturn flow-rest;\n}\n\ninline void add_edge(rint x,rint y,rint flow)\n{\n\tadd(x,y,flow),add(y,x,0);\n}\n\nint main()\n{\n\tfor(rint tt=read<int>();tt;tt--)\n\t{\n\t\trint n=read<int>(),mx=0,s=0,t=n*2+1;memset(head,0,t+1<<2),cnt=1;\n\t\tfor(rint i=1;i<=n;i++) a[i]=read<int>();\n\t\tfor(rint i=1;i<=n;i++)\n\t\t{\n\t\t\tdp[i]=1;\n\t\t\tfor(rint j=1;j<i;j++)\n\t\t\t\tif(a[i]>a[j])\n\t\t\t\t\tdp[i]=max(dp[i],dp[j]+1);\n\t\t\tmx=max(mx,dp[i]);\n\t\t}\n\t\tfor(rint i=1;i<=n;i++) add_edge(i,i+n,read<int>());\n\t\tfor(rint i=1;i<=n;i++)\n\t\t{\n\t\t\tif(dp[i]==1) add_edge(s,i,inf);\n\t\t\tif(dp[i]==mx) add_edge(i+n,t,inf);\n\t\t\tfor(rint j=i+1;j<=n;j++)\n\t\t\t\tif(a[i]<a[j]&&dp[j]==dp[i]+1)\n\t\t\t\t\tadd_edge(i+n,j,inf);\n\t\t}\n\t\tfor(rint i=1;i<=n;i++) c[i]=(Node){read<int>(),i};\n\t\tsort(c+1,c+n+1,[](const Node &x,const Node &y){return x.val<y.val;});\n\t\trll ans=0;rint N=0;\n\t\twhile(bfs(s,t)) ans+=dfs(s,t,inf);\n\t\tfor(rint i=1;i<=n;i++)\n\t\t{\n\t\t\trint u=c[i].id,v=u+n;\n\t\t\tif(!bfs(u,v))\n\t\t\t{\n\t\t\t\tb[++N]=u,e[u*2].flow=e[u*2+1].flow=0;\n\t\t\t\tfor(rint i=2;i<=cnt;i+=2) e[i].flow+=e[i^1].flow,e[i^1].flow=0;\n\t\t\t\twhile(bfs(s,t)) dfs(s,t,inf);\n\t\t\t}\n\t\t}\n\t\tsort(b+1,b+N+1),printf(\"%lld %d\\n\",ans,N);\n\t\tfor(rint i=1;i<=N;i++) printf(\"%d \",b[i]);puts(\"\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1624193253,
        "uid": 50477,
        "name": "linfourxu",
        "ccfLevel": 9,
        "title": "P3308 [SDOI2014]LIS"
    },
    {
        "content": "\u8fd9\u9053\u9898\u8fd8\u662f\u975e\u5e38\u597d\u7684\n\n\u9996\u5148\u7b2c\u4e00\u95ee\u53ef\u4ee5\u8ba9\u6211\u4eec\u8054\u60f3\u5230\u67d0\u7f51\u7edc\u6d41\u4e8c\u5341\u56db\u9898\u91cc\u7684\u4e00\u9053\u9898\uff0c\u53d1\u73b0\u5efa\u56fe\u65b9\u5f0f\u5e94\u8be5\u548c\u8fd9\u9053\u9898\u5dee\u4e0d\u591a\u554a\n\n\u6240\u4ee5\u9996\u5148\u8dd1\u4e00\u904d$dp$\uff0c\u6c42\u51fa$dp[i]$\u8868\u793a$i$\u4f4d\u7f6e\u7ed3\u675f\u7684$LIS$\u957f\u5ea6\uff0c\u8bbe\u6700\u957f\u7684$LIS$\u957f\u5ea6\u4e3a$M$\n\n\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u5982\u679c\u60f3\u8981\u4f7f\u5f97\u8fd9\u4e2a$M$\u51cf\u5c0f\u8981\u5272\u6389\u4e00\u4e9b\u70b9\uff0c\u663e\u7136\u6211\u4eec\u5272\u6389\u7684\u662f\u70b9\uff0c\u6240\u4ee5\u5c06\u6bcf\u4e00\u4e2a\u70b9$i$\u62c6\u6210$i$\u548c$i'$\u4e24\u4e2a\u70b9\uff0c\u4e4b\u540e\u5728$i$\u548c$i'$\u4e4b\u95f4\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a$b_i$\u7684\u8fb9\uff0c\u8868\u793a\u5272\u6389\u8fd9\u4e2a\u70b9\u7684\u4ee3\u4ef7\u662f$b_i$\n\n\u4e4b\u540e\u6211\u4eec\u5c06\u90a3\u4e9b$dp[i]=M$\u70b9\u7684$i'$\u5411$T$\u8fde\u8fb9\uff0c$S$\u5411$dp[i]=1$\u7684$i$\u8fde\u8fb9\uff0c\u5bb9\u91cf\u90fd\u662f$inf$\uff0c\u8868\u793a\u8fd9\u4e9b\u8fb9\u5272\u4e0d\u6389\n\n\u4e4b\u540e\u8dd1\u4e00\u904d\u6700\u5c0f\u5272\u5c31\u662f\u7b2c\u4e00\u95ee\u7684\u7b54\u6848\u4e86\n\n\u8003\u8651\u7b2c\u4e8c\u95ee\uff0c\u6211\u4eec\u8981\u6784\u9020\u4e00\u7ec4\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u6700\u5c0f\u5272\n\n\u9996\u5148\u6709\u4e00\u4e2a\u524d\u7f6e\u77e5\u8bc6\uff0c\u5c31\u662f\u6700\u5c0f\u5272\u7684\u53ef\u884c\u8fb9\u4e0e\u5fc5\u987b\u8fb9\n\n\u4e00\u6761\u8fb9\u662f\u6700\u5c0f\u5272\u7684\u53ef\u884c\u8fb9\uff0c\u5c31\u8868\u660e\u8fd9\u6761\u8fb9\u5b58\u5728\u4e8e\u67d0\u4e00\u79cd\u6700\u5c0f\u5272\u4e2d\n\n\u4e00\u6761\u8fb9$(u,v)$\u662f\u6700\u5c0f\u5272\u7684\u53ef\u884c\u8fb9\u9700\u8981\u6ee1\u8db3\u4e24\u4e2a\u6761\u4ef6\n\n1. $(u,v)$\u6ee1\u6d41\n\n1. \u4e0d\u5b58\u5728\u4ece$u$\u5230$v$\u7684\u589e\u5e7f\u8def\u5f84\n\n\u6211\u4eec\u53ea\u9700\u8981\u770b\u770b\u4ece$u$\u5230$v$\u80fd\u4e0d\u80fd$bfs$\u5c31\u597d\u4e86\n\n\u6240\u4ee5\u6211\u4eec\u7684\u7b54\u6848\u5c31\u4e00\u5b9a\u662f\u6700\u5c0f\u5272\u7684\u53ef\u884c\u8fb9\uff0c\u6211\u4eec\u5f00\u59cb\u6784\u9020\u8fd9\u4e2a\u6700\u5c0f\u5272\u96c6\n\n\u6211\u4eec\u6309\u7167\u8fb9\u7684\u6743\u503c\u6392\u5e8f\uff0c\u5982\u679c\u4e00\u6761\u8fb9\u662f\u53ef\u884c\u8fb9\uff0c\u6211\u4eec\u5c31\u9700\u8981\u628a\u8fd9\u6761\u8fb9\u52a0\u5165\u7b54\u6848\n\n\u540c\u65f6\u9009\u62e9\u4e86\u8fd9\u6761\u8fb9\u7684\u8bdd\u6211\u4eec\u5c31\u5f97\u6392\u9664\u548c\u8fd9\u6761\u8fb9\u7b49\u4ef7\u7684\u90a3\u4e9b\u8fb9\u7684\u5f71\u54cd\n\n\u8fd9\u6761\u8fb9\u7b49\u4ef7\u7684\u90a3\u4e9b\u8fb9\u663e\u7136\u4f1a\u5b58\u5728\u4e8e$S$\u5230$u$\u548c$v$\u5230$T$\u7684\u8def\u5f84\u4e0a\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4ece$u$\u5411$S$\uff0c$T$\u5411$v$\u9000\u6d41,\u628a\u90a3\u4e9b\u6ee1\u6d41\u7684\u8fb9\u7684\u6d41\u91cf\u6e05\u6389\n\n\u9000\u6d41\u7684\u8bdd\u8dd1\u4e00\u904d$dinic$\u5c31\u597d\u4e86\n\n\u540c\u65f6\u6ce8\u610f\u4f18\u5316\u4e00\u4e0b$dinic$\u7684\u5e38\u6570\uff0c\u6709\u4e00\u70b9\u5361\u5e38\n\n\u4ee3\u7801\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<queue>\n#define re register\n#define maxn 1505\n#define LL long long\n#define inf 999999999\ninline int max(int a,int b){return a>b?a:b;}\ninline int min(int a,int b){return a<b?a:b;}\ninline int read()\n{\n    char c=getchar();int x=0;while(c<'0'||c>'9') c=getchar();\n    while(c>='0'&&c<='9') x=(x<<3)+(x<<1)+c-48,c=getchar();return x;\n}\nstruct node{int a,b,c,rk;}g[maxn];\ninline int cmp(node A,node B) {return A.c<B.c;}\nstruct E{int v,nxt,w,f;}e[maxn*maxn];\nint n,num=1,S,T,Test;\nint ans[maxn],cnt,id[maxn],vis[maxn];\nint d[maxn],dp[maxn],head[maxn],cur[maxn],in[maxn],out[maxn];\ninline void add(int x,int y,int z) {e[++num].v=y;e[num].nxt=head[x];head[x]=num;e[num].w=z;}\ninline void C(int x,int y,int z) {add(x,y,z),add(y,x,0);}\ninline int check(int s,int t)\n{\n    std::queue<int> q;\n    memset(vis,0,sizeof(vis));\n    q.push(s);vis[s]=1;\n    while(!q.empty())\n    {\n        int k=q.front();q.pop();\n        if(k==t) return 1;\n        for(re int i=head[k];i;i=e[i].nxt)\n        if(!vis[e[i].v]&&e[i].w>e[i].f) q.push(e[i].v),vis[e[i].v]=1;\n    }\n    return 0;\n}\ninline int BFS(int s,int t)\n{\n    std::queue<int> q;\n    memcpy(cur,head,sizeof(head));\n    memset(d,0,sizeof(d));\n    d[s]=1,q.push(s);\n    while(!q.empty())\n    {\n        int k=q.front();q.pop();\n        for(re int i=head[k];i;i=e[i].nxt)\n        if(!d[e[i].v]&&e[i].w>e[i].f) \n        {\n            d[e[i].v]=d[k]+1;\n            if(e[i].v==t) return 1;\n            q.push(e[i].v);\n        }\n    }\n    return d[t];\n}\nint dfs(int x,int now,int t)\n{\n    if(x==t||!now) return now;\n    int flow=0,ff;\n    for(re int& i=cur[x];i;i=e[i].nxt)\n    if(d[e[i].v]==d[x]+1)\n    {\n        ff=dfs(e[i].v,min(now,e[i].w-e[i].f),t);\n        if(ff<=0) continue;\n        now-=ff,flow+=ff;\n        e[i].f+=ff,e[i^1].f-=ff;\n        if(!now) break;\n    }\n    return flow;\n}\nint main()\n{\n    Test=read();\n    while(Test--)\n    {\n        n=read();cnt=0;num=1;memset(head,0,sizeof(head));\n        for(re int i=1;i<=n;i++) g[i].a=read(),dp[i]=1;\n        for(re int i=1;i<=n;i++) g[i].b=read(),g[i].rk=i;\n        for(re int i=1;i<=n;i++)\n            for(re int j=1;j<i;j++) if(g[j].a<g[i].a) dp[i]=max(dp[j]+1,dp[i]);\n        int tot=0;\n        for(re int i=1;i<=n;i++) tot=max(tot,dp[i]);\n        T=0;\n        for(re int i=1;i<=n;i++) in[i]=++T;\n        for(re int i=1;i<=n;i++) out[i]=++T;++T;\n        for(re int i=1;i<=n;i++) C(in[i],out[i],g[i].b),id[i]=num;\n        for(re int i=1;i<=n;i++) if(dp[i]==1) C(S,in[i],inf);\n        for(re int i=1;i<=n;i++) if(dp[i]==tot) C(out[i],T,inf);\n        for(re int i=1;i<=n;i++)\n            for(re int j=1;j<i;j++) if(g[j].a<g[i].a&&dp[j]+1==dp[i]) C(out[j],in[i],inf);\n        tot=0;\n        while(BFS(S,T)) \n            tot+=dfs(S,inf,T);\n        for(re int i=1;i<=n;i++) g[i].c=read();\n        printf(\"%d \",tot);\n        std::sort(g+1,g+n+1,cmp);\n        for(re int i=1;i<=n;i++)\n        {\n            int k=g[i].rk;\n            if(check(in[k],out[k])) continue;\n            ans[++cnt]=k;\n            while(BFS(T,out[k])) dfs(T,inf,out[k]);\n            while(BFS(in[k],S)) dfs(in[k],inf,S);\n            e[id[k]].w=e[id[k]^1].w=0;\n            e[id[k]].f=e[id[k]^1].f=0;\n        }\n        printf(\"%d\\n\",cnt);\n        std::sort(ans+1,ans+cnt+1);\n        for(re int i=1;i<=cnt;i++) printf(\"%d \",ans[i]);putchar(10);\n    }\n    return 0;\n}\n```",
        "postTime": 1548838260,
        "uid": 35178,
        "name": "asuldb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3308 \u3010[SDOI2014]LIS\u3011"
    },
    {
        "content": "\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u9996\u5148\u7528 dp \u6c42\u89e3\u4ee5\u6bcf\u4e2a\u70b9\u7ed3\u5c3e\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u957f\u5ea6\u3002\n\n\u82e5\u4e00\u4e2a\u70b9\u80fd\u88ab\u5b83\u524d\u9762\u7684\u4e00\u4e2a\u70b9\u8f6c\u79fb\uff0c\u90a3\u4e48\u5b83\u524d\u9762\u7684\u70b9\u5411\u5b83\u8fde\u8fb9\u3002\n\n\u5047\u8bbe\u6709\u6e90\u70b9\u548c\u6c47\u70b9\uff0c\u6e90\u70b9\u5411\u6240\u6709 $dp_i = 1$ \u7684\u4f4d\u7f6e\u8fde\u8fb9\uff0c\u6c47\u70b9\u5411\u6240\u6709 $dp_i = ans$ \u7684\u4f4d\u7f6e\u8fde\u8fb9\u3002\n\n\u4e0a\u8ff0\u7684\u8fb9\u90fd\u662f\u4e0d\u53ef\u5272\u7684\uff0c\u4f46\u662f\u70b9\u53ef\u4ee5\u5272\uff0c\u95ee\u9898\u8f6c\u5316\u6210\u4e86\u901a\u8fc7\u5220\u70b9\u5c06\u539f\u56fe\u5212\u5206\u4e3a\u4e24\u4e2a\u70b9\u96c6\u7684\u6700\u5c0f\u6743\u503c\u3002\n\n\u8fd9\u4e2a\u662f\u5957\u8def\uff0c\u76f4\u63a5\u5c06\u70b9\u6743\u62c6\u6210\u8fb9\u6743\uff0c\u4e00\u4e2a\u70b9\u62c6\u6210\u5165\u70b9\u548c\u51fa\u70b9\u540e\u5165\u70b9\u5411\u51fa\u70b9\u8fde\u8fb9\u6743\u4e3a\u539f\u70b9\u6743\u7684\u8fb9\u540e\u8dd1\u6700\u5c0f\u5272\u5373\u53ef\u3002\n\n\u8003\u8651\u5b57\u5178\u5e8f\u7684\u9650\u5236\uff0c\u53ef\u4ee5\u8f6c\u5316\u4e3a\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u6bcf\u6761\u8868\u793a\u5272\u70b9\u7684\u8fb9\u662f\u5426\u53ef\u5f3a\u5236\u5272\u53bb\uff0c\u5171\u8dd1 $n$ \u6b21\u7f51\u7edc\u6d41\u5373\u53ef\u3002\n\n\u5220\u5c31\u76f4\u63a5\u770b\u5728\u4e0a\u4e00\u6b21\u7684\u6b8b\u4f59\u7f51\u7edc\u4e0a\u4e24\u70b9\u662f\u5426\u5df2\u7ecf\u5b8c\u5168\u4e0d\u8054\u901a\u4e86\uff0c\u662f\u7684\u8bdd\u5c31\u8bf4\u660e\u8fd9\u6761\u8fb9\u53ef\u4ee5\u5f3a\u5236\u9009\u62e9\u540e\u5272\u53bb\u3002\n\n```cpp\n#include \"bits/stdc++.h\"\nusing namespace std;\nconst int Len = 700 * 2 + 5;\nconst long long Inf = 1e18;\nint n,m,head[Len],cnt = 1,dp[Len],a[Len],b[Len],S,T,ks[Len],dep[Len],cur[Len];\nstruct node\n{\n\tint next,to;long long w;\n}edge[Len * Len * 2];\ninline void add(int from,int to,long long w)\n{\n\tedge[++ cnt].to = to;\n\tedge[cnt].next = head[from];\n\tedge[cnt].w = w;\n\thead[from] = cnt;\n}\ninline void Ad(int x,int y,long long w){add(x , y , w);add(y , x , 0);}\ninline int BFS(int s,int t)\n{\n\tqueue<int> q;\n\tfor(int i = 1 ; i <= T ; i ++) dep[i] = cur[i] = 0;\n\tdep[s] = 1;q.push(s);cur[s] = head[s];\n\twhile(!q.empty())\n\t{\n\t\tint p = q.front();q.pop();\n\t\tfor(int e = head[p] ; e ; e = edge[e].next)\n\t\t{\n\t\t\tint to = edge[e].to;\n\t\t\tif(!dep[to] && edge[e].w)\n\t\t\t{\n\t\t\t\tdep[to] = dep[p] + 1;\n\t\t\t\tcur[to] = head[to];\n\t\t\t\tq.push(to);\n\t\t\t\tif(to == t) return 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn dep[t];\n}\nlong long dfs(int u,long long In)\n{\n\tif(u == T) return In;\n\tlong long Out = 0;\n\tfor(int e = cur[u] ; e && In > 0 ; e = edge[e].next)\n\t{\n\t\tcur[u] = e;\n\t\tint to = edge[e].to;\n\t\tif(edge[e].w && dep[to] == dep[u] + 1)\n\t\t{\n\t\t\tlong long res = dfs(to , min(In , 1ll * edge[e].w));\n\t\t\tIn -= res;\n\t\t\tOut += res;\n\t\t\tedge[e].w -= res;\n\t\t\tedge[e ^ 1].w += res;\n\t\t}\n\t}\n\tif(!Out) return dep[u] = 0;\n\treturn Out;\n}\nstruct niyoubingba\n{\n\tint c,id;\n}bs[Len];\nvector<int> Print;\ninline bool cmp(niyoubingba x,niyoubingba y){return x.c < y.c;}\nint main()\n{\n\tint TT;scanf(\"%d\",&TT);\n\twhile(TT --)\n\t{\n\t\tmemset(head , 0 , sizeof head);cnt = 1;\n\t\tscanf(\"%d\",&n);\n\t\tfor(int i = 1 ; i <= n ; i ++) scanf(\"%d\",&a[i]);\n\t\tfor(int i = 1 ; i <= n ; i ++) scanf(\"%d\",&b[i]);\n\t\tfor(int i = 1 ; i <= n ; i ++){scanf(\"%d\",&bs[i].c);bs[i].id = i;}\n\t\tint mxlen = 0;\n\t\tfor(int i = 1 ; i <= n ; i ++) \n\t\t{\n\t\t\tdp[i] = 1;\n\t\t\tfor(int j = 1 ; j < i ; j ++) if(a[j] < a[i]) dp[i] = max(dp[i] , dp[j] + 1);\n\t\t\tmxlen = max(mxlen , dp[i]);\n\t\t}\n\t\tS = (n << 1) + 1 , T = S + 1;\n\t\tfor(int i = 1 ; i <= n ; i ++) \n\t\t{\n\t\t\tks[i] = cnt + 1;\n\t\t\tAd(i , i + n , b[i]);\n\t\t}\n\t\tfor(int i = 1 ; i <= n ; i ++) \n\t\t{\n\t\t\tif(dp[i] == 1) Ad(S , i , Inf);\n\t\t\tif(dp[i] == mxlen) Ad(i + n , T , Inf);\n\t\t}\n\t\tfor(int i = 1 ; i <= n ; i ++) \n\t\t\tfor(int j = i + 1 ; j <= n ; j ++) if(a[i] < a[j] && dp[j] == dp[i] + 1) Ad(i + n , j , Inf);\n\t\tlong long ans = 0;\n\t\twhile(BFS(S , T)) \n\t\t{\n\t\t\tlong long kkk = dfs(S , Inf);\n\t\t\tans += kkk;\n\t\t\t//printf(\"%lld\\n\",kkk);\n\t\t}\n\t\tsort(bs + 1 , bs + 1 + n , cmp);\n\t\tfor(int i = 1 ; i <= n ; i ++)\n\t\t{\n\t\t\tint x = bs[i].id , y = x + n;\n\t\t\tif(!BFS(x , y)) \n\t\t\t{\n\t\t\t\tPrint.push_back(x);edge[ks[x]].w = edge[ks[x] ^ 1].w = 0;\n\t\t\t\tfor(int e = 2 ; e <= cnt ; e += 2) edge[e].w += edge[e ^ 1].w , edge[e ^ 1].w = 0;\n\t\t\t\tlong long nus = 0;\n\t\t\t\twhile(BFS(S , T)) nus += dfs(S , Inf);\n\t\t\t}\n\t\t}\n\t\tint sz = Print.size();printf(\"%lld %d\\n\",ans,sz);\n\t\tsort(Print.begin() , Print.end());\n\t\tfor(int i = 0 ; i < sz ; i ++) printf(\"%d \",Print[i]);\n\t\tPrint.clear();\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1647525005,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3308 [SDOI2014]LIS"
    },
    {
        "content": "LIS\u6700\u5c0f\u5272\uff1a\n\n\u62c6\u70b9\uff0c\n\n\u6240\u6709Xj\u5411Yj\u8fde\u6743\u503c\u8fb9\uff1b\n\n\u5bf9\u4e8eA[k]<A[j]\uff0c\u4e14f[j]==f[k]+1\u7684\u70b9Yk\u548cXj\u4e4b\u95f4\u8fdeINF\u8fb9\uff1b\n\n\u5bf9\u4e8ef[j]==1\u7684\u70b9\u8fdeS\u548cX\u7684INF\u8fb9\uff0c\u5bf9\u4e8ef[j]==maxi\u7684\u70b9Y\u548cT\u7684\u8fdeINF\u8fb9\u3002\n\n\n\u4f46\u8f93\u51fa\u65b9\u6848\u8981\u6c42\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u8d2a\u5fc3\u9009\u62e9\u6700\u5c0f\u7684\u53ef\u80fd\u5b58\u5728\u5728\u6700\u5c0f\u5272\u4e2d\u7684\u8fb9\n\n\uff08\u8fd9\u91cc\u7684\u8fb9\u662f\u8fde\u63a5\u540c\u4e00\u70b9X\u548cY\u7684\u8fb9\uff0c\u5728\u6700\u5c0f\u5272\u4e0a\u5f53\u4e14\u4ec5\u5f53 \u6ee1\u6d41&&\u4e0d\u80fd\u589e\u5e7f \u4e24\u4e2a\u6761\u4ef6\uff09\u3002\n\n\u9009\u62e9\u4e00\u6761\u8fb9\u540e\u8981\u5220\u9664\u5b83\u5bf9\u5176\u4ed6\u8fb9\u9009\u62e9\u7684\u5f71\u54cd\uff0c\u6240\u4ee5\u9000\u6d41\uff1a\u8fb9\u7684\u9760S\u7aef\u70b9\u5411S\u9000\u8fb9\u6743\u6d41\uff0cT\u7aef\u70b9\u5411\u9760T\u7aef\u70b9\u9000\u8fb9\u6743\u6d41\u3002\n\n\u9000\u6d41\u5c31\u662f\u5012\u7740\u8dd1\u4e00\u6b21Dinic\uff08\u66f4\u6539\u6e90\u70b9\u548c\u6c47\u70b9\uff09\n\n\n\u4e0d\u660e\u767d\u7684\uff0c\u89c1\u4ee3\u7801\uff0c\u7406\u89e3\u4e00\u4e0b\uff1a\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n#define MAXN 2000\n#define MAXM 1000000\n#define INF 0x3f3f3f3f\n#define ll long long\n#define X(x) (x)\n#define Y(x) (x+n)\n#define gc() getchar()\ninline int read(int ans = 0, int sgn = ' ', int ch = gc())\n{\n    for(;ch < '0' || ch > '9'; sgn=ch,ch=gc());\n    for(;ch >='0' && ch <='9'; (ans*=10)+=ch-'0',ch=gc());\n    return sgn-'-' ? ans : -ans;\n}\nstruct Edge{int to,nex;ll c;Edge(int _to=0, int _nex=0, ll _c=0):to(_to),nex(_nex),c(_c){}}e[MAXM+5];\nint first[MAXN+5], q[MAXN+5], level[MAXN+5], cur[MAXN+5], A[MAXN+5], B[MAXN+5], C[MAXN+5], f[MAXN+5], K[MAXN+5], s[MAXN+5], E[MAXN+5], tot, testcase, maxi, num, n, m, SS, TT;\ninline void Add(int a, int b, ll c)\n{\n    e[tot] = Edge(b,first[a],c), first[a] = tot++;\n    e[tot] = Edge(a,first[b],0), first[b] = tot++;\n    return;\n}\ninline bool BFS(int S, int T)\n{\n    memset(level,0,sizeof(level)), q[0] = S, level[S] = 1;\n    for(register int head = 0, tail = 1, t, u, v; head-tail; )\n        for(t = q[head++], head %= MAXN, u = first[t]; u+1; u = e[u].nex)\n            if(e[u].c > 0 && !level[v=e[u].to])\n            {\n                level[v] = level[t]+1, q[tail++] = v, tail %= MAXN;\n                if(v == T)\n                    return true;\n            }\n    return false;\n}\nll DFS(int p, ll f, int S, int T, ll tag = 0, ll del = 0)\n{\n    if(p == T)\n        return f;\n    for(register int &u = cur[p], v; u+1; u = e[u].nex)\n        if(e[u].c > 0 && level[v=e[u].to] == level[p]+1)\n        {\n            del = DFS(v,min(e[u].c,f-tag),S,T), e[u].c -= del, e[u^1].c += del, tag += del;\n            if(f == tag)\n                return tag;\n        }\n    return tag;\n}\ninline ll Dinic(int S, int T, ll ans = 0)\n{\n    for(register int i; BFS(S,T); ans += DFS(S,INF,S,T))\n        for(i = 0; i <= 2*n+1; cur[i] = first[i], i++);\n    return ans;\n}\ninline void Build()\n{\n    n = read(), memset(first,-1,sizeof(first)), tot = 0, SS = 0, TT = 2*n+1, maxi = 0;\n    for(register int i = 1; i <= n; A[i] = read(), i++);\n    for(register int i = 1; i <= n; B[i] = read(), i++);\n    for(register int i = 1; i <= n; C[i] = read(), i++);\n    for(register int i = 1, j; i <= n; maxi = max(maxi,f[i]), i++)\n        for(f[i] = 1, j = 1; j < i; j++)\n            if(A[j] < A[i])\n                f[i] = max(f[i],f[j]+1); \n    for(register int i = 1, j; i <= n; E[i] = tot, Add(X(i),Y(i),B[i]), i++)\n    {\n        if(f[i] == 1)\n        {\n            Add(SS,X(i),INF);\n            continue;\n        }\n        if(f[i]==maxi)\n            Add(Y(i),TT,INF);\n        for(j = 1; j < i; j++)\n            if(A[j] < A[i] && f[i] == f[j]+1)\n                Add(Y(j),X(i),INF);\n    }\n    return;\n}\ninline bool cmp(int x, int y)\n{\n    return (C[x]-C[y] ? C[x]<C[y] : x<y);\n}\ninline bool Check(int p)\n{\n    return !(e[E[p]].c || BFS(X(p),Y(p)));\n}\ninline void Calc()\n{\n    for(register int i = 1; i <= n; K[i] = i, i++);\n    sort(K+1,K+n+1,cmp);\n    for(register int i = num = 1; i <= n; i++)\n        if(Check(K[i]))\n            s[num++] = K[i], Dinic(TT,Y(K[i]),B[K[i]]), Dinic(X(K[i]),SS,B[K[i]]), e[E[K[i]]].c = e[E[K[i]]^1].c = 0;\n return;\n}\nint main()\n{\n    for(testcase = read(); testcase--; printf(\"%d\\n\",s[num]))\n    {\n        Build(), printf(\"%d \",Dinic(SS,TT)), Calc(), num--, printf(\"%d\\n\",num), sort(s+1,s+num+1);\n        for(register int i = 1; i < num; printf(\"%d \",s[i]), i++);\n    }\n     return 0;\n}\n\n```",
        "postTime": 1486806630,
        "uid": 16528,
        "name": "magolor",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3308 \u3010[SDOI2014]LIS\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5c5e\u4e8e\u6700\u5c0f\u5272\u7c7b\u9898\u76ee\u91cc\u6bd4\u8f83\u5178\u578b\u4e14\u9ad8\u8d28\u91cf\u7684\u4e86  \n\u56e0\u4e3a\u53ea\u8981\u51cf\u5c111\u7684\u957f\u5ea6\uff0c\u6240\u4ee5\u5b8c\u7f8e\u5951\u5408\u6700\u5c0f\u5272\u7684\u6027\u8d28\uff0c\u53ea\u8981\u7834\u574f\u4e86\u6240\u6709\u8def\u5f84\u5c31\u884c \u4e86\u3002\u6240\u6709\u8def\u5f84\u5e94\u8be5\u90fd\u662f\u4ee3\u8868\u4e00\u79cd\u6700\u957f\u5e8f\u5217  \n\u6211\u4eec\u8981\u7b97\u51fa\u6bcf\u4e2a\u70b9\u5bf9\u4e8e\u6700\u957f\u5e8f\u5217\u4e4b\u95f4\u7684\u5173\u7cfb\uff08\u5728\u54ea\u4e9b\u6700\u957f\u5e8f\u5217\u91cc\uff09  \n\u6240\u4ee5\u5148\u6765\u4e00\u6b21\u5c0fdp\uff0c\u7b97\u51fa\u6700\u957f\u5b50\u5e8f\u5217\u548c\u8f6c\u79fb\u8def\u5f84\u5565\u7684\uff0c\u62c6\u70b9\u540ein\u548cout\u4e4b\u95f4\u8fde\u957f\u5ea6\u4e3aai\u7684\u8fb9\u3002\u957f\u5ea6\u4e3a1\u7684\u4eceS\u5411\u5176\u8fdeinf\u8fb9\uff0c\u957f\u5ea6\u6700\u9ad8\u7684\u5411T\u8fdeinf\u8fb9\uff0c\u4e00\u4e2a\u70b9\u62c6\u70b9\uff0c\u5165\u70b9\u51fa\u70b9\u4e4b\u95f4\u8fde\u6743\u503c\u8fb9\uff0c\u4e00\u4e2a\u6a21\u578b\u5c31\u5efa\u597d\u4e86\u3002\u73b0\u5728\u7684\u5173\u952e\u5728\u4e8e\u9898\u76ee\u8981\u6c42\u6309\u4e00\u5b9a\u987a\u5e8f\u6784\u5efa\u6700\u5c0f\u5272\u96c6\u3002  \n\n\n------------\n\n\u5173\u4e8e\u7f51\u7edc\u6d41\u9000\u6d41\u7684\u7ed3\u8bba  \n\u4e0b\u6587\u79f0\u5165\u5ea6\u4e3ain\uff0c\u51fa\u5ea6\u4e3aout\u3002  \n\u5728\u6784\u5efa\u7279\u5b9a\u6700\u5c0f\u5272\u96c6\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u5df2\u7ecf\u5272\u79bb\u7684\u8fb9\u6d88\u9664\u6389\u5b83\u539f\u672c\u7684\u5f71\u54cd\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u6211\u4eec\u79f0\u4f5c\u9000\u6d41\uff0c\u90a3\u4e48\u5982\u4f55\u9000\u6d41\u5462\uff1f\u5c06\u8fb9\u7684\u5165\u5ea6\u548c\u51fa\u5ea6\u5206\u522b\u505a\u4e00\u6b21\u53cd\u5411DINIC\u5c31\u53ef\u4ee5\u4e86\uff08T\u5230out\u3001in\u5230S\uff09\uff0c\u63a5\u4e0b\u6765\u89e3\u91ca\u8fd9\u6837\u4e3a\u4ec0\u4e48\u662f\u5bf9\u7684\uff1b\n\u9996\u5148\uff0c\u4e00\u65e6\u5272\u6389\u4e00\u6761\u8fb9\uff0c\u6240\u9762\u4e34\u7684\u7b2c\u4e00\u4e2a\u6539\u52a8\u5c31\u662f\u4efb\u4f55\u4e00\u4e2a\u4efb\u4e00\u8282\u70b9\u5728\u6240\u6709in\u7684\u524d\u7f6e\u8282\u70b9\u7684\u96c6\u5408\u5185\u7684\u8fb9\u4e0d\u80fd\u518d\u88ab\u5272\u6389\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u6ee1\u8db3\u6700\u5c0f\u5272\u6027\u8d28\uff0c\u5982\u679c\u5272\u6389\u8fd9\u6761\u53ef\u884c\u8fb9\uff0c\u90a3\u4e48\u90a3\u4e9b\u8fb9\u5c31\u6ca1\u6709\u5272\u6389\u7684\u5fc5\u8981\u4e86\uff1a  \n![](https://cdn.luogu.com.cn/upload/image_hosting/2vbf8r3p.png)  \n\u5982\u4e0a\u56fe\uff0c\u8981\u4e48\u7ee7\u7eed\u5207\u65ad\u6240\u6709\u524d\u9762\u7684\u8fb9\uff0c\u8981\u4e48\u5207\u65ad\u5269\u4e0b\u7684\u540e\u9762\u7684\u8fb9\uff0c\u56e0\u4e3a\u518d\u5207\u524d\u9762\u7684\u8fb9\u4f1a\u5bfc\u81f4\u963b\u65ad\u8def\u5f84\u7684\u91cd\u5408\uff08\u62ff\u4e0a\u56fe\u7684\u8def\u5f84\u4e3e\u4f8b\u5b50\uff0c\u6240\u6709\u8282\u70b9\u5728\u6700\u4e0a\u9762\u7684\u90a3\u4e2a\u6211\u4eec\u79f0\u4f5c1\u53f7\u8def\u5f84\uff0c\u5f88\u663e\u7136\u76ee\u524d\u5272\u6389\u7684\u8fb9\u5df2\u7ecf\u4e0d\u5141\u8bb8\u901a\u8fc71\u53f7\u8def\u5f84\u4e86\uff0c\u4f46\u8fd9\u65f6\u518d\u5272\u6389\u7b2c2\u5217\u7b2c\u4e00\u4e2a\u70b9\u8fde\u63a5\u7684\u8fb9\u53c8\u4f1a\u91cd\u590d\u963b\u65ad\uff0c\u6d6a\u8d39\u70b9\u6570\uff09  \n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u628a\u524d\u7f6e\u8282\u70b9\u5168\u90e8\u9000\u6d41  \nout\u7684\u540e\u7f6e\u8282\u70b9\u540c\u7406  \n\u8fd9\u6837\u987a\u5e8f\u6784\u5efa\u7684\u5272\u5c31\u662f\u6ee1\u8db3\u7279\u6b8a\u6761\u4ef6\u7684\u6700\u5c0f\u5272\u96c6\uff0c\u56e0\u4e3a\u6bcf\u6b65\u4f1a\u7ed9\u540e\u9762\u589e\u52a0\u9650\u5236\u4fdd\u8bc1\u6700\u4f18  \n\u524d\u7f6e\u77e5\u8bc6\uff1a\u53ef\u884c\u8fb9  \n\u4e00\u6761\u6ee1\u6d41\u4e14\u6ca1\u6709\u5176\u5b83\u4ece\u5176in\u5230\u5176out\u7684\u589e\u5e7f\u8def\uff0c\u4e00\u5b9a\u662f\u4e00\u4e2a\u6700\u5c0f\u5272\u96c6\u91cc\u7684\u4e00\u4e2a\u5143\u7d20  \n\u7136\u540e\u77e5\u9053\u4e0a\u8ff0\u77e5\u8bc6\u540e\u76f4\u63a5\u5c06\u6240\u6709\u53ef\u884c\u8fb9\u6309c\u6392\u5e8f\uff0c\u4e00\u4e2a\u4e00\u4e2a\u9000\u6d41\u68c0\u67e5\uff0c\u7b54\u6848\u5c31\u51fa\u6765\u4e86    \n\u4ee3\u7801\uff1a  \n```cpp\n#include<cstdio>  \n#include<cstring>  \n#include<algorithm>  \n#include<queue>  \nusing namespace std;  \nconst int N=1410;  \nconst long long inf=1e9+10;  \nlong long n,x,y,z,maxflow,deep[N];//deep\u6df1\u5ea6   \nstruct Edge{  \n\tint next,to;  \n\tlong long dis;\n}edge[N*N];\nint num_edge=-1,head[N],cur[N];//cur\u7528\u4e8e\u590d\u5236head \nqueue <int> q;\nbool vis[N]; \nvoid add(int from,int to,long long dis){\n\tedge[++num_edge].next=head[from];\n\tedge[num_edge].to=to;\n\tedge[num_edge].dis=dis;\n\thead[from]=num_edge;\n}\nqueue <int> qwq;\n//bfs\u7528\u6765\u5206\u5c42 \nbool check(int s,int t){\n\tfor(int i=0;i<=2*n+1;i++)vis[i]=false;\n\twhile(!qwq.empty())qwq.pop();\n\tqwq.push(s);vis[s]=true;\n\twhile(!qwq.empty()){\n\t\tint u=qwq.front();qwq.pop();\n\t\tif(u==t)return true;\n\t\tfor(int i=head[u];i!=-1;i=edge[i].next){\n\t\t\tint v=edge[i].to;\n\t\t\tif(edge[i].dis>0&&!vis[v]){\n\t\t\t\tvis[v]=true;\n\t\t\t\tqwq.push(v);\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nbool bfs(int s,int t){\n\tmemset(deep,-1,sizeof(deep));\n\twhile (!q.empty()) q.pop();\n\tfor(int i=0;i<=2*n+1;i++)cur[i]=head[i];\n\tdeep[s]=0;\n\tq.push(s);\n \twhile (!q.empty()){\n\t\tint now=q.front(); q.pop();\n\t\tif(now==t){\n\t\t\treturn true;\n\t\t}\n \t\tfor (int i=head[now]; i!=-1; i=edge[i].next){\n\t\t\tif (deep[edge[i].to]==-1 && edge[i].dis){\n\t\t\t\tdeep[edge[i].to]=deep[now]+1;\n\t\t\t\tq.push(edge[i].to);\n\t\t\t}\n\t\t}\n\t}\n\tif (deep[t]!=-1) return true;\n\telse return false;\n}\nlong long dfs(int now,int t,long long limit){\n\tif (!limit || now==t) return limit;\n\tlong long flow=0,f;\n\tfor (int &i=cur[now]; i!=-1; i=edge[i].next){\n\t\tif (deep[edge[i].to]==deep[now]+1 && (f=dfs(edge[i].to,t,min(limit,edge[i].dis))/*f\u8d4b\u503c\u4e3a\u4ece\u6e90\u70b9\u5230\u6c47\u70b9\u7684\u6700\u5c0f\u503c\uff08\u6cbf\u67d0\u4e00\u589e\u5e7f\u8def\uff09*/))\n\t\t{\n\t\t\tflow+=f;\n\t\t\tlimit-=f;\n\t\t\tedge[i].dis-=f;\n\t\t\tedge[i^1].dis+=f;\n\t\t\tif (!limit) break;\n\t\t}\n\t}\n\treturn flow;\n}\n\nvoid Dinic(int s,int t){\n\twhile (bfs(s,t)){\n\t\tmaxflow+=dfs(s,t,inf);\n\t}\n}\nint s,t;int T;\nstruct node{\n\tlong long rk,a,b,c;\n}w[N];\nint dp[N];int m;int cnt;int ans[N];\nbool cmp(node a,node b){\n\treturn a.c<b.c;\n}\nint in[N];int out[N];int id[N];\nint main(){\n\tscanf(\"%d\",&T);\n\twhile(T--){\n\t\tnum_edge=-1;\n\t\tmaxflow=0;m=0;s=0;cnt=0;\n\t\tmemset(head,-1,sizeof(head));\n\t\tscanf(\"%lld\",&n);t=2*n+1;\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tdp[i]=1;\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tscanf(\"%lld\",&w[i].a);\n\t\t\tw[i].rk=i;\n\t\t\tin[i]=i;out[i]=i+n;\n\t\t}\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tfor(int j=1;j<i;j++){\n\t\t\t\tif(w[i].a<=w[j].a)continue;\n\t\t\t\tdp[i]=max(dp[i],dp[j]+1);\n\t\t\t}\n\t\t\tm=max(m,dp[i]);\n\t\t}\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tif(dp[i]==m){\n\t\t\t\tadd(out[i],t,inf);\n\t\t\t\tadd(t,out[i],0);\n\t\t\t}\n\t\t\tif(dp[i]==1){\n\t\t\t\tadd(s,in[i],inf);\n\t\t\t\tadd(in[i],s,0);\n\t\t\t}\n\t\t\tfor(int j=1;j<i;j++){\n\t\t\t\tif(w[i].a<=w[j].a)continue;\n\t\t\t\tif(dp[i]!=dp[j]+1)continue;\n\t\t\t\tadd(out[j],in[i],inf);\n\t\t\t\tadd(in[i],out[j],0);\n\t\t\t}\n\t\t}\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tscanf(\"%lld\",&w[i].b);\n\t\t\tadd(in[i],out[i],w[i].b);\n\t\t\tid[i]=num_edge;\n\t\t\tadd(out[i],in[i],0);\n\t\t}\n\t\tDinic(s,t);\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tscanf(\"%lld\",&w[i].c);\n\t\t}\n\t\tprintf(\"%lld \",maxflow);\n\t\tsort(w+1,w+n+1,cmp);\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tint k=w[i].rk;\n\t\t\tif(!check(in[k],out[k])){\n\t\t\t\tans[++cnt]=k;\n\t\t\t\twhile(bfs(in[k],s))dfs(in[k],s,inf);\n\t\t\t\twhile(bfs(t,out[k]))dfs(t,out[k],inf);\n\t\t\t\tedge[id[k]].dis=edge[id[k]^1].dis=0;\n\t\t\t}\n\t\t}\n \t\tprintf(\"%lld\\n\",cnt);\n \t\tsort(ans+1,ans+cnt+1);\n \t\tfor(int i=1;i<=cnt;i++){\n \t\t\tprintf(\"%d \",ans[i]);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1639836430,
        "uid": 213173,
        "name": "\u5c0f\u6728\u866b",
        "ccfLevel": 4,
        "title": "solution-P3308"
    },
    {
        "content": "## Solution\n\n[\u539f\u9898](https://www.luogu.com.cn/problem/P3308)\n\n### Point 1 \u5efa\u56fe\n\u9996\u5148\u662f\u5982\u4f55\u5efa\u6a21 $A$ \u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\uff0c\u53ef\u4ee5\u53c2\u8003[\u8fd9\u9053\u9898](https://www.luogu.com.cn/problem/P2766)\u3002\n\n\u7b80\u5355\u63cf\u8ff0\u4e00\u4e0b\uff0c\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4f4d\u7f6e $i$\uff0c\u6c42\u51fa\u4ee5 $A_i$ \u7ed3\u5c3e\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u957f\u5ea6 $dp_i$\uff0c\u6b64\u65f6\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u957f\u5ea6 $len$ \u5c31\u662f $\\max\\{dp_i\\}$\u3002\n\n\u7136\u540e\u5c06\u6ee1\u8db3 $dp_j=dp_i+1$\uff0c$A_j>A_i$\uff0c$j>i$ \u7684 $j$ \u4e0e $i$ \u76f8\u8fde\uff0c\u5bf9\u4e8e\u672c\u9898\u7684\u6837\u4f8b\u5e94\u8be5\u6700\u7ec8\u7684\u56fe\u5f20\u8fd9\u6837\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/79lwd8iz.png)\n\n\u6700\u540e\u5c06\u6e90\u70b9 $s$ \u4e0e $dp_i=1$ \u7684 $i$ \u76f8\u8fde\uff0c\u5c06 $dp_i=len$ \u7684 $i$ \u4e0e\u6c47\u70b9 $t$ \u76f8\u8fde\uff0c\u5c31\u80fd\u4fdd\u8bc1\u6bcf\u6761\u8def\u8dd1\u51fa\u6765\u90fd\u4e00\u5b9a\u662f **\u6700\u957f** \u7684\u4e86\u3002\n\n\u4e0d\u96be\u60f3\u5230\uff0c\u5982\u679c\u8981\u4f7f\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u957f\u5ea6 $-1$\uff0c\u5fc5\u7136\u8981\u8ba9 $s,t$ \u4e0d\u8fde\u901a\u3002\u53cd\u8bc1\u6cd5\u6613\u5f97\uff0c$s,t$ \u8fde\u901a\u65f6\u5fc5\u7136\u6709\u4e00\u6761\u8def\u5f84\u80fd\u7ecf\u8fc7 $len$ \u4e2a\u70b9\u3002\n\n\u65e2\u7136\u8981\u4f7f $s,t$ \u4e0d\u8fde\u901a\uff0c\u5176\u5b9e\u5c31\u662f\u6c42\u6700\u5c0f\u5272\u70b9\u3002\u53ef\u4ee5\u8003\u8651\u62c6\u70b9\uff0c\u5c06\u6bcf\u4e2a\u70b9\u62c6\u5206\u4e3a $u_1,u_2$ \u4e24\u90e8\u5206\uff0c\u8fde\u63a5\u4e00\u6761 $(u_1,u_2,w_u)$ \u7684\u8fb9\uff0c\u5bf9\u4e8e\u539f\u56fe\u4e2d $(u,v)$ \u6539\u4e3a $(u_2,v_1,\\inf)$\uff0c\u8fd9\u6837\u5c31\u80fd\u5c06\u6700\u5c0f\u5272\u70b9\u8f6c\u5316\u4e3a\u6700\u5c0f\u5272\u8fb9\uff08\u5373\u6700\u5c0f\u5272\uff09\u4e86\u3002\n\n### Point 2 \u65b9\u6848\u8f93\u51fa\n\n\u76f4\u63a5\u5c06\u56fe\u770b\u6210\u4e00\u5f20\u7f51\u7edc\uff0c\u73b0\u5728\u9700\u8981\u6c42\u7684\u5c31\u662f\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u5272\u8fb9\u65b9\u6848\u3002\n\n\u60f3\u60f3\u6700\u5c0f\u5272\u7684\u5b9a\u4e49\uff0c\u5c06\u70b9\u5206\u4e3a\u4e24\u4e2a\u96c6\u5408 $S,T$\uff0c\u5272\u6389\u603b\u6743\u503c\u6700\u5c0f\u7684\u4e00\u4e9b\u8fb9\u4f7f\u5f97 $S,T$ \u4e0d\u8fde\u901a\u3002\u90a3\u4e48\u5bf9\u4e8e\u4e00\u6761\u8fb9 $(u,v)$\uff0c\u5b83\u80fd\u6210\u4e3a\u6700\u5c0f\u5272\u8fb9\u5f53\u524d\u4ec5\u5f53\u6ee1\u8db3\u4e0b\u9762\u4e24\u4e2a\u6761\u4ef6\uff1a\n\n1. $(u,v)$ \u6ee1\u6d41\u3002\n2. **\u6b8b\u91cf\u7f51\u7edc** \u4e0a\u4e0d\u5b58\u5728 $u\\to v$ \u7684\u8def\u5f84\u3002\u56e0\u4e3a\u5728\u6ee1\u8db3\u7b2c\u4e00\u70b9\u7684\u524d\u63d0\u4e0b\uff0c\u5fc5\u7136\u5b58\u5728 $v\\to u$ \u7684\u8def\u5f84\uff0c\u8fd9\u53e5\u8bdd\u5176\u5b9e\u5c31\u662f\u8bf4 $u,v$ \u4e0d\u5728\u540c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u91cc\u3002\n\n\u8fd0\u7528 **\u6700\u5927\u6d41\u6700\u5c0f\u5272\u5b9a\u7406**\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u63a8\u51fa\u7b2c\u4e00\u70b9\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u70b9\uff0c\u5982\u679c $u,v$ \u5728\u540c\u4e00\u4e2a SCC \u91cc\uff0c\u90a3\u4e00\u5b9a\u53ef\u4ee5\u901a\u8fc7\u6d41\u91cf\u8c03\u6574\uff08\u5300\u4e00\u70b9\u6d41\u91cf\uff09\u4f7f\u5f97 $(u,v)$ \u4e0d\u6ee1\u6d41\uff0c\u6b64\u65f6\u5c31\u4e0d\u6ee1\u8db3\u6761\u4ef6\u4e86\u3002\n\n\u6700\u540e\u56e0\u4e3a\u8981\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u6240\u4ee5\u6bcf\u6b21\u9009\u62e9\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u53ef\u884c\u8fb9\u5373\u53ef\u3002\u4f46\u662f\u6bcf\u6b21\u9009\u62e9\u5b8c\u8fd9\u6761\u8fb9\u540e\uff0c\u5fc5\u987b\u8981\u628a\u8fd9\u6761\u8fb9\u5e26\u6765\u7684\u5f71\u54cd\u4e5f\u5220\u53bb\uff0c\u5373\u9000\u6d41\u3002\u53ef\u4ee5\u76f4\u63a5\u5728\u6b8b\u91cf\u7f51\u7edc\u4e0a\u4ece $u\\to s$\uff0c$t\\to v$ \u8dd1\u4e24\u8fb9\u6700\u5927\u6d41\u3002\u4e5f\u4e0d\u7528\u62c5\u5fc3\u8dd1\u7684\u6700\u5927\u6d41\u4f1a\u4e0d\u4f1a\u6bd4 $c(u,v)$ \u5927\uff0c\u5373\u9000\u6d41\u9000\u591a\u4e86\uff0c\u56e0\u4e3a\u7f51\u7edc\u6d41\u6709 **\u53cd\u5bf9\u79f0\u6027** \u548c **\u6d41\u91cf\u5e73\u8861** \u7684\u7279\u70b9\uff0c$s\\to u$ \u6700\u5927\u6d41\u4e86\u591a\u5c11\uff0c$u\\to s$ \u6700\u5927\u4e5f\u53ea\u80fd\u6d41\u591a\u5c11\u3002\n\n\u5177\u4f53\u5982\u4f55\u627e\u5230\u8fd9\u6761\u6ee1\u6d41\u8fb9\uff1a\u56e0\u4e3a\u6ee1\u6d41\u8fb9\u5fc5\u5b9a\u662f\u62c6\u70b9\u540e\u7684\u4e2d\u95f4\u8fb9\uff0c\u5373 $(u_1,u_2,w)$\uff0c\u6211\u4eec\u53ef\u4ee5\u8bb0\u5f55\u4e0b\u6bcf\u4e2a\u70b9\u7684 $u_1$\uff0c\u7136\u540e\u6309\u7167\u6bcf\u4e2a\u70b9\u7684 $C_i$ \u6392\u5e8f\uff0c\u4ece\u5c0f\u5230\u5927\u627e\u6bcf\u4e2a\u70b9\uff0c\u7136\u540e\u5224\u65ad\u8fd9\u4e2a\u70b9\u5bf9\u5e94\u7684\u8fb9\u662f\u5426\u5728\u6700\u5c0f\u5272\u4e0a\u3002\n\n## Code\n\n\u9700\u8981 **\u5438\u6c27**\u3002\n\n```cpp\n#include <cstdio> \n#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <queue>\n#include <vector>\n#define LL long long\n#define F(i, s, e) for(int i=s;i<=e;++i)\n#define inf (LL)(1e18)\n#define INF (int)(2e9)\n#define N 2005\nusing namespace std;\n\nstruct edge { int v; LL f; };\nstruct node { LL w; int p, id; } nd[N];\nvector <edge> E, E_;\nvector <int> G[N];\nint n, m, s, t, T, cur[N], dep[N], A[N], B[N], C[N], dp[N], len, stk[N], tp;\n\nint add(int u, int v, LL w) {\n\tE.push_back((edge){v, w});\n\tE.push_back((edge){u, 0});\n\tG[u].push_back(E.size()-2);\n\tG[v].push_back(E.size()-1);\n\treturn E.size()-2;\n}\nvoid init() {\n\tscanf(\"%d\", &n);\n\tE.clear(); F(i, 0, N-1) G[i].clear();\n\tF(i, 1, n) stk[i] = dp[i] = 0;\n\ttp = len = 0;\n\tF(K, 1, 3) F(i, 1, n) switch(K) {\n\t\tcase 1: scanf(\"%d\", &A[i]); break;\n\t\tcase 2: scanf(\"%d\", &B[i]); break;\n\t\tcase 3: scanf(\"%d\", &C[i]); break;\n\t}\n\ts = n*2+1; t = s+1;\n\tF(i, 1, n) {\n\t\tdp[i] = 1;\n\t\tF(j, 1, i) if(A[j] < A[i])\n\t\t\tdp[i] = max(dp[i], dp[j]+1);\n\t\tlen = max(len, dp[i]);\n\t}\n\tF(i, 1, n) {\n\t\tnd[i].w = C[i]; nd[i].p = add(i, n+i, B[i]); nd[i].id = i;\n\t\tif(dp[i] == 1) add(s, i, inf);\n\t\tif(dp[i] == len) add(i+n, t, inf);\n\t\tF(j, i+1, n) if(dp[j] == dp[i]+1 && A[j] > A[i]) add(i+n, j, inf);\n\t}\n}\nbool bfs(int S, int T) {\n\tF(i, 1, 2*(n+1)) dep[i] = 0; dep[S] = 1;\n\tqueue <int> q; q.push(S);\n\twhile(q.size()) {\n\t\tint u = q.front(); q.pop();\n\t\tfor(int i=0;i<G[u].size();++i) {\n\t\t\tedge& e=E[G[u][i]];\n\t\t\tif(e.f && !dep[e.v]) {\n\t\t\t\tdep[e.v] = dep[u] + 1;\n\t\t\t\tq.push(e.v);\n\t\t\t}\n\t\t}\n\t}\n\treturn dep[T];\n}\nLL dfs(int u, LL in, int T) {\n\tif(u == T) return in;\n\tLL flow = 0;\n\tfor(int& i=cur[u];i<G[u].size();++i) {\n\t\tedge& e=E[G[u][i]];\n\t\tif(e.f && in && dep[e.v] == dep[u]+1) {\n\t\t\tLL d = dfs(e.v, min(in, e.f), T);\n\t\t\tflow += d; E[G[u][i]^1].f += d;\n\t\t\tin -= d; e.f -= d;\n\t\t}\n\t}\n\treturn flow;\n}\ninline bool cmp(node x, node y) { return x.w < y.w; }\nvoid back(int u, int v) {\n\twhile(bfs(u, s)) {\n\t\tF(i, 1, t) cur[i] = 0;\n\t\tdfs(u, inf, s);\n\t}\n\twhile(bfs(t, v)) {\n\t\tF(i, 1, t) cur[i] = 0;\n\t\tdfs(t, inf, v);\n\t}\n}\nvoid solve() {\n\tLL mxf = 0;\n\twhile(bfs(s, t)) {\n\t\tF(i, 1, t) cur[i] = 0;\n\t\tmxf += dfs(s, inf, t);\n\t}\n\tsort(nd+1, nd+n+1, cmp);\n\tF(i, 1, n) {\n\t\tint p = nd[i].p; int u = nd[i].id;\n\t\tif(E[p].f == 0 && !bfs(u, u+n)) {\n\t\t\tback(u, u+n);\n\t\t\tE[p].f = E[p^1].f = 0;\n\t\t\tstk[++tp] = u;\n\t\t}\n\t}\n\tsort(stk+1, stk+tp+1);\n\tprintf(\"%lld %d\\n\", mxf, tp);\n\tF(i, 1, tp) printf(\"%d \", stk[i]);\n\tputs(\"\");\n}\nint main() {\n\tscanf(\"%d\", &T);\n\twhile(T--) {\n\t\tinit();\n\t\tsolve();\n\t}\n\treturn 0;\n}\n```\n\n[\u8bc4\u6d4b\u8bb0\u5f55](https://www.luogu.com.cn/record/56631555)",
        "postTime": 1629592896,
        "uid": 280800,
        "name": "lingfunny",
        "ccfLevel": 7,
        "title": "P3308 [SDOI2014]LIS - Solution"
    },
    {
        "content": ">\u5bf9\u7b2c$i$\u4e2a\u4f4d\u7f6e\u6709\u4e09\u4e2a\u5c5e\u6027$(a_i,b_i,c_i)$\n\u5206\u522b\u8868\u793a\u503c/\u5220\u9664\u4ee3\u4ef7/\u9644\u52a0\u4ef7\u503c\n\u6c42\u5220\u9664\u82e5\u5e72\u9879\uff0c\u4f7f\u5f97\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u957f\u5ea6\u51cf\u5c11\u81f3\u5c11$1$\uff0c\u4e14\u5220\u9664\u4ee3\u4ef7\u548c\u6700\u5c0f\uff0c\u5c06\u5220\u53bb\u9879\u7684\u9644\u52a0\u4ef7\u503c\u6392\u5e8f\u540e\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u4e00\u79cd\n\n\u9996\u5148\u8003\u8651\u6bcf\u4e00\u79cd\u5408\u6cd5\u7684\u5220\u9664\u65b9\u6cd5\u5bf9\u5e94\u4e00\u4e2a\u65ad\u5c42,\u4e5f\u5c31\u5bf9\u5e94\u4e00\u4e2a\u7279\u6b8a\u7684\u5272\n\n\u5177\u4f53\u800c\u8a00\u540c[$\\mathtt{BSOJ2547}$](https://oj.bashu.com.cn/code/problempage.php?problem_id=2547)\u5efa\u56fe\u65b9\u6cd5:\n\n\u5148\u62c6\u70b9$i,i'$\u8868\u793a\u5165/\u51fa\u70b9\uff0c$(i,i',b_i)$\u8868\u793a\u8fd9\u4e2a\u70b9(\u5272)\u5220\u9664\u7684\u4ee3\u4ef7\n$f(i)=1$,\u8fde\u8fb9$(S,i,INF)$\n\u5bf9$1<f(j),f(i)<maxl,a_i>a_j$\u7684\u8fde\u8fb9$(j',i,INF)$\n$f(i)=maxl$\u8fde\u8fb9$(i',T,INF)$\n\n\u90a3\u4e48\u4e00\u4e2a\u5272\u5c31\u5bf9\u5e94\u4e00\u79cd\u5220\u9664\u65b9\u6848\u4f7f\u5f97\u4e0d\u5b58\u5728$maxl$\u5c42\u8f6c\u79fb\n\n\u8003\u8651\u5b57\u5178\u5e8f\u6700\u5c0f\u5c31\u5728\u6700\u5c0f\u5272\u96c6\u91cc\u9000\u6d41\u5c1d\u8bd5\u5373\u53ef",
        "postTime": 1596254784,
        "uid": 40629,
        "name": "zzw4257",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3308 \u3010[SDOI2014]LIS\u3011"
    }
]