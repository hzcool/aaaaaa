[
    {
        "content": "- \u4ee5\u4e0b\u662f[\u7b2c\u4e8c\u4e2a\u7248\u672c\u7684\u535a\u5ba2](https://www.luogu.com.cn/paste/9ywvtwup)\uff0c\u73b0\u5728\u662f\u7b2c\u4e09\u4e2a\u7248\u672c\u3002\n- \u611f\u8c22[0htoAi](https://www.luogu.com.cn/user/335366)\uff0c[gzw2005](https://www.luogu.com.cn/user/53118)\u548c[Pozhu](https://www.luogu.com.cn/user/581564)\uff0c\u795d\u613f\u5176\u4fe1\u606f\u5b66\u4e4b\u8def\u5149\u660e\u7480\u74a8\u3002\n- \u611f\u8c22 UOJ \u7684\u9ad8\u4eba\uff0c\u4ed6\u4eec\u7684\u5b9e\u73b0\u7b80\u6d01\u800c\u7cbe\u5999\uff0c\u8ba9\u6211\u5b66\u5230\u4e86\u5f88\u591a\uff0c\u5982\u679c\u6211\u6709\u673a\u4f1a\uff0c\u4e00\u5b9a\u8981\u611f\u8c22\u4ed6\u4eec\u3002\n- \u5982\u679c\u6211\u6709\u673a\u4f1a\uff0c\u4e00\u5b9a\u8981\u5199\u7bc7\u9898\u89e3\u8bb2\u4ee3\u8001\u5e08\u7684\u5206\u5757\u505a\u6cd5\u3002\n- \u4f5c\u8005\u5df2\u7ecf\u9000\u5f79\uff0c\u56e0\u4e3a[\u8fd9\u4ef6\u4e8b](https://www.luogu.com.cn/discuss/475189)\u6328\u6279\uff0c\u7136\u540e\u53c8\u5f97\u91cd\u5199\u4e00\u904d\u535a\u5ba2\uff0c\u5fc3\u60c5\u8fd8\u662f\u6709\u70b9\u96be\u53d7\u7684\u3002\n- \u4e0d\u8fc7\uff0c\u5fc3\u4e2d\u771f\u6b63\u6709\u5149\u660e\u7684\u4eba\uff0c\u5373\u4f7f\u4ef0\u671b\u832b\u832b\u5b87\u5b99\uff0c\u610f\u8bc6\u5230\u81ea\u5df1\u751f\u6d3b\u7684\u4e00\u5207\u75d5\u8ff9\u90fd\u5c06\u88ab\u62b9\u53bb\uff0c\u4e0d\u89e3\u81ea\u5df1\u4e3a\u4f55\u88ab\u79bb\u5f03\uff0c\u4e5f\u4f1a\u5b89\u7136\u5766\u7136\u5730\u8d70\u4e0b\u53bb\u3002\n- \u6211\u6781\u559c\u6b22\u5f20\u6653\u98ce\u7684\u90a3\u53e5\u201c\u6211\u5728\u201d\uff1a\n```\n\t\u300a\u65e7\u7ea6\u00b7\u521b\u4e16\u7eaa\u300b\u91cc\uff0c\u5815\u843d\u540e\u7684\u4e9a\u5f53\u5728\u51c9\u98ce\u4e4d\u81f3\u7684\u4f0a\u7538\u56ed\u628a\u81ea\u5df1\u85cf\u533f\u8d77\u6765\u3002\u4e0a\u5e1d\u8bf4\uff1a\u201c\u4e9a\u5f53\uff0c\u4f60\u5728\u54ea\u91cc\uff1f\u201d\n\t\u4ed6\u5664\u800c\u4e0d\u7b54\u3002\n\t\u5982\u679c\u662f\u6211\uff0c\u6211\u4f1a\u8d70\u51fa\uff0c\u8bf4\uff1a\u201c\u4e0a\u5e1d\uff0c\u6211\u5728\uff0c\u6211\u5728\u8fd9\u91cc\uff0c\u8bf7\u4f60\u770b\u7740\u6211\uff0c\u6211\u5728\u8fd9\u91cc\u3002\u4e0d\u6bd4\u4e00\u4e2a\u51e1\u4eba\u597d\uff0c\u4e5f\u4e0d\u6bd4\u4e00\u4e2a\u51e1\u4eba\u574f\uff0c\u6211\u6709\u6211\u7684\u900a\u987a\u7965\u548c\uff0c\u4e5f\u6709\u6211\u7684\u53db\u9006\u51f6\u623e\uff0c\u6211\u5728\u6211\u65e0\u9650\u7684\u6c42\u771f\u6c42\u7f8e\u7684\u68a6\u91cc\uff0c\u4e5f\u5728\u6211\u8106\u5f31\u4e0d\u582a\u4e00\u51fb\u7684\u4eba\u6027\u91cc\u3002\u4e0a\u5e1d\u554a\uff0c\u4fef\u5bdf\u6211\uff0c\u6211\u5728\u8fd9\u91cc\u3002\u201d\n```\n- \u540c\u6837\uff0c\u5c3d\u7ba1\u9000\u5f79\uff0c\u6211\u4f9d\u7136\u5728\u8fd9\u91cc\u3002\n\n\n**\u9898\u610f**\n- [\u9898\u76ee\u94fe\u63a5](https://uoj.ac/problem/660)\u3002\n- \u957f\u4e3a $n$ \u7684\u6570\u5217 $a_i$\uff0c\u4e0e\u4e00\u4e2a\u6052\u5b9a\u7684\u6570\u5217 $c_i$\uff0c\u652f\u6301\u533a\u95f4\u52a0\u64cd\u4f5c\uff0c\u4f46\u662f\u6bcf\u6b21\u64cd\u4f5c\u4e4b\u540e\uff0c\u6240\u6709 $a_i$ \u4e0e $0$ \u53d6\u8f83\u5927\u503c\uff0c\u4e0e $c_i$ \u53d6\u8f83\u5c0f\u503c\uff0c\u8981\u6c42\u5728\u6240\u6709\u64cd\u4f5c\u4e4b\u540e\u8f93\u51fa $a_i$\u3002\n\n**\u5206\u6790**\n- \u201c\u5728\u6240\u6709\u64cd\u4f5c\u4e4b\u540e\u8f93\u51fa\u7ed3\u679c\u201d\u662f\u7ecf\u5178\u7684\u79bb\u7ebf\u95ee\u9898\uff0c\u6709\u8fd9\u53e5\u8bdd\u51e0\u4e4e\u610f\u5473\u7740\u5728\u7ebf\u4e0d\u53ef\u505a\uff0c\u4e0e\u8fd9\u4e2a\u7c7b\u4f3c\u7684\u8fd8\u6709[rprmq](https://www.luogu.com.cn/blog/luo1gu1zui1bang1/post-kai-bai-ji-hua-1-ren-pin-ran-mei-qu)\uff0c[\u8fd9\u7bc7\u4f8b\u9898 3](https://www.luogu.com.cn/blog/luo1gu1zui1bang1/post-ji-chu-you-hua-fen-kuai)\u7b49\u4e00\u7cfb\u5217\u795e\u79d8\u9898\u76ee\u3002\n- \u628a\u65f6\u95f4\u7ef4\u5ea6\u4e0e\u6570\u5217\u4e0b\u6807\u7ef4\u5ea6\u4ea4\u6362\uff08\u5982\u679c\u60a8\u4e0d\u4e86\u89e3\u8fd9\u4e2a\u6280\u5de7\uff0c\u53ef\u4ee5\u53c2\u7167\u4e0a\u9762\u7684\u7b2c\u4e8c\u9053\u4f8b\u9898\uff09\uff08\u5177\u4f53\u800c\u8a00\uff1a\u6211\u4eec\u6253\u7b97\u5bf9\u4e8e\u6bcf\u4e2a\u5143\u7d20 $a_i$\uff0c\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u5bf9\u5e94\u7684\u64cd\u4f5c\u5e8f\u5217\uff0c\u90a3\u4e48\u53ea\u9700\u8981 $O(q)$ \u6b21\u589e\u52a0\u6216\u5220\u9664\u201c\u4fee\u6539\u64cd\u4f5c\u201d\u7684\u64cd\u4f5c\uff09\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u95ee\u9898\uff1a\u7ed9\u5b9a\uff08\u5bf9\u4e8e\u4e00\u4e2a\u5355\u72ec\u5143\u7d20\u7684\uff09\u64cd\u4f5c\u5e8f\u5217\uff0c\u6c42\u6700\u540e\u7684\u7ed3\u679c\u3002\n- \u7531\u4e8e\u539f\u6765\u7684\u95ee\u9898\u4e0d\u592a\u597d\u601d\u8003\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u53bb\u6389\u4e0a\u754c\u601d\u8003\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/e2jrxe41.png)\n- \u56e0\u6b64\uff0c\u5982\u679c\u53bb\u6389\u4e0a\u754c\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u627e\u5230\u6700\u5c0f\u7684\u524d\u7f00\u548c\uff0c\u5982\u679c\u5927\u4e8e\u7b49\u4e8e\u96f6\uff0c\u5bf9 $0$ \u53d6 $\\max$ \u6ca1\u6709\u53d1\u751f\uff0c\u5426\u5219\u64cd\u4f5c\u5e8f\u5217\u7684\u540e\u7f00\u548c\u5c31\u662f\u7b54\u6848\u3002\n- \u63a5\u4e0b\u6765\uff0c\u8003\u8651\u4e0a\u754c $c_i$\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/31swz6ci.png)\n- \u5982\u679c\u627e\u5230\u5de6\u7aef\u70b9\u6700\u53f3\u7684\u4e00\u6bb5\u533a\u95f4\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\uff0c\u90a3\u4e48\u5b83\u4e00\u5b9a\u662f\u6210\u529f\u5bf9 $0$ \u53d6 $\\max$ \u548c\u5bf9 $c_i$ \u53d6 $\\min$ \u4e24\u8005\u4ea4\u66ff\uff08\u6216\u8005\u5728\u5b83\u7684\u540e\u9762\u4e00\u6bb5\uff09\uff0c\u800c\u5728\u8fd9\u4e4b\u540e\u7684\u7684\u533a\u95f4\u53ea\u4f1a\u51fa\u73b0\u5176\u4e2d\u4e00\u79cd\u60c5\u51b5\uff0c\u8fd9\u79cd\u60c5\u51b5\u53ea\u9700\u8981\u518d\u6b21\u53d6\u64cd\u4f5c\u5e8f\u5217\u7684\u6781\u503c\u5373\u53ef\u3002\n\n**\u4ee3\u7801\u5b9e\u73b0**\n- \u5229\u7528\u533a\u95f4\u524d\u7f00\u6700\u5927\u503c\uff0c\u524d\u7f00\u6700\u5c0f\u503c\u548c\u533a\u95f4\u548c\u8fd9\u4e09\u4e2a\u53d8\u91cf\u53ef\u4ee5\u8868\u793a\u4e00\u5207\uff08\u6ce8\u610f\u4e24\u8005\u76f8\u51cf\u5c31\u662f\u7edd\u5bf9\u503c\u6700\u5927\u5b50\u6bb5\u548c\uff09\u3002\n- \u6211\u4eec\u9700\u8981\u627e\u5230\u6700\u53f3\u7684\uff0c\u7edd\u5bf9\u503c\u5927\u4e8e $c$ \u7684\u533a\u95f4\u7684\u5de6\u7aef\u70b9\uff0c\u5728\u7ebf\u6bb5\u6811\u4e0a\uff0c\u4e8c\u5206\u7684\u540c\u65f6\u7ef4\u62a4\u540e\u7f00\u4fe1\u606f\uff0c\u5bb9\u6613\u5728 $O(\\log q)$ \u7684\u65f6\u95f4\u5185\u67e5\u8be2\u5f97\u5230\u7ed3\u679c\u3002\n- \u627e\u5230\u6700\u53f3\u7684\u5de6\u7aef\u70b9\u4e4b\u540e\uff0c\u53ef\u4ee5\u5229\u7528\u8be5\u70b9\u7684\u6b63\u8d1f\u8bf4\u660e\u8fd9\u4e2a\u64cd\u4f5c\u662f\u4e0a\u9762\u56db\u79cd\u60c5\u51b5\u7684\u54ea\u4e00\u79cd\uff08\u89e6\u5e95\u540e\u78b0\u9876\uff0c\u78b0\u9876\u540e\u89e6\u5e95\uff0c\u89e6\u5e95\u540e\u534a\u6bb5\uff0c\u78b0\u9876\u540e\u534a\u6bb5\uff09\uff0c\u7136\u540e\u627e\u5230\u6781\u503c\u70b9\uff0c\u518d\u5224\u65ad\u8981\u4e0d\u8981\u6e05 $0$\uff0c\u6700\u7ec8\u7684\u4ee3\u7801\u662f\u7b80\u77ed\u7684\uff0c[\u4ee3\u7801](https://www.luogu.com.cn/paste/njzmvld2)\u3002",
        "postTime": 1648123787,
        "uid": 260884,
        "name": "WeLikeStudying",
        "ccfLevel": 0,
        "title": "\u3010\u65e7\u4e8b\u91cd\u63d0\u3011\u5206\u7cd6\u679c"
    },
    {
        "content": "[\u5728\u6211\u7684\u535a\u5ba2\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/mk-oi/p/P8518.html)\n\n## Problem\n\n[\u9898\u76ee\u7f16\u53f7\uff0cP8518 [IOI2021] \u5206\u7cd6\u679c](https://www.luogu.com.cn/problem/P8518)\n\n**\u9898\u76ee\u5927\u610f\uff1a**\n\n\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $c$\uff0c\u4f60\u6709\u4e00\u4e2a\u5e8f\u5217 $a$\uff0c\u521d\u59cb\u65f6 $a$ \u7684\u6bcf\u4e2a\u503c\u90fd\u4e3a $0$\u3002\u6709 $q$ \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u5c06\u4e00\u4e2a\u533a\u95f4\u52a0\u4e0a\u4e00\u4e2a\u6570\u3002\u6bcf\u6b21\u64cd\u4f5c\u540e\u82e5 $a_i<0$ \u5219 $a_i \\gets 0$\u3002\u82e5 $a_i>c_i$ \u5219 $a_i \\gets c_i$\u3002\u95ee $q$ \u6b21\u64cd\u4f5c\u540e\u5e8f\u5217 $a$ \u7684\u503c\u3002\n\n## Solution\n\n\u6211\u4eec\u5b9a\u4e49 $a_i \\gets 0$ \u4e3a\u201c\u78b0\u4e0b\u58c1\u201d\uff0c$a_i \\gets c_i$ \u4e3a\u201c\u78b0\u4e0a\u58c1\u201d\u3002\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6bcf\u4e2a $a_i$\uff0c\u6700\u540e\u4e00\u6b21\u78b0\u58c1\u524d\u7684\u64cd\u4f5c\u662f\u65e0\u7528\u7684\u3002\u4e8e\u662f\u6211\u4eec\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u6c42\u51fa\u6700\u540e\u4e00\u6b21\u78b0\u58c1\u7684\u65f6\u95f4\u3002\n\n\u5047\u8bbe\u6b63\u5728\u8003\u8651\u7b2c $i$ \u4e2a\u70b9\u3002\n\n\u5047\u8bbe\u6ca1\u6709\u63a8\u5e73\u64cd\u4f5c\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u7684\u53d8\u5316\u60c5\u51b5\u5e94\u8be5\u662f\u8fd9\u6837\u4e00\u6761\u66f2\u7ebf\uff1a\n\n![QQ\u622a\u56fe20220907094243.png](https://s2.loli.net/2022/09/07/GVhNrHDJtFyRknl.png)\n\n\u89c2\u5bdf\u53d1\u73b0\uff0c\u5bf9\u4e8e\u76f8\u90bb\u7684\u4e00\u6b21\u78b0\u4e0a\u58c1\u548c\u4e00\u6b21\u78b0\u4e0b\u58c1\uff1a\n\n![QQ\u622a\u56fe20220907094515.png](https://s2.loli.net/2022/09/07/HGuctaf9WM3EDOo.png)\n\n\u4ed6\u4eec\u7684\u5dee\u4e00\u5b9a $>c_i$\u3002\n\n\u4e8e\u662f\u8003\u8651\u4f7f\u7528\u8fd9\u4e2a\u6027\u8d28\u6765\u627e\u5230\u6700\u540e\u4e00\u6b21\u78b0\u4e0a\u58c1\u548c\u6700\u540e\u4e00\u6b21\u78b0\u4e0b\u58c1\u3002\n\n\u5177\u4f53\u600e\u4e48\u5b9e\u73b0\u5462\uff1f  \n\u6211\u4eec\u5728\u65f6\u95f4\uff08\u5373\u6bcf\u6b21\u64cd\u4f5c\uff09\u4e0a\u5efa\u4e00\u68f5\u7ebf\u6bb5\u6811\uff0c\u5728\u7ebf\u6bb5\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\u8bb0\u5f55\u8fd9\u4e2a\u533a\u95f4\u7684\u548c\uff0c\u524d\u7f00\u6700\u5927\u6700\u5c0f\u503c\u3002\u5219\u6211\u4eec\u67e5\u8be2\u53ea\u8981\u627e\u6700\u540e\u4e00\u6b21\u78b0\u4e0a\u58c1\u548c\u6700\u540e\u4e00\u6b21\u78b0\u4e0b\u58c1\u4e2d\u9760\u524d\u7684\u90a3\u4e2a\u7684\u4f4d\u7f6e\uff0c\u53e6\u4e00\u4e2a\u5219\u4e3a\u4ece\u8fd9\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u4e00\u76f4\u9053\u6700\u540e\u7684\u53e6\u4e00\u4e2a\u6781\u503c\u3002  \n\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u67e5\u8be2\u7684\u662f\u4e00\u6bb5\u540e\u7f00\uff0c\u6240\u4ee5\u82e5\u5f53\u524d\u5728\u533a\u95f4 $[l,r]$\uff0c\u5219\u540c\u65f6\u8fd8\u8981\u8bb0\u5f55 $[r+1,q]$ \u8fd9\u4e2a\u533a\u95f4\u7684\u533a\u95f4\u548c\uff0c\u524d\u7f00\u6700\u5927\u6700\u5c0f\u503c\u3002  \n\u5bf9\u4e8e\u5f53\u524d\u533a\u95f4\uff0c\u82e5\u53f3\u534a\u90e8\u5206\uff08$[mid+1,q]$\uff09\u7684\u6781\u5dee $>c_i$\uff0c\u5219\u7b54\u6848\u5728\u53f3\u513f\u5b50\uff0c\u5426\u5219\u5728\u5de6\u513f\u5b50\u3002\n\n\u627e\u5230\u6b63\u786e\u7684\u4f4d\u7f6e\u540e\uff0c\u8003\u8651\u7ef4\u62a4\u7b54\u6848\uff0c\u53ef\u4ee5\u628a\u78b0\u58c1\u64cd\u4f5c\u770b\u6210\u6574\u4f53\u4f4d\u79fb\u3002\u4ee5\u78b0\u4e0a\u58c1\u4e3a\u4f8b\uff0c\u5219\u76f8\u5f53\u4e8e\u5c06\u6574\u4e2a\u66f2\u7ebf\u5411\u4e0b\u79fb\u52a8\u4e00\u6bb5\u8ddd\u79bb\uff0c\u4e5f\u5c31\u662f\u6574\u4f53\u51cf\u53bb\u4e00\u4e2a\u503c\uff0c\u5982\u56fe\u6240\u793a\uff1a\n\n![QQ\u622a\u56fe20220907095733.png](https://s2.loli.net/2022/09/07/OPBxJm9oTlXSsgL.png)\n\n\u6240\u4ee5\u6700\u7ec8\u7b54\u6848\u4e3a\u6574\u4e2a\u540e\u7f00\u7684\u548c\u51cf\u53bb\u6700\u540e\u4e00\u6b21\u78b0\u58c1\u7684\u524d\u7f00\u548c\u518d\u52a0\u4e0a\u4f4d\u79fb\u91cf\u3002\n\n\u4f46\u662f\u4e0a\u9762\u7684\u53ea\u662f\u5355\u72ec\u4e00\u4e2a\u70b9\u7684\u505a\u6cd5\u3002\u90a3\u6709 $n$ \u4e2a\u70b9\u7684\u60c5\u51b5\u5462\uff1f\n\n\u53ef\u4ee5\u8fdb\u884c\u5dee\u5206\uff0c\u4e5f\u5c31\u662f\u5bf9\u4e8e\u4e00\u4e2a\u5f71\u54cd\u8303\u56f4\u4e3a $[l,r]$ \u7684\u64cd\u4f5c\uff0c\u5728\u70b9 $l$ \u65f6\u5c06\u5176\u63d2\u5165\u7ebf\u6bb5\u6811\uff0c\u5728\u70b9 $r+1$ \u65f6\u5c06\u5176\u4ece\u7ebf\u6bb5\u6811\u4e2d\u5220\u9664\u5373\u53ef\u3002\n\n## Code\n\n```cpp\n//Think twice,code once.\n#include<vector>\n#include<cstdio>\n#include<string>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint n,q;\nvector<int>c,lt,rt,vv,ans;\nvector<pair<int,int> >v[200005];\nstruct Segment_Tree\n{\n\tlong long sum[800005],mx[800005],mn[800005];//sum\uff0cmx\uff0cmn \u5206\u522b\u4e3a\u533a\u95f4\u548c\uff0c\u6700\u5927\u6700\u5c0f\u503c\u3002\n\tint l[800005],r[800005];\n\tvoid build(int ll,int rr,int k)\n\t{\n\t\tl[k]=ll;r[k]=rr;\n\t\tif(ll==rr) return ;\n\t\tint mid=(l[k]+r[k])/2;\n\t\tbuild(ll,mid,k*2);\n\t\tbuild(mid+1,rr,k*2+1);\n\t\treturn ;\n\t}\n\tvoid update(int p,int val,int k)\n\t{\n\t\tif(l[k]==r[k])\n\t\t{\n\t\t\tsum[k]+=val;\n\t\t\tmx[k]=max(0ll,sum[k]);\n\t\t\tmn[k]=min(0ll,sum[k]);\n\t\t\treturn ;\n\t\t}\n\t\tint mid=(l[k]+r[k])/2;\n\t\tif(p<=mid) update(p,val,k*2);\n\t\telse update(p,val,k*2+1);\n\t\tsum[k]=sum[k*2]+sum[k*2+1];\n\t\tmx[k]=max(mx[k*2],sum[k*2]+mx[k*2+1]);\n\t\tmn[k]=min(mn[k*2],sum[k*2]+mn[k*2+1]);\n\t\treturn ;\n\t}\n\tlong long query(int cc,long long rsum,long long rmx,long long rmn,int k)//\u8fd9\u91cc rsum,rmx,rmn \u5206\u522b\u4ee3\u8868\u5f53\u524d\u533a\u95f4 [l,r] \u7684\u540e\u7f00 [r+1,q] \u7684\u548c\uff0c\u6700\u5927\u6700\u5c0f\u503c\u3002\n\t{\n\t\tif(l[k]==r[k])\n\t\t{//\u4e8c\u5206\u5f97\u5230\u7684\u4f4d\u7f6e\u4e00\u5b9a\u662f\u6700\u540e\u4e00\u6b21\u78b0\u4e0a\u58c1\u548c\u6700\u540e\u4e00\u6b21\u78b0\u4e0b\u58c1\u4e2d\u7684\u67d0\u4e00\u4e2a\uff0c\u6240\u4ee5\u53ef\u4ee5\u6839\u636e sum \u7684\u503c\u6765\u5224\u65ad\u4ed6\u662f\u78b0\u4e0a\u58c1\u8fd8\u662f\u78b0\u4e0b\u58c1\uff0c\u8fdb\u800c\u5224\u65ad\u6700\u540e\u4e00\u6b21\u78b0\u58c1\u65f6\u78b0\u4e0a\u58c1\u8fd8\u662f\u78b0\u4e0b\u58c1\n\t\t\tif(sum[k]<=0)\n\t\t\t{\n\t\t\t\tif(rmx>cc) return cc+rsum-rmx;\n\t\t\t\telse return rsum-rmn;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(rmn<-cc) return rsum-rmn;\n\t\t\t\telse return cc+rsum-rmx;\n\t\t\t}\n\t\t}\n\t\tlong long nsum=rsum+sum[k*2+1];\n\t\tlong long nmx=max(mx[k*2+1],sum[k*2+1]+rmx);\n\t\tlong long nmn=min(mn[k*2+1],sum[k*2+1]+rmn);\n        //\u5c06 [mid+1,r] \u4e0e\u540e\u7f00\u5408\u5e76\u3002\n\t\tif(nmx-nmn<=cc) return query(cc,nsum,nmx,nmn,k*2);\n\t\telse return query(cc,rsum,rmx,rmn,k*2+1);\n\t}\n}tr;\nvector<int>distribute_candies(vector<int>c,vector<int>lt,vector<int>rt,vector<int>vv)\n{\n\tn=c.size();\n\tq=vv.size();\n\ttr.build(0,q,1);\n\tc.push_back(0);\n\tlt.push_back(0);\n\trt.push_back(0);\n\tvv.push_back(0);\n\tfor(int i=n-1;i>=0;i--) swap(c[i],c[i+1]);\n\tfor(int i=q-1;i>=0;i--) swap(lt[i],lt[i+1]);\n\tfor(int i=q-1;i>=0;i--) swap(rt[i],rt[i+1]);\n\tfor(int i=q-1;i>=0;i--) swap(vv[i],vv[i+1]);\n\tfor(int i=1;i<=q;i++)\n\t{\n\t\tlt[i]++,rt[i]++;\n\t\tv[lt[i]].emplace_back(i,vv[i]);\n\t\tv[rt[i]+1].emplace_back(i,-vv[i]);\n\t}//\u5dee\u5206\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(auto j:v[i])\n\t\t\ttr.update(j.first,j.second,1);\n\t\tans.push_back(tr.query(c[i],0,0,0,1));\n\t}\n\treturn ans;\n}\n```\n",
        "postTime": 1662516417,
        "uid": 195331,
        "name": "Mine_King",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P8518 \u3010[IOI2021] \u5206\u7cd6\u679c\u3011"
    },
    {
        "content": "$\\text{update on 2022.10.21}$\uff1a\u5e94\u540c\u5b66\u7684\u8981\u6c42\uff0c\u589e\u52a0\u4e86\u4e00\u4e9b\u6ce8\u91ca\uff0c\u540c\u65f6\u6ce8\u660e\u4e86\u601d\u8def\u6765\u6e90\u3002\n\n# IOI2021 \u5206\u7cd6\u679c\n\n\u53c2\u8003\u4e86 [Little09](https://www.luogu.com.cn/user/151475) \u7684\u601d\u8def\n\n[\u9898\u9762](https://www.luogu.com.cn/problem/P8518)\n\n\u770b\u5b8c\u9898\u7b2c\u4e00\u53cd\u5e94\u80af\u5b9a\u662f\u66b4\u529b\uff0c\u4f46\u518d\u770b\u770b\u6570\u636e\u8303\u56f4\uff1a\n\n$$1 \\le n \\le 200000$$\n\n$$1 \\le q \\le 200000$$\n\n\u6240\u4ee5\u80af\u5b9a\u8981\u4f18\u5316\uff0c\u800c\u4e14\u80fd\u5927\u6982\u731c\u5230\u65f6\u95f4\u590d\u6742\u5ea6\u662f $\\mathcal{O}(n \\log n)$\u3002\n\n------------\n## \u91cd\u65b0\u8003\u8651\u9898\u76ee\n\n\u6570\u7ec4 $l$ \u548c $r$ \u5206\u522b\u8868\u793a\u6bcf\u4e00\u5929\u589e\u52a0\u7cd6\u679c\u7684\u76d2\u5b50**\u533a\u95f4**\uff0c\u8fd9\u5c31\u7c7b\u4f3c\u4e8e\u533a\u95f4\u64cd\u4f5c\u3002\n\n\u5f88\u5feb\u60f3\u5230\u4f7f\u7528**\u5e26\u533a\u95f4\u4fee\u6539\u64cd\u4f5c**\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6bd4\u5982\u5e73\u8861\u6811\u3001\u7ebf\u6bb5\u6811\u7b49\u7b49\u2026\u2026\n\n\u5230\u76ee\u524d\u4e3a\u6b62\u8fd8\u4e0d\u80fd\u786e\u5b9a\u4f7f\u7528\u54ea\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u5c31\u5148\u8df3\u8fc7\u8fd9\u4e2a\u95ee\u9898\u3002\n\n## \u5206\u6790\u9898\u9762\n\n\u9996\u5148\u628a\u6bcf\u4e2a\u76d2\u5b50\u5206\u5f00\u8003\u8651\u3002\n\n\u5982\u679c\u628a\u7cd6\u679c\u88c5\u6ee1\u79f0\u4e3a\u201c\u78b0\u4e0a\u58c1\u201d\uff0c\u62ff\u7a7a\u79f0\u4e3a\u201c\u78b0\u4e0b\u58c1\u201d\uff0c\u90a3\u4e48\u5982\u679c\u4e0d\u8003\u8651\u78b0\u58c1\u7684\u60c5\u51b5\uff0c\u5f88\u5bb9\u6613\u7b97\u51fa**\u6bcf\u4e00\u65f6\u523b**\u7684\u7cd6\u679c\u6570\u3002\n\n\u4f46\u662f\u663e\u7136**\u4e0d\u5e94**\u7b97\u51fa\u6bcf\u4e00\u65f6\u523b\u7684\u7cd6\u679c\u6570\uff0c\u4f1a $\\text{TLE}$\u3002~~\u8ddf\u66b4\u529b\u6709\u4ec0\u4e48\u533a\u522b~~\n\n\u53d1\u73b0\u5982\u679c\u6211\u4eec\u627e\u5230\u4e86\u8fd9\u4e2a\u76d2\u5b50**\u6700\u540e\u4e00\u6b21\u78b0\u58c1\u7684\u4f4d\u7f6e**\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u53ef\u4ee5\u7b97\u51fa\u5b83\u6700\u540e\u7684\u7cd6\u679c\u6570\uff0c\u56e0\u4e3a\u540e\u9762\u4e0d\u7528\u518d\u78b0\u58c1\uff0c\u76f4\u63a5\u5bf9\u540e\u9762\u7684\u64cd\u4f5c\u6c42\u548c\u5373\u53ef\u3002\n\n\u8003\u8651\u4e00\u4e2a\u533a\u95f4\uff0c\u5b83\u5305\u542b\u6700\u540e\u4e00\u6b21\u78b0\u4e0a\u58c1\u548c\u78b0\u4e0b\u58c1\u4f4d\u7f6e\uff0c\u4e5f\u5c31\u662f\u8bf4**\u78b0\u4e0a\u3001\u4e0b\u58c1\u4e4b\u95f4\u7cd6\u679c\u6570 $\\ge$ \u76d2\u5b50\u5bb9\u91cf**\u3002\n\n\u5982\u4f55\u5b9e\u73b0\u5462\uff1f\n\n\u53ef\u4ee5\u8fd9\u4e48\u505a\uff1a\n\n- \u5bfb\u627e\u6700\u5927\u7684 $x$\uff0c\u4f7f\u5f97\u533a\u95f4 $[x,q]$ \u4e2d\uff0c\u76d2\u5b50\u7cd6\u679c\u6570\u6781\u5dee $\\ge$ \u76d2\u5b50\u5bb9\u91cf\u3002\n\n\u4e8e\u662f\u53ef\u4ee5\u4ece $1$ \u5230 $n$ \u4f9d\u6b21\u626b\u76d2\u5b50\uff1a\n\n- \u5f53\u626b\u5230\u7b2c $i$ \u4e2a\u76d2\u5b50\u65f6\uff0c\u8003\u8651\u5728\u4e0a\u4e00\u4e2a\u76d2\u5b50\u7684\u57fa\u7840\u4e0a\uff0c**\u6dfb\u52a0\u4ee5 $i$ \u5f00\u59cb\u7684\u533a\u95f4\uff0c\u5220\u9664\u4ee5 $i-1$ \u7ed3\u675f\u7684\u533a\u95f4**\u3002\n\n\u9700\u8981\u7ef4\u62a4**\u533a\u95f4 $\\min$ \u548c $\\max$**\uff0c\u4e8e\u662f\u60f3\u5230\u4f7f\u7528**\u7ebf\u6bb5\u6811**\u3002\n\n\u6700\u540e\uff0c\u627e\u6700\u5927\u7684x\uff0c\u9700\u8981\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u3002\n\n\u540c\u65f6\u6ce8\u610f\u7279\u5224\u4e0d\u78b0\u58c1\u7684\u60c5\u51b5\u3002\n\n~~\u5176\u5b9e\u5c31\u662f\u4e2a\u626b\u63cf\u7ebf\u5566~~\n\n\u4ee3\u7801\uff08$\\text{LOJ}$ \u4e0a\u901a\u8fc7\uff09\uff1a\n\n```cpp\n#include \"candies.h\"\n#include<vector>\nusing namespace std;\ntypedef long long ll;\nconst int N=2e5+10;\nconst ll oo=1e17;\nint n,q;\nll max(ll a,ll b) {\n\treturn a>=b?a:b;\n}\nll min(ll a,ll b) {\n\treturn a<=b?a:b;\n}\nstruct Segment_Tree {\n\tll val,max,min;\n\tll add_lazy;\n} tree[N<<2];\ninline int ls(int p) {\n\treturn p<<1;\n}\ninline int rs(int p) {\n\treturn p<<1|1;\n}\ninline void push_up(int p) {\n\ttree[p].max=max(tree[ls(p)].max,tree[rs(p)].max);\n\ttree[p].min=min(tree[ls(p)].min,tree[rs(p)].min);\n\ttree[p].val=tree[ls(p)].val+tree[rs(p)].val;\n\treturn;\n}\ninline void push_down(int p,int len) {\n\tif(tree[p].add_lazy) {\n\t\ttree[ls(p)].add_lazy+=tree[p].add_lazy;\n\t\ttree[ls(p)].val+=tree[p].add_lazy*(ll)((len+1)/2);\n\t\ttree[ls(p)].max+=tree[p].add_lazy;\n\t\ttree[ls(p)].min+=tree[p].add_lazy;\n\t\ttree[rs(p)].add_lazy+=tree[p].add_lazy;\n\t\ttree[rs(p)].val+=tree[p].add_lazy*(ll)(len/2);\n\t\ttree[rs(p)].max+=tree[p].add_lazy;\n\t\ttree[rs(p)].min+=tree[p].add_lazy;\n\t\ttree[p].add_lazy=0;\n\t}\n}\ninline void update(int p,int l,int r,int x,int y,ll k) {\n\tif(x<=l&&r<=y) {\n\t\ttree[p].val+=k*(r-l+1);\n\t\ttree[p].add_lazy+=k;\n\t\ttree[p].max+=k;\n\t\ttree[p].min+=k;\n\t\treturn;\n\t}\n\tpush_down(p,r-l+1);\n\tint mid=(l+r)>>1;\n\tif(x<=mid)\n\t\tupdate(ls(p),l,mid,x,y,k);\n\tif(mid+1<=y)\n\t\tupdate(rs(p),mid+1,r,x,y,k);\n\tpush_up(p);\n\treturn;\n}\ninline ll query(int p,int l,int r,int x) {\n\tif(l==r)\n\t\treturn tree[p].val;\n\tpush_down(p,r-l+1);\n\tint mid=(l+r)>>1;\n\tif(x<=mid)\n\t\treturn query(ls(p),l,mid,x);\n\telse\n\t\treturn query(rs(p),mid+1,r,x);\n}\ninline ll binary_get_ans(ll x) {\n\tint p=1;\n\tint l=0,r=q;\n\tll _max=-oo,_min=oo;\n\tll last=query(1,0,q,q);//\u6700\u540e\u4e00\u6b21\u78b0\u58c1\u65f6\u76d2\u5b50\u91cc\u7684\u7cd6\u679c\u6570\n\twhile(l<r) {\n\t\tpush_down(p,r-l+1);\n\t\tint mid=(l+r)>>1;\n\t\tif(max(tree[rs(p)].max,_max)-min(tree[rs(p)].min,_min)>x) {\n\t\t\tp=rs(p);\n\t\t\tl=mid+1;\n\t\t} else {\n\t\t\t_max=max(_max,tree[rs(p)].max);\n\t\t\t_min=min(_min,tree[rs(p)].min);\n\t\t\tr=mid;\n\t\t\tp=ls(p);\n\t\t}\n\t}\n\tif(tree[p].min<_min) //\u78b0\u4e0a\u58c1\n\t\treturn x-(_max-last);\n\telse //\u78b0\u4e0b\u58c1\n\t\treturn last-_min;\n}\nvector<int>op[N],ans,add[N];\nvector<int> distribute_candies(vector<int> c,vector<int> l,vector<int> r,vector<int> v) {\n\tn=c.size();\n\tq=l.size();\n\tfor(int i=0; i<q; i++) {\n\t\top[l[i]].push_back(i);\n\t\tadd[l[i]].push_back(v[i]);\n\t\top[r[i]+1].push_back(i);\n\t\tadd[r[i]+1].push_back(-v[i]);\n\t}\n\tfor(int i=0; i<n; i++) {\n\t\tfor(int j=0; j<add[i].size(); j++)\n\t\t\tupdate(1,0,q,op[i][j]+1,q,add[i][j]);\n\t\tif(tree[1].max-tree[1].min<=c[i])\n\t\t\tans.push_back(query(1,0,q,q)-tree[1].min);\n\t\telse\n\t\t\tans.push_back(binary_get_ans(c[i]));\n\t}\n}\n```",
        "postTime": 1645863835,
        "uid": 545529,
        "name": "Sherlock_Chen",
        "ccfLevel": 5,
        "title": "P7665 Solution"
    },
    {
        "content": "Update on 2022.9.17\uff1a\u611f\u8c22 [Stinger](https://www.luogu.com.cn/user/361308)\u3002\n\nUpdate on 2022.9.18\uff1a\u611f\u8c22\u5ba1\u6838\u5458 [_RSY_](https://www.luogu.com.cn/user/46197) \u63d0\u51fa\u7684\u5efa\u8bae\u3002\n\n\u524d\u7f6e\u829d\u58eb\uff1a[\u7ebf\u6bb5\u6811](https://oi-wiki.org/ds/seg/)\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u5143\u7d20 $i$\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u7c7b\u4f3c\u4e0b\u56fe\u7684\u56fe\u5f62\u8868\u793a\u5176\u53d8\u5316\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/gw7dv5oy.png)\n\n\u8fd9\u6837\u7684\u56fe\u5f62\u76f4\u63a5\u5904\u7406\u662f\u5f88\u9ebb\u70e6\u7684\uff0c\u56e0\u4e3a\u4f60\u4e0d\u65b9\u4fbf\u5904\u7406\u4e0a\u4e0b\u8fb9\u754c\u3002\n\n\u5047\u5982\u6ca1\u6709\u4e0a\u4e0b\u8fb9\u754c\uff0c\u6211\u4eec\u53ef\u4ee5\u5982\u4f55\u5bf9\u6bcf\u4e2a $i$ \u5f97\u5230\u4e0a\u8ff0\u56fe\u5f62\uff1f\n\n\u8003\u8651\u4ee5\u64cd\u4f5c\u7f16\u53f7 $0 \\sim q$ \u4e3a\u4e0b\u6807\u5efa\u7ebf\u6bb5\u6811\uff0c\u4ece\u5c0f\u5230\u5927\u5904\u7406\u6bcf\u4e2a $i$\u3002\n\n\u5728\u6bcf\u4e2a\u4f4d\u7f6e $i$\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u4e8e\u6240\u6709 $l_j = i$\uff0c\u5c06\u4e0b\u6807 $j \\sim q$ \u52a0\u4e0a $v_j$\uff0c\u8fd8\u8981\u5bf9\u4e8e\u6240\u6709 $r_j + 1 = i$\uff0c\u5c06\u4e0b\u6807 $j \\sim q$ \u51cf\u53bb $v_j$\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u5bf9\u4fee\u6539\u5dee\u5206\u6765\u89e3\u51b3\u3002\n\n\u5047\u5982\u6ca1\u6709\u4e0a\u754c\uff0c\u6211\u4eec\u53ef\u4ee5\u5982\u4f55\u7b97\u7b54\u6848\uff1f\n\n\u6b64\u65f6\u6211\u4eec\u4f1a\u6ce8\u610f\u5230\u4e00\u4e2a\u6027\u8d28\uff1a**\u5728\u5df2\u77e5\u4e0a\u8ff0\u56fe\u5f62\u7684\u60c5\u51b5\u4e0b\uff0c\u7b54\u6848\u53ea\u4e0e\u662f\u5426\u78b0\u5230\u8fc7\u4e0b\u8fb9\u754c\u4ee5\u53ca\u6700\u540e\u4e00\u6b21\u78b0\u5230\u4e0b\u8fb9\u754c\u7684\u65f6\u95f4\u6709\u5173**\u3002\n\n1. \u6ca1\u6709\u78b0\u5230\u4e0b\u754c\n\n\u8bbe**\u5047\u88c5\u770b\u4e0d\u5230\u4e0b\u754c\u7684\u60c5\u51b5\u4e0b**\u56fe\u5f62\u4e0a\u4e0b\u6807 $i$ \u5bf9\u5e94\u7684\u5143\u7d20\u4e3a $s_i$\uff0c\u5219\u7b54\u6848\u4e3a $s_q$\u3002\n\n2. \u6700\u540e\u4e00\u6b21\u78b0\u5230\u4e0b\u754c\u7684\u65f6\u95f4\u4e3a $t$\n\n\u7b54\u6848\u4e3a $s_q - s_t$\u3002\n\n\u6ca1\u6709\u78b0\u5230\u4e0b\u754c\u7684\u60c5\u51b5\u5bb9\u6613\u5904\u7406\uff0c\u4f46\u6211\u4eec\u5982\u4f55\u6c42\u51fa\u8fd9\u4e2a\u65f6\u95f4 $t$ \u5462\uff1f\n\n\u6ce8\u610f\u5230 $s_t$ \u4e3a**\u5047\u88c5\u770b\u4e0d\u5230\u4e0b\u754c\u3001$s_t < 0$ \u4e14 $s_t$ \u6700\u5c0f\u7684\u60c5\u51b5\u4e0b** $t$ \u7684\u6700\u5927\u503c\uff0c\u4e8e\u662f\u53ef\u4ee5\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u6c42\u51fa\u3002\n\n\u73b0\u5728\u6211\u4eec\u52a0\u4e0a\u4e0a\u754c\u3002\u76f8\u6bd4\u4e8e\u53ea\u6709\u4e0b\u754c\u7684\u60c5\u51b5\uff0c\u6709\u4ec0\u4e48\u53d8\u5316\u5462\uff1f\n\n\u57fa\u4e8e\u4e0a\u9762\u7684\u7ecf\u9a8c\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5173\u6ce8\u6700\u540e**\u81f3\u591a**\u4e24\u6b21\u78b0\u5230\u4e0b\u754c\u548c\u4e0a\u754c\u5373\u53ef\u3002\n\n\u82e5\u6700\u540e\u4e00\u6b21\u78b0\u5230\u4e86\u4e0b\u754c\uff0c\u6b64\u65f6 $\\displaystyle\\max_{j = 0}^t s_j - s_t> c_i$\u3002\u6700\u540e\u4e00\u6b21\u78b0\u5230\u4e0a\u754c\u7684\u60c5\u51b5\u7c7b\u4f3c\u3002\n\n\u8fd9\u542f\u53d1\u6211\u4eec\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u627e\u51fa\u4e00\u4e2a\u5c3d\u91cf\u9760\u53f3\u7684\u4f4d\u7f6e $t'$\uff0c\u4f7f $[t', q]$ \u7684**\u7edd\u5bf9\u503c\u6700\u5927\u5b50\u6bb5\u548c** $> c_i$\uff0c\u6b64\u65f6\u6211\u4eec\u7684 $t', t$ \u5206\u522b\u4e3a\u78b0\u5230\u4e0b\u754c\u548c\u4e0a\u754c\uff08\u6709\u53ef\u80fd\u53cd\u8fc7\u6765\uff09\u3002\n\n\u4e0b\u6587\u8bbe $maxs_i$ \u8868\u793a $\\displaystyle\\max_{j = i}^q (s_q - s_{j - 1})$\uff0c$mins_i$ \u8868\u793a $\\displaystyle\\min_{j = i}^q (s_q - s_{j - 1})$\u3002\n\n1. \u5f53 $a_{t'} = s_{t'} - s_{t' - 1} < 0$\n\n- $maxs_{t' + 1} > c_i$\n\n\u5728 $t'$ \u65f6\u523b\u4e00\u5b9a\u78b0\u5230\u4e86\u4e0a\u8fb9\u754c\uff0c\u5728 $t$ \u65f6\u523b\u4e00\u5b9a\u78b0\u5230\u4e86\u4e0b\u754c\uff0c\u5219\u7b54\u6848\u4e3a $c_i + (s_q - s_{t'}) - maxs_{t' + 1}$\u3002\n\n- $maxs_{t' + 1} \\leq c_i$\n\n\u5728 $t'$ \u65f6\u523b\u4e00\u5b9a\u78b0\u5230\u4e86\u4e0b\u8fb9\u754c\uff0c\u5728 $t$ \u65f6\u523b\u4e00\u5b9a\u78b0\u5230\u4e86\u4e0a\u754c\uff0c\u5219\u7b54\u6848\u4e3a $(s_q - s_{t'}) - mins_{t' + 1}$\u3002\n\n2. \u5f53 $a_{t'} = 0$\n\n\u6b64\u65f6 $t' = 0$\uff0c\u5373\u6ca1\u6709\u78b0\u5230\u8fc7\u4efb\u4f55\u8fb9\u754c\u3002\n\n3. \u5f53 $a_{t'} > 0$\n\n\u7c7b\u4f3c\u4e8e $a_{t'} < 0$ \u7684\u60c5\u51b5\u3002\n\n- $mins_{t' + 1} < -c_i$\n\n\u7b54\u6848\u4e3a $(s_q - s_{t'}) - mins_{t' + 1}$\u3002\n\n- $mins_{t' + 1} \\geq -c_i$\n\n\u7b54\u6848\u4e3a $c_i + (s_q - s_{t'}) - maxs_{t' + 1}$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O((n + q) \\log q)$\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long ll;\n\ntypedef struct {\n\tint l;\n\tint r;\n\tll sum;\n\tll min_sum;\n\tll max_sum;\n} Node;\n\ntypedef struct {\n\tint id;\n\tint pos;\n\tint val;\n} Query;\n\nNode tree[800007];\nQuery query[400007];\n\nbool operator <(const Query a, const Query b){\n\treturn a.pos < b.pos;\n}\n\nvoid build(int x, int l, int r){\n\ttree[x].l = l;\n\ttree[x].r = r;\n\tif (l == r) return;\n\tint mid = (l + r) >> 1;\n\tbuild(x * 2, l, mid);\n\tbuild(x * 2 + 1, mid + 1, r);\n}\n\ninline void update(int x){\n\tint ls = x * 2, rs = x * 2 + 1;\n\ttree[x].sum = tree[ls].sum + tree[rs].sum;\n\ttree[x].min_sum = min(tree[ls].min_sum, tree[rs].min_sum + tree[ls].sum);\n\ttree[x].max_sum = max(tree[ls].max_sum, tree[rs].max_sum + tree[ls].sum);\n}\n\nvoid add(int x, int pos, int val){\n\tif (tree[x].l == tree[x].r){\n\t\ttree[x].sum += val;\n\t\ttree[x].min_sum = min(tree[x].sum, 0ll);\n\t\ttree[x].max_sum = max(tree[x].sum, 0ll);\n\t\treturn;\n\t}\n\tif (pos <= ((tree[x].l + tree[x].r) >> 1)){\n\t\tadd(x * 2, pos, val);\n\t} else {\n\t\tadd(x * 2 + 1, pos, val);\n\t}\n\tupdate(x);\n}\n\nll do_query(int x, int k, ll cur_sum, ll cur_min_sum, ll cur_max_sum){\n\tif (tree[x].l == tree[x].r) return (tree[x].sum <= 0 && cur_max_sum > k) || (tree[x].sum > 0 && cur_min_sum >= -k) ? k + cur_sum - cur_max_sum : cur_sum - cur_min_sum;\n\tint rs = x * 2 + 1;\n\tll y = min(tree[rs].min_sum, cur_min_sum + tree[rs].sum), z = max(tree[rs].max_sum, cur_max_sum + tree[rs].sum);\n\tif (z - y > k) return do_query(rs, k, cur_sum, cur_min_sum, cur_max_sum);\n\treturn do_query(x * 2, k, cur_sum + tree[rs].sum, y, z);\n}\n\nvector<int> distribute_candies(vector<int> c, vector<int> l, vector<int> r, vector<int> v){\n\tint n = c.size(), q = l.size(), m = 0;\n\tvector<int> ans;\n\tc.insert(c.begin(), 0);\n\tl.insert(l.begin(), 0);\n\tr.insert(r.begin(), 0);\n\tv.insert(v.begin(), 0);\n\tbuild(1, 0, q);\n\tfor (register int i = 1; i <= q; i++){\n\t\tm++;\n\t\tquery[m].id = i;\n\t\tquery[m].pos = ++l[i];\n\t\tquery[m].val = v[i];\n\t\tif (++r[i] < n){\n\t\t\tm++;\n\t\t\tquery[m].id = i;\n\t\t\tquery[m].pos = r[i] + 1;\n\t\t\tquery[m].val = -v[i];\n\t\t}\n\t}\n\tsort(query + 1, query + m + 1);\n\tfor (register int i = 1, j = 1; i <= n; i++){\n\t\twhile (j <= m && query[j].pos == i){\n\t\t\tadd(1, query[j].id, query[j].val);\n\t\t\tj++;\n\t\t}\n\t\tans.push_back(do_query(1, c[i], 0, 0, 0));\n\t}\n\treturn ans;\n}\n```",
        "postTime": 1663338807,
        "uid": 201007,
        "name": "Leasier",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P8518 \u3010[IOI2021] \u5206\u7cd6\u679c\u3011"
    }
]