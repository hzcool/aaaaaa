[
    {
        "content": "# P8238 \u907f\u96be\u6240 \u9898\u89e3\n## 1.\u524d\u7f6e\u77e5\u8bc6\n[\u7ebf\u6bb5\u6811](https://oi-wiki.org/ds/seg/#_5) \u548c [DFS \u5e8f](https://oi-wiki.org/graph/dfs/#dfs)\n\n\u5efa\u8bae\u505a [DFS \u5e8f 2](https://loj.ac/p/145) \u6765\u7ec3\u7ec3\u624b\uff08\u5176\u5b9e\u8ddf\u8fd9\u9898\u5dee\u4e0d\u591a\uff09  \n&nbsp;\n## 2.\u601d\u8def\n$n$ \u4e2a\u8282\u70b9\u88ab $n-1$ \u6761\u8fb9\u8fde\u901a\uff0c\u8fd9\u663e\u7136\u662f\u4ee5 $1$ \u4e3a\u6839\u8282\u70b9\u7684\u4e00\u68f5\u6811\uff0c\u6211\u4eec\u628a\u8fd9\u68f5\u6811\u53eb\u505a **\u539f\u6811**\u3002\n\n\u5bf9\u4e8e\u9898\u76ee\u4e2d\u7684\u64cd\u4f5c\uff0c$1$ \u662f\u6811\u4e0a\u5355\u70b9\u4fee\u6539\uff0c$2$ \u662f\u5b50\u6811\u4fee\u6539\uff0c\u6ca1\u4fee\u6539\u4e00\u904d\u540e\u6c42\u4e00\u6b21\u6839\u8282\u70b9\u7684\u503c\u3002\n\n\u5bf9\u4e8e\u4e24\u4e2a\u64cd\u4f5c\uff0c\u76f4\u63a5\u505a\u7684\u8bdd\u5f88\u53ef\u80fd\u88ab\u5361\uff0c\u4e8e\u662f\u6211\u4eec\u5c06\u8fd9\u68f5\u6811\u7684 dfs \u5e8f\u9884\u5904\u7406\u51fa\u6765\u3002**\u6bcf\u4e00\u68f5\u5b50\u6811\u7684 dfs \u5e8f\u662f\u8fde\u7eed\u7684\u3002** \u90a3\u4e48\u5b50\u6811\u4fee\u6539\u5c31\u53ef\u4ee5\u653e\u5230\u7ebf\u6bb5\u6811\u4e0a\u505a\u533a\u95f4\u4fee\u6539\u3002\u7ebf\u6bb5\u6811\u6839\u636e dfs \u5e8f\u4e3a **\u53f6\u5b50\u8282\u70b9** \u5efa\u6811\u3002\u5373 **\u539f\u6811** \u4e0a\u8282\u70b9 $i$ \u5728 **\u7ebf\u6bb5\u6811** \u5efa\u6811\u524d\u7684\u6570\u7ec4\u4e2d\u5bf9\u5e94\u7684\u662f $\\operatorname{dfn}_i$\u3002\n\n\u8fd9\u6837 $\\log n$ \u5c31\u53ef\u4ee5\u505a\u5b8c\u4e86\uff0c\u53ef\u662f\u76f4\u63a5\u67e5\u8be2\u4ecd\u7136\u5f88\u6162\uff0c\u6bcf\u4e00\u6b21\u53ef\u80fd\u88ab\u5361\u5230 $\\mathcal{O}(n)$\uff0c\u8fd9\u6837\u663e\u7136\u4f1a\u8d85\u65f6\uff0c\u4e8e\u662f\u6211\u4eec\u5f97\u60f3\u529e\u6cd5\u4f18\u5316\u3002\n\n**\u539f\u6811** \u4e0a\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9 $i$\uff0c\u6211\u4eec\u8bb0\u5f55 $v$ \u4e3a\u503c\uff0c$c$ \u4e3a\u6240\u6709 $i$ \u7684\u5b50\u6811\u5185\u4e0e $i$ **\u4e0d\u8fde\u901a\u8def\u5f84\u6570\u91cf\u6700\u5c0f\u7684** $v$ \u4e4b\u548c\u3002\u5728 **\u7ebf\u6bb5\u6811** \u4e0a\u4e5f\u662f\u7c7b\u4f3c\u7684\uff0c\u6bcf\u6b21\u67e5\u8be2\u662f $\\mathcal{O}(1)$ \u7684\u3002\n\n\u4f46\u8fd9\u6837\u7684\u8bdd\uff0c\u4fee\u6539\u4f1a\u53d8\u6162\uff0c\u4e8e\u662f\u6211\u4eec\u8bb0\u5f55 $min_i$ \u4e3a **\u539f\u6811** \u4e0a\u8282\u70b9 $i$ \u5230\u6839\u8282\u70b9\uff081\uff09\u4e2d\u5c01\u95ed\u7684\u8def\u6bb5\u6570\u7684 **\u6700\u5c0f\u503c**\u3002\u5982\u679c $min_i>0$ \u90a3\u4e48\u7b54\u6848\u4e3a $0$\u3002  \n&nbsp;\n## 3. \u7ebf\u6bb5\u6811 `push`\n\n\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9\uff0c\u6211\u4eec\u73b0\u5728\u6709 $5$ \u4e2a\u503c\uff0c$L,R, min, c, v,tag$\u3002\u76f4\u89c2\u5730\uff0c$v$ \u53ef\u4ee5\u7701\u53bb\uff08\u5e76\u5230 $c$ \u4e2d\uff09\u3002`push` \u5e94\u8be5\u662f\u6700\u96be\u7684\u4e00\u4e2a\u90e8\u5206\u3002\n\n\u5bf9\u4e8e `pushup`\uff0c\u6211\u4eec\u4e3b\u8981\u8003\u8651 $i$ \u5de6\u5b50\u6811 $ls$ \u548c\u53f3\u5b50\u6811 $rs$ \u7684 $min$\u3002\n$$c_i=\\begin{cases}\nc_{ls}+c_{rs},\\ \\ min_{ls}=min_{rs}\\\\\nc_{ls},\\ \\ min_{ls}<min_{rs}\\\\\nc_{rs},\\ \\ min_{rs}<min_{ls}\n\\end{cases}$$\n$$min_i =\\min(min_{ls},\\ min_{rs})$$\n\n\u5bf9\u4e8e `pushdown`\uff0c\u56e0\u4e3a\u533a\u95f4\u4fee\u6539\u4e3b\u8981\u4fee\u6539\u7684\u662f $min$\uff0c\u6240\u4ee5\u5c06\u61d2\u6807\u8bb0\u90fd\u52a0\u5230 $min$ \u4e0a\u5c31\u597d\u4e86\u3002\n\n&nbsp;\n## 4. \u4ee3\u7801\n```cpp\n#include <vector>\n#include <stdio.h>\nusing namespace std;\nconst int _(100005); \nvector<int> E[_]; // \u8bb0\u5f55\u539f\u6811\u7684\u8fb9\ntypedef long long ll; ll C[_ << 2];\nbool d[_]; // \u7528\u6765\u8bb0\u5f55\u4e00\u4e2a\u8282\u70b9\u662f\u5426\u4e0e\u5176\u7236\u8282\u70b9\u8fde\u901a\uff082\u64cd\u4f5c\uff09\nint n, q, t, x, y, dfn[_], a[_], b[_], s[_];\n// DFS \u9700\u8981\u7528\u7684\u53d8\u91cf\uff0c\u7528\u5c0f\u5199\u533a\u5206\uff1bdfn \u662f dfs \u5e8f\uff0ca \u662f\u539f\u6811\u5404\u8282\u70b9\u7684\u503c\uff0cb \u662f\u7ebf\u6bb5\u6811\u5efa\u6811\u524d\u6570\u7ec4\u7684\u503c\uff0cs \u662f\u539f\u6811\u4e2d\u5404\u8282\u70b9\u7684\u5b50\u6811\u5927\u5c0f\nint L[_ << 2], R[_ << 2], M[_ << 2], T[_ << 2]; \n// \u7ebf\u6bb5\u6811\u4e2d\u7684\u53d8\u91cf\uff0c\u7528\u5927\u5199\u533a\u5206\uff1bM \u662f min, T \u662f\u61d2\u6807\u8bb0\ninline void dfs(int p, int father)\n{ b[dfn[p] = ++t] = a[p]; for (int i : E[p]) if (i != father) dfs(i, p), s[p] += s[i]; }\n// \u4e00\u904d DFS \u6c42\u51fa dfn\n#define ls p << 1\n#define rs p << 1 | 1\ninline void pushup(int p) \n{ \n    if (M[ls] == M[rs]) { M[p] = M[ls]; C[p] = C[ls] + C[rs]; }\n    else if (M[ls] < M[rs]) { M[p] = M[ls]; C[p] = C[ls]; }\n    else { M[p] = M[rs]; C[p] = C[rs]; }\n}\ninline void pushdown(int p)\n{ if (T[p]) { T[ls] += T[p]; M[ls] += T[p]; T[rs] += T[p]; M[rs] += T[p]; T[p] = 0; } }\ninline void build(int p, int l, int r) // \u7ebf\u6bb5\u6811\u6a21\u677f \u00d7 1\n{\n    R[p] = r, L[p] = l; int m = (l + r) >> 1;\n    if (l == r) { M[p] = T[p] = 0; C[p] = b[l]; return; } \n    // min \u4e0e\u61d2\u6807\u8bb0\u4e00\u5f00\u59cb\u8d4b\u503c\u4e3a 0\n    build(ls, l, m); build(rs, m + 1, r); pushup(p);\n}\ninline void change(int p) // \u7ebf\u6bb5\u6811\u6a21\u677f \u00d7 2\n{\n    if (L[p] == R[p]) { C[p] = y; return; }\n    pushdown(p); int m = (L[p] + R[p]) >> 1;\n    if (x <= m) change(ls);\n    else change(rs);\n    pushup(p);\n}\ninline void add(int p, int v) // \u7ebf\u6bb5\u6811\u6a21\u677f \u00d7 3\n{\n    if (x <= L[p] && R[p] <= y) { T[p] += v; M[p] += v; return; }\n    pushdown(p); int m = (L[p] + R[p]) >> 1;\n    if (x <= m) add(ls, v);\n    if (m < y) add(rs, v);\n    pushup(p);\n}\nint main()\n{\n    scanf(\"%d%d\", &n, &q); \n    for (int i(1), u, v; i < n; ++i) \n        scanf(\"%d%d\", &u, &v),\n        E[u].emplace_back(v),\n        E[v].emplace_back(u);\n    for (int i(1); i <= n; ++i) scanf(\"%d\", &a[i]), s[i] = 1; // \u521d\u59cb\u6bcf\u4e2a\u539f\u6811\u8282\u70b9\u7684\u5927\u5c0f\u4e3a 1\n    dfs(1, 0); build(1, 1, n);\n    while (q--) {\n        scanf(\"%d%d\", &t, &x); \n        if (t & 1) { scanf(\"%d\", &y); x = dfn[x]; change(1); }\n        // dfn[x] \u662f x \u5728\u7ebf\u6bb5\u6811\u4e0a\u7684\u4f4d\u7f6e\n        else { y = dfn[x] + s[x] - 1; x = dfn[x];\n        // \u539f\u6811\u4e0a\u8282\u70b9 x \u5728\u7ebf\u6bb5\u6811\u4e0a\u7684\u533a\u95f4\u4e3a [dfn[x], dfn[x] + s[x])\n            if (d[x]) add(1, -1);\n            else add(1, 1); d[x] ^= 1;\n        } if (M[1]) puts(\"0\"); // \u5982\u679c min 1 > 0\uff0c\u7b54\u6848\u4e3a 0\n        else printf(\"%lld\\n\", C[1]);\n    } return 0;\n}\n```\n\n## 5. \u603b\u7ed3\n\u4e0d\u9519\u7684\u9898\u76ee\uff0c\u6bd4\u8f83\u8003\u9a8c\u57fa\u7840\uff0c\u5e0c\u671b\u6d59\u6c5f\u7684 $\\operatorname{OIer}$ \u5728\u540e\u5929\u7684\u7701\u9009\uff08$\\operatorname{ZJOI}\\ 2022$\uff09\u4e2d rp++\u3002\n\n\u8d5b\u540e\uff1a$\\operatorname{ZJOI}$ \u516d\u9053\u9ed1\u9898......\n\n\u81f4\u8c22\uff1a  \n\u611f\u8c22 @[_luanyi_](https://www.luogu.com.cn/user/300313) \u63a8\u8350\u6b64\u9898  \n\u611f\u8c22 @[I_am_Accepted](https://www.luogu.com.cn/user/101868) \u7684 [\u6587\u7ae0](https://www.luogu.com.cn/blog/101868/solution-p8238) \u63d0\u4f9b\u5982\u6b64\u7b80\u5355\u5730\u601d\u8def\n",
        "postTime": 1651379134,
        "uid": 282929,
        "name": "\u67f3\u6613\u8fb0",
        "ccfLevel": 0,
        "title": "P8238 \u907f\u96be\u6240 \u9898\u89e3"
    },
    {
        "content": "### Preface\n\n\u4e0d\u597d\u610f\u601d\uff0c\u628a\u6700\u4f18\u89e3\u62a2\u4e86\uff08doge\uff09\u3002\n\n### Analysis\n\n\u770b\u4eba\u5bb6\u626b\u63cf\u7ebf / \u7ebf\u6bb5\u6811\u5408\u5e76 / \u5206\u5757\u7684\uff0c\u666e\u901a\u7ebf\u6bb5\u6811\u4e0d\u9999\u5417\u2026\u2026\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n+q\\log n)$\u3002\n\n\u5c06\u6811\u4f5c DFS \u5e8f\u3002\u7ef4\u62a4\u6bcf\u4e2a\u8282\u70b9\u5230\u6839\u8282\u70b9\u88ab\u5c01\u95ed\u7684\u8def\u6bb5\u6570\u91cf\u3002\n\n\u6bcf\u4e2a\u70b9\u6709\u4e24\u4e2a\u5c5e\u6027\uff1a\u6743\u91cd\uff08\u4eba\u53e3\uff09\u3001\u503c\uff08\u5230\u6839\u8282\u70b9\u88ab\u5c01\u95ed\u7684\u8def\u6bb5\u6570\uff09\u3002\n\n\u8fd9\u6837\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u7ebf\u6bb5\u6811\u57fa\u672c\u7684\n\n* \u533a\u95f4\u52a0\u503c\uff08DFS \u5e8f\u5b50\u6811\u8fde\u7eed\uff09\uff0c\u4fdd\u8bc1\u4efb\u610f\u65f6\u523b\u503c $\\ge 0$\uff08\u5c01\u7684\u9053\u8def\u6570\u975e\u8d1f\uff09\u3002\n\n* \u5355\u70b9\u6539\u6743\u91cd\u3002\n\n* \u8be2\u95ee\u5168\u4f53\u503c\u4e3a $0$ \u7684\u6743\u91cd\u548c\u3002\n\n\u5177\u4f53\u5730\uff0c\u7ebf\u6bb5\u6811\u8282\u70b9\u7ef4\u62a4\u4e09\u4e2a\u503c $lz,mn,cnt$\uff0c\u8868\u793a \u533a\u95f4\u52a0\u7684\u61d2\u6807\u8bb0\u3001\u533a\u95f4\u6700\u5c0f\u503c\u3001\u53d6\u5230\u533a\u95f4\u6700\u5c0f\u503c\u5143\u7d20\u7684\u6743\u91cd\u548c\u3002\n\n\u82e5\u7ebf\u6bb5\u6811\u6839\u8282\u70b9 $mn>0$ \u5219\u7b54\u6848\u4e3a $0$\uff0c\u5426\u5219\u4e3a $cnt$\u3002\n\n### Code\n\n```cpp\n//Said no more counting dollars. We'll be counting stars.\n#include<bits/stdc++.h>\nusing namespace std;\n#define For(i,j,k) for(int i=j;i<=k;i++)\n#define N 100002\n#define ll long long\n#define gc getchar\ninline int read(){\n\tint x=0;char c=gc();bool f=0;\n\twhile(!isdigit(c)){if(c=='-')f=1;c=gc();}\n\twhile(isdigit(c)){x=(x<<3)+(x<<1)+c-48;c=gc();}\n\tif(f)x=-x;return x;\n}\nstruct edge{int to,nxt;}e[2*N];\nint head[N],tot=0;\nstruct node{\n\tint lz,mn;ll cnt;\n\tfriend node operator+(node x,node y){\n\t\tif(x.mn==y.mn) return (node){0,x.mn,x.cnt+y.cnt};\n\t\telse if(x.mn<y.mn) return (node){0,x.mn,x.cnt};\n\t\telse return (node){0,y.mn,y.cnt};\n\t}\n}t[4*N];\nint n,q,a[N],id[N],L[N],R[N];\nint tim=0;\nbool f[N];\nvoid dfs(int rt,int fa){\n\tid[++tim]=rt;\n\tL[rt]=tim;\n\tfor(int i=head[rt];i;i=e[i].nxt) if(e[i].to!=fa) dfs(e[i].to,rt);\n\tR[rt]=tim;\n}\n#define mid ((l+r)>>1)\n#define ls (rt<<1)\n#define rs (rt<<1|1)\nvoid build(int rt,int l,int r){\n\tif(l==r){\n\t\tt[rt]=(node){0,0,a[l]};\n\t\treturn ;\n\t}\n\tbuild(ls,l,mid);\n\tbuild(rs,mid+1,r);\n\tt[rt]=t[ls]+t[rs];\n}\nvoid pd(int rt){\n\tt[ls].lz+=t[rt].lz;t[ls].mn+=t[rt].lz;\n\tt[rs].lz+=t[rt].lz;t[rs].mn+=t[rt].lz;\n\tt[rt].lz=0;\n}\nvoid modi(int rt,int l,int r,int x,int y){\n\tif(l==r){\n\t\tt[rt].cnt=y;\n\t\treturn ;\n\t}\n\tpd(rt);\n\tif(x<=mid) modi(ls,l,mid,x,y);\n\telse modi(rs,mid+1,r,x,y);\n\tt[rt]=t[ls]+t[rs];\n}\nvoid add(int rt,int l,int r,int x,int y,int val){\n\tif(l==x && r==y){\n\t\tt[rt].lz+=val;\n\t\tt[rt].mn+=val;\n\t\treturn ; \n\t}\n\tpd(rt);\n\tif(y<=mid) add(ls,l,mid,x,y,val);\n\telse if(x>mid) add(rs,mid+1,r,x,y,val);\n\telse add(ls,l,mid,x,mid,val),add(rs,mid+1,r,mid+1,y,val); \n\tt[rt]=t[ls]+t[rs];\n}\nint main(){\n\tn=read();q=read();\n\tint opt,x,y;\n\tFor(i,1,n-1){\n\t\tx=read();y=read();\n\t\te[++tot]=(edge){y,head[x]};head[x]=tot;\n\t\te[++tot]=(edge){x,head[y]};head[y]=tot;\n\t}\n\tdfs(1,0);\n\tFor(i,1,n) a[L[i]]=read();\n\tbuild(1,1,n); \n\twhile(q--){\n\t\topt=read();\n\t\tif(opt==1){\n\t\t\tx=read();y=read();\n\t\t\tmodi(1,1,n,L[x],y);\n\t\t}else{\n\t\t\tx=read();\n\t\t\tif(f[x]) add(1,1,n,L[x],R[x],-1);\n\t\t\telse add(1,1,n,L[x],R[x],1);\n\t\t\tf[x]^=1;\n\t\t}\n\t\tif(t[1].mn!=0) puts(\"0\");\n\t\telse printf(\"%lld\\n\",t[1].cnt);\n\t}\nreturn 0;}\n```",
        "postTime": 1651206664,
        "uid": 101868,
        "name": "I_am_Accepted",
        "ccfLevel": 0,
        "title": "P8238 [AGM 2022 \u8d44\u683c\u8d5b] \u907f\u96be\u6240\uff08\u7ebf\u6bb5\u6811\uff09"
    },
    {
        "content": "\u5206\u5757\u89e3\u6cd5\u3002\n\n\u8003\u8651\u5148\u5bf9\u539f\u6811\u8dd1 dfn \u5e8f\uff0c\u7136\u540e\u64cd\u4f5c $1,2$ \u90fd\u53d8\u6210\u4e86\u5bf9\u5e8f\u5217\u7684\u533a\u95f4\u64cd\u4f5c\u3002\n\n\u8003\u8651\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u5835\u585e\u7684\u9053\u8def\u6570\uff1a\n\n\u64cd\u4f5c\u4e00\uff1a\u6539\u8fb9\u6743\uff0c\u968f\u4fbf\u5904\u7406\u3002\n\n\u64cd\u4f5c\u4e8c\uff1a\u5982\u679c\u9053\u8def\u539f\u6765\u662f\u901a\u7545\u7684\uff0c\u90a3\u4e48\u5c06\u533a\u95f4 $[l,r]+1$\uff0c\u5426\u5219\u5c06\u533a\u95f4 $[l,r]-1$\u3002\n\n\u90a3\u4e48\u8be2\u95ee\u5c31\u53d8\u6210\u4e86\u95ee\u5e8f\u5217\u4e2d\u6709\u591a\u5c11\u4e2a\u4f4d\u7f6e\u4e3a $0$\uff08\u5373\u4ece\u70b9 $x$ \u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u6ca1\u6709\u5835\u585e\u7684\u9053\u8def\uff09\u3002\n\n\u7528\u6570\u7ec4\u7ef4\u5206\u522b\u62a4\u6bcf\u4e2a\u8282\u70b9\u7684**\u503c\u548c\u4eba\u6570**\uff0c\u518d\u5bf9\u6bcf\u4e00\u4e2a\u5757\u5f00\u4e00\u4e2a\u6876\uff0c\u7ef4\u62a4\u6bcf\u4e2a**\u503c**\u7684**\u4eba\u6570**\u4e4b\u548c\u3002\n\n\u5bf9\u4e8e\u96f6\u6563\u5757\u66b4\u529b\u7ef4\u62a4\uff0c\u5bf9\u4e8e\u6574\u5757\uff0c\u518d\u5f00\u4e00\u4e2a\u61d2\u6807\u8bb0\u6570\u7ec4\uff0c\u7ef4\u62a4\u6574\u4e2a\u5757\u88ab\u6574\u4f53 $+1$ \u7684\u6b21\u6570\u3002\n\n\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u67e5\u8be2\u61d2\u6807\u8bb0\u4e3a $0$ \u7684\u5757\u4e2d\uff0c\u503c\u4e3a $0$ \u7684\u4eba\u6570\u548c\u5373\u53ef\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int maxn=100010;\nconst int maxqn=325;\ninline int read(){\n\tint x=0;\n\tchar c=getchar();\n\tfor(;!(c>='0'&&c<='9');c=getchar());\n\tfor(;c>='0'&&c<='9';c=getchar())\n\t\tx=(x<<1)+(x<<3)+c-'0';\n\treturn x;\n}\nstruct edge{\n\tint v,to;\n}e[maxn<<1];\nint head[maxn],ecnt;\nvoid addedge(int u,int v){\n\te[++ecnt].v=v,e[ecnt].to=head[u],head[u]=ecnt;\n}\nbool col[maxn];\nll Tap[maxqn][maxn];\n//Tap[i][j]:\u7b2ci\u4e2a\u5757\u91cc\u503c\u4e3aj\u7684\u70b9\u7684\u4eba\u6570\u548c\nint lz[maxqn],a[maxn],data[maxn];\n//a[i]:\u7b2ci\u70b9\u7684\u4eba\u6570\u548c\n//data[i]:\u7b2ci\u4e2a\u70b9\u7684\u503c\n//lz[i]:\u7b2ci\u4e2a\u5757\u88ab\u6574\u4e2a\u6267\u884c+1\u64cd\u4f5c\u7684\u6b21\u6570\nint L[maxqn],R[maxqn],Bl[maxn];\nint Size[maxn],dfn[maxn];\nint idx,n,m,qn;\nvoid Modify(int x,int y){Tap[Bl[x]][data[x]]+=y-a[x],a[x]=y;}\nvoid Add(int l,int r){\n\tint bl=Bl[l],br=Bl[r];\n\tfor(int i=l;i<=min(r,R[bl]);i++)\n\t\tTap[bl][data[i]]-=a[i],Tap[bl][++data[i]]+=a[i];\n\tif(bl^br) for(int i=max(l,L[br]);i<=r;i++)\n\t\tTap[br][data[i]]-=a[i],Tap[br][++data[i]]+=a[i];\n\tfor(int i=bl+1;i<br;i++) lz[i]++;\n}\nvoid Del(int l,int r){\n\tint bl=Bl[l],br=Bl[r];\n\tfor(int i=l;i<=min(r,R[bl]);i++)\n\t\tTap[bl][data[i]]-=a[i],Tap[bl][--data[i]]+=a[i];\n\tif(bl^br) for(int i=max(l,L[br]);i<=r;i++)\n\t\tTap[br][data[i]]-=a[i],Tap[br][--data[i]]+=a[i];\n\tfor(int i=bl+1;i<br;i++) lz[i]--;\n}\nll Query(ll sum=0){\n\tfor(int i=1;i<=Bl[n];i++) if(!lz[i]) sum+=Tap[i][0];\n\t//\u6ce8\u610f\u53ea\u6709\u5f53lz[i]\u4e3a0\u65f6\u5f53\u524d\u5757\u624d\u6709\u7b54\u6848\n\treturn sum;\n}\nint dfs(int fa,int x){\n\tdfn[x]=++id,Size[x]=1;\n\tfor(int i=head[x];i;i=e[i].to)\n\t\tif(e[i].v^fa) Size[x]+=dfs(x,e[i].v);\n\treturn Size[x];\n}\nint main(){\n\tn=read(),m=read(),qn=sqrt(n);\n\tint opt,x,y;\n\tfor(int i=1;i<n;i++){\n\t\tx=read(),y=read();\n\t\taddedge(x,y),addedge(y,x);\n\t}\n\tdfs(0,1);\n\tfor(int i=1;i<=n;i++){\n\t\ta[dfn[i]]=read();\n\t\tBl[i]=(i-1)/qn+1;\n\t} \n\tfor(int i=1;i<=Bl[n];i++){\n\t\tL[i]=(i-1)*qn+1,R[i]=min(i*qn,n);\n\t\tfor(int j=L[i];j<=R[i];j++)\n\t\t\tTap[i][0]+=a[j],col[j]=1;\n\t}\n\twhile(m--){\n\t\topt=read();\n\t\tif(opt==1){\n\t\t\tx=read(),y=read();\n\t\t\tModify(dfn[x],y);\n\t\t}\n\t\telse {\n\t\t\tx=read();\n\t\t\tif(col[dfn[x]]) Add(dfn[x],dfn[x]+Size[x]-1);\n\t\t\telse Del(dfn[x],dfn[x]+Size[x]-1);\n\t\t\tcol[dfn[x]]^=1;\n\t\t}\n\t\tprintf(\"%lld\\n\",Query());\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1648474589,
        "uid": 288716,
        "name": "lzqy_",
        "ccfLevel": 7,
        "title": "[AGM 2022 \u8d44\u683c\u8d5b] \u907f\u96be\u6240 \u9898\u89e3"
    },
    {
        "content": "$$\\texttt{Preface}$$\n\n\u4e4b\u524d\u5c31\u60f3\u505a\u8fd9\u9053\u9898\uff0c\u7ed3\u679c\u6253\u5b8c $\\text{Link Cut Tree}$ \u7a81\u7136\u53d1\u73b0\u4e0d\u4f1a\u7ef4\u62a4\u5b50\u6811\u4fe1\u606f\uff08\u60b2 ![](https://\u5567.tk/ll)\n\n\u73b0\u5728\u5b66\u4f1a\u4e86\u600e\u4e48\u7ef4\u62a4\u865a\u5b50\u6811\u4fe1\u606f\uff0c\u6eda\u56de\u6765\u8865\u4e00\u4e0b\u9898\u3002\n\n$$\\texttt{Description}$$\n\n[P8238 [AGM 2022 \u8d44\u683c\u8d5b] \u907f\u96be\u6240](https://www.luogu.com.cn/problem/P8238)\n\n$$\\texttt{Solution}$$\n\n$\\text{Link Cut Tree}$ \u4e0d\u4f1a\u7684\u4e0d\u5982\u5de6\u8f6c [P3690 \u3010\u6a21\u677f\u3011\u52a8\u6001\u6811\uff08Link Cut Tree\uff09](https://www.luogu.com.cn/problem/P3690)\u3002\n\n\u8fd9\u91cc\u6539\u53d8\u8fb9\u7684\u72b6\u6001\u5c5e\u4e8e\u662f $\\text{Link Cut Tree}$ \u7684\u57fa\u672c\u64cd\u4f5c\uff0c\u8fd9\u91cc\u4e3b\u8981\u8bb2\u4e00\u4e0b $\\text{Link Cut Tree}$ \u5982\u4f55\u7ef4\u62a4\u5b50\u6811\u4fe1\u606f\u3002\n\n\u6b63\u5e38\u7684\u7ef4\u62a4\u80af\u5b9a\u662f\u4e0d\u884c\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u5f97\u591a\u7ef4\u62a4\u4e00\u4e2a $siz2_x$ \u8868\u793a\u6240\u6709\u8fde\u5411 $x$ \u7684\u865a\u513f\u5b50\u7684\u5b50\u6811\u5927\u5c0f\u4e4b\u548c\uff0c\u8fd9\u6837 `update` \u64cd\u4f5c\u5c31\u53d8\u6210\u4e86\uff1a\n\n```cpp\nvoid update(node *x) {\n\tx -> siz = x -> siz2 + x -> cnt;\n\tif (x -> ch[0] != nullptr) x -> siz += x -> ch[0] -> siz;\n\tif (x -> ch[1] != nullptr) x -> siz += x -> ch[1] -> siz;\n}\n```\n\n\u7136\u540e\u6211\u4eec\u5f97\u5728\u8fb9\u7684\u865a\u5b9e\u53d1\u751f\u53d8\u6362\u7684\u65f6\u5019\u53ca\u65f6\u5730\u66f4\u65b0 $siz2_x$ \u7684\u503c\u3002\n\n\u5f53\u6211\u4eec\u8fdb\u884c `rotate` \u548c `splay` \u64cd\u4f5c\u65f6\uff0c\u53ea\u662f\u6539\u53d8\u4e86\u8fb9\u7684\u76f8\u5bf9\u987a\u5e8f\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u6539\u53d8 $siz2_x$ \u7684\u503c\u3002\n\n\u5728\u8fdb\u884c `access` \u64cd\u4f5c\u65f6\uff0c\u6bcf\u6b21\u6539\u53d8 $x$ \u7684\u53f3\u5b9e\u513f\u5b50\u7684\u65f6\u5019\uff0c\u5c31\u8981\u66f4\u65b0 $siz2_x$ \u7684\u503c\uff1a\n\n```cpp\nvoid access(node *x) {\n\tnode *lst = nullptr;\n\t\n\twhile (x != nullptr) {\n\t\tsplay(x);\n\t\t\n\t\tif (x -> ch[1] != nullptr) x -> siz2 += x -> ch[1] -> siz;\n\t\tif (lst != nullptr) x -> siz2 -= lst -> siz;\n\t\t\n\t\tx -> ch[1] = lst;\n\t\tupdate(x);\n\t\tlst = x;\n\t\t\n\t\tx = x -> fa;\n\t}\n}\n```\n\n\u5728\u8fdb\u884c `mkroot` \u548c `findrt` \u64cd\u4f5c\u65f6\uff0c\u53ea\u662f\u8c03\u7528\u4e86 `access`\uff0c`splay` \u7b49\u64cd\u4f5c\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u66f4\u65b0 $siz2_x$ \u7684\u503c\u3002\n\n\u5728 `link` \u64cd\u4f5c\u65f6\uff0c\u4ece $x$ \u8282\u70b9\u5411 $y$ \u8282\u70b9\u8fde\u4e86\u4e00\u6761\u865a\u8fb9\uff0c\u6240\u4ee5\u9700\u8981\u66f4\u65b0\uff0c\u4f46\u662f\u6ce8\u610f\u666e\u901a\u7684 `link` \u64cd\u4f5c\u53ea\u9700\u8981 `mkroot(x)` \u5373\u53ef\uff0c\u4f46\u662f\u8fd9\u91cc\u5e94\u8be5 `mkroot(x), mkroot(y)`\u3002\n\n```cpp\nvoid link(node *x, node *y) {\n\tmkroot(x);\n\t\n\tif (findrt(y) == x) return ;\n\t\n\tmkroot(y);\n\tx -> fa = y;\n\ty -> siz2 += x -> siz;\n\t\n\tupdate(y); \n}\n```\n\n\u5728 `cut` \u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u53ea\u662f\u51cf\u5c11\u4e86 $x$ \u7684\u4e00\u4e2a\u5b9e\u513f\u5b50\uff0c`update` \u64cd\u4f5c\u4f1a\u66f4\u65b0 $siz_x$\u3002\n\n$$\\texttt{Code}$$\n\n[\u4ee3\u7801\u94fe\u63a5](https://www.luogu.com.cn/paste/wwmr48zh)\n\n$$\\texttt{Thanks for watching!}$$",
        "postTime": 1670681311,
        "uid": 355448,
        "name": "Fido_Puppy",
        "ccfLevel": 0,
        "title": "P8238 [AGM 2022 \u8d44\u683c\u8d5b] \u907f\u96be\u6240"
    },
    {
        "content": "\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u7ebf\u6bb5\u6811\u5408\u5e76\u4ec0\u4e48\u7684\u90fd\u51fa\u6765\u4e86\u3002\n\n\u6765\u4e00\u70b9\u9633\u95f4\u7684\u5728\u7ebf\u505a\u6cd5\u3002\n\n\u8fd9\u9898\u8981\u652f\u6301 \u53d6\u6d88/\u8fd8\u539f \u5b50\u6811\u8d21\u732e\uff0c\u5355\u70b9\u4fee\u6539\u3002\n\n$2$ \u64cd\u4f5c\u597d\u505a\uff0c\u8003\u8651 $1$ \u64cd\u4f5c\uff0c\u663e\u7136\u5148\u628a\u5b50\u6811\u8f6c\u5316\u4e3a dfn \u5e8f\u533a\u95f4\u7684\u5f62\u5f0f\uff0c\u7136\u540e\u5c31\u662f\u4e00\u4e2a\u626b\u63cf\u7ebf\u677f\u5b50\u9898\u4e86\u3002\n\n\u5177\u4f53\u7684\u4e0d\u8bf4\uff0c\u4e0d\u4f1a\u53ef\u4ee5\u53bb\u6a21\u677f\u533a\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n+q\\log n)$",
        "postTime": 1648387162,
        "uid": 80614,
        "name": "ZCPB",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P8238"
    },
    {
        "content": "- \u4ecb\u7ecd\u4e2a\u4e24\u4e2a $\\log$ \u7684\u5728\u7ebf\u6811\u5256\u89e3\u6cd5\u3002\n- \u5bf9\u4e8e\u70b9 $i$\uff0c\u6570\u636e\u7ed3\u6784\u7ef4\u62a4 $F(i)$ \u8868\u793a $i$ \u7684\u5b50\u6811\u91cc\u6709\u591a\u5c11\u4e2a\u4eba\u80fd\u5230\u8fbe $i$\u3002\n- \u5bf9\u4e8e $1$ \u64cd\u4f5c\uff0c\u8bb0 $x$ \u5411\u4e0a\u8df3\u6700\u80fd\u8df3\u5230\u7684\u6df1\u5ea6\u6700\u5c0f\u7684\u7956\u5148\u7f16\u53f7\u4e3a $p$\u3002$p$ \u53ef\u4ee5\u6811\u5256\u5957\u7ebf\u6bb5\u6811\u4e8c\u5206\u67e5\u8be2\u3002\u5219\u76f8\u5f53\u4e8e $x$ \u5230 $p$ \u94fe\u4e0a\u6240\u6709\u70b9\u7684 $F$ \u503c\u4fee\u6539 $\\Delta$\u3002\n- \u5bf9\u4e8e $2$ \u64cd\u4f5c\uff0c\u82e5\u662f\u6253\u5f00\u901a\u9053\uff0c\u5219\u76f8\u5f53\u4e8e $1$ \u5230 $fa_x$ \u94fe\u4e0a\u6240\u6709\u70b9\u7684 $F$ \u503c\u52a0 $F_x$\u3002\u5426\u5219\u82e5\u5173\u95ed\u901a\u9053\uff0c\u5219\u51cf $F_x$\u3002\n- \u65f6\u95f4\u590d\u6742\u5ea6\u590d\u6742\u5ea6 $O(n\\log^2 n)$\uff0c\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\n\n\n```cpp\nstruct Seg {\n  struct T {\n    ll sum, add, fl;\n  } d[N];\n  inline void Add(ll x, int u, int l, int r) { d[u].sum += 1ll * (r - l + 1) * x, d[u].add += x; }\n  inline void Up(int u) {\n    d[u].sum = d[u << 1].sum + d[u << 1 | 1].sum, d[u].fl = d[u << 1].fl + d[u << 1 | 1].fl;\n  }\n  inline void Down(int u, int l, int r) {\n    if (d[u].add) {\n      int mid = (l + r) / 2;\n      Add(d[u].add, u << 1, l, mid);\n      Add(d[u].add, u << 1 | 1, mid + 1, r);\n      d[u].add = 0;\n    }\n  }\n\n  void Add(int L, int R, ll x, int u, int l, int r) {\n    if (L <= l && r <= R) return Add(x, u, l, r);\n    int mid = (l + r) / 2;\n    Down(u, l, r);\n    if (L <= mid) Add(L, R, x, u << 1, l, mid);\n    if (mid + 1 <= R) Add(L, R, x, u << 1 | 1, mid + 1, r);\n    Up(u);\n  }\n\n  void Cha(int p, int u, int l, int r) {\n    if (l == r) return d[u].fl ^= 1, void();\n    int mid = (l + r) / 2;\n    Down(u, l, r);\n    if (p <= mid)\n      Cha(p, u << 1, l, mid);\n    else\n      Cha(p, u << 1 | 1, mid + 1, r);\n    Up(u);\n  }\n\n  ll Ask(int p, int u, int l, int r) {\n    if (l == r) return d[u].sum;\n    int mid = (l + r) / 2;\n    Down(u, l, r);\n    if (p <= mid) return Ask(p, u << 1, l, mid);\n    return Ask(p, u << 1 | 1, mid + 1, r);\n  }\n\n  int ErFen(int L, int R, int u, int l, int r) {\n    int mid = (l + r) / 2;\n    if (d[u].fl == r - l + 1) return -1;\n    if (l == r) return l;\n    Down(u, l, r);\n    if (L <= l && r <= R) {\n      int rsum = d[u << 1 | 1].fl;\n      if (rsum != r - mid) return ErFen(L, R, u << 1 | 1, mid + 1, r);\n      return ErFen(L, R, u << 1, l, mid);\n    }\n    if (R <= mid) return ErFen(L, R, u << 1, l, mid);\n    if (mid + 1 <= L) return ErFen(L, R, u << 1 | 1, mid + 1, r);\n    int res = ErFen(L, R, u << 1 | 1, mid + 1, r);\n    if (res != -1) return res;\n    return ErFen(L, R, u << 1, l, mid);\n  }\n} seg;\n\nvoid Add(int f, int t, ll x) {\n  while (tp[f] != tp[t]) {\n    if (dep[tp[f]] > dep[tp[t]]) swap(f, t);\n    seg.Add(dfn[tp[t]], dfn[t], x, 1, 1, n);\n    t = fa[tp[t]];\n  }\n  if (dfn[f] > dfn[t]) swap(f, t);\n  seg.Add(dfn[f], dfn[t], x, 1, 1, n);\n}\n\nint Jump(int f) {\n  while (1) {\n    int x = seg.ErFen(dfn[tp[f]], dfn[f], 1, 1, n);\n    if (x != -1) return rnk[x];\n    f = fa[tp[f]];\n  }\n}\n\nsigned main() {\n  ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n  cin >> n >> m;\n  re (i, n - 1) {\n    int f, t;\n    cin >> f >> t;\n    g.Add(f, t), g.Add(t, f);\n  }\n  Dfs1(1), tp[1] = 1, Dfs2(1);\n  re (i, n)\n    cin >> a[i], Add(1, i, a[i]), rnk[dfn[i]] = i;\n  rep (i, 2, n)\n    seg.Cha(i, 1, 1, n), b[i] = 1;\n  while (m--) {\n    int op;\n    cin >> op;\n    if (op == 1) {\n      int f, x;\n      cin >> f >> x;\n      int t = Jump(f);\n      Add(t, f, -a[f]), a[f] = x, Add(t, f, a[f]);\n    } else {\n      int f;\n      cin >> f;\n      if (b[f]) {\n        int t = Jump(f);\n        ll res = seg.Ask(dfn[f], 1, 1, n);\n        Add(t, fa[f], -res), b[f] ^= 1, seg.Cha(dfn[f], 1, 1, n);\n      } else {\n        ll res = seg.Ask(dfn[f], 1, 1, n);\n        b[f] ^= 1, seg.Cha(dfn[f], 1, 1, n);\n        int t = Jump(f);\n        Add(t, fa[f], res);\n      }\n    }\n    cout << seg.Ask(1, 1, 1, n) << '\\n';\n  }\n  return 0;\n}\n```",
        "postTime": 1649492737,
        "uid": 207996,
        "name": "yzy1",
        "ccfLevel": 9,
        "title": "P8238 \u9898\u89e3"
    },
    {
        "content": "\u7ed9\u6bcf\u4e2a\u70b9\u4e00\u4e2a\u70b9\u6743 $w_i$ \u8868\u793a $i$ \u7684\u5b50\u6811\u4e2d\u6709\u591a\u5c11\u96be\u6c11\u53ef\u4ee5\u8d70\u5230\u70b9 $i$\uff0c\u7ef4\u62a4\u70b9\u6743\uff0c$w_1$ \u5c31\u662f\u7b54\u6848\u3002\n\n\u8003\u8651\u4e00\u6b21\u64cd\u4f5c\u4f1a\u5bf9 $w$ \u6570\u7ec4\u4ea7\u751f\u600e\u6837\u7684\u5f71\u54cd\uff1a\n\n\u5bf9\u4e8e\u4fee\u6539\u70b9\u6743\uff0c\u8fd9\u91cc\u7684\u96be\u6c11\u53ef\u4ee5\u4e00\u76f4\u5411\u4e0a\u8d70\u76f4\u5230\u6839\u6216\u8005\u6709\u8fb9\u4e0d\u901a\uff0c\u4f1a\u5bf9\u53ef\u4ee5\u5230\u8fbe\u7684\u70b9\u7684\u70b9\u6743\u4ea7\u751f $y-a_x$ \u7684\u8d21\u732e\uff1b\n\n\u5bf9\u4e8e\u6539\u53d8\u8fb9\u7684\u72b6\u6001\uff0c$x$ \u7684\u5b50\u6811\u4e2d\u6709 $w_x$ \u4e2a\u96be\u6c11\uff0c\u539f\u5148\u53ef\u4ee5\uff08\u4e0d\u80fd\uff09\u7ee7\u7eed\u5411\u4e0a\u79fb\u52a8\uff0c\u73b0\u5728\u4e0d\u80fd\uff08\u53ef\u4ee5\uff09\u79fb\u52a8\uff0c\u4f1a\u5f71\u54cd\u5230 $x$ \u7684\u7236\u4eb2\u4e00\u76f4\u5411\u4e0a\u8d70\u5230\u6839\u6216\u8005\u6709\u8fb9\u4e0d\u901a\u7684\u70b9\u3002\u5177\u4f53\u6765\u8bf4\u5bf9\u6bcf\u4e2a\u70b9\u7ef4\u62a4\u4e00\u4e2a\u6807\u8bb0 $tag_x\\in\\{-1,1\\}$ \u8868\u793a\u8fd9\u4e2a\u70b9\u5230\u7236\u4eb2\u7684\u8fde\u8fb9\u4e0d\u8fde\u901a/\u8054\u901a\uff0c\u90a3\u4e48\u4f1a\u5bf9\u53ef\u4ee5\u5230\u8fbe\u7684\u70b9\u4ea7\u751f $tag_x\\times w_x$ \u7684\u8d21\u732e\u3002\n\n\u5f52\u6839\u7ed3\u5e95\u6211\u4eec\u8981\u505a\u7684\u64cd\u4f5c\u5c31\u662f\u4e00\u6bb5\u94fe\u4fee\u6539\uff0c\u6240\u4ee5\u6811\u5256\uff0c$w$ \u6570\u7ec4\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\uff0c\u5bf9\u4e8e\u6bcf\u6761\u91cd\u94fe\uff0c\u5f00\u4e00\u4e2a set \u7ef4\u62a4\u91cd\u94fe\u4e0a\u7684\u54ea\u4e9b\u8fb9\u4e0d\u901a\uff0c\u4fee\u6539\u7684\u65f6\u5019\u76f4\u63a5\u8df3\u91cd\u94fe\uff0c\u6bcf\u6b21\u5728\u91cd\u94fe\u7684 set \u4e0a\u4e8c\u5206\u4e00\u4e0b\u5224\u65ad\u80fd\u4e0d\u80fd\u7ee7\u7eed\u8d70\uff0c\u7279\u5224\u8d70\u8fc7\u7684\u8f7b\u8fb9\u662f\u5426\u80fd\u8d70\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log^2 n)$\uff0c\u76ee\u524d\u662f\u4f60\u8c37\u6700\u4f18\u89e3\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<set>\nusing namespace std;\nstruct edge\n{\n    int nxt,to;\n}e[100001<<1];\nint n,m,tot,h[100001],dep[100001],fa[100001],s[100001],son[100001],top[100001],cnt,dfn[100001],tag[100001];\nlong long sum[100001],a[100001],b[100001],w[100001];\nset<int> st[100001];\ninline int read()\n{\n    int x=0;\n    char c=getchar();\n    while(c<'0'||c>'9')\n        c=getchar();\n    while(c>='0'&&c<='9')\n    {\n        x=(x<<1)+(x<<3)+(c^48);\n        c=getchar();\n    }\n    return x;\n}\ninline void add(int x,int y)\n{\n    e[++tot].nxt=h[x];\n    h[x]=tot;\n    e[tot].to=y;\n}\ninline int lowbit(int x)\n{\n    return x&-x;\n}\ninline void update(int x,long long val)\n{\n    for(;x<=n;x+=lowbit(x))\n        sum[x]+=val;\n}\ninline long long query(int x)\n{\n    long long res=0;\n    for(;x;x-=lowbit(x))\n        res+=sum[x];\n    return res;\n}\ninline void dfs1(int k,int f,int deep)\n{\n    dep[k]=deep;\n    fa[k]=f;\n    s[k]=1;\n    b[k]=a[k];\n    for(int i=h[k];i;i=e[i].nxt)\n    {\n        if(e[i].to==f)\n            continue;\n        dfs1(e[i].to,k,deep+1);\n        s[k]+=s[e[i].to];\n        b[k]+=b[e[i].to];\n        if(s[e[i].to]>s[son[k]])\n            son[k]=e[i].to;\n    }\n}\ninline void dfs2(int k,int t)\n{\n    top[k]=t;\n    dfn[k]=++cnt;\n    w[cnt]=b[k];\n    if(!son[k])\n        return;\n    dfs2(son[k],t);\n    for(int i=h[k];i;i=e[i].nxt)\n    {\n        if(e[i].to==fa[k]||e[i].to==son[k])\n            continue;\n        dfs2(e[i].to,e[i].to);\n    }\n}\ninline void up(int x,long long val)\n{\n    while(x)\n    {\n        if(st[top[x]].empty())\n        {\n            update(dfn[top[x]],val);\n            update(dfn[x]+1,-val);\n            if(tag[top[x]]==-1)\n                return;\n            x=fa[top[x]];\n        }\n        else\n        {\n            set<int>::iterator it=st[top[x]].upper_bound(dfn[x]);\n            if(it==st[top[x]].begin())\n            {\n                update(dfn[top[x]],val);\n                update(dfn[x]+1,-val);\n                if(tag[top[x]]==-1)\n                    return;\n                x=fa[top[x]];\n            }\n            else\n            {\n                --it;\n                update(*it,val);\n                update(dfn[x]+1,-val);\n                return;\n            }\n        }\n    }\n}\nint main()\n{\n    n=read(),m=read();\n    for(int i=1;i<n;++i)\n    {\n        int x=read(),y=read();\n        add(x,y);\n        add(y,x);\n    }\n    for(int i=1;i<=n;++i)\n    {\n        a[i]=read();\n        tag[i]=1;\n    }\n    dfs1(1,0,1);\n    dfs2(1,1);\n    for(int i=1;i<=n;++i)\n        update(i,w[i]-w[i-1]);\n    while(m--)\n    {\n        int opt=read(),x=read();\n        if(opt==1)\n        {\n            up(x,-a[x]);\n            a[x]=read();\n            up(x,a[x]);\n        }\n        if(opt==2)\n        {\n            if(tag[x]==1)\n            {\n                tag[x]=-1;\n                if(top[x]^x)\n                    st[top[x]].insert(dfn[x]);\n            }\n            else\n            {\n                tag[x]=1;\n                if(top[x]^x)\n                    st[top[x]].erase(dfn[x]);\n            }\n            up(fa[x],tag[x]*query(dfn[x]));\n        }\n        cout<<query(1)<<'\\n';\n    }\n    return 0;\n}\n```",
        "postTime": 1648724319,
        "uid": 85682,
        "name": "\u7edd\u9876\u6211\u4e3a\u5cf0",
        "ccfLevel": 8,
        "title": "P8238 [AGM 2022 \u8d44\u683c\u8d5b] \u907f\u96be\u6240"
    },
    {
        "content": "\u7ed9\u4e2a\u50bb\u903c\u5728\u7ebf\u6811\u5256\u505a\u6cd5\n\n\u8003\u8651\u6240\u6709\u4eba\u5f80\u5f53\u524d\u6240\u5728\u7ed3\u70b9\u7684\u7956\u5148\u4e0a\u8dd1\uff0c\u90a3\u4e48\u65e0\u8bba\u662f\u5bf9\u4e8e\u64cd\u4f5c1\u8fd8\u662f\u64cd\u4f5c2\uff0c\u53ea\u6709\u7ecf\u8fc7\u7ed3\u70b9 $x$ \u53ca\u5176\u7956\u5148\u7684\u4eba\u6570\u6709\u53ef\u80fd\u53d7\u5230\u5f71\u54cd\u3002\n\n\u8bb0\u53ef\u4ee5\u7ecf\u8fc7\u7ed3\u70b9 $u$ \u7684\u4eba\u6570\u4e3a $a[u]$\uff0c$fa[u]$ \u4e3a\u7ed3\u70b9 $u$ \u7684\u7236\u4eb2\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c2\uff0c\u5206\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\u3002\n\n\u5982\u679c\u662f\u7531\u901a\u7545\u53d8\u4e3a\u62e5\u5835\uff0c\u8bbe\u521d\u59cb\u5728\u7ed3\u70b9 $fa[x]$ \u7684\u4eba\u6700\u8fdc\u80fd\u5230\u8fbe\u7ed3\u70b9 $y$\uff0c\u90a3\u4e48 $fa[x] \\to y$ \u4e0a\u7684\u6240\u6709\u7ed3\u70b9 $u$\uff0c$a[u] \\gets (-a[x])$\u3002\n\n\u5982\u679c\u662f\u7531\u62e5\u5835\u53d8\u4e3a\u901a\u7545\uff0c$a[u] \\gets a[x]$ \u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c1\uff0c\u53ea\u9700 $a[u] \\gets val$ \u5373\u53ef\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u6c42\u51fa\u4e86\u521d\u59cb\u5728\u7ed3\u70b9 $fa[x]$ \u7684\u4eba\u6700\u8fdc\u80fd\u5230\u8fbe\u7ed3\u70b9 $y$\u3002\u90a3\u4e48\u8fd9\u4e9b\u64cd\u4f5c\u90fd\u53ef\u4ee5\u7528\u6811\u5256\u8f7b\u677e\u5b9e\u73b0\u3002\n\n\u663e\u7136\u6c42 $y$ \u4e5f\u53ef\u4ee5\u5728\u6811\u5256\u4e0a\u8fdb\u884c\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u7ebf\u6bb5\u6811\u7ed3\u70b9\uff0c\u8bb0\u5f55\u8fd9\u4e2a\u7ed3\u70b9\u6240\u8868\u793a\u7684\u533a\u95f4 $[ l,r ]$ \u91cc\uff0c\u662f\u5426\u5b58\u5728dfs\u5e8f\u4e3a $i$\uff0c$i \u2208[l,r]$ \u7684\u7ed3\u70b9 $u$\uff0c$u \\to fa[u]$ \u7684\u8fd9\u6761\u8fb9\u662f\u62e5\u5835\u7684\u3002\u5f80\u4e0a\u8df3\u7684\u65f6\u5019\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u5373\u53ef\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log^2n)$\uff0c\u6bd4\u79bb\u7ebf\u505a\u6cd5\u96be\u5199\u7684\u591a\u3002\u3002",
        "postTime": 1648482485,
        "uid": 115668,
        "name": "y0y68",
        "ccfLevel": 0,
        "title": "P8238 \u9898\u89e3"
    },
    {
        "content": "\u7ebf\u6bb5\u6811\u5408\u5e76\u7684\u79bb\u7ebf\u505a\u6cd5 \u597d\u50cf\u88ab\u524d\u9762\u7684\u5728\u7ebf\u6811\u5256\u505a\u6cd5\u6740\u7a7f\u4e86\n\n\u8003\u8651\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u5f00\u4e00\u68f5\u957f\u5ea6\u4e3a $q$ \u7684\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\uff0c\u5b58\u50a8\u8be5\u70b9\u4e0d\u8003\u8651\u64cd\u4f5c\u4e00\u7684\u60c5\u51b5\u4e0b\uff0c\u5728\u7b2c\u4e00\u4e2a\u5230\u6700\u540e\u4e00\u4e2a\u8be2\u95ee\u7ed3\u675f\u540e\u5206\u522b\u6709\u591a\u5c11\u96be\u6c11\uff0c\u53ef\u4ee5\u53d1\u73b0\u76f8\u5f53\u4e8e\u652f\u6301\u533a\u95f4\u8d4b\u503c\u3002\n\n\u7136\u540e\u8003\u8651\u5982\u4f55\u7edf\u8ba1\u7b54\u6848\uff0c\u5e94\u5f53\u662f\u518d\u5904\u7406\u5b8c\u4e4b\u540e\u641c\u4e00\u904d\u5168\u6811\uff0c\u7136\u540e\u7528\u7236\u4eb2\u7684\u7ebf\u6bb5\u6811\u5408\u5e76\u6bcf\u4e00\u4e2a\u513f\u5b50\u7684\u7ebf\u6bb5\u6811\uff0c\u6700\u540e\u5408\u5e76\u5230\u6839\uff0c\u628a\u6839\u7684\u7ebf\u6bb5\u6811\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u503c\u8f93\u51fa\u5373\u53ef\u3002\n\n\u73b0\u5728\u5f00\u59cb\u8003\u8651\u64cd\u4f5c\u4e00\uff0c\u53d1\u73b0\u64cd\u4f5c\u4e00\u76f8\u5f53\u4e8e\u4f7f\u8be2\u95ee\u4e0a\u4e00\u6bb5\u533a\u95f4\u7684 $x$ \u53f7\u8282\u70b9\u65e0\u6cd5\u5411\u7236\u4eb2\u4f20\u9012\u8d21\u732e\uff0c\u8003\u8651\u5728\u5408\u5e76\u5b8c $x$ \u8282\u70b9\u53ca\u5176\u6240\u6709\u5b50\u6811\u540e\uff0c\u5c06 $x$ \u4e0a\u7684\u7ebf\u6bb5\u6811\u7684\u5bf9\u5e94\u533a\u95f4\u5168\u90e8\u8d4b $0$\uff0c\u518d\u7ee7\u7eed\u5176\u5b83\u7684\u5408\u5e76\u3002\n\n\u5206\u6790\u4e00\u4e0b\uff0c\u7ebf\u6bb5\u6811\u9700\u8981\u652f\u6301\u5408\u5e76\u4ee5\u53ca\u533a\u95f4\u8d4b\u503c\u3002\u533a\u95f4\u8d4b\u503c\u7684\u7ebf\u6bb5\u6811\u5408\u5e76\u6211\u7684\u5199\u6cd5\u662f\u5982\u679c\u5e94\u5f53\u5408\u5e76\u7684\u4e24\u4e2a\u8282\u70b9\u6709\u4e00\u4e2a\u7684\u5de6\u53f3\u513f\u5b50\u5747\u4e0d\u5b58\u5728\uff0c\u90a3\u4e48\u76f4\u63a5\u628a\u8fd9\u4e2a\u8282\u70b9\u5408\u5e76\u5230\u53e6\u4e00\u4e2a\u8282\u70b9\u4e0a\u53bb\uff0c\u76f8\u5f53\u4e8e\u7ed9\u53e6\u4e00\u4e2a\u8282\u70b9\u6253\u4e0a\u4e00\u4e2a\u52a0\u6cd5\u6807\u8bb0\uff0c\u503c\u5373\u4e3a\u8be5\u6ca1\u6709\u513f\u5b50\u7684\u8282\u70b9\u4ee3\u8868\u7684\u533a\u95f4\u7684\u503c\uff08\u53ef\u77e5\u8fd9\u4e9b\u503c\u90fd\u662f\u76f8\u540c\u7684\uff09\u3002\n\n\u90a3\u4e48\u9700\u8981\u652f\u6301\u52a0\u6cd5\u548c\u8d4b\u503c\u6807\u8bb0\uff0c\u6ce8\u610f\u4e00\u4e0b\u5148\u540e\u987a\u5e8f\u5373\u53ef\u3002\n\n\u7531\u4e8e\u8fd9\u9898\u5b9e\u9645\u4e0a\u9700\u8981\u5199\u7684\u4e1c\u897f\u4e0d\u591a\uff0c\u8fd8\u662f\u6bd4\u8f83\u597d\u5199\u7684\uff0c\u6211\u8c03\u5b8c\u7f16\u8bd1\u9519\u540e\u76f4\u63a5\u4e00\u904d\u8fc7\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define y1 fjodifjsdidi\ntypedef long long ll;\nusing namespace std;\nconst int maxn=100005;\nint n,q,a[maxn];\nint ecnt,nxt[maxn<<1],to[maxn<<1],hed[maxn];\nvoid adde(int u,int v)\n{\n\tnxt[++ecnt]=hed[u];\n\thed[u]=ecnt;\n\tto[ecnt]=v;\n}\nstruct node\n{\n\tint ls,rs;\n\tll stag,val,addtag;\n}tre[maxn*100];\nint rt[maxn],cnt;\nvector<int> vc[maxn];\nint sz[maxn];\nint newnode()\n{\n\ttre[++cnt].stag=-1;tre[cnt].ls=0;tre[cnt].rs=0;tre[cnt].val=0;tre[cnt].addtag=0;\n\treturn cnt;\n}\nvoid pushdown(int x)\n{\n\tif(tre[x].ls==0) tre[x].ls=newnode();\n\tif(tre[x].rs==0) tre[x].rs=newnode();\n\tif(tre[x].stag!=-1)\n\t{\n\t\ttre[tre[x].ls].val=tre[x].stag;\n\t\ttre[tre[x].ls].stag=tre[x].stag;\n\t\ttre[tre[x].rs].val=tre[x].stag;\n\t\ttre[tre[x].rs].stag=tre[x].stag;\n\t\ttre[tre[x].rs].addtag=0;\n\t\ttre[tre[x].ls].addtag=0;\n\t\ttre[x].stag=-1;\n\t}\n\tif(tre[x].addtag!=0)\n\t{\n\t\ttre[tre[x].ls].val+=tre[x].addtag;\n\t\ttre[tre[x].rs].val+=tre[x].addtag;\n\t\tif(tre[tre[x].ls].stag!=-1) tre[tre[x].ls].stag+=tre[x].addtag;\n\t\telse tre[tre[x].ls].addtag+=tre[x].addtag;\n\t\tif(tre[tre[x].rs].stag!=-1) tre[tre[x].rs].stag+=tre[x].addtag;\n\t\telse tre[tre[x].rs].addtag+=tre[x].addtag;\n\t\ttre[x].addtag=0;\n\t}\n}\nint merge(int x,int y,int l,int r)\n{\n\tif(tre[x].ls==0&&tre[x].rs==0)\n\t{\n\t\tif(tre[x].stag==-1) tre[y].addtag+=tre[x].addtag,tre[y].val+=tre[x].addtag;\n\t\telse if(tre[y].stag==-1) tre[y].addtag+=tre[x].stag,tre[y].val+=tre[x].stag;\n\t\telse tre[y].stag+=tre[x].stag,tre[y].val+=tre[x].stag;\n\t\treturn y;\n\t}\n\tif(tre[y].ls==0&&tre[y].rs==0)\n\t{\n\t\tif(tre[y].stag==-1) tre[x].addtag+=tre[y].addtag,tre[x].val+=tre[y].addtag;\n\t\telse if(tre[x].stag==-1) tre[x].addtag+=tre[y].stag,tre[x].val+=tre[y].stag;\n\t\telse tre[x].stag+=tre[y].stag,tre[x].val+=tre[y].stag;\n\t\treturn x;\n\t}\n\tpushdown(x);pushdown(y);\n\tint mid=(l+r)>>1;\n\ttre[x].ls=merge(tre[x].ls,tre[y].ls,l,mid);tre[x].rs=merge(tre[x].rs,tre[y].rs,mid+1,r);\n\treturn x;\n}\nvoid upd(int x,int l,int r,int L,int R,int k)\n{\n\tif(l>=L&&r<=R)\n\t{\n\t\ttre[x].addtag=0;tre[x].stag=k;tre[x].val=k;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tpushdown(x);\n\tif(L<=mid) upd(tre[x].ls,l,mid,L,R,k);\n\tif(R>mid) upd(tre[x].rs,mid+1,r,L,R,k);\n}\nll ans[maxn];\nvoid get_ans(int x,int l,int r)\n{\n\tif(l==r)\n\t{\n\t\tans[l]=tre[x].val;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tpushdown(x);\n\tget_ans(tre[x].ls,l,mid);\n\tget_ans(tre[x].rs,mid+1,r);\n}\nvoid dfs(int u,int fro)\n{\n\tfor(int i=hed[u];i!=0;i=nxt[i])\n\t{\n\t\tint v=to[i];\n\t\tif(v==fro) continue;\n\t\tdfs(v,u);\n\t\trt[u]=merge(rt[u],rt[v],1,q);\n\t}\n\tfor(int i=0;i<sz[u];i+=2)\n\t{\n\t\tint l=vc[u][i],r=(i==sz[u]-1?q:vc[u][i+1]-1);\n\t\tupd(rt[u],1,q,l,r,0);\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&q);\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint u,v;scanf(\"%d%d\",&u,&v);adde(u,v),adde(v,u);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\trt[i]=newnode();\n\t\ttre[rt[i]].stag=tre[rt[i]].val=a[i];\n\t}\n\tfor(int i=1;i<=q;i++)\n\t{\n\t\tint op;scanf(\"%d\",&op);\n\t\tif(op==2)\n\t\t{\n\t\t\tint x;scanf(\"%d\",&x);\n\t\t\tvc[x].push_back(i);sz[x]++; \n\t\t}\n\t\telse\n\t\t{\n\t\t\tint x,y;scanf(\"%d%d\",&x,&y);\n\t\t\tupd(rt[x],1,q,i,q,y);\n\t\t}\n\t}\n\tdfs(1,0);\n\tget_ans(rt[1],1,q);\n\tfor(int i=1;i<=q;i++) printf(\"%lld\\n\",ans[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1647959987,
        "uid": 191868,
        "name": "monstersqwq",
        "ccfLevel": 8,
        "title": "P8238 \u9898\u89e3"
    }
]