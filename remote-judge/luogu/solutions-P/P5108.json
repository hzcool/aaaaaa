[
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P5108)\n\n\u6211\u4eec\u8003\u8651\u5012\u7740\u505a\uff0c\u4e5f\u5c31\u662f\u4f9d\u6b21\u8003\u8651\u957f\u5ea6\u4e3a$n,n-1,...,1$\u65f6\u7684\u7b54\u6848\u3002\u53d1\u73b0\u957f\u5ea6\u4e3a$n$\u65f6\u53ea\u80fd\u9009\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u4e3a$n-1$\u65f6\u8981\u9009$1,2$\u4e2d\u8f83\u4f18\u7684\u4f4d\u7f6e\u2026\u2026\n\n\u7136\u540e\u5927\u529b\u731c\u60f3\u4e00\u53d1\u5012\u7740\u7684\u7b54\u6848\u662f\u5426\u4fdd\u8bc1\u4e0d\u964d\uff0c\u7136\u800c\u6837\u4f8b\u4e00\u76f4\u63a5\u628a\u8138\u7ed9\u6253\u5f97\u556a\u556a\u75bc\n\n\u7136\u800c\u5012\u7740\u7684\u65f6\u5019\u7b54\u6848\u7684\u786e\u6709\u4e00\u4e2a\u6027\u8d28\u3002\u6bd4\u65b9\u8bf4\u957f\u5ea6\u4e3a$len$\u7684\u65f6\u5019\u6709$i<j$\u4e14$i$\u6bd4$j$\u66f4\u4f18\uff0c\u90a3\u4e48$j$\u5c31\u6c38\u8fdc\u4e0d\u53ef\u80fd\u662f\u6700\u4f18\u7b54\u6848\u4e86\u3002\u56e0\u4e3a\u957f\u5ea6\u4e0d\u65ad\u51cf\u5c0f\u7684\u65f6\u5019\u6c38\u8fdc\u6ee1\u8db3$i$\u5f00\u5934\u7684\u5b57\u5178\u5e8f\u6bd4$j$\u5c0f\u6216\u8005\u4e24\u4e2a\u5b57\u5178\u5e8f\u76f8\u7b49\u4f46$i$\u5728\u66f4\u5de6\u8fb9\n\n\u4e8e\u662f\u5c31\u53ef\u4ee5\u7528\u5355\u8c03\u6808\u4e86\u3002\u6bcf\u4e00\u6b21\u628a\u65b0\u7684\u53ef\u4ee5\u4f5c\u4e3a\u7b54\u6848\u7684\u70b9\u52a0\u8fdb\u53bb\uff0c\u7136\u540e\u5224\u65ad$st[top-1]$\u662f\u5426\u6bd4$st[top]$\u66f4\u4f18\uff0c\u4e0d\u65ad\u5f39\u51fa\uff0c\u6700\u540e\u628a\u6808\u9876\u6700\u4e3a\u5f53\u524d\u957f\u5ea6\u7684\u7b54\u6848\u5373\u53ef\n\n\u7136\u800c\u73b0\u5728\u7684\u95ee\u9898\u5c31\u662f\u600e\u4e48\u5224\u66f4\u4f18\uff0c\u6bd5\u7adf\u8981\u6bd4\u8f83\u5b57\u5178\u5e8f\u3002\u6211\u592a\u83dc\u4e86\u4e0d\u4f1a\u5199SAM\u548cSA\u4e4b\u7c7b\u7684\uff08\u4e0d\u8fc7\u8bdd\u8bf4\u8fd9\u4e24\u4e2a\u80fd\u4e0d\u80fd\u5f04\u4e5f\u4e0d\u77e5\u9053\u554a\u2026\u2026\uff09\u4e8e\u662f\u60f3\u4e86\u4e00\u4e2a\u6bd4\u8f83\u9b3c\u755c\u7684\u529e\u6cd5\uff1a\u7528$hash+$\u4e8c\u5206\u5224\u65ad\u4e24\u4e2a\u4e32\u76f8\u7b49\u7684\u957f\u5ea6\uff0c\u90a3\u4e48\u53ea\u8981\u6bd4\u8f83\u5b83\u4eec\u4e0b\u4e00\u4f4d\u7684\u5927\u5c0f\u5c31\u597d\u4e86\n```cpp\n//minamoto\n#include<bits/stdc++.h>\n#define R register\n#define fp(i,a,b) for(R int i=a,I=b+1;i<I;++i)\n#define fd(i,a,b) for(R int i=a,I=b-1;i>I;--i)\n#define go(u) for(int i=head[u],v=e[i].v;i;i=e[i].nx,v=e[i].v)\nusing namespace std;\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline char getc(){return p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++;}\nint read(){\n    R int res,f=1;R char ch;\n    while((ch=getc())>'9'||ch<'0')(ch=='-')&&(f=-1);\n    for(res=ch-'0';(ch=getc())>='0'&&ch<='9';res=res*10+ch-'0');\n    return res*f;\n}\nchar sr[1<<21],z[20];int C=-1,Z=0;\ninline void Ot(){fwrite(sr,1,C+1,stdout),C=-1;}\nvoid print(R int x){\n    if(C>1<<20)Ot();if(x<0)sr[++C]='-',x=-x;\n    while(z[++Z]=x%10+48,x/=10);\n    while(sr[++C]=z[Z],--Z);sr[++C]=' ';\n}\nconst int N=3e5+5;\nint a[N],b[N],st[N],ans[N];\nint n,top,op,m;char s[N];\nstruct Hash{\n    int Base,P,bin[N],sum[N];\n    inline void init(R int base,R int p){\n        P=p,Base=base,bin[0]=1;\n        fp(i,1,n)bin[i]=1ll*bin[i-1]*Base%P;\n        fp(i,1,n)sum[i]=(1ll*sum[i-1]*Base+a[i]+1)%P;\n    }\n    inline int gethash(R int l,R int r){return (sum[r]-1ll*sum[l-1]*bin[r-l+1]%P+P)%P;}\n}h1,h2;\ninline bool equal(int l,int r,int ql,int qr){\n    return h1.gethash(l,r)==h1.gethash(ql,qr)&&h2.gethash(l,r)==h2.gethash(ql,qr);\n}\nbool check(int ql,int qr,int len){\n    if(equal(ql,ql+len-1,qr,qr+len-1))return true;\n    int l=1,r=len,ans=0,mid;\n    while(l<=r){\n        mid=(l+r)>>1;\n        if(equal(ql,ql+mid-1,qr,qr+mid-1))l=mid+1,ans=mid;else r=mid-1;\n    }return a[ql+ans]<=a[qr+ans];\n}\nint main(){\n//\tfreopen(\"testdata.in\",\"r\",stdin);\n    scanf(\"%d%d\",&op,&n);\n    if(op==26){\n        m=35,scanf(\"%s\",s+1);fp(i,1,n)a[i]=s[i]-'a';\n    }else{\n        fp(i,1,n)a[i]=b[i]=read();sort(b+1,b+1+n),m=unique(b+1,b+1+n)-b-1;\n        fp(i,1,n)a[i]=lower_bound(b+1,b+1+n,a[i])-b;\n    }h1.init(233,1e9+7),h2.init(19260817,998244353);\n    fp(i,1,n){\n        st[++top]=i;while(top>1&&check(st[top-1],st[top],n-i+1))--top;\n        ans[n-i+1]=st[top];\n    }fp(i,1,n)print(ans[i]);return Ot(),0;\n}\n```",
        "postTime": 1545122681,
        "uid": 41781,
        "name": "bztMinamoto",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5108 \u3010\u4ef0\u671b\u534a\u6708\u7684\u591c\u7a7a\u3011"
    },
    {
        "content": "\u8003\u8651\u540e\u7f00\u6811\uff0c\u5728\u4e0d\u538b\u7f29\u7684\u65f6\u5019\u5b83\u662f\u4e00\u68f5\u5b8c\u6574\u7684Trie\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u5728Trie\u4e0a\u6309\u7167\u5b57\u5178\u5e8f\u904d\u5386\u5373\u6ee1\u8db3\u5b57\u5178\u5e8f\u7684\u8981\u6c42\uff0c\u540c\u65f6\u7ef4\u62a4\u4e00\u4e0b\u6bcf\u4e2a\u8282\u70b9\u7684\u6700\u65e9\u51fa\u73b0\u4f4d\u7f6e\u5373\u53ef\u66f4\u65b0\u7b54\u6848.\n\n\u73b0\u5728\u8003\u8651\u538b\u7f29\u7684\u540e\u7f00\u6811\uff0c\u538b\u7f29\u6389\u7684\u90fd\u662f\u53ea\u6709\u4e00\u4e2a\u513f\u5b50\u7684\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u6309\u7167\u538b\u7f29\u6389\u7684\u94fe\u4e0a\u7684\u7b2c\u4e00\u4e2a\u70b9\u7684\u5b57\u7b26\u8d70\u5373\u53ef. \u73b0\u5728\u9700\u8981\u7684\u64cd\u4f5c\u662f\u5bf9\u4e00\u6bb5\u533a\u95f4\u4e0a\u6ca1\u88ab\u8986\u76d6\u7684\u70b9\u8986\u76d6\u4e0a\u67d0\u4e2a\u989c\u8272\uff0c\u8fd9\u4e2a\u53ea\u9700\u8981\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u51fa\u6bcf\u4e2a\u70b9\u540e\u9762\u7b2c\u4e00\u4e2a\u672a\u88ab\u8986\u76d6\u7684\u70b9\u5373\u53ef.\n\n\u538b\u7f29\u540e\u7f00\u6811\u7684\u6784\u5efa\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u53cd\u4e32SAM\u7684parent tree. \u7ec6\u8282\u53ef\u4ee5\u770b\u4ee3\u7801.\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<map>\n#include<cstring>\n#define IT map<int,int>::iterator\nusing namespace std;\nconst int N=7e5;\nint n,ans[N],w[N],mi[N],cur,node_cnt,id[N],sigma,cnt[N];\nchar st[N];\nstruct Node{int fa,len;map<int,int>ch;}a[N];\nmap<int,int>ch[N];\nvoid ins(int ch,int pos)\n{\n    int u=cur;cur=++node_cnt;a[cur].len=a[u].len+1;mi[cur]=pos;\n    for(;u&&!a[u].ch[ch];u=a[u].fa)a[u].ch[ch]=cur;\n    if(!u){a[cur].fa=1;return;}\n    int v=a[u].ch[ch];if(a[v].len==a[u].len+1){a[cur].fa=v;return;}\n    int t=++node_cnt;a[t]=a[v];a[t].len=a[u].len+1;\n    a[v].fa=a[cur].fa=t;\n    for(;u&&a[u].ch[ch]==v;u=a[u].fa)a[u].ch[ch]=t;\n}\nstruct DSU\n{\n    int fa[N];\n    int find(int x){return fa[x]==x?x:fa[x]=find(fa[x]);}\n}bcj;\nvoid dfs(int u)\n{\n    if(u!=1)//\u5e76\u67e5\u96c6\u66f4\u65b0\u67d0\u4e00\u6bb5\u957f\u5ea6\u7684\u7b54\u6848\n    {\n        int x=bcj.find(a[a[u].fa].len+1);\n        while(x<=a[u].len)ans[x]=mi[u],bcj.fa[x]=bcj.find(x+1),x=bcj.fa[x];\n    }\n    for(IT i=ch[u].begin();i!=ch[u].end();i++)\n        dfs(i->second);\n}\nint getin()\n{\n    int x=0;char ch=getchar();\n    while(ch<'0'||ch>'9')ch=getchar();\n    while(ch>='0'&&ch<='9')x=x*10+ch-48,ch=getchar();\n    return x;\n}\nint main()\n{\n    scanf(\"%d%d\",&sigma,&n);\n    cur=node_cnt=1;\n    if(sigma==26)\n    {\n        scanf(\"%s\",st+1);\n        for(int i=n;i>=1;i--)ins(st[i]-97,i),w[i]=st[i]-97;\n    }\n    else\n    {\n        for(int i=1;i<=n;i++)w[i]=getin();\n        for(int i=n;i>=1;i--)ins(w[i],i);\n    }//\u53cd\u4e32SAM\n    for(int i=1;i<=node_cnt;i++)cnt[a[i].len]++;\n    for(int i=1;i<=n;i++)cnt[i]+=cnt[i-1];\n    for(int i=1;i<=node_cnt;i++)id[cnt[a[i].len]--]=i;\n    for(int i=node_cnt;i>1;i--)//\u8ba1\u7b97\u6bcf\u4e2a\u8282\u70b9\u7684\u6700\u65e9\u51fa\u73b0\u4f4d\u7f6e\n    {\n        int u=id[i];\n        if(!mi[a[u].fa])mi[a[u].fa]=mi[u];\n        else mi[a[u].fa]=min(mi[a[u].fa],mi[u]);\n    }\n    for(int i=2;i<=node_cnt;i++)ch[a[i].fa][w[mi[i]+a[a[i].fa].len]]=i;//\u7236\u4eb2\u7684\u51fa\u73b0\u4f4d\u7f6e\u96c6\u5408\u4e00\u5b9a\u662f\u513f\u5b50\u7684\u51fa\u73b0\u4f4d\u7f6e\u96c6\u5408\u7684\u8d85\u96c6\uff0c\u53d6\u7236\u4eb2\u4e0b\u9762\u7b2c\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u8fb9\u7684\u5b57\u7b26\u5373\u53ef\n    for(int i=1;i<=n+1;i++)bcj.fa[i]=i;\n    dfs(1);\n    for(int i=1;i<=n;i++)printf(\"%d \",ans[i]);\n}\n```\n\n\u590d\u6742\u5ea6 $O(n\\log n)$\uff0c\u74f6\u9888\u5728\u4e8emap\uff0c\u7531\u4e8emap\u5e38\u6570\u5341\u5206\u5de8\u5927\u6240\u4ee5\u53ef\u80fd\u8bc4\u6d4b\u59ec\u4e00\u4e2a\u6ce2\u52a8\u5c31\u8fc7\u4e0d\u53bb\u4e86(",
        "postTime": 1593580090,
        "uid": 22136,
        "name": "qwaszx",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5108 \u3010\u4ef0\u671b\u534a\u6708\u7684\u591c\u7a7a\u3011"
    },
    {
        "content": "\u7b2c\u4e00\u6b21\u81ea\u5df1\u5199\u51fa\u5b57\u7b26\u4e32\u9898\u796d\n\n~~\u611f\u89c9\u8fd9\u4e00\u9898\u6ca1\u51fa\u9898\u4eba\u8bf4\u7684\u90a3\u4e48\u590d\u6742~~\n\n\u53ef\u4ee5\u60f3\u5230\u5148\u5bf9\u6bcf\u4e2a\u5b50\u4e32\u6392\u5e8f\uff0c\u56e0\u4e3a\u6bcf\u6b21\u8981\u6c42\u957f\u5ea6\u4e00\u5b9a\uff08\u8bbe\u4e3ai\uff09\u65f6\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u4e32\uff0c\u6240\u4ee5\u8003\u8651\u5bf9\u6bcf\u4e00\u4e2a\u540e\u7f00\u6392\u5e8f\uff0c\u7136\u540e\u518d\u622a\u53d6\u6bcf\u4e00\u4e2a\u4e32\u7684\u524di\u4e2a\u5b57\u7b26\uff0c\u4e0d\u8db3i\u4e2a\u7684\u820d\u53bb\uff0c\u5c31\u5f97\u5230\u4e86\u5bf9\u6bcf\u4e00\u4e2a\u957f\u5ea6\u4e3ai\u7684\u4e32\u6392\u5e8f\u7684\u7ed3\u679c\u3002\n\n\u6bd4\u5982\u5bf9\u4e8eacab\uff0c\u6392\u5e8f\u540e\u5f97\u5230\n```plain\nab\nacab\nb\ncab\n```\n\u8ba9i\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u3002\u5f53i=1\u65f6\uff0c\u53d1\u73b0\u7b2c\u4e00\u4e2a\u4e32ab\u7684\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8ei\uff08\u82e5\u5c0f\u4e8e\u5219\u628a\u8fd9\u4e2a\u4e32\u5ffd\u7565\uff09\uff0c\u6240\u4ee5\u7b54\u6848\u5c31\u662fab\u8fd9\u4e2a\u540e\u7f00\u7684\u8d77\u59cb\u4f4d\u7f6e3\u3002\n\n\u4e0d\u8fc7\u4f3c\u4e4e\u6709\u70b9\u4e0d\u5bf9\u2026\u20261\u6ca1\u88ab\u6211\u4eec\u8003\u8651\u5230\u3002\n\n\u56e0\u4e3aacab\u7684\u5b57\u5178\u5e8f\u6bd4ab\u5927\uff0c\u6211\u4eec\u628a\u5b83\u5ffd\u7565\u4e86\uff0c\u8fd9\u6709\u95ee\u9898\uff0c\u56e0\u4e3aacab\u548cab\u7684\u524di\u4e2a\u5b57\u7b26\u90fd\u76f8\u7b49\u3002\n\n\u8fd9\u600e\u4e48\u529e\uff1f\n\n\u8bbe\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8ei\u7684\u5b57\u7b26\u4e32\u4e3as\uff0c\u601d\u8003\u540e\u53d1\u73b0\uff0c\u4e00\u4e2a\u5b57\u7b26\u4e32\u53ef\u4ee5\u66f4\u65b0\u7b54\u6848\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b83\u548cs\u524di\u4e2a\u5b57\u7b26\u76f8\u540c\u7684\u3002\u5373\u53ef\u4ee5\u66f4\u65b0\u7b54\u6848\u7684\u5b57\u7b26\u4e32s\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u5e94\u8be5\u5927\u4e8e\u7b49\u4e8ei\u3002\u5e94\u8be5\u53ef\u4ee5\u60f3\u5230height\u6570\u7ec4\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8981\u6bcf\u6b21\u500d\u589e\u627e\u5230\u6240\u6709\u548cs\u524di\u4e2a\u5b57\u7b26\u76f8\u540c\u7684\u5b57\u7b26\u4e32\uff08\u8fd9\u4e2a\u4e32\u5e94\u8be5\u5927\u4e8e\u7b49\u4e8es\u7684\u5b57\u5178\u5e8f\uff0c\u6bd4s\u5b57\u5178\u5e8f\u5c0f\u7684\u7684\u957f\u5ea6\u4e00\u5b9a\u5c0f\u4e8ei\uff09\uff0c\u5728\u540e\u7f00\u6392\u5e8f\u4e2d\u5bf9\u5e94\u4e00\u4e2a\u533a\u95f4\uff0c\u627e\u5230\u8fd9\u4e2a\u533a\u95f4\u4e2d\uff0c\u5b57\u7b26\u4e32\u8d77\u59cb\u4f4d\u7f6e\u6700\u9760\u524d\u7684\u4f4d\u7f6e\u5373\u53ef\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528st\u8868\u7ef4\u62a4\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u4f1a\u4e0d\u4f1a\u6709\u957f\u5ea6\u5c0f\u4e8ei\u7684\u5b57\u7b26\u4e32\u6ee1\u8db3\u8fd9\u4e2a\u53ef\u4ee5\u66f4\u65b0\u7b54\u6848\u7684\u6761\u4ef6\uff1f\u5176\u5b9e\u4e0d\u53ef\u80fd\uff0c\u56e0\u4e3a\u957f\u5ea6\u5c0f\u4e8ei\uff0c\u6700\u957f\u516c\u5171\u524d\u7f00\u663e\u7136\u4e0d\u53ef\u80fd\u5927\u4e8ei\u3002\n\n\u5bf9\u4e8eacab\uff0ci=1\uff0c\u53d1\u73b0\n```plain\nab\nacab\nb\ncab\n```\n\u4e2d\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8ei\u7684\u5b57\u7b26\u4e32\u662fab\uff0cab,acab\u548cab\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u5927\u4e8e\u7b49\u4e8ei\uff0c\u6240\u4ee5\u8fd9\u4e24\u4e2a\u4e32\u53ef\u4ee5\u66f4\u65b0\u7b54\u6848\u3002\n\n\u5f53i=2\u65f6\uff0c\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8ei\u7684\u5b57\u7b26\u4e32\u8fd8\u662fab\uff0c\u4f46acab\u548cab\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u5c0f\u4e8ei\uff0c\u6240\u4ee5\u4e0d\u8003\u8651\uff0c\u7b54\u6848\u662fab\u8fd9\u4e2a\u540e\u7f00\u7684\u8d77\u59cb\u4f4d\u7f6e3\u3002\n\n\u5f53i=3\u65f6\uff0cab\u7684\u957f\u5ea6\u5c0f\u4e8e\u4e86i\uff0c\u8003\u8651\u4e0b\u4e00\u4e2aacab\uff0c\u66f4\u65b0\u7b54\u6848\u3002\n\n\u5f53i=4\u65f6\u540c\u7406\u3002\n\n\u56de\u987e\u4e00\u4e0b\uff0c\u6574\u4e2a\u8fc7\u7a0b\u662f\uff1a\n1. \u540e\u7f00\u6392\u5e8f\uff1b\n2. i\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\uff0c\u627e\u5230\u540e\u7f00\u6392\u5e8f\u4e2d\u7b2c\u4e00\u4e2a\u957f\u5ea6\u5927\u4e8ei\u7684\uff08\u53ef\u4ee5\u7528\u6307\u9488\u626b\uff09\u540e\u7f00\uff1b\n3. \u500d\u589e\uff0c\u6c42\u5f97\u4ece\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5f00\u59cb\uff0c\u6240\u6709\u7ecf\u8fc7\u7684height\u6700\u5c0f\u503c\u5927\u4e8e\u7b49\u4e8ei\u7684\u540e\u7f00\u4e2d\uff0c\u8d77\u59cb\u4f4d\u7f6e\u6700\u9760\u524d\u7684\uff08\u7528st\u8868\u7ef4\u62a4\uff09\uff1b\n4. \u8f93\u51fa\u7b54\u6848\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\log n+\\sigma)$\uff08$\\sigma$\u662f\u540e\u7f00\u6392\u5e8f\u65f6\u57fa\u6392\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u6bd4\u8d5b\u65f6\u6ca1\u60f3\u5230\u53ef\u4ee5\u7528\u5feb\u6392\uff0c\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u4f1a\u964d\u4e3a$O(n\\log n)$\uff0c\u4e0d\u8fc7\u53cd\u6b63\u80fd\u8fc7\u2026\u2026\uff09\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn=300005;\nconst int maxm=10000005;\nconst int maxlog=20;\nint n,logn,sa[maxn],h[maxn],rk[maxn],sz[maxm],s[maxn],minh[maxlog][maxn],minn[maxlog][maxn];\nchar temp[maxn];\nint main()\n{\n    register int k,i,j,p,l,ans;\n    int *x=h,*y=rk,m;\n    scanf(\"%d%d\",&m,&n);\n    if(m==26)\n        for(scanf(\"%s\",temp),i=0;i<n;i++)\n            s[i]=temp[i]-'a';\n    else\n        for(m++,i=0;i<n;i++)\n            scanf(\"%d\",&s[i]);\n    // \u540e\u7f00\u6570\u7ec4\uff1a\n    for(i=0;i<m;i++) sz[i]=0;\n    for(i=0;i<n;i++) sz[x[i]=s[i]]++;\n    for(i=1;i<m;i++) sz[i]+=sz[i-1];\n    for(i=0;i<n;i++) sa[--sz[x[i]]]=i;\n    for(k=1;k<=n;k<<=1)\n    {\n        for(i=n-k,p=0;i<n;i++) y[p++]=i;\n        for(i=0;i<n;i++)\n            if(sa[i]>=k)\n                y[p++]=sa[i]-k;\n        for(i=0;i<m;i++) sz[i]=0;\n        for(i=0;i<n;i++) sz[x[i]]++;\n        for(i=1;i<m;i++) sz[i]+=sz[i-1];\n        for(i=n-1;i>=0;i--) sa[--sz[x[y[i]]]]=y[i];\n        swap(x,y);\n        x[sa[0]]=0;\n        for(i=1,p=1;i<n;i++)\n            x[sa[i]]=((y[sa[i]]==y[sa[i-1]] && ((sa[i]+k>=n && sa[i-1]+k>=n) || (sa[i]+k<n && sa[i-1]+k<n && y[sa[i]+k]==y[sa[i-1]+k])))?p-1:p++);\n        if(p>=n) break;\n        m=p;\n    }\n    for(i=0;i<n;i++) rk[sa[i]]=i;\n    // \u6c42height\n    p=h[0]=0;\n    for(i=0;i<n;i++)\n    {\n        if(p) p--;\n        if(!rk[i]) continue;\n        while(s[i+p]==s[sa[rk[i]-1]+p]) p++;\n        h[rk[i]]=p;\n    }\n    // \u500d\u589e\n    for(i=0;i<n;i++)\n        minh[0][i]=h[i+1],minn[0][i]=sa[i];\n    for(logn=0;(1<<(logn+1))<=n;logn++);\n    for(i=1;i<=logn;i++)\n        for(j=0;j+(1<<i)<=n;j++)\n        {\n            minh[i][j]=min(minh[i-1][j],minh[i-1][j+(1<<(i-1))]);\n            minn[i][j]=min(minn[i-1][j],minn[i-1][j+(1<<(i-1))]);\n        }\n    // \u8ba1\u7b97&\u8f93\u51fa\u7b54\u6848\n    for(i=1,j=0;i<n;i++)\n    {\n        while(sa[j]+i>n) j++; // \u628a\u957f\u5ea6\u5c0f\u4e8ei\u7684\u5ffd\u7565\u6389\n        l=j;\n        ans=sa[j];\n        for(k=logn;k>=0;k--) // \u500d\u589e\n            if(l+(1<<k)<n && minh[k][l]>=i)\n                ans=min(ans,minn[k][l+1]),l+=(1<<k);\n        printf(\"%d \",ans+1);\n    }\n    printf(\"1\\n\");\n    return 0;\n}\n```\n\uff08\u5e94\u8be5\u6ca1~~\u9519~~\u60f3\u7b80\u5355\u5427\u2026\u2026\uff09",
        "postTime": 1544969158,
        "uid": 36998,
        "name": "ljc1301",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5108 \u3010\u4ef0\u671b\u534a\u6708\u7684\u591c\u7a7a\u3011"
    },
    {
        "content": "> \u7b97\u6cd5\uff1a\u540e\u7f00\u6392\u5e8f\uff0c\u5e76\u67e5\u96c6\n\n\u5148\u5bf9\u539f\u5e8f\u5217\u505a\u540e\u7f00\u6392\u5e8f\uff0c\u90a3\u4e48\u6ee1\u8db3\u5b57\u5178\u5e8f\u6700\u5c0f\u5373\u6392\u540d\u9760\u524d\n\n\u4f46\u662f\u5728\u8003\u8651\u4e00\u5b9a\u957f\u5ea6\u7684\u6240\u6709\u5b50\u4e32\u65f6\uff0c\u56e0\u4e3a\u53ea\u6bd4\u8f83\u8fd9\u4e9b\u4f4d\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u540e\u7f00 $S_x,S_y$ \u6ee1\u8db3 $rk_x<rk_y$ \u4f46 $x>y$\uff0c\u8fd9\u4e2a\u65f6\u5019\u7b54\u6848\u5e94\u5f53\u4e3a $y$ \u800c\u975e\u6392\u540d\u9760\u524d\u7684 $x$\n\n\u82e5\u5f53\u524d\u8003\u8651\u957f\u5ea6\u4e3a $L$ \u7684\u7b54\u6848\uff0c\u90a3\u4e48\u82e5\u957f\u5ea6\u4e0d\u5c0f\u4e8e $L$ \u4e14\u6392\u540d\u6700\u9760\u524d\u7684\u540e\u7f00\u5df2\u77e5\uff0c\u90a3\u4e48\u6240\u6709\u53ef\u80fd\u6210\u4e3a\u7b54\u6848\u7684\u4e32\u662f\u6392\u540d\u5e8f\u5217\u4e0a\u4ece\u6b64\u540e\u7f00\u5f00\u59cb\u7684\u4e00\u6bb5\u8fde\u7eed\u7684\u5e8f\u5217\uff0c\u4e14\u5e8f\u5217\u4e2d\u6240\u6709\u5143\u7d20\u4e24\u4e24\u4e4b\u95f4\u6700\u957f\u516c\u5171\u524d\u7f00\u4e0d\u5c0f\u4e8e $L$\n\n\u90a3\u4e48\u53ef\u4ee5\u4ece\u5927\u5230\u5c0f\u679a\u4e3e $L$\uff0c\u4f9d\u6b21\u52a0\u5165\u540e\u7f00\uff0c\u5e76\u628a\u6392\u540d\u5e8f\u5217\u4e2d\u6240\u6709\u6700\u957f\u516c\u5171\u524d\u7f00\u4e0d\u5c0f\u4e8e $L$ \u7684\u6392\u540d\u76f8\u90bb\u4e14\u90fd\u5df2\u88ab\u52a0\u5165\u7684\u540e\u7f00\u7528\u5e76\u67e5\u96c6\u5408\u5e76\uff0c\u5e76\u67e5\u96c6\u4e2d\u7ef4\u62a4\u5757\u5185\u6700\u5de6\u7684\u539f\u4e32\u4f4d\u7f6e\uff0c\u90a3\u4e48\u53ea\u9700\u8bb0\u5f55\u5f53\u524d\u52a0\u5165\u8fc7\u7684\u6700\u5c0f\u6392\u540d\uff0c\u4ed6\u6240\u5c5e\u7684\u5757\u4e2d\u6700\u5de6\u7684\u539f\u4e32\u4f4d\u7f6e\u5373\u4e3a\u7b54\u6848\n\n\u590d\u6742\u5ea6 $O(n\\log n)$\uff0c\u53ef\u4ee5\u628a\u5e76\u67e5\u96c6\u90e8\u5206\u7528\u6309\u79e9\u5408\u5e76\u4f18\u5316\u5230\u5355\u6b21 $O(\\alpha(n))$\uff0c\u4f46\u5b9e\u6d4b\u6548\u7387\u6ca1\u6709\u660e\u663e\u63d0\u5347\uff0c~~\u5b9e\u9645\u4e0a\u548c\u4e0d\u52a0\u4f18\u5316\u7684\u7528\u65f6\u662f \u5b8c \u5168 \u4e00 \u81f4 \u7684 611ms~~\uff0c\u79bb\u6563\u5316\u548c\u540e\u7f00\u6392\u5e8f\u662f\u6bd4\u8f83\u6ee1\u7684 $\\log$\uff0c\u5176\u4f59\u90e8\u5206\u5e38\u6570\u8f83\u5c0f\n\ncode:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nint read(){\n\tint f=0,s=0; char c=getchar();\n\twhile(c>'9'||c<'0')f=(c=='-'),c=getchar();\n\twhile(c>='0'&&c<='9')s=(s<<3)+(s<<1)+(c^'0'),c=getchar();\n\treturn f?-s:s;\n}\n\nconst int N=300005;\nint k,n;\nchar s[N];\nint a[N],b[N];\n\nint m;\nint buc[N],rk[N],tp[N],sa[N];\nvoid rsort(){\n\tfor(int i=1;i<=m;i++)buc[i]=0;\n\tfor(int i=1;i<=n;i++)buc[rk[i]]++;\n\tfor(int i=1;i<=m;i++)buc[i]+=buc[i-1];\n\tfor(int i=n;i>=1;i--)sa[buc[rk[tp[i]]]--]=tp[i];\n}\nvoid getsa(){\n\tfor(int i=1;i<=n;i++)rk[i]=a[i],tp[i]=i; rsort();\n\tfor(int p=0,w=1;p<n&&w<=n;m=p,w<<=1){\n\t\tp=0;\n\t\tfor(int i=n-w+1;i<=n;i++)tp[++p]=i;\n\t\tfor(int i=1;i<=n;i++)if(sa[i]>w)tp[++p]=sa[i]-w;\n\t\trsort(); swap(rk,tp);\n\t\trk[sa[1]]=1; p=1;\n\t\tfor(int i=2;i<=n;i++){\n\t\t\tif(tp[sa[i]]==tp[sa[i-1]]&&tp[sa[i]+w]==tp[sa[i-1]+w])rk[sa[i]]=p;\n\t\t\telse rk[sa[i]]=++p;\n\t\t}\n\t}\n}\nint h[N];\nvoid geth(){\n\tint k=0;\n\tfor(int i=1;i<=n;i++){\n\t\tif(k)k--;\n\t\twhile(a[i+k]==a[sa[rk[i]-1]+k])k++;\n\t\th[rk[i]]=k;\n\t}\n}\n#define pb push_back\nvector<int> v[N];\n\nint now;\nint f[N],mi[N],sz[N];\nint fd(int x){ return f[x]==x?f[x]:f[x]=fd(f[x]); }\nvoid mer(int x,int y){ x=fd(x); y=fd(y); if(x==y)return; if(sz[x]<sz[y])swap(x,y); f[y]=x; sz[x]+=sz[y]; mi[x]=min(mi[x],mi[y]); }\nbool vis[N];\nint ans[N];\n\nint main(){\n\tk=read(); n=read();\n\tif(k==26){\n\t\tscanf(\"%s\",s+1);\n\t\tfor(int i=1;i<=n;i++)a[i]=b[i]=s[i]-'a'+1;\n\t}\n\telse for(int i=1;i<=n;i++)a[i]=b[i]=read();\n\tsort(b+1,b+n+1); m=unique(b+1,b+n+1)-b-1;\n\tfor(int i=1;i<=n;i++)a[i]=lower_bound(b+1,b+m+1,a[i])-b;\n\tgetsa(); geth();\n\tfor(int i=1;i<=n;i++)v[h[i]].pb(i);\n\tfor(int i=1;i<=n;i++)f[i]=i,mi[i]=sa[i],sz[i]=1;\n\tnow=n+1;\n\tfor(int i=n;i>=1;i--){\n\t\tint p=rk[n-i+1];\n\t\tnow=min(now,p);\n\t\tvis[p]=1;\n\t\tif(p>1&&vis[p-1]&&h[p]>=i)mer(p,p-1);\n\t\tif(p<n&&vis[p+1]&&h[p+1]>=i)mer(p,p+1);\n\t\tfor(auto x:v[i])if(vis[x]&&vis[x-1])mer(x,x-1);\n\t\tans[i]=mi[fd(now)];\n\t}\n\tfor(int i=1;i<=n;i++)printf(\"%d \",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1639195012,
        "uid": 118743,
        "name": "ZZ\u4f5c\u8005",
        "ccfLevel": 7,
        "title": "P5108 \u4ef0\u671b\u534a\u6708\u7684\u591c\u7a7a \u9898\u89e3"
    },
    {
        "content": "\u540e\u7f00\u6570\u7ec4\u3002\n\n\u7531\u4e8e\u540e\u7f00\u6570\u7ec4\u5bf9\u6bcf\u4e2a\u540e\u7f00\u6309\u4ece\u5c0f\u5230\u5927\u6392\u597d\u5e8f\uff0c\u6240\u4ee5\u5728\u957f\u5ea6\u53ef\u884c\u7684\u8303\u56f4\u5185\uff0c\u4ee5\u6392\u540d\u4e3a$i$\u7684\u540e\u7f00\u7684\u8d77\u59cb\u4f4d\u7f6e\u5f00\u59cb\u7684\u5b57\u5178\u5e8f\u4e00\u5b9a\u4e0d\u5927\u4e8e\u4ee5\u6392\u540d\u4e3a$j$\uff08$j>i$\uff09\u7684\u540e\u7f00\u7684\u8d77\u59cb\u4f4d\u7f6e\u5f00\u59cb\u7684\u5b57\u5178\u5e8f\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u5f53\u524d\u957f\u5ea6$L$\uff0c\u6211\u4eec\u627e\u5230\u540e\u7f00\u6570\u7ec4\u6700\u524d\u9762\u7684\uff0c\u540e\u7f00\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e$L$\u7684\u4f4d\u7f6e$a$\uff0c\u5373\u4e3a\u5b57\u5178\u5e8f\u6700\u5c0f\u7684**\u4e00\u4e2a**\u7b54\u6848\u3002\n\n\u4f46\u6211\u4eec\u4e0d\u80fd\u4fdd\u8bc1\u5b57\u5178\u5e8f\u6700\u5c0f\u3002\u6211\u4eec\u9700\u8981\u627e\u5230\u4e0e\u540e\u7f00$a$\u7684LCP\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e$L$\u7684\uff0c\u8d77\u59cb\u4f4d\u7f6e\u6700\u524d\u9762\u7684\u4e00\u4e2a\u540e\u7f00\u3002\n\n\u7531\u4e8e\u540e\u7f00\u6570\u7ec4\u7684\u6027\u8d28\uff0c\u6240\u6709\u6ee1\u8db3\u4e0e$a$\u7684LCP\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e$L$\u7684\u4f4d\u7f6e\u5728\u6570\u7ec4\u4e2d\u8fde\u7eed\u3002\n\n\u7528ST\u8868\u7ef4\u62a4height\u503c\uff0c\u7136\u540e\u4e8c\u5206\u8fd9\u4e2a\u533a\u95f4\u7684\u53f3\u7aef\u70b9\uff0c\u518d\u67e5\u8be2\u8fd9\u4e00\u6bb5\u533a\u95f4\u4e2d\uff0c\u8d77\u59cb\u4f4d\u7f6e\u7684\u6700\u5c0f\u503c\u5373\u53ef\u3002\n\n\u6211\u4eec\u4ece\u5de6\u5230\u53f3\u626b\u540e\u7f00\u6570\u7ec4\u7684\u6bcf\u4e2a\u4f4d\u7f6e\uff0c\u80af\u5b9a\u662f\u80fd\u7528\u5c31\u4e00\u76f4\u7528\uff0c\u4e0d\u80fd\u7528\u7684\u4e4b\u540e\u4e5f\u4e0d\u53ef\u80fd\u518d\u7528\uff08\u957f\u5ea6\u9012\u589e\u679a\u4e3e\uff09\u3002\u6240\u4ee5\u7528\u4e00\u4e2a\u6307\u9488\u7ebf\u6027\u626b\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\log n)$\u3002\n\n## Code\uff1a\n```cpp\n#include<cstdio>\n#include<vector>\n#include<algorithm>\n#define N 300005\n#define log2(a)(31-__builtin_clz(a))\nstd::vector<int>vec;\nint s[N],sgm,n,x[N],y[N],height[N],c[N],sa[N],lp[19][N],st[19][N];\nvoid sort(){\n    int m=vec.size();\n    for(int i=1;i<=m;++i)c[i]=0;\n    for(int i=1;i<=n;++i)++c[x[i]=s[i]];\n    for(int i=1;i<=m;++i)c[i]+=c[i-1];\n    for(int i=n;i;--i)sa[c[x[i]]--]=i;\n    for(int k=1,p;k<=n;k<<=1){\n        p=0;\n        for(int i=n-k+1;i<=n;++i)y[++p]=i;\n        for(int i=1;i<=n;++i)if(sa[i]>k)y[++p]=sa[i]-k;\n        for(int i=1;i<=m;++i)c[i]=0;\n        for(int i=1;i<=n;++i)++c[x[i]];\n        for(int i=1;i<=m;++i)c[i]+=c[i-1];\n        for(int i=n;i;--i)sa[c[x[y[i]]]--]=y[i];\n        std::swap(x,y);\n        x[sa[1]]=p=1;\n        for(int i=2;i<=n;++i)\n        x[sa[i]]=y[sa[i]]==y[sa[i-1]]&&y[sa[i]+k]==y[sa[i-1]+k]?p:++p;\n        if(p==n)break;m=p;\n    }\n    for(int i=1,k=0;i<=n;++i)\n    if(x[i]>1){\n        k-=!!k;\n        int j=sa[x[i]-1];\n        while(s[i+k]==s[j+k])++k;\n        height[x[i]]=k;\n    }\n}\nvoid init(){\n    for(int i=1;i<=n;++i)lp[0][i]=height[i],st[0][i]=sa[i];\n    for(int i=0;i<18;++i)\n    for(int j=1;j<=n;++j)\n    if(j+(1<<i)<=n)lp[i+1][j]=std::min(lp[i][j],lp[i][j+(1<<i)]),st[i+1][j]=std::min(st[i][j],st[i][j+(1<<i)]);else break;\n}\ninline int lcp(int l,int r){\n    int lg=log2(r-l+1);\n    return std::min(lp[lg][l],lp[lg][r-(1<<lg)+1]);\n}\ninline int mini(int l,int r){\n    int lg=log2(r-l+1);\n    return std::min(st[lg][l],st[lg][r-(1<<lg)+1]);\n}\nint solve(int L,int len){\n    int l=L+1,r=n;\n    while(l<=r){\n        const int mid=l+r>>1;\n        if(lcp(L+1,mid)>=len)l=mid+1;else r=mid-1;\n    }\n    return mini(L,l-1);\n}\nint main(){\n    scanf(\"%d%d\",&sgm,&n);\n    if(sgm==26){\n        char t[N];\n        scanf(\"%s\",t+1);\n        for(int i=1;i<=n;++i)vec.push_back(s[i]=t[i]);\n    }else\n    for(int i=1;i<=n;vec.push_back(s[i++]))scanf(\"%d\",s+i);\n    std::sort(vec.begin(),vec.end());\n    vec.erase(std::unique(vec.begin(),vec.end()),vec.end());\n    for(int i=1;i<=n;++i)s[i]=std::lower_bound(vec.begin(),vec.end(),s[i])-vec.begin()+1;\n    sort();init();\n    for(int i=1,it=1;i<=n;++i){\n        while(it<=n&&n-sa[it]+1<i)++it;\n        printf(\"%d \",solve(it,i));\n    }\n    return 0;\n}\n\n```",
        "postTime": 1545740947,
        "uid": 6813,
        "name": "mrsrz",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5108 \u3010\u4ef0\u671b\u534a\u6708\u7684\u591c\u7a7a\u3011"
    }
]