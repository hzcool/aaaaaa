[
    {
        "content": "\u8f83\u7b80\u5355\u7684\u4e00\u9053\u9898\uff0c\u552f\u4e00\u8981\u6ce8\u610f\u7684\u662f\uff1a\u5f53x\u548cy\u76f8\u540c\u65f6\uff0c\u6211\u4eec\u4e0d\u80fd\u91cd\u590d\u8fdb\u884c\u64cd\u4f5c\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u5224\u91cd\u3002\u4f46\u662f\u5982\u679c\u8981\u7528\u4e8c\u7ef4bool\u6570\u7ec4\u5224\u91cd\u7684\u8bdd\uff0c\u5bf9\u4e8e100000\u7684\u4e8c\u7ef4\u6570\u7ec4\uff0c\u663e\u7136\u8981\u8d85\u7a7a\u95f4\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5de7\u5999\u7684\u8fd0\u7528\u5e93\u51fd\u6570'map'\u7684\u5185\u5bb9\uff0c\u81ea\u5df1\u6620\u5c04\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff01\n\n\n\u521a\u521a\u6709\u5c0f\u4f19\u4f34\u63d0\u95eed[i]\u6570\u7ec4\u7684\u542b\u4e49\uff0c\u8fd9\u91cc\u5177\u4f53\u89e3\u91ca\u4e00\u4e0b\uff0c\u9996\u5148\u6211\u4eec\u7528\u6570\u7ec4c[i]\u8868\u793a\u7b2ci\u5934\u725b\u7684\u9ad8\u5ea6,d[i]=c[i]-c[i-1],\u76f8\u90bb\u4e24\u5934\u725b\u4e4b\u95f4\u7684\u9ad8\u5ea6\u5dee\uff0c\u5982\u679c\u6211\u4eec\u5bf9x\u548cy\u533a\u95f4\u7684\u725b\u8fdb\u884c\u64cd\u4f5c\uff0c\u76f8\u5f53\u4e8ec[x+1]\u5230c[y-1]\u51cf\u4e861,\u6240\u4ee5d[x+1]\u7684\u503c\u51cf\u4e861\uff0cd[y]\u7684\u503c\u52a0\u4e861\u554a\u554a\u554a\u554a\u3002\u8fd9\u6837\u505a\u5c31\u53ef\u4ee5\u4e0d\u7528\u5bf9\u533a\u95f4\u8fdb\u884c\u64cd\u4f5c\uff0c\u800c\u662f\u5bf9\u4e24\u4e2a\u70b9\u8fdb\u884c\u64cd\u4f5c\u4e86\uff0c\u8282\u7ea6\u65f6\u95f4\uff0c\u4ece\u4f60\u6211\u505a\u8d77\uff01\uff01\uff01\uff01\uff01\uff08\u6b64\u81f4\u656c\u793c\uff01\uff09\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <map>\t\n#include <utility>\nusing namespace std;\nint d[100005];      \t\t\t //\u725b\nint n,l,h,r;\nint x,y;\nmap<pair<int,int>,bool>book;   //\u7531\u4e24\u4e2aInt\u7c7b\u578b\u7684\u6620\u5c04bool\u6570\u7ec4\n\nint main(){\n    scanf(\"%d%d%d%d\",&n,&l,&h,&r);\n    for(int i=1;i<=r;i++){\n        scanf(\"%d%d\",&x,&y);    \n        if(x>y)  swap(x,y);   //\u5f53x>y\u65f6\u8bb0\u5f97\u4ea4\u6362\n        if(book[make_pair(x,y)])    continue;  //\u5224\u91cd\n        d[x+1]--;   //\u524d\u7f00\u548c\u64cd\u4f5c\n        d[y]++;    \n        book[make_pair(x,y)]=true;\n    }\n    for(int i=1;i<=n;i++){\n        d[i]=d[i-1]+d[i];            \n        printf(\"%d\\n\",h+d[i]);\n    }\n    return 0;\n}\n```",
        "postTime": 1531736901,
        "uid": 91559,
        "name": "\u8ffd\u68a6_Chen",
        "ccfLevel": 0,
        "title": "\u6700\u9ad8\u7684\u725b"
    },
    {
        "content": "\u5927\u4f6c\u4eec\u7684\u4ec0\u4e48\u5dee\u5206\u6570\u7ec4\uff0c\u7ebf\u6bb5\u6811\u672c\u849f\u84bb\u5176\u5b9e\u90fd\u6ca1\u5b66\u8fc7\u5624\u5624\u5624\u3002\u3002\u3002\n\u7136\u540e\u6211\u7684\u5927\u6982\u601d\u8def\u5c31\u662f\u67d0\u5de8\u4f6c\u8001\u5e08\u8bb2\u7684\u90a3\u6837\uff0c\u5148\u628a\u6240\u6709\u725b\u7684\u9ad8\u5ea6\u8bbe\u4e3a\u6700\u9ad8\u503c\uff0c\u5982\u679c\u67d0\u4e24\u5934\u725b\u4e4b\u95f4\u80fd\u4e92\u76f8\u770b\u5230\u7684\u8bdd\uff0c\u90a3\u76f4\u63a5\u628a\u4e2d\u95f4\u6240\u6709\u725b\u90fd\u780d\u4e00\u5200\uff08\u4e2d\u95f4\u8fd9\u4e9b\u725b\u7684\u9ad8\u5ea6\u90fd\u51cf\u4e00\uff09\u7136\u540e\u6700\u540e\u8f93\u51fa\u5c31\u53ef\u4ee5\u4e86\u3002\u3002\n```cpp\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n#include<map>\nusing namespace std;\nstruct node {\n    int first;\n    int second;\n}h[10005];\nint kdl[10005][10005];//\u8fd9\u4e2a\u7528\u4e8e\u53bb\u91cd\nint n, f[10005], hest, r, t, a, b, c, d;//c\uff0cd\u8c8c\u4f3c\u6ca1\u7528\u4e0a\u3002\u3002\nint main() {\n    scanf(\"%d%d%d%d\", &n, &t, &hest, &r);\n    for (int i = 1; i <= n; i++) {\n        f[i] = hest;\n    }\n    for (int i = 1; i <= r; i++) {\n        scanf(\"%d%d\", &a, &b);\n        h[i].first = min(a, b);\n        h[i].second = max(a, b);//\u8ba9\u8fd9\u4e8c\u8005\u4e2d\u5c0f\u7684\u8d4b\u7ed9first\uff0c\u5927\u7684\u8d4b\u7ed9second\n        if (kdl[a][b] == 1)continue;\n        kdl[a][b] = 1;//\u5982\u679c\u5df2\u7ecf\u7b97\u8fc7\u4e00\u6b21\u5c31\u8df3\u8fc7\uff0c\u6ca1\u7b97\u8fc7\u5c31\u6807\u8bb0\u5e76\u8fd0\u7b97\n        for(int j=h[i].first+1;j<h[i].second;j++)f[j]--;\n    }//\u628a\u4e2d\u95f4\u6240\u6709\u725b\u7684\u9ad8\u5ea6\u51cf\u4e00\n    for(int i=1;i<=n;i++)printf(\"%d\\n\",f[i]);\n    return 0;\n}\n```",
        "postTime": 1526642597,
        "uid": 98032,
        "name": "Teddy_Di",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2879 \u3010[USACO07JAN]\u533a\u95f4\u7edf\u8ba1Tallest Cow\u3011"
    },
    {
        "content": "### \u524d\u7f00\u548c\n```cpp\nsum[i]\u8868\u793a\u524di\u4e2a\u6570\u7684\u548c\n\u6bcf\u6b21\u8bfb\u5165a[i]\u7684\u65f6\u5019\nsum[i] = sum[i - 1] + a[i];\n\n\u67e5\u8be2l ~ r\u533a\u95f4\u7684\u548c\uff1a sum[r] - sum[l - 1]\n```\n\n### \u5dee\u5206\n\n```cpp\n\u5373\u524d\u7f00\u548c\u7684\u4fee\u6539\u64cd\u4f5c\n\u6211\u4eec\u5b9a\u4e49pre[i]\u8868\u793a\u524di\u4e2a\u6570\u9700\u8981\u6539\u53d8\u7684\u503c\n\u5219\u5bf9\u4e00\u4e2a\u533a\u95f4l ~ r + k\u7684\u64cd\u4f5c\u662f\npre[r] + k; pre[l - 1] - k;\n\u5219\u591a\u7b97\u76841 ~ l - 1\u90e8\u5206\u5c31\u62b5\u6d88\uff0c\u7b49\u4ef7\u4e0el ~ r + k;\n```\n\n### \u672c\u9898\n```cpp\n\u521d\u59cb\u5c06\u8eab\u9ad8\u770b\u4f5c\u5355\u4f4d0\n\u56e0\u4e3a\u6700\u540e\u7684\u8eab\u9ad8\u8981\u6700\u9ad8\n\u5bf9l ~ r\u533a\u95f4\u8fdb\u884c\u5dee\u5206 -1\n\u8981\u6ce8\u610f\u4e24\u4e2a\u7aef\u70b9\u90fd\u4e0d\u9700\u8981 -1 \u6216 +1\n\u6700\u540e\u518d\u52a0\u4e0a\u521d\u59cb\u7684h\u9ad8\u5ea6\u5373\u53ef\n```\n\n### \u9700\u6ce8\u610f\n```cpp\nmap\u6216hash\u5224\u91cd\n\u4e24\u4e2a\u5976\u725b\u7684\u4e0b\u6807\u4e0d\u4e00\u5b9aA < B\n\u5f00\u59cb\u7ed9\u5b9a\u7684I\u6ca1\u6709\u7528\u5904\n```\n\n",
        "postTime": 1532975712,
        "uid": 76527,
        "name": "Chloris",
        "ccfLevel": 0,
        "title": "P2879 \u9898\u89e3"
    },
    {
        "content": "\n\u8bb8\u591adalao\u7684\u4ec0\u4e48 map \u5dee\u5206\u6570\u7ec4 \u7ebf\u6bb5\u6811 \u849f\u84bb\u90fd\u4e0d\u61c2\u5f97\n~~\u662f\u6211\u592a\u849f\u4e86 \u8fd8\u662f\u60a8\u4eec\u592adalao\u8fbd~~ ~~\u4e3a\u4ec0\u4e48\u6211\u611f\u89c9\u5c31\u662f\u5927\u6a21\u62df~~\n\n\u8fd9\u9053\u9898\u7b2c\u4e00\u773c\u770b\u4e0a\u53bb \u6bd4\u8f83\u7b80\u5355\n\u552f\u4e00\u9700\u8981\u6ce8\u610f\u7684\u70b9 \u5f53x\u548cy\u76f8\u540c\u65f6 \u6211\u4eec\u4e0d\u80fd\u91cd\u590d\u5730\u8fdb\u884c\u64cd\u4f5c \u610f\u601d\u4e5f\u5c31\u662f \u6211\u4eec\u5fc5\u987b\u8981\u5224\u91cd\u3002\n\n\u5982\u679c \u9ad8\u5ea6a\u5927\u4e8e\u9ad8\u5ea6b\u7684\u8bdd \u5219\u4ea4\u6362\u4e00\u4e0b\u9ad8\u5ea6\n\u7136\u540e\u7528 sort\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u4e00\u4e0b \n\u63a5\u4e0b\u6765\u5224\u91cd\n\n```\n     if (a [i].x == a [i - 1].x && a [i].y == a [i - 1].y)\n\tcontinue;\n        cow_height [a [i].x + 1] ++;\n        cow_height [a [i].y] --;\n```\n\n\n\u6700\u540e\u534e\u4e3d\u4e3d\u5730\u8f93\u51fa\n\n```\n        for(int i = 1; i <= n; i ++){\n        sum += cow_height [i];\n        printf (\"%d\\n\",height - sum);\n     }\n```\n\n\nAC\u4ee3\u7801\u5982\u4e0b\n\n```\n#include<set>  \n#include<map>  \n#include<list>  \n#include<queue> \n#include<fstream> \n#include<stack>  \n#include<string>  \n#include<cmath>  \n#include<ctime>  \n#include<vector>  \n#include<bitset>  \n#include<memory>  \n#include<utility>  \n#include<cstdio>  \n#include<sstream>  \n#include<iostream>  \n#include<cstdlib>  \n#include<cstring> \n#include<iomanip>  \n#include<algorithm> \n//\u6c14\u52bf\u78c5\u7934\u7684\u5934\u6587\u4ef6\n\nusing namespace std;\n\nint n,l,height,r,cow_height[10005],sum;\n\nint read()\n{\n    int x=0,f=1;\n    char c=getchar();\n    while(c<'0'||c>'9')\n\t{\n        if(c=='-')\n        f=-1;\n        c=getchar();\n    }\n    while(c>='0'&&c<='9')\n\t{\n        x=(x<<1)+(x<<3)+(c^48);\n        c=getchar();\n    }\n    return x*f;\n}//\u5feb\u8bfb\u8f93\u5165 \u9632\u6b62\u88ab\u5361\n\nstruct yq{\n\tint x,y;\n}a[10005];\n/*\na\u5976\u725b\u7684\u9ad8\u5ea6 x\nb\u5976\u725b\u7684\u9ad8\u5ea6 y\n*/\n\nbool cmtp(yq a,yq b)\n{\n\tif(a.x==b.x)\n\treturn a.y<b.y;\n\treturn a.x<b.x;\n}\n//\u7ed3\u6784\u4f53\u4e2d\u7684sort\u5feb\u8bfb\u8f6c\u5316\n\nint main(){\t\n     n = read ();\n\t  l = read ();\n\t  height = read ();\n\t  r = read ();\n     //\n     for (int i = 1; i <= r; i ++){\n       a [i].x = read ();\n\t    a [i].y = read ();\n       if (a [i].x>a [i].y)\n\t    swap (a [i].x,a [i].y);\n     }\n     sort (a + 1,a + r + 1,cmtp);\n     for (int i = 1; i <= r; i ++){\n        if (a [i].x == a [i - 1].x && a [i].y == a [i - 1].y)\n\t\t   continue;\n        cow_height [a [i].x + 1] ++;\n\t\t   cow_height [a [i].y] --;\n     }\n     for(int i = 1; i <= n; i ++){\n        sum += cow_height [i];\n        printf (\"%d\\n\",height - sum);\n     }\n     return 0;//\u597d\u4e60\u60ef\n}\n```\n",
        "postTime": 1565579211,
        "uid": 123198,
        "name": "Pheasant_YQ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2879 \u3010[USACO07JAN]\u533a\u95f4\u7edf\u8ba1Tallest Cow\u3011"
    },
    {
        "content": "1.\u6211\u4eec\u53ef\u4ee5\u7528\u6570\u7ec4cow\u5904\u7406\u54ea\u4e00\u4e2a\u533a\u95f4\u7684\u725b\u6bd4\u4e24\u8fb9\u7684\u725b\u77ee\uff08\u627e\u53ef\u4ee5\u5bf9\u89c6\u7684\u725b\uff0c\u6bcf\u5bf9\u53ef\u4ee5\u5bf9\u89c6\u7684\u725b\u4e4b\u95f4\u7684\u725b\u4e00\u5b9a\u6bd4\u5b83\u4eec\u77ee\uff0ccow[a+1]~cow[b]\uff09\uff0c\u6700\u540e\u518d\u52a0\u4e0a\u6700\u9ad8\u7684\u725b\u7684\u8eab\u9ad8\u5219\u4e3a\u89e3\uff0c\u4f46\u662f\u8f93\u5165\u6bcf\u4e00\u5bf9\u662f\u7528\u4e00\u4e2afor\u6765\u6807\u8bb0\u7684\u8bdd\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3an*m,\u4f1a\u7206\uff01\uff01\uff01\u6240\u4ee5\u6211\u4eec\u8981\u6362\u4e00\u79cd\u65b9\u6cd5\u6765\u9884\u5904\u7406\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u5728\u4e24\u7aef\u6253\u4e0a\u6807\u8bb0\uff0c\u5728 _cow[a+1]_ \u7684\u4f4d\u7f6e\u6807\u4e0a-1\uff0c\u5728 _cow[b] _(__  \u4e0d\u662fb-1\uff01\uff01)\u7684\u4f4d\u7f6e\u6807\u4e0a+1\uff08cow[ ]\uff1a000-10000+100\uff09\n\n\u7136\u540e\u4e00\u4e2afor\u8dd1\u524d\u7f00\u548c\u7edf\u8ba1\uff08cow[ ]:000-1-1-1-1-1000\uff09\n\n  ~(\u2267\u25bd\u2266)/~\u6700\u540e\u518d\u52a0\u4e0a\u6700\u9ad8\u7684\u725b\u7684\u8eab\u9ad8\u5c31ojbk\u5566~(\u2267\u25bd\u2266)/~\n  \n**  \u6700\u540e\u63d0\u793a\uff0c**\u4e24\u5934\u725b\u7684\u5bf9\u89c6\u5173\u7cfb(a,b)\u53ef\u80fd\u4f1a\u91cd\u590d\u8f93\u5165\uff0c\u8981\u7279\u5224\uff01\uff01\uff01\uff01\uff01\n\nAC\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n \nusing namespace std;\nint n,p,h,m,line[10001],cow[10001],x,y;\nbool check[10001][10001];\nint main()\n{\n\t\n\tscanf(\"%d%d%d%d\",&n,&p,&h,&m);\n\tcow[p]=h;\n\t\n\tfor(int i=1;i<=m;i++)\n\t{\n\t    scanf(\"%d%d\",&x,&y);\n\t    if(x>y) swap(x,y);\n\t    if (not(check[x][y]))//\u53bb\u91cd\n\t    {\n\t        line[x+1]--; line[y]++;//\u6807\u8bb0\u4e24\u7aef\n\t        check[x][y]=not(check[x][y]);\n\t    }\n    }\n    for(int i=1;i<=n;i++)\n    {\n    \tcow[i]=cow[i-1]+line[i];//\u524d\u7f00\u548c\n    \tprintf(\"%d\\n\",cow[i]+h);//\u52a0\u5165\u725b\u7684\u8eab\u9ad8\uff0c\u6c42\u51fa\u6bcf\u5934\u725b\u7684\u6700\u5927\u8eab\u9ad8\n    }\n}\n\n```",
        "postTime": 1534576765,
        "uid": 31010,
        "name": "Sakura_nameless",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2879 \u3010[USACO07JAN]\u533a\u95f4\u7edf\u8ba1Tallest Cow\u3011"
    },
    {
        "content": "\u8fd9\u9898\u6211\u4eec\u53ef\u4ee5\u5c06\u4ed6\u770b\u6210\u662f\u62ec\u53f7\u5e8f\u5217,  \u5982\u679cx\u80fd\u770b\u5230 y  \u5219\u56f4\u4e00\u4e2ax--y\u7684\u62ec\u53f7\uff0c \u62ec\u53f7\u4e0d\u53ef\u80fd\u51fa\u73b0\u8de8\u8d8a\u7684\u60c5\u51b5\uff0c\u56e0\u4e3a\u4e0d\u53ef\u80fd\u51fa\u73b0a x b y\u5373x\u80fd\u770b\u5230y\uff0ca\u53c8\u80fd\u770b\u5230b\u7684\u60c5\u51b5\uff0c\u7136\u540e\u7528  f[x]\u8868\u793ax\u8fd9\u4f4d \u4ee5\u53cay\u540e\u9762\u51e0\u4f4d\u90fd\u8981\u8fdb\u884c\u7684\u64cd\u4f5c\uff0c\u5982\u679cx\u5230 y\u56f4\u4e86\u4e00\u4e2a\u62ec\u53f7  \u5219f[x]-- ;  f[y]++    \u4e3a\u4e86\u9632\u6b62\u76f8\u540c\u7684\u6761\u4ef6\u91cd\u590d\u51cf  \u7528\u4e2amap \u8bb0\u5f55\u4e00\u4e0b\uff0c \u4f46\u8fd8\u662f\u4f1a\u51fa\u73b03 7 \u548c7 3\u8fd9\u79cd\u672c\u8d28\u76f8\u540c\u7684\u64cd\u4f5c\uff0c\u6240\u4ee5\u8981\u4ea4\u6362\u4e00\u4e0b\u3002\n\n\n\n\n\n```cpp\n#include <stdio.h>\n#include <algorithm>\n#include <map>\nusing namespace std;\nconst int maxn = 100001 ;\nmap<int,int> mp[maxn] ;\nint n,m,id,h,x,y ;\nint f[maxn] ;\nint main()\n{\n    scanf(\"%d%d%d%d\",&n,&id,&h,&m ) ;\n    for(int i=1;i<=m;i++) \n    {\n        scanf(\"%d%d\",&x,&y) ;\n        if(x>y) swap(x,y) ; \n        if(mp[x][y]) continue ;\n            else mp[x][y]=1 ;\n        f[x+1]--;   f[y]++;\n    }\n    for(int i=1;i<=n;i++) \n    {\n        f[i] = f[i]+f[i-1] ;\n        printf(\"%d\\n\",f[i]+h) ;\n    }\n    return 0;\n}\n```",
        "postTime": 1491721144,
        "uid": 18997,
        "name": "\u5c0f\u5e74\u8f7bw",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2879 \u3010[USACO07JAN]\u533a\u95f4\u7edf\u8ba1Tallest Cow\u3011"
    },
    {
        "content": "\u53d1\u4e00\u6ce2\u4ee3\u7801\uff0c\uff0c\u53c2\u8003\u8fc7\u591a\u4f4d\u5927\u4f6c\u7684\u535a\u5ba2\u540e\uff0c\uff0c\u7ec8\u4e8e\u6253\u51fa\u6765\u4e86\n\n\u6211\u4eec\u5efa\u7acb\u4e00\u4e2a\u6570\u7ec4c\uff0c\u6570\u7ec4\u4e2d\u8d77\u521d\u5168\u4e3a0.\u82e5\u4e00\u6761\u5173\u7cfbA\u548cB\u53ef\u4ee5\u4e92\u76f8\u770b\u89c1\uff0c\u90a3\u4e48\u5219\u628a\u6570\u7ec4c\u4e2dA+1\u5230B-1\u7684\u6570\u90fd\u51cf\u53bb1\uff0c\u610f\u601d\u662f\u5728A\u548cB\u4e2d\u95f4\u7684\u725b\uff0c\u8eab\u9ad8\u81f3\u5c11\u8981\u6bd4\u4ed6\u4eec\u5c0f1.\u56e0\u4e3a\u7b2cp\u5934\u725b\u662f\u6700\u9ad8\u7684\uff0c\u6240\u4ee5\u6700\u7ec8c[p]\u4e00\u5b9a\u4e3a0.\u5176\u4ed6\u7684\u725b\u4e0e\u7b2cp\u5934\u725b\u7684\u8eab\u9ad8\u5dee\u8ddd\u5c31\u4f53\u73b0\u5728\u6570\u7ec4c\u4e2d\u3002\n\n\u6362\u800c\u8a00\u4e4b\uff0c\u6700\u540e\u7b2ci\u5934\u725b\u7684\u8eab\u9ad8\u5c31\u7b49\u4e8eH+c[i]\u3002\n------------\n\u6211\u4eec\u4e4b\u540e\u53ef\u4ee5\u7528\u524d\u7f00\u548c\u8fdb\u884c\u4f18\u5316\uff0c\u4f18\u5316\u4e4b\u540e\u7684\u7b97\u6cd5\n\n****\u628a\u5bf9\u4e00\u4e2a\u533a\u95f4\u64cd\u4f5c\u8f6c\u5316\u4e3a\u5de6\uff0c\u53f3\u4e24\u4e2a\u7aef\u70b9\u4e0a\u7684\u64cd\u4f5c\uff0c\u518d\u901a\u8fc7\u524d\u7f00\u548c\u5f97\u5230\u95ee\u9898\u7684\u89e3\uff0c\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(N+M).****\n\n\u611f\u8c22LYD\u795e\u7287\u7684\u7b97\u6cd5\u7ade\u8d5b\u8fdb\u9636\u6307\u5357\uff0c\u5404\u4f4d\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u770b\u770b  QAQ\n~~~~\n#include<bits/stdc++.h>\nusing namespace std;\nint c[10010],d[10010];\nmap<pair<int ,int>,bool> eee;\nint main(){\n\tint n,p,h,m;\n\tscanf(\"%d%d%d%d\",&n,&p,&h,&m);\n\tfor (int i=1; i<=m; i++){\n\t\tint a,b;\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tif(a>b) swap(a,b);\n\t\tif (eee[make_pair(a,b)]) continue;\n\t\td[a+1]--,d[b]++;\n\t\teee[make_pair(a,b)]=true;\n\t}\n\tfor (int i=1; i<=n; i++){\n\t\tc[i]=c[i-1]+d[i];\n\t\tprintf(\"%d\\n\",h+c[i]);\n\t}\n\tcout<<endl;\n\treturn 0;\n}\n~~~~",
        "postTime": 1519374414,
        "uid": 21869,
        "name": "maple_tzc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2879 \u3010[USACO07JAN]\u533a\u95f4\u7edf\u8ba1Tallest Cow\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u9898\u76ee\u6761\u4ef6\u91cc\u9762\u5f88\u9ebb\u70e6\u7684\u4e00\u70b9\u662f\u5b83\u8981\u6c42(a,b)\u91cc\u9762b>=a\uff0c\u800c\u76ee\u524d\u7684\u79cd\u79cd\u6a21\u578b\u91cc\u9762\u5bf9\u6b64\u5e76\u6ca1\u6709\u5408\u9002\u7684\u5efa\u6a21\u3002\n\n\u4f46\u662f\uff0c\u4ed4\u7ec6\u601d\u8003\u5c31\u4f1a\u53d1\u73b0\uff0c\u8fd9\u4e2a\u6761\u4ef6\u5e76\u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848\u3002\n\n\u5982\u679cb<a\u7684\u8bdd\uff0c\u8bf4\u660e\u4e00\u5b9a\u6709\u4e00\u4e2a\u6570c\uff0c\u4f7f\u5f97b<c<=a\uff0c\u5426\u5219\u7531\u4e8e\u9898\u76ee\u8981\u6c42\u6700\u5927\uff0c\u53ef\u4ee5\u5c06b\u8c03\u6574\u5230b=a\u800c\u4e0d\u5f71\u54cd\u9898\u610f\u3002\n\n\u7136\u540e\u6211\u4eec\u5bf9c\u7684\u4f4d\u7f6e\u8fdb\u884c\u5206\u7c7b\u8ba8\u8bba\n\n1. c\u5728(a,b)\u4e0a\n2. c\u5728ab\u5916\uff0c\u79bbb\u8f83\u8fd1\n3. c\u5728ab\u5916\uff0c\u79bba\u8f83\u8fd1\n\n\u53ef\u4ee5\u770b\u51fa\uff0c\u7b2c\u4e00\u79cd\u60c5\u51b5\u80af\u5b9a\u4e0d\u6210\u7acb\uff0c\u56e0\u4e3a\u8981\u6c42(a,b)\u4e2d\u6bcf\u4e00\u4e2a\u6570x\u90fd\u6ee1\u8db3x<a<=b\uff0c\u56e0\u6b64\u5fc5\u6709x<b\u3002\n\n\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u5982\u679cc\u4e0eab\u65e0\u5173\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5c06b\u8c03\u6574\u5230b=a\uff0c\u6240\u4ee5\u5fc5\u7136\u5b58\u5728\u4e00\u4e2a\u5173\u7cfb\u4f7f\u5f97b<c\u3002\u540c\u65f6\u8981\u6ee1\u8db3c<=a\uff0c\u7531\u4e8e\u4e0d\u5b58\u5728\u533a\u95f4\u4ea4\u9519\u7684\u60c5\u51b5\uff08\u8bc1\u660e\u7565\uff09\uff0c\u53ea\u80fd\u662f\u56e0\u4e3a\u5b58\u5728\u4e00\u4e2a\u5173\u7cfb(c,x)\uff0c\u5176\u4e2dx\u4f4d\u4e8e(a,b)\u4e2d\u6216a\u4e0a\u3002\n\n\u8fd9\u91cc\u5c31\u4f1a\u6709x>=b\uff0c\u7136\u800cb>=a>=x\uff0c\u6240\u4ee5\u552f\u4e00\u53ef\u80fd\u7684\u5173\u7cfb\u53ea\u6709a=b=x\u3002\n\n\u7b2c\u4e09\u79cd\u60c5\u51b5\uff0c\u8bc1\u660e\u7565\u3002\n\n\u56e0\u6b64\uff0cb>=a\u6761\u4ef6\u5e76\u4e0d\u4f1a\u5f71\u54cd\u7b54\u6848\uff0c\u53ef\u4ee5\u5f00\u5fc3\u6109\u5feb\u5730\u5957\u6a21\u677f\u4e86\u3002\n\n## \u65b9\u68481\uff1a\u7ebf\u6bb5\u6811\u5efa\u8fb9+\u62d3\u6251\u6392\u5e8f\n\n\u7531\u4e8e\u8fd9\u91cc\u7ed9\u7684\u662f\u504f\u5e8f\u5173\u7cfb\uff0c\u56e0\u6b64\u53ef\u4ee5\u8003\u8651\u62d3\u6251\u6392\u5e8f\uff08\u62d3\u6251\u6392\u5e8f=\u5dee\u5206\u7ea6\u675f\u7cfb\u7edf+\u5355\u8fb9\u6743\u56fe\u4e2dBFS\u6c42\u6700\u77ed\u8def\uff09\n\n\u7136\u800c\uff0c\u76f4\u63a5\u5efa\u8fb9\u662f$\\Theta(RN)$\u7684\uff0c\u80af\u5b9a\u4f1a\u70b8\uff0c\u8fd9\u65f6\u5019\u5c31\u8981\u8003\u8651\u7ebf\u6bb5\u6811\u5efa\u8fb9\u3002\n\n\u5177\u4f53\u4e0d\u9610\u8ff0\uff0c\u4ee3\u7801\u6ca1\u6709\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$\\Theta((R+N)logN)$\n\n## \u65b9\u68482\uff1a\u6734\u7d20\u66b4\u529b\u7b97\u6cd5\n\n\u6211\u4eec\u6bcf\u6b21\u8003\u8651\u4e00\u4e2a\u5173\u7cfb\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u6570\u7ec4A\u548c\u4e00\u4e2a\u5173\u7cfb(a,b)\uff0c\u5982\u679cA\u6ee1\u8db3\u5728\u5176\u4e4b\u524d\u7684\u6240\u6709\u5173\u7cfbR'\uff0c\u53ef\u4ee5\u901a\u8fc7\u64cd\u4f5c\u4f7fA\u6ee1\u8db3(a,b)\u540c\u65f6\u4e0d\u7834\u574fR'\n\n\u7a0d\u5fae\u60f3\u60f3\u5c31\u80fd\u77e5\u9053\uff0c\u5982\u679c\u8981\u63d2\u5165\u4e00\u4e2a\u65b0\u5173\u7cfb\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u5c06(a,b)\u4e2d\u95f4\u7684\u6570\u90fd-1\uff0c\u4e14\u6700\u5c0f-1\u3002\n\n\u8bc1\u660e\u7565\u3002\n\n\u518d\u8003\u8651\u5230\u6211\u4eec\u9700\u8981R\u6b21\u533a\u95f4\u51cf\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u4e0a\u5dee\u5206\u6570\u7ec4\uff0c$\\Theta(R+N)$\u89e3\u51b3\u95ee\u9898\u3002\u518d\u52a0\u4e0amap\u5224\u91cd\uff0c$\\Theta(RlogR+N)$\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <map>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n\nint loi[10005];\n\nmap<int,map<int,bool> > mmp;\n\nint main()\n{\n\tint n,i,h,r;\n\tscanf(\"%d%d%d%d\",&n,&i,&h,&r);\n\tfor(int i=1; i<=r; ++i)\n\t{\n\t\tint a,b;\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tif(a>b)\n\t\t{\n\t\t\tswap(a,b);\n\t\t}\n\n\t\tif(!mmp[a][b])\n\t\t{\n\t\t\tmmp[a][b] = 1;\n\t\t\t--loi[a+1];\n\t\t\t++loi[b];\n\t\t}\n\t}\n\n\tint cur = 0;\n\tfor(int i=1; i<=n; ++i)\n\t{\n\t\tcur += loi[i];\n\t\tprintf(\"%d\\n\",h+cur);\n\t}\n}\n```",
        "postTime": 1560740863,
        "uid": 49458,
        "name": "\u6728\u6728\uff01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2879 \u3010[USACO07JAN]\u533a\u95f4\u7edf\u8ba1Tallest Cow\u3011"
    },
    {
        "content": "## [P2879 \u3010[USACO07JAN]\u533a\u95f4\u7edf\u8ba1Tallest Cow\u3011](https://www.luogu.com.cn/problem/P2879)  \n\u5176\u5b9e\u6211\u662f\u521a\u5b66\u5b8c\u54c8\u5e0c\u7528\u6807\u7b7e\u641c\u54c8\u5e0c\u8fdb\u6765\u7684\uff0c\u4f46\u6253\u5f00\u4e00\u770b\u89c9\u5f97\u662f\u4e2a\u56fe\u8bba....  \n\u770b\u4e86\u9898\u89e3\u624d\u77e5\u9053\uff0c~~\u786e\u5b9e\u548c\u54c8\u5e0c\u6ca1\u5565\u5173\u7cfb~~\u5176\u5b9e\u5c31\u662f\u7528map\u5224\u91cd\uff0c\u7136\u800c\u6211\u8fd8\u662f\u5efa\u56fe\u8dd1\u7684\u62d3\u6251   \n\u770b\u9898\u89e3\u533a\u53ea\u6709\u4e00\u7bc7\u7c7b\u4f3c\u7684\u505a\u6cd5\u8fd8\u4e0d\u662f\u7279\u8be6\u7ec6\uff0c~~\u5c31\u8d76\u7d27\u6765\u6c34\u4e00\u7bc7~~\n\n-----  \n\u6709n\u53ea\u725b\uff0c\u7ed9\u4f60r\u6761\u4fe1\u606f\u548c\u6700\u9ad8\u7684\u725b\u7684\u9ad8\u5ea6\uff0c\u6bcf\u6761\u4fe1\u606f$(a,b)$\u8868\u793a$h_a\\leq h_b$\uff0c\u4e14a,b\u4e4b\u95f4\u6240\u6709\u725b\u9ad8\u5ea6\u6bd4$h_a$\u4f4e\uff0c\u6c42\u6bcf\u5934\u725b\u6700\u5927\u9ad8\u5ea6  \n\u5efa\u56fe\u65f6\u4ece\u9ad8\u7684\u725b\u8fde\u5411\u4f4e\u7684\u725b\uff0c\u5c0f\u4e8e\u7684\u60c5\u51b5\u8fb9\u6743\u4e3a1\uff08\u9ad8\u5ea6\u81f3\u5c11\u8981\u4f4e1\uff09  \n\u5bf9\u4e8e\u5c0f\u4e8e\u7b49\u4e8e\u7684\u60c5\u51b5\u5f53\u7136\u8981\u8ba9\u5b83\u53d6\u7b49\uff08\u56e0\u4e3a\u8981\u6c42\u6700\u5927\u9ad8\u5ea6\uff09\uff0c\u6240\u4ee5\u8fb9\u6743\u5e94\u4e3a0  \n\u62d3\u6251\u65f6\uff0c\u5bf9\u4e8e\u8fb9$(u,v)$\uff0c\u8ba9$h[v]=min(h[v],h[u]-w[i])$\uff0c\u5176\u4e2d$w[i]$\u662f\u5f53\u524d\u8fb9\u8fb9\u6743  \n\u7136\u540e\u53d1\u73b0\u8fd9\u6837\u5efa\u56fe\u8fb9\u6570\u662f$Rn$\u7684\uff0c\u6240\u4ee5\u8003\u8651\u7528[\u7ebf\u6bb5\u6811\u4f18\u5316](https://www.luogu.com.cn/blog/suxxsfe/xian-duan-shu-you-hua-jian-bian)  \n\u5728\u7ebf\u6bb5\u6811\u4e2d\u7684\u70b9\u662f\u4ece$n+1$\u5f00\u59cb\u7f16\u53f7\uff0c\u5bf9\u5e94\u6211\u4ee3\u7801\u91cc\u7684nn  \n\u6700\u540e\u6ce8\u610f\u7ebf\u6bb5\u6811\u4e2d\u7684\u8fb9\u8fb9\u6743\u4e5f\u8981\u4e3a0\u5c31\u884c\u4e86  \n```cpp  \n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<iostream>\n#include<cmath>\n#include<iomanip>\n#include<cstring>\n#define reg register\n#define EN std::puts(\"\")\n#define LL long long\ninline int read(){\n\tint x=0,y=1;\n\tchar c=std::getchar();\n\twhile(c<'0'||c>'9'){if(c=='-') y=0;c=std::getchar();}\n\twhile(c>='0'&&c<='9'){x=x*10+(c^48);c=std::getchar();}\n\treturn y?x:-x;\n}\nint n,nn,maxh,m;\nint h[30006],fir[30006],in[30006];\nint nex[200006],to[200006],w[200006],edge;\nstruct tr{\n\ttr *ls,*rs;\n\tint id;\n}dizhi[20006],*root=&dizhi[0];\nint tot;\ninline void add(int u,int v,int tmp){\n\tto[++edge]=v;w[edge]=tmp;\n\tnex[edge]=fir[u];fir[u]=edge;\n}\nvoid build(tr *tree,int l,int r){\n\tif(l==r) return tree->id=l,void();\n\tint mid=(l+r)>>1;\n\ttree->ls=&dizhi[++tot];tree->rs=&dizhi[++tot];\n\tbuild(tree->ls,l,mid);build(tree->rs,mid+1,r);\n\ttree->id=++nn;\n\tadd(tree->id,tree->ls->id,0);add(tree->id,tree->rs->id,0);\n\tin[tree->ls->id]++;in[tree->rs->id]++;\n}\nvoid addtree(tr *tree,int l,int r,int ql,int qr,int u){\n\tif(ql<=l&&r<=qr) return add(u,tree->id,1),in[tree->id]++,void();\n\tint mid=(l+r)>>1;\n\tif(ql<=mid) addtree(tree->ls,l,mid,ql,qr,u);\n\tif(qr>mid) addtree(tree->rs,mid+1,r,ql,qr,u);\n}\nstd::queue<int>q;\ninline void topo(){\n\tfor(reg int i=1;i<=nn;i++){\n\t\th[i]=maxh;\n\t\tif(!in[i]) q.push(i);\n\t}\n\twhile(!q.empty()){\n\t\treg int u=q.front();q.pop();\n\t\tfor(reg int v,i=fir[u];i;i=nex[i]){\n\t\t\tv=to[i];\n\t\t\th[v]=std::min(h[v],h[u]-w[i]);\n\t\t\tif(!--in[v]) q.push(v);\n\t\t}\n\t}\n}\nint main(){\n\tn=nn=read();read();maxh=read();m=read();//\u90a3\u4e2a\u8f93\u5165\u7684i\u5e76\u6ca1\u6709\u4ec0\u4e48\u7528\uff0c\u76f4\u63a5read()\u6389\u5c31\u884c\uff0c\u4ee3\u7801\u91cc\u7684m\u5c31\u662f\u9898\u91cc\u7684R\n\treg int a,b;\n\tbuild(root,1,n);\n\twhile(m--){\n\t\ta=read();b=read();\n\t\tadd(b,a,0);in[a]++;\n\t\treg int minn=std::min(a,b),maxx=std::max(a,b);\n\t\tif(minn<maxx-1) addtree(root,1,n,minn+1,maxx-1,a);//a,b\u4e4b\u95f4\u81f3\u5c11\u6709\u4e00\u5934\u725b\n\t}\n\ttopo();\n\tfor(reg int i=1;i<=n;i++) std::printf(\"%d\\n\",h[i]);\n\treturn 0;\n}\n\n```  \n[\u8fd8\u6709\u4e00\u4e2a\u76f8\u4f3c\u7684\u9898](https://www.luogu.com.cn/problem/P3588)\u53ef\u4ee5\u53bb\u5199\u4e00\u4e0b  \n[\u9898\u89e3](https://www.luogu.com.cn/blog/suxxsfe/solution-p3588)  \n\u90a3\u4e2a\u9898\u662f\u6c42\u4e00\u79cd\u53ef\u884c\u65b9\u6848\uff0c\u4f46\u5176\u5b9e\u5c31\u53ef\u4ee5\u5f53\u6700\u5927\u503c\u505a",
        "postTime": 1582967561,
        "uid": 164432,
        "name": "suxxsfe",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2879 \u3010[USACO07JAN]\u533a\u95f4\u7edf\u8ba1Tallest Cow\u3011"
    },
    {
        "content": "\u6211\u5e76\u4e0d\u8ba4\u4e3a\u6211\u7684\u7a0b\u5e8f\u662f\u6b63\u89e3\uff0c\u53cd\u800c\u611f\u89c9\u6d1b\u8c37\u7684\u6570\u636e\u592a\u6c34\u4e86\uff0c\u5c45\u7136\u6ca1\u628a\u6211\u5361\u6389\n\n\u7b97\u6cd5\uff1a \u8d2a\u5fc3+\u6a21\u62df\n\n\u8d2a\u5fc3\uff1a\u6309\u7167\u533a\u95f4\u5927\u5c0f\u6392\u5e8f\n\n```cpp\nbool cmp(node A,node B){\n\treturn (A.a2-A.a1)>(B.a2-B.a1);\n}\n```\n\n\u6a21\u62df\uff1a\u663e\u7136\uff0c\u8bb0\u5f55\u4e24\u5934\u7aef\u70b9\uff0c\u4e2d\u95f4\u503c\u8981\u5c0f\u4e8e\u7aef\u70b9\u6700\u5c0f\u503c\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nint n,I,H,r,h[20005];\nstruct node{\n\tint a1,a2;\n}e[20005];\n\nbool cmp(node A,node B){\n//\tif(A.a1!=B.a1) return A.a1<B.a1;\n//\telse return A.a2>B.a2;\n\treturn (A.a2-A.a1)>(B.a2-B.a1);\n}\n\nint main()\n{\n\tcin>>n>>I>>H>>r;\n//\tmemset(h,H,sizeof(h));\n\tfor(int i=1;i<=n;i++) h[i]=H;\n\tfor(int i=1;i<=r;i++){\n\t\tcin>>e[i].a1>>e[i].a2;\n\t\tif(e[i].a1>e[i].a2) swap(e[i].a1,e[i].a2);\n\t}sort(e+1,e+1+n,cmp);\n\tfor(int i=1;i<=r;i++){\n\t\tint u=e[i].a1,v=e[i].a2,w;\n\t\tw=min(h[u],h[v]);\n\t\tfor(int i=u+1;i<v;i++){\n\t\t\tif(h[i]>=h[u]||h[i]>=h[v]) h[i]=w-1;\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++) printf(\"%d\\n\",h[i]);\n\treturn 0;\n}\n```",
        "postTime": 1528248245,
        "uid": 60939,
        "name": "\u6e05\u98ce\u6211\u5df2\u901d",
        "ccfLevel": 0,
        "title": "\u89e3\u9898\u62a5\u544a P2879 \u3010[USACO07JAN]\u533a\u95f4\u7edf\u8ba1Tallest Cow\u3011"
    },
    {
        "content": "\n\u60f3\u5b66\u66f4\u591a\u59ff\u52bf\u5c31\u8fdb\u5165\u6211\u7684\u535a\u5ba2\u6765\u67e5\u770b\u5427[\u6233\u8fd9\u91cc(\\*/\u03c9\uff3c*)\u5427](http://www.vixbob-lwc.pw)\n\n## \u89e3\u9898\u601d\u8def\n\n\u4e00\u9897\u652f\u6301\u533a\u95f4\u6700\u503c\u548c\u533a\u95f4\u4fee\u6539\u7684\u7ebf\u6bb5\u6811+\u8d2a\u5fc3\n\n\u8d2a\u5fc3\u601d\u8def\u5c31\u662f\u5148\u5904\u7406\u957f\u7684\u533a\u95f4\uff0c\u56e0\u4e3a\u957f\u7684\u533a\u95f4\u66f4\u5bb9\u6613\u53bb\u5f71\u54cd\u5176\u4ed6\u7684\u533a\u95f4\n\n\u5728\u5c31\u662f\u5bf9\u6bcf\u4e2a\u533a\u95f4\u8fdb\u884c\u5904\u7406\uff0c\u9996\u5148\u67e5\u8be2\u4e24\u4e2a\u7aef\u70b9$left$\u548c$right$\u7684\u503c\uff0c\u5982\u679c$left>right$\u4fee\u6539$left$,\u56e0\u4e3a\u53f3\u7aef\u70b9\u53ef\u4ee5\u770b\u89c1\u5de6\u7aef\u70b9\uff0c\u6240\u4ee5$left \\leq right$\n\n\u518d\u5bf9$[left+1,right-1]$\u4e2d\u7684\u7684\u6bcf\u4e00\u4e2a\u503c\u8fdb\u884c\u4fee\u6539\u5c31\u597d\u4e86\uff0c\u6700\u540e\u9012\u5f52\u8f93\u51fa\u6bcf\u4e00\u4e2a\u503c\n\n## \u5b9e\u73b0\u4ee3\u7801\n\n```\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#define ls p<<1\n#define rs p<<1|1\n#define mid ((l+r)>>1)\nusing namespace std;\nconst int MAXN=1e4+10;\nint N,I,H,R,num[MAXN];\nstruct NODE{int l,r,c;}e[MAXN];\nstruct node{int sum,tag;}t[MAXN<<2];\ninline int read(){\n    char ch=getchar();int u=0,f=1;\n    while(!isdigit(ch)){if(ch=='-')f=-1;ch=getchar();}\n    while(isdigit(ch)){u=u*10+ch-48;ch=getchar();}return u*f;\n}\ninline bool cmp(NODE x,NODE y){return x.c>y.c;}\ninline void pushup(int p){\n    t[p].sum=max(t[ls].sum,t[rs].sum);\n}\ninline void pushdown(int p){\n    if(t[p].tag==0)return;\n    if(t[ls].sum>t[p].tag)t[ls].sum=t[p].tag,t[ls].tag=t[p].tag;\n    if(t[rs].sum>t[p].tag)t[rs].sum=t[p].tag,t[rs].tag=t[p].tag;\n    t[p].tag=0;\n}\ninline void build(int l,int r,int p){\n    t[p].sum=H;if(l==r){num[r]=p;return;}\n    build(l,mid,ls);build(mid+1,r,rs);\n}\ninline void modify(int l,int r,int ql,int qr,int p,int x){\n    if(ql>qr)return;\n    if(l==ql&&r==qr){if(t[p].sum>x)t[p].sum=x,t[p].tag=x;return;}\n    pushdown(p);\n    if(qr<=mid)modify(l,mid,ql,qr,ls,x);\n    else if(ql>mid)modify(mid+1,r,ql,qr,rs,x);\n    else modify(l,mid,ql,mid,ls,x),modify(mid+1,r,mid+1,qr,rs,x);\n}\ninline int query(int l,int r,int ql,int qr,int p){\n    if(ql>qr)return -1;\n    if(l==ql&&r==qr)return t[p].sum;\n    pushdown(p);\n    if(qr<=mid)return query(l,mid,ql,qr,ls);\n    else if(ql>mid)return query(mid+1,r,ql,qr,rs);\n    else return max(query(l,mid,ql,mid,ls),query(mid+1,r,mid+1,qr,rs));\n}\ninline void print(int l,int r,int p){\n    if(l==r){printf(\"%d\\n\",t[p].sum);return;}\n    pushdown(p);\n    print(l,mid,ls);print(mid+1,r,rs);\n}\nint main(){\n    N=read();I=read();H=read();R=read();\n    for(register int i=1;i<=R;i++){\n        e[i].l=read();e[i].r=read();e[i].c=max(e[i].r,e[i].l)-min(e[i].r,e[i].l)+1;\n    }\n    sort(e+1,e+1+R,cmp);build(1,N,1);\n    for(register int i=1;i<=R;i++){\n        int r=max(e[i].r,e[i].l),l=min(e[i].r,e[i].l);\n        int pos=query(1,N,l+1,r-1,1);\n        int left=query(1,N,e[i].l,e[i].l,1);\n        int right=query(1,N,e[i].r,e[i].r,1);\n        if(left>right){\n            t[num[e[i].l]].sum=left=right;\n            modify(1,N,e[i].l,e[i].l,1,left);\n        }\n        modify(1,N,l+1,r-1,1,left-1);\n    }\n    print(1,N,1);\n    return 0;\n}\n```",
        "postTime": 1515044759,
        "uid": 50971,
        "name": "ViXbob",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2879 \u3010[USACO07JAN]\u533a\u95f4\u7edf\u8ba1Tallest Cow\u3011"
    },
    {
        "content": "\u672c\u9898\u5176\u5b9e\u53ef\u4ee5\u8f6c\u6362\u7406\u89e3\uff1a\n\n\u628a\u6bcf\u4e00\u4e2a\u533a\u95f4[a,b](a<b)\u4ecea+1\u5230b\u8fde\u4e00\u6761\u7ebf\u6bb5\uff0c\u6700\u540e\u6bcf\u4e2a\u70b9\u7684\u6700\u9ad8\u9ad8\u5ea6\u5c31\u662f**(H-\u8be5\u70b9\u88ab\u7ebf\u6bb5\u8986\u76d6\u6570)**\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u524d\u7f00\u548c\u7684\u601d\u60f3\u53bb\u5feb\u901f\u6c42\u51fa\u6bcf\u4e2a\u70b9\u88ab\u7ebf\u6bb5\u8986\u76d6\u7684\u6b21\u6570\uff0c\u5177\u4f53\u505a\u6cd5\u662f\uff1a\n\n\u5f00\u4e00\u4e2a\u6570\u7ec4c\uff0c\u5bf9\u4e8e\u533a\u95f4[a,b]\u5219**++c[a+1],--c[b];**\u8fd9\u6837\u6211\u4eec\u53ea\u8981\u626b\u4e00\u904d\uff0c\u7528ans\u8bb0\u5f55c\u6570\u7ec4\u7684\u548c\uff0c\u5c31\u53ef\u4ee5\u77e5\u9053\u6bcf\u4e2a\u70b9\u88ab\u7ebf\u6bb5\u8986\u76d6\u7684\u6b21\u6570\u4e86\u3002\n\n\n\u6ce8\u610f\uff1a\u672c\u9898\u7684\u533a\u95f4\u6709\u53ef\u80fd\u51fa\u73b0a>b\u7684\u60c5\u51b5\uff0c\u9700\u8981\u4ea4\u6362\uff0c\u800c\u4e14\u9700\u8981\u53bb\u91cd\uff08C++\u53ef\u4ee5\u7528set\uff0cPascal\u53ef\u4ee5\u6392\u5e8f\u4e00\u904d\u540e\u53bb\u91cd\uff09\u3002\n\n\nC++\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nstruct node{\n    int x,y;\n    node(int a,int b):x(a),y(b){}\n    friend bool operator<(const node &n1,const node &n2)\n    {\n        return n1.x==n2.x?n1.y<n2.y:n1.x<n2.x;\n    }\n};\nset<node> s;\nint n,I,h,r,a,b,c[10001],ans;\nint main()\n{\n    scanf(\"%d%d%d%d\",&n,&I,&h,&r);\n    for(int i=1;i<=r;++i)\n    {\n        scanf(\"%d%d\",&a,&b);\n        s.insert(node(min(a,b),max(a,b)));\n    }\n    for(set<node>::iterator it=s.begin();it!=s.end();++it)\n    {\n        ++c[(*it).x+1];\n        --c[(*it).y];\n    }\n    for(int i=1;i<=n;++i)\n    {\n        printf(\"%d\\n\",h-(ans+=c[i]));\n    }\n}\n```\nPascal\u4ee3\u7801\uff1a\n\n```pascal\ntype node=record\n            x,y:longint;\n          end;\nvar\n  a:array[1..10000]of node;\n  c:array[1..10000]of longint;\n  n,i,j,p,h,r,t,sum:longint;\nprocedure sort(l,r:longint);\nvar\n  i,j,x:longint;\n  t:node;\nbegin\n  i:=l;\n  j:=r;\n  x:=a[(l+r)div 2].x;\n  repeat\n    while a[i].x<x do\n      inc(i);\n    while a[j].x>x do\n      dec(j);\n    if i<=j then\n    begin\n      t:=a[i];\n      a[i]:=a[j];\n      a[j]:=t;\n      inc(i);\n      dec(j);\n    end;\n  until i>j;\n  if i<r then sort(i,r);\n  if l<j then sort(l,j);\nend;\nbegin\n  readln(n,p,h,r);\n  for i:=1 to r do\n  begin\n    readln(a[i].x,a[i].y);\n    if(a[i].x>a[i].y)then\n    begin\n      t:=a[i].x;\n      a[i].x:=a[i].y;\n      a[i].y:=t;\n    end;\n  end;\n  sort(1,r);\n  for i:=1 to r do\n  begin\n    if((a[i].x<>a[i+1].x) or (a[i].y<>a[i+1].y))then\n    begin\n      inc(c[a[i].x+1]);\n      dec(c[a[i].y]);\n    end;\n  end;\n  sum:=0;\n  for i:=1 to n do\n  begin\n    inc(sum,c[i]);\n    writeln(h-sum);\n  end;\nend.\n```",
        "postTime": 1503407901,
        "uid": 30413,
        "name": "ez\u043eixx130",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2879 \u3010[USACO07JAN]\u533a\u95f4\u7edf\u8ba1Tallest Cow\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u4e4b\u524d\u6ca1\u6709\u5224\u91cd\uff0c\u6240\u4ee550\u5206\uff0c\u8fd9\u6b21\u52a0\u4e86\u4e00\u4e2amp\u6570\u7ec4\u5c31\u8fc7\u4e86\uff0c\u6807\u8bb0\u662f\u5426\u6709\u8fd9\u4e2a\uff0c\u6bd4\u59825  7\u548c 7  5\u662f\u4e00\u6837\u7684\uff0c\u601d\u8def\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u6bcf\u6b21\u5c06\u725ba+1\u548c\u725bb-1\uff0c\u56e0\u4e3a\u8fd9\u6837\u53ef\u4ee5\u8ba9\u4ed6\u4eec\u770b\u89c1\uff0c\u4ec5\u6b64\u800c\u5df2\uff0c\u7b80\u7565\u6734\u7d20\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn=10010;\nint c[maxn];\nint main (){\n\tint n,p,h,m;\n\tcin>>n>>p>>h>>m;\n\tmemset(c,0,sizeof(c));\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tint a,b;\n\t\tcin>>a>>b;\n\t\t for (int j=a+1;j<=b-1;j++)\n\t\t {\n\t\t \tc[j]++;\n\t\t }\n\t}\n\t\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tcout<<h-c[i]<<endl;\n\t}\n}\n```",
        "postTime": 1539765867,
        "uid": 89545,
        "name": "world_romantic_xebec",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2879 \u3010[USACO07JAN]\u533a\u95f4\u7edf\u8ba1Tallest Cow\u3011"
    }
]