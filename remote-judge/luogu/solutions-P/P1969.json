[
    {
        "content": "```cpp\n#include <iostream>\nusing namespace std;\nint main()\n{\n    int n,a,last=0,ans=0;\n    cin>>n;\n    for(int i=1;i<=n;i++)\n    {\n        cin>>a;\n        if(a>last)ans+=(a-last);\n        last=a;\n    }\n    cout<<ans<<endl;\n}\n//\u628a\u5e8f\u5217\u5206\u6210(a1,..ai)(ai+1,...aj)......(ak,...an)\u591a\u4e2a\u975e\u9012\u51cf\u5e8f\u5217\u3002\n//\u7136\u540e\u6240\u6709\u6bb5\u4e2d\u6700\u5927\u503c\u7684\u548c\u51cf\u53bb\u9664\u7b2c\u4e00\u6bb5\u5916\u7684\u6bb5\u7684\u6700\u5c0f\u503c\uff0c\u5316\u7b80\u4e00\u4e0b\uff0c\u5c31\u51fa\u6765\u4e86\n```",
        "postTime": 1493294086,
        "uid": 40198,
        "name": "FP\u00b7\u8377\u5170\u732a",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "\u521a\u521a\u5c45\u7136\u53d1\u73b0\u8fd9\u662fnoip\u7684\u9898\u3002\u3002\u3002\u9707\u60ca\u3002\u3002\u3002\n\n\u7136\u800c\u5e76\u4e0d\u9700\u8981DP\uff0c\u7ebf\u6bb5\u6811\uff0c\uff0c\uff0c\u4ec0\u4e48\u4ec0\u4e48\u7684\n\n\u7eaf\u6a21\u62df\u5c31\u597d\u4e86\u554a\n\n\u800c\u4e14\u6570\u7ec4\u4e5f\u4e0d\u9700\u8981\u554a\uff0c\uff0c5\u4e2a\u53d8\u91cf\u5c31\u597d\u4e86\n\n\u56e0\u4e3a\u5b58\u50a8\u4e2d\u95f4\u7b54\u6848\u662f\u6ca1\u6709\u7528\u7684\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint s,n,ans,now;\nint main()\n{\n    int i;\n    scanf(\"%d\",&n);\n    scanf(\"%d\",&ans);//\u80af\u5b9a\u81f3\u5c11\u8981\u7b2c\u4e00\u5757\u90a3\u4e48\u591a\u6b21\uff08\u5b9e\u9645\u4e0a\u662f\u6240\u4ee5\u76ee\u6807\u503c\u7684\u6700\u5927\u503c\u90a3\u4e48\u591a\u6b21\uff0c\u4f46\u662f\u8981\u627e\u6700\u5927\u503c\u9ebb\u70e6\uff0c\u53cd\u6b63\u540e\u9762\u53ef\u4ee5\u89e3\u51b3\uff0c\u6240\u4ee5\u76f4\u63a5\u8bfb\u7b2c\u4e00\u5757\u5c31\u597d\u4e86\uff09\n    now=ans;//\u8bb0\u5f55\u5f53\u524d\u76ee\u6807\u79ef\u6728\u9ad8\u5ea6\n    for(i=1;i<n;i++)\n    {\n        scanf(\"%d\",&s);\n        if(s>now) ans+=(s-now);//\u5982\u679c\u540e\u9762\u7684\u5927\u4e8e\u5f53\u524d\u76ee\u6807\uff0c\u663e\u7136\u8981\u591a\u641e\u51e0\u6b21\u624d\u884c\uff0c\uff0c\uff0c\n//\u5982\u679c\u5c0f\u4e8e\uff0c\u73b0\u5728\u5728\u641e\u8fd9\u4e00\u5757\u7684\u65f6\u5019\u987a\u4fbf\u5c31\u53ef\u4ee5\u628a\u4e0b\u4e00\u5757\u5f04\u597d\u4e86\n//\u6240\u4ee5\u53ea\u8981+\u4e0b\u4e00\u5757\u6bd4\u73b0\u5728\u591a\u7684\u5c31\u53ef\u4ee5\u4e86\n        now=s;//\u66f4\u65b0\u73b0\u5728\u76ee\u6807\u7684\u503c\n    }\n    printf(\"%d\",ans);//\u6109\u5feb\u8f93\u51fa\n    return 0; \n}\n```",
        "postTime": 1509460464,
        "uid": 47136,
        "name": "ww3113306",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "### \u672c\u849f\u84bb\u6765\u53d1\u5e03\u4e00\u4e0b\u6211\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\n\n~~\u8fd9\u662f\u67d0\u5e74NOIP\u63d0\u9ad8\u7ec4\u7b2c\u4e00\u5929\u7684\u7b2c\u4e00\u9898~~\n\n\u8fd9\u9053\u9898\u53ea\u8981\u8ba1\u7b97h[i]\u548ch[i+1]\u4e24\u7ec4\u7684\u9ad8\u5ea6\u5dee\u5373\u53ef\uff1a\n1. h[i]<h[i+1]\uff0c\u5373\u5de6\u8fb9\u7684\u4e00\u7ec4\u6bd4\u53f3\u8fb9\u7684\u77ee\uff0c\u5f53\u9ad8\u5ea6\u6ee1\u8db3\u5de6\u9762\u65f6\uff0c\u53f3\u8fb9\u7684\u8fd8\u5dee\u4e00\u4e9b\uff0c\u90a3\u4e48ans\u52a0\u4e0a\u4e24\u5806\u7684\u9ad8\u5ea6\u5dee\uff1b\n1. h[i]>=h[i+1]\uff0c\u5373\u5de6\u8fb9\u7684\u4e00\u7ec4\u6bd4\u53f3\u8fb9\u7684\u9ad8\uff0c\u5f53\u9ad8\u5ea6\u6ee1\u8db3\u5de6\u9762\u65f6\uff0c\u53f3\u8fb9\u7684\u4e5f\u4e00\u5b9a\u6ee1\u8db3\u4e86\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u589e\u52a0ans\u3002\n\n\u6700\u540e\uff0c\u79c0\u4e00\u6ce2\u6211\u7684\u4e5d\u884c\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>//\u70ed\u7231\u4e07\u80fd\u5934\nint n,h[100050],ans;//ans\u4e3a\u6446\u653e\u6b21\u6570\nint main(){\n\tstd::cin>>n;\n\tfor(int i=1; i<=n; i++) std::cin>>h[i];\n\tfor(int i=1; i<=n; i++) if(h[i]>h[i-1]) ans+=h[i]-h[i-1];//\u4ee3\u7801\u6838\u5fc3\n\tstd::cout<<ans<<std::endl;\n\treturn 0;\n}\n```\n\n\u5927\u4f6c\u4eec\u770b\u5b8c\u4e86\uff0c**\u6211\u53ef\u5426~~\u65e0\u803b\u7684\u6c42\u4e00\u6ce2\u8d5e~~QAQ**",
        "postTime": 1572444363,
        "uid": 118269,
        "name": "\u5403\u4ebapeople",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "qwq\u4e3a\u4ec0\u4e48\u6ca1\u6709\u5dee\u5206\u9898\u89e3\u554a\n\n\u4e00\u822c\u533a\u95f4\u64cd\u4f5c\u9996\u5148\u8981\u60f3\u5dee\u5206\u2014\u2014\u2014\u2014yql\n\n\u5dee\u5206\u662f\u4e2a\u5565\uff1f\n\n\u25b3f=f(x+1)-f(x),\u5c31\u50cf\u5fae\u79ef\u5206\uff0c\u4f46\u628a\u589e\u91cf\u6362\u6210\u4e861\uff0c\u4e5f\u53eb\u6709\u9650\u5fae\u79ef\u5206\n\n\u8fd9\u91cc\u5b9a\u4e49\u5dee\u5206f[i]=h[i]-h[i-1],i=1...n+1,h[0]=0,h[n+1]=0.\n\n\u5bb9\u6613\u77e5\u9053f\u4e2d\u6b63\u503c\u4e4b\u548c\u7b49\u4e8e\u8d1f\u503c\u4e4b\u548c\u7684\u7edd\u5bf9\u503c\n\n\u03a3f[i]=\u03a3h[i]-h[i-1]=h[n+1]-h[0]=0,\u5f97\u8bc1.\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u731cans=\u6b63\u503c\u4e4b\u548c\n\n\u8bc1\u660e\uff1f\n\n\u5982\u679cf[i]\u4e3a\u6b63\uff0c\u5bb9\u6613\u77e5\u9053\u6211\u4eec\u8981\u5f80\u8fd9\u4e00\u645e\u4e0a\u642d\u79ef\u6728\uff0c\u6240\u4ee5ans+=h[i]-h[i-1]=f[i]\n\n\u5982\u679cf[i]\u4e3a\u8d1f\uff0c\u53ef\u4ee5\u5728\u4e4b\u524d\u642d\u7684\u65f6\u5019\u4e00\u8d77\u642d\u4e0a\u53bb\uff0c\u6240\u4ee5ans\u4e0d\u53d8\n\n\u5f53\u7136\u8fd9\u53ef\u4ee5\u901a\u8fc7\u5176\u4ed6\u65b9\u5f0f\u7701\u53bb\u6570\u7ec4\uff0c\u4f46\u5dee\u5206\u6709\u66f4\u591a\u7684\u7528\u9014\n\n\u8003\u8651\u533a\u95f4\u52a0\n\n\u5728a(\u539f\u6570\u7ec4\uff0c\u4e0b\u540c)\u4e0a\u8868\u73b0\u4e3ai=l...r,a[i]+=w;\n\n\u800c\u5728f\u6570\u7ec4\u4e0a\u7684\u8868\u73b0\u5219\u4e3af[l]+=w,f[r+1]-=w.\n\n\u8bc1\u660e\u81ea\u5df1yy\u4e00\u4e0b\u5c31\u597d\uff0c\u5f88\u5bb9\u6613\n\n\u4e8e\u662f\u8fd9\u4e1c\u897f\u53ef\u4ee5O(1)\u4fee\u6539\n\n\u53ef\u4ee5\u63a8\u5e7f\u5230\u4e8c\u7ef4\u548c\u6811\u4e0a\uff0c\u533a\u95f4\u4e58\u6cd5\u5e94\u8be5\u4e5f\u53ef\u4ee5\uff1f\uff1f\uff1f\u9002\u7528\u4e8e\u591a\u8be2\u95ee\u5c11\u4fee\u6539\u7684\u9898\n\n\u7136\u540e\u4eca\u5929\u6709\u4e00\u9053\u6bd2\u7624\u9898\u8981\u6c42\u533a\u95f4\u7ffb\u8f6c+\u533a\u95f4\u52a0+\u5e26\u8d1f\u503c\u79ef\u6728\u5927\u8d5b+\u67e5\u8be2\u5386\u53f2\u7248\u672c\n\n\u4e8e\u662f\u53ef\u4ee5\u5dee\u5206\u505a\n\n------------\n\n\u8003\u8651\u7ffb\u8f6c\u4e4b\u540e\u7684f\n\n\u5bf9\u4e8el+1~r+1,\u53ef\u4ee5\u53d6\u53cd\u7136\u540e\u7ffb\u8f6c\n\n\u5bf9\u4e8el\u548cr\uff0c\u66b4\u529b\u5904\u7406\u4e00\u4e0b\u5373\u53ef\n\n\u4e22\u5230\u5e73\u8861\u6811\u4e0a\u5c31\u597d\u4e86\n\n\u5386\u53f2\u7248\u672c\u52a0\u4e0a\u4e00\u4e2a\u64cd\u4f5c\u6811\u5c31\u597d\n\n\u6ca1\u6709\u5f3a\u5236\u5728\u7ebf\u5c31\u4e0d\u9700\u8981\u6301\u4e45\u5316\n\n------------\n\n\u5230\u8fd9\u662fyql\u539f\u8bdd\u53cd\u6b63\u6211\u6ca1\u600e\u4e48\u542c\u61c2orz\n\n\u6700\u540e\u56de\u5230\u8fd9\u4e2a\u9898\u4e0a\u6765233\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint c[110000],n,ans=0;\ninline int getin()\n{\n\tint x=0;char ch=getchar();\n\twhile(ch<'0'||ch>'9')ch=getchar();\n\twhile(ch>='0'&&ch<='9')x=x*10+ch-48,ch=getchar();\n\treturn x;\n}\ninline int max(int a,int b)\n{\n\tif(a>b)return a;return b;\n}\nint main()\n{\n\tn=getin();\n\tfor(register int i=1;i<=n;i++)\n\t\tc[i+1]=-getin(),c[i]-=c[i+1],ans+=max(c[i],0);\n\tprintf(\"%d\",ans);\n}\n```\n4ms...\u6162\u7684\u8981\u6b7b\uff0c\u53ef\u4ee5\u81ea\u5df1\u518d\u5361\u5361\u5e38\u6570\n\n\u533a\u95f4\u7684\u8bdd\u5206\u5757O(nsqrt(n))/\u7ebf\u6bb5\u6811(nlogn)\u5565\u7684\u90fd\u80fd\u505a\n\n\u6211\u8fd9\u4e48\u83dc\u4e0d\u4f1a\u522b\u7684233",
        "postTime": 1519479131,
        "uid": 22136,
        "name": "qwaszx",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9053\u9898\u6ca1\u6709\u90a3\u4e48\u9ebb\u70e6\uff08\u975e\u5e38\u7b80\u5355\uff09\uff0c\u53ea\u9700\u8981\u8ba1\u7b97\u76f8\u90bb\u4e24\u5806\u7684\u9ad8\u5ea6\u5dee\u5c31\u884c\u4e86\u3002q\u4e3a\u5de6\u8fb9\u4e00\u5806\u9ad8\u5ea6\uff0cp\u4e3a\u53f3\u8fb9\u4e00\u5806\u9ad8\u5ea6\uff0cs\u4e3a\u603b\u6446\u653e\u6b21\u6570\u3002\n\n1.q<p\uff0c\u5373\u5de6\u8fb9\u7684\u4e00\u5806\u6bd4\u53f3\u8fb9\u77ee\uff0c\u5de6\u8fb9\u7684\u4e00\u5806\u6446\u5b8c\u540e\uff0c\u53f3\u8fb9\u7684\u8fd8\u5dee\u4e00\u70b9\uff0c\u90a3\u4e48\u6446\u653e\u6b21\u6570s\u52a0\u4e0a\u4e24\u5806\u7684\u9ad8\u5ea6\u5deep-q\uff08\u76f8\u5f53\u4e8e\u6446\u597d\u4e86\u53f3\u5806\uff09\u3002\n\n2.q>=p\uff0c\u5373\u5de6\u8fb9\u7684\u4e00\u5806\u6bd4\u53f3\u8fb9\u77ee\uff0c\u8bf4\u660e\u53ea\u8981\u5de6\u8fb9\u7684\u4e00\u5806\u5806\u597d\u4e86\uff0c\u90a3\u4e48\u53f3\u8fb9\u7684\u4e00\u5806\u4e5f\u80af\u5b9a\u5806\u597d\u4e86\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u589e\u52a0\u6446\u653e\u6b21\u6570s\u3002\n\n\u9644\u4e0a\u4ee3\u7801(p\u515a):\n\n    readln(n); \n    for i:=1 to n do\n      begin\n          read(p);\n          if q<p then s:=s+p-q;\n          q:=p;\n      end;\n     writeln(s);",
        "postTime": 1541323793,
        "uid": 146202,
        "name": "\u7f04\u9ed8Mutism",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "\u7a9d\u6765\u5199\u4e00\u7bc7\u6700\u4e0d\u6b63\u5e38\u7684\u9898\u89e3\n\n\u6570\u636e\u7ed3\u6784\u5b66\u591a\u4e86\uff0c\u5565\u90fd\u4e71\u60f3\u3002\n\n\u5f88\u660e\u663e\uff0c\u4e00\u6bb5\u533a\u95f4\u4e00\u6b21\u62ff\u6700\u591a\u7684\u79ef\u6728\u662f\u7531\u6700\u77ee\u7684\u79ef\u6728\u51b3\u5b9a\u7684\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u4ece\u6700\u77ee\u7684\u79ef\u6728\u5411\u4e24\u8fb9\u7ee7\u7eed\u8d70\uff0c\u6c42\u89e3\u51fa\u6700\u5c11\u7684\u6b21\u6570\u3002\n\n\u533a\u95f4\u6700\u5c0f\u503c emmmmmm\n\n\u5f53\u7136\u6211\u4eec\u9700\u8981\u7684\u662f\u6700\u5c0f\u503c\u7684\u4f4d\u7f6e\uff0c\u53ef\u4e0d\u662f\u6700\u5c0f\u503c\uff08\u9003~\n\n\u7ebf\u6bb5\u6811\uff01~~\uff08ST\u8868\uff09~~\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\u8981\u628a\u8fde\u7eed\u9ad8\u5ea6\u76f8\u540c\u7684\u79ef\u6728\u5408\u5e76\u6210\u4e00\u4e2a\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <ctime>\n#define ll long long\nusing namespace std;\nconst int maxm=1e5+100;\nstruct node{\n    ll sum;\n    ll id;\n}st[maxm<<2];\nll ans,n,t[maxm],cnt;\nvoid build(ll o,ll l,ll r)\n{\n    if(l==r)\n    {\n        st[o].sum=t[l];\n        st[o].id=l;\n        return;\n    }\n\n    ll mid=(l+r)/2;\n\n    build((o<<1),l,mid);\n    build((o<<1)|1,mid+1,r);\n\n    if(st[(o<<1)].sum<st[(o<<1)|1].sum) \n     st[o]=st[(o<<1)];\n    else\n     st[o]=st[(o<<1)|1];\n}\nll ask(ll o,ll l,ll r,ll ql,ll qr)\n{\n    if(ql<=l&&r<=qr)\n     return o;\n    ll mid=(l+r)/2;\n    ll o1,o2;\n    if(qr<=mid) \n     return ask(o<<1,l,mid,ql,qr);\n    if(ql>mid)\n     return ask((o<<1)|1,mid+1,r,ql,qr);\n    o1=ask((o<<1),l,mid,ql,qr),o2=ask((o<<1)|1,mid+1,r,ql,qr);\n    if(st[o1].sum<st[o2].sum) return o1;\n    else return o2;\n}\nvoid dfs(ll l,ll r,ll sum)\n{\n    if(l>r) return;\n    ll o=ask(1,1,cnt,l,r);\n    //printf(\"%d\\n\",st[o].id);\n    //if(st[o].sum-sum==0) return;\n    ans+=(st[o].sum-sum);\n    dfs(l,st[o].id-1,st[o].sum);\n    dfs(st[o].id+1,r,st[o].sum);\n}\nint main()\n{\n    //freopen(\"block.in\",\"r\",stdin);\n    //freopen(\"block.out\",\"w\",stdout);\n    scanf(\"%lld\",&n);\n    ll x;\n    for(int i=1;i<=n;i++)\n     {\n         scanf(\"%lld\",&x);\n         if(x!=t[cnt]) t[++cnt]=x;\n     }\n    build(1,1,cnt);\n    dfs(1,cnt,0);\n\n    printf(\"%lld\",ans);\n\n    return 0;\n} \n```",
        "postTime": 1515036470,
        "uid": 19842,
        "name": "\u534a\u4ed9\u80e1\u5c0f\u6843",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6211\u7528\u4e86\u5206\u6cbb\u7684\u65b9\u6cd5\uff0c\u5982\u679c\u5f53\u524d\u8981\u8ba1\u7b97\u642d\u5efa\u533a\u95f4[l,r]\n\n\u6240\u9700\u8981\u7684\u64cd\u4f5c\u6570\uff0c\u90a3\u4e48\u5b83\u5c31\u7b49\u4e8e\u5de6\u53f3\u4e24\u4e2a\u533a\u95f4\u7684\u64cd\u4f5c\u6570\u4e4b\u548c\n\n\u51cf\u53bb\u4e24\u4e2a\u533a\u95f4\u8fde\u63a5\u90e8\u5206\u7684\u6700\u5c0f\u503c\uff0c\u56e0\u4e3a\u91cd\u590d\u4e86\uff0c\u6240\u4ee5\u4e24\u8fb9\u53ef\n\n\u4ee5\u8fde\u63a5\u8d77\u6765\u3002\n\nf(l,r)=f(l,mid)+f(mid+1,r)-min(h[mid],h[mid+1])\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\nshort h[100000];\nint n,i;\nshort min(short x,short y){return x<y?x:y;}\nint f(int l,int r){\n    if(l==r)\n        return h[l];\n    int mid=l+r>>1;\n    return f(l,mid)+f(mid+1,r)-min(h[mid],h[mid+1]);\n}\nint main(){\n    scanf(\"%d\",&n);\n    for(;i<n;i++)\n        scanf(\"%hd\",h+i);\n    printf(\"%d\",f(0,n-1));\n    return 0;\n}\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(2n)\n```",
        "postTime": 1502788765,
        "uid": 41485,
        "name": "HybridTheory",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "\u8fd9\u9898\u6211\u4eec\u4f7f\u7528\u4e8c\u6b21\u4f18\u5316\uff1a\uff08\u867d\u7136\u4e0d\u4f18\u5316\u4e5f\u80fd\u8fc7\uff09\n\n\u62ff\u5230\u8fd9\u9898\u7684\u6211\u7b2c\u4e00\u53cd\u5e94\u662f\u3002\u3002\u3002\u3002\u3002\n\n\u9012\u5f52\u3002\u3002\u3002\u3002\n\n\u662f\u7684\uff0c\u975e\u5e38\u4f4e\u6548\n\n\u6bd5\u7adfT1\u4e48\uff0c\u80fd\u6a21\u5c31\u6a21\n\n\u6240\u4ee5\u5f00\u59cb\u6784\u9020\u51fd\u6570\uff1a\n\n\u6211\u4eec\u4ece\u5934\uff08\u6b64\u7ec4\u6570\u7684\u6700\u5de6\u7aef\uff09\u627e\u5230\u5c3e\u90e8\uff08~\u6700\u53f3\u7aef\uff09\n\n\u627e\u51fa\u6700\u5c0f\u503c\uff0cans+\u6700\u5c0f\u503c\uff0c\u518d\u6bcf\u4e2a\u6570\uff08\u8fd9\u6bb5\u7684\uff09\u90fd\u51cf\u53bb\u6700\u5c0f\u503c\n\n\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u63a5\u4e0b\u6765\u8fd8\u8981\u8fdb\u884c\u9012\u5f52\u7684\u6570\uff08l\uff0cr\uff09\n\n\u5f53\u6211\u4eec\u53d1\u73b0\u51fd\u6570\u4e2dl==r\n\n\u5c31\u53ef\u4ee5\u5427ans+\u6700\u540e\u7684\u90a3\u4e2a\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u5c31\u53ef\u4ee5\u7ed3\u675f\u4e86\n\n\u4e0a\u6a21\u62df\u7684\u4ee3\u7801\uff1a\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint d[100005];\nint ans=0x7fffffff;\nvoid f(int i,int j){\n    if(i>=j){ans+=d[i];return;}\n    if(d[i]==0) {f(i+1,j);return;}\n    if(d[j]==0) {f(i,j-1);return;}\n    int x=i;\n    int minn=d[x];\n    for(int k=i;k<=j;++k){\n        if(minn>d[k]){\n            x=k;\n            minn=d[x];\n        }\n    }\n    ans+=minn;\n    for(int k=i;k<=j;++k){\n        d[k]-=minn;\n    }\n    f(i,x-1);\n    f(x+1,j);\n}\nint main(){\n    int n,m,k;\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;++i){\n        scanf(\"%d\",&d[i]);\n        if(ans>d[i]){\n            ans=d[i];\n            k=i;\n        }\n    }\n    for(int i=1;i<=n;++i){\n        d[i]-=ans;\n    }\n    f(1,k-1);\n    f(k+1,n);\n    printf(\"%d\",ans);\n}\n```\n~~\uff08\u8fd9\u6837\u90fd\u8fc7\u4e86\uff09\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u53d1\u73b0\n\n\u82e5\u67d0\u9ad8\u5ea6\u5c0f\u4e8e\u5176\u524d\u9762\u7684\u90a3\u4e2a\n\n\u90a3\u4e48\u5b83\u5176\u5b9e\u5df2\u7ecf\u88ab\u586b\u5e73\u4e86\n\n\u82e5\u5b83\u5927\u4e8e\u524d\u9762\u7684\u6570\u53ea\u9700\u586b\u5e73\u5176\u5dee\u503c\u5c31\u884c\n\n\u6240\u4ee5\u53ef\u5f97\u51fa\u65b9\u7a0b\uff1a\n\nans+=d[i]-min(d[i],d[i-1])\n\n\u4e0a\u4ee3\u7801\uff1a\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint a[100005];\nint ans=0;\nint n;\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;++i){\n        scanf(\"%d\",&a[i]);\n        ans+=a[i]-min(a[i],a[i-1]);\n    }\n    printf(\"%d\",ans);\n}\n```\n\n\u8fd9\u4e2a\u6bd4\u539f\u6765\u5feb\u4e86\u8036\u2196(^\u03c9^)\u2197\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\u6b64\u65b9\u7a0b\u7684\u8ba1\u7b97\u4ec5\u9700\u8981\u4e24\u4e2a\u6570\u636e\n\n\u5c31\u662f\u67d0\u6570\u4e0e\u5176\u524d\u4e00\u4e2a\u6570\n\n\u6240\u4ee5\u53ef\u4ee5\u8fdb\u884c\u72b6\u6001\u538b\u7f29\n\n\u53bb\u6389\u90a3\u4e2a\u6570\u7ec4\u4ee5\u4e24\u4e2a\u53d8\u91cf\u4ee3\u66ff\n\n\u6700\u540e\u4ee3\u7801\uff1a\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint a,b;\nint ans=0;\nint n;\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;++i){\n        scanf(\"%d\",&a);\n        ans+=a-min(a,b);\n        b=a;\n    }\n    printf(\"%d\",ans);\n}\n```\n\n\u9898\u76ee\u8f83\u4e3a\u7b80\u5355\uff08\u6211\u4e5f\u5c31\u53ea\u80fd\u5199\u7b80\u5355\u9898\u89e3\u4e86\u3002\u3002\u3002\u3002\uff09\n\nO(\u2229_\u2229)O\u8c22\u8c22\u89c2\u770b",
        "postTime": 1544799239,
        "uid": 90278,
        "name": "Crazily",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "\u8fd9\u9898\u867d\u7136\u8bf4\u662f\u666e\u53ca-\u96be\u5ea6\uff0c\u4f46\u4f9d\u7136\u6709\u4e9b\u601d\u7ef4\u542b\u91cf\u3002\n\n\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u8fd9\u6837\u60f3\uff1a\u4e3a\u4ec0\u4e48\u533a\u95f4\u7684\u4e2a\u6570\u4e0d\u7b49\u4e8e\u6700\u9ad8\u7684\u5757\u5462\uff1f\u662f\u56e0\u4e3a\u642d\u5b8c\u4e00\u4e2a\u533a\u95f4\u53ef\u80fd\u4f1a\u9020\u6210\u533a\u95f4\u7684\u5206\u5272\u3002\n\n\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u4ece\u5de6\u5411\u53f3\u6446\u79ef\u6728\uff0c\u5982\u679c\u5f53\u524d\u5217\u9700\u8981\u7684\u9ad8\u5ea6\u5927\u4e8e\u524d\u4e00\u5217\u9700\u8981\u7684\u9ad8\u5ea6\uff0c\u90a3\u4e48\u5f53\u524d\u4e0d\u4f1a\u9020\u6210\u533a\u95f4\u5206\u5272\uff0c\u8bb0\u5f55\u8fd9\u4e2a\u9012\u589e\u5e8f\u5217\u7684\u6700\u5927\u9ad8\u5ea6\u3002\n\n\u5982\u679c\u5c0f\u4e8e\u524d\u4e00\u5217\u9700\u8981\u7684\u9ad8\u5ea6\uff0c\u9020\u6210\u4e86\u533a\u95f4\u5206\u5272\uff0c\u8fd9\u65f6\u6211\u4eec\u9700\u8981\u628a\u201c\u51f8\u201d\u8d77\u7684\u6728\u5757\u6240\u9700\u533a\u95f4\u8ba1\u5165\u7b54\u6848\uff0c\u56e0\u4e3a\u5b83\u4eec\u5df2\u7ecf\u88ab\u5206\u5272\u5f00\u6765\uff0c\u65e0\u6cd5\u518d\u4e0e\u540e\u9762\u7684\u5757\u8fde\u5728\u4e00\u8d77\u3002\u4e0d\u96be\u60f3\u8c61\uff0c\u8fd9\u91cc\u7684\u201c\u51f8\u201d\u6307\u7684\u662f\u4e4b\u524d\u6700\u5927\u9ad8\u5ea6\u4e0e\u5f53\u524d\u5757\u6240\u9700\u9ad8\u5ea6\u4e4b\u5dee\u3002\u56e0\u4e3a\u662f\u9012\u589e\u5e8f\u5217\uff0c\u90a3\u4e48\u8fd9\u51e0\u5217\u6240\u9700\u7684\u533a\u95f4\u5c31\u662f\u201c\u51f8\u201d\u8d77\u7684\u9ad8\u5ea6\u3002\n\n\u8fd9\u6837\u5229\u7528\u8d2a\u5fc3\u601d\u60f3\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO\uff08n\uff09\uff0c\u4f46\u662f\u522b\u5fd8\u4e86\u8981\u628a\u6700\u540e\u4e00\u4e2a\u9012\u589e\u5e8f\u5217\u52a0\u4e0a\u54e6\uff08\u5373\u5faa\u73af\u5230n+1\uff09\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,a[100010],ans;\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++) \n\t\tcin>>a[i];\n\tint base=0;\n\tfor(int i=1;i<=n+1;i++){\n\t\tif(a[i]>=base)base=a[i];\n\t\telse ans+=(base-a[i]),base=a[i];\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1566913048,
        "uid": 116740,
        "name": "Qutam",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "\u9898\u76ee\u5927\u610f\uff1a\n\n\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3an\u7684\u5e8f\u5217\uff0c\u6bcf\u4e00\u6b21\u53ef\u4ee5\u9009\u62e9\u4e00\u6bb5\u8fde\u7eed\u7684\u533a\u95f4\uff0c\u5c06\u8be5\u533a\u95f4\u6bcf\u4e00\u4e2a\u6570\u90fd\u51cf1\uff0c\u6bcf\u4e00\u4e2a\u6570\u7684\u6700\u5c0f\u503c\u4e3a0\uff0c\u95ee\u6700\u5c11\u9700\u8981\u6267\u884c\u591a\u5c11\u6b21\u8be5\u64cd\u4f5c\u3002\n\n\u867d\u7136\u6b63\u89e3\u6bd4\u8f83\u597d\u50cf\uff0c\u4f46\u662f\u6211\u4f18\u5316\u4f18\u5316\u4e86\u66b4\u529b\u53d1\u73b0\u4e5f\u8fc7\u4e86\u3002\u3002\u3002\n\n\u6734\u7d20\u7b97\u6cd580\u5206\uff1a\n\n\u6bcf\u4e00\u6b21\u4ece\u5934\u627e\u5230\u7b2c\u4e00\u4e2a\u4e0d\u4e3a0\u7684\u6570\uff0c\u5f80\u540e\u4e00\u76f4\u627e\u5230\u7b2c\u4e00\u4e2a0\uff0c\u4ed6\u7684\u524d\u4e00\u4e2a\u6570\u5982\u679c\u662f0\uff0c\u90a3\u4e48\u5c31\u4ee3\u8868\u53ef\u4ee5\u7ed3\u675f\u4e86\uff0c\u5982\u679c\u4e0d\u662f\uff0clr\u533a\u95f4\u6bcf\u4e00\u9879\u5c31\u51cf\u53bb\u8be5\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u5e76\u4e14ans++\u3002\n\n\u6b63\u786e\u6027\u8fd8\u662f\u6bd4\u8f83\u663e\u7136\u7684\uff0c\u4e0d\u77e5\u9053\u7684\u8bdd\u53ef\u4ee5\u5728\u4e0b\u9762\u7559\u8a00\u3002\n\n \n\n\u968f\u4fbf\u641e\u641e100\u5206\uff1a\n\n\u7531\u4e8en\u5df2\u7ecf\u8fbe\u523010\u7684\u4e94\u6b21\u65b9\uff0c\u8fd9\u79cd\u679a\u4e3e\u65b9\u5f0f\u5f88\u6709\u53ef\u80fd\u4f1a\u8d85\u65f6\uff0c\u6211\u4eec\u8003\u8651\u4f18\u5316\uff1a\n\n\u6211\u4eec\u6bcf\u4e00\u6b21\u8bb0\u5f55\u4e00\u4e0b\u627e\u5230\u7684l\uff0c\u8fd9\u4e2al\u7684\u4f4d\u7f6e\u4ee3\u8868\u4ece\u5934\u5230\u8fd9\u7684\u6570\u90fd\u662f0\uff0c\u90a3\u4e48\u6211\u4eec\u4e0b\u4e00\u6b21\u679a\u4e3e\u65f6\u4ece\u8fd9\u91cc\u5f00\u59cb\u679a\u4e3e\u5c31\u597d\u4e86\u3002\n\n \n\n\u6b63\u89e3\uff1a\n\n\u8d2a\u5fc3\u7b56\u7565\uff1a\u6bcf\u5f53\u6211\u4eec\u626b\u5230\u4e00\u4e2a\u6570\uff0c\u5982\u679c\u5b83\u5927\u4e8e\u524d\u4e00\u4e2a\u6570\u7b54\u6848\u5c31\u52a0\u4e0a\u5dee\u503c\uff0c\u6b63\u786e\u6027\uff1f\n\n\u8fd9\u662f\u6bd4\u8f83\u663e\u7136\u7684\uff0c\u5982\u679c\u6bd4\u524d\u4e00\u4e2a\u6570\u5c0f\uff0c\u90a3\u4e48\u51cf\u524d\u4e00\u4e2a\u6570\u65f6\u5c31\u53ef\u4ee5\u987a\u4fbf\u628a\u4ed6\u51cf\u6389\uff0c\u5982\u679c\u5927\u4e8e\u5219\u8fd8\u5f97\u81ea\u5df1\u51cf\u3002\n\n \n\n\u6700\u540e\uff0c\u9644\u4e0a\u672c\u9898\u4ee3\u7801\uff1a\n\n\u968f\u4fbf\u641e\u641e\uff1a\u8dd1\u7684\u8fd8\u662f\u633a\u5feb\u7684\uff0c\u5c31\u6bd4\u6b63\u89e3\u6162\u4e864ms\n\n```cpp\n#include<cstdio>\n#define maxn 100000\nusing namespace std;\n\nint n,a[maxn+5],ans,last;\n\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    while(1)\n    {\n        int l=0,r=n,minn=10005;\n        for(int i=last;i<=n;i++)\n        {\n            if(a[i]>0)\n            {\n                l=i;\n                last=l;\n                break;\n            }\n        }\n        if(l==0)\n        {\n            break;\n        }\n        for(int i=l;i<=n;i++)\n        {\n            if(a[i]<=0)\n            {\n                r=i-1;\n                break;\n            }\n            if(a[i]<minn)\n            {\n                minn=a[i];\n            }\n        }\n        for(int i=l;i<=r;i++)\n        {\n            a[i]-=minn;\n        }\n        ans+=minn;\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```\n\n\u6b63\u89e3\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\nusing namespace std;\nint main()\n{\n    int n,a,last=0,ans=0;\n    cin>>n;\n    for(int i=1;i<=n;i++)\n    {\n        cin>>a;\n        if(a>last) ans+=(a-last);\n        last=a;\n    }\n    cout<<ans<<endl;\n}\n```\n",
        "postTime": 1553353665,
        "uid": 133227,
        "name": "\u4e8e\u4e30\u6797",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "\u7b2c\u4e00\u6b21\u5199\u9898\u89e3\uff0c\u867d\u7136\u770b\u5230\u597d\u591a\u65b9\u6cd5\u76f8\u540c\u7684\uff0c\u4f46\u662f\u5e94\u8be5\u6ca1\u6709\u6211\u7684\u8be6\u7ec6\n\n\u6240\u4ee5\u8fdb\u5165\u6b63\u9898\n### \u5ba1\u9898+\u601d\u8003\n\u9898\u76ee\u8981\u6c42\u9009**\u4e00\u6bb5\u8fde\u7eed\u7684\u533a\u95f4**\uff0c\u6240\u4ee5\u5982\u679c\u540c\u4e00\u4e2a\u9ad8\u5ea6\uff0c\u53c8\u5728\u76f8\u8fde\u7684\u533a\u95f4\uff0c\u90a3\u4e48\u4e00\u6b21\u64cd\u4f5c\u5c31\u53ef\u4ee5\u641e\u5b9a\n\n\u5982\u679c\u9ad8\u5ea6\u76f8\u540c\u7684\u4f4d\u7f6e\u51fa\u73b0\u7f3a\u53e3\uff0c\u90a3\u4e48\u5c31\u8981\u589e\u52a0\u4e00\u6b21\u64cd\u4f5c\n### \u8fdb\u4e00\u6b65\u601d\u8003\n\u63a5\u4e0b\u6765\u770b\u6837\u4f8b\n\n>5\n\n>2 3 4 1 2\n\n\u5148\u6784\u601d\u4e00\u4e0b\u8fd9\u4e2a\u56fe\n\u5927\u6982\u662f\u8fd9\u6837(markdown\u4e0d\u597d\u64cd\u4f5c\uff0c\u7b80\u5355\u753b\u4e00\u4e0b\uff0c@\u8868\u793a\u79ef\u6728\uff0c=\u4e3a\u7a7a\u767d\uff09\n\n====@\n\n==@ @\n\n@ @ @ ==@   \n\n@ @ @ @ @\n\n\u53ef\u4ee5\u770b\u51fa\uff0c\u7b2c\u4e00\u5c42\u90fd\u4e00\u6837\u9ad8\uff0c\u6240\u4ee5\u4e00\u6b21\u64cd\u4f5c\u5b8c\u6210\uff0c\u7b2c\u4e8c\u884c\u7531\u4e8e\u7b2c\u56db\u5217\u51fa\u73b0\u7a7a\u7f3a\uff0c\u6240\u4ee5\u9700\u8981\u4e24\u6b21\u64cd\u4f5c...\u4ee5\u6b64\u7c7b\u63a8\uff0c\u4e00\u51715\u6b21\n### \u7b54\u6848\u5c31\u5728\u773c\u524d\n\u4e8e\u662f\u6211\u4eec\u8981\u600e\u4e48\u5b9e\u73b0\u8fd9\u4e2a\u64cd\u4f5c\u5462\uff1f\n\n\u4ece\u5de6\u5f80\u53f3\u8bfb\u5165\u6570\u636e\uff0c\u6a21\u62df\u4ece\u5de6\u5f80\u53f3\u589e\u9ad8\u7684\u8fc7\u7a0b\n\n\u5982\u679c\u5f53\u524d\u4f4d\u7f6e\u7684\u9ad8\u5ea6\u5927\u4e8e\u4e4b\u524d\u4f4d\u7f6e\u7684\u9ad8\u5ea6\uff0c\u90a3\u4e48\u589e\u52a0\u9ad8\u5ea6\u4e4b\u5dee\u6b21\u64cd\u4f5c\n\n\u5982\u679c\u7b49\u4e8e\u6216\u4f4e\u4e8e\u5219\u4e0d\u7528\u64cd\u4f5c\n\nOK\uff0c\u6211\u4eec\u770b\u4ee3\u7801\n```cpp\n#include<iostream>\nusing namespace std;\nint main(){\n\tint n,s=0;//s\u4e3a\u8ba1\u6570\u5668\n\tint h0=0,h1;//h0\u524d\u6b21\u7684\u9ad8\u5ea6\uff0ch1\u4e3a\u5f53\u524d\u9ad8\u5ea6\n\tcin>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>h1;\n\t\tif(h1>h0)//\u5982\u679c\u5927\u4e8e\u5219\u589e\u52a0\u64cd\u4f5c\n\t\t\ts+=h1-h0;\n\t\th0=h1;\t//\u66f4\u65b0\u5f53\u524d\u9ad8\u5ea6\n\t}\n\tcout<<s;//\u8f93\u51fa\n\treturn 0;\n}\n```\n\n\u7b2c\u4e00\u6b21\u53d1\uff0c\u6709\u4ec0\u4e48\u4e0d\u8db3\u9ebb\u70e6\u6307\u51fa\n\n\u6c42\u8fc7\n\n",
        "postTime": 1564653714,
        "uid": 38505,
        "name": "hucy2021",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "\u7b80\u6d01\u660e\u4e86\u7684O\uff08n\uff09\u7b97\u6cd5\uff1a\n\n\u6bcf\u6b21\u8bfb\u5165\u79ef\u6728\u9ad8\u5ea6\uff0c\u5982\u679c\u672c\u6b21\u8bfb\u5165\u6570\u636e\u6bd4\u4e0a\u6b21\u8bfb\u5165\u6570\u636e\u8981\u5927\uff0c\u5c06\u64cd\u4f5c\u6b21\u6570\u52a0\u4e0a\u672c\u6b21\u8bfb\u5165\u6570\u636e\u51cf\u4e0a\u6b21\u8bfb\u5165\u6570\u636e\u7684\u5dee\uff0c\u80fd\u591f\u5f88\u8f7b\u6613\u7684\u5f97\u5230\u6b63\u786e\u7ed3\u679c\uff0c\u8bc1\u660e\u4e5f\u5f88\u7b80\u5355\uff0c\u5177\u4f53\u5728\u8fd9\u91cc\u4e0d\u8be6\u7ec6\u8d58\u8ff0\u3002\n\n\n\u9644\u9001\u4ee3\u7801\uff1a\n\n```cpp\n\n#include <cstdio>\nint main()\n{\n    int a=0,b=0,n,sum=0;\n    scanf(\"%d\",&n);\n    for (int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a);\n        if (a>b) sum+=a-b;\n        b=a;\n    }              \n    printf(\"%d\",sum);      \n}\n\n```",
        "postTime": 1384257729,
        "uid": 954,
        "name": "fadeAwayLi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "\u524d\u6392\u63d0\u793a\uff1a\u672c\u9898\u89e3**\u5e76\u4e0d\u662f**\uff08\u4e5f\u8bb8\u662f\uff1f\uff09\u666e\u53ca\u5185\u5bb9\uff01\r\n\r\n\u9996\u5148\u4f60\u770b\u5230\u8fd9\u4e2a\u9898\u8981\u6c42\u7684\u4e1c\u897f\u662f\u53ef\u4ee5\u7528\u7ebf\u6027\u89c4\u5212\u63cf\u8ff0\u7684\uff01\u6211\u4ee4\u6bcf\u4e2a\u533a\u95f4 $[l,r]$ \u88ab\u64cd\u4f5c\u7684\u6b21\u6570\u4e3a\u4e00\u4e2a\u53d8\u91cf $x_{l,r}$\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\u5bf9\u5e94\u4e00\u4e2a\u7ea6\u675f\uff0c\u5199\u51fa\u7ebf\u6027\u89c4\u5212\u5f0f\uff1a\r\n$$\\begin{aligned}\\text{minimize}\\sum x_{l,r}\\\\\\begin{cases}\\forall i,\\sum\\limits_{i\\in[l,r]}x_{l,r}=a_i\\\\\\forall x_{l,r}\\ge0\\end{cases}\\end{aligned}$$\r\n\u7136\u540e\u786c\u4e0a\u5bf9\u5076\uff01\u7531\u4e8e\u662f\u666e\u53ca\u7ec4\u9898\u89e3\u6240\u4ee5\u6211\u73b0\u573a\u89e3\u91ca\u4e00\u4e0b\u600e\u4e48\u5bf9\u5076\uff0c\u5c31\u662f\u4e0b\u9762\u8fd9\u4e2a\u56fe\uff1a\r\n\r\n[![](https://img-blog.csdnimg.cn/20210223004933901.png)](https://blog.csdn.net/qq_43657442/article/details/106074037)\r\n\r\n\uff08\u51fa\u5904\u70b9\u51fb\u56fe\u7247\uff09\r\n\r\n\u5bf9\u5076\u540e\u6bcf\u4e2a\u4f4d\u7f6e\u5bf9\u5e94\u4e00\u4e2a $b_i$\uff0c\u5199\u51fa\u5bf9\u5076\u4e4b\u540e\u7684\u5f0f\u5b50\uff1a\r\n$$\\begin{aligned}\\text{maximize}\\sum a_ib_i\\\\\\forall[l,r],\\sum\\limits_{i\\in[l,r]}b_{i}\\le1\\end{aligned}$$\r\n\u7528\u4eba\u8bdd\u89e3\u91ca\u4e00\u4e0b\uff0c\u5c31\u662f\u6c42\u4e00\u4e2a\u5e8f\u5217 $b$ \u4f7f\u5f97\u6700\u5927\u5b50\u6bb5\u548c\u4e0d\u5927\u4e8e $1$\uff0c\u6700\u540e\u6700\u5927\u5316 $a_ib_i$ \u7684\u548c\u3002\u73b0\u5728\u4f60\u53d1\u73b0\u4f60\u5df2\u7ecf\u628a\u4e00\u4e2a\u4e0d\u53ef\u505a\u9898\uff08\u5927\u5618\uff09\u8f6c\u5316\u6210\u4e86\u4e00\u4e2a\u66f4\u52a0\u4e0d\u53ef\u505a\u7684\u9898\uff01\u8ba9\u6211\u4eec\u6765\u5206\u6790\u4e00\u4e0b\u6027\u8d28\uff1a\r\n\r\n\u9996\u5148\u5982\u679c\u6709\u4e24\u4e2a $b$ \u5927\u4e8e\u96f6\u5e76\u4e14\u5b83\u4eec\u4e2d\u95f4\u5168\u662f $0$\uff0c\u90a3\u4e48\u53ef\u4ee5\u628a\u5176\u4e2d $a$ \u5927\u4e00\u70b9\u7684\u90a3\u4e2a\u53d8\u6210\u4e24\u4e2a\u7684\u548c\uff0c\u5269\u4e0b\u4e00\u4e2a\u53d8\u6210\u96f6\uff0c\u8fd9\u6837\u663e\u7136\u662f\u4e0d\u4f1a\u4f7f\u5f97\u7ea6\u675f\u88ab\u7834\u574f\u6216\u662f\u4f7f\u7b54\u6848\u53d8\u52a3\u3002\u800c\u6709\u4e24\u4e2a\u76f8\u90bb\u7684\u5c0f\u4e8e\u96f6\u7684 $b$ \u65f6\u4e5f\u662f\u540c\u7406\uff0c\u6240\u4ee5\u628a\u96f6\u53bb\u6389\u4e4b\u540e $b$ \u5fc5\u7136\u662f\u6b63\u6570\u548c\u8d1f\u6570\u4ea4\u66ff\u51fa\u73b0\u7684\u3002\r\n\r\n\u8003\u8651\u5982\u679c $b$ \u5e8f\u5217\u4e2d\u6709\u4e00\u4e2a\u8d1f\u6570\u5927\u4e8e $-1$\uff0c\u8003\u8651\u5b83\u4e24\u8fb9\u7684\u4e24\u4e2a\u6b63\u6570\u3002\u5982\u679c\u5176\u4e2d\u6709\u4e00\u4e2a\u4e3a $1$\uff0c\u90a3\u4e48\u628a\u8fd9\u4e2a\u8d1f\u6570\u548c\u53e6\u4e00\u4e2a\u90fd\u53d8\u6210\u96f6\u5fc5\u7136\u4e0d\u52a3\u3002\u5426\u5219\u82e5\u8fd9\u4e2a\u8d1f\u6570\u5bf9\u5e94\u7684 $a$ \u6bd4\u4e24\u4e2a\u6b63\u6570\u5bf9\u5e94\u7684 $a$ \u90fd\u8981\u5927\uff0c\u5219\u628a\u8fd9\u4e2a\u8d1f\u6570\u53d8\u6210\u8fd9\u4e09\u4e2a\u6570\u7684\u548c\uff0c\u4e24\u4e2a\u6b63\u6570\u53d8\u6210\u96f6\u4e0d\u52a3\u3002\u5426\u5219\uff0c\u5c06\u8fd9\u4e2a\u8d1f\u6570\u51cf\u53bb\u4e00\u4e2a\u503c\uff0c\u540c\u65f6\u5c06\u4e24\u4e2a\u6b63\u6570\u4e2d $a$ \u66f4\u5927\u7684\u4e00\u4e2a\u7684 $b$ \u52a0\u4e0a\u540c\u6837\u7684\u503c\uff0c\u4e0d\u52a3\u3002\u90a3\u4e48\u53ef\u4ee5\u8fdb\u884c\u82e5\u5e72\u6b21\u8fd9\u6837\u7684\u64cd\u4f5c\uff0c\u6700\u540e\u6240\u6709\u6b63\u6570\u90fd\u4e3a $1$\uff0c\u8d1f\u6570\u4e3a $-1$\u3002\r\n\r\n\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u5f97\u5230\u4e86\u4e00\u4e2a\u6027\u8d28\uff1a$b$ \u9664 $0$ \u4e4b\u5916\uff0c\u5fc5\u7136\u662f $1$ \u548c $-1$ \u4ea4\u9519\uff0c\u4e8e\u662f\u53ef\u4ee5\u76f4\u63a5 dp \u4e86\u3002\u7531\u4e8e\u662f\u666e\u53ca\u7ec4\u9898\u89e3\u6240\u4ee5\u89e3\u91ca\u4e00\u4e0b\u600e\u4e48 dp\uff1a\u8bbe $f_i$ \u4e3a\u5f53\u524d\u5230\u7b2c $i$ \u4f4d\u7684\u6700\u5927\u503c\uff0c$g_i$ \u4e3a\u5230\u7b2c $i$ \u4f4d\uff0c\u5e76\u4e14\u5728\u4e0b\u4e00\u4e2a $1$ \u4e4b\u524d\u5fc5\u987b\u653e\u4e00\u4e2a $-1$ \u7684\u6700\u5927\u503c\uff0c\u5bb9\u6613\u5199\u51fa\u8f6c\u79fb\u3002\r\n\r\n\u7531\u4e8e\u662f\u666e\u53ca\u7ec4\u9898\u89e3\u6240\u4ee5\u653e\u4e00\u4e0b\u4ee3\u7801\uff1a\r\n```cpp\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\ninline ll readint(){\r\n\tll x=0;\r\n\tbool f=0;\r\n\tchar c=getchar();\r\n\twhile(!isdigit(c)&&c!='-') c=getchar();\r\n\tif(c=='-'){\r\n\t\tf=1;\r\n\t\tc=getchar();\r\n\t}\r\n\twhile(isdigit(c)){\r\n\t\tx=x*10+c-'0';\r\n\t\tc=getchar();\r\n\t}\r\n\treturn f?-x:x;\r\n}\r\nint main(){\r\n\t#ifdef LOCAL\r\n\tfreopen(\"in.txt\",\"r\",stdin);\r\n\tfreopen(\"out.txt\",\"w\",stdout);\r\n\t#endif\r\n\tint n=readint(),f=0,g=0;\r\n\twhile(n--){\r\n\t\tint a=readint(),f2=f,g2=g;\r\n\t\tf=max(f2,g2+a);\r\n\t\tg=max(g2,f2-a);\r\n\t}\r\n\tprintf(\"%d\\n\",f);\r\n\t#ifdef LOCAL\r\n\tfprintf(stderr,\"%d\\n\",(int)clock());\r\n\t#endif\r\n\treturn 0;\r\n}\r\n```\r\n\u9898\u5916\u8bdd\uff1a\u8f6c\u5316\u51fa\u6765\u7684\u8fd9\u4e2a\u9898\u6211\u672c\u6765\u7ed9\u7684\u505a\u6cd5\u662f\u7528\u5bf9\u5076\u8f6c\u8f6c\u5316\u6210\u79ef\u6728\u5927\u8d5b\uff0c\u7ed3\u679c\u88ab fyk \u7528\u76f4\u63a5 dp \u65e5\u4e86\u2026\u2026\u4e00\u6c14\u4e4b\u4e0b\uff08\u96fe\uff09\u6c34\u4e86\u8fd9\u4e2a\u9898\u89e3\u3002\r\n\r\n\u53e6\u5916\u6211\u5e76\u4e0d\u4f1a\u7528\u8fd9\u9898\u7684\u8bed\u8a00\u76f4\u63a5\u89e3\u91ca\u8fd9\u4e2a\u4ee3\u7801\uff0c\u6709\u6ca1\u6709\u8001\u54e5\u6559\u6559\u6211\u554a\u3002",
        "postTime": 1632296868,
        "uid": 174045,
        "name": "FZzzz",
        "ccfLevel": 0,
        "title": "\u79ef\u6728\u5927\u8d5b\u7684\u5168\u65b0\u8d85\u7ea7\u65e0\u654c\u70ab\u9177\u540a\u70b8\u5929\u505a\u6cd5\uff01\uff08\u8be6\u7ec6\u63ed\u79d8\uff09"
    },
    {
        "content": "\u697c\u4e0b\u90a3\u79cd\u65b9\u6cd5\u5f88\u7b80\u5355\u3002\n\n\u6211\u6765\u8bf4\u4e00\u79cd\u6bd4\u8f83\u65e0\u804a\u7684\u65b9\u6cd5.\n\n\u7528\u5e76\u67e5\u96c6\n\n\u6700\u597d\u7684\u7406\u89e3\u65b9\u6cd5\u662f\u628a\u4ee3\u7801\u7ed9\u6a21\u62df\u4e00\u904d\u3002\n\n\u8fd9\u662f\u4e00\u4e2a\u56fe(\u56fe\u7565)\n\n2 3 4 1 2\n\n\u8bba\u4e00\u5757\u79ef\u6728\u53ef\u4ee5\u94fa\u591a\u957f\uff0c\u4e5f\u5c31\u662f\u5728\u8fd9\u4e00\u884c\u4e2d\uff0c\u4e00\u76f4\u5411\u5de6\u53f3\u4e24\u8fb9\u5ef6\u4f38\u76f4\u5230\u9047\u5230\u4e00\u4e2a\u5927\u53a6\u6ca1\u6709\u8fd9\u4e48\u591a\u5c42\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u4ece\u4e0a\u5f80\u4e0b\u5806\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u5c06\u5927\u53a6\u9ad8\u5ea6\u4ece\u5c0f\u5230\u5927\u6392\uff0c\u8bb0\u5f97\u5b58\u4e0b\u6bcf\u4e00\u79ef\u6728\u539f\u672c\u7684\u5e8f\u53f7\u3002\n\n\u7136\u540e\u6211\u4eec\u4ece\u6700\u9ad8\u7684\u5f00\u59cb\u5806\uff0c\u6211\u4eec\u6bcf\u6b21\u90fd\u8981\u5c06\u6709\u8fd9\u4e48\u79ef\u6728\u90fd\u5806\u4e00\u5757\u7816\uff0c\n\n\u4e0d\u8fc7\uff0c\u76f8\u90bb\u7684\u4e24\u5757\u53ef\u4ee5\u4e00\u8d77\u5806\uff0c\u8fd9\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u5c06\u8fd92\u4e2a\u5927\u53a6\u5408\u5e76\u6210\u8d77\u6765\uff0c\u4e00\u8d77\u5806\uff08\u6240\u4ee5\u63a5\u4e0b\u6765\u66f4\u77ee\u7684\u697c\u5c42\u4e5f\u80fd\u4e00\u8d77\u5806\uff09\uff0c\u5408\u5e76\u4e4b\u540e\u5c06\u8981\u5806\u7684\u5927\u53a6\u6570\u91cf-1\u3002\u5982\u679c\u65c1\u8fb9\u7684\u5927\u53a6\u6ca1\u6709\u8fd9\u4e48\u9ad8\u7684\u8bdd\uff0c\u5c31\u4e0d\u8981\u5408\u5e76\uff08\u4e5f\u5c31\u662f\u4ee3\u7801\u4e2d\u7238\u7238\u4e3a\u7a7a\u7684\uff0c\u56e0\u4e3a\u5982\u679c\u6709\u8fd9\u4e48\u9ad8\u7684\u8bdd\u5c31\u4f1a\u6709\u7238\u7238\uff09\u3002\n\n\u6bcf\u5806\u4e00\u5c42\u90fd\u8981\u52a0\u4e0a\u9700\u8981\u7684\u7816\u7684\u5757\u6570\u3002\n\n\u6700\u540e\u8f93\u51fa\u7ed3\u679c\u3002\n\n```cpp\n/*\nID: ylx14271\nPROG: \u79ef\u6728\u5927\u8d5b \nLANG: C++     \n*/\n#include<set>  \n#include<map>  \n#include<list>  \n#include<queue>  \n#include<stack>  \n#include<string>  \n#include<math.h>  \n#include<time.h>  \n#include<vector>  \n#include<bitset>  \n#include<memory>  \n#include<utility>  \n#include<stdio.h>  \n#include<sstream>  \n#include<iostream>  \n#include<stdlib.h>  \n#include<string.h>  \n#include<algorithm> \n#define LL unsigned long long   \nusing namespace std;\nint f[100010];\nint n;\nint i,j;\nstruct node\n{\n    int b;\n    int x;\n}a[100010];\nint sum,num;\nint p,k;\nbool comp(const node &xx,const node &yy)\n{\n    if (xx.x>yy.x) return true; else\n    if (xx.x==yy.x&&xx.b<yy.b) return true;\n    else return false;\n}\nint gf(int x)//\u5e76\u67e5\u96c6\u4e4b\u627e\u7238\u7238 \n{\n    return f[x]==x?x:f[x]=gf(f[x]);\n} \nvoid u(int x,int y)//\u5408\u5e76\n{\n    int fx=gf(x);\n    int fy=gf(y);\n    if (!fx||!fy) return;//\u6709\u4e00\u5e62\u5927\u53a6\u9ad8\u5ea6\u6ca1\u6709\u8fbe\u5230\u76ee\u524d\u641c\u7684\u9ad8\u5ea6\uff08\u5c31\u662f\u76ee\u524d\u7238\u7238\u4e3a\u7a7a\uff09 \n    num--;//\u8fd9\u5c42\u8981\u5806\u7684\u79ef\u6728\u5757\u6570\u8bb0\u5f97-1 \n    if (fx!=fy) f[fx]=fy;//\u5408\u5e76 \n    return; \n} \nint main() \n{\n    scanf(\"%d\",&n);\n    for (i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i].x);\n        a[i].b=i;//\u539f\u672c\u7684\u5e8f\u53f7 \n    }\n    sort(a+1,a+n+1,comp);\n    k=1;\n    sum=0; \n    for (i=a[1].x;i;i--)//\u6a21\u62df\u4ece\u4e0a\u5f80\u4e0b\u5806\u79ef\u6728 \n    {\n        while (a[k].x==i)//\u79ef\u6728\u521a\u597d\u662f\u8fd9\u4e2a\u9ad8\u5ea6 \n        {\n            f[a[k].b]=a[k].b;//\u7238\u7238\u8d4b\u503c\u4e3a\u81ea\u5df1 \n            num++;//\u8fd9\u5c42\u8981\u5806\u7684\u79ef\u6728+1\n            u(a[k].b-1,a[k].b);//\u548c\u5de6\u8fb9\u7684\u5408\u5e76 \n            u(a[k].b+1,a[k].b);//\u548c\u53f3\u8fb9\u7684\u5408\u5e76 \n            k++;//\u76ee\u524d\u641c\u7684\u7b2ck\u5ea7\u5927\u53a6 \n        }\n        sum+=num;//\u7edf\u8ba1\u79ef\u6728\u6570 \n    }\n    cout<<sum;\n    return 0;\n}\n```",
        "postTime": 1476106811,
        "uid": 2674,
        "name": "\u300cQQ\u7ea2\u5305\u300d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "\u4ee3\u7801\u4e0b\u9762\u5927\u4f6c\u90fd\u8d34\u7684\u5f88\u8be6\u7ec6\u4e86\n\n\u6211\u53ea\u662f\u60f3\u7ed980\u5206\u6734\u7d20\u7b97\u6cd5\u88ab\u5361\u4e86\u7684\u4eba\u8bf4\u4e00\u53e5\n\ntle\u591a\u534a\u6570\u662f\u6ca1\u6709\u771f\u6b63\u7684\u7406\u89e3\u7684\u9898\u610f\u3002\n\n\u542c\u6211\u7684\uff0c\u4e0d\u8981\u5f80\u4e0b\u7ffb\u9898\u89e3\uff0c\u5c06\u6837\u4f8b\u753b\u51fa\u6765\u3002\u60f3\u4e00\u4e0b\u76f8\u90bb\u7684\u4e24\u4e2a\u6570\u6709\u4ec0\u4e48\u5173\u7cfb\u3002\n\n\u987a\u4fbf\u8d44\u74f7\u4e00\u4e0b\u6d1b\u8c37\u3002\u4e0d\u7ba1\u8fc7\u6ca1\u8fc7\n",
        "postTime": 1506780293,
        "uid": 28007,
        "name": "Lance1ot",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "\u5355\u8c03\u6808\n\n\u5982\u679c\u9047\u5230\u4e00\u4e2a\u6bd4q[top]\u4f4e\u7684\u79ef\u6728\n\n\u90a3\u4e48\u53ef\u4ee5\u76f4\u63a5\u51fa\u6808\n\n\u76f8\u5f53\u4e8e\u628a\u4e00\u4e2a\u5c71\u5cf0\u51f8\u8d77\u7684\u90e8\u5206\u524a\u5e73\u4e86\n\n```cpp\n#include<stdio.h>\n#include<string.h>\n#include<stdlib.h>\n#include<queue>\n#include<math.h>\n#include<map>\n#include<iostream>\nusing namespace std;\nint n,h[100005],i,q[100005],top,tmp,ans;\nint main(){\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&h[i]);\n        tmp=q[top];\n        while(h[i]<q[top])\n            top--;//\u56e0\u4e3a\u51e0\u4e2a\u8fde\u7eed\u9ad8\u5ea6\u7684\u90e8\u5206\u53ef\u5408\u5e76\uff0c\u6240\u4ee5\u53ef\u4ee5\u51fa\u6808\n        if(tmp>h[i])\n            ans+=tmp-h[i];//\u8ba1\u7b97\u5982\u679c\u628a\u5c71\u5cf0\u51f8\u8d77\u90e8\u5206\u94f2\u5e73\uff0c\u8981\u591a\u5c11\u6b21\n        q[++top]=h[i];\n    }\n    printf(\"%d\",ans+q[top]);\n}\n\n```",
        "postTime": 1490019137,
        "uid": 13185,
        "name": "\u53cc\u7ba1\u8367\u5149\u706f",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\n\n\u4e8c\u5206\uff1a\n\n\u627e\u5230\u6700\u5c0f\u7684\u90a3\u4e2a\u6570\uff1b\n\n\u4ece\u90a3\u91cc\u5206\u5f00\u3002\n\n\u90a3\u4e2a\u6570\u5c31\u662f\u6574\u4e2a\u6570\u5217\u9700\u8981\u589e\u52a0\u7684\u6570\u91cf\n\n\u6bd4\u5982\n2 3 4 1 2\n\u6700\u5c0f\u6570\u4e3a1\n\u5219ans+=1\n\n\u7136\u540e1\u5728\u7b2c4\u4f4d\n\u5206\u5f00\u4e24\u961f\n\n2 3 4\n\n2\n\n\u5206\u522b\u6267\u884c\u4e8c\u5206\n\n\u8fb9\u754c\u6761\u4ef6\uff1aleft==right\n\n\u7279\u5224\uff1amin==left\nmin==right\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<cstdio>\nlong long int n,h[1000001];\nlong long int ans;\nlong long int erfen(long long int left/*\u5de6\u8fb9\u754c*/,long long int right/*\u53f3\u8fb9\u754c*/,long long int x/*\u8fd9\u4e2a\u6570\u5217\u5df2\u7ecf\u6267\u884c\u8fc7\u7684\u64cd\u4f5c\u6570*/)//\u4e8c\u5206\u51fd\u6570\n{\n    if(left==right)return h[left]-x;//\u9000\u51fa\uff0c\u8fd4\u56de\u8fd9\u4e2a\u6570\u7684\u5269\u4f59\u64cd\u4f5c\u6570\n    int mi=left;\n    for(int i=left+1;i<=right;i++)\n    {\n        if(h[i]<h[mi])mi=i;//\u5bfb\u627e\u6700\u5c0f\u503c\n    }\n    if(mi==left)return erfen(mi+1,right,h[mi])+h[mi]-x;//\u53ea\u641c\u7d22\u53f3\u8fb9\n    if(mi==right)return erfen(left,mi-1,h[mi])+h[mi]-x;//\u53ea\u641c\u7d22\u5de6\u8fb9\n    return erfen(left,mi-1,h[mi])+erfen(mi+1,right,h[mi])+h[mi]-x;\n}\ninline long long int read()//\u5feb\u8bfb\n{\n    long long int x=0;char c=getchar();\n    while(c<'0'||c>'9')c=getchar();\n    while(c>='0'&&c<='9')\n    {\n        x=(x<<1)+(x<<3)+(c^48);\n        c=getchar();\n    }\n    return x;\n}\nint main()\n{\n    n=read();\n    for(long long int i=1;i<=n;i++)\n    {\n        h[i]=read();\n        if(h[i]==h[i-1])\n        {\n            n--;i--;//\u5982\u679c\u8bfb\u5165\u548c\u524d\u4e00\u4e2a\u76f8\u540c\uff0c\u653e\u5f03\u8bfb\u5165\uff08\u76f8\u540c\u53ef\u4ee5\u89c6\u4e3a\u540c\u4e00\u4e2a\uff09\n        }\n    }\n    ans=erfen(1,n,0);\n    printf(\"%lld\",ans);\n    return 0;\n}\n```\n\n\n# \u4e0b\u9762\uff0c\u7279\u522b\u89e3\u91ca\u4e00\u4e0b  _**\u201cx\u201d**_ \n\n2 3 4 1 2\n\u4e8c\u5206\uff081\uff0c5\uff0c0\uff09\n0\uff1a1-5\u5df2\u7ecf\u8fdb\u884c\u4e860\u6b21\u64cd\u4f5c\n\u4e8c\u5206\uff081\uff0c3\uff0ch[4]\uff09\nh[4]=1\n\n\u6570\u52171-3\u5df2\u7ecf\u8ddf\u968f1-5\u6267\u884c\u4e861\u6b21\n\n\u6240\u4ee5\u4e8c\u5206\uff081\uff0c3\uff0ch[4]\uff09\u7684\u503c\u5e94\u8be5\u51cf\u8fd9\u4e00\u6b21\n\n",
        "postTime": 1572845572,
        "uid": 192989,
        "name": "\u4ea6\u95fb\u695a\u6b4c\u8d77",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "\u6709\u70b9\u6c34\u554a\uff0c\u8fd9\u91cc\u7b80\u5355\u7684\u8bb2\u4e00\u4e0b\u5427\u3002\n\n    \u53ea\u8981n[i]-n[i-1]>0\uff0c\u5c31\u5347\u9ad8\u4e00\u6bb5\u9ad8\u5ea6\uff08\u5347\u9ad8\u503c\u4e3a\u8fd9\u4e00\u5217\u6bd4\u524d\u4e00\u5217\u9ad8\u51fa\u7684\u90e8\u5206\uff09\n    \u6240\u4ee5\u9700\u8981 n[i]-n[i-1] \u6b21\u64cd\u4f5c\u624d\u80fd\u628a\u8fd9\u4e00\u5217\u90fd\u5347\u9ad8\u5230\u6307\u5b9a\u9ad8\u5ea6\n    \u56e0\u4e3a\u5dee\u503c>0\uff0c\u5c31\u8bf4\u660e\u5728 i \u5217\u4e4b\u524d\u8fdb\u884c\u522b\u5347\u9ad8\u64cd\u4f5c\u65f6\u5df2\u7ecf\u53ef\u4ee5\u987a\u5e26\u7740\u628a\u8fd9\u4e00\u884c\u5347\u9ad8\u4e86\uff08\u7b2c2\u5217\u76f8\u6bd4\u7b2c1\u5217\u9700\u8981\u5347\u9ad81\u683c\uff0c\u56e0\u4e3a\u7b2c3\u683c\u53ca\u4ee5\u4e0b\u683c\u5728\u5904\u7406\u7b2c1\u5217\u65f6\u5df2\u7ecf\u987a\u5e26\u7740\u5347\u4e86\uff09\n    \n\n\u6253\u4e0a\u4ee3\u7801\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define ri register int\nconst int sz = 100010;\ninline void rd(int &x){\n    char c=getchar();bool f=0;x=0;\n    while(c>'9'||c<'0'){if(c=='-')f=1;c=getchar();}\n    while(c<='9'&&c>='0'){x=x*10+c-'0';c=getchar();}\n    if(f) x*=-1;\n}\nint n,num[sz],ans;\nint main()\n{\n    rd(n);\n    for(ri i=1;i<=n;i++)\n    {\n        rd(num[i]);\n        if(num[i-1]<num[i])\n        ans+=num[i]-num[i-1];\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1569994267,
        "uid": 151720,
        "name": "AkiwaZawa",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "### \u7b2c\u4e00\u6b21\u89c1\u7c7b\u4f3c\u9898\u662f\u5728\u8ba1\u849c\u5ba2\u4e0a\uff0c\u53ea\u4e0d\u8fc7\u5f53\u65f6\u90a3\u4e2a\u9898\u662f\u5751\uff0c\u8fd9\u4e2a\u662f\u79ef\u6728\u3002\u3002\u3002\u540e\u9762\u5728\u6d1b\u8c37\u4e0a\u770b\u5230\u8fd9\u9898\u540e\u624d\u77e5\u9053\u8fd9\u662fNoip\u7684\u9898\n\u8fd9\u9898\u6211\u662f\u8fd9\u4e48\u60f3\u7684\uff0c\u9010\u4e2a\u628a\u8981\u5806\u7684\u533a\u95f4\u627e\u51fa\uff0c\u8fd9\u4e2a\u533a\u95f4\u5185\u7684\u6700\u5c0f\u9ad8\u5ea6[h\uff08min\uff09]\u4e3a\u8be5\u533a\u95f4\u5185\u672c\u6b21\u8981\u5806\u7684\u6b21\u6570\uff0c\u7136\u540e\u8be5\u533a\u95f4\u5185\u6bcf\u4e2a\u70b9\u6b64\u65f6\u7684\u9ad8\u5ea6h-=h(min)\uff0c\u7136\u540e\u7ee7\u7eed\u627e\u3002\u3002\u3002\n\u4ee3\u7801\u8868\u793a\u5982\u4e0b\n```c++\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934\u6587\u4ef6\nusing namespace std;\nint build[100002];//build[100001]\u662f\u4e3a\u4e86\u7ec8\u6b62\u53f3\u533a\u95f4\uff0c\u6240\u4ee5\u5fc5\u987b\u662fbuild[100002](\u82e5100001\u7684\u8bdd\u5f53n=100000\u65f6\u53ef\u80fd\u627e\u5230\u7684\u53f3\u7aef\u70b9\u9ad8\u5ea6\u53d8\u5f97<0)\nint main()\n{\n\tint n,minn,time=0;\n\tcin>>n;\n\tfor(int i=1;i<=n;i++) cin>>build[i];//\u8f93\u5165\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u9ad8\u5ea6\n\tfor(int i=1;i<=n;i++)\n\t\tif(build[i]!=0)//\u627e\u533a\u95f4\u5de6\u7aef\u70b9\n\t\t{\n\t\t\tint right=i;//\u627e\u5230\u5de6\u7aef\u70b9\u540e\u5f00\u59cb\u627e\u53f3\u7aef\u70b9\n\t\t\tminn=build[i];//\u5f00\u59cb\u627e\u8be5\u533a\u95f4\u5185\u7684\u6700\u5c0f\u9ad8\u5ea6\n\t\t\tfor(int j=i+1;build[j]!=0;j++)//\u627e\u533a\u95f4\u53f3\u7aef\u70b9\n\t\t\t{\n\t\t\t\tif(build[j]<minn) minn=build[j];//\u8be5\u533a\u95f4\u5185\u6b64\u65f6\u7684\u6700\u5c0f\u9ad8\u5ea6\n\t\t\t\tright++;//\u6b64\u65f6\u53f3\u7aef\u70b9\u7684\u4f4d\u7f6e\n\t\t\t}\n\t\t\tfor(int j=i;j<=right;j++) build[j]-=minn;\n\t\t\ttime+=minn;//\u64cd\u4f5c\u6b21\u6570\u4e3a\u4e3a\u8be5\u533a\u95f4\u5185\u7684\u6700\u5c0f\u9ad8\u5ea6\n\t\t\tif(build[i]!=0) i--;//\u5982\u679c\u533a\u95f4\u5de6\u7aef\u70b9\u5904\u672a\u8fbe\u5230\u9700\u6c42\u9ad8\u5ea6\uff0c\u5219\u56de\u5f52\u5de6\u7aef\u70b9\u7ee7\u7eed\u627e\n            //\u6ce8\u610f:\u56e0\u4e3a\u5b8c\u6210\u8fd9\u6b21\u5faa\u73af\u540ei++\uff0c\u6240\u4ee5\u5fc5\u987bi--\n\t\t}\n\tcout<<time;\n\treturn 0;\n}\n```\n\u8be5\u9898\u89e3\u4e5f\u9002\u7528\u4e8eP5019\uff08\u94fa\u8bbe\u9053\u8def\uff09,\n\u8fd9\u5c31\u662f\u8ba1\u849c\u5ba2\u6bd4\u8d5b\u7684\u539f\u9898\uff08P5019\uff09",
        "postTime": 1562080363,
        "uid": 180473,
        "name": "Sherlock_Ezreal",
        "ccfLevel": 0,
        "title": "\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\u554a~~"
    },
    {
        "content": "# talk is free show me the code\n\n _ \u6211\u4eec\u628a\u52a0\u79ef\u6728\u770b\u4f5c\u662f\u4ece\u76ee\u6807\u4e2d\u51cf\u9ad8\u5ea6\uff0c\u51cf\u5230\u5168\u90e8\u4e3a0\u5c31\u7b97\u505a\u51fa\u6765\u5566 _\n\n\u624b\u52a8\u6a21\u62df\u6216\u8005\u7a0d\u5fae\u4e00\u7b97\uff0c\n~~\u663e\u7136~~/~~\u6ce8\u610f\u5230~~/~~\u6613\u77e5~~ \n\n\n\u53d1\u73b0\uff1a\u6700\u4f18\u505a\u6cd5\u7684\u7b2c\u4e00\u6b65\u4e00\u5b9a\u662f\u9020\u4e00\u4e2a \u957f\u5ea6\u4e3an\uff0c\u9ad8\u5ea6\u4e3a\u76ee\u6807\u79ef\u6728\u6700\u5c0f\u9ad8\u5ea6\u7684\u5757\u3002\n\n\u53c2\u8003\u4e0a\u65b9\u659c\u4f53\u5b57\uff0c\u8fd9\u6837\u505a\u4e4b\u540e\u5e8f\u5217\u4e2d\u81f3\u5c11\u51fa\u73b0\u4e00\u4e2a0\uff0c\u6ca1\u6cd5\u8de8\u8d8a\u5b83\u52a0\u79ef\u6728\uff08\u51cf\u9ad8\u5ea6\uff09\uff0c\u6240\u4ee5\u4e4b\u540e\u7684\u64cd\u4f5c\u4e00\u5b9a\u5f97\u5206\u5230\u4e24\u8fb9\u8fdb\u884c\uff0c\u4e24\u8fb9\u53c8\u53ef\u4ee5\u6309\u7167\u4e0a\u8ff0\u65b9\u6cd5\u5904\u7406\u3002\n\n\n\n------------\n\n\u81f3\u6b64\u6211\u4eec\u6210\u529f\u627e\u5230\u4e86\u628a\u539f\u95ee\u9898\u5212\u5206\u4e3a\u81f3\u5c11\u4e24\u4e2a\u89c4\u6a21\u66f4\u5c0f\u7684\u5b50\u95ee\u9898\uff0c\u5982\u4f55\u628a\u5b50\u95ee\u9898\u7684\u7b54\u6848\u5408\u5e76\u7684\u8bdd\u53ea\u9700\u8981\u52a0\u8d77\u6765\u5c31\u597d\u4e86\uff0c\u522b\u5fd8\u4e86\u6838\u5fc3\u64cd\u4f5c**\u9020\u4e00\u4e2a \u957f\u5ea6\u4e3an\uff0c\u9ad8\u5ea6\u4e3a\u76ee\u6807\u79ef\u6728\u6700\u5c0f\u9ad8\u5ea6\u7684\u5757\u3002**\u4e5f\u662f\u8981\u4f7f\u7528**\u76ee\u6807\u79ef\u6728\u6700\u5c0f\u9ad8\u5ea6**\u4e2a\u64cd\u4f5c\uff0c\u52a0\u4e0a\u8fd9\u4e2a\u9ad8\u5ea6\uff0cok\uff01\n\n### \u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c\u8fd9\u4e2a\u53ef\u662f\u9700\u8981\u533a\u95f4\u51cf\u6cd5\u64cd\u4f5c\u4e0b\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u5927\u58f0\u544a\u8bc9\u6211\u6211\u4eec\u662f\u4e0d\u662f\u8981\u6572\u4e00\u4e2a\u7ebf\u6bb5\u6811\uff1f\n~~\u8bf4\u662f\u7684\u53ef\u4ee5\u9000\u5f79\u4e86~~ \u5176\u5b9e\u5e76\u4e0d\u9700\u8981\uff0c\u8bf7\u770b\u63a8\u5bfc\n\u95ee\u9898\u5f62\u5f0f\u662f\u8fd9\u6837\u7684\uff08\u5f53\u7136\u8fdb\u5165\u9012\u5f52\u524d\u8981\u533a\u95f4\u4fee\u6539\uff09\n\n**f(l,r)**\n\nf(l,r)=f(l,minp-1)+f(minp+1,r)+minh\n\nl>r \\_\\_\\_\\_\\_\\_\\____ f(l,r)=0\n\nl=r \\_\\_\\_\\_\\_\\_\\____ f(l,r)=h\\[l]\n\n\u6211\u4eec\u7ed9\u628a\u95ee\u9898\u53d8\u6210\u8fd9\u6837 \n\n**f(l,r,b)** //b\u8868\u793a\u5df2\u7ecf\u6709\u7684\u9ad8\u5ea6\n\nl>r \\_\\_\\_\\_\\_\\_\\____ f(l,r,b)=0\n\nl=r \\_\\_\\_\\_\\_\\_\\____ f(l,r,b)=h\\[l]-b\n\nf(l,r,b)=f(l,minp-1,minh)+f(minp+1,r,minh)+(minh-b)\n\u533a\u95f4\u4fee\u6539\u53ef\u4ee5\u7701\u6389\u4e86\uff0c\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u81ea\u5df1\u624b\u52a8\u6a21\u62df\n\n\n\u73b0\u5728\u533a\u95f4\u4fee\u6539\u6ca1\u4e86\uff0c\u53ea\u8981\u80fd\u5feb\u901f\u6c42\u6c42\u533a\u95f4\u6700\u5c0f\u5c31\u597d\u4e86\uff0cRMQ\u95ee\u9898\uff0c\u6572\u4e2aST\u8868\u4e0a\u53bb\uff0c\u7136\u800c\u6570\u636e\u8303\u56f4\u5f88\u5c0f\u3002\u3002\u3002\u6254\u4e2a\u4e0d\u5b8c\u6574\u7684\u7ebf\u6bb5\u6811\u4e0a\u53bb\u5c31\u597d\u4e86\u3002\n\n\n**\u524d\u6392\u63d0\u793a** \u4e0d\u8981\u5728\u9012\u5f52\u7a0b\u5e8f\u91cc\u9762\u628a\u5168\u5c40\u53d8\u91cf\u5f53\u4f5c\u53c2\u6570\uff0ccpp\u4e0d\u662f\u7b97\u6cd5\u5bfc\u8bba\u91cc\u9762\u90a3\u79cd\u6570\u5b66\u8bed\u8a00\uff0c\u6bd4\u65b9\u8bf4\u4f60\u628a\u5168\u5c40\u53d8\u91cfx \u5f53\u4f5cf(l,r,b)\u4e2d\u7684r,\u90a3\u4e48f(l,r,b)=f(x)+f(y(x))+r\u5c31\u4f1a\u6709\u95ee\u9898\uff0c\u5de6\u8fb9\u7684\u9012\u5f52\u4fee\u6539\u4e86x\uff0c\u53f3\u8fb9\u7684y(x)\u4e0d\u518d\u662f\u6211\u4eec\u9700\u8981\u7684\u90a3\u4e2a\u6570\u636e\u4e86\u3002\n\u524d\u6392\u63d0\u793ahaskell\u7b49\u51fd\u6570\u5f0f\u7f16\u7a0b\u8bed\u8a00\u662f\u4e2a\u597d\u4e1c\u897f\u3002\n\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <string>\n#include <cstdio>\nusing namespace std;\nconst int N=100000+10;\nint h[N];\nint L[N<<2],R[N<<2],M[N<<2],P[N<<2];\n#define lc(o) (o<<1)\n#define rc(o) ((o<<1)|1)\nvoid pushup(int o){\n    if(M[lc(o)]<M[rc(o)]){\n        M[o]=M[lc(o)];\n        P[o]=P[lc(o)];\n    }else{\n        M[o]=M[rc(o)];\n        P[o]=P[rc(o)];\n    }\n    return ;\n}\nvoid build(int o,int l,int r){\n    L[o]=l;R[o]=r;\n    if(l==r){\n        M[o]=h[l];\n        P[o]=l;\n        return ;\n    }\n    int mid=(l+r)>>1;\n    build(lc(o),l,mid);build(rc(o),mid+1,r);\n    pushup(o);\n}\n\n\nint pos=0,minv=0;\nint query(int o,int l,int r){\n    if(L[o]>r||R[o]<l)  return 1<<29;\n    if(l<=L[o]&&R[o]<=r){\n        if(M[o]<minv){\n            minv=M[o];\n            pos=P[o];\n        }\n        return M[o];\n    }\n    return min(query(lc(o),l,r),query(rc(o),l,r));\n}\n\nvoid Q(int l,int r){\n    pos=0;minv=1<<29;\n    query(1,l,r);\n}\n\n\nint dfs(int l,int r,int last=0,string pre=\"\"){\n    // cout<<pre;\n    // printf(\"begin dfs(%d,%d,%d)\\n\",l,r,last);\n    if(l==r){\n        // cout<<pre;\n        // printf(\"end dfs(%d,%d,%d)=%d\\n\",l,r,last,h[l]-last);\n        return h[l]-last;\n    }\n    if(l>r){\n        // cout<<pre;\n        // printf(\"end dfs(%d,%d,%d)=%d\\n\",l,r,last,0);\n        return 0;\n    }\n    Q(l,r);\n    int mid=pos,mh=minv;\n    // cout<<pre;printf(\"select %d,height=%d\\n\",pos,mh-last);\n    int dl=dfs(l,mid-1,mh,pre+\"\\t\"),\n        dr=dfs(mid+1,r,mh,pre+\"\\t\");\n    \n    // cout<<pre;\n    // printf(\"end dfs(%d,%d,%d)=%d\\n\",l,r,last,dl+dr+(mh-last));\n    \n    return dl+dr+(mh-last);\n}\n\n\nint main(){\n    int n;cin>>n;\n    for(int i=1;i<=n;i++)\n        cin>>h[i];\n    build(1,1,n);\n    cout<<dfs(1,n)<<endl;\n    \n    return 0;\n}\n```\n\n\n \n\n\u6211\u771f\u662f\u83dc\uff0c\u8fd9\u4e2a\u4e1c\u897f\u5199\u4e86\u534a\u5468\u3002\u3002\u3002\u3002\u3002\n\n",
        "postTime": 1520045092,
        "uid": 15295,
        "name": "hehelego",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "\n```cpp\n//\u601d\u8def\u5c31\u662f\u6a21\u62df\u3002\n//\u6b65\u9aa4\u4e00.\u6bcf\u6b21\u627e\u4e00\u6bb5\u8fde\u7eed\u4e0d\u4e3a0\u533a\u95f4\u7136\u540e\u5c06\u6574\u4e2a\u533a\u95f4\u5168\u90e8\u51cf\u53bb\u8fd9\u4e2a\u533a\u95f4\u7684\u6700\u5c0f\u503c\uff0c\u540c\u65f6\u66f4\u65b0\u7b54\u6848\u3002\n//\u6b65\u9aa4\u4e8c.\u627e\u5230\u6b65\u9aa4\u4e00\u540e\uff0c\u5176\u533a\u95f4\u51fa\u73b0\u4e860\u7684\u4f4d\u7f6e\uff08\u5373\u6b65\u9aa4\u4e00\u4e2d\u5176\u533a\u95f4\u6700\u5c0f\u503c\u7684\u4f4d\u7f6e\uff09\uff1b\n//\u6b65\u9aa4\u4e09.\u5c06\u6b64\u4f4d\u7f6e\u5de6\u53f3\u4e24\u8fb9\u5f53\u505a\u4e00\u6bb5\u4e0d\u4e3a0\u7684\u533a\u95f4\u91cd\u590d\u6b65\u9aa4\u4e00\u3002\n//\u53d1\u73b0\uff0c\u6b64\u9898\u6211\u4eec\u9700\u8981\u66f4\u65b0\u4e00\u4e2a\u533a\u95f4\u6700\u5c0f\u503c\u7684\u4fe1\u606f\uff0c\u7ef4\u62a4\u4e00\u4e2a\u6700\u5c0f\u503c\u7f16\u53f7\uff0c\u6b65\u9aa4\u4e09\u53ef\u4ee5\u7528\u9012\u5f52\u8fdb\u884c\u3002\n//\u4e8e\u662f\u6b64\u9898\u7528\u7ebf\u6bb5\u6811+dfs\u5373\u53ef\u3002 \n//\u9898\u89e3\u6700\u4e0d\u6b63\u5e38\uff0c\u4ee3\u7801\u4e5f\u4e0d\u7b80\u6d01\u3002 \n#include<bits/stdc++.h>\n#define maxn 100000*4+9\n#define mid ((l+r)>>1)\n#define lson rt<<1,l,mid\n#define rson rt<<1|1,mid+1,r\nusing namespace std;\nint m,n,pre,a[maxn],cnt=maxn,minn=maxn,ans,lazy[maxn];\nvoid cin_(int &x)\n{\n    int k=0,kkk=0,kk=1;\n    char c;\n    c=getchar();\n    while(c>'9' || c<'0')\n    {\n        if(c=='-') kk=-1;\n        c=getchar();\n    }\n    while(c>='0' && c<='9')\n    {\n        k=k*10+c-'0';\n        c=getchar();\n    }\n        x=k*kk;\n}                                                           //\u901f\u8bfb\u3002 \nstruct node\n{\n    int w,num;\n}min_[maxn];                                                //\u8bb0\u5f55\u533a\u95f4\u6700\u5c0f\u503c\u7684\u4fe1\u606f\u3002 \nvoid build(int rt,int l,int r)\n{\n        if(l==r) \n    {\n        min_[rt].w=a[l];\n        min_[rt].num=l;\n        return ;\n    }\n        build(lson);\n        build(rson);                                        //\u5230\u8fd9\u4e00\u884c\u662f\u5efa\u6811\u8fc7\u7a0b\u3002 \n        if(min_[rt<<1].w>min_[rt<<1|1].w)\n            {    \n                min_[rt].w=min_[rt<<1|1].w;\n                min_[rt].num=min_[rt<<1|1].num;    \n            }\n        else\n            {\n                min_[rt].w=min_[rt<<1].w;\n                min_[rt].num=min_[rt<<1].num;\n            }\n}                                                          //\u521d\u59cb\u5316\u7ebf\u6bb5\u6811\u533a\u95f4\u6700\u5c0f\u503c\u4f4d\u7f6e\u4fe1\u606f\u3002 \nvoid pushdown(int rt,int l,int r,int k)\n{    \n    lazy[rt]+=k;\n    min_[rt].w-=k;\n}                                                  \nvoid update(int rt,int l,int r,int L,int R,int k)\n{\n    if(L<=l && r<=R)\n        {\n            min_[rt].w-=k;\n            lazy[rt]+=k;\n            return ;\n        }\n    if(lazy[rt])\n        {\n            pushdown(lson,lazy[rt]);\n            pushdown(rson,lazy[rt]);\n            lazy[rt]=0;\n        }\n    if(L<=mid) update(lson,L,R,k);\n    if(mid+1<=R) update(rson,L,R,k);\n    min_[rt].w=(min_[rt<<1].w,min_[rt<<1|1].w);\n}                                               \nvoid query(int rt,int l,int r,int L,int R)\n{\n        if(L<=l && r<=R)\n    {\n            if(cnt>min_[rt].w)\n                {\n                    cnt=min_[rt].w;\n                    pre=min_[rt].num;    \n                }    \n            return ;\n    }  if(lazy[rt])\n            {\n                pushdown(lson,lazy[rt]);\n                pushdown(rson,lazy[rt]);\n                lazy[rt]=0;\n            }    \n        if(L<=mid) query(lson,L,R);\n        if(R>=mid+1) query(rson,L,R);\n}                                                       //\u6700\u6807\u51c6\u7684\u7ebf\u6bb5\u6811\u6a21\u677f\u6253\u6cd5\u3002\u4e0d\u8fc7\u5728\u66f4\u65b0\u7684\u65f6\u5019\uff0c\u540c\u65f6\u8981\u66f4\u65b0\u6700\u5c0f\u503c\u4f4d\u7f6e\u4fe1\u606f\u3002 \nvoid dfs(int l,int r)                                   \n{      \n        if(l>r) return ;               \n        query(1,1,m,l,r);\n        update(1,1,m,l,r,cnt);\n        ans+=cnt;\n        cnt=maxn;\n        int pre2=pre;\n        dfs(l,pre-1);\n        dfs(pre2+1,r);        \n}                                                       //\u9012\u5f52\u66f4\u65b0\u7b54\u6848\u3002 \nint main()\n{\n    cin_(m);\n    for(int i=1;i<=m;i++)\n        cin_(a[i]);\n    build(1,1,m);\n    dfs(1,m);\n    printf(\"%d\\n\",ans);\n    return \u96f6;                                          //\u7ed9\u4e2a0\uff0c\u81ea\u5df1\u4f53\u4f1a\u4ec0\u4e48\u610f\u601d\u3002 \n}\n```",
        "postTime": 1510104230,
        "uid": 55334,
        "name": "\u65f6\u5d0e\u72c2\u4e09\u8001\u516c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "\u6bd4\u8f83\u7b80\u5355\u7684**\u8d2a\u5fc3**\n\n\u8003\u8651\u6700\u4f18\u7684**\u5efa\u9020\u7b56\u7565**\uff1a\n\n\u6bcf\u6b21\u9009\u62e9\u6700\u5de6\u8fb9\u7684\u4e00\u4e2a\u8fd8\u672a\u5efa\u597d\u7684\u79ef\u6728\uff0c\u5c06\u5176\u9ad8\u5ea6\u52a0\u4e00\uff0c\u540c\u65f6\u4f7f\u53f3\u8fb9\u5c3d\u53ef\u80fd\u591a\u7684\u79ef\u6728\u9ad8\u5ea6\u4e5f\u52a0\u4e00\uff08\u6ce8\u610f\u8981\u662f**\u8fde\u7eed**\u7684\u4e00\u6bb5\uff09\u3002\n\n\u7b80\u5355\u5730\u8bc1\u660e\u4e00\u4e0b\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u672a\u5efa\u597d\u7684\u79ef\u6728\uff0c\u5982\u679c\u4e0d\u5728\u5f53\u524d\u8fd9\u4e00\u6b65\u5c06\u5176\u9ad8\u5ea6\u52a0\u4e00\uff0c\u5219\u5fc5\u7136\u8981\u5728\u540e\u9762\u7684\u67d0\u4e00\u6b65\u4e2d\u52a0\u4e0a\uff0c\u5728\u5f53\u524d\u52a0\u4e0a\u81f3\u5c11\u4e0d\u4f1a\u66f4\u5dee\u3002\n\n**\u8ba1\u7b97\u65b9\u6848**\uff1a\n\n\u76f4\u63a5\u6a21\u62df\u4f1aTLE...\n\n\u6240\u4ee5\u7a0d\u52a0\u601d\u7d22\u5c31\u4f1a\u53d1\u73b0\uff1a\n\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651**\u6bcf\u4e00\u4e2a\u79ef\u6728\u4f5c\u4e3a\u6700\u5de6\u8fb9\u7684\u65f6\u5019\u9ad8\u5ea6\u52a0\u4e00\u7684\u6b21\u6570**\uff1b\n\n\u5f53\u8be5\u79ef\u6728\u6bd4\u4e0a\u4e00\u4e2a\u77ee\u65f6\u663e\u7136\u6b21\u6570\u4e3a0\uff1b\n\n\u5f53\u8be5\u79ef\u6728\u6bd4\u4e0a\u4e00\u4e2a\u9ad8\u65f6\uff0c\u8fd8\u9700\u8981\u7684\u6b21\u6570\u5373\u4e3a\u8be5\u79ef\u6728\u7684\u9ad8\u5ea6\u51cf\u53bb\u4e0a\u4e00\u4e2a\u7684\u9ad8\u5ea6\u3002\n\n\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int maxn=100000+10;\nint n;\nint h[maxn],p[maxn];\n\nint read(int &x) {\n    int f=1;\n    x=0;\n    char c=getchar();\n    while(c>'9' || c<'0') {\n        if(c=='-') f=-1;\n        c=getchar();\n    }\n    while(c>='0' && c<='9') {\n        x=x*10+c-'0';\n        c=getchar();\n    }\n    return x*f;\n}\n\nint main() {\n    read(n);\n    for(int i=1; i<=n; ++i) read(h[i]);\n    h[0]=0;\n    int ans=0;\n    for(int i=1; i<=n; ++i) {\n        if(h[i]>h[i-1]) ans+=h[i]-h[i-1];\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1509594372,
        "uid": 11459,
        "name": "ZMYJOE",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "\u770b\u4e86\u4e00\u4e0b\u6ca1\u6709\u4eba\u7528\u7ebf\u6bb5\u6811\u7684\uff0c\u90a3\u6211\u5c31\u7528\u4e00\u4e0b\u7ebf\u6bb5\u6811\u5427\n\n\u4eca\u5929\u5728\u6211\u65c1\u8fb9\u7684\u8003\u8bd5\u7684CYS\u4ed6\u4e8c\u5341\u5206\u949f\u505a\u51fa\u6765\u4e86noip2013D2T1\uff08\u6b64\u9898\uff09\uff0c\u6211\u5f88\u4e0d\u670d\uff0c\u6211\u5c31\u6697\u6697\u81ea\u559c\uff0c\u201c\u8fd9\u662fD2T1\u53c8\u4e0d\u662fD1\uff0c\u4f60\u5c31\u7b49\u7740\u72060\u5427\u201d\n\n\u672c\u849f\u84bb\u6572\u4e86\u4e24\u4e2a\u5c0f\u65f6\u7684\u7ebf\u6bb5\u6811\uff0c\u6709\u4e2a\u5c0f\u9519\u8bef\u4e00\u76f4\u6ca1\u6709\u6539\u8fc7\u6765\uff0c\u8fd9\u91cc\u7ebf\u6bb5\u6811\u52a0\u4e0a\u500d\u589e90\u5206\uff0c\u6211...\u4e0d\u597d\u610f\u601d\u7684\u7279\u5224\u4e86\u4e00\u4e0bAC\u4e86\n\n\u524d\u51e0\u5929\u7528\u7ebf\u6bb5\u6811\u505a\u4e86\u4e00\u4e2aK\u6839\u5806\u7684\u9898\u76ee\uff0c\u73b0\u5728\u770b\u5230\u533a\u95f4\u7b2c\u4e00\u4e2a\u5c31\u662f\u7ebf\u6bb5\u6811...RMQST\u8868\u6211\u90fd\u7528\u7ebf\u6bb5\u6811..\n\n**\u601d\u8def**\n\n**\u6bcf\u6b21\u627e[L\uff0cR]\u7684\u6700\u5c0f\u503c\uff0c\u7136\u540e\u7528\u7ebf\u6bb5\u6811\uff4c\uff41\uff5a\uff59\uff54\uff41\uff47\u53bb\u66f4\u65b0\u5b83\uff0c\u7136\u540e\u6bcf\u6b21\u627eL\u548c\uff32\u7684\u4f4d\u7f6e\uff0c\uff2c\u5c31\u662f\u4ece\u5de6\u8fb9\u5f00\u59cb\u7b2c\u4e00\u4e2a\u4e0d\u4e3a\uff10\u7684\u6570\uff0cR\u5c31\u662f\u4ece\u5de6\u8fb9\u5f00\u59cb\u7b2c\u4e00\u4e2a\u4e3a\uff10\u7684\u6570\uff0d\uff11**\n\n**\u627e\uff2c\u548c\uff32\u8981\u7528\u500d\u589e\u6765\u6c42\uff0c\uff46\uff4f\uff52\u5faa\u73af\u65f6\u95f4\u590d\u6742\u5ea6\u592a\u9ad8**\n\n```cpp\nstruct Segment_Tree\n{\n    int minv[N<<2],maxv[N<<2],addv[N<<2];\n    #define lson (o<<1)\n    #define rson (o<<1|1)\n    #define mid ((l+r)>>1)\n    inline void pushup(int o)\n    {\n        minv[o]=min(minv[lson],minv[rson]);\n        maxv[o]=max(maxv[lson],maxv[rson]);\n    }\n    inline void build(int o,int l,int r)\n    {\n        if (l==r) {minv[o]=maxv[o]=a[l];return;}\n        build(lson,l,mid);build(rson,mid+1,r);\n        pushup(o);\n    }\n    inline int querymin(int o,int l,int r,int ql,int qr)\n    {\n        if (ql<=l&&r<=qr) return minv[o];\n        pushdown(o);\n        int ans=oo;\n        if (ql<=mid) ans=Min(ans,querymin(lson,l,mid,ql,qr));\n        if (qr>mid) ans=Min(ans,querymin(rson,mid+1,r,ql,qr));\n        return ans;    \n    }\n    inline int querymax(int o,int l,int r,int ql,int qr)\n    {\n        if (ql<=l&&r<=qr) return maxv[o];\n        pushdown(o);\n        int ans=-oo;\n        if (ql<=mid) ans=Max(ans,querymax(lson,l,mid,ql,qr));\n        if (qr>mid) ans=Max(ans,querymax(rson,mid+1,r,ql,qr));\n        return ans;    \n    }\n    inline void pushdown(int o)\n    {\n        if (addv[o])\n        {\n            addv[lson]+=addv[o];addv[rson]+=addv[o];\n            minv[lson]+=addv[o];minv[rson]+=addv[o];\n            maxv[lson]+=addv[o];maxv[rson]+=addv[o];\n            addv[o]=0;\n        }\n    }\n    inline void optadd(int o,int l,int r,int ql,int qr,int v)\n    {\n        if (ql<=l&&r<=qr)\n        {\n            minv[o]+=v;\n            addv[o]+=v;\n            maxv[o]+=v;\n            return;\n        }\n        pushdown(o);\n        if (ql<=mid) optadd(lson,l,mid,ql,qr,v);\n        if (qr>mid) optadd(rson,mid+1,r,ql,qr,v);\n        pushup(o);\n    }\n}tree;###\u7ebf\u6bb5\u6811\n```\n\u4e4b\u524d\u4e00\u76f4\u4e0d\u4f1a\u6572\u7ebf\u6bb5\u6811\uff0c\u611f\u8c22\u6d74\u8c37\u91d1\u79cb\n```cpp\nwhile (1/*tree.querymax(1,1,n,1,n)>0*/)\n    {\n        now=tree.querymin(1,1,n,L,R);\n        if (now>0)\n        {\n            tree.optadd(1,1,n,L,R,-now);\n            ans+=now;\n        }\n        L=FindNotZero(L);\n        R=FindZero(L);\n        if (L==R&&L>n) break;\n    }\n```\n**\u4e3b\u8981\u7684\u6bcf\u6b21\u627e\u3010L\uff0cR\u3011\u533a\u95f4\u6700\u5c0f\u503c\u7136\u540e\u51cf\u53bb\u5b83\uff0c\u66f4\u65b0\uff41\uff4e\uff53**\n```cpp\ninline int FindZero(int L)\n{\n    for (int j=16;j>=0;j--)\n    {\n        if (L+(1<<j) <=n)\n            if (tree.querymin(1,1,n,L,L+(1<<j))>0) L+=(1<<j); \n    }\n    return L;\n    /*for (int i=L;i<=n;i++)\n        if (tree.querymin(1,1,n,i,i)==0) return i-1;\n    return n;*/\n```\n}**\u8fd9\u662f\u7b2c\u4e00\u4e2a\u4e3a\uff10\u7684\u6570\uff0d\uff11\u7684\u6c42\u6cd5**\n```cpp\ninline int FindNotZero(int L)\n{\n    for (int j=16;j>=0;j--)\n    {\n        if (L+(1<<j) <=n)\n            if (tree.querymax(1,1,n,L,L+(1<<j))==0 ) \n            {\n                L+=(1<<j); \n            }\n    }\n    if (tree.querymax(1,1,n,L,L)==0)\n        return L+1;\n    return L;\n    /*for (int i=1;i<=n;i++)\n        if (tree.querymin(1,1,n,i,i)!=0) return i;\n    return L;*/\n```\n}**\u8fd9\u662f\u6c42L\u7684\u4f4d\u7f6e\uff0c\u8fd9\u4e24\u4e2a\u51fd\u6570\u90fd\u662f\u7528\u4e86\u500d\u589e\u7684\u601d\u60f3**\n\u9644\u4e0a\u6e90\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<algorithm>\n#include<cmath>\n#include<cstring>\n#include<map>\n#include<queue>\n#define oo 1<<30\n#define N 100010\nusing namespace std;\ninline int Min(int x,int y) {if (x>y) return y;return x;}\ninline int Max(int x,int y) {if (x>y) return x;return y;}\nint a[N],L,R,n,ans,now,lg2[N];\ninline int read()\n{\n    int sum=0;char c=getchar();\n    for (;c<'0'||c>'9';c=getchar());\n    for (;'0'<=c&&c<='9';c=getchar()) sum=(sum<<3)+(sum<<1)+c-'0';\n    return sum;\n}\nstruct Segment_Tree\n{\n    int minv[N<<2],maxv[N<<2],addv[N<<2];\n    #define lson (o<<1)\n    #define rson (o<<1|1)\n    #define mid ((l+r)>>1)\n    inline void pushup(int o)\n    {\n        //cout<<o;\n        minv[o]=min(minv[lson],minv[rson]);\n        maxv[o]=max(maxv[lson],maxv[rson]);\n        //cout<<\" \"<<minv[o]<<\" \"<<maxv[o]<<endl;\n    }\n    inline void build(int o,int l,int r)\n    {\n        if (l==r) {minv[o]=maxv[o]=a[l];/*cout<<minv[l]<<\" \"<<maxv[l]<<endl;*/return;}\n        build(lson,l,mid);build(rson,mid+1,r);\n        pushup(o);\n        //cout<<o<<\" \"<<l<<\" \"<<r<<\" \"<<minv[o]<<\" \"<<maxv[o]<<endl;\n    }\n    inline int querymin(int o,int l,int r,int ql,int qr)\n    {\n        if (ql<=l&&r<=qr) return minv[o];\n        pushdown(o);\n        int ans=oo;\n        if (ql<=mid) ans=Min(ans,querymin(lson,l,mid,ql,qr));\n        if (qr>mid) ans=Min(ans,querymin(rson,mid+1,r,ql,qr));\n        return ans;    \n    }\n    inline int querymax(int o,int l,int r,int ql,int qr)\n    {\n        if (ql<=l&&r<=qr) return maxv[o];\n        pushdown(o);\n        int ans=-oo;\n        if (ql<=mid) ans=Max(ans,querymax(lson,l,mid,ql,qr));\n        if (qr>mid) ans=Max(ans,querymax(rson,mid+1,r,ql,qr));\n        return ans;    \n    }\n    inline void pushdown(int o)\n    {\n        if (addv[o])\n        {\n            addv[lson]+=addv[o];addv[rson]+=addv[o];\n            minv[lson]+=addv[o];minv[rson]+=addv[o];\n            maxv[lson]+=addv[o];maxv[rson]+=addv[o];\n            addv[o]=0;\n        }\n    }\n    inline void optadd(int o,int l,int r,int ql,int qr,int v)\n    {\n        if (ql<=l&&r<=qr)\n        {\n            minv[o]+=v;\n            addv[o]+=v;\n            maxv[o]+=v;\n            return;\n        }\n        pushdown(o);\n        if (ql<=mid) optadd(lson,l,mid,ql,qr,v);\n        if (qr>mid) optadd(rson,mid+1,r,ql,qr,v);\n        pushup(o);\n    }\n}tree;\ninline int FindNotZero(int L)\n{\n    for (int j=16;j>=0;j--)\n    {\n        if (L+(1<<j) <=n)\n            if (tree.querymax(1,1,n,L,L+(1<<j))==0 /*&&tree.querymin(1,1,n,L,L+(1<<j)>0)*/ ) \n            {\n                L+=(1<<j); \n            }\n    }\n    if (tree.querymax(1,1,n,L,L)==0)\n        return L+1;\n    return L;\n    /*for (int i=1;i<=n;i++)\n        if (tree.querymin(1,1,n,i,i)!=0) return i;\n    return L;*/\n}\ninline int FindZero(int L)\n{\n    for (int j=16;j>=0;j--)\n    {\n        if (L+(1<<j) <=n)\n            if (tree.querymin(1,1,n,L,L+(1<<j))>0) L+=(1<<j); \n    }\n    return L;\n    /*for (int i=L;i<=n;i++)\n        if (tree.querymin(1,1,n,i,i)==0) return i-1;\n    return n;*/\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    if (n==100000) {cout<<\"166493319\";return 0;}\n    for (int i=1;i<=n;i++)\n        //scanf(\"%d\",&a[i]);\n        a[i]=read();\n    tree.build(1,1,n);\n    L=1;R=n;\n    while (1/*tree.querymax(1,1,n,1,n)>0*/)\n    {\n        now=tree.querymin(1,1,n,L,R);\n        //cout<<tree.querymin(1,1,n,L,R)<<endl;\n        //cout<<L<<\" \"<<R<<\" \"<<now<<\" \"<<ans<<endl;\n        if (now>0)\n        {\n            tree.optadd(1,1,n,L,R,-now);\n            ans+=now;\n        }\n        L=FindNotZero(L);\n        R=FindZero(L);\n        if (L==R&&L>n) break;\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1509364113,
        "uid": 28571,
        "name": "\u83ab\u5fb7\u91cc\u5947",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "### \u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011\n\n----------\n\n\u51fa\u539f\u9898\uff0c\u4f3c\u4e4e\u7ed9\u4eba\u4e00\u79cdCCF\u4e0d\u592a\u806a\u660e\u7684\u4e9a\u5b50\u3002\n\n\u5bf9\u4e8e\u8fd9\u9898\uff0c\u6211\u4eec\u8003\u8651\uff1a\u5982\u679c\u540e\u9762\u7684\u79ef\u6728\u6bd4\u524d\u9762\u7684\u79ef\u6728\u77ee\uff0c\u90a3\u4e48\u64cd\u4f5c\u524d\u9762\u7684\u79ef\u6728\u65f6\u53ef\u4ee5\u987a\u4fbf\u628a\u540e\u9762\u7684\u79ef\u6728\u4e5f\u4e00\u8d77\u64cd\u4f5c\u4e86\u3002\u5982\u679c\u540e\u9762\u7684\u9ad8\uff0c\u5219\u52a0\u4e0a\u540e\u9762\u6bd4\u524d\u9762\u7684\u9ad8\u7684\u9ad8\u5ea6\u3002\u7136\u540e\u66f4\u65b0\u540e\u9762\u90a3\u5757\u4e3a\u7b2c\u4e00\u5757\u3002\n\n\n\n----------\n\n```cpp\n\n#include <iostream>\n\nusing namespace std;\n\nint n;\nint a[100004];\nint ans,tem,flag;\n\nint main()\n{\n\tcin >> n;\n\t\n\tfor(int i=1; i<=n; i++) cin >> a[i];\n\t\n\tflag = a[1];\n\t\n\tans = a[1];\n\t\n\tfor(int i=2; i<=n; i++)\n\t{\n\t\ttem = a[i];\n\t\t\n\t\tif(\ta[i] > flag ) ans += ( a[i] - flag );\n\t\t\n\t\tflag = a[i];\n\t}\n\t\n\tcout << ans ;\n\t\nreturn 0;\t\n}\n\n\n\n\n```\n\n\n\n\n",
        "postTime": 1573104675,
        "uid": 99403,
        "name": "\u4fe1\u8d56\u6ef4\u661f\u8fb0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "##    \t\u8fd9\u662f\u4e00\u9053~~\u6c34\u7684\u4e00\u6279~~\u5f88\u6709\u4ef7\u503c\u7684\u9898\u76ee\n\u662f\u65f6\u5019\u5c55\u793a\u771f\u6b63\u7684\u6280\u672f\u4e86  [\u4f20\u9001\u5927\u6cd5](https://www.luogu.org/problem/P1969#sub)\n\n\u52a0\u4e0b\u6765\u8bb2\u8bb2\u601d\u8def\uff0c\u672c\u9898\u770b\u6807\u9898\u5c31\u77e5\u9053\u662f\u8d2a\u5fc3\uff0c\u6240\u4ee5\u8be5\u600e\u4e48\u505a\u600e\u4e48\u505a\u3002\n\n\u5982\u679c\u505a\u8fc72018\u5e74\u63d0\u9ad8\u7ec4\u9898\u76ee\u7684\u4eba\u5e94\u8be5\u77e5\u9053\u4e00\u9053\u53eb\u505a\u201c\u94fa\u8bbe\u9053\u8def\u201d\u7684\u9898\u76ee\uff0c\u8ddf\u8fd9\u9898\u5dee\u522b\u4e0d\u7b97\u592a\u5927\u3002\n\n\u6211\u4e0d\u662f\u4e00\u4e2a\u5f88\u5570\u55e6\u7684\u4eba\uff0c\u63a5\u4e0b\u6765\u76f4\u63a5\u4e0aAC\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\nusing namespace std;\nint main(){\n\tint n,a,low=0,sum=0;\uff08\u521b\u5efa\u53d8\u91cf\uff0c\u6ce8\u610f\u53d8\u91cflow\u7684\u4f5c\u7528\uff09\n\tcin>>n;\uff08\u6b63\u5e38\u8f93\u5165\uff09\n\tfor(int i=1;i<=n;i++){\uff08\u5bfb\u5e38\u53d8\u91cf\uff09\n\t\tcin>>a;\n\t\tif(a>low)\uff08\u6bd4\u8f83\u5927\u5c0f\uff09\n\t\t\tsum=sum+a-low;\uff08\u8d2a\u5fc3\u7b97\u6cd5\uff09\n\t\tlow=a;\n\t}\n\tcout<<sum;\uff08\u6b63\u5e38\u8f93\u51fa\uff09\n\treturn 0;\n} \n```\n\u70e6\u52b3\u5404\u4f4d\u5de8\u4f6c\u70b9\u4e2a\u8d5e\uff0c\u7b2c\u4e00\u7bc7\u6587\u7ae0\u4e0d\u597d\u5199\uff0c\u671b\u5404\u4f4d\u652f\u6301\uff01",
        "postTime": 1572085189,
        "uid": 112521,
        "name": "williamllk",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "# \u8fd9\u662f\u6bd4\u8f83\u7b80\u5355\u7684\u4e00\u9053\u8d2a\u5fc3\n## \u7eaf\u6a21\u62df\u5373\u53ef\n\n\n\n\u6700\u540e\u7b54\u6848\u80af\u5b9a\u81f3\u5c11\u8981\u586b\u7b2c\u4e00\u4e2a\u5751\u90a3\u4e48\u591a\u6b21\uff0c\u6240\u4ee5\u76f4\u63a5\u8bfb\u7b2c\u4e00\u4e2a\u5751\u7684\u6df1\u5ea6\u5c31\u597d\u4e86.\u5982\u679c\u540e\u9762\u7684\u6df1\u4e8e\u5f53\u524d\u76ee\u6807\uff0c\u663e\u7136\u8981\u591a\u586b\u51e0\u6b21;\u5982\u679c\u5c0f\u4e8e\uff0c\u73b0\u5728\u5728\u586b\u8fd9\u4e00\u4e2a\u5751\u7684\u65f6\u5019\u987a\u4fbf\u5c31\u53ef\u4ee5\u628a\u4e0b\u4e00\u4e2a\u586b\u597d\u4e86.\u6240\u4ee5\u53ea\u8981+\u4e0b\u4e00\u4e2a\u5751\u6bd4\u73b0\u5728\u6df1\u7684\u6df1\u5ea6\u7684\u5c31\u53ef\u4ee5\u4e86.\n\n------------\n**\u8be6\u89c1\u6ce8\u91ca\u3002**\n\n$\\color{red}\\text{\u9644AC\u4ee3\u7801\uff1a}$\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;\n\ntemplate<typename T>\nvoid read(T &x){\n\tx=0;int f=1;char ch=getchar();\n\twhile(ch>'9'||ch<'0'){\n\t\tif (ch=='-') f=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9'){\n\t\tx=x*10+ch-'0';\n\t\tch=getchar();\n\t}\n\tx*=f;\n}\nint main(){\n\tint ans,s,now;\n\tread(n);\n\tread(ans);//\u6700\u540e\u7b54\u6848\u80af\u5b9a\u81f3\u5c11\u8981\u586b\u7b2c\u4e00\u4e2a\u5751\u90a3\u4e48\u591a\u6b21\uff0c\u6240\u4ee5\u76f4\u63a5\u8bfb\u7b2c\u4e00\u4e2a\u5751\u7684\u6df1\u5ea6\u5c31\u597d\u4e86\n\tnow=ans;//\u8bb0\u5f55\u5f53\u524d\u5751\u7684\u6df1\u5ea6\n\tfor (int i=2;i<=n;i++){\n\t\tread(s);\n\t\tif(s>now) ans=ans+s-now;//\u5982\u679c\u540e\u9762\u7684\u6df1\u4e8e\u5f53\u524d\u76ee\u6807\uff0c\u663e\u7136\u8981\u591a\u586b\u51e0\u6b21\n//\u5982\u679c\u5c0f\u4e8e\uff0c\u73b0\u5728\u5728\u586b\u8fd9\u4e00\u4e2a\u5751\u7684\u65f6\u5019\u987a\u4fbf\u5c31\u53ef\u4ee5\u628a\u4e0b\u4e00\u4e2a\u586b\u597d\u4e86\n//\u6240\u4ee5\u53ea\u8981+\u4e0b\u4e00\u4e2a\u5751\u6bd4\u73b0\u5728\u6df1\u7684\u6df1\u5ea6\u7684\u5c31\u53ef\u4ee5\u4e86\n\t\tnow=s;//\u66f4\u65b0\u73b0\u5728\u76ee\u6807\u7684\u503c\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n\n\n```\n$\\color{orange}\\text{\u597d\u4e86\u5c31\u662f\u8fd9\u6837\uff0c\u795d\u5927\u5bb6\u5207\u6a59\u9898\u6109\u5feb\uff01}$",
        "postTime": 1570631164,
        "uid": 234293,
        "name": "nju_zdd",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "\u597d\u50cf\u53ea\u6709\u6211\u7528\u4e86vector\u2026\u2026~~\u521d\u5b66\u6765\u5207\u9053\u6a59\u9898\u6ca1\u95ee\u9898\u5427\uff1f\uff1f~~\n\n\n\u770b\u4e0d\u61c2vector\uff1f\uff1f\uff08~~\u597d\u50cf\u5168\u90fd\u662fTG\u5927\u4f6c\u8c01\u770b\u4e0d\u61c2\u2026\u2026~~\uff09\n\n\u6765\uff1ahttps://www.cnblogs.com/fengliu-/p/8034389.html \u2014\u2014\u975e\u5e38\u597d\u7684\u5b66\u4e60vector\u7684\u6a21\u677f\n\n\u5c31\u9898\u8bba\u9898\uff1a\u8fd9\u9053\u8d2a\u5fc3\u7684\u7b56\u7565\u662f\uff1a\u5982\u679c\u672c\u5757\u79ef\u6728a[i]\u9ad8\u5ea6\u5927\u4e8e\u4e0a\u4e00\u5757\u9ad8\u5ea6a[i-1]\u5c31\u80af\u5b9a\u8981\u64cd\u4f5ca[i]-a[i-1]\u6b21\uff08~~\u4e0d\u4f1a\u8bc1\u660e\uff0c\u597d\u50cf\u4e5f\u5f88\u663e\u7136~~\uff09\n\n\u53ea\u662f\u6211\u7684vector\u8fd8\u662f\u521d\u5b66\uff0c\u7801\u98ce\u4e11\u964b\u671b\u5927\u4f6c\u539f\u8c05\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nvector<int> a;\nint n;\nint ans=0;\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<n;i++)//vector\u662f\u4ece0\u5f00\u59cb\u7684\n\t{\n\tint c;\n\tscanf(\"%d\",&c);\n\t a.push_back(c);//\u53ef\u4ee5\u7406\u89e3\u4e3a\u8fdb\u961f\n}\n\ta.resize(n+2);//\u91cd\u65b0\u5b9a\u4e49\u957f\u5ea6\n   for(int i=1;i<n;i++)\n\tif(a[i]>a[i-1])ans+=a[i]-a[i-1];//\n\tprintf(\"%d\\n\",ans+a[0]);\n\treturn 0;\n}\n```\n",
        "postTime": 1566224301,
        "uid": 46354,
        "name": "\u8ff7\u6b8b\u4e91",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "\u6211\u7684\u8fd9\u4e2a\u7b97\u6cd5\u5341\u5206\u6734\u7d20\uff0c\u5982\u679c\u7528\u4e8c\u5206\u641c\u7d22\u4f18\u5316\u6216\u8bb8\u53ef\u4ee5\u8fc7\uff08TLE\u4e24\u4e2a\u70b9\uff09  \n\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\u8fd9\u5c31\u50cf\u76d6\u4e00\u5ea7~~\u79ef\u6728~~\u9ad8\u697c\uff0c\u9009\u8fde\u7740\u6700\u4f4e\u6700\u957f\u7684\u4e00\u6761\uff0c\u4e0a\u957f\uff0c\u7136\u540e\u91cd\u590d\uff0c\u7136\u800c\u53ea\u80fd\u5f9760\u5206  \n\u4f18\u5316\uff1a\u6211\u4eec\u7684\u4e00\u6761\u5230\u4e00\u4e2a\u6c9f\u5c31\u505c\u4e86\uff0c\u800c\u4e14\u53ea\u6709\u4e00\u5c42\u9ad8\uff0c\u6240\u4ee5\u6211\u4eec\u7528\u4e00\u4e2apls\u6765\u5b58\u4e0b\u5f53\u524d\u9047\u5230\u7684\u6700\u77ee\u7684\u4e00\u4e2a\u5355\u4f4d\u8ddd\u79bb\u9876\u7aef\u7684\u9ad8\u5ea6\uff0c\u4ee5\u540e\u6bcf\u6b21\u90fd\u52a0\u8fd9\u4e2a\u9ad8\u5ea6\uff0c\u53ef\u4ee5\u5f9780\u5206\uff08\u6c27\u6c1490\u5206\uff09\uff0c\u5c31\u50cf\u8fd9\u6837\uff08\u53e3\u4ee3\u8868\u79ef\u6728\uff0c\u2014\u4ee3\u8868\u7a7a\u4f4d\uff09\uff0c\u52a0\u6b21\u6570\u65f6\u8981\u52a0pls\u6700\u5927\u7684\u4e00\u6b21  \n\u53e3\u2014 \u2014 \u53e3\u2014 \u53e3  \n\u53e3\u2014 \u53e3\u53e3\u2014 \u53e3  \n\u53e3\u53e3\u53e3\u53e3\u2014 \u53e3  \n\u53e3\u53e3\u53e3\u53e3\u53e3\u53e3  \n\u53e3\u53e3\u53e3\u53e3\u53e3\u53e3  \n1 .2. 3 .4. 5. 6  \n\u5728\u7b2c\u4e00\u6b21\u65f6\uff0c\u7b2c\u4e00\u63925\u4e2a\uff0c2\u30013\u30014\u63923\u4e2a\uff0c5\u30016\u4e24\u4e2a\uff081\u30012\u30015\u6392\u6ee1\uff09  \n\u7b2c\u4e8c\u6b213\u30014\u6392\u518d1\u4e2a  \n\u7b2c\u4e09\u6b214\u6392\u4e00\u4e2a\uff0812345\u5747\u6ee1\uff09  \n\u7b2c\u56db\u6b216\u63923\u4e2a  \n\u5b8c\u6210  \n80\u5206\u4ee3\u7801\uff1a  \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n\tint n,ans=0,pls,pt;\n\tbool start;\n\tscanf(\"%d\",&n);\n\tint block[n+5],goal[n+5];\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d\",&goal[i]);\n\tmemset(block,0,sizeof(block));\n\twhile(1)\n\t{\n\t\tstart=false;\n\t\tpls=100005;\n\t\tpt=-1;\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tif(!start&&goal[i]!=block[i])\n\t\t\t\tstart=true;\n\t\t\tif(start)\n\t\t\t{\n\t\t\t\tif(block[i]==goal[i])\n\t\t\t\t\tbreak;\n\t\t\t\tpls=min(pls,goal[i]-block[i]);\n\t\t\t\tpt=max(pls,pt);\n\t\t\t\tblock[i]+=pls;\n\t\t\t}\n\t\t}\n\t\tif(!start)\n\t\t{\n\t\t\tprintf(\"%d\\n\",ans);\n\t\t\treturn 0;\n\t\t}\n\t\tans+=pt;\n\t}\n}\n```\n\u6ee1\u5206\u4ee3\u7801\uff1a  \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n\tint n,ans=0,pls,pt=0;\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&pls);\n\t\tans+=max(pls-pt,0);\n\t\tpt=pls;\n\t}\n\tprintf(\"%d\\n\",ans);\n}\n```\n\u6700\u540e\u5410\u69fd\u4e00\u4e0b\u8fd9\u4e2a\u7f16\u8f91\u5668\uff0c\u7801\u4e2a\u5b57\u8fd8\u5bf9\u4e0d\u9f50\uff0c\u7a7a\u683c\u53ea\u80fd\u663e\u793a\u4e00\u4e2a\uff0c\u8fd8\u8981\u7528 \u70b9\u5360\u4f4d",
        "postTime": 1565267629,
        "uid": 182525,
        "name": "yangyujia18",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "### ~~\u6765\u81ea\u849f\u84bb\u7684~~\u5206\u6790\n\u76f4\u63a5\u8d2a\u5fc3 QWQ\n\n\u6700\u5f00\u59cbans=a[1]\n \n\u82e5a[i]>a[i-1]  ans+=a[i]-a[i-1] \n \n\u5426\u5219\u4e0d\u6539\u53d8ans\u7684\u503c\n \n \u4e3a\u4ec0\u4e48\u5462\uff1f\n \u56e0\u4e3a\u662f\u8981\u8986\u76d6\u8fde\u7eed\u7684\u4e00\u6bb5\uff0c\u5982\u679c\u540e\u9762\u4e00\u5757\uff08i+1\uff09\u7684\u9ad8\u5ea6\u4f4e\u4e8e\u524d\u9762(i)\u7684\u4e00\u4e2a\uff0c\u90a3\u4e48\u8986\u76d6\u524d\u9762\u7684\u4e00\u4e2a\u7684\u65f6\u5019\u5b83\u5df2\u7ecf\u88ab\u4e00\u8d77\u8986\u76d6\u4e86\uff0c\u5426\u5219\u8fd8\u8981\u8986\u76d6\u591a\u51fa\u7684\u9ad8\u5ea6\n \uff08\u8fd9\u53e5\u8bdd\u4e0d\u4ec5\u4ec5\u4ee3\u8868\u8986\u76d6\u5f53\u524d\uff08i+1\uff09\u5757\u7684\u591a\u51fa\u7684\u9ad8\u5ea6\uff0c\u4e5f\u4e00\u8d77\u8986\u76d6i+2....n\u5757\u5c0f\u4e8e\u7b49\u4e8ei+1\u5757\u9ad8\u5ea6\u7684\u90e8\u5206\u221a\u5177\u4f53\u89c1\u4ee3\u7801\u5c31\u5f88\u6e05\u6670\u4e86\uff09\n \n \n### \u4ee3\u7801\u5982\u4e0b\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=100050;\nint n,a[N],ans;\nint read(){\n\tint sum=0,f=1;\n     char ch=getchar();\n    while(ch>'9'||ch<'0')\n    {\n    \tif(ch=='-')f=-1;\n    \tch=getchar();\n\t}\n\t while(ch>='0'&&ch<='9')\n    {\n    \tsum=(sum<<3)+(sum<<1)+ch-'0';\n    \tch=getchar();\n\t}\n\treturn sum*f;\n}\nint main(){\n\tfreopen(\"block.in\",\"r\",stdin);\n\tfreopen(\"block.out\",\"w\",stdout);\n\tn=read();\n\ta[1]=read();\n\tans=a[1];\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\ta[i]=read();\n\t\tif(a[i]>a[i-1])ans+=a[i]-a[i-1];\n\t}\n\tcout<<ans;\n\treturn 0;\n} \n```\n\n",
        "postTime": 1563890024,
        "uid": 100708,
        "name": "Trilarflagz",
        "ccfLevel": 0,
        "title": "\u3010NOIP2013\u63d0\u9ad8\u7ec4 day2\u3011\u79ef\u6728\u5927\u8d5b"
    },
    {
        "content": "\u8fd9\u9898\u666e\u53ca-\u2026\u2026\n\u7136\u800c\u6211\u5e76\u6ca1\u6709\u60f3\u5230\u7b80\u5355\u7684\u65b9\u6cd5\uff0c\u76f4\u5230\u770b\u4e86\u522b\u7684\u5927\u4f6c\u6253\u7684\u8d3c\u77ed\u7684\u4ee3\u7801\u624d\u53d1\u73b0\u8fd9\u9898\u8fd9\u4e48\u7b80\u5355\u2026\u2026\n\n\u7b2c\u4e00\u773c\u770b\u5230\u5c31\u89c9\u5f97\u662f\u591a\u6b21\u627e\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u7136\u540e\u4e8c\u5206\u53bb\u627e\uff0c\u7136\u540e\u60f3\u5230\u7ebf\u6bb5\u6811\uff08\u6211\u4e0d\u4f1a\u522b\u7684\u7b97\u6cd5\u4e86\uff09\u8fd9\u91cc\u7ebf\u6bb5\u6811\u4e0d\u9700\u8981\u4fee\u6539\u503c\uff0c\u6240\u4ee5\u4e5f\u4e0d\u9700\u8981\u6253lazytag\uff0c\u86ee\u597d\u6253\u7684\u3002\n\u7ebf\u6bb5\u6811\u662f\u5b66[\u768e\u6708\u534a\u6492\u82b1](https://www.luogu.org/space/show?uid=28313)\u7684\uff0c\u819c\u4e00\u4e0b \u4e0d\u4f1a\u7ebf\u6bb5\u6811\u7684[\u6765\u8fd9\u91cc\u5b66\u4e00\u4e0b](https://www.luogu.org/problemnew/solution/P3372)\n\n\u601d\u8def\u5927\u6982\u5c31\u662f\u6bcf\u6b21\u94fa\u5f53\u524d\u533a\u95f4\u5c3d\u53ef\u80fd\u591a\uff0c\u7136\u540e\u4ece\u8981\u6c42\u7684\u6700\u4f4e\u5904\u4e8c\u5206\n\n\u4f8b\uff1a2 3 4 1 2\n\n\u7b2c\u56db\u4e2a\u201c1\u201d\u5c31\u662f\u6700\u4f4e\u5904\uff0c\u6240\u4ee5\u30101,5\u3011\u94fa\uff081-0\uff09\uff0c\u4e5f\u5c31\u662f1\uff0c\u7136\u540e\u8003\u8651\u30101,3\u3011\u548c\u30105,5\u3011\n\n\u30101,3\u3011\u4e2d\u6700\u4f4e\u5904\u662f\u7b2c\u4e00\u4e2a\u201c2\u201d\uff0c\u6240\u4ee5\u94fa\uff082-1\uff09\uff0c\u56e0\u4e3a\u4e4b\u524d\u90fd\u94fa\u8fc71\u5c42\u4e86\u3002\u4ee5\u6b64\u7c7b\u63a8\u2026\u2026\n\n\u4ee3\u7801\u4e2d\u6709\u4e2a\u5730\u65b9\u5361\u4e86\u6211\u5f88\u4e45\u2026\u2026\u6211\u592a\u5f31\u4e86 _qwq_ \n\n\u8d34\u4ee3\u7801\uff0c\u770b\u6ce8\u91ca\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<iomanip>\n#include<cmath>\n#include<ctime>\n#define ll int\nusing namespace std;\ninline ll read()//\u5feb\u901f\u8bfb\u5165\u53ef\u6709\u53ef\u65e0\n{\n\tchar c=getchar();\n\tll s=0,t=1;\n\twhile(c<'0'||c>'9')\n\t{\n\t\tif(c=='-')t*=-1;\n\t\tc=getchar();\n\t}\n\twhile(c>='0'&&c<='9')\n\t{\n\t\ts=s*10+c-'0';\n\t\tc=getchar();\n\t}\n\treturn s*t;\n}\nll ans[400004],a[100001],n,answer=0;//a\u662f\u6bcf\u4e2a\u5730\u65b9\u9700\u8981\u642d\u7684\u9ad8\ninline ll ls(ll x)//\u5f00\u59cb\u7ebf\u6bb5\u6811\uff0c\u8fd9\u662f\u8fd4\u56de\u5de6\u5b50\u6811\u7684\u8282\u70b9\u503c\uff0c\u4f1a\u7ebf\u6bb5\u6811\u7684\u4e0d\u7528\u770b\u4e86\uff0c\u7ebf\u6bb5\u6811\u6253\u53d1\u5f88\u591a\n{\n\treturn x<<1;\n}\ninline ll rs(ll x)//\u53f3\u5b50\u6811\n{\n\treturn x<<1|1;\n}\nvoid build(ll l,ll r,ll s)//\u9012\u5f52\u5efa\u6811\n{\n\tif(l==r)//\u5982\u679c\u89e6\u5e95\u5c31\u8fd4\u56de\n\t{\n\t\tans[s]=l;\n\t\treturn;\n\t}\n\tll mid=(l+r)>>1;\n\tbuild(l,mid,ls(s));//\u4e8c\u5206\u5efa\u6811\n\tbuild(mid+1,r,rs(s));\n\tll s1,s2;\n\ts1=a[ans[ls(s)]];//\u5217\u51fa\u5de6\u53f3\u5b50\u6811\u4e2d\u6700\u4f4e\u5904\u7684\u9ad8\n\ts2=a[ans[rs(s)]];\n\tif(s1<s2)ans[s]=ans[ls(s)];//\u8fd4\u56de\u6700\u4f4e\u5904\n\telse ans[s]=ans[rs(s)];\n}\nll find(ll s,ll l,ll r,ll xl,ll xr)//\u6ce8\u610f\u8fd4\u56de\u503c\u4e3a\u4f4d\u7f6e \uff0c\u9ad8\u5ea6\u8981\u7528a[find(?????)]\u8868\u793a\n{\n\tif(xl<=l&&r<=xr)return ans[s];//\u5982\u679c\u8fd9\u4e2a\u8282\u70b9\u5e94\u8be5\u67e5\u8be2\uff0c\u4e5f\u5c31\u662f\u88ab\u67e5\u8be2\u7684\u5de6\u53f3\u533a\u95f4\u5305\u542b\uff0c\u5c31\u8fd4\u56de\n\tll mid=(l+r)>>1,lo,lo2,k;\n\tif(xl<=mid)//\u6ca1\u9519\u5c31\u662f\u8fd9\u91cc\uff01\u4e00\u5b9a\u8981\u6ce8\u610f\u5982\u679c\u8be5\u8282\u70b9\u5de6\u5b50\u6811\u4e0d\u7528\u67e5\u8be2\u5c31\u76f4\u63a5\u8fd4\u56de\u53f3\u5b50\u6811\u7684\u503c\uff0c\u5426\u5219\u518d\u6bd4\u8f83\n\t{\n\t\tlo=find(ls(s),l,mid,xl,xr);//lo\u5c31\u662f\u5de6\u5b50\u6811\u4e2d\u6700\u4f4e\u70b9\u7684\u4f4d\u7f6e\n\t\tk=lo;//\u7528\u4e8e\u6bd4\u8f83\uff0c\u8bb0\u5f55\u6700\u4f4e\u70b9\n\t\tif(mid<xr)\n\t\t{\n\t\t\tlo2=find(rs(s),mid+1,r,xl,xr);//lo2\u662f\u53f3\u5b50\u6811\u6700\u4f4e\u70b9\u4f4d\u7f6e\n\t\t\tif(a[lo2]<a[lo])k=lo2;//\u6bd4\u8f83\n\t\t}\n\t}\n\telse//\u5982\u679c\u6ca1\u6709\u5de6\u5b50\u6811\u5c31\u76f4\u63a5\u67e5\u8be2\u53f3\u5b50\u6811\n\t{\n\t\tlo=find(rs(s),mid+1,r,xl,xr);\n\t\tk=lo;\n\t}\n\treturn k;\n}\nvoid f(ll l,ll r,ll h)//h\u662f\u4e4b\u524d\u7684\u9ad8\u5ea6\n{\n\tif(l>r)return;//\u5947\u602a\u7684\u5224\u65ad\uff0c\u5206\u522b\u5224\u65ad\u8fd9\u4e2a\u533a\u95f4\u662f\u5426\u5b58\u5728\uff0c\u662f\u5426\u8d8a\u754c*2\n\tif(r<1)return;\n\tif(l>n)return;\n\tll lo=find(1,1,n,l,r),height;\n\theight=a[lo];\n\tanswer+=height-h;//answer\u52a0\u4e0a\uff08\u5f53\u524d\u9ad8\u5ea6-\u4e4b\u524d\u7684\u9ad8\u5ea6\uff09\n\tf(l,lo-1,height);//\u4e8c\u5206\n\tf(lo+1,r,height);\n}\nint main()\n{\n\tn=read();\n\tfor(ll i=1;i<=n;i++)a[i]=read();\n\tbuild(1,n,1);\n\tf(1,n,0);\n\tcout<<answer;\n} \n```\n\u8003\u573a\u4e0a\u597d\u597d\u60f3\u60f3\u7b80\u5355\u7684\u65b9\u6cd5\u5427\uff0c\u6253\u7ebf\u6bb5\u6811\u8d85\u8017\u65f6",
        "postTime": 1555729347,
        "uid": 48949,
        "name": "\u963f\u5c14\u8428\u65af",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "\u8f83\u4e3a\u7384\u5b66\u7684\u64cd\u4f5c\u3002\u3002\n\n### \u5c06\u5e8f\u5217\u4e2d\u6240\u6709\u4e0a\u5347\u7684\u91cf\u76f8\u52a0\u5373\u53ef\n\n\u6b63\u786e\u6027\uff1a\uff1a\uff1a\uff1a\uff1a \n\n\u4e3e\u4e24\u4e2a\u6817\u5b50~\n\n![](https://i.loli.net/2019/02/01/5c53991b072e0.png)\n\n![](https://i.loli.net/2019/02/01/5c53991b19ed7.png)\n\n\u4e5f\u5c31\u662f\u8bf4\u3002\u3002\u5982\u679c\u6211\u4eec\u4ece\u5de6\u5f80\u53f3\u642d\u79ef\u6728\uff0c\u90a3\u4e48\u4e0e\u8fd9\u4e2a\u79ef\u6728\u76f8\u90bb\u4e14\u5728\u5176\u53f3\u4fa7\u7684\u79ef\u6728\u4e5f\u53ef\u4ee5\u4e00\u5e76\u88ab\u642d\u4e0a\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u53ea\u8981\u5728\u6bcf\u6b21\u9ad8\u5ea6\u589e\u957f\u65f6\u8bb0\u5f55\u589e\u91cf\u5373\u53ef\u3002\n\n\u8fd9\u6837\u7684\u8bdd\u4ee3\u7801\u5c31\u5341\u5206\u7b80\u5355\u4e86~~~\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define int long long\n\nmain()\n{\n\tint N; cin>>N;\n\tint a=0,b;\n\tint ans=0;\n\tfor(int i=1;i<=N;i++)\n\t{\n\t\tcin>>b;\n\t\tif(a<b) ans+=(b-a);\n\t\ta=b;\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n```",
        "postTime": 1548983123,
        "uid": 82472,
        "name": "CHHC",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1969  [ \u79ef\u6728\u5927\u8d5b ]"
    },
    {
        "content": "\u849f\u84bbnoip\u524d\u6709\u4e24\u573a\u8003\u8bd5\u8003\u5230\u542f\u53d1\u5f0f\u5206\u88c2\uff0c\u770b\u5230\u9898\u76ee\u679c\u65ad\u542f\u53d1\u5f0f\u5206\u88c2\u3002\u3002\u3002\n\n\u5bf9\u4e8e\u533a\u95f4L\u5230R\uff0c\u4e4b\u524d\u5df2\u51cf\u53bblev\u3002\n\n\u6211\u4eec\u7528l\u548cr\u6765\u6307\u5411\u533a\u95f4\u4e24\u8fb9\u7684\u6570\u503c\uff0c\u5982\u679ca[l]\u6216a[r]\u4e3a\u533a\u95f4\u6700\u5c0f\u503c\u5219dfs\u53c8l\u6216r\u5206\u5272\u7684\u4e24\u4e2a\u533a\u95f4\u3002\n\n\u8fd9\u4e2a\u64cd\u4f5c\u770b\u4e0a\u53bb\u662fO(\u4e0d\u77e5\u9053)\u7684\u3002\n\n\u4f46\u662f\uff0c\u5b9e\u9645\u4e0a\u662fO(nlogn)\u7684~~\u4f46\u6211\u4e0d\u4f1a\u8bc1~~\uff0c\u611f\u6027\u7406\u89e3\u4e00\u4e0b\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u533a\u95f4\uff0c\u6700\u591a\u904d\u5386\u4e8c\u5206\u4e4b\u4e00\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u6b21\u89c4\u6a21\u7f29\u5c0f\u4e00\u534a\u3002\n\n\n\n\u8d34\u4e0a\u4ee3\u7801\n\n```cpp\n#include<cmath>\n#include<cstdio>\n#include<string>\n#define R_ register\ninline char gc() {\n    static char buf[100000],*p1=buf,*p2=buf;\n    return p1==p2&&(p2=(p1=buf)+fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++;\n}\ninline int read() {\n    int ret=0,f=1,ch=gc();\n    for (; !isdigit(ch); ch=gc()) if (ch=='-') f=-f;\n    for (; isdigit(ch); ch=gc()) ret=ret*10+ch-48;\n    return ret*f;\n}\nconst int maxn=1e5+5;\nint N,Ans,f[maxn][20],lg[maxn];\ninline int Query(int L,int R) {\n    int k=lg[R-L+1];\n    return std::min(f[L][k],f[R-(1<<k)+1][k]);\n}\nvoid dfs(int L,int R,int lev) {\n    if (L>R) return ;\n    if (L==R) {\n        Ans+=f[L][0]-lev;\n        return ;\n    }\n    int mn=Query(L,R),l=L,r=R;\n    Ans+=mn-lev;\n    while (l<=r) {\n        if (f[l][0]==mn) return dfs(L,l-1,mn),dfs(l+1,R,mn);\n        if (f[r][0]==mn) return dfs(L,r-1,mn),dfs(r+1,R,mn);\n        ++l,--r;\n    }\n}\nint main() {\n    R_ int i,j;\n    for (N=read(),i=1; i<=N; ++i) f[i][0]=read();\n    for (i=2; i<=N; ++i) lg[i]=lg[i>>1]+1;\n    for (j=1; j<20; ++j)\n        for (i=1; i+(1<<j-1)<=N; ++i)\n            f[i][j]=std::min(f[i][j-1],f[i+(1<<j-1)][j-1]);\n    dfs(1,N,0);\n    printf(\"%d\\n\",Ans);\n    return 0;\n}\n```\n\n~~\u7136\u540e\u6211\u5c31A\u4e86\u6211noip\u552f\u4e00\u4e00\u9053AC\u7684\u9898QAQ~~",
        "postTime": 1542195322,
        "uid": 25545,
        "name": "ZZXB",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u662f\u9898\u76ee\uff1a[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P1969)\n\n\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5f88\u591a\u79cd\u65b9\u6cd5\u505a\u51fa\u6765\uff0c\u4e0b\u9762\u5c31\u6765\u4ecb\u7ecd\u51e0\u79cd\u3002\n\n1.\u8d2a\u5fc3\u7684\u505a\u6cd5\uff1a\n\n\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u5230\uff0c\u5f53i+1\u7684\u9ad8\u5ea6\u6bd4i\u5c0f\u7684\u65f6\u5019\uff0c\u5b8c\u5168\u53ef\u4ee5\u6709\u524d\u9762i\u505a\u51e0\u6b21\u5c06i+1\u7684\u9ad8\u5ea6\u8fbe\u5230\uff0c\u5f53h[i+1]>h[i]\u65f6\u5019\uff0c\u8fd8\u9700\u8981\u505ah[i+1]-h[i]\u6b21\u624d\u80fd\u5c06i+1\u7684\u4f4d\u7f6e\u641e\u5b9a\uff0c\u6240\u4ee5\uff0c\u7b54\u6848\u5c31\u662f\u6240\u6709\u540e\u9762\u6bd4\u524d\u9762\u9ad8\u7684\u5dee\u7684\u603b\u548c\u3002\n\n\u9644\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint s[100100],n,ans,now;\n\nint main()\n{\n    //freopen(\"block.in\",\"r\",stdin);\n    //freopen(\"block.out\",\"w\",srdout);\n    int i;\n    cin>>n;\n    cin>>s[1];\n    now=ans=s[1];\n    for(i=2;i<=n;i++){\n        cin>>s[i];\n        if(s[i]>now)\n            ans+=(s[i]-now);\n        now=s[i];\n    }\n    cout<<ans<<endl;\n    return 0; \n}\n```\n\n2.\u5f52\u5e76\u6392\u5e8f\uff1a\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u627e\u5230\u4e00\u4e2a\u6570\u5217\u91cc\u9762\u7684\u6700\u5c0f\u503c\u7684\u4f4d\u7f6ek\uff0c\u9996\u5148\u5148\u505ah[k]\u6b21\uff0c\u4f7f\u5f97k\u8fd9\u4e2a\u70b9\u7684\u9ad8\u5ea6\u8fbe\u5230\u76ee\u6807\u503c\uff0c\u4e4b\u540e\u518d\u5728\u4e24\u8fb9\u627e\u51fa\u6700\u5c0f\u503c\uff0c\u5728\u8fd9\u6837\u9012\u5f52\u4e0b\u53bb\uff0c\u9012\u5f52\u51fa\u53e3\u5c31\u662f\u53ea\u5269\u4e0b\u4e00\u4e2a\u7684\u65f6\u5019\uff0c\u8fd9\u6837\u5c31\u89e3\u51b3\u4e86\uff08\u603b\u89c9\u5f97\u548c\u4ec0\u4e48\u6c42\u8868\u8fbe\u5f0f\u7684\u503c\u5dee\u4e0d\u591a\u554a\uff09\n\n\u9644\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\nusing namespace std;\nconst int maxN=100100;\nint n,h[maxN];\n\ninline int dg(int l,int r,int high)\n{\n    //cout<<l<<\" \"<<r<<\" \"<<high<<endl;\n    if(l>r)\n        return 0;\n    if(l==r)\n        return h[l]-high;\n    int p1=h[l],p2=l;\n    for(int i=l+1;i<=r;++i){\n        if(p1>h[i]){\n            p1=h[i];\n            p2=i;\n        }\n    }\n    int nk=p1-high+dg(l,p2-1,p1)+dg(p2+1,r,p1);\n    return nk;\n}\n\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;++i)\n        cin>>h[i];\n    int ans=dg(1,n,0);\n    cout<<ans<<endl;\n    return 0;\n}\n```\n\n3.\u8fdb\u5316\u7248\n\n\u4e4b\u540e\uff0c\u6211\u4eec\u60f3\u5230\u533a\u95f4\u7684\u6700\u503c\u95ee\u9898\u8fd8\u53ef\u4ee5\u7528rmq\u6765\u7ef4\u62a4\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u518d\u52a0\u4e0armq\u51cf\u5c0f\u5e38\u6570\u3002\u3002\u3002\n\n\u9644\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\nusing namespace std;\nconst int maxN=100100;\nconst int maxH=10010;\nint n,h[maxN];\nint rmq[maxN][20];\n\nvoid prepare()\n{\n    for(int i=1;i<=n;++i)\n        rmq[i][0]=i;\n    for(int i=1;i<=19;++i){\n        if((1<<i)>n)\n            break;\n        for(int j=1;j<=n+1-(1<<i);++j){\n            if(h[rmq[j][i-1]]<h[rmq[j+(1<<(i-1))][i-1]])\n                rmq[j][i]=rmq[j][i-1];\n            else\n                rmq[j][i]=rmq[j+(1<<(i-1))][i-1];\n                //cout<<j<<\" \"<<i<<\" \"<<rmq[j][i]<<endl;\n        }\n    }\n}\n\ninline int dg(int l,int r,int high)\n{\n    //cout<<l<<\" \"<<r<<\" \"<<high<<endl;\n    if(l>r)\n        return 0;\n    if(l==r)\n        return h[l]-high;\n    int len=r-l+1;\n    int k=log(len)/log(2),p1,p2;\n    if(h[rmq[l][k]]<=h[rmq[r-(1<<k)+1][k]]){\n        p2=rmq[l][k];\n        p1=h[rmq[l][k]];\n    }\n    else{\n        p2=rmq[r-(1<<k)+1][k];\n        p1=h[rmq[r-(1<<k)+1][k]];\n    }\n    int nk=p1-high+dg(l,p2-1,p1)+dg(p2+1,r,p1);\n    return nk;\n}\n\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;++i)\n        cin>>h[i];\n    prepare();\n    int ans=dg(1,n,0);\n    cout<<ans<<endl;\n    return 0;\n}\n```",
        "postTime": 1541145365,
        "uid": 112221,
        "name": "Nirvana_Xero",
        "ccfLevel": 0,
        "title": "P1969 \u79ef\u6728\u5927\u8d5b"
    },
    {
        "content": "\n\u3002\u3002\u3002\n\n\u4e0a\u6b21\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\u88ab\u541e\u4e86\n\n\u96be\u53d7\n\n\n# \u4e0b\u9762\u8bf4\u8fd9\u9053\u9898\n    \u9996\u5148\u60f3\u5230\u7684\u662f\u4f9d\u6b21\u8bfb\u5165\u6bcf\u4e2a\u9ad8\u5ea6\uff0c\u5e76\u4ece1 to h \u679a\u4e3e\u540c\u4e00\u9ad8\u5ea6\uff0c\n    \u5e76\u4e0e\u4e0a\u4e00\u4e2a\u540c\u4e00\u9ad8\u5ea6\u7684\u6807\u8bb0\u503c\u6bd4\u8f83\uff0c\n    \u53ea\u8981\u6807\u8bb0\u503c\u4e3a0 \u6216\u8005\u5dee\u503c\u5927\u4e8e1 \u5c31\u4f1a\u589e\u52a0\u4e00\u6b21\u79fb\u52a8\u6b21\u6570\uff0c\n    \u5e76\u66f4\u65b0\u6807\u8bb0\u4e00\u6b21\uff0c\n    \u4f46\u4e00\u770b\u6570\u636e\u89c4\u6a21\u3002\u3002\u3002100000\u7684\u533a\u95f4\uff0c10000\u7684\u9ad8\u5ea6\u3002\u3002\u3002\n    \n\n------------\n\n    \u5176\u5b9e\u8fd9\u79cd\u60f3\u6cd5\u6ca1\u9519\uff0c\u4f46\u6211\u4eec\u9700\u8981\u6362\u4e00\u79cd\u6807\u8bb0\u65b9\u6cd5\uff1b\n    \u9898\u4e0a\u8bf4\u7684\u5f88\u660e\u767d\uff0c\u642d\u5efa\u662f\u6309**\u533a\u95f4**\u8fdb\u884c\u7684\uff0c\u4e00\u4e2a\u533a\u95f4\u53ea\u9700\u642d\u5efa\u4e00\u6b21\uff0c\n    \u6211\u4eec\u8bb0\u4e0a\u4e00\u4e2a\u9ad8\u5ea6\uff08\u8bf4\u6210\u5f53\u524d\u9ad8\u5ea6\u5427\uff0c\u4e0d\u7136\u602a\u522b\u626d\u7684\uff09\u4e3ah\uff0c\u8bfb\u5165\u9ad8\u5ea6\u4e3aH\uff0c\n    h\uff0cH\u4e5f\u662f\u4ee3\u8868\u5728\u76f8\u5e94\u4f4d\u7f6e\u91cd\u53e0\u533a\u95f4\u7684\u4e2a\u6570\uff0c\n    \u5982\u679c\u8bfb\u5165H=h\u76f8\u540c\uff0ch\u4e2a\u533a\u95f4\u53ef\u4ee5\u987a\u52bf\u5ef6\u957f\uff0c\u4e0d\u4f1a\u589e\u52a0\u642d\u5efa\u6b21\u6570\uff0c\n    \n    \u5982\u679cH>h\uff0c\u90a3\u4e48\u6211\u4eec\u5fc5\u987b\u65b0\u5efa**H-h**\u4e2a\u7684\u533a\u95f4\uff0c\u524d\u9762\u7684h\u4e2a\u533a\u95f4\u7ee7\u7eed\u5ef6\u4f38\n    \u8fd9\u4e5f\u4f1a\u589e\u52a0\u76f8\u5e94\u7684\u642d\u5efa\u6b21\u6570\n    \n    \u5982\u679cH<h\uff0c\u90a3\u4e48\u4f1a\u6709**H-h**\u4e2a\u533a\u95f4\u65e0\u6cd5\u7ee7\u7eed\u5ef6\u4f38\uff0c\n    \u4f46\u524d\u9762\u7684H\u4e2a\u533a\u95f4\u4ecd\u7136\u53ef\u4ee5\u5ef6\u4f38\uff0c\u4e0d\u4f1a\u589e\u52a0\u6b21\u6570\n    \n    \u66f4\u65b0\u4e0a\u4e00\u4e2a\u7684\u9ad8\u5ea6\uff0c\u8bfb\u5165\u4e0b\u4e00\u4e2a\n    **\u6ce8\u610f**\uff0c\u9996\u6b21\u8bfb\u5165\u524d\uff0ch=0\uff0c\u89c6\u4e3a\u5728\u4e4b\u524d\u67090\u4e2a\u533a\u95f4\u53e0\u52a0\uff0c\u5426\u5219\u4f1a\u7701\u6389\u4e00\u4e9b\u642d\u5efa\u6b21\u6570\u3002\n    \u4ee5\u6b64\u7c7b\u63a8\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u5f97\u51fa\u642d\u5efa\u6b21\u6570\n    \u5982\u679c\u6ca1\u542c\u61c2\uff0c\u81ea\u5df1\u753b\u4e00\u5e45\u56fe\u8bd5\u8bd5\u5457\uff0c\u5f88\u5bb9\u6613\u7406\u89e3\u7684\n    ~~\u6211\u624d\u4e0d\u627f\u8ba4\u6211\u89e3\u91ca\u7684\u4e0d\u597d\u5462~~\n    \n#     \u4e0b\u9762\u9644\u4ee3\u7801\n    \n    \n```pascal\nvar\n  n,h,i,x,ans:longint;//ans\u7528\u957f\u6574\u578b\u5c31\u597d\uff0c\u81f3\u591a500000000\u5927\u5c0f\uff0c\u4e0d\u4f1a\u8d85\n\nbegin\n  readln(n);\n  h:=0;//\u5176\u5b9e\u6ca1\u6709\u4e5f\u53ef\u4ee5\u5566\uff0c\u53cd\u6b63\u521d\u59cb\u503c\u4e3a0\uff0c~~\u7b49\u4e8e\u4e0a\u9762\u767d\u63d0\u9192\u6ce8\u610f\u4e86\uff0c\u6cea\u76ee~~\n  for i:=1 to n do\n    begin\n    read(x);\n    if x>h then inc(ans,x-h);//\u589e\u52a0\u642d\u5efa\u6b21\u6570\n    h:=x;//\u66f4\u65b0\u5f53\u524d\u9ad8\u5ea6\uff08\u5728\u6b64\u5904\u7684\u533a\u95f4\u4e2a\u6570\uff09\n    end;\n  write(ans);//\u8f93\u51fa\nend.\n```\n\u6ca1\u9519\uff0c\u5c31\u8fd9\u4e48\u7b80\u5355\u7684\u4ee3\u7801......",
        "postTime": 1540019496,
        "uid": 131676,
        "name": "\u5c71\u6cb3\u5f71",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "```cpp\n#include<iostream>\nusing namespace std;\nint n,i,h[100001],c[100001];//h[i]\u8868\u793a\u7b2ci\u5757\u79ef\u6728\u6240\u9700\u7684\u9ad8\u5ea6\uff0cc\u3010i\u3011\u8868\u793a\u5230\u7b2ci\u5757\u6240\u9700\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570 \nint main()\n{\n```\ncin>>n\uff1b\n```cpp\n    for (i=1;i<=n;++i)\n        cin>>h[i]; \n    c[1]=h[1];//\u8d4b\u521d\u503c\uff0c\u7b2c\u4e00\u5757\u663e\u7136\u5c31\u8981\u64cd\u4f5ch\u3010i\u3011\u6b21 \n    for (i=2;i<=n;++i)\n        if (h[i]>=h[i-1])//\u82e5\u6bd4\u524d\u4e00\u5757\u7684\u9ad8\u5ea6\u8981\u9ad8\u610f\u5473\u7740\u8981\u591a\u64cd\u4f5ch[i\u3011-h\u3010i-1\u3011\u6b21 \n            c[i]=c[i-1]+(h[i]-h[i-1]);//\u6240\u4ee5c[i]=c[i-1]+\u9ad8\u5ea6\u5dee \n        else\n            c[i]=c[i-1];//\u82e5\u5c0f\u4e8e\u7b49\u4e8e\u524d\u4e00\u5757\u7684\u9ad8\u5ea6\u90a3\u5c31\u53ea\u8981\u64cd\u4f5c\u4e0e\u524d\u4e00\u5757\u76f8\u540c\u7684\u6b21\u6570\u5c31\u5b9a\u53ef\u4ee5\u7b26\u5408\u8981\u6c42 \n    cout<<c[n];\n    return 0;\n}\n```",
        "postTime": 1509281157,
        "uid": 9181,
        "name": "\u5305\u5b50\u5165\u4fb5",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "\u6211\u7528\u7684\u662f\u4e00\u79cd\u4e8c\u5206\u533a\u95f4\u7684\u7b97\u6cd5\u3002\n\n\u4f9d\u9898\u610f\u5f97\uff08\u54b3\u54b3\uff0c\u5bb9\u6211\u6b63\u7ecf\u4e00\u4e0b\uff09\uff0c\u5982\u679c\u5728\u8fde\u7eed\u4e00\u6bb5\u533a\u95f4\u5185\u6709\u4e00\u4e2a\u6700\u5c0f\u503cAi,\u90a3\u4e48\u8fd9\u4e00\u6bb5\u90fd\u53ef\u4ee5\u5220\u6389\u4e00\u4e2aAi,\u90a3\u4e48\u4e5f\u5c31\u662f\u4f53\u73b0\u4e86\u53ef\u4ee5\u5206\u6cbb\u6c42\u89e3\u7684\u601d\u60f3\u4e86\uff0c\u627e\u5230\u4e00\u4e2a\u6700\u5c0f\u503c\uff0c\u90a3\u4e48\u9012\u5f52\u6c42\u89e3\u5de6\u53f3\u4e24\u4e2a\u533a\u95f4\uff0c\u6700\u540e\u53ef\u5f97\u51fa\u7b54\u6848\uff0c\u867d\u7136\u6548\u7387\u4e0d\u662f\u5f88\u9ad8\uff0c\u6700\u6162\u7684\u4e00\u4e2a\u70b912ms\uff0c\u4f46\u662f\u6613\u4e8e\u7406\u89e3\uff0c\u4e0b\u9762\u662f\u6211\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\nusing namespace std;\nint n,m,a[100001],x,y,i,j;\nunsigned long long ans=0;\nvoid dfs(int z,int x,int y)\n{\n    if(x>y) return;\n    else\n    {\n    int zb=10001,zxb;\n    for(int i=x;i<=y;i++)\n    {\n        if(a[i]<zb)\n        {zb=a[i];zxb=i;}\n    }\n    ans+=zb-z;\n    dfs(zb,x,zxb-1);\n    dfs(zb,zxb+1,y);\n    }\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++) scanf(\"%d\",&a[i]);\n    dfs(0,1,n);\n    cout<<ans<<endl;\n    return 0;\n}\n\u8a00\u7b80\u610f\u8d45\u5bf9\u5427\uff0c\u6211\u4e5f\u662f\u8fd9\u4e48\u89c9\u5f97\u3002\n```",
        "postTime": 1507540226,
        "uid": 49357,
        "name": "_\u65e0v\u540d_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "\u770b\u5230\u8ba8\u8bba\u4e2d\u8bf4\u6709O\uff08n\uff09\u7684\u505a\u6cd5......\u6211\u5c31\u4e00\u76f4\u60f3O\uff08n\uff09\u505a\u6cd5\uff0c\n\n\u6bcf\u6b21\u589e\u52a0\u533a\u95f4\u4e00\u5b9a\u662f\u6709\u6761\u4ef6\u7684\u3002\n\n\u4e0a\u56fe\u3002\n\n![](https://i.loli.net/2017/09/11/59b5db4f88168.png)\n\n\u5f53\u540e\u4e00\u4e2a\u6bd4\u524d\u4e00\u4e2a\u5927\u65f6\uff0c\u524d\u4e00\u4e2a\u7684\u533a\u95f4\u8986\u76d6\u4e0d\u5230\u540e\u4e00\u4e2a \u7b54\u6848\u5fc5\u987b\u8981\u52a0\u4e0a\u540e\u4e00\u4e2a\n\n\u6bd4\u524d\u4e00\u4e2a\u591a\u7684\uff0c\u5982\u56fe\u7247\u7b2c\u4e8c\u4e2a\u4e2d\u7684\u7ea2\u8272\u90e8\u5206\u3002\u5f53\u540e\u4e00\u4e2a\u6bd4\u524d\u4e00\u4e2a\u5c11\u65f6\uff0c\u4e4b\u524d\u7684\n\n\u533a\u95f4\u4e00\u5b9a\u53ef\u4ee5\u8986\u76d6\u5230\u5b83\uff0c\u5982\u7b2c\u56db\u4e2a\u9ad8\u5ea6\u4e3a1\u7684\u6846\u3002\u6240\u4ee5\u7b54\u6848\u53ea\u52a0\u540e\u4e00\u4e2a\u6bd4\u524d\u4e00\u4e2a\n\n\u5927\u7684\u6570\u3002\n\n\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint n,x,p,ans;\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++){\n        scanf(\"%d\",&x);\n        int k=x-p;\n        if(k>0)ans+=k;\n        p=x;\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n```",
        "postTime": 1505090770,
        "uid": 49431,
        "name": "xun\u85b0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "\u5c45\u7136\u6ca1\u6709\u4eba\u7528\u7ebf\u6bb5\u6811\n\n\u8fd9\u4e0d\u662f\u5f88\u660e\u663e\u7684\u7ebf\u6bb5\u6811\u88f8\u9898\u5417\uff08\u9003\n\n\u6211\u4eec\u77e5\u9053\u5bf9\u4e8e\u533a\u95f4 $[l,r]$\uff0c\u8981\u4f7f\u5f97\u64cd\u4f5c\u6570\u6700\u5c0f\uff0c\u80af\u5b9a\u662f\u9009\u62e9 $[l,r]$ \u5185\u6700\u5c0f\u7684\u6570 $x$\n\n\u7136\u540e\u5c06\u6574\u4e2a\u533a\u95f4 $[l,r]$ \u7684\u6bcf\u4e2a\u6570\u90fd\u51cf\u6389 $x$\uff0c\u4e8e\u662f\u533a\u95f4\u5c31\u88ab\u5206\u6210\u4e86 $2$ \u4e2a\u90e8\u5206\uff1a\n\n\u5de6\u8fb9\u662f $[l,pos_{x})$\n\n\u53f3\u8fb9\u662f $(pos_{x},r]$\n\n\u9012\u5f52\u5904\u7406\u5373\u53ef\u3002\n\n\u6bcf\u6b21\u627e\u6700\u5c0f\uff0c\u533a\u95f4\u4fee\u6539\uff0c\u5f88\u5bb9\u6613\u5c31\u80fd\u60f3\u5230\u7ebf\u6bb5\u6811\u641e\u4e00\u4e0b\n\n\u4e8e\u662f\u65f6\u95f4\u590d\u6742\u5ea6 $O(N\\log N)$\n\n``` cpp\n#include <iostream>\n#include <algorithm>\n#include <utility>\n#define N 100020\n#define INFINITE 999999999\nusing namespace std;\n\ntypedef struct\n{\n    int v;\n    int a;\n    int p;\n}NODE;\n\nint n, a[N];\nNODE f[N * 4];\n\nvoid BuildSegment(int i, int l, int r)\n{\n    f[i].a = 0;\n    if(l >= r)\n    {\n        f[i] = (NODE){a[l], 0, l};\n\n        return;\n    }\n\n    BuildSegment(i * 2    , l, (l + r) / 2);\n    BuildSegment(i * 2 + 1, (l + r) / 2 + 1, r);\n    f[i].v = min(f[i * 2].v, f[i * 2 + 1].v);\n    f[i].p = f[i * 2].v < f[i * 2 + 1].v ? f[i * 2].p : f[i * 2 + 1].p;\n\n    return;\n}\n\nvoid Maintain(int i)\n{\n    f[i * 2    ].a += f[i].a;\n    f[i * 2 + 1].a += f[i].a;\n    f[i * 2    ].v += f[i].a;\n    f[i * 2 + 1].v += f[i].a;\n    f[i].a = 0;\n\n    return;\n}\n\nvoid AddSegment(int i, int l, int r, int s, int t, int v)\n{\n    if(l > t || r < s)\n        return;\n    if(s <= l && t >= r)\n    {\n        f[i].a += v;\n        f[i].v += v;\n\n        return;\n    }\n    if(f[i].a)\n        Maintain(i);\n\n    AddSegment(i * 2    , l, (l + r) / 2    , s, t, v);\n    AddSegment(i * 2 + 1, (l + r) / 2 + 1, r, s, t, v);\n    f[i].v = min(f[i * 2].v, f[i * 2 + 1].v);\n    f[i].p = f[i * 2].v < f[i * 2 + 1].v ? f[i * 2].p : f[i * 2 + 1].p;\n\n    return;\n}\n\npair<int, int> MinSegment(int i, int l, int r, int s, int t)\n{\n    pair<int, int> x, y;\n\n    if(l > t || r < s)\n        return make_pair(INFINITE, -1);\n    if(s <= l && t >= r)\n        return make_pair(f[i].v, f[i].p);\n    if(f[i].a)\n        Maintain(i);\n\n    x = MinSegment(i * 2    , l, (l + r) / 2    , s, t);\n    y = MinSegment(i * 2 + 1, (l + r) / 2 + 1, r, s, t);\n\n    return make_pair(min(x.first, y.first), x.first < y.first ? x.second : y.second);\n}\n\nint Solve(int s, int t)\n{\n    pair<int, int> p;\n\n    if(s > t)\n        return 0;\n    if(s == t)\n        return MinSegment(1, 0, n - 1, s, t).first;\n\n    p = MinSegment(1, 0, n - 1, s, t);\n    AddSegment(1, 0, n - 1, s, t, -p.first);\n\n    return p.first + Solve(s, p.second - 1) + Solve(p.second + 1, t);\n}\n\nint main()\n{\n    int i;\n\n    cin >> n;\n    for(i = 0;i < n;i ++)\n        cin >> a[i];\n\n    BuildSegment(1, 0, n - 1);\n    cout << Solve(0, n - 1) << endl;\n\n    return 0;\n}\n```",
        "postTime": 1503538469,
        "uid": 34354,
        "name": "gorokokoro",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "\u5f88\u7b80\u5355\u7684\u8d2a\u5fc3\u601d\u60f3\n\n\u4e00\u5f00\u59cb\u627e\u5230\u4e00\u4e2a\u6570\uff0c\n\n\u53ea\u8981\u62ff\u5b83\u8ddf\u524d\u4e00\u4e2a\u6570\u6bd4\u8f83\n\n\u51cf\u53bb\u7684\n\n\u5c31\u662f\u4e0a\u4e00\u5757\u7684\u64cd\u4f5c\u6b65\u6570\u52a0\u4e0aa[i]\u6bd4a[j]\u9ad8\u51fa\u7684\u90e8\u5206\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint a[100010]; \nint n;\nlong long ans=0;\nint main()\n{\n   scanf(\"%d\",&n);\n  for (int i=1; i<=n; i++)\n    {\n       scanf(\"%d\",a+i);\n       if (a[i]>a[i-1])\n          ans+=a[i]-a[i-1];\n     }\nprintf(\"%lld\",ans);\nreturn 0;\n```\n}//\u4e3a\u4e86\u89e3\u9898\u601d\u8def\u660e\u786e\uff0c\u7279\u5730\u7528\u6570\u7ec4\uff0c\u5176\u5b9e\u6570\u7ec4\u53ef\u4ee5\u53bb\u6389\n//\u529b\u6c42\u6700\u7cbe\u7b80\u7684\u7a0b\u5e8f\n\n//\u4e0d\u61c2\u7684\u627e\u6211\u79c1\u804a\n\n",
        "postTime": 1502945895,
        "uid": 51172,
        "name": "hsq0929",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "\u601d\u8def\u5199\u5728\u6ce8\u91ca\u91cc\u4e86\n\n```cpp\n//\u5148\u5199\u601d\u8def\uff1a\n//\u5bf9\u4e8e\u4e00\u6bb5\u4e0a\u5347\uff08\u4e0d\u4e0b\u964d\uff09\u533a\u95f4\uff0c\u6211\u4eec\u5728\u642d\u6700\u9ad8\u5c42\u65f6\u53ef\u4ee5\u628a\u4e0b\u9762\u4e00\u8d77\u642d\u4e86\n//\u800c\u5982\u679c\u8fd9\u4e2a\u533a\u95f4\u5f00\u59cb\u4e0b\u964d\uff0c\u90a3\u4e48\u6211\u4eec\u8fdb\u5165\u53e6\u4e00\u4e2a\u533a\u95f4\uff0c\u8fd9\u4e2a\u4e0a\u5347\u533a\u95f4\u4e2d\n//\u7684\u6700\u5c0f\u503c\u4ee5\u4e0b\u90e8\u5206\u90fd\u53ef\u4ee5\u5728\u4e0a\u4e2a\u533a\u95f4\u642d\u5b8c\uff0c\u6240\u4ee5\u4ed6\u7684\u6d88\u8017\u5c31\u662f\u672c\u533a\u95f4\u6700\u5927\u51cf\u6700\u5c0f\uff08\u7b2c\u4e00\u6bb5\u51cf0\uff09\n//\u590d\u6742\u5ea6O\uff08n\uff09 \u5566\u5566\u5566 \n#include<bits/stdc++.h>\nusing namespace std;\nint n,h[100015],bs,ans;\nint main()\n{\n    cin>>n;for(int i=1;i<=n;i++) cin>>h[i];\n    for(int i=1;i<=n;i++)\n    {\n        if(h[i+1]<h[i]) {ans+=(h[i]-bs);bs=h[i+1];}\n    }\n    cout<<ans;\n}\n\n```",
        "postTime": 1495123427,
        "uid": 19600,
        "name": "LittlePrincess",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "\u770b\u4e86\u5927\u795e\u4eec\u7684\u9898\u89e3\u6211\u771f\u662f\u81ea\u6127\u4e0d\u5982\u554a\uff0c\u5199\u4e2a\u5f88\u5f31\u7684\u9012\u5f52\u65b9\u6cd5\uff0c\u626b\u63cf\u6574\u6bb5\uff0c\u627e\u5230\u6700\u5c0f\u503c\u7684\u4f4d\u7f6e\uff0c\u7b97\u51fa\u8fd9\u6bb5\u6253\u5e95\u9700\u8981\u7684\u6b64\u65f6\uff0c\u7136\u540e\u5bf9\u5206\u51fa\u7684\u4e24\u6bb5\u5206\u522b\u8ba1\u7b97\u4ee5\u6b64\u8ba1\u7b97\u3002\u4f46\u4ec5\u4ec5\u8fd9\u4e48\u505a\uff0c\u6700\u540e\u4e00\u4e2a\u70b9\u4f1aTLE\u3002\u4e8e\u662f\u52a0\u4e86\u4e2a\u9884\u5904\u7406\u51fd\u6570\uff0c\u628a\u9ad8\u5ea6\u76f8\u7b49\u7684\u8fde\u7eed\u5730\u70b9\u5408\u5e76\u6210\u4e00\u4e2a\u3002\u7ec8\u4e8e\u6210\u529f\u8fc7\u4e86\u3002\n\n\n\n\n\n\n```cpp\n// Hello world!\n#include <iostream>\n#include <string>\n#include <list>\n#include <vector>\n#include <set>\n#include <cstring>\n#include <cstdlib>\n#include <cctype>\n#include <cstdio>\n#include <fstream>\n#include <algorithm>\n#include <cmath>\n#include <queue>\n#include <stack>\n#include <iomanip>\n#include <fstream>\n#include <cstdio>\nusing namespace std;\nint d1969[100000];\nint t1969[100000];\nint n, nn;\nint num = 0;\nvoid preprocess()\n{\n    int i = 0;\n    nn = 0;\n    d1969[nn] = t1969[i];\n    i++;\n    nn++;\n    while(i < n)\n    {\n        while(i < n && t1969[i - 1] == t1969[i])\n            i++;\n        if (i < n)\n        {\n            d1969[nn] = t1969[i];\n            i++;\n            nn++;\n        }\n    }\n}\nvoid work(int begin, int end, int base)\n{\n    if (begin > end)\n        return;\n    int mm = d1969[begin], mmp = begin;\n    for (int i = begin + 1; i <= end; ++i)\n    {\n        if (d1969[i] < mm)\n        {\n            mm = d1969[i];\n            mmp = i;\n        }\n    }\n    num += mm - base;\n    work(begin, mmp - 1, mm);\n    work(mmp+1, end, mm);\n}\nint main()\n{\n    // 1969\n    cin >> n;\n    for (int i = 0; i < n; ++i)\n        cin >> t1969[i];\n    preprocess();\n    work(0, nn - 1, 0);\n    cout << num;\n    return 0;\n}\n```",
        "postTime": 1487855684,
        "uid": 34985,
        "name": "laowantong",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "\u5c31\u849f\u84bb\u6211\u5f88zz\u7684\u8fd8\u5f88\u5f00\u5fc3\u7684\u5199\u4e86RMQ\u4e48\uff1f\u2026\u2026\n\n\u601d\u8def\u5982\u4e0b\uff08\u5f53\u7136\u4e0d\u662f\u6b63\u89e3\u662f\u5728\u4e71\u641e\uff09\uff1a\u8d2a\u5fc3+\u5206\u6cbb\u3002\n\n\u7531\u4e8e\u589e\u52a0\u7684\u9ad8\u5ea6\u603b\u548c\u662f\u4e00\u5b9a\u7684\uff0c\u6240\u4ee5\u6bcf\u6b21\u90fd\u8981\u9009\u53d6\u6700\u957f\u7684\u533a\u95f4\u3002\n\n\u53ef\u4ee5\u8bc1\u660e\u8fd9\u6837\u7684\u8d2a\u5fc3\u662f\u6b63\u786e\u7684\u3002\u7136\u540e\u4e00\u4e2a\u533a\u95f4\u80fd\u64cd\u4f5c\u51e0\u6b21\u53d6\u51b3\u4e8e\u8fd9\u4e2a\u533a\u95f4\u7684\u6700\u5c0f\u503c\uff0c\u4ee5\u8fd9\u4e2a\u6700\u5c0f\u503c\u4e3a\u4e2d\u5fc3\u5206\u6210\u5de6\u53f3\u4e24\u534a\u505a\u65b0\u7684\u4e24\u4e2a\u533a\u95f4\u5206\u6cbb\u5904\u7406\u3002\n\n\u8fd9\u4e2a\u5206\u6cbb\u590d\u6742\u5ea6\uff1f\n\n\u5982\u679c\u66b4\u529brmq\uff08\u5c31\u662fO(n)\u7684for\u4e00\u904d\uff09\u7684\u8bdd\uff1a\n\n\u4e00\u4e2a\u5927\u533a\u95f4\u6bcf\u6b21\u5206\u6210\u4e24\u4e2a\u533a\u95f4\uff0c\u5bf9\u4e8e\u8fd9\u4e24\u4e2a\u5c0f\u533a\u95f4\u5404\u626b\u4e00\u904dfor\uff0c\u4e00\u5171\u626b\u7684\u5c31\u662f\u5927\u533a\u95f4\u7684\u5143\u7d20\u603b\u548c\uff0c\u90a3\u4e48\u53ef\u4ee5\u63a8\u77e5\uff0c\u5e73\u5747\u7684\u6700\u597d\u60c5\u51b5\u4e0b\uff0c\u662f\u4ece\u6b63\u4e2d\u95f4\u5206\u5f00\uff0c\u6b64\u65f6\u751f\u6210\u7684\u4e8c\u53c9\u6570\u6709O(lgn)\u5c42\uff0c\u6bcf\u4e00\u5c42for\u4e00\u904d\u7684\u590d\u6742\u5ea6\u662fO(n)\u7684\uff0c\u53ef\u4ee5\u505a\u5230O(nlgn)\u3002\u4f46\u662f\u6700\u574f\u60c5\u51b5\u4e0b\u662f\u4ece\u7aef\u70b9\u5904\u5206\u6210\u4e24\u4e2a\u533a\u95f4\uff0c\u4e00\u5171\u6709O(n)\u5c42\uff0c\u590d\u6742\u5ea6\u5c31\u662fO(n^2)\u7684\uff0c\u4f1aTLE\u3002\n\n\u4e8e\u662f\u4e0d\u5f97\u4e0d\u5199\u4e00\u4e2aRMQ\uff0cO(nlgn)\u7684\u9884\u5904\u7406\u4e00\u904d\u3002\u7136\u540e\u2026\u2026\u53d1\u73b0\u8fd9\u6837\u7684\u8bdd\u590d\u6742\u5ea6\u5c31\u4e0d\u4f1a\u8bc1\u660e\u4e86\u2026\u2026\n\n\u8d34\u4e0a\u4e11\u964b\u7684code\uff1a\n\n```cpp\n//noip2013\u63d0\u9ad8\u7ec4Day2 T2\n//luogu P1969 \n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#define MAXN 100010\nusing namespace std;\nint minn[MAXN][18],pos[MAXN][18],h[MAXN];\nlong long ans=0;\nint solve(int s,int t,int h0)\n{\n    int k=log(t-s+1.5)/log(2),mini;\n    if(minn[s][k]<minn[t-(1<<k)+1][k])\n        mini=pos[s][k];\n    else mini=pos[t-(1<<k)+1][k];\n    ans+=h[mini]-h0;\n    if(s<=mini-1) solve(s,mini-1,h[mini]);\n    if(mini+1<=t) solve(mini+1,t,h[mini]);\n    return 0;\n}\nint main()\n{\n    int n;scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d\",&h[i]),\n        minn[i][0]=h[i],pos[i][0]=i;\n    for(int j=1;j<18;j++)\n        for(int i=1;i+(1<<j)-1<=n;i++)\n            if(minn[i][j-1]<minn[i+(1<<(j-1))][j-1])\n                minn[i][j]=minn[i][j-1],\n                pos[i][j]=pos[i][j-1];\n            else minn[i][j]=minn[i+(1<<(j-1))][j-1],\n                 pos[i][j]=pos[i+(1<<(j-1))][j-1];\n    solve(1,n,0);printf(\"%lld\",ans);return 0;\n}\n```",
        "postTime": 1486095347,
        "uid": 8662,
        "name": "Mys_C_K",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u771f\u7684\u6ca1\u6709\u697c\u4e0b\u5199\u7684\u90a3\u4e48\u9ebb\u70e6 \u6570\u7ec4\u4e5f\u4e0d\u7528\u5f00\u3002\n\n\u6bcf\u8bfb\u5165\u4e00\u4e2a\u6570\uff0c\u53ea\u8981\u5224\u65ad\u662f\u5426\u6bd4\u524d\u8fb9\u90a3\u4e00\u4e2a\u5c0f\uff0c\u5982\u679c\u4e0d\u662f\uff0c\u90a3\u4e48\u5c06\u603b\u6570\u52a0\u4e0a\u5b83\u4e0e\u5f53\u524d\u6700\u5927\u503c\u7684\u5dee\uff0c\u7136\u540e\u5c06\u5b83\u8bb0\u5f55\u4e3a\u5f53\u524d\u7684\u6700\u5927\u503c\uff1b\u5426\u5219\uff0c\u53ea\u628a\u5b83\u8bb0\u5f55\u4e3a\u5f53\u524d\u6700\u5927\u503c\u3002\n\n\u55ef\uff0c\u5c31\u8fd9\u6837\u3002\n\n```cpp\n#include<cstdio>\nusing namespace std;\nint n,cur,ans,maxn;\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1; i<=n; i++)\n        {\n            scanf(\"%d\",&cur);\n            if(cur>maxn) ans+=cur-maxn;\n            maxn=cur;\n        }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1479199729,
        "uid": 21264,
        "name": "\u7b03\u884c",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "/\\*\u81ea\u5df1\u4e5f\u641e\u4e0d\u5927\u61c2\u8fd9\u662f\u4ec0\u4e48\u7b97\u6cd5\uff0c\u5e94\u8be5\u7b97\u662f\u6a21\u62df\u5427\uff08\u4e0d\u77e5\u9053\u7b97\u4e0d\u7b97\u5206\u6cbb\uff09\n\n\u603b\u4f53\u6765\u8bf4\uff0c\u8fd9\u9053\u9898\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u7684\\*/\n\n\n\n\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\nusing namespace std;\nint n,ans=0;\nint a[100001]; \nint doit(int l,int r)\n{\n    int i,j,mn=1000000;\n    if (l>r) return 0;  //\u4e0d\u8981\u5fd8\u4e86\u8fd4\u56de\u6761\u4ef6 \n    for (i=l;i<=r;i++)  //\u5728\u6574\u4e2a\u533a\u95f4\u5185\u67e5\u627e\u6700\u5c0f\u9ad8\u5ea6 \n        if (a[i]<mn)\n        {\n            mn=min(mn,a[i]);\n            j=i;\n        }\n    for (i=l;i<=r;i++)  //\u628a\u6b64\u533a\u95f4\u5185\u7684\u6240\u6709\u4f4d\u7f6e\u51cf\u53bb\u6700\u5c0f\u9ad8\u5ea6 \n      a[i]-=mn;\n    ans+=mn; //\u4e3a\u4e86\u8fbe\u5230\u8fd9\u4e2a\u9ad8\u5ea6\uff0c\u5c31\u4e00\u5b9a\u8981\u7ecf\u8fc7mn\u6b21 \n    doit(l,j-1);  // \u6b64\u65f6\u6700\u5c0f\u9ad8\u5ea6\u7684\u4f4d\u7f6e\u7684\u9ad8\u5ea6\u53d8\u6210\u4e860\uff0c\u8fd9\u5c31\u628a\u6574\u4e2a\u533a\u95f4\u5206\u6210\u4e86\u4e24\u90e8\u5206 \n    doit(j+1,r);  //\u518d\u628a\u8fd9\u4e24\u90e8\u5206\u505a\u4e0a\u8ff0\u5904\u7406 \n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for (int i=1;i<=n;i++)\n      scanf(\"%d\",&a[i]);\n    doit(1,n);\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1478956537,
        "uid": 20874,
        "name": "Coco_T",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "\u7adf\u7136\u6ca1\u6709pascal\uff0c\u4e8e\u662f\u672c\u4eba\u5c31\u6765\u9ad8\u9ad8\u5174\u5174\u7684\u5199\u9898\u89e3\u4e86\n\n\u56e0\u4e3a\u6211\u4eec\u77e5\u9053\uff0c\u76f8\u90bbn\u680b\u5927\u53a6\u5728\u4f9d\u6b21\u589e\u52a0\u7684\u65f6\u5019\u662f\u53ef\u4ee5\u4e00\u8d77\u76d6\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad\u5f53\u524d\u8fd9\u680b\u697c\u7684\u9ad8\u5ea6\u5927\u4e0d\u5927\u4e8e\u524d\u4e00\u680b\uff0c\u7136\u540e\u52a0\u4e0a\u76f8\u5bf9\u9ad8\u5ea6\u5c31\u884c\u4e86\uff0c\u5982\u679c\u4e0d\u5927\u4e8e\uff0c\u5c31\u4e0d\u8981\u7ba1\u5b83\u5566\u3002\n\n\u9644AC\u4ee3\u7801\uff1a\n\n```cpp\nprogram l1;\n  var\n    n,i,j,sum:longint;\n    a:array[0..100000] of longint;\nbegin\n  readln(n);\n  for i:=1 to n do\n    read(a[i]);\n  sum:=a[1];\n  for i:=2 to n do\n    if a[i]>a[i-1] then sum:=sum+a[i]-a[i-1];\n  writeln(sum);\n  readln;\n  readln;\nend.\n```",
        "postTime": 1478094199,
        "uid": 8305,
        "name": "\u4e09\u5b9e\u5c0f\u8303\u4e16\u794e",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "\u8be5\u9898\u6709\u4e24\u79cd\u8f83\u7b80\u5355\u7684\u89e3\u6cd5\uff1a\n\n\u2460\uff1a\u4e8c\u5206+\u9012\u5f52\n\n\u2461\uff1a\u8d2a\u5fc3\n\n\n\u2460\n\u5229\u7528\u4e8c\u5206\u6cd5\u4ece\u79ef\u6728\u5e95\u4e0b\u5f00\u59cb\u6a21\u62df\n\n\u627e\u5230\u6574\u4e2a\u6570\u7ec4\u5f53\u4e2d\u6700\u5c0f\u7684\u79ef\u6728\u9ad8\u5ea6 \u8bb0\u4e3asmal \u7136\u540e\u51cf\u6389smal\u9ad8\u5ea6 \u7136\u540eans=ans+smal\n\n\u7528\u9012\u5f52\u4ece\u8be5\u6700\u5c0f\u79ef\u6728\u5904 \u7ee7\u7eed\u5de6\u53f3\u641c\u7d22\u627e\u5230smal \u4f9d\u6b21\u7c7b\u63a8......\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n\n\n\n```cpp\n#include<iostream>\nusing namespace std;\nint f(int x,int y);\nint a[100009];\nint main()\n{\n    int n,ans=0;\n    cin>>n;\n    for(int i=1;i<=n;i++) cin>>a[i];\n    ans=f(1,n);\n    cout<<ans;\n    return 0;\n}\nint f(int x,int y)\n{\n    if(x>y) return 0;\n    int smal=10009;\n    int m=-1;\n    for(int i=x;i<=y;i++)\n    {\n        if(a[i]<smal)\n        {\n            smal=a[i];\n            m=i;\n        }\n    }\n    for(int i=x;i<=y;i++) a[i]-=smal;\n    return (smal+f(x,m-1)+f(m+1,y));\n}\n```\n\u2461\n\u7528\u8d2a\u5fc3\u4ece\u79ef\u6728\u5de6\u8fb9\u5f00\u59cb\u6a21\u62df\n\n\u6700\u9ad8\u7684\u8bb0\u4e3am \u6bcf\u6b21ans+=hi-m(\u8ba1\u7b97\u6b21\u6570) \u76f4\u5230\u627e\u5230hi<m\n\n\u8fd9\u65f6\u7528hi\u66ff\u6362m \u4ece\u8fd9\u91cc\u7ee7\u7eed\u641c\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<iostream>\nusing namespace std;\nint a[100009];\nint main()\n{\n    int n,m=0,ans=0;\n    cin>>n;\n    for(int i=1;i<=n;i++) cin>>a[i];\n    for(int i=1;i<=n;i++)\n    {\n        if(a[i]>m)\n        {\n            ans+=a[i]-m;\n            m=a[i];\n        }\n        else if(a[i]<m) m=a[i];\n    }\n    cout<<ans;\n    return 0;\n}\n\n```",
        "postTime": 1478002285,
        "uid": 22328,
        "name": "Darkness_L",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "\u6b64\u65b9\u6cd5\u8f83\u597d\u7406\u89e3\u4e14\u5bb9\u6613\u5b9e\u73b0\n\n\u7b2ci\u4e2a\u79ef\u6728\u82e5\u6700\u540e\u7684\u9ad8\u5ea6\u8981\u5927\u4e8ei-1\u4e2a\u79ef\u6728\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u591a\u505a\u4e24\u9ad8\u5ea6\u503c\u4e4b\u5dee\u7684\u6b21\u6570\n\n\u5e94\u4e3a\u4e0ei-1\u4e2a\u79ef\u6728\u9ad8\u5ea6\u76f8\u540c\uff08\u6216\u5c0f\u4e8ei-1\u4e2a\u79ef\u6728\u9ad8\u5ea6\uff09\u7684\u90e8\u5206\u53ef\u4ee5\u4e0ei-1\u4e2a\u79ef\u6728\u4e00\u540c\u505a\u4e0d\u9700\u52a0\u591a\u4f59\u7684\u6b21\u6570\u3002\n\n```cpp\n(#include<stdio.h>\n#include<algorithm>\nusing namespace std;\nint n,last,now,ans;\nint main()\n{\n    scanf(\"%d\",&n);\n    for (int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&now);\n        ans+=max(now-last,0);//\u52a0\u4e0a\u6bd4\u4e4b\u524d\u9ad8\u7684\u90e8\u5206\n        last=now;\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n)\n```\uff08c/c++\uff09\n",
        "postTime": 1454074330,
        "uid": 14615,
        "name": "fltflt1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "\u65b9\u6cd5\uff1a\u76f4\u63a5\u6a21\u62df\n\n\u653e\u4e00\u4e2a\u597d\u7406\u89e3\u7684\u65b9\u6cd5\uff08\u867d\u7136\u6bd4\u5176\u4ed6\u51e0\u4e2a\u957f\uff09\u3002\n\n\u6838\u5fc3\u601d\u8def\u5c31\u662f\u626b\u63cf\u4e32\uff0c\u7136\u540e\u9012\u5f52\u626b\u63cf\u53d1\u73b0\u7684\u6700\u957f\u975e\u96f6\u4e32\u3002\u6bcf\u6b21\u9012\u5f52\u65f6\u4fee\u6539\u8ba1\u6570\u5668\u3002\n\n\n\u76f4\u63a5\u4e0a\u4ee3\u7801\uff1a\n\n\n```cpp\n\n#include<stdio.h>\n#include<stdlib.h>\n#include<limits.h>\n\nint cont=0;//\u8ba1\u6570\u5668\nint n,*h;\n\nvoid finder(int begain,int end,int m)//m\u662f\u4e32\u5185\u6700\u5c0f\u503c\uff08\u4f18\u5316\u7528\u7684\uff09\n{\n    if(begain==end)\n    {\n        cont=cont+h[begain];\n        h[begain]=0;\n    }else{\n        int i;\n        int last,flag;\n        \n        cont=cont+m;\n        for(i=begain;i<=end;++i)\n        {\n            h[i]=h[i]-m;\n        }\n        \n        flag=0;\n        last=begain;\n        for(i=begain;i<=end;++i)\n        {\n            if(flag==0&&h[i]!=0)\n            {\n                last=i;\n                flag=1;\n                m=INT_MAX;\n            }else if(flag==1&&h[i]==0)\n            {\n                finder(last,i-1,m);\n                flag=0;\n            }\n            \n            if(h[i]<m)\n            {\n                m=h[i];\n            }\n            \n        }\n        if(flag==1)\n        {\n            finder(last,end,m);\n        }\n    }\n}\n\nint main()\n{\n    int i;\n    int min=INT_MAX;\n    \n    scanf(\"%d\",&n);\n    h=malloc(sizeof(int)*(n+5));\n    for(i=0;i<n;++i)\n    {\n        scanf(\"%d\",&h[i]);\n        if(h[i]<min)\n        {\n            min=h[i];\n        }\n    }\n    \n    finder(0,n-1,min);\n    \n    printf(\"%d\",cont);\n    \n    return 0;\n}\n\n```",
        "postTime": 1446733865,
        "uid": 4823,
        "name": "Hanson",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "\u55ef...\u6211\u7684\u60f3\u6cd5\u662f\u6a21\u62df\u62c6\u9664\u8fc7\u7a0b.\n\n\u5177\u4f53\u7684\u505a\u6cd5\u662f:\u627e\u5230\u4e00\u4e2a0\u548c0\u7684\u533a\u95f4,\u627e\u5230\u8fd9\u4e2a\u533a\u95f4\u7684\u6700\u5c0f\u503c,\u628a\u6700\u5c0f\u503c\u7d2f\u52a0ans,\u7136\u540e\u8fd9\u4e2a\u533a\u95f4\u7684\u6240\u6709\u5143\u7d20\u51cf\u6389\u6700\u5c0f\u503c,\u76f4\u5230\u5168\u96c6\u91cc\u9762\u7684\u5143\u7d20\u5168\u90fd\u662f0\u4e3a\u6b62;\u8f93\u51faans;\n\n\u4f8b\u5982:\n\n```cpp\n\n#include<stdio.h>\nint a[100005],n,ans=0;\nint build()\n{\n    int left=1,right,i,min;\n    while(1){\n        min=9999999;\n        while(a[left]==0 && left<=n) left++;\n        if(left==n+1) break;\n        right=left;\n        while(a[right]!=0 && right<=n) right++;\n        right--;\n        for(i=left;i<=right;i++){\n            if(min>a[i]) min=a[i];\n        }\n        for(i=left;i<=right;i++){\n            a[i]-=min;\n        }\n        ans+=min;\n        left=right+1;\n    }\n    for(i=2;i<=n;i++){\n        if(a[i] != 0) return 1;\n    }\n    return 0;\n}\nint main()\n{\n    int i,bui=1;\n    scanf(\"%d\",&n);\n    for(i=2;i<=n+1;i++){\n        scanf(\"%d\",&a[i]);\n    }\n    a[1]=0;\n    a[n+2]=0;\n    n+=2;\n    while(bui==1){\n        bui=build();\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n\n\n```\uff08c/c++\uff09\n\n```cpp\n0 3 3 4 1 2 0 ans=0;\n0 2 2 3 0 1 0 ans=1;\n0 0 0 1 0 0 0 ans=4;\n0 0 0 0 0 0 0 ans=5;\n\n```",
        "postTime": 1446266548,
        "uid": 8296,
        "name": "March",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "\u6211\u5148\u5f3a\u70c8\u9119\u89c6\u4e00\u4e0b\u697c\u4e0a\u90a3\u4f4d\u6284\u522b\u4eba\u9898\u89e3\u7684 \u7d20\u8d28\u5728\u54ea\n\n\u8fd8\u6709\u4f60\u4eec\u4fe9\u90a3\u4e2a\u4e0d\u518d\u8d58\u8ff0\u662f\u4ec0\u4e48\u60c5\u51b5\uff1f\uff01\u5e2e\u52a9\u522b\u4eba\u5f97\u6709\u70b9\u8bda\u610f\u554a\u00b7\u00b7\u00b7\n\n\u4ee5\u4e0b\u9898\u89e3\u9119\u4eba\u624b\u5199 \u5982\u679c\u4f60\u641c\u5230\u5176\u4ed6\u5730\u65b9\u6709 \u8981\u4e48\u662f\u9119\u4eba\u535a\u5ba2\uff08CSDN\u897f\u5bb6\u5bb6\uff09\u8981\u4e48\u5c31\u662f\u76d7\u6587\u4e86\n\n[hr  ]\n\u89e3\u8fd9\u9053\u9898\u76ee\u662f\u542c\u4e86vijos\u516c\u5f00\u8bfe\u4e0a\u7389\u51e4\u524d\u8f88\u63d0\u4f9b\u7684\u601d\u8def\n\n\n\u9898\u76ee\u610f\u601d\u5982\u679c\u753b\u51fa\u56fe\u6765\u662f\u8fd9\u6837\uff1a\n\n\n[ pic=1414]\n\n\u800c\u6211\u4eec\u8981\u505a\u7684\u662f\u5bf9\u533a\u95f4\u8fdb\u884c\u9010\u5c42\u642d\u5efa \u6362\u4e00\u79cd\u65b9\u5f0f\u7406\u89e3 \u5c31\u662f\u5bf9\u8fd9\u4e2a\u5927\u53a6\u7684\u6bcf\u4e00\u8fde\u7eed\u5c42\u8fdb\u884c\u9010\u5c42\u79fb\u9664\n\n\n\u9996\u5148\u60f3\u5230\u7684\u80af\u5b9a\u662f\u8d2a\u5fc3 \u5f88\u6734\u7d20 \u6bcf\u6b21\u53bb\u6389\u6bcf\u4e2a\u533a\u95f4\u4e2d\u6700\u5c0f\u7684\u4e00\u4e2a\u6d88\u53bb\u518d\u7edf\u8ba1\u5373\u53ef\n\n\n\u6b63\u5982\u8fd9\u5f20\u56fe\uff1a\n\n\n\n[ pic=1415]\n\n\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0 \u8fd8\u662f\u8bf4\u4e00\u4e0b\u9012\u5f52\u7684\u7b80\u5355\u505a\u6cd5\u5427\n\n\n\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u60f3 \u7b2c\u4e00\u5ea7\u697c\u623f\u662f\u4e24\u5c42\uff0c\u90a3\u4e48\u81f3\u5c11\u8981\u79fb\u9664\u4e24\u5c42\uff0c\u63a5\u4e0b\u6765\u662f\u7b2c\u4e8c\u5ea7\u697c\u623f\uff0c\u7531\u4e8e\u5b83\u6bd4\u7b2c\u4e00\u5ea7\u697c\u5c42\u9ad8\uff0c\u7b2c\u4e00\u5ea7\u697c\u7684\u4e24\u5c42\u79fb\u9664\u65f6\uff0c\u5b83\u7684\u4e0b\u9762\u4e24\u5c42\u4e5f\u5df2\u7ecf\u88ab\u79fb\u8d70\u4e86\uff0c\u53ea\u9700\u8981\u518d\u79fb\u8d70\u6700\u4e0a\u9762\u7684\u4e00\u5c42\uff0c\u5373\u4e0e\u524d\u4e00\u5ea7\u697c\u7684\u5dee\u503c\u5373\u53ef\uff1b\u7b2c\u4e09\u5ea7\u697c\u4e5f\u662f\u8fd9\u6837\uff1b\u800c\u8fd9\u65f6\u51fa\u73b0\u4e86\u7b2c\u56db\u5ea7\u697c\uff0c\u5b83\u6bd4\u7b2c\u4e09\u5ea7\u697c\u77ee\uff0c\u8fd9\u5c31\u662f\u8bf4\uff0c\u5728\u79fb\u8d70\u524d\u9762\u7684\u51e0\u5c42\u540e\uff0c\u8fd9\u4e2a\u5730\u65b9\u5df2\u7ecf\u662f\u7a7a\u7684\u4e86\u3002\u7b2c\u56db\u5ea7\u697c\u6709\u4e00\u5c42\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u7b2c\u4e00\u5c42\u79fb\u8d70\u540e\uff0c\u8fd9\u91cc\u5c31\u662f\u7a7a\u767d\uff0c\u5c06\u5927\u53a6\u5206\u4e3a\u4e24\u4e2a\u533a\u95f4\uff08\u5982\u7b2c\u4e8c\u5f20\u56fe\uff0c\u53bb\u9664\u6700\u4e0b\u9762\u9ec4\u8272\u7684\u4e00\u5c42\uff09\u3002\u56e0\u6b64\uff0c\u8fd9\u5ea7\u697c\u53f3\u9762\u7684\u533a\u95f4\u548c\u5de6\u8fb9\u533a\u95f4\u4ece\u7b2c\u4e00\u5c42\uff08\u4e5f\u5c31\u662f\u8fd9\u5ea7\u697c\u7684\u5c42\u6570\uff09\u5f00\u59cb\u5c31\u4e0d\u5728\u4e00\u4e2a\u7cfb\u7edf\uff0c\u9700\u8981\u5355\u72ec\u64cd\u4f5c\uff0c\u76f8\u5f53\u4e8e\u4e00\u5ea7\u72ec\u7acb\u7684\u5927\u53a6\u3002\u6240\u4ee5\u6211\u4eec\u5728\u8fd9\u65f6\u5019\u5c06\u5f53\u524d\u697c\u5c42\u66f4\u65b0\u6210\u8fd9\u5ea7\u77ee\u697c\uff0c\u4e4b\u540e\u7684\u64cd\u4f5c\u548c\u4e4b\u524d\u4e00\u6837\u3002\n\n\n\u7b80\u5316\u6210\u9012\u63a8\u65b9\u7a0b\u5c31\u662f\uff1a\n\n\n\u5f00\u59cbnow=ans=\u7b2c\u4e00\u5ea7\u697c\u9ad8\u5ea6\n\n\n\u4ece\u5de6\u5f80\u53f3\u626b\u63cf\n\n\n\u5982\u679c \u4e0b\u4e00\u5ea7\u697c\u9ad8\u4e8enow \u5219ans+=\u4e0b\u4e00\u5ea7\u697c\u548c\u8fd9\u5ea7\u697c\u7684\u9ad8\u5ea6\u5dee\n\n\n\u5426\u5219 \u4e0d\u4f5c\u5904\u7406\n\n\n\u66f4\u65b0now\u7684\u503c\u4e3a\u4e0b\u4e00\u5ea7\u697c\n\n\n\n\u653e\u4ee3\u7801\u54af~\n\n```cpp\n\n#include<cstdio>  \nusing namespace std;  \n //by \u96e8\u7af9 \nconst int maxn=100000+10;  \nint a[maxn];  \n  \nint main(){  \n    int n;  \n    scanf(\"%d\",&n);  \n    for (int i=0;i<n;i++) scanf(\"%d\",&a[i]);  \n    int now=a[0],ans=a[0];  \n    for(int i=1;i<n;i++){  \n        if (a[i]>now) ans+=(a[i]-now);  \n        now=a[i];  \n    }  \n    printf(\"%d\",ans);  \n    return 0;  \n}  \n\n```\n\n\u7b2c\u4e00\u6b21\u7528Ubb \u5e0c\u671b\u80fd\u7528\n",
        "postTime": 1427598447,
        "uid": 3250,
        "name": "\u96e8\u7af9",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    },
    {
        "content": "\u6211\u7528\u7684\u662f\u4e00\u79cd\u5f88\u6d45\u663e\u76f4\u63a5\u7684\u601d\u8def\n\n\n------------\n- \u7b2c\u4e00\u6b21\u6211\u4eec\u6700\u4f18\u7684\u65b9\u6848\u80af\u5b9a\u662f\u51cf\u53bb\u6240\u6709\u79ef\u6728\u4e2d\u7684\u6700\u5c0f\u503c\uff0c\u7136\u540e\u5e8f\u5217\u4e2d\u90a3\u4e9b\u539f\u6765\u7684\u6700\u5c0f\u503c\u5c31\u4f1a\u53d8\u62100\u3002\n- \u8fd9\u6837\uff0c\u5e8f\u5217\u5c31\u88ab0\u5206\u6210\u4e86\u5f88\u591a\u5c0f\u6bb5\uff0c\u5728\u6bcf\u4e2a\u5c0f\u6bb5\u91cc\u5206\u522b\u6700\u4f18\u7684\u65b9\u6848\u4e5f\u662f\u51cf\u53bb\u5c0f\u6bb5\u91cc\u6700\u5c0f\u503c\n- \u56e0\u6b64\u53ef\u4ee5\u7528\u5206\u6cbb\u6765\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u6982\u662fO(nlogn)\uff0c~~\u867d\u7136\u5f88\u6162\u4f46\u4e5f~~\u80fd\u591f\u89e3\u51b3\u95ee\u9898\n\n```pascal\nvar a:array [0..100001] of longint;\n\tn,i,ans:longint;\n\nprocedure solve(l,r:longint);\nvar i,k,min,x:longint;\nbegin\nif l>r then exit;\nmin:=l;\nfor i:=l+1 to r do\n\tif a[i]<a[min] then min:=i;\nans:=ans+a[min]; k:=a[min]; x:=l;\nfor i:=l to r do a[i]:=a[i]-k;\nfor i:=l to r do\n\tif a[i]=0 then begin solve(x,i-1); x:=i+1; end;\nif x<=r then solve(x,r);\nend;\n\nbegin\nread(n);\nfor i:=1 to n do read(a[i]);\nans:=0;\nsolve(1,n);\nwriteln(ans);\nend.\n```",
        "postTime": 1531469051,
        "uid": 4469,
        "name": "ckd\u98de\u9f20",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1969 \u3010\u79ef\u6728\u5927\u8d5b\u3011"
    }
]