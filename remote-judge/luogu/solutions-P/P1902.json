[
    {
        "content": "## Part 0 \u524d\u8a00\n\n\u8fd9\u662f\u4f60\u6ca1\u6709\u89c1\u8fc7\u7684\u8239\u65b0\u89e3\u6cd5\u3002\n\n\u8bf7\u81ea\u52a8\u5ffd\u7565\u7b97\u6cd5\u6807\u7b7e\u3002\n\n------\n\n## Part 1 \u8003\u8651\u6b63\u89e3\u2014\u2014\u4e8c\u5206+bfs\n\n\u6211\u4eec\u5728\u9898\u9762\u4e2d\u770b\u5230\u4e86**\u6700\u5927\u503c\u6700\u5c0f** \u8fd9\u4e94\u4e2a\u5b57\u3002\n\n\u5f88\u5bb9\u6613\u5c31\u60f3\u5230\u4e86\u4e8c\u5206\u7b54\u6848\u3002\n\n\u7136\u9e45\u6211\u7684``dfs``\u6302\u4e86\uff0c\u6240\u4ee5\u6211\u5c31\u5199\u4e86``bfs``\uff0c\u963f\u6389\u4e86\u3002\n\n\u672c\u6765\u5c31\u662f\u5f88\u88f8\u7684\u505a\u6cd5\uff0c\u9650\u4e8e\u7bc7\u5e45\uff0c\u8fd9\u91cc\u5c31\u65e0\u9700\u8d58\u8ff0\u4e86\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint get()\n{\n\tint x = 0, f = 1; char c = getchar();\n\twhile(!isdigit(c)) { if(c == '-') f = -1; c = getchar(); }\n\twhile(isdigit(c)) { x = x * 10 + c - '0'; c = getchar(); }\n\treturn x * f;\n}\n\nconst int MaxN = 1005;\nconst int inf = 0x3f3f3f3f;\nconst int dx[5] = {0, 1, 0, -1, 0};\nconst int dy[5] = {0, 0, 1, 0, -1};\nint p[MaxN][MaxN], vis[MaxN][MaxN];\nint n, m;\nint l = inf, r = -inf, mid, ans, f; \n\nbool bfs(int x, int y, int maxn) //\u5224\u65admid\u662f\u5426\u53ef\u884c\u7684bfs\n{\n\tqueue<pair<int, int> > q;\n\tq.push(make_pair(x, y)); //STL\u91cc\u7684pair\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u8981\u65b9\u4fbf\u4e00\u4e9b\n\tvis[x][y] = 1; \n\twhile(q.size()) { //\u4ee5\u4e0b\u5c31\u662fbfs\u677f\u5b50\n\t\tint xx = q.front().first; \n\t\tint yy = q.front().second;\n\t\tq.pop();\n\t\tfor(int i = 1; i <= 4; i++) {\n\t\t\tint nx = xx + dx[i];\n\t\t\tint ny = yy + dy[i];\n\t\t\tif(nx < 1 || nx > n || yy < 1 || yy > m || vis[nx][ny] || p[nx][ny] > maxn)\n\t\t\t\tcontinue; //\u4e0d\u53ef\u884c\uff08\u8d8a\u754c\u3001\u5df2\u8bbf\u95ee\u3001\u4f24\u5bb3\u8fc7\u5927\uff09\u7684\u76f4\u63a5\u8df3\u8fc7\n\t\t\tvis[nx][ny] = 1;\n\t\t\tif(nx == n) return 1; //\u5230\u4e86\uff0c\u8fd4\u56de1\n\t\t\telse q.push(make_pair(nx, ny));\n\t\t}\n\t}\n\treturn 0; //\u6ca1\u6709\u641c\u5230\uff0c\u8fd4\u56de0\n}\n\nint main()\n{\n\tn = get(), m = get();\n\tfor(int i = 1; i <= n; i++) {\n\t\tfor(int j = 1; j <= m; j++) {\n\t\t\tp[i][j] = get();\n\t\t\tr = max(r, p[i][j]);\n\t\t\tl = min(l, p[i][j]);\n\t\t}\n\t}\n\twhile(l <= r) { //\u4e8c\u5206\u7b54\u6848\u6a21\u677f\n\t\tmid = (l + r) >> 1;\n\t\tf = 0;\n\t\tmemset(vis, 0, sizeof(vis)); //\u91cd\u7f6e\u6570\u7ec4\n\t\tif(bfs(1, 1, mid)) r = mid - 1, ans = mid; //\u5982\u679c\u8fd9\u4e2amid\u53ef\u884c\uff0c\u8bf4\u660e\u53ef\u80fd\u8fd8\u80fd\u518d\u5c0f\uff0c\u4e8e\u662f\u66f4\u65b0\u7b54\u6848 + \u7f29\u5c0f\u8303\u56f4\n\t\telse l = mid + 1; //mid\u6b64\u4e0d\u53ef\u884c\uff0c\u8bf4\u660e\u4e0d\u53ef\u80fd\u518d\u5c0f\uff0c\u4e5f\u7f29\u5c0f\u8303\u56f4\uff0c\u4e0d\u66f4\u65b0\u7b54\u6848\n\t}\n\tprintf(\"%d\", ans);\n\treturn 0;\n}\n\n```\n\n## Part 2 \u65b0\u89e3\u6cd5\n\n\u4e8c\u5206\u8fd9\u79cd\u7b97\u6cd5\u5bf9\u9898\u4e2d\u7684``p[i][j]``\u7684\u4f9d\u8d56\u8f83\u4e25\u91cd\u3002\u5982\u679c\u52a0\u5f3a\u6570\u636e\uff0c\u6539\u5230$10^9$\u600e\u4e48\u529e\u5462\uff1f\n\n\u8fd9\u6837\u5c31\u9700\u8981\u4e00\u4e2a\u9760``n``\u3001``m``\u5403\u996d\u7684\u7b97\u6cd5\u4e86\n\n\u5728\u770b\u8fd9\u4e2a\u89e3\u6cd5\u524d\uff0c\u60a8\u9700\u8981\u4e00\u4e9b\u56fe\u8bba\u77e5\u8bc6\n\n\u8ba9\u6211\u4eec\u628a\u6837\u4f8b\u753b\u6210\u4e00\u5f20\u56fe\uff1a\uff08\u6682\u4e0d\u5e26\u6743\uff09\n\n![](https://cdn.luogu.com.cn/upload/pic/62443.png)\n\n\u8fd9\u4e2a\u56fe\u5f97\u5230\u7684\u65b9\u6cd5\uff1a\n\n\u8bbe\u70b9\u53f7\u4e3a``k``\uff0c\u8fd9\u4e2a\u70b9\u662f``x``\u884c``y``\u5217\u3002\n\n\u5219\u6709\uff1a$k=(x-1) \\times m + y$\n\n\u6211\u4eec\u7684\u4efb\u52a1\u662f\u4ece\u7b2c\u4e00\u884c\u5230\u7b2c\u56db\u884c\uff0c\u6c42\u51fa\u7ecf\u8fc7\u7684\u6700\u5927\u70b9\u6743\u6700\u5c0f\uff08\u6709\u4e00\u70b9\u7ed5\uff09\n\n\u9996\u5148\u6211\u4eec\u9700\u8981\u628a\u70b9\u6743\u8f6c\u6210\u8fb9\u6743\uff1a\n\n\u4ed4\u7ec6\u5730\u94bb\u7814\u8fd9\u53e5\u8bdd\uff1a\n\n> \u6700\u5927\u70b9\u6743\u6700\u5c0f\n\n\u89e3\u8bfb\uff1a\n\n- \u6839\u636e\u6700\u5927\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u5982\u679c\u6211\u4eec\u8981\u70b9\u8f6c\u8fb9\uff0c\u4e24\u70b9\u4e4b\u95f4\u7684\u8fb9\u6743\u5e94\u4e3a\u4e24\u7aef\u70b9\u7684\u70b9\u6743\u6700\u5927\u503c\u3002\n\n  - \u6839\u636e\u8fd9\u4e2a\u8fb9\u8f6c\u70b9\u7684\u539f\u7406\uff0c\u53ef\u4ee5\u5f97\u5230\u8fd9\u4e00\u5f20\u56fe\uff1a\n\n  ![](https://cdn.luogu.com.cn/upload/pic/62448.png)\n\n- \u6839\u636e\u6700\u5c0f\uff0c\u5f97\u51fa\uff1a\u6211\u4eec\u9700\u8981\u9009\u62e9\u4e00\u4e9b\u8fb9\u6765\u4f7f\u7b2c\u4e00\u884c\u548c\u6700\u540e\u4e00\u884c\u8fde\u901a\uff0c\u8fd9\u4e9b\u8fb9\u7684\u6743\u5c3d\u91cf\u5c0f\n\n\u73b0\u5728\u6211\u7684\u601d\u8def\u5c31\u663e\u800c\u6613\u89c1\u4e86\uff1a**MST\uff08\u6700\u5c0f\u751f\u6210\u6811\uff09**\n\n\u4f46\u662f\u53c8\u4e0d\u662f\u88f8\u7684\u6700\u5c0f\u751f\u6210\u6811\u3002\u6211\u4eec\u4e0d\u9700\u8981\u9009\u62e9``n-1``\u6761\u8fb9\uff0c\u53ea\u9700\u8981\u4f7f\u9996\u5c3e\u4e24\u884c\u8fde\u901a\u3002\n\n\u6240\u4ee5\u6211\u4eec\u9009\u62e9``Kruskal``\u7b97\u6cd5\uff0c\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\uff1a\n\n\u6309\u7167\u9898\u9762\uff0c\u7b2c\u4e00\u884c\u548c\u6700\u540e\u4e00\u884c\u7684\u8fb9\u6743\u90fd\u662f``0``\uff0c\u4e2d\u95f4\u53c8\u4e0d\u53ef\u80fd\u51fa\u73b0\u8d1f\u6743\uff0c\u6240\u4ee5\u6211\u4eec\u7684\u7b97\u6cd5\u4f1a\u9996\u5148\u9009\u51fa\u8fd9\u4e9b\u8fb9\uff0c\u56e0\u6b64\u53ef\u4ee5\u8ba4\u4e3a\u8fd9\u4e9b\u70b9\u4ece**\u4e00\u5f00\u59cb\u5c31\u662f\u8fde\u901a**\u7684\uff0c\u5e76\u4e14\u53ef\u4ee5\u8ba4\u4e3a\uff0c\u5c06\u8fd9\u4e24\u884c\u90fd\u8fde\u901a\uff0c\u5c31\u7b49\u4ef7\u4e8e\u5c06\u5206\u522b\u4f4d\u4e8e\u8fd9\u4e24\u884c\u4e0a\u7684\u4efb\u610f\u4e24\u70b9\u8fde\u901a\u3002\u4e3a\u4e86\u7b80\u4fbf\uff0c\u6211\u4eec\u5c06\u7b2c\u4e00\u4e2a\u70b9\u548c\u7b2c\u516b\u4e2a\u70b9\u8fde\u901a\u3002\u5982\u56fe\uff1a\u7ea2\u8fb9\u8868\u793a\u5df2\u9009\u8fb9\uff0c\u9ed1\u8fb9\u672a\u9009\u8fb9\n\n![](https://cdn.luogu.com.cn/upload/pic/62449.png)\n\n\u73b0\u5728\u6309\u7167\u751f\u6210\u6811\u7b97\u6cd5\uff0c\u5f00\u59cb\u9009\u5176\u4ed6\u8fb9\n\n\u7b2c\u4e00\u6b65\uff0c\u9009\u62e9\u76ee\u524d\u6700\u5c0f\u7684\u672a\u9009\u8fb9\u2014\u2014\u5728``5``\u548c``7``\u4e4b\u95f4\uff0c\u8fb9\u6743\u4e3a``2``\u7684\u8fb9\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/62450.png)\n\n\u7b2c\u4e8c\u6b65\u3001\u7b2c\u4e09\u6b65\uff0c\u9009\u51fa\u76ee\u524d\u8fb9\u6743\u6700\u5c0f\u7684\u8fb9\uff0c\u5206\u522b\u662f\u2014\u2014\u5728``3``\u548c``5``\u4e4b\u95f4\uff0c\u8fb9\u6743\u4e3a``3``\u7684\u8fb9\u3001\u5728``1``\u5230``3``\u4e4b\u95f4\uff0c\u8fb9\u6743\u4e3a``3``\u7684\u8fb9\uff08\u8282\u7ea6\u7bc7\u5e45\uff0c\u4e00\u5e76\u753b\u51fa\uff09\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/62453.png)\n\n\u8fd9\u65f6\u5019\uff0c\u6211\u4eec\u6109\u5feb\u5730\u53d1\u73b0\uff0c``1``\u53f7\u548c``8``\u53f7\u5df2\u7ecf\u8fde\u901a\u4e86\u3002\u7b97\u6cd5\u7ed3\u675f\uff0c\u7b54\u6848\u4e3a``3``\u3002\n\n\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint get()\n{\n\tint x = 0, f = 1; char c = getchar();\n\twhile(!isdigit(c)) { if(c == '-') f = -1; c = getchar(); }\n\twhile(isdigit(c)) { x = x * 10 + c - '0'; c = getchar(); }\n\treturn x * f;\n}\n\nconst int MaxN = 1005;\nconst int inf = 0x3f3f3f3f;\nint p[MaxN][MaxN];\nint n, m, maxn = -inf;\nstruct Edge {\n\tint u, v, w;\n} edge[10000005];\nint k = 0;\nint fa[10000005];\n\nint MAP(int x, int y) { return (x - 1) * m + y; } //\u6b64\u51fd\u6570\u7528\u4e8e\u6c42\uff08x\uff0cy\uff09\u5728\u56fe\u4e2d\u7684\u7f16\u53f7\nint find(int x) { return (x == fa[x]? x : fa[x] = find(fa[x])); } //\u4e00\u884c\u5e76\u67e5\u96c6\nbool cmp(Edge a, Edge b) { return a.w < b.w; } //\u4e00\u884ccmp\n\nvoid kruskal() //\u514b\u9c81\u65af\u5361\u5c14\u7b97\u6cd5:\n{\n\tsort(edge + 1, edge + k + 1, cmp); //\u9996\u5148\u5c06\u8fb9\u6309\u6743\u503c\u6392\u5e8f\n\tint st = MAP(1, 1); //\u6307\u5b9a\u4e00\u4e2a\u5f00\u59cb\u70b9\uff1a\u7b2c\u4e00\u4e2a\n\tint ed = MAP(n, m); //\u6307\u5b9a\u4e00\u4e2a\u7ed3\u675f\u70b9\uff1a\u6700\u540e\u4e00\u4e2a\n\tfor(int i = 1; i <= k; i++) { //\u679a\u4e3e\u8fb9\uff1a\n\t\tint u = edge[i].u; \n\t\tint v = edge[i].v;\n\t\tint x = find(u), y = find(v); //\u53d6\u51fau\u3001v\u6240\u5728\u8fde\u901a\u5757\n\t\tif(x != y) //\u82e5\u5728\u540c\u4e00\u8fde\u901a\u5757\uff0c\u6211\u4eec\u5c31\u7b97\u53bb\u5408\u5e76\u4e5f\u6ca1\u6709\u591a\u5927\u610f\u4e49\uff0c\u8fd9\u6837\u53ef\u4ee5\u7a0d\u5fae\u8282\u7701\u65f6\u95f4\n\t\t{\n\t\t\tmaxn = max(maxn, edge[i].w); //\u66f4\u65b0\u6700\u5927\u8fb9\u6743\n\t\t\tfa[x] = fa[y]; //\u5c06\u4e24\u8fb9\u8fde\u901a\n\t\t\tif(find(st) == find(ed)) return; //\u5982\u679c\u5f00\u59cb\u70b9\u548c\u7ed3\u675f\u70b9\u8fde\u901a\u4e86\uff0c\u8bf4\u660e\u53ef\u4ee5\u9000\u51fa\u4e86\n\t\t}\n\t}\n}\n\nint main()\n{\n\tn = get(), m = get();\n\tfor(int i = 1; i <= n; i++) {\n\t\tfor(int j = 1; j <= m; j++) {\n\t\t\tp[i][j] = get();\n\t\t\tfa[MAP(i, j)] = MAP(i, j); //\u5728\u8bfb\u5165\u7684\u65f6\u5019\u987a\u4fbf\u521d\u59cb\u5316\u5e76\u67e5\u96c6\n\t\t}\n\t}\n    //\u91cd\u70b9\uff1a\u8fde\u8fb9\n\tfor(int i = 1; i <= n; i++) {\n\t\tfor(int j = 1; j <= m; j++) {\n\t\t\tint u = MAP(i, j); //\u8fd9\u4e2a\u70b9\n\t\t\tint v1 = MAP(i, j + 1); //\u5411\u53f3\u8fde\u8fb9\n\t\t\tint v2 = MAP(i + 1, j); //\u5411\u4e0b\u8fde\u8fb9\n            //\u56e0\u4e3a\u662f\u65e0\u5411\u56fe\uff0c\u53ea\u7528\u5411\u4e24\u4e2a\u65b9\u5411\u8fde\u8fb9\n            //\u6743\u503c\u662f\u4e24\u70b9\u6743\u95f4\u7684\u8f83\u5c0f\u503c\n\t\t\tif(j + 1 <= m) edge[++k] = {u, v1, max(p[i][j], p[i][j + 1])}; //\u6ce8\u610f\u5224\u65ad\u8d8a\u754c\u3002\n\t\t\tif(i + 1 <= n) edge[++k] = {u, v2, max(p[i][j], p[i + 1][j])};\n\t\t}\n\t}\n\t/*\n\tfor(int i = 1; i <= k; i++) {\n\t\tprintf(\"%d %d %d\\n\", edge[i].u, edge[i].v, edge[i].w);\n\t}\n\t*/\n\tkruskal(); //\u8dd1MST\u7b97\u6cd5\n\tprintf(\"%d\", maxn); //\u8f93\u51fa\u89e3\n\treturn 0;\n}\n\n```\n\n## Part 3 \u540e\u8bb0\n\n\u524d\u8005\u7684\u65f6\u95f4\uff1a\u641c\u7d22\u7684\u590d\u6742\u5ea6\u5b8c\u5168\u5c31\u662f\u7384\u5b66\uff08\u53d6\u51b3\u4e8e\u6570\u636e\uff09\n\n\u5173\u4e8e\u540e\u8005\u7684\u65f6\u95f4\uff1f\n\n\u8bfb\u5165\u3001\u8fde\u8fb9\u3001\u5feb\u6392\u5360\u636e\u4e86\u7edd\u5927\u90e8\u5206\u65f6\u95f4\uff0c\u514b\u9c81\u65af\u5361\u5c14\u662f\u7ebf\u6027\u7684\uff08\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1\uff09\u3002\u7a0d\u5fae\u5361\u5361\u5e38\u8fd8\u662f\u80fd\u8dd1\u7684\u5f88\u5feb\u7684\u3002\n\n\u7ecf\u8fc7\u5b9e\u6d4b\uff0c\u540e\u8005\u6bd4\u524d\u8005\u6162\u3001\u7a7a\u95f4\u5927\u3001\u4ee3\u7801\u957f\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u90a3\u4e3a\u4ec0\u4e48\u8fd8\u8981\u8fd9\u4e48\u505a\u5462\uff1f\n\n\u6bd5\u7adf\u591a\u601d\u8003\u4e00\u4e0b\u603b\u662f\u597d\u7684\u3002\n\n\u6ce8\uff1a\u56e0\u4e3a\u662f\u4e0d\u6309\u5e38\u7406\u51fa\u724c\u7684\u65b9\u6cd5\uff0c\u53ef\u80fd\u4f1a\u6709\u9505\uff08\u867d\u7136\u6b63\u786e\u6027\u53ef\u4ee5\u5f97\u5230\u8bc1\u660e\uff09\u3002\u5982\u679c\u60a8\u53d1\u73b0\u4e86``HACK``\u7684\u65b9\u6cd5\uff0c\u6216\u8005\u6709\u4e0d\u61c2\u7684\u5730\u65b9\uff0c\u8bf7\u79c1\u4fe1\u4f5c\u8005\u3002",
        "postTime": 1562467277,
        "uid": 92254,
        "name": "Social_Zhao",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1902 \u3010\u523a\u6740\u5927\u4f7f\u3011"
    },
    {
        "content": "[\u9898\u76ee](https://www.luogu.org/problem/P1902)\n\n**\u4e3b\u8981\u6765\u89e3\u91ca\u4e00\u4e0b\u5176\u4ed6\u9898\u89e3\u672a\u8be6\u7ec6\u89e3\u91ca\u7684dfs\u90e8\u5206**\n\n\u8bfb\u5b8c\u9898\u76ee\u4e4b\u540e\uff0c\u6709\u4e00\u4e2a\u6bd4\u8f83\u660e\u663e\u7684\u53e5\u5b50\u201c _\u6574\u4e2a\u90e8\u961f\u7684\u4f24\u5bb3\u503c\u6700\u5c0f_ \u3002\u201d\n\u56e0\u4e3a\u6574\u4e2a\u90e8\u961f\u7684\u4f24\u5bb3\u503c\u662f\u6700\u5927\u503c\u90a3\u4e48\u8fd9\u4e2a\u9898\u76ee\u5c31\u53d8\u6210\u4e86\u6700\u5927\u503c\u7684\u6700\u5c0f\u503c\n\u6240\u4ee5\u6211\u4eec\u8003\u8651\u4e8c\u5206\u7b54\u6848\u6c42\u89e3\u3002\n\n\u6211\u4eec\u4e8c\u5206\u4e00\u4e2a\u7b54\u6848mid\u6765\u8868\u793a\u4e00\u4e2a\u754c\u9650\uff0c\u5982\u679c\u5f53\u524d\u8fd9\u4e2a\u683c\u5b50\u7684\u4f24\u5bb3\u4ee3\u4ef7\u6bd4mid\u5c0f\u5219\u53ef\u4ee5\u8d70\u5426\u5219\u5c31\u4e0d\u8d70\uff0c\u6bcf\u6b21check\u51fd\u6570\u53ea\u9700\u5224\u65ad\u80fd\u5426\u4ece\u7b2c\u4e00\u884c\u8d70\u5230\u6700\u540e\u4e00\u884c\u5373\u53ef\uff0c\u56e0\u4e3a\u6bcf\u4e00\u884c\u7684\u6bcf\u4e2a\u95e8\u90fd\u662f\u76f8\u8fde\u7684\uff0c\u6240\u4ee5\u53ea\u8981\u6709\u4e00\u4e2a\u80fd\u5230\uff0c\u90a3\u4e48\u6211\u4eec\u518d\u6d3em-1\u4e2a\u4eba\u987a\u7740\u8fd9\u6761\u8def\u8fc7\u53bb\u518d\u6cbf\u7740\u6a2a\u5411\u7684\u95e8\u8fc7\u53bb\u5c31\u597d\u5566\uff0c\u56e0\u4e3a\u7b2c\u4e00\u884c\u548c\u6700\u540e\u4e00\u884c\u7684\u4f24\u5bb3\u503c\u4e3a\u96f6\uff0c\u6240\u4ee5\u8fd9\u4e48\u505a\u83ab\u5f97\u95ee\u9898\u3002\n\n\u89e3\u91ca\u4e00\u4e0b\u6211\u5f88\u4e45\u90fd\u6ca1\u641e\u660e\u767d\u7684\u95ee\u9898\uff1a\n\n\u4e3a\u4ec0\u4e48dfs\u65f6\u53ea\u8981\u5224\u65ad\u662f\u5426\u80fd\u5230\u8fbe\u5373\u53ef\uff0c\u6211\u4eec\u4e0d\u662f\u8981\u627e\u4ed6\u7684\u6700\u5927\u503c\u6765\u8868\u793a\u8fd9\u4e00\u6b21\u7684\u4f24\u5bb3\u503c\u561b\uff1f\n\u56e0\u4e3a\u6211\u4eec\u4e8c\u5206\u7684\u8fd9\u4e2a\u503c\uff0c\u6700\u540e\u4e8c\u5206\u51fa\u6765\u7684\u4e00\u5b9a\u662f\u67d0\u4e2a\u70b9\u4ea7\u751f\u7684\u4f24\u5bb3\u503c\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u6700\u540e\u7684\u7b54\u6848\uff08\u662f\u6700\u5927\u503c\u561b\uff0c\u5224\u65ad\u6b64\u70b9\u662f\u5426\u53ef\u884c\u5c31\u662f\u5224\u65ad\u4ed6\u662f\u5426\u662f\u6bd4mid\u5c0f\uff0c\u6240\u4ee5mid\u5c31\u662f\u6b64\u6b21\u7684\u6700\u5927\u503c\u5c31\u662f\u7b54\u6848\uff09\u8fd9\u4e5f\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\u6211\u4eec\u4e8c\u5206\u7684\u662f\u4f24\u5bb3\u503c\u6700\u540e\u5374\u53ef\u4ee5\u8f93\u51fa\u4e8c\u5206\u7684\u8fb9\u754c\u7684\u95ee\u9898\u3002\n\n\u90e8\u5206\u4ee3\u7801\u89e3\u91ca\uff1a\n```cpp\nvoid dfs(int xx, int yy) {\n\tif(xx == n) {flag = 1;return;}\n\tfor(int i = 0; i < 4; i++) {\n\t\tx = xx + dx[i], y = yy + dy[i];\n\t\tif(x >= 1 && x <= n && y >= 1 && y <= m && map[x][y] <= mid && !vis[x][y]) {\n\t\t\tvis[x][y] = 1;\n\t\t\tdfs(x, y);\n\t\t\tvis[x][y] = 0;\n\t\t\tif(flag) break;\n\t\t}\n\t}\n}\n```\n\u4e5f\u5c31\u662f\u57fa\u672c\u7684\u641c\u7d22\u601d\u8def\n\u6bcf\u6b21\u8d70\u56db\u4e2a\u65b9\u5411\uff0c\u53ea\u8981\u8fd8\u6ca1\u6709\u8d85\u51fa\u8fb9\u754c\uff0c\u5e76\u4e14\u8fd9\u4e2a\u70b9\u7684\u4f24\u5bb3\u503c\u5728\u5141\u8bb8\u8303\u56f4\u4e4b\u5185\u5e76\u4e14\u8fd8\u6ca1\u6709\u8d70\u5230\u8fc7\u8fd9\u4e2a\u70b9\uff0c\u90a3\u5c31\u8d70\u4ed6\uff0c\u7ee7\u7eed\u5f80\u4e0b\u641c\u7d22\uff0c\u56de\u6eaf\u3002\n\n```cpp \n\twhile(l + 1 < r) {\n\t\tmid = (l + r) >> 1;\n\t\tif(check(mid)) r = mid;\n\t\telse l = mid;\n\t}\n```\n\u4e8c\u5206\u7b54\u6848\u7684\u8fb9\u754c\u95ee\u9898\u5f88\u91cd\u8981\uff0c\u6709\u5f88\u591a\u5c0f\u7ec6\u8282\u9700\u8981\u6ce8\u610f\u3002\u6bd4\u5982\u6b7b\u5faa\u73af\u3001\u66f4\u6389\u6700\u4f18\u89e3\u7b49\u95ee\u9898\u3002\n\n```cpp\nmemset(vis, 0, sizeof(vis));\n```\n**\u4e00\u5b9a\u4e00\u5b9a\u4e00\u5b9a\u8981\u6e05\u7a7a\u6807\u8bb0\u6570\u7ec4\uff01**\n\nThe Last:\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\nusing namespace std;\nconst int N = 1010;\nint n, m, map[N][N], l, r, mid, x, y;\nint dx[4] = {-1, 1, 0, 0}, dy[4] = {0, 0, -1, 1};\nbool flag = 0, vis[N][N];\nint read() {\n\tint s = 0, w = 1;\n\tchar ch = getchar();\n\twhile(!isdigit(ch)) {if(ch == '-') w = -1;ch = getchar();}\n\twhile(isdigit(ch)) {s = s * 10 + ch - '0';ch = getchar();}\n\treturn s * w;\n}\nvoid dfs(int xx, int yy) {\n\tif(xx == n) {flag = 1;return;}\n\tfor(int i = 0; i < 4; i++) {\n\t\tx = xx + dx[i], y = yy + dy[i];\n\t\tif(x >= 1 && x <= n && y >= 1 && y <= m && map[x][y] <= mid && !vis[x][y]) {\n\t\t\tvis[x][y] = 1;\n\t\t\tdfs(x, y);\n\t\t\tvis[x][y] = 0;\n\t\t\tif(flag) break;\n\t\t}\n\t}\n}\nbool check(int x) {\n\tflag = 0;\n\tmemset(vis, 0, sizeof(vis));\n\tdfs(1, 1);\n\tif(flag) return 1;\n\treturn 0;\n}\nint main() {\n\tn = read(), m = read();\n\tfor(int i = 1; i <= n; i++) \n\t\tfor(int j = 1; j <= m; j++)\n\t\t\tmap[i][j] = read(), r = max(r, map[i][j]);\n\twhile(l + 1 < r) {\n\t\tmid = (l + r) >> 1;\n\t\tif(check(mid)) r = mid;\n\t\telse l = mid;\n\t}\n\tprintf(\"%d\\n\", r);\n\treturn 0;\n}\n```\n\u8c22\u8c22\u6536\u770b\uff0c \u795d\u8eab\u4f53\u5065\u5eb7\uff01",
        "postTime": 1570969534,
        "uid": 147646,
        "name": "lzpclxf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1902 \u3010\u523a\u6740\u5927\u4f7f\u3011"
    },
    {
        "content": "\u4e8c\u5206\u7b54\u6848+dfs\n\n\u6bcf\u6b21=\u5bf9\u4e8e\u4e8c\u5206\u7b54\u6848mi\u7ef4\u62a4\u4e00\u4e2at[][]\u4e34\u65f6\u5730\u56fe\uff0c\u628a\u4ee3\u4ef7\u5927\u4e8emi\u7684\u6807\u8bb0\u4e3a\u4e0d\u53ef\u8d70\uff0cdfs\u641c\u7d22\u662f\u5426\u6709\u4e00\u6761\u7b2c\u4e00\u884c\u5230\u7b2cn\u884c\u7684\u901a\u8def\uff0c\u6709\u8868\u793a\u7b54\u6848\u5927\u4e86\u5373r=mi\uff0c\u53cd\u4e4b\u5c0f\u4e86l=mi\u3002\u627e\u5230\u901a\u8def\u5c31\u53ef\u4ee5\u9000\u51fadfs\u4e86\uff0c\u4e0d\u9700\u8981\u8003\u8651\u662f\u5426\u4ee3\u4ef7\u548c\u6700\u5c0f\uff08\u9898\u610f\u53ef\u77e5\uff09\n\n\u56e0\u4e3a\u7b2c\u4e00\u884c\u548c\u6700\u540e\u4e00\u884c\u6ca1\u6709\u673a\u5173\u4ee3\u4ef7\u4e3a\u96f6\uff0c\u6240\u4ee5\u4ece\u7b2c\u4e00\u884c\u4efb\u610f\u4f4d\u7f6e\u5f00\u59cb\u641c\u7d22\uff0c\u8dd1\u5230\u6700\u540e\u4e00\u884c\u4efb\u610f\u4f4d\u7f6e\u5373\u53ef\u3002\n\n\u5404\u79cd\u5b9e\u73b0\u4ee3\u7801\u5199\u5f97\u5f88\u6e05\u695a\u4e86\uff0c\u611f\u89c9\u8fd8\u662f\u6bd4\u8f83\u7b80\u6d01\u7684qwq\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#define N 1005\nusing namespace std;\nint n,m,ans,flag,a[N][N],t[N][N],l,r,mi,maxn,vis[N][N];\n\nvoid change(int x){\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=m;j++){\n            if(a[i][j]<=x)t[i][j]=0;\n            else t[i][j]=1;\n        }\n    }\n}\nvoid dfs(int x,int y){\n    if(x==n){\n        flag=1;\n        return;\n    }\n    int d[4][2]={{1,0},{-1,0},{0,1},{0,-1}};\n    for(int k=0;k<4;k++){\n        int tx=x+d[k][0];\n        int ty=y+d[k][1];\n        if(tx>0&&ty>0&&tx<=n&&ty<=m){\n            if(!vis[tx][ty]&&!t[tx][ty]){\n                vis[tx][ty]=1;\n                dfs(tx,ty);\n                if(flag==1)break;\n            }\n        }\n    }\n}\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=m;j++){\n            scanf(\"%d\",&a[i][j]);\n            maxn=max(maxn,a[i][j]);\n        }\n    }\n    l=0;r=maxn;\n    while(l+1<r){\n        mi=(l+r)>>1;\n        flag=0;\n        change(mi);\n        memset(vis,0,sizeof vis);\n        dfs(1,1);\n        if(flag)r=mi;\n        else l=mi;\n    }\n    printf(\"%d\\n\",r);\n    return 0;\n    \n}\n```",
        "postTime": 1509282885,
        "uid": 12779,
        "name": "yeyyx",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1902 \u3010\u523a\u6740\u5927\u4f7f\u3011"
    },
    {
        "content": "# [\u523a\u6740\u5927\u4f7f](https://www.luogu.org/problemnew/show/P1902)\n\n\n\n### \u4e00\u9053\u5e76\u4e0d\u96be\u7684\u4e8c\u5206\u9898\uff0c\u7adf\u8ba9\u6211\u4ea4\u4e86\u4e0a20\u6b21\uff0c\u8bf6\uff0c\u679c\u7136\u8fd8\u662f\u6211\u592a\u5f31\u4e86\u3002\n\n\n\n## \u770b\u5b8c\u9898\u76ee\u5c31\u57fa\u672c\u60f3\u5230\u8981\u600e\u4e48\u505a\u4e86\uff1a\n\n### \u53ea\u9700\u8981\u5bf9\u6700\u5c0f\u4f24\u5bb3\u4ee3\u4ef7\u8fdb\u884c\u4e8c\u5206\u5373\u53ef\uff0ccheck()\u51fd\u6570\u91cc\u7528\u641c\u7d22\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u5230\u8fbe\u6700\u540e\u4e00\u884c\uff0c\u8fd9\u91cc\u7684check()\u7528\u6df1\u641c\u5e7f\u641c\u90fd\u53ef\u4ee5\uff0c\u4e24\u79cd\u7684\u4ee3\u7801\u4e0b\u9762\u90fd\u4f1a\u7ed9\u51fa\uff0c\u800c\u7ecf\u8fc7\u68c0\u9a8c\uff0c\u8fd9\u9053\u9898\u76ee\u7528\u6df1\u641c\u4f1a\u4f18\u4e8e\u5e7f\u641c\u3002\n\n\n\n\u5982\u679c\u4f60\u4e0d\u50cf\u6211\u4e00\u822c\u624b\u6ed1\u7684\u8bdd\uff0c\u6b64\u9898\u57fa\u672c\u5c31\u53ef\u4ee5\u8fc7\u4e86\u3002\n\n\u7136\u800c\uff0c\u5bfc\u81f4\u6211\u53cd\u590d\u63d0\u4ea420\u904d\u7684\u539f\u56e0\uff0c\u4e0d\u662f\u4e8c\u5206\u7b54\u6848\u65f6\u5361\u5faa\u73af\u7684\u95ee\u9898\uff0c\u800c\u662f\uff0c\uff0c\uff0c\n\n\u200b                                 ***\u6570\u7ec4\u5f00\u5c0f\u4e86***\n\n\u8fd9\u4e5f\u7ed9\u6211\u63d0\u4e86\u4e2a\u9192\uff0c\u4e0d\u662f\u6240\u6709\u7684re\u90fd\u662f\u4e8c\u5206\u5faa\u73af\u7684\u9505\uff0c\u6709\u65f6\u5019\u8981\u8003\u8651\u6570\u7ec4\u8d8a\u754c\u7684\u95ee\u9898\u3002\n\n#### \u7528\u6c5d\u4f73julao\u7684\u8bdd\u8bf4\uff0c\u5c31\u662f : \u7f16\u5199\u4e00\u4e2a\u5c3d\u91cf**\u9c81\u68d2**\u7684\u7a0b\u5e8f\uff01\uff01\uff01\n\n------\n\n## code:\n\n### \u6df1\u641c\u505a\u6cd5\uff08\u66f4\u4f18\uff09\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\n//Mystery_Sky\n//\n#define M 2000\n#define INF 0x7f7f7f7f\nconst int dx[] = {0, 0, 1, -1};\nconst int dy[] = {1, -1, 0, 0};\nint l, r, mid;\nbool vis[M][M], flag;\nint n, m, a[M][M];\nvoid check(int x, int y, int ans)\n{\n\tif(x == n)\t{\n\t\tflag = true;\n\t}\n\tfor(int i = 0; i <= 3; i++) {\n\t\tint xx = x + dx[i];\n\t\tint yy = y + dy[i];\n\t\tif(xx <= 0 || yy <= 0 || xx > n || yy > m || a[xx][yy] > ans || vis[xx][yy]) continue;\n\t\tvis[xx][yy] = 1;\n\t\tcheck(xx, yy, ans);\n\t\tif(flag) return;\n\t}\n\n}\n\nint main() {\n\tscanf(\"%d%d\", &n, &m);\n\tfor(int i = 1; i <= n; i++)\n\t\tfor(int j = 1; j <= m; j++)\n\t\t\tscanf(\"%d\", &a[i][j]), r = max(r, a[i][j]);\n\tl = 0;\n\twhile(l <= r) {\n\t\tmid = (l+r)/2;\n\t\tmemset(vis, 0, sizeof(vis));\n\t\tflag = 0;\n\t\tcheck(1, 1, mid);\n\t\tif(flag) r = mid - 1;\n\t\telse l = mid + 1;\n\t}\n\tprintf(\"%d\\n\", l);\n\treturn 0;\n}\n```\n\n\n\n### \u5e7f\u641c\u505a\u6cd5\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <queue>\nusing namespace std;\n//Mystery_Sky\n//\n#define M 2000\n#define INF 0x7f7f7f7f\nstruct node{\n    int x, y;\n};\nint n, m, p[M][M];\nint l, r, mid, maxx;\nint vis[M][M];\nint dx[] = {0, 0, 1, -1};\nint dy[] = {1, -1, 0, 0};\nint Ans;\ninline bool check(int ans)\n{\n    memset(vis, 0, sizeof(vis));\n    queue <node> q;\n    q.push((node){1, 1});\n    while(!q.empty()) {\n        node top = q.front();\n        q.pop();\n        int x, y;\n        for(int i = 0; i <= 3; i++) {\n                x = top.x + dx[i];\n                y = top.y + dy[i];\n                if(x <= 0 || y <= 0 || x > n || y > m || p[x][y] > ans || vis[x][y]) continue;\n                vis[x][y] = 1;\n                q.push((node){x, y});\n                if(x == n)\treturn true; \n        }\n    }\n    return false;\n}\n\nint main() {\n    scanf(\"%d%d\", &n, &m);\n    for(int i = 1; i <= n; i++)\n        for(int j = 1; j <= m; j++) scanf(\"%d\", &p[i][j]);\n    l = 0, r = 1024;\n    while(l < r) {\n        mid = (l+r)>>1;\n        if(check(mid)) {\n            r = mid;\n        }\n        else l = mid+1;\n    }\n    printf(\"%d\\n\", l);\n    return 0;\n}\n```",
        "postTime": 1558258380,
        "uid": 115383,
        "name": "Mystery_Sky",
        "ccfLevel": 6,
        "title": "P1902 \u523a\u6740\u5927\u4f7f"
    },
    {
        "content": "**\u7eaf\u641c\u7d22**\n\n\u5927\u4f6c\u4eec\u57fa\u672c\u90fd\u662f\u7528\u4e8c\u5206\u7b54\u6848\uff0c\u6211\u4e00\u5f00\u59cb\u5199\u6ca1\u6709\u5f80\u8fd9\u65b9\u9762\u60f3\uff08\u6216\u8bb8\u5c31\u662f\u849f\u84bb\u548c\u5927\u4f6c\u7684\u5dee\u8ddd\u5427\uff09\n\n\u4e00\u5f00\u59cb\u5199\u5b8c\u6d4b\u4e86\u4e2a\u5927\u6570\u636e\uff0c\u4e0d\u51fa\u610f\u5916\u7684RE\u4e86\uff0c\u4e8e\u662f\u6211\u5c45\u7136\u8c1c\u4e00\u6837\u7684\u60f3\u5230\u5199\u4e00\u4e2a\u6808\u6a21\u62df\u6df1\u641c\u8fc7\u7a0b\n\n\u7ed3\u679cAC\u4e86\uff1f\n\n\u9898\u610f\u5927\u81f4\u5c31\u662f\u627e\u4e00\u6761\u4ece\u7b2c\u4e00\u884c\u5230\u7b2cn\u884c\u7684\u8def\u5f84\u4f7f\u5f97\u8def\u5f84\u4e0a\u7684\u6700\u5927\u503c\u6700\u5c0f\n\n\u5177\u4f53\u7684\u60f3\u6cd5\u6211\u5199\u5728\u4ee3\u7801\u91cc\u4e86\uff0c\u8be6\u89c1\u4ee3\u7801\u5427\n\n\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\ninline int read() { //\u5feb\u901f\u8bfb\u5165\uff0c\u4e0d\u662f\u91cd\u70b9\n\tint num=0, f=1; char c=0;\n\twhile (!isdigit(c=getchar())) if (c == '-') f=-1;\n\twhile (isdigit(c)) num=(num<<3)+(num<<1)+c-'0', c=getchar();\n\treturn num*f;\n}\n\nconst int dx[4]={0, 0, -1, 1};\nconst int dy[4]={1, -1, 0, 0}; //\u56db\u4e2a\u65b9\u5411 \u5bf9\u5e94\u4e0a\u3001\u4e0b\u3001\u5de6\u3001\u53f3 \n\nconst int N = 1000 + 5;\nint p[N][N], n, m, ans=0x3f3f3f3f; //\u7b54\u6848\u521d\u59cb\u4e3a\u6700\u5927\u5316 \nint f[N][N]; //\u8bb0\u5f55\u8d70\u5230\u8fd9\u4e2a\u70b9\u6240\u53d7\u4f24\u5bb3\u7684\u6700\u5c0f\u503c \nbool v[N][N]; //\u8be5\u70b9\u662f\u5426\u8bbf\u95ee\u8fc7\u4e86 \n\nstruct node {\n\tint x, y, maxdamage;\n};\n\nnode s[N*N]; int top; //\u9632\u7206\u6808\n\nvoid dfs() {\n\twhile (top) { \n\t\tint x=s[top].x, y=s[top].y, maxdamage=s[top].maxdamage; \n\t\ttop--; v[x][y]=false; //\u51fa\u6808 \n\t\tif (maxdamage >= ans) continue; //\u5982\u679c\u5f53\u524d\u53d7\u5230\u7684\u4f24\u5bb3\u5927\u4e8e\u7b54\u6848\u7684\u8bdd\uff0c\u518d\u5f80\u4e0b\u641c\u4f24\u5bb3\u4e5f\u4e0d\u4f1a\u53d8\u5c0f\u4e86\uff0c\u4e8e\u662f\u679c\u65ad\u526a\u679d \n\t\tif (x == n) { //\u641c\u5230\u6700\u540e\u4e00\u884c\u5219\u53ef\u8bb0\u5f55\u7b54\u6848 \n\t\t\tans=maxdamage; //\u7531\u4e8e\u4e0a\u9762\u7684\u526a\u679d\uff0c\u8fd9\u91cc\u7684\u7b54\u6848\u4e00\u5b9a\u662f\u6700\u4f18\u89e3\u4e86 \n\t\t\tcontinue;\n\t\t}\n\t\tfor (int i=0; i<4; i++) {\n\t\t\tint nx=x+dx[i], ny=y+dy[i];\n\t\t\tif (nx < 1 || nx > n || ny < 1 || ny > m) continue; //\u68c0\u67e5\u662f\u5426\u8d8a\u754c \n\t\t\tif (v[nx][ny]) continue; //\u68c0\u67e5\u662f\u5426\u8bbf\u95ee\u8fc7\u4e86 \n\t\t\tint nextdamage=max(maxdamage, p[nx][ny]); //\u6c42\u5230\u4e0b\u4e00\u4e2a\u70b9\u540e\u53d7\u5230\u7684\u4f24\u5bb3 \n\t\t\tif (f[nx][ny] <= nextdamage) continue;\n\t\t\t//\u5982\u679c\u5230\u4e0b\u4e00\u4e2a\u70b9\u53d7\u5230\u7684\u4f24\u5bb3\u5927\u4e8e\u6211\u8bb0\u5f55\u8fc7\u7684\u6240\u53d7\u4f24\u5bb3\u7684\u6700\u5c0f\u503c\uff0c\u53ef\u4ee5\u76f4\u63a5\u8df3\u8fc7\n\t\t\t//\u56e0\u4e3a\u6211\u4e00\u5b9a\u6709\u53e6\u4e00\u6761\u66f4\u4f18\u7684\u8def\u5f84\u5230\u8fbe\u4e0b\u4e00\u4e2a\u70b9 \n\t\t\tv[nx][ny]=true;  \n\t\t\tf[nx][ny]=nextdamage; //\u8bb0\u5f55 \n\t\t\ts[++top]=(node){nx, ny, nextdamage}; //\u8fdb\u6808 \n\t\t}\n\t}\n}\n\nint main() {\n\tmemset(f, 0x3f, sizeof(f)); //\u521d\u59cb\u5316 \n\tn=read(); m=read();\n\tfor (int i=1; i<=n; i++)\n\t\tfor (int j=1; j<=m; j++) p[i][j]=read();\n\tfor (int i=1; i<=m; i++) { //\u4ee5\u7b2c\u4e8c\u884c\u6bcf\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u8d77\u70b9\u5f00\u59cb\u641c\u7d22\n\t\tv[2][i]=true;\n\t\ts[++top]=(node){2, i, p[2][i]};  \n\t\tdfs();\n\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n\n```",
        "postTime": 1535196921,
        "uid": 26023,
        "name": "_Atyou",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1902 \u3010\u523a\u6740\u5927\u4f7f\u3011"
    },
    {
        "content": "\u9898\u76ee\u63cf\u8ff0--->[p1902 \u523a\u6740\u5927\u4f7f](https://www.luogu.org/problemnew/show/P1902)\n\n## \u5e7f\u544a\uff1a [\u5b89\u5229blog](https://www.luogu.org/blog/RPdreamer/#)\n\n**\u9898\u610f\u6982\u62ec\uff1a**\n\n\u627e\u4e00\u6761\u8def\u5f84,\u4f7f\u5f97\u4ece\u7b2c1\u884c\u5230\u7b2cn\u884c\u8def\u5f84\u7684\u6700\u5927\u503c\u6700\u5c0f\u3002\n\n**\u5206\u6790\uff1a**\n\n\u9898\u76ee\u6982\u62ec\u51fa\u6765,\u5f88\u5bb9\u6613\u60f3\u5230**\u4e8c\u5206**.\n\n\u6c42\u6700\u5927\u503c\u6700\u5c0f,\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5bf9\u6700\u5927\u4f24\u5bb3\u503c\u8fdb\u884c\u4e8c\u5206\u3002\n\n\u5982\u679c\u67d0\u4f4d\u7f6e\u6240\u53d7\u4f24\u5bb3\u503c\u5927\u4e8e\u6211\u4eec\u5f53\u524d\u6240\u9650\u5236\u7684\u4f24\u5bb3\u503c,\u6211\u4eec\u80af\u5b9a\u662f\u4e0d\u8d70\u8fd9\u6761\u8def\u7684.\n\n**\u6817\u5b50\uff1a**\n\n\u6211\u4eec\u9650\u5236\u6700\u5927\u4f24\u5bb3\u4e3a5\n\n\u641c\u7d22\u5230\u67d0\u4e00\u884c\u53d1\u73b0\u4f24\u5bb3\u503c\u662f\u8fd9\u6837\u7684--> 8 8 8 8\u3002\n\n\u8fd9\u6837\u6211\u4eec\u662f\u65e0\u6cd5\u901a\u8fc7\u8fd9\u4e00\u884c\u7684\u3002\n\n**\u505a\u6cd5\uff1a**\n\n\u6211\u4eec\u9700\u8981\u6807\u8bb0\u662f\u5426\u80fd\u4ee5\u5f53\u524d\u9650\u5236\u7684\u4f24\u5bb3\u503c\u8d70\u5230\u6700\u540e\u4e00\u884c,\u5982\u679c\u53ef\u4ee5\u6211\u4eec\u5c31\u53bb\u5bfb\u6c42\u66f4\u5c0f\u4f24\u5bb3,\u5982\u679c\u4e0d\u80fd\u6211\u4eec\u53ea\u80fd\u53bb\u5bfb\u6c42\u8f83\u5c0f\u4f24\u5bb3(\u5b9e\u9645\u4e0a\u662f\u66f4\u5927\u4e86)\u3002\n\n**\u4ee5\u6807\u8bb0\u4f5c\u4e3a\u66f4\u65b0\u8fb9\u754c\u7684\u6807\u51c6.**\n\n\u6240\u4ee5\u5f88\u5bb9\u6613\u5199\u51fa\u4e8c\u5206\u4ee3\u7801\u2193\n```cpp\nint l=0,r=1008;\n//\u8fd9\u91cc\u53f3\u8fb9\u754c\u8d4b\u4e3a\u4e86\u6781\u5927\u503c\n//\u6570\u636e\u4fdd\u8bc1\u4e86\u6bcf\u4e2a\u4f4d\u7f6e\u4f24\u5bb3\u503c\u4e0d\u8d85\u8fc71000\n//\u4e5f\u53ef\u4ee5\u628a\u53f3\u8fb9\u754c\u8d4b\u503c\u4e3a\u5f53\u524d\u56fe\u4e2d\u6700\u5927\u4f24\u5bb3\u503c.\n\twhile(l<=r)//\u4e00\u822c\u5957\u8def\n\t{\n\t\tint mid=l+r>>1;\n\t\tmemset(vis,0,sizeof vis);\n\t\tflg=false;\n\t\tdfs(1,1,mid);\n\t\tif(flg==true)//flg\u4e3atrue\u89c6\u4e3a\u80fd\u5230\u8fbe\u6700\u540e\u4e00\u884c\n\t\t\tr=mid-1;//\u56e0\u6b64\u6211\u4eec\u66f4\u65b0\u53f3\u8fb9\u754c,\u5bfb\u6c42\u66f4\u5c0f\u503c\n\t\telse l=mid+1;\n\t}\n```\n\n**\u641c\u7d22\u90e8\u5206\u4ee3\u7801\u5982\u4f55\u53bb\u5199\uff1f**\n\n\u6ca1\u4ec0\u4e48\u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u5730\u65b9\u3002\n\n\u9700\u8981\u5224\u65ad:\u662f\u5426\u8d85\u51fa\u8fb9\u754c,\u662f\u5426\u904d\u5386\u8fc7,\u4f24\u5bb3\u503c\u662f\u5426\u80fd\u6ee1\u8db3\u9650\u5236\u6761\u4ef6.\n\n\u6211\u5199\u51fa\u6765\u662f\u8fd9\u4e2a\u6837\u5b50\u7684\u2193\n```cpp\nIL void dfs(int x,int y,int mid)\n{\n    if(x==n)\n    {\n        flg=1;\n        return;\n    }\n    vis[x][y]=true;\n    for(RI i=0,xx,yy;i<4;++i)\n    {\n        xx=x+ax[i],yy=y+ay[i];\n        //ax,ay\u6570\u7ec4\u4e3a\u641c\u7d22\u7684\u4e00\u822c\u8bbe\u7f6e\u5957\u8def.\u4ee3\u8868\u56db\u4e2a\u65b9\u5411\n        //const int ax[]={0,1,0,-1};\n        //const int ay[]={1,0,-1,0};\n        if(xx<1 or xx>n or yy<1 or yy>m or vis[xx][yy] or p[xx][yy]>mid)//\u4e00\u8fde\u4e32\u5224\u65ad\n        //\u8fd9\u91cc\u7684 or \u4e0e || \u662f\u4e00\u6837\u7684\n            continue;\n        dfs(xx,yy,mid);\n        if(flg)\n            return;\n    }\n}\n```\n**\u4e00\u70b9\u65f6\u95f4\u4f18\u5316**\n\n\u6211\u4eec\u53ef\u4ee5\u4e0d\u5fc5\u5c06vis\u6570\u7ec4\u91cd\u7f6e,\u800c\u53bb\u5224\u65ad\u662f\u7b2c\u51e0\u6b21\u7ecf\u8fc7.\n\n--------------------\u4ee3\u7801---------------------\n```cpp\n#include<bits/stdc++.h>\n#define IL inline\n#define RI register int\n#define mod 100000\nIL void read(int &x){\n\tint f=1;x=0;char s=getchar();\n\twhile(s>'9'||s<'0'){if(s=='-')f=-1;s=getchar();}\n\twhile(s<='9'&&s>='0'){x=x*10+s-'0';s=getchar();}\n\tx*=f;\n}\nint n,m,p[1008][1008],tm;\nconst int ax[]={0,1,0,-1};\nconst int ay[]={1,0,-1,0};\nbool flg,vis[1008][1008];\nIL void dfs(int x,int y,int mid)\n{\n    if(x==n)\n    {\n        flg=1;\n        return;\n    }\n    vis[x][y]=true;\n    for(RI i=0,xx,yy;i<4;++i)\n    {\n        xx=x+ax[i],yy=y+ay[i];\n        if(xx<1 or xx>n or yy<1 or yy>m or vis[xx][yy] or p[xx][yy]>mid)\n            continue;\n        dfs(xx,yy,mid);\n        if(flg)\n            return;\n    }\n}\nint main()\n{\n\tread(n),read(m);\n\tfor(RI i=1;i<=n;i++)\n\t\tfor(RI j=1;j<=m;j++)\n\t\t\tread(p[i][j]);\n\tint l=0,r=1008;\n\twhile(l<=r)\n\t{\n\t\tint mid=l+r>>1;\n\t\tmemset(vis,0,sizeof vis);\n\t\tflg=false;\n\t\tdfs(1,1,mid);\n\t\tif(flg==true)\n\t\t\tr=mid-1;\n\t\telse l=mid+1;\n\t}\n\tprintf(\"%d\",l);\n}\n```",
        "postTime": 1535869303,
        "uid": 87960,
        "name": "\u987ez",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1902 \u3010\u523a\u6740\u5927\u4f7f\u3011"
    },
    {
        "content": "# \u7eaf\u641c\u7d22\n\u505a\u6cd5\u5f88\u7b80\u5355\u679a\u4e3e\u6700\u5c0f\u4f24\u5bb3\uff0c\u4ece\u5c0f\u5f00\u59cb\uff0c\u8fdb\u884c\u641c\u7d22\uff0c\u9047\u5230\u53ef\u4ee5\u7684\u5c31\u53ef\u4ee5\u7ed3\u675f\n\n\u601d\u8def\u5f88\u7b80\u5355\u641c\u7d22\u4e2d\u52a0\u51e0\u4e2a\u5224\u65ad\u5c31\u884c\u4e86\uff1b\n\n[\u7ed3\u679c](https://www.luogu.org/record/24993175)\n\n\u5173\u952e\u641c\u7d22\u4ee3\u7801\uff1a\n```cpp\n\tqueue<node>que;         \\\\\u7528\u961f\u5217\u8fdb\u884c\n\tque.push((node){1,1,0});\n\twhile(que.empty()!=true)   \\\\\u5224\u6bb5\u961f\u5217\u662f\u5426\u7a7a\u6765\u786e\u5b9a\u641c\u7d22\u662f\u5426\u9700\u8981\u8fdb\u884c\n\t{\n\t\tnode q=que.front();    \\\\\u6bcf\u6b21\u6e05\u9664\u4e00\u4e2a\u7a7a\u95f4\n\t\tif(q.x==n)  \u3000\u3000\u3000\u3000\u3000\t\\\\ \u5177\u4f53\u8fc7\u7a0b\n\t\t{\n\t\t\treturn 1;\n\t\t}\n\t\tfor(int i=0;i<=3;i++)\n\t\t{\n\t\t\tint tx=q.x+dx[i],ty=q.y+dy[i];\n\t\t\tif(tx>0&&ty>0&&tx<=n&&ty<=m&&c[tx][ty]==0&&a[tx][ty]<=op)\n\t\t\t{\n\t\t\t\n\t\t\t\tque.push((node){tx,ty,max(q.z,a[tx][ty])});\n\t\t\t\tc[tx][ty]=1;\n\t\t\t}\n\t\t}\n\t\tque.pop();\t\t\n\t}\n\treturn 0;\n```\n\n\u4e3b\u7a0b\u5e8f\u548c\u5feb\u8bfb\uff1a\n\n\n```cpp1\nint read()\n{\n\tint x=0,f=1;char c=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9'){x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n\treturn x*f;\n}\n\nint main()\n{\n\tn=read();m=read();\n\tfor(int i=1;i<=n;i++)\t\n\t\tfor(int j=1;j<=m;j++)\n\t\t\ta[i][j]=read();\n\tfor(int i=1;i<=1000;i++)\n\t{\n\t\tmemset(c,0,sizeof(c));\n\t\tif(bfs(i)){printf(\"%d\\n\",i);break;}\n\t}\n\treturn 0;\n}\n```\n\u5c31\u5728\u6211\u4ee5\u4e3a\u5b8c\u7f8e\u65f6\u6253\u5f00\u9898\u89e3\u770b\u5230\u5927\u4f6c\u4eec\u7684\u4e8c\u5206\n\u624d\u53d1\u73b0\u81ea\u5df1\u6709\u591a\u83dcQWQ\n\u4e8e\u662f\u6539\u4e86\u4ee3\u7801\n```cpp\nint main()\n{\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++)\t\n\t\tfor(int j=1;j<=m;j++)\n\t\t\ta[i][j]=read();\n\tl=0,r=1000;\n\tint ans;\n\twhile(l<=r)\n\t{\n\t\tmemset(c,0,sizeof(c));\n\t\tint mid=(l+r)/2;\n\t\tif(bfs(mid))r=mid-1,ans=mid;\n\t\telse l=mid+1;\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n~~\u5feb\u4e86\u63a5\u8fd11s~~\n\n[\u54fc](https://www.luogu.org/record/24996900)\n",
        "postTime": 1570688163,
        "uid": 118164,
        "name": "\u859b\u5b9a\u6115\u7684\u9a74",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1902 \u3010\u523a\u6740\u5927\u4f7f\u3011"
    },
    {
        "content": "## \u4e0d\u540c\u4e8e\u4e8c\u5206\u7b54\u6848\u7684\u65b9\u6cd5\n\n\n\u53ef\u4ee5\u4f7f\u7528\u5e76\u67e5\u96c6+\uff08\u4f2a\uff09\u6700\u5c0f\u751f\u6210\u6811\n\n\u5148\u628a\u6bcf\u4e2a\u623f\u95f4\u5b58\u8fdb\u4e00\u4e2astruct\u91cc\uff0c\u7528\u623f\u95f4\u7684\u503c\u6392\u5e8f\uff0c\u7136\u540e\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u5404\u4e2a\u623f\u95f4\u3002\n\n\u8bbe\u679a\u4e3e\u5230\u7b2c [i\uff0cj]\u4e2a\u623f\u95f4\uff0c\u82e5\u5b83\u7684\u5468\u56f4\u67d0\u4e2a\u623f\u95f4\u88ab\u679a\u4e3e\u8fc7\uff0c\u5c31\u7528\u5e76\u67e5\u96c6\u8fde\u5728\u4e00\u8d77\u3002\n\n\u4ee3\u7801:\n\n```c++\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\n\nint n,p,fat[1000005];\ninline void initun()\n{\n    for(int i=1;i<=n*p;++i)\n        fat[i]=i;\n}\ninline int find(int x)\n{\n    if(fat[x]==x)return x;\n    return fat[x]=find(fat[x]);\n}\n\nint pig[1005][1005];\nstruct ROOM\n{\n    int x,y,val;\n}room[1000005];\nint roomtop;\n\nint compp(const ROOM &x,const ROOM &y)\n{\n    return x.val<y.val;\n}\n\nbool solve[1005][1005];\ninline int getnum(int x,int y)   //\u4fbf\u4e8e\u5e76\u67e5\u96c6\u7ef4\u62a4\n{\n    return (x-1)*p+y;\n}\nint main(int argc, char const *argv[])\n{\n    scanf(\"%d%d\",&n,&p);\n    for(int i=1;i<=n;++i)\n    for(int j=1;j<=p;++j)\n    {\n        scanf(\"%d\",&pig[i][j]);\n        if(i!=1&&i!=n)\n        {\n            room[++roomtop].x=i;\n            room[roomtop].y=j;\n            room[roomtop].val=pig[i][j];\n        }\n        \n    }\n    sort(room+1,room+roomtop+1,compp);\n    initun();\n    for(int i=1;i<=p;++i)\n    {\n        solve[1][i]=solve[n][i]=1;\n    }\n    for(int i=1;i<=p;++i)\n    {\n        fat[i]=1;\n        fat[getnum(n,i)]=fat[getnum(n,1)];   //\u5148\u628a\u7b2c\u4e00\u884c\u4ee5\u53ca\u6700\u540e\u4e00\u884c\u8fde\u5728\u4e00\u8d77\n    }\n    int xx,yy;\n    int ans=0;\n    for(int i=1;i<=roomtop;++i)\n    {\n        xx=room[i].x;yy=room[i].y;\n        solve[xx][yy]=1;\n        if(xx-1>=1&&solve[xx-1][yy]==1)\n        {\n            // solve[xx][yy]=1;\n            ans=max(ans,pig[xx][yy]);\n            fat[find(getnum(xx-1,yy))]=find(getnum(xx,yy));\n        }\n        if(xx+1<=n&&solve[xx+1][yy]==1)\n        {\n            // solve[xx][yy]=1;\n            ans=max(ans,pig[xx][yy]);\n            fat[find(getnum(xx+1,yy))]=find(getnum(xx,yy));\n        }\n        if(yy-1>=1&&solve[xx][yy-1]==1)\n        {\n            // solve[xx][yy]=1;\n            ans=max(ans,pig[xx][yy]);\n            fat[find(getnum(xx,yy-1))]=find(getnum(xx,yy));\n        }\n        if(yy+1<=p&&solve[xx][yy+1]==1)\n        {\n            // solve[xx][yy]=1;\n            ans=max(ans,pig[xx][yy]);\n            fat[find(getnum(xx,yy+1))]=find(getnum(xx,yy));\n        }\n        if(fat[find(1)]==fat[find((n-1)*p+1)])\n            break;\n    }\n    printf(\"%d\",ans);\n    \n    return 0;\n}\n\n```",
        "postTime": 1530619818,
        "uid": 28779,
        "name": "naivekun",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1902 \u3010\u523a\u6740\u5927\u4f7f\u3011"
    },
    {
        "content": "# \u601d\u8def\uff1a\u4e8c\u5206+\u5bbd\u641c+AC\n\u6b64\u9898\u7684\u5173\u952e\u662f\u6700\u540e\u7684\u4f24\u5bb3\u662f\u58eb\u5175\u4f24\u5bb3\u7684\u6700\u5927\u503c\u7684\u6700\u5c0f\u503c\uff0c\u6240\u4ee5\u5c31\u8981\u7528\u5230\u4e8c\u5206\u7b54\u6848\uff0c\u5c31\u662f\u4e0d\u65ad\u903c\u8fd1\u6700\u7ec8\u7b54\u6848\uff0c\u800c\u5bbd\u641c\u5c31\u662f\u5199\u5728check\uff08\uff09\u51fd\u6570\u91cc\uff0c\u4e0a\u4ee3\u7801\u3002\n```cpp\n#include<iostream>\n#include<queue> //\u961f\u5217STL\u6807\u51c6\u5e93\n#include<algorithm>\nusing namespace std;\nint mapp[1010][1010],vis[1010][1010],n,m,l=0,r=0;\n//mapp[][]\u8bb0\u5f55\u6bcf\u4e2a\u623f\u95f4\u7684\u4f24\u5bb3\u503c\n//vis[][]\u8bb0\u5f55\u8fd9\u4e2a\u623f\u95f4\u662f\u5426\u8bbf\u95ee\u8fc7\nstruct node\n{\n\tint x,y,pill;//\u76ee\u524d\u7684x,y\u5750\u6807\u548c\u4f24\u5bb3\u503c\n};\nint dx[5]={0,0,1,0,-1};//x\u76844\u4e2a\u65b9\u5411\nint dy[5]={0,1,0,-1,0};//y\u76844\u4e2a\u65b9\u5411\nint check(int x)//\u4e8c\u5206\u7b54\u6848\uff0c\u5f00\u59cb\u5bbd\u641c\n{\n    memset(vis,0,sizeof(vis));\u628a\u6240\u6709\u7684\u8981\u8bbf\u95ee\u7684\u70b9\u6e05\u96f6\n    queue<node>q;//\u5b9a\u4e49\u4e3aq\u961f\u5217\uff0c\u7c7b\u578b\u4e3anode\n    node start;\n    start.x=1,start.y=1,start.pill=mapp[1][1];//\u8d4b\u521d\u503c\n    vis[1][1]=1;\n    q.push(start);\n    while(!q.empty())\n    {\n\tnode now=q.front();\n\tq.pop();\n\tfor(int i=1;i<=4;i++)\n\t{\n\t    int xx=dx[i]+now.x;//\u5411\u4f4ei\u4e2a\u65b9\u5411\u8d70\n            int yy=dy[i]+now.y;\n\t    if(xx<=n&&yy<=m&&xx>=1&&yy>=1&&vis[xx][yy]!=1&&mapp[xx][yy]<=x)//\u4e00\u7cfb\u5217\u7684\u5224\u65ad\u53ef\u4e0d\u53ef\u4ee5\u8d70\u4e0b\u4e00\u6b65\n\t    {\n\t\tnode next;//\u4e0b\u4e00\u6b65\u8d70\u5230\u54ea\n\t\tnext.x=xx,next.y=yy;\n                next.pill=max(mapp[now.x][now.y],mapp[xx][yy]);\n                //\u4e0b\u4e00\u6b65\u7684\u4f24\u5bb3\u503c\n\t\tvis[xx][yy]=1;//\u5df2\u8d70\u8fc7\u4e86\uff0c\u6807\u8bb0\u4e3a1\n\t\tq.push(next);//\u91cd\u65b0\u8fdb\u961f\uff0c\u7b49\u5f85\u4e0b\u4e00\u8f6e\u64cd\u4f5c\n\t    }\n\t }\n     }\n    for(int i=1;i<=m;i++) if(vis[n][i]==0) return 0;\n    return 1;//\u6700\u5173\u952e\u7684\u4e00\u6b65\uff0c\u770b\u770b\u80fd\u4e0d\u80fd\u5230\u8fbe\u6700\u540e\u4e00\u6392\n}\nint main()\n{\n    cin>>n>>m;\n    for(int i=1;i<=n;i++) \n    {\n        for(int j=1;j<=m;j++) \n        {\n            cin>>mapp[i][j]\uff1b\n            r=max(r,mapp[i][j]);// \u53f3\u7aef\u70b9\u4e3a\u4f24\u5bb3\u6700\u5927\u503c\n        }\n    }  \n    \n    while(l<=r)//\u5f00\u59cb\u4e8c\u5206\u7b54\u6848\uff08\u5f88\u6a21\u677f\u5316\u7684\u73a9\u610f\u513f\uff09\n    {\n        int mid=(l+r)/2;\n        if(check(mid)) r=mid-1;\n\telse l=mid+1;\n    }\n    if(check(l)) cout<<l<<endl;\u522b\u5fd8\u4e86\u6700\u540e\u8fd8\u5f97\u518d\u5224\u65ad\n    else cout<<r<<endl;\n    return 0;\n}\n```\n\u8fd9\u9053\u9898\u8fd8\u662f\u633a\u6c34\u7684\uff0c\u4f46\u6211\u7adf\u7136\u7206\u96f6\u4e86n\u6b21\uff08~~n==1~~)!\n\n\u849f\u84bb\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\uff0c\u671b\u901a\u8fc7\u3002\n",
        "postTime": 1570237788,
        "uid": 174303,
        "name": "_NaCly_Fish",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1902 \u3010\u523a\u6740\u5927\u4f7f\u3011"
    },
    {
        "content": "\u6211\u7684\u535a\u5ba2\uff1a\n\n```cpp\nhttps://blog.csdn.net/zsyzClb/article/details/84146000\n```\n\n\u56e0\u4e3a\u6bcf\u4e00\u4f4d\u58eb\u5175\u6536\u5230\u7684\u4f24\u5bb3\u4e3a\u6cbf\u9014\u4e2d\u9047\u5230\u673a\u5173\u7684\u6700\u5927\u503c\uff0c\u6240\u4ee5\n\n\u6211\u4eec\u4e0d\u96be\u60f3\u5230\u7528\u4e8c\u5206\uff0c\u4f46\u662f\u6211\u7528\u4e86\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\uff0c\u6211\u89c9\u5f97\u8fd9\u6837\u6bd4\u8f83\u8fc7\u763e\n\n\u7528\u4e00\u4e2a\u4f18\u5148\u961f\u5217\u6309\u7167\u53d7\u5230\u7684\u6700\u5927\u4f24\u5bb3\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u90a3\u4e48\u7b2c\u4e00\u4e2a\u641c\u5230n\u884c\u7684\u5c31\u662f\u6700\u4f18\u89e3\n\n\u4e00\u5f00\u59cb\u7ed9\u7b2c\u4e8c\u884c\u6bcf\u4e00\u4e2a\u70b9\u653e\u58eb\u5175\uff0c\u5e76\u4e14\u7528bk[x][y]\u8bb0\u5f55\u5230\u8fbe\u70b9\uff08x,y)\u7684\u6700\u4f18\u89e3\uff0c\u9632\u6b62\u51fa\u73b0\u91cd\u590d\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<iostream>\n#include<algorithm>\n#include<queue>\nusing namespace std;\ninline int read(){\n    int x=0,f=0;char s=getchar();\n    while(!isdigit(s))f|=s=='-',s=getchar();\n    while( isdigit(s))x=(x<<1)+(x<<3)+s-48,s=getchar();\n    return f==0?x:-x;\n}\nconst int N=1e3+10;\nstruct node{\n\tint x,y,k;\n\tinline bool operator<(const node &a)const{//\u6309\u7167\u6240\u53d7\u4f24\u5bb3\u4ece\u5c0f\u5230\u5927\u6392\u5e8f \n\t\treturn k>a.k;\n\t}\n};\npriority_queue<node>q;\nint n,m;\nint map[N][N];//\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u70b9\u7684\u673a\u5173\u4f24\u5bb3 \nint bk[N][N];//\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u70b9\u7684\u6700\u4f18\u89e3 \nint dx[4]={0,0,-1,1};//\u65b9\u5411 \nint dy[4]={-1,1,0,0};\nint main(){\n\tn=read();m=read();\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tmap[i][j]=read();\n\tmemset(bk,63,sizeof(bk));\n\tfor(int i=1;i<=m;i++)bk[1][i]=0,bk[2][i]=map[2][i];//\u8bb0\u5f55\u4e00\u4e0b\uff0c\u5e76\u4e14\u4fdd\u8bc1\u58eb\u5175\u4e0d\u4f1a\u56de\u5230\u7b2c1\u884c \n\tfor(int i=1;i<=m;i++)q.push((node){2,i,map[2][i]});//\u7ed9\u6bcf\u4e00\u4e2a\u70b9\u653e\u58eb\u5175 \n\tint x,y,k,xx,yy,kk;\n\tbool bj=false;\n\twhile(!q.empty()){\n\t\tx=q.top().x;//\u8bb0\u5f55\u6808\u9876 \n\t\ty=q.top().y;\n\t\tk=q.top().k;\n\t\tq.pop();\n\t\tif(k>bk[x][y])continue;//\u5982\u679c\u4e0d\u662f\u6700\u4f18\u89e3\uff0c\u5c31\u4e0d\u641c \n\t\tfor(int t=0;t<4;t++){\n\t\t\txx=x+dx[t];\n\t\t\tyy=y+dy[t];\n\t\t\tif(!(1<=xx&&xx<=n&&1<=yy&&yy<=m))continue;//\u5224\u65ad\u8fb9\u754c \n\t\t\tkk=max(k,map[xx][yy]);//\u66f4\u65b0\u6700\u5927\u503c \n\t\t\tif(kk>=bk[xx][yy])continue;//\u5982\u679c\u662f\u5f53\u524d\u7684\u6700\u4f18\u89e3 \n\t\t\tbk[xx][yy]=kk;//\u8bb0\u5f55\u5e76\u5165\u6808 \n\t\t\tif(xx==n){printf(\"%d\\n\",kk);bj=true;break;}//\u5982\u679c\u5230\u8fbe\u4e86\u7b2cn\u884c\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u8f93\u51fa \n\t\t\tq.push((node){xx,yy,kk});\n\t\t}\n\t\tif(bj==true)break;\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1542374857,
        "uid": 66181,
        "name": "Celebrate",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1902 \u3010\u523a\u6740\u5927\u4f7f\u3011"
    },
    {
        "content": "\u5206\u6790\u9898\u76ee\u4e0d\u7ba1\u6742\u4e03\u6742\u516b\u7684\u770b\u5f97\u51fa\u6765\uff0c\u53ea\u8981\u6709\u4e00\u4e2a\u58eb\u5175\u80fd\u901a\u8fc7\u8fd9\u4e2a\u8ff7\u9635\uff0cn\u884c\u6240\u6709\u623f\u95f4\u5c31\u90fd\u80fd\u88ab\u5230\u8fbe\u3002\u6240\u4ee5\u9898\u76ee\u8f6c\u5316\u4e3a\u4e86\uff0c\u5b58\u5728\u4e00\u6761\u4ece1->n\u884c\u7684\u9053\u8def\uff0c\u4f7f\u5f97\u8fd9\u6761\u9053\u8def\u4e0a(x,y)\u70b9\u5904p[x][y]\u7684\u6700\u5927\u503c\u6700\u5c0f\u3002\u4e8e\u662f\u60f3\u5230\u4e8c\u5206\u7b54\u6848\uff0c\u56e0\u4e3a\u627e\u6700\u5927\u503c\u7684\u6700\u5c0f\u503c\uff0c\u6240\u4ee5\u5957\u7528\u5f80\u5de6\u5bfb\u627e\u7684\u6a21\u677f????\n```cpp\nint bsearch_1(int l, int r)\n{\n    while (l < r)\n    {\n        int mid = l + r >> 1;\n        if (check(mid)) r = mid;\n        else l = mid + 1;\n    }\n    return l;\n}\n```\n\u5b89\u5229\u4e00\u4e0byxc\u5927\u4f6c\u7684\u4e8c\u5206\u6a21\u677f????https://www.acwing.com/blog/content/31/\n\n\u90a3\u6211\u4eec\u600e\u4e48\u627e\u8fd9\u6761\u8def\u5462\uff1f\u663e\u7136\uff0cBFS\u8ba9\u4eba\u611f\u5230\u6b23\u6170\u3002\u6211\u4eec\u9700\u8981\u7684\u4ec5\u4ec5\u662f\u4e00\u4e2aBFS\u6a21\u677f\uff0c\u4e00\u4e2ajudge\u51fd\u6570\uff0c\u8fd8\u6709\u6700\u540e\u9053\u8def\u5b58\u5728\u6027\u7684\u5224\u65ad\u3002\n1.bfs\u6a21\u677f...\u53c2\u8003\u7f51\u4e0a\u6252\n2.judge\u51fd\u6570\uff1a\u4e09\u4e2a\u5224\u65ad\uff0c\u4e00\u662f\u8be2\u95ee\u662f\u5426\u8d8a\u754c\uff1b\u4e8c\u662f\u8be2\u95ee\u7684\u70b9p\u503c\u662f\u5426\u5927\u4e8emid\u503c\uff0c\u5982\u679c\u5927\u4e8e\uff0c\u663e\u7136\u4e0d\u53ef\u4ee5\u5165\u961f\uff1b\u4e09\u5c31\u662f\u662f\u5426\u66fe\u7ecf\u8be2\u95ee\u8fc7\u3002\n3.\u9053\u8def\u5b58\u5728\u6027\uff1a\u5f53\u679a\u4e3e\u7684\u4e00\u4e2a\u70b9\uff08dx\uff0cdy\uff09\u53ef\u5230\u8fbe\u65f6\uff0c\u5224\u65ad\u662f\u5426\u5230\u8fbe\u7b2cn\u884c\uff0c\u5982\u679c\u5230\u8fbe\uff0c\u90a3\u4e48ans\u5728mid\u7684\u5de6\u533a\u95f4\uff0c\u5982\u679c\u961f\u5217\u5df2\u7a7a\u4e14\u4ecd\u672a\u5230\u8fben\u884c\uff0cans\u5c31\u5728mid\u7684\u53f3\u533a\u95f4\u3002\n\u6240\u4ee5\u8fd9\u6837\uff0c\u4ee3\u7801\u5c31\u51fa\u6765\u4e86????\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\n#include<iostream>\nusing namespace std;\nconst int MAXN = 1e3+10;\nint p[MAXN][MAXN];\nint n,m;\nint l=1001,r=0,mid;\nbool vis[MAXN][MAXN]= {false};\nint nowans=0,ans;\n\nstruct Node\n{\n\tint x,y;\n};\n\nNode node;\n\nint cx[]= {0,1,-1,0};\nint cy[]= {1,0,0,-1};\n\ninline bool judge(int x,int y,int pd)\n{\n\tif(x>n||x<1||y>m||y<1) return false;\n\tif(p[x][y]>pd) return false;\n\tif(vis[x][y]) return false;\n\treturn true;\n}\n\ninline bool bfs(int check)\n{\n\tmemset(vis,0,sizeof(vis));\n\tqueue<Node> q;\n\t//for(int i=1; i<=m; ++i)\n\t//{\n\tnode.x=1,node.y=1;\n\tq.push(node);\n\tvis[1][1]=true;\n\twhile(!q.empty())\n\t{\n\t\tNode top=q.front();\n\t\tq.pop();\n\t\tfor(int i=0; i<4; ++i)\n\t\t{\n\t\t\tint dx=top.x+cx[i];\n\t\t\tint dy=top.y+cy[i];\n\n\t\t\tif(judge(dx,dy,check))\n\t\t\t{\n\t\t\t\tnode.x=dx,node.y=dy;\n\t\t\t\tq.push(node);\n\t\t\t\tvis[dx][dy]=true;\n\t\t\t\tif(dx==n) return true;//\u7b2c\u4e00\u6b21\u5230\u8fben\u884c\u623f\u95f4\u5373\u6210\u529f\n\t\t\t}\n\t\t}\n\t}\n\t//}\n\treturn false;//\u672a\u5230\u8fbe\u623f\u95f4\u4e0d\u6210\u529f\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1; i<=n; ++i)\n\t{\n\t\tfor(int j=1; j<=m; ++j)\n\t\t{\n\t\t\tscanf(\"%d\",&p[i][j]);\n\t\t\tl=min(l,p[i][j]);\n\t\t\tr=max(r,p[i][j]);\n\t\t}\n\t}\n\n\twhile(l<r)\n\t{\n\t\tmid=l+r>>1;\n\t\tif(bfs(mid)) r=mid;//\u5f53\u524dmid\u4e0b\u5b58\u5728\u5230\u8fben\u884c\u7684\u9053\u8def,\u7b54\u6848\u5728\u5de6\u533a\u95f4\n\t\telse l=mid+1;//\u4e0d\u5b58\u5728\u9053\u8def\uff0c\u7b54\u6848\u5728\u53f3\u533a\u95f4\n\t}\n\n\tprintf(\"%d\",l);\n\n\treturn 0;\n}\n```\n\u8fd8\u8981\u6c42\u6559\u4e00\u4e0b\uff0c\u4e3a\u4ec0\u4e48\u6211\u6ce8\u91ca\u6389\u7684\u90a3\u884cfor\u5199\u8fdb\u53bb\u4e0d\u5f71\u54cd\u65f6\u95f4...\n\u867d\u7136\u90fd\u5f88\u6162....\n# \u8bf4\u5b9e\u8bdd\uff0c\u611f\u8c22yxc\u5927\u4f6c\u7684\u4e8c\u5206\u6a21\u677f\uff0c\u771f\u6ef4\u597d\u7528!",
        "postTime": 1551445701,
        "uid": 107731,
        "name": "Crybl",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1902 \u3010\u523a\u6740\u5927\u4f7f\u3011"
    },
    {
        "content": "\u3010\u601d\u8def\u3011\n\n\u4e8c\u5206+BFS\u5224\u5b9a\u3002\n\n\u4e8c\u5206\u9014\u5f84\u7684\u6700\u5927\u4f24\u5bb3x\uff0c\u6807\u8bb0p\u5927\u4e8ex\u7684\u70b9\u4e3a\u4e0d\u53ef\u884c\uff0cBFS\u5224\u65ad\u80fd\u5426\u5230\u8fben\u884c\u7684m\u4e2a\u70b9\u5373\u53ef\u3002\n\n\u3010\u4ee3\u7801\u3011\n\n```cpp\n\n#include<cstdio>\n#include<queue>\n#include<cstring>\n#include<iostream>\n#define FOR(a,b,c) for(int a=(b);a<=(c);a++)\nusing namespace std;\n\nconst int maxn = 1000+10;\nconst int dx[]={0,0,-1,1};\nconst int dy[]={1,-1,0,0};\nstruct Node{\n    int x,y;\n};\nint p[maxn][maxn];\nint n,m;\n\nqueue<Node> q;\nbool vis[maxn][maxn];\nbool inside(int x,int y) {\n    return x>0 && x<=n && y>0 && y<=m;\n}\nbool can(int P) {\n    memset(vis,0,sizeof(vis));\n    q.push((Node){1,1}); \n    vis[1][1]=1;\n    while(!q.empty()) {\n        Node u=q.front(); q.pop();\n        int x=u.x,y=u.y;\n        FOR(i,0,3) {\n            int xx=x+dx[i],yy=y+dy[i];\n            if(inside(xx,yy) && !vis[xx][yy] && p[xx][yy]<=P) {\n                vis[xx][yy]=1;\n                q.push((Node){xx,yy});\n            }\n        }\n    }\n    FOR(i,1,m) if(!vis[n][i]) return false;\n    return true;\n}\n\nint main() {\n    scanf(\"%d%d\",&n,&m);\n    int L=0,R=0;\n    FOR(i,1,n) FOR(j,1,m) scanf(\"%d\",&p[i][j]) , R=max(R,p[i][j]);\n    R++;\n    while(L<R) {\n        int M=L+(R-L)/2;\n        if(can(M)) R=M;\n        else L=M+1;\n    }\n    printf(\"%d\\n\",L);\n    return 0;\n} \n\n```",
        "postTime": 1446027681,
        "uid": 3482,
        "name": "hahalidaxin2",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1902 \u3010\u523a\u6740\u5927\u4f7f\u3011"
    },
    {
        "content": "## \u9898\u89e3\uff1a\n\n\u77e9\u9635\u6c42\u8def\u5f84\u7684\u9898\u5927\u591a\u6570\u90fd\u548c\u641c\u7d22\u6709\u5173\uff0c\u5efa\u8bae\u5927\u5bb6\u4ee5\u540e\u505a\u8fd9\u79cd\u9898\u7684\u65f6\u5019\u76f4\u63a5\u62ff\u641c\u7d22\u505a\u5207\u5165\u53e3\u3002\n\n\u6700\u5927\u503c\u6700\u5c0f/\u6700\u5c0f\u503c\u6700\u5927\u7684\u9898\u4e00\u822c\u90fd\u548c\u4e8c\u5206\u6709\u5173\u7cfb\uff0c\u5efa\u8bae\u5927\u5bb6\u4ee5\u540e\u505a\u8fd9\u79cd\u9898\u7684\u65f6\u5019\u76f4\u63a5\u7528\u4e8c\u5206\u505a\u5b9e\u73b0\u9014\u5f84\u3002\n\n\u597d\u4e86\uff0c\u7efc\u4e0a\u6240\u8ff0\uff0c\u6b63\u89e3\u5e94\u8be5\u662f\u4e8c\u5206\u7b54\u6848+\u641c\u7d22\u3002\n\n\u4ece\u67d0\u79cd\u610f\u4e49\u6765\u8bb2\uff0c\u8fd9\u9898\u7684check()\u51fd\u6570\u53ea\u662f\u5b9e\u73b0\u4e8c\u5206\u7684\u4e00\u4e2a\u9884\u5904\u7406\uff0c\u771f\u6b63\u5224\u65admid\u53ef\u4e0d\u53ef\u884c\u7684\u90e8\u5206\u662f\u641c\u7d22\uff0c\u7528flag\u53d8\u91cf\u5224\u65ad\u533a\u95f4\u7684\u4e8c\u5206\u79fb\u52a8\u3002\n\n\u76f4\u63a5\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nconst int maxn=1e3+10;\nint n,m,l,r,flag;\nint map[maxn][maxn],v[maxn][maxn],vis[maxn][maxn];\nint dx[]={0,0,0,-1,1};\nint dy[]={0,1,-1,0,0};\nint read()\n{\n    int x=0,f=1;char ch;ch=getchar();\n    while(ch<'0' || ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0' && ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\nvoid check(int x)\n{\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n        {\n            if(map[i][j]<=x)\n                vis[i][j]=1;\n            else\n                vis[i][j]=0;\n        }\n}\nvoid dfs(int x,int y)\n{\n    if(x==n)\n    {\n        flag=1;\n        return;\n    }\n    for(int i=1;i<=4;i++)\n    {\n        int xx=x+dx[i];\n        int yy=y+dy[i];\n        if(xx>0 && xx<=n && yy>0 && yy<=m)\n            if(v[xx][yy]==0 && vis[xx][yy]==1)\n            {\n                v[xx][yy]=1;\n                dfs(xx,yy);\n                if(flag==1)\n                    break;\n            }\n    }\n}\nint main()\n{\n    n=read();m=read();\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n        {\n            map[i][j]=read();\n            r=max(r,map[i][j]);\n        }\n    while(l<r)\n    {\n        int mid=(l+r)>>1;\n        flag=0;\n        memset(v,0,sizeof(v));\n        check(mid);\n        dfs(1,1);\n        if(flag==1)\n            r=mid;\n        else\n            l=mid+1;\n    }\n    printf(\"%d\",l);\n    return 0;\n}\n```\n",
        "postTime": 1567684033,
        "uid": 175131,
        "name": "\u5085\u601d\u7ef4666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1902 \u3010\u523a\u6740\u5927\u4f7f\u3011"
    },
    {
        "content": "\n\u975e\u5e38\u7ecf\u5178\u7684\u4e00\u9053\u4e8c\u5206+bfs\n\n\u601d\u8def\u89c1\u4ee3\u7801\u6ce8\u91ca\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n//\u65b9\u5411\u6570\u7ec4\uff0c\u5206\u522b\u6307\u5b9a\u56db\u4e2a\u65b9\u5411 \nint xx[4]={1,-1,0,0};\nint yy[4]={0,0,1,-1};\n\nint n,m,l,r,mid,ans;\n\n//a\u6570\u7ec4\u50a8\u5b58\u5730\u56fe\u4e0a\u67d0\u70b9\u7684\u6fc0\u5149\u503c\uff0cd[i][j]\u4e3abfs\u8fc7\u7a0b\u4e2d\u5230\u8fbe\u67d0\u70b9\u7684\u6700\u77ed\u8ddd\u79bb \nint a[1010][1010];\nint d[1010][1010];\n\nbool check(int r)\n{\n\tqueue<int> X;queue<int> Y;\t//STL\u961f\u5217X,Y\u5206\u522b\u6a21\u62dfbfs\u8fc7\u7a0b\u4e2d\u7684\u6a2a\u7eb5\u5750\u6807 \n\t\n\t//\u7531\u4e8e\u7b2c\u4e00\u884c\u4e0e\u6700\u540e\u4e00\u884c\u5747\u65e0\u6fc0\u5149\uff0c\u4e0d\u5f71\u54cd\u6700\u540e\u7ed3\u679c\uff0c\u53ea\u9700\u4ece\u7b2c\u4e00\u884c\u7684\u67d0\u70b9\u51fa\u53d1\uff0c\u5230\u8fbe\u6700\u540e\u4e00\u884c\u7684\u4efb\u4e00\u70b9\u5373\u53ef \n\t//\u8fd9\u91cc\u9009\u53d6(1,1)\u4e3a\u8d77\u59cb\u70b9\u5e76\u52a0\u5165\u961f\u5217 \n\tX.push(1);Y.push(1);\t\t \n\t\n\t//\u521d\u59cb\u5316\u8ddd\u79bb\u6570\u7ec4\u4e3a\u4e00\u4e2a\u76f8\u5bf9\u5927\u7684\u503c \n\tfor (int i=1;i<=n;i++) for (int j=1;j<=m;j++) d[i][j]=1234567890;\n\t\n\t//(1,1)\u70b9\u4e3a\u8d77\u59cb\u70b9\uff0c\u8bbe\u7f6e\u8ddd\u79bb\u4e3a1 \n\td[1][1]=0;\n\t\n\t//\u6807\u51c6bfs\u8fc7\u7a0b\n\t//\u9650\u5236\u6761\u4ef6\u4e2d\u8981\u6ce8\u610f\u5224\u5b9a\u4e0b\u4e00\u70b9\u662f\u5426\u7b26\u5408\u672c\u6b21\u51fd\u6570\u8c03\u7528\u7684\u6700\u5927\u6fc0\u5149\u503c\uff0c\u6b64\u5904\u4e3a\u51fd\u6570\u5b9e\u53c2r \n\twhile(!X.empty()&&!Y.empty()){\n\t\tint x=X.front();\n\t\tint y=Y.front();\n\t\tX.pop();Y.pop();\n\t\tfor (int p=0;p<4;p++){\n\t\t\tif (x+xx[p]>=1 && x+xx[p]<=n && y+yy[p]>=1 && y+yy[p]<=m && a[x+xx[p]][y+yy[p]]<=r && d[x][y]+1<d[x+xx[p]][y+yy[p]]){\n\t\t\t\tX.push(x+xx[p]);\n\t\t\t\tY.push(y+yy[p]);\n\t\t\t\td[x+xx[p]][y+yy[p]]=d[x][y]+1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t//\u5224\u5b9a\u672c\u6b21\u51fd\u6570\u8c03\u7528\u7684\u6700\u5927\u6fc0\u5149\u503c\u80fd\u5426\u4f7f\u58eb\u5175\u8d70\u5230\u6700\u540e\u4e00\u884c\uff08\u5176\u5b9e\u5224\u5b9ad[n][1]\u4e00\u70b9\u5373\u53ef\uff09 \n\tfor (int i=1;i<=m;i++) if (d[n][i]==1234567890) return false;\n\telse return true;\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor (int i=1;i<=n;i++) for (int j=1;j<=m;j++) scanf(\"%d\",&a[i][j]);\n\t\n\t//\u9898\u4e2d\u6307\u5b9a\u6700\u5927\u6fc0\u5149\u4e3a1000\uff0c\u5de6\u53f3\u5206\u522b\u8bbe\u4e3a0\u548c1000\uff0c\u5f00\u59cb\u4e8c\u5206\n\t//\u5f53\u7136\u4e5f\u53ef\u4ee5\u5728\u8f93\u51fa\u5730\u56fea[i][j]\u65f6\u8bb0\u5f55\u6700\u5927\u6700\u5c0f\u6fc0\u5149\u503c\uff0c\u5408\u7406\u51cf\u5c11\u8fd0\u7b97 \n\tl=0;r=1000;\n\twhile(l<=r){\n\t\tmid=(l+r)/2;\n\t\tif (check(mid)){\n\t\t\t//check\u901a\u8fc7\u8868\u660e\u8be5\u6fc0\u5149\u503c\u80fd\u591f\u4f7f\u58eb\u5175\u8d70\u5230\u6700\u540e\u4e00\u884c\n\t\t\t//\u800c\u6211\u4eec\u60f3\u8981\u7684\u662f\u4f7f\u6fc0\u5149\u503c\u5c3d\u53ef\u80fd\u7684\u5c0f\n\t\t\t//\u56e0\u6b64\u8c03\u6574\u53f3\u503c\u4e3amid-1 \n\t\t\tans=mid;\n\t\t\tr=mid-1;\n\t\t}\n\t\telse l=mid+1;\n\t}\n\t\n\t//\u8f93\u51fa\u7ed3\u679c \n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1549026521,
        "uid": 109906,
        "name": "\u7a7a\u5f66",
        "ccfLevel": 0,
        "title": "P1902 \u523a\u6740\u5927\u4f7f\u9898\u89e3"
    },
    {
        "content": "\u5148\u7b80\u5316\u4e00\u4e0b\u9898\u76ee,\u7ed9\u51fa\u6700\u5927\u4f24\u5bb3\u503c,\u5224\u65ad\u662f\u5426\u53ef\u884c\n\n\u53ea\u8981\u4e00\u4e2a\u8bb0\u5fc6\u5316dfs,\u526a\u6389\u8d8a\u754c\u548c\u8d85\u51fa\u4f24\u5bb3\u503c\u7684\u5373\u53ef\n\n\u7531\u4e8e\u8bb0\u5fc6\u5316\u6570\u7ec4vis\u81f3\u591a\u88ab\u4fee\u6539nm\u6b21,\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6$O(nm)$\n\n```cpp\ntypedef long long ll;\nll n,m;\nll a[1001][1001];//\u4f24\u5bb3\u503c\nbool vis[1001][1001];//\u8bbf\u95ee\u6807\u8bb0\n\nvoid dfs(ll x,ll y,ll k)\n{\n\tif(x<1||y<1||x>n||y>m||vis[x][y]||a[x][y]>k)return;//\u526a\u679d\n\tvis[x][y]=1;\n\tdfs(x+1,y,k);dfs(x,y+1,k);\n\tdfs(x-1,y,k);dfs(x,y-1,k);\n}\nbool check(ll k)//\u6700\u5927\u4f24\u5bb3\u503c\u4e3ak\u662f\u5426\u53ef\u884c\n{\n\tmemset(vis,0,sizeof vis);//\u6e05\u7a7avis\n\tdfs(1,1,k);//\u7b2c\u4e00\u884c\u90fd\u4e3a0,\u6240\u4ee5\u53ef\u4ee5\u5728\u7b2c\u4e00\u884c\u4efb\u610f\u8d70,\u4e3a\u4e86\u65b9\u4fbf,\u4ece(1,1)\u5f00\u59cb\n\treturn vis[n][1];//\u6700\u540e\u4e00\u884c\u90fd\u4e3a0,\u6240\u4ee5\u53ef\u4ee5\u5728\u6700\u540e\u4e00\u884c\u4efb\u610f\u8d70,\u5982\u679c(n,1)\u80fd\u5230\u8fbe,\u6700\u540e\u4e00\u884c\u6bcf\u4e2a\u70b9\u90fd\u80fd\u5230\u8fbe\n}\n```\n\n\u63a5\u4e0b\u6765\u770b\u6b64\u9898:\n\n\u9898\u76ee\u4e2d\u8bf4:\n>  \u6574\u4e2a\u90e8\u961f\u53d7\u5230\u7684\u4f24\u5bb3\u503c\u4e3a\u6240\u6709\u58eb\u5175\u7684\u4f24\u5bb3\u503c\u4e2d\u7684\u6700\u5927\u503c......\u4f7f\u5f97\u6574\u4e2a\u90e8\u961f\u7684\u4f24\u5bb3\u503c\u6700\u5c0f\u3002\n\n\u6240\u4ee5\u4e8c\u5206\u7b54\u6848\u5373\u53ef\n\n```cpp\n//by wh\n//time O(nmlogA)\n#include<iostream>\n#include<cstdio>\n#include<cstring>\ntypedef long long ll;\nll n,m;\nll a[1001][1001];//\u4f24\u5bb3\u503c\nbool vis[1001][1001];//\u8bbf\u95ee\u6807\u8bb0\n\nvoid dfs(ll x,ll y,ll k)\n{\n\tif(x<1||y<1||x>n||y>m||vis[x][y]||a[x][y]>k)return;//\u526a\u679d\n\tvis[x][y]=1;\n\tdfs(x+1,y,k);dfs(x,y+1,k);\n\tdfs(x-1,y,k);dfs(x,y-1,k);\n}\nbool check(ll k)//\u6700\u5927\u4f24\u5bb3\u503c\u4e3ak\u662f\u5426\u53ef\u884c\n{\n\tmemset(vis,0,sizeof vis);//\u6e05\u7a7avis(\u8981\u4f7f\u7528\u591a\u6b21,\u6240\u4ee5\u5207\u52ff\u9057\u5fd8)\n\tdfs(1,1,k);//\u7b2c\u4e00\u884c\u90fd\u4e3a0,\u6240\u4ee5\u53ef\u4ee5\u5728\u7b2c\u4e00\u884c\u4efb\u610f\u8d70,\u4e3a\u4e86\u65b9\u4fbf,\u4ece(1,1)\u5f00\u59cb\n\treturn vis[n][1];//\u6700\u540e\u4e00\u884c\u90fd\u4e3a0,\u6240\u4ee5\u53ef\u4ee5\u5728\u6700\u540e\u4e00\u884c\u4efb\u610f\u8d70,\u5982\u679c(n,1)\u80fd\u5230\u8fbe,\u6700\u540e\u4e00\u884c\u6bcf\u4e2a\u70b9\u90fd\u80fd\u5230\u8fbe\n}\nint main()\n{\n\tscanf(\"%lld%lld\",&n,&m);\n\tfor(ll i=1;i<=n;++i)\n\t\tfor(ll j=1;j<=m;++j)scanf(\"%lld\",&a[i][j]);\n\tll l=1,r=1000,mid;\n\twhile(l<r)\n\t{\n\t\tmid=(l+r)>>1;\n\t\tif(check(mid))r=mid;\n\t\telse l=mid+1;\n\t}\n\tprintf(\"%lld\",r);\n\treturn 0;\n}\n```",
        "postTime": 1548845980,
        "uid": 73142,
        "name": "\u4e07\u5f18",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1902 \u3010\u523a\u6740\u5927\u4f7f\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u539f\u6765\u521a\u5f00\u59cb\u505a\u7684\u65f6\u5019\u5ffd\u7565\u4e86\u8fd9\u4e2a\u6761\u4ef6\uff08\u8ff7\u9635\u7531 $n*m$\u4e2a\u76f8\u540c\u7684\u5c0f\u623f\u95f4\u7ec4\u6210\uff0c\u6bcf\u4e2a\u623f\u95f4\u4e0e\u76f8\u90bb\u56db\u4e2a\u623f\u95f4\u4e4b\u95f4\u6709\u95e8\u53ef\u901a\u884c\u3002\uff09\uff0c\n\n\u7136\u540e\u6211\u4ee5\u4e3a\u8fd9\u4e2a\u9898\u662f\u626b\u4e00\u4e0b\u6bcf\u5217\u7684\u503c\u4e4b\u548c\u7684\u6700\u5c0f\u503c\u7136\u540e\u518d\u627e\u51fa\u8fd9\u5217\u4e2d\u96640\u5916\u7684\u6700\u5c0f\u503c\uff0c\u5f53\u7136\u662f\u9519\u7684\uff0c\uff08\u53cd\u6b63\u6211WA\u4e86\uff09\uff0c\u4e8e\u662f\u6211\u5f00\u59cb\u60f3\u6a21\u62df\u4e0e\u641c\u7d22\uff0c\u7531\u4e8e\u4e0d\u4f1abfs\uff0c\u4e8e\u662f\u53ea\u80fddfs\u4e86\uff0c\u4f46\u8fd9\u9053\u9898\u4ece\u9898\u9762\u6765\u770b\u597d\u50cf\u53ef\u4ee5\u4e8c\u5206\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u6240\u53d7\u5230\u7684\u4f24\u5bb3,\u5982\u679c\u67d0\u4f4d\u7f6e\u6240\u53d7\u5230\u7684\u4f24\u5bb3\u503c\u5927\u4e8e\u6211\u4eec\u4e8c\u5206\u9650\u5236\u7684\u4f24\u5bb3\u503c\uff0c\u6211\u4eec\u80af\u5b9a\u662f\u4e0d\u8d70\u8fd9\u6761\u8def\u7684\uff0c\u800c\u5728\u4ee3\u7801\u5b9e\u73b0\u65b9\u9762\u6211\u4eec\u53ef\u4ee5\u6807\u8bb0\u6211\u4eec\u80fd\u5426\u4ee5\u4e8c\u5206\u7684\u4f24\u5bb3\u503c\u8d70\u5230\u6700\u540e\u4e00\u884c\uff0c\u5982\u679c\u53ef\u4ee5\u5c31\u627e\u5de6\u7aef\u70b9\uff08\u8f83\u5c11\u4f24\u5bb3\uff09\uff0c\u81f3\u4e8edfs\u90e8\u5206\u6211\u4eec\u53ef\u4ee5\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u8d85\u51fa\u8fb9\u754c\uff0c\u662f\u5426\u8d70\u8fc7\u8fd9\u4e2a\u70b9,\u4f24\u5bb3\u503c\u662f\u5426\u80fd\u6ee1\u8db3\u9650\u5236\u6761\u4ef6\u3002\n\n\u4e8e\u662f\u732e\u4e0a\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#include<iostream>\n#include<cstdlib>\n#include<cctype>\n#include<cstdio>\n#include<queue>\nusing namespace std;\ntypedef long long ll;\ntemplate<typename T>inline void read(T &x){\n    x=0;T f=1;char c=getchar();\n    for(;c<'0'||c>'9';c=getchar())if(c=='-')f=-1;\n    for(;c>='0'&&c<='9';c=getchar())x=x*10+c-'0';\n    x*=f;\n}\nconst int maxa = 1100,dx[]={0,0,1,-1},dy[]={-1,1,0,0};\nint n,m,p[maxa][maxa];\nbool flag,vis[maxa][maxa];\nvoid dfs(int x,int y,int mid){\n    if(x==n){\n        flag=1;\n        return;\n    }\n    vis[x][y]=true;\n    for(int i=0;i<4;++i){\n        int nx=x+dx[i],ny=y+dy[i];\n        if(nx<1||ny<1||nx>n||ny>m||vis[nx][ny]||p[nx][ny]>mid)continue;\n        dfs(nx,ny,mid);\n        if(flag)return;\n    }\n}\nint main(){\n    read(n);read(m);\n    for(int i=1;i<=n;++i){\n        for(int j=1;j<=m;++j){\n            read(p[i][j]);\n        }\n    }\n    int l=0,r=maxa;\n    while(l<=r){\n        int mid=(l+r)>>1;\n        memset(vis,0,sizeof(vis));\n        flag=false;\n        dfs(1,1,mid);\n        if(flag)r=mid-1;\n        else l=mid+1;\n    }\n    printf(\"%d\",l);\n    return 0;\n}\n```\n\n\u8c22\u8c22\u89c2\u770b\uff0c\u8bf7\u8bb0\u4f4f\uff0c\u6211\u592a\u5f31\u4e86\u3002",
        "postTime": 1541147069,
        "uid": 55050,
        "name": "\u6700\u559c\u6b22saber\u4e86",
        "ccfLevel": 0,
        "title": "P1902 \u523a\u6740\u5927\u4f7f"
    }
]