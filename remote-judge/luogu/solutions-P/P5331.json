[
    {
        "content": "\u8003\u8651\u7528\u8d39\u7528\u6d41\u89e3\u51b3\u672c\u9898\u3002\n\n\u6bcf\u4e2a\u54e8\u7ad9\u770b\u4f5c\u4e00\u4e2a\u70b9\uff0c\u5e76\u5c06\u5176\u62c6\u4e3a\u4e24\u4e2a\u70b9\uff0c\u5efa\u56fe\u65b9\u5f0f\u4e3a\uff1a\n\n$S \\longrightarrow x_i$ \u5bb9\u91cf\u4e3a$1$,\u8d39\u7528\u4e3a$0$\n\n$x_i \\longrightarrow T$ \u5bb9\u91cf\u4e3a$1$,\u8d39\u7528\u4e3a$w$\n\n$x_i \\longrightarrow x^\\prime_j\\ (i>j)$ \u5bb9\u91cf\u4e3a$1$,\u8d39\u7528\u4e3a$|a_i-a_j|$\n\n$x^\\prime_i \\longrightarrow T$ \u5bb9\u91cf\u4e3a$1$,\u8d39\u7528\u4e3a$0$\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u6ee1\u8db3\u9898\u76ee\u8981\u6c42\u4e86\uff0c\u8dd1\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u5373\u53ef\u6c42\u89e3\uff0c\u4f46\u53d1\u73b0\u8fb9\u6570\u4e3a$n^2$\u7ea7\u522b\uff0c\u6240\u4ee5\u8981\u8003\u8651\u4f18\u5316\u5efa\u56fe\u3002\n\n\u4e00\u4e2a\u70b9\u5728\u548c\u62c6\u51fa\u6765\u7684\u70b9\u8fde\u8fb9\u65f6\uff0c\u53ea\u4f1a\u5411\u4e0b\u6807\u6bd4\u5176\u5c0f\u7684\u70b9\u8fde\u8fb9\uff0c\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7\u5206\u6cbb\u6765\u5b9e\u73b0\u4f18\u5316\u5efa\u56fe\u3002\n\n\u5bf9\u4e8e\u533a\u95f4$[l,r]$\uff0c\u5206\u6210\u4e24\u4e2a\u533a\u95f4$[l,mid]$\u548c$[mid+1,r]$\uff0c\u6bcf\u6b21\u4ece\u53f3\u533a\u95f4\u5411\u5de6\u533a\u95f4\u8fde\u8fb9\u3002\u8fd8\u9700\u8003\u8651\u8d39\u7528\u7684\u7edd\u5bf9\u503c\u5982\u4f55\u5904\u7406\uff0c\u53ef\u4ee5\u628a\u8fd9\u4e00\u533a\u95f4\u5185\u6240\u6709\u7684\u6743\u503c\u6392\u5e8f\u53bb\u91cd\uff0c\u7136\u540e\u8fde\u6210\u4e00\u6761\u94fe\uff0c\u94fe\u4e0a\u8fb9\u7684\u8d39\u7528\u4e3a\u76f8\u90bb\u4e24\u70b9\u7684\u6743\u503c\u4e4b\u5dee\uff0c\u7136\u540e\u628a\u8fd9\u6761\u94fe\u4f5c\u4e3a\u8fde\u63a5\u53f3\u533a\u95f4\u548c\u5de6\u533a\u95f4\u7684\u865a\u70b9\u3002\n\n\u533a\u95f4\u5185\u7684\u70b9\u5411\u865a\u70b9\u8fde\u8fb9\u65f6\uff0c\u53ea\u9700\u627e\u5230\u5176\u6743\u503c\u6240\u5bf9\u5e94\u5230\u94fe\u4e0a\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u5411\u5bf9\u5e94\u4f4d\u7f6e\u8fde\u8fb9\u5373\u53ef\uff0c\u8fd9\u6837\u5c31\u901a\u8fc7\u7d2f\u79ef\u6743\u503c\u4e4b\u95f4\u7684\u5dee\u503c\u5b9e\u73b0\u4e86\u8d39\u7528\u7684\u7edd\u5bf9\u503c\u3002\n\n$code:$\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 800010\n#define inf 2000000000\nusing namespace std;\ntypedef long long ll;\ntemplate<typename T> inline void read(T &x)\n{\n    x=0;char c=getchar();bool flag=false;\n    while(!isdigit(c)){if(c=='-')flag=true;c=getchar();}\n    while(isdigit(c)){x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n    if(flag)x=-x;\n}\nint n,w,tot,cnt,s,t;\nint p1[maxn],p2[maxn];\nll a[maxn],b[maxn],dis[maxn];\nbool vis[maxn];\nstruct edge\n{\n    int to,nxt,v;\n    ll c;\n}e[maxn];\nint head[maxn],edge_cnt=1;\nvoid add(int from,int to,int val,ll cost)\n{\n    e[++edge_cnt]=(edge){to,head[from],val,cost};\n\thead[from]=edge_cnt;\n    e[++edge_cnt]=(edge){from,head[to],0,-cost};\n\thead[to]=edge_cnt;\n}\nbool spfa()\n{\n    for(int i=1;i<=tot;++i) vis[i]=0,dis[i]=inf;\n    queue<int> q;\n    q.push(s),dis[s]=0,vis[s]=true;\n    while(!q.empty())\n    {\n        int x=q.front();\n        q.pop(),vis[x]=false;\n        for(int i=head[x];i;i=e[i].nxt)\n        {\n            int y=e[i].to,v=e[i].v;\n            ll c=e[i].c;\n            if(v&&dis[y]>dis[x]+c)\n            {\n                dis[y]=dis[x]+c;\n                if(!vis[y]) q.push(y),vis[y]=true;\n            }\n        }\n    }\n    return dis[t]!=inf;\n}\nint dfs(int x,int lim)\n{\n    if(x==t) return lim;\n    vis[x]=true;\n    int res=lim,flow;\n    for(int i=head[x];i;i=e[i].nxt)\n    {\n        int y=e[i].to,v=e[i].v;\n        ll c=e[i].c;\n        if(!v||dis[y]!=dis[x]+c||vis[y]) continue;\n        if(flow=dfs(y,min(res,v)))\n        {\n            res-=flow;\n            e[i].v-=flow;\n            e[i^1].v+=flow;\n            if(!res) break;\n        }\n    }\n    return lim-res;\n}\nll dinic()\n{\n    int flow;\n    ll sum=0;\n    while(spfa())\n        while(flow=dfs(s,inf))\n            sum+=flow*dis[t];\n    return sum;\n}\nvoid solve(int l,int r)\n{\n    if(l==r) return;\n    int mid=(l+r)>>1;\n    solve(l,mid),solve(mid+1,r),cnt=0;\n    for(int i=l;i<=r;++i) b[++cnt]=a[i];\n    sort(b+1,b+cnt+1),cnt=unique(b+1,b+cnt+1)-b-1;\n    for(int i=1;i<cnt;++i)\n    {\n        add(tot+i,tot+i+1,inf,b[i+1]-b[i]);\n        add(tot+i+1,tot+i,inf,b[i+1]-b[i]);\n    }\n    for(int i=l;i<=r;++i)\n    {\n        int pos=lower_bound(b+1,b+cnt+1,a[i])-b;\n        if(i>mid) add(p1[i],tot+pos,1,0);\n        else add(tot+pos,p2[i],1,0);\n    }\n    tot+=cnt;\n}\nint main()\n{\n    read(n),read(w),s=++tot,t=++tot;\n    for(int i=1;i<=n;++i) read(a[i]);\n    for(int i=1;i<=n;++i)\n    {\n        p1[i]=++tot,p2[i]=++tot;\n        add(s,p1[i],1,0),add(p1[i],t,1,w),add(p2[i],t,1,0);\n    }\n    solve(1,n),printf(\"%lld\",dinic());\n    return 0;\n}\n```\n",
        "postTime": 1590509893,
        "uid": 172489,
        "name": "lhm_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P5331 \u3010[SNOI2019]\u901a\u4fe1\u3011"
    },
    {
        "content": "\u4ece\u6700\u7b80\u5355\u7684\u8d39\u7528\u6d41\u5f00\u59cb\u3002\n\n\u628a\u6bcf\u4e2a\u70b9\u62c6\u6210\u4e24\u4e2a\u70b9\uff0c\u5206\u522b\u8868\u793a\u8fde\u51fa\u7684\u548c\u8fde\u5165\u7684\u3002\n\n\u7136\u540e\u5bf9\u70b9$i$\uff0c\u4ece\u63a7\u5236\u4e2d\u5fc3\u8fde\u5411$i$\u7684\u8fde\u5165\u70b9\u5bb9\u91cf\u4e3a1\uff0c\u8d39\u7528\u4e3a$W$\u7684\u8fb9\uff0c\u518d\u5bf9\u4e8e$\\forall j< i$\uff0c\u4ece$j$\u7684\u8fde\u51fa\u70b9\u8fde\u5411$i$\u7684\u8fde\u5165\u70b9\u5bb9\u91cf\u4e3a1\uff0c\u8d39\u7528\u4e3a$|a_i-a_j|$\u7684\u8fb9\uff0c\u5269\u4e0b\u7684\u8fb9\u5bb9\u91cf1\uff0c\u8d39\u75280\u3002\n\n\u8dd1\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\uff0c\u6240\u5f97\u6700\u5c0f\u8d39\u7528\u5373\u4e3a\u6240\u6c42\u3002\n\n\u8fd9\u6837\u8fde\u7684\u8fb9\u6570\u662f$O(n^2)$\u7684\uff0c\u8fc7\u4e0d\u53bb\u3002\n\n\u6211\u4eec\u8003\u8651\u4f18\u5316\u8fd9\u4e2a\u5efa\u8fb9\u8fc7\u7a0b\u3002\n\n\u4ee5\u4e0b\u5c06\u8981\u4ecb\u7ecd\u4e00\u79cd\u975e\u5e38\u66b4\u529b\u4e14\u5bb9\u6613\u7406\u89e3\u7684\u4f18\u5316\u8fde\u8fb9\u65b9\u5f0f\u2014\u2014**\u5206\u5757**\u3002\n\n\u9996\u5148\u4fee\u6539\u4e00\u4e0b\u539f\u6765\u7684\u5efa\u8fb9\u65b9\u5f0f\u3002\n\n\u5bf9\u4e8e\u8fde\u51fa\u70b9\uff0c\u6211\u4eec\u62c6\u6210\u4e09\u4e2a\uff0c$L_{i,0},L_{i,1},L_{i,2}$\u3002\u7136\u540e\uff0c\u4ece$L_{i,2}$\u5411$L_{i,0}$\u8fde\u5bb9\u91cf\u4e3a1\uff0c\u8d39\u7528\u4e3a$-a_i$\u7684\u8fb9\uff1b\u4ece$L_{i,2}$\u5411$L_{i,1}$\u8fde\u5bb9\u91cf\u4e3a1\uff0c\u8d39\u7528\u4e3a$a_i$\u7684\u8fb9\u3002\n\n\u540c\u7406\u5bf9\u4e8e\u8fde\u5165\u70b9\uff0c\u6211\u4eec\u4e5f\u62c6\u6210\u4e09\u4e2a$R_{i,0},R_{i,1},R_{i,2}$\u3002\u7136\u540e\uff0c\u4ece$R_{i,0}$\u5411$R_{i,2}$\u8fde\u5bb9\u91cf\u4e3a1\uff0c\u8d39\u7528\u4e3a$-a_i$\u7684\u8fb9\uff1b\u4ece$R_{i,1}$\u5411$R_{i,2}$\u8fde\u5bb9\u91cf\u4e3a1\uff0c\u8d39\u7528\u4e3a$a_i$\u7684\u8fb9\u3002\n\n\u7136\u540e\uff0c\u5bf9\u4e8e\u4efb\u610f\u7684$j< i$\uff0c\u82e5$a_j>a_i$\uff0c\u5219\u4ece$L_{j,1}$\u5411$R_{i,0}$\u8fde\u5bb9\u91cf\u4e3a1\uff0c\u8d39\u7528\u4e3a0\u7684\u8fb9\u3002\u53cd\u4e4b\uff0c\u4ece$L_{j,0}$\u5411$R_{i,1}$\u8fde\u5bb9\u91cf\u4e3a1\uff0c\u8d39\u7528\u4e3a0\u7684\u8fb9\u3002\n\n\u8fd9\u6837\u7684\u6548\u679c\u662f\u4e00\u6837\u7684\uff0c\u4f46\u8fb9\u6570\u8fd8\u662f$O(n^2)$\u7684\u3002\n\n\u63a5\u4e0b\u6765\u5bf9\u8282\u70b9\u8fdb\u884c\u5206\u5757\uff0c\u5bf9\u6bcf\u4e2a\u5757\u5185\u7684\u8282\u70b9\uff0c\u6309\u7167\u5176$a$\u7684\u503c\u8fdb\u884c\u6392\u5e8f\u3002\u7136\u540e\uff0c\u5c06\u5176\u524d\u7f00\u3001\u540e\u7f00\u8fde\u5230\u4e00\u8d77\u3002\u8fd9\u90e8\u5206\u7684\u8fb9\u6570\u662f\u53ef\u4ee5\u505a\u5230\u7ebf\u6027\u7684\u3002\n\n\u7136\u540e\u5bf9\u6bcf\u4e2a\u8282\u70b9\uff0c\u4e4b\u524d\u6bcf\u4e2a\u5757\u7684\u70b9\u5411\u5176\u8fde\u8fb9\u7684\u65f6\u5019\uff0c\u90fd\u53ef\u4ee5\u53ea\u8fde2\u6761\u8fb9\u89e3\u51b3\uff0c\u800c\u5757\u5185\u7684\u8fde\u8fb9\u4e5f\u53ea\u6709$O(\\sqrt n)$\u6761\u3002\n\n\u90a3\u4e48\u8fb9\u6570\u5c31\u88ab\u4f18\u5316\u5230$O(n\\sqrt n)$\u6761\u4e86\u3002\n\n\u7136\u540e\u5bf9\u8d39\u7528\u6d41\u7b97\u6cd5\u8fdb\u884c\u5408\u7406\u7684\u5e38\u6570\u4f18\u5316\uff0c\u5c31\u53ef\u4ee5\u5927\u529b\u5361\u8fc7\u8fd9\u9898\u4e86\u3002\n\n## Code\uff1a\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<algorithm>\n#include<cmath>\n#include<utility>\n#define bel(x)((x-1)/siz+1)\nconst int N=105555,inf=2e9;\ntypedef long long LL;\nint to[N*30],nxt[N*30],cap[N*30],cost[N*30];\nint head[N],cnt=1,n,W,ct,A[N],T,a[N],pre_e[N],vis[N],t0t,L0[N],L1[N],R0[N],R1[N],L2[N],R2[N],siz,Lb[N],Rb[N],blocks;\nint pre[N],suf[N];\nint dis[N];\nstd::pair<int,int>pr[N];\ninline void addedge(int u,int v,int c,int t){\n    to[++cnt]=v,nxt[cnt]=head[u],cap[cnt]=c,cost[cnt]=t,head[u]=cnt,\n    to[++cnt]=u,nxt[cnt]=head[v],cap[cnt]=0,cost[cnt]=-t,head[v]=cnt;\n}\nint q[1050005];\nint spfa(int&flow,LL&Cost){\n    for(int i=0;i<=t0t;++i)dis[i]=inf,a[i]=inf,pre_e[i]=vis[i]=0;\n    dis[0]=0;\n    int hd=0,tail=1;\n    for(q[1]=0;hd!=tail;){\n        int u=q[hd=(hd&1048575)+1];\n        vis[u]=0;\n        for(int i=head[u];i;i=nxt[i])\n        if(cap[i]&&dis[to[i]]>dis[u]+cost[i]){\n            dis[to[i]]=dis[u]+cost[i],a[to[i]]=std::min(a[u],cap[i]),pre_e[to[i]]=i;\n            if(!vis[to[i]])vis[q[tail=(tail&1048575)+1]=to[i]]=1;\n        }\n    }\n    if(a[T]==inf)return 0;\n    flow+=a[T],Cost+=(LL)a[T]*dis[T];\n    for(int i=T;i;i=to[pre_e[i]^1])\n    cap[pre_e[i]]-=a[T],cap[pre_e[i]^1]+=a[T];\n    return 1;\n}\nint main(){\n    scanf(\"%d%d\",&n,&W);\n    siz=sqrt(n)*1.41;\n    blocks=bel(n);\n    for(int i=1;i<=blocks;++i)Lb[i]=Rb[i-1]+1,Rb[i]=i*siz;Rb[blocks]=n;\n    for(int i=1;i<=n;++i)scanf(\"%d\",a+i),pr[i]=std::make_pair(a[i],i);\n    for(int i=1;i<=blocks;++i)std::sort(pr+Lb[i],pr+Rb[i]+1);\n    t0t=n*6+1;\n    ct=++t0t,T=++t0t;\n    addedge(0,ct,inf,W);\n    for(int i=1;i<=n;++i){\n        L2[i]=i,L0[i]=i+n,L1[i]=i+n*2;\n        addedge(0,L2[i],1,0),addedge(L2[i],L1[i],1,a[i]),addedge(L2[i],L0[i],1,-a[i]);\n        R2[i]=i+n*3,R0[i]=i+n*4,R1[i]=i+n*5;\n        addedge(R2[i],T,1,0),addedge(R1[i],R2[i],1,a[i]),addedge(R0[i],R2[i],1,-a[i]);\n        addedge(ct,R2[i],1,0);\n    }\n    for(int i=1;i<blocks;++i){\n        pre[Lb[i]]=L0[pr[Lb[i]].second];\n        for(int j=Lb[i]+1;j<=Rb[i];++j){\n            int&nw=pre[j];nw=++t0t;\n            addedge(pre[j-1],nw,1,0),addedge(L0[pr[j].second],nw,1,0);\n        }\n        suf[Rb[i]]=L1[pr[Rb[i]].second];\n        for(int j=Rb[i]-1;j>=Lb[i];--j){\n            int&nw=suf[j];nw=++t0t;\n            addedge(suf[j+1],nw,1,0),addedge(L1[pr[j].second],nw,1,0);\n        }\n    }\n    for(int i=1;i<=n;++i){\n        const int bl=bel(i);\n        for(int j=1;j<bl;++j){\n            if(a[i]<=pr[Lb[j]].first)addedge(suf[Lb[j]],R0[i],1,0);else\n            if(a[i]>=pr[Rb[j]].first)addedge(pre[Rb[j]],R1[i],1,0);else{\n                int x=0;\n                for(int k=Lb[j];k<Rb[j];++k)\n                if(pr[k].first<=a[i]&&a[i]<=pr[k+1].first){x=k;break;}\n                addedge(pre[x],R1[i],1,0),addedge(suf[x+1],R0[i],1,0);\n            }\n        }\n        for(int j=Lb[bl];j<i;++j)\n        if(a[j]>a[i])addedge(L1[j],R0[i],1,0);else addedge(L0[j],R1[i],1,0);\n    }\n    int flow=0;LL cost=0;\n    while(spfa(flow,cost));\n    printf(\"%lld\\n\",cost);\n    return 0;\n}\n\n```",
        "postTime": 1557732113,
        "uid": 6813,
        "name": "mrsrz",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5331 \u3010[SNOI2019]\u901a\u4fe1\u3011"
    },
    {
        "content": "\u672c\u9898\u662f\u4e00\u9053\u6570\u636e\u7384\u5b66\u7684\u8d39\u7528\u6d41\u9898\uff0c\u4e4b\u6240\u4ee5\u8bf4\u6570\u636e\u7384\u5b66\uff0c\u5927\u5bb6\u53ef\u4ee5\u5148\u770b\u4e00\u4e2a\u89e3\u6cd5\u3002\n\n\u65e2\u7136\u662f\u4e00\u9053\u8d39\u7528\u6d41\u7684\u9898\u76ee\uff0c\u9996\u5148\u8003\u8651\u5982\u4f55\u5efa\u56fe\u3002\u5148\u4e0d\u8003\u8651\u60f3\u5176\u4ed6\u7ad9\u8fde\u63a5\uff0c\u6211\u4eec\u53ef\u4ee5\u5efa\u7acb\u6e90\u70b9 s\uff0c\u5efa\u7acb\u6c47\u70b9 t\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7ad9\u5efa\u7acb\u4e00\u4e2a\u70b9\uff0c\u4ece s \u5411\u6bcf\u4e00\u4e2a\u7ad9\u8fde\u4e00\u6761\u8fb9\uff0c\u6d41\u91cf\u4e3a 1\uff0c\u8d39\u7528\u4e3a 0\uff0c\u8868\u793a\u6bcf\u4e2a\u70b9\u90fd\u6709\u4e00\u4e2a\u4efb\u52a1\uff1a\u5c06\u8fd9\u4e2a\u6d41\u91cf\u8f93\u9001\u5230 t \u70b9\uff1b\u540c\u65f6\uff0c\u4ece\u6bcf\u4e00\u4e2a\u70b9\u5411 t \u70b9\u8fde\u4e00\u6761\u8fb9\uff0c\u6d41\u91cf\u4e3a 1\uff0c\u8d39\u7528\u4e3a W\uff0c\u8868\u793a\u76f4\u63a5\u901a\u8fc7\u81ea\u5df1\u5b8c\u6210\u4efb\u52a1\u9700\u8981 W \u7684\u4ee3\u4ef7\u3002\n\n\u8fd9\u6837\u4e0d\u8003\u8651\u5411\u5176\u4ed6\u70b9\u8fde\u8fb9\uff0c\u8dd1\u51fa\u6765\u7684\u6700\u5c0f\u8d39\u7528\u4e00\u5b9a\u662f $n\\times W$\uff0c\u90a3\u4e48\uff0c\u600e\u4e48\u5411\u5176\u4ed6\u70b9\u8fde\u8fb9\u5462\uff1f\n\n\u8003\u8651\u5bf9\u6bcf\u4e00\u4e2a\u70b9\uff0c\u5efa\u4e00\u4e2a\u6b21\u70b9\uff0c\u7528\u6765\u8f93\u9001\u8fde\u5411\u5b83\u7684\u70b9\u7684\u6d41\u91cf\uff0c\u56e0\u4e3a\u6bcf\u4e00\u4e2a\u70b9\u53ea\u80fd\u88ab\u4e00\u4e2a\u70b9\u8fde\u8d77\u6765\uff0c\u6240\u4ee5\uff0c\u6bcf\u4e00\u4e2a\u6b21\u70b9\u5411 t \u70b9\u8fde\u4e00\u6761\u8fb9\uff0c\u6d41\u91cf\u4e3a 1\uff0c\u8d39\u7528\u4e3a 0\u3002\u4ece\u6bcf\u4e00\u4e2a\u4e3b\u70b9\u5411\u524d\u9762\u6bcf\u4e00\u4e2a\u6b21\u70b9\u8fde\u8fb9\uff0c\u6d41\u91cf\u4e3a 1\uff0c\u8d39\u7528\u4e3a\u4e24\u8005\u8ddd\u79bb\u5dee\u7684\u7edd\u5bf9\u503c\u3002\n\n\u5bb9\u6613\u770b\u51fa\u6765\uff0c\u8fd9\u6837\u8dd1\u51fa\u6765\u7684\u6700\u5c0f\u8d39\u7528\u4e00\u5b9a\u5c31\u662f\u7b54\u6848\u3002\n\n\u8fd9\u6837\u7684\u8fb9\u662f $n^2$ \u7ea7\u522b\u7684\uff0c\u52a0\u4e0a\u5bf9\u8d39\u7528\u8d85\u8fc7 W \u7684\u8fb9\u526a\u679d\uff0c\u4ecd\u7136\u6709\u4e0d\u5c11\u7684\u8fb9\uff0c\u8fd9\u6837\u7684\u89c4\u6a21 EK \u7b97\u6cd5\u5e94\u8be5\u8fc7\u4e0d\u4e86\uff0c\u8003\u8651\u4f18\u5316\u8fd9\u4e2a\u7b97\u6cd5\u3002\n\n\u591a\u8def\u589e\u5e7f\u8d39\u7528\u6d41\u5c31\u662f\u6bcf\u627e\u5230\u4e00\u6b21\u6700\u77ed\u8def\uff0c\u5c06\u6240\u6709\u8d39\u7528\u7b49\u4e8e s \u5230 t \u7684\u589e\u5e7f\u8def\u5168\u90e8\u589e\u5e7f\uff0c\u5177\u4f53\u662f\u5c06 Dinic \u7684\u5206\u5c42\u6761\u4ef6\uff1a\n```cpp\nd[y]==d[x]+1\n```\n\u6539\u6210\u8fd9\u4e00\u6761\u8fb9\u5728\u6700\u77ed\u8def\u4e0a\uff1a\n```cpp\ndis[y]=dis[x]+C[i]\n```\n\u8fd9\u6837\u5f97\u51fa\u7684\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=10005,M=4e6+6,T=0x3f3f3f3f;\nchar buf[1<<23],*p1,*p2,c;\n#define gc (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<22,stdin),p1==p2))?EOF:*p1++\ninline int read(){\n\tint an=0,f=1;while(!isdigit(c=gc))if(c=='-')f=-f;\n\tdo an=an*10+c-'0';while(isdigit(c=gc));return an*f;\n}\nint a[N],Head[N],ed[M],to[M],wt[M],ct[M],tot=1,dis[N],now[N],qr[N],hp,tp,n,s,t,Sqt,Mincost,MaxW;\nbool vis[N];\ninline void AddEdge(int u,int v,int W,int C){\n\ted[++tot]=v;to[tot]=Head[u];Head[u]=tot;wt[tot]=W;ct[tot]=C;\n\ted[++tot]=u;to[tot]=Head[v];Head[v]=tot;ct[tot]=-C;return;\n}\ninline bool Spfa(){\n\tqr[hp=tp=1]=s;int i,x,y;for(i=1;i<=t;++i)dis[i]=T;now[s]=Head[s];\n\twhile(hp!=tp+1){\n\t\tx=qr[hp++];if(hp==N)hp=1;vis[x]=false;\n\t\tfor(i=Head[x];i;i=to[i])\n\t\t\tif(wt[i]&&dis[y=ed[i]]>dis[x]+ct[i]){\n\t\t\t\tdis[y]=dis[x]+ct[i];\n\t\t\t\tif(!vis[y]){\n\t\t\t\t\tif(dis[y]-Sqt>dis[qr[hp]]){\n\t\t\t\t\t\tif(--hp==0)hp=N-1;qr[hp]=y;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tif(++tp==N)tp=1;qr[tp]=y;\n\t\t\t\t\t}\n\t\t\t\t\tvis[y]=true;\n\t\t\t\t\tnow[y]=Head[y]; \n\t\t\t\t}\n\t\t\t}\n\t}\n\treturn dis[t]!=T;\n}\nint mcmf(int x,int flow){\n\tif(!flow)return 0;\n\tif(x==t){Mincost+=flow*dis[x];return flow;}\n\tint k,y,rest=flow;vis[x]=true;\n\tfor(int &i=now[x];i;i=to[i])\n\t\tif(wt[i]&&!vis[y=ed[i]]&&dis[y]==dis[x]+ct[i]){\n\t\t\tif(!(k=mcmf(y,min(wt[i],rest))))dis[y]=T;\n\t\t\telse{wt[i]-=k;wt[i^1]+=k;if(!(rest-=k))break;}\n\t\t}\n\tvis[x]=false;\n\treturn flow-rest;\n}\nint main(){\n\tn=read();MaxW=read();int i,j,nowdis;\n\tfor(i=1;i<=n;++i)\n\t\tfor(j=1,a[i]=read();j<i;++j)\n\t\t\tif((nowdis=abs(a[i]-a[j]))<MaxW)\n\t\t\t\tAddEdge((i<<1)-1,j<<1,1,nowdis),Sqt+=nowdis;\n\tt=(n<<1)|1,s=t+1;\n\tfor(i=1;i<=n;++i){\n\t\tAddEdge(s,(i<<1)-1,1,0);\n\t\tAddEdge(i<<1,t,1,0);\n\t\tAddEdge((i<<1)-1,t,1,MaxW);\n\t\tSqt+=MaxW;\n\t}\n\tSqt=sqrt(Sqt);\n\twhile(Spfa()){while(mcmf(s,T));}\n\tprintf(\"%d\\n\",Mincost);\n\treturn 0;\n}\n```\n\u8fd9\u6837\u7684\u4ee3\u7801\u5df2\u7ecf\u8db3\u4ee5\u901a\u8fc7\u6b64\u9898\u4e86\uff0c\u4f46\u662f\uff0c\u4ee5\u4e0b\u7a0b\u5e8f\u751f\u6210\u7684\u6570\u636e\u80fd\u5c06\u90e8\u5206\u9898\u89e3\u5305\u62ec\u4ee5\u4e0a\u4ee3\u7801\u5361\u5230 $6s-100s$\uff0c\u8fd9\u5c31\u662f\u6b64\u9898\u6570\u636e\u7384\u5b66\uff08\u8fc7\u6c34\uff09\u7684\u539f\u56e0\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint main(){\n\tfreopen(\"IO.in\",\"w\",stdout);\n\tputs(\"1000 10000000\");\n\tfor(int i=1;i<=1000;++i)\n\t\tprintf(\"%d \",rand());\n\tputchar('\\n');\n\treturn 0;\n} \n```\n\u672c\u4eba\u4eb2\u6d4b\uff0c\u4ee5\u4e0a\u7684\u4ee3\u7801\u8981\u8dd1 $96.72s$\uff0c\u6211\u4eec\u8be5\u5982\u4f55\u4f18\u5316\u5462\uff1f\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5f52\u5e76\u6392\u5e8f\uff08\u4e5f\u53ef\u79f0\u4e4b\u4e3a CDQ \u5206\u6cbb\uff09\u7684\u601d\u60f3\u6765\u4f18\u5316\u5efa\u56fe\uff0c\u5b9a\u4e49 `CDQ(l,r)` \u4f1a\u5c06 $mid+1-r$ \u7684\u6240\u6709\u70b9\u5411 $l-mid$ \u7684\u6b21\u70b9\u8fde\u8fb9\uff0c\u5e76\u5c06 $l-r$ \u6309\u5750\u6807\u7ed9\u7f16\u53f7\u6392\u5e8f\uff1b\u6211\u4eec\u53ef\u4ee5\u505a\u5982\u4e0b\u5de5\u4f5c\uff1a\n1. \u9012\u5f52\u8c03\u7528 `CDQ(l,mid)` \u548c `CDQ(mid+1,r)`\uff1b\n2. \u5bf9\u4e8e\u6240\u6709 $x\\in [l,mid)$\uff0c\u5c06 `Id[x]` \u5411 `Id[x+1]` \u8fde\u8fb9\uff1b\n3. \u5bf9\u4e8e\u6240\u6709 $x\\in (l,mid]$\uff0c\u5c06 `Id[x]` \u5411 `Id[x-1]` \u8fde\u8fb9\uff1b\n4. \u5bf9\u4e8e\u6240\u6709 $x\\in (mid,r]$,\u5c06 `Id[x]` \u5411 \u5bf9\u5e94\u6b21\u70b9\u8fde\u8fb9\uff1b\n5. \u5c06\u4e24\u8fb9\u7528 merge \u51fd\u6570\u8fdb\u884c\u5f52\u5e76\u3002\n\n\u4e0d\u5f97\u4e0d\u8bf4\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u6bd4\u8f83\u590d\u6742\uff0c\u5927\u5bb6\u53ef\u4ee5\u901a\u8fc7\u4ee3\u7801\u8fdb\u884c\u7406\u89e3\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=50005,M=4e6+6,T=0x3f3f3f3f;\nchar buf[1<<23],*p1,*p2,c;\n#define gc (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<22,stdin),p1==p2))?EOF:*p1++\ninline int read() {\n\tint an=0,f=1;\n\twhile(!isdigit(c=gc))if(c=='-')f=-f;\n\tdo an=an*10+c-'0';\n\twhile(isdigit(c=gc));\n\treturn an*f;\n}\nint a[N],Head[N],ed[M],to[M],wt[M],ct[M],tot=1,dis[N],Maxd;\nint now[N],qr[N],hp,tp,n,s,t,Sqt,Mincost,MaxW,Id[N],resb[N];\nbool vis[N];\ninline bool Acmp(const int &x,const int &y) {\n\treturn a[x]<a[y];\n}\ninline void AddEdge(int u,int v,int W,int C) {\n\ted[++tot]=v;\n\tto[tot]=Head[u];\n\tHead[u]=tot;\n\twt[tot]=W;\n\tct[tot]=C;\n\ted[++tot]=u;\n\tto[tot]=Head[v];\n\tHead[v]=tot;\n\tct[tot]=-C;\n\tif(C>0)Sqt+=C;\n\treturn;\n}\ninline bool Spfa() {\n\tqr[hp=tp=1]=s;\n\tint i,x,y;\n\tfor(i=1; i<=t; ++i)dis[i]=T,now[i]=Head[i];\n\tnow[s]=Head[s];\n\twhile(hp!=tp+1) {\n\t\tx=qr[hp++];\n\t\tif(hp==N)hp=1;\n\t\tvis[x]=false;\n\t\tfor(i=Head[x]; i; i=to[i])\n\t\t\tif(wt[i]&&dis[y=ed[i]]>dis[x]+ct[i]) {\n\t\t\t\tdis[y]=dis[x]+ct[i];\n\t\t\t\tif(!vis[y]) {\n\t\t\t\t\tif(dis[y]-Sqt>dis[qr[hp]]) {\n\t\t\t\t\t\tif(--hp==0)hp=N-1;\n\t\t\t\t\t\tqr[hp]=y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif(++tp==N)tp=1;\n\t\t\t\t\t\tqr[tp]=y;\n\t\t\t\t\t}\n\t\t\t\t\tif(dis[qr[hp]]>dis[qr[tp]])qr[hp]^=qr[tp]^=qr[hp]^=qr[tp];\n\t\t\t\t\tvis[y]=true;\n\t\t\t\t}\n\t\t\t}\n\t}\n\treturn dis[t]!=T;\n}\nint mcmf(int x,int flow) {\n\tif(x==t) {\n\t\tMincost+=flow*dis[x];\n\t\treturn flow;\n\t}\n\tint k,y,rest=flow;\n\tvis[x]=true;\n\tfor(int &i=now[x]; i; i=to[i])\n\t\tif(wt[i]&&!vis[y=ed[i]]&&dis[y]==dis[x]+ct[i]) {\n\t\t\tif(!(k=mcmf(y,min(wt[i],rest))))dis[y]=T;\n\t\t\telse {\n\t\t\t\twt[i]-=k;\n\t\t\t\twt[i^1]+=k;\n\t\t\t\tif(!(rest-=k))break;\n\t\t\t}\n\t\t}\n\tvis[x]=false;\n\treturn flow-rest;\n}\nvoid CDQ(int l,int r,int dep) {\n\tif(l==r) {\n\t\tMaxd=max(Maxd,dep<<1);\n\t\treturn;\n\t}\n\tint mid=l+((r-l)>>1);\n\tCDQ(l,mid,dep+1);\n\tCDQ(mid+1,r,dep+1);\n\tint i,d1=dep<<1,d2=d1-1,x,y;\n\tfor(i=l; i<mid; ++i)\n\t\tAddEdge(Id[i]+n*d1,Id[i+1]+n*d1,T,a[Id[i+1]]-a[Id[i]]);\n\tfor(i=l+1; i<=mid; ++i)\n\t\tAddEdge(Id[i]+n*d2,Id[i-1]+n*d2,T,a[Id[i]]-a[Id[i-1]]);\n\tfor(x=l,y=mid+1; y<=r; ++y) {\n\t\twhile(x<=mid&&a[Id[x]]<a[Id[y]])++x;\n\t\tif(x==mid+1)break;\n\t\tAddEdge(Id[y],Id[x]+n*d1,1,a[Id[x]]-a[Id[y]]);\n\t}\n\tfor(x=mid,y=r; y>mid; --y) {\n\t\twhile(x>=l&&a[Id[x]]>=a[Id[y]])--x;\n\t\tif(x==l-1)break;\n\t\tAddEdge(Id[y],Id[x]+n*d2,1,a[Id[y]]-a[Id[x]]);\n\t}\n\tmerge(Id+l,Id+mid+1,Id+mid+1,Id+r+1,resb+l,Acmp);\n\tfor(i=l; i<=r; ++i)Id[i]=resb[i];\n\treturn;\n}\nint main() {\n\tn=read();\n\tMaxW=read();\n\tint i,j,nowdis;\n\tfor(i=1; i<=n; ++i)a[Id[i]=i]=read();\n\tCDQ(1,n,1);\n\tt=n*(Maxd+2),s=t+1;\n\tfor(i=1; i<=n; ++i) {\n\t\tAddEdge(s,i,1,0);\n\t\tAddEdge(i,t,1,MaxW);\n\t\tfor(j=1; j<Maxd-1; ++j)\n\t\t\tAddEdge(i+n*j,i+n*Maxd,T,0);\n\t\tAddEdge(i+n*Maxd,t,1,0);\n\t}Sqt=sqrt(Sqt);\n\twhile(Spfa())while(mcmf(s,T));\n\tprintf(\"%d\\n\",Mincost);\n\treturn 0;\n}\n```\n\u4ee5\u4e0a\u4ee3\u7801\u8dd1\u4e4b\u524d\u751f\u6210\u7684\u968f\u673a\u6570\u636e\u53ea\u8981 $3.85s$\uff0c\u901f\u5ea6\u771f\u5feb\uff01\n\n### Update on 2022-3-35:\n\n\u672c\u9898\u6570\u636e\u7ecf\u8fc7\u4e86\u52a0\u5f3a\uff0c\u6240\u4ee5\u4ee5\u4e0a\u7b2c\u4e00\u4efd\u4ee3\u7801\u4f1a\u8d85\u65f6\uff0c\u7b2c\u4e8c\u4efd\u4ee3\u7801\u56e0\u4e3a\u6ca1\u5f00`long long`\u4f1a\u7b54\u6848\u9519\u8bef\uff0c\u4e0b\u9762\u63d0\u4f9b\u4e00\u4efd\u6b63\u786e\u7684\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N=50005,M=4e6+6;\nconst ll T=0x1f1f1f1f1f1f1f1fll;\nchar buf[1<<23],*p1,*p2,c;\n#define gc (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<22,stdin),p1==p2))?EOF:*p1++\ninline int read() {\n\tint an=0,f=1;\n\twhile(!isdigit(c=gc))if(c=='-')f=-f;\n\tdo an=an*10+c-'0';\n\twhile(isdigit(c=gc));\n\treturn an*f;\n}\nint Maxd,a[N],Head[N],ed[M],to[M],tot=1;\nll wt[M],ct[M],dis[N],Sqt,MaxW,Mincost;\nint now[N],qr[N],hp,tp,n,s,t,Id[N],resb[N];\nbool vis[N];\ninline bool Acmp(const int &x,const int &y) {\n\treturn a[x]<a[y];\n}\ninline void AddEdge(int u,int v,ll W,ll C) {\n\ted[++tot]=v;\n\tto[tot]=Head[u];\n\tHead[u]=tot;\n\twt[tot]=W;\n\tct[tot]=C;\n\ted[++tot]=u;\n\tto[tot]=Head[v];\n\tHead[v]=tot;\n\tct[tot]=-C;\n\tif(C>0)Sqt+=C;\n\treturn;\n}\ninline bool Spfa() {\n\tqr[hp=tp=1]=s;\n\tint i,x,y;\n\tfor(i=1; i<=t; ++i)dis[i]=T,now[i]=Head[i];\n\tnow[s]=Head[s];\n\twhile(hp!=tp+1) {\n\t\tx=qr[hp++];\n\t\tif(hp==N)hp=1;\n\t\tvis[x]=false;\n\t\tfor(i=Head[x]; i; i=to[i])\n\t\t\tif(wt[i]&&dis[y=ed[i]]>dis[x]+ct[i]) {\n\t\t\t\tdis[y]=dis[x]+ct[i];\n\t\t\t\tif(!vis[y]) {\n\t\t\t\t\tif(dis[y]-Sqt>dis[qr[hp]]) {\n\t\t\t\t\t\tif(--hp==0)hp=N-1;\n\t\t\t\t\t\tqr[hp]=y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif(++tp==N)tp=1;\n\t\t\t\t\t\tqr[tp]=y;\n\t\t\t\t\t}\n\t\t\t\t\tif(dis[qr[hp]]>dis[qr[tp]])qr[hp]^=qr[tp]^=qr[hp]^=qr[tp];\n\t\t\t\t\tvis[y]=true;\n\t\t\t\t}\n\t\t\t}\n\t}\n\treturn dis[t]!=T;\n}\nll mcmf(int x,ll flow) {\n\tif(x==t) {\n\t\tMincost+=flow*dis[x];\n\t\treturn flow;\n\t}int y;\n\tll k,rest=flow;\n\tvis[x]=true;\n\tfor(int &i=now[x]; i; i=to[i])\n\t\tif(wt[i]&&!vis[y=ed[i]]&&dis[y]==dis[x]+ct[i]) {\n\t\t\tif(!(k=mcmf(y,min(wt[i],rest))))dis[y]=T;\n\t\t\telse {\n\t\t\t\twt[i]-=k;\n\t\t\t\twt[i^1]+=k;\n\t\t\t\tif(!(rest-=k))break;\n\t\t\t}\n\t\t}\n\tvis[x]=false;\n\treturn flow-rest;\n}\nvoid CDQ(int l,int r,int dep) {\n\tif(l==r) {\n\t\tMaxd=max(Maxd,dep<<1);\n\t\treturn;\n\t}\n\tint mid=l+((r-l)>>1);\n\tCDQ(l,mid,dep+1);\n\tCDQ(mid+1,r,dep+1);\n\tint i,d1=dep<<1,d2=d1-1,x,y;\n\tfor(i=l; i<mid; ++i)\n\t\tAddEdge(Id[i]+n*d1,Id[i+1]+n*d1,T,a[Id[i+1]]-a[Id[i]]);\n\tfor(i=l+1; i<=mid; ++i)\n\t\tAddEdge(Id[i]+n*d2,Id[i-1]+n*d2,T,a[Id[i]]-a[Id[i-1]]);\n\tfor(x=l,y=mid+1; y<=r; ++y) {\n\t\twhile(x<=mid&&a[Id[x]]<a[Id[y]])++x;\n\t\tif(x==mid+1)break;\n\t\tAddEdge(Id[y],Id[x]+n*d1,1,a[Id[x]]-a[Id[y]]);\n\t}\n\tfor(x=mid,y=r; y>mid; --y) {\n\t\twhile(x>=l&&a[Id[x]]>=a[Id[y]])--x;\n\t\tif(x==l-1)break;\n\t\tAddEdge(Id[y],Id[x]+n*d2,1,a[Id[y]]-a[Id[x]]);\n\t}\n\tmerge(Id+l,Id+mid+1,Id+mid+1,Id+r+1,resb+l,Acmp);\n\tfor(i=l; i<=r; ++i)Id[i]=resb[i];\n\treturn;\n}\nint main() {\n\tn=read();MaxW=read();\n\tint i,j,nowdis;\n\tfor(i=1; i<=n; ++i)a[Id[i]=i]=read();\n\tCDQ(1,n,1);\n\tt=n*(Maxd+2),s=t+1;\n\tfor(i=1; i<=n; ++i) {\n\t\tAddEdge(s,i,1,0);\n\t\tAddEdge(i,t,1,MaxW);\n\t\tfor(j=1; j<Maxd-1; ++j)\n\t\t\tAddEdge(i+n*j,i+n*Maxd,T,0);\n\t\tAddEdge(i+n*Maxd,t,1,0);\n\t}Sqt=sqrt(Sqt);\n\twhile(Spfa())while(mcmf(s,T));\n\tprintf(\"%lld\\n\",Mincost);\n\treturn 0;\n}\n```",
        "postTime": 1647324567,
        "uid": 502410,
        "name": "EnofTaiPeople",
        "ccfLevel": 0,
        "title": "\u591a\u8def\u589e\u5e7f\u8d39\u7528\u6d41\u548c CDQ \u5206\u6cbb\u4f18\u5316\u5efa\u56fe"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P5331)\n\ncdq\u5206\u6cbb\u4f18\u5316\u5efa\u56fe+\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u3002\n\n\u9996\u5148\u8003\u8651\u66b4\u529b\u600e\u4e48\u505a\u3002~~\u66b4\u529b\u662f\u4e0d\u662f\uff0c\u52a0\u8fb9\u52a0\u8fb9\u52a0\u97ad~~\n\n\u770b\u5230\u9898\u9762\u4e2d\u201c\u6bcf\u4e2a\u54e8\u7ad9\u53ea\u80fd\u88ab\u540e\u9762\u7684\u81f3\u591a\u4e00\u4e2a\u54e8\u7ad9\u8fde\u63a5\u3002\u201d\u60f3\u5230\u4f7f\u7528\u6d41\u91cf\u6765\u9650\u5236\uff0c\u90a3\u4e48\u672c\u9898\u4e2d\u7684\u6700\u5c0f\u4ee3\u4ef7\u5c31\u53ef\u4ee5\u7528\u6700\u5c0f\u8d39\u7528\u6765\u6c42\u3002\u663e\u7136\u662f\u4e00\u4e2a\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u7684\u6a21\u578b\u3002\n\n\u8003\u8651\u5efa\u56fe\u3002\u628a\u6bcf\u4e2a\u70b9\u62c6\u6210\u4e24\u4e2a\u70b9 $i$ \u548c $i+n$\u3002\n\n1. $S-i$\uff0c\u6d41\u91cf\u4e3a $1$\uff0c\u8d39\u7528\u4e3a $0$\u3002\n2. $i-T$\uff0c\u6d41\u91cf\u4e3a $1$\uff0c\u8d39\u7528\u4e3a $W$\u3002\u8868\u793a\u8fd9\u4e2a\u70b9\u76f4\u63a5\u8fde\u5411\u57fa\u7ad9\u7684\u8d39\u7528\u3002\n3. $i+n-T$\uff0c\u6d41\u91cf\u4e3a $1$\uff0c\u8d39\u7528\u4e3a $0$\u3002\n4. $i-j(j<i)$\uff0c\u6d41\u91cf\u4e3a $1$\uff0c\u8d39\u7528\u4e3a $|a_i-a_j|$\u3002\u8868\u793a\u8fd9\u4e2a\u70b9\u8fde\u5411\u524d\u9762\u7684\u5176\u4ed6\u70b9\u3002\n\n\u8fd9\u6837\u53ef\u4ee5\u76f4\u63a5\u8dd1\u4e86\uff0c\u4f46\u662f\u8fc7\u4e0d\u53bb\uff0c\u56e0\u4e3a\u7b2c4\u6761\u52a0\u8fb9\u7684\u8fb9\u6570\u662f $O(n^2)$ \u7ea7\u522b\u7684\u3002\u8003\u8651\u5982\u4f55\u4f18\u5316\u8fd9\u4e2a\u4e1c\u897f\u3002\n\n\u8fd9\u91cc\u7528\u5230\u4e00\u4e2a\u5f88\u795e\u5947\u7684cdq\u5206\u6cbb\u4f18\u5316\u5efa\u56fe\u3002\u8003\u8651\u76ee\u524d\u7684\u533a\u95f4 $[l,r]$\uff0c\u73b0\u5728\u8981\u628a\u8fd9\u4e2a\u533a\u95f4\u7684\u53f3\u534a\u8fb9\u5411\u5de6\u534a\u8fb9\u8fde\u8fb9\u3002\u5148\u628a\u6240\u6709\u70b9\u62ff\u51fa\u6765\u53bb\u91cd\u4e4b\u540e\u4ece\u5c0f\u5230\u5927\u5efa\u6210\u4e00\u6761\u53cc\u5411\u865a\u94fe\uff0c\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u82b1\u8d39\u5c31\u662f\u4e24\u4e2a\u70b9\u6743\u503c\u4e4b\u5dee\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u6837\u505a\u4e4b\u540e\uff0c\u4efb\u610f\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8fd9\u6761\u8fb9\u90fd\u53ef\u4ee5\u5728\u8fd9\u6761\u865a\u94fe\u4e0a\u8868\u793a\u3002\u5bf9\u4e8e\u5de6\u534a\u8fb9\u6bcf\u4e00\u4e2a\u70b9\uff0c\u627e\u5230\u8fd9\u4e2a\u70b9\u5728\u865a\u94fe\u4e0a\u5bf9\u5e94\u7684\u70b9\uff0c\u4ece\u8fd9\u4e2a\u865a\u70b9\u5411\u5de6\u534a\u8fb9\u7684\u70b9\u8fde\u8fb9\uff1b\u5bf9\u4e8e\u53f3\u534a\u8fb9\uff0c\u5219\u76f8\u53cd\uff0c\u4ece\u53f3\u534a\u8fb9\u4e0a\u7684\u70b9\u5411\u865a\u70b9\u8fde\u8fb9\u3002\u8fd9\u6837\u5c31\u901a\u8fc7\u5bf9\u91cd\u590d\u8fb9\u7684\u5229\u7528\uff0c\u628a\u8fb9\u6570\u964d\u5230\u4e86 $O(n\\log n)$ \u7ea7\u522b\uff0c\u53ef\u4ee5\u76f4\u63a5\u8dd1\u8d39\u7528\u6d41\u901a\u8fc7\u6b64\u9898\u3002\n\n\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#include<algorithm>\nusing namespace std;\nconst int N=1e5+13,INF=0x3f3f3f3f;//\u6570\u7ec4\u522b\u5f00\u5c0f\uff01 \nstruct Edge{int u,v,f,w,nxt;}e[N<<4];\nint n,W,h[N],a[N],tot=1,num,b[N],dist[N],s,t;\nbool vis[N];\nlong long ans;//\u6ce8\u610f\u7b54\u6848\u9700\u8981\u5f00long long \ninline void add(int u,int v,int f,int w){\n\te[++tot]=(Edge){u,v,f,w,h[u]};h[u]=tot;\n\te[++tot]=(Edge){v,u,0,-w,h[v]};h[v]=tot;\n}\nvoid link(int l,int r){//cdq\u5206\u6cbb\u4f18\u5316\u5efa\u56fe \n\tif(l==r) return;\n\tint mid=(l+r)>>1,cnt=0;\n\tlink(l,mid),link(mid+1,r);\n\tfor(int i=l;i<=r;++i) b[++cnt]=a[i];\n\tsort(b+1,b+cnt+1);cnt=unique(b+1,b+cnt+1)-b-1;\n\tfor(int i=1;i<cnt;++i) add(num+i,num+i+1,INF,b[i+1]-b[i]),add(num+i+1,num+i,INF,b[i+1]-b[i]);\n\tfor(int i=l;i<=mid;++i){\n\t\tint j=lower_bound(b+1,b+cnt+1,a[i])-b;\n\t\tadd(num+j,i+n,1,0);\n\t}\n\tfor(int i=mid+1;i<=r;++i){\n\t\tint j=lower_bound(b+1,b+cnt+1,a[i])-b;\n\t\tadd(i,num+j,1,0);\n\t}\n\tnum+=cnt;//\u8fd9\u4e2a\u5730\u65b9\u4e0d\u8981\u5fd8\u8bb0\uff0c\u56fe\u4e2d\u7684\u70b9\u90fd\u53ea\u80fd\u7528\u4e00\u6b21 \n}\nqueue<int> q;\ninline bool spfa(){\n\tmemset(dist,0x3f,sizeof dist);\n\tmemset(vis,0,sizeof vis);\n\twhile(!q.empty()) q.pop();\n\tq.push(s);dist[s]=0,vis[s]=1;\n\twhile(!q.empty()){\n\t\tint u=q.front();q.pop();vis[u]=0;\n\t\tfor(int i=h[u];i;i=e[i].nxt){\n\t\t\tint v=e[i].v,w=e[i].w,f=e[i].f;\n\t\t\tif(f&&dist[v]>dist[u]+w){\n\t\t\t\tdist[v]=dist[u]+w;\n\t\t\t\tif(!vis[v]) vis[v]=1,q.push(v);\n\t\t\t}\n\t\t}\n\t}\n\treturn dist[t]!=INF;\n}\nint dfs(int u,int rest){\n\tif(u==t) return rest;\n\tvis[u]=1;\n\tint tmp=rest;\n\tfor(int i=h[u];i;i=e[i].nxt){\n\t\tint v=e[i].v,w=e[i].w,f=e[i].f,ttmp;\n\t\tif(f&&!vis[v]&&(dist[v]==dist[u]+w)&&(ttmp=dfs(v,min(rest,f)))){\n\t\t\trest-=ttmp;ans+=1ll*w*ttmp;\n\t\t\te[i].f-=ttmp,e[i^1].f+=ttmp;\n\t\t\tif(!rest) break; \n\t\t}\n\t}\n\tif(tmp==rest) dist[u]=INF;\n\tvis[u]=0;\n\treturn tmp-rest;\n}\ninline void zkw(){//zkw\u8d39\u7528\u6d41 \n\tint maxflow=0;\n\twhile(spfa()){\n\t\tmemset(vis,0,sizeof vis);\n\t\tmaxflow+=dfs(s,INF);\n\t}\n\tprintf(\"%lld\\n\",ans);\n}\nint main(){\n\tscanf(\"%d%d\",&n,&W);s=n*2+1,t=s+1,num=t;\n\tfor(int i=1;i<=n;++i) scanf(\"%d\",&a[i]);\n\tfor(int i=1;i<=n;++i) add(s,i,1,0),add(i,t,1,W),add(i+n,t,1,0);\n\tlink(1,n);\n\tzkw();\n\treturn 0;\n}\n```\n",
        "postTime": 1617786490,
        "uid": 160484,
        "name": "cunzai_zsy0531",
        "ccfLevel": 7,
        "title": "P5331\u9898\u89e3"
    },
    {
        "content": "## \u778e\u626f\n\n\u6211\u4eec\u7f51\u7edc\u6d41\u6a21\u62df\u8d5b\uff08\u5176\u5b9e\u662f\u6570\u636e\u7ed3\u6784\u6a21\u62df\u8d5b\uff09\u7684 T2\u3002\n\n\u8003\u573a\u4e0a\u5199\u4e3b\u5e2d\u6811\u5199\u81ea\u95ed\u4e86\uff0c\u76f4\u63a5\u4ea4\u4e86 $80pts$ \u7684\u66b4\u529b\uff0c\u8003\u5b8c\u51fa\u6765\u7a81\u7136\u53d1\u73b0\uff1a\n\n* woc \u8fd9\u4e2a\u9898\u4e00\u4e2a cdq \u51e0\u884c\u5c31\u641e\u5b9a\u4e86\uff01\n\n## \u9898\u610f\u7b80\u8ff0\n\n\u6709 $n$ \u4e2a\u54e8\u7ad9\uff0c\u7b2c $i$ \u4e2a\u54e8\u7ad9\u7684\u9891\u6bb5\u4e3a $a_i$ \u3002\u6bcf\u4e2a\u54e8\u7ad9\u53ef\u4ee5\u82b1\u8d39 $W$ \u8fde\u63a5\u4e2d\u5fc3\uff0c\u4e5f\u53ef\u4ee5\u82b1\u8d39 $|a_j-a_i|$ \u8fde\u63a5\u5230\u7b2c $j$ \u4e2a\u54e8\u7ad9\uff08$j<i$\uff09\u3002\n\n\u6bcf\u4e2a\u54e8\u7ad9\u6700\u591a\u53ea\u80fd\u88ab\u8fde\u63a5\u4e00\u6b21\uff0c\u6c42\u6240\u6709\u54e8\u7ad9\u8fde\u63a5\u7684\u6700\u5c0f\u82b1\u8d39\u3002\n\n## \u505a\u6cd5\n\n### Luogu\u80fd\u8fc7\u7684\u66b4\u529b\n\n\u7531\u6700\u591a\u53ea\u80fd\u88ab\u8fde\u63a5\u4e00\u6b21\u60f3\u5230\u6d41\u91cf\u9650\u5236\uff08\u663e\u7136\uff09\uff0c\u53d1\u73b0\u9898\u76ee\u8981\u6c42\u6700\u5c0f\u82b1\u8d39\uff0c\u6240\u4ee5\u5efa\u56fe\u8dd1\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u3002\n\n\u8003\u8651\u66b4\u529b\u5efa\u8fb9\uff0c\u5c06\u6bcf\u4e2a\u70b9\u62c6\u6210 $2$ \u4e2a\u70b9\uff0c\u4e00\u4e2a\u8868\u793a\u76f4\u63a5\u8fde\u63a5\u4e2d\u5fc3\uff0c\u53e6\u4e00\u4e2a\u9650\u5236\u6d41\u91cf\u3002\n\n* \u6240\u4ee5\u6709$S \\xrightarrow{1/0} i \\xrightarrow{1/W} T$\uff0c$i \\xrightarrow{\\infty/|a_i-a_j|} j'$\uff0c$i' \\xrightarrow{1/0} T$\u3002\n\n\u8003\u573a\u4e0a\u6211\u5199\u5b8c\u5efa\u56fe\u548c zkw \u8d39\u7528\u6d41\u5c31\u8dd1\u4e86\uff0c\u7136\u540e\u7a81\u7136\u53d1\u73b0\u8fb9\u662f $n^2$ \u7684\uff0c\u8dd1\u6781\u9650\u6570\u636e\u8981\u8dd1 $100s+$\uff0c\u4f46\u662f\u6211\u540e\u9762\u4ea4 luogu \u7adf\u7136\u8fc7\u4e86\uff1f\uff1f\uff1f\n\n### \u66b4\u529b\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define re register int\n#define db double\n#define in inline\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define re register int\n#define db double\n#define in inline\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define re register int\n#define db double\n#define in inline\nnamespace fast_io\n{\n    char buf[1<<12],*p1=buf,*p2=buf,sr[1<<23],z[23],nc;int C=-1,Z=0,Bi=0;\n    in char gc() {return p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<12,stdin),p1==p2)?EOF:*p1++;}\n    in ll read()\n    {\n        ll x=0,y=1;while(nc=gc(),(nc<48||nc>57)&&nc!=-1)if(nc==45)y=-1;Bi=1;\n        x=nc-48;while(nc=gc(),47<nc&&nc<58)x=(x<<3)+(x<<1)+(nc^48),Bi++;return x*y;\n    }\n    in db gf() {re a=read(),b=(nc!='.')?0:read();return (b?a+(db)b/pow(10,Bi):a);}\n    in int gs(char *s) {char c,*t=s;while(c=gc(),c<32);*s++=c;while(c=gc(),c>32)*s++=c;return s-t;}\n    in void ot() {fwrite(sr,1,C+1,stdout);C=-1;}\n    in void flush() {if(C>1<<22) ot();}\n    template <typename T>\n    in void write(T x,char t)\n    {\n        re y=0;if(x<0)y=1,x=-x;while(z[++Z]=x%10+48,x/=10);\n        if(y)z[++Z]='-';while(sr[++C]=z[Z],--Z);sr[++C]=t;flush();\n    }\n    in void write(char *s) {re l=strlen(s);for(re i=0;i<l;i++)sr[++C]=*s++;sr[++C]='\\n';flush();}\n};\nusing namespace fast_io;\nconst int N=2e5+5;\n#define ls(x) ch[x][0]\n#define rs(x) ch[x][1]\nint n,m,ch[N][2];\nchar s[]\nint main()\n{\n\tn=read(),m=read();\n}\nconst int N=2e3+5;\nconst ll inf=1e18;\nint cnt=1,sum,tot,n,s,t,m,k;\nint h[N],l,r,q[N],vis[N],a[N];\nll ans,maxflow,dis[N];\nstruct did{int u,next,to,f,w;}e[N*N];\nin void add(re a,re b,re c,re d)\n{\n\te[++cnt]=(did){a,h[a],b,c,d},h[a]=cnt;\n\te[++cnt]=(did){b,h[b],a,0,-d},h[b]=cnt;\n}\nint spfa()\n{\n\tmemset(vis,0,sizeof(vis));\n\tfor(re i=s;i<=t;i++) dis[i]=i==s?0:inf;\n\tqueue<int>q;q.push(s);vis[s]=1;\n\twhile(!q.empty())\n\t{\n\t\tre i=q.front();vis[i]=0;q.pop();\n\t\tfor(re j=h[i],k;k=e[j].to,j;j=e[j].next)\n\t\tif(e[j].f&&dis[k]>dis[i]+e[j].w)\n\t\t{\n\t\t\tdis[k]=dis[i]+e[j].w;\n\t\t\tif(!vis[k]) q.push(k),vis[k]=1;\n\t\t}\n\t}\t\n\treturn dis[t]<inf;\n}\nin int dfs(re u,re f)\n{\n\tif(u==t) return f; vis[u]=1;\n\tre res=0;\n\tfor(re i=h[u],v;v=e[i].to,i&&res<f;i=e[i].next)\n\tif(e[i].f&&!vis[v]&&dis[v]==dis[u]+e[i].w)\n\t{\n\t\tre t=dfs(v,min(f-res,e[i].f));\n\t\tres+=t;ans+=(ll)e[i].w*t;\n\t\te[i].f-=t;e[i^1].f+=t;\n\t}\n\tif(!res) dis[u]=inf;\n\treturn vis[u]=0,res;\n}\nin void zkw() {while(spfa()) memset(vis,0,sizeof(vis)),maxflow+=dfs(s,1e9);}\nint main()\n{\n\tn=read();m=read();s=0,t=n*2+1;\n\tfor(re i=1;i<=n;i++) a[i]=read(),add(s,i,1,0),add(i,t,1,m),add(n+i,t,1,0);\n\tfor(re i=1;i<n;i++) for(re j=i+1;j<=n;j++) \n\tif(abs(a[i]-a[j])<m) add(j,n+i,1,abs(a[i]-a[j]));\n\tzkw();write(ans,'\\n');\n\treturn ot(),0;\n}\n```\n\n### \u6b63\u89e3\uff08\u66b4\u529b\u4f18\u5316\uff09\n\n\u53d1\u73b0\u672c\u9898\u74f6\u9888\u5728\u4e8e\u4e00\u4e2a\u70b9\u5411\u4e00\u4e2a\u533a\u95f4\u8fde\u8fb9\uff0c\u800c\u4e14**\u6709\u8d39\u7528**\u3002\n\n\u8003\u573a\u4e0a\u6ca1\u60f3\u5230\u53ef\u4ee5\u8f6c\u5316\u8d1f\u6570\uff0c\u4e00\u76f4\u4e0d\u77e5\u9053\u5982\u4f55\u89e3\u51b3\u7edd\u5bf9\u503c\u3002\u8fd9\u91cc\u91c7\u7528\u5e38\u6570\u548c\u82b1\u8d39\u66f4\u4e3a\u4f18\u79c0\u7684 cdq \u5206\u6cbb\uff0c\u5206\u6cbb\u540e\u5c06\u533a\u95f4\u5185\u6240\u6709\u7684\u865a\u70b9\u95f4\u8fde\u63a5\u8d39\u7528\u4e3a $\\Delta a$ \u7684\u8fb9\uff0c\u4e8c\u5206\u4fdd\u8bc1\u8fde\u8fb9\u7684 $a_j$ \u90fd\u5927\u4e8e $a_i$ \u5373\u53ef\u3002\n\n## Code\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define re register int\n#define db double\n#define in inline\nnamespace fast_io\n{\n\tchar buf[1<<12],*p1=buf,*p2=buf,sr[1<<23],z[23];int C=-1,Z=0;\n\tin char gc() {return p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<12,stdin),p1==p2)?EOF:*p1++;}\n\tin ll read()\n\t{\n\t\tll x=0,y=1;char c;while(c=gc(),(c<48||c>57)&&c!=-1) if(c==45) y=-1;\n\t\tx=c-48;while(c=gc(),47<c&&c<58) x=(x<<3)+(x<<1)+(c^48);return x*y;\n\t}\n\tin db gf() {int a=read(),b=read(),c=ceil(log10(b));return (b?a+(db)b/pow(10,c):a);}\n\tin int gs(char *s) {char c,*t=s;while(c=gc(),c<32);*s++=c;while(c=gc(),c>32)*s++=c;return s-t;}\n\ttemplate <typename T>\n\tin void write(T x,char t)\n\t{\n\t\tre y=0;if(x<0) y=1,x=-x;while(z[++Z]=x%10+48,x/=10);\n\t\tif(y) z[++Z]='-';while(sr[++C]=z[Z],--Z);sr[++C]=t;\n\t}\n\tin void write(char *s) {re l=strlen(s);for(re i=0;i<l;i++,*s++)sr[++C]=*s;sr[++C]='\\n';}\n\tin void ot() {fwrite(sr,1,C+1,stdout);C=-1;}\n};\nusing namespace fast_io;\nconst int N=1e5+5;\nconst ll inf=1e18;\nint cnt=1,sum,tot,n,s,t,m,k;\nint h[N],l,r,q[N],vis[N],a[N];\nll ans,maxflow,dis[N];\nstruct did{int u,next,to,f,w;}e[N*21];\nin void add(re a,re b,re c,re d)\n{\n\te[++cnt]=(did){a,h[a],b,c,d},h[a]=cnt;\n\te[++cnt]=(did){b,h[b],a,0,-d},h[b]=cnt;\n}\nint spfa()\n{\n\tmemset(vis,0,sizeof(vis));fill(dis+1,dis+sum+1,inf); \n\tdis[s]=0;queue<int>q;q.push(s);vis[s]=1;\n\twhile(!q.empty())\n\t{\n\t\tre i=q.front();vis[i]=0;q.pop();\n\t\tfor(re j=h[i],k;k=e[j].to,j;j=e[j].next)\n\t\tif(e[j].f&&dis[k]>dis[i]+e[j].w)\n\t\t{\n\t\t\tdis[k]=dis[i]+e[j].w;\n\t\t\tif(!vis[k]) q.push(k),vis[k]=1;\n\t\t}\n\t}\t\n\treturn dis[t]<inf;\n}\nin int dfs(re u,re f)\n{\n\tif(u==t) return f; vis[u]=1;\n\tre res=0;\n\tfor(re i=h[u],v;v=e[i].to,i&&res<f;i=e[i].next)\n\tif(e[i].f&&!vis[v]&&dis[v]==dis[u]+e[i].w)\n\t{\n\t\tre t=dfs(v,min(f-res,e[i].f));\n\t\tres+=t;ans+=(ll)e[i].w*t;\n\t\te[i].f-=t;e[i^1].f+=t;\n\t}\n\tif(!res) dis[u]=inf;\n\treturn vis[u]=0,res;\n}\nin void zkw() {while(spfa()) memset(vis,0,sizeof(vis)),maxflow+=dfs(s,1e9);}\nvoid link(re l,re r)\n{\n\tstatic int t[N];\n\tif(l==r) return; re mid=(l+r)>>1,tot=0;\n\tlink(l,mid);link(mid+1,r); \n\tfor(re i=l;i<=r;i++) t[++tot]=a[i];\n\tsort(t+1,t+tot+1);tot=unique(t+1,t+tot+1)-t-1;\n\tfor(re i=1;i<tot;i++) add(sum+i,sum+i+1,1e9,t[i+1]-t[i]),add(sum+i+1,sum+i,1e9,t[i+1]-t[i]);\n\tfor(re i=l;i<=r;i++)\n\t{\n\t\tre j=lower_bound(t+1,t+tot+1,a[i])-t;\n\t\t(i<=mid)?add(sum+j,n+i,1,0):add(i,sum+j,1,0); \n\t}\n\tsum+=tot;\n}\nint main()\n{\n\tn=read();m=read();s=0,t=sum=n*2+1;\n\tfor(re i=1;i<=n;i++) a[i]=read(),add(s,i,1,0),add(i,t,1,m),add(n+i,t,1,0);\n\tlink(1,n);zkw();write(ans,'\\n');\n\treturn ot(),0;\n}\n```",
        "postTime": 1564989163,
        "uid": 72679,
        "name": "disangan233",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5331 \u3010[SNOI2019]\u901a\u4fe1\u3011"
    },
    {
        "content": "\u8d39\u7528\u6d41\u3002\n\n\u9996\u5148\u8fd9\u4e2a\u9898\u9762\u4ee5\u53ca\u6570\u636e\u8303\u56f4\u5df2\u7ecf\u53ef\u4ee5\u770b\u51fa\u4e00\u70b9\u7f51\u7edc\u6d41\u7684\u5f71\u5b50\u4e86\uff0c\u914d\u5408\u8d39\u7528\u8fdb\u884c\u8003\u8651\u5c31\u662f\u8d39\u7528\u6d41\uff0c\u90a3\u4e48\u8003\u8651\u6bcf\u4e2a\u70b9\u90fd\u53ef\u4ee5 **\u5411\u522b\u4eba\u8fde**\uff0c\u6216\u8005 **\u88ab\u522b\u4eba\u8fde**\uff0c\u8003\u8651\u62c6\u70b9\uff0c\u5c06 $i$ \u62c6\u51fa $i'$\uff0c\u5206\u522b\u4ee3\u8868 **\u8fde\u5411** \u548c **\u88ab\u8fde\u5411**\u3002\u663e\u7136\uff0c\u8fd9\u6837\u4f1a\u559c\u63d0 $\\texttt{TLE}$\uff0c\u56e0\u4e3a\u8fb9\u6570\u5b9e\u5728\u592a\u591a\u4e86\uff0c\u5df2\u7ecf\u5230\u8fbe\u4e86 $n^2$\uff0c\u800c\u7f51\u7edc\u6d41\u7b97\u6cd5\u4e2d\u5f80\u5f80\u662f\u8981\u4e58\u4e0a $m$ \u7684\u3002\u90a3\u4e48\u6709\u4ec0\u4e48\u65b9\u6cd5\u53ef\u4ee5\u51cf\u5c11\u8fb9\u6570\u5462\uff1f\n\n\u5199\u9898\u89e3\u7684\u6b64\u65f6\u6b64\u523b\uff0c\u6211\u60f3\u5230\u4e86\u795e\u9c7c\u67ab\u59d0\u59d0\u66fe\u7ecf\u548c\u6211\u8bf4\u8fc7\u7684\u8bdd\uff1a\n\n![](https://i.loli.net/2020/04/27/na6VOj8YmLoNdbx.png)\n\n\u6ca1\u9519\uff0c\u6570\u636e\u7ed3\u6784\u4f18\u5316\u5efa\u8fb9\u3002\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u7c7b\u4f3c\u5206\u6cbb\u7684\u7b97\u6cd5\u5f88\u5feb\u5730\u5efa\u51fa\u4e00\u4e2a\u5f88\u7b80\u6d01\u7684\u56fe\u3002\u522b\u7684 $\\texttt{julao}$ \u8bf4\u662f\u4e3b\u5e2d\u6811\uff0c\u4f46\u7a9d\u770b\u4e0d\u5927\u51fa\u6765\uff0c\u89c9\u5f97\u66f4\u50cf\u4e00\u4e2a $\\texttt{cdq}$ \u5206\u6cbb\uff0c\u56e0\u4e3a\u6211\u5370\u8c61\u4e2d\u7684\u4e3b\u5e2d\u6811\u90fd\u662f\uff1a\n\n![](https://i.loli.net/2019/05/12/5cd82c17cfc11.png)\n\n\uff08\u7801\u98ce\u4e0d\u5fcd\u76f4\u89c6\uff09\n\n\u4e0d\u8fc7\u8fd9\u4e0d\u662f\u91cd\u70b9\uff0c\u91cd\u70b9\u662f\u7ecf\u8fc7\u4e00\u4e2a\u5efa\u865a\u70b9\u4e4b\u540e\u8fde\u70b9\u7684\u8fc7\u7a0b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u8dd1\u8d39\u7528\u6d41\u800c\u4e0d $\\texttt{TLE}$ \u4e86\u3002\n\n\u4f9d\u7136\u63a8\u8350\u4f7f\u7528 $\\texttt{zkw}$ \u8d39\u7528\u6d41\u3002\n\n\uff08\u5199\u6cd5\u7565\u66b4\u529b\uff0c\u5982 $\\texttt{define int long long}$\uff0c\u89c1\u8c05\uff09\n\n```cpp\n#include<bits/stdc++.h>\n#define MAXN 50005\n#define MAXM 1000005\n#define inf (long long)4340410370284600380\n#define reg register\n#define inl inline\n#define int long long\nusing namespace std;\ndeque <int> q;\nint cnt=1,fst[MAXN<<1],nxt[MAXM],to[MAXM],w[MAXM],cot[MAXM],cur[MAXN<<1];\nint n,W,a[MAXN],t[MAXN],S,T,dis[MAXN<<1],mincost,tot,sum;\nbool inq[MAXN<<1],vis[MAXN<<1];\nvoid AddEdge(reg int u,reg int v,reg int c,reg int fl)\n{\n\tto[++cnt]=v;\n\tnxt[cnt]=fst[u];\n\tfst[u]=cnt;\n\tw[cnt]=c;\n\tcot[cnt]=fl;\n}\ninl bool Spfa()\n{\n\tmemset(dis,60,sizeof(dis));\n\tmemset(inq,0,sizeof(inq));\n\tq.push_front(T);\n\tdis[T]=0;\n\tinq[T]=1;\n\twhile(!q.empty())\n\t{\n\t\treg int u=q.front();\n\t\tq.pop_front();\n\t\tinq[u]=0;\n\t\tfor(reg int i=fst[u];i;i=nxt[i])\n\t\t{\n\t\t\treg int v=to[i];\n\t\t\tif(dis[v]>dis[u]-cot[i] && w[i^1])\n\t\t\t{\n\t\t\t\tdis[v]=dis[u]-cot[i];\n\t\t\t\tif(!inq[v])\n\t\t\t\t{\n\t\t\t\t\tif(!q.empty() && dis[v]<dis[q.front()]) q.push_front(v);\n\t\t\t\t\telse q.push_back(v);\n\t\t\t\t\tinq[v]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn dis[S]!=inf;\n}\nint Dfs(reg int u,reg int flow)\n{\n\tvis[u]=1;\n\tif(u==T || !flow) return flow;\n\treg int used=0;\n\tfor(reg int i=cur[u];i;i=nxt[i])\n\t{\n\t\tcur[u]=i;\n\t\treg int v=to[i];\n\t\tif(dis[v]==dis[u]-cot[i] && w[i] && !vis[v])\n\t\t{\n\t\t\treg int fl=Dfs(v,min(flow,w[i]));\n\t\t\tif(fl)\n\t\t\t{\n\t\t\t\tused+=fl;\n\t\t\t\tflow-=fl;\n\t\t\t\tw[i]-=fl;\n\t\t\t\tw[i^1]+=fl;\n\t\t\t\tif(!flow) break;\n\t\t\t}\n\t\t}\n\t}\n\treturn used;\n}\ninl void zkwMCMF()\n{\n\twhile(Spfa())\n\t{\n\t\tvis[T]=1;\n\t\twhile(vis[T])\n\t\t{\n\t\t\tmemcpy(cur,fst,sizeof(fst));\n\t\t\tmemset(vis,0,sizeof(vis));\n\t\t\treg int fl=Dfs(S,inf);\n\t\t\tmincost+=dis[S]*fl;\n\t\t}\n\t}\n}\nvoid Link(reg int l,reg int r)\n{\n\tif(l==r) return;\n\treg int mid=l+r>>1,tot=0;\n\tLink(l,mid);\n\tLink(mid+1,r);\n\tfor(reg int i=l;i<=r;i++) t[++tot]=a[i];\n\tsort(t+1,t+tot+1);\n\ttot=unique(t+1,t+tot+1)-t-1;\n\tfor(reg int i=1;i<tot;i++)\n\t{\n\t\tAddEdge(i+sum,i+sum+1,inf,t[i+1]-t[i]);\n\t\tAddEdge(i+sum+1,i+sum,0,t[i]-t[i+1]);\n\t\tAddEdge(i+sum+1,i+sum,inf,t[i+1]-t[i]);\n\t\tAddEdge(i+sum,i+sum+1,0,t[i]-t[i+1]);\n\t}\n\tfor(reg int i=l;i<=r;i++)\n\t{\n\t\treg int pos=lower_bound(t+1,t+tot+1,a[i])-t;\n\t\tif(i<=mid)\n\t\t{\n\t\t\tAddEdge(pos+sum,i+n,1,0);\n\t\t\tAddEdge(i+n,pos+sum,0,0);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tAddEdge(i,pos+sum,1,0);\n\t\t\tAddEdge(pos+sum,i,0,0);\n\t\t}\n\t}\n\tsum+=tot;\n}\nsigned main()\n{\n\tscanf(\"%lld %lld\",&n,&W);\n\tS=n*2+1;\n\tT=n*2+2;\n\tsum=n*2+2;\n\tfor(reg int i=1;i<=n;i++) scanf(\"%lld\",&a[i]);\n\tfor(reg int i=1;i<=n;i++)\n\t{\n\t\tAddEdge(S,i,1,0);\n\t\tAddEdge(i,S,0,0);\n\t\tAddEdge(i,T,1,W);\n\t\tAddEdge(T,i,0,-W);\n\t\tAddEdge(i+n,T,1,0);\n\t\tAddEdge(T,i+n,0,0);\n\t}\n\tLink(1,n);\n\tzkwMCMF();\n\tprintf(\"%lld\\n\",mincost);\n\treturn 0;\n}\n```",
        "postTime": 1557671021,
        "uid": 23243,
        "name": "VenusM1nT",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5331 \u3010[SNOI2019]\u901a\u4fe1\u3011"
    },
    {
        "content": "\u5927\u4f6c\u4eec\u7684\u505a\u6cd5\u6211\u770b\u4e0d\u61c2\u3002\n\n\u53ef\u4ee5\u770b\u51fa\u8fd9\u9053\u9898\u662f\u4e00\u9053\u7f51\u7edc\u6d41\u9898\uff0c\u76f4\u63a5\u5efa\u6a21\uff1a\n\n\u5c06\u6bcf\u4e2a\u54e8\u7ad9\u62c6\u6210\u4e24\u4e2a\u70b9\uff0c\u4e00\u4e2a\u70b9\u8868\u793a\u8fde\u5411\u63a7\u5236\u4e2d\u5fc3\uff08A \u70b9\uff09\uff0c\u4e00\u4e2a\u70b9\u8868\u793a\u8fde\u5411\u524d\u9762\u7684\u70b9\uff08B \u70b9\uff09\u3002\n\n\u7136\u540e\u8fde\u8fb9\uff08\u76f4\u63a5\u7528\u4ee3\u7801\u8868\u793a\uff09\uff1a\n\n```c\naddEdge(S, A[i], 1, 0);\nfor (int j = 1; j < i; j++)\n\tif (abs(a[j] - a[i]) < W)\n\t\taddEdge(A[i], B[j], 1, abs(a[i] - a[j]));\naddEdge(A[i], T, 1, W);\naddEdge(B[i], T, 1, 0);\n```\n\n\u53d1\u73b0\u8fd9\u79cd\u975e\u5e38\u6241\u3001\u975e\u5e38\u7a20\u5bc6\u7684\u56fe\u662f\u7f51\u7edc\u5355\u7eaf\u5f62\u6cd5\u7684\u4e13\u957f\uff0c\u76f4\u63a5\u8dd1\u7f51\u7edc\u5355\u7eaf\u5f62\u6cd5\u5373\u53ef\u3002\n\n**\u53ef\u4ee5\u8ba4\u4e3a** \u590d\u6742\u5ea6\u662f\u8dd1\u4e0d\u6ee1\u7684 $\\Theta(n^3)$ \u3002\n\n```c\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define RN 250000\n\ntypedef int I;\ntypedef char C;\ntypedef long long L;\n\n#define SWAP(T, a, b) { T t = a; a = b; b = t; }\n\n// Pools\n\ntypedef struct\n{\n    I nxt;\n    I to;\n    I cap;\n    L cost;\n}\nNetwork;\n\nNetwork net_pool[RN * 20];\nI ncnt = 1;\n\n#define nnode(x) net_pool[x]\n#define nnxt(x)  nnode(x).nxt\n#define nto(x)   nnode(x).to\n#define ncap(x)  nnode(x).cap\n#define ncost(x) nnode(x).cost\n\n// Network Simplex\n\nI head[RN], fa[RN], fe[RN], mark[RN], buf[RN];\nL pi[RN];\nI ti, nc;\n\nstatic inline void addEdge(I u, I v, I f, L c)\n{\n    nnode(++ncnt) = (Network) { head[u], v, f, c };\n    head[u] = ncnt;\n    nnode(++ncnt) = (Network) { head[v], u, 0, -c };\n    head[v] = ncnt;\n}\n\nvoid initTree(I x)\n{\n    nc++, mark[x] = 1;\n    for (I i = head[x]; i; i = nnxt(i))\n    {\n        I v = nto(i);\n        if (!mark[v])\n        {\n            pi[v] = pi[x] + ncost(i);\n            fa[v] = x, fe[v] = i;\n            initTree(v);\n        }\n    }\n}\n\nstatic inline L phi(I x)\n{\n    I top = 0;\n    while (mark[x] != ti) mark[buf[top++] = x] = ti, x = fa[x];\n    while (top--) x = buf[top], pi[x] = pi[fa[x]] + ncost(fe[x]);\n    return pi[x];\n}\n\nvoid pushFlow(I e)\n{\n    I u = nto(e ^ 1), v = nto(e), l = nc, r = nc;\n    ti++, buf[nc] = e;\n    while (u)             buf[++r] = fe[u],     mark[u] = ti, u = fa[u];\n    while (mark[v] != ti) buf[--l] = fe[v] ^ 1, mark[v] = ti, v = fa[v];\n\n    I e2 = l, f = ncap(buf[l]);\n    for (I i = l; buf[i] != fe[v]; i++)\n    {\n        if (ncap(buf[i]) < f) e2 = i, f = ncap(buf[i]);\n    }\n    for (I i = l; buf[i] != fe[v]; i++)\n    {\n        ncap(buf[i]) -= f, ncap(buf[i] ^ 1) += f;\n    }\n    if (e2 == nc) return;\n\n    I x = e ^ (e2 < nc), y = nto(x), z = nto(x ^ 1);\n    while (x != (buf[e2] ^ (e2 < nc)))\n    {\n        x ^= 1;\n        pi[z] = pi[y] + ncost(x);\n        SWAP(I, x, fe[z]);\n        SWAP(I, y, fa[z]);\n        SWAP(I, y, z);\n    }\n}\n\nvoid simplex(I root)\n{\n    nc = fa[root] = 0, ti = 1;\n    initTree(root);\n    for (I i = 2, pre = ncnt; i != pre; i = i == ncnt ? 2 : i + 1)\n    {\n        if (ncap(i) && ncost(i) < phi(nto(i)) - phi(nto(i ^ 1)))\n            pushFlow(pre = i);\n    }\n}\n\n// Main\n\nI ai[RN];\n\nint main(void)\n{\n    I n, w;\n    scanf(\"%d%d\", &n, &w);\n    for (I i = 1; i <= n; i++)\n        scanf(\"%d\", &ai[i]);\n    \n    for (I i = 1; i <= n; i++)\n    {\n        addEdge(2 * n + 1, i, 1, 0);\n        addEdge(i, 2 * n + 2, 1, w);\n        addEdge(n + i, 2 * n + 2, 1, 0);\n        for (I j = 1; j < i; j++)\n        {\n            if (abs(ai[j] - ai[i]) < w)\n                addEdge(i, n + j, 1, abs(ai[j] - ai[i]));\n        }\n    }\n    addEdge(2 * n + 2, 2 * n + 1, n, -0x3f3f3f3fll);\n    simplex(2 * n + 2);\n    L ans = 0;\n    for (I i = 3; i <= ncnt - 2; i += 2)\n    {\n        ans -= ncost(i) * ncap(i);\n    }\n    printf(\"%lld\\n\", ans);\n    return 0;\n}\n```\n",
        "postTime": 1650201044,
        "uid": 52381,
        "name": "CodingJellyfish",
        "ccfLevel": 6,
        "title": "P5331\u964d\u7ef4\u6253\u51fb\u7248\u9898\u89e3"
    },
    {
        "content": "\u8fd9\u7b97\u7b2c\u4e00\u6b21\u81ea\u5df1\u60f3\u51fa\u7f51\u7edc\u6d41\uff1f\uff1f\uff1f\n\n\u81ea\u5df1\u60f3\u51fa\u6765\u9ed1\u9898\u5c31\u662f\u723d\uff01~~\u867d\u7136\u8c03\u8bd5\u4e862\u4e2a\u5c0f\u65f6~~\n\n\u662f\u65f6\u5019\u53bb\u5b66\u5b66\u65b0\u59ff\u52bf\u4e86\u3002\u3002\u3002\n\n\u597d\u50cf\u6211\u6700\u6162\u8dd1\u4e86$4985ms...$\u8fd8\u52a0\u4e86 luogu O2,$\u4e00\u5927\u5806\u5934\u6587\u4ef6\n\n\u4e0d\u7ba1\u4e86\u6211\u4eec\u5f00\u59cb\u601d\u8003\uff01\uff08\u4ee5\u4e0b\u662f\u6211\u7684\u6240\u6709\u5fc3\u8def\u5386\u7a0b\uff09\n\n### \u7b97\u6cd51\n\n\u6211\u4f1a dp!\n\n\u671f\u671b\u5f97\u5206$:0$\n\n### \u7b97\u6cd52\n\n\u6211\u4f1a\u641c\u7d22!\n\n\u671f\u671b\u5f97\u5206$:10$\n\n### \u7b97\u6cd53\n\n\u8fd9\u4e2a\u9898\u4e3a\u4ec0\u4e48\u4e0d\u53ef\u4ee5 dp \u5462\uff1f\uff1f\uff1f\n\n\u56e0\u4e3a\u6211\u4eec\u6ca1\u6709\u529e\u6cd5\u8bb0\u5f55\u4e00\u4e2a\u70b9\u662f\u5426\u5df2\u7ecf\u88ab\u8fde\u63a5\u7684\u72b6\u6001\u3002\n\n\u6240\u4ee5...\n\n\u6211\u4f1a\u72b6\u538b dp!\n\n\u671f\u671b\u5f97\u5206$:20$\n\n### \u7b97\u6cd54\n\n\u4e00\u4e2a\u70b9\u53ea\u80fd\u8fde\u63a5$1$\u4e2a\u5b50\u8282\u70b9\uff0c\u8fd9\u4e2a\u9650\u5236\u6709\u70b9\u50cf\u6d41\u91cf\u3002\u3002\u3002\n\n\u6570\u636e\u8303\u56f4\uff1awoc\u600e\u4e48\u8fd9\u4e48\u5c0f\u5462?\u90a3\u6211\u8dd1\u7f51\u7edc\u6d41\u597d\u4e0d\u597d\u554a\uff1f\n\n\u4e0d\u8fc7\u597d\u50cf\u6c42\u7684\u662f\u6700\u5c0f\u82b1\u8d39\uff0c\u90a3\u6211\u8dd1\u8d39\u7528\u6d41\u597d\u4e0d\u597d\u554a\uff1f\n\n\u4e00\u4e2a\u70b9\u53ea\u80fd\u8fde\u63a5$1$\u4e2a\u5b50\u8282\u70b9\uff0c\u6211\u4eec\u5c31\u62c6\u70b9\uff0c\u6d41\u91cf\u8bbe\u4e3a$1$\u5c31\u597d\u4e86\u3002\n\n\u8bbe\u539f\u70b9\u4e3a$s$\uff0c\u6c47\u70b9\u4e3a$t$,\u4e00\u4e2a\u70b9$i$\u62c6\u6210$i,i+n$\n\n\u8003\u8651\u4e00\u79cd\u8fde\u8fb9\u65b9\u5f0f\uff1a\n\n$s\\ ->\\ 1..n$\uff0c\u6d41\u91cf\u4e3a$1$\uff0c\u8d39\u7528\u4e3a$0$\u3002\n\n$1..n\\ ->\\ t$\uff0c\u6d41\u91cf\u4e3a$1$\uff0c\u8d39\u7528\u4e3a$W$\u3002\n\n$i\\ ->\\ j+n\\ \\ (i>j)$ \u6d41\u91cf\u4e3a$1$\uff0c\u8d39\u7528\u4e3a$|a_i-a_j|$\u3002\n\n$n+1..2n\\ ->\\ t$\uff0c\u6d41\u91cf\u4e3a$1$\uff0c\u8d39\u7528\u4e3a$0$\u3002\n\n\u8dd1\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41...\n\n\u671f\u671b\u5f97\u5206$:60$\n\n\u5b9e\u9645\u5f97\u5206$:80$\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nint tot,pre[100001],maxflow,vis[100001],last[100001],flow[100001],head[100001];\nint n,m,W,s,t;\nll dep[100001],a[100001],mincost;\nstruct node{\n    int to,next,dis;\n    ll cot;\n}g[100005];\ninline void bud(int from,int to,int dis,ll cot){\n    g[++tot].to=to;g[tot].dis=dis;g[tot].cot=cot;\n    g[tot].next=head[from];head[from]=tot;\n}\ninline void made(int from,int to,int dis,ll cot){\n    bud(from,to,dis,cot);bud(to,from,0,-cot);\n}\n#define gc getchar\ninline ll read(){\n    ll x=0,f=1;char ch=gc();\n    while (!isdigit(ch)) {if (ch=='-') f=-1;ch=gc();}\n    while (isdigit(ch)) x=x*10+ch-'0',ch=gc();\n    return x*f;\n}\ninline bool spfa(int s,int t){\n    for (register int i=s;i<=t;i++){\n        flow[i]=dep[i]=999999999;vis[i]=0;\n    }\n    queue<int> dl;\n    while (!dl.empty()) dl.pop();\n    dl.push(s);vis[s]=1;pre[t]=-1;dep[s]=0;\n    while (!dl.empty()){\n        register int u=dl.front();dl.pop();vis[u]=0;\n        for (register int i=head[u];i!=-1;i=g[i].next){\n            register int v=g[i].to;\n            if (g[i].dis>0&&dep[v]>dep[u]+g[i].cot){\n                dep[v]=dep[u]+g[i].cot;\n                pre[v]=u;last[v]=i;\n                flow[v]=min(flow[u],g[i].dis);\n                if (!vis[v]){\n                \tdl.push(v);\n                \tvis[v]=1;\n                }\n            }\n        }\n    }\n    return pre[t]!=-1;\n}\ninline void MCMF(){\n    while (spfa(s,t)){\n        maxflow+=flow[t];\n        mincost+=1LL*flow[t]*dep[t];\n        register int x=t;\n        while (x!=s){\n            g[last[x]].dis-=flow[t];\n            g[last[x]^1].dis+=flow[t];\n            x=pre[x];\n        }\n    }\n}\nint main(){\n    n=read();W=read();tot=-1;memset(head,-1,sizeof(head));\n    s=0,t=2*n+1;\n    for (int i=1;i<=n;i++) made(s,i,1,0);\n    for (int i=1;i<=n;i++) made(i,t,1,W);\n    for (int i=n+1;i<=2*n;i++) made(i,t,1,0);\n    for (int i=1;i<=n;i++){\n        a[i]=read();\n        for (int j=1;j<i;j++){\n            made(i,j+n,1,abs(a[i]-a[j]));\n        }\n    }\n    MCMF();\n    printf(\"%lld\",mincost);\n}\n```\n\n### \u7b97\u6cd55\n\n\u5982\u679c\u6211\u5728\u8003\u573a\u7684\u8bdd\u6211\u5c31\u4e0d\u4f1a\u53bb\u60f3\u4e86\uff0c\u56e0\u4e3a\u60f3\u5230\u4e86\u6b63\u89e3\u4e5f\u6beb\u65e0\u610f\u4e49\uff08\u5c31\u591a\u4e8c\u4e09\u5341\u5206\uff09\n\n\u7136\u540e\u6211\u5c31\u8003\u8651\u4e3a\u4ec0\u4e48\u53ea\u6709\u4e00\u70b9\u70b9\u5206\uff1a\n\n\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(nmf)$\uff0c\u5176\u4e2d$f$\u662f\u6700\u5927\u6d41\uff0c\u53ef\u4ee5\u5f53\u4f5c$n$\u7b97\u3002\n\n\u4f46\u662f\u6211\u4eec\u8981\u66b4\u529b\u679a\u4e3e\u4e24\u4e2a\u70b9\u8fde\u8fb9\uff0c$m$\u8fbe\u5230\u4e86\u60ca\u4eba\u7684$n^2$!\n\n\u7136\u540e\u600e\u4e48\u529e\u5462\uff1f\n\n\u8003\u8651\u4f18\u5316\u5efa\u56fe\u3002\u7ebf\u6bb5\u6811\uff1f\u500d\u589e\uff1f\n\n\u6211\u5148\u5f80\u533a\u95f4\u7ebf\u6bb5\u6811\u4e0a\u601d\u8003\u3002\u53ef\u4ee5\u7ed9\u6bcf\u4e00\u4e2a\u7ebf\u6bb5\u6811\u7684\u53f6\u5b50\u8282\u70b9\u5411\u51fa\u70b9\u8fde\u8fb9\uff0c\u6d41\u91cf\u4e3a$\\infty,$\u82b1\u8d39\u4e3a$a_{\\text{LeftBound}}$\uff08\u5c31\u662f\u8fd9\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u7f16\u53f7\uff09\u3002\u7b2c$i$\u4e2a\u70b9\u66b4\u529b\u5411$1..i-1$\u8fde\u8fb9\u7684\u8bdd\u5c31\u4ece\u5165\u70b9\u5411\u7ebf\u6bb5\u6811\u8282\u70b9\u8fde\u6d41\u91cf\u4e3a$\\infty,$\u82b1\u8d39\u4e3a$-a_i$\u7684\u8fb9\uff0c\u4e0d\u5c31\u62b5\u6d88\u4e86\u5417\uff1f\n\n\u4f46\u662f\u6076\u5fc3\u7684\u6765\u4e86\uff1a\u6709\u7edd\u5bf9\u503c\u3002\n\n\u90a3\u4e48\u533a\u95f4\u7ebf\u6bb5\u6811\u76f4\u63a5\u53bb\u4e16\u4e86\u3002\u7136\u540e\u5c31\u53bb\u60f3\u6743\u503c\u7ebf\u6bb5\u6811\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u4e00\u68f5\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u53f6\u5b50\u8282\u70b9\u4e5f\u4e00\u6837\uff0c\u5411\u51fa\u70b9\u6743\u503c\u4e3a\u53f6\u5b50\u8282\u70b9\u4e0b\u6807\u7684\u6240\u6709\u51fa\u70b9\u8fde\u6d41\u91cf\u4e3a$\\infty,$\u82b1\u8d39\u4e3a\u53f6\u5b50\u8282\u70b9\u4e0b\u6807\u7684\u8fb9\uff08\u79bb\u6563\u5316\uff09\u3002\n\n\u7b2c$i$\u4e2a\u70b9\u66b4\u529b\u5411$1..i-1$\u8fde\u8fb9\u7684\u8bdd$,$\u53ef\u4ee5\u548c\u533a\u95f4\u7ebf\u6bb5\u6811\u4e00\u6837\uff0c\u76f4\u63a5\u5411\u6240\u6709\u7684\u70b9\u8fde\u63a5\u6d41\u91cf\u4e3a$\\infty,$\u82b1\u8d39\u4e3a$-a_i$\u7684\u8fb9\uff1f\uff1f\uff1f\n\n\u8fd8\u662f\u4e0d\u5bf9\u554a\uff0c\u5982\u679c\u8fd9\u4e48\u64cd\u4f5c\u7684\u8bdd\u53ea\u6709\u6743\u503c\u4e3a$a_i...\\max$\uff08\u6700\u5927\u503c\uff09\u7684\u70b9\u624d\u8fde\u5230\u4e86\u6b63\u786e\u7684\u8fb9\uff01\u6743\u503c\u4e3a$\\min..a_i-1$\u7684\u70b9\u5168\u90e8\u6210\u4e3a\u4e86\u8d1f\u8fb9\u3002\n\n\u600e\u4e48\u529e\u5462\uff1f\u6211\u5c31\u60f3\u5230\u53ef\u4ee5\u5f00\u4e24\u68f5\u7ebf\u6bb5\u6811\uff01\u4e00\u68f5\u53f6\u5b50\u8282\u70b9\u8fde\u63a5\u82b1\u8d39\u4e3a\u6b63\u7684\u8fb9\uff0c\u4e00\u68f5\u8fde\u63a5\u8d1f\u7684\u5c31\u597d\u4e86\uff01\n\n\u53ef\u4ee5\u611f\u6027\u7406\u89e3\u4e00\u4e0b\uff0c\u90a3\u4e48\u8fd9\u9053\u9898\u5c31\u505a\u5b8c\u4e86\uff01\uff01\uff01\n\n[\u4ee3\u7801](https://www.luogu.org/paste/p7kl9u6b)\n\n## $\\texttt{ALL LAST}$\n\n\u5177\u4f53\u5b9e\u73b0\u6211\u62c6\u70b9\u7684\u65f6\u5019\u4e3a\u4e86\u56fe\u65b9\u4fbf\u628a$1..n$\u8bbe\u4e3a\u51fa\u70b9\uff0c$n+1..2n$\u8bbe\u4e3a\u5165\u70b9\u4e86\u3002\n\n\u8fd9\u5c31\u662f SDOI2009 \u6668\u8dd1\u554a\uff0c\u6211\u505a\u7684\u65f6\u5019\u5c45\u7136\u6ca1\u6709\u770b\u51fa\u6765\u3002\u3002\u3002",
        "postTime": 1557661921,
        "uid": 20309,
        "name": "Fading",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5331 \u3010[SNOI2019]\u901a\u4fe1\u3011"
    },
    {
        "content": "\u8fd8\u597d\u6211\u6ca1\u751f\u5728\u9655\u897f\u554a\n\n\u9996\u5148\u53d1\u73b0\u8fd9\u4e2a\u9898\u4e0d\u80fd$dp$\uff0c\u6570\u636e\u8303\u56f4\u4e0d\u5927\uff0c\u597d\u50cf\u4e00\u79cd\u7f51\u7edc\u6d41\u7684\u6837\u5b50\u554a\n\n\u54ce\u7b49\u7b49\uff0c\u8fd9\u6837\u5411\u540e\u9762\u8fde\u8fb9\u4e0d\u662f\u4e00\u4e2a$DAG$\u5417\uff0c\u8fd9\u4e0d\u662f\u6700\u5c0f\u6743\u8def\u5f84\u8986\u76d6\u7684\u677f\u5b50\u5417\n\n\u4e8e\u662f\u6211\u4eec\u5957\u8def\u7684\u62c6\u70b9\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u70b9$i$\u6211\u4eec\u62c6\u6210$i$\u548c$i'$\uff0c\u6e90\u70b9\u5411\u70b9$i$\u8fde\u8d39\u7528\u4e3a$0$\u5bb9\u91cf\u4e3a$1$\u7684\u8fb9\uff0c$i'$\u5411\u6c47\u70b9\u8fde\u8d39\u7528\u4e3a$0$\u5bb9\u91cf\u4e3a$1$\u7684\u8fb9\n\n\u4e4b\u540e\u6211\u4eec\u628a\u8ba9$S$\u5411$i'$\u76f4\u63a5\u8fde\u8d39\u7528\u4e3a$W$\u5bb9\u91cf\u4e3a$1$\u7684\u8fb9\uff0c\u8868\u793a\u76f4\u63a5\u8fde\u5230\u63a7\u5236\u4e2d\u5fc3\n\n\u5bf9\u4e8e\u70b9$i$\uff0c\u6211\u4eec\u5411$j'(j>i)$\u8fde\u5bb9\u91cf\u4e3a$1$\u8d39\u7528\u4e3a$|a_i-a_j|$\u7684\u8fb9\uff0c\u8868\u793a\u70b9$j$\u63a5\u5230\u4e86\u70b9$i$\u540e\u9762\n\n\u4e8e\u662f\u73b0\u5728\u6211\u4eec\u4e00\u4e2a\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u5c31\u597d\u4e86\n\n\u4e4b\u540e\u559c\u63d0$TLE$\n\n\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u597d\u50cf\u5efa\u51fa\u4e86$n^2$\u7ea7\u522b\u7684\u8fb9\n\n\u6211\u4eec\u8003\u8651\u6211\u4eec\u8fde\u8fb9\u7684\u65b9\u5f0f\uff0c\u8fd9\u6837\u5411\u540e\u9762\u4e00\u4e2a\u533a\u95f4\u8fde\u8fb9\u7684\u65b9\u5f0f\u8ba9\u4eba\u597d\u719f\u6089\u554a\uff0c\u8fd9\u4e0d\u662f\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u56fe\u5417\n\n\u4f46\u662f\u6211\u4eec\u6ce8\u610f\u5230\u8fd9\u91cc\u7684\u8fb9\u7684\u8d39\u7528\u597d\u50cf\u4e0d\u662f\u4e00\u6837\u7684\uff0c\u4f46\u662f\u8fd9\u4e2a\u7edd\u5bf9\u503c\u7ed9\u4e86\u6211\u4eec\u5206\u7c7b\u8ba8\u8bba\u7684\u53ef\u80fd\n\n\u5bf9\u4e8e\u4e00\u4e2a\u70b9$i$\uff0c\u6211\u4eec\u5efa\u51fa\u4e00\u4e2a\u865a\u70b9$x'$\uff0c$i$\u5411$x'$\u8fde\u8d39\u7528\u4e3a$a_i$\u7684\u8fb9\uff0c\u8ba9\u8fd9\u4e2a\u865a\u70b9$x'$\u5411$j(j>i,a_j<a_i)$\u8fde\u8d39\u7528\u4e3a$-a_j$\u7684\u8fb9\uff0c$a_j>a_i$\u540c\u7406\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u5b9e\u73b0\u7edd\u5bf9\u503c\u8fd9\u4e2a\u95ee\u9898\u4e86\n\n\u90a3\u4e48\u6211\u4eec\u5982\u4f55\u5feb\u901f\u5411\u4e00\u4e2a\u70b9\u4e4b\u540e\u7684\u6240\u6709\u5927\u4e8e\u5b83\u6216\u5c0f\u4e8e\u5b83\u7684\u70b9\u8fde\u8fb9\u5462\n\n\u76f4\u63a5\u4e3b\u5e2d\u6811\u4f18\u5316\u5efa\u56fe\u5c31\u597d\u4e86\uff0c\u8fd9\u6837\u6211\u4eec\u7684\u70b9\u6570\u548c\u8fb9\u6570\u90fd\u662f$nlogn$\u7ea7\u522b\u7684\u4e86\n\n\u4f46\u662f\u8fd8\u662f$T$\uff0c\u53d1\u73b0\u6211\u4eec\u5efa\u4e86\u4e24\u4e07\u591a\u4e2a\u70b9\u548c\u5341\u4e07\u591a\u6761\u8fb9\n\n\u5199\u4e00\u4e2a\u5feb\u4e00\u70b9\u7684\u8d39\u7528\u6d41\u5c31\u597d\u4e86\uff0c\u7528zkw\u8d39\u7528\u6d41\u548c$slf$\u4f18\u5316\u7684spfa\u52c9\u52c9\u5f3a\u5f3a\u80fd\u8dd1\u8fc7\u7684\u6837\u5b50\n\n\u53e6\u5916$loj$\u4e0a\u7684\u5927\u7237\u4eec\u5199\u7684\u770b\u8d77\u6765\u597d\u50cf$cdq$\u5206\u6cbb\u4f18\u5316\u5efa\u56fe\u7684\u6d1e\u897f\u770b\u8d77\u6765\u597d\u795e\u4ed9\u554a\n\n\u4ee3\u7801\n\n```cpp\n#include<queue>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define re register\n#define LL long long\n#pragma GCC optimize(3)\n#define max(a,b) ((a)>(b)?(a):(b))\n#define min(a,b) ((a)<(b)?(a):(b))\ninline int read() {\n\tchar c=getchar();int x=0;while(c<'0'||x>'9') c=getchar();\n\twhile(c>='0'&&c<='9') x=(x<<3)+(x<<1)+c-48,c=getchar();return x;\n}\nconst LL inf=999999999999;\nconst int fnf=999999999;\nconst int maxn=2e3+5;\nconst int M=4e5+6;\nint head[M],vis[M],a[maxn],c[maxn],b[maxn];LL d[M];\nint rt[maxn][2],l[M],r[M];\nstruct E{int v,nxt,w,f;}e[200005];\nint n,num=1,S,T,W,sz,cnt;\ninline void C(int x,int y,int w,int f) {\n\te[++num].v=y;e[num].nxt=head[x];\n\te[num].w=w;e[num].f=f;head[x]=num;\n}\nstd::deque<int> q;\ninline void add(int x,int y,int w,int f) {C(x,y,w,f),C(y,x,-1*w,0);}\ninline int SPFA() {\n\tfor(re int i=S;i<=cnt;i++) d[i]=inf,vis[i]=0;\n\td[T]=0,q.push_back(T);\n\twhile(!q.empty()) {\n\t\tint k=q.front();q.pop_front();vis[k]=0;\n\t\tfor(re int i=head[k];i;i=e[i].nxt)\n\t\tif(e[i^1].f&&d[e[i].v]>d[k]+e[i^1].w) {\n\t\t\td[e[i].v]=d[k]+e[i^1].w;\n\t\t\tif(!vis[e[i].v]) {\n\t\t\t\tvis[e[i].v]=1;\n\t\t\t\tif(q.empty()) {q.push_back(e[i].v);continue;}\n\t\t\t\tif(d[e[i].v]<d[q.front()]) q.push_front(e[i].v);\n\t\t\t\t\telse q.push_back(e[i].v);\n\t\t\t}\n\t\t}\n\t}\n\treturn d[S]<inf;\n}\nint dfs(int x,int now) {\n\tif(x==T||!now) return now;\n\tint flow=0,ff;vis[x]=1;\n\tfor(re int i=head[x];i;i=e[i].nxt)\n\tif(e[i].f&&!vis[e[i].v]&&d[e[i].v]==d[x]+e[i^1].w) {\n\t\tff=dfs(e[i].v,min(e[i].f,now));\n\t\tif(ff<=0) continue;\n\t\tflow+=ff,now-=ff,e[i].f-=ff,e[i^1].f+=ff;\n\t\tif(!now) break;\n\t}\n\treturn flow;\n}\ninline int find(int x) {\n\tint lx=1,ry=sz;\n\twhile(lx<=ry) {\n\t\tint mid=lx+ry>>1;\n\t\tif(c[mid]==x) return mid;\n\t\tif(c[mid]<x) lx=mid+1;\n\t\t\telse ry=mid-1;\n\t}\n\treturn 0;\n}\nint ins(int pre,int x,int y,int pos,int a,int b) {\n\tint root=++cnt;\n\tif(x==y) {\n\t\tadd(root,a,b*c[x],1);\n\t\treturn root;\n\t}\n\tint mid=x+y>>1;\n\tl[root]=l[pre],r[root]=r[pre];\n\tif(pos<=mid) l[root]=ins(l[pre],x,mid,pos,a,b);\n\t\telse r[root]=ins(r[pre],mid+1,y,pos,a,b);\n\tif(l[root]) add(root,l[root],0,fnf);\n\tif(r[root]) add(root,r[root],0,fnf);\n\treturn root;\n}\nvoid Con(int g,int now,int x,int y,int lx,int ry) {\n\tif(!now) return;\n\tif(lx<=x&&ry>=y) {add(g,now,0,fnf);return;} \n\tint mid=x+y>>1;\n\tif(lx<=mid) Con(g,l[now],x,mid,lx,ry);\n\tif(ry>mid) Con(g,r[now],mid+1,y,lx,ry);\n}\nint main() {\n\tn=read(),W=read();S=0,T=n+n+1;cnt=T;\n\tfor(re int i=1;i<=n;i++) a[i]=read();\n\tfor(re int i=1;i<=n;i++) add(S,i+n,W,1);\n\tfor(re int i=1;i<=n;i++) add(S,i,0,1);\n\tfor(re int i=1;i<=n;i++) add(i+n,T,0,1);\n\tfor(re int i=1;i<=n;i++) c[i]=a[i];\n\tstd::sort(c+1,c+n+1);sz=std::unique(c+1,c+n+1)-c-1;\n\tfor(re int i=1;i<=n;i++) b[i]=a[i],a[i]=find(a[i]);\n\tfor(re int i=n;i>1;--i) \n\t\trt[i][0]=ins(rt[i+1][0],1,sz,a[i],i+n,-1),\n\t\trt[i][1]=ins(rt[i+1][1],1,sz,a[i],i+n,1);\n\tfor(re int i=1;i<n;i++) {\n\t\t++cnt;\n\t\tadd(i,cnt,b[i],1);\n\t\tCon(cnt,rt[i+1][0],1,sz,1,a[i]);\n\t\t++cnt;\n\t\tadd(i,cnt,-1*b[i],1);\n\t\tCon(cnt,rt[i+1][1],1,sz,a[i],sz);\n\t} \n\tLL ans=0;\n\twhile(SPFA()) {\n\t\tvis[T]=1;\n\t\twhile(vis[T]) {\n\t\t\tfor(re int i=S;i<=cnt;i++) vis[i]=0;\n\t\t\tans+=1ll*dfs(S,fnf)*d[S];\n\t\t}\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1556543451,
        "uid": 35178,
        "name": "asuldb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5331 \u3010[SNOI2019]\u901a\u4fe1\u3011"
    },
    {
        "content": "\u53c8\u662f\u4e00\u9053\u81ea\u5df1 A \u7684\u9ed1\u9898\u9898\u89e3\u3002\n\n\u9996\u5148\u770b\u6570\u636e\u8303\u56f4\u4e0d\u5927\uff0c\u6700\u4f18\u6027\u95ee\u9898\u3002\u4e0d\u80fd dp\uff0c\u53ea\u80fd\u8003\u8651\u6d41\u4e86\u3002\n\n$S\\to x_i(1,0)$\n\n$x_i\\to T(1,W)$\n\n$x_i\\to x'_j(1,|a_i-a_j|),i>j$\n\n$x'_j\\to T(1,0)$\n\n\u5728\u8fd9\u5f20\u56fe\u4e0a\u8dd1\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u5373\u4e3a\u7b54\u6848\u3002\u4f46\u662f\u8fd9\u662f\u4e00\u9053\u9ed1\u9898\uff0c\u4e0d\u53ef\u80fd\u8fd9\u4e48\u7b80\u5355\u3002\n\n\u4ed4\u7ec6\u601d\u8003\u540e\u6211\u4eec\u53d1\u73b0\u8fd9\u5f20\u56fe\u7684\u8fb9\u6570\u662f $\\mathcal{O}(n^2)$  \u7684\uff0c\u4e8e\u662f\u8003\u8651 DS \u4f18\u5316\u5efa\u56fe\u3002\n\n\u6b64\u9898\u9650\u5236\u5373\u4e3a $i>j$ \u6709\u5927\u5c0f\u5173\u7cfb\u53ef\u4ee5\u8003\u8651\u7528 cdq \u5206\u6cbb\u53bb\u6389\u8fd9\u4e00\u7ef4\u3002\n\n\u4e8e\u662f\u5728\u52a0\u4e00\u4e2a $\\log$ \u7684\u60c5\u51b5\u4e0b\u5c06\u95ee\u9898\u8f6c\u5316\u4e3a\u4e86\u4e00\u4e2a\u533a\u95f4\u5411\u53e6\u4e00\u4e2a\u533a\u95f4\u8fde\u8fb9\u3002\n\n\u56e0\u4e3a\u8fb9\u6743\u4e3a $|a_i-a_j|$ \u8003\u8651\u5c06 $x'$ \u4e32\u6210\u4e00\u6761\u94fe\uff0c\u7136\u540e\u8ba9 $x$ \u8fde\u4e0a\u53bb\u3002\n\n\u590d\u6742\u5ea6\u6700\u574f\u4e3a $\\mathcal{O}(nmf)=\\mathcal{O}(n^3\\log n)$ \u4f46\u662f\u53ef\u4ee5\u8fc7\u3002\u3002\u3002\n\ncode\uff1a\n\n```cpp\nconst int maxn = 8e5+5;\nconst ll inf = 2000000000;bool vis[maxn];\nll n,w,tot,cnt,s,t,p1[maxn],p2[maxn],a[maxn],b[maxn],dis[maxn];\nstruct edge{ll to,nxt,v,c;}e[2*maxn];ll first[maxn],csp=1;\nIV add(ll u,ll v,ll V,ll c){\n\te[++csp]=edge{v,first[u],V,c};first[u]=csp;\n\te[++csp]=edge{u,first[v],0,-c};first[v]=csp;\n}\nI cmin(ll&x,ll val){return x>val?x=val,1:0;}\nI SPFA(){\n\tF(i,1,tot)vis[i]=0,dis[i]=inf;\n\tqueue<ll>qwq;qwq.push(s);dis[s]=0;vis[s]=1;\n\twhile(!qwq.empty()){\n\t\tll u=qwq.front(),v;qwq.pop();vis[u]=0;\n\t\tE(i,u)if(e[i].v>0&&cmin(dis[v=e[i].to],dis[u]+e[i].c))\n\t\t\tif(!vis[v])qwq.push(v),vis[v]=1;\n    }\n    return dis[t]!=inf;\n}\nI dfs(ll u,ll flew){\n\tif(u==t)return flew;vis[u]=1;ll res=flew,flow,v;\n\tE(i,u)if(dis[u]+e[i].c==dis[v=e[i].to]&&e[i].v>0&&!vis[v])\n\t\tif(flow=dfs(v,min(res,e[i].v))){res-=flow,e[i].v-=flow,e[i^1].v+=flow;if(!res)break;}\n\treturn flew-res;\n}\nI dinic(){\n\tll flow=0,sum=0;\n\twhile(SPFA())while(flow=dfs(s,inf))sum+=flow*dis[t];\n    return sum;\n}\nIV cdq(ll l,ll r){\n\tif(l==r)return;ll mid=l+r>>1;cdq(l,mid);cdq(mid+1,r),cnt=0;\n\tF(i,l,r)b[++cnt]=a[i];sort(b+1,b+cnt+1),cnt=unique(b+1,b+cnt+1)-b-1;\n    F(i,1,cnt-1)add(tot+i,tot+i+1,inf,b[i+1]-b[i]),add(tot+i+1,tot+i,inf,b[i+1]-b[i]);\n    F(i,l,r){\n\t\tll pos=lower_bound(b+1,b+1+cnt,a[i])-b;\n\t\ti>mid?add(p1[i],tot+pos,1,0):add(tot+pos,p2[i],1,0);\n\t}\n\ttot+=cnt;\n}\nint main(){\n\tn=read();w=read();s=++tot,t=++tot;\n\tF(i,1,n)a[i]=read();F(i,1,n)p1[i]=++tot,p2[i]=++tot,add(s,p1[i],1,0),add(p1[i],t,1,w),add(p2[i],t,1,0);\n\treturn cdq(1,n),cout<<dinic(),0;\n}\n```\n",
        "postTime": 1650429871,
        "uid": 359952,
        "name": "_lbw_",
        "ccfLevel": 6,
        "title": "P5331 [SNOI2019]\u901a\u4fe1 \u9898\u89e3"
    },
    {
        "content": "# \u9898\u76ee\u53d9\u8ff0\n\n[Link](https://www.luogu.com.cn/problem/P5331)\n\n$n$\u4e2a\u4eba\uff0c\u7ad9\u6210\u4e00\u6392\uff0c\u6bcf\u4e2a\u4eba\u8981\u8fde\u63a5\u5230\u4e00\u4e2a\u70b9\uff0c\u76f4\u63a5\u8fde\u63a5\u82b1\u8d39\u4e3a$W$\uff0c\u6216\u8005\u4e0e\u4e00\u4e2a\u5728\u8fd9\u4e2a\u70b9\u524d\u9762\u7684\u4eba\u8fde\u63a5\uff0c\u82b1\u8d39\u4e3a$|a_i-a_j|$\u3002\u95ee\u6700\u5c0f\u82b1\u8d39\u3002\n\n# \u9898\u89e3\n\n\u628a\u4e00\u4e2a\u70b9\u62c6\u6210\u4e00\u4e2a\u7528\u4e8e\u5411\u6e90\u70b9\u8fde\u63a5\u7684\u70b9\u548c\u4e00\u4e2a\u7528\u4e8e\u522b\u7684\u70b9\u5411\u8fd9\u4e2a\u70b9\u8fde\u63a5\u7684\u70b9\uff08\u4ee5\u4e0b\u79f0\u4e3a\u5165\u70b9\u548c\u51fa\u70b9\uff09\u3002\u6e90\u70b9`s`\u5411\u5165\u70b9\u8fde\u8fb9\uff0c\u6d41\u91cf\u4e3a`1`\uff0c\u8d39\u7528\u4e3a`0`\u3002\u5bf9\u4e8e`i<j`\uff0c`j`\u7684\u5165\u70b9\u5411`i`\u7684\u51fa\u70b9\u8fde\u8fb9\uff0c\u6d41\u91cf\u4e3a`1`\uff0c\u8d39\u7528\u4e3a`a[i]-a[j]`\u3002\u6bcf\u4e00\u4e2a\u5165\u70b9\u518d\u5411\u6c47\u70b9`t`\u8fde\u8fb9\uff0c\u8fde\u6d41\u91cf\u4e3a`1`\uff0c\u8d39\u7528\u4e3a`w`\u3002\u8dd1\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u3002\n\n\u7136\u800c\u8fd9\u6837\u5e76\u4e0d\u80fd\u8fc7`1000`\u7684\u6570\u636e\uff0c\u8003\u8651\u51cf\u5c11\u8fb9\u7684\u6570\u91cf\u3002\u8003\u8651\u5206\u6cbb`f(l,r)`\u5904\u7406`[l,r]`\uff0c\u628a`[m+1,r]`\u4e2d\u7684\u70b9\u5411`[l,m]`\u4e2d\u7684\u70b9\u8fde\u8fb9\u3002\u8003\u8651\u5efa\u7acb`r-l+1`\u4e2a\u865a\u70b9\uff0c\u6bcf\u4e2a\u865a\u70b9\u7684\u6743\u503c\u4e3a`[l,r]`\u4e2d\u7684\u4e00\u4e2a\u70b9\u7684\u6743\u503c\u3002\u628a\u8fd9`2n`\u4e2a\u865a\u70b9\u8fde\u6210\u4e00\u6392\uff08\u6309\u7167\u8d39\u7528\u6392\u5e8f\uff0c\u53cc\u5411\u8fb9\uff09\uff0c\u76f8\u4e92\u4e4b\u95f4\u7684\u8fb9\u8d39\u7528\u4e3a\u70b9\u6743\u7684\u5dee\uff0c\u6d41\u91cf\u4e3a`INF`\u3002\u73b0\u5728\u628a`[m+1,r]`\u4e2d\u7684\u70b9\u5411`2n`\u4e2a\u865a\u70b9\u4e2d\u6743\u503c\u4e0e\u8fd9\u4e9b\u70b9\u4e2d\u6743\u503c\u4e0e\u4e4b\u76f8\u540c\u7684\u70b9\u76f8\u8fde\uff0c`2n`\u4e2a\u70b9\u4e5f\u5411`[l,m]`\u4e2d\u7684\u70b9\u8fde\u8fb9\u3002\u8fd9\u6837\u8fde\u51fa\u7684\u56fe\u5fc5\u7136\u6b63\u786e\uff0c\u53d8\u6570\u4e3a$n\\log_2 n$\u3002\n\n\u5176\u5b9e\u8fd9\u9053\u9898\u53ef\u4ee5\u8fd9\u4e48\u60f3\uff1a\n\n1. \u60f3\u5230\u4e8c\u5206\u56fe\u666e\u904d\u8fde\u8fb9\u6280\u5de7\n2. \u518d\u60f3\u7528\u7ebf\u6bb5\u6811\u4fdd\u8bc1\u7f16\u53f7\u9650\u5236\n\n# \u8bc4\u8bba\n\n\u8fd9\u5927\u6982\u662f\u4e00\u9053...\u6bd4\u8f83\u5957\u8def\u7684\u9898\u76ee\u5427\u3002\n\n\u8865\u5145\u8fd9\u9053\u9898\u7684\u672c\u8d28\uff1a\n\n1. \u8fd9\u6837\u7684\u8fde\u8fb9\u6280\u5de7\u53ef\u4ee5\u8fd0\u7528\u5230\u6240\u6709\u7684\u3001\u5b8c\u5168\u7684\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\u4e0a\n2. \u628a\u8fde\u8fb9\u65b9\u6cd5\u7406\u89e3\u4e3a\u5dee\u5206\n\n# \u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <queue>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nconst int N = 1e3 + 5, INF = 0x3f3f3f3f;\ntypedef long long ll;\nint n, w, tail = 1, pin[N], head[N * 32], ndTail;\nstruct EDGE {\n\tint to, next, flow, cost;\n\tEDGE(int _t, int _n, int _f, int _c) : to(_t), next(_n), flow(_f), cost(_c) {}\n\tEDGE() : to(0), next(0), flow(0), cost(0) {}\n} edge[1000005];\ninline void AddEdge(int u, int v, int fl, int ct) {\n\tedge[++tail] = EDGE(v, head[u], fl, ct);\n\thead[u] = tail;\n}\ninline void Add(int u, int v, int fl, int ct) {\n\tAddEdge(u, v, fl, ct);\n\tAddEdge(v, u, 0, -ct);\n}\nll dis[N * 32];\nint pre[N * 32];\nbool inq[N * 32];\nqueue<int> Q;\nbool SPFA(int s, int t) {\n\twhile (Q.size()) Q.pop();\n\tmemset(dis, 0x3f, sizeof(dis));\n\tmemset(pre, 0, sizeof(pre));\n\tdis[s] = 0, Q.push(s), inq[s] = 1;\n\twhile (Q.size()) {\n\t\tint now = Q.front();\n\t\tQ.pop();\n\t\tinq[now] = 0;\n\t\tfor (int i = head[now]; i; i = edge[i].next) {\n\t\t\tif (!edge[i].flow) continue ;\n\t\t\tint to = edge[i].to, ct = edge[i].cost;\n\t\t\tif (dis[to] > dis[now] + ct) {\n\t\t\t\tpre[to] = i;\n\t\t\t\tdis[to] = dis[now] + ct;\n\t\t\t\tif (!inq[to]) {\n\t\t\t\t\tinq[to] = 1;\n\t\t\t\t\tQ.push(to);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn dis[t] != 0x3f3f3f3f3f3f3f3fll; //\u7531\u4e8e dis\u662f long long\u7c7b\u578b\u7684\uff0c\u6240\u4ee5\u7ed9 dis memset\u7684\u503c\u5e94\u8be5\u662f 0x3f3f3f3f3f3f3f3f \n}\nvoid MCMF(int s, int t) {\n\tll ans = 0;\n\twhile (SPFA(s, t)) {\n\t\tint go = 0x3f3f3f3f;\n\t\tfor (int now = pre[t]; now; now = pre[edge[now ^ 1].to])\n\t\t\tgo = min(edge[now].flow, go);\n\t\tfor (int now = pre[t]; now; now = pre[edge[now ^ 1].to]) {\n\t\t\tedge[now].flow -= go, edge[now ^ 1].flow += go;\n\t\t\tans += 1ll * edge[now].cost * go;\n\t\t}\n\t}\n\tprintf(\"%lld\\n\", ans);\n}\nint Abs(int a) { return a > 0 ? a : -a; }\nint pos[N];\npair<int, int> tmp[N], tt[N];\nvoid Merge(int L, int R) {\n\tint mid = (L + R) >> 1;\n\tfor (int i = L; i <= R; ++i)\n\t\ttt[i] = tmp[i];\n\tint lp = L, rp = mid + 1;\n\tfor (int i = L; i <= R; ++i) {\n\t\tif (lp > mid || rp <= R && tt[lp] > tt[rp]) //\u5982\u679c\u4e0d\u52a0 rp <= R\uff0c\u90a3\u4e48\u5c31\u4f1a\u51fa\u9519 \n\t\t\ttmp[i] = tt[rp], ++rp;\n\t\telse\n\t\t\ttmp[i] = tt[lp], ++lp;\n\t}\n}\nvoid CDQ(int L, int R) {\n\tif (L == R) return ;\n\tint mid = (L + R) >> 1;\n\tCDQ(L, mid), CDQ(mid + 1, R);\n\tinplace_merge(tmp + L, tmp + mid + 1, tmp + R + 1);\n\tfor (int i = L; i <= R; ++i)\n\t\tpos[tmp[i].second] = i;\n\tfor (int i = 2; i <= R - L + 1; ++i) {\n\t\tAdd(ndTail + i , ndTail + i - 1, INF, tmp[L + i - 1].first - tmp[L + i - 2].first);\n\t\tAdd(ndTail + i - 1, ndTail + i, INF, tmp[L + i - 1].first - tmp[L + i - 2].first);\n\t}\n\tfor (int i = L; i <= R; ++i) {\n\t\tif (i <= mid)\n\t\t\tAdd(ndTail + pos[i] - L + 1, i + n, 1, 0);\n\t\telse\n\t\t\tAdd(i, ndTail + pos[i] - L + 1, 1, 0);\n\t}\n\tndTail += R - L + 1;\n}\nint main() {\n\tscanf(\"%d%d\", &n, &w);\n\tfor (int i = 1; i <= n; ++i)\n\t\tscanf(\"%d\", &pin[i]);\n\tint s = 2 * n + 1, t = 2 * n + 2;\n\tfor (int i = 1; i <= n; ++i)\n\t\tAdd(s, i, 1, 0), Add(i, t, 1, w);\n\tfor (int i = n + 1; i <= 2 * n; ++i)\n\t\tAdd(i, t, 1, 0);\n\tfor (int i = 1; i <= n; ++i)\n\t\ttmp[i] = make_pair(pin[i], i);\n\tndTail = 2 * n + 2;\n\tCDQ(1, n);\n\tMCMF(s, t);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1588522882,
        "uid": 75715,
        "name": "KokiNiwa",
        "ccfLevel": 0,
        "title": "SNOI 2019 \u901a\u4fe1\uff08CDQ\uff0c\u8d39\u7528\u6d41\uff09"
    }
]