[
    {
        "content": "\u770b\u5230\u53ef\u6301\u4e45\u5316\u6211\u5c31\u51b2\u8fdb\u6765\u4e86\uff0c\u7136\u540e\u5c31\u83ab\u540d\u6c34\u6389\u4e86\uff0c\u8fd9\u4e2a\u8ba9\u6211\u6709\u70b9\u65e0\u8bed\u3002\n\n\u8fd9\u91cc\u8981\u6309\u7167\u6df1\u5ea6\u5408\u5e76\uff0c\u5426\u5219\u5c31\u662f\u628a\u5c0f\u547d\u642d\u5728\u6570\u636e\u7684\u968f\u673a\u6027\u4e0a\u4e86\uff0c\u6211\u7684\u5199\u6cd5\u5df2\u7ecf\u975e\u5e38\u63a5\u8fd1\u666e\u901a\u7684\u5e76\u67e5\u96c6\u4e86\uff0c\u679c\u7136\u5c01\u88c5\u662f\u4e2a\u597d\u4e1c\u897f\u3002\n\nPS\uff1a\u8fd9\u4e2a\u9898\u89e3\u5176\u5b9e\u5e76\u6ca1\u6709\u7528\uff0c\u4f46\u662f\u8fd9\u4e2a\u795e\u5947\u7684\u6a21\u677f\u7edd\u5bf9\u662f\u5e72\u8d27\u3002\n\n\u6211\u89c9\u5f97\u8fd9\u4e2a\u5c01\u88c5\u5df2\u7ecf\u4e0d\u9700\u8981\u6ce8\u91ca\u4e86\u3002\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <stdio.h>\nusing namespace std;\ntypedef long long LL;\n#define dd c=getchar()\ninline LL read(){LL a=0,b=1;char dd;while(!isdigit(c)&&c!='-')dd;\n\tif(c=='-'){b=-b;dd;}while(isdigit(c)){a=a*10+c-'0';dd;}return a*b;}\n#undef dd\ntemplate <int n>\nclass vervec{\nLL tree[20*n],ls[20*n],rs[20*n],hd[n],hd1[2*n],tt,t,nh;LL*a;\nLL&ins(LL nod,LL l,LL r,LL x){\n\tif(l==r){return tree[nod];}\n\tint mid=l+r>>1;\n\tif(x<=mid){tree[++tt]=tree[ls[nod]];ls[tt]=ls[ls[nod]];rs[tt]=rs[ls[nod]];\n\t\tls[nod]=tt;return ins(tt,l,mid,x);}\n\tif(x>mid){tree[++tt]=tree[rs[nod]];ls[tt]=ls[rs[nod]];rs[tt]=rs[rs[nod]];\n\t\trs[nod]=tt;return ins(tt,mid+1,r,x);}\n}\nvoid chit(){LL x=hd[nh];hd[++t]=++tt;tree[tt]=tree[x];\n\tls[tt]=ls[x];rs[tt]=rs[x];nh=t;}\nint build(LL l,LL r){\n\tLL nod=++tt;if(l==r){tree[nod]=a[l];ls[nod]=rs[nod]=0;return nod;}\n\tLL mid=l+r>>1;\n\tls[nod]=build(l,mid);\n\trs[nod]=build(mid+1,r);\n\treturn nod;\n}\nvoid init(){tt=0;hd[nh=0]=1;build(1,n);}\nLL query(LL nod,LL l,LL r,LL x){\n\tif(l==r)return tree[nod];\n\tLL mid=l+r>>1;\n\tif(x<=mid)return query(ls[nod],l,mid,x);\n\telse if(x>mid)return query(rs[nod],mid+1,r,x);\n}\npublic:\n\tvervec(){tt=0;t=0;nh=1;}\n\tvoid init(LL*x){a=x;init();}\n\tvoid mark(LL x){hd1[x]=nh;}\n\tLL&operator[](LL x){chit();return ins(hd[nh],1,n,x);}\n\tLL val(LL x){return query(hd[nh],1,n,x);}\n\tvoid rever(LL x){nh=hd1[x];}\n};\nvervec<120003>f,c;\nLL getf(LL v){\n\tLL fa=f.val(v);\n\tif(fa==v)return v;\n\treturn getf(fa);\n}\nvoid add(LL a,LL b){\n\ta=getf(a);\n\tb=getf(b);\n\tif(a==b)return;\n\tLL va=c.val(a),vb=c.val(b);\n\tif(va==vb){\n\t\tf[a]=b;\n\t\tc[b]++;\n\t}else if(va<vb){\n\t\tf[a]=b;\n\t}else{\n\t\tf[b]=a;\n\t}\n}\nLL sol[120003],n,m,x,y,z;\nvoid init(LL n){\n\tfor(LL i=1;i<=n;i++)sol[i]=i;\n\tf.init(sol);\n\tfor(LL i=1;i<=n;i++)sol[i]=1;\n\tc.init(sol);\n}\nint main(){\n\tn=read();\n\tm=read();\n\tinit(n);\n\tf.mark(0);\n\tc.mark(0);\n\tfor(LL i=1;i<=m;i++){\n\t\tx=read();\n\t\tif(x==1){\n\t\t\tx=read();\n\t\t\ty=read();\n\t\t\tadd(x,y);\n\t\t}else if(x==2){\n\t\t\ty=read();\n\t\t\tf.rever(y);\n\t\t\tc.rever(y);\n\t\t}else{\n\t\t\tx=read();\n\t\t\ty=read();\n\t\t\tputs(getf(x)==getf(y)?\"1\":\"0\");\n\t\t}\n\t\tf.mark(i);\n\t\tc.mark(i);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1517814756,
        "uid": 13925,
        "name": "yyhhenry",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3402 \u3010\u3010\u6a21\u677f\u3011\u53ef\u6301\u4e45\u5316\u5e76\u67e5\u96c6\u3011"
    },
    {
        "content": "\u65e2\u7136\u6ca1\u6709\u5f3a\u5236\u5728\u7ebf\uff0c\u8003\u8651\u79bb\u7ebf\u505a\u6cd5\u3002\n\u7531\u4e8e\u53ef\u6301\u4e45\u5316\u7248\u672c\u5f62\u6210\u4e86\u4e00\u68f5\u6811\uff0c\u6211\u4eec\u76f4\u63a5\u5bf9\u8fd9\u68f5\u6811DFS\u4e00\u8fb9\uff0c\u8fdb\u5165\u67d0\u70b9\u65f6\u4fee\u6539\uff0c\u51fa\u8be5\u70b9\u65f6\u64a4\u9500\u3002\n\u5199\u4e86\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u4f3c\u4e4e\u6ca1\u6709\u88ab\u5361\uff0c\u90a3\u5c31\u4e0d\u5199\u6309\u79e9\u5408\u5e76\u4e86\u3002\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <algorithm>\n#include <queue>\n#include <cmath>\nusing namespace std;\n\nconst int N = 300005, INF = 1e9+7;\n\nint yun=1, n, m, ty[N], a[N], b[N], tim[N], las[N], Ans[N];\n\nstruct DSU{\n    int fa[N], siz[N], sta[N], top;\n    \n    inline void Init(){\n        for (int i=1; i<=n; ++i)\n            fa[i]=i, siz[i]=1;\n    }\n    int Seek(int x){\n        return x==fa[x]? x:Seek(fa[x]);\n    }\n    inline void Merge(int x, int y){\n        int fx=Seek(x), fy=Seek(y);\n        if (fx==fy) return;\n        if (siz[fx] < siz[fy]) swap(fx, fy);\n        siz[fx]+=siz[fy]; fa[fy]=fx;\n        sta[++top]=fy;\n    }\n    inline void Back(){\n        int y=sta[top--];\n        siz[fa[y]]-=siz[y]; fa[y]=y;\n    }\n    inline void Turn_back(int t=0){\n        while (top > t) Back();\n    }\n}T;\n\nstruct Edge{ int to, pre; }e[N*2];\ninline void Add(int a, int b){\n    e[++yun]=(Edge){b, las[a]}; las[a]=yun;\n}\n\nvoid DFS(int x){\n    tim[x]=T.top;\n    if (ty[x]==3) Ans[x]=(T.Seek(a[x])==T.Seek(b[x]));\n    if (ty[x]==1) T.Merge(a[x], b[x]);\n    for (int i=las[x]; i; i=e[i].pre)\n        DFS(e[i].to);\n    T.Turn_back(tim[x]);\n}\n\nint main(){\n    scanf(\"%d%d\", &n, &m);\n    T.Init();\n    for (int i=1; i<=m; ++i){\n        scanf(\"%d%d\", &ty[i], &a[i]);\n        if (ty[i]!=2) scanf(\"%d\", &b[i]), Add(i-1, i);\n            else Add(a[i], i);\n    }\n    DFS(0);\n    for (int i=1; i<=m; ++i)\n        if (ty[i]==3) printf(\"%d\\n\", Ans[i]);\n    \n    return 0;\n}\n```",
        "postTime": 1521554403,
        "uid": 20360,
        "name": "zj\u4f59\u80fd",
        "ccfLevel": 9,
        "title": "\u3010\u6a21\u677f\u3011\u53ef\u6301\u4e45\u5316\u5e76\u67e5\u96c6"
    },
    {
        "content": "\n\u7b2c\u4e00\u7bc7\u9898\u89e3,\u4e0d\u597d\u8bf7\u89c1\u8c05\n## **\u601d\u8def**\n\u53ef\u6301\u4e45\u5316\u5e76\u67e5\u96c6\u7684\u6a21\u677f\uff0c\u53ef\u6301\u4e45\u5316\u60f3\u5230\u4e3b\u5e2d\u6811\uff0c\u5e76\u67e5\u96c6\u60f3\u5230\u6309\u79e9\u5408\u5e76~~\u548c\u8def\u5f84\u538b\u7f29~~\n\n------------\n\n### \u4e3b\u5e2d\u6811\u90e8\u5206\n1. \u4e3b\u5e2d\u6811\u53c8\u79f0\u4e3a\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\uff0c\u53ef\u4ee5\u7ef4\u62a4\u5404\u4e2a\u5386\u53f2\u7248\u672c\u4e0a\u7684\u8282\u70b9\u3002\u5bf9\u4e8e\u4e0d\u540c\u7684\u7684\u5386\u53f2\u7248\u672c\uff0c\u65b0\u5efa\u4e00\u4e2a\u6839\u8282\u70b9\u8fdb\u884c\u7ef4\u62a4\u548c\u67e5\u627e\u3002\n2. \u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u7248\u672c\uff0c\u5efa\u7acb\u4e00\u4e2a\u6839\u8282\u70b9\u3002\u5728\u9700\u8981\u67e5\u8be2\u65f6\uff0c\u4fbf\u67e5\u627e\u76f8\u5e94\u7684\u6839\u8282\u70b9\u3002\n3. \u5982\u679c\u5bf9\u6bcf\u4e2a\u7248\u672c\u90fd\u65b0\u5efa\u4e00\u68f5\u6811\uff0c\u90a3\u4e48\u65f6\u95f4\u548c\u7a7a\u95f4\u4e00\u5b9a\u662f\u4e0d\u591f\u7684\u3002\u90a3\u4e48\u4f55\u4e0d\u8003\u8651\u5728\u5728\u539f\u6709\u7684\u8282\u70b9\u57fa\u7840\u4e0a\u5efa\u4e00\u68f5\u6811\u5462\uff1f\n4. \u5bf9\u533a\u95f4\u4e2d\u7684\u4e00\u4e2a\u503c\u8fdb\u884c\u4fee\u6539\u65f6\uff0c\u65b0\u5efa\u4e00\u4e2a\u6839\u8282\u70b9\uff0c\u53ea\u5bf9\u8ddf\u4fee\u6539\u70b9\u76f8\u5173\u7684\u70b9\u8fdb\u884c\u4fee\u6539\u3002\n#### \u7528\u56fe\u6765\u8868\u793a\u4e3b\u5e2d\u6811\u70b9\u7684\u4fee\u6539\n##### \u6700\u521d\u7684\u7ebf\u6bb5\u6811\n![\u6700\u521d\u7684\u7ebf\u6bb5\u6811](https://cdn.luogu.com.cn/upload/pic/67667.png) \n##### \u4fee\u6539\u4e09\u53f7\u8282\u70b9\u540e\n![\u6539\u540e\u4e3b\u5e2d\u6811](https://cdn.luogu.com.cn/upload/pic/67670.png)\n\n\u53ef\u89c1\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u4fee\u6539\uff0c\u6700\u591a\u4f1a\u5efa\u7acb logN \u4e2a\u8282\u70b9\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u67e5\u8be2\uff0c\u4e5f\u662f logN \uff08\u7ebf\u6bb5\u6811\u533a\u95f4\u67e5\u8be2\uff09\n\n------------\n\n### \u6309\u79e9\u5408\u5e76\u5e76\u67e5\u96c6\u90e8\u5206\n1. \u5bf9\u4e8e\u4e24\u4e2a\u9700\u8981\u76f8\u8fde\u63a5\u7684\u70b9\uff0c\u5c06\u4ed6\u4eec\u7684\u7236\u8282\u70b9\u6309\u7167\u5927\u5c0f\u6df1\u5ea6\u76f8\u8fde\u63a5\uff08\u5c0f\u8054\u5927\uff09\u3002\n2. \u5bf9\u4e8e\u6bcf\u4e2a\u70b9,\u5411\u4e0a\u5bfb\u627e\u5230\u4ed6\u7684\u7236\u8282\u70b9,\u7236\u8282\u70b9\u76f8\u540c\u5c31\u53ef\u4ee5\u5224\u65ad\u4e24\u4e2a\u5143\u7d20\u662f\u5426\u5728\u4e00\u4e2a\u96c6\u5408\u4e4b\u4e2d.\n#### \u7528\u56fe\u8868\u793a\u6309\u79e9\u5408\u5e76\n![\u6309\u79e9\u5408\u5e76\u5e76\u67e5\u96c6](https://cdn.luogu.com.cn/upload/pic/67674.png)\n\n\u5bf9\u4e8e\u6240\u6709\u96c6\u5408\u7684\u5408\u5e76\uff0c\u6df1\u5ea6\u6d45\u7684\u59cb\u7ec8\u4f1a\u88ab\u5e76\u5165\u6df1\u5ea6\u6df1\u7684\uff0c\u6bcf\u4e2a\u96c6\u5408\uff08\u6811\uff09\u7684\u6df1\u5ea6\u6700\u591a\u4e0d\u4f1a\u8d85\u8fc7logn\uff0c\u5373\u53ef\u4ee5\u5728logn\u5185\u627e\u5230\u7236\u8282\u70b9\n\n\n\n------------\n##### \u5728\u7406\u89e3\u4e86\u4e0a\u9762\u4e24\u4e2a\u6982\u5ff5\u540e\u5c31\u53ef\u4ee5\u5f00\u59cb\u505a\u8fd9\u9053\u9898\u4e86\n------------\n\n### \u7efc\u5408\n    \u7ef4\u62a4\u4e00\u4e2a\u6309\u79e9\u5408\u5e76\u5e76\u67e5\u96c6\u7684\u6570\u7ec4\uff0c\u6bcf\u6b21\u5408\u5e76\u64cd\u4f5c\u53ef\u4ee5\u5f53\u505a\u662f\u5bf9\u6df1\u5ea6\u5c0f\u7684\u8282\u70b9\u7684\u7236\u8282\u70b9\u7684\u7236\u8282\u70b9\u8fdb\u884c\u4fee\u6539\uff08\u6709\u70b9\u62d7\u53e3\uff09\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u7ef4\u62a4\u5404\u4e2a\u7248\u672c\u7684\u96c6\u5408.\n1. \u5bf9\u8282\u70b9\u7684\u5b9a\u4e49\n```c\nstruct point{\n int l,r;//\u5de6(\u53f3)\u533a\u7ea7\n int son1,son2;//\u5de6(\u53f3)\u513f\u5b50\n int f,deep;//\u7236\u8282\u70b9\u7684\u6807\u53f7,\u548c\u6df1\u5ea6\n}p[maxn<<5];\n```\n2. \u5bf9\u5e76\u67e5\u96c6\u8fdb\u884c\u521d\u59cb\u5316(\u5efa\u7acb\u6700\u521d\u7684\u4e3b\u5e2d\u6811)\n```cpp\nvoid make_new(int now){\n if(p[now].l == p[now].r) p[now].f=p[now].l,p[now].deep=1;//\u627e\u5230\u8282\u70b9,\u6700\u521d\u7236\u8282\u70b9\u4e3a\u81ea\u5df1,\u6df1\u5ea6\u4e3a1\n else {\n  int mid = (p[now].l+p[now].r)>>1;\n  p[++cnt].l=p[now].l;p[cnt].r=mid;p[now].son1=cnt;//\u5de6\u5b50\u6811\n  make_new(p[now].son1);\n  p[++cnt].l=mid+1;p[cnt].r = p[now].r;p[now].son2=cnt;//\u53f3\u5b50\u6811\n  make_new(p[now].son2);\n }\n}\n```\n3. \u67e5\u8be2\u64cd\u4f5c\n```cpp\nint find_f(int x,int now){//x \u4e3a\u67e5\u627e\u503c\uff0cnow\u4e3a\u5f53\u524d\u5386\u53f2\u7248\u672c\u8ddf\u8282\u70b9\n int p1 = find_place(x,now);//\u5bfb\u627e\u503c\u5728\u5f53\u524d\u8282\u70b9\u7684\u4f4d\u7f6e\n if(p[p1].f == x)//\u7236\u8282\u70b9\u4e3a\u81ea\u5df1\u4fbf\u8fd4\u56de\n  return p1;\n return find_f(p[p1].f,now);\n}\n```\n4. \u8fde\u63a5\u64cd\u4f5c(\u4e3b\u8981\u90e8\u5206)\n```cpp\nvoid con(int a,int b,int now){//a,b\u4e3a\u5143\u7d20,now\u4e3a\u5f53\u524d\u5386\u53f2\u7248\u672c\u7684\u6839\u8282\u70b9\n int p1 = find_place(a,now),p2 = find_place(b,now);//a,b\u5728\u5f53\u524d\u6811\u4e2d\u7684\u4f4d\u7f6e\n int f1 = find_f(p[p1].l,now),f2 = find_f(p[p2].l,now);\u67e5\u627ea,b\u7684\u7236\u8282\u70b9\n if(p[f1].deep > p[f2].deep){//\u6df1\u5ea6\u5c0f\u7684\u8fde\u63a5\u5230\u6df1\u5ea6\u5927\u7684\n  find_new(p[f2].l,now);//\u6ce8\u610f\u662f\u65b0\u5efa\u4e00\u4e2a\u5b50\u6811\u8fdb\u884c\u4fee\u6539,\u4e0d\u7136\u4f1a\u5f71\u54cd\u5230\u5176\u4ed6\u8282\u70b9\n  f2 = cnt;\n  p[f2].f = p[f1].l;//\u6ce8\u610f\u7236\u8282\u70b9\u4fdd\u5b58\u6807\u53f7\n  p[f1].deep += p[f2].deep;\n }\n else {\n  find_new(p[f1].l,now);\n  f1 = cnt;\n  p[f1].f = p[f2].l;\n  p[f2].deep += p[f1].deep;\n }\n}\n```\n5. \u56de\u6eaf\u64cd\u4f5c\n```cpp\nint k = read();\n   p[++cnt] = p[head[k]];head[t] = cnt;//\u6ce8\u610f\u56de\u6eaf\u662f\u7b97\u505a\u4e00\u4e2a\u9700\u8981\u88ab\u67e5\u8be2\u7684\u64cd\u4f5c\n   now_h = head[t];//\u5c06\u5f53\u524d\u5386\u53f2\u7248\u672c\u66f4\u6539\n```\n------------\n### \u9644\u4e0aAC\u4ee3\u7801\n```cpp\n#include <iostream>\n#include <cstdio>\nusing namespace std;\nconst int maxn = 2e5+17;\nstruct point{\n\tint l,r;//\u5de6(\u53f3)\u533a\u95f4 \n\tint son1,son2;//\u5de6(\u53f3)\u513f\u5b50 \n\tint f,deep;//\u7236\u8282\u70b9\u7684\u6807\u53f7,\u548c\u6df1\u5ea6 \n}p[maxn<<5];\nlong long read(){\n\tchar ch = getchar();\n\tbool flag = true;\n\twhile(ch < '0' || ch > '9') {\n\t\tif(ch == '-') flag = false;\n\t\tch = getchar();\n\t}\n\tlong long k = ch -'0';\n\twhile(ch = getchar(), ch <= '9' && ch >= '0') {\n\t\tk = (k<<1)+(k<<3);\n\t\tk += (ch-'0');\n\t}\n\tif(flag) return k;\n\treturn -k;\n}\nint cnt,head[maxn];//head\u50a8\u5b58\u6bcf\u4e2a\u5386\u53f2\u7248\u672c\u7684\u6839\u8282\u70b9 \uff0ccnt\u4e3a\u5f53\u524d\u8282\u70b9 \nvoid make_new(int now){//\u5bf9\u5e76\u67e5\u96c6\u7684\u521d\u59cb\u5316 \n\tif(p[now].l == p[now].r) p[now].f=p[now].l,p[now].deep=1;\n\telse {\n\t\tint mid = (p[now].l+p[now].r)>>1;\n\t\tp[++cnt].l=p[now].l;p[cnt].r=mid;p[now].son1=cnt;\n\t\tmake_new(p[now].son1);\n\t\tp[++cnt].l=mid+1;p[cnt].r = p[now].r;p[now].son2=cnt;\n\t\tmake_new(p[now].son2);\n\t}\n}\nint find_place(int num,int now){//\u5bf9\u6570\u503c\u5728\u6811\u5185\u4f4d\u7f6e\u7684\u67e5\u627e num-\u6570,now\u6570\u7684\u8282\u70b9 \n\tif(p[now].l == num && p[now].r == num) return now;\n\tint mid=(p[now].l+p[now].r)>>1;\n\tif(num > mid) return find_place(num,p[now].son2);\n\telse return find_place(num,p[now].son1);\n}\nint find_f(int x,int now){//\u67e5\u627e\u7236\u8282\u70b9 \n\tint p1 = find_place(x,now);\n\tif(p[p1].f == x)\n\t\treturn p1;\n\treturn find_f(p[p1].f,now);\n}\nvoid find_new(int num,int now){//\u5bf9\u5f53\u524d\u503c\u7684\u66f4\u65b0(\u65b0\u5efa\u4e00\u4e2a\u5b50\u6811) \n\tif(p[now].l == p[now].r) return;\n\tint mid = (p[now].l+p[now].r)>>1;\n\tif(num > mid){//\u53ea\u66f4\u65b0\u4e00\u4e2a\u5b50\u6811 \n\t\tp[++cnt] = p[p[now].son2];\n\t\tp[now].son2 = cnt; \n//\t\tp[now].f = cnt;\n\t\tfind_new(num,p[now].son2);\n\t\treturn;\n\t}\n\telse {\n\t\tp[++cnt] = p[p[now].son1];\n\t\tp[now].son1 = cnt;\n//\t\tp[now].f = cnt;\n\t\tfind_new(num,p[now].son1);\n\t\treturn;\n\t}\n}\nvoid con(int a,int b,int now){//\u8fde\u63a5\u64cd\u4f5c \n\tint p1 = find_place(a,now),p2 = find_place(b,now);\n\tint f1 = find_f(p[p1].l,now),f2 = find_f(p[p2].l,now);\n\tif(p[f1].deep > p[f2].deep){\n\t\tfind_new(p[f2].l,now);\n\t\tf2 = cnt;\n\t\tp[f2].f = p[f1].l;\n\t\tp[f1].deep += p[f2].deep;\n\t}\n\telse {\n\t\tfind_new(p[f1].l,now);\n\t\tf1 = cnt;\n\t\tp[f1].f = p[f2].l;\n\t\tp[f2].deep += p[f1].deep;\n\t}\n}\nint main(){\n\tint n=read(),m=read();\n\tp[++cnt].l=1;p[cnt].r=n;head[0] = cnt;\n\tmake_new(head[0]);\n\tint now_h=head[0];//now_h\u8868\u793a\u5f53\u524d\u5386\u53f2\u7248\u672c\u7684\u6839\u8282\u70b9 \n\tfor(int t = 1 ; t <= m ; t++){\n\t\tint opt = read();\n\t\tif(opt == 1){\n\t\t\tint a=read(),b=read();\n\t\t\tp[++cnt] = p[now_h];head[t] = cnt;//\u5b58\u50a8\u5f53\u524d\u7684\u5386\u53f2\u7248\u672c \n\t\t\tnow_h = head[t];\n\t\t\tcon(a,b,now_h);\n\t\t}\n\t\telse if(opt == 2){\n\t\t\tint k = read();\n\t\t\tp[++cnt] = p[head[k]];head[t] = cnt;//\u6ce8\u610f\u56de\u6eaf\u4e5f\u9700\u8981\u5355\u72ec\u5b58\u50a8 \n\t\t\tnow_h = head[t];\n\t\t}\n\t\telse {\n\t\t\tint a=read(),b=read();\n\t\t\tp[++cnt] = p[now_h];head[t]=cnt;\n\t\t\tnow_h = head[t];\n\t\t\tif(p[find_f(a,now_h)].l == p[find_f(b,now_h)].l) printf(\"1\\n\");\n\t\t\telse printf(\"0\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n#### \u6ce8\u610f\n1. \u6bcf\u4e2a\u8282\u70b9\u5b58\u50a8\u7684\u7236\u8282\u70b9\u662f\u4e00\u4e2a\u6570\u5b57\uff0c\u800c\u4e0d\u662f\u7236\u8282\u70b9\u7684\u4f4d\u7f6e\n2. \u5b58\u50a8\u7248\u672c\u540e,\u4e00\u5b9a\u662f\u5728\u5f53\u524d\u7248\u672c\u8fdb\u884c\u4fee\u6539",
        "postTime": 1564717741,
        "uid": 93555,
        "name": "\u4e00\u53ea\u5c0f\u5175",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3402 \u3010\u3010\u6a21\u677f\u3011\u53ef\u6301\u4e45\u5316\u5e76\u67e5\u96c6\u3011"
    },
    {
        "content": "\u53ef\u6301\u4e45\u5316\u5e76\u67e5\u96c6\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u7528\u53ef\u6301\u4e45\u5316\u6570\u7ec4\u7ef4\u62a4\u7684\u5e76\u67e5\u96c6\uff0c\u672c\u8d28\u548c\u53ef\u6301\u4e45\u5316\u6570\u7ec4\u662f\u4e00\u6837\u7684\u3002\n\n\u53ef\u6301\u4e45\u5316\u6570\u7ec4\u6709\u5728\u7ebf\u79bb\u7ebf\u4e24\u79cd\u7ef4\u62a4\u65b9\u6cd5\uff0c\u53ef\u6301\u4e45\u5316\u5e76\u67e5\u96c6\u4e5f\u53ef\u4ee5\u79bb\u7ebf\u7ef4\u62a4\u3002\u8003\u8651\u628a\u7248\u672c\u770b\u6210\u8282\u70b9\uff0c\u90a3\u4e48\u6839\u636e\u7248\u672c\u7684\u7ee7\u627f\u5173\u7cfb\u8fd9\u4e9b\u8282\u70b9\u4f1a\u6784\u6210\u4e00\u68f5\u6811\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u6811\u7684\u7236\u5b50\u8282\u70b9\u7684\u5dee\u5f02\u53ea\u6709\u8fde\u8fb9\u4ee3\u8868\u7684\u4fee\u6539\uff0c\u53ef\u4ee5\u968f\u7740 dfs \u7684\u8fc7\u7a0b\u4fee\u6539\uff0c\u800c\u4fee\u6539\u8fc7\u540e\u64a4\u9500\u4fee\u6539\u53ea\u9700\u8981\u53ef\u56de\u9000\u6570\u7ec4\u5c31\u53ef\u4ee5\u5b8c\u6210\uff0c\u975e\u5e38\u65b9\u4fbf\uff0c\u8fd9\u6837\u5c31\u5b8c\u6210\u4e86\u4fee\u6539\u64cd\u4f5c\u3002\u800c\u5bf9\u4e8e\u8be2\u95ee\u64cd\u4f5c\uff0c\u53ea\u9700\u8981\u628a\u8be2\u95ee\u6302\u5728\u7248\u672c\u5bf9\u5e94\u8282\u70b9\uff0c\u5904\u7406\u5230\u8be5\u8282\u70b9\u7684\u65f6\u5019\u56de\u7b54\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u590d\u6742\u5ea6\u5206\u6790\uff1a\u8fb9\u6570 $O(m)$\uff0c\u6cbf\u8fb9\u8d70\u65f6\u6709\u5e76\u67e5\u96c6\u590d\u6742\u5ea6 $O(\\log n)$\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(m\\log n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(m)$\uff0c\u5747\u4f18\u4e8e\u5728\u7ebf\u505a\u6cd5\u3002\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=1e5+2,M=2e5+2;\nstruct Q\n{\n\tint u,v,w;\n\tQ(int a,int b,int c):u(a),v(b),w(c){}\n};\nvector<Q> lj[M],xw[M];\nint f[N],ys[M],rk[N];\nint n,m,i,x,y,z,now,q;\nchar ans[M<<1];\ninline void read(register int &x)\n{\n\tregister int c=getchar();\n\twhile ((c<48)||(c>57)) c=getchar();\n\tx=c^48;c=getchar();\n\twhile ((c>=48)&&(c<=57))\n\t{\n\t\tx=x*10+(c^48);\n\t\tc=getchar();\n\t}\n}\ninline int getf(register int x)\n{\n\twhile (f[x]!=x) x=f[x];\n\treturn x;\n}\nvoid dfs(int x)\n{\n\tfor (int i=0;i<xw[x].size();i++) ans[xw[x][i].w<<1]=48+(getf(xw[x][i].u)==getf(xw[x][i].v));\n\tfor (int i=0,u,v,cg;i<lj[x].size();i++)\n\t{\n\t\tu=getf(lj[x][i].u);v=getf(lj[x][i].v);\n\t\tif (u!=v)\n\t\t{\n\t\t\tif (rk[u]>rk[v]) swap(u,v);\n\t\t\tf[u]=v;if (cg=(rk[u]==rk[v])) ++rk[v];\n\t\t}\n\t\tdfs(lj[x][i].w);\n\t\tif (u!=v)\n\t\t{\n\t\t\tf[u]=u;if (cg) --rk[v];\n\t\t}\n\t}\n}\nint main()\n{\n\tread(n);read(m);\n\tfor (i=1;i<=n;i++) f[i]=i;\n\tfor (i=1;i<=m;i++)\n\t{\n\t\tread(x);read(y);\n\t\tif (x==2) {now=ys[i]=ys[y];continue;}\n\t\tread(z);\n\t\tif (x==1)\n\t\t{\n\t\t\tys[i]=i;\n\t\t\tlj[now].push_back(Q(y,z,i));now=i;\n\t\t} else xw[ys[i]=now].push_back(Q(y,z,++q));\n\t}dfs(0);\n\tfor (i=1;i<=q;i++) ans[i<<1|1]=10;\n\tfwrite(ans+2,q<<1,1,stdout);\n}\n```",
        "postTime": 1604641262,
        "uid": 29826,
        "name": "SSerxhs",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3402 \u3010\u53ef\u6301\u4e45\u5316\u5e76\u67e5\u96c6\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u4e1c\u897f\u672c\u8eab\u4e0d\u662f\u5f88\u96be\u5199\uff0c\u5c31\u662f\u628a\u5e76\u67e5\u96c6\u5e73\u65f6\u7528\u7684$fa[i]$\u6570\u7ec4\u53ef\u6301\u4e45\u5316\u4e00\u4e0b\u5c31\u884c\u4e86\n\n\u4f46\u662f\u7531\u4e8e\u73b0\u5728\u9700\u8981\u53ef\u6301\u4e45\u5316\uff0c\u6240\u4ee5\u8def\u5f84\u538b\u7f29\u8fd9\u79cd\u5747\u644a\u7684\u65b9\u6cd5\u80af\u5b9aT\u98de\uff0c\u6211\u4eec\u9700\u8981\u4e25\u683c\u6bcf\u6b21\u53ea\u8bbf\u95ee$log_2 n$\u4e2a\u70b9\u7684\u5408\u5e76\u65b9\u5f0f\n\n- **\u6309\u6811\u9ad8\u5408\u5e76**\n\n  \u6bcf\u6b21\u5408\u5e76\u65f6\u6309\u7167\u6811\u9ad8\u5408\u5e76\uff0c\u5c06\u6811\u9ad8\u5c0f\u7684\u63a5\u5728\u6811\u9ad8\u5927\u7684\u4e0b\u9762\n  \n  \u663e\u7136\uff0c\u5982\u679c\u4e24\u68f5\u6811\u7684\u6811\u9ad8\u4e0d\u540c\uff0c\u5408\u5e76\u5b8c\u4ee5\u540e\u7684\u6811\u6811\u9ad8\u4e0d\u4f1a\u589e\u52a0\uff08\u88ab\u63a5\u4e0a\u53bb\u7684\u8282\u70b9\u6df1\u5ea6 + 1\uff0c\u4f46\u662f\u9ad8\u7684\u90a3\u68f5\u6811\u7684\u6811\u9ad8\uff0c\u5982\u679c\u4e0e\u77ee\u7684\u4e0d\u540c\uff0c\u81f3\u5c11\u6bd4\u77ee\u7684\u59271\uff0c\u6240\u4ee5\u6ca1\u6709\u5f71\u54cd\uff09\n  \n  \u5f53\u4e24\u68f5\u6811\u6811\u9ad8\u76f8\u540c\u65f6\uff0c\u5408\u5e76\u540e\u7684\u6811\u6811\u9ad8 + 1\n  \n  \u8bbe$siz(h)$\u8868\u793a\u8fd9\u6837\u5408\u5e76\uff0c\u6811\u9ad8\u4e3a$h$\u7684\u6811\uff0c\u6700\u5c0f\u6709$siz(h)$\u4e2a\u8282\u70b9\n  \n  \u663e\u7136\uff0c\u5f53\u6211\u4eec\u9700\u8981\u4e00\u68f5\u6811\u9ad8\u4e3a$h + 1$\u7684\u6811\u65f6\uff0c\u6211\u4eec\u81f3\u5c11\u9700\u8981\u5c06\u4e24\u68f5\u6811\u9ad8\u4e3a$h$\u7684\u6811\u5408\u5e76\u8d77\u6765\n  \n  \u4e5f\u5c31\u662f\u8bf4$siz(h + 1) \\ge 2 \\times siz(h)$\n  \n  \u8fb9\u754c$siz(1) = 1$\uff0c\u6240\u4ee5$siz(h) = 2 ^ {h - 1}$\n  \n  \u6211\u4eec\u8fd9\u6837\u4e5f\u53ef\u4ee5\u6c42\u51fa$h$\u7684\u6700\u5927\u503c\uff1a\n  \n  $\\because 2 ^ {h -  1} = n$ \n  \n  $\\therefore h = log_2 n + 1$\n  \n  \u8fd9\u6837\u5c31\u8bc1\u660e\u4e86\uff0c\u6309\u6811\u9ad8\u5408\u5e76\uff0c\u6811\u9ad8\u81f3\u591a$log_2 n$\n  \n- **\u6309$size$\u5408\u5e76**\n\n  \u6bcf\u6b21\u5408\u5e76\u65f6\u6309\u7167\u5b50\u6811\u5927\u5c0f$(size)$\u5408\u5e76\uff0c\u628a$size$\u5c0f\u7684\u63a5\u5728$size$\u5927\u7684\u4e0b\u9762\n  \n  \u663e\u7136\uff0c\u6bcf\u6b21\u53ea\u6709\u88ab\u63a5\u5230\u4e0b\u9762\u7684\u5b50\u6811\uff0c\u6df1\u5ea6\u624d\u4f1a + 1\n  \n  \u8bbe\u5f53\u524d\u8fd9\u68f5\u6811$size$\u4e3a$x$\uff0c\u9ad8\u4e3a$h_1$\uff0c\u6709$size$\u4e3a$y$\uff0c\u9ad8\u4e3a$h_2$\u7684\u8981\u4e0e\u4e4b\u5408\u5e76\n  \n  \u82e5$x < y$\uff0c\u90a3\u4e48$x$\u4f1a\u88ab\u63a5\u5230$y$\u7684\u4e0b\u9762\uff0c\u9ad8\u53d8\u4e3a$max(h_1 + 1,h_2)$\n  \n  - \u5982\u679c$h_2 \\ge h_1 + 1$\uff0c\u90a3\u4e48\u5b9e\u9645\u4e0a\u6beb\u65e0\u5f71\u54cd\uff0c\u5bf9\u4e8e$y$\u6765\u8bf4\uff0c\u6811\u9ad8\u6ca1\u6709\u53d8\u5316\n  \n  - \u5982\u679c$h_2 < h_1 + 1$\uff0c\u90a3\u4e48\u6811\u9ad8\u589e\u52a0$1$\uff0c\u4f46\u662f$size$\u53d8\u4e3a$x + y$\n    \n    $\\because y > x$\n    \n    $\\therefore x + y > 2x$\n    \n    $\\therefore$ $size$\u81f3\u5c11\u7ffb\u500d \n  \n  \u82e5$x > y$\uff0c\u90a3\u4e48$swap(x,y)$\uff08\u5927\u96fe\uff09\uff0c\u5b9e\u9645\u4e0a\u672c\u60c5\u51b5\u548c\u4e0a\u9762\u6ca1\u6709\u533a\u522b\n  \n  \u7ecf\u8fc7\u4e00\u756a\u5206\u7c7b\u8ba8\u8bba\uff0c\u6309$size$\u5408\u5e76\u552f\u4e00\u4f1a\u589e\u52a0\u6811\u9ad8\u7684\u5730\u65b9\uff0c\u5c31\u662f\u5f53$h_2 < h_1 + 1$\uff0c\u90a3\u4e48\u6811\u9ad8\u589e\u52a0$1$\uff0c\u4f46\u662f$size$\u7ffb\u500d\n  \n  \u663e\u7136\uff0c$size$\u81f3\u591a\u7ffb\u500d$log_2 n$\u6b21\uff0c\u6240\u4ee5\u6811\u9ad8\u4e5f\u662f\u81f3\u591a$log_2 n$\n  \n- **\u4e3a\u4ec0\u4e48\u968f\u673a\u5316\u5408\u5e76\u4e0d\u5bf9**\n\n  \u603b\u662f\u6709\u4eba\u89c9\u5f97\uff0c\u968f\u673a\u5316\u5408\u5e76\u5e94\u8be5\u4e0d\u4f1a\u88abhack\uff0c\u56e0\u4e3a\u6211\u5408\u5e76\u90fd\u662f\u968f\u673a\u7684\uff0c\u4f60\u600e\u4e48\u5361\uff1f\n  \n  \u4f46\u662f\u672c\u9898\u7684#5\u771f\u7684\u5c31\u5361\u4e86\u968f\u673a\u5316\u5408\u5e76\u2026\u2026\n  \n  \u7b2c5\u4e2a\u70b9\u7684\u6784\u9020\u65b9\u5f0f\u662f\uff1a\u4f9d\u6b21\u5c06\u6bcf\u4e2a\u548c\u4e0b\u4e00\u4e2a\u5408\u5e76\n\n  \u5982\u679c\u5199\u7684\u662f\u968f\u673a\u5408\u5e76\u7684\u8bdd\uff0c\u671f\u671b\u6709$\\frac{n}{2}$\u6b21\u5c06\u4e00\u9897\u6811\u63a5\u5230\u4e00\u4e2a\u70b9\u4e0a\uff0c\u6240\u4ee5\u5c31\u4f1a\u5bfc\u81f4\u6811\u9ad8$\\frac{n}{2}$\n  \n  \u6240\u4ee5\uff0c\u968f\u673a\u5316\u5408\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u6811\u9ad8\u7684\u95ee\u9898\uff0c\u6811\u9ad8\u751a\u81f3\u4f1a\u9000\u5316\u4e3a$\\frac{n}{2}$\n  \n\u6700\u540e\uff0c\u7ed9\u51fa\u4e00\u4e2a\u6309$size$\u5408\u5e76\u7684\u4f8b\u5b50\uff1a\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\nusing namespace std;\nint n,m,ti;\n\nstruct TREE{\n\tint T[200005],st[200005];//T[i]\u8868\u793a\u7b2ci\u6b21\u64cd\u4f5c\u540e\u7684\u6839,st[i]\u8868\u793ai\u5730\u65b9\u521d\u59cb\u503c\n\tint ls[200005 << 5],rs[200005 << 5],val[200005 << 5];//ls[i]\u662fi\u8282\u70b9\u5de6\u513f\u5b50,rs[i]\u662fi\u8282\u70b9\u53f3\u513f\u5b50\n\tint cnt;\n\tint build(int l,int r){//\u8fd4\u56de\u8282\u70b9\u7f16\u53f7\n\t\tint rt = ++cnt;\n\t\tif(l == r){\n\t\t\tval[rt] = st[l];\n\t\t\treturn rt;\n\t\t}\n\t\tint mid = l + r >> 1;\n\t\tls[rt] = build(l,mid);\n\t\trs[rt] = build(mid+1,r);\n\t\treturn rt;\n\t}\n\tint upload(int pt,int l,int r,int id,int C){//pt\u662f\u539f\u7248\u672c\u8fd9\u4e2a\u8282\u70b9\u7684\u4f4d\u7f6e\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u662f\u5355\u70b9\u8d4b\u503c\n\t\tint rt = ++cnt;\n\t\tls[rt] = ls[pt];\n\t\trs[rt] = rs[pt];\n\t\t\n\t\tif(l == r){\n\t\t\tval[rt] = C;\n\t\t\treturn rt;\n\t\t}\n\t\tint mid = l + r >> 1;\n\t\tif(id <= mid){\n\t\t\tls[rt] = upload(ls[pt],l,mid,id,C);\n\t\t}else{\n\t\t\trs[rt] = upload(rs[pt],mid+1,r,id,C);\n\t\t}\n\t\treturn rt;\n\t}\n\tint query(int rt,int l,int r,int id){//\u5355\u70b9\u67e5\u8be2\n\t\tif(l == r){\n\t\t\treturn val[rt];\n\t\t}\n\t\tint mid = l + r >> 1;\n\t\tif(id <= mid){\n\t\t\treturn query(ls[rt],l,mid,id);\n\t\t}else{\n\t\t\treturn query(rs[rt],mid+1,r,id);\n\t\t}\n\t}\n}bin,siz;//bin\u5b58\u6bcf\u4e2a\u70b9\u7684father,siz\u5b58\u6bcf\u4e2a\u70b9\u7684size\u5927\u5c0f\n\nint find(int x){\n\twhile(bin.query(bin.T[ti],1,n,x) != x){//\u8fd9\u91cc\u5c31\u662f\u4e00\u76f4\u5f80\u4e0a\u8df3\n\t\tx = bin.query(bin.T[ti],1,n,x);\n\t}\n\treturn x;\n}\n\nvoid merge(int x,int y){\n\tint a = find(x);\n\tint b = find(y);\n\tif(a == b) return;//\u81ea\u5df1\u7ed9\u81ea\u5df1\u5408\u5e76\u4f1a\u5bfc\u81f4size\u4e0d\u6b63\u786e\uff0c\u7279\u5224\u6389\n\tint X = siz.query(siz.T[ti],1,n,a),Y = siz.query(siz.T[ti],1,n,b);\n\tif(X <= Y){//\u5982\u679ca\u7684size\u6bd4b\u5c0f\uff0c\u5c31\u63a5\u5230b\u4e0a\n\t\tbin.T[ti] = bin.upload(bin.T[ti],1,n,a,b);//bin[a] = b\n\t\tsiz.T[ti] = siz.upload(siz.T[ti],1,n,b,X + Y);//\u6ce8\u610f\u76f8\u52a0size\n\t}else{\n\t\tbin.T[ti] = bin.upload(bin.T[ti],1,n,b,a);\n\t\tsiz.T[ti] = siz.upload(siz.T[ti],1,n,a,X + Y);\n\t}\n}\n\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i = 1;i <= n;i++){\n\t\tbin.st[i] = i;//\u4e00\u5f00\u59cb\uff0c\u6240\u6709\u70b9father\u662f\u81ea\u5df1\n\t}\n\tbin.T[0] = bin.build(1,n);\n\tfor(int i = 1;i <= n;i++){\n\t\tsiz.st[i] = 1;//\u6240\u6709\u70b9size\u4e3a1\n\t}\n\tsiz.T[0] = siz.build(1,n);\n\t\n\tint opt,x,y;\n\tfor(ti = 1;ti <= m;ti++){\n\t\tscanf(\"%d\",&opt);\n\t\tbin.T[ti] = bin.T[ti - 1];\n\t\tsiz.T[ti] = siz.T[ti - 1];//\u5148\u91cd\u7f6e\u4e00\u4e0b\uff0c\u5426\u5219\u53ef\u80fd\u51fa\u9505\n\t\tif(opt == 1){\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tmerge(x,y);\n\t\t}else if(opt == 2){\n\t\t\tscanf(\"%d\",&x);\n\t\t\tbin.T[ti] = bin.T[x];\n\t\t\tsiz.T[ti] = siz.T[x];\n\t\t}else{\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tif(find(x) == find(y)) printf(\"1\\n\");\n\t\t\telse printf(\"0\\n\");\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\u6309\u6811\u9ad8\u5408\u5e76\u7684\u8bdd\uff0c\u53ea\u8981\u628a$merge$\u51fd\u6570\u6539\u6210\u8fd9\u6837\u5c31\u884c\u4e86\n\n```cpp\nvoid merge(int x,int y){\n\tint a = find(x);\n\tint b = find(y);\n\tif(a == b) return;\n\tint X = siz.query(siz.T[ti],1,n,a),Y = siz.query(siz.T[ti],1,n,b);\n\tif(X <= Y){\n\t\tbin.T[ti] = bin.upload(bin.T[ti],1,n,a,b);\n\t\tif(X == Y) siz.T[ti] = siz.upload(siz.T[ti],1,n,b,X + 1);//\u53ea\u6709\u5728\u6811\u9ad8\u76f8\u540c\u65f6\uff0c\u65b0\u6811\u6811\u9ad8\u624d\u4f1a + 1\n\t}else{\n\t\tbin.T[ti] = bin.upload(bin.T[ti],1,n,b,a);\n\t\tif(X == Y) siz.T[ti] = siz.upload(siz.T[ti],1,n,a,Y + 1);\n\t}\n}\n```\n",
        "postTime": 1579765005,
        "uid": 49776,
        "name": "chenxinyang2006",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3402 \u3010\u3010\u6a21\u677f\u3011\u53ef\u6301\u4e45\u5316\u5e76\u67e5\u96c6\u3011"
    },
    {
        "content": "# \u591a\u6b21\u4fee\u6539 \u540c\u4e00\u7248\u672c\n\n\u672c\u9898\u89e3\u9002\u5408\u4f60\u5728\u770b\u4e86\u5176\u4ed6\u9898\u89e3\u5374\u611f\u89c9\u6709\u70b9\u6df7\u4e71\u7684\u65f6\u5019\\\n\n------------\n\n\u82e5$b$\u662f$a.b$\u4e2d\u6df1\u5ea6\u66f4\u5927\u7684\u70b9(a,b\u90fd\u662f\u8be5\u96c6\u5408\u7684\u4ee3\u8868\u5143\u7d20)\\\n\u6211\u4eec\u5e94\u8be5\u4f7f\\\n$father_{a}=b$\\\n\u5f53\u4e14\u4ec5\u5f53$deep_{a}==deep_{b}$\u65f6\uff0c\u9700\u8981\u4ee4\\\n$deep_{b}++$\\\n\u4f60\u4e5f\u8bb8\u53d1\u73b0\u4e00\u4e2a\u95ee\u9898\\\n\u6bcf\u6b21\u5408\u5e76\u65f6\uff0c\u4e0d\u4ec5\u9700\u8981\u4fee\u6539$a$\u7684$father$,\u53ef\u80fd\u8fd8\u9700\u8981\u66f4\u65b0\u65b0\u7684\u7236\u4eb2\u8282\u70b9\u7684$deep$\\\n\u800c\u5176\u4ed6\u9898\u89e3\u91cc\u9762\u5f88\u591a\u662f\u76f4\u63a5\u4fee\u6539\u539f\u6765\u7684\u7248\u672c\u7684$b$\u7684$deep$\n\n\u5373\u6211\u4eec\u6bcf\u6b21\u5408\u5e76\u53ef\u80fd\u9700\u8981\u591a\u4fee\u6539\u4e00\u6b21\uff0c\u6765\u4fdd\u8bc1\u6df1\u5ea6\u7684\u6b63\u786e\u9012\u589e\\\n\u82e5\u662f\u76f4\u63a5\u8c03\u7528\u4e24\u6b21\u4fee\u6539\u51fd\u6570\uff0c\u4e00\u822c\u7684\u5199\u6cd5\u5c31\u4f1a\u4ea7\u751f\u4e24\u4e2a\u7248\u672c\uff0c\\\n\u4f1a**\u591a\u6d88\u8017\u5f88\u591a\u7a7a\u95f4**\u3002\n\n\n\u4e8e\u662f\u6211\u4eec\u60f3\u5230\uff0c\u5e94\u8be5\u628a\u4e24\u6b21\u4fee\u6539\u5f53\u505a\n### \u540c\u4e00\u4e2a\u7248\u672c\n\n------------\n\n\u7b80\u800c\u8a00\u4e4b\uff0c\u5c31\u662f\u5224\u65ad\u5f53\u524d\u70b9\u662f\u65b0\u5efa\u4e00\u4e2a\u526f\u672c\uff0c\u8fd8\u662f\u76f4\u63a5\u4fee\u6539\\\n\u5f53\u6211\u4eec\u8bbf\u95ee\u5230\u4e00\u4e2a\u70b9\uff08\u4fee\u6539\u65f6\uff09\uff1a\n1. \u5f53\u524d\u7248\u672c\u65b0\u5efa\u7684\u70b9 \u4e0d\u9700\u590d\u5236\n2. \u65e7\u7248 \u9700\u8981\u590d\u5236\n\n\u4e8e\u662f\u60f3\u5230\u4fdd\u5b58\u4e00\u4e2a\u6807\u8bb0\uff08\u65f6\u95f4\u70b9\uff09\uff0c\u901a\u8fc7\u6bd4\u8f83\uff0c\u786e\u5b9a\u67d0\u70b9\u662f\u4ec0\u4e48\u65f6\u5019\u5efa\u7acb\u7684\u3002\\\n\u5728\u4fee\u6539\u51fd\u6570\u5f00\u5934\u52a0\u5165\u5982\u4e0b\u8bed\u53e5\uff1a\n```cpp\nvoid Modify(int &p, int L, int R, int x, int f,int d) {\n\tif (p <= last) {\n\t\ttree[++cnt] = tree[p];\n\t\tp = cnt;\n\t}\n    //...\u5176\u4ed6\u4e00\u822c\u64cd\u4f5c\n}\n```\n\n\u5728\u4e3b\u51fd\u6570\u4e2d\uff0c\u8be5\u7248\u672c\u7684\u7b2c\u4e00\u6b21\u4fee\u6539\u524d\uff0c\u52a0\u5165\u5982\u4e0b\u8bed\u53e5\uff1a\n```cpp\nlast = cnt;\n```\n\n\u62d3\u5c55\u7684\u8bdd\uff0c\u5982\u679c\u6211\u4eec\u628a\u6bcf\u6b21\u7684last\u90fd\u4fdd\u5b58\u8d77\u6765\uff0c\u8fd8\u53ef\u4ee5~~\u5feb\u901f\u5730~~\u786e\u5b9a\u67d0\u70b9\u662f\u54ea\u4e00\u6b21\u5efa\u7acb\u7684\uff0c\u4e5f\u8bb8\u4f1a\u6709\u7528\u5904\u3002",
        "postTime": 1575012318,
        "uid": 128771,
        "name": "\u738b\u9cb2\u9e4f",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3402 \u3010\u3010\u6a21\u677f\u3011\u53ef\u6301\u4e45\u5316\u5e76\u67e5\u96c6\u3011\u591a\u6b21\u4fee\u6539\u89c6\u4f5c\u540c\u4e00\u7248\u672c"
    },
    {
        "content": "# P3402 \u9898\u89e3\n\n[\u9898\u76ee\u4f20\u9001\u95e8 P3402](https://www.luogu.com.cn/problem/P3402)\n\n## \u9898\u76ee\u5927\u610f\n\u7ed9\u5b9a $n$ \u4e2a\u96c6\u5408\uff0c\u7b2c $i$ \u4e2a\u96c6\u5408\u5185\u521d\u59cb\u72b6\u6001\u4e0b\u53ea\u6709\u4e00\u4e2a\u6570\uff0c\u4e3a $i$\u3002\n\n\u6709 $m$ \u6b21\u64cd\u4f5c\u3002\u64cd\u4f5c\u5206\u4e3a $3$ \u79cd\uff1a\n\n - `1 a b` \u5408\u5e76 $a,b$ \u6240\u5728\u96c6\u5408\uff1b\n\n - `2 k` \u56de\u5230\u7b2c $k$ \u6b21\u64cd\u4f5c\uff08\u6267\u884c\u4e09\u79cd\u64cd\u4f5c\u4e2d\u7684\u4efb\u610f\u4e00\u79cd\u90fd\u8bb0\u4e3a\u4e00\u6b21\u64cd\u4f5c\uff09\u4e4b\u540e\u7684\u72b6\u6001\uff1b\n\n - `3 a b` \u8be2\u95ee $a,b$ \u662f\u5426\u5c5e\u4e8e\u540c\u4e00\u96c6\u5408\uff0c\u5982\u679c\u662f\u5219\u8f93\u51fa $1$\uff0c\u5426\u5219\u8f93\u51fa $0$\u3002\n\n## \u9898\u76ee\u5206\u6790\n\u9996\u5148\u6211\u4eec\u6765\u5b66\u4e00\u4e00\u4e2a\u975e\u5e38\u65b9\u4fbf\uff0c\u7b80\u6d01\uff0c\u4e14\u9ad8\u7aef\u7684\u4e1c\u897f\u3002\n\n\u5b83\u5c31\u662f `rope` \u3002\n\n\u4ec0\u4e48\u662f `rope` \uff1f\u5b83\u53ef\u4ee5\u5f53\u505a\u53ef\u6301\u4e45\u5316\u6570\u636e\u7ed3\u6784\u4f7f\u7528\uff0c\u5176\u5185\u90e8\u6784\u9020\u5219\u662f\u4e00\u4e2a\u5757\u72b6\u94fe\u8868\u3002\n\n\u8c03\u7528 `rope` \u7684\u65f6\u5019\u9700\u8981\u5934\u6587\u4ef6 `#include<ext/rope>`\n\n\u5f53\u7136\uff0c\u4ee5\u540e\u4f60\u8fd8\u4f1a\u5b66\u5230\u522b\u7684\u548c `rope` \u4e00\u6837\u7684\u64cd\u4f5c\uff0c\u5982\u679c\u4f60\u4e0d\u60f3\u80cc\u90a3\u4e48\u591a\u5934\u6587\u4ef6\u7684\u8bdd\uff0c\u53ef\u4ee5\u4f7f\u7528 `#include <bits/extc++.h>`\n\n\u6ce8\uff1a`#include<bits/stdc++.h>` \u5934\u6587\u4ef6\u5e76\u4e0d\u5305\u542b `#include <bits/extc++.h>` \u5934\u6587\u4ef6\u3002\n\n\u4ec5\u4ec5\u8fd9\u6837\u662f\u6ca1\u6709\u529e\u6cd5\u5b9a\u4e49 `rope` \u7684\u3002\n\n\u6211\u4eec\u8fd8\u9700\u8981\u8c03\u7528\u547d\u540d\u7a7a\u95f4\uff0c `using namespace __gnu_cxx;`\n\n\u6ce8\uff1a`__gnu_cxx` \u662f\u4e00\u4e2a\u65b0\u7684\u7a7a\u95f4\uff0c\u540c\u5934\u6587\u4ef6\uff0c\u5b83\u4e5f\u662f\u8131\u79bb\u4e86 `namespace std` \u5e93\u7684\u5b58\u5728\u3002\n\n\u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7 `__gnu_cxx::rope` \u6765\u5b9a\u4e49\u3002\n\n`rope` \u7684\u58f0\u660e\u4f7f\u7528\u65b9\u5f0f\u5982\u4e0b\uff1a\n\n```cpp\nrope<int> arr;\n\nstruct SegmentTree\n{\n   int l, r;\n   int id;\n};\nrope<node> t;\n\ncrope ch;//\u5373 rope char;\n```\n\n\u5728\u8fd9\u9053\u9898\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u4e86\u89e3 `rope` \u7684\u4e00\u4e2a\u5f88\u5f3a\u7684\u51fd\u6570\u529f\u80fd \uff1a `replace`\n\n`replace(p,x)` : \u4ece $rope$ \u7684\u4e0b\u6807 $p$ \u5f00\u59cb\u66ff\u6362\u6210\u6570\u7ec4 $x$ \uff0c$x$ \u7684\u957f\u5ea6\u4e3a\u4ece $p$ \u5f00\u59cb\u66ff\u6362\u7684\u4f4d\u6570\uff0c\u5982\u679c $p$ \u540e\u7684\u4f4d\u6570\u4e0d\u591f\u5c31\u8865\u8db3\u3002\n\n\u8fd9\u91cc\u63d2\u4e00\u53e5\uff0c`rope` \u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u53ef\u6301\u4e45\u5316\u6570\u7ec4\u3002\n\n\u90a3\u4e48\u653e\u5230\u8fd9\u4e2a\u9898\u5462\uff1f\n\n\u76f4\u63a5\u5199\u6b63\u5e38\u7684\u5e76\u67e5\u96c6\u6a21\u677f\u5c31\u884c\u4e86\u554a\uff01\n\n\u5b9e\u9645\u5199\u6cd5\u5f00\u4e00\u5806\u6570\u7ec4\uff0c\u66b4\u529b\u7ef4\u62a4\u5373\u53ef\uff0c\u76f8\u540c\u7684\u505a\u6cd5\u4e5f\u53ef\u4ee5\u5728 [P6166](https://www.luogu.com.cn/problem/P6166) \u4e2d\u5c1d\u8bd5\u3002\n\n## \u4ee3\u7801\n\u6b64\u9898\u6570\u636e\u8303\u56f4\u7565\u5927\uff0c\u9700\u8981\u5438\u6c27\n```cpp\n#include <bits/stdc++.h>\n#include <ext/rope>\n\n//#define int long long\n#define endl '\\n'\n#define rint register unsigned\n\nusing namespace __gnu_cxx;\nusing namespace std;\n\n#define IN stdin->_IO_read_ptr < stdin->_IO_read_end ? *stdin->_IO_read_ptr++ : __uflow(stdin)\n#define OUT(_ch) stdout->_IO_write_ptr < stdout->_IO_write_end ? *stdout->_IO_write_ptr++ = _ch : __overflow(stdout, _ch)\n\nconst int N = 2e5 + 5;\n\nunsigned f[N];\nunsigned r[N];\n\nvoid read(unsigned &x)\n{\n    x = 0;\n    char ch = IN;\n    while (ch < 47)\n        ch = IN;\n    while (ch > 47)\n        x = (x << 1) + (x << 3) + (ch & 15), ch = IN;\n}\n\nunsigned find(rope<unsigned> &fa, unsigned &i)\n{\n    unsigned f = fa[i];\n    return f == i ? i : find(fa, f);\n}\n\nvoid merge(rope<unsigned> &fa, unsigned &a, unsigned &b)\n{\n    a = find(fa, a);\n\tb = find(fa, b);\n\t\n    if (a == b)\n    {\n\t\treturn ;\n\t}\n    if (r[a] > r[b])\n    {\n        fa.replace(b, a);\t\t\n\t}\n    else\n    {\n        if (r[a] == r[b])\n        {\n            r[b]++;\t\t\t\n\t\t}\n        fa.replace(a, b);\n    }\n}\n\nsigned main()\n{\n    unsigned n, m, op, a, b;\n    read(n);\n\tread(m);\n    rope<unsigned> fa[m + 1];\n    \n\tfor (rint i = 1; i <= n; i++)\n\t{\n\t\tf[i] = i;\n\t}    \n    \n\tf[0] = 1;\n    fa[0] = rope<unsigned>(f);\n    \n    for (rint i = 1; i <= m; i++)\n    {\n        read(op);\n        \n        switch (op)\n        {\n        case 1:\n            fa[i] = fa[i - 1];\n            read(a);\n\t\t\tread(b);\n            merge(fa[i], a, b);\n            break;\n        case 2:\n            read(a);\n            fa[i] = fa[a];\n            break;\n        default:\n            fa[i] = fa[i - 1];\n            read(a); \n\t\t\tread(b);\n            OUT(find(fa[i], a) == find(fa[i], b) ? '1' : '0');\n            puts(\"\");\n        }\n    }\n    \n    return 0;\n}\n```\n\nupdate \uff082022.8.21\uff09 \uff1a \u611f\u8c22 @[\u4e1c\u706f](https://www.luogu.com.cn/user/160363) \u63d0\u4f9b\u7684\u5feb\u8bfb\u8ba9\u6b64\u4ee3\u7801\u5728\u5438\u6c27\u540e\u65e0\u538b\u529b\u901a\u8fc7\u6b64\u9898\uff08\u4e0d\u5438\u6c27\u53ef\u5f97 78pts\uff09",
        "postTime": 1658070893,
        "uid": 524911,
        "name": "\u5355\u5357\u677e",
        "ccfLevel": 4,
        "title": "P3402 \u53ef\u6301\u4e45\u5316\u5e76\u67e5\u96c6\u9898\u89e3"
    },
    {
        "content": "\u4f5c\u4e3a\u53ef\u6301\u4e45\u5316\u5927\u5bb6\u65cf\u7684\u4e00\u5458\uff0c\u9898\u89e3\u533a\u7adf\u7136\u6ca1\u6709\u591a\u5c11\u5728\u7ebf\u7684\u505a\u6cd5\uff0c\u771f\u662f\u53ef\u60b2\u554a ~~\u592a\u597d\u4e86\uff0c\u53ef\u4ee5\u4ea4\u9898\u89e3\u4e86~~\n\n#### [\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3402)\n\n\n\n------------\n\u76f8\u6bd4\u4e0e\u4e4b\u524d\u7684\u5e76\u67e5\u96c6\uff0c\u6211\u4eec\u591a\u51fa\u4e86\u8fd4\u56de\u4e4b\u524d\u7248\u672c\u7684\u64cd\u4f5c\u3002\n\n\u90a3\u4e48\u7248\u672c\u548c\u7248\u672c\u4e4b\u95f4\u7684\u6839\u672c\u5dee\u522b\u5c31\u662f $fa$ \u6570\u7ec4\u3002\n\n\u6211\u4eec\u8003\u8651\u5bf9 $fa$ \u6570\u7ec4\u8fdb\u884c\u53ef\u6301\u4e45\u5316\uff0c\u5177\u4f53\u7684\uff0c\u6211\u4eec\u5728\u5f00\u59cb\u64cd\u4f5c\u524d\u5efa\u7acb\u4e00\u68f5\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u3002\n\n\u7ebf\u6bb5\u6570\u7684\u53f6\u5b50 $[l,l]$ \u8868\u793a\u7684\u662f\u7f16\u53f7\u4e3a $l$ \u7684\u6570\u7684\u7236\u4eb2\u3002\n\n\u4f46\u662f\u8fd9\u6837\u662f\u4e0d\u591f\u7684\u3002\u8003\u8651\u539f\u672c\u7684\u5e76\u67e5\u96c6\u7684 $\\text{find}$ \u51fd\u6570\u3002\n\n```cpp\nint find(int now)\n{\n\tif(fa[now]==now)return now;\n\treutrn fa[now]=find(fa[now]);\n}\n```\n\n\u6211\u4eec\u77e5\u9053\uff0c\u5e73\u5e38\u65f6\u5019\u4f7f\u7528\u7684\u5e76\u67e5\u96c6\u4f18\u5316\u662f\u8def\u5f84\u538b\u7f29\uff0c\u67e5\u8be2\u590d\u6742\u5ea6\u662f\u5747\u644a $log$\n \u7684\u3002\n \n \u4f46\u662f\u5747\u644a\u5e76\u4e0d\u53ef\u4ee5\uff0c\u56e0\u4e3a\u6211\u4eec\u65e0\u6cd5\u4fdd\u8bc1\u67d0\u6b21\u67e5\u8be2\u590d\u6742\u5ea6\u4e0d\u4e3a $O(n)$\uff0c\u5982\u679c\u8fd9\u6837\u5bf9\u4e8e\u53ef\u6301\u4e45\u5316\u6765\u8bf4\u662f\u6bc1\u706d\u6027\u7684\uff0c\u5982\u679c\u4f60\u64cd\u4f5c\u4e00\u6b21 $O(n)$\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u80fd\u4f1a\u88ab\u8981\u6c42\u8fd4\u56de\u8fd9\u4e2a\u7248\u672c\uff0c\u518d\u6b21\u8fdb\u884c\u8fd9\u79cd~~\u4e0d\u8bb2\u6b66\u5fb7~~\u7684\u64cd\u4f5c\u3002\n \n\u6240\u4ee5\u6211\u4eec\u8981\u5bfb\u627e\u4e00\u79cd $find$ \u65b9\u5f0f\uff0c\u4f7f\u5f97\u6211\u4eec\u7684\u590d\u6742\u5ea6\u4e3a\u4e25\u683c $log$ \u7684\u3002\n\n\u8fd9\u65f6\u5019\uff0c\u6309\u79e9\u5408\u5e76\u5c31\u51fa\u73b0\u4e86\uff0c\u4ed6\u5c31\u6709 $log$ \u7684\u4f18\u7f8e\u590d\u6742\u5ea6\uff0c\u8fd8\u662f\u4e25\u683c\u7684\u3002\n\n\u5177\u4f53\u7684\uff0c\u6309\u79e9\u5408\u5e76\u6709\u591a\u91cd\u65b9\u5f0f\uff0c\n\n1. \u6309\u7167\u6df1\u5ea6\n\n2. \u6309\u7167\u5927\u5c0f\n\n3. \u968f\u673a\n\n\u597d\u7684\u6211\u4eec\u8003\u8651\u524d\u4e24\u4e2a~~\u56e0\u4e3a\u7b2c3\u4e2a\u88ab\u5361\u6389\u4e86~~\n\n\u8fd9\u91cc\u53ea\u8bb2\u6df1\u5ea6\uff0c\u56e0\u4e3a\u6bd4\u8f83\u597d\u7406\u89e3\uff0c\u4e00\u6b21\u67e5\u8be2\u7684\u590d\u6742\u5ea6\u5e94\u8be5\u4e3a $u\\to root$ \u7684\u8ddd\u79bb\uff0c\u867d\u7136\u8fd9\u662f\u68f5\u6811\uff0c\u4f46\u662f\u4e0d\u80fd\u4fdd\u8bc1~~\u90aa\u6076\u7684~~\u51fa\u9898\u4eba\u4e0d\u4f1a\u7ed9\u6211\u4eec\u4e00\u6761\u94fe\u5b50\u3002\n\n\n- \u6309\u7167\u6df1\u5ea6\uff1a\u6211\u4eec\u4e0d\u4f46\u8bb0\u5f55\u67d0\u4e2a\u70b9\u7684 $fa$ \u8fd8\u9700\u8981\u8bb0\u5f55\u8fd9\u4e2a\u70b9\u7684\u5b50\u6811\u7684\u6df1\u5ea6 $dep$\u3002\n\n\u5bf9\u4e8e\u4e00\u6b21\u64cd\u4f5c\u5408\u5e76 $u,v$\u3002\n\n\u6211\u4eec\u8ba9 $u=find(u),v=find(v)$\u3002\n\n\u8003\u8651\u628a\u4e24\u8005\u5408\u5e76\u8d77\u6765\uff08\u5047\u5b9a $\\color{red}{dep_u\\ge dep_v}$\uff09\n\n\u6211\u4eec\u663e\u7136\u5e94\u8be5\u628a $v$ \u7684\u5b50\u6811\u5408\u5e76\u5230 $u$ \u7684\u4e0b\u9762\u3002\n\n\u53ea\u6709\u8fd9\u6837\u624d\u80fd\u4fdd\u8bc1\u6df1\u5ea6\u5c3d\u53ef\u80fd\u7684\u5c0f\u3002\n\n\u6211\u4eec\u8003\u8651 $dep_u$ \u53d8\u6210\u4e86\u4ec0\u4e48\uff1f\n\n- \u5982\u679c $dep_u=dep_v$\uff0c\u90a3\u4e48\u6211\u4eec\u628a $v$ \u653e\u5230 $u$ \u7684\u4e0b\u65b9\uff0c$dep_v$ \u589e\u5927\u4e86 $1$\u3002\u7531\u4e8e $dep_u$ \u8868\u793a\u7684\u662f\u4ee5 $u$ \u4e3a\u6839\u8282\u70b9\u7684\u6df1\u5ea6\u6240\u4ee5 $dep_u=dep_v+1$\n\n- \u5982\u679c $dep_u>dep_v$ \u6df1\u5ea6\u4e0d\u53d8\u3002\n\n\u5982\u679c\u6309\u8fd9\u6837\u5408\u5e76\u7684\u987a\u5e8f\u7684\u8bdd\uff0c\u5168\u90e8\u5408\u5e76\u5b8c\uff0c\u6211\u4eec\u7684\u6811\u9ad8\u6700\u5927\u4e5f\u53ea\u6709 $log$\u3002\n\n\u6240\u4ee5\u590d\u6742\u5ea6\u4e3a\u4e25\u683c $log$\u3002\n\n\u90a3\u4e48\u5177\u4f53\u7684\uff0c\u5bf9\u4e8e\u4e00\u6b21\u4fee\u6539\uff0c\u6211\u4eec\u9700\u8981\u65b0\u5efa **$\\color{red}\\text{2}$** \u4e2a\u7248\u672c\u3002\n\n\u9996\u5148\u5c06\u8fd9\u4e2a\u7248\u672c\u4e2d\u7684 $fa_v$ \u53d8\u4e3a $u$\uff0c\u63a5\u7740\uff0c\u6211\u4eec\u9700\u8981\u4fee\u6539 $dep_u$\u3002\n\n### \u6ce8\u610f\uff01\n\n\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u65b0\u5efa\u7acb\u4e86\u4e24\u4e2a\u7248\u672c\uff01\uff01\uff01\uff01\n\n\u4e0d\u80fd\u8d2a\u5fc3\u7684\u5728\u4fee\u6539 $dep_u$ \u7684\u65f6\u5019\u76f4\u63a5\u5728\u539f\u672c\u7684\u7248\u672c\u4e0a\u4fee\u6539\u3002\n\n\u5982\u679c\u8fd9\u6837\u7684\u8bdd\u4f60\u4f1a\u83b7\u5f97 $88pts$ \u7684\u597d\u6210\u7ee9\u3002\n\n\u4e0a\u4ee3\u7801~\n\nps.\u590d\u6742\u5ea6\u8fd8\u662f\u5f88\u53ef\u4ee5\u7684\uff0c\u4e0d\u5f00O2\u4f9d\u7136\u5f88\u7a33\u3002\n\n### $\\text{CODE}$\n\n```cpp\n#include<bits/stdc++.h>\n#define N 300005\nusing namespace std;\nint read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nint n,m,now,to,cnt,rt[N];\nstruct tree\n{\n\tint ls,rs,fa,dep;\n}tr[N*20];\ninline int build(int l,int r)\n{\n\tint to=++cnt;\n\tif(l==r)\n\t{\n\t\ttr[to].fa=l;\n\t\treturn to;\n\t}\n\tint mid=(l+r)>>1;\n\ttr[to].ls=build(l,mid);\n\ttr[to].rs=build(mid+1,r);\n\treturn to;\n}\ninline int que(int now,int l,int r,int x)\n{\n\tif(l==r)return now;\n\tint mid=(l+r)>>1;\n\tif(mid>=x)return que(tr[now].ls,l,mid,x);\n\telse return que(tr[now].rs,mid+1,r,x);\n}\ninline int find(int now,int a)\n{\n\tint fa=que(rt[now],1,n,a);\n\tif(tr[fa].fa==a)return fa;\n\treturn find(now,tr[fa].fa);\n}\ninline int news(int now)\n{\n\tint to=++cnt;\n\ttr[to]=tr[now];\n\treturn to;\n}\ninline int hb(int now,int l,int r,int x,int f)\n{\n\tint to=news(now);\n\tif(l==r)\n\t{\n\t\ttr[to].fa=f;\n\t\treturn to;\n\t}\n\tint mid=(l+r)>>1;\n\tif(mid>=x)tr[to].ls=hb(tr[now].ls,l,mid,x,f);\n\telse tr[to].rs=hb(tr[now].rs,mid+1,r,x,f);\n\treturn to;\n}\ninline int add(int now,int l,int r,int x)\n{\n\tint to=news(now); \n\tif(l==r)\n\t{\n\t\ttr[to].dep++;\n\t\treturn to;\n\t}\n\tint mid=(l+r)>>1;\n\tif(mid>=x)tr[to].ls=add(tr[now].ls,l,mid,x);\n\telse tr[to].rs=add(tr[now].rs,mid+1,r,x);\n\treturn to;\n}\ninline void merge(int now,int a,int b)\n{\n\trt[now]=rt[now-1];\n\ta=find(now,a);b=find(now,b);\n\tif(tr[a].fa!=tr[b].fa)\n\t{\n\t\tif(tr[a].dep>tr[b].dep)swap(a,b);\n\t\trt[now]=hb(rt[now-1],1,n,tr[a].fa,tr[b].fa);\n\t\tif(tr[a].dep==tr[b].dep)rt[now]=add(rt[now],1,n,tr[b].fa);\n\t} \n}\ninline bool pan(int now,int a,int b)\n{\n\ta=find(now,a),b=find(now,b);\n\tif(tr[a].fa==tr[b].fa)return 1;\n\telse return 0;\n}\nint main()\n{\n\tn=read();m=read();\n\trt[0]=build(1,n);\n\tint op,a,b;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\top=read();a=read();\n\t\tif(op==1)\n\t\t{\n\t\t\tb=read();\n\t\t\tmerge(i,a,b);\n\t\t}\n\t\tif(op==2)rt[i]=rt[a];\n\t\tif(op==3)\n\t\t{\n\t\t\tb=read();\n\t\t\tif(pan(i-1,a,b))cout<<1<<\"\\n\";\n\t\t\telse cout<<0<<\"\\n\";\n\t\t\trt[i]=rt[i-1];\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1668135091,
        "uid": 331947,
        "name": "hegm",
        "ccfLevel": 0,
        "title": "P3402 \u53ef\u6301\u4e45\u5316\u5e76\u67e5\u96c6 \u9898\u89e3"
    },
    {
        "content": "[\u4e5f\u8bb8\u6709\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/zheyuanxie/p/persistent-union-find.html)\n\n## \u7b80\u8981\u9898\u610f\n\n\u4f60\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u5e76\u67e5\u96c6\uff0c\u652f\u6301\u7248\u672c\u56de\u9000\uff0c\u67e5\u8fde\u901a\u6027\uff0c\u5408\u5e76\u4e24\u4e2a\u70b9\u3002\n\n\u7279\u522b\u7684\uff0c\u6ca1\u8fdb\u884c\u4e00\u6b21\u64cd\u4f5c\u90fd\u8981\u65b0\u5efa\u4e00\u4e2a\u7248\u672c\u3002\n\n## \u524d\u7f6e\u77e5\u8bc6\n\n- \u53ef\u6301\u4e45\u5316\u6570\u7ec4\uff0c\u5982\u679c\u60a8\u4e0d\u4f1a\uff0c\u51fa\u95e8\u5de6\u8f6c [\u3010\u6a21\u677f\u3011\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811 1\uff08\u53ef\u6301\u4e45\u5316\u6570\u7ec4\uff09](https://www.luogu.com.cn/problem/P3919)\u3002\n- \u5e76\u67e5\u96c6\n\n## \u627e\u6839\uff08find\uff09\n\n\u73b0\u5728\u6211\u4eec\u6765\u8003\u8651\u5982\u4f55find\u3002\n\n\u9996\u5148\u6211\u4eec\u6765\u7814\u7a76\u4ee5\u4e0b\u6b63\u5e38\u7684\u5e76\u67e5\u96c6\u662f\u600e\u4e48\u5199\u7684\uff08\u4e0d\u52a0\u4efb\u4f55\u4f18\u5316\uff09:\n\n```cpp\nint find(int x){\n\tif(fa[x]==x){\n\t\treturn x;\n\t}\n\telse{\n\t\treturn find(fa[x]);\n\t}\n}\n```\n\n\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06 `fa` \u66ff\u6362\u6210\u7528\u53ef\u6301\u4e45\u5316\u6570\u7ec4\u7ef4\u62a4\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5b9e\u73b0\u53ef\u6301\u4e45\u5316\u4e86\u3002\uff08\u663e\u7136\uff09\n\n## \u5408\u5e76\uff08merge\uff09\n\n\u540c\u4e0a\uff0c\u6211\u4eec\u7814\u7a76\u4e00\u4e0b\u6b63\u5e38\u7684\u5e76\u67e5\u96c6\u662f\u600e\u4e48\u5199\u7684\uff08\u540c\u6837\uff0c\u4e0d\u52a0\u4efb\u4f55\u4f18\u5316\uff09\uff1a\n\n```cpp\nvoid merge(int x,int y){\n\tfa[find(x)]=find(y); // \u5c06 x \u5408\u5e76\u5230 y \u4e0a\u3002\n}\n```\n\n\u5927\u5bb6\u53ef\u80fd\u56de\u60f3\uff0c\u90a3\u6211\u4e5f\u5427 `fa` \u6539\u6210\u53ef\u6301\u4e45\u5316\u7684\u4e0d\u5c31\u884c\u4e86\u5417\uff1f\n\n\u5982\u679c\u8fd9\u6837\u5b50\u2026\u2026\n\n## \u5408\u5e76\u7684\u4f18\u5316\n\n\u5982\u679c\u76f4\u63a5\u66b4\u529b\u5408\u5e76\uff0c\u90a3\u4e48\u4f1aTLE\u3002\u56e0\u4e3a\u94fe\u5c31\u53ef\u4ee5\u5c06\u4f60\u7684 `find` \u8f7b\u677e\u5361\u5230 $O(n\\log n)$\u3002\n\n\u56de\u5fc6\u4e00\u4e0b\u5e76\u67e5\u96c6\u7684\u4f18\u5316\uff0c\u6709\u4e0b\u9762\u8fd9\u51e0\u79cd\u65b9\u5f0f:\n\n- \u8def\u5f84\u538b\u7f29\n- \u6309\u79e9\u5408\u5e76\n\n\u9996\u5148\uff0c\u4e0d\u80fd\u8def\u5f84\u538b\u7f29\uff0c\u56e0\u4e3a\u8def\u5f84\u538b\u7f29\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u5747\u644a\u7684\uff0c\u53ef\u4ee5\u88ab\u4eba\u5361\u5230 $O(n\\log n)$\u3002\uff08\u540c\u6837\uff0c\u57fa\u4e8e\u5747\u644a\u590d\u6742\u5ea6\u7684\u73c2\u6735\u8389\u6811\u3001Splay\u3001\u66ff\u7f6a\u7f8a\u6811\u90fd\u4e0d\u80fd\u7b80\u5355\u7684\u53ef\u6301\u4e45\u5316\uff09\n\n\u5176\u6b21\u6211\u4eec\u8003\u8651\u6309\u79e9\u5408\u5e76\uff0c\u5176\u4e2d\u7684\u201c\u79e9\u201d\u6709\u4e0b\u9762\u51e0\u79cd\uff1a\n\n- \u968f\u673a\uff0c\u7b49\u5230\u5408\u5e76\u65f6\u4fee\u6539\uff0c\u5c0f\u7684\u5408\u5e76\u5230\u5927\u7684\u3002\n- \u6309\u5b50\u6811\u5927\u5c0f\uff0c\u5c0f\u7684\u5408\u5e76\u5230\u5927\u7684\u3002\n- \u6309\u5b50\u6811\u6700\u5927\u6df1\u5ea6\uff08\u5c31\u662f\u5b50\u6811\u6811\u9ad8\uff09\uff0c\u5c0f\u7684\u5408\u5e76\u5230\u5927\u7684\u3002\n\n\u968f\u673a\u65b9\u6848\u8c8c\u4f3c\u88ab\u4ebaHack\u4e86\u3002\u6211\u4eec\u5c31\u7528\u7b2c\u4e8c\u4e2a\u5427~~\uff08\u56e0\u4e3a\u7b2c\u4e09\u4e2a\u4e0d\u4f1a\u5199\uff09~~\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53c8\u8981\u5f00\u4e00\u4e2a\u53ef\u6301\u4e45\u5316\u6570\u7ec4\uff08\u5efa\u8bae\u7528\u7ed3\u6784\u4f53\u5c01\u88c5\uff09\uff0c\u7ef4\u62a4\u5b50\u6811\u5927\u5c0f\uff0c\u8bb0\u5f97\u5408\u5e76\u540e\u6211\u4eec\u66f4\u65b0\u4e00\u4e0b\uff08\u5c31\u662f\u5c06\u65b0\u7684\u6839\u7684\u5b50\u6811\u5927\u5c0f\u52a0\u4e0a\u65e7\u7684\u6839\u7684\u5b50\u6811\u5927\u5c0f\uff09\u3002\n\n\u5bf9\u4e8e\u8bc1\u660e\u8fc7\u7a0b\uff0c[@chenxinyang2006](https://www.luogu.com.cn/blog/chenxinyang2006/solution-p3402) \u7684\u9898\u89e3\u5df2\u7ecf\u5199\u7684\u5f88\u6e05\u695a\u4e86\uff0c\u6211\u5c31\u4e0d\u8d58\u8ff0\u4e86\u3002\n\n## \u5b9e\u73b0\u64cd\u4f5c\u4e0e\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790\n\n- \u5408\u5e76\u5c31\u7528\u4e0a\u9762\u4ecb\u7ecd\u7684\u3002\n- \u67e5\u8fde\u901a\u6027\u6211\u4eec\u5c31\u627e\u4e24\u4e2a\u8282\u70b9\u7684\u6839\uff0c\u770b\u5b83\u4eec\u662f\u4e0d\u662f\u4e00\u6837\u7684\u3002\n- \u56de\u9000\u7248\u672c\u6211\u4eec\u5c31\u590d\u5236\u4e00\u4e2a\u5230\u5f53\u524d\u7248\u672c\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u53ef\u6301\u4e45\u5316\u6570\u7ec4\u8bfb\u5199\u590d\u6742\u5ea6\u90fd\u662f $O(\\log n)$\uff0c\u90a3\u4e48\uff1a\n\n- \u56de\u9000\u7248\u672c\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(1)$ \u7684\uff08\u56e0\u4e3a\u53ea\u8981\u666e\u901a\u6570\u7ec4\u8d4b\u503c\uff09\u3002\n- \u627e\u6839\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u672c\u8eab\u662f $O(\\log n)$ \uff08\u4f18\u5316\u4e86\uff09\uff0c\u4e58\u4e0a\u53ef\u6301\u4e45\u5316\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f $O(\\log^{2}n)$\u3002\n- \u6240\u4ee5\uff0c\u67e5\u8fde\u901a\u6027\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(\\log^{2} n)$\u3002\n- \u5408\u5e76\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u662f $O(\\log^{2}n)$\uff08\u74f6\u9888\u5728\u627e\u6839\uff09\u3002\n\n\u6574\u4f53\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n+m\\log^{2}n)$\u3002\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n## \u4ee3\u7801\n\n\u672c\u4ee3\u7801\u5c01\u88c5\u4e86\u53ef\u6301\u4e45\u5316\u6570\u7ec4\u548c\u5e76\u67e5\u96c6\uff0c\u4f9b\u5927\u5bb6\u53c2\u8003\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint n,m;\n\nnamespace PersistentUnionFind{\n\tstruct PersistentArray {\n#define mid ((l+r)>>1)\n\t\tconst static int SIZE = 1e5 + 5;\n\t\tstruct {\n\t\t\tint l, r, v;\n\t\t} t[SIZE * 25];\n\t\tint top;\n\t\tint root[SIZE * 25];\n\t\tint a[SIZE];\n\t\tint newnode(int i) {\n\t\t\tt[++top] = t[i];\n\t\t\treturn top;\n\t\t} \n\t\tint build(int i, int l, int r) {\n\t\t\ti = (++top);\n\t\t\tif (l == r) {\n\t\t\t\tt[i].v = a[l];\n\t\t\t\treturn i;\n\t\t\t}\n\t\t\tt[i].l = build(t[i].l, l, mid);\n\t\t\tt[i].r = build(t[i].r, mid + 1, r);\n\t\t\treturn i;\n\t\t} \n\t\tint update(int i, int l, int r, int p, int val) {\n\t\t\ti = newnode(i);\n\t\t\tif (l == r) {\n\t\t\t\tt[i].v = val;\n\t\t\t\treturn i;\n\t\t\t}\n\t\t\tif (p <= mid) {\n\t\t\t\tt[i].l = update(t[i].l, l, mid, p, val);\n\t\t\t} else {\n\t\t\t\tt[i].r = update(t[i].r, mid + 1, r, p, val);\n\t\t\t}\n\t\t\treturn i;\n\t\t} \n\t\tint query(int i, int l, int r, int p) {\n\t\t\tif (l == r) {\n\t\t\t\treturn t[i].v;\n\t\t\t}\n\t\t\tif (p <= mid) {\n\t\t\t\treturn query(t[i].l, l, mid, p);\n\t\t\t} else {\n\t\t\t\treturn query(t[i].r, mid + 1, r, p);\n\t\t\t}\n\t\t} \n\t\tinline int Assign(int i, int version, int p, int val) {\n\t\t\treturn update(root[version], 1, n, p, val);\n\t\t} \n\t\tinline int Get(int i, int version, int p) {\n\t\t\treturn query(root[version], 1, n, p);\n\t\t}\n\t\tvoid copyVersion(int new_,const int dst){\n\t\t\troot[new_]=root[dst];\n\t\t}\n\t\tvoid newVersionFromPoint(int pos,int val){\n\t\t\troot[pos]=val;\n\t\t}\n\t} fa,siz;\n\tint find(int x,int version){\n\t    if(fa.Get(114514,version,x)==x){\n\t        return x;\n\t    }\n\t\telse{\n\t\t    return find(fa.Get(1919810,version,x),version);\n\t\t}\n\t}\n\tvoid merge(int x,int y,int version){\n\t\tint fx=find(x,version),fy=find(y,version);\n\t\tif(fx==fy)return;\n\t\tint xsiz=siz.Get(114514,version,fx),ysiz=siz.Get(1919810,version,fy);\n\t\tif(xsiz<=ysiz){\n\t\t\tfa.newVersionFromPoint(version,fa.Assign(114514,version,fx,fy));\n\t\t\tsiz.newVersionFromPoint(version,siz.Assign(114514,version,fy,xsiz+ysiz));\n\t\t}\n\t\telse{\n\t\t\tfa.newVersionFromPoint(version,fa.Assign(114514,version,fy,fx));\n\t\t\tsiz.newVersionFromPoint(version,siz.Assign(114514,version,fx,xsiz+ysiz));\n\t\t}\n\t}\n\tbool same(int x,int y,int version){\n\t\treturn find(x,version)==find(y,version);\n\t}\n}\n\nsigned main(){\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++){\n\t\tPersistentUnionFind::fa.a[i]=i;\n\t\tPersistentUnionFind::siz.a[i]=1;\n\t}\n\tPersistentUnionFind::fa.newVersionFromPoint(0,PersistentUnionFind::fa.build(1,1,n));\n\tPersistentUnionFind::siz.newVersionFromPoint(0,PersistentUnionFind::siz.build(1,1,n));\n\tfor(int i=1;i<=m;i++){\n\t\tint op,x,y;\n\t\tcin>>op>>x;\n\t\tPersistentUnionFind::fa.copyVersion(i,i-1);\n\t\tPersistentUnionFind::siz.copyVersion(i,i-1);\n\t\tif(op==1){\n\t\t\tcin>>y;\n\t\t\tPersistentUnionFind::merge(x,y,i);\n\t\t}\n\t\tif(op==2){\n\t\t\tPersistentUnionFind::fa.copyVersion(i,x);\n\t\t\tPersistentUnionFind::siz.copyVersion(i,x);\n\t\t}\n\t\tif(op==3){\n\t\t\tcin>>y;\n\t\t\tcout<<PersistentUnionFind::same(x,y,i)<<'\\n';\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n[AC Record](https://www.luogu.com.cn/record/84916737)",
        "postTime": 1661260225,
        "uid": 413065,
        "name": "xiezheyuan",
        "ccfLevel": 5,
        "title": "\u53ef\u6301\u4e45\u5316\u5e76\u67e5\u96c6\u5b66\u4e60\u7b14\u8bb0 | \u9898\u89e3P3402 \u53ef\u6301\u4e45\u5316\u5e76\u67e5\u96c6"
    },
    {
        "content": "# \u53ef\u6301\u4e45\u5316DSU #\n### \u9898\u76ee\u5927\u610f ###\n\n\u6b64\u9898\u9700\u8981\u4f60\u7ef4\u62a4\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u652f\u6301\u5408\u5e76\u3001\u67e5\u8be2\u662f\u5426\u5728\u540c\u4e00\u96c6\u5408\u3001\u56de\u6eaf\u5386\u53f2\u7248\u672c\u7b49\u64cd\u4f5c\u3002\n\u8fd9\u9898\u7684\u5176\u5b83\u9898\u89e3\u8bb2\u7684\u5f88\u6e05\u695a\u3002\u57fa\u672c\u601d\u60f3\u5c31\u662f\u5229\u7528\u53ef\u6301\u4e45\u5316\u6570\u7ec4\u7ef4\u62a4\u6bcf\u4e2a\u8282\u70b9\u7684father\uff0c \u7136\u540e\u66b4\u529b\u67e5\u627e\uff0c\u6309\u6df1\u5ea6\u5408\u5e76\u4f18\u5316\u590d\u6742\u5ea6\u3002\u8fd9\u91cc\u4e0d\u4e00\u4e00\u8d58\u8ff0\u3002\n### \u5fc3\u8def\u5386\u7a0b ###\n\n\u4e00\u5f00\u59cb\u770b\u5230\u8fd9\u9053\u9898\u7684\u65f6\u5019\u4e5f\u662f\u601d\u8def\u4e5f\u662f\u76f4\u63a5\u4e0a\u6b63\u8f68\u4e86\uff0c\u53ea\u4e0d\u8fc7\u6f0f\u6389\u4e86\u6309\u6df1\u5ea6\u5408\u5e76\uff0c\u8c03\u4e86\u5927\u534a\u5929\u7684TLE\uff0c\u7ffb\u9898\u89e3\u624d\u77e5\u9053\u9700\u8981\u6309\u6df1\u5ea6\u5408\u5e76\u624d\u80fd\u4fdd\u8bc1\u590d\u6742\u5ea6\u3002\u4f46\u5f53\u65f6\u611f\u89c9\u7ef4\u62a4\u8d77\u6765\u5f88\u9ebb\u70e6\uff0c\u60f3\u627e\u4e00\u7bc7\u4e0d\u6309\u79e9\u5408\u5e76\u7684\u9898\u89e3\u5374\u627e\u4e0d\u5230\uff0c\u6700\u540e\u81ea\u5df1\u53c2\u7167Treap\u7684\u601d\u8def\u778eyy\u51fa\u6765\u4e86\u4e00\u79cd\u4e0d\u7528\u6309\u79e9\u5408\u5e76\u7684\u89e3\u6cd5\u3002\n### \u89e3\u6cd5 ###\n\n\u968f\u673a\u5316\uff01\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a\u53d8\u91cf$d$\uff0c\u5176\u503c\u968f\u673a\uff0c\u5728\u521d\u59cb\u5316\u65f6\u8d4b\u503c\uff0c\u7136\u540e\u6bcf\u6b21\u5408\u5e76\u7684\u65f6\u5019\u6309\u7167$d$\u503c\u5c0f\u7684\u5408\u5e76\u5230$d$\u503c\u5927\u7684\u4e0a\u9762\uff0c\u7ef4\u62a4\u8d77\u6765\u5341\u5206\u65b9\u4fbf\uff0c\u5747\u644a\u590d\u6742\u5ea6\u4e5f\u662f$O(n \\log^{2} n)$\n### code ###\n```\n\nconst ll N=1e5+5, M=2e5+5;\n\nll n, m;\nll rt[M];\n\nnamespace seg{\n\tll lc[M<<5], rc[M<<5], f[M<<5], d[M<<5], cnt;  \n\t\n\tinline void build(ll &p, ll l, ll r){\n\t\tif(!p) p=++cnt;\n\t\tif(l==r) return (void) (f[p]=l, d[p]=rand());  //\u968f\u673a\u5316\u8d4b\u503cd\u662f\u7cbe\u9ad3\n\t\tll mid=l+r>>1;\n\t\tbuild(lc[p], l, mid);build(rc[p], mid+1, r);\n\t}\n\t\n\tinline ll getf(ll p, ll l, ll r, ll k, ll &d, ll ffa){\n\t\tif(l==r){\n\t\t\t++d;\n\t\t\tif(f[p]==l) return l;\n\t\t\treturn getf(ffa, 1, n, f[p], d, ffa);\n\t\t}\n\t\tll mid=l+r>>1;\n\t\tif(k<=mid) return getf(lc[p], l, mid, k, d, ffa);\n\t\telse return getf(rc[p], mid+1, r, k, d, ffa);\n\t}\n\t\n\tinline void update(ll &p, ll fa, ll l, ll r, ll k, ll ffa){\n\t\tp=++cnt;\n\t\tlc[p]=lc[fa], rc[p]=rc[fa];\n\t\tif(l==r) return (void) (f[p]=ffa, d[p]=rand()*rand());\n\t\tll mid=l+r>>1;\n\t\tif(k<=mid) update(lc[p], lc[fa], l, mid, k, ffa);\n\t\telse update(rc[p], rc[fa], mid+1, r, k, ffa);\n\t}\n\t\n\tinline ll get(ll p, ll l, ll r, ll k){\n\t\tif(l==r) return p;\n\t\tll mid=l+r>>1;\n\t\tif(k<=mid) return get(lc[p], l, mid, k);\n\t\telse return get(rc[p], mid+1, r, k);\n\t}\n\t\n\tinline void merge(ll k, ll x, ll y){\n\t\tll dx=0,dy=0;\n\t\tll fx=getf(rt[k-1], 1, n, x, dx, rt[k-1]), fy=getf(rt[k-1], 1, n, y, dy, rt[k-1]);\n\t\tif(fx==fy) return (void) (rt[k]=rt[k-1]);\n\t\tif(d[get(rt[k-1], 1, n, fx)]>d[get(rt[k-1], 1, n, fy)]) swap(fx, fy);\n\t\tupdate(rt[k], rt[k-1], 1, n, fx, fy);\n\t}\n\t\n\tinline void check(ll k,ll x,ll y){\n\t\trt[k]=rt[k-1];\n\t\tll dx=0;\n\t\twriteln(getf(rt[k], 1, n, x, dx, rt[k])==getf(rt[k], 1, n, y, dx, rt[k]));\n\t}\n}\nll nouse;\nint main(){\n\tsrand(time(0)); srand(rand());\n\tread(n); read(m);\n\tseg::build(rt[0],1,n);\n\tfor(R ll i=1, op, x, y, k; i<=m; i++){\n\t\tread(op);\n\t\tif(op==2){\n\t\t\tread(k);\n\t\t\trt[i]=rt[k];\n\t\t}\n\t\telse{\n\t\t\tread(x);read(y);\n\t\t\tif(op==1) seg::merge(i, x, y);\n\t\t\telse seg::check(i, x, y);\n\t\t}\n\t}\n}\n\n\n```",
        "postTime": 1602673601,
        "uid": 220285,
        "name": "Saber_Master",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3402 \u3010\u53ef\u6301\u4e45\u5316\u5e76\u67e5\u96c6\u3011"
    },
    {
        "content": "orz [TPLY](https://www.luogu.org/blog/88OvO88/solution-p3402) \u5de8\u4f6c\uff0c\u9898\u89e3\u8bb2\u7684\u633a\u597d\u7684\u3002\n\n\u8fd9\u91cc\u91cd\u70b9\u68b3\u7406\u4e00\u4e0b\u601d\u8def\uff0c\u505a\u4e00\u4e2a\u5c0f\u5c0f\u7684\u8865\u5145\u5427\u3002\n\n\u5199\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\uff0c\u53f6\u5b50\u8282\u70b9\u7ef4\u62a4\u6bcf\u4e2a\u4f4d\u7f6e\u7684fa\uff0c\u5229\u7528\u6bcf\u6b21\u53ea\u66f4\u65b0\u4e00\u4e2a\u8282\u70b9\u7684\u7279\u6027\uff0c\u6bcf\u6b21\u63d2\u5165$logN$\u4e2a\u8282\u70b9\uff0c\u8fd9\u4e00\u90e8\u5206\u601d\u8def\u8fd8\u662f\u5f88\u8f7b\u677e\u3002\u5173\u4e8e\u6b64\u90e8\u5206\u7684\u5176\u5b83\u95ee\u9898\u53ef\u4ee5\u53c2\u8003\u4e0b\u6211\u7684[\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u603b\u7ed3](http://www.cnblogs.com/flashhu/p/8297581.html)\n\n\u4e00\u5f00\u59cb\uff0c\u5199\u60ef\u4e86\u5e38\u89c4\u5e76\u67e5\u96c6\u3001\u7528\u60ef\u4e86\u8def\u5f84\u538b\u7f29\u7684\u6211\uff0c\u4ee5\u4e3a\u5728\u8fd9\u4e00\u9898\u91cc\u4e5f\u8981\u8fd9\u4e48\u641e\u3002~~\u6211\u5bf9\u6211\u7684naive\u771f\u662f\u592a\u611f\u52a8\u4e86~~\n\n\u8bd5\u60f3\u4e00\u4e0b\uff0c\u56e0\u4e3a\u8def\u5f84\u538b\u7f29\u65f6\uff0c\u518d\u6b21\u8c03\u7528getf\u540e\uff0c\u662f\u8981\u66f4\u65b0\u4e00\u90e8\u5206\u503c\u7684\u3002\u5728\u6570\u7ec4\u4e0a\u641e\u8fd9\u4e9b\u64cd\u4f5c\u5012\u662f\u633a\u5feb\uff0c\u7136\u800c\u5728\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u91cc\u5462\uff1f\u6bcf\u6b21\u627e\u4e00\u4e2afa\u8981$log$\u6b21\uff0c\u628a\u8fd9\u4e2a\u8282\u70b9\u66f4\u65b0\u53c8\u8981\u65b0\u5efalog\u4e2a\u8282\u70b9\uff0c\u4e00\u5171\u8981\u5faa\u73af\u627e\u4e0d\u6ee1log\u6b21\uff0c\u7406\u8bba\u4e0a\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(Mlog^2N)$\u7684\uff0c\u4f46\u7a7a\u95f4\u4e5f\u662fO$(Mlog^2N)$\u7684\u554a\uff0c\u4e58\u4e2a\u7cfb\u6570$(Mlog^2N\u00d7sizeof(int)\u00d74\\approx 800MB$,\u5b9e\u9645\u4e0d\u6ee1$)$\uff0c\u968f\u4fbf\u7b97\u7b97\u5c31\u8981\u70b8\u7a7a\u95f4\u4e86\u3002\u3002\u3002\u3002\u3002\u3002\n\n\u90a3\u600e\u4e48\u529e\uff1f\u53bb\u6389\u8def\u5f84\u538b\u7f29\u4e0d\u5c31\u5f97\u5566\uff01\u5e76\u67e5\u96c6\u7684\u6309\u79e9\u5408\u5e76\u4e5f\u662f\u5f88\u4f18\u79c0\u7684\u65b9\u6cd5\uff0c\u6bcf\u6b21getf\u4e5f\u53ea\u9700\u8981$log$\u6b21\uff01\u65f6\u95f4\u590d\u6742\u5ea6$O(Mlog^2N)$\u5e76\u6ca1\u6709\u53d8\u3002\u7136\u540e\u6bcf\u6b21\u5408\u5e76\u65f6\u53ea\u9700\u8981\u66f4\u65b0\u4e00\u4e2a\u70b9\uff0c\u7a7a\u95f4\u4e0d\u5c31\u7701\u4e0b\u6765\u4e86\u4e48\uff1f\u7a7a\u95f4\u590d\u6742\u5ea6$O(MlogN)$\u3002\n\n\u4ee5\u4e0b\u662f\u4ee3\u7801\uff0c\u6570\u7ec4\u7248\uff0c\u53f6\u5b50\u8282\u70b9\u4fe1\u606f\u7528\u7ed3\u6784\u4f53\u653e\u4e86\u4e00\u4e0b\uff0c\u7565\u7701\u70b9\u7a7a\u95f4\u5427\u3002\u3002\u3002\n\n~~\u592a\u5f31\u4e86\uff0c\u4e0d\u4f1a\u5c01\u88c5\uff0c\u975e\u9012\u5f52\u7248\uff0c\u53ef\u80fd\u7565\u4e11\uff0c\u89c1\u8c05~~\n```\n#include<cstdio>\n#define R register int\n#define gc while(*++p<'0')\n#define in(z) gc;z=*p&15;while(*++p>='0')z*=10,z+=*p&15\n#define copy(id) lc[rt[i]=++cnt]=lc[rt[id]],rc[cnt]=rc[rt[id]];\n//\u76f4\u63a5\u590d\u5236\u7248\u672c\uff0c\u4e0d\u505a\u6539\u52a8\nconst int N=200009,M=4000009;\nchar I[M];\nint n,i,cnt,cntl,rt[N],lc[M],rc[M],pos[M];\n//cnt\u7ebf\u6bb5\u6811\u8282\u70b9\uff0ccntl\u53f6\u5b50\u8282\u70b9\uff0cpos\u8bb0\u5f55\u5bf9\u5e94\u53f6\u5b50\u8282\u70b9\u5728\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\nstruct LEAF{\n    int fa,dep;\n}leaf[N<<2];//\u53f6\u5b50\u8282\u70b9\u4fe1\u606f\uff0cdep\u7528\u4e8e\u6309\u79e9\u5408\u5e76\ninline LEAF*getf(R k){\n    R u,l,r,m;\n    while(1){\n        u=rt[i-1],l=1,r=n;\n        while(l<r)\n        {\n            m=(l+r)>>1;\n            if(k<=m)r=m,u=lc[u];\n            else  l=m+1,u=rc[u];\n        }\n        if(k==leaf[pos[u]].fa)break;\n        k=leaf[pos[u]].fa;//\u5faa\u73af\u627efa\n    }\n    return&leaf[pos[u]];//\u8fd4\u56de\u6307\u9488\u65b9\u4fbf\u540e\u7eed\u64cd\u4f5c\n}\nvoid build(R&u,R l,R r){//\u5efa\u521d\u59cb\u7ebf\u6bb5\u6811\n    u=++cnt;\n    if(l==r){\n        leaf[pos[u]=++cntl]=(LEAF){l,0};\n        return;\n    }\n    R m=(l+r)>>1;\n    build(lc[u],l,m),build(rc[u],m+1,r);\n}\ninline void insert(R*u,R v,R k,LEAF newl){//\u66f4\u65b0\u8282\u70b9\n    R l=1,r=n,m;\n    while(l<r)\t{\n        *u=++cnt;\n        m=(l+r)>>1;\n        if(k<=m)r=m,rc[*u]=rc[v],u=&lc[*u],v=lc[v];\n        else  l=m+1,lc[*u]=lc[v],u=&rc[*u],v=rc[v];\n    }\n    leaf[pos[*u=++cnt]=++cntl]=newl;\n}\nint main(){\n    fread(I,1,sizeof(I),stdin);\n    register char*p=I-1;\n    register LEAF*af,*bf,*tmp;\n    R m,a,b;\n    in(n);in(m);\n    build(rt[0],1,n);\n    for(i=1;i<=m;++i){\n        gc;\n        switch(*p){\n        case '1':in(a);in(b);\n            af=getf(a),bf=getf(b);\n            if(af->fa==bf->fa){copy(i-1);break;}//\u5df2\u5408\u5e76\uff0c\u8df3\u8fc7\u64cd\u4f5c\n            if(af->dep>bf->dep)tmp=af,af=bf,bf=tmp;//\u6309\u79e9\u5408\u5e76\uff0c\u786e\u5b9abf\u4e3a\u6df1\u5ea6\u66f4\u5927\u7684\n    \t\tinsert(&rt[i],rt[i-1],af->fa,(LEAF){bf->fa,af->dep});\n            if(af->dep==bf->dep)insert(&rt[i],rt[i],bf->fa,(LEAF){bf->fa,bf->dep+1});//\u6ce8\u610f\u66f4\u65b0\u6df1\u5ea6\n            break;\n        case '2':in(a);copy(a);break;\n        case '3':in(a);in(b);copy(i-1);\n            putchar((getf(a)->fa==getf(b)->fa)|'0');\n            putchar('\\n');\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1517830838,
        "uid": 61325,
        "name": "FlashHu",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3402 \u3010\u3010\u6a21\u677f\u3011\u53ef\u6301\u4e45\u5316\u5e76\u67e5\u96c6\u3011"
    },
    {
        "content": "\u9898\u89e3\u91cc\u597d\u591a\u79bb\u7ebf\u505a\u6cd5\u54e6\uff0c\u63d0\u4f9b\u4e00\u4e2a\u5728\u7ebf\u4e14\u4e0d TLE \u7684\u505a\u6cd5\u3002\n\n\u4e4b\u524d\u7684\u4f1e\u5175\u505a\u6cd5\u5728\u6539\u4e86\u6570\u636e\u540e\u5c31 TLE \u4e86\uff0c\u76ee\u524d\u4e0d\u5f00\u6c27\u80fd\u8fc7\u3002\n\n## \u9898\u9762\u5927\u610f\n\n\u7ed9\u5b9a $n$ \u4e2a\u96c6\u5408\uff0c\u8981\u652f\u6301\u5408\u5e76\u4e24\u4e2a\u96c6\u5408\uff0c\u56de\u6eaf\u7248\u672c\uff0c\u67e5\u8be2\u4e24\u70b9\u662f\u5426\u5728\u540c\u4e00\u96c6\u5408\u3002\n\n$1\\leq n\\leq 10^5,1\\leq m\\leq2\\times 10^5$\n\n## \u9898\u76ee\u5206\u6790\n\n\u9996\u5148\u6211\u4eec\u6ce8\u610f\u5230\u8fd9\u9053\u9898\u7684\u9898\u76ee\u540d\u5b57\uff0c\u90a3\u4e48\u81ea\u7136\u800c\u7136\u60f3\u5230\u5c06\u5e76\u67e5\u96c6\u53ef\u6301\u4e45\u5316\uff0c\u5177\u4f53\u600e\u4e48\u505a\u5462\uff1f\u6211\u4eec\u4e0d\u4ec5\u9700\u8981\u5c06\u5e76\u67e5\u96c6\u6570\u7ec4\u53ef\u6301\u4e45\u5316\u4e86\uff0c\u8fd8\u9700\u8981\u8003\u8651\u5408\u5e76\u4e24\u4e2a\u5e76\u67e5\u96c6\u7684\u65f6\u5019\u600e\u4e48\u529e\uff1f\u73b0\u5728\u53ef\u4e0d\u80fd\u505a\u5230\u8def\u5f84\u538b\u7f29\u4e86\u3002\n\n\u90a3\u5c31\u8003\u8651\u53e6\u5916\u4e00\u79cd\u5e76\u67e5\u96c6\u7684\u7ef4\u62a4\u65b9\u5f0f\u561b\uff0c\u8003\u8651\u6309\u6811\u9ad8\u5408\u5e76\uff0c\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a\u96c6\u5408\uff0c\u90fd\u7ef4\u62a4\u5176\u6811\u9ad8\uff0c\u7136\u540e\u5c06\u6811\u9ad8\u4f4e\u7684\u96c6\u5408\u5408\u5e76\u5230\u6811\u9ad8\u9ad8\u7684\u96c6\u5408\u4e0a\uff0c\u8fd9\u6837\u505a\u53ef\u4ee5\u4fdd\u8bc1\u6811\u9ad8\u7684\u7ea7\u522b\u662f $\\log n$ \u7684\uff0c\u8bc1\u660e~~\u6211\u4e0d\u4f1a~~\u53ef\u4ee5\u53bb\u770b\u5176\u5b83\u9898\u89e3\u3002\n\n\u4e0d\u8fc7\u7a81\u7136\u53d1\u73b0\u8fd9\u4e2a\u505a\u6cd5\u9898\u89e3\u91cc\u662f\u6709\u7684(\n\n\u6211\u4e00\u5f00\u59cb\u7684\u5199\u6cd5\uff0c\u5f53\u4e24\u4e2a\u96c6\u5408\u7684\u6811\u9ad8\u76f8\u540c\u65f6\uff0c\u4f1a\u9009\u62e9\u4e00\u4e2a\u5c06\u5176\u6811\u9ad8\u589e\u52a0 $1$\uff0c\u7136\u800c\u8fd9\u6837\u505a\uff0c\u6211\u4eec\u5e94\u8be5\u6bcf\u6b21\u65b0\u5efa\u7248\u672c\u624d\u5bf9\uff0c\u56e0\u4e3a\u6211\u4eec\u66f4\u65b0\u7684\u8282\u70b9\u53ef\u4ee5\u662f\u516c\u5171\u8282\u70b9\uff0c\u800c\u5bfc\u81f4\u6811\u9ad8\u51fa\u95ee\u9898\uff0c\u6240\u4ee5\u6bcf\u6b21\u66f4\u65b0\u6811\u9ad8\u65f6\uff0c\u8981\u65b0\u5efa\u7248\u672c\uff0c\u8fd9\u6837\u5e94\u8be5\u5c31\u80fd\u89e3\u51b3\u8bb8\u591a\u6309\u6811\u9ad8\u5408\u5e76\u7684\u4f1a TLE \u4e09\u4e2a\u70b9\u7684\u60c5\u51b5\u4e86\u3002\n\n## Code\n\n\u672c\u6587\u53ea\u662f\u8bf4\u660e\u4e00\u4e0b\u6309\u6811\u9ad8\u5408\u5e76\u53ef\u80fd\u4f1a\u5b58\u5728\u7684\u95ee\u9898\uff0c\u6240\u4ee5\u5c31\u5c11\u53d9\u8ff0\uff0c\u76f4\u63a5\u653e\u4ee3\u7801\u597d\u4e86\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\nusing namespace std;\nconst int N = 1e5+5;\nstruct aa{\n\tint lc,rc,dep,fa;\n}node[N*50];\nint n,m;\nint tot;\nint root[N*2];\nvoid build(int &u,int l,int r){\n\tu = ++tot;\n\tif(l==r){\n\t\tnode[u].fa = l;\n\t\treturn;\n\t}\n\tint mid = (l+r)/2;\n\tbuild(node[u].lc,l,mid);\n\tbuild(node[u].rc,mid+1,r);\n}\nvoid add(int &u,int v,int l,int r,int zhi){\n\tu = ++tot; \n\tnode[u] = node[v];\n\tif(l==r){\n\t\tnode[u].dep++;\n\t\treturn;\n\t}\n\tint mid = (l+r)/2;\n\tif(zhi<=mid){\n\t\tadd(node[u].lc,node[v].lc,l,mid,zhi);\n\t}else{\n\t\tadd(node[u].rc,node[v].rc,mid+1,r,zhi);\n\t}\n}\nint query(int u,int l,int r,int zhi){\n\tif(l==r){\n\t\treturn u;\n\t}\n\tint mid = (l+r)/2;\n\tif(zhi<=mid){\n\t\treturn query(node[u].lc,l,mid,zhi);\n\t}else{\n\t\treturn query(node[u].rc,mid+1,r,zhi);\n\t}\n}\nvoid hebing(int &u,int v,int l,int r,int zhi,int Fa){\n\tu = ++tot;\n\tnode[u].lc = node[v].lc;node[u].rc = node[v].rc;\n\tif(l==r){\n\t\tnode[u].dep = node[v].dep;\n\t\tnode[u].fa = Fa;\n\t\treturn;\n\t}\n\tint mid = (l+r)/2;\n\tif(zhi<=mid){\n\t\thebing(node[u].lc,node[v].lc,l,mid,zhi,Fa);\n\t}else{\n\t\thebing(node[u].rc,node[v].rc,mid+1,r,zhi,Fa);\n\t}\n}\nint find(int u,int zhi){\n\tint now = query(u,1,n,zhi);\n\tif(node[now].fa==zhi){\n\t\treturn now;\n\t}else{\n\t\treturn find(u,node[now].fa);\n\t}\n}\nvoid merge(int ver,int x,int y){\n\troot[ver] = root[ver-1];\n\tint xx = find(root[ver],x);int yy = find(root[ver],y);\n\tif(node[xx].fa!=node[yy].fa){\n\t\tif(node[xx].dep>node[yy].dep){\n\t\t\tswap(xx,yy);\n\t\t}\n\t\thebing(root[ver],root[ver-1],1,n,node[xx].fa,node[yy].fa);\n\t\tif(node[xx].dep==node[yy].dep){\n\t\t\tadd(root[ver],root[ver],1,n,node[yy].fa);//\u6ce8\u610f\u8fd9\u91cc\u8981\u4ee5\u539f\u5148\u7248\u672c\u4e3a\u57fa\u7840\u65b0\u5efa\u7248\u672c \n\t\t}\n\t}\n}\nbool cha(int ver,int x,int y){\n\troot[ver] = root[ver-1];\n\tint xx = find(root[ver],x);int yy = find(root[ver],y);\n\tif(node[xx].fa==node[yy].fa){\n\t\treturn true; \n\t}else{\n\t\treturn false;\n\t}\n}\nint main(){\n\tscanf(\"%d %d\",&n,&m); \n\tint opt,k,a,b;\n\tbuild(root[0],1,n);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d\",&opt);\n\t\tif(opt==1){\n\t\t\tscanf(\"%d %d\",&a,&b);\n\t\t\tmerge(i,a,b);\n\t\t}else if(opt==2){\n\t\t\tscanf(\"%d\",&k);\n\t\t\troot[i] = root[k];\n\t\t}else{\n\t\t\tscanf(\"%d %d\",&a,&b);\n\t\t\tif(cha(i,a,b)){\n\t\t\t\tcout<<1<<\"\\n\";\n\t\t\t}else{\n\t\t\t\tcout<<0<<\"\\n\";\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n\n```\n\n\u611f\u89c9\u8fd9\u7bc7\u9898\u89e3\u597d\u50cf\u4ec0\u4e48\u90fd\u8bf4\u4e86\uff0c\u53c8\u597d\u50cf\u4ec0\u4e48\u90fd\u6ca1\u8bf4\u3002",
        "postTime": 1668134354,
        "uid": 369399,
        "name": "yizhiming",
        "ccfLevel": 0,
        "title": "\u9898\u89e3\u3010P3402 \u53ef\u6301\u4e45\u5316\u5e76\u67e5\u96c6\u3011"
    },
    {
        "content": "# \u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\uff1a\n\n**[<\u535a\u5ba2\u4f20\u9001\u95e8>](https://weepingdemon.gitee.io/blog/2020/08/24/repKCJHBCJ/)**\n\n----\n\n\u524d\u8a00\uff1a\u4e3b\u8981\u662f\u56e0\u4e3a\u7b2c\u4e00\u7bc7\u9898\u89e3\u7684`deep[]`\u66f4\u65b0\u592a\u8ff7\u60d1\u4e86\uff0c\u6240\u4ee5\u6211\u5199\u4e86\u4e00\u7bc7\u6bcf\u4e2a\u7248\u672c\u90fd\u66f4\u65b0`deep[]`\u7684\u7248\u672c\uff0c\u800c\u4e14\u662f\u6307\u9488\u7248\u3002\n\n\u771f\u7684\uff0c\u6307\u9488\u592a\u4f18\u7f8e\u4e86\uff01\n\n----\n\n**[\u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3402)**\n\n### \u9898\u76ee\u63cf\u8ff0\n\n\u7ed9\u5b9a $n$ \u4e2a\u96c6\u5408\uff0c\u7b2c $i$ \u4e2a\u96c6\u5408\u5185\u521d\u59cb\u72b6\u6001\u4e0b\u53ea\u6709\u4e00\u4e2a\u6570\uff0c\u4e3a $i$\u3002\n\n\u6709 $m$ \u6b21\u64cd\u4f5c\u3002\u64cd\u4f5c\u5206\u4e3a $3$ \u79cd\uff1a\n\n- `1 a b` \u5408\u5e76 $a$,$b$ \u6240\u5728\u96c6\u5408\uff1b\n- `2 k` \u56de\u5230\u7b2c $k$ \u6b21\u64cd\u4f5c\uff08\u6267\u884c\u4e09\u79cd\u64cd\u4f5c\u4e2d\u7684\u4efb\u610f\u4e00\u79cd\u90fd\u8bb0\u4e3a\u4e00\u6b21\u64cd\u4f5c\uff09\u4e4b\u540e\u7684\u72b6\u6001\uff1b\n- `3 a b` \u8be2\u95ee $a$,$b$ \u662f\u5426\u5c5e\u4e8e\u540c\u4e00\u96c6\u5408\uff0c\u5982\u679c\u662f\u5219\u8f93\u51fa $1$ \uff0c\u5426\u5219\u8f93\u51fa $0$\u3002\n\n### \u8f93\u5165\u683c\u5f0f\n\n\u7b2c\u4e00\u884c\u4e24\u4e2a\u6574\u6570\uff0c$n$,$m$\u3002\n\n\u63a5\u4e0b\u6765 $m$ \u884c\uff0c\u6bcf\u884c\u5148\u8f93\u5165\u4e00\u4e2a\u6570 $opt$\u3002\u82e5 $opt=2$ \u5219\u518d\u8f93\u5165\u4e00\u4e2a\u6574\u6570 $k$\uff0c\u5426\u5219\u518d\u8f93\u5165\u4e24\u4e2a\u6574\u6570 $a$,$b$\uff0c\u63cf\u8ff0\u4e00\u6b21\u64cd\u4f5c\u3002\n\n### \u6837\u4f8b\n\n```\n5 6\n1 1 2\n3 1 2\n2 0\n3 1 2\n2 1\n3 1 2\n```\n```\n1\n0\n1\n```\n\n----\n\n### \u601d\u8def\u5206\u6790\n\n\u8fd9\u9053\u9898\u770b\u4f3c\u662f\u4e2a\u65b0\u7684\u53ef\u6301\u4e45\u5316\u6570\u636e\u7ed3\u6784\u5b9e\u9645\u4e0a\u8fd8\u662f\u4e00\u4e2a\u4e3b\u5e2d\u6811\uff0c\u53ea\u4e0d\u8fc7\u7528\u6765\u7ef4\u62a4\u5e76\u67e5\u96c6\u800c\u5df2\u3002\n\n\u770b\u5230\u9898\u76ee\u91cc\u7684\u53ef\u6301\u4e45\u5316\uff0c\u7248\u672c\u56de\u8df3\u7b49\u64cd\u4f5c\uff0c\u6211\u4eec\u81ea\u7136\u800c\u7136\u7684\u80fd\u8054\u60f3\u5230\u4e3b\u5e2d\u6811\u3002\n\n\u5173\u4e8e\u4e3b\u5e2d\u6811\uff0c\u53ef\u4ee5\u53c2\u8003**[\u8fd9\u7bc7\u6587\u7ae0](https://weepingdemon.gitee.io/blog/2020/08/22/algHJTtree/)**\n\n----\n\n#### \u5b9e\u73b0\u53ef\u6301\u4e45\u5316\n\n\u4e3b\u5e2d\u6811\u80fd\u5b9e\u73b0\u4ec0\u4e48\uff0c\u7ef4\u62a4\u4e00\u68f5\u80fd\u591f\u4fdd\u5b58\u65e7\u7248\u672c\u7684\u6811\uff0c\u5e76\u4e14\u6bcf\u6b21\u64cd\u4f5c\u89c4\u6a21\u90fd\u5f88\u5c0f\uff0c\u6b63\u597d\u7b26\u5408\u8fd9\u91cc\u7684\u9700\u6c42\u3002\u800c\u8be5\u9898\u76ee\u9700\u8981\u7ef4\u62a4\u7684\u662f\u5404\u4e2a\u7248\u672c\u7684\u5e76\u67e5\u96c6\u5173\u7cfb\u3002\n\n\u6211\u4eec\u6765\u8054\u60f3\u4e00\u4e0b\u5e76\u67e5\u96c6\uff0c\u4e0d\u52a0\u8def\u5f84\u538b\u7f29\u7684\u5e76\u67e5\u96c6\u5c31\u662f\u901a\u8fc7\u5b9e\u73b0\u7ed9\u6bcf\u4e00\u4e2a\u8282\u70b9\u8d4b\u503c`father`\u6765\u5b9e\u73b0\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ea\u8981\u6211\u4eec\u7528\u4e3b\u5e2d\u6811\u6765\u7ef4\u62a4\u8fd9\u4e2a`father`\uff0c\u6211\u4eec\u5c31\u80fd\u521d\u6b65**\u5b9e\u73b0**\u53ef\u6301\u4e45\u5316\u5e76\u67e5\u96c6\uff0c\u53ea\u4e0d\u8fc7\u9700\u8981\u4e00\u4e9b\u4f18\u5316\u4e86\u3002\n\n-----\n\n#### \u63d0\u9ad8\u6548\u7387\n\n\u6211\u4eec\u8003\u8651\u6700\u9700\u8981\u4f18\u5316\u7684\u5730\u65b9\uff0c\u5e76\u67e5\u96c6\u7684\u6548\u7387\u4e3b\u8981\u90fd\u9760\u8def\u5f84\u538b\u7f29\u6765\u589e\u52a0\uff0c\u7136\u800c\u73b0\u5728\u7531\u4e8e\u662f\u5728\u4e3b\u5e2d\u6811\u91cc\u5b9e\u73b0\u7684\uff0c\u6211\u4eec\u6bcf\u6b21\u53ea\u80fd\u64cd\u4f5c\u6bd4\u8f83\u5c11\u7684\u70b9\uff0c\u6240\u4ee5\u8def\u5f84\u538b\u7f29\u663e\u7136\u9700\u8981\u88ab\u629b\u5f03\u3002\u4e8e\u662f\u590d\u6742\u5ea6\u5c31\u4e0a\u6765\u4e86\u3002\n\n\u4f46\u8fd8\u662f\u6709\u529e\u6cd5\u964d\u4f4e\u671f\u671b\u590d\u6742\u5ea6\u7684\uff0c\u90a3\u5c31\u662f\u542f\u53d1\u5f0f\u5408\u5e76\u3002\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u5e76\u67e5\u96c6\u627e\u8001\u5927\u7684\u65f6\u5019\u7684\u6700\u574f\u60c5\u51b5\uff0c\u90a3\u5c31\u662f\u6240\u6709\u8282\u70b9\u90fd\u501a\u9760`father`\u7684\u5173\u7cfb\u5f62\u6210\u4e00\u6761\u6709\u5411\u7684\u94fe\uff0c\u8fd9\u4e2a\u65f6\u5019\u663e\u7136\u662f`get_father()`\u6700\u6162\u7684\u65f6\u5019\u3002\u6240\u4ee5\u6211\u4eec\u8981\u5c3d\u53ef\u80fd\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\u3002\n\n\u8003\u8651\u6211\u4eec\u73b0\u5728\u6709\u4e24\u4e2a\u5e76\u67e5\u96c6\u7684\u8001\u5927 $a$ \u548c $b$ \uff0c\u4e24\u4e2a\u96c6\u5408\u501f\u7531`father`\u7684\u5173\u7cfb\u5206\u522b\u80fd\u591f\u5f62\u6210\u4e00\u68f5\u6811\uff0c\u4e14 $a$ \u548c $b$ \u7684`father`\u90fd\u662f\u81ea\u5df1\uff0c\u5047\u8bbe\u4ee5\u6bcf\u4e00\u4e2a\u8001\u5927 $x$ \u4e3a\u6839\u7684\u6811\u4e2d\u6df1\u5ea6\u6700\u5927\u7684\u53f6\u5b50\u8282\u70b9\u7684\u6df1\u5ea6\u4e3a`deep[x]`\uff0c\u5e76\u4e14\u6211\u4eec\u5047\u8bbe`deep[a]` <= `deep[b]`\uff0c\u90a3\u6211\u4eec\u4ee4 $a$ \u7684`father`\u4e3a $b$ \u7684`father`\u4e5f\u5c31\u662f $b$ \u81ea\u5df1\uff0c\u6b64\u65f6\u7684`deep[b]`\u5c31\u7b49\u4e8e`deep[b] + (deep[b] == deep[a])`\uff0c\u5f88\u5bb9\u6613\u7406\u89e3\uff0c\u5f53 $a$ \u548c $b$ \u7684\u6700\u5927\u6df1\u5ea6\u76f8\u540c\u7684\u65f6\u5019\uff0c\u628a $a$ \u53d8\u6210\u5230 $b$ \u7684\u513f\u5b50\u603b\u4f1a\u4f7f $b$ \u7684\u6700\u5927\u6df1\u5ea6\u589e\u52a0 $1$ \u3002\u5f53\u7136\uff0c\u5982\u679c`deep[a]`\u4e25\u683c\u5c0f\u4e8e`deep[b]`\u5c31\u4e0d\u4f1a\u51fa\u73b0\u8fd9\u4e48\u591a\u95ee\u9898\u3002\n\n\u6240\u4ee5\u5176\u5b9e\u6574\u9898\u7684\u96be\u5ea6\u90fd\u805a\u96c6\u5728\u4e3b\u5e2d\u6811\u7684\u6784\u9020\u548c\u542f\u53d1\u5f0f\u5408\u5e76\u4e0a\u3002\n\n----\n\n#### \u5177\u4f53\u5b9e\u73b0\n\n\u8fd9\u9053\u9898\u6709\u8fd9\u4e48\u51e0\u4e2a\u6ce8\u610f\u70b9\uff1a\n\n- \u5e76\u67e5\u96c6\u4e0d\u4f7f\u7528\u8def\u5f84\u538b\u7f29   ->   **\u8fd9\u5c31\u51b3\u5b9a\u4e86\u6211\u4eec\u8981\u6309\u79e9\u5408\u5e76**\n- \u4e3b\u5e2d\u6811\u7ef4\u62a4\u6bcf\u4e00\u4e2a\u5143\u7d20\u5404\u81ea\u7684\u4fe1\u606f\uff0c\u5b9e\u9645\u4e0a\u53ea\u7528\u4e86\u6811\u5f62\u6570\u636e\u7ed3\u6784\u7684\u53f6\u5b50\u8282\u70b9\uff0c\u5176\u4ed6\u8282\u70b9\u5e2e\u52a9\u5b9e\u73b0\u4e8c\u5206\u67e5\u627e\n\n\n\u6211\u4eec\u5148\u7ed9\u51fa\u4e3b\u5e2d\u6811\u9700\u8981\u7ef4\u62a4\u7684\u4e1c\u897f\uff0c\u4ee5\u8282\u70b9`cur`\u4e3a\u4f8b\uff1a\n\n- `cur->l`\u548c`cur->r`\uff1a\u7ef4\u62a4\u8fb9\u754c\n- `cur->ls`\u548c`cur->rs`\uff1a\u5de6\u53f3\u513f\u5b50\n- `cur->deep`\uff1a\u8282\u70b9\u6df1\u5ea6\uff0c\u4ec5\u5728\u53f6\u5b50\u8282\u70b9\u8d77\u4f5c\u7528\uff0c\u5f53\u4e14\u4e00\u4e2a\u8282\u70b9\u4f5c\u4e3a\u5176\u6240\u5728\u96c6\u5408\u7684\u8001\u5927\u65f6\u8868\u793a\u96c6\u5408\u7684\u6700\u5927\u6df1\u5ea6(\u5373\u4ece\u96c6\u5408\u5185\u4efb\u610f\u4e00\u4e2a\u8282\u70b9\u9012\u5f52\u5bfb\u627e\u5230\u8001\u5927\u6240\u9700\u8981\u7684\u6700\u5927\u6b65\u6570)\n- `cur->fa`\uff1a\u8282\u70b9\u5728\u5e76\u67e5\u96c6\u4e2d\u7684\u7236\u4eb2\uff0c\u4ec5\u5728\u53f6\u5b50\u8282\u70b9\u8d77\u4f5c\u7528\uff0c\u7528\u4e8e\u9012\u5f52\u5bfb\u627e\u96c6\u5408\u8001\u5927\n- `cur->num`\uff1a\u8282\u70b9\u6240\u4ee3\u8868\u7684\u6570\u503c\uff0c\u5176\u5b9e\u4e0d\u8d77\u4f5c\u7528\uff0c\u5176\u503c\u7b49\u4e8e\u53f6\u5b50\u8282\u70b9\u7684`cur->l`\u6216\u8005`cur->r`\uff08\u5728\u53f6\u5b50\u8282\u70b9\u4e24\u8005\u7b49\u4ef7\uff09\n\n\u9996\u5148\uff0c\u6839\u636e\u9898\u76ee\u8981\u6c42\uff0c\u7ef4\u62a4\u7248\u672c\u7684\u64cd\u4f5c\u901a\u8fc7\u4e3b\u5e2d\u6811\u5b9e\u73b0\uff0c\u7248\u672c\u7684\u56de\u8df3\u7b49\u90fd\u4e00\u6837\u3002\n\n---\n\n##### \u5efa\u6811\n\n\u5c31\u662f\u6b63\u5e38\u7684\u4e3b\u5e2d\u6811\u5efa\u6811\n\n```cpp\ninline void build(node * cur,int l,int r){\n    cur->l = l , cur->r = r;\n    if(l == r){\n        cur->fa = cur->num = l , cur->deep = 1;\n        return;\n    }\n    int mid = (l+r)>>1;\n    cur->ls = create() , cur->rs = create();\n    build(cur->ls,l,mid) , build(cur->rs,mid+1,r);\n    return;\n}\n```\n\n----\n\n##### \u627e\u8001\u5927\n\n\u63a5\u4e0b\u6765\u4e0d\u7ba1\u662f\u96c6\u5408\u5408\u5e76\u8fd8\u662f\u67e5\u8be2\uff0c\u6211\u4eec\u90fd\u4e0d\u53ef\u907f\u514d\u7684\u9700\u8981\u627e\u5230\u8001\u5927\uff0c\u6211\u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbf\uff0c\u76f4\u63a5\u56de\u4f20\u4e86\u6574\u4e2a\u8282\u70b9\u7684\u6307\u9488\u3002\n\n\u8fd8\u662f\u901a\u8fc7\u9012\u5f52\u5b9e\u73b0\uff0c\u633a\u66b4\u529b\u7684\u89e3\u6cd5\u3002\n\n```cpp\ninline node * find(node * cur,int x){\n    if(cur->l == cur->r) return cur; \n    if(x <= cur->ls->r) return find(cur->ls,x);\n    if(x >= cur->rs->l) return find(cur->rs,x);\n    return 0;\n}\ninline node * get_fa(node * cur,int x){\n    node * now = find(cur,x);\n    if(x == now->fa) return now;\n    else return get_fa(cur,now->fa);\n}\n```\n\n----\n\n##### \u96c6\u5408\u5408\u5e76\n\n\u9996\u5148\u6211\u4eec\u9700\u8981\u627e\u5230\u4e24\u4e2a\u96c6\u5408\u7684\u8001\u5927\uff0c\u5982\u8fc7\u73b0\u5728\u8fd9\u4e24\u4e2a\u8282\u70b9\u7684\u8001\u5927\u662f\u4e00\u6837\u7684\uff0c\u8bf4\u660e\u4ed6\u4eec\u5728\u4e00\u4e2a\u96c6\u5408\u91cc\uff0c\u5c31\u4e0d\u7528\u7ba1\u4ed6\u4eec\u4e86(\u8bb0\u5f97\u7248\u672c\u590d\u5236)\n\n\u5982\u679c\u4e0d\u540c\uff0c\u6839\u636e\u4e4b\u524d\u7684\u5206\u6790\uff0c\u6211\u4eec\u5c31\u6bd4\u8f83\u4ed6\u4eec\u7684\u6df1\u5ea6\u5927\u5c0f\uff0c\u7136\u540e\u786e\u5b9a\u8c01\u662f\u65b0\u7684\u8001\u5927\uff0c\u8c01\u8981\u53d8\u6210\u5c0f\u5f1f\n\n```cpp\n if(opt == 1){\n      cin >> x >> y;\n      node * px = get_fa(root[i-1],x) ,* py = get_fa(root[i-1],y);\n            if(px->fa == py->fa){\n            root[i] = root[i-1];\n            continue;\n      }\n     //\u6211\u4eec\u8981\u628a f \u7684father\u6539\u6210 F \n      if(px->deep > py->deep) F = px->fa , f = py->fa;\n      else F = py->fa , f = px->fa;\n      FLAG = px->deep == py->deep;\n      root[i] = upd(root[i-1],f,F);\n}\n```\n\n----\n\n##### \u96c6\u5408\u67e5\u8be2\n\n\u76f4\u63a5\u627e\u8001\u5927\uff0c\u6bd4\u8f83\u8001\u5927\n\n```cpp\n\u7565\n```\n\n----\n\n##### \u7248\u672c\u56de\u9000\n\n\u4e3b\u5e2d\u6811\u57fa\u64cd\n\n```cpp\n\u7565\n```\n\n----\n\n##### \u7248\u672c\u66f4\u65b0\n\n\u8fd9\u662f\u6211\u5361\u6700\u4e45\u7684\u5730\u65b9\uff0c\u4e5f\u662f\u6211\u548c\u9898\u89e3\u4e0d\u4e00\u6837\u7684\u5730\u65b9\u3002\n\n[\u8fd9\u7bc7\u9898\u89e3](https://www.luogu.com.cn/blog/88OvO88/solution-p3402)\u91cc\u5728\u66f4\u65b0\u8282\u70b9\u6df1\u5ea6\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u5c31\u66f4\u65b0\u4e86\u4e0a\u4e00\u4e2a\u7248\u672c\u7684\u6df1\u5ea6\u3002\u786e\u5b9e\uff0c\u8fd9\u4e0d\u4f1a\u5bf9\u7b54\u6848\u7684\u6b63\u786e\u6027\u9020\u6210\u5f71\u54cd\uff0c\u4f46\u662f\u4f1a\u4e00\u5b9a\u7a0b\u5ea6\u5f71\u54cd\u6548\u7387\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u8fd8\u662f\u6709\u5fc5\u8981\u8981\u5904\u7406\u7684\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8fd9\u91cc\u8981\u5b9e\u73b0\u7684\u5c31\u662f\uff0c\u5982\u4f55\u5728\u4e00\u4e2a\u7248\u672c\u91cc\u4fee\u6539\u4e24\u4e2a\u7ed3\u70b9\u3002\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u5728\u5411\u4e0b\u4f20\u9012\u7684\u65f6\u5019\u540c\u65f6\u627e\u53e6\u5916\u4e00\u4e2a\u70b9\n\n```cpp\ninline node * upd(node * cur,int x,int F){\n    node * now = create();\n    copy(now,cur);\n    if(cur->l == cur->r && cur->l == x){\n        now->fa = F;\n        return now;\n    } else if(cur->l == cur->r && cur->l == F){\n        now->deep = now->deep + FLAG;\n        return now;\n    }\n    if(cur->l <= x && x <= cur->ls->r){\n        now->ls = upd(cur->ls,x,F);\n        if(cur->rs->l <= F && F <= cur->r && FLAG) now->rs = upd(cur->rs,x,F); // \u5c31\u662f\u8fd9\u91cc\uff0c\u540c\u65f6\u67e5\u627e\u53e6\u5916\u4e00\u4e2a\u8282\u70b9 \n    }\n    if(cur->rs->l <= x && x <= cur->r){\n        now->rs = upd(cur->rs,x,F);\n        if(cur->l <= F && F <= cur->ls->r && FLAG) now->ls = upd(cur->ls,x,F); // \u5c31\u662f\u8fd9\u91cc\uff0c\u540c\u65f6\u67e5\u627e\u53e6\u5916\u4e00\u4e2a\u8282\u70b9 \n    }\n    return now;\n}\n```\n\n\u5176\u4ed6\u7684\u4e5f\u6ca1\u4ec0\u4e48\u597d\u591a\u8bf4\u7684\u4e86\uff0c\u76f4\u63a5\u653e\u4ee3\u7801\u5427\n\n----\n\n### AC\u4ee3\u7801\n\n```cpp\n//\u5934\u6587\u4ef6\u7565\n#define rep(i,a,b) for(register int i = (a);i <= (b);++i)\n#define per(i,a,b) for(register int i = (a);i >= (b);--i)  \ntypedef long long ll;\ntypedef unsigned long long ull;\nusing std::string;using std::cin;using std::cout;\n\nconst int N = 1e5+10;\nint n,m,a[2*N],opt,tot,FLAG;\n\nstruct node{\n    int l,r,fa,deep,num;\n    node * ls, * rs;\n}Tree[32*N],*root[4*N];\n\ninline node * create(){return &Tree[++tot];}\n\ninline void copy(node * u , node * v){\n    u->l = v->l , u->r = v->r;\n    u->ls = v->ls , u->rs = v->rs;\n    u->fa = v->fa , u->num = v->num , u->deep = v->deep;\n    return;\n}\n\ninline void build(node * cur,int l,int r){\n    cur->l = l , cur->r = r;\n    if(l == r){\n        cur->fa = cur->num = l , cur->deep = 1;\n        return;\n    }\n    int mid = (l+r)>>1;\n    cur->ls = create() , cur->rs = create();\n    build(cur->ls,l,mid) , build(cur->rs,mid+1,r);\n    return;\n}\n\ninline node * upd(node * cur,int x,int F){\n    node * now = create();\n    copy(now,cur);\n    if(cur->l == cur->r && cur->l == x){\n        now->fa = F;\n        return now;\n    } else if(cur->l == cur->r && cur->l == F){\n        now->deep = now->deep + FLAG;\n        return now;\n    }\n    if(cur->l <= x && x <= cur->ls->r){\n        now->ls = upd(cur->ls,x,F);\n        if(cur->rs->l <= F && F <= cur->r && FLAG) now->rs = upd(cur->rs,x,F);\n    }\n    if(cur->rs->l <= x && x <= cur->r){\n        now->rs = upd(cur->rs,x,F);\n        if(cur->l <= F && F <= cur->ls->r && FLAG) now->ls = upd(cur->ls,x,F);\n    }\n    return now;\n}\n\ninline node * find(node * cur,int x){\n    if(cur->l == cur->r) return cur; \n    if(x <= cur->ls->r) return find(cur->ls,x);\n    if(x >= cur->rs->l) return find(cur->rs,x);\n    return 0;\n}\n\ninline node * get_fa(node * cur,int x){\n    node * now = find(cur,x);\n    if(x == now->fa) return now;\n    else return get_fa(cur,now->fa);\n}\n\nint main(){\n    std::ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);\n    // freopen(\"in.in\",\"r\",stdin);\n    // freopen(\"out.out\",\"w\",stdout);\n    int x,y,F,D,f;\n    cin >> n >> m;\n    root[0] = create();\n    build(root[0],1,n);\n    rep(i,1,m){\n        cin >> opt;\n        if(opt == 1){\n            cin >> x >> y;\n            node * px = get_fa(root[i-1],x) ,* py = get_fa(root[i-1],y);\n            if(px->fa == py->fa){\n\t\t\t\troot[i] = root[i-1];\n\t\t\t\tcontinue;\n\t\t\t}\n            if(px->deep > py->deep) F = px->fa , f = py->fa;\n            else F = py->fa , f = px->fa;\n            FLAG = px->deep == py->deep;\n            root[i] = upd(root[i-1],f,F);\n        } else if(opt == 2){\n            cin >> x;\n            root[i] = root[x];\n        } else {\n            root[i] = root[i-1];\n            cin >> x >> y;\n            node * px = get_fa(root[i],x) ,* py = get_fa(root[i],y);\n            if(px->fa == py->fa) cout << \"1\\n\";\n            else cout << \"0\\n\";\n        }\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1598284766,
        "uid": 123389,
        "name": "Isshiki_Hugh",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3402 \u3010\u53ef\u6301\u4e45\u5316\u5e76\u67e5\u96c6\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u6bd4\u8f83\u590d\u6742\uff0c\u8ddf\u5176\u4ed6\u9898\u89e3\u4e0d\u4e00\u6837\u7684\u5199\u6cd5\uff0c\u4ec5\u4f9b\u53c2\u8003\n\n\u8ddf\u5176\u4ed6\u9898\u89e3\u4e00\u6837\uff0c\u8003\u8651\u4f7f\u7528\u4e3b\u5e2d\u6811\u7ef4\u62a4f\u7684\u53ef\u6301\u4e45\u5316\u7248\u672c\n\n\u6211\u6309\u79e9\u5408\u5e76\u7684\u65f6\u5019\u8001\u5b9e\u7ef4\u62a4\u4e86size\u7684\u53ef\u6301\u4e45\u5316\u7248\u672c\uff0c\u5408\u5e76\u7684\u65f6\u5019\u7528size\u5408\u5e76\u800c\u4e0d\u662f\u7528\u6df1\u5ea6\n\n\u7136\u540ea\u548cb\u90fd\u8981modify\uff0c\u4e8e\u662f\u4e3b\u5e2d\u6811\u7684\u4e0b\u6807\u8981\u7528\u4e00\u4e2alst\u6570\u7ec4\u7ef4\u62a4\uff0c\u7ec6\u8282\u6bd4\u8f83\u591a\u3002\u3002\n\n\u770b\u4ee3\u7801\u5427\uff1a\uff08\u6709\u4e9b\u65e0\u7528\u53d8\u91cf\u4e0d\u8981\u7406\u4f1a\uff09\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\nusing namespace std;\nint read(){\n\tint x=0,pos=1;char ch=getchar();\n\tfor(;!isdigit(ch);ch=getchar()) if(ch=='-') pos=0;\n\tfor(;isdigit(ch);ch=getchar()) x=(x<<1)+(x<<3)+ch-'0';\n\treturn pos?x:-x;\n}\nconst int N = 2000021,nl=60000001;//N\u8981\u5f00\u4e24\u500d\uff0c\u4e00\u6b211\u64cd\u4f5c\u8d21\u732e\u4e24\u4e2art\nint ls[nl],rs[nl],rt[N],n,m,tot,val[nl],top,d[nl],lst[N],lnk[N],num;\nint a[N],cnt;\n//d\u662fsz\u503c\uff0cval\u662ff\u503c\nvoid build(int &now,int l,int r){//\u5efa\u6811\uff0c\u6700\u5f00\u59cb\u7684f\u503c\u548csz\u503c\n\tnow=++tot;\n\tif(l==r){\n\t\tval[now]=a[l];\n\t\td[now]=1;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(ls[now],l,mid);\n\tbuild(rs[now],mid+1,r);\n}\nvoid modify(int &now,int pre,int l,int r,int pos,int vw,int dw){\n\tnow=++tot;\n\tif(l==r){\n\t\tval[now]=vw;\n\t\td[now]=dw;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tif(pos<=mid){\n\t\trs[now]=rs[pre];\n\t\tmodify(ls[now],ls[pre],l,mid,pos,vw,dw);\n\t}else{\n\t\tls[now]=ls[pre];\n\t\tmodify(rs[now],rs[pre],mid+1,r,pos,vw,dw);\n\t}\n}//\u4e00\u6b21\u66f4\u65b0\u5b8c\u4e00\u4e2a\u70b9\u7684\u4e24\u4e2a\u4fe1\u606f\nint query1(int now,int l,int r,int pos){\n\tif(l==r) return val[now];\n\tint mid=(l+r)>>1;\n\tif(pos<=mid){\n\t\treturn query1(ls[now],l,mid,pos);\n\t}else return query1(rs[now],mid+1,r,pos);\n}//\u8fd9\u91cc\u67e5\u8be2\u4e00\u4e2a\u70b9\u7684\u7236\u4eb2\nint query2(int now,int l,int r,int pos){\n\tif(l==r) return d[now];\n\tint mid=(l+r)>>1;\n\tif(pos<=mid){\n\t\treturn query2(ls[now],l,mid,pos);\n\t}else return query2(rs[now],mid+1,r,pos);\n}//\u8fd9\u91cc\u67e5\u8be2\u4e00\u4e2a\u70b9\u7684sz\u503c\nint find(int r,int now){\n\tint f=query1(r,1,n,now);\n\tif(f==now){\n\t\treturn now;\n\t}else return find(r,f);\n}//\u6a21\u62df\u5e76\u67e5\u96c6\nint main(){\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++){\n\t\ta[i]=i;\n\t}\n\tbuild(rt[0],1,n);\n\tint now=1;\n\tfor(int i=1;i<=m;i++){\n\t\tint opt=read();\n\t\tif(opt==1){\n\t\t\tint u=read(),v=read();\n\t\t\tint fu=find(rt[lst[i-1]],u),fv=find(rt[lst[i-1]],v);\n\t\t\tint su=query2(rt[lst[i-1]],1,n,fu),sv=query2(rt[lst[i-1]],1,n,fv);\n\t\t\tif(fu==fv){\n\t\t\t\tlst[i]=lst[i-1];\n\t\t\t\tcontinue;//\u6ce8\u610f\u8fd9\u91cc\u8981\u8d4b\u503clst\n\t\t\t}\n\t\t\tif(su>sv){\n\t\t\t\tcnt++;\n\t\t\t\tmodify(rt[cnt],rt[lst[i-1]],1,n,fv,fu,sv);//\u6ce8\u610f\u8fd9\u91cc\u662flst[i-1]\u800c\u4e0d\u662fcnt-1\uff0c\u56e0\u4e3a\u4e0a\u4e00\u6b21\u64cd\u4f5c\u53ef\u80fd\u662f2\u6216\u80053\n\t\t\t\tcnt++;\n\t\t\t\tmodify(rt[cnt],rt[cnt-1],1,n,fu,fu,sv+su);\n\t\t\t}else{\n\t\t\t\t++cnt;\n\t\t\t\tmodify(rt[cnt],rt[lst[i-1]],1,n,fu,fv,su);\n\t\t\t\t++cnt;\n\t\t\t\tmodify(rt[cnt],rt[cnt-1],1,n,fv,fv,sv+su);\n\t\t\t}\n\t\t\tlst[i]=cnt;\n\t\t}else if(opt==2){\n\t\t\tint v=read();\n\t\t\tlst[i]=lst[v];\n\t\t}else{\n\t\t\tlst[i]=lst[i-1];\n\t\t\tint u=read(),v=read();\n\t\t\tint fu=find(rt[lst[i]],u),fv=find(rt[lst[i]],v);\n\t\t\tprintf(\"%d\\n\",(fu==fv));\n\t\t}//2\u548c3\u6bd4\u8f83\u7b80\u5355\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1566059096,
        "uid": 48744,
        "name": "TLE\u81ea\u52a8\u673a",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3402 \u3010\u3010\u6a21\u677f\u3011\u53ef\u6301\u4e45\u5316\u5e76\u67e5\u96c6\u3011"
    },
    {
        "content": "\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\uff0c\u5982\u6709\u4e0d\u5f53\u8fd8\u8bf7\u89c1\u8c05\u3002\n\u6211\u662f\u505a\u4e86[P3919[\u6a21\u677f]\u53ef\u6301\u4e45\u5316\u6570\u7ec4](https://www.luogu.org/problem/P3919)\u540e\u8d76\u6765\u505a\u8fd9\u9898\uff0c\u672c\u4ee5\u4e3a\u662f\u53cc\u500d\u7ecf\u9a8c\uff0c\u6ca1\u60f3\u5230\u6574\u6574\u809d\u4e86\u4e24\u5929\u3002\n\n\u95f2\u8bdd\u4e0d\u626f\uff0c\u76f8\u4fe1\u5e76\u67e5\u96c6\u6309\u79e9\u5408\u5e76\u4ec0\u4e48\u7684\u4e0d\u7528\u6211\u591a\u8bf4\uff0c\n\u6211\u60f3\u8bb2\u7684\u4e3b\u8981\u662f\u4e00\u4e2a\u5927\u591a\u6570\u4eba\u90fd\u5ffd\u7565\u4e86\u7684\u7ec6\u8282\u3002\n\n\u6211\u4eec\u5728\u5408\u5e76\u4e24\u4e2a\u5e76\u67e5\u96c6a\uff0cb\u7684\u65f6\u5019\uff0c\u5047\u8bbe\u6211\u4eec\u6309\u8282\u70b9\u6570\u91cf\u542f\u53d1\u5f0f\u5408\u5e76\uff08\u6309\u79e9\u5408\u5e76\u4ea6\u53ef\uff0c\u8fd9\u91cc\u4ee5\u542f\u53d1\u5f0f\u5408\u5e76\u4e3a\u4f8b\uff09\u5c06\u8282\u70b9a\u6302\u5230\u8282\u70b9b\u4e0a\uff0c\u8fd9\u65f6\u6211\u4eec\u5c31\u8981\u66f4\u65b0\u4e24\u4e2a\u4fe1\u606f\uff1a\u4e00\u662f\n\u5c06a\u7684\u7236\u4eb2Fa\u4fee\u6539\u4e3ab\uff0c\u4e8c\u662f\u5c06b\u7684Size\u52a0\u4e0aa\u7684Size\u3002\n\u8fd9\u65f6\u6211\u4eec\u5c31\u9700\u8981\u5bf9\u5f53\u524d\u8fd9\u68f5\u65b0\u7248\u672c\u7684\u7ebf\u6bb5\u6811\u66f4\u65b02\u6b21\uff0c\n\u7531\u4e8e\u4fee\u6539\u7684\u4f4d\u7f6e\u4e0d\u540c\uff0c\u7406\u8bba\u4e0a\u4f1a\u65b0\u5efa\u51fa2\u500dlog n\u4e2a\u8282\u70b9\u3002\n\n\u7136\u800c\u6211\u89c2\u5bdf\u4e86\u5927\u591a\u6570dalao\u4eec\u7684\u9898\u89e3\uff0c\u4f3c\u4e4e\u90fd\u662f\u53ea\u65b0\u5efa\u4e86\nlog2n\u4e2a\u8282\u70b9\uff0c\u8fd9\u5c31\u4f1a\u9020\u6210\u65b0\u65e7\u7248\u672c\u7684\u4fe1\u606f\u7d0a\u4e71\u3002\u4e3a\u4ec0\u4e48\u4f1a\u9020\u6210\u7d0a\u4e71\u5462\uff1f\u6211\u4eec\u77e5\u9053\u53ef\u6301\u4e45\u5316\u6570\u636e\u7ed3\u6784\u7684\u5b9e\u73b0\u57fa\u7840\u5c31\u662f\u5171\u7528\u76f8\u540c\u7684\u4fe1\u606f\uff0c\u53ea\u4fee\u6539\u9700\u8981\u4fee\u6539\u7684\u90e8\u5206~~\u96fe~~\u3002\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u8fdb\u884c\u4e24\u6b21\u4fee\u6539\uff0c\u6700\u574f\u60c5\u51b5\u4f1a\u65b0\u5efa2\u500dlog n\u4e2a\u8282\u70b9\uff0c\u5982\u679c\u50cf\u90e8\u5206\u9898\u89e3\u53ea\u65b0\u5efa\u4e86log n\u4e2a\u8282\u70b9\uff0c\u90a3\u4e48\u5728\u7b2c\u4e8c\u6b21\u4fee\u6539\u65f6\uff0c\u672c\u5e94\u65b0\u5efa\u51fa\u7684log n\u4e2a\u8282\u70b9\u5c31\u4f1a\u76f4\u63a5\u7ee7\u627f\u65e7\u7248\u672c\u7684\u5386\u53f2\u8282\u70b9\uff0c\u5bfc\u81f4\u4f60\u5728\u4fee\u6539\u4fe1\u606f\u65f6\uff0c\u8fde\u540c\u65e7\u7248\u672c\u7684\u4fe1\u606f\u4e00\u8d77\u4fee\u6539\u4e86\u3002\u8fd9\u6837\u770b\u8d77\u6765\u4f3c\u4e4e\u5f71\u54cd\u4e0d\u5927\uff0c\u6bd5\u7adf\u5f88\u5c11\u6709\u6570\u636e\u80fd\u9488\u5bf9\u5230\u6070\u5de7\u8be2\u95ee\u5230\u4e86\u88ab\u4f60\u9519\u8bef\u4fee\u6539\u7684\u5386\u53f2\u8282\u70b9\u7684\u4fe1\u606f\uff0c\n\u51b5\u4e14\u8fd9\u4e2a\u9519\u8bef\u53ea\u4f1a\u53d1\u751f\u5728\u7b2c\u4e8c\u6b21\u4fee\u6539\uff0c\u6240\u4ee5\u4f60\u53ea\u8981\u5728\u7b2c\u4e00\u6b21\u4fee\u6539\u65f6\u66f4\u65b0\u7684\u662fa\u7684\u7236\u4eb2\uff0c\u5e76\u4e14\u987a\u5229\u5efa\u51fa\u65b0\u8282\u70b9\uff0c\u90a3\u4e48\u7b2c\u4e8c\u6b21\u4fee\u6539\u662f\u4e5f\u53ea\u662f\u9519\u8bef\u5730\u4fee\u6539\u4e86\u5e76\u67e5\u96c6\u7684Size\uff0c\u5bf9\u4e8e\u6b63\u786e\u6027\u6ca1\u6709\u5f71\u54cd~~\u751a\u81f3\u5728\u672c\u9898\u8dd1\u5f97\u66f4\u5feb~~\u3002\n\n\u6211\u4eec\u77e5\u9053\u4e86\u9700\u8981\u65b0\u5efa2\u500dlog n\u4e2a\u8282\u70b9\uff0c\u5177\u4f53\u5e94\u8be5\u600e\u4e48\u505a\u5462\uff1f\u8fd9\u4e2a\u770b\u4f3c\u7b80\u5355\u7684\u95ee\u9898\u5374\u56f0\u6270\u4e86\u6211\u597d\u4e45\u3002\u6700\u7ec8\u6211\u60f3\u51fa\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\uff0c\u7528\u4e00\u4e2a\u53d8\u91cflast\u8bb0\u5f55\u672c\u6b21\u64cd\u4f5c\u524d\u7684\u7ebf\u6bb5\u6811\u8282\u70b9\u603b\u6570tot\uff0c\u540c\u65f6\u7ef4\u6301\u5728\u7b2c\u4e00\u6b21\u66f4\u65b0\u65f6\u7ee7\u627f\u5386\u53f2\u7248\u672c\u7684\u8282\u70b9\u8fd9\u4e00\u64cd\u4f5c\u4e0d\u53d8\uff0c\u5728\u7b2c\u4e8c\u6b21\u66f4\u65b0\u65f6\uff0c\u82e5\u8282\u70b9\u4e3a\u7a7a\uff0c\u76f4\u63a5\u65b0\u5efa\u8282\u70b9\uff1b\u5426\u5219\u9700\u8981\u5224\u65ad\u5f53\u524d\u8282\u70b9\u662f\u672c\u6b21\u64cd\u4f5c\u524d\u7684\u5386\u53f2\u8282\u70b9\u8fd8\u662f\u521a\u8fdb\u884c\u7b2c\u4e00\u6b21\u4fee\u6539\u540e\u65b0\u5efa\u51fa\u7684\u8282\u70b9\uff0c\u82e5\u662f\u524d\u8005\uff0c\u5219\u6709\u8282\u70b9\u7f16\u53f7rt<=last\uff0c\u9700\u8981++tot\u8986\u76d6\u6389\u5f53\u524d\u8282\u70b9\uff0c\u82e5\u662f\u540e\u8005\uff0c\u5219\u9009\u62e9\u7ee7\u627f\u8be5\u8282\u70b9\u3002\u5f53\u7136\u8fd9\u53ea\u662f\u6211\u7684\u65b9\u6cd5\uff0c\u5982\u679c\u4f60\u6709\u66f4\u597d\u7684\u65b9\u6cd5\uff0c\u6b22\u8fce\u8ba8\u8bba\u3002\n\n\u8bed\u6587\u6c34\u5e73\u5b9e\u5728\u6709\u9650\uff0c\u63cf\u8ff0\u4e0d\u6e05\u8fd8\u671b\u5404\u4f4d\u5305\u542b\u3002\n\u9644code\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int N=(int)1e5+10;\nint n,m,ndtot,last,i;\nint root[N],vis[N*35];\nstruct Node{\n\tint fa,dep,ch[2];\n}tc[N*35];\nvoid Read(int &x){\n\tx=0;char c=getchar();\n\twhile(c<'0'||c>'9')c=getchar();\n\twhile(c>='0'&&c<='9')x=x*10+c-'0',c=getchar();\n}\nvoid Build(int &o,int l,int r){\n\to=++ndtot;\n\tif(l==r){\n\t\ttc[o].fa=l,tc[o].dep=1;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tBuild(tc[o].ch[0],l,mid),\n\tBuild(tc[o].ch[1],mid+1,r);\n}\nint Find(int o,int l,int r,int pos){\n\tif(l==r){\n\t\tif(tc[o].fa==l)return o;\n\t\telse return Find(root[i],1,n,tc[o].fa);\n\t}\n\tint mid=(l+r)>>1;\n\tif(pos<=mid)return Find(tc[o].ch[0],l,mid,pos);\n\telse return Find(tc[o].ch[1],mid+1,r,pos);\n}\nvoid Update(int &o,int q,int l,int r,int pos,int f){\n    o=++ndtot,tc[o]=tc[q];\n    if(l==r){\n        tc[o].fa=f;return;\n    }\n    int mid=(l+r)>>1;\n    if(pos<=mid)Update(tc[o].ch[0],tc[q].ch[0],l,mid,pos,f);\n    else Update(tc[o].ch[1],tc[q].ch[1],mid+1,r,pos,f);\n}\nvoid Add(int &o,int q,int l,int r,int pos){\n\tif(o<=last)o=++ndtot,tc[o]=tc[q];\n\tif(l==r){\n\t\ttc[o].dep++;return;\n\t}\n\tint mid=(l+r)>>1;\n\tif(pos<=mid)Add(tc[o].ch[0],tc[q].ch[0],l,mid,pos);\n\telse Add(tc[o].ch[1],tc[q].ch[1],mid+1,r,pos);\n}\nint main(){\n    freopen(\"a.in\",\"r\",stdin);\n\tfreopen(\"a.out\",\"w\",stdout);\n\tRead(n),Read(m),Build(root[0],1,n),last=ndtot;\n\tfor(i=1;i<=m;i++){\n\t\tint op,x,y;\n\t\tRead(op);\n\t\tif(op==1){\n\t\t\tRead(x),Read(y),root[i]=root[i-1],\n\t\t\tx=Find(root[i],1,n,x),y=Find(root[i],1,n,y);\n\t\t\tif(tc[x].fa!=tc[y].fa){\n\t\t\t\tif(tc[x].dep<tc[y].dep)\n\t\t\t\t\tswap(x,y);\n\t\t\t\tUpdate(root[i],root[i-1],1,n,tc[y].fa,tc[x].fa);\n\t\t\t\tif(tc[x].dep==tc[y].dep)\n\t\t\t\t\tAdd(root[i],root[i-1],1,n,tc[x].fa);\n\t\t\t\tlast=ndtot;\n\t\t\t}\n\t\t}\n\t\telse if(op==2)Read(x),root[i]=root[x];\n\t\telse {\n\t\t\tRead(x),Read(y),root[i]=root[i-1];\n\t\t\tif(tc[Find(root[i],1,n,x)].fa==tc[Find(root[i],1,n,y)].fa)\n\t\t\t\tputs(\"1\");\n\t\t\telse puts(\"0\");\n\t\t}\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1563986923,
        "uid": 52673,
        "name": "Huanle",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3402 \u3010\u3010\u6a21\u677f\u3011\u53ef\u6301\u4e45\u5316\u5e76\u67e5\u96c6\u3011"
    },
    {
        "content": "\u6211\u4e5f\u6765\u6c34\u4e00\u7bc7\u9898\u89e3\u5427\n\n\u697c\u4e0a\u8bf4\u8981\u4ec0\u4e48\u6309\u6df1\u5ea6\u5408\u5e76\uff0c\u597d\u50cf\u4e0d\u9700\u8981\u554a\n\n\u6211\u5c31\u662f\u6309\u8fde\u901a\u5757\u5927\u5c0f\u5408\u5e76\uff0c\u7136\u540e\u8dd1\u5f97\u4e5f\u633a\u5feb\u3002\u3002\n\n\u8fd8\u6709\u5c31\u662f\u4e0d\u80fd\u52a0\u8def\u5f84\u538b\u7f29\uff0c\u4f1a\u88ab\u5361MLE\n\n\u7136\u540e\u597d\u50cf\u5c31\u6ca1\u4ec0\u4e48\u4e86\u3002\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<cmath>\n#include<algorithm>\n#include<cstdlib>\n#define ll long long\nusing namespace std;\ninline int read(){\n    int x=0;char ch=' ';int f=1;\n    while(ch!='-'&&(ch<'0'||ch>'9'))ch=getchar();\n    if(ch=='-')f=-1,ch=getchar();\n    while(ch>='0'&&ch<='9')x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\n    return x*f;\n}\nconst int N=2e5+5,M=N*30;\nstruct node{int ls,rs,val,size;}t[M];\nint n,m,sz;\nint root[N];\ninline void build(int &now,int l,int r){\n    now=++sz;\n    if(l==r){t[now].val=l;t[now].size=1;return;}\n    int mid=(l+r)>>1;\n    build(t[now].ls,l,mid);\n    build(t[now].rs,mid+1,r);\n}\nint num1,num2,pos,c1,c2;\ninline void query(int now,int l,int r){\n    if(l==r){num1=t[now].val;num2=t[now].size;return;}\n    int mid=(l+r)>>1;\n    if(pos<=mid)query(t[now].ls,l,mid);\n    else query(t[now].rs,mid+1,r);\n}\ninline void insert(int &now,int pre,int l,int r){\n    now=++sz;t[now]=t[pre];\n    if(l==r){if(c1)t[now].val=c1;if(c2)t[now].size=c2;return;}\n    int mid=(l+r)>>1;\n    if(pos<=mid)insert(t[now].ls,t[pre].ls,l,mid);\n    else insert(t[now].rs,t[pre].rs,mid+1,r);\n}\ninline int find(int now,int x){\n    pos=x;query(root[now],1,n);\n    int fa=num1;\n    if(fa==x)return x;\n    return find(now,fa);\n}\ninline void merge(int now,int a,int b){\n    int sa,sb,fa=find(now,a),fb=find(now,b);\n    pos=fa;query(root[now],1,n);sa=num2;\n    pos=fb;query(root[now],1,n);sb=num2;\n    if(sa<sb)swap(sa,sb),swap(fa,fb);\n    c1=0;c2=sa+sb;pos=fa;insert(root[now],root[now],1,n);\n    c1=fa;c2=0;pos=fb;insert(root[now],root[now],1,n);\n}\nint main(){\n    n=read();m=read();\n    build(root[0],1,n);\n    int opt,a,b,k;\n    for(int i=1;i<=m;i++){\n        opt=read();\n        if(opt==1){\n            root[i]=root[i-1];\n            a=read();b=read();\n            merge(i,a,b);\n        }\n        else if(opt==2){\n            k=read();\n            root[i]=root[k];\n        }\n        else{\n            root[i]=root[i-1];\n            a=read();b=read();\n            int fa=find(i,a),fb=find(i,b);\n            if(fa==fb)printf(\"1\\n\");\n            else printf(\"0\\n\");\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1517285002,
        "uid": 39505,
        "name": "\u73ab\u8475\u4e4b\u8776",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3402 \u3010\u3010\u6a21\u677f\u3011\u53ef\u6301\u4e45\u5316\u5e76\u67e5\u96c6\u3011"
    }
]