[
    {
        "content": "\u770b\u8d77\u6765\u697c\u4e0a\u90a3\u4e2a\u4ee3\u7801\u6709\u70b9(?)\u957f...\u5c1d\u8bd5\u8865\u4e00\u4e2a\uff0c\u987a\u4fbf\u52a0\u70b9\u793e\u533a\u8d21\u732e\uff0c\u7ed9 CSP2019 \u6512\u70b9 RP\u3002\n\n\u500d\u957f\u4ee5\u540e\u76f4\u63a5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4 $B$\uff0c\u53d1\u73b0\u6bcf\u6b21\u4fee\u6539\u53ea\u4f1a\u4fee\u6539\u6700\u591a\u56db\u4e2a $B_i$\uff0c\u53ef\u4ee5\u76f4\u63a5\u5355\u70b9\u4fee\u6539\u3002\n\n\u5bf9\u4e8e\u8be2\u95ee\uff0c\u663e\u7136\u53ef\u4ee5\u4e8c\u5206\u7b54\u6848 $md$\uff0c\u90a3\u4e48\u663e\u7136\u9700\u8981\u6ee1\u8db3 $[x+md-1,n+x-md+1]$ \u8fd9\u6bb5\u533a\u95f4\u4e2d\u5b58\u5728\u88ab\u5927\u4e8e $0$ \u7684\u6570\u5305\u56f4\u7684\u5168 $0$ \u5b50\u6bb5\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u6c42\u533a\u95f4\u4e2d\u88ab\u5927\u4e8e $0$ \u7684\u6570\u5305\u56f4\u7684\u5b50\u6bb5\u6570\u91cf\u3002\n\n\u57fa\u7840\u7ebf\u6bb5\u6811\u7ec3\u4e60\u9898\u3002\n\n\u6ce8\u610f\u7279\u5224\u7b54\u6848\u4e3a $0$ \u7684\u60c5\u51b5\uff0c\u5373 $A_x=0$ \u4e14 $[x+1,n+x-1]$ \u4e2d\u6ca1\u6709\u7b26\u5408\u6761\u4ef6\u7684\u5b50\u6bb5\u3002\u7136\u540e $md$ \u5c31\u53ef\u4ee5\u5728 $[1,n/2]$ \u7684\u8303\u56f4\u5185\u4e8c\u5206\u4e86\u3002\n\n\u800c\u7b54\u6848\u4e3a $-1$ \u7684\u60c5\u51b5\u5c31\u662f $md$ \u5728\u8fd9\u4e2a\u8303\u56f4\u5185\u53d6\u4efb\u610f\u503c\u90fd\u4e0d\u5408\u6cd5\u3002\u5f53\u7136\u4f60\u60f3\u7279\u5224\u4e5f\u884c\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(q\\log^2n)$\u3002\n\n```cpp\n#include <cstdio>\n#include <cctype>\n#include <algorithm>\n#include <cstring>\nint read(){\n\tregister int x = 0;\n\tregister char f = 1, ch = getchar();\n\tfor (; !isdigit(ch); ch = getchar()) if (ch == '-') f = !f;\n\tfor (; isdigit(ch); ch = getchar()) x = (x << 3) + (x << 1) + (ch ^ '0');\n\treturn f ? x : -x;\n}\nvoid print(int x, char ch = '\\n'){\n\tif (x == 0) return putchar('0'), putchar(ch), void(0);\n\tint cnt = 0, num[25];\n\tfor (x < 0 ? putchar('-'), x = -x : 0; x; x /= 10) num[++cnt] = x % 10;\n\twhile (cnt) putchar(num[cnt] ^ '0'), --cnt;\n\tputchar(ch);\n}\nconst int N = 200005;\nchar s[5];\nint n, q, a[N], c[N];\nnamespace segt{\n\tstruct node{\n\t\tint c, l, r, s; // c \u662f\u533a\u95f4\u4e2d >0 \u7684\u6570\u91cf\uff0cl,r\u8868\u793a\u533a\u95f4\u5de6\u53f3\u7684\u6570\uff0cs\u8868\u793a\u6ee1\u8db3\u6761\u4ef6\u7684\u5168 0 \u5b50\u6bb5\u6570\u91cf\n\t\tvoid init(int v){\n\t\t\ts = 0;\n\t\t\tif (v) c = l = r = 1;\n\t\t\telse c = l = r = 0;\n\t\t}\n\t}a[N << 2];\n\tnode operator + (const node &a, const node &b){\n\t\tnode c;\n\t\tc.c = a.c + b.c, c.l = a.l, c.r = b.r;\n\t\tc.s = a.s + b.s;\n\t\tif (a.c && b.c && (!a.r || !b.l)) ++c.s;\n\t\treturn c;\n\t}\n\tvoid modify(int u, int l, int r, int x, int v){\n\t\tif (l == r) return a[u].init(v), void(0);\n\t\tint md = (l + r) >> 1;\n\t\tif (x <= md) modify(u << 1, l, md, x, v);\n\t\telse modify(u << 1 | 1, md + 1, r, x, v);\n\t\ta[u] = a[u << 1] + a[u << 1 | 1];\n\t}\n\tnode query(int u, int l, int r, int L, int R){\n\t\tif (L <= l && r <= R) return a[u];\n\t\tint md = (l + r) >> 1;\n\t\tif (R <= md) return query(u << 1, l, md, L, R);\n\t\telse if (L > md) return query(u << 1 | 1, md + 1, r, L, R);\n\t\telse return query(u << 1, l, md, L, R) + query(u << 1 | 1, md + 1, r, L, R);\n\t}\n}\nint calc(int i){ return c[i] ? a[i] * a[i - 1] % 10 : (a[i] + a[i - 1]) % 10; } // \u8ba1\u7b97 B \u7684\u503c\nint main(){\n\tn = read(), q = read();\n\tfor (register int i = 1; i <= n; ++i){\n\t\ta[i] = read(), scanf(\"%s\", s), c[i] = s[0] == '*';\n\t\ta[n + i] = a[i], c[n + i] = c[i];\n\t}\n\tfor (register int i = 2; i <= (n << 1); ++i)\n\t\tsegt :: modify(1, 1, n << 1, i, calc(i));\n\twhile (q--){\n\t\tint op = read(), x = read() + 1;\n\t\tif (op == 1){\n\t\t\ta[x] = read(), scanf(\"%s\", s), c[x] = s[0] == '*';\n\t\t\ta[n + x] = a[x], c[n + x] = c[x];\n\t\t\tif (x > 1) segt :: modify(1, 1, n << 1, x, calc(x));\n\t\t\tsegt :: modify(1, 1, n << 1, x + 1, calc(x + 1));\n\t\t\tsegt :: modify(1, 1, n << 1, n + x, calc(n + x));\n\t\t\tif (x < n) segt :: modify(1, 1, n << 1, n + x + 1, calc(n + x + 1));\n\t\t\t// \u4fee\u6539\u56db\u4e2a\u70b9\u7684 B[i]\n\t\t}\n\t\telse{\n\t\t\tif (!a[x] && segt :: query(1, 1, n << 1, x + 1, n + x - 1).s == 0){ puts(\"0\"); continue; } // \u7279\u5224\u7b54\u6848\u4e3a 0 \u7684\u60c5\u51b5\n\t\t\tsegt :: modify(1, 1, n << 1, x, a[x]);\n\t\t\tsegt :: modify(1, 1, n << 1, n + x, a[x]);\n\t\t\t// \u7279\u522b\u5904\u7406\u7aef\u70b9\u7684 B[i]\n\t\t\tint l = 0, r = n >> 1, md, ans = -2;\n\t\t\twhile (l <= r)\n\t\t\t\tif (md = (l + r) >> 1, segt :: query(1, 1, n << 1, x + md, n + x - md).s) ans = md, l = md + 1;\n\t\t\t\telse r = md - 1;\n\t\t\t++ans; // \u4e8c\u5206\u7684\u5176\u5b9e\u662f\u5168 0 \u6bb5\u4e24\u8fb9\u7684\u6570\u5230\u7aef\u70b9\u7684\u8ddd\u79bb\uff0c\u6240\u4ee5\u52a0 1\n\t\t\tprint(ans);\n\t\t\tif (x > 1) segt :: modify(1, 1, n << 1, x, calc(x));\n\t\t\tsegt :: modify(1, 1, n << 1, n + x, calc(n + x));\n\t\t}\n\t}\n}\n```",
        "postTime": 1572441197,
        "uid": 20561,
        "name": "AutumnKite",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P5226 \u3010[SCOI2015]\u5c0f\u51f8\u89e3\u5bc6\u7801\u3011"
    },
    {
        "content": "\u6ca1\u6709\u601d\u7ef4\u96be\u5ea6\u7684\u4e00\u7bc7\u6bd2\u7624\u4f46\u4e0d\u5931\u7cbe\u81f4\u7684\u9898\u89e3\n\n\u8003\u8651\u53ea\u67090\u7684\u533a\u95f4\u6709\u7528 \u601d\u8003\u4e00\u4e0b\u7528set\u7ef4\u62a4\u51680\u7684\u4e00\u4e2a\u8f6c\u76d8\n\n\u90a3\u4e48\u9700\u8981\u652f\u6301\u533a\u95f4\u5355\u70b9\u5206\u88c2\u548c\u5408\u5e76\n\n\u90a3\u4e48\u6ce8\u610f\u7ef4\u62a4\u4e00\u4e0b\u73af\u7684\u60c5\u51b5\n\n\u5b9e\u9645\u4e0a\u51680\u4e32\u5f88\u81ea\u95ed\n\n\u6ce8\u610f\u7279\u5224\u6389 \u8fd8\u6709\u4e00\u4e2a\u4e32\u7684\u4e5f\u662f\n\n\u7136\u540erush\u4e00\u4e0b\u5c31\u597d\u4e86 \uff08\u5199\u4e864\u4e2a\u5c0f\u65f6GG\uff09\u5b9e\u9645\u4e0a2\u4e2a\u5c0f\u65f6\u5c31\u670980\u5206\u4e862333\n\n\u8fb9\u754c\u6ce8\u610f\u4e00\u4e0b\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#include<set>\nusing namespace std;\ninline void read(int &x){\n\tx=0;\n\tint f=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){\n\t\tif(ch=='-')f=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9'){\n\t\tx=x*10+ch-'0';\n\t\tch=getchar();\n\t} \n\tx*=f;\n}\nconst int N=1e5+100;\nset<pair<int,int> >S;\ntypedef set<pair<int,int> >::iterator Iterator;\nvoid Debug();\nint A[N];\nint B[N];\nint C[N];\nint n,m;\nbool Cross=0;\nvoid Split(int pos){\n\tif(!S.size())return;\n\tif(Cross){\n\t\tIterator It=S.end();\n\t\tIt--;\n\t\tpair<int,int>Line=(*It);\n\t\tif(pos<=Line.second||pos>=Line.first){\n\t\t\t\n\t\t\tif(pos==n-1){\n\t\t\t\tCross=0;\n\t\t\t\tS.erase(It);\n\t\t\t\tif(Line.second+1!=Line.first){\n\t\t\t\t\tS.insert(make_pair(0,Line.second));\n\t\t\t\t\tif(Line.first<n-1)S.insert(make_pair(Line.first,n-2));\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tS.insert(make_pair(0,n-2));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(pos==0){\n\t\t\t\t\tCross=0;\n\t\t\t\t\tS.erase(It);\n\t\t\t\t\tif(Line.second+1!=Line.first){\n\t\t\t\t\t\tif(Line.second>0)S.insert(make_pair(1,Line.second));\n\t\t\t\t\t\tS.insert(make_pair(Line.first,n-1));\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tS.insert(make_pair(1,n-1));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif(pos>=Line.first){\n\t\t\t\t\t\tif(Line.second+1==Line.first){\n\t\t\t\t\t\t\tS.insert(make_pair(pos+1,pos-1));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tif(pos>Line.first)S.insert(make_pair(Line.first,pos-1));\n\t\t\t\t\t\t\tS.insert(make_pair(pos+1,Line.second));\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif(Line.second+1==Line.first){\n\t\t\t\t\t\t\tS.insert(make_pair(pos+1,pos-1));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tS.insert(make_pair(Line.first,pos-1));\n\t\t\t\t\t\t\tif(pos<Line.second)S.insert(make_pair(pos+1,Line.second));\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\t\n\t}\n\tpair<int,int>now=make_pair(pos,n);\n\tIterator It=S.lower_bound(now);\n\tif(It==S.begin())return;\n\tIt--;\n\tpair<int,int>Line=(*It);\n\tif(Line.first<=pos&&pos<=Line.second){\n\t\tS.erase(It);\n\t\tif(Line.first<pos)S.insert(make_pair(Line.first,pos-1));\n\t\tif(Line.second>pos)S.insert(make_pair(pos+1,Line.second));\t\t\n\t}\n}\nvoid Insert(int pos){\n\tIterator It=S.insert(make_pair(pos,pos)).first;\n\tif(Cross){\n\t\t\n\t\tIterator Suc=It;\n\t\tSuc++;\n\n\t\tif(Suc!=S.end()){\n\t\t\tpair<int,int> now=(*Suc);\t\t\n\t\t\tif(pos+1==now.first){\n\t\t\t\tS.erase(Suc);\n\t\t\t\tS.erase(It);\n\t\t\t\tIt=S.insert(make_pair(pos,now.second)).first;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(pos+1==now.second+1){\n\t\t\t\t\tS.erase(Suc);\n\t\t\t\t\tS.erase(It);\n\t\t\t\t\tIt=S.insert(make_pair(now.first,pos)).first;\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(It!=S.begin()){\n\t\t\tIterator Pre=It;\n\t\t\tPre--;\n\t\t\tpair<int,int> now=(*Pre);\n\t\t\tpair<int,int> Ins=(*It);\n\t\t\tif(now.second==pos-1){\n\t\t\t\tS.erase(Pre);\n\t\t\t\tS.erase(It);\n\t\t\t\tIt=S.insert(make_pair(now.first,Ins.second)).first;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(now.first-1==pos){\n\t\t\t\t\tS.erase(Pre);\n\t\t\t\t\tS.erase(It);\n\t\t\t\t\tIt=S.insert(make_pair(Ins.first,now.second)).first;\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse{\n\t\tif(pos==0){\n\t\t\tIterator Pre=S.end();\n\t\t\tPre--;\n\t\t\tpair<int,int> now=(*Pre);\t\n\t\t\tif(now.second==n-1){\n\t\t\t\tCross=1;\n\t\t\t\tS.erase(Pre);\n\t\t\t\tS.erase(It);\n\t\t\t\tIt=S.insert(make_pair(now.first,pos)).first;\n\t\t\t}\n\t\t\tpair<int,int> Ins=(*It);\n\t\t\tIterator Suc=It;\n\t\t\tSuc++;\n\t\t\tif(Suc!=S.end()){\n\t\t\t\tnow=(*Suc);\n\t\t\t\tif(now.first==pos+1){\n\t\t\t\t\tS.erase(Suc);\n\t\t\t\t\tS.erase(It);\n\t\t\t\t\tIt=S.insert(make_pair(Ins.first,now.second)).first;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tSuc=S.begin();\n\t\t\t\tnow=(*Suc);\n\t\t\t\tif(now.first==pos+1){\n\t\t\t\t\tS.erase(Suc);\n\t\t\t\t\tS.erase(It);\n\t\t\t\t\tIt=S.insert(make_pair(Ins.first,now.second)).first;\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(pos==n-1){\n\t\t\t\tIterator Suc=S.begin();\n\t\t\t\tpair<int,int> now=(*Suc);\n\t\t\t\tif(now.first==0){\n\t\t\t\t\tCross=1;\n\t\t\t\t\tS.erase(Suc);\n\t\t\t\t\tS.erase(It);\n\t\t\t\t\tIt=S.insert(make_pair(pos,now.second)).first;\n\t\t\t\t}\n\t\t\t\tpair<int,int> Ins=(*It);\n\t\t\t\tIterator Pre=It;\n\t\t\t\tif(Pre!=S.begin()){\n\t\t\t\t\tPre--;\n\t\t\t\t\tnow=(*Pre);\n\t\t\t\t\tif(now.second==pos-1){\n\t\t\t\t\t\tS.erase(Pre);\n\t\t\t\t\t\tS.erase(It);\n\t\t\t\t\t\tIt=S.insert(make_pair(now.first,Ins.second)).first;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tIterator Suc=It;\n\t\t\t\t++Suc;\n\t\t\t\tif(Suc!=S.end()){\n\t\t\t\t\tpair<int,int> now=(*Suc);\n\t\t\t\t\tif(pos+1==now.first){\n\t\t\t\t\t\tS.erase(Suc);\n\t\t\t\t\t\tS.erase(It);\n\t\t\t\t\t\tIt=S.insert(make_pair(pos,now.second)).first;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(It!=S.begin()){\n\t\t\t\t\tIterator Pre=It;\n\t\t\t\t\tPre--;\n\t\t\t\t\tpair<int,int> now=(*Pre);\n\t\t\t\t\tpair<int,int> Ins=(*It);\n\t\t\t\t\tif(now.second==pos-1){\n\t\t\t\t\t\tS.erase(Pre);\n\t\t\t\t\t\tS.erase(It);\n\t\t\t\t\t\tIt=S.insert(make_pair(now.first,Ins.second)).first;\n\t\t\t\t\t}\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t}\n\t}\n}\nint Cnt=0;\nbool Check(int pos,int Len){\n\tif(pos-Len<0&&pos+Len>=n)return false;\n\tint R=pos+Len;\n\tIterator It=S.lower_bound(make_pair(R,0));\n\tif(It!=S.end()){\n\t\tpair<int,int> now=(*It);\n\t\tif(now.first<=now.second){\n\t\t\tif(n+pos-now.second>=Len)return true;\n\t\t}\n\t\telse{\n\t\t\tint Mx=pos-now.second;\n\t\t\tif(Mx>=Len)return true;\n\t\t}\n\t}\n\tint L=pos-Len+1;\n\tIt=S.lower_bound(make_pair(L,0));\n\tif(It!=S.begin()){\n\t\tIt--;\n\t\tpair<int,int> now=(*It);\n\t\tif(now.second>=L){\n\t\t\tif(It==S.begin())return false;\n\t\t\tIt--;\n\t\t\tnow=(*It);\n\t\t}\n\t\tif(now.first<=now.second){\n\t\t\tif(n+now.first-pos>=Len)return true;\n\t\t}\n\t\telse{\n\t\t\tint Mx=now.first-pos;\n\t\t\tif(Mx>=Len)return true;\n\t\t}\n\t}\n\treturn  false;\n}\nvoid Calc(int pos){\n\tif(!Cnt){\n\t\tcout<<-1<<'\\n';\n\t\treturn;\n\t}\n\tif(Cnt==n){\n\t\tcout<<0<<'\\n';\n\t\treturn;\n\t}\n\tif(S.size()==1){\n\t\tpair<int,int> now=(*S.begin());\n\t\tif(Cross){\n\t\t\tif(pos<=now.second||pos>=now.first){\n\t\t\t\tcout<<0<<'\\n';\n\t\t\t}\n\t\t\telse{\n\t\t\t\tcout<<min(now.first-pos,pos-now.second)<<'\\n';\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(pos>=now.first&&pos<=now.second){\n\t\t\t\tcout<<0<<'\\n';\n\t\t\t}\n\t\t\telse{\n\t\t\t\tcout<<min(abs(now.first-pos),abs(pos-now.second))<<'\\n';\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\tint L=1,R=n;\n\tint ans=0;\n\twhile(L<=R){\n\t\tint mid=(L+R)>>1;\n\t\tif(Check(pos,mid)){\n\t\t\tans=mid;\n\t\t\tL=mid+1;\n\t\t}\n\t\telse{\n\t\t\tR=mid-1;\n\t\t}\n\t}\n\tcout<<ans<<'\\n';\n}\nvoid Debug(){\n\tIterator It=S.begin();\n\tfor(;It!=S.end();++It){\n\t\tIterator Pre=It;\n\t\t--Pre;\n\t\tcout<<(*It).first<<\" \"<<(*It).second<<'\\n';\n\t\tif((*Pre).second>(*It).first){\n\t\t}\t\n\t}\n\tcout<<'\\n';\n}\nint main(){\n//\tfreopen(\"P5226.in\",\"r\",stdin);\n//\tfreopen(\"P5226.out\",\"w\",stdout);\n\tread(n);read(m);\n\tfor(int i=0;i<n;++i){\n\t\tchar opt[3];\n\t\tread(A[i]);\n\t\tscanf(\"%s\",opt+1);\n\t\tif(opt[1]=='+'){\n\t\t\tC[i]=1;\n\t\t}\n\t\telse{\n\t\t\tC[i]=0;\n\t\t}\n\t}\n\tfor(int i=0;i<n;++i){\n\t\tif(C[i]==0){\n\t\t\tB[i]=A[i]*A[(n+i-1)%n]%10;\n\t\t}\n\t\telse{\n\t\t\tB[i]=(A[i]+A[(n+i-1)%n])%10;\n\t\t}\n\t}\n\tbool GG=0;\n\tfor(int i=0;i<n;++i){\n\t\tif(B[i]!=0)GG=1;\n\t\tCnt+=(B[i]==0);\n\t}\n\tif(!GG){\n\t\tS.insert(make_pair(0,n-1));\n\t}\n\telse{\n\t\tif(B[0]==0&&B[n-1]==0){\n\t\t\tint Pre=0;\n\t\t\twhile(B[Pre+1]==0)Pre++;\n\t\t\tint Suc=n-1;\n\t\t\twhile(B[Suc-1]==0)Suc--;\n\t\t\tS.insert(make_pair(Suc,Pre));\n\t\t\tfor(int l=Pre+1,r;l<Suc;l=r+1){\n\t\t\t\tr=l;\n\t\t\t\tif(B[l]==0){\n\t\t\t\t\twhile(B[r+1]==0&&r+1<n)r++;\n\t\t\t\t\tS.insert(make_pair(l,r));\n\t\t\t\t}\n\t\t\t}\n\t\t\tCross=1;\t\t\t\n\t\t}\n\t\telse{\n\t\t\tint Pre=0;\n\t\t\tint Suc=n;\n\t\t\tfor(int l=Pre,r;l<Suc;l=r+1){\n\t\t\t\tr=l;\n\t\t\t\tif(B[l]==0){\n\t\t\t\t\twhile(B[r+1]==0&&r+1<n)r++;\n\t\t\t\t\tS.insert(make_pair(l,r));\n\t\t\t\t}\n\t\t\t}\t\t\n\t\t}\n\t}\n\twhile(m--){\n\t\tint opt;\n\t\tread(opt);\n\t\tif(opt==1){\n\t\t\tint pos,num;\n\t\t\tchar s[3];\n\t\t\tread(pos);read(num);\n\t\t\tscanf(\"%s\",s+1);\n\t\t\tif(s[1]=='+'){\n\t\t\t\tC[pos]=1;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tC[pos]=0;\n\t\t\t}\n\t\t\tA[pos]=num;\n\t\t\t\n\t\t\tint Suc=(pos+1)%n;\n\t\t\tif(!B[pos]){\n\t\t\t\tCnt--;\n\t\t\t\tSplit(pos);\n\t\t\t}\n\t\t\tif(C[pos]==1){\n\t\t\t\tB[pos]=(A[pos]+A[(n+pos-1)%n])%10;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tB[pos]=A[pos]*A[(n+pos-1)%n]%10;\n\t\t\t}\n\t\t\tif(!B[pos])Insert(pos),Cnt++;\n\t\t\tif(!B[Suc]){\n\t\t\t\tCnt--;\n\t\t\t\tSplit(Suc);\n\t\t\t}\n\t\t\tif(C[Suc]==1){\n\t\t\t\tB[Suc]=(A[Suc]+A[(n+Suc-1)%n])%10;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tB[Suc]=A[Suc]*A[(n+Suc-1)%n]%10;\n\t\t\t}\n\t\t\tif(!B[Suc])Insert(Suc),Cnt++;\n\t\t}\n\t\telse{\n\t\t\tint pos;\n\t\t\tread(pos);\n\t\t\tif(!B[pos])Split(pos),Cnt--;\n\t\t\tif(!A[pos])Insert(pos),Cnt++;\n\t\t\tCalc(pos);\n\t\t\tif(!A[pos])Split(pos),Cnt--;\n\t\t\tif(!B[pos])Insert(pos),Cnt++;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1553611581,
        "uid": 28147,
        "name": "\u5289\u5b50\u98ba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5226 \u3010[SCOI2015]\u5c0f\u51f8\u89e3\u5bc6\u7801\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u79cd set \u7ef4\u62a4\u591a\u6bb5\u533a\u95f4\u7684\u65e0\u8111\u89e3\u6cd5\u3002\n\n\u9996\u5148\u8003\u8651\u6bcf\u6b21\u89e3\u7801\u7684\u5e8f\u5217\u662f\u4e00\u4e2a\u5bf9\u4e8e\u4e00\u4e2a B \u5e8f\u5217 $b_i=a_{i-1} * a_i$\uff0c\u5e76\u4ece\u4e2d\u6316\u6389\u4e00\u4e2a\u6570 $b_i$ \u66ff\u6362\u6210 $a_i$ \u5bf9\u6b64\u6bcf\u6b21\u7684\u8be2\u95ee\u53ef\u4ee5\u8f6c\u5316\u6210\u5148\u5bf9B\u5e8f\u5217\u8fdb\u884c\u5355\u70b9\u4fee\u6539\u64cd\u4f5c\uff0c\u4e4b\u540e\u518d\u8fdb\u884c\u67e5\u8be2\u64cd\u4f5c\u5e76\u4fee\u6539\u56de\u539fB\u5e8f\u5217\u3002\u5176\u6b21\u662f\u4fee\u6539A\u6570\u7ec4\u7684\u7b26\u53f7\u548c\u6570\u5b57\uff0c\u5bf9 $i$ \u4f4d\u7f6e\u7684\u4fee\u6539\u663e\u7136\u53ea\u5bf9 $ b_i $ \u4ee5\u53ca $ b_{i-1} $ \u6709\u5173\u8054\uff0c\u56e0\u6b64\u4e5f\u662f\u4e24\u5904\u7684\u5355\u70b9\u4fee\u6539\u3002\n\n\u91cd\u5934\u620f\u5728\u4e8e\u5982\u4f55\u7ef4\u62a4\u73af\u4e0a\u8ddd\u79bb\u4e00\u4e2a\u70b9\u6700\u8fdc\u7684\u8fde\u7eed $0$ \u533a\u95f4\uff0c\u9996\u5148\u8003\u8651\u5c06\u6240\u6709\u533a\u95f4\u7528\u7c7b\u4f3c ODT \u7684\u65b9\u6cd5 set \u50a8\u5b58\uff0c\u7b14\u8005\u91c7\u7528\u4e86\u4e00\u4e2a pair \u7c7b\u578b\u7684 set \u5b9e\u73b0\uff0c\u4e0d\u540c\u4e8e ODT \u7684\u65b9\u9762\u662f\u6bcf\u6b21\u4fee\u6539\u5355\u70b9\u7684\u65f6\u5019\u5e94\u5f53\u5224\u65ad\u662f\u5426\u80fd\u4e0e\u5468\u56f4\u7684\u533a\u95f4\u5408\u5e76\u3002\u6ce8\u610f\u5230\u5b9e\u9645\u4e0a\u82e5\u5e72\u4e2a\u533a\u95f4\u63cf\u8ff0\u7684\u662f\u4e00\u4e2a\u73af\uff0c\u56e0\u6b64\u82e5\u5b58\u5728\u4e24\u4e2a\u533a\u95f4 $ [0,x] $  \u4e0e $ [y,n-1] $ \u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u533a\u95f4\u3002\n\n\u5728\u7528 set \u8868\u793a\u4e86\u82e5\u5e72\u4e2a\u8fde\u7eed $0$ \u533a\u95f4\u7684\u96c6\u5408\uff0c\u8003\u8651\u600e\u6837\u7684\u533a\u95f4\u6709\u53ef\u80fd\u6210\u4e3a\u7b54\u6848\uff0c\u5355\u70b9\u6765\u8bf4\u662f\u73af\u4e0a\u76f8\u5bf9\u4e8e\u67e5\u8be2\u70b9\u6b63\u5bf9\u9762\u7684\u4f4d\u7f6e\uff0c\u5177\u4f53\u800c\u8a00\u662f $ (i+n/2)\\mod n $ \u7684\u4f4d\u7f6e\uff0c\u4e14\u8d8a\u8fdc\u79bb\u8be5\u70b9\u7684\u4f4d\u7f6e\u8d8a\u52a3\uff0c\u56e0\u6b64\u6211\u4eec\u627e\u5230\u7b2c\u4e00\u4e2a $l$ \u5927\u4e8e\u8be5\u70b9\u7684\u4f4d\u7f6e\u7684\u533a\u95f4\u5404\u5411\u5de6\u53f3\u62d3\u5c55\u4f5c\u4e3a\u53ef\u80fd\u89e3\uff0c\u8fd9\u8fb9\u9009\u62e9\u62d3\u5c55 $3$ \u904d\u4e3a\u4e86\u9632\u6b62\u6709\u533a\u95f4\u4e3a\u73af\u3002\n\n\u603b\u800c\u8a00\u4e4b\u8fd8\u662f\u4e00\u79cd\u65e0\u8111\u89e3\u6cd5\u5c31\u662f\u5728 set \u7ef4\u62a4\u65b9\u9762\u7ec6\u8282\u6bd4\u8f83\u591a\uff0c\u4f46\u7801\u91cf\u4e0d\u7b97\u5927\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $ O(n\\log n) $ \n\n```cpp\n#include <bits/stdc++.h>\n#define pii pair<int,int>\n#define IT multiset<pii >::iterator\nusing namespace std;\nconst int N=1e5+10;\nint c[N],a[N],nx,n,m,op[N],b[N];\nmultiset<pii > s;\nvoid change(int pos,bool dat)\n{\n\tif(!(c[pos]^dat)) return;\n\tc[pos]=dat;\n\tif(dat)\n\t{\n\t\tint nl=pos,nr=pos;\n\t\tIT it=s.lower_bound(make_pair(pos+1,0));\n\t\tif(it!=s.end()&&(*it).first==pos+1) nr=(*it).second,s.erase(it);\n\t\t//\u662f\u5426\u80fd\u4e0e\u5de6\u533a\u95f4\u5408\u5e76\n\t\tit=s.lower_bound(make_pair(pos,0));\n\t\tif(it!=s.begin()) it--;\n\t\tif(!s.empty()&&(*it).second==pos-1) nl=(*it).first,s.erase(it);\n        //\u662f\u5426\u80fd\u4e0e\u53f3\u533a\u95f4\u5408\u5e76\n\t\ts.insert(make_pair(nl,nr));\n\t\treturn;\n\t}//add\n\tIT it=s.upper_bound(make_pair(pos+1,0));it--;\n\tint nl=(*it).first,nr=(*it).second;s.erase(it);\n\tif(pos-1>=nl) s.insert(make_pair(nl,pos-1));//\u5206\u88c2\u51fa\u5de6\u533a\u95f4\n\tif(pos+1<=nr) s.insert(make_pair(pos+1,nr));//\u5206\u88c2\u51fa\u53f3\u533a\u95f4\n\t//del\n}\n\nint get(IT it)//\u8ba1\u7b97\u5bf9\u4e8e\u94fe\u4e0a\u5355\u4e00\u533a\u95f4\u79bb\u8ba1\u7b97\u70b9\u7684\u8ddd\u79bb\n{\n\tint l=(*it).first,r=(*it).second,pos=nx;\n\tif(l<=pos&&pos<=r) return 0;\n\treturn min(min(abs(pos-l),n-abs(pos-l)),min(abs(pos-r),n-abs(pos-r)));\n}\nint cal(IT it)//\u8ba1\u7b97\u73af\u4e0a\u5355\u4e00\u533a\u95f4\u5bf9\u5e94\u7684\u771f\u5b9e\u533a\u95f4\u8ddd\u79bb\n{\n\tint ans=1e9;\n\tif((*it).second==n-1&&(*s.begin()).first==0)\n\t\treturn min(get(it),get(s.begin()));\n\tIT it1=s.end();it1--;\n\tif((*it).first==0&&(*it1).second==n-1)\n\t\treturn min(get(it),get(it1));\n\treturn get(it);\n}\nint solve(int pos)//\u8ba1\u7b97\u5bf9\u4e8e\u4e00\u4e2a\u70b9\u800c\u8a00\u6700\u8fdc\u533a\u95f4\u8ddd\u79bb\n{\n\tif(s.empty()) return -1;\n\tnx=pos;\n\tIT it=s.lower_bound(make_pair(pos+n/2>=n?pos+n/2-n:pos+n/2,0));\n\tif(it==s.end()) it=s.begin();\n\tIT it1=it;\n\t\n\tint ans=-1;\n\tfor(int i=0;i<3;i++)\n\t{\n\t\tans=max(ans,cal(it));it++;\n\t\tif(it==s.end()) it=s.begin();\n\t}//\u5411\u53f3\u5ef6\u4f38\n\tit=it1;\n\tfor(int i=0;i<3;i++)\n\t{\n\t\tans=max(ans,cal(it));\n\t\tif(it==s.begin()) it=s.end();\n\t\tit--;\n\t}//\u5411\u5de6\u5ef6\u4f38\n\treturn ans;\n}\nint main()\n{\n\tscanf(\"%d %d\",&n,&m);\n\tfor(int i=0;i<n;i++)\n\t{\n\t\tchar x[3];\n\t\tscanf(\"%d %s\",&a[i],x);\n\t\top[i]=x[0]=='*';\n\t}\n\tb[0]=op[0]?(a[0]*a[n-1]%10):((a[0]+a[n-1])%10);\n\tfor(int i=1;i<n;i++)\n\t\tb[i]=op[i]?(a[i]*a[i-1]%10):((a[i]+a[i-1])%10);\n\tfor(int i=0;i<n;i++)\n\t\tchange(i,b[i]==0);//\u8ba1\u7b97\u521d\u59cb\u7684b\u5e8f\u5217\n\t\n\tfor(int i=1,t,pos;i<=m;i++)\n\t{\n\t\tscanf(\"%d %d\",&t,&pos);\n\t\tif(t==1)\n\t\t{\n\t\t\tchar type[3];\n\t\t\tscanf(\"%d %s\",&a[pos],type);\n\t\t\top[pos]=type[0]=='*';\n\t\t\tint las=pos==0?n-1:pos-1,nxt=pos==n-1?0:pos+1;\n\t\t\t\n\t\t\tb[pos]=op[pos]?(a[pos]*a[las]%10):((a[pos]+a[las])%10);\n\t\t\tchange(pos,b[pos]==0);\n\t\t\t\n\t\t\tb[nxt]=op[nxt]?(a[pos]*a[nxt]%10):((a[pos]+a[nxt])%10);\n\t\t\tchange(nxt,b[nxt]==0);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tchange(pos,a[pos]==0);//\u5148\u5c06\u5e8f\u5217\u539f\u70b9\u6539\u7f16\u4e3aa\u503c\n\t\t\tprintf(\"%d\\n\",solve(pos));\n\t\t\tchange(pos,b[pos]==0);\n\t\t}\n\t}\n}\n```\n\n",
        "postTime": 1633614665,
        "uid": 80296,
        "name": "\u53ea\u9e45\u70e7\u70e4\u4e8c\u5ea6",
        "ccfLevel": 0,
        "title": "P5226 [SCOI2015]\u5c0f\u51f8\u89e3\u5bc6\u7801"
    }
]