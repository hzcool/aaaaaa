[
    {
        "content": "### [P8648 \u6cb9\u6f06\u9762\u79ef](https://www.luogu.com.cn/problem/P8648)\n[\u626b\u63cf\u7ebf](https://www.luogu.com.cn/problem/P5490)\u7684\u677f\u5b50\u9898\uff0c\u4e0d\u4f1a\u7684\u53ef\u4ee5\u5148\u5199\u4e00\u4e0b\u8fd9\u9053\u9898\u3002\n\n#### \u9898\u610f\u7b80\u8ff0\n\u7ed9\u5b9a $n$ \u4e2a\u77e9\u5f62\uff0c\u6c42\u8fd9\u4e9b\u77e9\u5f62\u6240\u8986\u76d6\u7684\u9762\u79ef\u4e4b\u548c\u3002\n\n#### \u626b\u63cf\u7ebf\n\u626b\u63cf\u7ebf\u987e\u540d\u601d\u4e49\u5c31\u662f\u6709\u4e00\u6761\u7ebf\u81ea\u5e95\u5411\u4e0a\u626b\u52a8\uff08\u5176\u5b9e\u600e\u4e48\u626b\u90fd\u65e0\u6240\u8c13\uff09\uff0c\u901a\u5e38\u7528\u6765\u6c42\u77e9\u5f62\u6240\u8986\u76d6\u7684\u9762\u79ef\u6216\u5468\u957f\u3002\n\n![1](https://oi-wiki.org/geometry/images/scanning.svg)\n\n\u4e0a\u9762\u8fd9\u5f20\u56fe\u5f88\u597d\u7684\u6f14\u793a\u4e86\u626b\u63cf\u7ebf\u7684\u5168\u8fc7\u7a0b\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6574\u4e2a\u77e9\u5f62\u5206\u6210\u82e5\u5e72\u4e2a\u5c0f\u77e9\u5f62\uff0c\u8fd9\u4e9b\u5c0f\u77e9\u5f62\u7684\u9ad8\u5c31\u662f\u626b\u63cf\u7ebf\u626b\u8fc7\u7684\u8ddd\u79bb\uff0c\u800c\u5c0f\u77e9\u5f62\u7684\u957f\u5c31\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u3002\n\n\u5177\u4f53\u5730\uff0c\u7ebf\u6bb5\u6811\u7684\u8282\u70b9\u9700\u8981\u7ef4\u62a4\u4e24\u4e2a\u503c\uff0c\u5206\u522b\u662f $cnt$ \u548c $len$\uff0c\u5206\u522b\u8868\u793a\u5f53\u524d\u533a\u95f4\u88ab\u8986\u76d6\u7684\u6b21\u6570\uff0c\u533a\u95f4\u5185\u8986\u76d6\u7684\u957f\u5ea6\u548c\u3002\n\n- \u82e5 $cnt>0$\uff0c\u4e0d\u7ba1\u8986\u76d6\u591a\u5c11\u6b21\uff0c$len$ \u4e00\u5b9a\u5c31\u662f\u5f53\u524d\u8282\u70b9\u7684\u533a\u95f4\u957f\u5ea6\u3002\n\n- \u82e5 $cnt=0$\uff0c$len$ \u5c31\u4e3a\u5de6\u53f3\u5b50\u8282\u70b9\u7684 $len$ \u7684\u548c\u3002\n\n```cpp\nvoid update(int p) {\n\tif (t[p].cnt) t[p].len = a[t[p].r+1]-a[t[p].l];\n\telse t[p].len = t[p<<1].len+t[p<<1|1].len;\n}\n```\n\u6709\u4e86\u8fd9\u6bb5\u4ee3\u7801\uff0c\u5269\u4e0b\u7684\u5c31\u662f\u7ebf\u6bb5\u6811\u7684\u677f\u5b50\u4e86\uff0c~~\u4e8e\u662f\u5c31\u53ef\u4ee5\u6109\u5feb\u7684\u5207\u8fc7\u8fd9\u9053\u9898\u4e86~~\u3002\n#### \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int N = 1e4+5;\nint n, tot, a[N<<2];\nll ans;//\u5341\u5e74oi\u4e00\u573a\u7a7a\uff0c\u4e0d\u5f00long long\u89c1\u7956\u5b97\nstruct edge {\n\tint y, x1, x2, k;\n} e[N];\nstruct SegmentTree {\n\tint l, r;\n\tll len, cnt;\n} t[N<<3];\nvoid build(int p, int l, int r) {\n\tt[p].l = l, t[p].r = r;\n\tif (l == r) return;\n\tint mid = (l+r)>>1;\n\tbuild(p<<1, l, mid);\n\tbuild(p<<1|1, mid+1, r);\n}\nvoid update(int p) {//\u5411\u4e0a\u4f20\u9012\n\tif (t[p].cnt) t[p].len = a[t[p].r+1]-a[t[p].l];\n\telse t[p].len = t[p<<1].len+t[p<<1|1].len;\n}\nvoid change(int p, int l, int r, int x) {\n\tif (l <= t[p].l && t[p].r <= r) {\n\t\tt[p].cnt += x;\n\t\tupdate(p);\n\t\treturn;\n\t}\n\tint mid = (t[p].l+t[p].r)>>1;\n\tif (l <= mid) change(p<<1, l, r, x);\n\tif (mid < r) change(p<<1|1, l, r, x);\n\tupdate(p);\n}\nbool cmp(edge x, edge y) {return x.y < y.y;}\nint query(int x) {return lower_bound(a+1, a+tot+1, x)-a;}//\u67e5\u8be2\nint main() {\n\tcin >> n;\n\tfor (int i = 1; i <= n; ++i) {\n\t\tint x1, y1, x2, y2;\n\t\tcin >> x1 >> y1 >> x2 >> y2;\n\t\te[(i<<1)-1] = (edge){y1, x1, x2, 1};\n\t\te[i<<1] = (edge){y2, x1, x2, -1};\n\t\ta[(i<<1)-1] = x1, a[i<<1] = x2;\n\t}\n\tn <<= 1;\n\tsort(e+1, e+n+1, cmp);\n\tsort(a+1, a+n+1);\n\ttot = unique(a+1, a+n+1)-a-1;//\u79bb\u6563\u5316\n\tbuild(1, 1, tot);\n\tfor (int i = 1; i <= n; ++i) {\n\t\tchange(1, query(e[i].x1), query(e[i].x2)-1, e[i].k);\n\t\tans += t[1].len*(e[i+1].y-e[i].y);\n\t}\n\tcout << ans;\n\treturn 0;\n}\n```\n[P8734](https://www.luogu.com.cn/problem/P8734)\uff0c[P1856](https://www.luogu.com.cn/problem/P1856)\uff0c[P1502](https://www.luogu.com.cn/problem/P1502)\uff0c[P5490](https://www.luogu.com.cn/problem/P5490) \u8fd9\u4e9b\u90fd\u662f\u626b\u63cf\u7ebf\u7684\u9898\uff0c\u6709\u5174\u8da3\u53ef\u4ee5\u505a\u4e00\u505a\u3002",
        "postTime": 1682141572,
        "uid": 670046,
        "name": "123wwm",
        "ccfLevel": 0,
        "title": "P8648 \u6cb9\u6f06\u9762\u79ef"
    },
    {
        "content": "\u7b80\u660e\u9898\u5e72\uff1a\u6709 $n$ \u4e2a\u77e9\u5f62\uff0c\u6c42\u77e9\u5f62\u8986\u76d6\u603b\u9762\u79ef\u3002  \n\u8fd9\u4e0d\u4e00\u770b\u5c31\u662f\u626b\u63cf\u7ebf\u7684\u7248\u5b50\uff08\u751a\u81f3\u8fde\u6539\u90fd\u4e0d\u7528\u6539\u3002\n![](https://oi-wiki.org/geometry/images/scanning.svg)       \n\u5927\u4f53\u601d\u8def\uff1a      \n\u626b\u63cf\u5230\u77e9\u5f62\u7684\u4e0b\u8fb9\u5c31\u8bb0\u5f55\u6b63\u5728\u626b\u63cf\u7684\u77e9\u5f62\u8fb9\u957f\u3002      \n\u626b\u63cf\u5230\u77e9\u5f62\u7684\u4e0a\u8fb9\u5c31\u8ba1\u7b97\u9762\u79ef\u8bb0\u5f55\u5230\u7ed3\u679c\u4e2d\uff0c\u7ec6\u8282\u5728\u4ee3\u7801\u6ce8\u91ca\u4e2d\u3002       \n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nint n,x,y,xx,yy;\nconst int maxn=100010;\nstruct scan//\u8bb0\u5f55\u77e9\u5f62\u4e0a\u4e0b\u8fb9\u7684\u4f4d\u7f6e\n{\n\tint l,r,h,tag;\n}lines[maxn<<1];\nbool cmp(scan s,scan ss)//\u6839\u636e\u7ebf\u7684\u9ad8\u5ea6\u6392\u5e8f\n{\n\tif(s.h!=ss.h)\n\t{\n\t\treturn s.h<ss.h;\n\t}\n\treturn s.tag>ss.tag;\n}\nint ans;\nint xcnt,xaxis[maxn<<1];\nmap<int,int> mp;\n//\u4ee5\u4e0b\u4e3a\u7ebf\u6bb5\u6811\nstruct point\n{\n\tint l,r,minn,minlen,add;\n}tree[maxn<<3];\ninline void pushup(int x)\n{\n\tint lson=x<<1,rson=lson|1;\n\ttree[x].minn=min(tree[lson].minn,tree[rson].minn);\n\ttree[x].minlen=0;\n\tif(tree[x].minn==tree[lson].minn)tree[x].minlen+=tree[lson].minlen;\n\tif(tree[x].minn==tree[rson].minn)tree[x].minlen+=tree[rson].minlen;\n}\ninline void pushadd(int x,int k)\n{\n\ttree[x].add+=k;\n\ttree[x].minn+=k;\n}\ninline void pushdown(int x)\n{\n\tif(tree[x].l==tree[x].r)return;\n\tint lson=x<<1,rson=lson|1;\n\tif(tree[x].add!=0)\n\t{\n\t\tpushadd(lson,tree[x].add);\n\t\tpushadd(rson,tree[x].add);\n\t\ttree[x].add=0;\n\t}\n}\nvoid build(int x,int l,int r)\n{\n\ttree[x]=(point){l,r,0,0,0};\n\tif(l==r)\n\t{\n\t\ttree[x].minlen=xaxis[tree[x].r+1]-xaxis[tree[x].l];\n\t\treturn;\n\t}\n\tint mid=(tree[x].l+tree[x].r)>>1,lson=x<<1,rson=lson|1;\n\tbuild(lson,l,mid);build(rson,mid+1,r);\n\tpushup(x);\n}\nvoid modify(int x,int l,int r,int k)\n{\n\tpushdown(x);\n\tif(l<=tree[x].l&&r>=tree[x].r){pushadd(x,k);return;}\n\tint mid=(tree[x].l+tree[x].r)>>1,lson=x<<1,rson=lson|1;\n\tif(l<=mid)modify(lson,l,r,k);\n\tif(r>mid)modify(rson,l,r,k);\n\tpushup(x);\n}\ninline int getlen()\n{\n\tif(tree[1].minn>0)return xaxis[tree[1].r+1]-xaxis[tree[1].l];\n\telse return xaxis[tree[1].r+1]-xaxis[tree[1].l]-tree[1].minlen;\n}\n//\u4ee5\u4e0a\u4e3a\u7ebf\u6bb5\u6811\nsigned main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>x>>y>>xx>>yy;\n\t\tlines[2*i-1]=(scan){x,xx,y,1};//\u50a8\u5b58\u7ebf\u7684\u4fe1\u606f\n\t\tlines[2*i]=(scan){x,xx,yy,-1};\n\t\txaxis[2*i-1]=x;xaxis[2*i]=xx;\n\t}\n\tsort(xaxis+1,xaxis+2*n+1);\n\txcnt=unique(xaxis+1,xaxis+2*n+1)-xaxis-1;\n\tfor(int i=1;i<=xcnt;i++)mp[xaxis[i]]=i;//\u79bb\u6563\u5316\n\tsort(lines+1,lines+2*n+1,cmp);\n\tbuild(1,1,xcnt-1);\n\tfor(int i=1;i<=2*n;i++)\n\t{\n\t\tans+=getlen()*(lines[i].h-lines[i-1].h);\n\t\tmodify(1,mp[lines[i].l],mp[lines[i].r]-1,lines[i].tag);//\u8bb0\u5f55\u7b54\u6848\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n\u53cc\u500d\u7ecf\u9a8c\u7684\u626b\u63cf\u7ebf\u677f\u5b50\u89c1P5490\u3002",
        "postTime": 1681975378,
        "uid": 557510,
        "name": "AzureHair",
        "ccfLevel": 5,
        "title": "P8648\u6cb9\u6f06\u9762\u79ef\u9898\u89e3"
    },
    {
        "content": "\u849f\u84bb\u7684\u7b2c\u4e8c\u7bc7\u9898\u89e3\uff0c\u4e0d\u559c\u52ff\u55b7\u3002\n\n\u770b\u5230\u7b97\u6cd5\u6807\u7b7e\uff0c\u5f88\u591a~~\u5305\u62ec\u6211\u5728\u5185\u7684~~\u849f\u84bb\u90fd\u61f5\u4e86\u3002\n\n**\u4f46\u4e0d\u4e00\u5b9a\u6b63\u89e3\u53ea\u6709\u4ed6\u4eec\uff01**\n\n\u770b\u8d77\u6765\u662f\u795e\u7287\u5b66\u4e60\u7684\uff0c\u4f46\u8fd9\u9898\u53ef\u4ee5\uff1a\n\n### **\u66b4\u529b\uff01\uff01\uff01**\n\n\u66b4\u529b\u7684\u8bdd\uff0c\u9700\u8981\u679a\u4e3e $10000^3$ \u6b21\uff0c$O(n^3)$ \u590d\u6742\u5ea6\u3002\n\n[\u901a\u8fc7\u8bb0\u5f55](https://www.luogu.com.cn/record/99234264)\n\n# \u57fa\u672c\u601d\u8def\n\n\u6a21\u62df\uff0c\u628a\u77e9\u5f62\u5168\u90fd\u626b\u4e00\u904d\u3002\n\n\u4f46\u662f\uff0c\u5343\u4e07\u522b\u5f00\u6574\u578b\u7684\u6570\u7ec4~~\u867d\u7136\u6211\u88ab\u5751\u4e86~~\uff0c\u4e0d\u4f1a\u8d85\u65f6\uff0c\u4f46\u4f1a\u7206\u5185\u5b58\uff0c\u5f00\u5e03\u5c14\u7c7b\u578b\u7684\u6570\u7ec4\u597d\u3002\n\n\u9664\u4e86\u8fd9\u4e2a\uff0c\u5c31\u6ca1\u5565\u597d\u8bf4\u7684\u4e86\uff0c\u751a\u81f3\u4e0d\u7528\u5438\u6c27\uff0c\u4e00\u4e2a\u70b9\u4e24\u767e\u6beb\u79d2\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```\n#include<cstdio>\nbool a[10001][10001];\nint main(){\n\tint n,x1,y1,x2,y2,l=0;\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<n;i++){\n\t\tscanf(\"%d %d %d %d\",&x1,&y1,&x2,&y2);\n\t\tfor(int j=x1;j<x2;j++){\n\t\t\tfor(int k=y1;k<y2;k++){\n\t\t\t\ta[j][k]=true;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=0;i<10001;i++){\n\t\tfor(int j=0;j<10001;j++){\n\t\t\tif(a[i][j]==true) l++;\n\t\t}\n\t}\n\tprintf(\"%d\",l);\n\treturn 0;\n}\n```\n\n# \u5b8c\u7ed3\u6492\u82b1",
        "postTime": 1684245973,
        "uid": 846398,
        "name": "jomy2013",
        "ccfLevel": 0,
        "title": "P8648 [\u84dd\u6865\u676f 2017 \u7701 A] \u6cb9\u6f06\u9762\u79ef \u9898\u89e3"
    },
    {
        "content": "# \u9898\u76ee\u5206\u6790\n\n\u9898\u610f\uff1a\u7ed9\u5b9a $n$ \u4e2a\u77e9\u5f62\uff0c\u6c42\u77e9\u5f62\u9762\u79ef\u5e76\u3002\n\n\u626b\u63cf\u7ebf\u677f\u5b50\u9898\uff0c~~\u6570\u636e\u8303\u56f4\u751a\u81f3\u5c0f\u4e8e [P5490](https://www.luogu.com.cn/problem/P5490)......\uff1f~~\n\n\u626b\u63cf\u7ebf\u7684\u57fa\u672c\u601d\u60f3\u5c31\u662f\u4ee5 $x$ \u8f74\u6bcf\u4e2a\u70b9\u4e3a\u6570\u7ec4\u4e0b\u6807\uff0c\u4ee5 $y$ \u8f74\u4ece\u5c0f\u5230\u5927\u9010\u4e2a\u626b\u63cf\uff0c\u540c\u65f6\u7528\u4e00\u4e2a\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6570\u7ec4 $cnt$\u3001$dat$\uff0c\u5206\u522b\u8868\u793a\u6bcf\u4e2a\u70b9\u88ab\u8986\u76d6\u7684\u6b21\u6570\u4e0e\u8986\u76d6\u7684\u603b\u957f\u5ea6\u3002\n\n\u7ef4\u62a4 $dat$ \u7684\u65b9\u5f0f\uff1a\n\n1. \u5982\u679c\u7ebf\u6bb5\u6811\u4e0a\u8be5\u70b9\u5df2\u88ab\u8986\u76d6\uff08\u5373 $cnt \\geq 1$\uff09\uff0c\u5219\u8be5\u70b9 $dat$ \u503c\u7b49\u4e8e $r-l+1$\uff1b\n\n1. \u5426\u5219 $dat$ \u503c\u7b49\u4e8e\u5de6\u53f3\u5b50\u8282\u70b9 $dat$ \u503c\u4e4b\u548c\u3002\n\n\u6bcf\u6b21\u7edf\u8ba1\u7ebf\u6bb5\u6811\u9876\u7aef\u7684 $dat$ \u503c\uff0c\u5c06\u8be5\u503c\u4e58\u4ee5\u5f53\u6b21\u626b\u63cf\u5bbd\u5ea6\u7d2f\u52a0\u5230\u7b54\u6848\u5373\u53ef\u3002\n\n\u5177\u4f53\u5206\u6790\u4e0e\u7ec6\u8282\u8be6\u89c1\u4ee3\u7801\u90e8\u5206\uff1a\n\n\n# \u4ee3\u7801+\u6ce8\u91ca\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define MAXN 100010\ntypedef long long ll;\nll x1,x2,h1,h2,dis[MAXN*2],val[MAXN*2],ans;\nint n,tot,maxn=(1<<30)-1;\n/*-------------------------------------\u521d\u59cb\u5316------------------------------------*/\nstruct scanline{\n\tll x,lh,rh;\n\tint d;\n}a[MAXN];\nbool cmp(scanline a,scanline b){\t\t\t\t\t\t\t// \u626b\u63cf\u7ebf\u7684\u6bd4\u8f83\u51fd\u6570 \n\tif(a.x!=b.x)return a.x<b.x;\t\t\t\t\t\t\t\t// \u4f18\u5148x\u8f74\u4ece\u5de6\u5230\u53f3 \n\treturn a.d>b.d;\t\t\t\t\t\t\t\t\t\t\t// \u5904\u7406d=1\u7d27\u8d34d=-1\u7684\u60c5\u51b5 \n}\n/*-----------------------------------\u7ebf\u6bb5\u6811\u90e8\u5206-----------------------------------*/ \nstruct SegmentTree{\n\tint l,r,dat,cnt;\n}t[MAXN*4];\ninline void update(int p){\t\t\t\t\t\t\t\t\t// \u4ece\u4e0b\u5f80\u4e0a\u66f4\u65b0\u8282\u70b9 \n\tif(t[p].l==maxn&&t[p].r==maxn)return; \n\tif(t[p].cnt)t[p].dat=val[t[p].r+1]-val[t[p].l];\t\t\t// \u88ab\u8986\u76d6\u65f6\u7b49\u4e8e\u5de6\u53f3\u8282\u70b9\u4e4b\u5dee \n\telse t[p].dat=t[p*2].dat+t[p*2+1].dat;\t\t\t\t\t// \u672a\u88ab\u8986\u76d6\u5219\u7b49\u4e8e\u5b50\u8282\u70b9\u8986\u76d6\u957f\u5ea6\u4e4b\u548c \n}\nvoid build(int p,int l,int r){\n\tt[p].l=l;t[p].r=r;\n\tt[p].dat=0;t[p].cnt=0;\n\tif(l==r)return;\n\tint mid=(l+r)/2;\n\tbuild(p*2,l,mid);\n\tbuild(p*2+1,mid+1,r);\n}\nvoid add(int p,int l,int r,int d){\n\tif(l<=t[p].l&&r>=t[p].r){\n\t\tt[p].cnt+=d;\n\t\tupdate(p);\n\t\treturn;\n\t}\n\tint mid=(t[p].l+t[p].r)/2;\n\tif(l<=mid)add(p*2,l,r,d);\n\tif(mid<r)add(p*2+1,l,r,d);\n\tupdate(p);\n}\n/*-------------------------------------\u4e3b\u51fd\u6570---------------------------------------*/ \nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%lld%lld%lld%lld\",&x1,&h1,&x2,&h2);\n\t\ta[i*2-1].lh=a[i*2].lh=h1;\n\t\ta[i*2-1].rh=a[i*2].rh=h2;\n\t\ta[i*2-1].x=x1;a[i*2].x=x2;\n\t\ta[i*2-1].d=1;a[i*2].d=-1;\n\t\tdis[++tot]=h1;dis[++tot]=h2;\t\t\t\t\t\t// dis\u6570\u7ec4\u7528\u4e8e\u79bb\u6563\u5316 \n\t}\n\tsort(dis+1,dis+n*2+1);\n    int cnt=unique(dis+1,dis+n*2+1)-dis-1;\n\tfor(int i=1;i<=n*2;i++){\t\t\t\t\t\t\t\t// \u79bb\u6563\u5316\u90e8\u5206 \n\t\tint pos1=lower_bound(dis+1,dis+cnt+1,a[i].lh)-dis;\t\n\t\tint pos2=lower_bound(dis+1,dis+cnt+1,a[i].rh)-dis;\n\t\tval[pos1]=a[i].lh;val[pos2]=a[i].rh;\n\t\ta[i].lh=pos1;maxn=max(maxn,pos1);a[i].rh=pos2;\t\t// \u7528\u79bb\u6563\u5316\u540e\u7684\u503c\u66f4\u65b0\u626b\u63cf\u7ebf\n\t}\n\tsort(a+1,a+n*2+1,cmp);\t\t\t\t\t\t\t\t\t// \u5bf9\u626b\u63cf\u7ebf\u4ece\u5de6\u5230\u53f3\u6392\u5e8f \n\tbuild(1,1,n*2);\n\tfor(int i=1;i<=n*2;i++){\n\t\tadd(1,a[i].lh,a[i].rh-1,a[i].d);\n\t\tans+=(a[i+1].x-a[i].x)*(t[1].dat);\n\t}\n\tprintf(\"%lld\",ans);\n\treturn 0;\n} \n```\n",
        "postTime": 1676363837,
        "uid": 805382,
        "name": "DaredemoDaisuki__",
        "ccfLevel": 0,
        "title": "For P8648"
    }
]