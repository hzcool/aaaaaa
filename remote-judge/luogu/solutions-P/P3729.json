[
    {
        "content": "\u524d\u7f6e\u77e5\u8bc6\uff1a[\u6700\u5c0f\u5272\u6811](https://www.luogu.com.cn/problem/P4897)\u3002\u6ca1\u6709\u8fd9\u4e1c\u897f\u4e0d\u77e5\u9053\u600e\u4e48\u5199\u8fd9\u9053\u9898\u3002  \n### \u9898\u610f\n\u7ed9\u5b9a\u4e00\u5f20\u65e0\u5411\u56fe\uff0c\u6bcf\u4e2a\u70b9\u6709\u70b9\u6743\u3002\u6bcf\u6b21\u7ed9\u5b9a\u4e00\u4e2a $x$\uff0c\u8be2\u95ee\u5f53\u9650\u5236\u9009\u51fa\u7684\u70b9\u96c6\u6743\u503c\u548c $\\ge x$ \u65f6\u6700\u5927\u7684\u6574\u6570 $k$\uff0c\u6ee1\u8db3\u70b9\u96c6\u5185\u4efb\u610f\u4e24\u70b9\u95f4\u5747\u6709\u81f3\u5c11 $k$ \u6761\u4e0d\u76f8\u4ea4\u8def\u5f84\u3002\n### \u9898\u89e3\n\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u201c\u4e24\u70b9\u95f4\u6709\u81f3\u5c11 $k$ \u6761\u4e0d\u76f8\u4ea4\u8def\u5f84\u201d\u8f6c\u5316\u4e3a\u201c\u4ee5\u4e24\u70b9\u4e3a\u6e90\u3001\u6c47\uff0c\u6700\u5927\u6d41\u91cf\u4e0d\u5c0f\u4e8e $k$ \u201d\u3002\u8fd0\u7528\u6700\u5927\u6d41\u6700\u5c0f\u5272\u5b9a\u7406\u8f6c\u5316\u4e3a\u201c\u4e24\u70b9\u95f4\u6700\u5c0f\u5272\u4e0d\u5c0f\u4e8e $k$ \u201d\uff0c\u6211\u4eec\u5c31\u81ea\u7136\u5730\u8054\u60f3\u5230\u6700\u5c0f\u5272\u6811\u3002  \n\u9996\u5148\u8dd1\u4e00\u904d\u6700\u5c0f\u5272\u6811\uff0c\u8bb0\u5f55\u4e0b\u6240\u6709\u6811\u8fb9\uff0c\u5c06\u5b83\u4eec\u6309\u8fb9\u6743\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u540c\u65f6\u5c06\u6240\u6709\u8be2\u95ee\u6309 $x$ \u503c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\u7528\u5e26\u6743\u5e76\u67e5\u96c6\u7ef4\u62a4\u6bcf\u4e2a\u70b9\u6240\u5728\u8054\u901a\u5757\u7684\u70b9\u6743\u548c\uff0c\u4f9d\u6b21\u52a0\u5165\u6bcf\u4e00\u6761\u8fb9\uff0c\u5e76\u66f4\u65b0\u5355\u4e2a\u8fde\u901a\u5757\u7684\u70b9\u6743\u548c\u6700\u5927\u503c $cur$\u3002\u6bcf\u6b21\u52a0\u5b8c\u8fb9\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6240\u6709\u6ee1\u8db3 $x \\le cur$ \u4e14\u672a\u88ab\u5904\u7406\u7684\u8be2\u95ee\u7684\u7b54\u6848\u66f4\u65b0\u4e3a\u5f53\u524d\u8fb9\u7684\u6743\u503c\u3002\u6ce8\u610f\u7279\u6b8a\u5904\u7406\u8f93\u51fa```nan```\u7684\u60c5\u51b5\u3002  \n\u4e3b\u8981\u7684\u590d\u6742\u5ea6\u74f6\u9888\u5728\u6c42\u6700\u5c0f\u5272\u6811\u7684\u8fc7\u7a0b\uff0c\u76f8\u4fe1\u81ea\u5df1\u80fd\u8fc7\u5c31\u597d\u4e86\u3002  \n\u611f\u89c9\u662f\u9053\u4e0d\u9519\u7684\u6700\u5c0f\u5272\u6811\u7ec3\u4e60\u9898\u3002\n### \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define reg register\ntypedef long long ll;\nusing namespace std;\nconst int MN=555;\nconst int MM=12005;\nconst int MQ=2020;\nconst int inf=0x3f3f3f3f;\nint to[MM],nxt[MM],c[MM],flow[MM],h[MN],cnt;\ninline void ins(int s,int t,int w,int f){\n\tto[cnt]=t;nxt[cnt]=h[s];c[cnt]=w;\n\tflow[cnt]=f;h[s]=cnt++;\n}\nint n,m;\nnamespace Flow{\n\tint S,T,iter[MN],level[MN],que[MN];\n\tbool bfs(){\n\t\tmemset(level,-1,sizeof(level));\n\t\treg int he=0,ta=0;\n\t\tque[ta++]=S;level[S]=0;\n\t\twhile(he<ta){\n\t\t\treg int v=que[he++];\n\t\t\tfor(reg int i=h[v];~i;i=nxt[i])\n\t\t\t\tif((c[i]-flow[i])&&level[to[i]]<0)\n\t\t\t\t\tlevel[to[i]]=level[v]+1,que[ta++]=to[i];\n\t\t}\n\t\treturn ~level[T];\n\t}\n\tint dfs(int st,int f){\n\t\tif(st==T)return f;\n\t\treg int used=0,w;\n\t\tfor(reg int& i=iter[st];~i;i=nxt[i])\n\t\t\tif((c[i]-flow[i])&&level[to[i]]>level[st]){\n\t\t\t\tw=dfs(to[i],min(f-used,c[i]-flow[i]));\n\t\t\t\tif(!w)continue;\n\t\t\t\tflow[i^1]-=w;flow[i]+=w;used+=w;\n\t\t\t\tif(f==used)return f;\n\t\t\t}\n\t\treturn used;\n\t}\n\tint Dinic(int ss,int tt){\n\t\tS=ss;T=tt;reg int res=0,f;\n\t\tfor(reg int i=0;i<cnt;i++)\n\t\t\tflow[i]=(~i&1)*c[i];\n\t\twhile(bfs()){\n\t\t\tmemcpy(iter,h,sizeof(h));\n\t\t\twhile(f=dfs(S,inf))res+=f;\n\t\t}\n\t\treturn res;\n\t}\n}\nint node[MN],t1[MN],t2[MN],col[MN],idx;\nvoid paint(int st){\n\tcol[st]=idx;\n\tfor(reg int i=h[st];i;i=nxt[i])\n\t\tif((c[i]-flow[i])&&col[to[i]]<idx)paint(to[i]);\n}\nstruct edge{int s,t,w;}es[MN];\nstruct data{int x,id;}ask[MQ];\nint q,ecnt,wei[MN],par[MN],ans[MQ];\nvoid solve(int l,int r){\n\tif(l==r)return;\n\treg int val=Flow::Dinic(node[l],node[l+1]);\n\tidx++;paint(node[l]);\n\tes[++ecnt]=(edge){node[l],node[l+1],val};\n\treg int cnt1=0,cnt2=0;\n\tfor(reg int i=l;i<=r;i++){\n\t\tif(col[node[i]]==idx)t1[++cnt1]=node[i];\n\t\tif(col[node[i]]!=idx)t2[++cnt2]=node[i];\n\t}\n\tfor(reg int i=1;i<=cnt1;i++)node[i+l-1]=t1[i];\n\tfor(reg int i=1;i<=cnt2;i++)node[i+l+cnt1-1]=t2[i];\n\tsolve(l,l+cnt1-1);solve(l+cnt1,r);\n}\ninline int find(int x){return par[x]==x?x:par[x]=find(par[x]);}\nint main(){\n\tscanf(\"%d%d%d\",&n,&m,&q);\n\tmemset(h,-1,sizeof(h));\n\tfor(reg int i=1;i<=n;i++)scanf(\"%d\",wei+i);\n\tfor(reg int i=1,s,t;i<=m;i++){\n\t\tscanf(\"%d%d\",&s,&t);\n\t\tins(s,t,1,0);ins(t,s,1,1);\n\t\tins(t,s,1,0);ins(s,t,1,1);\n\t}\n\tfor(reg int i=1;i<=n;i++)node[i]=i;\n\tsolve(1,n);\n\tfor(reg int i=1;i<=q;i++)scanf(\"%d\",&ask[i].x),ask[i].id=i;\n\tsort(es+1,es+n,[](edge a,edge b){\n\t\treturn a.w>b.w;\n\t});\n\tsort(ask+1,ask+1+q,[](data a,data b){\n\t\treturn a.x<b.x;\n\t});\n\treg int Ans=0,cur=1;\n\tfor(reg int i=1;i<=n;i++)par[i]=i,Ans=max(Ans,wei[i]);\n\tmemset(ans,0x3f,sizeof(ans));\n\tfor(;cur<=q&&ask[cur].x<=Ans;cur++)ans[ask[cur].id]=0;\n\tfor(reg int i=1,s,t;i<n;i++){\n\t\ts=find(es[i].s);t=find(es[i].t);\n\t\tpar[t]=s;Ans=max(Ans,wei[s]+=wei[t]);\n\t\tfor(;cur<=q&&ask[cur].x<=Ans;cur++)\n\t\t\tans[ask[cur].id]=es[i].w;\n\t}\n\tfor(reg int i=1;i<=q;i++){\n\t\tif(ans[i]==inf)puts(\"Nuclear launch detected\");\n\t\telse if(ans[i]==0)puts(\"nan\");\n\t\telse printf(\"%d\\n\",ans[i]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1585576906,
        "uid": 17930,
        "name": "Marser",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3729 \u3010\u66fc\u54c8\u987f\u8ba1\u5212EX\u3011"
    },
    {
        "content": "\u524d\u7f6e\u77e5\u8bc6\uff1a[\u6700\u5c0f\u5272\u6811](https://www.luogu.com.cn/problem/P4897)  \n\n\u5148\u8003\u8651\u5355\u6b21\u8be2\u95ee\u600e\u4e48\u505a\uff1a  \n\u8981\u6c42 $u$ \u5230 $v$ \u6709 $k$ \u6761\u4e0d\u5171\u8fb9\u8def\u5f84\u7b49\u6548\u4e8e $u$ \u5230 $v$ \u6709 $k$ \u6761\u589e\u5e7f\u8def\uff0c\u5373 $u$ \u5230 $v$ \u6700\u5927\u6d41\u4e0d\u5c0f\u4e8e $k$\u3002  \n\u53c8\u56e0\u4e3a\u6700\u5927\u6d41\u7b49\u4e8e\u6700\u5c0f\u5272\u6709 $u$ \u548c $v$ \u7684\u6700\u5c0f\u5272\u4e0d\u5c0f\u4e8e $k$\uff0c\u6240\u4ee5 $u$ \u548c $v$ \u5728\u6700\u5c0f\u5272\u6811\u4e0a\u7684\u8def\u5f84\u7ecf\u8fc7\u7684\u8fb9\u6743\u5747\u4e0d\u5c0f\u4e8e $k$\u3002  \n\u6240\u4ee5\u628a\u8fb9\u6309\u6743\u503c\u4ece\u5927\u5230\u5c0f\u52a0\u5165\uff0c\u76f4\u5230\u5f53\u524d\u6700\u5927\u7684\u8fde\u901a\u5757\u70b9\u6743\u548c\u5927\u4e8e\u7b49\u4e8e\u8981\u6c42\u7684\u5de5\u4f5c\u80fd\u529b\u5373\u53ef\u3002\n\n\u66b4\u529b\u505a\u7684\u8bdd\u590d\u6742\u5ea6\u4e3a $O(n^3m+nq \\alpha(n))$ \u53ef\u901a\u8fc7\uff0c\u4ee3\u7801\u7565\u3002\n\n\u7531\u4e0a\u8ff0\u7b97\u6cd5\u6613\u5f97\uff0c\u5de5\u4f5c\u80fd\u529b\u589e\u52a0\u65f6\u6700\u5927\u5b89\u5168\u7cfb\u6570\u5355\u8c03\u4e0d\u589e\u3002\u6240\u4ee5\u53ef\u4ee5\u5bf9\u8be2\u95ee\u7684\u5de5\u4f5c\u80fd\u529b\u79bb\u7ebf\u540e\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u518d\u7528\u4e00\u4e2a\u6307\u9488\u7ef4\u62a4\u76ee\u524d\u63d2\u5165\u5230\u7684\u8fb9\u4ece\u5927\u5f80\u5c0f\u8df3\u5373\u53ef $O(q \\log q+n \\alpha(n))$ \u5b8c\u6210\u8be2\u95ee\u90e8\u5206\u3002\n\n\u6ce8\u610f\u7279\u5224\u4e00\u4e2a\u70b9\u5c31\u80fd\u6ee1\u8db3\u5de5\u4f5c\u80fd\u529b\u548c\u6240\u6709\u70b9\u5168\u90e8\u63d2\u5165\u4e5f\u4e0d\u6ee1\u8db3\u5de5\u4f5c\u80fd\u529b\u7684\u7684\u60c5\u51b5\u3002\n\ncode\uff1a\n\n```c++\n#include <cstdio>\n#include <vector>\n#include <algorithm>\n#define M 90010\n#define N 3010\nint n,m,Q,head[N],cur=2;\nstruct edge{int v,w,nxt;}e[M],bak[M];\nint dep[N];\ninline int min(int x,int y) {return x<y?x:y;}\nvoid ins(int u,int v,int w)\n{\n\te[cur]={v,w,head[u]}; head[u]=cur++;\n\te[cur]={u,w,head[v]}; head[v]=cur++;\n}\nbool bfs(int s,int t)\n{\n\tstatic int q[N];  for(int i=1;i<=n;i++) dep[i]=0;\n\tdep[s]=1; q[0]=s; for(int i=0,p=1,x;i<p;i++)\n\t\tfor(int j=head[x=q[i]];j;j=e[j].nxt) if(e[j].w&&!dep[e[j].v]) dep[e[j].v]=dep[x]+1, q[p++]=e[j].v;\n\treturn dep[t];\n}\nint dfs(int s,int t,int flow)\n{\n\tif(s==t||!flow) return flow;\n\tint ans=0; for(int i=head[s],tmp;i;i=e[i].nxt) if(dep[e[i].v]==dep[s]+1)\n\t\ttmp=dfs(e[i].v,t,min(flow,e[i].w)), e[i].w-=tmp, e[i^1].w+=tmp, flow-=tmp, ans+=tmp;\n\tif(!ans) dep[s]=-1;\n\treturn ans;\n}\nint a[N]; std::vector<edge> g[N];\nvoid build(int l,int r)\n{\n\tif(l>=r) return;\n\tint flow=0;\n\tfor(int i=0;i<cur;i++) e[i]=bak[i];\n\twhile(bfs(a[l],a[r])) flow+=dfs(a[l],a[r],0x3f3f3f3f);\n\tg[a[l]].push_back({a[r],flow,-1});\n\tg[a[r]].push_back({a[l],flow,-1});\n\tint p=l; for(int i=l;i<r;i++) if(dep[a[i]]) {int t=a[i];a[i]=a[p];a[p]=t;p++;}\n\tbuild(l,p-1); build(p,r);\n}\nvoid work() {for(int i=1;i<=n;i++) a[i]=i; for(int i=0;i<cur;i++) bak[i]=e[i]; build(1,n);}\nint tmp[N*2],f[N*N];\nvoid split(int u,int fa,int v) {tmp[u]=v; for(auto i:g[u]) if(i.v!=fa) split(i.v,u,min(v,i.w));}\nstruct query\n{\n\tint x,i;\n\tbool operator<(query b) {return x<b.x;}\n}q[M];\nint fa[N],sz[N],mx;\nstruct bruh\n{\n\tint u,v,w;\n\tbool operator<(bruh b) {return w>b.w;}\n}T[N];\nint ans[M];\nint find(int x) {return fa[x]==x?x:fa[x]=find(fa[x]);}\nvoid merge(int u,int v) {u=find(u),v=find(v); if(u!=v) {sz[u]+=sz[v]; fa[v]=u; if(sz[u]>mx) mx=sz[u];}}\nint main()\n{\n\t//\u5728\u539f\u56fe\u4e0a\u7684\u90e8\u5206\uff1a\u5efa\u51fa\u6700\u5c0f\u5272\u6811\n\tscanf(\"%d%d%d\",&n,&m,&Q);\n\tfor(int i=1;i<=n;i++) {scanf(\"%d\",sz+i); if(sz[i]>mx) mx=sz[i];}\n\tfor(int i=1;i<=n;i++) fa[i]=i;\n\tfor(int i=0,u,v;i<m;i++) scanf(\"%d%d\",&u,&v),ins(u,v,1);\n\twork();\n\t//\u5728\u6700\u5c0f\u5272\u6811\u4e0a\u7684\u90e8\u5206\n\tfor(int i=0;i<Q;i++) scanf(\"%d\",&q[i].x),q[i].i=i;\n\tm=0; for(int i=1;i<=n;i++) for(auto j:g[i]) if(j.v<i) T[m++]=bruh{i,j.v,j.w};\n\tstd::sort(T,T+m); std::sort(q,q+Q); int p=0,tmp=0x3f3f3f3f;\n\tfor(int i=0;i<Q;i++)\n\t{\n\t\twhile(p<m&&mx<q[i].x) tmp=T[p].w, merge(T[p].u,T[p].v), p++;\n\t\tans[q[i].i]= q[i].x<=mx?tmp:-1;\n\t}\n\tfor(int i=0;i<Q;i++)\n\t{\n\t\tif(ans[i]==0x3f3f3f3f) puts(\"nan\");\n\t\telse if(ans[i]==-1) puts(\"Nuclear launch detected\");\n\t\telse printf(\"%d\\n\",ans[i]);\n\t}\n}\n```",
        "postTime": 1680620777,
        "uid": 298051,
        "name": "xkcdjerry",
        "ccfLevel": 7,
        "title": "P3729 \u9898\u89e3"
    }
]