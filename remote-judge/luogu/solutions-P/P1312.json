[
    {
        "content": "# \u9898\u89e3\n\n\u4f20\u9001\u95e8\uff1a[\u900f\u5f7b](https://www.cnblogs.com/ZAGER/p/9535526.html)\n\n\u6b64\u9898\u5c31\u76f8\u5f53\u4e0e\u662f\u4e00\u9053\u5927\u578b\u641c\u7d22\u6a21\u62df\u9898\uff0c\u9700\u8981\u8010\u5fc3\uff0c\u6781\u8003\u9a8c\u7801\u529b\uff1b\n\n\u56e0\u4e3a\u4ee3\u7801\u6bd4\u8f83\u957f\uff0c\u6240\u4ee5\u5efa\u8bae\u5927\u5bb6\u591a\u5199\u51fd\u6570\uff0c\u5c3d\u91cf\u4e0d\u8981\u90fd\u5199\u5728\u4e00\u8d77\uff1b\n\n\u63d0\u524d\u4ea4\u4ee3\u6570\u7ec4\n\nint map[N][N];      //\u8f93\u5165\u7684\u56fe \n\nint ans[N][5];      //\u8f93\u51fa\u7684\u7b54\u6848 \n\nint last[N][N][N];  //\u540e\u9762\u4f1a\u8bb2 \n\nbool xiao[N][N];    //\u540e\u9762\u4f1a\u8bb2\n \n\n\u4e0b\u9762\u6211\u8bb2\u4e00\u4e0b\u5176\u4e2d\u7684\u6838\u5fc3\u51fd\u6570\uff1a\n\n### 1.copy\uff08\u590d\u5236\uff09\uff1a\n\u6211\u4eec\u8981\u628a\u5f53\u524d\u7684\u539f\u59cb\u72b6\u6001\u590d\u5236\n\n\u4e3a\u4ec0\u4e48\u8981\u590d\u5236\u5462\uff0c\u56de\u6eaf\u65f6\u8981\u7528\uff1b\n\n\u4f46\u4e0d\u80fd\u4f7f\u7528\u4e8c\u7ef4\u6570\u7ec4\u4e86\uff0c\u8981\u5b9a\u4e49\u4e00\u4e2a\u4e09\u7ef4\u6570\u7ec4\n\nlast[d][i][j]\uff1a\u7b2cd\u6b65\u65f6\u5728i\u884cj\u5217\u7684\u539f\u72b6\u6001\uff1b\n\n```cpp\nvoid copy(int x){\n    for(int i=1;i<=5;i++)\n        for(int j=1;j<=7;j++)\n        last[x][i][j]=map[i][j];\n}\n```\n\n### 2.update\uff08\u66f4\u65b0\u6e38\u620f\u7684\u72b6\u6001\uff09\uff1a\n\u8fd9\u4e2a\u6bd4\u8f83\u7b80\u5355\uff0c\u5c31\u662f\u628a\u8be5\u6389\u4e0b\u53bb\u7684\u6389\u4e0b\u53bb\uff1b\n\n\u5b9a\u4e49\u4e00\u4e2ax\u4e3a\u8fd9\u4e2a\u8fd9\u4e2a\u65b9\u5757\u4e0b0\u7684\u4e2a\u6570\uff0c\u7136\u540e\u6a21\u62df\u4e00\u4e0b\uff1b\n```cpp\nvoid update(){\n    for(int i=1;i<=5;i++){\n        int x=0;\n        for(int j=1;j<=7;j++){\n            if(!map[i][j])x++;\n            else{\n                map[i][j-x]=map[i][j];\n                map[i][j]=0;\n            }\n        }\n    }\n}\n```\n### 3.remove\uff08\u6d88\u9664\uff09\uff1a\n\u9898\u76ee\u8981\u6c42\u4e00\u5b9a\u8981\u884c\u6216\u5217\u8fde\u7eed3\u4e2a\u624d\u80fd\u6d88\u9664\uff1b\n\n\u4f46\u4e00\u5b9a\u4e0d\u80fd\u9047\u52303\u4e2a\u8fde\u7eed\u7684\u5c31\u6d88\uff1b\n\n\u4f8b\u5982\uff1a\n\n![](https://cdn.vijos.org/fs/acf926a5766e17b5121b294191727def2c705852)\n\n```cpp\nbool remove(){\n    int flag=0;\n    for(int i=1;i<=5;i++)\n        for(int j=1;j<=7;j++){\n            if(i-1>=1&&i+1<=5&&map[i][j]==map[i-1][j]&&map[i][j]==map[i+1][j]&&map[i][j]){\n                xiao[i-1][j]=1;xiao[i+1][j]=1;xiao[i][j]=1;flag=1;\n            }\n            if(j-1>=1&&j+1<=7&&map[i][j]==map[i][j+1]&&map[i][j]==map[i][j-1]&&map[i][j]){\n                xiao[i][j]=1;xiao[i][j+1]=1;xiao[i][j-1]=1;flag=1;\n            }\n        }\n    if(!flag)return 0;\n    for(int i=1;i<=5;i++)\n        for(int j=1;j<=7;j++)\n        if(xiao[i][j]){\n            xiao[i][j]=0;\n            map[i][j]=0;\n        } \n    return 1;\n}\n```\n\n\u56fe5\u4e2d\u7684\u8981\u662f\u5148\u6d883\u4e2a\uff0c\u90a3\u5269\u4e0b\u7684\u5c31\u4e0d\u80fd\u6d88\u4e86\uff0c\u5c31WA\u4e86\uff1b\n\n\u6211\u679a\u4e3e\u7684i,j\u662f\u4e2d\u95f4\u65b9\u5757\u7684\u5750\u6807\uff1b\n\n\u800c\u4e14\u4f7f\u7528\u7684\u662fbool\u578b\uff0c\u4e3a\u4e86\u540e\u9762\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u7ee7\u7eed\u53bb\u6d88\uff1b\n\n\n### 4.move \uff08\u79fb\u52a8\uff09\uff1a\n\u79fb\u52a8\u6bd4\u8f83\u7b80\u5355\uff1b\u5c31\u662f\u7528\u5230\u4e86\u4e4b\u524d\u51fd\u6570\uff1b\n\n\u8981\u6ce8\u610f\uff0c\u53ef\u80fd\u6d88\u9664\u540e\u8fd8\u53ef\u4ee5\u66f4\u65b0\uff0c\u6240\u4ee5\u8981\u4f7f\u7528while\u5faa\u73af\uff1b\n\n```cpp\nvoid move(int i,int j,int x){\n    int tmp=map[i][j];\n    map[i][j]=map[i+x][j];\n    map[i+x][j]=tmp;\n    update();\n    while(remove())update();\n}\n```\n### 5.check\uff08\u5224\u65ad\u662f\u5426\u90fd\u6d88\u9664\u4e86\uff09\uff1a\n\u8fd9\u4e2a\u66f4\u7b80\u5355\u4e86\uff1b\n\n\u56e0\u4e3a\u6240\u6709\u65b9\u5757\u90fd\u6389\u843d\u4e86\uff0c\u6240\u4ee5\u76f4\u63a5\u5224\u65ad\u6700\u540e\u4e00\u884c\u90fd\u4e3a0\u5c31\u884c\u4e86\uff1b\n```cpp\nbool check(){\n    for(int i=1;i<=5;i++)\n        if(map[i][1])return 0;\n    return 1;\n}\n```\n\n### DFS\u7684\u526a\u679d\uff1a\n1.\u76f8\u540c\u989c\u8272\u7684\u65b9\u5757\u53ef\u4ee5\u8df3\u8fc7\uff08\u663e\u800c\u6613\u89c1\uff09\uff1b\n\n2.\u8fd8\u6709\u4e00\u4e2a\u6bd4\u8f83\u96be\u60f3\u7684\u526a\u679d\uff1a\n\n\u7ed3\u8bba\uff1a\u53ea\u6709\u53f3\u8fb9\u6709\u65b9\u5757\u624dmove\uff0c\u5de6\u8fb9\u6ca1\u6709\u65b9\u5757\u624dmove\uff1b\n\n\u8bc1\u660e\uff08\u81ea\u5df1\u778e\u5199\u7684\uff09\uff1a\n\n\uff08\u4f60\u6b63\u5728\u641ci\u5217\uff09\u82e5\u5de6\u9762\u6709\u65b9\u5757\uff0c\u90a3\u4e48\u4f60\u4f1a\u5728\u641ci-1\u5217\u65f6\u5c06\u5176\u53f3\u79fb\uff0c\u548c\u4f60\u5728i\u5217\u65f6\u5de6\u79fb\u662f\u7b49\u6548\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u51cf\u6389\uff1b\n### code\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cctype>\n#include<cstdlib>\n#define ll long long\n#define N 10\nusing namespace std;\nint read()\n{\n    int X=0,w=0; char ch=0;\n    while(!isdigit(ch)) {w|=ch=='-';ch=getchar();}\n    while(isdigit(ch)) X=(X<<3)+(X<<1)+(ch^48),ch=getchar();\n    return w?-X:X;\n}\nint n,map[N][N],ans[N][5],last[N][N][N],xiao[N][N];\nbool remove(){\n    int flag=0;\n    for(int i=1;i<=5;i++)\n        for(int j=1;j<=7;j++){\n            if(i-1>=1&&i+1<=5&&map[i][j]==map[i-1][j]&&map[i][j]==map[i+1][j]&&map[i][j]){\n                xiao[i-1][j]=1;xiao[i+1][j]=1;xiao[i][j]=1;flag=1;\n            }\n            if(j-1>=1&&j+1<=7&&map[i][j]==map[i][j+1]&&map[i][j]==map[i][j-1]&&map[i][j]){\n                xiao[i][j]=1;xiao[i][j+1]=1;xiao[i][j-1]=1;flag=1;\n            }\n        }\n    if(!flag)return 0;\n    for(int i=1;i<=5;i++)\n        for(int j=1;j<=7;j++)\n        if(xiao[i][j]){\n            xiao[i][j]=0;\n            map[i][j]=0;\n        } \n    return 1;\n}\n\nbool check(){\n    for(int i=1;i<=5;i++)\n        if(map[i][1])return 0;\n    return 1;\n}\nvoid copy(int x){\n    for(int i=1;i<=5;i++)\n        for(int j=1;j<=7;j++)\n        last[x][i][j]=map[i][j];\n}\nvoid update(){\n    for(int i=1;i<=5;i++){\n        int wow=0;\n        for(int j=1;j<=7;j++){\n            if(!map[i][j])wow++;\n            else{\n                if(!wow)continue;\n                map[i][j-wow]=map[i][j];\n                map[i][j]=0;\n            }\n        }\n    }\n}\nvoid move(int i,int j,int x){\n    int tmp=map[i][j];\n    map[i][j]=map[i+x][j];\n    map[i+x][j]=tmp;\n    update();\n    while(remove())update();\n}\n\nvoid dfs(int x){\n    if(check()){\n        for(int i=1;i<=n;i++){\n            if(i!=1)printf(\"\\n\");\n            for(int j=1;j<=3;j++)\n            printf(\"%d \",ans[i][j]);\n        }\n        exit(0);\n    }\n    if(x==n+1)return;\n    copy(x);\n    for(int i=1;i<=5;i++)\n        for(int j=1;j<=7;j++){\n            if(map[i][j]){\n                if(i+1<=5&&map[i][j]!=map[i+1][j]){\n                move(i,j,1);\n                ans[x][1]=i-1;ans[x][2]=j-1;ans[x][3]=1;\n                dfs(x+1);\n                for(int i=1;i<=5;i++)\n                    for(int j=1;j<=7;j++)\n                    map[i][j]=last[x][i][j];\n                ans[x][1]=-1;ans[x][2]=-1;ans[x][3]=-1;\n            }\n            if(i-1>=1&&map[i-1][j]==0){\n                move(i,j,-1);\n                ans[x][1]=i-1;ans[x][2]=j-1;ans[x][3]=-1;\n                dfs(x+1);\n                for(int i=1;i<=5;i++)\n                    for(int j=1;j<=7;j++)\n                    map[i][j]=last[x][i][j];\n                ans[x][1]=-1;ans[x][2]=-1;ans[x][3]=-1;\n            }\n            }\n        }\n}\nint main()\n{\n//    freopen(\"Manya.in\",\"r\",stdin);\n//    freopen(\"Manya.out\",\"w\",stdout);\n    n=read();\n    for(int i=1;i<=5;i++){\n        for(int j=1;j<=8;j++){\n            int x=read();\n            if(x==0)break;\n            map[i][j]=x;\n        }\n    }\n    memset(ans,-1,sizeof(ans));\n    dfs(1);\n    puts(\"-1\");\n    return 0;\n}\n```",
        "postTime": 1535378143,
        "uid": 87967,
        "name": "ZAGER",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1312 \u3010Mayan\u6e38\u620f\u3011"
    },
    {
        "content": "##  \u56e0\u4e3a\u8c8c\u4f3c\u7b2c\u4e00\u9875\u7684\u9898\u89e3\u5168\u90fd\u53ef\u4ee5\u88ab\n\n$2$\n\n$1\\;0$\n\n$1\\;0$\n\n$2\\;2\\;0$\n\n$1\\;0$\n\n$2\\;0$\n\n## \u8fd9\u7ec4\u6570\u636e\u5361\u6389\uff0c\u6240\u4ee5\u6211\u5c31\u53d1\u4e86\u8fd9\u7bc7\u9898\u89e3\n\n**\u901a\u8bfb\u9898\u76ee\uff0c\u5f88\u5bb9\u6613\u60f3\u5230dfs\u5904\u7406**\n\n**\u518d\u4ed4\u7ec6\u601d\u8003\uff0c\u53ef\u4ee5\u60f3\u5230\u5206\u4e3a\u79fb\u52a8\u5757\u548c\u6d88\u9664\u5757\u4e24\u4e2a\u90e8\u5206**\n\n**\u5148\u8c08\u6d88\u9664\u5757\uff0c\u56e0\u4e3a\u79fb\u52a8\u5757\u9700\u8981\u7528\u5230\u6d88\u9664\u5757**\n\n****\n\n## # \u6d88\u9664\u5757\n\n**\u6574\u4e2a\u4ee3\u7801\u8fd0\u884c\u987a\u5e8f\u662f**$update->dfsupdate->updateall$\n\n**\u6240\u4ee5\u6211\u5148\u8bb2 $update$**\n\n**\u9996\u5148\u662f\u4e24\u4e2a\u53c2\u6570\uff0c\u4ee3\u8868\u6d88\u9664\u5757\u7684\u4e2d\u5fc3\u5750\u6807\uff0c\u8fd9\u4e2a\u51fd\u6570\u662f\u66f4\u65b0\u4ee5\u4e2d\u5fc3\u5750\u6807\u5411\u56db\u5468\u76f4\u7ebf\u5ef6\u5c55\u7684\u533a\u57df\u53ef\u6d88\u9664\u7684\u5757**\n\n**\u7136\u540e\u5c31\u662f$dfsupdate$\u6df1\u641c\u4ee5\u4e2d\u5fc3\u5750\u6807\u5411\u56db\u5468\u5ef6\u4f38\u6240\u80fd\u5230\u8fbe\u6700\u8fdc\u7684x\u548cy**\n\n**\u7136\u540e\u5224\u65ad\u5982\u679c\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e $3$ \u5c31\u6807\u8bb0\u8fd9\u4e9b\u70b9**\n\n**$marks$ \u7528\u4e8e\u4e0b\u4e00\u6b21\u5757\u6e05\u96f6\uff0c$updates$ \u7528\u4e8e\u8bb0\u5f55\u4e0b\u4e00\u6b21\u9700\u8981\u66f4\u65b0\u7684\u5757(\u88ab\u6e05\u96f6\u7684\u5757\u90fd\u6709\u53ef\u80fd\u88ab\u66f4\u65b0)**\n\n**\u6700\u540e\u518d\u8c03\u7528 $updateall$ \u6765\u771f\u6b63\u610f\u4e49\u4e0a\u6d88\u9664\u5757(\u5c06 $marks$ \u6807\u8bb0\u7684\u5757\u6e05\u96f6\uff0c\u7136\u540e\u518d\u5904\u7406\u4e00\u4e0b\u4e0a\u9762\u7684\u5757\u8981\u5f80\u4e0b\u6389\u7684\u95ee\u9898)**\n\n```cpp\nbool marks[10][10];\n\nbool updates[10][10];\n\nint maxx,maxy;\n\nint minx,miny; \n\nvoid dfsupdate(int x,int y,int dire,int d) {\n    visited[x][y] = true;\n    maxx = max(maxx,x);\n    minx = min(minx,x);\n    maxy = max(maxy,y);\n    miny = min(miny,y);\n    if (dire == -1){\n        for (int i = 0;i<4;i++){\n            int dx = x + dir[i][0];\n            int dy = y + dir[i][1];\n            if (checkp(dx,dy))\n                if (now.maps[x][y] == now.maps[dx][dy])\n                    dfsupdate(dx,dy,i,d+1);\n        }\n    }\n    else {\n        int dx = x + dir[dire][0];\n        int dy = y + dir[dire][1];\n        if (checkp(dx,dy))\n            if (now.maps[x][y] == now.maps[dx][dy])\n                dfsupdate(dx,dy,dire,d+1);\n    }\n    visited[x][y] = false;\n}\n\nbool update(int x,int y) {\n    maxx = maxy = 0;\n    minx = miny = 100;\n    dfsupdate(x,y,-1,1);  \n    bool flag = false;\n    if (maxx-minx+1>=3) {\n        for (int i = minx;i<=maxx;i++){\n            marks[i][y] = true;\n               updates[i][y] = true;\n        }\n        flag = true;\n    }\n    if (maxy-miny+1>=3) {\n        for (int i = miny;i<=maxy;i++) {\n            marks[x][i] = true;\n            updates[x][i] = true;\n        }\n        flag = true;\n    }\n    return flag;       \n}\n\nvoid updateall() {\n    for (int i = 0;i<5;i++){\n        for (int j = 0;j<7;j++)\n            if (marks[i][j])\n                now.maps[i][j] = 0,marks[i][j] = false;\n        for (int j = 0;j<7;j++)\n            if (!now.maps[i][j]){\n                int ind = 0;\n                for (int k = j+1;k<7;k++)\n                    if (now.maps[i][k])\n                        now.maps[i][j+ind] = now.maps[i][k],ind++,now.maps[i][k] = 0;\n                break;\n            }\n    }\n}\n```\n\n****\n\n## # \u79fb\u52a8\u5757\n\n**\u9996\u5148\u662f\u4e09\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u3001\u4e8c\u4e2a\u53c2\u6570\u5206\u522b\u662f\u5757\u7684\u5750\u6807\uff0ck\u4ee3\u8868\u5411\u5de6\u79fb\u8fd8\u662f\u53f3\u79fb\u5de6\u79fb\u5c31\u662f0\uff0c\u53f3\u79fb\u5c31\u662f1**\n\n**$targetx$ ,\u548c $targety$ \u5206\u522b\u4ee3\u8868\u79fb\u52a8\u5230\u7684\u76ee\u6807\u5757\u7684\u5750\u6807**\n\n**\u7136\u540e\u5c31\u662f\u8d8a\u754c\u5224\u65ad\uff0c\u79fb\u52a8\uff0c\u518d\u7528\u4e00\u4e2a $steps$ \u6570\u7ec4\u50a8\u5b58\u8d70\u8fc7\u7684\u6b65**\n\n**\u7136\u540e\u5c31\u662f\u79fb\u52a8\u5230\u7684\u5757\u662f\u5426\u4e3a\u7a7a\uff0c\u5982\u679c\u662f\u7a7a\u5757\uff0c\u8d77\u59cb\u4f4d\u7f6e\u4e0a\u9762\u7684\u5757\u8981\u5f80\u4e0b\u6389\uff0c\u79fb\u52a8\u5230\u76ee\u6807\u4f4d\u7f6e\u540e\u8981\u5f80\u4e0b\u6389**\n\n**\u56e0\u4e3a\u8981\u5f80\u4e0b\u6389\uff0c\u6240\u4ee5\u76ee\u6807\u5757\u7684\u5750\u6807\u8981\u6539\u53d8\uff0c\u6240\u4ee5\u9700\u8981\u5728\u5904\u7406\u4e2d\u66f4\u65b0\u76ee\u6807\u5757\u7684\u5750\u6807**\n\n**\u6700\u540e\u5c31\u662f\u6d88\u9664\u5757\uff0c\u56e0\u4e3a\u53ea\u79fb\u52a8\u4e86\u8fd9\u4e24\u4e2a\u5757\uff0c\u6240\u4ee5\u53ea\u6709\u53ef\u80fd\u4ee5\u8fd9\u4e24\u4e2a\u5757\u4e3a\u4e2d\u5fc3\u7684\u5176\u4ed6\u5757\u4f1a\u6d88\u9664\uff0c\u6240\u4ee5\u5c31\u9996\u5148\u66f4\u65b0\u8fd9\u4e24\u4e2a\u5757\uff0c\u5982\u679c\u80fd\u591f\u7ee7\u7eed\u66f4\u65b0\u518d\u66f4\u65b0**\n\n```cpp\nbool move(int x,int y,int k) {\n\tint targetx,targety;\n\tif (k){\n\t    if (x==4)\n\t    \treturn false;\n\t    else {\n\t\t\tint t = now.maps[x][y];\n\t\t\tnow.maps[x][y] = now.maps[x+1][y];\n\t\t\tnow.maps[x+1][y] = t;\n\t\t\tsteps[cnt++] = Info(x,y,1);\n\t\t\ttargetx = x + 1;\n\t\t\ttargety = y;\n\t        if(!now.maps[x][y]){\n\t        \tfor (int i = x;i<=x+1;i++)\n\t\t        \tfor (int j = 0;j<7;j++)\n\t\t\t            if (!now.maps[i][j]){\n\t\t\t                int ind = 0;\n\t\t\t                for (int k = j+1;k<7;k++)\n\t\t\t                    if (now.maps[i][k]){\n\t\t\t                    \tif(i == x+1&&y == k)\n\t\t\t\t\t\t\t\t\t\ttargety = j+ind;\n\t\t\t                        now.maps[i][j+ind] = now.maps[i][k],ind++,now.maps[i][k] = 0;\n\t\t\t                    } \n\t\t\t                break;\n\t\t\t            } \n\t\t\t}\n\t    }\n    } \n    else {\n    \tif (x==0)\n\t    \treturn false;\n\t    else {\n\t\t\tint t = now.maps[x][y];\n\t\t\tnow.maps[x][y] = now.maps[x-1][y];\n\t\t\tnow.maps[x-1][y] = t;\n\t\t\tsteps[cnt++] = Info(x,y,-1);\n\t\t\ttargetx = x - 1;\n\t\t\ttargety = y;\n\t        if(!now.maps[x][y]){\n\t        \tfor (int i = x-1;i<=x;i++)\n\t\t        \tfor (int j = 0;j<7;j++)\n\t\t\t            if (!now.maps[i][j]){\n\t\t\t                int ind = 0;\n\t\t\t                for (int k = j+1;k<7;k++)\n\t\t\t                    if (now.maps[i][k]){\n\t\t\t                    \tif(i == x-1&&y == k)\n\t\t\t\t\t\t\t\t\t\ttargety = j+ind;\n\t\t\t                        now.maps[i][j+ind] = now.maps[i][k],ind++,now.maps[i][k] = 0;\n\t\t\t                    } \n\t\t\t                break;\n\t\t\t            } \n\t\t\t}\t\t\n\t    }\n\t} \n\tbool flag = false;\n\tif (update(x,y)|update(targetx,targety))\n\t\tflag = true;\n    while (flag){\n    \tupdateall();\n    \tflag = false;\n    \tfor (int i = 0;i<5;i++)\n    \t\tfor (int j = 0;j<7&&now.maps[i][j]!=0;j++)\n    \t\t\tif (updates[i][j]){\n    \t\t\t\tupdates[i][j] = false;\n\t\t\t\t\tif (update(i,j))\n    \t\t\t\t\tflag = true;\n    \t\t\t} \n\t}\n\treturn true;\n}\n```\n\n****\n\n**\u7136\u540e\u518d\u770b\u770bdfs**\n\n**\u9996\u5148\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u7b2c\u51e0\u6b65\uff0c\u7b2c\u4e8c\u3001\u4e09\u4e2a\u53c2\u6570\u5206\u522b\u4e3a\u76ee\u6807\u5757\u5750\u6807\uff0c\u7b2c\u56db\u4e2a\u53c2\u6570\u4e3a\u5411\u5de6\u79fb\u8fd8\u662f\u53f3\u79fb**\n\n**\u7136\u540e\u5c31\u662f\u8d8a\u754c\u5224\u65ad**\n\n**\u6211\u5c06\u6574\u4e2a\u68cb\u76d8\u4f5c\u4e3a\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c$last$ \u6570\u7ec4\u662f\u7528\u6765\u56de\u6eaf\u7528\u7684**\n\n**\u6bcf\u6b21\u79fb\u52a8\u5757\u4e4b\u540e\uff0c\u6211\u90fd\u4f1a\u8fdb\u884c\u4e00\u6b21\u68c0\u67e5\uff0c\u4ee3\u7801\u5982\u4e0b**\n\n```cpp\nbool check() {\n    for (int i = 0;i<5;i++)\n        if (now.maps[i][0]!=0)\n            return false;\n    return true;\n}\n```\n\n**\u53ea\u7528\u68c0\u67e5\u4e00\u5217\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f\u5426\u4e3a\u96f6\u5c31ok**\n\n**\u5982\u679c\u68c0\u67e5\u6210\u529f\uff0c\u5c31\u5224\u65ad\u5f53\u524d\u6b65\u6570\u662f\u5426\u4e3a\u76ee\u6807\u6b65\u6570**\n\n**\u5982\u679c\u662f\uff0c\u5c31\u76f4\u63a5\u8f93\u51fa**\n\n**\u5982\u679c\u4e0d\u662f\uff0c\u5c31\u5224\u65ad\u79bb\u76ee\u6807\u4e0d\u662f\u662f\u5426\u76f8\u5dee2\u7684\u500d\u6570**\n\n**\u5982\u679c\u76f8\u5dee2\u7684\u500d\u6570\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7\u4e00\u76f4\u53f3\u79fb\u53f3\u8fb9\u5b58\u5728\u7684\u5757\u5b9e\u73b0\u8df3\u8fc7(\u867d\u7136\u5728\u641c\u7d22\u4e0b\u4e00\u4e2a\u5757\u7684\u65f6\u5019\u4e5f\u4f1a\u641c\u7d22\u672c\u8eab\uff0c\u4f46\u8fd9\u79cd\u65b9\u5f0f\u4f1a\u7701\u6389\u4e00\u70b9\u65f6\u95f4)**\n\n**\u5728\u641c\u7d22\u4e0b\u4e00\u4e2a\u5757\u7684\u65f6\u5019\uff0c\u5c31\u9700\u8981\u526a\u679d\u4e86**\n\n**\u663e\u7136\uff0c\u5f88\u591a\u65f6\u5019\u5411\u5de6\u79fb\u6839\u672c\u4e0d\u7528\u8003\u8651\uff0c\u5de6\u8fb9\u5757\u5411\u53f3\u79fb\u5df2\u7ecf\u4ee3\u66ff\u4e86\u53f3\u8fb9\u5757\u5411\u5de6\u79fb\u7684\u529f\u80fd\uff0c\u800c\u4e14\u7b54\u6848\u8981\u6c42\u6309\u5b57\u5178\u5e8f\u8f93\u51fa\u4e14\u5411\u53f3\u79fb\u4f18\u4e8e\u5411\u5de6\u79fb**\n\n**\u4f46\u662f\uff0c\u8fd8\u662f\u5b58\u5728\u4e00\u79cd\u60c5\u51b5\uff0c\u90a3\u5c31\u662f\u5de6\u8fb9\u7684\u5757\u4e3a\u96f6\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u624d\u9700\u8003\u8651\u5411\u5de6\u79fb**\n\n```cpp\nvoid dfs(int d,int x,int y,int k) {\n    if (d > n)\n        return;\n    last[d] = now;\n    if (move(x,y,k)){\n        if (check()){\n            if (d == n){\n                for (int i = 0;i<cnt;i++)\n                    cout<<steps[i].x<<\" \"<<steps[i].y<<\" \"<<steps[i].flag<<endl;\n                exit(0);\n            } else {\n                bool flag = false;\n                if ((d-n)%2 == 0) {\n                    for (int i = 0;i<5;i++){ \n                        for (int j = 0;j<7;j++)\n                            if (last[1].maps[i][j]&&last[1].maps[i][j+1]){\n                                for (int t = 0;t<(d-n);t++)\n                                    cout<<i<<\" \"<<j<<\" 1\"<<endl;\n                                break;\n                                flag = true;\n                            } \n                        if (flag)\n                            break;\n                    } \n                    for (int i = 0;i<cnt;i++)\n                        cout<<steps[i].x<<\" \"<<steps[i].y<<\" \"<<steps[i].flag<<endl;\n                    exit(0);\n                }\n            } \n        }\n        for (int i = 0;i<5;i++)\n            for (int j = 0;j<7&&now.maps[i][j]!=0;j++)\n                if (i!=0&&!now.maps[i-1][j])\n                    for (int l = 1;l>=0;l--)\n                        dfs(d+1,i,j,l);\n                else\n                    dfs(d+1,i,j,1);\n        cnt--;\n    } \n    now = last[d];\n}\n```\n\n****\n\n# \u6b22\u8fce\u6765\u5361\n\n**\u4e0b\u9762\u662f\u5b8c\u6574\u4ee3\u7801**\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n\nusing namespace std;\n\nstruct G {\n    int maps[10][10];\n};\n\nint n;\n\nG now;\n\nG last[10];\n\nint dir[4][2] = {{1,0},{0,1},{-1,0},{0,-1}};\n\nstruct Info {\n    int x,y;\n    int flag;\n    \n    Info(int dx,int dy,int flag) {\n        x = dx;\n        y = dy;\n        this->flag = flag;\n    }\n    Info(){\n    }\n};\n\nInfo steps[10];\n\nint cnt = 0;\n\nbool visited[10][10];\n\nbool checkp(int x,int y) {\n    if (x>=0&&y>=0&&x<5&&y<7&&!visited[x][y]&&now.maps[x][y])\n        return true;\n    return false;\n}\n\nbool marks[10][10];\n\nbool updates[10][10];\n\nint maxx,maxy;\n\nint minx,miny; \n\nvoid dfsupdate(int x,int y,int dire,int d) {\n    visited[x][y] = true;\n    maxx = max(maxx,x);\n    minx = min(minx,x);\n    maxy = max(maxy,y);\n    miny = min(miny,y);\n    if (dire == -1){\n\t    for (int i = 0;i<4;i++){\n\t        int dx = x + dir[i][0];\n\t        int dy = y + dir[i][1];\n\t        if (checkp(dx,dy))\n\t            if (now.maps[x][y] == now.maps[dx][dy])\n\t                dfsupdate(dx,dy,i,d+1);\n\t    }\n    }\n\telse {\n\t\tint dx = x + dir[dire][0];\n\t\tint dy = y + dir[dire][1];\n\t\tif (checkp(dx,dy))\n\t\t\tif (now.maps[x][y] == now.maps[dx][dy])\n\t\t\t\tdfsupdate(dx,dy,dire,d+1);\n\t}\n    visited[x][y] = false;\n}\n\nbool update(int x,int y) {\n\tmaxx = maxy = 0;\n\tminx = miny = 100;\n    dfsupdate(x,y,-1,1);  \n    bool flag = false;\n\tif (maxx-minx+1>=3) {\n\t\tfor (int i = minx;i<=maxx;i++){\n\t\t\tmarks[i][y] = true;\n\t       \tupdates[i][y] = true;\n\t\t}\n\t\tflag = true;\n\t}\n\tif (maxy-miny+1>=3) {\n\t\tfor (int i = miny;i<=maxy;i++) {\n\t\t\tmarks[x][i] = true;\n\t\t\tupdates[x][i] = true;\n\t\t}\n\t\tflag = true;\n\t}\n    return flag;       \n}\n\nvoid updateall() {\n    for (int i = 0;i<5;i++){\n        for (int j = 0;j<7;j++)\n            if (marks[i][j])\n\t\t\t\tnow.maps[i][j] = 0,marks[i][j] = false;\n        for (int j = 0;j<7;j++)\n            if (!now.maps[i][j]){\n                int ind = 0;\n                for (int k = j+1;k<7;k++)\n                    if (now.maps[i][k])\n                        now.maps[i][j+ind] = now.maps[i][k],ind++,now.maps[i][k] = 0;\n                break;\n            }\n\t}\n}\n\nbool check() {\n    for (int i = 0;i<5;i++)\n        if (now.maps[i][0]!=0)\n            return false;\n    return true;\n}\n\nbool move(int x,int y,int k) {\n\tint targetx,targety;\n\tif (k){\n\t    if (x==4)\n\t    \treturn false;\n\t    else {\n\t\t\tint t = now.maps[x][y];\n\t\t\tnow.maps[x][y] = now.maps[x+1][y];\n\t\t\tnow.maps[x+1][y] = t;\n\t\t\tsteps[cnt++] = Info(x,y,1);\n\t\t\ttargetx = x + 1;\n\t\t\ttargety = y;\n\t        if(!now.maps[x][y]){\n\t        \tfor (int i = x;i<=x+1;i++)\n\t\t        \tfor (int j = 0;j<7;j++)\n\t\t\t            if (!now.maps[i][j]){\n\t\t\t                int ind = 0;\n\t\t\t                for (int k = j+1;k<7;k++)\n\t\t\t                    if (now.maps[i][k]){\n\t\t\t                    \tif(i == x+1&&y == k)\n\t\t\t\t\t\t\t\t\t\ttargety = j+ind;\n\t\t\t                        now.maps[i][j+ind] = now.maps[i][k],ind++,now.maps[i][k] = 0;\n\t\t\t                    } \n\t\t\t                break;\n\t\t\t            } \n\t\t\t}\n\t    }\n    } \n    else {\n    \tif (x==0)\n\t    \treturn false;\n\t    else {\n\t\t\tint t = now.maps[x][y];\n\t\t\tnow.maps[x][y] = now.maps[x-1][y];\n\t\t\tnow.maps[x-1][y] = t;\n\t\t\tsteps[cnt++] = Info(x,y,-1);\n\t\t\ttargetx = x - 1;\n\t\t\ttargety = y;\n\t        if(!now.maps[x][y]){\n\t        \tfor (int i = x-1;i<=x;i++)\n\t\t        \tfor (int j = 0;j<7;j++)\n\t\t\t            if (!now.maps[i][j]){\n\t\t\t                int ind = 0;\n\t\t\t                for (int k = j+1;k<7;k++)\n\t\t\t                    if (now.maps[i][k]){\n\t\t\t                    \tif(i == x-1&&y == k)\n\t\t\t\t\t\t\t\t\t\ttargety = j+ind;\n\t\t\t                        now.maps[i][j+ind] = now.maps[i][k],ind++,now.maps[i][k] = 0;\n\t\t\t                    } \n\t\t\t                break;\n\t\t\t            } \n\t\t\t}\t\t\n\t    }\n\t} \n\tbool flag = false;\n\tif (update(x,y)|update(targetx,targety))\n\t\tflag = true;\n    while (flag){\n    \tupdateall();\n    \tflag = false;\n    \tfor (int i = 0;i<5;i++)\n    \t\tfor (int j = 0;j<7&&now.maps[i][j]!=0;j++)\n    \t\t\tif (updates[i][j]){\n    \t\t\t\tupdates[i][j] = false;\n\t\t\t\t\tif (update(i,j))\n    \t\t\t\t\tflag = true;\n    \t\t\t} \n\t}\n\treturn true;\n}\n\nvoid dfs(int d,int x,int y,int k) {\n\tif (d > n)\n\t\treturn;\n    last[d] = now;\n    if (move(x,y,k)){\n        if (check()){\n        \tif (d == n){\n        \t\tfor (int i = 0;i<cnt;i++)\n                \tcout<<steps[i].x<<\" \"<<steps[i].y<<\" \"<<steps[i].flag<<endl;\n            \texit(0);\n        \t} else {\n        \t\tbool flag = false;\n        \t\tif ((d-n)%2 == 0) {\n\t\t\t\t\tfor (int i = 0;i<5;i++){ \n\t\t\t\t\t\tfor (int j = 0;j<7;j++)\n\t\t\t\t\t\t\tif (last[1].maps[i][j]&&last[1].maps[i][j+1]){\n\t\t\t\t\t\t\t\tfor (int t = 0;t<(d-n);t++)\n\t\t\t\t\t\t\t\t\tcout<<i<<\" \"<<j<<\" 1\"<<endl;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tflag = true;\n\t\t\t\t\t\t\t} \n\t\t\t\t\t\tif (flag)\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t} \n\t\t\t\t\tfor (int i = 0;i<cnt;i++)\n                \t\tcout<<steps[i].x<<\" \"<<steps[i].y<<\" \"<<steps[i].flag<<endl;\n\t\t\t\t\texit(0);\n\t\t\t\t}\n\t\t\t} \n\t\t}\n        for (int i = 0;i<5;i++)\n            for (int j = 0;j<7&&now.maps[i][j]!=0;j++)\n            \tif (i!=0&&!now.maps[i-1][j])\n            \t\tfor (int l = 1;l>=0;l--)\n                \t\tdfs(d+1,i,j,l);\n        \t\telse\n        \t\t\tdfs(d+1,i,j,1);\n\t\tcnt--;\n    } \n    now = last[d];\n}\n\nint main() {\n    cin>>n;\n    for (int i = 0;i<5;i++) {\n        int x;\n        int ind = 0;\n        while (cin>>x) {\n            if (x == 0)\n                break;\n            now.maps[i][ind] = x;\n            ind++;\n        }\n    }\n    for (int i = 0;i<5;i++)\n        for (int j = 0;j<7&&now.maps[i][j]!=0;j++)\n        \tif (i!=0&&!now.maps[i-1][j])\n        \t\tfor (int k = 1;k>=0;k--)\n            \t\tdfs(1,i,j,k);\n            else\n            \tdfs(1,i,j,1);\n    cout<<-1<<endl;\n}\n```",
        "postTime": 1537683410,
        "uid": 88347,
        "name": "sumijie",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1312 \u3010Mayan\u6e38\u620f\u3011"
    },
    {
        "content": "\u603b\u800c\u8a00\u4e4b\uff0c\u56db\u6761\u526a\u679d\u539f\u5219\uff1a\n\n\n\uff081\uff09\u4ea4\u6362\u4e24\u4e2a\u989c\u8272\u76f8\u540c\u7684\u5757\u6ca1\u6709\u610f\u4e49\n\n\n\uff082\uff09\u4e00\u4e2a\u5757\u7684\u5de6\u8fb9\u662f\u975e\u7a7a\u5757\u65f6\u4e0d\u9700\u8981\u8003\u8651\u5de6\u79fb,\u56e0\u4e3a\u4f1a\u548c\u4e4b\u524d\u7684\u5757\u53f3\u79fb\u91cd\u590d\uff0c\u5373\u53ea\u6709\u5f53\u5de6\u5757\u4e3a\u7a7a\u65f6\u624d\u5de6\u79fb\n\n\n\uff083\uff09\u6839\u636e\u9898\u76ee\u4f18\u5148\u5ea6\u7684\u6392\u5e8f\uff0c\u53ef\u4ee5\u77e5\u9053\uff0c\u53f3\u79fb\u4f18\u5148\u4e8e\u5de6\u79fb\uff0c\u6240\u4ee5\u5728dfs\u65f6\u5148\u8003\u8651\u53f3\u79fb\n\n\n\uff084\uff09\u5982\u679c\u6709\u4e00\u79cd\u989c\u8272\u5f53\u524d\u7684\u5757\u6570\u76eex\u6ee1\u8db31<=x<=2\uff0c\u5219\u6b64\u60c5\u51b5\u4e0d\u5408\u6cd5\n\n```cpp\n-#include<iostream>\n#include<cstring>\n#include<cstdlib>\n#include<cstdio>\n#include<cmath>\nusing namespace std;\nbool vis[10][10];\nbool flag[11];\nint map[10][10];\nint step[10][5];\nint count[11];\nint n,N;\nint del( )//\u8ba1\u7b97\u8fd9\u4e00\u6b21\u79fb\u52a8\u80fd\u591f\u6d88\u53bb\u591a\u5c11\n{\n  memset( vis,1,sizeof vis );\n  int res=0;\n  int l,r,u,d,x,y,t;\n  bool cs=0;\n  for(int i=1;i<=5;i++)\n    for(int j=1;j<=7;j++)\n      if( map[ i ][ j ] )\n    if( ( j>=2  && map[ i ][ j-1 ] ) || j==1 )//\u5bfb\u627e\u4e2d\u5fc3\u5757\u6765\u8ba1\u7b97\u53ef\u4ee5\u6d88\u9664\u7684\u5757\n      {\n        l=r=i;\n        u=d=j;\n        while( l>=2 && map[ l-1 ][ j ]==map[ i ][ j ] ) \n          l--;\n        while(r<4 && map[ r+1 ][ j ]==map[ i ][ j ] ) \n          r++;\n        while( d>=2 && map[ i ][ d-1 ]==map[ i ][ j ] ) \n          d--;\n        while( u<=6 && map[ i ][ u+1 ]==map[ i ][ j ] ) \n          u++; \n        if( r-l>=2 )//\u8868\u793a\u6a2a\u65b9\u5411\u4e0a\u53ef\u4ee5\u6d88\u9664\u65b9\u5757\n          for(int k=l;k<=r;k++)\n        vis[ k ][ j ]=0;\n        if( u-d>=2 )//\u8868\u793a\u7ad6\u65b9\u5411\u4e0a\u53ef\u4ee5\u6d88\u9664\u65b9\u5757\n          for(int k=d;k<=u;k++)\n        vis[ i ][ k ]=0;\n      }\n  for(int i=1;i<=5;i++)\n    for(int j=1;j<=7;j++)\n      if( !vis[ i ][ j ] )//\u53ef\u4ee5\u6d88\u9664\n    {\n      res++;\n      map[ i ][ j ]=0;\n    }\n  for(int i=1,j;i<=5;i++)//\u6c42\u6bcf\u4e00\u5217\u662f\u5426\u6709\u5757\u60ac\u7740\n    {\n      for(j=1;j<=7;j++)\n    if( !map[ i ][ j ] )\n      break;\n      x=j;//\u627e\u5230\u7b2c\u4e00\u4e2a\u7a7a\u5757\n      for( ;j<=7;j++ )\n    if( map[ i ][ j ] )\n      break;\n      if( j==8 )//\u5982\u679c\u4e00\u76f4\u5230\u9876\u90fd\u662f\u7a7a\u5757\uff0c\u5c31\u6ca1\u6709\u5757\u53ef\u4ee5\u6389\u4e0b\u6765\uff0c\u6240\u4ee5\u4e0d\u7528\u7ba1\u5b83\n    continue;\n      y=j-1;//\u627e\u5230\u7a7a\u5757\u8303\u56f4\u7684\u672b\u7aef\n      t=0;\n      for( j=x;j<=7;j++ )//\u60ac\u7740\u7684\u5757\u6389\u4e0b\u6765\n        {\n      t++;\n      if( !map[ i ][ y+t ] || map[ i ][ j ]) \n        break;\n      map[ i ][ j ]=map[ i ][ y+t ];\n      map[ i ][ y+t ]=0;\n      cs=1;\n        }\n    }\n  if( cs )//\u5982\u679c\u6709\u6389\u4e0b\u53bb\u7684\n    res+=del( );//\u5f53\u60ac\u7740\u7684\u5757\u6389\u4e0b\u53bb\u540e\u53ef\u80fd\u8fd8\u53ef\u4ee5\u7ee7\u7eed\u6d88\u9664\uff0c\u6240\u4ee5\u518d\u6765\u4e00\u6b21del\n  return res;\n}\nbool judge( )\n{\n  memset( count,0x0,sizeof count );\n  for(int i=1;i<=5;i++)\n    for(int j=1;j<=7;j++)\n      count[ map[ i ][ j ] ]++;\n  for(int i=1;i<=N;i++)\n    if( count[ i ]>=1 && count[ i ]<=2 )\n      return 0;\n  return 1;\n}\nvoid dfs(int num,int tot)\n{\n  if( !judge( ) )\n    return ;\n  if( num>=n+1 )\n    {\n      if( !tot )//\u56e0\u4e3a\u5728dfs\u65f6\u5c31\u8003\u8651\u5230\u4e86\u4f18\u5148\u987a\u5e8f\uff0c\u6240\u4ee5\u6700\u5148\u641c\u5230\u7684\u5fc5\u5b9a\u662f\u4f18\u5148\u7ea7\u6700\u5927\u7684\n    {\n      cout<<\"\u641c\u7d22\u6b21\u6570 \uff1a \"<<zzl<<endl;\n      for(int i=1;i<=n;i++)\n        printf(\"%d %d %d\\n\",step[ i ][ 1 ]-1,step[ i ][ 2 ]-1,step[ i ][ 3 ] );\n      exit(0);\n    }\n      return ;\n    }\n  int x,y;\n  int temp[10][10],p,q;\n  bool cs;\n  for(int i=1;i<=5;i++)\n    for(int j=1;j<=7;j++)\n      temp[ i ][ j ]=map[ i ][ j ];\n  for(int i=1;i<=5;i++)\n    for(int j=1;j<=7;j++)\n      {\n    if( map[ i ][ j ] )\n      {\n        cs=1;\n        if( i<=4 &&map[ i ][ j ]!=map[ i+1 ][ j ] )//\u526a\u679d\uff081\uff09\n          {\n        swap( map[ i ][ j ],map[ i+1 ][ j ] );\n        step[ num ][ 1 ]=i;\n        step[ num ][ 2 ]=j;\n        step[ num ][ 3 ]=1;\n        p=tot-del();\n        dfs( num+1,p );\n        cs=0;\n          }\n        if( !cs )\n          {\n        cs=1;\n        for(p=1;p<=5;p++)\n          for(q=1;q<=7;q++)\n            map[ p ][ q ]=temp[ p ][ q ];\n          }\n        if( i>=2 && !map[ i-1 ][ j ] )//\u526a\u679d\uff082\uff09\n          {\n        swap( map[ i ][ j ],map[ i-1 ][ j ] );\n        step[ num ][ 1 ]=i;\n        step[ num ][ 2 ]=j;\n        step[ num ][ 3 ]=-1;\n        p=tot-del();\n        dfs( num+1,p );\n        cs=0;\n          }\n        if( !cs )\n          for(p=1;p<=5;p++)\n        for(q=1;q<=7;q++)\n          map[ p ][ q ]=temp[ p ][ q ];\n      }\n      }\n}\nint main()\n{\n  int x,y=0;\n  scanf(\"%d\",&n);\n  for(int i=1,j;i<=5;i++)\n    {\n      j=0;\n      scanf(\"%d\",&x);\n      while( x )\n    {\n      map[ i ][ ++j ]=x;\n      if( !flag[ x ] )\n        {\n          flag[ x ]=1;\n          N++;\n        }\n      y++;\n      scanf(\"%d\",&x);\n    }\n    }\n  dfs( 1,y );\n  cout<<-1<<endl;\n  return 0;\n}\n```",
        "postTime": 1498983359,
        "uid": 25098,
        "name": "QJLYH",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1312 \u3010Mayan\u6e38\u620f\u3011"
    },
    {
        "content": "\u65e0\u804a\u5199\u4e86\u5199\u8001\u9898\u76ee\uff0c\u5e0c\u671b\u80fd\u7ed9\u5927\u5bb6\u4e00\u4e9b\u5e2e\u52a9\uff0c\u5173\u952e\u70b9\u5c31\u4ee5\u4e0b\u51e0\u4e2a\uff1a\n\n1. \u5411\u53f3\u7684\u65f6\u5019\u5982\u679c\u53f3\u65b9\u989c\u8272\u76f8\u540c\u5219\u8df3\u8fc7\n\n2. \u5411\u5de6\u7684\u65f6\u5019\u5982\u679c\u5de6\u65b9\u5e76\u975e\u662f\u7a7a\uff0c\u5219\u8df3\u8fc7\uff08\u5426\u5219\u53ef\u4ee5\u9009\u62e9\u5176\u5de6\u4fa7\u65b9\u5757\u53f3\u79fb\uff0c\u8fd9\u6837\u5b57\u5178\u5e8f\u66f4\u5c0f\uff09\n\n3. \u9700\u8981\u66f4\u77ed\u65f6\u95f4\u7684\u8bdd\u53ef\u4ee5\u6839\u636e\u6bcf\u4e00\u6b65\u5f53\u524d\u56fe\u7684\u72b6\u6001\u662f\u5426\u51fa\u73b0\u67d0\u79cd\u989c\u8272\u5c0f\u4e8e2\u4e2a\u6765\u8fdb\u884c\u526a\u679d\u3002\u56e0\u4e3a\u4f60\u5237\u65b0\u56fe\u7684\u65f6\u5019\u5176\u5b9e\u5c31\u53ef\u4ee5\u987a\u624b\u7edf\u8ba1\uff0c\u6240\u4ee5\u5176\u5b9e\u5e76\u4e0d\u600e\u4e48\u8d39\u65f6\uff0c\u4f46\u662f\u526a\u679d\u6548\u679c\u6ee1\u6ee1\uff08\u5f53\u7136\u6211\u89c9\u5f97\u4e0d\u526a\u4e5f\u53ef\u4ee5\u5c31\u6ca1\u5199\u8fd9\u4e2a\uff09\n\n\u81f3\u4e8e\u5b9e\u73b0\u7ec6\u8282\u7684\u8bdd\uff0c\u6389\u843d\u53ef\u4ee5\u770bfall\u7684\u4ee3\u7801\uff0c\u5237\u65b0\u7684\u65f6\u5019\u5148\u6389\u843d\u4e00\u4e0b\uff0c\u518d\u7ed9\u8981\u6d88\u9664\u7684\u4e1c\u897f\u6253\u6807\u8bb0\u3002\u6700\u540e\u6839\u636e\u6807\u8bb0\u5220\u9664\u65b9\u5757\uff0c\u6b65\u9aa4\u7206\u641c\u5373\u53ef\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\n#define REP(i,l,r) for(int i=l;i<r;++i)\n\nconst int dx[4]={-1,0,1,0}, dy[4]={0,1,0,-1};\n\nint ansx[6], ansy[6], ansmv[6];\nint mp[7][5][7], N;\nbool vis[5][7];\n\ninline void hei(int d, int x, int y, int mv){\n    ansx[d]=x, ansy[d]=y, ansmv[d]=mv;\n}\ninline bool inbound(int x, int y){ return 0<=x&&x<5&&0<=y&&y<7;}\nvoid fall(int d){\n    REP(i,0,5){ int sz=0;\n        REP(j,0,7) if (mp[d][i][j])\n            mp[d][i][sz++]=mp[d][i][j];\n        while (sz < 7) mp[d][i][sz++] = 0;\n    }\n}\ninline void refresh(int d){\n    int tim = 0;\n    for (bool cg = true; cg;){\n        cg = false, fall(d);\n        REP(i,0,5) REP(j,0,7) if (mp[d][i][j]){\n            if (i < 3){\n                if (mp[d][i][j]==mp[d][i+1][j]&&mp[d][i][j]==mp[d][i+2][j]){\n                    cg = vis[i][j] = vis[i+1][j] = vis[i+2][j] = true;\n                }\n            }\n            if (j < 5){\n                if (mp[d][i][j]==mp[d][i][j+1]&&mp[d][i][j]==mp[d][i][j+2]){\n                    cg = vis[i][j] = vis[i][j+1] = vis[i][j+2] = true;\n                }\n            }\n        }\n        REP(i,0,5) REP(j,0,7) if (vis[i][j]) mp[d][i][j] = vis[i][j] = 0;\n    }\n}\nbool solve(int dep){\n    REP(i,0,5) REP(j,0,7) mp[dep][i][j] = mp[dep-1][i][j];\n    refresh(dep);\n    if (dep == N+1){\n        REP(i,0,5) if (mp[dep][i][0]) return false;\n        return true;\n    }\n    REP(i,0,5) REP(j,0,7) if (mp[dep][i][j]){\n        if (i < 4 && mp[dep][i][j]!=mp[dep][i+1][j]){    // 1\n            hei(dep, i, j, 1);\n            swap(mp[dep][i][j], mp[dep][i+1][j]);\n            if (solve(dep+1)) return true;\n            swap(mp[dep][i][j], mp[dep][i+1][j]);\n        }\n        if (i && !mp[dep][i-1][j]){        // -1\n            hei(dep, i, j, -1);\n            swap(mp[dep][i][j], mp[dep][i-1][j]);\n            if (solve(dep+1)) return true;\n            swap(mp[dep][i][j], mp[dep][i-1][j]);\n        }\n    }\n    return false;\n}\n\nint main(){\n    scanf(\"%d\", &N);\n    REP(i,0,5) REP(j,0,9){\n        int x; scanf(\"%d\", &x);\n        if (!x) break;\n        mp[0][i][j] = x;\n    }\n    bool fg = solve(1);\n    if (fg){ REP(i,1,N+1) printf(\"%d %d %d\\n\", ansx[i],ansy[i],ansmv[i]);}\n    else    puts(\"-1\");\n    return 0;\n}\n```",
        "postTime": 1512538853,
        "uid": 40527,
        "name": "EAJOY",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1312 \u3010Mayan\u6e38\u620f\u3011"
    },
    {
        "content": "\u849f\u84bb\u4e5f\u80fd\u5199\u51fa\u6765\u7684AC\u4ee3\u7801\uff01\uff08\u5176\u5b9e\u4e3b\u8981\u662f\u4e3a\u4e86\u7eaa\u5ff5\u4e00\u904dAC\u8fd9\u9053\u9898\u2026\u2026\uff09\u53ef\u80fd\u5b58\u5728\u591a\u4f59\u7684\u5730\u65b9\u548c\u66f4\u597d\u7684\u526a\u679d\uff0c\u56e0\u6b64\u8fd9\u4efd\u4ee3\u7801\u4ec5\u4f9b\u53c2\u8003\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u4f18\u5316\u3002\n\n\u8fd9\u79cd\u6570\u636e\u8303\u56f4\u8d3c\u5c0f\u7684\u9898\u4e00\u770b\u5c31\u662f\u641c\u7d22\u3002\u641c\u7d22\u7684\u7b56\u7565\u662f\uff1a\u4e24\u91cdfor\u5faa\u73af\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u70b9\u603b\u662f\u5148\u8003\u8651\u5f80\u53f3\u79fb\uff08\u4f18\u5148\u7ea7\u66f4\u9ad8\uff09\uff0c\u5982\u679c\u5de6\u8fb9\u662f0\u7684\u8bdd\u624d\u8003\u8651\u5f80\u5de6\u79fb\uff08\u82e5\u5de6\u8fb9\u662f\u975e0\u7684\u8bdd\u4e0d\u5fc5\u4e86\uff0c\u56e0\u4e3a\u8fd9\u79cd\u60c5\u51b5\u5c31\u662f\u5de6\u8fb9\u7684\u70b9\u5f80\u53f3\u79fb\uff0c\u4f46\u5b83\u5df2\u7ecf\u88ab\u7814\u7a76\u8fc7\u4e86\uff09\u3002\u79fb\u52a8\u5b8c\u4e86\u5c31\u8981\u6d88\u53bb\uff0c\u7531\u4e8e\u6d88\u53bb\u53ef\u80fd\u4e0d\u6b62\u4e00\u6b21\u6240\u4ee5\u6211\u4eec\u8981\u7528\u5faa\u73af\u3002\n\n\u6b64\u5916\u8fd8\u8981\u6ce8\u610f\u4fdd\u5b58\u7684\u65b9\u5f0f\u3002\u6211\u662f\u5c06\u6570\u7ec4\u5b8c\u5168\u590d\u5236\u5230\u4e00\u4e2a\u4e34\u65f6\u6570\u7ec4\u91cc\u3002\u8fd9\u6837\u80fd\u4fdd\u8bc1\u539f\u6570\u7ec4\u4e0d\u4f1a\u53d7\u5230\u540e\u7eed\u6b65\u9aa4\u6d88\u53bb\u7684\u5f71\u54cd\u3002\n\n\u4e00\u4e9b\u7ec6\u8282\u8bf7\u770b\u6ce8\u91ca\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\nusing namespace std;\nint n, a[10][10], temp, jie1[10], jie2[10], jie3[10];\nvoid check(){\n    bool flag=true;\n    for(int i=1; i<=5; i++)\n        if(a[i][1])\n            flag = false;\n    if(flag){\n        for(int i=1; i<=n; i++)\n            printf(\"%d %d %d\\n\", jie1[i]-1, jie2[i]-1, jie3[i]);\n        exit(0);\n    }\n}\nbool func(){//\u6d88\u53bb\u53ca\u8c03\u6574\u51fd\u6570 \n    bool s[10][10]={0}, flag=false;//flag\u6807\u8bb0\u6709\u65e0\u8fdb\u884c\u6d88\u53bb \n    for(int i=1; i<=5; i++){\n        for(int j=1; a[i][j]; j++){\n            int k=i+1;//\u770bx\u8f74\u4e0a\u4ee5(i,j)\u4e3a\u8d77\u70b9\u7684\u5757\u513f\u662f\u5426\u6ee1\u8db3\u6761\u4ef6 \n            for( ; k<=5; k++)\n                if(a[k][j]!=a[i][j])//\u627e\u5bfb\u7ec8\u70b9 \n                    break;\n            if(k-i>=3){//\u8981\u662f\u957f\u5ea6\u8fbe\u6807\u5c31\u6807\u8bb0\u4e0b\u6765\uff0c\u4e00\u4f1a\u513f\u540c\u65f6\u6d88\u53bb \n                for(int l=i; l<k; l++)\n                    s[l][j] = true;\n                flag = true;\n            }\n            k = j+1;//\u770by\u8f74\u4e0a\u4ee5(i,j)\u4e3a\u8d77\u70b9\u7684\u5757\u513f\u662f\u5426\u6ee1\u8db3\u6761\u4ef6 \n            for( ; k<=7; k++)\n                if(a[i][j]!=a[i][k])\n                    break;\n            if(k-j>=3){\n                for(int l=j; l<k; l++)\n                    s[i][l] = true;\n                flag = true;\n            }\n        }\n    }\n    for(int i=1; i<=5; i++)\n        for(int j=1; j<=7; j++)\n            if(s[i][j])\n                a[i][j] = 0;//\u6d88\u53bb \n    if(!flag)    return false;//\u8981\u662f\u6ca1\u6709\u6d88\u53bb\u5c31\u53ef\u4ee5\u505c\u4e0b\u4e86 \n    for(int i=1; i<=5; i++)\n        for(int j=1; j<=7; j++)\n            if(a[i][j]==0){//\u8c03\u6574\u4ee5\u9632\u6b62\u60ac\u7a7a\u7684\u51fa\u73b0 \n                int k=j+1;\n                for( ; k<=7; k++)\n                    if(a[i][k])\n                        break;\n                a[i][j] = a[i][k];\n                a[i][k] = 0;\n            }\n    return true;\n}\nvoid dfs(int x){//\u4ee5\u6b65\u6570\u4f5c\u4e3adfs\u7684\u53c2\u6570 \n    for(int i=1; i<=5; i++){\n        for(int j=1; a[i][j]!=0; j++){\n            if(i!=5 && a[i][j]!=a[i+1][j] && a[i+1][j]!=0){//\u8981\u662f\u53f3\u8fb9\u975e0\u7684\u8bdd \n                int tem[10][10];\n                for(int ii=0; ii<=9; ii++)\n                    for(int jj=0; jj<=9; jj++)\n                        tem[ii][jj] = a[ii][jj];//\u590d\u5236\u5230\u4e34\u65f6\u6570\u7ec4\u91cc \n                int tmp=a[i][j];\n                a[i][j] = a[i+1][j];\n                a[i+1][j] = tmp;\n                jie1[x] = i;\n                jie2[x] = j;\n                jie3[x] = 1;//\u4fdd\u5b58\u8fd9\u4e00\u6b65\u7684\u7b54\u6848 \n                while(func())    ;//\u6d88\u53bb\u3002\u8981\u5faa\u73af\uff01 \n                if(x==n)    check();//\u8981\u662f\u6b65\u6570\u591f\u4e86\u5c31\u770b\u770b\u662f\u5426\u5b8c\u5168\u6d88\u53bb\u3002 \n                else dfs(x+1);\n                for(int ii=0; ii<=9; ii++)\n                    for(int jj=0; jj<=9; jj++)\n                        a[ii][jj] = tem[ii][jj];//\u4f18\u96c5\u5730\u56de\u6eaf \n            }\n            if(i!=5 && a[i+1][j]==0){//\u8981\u662f\u53f3\u8fb9\u4e3a0\u7684\u8bdd \n                int tem[10][10];\n                for(int ii=0; ii<=9; ii++)\n                    for(int jj=0; jj<=9; jj++)\n                        tem[ii][jj] = a[ii][jj];\n                int k;\n                for(k=j-1; k>=1; k--)\n                    if(a[i+1][k])\n                        break;\n                k++;\n                a[i+1][k] = a[i][j];\n                a[i][j] = 0;\n                jie1[x] = i;\n                jie2[x] = j;\n                jie3[x] = 1;\n                for(int e=j; e<=6; e++){\n                    a[i][e] = a[i][e+1];\n                    a[i][e+1] = 0;\n                } \n                while(func())    ;\n                if(x==n)    check();\n                else dfs(x+1);\n                for(int ii=0; ii<=9; ii++)\n                    for(int jj=0; jj<=9; jj++)\n                        a[ii][jj] = tem[ii][jj];\n            }\n            if(i!=1 && a[i-1][j]==0){//\u8981\u662f\u5de6\u8fb9\u4e3a0\u7684\u8bdd \n                int tem[10][10];\n                for(int ii=0; ii<=9; ii++)\n                    for(int jj=0; jj<=9; jj++)\n                        tem[ii][jj] = a[ii][jj];\n                int k;\n                for(k=j-1; k>=1; k--)\n                    if(a[i-1][k])\n                        break;\n                k++;\n                a[i-1][k] = a[i][j];\n                a[i][j] = 0;\n                jie1[x] = i;\n                jie2[x] = j;\n                jie3[x] = -1;\n                for(int e=j; e<=6; e++){\n                    a[i][e] = a[i][e+1];\n                    a[i][e+1] = 0;\n                } \n                while(func())    ;\n                if(x==n)    check();\n                else dfs(x+1);\n                for(int ii=0; ii<=9; ii++)\n                    for(int jj=0; jj<=9; jj++)\n                        a[ii][jj] = tem[ii][jj];\n            }\n        }\n    }\n}\nint main(){\n    cin>>n;\n    for(int i=1; i<=5; i++){\n        int tmp = 0;\n        while(cin>>temp){\n            if(!temp)    break;\n            a[i][++tmp] = temp;\n        }\n    }//\u8bfb\u5165\u6570\u636e\uff0c\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u5c06\u5de6\u4e0a\u89d2\u7684\u8bbe\u4e3a(1, 1)\uff0c\u5728\u8f93\u51fa\u65f6\u51cf\u4e00\u5373\u53ef \n    dfs(1);\n    cout<<\"-1\";//\u8981\u662f\u6ca1\u6709exit\u6389\u90a3\u5c31\u53ea\u80fd\u662f\u65e0\u89e3\u4e86 \n    return 0;\n}\n```cpp\n\n",
        "postTime": 1503053181,
        "uid": 44733,
        "name": "poorpool",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1312 \u3010Mayan\u6e38\u620f\u3011"
    },
    {
        "content": "\u601d\u8def\u8ddf\u697c\u4e0b\u4e00\u6837\uff0c\u4f46\u662f\u7528map\u5b58\u4e86\u72b6\u6001\uff0c\u9632\u6b62\u72b6\u6001\u76f8\u540c\uff0c\u4ece\u539f\u6765\u76842000ms\u5230400ms\uff0c\u8fd8\u633a\u5feb\u7684\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\u4e0d\u540c\u5c31\u662f\u628a\u68cb\u76d8\u5199\u8fdb\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u770b\u8d77\u6765\u6bd4\u8f83\u8212\u670demmmmmm...\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <stack>\nusing namespace std;\n\nstruct board\n{\n    int p[5][7];\n    inline void print()\n    {\n        for(int i(0);i < 5;++i)\n        {\n            for(int j(0);j < 7;++j)\n            {\n                printf(\"%d\\t\",p[i][j]);\n            }\n            printf(\"\\n\");\n        }\n        printf(\"\\n\");\n        return;\n    }\n    inline void read()\n    {\n        memset(p,0,sizeof(p));\n        for(int i(0);i < 5;++i)\n        {\n            for(int j(0);j < 7;++j)\n            {\n                scanf(\"%d\",&p[i][j]);\n                if(p[i][j] == 0)break;\n                if(j == 6)scanf(\"%*d\");\n            }\n        }\n    }\n    inline void down(int line)\n    {\n        for(int i(1);i < 7;++i)\n        {\n            if(p[line][i] == 0)continue;\n            int pos(i);\n            while(p[line][pos - 1] == 0 && pos > 0)\n            {\n                p[line][pos - 1] = p[line][pos];\n                p[line][pos] = 0; \n                --pos;\n            }\n        }\n    }\n    inline bool empty()\n    {\n        for(int i(0);i < 5;++i)if(p[i][0] != 0)return false;\n        return true;\n    }\n    inline void swap(int x1,int y1,int x2,int y2)\n    {\n        if(p[x1][y1] == p[x2][y2])return;\n        p[x1][y1] ^= p[x2][y2];\n        p[x2][y2] ^= p[x1][y1];\n        p[x1][y1] ^= p[x2][y2];\n        if(p[x1][y1] == 0 || p[x2][y2] == 0)\n        {\n            down(x1);\n            down(x2);\n        }\n    }\n    inline bool clear()\n    {\n        bool cls[5][7];\n        bool k(false);\n        for(int i(0);i < 5;++i)\n        {\n            for(int j(0);j < 7;++j)\n            {\n                cls[i][j] = false;\n            }\n        }\n        for(int i(0);i < 5;++i)\n        {\n            int now(0);\n            for(int j(1);j < 7;++j)\n            {\n                if(p[i][j] == 0)break;\n                if(p[i][j] != p[i][now]){now = j;continue;}\n                if(j - now == 2){k = true;for(int k(now);k <= j;++k)cls[i][k] = true;}\n                if(j - now > 2)cls[i][j] = true;\n            }\n        }\n        for(int i(0);i < 7;++i)\n        {\n            int now(0);\n            for(int j(1);j < 5;++j)\n            {\n                if(p[j][i] == 0){now = j + 1;continue;}\n                if(p[j][i] != p[now][i]){now = j;continue;}\n                if(j - now == 2){k = true;for(int k(now);k <= j;++k)cls[k][i] = true;}\n                if(j - now > 2)cls[j][i] = true;\n            }\n        }\n        if(k)\n        {\n            for(int i(0);i < 5;++i)\n            {\n                bool e(false);\n                for(int j(0);j < 7;++j)\n                {\n                    if(cls[i][j])\n                    {\n                        e = true;\n                        p[i][j] = 0;\n                    }\n                }\n                if(e)down(i);\n            }\n            return true;\n        }\n        return false;\n    }\n    bool operator < (const board &a)const\n    {\n        for(int i(0);i < 5;++i)\n        {\n            for(int j(0);j < 7;++j)\n            {\n                if(p[i][j] != a.p[i][j])return p[i][j] < a.p[i][j];\n            }\n        }\n        return false;\n    }\n};\nstack <pair<pair<int,int>,int> > ans;\nmap <board,bool> used[10];\nint n;\ninline bool dfs(int step,board now)\n{\n    if(n < step)\n    {\n        return now.empty();\n    }\n    \n    if(used[step][now])return false;\n    used[step][now] = 1;\n    //\u6ca1\u9519\u5c31\u591a\u4e86\u8fd9\u4e24\u884c\u4ee3\u7801\n    int tot[11];\n    memset(tot,0,sizeof(tot));\n    for(int i(0);i < 5;++i)for(int j(0);j < 7;++j)++tot[now.p[i][j]];\n    for(int i(1);i <= 10;++i)if(tot[i] && tot[i] < 3)return false;\n    //\u8fd9\u662f\u53e6\u4e00\u4e2a\u4f18\u5316\uff0c\u5047\u5982\u6709\u4e00\u4e2a\u6570\u5b57\u5c0f\u4e8e2\u4e2a\u5c31\u8df3\u51fa\uff0c\u5b9e\u9645\u6548\u679c\u5e76\u4e0d\u597d\uff0c\u5bf9\u4e8e\u6781\u7aef\u6570\u636e\u53ef\u80fd\u6709\u4f18\u52bf\n    int i(0),j;\n    board tmp;\n    for(j = 0;j < 7;++j)\n    {\n        if(now.p[0][j] == 0)break;\n        tmp = now;\n        tmp.swap(0,j,1,j);\n        while(tmp.clear());\n        if(dfs(step + 1,tmp))\n        {\n            ans.push(make_pair(make_pair(0,j),1));\n            return true;\n        }\n    }\n    for(int i(1);i < 4;++i)\n    {\n        for(int j(0);j < 7;++j)\n        {\n            if(now.p[i][j] == 0)break;\n            tmp = now;\n            tmp.swap(i,j,i+1,j);\n            while(tmp.clear());\n            if(dfs(step + 1,tmp))\n            {\n                ans.push(make_pair(make_pair(i,j),1));\n                return true;\n            }\n            if(now.p[i - 1][j] == 0)\n            {\n                tmp = now;\n                tmp.swap(i,j,i-1,j);\n                while(tmp.clear());\n                if(dfs(step + 1,tmp))\n                {\n                    ans.push(make_pair(make_pair(i,j),-1));\n                    return true;\n                }\n            }\n        }\n    }\n    for(int j(0);j < 7;++j)\n    {\n        if(now.p[4][j] == 0)break;\n        if(now.p[3][j] == 0)\n        {\n            tmp = now;\n            tmp.swap(4,j,3,j);\n            while(tmp.clear());\n            if(dfs(step + 1,tmp))\n            {\n                ans.push(make_pair(make_pair(4,j),-1));\n                return true;\n            }\n        }\n    }\n    return false;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    board start;\n    start.read();\n    if(dfs(1,start))\n    {\n        while(!ans.empty())\n        {\n            pair<pair<int,int>,int> tmp;\n            tmp = ans.top();\n            printf(\"%d %d %d\\n\",tmp.first.first,tmp.first.second,tmp.second);\n            ans.pop();\n        }\n    }\n    else printf(\"-1\\n\");\n    return 0;\n}\n\n```",
        "postTime": 1509353352,
        "uid": 32576,
        "name": "ygsldr",
        "ccfLevel": 0,
        "title": "\u641c\u7d22 P1312 \u3010Mayan\u6e38\u620f\u3011"
    },
    {
        "content": "## UPDATE ON 2019/11/8:\n\n### \u6ce8\u610f\uff1a\n\n\u5982\u679c\u8981\u6b63\u89e3\u7684\u8bdd\u5427\u6211\u6ce8\u91ca\"\u526a\u679d\"\u7684\uff1a\n\n```cpp\nif(i<=4&&map[i][j]!=map[i+1][j])\n```\n\u8fd9\u4e00\u884c\u6539\u4e3a\n\n```cpp\nif(i<=4)\n```\n\u5c31\u884c\uff08\u526a\u679d\u8d2a\u5fc3\u592a\u591a\u4e86\uff09\n\n#### -----------------------------------------------------------------------------------------\n\n### \u603b\u4f53\u4ee3\u7801\u96be\u5ea6\u4e0d\u9ad8,\u4f46\u7ec6\u8282\u591a\uff0c\u88abHACK\u5f88\u96be\u53d72333333\n\n\u672c\u9898\u5176\u5b9e\u5c31\u662f\u6d88\u6d88\u4e50\u5440\uff0c\u6362\u4e24\u4e2a\u5757\u7136\u540e\u8fdb\u884c\u6d88\u9664\n\n\u8fd9\u4e2a\u9898\u6709\u5f88\u591a\u79cd\u5199\u6cd5.......\u57fa\u672c\u6bcf\u4e2a\u4eba\u90fd\u4e0d\u4e00\u6837\u5427\n\n\u7ed3\u5408ZAGER dalao, sumijie dalao\u548c\u6211\u7684\u4ee3\u7801\uff0c\u7ed9\u51fa\u4e86\u51e0\u4e2a\u51fd\u6570\u4e0d\u5f02\u7aef\u7684\u4ee3\u7801\uff1a\n\n\uff01\uff01\uff01\u6ce8\u610f\uff0c\u672c\u9898\u89e3map\u6570\u7ec4[ i ][ j ]\u8868\u793a\u7b2ci\u5217\u7b2cj\u884c\uff01\uff01\uff01\n\n\u770b\u770b\u8f93\u5165\uff1a\n\n```cpp\nfor(int i=1;i<=5;i++){\n\t\tfor(int j=1;j<=8;j++){\n\t\t\tscanf(\"%d\",&map[i][j]);\n\t\t\tif(map[i][j]==0) break;\n\t\t}\n\t}\n```\n\n\n1.dfs\u6846\u67b6\n\n```cpp\nvoid dfs(int x){//x\u8868\u793a\u7b2c\u51e0\u6b65\n\tif(x==n+1){\n\t    if(!check()) return;\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tprintf(\"%d %d %d\\n\",ans[i][1],ans[i][2],ans[i][3]);\n\t\tprintf(\"\\n\");exit(0);\n\t}//\u9047\u5230\u76f4\u63a5\u8f93\u51fa\n\tif(x==n+1) return;\n\tbook(x);\n\tfor(int i=1;i<=5;i++)\n\t\tfor(int j=1;j<=7;j++){\n\t\t\tif(map[i][j]){\n\t\t\t\tif(i<=4&&map[i][j]!=map[i+1][j]){//\u526a\u679d\n\t\t\t\t\tmove(i,j,1);//(i,j)\u5411\u53f3\u79fb\n\t\t\t\t\tans[x][1]=i-1;\n\t\t\t\t\tans[x][2]=j-1;\n\t\t\t\t\tans[x][3]=1;\n\t\t\t\t\tdfs(x+1);\n\t\t\t\t\tfor(int k=1;k<=5;k++)\n\t\t\t\t\t\tfor(int l=1;l<=7;l++)\n\t\t\t\t\t\t\tmap[k][l]=last[x][k][l];\n\t\t\t\t\tans[x][1]=-1;\n\t\t\t\t\tans[x][2]=-1;\n\t\t\t\t\tans[x][3]=-1;\n\t\t\t\t}\n\t\t\t\tif(i>=2&&map[i-1][j]==0){\n\t\t\t\t\tmove(i,j,0);//(i,j)\u5411\u5de6\u79fb\n\t\t\t\t\tans[x][1]=i-1;\n\t\t\t\t\tans[x][2]=j-1;\n\t\t\t\t\tans[x][3]=-1;\n\t\t\t\t\tdfs(x+1);\n\t\t\t\t\tfor(int k=1;k<=5;k++)\n\t\t\t\t\t\tfor(int l=1;l<=7;l++)\n\t\t\t\t\t\t\tmap[k][l]=last[x][k][l];\n\t\t\t\t\tans[x][1]=-1;\n\t\t\t\t\tans[x][2]=-1;\n\t\t\t\t\tans[x][3]=-1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n}\n```\n\n\n\u548c\u5e73\u5e38\u7684dfs\u4e00\u6837\uff0c\u6211\u4eec\u8fd9\u91cc\u6b63\u5e38\u641c\uff0c\u5c06\u65e7\u72b6\u6001\u5b58\u8d77\u6765\uff0c\u7136\u540e\u8bb0\u5f55\u8f93\u51fa\u7b54\u6848ans\n\n\u552f\u4e00\u4e0d\u540c\u7684\u662f\uff1a\u672c\u9898\u5176\u5b9e\u8981\u6c42\u7684\u662f\u5fc5\u987b\u79fbn\u6b21\u5757\uff0c\u800c\u8981\u6c42\u5b57\u5178\u5e8f\u6700\u5c0f\n\n\u90a3\u4e48\u7b54\u6848\u7684\u6700\u4f18\u5c31\u662f\u5b57\u5178\u5e8f\uff0c\u5373\uff1ax\u4e3a\u7b2c\u4e00\u5173\u5065\u5b57\uff0cy\u4e3a\u7b2c\u4e8c\u5173\u5065\u5b57\uff0c1\u4f18\u5148\u4e8e\u22121\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u641c\u7d22\u65f6\u5148\u679a\u4e3ex\uff0c\u518d\u679a\u4e3ey\uff0c\u641c\u7d22\u987a\u5e8f\u5148\u5411\u53f3\u641c\n\n\u8fd9\u6837\u5982\u679cn\u6b65\u5168\u6d88\u9664\u5f97\u51fa\u7684\u89e3\u5c31\u4e00\u5b9a\u662f\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\uff0c\u7b97\u4e00\u4e2a\u5c0f\u4f18\u5316\n\n\u5bf9\u4e8e\u526a\u679d\u5176\u5b9e\u5927\u90e8\u5206\u4eba\u90fd\u4e00\u6837\u5427...\n\n\u53ea\u6709\u53f3\u8fb9\u6709\u65b9\u5757\u624dmove\uff0c\u5de6\u8fb9\u6ca1\u6709\u65b9\u5757\u624dmove\n\n\u56e0\u4e3a\u82e5\u5de6\u9762\u6709\u65b9\u5757\uff0c\u90a3\u4e48\u4f60\u4f1a\u5728\u641ci-1\u5217\u65f6\u5c06\u5176\u53f3\u79fb\uff0c\u548c\u4f60\u5728i\u5217\u65f6\u5de6\u79fb\u662f\u7b49\u6548\u7684\uff0c\n\n\u6240\u4ee5\u53ef\u4ee5\u51cf\u6389\n\n\u6211\u4eec\u5728dfs\u51fd\u6570\u91cc\u9700\u8981\u4ee5\u4e0b\u51e0\u4e2a\u51fd\u6570\uff1a\n\n2.check():\n\n```cpp\nbool check(){\n\tfor(int i=1;i<=5;i++)\n\t\tif(map[i][1]) return false;\n\treturn true;\n}\n```\n\n\u8fd9\u4e2a\u597d\u7406\u89e3\u5427......\u68c0\u67e5\u7b2c\u4e00\u884c\u662f\u4e0d\u662f\u90fd\u6ca1\u4e86\n\n3.move():\n\n\u5305\u62ec\u4e24\u4e2a\u65b9\u9762\uff1a\n\n1>\u6d88\u9664\u65b9\u5757\n\n\u8fd9\u91cc\u6ce8\u610f\u4e00\u70b9\uff1a\u7531\u4e8e\u5f53\u51fa\u73b0\u884c\u548c\u5217\u90fd\u6ee1\u8db3\u6d88\u9664\u6761\u4ef6\u4e14\u884c\u5217\u5171\u4eab\u67d0\u4e2a\u65b9\u5757\u65f6\uff0c\u884c\u548c\n\n\u5217\u4e0a\u6ee1\u8db3\u6d88\u9664\u6761\u4ef6\u7684\u6240\u6709\u65b9\u5757\u4f1a\u88ab\u540c\u65f6\u6d88\u9664\n\n\u6240\u4ee5\u6211\u4eec\u5728\u679a\u4e3e\u7684\u65f6\u5019\u5e94\u679a\u4e3e\u4e09\u4e2a\u5757\u4e2d\u5fc3\u7684\u90e8\u5206\uff0c\u80fd\u4fdd\u8bc1\u5168\u6e05\u9664\n\n2>\u6d88\u9664\u4e4b\u540e\uff0c\u65b9\u5757\u4f1a\u6389\u843d,\u522b\u5fd8\u8bb0\u5168\u90fd\u4e0b\u79fb\n\n\u7ed9\u51fa\u4ee3\u7801\uff1a\n\n```cpp\nbool del(){\n\tmemset(clear,0,sizeof clear);\n\tbool flag=0;\n\tfor(int i=1;i<=5;i++)\n\t\tfor(int j=1;j<=7;j++){\n\t\t\t\tif(i>=2&&i<=4&&map[i][j]==map[i-1][j]&&map[i][j]==map[i+1][j]&&map[i][j])\n\t\t\t\t\t\tclear[i-1][j]=clear[i+1][j]=clear[i][j]=flag=1;\n\t\t\t\tif(j>=2&&j<=6&&map[i][j]==map[i][j-1]&&map[i][j]==map[i][j+1]&&map[i][j])\n\t\t\t\t\t\tclear[i][j+1]=clear[i][j-1]=clear[i][j]=flag=1;\n\t\t}\n\tif(!flag) return false;\n\tfor(int i=1;i<=5;i++)\n\t\tfor(int j=1;j<=7;j++)\n\t\t\tif(clear[i][j])\n\t\t\t\tmap[i][j]=0;\n\treturn true;\n}\n\nvoid drop(){\n\tfor(int i=1;i<=5;i++){\n\t\tint wjh=0;\n\t\tfor(int j=1;j<=7;j++){\n\t\t\tif(!map[i][j]) wjh++;\n\t\t\telse{\n\t\t\t\tif(!wjh) continue;\n\t\t\t\tmap[i][j-wjh]=map[i][j];\n\t\t\t\tmap[i][j]=0;\n\t\t\t}\n\t\t}\n\t}\n}\nvoid move(int i,int j,int x){\n\tif(x==0) x=-1;\n\tint tmp=map[i][j];\n\tmap[i][j]=map[i+x][j];\n\tmap[i+x][j]=tmp;\n\twhile(true){\n\t\tdrop();\n\t\tif(!del()) break;//\u5148drop\u518d\u6d88\u9664\n\t}\n}\n```\ndel()\u662f\u6d88\u9664\u51fd\u6570\uff0cdrop()\u662f\u4e0b\u79fb\u65b9\u5757\u51fd\u6570\n\n\u81f3\u6b64\u672c\u9898\u5c31\u7ed3\u675f\u4e86,\u4e0d\u7ed9\u51fa\u5b8c\u6574\u4ee3\u7801~~\u9632\u6284~~\n\n\u6700\u540e\u6c42\u5927\u5bb6HACK\u6211\u65f6\u8bf7\u55b7.........\n\n## \u795d\u5927\u5bb62019CSP,NOI,XXXOI RP++! ! !",
        "postTime": 1572870869,
        "uid": 221615,
        "name": "S_S_H",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1312 \u3010Mayan\u6e38\u620f\u3011"
    },
    {
        "content": "\u5148\u8bfb\u61c2\u9898\u3002\u9898\u76ee\u8981\u6c42\u6a21\u62df\u4e00\u4e2a\u6e38\u620f\u7684\u8fd0\u884c\uff0c\u5e76\u4e14\u641c\u7d22\u51fa\u6700\u4f18\u89e3\u3002\u4e0d\u80fddp\u4e5f\u6ca1\u5565\u542f\u53d1\u5f0f\u64cd\u4f5c\u663e\u7136\u5c31\u662f\u7206\u641c\u554a\u3002\n\n\u6a21\u62df\u548c\u641c\u7d22\u96be\u5ea6\u4e0d\u5927\uff0c\u4f46\u6a21\u62df\u6709\u5f88\u591a\u7ec6\u8282\u3002\u6211\u8c03\u4e86\u597d\u4e45\u624da\u6389\u8fd9\u9898\u3002\n\n\u6709oop\u7ecf\u9a8c\u7684\u6211\u5341\u5206\u81ea\u7136\u5730\u628a\u6a21\u62df\u548c\u641c\u7d22\u5206\u5f00\uff0c\u5373\u7528\u4e00\u4e2astruct\u5c01\u88c5\u72b6\u6001\uff0c\u8fd9\u6837\u4ee3\u7801\u80fd\u6e05\u6670\u4e0d\u5c11\uff0c\u8c03\u8bd5\u4e5f\u65b9\u4fbf\u3002\u6211\u611f\u89c9\u6bd4\u90a3\u4e00\u5927\u5806\u88f8\u9732\u7684\u51fd\u6570\u3001\u6570\u7ec4\u590d\u5236\u597d\u591a\u4e86\u3002\n\n### \u6a21\u62df\n\n\u5b9a\u4e49struct puzzle\uff0c\u8981\u5b9e\u73b03\u4e2a\u64cd\u4f5c\uff1a\u79fb\u52a8\u65b9\u5757\uff0c\u6d88\u9664\uff0c\u68c0\u67e5\u72b6\u6001\u3002\n\n\u4f7f\u8868\u793a\u81ea\u7136\u4e00\u4e9b\uff0c\u8fd9\u91cc\u6211\u7528i\u8868\u793a\u5217\uff0cj\u8868\u793a\u884c\n\n\u4e3a\u4e86\u65b9\u4fbf\u64cd\u4f5c\uff0c\u7528\u6570\u7ec4h[]\u8868\u793a\u6bcf\u5217\u7684\u9ad8\u5ea6\uff0c\u8fd9\u6837\u80fd\u51cf\u5c11\u5faa\u73af\u7684\u6b21\u6570\u3002\n\n#### 1.\u79fb\u52a8\u65b9\u5757\n\t\n\u9700\u8981\u8ba8\u8bba\u79fb\u5230\u7684\u4f4d\u7f6e\u662f\u5426\u4e3a\u7a7a\u3002\u5982\u679c\u4e3a\u7a7a\uff0c\u5c06\u88ab\u79fb\u7684\u65b9\u5757\u653e\u5728\u79fb\u5230\u5217\u7684\u9876\u90e8\uff0c\u5904\u7406\u6389\u843d\uff08\u6574\u4f53\u5f80\u4e0b\u79fb\uff09\uff0c\u7136\u540e\u6539\u53d82\u5217\u7684\u9ad8\u5ea6\u3002\u5982\u679c\u975e\u7a7a\uff0c\u76f4\u63a5\u4ea4\u6362\u989c\u8272\u503c\u3002\n\n#### 2.\u6d88\u9664\n\n\u56e0\u4e3a\u662f\u6240\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u65b9\u5757\u540c\u65f6\u6d88\uff0c\u800c\u4e143\u8fde\u60c5\u51b5\u590d\u6742\uff0c\u8fd9\u91cc\u6211\u662f\u5f00\u4e00\u4e2abool\u6570\u7ec4mark\u4e00\u4e0b\u8981\u6d88\u7684\u65b9\u5757\u30022\u4e2a\u53cc\u91cd\u5faa\u73af\uff0c\u5206\u522b\u68c0\u67e5\u6a2a/\u7ad6\u65b9\u5411\u662f\u5426\u67093\u4e2a\u989c\u8272\u76f8\u540c\uff0c\u5982\u679c\u76f8\u540c\u5c31\u6807\u8bb0\u4e00\u4e0b\uff08\u5408\u5e76\u62101\u4e2a\u5728\u6548\u7387\u65b9\u4fbf\u6ca1\u5565\u63d0\u5347\uff09\u3002\u6700\u540e\u6309\u5217\uff0c\u628a\u6ca1\u6807\u8bb0\u7684\u91cd\u65b0\u5806\u8d77\u6765\uff0c\u6d88\u9664\u7684\u8981\u6e050\uff0c\u8bb0\u5f97\u6539\u53d8\u9ad8\u5ea6\u3002\n\n\u91cd\u590d\u76f4\u5230\u4e0d\u53d1\u751f\u6d88\u9664\u3002\n\n#### 3.\u68c0\u67e5\u5168\u6e05\n\n\u5f88\u7b80\u5355\uff0ch[0]~h[4]\u5168\u4e3a0\u5c31\u662f\u5168\u6e05\u3002\u8003\u8651\u5230\u5faa\u73af\u4ee3\u4ef7\u6211\u6ca1\u7528\u5faa\u73af\u3002\n\n### \u641c\u7d22\n\n\u6309\u7167\u9898\u610f\u7684\u5b57\u5178\u5e8f\u641c\u5c31\u884c\u4e86\uff0c\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u3002\u770b\u6e05\u695a\u70b9\uff0c**\u53f3**\u79fb\u4f18\u5148\u4e8e**\u5de6**\u79fb\u3002\u679a\u4e3e\u8981\u79fb\u52a8\u7684\u65b9\u5757\u548c\u65b9\u5411\u3002\u79fb\u52a8\u64cd\u4f5c\u8bb0\u5f55\u5728\u51fd\u6570\u5916\u7684\u6570\u7ec4\u91cc\uff0c\u4e0d\u65ad\u66f4\u65b0\u5c31\u884c\u3002\u4f46\u65e2\u7136\u662f\u7206\u641c\uff0c\u663e\u7136\u8981\u526a\u679d\u3002\n\n\u4ea4\u6362\u4e24\u4e2a\u989c\u8272\u76f8\u540c\u7684\u65b9\u5757\u6ca1\u6709\u610f\u4e49\uff0c\u4e00\u822c\u90fd\u80fd\u60f3\u5230\u3002\n\n\u7136\u540e\u5e94\u8be5\u80fd\u6ce8\u610f\u5230\u5427\uff0c\u5982\u679c\u628a2\u4e2a\u65b9\u5757\u6765\u56de\u4ea4\u6362\u800c\u6ca1\u6709\u53d1\u751f\u6d88\u9664\uff0c\u90a3\u4e48\u79fb\u52a8\u6ca1\u6709\u610f\u4e49\uff0c\u53ef\u4ee5\u526a\u6389\uff08\u7a0d\u5fae\u590d\u6742\uff0c\u4f46\u540e\u9762\u540e\u66f4\u4f18\u7684\u526a\u6cd5\uff09\n\n\u7ec6\u60f3\u4e00\u4e0b\uff0c\u6765\u56de\u79fb\u52a8\u7684\u5b9e\u8d28\u662f\u4ea4\u6362\uff0c\u800c\u53c8\u56e0\u4e3a\u662f\u4ea4\u6362\uff0c\u6240\u4ee5\u8ba9\u5de6\u8fb9\u7684\u53f3\u79fb\u7b49\u4ef7\u4e8e\u53f3\u8fb9\u7684\u5de6\u79fb\uff0c\u6240\u4ee5\u641c\u4e86\u4e24\u904d\u3002\u524d\u8005\u6bd4\u8f83\u4f18\u5148\uff0c\u6240\u4ee5\u53ea\u9700\u641c\u524d\u8005\u7684\u53f3\u79fb\u3002\u5f53\u4e14\u4ec5\u5f53\u5750\u6807\u4e3a\u7a7a\u65f6\u624d\u5de6\u79fb\u3002\u8fd9\u6837\u526a\u662fac\u7684\u5173\u952e\u3002\n\nregister\u5361\u5e38\u662f\u6709\u7528\u7684\uff0c\u6548\u679c\u6bd4\u8f83\u660e\u663e\uff0c\u4f46\u4e0d\u662f\u5173\u952e\n\n\u6211\u778e\u641e\u5c31\u641e\u51fa524ms\u4e86\uff0c\u8fdb\u699c\u7b2c3\u9875\u2026\u2026\n\n\u611f\u89c9color\u526a\u679d\u6ca1\u5565\u6548\u679c\uff0c\u6bd5\u7adf\u68c0\u67e5\u4e5f\u662f\u6709\u4ee3\u4ef7\u7684\uff08\u6211\u52a0\u4e86\u6839\u672c\u6ca1\u660e\u663e\u63d0\u5347\uff09\n\n### \u5176\u4ed6\u7ec6\u8282\n\n\u8bfb\u5165\u6ce8\u610f\u4e00\u4e0b\uff0c\u5982\u679c\u72b6\u6001\u6570\u7ec4\u6b63\u597d\u662f5*7\u5927\u5c0f\uff0c\u8bfb\u5165\u4e0d\u8981\u8d8a\u754c\uff0c\u4e0d\u7136\u4f1a\u6b7b\uff0c\u800c\u4e14\u53ef\u80fd\u8fd8\u4e0d\u77e5\u9053\u662f\u600e\u4e48\u6b7b\u7684\uff08\u6211\u6b7b\u5728#8\uff09\n\n**\u5982\u679c\u6ca1\u6709\u68c0\u67e5h\u662f\u5426\u5408\u6cd5\uff0c\u4e00\u5b9a\u8981\u786e\u4fdd\u7a7a\u7684\u683c\u5b50\u6e05\u96f6\u6e05\u96f6\u6e05\u96f6\uff01\uff01\uff01\uff01**\n\n\u53ef\u4ee5\u53c2\u8003\u4e00\u4e0b\u6211\u7684\u4ee3\u7801\u98ce\u683c\uff08\u6ce8\u91ca\u57fa\u672c\u4e0a\u662f\u5728\u5199\u7a0b\u5e8f\u65f6\u5f88\u81ea\u7136\u5730\u52a0\u7684\uff09\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\nusing namespace std;\nint n;\nint his[6][3];\nstruct puzzle {\n\tint a[5][7],h[5]; //\u989c\u8272\u6570\u636e\u548c\u9ad8\u5ea6\n\tvoid moveblock(int x,int y,int z) {\n\t\tif (h[x+z]<=y) { //\u5bf9\u5e94\u7684\u4f4d\u7f6e\u4e3a\u7a7a\n\t\t\ta[x+z][h[x+z]++]=a[x][y];\n\t\t\tfor (register int j=y+1;j<h[x];j++) {\n\t\t\t\ta[x][j-1]=a[x][j];\n\t\t\t}\n\t\t\th[x]--;\n\t\t\ta[x][h[x]]=0;\n\t\t} else { //\u5bf9\u5e94\u4f4d\u7f6e\u6709\u65b9\u5757 \u76f4\u63a5\u4ea4\u6362\n\t\t\ta[x+z][y]^=a[x][y];\n\t\t\ta[x][y]^=a[x+z][y];\n\t\t\ta[x+z][y]^=a[x][y];\n\t\t}\n\t}\n\tbool process() { //\u8fdb\u884c\u6d88\u9664\uff0c\u8fd4\u56de\u662f\u5426\u53d1\u751f\u6d88\u9664\n\t\tbool res=false;\n\t\tbool mark[5][7]={};\n\t\t//\u7eb5\u5411\u6d88\u9664\n\t\tfor (register int i=0;i<5;i++) {\n\t\t\tfor (register int j=1;j<h[i]-1;j++) {\n\t\t\t\tif (a[i][j-1]==a[i][j] && a[i][j]==a[i][j+1]) {\n\t\t\t\t\tres=mark[i][j-1]=mark[i][j]=mark[i][j+1]=true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//\u6a2a\u5411\u6d88\u9664\n\t\tfor (register int i=1;i<4;i++) {\n\t\t\tfor (register int j=0;j<h[i];j++) {\n\t\t\t\tif (a[i-1][j]==a[i][j] && a[i][j]==a[i+1][j]) {\n\t\t\t\t\tres=mark[i-1][j]=mark[i][j]=mark[i+1][j]=true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!res) return false; //\u6ca1\u53d1\u751f\u6d88\u9664\u5c31\u4e0d\u5904\u7406\u6389\u843d\u4e86\n\t\t//\u5904\u7406\u6389\u843d\n\t\tfor (register int i=0;i<5;i++) {\n\t\t\tint k=0; //\u6389\u843d\u7684\u4f4d\u7f6e\n\t\t\tfor (register int j=0;j<h[i];j++) {\n\t\t\t\tif (!mark[i][j]) {\n\t\t\t\t\ta[i][k++]=a[i][j];\n\t\t\t\t\tif (k-1!=j) a[i][j]=0; //\u4e0d\u662f\u540c\u4e00\u683c\n\t\t\t\t} else {\n\t\t\t\t\ta[i][j]=0; //\u88ab\u6d88\u9664\u7684\u8981\u6e05\u62100\n\t\t\t\t}\n\t\t\t}\n\t\t\th[i]=k;\n\t\t}\n\t\treturn true;\n\t}\n\tinline bool allclear() {\n\t\treturn !(h[0] || h[1] || h[2] || h[3] || h[4]);\n\t}\n\tvoid process_ex() {\n\t\twhile (process());\n\t}\n};\npuzzle ini;\nvoid dfs(puzzle cur,int t) { //\u5f53\u524d\u72b6\u6001,\u5df2\u79fb\u52a8\u6b21\u6570\n\tbool clear=cur.allclear();\n\tif (t==n) {\n\t\tif (clear) { //\u8fbe\u6210\n\t\t\tfor (int i=0;i<n;i++) {\n\t\t\t\tprintf(\"%d %d %d\\n\",his[i][0],his[i][1],his[i][2]);\n\t\t\t}\n\t\t\texit(0); //\u5f3a\u9000\n\t\t}\n\t\treturn; //\u5931\u8d25\n\t}\n\tfor (register int i=0;i<5;i++) { //\u679a\u4e3ex\n\t\tfor (register int j=0;j<cur.h[i];j++) { //\u679a\u4e3ey\n\t\t\tif (i!=4) { //\u53ef\u4ee5\u5f80\u53f3\u79fb\n\t\t\t\tif (cur.a[i+1][j]!=cur.a[i][j]) {\n\t\t\t\t\tpuzzle nxt=cur;\n\t\t\t\t\tnxt.moveblock(i,j,1); //\u79fb\u52a8\n\t\t\t\t\this[t][0]=i, his[t][1]=j, his[t][2]=1; //\u5386\u53f2\u8bb0\u5f55\n\t\t\t\t\tnxt.process_ex(); //\u5904\u7406\u6d88\u9664\n\t\t\t\t\tdfs(nxt,t+1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (i!=0) { //\u53ef\u4ee5\u5f80\u5de6\u79fb\n\t\t\t\tif (!cur.a[i-1][j]) { //\u526a\u679d\uff1a\u53ea\u6709\u5de6\u8fb9\u4e3a0\u624d\u80fd\u5f80\u5de6\u79fb\n\t\t\t\t\tpuzzle nxt=cur;\n\t\t\t\t\tnxt.moveblock(i,j,-1);\n\t\t\t\t\this[t][0]=i, his[t][1]=j, his[t][2]=-1;\n\t\t\t\t\tnxt.process_ex();\n\t\t\t\t\tdfs(nxt,t+1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nint main() {\n\tscanf(\"%d\",&n);\n\tfor (int i=0;i<5;i++) {\n\t\tini.h[i]=0;\n\t\tfor (int &j=ini.h[i];true;j++) {\n\t\t\tint tmp;\n\t\t\tscanf(\"%d\",&tmp);\n            if (tmp==0) break;\n            if (j<7) ini.a[i][j]=tmp;\n        }\n\t}\n\tdfs(ini,0);\n\tprintf(\"%d\\n\",-1);\n\treturn 0;\n}\n```",
        "postTime": 1533448822,
        "uid": 32771,
        "name": "\u554a\u561e\u561e\u561e\u561e",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1312 \u3010Mayan\u6e38\u620f\u3011"
    },
    {
        "content": "\u76f8\u5f53bt\u7684\u4e00\u4e2a\u641c\u7d22\u3002 \u7ecf\u8fc7\u6211\u7684\u8fde\u591c\u594b\u6218\uff0c\u7ec8\u4e8e\u8fd9\u9053\u9898\u505a\u51fa\u6765\u4e86!!!!\n\n\u7531\u4e8e\u5de5\u7a0b\u91cf\u7684\u6d69\u5927\uff0c\u6240\u4ee5\u6709\u5f88\u591a\u5730\u65b9\u90fd\u51fa\u4e86\u9519\uff08\u60ed\u6127\u554a\uff01NOIP-2011-day1-T3-Mayan\u6e38\u620f\u3010\u641c\u7d22\u3011\uff09\n\n\u4f46\u662f\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u6536\u83b7\u4e86\u5f88\u591a....\u8fd9\u624d\u662f\u6700\u91cd\u8981\u7684\u989dNOIP-2011-day1-T3-Mayan\u6e38\u620f\u3010\u641c\u7d22\u3011\n\n\u5148\u611f\u6168\u4e00\u4e0b\u628a\uff0c\n\n\u9996\u5148\u662f\u6572\u4ee3\u7801\u7528\u4e86\u63a5\u8fd1\u4e24\u8282\u8bfe......\u6162...\n\n\u63a5\u7740\u8c03\u8bd5\uff0c\u5f00\u59cb\u76f4\u63a5\u5168\u662f-1....NOIP-2011-day1-T3-Mayan\u6e38\u620f\u3010\u641c\u7d22\u3011....\u53d1\u73b0\u5728\u518d\u6b21\u6d88\u53bb\u65f6\u5fd8\u4e86\u6570\u7ec4\u7684\u521d\u59cb\u5316..\n\n\u7136\u540e\u6539\u4e86\uff0c\u4f9d\u7136\u5982\u6b64...\u90c1\u95f7 \u5fd8\u4e86\u56de\u6eaf...\uff08\u8fd9\u662f\u5927\u9519\u554a\uff0c\u641c\u7d22\u4e0d\u56de\u6eaf\u7ed3\u679c\u600e\u4f1a\u5bf9\uff01\uff01\uff09\u63a5\u7740\u6539...\u4e0d\u8981\u770b\u6211\u8fd9\u91cc\u8bf4\u7684\u5f88\u8f7b\u677e\uff0c\u627e\u8fd9\u4e9b\u9519\u8bef\u8d85\u7ea7\u96be\u627e\uff0c\u6211\u51e0\u4e4e\u60f3\u653e\u5f03..\u575a\u6301\u5c31\u662f\u80dc\u5229\uff01\uff01\n\n\u7136\u540e \u4f9d\u7136-1.....\u86cb\u788e\u4e00\u5730\n\n\u63a5\u7740\u53d1\u73b0\u6d88\u53bb\u7684\u65f6\u5019\u4e0d\u5bf9\uff0c\u6574\u4e2a\u6ca1\u6d88\u5e72\u51c0...\u6539\u4e86\u4e24\u6b21\u624d\u5bf9....\n\n\u7136\u540e\u6837\u4f8b\u8fc7\u4e86...\u63d0\u4ea4\u5bf9\u4e867\u4e2a\u70b9\uff0c\u4ee43\u4e2a\u5b57\u5178\u5e8f\u4e0d\u5bf9\uff0c\u624d\u53d1\u73b0\u6211\u6700\u540e\u70b9\u5230\u4e86x\uff0cy\u6570\u7ec4\uff0c\u5c31\u6210\u4e86y\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\u4e86....\u8fd9\u4e2a\u597d\u6539...\u7ec8\u4e8eAC\u4e86\uff01\uff01\uff01\uff01\n\n\n\u6536\u83b7:\n\n\u5bf9\u4e8e\u641c\u7d22\uff0c\u4e3b\u8981\u662f\u72b6\u6001\u7684\u62d3\u5c55\uff0c\u4ece\u4e00\u4e2a\u72b6\u6001\u62d3\u5c55\u51fan\u4e2a\u72b6\u6001\uff0c\u8fd9n\u4e2a\u72b6\u6001\u6bcf\u4e2a\u6709\u62d3\u5c55\u51fan\u4e2a......\u65e0\u7a77\u65e0\u5c3d\uff08\u662f\u4e0d\u53ef\u80fd\u7684),\u78b0\u5230\u7ed3\u679c\u5c31\u5b8c\u6210\u4e86\u3002\n\n\u5f53\u8fd9\u4e2a\u9636\u6bb5\u7684\u8fd9\u4e2a\u72b6\u6001\u4e0d\u6b63\u786e\u65f6\uff0c\u5c31\u8981\u56de\u5230\u4e0a\u4e2a\u9636\u6bb5\u7684\u67d0\u4e2a\u72b6\u6001\uff0c\u8fd9\u65f6\u4e5f\u5c31\u662f\u56de\u6eaf\uff0c\u56de\u6eaf\u65f6\u5343\u4e07\u4e0d\u8981\u5fd8\u4e86\u521d\u59cb\u5316\u5f53\u524d\u72b6\u6001\uff0c\u5426\u5219.....\u4e0d\u582a\u8bbe\u60f3\u3002\n\n\u5bf9\u4e8e\u8981\u6c42\u5b57\u5178\u5e8f\u8f93\u51fa\uff0c\u5219\u5728\u641c\u7d22\u7684\u65f6\u5019\u6309\u7167\u6700\u4f18\u5148\u7684\u4f5c\u4e3a\u9996\u5148\u641c\u7d22\u7684\u5bf9\u8c61\u5373\u53ef\uff0c\u4e5f\u5c31\u662f\u9996\u5148\u62d3\u5c55\u6700\u4f18\u72b6\u6001....\n\n\u8fd8\u6709\u5bf9\u4e8e\u5411\u8fd9\u6837\u7684\u5927\u89c4\u6a21\u641c\u7d22\u9898\uff0c\u4e00\u5b9a\u8981\u9996\u5148\u7b97\u597d\u6240\u6709\u60c5\u51b5\u4ee5\u53ca\u8981\u7528\u7684\u8fc7\u7a0b\uff0c\u4fdd\u8bc1\u5230\u6700\u6b63\u786e\uff0c\u56e0\u4e3a\u5728\u5199\u5b8c\u540e\u5982\u679c\u51fa\u9519\u5f88\u96be\u6539\u3002\n\n\n\u8fd9\u9053\u9898\u5f53\u5de6\u8fb9\u6709\u6570\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u4e0d\u5411\u5de6\u79fb\uff0c\u56e0\u4e3a\u5904\u4e8e\u5de6\u8fb9\u7684\u90a3\u4e2a\u683c\u5b50\u5411\u53f3\u79fb\u4e0e\u8fd9\u4e2a\u683c\u5b50\u5411\u5de6\u79fb\u662f\u4e00\u6837\u7684\uff0c\u800c\u4e14\u53f3\u79fb\u4f18\u4e8e\u5de6\u79fb..\n\n\u6240\u4ee5\u6309\u7167\u5173\u952e\u5b57\u7684\u4f18\u5148\u987a\u5e8f\u62d3\u5c55\u72b6\u6001\uff0c\u5f53\u9047\u5230\u7ed3\u679c\u8f93\u51fa\u5c31ok\u4e86\u3002\n\n\n\n```cpp\n#01: Accepted (0ms, 580KB)\n#02: Accepted (0ms, 580KB)\n#03: Accepted (0ms, 580KB)\n#04: Accepted (0ms, 580KB)\n#05: Accepted (6ms, 580KB)\n#06: Accepted (178ms, 580KB)\n#07: Accepted (537ms, 580KB)\n#08: Accepted (68ms, 580KB)\n#09: Accepted (84ms, 580KB)\n#10: Accepted (1318ms, 580KB)\n```\nAccepted / 100 / 2193ms / 580KB\n```delphi\n\ntype  \n    date=array[0..14,1..8] of longint; //\u8fd9\u91cc\u8fd8\u7528\u4e86\u8fd9\u6837\u5b9a\u4e49\u7684\u6570\u7ec4\uff0c\u5f88\u597d\u7528\n\nvar\n    n,m,i,j,step:longint;\n    map,kao:array[0..14,1..8] of longint;\n    x,y,z:array[1..10] of longint;\n\nprocedure print;\nvar \n    i:longint;\nbegin\n    writeln(y[1]-1,' ',x[1]-1,' ',z[1]);\n    i:=2;\n    while z[i]<>0 do begin\n        writeln(y[i]-1,' ',x[i]-1,' ',z[i]);\n        inc(i);\n    end;\nend;\n\nprocedure init;\nbegin\n    read(n);\n    for i:=1 to 5 do begin\n        read(m);\n        j:=1;\n        while m<>0 do begin\n            map[j,i]:=m;\n            inc(j);\n            read(m);\n        end;\n    end;\nend;\n\nfunction check(map:date):boolean;\nvar\n    i,j,k,ll:longint; f:boolean;\n    fmap:array[1..7,1..5] of boolean;\nbegin\n    f:=true;\n    while f do begin\n        f:=false;\n        fillchar(fmap,sizeof(fmap),false);\n        for i:=1 to 7 do\n            for j:=1 to 3 do\n                if (map[i,j]=map[i,j+1])and(map[i,j+1]=map[i,j+2])and(map[i,j]<>0) then begin\n                    fmap[i,j]:=true;\n                    fmap[i,j+1]:=true;\n                    fmap[i,j+2]:=true;\n                    f:=true;\n                end;\n        for j:=1 to 5 do\n            for i:=1 to 5 do\n                if(map[i,j]=map[i+1,j])and(map[i+1,j]=map[i+2,j])and(map[i,j]<>0)then begin\n                    fmap[i,j]:=true;\n                    fmap[i+1,j]:=true;\n                    fmap[i+2,j]:=true;\n                    f:=true;\n                end;\n        if f then begin\n            for i:=1 to 7 do\n                for j:=1 to 5 do\n                    if fmap[i,j]=true then map[i,j]:=0;\n            for j:= 1  to 5 do begin\n                i:=0;\n                while i<=7 do begin\n                    inc(i);  \n                    ll:=0;\n                    if (map[i,j]>0)and(i>1) then begin\n                        for k:= i downto 1 do\n                            if map[k,j]=0 then inc(ll);\n                            if ll>0 then\n                            for k:=i to 14 do\n                                map[k-ll,j]:=map[k,j];\n                    end;\n                    i:=i-ll;\n                end;\n            end;\n        end;\n    end;\n    kao:=map;\n    f:=true;\n    for i:=1 to 7 do\n        for j:=1 to 5 do\n            if map[i,j]>0 then begin \n                f:=false; \n                exit(false);\n            end;\n    if f then exit(true) \n        else exit(false);\nend;\n\nprocedure dfs(step:longint;map:date);\nvar \n    i,j,k,s,t,ii:longint;  \n    caa:date;\nbegin\n    caa:=map;\n    s:=step;\n    if step<n then   //\u5728\u89c4\u5b9a\u6b65\u6570\u5185\u5219\u79fb\u52a8\u5404\u4e2a\u683c\u5b50\n        for j:=1 to 5 do\n            for i:=1 to 7 do\n                if map[i,j]>0 then  //\u6b64\u5904\u6709\u683c\u5b50\n                begin\n                    if j+1<=5 then //\u53f3\u79fb\n                    begin\n                        if(map[i,j+1]>0)and(map[i,j+1]<>map[i,j])then//\u5982\u679c\u53f3\u9762<>0\n                        begin\n                            t:=map[i,j]; \n                            map[i,j]:=map[i,j+1];\n                            map[i,j+1]:=t;\n                            s:=step+1;\n                            x[s]:=i; \n                            y[s]:=j; \n                            z[s]:=1;\n                            if ( check(map)) and (s=n) then begin \n                                print; \n                                halt; \n                            end;\n                            map:=kao;\n                            if s=n then map:=caa \n                            else begin\n                                dfs(s,map); \n                                map:=caa;\n                            end;\n                        end;\n                        if map[i,j+1]=0 then //\u5982\u679c\u53f3\u9762=0\u90a3\u4e48\u4e0b\u843d\n                        begin\n                            ii:=i;\n                            while (map[ii,j+1]=0)and(ii>0) do\n                                dec(ii);\n                            inc(ii);\n                            map[ii,j+1]:=map[i,j];\n                            for k:=i  to 7 do  //j\u5217\u4e0b\u843d\n                                map[k,j]:=map[k+1,j];\n                                s:=step+1;\n                                x[s]:=i; \n                                y[s]:=j;\n                                z[s]:=1;\n                                if ( check(map)) and (s=n) then begin \n                                    print;\n                                    halt; \n                                end;\n                                map:=kao;\n                                if s=n then map:=caa \n                                else begin\n                                    dfs(s,map);\n                                    map:=caa;\n                                end;\n                        end;\n                    end;\n                    if j-1>0 then  //\u5de6\u79fb\n                    begin\n                        if map[i,j-1]=0 then //\u5982\u679c\u5de6\u9762=0\u90a3\u4e48\u4e0b\u843d\n                        begin\n                            ii:=i;\n                            while (map[ii,j-1]=0)and(ii>0) do\n                                dec(ii);\n                            inc(ii);\n                            map[ii,j-1]:=map[i,j];\n                            for k:=i to 7 do // j\u5217\u4e0b\u843d\n                                map[k,j]:=map[k+1,j];\n                                s:=step+1;\n                                x[s]:=i;\n                                y[s]:=j; \n                                z[s]:=-1;\n                                if ( check(map)) and (s=n) then \n                                begin  \n                                    print; \n                                    halt; \n                                end;\n                                map:=kao;\n                                if s=n then map:=caa\n                                else begin\n                                    dfs(s,map);\n                                    map:=caa;\n                                end;\n                        end;\n                    end;\n                end;\nend;\n\nbegin\n    init;\n    step:=0;\n    dfs(step,map);\n    write('-1');\nend.\n\n```",
        "postTime": 1444184793,
        "uid": 3911,
        "name": "Skywalker_David",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1312 \u3010Mayan\u6e38\u620f\u3011"
    },
    {
        "content": "~~\u770b\u4e86\u4e00\u5708\u9898\u89e3\uff0c\u53d1\u73b0\u597d\u50cf\u6ca1\u6709bfs\u7684\u9898\u89e3~~\n\n\u8fd9\u51e0\u5929\u65b0\u7b97\u6cd5\u5b66\u7684\u6709\u70b9\u75b2\uff0c\u770b\u5230\u6570\u8bba\u53c8\u4e0d\u60f3\u505a\uff0c\u6240\u4ee5\u51b3\u5b9a\u5199\u4e00\u70b9\u66b4\u529b\u7684\u9898\u76ee\u56de\u56de\u795e\n\n------------\n                                   \n\n\u9996\u5148\uff0c\u8fd9\u9898\u4e00\u770b\u80af\u5b9a\u662f\u4e2a\u66b4\u529b\u641c\u7d22\uff0c\u56e0\u4e3a\u9898\u76ee\u4e2d\u7684\u53d8\u6362/\u64cd\u4f5c\u7565\u590d\u6742\uff0c\u6240\u4ee5\u6211\u4eec\u5c3d\u91cf\u5206\u5f00\u5199\u51fd\u6570\u89e3\u51b3\u6bcf\u5757\u5c0f\u64cd\u4f5c\n\n##### \u6ce8\uff1a\u672c\u6587\u4e2d\u7684\u5730\u56fe\u53d8\u91cf [ i ][ j ] \u5747\u4ee3\u8868\u81ea\u4e0b\u800c\u4e0a\u7b2ci\u884c\uff0c\u81ea\u5de6\u800c\u53f3\u7b2cj\u5217 \n\n\n\n#### \u9996\u5148\u628a\u56fe\u7528\u4e8c\u7ef4\u6570\u7ec4\u8868\u793a\u51fa\u6765\uff0c\u7ed3\u6784\u4f53\uff0c\u56fe\u65b9\u4fbf\n\n```cpp\nstruct node{int pad[10][10];}\n```\n\n\n\n## \u9898\u76ee\u4e2d\u603b\u5171\u6ee1\u8db3\u4e09\u4e2a\u64cd\u4f5c\uff1a\n\n### 1.\u6389\u843d\n\t\n   \u5f53\u4e00\u4e2a\u65b9\u5757\u4e0b\u65b9\u6ca1\u6709\u65b9\u5757\u65f6\uff0c\u4f1a\u5f80\u4e0b\u6389\uff0c\u76f4\u5230\u5230\u5e95\u6216\u4e0b\u65b9\u6709\u65b9\u5757\n\n\u5b9e\u73b0[x][y]\u65b9\u5757\u7684\u6389\u843d\n```cpp\nvoid drop(int x,int y,node &u){   //\u540c\u6b65\u4fee\u6539\u6389\uff0c\u7528\u5730\u5740\uff0c\u4e0b\u540c\n\tint r=x;                 //\u7528\u6765\u8bb0\u5f55\u5f53\u524d\u6389\u843d\u5757\uff0c\u63a5\u4e0b\u6765\u6709\u7528\n\tif(u.pad[x][y]==0)return; //\u5982\u679c\u662f\u4e2a\u201c\u7a7a\u5757\u201d\uff0c\u4e0d\u505a\u4e86\n\tbool flag=0;              //\u7528\u6765\u5224\u5b9a\u8fd9\u4e2a\u5757\u6709\u6ca1\u6709\u6389\u843d\n\twhile(u.pad[x-1][y]==0&&x>0)//\u4e0b\u65b9\u4e3a\u7a7a\u4e14\u4e0d\u662f\u6700\u5e95\u5c42\n\t{\n\t\tflag=1;\n\t\tswap(u.pad[x-1][y],u.pad[x][y]);//\u6389\u843d\u5373\u4ea4\u6362\n\t\tx--;                //\u81ea\u5df1\u7684\u4f4d\u7f6e\u964d\u4f4e\n\t}\n\tif(flag)drop(r+1,y,u);      //\u5982\u679c\u81ea\u5df1\u6389\u4e86\uff0c\u81ea\u5df1\u4e0a\u65b9\u4e5f\u6389\n}\n```\n\n### 2.\u6a2a\u5411\u62d6\u52a8/\u4ea4\u6362\n\t\n   \u6bcf\u4e2a\u65b9\u5757\u53ef\u4ee5\u5411\u5de6/\u53f3\u62d6\u52a8\uff0c\u5373\u4e0e\u5de6/\u53f3\u4ea4\u6362\u65b9\u5757\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u7528\u7b80\u5355\u7684swap\u641e\u5b9a\n\n```cpp\nvoid move(int x,int y,int d,node &u){\n\tswap(u.pad[x][y],u.pad[x][y+d]);//d\u662f\u65b9\u5411\u53731\u6216-1\uff0c\u76f4\u63a5\u62ff\u6765\u7528\n\tdrop(x+1,y,u);drop(x,y+d,u);   //\u6362\u6765\u7684\u53ef\u80fd\u662f 0 \uff0c\u6362\u51fa\u53bb\u7684\u4e00\u5b9a\u4e0d\u662f\u96f6\uff0c\u4f1a\u5728\u5bbd\u641c\u65f6\u5019\u4fdd\u8bc1\n        //\u6211\u7684\u4e0a\u65b9\u65b9\u5757\u53ef\u80fd\u4f1a\u6389\u843d\uff0c\u6211\u8fc7\u53bb\u7684\u5730\u65b9\u53ef\u80fd\u4f1a\u4f7f\u6211\u6389\u843d\n}\n```\n\n### 3.\u6d88\u9664\n\t\n   \u6a2a\u5411\u6216\u7eb5\u5411\u7684\u4e09\u4e2a\u8fde\u7eed\u76f8\u540c\u5757\u53ef\u4ee5\u6d88\u6389\uff0c\u4e14\u53ef\u4ee5\u5171\u7528\u5757\n###### \u56e0\u4e3a\u6709\u4e86\u5171\u7528\u5757\u7684\u6027\u8d28\uff0c\u6240\u4ee5\u80af\u5b9a\u4e0d\u80fd\u65e0\u8111\u627e\u5230\u5c31\u6d88\u9664\uff0c\u4e0d\u59a8\u6253\u6807\u8bb0\n\n```cpp\nvoid del(node &u){\n\tbool need=0;\n\tmemset(vis,0,sizeof(vis));   //vis\u6570\u7ec4\u7528\u6765\u6253\u6807\u8bb0\n\tfor(int i=0;i<7;i++)        //\u4ece\u5de6\u4e0b\u5f80\u53f3\u4e0a\u641c\n\tfor(int j=0;j<5;j++)        //\u53ea\u8981\u8003\u8651\u5411\u53f3\u548c\u5411\u4e0a\u7684\u8fde\u7eed\u5757\u5373\u53ef\n\t\tif(u.pad[i][j]!=0){ //\u5b58\u5728\u65b9\u5757\n\t   \t\tif(u.pad[i+1][j]==u.pad[i][j]&&u.pad[i+2][j]==u.pad[i][j])//\u7eb5\u5411\u4e09\u4e2a\u76f8\u8fde\n\t\t   \t\tvis[i][j]=vis[i+1][j]=vis[i+2][j]=1;\n\t       \t\tif(u.pad[i][j+1]==u.pad[i][j]&&u.pad[i][j+2]==u.pad[i][j])//\u6a2a\u5411\u4e09\u4e2a\u76f8\u8fde\n\t\t   \t\tvis[i][j]=vis[i][j+1]=vis[i][j+2]=1;\n\t}\n\t\n\tfor(int i=6;i>=0;i--)   //\u6d88\u9664\u7684\u65f6\u5019\u4ece\u4e0a\u5f80\u4e0b\uff0c\u53ef\u4ee5\u540c\u6b65drop\u64cd\u4f5c\n\tfor(int j=0;j<5;j++)\n\t   if(vis[i][j]){       //\u88ab\u6807\u8bb0\u4e86\u8981\u6d88\u9664\n\t\tu.pad[i][j]=0;  //\u6d88\u6389\n\t\tdrop(i+1,j,u);  //\u4e0a\u65b9\u7684\u65b9\u5757\u4e0b\u843d\n\t\tneed=1;\n\t}\n\tif(need)del(u);\n}\n```\n## Tip\uff1a\n###### 1.\u6d88\u9664\u7684\u65f6\u5019\u4ece\u4e0a\u5f80\u4e0b\u6d88\uff0c\u76f8\u4fe1\u53ef\u4ee5\u611f\u6027\u7406\u89e3\n\n###### 2.\u53ef\u80fd\u4f1a\u6709\u7591\u95ee\uff0cneed\u6709\u5565\u7528\uff0c\u770b\u6211\u4eec\u7684\u5f3a\u529b\u6837\u4f8b\n   ![](https://cdn.luogu.com.cn/upload/pic/72895.png)\n   \n   \u5982\u679c\u6211\u4eec\u53ea\u626b\u4e00\u904d\uff0c\u4f1a\u5269\u4e0b\u8fd9\u4e48\u4e2a\u73a9\u610f\n   ![](https://cdn.luogu.com.cn/upload/pic/72899.png)\n   \n   \u6240\u4ee5\u6211\u4eec\u7528\u4e00\u4e2aneed\u6765\u5224\u5b9a\u6709\u6ca1\u6709\u6d88\u9664\uff0c\u5982\u679c\u6709\u6d88\u9664\uff0c\u90a3\u4e48\u518d\u626b\u4e00\u904d\uff0c\u770b\u5728\u6389\u843d\u540e\u6709\u6ca1\u6709\u65b0\u7684\u53ef\u4ee5\u6d88\u9664\u7684\u5757\n   \n\n--------------------------------------------------------------------- \u534e\u4e3d\u4e3d\u7684\u5206\u5272\u7ebf\n\n### \u6240\u6709\u7684\u64cd\u4f5c\u89e3\u51b3\uff0c\u8981\u6d88\u9664\u5b8c\u6bd5\u624d\u7b97\u5b8c\u6210\n###### \u4e00\u4e2acheck\u89e3\u51b3\n```cpp\nbool check(node u){\n\tfor(int i=0;i<7;i++)\n\tfor(int j=0;j<5;j++)\n\t    if(u.pad[i][j]!=0)return false;//\u8fd8\u6709\u65b9\u5757\uff0c\u5931\u8d25\n\treturn true;\n}\n```\n\n\u6240\u6709\u8be5\u6709\u7684\u64cd\u4f5c\u548c\u6027\u8d28\u90fd\u641e\u5b9a\uff0c\u6765\u4e2a\u5bbd\u641c\u7684\u677f\u5b50\u5957\u4e00\u4e0b\uff01\n\u4e0a\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nstruct node{int pad[10][10];}s;\n\nstruct point{\n\tnode ground;\n\tint step,mx[10],my[10],dir[10];//\u6b65\u6570\uff0cx\u9009\u62e9\uff0cy\u9009\u62e9\uff0c\u65b9\u5411\n};\nqueue<point>line;\nint n,a,cnt[5];\nbool vis[10][10],flag;\n\nbool check(node u){\n\tfor(int i=0;i<7;i++)\n\tfor(int j=0;j<5;j++)\n\t    if(u.pad[i][j]!=0)return 0;\n\treturn 1;\n}\n\nvoid drop(int x,int y,node &u){\n\tint r=x;\n\tif(u.pad[x][y]==0)return;\n\tbool flag=1;\n\twhile(u.pad[x-1][y]==0&&x>0)\n\t{\n\t\tflag=1;\n\t\tu.pad[x-1][y]=u.pad[x][y];\n\t\tu.pad[x][y]=0;\n\t\tx--;\n\t}\n\tif(flag)drop(r+1,y,u);\n}\n\nvoid del(node &u){\n\tbool need=0;\n\tmemset(vis,0,sizeof(vis));\n\tfor(int i=0;i<7;i++)\n\tfor(int j=0;j<5;j++)\n\t\tif(u.pad[i][j]!=0){\n\t\t\tif(u.pad[i+1][j]==u.pad[i][j]&&u.pad[i+2][j]==u.pad[i][j])\n\t\t\t\tvis[i][j]=vis[i+1][j]=vis[i+2][j]=1;\n\t\t\tif(u.pad[i][j+1]==u.pad[i][j]&&u.pad[i][j+2]==u.pad[i][j])\n\t\t\t\tvis[i][j]=vis[i][j+1]=vis[i][j+2]=1;\n\t\t}\n\t\n\tfor(int i=6;i>=0;i--)\n\tfor(int j=0;j<5;j++)\n\t    if(vis[i][j]){\n\t\tu.pad[i][j]=0;\n\t\tdrop(i+1,j,u);\n\t\tneed=1;\n\t}\n\tif(need)del(u);\n}\n\nvoid move(int x,int y,int d,node &u){\n\tswap(u.pad[x][y],u.pad[x][y+d]);\n\tdrop(x+1,y,u);drop(x,y+d,u);//\u6362\u6765\u7684\u53ef\u80fd\u662f 0 \uff0c\u6362\u51fa\u53bb\u7684\u4e00\u5b9a\u4e0d\u662f\u96f6 \t\n}\n\nvoid bfs(){\n\tpoint e;\n\te.ground=s;\n\te.step=0;\n\tline.push(e);\n\twhile(!line.empty())\n\t{\n\t\tpoint u=line.front(),v;\n        \tline.pop();\n\t\tnode back=u.ground;\n\t\tfor(int j=0;j<5;j++)\n\t\tfor(int i=0;i<7;i++)\n\t\t{\n\t\t\tif(back.pad[i][j]!=0)/\u663e\u7136\uff0c\u53ea\u6709\u6709\u65b9\u5757\u7684\u8fdb\u884c\u62d6\u52a8\u662f\u6709\u6548\u7684\n\t\t\t{\n\t\t\t\tif(j+1<5){//\u5224\u5b9a\u53f3\u79fb\u5408\u6cd5\n\t\t\t\t\tv=u;v.step++;\n\t\t\t\t\tv.mx[v.step]=j,v.my[v.step]=i;\n\t                v.dir[v.step]=1;\n\t\t\t\t\tmove(i,j,1,v.ground);\n\t\t\t\t\tdel(v.ground);\n\t\t\t\t\tif(v.step<n){line.push(v);}\n\t\t\t\t\tif(v.step==n&&check(v.ground)){\n\t\t\t\t\t\tfor(int k=1;k<=n;k++)\n\t\t\t\t\t\t\tcout<<v.mx[k]<<\" \"<<v.my[k]<<\" \"<<v.dir[k]<<endl;\n\t\t\t\t\t\tflag=1;\n\t\t\t\t\t\treturn ;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(j-1>=0){//\u5de6\u79fb\u5408\u6cd5\n\t\t\t\t\tv=u;v.step++;\n\t\t\t\t\tv.mx[v.step]=j,v.my[v.step]=i;\n\t\t\t\t\tv.dir[v.step]=-1;\n\t\t\t\t\tmove(i,j,-1,v.ground);\n\t\t\t\t\tdel(v.ground);\n\t\t\t\t\tif(v.step<n){line.push(v);}\n\t\t\t\t\tif(v.step==n&&check(v.ground)){\n\t\t\t\t\t\tfor(int k=1;k<=n;k++)\n\t\t\t\t\t\t\tcout<<v.mx[k]<<\" \"<<v.my[k]<<\" \"<<v.dir[k]<<endl;\n\t\t\t\t\t\tflag=1;\n\t\t\t\t\t\treturn ;\n\t\t\t\t\t}\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn ;\n}\n\nint main(){\n\tcin>>n;\n\tfor(int i=0;i<=4;i++)\n\t{\n\t\twhile(cin>>a)\n\t\t{\n\t\t\tif(!a)break;\n\t\t\ts.pad[cnt[i]++][i]=a;\n\t\t}\n\t}\n\tbfs();\n\tif(!flag)printf(\"-1\");\n\treturn 0;\n} \n\n```\n## \u5927\u529f\u544a\u6210\uff01\uff01\uff01 \n### \u7136\u9e4550pts.....\n\nMLE+TLE\n\n\u56de\u5934\u518d\u770b\u770b\u6211\u4eec\u7684\u4ee3\u7801\n\nbfs\u4e5f\u592a\u88f8\u4e86\uff01\uff01\uff01\n   \n### 70pts\uff1a   \n## \u6211\u4f1a\u526a\u679d\uff01\uff01\uff01\n\t\n   \u6211\u4eec\u53d1\u73b0\uff0c\u5728\u5de6\u53f3\u4e24\u4e2a\u90fd\u6709\u7684\u60c5\u51b5\u4e0b\uff0c\u5de6\u8fb9\u5757\u53f3\u79fb\u548c\u53f3\u8fb9\u5757\u5de6\u79fb\u662f\u4e00\u6837\u7684\uff01\n   \n   \u6240\u4ee5\uff0c\u5728\u5411\u5de6\u79fb\u52a8\u65f6\u53ef\u4ee5\u5224\u4e00\u4e0b\uff0c\u53ea\u6709\u5de6\u8fb9\u4e3a\u7a7a\u7684\u65f6\u5019\u79fb\u52a8\uff0c\u51cf\u5c11\u72b6\u6001\u91cf\uff01\uff01\uff01 \n   \n   \u8fd8\u5269\u4e09\u4e2aMLE\n   \n### 90pts\uff1a\n## \u6211\u4f1a ~~\u5361\u7a7a\u95f4~~\uff01\uff01\uff01\n\u6211\u4eec\u7684node\u7ed3\u6784\u4f53\u91cc\u5f00\u4e8610* 10\u7684\u6570\u7ec4\uff0c\u5b8c\u5168\u53ef\u4ee5\u53ea\u5f008* 8\u561b,point\u91cc\u6700\u591an\u53ea\u67095\uff0c\u7f29\u52306\u4e0d\u5c31\u597d\u4e86\uff1f\n\n\u53c8\u662f\u4e00\u53d1\uff0c\u7136\u800c\u8fd8\u662fMLE\n\n### 100pts\uff1a\n## \u6211\u4f1a ~~\u7ee7\u7eed\u5361\u7a7a\u95f4~~\uff01\uff01\uff01\n   \u6211\u4eec\u7684\u7ed3\u6784\u4f53\u91cc\u5b58\u7684\u6570\u6700\u5927\u4e0d\u8d85\u8fc710\n   #### short\u5927\u6cd5\u543c\u554a\n\t\n   \u4e0d\u8fc7\uff0c\u4ec5\u9650\u6b64\u9898\u6570\u636e\u5c0f\uff0c\u53ea\u8981\u6570\u636e\u52a0\u5f3a\uff0c\u4e0d\u4e00\u5b9a\u5361\u7684\u8fc7\u53bb\n   \n### \u771f\u00b7100pts:  \n## \u6211\u4f1a ~~\u5224\u91cd~~ \u91cd\u8f7d\u8fd0\u7b97\u7b26\uff01\uff01\uff01\n   STL\u5e93\uff0cmap\u51fd\u6570\u597d\u554a\uff01\n   \n   \u5f53\u7136\uff0cmap\u91cc\u5176\u5b9e\u662f\u4e00\u68f5\u7ea2\u9ed1\u6811\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u91cd\u8f7d\u5c0f\u4e8e\u8fd0\u7b97\u7b26\uff01\u6bd5\u7adf\u6211\u4eec\u7684\u68c0\u7d22\u9700\u8981\u8fdb\u884c\u6bd4\u8f83\n   \n###  \u4e0b\u9762\u662f\u6b63\u7ecf\u7684AC\u4ee3\u7801\uff0c\u6ca1\u5565\u6ce8\u91ca\uff0c\u7801\u98ce\u4e11\u964b\uff0c\u89c1\u8c05\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint n,a,cnt[5];\nbool vis[8][8],flag;\nstruct node{\n\tshort pad[8][8];\n\tbool operator < (const node &a)const\n    \t{\n      \t\tfor(int i(0);i < 7;++i)\n        \tfor(int j(0);j < 5;++j){\n                \tif(pad[i][j] != a.pad[i][j])return pad[i][j] < a.pad[i][j];\n                }\n        \treturn false;\n    \t}//\u91cd\u8f7d\u8fd0\u7b97\u7b26\n}s;\n\nstruct point{\n\tnode ground;\n\tshort step,mx[6],my[6];\n\tint dir[6];\n};\nqueue<point>line;\n\n\nbool check(node u){\n\tfor(int i=0;i<7;i++)\n\tfor(int j=0;j<5;j++)\n\t    if(u.pad[i][j]!=0)return 0;\n\treturn 1;\n}\n\nvoid drop(int x,int y,node &u){\n\tint r=x;\n\tif(u.pad[x][y]==0)return;\n\tbool flag=1;\n\twhile(u.pad[x-1][y]==0&&x>0)\n\t{\n\t\tflag=1;\n\t\tu.pad[x-1][y]=u.pad[x][y];\n\t\tu.pad[x][y]=0;\n\t\tx--;\n\t}\n\tif(flag)drop(r+1,y,u);\n}\n\nvoid del(node &u){\n\tbool need=0;\n\tmemset(vis,0,sizeof(vis));\n\tfor(int i=0;i<7;i++)\n\tfor(int j=0;j<5;j++)\n\t\tif(u.pad[i][j]!=0){\n\t\t\tif(u.pad[i+1][j]==u.pad[i][j]&&u.pad[i+2][j]==u.pad[i][j])\n\t\t\t\tvis[i][j]=vis[i+1][j]=vis[i+2][j]=1;\n\t\t\tif(u.pad[i][j+1]==u.pad[i][j]&&u.pad[i][j+2]==u.pad[i][j])\n\t\t\t\tvis[i][j]=vis[i][j+1]=vis[i][j+2]=1;\n\t\t}\n\t\n\tfor(int i=6;i>=0;i--)\n\tfor(int j=0;j<5;j++)\n\t\tif(vis[i][j]){\n\t\t\tu.pad[i][j]=0;\n\t\t\tdrop(i+1,j,u);\n\t\t\tneed=1;\n\t\t}\n\t\n\tif(need)del(u);\n}\n\nvoid move(int x,int y,int d,node &u){\n\tswap(u.pad[x][y],u.pad[x][y+d]);\n\tdrop(x+1,y,u);drop(x,y+d,u);//\u6362\u6765\u7684\u53ef\u80fd\u662f 0 \uff0c\u6362\u51fa\u53bb\u7684\u4e00\u5b9a\u4e0d\u662f\u96f6 \t\n}\n\nvoid bfs(){\n\tmap<node,bool>used;\n\tused[s]=1;\n\tpoint e;\n\te.ground=s;\n\te.step=0;\n\tline.push(e);\n\twhile(!line.empty())\n\t{\n\t\tpoint u=line.front(),v;\n        line.pop();\n\t\tnode back=u.ground;\n\t\tfor(int j=0;j<5;j++)\n\t\tfor(int i=0;i<7;i++)\n\t\t{\n\t\t\tif(back.pad[i][j]!=0)\n\t\t\t{\n\t\t\t\tif(j+1<5){\n\t\t\t\t\tv=u;v.step++;\n\t\t\t\t\tv.mx[v.step]=j,v.my[v.step]=i;//\u6ce8\u610f\uff0c\u8fd9\u91cc\u8bb0\u5f55\u7684\u65f6\u5019\u662f\u6309\u8f93\u51fa\u8981\u6c42\u7684x\u3001y\u8bb0\u5f55\u7684\uff0c\u548c\u539f\u5148\u5b9a\u4e49\u7684\u6070\u597d\u76f8\u53cd\n\t                v.dir[v.step]=1;\n\t\t\t\t\tmove(i,j,1,v.ground);\n\t\t\t\t\tdel(v.ground);\n\t\t\t\t\tif(v.step<n&&!used[v.ground]){line.push(v);used[v.ground]=1;}\n\t\t\t\t\tif(v.step==n&&check(v.ground)){\n\t\t\t\t\t\tfor(int k=1;k<=n;k++)\n\t\t\t\t\t\t\tcout<<v.mx[k]<<\" \"<<v.my[k]<<\" \"<<v.dir[k]<<endl;\n\t\t\t\t\t\tflag=1;\n\t\t\t\t\t\treturn ;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(j-1>=0&&back.pad[i][j-1]==0){\n\t\t\t\t\tv=u;v.step++;\n\t\t\t\t\tv.mx[v.step]=j,v.my[v.step]=i;\n\t\t\t\t\tv.dir[v.step]=-1;\n\t\t\t\t\tmove(i,j,-1,v.ground);\n\t\t\t\t\tdel(v.ground);\n\t\t\t\t\tif(v.step<n&&!used[v.ground]){line.push(v);used[v.ground]=1;}\n\t\t\t\t\tif(v.step==n&&check(v.ground)){\n\t\t\t\t\t\tfor(int k=1;k<=n;k++)\n\t\t\t\t\t\t\tcout<<v.mx[k]<<\" \"<<v.my[k]<<\" \"<<v.dir[k]<<endl;\n\t\t\t\t\t\tflag=1;\n\t\t\t\t\t\treturn ;\n\t\t\t\t\t}\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn ;\n}\n\nint main(){\n\tcin>>n;\n\tfor(int i=0;i<=4;i++)\n\t{\n\t\twhile(cin>>a)\n\t\t{\n\t\t\tif(!a)break;\n\t\t\ts.pad[cnt[i]++][i]=a;\n\t\t}\n\t}\n\tbfs();\n\tif(!flag)printf(\"-1\");\n\treturn 0;\n} \n```\n\n## \u4e00\u9053\u4f18\u79c0\u7684\u9192\u8111\u9898\u89e3\u51b3\uff01\n   \n   ",
        "postTime": 1566040608,
        "uid": 68824,
        "name": "\u4e16\u58a8",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1312 \u3010Mayan\u6e38\u620f\u3011"
    },
    {
        "content": "## \u9898\u89e3\n\u7b2c\u4e00\u6b21\u8fc7\u4e86\u4e00\u9053Day1\u6700\u540e\u4e00\u9898\uff0c\u5fc3\u4e2d\u8fd8\u662f\u6709\u70b9\u6fc0\u52a8\u3002\n\n\n------------\n\n\u8fd9\u9053\u9898\u76ee\u7a7a\u95f4\u5c0f\uff0c\u65f6\u95f4\u591a\uff0c\u7531\u6b64\u53ef\u89c1\u662f\u4e00\u9053\u7801\u91cf\u6781\u5927\u7684\u9898\u3002\n\n\u65e2\u7136\u5982\u6b64\uff0c\u6211\u4eec\u5c31\u5c06\u5b83\u62c6\u5206\u4e00\u4e0b\u3002\n\n\n------------\n1. \u8f93\u5165\n\n\u672c\u9898\u7684\u8f93\u5165\u662f\u7b2c\u4e00\u4e2a\u5751\uff0c\u6211\u5f00\u59cb\u628a(0,0)\u7684\u4f4d\u7f6e\u770b\u9519\u4e86\uff0c\u4e8e\u662f\u540e\u9762\u76f4\u63a5\u5d29\u6e83\u3002\u9898\u4e2d\u8f93\u5165\u65f6\u6a2a\u7740\u8f93\u5165\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u8981\u5904\u7406\u4e00\u4e0b\n```cpp\nvoid in()\n{\n\tint a;\n\tfor (int i=0;i<5;i++)  //\u5148\u662f\u6a2a\u5750\u6807\n\t  for (int j=0;;j++)   //\u540e\u662f\u7eb5\u5750\u6807\uff08\u5751\uff09\n\t  {\n\t  \tscanf(\"%d\",&a);\n\t  \tif(a) mp[i][j]=a;\n\t  \telse break;\n\t  }\n}\n```\n\u9898\u76ee\u4e2d\u8bb2\u5230\uff0c\u9047\u52300\u5c31\u6362\u4e00\u5217\u3002\u4f46\u662f$\\color{red}\\text{\u6ce8\u610f:}$\u5982\u679c1\u5217\u76847\u884c\u90fd\u6709\u6570\u5b57\uff0c\u8f93\u5165\u65f6\u4f9d\u7136\u4f1a\u67090\uff0c\u6545\u6211\u4eec\u4e0d\u80fd\u81ea\u52a8\u6362\u5217\uff08~~60\u5206\u7684\u60e8\u75db\u7ecf\u5386~~\uff09\n\n2. \u6389\u843d\n\n\u6389\u843d\u90e8\u5206\u76f8\u5bf9\u6bd4\u8f83\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a\u6240\u6709\u65b9\u5757\u81ea\u4e0b\u800c\u4e0a\u5f97\u904d\u5386\uff0c\u68c0\u67e5\u5b83\u4eec\u4e0b\u9762\u7a7a\u65b9\u5757\u5c31\u884c\u4e86\u3002\n```cpp\nvoid down()\n{\n\tint m;\n\tfor (int i=0;i<5;i++)//\u81ea\u4e0b\u800c\u4e0a \n\t{\n\t\tfor (int j=1;j<7;j++)\n\t\t{\n\t\t\tif(mp[i][j])//\u8fd9\u4e2a\u65b9\u5757\u6709\u989c\u8272 \n\t\t\t{\n\t\t\t\tm=0;\n\t\t\t\twhile(j-m-1>=0 && !mp[i][j-m-1]) m++;//\u5bfb\u627e\u6700\u4e0b\u9762\u7684\u7a7a\u65b9\u5757 \n\t\t\t\tif(m) mp[i][j-m]=mp[i][j],mp[i][j]=0;//\u4e0b\u79fb \n\t\t\t}\n\t\t}\n\t} \n}\n```\n\u8fd9\u4e2a\u6b65\u9aa4\u6ca1\u6709\u4ec0\u4e48\u5927\u5751\uff0c\u5c31\u662f\u4e0b\u6389\u65f6\u9632\u6b62\u8d8a\u754c\u3002\n\n3. \u6e05\u9664\n\n\u6e05\u9664\u90e8\u5206\u8981\u7279\u522b\u6ce8\u610f\u9898\u76ee\u4e2d\u7684\u60c5\u51b5\u3002\n![](https://cdn.luogu.com.cn/upload/pic/102.png)\n\n\u7531\u56fe5\u53ef\u77e5\uff0c\u6211\u4eec\u4e0d\u80fd\u9047\u5230\u4e09\u4e2a\u8fde\u5757\u5c31\u76f4\u63a5\u6d88\u9664\uff0c\u53ef\u80fd\u4f1a\u65e0\u6cd5\u5b8c\u5168\u6d88\u9664\u3002\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u9700\u8981\u53e6\u4e00\u4e2a\u7ed3\u6784\u4f53\n```cpp\nstruct mem{\n\tint x,y;\n}me[100];\n```\n\u5728\u68c0\u6d4b\u65f6\uff0c\u6211\u4eec\u8bb0\u5f55\u9700\u8981\u6e05\u9664\u7684\u65b9\u5757\uff0c\u6700\u540e\u518d\u4e00\u8d77\u6e05\u9664\u3002\n```cpp\nbool clear()\n{\n\tint t=0;//\u8ba1\u6570\u5668 \n\tfor (int i=0;i<5;i++)\n\t  for (int j=0;j<7;j++)\n\t  {\n\t  \tif(mp[i][j])\n\t  \t{\n\t  \t\tif(i-1>=0 && i+1<=4 && mp[i-1][j]==mp[i][j] && mp[i+1][j]==mp[i][j])//\u6a2a\u5411 \n\t  \t    {\n\t  \t\t    me[++t].x=i-1,me[t].y=j;\n\t  \t  \t    me[++t].x=i,me[t].y=j;\n\t  \t\t    me[++t].x=i+1,me[t].y=j;//\u50a8\u5b58 \n\t\t    }\n\t\t    if(j-1>=0 && j+1<=6 && mp[i][j-1]==mp[i][j] && mp[i][j+1]==mp[i][j])//\u7eb5\u5411 \n\t\t    {\n\t\t\t    me[++t].x=i,me[t].y=j-1;\n\t  \t\t    me[++t].x=i,me[t].y=j;\n\t  \t\t    me[++t].x=i,me[t].y=j+1;\n\t\t    }\n\t\t}\n\t  \t\n\t  }\n\tif(t)//\u6709\u9700\u8981\u6e05\u9664\u7684 \n\t  for (int i=1;i<=t;i++)\n\t    mp[me[i].x][me[i].y]=0;//\u6e05\u9664 \n\telse return 0;//\u672a\u6e05\u9664 \n\treturn 1;//\u6e05\u9664\u4e86 \n}\n```\n\u6ce8\u610f\uff0c\u6e05\u9664\u8fc7\u540e\u53ef\u80fd\u6709\u6389\u843d\u7684\uff0c\u6240\u4ee5\u8981\u8fd4\u56de\u4e00\u4e2a\u503c\uff0c\u8868\u793a\u8981\u6389\u843d\u4e00\u6b21\u3002\n\n4. \u79fb\u52a8\n\n\u79fb\u52a8\u662f\u5f88\u7b80\u5355\u7684\uff0c\u7c7b\u4f3c\u4e8e\u4ea4\u6362a,b\u3002\u6700\u540e\u8fdb\u884c\u6389\u843d\u548c\u6e05\u9664\u3002\n```cpp\nvoid mo(int x,int y,int d)\n{\n\tint t=mp[x][y];\n\tmp[x][y]=mp[x+d][y];\n\tmp[x+d][y]=t;//\u4ea4\u6362a,b \n\tdown();//\u6389\u843d \n\twhile(clear()) down();//\u82e5\u6709\u6e05\u9664\uff0c\u5219\u6389\u843d \n}\n```\n$\\color{red}\\text{\u6ce8\u610f\uff1a}$\u5f53\u6e05\u9664\u8fc7\u540e\uff0c\u53ef\u80fd\u53c8\u6709\u6389\u843d\u7684\uff0c\u4f46\u662f\u6389\u843d\u540e\u6709\u53ef\u80fd\u6709\u53ef\u4ee5\u6e05\u9664\u7684\uff0c\u6bd4\u5982\u4e0a\u9762\u56fe4\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u5faa\u73af\uff08~~\u5f00\u5fc3\u6d88\u6d88\u4e50~~\uff09\n\n5. \u5907\u4efd\u4e0e\u6062\u590d\n\n\u8fd9\u4e00\u70b9\u5c31\u76f4\u63a5\u4f7f\u7528\u4e09\u7ef4\u6570\u7ec4\u3002\n```cpp\nvoid copy(int t)\n{\n\tfor (int i=0;i<5;i++)\n\t  for(int j=0;j<7;j++)\n\t    memory[t][i][j]=mp[i][j];\n}\nvoid back(int t)\n{\n\tfor (int i=0;i<5;i++)\n\t  for(int j=0;j<7;j++)\n\t    mp[i][j]=memory[t][i][j];\n}\n```\n6. \u68c0\u67e5\n\n\u5faa\u73af\u904d\u5386\uff0c\u9047\u5230\u6709\u672a\u6e05\u9664\u7684\u5c31\u8fd4\u56de\u3002\n```cpp\nbool check()\n{\n\tfor (int i=0;i<5;i++)\n\t  if(mp[i][0])\n\t    return 0;\n\treturn 1;\n}\n```\n\n7. dfs\n\n\u526a\u679d\u7684\u65b9\u6cd5\u4e0e\u5176\u5b83\u9898\u89e3\u5dee\u4e0d\u591a\u3002\n>1. \u7531\u4e8e\u6211\u4eec\u662f\u6309\u5b57\u5178\u5e8f\u8f93\u51fa\uff0c\u6240\u4ee5\u4ece\uff080,0\uff09\u5f00\u59cb\u5411\u4e0a\u5411\u53f3\u904d\u5386\u3002\n\n>2. \u6bcf\u4e2a\u65b9\u5757\u5411\u53f3\u8fb9\u8d70\u65f6\u53f3\u8fb9\u4e00\u5b9a\u8981\u6ca1\u6709\u65b9\u5757\uff0c\u5426\u5219\u4f1a\u4e0e\u524d\u9762\u7684\u65b9\u5757\u8def\u5f84\u91cd\u53e0\u3002\n\n```cpp\nvoid dfs(int step)//\u7b2c\u51e0\u6b65 \n{\n\tif(check() && step<=n+1)//\u6709\u7b26\u5408\u6761\u4ef6\u7684 \n\t{\n\t\tfor (int i=1;i<=step-1;i++)\n\t\t{\n\t\t  \tprintf(\"%d %d %d\\n\",s[i].x,s[i].y,s[i].move);\n\t\t}\n\t\texit(0);//\u76f4\u63a5\u9000\u51fa\u7a0b\u5e8f \n\t}\n\tif (step==n+1)//\u8d85\u51fa\u6700\u5927\u6b65\u6570 \n\t  return ;\n\tcopy(step);//\u5907\u4efd \n\tfor (int i=0;i<5;i++)\n\t  for (int j=0;j<7;j++)\n\t  {\n\t  \tif(mp[i][j])// \u65b9\u5757\u5b58\u5728 \n\t  \t{\n\t  \t\tif(i-1>=0 && mp[i-1][j]==0)//\u5411\u5de6 \n\t  \t    {\n\t  \t\t    s[step].x=i,s[step].y=j,s[step].move=-1;\n\t\t\t\tmo(i,j,-1);\n\t  \t\t    dfs(step+1);\n\t  \t\t    back(step);\n\t  \t\t    s[step].x=0,s[step].y=0,s[step].move=0;\n\t\t    }\n\t  \t    if (i+1<5 && mp[i+1][j]!=mp[i][j])//\u5411\u53f3 \n\t  \t    {\n\t  \t\t    s[step].x=i,s[step].y=j,s[step].move=1;\n\t\t\t\tmo(i,j,1);\n\t  \t\t    dfs(step+1);\n\t  \t\t    back(step);\n\t  \t\t    s[step].x=0,s[step].y=0,s[step].move=0;\n\t\t    }\n\t\t}\n\t  }\n}\n```\n\u90a3\u4e48\uff0c\u4e3b\u4f53\u90e8\u5206\u5c31\u5b8c\u6210\u4e86\u3002\n\n\n------------\n###  _\u5173\u4e8e\u8c03\u8bd5_\n\u5bf9\u4e8e\u4e00\u9053\u8fd9\u6837\u7684\u9898\uff0c\u4e00\u6b21\u8fc7\u662f\u6bd4\u8f83\u56f0\u96be\u7684\uff0c\u4f46\u662f\u6b65\u9aa4\u8fd9\u4e48\u591a\uff0c\u4e00\u6b65\u4e00\u6b65\u8c03\u8bd5\u662f\u6781\u5176\u56f0\u96be\u7684\uff08\u6837\u4f8b\u5df2\u7ecf\u591f\u6050\u6016\u4e86\uff09\u90a3\u4e48\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5199\u4e00\u4e2a\u8f93\u51fa\u51fd\u6570\uff0c\u5229\u7528\u6587\u4ef6\u8f93\u51fa\uff0c\u4e00\u6b65\u6b65\u8f93\u51fa\uff0c\u518d\u68c0\u67e5\u3002\n```cpp\nint out()\n{\n\tfor (int j=7;j>=0;j--)\n\t{\n\t\tfor (int i=0;i<5;i++)\n\t\t{\n\t\t\tif(mp[i][j]) printf(\"%d \",mp[i][j]);\n\t\t\telse printf(\"  \");\n\t\t} \n\t\tprintf(\"\\n\");\n\t}\n}\n```\n\u5f53\u7136\uff0c\u6d1b\u8c37\u4e0a\u4ea4\u65f6\u8bb0\u5f97\u53bb\u6389\u3002\n\n\n------------\n###  _\u603b\u7ed3_\n\u603b\u7684\u6765\u8bf4\uff0c\u53ea\u8981\u5c06\u8fd9\u9898\u5206\u5272\u6210\u4e00\u4e2a\u4e2a\u5c0f\u90e8\u5206\uff0c\u5c31\u53ef\u4ee5\u7cfb\u7edf\u5730\u89e3\u51b3\u95ee\u9898\u3002\n\n\u5f53\u7136\uff0c\u7801\u91cf\u9ad8\u7684\u540e\u679c\u5c31\u662f\u8c03\u8bd5\u96be\uff0c\u5efa\u8bae\u5927\u5bb6\u4e00\u4e2a\u51fd\u6570\u4e00\u4e2a\u51fd\u6570\u6392\u9664\u95ee\u9898\uff0c\u5c06\u5305\u56f4\u5708\u9010\u6e10\u7f29\u5c0f\uff0c\u5c31\u53ef\u4ee5\u89e3\u51b3\u95ee\u9898\u4e86\u3002\n\n\n------------\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\nusing namespace std;\nint mp[10][10];\nstruct mem{\n\tint x,y;\n}me[100];\nint memory[10][10][10];\nint n;\nstruct st{\n\tint x,y,move;\n}s[10];\nbool clear()\n{\n\tint t=0;//\u8ba1\u6570\u5668 \n\tfor (int i=0;i<5;i++)\n\t  for (int j=0;j<7;j++)\n\t  {\n\t  \tif(mp[i][j])\n\t  \t{\n\t  \t\tif(i-1>=0 && i+1<=4 && mp[i-1][j]==mp[i][j] && mp[i+1][j]==mp[i][j])//\u6a2a\u5411 \n\t  \t    {\n\t  \t\t    me[++t].x=i-1,me[t].y=j;\n\t  \t  \t    me[++t].x=i,me[t].y=j;\n\t  \t\t    me[++t].x=i+1,me[t].y=j;//\u50a8\u5b58 \n\t\t    }\n\t\t    if(j-1>=0 && j+1<=6 && mp[i][j-1]==mp[i][j] && mp[i][j+1]==mp[i][j])//\u7eb5\u5411 \n\t\t    {\n\t\t\t    me[++t].x=i,me[t].y=j-1;\n\t  \t\t    me[++t].x=i,me[t].y=j;\n\t  \t\t    me[++t].x=i,me[t].y=j+1;\n\t\t    }\n\t\t}\n\t  \t\n\t  }\n\tif(t)//\u6709\u9700\u8981\u6e05\u9664\u7684 \n\t  for (int i=1;i<=t;i++)\n\t    mp[me[i].x][me[i].y]=0;//\u6e05\u9664 \n\telse return 0;//\u672a\u6e05\u9664 \n\treturn 1;//\u6e05\u9664\u4e86 \n}\nvoid down()\n{\n\tint m;\n\tfor (int i=0;i<5;i++)//\u81ea\u4e0b\u800c\u4e0a \n\t{\n\t\tfor (int j=1;j<7;j++)\n\t\t{\n\t\t\tif(mp[i][j])//\u8fd9\u4e2a\u65b9\u5757\u6709\u989c\u8272 \n\t\t\t{\n\t\t\t\tm=0;\n\t\t\t\twhile(j-m-1>=0 && !mp[i][j-m-1]) m++;//\u5bfb\u627e\u6700\u4e0b\u9762\u7684\u7a7a\u65b9\u5757 \n\t\t\t\tif(m) mp[i][j-m]=mp[i][j],mp[i][j]=0;//\u4e0b\u79fb \n\t\t\t}\n\t\t}\n\t} \n}\nvoid mo(int x,int y,int d)\n{\n\tint t=mp[x][y];\n\tmp[x][y]=mp[x+d][y];\n\tmp[x+d][y]=t;//\u4ea4\u6362a,b \n\tdown();//\u6389\u843d \n\twhile(clear()) down();//\u82e5\u6709\u6e05\u9664\uff0c\u5219\u6389\u843d \n}\nbool check()\n{\n\tfor (int i=0;i<5;i++)\n\t  if(mp[i][0])\n\t    return 0;\n\treturn 1;\n}\nvoid copy(int t)\n{\n\tfor (int i=0;i<5;i++)\n\t  for(int j=0;j<7;j++)\n\t    memory[t][i][j]=mp[i][j];\n}\nvoid back(int t)\n{\n\tfor (int i=0;i<5;i++)\n\t  for(int j=0;j<7;j++)\n\t    mp[i][j]=memory[t][i][j];\n}\nvoid dfs(int step)//\u7b2c\u51e0\u6b65 \n{\n\tif(check() && step<=n+1)//\u6709\u7b26\u5408\u6761\u4ef6\u7684 \n\t{\n\t\tfor (int i=1;i<=step-1;i++)\n\t\t{\n\t\t  \tprintf(\"%d %d %d\\n\",s[i].x,s[i].y,s[i].move);\n\t\t}\n\t\texit(0);//\u76f4\u63a5\u9000\u51fa\u7a0b\u5e8f \n\t}\n\tif (step==n+1)//\u8d85\u51fa\u6700\u5927\u6b65\u6570 \n\t  return ;\n\tcopy(step);//\u5907\u4efd \n\tfor (int i=0;i<5;i++)\n\t  for (int j=0;j<7;j++)\n\t  {\n\t  \tif(mp[i][j])// \u65b9\u5757\u5b58\u5728 \n\t  \t{\n\t  \t\tif(i-1>=0 && mp[i-1][j]==0)//\u5411\u5de6 \n\t  \t    {\n\t  \t\t    s[step].x=i,s[step].y=j,s[step].move=-1;\n\t\t\t\tmo(i,j,-1);\n\t  \t\t    dfs(step+1);\n\t  \t\t    back(step);\n\t  \t\t    s[step].x=0,s[step].y=0,s[step].move=0;\n\t\t    }\n\t  \t    if (i+1<5 && mp[i+1][j]!=mp[i][j])//\u5411\u53f3 \n\t  \t    {\n\t  \t\t    s[step].x=i,s[step].y=j,s[step].move=1;\n\t\t\t\tmo(i,j,1);\n\t  \t\t    dfs(step+1);\n\t  \t\t    back(step);\n\t  \t\t    s[step].x=0,s[step].y=0,s[step].move=0;\n\t\t    }\n\t\t}\n\t  }\n}\nvoid in()\n{\n\tint a;\n\tfor (int i=0;i<5;i++)//\u5148\u662f\u6a2a\u5750\u6807 \n\t  for (int j=0;;j++)//\u540e\u662f\u7eb5\u5750\u6807\uff08\u6ce8\u610f\u8fd9\u91cc\u6709\u4e2a\u5751\uff09 \n\t  {\n\t  \tscanf(\"%d\",&a);\n\t  \tif(a) mp[i][j]=a;\n\t  \telse break;\n\t  }\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tin();\n\tdfs(1);\n\tprintf(\"-1\");\n\treturn 0;\n}\n```\n\n\n------------\n# $\\mathit{U\\!pdate\\;2\\!0\\!1\\!9.9.1\\!2}$\n\n\u519b\u8bad\u65f6\u770b\u5230\u8ff7\u5f69\u80cc\u5fc3\uff0c\u7a81\u7136\u60f3\u5230\u4e00\u79cd\u66f4\u5feb\u7684\u6389\u843d\u65b9\u5f0f\u3002\uff08\u5fc3\u8def\u5386\u7a0b\uff1a\u8ff7\u5f69->\u4e00\u4e2a\u4e2a\u65b9\u5757->\u5f00\u5fc3\u6d88\u6d88\u4e50->MAYAN\u6e38\u620f->\u66f4\u597d\u7684\u6389\u843d\u65b9\u5f0f\uff09\uff08~~\u6211\u4e5f\u4e0d\u77e5\u9053\u600e\u4e48\u60f3\u5230\u7684~~\uff09\n\n\u4ece\u6bcf\u4e00\u5217\u7684\u6700\u4e0b\u65b9\u5f00\u59cb\u641c\u7d22\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u5b9e\u4f53\u65b9\u5757\u662f\u8fd9\u4e00\u5217\u7b2c\u51e0\u4e2a\uff0c\u5c06\u5b83\u79fb\u5230\u8fd9\u4e2a\u4f4d\u7f6e\u5c31\u53ef\u4ee5\u4e86\u3002\n\n```cpp\nvoid drop()\n{\n\tfor(int i=0;i<5;i++)\n\t{\n\t\tint c=0,m;\n\t\tfor(int j=0;j<7;j++)\n\t\t{\n\t\t\tif(mp[i][j])\n\t\t\t  m=mp[i][j],mp[i][j]=0,mp[i][c]=m,c++;\n\t\t}\n\t}\n}\n\n```\n\u6ce8\u610f\u8981\u5c06\u65b9\u5757\u5148\u6e05\u7a7a\u5e76\u628a\u989c\u8272\uff08\u6570\u5b57\uff09\u5bc4\u5b58\u5230\u4e00\u4e2a\u53d8\u91cf\u91cc\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u65b9\u6cd5\u5e76\u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u6ca1\u6709\u6389\u843d\uff0c\u800c\u662f\u5bfb\u627e\u6bcf\u4e2a\u65b9\u5757\u5e94\u8be5\u5728\u7684\u4f4d\u7f6e\uff0c\u5982\u679c\u540e\u6e05\u7406\u7684\u8bdd\uff0c\u5c31\u4f1a\u51fa\u73b0\u6ca1\u6709\u79fb\u52a8\u7684\u65b9\u5757\u6d88\u5931\u7684\u60c5\u51b5\u3002\n\n\u8fd9\u5e94\u8be5\u6bd4\u5faa\u73af\u627e\u6700\u4e0b\u7a7a\u65b9\u5757\u5feb\u70b9\u5427\uff08~~\u600e\u4e48\u611f\u89c9\u7528\u65f6\u8fd8\u53d8\u591a\u4e86\u5462~~\uff09",
        "postTime": 1563530089,
        "uid": 194759,
        "name": "BT\u72f8\u2014\u2014Frozen",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1312 \u3010Mayan\u6e38\u620f\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u662f\u4e00\u9053\u66b4\u641c+\u526a\u679d\u7684\u9898\u76ee\u3002\u6211\u4eec\u53ea\u8981\u6309\u7167\u9898\u76ee\u7684\u8981\u6c42\u9010\u6b65\u53bb\u505a\u5c31\u884c\u4e86\u3002\n\n\u7531\u4e8e\u9898\u76ee\u8bf4\u754c\u9762\u7684\u5de6\u4e0b\u89d2\u4e3a\u5750\u6807(0,0)\uff0c\u6211\u4eec\u5c31\u628a\u6574\u4e2a\u683c\u5b50\u987a\u65f6\u9488\u65cb\u8f6c90\u5ea6\uff0c\u4f7f\u5176\u4e0e\u4e8c\u4f4d\u6570\u7ec4\u7684\u5b58\u50a8\u89c4\u5f8b\u76f8\u7b26\u3002\u8fd9\u6837\u65b9\u5757\u4e0b\u5760\u5c31\u53d8\u6210\u4e86\u7eb5\u5750\u6807\u7684\u6539\u53d8\uff0c\u4ea4\u6362\u5c31\u53d8\u6210\u4e86\u6a2a\u5750\u6807\u7684\u6539\u53d8\u3002\u7136\u540e\u5f00\u59cb\u641c\u7d22\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u65b9\u5757\uff0c\u679a\u4e3e\u5176\u5411\u5de6\u6216\u5411\u53f3\u79fb\u52a8\uff0c\u5982\u679c\u5176\u79fb\u52a8\u65b9\u5411\u4e0a\u6709\u65b9\u5757\u5c31\u4ea4\u6362\uff0c\u5426\u5219\u5c31\u8fdb\u884c\u4e0b\u5760\u64cd\u4f5c\uff08\u4ea4\u6362\u7684\u4e24\u5217\u90fd\u8981\u4e0b\u5760\uff09\u3002\u7136\u540e\u6309\u7167\u9898\u76ee\u8981\u6c42\u6a21\u62df\u6d88\u53bb\u3001\u4e0b\u5760\u3001\u6d88\u53bb......\u7684\u8fc7\u7a0b\u3002\u9898\u76ee\u8981\u6c42\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u90a3\u4e48\u6211\u4eec\u4f18\u5148\u679a\u4e3e\u5411\u53f3\u65b9\u5411\u4ea4\u6362\uff0c\u8fd9\u6837\u7b2c\u4e00\u6b21\u5b8c\u6210\u65f6\u7684\u65b9\u6848\u4e00\u5b9a\u662f\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u3002\n\n\u8fd9\u9898\u7684\u526a\u679d\u5176\u5b9e\u4e5f\u8fd8\u6bd4\u8f83\u597d\u60f3\u3002\u7528\u4e86\u8d2a\u5fc3\u7684\u601d\u60f3\uff0c\u5982\u679c\u4e00\u4e2a\u65b9\u5757\u79fb\u52a8\u540e\uff0c\u4e0d\u4f1a\u6709\u4efb\u4f55\u4e00\u4e2a\u65b9\u5757\uff08\u5305\u62ec\u81ea\u8eab\uff09\u4e0e\u989c\u8272\u76f8\u540c\u7684\u65b9\u5757\u76f8\u8fde\u63a5\uff0c\u90a3\u4e48\u8fd9\u6b21\u79fb\u52a8\u5c31\u662f\u65e0\u610f\u4e49\u7684\uff0c\u53ef\u4ee5\u820d\u53bb\u3002\u81f3\u6b64\uff0c\u8fd9\u9053\u9898\u76ee\u5c31\u89e3\u51b3\u4e86\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\nusing namespace std;\nint a[10][10],i,n,px[10],py[10],pz[10];\nbool e;\nbool judge()\n{\n\tfor(int i=0;i<5;i++){\n\t\tfor(int j=0;j<7;j++){\n\t\t\tif(a[i][j]!=0) return false;\n\t\t}\n\t}\n\treturn true;\n}\nvoid doit()\n{\n\twhile(1){\n\t\tbool e=false,vis[10][10]={0};\n\t\tfor(int i=0;i<5;i++){\n\t\t\tfor(int j=0;j<7;j++){\n\t\t\t\tbool flag=false;\n\t\t\t\tif(a[i][j]!=0){\n\t\t\t\t\tif(i+1<5&&i-1>=0&&a[i-1][j]==a[i][j]&&a[i][j]==a[i+1][j]){\n\t\t\t\t\t\tflag=true;\n\t\t\t\t\t\tvis[i-1][j]=vis[i+1][j]=1;\n\t\t\t\t\t}\n\t\t\t\t\tif(j+1<7&&j-1>=0&&a[i][j-1]==a[i][j]&&a[i][j]==a[i][j+1]){\n\t\t\t\t\t\tflag=true;\n\t\t\t\t\t\tvis[i][j-1]=vis[i][j+1]=1;\n\t\t\t\t\t}\n\t\t\t\t\tif(flag){\n\t\t\t\t\t\tvis[i][j]=1;\n\t\t\t\t\t\te=true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(!e) break;\n\t\tfor(int i=0;i<5;i++){\n\t\t\tfor(int j=0;j<7;j++){\n\t\t\t\tif(vis[i][j]==1) a[i][j]=0;\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<5;i++){\n\t\t\tfor(int j=1;j<7;j++){\n\t\t\t\tint x=i,y=j;\n\t\t\t\tif(a[x][y]==0) continue;\n\t\t\t\twhile(y>0&&a[x][y-1]==0){\n\t\t\t\t\tswap(a[x][y-1],a[x][y]);\n\t\t\t\t\ty--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nvoid change(int b[10][10])\n{\n\tfor(int i=0;i<5;i++){\n\t\tfor(int j=0;j<7;j++) a[i][j]=b[i][j];\n\t}\n}\nbool cut(int x,int y,int z)\n{\n\tint p=0;\n\twhile(a[x+z][p]!=0) p++;\n\tp--;\n\tif(a[x+z][y]==0){\n\t\tif(a[x][y+1]==a[x][y-1]) return 0;\n\t\tif(a[x+z-1][p+1]==a[x][y]||a[x+z+1][p+1]==a[x][y]) return 0;\n\t\tif(a[x+z][p]!=a[x][y]) return 1;\n\t}\n\telse if(a[x][y]==a[x+z][y+1]||a[x][y]==a[x+z][y-1]||a[x+z][y]==a[x][y+1]||a[x+z][y]==a[x][y-1]) return 0;\n\telse if(a[x+2*z][y]==a[x][y]||a[x-z][y]==a[x+z][y]) return 0;\n\treturn 1;\n}\nvoid dfs(int num)\n{\n\tif(e) return;\n\tif(num==n+1){\n\t\tif(judge()) e=true;\n\t\treturn;\n\t}\n\tint b[10][10]={0};\n\tfor(int i=0;i<5;i++){\n\t\tfor(int j=0;j<7;j++) b[i][j]=a[i][j];\n\t}\n\tfor(int i=0;i<5;i++){\n\t\tfor(int j=0;j<7;j++){\n\t\t\tif(a[i][j]!=0){\n\t\t\t\tfor(int k=1;k>=-1;k-=2){\n\t\t\t\t\tif(i+k<0||i+k>4||cut(i,j,k)) continue;\n\t\t\t\t\tint x=i,y=j;\n\t\t\t\t\tswap(a[x+k][y],a[x][y]);\n\t\t\t\t\tif(a[x][y]==0){\n\t\t\t\t\t\tint l=y+1;\n\t\t\t\t\t\twhile(a[x][l]!=0){\n\t\t\t\t\t\t\tswap(a[x][l-1],a[x][l]);\n\t\t\t\t\t\t\tl++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tx+=k;\n\t\t\t\t\twhile(y>0&&a[x][y-1]==0){\n\t\t\t\t\t\tswap(a[x][y-1],a[x][y]);\n\t\t\t\t\t\ty--;\n\t\t\t\t\t}\n\t\t\t\t\tdoit();\n\t\t\t\t\tpx[num]=i;\n\t\t\t\t\tpy[num]=j;\n\t\t\t\t\tpz[num]=k;\n\t\t\t\t\tdfs(num+1);\n\t\t\t\t\tif(e) return;\n\t\t\t\t\tchange(b);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tcin>>n;\n\tfor(i=0;i<5;i++){\n\t\tint x=1,cnt=0;\n\t\tcin>>x;\n\t\twhile(x!=0){\n\t\t\ta[i][cnt++]=x;\n\t\t\tcin>>x;\n\t\t}\n\t}\n\tdfs(1);\n\tif(e){\n\t\tfor(i=1;i<=n;i++) cout<<px[i]<<' '<<py[i]<<' '<<pz[i]<<endl;\n\t}\n\telse cout<<\"-1\"<<endl;\n\treturn 0;\n}\n```\n\n\u53ef\u80fd\u526a\u679d\u90e8\u5206\u6709\u70b9\u4e71......",
        "postTime": 1553731438,
        "uid": 86245,
        "name": "CJlzf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1312 \u3010Mayan\u6e38\u620f\u3011"
    },
    {
        "content": "## \u840c\u65b0~~\u5e74~~\u65e5\u5e38\u6253\u5361\n### \u601d\u8def~~\u5f88\u7b80\u5355~~\uff0c\u5c31\u6a21\u62df\n##### ~~\u9898\u76ee\u8981\u4f60\u5e72\u4ec0\u4e48\u90a3\u5c31\u5e72\u4ec0\u4e48(\u5e9f\u8bdd)~~\n###### \u5927\u90e8\u5206\u7684\u9898\u89e3\u5df2\u7ecf\u8bb2\u4e86\u600e\u4e48\u6a21\u62df\u4e86\n###### \u4e0d\u8fc7\u6211\u8fd8\u662f\u6211\u8fd8\u662f\u8bb2\u4e00\u904d\u5427\n- \u6a21\u62df\u601d\u8def   \n- \u679a\u4e3e\u6240\u6709\u53ef\u80fd\u7684\u79fb\u52a8\uff0c\u7528\u641c\u7d22\u7684\u65b9\u6cd5\u5373\u53ef\uff0c\u5efa\u8bae\u4f7f\u7528dfs   \n- \u91cd\u8981\u7684\u90e8\u5206\u5728\u65f6\u95f4\u4f18\u5316\u4e0a(\u867d\u7136\u6211\u4e0d\u77e5\u9053\u4e0d\u4f18\u5316\u80fd\u4e0d\u80fd\u8fc7)\n\n\u5173\u4e8e\u526a\u679d   \n\u9996\u5148\u641c\u7d22\u79fb\u52a8\u7684\u65f6\u5019\uff0c\u5e76\u4e0d\u7528\u5168\u90e8\u5f80\u4e0b\u641c\uff0c   \n\u5982\u679c\u5de6\u8fb9\u6709\u5757,\u4e0d\u5411\u5de6\u79fb\u52a8(\u8fd9\u4e2a\u5404\u4f4d\u5927\u4f6c\u90fd\u8bb2\u4e86)   \n\u56e0\u4e3a\u5de6\u8fb9\u7684\u5757\u4f1a\u5411\u53f3\u79fb\u52a8\u4e14\u5b57\u5178\u5e8f\u66f4\u5c0f   \n\u6211\u60f3\u8bf4\u7684\u662f\uff0c\u53e6\u4e00\u4e2a\u526a\u679d!   \n\u73b0\u5728\u5982\u679c\u6211\u8bf4\u4e0d\u53ef\u4ee5\u526a\u4ea4\u6362\u76f8\u540c\u5404\u4f4d\u53ef\u4ee5\u7406\u89e3\u5427   \n\u4f46\u662f\u4ea4\u6362\u76f8\u540c\u989c\u8272\u5176\u5b9e\u662f\u53ef\u4ee5\u4f18\u5316\u7684   \n\u53ef\u4ee5\u53d1\u73b0\u65e0\u8bba\u4ea4\u6362\u54ea\u4e2a\u5730\u65b9\u7684\u76f8\u540c\u989c\u8272\u7ed3\u679c\u76f8\u540c   \n\u6240\u4ee5\u53ea\u8981\u4fdd\u7559\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u4ea4\u6362\u76f8\u540c\u989c\u8272\u5373\u53ef   \n\u5c31\u662f\u6bcf\u5c42dfs\u641c\u5230\u7b2c\u4e00\u6b21\u76f8\u540c\u7684\u5c31\u5141\u8bb8,\u518d\u641c\u5230\u5c31\u526a\u6389   \n\u8fd9\u6837\u65e2\u53ef\u4ee5\u4f18\u5316\u53c8\u4e0d\u4f1a\u88ab\u6545\u610f\u6d6a\u8d39\u6b65\u6570\u7684\u6570\u636e\u5361   \n#### \u4e0a\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint read()//\u5feb\u901f\u8bfb\u5165\n{\n    int sum=0,flag=1;\n    char ch=getchar();\n    while(ch>'9'||ch<'0'){if(ch=='-')ch=getchar();ch=getchar();}\n    while(ch<='9'&&ch>='0'){sum=sum*10+ch-'0';ch=getchar();}\n    return sum*flag;\n}\nstruct node{int x,y,z;}c[7];//\u50a8\u5b58\u7b54\u6848\nint  n,a[7][9],    b[7][7][9];\n//   \u8bfb\u5165\u6570\u636e   \u5b58\u653edfs\u524d\u7684\u5907\u4efd\u6570\u636e\nqueue<node>q;\n//\u6d88\u9664\u5757\u7684\u961f\u5217(\u4e5f\u53ef\u4ee5\u7528bool\u6570\u7ec4,\u4f46\u6211\u89c9\u5f97\u8fd9\u6837\u6d88\u9664\u65f6\u5feb\u5c06\u8fd1\u4e00\u534a\u7684\u65f6\u95f4)\nvoid fz(int k)//\u4ecea\u5907\u4efd\u5185\u5bb9\u5230b\n{\n    for(int i=1;i<=5;i++)\n    for(int j=1;j<=7;j++)\n    b[k][i][j]=a[i][j];\n}\nvoid zf(int k)//\u4eceb\u8fd8\u539f\u5185\u5bb9\u5230a\n{\n    for(int i=1;i<=5;i++)\n    for(int j=1;j<=7;j++)\n    a[i][j]=b[k][i][j];\n}\nbool jc()//\u68c0\u6d4b\u662f\u4e0d\u662f\u6ca1\u6709\u5757\u4e86\n{\n    for(int i=1;i<=5;i++)//\u53ea\u8981\u68c0\u6d4b\u6700\u4e0b\u6392\u5373\u53ef\n    if(a[i][1])return 0;\n    return 1;\n}\nbool xc()//\u6d88\u9664\u5224\u5b9a\n{\n    for(int i=1;i<=5;i++)for(int j=1;j<=7;j++)\n    {//\u5224\u5b9a\u53ef\u6d88\u9664,\u4e00\u5b9a\u4e0d\u8981\u76f4\u63a5\u8d4b\u503c0\n        if(a[i][j]&&a[i-1][j]==a[i][j]&&a[i+1][j]==a[i][j])q.push({i,j,0});\n        if(a[i][j]&&a[i][j-1]==a[i][j]&&a[i][j+1]==a[i][j])q.push({i,j,1});\n    }\n    if(q.empty())return 0;//\u6ca1\u6709\u52a8\n    while(!q.empty())//\u5904\u7406\u5220\u9664\u7684\u5757\n    {\n        node k=q.front();q.pop();\n        if(k.z)a[k.x][k.y]=a[k.x][k.y-1]=a[k.x][k.y+1]=0;\n        else a[k.x][k.y]=a[k.x-1][k.y]=a[k.x+1][k.y]=0;\n    }\n    return 1;//\u52a8\u4e86\n}\nvoid dl()//\u6389\u843d\u5224\u5b9a\n{\n    for(int i=1;i<=5;i++)\n    for(int j=2;j<=7;j++)\n    if(a[i][j]&&!a[i][j-1])//\u5982\u679c\u4e00\u4e2a\u5757\u8e29\u7a7a\n    for(int k=j-1;k>=0;k--)//\u4e00\u76f4\u5f80\u4e0b\u627e\u5230\u4e00\u4e2a\u975e\u7a7a\u5757\n    if(a[i][k])//\u627e\u5230\u4e86\n    {\n        swap(a[i][j],a[i][k+1]);//\u4ea4\u6362\n        break;\n    }\n}\nvoid yd(int x,int y,int k)//\u79fb\u52a8\u51fd\u6570\n{\n    swap(a[x][y],a[x+k][y]);\n    if(!a[x][y])dl();//\u8fd9\u4e2a\u5e94\u8be5\u5f88\u597d\u7406\u89e3,\u53ea\u6709\u548c\u7a7a\u6c14\u4ea4\u6362\u624d\u4f1a\u6389\u843d\n    while(xc())dl();//\u9700\u8981\u5faa\u73af\u5224\u5b9a!!!\n}\nvoid dfs(int k)//\u641c\u7d22\n{\n    if(!k)//\u79fb\u52a8\u5b8c\u68c0\u6d4b\n    {\n        if(jc())//\u68c0\u6d4b\n        {//\u8f93\u51fa\n            for(int i=n;i>0;i--)printf(\"%d %d %d\\n\",c[i].x-1,c[i].y-1,c[i].z);\n            exit(0);//\u76f4\u63a5\u9000\u51fa\u7a0b\u5e8f\n        }\n        return;//\u5426\u5219\u8fd4\u56de\u7ee7\u7eed\u641c\n    }\n    fz(k);//\u5148\u5907\u4efda\n    bool flag=0;//\u6807\u8bb0,\u7528\u6765\u505a\u76f8\u540c\u8272\u4f18\u5316\n    for(int i=1;i<=5;i++)\n    for(int j=1;j<=7;j++)\n    if(a[i][j])//\u679a\u4e3e\u6bcf\u4e2a\u70b9,\u5982\u679c\u6709\u8272\u5c31\u7ee7\u7eed\n    {\n        if(i>1&&!a[i-1][j])//\u5982\u679c\u4e0d\u5728\u6700\u5de6\u8fb9\u4e14\u5de6\u8fb9\u662f\u7a7a\u7684\u5c31\u5de6\u79fb\n        {\n            yd(i,j,-1);//\u79fb\u52a8\n            c[k]={i,j,-1};//\u8bb0\u5f55\u7b54\u6848\n            dfs(k-1);//\u7ee7\u7eed\u641c\n            zf(k);//\u6062\u590da\n        }\n        if(i<5)//\u5982\u679c\u4e0d\u5728\u6700\u53f3\u8fb9\u90fd\u53f3\u79fb\n        {\n            if(a[i][j]==a[i+1][j]&&flag)continue;//\u5df2\u7ecf\u6709\u4e00\u4e2a\u4e86,\u5176\u4f59\u526a\u6389\n            if(a[i][j]==a[i+1][j])flag=1;//\u7b2c\u4e00\u4e2a\u653e\u8d70,\u7136\u540e\u6807\u8bb0\n            yd(i,j,1);//\u79fb\u52a8\n            c[k]={i,j,1};//\u8bb0\u5f55\u7b54\u6848\n            dfs(k-1);//\u7ee7\u7eed\u641c\n            zf(k);//\u6062\u590da\n        }\n    }\n}\nint main()//\u4e3b\u51fd\u6570\n{\n    n=read();//\u8bfbn\n    for(int i=1;i<=5;i++)a[i][0]=2147483647;//\u8fd9\u4e2a\u5728\u6389\u843d\u5224\u5b9a\u4e2d\u6709\u7528(10\u4ee5\u4e0a\u7684\u6570\u90fd\u53ef\u4ee5)\n    for(int i=1;i<=5;i++)\n    for(int j=1;j<=8;j++)\n    {//\u8bfb\u5165\n        a[i][j]=read();\n        if(!a[i][j])break;\n    }\n    dfs(n);//\u641c\u7d22,n\u662f\u5c42\u6570(\u53ef\u80fd\u5927\u90e8\u5206\u4eba\u4f1a\u51991)\n    cout<<-1;//\u65e0\u89e3\u8f93\u51fa-1,\u56e0\u4e3a\u5982\u679c\u6709\u89e3\u5728dfs\u91cc\u5c31\u9000\u51fa\u4e86\n    return 0;\n}\n```\n### \u6b22\u8fce ~~\u6311\u523a\u4e0e\u627e\u832c~~ \u6307\u51fa\u9519\u8bef",
        "postTime": 1578494620,
        "uid": 120981,
        "name": "\u574f\u8036",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1312 \u3010Mayan\u6e38\u620f\u3011"
    },
    {
        "content": "\u849f\u84bb\u82b1\u4e86\u51e0\u4e2a\u5c0f\u65f6\u624d\u8c03\u51fa\u6765\uff0c\u5176\u5b9e\u53ea\u8981\u4e00\u9053\u66b4\u529b\u641c\u7d22\uff0c\u57fa\u672c\u4e0d\u7528\u526a\u679d\u3002\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint get[10][10];\\\\\u521d\u59cb\u7684\u68cb\u76d8\uff1b\nint m;\nstruct node\n{\n\tint x,y,z;\\\\\u7528\u7ed3\u6784\u4f53\u8bb0\u5f55\u7b54\u6848\uff1b\n};\nnode ans[10];\nint tot[10][10];\nint finish;\\\\\u8fdb\u884c\u5224\u65ad\uff0c\u662f\u5426\u627e\u5230\u89e3\uff0c\u907f\u514d\u8d85\u65f6\uff1b\nvoid print()\\\\\u8f93\u51fa\u51fd\u6570\uff1b\n{\n\tfor(int i=1;i<=m;i++)\n\t\tprintf(\"%d %d %d\\n\",ans[i].x-1,ans[i].y-1,ans[i].z);\n}\nvoid dfs(int p[10][10],int num)\n{\n\tif(finish==1)return;\n\tif(num>m)\n\t{\n\t\tint f=0;\n\t\tfor(int i=1;i<=5;i++)\n\t\t\tfor(int j=1;j<=7;j++)\n\t\t\t\tif(p[i][j])\\\\\u5f53\u5230\u8fbe\u6b21\u6570\u65f6\u904d\u5386\u68cb\u76d8\u662f\u5426\u4e3a\u7a7a\uff1b\n\t\t\t\t\tf=1;\n\t\tif(f==0)\\\\\u4e3a\u7a7a\u8f93\u51fa\uff1b\n\t\t{\n\t\t\tprint();\n\t\t\tfinish=1;\n\t\t}\n\t\treturn;\t\n\t}\n\tfor(int k=1;k<=4;k++)\\\\\u53ef\u4ee5\u5427\u7a7a\u7684\u70b9\u5f53\u505a0\uff0c\u6bcf\u4e2a\u70b9\u53ea\u5411\u53f3\u79fb\uff1b\n\t{\n\t\tfor(int l=1;l<=7;l++)\n\t\t{\n\t\t\tif(p[k][l]!=p[k+1][l])\\\\\u4e00\u70b9\u70b9\u526a\u679d\uff1b\n\t\t\t{\n\t\t\t\tint tmp[10][10];\n\t\t\t\tfor(int i=1;i<=5;i++)\n\t\t\t\t\tfor(int j=1;j<=7;j++)\n\t\t\t\t\t\ttmp[i][j]=p[i][j];\n\t\t\t\tswap(tmp[k][l],tmp[k+1][l]);\\\\\u79fb\u52a8\uff1b\n\t\t\t\tint flag=1;\n\t\t\t\t\n\t\t\t\twhile(flag==1)\\\\\u5f53\u80fd\u6d88\u9664\u65f6\u4e00\u76f4\u6d88\u9664\uff1b\n\t\t\t\t{\n\t\t\t\t\tflag=0;\n\t\t\t\t\tint news[10][10];\n\t\t\t\t\tint h[6];\n\t\t\t\t\tmemset(news,0,sizeof(news));\n\t\t\t\t\tmemset(h,0,sizeof(h));\n\t\t\t\t\tfor(int i=1;i<=5;i++)\\\\\u4e0b\u6c89\uff1b\n\t\t\t\t\t\tfor(int j=1;j<=7;j++)\n\t\t\t\t\t\t\tif(tmp[i][j]!=0)\n\t\t\t\t\t\t\t\tnews[i][++h[i]]=tmp[i][j];\n\t\t\t\t\tint tot[10][10];\n\t\t\t\t\tmemset(tot,0,sizeof(tot));\n\t\t\t\t\tfor(int i=1;i<=5;i++)\\\\\u5224\u65ad\u53ef\u4e0d\u53ef\u4ee5\u5220\u9664\uff0c\u5220\u9664\u51e0\u4e2a\uff1b\n\t\t\t\t\t{\n\t\t\t\t\t\tfor(int j=1;j<=7;j++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(news[i][j]==0)continue;\n\t\t\t\t\t\t\tint sum1=1,sum2=1;\n\t\t\t\t\t\t\tfor(int o=1;o<=5;o++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif(i+o<=5&&news[i+o][j]==news[i][j])\n\t\t\t\t\t\t\t\t\tsum1++;\n\t\t\t\t\t\t\t\telse break;\n\t\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t\tif(sum1>=3)\n\t\t\t\t\t\t\t\tfor(int o=i;o<=i+sum1-1;o++)\n\t\t\t\t\t\t\t\t\ttot[o][j]=-1;\n\t\t\t\t\t\t\tfor(int o=1;o<=7;o++)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif(j+o<=7&&news[i][j+o]==news[i][j])\n\t\t\t\t\t\t\t\t\tsum2++;\n\t\t\t\t\t\t\t\telse break;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(sum2>=3)\n\t\t\t\t\t\t\tfor(int o=j;o<=j+sum2-1;o++)\n\t\t\t\t\t\t\t\ttot[i][o]=-1;\n\t\t\t\t\t\t\tif(sum2>=3||sum1>=3)flag=1;\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\t\n\t\t\t\t\tfor(int i=1;i<=5;i++)\n\t\t\t\t\t\tfor(int j=1;j<=7;j++)\n\t\t\t\t\t\t\tif(tot[i][j]==-1)\n\t\t\t\t\t\t\t\tnews[i][j]=0;\n\t\t\t\t\tfor(int i=1;i<=5;i++)\n\t\t\t\t\t\tfor(int j=1;j<=7;j++)\n\t\t\t\t\t\t\ttmp[i][j]=news[i][j];\n\t\t\t\t}\n\t\t\t\tif(p[k][l]!=0)\\\\\u56e0\u4e3a\u521a\u521a\u5047\u8bbe0\u53ef\u4ee5\u79fb\u52a8\uff0c\u4f46\u5b9e\u9645\u96f6\u4e0d\u80fd\u79fb\u52a8\uff0c\u7279\u5224\u4e00\u4e0b\u79fb\u52a8\u96f6\u7684\u60c5\u51b5\uff1b\n\t\t\t\t{\n\t\t\t\t\tans[num].x=k;\n\t\t\t\t\tans[num].y=l;\n\t\t\t\t\tans[num].z=1;\n\t\t\t\t}\n\t\t\t\telse \n\t\t\t\t{\n\t\t\t\t\tans[num].x=k+1;\n\t\t\t\t\tans[num].y=l;\n\t\t\t\t\tans[num].z=-1;\n\t\t\t\t}\n\t\t\t\tdfs(tmp,num+1);\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=5;i++)\n\t{\n\t\tint x;\n\t\tfor(int j=1;j<=8;j++)\n\t\t{\n\t\t\tscanf(\"%d\",&x);\n\t\t\tif(x==0)break;\n\t\t\tget[i][j]=x;\n\t\t}\n\t}\n\tdfs(get,1);\n\tif(finish==0)\\\\\u672a\u627e\u5230\u8f93\u51fa-1\uff1b\n\t\tcout<<-1<<endl;\n\treturn 0;\\\\over;\n}\n```\n\u7b2c\u4e8c\u7bc7\u9898\u89e3\u671b\u901a\u8fc7\uff0c\u8c22\u8c22\u5927\u4f6c\uff1b",
        "postTime": 1567866088,
        "uid": 130203,
        "name": "hehoutian_123",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1312 \u3010Mayan\u6e38\u620f\u3011"
    },
    {
        "content": "\u611f\u8c22@Most_Hansome\u795e\u4f6c\u63d0\u4f9b\u7684\u601d\u8def\uff01\uff01\uff01\n\n\u5f88\u660e\u663e\u662f\u641c\u7d22\u4f46\u91cd\u70b9\u5728\u4e8e\u600e\u4e48\u53bb\u641c\u3002\u4e00\u5f00\u59cb\u6211\u4f7f\u7528\u7684\u662f\u5e7f\u641c\u56e0\u4e3a\u89c9\u5f97\u641c\u7d22\u8fd8\u8981\u5728\u8f6c\u79fb\u7684\u65f6\u5019\u5c06\u76ee\u524d\u7684\u72b6\u6001\u5148\u5b58\u4e0b\u6765\u592a\u9ebb\u70e6\u4e8e\u662f\u6253\u4e863000\u5de6\u53f3\u5b57\u7684\u5e7f\u641c\u4f46\u662f\u5f88\u660e\u663e\u4f1aMLE\uff08\u6211\u5e76\u4e0d\u60f3\u6253\u6ee1\u5206\uff09\u4e8e\u662f\u5f97\u4e8620\u5206\u2026\u2026\n\n\u8003\u540e\u89c9\u5f97\u592a\u4e71\u4e8e\u662f\u91cd\u5199\u4e86\u4e00\u904d\u3002\u6df1\u641c\u7684\u4ee3\u7801\u5f02\u5e38\u77ed\u53ea\u67091600\u5b57\u5c31A\u4e86\u3002although\u968f\u4fbf\u9020\u4e00\u7ec4\u6570\u636e\u4e5f\u80fd\u5361\u6389\u4f46\u6211\u4ecd\u8ba4\u4e3a\u662f\u4e00\u79cd\u975e\u5e38\u597d\u7684\u65b9\u6cd5\uff01\uff01\uff01\n\n\u539f\u6765\u7684\u5e7f\u641c\uff08\u65f6\u95f4\u4e0d\u591f\u4e86\u8fde\u6837\u4f8b\u90fd\u8fc7\u4e0d\u4e86\u2026\u2026\uff09\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nbool f1;\nint n,a1,head,tail,f[6][8],A[6][8],u[5]={0,0,0,1,-1},v[5]={0,1,-1,0,0};\nstruct node{\n\tint gz[6][8],step,ans[6][3],last[3];\n}a[1400000];\nbool f2;\nvoid dfs(int x,int y,int b){\n\tf[x][y]=1;\n\tfor(int i=1;i<=4;i++){\n\t\tint X=x+u[i],Y=y+v[i];\n\t\tif(X && Y && X<6 && Y<8 && \n\t\ta[b].gz[X][Y]==a[b].gz[x][y] && \n\t\t!f[X][Y]) dfs(X,Y,b);\n\t}\n}\nint QC(int b){\n\tint F=1;\n\tmemset(f,0,sizeof(f));\n\tfor(int i=1;i<=5;i++)\n\t\tfor(int j=1;j<=7;j++){\n\t\t\tint co=a[b].gz[i][j];\n\t\t\tA[i][j]=0;\n\t\t\tif(!co) f[i][j]=1;\n\t\t\tif(!f[i][j] && (\n\t\t\t(a[b].gz[i][j+1]==co && a[b].gz[i][j+2]==co) ||\n\t\t\t(a[b].gz[i][j+1]==co && a[b].gz[i][j-1]==co) ||\n\t\t\t(a[b].gz[i][j-1]==co && a[b].gz[i][max(0,j-2)]==co) ||\n\t\t\t(a[b].gz[i+1][j]==co && a[b].gz[i+2][j]==co) ||\n\t\t\t(a[b].gz[i-1][j]==co && a[b].gz[i+1][j]==co) ||\n\t\t\t(a[b].gz[i-1][j]==co && a[b].gz[max(i-2,0)][j]==co)))\n\t\t\t\tdfs(i,j,b),F=0;\n\t\t}\n\tfor(int i=1;i<=5;i++){\n\t\tint cnt=0;\n\t\tfor(int j=1;j<=7;j++)\n\t\t\tif(!f[i][j]) A[i][++cnt]=a[b].gz[i][j];\n\t}\n\tfor(int i=1;i<=5;i++)\n\t\tfor(int j=1;j<=7;j++)\n\t\t\ta[b].gz[i][j]=A[i][j];\n\treturn F;\n}\nvoid qc(int b){\n\twhile(1) if(QC(b)) return ;\n}\nint check(int b){\n\tint res=0;\n\tfor(int i=1;i<=5;i++)\n\t\tfor(int j=1;j<=7;j++)\n\t\t\tif(a[b].gz[i][j]!=0) return 0;\n\treturn 1;\n}\nvoid kh(node p,int e){\n\tint cnt=0;\n\tfor(int i=1;i<=7;i++){\n\t\tA[0][i]=0;\n\t\tif(p.gz[e][i]) A[0][++cnt]=p.gz[e][i];\n\t}\n\tfor(int i=1;i<=7;i++) p.gz[e][i]=A[0][i];\n\treturn ;\n}\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=5;i++){\n\t\tint cnt=0;\n\t\twhile(scanf(\"%d\",&a1),a1) a[1].gz[i][++cnt]=a1;\n\t}\n\thead=0,tail=1;\n\twhile(head!=tail){\n\t\thead++;\n\t\tnode now=a[head];\n\t\tqc(head);\n\tfor(int i=1;i<=5;i++){\n\t\tfor(int j=1;j<=7;j++)\n\t\t\tcout<<a[head].gz[i][j];\n\t\tcout<<endl;\n\t}\n\t\tcout<<endl;\n\t\tif(check(head)){\n\t\t\tfor(int i=1;i<=now.step;i++)\n\t\t\t\tprintf(\"%d %d %d\\n\",\n\t\t\t\tnow.ans[i][0]-1,\n\t\t\t\tnow.ans[i][1]-1,\n\t\t\t\tnow.ans[i][2]);\n\t\t\treturn 0;\n\t\t}\n\t\tfor(int i=1;i<=4;i++)\n\t\t\tfor(int j=1;j<=7;j++)\n\t\t\t\tif(now.gz[i][j] && now.step<n && \n\t\t\t\t(now.last[0]!=i || \n\t\t\t\tnow.last[1]!=j || now.last[2]!=1)){\n\t\t\t\t\tnode la=now;\n\t\t\t\t\tswap(la.gz[i][j],la.gz[i+1][j]);\n\t\t\t\t\tla.ans[++la.step][0]=la.last[0]=i;\n\t\t\t\t\tla.ans[la.step][1]=la.last[1]=j;\n\t\t\t\t\tla.ans[la.step][2]=la.last[2]=1;\n\t\t\t\t\tkh(la,i),kh(la,i+1);\n\t\t\t\t\ta[++tail]=la;\n\t\t\t\t}\n\t\tfor(int i=2;i<=5;i++)\n\t\t\tfor(int j=1;j<=7;j++){\n\t\t\t\tif(now.gz[i][j] && now.step<n && \n\t\t\t\t(now.last[0]!=i || \n\t\t\t\tnow.last[1]!=j || now.last[2]!=-1)){\n\t\t\t\t\tnode la=now;\n\t\t\t\t\tswap(la.gz[i][j],la.gz[i-1][j]);\n\t\t\t\t\tla.ans[++la.step][0]=la.last[0]=i;\n\t\t\t\t\tla.ans[la.step][1]=la.last[1]=j;\n\t\t\t\t\tla.ans[la.step][2]=la.last[2]=-1;\n\t\t\t\t\tkh(la,i),kh(la,i-1);\n\t\t\t\t\ta[++tail]=la;\n\t\t\t\t}\n\t\t\t}\n\t}\n\tcout<<-1;\n\treturn 0;\n}\n```\n\nAC\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define F for(int i=1;i<=5;i++)for(int j=1;j<=7;j++)\nusing namespace std;\t\t\t\t\t\t\t \nint n,a1,p[6][3],fl,a[6][6][8];                 \nint check(int z){                               \n\tbool hyk,kfs,f[10][10];//hyk\u8868\u793a\u6b64\u65f6\u662f\u5426\u8fd8\uff08h\uff09\u6709\uff08y\uff09\u5757\uff08k\uff09\uff0c\u82e5\u6ca1\u6709\u4e3a1\u6709\u5219\u4e3a0\uff0ckfs\u8868\u793a \u53ef\uff08k\uff09\u5426\uff08f\uff09\u5220\uff08s\uff09\u53bb\u5757 \n\tint hls[10],lls[10];//hls\u4e3a\u884c\uff0clls\u4e3a\u5217 \n\tmemset(f,0,sizeof(f));//f\u6570\u7ec4\u5b58\u7684\u662f\u8fd9\u4e2a\u5757\u662f\u5426\u53ef\u4ee5\u88ab\u5237\u6389 \n\tdo{\n\t\thyk=1,kfs=0;\n\t\tF if(a[z][i][j]){//\u4ecb\u4e8efor i=1 to 5\u4e0efor j=1 to 7\u5b9e\u5728\u592a\u591a\u53ea\u80fd\u4f7f\u51fa\u6b64\u4e0b\u7b56\u2026\u2026 \n\t\t\tif(f[i][j]){a[z][i][j]=0;continue;}//\u5982\u679c\u5df2\u8fd1\u5728\u4e0a\u4e00\u6b21\u65f6\u88ab\u5237\u4e86\uff0c\u90a3\u4e48\u5c06\u5176\u6574\u62100\u5373\u53ef \n\t\t\thyk=0;int jj=j;//\u5982\u679c\u8fd8\u6709\u5757\u7559\u7740\u6ca1\u6709\u88ab\u5237\u5c31\u5c06hyk\u8bbe\u4e3a0 \n\t\t\twhile(!a[z][i][jj-1] && jj>1) a[z][i][jj-1]=a[z][i][jj],a[z][i][jj]=0,jj--;//\u5c06\u5757\u4e0b\u964d \n\t\t}\n\t\tmemset(f,0,sizeof(f));\n\t\tif(!hyk)\n\t\tF{\n\t\t\tif(!a[z][i][j]) break;\n\t\t\tif(a[z][i][j]==a[z][i-1][j]){//\u5904\u7406\u884c \n\t\t\t\thls[j]++;\n\t\t\t\tif(hls[j]>=3 && a[z][i][j]!=a[z][i+1][j]){//\u5047\u5982\u5728\u6b64\u884c\u7684\u4e0a\u4e00\u4e2a\u4e0e\u8fd9\u4e2a\u76f8\u540c\u90a3\u4e48\u5c06\u8fde\u7eed\u7684\u4e2a\u6570+1 \n\t\t\t\t\tfor(int k=0;k<hls[j];k++) f[i-k][j]=1;//\u6807\u8bb0\u88ab\u5237\u7684\u70b9 \n\t\t\t\t\tkfs=1;//\u6807\u8bb0\u8fd8\u80fd\u88ab\u5237\u56e0\u6b64\u8fd8\u53ef\u4ee5\u8fdb\u884c\u4e0b\u4e00\u8f6e \n\t\t\t\t}\n\t\t\t}\n\t\t\telse hls[j]=1;\n\t\t\tif(a[z][i][j]==a[z][i][j-1]){//\u5904\u7406\u5217\uff0c\u540c\u7406 \n\t\t\t\tlls[i]++;\n\t\t\t\tif(lls[i]>=3 && a[z][i][j]!=a[z][i][j+1]){\n\t\t\t\t\tfor(int k=0;k<lls[i];k++) f[i][j-k]=1;\n\t\t\t\t\tkfs=1;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse lls[i]=1;\n\t\t}\n\t}while(kfs);//\u4e00\u76f4\u53ef\u4ee5\u5237\u5c31\u4e00\u76f4\u5237\u4e0b\u53bb \n\treturn hyk;//\u5224\u65ad\u80fd\u5426\u5237\u5b8c \n}\nvoid search(int z){\n\tif(check(z) && z==n){fl=1;return ;}\n\tif(z==n) return ;\n\tfor(int i=1;i<5;i++)\n\t\tfor(int j=1;j<=7;j++){//\u679a\u4e3e\u4ea4\u6362\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5411\u53f3\u63a8\u7684\u4f18\u5148\u7ea7\u66f4\u9ad8\u56e0\u6b64\u53ef\u4ee5\u5148\u9ed8\u8ba4\u4e3a\u5411\u53f3\uff0c\u4ec5\u5f53\u5de6\u8fb9\u4e3a\u7a7a\u7684\u65f6\u5019\u5411\u5de6 \n\t\t\tif(a[z][i][j]==a[z][i+1][j]) continue;//\u5047\u82e5\u4e24\u8005\u989c\u8272\u76f8\u540c\u5c31\u4e0d\u5fc5\u4ea4\u6362 \n\t\t\tswap(a[z][i][j],a[z][i+1][j]);\n\t\t\tfor(int I=1;I<=5;I++) for(int J=1;J<=7;J++) a[z+1][I][J]=a[z][I][J];\n\t\t\tsearch(z+1);\n\t\t\tif(fl){\n\t\t\t\tp[z][0]=i,p[z][1]=j,p[z][2]=1;\n\t\t\t\tif(!a[z][i+1][j]) p[z][0]++,p[z][2]=-1;// \u5047\u5982\u5de6\u8fb9\u4e3a\u7a7a\u90a3\u4e48\u5411\u5de6 \n\t\t\t\treturn ;\n\t\t\t}\n\t\t\tswap(a[z][i][j],a[z][i+1][j]);\n\t\t}\n}\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=5;i++){\n\t\tint cnt=0;\n\t\twhile(scanf(\"%d\",&a1),a1) a[0][i][++cnt]=a1;\n\t}\n\tsearch(0);\n\tif(fl) for(int i=0;i<n;i++) printf(\"%d %d %d\\n\",p[i][0]-1,p[i][1]-1,p[i][2]);\n\telse printf(\"-1\");\n\treturn 0;\n}\n```\n![](https://cdn.luogu.com.cn/upload/pic/58476.png)",
        "postTime": 1565611101,
        "uid": 40262,
        "name": "EnochWenzhou",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1312 \u3010Mayan\u6e38\u620f\u3011"
    },
    {
        "content": "\u5e7f\u544a\uff1a[\u6d1b\u8c371312 Mayan\u6e38\u620f - Llf0703's blog](https://blog.llf0703.com/p/luogu-1312.html)\n\n\u4e00\u70b9\u4f18\u5316\u90fd\u6ca1\u52a0\uff0c\u7eaf\u79cd\u88f8\u66b4\u641c\u3002\u4e0d\u8fc7\u8fd9\u9898\u66b4\u529b\u80fd\u8fc7\u5c31\u662f\u4e86\uff0c\u5438\u6c27\u524d\u6700\u5927\u70b91618ms\uff0c\u5438\u6c27\u540e774ms\u3002\n\n## \u601d\u8def\n\n\u6574\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u5206\u4e3a \u79fb\u52a8 --> \u79fb\u52a8\u540e\u7684\u6389\u843d --> \u6d88\u9664 --> \u6d88\u9664\u540e\u7684\u6389\u843d --> \u7ee7\u7eed\u6d88\u9664 --> \u7ee7\u7eed\u6d88\u9664\u540e\u7684\u6389\u843d --> ...\n\n### \u79fb\u52a8\n\n\u663e\u7136\uff0c\u76f8\u540c\u989c\u8272\u7684\u5757\u662f\u4e0d\u7528\u79fb\u52a8\u7684\u3002\u5176\u6b21\uff0c\u5982\u679c\u5728\u4e2d\u95f4\u5de6\u79fb\u53f3\u79fb\u662f\u7b49\u4ef7\u7684\uff0c\u4e3a\u4e86\u8ba9\u5b57\u5178\u5e8f\u5c3d\u53ef\u80fd\u5c0f\uff0c\u6211\u4eec\u80af\u5b9a\u5c3d\u53ef\u80fd\u9009\u62e9\u53f3\u79fb\u3002\u90a3\u4e48\u5de6\u79fb\u5c31\u53ea\u53ef\u80fd\u53d1\u751f\u5728**\u5f53\u524d\u5757\u5de6\u8fb9\u662f\u7a7a**\u7684\u60c5\u51b5\u4e0b\u3002\n\n\u7136\u540e\u79fb\u52a8\u7684\u8bdd\u4ea4\u6362\u5c31\u884c\u4e86\uff0c\u6389\u843d\u662f\u4e0b\u4e00\u6b65\u7684\u4e8b\u3002\n\n\u79fb\u52a8\u4f7f\u7528 $mv(x,y,s)$ \u51fd\u6570\uff0c\u5176\u4e2d $(x,y)$ \u662f\u79fb\u52a8\u7684\u5757\uff0c$s=1$ \u4ee3\u8868\u53f3\u79fb\uff0c$s=-1$ \u4ee3\u8868\u5de6\u79fb\u3002$drop()$\u5c31\u662f\u6389\u843d\uff0c\u540e\u9762\u5c31\u8bb2\u3002\n\n```cpp\ninline void mv(int x,int y,int s) //\u4e4b\u524d\u5df2\u7ecf\u4fdd\u8bc1\u6ca1\u6709\u8d8a\u754c\n{\n    swap(stat.s[x][y],stat.s[x+s][y]);\n    drop();\n}\n```\n\n### \u6d88\u9664\n\n\u7531\u4e8e $drop()$ \u662f\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u628a\u6d88\u9664\u8bb2\u5b8c\u540e\u518d\u8bb2\u3002\n\n\u6d88\u9664\u5176\u5b9e\u5c31\u662f\u627e\u5230\u8fde\u7eed\u7684\u5757\u6253\u4e00\u4e2a $mark[x][y]=1$ \u7684\u6807\u8bb0\u5c31\u884c\u4e86\u3002\u8fd9\u91cc\u91c7\u7528dfs\uff0c\u5982\u679c\u6ee1\u8db3\u6761\u4ef6\uff08\u5373\u8fde\u7eed\u4e2a\u6570>=3\uff09\u90a3\u4e48\u5728\u56de\u6eaf\u65f6\u6253\u4e0a\u6807\u8bb0\u5373\u53ef\u3002\n\n\u65e2\u7136\u8bf4\u4e86\u662f\u88f8\u66b4\u641c\uff0c\u6211\u7528\u7684\u65b9\u6cd5\u81ea\u7136\u5c31\u5f88\u66b4\u529b\uff0c\u76f4\u63a5\u53cc\u91cd\u5faa\u73af\u67e5\u627e\u8d77\u70b9\u7136\u540e\u4f5c\u4e3a\u8d77\u70b9\u5f80\u4e0a\u4e0b\u5de6\u53f3\u641c\u7d22\u5c31\u884c\u4e86\u3002\n\n\u65e2\u7136\u8fd8\u8981\u5b9e\u73b0\u6389\u843d\u540e\u8fd8\u8981\u5220\u9664\u7684\u95ee\u9898\uff0c\u6211\u5c31\u628a\u5b83\u8fd4\u56de\u4e00\u4e2a``bool``\uff0c\u5982\u679c\u8fd8\u6709\u53ef\u4ee5\u5220\u9664\u7684\u5757\uff0c\u4e5f\u5c31\u662f $marked>0$ \u5c31\u8fd4\u56de``true``\u518d\u505a\u4e00\u904d\u3002\u9700\u8981\u6d88\u9664\u7684\u5730\u65b9\u8fd9\u4e48\u5199\u5c31\u884c\u4e86\uff1a\n\n```cpp\nwhile (update());\n```\n\n\u4e0b\u9762\u662f\u6574\u4e2a\u6d88\u9664\u7684\u4ee3\u7801\uff1a\n\n```cpp\nbool dfs_update(int x,int y,int fx,int fy,int step) //dfs\u6807\u8bb0\u6240\u6709\u53ef\u4ee5\u6d88\u9664\u7684\n{\n    bool can;\n    if (step>=3) can=1;\n    else can=0;\n    if (stat.s[x+fx][y+fy]==stat.s[x][y]) can=can || dfs_update(x+fx,y+fy,fx,fy,step+1);\n    if (can) mark[x][y]=1;\n    return can;\n}\n\ninline bool update() //\u6d88\u53bb\u6240\u6709\u53ef\u4ee5\u6d88\u7684\u65b9\u5757\n{\n    for (int i=1;i<=5;i++)\n    {\n        for (int j=1;j<=7;j++)\n        {\n            if (!stat.s[i][j]) continue;\n            dfs_update(i,j,0,1,1); //\u7eb5\u5411\u4e0a\n            dfs_update(i,j,0,-1,1); //\u7eb5\u5411\u4e0b\n            dfs_update(i,j,1,0,1); //\u6a2a\u5411\u53f3\n            dfs_update(i,j,-1,0,1); //\u6a2a\u5411\u5de6\n        }\n    }\n    int marked=0;\n    for (int i=1;i<=5;i++)\n        for (int j=1;j<=7;j++)\n            marked+=mark[i][j];\n    drop();\n    return marked;\n}\n```\n\n### \u6389\u843d\n\n\u4e24\u79cd\u6389\u843d\u5176\u5b9e\u539f\u7406\u662f\u4e00\u6837\u7684\uff0c\u628a\u7a7a\u683c\u586b\u4e0a\u5c31\u884c\u4e86\u3002\u5f53\u7136\uff0c\u6d88\u9664\u540e\u7684\u6389\u843d\u8fd8\u8981\u517c\u4efb\u4e00\u4e2a\u628a\u6807\u8bb0\u8fc7\u7684\u65b9\u5757\u5220\u6389\uff08\u4e5f\u5c31\u662f\u8d4b\u503c\u4e3a0\uff09\u7684\u64cd\u4f5c\u3002\u867d\u7136\u53ea\u6709\u6d88\u9664\u540e\u6389\u843d\u9700\u8981\u8fd9\u4e48\u505a\uff0c\u4f46\u79fb\u52a8\u540e\u6389\u843d\u53cd\u6b63\u4e5f\u6ca1\u6709\u6807\u8bb0\uff0c\u7edf\u4e00\u7528\u8fd9\u4e2a\u4e5f\u6ca1\u6709\u4efb\u4f55\u95ee\u9898\u3002\n\n```cpp\ninline void drop()\n{\n    for (int i=1;i<=5;i++)\n    {\n        for (int j=1;j<=7;j++)\n        {\n            if (!mark[i][j]) continue;\n            mark[i][j]=0;\n            stat.s[i][j]=0;\n        }\n        for (int j=1;j<=7;j++)\n        {\n            if (stat.s[i][j]) continue; //\u627e\u5230\u7a7a\u683c\u5220\u9664\n            int cnt=0;\n            for (int k=j+1;k<=7;k++)\n            {\n                if (!stat.s[i][k]) continue;\n                stat.s[i][j+cnt]=stat.s[i][k];\n                cnt++;\n                stat.s[i][k]=0;\n                break;\n            }\n        }\n    }\n}\n```\n\n### \u68c0\u67e5\u662f\u5426\u6e05\u7a7a\n\n\u76f4\u63a5\u68c0\u67e5\u6bcf\u4e00\u5217\u7b2c\u4e00\u4e2a\u662f\u5426\u4e3a0\u5c31\u884c\u4e86\u3002\n\n```cpp\ninline bool check()\n{\n    for (int i=1;i<=5;i++)\n        if (stat.s[i][1])\n            return 0;\n    return 1;\n}\n```\n\n### \u6574\u4e2adfs\n\n\u5c31\u662fdfs\u7684\u6807\u51c6\u683c\u5f0f\uff0c\u9700\u8981\u63d0\u524d\u5907\u4efd\u4e00\u4e0b\u521d\u59cb\u72b6\u6001\u65b9\u4fbf\u8fd8\u539f\uff0c\u8fd8\u6709\u5c31\u662f\u5982\u679c\u5df2\u7ecf\u627e\u5230\u4e86\uff08\u5373 $can=1$\uff09\u6216\u8005\u6b65\u6570\u8d85\u4e86\u5c31\u53ef\u4ee5\u76f4\u63a5\u9000\u51fa\u3002\u4e3b\u4f53\u5c31\u662f\u4e8c\u91cd\u5faa\u73af\u679a\u4e3e\u4ea4\u6362\u54ea\u4e2a\u65b9\u5757\u3002\n\n```cpp\nvoid dfs(int step)\n{\n    if (can) return;\n    if (check()) //\u5df2\u7ecf\u5168\u90e8\u6d88\u9664\u5b8c\uff0c\u8f93\u51fa\u65b9\u6848\n    {\n        can=1;\n        for (int i=1;i<step;i++) printf(\"%d %d %d\\n\",cur[i][0]-1,cur[i][1]-1,cur[i][2]);\n        return;\n    }\n    if (step==n+1) return;\n    MAP now;\n    for (int i=1;i<=5;i++)\n        for (int j=1;j<=7;j++)\n            now.s[i][j]=stat.s[i][j]; //\u5907\u4efd\n    for (int i=1;i<=5;i++)\n    {\n        for (int j=1;j<=7;j++)\n        {\n            if (!now.s[i][j]) continue;\n            if (i==5) //\u5728\u6700\u53f3\u8fb9\u4e00\u5217\u53ea\u53ef\u80fd\u5f80\u5de6\u79fb\n            {\n                if (now.s[i-1][j]) continue;\n                mv(i,j,-1); //\u79fb\u52a8\n                cur[step][0]=i; cur[step][1]=j; cur[step][2]=-1; //\u8bb0\u5f55\u5f53\u524d\u79fb\u52a8\u65b9\u5f0f\n                while (update()); //\u6d88\u9664\n                dfs(step+1);\n                for (int i=1;i<=5;i++)\n                    for (int j=1;j<=7;j++)\n                        stat.s[i][j]=now.s[i][j]; //\u8fd8\u539f\n                continue;\n            }\n\n            // \u53f3\u79fb\n            if (stat.s[i][j]!=stat.s[i+1][j])\n            {\n                mv(i,j,1);\n                cur[step][0]=i; cur[step][1]=j; cur[step][2]=1;\n                while (update());\n                dfs(step+1);\n                for (int i=1;i<=5;i++)\n                    for (int j=1;j<=7;j++)\n                        stat.s[i][j]=now.s[i][j];\n            }\n            \n            if (i>=2 && !now.s[i-1][j]) //\u5de6\u8fb9\u4e3a\u7a7a\u5f80\u5de6\u79fb\n            {\n                mv(i,j,-1);\n                cur[step][0]=i; cur[step][1]=j; cur[step][2]=-1;\n                while (update());\n                dfs(step+1);\n                for (int i=1;i<=5;i++)\n                    for (int j=1;j<=7;j++)\n                        stat.s[i][j]=now.s[i][j];\n            }\n        }\n    }\n}\n```\n\n## \u4ee3\u7801\n\n```cpp\nstruct MAP{\n    int s[10][10];\n} stat;\nint n,m,a,b,c,cur[10][3]; //0->x;1->y;2->left/right\nbool can=0;\nbool mark[10][10];\n\ninline void drop()\n{\n    for (int i=1;i<=5;i++)\n    {\n        for (int j=1;j<=7;j++)\n        {\n            if (!mark[i][j]) continue;\n            mark[i][j]=0;\n            stat.s[i][j]=0;\n        }\n        for (int j=1;j<=7;j++)\n        {\n            if (stat.s[i][j]) continue; //\u627e\u5230\u7a7a\u683c\u5220\u9664\n            int cnt=0;\n            for (int k=j+1;k<=7;k++)\n            {\n                if (!stat.s[i][k]) continue;\n                stat.s[i][j+cnt]=stat.s[i][k];\n                cnt++;\n                stat.s[i][k]=0;\n                break;\n            }\n        }\n    }\n}\n\ninline void mv(int x,int y,int s) //\u4fdd\u8bc1\u6ca1\u6709\u8d8a\u754c\n{\n    swap(stat.s[x][y],stat.s[x+s][y]);\n    drop();\n}\n\ninline bool check()\n{\n    for (int i=1;i<=5;i++)\n        if (stat.s[i][1])\n            return 0;\n    return 1;\n}\n\nbool dfs_update(int x,int y,int fx,int fy,int step) //\u6807\u8bb0\u6240\u6709\u53ef\u4ee5\u6d88\u9664\u7684\n{\n    bool can;\n    if (step>=3) can=1;\n    else can=0;\n    if (stat.s[x+fx][y+fy]==stat.s[x][y]) can=can || dfs_update(x+fx,y+fy,fx,fy,step+1);\n    if (can) mark[x][y]=1;\n    return can;\n}\n\ninline bool update() //\u6d88\u53bb\u6240\u6709\u53ef\u4ee5\u6d88\u7684\u65b9\u5757\n{\n    for (int i=1;i<=5;i++)\n    {\n        for (int j=1;j<=7;j++)\n        {\n            if (!stat.s[i][j]) continue;\n            dfs_update(i,j,0,1,1); //\u7eb5\u5411\u4e0a\n            dfs_update(i,j,0,-1,1); //\u7eb5\u5411\u4e0b\n            dfs_update(i,j,1,0,1); //\u6a2a\u5411\u53f3\n            dfs_update(i,j,-1,0,1); //\u6a2a\u5411\u5de6\n        }\n    } //mark checked\n    int marked=0;\n    for (int i=1;i<=5;i++)\n        for (int j=1;j<=7;j++)\n            marked+=mark[i][j];\n    drop();\n    return marked;\n}\n\nvoid dfs(int step)\n{\n    if (can) return;\n    if (check()) //\u5df2\u7ecf\u5168\u90e8\u6d88\u9664\u5b8c\uff0c\u6821\u9a8c\u6bcf\u5217\u7b2c\u4e00\u4e2a\u5373\u53ef\n    {\n        can=1;\n        for (int i=1;i<step;i++) printf(\"%d %d %d\\n\",cur[i][0]-1,cur[i][1]-1,cur[i][2]);\n        return;\n    }\n    if (step==n+1) return;\n    MAP now;\n    for (int i=1;i<=5;i++)\n        for (int j=1;j<=7;j++)\n            now.s[i][j]=stat.s[i][j]; //\u5907\u4efd\n    for (int i=1;i<=5;i++)\n    {\n        for (int j=1;j<=7;j++)\n        {\n            if (!now.s[i][j]) continue;\n            if (i==5) //\u53ea\u53ef\u80fd\u5f80\u5de6\u79fb\n            {\n                if (now.s[i-1][j]) continue;\n                mv(i,j,-1);\n                cur[step][0]=i; cur[step][1]=j; cur[step][2]=-1;\n                while (update());\n                dfs(step+1);\n                for (int i=1;i<=5;i++)\n                    for (int j=1;j<=7;j++)\n                        stat.s[i][j]=now.s[i][j];\n                continue;\n            }\n\n            // \u53f3\u79fb\n            if (stat.s[i][j]!=stat.s[i+1][j])\n            {\n                mv(i,j,1);\n                cur[step][0]=i; cur[step][1]=j; cur[step][2]=1;\n                while (update());\n                dfs(step+1);\n                for (int i=1;i<=5;i++)\n                    for (int j=1;j<=7;j++)\n                        stat.s[i][j]=now.s[i][j];\n            }\n            \n            if (i>=2 && !now.s[i-1][j]) //\u5de6\u8fb9\u4e3a\u7a7a\u5f80\u5de6\u79fb\n            {\n                mv(i,j,-1);\n                cur[step][0]=i; cur[step][1]=j; cur[step][2]=-1;\n                while (update());\n                dfs(step+1);\n                for (int i=1;i<=5;i++)\n                    for (int j=1;j<=7;j++)\n                        stat.s[i][j]=now.s[i][j];\n            }\n        }\n    }\n}\n\nint main()\n{\n    n=read();\n    for (int i=1;i<=5;i++)\n    {\n        int m=0;\n        a=read();\n        while (a) \n        {\n            stat.s[i][++m]=a;\n            a=read();\n        }\n    } //read checked\n    dfs(1);\n    if (!can) printf(\"-1\");\n    return 0;\n}\n```",
        "postTime": 1544709048,
        "uid": 29696,
        "name": "Llf0703",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1312 \u3010Mayan\u6e38\u620f\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u544a\u8bc9\u6211\u4eec\u6a21\u5757\u5316\u662f\u591a\u4e48\u7684\u91cd\u8981\uff0c\u6709\u6e05\u6670\u601d\u8def\u7684\u4ee3\u7801\u6bd4\u5929\u9a6c\u884c\u7a7a\u7684\u53cd\u4eba\u7c7b\u9ad8\u667a\u5546\u4ee3\u7801\u597d\u5f88\u591a\u3002\n\n\u5efa\u8bae\u8fb9\u5199\u8fb9\u8c03\uff0c\u5199\u5b8c\u4e00\u4e2a\u6a21\u5757\u5c31\u53bb\u6d4b\u8bd5\u8fd9\u4e2a\u6a21\u5757\uff0c\u514d\u5f97\u5168\u90e8\u5806\u5230\u6700\u540e\u5fc3\u70e6\u610f\u4e71\u3002\n\n\u5269\u4e0b\u7684\uff0c\u5c31\u662f\u6211\u90fd\u6ca1\u60f3\u5230\u6211\u4f1aA\u4e86\u8fd9\u9898\uff0c~~\u8fd9\u4e2a\u590d\u6742\u5ea6\u662f\u6bd4\u8f83\u7384\u5b66\u7684~~\u3002\n\n~~\u7801\u519c\u5de5\u4e1a\u9898\uff0c\u5168\u9760rp~~\n\n\u90a3\u4e48\u8bf4\u4e00\u4e0b\u8fd9\u9898\u7684\u601d\u8def\u5427\uff0c\u6211\u4eec\u53ef\u4ee5\u5206\u6210\u4e09\u4e2a\u5927\u6a21\u5757:\n\n\u6d88\u6d88\u4e50\uff08$kill$\uff1f\uff09\u6a21\u5757\uff0c\u91cd\u529b($fall$?)\u6a21\u5757\uff0c\u641c\u7d22($dfs$)\u6a21\u5757\u3002\uff08\u6211\u8fd9\u82f1\u8bed\u7edd\u4e86\uff01\uff09\n\n\u5bf9\u4e8e\u6d88\u6d88\u4e50\u6a21\u5757\uff0c\u53ef\u4ee5\u5206\u6210\u884c\u548c\u5217\u5206\u522b\u5904\u7406\uff0c\u6bcf\u884c\u6bcf\u5217\u4e00\u65e6\u8d85\u8fc73\u4e2a\u76f8\u540c\u7684\uff0c\u5c31\u6807\u8bb0\u4e00\u4e0b\uff0c\u6700\u540e\u628a\u6807\u8bb0\u7684\u70b9\u5220\u9664\u4e3a$0$\u3002\n\n\u5bf9\u4e8e\u91cd\u529b\u6a21\u5757\uff0c\u76f4\u63a5\u66b4\u529b\u5f80\u4e0b\u5192\u6ce1\u5730\u4e22\u5c31\u597d\u4e86\u3002\n\n\u5bf9\u4e8e\u641c\u7d22\u6a21\u5757\uff0c\u7528$stl$\u7684$map$\u8fdb\u884c\u8bb0\u5fc6\u5316\uff0c\u526a\u6389\u540c\u4e00\u6b65\u6570\u7684\u540c\u4e00\u72b6\u6001\uff0c\u8fd8\u6709\u6b65\u6570\u8d85\u9650\u7684\u3002\n\n\u7136\u540e\u627e\u5230\u4e86\u5168\u56fe\u4e3a$0$\u5c31\u8f93\u51fa\u5982\u4f55\u641c\u8fc7\u6765\u7684\u5c31\u884c\u4e86\u3002\n\n\u6ca1\u627e\u5230\u8f93\u51fa\u662f$-1$\u3002\n\n\u7531\u4e8e\u662f\u5728\u5b66\u6821\u6a21\u62df\u7684\u65f6\u5019~~\u7761\u4e86\u4e00\u89c9~~\u5199\u7684\u9898\uff0c\u624b\u611f\u6781\u597d\uff0c\u6ce8\u91ca\u5c31\u61d2\u5f97\u5220\u4e86\uff0c\u6bd5\u7adf\u662f\u4e00\u4e2a\u8c03\u8bd5\u8fc7\u7a0b\u3002\n\n$draw$\u51fd\u6570\u4ec5\u4ec5\u4e3a\u4e86\u8c03\u8bd5\u8f93\u51fa\u65b9\u4fbf\uff0c\u5728\u6700\u7ec8\u4ee3\u7801\u4e2d\u65e0\u4efb\u4f55\u7528\u5904\u3002\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\n\nint n;\n\nstruct ha\n{\n    int m[10][10],ss;\n    bool operator == (const ha aa)const\n    {\n        if(ss!=aa.ss)return false;\n        for(int i=1; i<=7; i++)\n        {\n            for(int j=1; j<=5; j++)\n            {\n                if(aa.m[i][j]!=m[i][j])\n                    return false;\n            }\n        }\n        return true;\n    }\n    bool operator < (const ha aa)const\n    {\n        for(int i=1; i<=7; i++)\n        {\n            for(int j=1; j<=5; j++)\n            {\n                if(aa.m[i][j]==m[i][j])\n                    continue;\n                return m[i][j]<aa.m[i][j];\n            }\n        }\n        if(ss<aa.ss)return true;\n        return false;\n    }\n} a[10];\n\nmap<ha,bool> b;\n\nvoid draw(int id)\n{\n    cout<<endl;\n    for(int i=1;i<=7;i++)\n    {\n        for(int j=1;j<=5;j++)\n            cout<<a[id].m[i][j]<<\" \";\n        cout<<endl;\n    }\n}\n\nvoid kill(int id)\n{\n    bool k[10][10];\n    memset(k,0,sizeof(k));\n    for(int i=1; i<=7; i++)\n    {\n        int last=0;\n        if(a[id].m[i][1]!=0)\n            last=1;\n        for(int j=2; j<=6; j++)\n        {\n            if(a[id].m[i][j]==a[id].m[i][j-1]&&a[id].m[i][j-1]!=0)\n                last++;\n            else if(a[id].m[i][j]!=a[id].m[i][j-1])\n            {\n                if(last>=3&&a[id].m[i][j-1]!=0)\n                {\n                    for(int l=j-last; l<j; l++)\n                        k[i][l]=1;\n                }\n                last=0;\n                if(a[id].m[i][j]!=0)\n                    last=1;\n            }\n        }\n    }\n    //--------------------------------------------------------------//\n    int ll[10];\n    for(int j=1; j<=5; j++)\n    {\n        ll[j]=0;\n        if(a[id].m[1][j]!=0)\n            ll[j]=1;\n    }\n    for(int i=2; i<=8; i++)\n    {\n        for(int j=1; j<=5; j++)\n        {\n            if(a[id].m[i][j]==a[id].m[i-1][j]&&a[id].m[i-1][j]!=0)\n            {\n\n                ll[j]++;\n            }\n            else if(a[id].m[i][j]!=a[id].m[i-1][j])\n            {\n                if(ll[j]>=3&&a[id].m[i-1][j]!=0)\n                {\n                    for(int l=i-ll[j]; l<i; l++)\n                        k[l][j]=1;\n                }\n                ll[j]=0;\n                if(a[id].m[i][j]!=0)\n                    ll[j]=1;\n            }\n        }\n    }\n    //--------------------------------------------------------------//\n    for(int i=1; i<=7; i++)\n    {\n        for(int j=1; j<=5; j++)\n        {\n            if(k[i][j])\n                a[id].m[i][j]=0;\n        }\n    }\n\n}\n\nbool fall(int id)\n{\n    bool op=0;\n    while(1)\n    {\n        bool ok=1;\n        for(int i=6; i>=1; i--)\n        {\n            for(int j=1; j<=5; j++)\n            {\n                if(a[id].m[i+1][j]==0&&a[id].m[i][j]!=0)\n                {\n                    op=1;\n                    ok=0;\n                    swap(a[id].m[i+1][j],a[id].m[i][j]);\n                }\n            }\n        }\n        if(ok)\n            break;\n    }\n    return op;\n}\n\nvoid cck(int id)\n{\n    while(1)\n    {\n        //printf(\"\\n\");\n        kill(id);\n        bool pan=fall(id);\n        if(pan==0)\n            break;\n    }\n}\n\nint anx[10];\nint any[10];\nint ank[10];\n\nvoid fuzhi(int step)\n{\n    int nw=step+1;\n    a[step].ss=nw;\n    memset(a[nw].m,0,sizeof(a[nw].m));\n    for(int i=1;i<=7;i++)\n    {\n        for(int j=1;j<=5;j++)\n        {\n            a[nw].m[i][j]=a[step].m[i][j];\n        }\n    }\n}\n\nint z[10]={1,-1};\n\nbool win(int id)\n{\n    for(int i =1;i<=7;i++)\n    {\n        for(int j=1;j<=5;j++)\n        {\n            if(a[id].m[i][j]!=0)\n                return false;\n        }\n    }\n    return true;\n}\n\nvoid dfs(int step)\n{\n    //cout<<\" \"<<step<<endl;\n    //draw(step);\n    //system(\"pause\");\n    if(win(step)&&step==n)\n    {\n        for(int i=2;i<=step;i++)\n        {\n            printf(\"%d %d %d\\n\",any[i]-1,7-anx[i],ank[i]);\n        }\n        exit(0);\n    }\n    if(step==n)\n        return ;\n    for(int j=1;j<=5;j++)\n    {\n        for(int i=7;i>=1;i--)\n        {\n            if(a[step].m[i][j]==0)continue;\n            for(int l=0;l<=1;l++)\n            {\n                int nx=j+z[l];\n                if(nx>=1&&nx<=5)\n                {\n                    fuzhi(step);\n                    swap(a[step+1].m[i][nx],a[step+1].m[i][j]);\n                    //cout<<i<<\" \"<<j<<\" \"<<z[l]<<endl;\n                    //draw(step+1);\n                    //cout<<b[a[step+1]]<<endl;\n                    cck(step+1);\n                    if(b[a[step+1]]==1)\n                    {\n                        //cout<<\"go!\"<<endl;\n                        continue;\n                    }\n                    //if(a[step].m[6][4]==3)\n                    //{\n                        //draw(step);\n                        //draw(step+1);\n                        //system(\"pause\");\n                    //}\n                    b[a[step+1]]=1;\n                    anx[step+1]=i;\n                    any[step+1]=j;\n                    ank[step+1]=z[l];\n                    cck(step+1);\n                    dfs(step+1);\n                }\n            }\n        }\n    }\n}\n\nint main()\n{\n    //freopen(\"mayan.in\",\"r\",stdin);\n    //freopen(\"mayan.out\",\"w\",stdout);\n    scanf(\"%d\",&n);\n    n+=1;\n    memset(a[1].m,0,sizeof(a[1].m));\n    for(int i=1;i<=5;i++)\n    {\n        int op=7;\n        while(1)\n        {\n            int x;\n            scanf(\"%d\",&x);\n            if(x==0)\n                break;\n            a[1].m[op][i]=x;\n            op--;\n        }\n    }\n    a[1].ss=1;\n    /*\n    for(int i=1;i<=7;i++)\n    {\n        for(int j=1;j<=5;j++)\n            scanf(\"%d\",&a[1].m[i][j]);\n    }*/\n    //draw(1);\n    b[a[1]]=1;\n\n    //cout<<b[a[1]]<<endl;\n    dfs(1);\n    printf(\"-1\\n\");\n    return 0;\n}\n\n```",
        "postTime": 1540994289,
        "uid": 34663,
        "name": "redegg",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1312 \u3010Mayan\u6e38\u620f\u3011"
    },
    {
        "content": "\u672c\u9898\u6a21\u62df\u7684\u6210\u5206\u8fdc\u5927\u4e8e\u641c\u7d22\u3002\n\n\u7531\u4e8e\u6b65\u6570\u5df2\u7ecf\u786e\u5b9a\uff0c\u6240\u4ee5\u53ea\u8981\u91c7\u7528\u6700\u7b80\u5355\u7684DFS\u5373\u53ef\u6c42\u51fa\u7ed3\u679c\u3002\n\n\u5f53\u7136\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e9b\u5fc5\u8981\u7684\u526a\u679d\u548c\u4f18\u5316\uff1a\n\n1.\u6700\u4f18\u5316\u526a\u679d\uff1a\u6309\u7167x,y\u7684\u987a\u5e8f\u904d\u5386\u65b9\u5757\uff0c\u4fdd\u8bc1\u7b2c\u4e00\u4e2a\u627e\u5230\u7684\u53ef\u884c\u65b9\u6848\u4e00\u5b9a\u662f\u6700\u4f18\u65b9\u6848\u3002\n\n2.\u6700\u4f18\u5316\u526a\u679d\uff1a\u53ea\u6709\u5f53\u5de6\u8fb9\u662f\u7a7a\u7684\u65f6\u5019\u624d\u5de6\u79fb\uff0c\u5426\u5219\u7b49\u4ef7\u4e8e\u5de6\u8fb9\u7684\u53f3\u79fb\u3002\n\n3.\u6700\u4f18\u5316\u526a\u679d\uff1a\u4e0d\u79fb\u52a8\u540c\u8272\u65b9\u5757\u3002\n\n4.\u53ef\u884c\u6027\u526a\u679d\uff1a\u6709\u67d0\u79cd\u65b9\u5757\u4e2a\u6570<=2\u76f4\u63a5\u9000\u51fa\uff0c\u56e0\u4e3a\u4e0d\u53ef\u80fd\u6d88\u9664\u3002\n\n5.\u7a0b\u5e8f\u4e0a\u7684\u4f18\u5316\uff1a\u75282\u4e2a\u961f\u5217\u5904\u7406\u4e8b\u4ef6\uff0c\u4e00\u4e2a\u5904\u7406\u6389\u843d\uff0c\u4e00\u4e2a\u5904\u7406\u6d88\u9664\u3002\n\n\u7b2c5\u4e2a\u4f18\u5316\u662f\u91cd\u70b9\u3002\u89c2\u5bdf\u53ef\u4ee5\u53d1\u73b0\u6bcf\u4e00\u6b21\u79fb\u52a8\u65b9\u5757\u90fd\u4e00\u5b9a\u53ea\u4f1a\u5f71\u54cd\u79fb\u52a8\u524d\u540e\u7684\u4e24\u4e2a\u4f4d\u7f6e\uff0c\u800c\u51fa\u73b0\u53ef\u6d88\u9664\u7684\u65b9\u5757\u5e8f\u5217\u7684\u4f4d\u7f6e\u4e5f\u5fc5\u7136\u5305\u542b\u88ab\u5f71\u54cd\u7684\u4f4d\u7f6e\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u7528\u961f\u5217\u5904\u7406\u65b9\u5757\u800c\u4e0d\u5fc5\u8981\u6bcf\u4e00\u6b21\u904d\u5386\u4e00\u904d\u5730\u56fe\u3002\u961f\u5217\u7684\u5177\u4f53\u7528\u6cd5\u4ee3\u7801\u91cc\u6709\u63d0\u5230\u3002\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u8dd1\u7684\u975e\u5e38\u5feb\u4e86\u3002\u7406\u8bba\u4e0a\u8fd8\u53ef\u4ee5\u52a0\u4e00\u4e2a\u4f30\u4ef7\u7684\u4f18\u5316\uff0c\u901a\u8fc7\u540c\u8272\u65b9\u5757\u7684\u8fde\u63a5\u60c5\u51b5\u5224\u65ad\u81f3\u5c11\u8fd8\u8981\u8d70\u51e0\u6b65\uff0c\u6216\u8005\u662f\u8bb0\u5f55\u5f53\u524d\u6700\u9ad8\u7684\u65b9\u5757\u9ad8\u5ea6\u6765\u907f\u514d\u65e0\u7528\u7684\u679a\u4e3e\uff0c\u4f46\u5b9e\u9645\u4e0a\u4ee5\u4e0a\u7684\u4f18\u5316\u5df2\u7ecf\u8db3\u591f\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(?)\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <cstring>\n#include <cctype>\n#define INF 2000000000\nusing namespace std;\ntypedef long long ll;\nint read(){\n    int f=1,x=0;char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-')f=-f;c=getchar();}\n    while(c>='0'&&c<='9')x=x*10+c-'0',c=getchar();\n    return f*x; \n}\n//\u4ea4\u63622\u4e2a\u65b9\u5757\u540e\u8981\u5904\u7406\u5f71\u54cd\n//1.\u6389\u843d  2.\u6d88\u9664 \n//\u8bbe\u7f6e\u4e00\u4e2a\u6389\u843d\u961f\u5217\u548c\u4e00\u4e2a\u4e8b\u4ef6\u961f\u5217\n//\u4e8b\u4ef6\u961f\u5217\u68c0\u67e5\u662f\u5426\u6709\u53ef\u4ee5\u6d88\u9664\u7684\u65b9\u5757\uff0c\u6709\u7684\u8bdd\u5c31\u628a\u6700\u4e0a\u9762\u4e00\u5c42\u5f97\u4e0a\u4e00\u4e2a\u52a0\u5165\u6389\u843d\u961f\u5217 \n//\u5728\u6389\u843d\u961f\u5217\u91cc\u68c0\u67e5\u4e0a\u65b9\u662f\u5426\u6709\u65b9\u5757\uff0c\u6709\u7684\u8bdd\u5c06\u4e0a\u65b9\u7684\u65b9\u5757\u4e0b\u964d\u540e\u5168\u90e8\u52a0\u5165\u4e8b\u4ef6\u961f\u5217 \n//\u4e24\u8005\u9700\u8981\u4ea4\u66ff\u8fdb\u884c\u3002\nint pz[10][5][7];\nint n,ans[10][3],movement[10][3],cnt[11],flag=0;\nint dque[10005][2],dr,df;//\u6389\u843d\u961f\u5217 \nint eque[10005][2],er,ef;//\u4e8b\u4ef6\u961f\u5217 \nint visx[10],visy[10],vis[5][7];\nvoid solve_clear(int cur){\n    int dx,dy,col,len;\n    for(int i=0;i<5;i++)visx[i]=0;\n    for(int i=0;i<7;i++)visy[i]=0;\n    memset(vis,0,sizeof(vis));\n    while(er>ef){\n        dx=eque[ef][0],dy=eque[ef++][1];\n        if(!visx[dx]){//\u540c\u4e00\u4e2ax \n            visx[dx]=1;\n            col=pz[cur][dx][0],len=1;\n            for(int i=1;i<7;i++){\n                if(pz[cur][dx][i]==col)\n                    len++;\n                else{\n                    if(len>=3&&col){\n                        for(int j=i-1;i-j<=len;j--)vis[dx][j]=1;\n                    }\n                    col=pz[cur][dx][i],len=1;\n                }\n            }\n            if(len>=3&&col){\n                for(int j=6;7-j<=len;j--)vis[dx][j]=1;\n            }\n        }\n        if(!visy[dy]){\n            visy[dy]=1;\n            col=pz[cur][0][dy],len=1;\n            for(int i=1;i<5;i++){\n                if(pz[cur][i][dy]==col)\n                    len++;\n                else{\n                    if(len>=3&&col){\n                        for(int j=i-1;i-j<=len;j--)vis[j][dy]=1;\n                    }\n                    col=pz[cur][i][dy],len=1;\n                }\n            }\n            if(len>=3&&col){\n                for(int j=4;5-j<=len;j--)vis[j][dy]=1;\n            }\n        }\n    }\n    for(int i=0;i<5;i++)\n        for(int j=0;j<7;j++)\n            if(vis[i][j]){\n                pz[cur][i][j]=0;\n                if(j!=6)\n                    dque[dr][0]=i,dque[dr++][1]=j+1;\n            }    \n}\nvoid solve_drop(int cur){\n    int dx,dy,des;\n    while(dr>df){\n        dx=dque[df][0],dy=dque[df++][1];\n        for(des=dy-1;des>=0&&!pz[cur][dx][des];des--);\n        des++;\n        for(int i=dy;i<7;i++)\n            if(pz[cur][dx][i])\n                pz[cur][dx][des++]=pz[cur][dx][i],\n                eque[er][0]=dx,eque[er++][1]=des-1;\n        for(int i=des;i<7;i++)\n            pz[cur][dx][i]=0;\n    }\n}\nvoid dfs(int cur){\n    if(flag)return ;\n    if(cur==n){\n        for(int i=0;i<5;i++)\n            if(pz[cur][i][0])return ;\n        memcpy(ans,movement,sizeof(ans));\n        flag=1;\n        return ;\n    }\n    for(int i=1;i<=10;i++)cnt[i]=0;\n    for(int i=0;i<5;i++)\n        for(int j=0;j<7;j++)\n            cnt[pz[cur][i][j]]++;\n    for(int i=1;i<=10;i++)\n        if(cnt[i]&&cnt[i]<3)return ;\n    for(int i=0;i<5;i++){\n        for(int j=0;j<7;j++){\n            if(!pz[cur][i][j])continue;\n            if(i!=4&&pz[cur][i+1][j]!=pz[cur][i][j]){\n                //\u5411\u53f3\u79fb\u52a8\n                memcpy(pz[cur+1],pz[cur],sizeof(pz[0]));\n                swap(pz[cur+1][i+1][j],pz[cur+1][i][j]);\n                dr=df=0,ef=er=0;\n                dque[dr][0]=i,dque[dr++][1]=j,\n                dque[dr][0]=i+1,dque[dr++][1]=j;\n                while(dr>df)\n                    solve_drop(cur+1),solve_clear(cur+1);\n                movement[cur][0]=i,movement[cur][1]=j,movement[cur][2]=1;\n                dfs(cur+1);\n            }\n            if(i&&!pz[cur][i-1][j]&&pz[cur][i-1][j]!=pz[cur][i][j]){//\u5411\u5de6\u8fb9 \n                memcpy(pz[cur+1],pz[cur],sizeof(pz[0]));\n                swap(pz[cur+1][i-1][j],pz[cur+1][i][j]);\n                dr=df=0,ef=er=0;\n                dque[dr][0]=i,dque[dr++][1]=j,\n                dque[dr][0]=i-1,dque[dr++][1]=j;\n                while(dr>df){\n                    solve_drop(cur+1),solve_clear(cur+1);\n                }\n                movement[cur][0]=i,movement[cur][1]=j,movement[cur][2]=-1;\n                dfs(cur+1);\n            }\n        }\n    }\n}\nvoid init(){\n    n=read();\n    int t;\n    for(int i=0;i<5;i++)\n        for(int j=0;j<8;j++){\n            t=read();\n            if(!t)break;\n            pz[0][i][j]=t;\n        }\n}\nvoid solve(){\n    dfs(0);\n    if(!flag)printf(\"-1\\n\");\n    else {\n        for(int i=0;i<n;i++)\n            printf(\"%d %d %d\\n\",ans[i][0],ans[i][1],ans[i][2]);\n    }\n}\nint main(){\n    init();\n    solve();\n    return 0;\n}\n```\n\u5ba3\u4f20\u535a\u5ba2\uff1a[\u5730\u5740](http://zqy1018.leanote.com/)\n",
        "postTime": 1503243431,
        "uid": 11765,
        "name": "zqy1018",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1312 \u3010Mayan\u6e38\u620f\u3011"
    },
    {
        "content": "\u4ee3\u7801\u91ccshadow\u4e86I\u548cj\uff0c\u89c1\u8c05\u3002\n\n\u6309\u9898\u610f\u5b89\u6392I,j\u987a\u5e8f\u3002\n\n\n\u5bb9\u6613\u53d1\u73b0\u4e24\u4e2a\u975e\u7a7a\u5757\u4ea4\u6362\u53ef\u4ee5\u662f\u5de6\u5757\u53f3\u79fb\u6216\u53f3\u5757\u5de6\u79fb\uff0c\u6839\u636e\u9898\u610f\u6b64\u65f6\u53f3\u5757\u5de6\u79fb\u65e0\u610f\u4e49\u3002\n\n\u5f53\u6709\u4e00\u4e2a\u7a7a\u5757\u65f6\uff0c\u975e\u7a7a\u5757\u7684\u5de6\u53f3\u79fb\u90fd\u6709\u610f\u4e49\u3002\n\n\u5f97\u51fa\u526a\u679d\uff0c\u4e00\u4e2a\u5757\u7684\u5de6\u8fb9\u662f\u975e\u7a7a\u5757\u65f6\u4e0d\u9700\u8981\u8003\u8651\u5de6\u79fb\u3002\n\n\u53e6\u4e00\u4e2a\u663e\u7136\u7684\u526a\u679d\uff0c\u4ea4\u6362\u4e24\u4e2a\u989c\u8272\u76f8\u540c\u7684\u5757\u6ca1\u6709\u610f\u4e49\u3002\n\n\n\u7531\u4e8e\u6211\u4e0d\u592a\u786e\u5b9a\u53cchash\u7684\u51b2\u7a81\u7387\u662f\u591a\u5c11\uff0c\u6240\u4ee5\u6211\u9009\u62e9\u4e86trie\u6765\u5224\u91cd\u3002\u6ce8\u610f\u72b6\u6001\u4e2d\u540c\u65f6\u5305\u542b\u6b65\u6570\u548c\u5c40\u9762\u3002\u901a\u8fc7\u6539\u52a8trie\u53ef\u4ee5\u5f97\u5230\u66f4\u5f3a\u7684\u201c\u76f8\u540c\u5c40\u9762\u6b65\u6570\u4e0d\u540c\u201d\u7684\u526a\u679d\u3002\u505a\u6cd5\u662f\u5728\u6bcf\u4e2a\u53f6\u8282\u70b9\u8bb0\u5f55\u5230\u8fbe\u7684\u6700\u5c0f\u6b65\u6570\u3002\u8fd9\u6837\u505a\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u4f1a\u7565\u7565\u63d0\u9ad8\uff0c\u4f46\u662f\u5fae\u4e4e\u5176\u5fae\u3002\u8fd9\u79cd\u505a\u6cd5\u6211\u6ca1\u6709\u5c1d\u8bd5\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing std::swap;\nconst int H=7,W=5,MAXN=10;\nint n;\nstruct NODE{\n    bool e;\n    NODE* ch[11];\n    NODE(){memset(ch,0,sizeof(ch));e=0;}\n}root;\nbool in(int a[H][W],int dep){\n    return true;\n    NODE* pos=&root;\n    if(!pos->ch[dep]) pos->ch[dep]=new NODE();\n    pos=pos->ch[dep];\n    for(int i=0;i<H;i++) for(int j=0;j<W;j++){\n        if(!pos->ch[a[i][j]]) pos->ch[a[i][j]]=new NODE();\n        pos=pos->ch[a[i][j]];\n    }\n    if(!pos->e) return pos->e=1;\n    else return false;\n}\nstruct REC{\n    int x,y,g;\n}rec[MAXN];\nbool del[H][W];\nvoid dfs(int bc,int dep,int a[H][W]){//now dep\n    if(dep>n){\n        if(bc) return;\n        for(int i=1;i<=n;i++) printf(\"%d %d %d\\n\",rec[i].x,rec[i].y,rec[i].g);\n        exit(0);\n    }/*\n    if(dep){\n        printf(\"\\ndep%d\\n\",dep);\n        for(int i=0;i<H;i++,printf(\"\\n\")) for(int j=0;j<W;j++) printf(\"%d \",a[i][j]);\n        if(a[5][2]==1&&a[5][3]==4&&a[5][4]==3) {\n            getchar();\n        }\n    }*/\n    int tmp[H][W];\n    memcpy(tmp,a,sizeof(tmp));\n    for(int j=0;j<W;j++) for(int i=H-1;i>=0;i--) for(int dd=1;dd>=-1;dd-=2) if((j+dd<W&&j+dd>=0)&&tmp[i][j]){\n         if(tmp[i][j]==tmp[i][j+dd]) continue;\n         if(dd==-1&&tmp[i][j-1]) continue;\n        memcpy(a,tmp,sizeof(tmp));\n        swap(a[i][j],a[i][j+dd]);\n        for(int j=0;j<W;j++) for(int i=H-1;i>=0;i--){\n            if(a[i][j]) for(int ni=i;ni+1<H&&!a[ni+1][j];ni++) a[ni+1][j]=a[ni][j],a[ni][j]=0;\n        }\n        int cnt=0,tcnt=0;\n        while(1){\n            memset(del,0,sizeof(del));\n        for(int i=0;i<H;i++) {\n            int j=0;\n            while(j<W){\n                int t;\n                for(t=j;t+1<W;){\n                    if(a[i][j]&&a[i][j]==a[i][t+1]) t++;\n                    else break;\n                }\n                if(t-j+1>=3) for(int k=j;k<=t;k++) del[i][k]=1;\n                j=t+1;\n            }\n        }\n        for(int j=0;j<W;j++) {\n            int i=0;\n            while(i<H){\n                int t;\n                for(t=i;t+1<H;){\n                    if(a[i][j]&&a[i][j]==a[t+1][j]) t++;\n                    else break;\n                }\n                if(t-i+1>=3) for(int k=i;k<=t;k++) del[k][j]=1;\n                i=t+1;\n            }\n        }\n        for(int i=0;i<H;i++) for(int j=0;j<W;j++) cnt+=del[i][j],a[i][j]=del[i][j]?0:a[i][j];\n        if(!cnt) break;\n        else tcnt+=cnt,cnt=0;\n        for(int j=0;j<W;j++) for(int i=H-1;i>=0;i--){\n            if(a[i][j]) for(int ni=i;ni+1<H&&!a[ni+1][j];ni++) a[ni+1][j]=a[ni][j],a[ni][j]=0;\n        }\n        }    \n        rec[dep].x=j,rec[dep].y=H-i-1,rec[dep].g=dd;\n        if(in(a,dep)) dfs(bc-tcnt,dep+1,a);\n    }\n}\nint a[H][W];\nint main(){\n    scanf(\"%d\",&n);\n    int tot=0;\n    for(int j=0;j<5;j++){\n        int t,i=H-1;\n        scanf(\"%d\",&t);\n        while(t){\n            a[i][j]=t;\n            scanf(\"%d\",&t);\n            tot++;\n            i--;\n        }\n    }\n    in(a,0);\n    dfs(tot,1,a);\n    printf(\"-1\");\n}\n```",
        "postTime": 1474308133,
        "uid": 15183,
        "name": "Rapiz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1312 \u3010Mayan\u6e38\u620f\u3011"
    },
    {
        "content": "\u7eaf\u66b4\u641c\u9898  \u4f46\u662f\u4ee3\u7801\u597d\u957fQAQ   \u8017\u65f6\u4e09\u4e2a\u534a\u5c0f\u65f6\uff08\u4e00\u573anoip\uff09\n\n\u4e3b\u8981\u662f\u4e00\u4e2a\u5f88\u5b9e\u7528\u7684\u526a\u679d  \uff1a \u5de6\u8fb9\u4e0d\u4e3a\u7a7a\u5c31\u4e0d\u5f80\u5de6\u8fb9\u79fb \u56e0\u4e3a\u8fd9\u6837\u7b49\u4ef7\u4e8e\u628a\u5de6\u8fb9\u7684\u53f3\u79fb \u540e\u8005\u66f4\u4f18     \u5c31\u52a0\u4e86\u8fd9\u4e2a\u526a\u679d\u5c31\u80fd\u8fc7\u4e86   \u81ea\u5df1\u8ba4\u4e3a\u6211\u7684\u5e38\u6570\u8fd8\u662f\u6bd4\u8f83\u5927\u7684= =\n\n\u522b\u7684\u6ca1\u4ec0\u4e48  \u8c03\u8bd5\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u8010\u5fc3\u554a= =  \u5bf9\u7740\u6837\u4f8b\u8c03\u90fd\u627e\u4e86\u4e00\u4e2a\u5c0f\u65f6\n\n\u662f\u8fd9\u6837\u7684  \u4e00\u5f00\u59cb   \u56de\u6eaf\u540e\u7528\u6765\u5c06\u5c40\u9762\u8fd8\u539f\u7684\u6570\u7ec4\u5f00\u6210\u4e86\u5168\u5c40\u53d8\u91cf= =   \u5c31\u53ea\u80fd\u5b58\u4e00\u4e2a\u4e86\n\n\u7136\u540e  \u4e0b\u964d\u51fd\u6570\u51fa\u95ee\u9898\u4e86= =  \u65e0\u6cd5\u5904\u7406\u4e00\u5757\u6389\u4e0b\u591a\u4e2a\u7a7a\u683c\u7684\u60c5\u51b5\n\n\u4e2d\u9014\u987a\u4fbf\u53d1\u73b0\u4e86 \u5e94\u8be5\u5148\u5904\u7406\u53f3\u79fb\u518d\u5904\u7406\u5de6\u79fb\n\n\u7136\u540e  \u6e05\u9664\u51fd\u6570\u53c8\u5199\u9519\u4e86QAQ  \u4ec0\u4e48\u90fd\u9519\u771f\u662f\u9189\u4e86  \u6e05\u9664\u7528\u7684dfs\u627e\u8fde\u901a\u5757\u4e2a\u6570\u662f\u5426\u5927\u4e8e\u4e09\n\n\u7ed3\u679c\u770b\u9898\u53d1\u73b0\u5fc5\u987b\u8981\u6a2a\u7ad6\u6709\u4e09\u4e2a\u624d\u884c  \u8fd9\u6837\u7684\u8bdd= =\u6a2a\u7740\u4e00\u6b21\u66b4\u641c\u7ad6\u7740\u4e00\u6b21\u66b4\u641c\u52a0\u4e00\u4e2abool\u6570\u7ec4\u89e3\u51b3\n\n\n\u7ec6\u8282\u6bd4\u8f83\u591a \u5bb9\u6613\u51fa\u9519  \u800c\u4e14\u8fd8\u4e0d\u597d\u6539= =  \u4f46\u662f\u66b4\u641c\u9898\u5c31\u662f\u8fd9\u6837\u5751\u7239\n\n\u7279\u522b\u60f3%\u4e00\u4e0b\u5f53\u573aA\u6389\u7684\u795e\u7287\n\n```cpp\n\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nconst int maxn=8;\nconst int dx[]={-1,0,1,0};\nconst int dy[]={0,1,0,-1};\nstruct Point{\n    int x,y;\n    Point(int x,int y):x(x),y(y){}\n    Point(){}\n};\n\nint map[maxn][maxn],cnt[20],x[maxn],y[maxn],ins[maxn];\nint n;\n\nvoid init_data()\n{\n    cin>>n;\n    for(int i=1;i<=5;i++)\n      for(int j=1;;j++)\n      {\n          scanf(\"%d\",&map[i][j]);\n          if(map[i][j]==0) break;\n          cnt[map[i][j]]++;\n      }\n}\n\nvoid change(int &a,int &b){int tmp=a;a=b;b=tmp;}\n\nvoid down()\n{\n    int tmp[10];\n    for(int i=1;i<=5;i++)\n    {\n        int cnt=1;\n         for(int j=1;j<=7;j++)\n         {\n             if(map[i][j])\n               tmp[cnt++]=map[i][j];\n             map[i][j]=0;\n        }  \n         for(int j=1;j<=cnt-1;j++)\n          map[i][j]=tmp[j];\n    }\n    \n}\n\nint vis[maxn][maxn];\nbool dfs(int x,int y,int &cnt,int st)\n{\n    vis[x][y]=1;\n    for(int i=0;i<4;i++)\n    {\n        int nx=x+dx[i],ny=y+dy[i];\n        if(map[nx][ny]&&map[nx][ny]==st&&!vis[nx][ny])\n        {\n            int tmp=map[nx][ny];\n            map[nx][ny]=0;\n            vis[nx][ny]=1;\n            dfs(nx,ny,++cnt,st);\n            vis[nx][ny]=0;\n            if(cnt<3) \n            {\n                map[nx][ny]=tmp;\n            }\n        }\n    }\n    vis[x][y]=0;\n    if(cnt<3)return false;\n    return true;\n}\n\nint can[maxn][maxn];\nbool clean()\n{\n    memset(can,0,sizeof(can));\n    int p=0;\n    for(int i=1;i<=5;i++)\n      for(int j=1;j<=7-2;j++)\n        if(map[i][j]&&map[i][j]==map[i][j+1]&&map[i][j]==map[i][j+2])\n        {\n            p=1;\n            int tmp=j+3;\n            can[i][j]=can[i][j+1]=can[i][j+2]=1;\n              while(tmp<=7&&map[i][tmp]==map[i][j]) \n            {\n                can[i][tmp]=1;tmp++;\n            }\n        }\n    for(int j=1;j<=7;j++)\n      for(int i=1;i<=5-2;i++)  \n        if(map[i][j]&&map[i][j]==map[i+1][j]&&map[i+2][j]==map[i][j])\n        {\n            p=1;\n            int tmp=i+3;\n            can[i][j]=can[i+1][j]=can[i+2][j]=1;\n              while(tmp<=5&&map[tmp][j]==map[i][j]) \n            {\n                can[tmp][j]=1;tmp++;\n            }\n        }\n    if(!p) return false;\n    for(int i=1;i<=5;i++)\n      for(int j=1;j<=7;j++)\n        if(can[i][j])\n          map[i][j]=0;\n    return true;\n}\n\nvoid move_block(int ii,int jj,int wh)\n{\n    change(map[ii+wh][jj],map[ii][jj]);\n    for(;;){\n        down();\n        if(!clean()) break;\n    }\n}\n\nint check()\n{\n    int ok=1;\n    for(int i=1;i<=5;i++)\n      for(int j=1;j<=7;j++)\n        if(map[i][j]) ok=0;\n    return ok;\n}\n\nbool solve(int d)\n{\n    int mm[maxn][maxn];\n    if(d>n) \n    {\n        do{\n            down();\n        }while(clean());\n        if(check()) return true;\n        return false;\n    }\n    int p=1;\n    for(int i=1;i<=5;i++)\n    {\n        for(int j=1;j<=7;j++)\n          if(map[i][j]!=0)\n          {\n              p=0; \n            if(i<5)\n            {    \n                memcpy(mm,map,sizeof(map));\n                x[d]=i;y[d]=j;\n                ins[d]=1;\n                move_block(i,j,1);\n                if(!solve(d+1)) \n                {\n                    memcpy(map,mm,sizeof(mm));\n                      x[d]=y[d]=ins[d]=0;\n                }\n                else\n                {\n                    return true;\n                }\n            }\n            if(i>1&&map[i-1][j]==0) \n            {\n                memcpy(mm,map,sizeof(map));\n                x[d]=i;y[d]=j;\n                ins[d]=-1;\n                  move_block(i,j,-1);\n                  if(solve(d+1)) return true;\n                  else\n                  {\n                      memcpy(map,mm,sizeof(mm));\n                      x[d]=y[d]=ins[d]=0;\n                }\n            }\n          }\n    }\n    if(p) return true;\n    return false;\n}\n\nvoid print_ans()\n{\n    for(int i=1;i<=n;i++)\n      printf(\"%d %d %d\\n\",x[i]-1,y[i]-1,ins[i]);\n}\n\nint main()\n{\n    init_data();\n     if(solve(1)) print_ans();\n    else printf(\"-1\");\n    return 0;\n}\n\n```",
        "postTime": 1449465485,
        "uid": 11280,
        "name": "QWsin",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1312 \u3010Mayan\u6e38\u620f\u3011"
    },
    {
        "content": "```\n#include<iostream>\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int maxn=10;\nint step;\nint f[maxn][maxn],b[maxn][maxn][maxn],g[maxn][maxn];\n/*\n    int f[6][3],b[6][6][8],g[6][8];\n    \uff01\uff01\uff01\u9519\u8bef\u793a\u8303\n         \u5f00\u6570\u7ec4\u4e0d\u8981\u541d\u556c\uff0c\u5426\u5219\u5f88\u5bb9\u6613\u9519 \n*/\n//f\u6570\u7ec4\u8868\u793a\u7b54\u6848\u6bcf\u4e00\u6b65\u7684\u60c5\u51b5\uff0c\u4f8b\u5982f[2][0],f[2][1]\u8868\u793a\u8981\u79fb\u52a8\u7684\u4f4d\u7f6e\u7684\u6a2a\u7eb5\u5750\u6807\uff0cf[2][2]\u8868\u793a\u5411\u5de6\u79fb\uff08-1\uff09\u6216\u5411\u53f3\u79fb\uff081\uff09\n//b\u6570\u7ec4\u8868\u793a\u7b2c\u51e0\u6b65\u65f6\u7684\u60c5\u51b5\uff0c\u4f8b\u5982b[3][i][j]\u8868\u793a\u79fb\u52a8\u4e863\u6b65\u65f6\u7b2ci\u5217\u7b2cj\u884c\u7684\u6570\u5b57\u662f\u51e0 \nvoid update(int k)\n{\n     bool flag=true;\n     while(flag)\n     {\n       flag=false;\n       for(int i=1;i<=5;i++)\n       {\n         int p=1;\n         for(int j=1;j<=7;j++)\n           if(b[k][i][j])\n             b[k][i][p++]=b[k][i][j];\n         while(p<=7)\n           b[k][i][p++]=0; // \u62b9\u6389\u8be5\u5217\u4e0a\u9762\u7684\u6570\u636e\uff1b \n       }\n       /* \n            \u6cd5\u4e00 \n       for(int j=1;j<=7;j++)\n         for(int i=1;i+2<=5;i++)\n         {\n           if(!b[k][i][j])\n             continue;\n           if(b[k][i][j]==b[k][i+1][j] && b[k][i][j]==b[k][i+2][j])\n             flag=g[i][j]=g[i+1][j]=g[i+2][j]=true;\n         }\n       for(int i=1;i<=5;i++)\n         for(int j=1;j+2<=7;j++)\n         {\n           if(!b[k][i][j])\n             break;\n           if(b[k][i][j]==b[k][i][j+1] && b[k][i][j]==b[k][i][j+2])\n             flag=g[i][j]=g[i][j+1]=g[i][j+2]=true;\n         }\n       */\n       //      \u6cd5\u4e8c \n       for(int i=1;i<=5;i++)\n         for(int j=1;j<=7;j++)\n         {\n           if(!b[k][i][j])\n             break; // \u7531\u4e8e\u5df2\u7ecf\u201c\u843d\u201d\u8fc7\u4e86\uff0c\u6240\u4ee5\u5982\u679c\u6ca1\u6709\u6570\u636e\u5c31\u8df3\u51fa \n           if(i<=3 && b[k][i][j]==b[k][i+1][j] && b[k][i][j]==b[k][i+2][j]) //\u5224\u65ad\u6a2a\u5411\u7684\u5408\u5e76\u60c5\u51b5\uff1b \n             flag=g[i][j]=g[i+1][j]=g[i+2][j]=true;  // \u8bbe\u7f6e\u6807\u5fd7 \n           if(j<=5 && b[k][i][j]==b[k][i][j+1] && b[k][i][j]==b[k][i][j+2]) //\u5224\u65ad\u7eb5\u5411\u7684\u5408\u5e76\u60c5\u51b5\uff1b \n             flag=g[i][j]=g[i][j+1]=g[i][j+2]=true;\n         }\n       for(int i=1;i<=5;i++)\n         for(int j=1;j<=7;j++)\n           if(g[i][j])\n             b[k][i][j]=g[i][j]=0;\n     }\n}\nbool dfs(int k)\n{\n     for(int i=1;i<=5;i++)\n       for(int j=1;j<=7;j++)\n         b[k][i][j]=b[k-1][i][j];\n     //\u5c06\u7b2ci\u6b65\u7684\u60c5\u51b5\u5148\u590d\u5236\u4e3a\u4e0a\u4e00\u6b65\u5411\u4e0b\u6df1\u641c\u4e00\u6b21\u7684\u60c5\u51b5 \n     update(k);//\u6309\u7167\u89c4\u5219\u8fdb\u884c\u6d88\u9664\u65b9\u5757 \n     if(k>step)\n     {\n       //\u4e3b\u7a0b\u5e8f\u91cc\u4ece\u7b2c\u4e00\u6b65\u5f00\u59cb\u641c\uff0c\u5982\u679c\u641c\u4e86step+1\u6b21\uff0c\u5c31\u4e0d\u8981\u7ee7\u7eed\u4e86 \n       for(int i=1;i<=5;i++)\n         if(b[k][i][1])\n           return false;\n       //\u5982\u679c\u6709\u67d0\u4e00\u5217\u6ca1\u6709\u6e05\u9664\u5e72\u51c0\uff0c\u8bf4\u660e\u4e0d\u80fd\u6d88\u9664\u5e72\u51c0 \n       return true;\n     }\n     for(int i=1;i<=5;i++)\n       for(int j=1;j<=7;j++)\n         if(b[k][i][j])//\u5982\u679c\u5f53\u524d\u4f4d\u7f6e\u6709\u989c\u8272(\u56e0\u4e3a\u64cd\u4f5c\u5fc5\u987b\u5bf9\u6709\u65b9\u5757\u7684\u4f4d\u7f6e\u64cd\u4f5c)\n         { \n           if(i<5 && b[k][i][j]!=b[k][i+1][j])\n           {\n             swap(b[k][i][j],b[k][i+1][j]);\n             f[k][0]=i;\n             f[k][1]=j;\n             f[k][2]=1;\n             if(dfs(k+1))\n               return true;\n             //\u5982\u679c\u8fd9\u6837\u64cd\u4f5c\u4e00\u6b21\u540e\u4e0b\u4e00\u6b21\u6df1\u641c\u521a\u597d\u6d88\u9664\u4e86\u6240\u6709\u65b9\u5757\uff0c\u5c31return true;\n             //\u4f46\u4e0d\u80fd\u76f4\u63a5return dfs(k+1); \n             //\u56e0\u4e3a\u5373\u4f7f\u8fd9\u6b21\u64cd\u4f5c\u4e0d\u6210\u529f\uff0c\u5e76\u4e0d\u4ee3\u8868\u4ee5\u540e\u6ca1\u673a\u4f1a\u6210\u529f \n             swap(b[k][i][j],b[k][i+1][j]);\n           }\n           /*\n             \u56e0\u4e3a\u9898\u76ee\u8981\u6c42\u64cd\u4f5c1\u4f18\u5148\u4e8e\u64cd\u4f5c-1\n             \u6240\u4ee5\u53ea\u8981\u65e2\u80fd\u64cd\u4f5c1\u53c8\u80fd\u64cd\u4f5c-1\u5f97\u5230\u7684\u60c5\u51b5\u6211\u4eec\u5c31\u7528\u64cd\u4f5c1\u6765\u5b8c\u6210\n             \u800c\u9898\u76ee\u6709\u8ba9\u5b57\u5178\u5e8f\u8f93\u51fa\u7b54\u6848\uff0c\u6211\u4eec\u6b63\u597d\u662f\u6309\u7167i\u4ece\u5c0f\u5230\u5927\u6765\u6df1\u641c\n             \u6240\u4ee5\u6240\u6709\u80fd-1\u64cd\u4f5c\u7684\uff0c\u6bd4\u59824 5 -1\n             \u6211\u4eec\u90fd\u4f1a\u5728\u5b83\u4e4b\u524d\u5148\u679a\u4e3e  3 5 1\uff0c\u6240\u4ee5\u5c31\u4e0d\u7528\u5927\u8303\u56f4\u641c\u7d22-1\u7684\u64cd\u4f5c\u4e86\n             \u9664\u4e86\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\uff1a \n               \u5f53\u67d0\u4e00\u4e2a\u65b9\u5757\u5de6\u8fb9\u662f\u7a7a\u65f6\uff0c\u8fd9\u79cd\u60c5\u51b5\u5728\u4e0a\u9762\u65e0\u6cd5\u75281\u64cd\u4f5c\u5b8c\u6210 \n           \n           */\n           if(i>1 && !b[k][i-1][j])\n           {\n             swap(b[k][i][j],b[k][i-1][j]);\n             f[k][0]=i;\n             f[k][1]=j;\n             f[k][2]=-1;\n             if(dfs(k+1))\n               return true;\n             swap(b[k][i][j],b[k][i-1][j]);\n           }\n         }\n     return false; \n}\nint main()\n{\n    scanf(\"%d\",&step);\n    for(int i=1;i<=5;i++)\n    {\n      int x,j=1;\n      scanf(\"%d\",&x);\n      while(x)\n      {\n        b[0][i][j++]=x;\n        scanf(\"%d\",&x);\n      }\n    }\n    bool flag=dfs(1);\n    if(flag)\n    {\n      for(int i=1;i<=step;i++)\n        printf(\"%d %d %d\\n\",f[i][0]-1,f[i][1]-1,f[i][2]);\n        //\u6ce8\u610f\u9898\u76ee\u8bf4\u5750\u6807\u4ece0\u5f00\u59cb\u6240\u4ee5\u628a\u6a2a\u7eb5\u5750\u6807\u51cf1 \n    }\n    else\n      printf(\"-1\\n\");\n    system(\"pause\");\n    return 0;\n}\n\n```\n",
        "postTime": 1573048130,
        "uid": 148757,
        "name": "wanxiang_zx",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1312 \u3010Mayan\u6e38\u620f\u3011"
    },
    {
        "content": "\u5e73\u6c11AC\uff0c\u7279\u70b9\u53ef\u80fd\u662f\u6a21\u62df\u90e8\u5206\u5bf9\u7801\u529b\u7684\u9700\u6c42\u8f83\u5c0f\uff08\u5b58\u7591\uff09  \n\u9996\u5148\u5b9a\u4e49\u5730\u56fe\uff0c\u65b9\u4fbf\u590d\u5236\u4ee5\u53ca\u4f20\u53c2\n```cpp\nstruct Filed{\n\tint d[10][20];\n\tFiled (){\n\t\tmemset(d,0,sizeof(d));\n\t}\n\tint& operator () (int x,int y){ //\u91cd\u8f7d\u8fd0\u7b97\u7b26\u65b9\u4fbf\u8bbf\u95ee \n\t\treturn d[x+2][y+2]; //\u8bbe\u7f6e\u504f\u79fb\u91cf\u9632\u6b62\u6570\u7ec4\u8d8a\u754c\uff0c\u51cf\u5c11\u5224\u65ad \n\t}\n\tbool isEmpty(){\n\t\tfor(int i=2;i<7;i++){\n\t\t\tif(d[i][2]) return false; //[2]\u662f\u6700\u5e95\u5c42\uff0c\u6700\u5e95\u5c42\u4e3a\u7a7a\u53ef\u5224\u65ad\u6574\u5f20\u56fe\u7a7a \n\t\t}\n\t\treturn true;\n\t}\n};\t\n```\n\n\u7136\u540e\u6a21\u62df\uff0c\u56e0\u4e3a\u81f3\u5c11\u9700\u8981\u4e00\u6b21\u4e0b\u843d\u548c\u6d88\u53bb\u5224\u65ad\u624d\u80fd\u786e\u5b9a\u662f\u5426\u7a33\u5b9a\uff0c\n\u6240\u4ee5stable\u521d\u59cb\u4e3afalse\n```cpp\nFiled update(Filed now, int x, int y, int g){\n\tbool stable=false;  //\u6807\u8bb0\u662f\u5426\u5b8c\u6210 \n\tswap(now(x+g,y),now(x,y));\n\twhile(true){\n\t\t//\u4e0b\u843d\n\t    for(int i=0; i<5; i++){ //\u4ece\u5e95\u5f80\u4e0a\uff0c\u8272\u5757\u60ac\u7a7a\u5c31\u4e0b\u843d\n\t\t\tfor(int j=1; j<7; j++){\n\t\t\t\tif(now(i,j) && !now(i,j-1)){\n\t\t\t\t    stable=false; //\u7528\u4e8e\u68c0\u6d4b\u6d88\u53bb\u540e\u662f\u5426\u65e0\u60ac\u7a7a\n\t\t\t\t\tfor(int k=j-1; k>=0; k--){\n\t\t\t\t\t\tif(now(i,k)) break; \n\t\t\t\t\t\tswap(now(i,k),now(i,k+1));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t    }\n\t    if(stable) break; //\u6d88\u53bb\u540e\u65e0\u60ac\u7a7a\u5219\u5b8c\u6210\n        \n\t    //\u6d88\u53bb\n\t    Filed temp=now; //\u4e0d\u5728\u539f\u56fe\u4e0a\u5220\u5757\uff0c\u9632\u6b62\u9057\u6f0f\n\t    for(int i=0; i<5; i++){\n\t\t\tfor(int j=0; j<7; j++){\n\t\t\t\tif(!now(i,j)) continue;\n\t\t\t\tint cnt=1;\n\t\t\t\tint l,r,u,d;  //\u5de6\u53f3\u4e0a\u4e0b \n\t\t\t\t\n\t\t\t\tfor(r=1; now(i+r-1,j)==now(i+r,j); r++) cnt++;\n\t\t\t\tfor(l=-1; now(i+l+1,j)==now(i+l,j); l--) cnt++;\n\t\t\t\tif(cnt>=3){\n\t\t\t\t\tfor(int k=i+l+1; k<=i+r-1; k++) temp(k,j)=0;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcnt=1;\n\t\t\t\tfor(u=1; now(i,j+u-1)==now(i,j+u); u++) cnt++;\n\t\t\t\tfor(d=-1; now(i,j+d+1)==now(i,j+d); d--) cnt++;\n\t\t\t\tif(cnt>=3){\n\t\t\t\t\tfor(int k=j+d+1; k<=j+u-1; k++) temp(i,k)=0;\n\t\t\t\t}\n\t\t\t}\n\t    }\n\t    now=temp;\n\t    stable=true;\n\t}\n\treturn now;\n}\n```\n\n\n### \u5b8c\u6574\u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<vector>\n\nusing namespace std;\n\nint n;\nstruct Filed{\n\tint d[10][20];\n\tFiled (){\n\t\tmemset(d,0,sizeof(d));\n\t}\n\tint& operator () (int x,int y){ //\u91cd\u8f7d\u8fd0\u7b97\u7b26\u65b9\u4fbf\u8bbf\u95ee \n\t\treturn d[x+2][y+2]; //\u8bbe\u7f6e\u504f\u79fb\u91cf\u9632\u6b62\u6570\u7ec4\u8d8a\u754c\uff0c\u51cf\u5c11\u5224\u65ad \n\t}\n\tbool isEmpty(){\n\t\tfor(int i=2;i<7;i++){\n\t\t\tif(d[i][2]) return false; //[2]\u5b9e\u9645\u662f\u6700\u6ef4\u5c42\uff0c\u6700\u5e95\u5c42\u4e3a\u7a7a\u53ef\u5224\u65ad\u6574\u5f20\u56fe\u7a7a \n\t\t}\n\t\treturn true;\n\t}\n};\t\n\ninline void swap (int &a,int &b){\n\tint t=a;\n\ta=b;\n\tb=t;\n}\nFiled update(Filed now, int x, int y, int g){\n\tbool stable=false;  //\u6807\u8bb0\u662f\u5426\u5b8c\u6210 \n\tswap(now(x+g,y),now(x,y));\n\twhile(true){\n\t\t//\u4e0b\u843d\n\t    for(int i=0; i<5; i++){\n\t\t\tfor(int j=1; j<7; j++){\n\t\t\t\tif(now(i,j) && !now(i,j-1)){\n\t\t\t\t    stable=false;\n\t\t\t\t\tfor(int k=j-1; k>=0; k--){\n\t\t\t\t\t\tif(now(i,k)) break; \n\t\t\t\t\t\tswap(now(i,k),now(i,k+1));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t    }\n\t    if(stable) break;\n\t    //\u6d88\u53bb\n\t    Filed temp=now;\n\t    for(int i=0; i<5; i++){\n\t\t\tfor(int j=0; j<7; j++){\n\t\t\t\tif(!now(i,j)) continue;\n\t\t\t\tint cnt=1;\n\t\t\t\tint l,r,u,d;  //\u5de6\u53f3\u4e0a\u4e0b \n\t\t\t\t\n\t\t\t\tfor(r=1; now(i+r-1,j)==now(i+r,j); r++) cnt++;\n\t\t\t\tfor(l=-1; now(i+l+1,j)==now(i+l,j); l--) cnt++;\n\t\t\t\tif(cnt>=3){\n\t\t\t\t\tfor(int k=i+l+1; k<=i+r-1; k++) temp(k,j)=0;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcnt=1;\n\t\t\t\tfor(u=1; now(i,j+u-1)==now(i,j+u); u++) cnt++;\n\t\t\t\tfor(d=-1; now(i,j+d+1)==now(i,j+d); d--) cnt++;\n\t\t\t\tif(cnt>=3){\n\t\t\t\t\tfor(int k=j+d+1; k<=j+u-1; k++) temp(i,k)=0;\n\t\t\t\t}\n\t\t\t}\n\t    }\n\t    now=temp;\n\t    stable=true;\n\t}\n\treturn now;\n}\n\nstruct Opt{\n\tint x,y,g;\n};\nvector<Opt> ans;\nbool dfs(int u, Filed now){\n\tif(u==n){\n\t\tif(now.isEmpty()) return true;\n\t\treturn false;\n\t}\n\tfor(int i=0; i<5; i++){\n\t\tfor(int j=0; j<7; j++){\n\t\t\tif(now(i,j)){\n\t\t\t\tif(i<4 && now(i,j)!=now(i+1,j)){\n\t\t\t\t\tans.push_back({i,j,1});\n\t\t\t\t\tif(dfs(u+1,update(now,i,j,1))) return true;\t\n\t\t\t\t\tans.pop_back();\n\t\t\t\t}\n\t\t\t\tif(i>0 && !now(i-1,j)){\n\t\t\t\t\tans.push_back({i,j,-1});\n\t\t\t\t\tif(dfs(u+1,update(now,i,j,-1))) return true;\t\n\t\t\t\t\tans.pop_back();\n\t\t\t    }\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nint main(){\n\tFiled s;\n\tscanf(\"%d\",&n);\n\tfor(int i=0;i<5;i++){\n\t    for(int j=0;;j++){\n\t\t\tscanf(\"%d\",&s(i,j));\n\t\t\tif(!s(i,j)) break;\n\t    }\n\t}\n\tif(dfs(0,s)){\n\t\tfor(int i=0;i<ans.size();i++){\n\t\t\tprintf(\"%d %d %d\\n\",ans[i].x,ans[i].y,ans[i].g);\n\t\t}\n\t}else{\n\t\tprintf(\"-1\");\n\t}\n\treturn 0;\n} \n```\n\n",
        "postTime": 1562763856,
        "uid": 51786,
        "name": "ZIXT",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1312 \u3010Mayan\u6e38\u620f\u3011"
    },
    {
        "content": "#  _**P1312 Mayan\u6e38\u620f**_\n### \u5f88\u663e\u7136\uff0c\u8fd9\u4e00\u9898\u6570\u636e\u8303\u56f4\u5f88\u5c0f\uff0c\u662f\u4e2a\u641c\u7d22\u9898\u3002\u518d\u770b\u662f\u4e2a\u6e38\u620f\uff0c\u53ef\u80fd\u8981\u7528\u5230\u7b80\u5355\u7684\u6a21\u62df\u6765\u6a21\u62df\u6bcf\u4e00\u6b65\u7684\u79fb\u52a8\u3002\n#### \u4e8e\u662f\u5927\u65b9\u5411\u5c31\u6709\u4e86\uff1a\n## \u6df1\u641c + \u6a21\u62df \uff01\n\n------------\n\u5e38\u91cf\u5b9a\u4e49\uff1a\n```cpp\n#define SIZE 10\t//n\u503c\u8303\u56f4\n#define LINE 5\t//\u884c\uff08\u56e0\u4e3a\u8f93\u5165\u6570\u636e\u4e2dx\u3001y\u7ffb\u8f6c\u4e86\uff09\n#define ROW 7\t//\u5217\n#define LNG 3\t//\u6d88\u9664\u6240\u6ee1\u8db3\u7684\u6700\u5c0f\u957f\u5ea6\n```\n------------\n\n#### \u9996\u5148\uff0c\u4e3a\u4e86\u65b9\u4fbf\u64cd\u4f5c\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a \u7c7b\uff1a\n```cpp\nclass Mayan\n{\nprivate:\n\tint board[LINE][ROW];\t//\u6e38\u620f\u68cb\u76d8\n\tbool flag[LINE][ROW];\t//\u6807\u8bb0\u6570\u7ec4\uff0c\u6d88\u9664\u65b9\u5757\u65f6\u7528\u5230\n    ...\npublic:\n\t...\n};\n```\n#### \u7136\u540e\uff0c\u6211\u4eec\u8003\u8651\u6e38\u620f\u8fc7\u7a0b\u4e2d\u7684\u8fc7\u7a0b(\u5199\u5728\u7c7b\u4e2d)\uff1a\n1. \u521d\u59cb\u5316\n```cpp\n\tvoid initialize()\t//\u8bfb\u5165\u521d\u59cb\u68cb\u76d8\n\t{\n\t\tmemset(board, 0, sizeof(board));\n\t\tfor (register int i = 0; i < LINE; i++)\n\t\t{\n\t\t\tfor (register int j = 0; ; j++)\n\t\t\t{\n\t\t\t\tscanf(\"%d\", &board[i][j]);\n\t\t\t\tif (board[i][j] == 0)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n```\n2. \u83b7\u5f97\u67d0\u4e00\u4f4d\u7f6e\u4e0a\u7684\u989c\u8272\n```cpp\n\tint color(int x, int y)\n\t{\n\t\treturn board[x][y];\n\t}\n```\n3. \u66f4\u65b0\u68cb\u76d8\n```cpp\n\tvoid fall(int x, int y)\t//\u65b9\u5757\u4e0b\u843d\n\t{\n\t\tint ny = y - 1;\n\t\twhile (ny >= 0 && board[x][ny] == 0)\n\t\t\tny--;\n\t\tny++;\n\t\tswap(board[x][ny], board[x][y]);\n\t}\n\tvoid update()\n\t{\n\t\tfor (register int i = 0; i < LINE; i++)\n\t\t{\n\t\t\tfor (register int j = 1; j < ROW; j++)\t//\u6700\u5e95\u90e8\u7684\u65b9\u5757\u4e0d\u7528\u8003\u8651\u4e0b\u843d\n\t\t\t{\n\t\t\t\tif (board[i][j] != 0)\n\t\t\t\t\tfall(i, j);\n\t\t\t}\n\t\t}\n\t}\n```\n4. \u68c0\u67e5\u662f\u5426\u6709\u65b9\u5757\u53ef\u4ee5\u6e05\u9664\n```cpp\n\tbool check()\n\t{\n\t\tbool rv = false;\n\t\t\n\t\tmemset(flag, false, sizeof(flag));\n\t\tfor (register int x = 0; x < LINE; x++)\n\t\t{\n\t\t\tfor (register int y = 0; y < ROW; y++)\n\t\t\t{\n\t\t\t\tif (board[x][y] == 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tint e1, e2;\t//\u7aef\u70b9\n\t\t\t\tint og = board[x][y];\t//original color\n\t\t\t\t//\u6c34\u5e73\u65b9\u5411\n\t\t\t\te1 = e2 = x;\n\t\t\t\twhile (e1 >= 0 && board[e1][y] == og)\n\t\t\t\t\te1--;\n\t\t\t\te1++;\n\t\t\t\twhile (e2 < LINE && board[e2][y] == og)\n\t\t\t\t\te2++;\n\t\t\t\te2--;\n\t\t\t\tif (e2 - e1 + 1 >= LNG)\t//length >= 3\n\t\t\t\t{\n\t\t\t\t\trv = true;\t//\u6709\u65b9\u5757\u53ef\u4ee5\u6e05\u9664\n\t\t\t\t\tfor (register int i = e1; i <= e2; i++)\n\t\t\t\t\t\tflag[i][y] = true;\n\t\t\t\t}\n\t\t\t\t//\u7ad6\u76f4\u65b9\u5411\n\t\t\t\te1 = e2 = y;\t//e1 below e2\n\t\t\t\twhile (e1 >= 0 && board[x][e1] == og)\n\t\t\t\t\te1--;\n\t\t\t\te1++;\n\t\t\t\twhile (e2 < ROW && board[x][e2] == og)\n\t\t\t\t\te2++;\n\t\t\t\te2--;\n\t\t\t\tif (e2 - e1 + 1 >= LNG)\t//length >= 3\n\t\t\t\t{\n\t\t\t\t\trv = true;\n\t\t\t\t\tfor (register int i = e1; i <= e2; i++)\n\t\t\t\t\t\tflag[x][i] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn rv;\n\t}\n\tvoid clear()\n\t{\n\t\tfor (register int i = 0; i < LINE; i++)\n\t\t{\n\t\t\tfor (register int j = 0; j < ROW; j++)\n\t\t\t{\n\t\t\t\tif (flag[i][j])\n\t\t\t\t\tboard[i][j] = 0;\n\t\t\t}\n\t\t}\n\t\tupdate();\t//\u8ba9\u60ac\u7a7a\u65b9\u5757\u4e0b\u843d\n\t}\n```\n5. \u79fb\u52a8\u65b9\u5757\n```cpp\n\tvoid move(int x, int y, int g)\t//g\u4e3a\u79fb\u52a8\u65b9\u5411\uff0cg = 1\u5411\u53f3\u79fb\uff0cg = -1\u5411\u5de6\u79fb\n\t{\n\t\t//default can move\n\t\tswap(board[x][y], board[x+g][y]);\n\t\tupdate();\n\t\twhile (check())\n\t\t\tclear();\n\t}\n```\n6. \u5224\u65ad\u6e38\u620f\u662f\u5426\u7ed3\u675f\n```cpp\n\tbool empty()\n\t{\n\t\tfor (register int i = 0, j = 0; i < LINE; i++)\n\t\t{\n\t\t\tif (board[i][j] != 0)\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n```\n7. \u8fd0\u7b97\u7b26\u91cd\u8f7d(\u8f85\u52a9)\n\t\n    \u56e0\u4e3a\u6d89\u53ca\u5230\u56de\u6eaf\u4e0e\u8d4b\u503c\uff0c\u91cd\u8f7d\u8fd0\u7b97\u7b26\u4f1a\u8ba9\u5176\u66f4\u52a0\u4fbf\u6377\n```cpp\n\tMayan operator=(const Mayan& m)\n\t{\n\t\tfor (register int i = 0; i < LINE; i++)\n\t\t{\n\t\t\tfor (register int j = 0; j < ROW; j++)\n\t\t\t{\n\t\t\t\tthis -> board[i][j] = m.board[i][j];\n\t\t\t\tthis -> flag[i][j] = m.flag[i][j];\n\t\t\t}\n\t\t}\n\t\treturn *this;\n\t};\n```\n#### \u63a5\u4e0b\u6765\uff0c\u5c31\u662f\u641c\u7d22\u4e86\uff1a\n\t\u7531\u4e8e\u72b6\u6001\u592a\u591a\uff0c\u5e7f\u641c\u50a8\u5b58\u5185\u5b58\u592a\u5927\uff0c\u6240\u4ee5\u8fd9\u91cc\u4f7f\u7528\u6df1\u641c\u3002\n\n\t\u5176\u5b9e\u8fd9\u9053\u9898\u6709\u5f88\u591a\u53ef\u4ee5\u526a\u679d\u7684\u5730\u65b9\uff0c\u4f46\u662f\u597d\u50cf\u4e0d\u9700\u8981\u526a\u90a3\u4e48\u591a\uff0c\u8fd9\u91cc\u6211\u53ea\u7528\u51e0\u4e2a\u57fa\u672c\u7684\u526a\u679d\u3002\n\n\t1. \u76f8\u540c\u989c\u8272\u4e0d\u4ea4\u6362;\n\t2. \u65b9\u5757\u53ea\u5f80\u53f3\u79fb(\u5de6\u79fb\u53ef\u4ee5\u88ab\u5de6\u8fb9\u65b9\u5757\u53f3\u79fb\u66ff\u6362)\u3002\n\n\t\u4e8e\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\u5982\u4e0b\u51fd\u6570\uff1a\n```cpp\nvoid dfs(int step)\n{\n\tif (step > n)\n\t{\n\t\tif (mayan.empty())\n\t\t{\n\t\t\tanswer();\t//\u8f93\u51fa\u7ed3\u679c\n\t\t\texit(0);\t//\u76f4\u63a5\u9000\u51fa\n\t\t}\n\t\treturn ;\t//\u89c4\u5b9a\u6b65\u7ed3\u675f\u540e\uff0c\u6e38\u620f\u6ca1\u6709\u7ed3\u675f\uff0c\u65e0\u89e3\n\t}\n\tfor (register int i = 0; i < LINE - 1; i++)\t//only move to right\n\t{\n\t\tfor (register int j = 0; j < ROW; j++)\n\t\t{\n\t\t\tif (mayan.color(i, j) == mayan.color(i + 1, j))\t//\u76f8\u540c\u989c\u8272\u4e0d\u4ea4\u6362\n\t\t\t\tcontinue;\n\t\t\tans[step][1] = j;\n\t\t\tif (mayan.color(i, j) == 0)\t//\u7a7a\u65b9\u5757\u53f3\u79fb\u5373\u53f3\u8fb9\u7684\u6709\u8272\u65b9\u5757\u5de6\u79fb\n\t\t\t{\n\t\t\t\tans[step][0] = i + 1;\n\t\t\t\tans[step][2] = -1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tans[step][0] = i;\n\t\t\t\tans[step][2] = 1;\n\t\t\t}\n\t\t\tMayan temp = mayan;\n\t\t\tmayan.move(i, j, 1);\n\t\t\tdfs(step+1);\n\t\t\tmayan = temp;\t//\u56de\u6eaf\n\t\t}\n\t}\n}\n```\n\u6700\u540e\uff0c\n## \u5927\u529f\u544a\u6210\uff01\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\t//exit()\n#include <algorithm>\n#define SIZE 10\n#define LINE 5\n#define ROW 7\n#define LNG 3\nusing namespace std;\nclass Mayan\n{\nprivate:\n\tint board[LINE][ROW];\n\tbool flag[LINE][ROW];\n\t\n\tvoid fall(int x, int y)\n\t{\n\t\tint ny = y - 1;\n\t\twhile (ny >= 0 && board[x][ny] == 0)\n\t\t\tny--;\n\t\tny++;\n\t\tswap(board[x][ny], board[x][y]);\n\t}\n\tvoid update()\n\t{\n\t\tfor (register int i = 0; i < LINE; i++)\n\t\t{\n\t\t\tfor (register int j = 1; j < ROW; j++)\t//brick on the bottom can't fall\n\t\t\t{\n\t\t\t\tif (board[i][j] != 0)\n\t\t\t\t\tfall(i, j);\n\t\t\t}\n\t\t}\n\t}\n\tbool check()\n\t{\n\t\tbool rv = false;\n\t\t\n\t\tmemset(flag, false, sizeof(flag));\n\t\tfor (register int x = 0; x < LINE; x++)\n\t\t{\n\t\t\tfor (register int y = 0; y < ROW; y++)\n\t\t\t{\n\t\t\t\tif (board[x][y] == 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tint e1, e2;\t//endpoint\n\t\t\t\tint og = board[x][y];\t//original color\n\t\t\t\t//horizontal\n\t\t\t\te1 = e2 = x;\n\t\t\t\twhile (e1 >= 0 && board[e1][y] == og)\n\t\t\t\t\te1--;\n\t\t\t\te1++;\n\t\t\t\twhile (e2 < LINE && board[e2][y] == og)\n\t\t\t\t\te2++;\n\t\t\t\te2--;\n\t\t\t\tif (e2 - e1 + 1 >= LNG)\t//length >= 3\n\t\t\t\t{\n\t\t\t\t\trv = true;\n\t\t\t\t\tfor (register int i = e1; i <= e2; i++)\n\t\t\t\t\t\tflag[i][y] = true;\n\t\t\t\t}\n\t\t\t\t//vertical\n\t\t\t\te1 = e2 = y;\t//e1 below e2\n\t\t\t\twhile (e1 >= 0 && board[x][e1] == og)\n\t\t\t\t\te1--;\n\t\t\t\te1++;\n\t\t\t\twhile (e2 < ROW && board[x][e2] == og)\n\t\t\t\t\te2++;\n\t\t\t\te2--;\n\t\t\t\tif (e2 - e1 + 1 >= LNG)\t//length >= 3\n\t\t\t\t{\n\t\t\t\t\trv = true;\n\t\t\t\t\tfor (register int i = e1; i <= e2; i++)\n\t\t\t\t\t\tflag[x][i] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn rv;\n\t}\n\tvoid clear()\n\t{\n\t\tfor (register int i = 0; i < LINE; i++)\n\t\t{\n\t\t\tfor (register int j = 0; j < ROW; j++)\n\t\t\t{\n\t\t\t\tif (flag[i][j])\n\t\t\t\t\tboard[i][j] = 0;\n\t\t\t}\n\t\t}\n\t\tupdate();\n\t}\npublic:\n\tvoid initialize()\n\t{\n\t\tmemset(board, 0, sizeof(board));\n\t\tfor (register int i = 0; i < LINE; i++)\n\t\t{\n\t\t\tfor (register int j = 0; ; j++)\n\t\t\t{\n\t\t\t\tscanf(\"%d\", &board[i][j]);\n\t\t\t\tif (board[i][j] == 0)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tint color(int x, int y)\n\t{\n\t\treturn board[x][y];\n\t}\n\tvoid move(int x, int y, int g)\t//g is the direction, g = 1 || -1\n\t{\n\t\t//default can move\n\t\tswap(board[x][y], board[x+g][y]);\n\t\tupdate();\n\t\twhile (check())\n\t\t\tclear();\n\t}\n\tbool empty()\n\t{\n\t\tfor (register int i = 0, j = 0; i < LINE; i++)\n\t\t{\n\t\t\tif (board[i][j] != 0)\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\t\n\tMayan operator=(const Mayan& m)\n\t{\n\t\tfor (register int i = 0; i < LINE; i++)\n\t\t{\n\t\t\tfor (register int j = 0; j < ROW; j++)\n\t\t\t{\n\t\t\t\tthis -> board[i][j] = m.board[i][j];\n\t\t\t\tthis -> flag[i][j] = m.flag[i][j];\n\t\t\t}\n\t\t}\n\t\treturn *this;\n\t};\n};\nMayan mayan;\nint ans[SIZE][3];\nint n;\nvoid dfs(int step);\ninline void answer();\nint main()\n{\n\tscanf(\"%d\", &n);\n\tmayan.initialize();\n\tdfs(1);\n\tprintf(\"-1\\n\"); //\u65e0\u89e3dfs()\u6b63\u5e38\u9000\u51fa\n\t\n\treturn 0;\n}\nvoid dfs(int step)\n{\n\tif (step > n)\n\t{\n\t\tif (mayan.empty())\n\t\t{\n\t\t\tanswer();\n\t\t\texit(0);\n\t\t}\n\t\treturn ;\n\t}\n\tfor (register int i = 0; i < LINE - 1; i++)\t//only move to right\n\t{\n\t\tfor (register int j = 0; j < ROW; j++)\n\t\t{\n\t\t\tif (mayan.color(i, j) == mayan.color(i + 1, j))\n\t\t\t\tcontinue;\n\t\t\tans[step][1] = j;\n\t\t\tif (mayan.color(i, j) == 0)\t//current is 0\n\t\t\t{\n\t\t\t\tans[step][0] = i + 1;\n\t\t\t\tans[step][2] = -1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tans[step][0] = i;\n\t\t\t\tans[step][2] = 1;\n\t\t\t}\n\t\t\tMayan temp = mayan;\n\t\t\tmayan.move(i, j, 1);\n\t\t\tdfs(step+1);\n\t\t\tmayan = temp;\n\t\t}\n\t}\n}\ninline void answer()\n{\n\tfor (register int i = 1; i <= n; i++)\n\t{\n\t\tfor (register int j = 0; j < 3; j++)\n\t\t\tprintf(\"%d \", ans[i][j]);\n\t\tputchar('\\n');\n\t}\n}\n```\n",
        "postTime": 1562039725,
        "uid": 160002,
        "name": "Turmoil",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1312 \u3010Mayan\u6e38\u620f\u3011"
    },
    {
        "content": "\u4e07\u5723\u8282\u5feb\u4e50\uff01 TREAT OR DIG\uff01\n\n![](  https://cdn.luogu.com.cn/upload/pic/41183.png  )\n\n------------\n\u4eca\u5929\u8111\u62bd\uff0c\u5199\u4e86\uff0c[ P1312 Mayan\u6e38\u620f](https://www.luogu.org/problemnew/show/P1312)\n\u3002\n\n\u529d\u5927\u5bb6\u5728\u5199\u6b64\u9898\u524d\u786e\u5b9a\u65f6\u95f4\u5145\u8db3\uff01\uff01\uff01\n\n------------\n\u7b97\u6cd5\u601d\u8def\uff1a\n\n1 . \u5f3a\u884cDFS\uff0c\u53ea\u4f20\u9012\u5df2\u7ecf\u8d70\u4e86\u7684\u6b65\u6570\uff0c\u6bcf\u4e00\u5c42DFS\u5185\u7528\u6570\u7ec4\u5b58\u4e0b\u5f53\u524d\u60c5\u51b5\u7684\u56fe\u7684\u60c5\u51b5\u3002\n\n```\nvoid dfs(int step){//have_step\n\t\n\tint now[6][8];\n\t\n\tFOR(i,1,5)\n\t\tFOR(j,1,7)\n\t\t\tnow[i][j]=M[i][j];\n\tif(check()){\n\t\t\tprint_ans(step);\n\t\t\texit(0);\n\t\t\treturn;\n\t\t}\n\tif(step==n){\n\t\treturn;\n\t}\n\t//\u5176\u4ed6\u64cd\u4f5c\n    //......\n\treturn;\n\t\n}\n```\n\n2 . \u6bcf\u6b21\u8fdb\u884c\u5de6\u79fb\u53f3\u79fb\u60c5\u51b5\u540e\u8fdb\u884cfall\u64cd\u4f5c\uff0c\u7136\u540eupdate\uff0c\u7136\u540e\u518dfall\uff0c\u518dupdate\uff0c\u76f4\u5230\u6ca1\u6709\u53ef\u4ee5update\u540e\u4f20\u9012\u5230\u4e0b\u4e00\u5c42\u3002\u6ce8\uff1aupdate\u7ec6\u5219\uff1a\u53ea\u8981\u5b58\u5728\u4e09\u4e2a\u8fde\u5728\u4e00\u8d77\uff0c\u5c31\u628aclean\u503c\u8d4b\u4e3a1\u6700\u540efall\u524d\u6e05\u4e00\u4e0b\u5f53\u524d\u7684clean\u3002\n\n```\nvoid fall(){\n\tfor(int i=1;i<=5;i++){\n\t\tfor(int j=6;j>=1;j--)\n\t\t\tif(M[i][j]==0){\n\t\t\t\tfor(int y=j;y<=6;y++)\n\t\t\t\t\tM[i][y]=M[i][y+1];\n\t\t\t\tM[i][7]=0;\n\t\t\t}\n\t}\n\treturn;\n}\nvoid update(){\n\tmemset(clean,0,sizeof(clean));\n\tbool next=false;\n\tFOR(i,1,5)\n\t\tFOR(j,1,7)\n\t\t\tif(M[i][j]!=0){\n\t\t\t\t//cout<<i<<\" \"<<j<<endl;\n\t\t\t\tint cnt=0; int nowx=i;int nowy=j; int col=M[i][j];\n\t\t\t\t//---heng\n\t\t\t\twhile(nowy<=7&&M[nowx][nowy]==col){\n\t\t\t\t\tcnt++;\n\t\t\t\t\tnowy++;\n\t\t\t\t}\n\t\t\t\tif(cnt>=3){\n\t\t\t\t\tnowx=i; nowy=j; next=true;\n\t\t\t\t\twhile(nowy<=7&&M[nowx][nowy]==col){\n\t\t\t\t\t\tclean[nowx][nowy]=1;\n\t\t\t\t\t\tnowy++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//---shu\n\t\t\t\tcnt=0; nowx=i; nowy=j;\n\t\t\t\twhile(nowx<=5&&M[nowx][nowy]==col){\n\t\t\t\t\tcnt++;\n\t\t\t\t\tnowx++;\n\t\t\t\t}\n\t\t\t\tif(cnt>=3){\n\t\t\t\t\tnowx=i; nowy=j; next=true;\n\t\t\t\t\twhile(nowx<=5&&M[nowx][nowy]==col){\n\t\t\t\t\t\tclean[nowx][nowy]=1;\n\t\t\t\t\t\tnowx++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\tFOR(i,1,5)\n\t\tFOR(j,1,7)\n\t\t\tif(clean[i][j]==1)\n\t\t\t\tM[i][j]=0;\n\t\n\tfall();\n\t//print();\n\tif(next==false)\n\t\treturn;\n\tupdate();\n\t\n\treturn;\n}\n```\n\n3 . \u597d\u7684\uff0c\u8fd9\u6837\u57fa\u7840\u64cd\u4f5c\u5c31\u5b8c\u6210\u4e86\uff0cDFS\u7684\u7ec6\u5219\u4e3b\u8981\u4e3a\u5148\u505a1\uff0c\u540e\u505a-1\uff0c\u5176\u4e2d\u6709\u4e24\u4e2a\u526a\u679d\uff1a\n     a\uff09\u505a1\u64cd\u4f5c\u65f6\uff0c\u4ea4\u6362\u4e24\u4e2a\u65b9\u5757\u989c\u8272\u4e0d\u540c\u3002\n     b\uff09\u505a-1\u64cd\u4f5c\u65f6\uff0c\u53e6\u4e00\u4e2a\u65b9\u5757\u5fc5\u987b\u4e3a\u7a7a\u3002\uff08\u4e0d\u7136\u80af\u5b9a\u4e0d\u5982\u505a1\u4f18\uff09\n\n```\nFOR(i,1,5)\n\tFOR(j,1,7)\n\t\tif(M[i][j]!=0){\n\t\t\t//------1----------\n\t\t\tif(i<5&&M[i][j]!=M[i+1][j]){\n\t\t\tint f=M[i][j]; M[i][j]=M[i+1][j]; M[i+1][j]=f;\n\t\t\tfall();\n\t\t\tupdate();\n\t\t\tans[step].x=i-1; ans[step].y=j-1; ans[step].dic=1;\n\t\t\tdfs(step+1);\n//\t\t\tif(ok){\n//\t\t\t\t//cout<<i-1<<\" \"<<j-1<<\" 1\"<<endl;\n//\t\t\t\tans_cnt++;\n//\t\t\t\tans[ans_cnt].x=i-1; ans[ans_cnt].y=j-1; ans[ans_cnt].dic=1;\n//\t\t\t\treturn;\n//\t\t\t}\n\t\t\tFOR(x,1,5)\n\t\t\t\tFOR(y,1,7)\n\t\t\t\t\tM[x][y]=now[x][y];\n\t\t\t}\n\t\t\tif(i>1&&M[i-1][j]==0){\n\t\t\tint f=M[i][j]; M[i][j]=M[i-1][j]; M[i-1][j]=f;\n\t\t\tfall();\n\t\t\tupdate();\n\t\t\tans[step].x=i-1; ans[step].y=j-1; ans[step].dic=-1;\n\t\t\tdfs(step+1);\n\t\t\tif(ok){\n\t\t\t\t//cout<<i-1<<\" \"<<j-1<<\" 2\"<<endl;\n\t\t\t\tans_cnt++;\n\t\t\t\tans[ans_cnt].x=i-1; ans[ans_cnt].y=j-1; ans[ans_cnt].dic=-1;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tFOR(x,1,5)\n\t\t\t\tFOR(y,1,7)\n\t\t\t\t\tM[x][y]=now[x][y];\n\t\t\t}\n\t\t}\n```",
        "postTime": 1540990870,
        "uid": 29304,
        "name": "DYI_ZJZGC",
        "ccfLevel": 0,
        "title": "10.31\u65e5\u5fd7"
    },
    {
        "content": "             P1312 Mayan\u6e38\u620f   \n  [P1312 Mayan\u6e38\u620f](https://www.luogu.org/problemnew/show/P1312#sub)       \n  * \u4e00\u4e2a\u5927\u6a21\u62df\uff0c\u4ece10.30\u4e0b\u5348 ~ 10.31 7\u70b9\u534a\uff0c\u5fc3\u6001\u7206\u70b8\u3002      \n  \n  * \u9996\u5148\u6211\u4eec\u4ecen<=5\uff0c\u8fd8\u6709\u8f93\u51fa\u6700\u5c0f\u65b9\u6848\uff0c\u548c\u5b57\u5178\u5e8f\u6700\u5c0f\uff0c\u53ef\u4ee5\u53d1\u73b0\u8fd9\u662f\u9053\u7206\u641c\u9898\u3002\u3002\u3002   \n  * \u6211\u4eec\u5c31\u76f4\u63a5\u679a\u4e3e\u6bcf\u6b21\u53ef\u80fd\u79fb\u52a8\u7684\u65b9\u6848\uff0c\u7136\u540e ~~\u4e71\u641e~~ \uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u6837\u6211\u4eec\u80af\u5b9a\u8fc7\u4e0d\u4e86\uff0c\u6211\u4eec\u9700\u8981\u526a\u679d\u3002    \n  * \u6211\u4eec\u76f4\u63a5\u7528hash\u8fd9\u4e2a\u597d\u4e1c\u897f\uff0c\u8bb0\u5f55\u4e0b\u6bcf\u6b21\u7684\u72b6\u6001\uff0c\u7136\u540e\u770b\u8fd9\u6b21dfs\uff0c\u662f\u5426\u518d\u6b21\u5f62\u6210\u8fd9\u4e2a\u72b6\u6001 \u3002 \n  * \u6211\u4eec\u53d1\u73b0\u5982\u679c\u8981\u4ea4\u6362\u7684\u4e24\u4e2a\u662f\u4e00\u6837\u7684\uff0c\u5c31\u6ca1\u6709\u5fc5\u8981\u4ea4\u6362 \u3002  \n  * \u6700\u4f18\u6027\u526a\u7eb8 $:$ \u6211\u4eec\u53d1\u73b0\u5176\u5b9e\u6211\u4eec\u628a\u4e00\u4e2a\u6570\u5411\u5de6\u79fb\u5176\u5b9e\u662f\u6ca1\u7528\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u4ece\u4ed6\u5de6\u8fb9\u7684\u6570\u5411\u53f3\u8f6c\u79fb\u6765 \u3002   \n  * \u4f46\u4ed6\u662f\u9519\u7684\u3002\u3002\u3002\u56e0\u4e3a\u4ed6\u7684\u5de6\u8fb9\u53ef\u80fd\u6ca1\u6709\u6570\uff0c\u5c31\u53ef\u80fd\u51c6\u4ee5\u4e0d\u8fc7\u53bb\uff0c\u6240\u4ee5\u6211\u4eec\u518d\u7279\u5224\u4e00\u4e0b\u5c31\u597d\u54af \u3002( $v[i].size() < v[i+1].size() $)   \n  *   \u5c0f\u7ec6\u8282   \n    * hash\u4e00\u5b9a\u8981\u80e1\u4e71\u641e\uff0c\u8fd9\u6837\u624d\u4e0d\u4f1a\u88ab\u5361\u3002\n    * \u6700\u597d\u7528 $vector$\uff0c\u6bd4\u8f83\u65b9\u4fbf\uff0c\u62bd\u51fa\u4e00\u4e2a\u6570\u540e\u53ef\u4ee5\u81ea\u5df1\u8865\u9f50 \u3002 \n    * \u56de\u6eaf\u4e00\u5b9a\u8981\u5206\u6b65\u6570\u8bb0\u5f55\uff0c\u5426\u5219\u6570\u7ec4\u4f1a\u4e71\u6389\u3002\n    * $debug$ \u4e00\u5b9a\u8981\u5199\u597d\u8c03\u4ee3\u7801 \u3002 \n    * \u7528 $vector$ \u5199\u5220\u70b9\u4e00\u5b9a\u8981\u4ece\u4e0a\u5411\u4e0b\u5220\uff0c\u5426\u5219\u4ed6\u8865\u5168\u7684\u65f6\u5019\u4f4d\u7f6e\u4f1a\u53d8 \u3002  \n    \n```\n// luogu-judger-enable-o2\n// luogu-judger-enable-o2\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\n#define pa pair<int,int>\n#define MP(x,y) make_pair(x,y)\n\nusing namespace std;\n\nconst int maxn=500001;\nconst int mod=20040326+20030311;\n\nint n;\n\nvector<int> v[6];\nint sl[6];\nset<pa> s;\nint d;\nint tot;\nbool ss=0;\n\nint yx[10][10][10];\n\nvoid debug()\n{\n    for(int i=0;i<=4;++i)\n    {\n        for(int j=0;j<v[i].size();++j)\n        {\n            cout<<v[i][j]<<\" \";\n        }cout<<endl;\n    }\n    puts(\"*****************************\");\n}\n\nstruct node3\n{\n    int x,y;\n}tt[maxn];\n\nstruct node2\n{\n    int x,y,f; \n}st[7];\n\nbool cmp(node3 a,node3 b)\n{\n    if(a.x==b.x)\n    return a.y>b.y;\n    else\n    return a.x>b.x;\n}\n\nint check(int bs)\n{\n    s.clear(); \n    for(int i=0;i<=4;++i)\n    {\n        for(int j=0;j<min(v[i].size(),min(v[i+1].size(),v[i+2].size()));++j)\n        {\n            if(v[i][j]==v[i+1][j]&&v[i+1][j]==v[i+2][j])\n            {\n                s.insert(MP(i,j));\n                s.insert(MP(i+1,j));\n                s.insert(MP(i+2,j));\n            }\n        }\n    }\n    for(int i=0;i<=4;++i)\n    {\n        for(int j=0;j<v[i].size();++j)\n        {\n            if(v[i].size()-j>=3)\n            {\n                if(v[i][j]==v[i][j+1]&&v[i][j+1]==v[i][j+2])\n                {\n                    s.insert(MP(i,j));\n                    s.insert(MP(i,j+1));\n                    s.insert(MP(i,j+2));\n                }\n            }\n        }\n    }\n    int num=0;\n    for(set<pa>::iterator it=s.begin();it!=s.end();++it)\n    {\n        pa u=*it;\n        int o=u.first;\n        int t=u.second;\n        tt[++num].x=o;\n        tt[num].y=t;\n    }\n    sort(tt+1,tt+num+1,cmp);\n    for(int i=1;i<=num;++i)\n    {\n        int o=tt[i].x;\n        int t=tt[i].y;\n        v[o].erase(v[o].begin()+t);\n    }\n    int sy=v[0].size()+v[1].size()+v[2].size()+v[3].size()+v[4].size();\n    if(sy==0)\n    {\n        for(int i=1;i<=bs;++i)\n        {\n            cout<<st[i].x<<\" \"<<st[i].y<<\" \"<<st[i].f<<endl;\n        }\n        exit(0);\n    }\n    if(s.size()) return 1;\n    else return 0;\n}\nint vv[10][10];\n\nvoid back(int zz)\n{\n    for(int i=0;i<=4;++i)\n    {   \n        v[i].clear();\n        for(int j=0;j<vv[zz][i];++j)\n        {\n            v[i].push_back(yx[zz][i][j]);\n        }\n    }\n}\n\nmap<long long,bool> ma;\nlong long base=311;\n\nvoid dfs(int x,int y,int bs,int ff)\n{\n   // debug();\n    int sy=v[0].size()+v[1].size()+v[2].size()+v[3].size()+v[4].size();\n    if(sy<=2&&sy!=0)return ;\n    while(check(bs));\n    long long sum=23;\n    if(sy==0)\n    { \n        for(int i=1;i<=bs-1;++i)\n        {\n            cout<<st[i].x<<\" \"<<st[i].y<<\" \"<<st[i].f<<endl;\n        }\n        \n        exit(0);\n    }\n    if(bs==n+1&&sy!=0)\n    {\n        return ;\n    }\n    for(int i=0;i<=4;++i)\n    {\n        vv[bs][i]=v[i].size();\n        for(int j=0;j<v[i].size();++j)\n        {\n            yx[bs][i][j]=v[i][j];\n            sum=(sum*base+(i+j+2)*v[i][j])%mod;\n        }\n    }\n   // debug();\n    if(ma[sum])\n    {\n    \treturn ;\n\t}\n//\tdebug();\n\tma[sum]=1;\n    if(ff>=0)\n    {\n       \tst[bs].x=x;\n        st[bs].y=y;\n        st[bs].f=1;\n    }   \n    else\n    {\n    \tst[bs].x=x;\n    \tst[bs].y=-y;\n    \tst[bs].f=-1;\n\t}\n    if(ff>=0)\n    {\n\t\tint u=v[x][y];\n\t    if(y>=v[x+1].size())\n\t    {\n\t        v[x].erase(v[x].begin()+y);\n\t        v[x+1].push_back(u);\n\t    }\n\t    else if(v[x+1][y]!=v[x][y])\n\t    {   \n\t        swap(v[x+1][y],v[x][y]);\n\t    }\n\t}\n  \telse\n  \t{\n  \t\tint z=-y;\n  \t\tint w=v[x][z]; \n  \t\tv[x].erase(v[x].begin()+z);\n        v[x-1].push_back(w); \n\t}\n    while(check(bs));\n    for(int i=0;i<4;++i)\n    {\n        for(int j=0;j<v[i].size();++j)\n        {\n            dfs(i,j,bs+1,1);\n        }\n        for(int j=v[i].size();j<v[i+1].size();j++)\n        {\n        \tdfs(i+1,-j,bs+1,-1); \n        }\n    }\n    back(bs);\n    ma[sum]=0;\n}\n\nint main()\n{\n    //freopen(\"a.out\",\"w\",stdout);\n    scanf(\"%d\",&n);\n    for(int i=0;i<5;++i)\n    {\n        int x;\n        while(scanf(\"%d\",&x)&&x!=0)\n        {\n            v[i].push_back(x);\n        }\n        tot+=v[i].size();\n    }\n    for(int i=0;i<4;++i)\n    {\n        for(int j=0;j<v[i].size();++j)\n        {\n            dfs(i,j,1,1);\n        }\n\t\tif(v[i].size()<v[i+1].size())\n    \t{\n    \t\tfor(int j=v[i].size();j<v[i+1].size();++j)\n    \t\t{\n    \t\t\tdfs(i+1,-j,1,-1);\n\t\t\t}\n\t\t}\n    }\n    printf(\"-1\\n\");\n    return 0;\n}\n```",
        "postTime": 1540894283,
        "uid": 102786,
        "name": "Sym_Je",
        "ccfLevel": 0,
        "title": "P1312 Mayan\u6e38\u620f"
    },
    {
        "content": "#\u53ea\u8981\u80af\u53bb\u7801\u6b64\u9898\uff0c\u5c31\u4e00\u5b9a\u80fdAC\n\n~~\u6240\u4ee5P2482(\u732a\u56fd\u6740)\u4e5f\u4e00\u6837~~\n\n\u526a\u679d\u539f\u5219\uff1a\n\n1\uff0c\u4ea4\u6362\u4e24\u4e2a\u76f8\u540c\u989c\u8272\u7684\u5757\u6ca1\u6709\u610f\u4e49\u3002\n\n2\uff0c\u5982\u679c\u4e00\u79cd\u989c\u8272\u7684\u5757\u6570\u91cf\u4e3a1\u62162\uff0c\u5219\u5f53\u524d\u5c40\u9762\u65e0\u89e3\u3002\n\n3\uff0c\u56e0\u4e3a\u8981\u6c42\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u89e3\uff0c\u6240\u4ee5\u4e00\u4e2a\u5757\u4ec5\u5f53\u5de6\u8fb9\u4e3a\u7a7a\u65f6\u5c1d\u8bd5\u5de6\u79fb\u3002\n\n#\u672c\u849f\u84bb\u5199\u4e86164\u884c\uff0c\u6700\u6162\u7684\u70b9912ms\u3002\n\n\u4ee3\u7801\uff08\u6709\u6ce8\u91ca\uff09\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#define N 5\n#define M 7\n\nint maxstep,chess[N][M];\nint count[11];\nint answer[5][3];\n\nvoid init(void)\t\t//\u8bfb\u5165\n{\n\tmemset(chess,0,sizeof(chess));\n\tscanf(\"%d\",&maxstep);\n\tfor(int i=0;i<N;i++){\n\t\tint j=0,x;\n\t\tscanf(\"%d\",&x);\n\t\twhile(x!=0){\n\t\t\tchess[i][j]=x;\n\t\t\tj++;\n\t\t\tscanf(\"%d\",&x);\n\t\t}\n\t}\n\treturn;\n}\n\nvoid printchess(void)\t\t//\u8c03\u8bd5\u7528\n{\n    for(int i=0;i<N;i++){\n        for(int j=0;j<M;j++)\n            printf(\"%d \",chess[i][j]);\n        putchar('\\n');\n    }\n    return;\n}\n\nvoid fall(void)\t\t//\u6e05\u9664\u540e\u65b9\u5757\u4e0b\u843d\n{\n\tfor(int i=0;i<N;i++)\n\t\tfor(int j=0;j<M;j++){\n\t\t\tif(chess[i][j]!=0)\n\t\t\t\tcontinue;\n\t\t\tint k;\n\t\t\tfor(k=j+1;k<M;k++)\n\t\t\t\tif(chess[i][k]!=0){\n\t\t\t\t\tchess[i][j]=chess[i][k];\n\t\t\t\t\tchess[i][k]=0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tif(k==M)\n\t\t\t\tbreak;\n\t\t}\n\treturn;\n}\n\nvoid printans(void)\t\t//\u8f93\u51fa\n{\n\tfor(int i=0;i<maxstep;i++)\n\t\tprintf(\"%d %d %d\\n\",answer[i][0],answer[i][1],answer[i][2]);\n\treturn;\n}\n\nbool clear(void)\t\t//\u6e05\u9664\u68cb\u76d8\n{\n\tbool empty[N][M];\n\tmemset(empty,0,sizeof(empty));\n\tfor(int i=0;i<3;i++)\n\t\tfor(int j=0;j<M;j++)\n\t\t\tif(chess[i][j]!=0 && chess[i][j]==chess[i+1][j] && chess[i+1][j]==chess[i+2][j])\n\t\t\t\tempty[i][j]=empty[i+1][j]=empty[i+2][j]=1;\n\t\n\tfor(int i=0;i<5;i++)\n\t\tfor(int j=0;j<N;j++)\n\t\t\tif(chess[i][j]!=0 && chess[i][j]==chess[i][j+1] && chess[i][j+1]==chess[i][j+2])\n\t\t\t\tempty[i][j]=empty[i][j+1]=empty[i][j+2]=1;\n\t\n\tint res=0;\n\tfor(int i=0;i<N;i++)\n\t\tfor(int j=0;j<M;j++)\n\t\t\tif(empty[i][j]){\n\t\t\t\tchess[i][j]=0;\n\t\t\t\tres=1;\n\t\t\t}\n\treturn res;\n}\n\nbool isempty(void)\t\t// \u5224\u65ad\u68cb\u76d8\u662f\u5426\u4e3a\u7a7a\n{\n\tfor(int i=0;i<N;i++)\n\t\tfor(int j=0;j<M;j++)\n\t\t\tif(chess[i][j]!=0)\n\t\t\t\treturn 0;\n\treturn 1;\n}\n\nbool judge(void)\t\t//\u5224\u65ad\u662f\u5426\u6709\u4e00\u79cd\u989c\u8272\u7684\u5757\u6570\u91cf\u4e3a1\u62162\n{\n\tmemset(count,0,sizeof(count));\n\tfor(int i=0;i<N;i++)\n\t\tfor(int j=0;j<M;j++)\n\t\t\tcount[chess[i][j]]++;\n\tfor(int i=1;i<=10;i++)\n\t\tif(count[i]==1||count[i]==2)\n\t\t\treturn 0;\n\treturn 1;\n}\n\nbool dfs(int step)\t\t//\u641c\u7d22\n{\n\tif(isempty()){\t\t//\u53d1\u73b0\u4e00\u7ec4\u89e3\n\t\tprintans();\n\t\treturn 1;\n\t}\n\tif(step>=maxstep || judge()==0)\t\t//\u526a\u679d\u4e0e\u7ed3\u675f\u6761\u4ef6\n\t\treturn 0;\n\t\n\tint now[N][M];\t\t//\u4e2d\u95f4\u72b6\u6001\n\tfor(int i=0;i<N;i++)\t\t//\u590d\u5236\u68cb\u76d8\n\t\tfor(int j=0;j<M;j++)\n\t\t\tnow[i][j]=chess[i][j];\n\t\n\tfor(int i=0;i<N;i++)\n\t\tfor(int j=0;j<M;j++){\t\t//\u679a\u4e3e\u6bcf\u4e00\u4e2a\u65b9\u5757\n\t\t\tif(i!=N-1 && chess[i][j]!=0 && chess[i][j]!=chess[i+1][j]){\n\t\t\t\tint t=chess[i][j];\tchess[i][j]=chess[i+1][j];\tchess[i+1][j]=t;\n\t\t\t\tanswer[step][0]=i;\tanswer[step][1]=j;\tanswer[step][2]=1;\n\t\t\t\tfall();\n\t\t\t\twhile(clear())\n\t\t\t\t\tfall();\n\t\t\t\tif(dfs(step+1))\n\t\t\t\t\treturn 1;\n\t\t\t}\t\t//\u53f3\u79fb\n\t\t\t\n\t\t\tfor(int k1=0;k1<N;k1++)\n\t\t\t\tfor(int k2=0;k2<M;k2++)\n\t\t\t\t\tchess[k1][k2]=now[k1][k2];\n\t\t\t\n\t\t\tif(i!=0 && chess[i][j]!=0 && chess[i-1][j]==0){\n\t\t\t\tint t=chess[i][j];\tchess[i][j]=chess[i-1][j];\tchess[i-1][j]=t;\n\t\t\t\tanswer[step][0]=i;\tanswer[step][1]=j;\tanswer[step][2]=-1;\n\t\t\t\tfall();\n\t\t\t\twhile(clear())\n\t\t\t\t\tfall();\n\t\t\t\tif(dfs(step+1))\n\t\t\t\t\treturn 1;\n\t\t\t}\t\t//\u5de6\u79fb\n\t\t\t\n\t\t\tfor(int k1=0;k1<N;k1++)\t\t//\u590d\u5236\u56de\u6765\n\t\t\t\tfor(int k2=0;k2<M;k2++)\n\t\t\t\t\tchess[k1][k2]=now[k1][k2];\n\t\t}\n\treturn 0;\n}\n\nint main(void)\n{\n\tinit();\n\t//clear();\n\t//fall();\n\t//printchess();\n\tif(dfs(0)==0)\n\t\tprintf(\"-1\");\n\treturn 0;\n}\n```",
        "postTime": 1525423121,
        "uid": 60202,
        "name": "csyakuoi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1312 \u3010Mayan\u6e38\u620f\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5361\u4e86\u5feb\u4e00\u661f\u671f\u4e86\uff08\u4e07\u6076\u7684\u665a\u81ea\u4e60+\u5468\u672b\u8865\u8bfe\uff09\n\n\u4e0d\u77e5\u4e0d\u89c9\u6572\u4e86200\u591a\u884c...\n\n\u5f53\u7136\u5176\u5b9e\u53ea\u9700\u8981\u8003\u86513\u79cd\u72b6\u51b5\n\n\u5411\u53f3\u79fb\uff1a \u53f3\u8fb9\u662f\u7a7a\u7684/\u4e0d\u662f\u7a7a\u7684\n\n\u5411\u5de6\u79fb\uff1a \u5de6\u8fb9\u662f\u7a7a\u7684 \uff08\u56e0\u4e3a\u4f18\u5148\u5411\u53f3\u79fb\u6240\u4ee5\u4e0d\u9700\u8981\u8003\u8651\u4e0d\u662f\u7a7a\u7684\u7684\u60c5\u51b5\uff09\n\n\u52a8\u6001\u6570\u7ec4\u5b58\u7b54\u6848\u65b9\u4fbf\u4e00\u4e9b\n\n\uff08\u8bdd\u8bf4\u628a\u6bcf\u4e00\u6b65\u90fd\u5206\u6210\u4e00\u4e2a\u51fd\u6570\u4e5f\u8bb8\u6bd4\u8f83\u597d\u7406\u89e3\u5427....\uff09\n\n\u8fd8\u6709\u5bf9\u4e8e\u4ee5\u4e0b\u6240\u6709\u7684 a[x][y]   \uff1ax\u8868\u793a\u884c\uff081~7\uff09 y\u8868\u793a\u5217\uff081~5\uff09\n\n```cpp\n#include<iostream>\n#include<cstdlib>  //exit(0); \u4f7f\u7528\u6b64\u5e93\uff08\u5426\u5219\u63d0\u4ea4\u8fc7\u4e0d\u53bb\uff09\n#include<cstdio>\n#include<vector>\n#include<map> \nusing namespace std;\nstruct data{\n    int x1,y1,dir;\n};\nint a[10][10],b[10],n;\nint co2;\nbool tag; \u5224\u65ad\u4ea4\u6362\u8fdb\u884c\u540e\u662f\u5426\u53d1\u751f\u6d88\u9664\nvector <data> h; \nvoid redraw1(int i,int j)\n{\n    int x=j,y=i,dis=0;\n    while(a[x][y]==co2) {y++; dis++;}\n    y=i-1;\n    while(a[x][y]==co2) {y--; dis++;}\n    y++; \n    if(dis>=3)\n    {\n        tag=1; \n        while(a[x][y]==co2) \n        {\n            a[x][y]=-1; y++;\n        }\n    }\n} \nvoid redraw2(int i,int j)   //\u4ee5\u4e0a\u4e24\u4e2a\u51fd\u6570\u5176\u5b9e\u90fd\u662f\u4e3a\u4e86\u9488\u5bf9\u7b2c8\u4e2a\u70b9....\u56e0\u4e3a\u8fd9\u91cc\u6709\u5341\u5b57\u6d88\u9664\u7684\u60c5\u51b5\n{\n    int x=j,y=i,dis=0;\n    while(a[x][y]==co2) {x++; dis++;}\n    x=j-1;\n    while(a[x][y]==co2) {x--; dis++;}\n    x++;\n    if(dis>=3)\n    {\n        tag=1;\n        while(a[x][y]==co2) \n        {\n            a[x][y]=-1; x++;\n        }\n    }\n} \nvoid draw(int i,int j)  \u67e5\u627e\u662f\u5426\u6709\u53ef\u4ee5\u6d88\u9664\u7684\n{\n    int x=j,y=i,dis=0; bool flag=0;\n    while(a[x][y]==co2) {y++; dis++;}\n    y=i-1;\n    while(a[x][y]==co2) {y--; dis++;}\n    y++;   \n    if(dis>=3)\n    {\n        tag=1; flag=1;\n        while(a[x][y]==co2) \n        {\n            redraw2(y,x); \n            a[x][y]=-1; y++;\n        }\n    }    //\u4ee5\u4e0a\u4e3a\u6a2a\u5411\u6d88\u9664\u5224\u65ad\n    x=j; y=i; dis=0; a[x][y]=co2;\n    while(a[x][y]==co2) {x++; dis++;}\n    x=j-1;\n    while(a[x][y]==co2) {x--; dis++;}\n    x++;\n    if(dis>=3)\n    {\n        while(a[x][y]==co2) \n        {\n            redraw1(y,x);\n            a[x][y]=-1; x++;\n        }\n        flag=1; tag=1;\n    } //\u4ee5\u4e0a\u4e3a\u7eb5\u5411\u6d88\u9664\u5224\u65ad\n    if(flag) a[j][i]=-1;   //\u7531\u4e8e\u5f53\u524d\u70b9\u4e3a\u6a2a\u5411\u7eb5\u5411\u7684\u5171\u7528\u70b9\uff0c\u6240\u4ee5\u7279\u6b8a\u5224\u65ad\n}\nvoid turnd()  //\u6d88\u9664\u65b9\u5757\u540e\u8981\u628a\u7a7a\u4f4d\u8865\u4e0a\n{\n    bool fla;\n    for(int i=1;i<=5;i++)\n    {\n        fla=0;\n        for(int j=7;j>=1;j--)\n        {\n            if(a[j][i]==0) break;\n            if(a[j][i]>0)\n            {\n                fla=1; b[i]=j;\n            }\n            if(a[j][i]==-1)\n            {\n                int z=j;\n                while(a[z][i]==-1) z--;\n                a[j][i]=a[z][i];\n                if(a[z][i])\n                { \n                    b[i]=j; fla=1;\n                    a[z][i]=-1;\n                }\n            }\n        }\n        if(!fla) b[i]=8;  //\u5177\u4f53\u89c1\u4e0b\n    }\n}\ninline void findd()  //\u91cd\u590d\u67e5\u627e\uff08\u5177\u4f53\u89c1\u4e0b\uff09\n{\n    tag=0;\n    for(int i=1;i<=5;i++)\n        for(int j=7;j>=1;j--)\n        {\n            if(a[j][i]==0) break;\n            co2=a[j][i];\n            draw(i,j);\n        }\n}\ninline int pd()   //b[i]\u4e3a\u9ad8\u5ea6\u6570\u7ec4\uff0c\u50a8\u5b58\u672c\u5217\u65b9\u5757\u7684(7-\u9ad8\u5ea6+1\uff09\uff0c\u5982\u679c==8\u8bf4\u660e\u6b64\u5217\u4e3a\u7a7a\n{\n    for(int i=1;i<=5;i++) if(b[i]!=8) return 0;\n    return 1;\n}\nvoid dfs(int w)\n{\n    if(w==n)\n    {\n        if(pd())\n        {\n            int len=h.size();\n            for(int i=0;i<len;i++) printf(\"%d %d %d\\n\",h[i].x1-1,7-h[i].y1,h[i].dir); //\u9898\u76ee\u8981\u6c42\u4ece\u5de6\u4e0b\u89d2\uff080,0\uff09\u5f00\u59cb\uff0c\u800c\u6211\u7684\u7a0b\u5e8f\u662f\u4ece\u5de6\u4e0a\u89d2\uff081,1\uff09\u5f00\u59cb\u3010\u4e3a\u4e86\u597d\u7406\u89e3\u3011\uff0c\u6240\u4ee5\u9700\u8981\u505a\u4e00\u4e9b\u5c0f\u4fee\u6539\n            exit(0);  //\u76f4\u63a5\u7ed3\u675f\u6574\u4e2a\u7a0b\u5e8f\n        }\n        return ;\n    }\n    int i,j,k1,k2,q1[8][6],q2[6];\n    for(i=1;i<=5;i++) \n    {\n        q2[i]=b[i];\n        for(j=1;j<=7;j++) q1[j][i]=a[j][i]; \n    } //\u4e34\u65f6\u6570\u7ec4\n    for(i=1;i<=5;i++)\n    {\n        for(j=7;j>=1;j--)  //\u6839\u636e\u6700\u5c0f\u5b57\u5178\u5e8f\n        {\n            if(a[j][i]<=0) continue;\n            if(i+1<=5&&a[j][i]!=a[j][i+1]&&a[j][i+1]!=-1) //\u5411\u53f3\u79fb\n            {    \n                tag=0;\n                if(a[j][i+1]>0)\n                {\n                    swap(a[j][i],a[j][i+1]);\n                    co2=a[j][i]; draw(i,j);\n                    co2=a[j][i+1]; draw(i+1,j);\n                }\n                else\n                {\n                    b[i+1]--; co2=a[j][i]; a[b[i+1]][i+1]=a[j][i];\n                    for(int u1=j;u1>=1;u1--)\n                    {\n                        if(a[u1][i]==0) break;\n                        a[u1][i]=a[u1-1][i];\n                    }\n                    b[i]++; draw(i+1,b[i+1]);\n                    for(int u1=j;u1>=1;u1--)\n                    {\n                        if(a[u1][i]<=0) break; \n                        co2=a[u1][i]; draw(i,u1);\n                    }\n                }\n                while(tag) {turnd(); findd();}  //\u5982\u679c\u6709\u53ef\u4ee5\u6d88\u9664\u7684\u5219\u5faa\u73af\u6d88\u9664\u76f4\u5230\u65e0\u6cd5\u6d88\u9664\uff0c\u4e0b\u540c\n                h.push_back((data){i,j,1}); //\u50a8\u5b58\u7b54\u6848\uff0c\u4e0b\u540c\n                dfs(w+1);\n                h.pop_back();\n                for(k1=1;k1<=5;k1++) \n                {\n                    b[k1]=q2[k1];\n                    for(k2=1;k2<=7;k2++) a[k2][k1]=q1[k2][k1];\n                } //\u56de\u6eaf\uff0c\u4e0b\u540c\n            }\n            if(i-1>=1&&a[j][i-1]==0&&b[i]<b[i-1])  //\u5411\u5de6\u79fb\n            {\n                b[i-1]--; co2=a[j][i]; a[b[i-1]][i-1]=a[j][i];\n                for(int u1=j;u1>=1;u1--)\n                {\n                    if(a[u1][i]==0) break;\n                    a[u1][i]=a[u1-1][i];\n                }\n                b[i]++; draw(i-1,b[i-1]);\n                for(int u1=j;u1>=1;u1--)\n                {\n                    if(a[u1][i]<=0) break;\n                    co2=a[u1][i]; draw(i,u1);\n                }\n                while(tag) {turnd(); findd();}\n                h.push_back((data){i,j,-1});\n                dfs(w+1);\n                h.pop_back();\n                for(k1=1;k1<=5;k1++) \n                {\n                    b[k1]=q2[k1];\n                    for(k2=1;k2<=7;k2++) a[k2][k1]=q1[k2][k1];\n                }        \n            }    \n        }\n    }\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    int i,j,q;\n    for(i=1;i<=5;i++)\n    {\n        q=1;j=7;\n        while(q)\n        {\n            scanf(\"%d\",&q);\n            a[j][i]=q;\n            if(q) j--;\n        }\n        b[i]=j+1;\n    }  //\u8bfb\u5165\u6570\u636e\u65f6\u76f4\u63a5\u6539\u6210\u7eb5\u5411\n    dfs(0);\n    printf(\"-1\");\n    return 0;\n}\n```",
        "postTime": 1512623758,
        "uid": 21679,
        "name": "\u9999\u98ce\u667a\u4e43",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1312 \u3010Mayan\u6e38\u620f\u3011"
    },
    {
        "content": "\u53ea\u8981\u8010\u5fc3\uff0c\u4e00\u70b9\u70b9\u60f3\uff0c\u4e00\u904d\u904d\u8c03\uff0c\u4e00\u5207\u7686\u6709\u53ef\u80fd !\n\n\u4f18\u5316\uff1a\n\n1.\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u683c\u5b50\u7684\u5de6\u8fb9\uff08\u53f3\u8fb9\uff09\u4e0e\u5b83\u76f8\u540c\uff0c\u4e0d\u79fb\u52a8\uff1b\n\n2.dfs\u65f6\u5982\u679c\u9047\u5230\u7a7a\u683c\u76f4\u63a5break\uff1b\n\n\n\u4e3a\u4fdd\u8bc1\u5b57\u5178\u5e8f\u6700\u5c0f\uff1a\n\n1.\u9700\u8981\u5c06\u56fe\u7ffb\u8f6c90\u00b0\uff1b\n\n2.\u67d0\u4e2a\u683c\u5b50\u53ea\u6709\u5728\u5de6\u8fb9\u4ec0\u4e48\u4e5f\u6ca1\u6709\u65f6\u624d\u5411\u5de6\u79fb\u52a8\uff1b\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint ma[6][6][9];\nint n;\nint ans[20][20];\nbool vis[20][20],Mark[20][20];\nbool flag=0;\nint read()//\u6ca1\u8d77\u5230\u4efb\u4f55\u4f5c\u7528\u7684\u624b\u8bfb;\n{\n    int ss=0;\n    char c=getchar();\n    while(c<'0' || c>'9') c=getchar();\n    while(c>='0' && c<='9')\n    {\n        ss=ss*10+c-'0';\n        c=getchar();\n    }\n    return ss;\n}\nvoid swap(int &x,int &y)//\u4ea4\u6362\n{\n    x^=y^=x^=y;\n    return;\n}\nvoid copy(int i)//\u590d\u5236\n{\n    for(int j=0;j<7;j++)\n        Mark[i][j]|=vis[i][j];\n    return;\n}\nvoid fall(int depth)//\u964d\u843d;\n{\n    for(int i=0;i<5;i++)\n    {\n        for(int j=0;j<7;j++)\n        {\n            if(!ma[depth][i][j]) continue;\n            int x=i,y=j;\n            while(y-1>=0 && !ma[depth][x][y-1] && ma[depth][x][y])\n            {\n                swap(ma[depth][x][y-1],ma[depth][x][y]);\n                y--;\n            }\n        }\n    }\n    return;\n}\nbool xiao(int depth)\n{\n    bool f=0;\n    int tot=0;\n    memset(vis,0,sizeof(vis)),memset(Mark,0,sizeof(Mark));\n    for(int i=0;i<5;i++)\n    {\n        for(int j=0;j<7;j++)\n        {\n            if(Mark[i][j]) continue;\n            if(!ma[depth][i][j]) break;\n            tot=1,vis[i][j]=1;\n            for(int v=1;v<=5;v++)\n            {\n                if(i+v<5)\n                {\n                    if(ma[depth][i][j]==ma[depth][i+v][j])//\u6a2a;\n                        tot++,vis[i+v][j]=1;\n                    else break;\n                }\n            }\n            for(int v=-1;v>=-5;v--)\n            {\n                if(i+v>=0)\n                {\n                    if(ma[depth][i][j]==ma[depth][i+v][j])\n                    tot++,vis[i+v][j]=1;\n                    else break;\n                }\n            }\n            if(tot>=3)\n            {\n                copy(i);//\u6807\u8bb0\u6d88\u9664\uff1a \n                f=1;//\u53d1\u751f\u6d88\u9664 \n            }\n            memset(vis,0,sizeof(vis));//\u521d\u59cb\u5316; \n            vis[i][j]=1,tot=1;\n            for(int v=1;v<=7;v++)\n            {\n                if(j+v<7)\n                {\n                    if(ma[depth][i][j]==ma[depth][i][j+v])//\u7eb5;\n                        tot++,vis[i][j+v]=1;\n                    else break;\n                }\n            }\n            for(int v=-1;v>=-7;v--)\n            {\n                if(j+v>=0)\n                {\n                    if(ma[depth][i][j]==ma[depth][i][j+v])\n                    tot++,vis[i][j+v]=1;\n                    else break;\n                }\n            }\n            if(tot>=3)\n                f=1,copy(i);\n            memset(vis,0,sizeof(vis));\n        }\n    }\n    if(f)//\u53d1\u751f\u8fc7\u6d88\u9664; \n    {\n        for(int i=0;i<5;i++)\n            for(int j=0;j<7;j++) if(Mark[i][j]) ma[depth][i][j]=0;\n        return true;\n    }\n    else return false;\n}\nbool check()\n{\n    for(int i=0;i<5;i++)\n        if(ma[n][i][0]) return false;\n    return true;\n}\nvoid dfs(int depth)\n{\n    if(depth==n+1)\n    {\n        if(!check()) return;//\u5982\u679c\u6ca1\u6709\u6d88\u5b8c; \n        for(int i=1;i<=n;i++)\n        {\n            for(int j=1;j<=3;j++)\n                printf(\"%d \",ans[i][j]);\n            printf(\"\\n\");\n        }\n        exit(0);\n    }\n    memcpy(ma[depth],ma[depth-1],sizeof(ma[depth-1]));//\u590d\u5236\u8fc7\u6765; \n    for(int i=0;i<5;i++)\n    {\n        for(int j=0;j<7;j++)\n        {\n            if(!ma[depth][i][j]) break;\n            int dir=0;//\u65b9\u5411;\n            if(!i || i==4)\n            {\n                if(i==0) dir=1;//\u7b2c\u4e00\u5217\u53ea\u80fd\u53f3\u79fb; \n                else if(i==4 && !ma[depth][i-1][j]) dir=-1;//\u6700\u540e\u4e00\u5217\u53ea\u80fd\u5de6\u79fb;\n                if(ma[depth][i][j]!=ma[depth][i+dir][j])\n                {\n                    ans[depth][1]=i;//\u50a8\u5b58\u7b54\u6848;\n                    ans[depth][2]=j;\n                    ans[depth][3]=dir;\n                    swap(ma[depth][i+dir][j],ma[depth][i][j]);\n                    do\n                    {\n                        fall(depth);//\u76f4\u5230\u6d88\u4e0d\u4e86\u4e3a\u6b62;\n                    }while(xiao(depth));\n                    dfs(depth+1);\n                    memcpy(ma[depth],ma[depth-1],sizeof(ma[depth-1]));//\u56de\u6eaf\uff1a\n                }\n                else continue;\n            }\n            else if(i>0 && i<4)\n            {\n                dir=1;\n                if(ma[depth][i][j]!=ma[depth][i+dir][j])\n                {\n                    ans[depth][1]=i,ans[depth][2]=j,ans[depth][3]=dir;\n                    swap(ma[depth][i+dir][j],ma[depth][i][j]);\n                    do{fall(depth);}while(xiao(depth));\n                    dfs(depth+1);\n                    memcpy(ma[depth],ma[depth-1],sizeof(ma[depth-1]));\n                }\n                dir=-1;\n                if(!ma[depth][i+dir][j])\n                {\n                    ans[depth][1]=i,ans[depth][2]=j,ans[depth][3]=dir;\n                    swap(ma[depth][i+dir][j],ma[depth][i][j]);\n                    do{fall(depth);}while(xiao(depth));\n                    dfs(depth+1);\n                    memcpy(ma[depth],ma[depth-1],sizeof(ma[depth-1]));\n                }\n            }\n        }\n    }\n    return;\n}\nvoid solve()\n{\n    scanf(\"%d\",&n);\n    for(int i=0;i<5;i++)\n    {\n        int tot=0,x;\n        while(true)\n        {\n            x=read();\n            if(!x) break;\n            ma[0][i][tot++]=x;\n        }\n    }\n    dfs(1);\n    cout<<\"-1\"<<endl;\n    return;\n}\nint main()\n{\n    solve();\n    return 0;\n}\n\n```",
        "postTime": 1509319031,
        "uid": 23374,
        "name": "\u9a91\u7740\u80a5\u732a\u98d9",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1312 \u3010Mayan\u6e38\u620f\u3011"
    },
    {
        "content": "\u5927\u641c\u7d22\u7ec8\u4e8eac\u4e86\uff01\u5199+\u8c03\u8bd5\u4e863\uff0c4\u4e2a\u5c0f\u65f6\n\n\u4e3b\u8981\u5361\u5728\u4e86\uff1a\u5b57\u5178\u5e8f\u6700\u5c0f\u5176\u5b9e\u5c31\u662f\u4f60\u641c\u7d22\u5230\u7684\u7b2c\u4e00\u7ec4\u6570\u636e\uff08\u6ce8\u610f\u4e0b\u641c\u7d22\u987a\u5e8f\u5c31\u884c\uff1a0~5/7\uff0c\u5148\u53f3\u540e\u5de6\uff09\n\n\u6240\u4ee5\u641c\u5230\u4e00\u7ec4\u89e3\u8f93\u51fa \u9000\u51fa\u5c31\u884c\u3002\n\n\u548c\u6708\u8d5b\u4e00\u9053\u5927\u6c34\u9898\u4e00\u6837\uff0c\u6709\u6548\u7ec3\u4e60\u4ee3\u7801\u80fd\u529botz\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<ctime>\n#include<cstdlib>\n#define z 10\nusing namespace std;\nint m[z][z],ms[z][z][z],cl[z][z],ans[z][z],fin[z][z];\nint n,ti;\nvoid fall(){\n    for(int i=0;i<5;i++){\n        int zero=0;\n        for(int j=0;j<7;j++){\n            if(m[i][j]==0)++zero;\n            else{\n                if(zero==0)continue; \n                m[i][j-zero]=m[i][j];\n                m[i][j]=0;\n            }\n        }\n    }\n```\n}//\u5411\u4e0b\u964d\u843d\\_\u586b\u5145\n\n```cpp\nbool clear(){\n    int cnt=0;\n    memset(cl,0,sizeof cl);\n    for(int i=0;i<5;i++)\n        for(int j=0;j<7;j++){\n            if(i-1>=0&&i+1<5&&m[i][j]&&m[i][j]==m[i-1][j]&&m[i][j]==m[i+1][j]){\n                cl[i][j]=1;cl[i+1][j]=1;cl[i-1][j]=1;cnt=1;\n            }\n            if(j-1>=0&&j+1<7&&m[i][j]&&m[i][j]==m[i][j-1]&&m[i][j]==m[i][j+1]){\n                cl[i][j]=1;cl[i][j+1]=1;cl[i][j-1]=1;cnt=1;\n            }\n        }\n    if(!cnt)return 0;\n    for(int i=0;i<5;i++)\n        for(int j=0;j<7;j++){\n            if(cl[i][j]){\n                m[i][j]=0;\n            }\n        }\n    return 1;\n}\nvoid save(int d){\n    for(int i=0;i<5;i++)\n        for(int j=0;j<7;j++)\n            ms[d][i][j]=m[i][j];\n}\nvoid re(int d){\n    for(int i=0;i<5;i++)\n        for(int j=0;j<7;j++)\n            m[i][j]=ms[d][i][j];\n    for(int i=0;i<3;i++)ans[d][i]=-1;\n}\nbool check(){\n    for(int i=0;i<5;i++)\n        for(int j=0;j<7;j++)\n            if(m[i][j]!=0)return 0;\n    return 1;\n}\nvoid move(int i,int j,int p){\n        int t=m[i][j];\n        m[i][j]=m[i+p][j];\n        m[i+p][j]=t;\n    fall();\n    while(clear()){\n        fall();\n    }\n}\nvoid dfs(int d){\n    if(check()){\n        for(int i=0;i<n;i++){\n            for(int j=0;j<3;j++){\n                printf(\"%d \",ans[i][j]);\n            }\n            printf(\"\\n\");\n        }\n        exit(0);\n    }\n    if(d==n)return;\n    save(d);\n    for(int i=0;i<5;i++){\n        for(int j=0;j<7;j++){\n            if(m[i][j]){\n                if(i<4&&m[i+1][j]!=m[i][j]){\n                    move(i,j,1);ans[d][0]=i;\n                    ans[d][1]=j;ans[d][2]=1;\n                    dfs(d+1);re(d);\n                }\n                if(i>0&&m[i-1][j]==0){\n                    move(i,j,-1);ans[d][0]=i;\n                    ans[d][1]=j;ans[d][2]=-1;\n                    dfs(d+1);re(d);\n                }\n            }\n        }\n    }\n}\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=0;i<5;i++){\n        for(int j=0;j<=7;j++){\n            int tt;\n            scanf(\"%d\",&tt);\n            if(tt==0)break;\n            m[i][j]=tt;\n        }\n    }\n    memset(fin,-1,sizeof fin);\n    dfs(0);\n    if(fin[1][0]==-1)printf(\"-1\\n\");\n    return 0;\n}\n\n```",
        "postTime": 1509007470,
        "uid": 12779,
        "name": "yeyyx",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1312 \u3010Mayan\u6e38\u620f\u3011"
    },
    {
        "content": "\u56e0\u4e3a\u6ca1\u6709\u5b9e\u540d\u9a8c\u8bc1\uff0c\u53d1\u4e0d\u4e86\u8ba8\u8bba\uff0c\u6240\u4ee5\u7d22\u6027\u53d1\u4e00\u7bc7\u9898\u89e3\u3002\u7531\u4e8e\u81ea\u5df1\u5728\u8fd9\u9053\u9898\u4e0a\u5361\u4e862\u5929\uff0c\u6240\u4ee5\u72af\u4e86\u5404\u79cd\u5404\u6837\u7684\u9519\u8bef\u3002\n\n\u9996\u5148\u8bb2\u601d\u8def\uff0c\u5176\u5b9e\u548c\u697c\u4e0b\u5dee\u4e0d\u591a\uff0c\u5c31\u662f\u53ef\u4ee5\u6362\u5c31\u6362\uff0c\u526a\u679d\u6389\u5de6\u53f3\u4e00\u6837\u7684\uff0c\u5728\u5de6\u9762\u4f46\u662f\u5df2\u7ecf\u6709\u5757\u7684\uff08\u56e0\u4e3a\u5df2\u7ecf\u6362\u8fc7\u4e86\uff09\u3002\n\n\u5168wa\u81ea\u7136\u4e0d\u7528\u8bf4\uff0c\u56de\u53bb\u91cd\u6539\u3002\u53ea\u62ff10\u5206\u7684\uff0c\u770b\u770b\u81ea\u5df1\u7684\u6d88\u9664\u677f\u5757\u662f\u5426\u6709\u95ee\u9898\u3002\n\n20\u5206\u7684\uff0c\u770b\u770b\u81ea\u5df1\u7684x\u8f74\u548cy\u8f74\u662f\u5426\u98a0\u5012\u3002\n\n\u6700\u91cd\u8981\u7684\u5730\u65b9\u6765\u4e86\uff0c\u5982\u679c\u4f60\u67095\u4e2aTLE\uff01\uff01\u90a3\u4e48\u4f60\u72af\u4e86\u4e00\u4e2a\u53ef\u80fd\u4e00\u661f\u671f\u90fd\u67e5\u4e0d\u51fa\u6765\u7684\u9519\u8bef\uff01\uff01\u90a3\u5c31\u662f\u6700\u540e\u7684\u5224\u65ad\u8fc7\u7a0b\uff0c\u4ee3\u7801\u7ed9\u6ce8\u91ca\u3002\n\n\u5728\u6d4b\u6570\u636e\u65f6\uff0c\u5982\u679c\u4f60\u4e5f\u7528dev c++\u5982\u679c\u7a0b\u5e8f\u6ca1\u7ed3\u679c\u4e0d\u4e00\u5b9a\u662f\u51fa\u9519\uff0c\u53ef\u4ee5\u7b49\u4e00\u7b49\u3002\u3002\u3002\u3002\u3002\u3002\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\nusing namespace std;\n#define in(x) x=read()\nint a[10][10];\nint read(){\n    int num=0;\n    char c;\n    int flag=1;\n    while((c=getchar())==' '||c=='\\n'||c=='\\r');\n    if(c=='-')flag=-1;\n    else num=c-'0';\n    while(isdigit(c=getchar()))num=num*10+(c-'0');\n    return num;\n```\n}//\u7531\u4e8e\u6570\u636e\u8fc7\u5c0f\uff0c\u5176\u5b9e\u6ca1\u5fc5\u8981\u8bfb\u5165\u4f18\u5316\n\n\n             \n```cpp\nint n;\nint ans1[20],ans2[20],ans3[20];//\u65b9\u5411 x y \nint cnt=0;\nvoid remove(){\n  for (int i=1;i<=5;++i)\n        for (int j=1;j<=7;++j)\n        {\n            int x=i,y=j;\n            while (a[x][y]!=0&&a[x][y-1]==0&&y-1>=1)\n            {\n                swap(a[x][y],a[x][y-1]);\n                --y;\n            }\n```\n}//\u964d\u4e0b\u6765\uff01\n        \n            \n                \n              \n            \n        \n    \n        \n\n    \n    \n    \n                    \n     \n                    \n    \n        \n```cpp\n        int flag=1;\n        int c[10][10];\n    //    memset(c,0,sizeof(c));\u53e6\u7c7b\u7684\u50a8\u5b58\u65b9\u6cd5 \n        //for(int ii=1;ii<=5;ii++)\n    //    for(int jj=1;jj<=7;jj++)\n        //c[ii][jj]=a[ii][jj]; \n        memcpy(c,a,sizeof(c));//\u6211\u4eec\u50a8\u5b58\u4e00\u4e2a\u5907\u4efd\uff0c\u5982\u679c\u4e0d\u50a8\u5b58\u5c31\u8981\u53e6\u52244\u4e2a\u53ca\u4ee5\u4e0a\u7684\u5757 \n    for(int i=1;i<=5;i++)\n    for(int j=1;j<=7;j++){\n        if(c[i][j]){//\u5982\u679c\u662f\u7b2c\u56db\u4e2a\uff0c\u90a3\u4e48\u524d\u9762\u7684\u53ea\u662f\u91cd\u590d\u7684\u8d4b\u4e86\u4e00\u4e2a0\uff0c\u5982\u679c\u4e0d\u50a8\u5b58\u5907\u4efd\uff0c\u7531\u4e8ea\u5df2\u7ecf\u4fee\u6539\uff0c\u7b2c\u56db\u4e2a\u5c31\u4e0d\u4f1a\u88ab\u5224\u51fa \n            if(c[i][j+1]==c[i][j]&&c[i][j-1]==c[i][j]){\n                a[i][j]=0;\n                a[i][j-1]=0;\n                a[i][j+1]=0;\n                flag=0;\n            }\n            if(c[i][j]==c[i-1][j]&&c[i][j]==c[i+1][j]){//\u8fd9\u4e2a\u662f\u76f8\u5f53\u4e8e\u662fx\u8f74\u7684 \u6d88\u9664 \n                  a[i][j]=0;\n                a[i-1][j]=0;\n                a[i+1][j]=0;\n            flag=0;\n            }\n        }\n    }\n    if(!flag)\n        remove();//\u6d88\u9664\u4e86\u4ee5\u540e\uff0c\u81ea\u7136\u8fd8\u4f1a\u6709\u518d\u6b21\u9700\u8981\u6d88\u9664\u7684\u5757 \n}\nbool judge(){//\u6d88\u9664 \n    bool flag=1;\n    for(int i=1;i<=5;i++){\n        if(a[i][1])flag=false;\n    }\n    return flag;\n}\nbool dfs(int step){\n    if(step>n){\n        return 0;\n    }\n    if(step==n){\n        //\u8fd9\u91cc\u662f\u6700\u91cd\u8981\u7684\u5730\u65b9\uff0c\u5982\u679c\u4f60\u5199\u7684\u662fif\uff08setp==n&&judge\uff08\uff09\uff09\u90a3\u4f60\u7684\u4e0d\u53ef\u884c\u7684\u89e3\u5c31\u4f1a\u591a\u8d70\u4e00\u8fb9\uff01 \n        if(judge())return 1;\n        return 0;\n    }\n    int b[10][10];\n    memcpy(b,a,sizeof(b));\n    for(int i=1;i<=5;i++){\n        for(int j=1;j<=7;j++){\n            if(a[i][j]){\n                if(i!=5&&a[i][j]!=a[i+1][j]){//\u8fb9\u754c\uff0c\u4ee5\u53ca\u540c\u989c\u8272 \u5411\u53f3\u8d70 \n                     swap(a[i][j],a[i+1][j]);\n                    remove();\n                    if(dfs(step+1)){//\u6211\u7684\u4ee3\u7801\u662f\u6709\u56de\u6eaf\u7684\uff0c\u4e5f\u53ef\u4ee5\u6ca1\u6709\u56de\u6eaf\u8fc7\u7a0b\uff0c\u76f4\u63a5\u8f93\u51fa\uff0c\u4f46\u662f\u6211\u89c9\u5f97\u8fd9\u6837\u66f4\u597d\u7406\u89e3\uff1b \n                        ans1[++cnt]=1;\n                        ans2[cnt]=i-1;\n                        ans3[cnt]=j-1;\n                        return 1; \n                    }\n          memcpy(a,b,sizeof(a));\n                 //vis1[i]=0;\n                }\n                 if(i!=1&&a[i-1][j]==0){//\u5de6\u8d70 \n                    swap(a[i][j],a[i-1][j]);\n                    remove();\n                    if(dfs(step+1)){\n                        ans1[++cnt]=-1;\n                        ans2[cnt]=i-1;\n                        ans3[cnt]=j-1;\n                        return 1;\n                    }\n            memcpy(a,b,sizeof(a));\n                }\n            }\n        }\n    }\n return 0;\n}\nint main(){\n    in(n);\n    memset(a,0,sizeof(a));\n   for(int i=1;i<=5;i++){\n        int x;\n        in(x);\n        int j=1;\n        while(x){\n            a[i][j++]=x;\n            in(x);\n        }\n    }    dfs(0);\n    for(int i=cnt;i>=1;i--){\n        printf(\"%d %d %d\\n\",ans2[i],ans3[i],ans1[i]);//\u56de\u6eaf\u8fc7\u7a0b\u662f\u81ea\u4f4e\u5411\u4e0a\uff0c\u6240\u4ee5\u8981\u5012\u7740\u8f93\u51fa \n    }\n    if(cnt==0)printf(\"-1\");\n}\n```",
        "postTime": 1508988529,
        "uid": 21407,
        "name": "\u6050\u6016\u5927\u9b54\u738b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1312 \u3010Mayan\u6e38\u620f\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\uff0c\u771f\u7684\u662f\u8c03\u8bd5\u4e86\u8fd1\u4e00\u4e2a\u6708\u3002\u3002\n\n\u4e00\u76f4\u5f97\u4e0d\u4e86\u6ee1\u5206\u771f\u7684\u4e0d\u723d\u3002\u3002\n\n\u5728\u9f99\u795e\u54c8\u8fea\u65af\u7684\u5efa\u8bae\u4e0b\u91cd\u6784\u4ee3\u7801\uff1a\u4e8e\u662fA\u4e86\n\n\n\u90a3\u4e48\u662f\u4ec0\u4e48\u610f\u601d\u5462\uff0c\u6309\u7167\u5173\u952e\u5b57\u987a\u5e8f\u641c\u7d22\uff1ax,y,\u53f3,\u5de6\n\n\u5206\u4e3a\u4e00\u4e0b\u4e09\u4e2a\u677f\u5757\uff1a\u79fb\u52a8\uff0c\u6389\u843d\uff0c\u6d88\u9664\n\n\u52a0\u4e0a\u526a\u679d:\u5411\u5de6\u79fb\u76f8\u5f53\u4e8e\u5411\u53f3\u79fb\uff0c\u6240\u4ee5\u5de6\u79fb\u7684\u65f6\u5019\u8981\u6c42\u5de6\u8fb9\u662f\u7a7a\u7684\n\n\u90a3\u4e48\u8fd9\u9898\u6309\u7167\u8fd9\u4e2a\u6b65\u9aa4\u5c31\u53ef\u4ee5A\u4e86\n\n\n    \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#define RG register \nusing namespace std;\nint n;\nint a[6][8];\nint ans[6][4];\nvoid in();\nvoid DFS(int);\nvoid print();\nint main()\n{\n    //freopen(\"a.out\",\"w\",stdout);\n    in();\n    DFS(0);\n    printf(\"-1\\n\");\n    return 0;\n}\ninline void Diaoluo(int x)//\u628ax\u8fd9\u4e00\u5217\u6389\u4e0b\u6765\n{\n    RG int cnt1=-1;\n    for(RG int i=0;i<=6;i++)\n        if(a[x][i])a[x][++cnt1]=a[x][i];\n    for(RG int i=cnt1+1;i<=6;i++)a[x][i]=0;\n}\ninline void BOOM()//\u6d88\u9664\u51fd\u6570\n{\n    RG int flag=1;\n    while(flag)\n    {\n        flag=0;\n        RG int tmp[6][8];\n        memcpy(tmp,a,sizeof(tmp));\n        //Part1 \u5224\u65ad\u662f\u5426\u53ef\u4ee5\u6d88\u9664\n        for(RG int x=0;x<=4;x++)\n        {\n            for(RG int y=0;y<=6;y++)\n            {\n                if(x>=1&&x<=3&&tmp[x][y]&&tmp[x-1][y]==tmp[x][y]&&tmp[x+1][y]==tmp[x][y])\n                {\n                    a[x-1][y]=0;\n                    a[x][y]=0;\n                    a[x+1][y]=0;\n                    flag=1;\n                }\n                if(y>=1&&y<=5&&tmp[x][y]&&tmp[x][y-1]==tmp[x][y]&&tmp[x][y+1]==tmp[x][y])\n                {\n                    a[x][y-1]=0;\n                    a[x][y]=0;\n                    a[x][y+1]=0;\n                    flag=1;\n                }\n            }\n        }\n        if(!flag)return;\n        //Part2 \u6389\u4e0b\u6765\uff0c\u56de\u5230Part1\n        for(RG int i=0;i<=4;i++)Diaoluo(i);\n    }\n}\ninline void Update_ans(int i,int x,int y,int fangxiang)\n{\n    ans[i][1]=x;\n    ans[i][2]=y;\n    ans[i][3]=fangxiang;\n}\ninline int pd_xiaowan()\n{\n    for(RG int x=0;x<=4;x++)\n        for(RG int y=0;y<=6;y++)\n            if(a[x][y])return 0;\n    return 1;\n}\nvoid DFS(int step)//\u641c\u6bcf\u4e00\u6b65\n{\n    //Part1 \u5224\u65ad\u6761\u4ef6\n    if(pd_xiaowan()&&step==n)//\u6d88\u9664\u5b8c\u5e76\u4e14\u6b65\u6570\u521a\u597d\u5219\u53ef\u4ee5\n    {\n        for(RG int i=1;i<=step;i++)\n            printf(\"%d %d %d\\n\",ans[i][1],ans[i][2],ans[i][3]);\n        exit(0);\n    }\n    if(step>=n)return;//\u8d85\u8fc7\u89c4\u5b9a\u6b65\u6570\n    //Part2 \u5907\u4efd\n    RG int tmp[6][8];\n    memcpy(tmp,a,sizeof(tmp));\n    //Part3 \u79fb\u52a8(\u5173\u952e\u5b57\u4e3ax,y,\u5148\u53f3\u518d\u5de6)\n    for(RG int x=0;x<=4;x++)\n    {\n        for(RG int y=0;y<=6;y++)\n        {\n            if(!a[x][y])continue;//\u7a7a\u683c\u4e0d\u80fd\u79fb\u52a8\n            if(x!=4)//\u6ca1\u8d8a\u754c\n            {\n                swap(a[x][y],a[x+1][y]);\n                Diaoluo(x);\n                Diaoluo(x+1);//\u79fb\u52a8\u4e4b\u540e\u628a\u8fd9\u4e24\u884c\u6389\u4e0b\u6765\n                BOOM();//\u6d88\u9664\n                Update_ans(step+1,x,y,1);\n                //print();\n                DFS(step+1);\n                //\u56de\u6eaf\n                Update_ans(step+1,0,0,0);\n                memcpy(a,tmp,sizeof(a));\n            }\n            if(x&&!a[x-1][y])\n            {\n                swap(a[x][y],a[x-1][y]);\n                Diaoluo(x);\n                Diaoluo(x-1);\n                BOOM();\n                Update_ans(step+1,x,y,-1);\n                //print();\n                DFS(step+1);\n                Update_ans(step+1,0,0,0);\n                memcpy(a,tmp,sizeof(a));\n            }\n        }\n    }\n}\ninline void in()\n{\n    cin>>n;\n    for(RG int i=0;i<=4;i++)\n    {\n        RG int p=0;\n        do{\n            cin>>a[i][p];p++;\n        }while(a[i][p-1]!=0);\n    }\n    //print();\n}\nvoid print()\n{\n    for(int i=0;i<=4;i++)\n    {\n        for(int j=0;j<=6;j++)printf(\"%d \",a[i][j]);\n        printf(\"\\n\");\n    }\n    printf(\"\\n\");\n}\n```\nPS\uff1a\u6211\u8ba4\u4e3a\u53f3\u79fb\u7684\u65f6\u5019\u76f8\u540c\u662f\u53ef\u4ee5\u79fb\u52a8\u7684\uff0c\u4e0d\u7136\u82e5\u6ca1\u6709\u8fbe\u5230\u89c4\u5b9a\u6b65\u6570\uff0c\u5c31\u56de\u8f93\u51fa-1\n\u5982\u679c\u4e0d\u52a0\u4f1aT\uff0c\u53ea\u80fd\u8bf4\u660e\u4f60\u7684\u641c\u7d22\u4e0d\u591f\u4f18\u79c0/\u6ed1\u7a3d/\n",
        "postTime": 1508308344,
        "uid": 49826,
        "name": "xzy_test",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1312 \u3010Mayan\u6e38\u620f\u3011"
    },
    {
        "content": "/\\*luogu\u541e\u683c\u5f0f\uff0c\u4fee\u6539\u9898\u89e3\u3002\u6c42\u901a\u8fc7\\*/\n\n\u601d\u8def\u5c31\u662f\u6a21\u62df+\u641c\u7d22\u3002\u6ce8\u610f\u5404\u65b9\u9762\u7684\u526a\u679d\n\n\n1.\u5728\u4e2d\u95f4\u7684\u65f6\u5019\u5411\u53f3\u4ea4\u6362(\u5de6\u8fb9\u90a3\u4e2a\u5411\u53f3\u8fb9\u79fb\u52a8\u5b57\u5178\u5e8f\u66f4\u5c0f)\n\n\n2.\u5f53\u5de6\u8fb9\u6ca1\u6709\u683c\u7684\u65f6\u5019\u5411\u5de6\u79fb\u52a8\n\n\n3.\u5f53\u53f3\u8fb9\u7684\u683c\u5b50\u548c\u81ea\u5df1\u76f8\u540c\u65f6\u8df3\u8fc7\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\nconst int maxn=6;\nint n,map[maxn][7][5]={0};\nint a[maxn],b[maxn],c[maxn]; //\u5206\u522b\u5b58\u50a8\u51e0\u4e2a\u7b54\u6848 \nvoid swap(int *a,int *b){\n    int t=*a;\n    *a=*b;\n    *b=t;\n}\nvoid fall(int depth){//\u5c06\u65b9\u5757\u6389\u843d \n    for(int j=0;j<5;j++){//\u5c0f\u4f18\u5316 \n        int i=0,k;\n        while(map[depth][i][j])i++;\n        if(i==7)continue;\n        k=i+1;\n        while(map[depth][k][j]==0&&k<7)k++;\n        while(k<7)swap(&map[depth][i++][j],&map[depth][k++][j]);\n    }\n}\nbool Delet(int depth){//\u6d88\u9664\u8fde\u7740\u7684\u65b9\u5757 \n    bool changed=false;\n    bool mark[7][5]={0};\n    for(int i=0;i<7;i++)\n    for(int j=0;j<5;j++)\n    if(map[depth][i][j])\n    {\n        int up=i,right=j,s=map[depth][i][j];\n        while(map[depth][up][j]==s&&up<7)up++;//up<8...\n        while(map[depth][i][right]==s&&right<5)right++;//right<6..\u54c8\u54c8\u8fd9\u4e24\u4e2a\u5730\u65b9\u9519\u4e86 \n        if(up-i>=3)for(int k=i;k<up;k++)mark[k][j]=true;\n        if(right-j>=3)for(int k=j;k<right;k++)mark[i][k]=true;\n    }\n    for(int i=0;i<7;i++)\n    for(int j=0;j<5;j++)if(mark[i][j])map[depth][i][j]=0,changed=true;\n    if(changed)return true;\n    else\n    return false;\n}\nbool dfs(int depth)\n{\n    do{\n        fall(depth);\n    }while(Delet(depth));\n    if(depth>=n){//depth==n+1\u662f\u9519\u7684.. \n        for(int j=0;j<5;j++)if(map[depth][0][j])return false;    //\u4f18\u5316 \n        return true;\n    }\n    for(int j=0;j<5;j++)//\u5b57\u5178\u5e8f \n    for(int i=0;i<7;i++)\n    if(map[depth][i][j]){//\u2462\u7684\u60c5\u51b5 \n        a[depth]=j,b[depth]=i;\n        if(j<4&&map[depth][i][j]!=map[depth][i][j+1]){//\u2460\u7684\u60c5\u51b5 \n            memcpy(map[depth+1],map[depth],sizeof(map[depth]));\n            swap(&map[depth+1][i][j],&map[depth+1][i][j+1]);\n            c[depth]=1;\n            if(dfs(depth+1))return true;\n        }\n        if(j>0&&map[depth][i][j-1]==0){//\u2461\u7684\u60c5\u51b5 \n            memcpy(map[depth+1],map[depth],sizeof(map[depth]));\n            swap(&map[depth+1][i][j],&map[depth+1][i][j-1]);\n            c[depth]=-1;\n            if(dfs(depth+1))return true;\n        }\n    }\n    return false;\n}\nint main()\n{\n    scanf(\"%d\\n\",&n);\n    for(int j=0;j<5;j++){\n    char ch;\n    int i=0;\n    while((ch=getchar())!='\\n')if(ch>='0'&&ch<='9')map[0][i++][j]=ch-'0';//\u8bfb\u5165 \n    }\n    if(dfs(0))\n        for(int i=0;i<n;i++)printf(\"%d %d %d\\n\",a[i],b[i],c[i]);\n    else printf(\"-1\\n\");\n    return 0;\n}\n```",
        "postTime": 1504933347,
        "uid": 22150,
        "name": "\u548c\u5176\u6b63",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1312 \u3010Mayan\u6e38\u620f\u3011"
    },
    {
        "content": "\u4e00\u9053\u5f88\u7ecf\u5178\u7684\u6df1\u641c\u9898\uff0c\u8981\u6ce8\u610f\u56de\u6eaf\u4e4b\u524d\u4fdd\u7559\u539f\u72b6\u6001\u3002\u7136\u540e\u5c31\u662f\u8f93\u5165\u4e00\u5b9a\u8981\u6ce8\u610f\uff0c\u5982\u679c\u662f\u7528for\u5faa\u73af\uff0c\u8bb0\u5f97\u8981\u8f93\u5165\u516b\u4e2a\u70b9\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\nusing namespace std;\nint ans,s[8][8],p[10][5],yan[11],cnt;\nvoid xiao();\nvoid bfs();\nvoid dfs();\nvoid diao()\n{\n    int a,b,c=0;\n    for(int i=1;i<=5;i++)\n    {\n        for(int j=1;j<=7;j++)\n        {\n            if(s[i][j])\n            {\n                a=j;\n                while(!s[i][a-1]&&a>=2)\n                {\n                    c=1;\n                    s[i][a-1]=s[i][a];\n                    s[i][a]=0;\n                    a--;\n                }\n            }\n        }\n    }\n    if(c)\n    xiao();\n    return;\n}\nbool bfs(int a,int b,int c)\n{\n    int i,j,k,head=0,tail=1,o[100][4],v=0,u=0;\n    o[0][1]=a;\n    o[0][2]=b;\n    while(head!=tail)\n    {\n        int x=o[head][1],y=o[head][2];\n        int a=y,b=y;\n        while(s[x][a+1]==c)\n        a++;\n        while(s[x][b-1]==c)\n        b--;\n        if(a-b>=2)\n        {\n            v=1;\n            for(i=b;i<=a;i++)\n            {\n                if(s[x][i])\n                {\n                    u++;\n                    s[x][i]=0;\n                    o[tail][1]=x;\n                    o[tail][2]=i;\n                    tail++;\n                }\n            }\n        }\n        a=x;\n        b=x;\n        while(s[a+1][y]==c)\n        a++;\n        while(s[b-1][y]==c)\n        b--;\n        if(a-b>=2)\n        {\n            v=1;\n            for(i=b;i<=a;i++)\n            {\n                if(s[i][y])\n                {\n                    u++;\n                    s[i][y]=0;\n                    o[tail][1]=i;\n                    o[tail][2]=y;\n                    tail++;\n                }\n            }\n        }\n        head++;\n    }\n    if(v)\n    {\n        yan[c]-=u;\n        return 1;\n    }\n    return 0;\n}\nvoid xiao()\n{\n    int a,b,c=0;\n    for(int j=1;j<=5;j++)\n    for(int k=1;k<=7;k++)\n    if(s[j][k]&&yan[s[j][k]]>=3)\n    {\n        if(bfs(j,k,s[j][k]))\n        c=1;\n    }\n    else if(yan[s[j][k]]<3&&yan[s[j][k]]);\n    if(c)\n    diao();\n    return;\n}\nvoid dfs(int n)\n{\n    int i,j,k,a,b,c=0,map[8][8],yan1[11];\n    for(i=1;i<=cnt;i++)\n    if(yan[i]<3&&yan[i])\n    return;\n    if(n>ans)\n    {\n        for(i=1;i<=cnt;i++)\n        if(yan[i])\n        return;\n        for(i=1;i<=n-1;i++)\n        cout<<p[i][1]-1<<\" \"<<p[i][2]-1<<\" \"<<p[i][3]<<endl;\n        exit(0);\n    }\n    for(i=1;i<=5;i++)\n    {\n        for(j=1;j<=7;j++)\n        {\n            if(s[i][j])\n            {\n                if(i<=4&&s[i][j]!=s[i+1][j])\n                {\n                    for(int i=1;i<=5;i++)\n                    for(int j=1;j<=7;j++)\n                    map[i][j]=s[i][j];\n                    for(int i=1;i<=cnt;i++)\n                    yan1[i]=yan[i];\n                    a=s[i][j];\n                    s[i][j]=s[i+1][j];\n                    s[i+1][j]=a;\n                    p[n][1]=i;\n                    p[n][2]=j;\n                    p[n][3]=1;\n                    diao();\n                    xiao();\n                    dfs(n+1);\n                    for(int i=1;i<=5;i++)\n                    for(int j=1;j<=7;j++)\n                    s[i][j]=map[i][j];\n                    for(int i=1;i<=cnt;i++)\n                    yan[i]=yan1[i];\n                }\n                if(!s[i-1][j]&&i>=2)\n                {\n                    for(int i=1;i<=5;i++)\n                    for(int j=1;j<=7;j++)\n                    map[i][j]=s[i][j];\n                    for(int i=1;i<=cnt;i++)\n                    yan1[i]=yan[i];\n                    s[i-1][j]=s[i][j];\n                    s[i][j]=0;\n                    p[n][1]=i;\n                    p[n][2]=j;\n                    p[n][3]=-1;\n                    diao();\n                    xiao();\n                    dfs(n+1);\n                    for(int i=1;i<=5;i++)\n                    for(int j=1;j<=7;j++)\n                    s[i][j]=map[i][j];\n                    for(int i=1;i<=cnt;i++)\n                    yan[i]=yan1[i];\n                }\n            }\n        }\n    }\n}\nint main()\n{\n    int i,j;\n    cin>>ans;\n    for(i=1;i<=5;i++)\n    {\n        cin>>s[i][1];\n        if(s[i][1])\n        yan[s[i][1]]++;\n        for(j=2;j<=8;j++)\n        {\n            if(s[i][j-1])\n            {\n                cin>>s[i][j];\n                if(s[i][j])\n                yan[s[i][j]]++;\n            }\n            else break;\n        }\n    }\n    for(i=10;i>=1;i--)\n    if(yan[i])\n    break;\n    cnt=i;\n    dfs(1);\n    cout<<-1<<endl;\n    return 0;\n}\n```",
        "postTime": 1479472317,
        "uid": 24805,
        "name": "luaddict",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1312 \u3010Mayan\u6e38\u620f\u3011"
    },
    {
        "content": "\u5e86\u795d\u6211\u7684\u795e\u5947AC\uff0c\u4f5c\u4e3a\u4e00\u9053\u66b4\u641c\u9898\uff0c\u518d\u5408\u9002\u4e0d\u8fc7\u4e86\u3002\n\n\u770b\u8303\u56f4\u5c31\u77e5\u9053\uff0c5x7\u7684\u77e9\u5f62\uff0cn<=5\uff0c3s\u7684\u9650\u65f6\uff0c\u66b4\u529b\u7684\u4e0d\u80fd\u518d\u66b4\u529b\u4e86\uff0c\u7136\u800c\u6211\u5728\u81ea\u6d4b\u7684\u65f6\u5019\u6700\u6162\u7684\u4e00\u4e2a\u70b9\u4e5f\u53ea\u67090.8\u79d2\n\n\u4e24\u4e2a\u5b57\uff0c\u66b4\u529b\uff0c\u5c31\u8fd9\u4e24\u4e2a\u5b57\uff0c\u6d88\u9664\u3001\u4e0b\u843d\u3001\u5224\u65ad\uff0c\u5168\u90fd\u66b4\u529b\uff0c\u904d\u5386\u56fe\u5c31\u597d\uff0c\u904d\u5386\u4e2a\u4e00\u4e24\u904d\u90fd\u6ca1\u4ec0\u4e48\u3002\n\n\u53ef\u80fd\u4f1a\u7a0d\u5fae\u6709\u70b9\u95ee\u9898\u7684\u662f\u600e\u4e48\u5224\u65ad\u6d88\u9664\uff0c\u6bd5\u7adf\u6a2a\u5411\u3001\u7ad6\u5411\u90fd\u53ef\u80fd\u4f1a\u5b58\u5728\u6d88\u9664\uff0c\u5176\u5b9e\u4e5f\u7b80\u5355\uff1a\u904d\u5386\u4e00\u904d\u56fe\uff0c\u7136\u540e\u679a\u4e3e\u4e2d\u95f4\u70b9\uff0c\u5982\u679c\u6a2a\u5411\u6216\u8005\u7eb5\u5411\u6709\u4e09\u4e2a\u76f8\u540c\u989c\u8272\u7684\uff0c\u5c31\u5168\u90fd\u6807\u8bb0\uff0c\u6700\u540e\u518d\u904d\u5386\u4e00\u904d\u56fe\uff0c\u628a\u6807\u8bb0\u4e86\u7684\u5168\u90e8\u6e05\u7a7a\u5c31\u597d\u3002\n\nvar a,f:array[-5..10,-5..10] of longint;//\u672c\u6765\u4e0d\u7528\u5f00\u8fd9\u4e48\u5927\u4e5f\u80fdA\u7684\uff0c\u4f46\u662f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u6d1b\u8c37\u7206RE\u4e86\uff0c\u5f00\u5927\u5c31\u6ca1\u4e8b\u4e86\n\n```cpp\n    qx,qy,qz:array[1..10] of longint;\n    i,j,k,m,n,p,t:longint;\nfunction clean:boolean;\nvar i,j:longint;\nbegin\n    for i:=0 to 4 do\n      for j:=0 to 6 do\n        if a[i,j]<>0 then exit(false);\n    exit(true);\nend;\nprocedure fall;\nvar i,j,k:longint;\nbegin\n    for i:=0 to 4 do\n      for j:=1 to 6 do\n      begin\n          if a[i,j]<>0 then\n          begin\n              k:=j-1;\n              while (a[i,k]=0)and(k>=0) do\n              begin\n                  a[i,k]:=a[i,k+1];\n                  a[i,k+1]:=0;\n                  dec(k);\n              end;\n          end;\n      end;\nend;\nfunction kill:boolean;\nvar i,j,k:longint;ff:boolean;\nbegin\n    fillchar(f,sizeof(f),0);ff:=false;\n    for i:=0 to 4 do\n      for j:=0 to 6 do\n      begin\n          if a[i,j]<>0 then\n          begin\n              if (j-1>=0)and(a[i,j-1]=a[i,j])and(a[i,j]=a[i,j+1]) then\n              begin\n                  f[i,j]:=1;f[i,j-1]:=1;f[i,j+1]:=1;\n                  ff:=true;\n              end;\n              if (i-1>=0)and(a[i+1,j]=a[i,j])and(a[i-1,j]=a[i,j]) then\n              begin\n                  f[i,j]:=1;f[i+1,j]:=1;f[i-1,j]:=1;\n                  ff:=true;\n              end;\n          end;\n      end;\n    if not ff then exit(false);\n    for i:=0 to 4 do\n      for j:=0 to 6 do\n        if f[i,j]=1 then a[i,j]:=0;\n    exit(true);\nend;\nprocedure dfs(c:longint);\nvar i,j,k:longint;b:array[-5..10,-5..10] of longint;\nbegin\n    if c=n+1 then\n    begin\n        if clean then\n        begin\n            for i:=1 to n do\n              writeln(qx[i],' ',qy[i],' ',qz[i]);\n            halt;\n        end;\n        exit;\n    end;\n    b:=a;\n    for i:=0 to 4 do\n      for j:=0 to 6 do\n      begin\n          if a[i,j]<>0 then\n          begin\n              if (a[i+1,j]<>a[i,j])and(i+1<=4) then\n              begin\n                  k:=a[i+1,j];\n                  a[i+1,j]:=a[i,j];\n                  a[i,j]:=k;\n                  qx[c]:=i;qy[c]:=j;qz[c]:=1;\n                  fall;\n                  while kill do fall;\n                  dfs(c+1);\n                  a:=b;\n              end;\n              if (i-1>=0)and(a[i-1,j]=0) then\n              begin\n                  k:=a[i-1,j];\n                  a[i-1,j]:=a[i,j];\n                  a[i,j]:=k;\n                  qx[c]:=i;qy[c]:=j;qz[c]:=-1;\n                  fall;\n                  while kill do fall;\n                  dfs(c+1);\n                  a:=b;\n              end;\n          end;\n          a:=b;\n      end;\nend;\nbegin\n    readln(n);\n    for i:=0 to 4 do\n    begin\n        read(p);t:=-1;\n        while p<>0 do\n        begin\n            inc(t);\n            a[i,t]:=p;\n            read(p);\n        end;\n    end;\n    dfs(1);\n    writeln(-1);\nend.\n```",
        "postTime": 1478782609,
        "uid": 14130,
        "name": "The_Dark_Knight",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1312 \u3010Mayan\u6e38\u620f\u3011"
    },
    {
        "content": "```cpp\n\n/*\n\u6b64\u9898\u7684\u526a\u679d\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u4e0d\u8fdb\u884c\u5de6\u79fb\u3002\n\u53e6\u5916\u68c0\u67e5\u6389\u843d\u65f6\uff0c\u4e0d\u8981\u4e00\u4e2a\u4e00\u4e2a\u6389\uff0c\u4e00\u6b21\u6027\u6389\u5230\u5e95\u3002\n\u6ce8\u610f\u79fb\u52a8\u5b8c\u540e\u53ef\u80fd\u4f1a\u6709\u591a\u6b21\u6d88\u65b9\u5757\u3002 \n*/\n\n#include <cstdio>\n#include <algorithm>\n#include <cstdlib>\nusing namespace std;\nstruct id\n{\n    int xx,yy,gg;\n};\nid ans[100];\nint map[100][10][10],n; \n\nbool pd(int x)//\u5224\u65admap[x] \n{\n    for (int i=1;i<=7;i++)\n    for (int j=1;j<=5;j++)\n    if (map[x][i][j]!=0) return false;\n    return true;\n}\n\nvoid check(int x)//\u5bf9map[X]\u4e2d\u68c0\u67e5\u6389\u843d \n{\n    for (int i=2;i<=7;i++)\n    for (int j=1;j<=5;j++)    \n    if (map[x][i][j]!=0 && map[x][i-1][j]==0)\n    {\n        int t=i;\n        while (map[x][t-1][j]==0 && t-1>0) t--;\n        map[x][t][j]=map[x][i][j];\n        map[x][i][j]=0;\n    }\n}\n\nbool xfk(int x)//\u6d88\u65b9\u5757\uff0cx\u8868\u793a\u6d88\u54ea\u4e2amap\u7684\u65b9\u5757 \n{\n    bool f[10][10],flag=false;//flag\u8868\u793a\u662f\u5426\u6709\u65b9\u5757\u6d88\u9664\u8fc7 \n    //\u7528\u4e00\u4e2a\u6807\u8bb0\u6570\u7ec4\uff0c\u5bf9map\u4e0a\u6bcf\u4e2a\u70b9\u8fdb\u884c\u6269\u5c55\uff0c\u53d1\u73b0\u53ef\u6269\u5c55\u6570\u5927\u4e8e\u7b49\u4e8e3\uff0c\u5c31\u6807\u8bb0\uff0c\u6700\u540e\u7edf\u4e00\u8d4b\u503c\u4e3a0 \n    for (int i=1;i<=7;i++)\n    for (int j=1;j<=5;j++)\n    f[i][j]=false;\n    for (int i=1;i<=7;i++)\n    for (int j=1;j<=5;j++)\n    if (map[x][i][j]!=0)\n    {\n        int t1=1,t2=1,t3=1,t4=1;\n        while (map[x][i][j+t1]==map[x][i][j]) t1++;\n        while (map[x][i][j-t2]==map[x][i][j]) t2++;\n        while (map[x][i+t3][j]==map[x][i][j]) t3++;\n        while (map[x][i-t4][j]==map[x][i][j]) t4++;\n        if (t1+t2>3 || t3+t4>3) f[i][j]=true;\n    }\n    for (int i=1;i<=7;i++)\n    for (int j=1;j<=5;j++)\n    if (f[i][j]) map[x][i][j]=0,flag=true;\n    check(x);\n    return flag;\n}\n\nvoid change(int x,int y,int x1,int y1,int x2,int y2)\n//\u628amap[x][x1][y1]\u548cmap[x][x2][y2]\u4ea4\u6362\uff0c\u5e76\u4e14\u5b58\u5230map[y]\u4e2d \n{\n     for (int i=1;i<=7;i++)\n    for (int j=1;j<=5;j++)\n    map[y][i][j]=map[x][i][j];\n    int t=map[y][x1][y1];\n    map[y][x1][y1]=map[y][x2][y2];\n    map[y][x2][y2]=t;\n    check(y);\n    while (xfk(y));\n}\n\nvoid dfs(int x,int y)\n{\n    if (x==n && pd(y)) \n    {\n        for (int i=1;i<=n;i++)\n        printf(\"%d %d %d\\n\",ans[i].yy-1,ans[i].xx-1,ans[i].gg);\n        exit(0);\n    }\n    if (x==n) return;\n    for (int j=1;j<=5;j++)\n    for (int i=1;i<=7;i++)\n    if (map[y][i][j]!=0)\n    {\n        if (j+1<=5)//\u53f3\u79fb \n        {\n            if (map[y][i][j+1]==0) change(y,y+1,i,j,i,j+1);\n            else change(y,y+1,i,j,i,j+1);\n            ans[x+1].xx=i;\n            ans[x+1].yy=j;\n            ans[x+1].gg=1;\n            dfs(x+1,y+1); \n        }\n        if (j-1>=1 && map[y][i][j-1]==0)//\u5de6\u79fb\uff0c\u53ea\u8fdb\u884c\u79fb\u52a8\uff0c\u4e0d\u4ea4\u6362 \n        {\n            change(y,y+1,i,j,i,j-1);        \n            ans[x+1].xx=i;\n            ans[x+1].yy=j;\n            ans[x+1].gg=-1;\n            dfs(x+1,y+1);\n        }\n    }\n}\n\nint main()\n{\n    scanf(\"%d\",&n);\n    for (int i=1;i<=5;i++)\n    {\n        int j=0,t;\n        scanf(\"%d\",&t);\n        while (t!=0) \n        {\n            j++;\n            map[0][i][j]=t;\n            scanf(\"%d\",&t);\n        }\n    }\n    for (int i=1;i<=5;i++)\n    for (int j=1;j<=7;j++)\n    map[1][j][i]=map[0][i][j];\n    dfs(0,1);    \n    printf(\"-1\");\nreturn 0;\n}\n\n```",
        "postTime": 1455928452,
        "uid": 2578,
        "name": "varvar",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1312 \u3010Mayan\u6e38\u620f\u3011"
    },
    {
        "content": "\u641c\u7d22\u6a21\u62df\u9898\uff0c\u6309\u7167\u9898\u76ee\u63cf\u8ff0\u8fdb\u884c\u6a21\u62df\u5373\u53ef\u3002\u6ce8\u610f\u6bcf\u4e00\u6b21\u64cd\u4f5c\u540e\u4e0b\u843d\u548c\u6d88\u9664\u7684\u52a8\u4f5c\u53ef\u80fd\u4e0d\u6b62\u4e00\u6b21\uff08\u9700\u8981\u4e0b\u843d\u2192\u6d88\u9664\u2192\u4e0b\u843d\u2192\u6d88\u9664...\u5730\u8fdb\u884c\uff0c\u76f4\u5230\u67d0\u4e00\u73af\u8282\u4e0d\u518d\u4f7f\u6e38\u620f\u5c40\u9762\u53d8\u5316\uff09\u3002\u7531\u4e8en<=5\u5176\u5b9e\u4e0d\u9700\u8981\u505a\u592a\u591a\u4f18\u5316\uff0c\u4e00\u4e2a\u6bd4\u8f83\u663e\u7136\u7684\u4f18\u5316\u662f\uff1a\u5728\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u4e00\u4e2a\u65b9\u5757\u8981\u5411\u5de6\u8fb9\u79fb\u52a8\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65b9\u5757\u7684\u5de6\u8fb9\u5fc5\u7136\u662f\u7a7a\u7684\uff08\u5426\u5219\u53ef\u4ee5\u901a\u8fc7\u8ba9\u5de6\u8fb9\u7684\u65b9\u5757\u53f3\u79fb\u4ee5\u7f29\u5c0f\u5b57\u5178\u5e8f\uff09\u3002\n",
        "postTime": 1435759457,
        "uid": 4341,
        "name": "TsReaper",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1312 \u3010Mayan\u6e38\u620f\u3011"
    }
]