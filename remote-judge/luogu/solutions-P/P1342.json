[
    {
        "content": "\u770b\u5230\u8fd8\u6ca1\u6709\u7528stl\u4f18\u5148\u961f\u5217\u4f18\u5316\u7684spfa\uff0c\u90a3\u5c31\u6765\u4e00\u53d1\u5427\u3002\n\n\u6a21\u677f\u9898\uff0c\u552f\u4e00\u7684\u4e0d\u540c\u5c31\u662f\u5728\u5efa\u56fe\u65f6\u540c\u65f6\u5efa\u6b63\u5411\u56fe\\*1+\u53cd\u5411\u56fe\\*1\uff0c\u7136\u540e\u5404\u8dd1\u4e00\u904dspfa\uff0c\u5404\u628a1\u5230\u5176\u4ed6\u70b9\u7684\u82b1\u8d39\u90fd\u52a0\u8d77\u6765\u5c31\u597d\u4e86\uff08long long\uff09\u3002\n\nCode\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\nusing namespace std;\nconst int MAXN=1000000+5;\nconst int inf=2147483647;\nint m,n,sx=1,num1,num2;\nstruct line \n{\n    int from,to,dis;\n}d[MAXN],f[MAXN];\nint head1[MAXN],head2[MAXN];\nbool inq[MAXN];\nint dis[MAXN];\nlong long ans;\nint r() \n{ \n    int f=1,p=0;\n    char c=getchar(); \n    while(c>'9'||c<'0')\n      {\n        if(c=='-') f=-1;\n        c=getchar();\n      } \n    while(c>='0'&&c<='9')\n      {\n         p=p*10+c-'0';\n         c=getchar();\n      } \n    return f*p; \n}\nvoid add(int x,int y,int v)\n{\n    d[++num1].to=y;\n    d[num1].from=head1[x];\n    head1[x]=num1;\n    d[num1].dis=v;\n    f[++num2].to=x;\n    f[num2].from=head2[y];\n    head2[y]=num2;\n    f[num2].dis=v;\n}\nvoid spfa1()\n{\n    deque <int> q;\n    q.push_front(sx);\n    fill(dis+2,dis+n+1,inf);\n    while(!q.empty())\n      {\n          int x=q.front();\n          q.pop_front();\n          inq[x]=0;\n          for(int k=head1[x];k;k=d[k].from)\n            {\n                int v=d[k].to,w=d[k].dis;\n                if(w+dis[x]<dis[v])\n                  {\n                        dis[v]=w+dis[x];\n                        if(!inq[v])\n                          {\n                                if(q.empty()||dis[v]<dis[q.front()]) q.push_front(v);\n                                else q.push_back(v);\n                                inq[v]=1;\n                    }\n              }\n          }\n      }\n    for(int i=2;i<=n;i++)\n      ans+=dis[i];\n}\nvoid spfa2()\n{\n    deque <int> t;\n    t.push_front(sx);\n    fill(dis+2,dis+n+1,inf);\n    while(!t.empty())\n      {\n          int x=t.front();\n          t.pop_front();\n          inq[x]=0;\n          for(int k=head2[x];k;k=f[k].from)\n            {\n                int v=f[k].to,w=f[k].dis;\n                if(w+dis[x]<dis[v])\n                  {\n                        dis[v]=w+dis[x];\n                        if(!inq[v])\n                          {\n                                if(t.empty()||dis[v]<dis[t.front()]) t.push_front(v);\n                                else t.push_back(v);\n                                inq[v]=1;\n                    }\n              }\n          }\n      }\n    for(int i=2;i<=n;i++)\n      ans+=dis[i];\n}\nint main()\n{\n    n=r();m=r();\n    for(int i=1;i<=m;i++)\n      {\n          int x,y,z;\n          x=r(); y=r(); z=r();\n          add(x,y,z);\n      }\n    spfa1();\n    spfa2();\n    printf(\"%lld\",ans);\n    return 0;\n}\n```",
        "postTime": 1483847580,
        "uid": 21264,
        "name": "\u7b03\u884c",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1342 \u3010\u8bf7\u67ec\u3011"
    },
    {
        "content": "dijkstra\u88f8\u9898\u554a\u3002\u3002\u3002\n\n\u5176\u5b9e\u697c\u4e0b\u90a3\u4e9b\u4f18\u5316\u5c31\u4e00\u4e2a\u5806\u4f18\u5316\u5373\u53ef\u7684\n\n\u7b97\u6cd5\u590d\u6742\u5ea6\uff08m+logm\uff09\n\n\u8fd9\u91cc\u8bb2\u4e00\u4e2a\u5806\u4f18\u5316\u7684\u6ce8\u610f\uff08stl\u663e\u7136\u7684\u5bf9\u4e0d\u5bf9\uff09\n\n\u8bb0\u5f97\u5728\u904d\u5386\u51fa\u8fb9\u65f6\u6253\u6807\u8bb0\u5373\u53ef\n\n\u8fd8\u6709\u8bb0\u5f97\u52a0 long long\n\n\u8fd9\u6837\u7684\u8bdd\u597d\u50cf\u6ca1\u5565\u597d\u8bb2\u7684\u4e86\n\n\u4e0a\u4ee3\u7801\u5427~\n\n```cpp\n#include<stdio.h>\n#include<queue>\nusing namespace std;\nstruct data//\u7b2c\u4e00\u4e2a\u90bb\u63a5\u8868\u5b58\u6b63\u5411\u56fe\n{\n    int v;int next;int val;\n}edge[1000010];int cnt;\nint alist[1000010];\nvoid add(int u,int v,int val)\n{\n    edge[++cnt].v=v;\n    edge[cnt].val=val;\n    edge[cnt].next=alist[u];\n    alist[u]=cnt;\n    return;\n}\nstruct data2//\u7b2c\u4e8c\u4e2a\u90bb\u63a5\u8868\u5b58\u53cd\u5411\u56fe\uff08\u56de\u57ce\u7684\u8def\u5f84\uff09\n{\n    int v;int next;int val;\n}edge2[1000010];int cnt2;\nint alist2[1000010];\nvoid kid(int v,int u,int val)\n{\n    edge2[++cnt2].v=v;\n    edge2[cnt2].val=val;\n    edge2[cnt2].next=alist2[u];\n    alist2[u]=cnt2;\n    return;\n}\nstruct node//\u4e00\u5f00\u59cb\u8111\u6b8b\u60f3\u5230\u4e86\u6700\u5c0f\u751f\u6210\u6811\uff0c\u4e0d\u8981\u7406\u6211\u3002\u3002\u3002\u76f4\u63a5int\u5373\u53ef\n{\n    int d;int n;\n    friend bool operator <(node a,node b)\n    {\n        return a.d>b.d;\n    }\n}d[1000010],now;\npriority_queue <node> pq;//\u8fd9\u91cc\u662fint\u5c31\u597d\uff0c\u4e0d\u8981\u5b66\u6211\nbool book[1000010];\nint n;int m;\nlong long res;\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=0;i<m;i++)\n    {\n        int u;int v;int val;\n        scanf(\"%d%d%d\",&u,&v,&val);\n        add(u,v,val);//\u6b63\u5411\u5efa\u56fe\n        kid(u,v,val);//\u53cd\u5411\u5efa\u56fe\n    }\n    for(int i=1;i<=n;i++)//\u521d\u59cb\u5316\n    {\n        d[i].d=0x3f3f3f3f;\n        d[i].n=i;\n    }\n    d[1].d=0;pq.push(d[1]);\n    while(!pq.empty())//dijkstra\u819c\u677f\n    {\n        now=pq.top();pq.pop();\n        //printf(\"now %d\\n\",now.n);\n        book[now.n]=true;\n        int next=alist[now.n];\n        while(next)\n        {\n            int v=edge[next].v;\n            int val=edge[next].val;\n            if(book[v]==false)\n            {\n                if(d[v].d>now.d+val)\n                {\n                    d[v].d=now.d+val;\n                    pq.push(d[v]);\n                    //printf(\"->d[%d]=%d\\n\",v,d[v].d);\n                }\n            }\n            next=edge[next].next;\n        }\n    }\n    for(int i=1;i<=n;i++)//\u5904\u7406\u51fa\u57ce\u8f66\u8d39\n    {\n        res+=d[i].d;\n    }\n    for(int i=1;i<=n;i++)//\u7701\u4e2a\u6570\u7ec4\u662f\u4e2a\u6570\u7ec4\n    {\n        d[i].d=0x3f3f3f3f;\n        d[i].n=i;\n    }\n    d[1].d=0;pq.push(d[1]);\n    while(!pq.empty())//\u518d\u6765\u4e00\u904ddijkstra\u819c\u677f\n    {\n        now=pq.top();pq.pop();\n        //printf(\"now %d\\n\",now.n);\n        book[now.n]=false;\n        int next=alist2[now.n];\n        while(next)\n        {\n            int v=edge2[next].v;\n            int val=edge2[next].val;\n            if(book[v]==true)//\u6570\u7ec4\u80fd\u7701\u5c31\u7701\n            {\n                if(d[v].d>now.d+val)\n                {\n                    d[v].d=now.d+val;\n                    pq.push(d[v]);\n                    //printf(\"->d[%d]=%d\\n\",v,d[v].d);\n                }\n            }\n            next=edge2[next].next;\n        }\n    }\n    for(int i=1;i<=n;i++)//\u5904\u7406\u56de\u57ce\u8d39\u7528\n    {\n        res+=d[i].d;\n    }\n    printf(\"%lld\",res);\n    return 0;\n}\n\n```",
        "postTime": 1508832188,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1342 \u3010\u8bf7\u67ec\u3011"
    },
    {
        "content": "\u6211\u8fd9\u91cc\u63a8\u8350\u4e00\u4e0b[\u6211\u7684\u535a\u5ba2](https://www.luogu.org/blog/szr666--blog/)\n\n\u5728\u535a\u5ba2\u91cc\u89c2\u770b\u66f4\u7f8e\u89c2\u54e6~\n\n[\u9898\u76ee](https://www.luogu.org/problemnew/show/P1342)\n------------\n\n\n------------\n\n\u534e\u4e3d\u7684\u5206\u5272\u7ebf\n# \u89e3\u6790\n\u95ee\u9898\u7684\u5b9e\u8d28\u4e3a\n##### \u6c421\u5230\u5404\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u548c\u5404\u4e2a\u70b9\u52301\u7684\u6700\u77ed\u8def\n\u7528dijkstra+\u5806\u4f18\u5316\u6c42\u6700\u77ed\u8def\u518d\u8dd1\u53cd\u56fe\u6700\u77ed\u8def\n\n\u6ce8\u610fdijkstra\u51fd\u6570\u53c2\u6570\u4f20\u6570\u7ec4\u5934\u6307\u9488(int*)\n\n\u94fe\u5f0f\u524d\u5411\u661fadd\u51fd\u6570\u4e00\u6b21\u64cd\u4f5c\u5b58\u6b63\u53cd\u4e24\u6761\u8fb9\n\n\u4e0d\u4f1adijkstra+\u5806\u4f18\u5316\uff1f[\u6233\u8fd9\u91cc](https://www.luogu.org/blog/szr666--blog/ti-gao-xing-xuan-zhuan-ti-shu-zhuang-shuo-zu-li-san-hua-p4779-mu)\n\n## \u7b54\u6848\u8981\u5f00long long ~~\u8840\u7684\u6559\u8bad~~\n# \u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<queue>\n#include<cstring>\n#define ll long long\nusing namespace std;\nstruct node\n{\n    int to;\n    int val;\n    int next;\n};\nstruct data\n{\n    int val;\n    int dis;\n    data(int v,int d)\n    {\n        val=v;\n        dis=d;\n    }\n    data()\n    {\n        \n    }\n    friend bool operator < (data x1,data x2);\n};\nbool operator < (data x1,data x2)\n{\n    return x1.dis==x2.dis ? x1.val<x2.val : x1.dis>x2.dis;\n}\npriority_queue<data> q;\nnode e1[1100001],e2[1100001];\nint head1[1100001],head2[1100001],dis[1100001];\nbool book[1100001];\nint n,m,s,tot;\nvoid read(int &x)\n{\n    int f;\n    f=1;\n    x=0;\n    char c;\n    c=getchar();\n    while((c<'0'||c>'9')&&c!='-')\n    {\n        c=getchar();\n    }\n    if(c=='-')\n    {\n        f=-1;\n        c=getchar();\n    }\n    while(c>='0'&&c<='9')\n    {\n        x=(x<<3)+(x<<1)+(c^48);\n        c=getchar();\n    }\n    x=x*f;\n}\nvoid add(int a,int b,int v)\n{\n    tot++;\n    e1[tot].val=v;\n    e1[tot].to=b;\n    e1[tot].next=head1[a];\n    head1[a]=tot;\n    e2[tot].val=v;\n    e2[tot].to=a;\n    e2[tot].next=head2[b];\n    head2[b]=tot;\n}\nvoid dijkstra(node *e,int *h)\n{\n    int j;\n    data now;\n    memset(book,0,sizeof(bool)*(n+100));\n    memset(dis,0x3f3f3f3f,sizeof(int)*(n+100));\n    dis[s]=0;\n    q.push(data(s,dis[s]));\n    while(!q.empty())\n    {\n        now=q.top();\n        q.pop();\n        if(book[now.val]==0)\n        {\n            book[now.val]=1;\n            for(j=h[now.val];j!=0;j=e[j].next)\n            {\n                if(dis[e[j].to]>dis[now.val]+e[j].val)\n                {\n                    dis[e[j].to]=dis[now.val]+e[j].val;\n                    q.push(data(e[j].to,dis[e[j].to]));\n                }\n            }\n        }\n    }\n}\nint main()\n{\n    int i,u,t,v;\n    ll ans;\n    read(n);\n    read(m);\n    s=1;\n    tot=0;\n    ans=0;\n    for(i=1;i<=m;i++)\n    {\n        read(u);\n        read(t);\n        read(v);\n        add(u,t,v);\n    }\n    dijkstra(e1,head1);\n    for(i=2;i<=n;i++)\n    {\n        ans+=dis[i];\n    }\n    dijkstra(e2,head2);\n    for(i=2;i<=n;i++)\n    {\n        ans+=dis[i];\n    }\n    printf(\"%lld\",ans);\n}\n```\n",
        "postTime": 1552884456,
        "uid": 129849,
        "name": "szr666",
        "ccfLevel": 4,
        "title": "\u63d0\u9ad8+\u7701\u9009-\u4e13\u9898[\u56fe\u8bba][\u6700\u77ed\u8def]\uff1aP1342 \u8bf7\u67ec"
    },
    {
        "content": "~~\u4e00\u9053\u5173\u4e8eDij+\u5806\u4f18\u5316\u7684\u6700\u77ed\u8def\u7684\u95ee\u9898\u3002\uff08\u5e9f\u8bdd\uff09~~\n\n\u770b\u89c1\u5176\u4ed6\u5927\u4f6c\u90fd\u7528\u7684\u524d\u5f0f\u94fe\u5411\u661f\u548cpriority_queue\u81ea\u5b9a\u4e49\u6bd4\u8f83\u5668\uff0c\u6ca1\u6709\u7528vector\u7684\uff0c\u6240\u4ee5\u6211\u6765\u53d1\u4e00\u7bc7vector\u548cSTL\u7684\u9898\u89e3\u3002\n\n\u9996\u5148\u6765\u4e86\u89e3\u4e00\u4e0bDij\uff0cDij\u662f\u6c42\u6c42\u6700\u77ed\u8def\u65f6\u6bd4\u8f83\u5feb\u7684\u4e00\u79cd\u65b9\u6cd5\uff0c\u601d\u8def\u7b80\u5355\uff0c\u4f46\u4e5f\u6709\u4e00\u4e2a\u7f3a\u70b9\uff0c\u90a3\u5c31\u662f\u65e0\u6cd5\u5224\u6743\u503c\u4e3a\u8d1f\u7684\u60c5\u51b5\u3002\n\n[Dij\u52a0\u5806\u4f18\u5316\u8bb2\u89e3](https://www.luogu.com.cn/paste/u2ed81ja)\n\n\u8fd9\u9053\u9898\u5c31\u662f\u8ba9\u6211\u4eec\u5148\u6c42\u4e00\u904d1\u5230\u6240\u6709\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u518d\u6c42\u4e00\u904d\u4ece\u5404\u4e2a\u70b9\u52301\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u518d\u5c06\u503c\u90fd\u52a0\u8d77\u6765\uff0c\u5c31\u662f\u6700\u7ec8\u7b54\u6848\u3002\n\n\u770b\u4f3c\u7b80\u5355\uff0c\u76f8\u4fe1\u5728\u6c42\u6bcf\u4e2a\u70b9\u52301\u7684\u6700\u77ed\u8def\u65f6\uff0c\u7b2c\u4e00\u4e2a\u60f3\u5230\u7684\uff0c\u80af\u5b9a\u662f\u4e00\u4e2afor\uff0c\u5faa\u73af\u6bcf\u4e00\u4e2a\u70b9\uff0c\u6c42\u4e00\u904dDij\uff0c\u5728\u628a\u6240\u6709\u7684d[1]\u52a0\u8d77\u6765\u3002\n\n\u606d\u559c\u60a8\uff0c\u4e30\u6536\u4e864\u4e2a[TLE](https://www.luogu.com.cn/record/31586138)\n\n\u90a3\u6211\u4eec\u6765\u601d\u8003\u4e00\u4e0b\u6b63\u89e3\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u56fe\u6b63\u7740\u5b58\u4e00\u904d\uff0c\u7136\u540e\u518d\u53cd\u7740\u5b58\u4e00\u904d\uff0c\u5206\u522b\u6c42Dij(1)\u3002\n\n\u6b63\u7740\u7684\u56fe\u6c42\u51fa\u6765\u7684\u9057\u7231\u5230\u6bcf\u4e2a\u70b9\u7684\u8ddd\u79bb\uff0c\u53ca\u6240\u6709\u4eba\u51fa\u53d1\u5230\u6bcf\u4e2a\u70b9\u7684\u8d39\u7528\uff1b\n\n\u53cd\u7740\u5b58\u56fe\uff0c\u6c42\u51fa\u6765\u7684\u4e5f\u662f1\u5230\u6bcf\u4e2a\u70b9\u7684\u6700\u77ed\u8def\uff0c\u4f46\u8fd9\u5f20\u56fe\u662f\u53cd\u7740\u7684\uff0c\u4e3e\u4e2a\u4f8b\u5b50\uff1a\u53cd\u7740\u7684\u56fe\u4e2d1\u52306\u7684\u503c\u5728\u6b63\u7740\u7684\u56fe\u4e2d\u5c31\u662f6\u52301\u7684\u6700\u77ed\u8def\u3002\u6240\u4ee5\uff0c\u53cd\u7740\u7684\u56fe\u5230\u6bcf\u4e2a\u70b9\u7684\u8ddd\u79bb\u5c31\u662f\u6b63\u7740\u7684\u56fe\u4e2d\u6bcf\u4e2a\u70b9\u52301\u7684\u8ddd\u79bb\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5927\u5927\u7f29\u77ed\u65f6\u95f4\uff0c\u4ece\u800c\u6c42\u5f97\u6b63\u89e3\u3002\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define si 1000009\ninline int read()\n{\n\tint x=0,f=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9')\n\t{\n\t\tif(ch=='-')\n\t\tf=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9')\n\t{\n\t\tx=(x<<1)+(x<<3)+(ch^48);\n\t\tch=getchar();\n\t}\n\treturn x*f;\n}\nstruct edge\n{\n\tint to,cost;\n};\nint INF=2147483647;\ntypedef pair<long long,long long> P;\nvector<edge> g[si];\nvector<edge> g2[si];\nint d[si];\npriority_queue<P, vector<P>, greater<P> > q;\nint n,m,a,b,c;\nlong long ans;\nvoid dij(int x)\n{\n\tfill(d,d+1+n,INF);\n\td[x]=0;\n\tq.push(P(0,x));\n\twhile(!q.empty())\n\t{\n\t\tP p=q.top();q.pop();\n\t\tint v=p.second;\n\t\tif(d[v]<p.first) continue;\n\t\tfor(int i=0;i<g[v].size();i++)\n\t\t{\n\t\t\tedge e=g[v][i];\n\t\t\tif(d[e.to]>d[v]+e.cost)\n\t\t\t{\n\t\t\t\td[e.to]=d[v]+e.cost;\n\t\t\t\tq.push(P(d[e.to],e.to));\n\t\t\t}\n\t\t}\n\t}\n}\nvoid dij2(int x)\n{\n\tfill(d,d+1+n,INF);\n\td[x]=0;\n\tq.push(P(0,x));\n\twhile(!q.empty())\n\t{\n\t\tP p=q.top();q.pop();\n\t\tint v=p.second;\n\t\tif(d[v]<p.first) continue;\n\t\tfor(int i=0;i<g2[v].size();i++)\n\t\t{\n\t\t\tedge e=g2[v][i];\n\t\t\tif(d[e.to]>d[v]+e.cost)\n\t\t\t{\n\t\t\t\td[e.to]=d[v]+e.cost;\n\t\t\t\tq.push(P(d[e.to],e.to));\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tn=read();m=read();\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\ta=read();b=read();c=read();\n\t\tg[a].push_back(edge{b,c});\n\t\tg2[b].push_back(edge{a,c});\n\t}\n\tdij(1);\n\tfor(int i=2;i<=n;i++)\n\tans+=d[i];\n\tdij2(1);\n\tfor(int i=2;i<=n;i++)\n\tans+=d[i];\n\tcout<<ans;\n\treturn 0;\n}\n```\n",
        "postTime": 1583839949,
        "uid": 183473,
        "name": "PrincessYR\u2728\uff5e",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1342 \u3010\u8bf7\u67ec\u3011"
    },
    {
        "content": "\u6838\u5fc3\u601d\u60f3:\u4e24\u904d\u6700\u77ed\u8def.\n\n\u90ae\u5c40\u53bb\u5404\u5730\u7684\u65f6\u95f4\u76f4\u63a5\u5957\u6700\u77ed\u8def\u6a21\u677f,\u5404\u5730\u5230\u90ae\u5c40\u65f6\u95f4\u7528\u9006\u5411\u601d\u7ef4,\u89c6\u4e3a\u6c42\u90ae\u5c40\u6cbf\u53cd\u8fb9\u5230\u5404\u5730\u7684\u65f6\u95f4\u5373\u53ef.\n\n\u53e6\u5916,\u8fd9\u9053\u9898\u53ef\u4ee5\u4ece\u5404\u79cd\u65b9\u9762\u63d0\u9ad8\u6548\u7387:\n\n1\u3001\u7528Dijkstra+\u5806\u4f18\u5316\u7b97\u6cd5\uff0c\u8fd9\u79cd\u7b97\u6cd5\u867d\u53ef\u80fd\u6bd4SPFA\u6162\u4e00\u70b9\u70b9\uff0c\u4f46\u590d\u6742\u5ea6\u7a33\u5b9a\u53ef\u7b97\uff1b\u800cSPFA\u590d\u6742\u5ea6\u4e0d\u7a33\u5b9a\uff0c\u6709\u5f88\u591a\u9898\u76ee\u90fd\u6709\u4e13\u5361SPFA\u7684\u6570\u636e\uff1b\n\n2\u3001\u7528\u7ed3\u6784\u4f53\u4ee3\u66ff\u6570\u7ec4\uff0c\u5199\u7740\u65b9\u4fbf\uff1b\n\n3\u3001\u624b\u5199\u90bb\u63a5\u8868+\u52a0\u8fb9\uff1b\n\n4\u3001\u5728\u5c40\u90e8\u51fd\u6570\u524d\u52a0inline\uff1b\n\n5\u3001\u5728\u5c40\u90e8\u53d8\u91cf\u524d\u52a0register\uff1b\n\n6\u3001\u4f7f\u7528\u8bfb\u5165\u4f18\u5316\u3002\n\n\u6709\u8fd9\u4e9b\u6548\u7387\u52a0\u6210\u7684\u7a0b\u5e8f\uff0c\u4f18\u4e8e\u697c\u4e0b\u7a0b\u5e8f\u3002\u6211\u672c\u4e3a\u8fc7P1629\u800c\u7f16\u6b64\u7a0b\u5e8f\uff0c\u5728P1629\u63d0\u4ea4\u540e\uff0c\u76f4\u63a5\u653e\u5927\u6570\u636e\u8303\u56f4\u5728\u6b64\u4e5f\u53efAC\u3002\n\n\n```cpp\n#include<iostream>\n#include<cmath>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<algorithm>\n#include<queue>\n#define ll long long\n#define re register\n#define il inline\n#define inf 214748364\n#define fp(i,a,b) for(re int i=a;i<=b;i++)\n#define fq(i,a,b) for(re int i=a;i>=b;i--)\nusing namespace std;\nint n,m,h[1000005],cnt=0,inq[1000005]={},dis[1000005]={},h1[1000005]={};\nll ans=0;\nstruct Edge\n{\n    int to,next,w;\n}e[1000005],e1[1000005];\nstruct Node\n{\n    int l,d;\n    Node(){}\n    Node(int l,int d):l(l),d(d){}\n    bool operator < (const Node& zsy) const\n        {\n            return l>zsy.l;\n        }\n};\nil void add(re int u,re int v,re int w)\n{\n    e[++cnt]=(Edge){v,h[u],w};h[u]=cnt;\n}\nil void add1(re int u,re int v,re int w)\n{\n    e1[cnt]=(Edge){v,h1[u],w};h1[u]=cnt;\n}\nil int gi()\n{\n    re int x=0;\n    re int t=1;\n    re char ch=getchar();\n    while((ch<'0'||ch>'9')&&ch!='-') ch=getchar();\n    if(ch=='-') t=-1,ch=getchar();\n    while(ch>='0'&&ch<='9') x=x*10+ch-48,ch=getchar();\n    return x*t;\n}\nil void Dijkstra()\n{\n    fp(i,1,n) dis[i]=inf;\n    dis[1]=0;\n    priority_queue<Node>Q;\n    Q.push(Node(0,1));\n    while(!Q.empty())\n    {\n        Node u=Q.top();Q.pop();\n        if(inq[u.d]) continue;\n        inq[u.d]=1;\n        for(re int i=h[u.d];i+1;i=e[i].next)\n        {\n            re int v=e[i].to,w=e[i].w;\n            if(u.l+w<dis[v])\n            {\n                dis[v]=u.l+w;\n                Q.push(Node(dis[v],v));\n            }\n        }\n    }\n}\nil void Dijkstra1()\n{\n    fp(i,1,n) dis[i]=inf;\n    dis[1]=0;\n    memset(inq,0,sizeof(inq));\n    priority_queue<Node>Q;\n    Q.push(Node(0,1));\n    while(!Q.empty())\n    {\n        Node u=Q.top();Q.pop();\n        if(inq[u.d]) continue;\n        inq[u.d]=1;\n        for(re int i=h1[u.d];i+1;i=e1[i].next)\n        {\n            re int v=e1[i].to,w=e1[i].w;\n            if(u.l+w<dis[v])\n            {\n                dis[v]=u.l+w;\n                Q.push(Node(dis[v],v));\n            }\n        }\n    }\n}\nint main()\n{\n    memset(h,-1,sizeof(h));memset(h1,-1,sizeof(h1));\n    n=gi();m=gi();\n    fp(i,1,m)\n    {\n        int u=gi(),v=gi(),w=gi();\n        add(u,v,w);\n        add1(v,u,w);\n    }\n    Dijkstra();\n    fp(i,2,n) ans+=dis[i];\n    Dijkstra1();\n    fp(i,2,n) ans+=dis[i];\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n\n```",
        "postTime": 1506868512,
        "uid": 21534,
        "name": "ysner",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1342 \u3010\u8bf7\u67ec\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5f88\u9002\u5408\u4f5c\u4e3aP1629\u7684\u52a0\u5f3a\u7248\n\n\u56e0\u4e3a\u8fd9\u9053\u9898\u5176\u5b9e\u4f53\u73b0\u4e86\u53cd\u5411\u5efa\u56fe\u7684\u9ad8\u6548\u6027\n\n\u53cd\u5411\u5efa\u56fe\u540e\uff1a\n\n\u5355\u7ec8\u70b9\u6700\u77ed\u8def\u5f84\u2192\u5355\u6e90\u6700\u77ed\u8def\u5f84\u3002\n\n\u56e0\u6b64\u4e24\u8fb9Dij\uff0c\u7136\u540e\u518d\u7d2f\u8ba1\u548c\u5373\u53ef\n\n\u4ee3\u7801\u90e8\u5206\u4e0d\u96be\u5f04\u3002\u76f4\u63a5\u4e0a\n\n\u5148\u8bf4\u660e\u4ee5\u4e0b\u7a0b\u5e8f\uff0c\u67091\u7684\u53d8\u91cf\u540d\u4e0e\u7b2c\u4e00\u6b21dij\u6709\u5173\uff08\u5b66\u751f\u51fa\u6765\uff09\n\n\u5e262\u7684\u4e0e\u7b2c\u4e8c\u6b21dij\u6709\u5173\uff08\u5b66\u751f\u56de\u5bb6\uff09\n```cpp\n#include<iostream>\n#include<cmath>\n#include<cstdio>\n#include<queue>\n#include<cstring>\n\nusing namespace std;\n\nint n,m;\nint h1[2100000],h2[2100000];\nint s1,s2;\nstruct edge{\n\tint next,to,dis;\n};\nint v1[2100000],v2[2100000];  //\u6ce8\u610f\u6570\u636e\u8303\u56f4\nlong long d1[2100000],d2[2100000];\nedge e1[2100000],e2[2100000];\n\nvoid addedge1(int next,int to,long long dis)\n{\n\te1[++s1].dis=dis;\n\te1[s1].next=h1[next];\n\te1[s1].to=to;\n\th1[next]=s1;\n}\n\nvoid addedge2(int next,int to,long long dis)\n{\n\te2[++s2].dis=dis;\n\te2[s2].to=to;\n\te2[s2].next=h2[next];\n\th2[next]=s2;\n}\n\nvoid dij1(int start)\n{\n\tpriority_queue <pair<long long,int> > q;  \n    //\u8fd9\u662f\u4f18\u5148\u961f\u5217\u7684\u4e00\u4e2a\u6bd4\u8f83\u5bb9\u6613\u7406\u89e3\u7684\u5199\u6cd5\uff0c\u4e4b\u6240\u4ee5long long \u662f\u56e0\u4e3a\u53ef\u603b\u548c\u53ef\u80fd\u7206int\n\tmemset(d1,0x3f,sizeof(d1));\n\tmemset(v1,0,sizeof(v1));\n\tq.push(make_pair(0,start));\n\td1[1]=0;\n\twhile(!q.empty())\n\t{\n\t\tint i,j;\n\t\tlong long k;\n\t\tint t=q.top().second;\n\t\tq.pop();\n\t\tif(v1[t]) continue;\n\t\tv1[t]=1;\n\t\tfor(i=h1[t];i;i=e1[i].next)\n\t\t{\n\t\t\tj=e1[i].to;\n\t\t\tk=e1[i].dis;\n\t\t\tif(d1[t]+k<d1[j])\n\t\t\t{\n\t\t\t\td1[j]=d1[t]+k;\n\t\t\t\tq.push(make_pair(-d1[j],j));\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid dij2(int start)\n{\t\n\tpriority_queue <pair<long long ,int> > q; \n\tmemset(d2,0x3f,sizeof(d2));\n\tmemset(v2,0,sizeof(v2));\n\tq.push(make_pair(0,start));\n\td2[1]=0;\n\twhile(!q.empty())\n\t{\n\t\tint i,j;\n\t\tlong long k;\n\t\tint t=q.top().second;\n\t\tq.pop();\n\t\tif(v2[t]) continue;\n\t\t\n\t\tv2[t]=1;\n\t\tfor(i=h2[t];i;i=e2[i].next)\n\t\t{\n\t\t\tj=e2[i].to;\n\t\t\tk=e2[i].dis;\n\t\t\tif(d2[t]+k<d2[j])\n\t\t\t{\n\t\t\t\td2[j]=d2[t]+k;\n\t\t\t\tq.push(make_pair(-d2[j],j));\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main()\n{\n\tint i,j;\n\tscanf(\"%d %d\",&n,&m);\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tint t1,t2;\n\t\tlong long t3;\n\t\tscanf(\"%d %d %lld\",&t1,&t2,&t3);\n\t\taddedge1(t1,t2,t3);\n\t\taddedge2(t2,t1,t3);  //\u53cd\u5411\u5efa\u56fe\uff0c\u9632\u6b62\u5efa\u5728\u540c\u4e00\u5f20\u56fe\u91cc\u9762\u5f71\u54cd\u7a0b\u5e8f\u8fd0\u884c\n\t}\n\tlong long tot=0;\n\tdij1(1);\n\tdij2(1);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\ttot+=d1[i]+d2[i];  \n\t}\n\tprintf(\"%lld\",tot);\n\treturn 0;\n}\n```\n",
        "postTime": 1561017132,
        "uid": 38636,
        "name": "\u5bd2\u51b0\u5927\u5927",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1342 \u3010\u8bf7\u67ec\u3011"
    },
    {
        "content": "### \u6559\u4f60\u5982\u4f55\u7528\u7ed3\u6784\u4f53\u7b80\u5316\u7a0b\u5e8f~~\u5077\u61d2~~\u7684\u9898\u89e3\n##### \u6587\u672b\u6709\u5b8c\u6574\u4ee3\u7801\u3002\n\u9996\u5148\u6211\u4eec\u5148\u6765\u8003\u8651\u6b64\u9898\u5982\u4f55\u89e3\u51b3\u3002\n\n**\u8981\u505a\u9898\uff0c\u5148\u5206\u6790\u6837\u4f8b\u3002** \u4e0b\u9762\u7ea2\u8272\u70b9\u8868\u793a\u5b66\u751f\u7684\u5c97\u4f4d\u7ad9\u70b9\u3002\n\n- $1 \\to \\color{red}2\\color{black} \\to 4 \\to 1$ \u82b1\u8d3965\n- $1 \\to \\color{red}3\\color{black} \\to 4 \\to 1$ \u82b1\u8d3980\n- $1 \\to 2 \\to \\color{red}4\\color{black} \\to 1$ \u82b1\u8d3965\n\n\u5408\u8ba1210\u3002\n\n\u53ea\u9700\u7b80\u5355\u601d\u8003\u4fbf\u53ef\u77e5\uff1a\u6574\u4e2a\u8fc7\u7a0b\u662f\u4ece1\u53f7\u70b9\u51fa\u53d1\u5230\u67d0\u4e2a\u70b9\u518d\u56de\u52301\u70b9\uff0c\u90a3\u4e48\uff0c**\u6c42\u51fa1\u5230\u6240\u6709\u70b9\u7684\u8ddd\u79bb\u4e4b\u548c\uff0c\u518d\u52a0\u4e0a\u6240\u6709\u70b9\u52301\u7684\u8ddd\u79bb\u4e4b\u548c\uff0c\u5c31\u662f\u9898\u76ee\u7684\u7b54\u6848**\uff01\n\n\u6362\u8a00\u4e4b\uff0c\u5728 _\u539f\u56fe\u548c\u53cd\u56fe\u4e0a_ \u5206\u522b\u8dd1\u4e00\u6b21\u6700\u77ed\u8def\u7b97\u6cd5\uff0c\u7b54\u6848\u5c31\u4f1a\u51fa\u73b0\uff01\n\n\u8003\u8651\u5230SPFA~~\u6b7b\u4e86~~\u592a\u8fc7\u7384\u5b66\uff0c\u6211\u4eec\u9009\u62e9\u4e86Dijkstra\u7b97\u6cd5\u3002\n\n#### \u5212\u91cd\u70b9\uff01\u5077\u61d2\u7684\u65f6\u5019\u5230\u4e86\uff01\n\u53c8\u8003\u8651\u5230\u6211\u4eec\u9700\u8981\u5728\u539f\u56fe\u548c\u53cd\u56fe\u5206\u522b\u8dd1dij\uff0c\u8fd9\u91cc\u6211\u4eec\u91c7\u53d6\u51fd\u6570\u7684\u65b9\u5f0f\u8dd1\u6700\u77ed\u8def\u3002\n``` cpp\npriority_queue<Heapnode> Q;\nQ.push(Heapnode(0,1));\ndis[1] = 0;\nwhile(!Q.empty()) {\n    Heapnode cur = Q.top();Q.pop();\n    if (vis[cur.num]) continue;\n    vis[cur.num] = true;\n    for (unsigned int i = Head[cur.num]; i!=0; i=g.Next[i]) {\n        int to = Tow[i];\n        if (dis[to] > dis[cur.num] + Fee[i]) {\n            dis[to] = dis[cur.num] + Fee[i];\n            Q.push(Heapnode(dis[to],to));\n        }\n    }\n}\n```\n\u7136\u800c\u8fd9\u4efd\u5806\u4f18\u5316\u7684Dij\u867d\u7136\u53ef\u4ee5\u6ee1\u8db3\u6211\u4eec\u5bf9\u5206\u6570\u7684\u6e34\u671b\uff0c\u5374\u65e0\u6cd5\u6ee1\u8db3\u6211\u4eec\u5077\u61d2\u7684\u6b32\u671b\u2014\u2014\u6211\u4eec\u9700\u8981\u5bf9\u539f\u56fe\u53cd\u56fe\u5404\u81ea\u5199\u4e00\u6b21Dij\u3002\n\n\u6b63\u53cd\u56fe\u7684Dij\u7b97\u6cd5\u9664\u4e86\u6570\u7ec4\u540d\u9700\u8981\u6539\uff0c\u5269\u4e0b\u7684**\u5b8c\u5168\u4e0d\u9700\u8981\u6539\u52a8**\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u7ed3\u6784\u4f53\u6765\u5077\u61d2\u3002\n``` cpp\nstruct Graph {\n    static const int N = 1e6+3;\n    int Head[N],Next[N],Tow[N],Fee[N],cnt;\n    long long dis[N];\n    bool vis[N];\n    Graph () {memset(dis,0x3f,sizeof dis);}\n    void Addedge (int u,int v,int c,bool single) {//\u52a0\u8fb9\u4ee3\u7801\uff0c\u652f\u6301\u52a0\u6709\u5411\u548c\u65e0\u5411\u8fb9\n        if (!single) {\n            Addedge(u,v,c,true);Addedge(v,u,c,true);\n        }else{\n            cnt++;\n            Next[cnt] = Head[u];\n            Head[u] = cnt;\n            Tow[cnt] = v;Fee[cnt] = c;\n        }\n    }\n}G,RevG;//G\uff1a\u539f\u56fe\u3002RevG\uff1a\u53cd\u56fe\u3002\n```\n\u63a5\u4e0b\u6765\uff0c\u5bf9Dij\u7684\u51fd\u6570\u7a0d\u4f5c\u6539\u52a8\uff0c\u5e76\u5c06\u6700\u540e\u201c\u6c42\u51fa1\u5230\u6240\u6709\u70b9\u7684\u8ddd\u79bb\u4e4b\u548c\u201d\u4e5f\u5c01\u88c5\u5230\u51fd\u6570\u91cc\u3002\n``` cpp\nstruct Heapnode {int dis,num;Heapnode(int dis,int num):dis(dis),num(num){}};\nbool operator < (const Heapnode&a,const Heapnode&b) {return a.dis>b.dis;}\nlong long Dij (Graph &g,int n) {\n//\u6ce8\u610f\uff01\u8fd9\u91ccGraph\u9009\u7528\u4e86\u4f20\u5f15\u7528\uff0c\u907f\u514d\u4e86\u6570\u636e\u7684\u590d\u5236\u3002\n//\u8fd9\u91cc\u5982\u679c\u9009\u7528\u4f20\u503c\uff0c\u56db\u4e2a\u6570\u636e\u70b9\u52a0\u5728\u4e00\u8d77\u4f1a\u6574\u6574\u6162\u4e0a0.17s\u3002\u5f53n\uff0cm\u53d8\u5927\uff0c\u5bf9\u6548\u7387\u7684\u5f71\u54cd\u5c06\u66f4\u52a0\u660e\u663e\u3002\n    priority_queue<Heapnode> Q;\n    Q.push(Heapnode(0,1));\n    g.dis[1] = 0;\n    while(!Q.empty()) {\n        Heapnode cur = Q.top();Q.pop();\n        if (g.vis[cur.num]) continue;\n        g.vis[cur.num] = true;\n        for (unsigned int i = g.Head[cur.num]; i!=0; i=g.Next[i]) {\n            int to = g.Tow[i];\n            if (g.dis[to] > g.dis[cur.num] + g.Fee[i]) {\n                g.dis[to] = g.dis[cur.num] + g.Fee[i];\n                Q.push(Heapnode(g.dis[to],to));\n            }\n        }\n    }\nans = 0;\n    for (int i = 1; i<=n; ++i) {\n        ans += g.dis[i];\n    }\n    return ans;\n}\n```\n\u7a7a\u95f4\u590d\u6742\u5ea6\u4e0d\u5fc5\u8d58\u8ff0\uff0c\u8fd9\u91cc\u4e24\u6b21Dij\u90fd\u662fO($n\\log{n}$)\u7684\uff0c\u5bf9\u4ed8$n=10^6$\u7ef0\u7ef0\u6709\u4f59\u3002\n\u6700\u540e\uff0c**\u5f00longlong\uff0c\u5f00longlong\uff0c\u5f00longlong\uff01\u4e0d\u8981\u5230\u8003\u573a\u4e0a\u540e\u6094\uff01**\n\n\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff0c\u8bf7\u653e\u5fc3\u98df\u7528~\n``` cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <queue>\n#include <cctype>\nusing namespace std;\n\ntemplate<typename Tp>\nint read (Tp &x) {\n    x=0;int i=1,c;\n    while(!isdigit(c=getchar())) {if(c=='-') i=-1;if(c==EOF) return 0;}x=c-'0';\n    while (isdigit(c=getchar())) x=x*10+c-'0';x*=i;\n    return 1;\n}\ntemplate<typename Tp,typename...type>\nint read (Tp &x,type &...a) {return read(x)+read(a...);}\nstruct Graph {\n    static const int N = 1e6+3;\n    int Head[N],Next[N],Tow[N],Fee[N],cnt;\n    long long dis[N];\n    bool vis[N];\n    Graph () {memset(dis,0x3f,sizeof dis);}\n    void Addedge (int u,int v,int c,bool single) {\n        if (!single) {\n            Addedge(u,v,c,true);Addedge(v,u,c,true);\n        }else{\n            cnt++;\n            Next[cnt] = Head[u];\n            Head[u] = cnt;\n            Tow[cnt] = v;Fee[cnt] = c;\n        }\n    }\n}G,RevG;\nstruct Heapnode {int dis,num;Heapnode(int dis,int num):dis(dis),num(num){}};\nbool operator < (const Heapnode&a,const Heapnode&b) {return a.dis>b.dis;}\nlong long Dij (Graph &g,int n) {\n    priority_queue<Heapnode> Q;\n    Q.push(Heapnode(0,1));\n    g.dis[1] = 0;\n    while(!Q.empty()) {\n        Heapnode cur = Q.top();Q.pop();\n        if (g.vis[cur.num]) continue;\n        g.vis[cur.num] = true;\n        for (unsigned int i = g.Head[cur.num]; i!=0; i=g.Next[i]) {\n            int to = g.Tow[i];\n            if (g.dis[to] > g.dis[cur.num] + g.Fee[i]) {\n                g.dis[to] = g.dis[cur.num] + g.Fee[i];\n                Q.push(Heapnode(g.dis[to],to));\n            }\n        }\n    }\n    long long ans = 0;\n    for (int i = 1; i<=n; ++i) {\n        ans += g.dis[i];\n    }\n    return ans;\n}\nint main () {\n    #ifdef LOCAL\n    freopen(\"testdata.in\",\"r\",stdin);\n    #endif\n    int n,m;\n    read(n,m);\n    for (int i = 1; i<=m; ++i) {\n        int u,v,c;\n        read(u,v,c);\n        G.Addedge(u,v,c,true);\n        RevG.Addedge(v,u,c,true);\n    }\n    long long ans = Dij(G,n)+Dij(RevG,n);\n    cout << ans << endl;\n    return 0;\n}\n```",
        "postTime": 1586951861,
        "uid": 161447,
        "name": "\u5c31\u76ae\u8fd9\u4e00\u4e0b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1342 \u3010\u8bf7\u67ec\u3011"
    },
    {
        "content": "\u601d\u8def\u5927\u5bb6\u90fd\u8bb2\u5f97\u975e\u5e38\u6e05\u695a\u4e86\n\n\u5efa\u6b63\u56fe\uff0c\u4ece1\u8dd1\u6700\u77ed\u8def\n\n\u5efa\u8fd4\u56fe\uff0c\u4ece1\u8dd1\u6700\u77ed\u8def\n\n\u7136\u800c\u849f\u84bb\u4e00\u770b\uff0c\u5927\u5bb6\u90fd\u662f\u5206\u5f00\u5efa\n\n\u5176\u5b9e\u50cf\u8fd9\u79cd\u591a\u4e2a\u56fe\u7684\u6700\u77ed\u8def\u95ee\u9898\n\n\u53ef\u4ee5\u8bb2\u6700\u77ed\u8def\u56fe\u5c01\u88c5\u5728\u7ed3\u6784\u4f53\u91cc\u9762\n\n\u975e\u5e38\u7b80\u6d01\u65b9\u4fbf\n\n\u8bdd\u4e0d\u591a\u8bf4\uff0c\u4e0a\u4ee3\u7801~\n\n```\n#include<cstdio>\n#include<queue>\n#include<cstring>\nusing namespace std;\ntypedef long long LL;\nLL read()\n{\n\tLL w=0;bool f=true;char c=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-')f=false;c=getchar();}\n\twhile(c>='0'&&c<='9')w=(w<<1)+(w<<3)+(c^48),c=getchar();\n\treturn f?w:~w+1;\n}\nconst int N=1e6+50;\nint n,m;LL Ans;\nstruct node\n{\n\tint id,dis;\n\tfriend bool operator <(node n1,node n2)\n\t{\n\t\treturn n1.dis>n2.dis;\n\t}\n};\nstruct Graph\n{\n\tint to[N],val[N],nxt[N],fir[N],tot;\n\tLL d[N];bool b[N];\n\tvoid Add(int x,int y,int z)\n\t{\n\t\tto[++tot]=y;val[tot]=z;nxt[tot]=fir[x];fir[x]=tot;\n\t}\n\tvoid dijkstra(int S)\n\t{\n\t\tpriority_queue<node>q;\n\t\tmemset(d,127/3,sizeof(d));\n\t\t\n\t\td[S]=0;q.push((node){S,d[S]});\n\t\t\n\t\twhile(!q.empty())\n\t\t{\n\t\t\tint x=q.top().id;q.pop();\n\t\t\tif(b[x]) continue;\n\t\t\tb[x]=true;\n\t\t\tfor(int k=fir[x];k;k=nxt[k])\n\t\t\t{\n\t\t\t\tint y=to[k],z=val[k];\n\t\t\t\tif(d[y]>d[x]+z)\n\t\t\t\t{\n\t\t\t\t\td[y]=d[x]+z;\n\t\t\t\t\tq.push((node){y,d[y]});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}G1,G2;  //\u6784\u5efa\u6700\u77ed\u8def\u56fe\n\nint main()\n{\n\tn=read();m=read();\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tint x=read(),y=read(),z=read();\n\t\tG1.Add(x,y,z);G2.Add(y,x,z);// G1\u5b58\u6b63\u56fe\uff0cG2\u5b58\u8fd4\u56fe\n\t}\n\tG1.dijkstra(1);G2.dijkstra(1);//\u5206\u522b\u8dd1\u6700\u77ed\u8def\n\tfor(int i=2;i<=n;++i) Ans+=G1.d[i]+G2.d[i];//\u76f4\u63a5\u7d2f\u52a0\n\tprintf(\"%lld\\n\",Ans);\n\treturn 0;\n}\n```\n\n\nThanks for watching\uff01",
        "postTime": 1573463523,
        "uid": 49468,
        "name": "\u5bfb\u65e7",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1342 \u3010\u8bf7\u67ec\u3011"
    },
    {
        "content": "\u770b\u5230\u6ca1\u6709~~\u65e0\u7ed3\u6784\u4f53~~\u7684\u5806\u4f18\u5316dij\uff0c\u4ecb\u7ecd\u4e0b\u6211\u7684\u601d\u8def\n\n# \u4e00\u9053\u6700\u77ed\u8def\u88f8\u9898\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/cef3poyt.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u5982\u56fe \u8f93\u51fa\uff1a210\n\n\u4e0d\u96be\u60f3\u5230\uff1a\u6b64\u9898\u610f\u601d\u5c31\u662f\u8ba9\u4f60\u4ee51\u4e3a\u8d77\u70b9\u8dd1\u6700\u77ed\u8def\uff0c\u7b54\u6848\u628a1\u5230\u6240\u6709\u70b9\u6700\u77ed\u8def\u5f84\u52a0\u8d77\u6765\n\n\u518d\u4ee5\u5176\u4ed6\u70b9\u4e3a\u8d77\u70b9\u8dd1\u6700\u77ed\u8def\uff0c\u628a\u8fd9\u4e9b\u70b9\u52301\u7684\u957f\u5ea6\u52a0\u8d77\u6765\n\n\u4e8e\u662f\u5f00\u5f00\u5fc3\u5fc3\u7684\u63d0\u4ea4\uff0c~~\u5b8c\u7f8eTLE~~\n\n\u4ee3\u7801\uff08~~\u66b4\u529b~~\uff09\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define Maxn 2000065\n#define next Next\nusing namespace std;\nll read()\n{\n\tll r=0,f=1;char c=getchar();\n\twhile((c<'0'||c>'9')&&(c!='-')) c=getchar();\n\tif(c=='-') f=-1,c=getchar();\n\twhile(c>='0'&&c<='9') r=r*10+c-'0',c=getchar();\n\treturn r*f;\n}\npriority_queue< pair<ll,ll> >q;\nll ans,n,m,tot,ver[Maxn],head[Maxn],next[Maxn],edge[Maxn],d[Maxn],v[Maxn];\nvoid add(ll x,ll y,ll z)\n{\n\tver[++tot]=y;\n\tnext[tot]=head[x];\n\thead[x]=tot;\n\tedge[tot]=z;\n}\nvoid dijkstra(ll s)\n{\n\tmemset(d,0x7f,sizeof(d));\n\tmemset(v,0,sizeof(v));\n\td[s]=0;\n\tq.push(make_pair(0,s));\n\twhile(q.size())\n\t{\n\t\tll x=q.top().second;q.pop();\n\t\tif(v[x]) continue;\n\t\tv[x]=1;\n\t\tfor(int i=head[x];i;i=next[i])\n\t\t{\n\t\t\tll y=ver[i],z=edge[i];\n\t\t\tif(d[y]>d[x]+z)\n\t\t\t{\n\t\t\t\td[y]=d[x]+z;\n\t\t\t\tq.push(make_pair(-d[y],y));\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tn=read(),m=read();\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tll x=read(),y=read(),z=read();\n\t\tadd(x,y,z);\n\t}\n\tdijkstra(1);\n\tfor(int i=1;i<=n;i++) ans+=d[i];\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\tdijkstra(i);\n\t\tans+=d[1];\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n\n\u5f88\u663e\u7136\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u8fbe\u5230\u4e86\uff08n^2logn\uff09\u7684~~\u5927~~\u65f6\u95f4\u590d\u6742\u5ea6\n\n\u90a3\u6211\u4eec\u8003\u8651\u4e00\u79cd\u4f18\u5316\u7684\u601d\u8def\n\n\u6211\u4eec~~\u5947\u5999\u7684~~\u53d1\u73b0\uff0c\u5404\u4e2a\u70b9\u52301\u7684\u6700\u77ed\u8ddd\u79bb\u5c31\u662f\u5efa\u53cd\u56fe\u540e1\u5230\u5404\u4e2a\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\n\n\u8fd9\u6837\uff0c\u53ea\u8981\u5efa\u53cd\u56fe\uff0c\u4f18\u5316\u6210\u4e86\uff082nlogn\uff09\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define Maxn 2000005\n#define next Next\nusing namespace std;\nll read()\n{\n\tll r=0,f=1;char c=getchar();\n\twhile((c<'0'||c>'9')&&(c!='-')) c=getchar();\n\tif(c=='-') f=-1,c=getchar();\n\twhile(c>='0'&&c<='9') r=r*10+c-'0',c=getchar();\n\treturn r*f;\n}\npriority_queue< pair<ll,ll> >q,q1;\nll ans,n,m,tot,tot1,ver[Maxn],head[Maxn],next[Maxn],edge[Maxn],d[Maxn],v[Maxn];\nll ver1[Maxn],head1[Maxn],next1[Maxn],edge1[Maxn],d1[Maxn],v1[Maxn];\nvoid add(ll x,ll y,ll z)\n{\n\tver[++tot]=y;\n\tnext[tot]=head[x];\n\thead[x]=tot;\n\tedge[tot]=z;\n}\nvoid add1(ll x,ll y,ll z)\n{\n\tver1[++tot1]=y;\n\tnext1[tot1]=head1[x];\n\thead1[x]=tot1;\n\tedge1[tot1]=z;\n}\nvoid dijkstra(ll s)\n{\n\tmemset(d,0x7f,sizeof(d));\n\tmemset(v,0,sizeof(v));\n\td[s]=0;\n\tq.push(make_pair(0,s));\n\twhile(q.size())\n\t{\n\t\tll x=q.top().second;q.pop();\n\t\tif(v[x]) continue;\n\t\tv[x]=1;\n\t\tfor(int i=head[x];i;i=next[i])\n\t\t{\n\t\t\tll y=ver[i],z=edge[i];\n\t\t\tif(d[y]>d[x]+z)\n\t\t\t{\n\t\t\t\td[y]=d[x]+z;\n\t\t\t\tq.push(make_pair(-d[y],y));\n\t\t\t}\n\t\t}\n\t}\n}\nvoid dijkstra1(ll s)\n{\n\tmemset(d1,0x7f,sizeof(d1));\n\tmemset(v1,0,sizeof(v1));\n\td1[s]=0;\n\tq1.push(make_pair(0,s));\n\twhile(q1.size())\n\t{\n\t\tll x=q1.top().second;q1.pop();\n\t\tif(v1[x]) continue;\n\t\tv1[x]=1;\n\t\tfor(int i=head1[x];i;i=next1[i])\n\t\t{\n//\t\t\tcout<<i<<endl;\n\t\t\tll y=ver1[i],z=edge1[i];\n//\t\t\tif(z==10) cout<<\"\u627e\u4e86\u6211\u597d\u4e45\uff01\"<<y<<endl;\n//\t\t\tif(y==3) cout<<\"\u5f80\u6765\u6b3e\";\n\t\t\tif(d1[y]>d1[x]+z)\n\t\t\t{\n\t\t\t\td1[y]=d1[x]+z;\n\t\t\t\tq1.push(make_pair(-d1[y],y));\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tn=read(),m=read();\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tll x=read(),y=read(),z=read();\n\t\tadd(x,y,z);\n\t\tadd1(y,x,z);\n\t}\n\tdijkstra(1);\n\tdijkstra1(1);\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\tans+=d[i]+d1[i];\n//\t\tcout<<d[i]<<\" \"<<d1[i]<<endl;\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n\n\u6700\u540e\uff0c\u9644\u6ce8\u51e0\u70b9\u6613\u9519\uff08~~\u6211\u5c31\u9519\u4e86~~\uff09\uff1a\n\n1.\u6570\u7ec4\u522b\u5f00\u5927\uff1a\u6211\u5f002000065\u5c31MLE\u4e86\n\n2.\u53cd\u56fe\u522b\u5efa\u9519\uff1a\u6211\u53cd\u56fe\u7684head1\u6253\u6210head1\u4e86\n\n# \u5b8c\u7ed3\u6492\u82b1\uff01\uff01\uff01",
        "postTime": 1572939289,
        "uid": 138649,
        "name": "\u7237\uff0c\u65e0\u9650\u9738\u6c14",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1342 \u3010\u8bf7\u67ec\u3011"
    },
    {
        "content": "\u5c31\u662f\u8981\u6b63\u56fe\u53cd\u56fe\u90fd\u5bf9 1 \u53f7\u70b9\u8dd1\u4e00\u8fb9 dij\u3002  \n\u6280\u5de7:  \n1\uff09\u5efa\u56fe\u7684\u8bdd\u8003\u8651 $+n$ \u4e3a\u53cd\u56fe\u3002\u5bf9\u5e94\u7684\u8868\u5934\u548c\u4e0b\u4e00\u7ed3\u70b9\u90fd $+n$\u3002  \n2\uff09\u53ef\u4ee5\u4f7f\u7528\u5927\u6839\u5806 `priority_queue< Type, vector<Type>, greater<Type> >`\u3002 Type\u9700\u8981\u5b9a\u4e49\u5927\u4e8e\u53f7\u3002  \n\u6ca1\u5565\u8bf4\u7684\u3002\u8d34\u4ee3\u7801  \n```cpp\n#include <iostream>\n#include <cstring>\n#include <queue>\n#define ll long long\n\nusing namespace std;\n\nconst ll inf = 10000000000000010;\nconst int N = 1234567, M = 1234567;\nll wei[M << 1];\nint head[N << 1], ver[M << 1], nex[M << 1], tot;\n\ninline void addedge(int u, int v, int w) {\n    ver[tot] = v; wei[tot] = w; nex[tot] = head[u]; head[u] = tot++;\n}\n\nstruct noded {\n    ll dis;\n    int x;\n    noded(ll DIS, int X): dis(DIS), x(X) {}\n    bool operator > (const noded& o) const { return dis > o.dis; }\n};\npriority_queue< noded, vector<noded>, greater<noded> > q;\nll dis[N << 1];\nvoid dij(int s) {\n    dis[s] = 0;\n    q.push(noded(0, s));\n    while(!q.empty()) {\n        noded cur = q.top(); q.pop();\n        if(dis[cur.x] < cur.dis) continue;\n        for(int i = head[cur.x]; ~i; i = nex[i]) {\n            if(dis[ver[i]] > dis[cur.x] + wei[i]) {\n                dis[ver[i]] = dis[cur.x] + wei[i];\n                q.push(noded(dis[ver[i]], ver[i]));\n            }\n        }\n    }\n}\n\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    memset(head, -1, sizeof(head));\n    ll u, ans;\n    int n, m, v, w;\n    cin >> n >> m;\n    for(int i = 1; i <= m; ++i) {\n        cin >> u >> v >> w;\n        addedge(u, v, w);\n        addedge(v + n, u + n, w);\n    }\n    for(int i = 1; i <= (n << 1); ++i) dis[i] = inf;\n    dij(1);\n    ans = 0;\n    for(int i = 2; i <= n; ++i) ans += dis[i];\n    dij(n + 1);\n    for(int i = n + 2; i <= (n << 1); ++i) ans += dis[i];\n    cout << ans << '\\n';\n    return 0;\n}\n\n```",
        "postTime": 1578754217,
        "uid": 88735,
        "name": "\u5bd2\u9e3d\u513f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1342 \u3010\u8bf7\u67ec\u3011"
    },
    {
        "content": "[P1342 \u8bf7\u67ec](https://www.luogu.org/problemnew/show/P1342)\n### \u601d\u8def\n\n\u5206\u522b\u5efa\u4e00\u5f20\u539f\u56fe\uff0c\u4e00\u5f20\u4e0e\u539f\u56fe\u4e2d\u6240\u6709\u8fb9\u65b9\u5411\u76f8\u53cd\u3001\u8fb9\u6743\u76f8\u540c\u7684\u53cd\u56fe\u3002\u5728\u4e24\u5f20\u56fe\u4e0a\u5206\u522b\u8dd1\u4e00\u904dSPFA\uff0c\u518d\u8ba1\u7b97\u51fa\u4e24\u6b21dis\u6570\u7ec4\u7684\u548c\u5373\u53ef\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\u672c\u9898\u4e2d\u5b58\u50a8\u7b54\u6848\u7684\u53d8\u91cf\u9700\u8981\u5f00long long\u3002\n\n### Code\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<algorithm>\n#include<queue>\ntypedef long long LL;\n#define maxn 1000005\n\nusing namespace std;\n\nint n,m;\nint pre1[maxn],last1[maxn],other1[maxn],len1[maxn],tot1;\nint pre2[maxn],last2[maxn],other2[maxn],len2[maxn],tot2;\nint dis1[maxn],dis2[maxn];\nbool vis1[maxn],vis2[maxn];\n\ninline void add1(int x,int y,int z){\n    tot1++;\n    pre1[tot1]=last1[x];\n    last1[x]=tot1;\n    other1[tot1]=y;\n    len1[tot1]=z;\n}\n\ninline void add2(int x,int y,int z){\n    tot2++;\n    pre2[tot2]=last2[x];\n    last2[x]=tot2;\n    other2[tot2]=y;\n    len2[tot2]=z;\n}\n\nvoid spfa1(int s){\n    queue<int>q;\n    memset(dis1,0x3f,sizeof(dis1));\n    q.push(s);\n    dis1[s]=0;\n    vis1[s]=1;\n    while(!q.empty()){\n        int u=q.front();\n        q.pop();\n        vis1[u]=0;\n        for(register int p=last1[u];p;p=pre1[p]){\n            int v=other1[p];\n            if(dis1[v]>dis1[u]+len1[p]){\n                dis1[v]=dis1[u]+len1[p];\n                if(!vis1[v]){\n                    q.push(v);\n                    vis1[v]=1;\n                }\n            }\n        }\n    }\n}\n\nvoid spfa2(int s){\n    queue<int>q;\n    memset(dis2,0x3f,sizeof(dis2));\n    q.push(s);\n    dis2[s]=0;\n    vis2[s]=1;\n    while(!q.empty()){\n        int u=q.front();\n        q.pop();\n        vis2[u]=0;\n        for(register int p=last2[u];p;p=pre2[p]){\n            int v=other2[p];\n            if(dis2[v]>dis2[u]+len2[p]){\n                dis2[v]=dis2[u]+len2[p];\n                if(!vis2[v]){\n                    q.push(v);\n                    vis2[v]=1;\n                }\n            }\n        }\n    }\n}\n\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(register int i=1;i<=m;i++){\n        int x,y,z;\n        scanf(\"%d%d%d\",&x,&y,&z);\n        add1(x,y,z);\n        add2(y,x,z);\n    }\n    spfa1(1);\n    spfa2(1);\n    LL ans=0;\n    for(register int i=1;i<=n;i++) ans+=dis1[i]+dis2[i];\n    printf(\"%lld\",ans);\n}\n\n```\n",
        "postTime": 1555767698,
        "uid": 122085,
        "name": "Yic_",
        "ccfLevel": 0,
        "title": "[\u9898\u89e3]P1342 \u8bf7\u67ec"
    },
    {
        "content": "\u5148\u819c\u697c\u4e0a\u5404\u4f4ddalao\uff1b\n\n\u5b9e\u9645\u4e0a\u8fd9\u9053\u9898\u6570\u636e\u89c4\u6a21\u770b\u4e0a\u53bb\u5f88\u5413\u4eba\uff0c\u4f46\u505a\u8d77\u6765\u5e76\u4e0d\u4f1a\u7279\u522b\u96be\u3002dij\u8dd1\u7684\u8bdd\u9700\u8981\u4f18\u5316\uff0c\u7136\u800cSPFA\u53ef\u4ee5\u88f8\u8fc7\uff1b\n\n\u81f3\u4e8e\u90bb\u63a5\u8868\u4e5f\u4e0d\u9700\u8981\u624b\u5199\uff0c\u7528STL\u7684vector\u4e0d\u4f1a\u70b8\u3002\n\n\u601d\u8def\u662f\u5b58\u4e24\u904d\u56fe\uff0c\u6b63\u5411\u4e00\u904d\u53cd\u5411\u4e00\u904d\uff0c\u7136\u540e\u5206\u522b\u8dd1SPFA\u6700\u540e\u7ed3\u679c\u76f8\u52a0\u3002\u672c\u6765\u60f3\u7740\u4e0d\u7528\u9ad8\u7cbe\u53ef\u80fd\u4f1a\u7206\uff0c\u7136\u800c\u5e76\u4e0d\u4f1a= =\n\n\u603b\u4e4b\u8fd9\u9898\u8fd8\u662f\u5f88\u53cb\u597d\u7684\u3002\n\n\u6700\u540e\uff0c\u5982\u679c\u7528\u8fd9\u79cd\u6bd4\u8f83\u88f8\u7684\u65b9\u6cd5\uff0c\u5efa\u8bae\u8f93\u5165\u80fd\u7528scanf\u5c31\u7528\uff0c\u7528iostream\u8981\u5192\u7740RE\u7684\u98ce\u9669\u52a0\u4e00\u53e5cin.sync\\_with\\_stdio(false);\u5426\u5219\u5f88\u53ef\u80fd\u8d85\u65f6\n\n\u4ee3\u7801\u5982\u4e0b\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#include<cstring>\nusing namespace std;\nstruct po\n{\n    int p,v;\n};\nvector<po> m1[1000005],m2[1000005];\nint m,n;\nint d1[1000005] , d2[1000005];\nconst int INF = 2000000000;\nqueue<int> q;\nbool isin[1000005];\nvoid SPFA1()\n{\n    q.push(1);isin[1] = true;d1[1] = 0;\n    while(!q.empty())\n    {\n        int x = q.front();q.pop();isin[x] = false;\n        for(vector<po>::iterator ite = m1[x].begin() ; ite != m1[x].end() ; ite++)\n        {\n            if(d1[(*ite).p] > d1[x] + (*ite).v)\n            {\n                d1[(*ite).p] = d1[x] + (*ite).v;\n                if(!isin[(*ite).p])\n                {\n                    q.push((*ite).p);\n                    isin[(*ite).p] = true;\n                }\n            }\n        }\n    }\n    return;\n}\nvoid SPFA2()\n{\n    q.push(1);isin[1] = true;d2[1] = 0;\n    while(!q.empty())\n    {\n        int x = q.front();q.pop();isin[x] = false;\n        for(vector<po>::iterator ite = m2[x].begin() ; ite != m2[x].end() ; ite++)\n        {\n            if(d2[(*ite).p] > d2[x] + (*ite).v)\n            {\n                d2[(*ite).p] = d2[x] + (*ite).v;\n                if(!isin[(*ite).p])\n                {\n                    q.push((*ite).p);\n                    isin[(*ite).p] = true;\n                }\n            }\n        }\n    }\n    return;\n}\nint main()\n{\n    cin.sync_with_stdio(false);\n    cin>>n>>m;\n    for(int i = 1 ; i <= m ; i++)\n    {\n        int x,y,z;cin>>x>>y>>z;\n        m1[x].push_back((po){y,z});\n        m2[y].push_back((po){x,z});\n    }\n    for(int i = 0 ; i <= n ; i++)\n        d1[i] = d2[i] = INF;\n    SPFA1();\n    memset(isin , 0 , sizeof(isin));\n    SPFA2();\n    long long ans = 0;\n    for(int i = 1 ; i <= n ; i++)\n    {\n        ans += (d1[i] + d2[i]);\n    }\n    cout<<ans;\n    return 0;\n}\n```",
        "postTime": 1497089830,
        "uid": 25746,
        "name": "\u7406\u60f3\u6c14\u4f53",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1342 \u3010\u8bf7\u67ec\u3011"
    },
    {
        "content": "\u7b97\u6700\u77ed\u8def\u7684\u4e00\u9053\u88f8\u9898\u4e86 \u6b63\u5411\u5efa\u56fe\u8dd1\u4e00\u904d \u53cd\u5411\u5efa\u56fe\u8dd1\u4e00\u904d \u7528\u4e00\u4e2aans\u8bb0\u5f55\u7b54\u6848\u5373\u53ef \u9002\u5408\u521d\u5b66\u8005\u505a\n\n```cpp\n #include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<algorithm>\n#define ll long long\nusing namespace std;\nint m,n,k1=0,k2=0,x,y,z;\nstruct node{\n    int to,next;\n    ll w;\n};\nnode e[2000010],ed[2000010];\nll dist[1000010],ans=0;\nint head1[2000010],head2[2000010];\nint queue[4000010],qhead,qtail;\nbool vis[1000100];\nvoid add1(int u,int v,ll w)\n{\n    e[++k1].next=head1[u];\n    e[k1].to=v;\n    e[k1].w=w;\n    head1[u]=k1;\n}\nvoid add2(int u,int v,ll w)\n{\n    ed[++k2].next=head2[u];\n    ed[k2].to=v;\n    ed[k2].w=w;\n    head2[u]=k2;\n}\nvoid spfa1()\n{\n    memset(vis,false,sizeof(vis));\n    memset(dist,127,sizeof(dist));\n    qhead=0,qtail=1;\n    dist[1]=0,vis[1]=true;queue[1]=1;\n    while(qhead<qtail)\n    {\n      int p=queue[++qhead];\n      vis[p]=false;\n      for(int i=head1[p];i;i=e[i].next)\n      {\n          if(dist[e[i].to]>dist[p]+e[i].w)\n          {\n              dist[e[i].to]=dist[p]+e[i].w;\n              if(!vis[e[i].to])\n              {\n                  vis[e[i].to]=true;\n                queue[++qtail]=e[i].to;          \n            }\n        }\n      }   \n    }\n    for(int i=2;i<=n;i++) ans+=dist[i];\n}\nvoid spfa2()\n{\n    memset(vis,false,sizeof(vis));\n    memset(dist,127,sizeof(dist));\n    qhead=0,qtail=1;\n    dist[1]=0,vis[1]=true;queue[1]=1;\n    while(qhead<qtail)\n    {\n      int p=queue[++qhead];\n      vis[p]=false;\n      for(int i=head2[p];i;i=ed[i].next)\n      {\n          if(dist[ed[i].to]>dist[p]+ed[i].w)\n          {\n              dist[ed[i].to]=dist[p]+ed[i].w;\n              if(!vis[ed[i].to])\n              {\n                  vis[ed[i].to]=true;\n                queue[++qtail]=ed[i].to;          \n            }\n        }\n      }   \n    }\n    for(int i=2;i<=n;i++) ans+=dist[i];    \n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++)\n    {\n      scanf(\"%d%d%d\",&x,&y,&z);\n      add1(x,y,z);\n      add2(y,x,z);\n    }\n    spfa1();\n    spfa2();\n    printf(\"%lld\",ans);\n    return 0;\n}\n```",
        "postTime": 1477396128,
        "uid": 22060,
        "name": "Memorize",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1342 \u3010\u8bf7\u67ec\u3011"
    },
    {
        "content": "\u9898\u610f\u7b80\u8ff0\uff1a\n\n\u5728\u4e00\u4e2a\u6709\u5411\u56fe\u4e2d\u6c42\u4ece $1$ \u53f7\u70b9\u5230\u5176\u4ed6\u6bcf\u4e2a\u70b9\u7684\u5f80\u8fd4\u8ddd\u79bb\u4e4b\u548c\u3002\n\n\u601d\u8def\u89e3\u6790\uff1a\n\n\u5982\u679c\u6211\u4eec\u53ea\u662f\u8981\u6c42\u4ece $1$ \u53f7\u70b9\u5230\u5176\u4ed6\u70b9\u7684\u8d70\u4e00\u8d9f\u7684\u8ddd\u79bb\u548c\uff0c\u90a3\u4e48\u8fd9\u662f\u5341\u5206\u5bb9\u6613\u7684\uff0c\u6211\u4eec\u5c31\u8dd1\u4e00\u6b21 $dijkstra$ \u6216\u8005 $spfa$ \u5373\u53ef\uff0c\u4f46\u662f\u5982\u679c\u8981\u6c42\u5f80\u8fd4\u600e\u4e48\u529e\u5462\uff1f\n\n\u6211\u4eec\u662f\u4e0d\u662f\u53ef\u4ee5\u53cd\u7740\u8dd1\u5462\uff1f\u5c31\u662f\u4ece $1$ \u53f7\u70b9\u4e0d\u7ba1\u8d70\u54ea\u4e00\u6761\u90fd\u201c\u9006\u884c\u201d\uff0c\u5c31\u53ef\u4ee5\u4e86\u3002\u6240\u4ee5\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u6211\u4eec\uff0c\u5efa\u4e24\u5f20\u56fe\uff0c\u5206\u522b\u662f\u6b63\u56fe\u548c\u53cd\u56fe\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u901a\u8fc7\u5728\u53cd\u56fe\u4e0a\u8dd1\u5355\u6e90\u6700\u77ed\u8def\u6765\u6c42\u51fa\u4ece\u6bcf\u4e2a\u70b9\u5230 $1$ \u7684\u8ddd\u79bb\u548c\u3002\n\n\u90a3\u6211\u4eec\u7528\u4ec0\u4e48\u65b9\u6cd5\u5462\uff1f\u6211\u539f\u672c\u7528\u7684\u662f $SPFA$ \uff0c\u4f46\u662f\u88ab\u6bd2\u7624\u6570\u636e\u5361\u5f97 $T$ \u98de\u4e86\u3002\u6240\u4ee5\u6211\u5c31\u7528\u4e00\u4e2a\u795e\u5947\u7684\u4f18\u5316\uff0c\u90a3\u5c31\u662f $spfa$ \u5806\u4f18\u5316\uff0c\u8fd9\u79cd\u4f18\u5316\u5728\u901a\u5e38\u60c5\u51b5\u4e0b\u90fd\u662f\u6b63\u4f18\u5316\uff0c\u800c\u4e14\u66f4\u4e0d\u5bb9\u6613\u5361\uff0c\u4f46\u662f\u5982\u679c\u771f\u7684\u88ab\u5361\u4e86\uff0c\u90a3\u4e48\u53ef\u80fd\u4f1a\u5230 $O(k\\times m\\times log(m))$ \u7684\u65f6\u95f4\uff0c\u4f46\u662f\u8fd9\u6837\u5728\u4e00\u4e2a\u53ea\u5361\u666e\u901a $spfa$ \u7684\u6570\u636e\u60c5\u51b5\u4e0b\u8fd8\u662f\u5f88\u597d\u7528\u7684\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nint read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}\n\treturn x*f;\n}\nconst int NR=1e6+10;\nconst int MR=1e6+10;\nint x[NR];\nint n,m,s;\nint dis[NR];\nbool vis[NR];\nint to[MR*2],nxt[MR*2],val[MR*2];\nint head[NR];\nint tot=1;\nvoid add(int x,int y,int z)\n{\n\tto[tot]=y;\n\tval[tot]=z;\n\tnxt[tot]=head[x];\n\thead[x]=tot++;\n}\nstruct cmp\n{\n    bool operator ()(int x, int y) const\n    {\n        return dis[x] > dis[y];\n    }\n};\nint dis2[NR];\nbool vis2[NR];\nint to2[MR*2],nxt2[MR*2],val2[MR*2];\nint head2[NR];\nint tot2=1;\nvoid add2(int x,int y,int z)\n{\n\tto2[tot2]=y;\n\tval2[tot2]=z;\n\tnxt2[tot2]=head2[x];\n\thead2[x]=tot2++;\n}\npriority_queue<int, vector<int>, cmp> q;\npriority_queue<int, vector<int>, cmp> q2;\nvoid SPFA()\n{\n\tmemset(dis,999999,sizeof(dis));\n\tdis[s]=0;\n\tq.push(s);\n\tvis[s]=1;\n\twhile(!q.empty())\n\t{\n\t\tint x=q.top();\n\t\tq.pop();\n\t\tvis[x]=0;\n\t\tfor(int i=head[x];i;i=nxt[i])\n\t\t{\n\t\t\tint y=to[i];\n\t\t\tif(dis[y]>dis[x]+val[i])\n\t\t\t{\n\t\t\t\tdis[y]=dis[x]+val[i];\n\t\t\t\tif(!vis[y])\n\t\t\t\t{\n\t\t\t\t\tvis[y]=1;\n\t\t\t\t\tq.push(y);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nvoid SPFA2()\n{\n\tmemset(dis2,999999,sizeof(dis2));\n\tdis2[s]=0;\n\tq2.push(s);\n\tvis2[s]=1;\n\twhile(!q2.empty())\n\t{\n\t\tint x=q2.top();\n\t\tq2.pop();\n\t\tvis2[x]=0;\n\t\tfor(int i=head2[x];i;i=nxt2[i])\n\t\t{\n\t\t\tint y=to2[i];\n\t\t\tif(dis2[y]>dis2[x]+val2[i])\n\t\t\t{\n\t\t\t\tdis2[y]=dis2[x]+val2[i];\n\t\t\t\tif(!vis2[y])\n\t\t\t\t{\n\t\t\t\t\tvis2[y]=1;\n\t\t\t\t\tq2.push(y);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nsigned main()\n{\n//\tfreopen(\"25.in\",\"r\",stdin);\n//\tfreopen(\"25.out\",\"w\",stdout);\n\tn=read(),m=read(),s=1;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x,y,z1;\n\t\tx=read(),y=read(),z1=read();\n\t\tadd(x,y,z1),add2(y,x,z1);\n\t}\n\tSPFA();\n\tSPFA2();\n\tint ans=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tans+=dis[i]+dis2[i];\n\t}\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1588476492,
        "uid": 97136,
        "name": "chenzida",
        "ccfLevel": 0,
        "title": "P1342 \u8bf7\u67ec"
    },
    {
        "content": "\u770b\u89c1\u5927\u5bb6\u4e00\u4e0b\u5b50\u90fd\u662f\u76f4\u63a5\u4e24\u4e2a\u4e24\u4e2a\u7684\u5199\u6211\u6709\u4e9b\u614c\u5f20\uff1b\n\n\u4e8e\u662f\u5199\u4e86\u4e00\u4efd\u7b80\u6d01\u7248\u7684\u9898\u89e3\uff0c\u907f\u514d\u4e86\u5199\u4e24\u6b21\u51fd\u6570\u65f6\u53ef\u80fd\u51fa\u73b0\u7684\u53d8\u91cf\u6df7\u4e71\u3001\u61d2\u5f97ctrl+e\u7b49\u4e00\u7cfb\u5217\u95ee\u9898\uff1b\n\n\u4e00\u9053\u6700\u77ed\u8def\u7684\u6a21\u677f\u9898\n\n\u4ee5\u4e3a\u5927\u6570\u636e\u6240\u4ee5\u52a0\u4e86\u5806\u4f18\u5316\n\n\u8fd9\u4e2astl\u5806\u4f18\u5316\u4e5f\u662f\u8f83\u4e3a\u597d\u5199\n\n\u8003\u524d\u53d1\u9898\u89e3RP++\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\nusing namespace std;\nconst long long N = 1000005 ;\nconst long long maxn = 0x3f3f3f3f;\nint n,m;\nlong long \u2014=0;\nlong long head1[N];\nlong long head2[N];\nlong long dis[N];\nstruct node\n{\n\tlong long to,nxt,val;\n}e1[N*2],e2[N*2];\nvoid add(int f,int t,long long w,long long *head,node *e,long long _)\n{\n\te[_]=(node){t,head[f],w};\n\thead[f]=_;\n}\nstruct data \n{\n\tlong long id,dis;\n\tfriend bool operator < (data a,data b)\n\t{ return a.dis>b.dis; }\n};\nvoid dij(int st,long long *d,long long *head,node *e)\n{\n\tpriority_queue <data> q;\n\tfor(int i=1;i<=n;i++) d[i]=maxn;\n\td[st]=0;q.push((data){st,0});\n\twhile(!q.empty())\n\t{\n\t\tdata t=q.top();q.pop();\n\t\tint u=t.id;\n\t\tif(t.dis!=d[u]) continue;\n\t\tfor(int i=head[u];i;i=e[i].nxt)\n\t\t{\n\t\t\tint v=e[i].to;\n\t\t\tif(d[v]>d[u]+e[i].val)\n\t\t\t{\n\t\t\t\td[v]=d[u]+e[i].val;\n\t\t\t\tq.push((data){v,d[v]});\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%lld%lld\",&n,&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tlong long u,v,w;\n\t\tscanf(\"%lld%lld%lld\",&u,&v,&w);\n\t\t_++;\n\t\tadd(u,v,w,head1,e1,_);\n\t\tadd(v,u,w,head2,e2,_);\n\t}\n\tlong long ans=0;\n\tdij(1,dis,head1,e1);\n\tfor(int i=1;i<=n;i++) ans+=dis[i];\n\tdij(1,dis,head2,e2);\n\tfor(int i=1;i<=n;i++) ans+=dis[i];\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1573491847,
        "uid": 75481,
        "name": "DEADFISH7",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1342 \u3010\u8bf7\u67ec\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\u6211\u5c31\u4e0d\u8bf4\u4e86\uff0c\u5c31\u662f\u6c42\u4ece1\u51fa\u53d1\u5230\u8fbe\u5404\u4e2a\u70b9\u7684\u6700\u77ed\u8def\uff0c\u7136\u540e\u6c42\u5404\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u3002\u7136\u540e\u6c42\u4e00\u904d\u5404\u4e2a\u70b9\u52301\u7684\u6700\u77ed\u8def\u4e4b\u548c\u3002\u770b\u4e86\u5927\u5bb6\u5199\u7684\u4ee3\u7801\uff0c\u6211\u89c9\u5f97\u4ee3\u7801\u6709\u70b9\u591a\uff0c\u5404\u79cd\u4f18\u5316\uff0c\u6211\u76f4\u63a5\u6765\u4e2adijkstra\u4ee3\u7801\uff0c\u88f8\u7684\uff0c\u4e5f\u80fd\u8fc7\u3002\n\u601d\u8def\uff1a\u5148\u6b63\u5411\u5efa\u56fe\uff0c\u8dd1\u4e00\u8fb9dijkstra\uff0c\u518d\u53cd\u5411\u5efa\u56fe\uff0c\u8dd1\u4e00\u8fb9dijkstra\u3002\u7136\u540e\u6c42\u548c\u5c31\u5b8c\u4e86\u3002\n```c\n#include<bits/stdc++.h>\n#pragma GCC optimize(2)\n#define MAXN 1000005\n#define maxnode 1000005\n#define sigma_size 26\n#define md 12345678\n#define INF 0x3f3f3f3f\n#define pii pair<int,int>\nusing namespace std;\n\ntypedef long long LL;\nint n,m;\nstruct Edge\n{\n    int from;\n    LL to,dist;\n    Edge(int from=0,int to=0,LL dist=0):from(from),to(to),dist(dist){};\n};\nstruct Heapnode\n{\n    int u;\n    LL dis;\n    Heapnode(int u=0,LL dis=0):u(u),dis(dis){};\n    bool operator < (const Heapnode &rah) const\n    {\n        return dis>rah.dis;\n    }\n};\nstruct Dijkstra\n{\n    int s,t;\n    vector<Edge> edges;\n    vector<int> G[MAXN];\n    LL d[MAXN];\n    bool done[MAXN];\n\n    void AddEdge(int from,int to,LL dis)\n    {\n        edges.push_back({from,to,dis});\n        int mm=edges.size();\n        G[from].push_back(mm-1);\n    }\n\n    LL solve()\n    {\n        memset(d,INF,sizeof(d));\n        priority_queue<Heapnode> Q;\n        Q.push({s,0});\n        d[s]=0;\n        while(!Q.empty())\n       {\n            Heapnode X=Q.top();\n            Q.pop();\n            if(done[X.u])\n                continue;\n            done[X.u]=true;\n            for(int i=0;i<G[X.u].size();i++)\n            {\n                  Edge &e=edges[G[X.u][i]];\n                  if(d[e.to]>d[X.u]+e.dist)\n                  {\n                        d[e.to]=d[X.u]+e.dist;\n                        Q.push({e.to,d[e.to]});\n                  }\n            }\n       }\n       LL ans=0;\n       for(int i=1;i<=n;i++)\n              ans+=d[i];\n       return ans;\n    }\n}mm,nn;\n\n\n\nint main()\n{\n    scanf(\"%d %d\",&n,&m);\n    int u,v;\n    LL w;\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d %d %lld\",&u,&v,&w);\n        mm.AddEdge(u,v,w);\n        nn.AddEdge(v,u,w);\n    }\n    mm.s=nn.s=1;\n    LL sum=0;\n    sum+=mm.solve();\n    sum+=nn.solve();\n    printf(\"%lld\\n\",sum);\n    return 0;\n}\n\n```\n\n",
        "postTime": 1573453158,
        "uid": 210155,
        "name": "abandentsky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1342 \u3010\u8bf7\u67ec\u3011"
    },
    {
        "content": "\u9898\u76ee\u8bb2\u7684\u4e0d\u662f\u5f88\u6e05\u695a(\u53ef\u80fd\u53ea\u662f\u56e0\u4e3a\u6211\u592a\u849f\u4e86)\n\n\u9898\u610f\u662f\u7ed9\u60a8\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u6c42\u51fa$1$\u53f7\u70b9\u5230\u6bcf\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u548c\u6bcf\u4e2a\u70b9\u5230\u4e00\u53f7\u70b9\u7684\u6700\u77ed\u8def\u4e4b\u548c\u3002\n\n\u5148\u5355\u770b$\\color{red}{\\text{\u201c1\u53f7\u70b9\u5230\u6bcf\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u201d}}$\u8fd9\u4e00\u90e8\u5206\uff0c\u5f88\u660e\u663e\u662f\u4e2a\u5355\u6e90\u6700\u77ed\u8def\u7684\u677f\u5b50\u3002\u3002\u3002\u4e0d\u8fc7\u6570\u636e\u8303\u56f4\u5f88\u5927\uff0c\u5fc5\u987b\u7528\u5806\u4f18\u5316\u7684$dijkstra$\u624d\u80fd\u8fc7\u3002\n\n\u96be\u70b9\u5728\u4e8e$\\color{red}{\\text{\u201c\u6bcf\u4e2a\u70b9\u5230\u4e00\u53f7\u70b9\u7684\u6700\u77ed\u8def\u201d}}$\uff0c\u8fd9\u65f6\u5019\u76f4\u63a5\u6c42\u6700\u77ed\u8def\u4e0d\u597d\u6c42\uff0c\u6240\u4ee5\u53bb\u601d\u8003\u80fd\u5426\u628a\u5b83\u8f6c\u5316\u6210\u5355\u5143\u6700\u77ed\u8def\u95ee\u9898\uff1f\n\n\u770b\u4e0b\u56fe\uff1a\n\n```\n1 \u21922\n\u2191  \u2193\n3 \u21904\n```\n\n\u4ece$4$\u5230$1$\u7684\u8def\u5f84\u4e3a\uff1a\n\n\n```\n1 \u21902\n   \u2191\n   4\n```\n\n\u5b83\u540c\u65f6\u53c8\u7b49\u4ef7\u4e8e\uff1a\n\n```\n1 \u21922\n   \u2193\n   4\n```\n\n\u53d1\u73b0\u6ca1\u6709\uff0c\u5b9e\u9645\u4e0a$\\color{red}{\\text{\u6bcf\u4e2a\u70b9\u5230\u4e00\u53f7\u70b9\u7684\u6700\u77ed\u8def}}$\u662f\u7b49\u4ef7\u4e8e\u539f\u56fe\u53cd\u5411\u8fde\u8fb9\u540e$\\color{red}{\\text{1\u53f7\u70b9\u5230\u6bcf\u4e2a\u70b9\u7684\u6700\u77ed\u8def}}$\u7684\u3002\n\n\u6240\u4ee5\u5c31\u6709\u4e86\u5927\u81f4\u7684\u601d\u8def\uff0c\u5728\u539f\u56fe\u548c\u53cd\u5411\u8fde\u8fb9\u540e\u7684\u56fe\u4e0a\u5206\u522b\u8dd1\u4e00\u6b21\u5806\u4f18\u5316\u7684$dijkstra$\uff0c\u6c42\u51fa\u6240\u6709$dis[i]$\u7684\u548c\u5c31\u597d\u5566\uff01\uff01\uff01(\u7528$SPFA$\u5c0f\u5fc3\u88ab\u5361)\u3002\n\n~~\u4ec0\u4e48\uff1f\u60a8\u4e0d\u4f1adijkstra?[\u6d1b\u8c37\u65e5\u62a5\u5305\u6559\u5305\u4f1a](https://www.luogu.org/blog/61966/dijkstra)~~\n\n\u4ee3\u7801\uff1a\n\n```\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint a, b, c;\n\nnamespace dij1 { //\u539f\u56fe\n\tstruct Edge {\n\t\tint head, to, nxt, val;\n\t}edge[2000005];\n\t\n\tstruct node {\n\t\tint step, val;\n\t\tnode(int ST = 0, int VAL = 0) : step(ST), val(VAL) {}\n\t\tinline bool operator < (const node& b) const {\n\t\t\treturn val < b.val;\n\t\t}\n\t\t\tinline bool operator > (const node& b) const {\n\t\t\t\treturn val > b.val;\n\t\t}\n\t};\n\t\n\tpriority_queue<node, vector<node>, greater<node> >q;\n\n\tint edgenum(0), n, m, dis[1000005], vis[1000005];\n\t\n\tvoid addedge(int from, int to, int val) {\n\t\tedge[++edgenum].to = to; edge[edgenum].val = val;\n\t\tedge[edgenum].nxt = edge[from].head; edge[from].head = edgenum;\n\t}\n\t\n\tvoid dij() {\n\t\tq.push(node(1, 0));\n\t\tfor (register int i = 1; i <= n; ++i) dis[i] = 2147483647; dis[1] = 0;\n\t\twhile (!q.empty()) {\n\t\t\tint x = q.top().step; q.pop();\n\t\t\tif (vis[x]) continue; vis[x] = 1;\n\t\t\tfor (register int i = edge[x].head; i; i = edge[i].nxt) \n\t\t\t\tif (!vis[edge[i].to] && dis[edge[i].to] > dis[x] + edge[i].val) \n\t\t\t\t\tdis[edge[i].to] = dis[x] + edge[i].val, q.push(node(edge[i].to, dis[x] + edge[i].val));\n\t\t}\n\t}\n}\n\nnamespace dij2 {  //\u53cd\u5411\u8fde\u8fb9\u540e\u7684\u56fe\n\tstruct Edge {\n\t\tint head, to, nxt, val;\n\t}edge[2000005];\n\t\n\tstruct node {\n\t\tint step, val;\n\t\tnode(int ST = 0, int VAL = 0) : step(ST), val(VAL) {}\n\t\tinline bool operator < (const node& b) const {\n\t\t\treturn val < b.val;\n\t\t}\n\t\t\tinline bool operator > (const node& b) const {\n\t\t\t\treturn val > b.val;\n\t\t}\n\t};\n\t\n\tpriority_queue<node, vector<node>, greater<node> >q;\n\n\tint edgenum(0), n, m, dis[1000005], vis[1000005];\n\t\n\tvoid addedge(int from, int to, int val) {\n\t\tedge[++edgenum].to = to; edge[edgenum].val = val;\n\t\tedge[edgenum].nxt = edge[from].head; edge[from].head = edgenum;\n\t}\n\t\n\tvoid dij() {\n\t\tq.push(node(1, 0));\n\t\tfor (int i = 1; i <= n; i++) dis[i] = 2147483647; dis[1] = 0;\n\t\twhile (!q.empty()) {\n\t\t\tint x = q.top().step; q.pop();\n\t\t\tif (vis[x]) continue; vis[x] = 1;\n\t\t\tfor (register int i = edge[x].head; i; i = edge[i].nxt) \n\t\t\t\tif (!vis[edge[i].to] && dis[edge[i].to] > dis[x] + edge[i].val) \n\t\t\t\t\tdis[edge[i].to] = dis[x] + edge[i].val, q.push(node(edge[i].to, dis[x] + edge[i].val));\n\t\t}\n\t}\n}\n\nint main() {\n\tscanf(\"%d%d\", &(dij1 :: n), &(dij1 :: m));\n\tdij2 :: n = dij1 :: n;\n\tdij2 :: m = dij1 :: m;\n\tfor (register int i = 1; i <= dij1 :: m; ++i) {\n\t\tscanf(\"%d%d%d\", &a, &b, &c);\n\t\tdij1 :: addedge(a, b, c); dij2 :: addedge(b, a, c);\n\t}\n\tdij1 :: dij();\n\tdij2 :: dij();\n\tlong long ans = 0;\n\tfor (register int i = 1; i <= dij1 :: n; ++i) ans += dij1 :: dis[i] + dij2 :: dis[i];\n\tprintf(\"%lld\", ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1562833334,
        "uid": 98096,
        "name": "Smallbasic",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1342 \u3010\u8bf7\u67ec\u3011"
    },
    {
        "content": "#### \u5dee\u4e0d\u591a\u662fDijkstra\u7684\u88f8\u9898\u5427\u3002\u3002\u3002\n- \u8fd9\u9053\u9898\u53ef\u4ee5\u5206\u4e3a\u6765\u56de\u4e24\u4e2a\u9636\u6bb5\u3002\n- \u53bb\u7684\u65f6\u5019\u5f88\u7b80\u5355\uff0c\u76f4\u63a5\u7528\u4e00\u6b21Dijkstra\uff0c\u7136\u540e\u7edf\u8ba1\u7b54\u6848\u3002\n- \u56de\u6765\u7684\u65f6\u5019\u5c31\u6709\u4e9b\u5de7\u5999\u4e86\uff0c\u867d\u7136\u8868\u9762\u4e0a\u662f\u6bcf\u4e2a\u70b9\u56de\u5230\u8d77\u70b9\uff0c\u4f46\u662f\u4f55\u5c1d\u4e0d\u53ef\u5c06\u5176\u770b\u6210\u4ece\u8d77\u70b9\u51fa\u53d1\uff0c\u9006\u7740\u6bcf\u4e2a\u70b9\u8fc7\u6765\u7684\u8def\u53bb\u627e\u4e00\u6b21\u6bcf\u4e2a\u70b9\uff1f\u6240\u4ee5\u53ea\u9700\u8981\u5b58\u8fb9\u7684\u65f6\u5019\u5904\u7406\u4e00\u4e0b\uff0c\u7136\u540e\u76f4\u63a5\u8dd1Dijkstra\u5c31\u884c\u4e86\u3002\n- \u9644\u4e0a\u4ee3\u7801\u3002\n```cpp\n#include<bits/stdc++.h>\n#define clean(a,i) memset(a,i,sizeof(a))\n#define ll long long\n#define inl inline\n#define il inl void\n#define it inl int\n#define ill inl ll\n#define re register\n#define ri re int\n#define rl re ll\nusing namespace std;\ntemplate<class T>il read(T &x)\n{\n\tint f=1;char k=getchar();x=0;\n\tfor(;k>'9'||k<'0';k=getchar()) if(k=='-') f=-1;\n\tfor(;k>='0'&&k<='9';k=getchar()) x=(x<<3)+(x<<1)+k-'0';\n\tx*=f;\n}\nconst int MAXN = 1e6+5;\nint n,m,u,v,d,head[MAXN],num_edge,dis[MAXN];\nll ans;\nstruct Edge{\n\tint next,to,dis,type; //\u5b58\u8fb9\u7684\u65f6\u5019\u7528\u4e86\u4e00\u4e2atype\u6807\u8bb0\uff0c1\u8868\u793a\u5b83\u4e3a\u6b63\u5411\u8fb9\uff0c2\u8868\u793a\u5b83\u4e3a\u53cd\u5411\u8fb9\n\tEdge(){}\n\tEdge(int next,int to,int dis,int type):next(next),to(to),dis(dis),type(type){}\n}edge[MAXN<<1];\nil add_edge(int u,int v,int dis){\n\tedge[++num_edge]=Edge(head[u],v,dis,1);head[u]=num_edge; //\u52a0\u6b63\u8fb9\n\tedge[++num_edge]=Edge(head[v],u,dis,2);head[v]=num_edge; //\u52a0\u53cd\u8fb9\n}\nstruct Node{\n\tint pos,dis;\n\tNode(){}\n\tNode(int pos,int dis):pos(pos),dis(dis){}\n\tbool operator <(const Node &t) const{\n\t\treturn dis>t.dis;\n\t}\n};\nbool tr[MAXN];\nil dijkstra(int type){\n\tpriority_queue<Node> q;q.push(Node(1,0));\n\tfor(ri i=2;i<=n;i++) dis[i]=2147483647;\n\tclean(tr,0);\n\twhile(!q.empty()){\n\t\tNode tmp=q.top();q.pop();\n\t\tri pos=tmp.pos;\n\t\tif(tr[pos]) continue;\n\t\ttr[pos]=true;\n\t\tfor(ri i=head[pos];i;i=edge[i].next){\n\t\t\tif(edge[i].type!=type) continue; //\u8fdb\u884c\u5224\u65ad\n\t\t\tif(dis[edge[i].to]>dis[pos]+edge[i].dis){\n\t\t\t\tdis[edge[i].to]=dis[pos]+edge[i].dis;\n\t\t\t\tif(!tr[edge[i].to]) q.push(Node(edge[i].to,dis[edge[i].to]));\n\t\t\t}\n\t\t}\n\t}\n\tfor(ri i=2;i<=n;i++) ans+=dis[i]; //\u7edf\u8ba1\u7b54\u6848\n}\nint main()\n{\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\tread(n),read(m);\n\tfor(ri i=1;i<=m;i++) read(u),read(v),read(d),add_edge(u,v,d);\n\tdijkstra(1);dijkstra(2);\n\tprintf(\"%lld\",ans); //\u7b54\u6848\u8bb0\u5f97\u5f00long long\n\treturn 0;\n}\n```\n- \u8fd9\u9053\u9898\u5176\u5b9e\u66f4\u4f18\u7684\u65b9\u6cd5\u662f\u5f00\u4e24\u4e2a\u7ed3\u6784\u4f53\uff0c\u5206\u522b\u6765\u5b58\u6b63\u53cd\u8fb9\uff0c\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u4f1a\u5c0f\u4e00\u4e9b\uff08\u6bd5\u7adf\u4e0d\u7528\u6bcf\u6761\u8fb9\u6b63\u53cd\u4e24\u4e2a\u6bcf\u6b21\u90fd\u8981\u8dd1\uff09\uff0c\u4f46\u662f\u4e3a\u4ec0\u4e48\u6211\u6ca1\u6709\u8fd9\u6837\u5199\u5462\uff1f~~\u5f53\u7136\u662f\u6211\u61d2\u554a~~\n- OK\uff0c\u5b8c\u5de5\u3002[]~(\uffe3\u25bd\uffe3)~*",
        "postTime": 1554473059,
        "uid": 122273,
        "name": "TheShadow",
        "ccfLevel": 0,
        "title": "P1342 \u8bf7\u67ec \u9898\u89e3"
    },
    {
        "content": "\u53d1\u73b0\u597d\u50cf\u8981\u679a\u4e3e\u4e00\u4e0b\u90a3\u4e2a\u70b9\n\n\u4f46\u662f\u6bcf\u5f53\u679a\u4e3e\u4e00\u6b21\u5c31\u8981spfa\u4e00\u6b21\n\n\u53d1\u73b0\u975e\u5e38\u8017\u65f6\n\n\u591a\u7b97\u4e86\u8bb8\u591a\u65e0\u7528\u7684\u4e1c\u897f\n\n\u6240\u4ee5\u6211\u4eec\u8003\u8651\u53easpfa\u4e00\u8fb9\u7684\u9ad8\u6548\u7b97\u6cd5\n\n\u4e8e\u662f\u8003\u8651\u76f4\u63a5\u53cd\u89c1\u56fe\uff0c\u7136\u540espfa3\u904d\n\n\u6700\u540e\u6c42\u4e00\u4e0b\u548c\uff0c\u53bb\u4e2amin\u5373\u53ef\n\n\u7136\u800csofa\u597d\u50cf\u6709\u88ab\u5361\u4e86qwq\n\n\u53ea\u597d\u5199dj\u4e86\n\n\u4ee3\u7801\uff1a\n\n```cpp\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\n#define Maxn 5000500\n#define int long long\nusing namespace std;\ntemplate <typename tn> void read(tn &a){\n    tn x = 0, f = 1; char c = getchar();\n    while(!isdigit(c)){if (c == '-') f = -1; c = getchar();}\n    while(isdigit(c)) x = x * 10 + c - 48, c = getchar();\n    a = x * f;\n}\n\nstruct node{\n    int u, l;\n};\nstruct E{\n    int u, v, l;\n} e[Maxn];\nstruct Edge{\n    int v, l, next;\n} edge[Maxn];\nbool operator > (node p, node q){\n    return p.l > q.l;\n}\npriority_queue<node, vector<node>, greater<node> > que;\nint first[Maxn], dis[Maxn];\nint Top = 0, ans = 0;\n\nvoid addedge(int u, int v, int l){\n    edge[++Top].v = v;\n    edge[Top].l = l;\n    edge[Top].next = first[u];\n    first[u] = Top;\n}\nvoid dijstra(){\n    while (que.size()) que.pop();\n    que.push({1, 0});\n    memset(dis, 63, sizeof(dis)); dis[1] = 0;\n    while (que.size()){\n        node p = que.top(); que.pop(); \n        int u = p.u, d = p.l;\n        if (dis[u] < d) continue;\n        for (int i = first[u]; i; i = edge[i].next){\n            int v = edge[i].v, l = edge[i].l;\n            if (dis[u] + l < dis[v]){\n                dis[v] = dis[u] + l;\n                que.push({v, dis[v]});\n            }\n        }\n    }\n}\nmain(){\n    int n, m; read(n); read(m);\n    for (int i = 1; i <= m; i++){\n        read(e[i].u); read(e[i].v); read(e[i].l);\n        addedge(e[i].u, e[i].v, e[i].l);\n    }\n    dijstra();\n    for (int i = 1; i <= n; i++) ans += dis[i];\n    \n    memset(first, 0, sizeof(first)); Top= 0;\n    for (int i = 1; i <= m; i++)\n        addedge(e[i].v, e[i].u, e[i].l);\n    dijstra();\n    for (int i = 1; i <= n; i++) ans += dis[i];\n    \n    cout << ans << endl;\n    return 0;\n}\n```\n",
        "postTime": 1552129707,
        "uid": 30817,
        "name": "muller",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1342 \u3010\u8bf7\u67ec\u3011"
    },
    {
        "content": "# [P1342 \u8bf7\u67ec](https://www.luogu.org/problemnew/show/P1342)\n### \u91c7\u7528SLF\u4f18\u5316\n\nSLF\u4f18\u5316\u6cd5\u5c31\u662f\u628aSPFA\u539f\u6765\u7684\u51fd\u6570\u4e2d\u52a0\u4e86\u4e00\u4e2a\u5224\u65ad\uff0c\u5c31\u662f\u5982\u679c\u4fee\u6539\u540e\u4ece1\u5230y\u7684\u8ddd\u79bblen[y]>len[q.front()]\uff0c**\u5c31\u628a\u5b83\u63a8\u5230\u7528\u6765\u5b58\u70b9\u7684\u961f\u5217q\u7684\u672b\u5c3e\uff0c\u53cd\u4e4b\u5b58\u5728\u5f00\u59cb\u5904\u3002**\n\u8981\u8fbe\u5230\u8fd9\u4e2a\u64cd\u4f5c\u76ee\u7684\uff0c\u9700\u8981\u7528\u5230\u53cc\u5411\u961f\u5217deque\uff0c\u5728\u8fd9\u91cc\u4e3b\u8981\u8bb2\u8bb2\u5b83\u7684\u51e0\u79cd\u64cd\u4f5c\uff1a\n\n- \u961f\u5217\u524d\u9762\u63d2\u5165\u5143\u7d20\uff0c\u5c31\u662fq.push_ front()\n- \u672b\u5c3e\u5c31\u662fq.push_ back()\uff0c\n- \u5f39\u51fa\u5143\u7d20pop\u540c\u7406\u3002\n\n\u8fd9\u79cd\u4f18\u5316\u6cd5\u7684\u539f\u56e0\u5c31\u662f\u5c3d\u91cf\u51cf\u5c11\u66f4\u65b0\u5224\u65ad\u6210\u529f\u540e\u7684\u66f4\u65b0\u6b65\u9aa4\uff0c\u4e5f\u5c31\u662f\u8bf4\u8981\u5c3d\u91cf\u8ba9\u77ed\u8def\u9760\u524d\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u628a\u957f\u8def\u653e\u540e\u9762\uff0c\u77ed\u8def\u653e\u524d\u9762\u3002\n```\n#include<bits/stdc++.h>\n#define rep(i,a,b) for(int i=a;i<=b;i++)\nusing namespace std;\n#define N 1000010\n#define INF 2147483647\n#define ll long long \nint m,n,cnt1,cnt2;\n\nstruct Edge{\n    int v,next,dis;\n}e1[N],e2[N];\n\nint head1[N],head2[N];\nbool inq[N];\nint dis[N];\nll ans;\n\nint read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\n\nvoid add(int u,int v,int w)\n{\n    e1[++cnt1].v=v;\n    e1[cnt1].next=head1[u];\n    head1[u]=cnt1;\n    e1[cnt1].dis=w;\n    \n    e2[++cnt2].v=u;\n    e2[cnt2].next=head2[v];\n    head2[v]=cnt2;\n    e2[cnt2].dis=w;\n}\n\nvoid spfa1()\n{\n\tdeque<int>q;\n\tq.push_back(1);\n\tfill(dis+2,dis+n+1,INF);\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();\n\t\tq.pop_front();\n\t\tinq[u]=0;\n\t\tfor(int i=head1[u];i;i=e1[i].next)\n\t\t{\n\t\t\tint v=e1[i].v,w=e1[i].dis;\n\t\t\tif(dis[v]>dis[u]+w)\n\t\t\t{\n\t\t\t\tdis[v]=dis[u]+w;\n\t\t\t\tif(!inq[v])\n\t\t\t\t{\n\t\t\t\t\tif(q.empty() || dis[v]<dis[u])\n\t\t\t\t\t\tq.push_front(v);\n\t\t\t\t\telse\n\t\t\t\t\t\tq.push_back(v);\n\t\t\t\t\tinq[v]=1;  \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} \n\trep(i,2,n)\n\t\tans+=dis[i];\n}\n\nvoid spfa2()\n{\n    deque <int> q2;\n    q2.push_front(1);\n    fill(dis+2,dis+n+1,INF);\n    while(!q2.empty())\n      {\n          int u=q2.front();\n          q2.pop_front();\n          inq[u]=0;\n          for(int i=head2[u];i;i=e2[i].next)\n            {\n                int v=e2[i].v,w=e2[i].dis;\n                if(w+dis[u]<dis[v])\n                {\n                    dis[v]=w+dis[u];\n                    if(!inq[v])\n                    {\n                    \tif(q2.empty() || dis[v]<dis[u]) \n\t\t\t\t\t\t\tq2.push_front(v);\n                        else \n\t\t\t\t\t\t\tq2.push_back(v);\n                        inq[v]=1;\n                \t}\n              \t}\n          \t}\n      \t}\n    rep(i,2,n)\n      \tans+=dis[i];\n}\n\nint main()\n{\n    n=read(),m=read();\n    rep(i,1,m)\n    {\n        int x,y,z;\n        x=read(),y=read(),z=read();\n        add(x,y,z);\n    }\n    spfa1();\n    spfa2();\n    printf(\"%lld\",ans);\n    return 0;\n}\n```\n---\n# [P1359 \u79df\u7528\u6e38\u8247 ](https://www.luogu.org/problemnew/solution/P1359)\n### LLL\uff08Large Label Last\uff09\u4f18\u5316\n\n### \u5b83\u7684\u7b56\u7565\u662f\uff1a\u5bf9\u6bcf\u4e2a\u8981\u51fa\u5bf9\u7684\u5143\u7d20u\uff0c\u6bd4\u8f83dis[u]\u548c\u961f\u5217\u4e2ddis\u7684\u5e73\u5747\u503c\uff0c\u5982\u679cdis[u]\u66f4\u5927\uff0c\u90a3\u4e48\u5c06\u5b83\u5f39\u51fa\u653e\u5230\u961f\u5c3e\uff0c\u53d6\u961f\u9996\u5143\u7d20\u5728\u8fdb\u884c\u91cd\u590d\u5224\u65ad\uff0c\u76f4\u81f3\u5b58\u5728dis[x]\u5c0f\u4e8e\u5e73\u5747\u503c\n\n## \u6ce8\uff1a\u672c\u4ee3\u7801\u662fSLF\u548cLLL\u7684\u7ed3\u5408\u7248\n```\n#include<bits/stdc++.h>\n#define rep(i,a,b) for(int i=a;i<=b;i++) \n#define N 205\nusing namespace std;\n\nint n, dis[N], sum = 0, cnt = 0;\nint G[N][N];\nbool inq[N];\n\nint main()\n{\n    memset(dis, 0x3f, sizeof(dis));\n    scanf(\"%d\",&n);\n    rep(i,1,n-1)\n    \trep(j,i+1,n)\n    \t\tscanf(\"%d\",&G[i][j]);\n    deque<int> Q;\n    Q.push_back(1);\n    inq[1]=1;\n    dis[1]=0;\n    cnt=1;\n    while(!Q.empty())\n    {\n    \tint u=Q.front();\n    \twhile(cnt*dis[u]>sum)\n    \t{\n    \t\tQ.pop_back();\n    \t\tQ.push_back(u);\n\t\t\tu=Q.front(); \t\n\t\t}\n\t\tQ.pop_front();\n\t\tcnt--;\n\t\tsum-=dis[u];\n\t\tinq[u]=0;\n\t\trep(i,u+1,n)\n\t\t{\n\t\t\tif(dis[i]>dis[u]+G[u][i])\n\t\t\t{\n\t\t\t\tdis[i]=dis[u]+G[u][i];\n\t\t\t\tif(!inq[i])\n\t\t\t\t{\n\t\t\t\t\tif(dis[i]<=dis[Q.front()])\n\t\t\t\t\t\tQ.push_front(i);\n\t\t\t\t\telse \n\t\t\t\t\t\tQ.push_back(i); \n\t\t\t\t\tinq[i]=1;\n\t\t\t\t\tsum+=dis[i];\n\t\t\t\t\tcnt++; \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n    printf(\"%d\",dis[n]);\n}\n```",
        "postTime": 1550319349,
        "uid": 109419,
        "name": "\u8bbe\u8ba1\u6d89\u53ca\u793e\u7a37",
        "ccfLevel": 0,
        "title": "\u53cc\u5411SPFA\u53caSLF LLL\u4f18\u5316\u6cd5\u6a21\u677f\u9898"
    },
    {
        "content": "\u5c31\u53ea\u662f\u6bd4p1629\u591a\u4e86\u4e00\u70b9\u8303\u56f4\u554a\u3002\n~~\u7136\u800c\u88ab\u5361\u65f6\u95f4\u4e86~~\n\u6b63\u7740\u8dd1\uff0c\u6211\uff1aSPFA!\n\u53cd\u7740\u8dd1\uff0c\u6211\uff1a~~\u6bcf\u4e2a\u90fd\u6765\uff01~~\n\n\n------------\n\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u8003\u8651\uff0c\u65e2\u7136\u662f\u4ece\u76ee\u6807\u8282\u70b9\u56de\u53bb\uff0c\u90a3\u5c31\u662f\u4ece\u8282\u70b9\u5230\u76ee\u6807\u7684\u9006\u8def\uff01\n\u4f46\u662f\uff0c\u8def\u662f\u5355\u5411\u7684\uff0c\u5982\u679c\u662f\u65e0\u5411\u56fex2\n\u90a3\u6709\u5411\u56fe\u5462\uff1f\n\u53cd\u8fc7\u6765\u5b58\u554a\uff01\n~~\u6709\u8fd9\u6837\u4e00\u4f4d\u6570\u7ade\u5927\u4f6c\u5728\u671f\u672b\u8003\u8bd5\u540e\u8bf4\uff1a\u8d1f\u8d1f\u5f97\u6b63~~\n\u8fd9\u6837\u5c31\u5f97\u5230\u4e86\u4ee3\u7801\n\u5c06spfa\u5199\u4e24\u904d\uff0c\u5b58\u4e24\u4e2a\u56fe\n\ncode\n\n```c\n#include<bits/stdc++.h>\nusing namespace std;\nint m,n,s,a,b,c,k,t,num_edge=0,num_edge2=0;\nlong long sum;\nint head[1000001],vist[1000001],vist2[1000001],head2[1000001]; \nlong long int dis[5000005],dis2[5000005];\nstruct Edge{int to,dis,next;}edge[5000005];\nstruct Edge2{int to,dis,next;}edge2[5000005];\ninline void adde(int from,int to,int dis)\n{\n  edge[++num_edge].next=head[from];\n  edge[num_edge].to=to;\n  edge[num_edge].dis=dis;\n  head[from]=num_edge; \n}\ninline void adde2(int from,int to,int dis)\n{\n  edge2[++num_edge2].next=head2[from];\n  edge2[num_edge2].to=to;\n  edge2[num_edge2].dis=dis;\n  head2[from]=num_edge2; \n}\ninline void spfa(){\n    queue<int> q;\n    for(register int i=1; i<=n; i++) dis[i]=2147483647; \n    q.push(1); dis[1]=0; vist[1]=1;\n    while(!q.empty()){\n    int u=q.front();\n    q.pop();vist[u]=0;\n    for(register int i=head[u];i;i=edge[i].next)\n        if(dis[edge[i].to]>dis[u]+edge[i].dis){\n            dis[edge[i].to]=dis[u]+edge[i].dis;\n            if(vist[edge[i].to]==0){vist[edge[i].to]=1;q.push(edge[i].to);}\n        }   \n    }\n}\ninline void spfa2(){\n    queue<int> q2;\n    for(register int i=1; i<=n; i++) dis2[i]=2147483647; \n    q2.push(1); dis2[1]=0; vist2[1]=1;\n    while(!q2.empty()){\n    int u=q2.front();\n    q2.pop();vist2[u]=0;\n    for(register int i=head2[u];i;i=edge2[i].next)\n        if(dis2[edge2[i].to]>dis2[u]+edge2[i].dis){\n            dis2[edge2[i].to]=dis2[u]+edge2[i].dis;\n            if(vist2[edge2[i].to]==0){vist2[edge2[i].to]=1;q2.push(edge2[i].to);}\n        }   \n    }\n}\ninline  int gi()\n{\n    register int x=0;\n    register int t=1;\n    register char ch=getchar();\n    while((ch<'0'||ch>'9')&&ch!='-') ch=getchar();\n    if(ch=='-') t=-1,ch=getchar();\n    while(ch>='0'&&ch<='9') x=x*10+ch-48,ch=getchar();\n    return x*t;\n}\nint main(){\n    cin>>n>>m;\n    while(m--){a=gi();b=gi();c=gi();adde(a,b,c);\n\tadde2(b,a,c);}\n\tspfa();\n    spfa2();\n    for(int i=2;i<=n;i++)sum+=(dis[i]+dis2[i]);\n    cout<<sum;\n\treturn 0;\n}\n```",
        "postTime": 1548945464,
        "uid": 116388,
        "name": "SFWR",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1342 \u3010\u8bf7\u67ec\u3011"
    },
    {
        "content": "\u5806\u4f18\u5316dijkstra/SPFA\n\n\u4e58\u8f66\u56de\u5230\u603b\u90e8\u5982\u679c\u6bcf\u4e2a\u70b9\u6c42\u52301\u7684\u6700\u77ed\u8def\u590d\u6742\u5ea6\u5927\u6982\u662fO(n^2logm)\u2026\u2026\n\n\u8fd9\u90e8\u5206\u53ef\u4ee5\u53cd\u5411\u5efa\u8fb9\uff0c\u53cd\u5411\u5efa\u8fb9\u65f61\u5230i\u7684\u6700\u77ed\u8def\u5c31\u76f8\u5f53\u4e8e\u6b63\u5411\u5efa\u8fb9\u65f6i\u52301\u7684\u6700\u77ed\u8def\n\n\u56e0\u6b64\u5206\u522b\u8dd1\u4e00\u904d\u6700\u77ed\u8def\u5c31\u597d\u4e86\u2026\u2026\n\n\u8fb9\u6743\u5c0f\u4e8e10^9\uff0c\u7b54\u6848\u8981\u7528longlong\n```cpp\n#include<cstdio>\n#include<queue>\nusing namespace std;\nint n,m,x,y,z,p,q,cnt,h1[1000010],h2[1000010];\nlong long dis[1000010],ans;\nbool d[1000010];\nstruct Edge\n{\n    int to,next,dis;\n}e1[1000010],e2[1000010];//\u6240\u6709\u7684\u8fb9\u90fd\u8981\u5b58\u4e24\u904d\nstruct Heap\n{\n    int dis,id;\n    bool operator<(const Heap &h1)const\n    {\n        return dis>h1.dis;\n    }\n};\nvoid Add(int x,int y,int z)\n{\n    e1[++cnt].next=h1[x],\n    e1[cnt].to=y,\n    e1[cnt].dis=z,\n    h1[x]=cnt,\n    e2[cnt].next=h2[y],//\u53cd\u5411\u5efa\u8fb9\n    e2[cnt].to=x,\n    e2[cnt].dis=z,\n    h2[y]=cnt;\n}\nvoid Dijkstra()\n{\n    priority_queue<Heap>h;\n    Heap x;\n    for(int i=0;i<=n;++i){dis[i]=1109260817,d[i]=0;}\n    dis[1]=0,x.dis=0,x.id=1;\n    h.push(x);\n    while(!h.empty())\n    {\n        x=h.top();h.pop();\n        p=x.id;\n        if(d[p]){continue;}\n        d[p]=1;\n        for(int i=h1[p];i;i=e1[i].next)\n        {\n            q=e1[i].to;\n            if(dis[p]+e1[i].dis<dis[q])\n            {\n                dis[q]=dis[p]+e1[i].dis,\n                x.dis=dis[q],x.id=q;\n                h.push(x);\n            }\n        }\n    }\n    for(int i=2;i<=n;++i){ans+=dis[i],dis[i]=1109260817,d[i]=0;}//\u91cd\u65b0\u521d\u59cb\u5316\n    dis[1]=0,d[1]=0,x.dis=0,x.id=1;\n    h.push(x);\n    while(!h.empty())\n    {\n        x=h.top();h.pop();\n        p=x.id;\n        if(d[p]){continue;}\n        d[p]=1;\n        for(int i=h2[p];i;i=e2[i].next)\n        {\n            q=e2[i].to;\n            if(dis[p]+e2[i].dis<dis[q])\n            {\n                dis[q]=dis[p]+e2[i].dis,\n                x.dis=dis[q],x.id=q;\n                h.push(x);\n            }\n        }\n    }\n    for(int i=2;i<=n;++i){ans+=dis[i];}\n}\nvoid SPFA()\n{\n    for(int i=2;i<=n;i++){dis[i]=1009260817;}\n    dis[1]=0,d[1]=1;\n    q.push(1);\n    while(!q.empty())\n    {\n        x=q.front();q.pop();\n        d[x]=0;\n        for(int i=h1[x];i;i=e1[i].next)\n        {\n            y=e1[i].to;\n            if(dis[y]>dis[x]+e1[i].dis)\n            {\n                dis[y]=dis[x]+e1[i].dis;\n                if(!d[y]){d[y]=1;q.push(y);}\n            }\n        }\n    }\n    for(int i=2;i<=n;i++){ans+=dis[i],dis[i]=1009260817,d[i]=0;}\n    dis[1]=0,d[1]=1;\n    q.push(1);\n    while(!q.empty())\n    {\n        x=q.front();q.pop();\n        d[x]=0;\n        for(int i=h2[x];i;i=e2[i].next)\n        {\n            y=e2[i].to;\n            if(dis[y]>dis[x]+e2[i].dis)\n            {\n                dis[y]=dis[x]+e2[i].dis;\n                if(!d[y]){d[y]=1;q.push(y);}\n            }\n        }\n    }\n    for(int i=2;i<=n;i++){ans+=dis[i];}\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;++i)\n    {\n        scanf(\"%d%d%d\",&x,&y,&z);\n        Add(x,y,z);\n    }\n    Dijkstra();\n    //SPFA();\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1543047897,
        "uid": 14378,
        "name": "doby",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1342 \u3010\u8bf7\u67ec\u3011"
    },
    {
        "content": "###### \u8fd9\u9053\u9898\u53ef\u4ee5\u7b80\u5316\u4e3a\u5982\u4e0b\u5185\u5bb9\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u6c42\u8d77\u70b9\u5230\u6bcf\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u4ee5\u53ca\u6bcf\u4e2a\u70b9\u5230\u8d77\u70b9\u7684\u6700\u77ed\u8def\uff0c\u5e76\u76f8\u52a0\u3002\n###### \u5bf9\u4e8e\u8d77\u70b9\u5230\u6bcf\u4e2a\u70b9\u7684\u6700\u77ed\u8def\uff0c\u53ef\u4ee5\u7528\u88f8\u7684spfa\u6c42\u51fa\uff1b\n###### \u63a5\u4e0b\u6765\u601d\u8003\u6bcf\u4e2a\u70b9\u5230\u8d77\u70b9\u7684\u6700\u77ed\u8def\uff1a\n###### \u6211\u4eec\u4ee5\u4e0b\u56fe\u4e3a\u4f8b![](https://cdn.luogu.com.cn/upload/pic/28249.png)\n###### \u4e0a\u56fe\u4e2d\uff0c\u4eceu\u5230\u8d77\u70b9\uff0c\u8def\u5f84\u4e3au->v->\u8d77\u70b9\uff1b\u800c\u663e\u7136\u6b64\u8def\u5f84\u7b49\u4ef7\u4e8e\u4ece\u8d77\u70b9->v->u;\n###### \u8fd9\u91cc\u6709\u4eba\u4f1a\u95ee\uff0c\u9898\u76ee\u4e2d\u6ca1\u6709\u8d77\u70b9->v->u\u7684\u8def\u5f84\u554a\uff01\n###### \u6ca1\u6709\u5c31\u81ea\u5df1\u8fde\u5457\uff01\n###### \u4e8e\u662f\u6211\u4eec\u4e0d\u59a8\u5728\u5efa\u56fe\u65f6\uff0c\u540c\u65f6\u5efa\u4e00\u4e2a\u53cd\u5411\u56fe\uff1b\u8fd9\u6837\u95ee\u9898\u5c31\u53ef\u4ee5\u7b80\u5316\u4e3a\uff0c\u5728\u539f\u56fe\u548c\u53cd\u5411\u56fe\u4e0a\u5206\u522b\u8dd1\u4e00\u8fb9spfa\u5373\u53ef\n###### \u672c\u9898\u7684\u6570\u636e\u8303\u56f4\u662f\u76f8\u5f53\u5927\u7684\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u4e24\u70b9\uff1a\u7b2c\u4e00\uff0c\u7528stl\u4e2d\u7684vector\u662f\u53ef\u4ee5\u5b58\u4e0b\u56fe\u7684\uff1b\u7b2c\u4e8c\uff0c\u76f4\u63a5\u8dd1spfa\u7684\u8bdd\uff0c\u5982\u679c\u51fa\u9898\u4eba\u6ca1\u6709\u7279\u610f\u51fa\u5361spfa\u7684\u6570\u636e\uff0cspfa\u5728\u672c\u9898\u8868\u73b0\u7684\u76f8\u5f53\u4f18\u79c0\u3002\n###### \u5c0f\u5751\u70b9\uff1a\u7edf\u8ba1\u7b54\u6848\u8981\u7528longlong\u3002\u5426\u5219\u4f1a\u70b8\u3002\n###### \u987a\u4fbf\u5410\u69fd\u4e00\u53e5\uff0c\u8fd9\u4e2a\u9898\u7684\u96be\u5ea6\u5237\u7684\u597d\u50cf\u6709\u70b9\u9ad8\u4e86\uff0c\u5e94\u8be5\u5f52\u5230\u666e\u53ca+/\u63d0\u9ad8\u8f83\u4e3a\u5408\u9002\n###### \u8bf7\u52ff\u6284\u88ad\uff0c\u6211\u5728\u975e\u5173\u952e\u4ee3\u7801\u5904\u505a\u4e86\u6539\u52a8\uff0c\u6284\u88ad\u4f1a\u5bfc\u81f4CE\uff0c\u4f46\u662fspfa\u548c\u5efa\u56fe\u4fdd\u8bc1\u6ca1\u6709\u95ee\u9898\uff0c\u8bf7\u653e\u5fc3\u98df\u7528~\n\n\u4e0b\u9762\u662f\u4ee3\u7801\u4e86\uff0c\u8d85\u7ea7\u77ed~~\uff08\u6211\u4f1a\u544a\u8bc9\u4f60\u6211\u538b\u884c\u4e86\u5417\uff09~~\n------------\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#include<cstring>\nusing namespace std;\nconst int maxn=1000005;\nstruct node\n{\n\tint st,en,dist;\n};\nvector<node>v1[maxn];\nvector<node>v2[maxn];\nint dis[maxn],vis[maxn],m,n;\nlong long ans;\nvoid add(int x,int y,int z)\n{\n\tnode xx,yy;\n\txx.st=x;xx.en=y;xx.dist=z;\n\tv1[x].push_back(xx);\n\tyy.st=y;yy.en=x;yy.dist=z;\n\tv2[y].push_back(yy);\n}\nvoid spfa_one(int s)\n{\n\tmemset(dis,127,sizeof(dis));\n\tmemset(vis,0,sizeof(vis));\n\tqueue<int>q;\n\tq.push(s);vis[s]=1;dis[s]=0;\n\twhile(!q.empty()){\n\t\tint h=q.front();\n\t\tq.pop();vis[h]=0;\n\t\tfor(int i=0;i<v1[h].size();i++)\n\t\t{\n\t\t\tnode t=v1[h][i];\n\t\t\tif(dis[t.en]>dis[t.st]+t.dist){\n\t\t\t\tdis[t.en]=dis[t.st]+t.dist;\n\t\t\t\tif(!vis[t.en]){\n\t\t\t\t\tvis[t.en]=1;\n\t\t\t\t\tq.push(t.en);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}for(int i=1;i<=n;i++)ans+=dis[i];\n}\nvoid spfa_two(int s)\n{\n\tmemset(dis,127,sizeof(dis));\n\tmemset(vis,0,sizeof(vis));\n\tqueue<int>q;\n\tq.push(s);vis[s]=1;dis[s]=0;\n\twhile(!q.empty()){\n\t\tint h=q.front();\n\t\tq.pop();vis[h]=0;\n\t\tfor(int i=0;i<v2[h].size();i++)\n\t\t{\n\t\t\tnode t=v2[h][i];\n\t\t\tif(dis[t.en]>dis[t.st]+t.dist){\n\t\t\t\tdis[t.en]=dis[t.st]+t.dist;\n\t\t\t\tif(!vis[t.en]){\n\t\t\t\t\tvis[t.en]=1;\n\t\t\t\t\tq.push(t.en);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}for(int i=1;i<=n;i++)ans+=dis[i];\n}\nint mian()\n{\n\tcin>>n>>m;\n\tfor(int i=1;i<=m;i++){\n\t\tint x,y,z;\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tadd(x,y,z);\n\t}\n\tspfa_one(1);spfa_two(1);\n\tcout<<ans;\n\treturn 0;\n}\n```",
        "postTime": 1534124801,
        "uid": 9522,
        "name": "\u5c0f\u77e5\u9752",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1342 \u3010\u8bf7\u67ec\u3011"
    },
    {
        "content": "\u4e00\u884c\u795e\u5947\u7684\u4ee3\u7801\uff1a\n\n```cpp\nios::sync_with_stdio(false);\n```\n\n\u52a0\u4e4b\u524d3TLE\uff0c\u52a0\u4e4b\u540eAC\uff0c\u6240\u4ee5\u8fd9\u662f\u4e00\u9053**\u7701\u9009\u57fa\u7840-\u8bfb\u5165/\u8f93\u51fa\u4f18\u5316**\u9898\uff08\u786e\u4fe1\uff09\u3002\n\n\u9644\u4e0aSPFA\u4ee3\u7801AC\uff1a\n\n```cpp\n#include<iostream>\n#include<vector>\n#include<queue>\n#include<cstring>\nusing namespace std;\n#define MAXN 1000010\nint n,m,x,y,z,dis[MAXN];\nlong long ans;///\u8bb0\u4f4f\u4e00\u5b9a\u8981long long!!!\nbool vis[MAXN];\nstruct Node\n{\n    int v,d;\n};\nbool operator < (Node a,Node b)\n{\n    return a.d>b.d;\n}\nvector<Node>G[MAXN];\nvector<Node>ReG[MAXN];///\u8868\u793a\u53cd\u8fb9\npriority_queue<Node>Q;\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin>>n>>m;\n    while(m--)\n    {\n        cin>>x>>y>>z;\n        G[x].push_back((Node){y,z});\n        ReG[y].push_back((Node){x,z});\n    }\n    memset(dis,0x7f,sizeof dis);\n    dis[1]=0;\n    Q.push((Node){1,0});\n    while(!Q.empty())\n    {\n        int now=Q.top().v;Q.pop();\n        if(vis[now]) continue;\n        vis[now]=true;\n        ans+=dis[now];\n        for(int i=0;i<G[now].size();i++)\n        {\n            Node hjj=G[now][i];\n            if(!vis[hjj.v]&&dis[hjj.v]>dis[now]+hjj.d)\n            {\n                dis[hjj.v]=dis[now]+hjj.d;\n                Q.push((Node){hjj.v,dis[hjj.v]});\n            }\n        }\n    }\n    ///\u8dd1\u5b8c\u6b63\u8fb9\u8dd1\u53cd\u8fb9\n    memset(dis,0x7f,sizeof dis);\n    memset(vis,0,sizeof vis);\n    while(!Q.empty())\n        Q.pop();\n    dis[1]=0;\n    Q.push((Node){1,0});\n    while(!Q.empty())\n    {\n        int now=Q.top().v;Q.pop();\n        if(vis[now]) continue;\n        vis[now]=true;\n        ans+=dis[now];\n        for(int i=0;i<ReG[now].size();i++)\n        {\n            Node hjj=ReG[now][i];\n            if(!vis[hjj.v]&&dis[hjj.v]>dis[now]+hjj.d)\n            {\n                dis[hjj.v]=dis[now]+hjj.d;\n                Q.push((Node){hjj.v,dis[hjj.v]});\n            }\n        }\n    }\n    cout<<ans;\n    return 0;\n}\n\n```\n",
        "postTime": 1528173344,
        "uid": 51983,
        "name": "Uranus",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1342 \u3010\u8bf7\u67ec\u3011"
    },
    {
        "content": "\u4e4d\u4e00\u770b\uff0c\u8fd9\u662f\u4e00\u9053\u5355\u5143\u6700\u77ed\u8def\u5f84\u7684\u9898\u76ee\u3002\u4f46\u95ee\u9898\u5c31\u5728\u4e8e\uff0c\u4ece1\u70b9\u5230\u8fbe\u6bcf\u4e00\u4e2a\u70b9\u4e4b\u540e\uff0c\u8fd8\u8981\u56de\u52301\u70b9\uff0c\u8981\u6c42\u7684\u662f\u6b64\u57fa\u7840\u4e0a\u7684\u6700\u5c0f\u503c\n\n\u6211\u4eec\u53ef\u4ee5\u6362\u4e2a\u601d\u8def\uff1a\u4ece1\u70b9\u5230i\u70b9\u53ef\u4ee5\u7528\u5355\u5143\u6700\u77ed\u8def\u7b97\u6cd5\u6c42\u89e3\uff0c\u4ecei\u70b9\u56de\u52301\u70b9\u53ef\u4ee5\u89c6\u4e3a\u5728\u8fb9\u53d6\u53cd\u7684\u6709\u5411\u56fe\u4e0a\u4ece1\u70b9\u5230i\u70b9\n\n\u4e8e\u662f\u4e4e\uff0c\u6211\u4eec\u53ef\u4ee5\u5b58\u4e24\u4e2a\u56fe\uff0c\u4e00\u4e2a\u539f\u56fe\uff0c\u4e00\u4e2a\u539f\u56fe\u53d6\u53cd\uff0c\u5728\u4e24\u5f20\u56fe\u4e0a\u5206\u522b\u6c42\u51fa\u5355\u6e90\u6700\u77ed\u8def\u5f84\uff0c\u6700\u540e\u4e24\u5f20\u56fe\u4e0a1\u5230\u6240\u6709\u70b9\u7684\u8ddd\u79bb\u4e4b\u548c\u5c31\u662f\u6240\u6c42\u7684\u7b54\u6848\n\n\u5177\u4f53\u7ec6\u8282\u770b\u6ce8\u89e3\uff0c\u4e0a\u4ee3\u7801\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<cstring>\nusing namespace std;\nconst int N=1000050,M=1000050;\ntypedef long long LL;\nint edge[M],ver[M],Next[M],head[N],used[N],d[N];\nint edge2[M],ver2[M],Next2[M],head2[N],f[N];\nint n,m,tot;\nLL ans;\nvoid add(int x,int y,int z)\n{\n    ver[++tot]=y,edge[tot]=z,Next[tot]=head[x],head[x]=tot;\n    ver2[tot]=x,edge2[tot]=z,Next2[tot]=head2[y],head2[y]=tot;\n    //\u4e00\u4e2a\u94fe\u8868\u7528\u6765\u5b58\u539f\u56fe\uff0c\u4e00\u4e2a\u5b58\u53cd\u5411\u56fe\n    return;\n}\nvoid spfa()\n{\n//\u6c42\u539f\u56fe\u4e0a\u7684\u5355\u6e90\u6700\u77ed\u8def\u5f84\n    memset(d,0x3f,sizeof(d));\n    memset(used,0,sizeof(used));\n    queue<int> q;\n    q.push(1);\n    d[1]=0,used[1]=1;\n    while(!q.empty())\n    {\n        int x=q.front();\n        q.pop();\n        used[x]=0;\n        for(int i=head[x];i;i=Next[i])\n        {\n            int y=ver[i],z=edge[i];\n            if(d[y]>d[x]+z)\n            {\n                d[y]=d[x]+z;\n                if(!used[y]) q.push(y),used[y]=1;\n            }\n        }\n    }\n    return;\n}\nvoid spfa2()\n{\n//\u6c42\u53cd\u5411\u56fe\u4e0a\u7684\u5355\u6e90\u6700\u77ed\u8def\u5f84\n    memset(f,0x3f,sizeof(f));\n    memset(used,0,sizeof(used));\n    queue<int> q;\n    q.push(1);\n    f[1]=0,used[1]=1;\n    while(!q.empty())\n    {\n        int x=q.front();\n        q.pop();\n        used[x]=0;\n        for(int i=head2[x];i;i=Next2[i])\n        {\n            int y=ver2[i],z=edge2[i];\n            if(f[y]>f[x]+z)\n            {\n                f[y]=f[x]+z;\n                if(!used[y]) q.push(y),used[y]=1;\n            }\n        }\n    }\n    return;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=0;i<m;i++)\n    {\n        int x,y,z;\n        scanf(\"%d%d%d\",&x,&y,&z);\n        add(x,y,z);\n    }\n    spfa();\n    spfa2();\n    for(int i=1;i<=n;i++)\n    ans+=f[i]+d[i];\n    //\u7b54\u6848\u5373\u4e3a\u4e24\u5f20\u56fe\u4e0a\u7684\u8ddd\u79bb\u4e4b\u548c\n    printf(\"%lld\",ans);\n    return 0;\n}\n```",
        "postTime": 1527848754,
        "uid": 41781,
        "name": "bztMinamoto",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1342 \u3010\u8bf7\u67ec\u3011"
    },
    {
        "content": "\u8bf4\u5b9e\u8bdd\u8fd9\u9898\u4e0d\u5c31\u662fP1629\u7684\u6570\u636e\u52a0\u5f3a\u7248\u5417\u3002\u3002\u3002\n\n\u672c\u60f3\u76f4\u63a5\u628a\u90a3\u4efd\u4ee3\u7801\u4ea4\u8fc7\u6765\u3002\u3002\u7ed3\u679c\u53cd\u6b63\u5404\u79cd\u9519\u8bef\u6539\u4e86\u597d\u4e45\n\n\u53ef\u4ee5\u8bf4\u672c\u8d28\u601d\u8def\u4e0a\u8fd8\u662f\u4e00\u6837\u7684\uff0c\u6b63\u7740\u4e00\u6b21SPFA\u518d\u5efa\u53cd\u8fb9\u6765\u4e00\u6b21\u3002\n\n\u53ea\u662f\u9632MLE\u548cTLE\u628a\u90a3\u9053\u9898\u7528\u7684\u6570\u7ec4\u6362\u6210\u4e24\u4e2a\u7ed3\u6784\u4f53\u518d\u590d\u5236\u4e00\u4e2aSPFA\uff08\u53cd\u6b63\u90a3\u9898\u6211\u662f\u8fd9\u4e48\u5199\u7684\u3002\u3002\u3002\uff09\n\n```cpp\n#include<bits/stdc++.h>\n#define R register\n#define rep(i,j,n) for(R int i=j;i<=n;i++)\n#define CLEAR(x) memset(x,0,sizeof(x))\n#define per(i,j,n) for(int i=j;i>=n;i--)\nusing namespace std;\ntypedef long long ll;\ninline int read() {\n    int x;    char ch ;\n    while(ch=getchar() , ch>'9'||ch<'0') ; x=ch-'0';\n    while(ch=getchar() , ch>='0'&&ch<='9') x=(x<<1)+(x<<3)+ch-'0'; return x;\n}\nconst int N=1000010;\nint n,m,cnt1,cnt2,head1[N],head2[N],dis[N];\nll ans;    //\u4e00\u5b9a\u8bb0\u5f97\u5f00long long \uff0c\u8fd9\u91cc\u6539\u4e86\u597d\u591a\u6b21\u3002\u3002\u3002\nqueue<int> q; bool vis[N];\nstruct edge {\n    int next,to,w;\n}a[N],b[N];\ninline void ins(int x,int y , int w) {  //\u76f4\u63a5\u628a\u6b63\u5411\u548c\u53cd\u5411\u8fb9\u90fd\u63d2\u5165\u597d\u4e86\n    cnt1++; a[cnt1]=edge{head1[x],y,w}; head1[x]=cnt1;\n    cnt2++; b[cnt2]=edge{head2[y],x,w}; head2[y]=cnt2;  \n}\ninline ll spfa1() {\n    CLEAR(vis) ; memset(dis,0x7f,sizeof(dis));  //\u8bb0\u5f97\u521d\u59cb\u5316\n    dis[s]=0; vis[s]=true;\n    q.push(s) ; \n    while(!q.empty()) {\n        int x=q.front() ; q.pop() ; vis[x]=false;\n        for(int i=head1[x] ; i ;i=a[i].next){\n            int v=a[i].to;\n            if(dis[v]>dis[x]+a[i].w) {\n                dis[v]=dis[x]+a[i].w;\n                if(!vis[v]) {\n                    vis[v]=true;\n                    q.push(v);\n                }\n            }\n        }\n    }\n    rep(i,2,n) ans+=dis[i];    //\u7d2f\u79ef\u603b\u548c\n}\ninline int spfa2(int s, int t) {  //\u7528\u53cd\u8fb9\u518d\u6765\u4e00\u6b21\n    CLEAR(vis) ; memset(dis,0x7f,sizeof(dis));\n    dis[s]=0; vis[s]=true;\n    q.push(s) ; \n    while(!q.empty()) {\n        int x=q.front() ; q.pop() ; vis[x]=false;\n        for(int i=head2[x] ; i ;i=b[i].next){\n            int v=b[i].to;\n            if(dis[v]>dis[x]+b[i].w) {\n                dis[v]=dis[x]+b[i].w;\n                if(!vis[v]) {\n                    vis[v]=true;\n                    q.push(v);\n                }\n            }\n        }\n    }\n    rep(i,2,n) ans+=dis[i];\n}\nint main(){\n    n=read() ; m=read() ; \n    int x,y,v; \n    rep(i,1,m) x=read() , y=read() , v=read() , ins(x,y,v);\n    spfa1(1,n) ;\n    spfa2(1,n) ;  //\u597d\u5427\u8fd9\u4e2a\u81ea\u53d8\u91cf\u662f\u6ca1\u7528\u7684\u3002\u3002\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1504103511,
        "uid": 27276,
        "name": "\u738b\u5c06\u98de\u626cCliffly",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1342 \u3010\u8bf7\u67ec\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5361\u5e38\u554a\u3002\n\n\u90bb\u63a5\u8868\u4e0d\u80fd\u7528\u624b\u5199\u7684\u771f\u94fe\u8868\uff0c\u4f1a\u8d85\u65f6\u3002\u3002\u3002\n\n\u7528stl\u7684\u94fe\u8868\u5c31\u66f4\u4e0d\u7528\u8bf4\u4e86\u3002\n\n\u53ea\u80fd\u624b\u52a8\u6a21\u62df\u94fe\u8868\u3002\n\n\u56e0\u4e3a\u771f\u94fe\u8868\u4f1a\u52a8\u6001\u7533\u8bf7\u5185\u5b58\uff0c\u6bd4\u8f83\u6162\u3002\u3002\u3002\n\n\n\u81f3\u4e8e\u601d\u8def\uff0c\u697c\u4e0b\u7684\u5df2\u7ecf\u8bb2\u7684\u5f88\u6e05\u6670\u4e86\u3002\n\n\u5efa\u7acb\u53cd\u5411\u56fe\uff0c\u4ee51\u8282\u70b9\u4e3a\u6e90\u70b9\u5728\u6b63\u53cd\u56fe\u4e0a\u5206\u522b\u8dd1\u4e00\u904dspfa\u3002\n\n\u7b54\u6848\u5c31\u662f\u6240\u6709\u70b9\u52301\u8282\u70b9\u7684\u6700\u77ed\u8def\u957f\u5ea6\u4e4b\u548c\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nstatic const int maxs=1000000;\ntemplate<typename _Tp>inline void in(_Tp & dig)\n{\n    char c=getchar();dig=0;\n    while(!isdigit(c))c=getchar();\n    while(isdigit(c))dig=dig*10+c-'0',c=getchar();\n}\nstruct graph\n{\n    int to[maxs+5],dis[maxs+5],nxt[maxs+5],head[maxs+5],size;\n    inline graph(){memset(head,-1,sizeof(head)),size=0;}\n    inline void push(int u,int v,int w)\n    {\n        to[size]=v,dis[size]=w,nxt[size]=head[u],head[u]=size,size++;\n    }\n};\nint n,m;\nLL dis[maxs+5],ans;\ngraph l,ul;\nqueue<int> que;\nbool inque[maxs+5];\nvoid spfa(graph*l)\n{\n    for(int i=2;i<=n;i++)dis[i]=LLONG_MAX;\n    que.push(1),inque[1]=1;\n    while(!que.empty())\n    {\n        int f=que.front();que.pop(),inque[f]=0;\n        for(int i=l->head[f];i!=-1;i=l->nxt[i])\n            if(dis[l->to[i]]>dis[f]+l->dis[i])\n            {\n                dis[l->to[i]]=dis[f]+l->dis[i];\n                if(!inque[l->to[i]])que.push(l->to[i]),inque[l->to[i]]=1;\n            }\n    }\n    for(int i=2;i<=n;i++)ans+=dis[i];\n}\nint main()\n{\n    in(n),in(m);\n    for(int i=1,u,v,w;i<=m;i++)in(u),in(v),in(w),l.push(u,v,w),ul.push(v,u,w);\n    spfa(&l),spfa(&ul),printf(\"%lld\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1494125800,
        "uid": 22388,
        "name": "XZYQvQ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1342 \u3010\u8bf7\u67ec\u3011"
    },
    {
        "content": "\u975e\u5e38\u5e38\u89c1\u7684\u6280\u5de7\uff0c\u6211\u4eec\u5bf9\u4e8e\u539f\u56fe\u505a\u4e00\u904d\u6700\u77ed\u8def\uff0c\u5f97\u5230\u8d77\u70b9\u5230\u5176\u4ed6\u6bcf\u4e2a\u70b9\u7684\u4ee3\u4ef7\u7684\u6700\u5c0f\u503c\uff0c\u7136\u540e\u5c31\u9700\u8981\u6c42\u51fa\u5176\u4ed6\u6bcf\u4e2a\u70b9\u5230\u8d77\u70b9\u7684\u6700\u5c0f\u4ee3\u4ef7\u503c\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u539f\u56fe\u53cd\u5411\uff0c\u4ece\u8d77\u70b9\u505a\u6700\u77ed\u8def\u5c31\u53ef\u4ee5\u5f97\u5230\u5176\u4ed6\u70b9\u5230\u8d77\u70b9\u7684\u6700\u5c0f\u4ee3\u4ef7\u503c\u3002\n\n\u7136\u540e\u5c31\u662f\u5199\u6700\u77ed\u8def\uff0c\u5176\u5b9e\u6ca1\u4ec0\u4e48spfa\uff0cdij\u90fd\u53ef\u4ee5\uff08dij\u9700\u8981\u4f18\u5316\uff0cspfa\u6ca1\u8bd5\u8fc7\uff09\u3002\n\n\n\n\n\n\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <cstdlib>\n#include <algorithm>\n#include <string>\n#include <vector>\n#include <queue>\nusing namespace std;\nconst int maxn=1000000+20;\nstruct edge{int to,w;};\ntypedef vector<edge> graph[maxn];\ntypedef pair<long long,int> P;\ntypedef long long ll;\ngraph G,rG;\nint n,m;\nll d[maxn],ans=0;\npriority_queue<P,vector<P>,greater<P> > que;\ninline void read(int &n){\n    n=0;int f=1;\n    char ch=getchar();\n    while(ch<'0' || ch>'9'){\n        if(ch=='-') f=-1;\n        ch=getchar();\n    }\n    do{\n        n=n*10+ch-'0';\n        ch=getchar();\n    }while(ch>='0' && ch<='9');\n    n=n*f;\n    return;\n}\nvoid write(ll n){\n    if(n<0){\n        putchar('-');\n        n=0-n;\n    }\n    if(n>=10) write(n/10);\n    putchar((n % 10)+'0');\n    return;\n}\ninline void add_edge(int u,int v,int w){\n    edge e;\n    e.to=v,e.w=w;\n    G[u].push_back(e);\n    e.to=u;\n    rG[v].push_back(e);\n    return;\n}\nvoid init(){\n    read(n);read(m);\n    int u,v,w;\n    for(int i=1;i<=m;i++){\n        read(u);read(v);read(w);\n        add_edge(u,v,w);\n    }\n    return;\n}\nvoid dijkstra(graph &g){\n    for(int i=1;i<=n;i++) d[i]=1234567890;\n    while(!que.empty()) que.pop();\n    d[1]=0;P p(0,1);\n    que.push(p);\n    while(!que.empty()){\n        P pp=que.top();\n        que.pop();\n        int u=pp.second;\n        if(d[u]<pp.first) continue;\n        for(int i=0;i<g[u].size();i++){\n            int v=g[u][i].to;\n            int temp=d[u]+g[u][i].w;\n            if(d[v]>temp){\n                d[v]=temp;\n                P p(d[v],v);\n                que.push(p);\n            }\n        }\n    }\n    for(int i=1;i<=n;i++)\n        ans+=d[i];\n    return;\n}\nvoid solve(){\n    dijkstra(G);\n    dijkstra(rG);\n    write(ans);\n    return;\n}\nint main(){\n    init();\n    solve();\n    return 0;\n}\n```",
        "postTime": 1471919603,
        "uid": 8874,
        "name": "Kwork",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1342 \u3010\u8bf7\u67ec\u3011"
    }
]