[
    {
        "content": "u1s1\uff0c\u7f51\u4e0a\u7684\u9898\u89e3\u90fd\u597d\u7b80\u6d01\u554a\uff0c\u849f\u84bb\u8868\u793a\u6839\u672c\u770b\u4e0d\u61c2\uff08\n\n# $\\texttt{Description}$\n\n\u9898\u9762\u8fc7\u4e8e\u590d\u6742\uff0c[\u89c1\u9898\u9762](https://www.luogu.com.cn/problem/P7198)\n\n# $\\texttt{Solution}$\n\n\u7531\u4e8e\u53ea\u8ba1\u7b97\u4f7f\u7528\u8d85\u80fd\u529b\u7684\u6b21\u6570\uff0c\u6240\u4ee5\u5929\u5175\u653e\u54ea\u91cc\u65e0\u6240\u8c13\u3002\n\n\uff08\u4ee5\u4e0b\u7684\u8ba8\u8bba\u5747\u4e0d\u8003\u8651\u5929\u5175\uff09\n\n\u6bcf\u6b21\u4ea4\u6362\u64cd\u4f5c\u53ef\u4ee5\u770b\u6210\u662f\u4ea4\u6362\u4e00\u4e2a\u5175\u7684\u79cd\u7c7b\uff0c\u5373\u9a91\u5175\u53d8\u6210\u6b65\u5175\uff0c\u6b65\u5175\u53d8\u6210\u9a91\u5175\u3002\u7531\u4e8e\u6b65\u5175\u548c\u9a91\u5175\u7684\u6570\u91cf\u662f\u76f8\u540c\u7684\uff0c\u6240\u4ee5\u4e00\u5b9a\u4e0d\u4f1a\u51fa\u73b0\u4e0d\u5408\u6cd5\u7684\u4ea4\u6362\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u60f3\u5230SPFA\u9884\u5904\u7406\u4e00\u4e0b $dis_{i,j}$ \u8868\u793a\u7b2c $i$ \u4e2a\u5175\u6700\u5c11\u9700\u8981\u7528\u51e0\u6b21\u8d85\u80fd\u529b\u624d\u80fd\u5230\u7b2c $j$ \u4e2a\u76ee\u6807\u683c\u5b50\u3002\u8fd9\u91cc\u628a\u4e00\u4e2a\u9700\u8981\u6709 $r$ \u4e2a\u5175\u8fdb\u5165\u7684\u683c\u5b50\u62c6\u6210\u4e86 $r$ \u4e2a\u76f8\u540c\u7684\u683c\u5b50\uff0c\u539f\u56e0\u540e\u9762\u5c31\u4f1a\u770b\u5230\u3002\n\n\u7531\u4e8e\u76f4\u63a5\u8ba1\u7b97\u7b54\u6848\u5f88\u9ebb\u70e6\uff0c\u8003\u8651\u4e8c\u5206\u7b54\u6848 $mid$\uff0c\u5bf9\u4e8e\u6bcf\u4e2a $dis_{i,j}$\uff0c\u5982\u679c\u5b83\u5927\u4e8e $mid$ \u4e0d\u7ba1\uff0c\u5c0f\u4e8e\u7b49\u4e8e\u5c31\u52a0\u4e00\u6761 $i$ \u5230 $j$ \u7684\u8fb9\u3002\u56e0\u4e3a\u6211\u4eec\u60f3\u8981\u5c3d\u53ef\u80fd\u591a\u7684\u5728\u4e0d\u52a0\u5165\u5929\u5175\u7684\u5e72\u6d89\u65f6\u5c3d\u53ef\u80fd\u591a\u7684\u8ba9\u8fd9\u4e9b\u5175\u5230\u8fbe\u76ee\u6807\u4f4d\u7f6e\uff0c\u6240\u4ee5\u5bf9\u5efa\u51fa\u6765\u7684\u8fd9\u4e2a\u56fe\u8dd1\u4e00\u904d\u6700\u5927\u5339\u914d\u5373\u53ef\u3002\u5047\u8bbe\u53ef\u4ee5\u6709 $cnt$ \u4e2a\u5175\u5230\u8fbe\u4e92\u4e0d\u76f8\u540c\u7684\u76ee\u6807\u683c\uff08\u8fd9\u91cc\u524d\u9762\u62c6\u683c\u5b50\u7684\u4f5c\u7528\u5c31\u4f53\u73b0\u51fa\u6765\u4e86\uff0c\u56e0\u4e3a\u4e00\u4e2a\u9700\u8981\u591a\u4e2a\u5175\u8fdb\u5165\u7684\u683c\u5b50\u5728\u56fe\u4e0a\u5b9e\u9645\u4e0a\u662f\u591a\u4e2a\u70b9\uff09\u3002\u5047\u8bbe\u8dd1\u51fa\u6765\u7684\u6700\u5927\u5339\u914d\u662f $cnt$\u3002\n\n\u4f46\u662f\u6211\u4eec\u8fd8\u6ca1\u6709\u8003\u8651\u5929\u5175\u3002\u8fd9\u4e2a\u9898\u6709\u70b9\u73a9\u6587\u5b57\u6e38\u620f\u7684\u610f\u601d\uff0c\u5176\u5b9e\u60f3\u4e00\u60f3\u4f1a\u53d1\u73b0\u5929\u5175\u7684\u4f5c\u7528\u5c31\u662f\u5230\u8fbe\u4e00\u4e2a\u76ee\u6807\u683c\u7136\u540e\u53ef\u4ee5\u4e0e\u5176\u5b83\u5175\u4ea4\u6362\uff0c\u5373\u4fdd\u8bc1\u4e86\u8fd9\u4e2a\u95ee\u9898\u6709\u89e3\u3002\u90a3\u4e48\u5982\u679c\u4e8c\u5206\u4e86\u4e00\u4e2a $mid$\uff0c\u5929\u5175\u5c31\u53ef\u4ee5\u9001 $mid$ \u6b21\u5176\u5b83\u7684\u5175\u5230\u76ee\u6807\u683c\u3002\u6ce8\u610f\u6bcf\u6b21\u8d85\u80fd\u529b\u53ef\u4ee5\u4ea4\u6362\u65e0\u9650\u6b21\u5175\u7684\u4f4d\u7f6e\uff0c\u56e0\u4e3a\u5929\u5175\u4e0e\u5176\u5b83\u5175\u7684\u4ea4\u6362\u548c\u6b65\u5175\u4e0e\u9a91\u5175\u7684\u4ea4\u6362\u662f\u72ec\u7acb\u7684\uff08\u72ec\u7acb\u6307\u4e24\u6b21\u4ea4\u6362\u4e0d\u4f1a\u64cd\u4f5c\u4e00\u4e2a\u76f8\u540c\u7684\u5175\uff0c\u5982\u679c\u4e0d\u72ec\u7acb\uff0c\u90a3\u4e48\u80af\u5b9a\u4e0d\u662f\u6700\u4f18\u89e3\uff0c\u6240\u4ee5\u4e0d\u7528\u7ba1\uff09\u3002\u6700\u540e\u5c31\u5f97\u51fa\u5982\u679c $cnt+mid\\ge 2\\times k$ \u5c31\u662f\u53ef\u884c\u7684\u4e00\u4e2a\u7b54\u6848\u3002\n\n# $\\texttt{Code}$\n\n```cpp\n#include <cstdio>\n#include <queue>\n#include <cstring>\n\ninline int min(const int x, const int y) {return x < y ? x : y;}\nstruct Node {int x, y;};\nconst int dx[] = {-1, 1, 0, 0};\nconst int dy[] = {0, 0, -1, 1};\nstd::queue<Node> Q;\nstd::vector<int> G[105];\n\nint lnk[105], x[105], y[105], dis[105][205], tp[105][105], h[105][105];\nint rx[105], ry[105], n, m, k, tot;\nbool vis[105], mark[105][105];\nbool Find(const int u) {\n\tfor (int v : G[u]) \n\t\tif (!vis[v] && (vis[v] = true))\n\t\t\tif (!lnk[v] || Find(lnk[v])) return lnk[v] = u, true;\n\treturn false;\n}\n\nvoid SPFA(const int sx, const int sy, const int d) {\n\tmemset(mark, 0, sizeof mark);\n\tmemset(tp, 0x3f, sizeof tp);\n\ttp[sx][sy] = 0;\n\tQ.push(Node{sx, sy});\n\twhile (Q.size()) {\n\t\tint x(Q.front().x), y(Q.front().y);\n\t\tQ.pop();\n\t\tmark[x][y] = false;\n\t\tfor (int k(0); k <= 3; ++ k) {\n\t\t\tint x0(x + dx[k]), y0(y + dy[k]);\n\t\t\tif (x0 < 1 || n < x0 || y0 < 1 || m < y0) continue;\n\t\t\tint ans(0), tmp((tp[x][y] & 1) ^ d);\n\t\t\tif (h[x][y] < h[x0][y0] && tmp) ans = 1;\n\t\t\tif (h[x][y] > h[x0][y0] && !tmp) ans = 1;\n\t\t\tif (tp[x][y] + ans < tp[x0][y0]) {\n\t\t\t\ttp[x0][y0] = tp[x][y] + ans;\n\t\t\t\tif (!mark[x0][y0])\n\t\t\t\t\tQ.push(Node{x0, y0}), mark[x0][y0] = true;\n\t\t\t}\n\t\t}\n\t}\n}\n\nbool check(const int mid) {\n\tmemset(lnk, 0, sizeof lnk);\n\tint ans(0);\n\tfor (int i(1); i <= 2 * k; ++ i) G[i].clear();\n\tfor (int i(1); i <= 2 * k; ++ i);\n\tfor (int i(1); i <= 2 * k; ++ i)\n\t\tfor (int j(1); j <= tot; ++ j)\n\t\t\tif (dis[i][j] <= mid) G[i].push_back(j);\n\tfor (int i(1); i <= 2 * k; ++ i)\n\t\tmemset(vis, 0, sizeof vis), ans += Find(i);\n\treturn ans + mid >= 2 * k;\n}\n\nint main() {\n\tint t, l(0), r;\n\tscanf(\"%d%d%d%d\", &n, &m, &k, &t);\n\tfor (int i(1); i <= 2 * k + 1; ++ i) scanf(\"%d%d\", x + i, y + i);\n\tfor (int i(1); i <= t; ++ i) {\n\t\tint x, y, r;\n\t\tscanf(\"%d%d%d\", &x, &y, &r);\n\t\twhile (r --) rx[++ tot] = x, ry[tot] = y;\n\t}\n\tfor (int i(1); i <= n; ++ i)\n\tfor (int j(1); j <= m; ++ j) scanf(\"%d\", &h[i][j]);\n\tfor (int i(1); i <= 2 * k; ++ i) {\n\t\tSPFA(x[i], y[i], i > k);\n\t\tfor (int j(1); j <= tot; ++ j) dis[i][j] = tp[rx[j]][ry[j]];\n\t}\n\tr = 2 * k;\n\twhile (l < r) {\n\t\tint mid(l + r >> 1);\n\t\tif (check(mid)) r = mid;\n\t\telse l = mid + 1;\n\t}\n\tprintf(\"%d\", l);\n\treturn 0;\n}\n```",
        "postTime": 1619006666,
        "uid": 361308,
        "name": "Stinger",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 \u3010P7198 [CTSC2002]\u73a9\u5177\u5175\u3011"
    },
    {
        "content": "\u6216\u6210\u6211\u9000\u5f79\u524d\u6700\u540e\u4e00\u7247\u9898\u89e3\u3002\n\n\u90a3\u5c31\u8bf4\u7684\u8be6\u7ec6\u4e00\u4e9b\u5427\u3002\n\n\u8fd9\u4e2a\u9898\u6211\u4eec\u628a\u4e09\u4e2a\u5355\u4f4d\u5206\u5f00\u8ba8\u8bba\n\n\u9a91\u5175\u548c\u6b65\u5175\uff1a\u7531\u4e8e\u4e00\u6b21\u8d85\u80fd\u529b\u53ef\u4ee5\u968f\u4fbf\u6362\u4efb\u610f\u6b21\uff0c\u5bb9\u6613\u60f3\u5230\u5bf9\u4e8e\u4e00\u4e2a\u6b65\u5175\u6765\u8bf4\u8d70\u5230\u7b2c $i$ \u4e2a\u70b9\u5176\u4f7f\u7528\u8d85\u80fd\u529b\u7684\u6b21\u6570\u5e94\u8be5\u662f\u4e00\u4e2a\u6700\u77ed\u8def\u95ee\u9898\uff0c\u4ece $(x_1,y_1)$ \u8d70\u5230 $(x_2,y_2)$ \u82e5 $h_{x_1,y_1}<h_{x_2,y_2}$ \u5219\u8fb9\u6743\u4e3a $1$\uff08\u968f\u4fbf\u627e\u4e2a\u9a91\u5175\u8d85\u80fd\u529b\u4e00\u4e0b\uff09\uff0c\u5426\u5219\u8fb9\u6743\u4e3a $0$\u3002\u9a91\u5175\u540c\u7406\u3002\n\n\u5929\u5175\uff1a\u59a5\u59a5\u7684\u5de5\u5177\u4eba\uff0c\u7531\u4e8e\u5bf9\u975e\u8d85\u80fd\u529b\u79fb\u52a8\u4e0d\u505a\u9650\u5236\uff0c\u5929\u5175\u53ef\u4ee5\u6ee1\u56fe\u4e71\u8dd1\uff0c\u8dd1\u5230\u76ee\u6807\u70b9\u518d\u8d85\u80fd\u529b\u4e00\u4e0b\u628a\u4e00\u4e2a\u6b65\u5175\u6216\u9a91\u5175\u6362\u8fc7\u6765\uff0c\u7136\u540e\u53bb\u4e0b\u4e00\u4e2a\u70b9\u3002\n\n\u7136\u540e\u5c31\u662f\uff0c\u7531\u4e8e\u8981\u6c42\u5957\u8def\u7684\u4e8c\u5206\u7b54\u6848\u8d85\u80fd\u529b\u7684\u6b21\u6570\uff0c\u5047\u5982\u8bf4\u7b2c $i$ \u4e2a\u5175\u5230 \u7b2c $j$ \u4e2a\u76ee\u6807\u70b9\u6240\u7528\u8d85\u80fd\u529b\u6b21\u6570**\u5927\u4e8e**\u4e8c\u5206\u7684\u8fd9\u4e2a\u503c\u5c31\u4e0d\u7528\u7ba1\uff08\u4f60\u4e5f\u7ba1\u4e0d\u4e86\u4e0d\u662f\uff09\uff0c\u90a3\u4e48\u5269\u4e0b\u7684\u8fd9\u4e9b\u4fe1\u606f\u5c31\u662f\u53ef\u4ee5\u5230\u7684\u4e86\uff0c\u6211\u4eec\u5e0c\u671b\u5728\u4e0d\u4f7f\u7528\u5929\u5175\u7684\u60c5\u51b5\u4e0b\u5c3d\u53ef\u80fd\u591a\u7684\u8ba9\u5176\u5b83\u5175\u79cd\u4e0a\u70b9\uff0c\u663e\u7136\u7684\u6211\u4eec\u8dd1\u4e00\u6b21\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u5373\u53ef\uff08**\u6ce8\u610f\uff1a\u4e00\u4e2a\u76ee\u6807\u70b9\u6700\u591a\u53ef\u4ee5\u6709 $r_i$ \u4e2a\u5175\u5728\u90a3\u91cc\uff0c\u9047\u5230\u8fd9\u79cd\u65e0\u6cd5\u7528\u5e38\u89c4\u65b9\u6cd5\u5904\u7406\u7684\u4e1c\u897f\u8981\u62c6\u70b9\uff0c\u6211\u4eec\u628a\u4e00\u4e2a\u76ee\u6807\u70b9\u62c6\u6210 $r_i$ \u4e2a\u76ee\u6807\u70b9\u518d\u8dd1\u6700\u5927\u5339\u914d\uff0c\u6700\u77ed\u8def\u7684\u65f6\u5019\u9700\u8981\u6ce8\u610f\u662f\u8dd1\u539f\u5148\u7684\u56fe\uff0c\u518d\u7528\u5230\u7b2c $i$ \u4e2a\u70b9\u7684\u6700\u77ed\u8def\u53bb\u66f4\u65b0\u8fd9\u62c6\u51fa\u7684 $r_i$ \u4e2a\u70b9**\uff09\u3002\n\n\u7136\u540e\u5269\u4e0b\u8fd9\u4e9b\u6ca1\u5339\u914d\u4e0a\u7684\u5175\uff0c\u6211\u4eec\u53ea\u80fd\u7528\u5929\u5175\u53bb\u4f20\u9001\uff0c\u8fd9\u4e2a\u65f6\u5019\u70b9\u7684\u9650\u5236\u5c31\u65e0\u610f\u4e49\u4e86\uff0c\u5929\u5175\u53ef\u4ee5\u968f\u4fbf\u98de\u3002\u8fd9\u6837\u6211\u4eec\u4f7f\u7528\u8d85\u80fd\u529b\u7684\u6b21\u6570\u4e3a $2k-ans$ \uff08$ans$ \u8868\u793a\u6700\u5927\u5339\u914d\u6570\uff09\uff0c\u518d\u628a\u8fd9\u4e2a\u503c\u8ddf $mid$ \u6bd4\u8f83\u5373\u53ef\u3002\n\n\u4ee3\u7801\uff08\u6bd4\u8f83\u4e11\uff0c\u4ec5\u4f9b\u5bf9\u62cd\uff09\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,k,t,s,vis[2005][2005],dis[2005][2005],h[505][505],d[2005][2005],tot;\nint ssh(int x,int y){\n\treturn (x-1)*m+y;\n}\nvector<int>G[200];\nstruct troop{\n\tint num,x,y;\n}tp[206],re[206],R[206];\nstruct node{\n\tint x,y;\n};  \nstruct qqq{\n\tint y,next;\n\tint used;\n}a[5001],fc[500];\nconst int dx[]={-1,1,0,0};\nconst int dy[]={0,0,1,-1};\nvoid BFS(int sx,int sy,bool M){\n\tqueue<node>q;\n\tmemset(vis,0,sizeof(vis));\n\tmemset(dis,0x3f,sizeof(dis));\n\tdis[sx][sy]=0;\n\tq.push((node){sx,sy});\n\twhile(!q.empty()){\n\t\tnode top=q.front();\n\t\tq.pop();\n\t\tvis[top.x][top.y]=0;\n\t\tfor(int i=0;i<4;i++){\n\t\t\tint ex=top.x+dx[i];\n\t\t\tint ey=top.y+dy[i];\n\t\t\tif(ex<1||ex>n||ey<1||ey>m)\n\t\t\tcontinue;\n\t\t\tint ds=0;\n\t\t\tint tmp=((dis[top.x][top.y]&1)^M);\n\t\t\tif(h[ex][ey]>h[top.x][top.y]&&tmp){\n\t\t\t\tds=1;\n\t\t\t}\n\t\t\tif((h[ex][ey]<h[top.x][top.y]&&!tmp)){\n\t\t\t\tds=1;\n\t\t\t}\n\t\t\tif(dis[top.x][top.y]+ds<dis[ex][ey]){\n\t\t\t\tdis[ex][ey]=dis[top.x][top.y]+ds;\n\t\t\t\tif(!vis[ex][ey]){ \n\t\t\t\t\tq.push((node){ex,ey});\n\t\t\t\t\tvis[ex][ey]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nint match[200],vs[200];\nint dfs(int u){\n\tfor(int i=0;i<G[u].size();i++){\n\t\tint y=G[u][i];\n\t\tif(!vs[y]){\n\t\t\tvs[y]=1;\n\t\t\tif(!match[y]||dfs(match[y])){\n\t\t\t\tmatch[y]=u;\n\t\t\t\treturn 1;\t\t\t\t\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\nbool check(int mid){\n\tfor(int i=0;i<=2*k;i++){\n\t\tG[i].clear();\n\t}\n\tmemset(match,0,sizeof(match));\n\tfor(int i=1;i<=2*k;i++){\n\t\tfor(int j=1;j<=tot;j++){\n\t\t\tif(d[i][j]<=mid){\n\t\t\t\t//add(i,j);\n\t\t\t\tG[i].push_back(j);\n\t\t\t} \n\t\t}\n\t}\n\tint ans=0;\n\tfor(int i=1;i<=2*k;i++){\n\t\tmemset(vs,0,sizeof(vs));\n\t\tans+=dfs(i);\n\t}\n\treturn ans+mid>=2*k;\n\t\n}\nint main()\n{\n\tios::sync_with_stdio(0);\n\tcin>>n>>m>>k>>t;\n\ttot=0;\n\tfor(int i=1;i<=2*k+1;i++){\n\t\tcin>>tp[i].x>>tp[i].y;\n\t}\n\tfor(int i=1;i<=t;i++){\n\t\tcin>>re[i].x>>re[i].y>>re[i].num;\n\t\twhile(re[i].num--){\n\t\t\tR[++tot].x=re[i].x;\n\t\t\tR[tot].y=re[i].y;\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tcin>>h[i][j];\n\t\t}\n\t}\n\tfor(int i=1;i<=2*k;i++){\n\t\tBFS(tp[i].x,tp[i].y,i>k);\n\t\tfor(int j=1;j<=tot;j++){\n\t\t\td[i][j]=dis[R[j].x][R[j].y];\n\t\t}\t\n\t}\n\tint L=0,rR=2*k;\n\twhile(L<rR){\n\t\tint mid=(L+rR)/2;\n\t\tif(check(mid))\n\t\trR=mid;\n\t\telse\n\t\tL=mid+1;\n\t} \n\tcout<<L<<endl;\n   return 0;\n}\n```",
        "postTime": 1627034827,
        "uid": 282751,
        "name": "cryozwq",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P7198 [CTSC2002]\u73a9\u5177\u5175"
    }
]