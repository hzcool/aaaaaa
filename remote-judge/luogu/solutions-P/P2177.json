[
    {
        "content": "## \u6211\u597d\u50cf\u65e0\u610f\u95f4\u641e\u51fa\u4e86\u4e8c\u7ef4\u54c8\u5e0c\uff01\n------\n* \u9898\u76ee\u8ba9\u6211\u4eec\u6c42\u4e00\u4e2a\u6700\u5927\u7684**\u65cb\u8f6c\u5bf9\u79f0**\u7684\u6b63\u65b9\u5f62\n\n* $n,m<=300$\u610f\u5473\u8fd9\u6211\u4eec\u6700\u591a\u80fd\u627f\u53d7$n^3$\u7684\u590d\u6742\u5ea6\n\n\u600e\u4e48\u529e\u5462\uff1f\n\n### \u6211\u4f1a\u66b4\u529b\uff01\n\n\u4e00\u4e2a\u7b80\u5355\u7684\u601d\u8def\uff1a\u679a\u4e3e\u6bcf\u4e2a\u6b63\u65b9\u5f62\uff0c\u7136\u540e\u5224\u65ad\u8fd9\u4e2a\u6b63\u65b9\u5f62\u662f\u5426\u65cb\u8f6c\u5bf9\u79f0\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\uff0c\u5355\u5355\u662f\u679a\u4e3e\u6bcf\u4e2a\u6b63\u65b9\u5f62\u5c31\u5df2\u7ecf\u6709$n^3$\u7684\u590d\u6742\u5ea6\u4e86\uff0c\n\n\u522b\u6025\uff0c**\u8fd8\u6709\u5e0c\u671b\uff01** \u5047\u5982\u6211\u4eec\u80fd\u5728$O(1)$\u7684\u65f6\u95f4\u5185**\u5224\u65ad**\u65cb\u8f6c\u5bf9\u79f0\u5462\uff1f\n\n\u7acb\u9a6c\u60f3\u5230\uff0c\u5047\u5982\u6211\u4eec\u6709\u4e00\u79cd\u54c8\u5e0c\uff0c\u5b83\u80fd\u5728$O(1)$\u7684\u65f6\u95f4\u5185\u83b7\u53d6\u4efb\u4f55\u4e00\u4e2a\u77e9\u9635\u7684\u54c8\u5e0c\u503c\uff0c\u90a3\u5c31\u597d\u529e\u4e86\u3002\u54b1\u4eec\u53ef\u4ee5\u6b63\u7740\u53d6\u90a3\u4e2a\u6b63\u65b9\u5f62\u7684\u54c8\u5e0c\u503c\uff0c\u518d\u628a\u77e9\u9635\u5012\u7740\u518d\u53d6\u4e00\u904d\uff0c\u5224\u65ad\u662f\u5426\u4e00\u6837\u5373\u53ef\u3002\n\n\u53ef\u662f\u6211\u4eec\u6ca1\u6709\u4e8c\u7ef4\u54c8\u5e0c\u5440>.<\uff0c\u90a3\u5c31\u5148\u4ece\u4e00\u7ef4\u54c8\u5e0c\u5165\u624b\uff0c\u627e\u70b9\u7075\u611f\uff1a\n\n### \u4e00\u7ef4\u54c8\u5e0c\n\n\u4e00\u7ef4\u54c8\u5e0c\u662f\u8fd9\u6837\u7684\uff1a\u5bf9\u4e8e\u5e8f\u5217\n$$a_1,a_2,a_3......a_k$$\n\u6211\u4eec\u60f3\u8981\u7ed9\u6bcf\u4e00\u4e2a\u5e8f\u5217\u4e00\u4e2a**\u72ec\u4e00\u65e0\u4e8c**\u7684\u54c8\u5e0c\u503cH\uff0c\u8fd9\u6837\u6211\u4eec\u53ea\u9700\u8981\u82b1\u8d39$O(1)$\u7684\u65f6\u95f4\u53bb\u6bd4\u8f83\u8fd9\u4e2a\u503c\uff0c\u5c31\u80fd\u5feb\u901f\u6bd4\u8f83\u51fa\u4e24\u4e2a\u6570\u5217\u662f\u5426\u76f8\u540c\u4e86\n\n* \u4e00\u79cd\u7b80\u5355\u7684\u601d\u60f3\uff0c\u8bb2\u6240\u6709\u6570\u7684\u548c\u76f4\u63a5\u4f5c\u4e3aH\u3002\u4f46\u8fd9\u663e\u7136\u662f\u4e0d\u884c\u7684\uff0c\u53cd\u4f8b\u592a\u597d\u4e3e\u4e86\n\n* \u601d\u60f3\u8fdb\u9636\u4e00\u4e0b\uff1a\u5982\u679c\u6211\u4eec\u4f5c\u4e3aH\u7684\u662f\u6240\u6709\u6570\u7684\u5e73\u65b9\u548c\u5462\uff1f\u4ecd\u7136\u6709\u53cd\u4f8b\uff0c\u4f46\u660e\u663e\u8981\u597d\u5f97\u591a\n\n* \u518d\u6df1\u5165\u60f3\u4e00\u4e0b\uff0c\u4e8c\u6b21\u4e0d\u884c\uff0c\u54b1\u4eec\u8fd8\u53ef\u4ee5\u7acb\u65b9\u548c\uff0c\u56db\u6b21\u65b9\uff0c\u4e94\u6b21\u65b9...\u751a\u81f3\u53ef\u4ee5\u7528\u6307\u6570\u51fd\u6570\uff0c\u603b\u6709\u4e00\u4e2a\u4e0d\u5bb9\u6613\u6709\u53cd\u4f8b\u5427\uff01\n\n\u4f46\u8fd9\u79cd\u505a\u6cd5\u663e\u7136\u6709\u4e00\u4e2a\u81f4\u547d\u7684\u6f0f\u6d1e\uff0c\u5c31\u662f\u6211\u4eec\u5b8c\u5168\u4e0d\u80fd\u51b3\u5b9a\u5e8f\u5217\u7684\u987a\u5e8f\u3002\u76f8\u53cd\uff0c\u5982\u679c\u662f\u5bf9\u4e8e\u96c6\u5408\u54c8\u5e0c\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u975e\u5e38\u4f18\u79c0\uff0c\u53ef\u54b1\u4eec\u662f\u6570\u5217\u554a\uff01/\n\n\u4e8e\u662f\u4e00\u4f4d\u5946\u4f6c\u7ed9\u51fa\u4e86\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\uff1a\u6211\u4eec\u53ef\u4ee5\u627e\u4e00\u4e2a\u6bd4\u6240\u6709a\u90fd\u5927\u7684p\uff0c\u7136\u540e\u76f4\u63a5\u628a\u5e8f\u5217\u5f53\u6210\u4e00\u4e2a**p\u8fdb\u5236\u7684\u5927\u6570**\uff0c\u4ee5\u6b64\u4f5c\u4e3aH\u3002\u5f53\u7136\uff0c\u8fd9\u4e2a\u6570\u5927\u5230\u6211\u4eec\u5b58\u4e0d\u4e0b\u6765\uff0c\u4f46\u6ca1\u5173\u7cfb\uff0c\u6211\u4eec\u8fd8\u80fd\u53d6\u6a21\u554a\uff01\u628a\u5b83\u5bf9\u4e00\u4e2a\u5927\u8d28\u6570\u53d6\u6a21\uff0c\u5c31\u80fd\u5f97\u5230\u4e00\u4e2a\u8fd1\u4e4e\u4e0d\u53ef\u80fd\u91cd\u590d\u7684\u54c8\u5e0c\u503c\u4e86\u3002\u540c\u65f6\u6211\u4eec\u4e5f\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e24\u4e2a\u76f8\u4f3c\u7684\u5e8f\u5217\uff0c\u53ea\u8981\u5b83\u4eec\u7a0d\u7a0d\u6709\u4e00\u70b9\u4e0d\u540c\uff0c\u6240\u5f97\u7684\u54c8\u5e0c\u503c\u5c31\u5343\u5dee\u4e07\u522b\u3002**\u5b8c\u7f8e\u89e3\u51b3\uff01**\n\n#### \u4e24\u79cd\u7b97\u6cd5\u4e00\u4e2a\u9002\u7528\u4e8e\u96c6\u5408\uff0c\u4e00\u4e2a\u9002\u7528\u4e8e\u5e8f\u5217\uff0c\u5b83\u4eec\u7a76\u7adf\u5dee\u5728\u54ea\u5462\uff1f\n\n\u4ed4\u7ec6\u601d\u8003\u4e00\u4e0b\uff0c\u4f1a\u53d1\u73b0\uff0c\u5e8f\u5217\u4e2d**\u987a\u5e8f**\u975e\u5e38\u91cd\u8981\u3002\u90a3\u4e48\u5982\u679c\u6211\u628a\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u53d8\u6210\u4e00\u4e2a\u4e8c\u5143\u7ec4\uff0c\u7b2c\u4e00\u5143\u662f\u6570\u503c\uff0c\u7b2c\u4e8c\u5143\u662f\u5b83\u7684\u4f4d\u7f6e\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\u5462\uff1f\u5947\u5999\u7684\u4e8b\u60c5\u51fa\u73b0\u4e86\uff1a\u5e8f\u5217\u53d8\u6210\u4e86\u4e8c\u5143\u7ec4\u7684\u96c6\u5408\uff01\n\n**\u539f\u6765\u5e8f\u5217\u7684\u672c\u8d28\u662f\u96c6\u5408\uff01**\n\n\u56de\u8fc7\u6765\u770b\u770b\u90a3\u4e2a\u6b63\u786e\u7684\u54c8\u5e0c\uff0c\u6839\u636e\u4f4d\u503c\u539f\u7406\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u60f3\u8c61\u6210\uff0c\u5b83\u9996\u5148\u628a\u5e8f\u5217\u53d8\u6210\u4e86\n$p^1a_1,p^2a_2,p^3a_3...p^ka_k$\uff0c\u518d\u6c42\u548c\uff08\u9996\u9879\u5e94\u8be5\u662f\u4ece0\u5f00\u59cb\u7684\uff0c\u4f46\u4ece1\u5f00\u59cb\u5176\u5b9e\u6ca1\u4ec0\u4e48\u5f71\u54cd\uff09\u3002\n\n\u4e0e\u6211\u4eec\u7684\u60f3\u6cd5\u7684\u533a\u522b\u5728\u4e8e\uff0c\u6211\u4eec\u6700\u521d\u7684\u60f3\u6cd5\u5728\u54c8\u5e0c\u65f6\u5b8c\u5168\u6ca1\u6709\u8003\u8651\u987a\u5e8f\uff0c\u800c\u8fd9\u4e2a\u54c8\u5e0c\u5728\u8ba1\u7b97\u65f6\u5148\u628a\u4f4d\u7f6e\u4e0e\u5bf9\u5e94\u7684\u503c\u7528\u8ba1\u7b97\u201c\u7ed1\u5b9a\u201d\u5230\u4e86\u4e00\u8d77\uff0c\u4e8e\u662f\u54c8\u5e0c\u7684\u7ed3\u679c\u5c31\u8003\u8651\u5230\u4e86\u987a\u5e8f\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u4e8e\u5e8f\u5217\u7684\u54c8\u5e0c\u5173\u952e\u5728\u4e8e\u6211\u4eec\u8981\u627e\u4e00\u4e2a\u4e8c\u5143\u51fd\u6570$h(x,i)$\uff0c\u7136\u540e\u628a\u5e8f\u5217\u7684\u6bcf\u4e2a$a_i$\u53d8\u6210$h(a_i,i)$\uff0c\u6700\u7ec8\u7684\u54c8\u5e0c\u503c\u5c31\u662f\u6240\u6709$h$\u7684\u548c\u3002\u8fd9\u6837\u54c8\u5e0c\u51fa\u6765\u7684\u503c\u4fbf\u53ef\u4ee5\u517c\u987e\u5143\u7d20\u7684\u503c\u4e0e\u987a\u5e8f\n\n\u7167\u8fd9\u4e2a\u601d\u8def\uff0c\u4e8c\u7ef4\u54c8\u5e0c\u5c31\u5f88\u5bb9\u6613\u4e86\uff1a\n\n------\n## \u4e8c\u7ef4\u54c8\u5e0c\n\u5bf9\u4e8e\u4e00\u4e2ar\u884cc\u5217\u7684\u77e9\u9635\n$$a_{1,1},a_{1,2}...a_{1,c} $$\n$$a_{2,1},a_{2,2}...a_{2,c} $$\n$$...$$\n$$a_{r,1},a_{r,2}...a_{r,c} $$\n\n\u6211\u4eec\u53ef\u4ee5\u627e\u4e24\u4e2a\u8d28\u6570p,q\uff0c\u7136\u540e\u628ai\u884cj\u5217\u5143\u7d20\u53d8\u6210$a_{i,j}*p^i*q^j$\uff0c\u7136\u540e\u77e9\u9635\u7684\u54c8\u5e0c\u503c\u5c31\u662f\u6240\u6709\u6570\u7684\u548c\uff0c\u5373\n\n$$H=(\\sum_{i,j<=r,c}a_{i,j}*p^i*q^j) \\%mod$$\n\n\u8fd9\u6837\u5f88\u660e\u663e\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u54c8\u5e0c\u5199\u6210\u4e8c\u7ef4\u524d\u7f00\u548c\u7684\u5f62\u5f0f\u4e86\uff0c\u505a\u5b8c\u4e86\uff1f\n\n\u522b\u6025\uff0c\u8fd8\u6ca1\u5b8c\u3002\u601d\u8003\u4e00\u4e0b\uff0c\u5982\u679c\u6211\u4eec\u5148\u7528\u4e8c\u7ef4\u524d\u7f00\u548c\u6765\u9884\u5904\u7406\uff0c\u90a3\u4e48\u8ba1\u7b97\u4e00\u4e2a\u4e2d\u95f4\u7684\u77e9\u9635\u7684\u54c8\u5e0c\u503c\u65f6\uff0c\u9996\u9879\u7684p\u548cq\u7684\u6307\u6570\u90fd\u4e0d\u662f\u4ece1\u5f00\u59cb\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u6c42\u7684\u77e9\u9635\u7684\u5de6\u4e0a\u89d2\u4e3a$(x,y)$\uff0c\u90a3\u4e48\u5b9e\u9645\u4e0a\u6c42\u5f97\u7684\u54c8\u5e0c\u503c\u662f\u539f\u6765\u7684$p^{x-1}*q^{y-1}$\u500d\u3002\n\n\u600e\u4e48\u529e\u5462\uff1f\u9664\u6389\uff1f\u663e\u7136\u4e0d\u53ef\u884c\uff0c\u56e0\u4e3a\u5728\u6a21\u610f\u4e49\u4e0b\u9664\u6cd5\u53ef\u4e0d\u597d\u505a\u3002~~\u6211\u8fd8\u4f1a\u6ed1\u52a8\u7a97\u53e3~~\u6ed1\u52a8\u7a97\u53e3\u592a\u9ebb\u70e6\u4e86\uff0c\u6709\u6ca1\u6709\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6cd5\u5462\uff1f\n\n\u6709\u7684\uff01\u9664\u6cd5\u4e0d\u884c\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u4e58\u554a\uff01\u6211\u4eec\u91cd\u65b0\u5b9a\u4e49\u54c8\u5e0c\u51fd\u6570\uff1a\n\n$$H=(\\sum_{i,j<=r,c}a_{i,j}*p^{i+n}*q^{j+m}) \\%mod$$\n\n\u4f46\u5904\u7406\u4e8c\u7ef4\u524d\u7f00\u548c\u65f6\u6bcf\u4e2a\u6570\u4ecd\u7136\u53d8\u6210$a_{i,j}*p^i*q^j$\n\n\u8fd9\u6837\u4e8c\u7ef4\u524d\u7f00\u548c\u7b97\u51fa\u6765\u7684\u503c\u5c31\u6bd4\u5b9e\u9645\u7684\u54c8\u5e0c\u503c\u5c11\u4e86$p^{n-x}*q^{m-j}$\u500d\uff0c\u54b1\u4eec\u53ef\u4ee5\u76f4\u63a5\u4e58\u4e0a\u53bb\n\n\u4e8c\u7ef4\u54c8\u5e0c\uff0c\u5b8c\u6210\uff01\n\n\n\n------------\n\u56de\u5f52\u672c\u9898\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6b63\u8fd9\u505a\u4e00\u904d\u54c8\u5e0c\uff0c\u5012\u8fc7\u6765\u518d\u505a\u4e00\u904d\uff0c\u5c31\u53ef\u4ee5\u5728$O(1)$\u7684\u65f6\u95f4\u91cc\u5224\u65ad\u4e00\u4e2a\u6b63\u65b9\u5f62\u662f\u5426\u4e3a\u65cb\u8f6c\u5bf9\u79f0\u4e86\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n^3)$\n\n\u800c\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u663e\u7136\u662f\u8fd8\u80fd\u964d\u4f4e\u7684\u3002\u6211\u4eec\u53ea\u9700\u8981\u5148\u679a\u4e3e\u6b63\u65b9\u5f62\u4e2d\u5fc3\u70b9\uff0c\u518d\u5411\u5916\u4e8c\u5206\uff0c\u5c31\u80fd\u628a\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u5230$O(n^2log_2n)$\n\n~~\u4f46\u662f\u6734\u7d20\u7b97\u6cd5\u80fd\u8fc7\uff0c\u54b1\u4f55\u5fc5\u5462~~\n\n\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <string>\n#include <cstring>\n#include <algorithm>\n#include <cmath>\n#define LL long long\n#define max(a,b) ((a)>(b)?(a):(b))\n#define min(a,b) ((a)<(b)?(a):(b))\n#define FOR  for(LL i=1;i<=n;i++)for(LL j=1;j<=m;j++)\n#define FOR2 for(LL i=n;i>=1;i--)for(LL j=m;j>=1;j--)\nusing namespace std;\n\ninline LL read()\n{\n    LL x=0,f=1;char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\n\nconst LL maxn=300+10;\nconst LL A=10007,B=10009;\nconst LL MOD=1e9+9;\nLL a[maxn][maxn];\nLL X1[maxn],X2[maxn];\nLL h1[maxn][maxn],h2[maxn][maxn];\nLL n=read(),m=read();\n\nLL hash1(LL a,LL b,LL c,LL d)\n{\n\tLL ans=(h1[c][d]-h1[a-1][d]-h1[c][b-1]+h1[a-1][b-1]+MOD)%MOD;\n\treturn ans*X1[n-a]%MOD*X2[m-b]%MOD;\n}\n\nLL hash2(LL a,LL b,LL c,LL d)\n{\n\tLL ans=(h2[a][b]-h2[c+1][b]-h2[a][d+1]+h2[c+1][d+1]+MOD)%MOD;\n\treturn ans*X1[c-1]%MOD*X2[d-1]%MOD;\n}\n\nint main()\n{\n\tFOR\n\t{\n\t\tchar ch;cin>>ch;\n\t\tif (ch=='1') a[i][j]=1;\n\t}\n\tX1[0]=X2[0]=1;\n\tfor (LL i=1;i<=300;i++) X1[i]=X1[i-1]*A%MOD,X2[i]=X2[i-1]*B%MOD;\n\tFOR h1[i][j]=X1[i]*X2[j]*a[i][j]%MOD;\n\tFOR h2[i][j]=X1[n-i+1]*X2[m-j+1]*a[i][j]%MOD;\n\tFOR h1[i][j]=h1[i-1][j]+h1[i][j-1]-h1[i-1][j-1]+h1[i][j];\n\tFOR2 h2[i][j]=h2[i+1][j]+h2[i][j+1]-h2[i+1][j+1]+h2[i][j];\n\tLL ans=0;\n\tFOR for (LL k=1;k+i<=n && k+j<=m;k++)\n\t\tif (hash1(i,j,i+k,j+k)==hash2(i,j,i+k,j+k)) ans=max(ans,k+1);\n\tif (ans==0) cout<<-1<<endl; else cout<<ans<<endl;\n\treturn 0;\n}\n```\nps.\u8fd9\u79cd\u54c8\u5e0c\u6cd5\u8fd8\u771f\u662f\u6211\u81ea\u5df1\u60f3\u7684\uff0c\u5982\u679c\u672c\u6765\u5c31\u6709\u76f8\u5173\u6587\u7ae0\uff0c\u5404\u4f4d\u53ef\u4ee5\u5728\u8bc4\u8bba\u533a\u91cc\u8bf4\u4e00\u58f0~ STO STO\n\n**\u6c42\u4e2a\u8d5e>.<** \n\n~~",
        "postTime": 1597933395,
        "uid": 86589,
        "name": "\u5e73\u8861\u6811\u68ee\u6797",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2177 \u3010\u5185\u5b58\u6740\u624b\u3011"
    },
    {
        "content": "\u501f\u9274\u4e86@wanghaoyu1008\u7684\u601d\u8def\u3002\n\u770b\u5230\u4e2d\u5fc3\u5bf9\u79f0\uff0c\u60f3\u5230manacher\uff0c\u7528\u5904\u7406\u56de\u6587\u4e32\u7684\u90a3\u4e2a\u601d\u8def\uff0c\u5bf9\u89d2\u7ebf\u6269\u5c55\u3002\n\n\u5bf9\u4e8e\u4e24\u8fb9\u6bcf\u65b0\u6269\u5c55\u4e00\u4e2a\u70b9\uff0c\u5224\u65ad\u4e00\u4e0b\u6ee1\u4e0d\u6ee1\u8db3\u884c\u548c\u5217\u7684\u4e2d\u5fc3\u5bf9\u79f0\u3002\n\n\u5224\u65ad\u65b9\u6cd5\u53ef\u4ee5\u7528@wanghaoyu1008\u7684\u66b4\u529b\u3002\n\n\u4e5f\u53ef\u4ee5\u7528hash\u4f18\u5316\uff1a\n\u5bf9\u4e8e\u6bcf\u4e00\u884c\uff0c\u6b63\u7740\u6765\u4e00\u904dhash\uff0c\u53cd\u7740\u6765\u4e00\u904dhash\uff0c\n\u5217\u540c\u7406\u3002\n\n\u590d\u6742\u5ea6\u8ba1\u7b97\uff1a\n\n\u679a\u4e3e\u5bf9\u89d2\u7ebf\uff1aO(n+m),\u5bf9\u89d2\u7ebf\u4e0amanacher:O(max(n,m)),\nhash\u5224\u65ad\uff1aO(1)\n\u6700\u7ec8\u590d\u6742\u5ea6\uff1a**O((n+m)*(max(n,m)))**\n\n\u76f8\u5f53\u4e8e\u662fO(n^2),\u7406\u8bba\u4e0a\u53ef\u4ee5\u8fc7\u6389n<=1000\u7684\u6570\u636e\uff0c\u4f46\u5b9e\u6d4b\u5e38\u6570\u592a\u5927\uff0c\u5373\u4f7f\u5f00int\u4e5f\u8981440ms.\n\nunsigned long long \u548c long long \u90fd\u662f480ms\u3002\n\n\u8fd9\u53ea\u6bd4O(n^3)\u7684\u66b4\u529b\u8981\u5feb300ms\u5de6\u53f3\u3002\n\n\u8fd8\u6709\u79cd\u4e8c\u7ef4hash\u7684\u65b9\u6cd5\uff0c\u5c31\u662f\u679a\u4e3e\u6b63\u65b9\u5f62\u53f3\u4e0b\u89d2\u7684\u70b9\uff0c\u6b63\u65b9\u5f62\u7684\u8fb9\u957f\uff0c\u7136\u540ehash\u5224\u65ad\u6b63\u65b9\u5f62\u6ee1\u4e0d\u6ee1\u8db3\u6761\u4ef6\u3002\n\n\n\u8fd9\u79cd\u65b9\u6cd5\u597d\u50cf\u8dd1\u7684\u8d3c\u5feb\uff0c@BLUE_EYE \u53ea\u7528\u4e8652ms\u3002\n\n```cpp\n#define rel(a) a=readl()\n#define r(i,a,b) for(int i=a;i<=b;i++)\n#define rr(i,a,b) for(int i=a;i>=b;i--)\n#define inf 0x3f3f3f3f\n#define mem(a) memset(a,0x3f,sizeof(a))\n#define re(a) a=read()\n#define me(a) memset(a,0,sizeof(a))\n#define in inline\n#define ll long long\n#define db double\n#define ull unsigned long long\nusing namespace std;\nconst int N=1000007;\nconst int p=1e9+7;\nconst int M=607;\nconst int base=31;\ninline int read(){\n    char ch=getchar();\n    int w=1,x=0;\n    while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=(x<<3)+(x<<1)+ch-'0',ch=getchar();}\n    return x*w;\n}\nint n,m,P[N],ans=0;\nll sumx[M][M],sumy[M][M],rsumx[M][M],rsumy[M][M],pw[M];\nchar ch[M],a[M][M];\nin bool check(int x,int y,int t){\n\treturn (((sumy[x-t][y+t]-1ll*sumy[x-t][y-t-1]*pw[2*t+1]%p+p)%p)==((rsumy[x+t][y-t]-1ll*rsumy[x+t][y+t+1]*pw[2*t+1]%p+p)%p))&&(((sumx[x+t][y-t]-1ll*sumx[x-t-1][y-t]*pw[2*t+1]%p+p)%p)==((rsumx[x-t][y+t]-1ll*rsumx[x+t+1][y+t]*pw[2*t+1]%p+p)%p));\n} \nin int manacher(int x,int y){\n\tint cen=1,q=min(n-x+1,m-y+1),res=0;;\n\tif((ans<<1)>q)return 0;\n\tme(P);\n\tP[cen]=1,cen=1;\n\tr(i,2,q){\n\t\tP[i]=cen+P[cen]-1<i?1:min(P[(cen<<1)-i],cen+P[cen]-i);\n\t\tif(i+P[i]>=cen+P[cen]){\n\t\t\twhile(i-P[i]>0&&i+P[i]<=q&&check(x+i-1,y+i-1,P[i]))P[i]++;\n\t\t\tcen=i;\n\t\t\tres=max(res,P[i]);\n\t\t}\n\t}\n\treturn res-1;\n}\nint main(){\n\tre(n),re(m);\n\tn=n<<1|1,m=m<<1|1;\n\tfor(int i=2;i<=n;i+=2){\n\t\tscanf(\"%s\",ch);\n\t\tfor(int j=2;j<=m;j+=2)a[i][j]=ch[(j>>1)-1];\n\t}\n\tpw[0]=1;\n\tr(i,1,602)pw[i]=pw[i-1]*base%p;\n\tr(i,1,n){\n\t\tr(j,1,m){\n\t\t\tsumy[i][j]=(sumy[i][j-1]*base%p+a[i][j])%p;\n\t\t\tsumx[i][j]=(sumx[i-1][j]*base%p+a[i][j])%p;\n\t\t}\n\t}\n\trr(i,n,1){\n\t\trr(j,m,1){\n\t\t\trsumx[i][j]=(rsumx[i+1][j]*base%p+a[i][j])%p;\n\t\t\trsumy[i][j]=(rsumy[i][j+1]*base%p+a[i][j])%p;\n\t\t}\n\t}\n\tfor(int j=3;j<m;j+=2)ans=max(ans,manacher(1,j));\n\tfor(int i=1;i<n;i+=2)ans=max(ans,manacher(i,1));\n\tprintf(\"%d\\n\",ans==1?-1:ans);\n\treturn 0;\n}\n\n```\n\n\u7801\u98ce\u8fd8\u662f\u5f88\u597d\u770b\u7684",
        "postTime": 1568728066,
        "uid": 112856,
        "name": "yangshurong",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2177 \u3010\u5185\u5b58\u6740\u624b\u3011"
    },
    {
        "content": "## \u9898\u610f\u7b80\u8ff0\uff1a\n\u5728\u4e00\u4e2a $n\\times m$ \u7684\u77e9\u9635\u4e2d\u627e\u5230\u4e00\u4e2a\u5b50\u6b63\u65b9\u77e9\u9635\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u6b63\u65b9\u77e9\u9635\u4e0a\u4e0b\u5bf9\u79f0\uff0c\u95ee\u8fd9\u4e2a\u5b50\u6b63\u65b9\u77e9\u9635\u7684\u6700\u5927\u8fb9\u957f\u662f\u591a\u5c11\uff1f\n## \u601d\u8def\u89e3\u6790\uff1a\n### \u66b4\u529b1\uff1a$O(n^5)$ 0\u5206\n\u76f8\u4fe1\u66b4\u529b\u5927\u5bb6\u90fd\u80fd\u60f3\u5230\uff0c\u90a3\u5c31\u662f\u5148\u679a\u4e3e\u6b63\u65b9\u5f62\u7684\u5de6\u4e0a\u9876\u70b9\uff0c\u4e4b\u540e\u679a\u4e3e\u6b63\u65b9\u5f62\u7684\u8fb9\u957f\uff0c\u7136\u540e\u518d\u679a\u4e3e\u5224\u65ad\u8fd9\u4e2a\u6b63\u65b9\u5f62\u5408\u4e0d\u5408\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u662f $O(n\\times m\\times \\ \\min(n,m)^3)$\uff0c\u8fde20\u5206\u90fd\u62ff\u4e0d\u4e86\uff0c\u5c31\u4ec0\u4e48\u4e5f\u522b\u8bf4\u4e86\u3002\n### \u66b4\u529b2\uff1a$O(n^4)$ 20\u5206\n\u6211\u4eec\u5c1d\u8bd5\u5bf9\u8fd9\u4e2a\u8fdb\u884c\u4f18\u5316\uff0c\u663e\u7136\u679a\u4e3e\u6b63\u65b9\u5f62\u7684\u5de6\u4e0a\u9876\u70b9\u548c\u8fb9\u957f\u662f\u5f88\u96be\u518d\u88ab\u4f18\u5316\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5c1d\u8bd5\u4f18\u5316\u5224\u65ad\u8fd9\u4e00\u6b65\uff0c\u663e\u7136\uff0c\u5982\u679c\u60f3\u8981\u5224\u65ad\u4e00\u4e2a\u6b63\u65b9\u5f62\u662f\u5426\u4e3a\u4e0a\u4e0b\u5bf9\u79f0\u56fe\u5f62\u53ea\u7528\u770b\u6700\u4e0a\u4e00\u884c\u4e0e\u6700\u4e0b\u4e00\u884c\uff0c\u6700\u4e0a\u4e24\u884c\u4e0e\u6700\u4e0b\u4e24\u884c...\u4e00\u76f4\u5230\u6700\u540e\u662f\u5426\u80fd\u591f\u5339\u914d\u4e0a\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u4f7f\u7528 $hash$\uff0c\u7528\u7b97\u51fa\u6bcf\u4e00\u884c\u7684\u54c8\u5e0c\u503c\uff0c\u4e4b\u540e\u5c1d\u8bd5\u5339\u914d\uff0c\u53ef\u4ee5\u628a\u5339\u914d\u590d\u6742\u5ea6\u964d\u4f4e\u5230 $O(\\min(n,m))$\uff0c\u603b\u590d\u6742\u5ea6\u4e3a$O(n\\times m\\times \\min(n,m)^2)$ \u8fd9\u6837\u80fd\u591f\u5f97\u523020\u5206\u3002\n### \u6b63\u89e3\uff1a$O(n^3)$\n\u4e4b\u524d\u6211\u4eec\u5df2\u7ecf\u5c06\u5224\u65ad\u7684\u590d\u6742\u5ea6\u4f18\u5316\u5230\u4e86 $O(\\min(n,m))$ \u73b0\u5728\u6211\u4eec\u8981\u8003\u8651\u8fdb\u4e00\u6b65\u4f18\u5316\uff0c\u800c\u4e0a\u4e00\u6b21\u7684 $hash$ \u7ed9\u4e86\u6211\u4eec\u7075\u611f\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e8c\u7ef4 $hash$\uff0c\u5373 $h[i][j]$ \u8868\u793a\u5de6\u4e0a\u89d2\u4e3a $(1,1)$\uff0c\u53f3\u4e0b\u89d2\u4e3a $(i,j)$ \u7684\u77e9\u5f62\u7684 $hash$ \u503c\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u5bf9\u6bd4\u4e24\u4e2a\u77e9\u9635\u7684 $hash$ \u503c\u4e86\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define ull unsigned long long\nusing namespace std;\nconst int NR=1005;\nint n,m;\nint ans;\nint base1=131,base2=233;\nint a[NR][NR];\nint b[NR][NR];\null tmp[NR][NR];\null power1[NR];\null power2[NR];\null h1[NR][NR],h2[NR][NR];\nint read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch>'9'||ch<'0'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch<='9'&&ch>='0'){x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}\n\treturn x*f;\n}\null cal(int x,int y,int l,int flag)\n{\n\tif(flag==1)\n\t{\n\t\treturn h1[x][y]-h1[x-l][y]*power2[l]-\n\t\t\t   h1[x][y-l]*power1[l]+\n\t\t\t   h1[x-l][y-l]*power1[l]*power2[l];\n\t}\n    y=m+l-y,x=n+l-x;\n\treturn h2[x][y]-h2[x-l][y]*power2[l]-\n\t\t   h2[x][y-l]*power1[l]+\n\t\t   h2[x-l][y-l]*power1[l]*power2[l];\n}\nbool check(int x)\n{\n\tfor(int i=x;i<=n;i++)\n\t\tfor(int j=x;j<=m;j++)\n\t\t\tif(cal(i,j,x,1)==cal(i,j,x,2))\n\t\t\t\treturn 1;\n\treturn 0;\n} \nsigned main()\n{\n//\tfreopen(\"1.in\",\"r\",stdin);\n//\tfreopen(\"1.out\",\"w\",stdout);\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tchar ch;\n\t\t\tscanf(\" %c\",&ch);\n\t\t\ta[i][j]=ch-'0';\n\t\t}\n\t}\n\t\n\tpower1[0]=1;\n\tfor(int i=1;i<=1000;i++) power1[i]=power1[i-1]*base1;\n\tpower2[0]=1;\n\tfor(int i=1;i<=1000;i++) power2[i]=power2[i-1]*base2;\n\t\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\ttmp[i][j]=tmp[i][j-1]*base1+a[i][j];\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\th1[i][j]=h1[i-1][j]*base2+tmp[i][j];\n\t\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tb[i][j]=a[n-i+1][m-j+1];\n\t\t\t\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\ttmp[i][j]=tmp[i][j-1]*base1+b[i][j];\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\th2[i][j]=h2[i-1][j]*base2+tmp[i][j];\n\t\n\tfor(int i=1;i<=max(n,m);i++) \n\t\tif(check(i)) ans=i;\n\t\n\tif(ans!=1&&ans!=0) cout<<ans;\n\telse puts(\"-1\");\n\treturn 0;\n}\n\n```\n",
        "postTime": 1588842463,
        "uid": 97136,
        "name": "chenzida",
        "ccfLevel": 0,
        "title": "P2177 \u5185\u5b58\u6740\u624b"
    },
    {
        "content": "\u8003\u8651\u8fd9\u662f\u4e00\u4e2a0 1\u77e9\u9635  \u6211\u4eec\u5bf9\u6bcf\u4e00\u884c\u8fdb\u884c$hash$\uff0c\u518d\u5bf9\u6bcf\u4e00\u5217\u8fdb\u884c$hash$\uff0c\u53d6\u4e24\u4e2a\u4e0d\u540c\u7684$base$\uff0c\u8fd9\u6837\u53ef\u4ee5\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u4fdd\u8bc1$hash$\u7684\u6b63\u786e\u6027\uff0c\u7531\u4e8e\u849f\u84bb\u6211\u6bd4\u8f83\u83dc\uff0c\u6ca1\u6709\u5199\u6563\u5217\u8868\uff0c\u53ea\u80fd$RP++$\u770b\u6709\u6ca1\u6709\u91cd\u590d\u4e86\uff0c\u6a2a\u884c$d[i][j]=d[i][j-1]*base1+a[i][j]$,\u518d\u8003\u8651\u7ad6\u5217$sum[i][j]=sum[i-1][j]*base2+d[i][j]$,\u518d\u5c06\u77e9\u9635\u6574\u4e2a\u65cb\u8f6c$180$\u00b0,\u5982\u679c\u4e00\u4e2a\u5b50\u6b63\u65b9\u5f62\u65cb\u8f6c\u524d\u548c\u65cb\u8f6c\u540e\u7684$hash$\u503c\u76f8\u540c\uff0c\u5219\u5927\u6982\u7387\u4e0b\uff0c\u8fd9\u4e24\u4e2a\u77e9\u9635\u76f8\u540c\u3002\u6211\u4eec\u679a\u4e3e\u65b9\u9635\u7684\u8fb9\u957f\uff08\u6ce8\u610f\u4e0d\u80fd\u4e8c\u5206\uff0c\u8fd9\u73a9\u610f\u5751\u4e86\u6211\u5f88\u4e45\uff0c\u6211\u4e8c\u5206\u4e00\u76f4$WA$\uff0c\u4ed4\u7ec6\u4e00\u60f3\u53d1\u73b0\u5982\u679c\u524d\u9762\u4e0d\u6ee1\u8db3\uff0c\u540e\u9762\u6ee1\u8db3\u7684\u60c5\u51b5\u4e5f\u662f\u5b58\u5728\u7684\uff0c\u4e0d\u6ee1\u8db3\u5355\u8c03\u6027\uff09\uff0c\u679a\u4e3e\u77e9\u9635\u7684\u70b9\uff0c\u8fdb\u884c$hash$\u5224\u65ad\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O\uff08N\u00b3\uff09,\u4e0b\u9762\u8d34\u4ee3\u7801\n\n//\u770b\u4e86\u770bAC\u8bb0\u5f55\uff0c\u8c8c\u4f3c$RANK1$\uff0c\u6bd4$RANK2$\u5feb\u4e86\u5dee\u4e0d\u591a10\u500d\uff1f\u5176\u5b9e\u8fd9\u9898\u4e8c\u8fdb\u5236\u538b\u7f29\u8c8c\u4f3c\u4e5f\u53ef\u505a\uff1f\u4e0d\u8fc7\u5de5\u7a0b\u91cf\u5de8\u5927\uff1f\u4e0d\u7ba1\u4e86\uff0c$QAQ$\n\n// \u53ef\u80fd\u4ee3\u7801\u7565\u4e11\uff0c\u501f\u9274\u601d\u8def\u5373\u53ef\u3002\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\ntypedef unsigned long long ll;\nll base1=131,base2=233;\nll re(){\n\tchar c=getchar();ll all=0,pd=1;\n\tfor(;c>'9'||c<'0';c=getchar()) if(c=='-') pd=-1;\n\twhile(c>='0'&&c<='9') all=all*10+c-'0',c=getchar();return all*pd;\n}const ll N=305;\nchar s[N];ll a[N][N],d[N][N],sum[N][N],aa[N][N],sum2[N][N],n,m,qpow1[N],qpow2[N];\nll cal(ll x,ll y,ll l,ll type){\n\tif(type==1) return sum[x][y]-sum[x-l][y]*qpow2[l]-sum[x][y-l]*qpow1[l]+sum[x-l][y-l]*qpow1[l]*qpow2[l];\n\ty=m+l-y,x=n+l-x;\n\treturn sum2[x][y]-sum2[x-l][y]*qpow2[l]-sum2[x][y-l]*qpow1[l]+sum2[x-l][y-l]*qpow1[l]*qpow2[l];\n}\nll work(ll l){\n\tfor(ll i=l;i<=n;i++)\n\t\tfor(ll j=l;j<=m;j++)\n\tif(cal(i,j,l,1)==cal(i,j,l,2)) return 1;\n\treturn 0;\n}ll ans=0;\nint main(){\n\tn=re(),m=re();\n\tfor(ll i=1;i<=n;i++){\n\t\tscanf(\"%s\",s+1);\n\t\tfor(ll j=1;j<=(ll)strlen(s+1);j++)\n\t\t\ta[i][j]=s[j]-'0';\n\t}\n\tqpow1[0]=1;for(int i=1;i<=300;i++) qpow1[i]=qpow1[i-1]*base1;\n\tqpow2[0]=1;for(int i=1;i<=300;i++) qpow2[i]=qpow2[i-1]*base2;\n\t\n\tfor(ll i=1;i<=n;i++)\n\t\tfor(ll j=1;j<=m;j++)\n\td[i][j]=d[i][j-1]*base1+a[i][j];\n\tfor(ll i=1;i<=n;i++)\n\t\tfor(ll j=1;j<=m;j++)\n\tsum[i][j]=sum[i-1][j]*base2+d[i][j];\n\t\n\tfor(ll i=1;i<=n;i++)\n\t\tfor(ll j=1;j<=m;j++)\n\t\t\taa[i][j]=a[n-i+1][m-j+1];\n\tfor(ll i=1;i<=n;i++)\n\t\tfor(ll j=1;j<=m;j++)\n\td[i][j]=d[i][j-1]*base1+aa[i][j];\n\tfor(ll i=1;i<=n;i++)\n\t\tfor(ll j=1;j<=m;j++)\n\tsum2[i][j]=sum2[i-1][j]*base2+d[i][j];\n\t\n\t\n\tfor(int i=1;i<=max(n,m);i++)\n\tif(work(i)) ans=i;\n\tif(ans!=1&&ans!=0)printf(\"%llu\",ans);\n\telse printf(\"-1\\n\");\n}\n```",
        "postTime": 1534031228,
        "uid": 58354,
        "name": "BLUE_EYE",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2177 \u3010\u5185\u5b58\u6740\u624b\u3011"
    },
    {
        "content": "# \u8bfb\u9898\n\u770b\u5230\u4e8c\u7ef4\u4e2d\u7ffb\u8f6c $180^\\circ$ \u5373\u53ef\u60f3\u5230\u4e00\u7ef4\u4e2d\u6c42\u56de\u6587\u4e32\uff0c\u6545\u53ef\u7528\u9a6c\u62c9\u8f66\u7684\u601d\u8def\u6c42\u89e3\uff08\u82e5\u6ca1\u5199\u8fc7\u8bf7\u8f6c\u5411[P3805\u3010\u6a21\u677f\u3011manacher \u7b97\u6cd5](https://www.luogu.com.cn/problem/P3805)\uff09\u3002\n\u5176\u4e2d\u679a\u4e3e\u6bcf\u884c $O(N)$\uff0c\u6c42\u89e3\u6bcf\u884c $O(M)$\uff0c\u5224\u65ad\u7ebf\u6027\uff0c\u603b\u590d\u6742\u5ea6\u521a\u597d\u4e0d\u8d85\u3002\n# \u601d\u8def\n1. \u8f93\u5165\uff0c\u6309\u9a6c\u62c9\u8f66\u7b97\u6cd5\uff0c\u6ce8\u610f\u884c\u4e0e\u884c\u95f4\u4e5f\u8981\u63d2\u5165\u4e00\u884c\u7279\u6b8a\u5b57\u7b26\u3002\n1. \u66b4\u529b\u679a\u4e3e\u6bcf\u884c\uff0c\u5bf9\u6bcf\u884c\u5206\u522b\u4f7f\u7528\u9a6c\u62c9\u8f66\uff0c\u5373\u9664\u5224\u65ad\u5916\u53ea\u9700\u8003\u8651\u6a2a\u5750\u6807\uff0c\u7eb5\u5750\u6807\u5747\u76f8\u540c\u3002\n\t\n   \u5224\u65ad\u6269\u5c55\u65f6\u6ce8\u610f\u5b8c\u6574\u5224\u65ad\u4e00\u5468\u7684\u5168\u90e8\u5bf9\u5e94\u70b9\u3002\u4e0b\u8bf4\u660e\u5982\u4f55\u5224\u65ad\uff1a\n   \n   \u8bbe\u5f53\u524d\u6269\u5c55\u8ddd\u79bb\u4e3a $p$\uff0c\u4e2d\u5fc3\u70b9\u6a2a\u7eb5\u5750\u6807\u5206\u522b\u4e3a $x$\u3001$y$\u3002\n   1. \u5bf9\u4e8e\u6b63\u65b9\u5f62\u5de6\u4fa7\u8fb9\u4e0a\u7684\u70b9\uff0c\u6613\u77e5\u5176\u6a2a\u5750\u6807\u4e3a $x-p$\uff0c\u5176\u5bf9\u5e94\u70b9\u5728\u6b63\u65b9\u5f62\u53f3\u4fa7\u8fb9\u4e0a\uff0c\u4e14\u5176\u5bf9\u5e94\u70b9\u6a2a\u5750\u6807\u4e3a $x+p$\u3002\u56e0\u4e3a\u8fd9\u4e24\u70b9\u8ddd\u4e2d\u5fc3\u70b9\u8ddd\u79bb\u76f8\u7b49\uff0c\u4e14\u5176\u6a2a\u5750\u6807\u4e0e $x$ \u5dee\u7684\u7edd\u5bf9\u503c\u76f8\u7b49\uff0c\u6240\u4ee5\u7531\u52fe\u80a1\u5b9a\u7406\u53ef\u5f97\uff0c\u8fd9\u4e24\u70b9\u7684\u7eb5\u5750\u6807\u4e0e $y$ \u5dee\u7684\u7edd\u5bf9\u503c\u76f8\u7b49\u3002\u6545\u53ef\u679a\u4e3e\u5de6\u4fa7\u70b9\u7eb5\u5750\u6807\u4e0e $y$ \u7684\u5dee\uff0c\u4ee5\u6b64\u786e\u5b9a\u4e24\u70b9\u5750\u6807\u5e76\u5224\u65ad\u3002\n   2. \u540c\u7406\uff0c\u5bf9\u4e8e\u6b63\u65b9\u5f62\u4e0a\u4fa7\u8fb9\u4e0a\u7684\u70b9\uff0c\u6613\u77e5\u5176\u7eb5\u5750\u6807\u4e3a $y-p$\uff0c\u5176\u5bf9\u5e94\u70b9\u5728\u6b63\u65b9\u5f62\u4e0b\u4fa7\u8fb9\u4e0a\uff0c\u4e14\u5176\u5bf9\u5e94\u70b9\u6a2a\u5750\u6807\u4e3a $y+p$\u3002\u56e0\u4e3a\u8fd9\u4e24\u70b9\u8ddd\u4e2d\u5fc3\u70b9\u8ddd\u79bb\u76f8\u7b49\uff0c\u4e14\u5176\u7eb5\u5750\u6807\u4e0e $y$ \u5dee\u7684\u7edd\u5bf9\u503c\u76f8\u7b49\uff0c\u6240\u4ee5\u7531\u52fe\u80a1\u5b9a\u7406\u53ef\u5f97\uff0c\u8fd9\u4e24\u70b9\u7684\u6a2a\u5750\u6807\u4e0e $x$ \u5dee\u7684\u7edd\u5bf9\u503c\u76f8\u7b49\u3002\u6545\u53ef\u679a\u4e3e\u4e0a\u4fa7\u70b9\u6a2a\u5750\u6807\u4e0e $x$ \u7684\u5dee\uff0c\u4ee5\u6b64\u786e\u5b9a\u4e24\u70b9\u5750\u6807\u5e76\u5224\u65ad\u3002\n   \n   \u7531\u4e0a\u8ff0\u8bf4\u660e\u53ef\u53d1\u73b0\uff0c\u4e24\u6b65\u9aa4\u8fc7\u7a0b\u76f8\u4f3c\uff0c\u4e14\u679a\u4e3e\u8303\u56f4\u76f8\u540c\uff0c\u5373\u5728\u4e0b\u9762\u4ee3\u7801\u4e2d\uff0c\u4e3a\u51cf\u5c11\u4ee3\u7801\u91cf\uff0c\u7f29\u5c0f\u5e38\u6570\uff0c\u5c06\u4e24\u6b65\u540c\u65f6\u6267\u884c\u3002\n1. \u8f93\u51fa\uff0c\u6ce8\u610f\u9898\u76ee\u63cf\u8ff0\u6700\u540e\uff1a\u8fb9\u957f\u5927\u4e8e $1$ \u624d\u8981\u8f93\u51fa\uff0c\u5426\u5219\u8f93\u51fa ```-1```\u3002\n# \u4ee3\u7801\n\u5949\u4e0a\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstring>\nusing namespace std;\nchar s[610][610];\nint p[610][610],d,mid,r,n,m,br;\nint main(){\n    cin>>n>>m;                                              \\\\\u8f93\u5165\n    for(int i=0;i<=2*n+1;i++){\n        s[i][0]='~';\n        s[i][2*m+1]='#';\n    }\n    for(int i=0;i<=2*m;i++){\n        s[0][i]='~';\n        s[2*n+1][i]='#';\n    }\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=2*m;j++)\n            s[2*i-1][j]='#';\n        for(int j=1;j<=m;j++){\n            s[2*i][j*2-1]='#';\n            cin>>s[2*i][j*2];\n        }\n    }\n    for(int i=1;i<=2*n+1;i++){                          \\\\\u679a\u4e3e\u6bcf\u884c\n        mid=0;\n        r=0;\n        for(int j=1;j<=2*m+1;j++){\n            if(j<=r)\n                p[i][j]=min(p[i][mid+mid-j],r-j+1);\n            else\n                p[i][j]=1;\n            br=0;\n            while(1){                                   \\\\\u5224\u65ad\u62d3\u5c55\n                for(int k=-p[i][j];k<=p[i][j];k++){\n                    if(s[i+p[i][j]][j+k]!=s[i-p[i][j]][j-k]){\n                        br=1;\n                        break;\n                    }\n                    if(s[i+k][j+p[i][j]]!=s[i-k][j-p[i][j]]){\n                        br=1;\n                        break;\n                    }\n                }\n                if(br==1)\n                    break;\n                p[i][j]++;\n            }\n            if(r<p[i][j]+j){\n                mid=j;\n                r=p[i][j]+j-1;\n            }\n            if(d<p[i][j])\n                d=p[i][j];\n        }\n    }\n    if(d-1<=1)                                              \\\\\u8f93\u51fa\n        cout<<-1;\n    else\n        cout<<d-1;\n    return 0;\n}\n```\n\u82e5\u6709\u758f\u6f0f\u3001\u4e0d\u8be6\u4e4b\u5904\uff0c\u6073\u8bf7\u5927\u4f6c\u6307\u70b9\u3002",
        "postTime": 1664590435,
        "uid": 739097,
        "name": "the___",
        "ccfLevel": 0,
        "title": "P2177 \u5185\u5b58\u6740\u624b \u9898\u89e3"
    },
    {
        "content": " \u672c\u9898\u524d\u7f6e\u7b97\u6cd5\u77e5\u8bc6\uff1a\n - \u4e8c\u5206\u7b54\u6848\n - \u54c8\u5e0c\n\n\u4e0d\u540c\u4e8e\u5176\u4ed6\u9898\u89e3\uff0c\u8fd9\u91cc\u7ed9\u51fa\u4e00\u79cd\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(nm \\log_2 \\min (n,m))$ \u7684\u505a\u6cd5\uff0c\u76ee\u524d\u4e3a\u6700\u4f18\u89e3\u3002  \n![](https://cdn.luogu.com.cn/upload/image_hosting/k34jd0be.png)\n\n\n### \u7b97\u6cd5\u5206\u6790\n\u4e8c\u7ef4\u54c8\u5e0c\u5176\u4ed6\u9898\u89e3\u90fd\u5df2\u7ecf\u8bb2\u8fc7\u4e86\uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u8d58\u8ff0\uff0c\u6211\u4eec\u8bb2\u91cd\u70b9\u3002\u5982\u679c\u6709\u505a\u8fc7 [\u53cd\u5bf9\u79f0](https://loj.ac/p/2452) \u8fd9\u9053\u9898\uff0c\u5e94\u8be5\u5c31\u77e5\u9053\u8fd9\u9898\u4e5f\u662f\u7c7b\u4f3c\u7684\u505a\u6cd5\u3002\n\n\u56de\u5230\u672c\u9898\uff0c\u9898\u76ee\u8981\u6c42\u6211\u4eec\u627e\u5230\u4e00\u4e2a\u8fb9\u957f\u6700\u5927\u7684 $01$ \u65b9\u9635\uff0c\u4e14\u6ee1\u8db3\u65cb\u8f6c $\\pi$ \u540e\u4e0e\u539f\u6765\u4e00\u6837\uff0c\u5373\u8fd9\u4e2a\u65b9\u9635\u4e2d\u5fc3\u5bf9\u79f0\u3002\n\u8003\u8651\u4e00\u4e2a\u5df2\u7ecf\u7b26\u5408\u9898\u610f\u7684\u65b9\u9635\uff0c\u5b83\u7684\u8fb9\u957f\u4e3a $a$\uff0c\u5219\u4ee5\u5b83\u4e3a\u4e2d\u5fc3\uff0c\u8fb9\u957f\u5c0f\u4e8e $a$ \u7684\u65b9\u9635\u4e5f\u4e00\u5b9a\u662f\u4e2d\u5fc3\u5bf9\u79f0\u7684\u3002\n\u8fd9\u5c31\u8bf4\u660e\uff0c\u540c\u4e00\u4e2a\u4e2d\u5fc3\u7684\u65b9\u9635\u7cfb\u4e2d\uff0c\u5176\u5408\u6cd5\u6027\u662f\u5177\u6709\u5355\u8c03\u6027\u7684\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u70b9 $P$\uff0c\u4e00\u5b9a\u53ef\u4ee5\u627e\u5230\u4e00\u4e2a $b$\uff0c\u6ee1\u8db3\u6240\u6709\u8fb9\u957f\u5c0f\u4e8e\u7b49\u4e8e $a$ \u4e14\u5df2 $P$ \u4e3a\u4e2d\u5fc3\u7684\u65b9\u9635\u90fd\u662f\u4e2d\u5fc3\u5bf9\u79f0\u7684\uff0c\u800c\u6240\u6709\u8fb9\u957f\u5927\u4e8e $a$ \u4e14\u5df2 $P$ \u4e3a\u4e2d\u5fc3\u7684\u65b9\u9635\u90fd\u4e0d\u662f\u4e2d\u5fc3\u5bf9\u79f0\u7684\u3002\n\n\u6709\u4e86\u8fd9\u4e2a\u6027\u8d28\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8fdb\u884c\u4e8c\u5206\u7b54\u6848\u3002\u5373\u786e\u5b9a\u4e00\u4e2a\u8fb9\u957f\uff0c\u7136\u540e\u6839\u636e\u8fb9\u957f\u627e\u51fa\u6240\u6709\u65b9\u9635\uff0c\u8fdb\u884c\u5224\u65ad\u5e76\u7f29\u5c0f\u7b54\u6848\u6240\u5728\u533a\u95f4\u3002\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u4e0d\u80fd\u5bf9\u8fb9\u957f\u8fdb\u884c\u4e8c\u5206\u3002\u4e3a\u4ec0\u4e48\uff1f\u7531\u4e8e\u8fb9\u957f\u7684\u5947\u5076\u6027\u4f1a\u5f71\u54cd\u4e2d\u5fc3\u7684\u4f4d\u7f6e\uff0c\n\u4e2d\u5fc3\u53ef\u80fd\u5728\u77e9\u9635\u7684\u683c\u5b50\u4e0a\uff0c\u4e5f\u53ef\u80fd\u5728\u683c\u5b50\u4e4b\u95f4\uff0c\u800c\u4e0a\u8ff0\u6027\u8d28\u90fd\u662f\u5efa\u7acb\u5728\u4e2d\u5fc3\u76f8\u540c\u7684\u6761\u4ef6\u4e4b\u4e0a\u3002\n\u6211\u4eec\u5bf9\u70b9\u7684\u4f4d\u7f6e\u8fdb\u884c\u8ba8\u8bba\u3002\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u60c5\u51b5\u8fdb\u884c\u4e00\u6b21\u4e8c\u5206\u7b54\u6848\uff0c\u6700\u540e\u53d6\u4e24\u8005\u7684\u6700\u5927\u503c\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(nm \\log_2 \\min (n,m))$\u3002\n\n### \u53c2\u8003\u7a0b\u5e8f\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n/** constexpr \u662f C++ 11 \u7684\u65b0\u589e\u5173\u952e\u5b57\uff0c\u7528\u6765\u5b9a\u4e49\u4e00\u4e2a\u7f16\u8bd1\u671f\u5e38\u91cf\uff0c\u63a8\u8350\u7528\u8fd9\u4e2a\u66ff\u4ee3 #define */\nconstexpr int maxn = 300 + 10;\nconstexpr int mod = 998244353;\nconstexpr int base1 = 258 + 1e9 + 7;\nconstexpr int base2 = 97 + 1e9 + 9;\n\n/**\n * using \u8bed\u53e5\uff0c\u4e5f\u662f C++ 11 \u65b0\u589e\u8bed\u6cd5\uff0c\u7b49\u4ef7\u4e8e typedef\uff0c\u4f46\u8981\u66f4\u52a0\u5f3a\u5927\u3002\n * \u5982 template <typename T> using MapType = map<int, T>;\n */\nusing ll = long long;\n\nint n, m;\nll mat[2][maxn][maxn], h[2][maxn][maxn], power1[maxn], power2[maxn];\nchar tmp[maxn];\n\nint calc(int which, int x1, int y1, int x2, int y2) {\n    ll res = h[which][x2][y2] -\n             h[which][x1 - 1][y2] * power1[x2 - x1 + 1] % mod -\n             h[which][x2][y1 - 1] * power2[y2 - y1 + 1] % mod +\n             h[which][x1 - 1][y1 - 1] * power1[x2 - x1 + 1] % mod * power2[y2 - y1 + 1] % mod;\n    return (res + mod) % mod;\n}\n\nbool check(int x, int y, int a) {\n    int r = (a + 1) / 2;\n    if (a % 2) {\n        int x1 = x - r + 1, y1 = y - r + 1;\n        int x2 = x + r - 1, y2 = y + r - 1;\n        int rx1 = n - x1 + 1, ry1 = m - y1 + 1;\n        int rx2 = n - x2 + 1, ry2 = m - y2 + 1;\n        return calc(0, x1, y1, x2, y2) == calc(1, rx2, ry2, rx1, ry1);\n    } else {\n        int x1 = x - r + 1, y1 = y - r + 1;\n        int x2 = x + r, y2 = y + r;\n        int rx1 = n - x1 + 1, ry1 = m - y1 + 1;\n        int rx2 = n - x2 + 1, ry2 = m - y2 + 1;\n        return calc(0, x1, y1, x2, y2) == calc(1, rx2, ry2, rx1, ry1);        \n    }\n}\n\nbool check(int a) {\n\t/** \u8fd9\u91cc\u4f20\u5165\u8fb9\u957f\uff0c\u6839\u636e\u8fb9\u957f\u5224\u65ad */\n    int r = (a + 1) / 2;\n    if (a % 2) {\n        for (int i = r; i + r - 1 <= n; ++i)\n            for (int j = r; j + r - 1 <= m; ++j)\n                if (check(i, j, a))\n                    return true;\n        return false;\n    } else {\n        for (int i = r; i + r <= n; ++i)\n            for (int j = r; j + r <= m; ++j)\n                if (check(i, j, a))\n                    return true;\n        return false;\n    }\n}\n\nvoid preprocess() {\n\t/** \u6c42\u4e8c\u7ef4\u54c8\u5e0c */\n    power1[0] = power2[0] = 1;\n    for (int i = 1; i <= max(n, m); ++i) {\n        power1[i] = power1[i - 1] * base1 % mod;\n        power2[i] = power2[i - 1] * base2 % mod;\n    }\n    \n    for (int i = 1; i <= n; ++i) {\n        for (int j = 1; j <= m; ++j) {\n            h[0][i][j] = (h[0][i][j - 1] * base2 + mat[0][i][j]) % mod;\n            h[1][i][j] = (h[1][i][j - 1] * base2 + mat[1][i][j]) % mod;            \n        }\n    }\n    for (int i = 1; i <= n; ++i) {\n        for (int j = 1; j <= m; ++j) {\n            h[0][i][j] = (h[0][i - 1][j] * base1 + h[0][i][j]) % mod;\n            h[1][i][j] = (h[1][i - 1][j] * base1 + h[1][i][j]) % mod;\n        }\n    }\n}\n\nvoid divide() {\n\t/** \u5bf9\u4e0d\u540c\u7684\u4f4d\u7f6e\u60c5\u51b5\u5206\u522b\u4e8c\u5206 */\n    int l = 1, r = min(n, m) / 2 + 1, ans1 = -1, ans2 = -1;\n    while (l <= r) {\n        int mid = (l + r) / 2;\n        if (check(mid * 2)) {\n            ans1 = mid * 2;\n            l = mid + 1;\n        } else {\n            r = mid - 1;\n        }\n    }\n    l = 1, r = min(n, m) / 2 + 1;\n    while (l <= r) {\n        int mid = (l + r) / 2;\n        if (check(mid * 2 + 1)) {\n            ans2 = mid * 2 + 1;\n            l = mid + 1;\n        } else {\n            r = mid - 1;\n        }\n    }\n    cout << max(ans1, ans2) << endl;\n}\n\nint main() {\n    ios::sync_with_stdio(false);\n    cin >> n >> m;\n    for (int i = 1; i <= n; ++i) {\n        cin >> (tmp + 1);\n        for (int j = 1; j <= m; ++j) {\n            mat[0][i][j] = tmp[j] - '0';\n            /** \u50a8\u5b58\u4e2d\u5fc3\u5bf9\u79f0\u7684\u77e9\u9635 */\n            mat[1][n - i + 1][m - j + 1] = tmp[j] - '0';\n        }\n    }\n    preprocess();\n    divide();\n    return 0;\n}\n```\n### \u63d0\u793a\n\u5982\u679c\u4f60\u89c9\u5f97\u5199\u7684\u6ca1\u95ee\u9898\u5374 WA \u4e86\uff0c\u68c0\u67e5\u4e00\u4e0b\u662f\u4e0d\u662f\u54c8\u5e0c\u51b2\u7a81\u4e86\uff0c\u6709\u6761\u4ef6\u5c31\u5199\u53cc\u54c8\u5e0c\uff0c\u8fd9\u9053\u9898\u5199\u5355\u54c8\u5e0c\u5f88\u5bb9\u6613\u88ab\u5361\u3002",
        "postTime": 1633791825,
        "uid": 219538,
        "name": "ctj12461",
        "ccfLevel": 6,
        "title": "\u3010\u9898\u89e3\u3011\u5185\u5b58\u6740\u624b"
    },
    {
        "content": "# \u4e00\u53e5\u8bdd\u9898\u610f\n\n\u6c42 $n \\times m$ \u7684 $0-1$ \u77e9\u9635\u4e2d\u6700\u5927\u7684\u4e2d\u5fc3\u5bf9\u79f0\u7684\u5b50\u65b9\u9635\u7684\u8fb9\u957f\u3002\n\n# \u7b97\u6cd5\u4e00\n\n\u66b4\u529b\uff0c$\\Theta(n^3)$ \u679a\u4e3e\u6b63\u65b9\u5f62\uff0c\u518d $\\Theta(n^2)$ \u5224\u65ad\uff0c\u603b\u590d\u6742\u5ea6 $\\Theta(n^5)$\u3002\n\n\u8fc7\u4e8e\u7b80\u5355\uff0c\u4e0d\u8bb2\u4e86\u3002\n\n# \u7b97\u6cd5\u4e8c\n\n\u4f18\u5316\u679a\u4e3e\u7684\u590d\u6742\u5ea6\u6216\u8bb8\u6709\u4e00\u4e9b\u96be\u5ea6\uff0c\u90a3\u4e3a\u4ec0\u4e48\u4e0d\u5c1d\u8bd5\u4f18\u5316\u5224\u65ad\u5462\uff1f\n\n\u5224\u65ad\u600e\u4e48\u4f18\u5316\u5462\uff1f\n\n\u8003\u8651\u65cb\u8f6c $180^{\\circ}$ \u540e\u7684\u60c5\u5f62\uff0c\u7b2c $1$ \u884c\u4e0e\u7b2c $k$ \u884c\u4e92\u4e3a\u5012\u5e8f\uff0c\u7b2c $2$ \u884c\u4e0e\u7b2c $k-1$ \u884c\u4e92\u4e3a\u5012\u5e8f\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5206\u522b\u6c42\u51fa\u7b2c $i$ \u884c\u7684\u54c8\u5e0c\u503c\u548c\u7b2c $(k-i+1)$ \u884c\u7684\u5012\u5e8f\u7684\u54c8\u5e0c\u503c\u5373\u53ef\u3002\n\n\u5bf9\u539f\u77e9\u9635\u6bcf\u4e00\u884c\u5206\u522b\u6b63\u7740\u53cd\u7740\u5404\u54c8\u5e0c\u4e00\u6b21\u5373\u53ef\u3002\n\n\u5177\u4f53\u65b9\u6cd5\u4e3a\uff1a\n\n$$hash_{i, j} = (hash_{i, j-1} + arr_{i, j} \\times p^{j-1}) \\% mod$$\n\n\u5f53\u9700\u8981\u77e5\u9053\u7b2c $i$ \u884c $l$ \u5230 $r$ \u7684\u5b50\u6bb5\u7684\u54c8\u5e0c\u503c\u65f6\uff1a\n\n$$hash_{i, [l, r]} = [(hash_{i, r} - hash_{i, l-1}) \\times(p^{\\prime})^{l-1}] \\% mod$$\n\n\u5176\u4e2d $p^{\\prime}$ \u6307 $p$ \u5728\u6a21 $mod$ \u610f\u4e49\u4e0b\u7684\u9006\u5143\u3002\n\n\u53cd\u65b9\u5411\u540c\u7406\u3002\n\n\u5224\u65ad\u590d\u6742\u5ea6\u964d\u4e3a $\\Theta(n)$\uff0c\u603b\u590d\u6742\u5ea6 $\\Theta(n^4)$\u3002\n\n\u663e\u7136\u8fc7\u4e0d\u4e86\u3002\n\n# \u7b97\u6cd5\u4e09\n\n\u7531\u6570\u636e\u8303\u56f4\u663e\u7136\u53ef\u5f97\u6211\u4eec\u9700\u8981 $\\Theta(n^3)$ \u7684\u7b97\u6cd5\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u9700\u8981 $\\Theta(1)$ \u7684\u5224\u65ad\u65b9\u6cd5\u3002\n\n\u8003\u8651\u5c06\u7b97\u6cd5\u4e8c\u4e2d\u7684\u6570\u5217\u54c8\u5e0c\u53d8\u4e3a\u77e9\u9635\u54c8\u5e0c\u3002\n\n\u77e9\u9635\u600e\u4e48\u54c8\u5e0c\u5462\uff1f\n\n\u9700\u8981\u5c06\u6bcf\u4e00\u884c\u90fd\u6c42\u4e00\u4e2a\u54c8\u5e0c\u503c\uff0c\u5c06\u6c42\u51fa\u7684\u54c8\u5e0c\u503c\u4eec\u4ece\u4e0a\u5230\u4e0b\u518d\u6c42\u4e00\u4e2a\u54c8\u5e0c\u3002\n\n\u4e5f\u5c31\u662f\uff1a\n\n$$(\\sum_{i=1}^{n}\\sum_{j=1}^{m}p_1^{i-1}p_2^{j-1}arr_{i, j}) \\% mod$$\n\n\u4e5f\u5c31\u662f\uff1a\n\n$$hash_{i, j} = (hash_{i, j-1} + hash_{i-1, j} - hash_{i-1, j-1} + arr_{i, j} \\times p_1^{i-1} \\times p_2^{j-1}) \\% mod$$\n\n\u6c42\u5de6\u4e0a\u89d2\u4e3a $(x_1, y_1)$ \uff0c\u53f3\u4e0b\u89d2 $(x_2, y_2)$ \u4e3a\u7684\u77e9\u9635\u7684\u54c8\u5e0c\u503c\u65f6\uff1a\n\n$$hash_{[x_1, x_2], [y_1, y_2]} = [(hash_{x_1, y_1} + hash_{x_2, y_2} - hash_{x_1, y_2} - hash_{x_2, y_1}) \\times (p_1^{\\prime})^{i-1} \\times (p_2^{\\prime})^{j-1}] \\% mod$$\n\n\u53cd\u65b9\u5411\u4f9d\u7136\u540c\u7406\u3002\n\n# \u51e0\u70b9\u6ce8\u610f\n\n\n1. $1 \\times 1$ \u7684\u5b50\u77e9\u9635\u4e0d\u7b97\u6570\uff01\n\n1. \u5341\u5e74 $\\texttt{OI}$ \u4e00\u573a\u7a7a\uff0c\u4e0d\u5f00 $\\texttt{long long}$ \u89c1\u7956\u5b97\uff01\n\n1. \u4e09\u6570\u76f8\u4e58\u53ef\u80fd\u4f1a\u7206 $\\texttt{long long}$\uff0c\u6240\u4ee5\u8981\u4e58\u4e00\u6b21\u819c\u4e00\u6b21\uff01\n\n# \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n#define mod 998244353\n#define p1 114514\n#define p2 1919810\n#define r1 137043501\n#define r2 595887626\n#define int long long\nusing namespace std;\nint n, m;\nbool arr[310][310];\nint hash[310][310];\nint hsah[310][310];\nint pow1[310];\nint pow2[310];\nint rev1[310];\nint rev2[310];\nchar ch;\nint ans;\nsigned main() {\n\tcin >> n >> m;\n\tfor (int i = 1; i <= n; i++) {\n\t\tfor (int j = 1; j <= m; j++) {\n\t\t\tcin >> ch;\n\t\t\tarr[i][j] = (ch == '1');\n\t\t}\n\t}\n\tpow1[0] = pow2[0] = rev1[0] = rev2[0] = 1;\n\tfor (int i = 1; i < n; i++) {\n\t\tpow1[i] = pow1[i-1] * p1 % mod;\n\t\trev1[i] = rev1[i-1] * r1 % mod;\n\t}\n\tfor (int i = 1; i < m; i++) {\n\t\tpow2[i] = pow2[i-1] * p2 % mod;\n\t\trev2[i] = rev2[i-1] * r2 % mod;\n\t}\n\tfor (int i = 1; i <= n; i++) {\n\t\tfor (int j = 1; j <= m; j++) {\n\t\t\thash[i][j] = ((hash[i][j-1] + hash[i-1][j] - hash[i-1][j-1] + pow1[i-1] * pow2[j-1] * arr[i][j]) % mod + mod) % mod;\n\t\t}\n\t}\n\tfor (int i = n; i >= 1; i--) {\n\t\tfor (int j = m; j >= 1; j--) {\n\t\t\thsah[i][j] = ((hsah[i][j+1] + hsah[i+1][j] - hsah[i+1][j+1] + pow1[n-i] * pow2[m-j] * arr[i][j]) % mod + mod) % mod;\n\t\t}\n\t}\n\tfor (int i = 1; i <= n; i++) {\n\t\tfor (int j = 1; j <= m; j++) {\n\t\t\tfor (int k = 2; k <= min(n-i+1, m-j+1); k++) {\n\t\t\t\tif ((((hash[i+k-1][j+k-1] - hash[i+k-1][j-1] - hash[i-1][j+k-1] + hash[i-1][j-1]) % mod * rev1[i-1] % mod * rev2[j-1]) - ((hsah[i][j] - hsah[i][j+k] - hsah[i+k][j] + hsah[i+k][j+k]) % mod * rev1[n-i-k+1] % mod * rev2[m-j-k+1])) % mod == 0) ans = max(ans, k);\n\t\t\t}\n\t\t}\n\t}\n\tif (ans == 0) cout << -1 << endl;\n\telse cout << ans << endl;\n\treturn 0;\n}\n```\n\n# \u540e\u9762\u7684\u8bdd\n\n$$\\color{white}\\Huge\\texttt{\u6c42\u8fc7\uff0c\u6c42\u8d5e}$$",
        "postTime": 1624356575,
        "uid": 153422,
        "name": "0x3F",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2177 \u3010\u5185\u5b58\u6740\u624b\u3011"
    }
]