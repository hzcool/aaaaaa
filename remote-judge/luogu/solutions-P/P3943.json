[
    {
        "content": "\u8fd9\u9053\u9898\u601d\u7ef4\u96be\u5ea6\u771f\u7684\u597d\u5927\u554a\u3002\u3002\u3002\u5199\u4e86\u4e24\u5929\uff0c\u7b2c\u4e8c\u5929\u770b\u4e86\u597d\u4e45\u624d\u61c2\u4e86\u6211\u7b2c\u4e00\u5929\u7684\u601d\u8def\u3002\u3002\n\n\n#\u4e3b\u4f53\u601d\u8def\n\n\u9996\u5148\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e\u8fde\u7eed\u7684\u4e00\u6bb5\u706f\u6ce1\u53bb\u6309\u5b83\u7684\u5f00\u5173\u6781\u5176\u8d39\u65f6\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4e00\u79cdO\uff081\uff09\u590d\u6742\u5ea6\u7684\u65b9\u6cd5\u8fdb\u884c\u5f00\u5173\u7684\u64cd\u4f5c\u3002\n\n\u60f3\u60f3\u770b\uff0c\u5bf9\u4e8e\u533a\u95f4\u7684\u8fde\u7eed\u64cd\u4f5c\u8f6c\u4e3aO\uff081\uff09\u590d\u6742\u5ea6\u5e38\u7528\u7684\u65b9\u6cd5\u662f\u4ec0\u4e48\u3002\n\n\n###\u5dee\u5206\uff01\n\n\n\u5176\u5b9e\u5177\u4f53\u628a\u5b83\u60f3\u901a\u662f\u6bd4\u8f83\u590d\u6742\u7684\uff0c\u800c\u4e14\u4e4d\u4e00\u770b\u611f\u89c9\u4e0e\u5dee\u5206\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\u3002\n\n\u4f46\u662f\u6839\u636e\u4ea6\u6216\u7684\u6027\u8d28\uff0c\u786e\u5b9e\u53ef\u4ee5\u628a\u5bf9\u8fde\u7eed\u533a\u95f4\u76840 1\u6570\u5217\u53d6\u53cd\u8f6c\u5316\u4e3a\u5bf9\u5de6\u7aef\u70b9\u4e0e\u53f3\u7aef\u70b9\u53d6\u53cd\u3002\n\n```cpp\nn++\nfor(int i=1;i<=n;i++)G2[i]=G1[i]^G1[i-1];\n```\n\u8fd9\u4e48\u505a\u7684\u53ef\u884c\u6027\u5728\u4e8e\u5bf9\u4e8e\u533a\u95f4\u5185\u6211\u4eec\u63d0\u524d\u8fdb\u884c\u4e86\u7c7b\u4f3c\u53d6\u53cd\u7684\u64cd\u4f5c\u3002\n\n\u5dee\u5206\u7684\u601d\u60f3\u662f\u5728\u4fee\u6539\u7684\u533a\u95f4\u5de6\u7aef\u70b9+1\uff0c\u53f3\u7aef\u70b9\u7684\u53f3\u8fb9-1\uff0c\u540c\u6837\u7684\uff0c\u53d6\u53cd\u5dee\u5206\u4e5f\u662f\u5de6\u95ed\u53f3\u5f00\u3002\n\n\u4f8b\u5982\u67d0\u6bb5\u533a\u95f4\u5168\u662f1\uff1b\n\n1 1 1 1 1 1\n\n\u8fd9\u4e48\u64cd\u4f5c\u4e4b\u540e\u53d8\u4e3a 1 0 0 0 0 0 1\n\n\u5982\u679c\u6211\u4eec\u8981\u5bf91~6\u8fdb\u884c\u53d6\u53cd\u64cd\u4f5c\uff0c\u5728\u5dee\u5206\u6570\u7ec4\u4e2d\u5bf91,7\u53d6\u53cd\uff0c\u6570\u5217\u6700\u7ec8\u53d8\u4e3a\u4e86\u51680\u3002\n\n\u90a3\u4e48\u8fd9\u4e48\u505a\u662f\u4e0d\u662f\u5076\u7136\u5462\u3002\n\n\u6211\u4eec\u518d\u5bf9\u4e8e\u539f\u6570\u5217\u8bd5\u7740\u628a3~4\u8fdb\u884c\u53d6\u53cd\uff0c\u4e8e\u662f\u5dee\u5206\u6570\u7ec4\u53d8\u4e3a\n\n1 0 1 0 1 0 1\n\n\u4e4d\u4e00\u770b\u8c8c\u4f3c\u4e0e\u672c\u8be5\u5b58\u5728\u7684\u6570\u5217110011\u6ca1\u6709\u4ec0\u4e48\u534a\u6bdb\u94b1\u5173\u7cfb\uff08\u6ed1\u7a3d\uff09\n\n\u4f46\u662f\u8981\u77e5\u9053\u5dee\u5206\u662f\u5de6\u95ed\u53f3\u5f00\u7684\u3002\n\n\u6b64\u6570\u7ec4\u7684\u610f\u601d\u4e3a\n\n\u5728[1,3)\u4e2d\u6709(2-1)\u4e2a1\uff1b\n\n\u628a\u7ed3\u8bba\u4e00\u822c\u5316\n\n\u4ece\u5de6\u5230\u53f3\u6bcf\u6b21\u53d6\u4e24\u4e2a1\uff0c\u8bb0\u7b2c\u4e00\u4e2a1\u4f4d\u7f6e\u4e3al\uff0c\u7b2c\u4e8c\u4e2a1\u4f4d\u7f6e\u4e3ar\n\n\u5bf9\u4e8e\u539f\u6570\u7ec4\u7684\u610f\u4e49\u4e3a\n\n\u5728[l,r)\u95f4\u6709(r-1-l)\u4e2a1\uff1b\n\n\uff08\u8c8c\u4f3c\u662f\u8fd9\u6837\u7684\u5427\u3002\u3002\u5982\u679c\u6709\u95ee\u9898\u53ef\u4ee5\u5728\u8ba8\u8bba\u91cc\u6307\u51fa\uff0c\u672c\u4eba\u4ec5\u662f\u4e00\u540d\u849f\u84bb\uff09\n\n\u9053\u7406\u4e4b\u524d\u8bf4\u8fc7\u4e86\uff0c\u6211\u4eec\u5728\u5efaG2\u65f6\u5bf9\u4e8e\u65b0\u6570\u5217\u8fdb\u884c\u4e86\u7c7b\u4f3c\u4e8e\u63d0\u524d\u53d6\u53cd\u7684\u64cd\u4f5c\u3002\n\n\u65e2\u7136\u53ef\u884c\u6027\u88ab\u8bc1\u660e\u3002\u3002\u90a3\u4e48\u6211\u4eec\u4fbf\u5b8c\u6210\u4e86\u5bf9\u8be5\u95ee\u9898\u7684\u3002\u3002\n\n\n#\u7b2c\u4e00\u6b65\u8f6c\u5316\u3002\n\n\n\u90a3\u4e48\u539f\u95ee\u9898\u88ab\u6211\u4eec\u5de7\u5999\uff08\u5de7\u5999\uff1f\u7384\u5b66\uff01\uff09\u7684\u8f6c\u5316\u4e3a\u4e86\u5bf9\u4e8e\u7ed9\u5b9a\u76840 1\u6570\u5217\uff0c\u6bcf\u6b21\u5bf9\u4e8e\u6309\u8981\u6c42\u7684\u67d0\u4e24\u4e2a\u6570\u8fdb\u884c\u53d6\u53cd\uff0c\u95ee\u6700\u5c11\u6b21\u53ef\u4ee5\u4f7f\u6570\u5217\u5168\u90e8\u53d8\u4e3a1.\n\n\u63a5\u4e0b\u6765\u5927\u5bb6\u53ef\u4ee5\u53c2\u8003\u51fa\u9898\u4eba\u7ed9\u51fa\u7684\u9898\u89e3\u3002\n\n\uff08\u5f53\u7136\u6211\u8fd8\u662f\u4f1a\u8bf4\u4e00\u4e0b\u7684\uff09\n\n\u663e\u7136\uff0c\u6211\u4eec\u6bcf\u6b21\u7684L\uff0cR\u5fc5\u7136\u5305\u62ec0.\n\n\u5047\u5982\u6bcf\u6b21\u662f\u5bf9\u4e24\u4e2a0\u53d6\u53cd\uff0c\u90a3\u4e48\u4ed6\u4eec\u90fd\u53d8\u6210\u4e861\u3002\n\n\u5047\u5982\u662f\u5bf9\u4e00\u4e2a1\u4e00\u4e2a0\u8fdb\u884c\u53d6\u53cd\uff0c\u5219\u53ef\u4ee5\u770b\u6210\u628a0\u548c1\u6362\u4f4d\uff0c\u5373\uff1a\n\n###0\u8d70\u5230\u4e861\u7684\u4f4d\u7f6e\u3002\n\n\u8fd9\u91cc\u6709\u5fc5\u8981\u63d0\u4e00\u4e0b\u539f\u95ee\u9898\u9ebb\u70e6\u7684\u5730\u65b9\uff0c\u5373\u5bf9\u4e8e\u7b54\u6848\u65e0\u7528\u7684\u706f\u6ce1\uff08\u4eae\u7740\u7684\uff09\u592a\u591a\uff0c\u8fd9\u6837\u4f1a\u5bfc\u81f4\u8fdb\u884c\u5927\u91cf\u7684\u65e0\u6548\u64cd\u4f5c\u3002\n\n\u5982\u679c\u60f3\u8fdb\u884c\u72b6\u538b\u590d\u6742\u5ea6\u5219\u9ad8\u5230\u4e86\u6050\u6016\u7684O\uff082^40000\uff09\u3002\n\n\u7136\u800c\u6700\u7ec8\u6709\u7528\u7684\u8f6c\u5316\u4ec5\u5728\u5bf9\u672a\u4eae\u706f\u6ce1\u8fdb\u884c\u64cd\u4f5c\u3002\n\n\u90a3\u4e48\u6b64\u65f6\u5219\u4f53\u73b0\u4e86\u521a\u521a\u90a3\u53e5\u8bdd\u7684\u91cd\u8981\u6027\u3002\n\n\u65e2\u7136\u53ef\u4ee5\u770b\u62101\u8d70\u5230\u4e860\u7684\u4f4d\u7f6e\uff0c\u90a3\u4e48\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u4e0d\u8003\u86511\u7684\u5b58\u5728\u561b\u3002\n\n\u4e8e\u662f\u4e4e\u6211\u4eec\u5bf9\u4e8e\u95ee\u9898\u8fdb\u884c\u4e86\n\n\n#\u7b2c\u4e8c\u6b21\u8f6c\u5316\n\n\n\u7ed9\u4f60\u51e0\u4e2a\u70b9\uff0c\u6bcf\u6b21\u5c06\u5176\u4e2d\u4e00\u4e2a\u70b9\u79fb\u52a8\u7279\u5b9a\u7684\u8ddd\u79bb\uff0c\u5982\u679c\u4e24\u4e2a\u70b9\u78b0\u5230\u4e86\u4e00\u8d77\uff0c\u5219\u4e24\u4e2a\u70b9\u4e00\u8d77\u6d88\u5931\u3002\n\n\u95ee\u5982\u4f55\u79fb\u52a8\u4f7f\u5f97\u6d88\u53bb\u6240\u6709\u7684\u70b9\u7684\u6b65\u6570\u6700\u5c11\u3002\n\n\u6211\u4eec\u518d\u5bf9\u8fd9\u4e2a\u95ee\u9898\u8fdb\u884c\u5c0f\u8d2a\u5fc3\u3002\n\n\u6d88\u53bb\u540c\u4e00\u5bf9\u70b9\uff0c\u90a3\u4e48\u4e00\u5b9a\u662f\u53d6\u4ed6\u4eec\u8d70\u5230\u4e00\u8d77\u7684\u6700\u77ed\u6b65\u6570\u6700\u4f18\uff08\u5e9f\u8bdd\uff09\n\n\u90a3\u4e48\u627e\u6700\u77ed\u8def\u7684\u65b9\u6cd5\u53ef\u4ee5\u7528spfa\u8fdb\u884c\uff08\u8fd9\u91cc\u5410\u69fd\u4e00\u4e0b\u51fa\u9898\u4eba\u7ed9\u7684\u9898\u89e3\u554a\uff0c\u8bef\u5bfc\u4e86\u6211\u597d\u4e45\uff0c\u53d1\u73b0\u6839\u672c\u4e0d\u662fbfs\u597d\u4f10\uff0c\u4e5f\u53ef\u80fd\u662f\u6211\u849f\u84bb\u7684\u95ee\u9898\uff1f\uff09\n\n\u6ca1\u9519\uff0c\u6211\u4eec\u628a\u95ee\u9898\u8fdb\u884c\u4e86\n\n\n#\u7b2c\u4e09\u6b21\u8f6c\u5316\n\n\n\u6211\u4fdd\u8bc1\u8fd9\u662f\u6700\u540e\u4e00\u6b21\u4e86\u3002\uff08\u6ed1\u7a3d\uff09\n\n\u7ed9\u4f60\u4e00\u5806\u7269\u54c1\uff0c\u4e00\u6b21\u53ea\u80fd\u53d6\u51fa\u7ed9\u5b9a\u7684\u4e00\u5bf9\u7269\u54c1\uff0c\u53d6\u51fa\u4e0d\u540c\u5bf9\u7684\u7269\u54c1\u6709\u4e0d\u540c\u7684\u4ee3\u4ef7\uff0c\u95ee\u5982\u4f55\u53d6\u51fa\u7269\u54c1\u4f7f\u5f97\u4ee3\u4ef7\u6700\u5c0f\u3002\n\n\u7531\u4e8e\u9898\u76ee\u4e2d\u7684\u4e0d\u4eae\u706f\u6ce1\u6781\u5c11\uff0c\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u901a\u8fc7\u72b6\u538b\u5b8c\u6210\u6700\u540e\u7684\u64cd\u4f5c\u3002\n\n\n\u7136\u800c\u6211\u8fd9\u4e2a\u849f\u84bb\u4e0d\u4f1a\u72b6\u538b\u52a8\u89c4\uff0c\u8fd9\u91cc\u6211\u628a\u72b6\u538b\u8f6c\u4e3aSPFA\u3002\n\n\u6bcf\u4e00\u79cd\u72b6\u6001\u770b\u4f5c\u4e00\u4e2a\u70b9\uff0c\u6bcf\u6b21\u53d6\u51fa\u7269\u54c1\u7684\u4ee3\u4ef7\u53ef\u4ee5\u770b\u4f5c\u7ed9\u4e00\u79cd\u72b6\u6001\u548c\u53e6\u4e00\u79cd\u72b6\u6001\u8fde\u4e00\u6761\u6743\u503c\u4e3a\u5176\u4ee3\u4ef7\u7684\u8fb9\u3002\n\n\u95ee\u59cb\u6001\u5230\u7ec8\u6001\u7684\u6700\u77ed\u8def\u3002\n\n\uff08\u4e0d\u662f\u7b2c\u56db\u6b21\u8f6c\u6362\uff01\u4e0d\u662f\u7b2c\u56db\u6b21\u8f6c\u6362\uff01\u4e0d\u662f\u7b2c\u56db\u6b21\u8f6c\u6362\uff01\uff08\u6ed1\u7a3d\uff09\uff09\n\n\n#\u4ee3\u7801\n\n\n```cpp\n#include<bits/stdc++.h>\nconst int INF =2147483647;\nusing namespace std;\nstruct node{\n    int v,w,next;\n}cost[210];\nint head[41000],e;\ninline void insert(int u,int v,int w){\n    cost[++e].next=head[u];\n    cost[e].v=v;\n    cost[e].w=w;\n    head[u]=e;\n}\nint n,m,k;\nint hash[41000],id[41000],Index;\nbool G1[41000],G2[41000];\nvector<int>stone;\nqueue<int>q;\nbool vis[41000],inq[70000];\nint dist[20][41000];\nint step[65];\nint f[70000];\ninline void bfs(){//\u5176\u5b9e\u662fSPFA \n    for(int i=0;i<stone.size();i++){\n        memset(vis,0,sizeof(vis));\n        int v=stone[i];\n        dist[i+1][v]=0;\n        q.push(v);\n        inq[v] = true;\n        while(!q.empty()){\n            int x=q.front();q.pop();\n            inq[x]=false;\n            for(int j=1;j<=m;j++){\n                int z=x+step[j];\n                int y=x-step[j];\n                if(z<=n){\n                    if(dist[i+1][z]>dist[i+1][x]+1){\n                        dist[i+1][z]=dist[i+1][x]+1;\n                        if(!inq[z]){\n                            q.push(z);\n                            inq[z]=true;\n                        }\n                    }\n                }\n                if(y>=1){\n                    if(dist[i+1][y]>dist[i+1][x]+1){\n                        dist[i+1][y]=dist[i+1][x]+1;\n                        if(!inq[y]){\n                            inq[y]=true;\n                            q.push(y);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\ninline void spfa(){\n    int N=(1<<(Index))-1;\n    f[N]=0;\n    inq[N]=true;\n    q.push(N);\n    while(!q.empty()){\n        int v=q.front();q.pop();\n        inq[v]=false;\n        for(int i=1;i<=Index;i++){\n            int x=1<<(Index-i);\n            for(int j=head[i];j;j=cost[j].next){\n                int z=1<<(Index-cost[j].v);\n                int w=cost[j].w;\n                int u=(v^x)^z;\n                if((v&x)&&(v&z)){\n                    if(f[v]+w<f[u]){\n                        f[u]=f[v]+w;\n                        if(!inq[u]){\n                            q.push(u);\n                            inq[u]=true;\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\nint main(){\n    scanf(\"%d%d%d\",&n,&k,&m);\n    int a;\n    n++;\n    for(int i=1;i<=k;i++){\n        scanf(\"%d\",&a);\n        G1[a]=1;\n    }\n    for(int i=1;i<=n;i++)G2[i]=G1[i]^G1[i-1];\n    for(int i=1;i<=n;i++)if(G2[i]){\n        ++Index;\n        stone.push_back(i);\n    }\n    for(int i=1;i<=m;i++)scanf(\"%d\",&step[i]);\n    for(int i=1;i<=Index;i++)\n    for(int j=1;j<=n;j++)dist[i][j]=INF;\n    bfs();\n    for(int i=1;i<=Index;i++)\n    for(int j=i+1;j<=Index;j++){\n        int minn = INF;\n        for(int o=1;o<=n;o++)if(dist[i][o]!=INF&&dist[j][o]!=INF)minn=min(dist[i][o]+dist[j][o],minn);\n        if(minn!=INF){\n            insert(i,j,minn);\n            insert(j,i,minn);\n        }\n    }\n    memset(f,0x3f,sizeof(f));\n    spfa();\n    printf(\"%d\\n\",f[0]);\n    return 0;\n}\n```\n\u6700\u540e\u5728\u8fd9\u91cc\u7ed9\u51fa\u8ba9\u6211DE\u51faBUG\u7684\u6570\u636e\uff0c\u6bd4\u8f83\u5c0f\u5374\u4e5f\u6bd4\u8f83\u6709\u4ee3\u8868\u6027\n\n6 4 2\n1 3 4 5\n\n3 1\n-----------\n\n9 4 4\n4 7 8 9\n\n5 4 3 2\n",
        "postTime": 1509883366,
        "uid": 55644,
        "name": "shadow__",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3943 \u3010\u661f\u7a7a\u3011"
    },
    {
        "content": "\n\u4e00\u9053\u9690\u85cf\u5f97\u5341\u5206\u9690\u853d\u7684\u72b6\u538b$DP$\u3002\n\n\u9898\u610f\u5927\u81f4\u662f\u7ed9\u4f60\u4e00\u4e2a01\u4e32\uff0c\u6bcf\u6b21\u64cd\u4f5c\u53ef\u4ee5\u5bf9\u89c4\u5b9a\u533a\u95f4\u957f\u5ea6\u76840\uff0c1\u8fdb\u884c\u4ea4\u6362\u3002\n\n\u95ee\u6700\u5c11\u7528\u591a\u5c11\u6b21\u624d\u80fd\u5c06\u4e32\u7684\u6bcf\u4e00\u4f4d\u53d8\u4e3a1\u3002\n\n> \u5999\u5904\u4e00\n\n\u770b\u5230\u533a\u95f4\u4fee\u6539\u6211\u4eec\u60f3\u5230\u5229\u7528\u5dee\u5206\u6c42\u89e3\u3002\n\n\u6bcf\u4e00\u6b21\u64cd\u4f5c\u90fd\u76f8\u5f53\u4e0e\u5bf9\u64cd\u4f5c\u533a\u95f4\u7684\u6bcf\u4e00\u4f4d\u4e0e\u4e00\u5f02\u6216($1\\hat{}1=0 \\  \\  \\ 0\\hat{}1=1$)\n\n\u6240\u4ee5\u53ef\u4ee5\u628a\u539f\u95ee\u9898\u8f6c\u53d8\u5728\u5dee\u5206\u6570\u7ec4$(dif)$\u4e0a\u8fdb\u884c!\n\n\u5bf9$[L,R]$\u64cd\u4f5c\u5c31\u7b49\u6548\u4e8e$dif[L]\\hat{}1,dif[R+1]\\hat{}1$\n\n\u6240\u4ee5\u539f\u95ee\u9898\u8f6c\u5316\u4e3a\u7ed9\u4f60\u4e00\u4e2a01\u4e32\uff0c\u6bcf\u6b21\u64cd\u4f5c\u53ef\u4ee5\u5c06\u4e32\u4e2d\u7684\u4e24\u4e2a$1$\u53d8\u4e3a$0$\uff0c\u6709\u4e00\u4e2a\u4e0e\u4e24\u4e2a$1$\u8ddd\u79bb\u76f8\u5e94\u7684\u8d39\u7528\u3002\n\n\u95ee\u6700\u5c11\u82b1\u8d39\u591a\u5c11\u624d\u80fd\u5c06\u4e32\u7684\u6bcf\u4e00\u4f4d\u53d8\u4e3a$0$\u3002\n\n\u4e3a\u4ec0\u4e48\u8981\u5c06\u5dee\u5206\u6570\u7ec4\u5168\u90e8\u53d8\u4e3a$0$\u5462\uff1f \n\n\u591a\u4e3e\u51e0\u4e2a\u4f8b\u5b50\u5f52\u7eb3\u4e00\u4e0b\u53ef\u4ee5\u53d1\u73b0\u5168$0$\u7684\u5dee\u5206\u6570\u7ec4\u5bf9\u5e94\u7684\u539f\u4e32\u5168\u662f$1$ORZ\u3002\n\n> \u5999\u5904\u4e8c\n\n\u4e0a\u9762\u8bf4\u5230\u6d88\u53bb\u5dee\u5206\u6570\u7ec4\u4e2d\u4e24\u4e2a$1$\u6240\u9700\u8981\u7684\u8d39\u7528\u4e0e\u5b83\u4eec\u7684\u8ddd\u79bb$x$\u6709\u5173\u3002\n\n\u56e0\u4e3a\u9898\u76ee\u7ed9\u6211\u4eec\u9650\u5236\u4e86\u6bcf\u6b21\u64cd\u4f5c\u7684\u533a\u95f4\u957f\u5ea6\uff0c\u4e5f\u5c31\u662f$x-1$\u3002\n\n\u6240\u4ee5\u6709\u4e9b\u8ddd\u79bb\u7684\u4e24\u4e2a$1$\u6211\u4eec\u65e0\u6cd5\u901a\u8fc7\u4e00\u6b21\u64cd\u4f5c\u6d88\u53bb\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50:\n\n\u200b\t\u82e5\u64cd\u4f5c\u7684\u957f\u5ea6\u4e3a$4$,$1$\uff0c\u539f\u5e8f\u5217\u4e3a$1000$\uff1a\n\n| \u539f\u4e32 | \u5dee\u5206\u6570\u7ec4 |\n| :--: | :------: |\n| 1000 |  11000   |\n| 0111 |  01001   |\n| 1111 |  00000   |\n\n\u8ddd\u79bb\u4e3a$3$\u7684\u4e24\u4e2a$1$\u9700\u8981\u7531$4-1$\u8f6c\u79fb\u5f97\u5230\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8981\u63d0\u524d\u9884\u5904\u7406\u51fa\u6d88\u53bb\u8ddd\u79bb\u4e3a$x$\u7684\u4e24\u4e2a$1$\u9700\u8981\u6700\u5c11\u7684\u64cd\u4f5c\u6b21\u6570\u3002\n\n\u4e0d\u59a8\u5c06k\u4e2a\u53ef\u6267\u884c\u7684\u533a\u95f4\u957f\u5ea6\u62bd\u8c61\u4e3a$k$\u4e2a\u4f53\u79ef\u4e3a$len$\u7684\u7269\u54c1\u548c$k$\u4e2a\u4f53\u79ef\u4e3a$-len$\u3002\n\n\u7528\u6700\u5c0f\u7684\u7269\u54c1\u6765\u586b\u5145\u80cc\u5305\uff0c\u80cc\u5305\u7684\u5927\u5c0f\u5c31\u662f\u6d88\u53bb\u8ddd\u79bb\u4e3a$x$\u7684\u4e24\u4e2a$1$\u9700\u8981\u6700\u5c11\u7684\u64cd\u4f5c\u6b21\u6570\u3002\n\n\u6ce8\u610f:\u4e0d\u80fd\u5c06\u6b63\u8d1f\u4f53\u79ef\u7684\u7269\u54c1\u653e\u5728\u4e00\u8d77DP,\u5b83\u4eec\u7684\u8f6c\u79fb\u987a\u5e8f\u4e0d\u540c\uff0c\u8981\u5206\u4e24\u4e2a\u5199\u3002\n\n> \u5999\u5904\u4e09\n\n\u5229\u7528\u80cc\u5305\u5904\u7406\u5b8c\u540e\uff0c\u5c31\u53ef\u4ee5\u6109\u5feb\u7684\u72b6\u538b$DP$\u4e86\u3002\n\n\u4f46\u662f\u4e32\u7684\u957f\u5ea6\u663e\u7136\u4e0d\u7b26\u5408\u72b6\u538b\u7684\u8981\u6c42\u3002\n\n\u7ecf\u8fc7\u4e00\u756a\u89c2\u5bdf\u540e\u6211\u4eec\u53d1\u73b0\u6700\u5f00\u59cb\u6700\u591a\u53ea\u67098\u4e2a\u706f\u6ce1\u662f\u7184\u706d\u7684\u3002\n\n\u6240\u4ee5\u5dee\u5206\u4e32\u4e2d\u6700\u591a\u53ea\u6709$16$\u4e2a$1$\u3002\n\n\u597d\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6240\u6709\u7684$1$\u5355\u72ec\u63d0\u51fa\u6765\uff0c\u8bb0\u5f55\u5b83\u4eec\u5728\u539f\u4e32\u7684\u4f4d\u7f6e(\u7528\u4e8e\u8ba1\u7b97\u64cd\u4f5c\u6b21\u6570)\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u72b6\u6001\uff0c\u4ece\u5de6\u5230\u53f3\u786e\u5b9a\u4e00\u4e2a$1$\u7684\u4f4d\u7f6e\uff0c\u518d\u53bb\u679a\u4e3e\u53e6\u4e00\u4e2a$1$\u7684\u4f4d\u7f6e\u3002\n\n\u6700\u540e\u8f93\u51fa$f[0]$\u5373\u53ef\u3002\n\n\u6ce8\u610f:\u6211\u4eec\u662f\u5c06\u5dee\u5206\u4e32\u4e2d\u7684$1$\u63d0\u51fa\u6765\u72b6\u538b\uff0c\u6240\u4ee5\u521d\u72b6\u6001\u5168\u662f$1$\uff0c\u672b\u72b6\u6001\u5168\u662f$0$\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 40005\n#define Epworth return 0 \nusing namespace std;\nint n,m,k,xx; \nint dif[maxn];\nint pos[maxn],tail;\nint len[maxn],cost[maxn];\nint f[1<<17];\nint main(){\n\tcin>>n>>m>>k;\n\tfor(int i=1;i<=m;i++) cin>>xx,dif[xx]^=1,dif[xx+1]^=1;\n\tfor(int i=1;i<=k;i++) cin>>len[i];\n\tfor(int i=1;i<=n+1;i++){\n\t\tif(dif[i]) pos[++tail]=i;\n\t}\n\tmemset(cost,0x3f,sizeof(cost));\n\tcost[0]=0;\n\tfor(int i=1;i<=k;i++){\n\t\tfor(int j=len[i];j<=n;j++){\n\t\t\tcost[j]=min(cost[j],cost[j-len[i]]+1);\n\t\t}\n\t}\n\tfor(int i=1;i<=k;i++){\n\t\tfor(int j=n-len[i];j>=0;j--){\n\t\t\tcost[j]=min(cost[j],cost[j+len[i]]+1);\n\t\t}\n\t}\n\tint all=(1<<tail)-1;\n\tmemset(f,0x3f,sizeof(f));\n\tf[all]=0;\n\tfor(int i=all;i>=0;i--){\n\t\tfor(int j=1;j<=tail;j++){\n\t\t\tif(!((1<<(j-1))&i)) continue;\n\t\t\tfor(int k=j+1;k<=tail;k++){\n\t\t\t\tif(!((1<<(k-1))&i)) continue;\n\t\t\t\tint x=~((~i)|(1<<(j-1))|(1<<(k-1)));\n\t\t\t\tf[x]=min(f[x],f[i]+cost[pos[k]-pos[j]]);\n\t\t\t}\n\t\t}\n\t}\n\tcout<<f[0]<<endl;\n\tEpworth;\n} \n```\n\n### \u7b49\u7b49\u8fd8\u6ca1\u5b8c\uff01\uff01\uff01\n\n\u597d\u4e86\uff0c\u4e0a\u9762\u8fd9\u4e2a\u6f0f\u6d1e\u767e\u51fa\u7684\u4ee3\u7801\u5df2\u7ecf\u53ef\u4ee5AC\u8fd9\u9053\u9898\u4e86\u3002\n\n\u4f46\u662f\u5bf9\u4e8e\u67d0\u4e9b\u6570\u636e\uff0c\u5b83\u662f\u9519\u8bef\u7684\u3002\n\n\u4e0b\u9762\u8ba9\u6211\u4eec\u6765\u6279\u5224\u4e00\u4e0b\u4e0a\u9762\u7684\u4ee3\u7801\u3002\n\n\u770b\u770b\u4e0b\u9762\u8fd9\u7ec4\u6570\u636e\uff1a\n\n```cpp\n7 2 2\n2 3\n5 4\n```\n\n| 1001111 |\n| :-----: |\n| 1000000 |\n| 1111110 |\n| 1100000 |\n| 1111111 |\n\n\u4e0d\u96be\u53d1\u73b0\u5b83\u53ef\u4ee5\u901a\u8fc7$4$\u6b21\u64cd\u4f5c\u628a\u6574\u4e2a\u706f\u6ce1\u4e32\u70b9\u4eae\u3002\n\n\u4f46\u4e0a\u9762\u8dd1\u51fa\u6765\u662f$INF$,\u4e5f\u5c31\u662f\u65e0\u89e3\u3002\n\n\u4e3a\u4ec0\u4e48\u5462?\n\n\u56e0\u4e3a\u5728\u4e0a\u9762\u8dd1\u5b8c\u5168\u80cc\u5305\u6b63\u8d1f\u4ef7\u503c\u662f\u5206\u5f00\u8dd1\u7684\uff0c\u7ed3\u679c\u662f\u4e0d\u5b8c\u6574\u7684\u3002\n\n$4,5$\u80fd\u51d1\u51fa$1$\uff0c\u5f53\u7136\u4e5f\u80fd\u51d1\u51fa$2$\u3002\n\n\u4f46$(5-4+5-4)$\u7684\u51b3\u7b56\u662f\u4e0a\u9762\u8dd1\u4e0d\u51fa\u6765\u7684\uff0c$(5+5-4-4)$\u53c8\u8d85\u51fa\u4e86\u80cc\u5305\u7684\u8303\u56f4\u3002\n\n\u4ee3\u4ef7\u8ba1\u7b97\u7684\u6b8b\u7f3a\u5c31\u53ef\u80fd\u9020\u6210\u7ed3\u679c\u7684\u9519\u8bef\u3002\n\n\n\n\u4f46\u5047\u5b9a\u6211\u4eec\u89e3\u51b3\u7684\u4e0a\u9762\u7684\u95ee\u9898\uff0c\u4ecd\u7136\u662f\u9519\u7684QAQ\u3002\n\n\u518d\u6765\u770b\u770b\u4e0b\u9762\u8fd9\u7ec4\u6570\u636e\uff1a\n\n```cpp\n6 2 2\n3 4\n5 3\n```\n\n\u6b63\u786e\u7b54\u6848\u5e94\u8be5\u4e3a$6$,\u4f46\u4e0a\u9762\u8dd1\u51fa\u6765\u662f$2$\u3002\n\n\u662f\u7684\u53c8\u9519\u4e86(\u6108\u53d1\u6000\u7591$AC$\u7684\u771f\u5b9e\u6027)\u3002\n\n\u8fd9\u53c8\u662f\u4e3a\u4ec0\u4e48\u5462?\n\n\u5728\u5b8c\u5168\u80cc\u5305\u4e2d\uff0c\u6211\u4eec\u53ea\u8003\u8651\u4e86\u5728\u5e8f\u5217\u957f\u5ea6\u7684\u9650\u5236\u4e0b\u80fd\u5426\u51d1\u51fa\u67d0\u4e2a\u8ddd\u79bb\u3002\n\n\u4f46\u6ca1\u6709\u8003\u8651\u6d88\u53bb\u7684\u4e24\u4e2a$1$\u5728\u5e8f\u5217\u4e2d\u7684\u5b9e\u9645\u4f4d\u7f6e\u3002\n\n\u5728\u9519\u8bef\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u8ba1\u7b97\u51fa\u6d88\u9664\u8ddd\u79bb\u4e3a$2$\u7684\u4e24\u4e2a$1$\u53ea\u9700\u8981\u64cd\u4f5c\u4e24\u6b21$(5-3=2)$\n\n\u4f46\u5b9e\u9645\u4e0a$5$\u662f\u6267\u884c\u4e0d\u4e86\u7684\u3002\n\n| 110011(0) |\n| :-------: |\n| 111100(1) |\n| 111111(0) |\n\n\u7406\u60f3\u7684\u72b6\u6001\u4e0b\u6211\u4eec\u5728\u6700\u540e\u4e00\u4e2a\u706f\u6ce1\u540e\u865a\u6784\u4e86\u4e00\u4e2a\u5047\u706f\u6ce1\u534f\u52a9\u64cd\u4f5c\uff0c\u6700\u540e\u628a\u5b83\u7184\u706d\u4e86\u3002\n\n\u4f46\u8fd9\u660e\u663e\u662f\u4e0d\u88ab\u5141\u8bb8\u7684\u3002\n\n\u4f46\u5982\u679c\u662f\u8fd9\u6837\u5374\u53c8\u53ef\u4ee5\u4e86\u3002\n\n```cpp\n6 2 2\n2 3\n5 3\n```\n\n\u5728\u5dee\u5206\u4e32\u4e2d\u4e24\u4e2a$1$\u7684\u8ddd\u79bb\u5e76\u6ca1\u6709\u6539\u53d8\u3002\n\n\u6240\u4ee5\u5728\u672c\u9898\u4e2d$1$\u7684\u5b9e\u9645\u4f4d\u7f6e\u4e5f\u4f1a\u5f71\u54cd\u7ed3\u679c\uff0c\u4e0d\u53ea\u662f\u76f8\u5bf9\u4f4d\u7f6e\u3002\n\n\n\n.......\n\n\u7ecf\u8fc7\u4e00\u756a\u601d\u7d22\uff0c\u6211\u4eec\u8fd8\u662f\u597d\u597d\u7684$BFS$\u5427\u3002\n\n$BFS$\u662f\u4ece\u6bcf\u4e2a\u4e00\u7684\u5b9e\u9645\u4f4d\u7f6e\u51fa\u53d1\u5224\u65ad\u5b83\u80fd\u5230\u8fbe\u7684\u5730\u65b9\uff0c\u6545\u4e0d\u4f1a\u5b58\u5728\u4e0a\u9762\u7684\u95ee\u9898\u3002\n\n## \u6b63\u786e\u7684\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define inf 0x3f3f3f3f\n#define maxn 40005\n#define Epworth return 0 \nusing namespace std;\nint n,m,k,xx; \nint dif[maxn];\nint pos[maxn],tail;\nint len[maxn];\nint dist[maxn];\nint cost[20][20];\nint f[1<<17];\nqueue<int> q;\nvoid bfs(int s){\n\tmemset(dist,0x3f,sizeof(dist));\n\tq.push(pos[s]);\n\tdist[pos[s]]=0;\n\twhile(!q.empty()){\n\t\tint x=q.front();\n\t\tq.pop();\n\t\tfor(int i=1;i<=k;i++){\n\t\t\tint a=x-len[i];\n\t\t\tint b=x+len[i];\n\t\t\tif(a>=1&&dist[a]==inf){\n\t\t\t\tdist[a]=dist[x]+1;\n\t\t\t\tq.push(a);\n\t\t\t}\n\t\t\tif(b<=n+1&&dist[b]==inf){\n\t\t\t\tdist[b]=dist[x]+1;\n\t\t\t\tq.push(b);\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=tail;i++){\n\t\tif(dist[pos[i]]!=inf){\n\t\t\tcost[s][i]=dist[pos[i]];\n\t\t}\n\t}\n}\nint main(){\n    cin>>n>>m>>k;\n    for(int i=1;i<=m;i++) cin>>xx,dif[xx]^=1,dif[xx+1]^=1;\n    for(int i=1;i<=k;i++) cin>>len[i];\n    for(int i=1;i<=n+1;i++){\n        if(dif[i]) pos[++tail]=i;\n    }\n    memset(cost,0x3f,sizeof(cost));\n    for(int i=1;i<=tail;i++) bfs(i);\n    int all=(1<<tail)-1;\n    memset(f,0x3f,sizeof(f));\n    f[all]=0;\n    for(int i=all;i>=0;i--){\n        for(int j=1;j<=tail;j++){\n            if(!((1<<(j-1))&i)) continue;\n            for(int k=j+1;k<=tail;k++){\n                if(!((1<<(k-1))&i)) continue;\n                int x=~((~i)|(1<<(j-1))|(1<<(k-1)));\n                f[x]=min(f[x],f[i]+cost[j][k]);\n            }\n        }\n    }\n    cout<<f[0]<<endl;\n    Epworth;\n}  \n```\n\n",
        "postTime": 1559707612,
        "uid": 111095,
        "name": "Epworth",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3943 \u3010\u661f\u7a7a\u3011"
    },
    {
        "content": "\u5dee\u5206\u662f\u4e2a\u5e38\u7528\u7684\u6280\u5de7\uff0c\u7ffb\u8f6c\u8fde\u7eed\u7684\u4e00\u6bb501\u5e8f\u5217\u5f88\u5bb9\u6613\u60f3\u5230\u7ffb\u8f6c\u5f02\u6216\u5dee\u5206\u5e8f\u5217\u4e0a\u7684\u4e24\u4e2a\u6570\u3002\n\n\n\u5dee\u5206\u5e8f\u5217\u4e0a\u6700\u591a\u6709$2k$\u4e2a1\uff0c\u5e76\u4e14\u80af\u5b9a\u662f\u5076\u6570\u4e2a\u3002\u6bcf\u6b21\u53ef\u4ee5\u6d88\u9664\u4e24\u4e2a1\uff0c\u6d88\u9664\u7684\u4ee3\u4ef7\u4e0e\u8fd9\u4e24\u4e2a1\u7684\u8ddd\u79bb\u76f8\u5173\uff0c\u6c42\u5c06\u6240\u67091\u6d88\u9664\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\n\n\n\u6d88\u9664\u7684\u4ee3\u4ef7\u7528\u5b8c\u5168\u80cc\u5305\u6216\u8005BFS\u90fd\u53ef\u4ee5\u6c42\u51fa\u3002\u7528\u5b8c\u5168\u80cc\u5305\u6c42\u6d88\u9664\u4ee3\u4ef7\uff0c\u76f8\u5f53\u4e8e\u628a\u6bcf\u4e2a\u53ef\u4ee5\u7ffb\u8f6c\u7684\u957f\u5ea6$x$\uff0c\u770b\u505a\u4f53\u79ef\u5206\u522b\u4e3a$x$\u548c$-x$\u7684\u4e24\u4e2a\u7269\u54c1\u3002\n\n\n\u53ea\u6709$T\\leq 2k\\leq 16$\u4e2a\u9700\u8981\u7ffb\u8f6c\u76841\uff0c\u76f4\u63a5\u72b6\u6001\u538b\u7f29DP\u5373\u53ef\u3002\n\n\n\u6bcf\u6b21\u8f6c\u79fb\u65f6\u53ef\u4ee5\u5148\u56fa\u5b9a\u9009\u62e9\u6700\u5c0f\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u518d\u679a\u4e3e\u53e6\u4e00\u4e2a\u4f4d\u7f6e\u3002\n\n\n\u65f6\u95f4\u590d\u6742\u5ea6$\\mathcal{O}(NM+2^T T)$\u3002\n\n\n```cpp\n#include <cctype>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#define rep(i,x,y) for (int i=x; i<=y; ++i)\n#define repd(i,x,y) for (int i=x; i>=y; --i)\n\nint get()\n{\n    char c;\n    while (!isdigit(c=getchar()));\n    int k=c-'0';\n    for (; isdigit(c=getchar()); k=k*10+c-'0');\n    return k;\n}\n\nusing namespace std;\nconst int N=4e4+10,S=1<<16|1;\nint n,k,m,t,p[16],b[65],w[N],f[S],cnt[S],s;\n\nint main()\n{\n    n=get()+1,k=get(),m=get();\n    for (int i=k,j=-1,x; i--; j=x)\n        if ((x=get())==j+1)\n            p[t-1]=x+1;\n        else\n            p[t++]=x,p[t++]=x+1;\n    memset(w,63,sizeof(w)),w[0]=0;\n    rep(i,1,m)\n        b[i]=get();\n    rep(i,1,m)\n        rep(j,b[i],n)\n            w[j]=min(w[j],w[j-b[i]]+1);\n    rep(i,1,m)\n        repd(j,n-b[i],0)\n            w[j]=min(w[j],w[j+b[i]]+1);\n    memset(f,63,sizeof(f)),f[0]=0;\n    s=(1<<t)-1;\n    rep(i,1,s)\n    {\n        if ((cnt[i]=cnt[i>>1]+(i&1))&1)\n            continue;\n        int j=0,x;\n        for (; !((i>>j)&1); ++j);\n        x=i^(1<<j);\n        rep(k,j+1,t-1)\n            if ((x>>k)&1)\n                f[i]=min(f[i],f[x^(1<<k)]+w[p[k]-p[j]]);\n    }\n    printf(\"%d\",f[s]);\n    return 0;\n}\n```\n\n\u8fd8\u53ef\u4ee5\u7528\u4e00\u822c\u56fe\u6700\u5927\u6743\u5339\u914d\u505a\u5230$\\mathcal{O}(NM+T^3)$\u3002\uff08\u5927\u96fe\uff09\n",
        "postTime": 1510642486,
        "uid": 2508,
        "name": "1gnat2",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3943 \u3010\u661f\u7a7a\u3011"
    },
    {
        "content": "## [P3943](\"https://www.luogu.org/problem/P3943\")\n\n### \u601d\u7ef4\u597d\u9898\n\n\u63a5\u4e0b\u6765, \u60a8\u5c06\u770b\u5230 :\n\n* \u5dee\u5206(??!)\n* bfs\n* \u72b6\u538bdp\n\n### \u7b2c\u4e00\u6ce2\u64cd\u4f5c(\u5dee\u5206):\n\nd[i] = a[i] ^ a[i-1]\n\n\u4f8b\u5b50: 10011100 (0\u8868\u793a\u4e0d\u4eae, 1\u4e3a\u4eae\u4e86) \u5b83\u7684\"\u5dee\u5206\"\u6570\u7ec4\u4e3a 11010010\n\n\u5403\u74dc\u7fa4\u4f17: \u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u8868\u793a\n\nlet's \u6a21\u62df it\n\n\u539f\u72b6\u6001 : 10011100 -> 11010010 \u5c06\u7b2c\u56db\u76cf\u5230\u7b2c\u516d\u76cf\u641e\u4e00\u4e0b 10000000 -> 11000000\n\nfa\u2642\u73b0\u4e86\u6ca1\u6709, \u5dee\u5206\u6570\u7ec4\u4f4d\u7f6e4, 7\u6539\u53d8, \u56e0\u4e3a\u5f02\u6216\u4f7f4\u52306\u540c\u65f6\u6539\u53d8, \u4ed6\u4eec\u76f8\u90bb\u4e24\u4e2a\u5f02\u6216\u503c\u4e0d\u4f1a\u6539\u53d8\n\n\u800c3\u548c4, 6\u548c7\u4e2d\u6709\u4e00\u4e2a\u503c\u6539\u53d8, \u90a3\u4e48\u4ed6\u4eec\u5f02\u6216\u503c\u4e5f\u4f1a\u6539\u53d8\n\n\u540c\u6837\u7684, \u5982\u679c\u64cd\u4f5c\u7b2c\u56db\u76cf\u5230\u7b2c\u4e03\u76cf, \u53d1\u73b0\u5dee\u5206\u6570\u7ec4\u4f4d\u7f6e4\u76841\u79fb\u5230\u4e86\u4f4d\u7f6e8(\u6c5d\u53ef\u6a21\u62df\u5f97\u77e5)\n\n\u6240\u4ee5\u6211\u4eec\u8981\u6c42\u51fa\u6240\u6709\u76841,\u79fb\u52a8\u6700\u5c11\u51e0\u6b21\u548c\u53e6\u4e00\u4e2a1\u914d\u5bf9\n\n### \u7b2c\u4e8c\u6ce2\u64cd\u4f5c(bfs):\n\n\u9884\u5904\u7406\u51fa\u6bcf\u4e00\u4e2a1\u5230\u5176\u4ed61\u7684\u8ddd\u79bb, bfs\u5c31\u884c\u5566\n\n### \u7b2c\u4e09\u6ce2\u64cd\u4f5c(\u72b6\u538bdp):\n\n\u8bbe\u8ba1\u72b6\u6001S, f[S]\u8868\u793a\u6d88\u9664\u70b9\u96c6S\u81f3\u5c11\u8981\u64cd\u4f5c\u591a\u5c11\u6b21\n\nf[S] = min(f[S], f[S-'\u4e24\u4e2a\u70b9'] + \u4e24\u70b9\u76f8\u6d88\u8981\u8d70\u591a\u5c11\u6b21);\n\n\u4ee3\u7801:\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nconst int N = 40050;\nint b[70], n, m, k;\nint a[50], f[N];\nint pos[50], g[1005000];\ninline int to(int x) {\n\treturn 1 << x;\n}\nqueue<int> q;\nint main() {\n\tcin >> n >> k >> m;\n\tfor (int i = 1;i <= k; i++) \n\t\tcin >> a[i];\n\tsort(a + 1,a + k + 1);\n\tint cnt = 1;\n\tpos[1] = a[1];\n\tfor (int i = 2;i <= k; i++) \n\tif (a[i] != a[i-1] + 1) {\n\t\tpos[++cnt] = a[i-1]+1;\n\t\tpos[++cnt] = a[i];\n\t}\n\tpos[++cnt] = a[k]+1;\n\tfor (int i = 1;i <= m; i++) cin >> b[i];\n\tmemset(f, 0x3f, sizeof(f));\n\tf[0] = 0;\n\tq.push(0);\n\twhile (q.size()) {\n\t\tint x = q.front(); q.pop();\n\t\tfor (int i = 1;i <= m; i++) {\n\t\t\tint y = x + b[i];\n\t\t\tif (y <= n && f[y] > n) {\n\t\t\t\tf[y] = f[x] + 1;\n\t\t\t\tq.push(y);\n\t\t\t}\n\t\t\ty = x - b[i];\n\t\t\tif (y > 0 && f[y] > n) {\n\t\t\t\tf[y] = f[x] + 1;\n\t\t\t\tq.push(y);\n\t\t\t}\n\t\t}\n\t}\t\t\n\tmemset(g, 0x3f, sizeof(g));\n\tg[0] = 0;\n\tfor (int i = 1;i < 1 << cnt; i++) {\n\t\tint tmp = 0;\n\t\tfor (int j = 1;j <= cnt; j++) \n\t\t\tif (i & to(j-1)) tmp++;\n\t\tif (tmp & 1) continue;\n\t\tfor (int j = 1;j <= cnt; j++) \n\t\t\tif (i & to(j-1))\n\t\t\tfor (int k = j + 1;k <= cnt; k++) \n\t\t\t\tif (i & to(k-1)) \n\t\t\t\t\tg[i] = min(g[i], g[i^to(k-1)^to(j-1)] + f[pos[k]-pos[j]]);\n\t}\n\tcout << g[(1 << cnt) - 1] << endl;\n\treturn 0;\n}\n```\n\n",
        "postTime": 1570287214,
        "uid": 122144,
        "name": "hs_black",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3943 \u3010\u661f\u7a7a\u3011"
    },
    {
        "content": "\u56e0\u4e3a\u8fd9\u4e2a$k<=8$\u6240\u4ee5\u60f3\u5230\u72b6\u538b\n\n\u4e3b\u8981\u601d\u60f3\u662f\u5dee\u5206\uff0c\n\u4ee4\u706f\u6697\u4e3a1\uff0c\u706f\u4eae\u4e3a0\uff0c\n\u6bd4\u5982\u4e00\u884c\u706f\u7684\u60c5\u51b5\u662f\n\n$a:01001100$\n\n\u90a3\u4e48\u5bf9\u5e94\u5dee\u5206\u6570\u7ec4\u5c31\u662f\n\n$b:011010100$\n\n\u53ef\u4ee5\u53d1\u73b0$a_i=b_1xorb_2xor...xorb_i$\n\n\u7136\u540e\u6211\u5bf9\u4e8e\u533a\u95f4$[l,r]$\u8fdb\u884c\u53cd\u8f6c\u64cd\u4f5c\uff0c\u5728\u5dee\u5206\u6570\u7ec4\u91cc\u7684\u8868\u73b0\u662f\n$b_l=b_lxor1,b_{r+1}=b_{r+1}xor1$\n\n\u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a\u628a$b$\u6570\u7ec4\u53d8\u6210\u5168\u90e8\u662f0\n\n\u53d1\u73b0$b$\u6570\u7ec41\u7684\u4e2a\u6570\u4e00\u5b9a\u662f\u5076\u6570\u4e2a\uff0c\u4e14\u6700\u591a$2k$\u4e2a\n\n\u53ef\u4ee5\u8003\u8651\u6bcf\u6b21\u6d88\u9664\u4e24\u4e2a1\uff0c\u800c\u6d88\u9664\u8fd9\u4e24\u4e2a1\u7684\u4ee3\u4ef7\u901a\u8fc7\u9884\u5904\u7406\u6c42\u51fa\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u72b6\u538b\n\n```\n\u5982\u679c\u8981\u628a10000001\u53d8\u6210\u51680\uff0c\u4f46\u662f\u6211\u53ea\u80fd\u7ffb\u8f6c\u957f\u5ea6\u4e3a3\u30014\n\u53ef\u4ee5\u514800010001\u8868\u793a\u5bf9[1,3]\u7ffb\u8f6c\n\u518d00000000\u8868\u793a\u5bf9[4,7]\u7ffb\u8f6c\n\u8bf4\u660e\u5bf9\u4e8e\u4e24\u4e2a\u76f8\u5dee\u4e3ax\u76841\uff0c\u8981\u628a\u4ed6\u4fe9\u53d8\u62100\uff0c\u9009\u62e9x=b1+b2+...+by\n\u591a\u6b21\u7ffb\u8f6c\u7ec4\u5408\u662f\u53ef\u4ee5\u7684\n```\n\n\n```\n\u6216\u8005\u8981\u628a00110000\u53d8\u6210\u51680\uff0c\u4f46\u662f\u6211\u53ea\u80fd\u7ffb\u8f6c\u957f\u5ea6\u4e3a3\u30014\n\u53ef\u4ee5\u514800010010\u8868\u793a\u5bf9[3,6]\u7ffb\u8f6c\n\u518d00000000\u8868\u793a\u5bf9[4,6]\u7ffb\u8f6c\n\u8bf4\u660e\u7ffb\u8f6c\u533a\u95f4\u957f\u5ea6\u4e4b\u95f4\u76f8\u51cf\u4e5f\u662f\u53ef\u4ee5\u7684\n\n```\n\n\u6240\u4ee5\u5bf9\u4e8e\u67d0\u4e00\u4e2a\u957f\u5ea6\uff0c\u901a\u8fc7$b$\u6570\u7ec4\u52a0\u52a0\u51cf\u51cf\u53ef\u4ee5\u5f97\u5230\u81ea\u5df1\u7684\u957f\u5ea6\uff0c\u9488\u5bf9\u5408\u7406\u7684\u60c5\u51b5\u4e2d\u6c42\u51fa\u6700\u5c11\u7ffb\u8f6c\u6b21\u6570\uff0c\u901a\u8fc7\u5b8c\u5168\u80cc\u5305\u6c42\u5f97\n\nCode\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#define maxn 40010\n#define maxm 100010\nusing namespace std;\nint a[maxn], dp[maxm], cost[maxn], b[maxn], pos[maxn], power[25], tot, n, m, k;\n\ninline int read(){\n\tint s = 0, w = 1;\n\tchar c = getchar();\n\tfor (; !isdigit(c); c = getchar()) if (c == '-') w = -1;\n\tfor (; isdigit(c); c = getchar()) s = (s << 1) + (s << 3) + (c ^ 48);\n\treturn s * w;\n}\n\nint main(){\n\tn = read(), k = read(), m = read();\n\tfor (int i = 1; i <= k; ++i){\n\t\tint x = read();\n\t\ta[x] ^= 1, a[x + 1] ^= 1;\n\t}\n\tfor (int i = 1; i <= n; ++i) cost[i] = 1e9;\n\tfor (int i = 1; i <= m; ++i) b[i] = read();\n\tfor (int i = 1; i <= m; ++i)\n\t\tfor (int j = b[i]; j <= n; ++j) cost[j] = min(cost[j], cost[j - b[i]] + 1);\n\tfor (int i = 1; i <= m; ++i)\n\t\tfor (int j = n - b[i]; j >= 0; --j) cost[j] = min(cost[j], cost[j + b[i]] + 1);\n\tfor (int i = 1; i <= n + 1; ++i)\n\t\tif (a[i]) pos[++tot] = i;\n\tpower[0] = 1;\n\tfor (int i = 1; i <= 20; ++i) power[i] = power[i - 1] << 1;\n\tfor (int i = 1; i < power[tot]; ++i) dp[i] = 1e9;\n\tfor (int i = 0; i < power[tot]; ++i)\n\t\tfor (int j = 1; j <= tot; ++j)\n\t\t\tif (!(i & power[j - 1]))\n\t\t\t\tfor (int k = j + 1; k <= tot; ++k)\n\t\t\t\t\tif (!(i & power[k - 1]))\n\t\t\t\t\t\tdp[i | power[j - 1] | power[k - 1]] = min(dp[i | power[j - 1] | power[k - 1]], dp[i] + cost[pos[k] - pos[j]]);\n\tprintf(\"%d\\n\", dp[power[tot] - 1]);\n\treturn 0;\n}\n```\n",
        "postTime": 1599640148,
        "uid": 51719,
        "name": "ModestCoder_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3943 \u3010\u661f\u7a7a\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u63d0\u4f9b\u7684\u662f std\u3002\n\n\u5982\u679c\u9700\u8981\u9898\u89e3\uff0c\u8bf7\u53c2\u8003 [ppt](https://www.luogu.org/discuss/show?postid=26609)\uff0c\u6216\u8005\u5176\u4ed6\u540c\u5b66\u7684\u9898\u89e3\u3002\n\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef pair<int, int> pii;\n#define fir first\n#define sec second\n#define INF 0x3f3f3f3f\n#define MAXN 40005\n#define TOP 18\n\nint n, K, m, cnt = 0;\nbool a[MAXN];\nint dis[18][MAXN], b[70];\npii p[18];\n\nqueue <int> q;\n\nvoid bfs(pii st) {\n    for (int i = 0; i < MAXN; i++) dis[st.fir][i] = INF;\n    q.push(st.sec);\n    dis[st.fir][st.sec] = 0;\n    while (!q.empty()) {\n        int x = q.front(); q.pop();\n        for (int i = 1; i <= m; i++) {\n            if (x - b[i] >= 0 && dis[st.fir][x - b[i]] > dis[st.fir][x] + 1) {\n                dis[st.fir][x - b[i]] = dis[st.fir][x] + 1;\n                q.push(x - b[i]);\n            }\n            if (x + b[i] <= n && dis[st.fir][x + b[i]] > dis[st.fir][x] + 1) {\n                dis[st.fir][x + b[i]] = dis[st.fir][x] + 1;\n                q.push(x + b[i]);\n            }\n        }\n    }\n}\n\nint dp[1 << 18];\n\nint solve(int mask) {\n    if (dp[mask] != -1) return dp[mask];\n    if (mask == 0) return 0;\n    int &ret = dp[mask]; ret = INF;\n    int x = 0; while (!(mask & (1 << x))) x++;\n    for (int i = x + 1; i < 2 * K; i++)\n        if (mask & (1 << i)) ret = min(ret, solve(mask ^ (1 << x) ^ (1 << i)) + dis[x][p[i].sec]);\n    return ret;\n}\n\nint main() {\n    scanf(\"%d%d%d\", &n, &K, &m);\n    for (int i = 1, x; i <= K; i++) scanf(\"%d\", &x), a[x] = true;\n    for (int i = 1; i <= m; i++) scanf(\"%d\", &b[i]);\n    for (int i = 0; i <= n; i++) if (a[i] != a[i + 1]) p[cnt] = pii(cnt, i), cnt++;\n    for (int i = 0; i < cnt; i++) bfs(p[i]);\n    memset(dp, -1, sizeof dp);\n    int ans = solve((1 << cnt) - 1);\n    assert(ans != INF);\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```",
        "postTime": 1509731950,
        "uid": 12621,
        "name": "fstqwq",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3943 \u3010\u661f\u7a7a\u3011"
    },
    {
        "content": "### \u9898\u76ee\u94fe\u63a5\n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3943)\n### solution\n\u633a\u8003\u9a8c\u601d\u7ef4\u7684\u4e00\u9053\u9898\uff0c\u8003\u573a\u4e0a\u731c\u4e86\u5404\u79cd\u5047\u8d2a\u5fc3~~\u5c45\u7136\u6c34\u8fc7\u4e8632\u5206~~\n\u8003\u8651\u8fd9\u9053\u9898\u76ee\u4e2d\u56f0\u6270\u6211\u4eec\u7684\u5730\u65b9\uff1a\n- 1.\u5bf9\u533a\u95f4\u53d6\u53cd\n\n\u5bb9\u6613\u60f3\u5230\u7528\u5dee\u5206\u601d\u60f3\uff0c$p[i]$\u7ef4\u62a4\u7b2c\u539f\u5e8f\u5217\u7b2c$i-1$\u4e2a\u70b9\u72b6\u6001\u4e0e\u7b2c$i$\u4e2a\u70b9\u5f02\u6216\u7684\u7ed3\u679c\uff0c\u5373\u53ef\u5c06\u533a\u95f4$[l,r]$\u53d6\u53cd\u8f6c\u5316\u4e3a\u4ec5\u5bf9$p[l]$\u4e0e$p[r+1]$\u53d6\u53cd\n- 2.\u6709\u591a\u79cd\u53d6\u53cd\u65b9\u5f0f\n\n\u4e8b\u5b9e\u4e0a\uff0c\u5bf9\u4e00\u6bb5\u533a\u95f4$[l,r]$\u53d6\u53cd\uff0c\u82e5$p[l]$\u4e0e$p[r+1]$\u5747\u4e3a1\uff0c\u90a3\u4e48\u5b83\u4eec\u90fd\u4f1a\u53d8\u62100\uff0c\u76f8\u5f53\u4e8e\u76f8\u4e92\u62b5\u6d88\uff0c\u82e5\u5176\u4e2d\u4e00\u4e2a\u662f1\uff0c\u76f8\u5f53\u4e8e\u5c061\u79fb\u52a8\u52300\u7684\u4f4d\u7f6e\uff0c($p[l]$\u4e0e$p[r-1]$\u90fd\u662f1\u7684\u60c5\u51b5???)\u90a3\u4e48\u62b5\u6d88\u4efb\u610f2\u4e2a0\u7684\u6700\u5c0f\u6b65\u6570\uff0c\u5c31\u662f\u5c06\u4ed6\u4eec\u79fb\u52a8\u5230\u4e00\u8d77\u7684\u6700\u5c0f\u6b65\u6570\uff0c\u6bcf\u4e2a\u70b9\u6240\u80fd\u79fb\u52a8\u5230\u7684\u8ddd\u79bb\uff0c\u5c31\u662f\u9898\u76ee\u4e2d\u7ed9\u51fa\u7684\u4e0d\u540c\u53d6\u53cd\u957f\u5ea6\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5$O(n,m)$\u6c42\u51fa\u4efb\u610f1\u4e2a1\u79fb\u52a8\u5230\u4efb\u610f\u4f4d\u7f6e\u9700\u8981\u7684\u6700\u5c0f\u6b65\u6570\u3002\u4e8e\u662f\u9898\u76ee\u5c31\u8f6c\u5316\u4e3a\u4e86\u6709\u82e5\u5e72\u4e2a\u70b9\uff0c\u4efb\u610f2\u4e2a\u70b9\u4e4b\u95f4\u53ef\u4ee5\u82b1\u8d39\u4e00\u5b9a\u4ee3\u4ef7\u76f8\u4e92\u62b5\u6d88\uff0c\u95ee\u5c06\u6240\u6709\u8282\u70b9\u62b5\u6d88\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002\n- \u539f\u5e8f\u5217\u4e2d\u6bcf\u4e00\u4e2a1\u6700\u591a\u5bfc\u81f4\u73b0\u5728\u7684\u95ee\u9898\u4e2d\u591a\u51fa2\u4e2a\u70b9\uff0c\u4e8e\u662f\u6700\u591a\u670916\u4e2a\u70b9\uff0c\u72b6\u538bDP\u5373\u53ef\n### code\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=80010;\nint n,k,m,t[N],b[N],dis[N],dp[N],p[N],cnt,sum;\nint main(){\n\tscanf(\"%d%d%d\",&n,&k,&m);\n\tfor(int i=1;i<=k;++i){\n\t\tint x;scanf(\"%d\",&x);\n\t\tt[x]^=1;t[x+1]^=1;\n\t} \n\tfor(int i=1;i<=n+1;++i) if(t[i]) p[cnt++]=i;\n\tsum=(1<<cnt);\n\tfor(int i=1;i<=m;++i) scanf(\"%d\",&b[i]);\n\tmemset(dis,0x3f,sizeof(dis));dis[0]=0;\n\tfor(int i=1;i<=m;++i)\n\t\tfor(int j=b[i];j<=n;++j)\n\t\t\tdis[j]=min(dis[j],dis[j-b[i]]+1);\n\tfor(int i=1;i<=m;++i)\n\t\tfor(int j=n-b[i];j>=0;--j) \n\t\t\tdis[j]=min(dis[j],dis[j+b[i]]+1);\n\tmemset(dp,0x3f,sizeof(dp));dp[0]=0;\n\tfor(int i=0;i<sum;++i)\n\t\tfor(int j=0;j<cnt;++j) if(!(i&(1<<j)))\n\t\t\tfor(int k=j+1;k<cnt;++k)\n\t\t\t\tif(!(i&(1<<k))) dp[i^(1<<j)^(1<<k)]=min(dp[i^(1<<j)^(1<<k)],dp[i]+dis[p[k]-p[j]]);\n\tprintf(\"%d\\n\",dp[sum-1]);\n\treturn 0;\n}\n```\n",
        "postTime": 1603254663,
        "uid": 66831,
        "name": "T_Q_X",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3943 \u3010\u661f\u7a7a\u3011"
    },
    {
        "content": "\u89e3\u6cd50\uff1a\n\u6211\u4f1a$rand$\uff01\u5c0f\u4e8e\u56db\u7684\u7b54\u6848\u968f\u4fbf\u731c\n\n\u9884\u8ba1\u5f97\u52068\n\n\u89e3\u6cd50.5\uff1a\n\u6211\u4f1a\u8f93\u51fa$2$\uff01\n\n\u9884\u8ba1\u5f97\u520612\uff08233......)\n\n\u89e3\u6cd51\uff1a\n\u770b\u5230\u6709$m=1$\u7684\u65f6\u5019\uff0c\u76f4\u63a5\u4ece\u5de6\u5230\u53f3\u626b\u4e00\u904d~~xjb~~\u8d2a\u5fc3\u4e00\u6ce2\uff0c\u5176\u4ed6\u8fd8\u662f$rand$\n\n\u9884\u8ba1\u5f97\u520628\n\n\u89e3\u6cd52\uff1a\n\u6211\u4f1a\u72b6\u538b!\u76f4\u63a5\u72b6\u538b\u626b\u4e00\u904d\n\n\u9884\u8ba1\u5f97\u520624~28\n\n\u89e3\u6cd53\uff1a\n\u8003\u8651\u5230$k$\u5f88\u5c0f\uff0c\u5c31\u4ece\u8fd9\u4e2a\u65b9\u5411\u6765\u601d\u8003\uff1a\n\n\u6bd4\u5982\u5bf9\u4e8e\u4e00\u4e32\u6570\u5217$1,0,1,0,1,1,0$\uff08$1$\u8868\u793a\u4eae\u7740$0$\u8868\u793a\u4e0d\u662f\u4eae\u7684\uff09\n\n\u6211\u4eec\u5c06\u5176\u4e24\u8fb9\u6269\u5c55\u5404\u4e00\u4e2a$0$ $->$ $0,1,0,1,0,1,1,0,0$\n\n\u7136\u540e\u5bf9\u5176\u626b\u4e00\u904d\uff0c\u5f62\u6210\u4e00\u4e2a\u539f\u6570\u7ec4\u7684\u201c\u5f02\u6216\u6570\u7ec4\u201d\n\u5373\u503c\u5206\u522b\u4e3a$1,1,1,1,1,0,1,0$\n\n\u65e2\u7136\u8981\u5c06\u539f\u6570\u7ec4\u5168\u90e8\u90fd\u53d8\u4e3a$0$\uff0c\u533a\u95f4\u7ffb\u8f6c\u4e5f\u4e0d\u4f1a\u6539\u53d8\u5176\u76f8\u90bb\u7684\u5f02\u6216\u503c\uff0c\u5219\u60f3\u5230\u53ea\u9700\u8981\u5c06\u4e0d\u540c\u7684\u5f02\u6216\u503c\u53cd\u8f6c\u5230\u4e00\u8d77\u6d88\u9664\u5373\u53ef\n\n$Q$:\u4e3a\u4ec0\u4e48\u52a0$0$\n\n$A$:$0$^$a=a$\n\n\u5219\u95ee\u9898\u8f6c\u5316\u4e3a\u4e86\u4e00\u4e2a$01$\u6570\u5217\uff0c\u82e5\u4e24\u4e2a$1$\u5728\u4e00\u8d77\u5373\u53ef\u6d88\u9664\uff0c\u8981\u7ffb\u8f6c\u81f3\u5c11\u591a\u5c11\u6b21\n\n\u6bcf\u6b21\u66b4\u529b\u53bb\u6c42\n\n\u9884\u8ba1\u5f97\u520624\uff08233...\u767d\u8003\u8651\u4e86\uff09\n\n\u89e3\u6cd54\uff1a\n\u7ee7\u7eed\u89e3\u6cd53\uff0c\u4e0d\u8981\u524d\u529f\u5c3d\u5f03\n\n\u53ef\u4ee5\u975e\u5e38\u975e\u5e38\u5bb9\u6613\u7684\u60f3\u5230\uff0c\u8fd9\u53ef\u4ee5\u8f6c\u5316\u4e3a\u56fe\u8bba\u6765\u89e3\uff0c\u53ea\u8981\u5bf9\u4e24\u4e24\u70b9\u5bf9\u4e4b\u95f4\u8dd1$SPFA$\u5373\u53ef\n\n$Q$:\u4e0d\u4f1a\u8d85\u65f6\u5417\n\n$A$:\u4f60\u662f\u4e0d\u662f\u6ca1\u770b\u5230$K \\leqslant 8$...\n\n\u4e8e\u662f\u95ee\u9898\u89e3\u51b3\u5b8c\u6bd5\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u7ecf\u5178\u7684\u72b6\u538bdp\u53ef\u505a\u7684\u4e86\n\ncode\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint way[65],a[40010],b[40010],pos[18],dis[18][18],cnt;\nint n,m,k;\nint que[40005],vis[40005],tim[40005],dp[70005],ycl[70005];\nqueue<int> q;\nvoid bfs(int x)\n{\n    int hd=0;\n    memset(vis,0,sizeof(vis));\n    memset(tim,0,sizeof(tim));\n    q.push(x);\n    vis[x]=1;\n    tim[x]=0;\n    while(!q.empty())\n    {\n        int u=q.front();\n        q.pop();\n        for(int i=1;i<=m;i++)\n        {\n            int v1=u+way[i],v2=u-way[i];\n            if(v1<=n&&vis[v1]==0)\n            {\n                q.push(v1);\n                tim[v1]=tim[u]+1;\n                vis[v1]=1;\n            }\n            if(v2>=0&&vis[v2]==0)\n            {\n                q.push(v2);\n                tim[v2]=tim[u]+1;\n                vis[v2]=1;\n            }\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d%d%d\",&n,&k,&m);\n    for(int i=1;i<=k;i++)\n    {\n        int x;\n        scanf(\"%d\",&x);\n        a[x]=1;\n    }\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d\",&way[i]);\n    }\n    for(int i=0;i<=n;i++)\n    {\n        b[i]=a[i]^a[i+1];\n        if(b[i]==1)\n        {\n            pos[++cnt]=i;\n        }\n    }\n    for(int i=1;i<=cnt;i++)\n    {\n        bfs(pos[i]);\n        for(int j=1;j<=cnt;j++)\n        {\n            dis[i][j]=tim[pos[j]];\n        }\n    }\n    for(int zt=0;zt<(1<<cnt);zt++)\n    {\n        ycl[zt]=cnt;\n        for(int k=1;k<=cnt;k++)\n        {\n            if(((zt>>(k-1))&1)==0)\n            {\n                ycl[zt]=k;\n                break;\n            }\n        }\n    }\n    for(int zt=1;zt<(1<<cnt);zt++)\n    {\n        dp[zt]=1e8;\n    }\n    dp[0]=0;\n    for(int zt=0;zt<(1<<cnt);zt++)\n    {\n        for(int i=ycl[zt]+1;i<=cnt;i++)\n        {\n            if(((zt>>(i-1))&1)==0&&dis[ycl[zt]][i]!=0)\n            {\n                dp[zt|(1<<(ycl[zt]-1))|(1<<(i-1))]=min(dp[zt|(1<<(ycl[zt]-1))|(1<<(i-1))],dp[zt]+dis[ycl[zt]][i]);\n            }\n        }\n    }\n    printf(\"%d\",dp[(1<<cnt)-1]);\n}\n```\n\n",
        "postTime": 1531318812,
        "uid": 48265,
        "name": "decoqwq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3943 \u3010\u661f\u7a7a\u3011"
    },
    {
        "content": "\u5173\u4e8e\u8f6c\u6362\u7684\u90e8\u5206\uff0c\u9898\u89e3\u548c\u4e0b\u9762\u7684\u4eba\u5176\u5b9e\u8bb2\u7684\u5df2\u7ecf\u5f88\u6e05\u695a\u4e86\uff0c\u4e0d\u8fc7\u6211\u60f3\u7ea0\u6b63\u4e00\u4e0b\u4e0b\u9762\u7684\u4eba\u4e00\u70b9\uff0c\u539f\u9898\u89e3\u8bf4\u662fbfs\u662f\u6ca1\u6709\u95ee\u9898\u7684\uff0c\u56e0\u4e3a\u6bcf\u6b21\u66f4\u65b0\u7684\u4ee3\u4ef7\u662f1\uff0c\u4f60\u8bbf\u95ee\u5230\u4e00\u4e2a\u70b9\u4e86\uff0c\u4e0b\u6b21\u5b83\u518d\u88ab\u66f4\u65b0\u80af\u5b9a\u6ca1\u6709\u5f53\u524d\u4f18\uff0c\u6240\u4ee5\u662fO(n)\u7684bfs\u3002\n\n\u8fd8\u6709\u5c31\u662f\u5e0c\u671b\u4e0d\u8981\u6709\u4eba\u50cf\u6211\u4e00\u6837\uff0c\u4ea4\u4e86\u5341\u51e0\u6b21\uff0c\u6700\u540e\u53d1\u73b0\u662fK\u548cM\u7684\u8f93\u5165\u641e\u53cd\u4e86\u3002\u3002\u3002\n\n\u6211\u7528\u7684\u548c\u539f\u9898\u89e3\u7684\u65b9\u6cd5\u4e00\u6837\uff0c\u5c31\u662f\u5dee\u5206+\u72b6\u538b+bfs(\u8bdd\u8bf4\u8fd9\u662f\u6211\u7b2c\u4e00\u6b21\u770b\u5230\u5dee\u5206\u7684\u62d3\u5c55\u3002\u3002\u3002)\n\n\u7136\u540e\u6211\u5728\u7a0b\u5e8f\u91cc\u9762\u6ce8\u89e3\u4e86\u4e00\u4e0b\u3002\n\n        \n```cpp\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#include<cstdio>\n#include<queue>\n#define maxn 40009\n#define maxx 1000000000\nusing namespace std;\nint n,m,k,x,val[maxn],have[maxn],w[maxn],d[maxn],dis[20][20],dp[500009];\nbool in[maxn];\nqueue<pair<int,int> >q;\nint main()\n{\n  scanf(\"%d%d%d\",&n,&k,&m);\n  for (int i=0;i<=n+1;i++) val[i]=1;\n  for (int i=1;i<=k;i++) \n  {\n   scanf(\"%d\",&x); val[x]=0;\n  }\n  k=0;\n  for (int i=1;i<=n+1;i++)\n  if (val[i]^val[i-1]) {have[i]=++k,w[k]=i;}//cout<<\"!\"<<i<<endl;}\n  for (int i=1;i<=m;i++) scanf(\"%d\",&d[i]),d[i]++;\n  pair<int,int>now;int to;\n  for (int i=1;i<=k;i++)\n  for (int j=1;j<=k;j++)\n  if (i!=j) dis[i][j]=maxx;\n//\u4e00\u4e2a\u4e2a\u5165\u961f\u5217\uff0c\u505a\u4e00\u904dbfs\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(kn)  \n for (int i=1;i<=k;i++)\n  {\n      for (int j=0;j<=n+1;j++) in[j]=false;\n      q.push(make_pair(w[i],0)); in[w[i]]=true;\n      while (!q.empty())\n      {\n        now=q.front();q.pop();\n        for (int j=1;j<=m;j++)\n      {\n          to=now.first+d[j]-1;\n          if ((to>n+1)||(in[to])) continue;\n          q.push(make_pair(to,now.second+1));in[to]=true;\n          if (have[to]) dis[i][have[to]]=now.second+1;\n      }\n      for (int j=1;j<=m;j++)\n      {\n        to=now.first-d[j]+1;\n          if ((to<0)||(in[to])) continue;\n          q.push(make_pair(to,now.second+1));in[to]=true;\n          if (have[to]) dis[i][have[to]]=now.second+1;\n      }\n    }\n  }\n  for (int i=1;i<(1<<k);i++) dp[i]=maxx;\n//\u5c31\u662f\u9009\u62e9\u5f53\u524d\u72b6\u6001\u4e0b\u8fd8\u6ca1\u6d88\u9664\u7684\u4e24\u4e2a\u70b9\uff0c\u5c06\u5b83\u4eec\u6d88\u6389\u7684\u72b6\u6001\u66f4\u65b0\uff0c\u4e0d\u8fc7\u548cnoip\u63d0\u9ad8\u7ec42016Day2T3\u7684\u6124\u6012\u7684\u5c0f\u9e1f\u5f88\u50cf\uff0c\u53cd\u6b63\u5f53\u524d\u72b6\u6001\u4e0b\u7b2c\u4e00\u4e2a\n//\u7269\u54c1\u80af\u5b9a\u662f\u8981\u6d88\u7684\uff0c\u90a3\u4e0d\u5982\u5c31\u76f4\u63a5\u9009\u62e9\u7b2c\u4e00\u4e2a\u6ca1\u88ab\u6d88\u7684\u70b9\u6765\u66f4\u65b0\u3002\n  for (int i=0;i<(1<<k);i++)\n  {\n      int j=0;\n    while (i&(1<<j)) j++;\n    for (int p=j+1;p<k;p++)\n    if (!(i&(1<<p)))\n    dp[i|(1<<j)|(1<<p)]=min(dp[i|(1<<j)|(1<<p)],dp[i]+dis[j+1][p+1]);    \n  } \n  printf(\"%d\\n\",dp[(1<<k)-1]);\n  return 0;\n}\n```",
        "postTime": 1510104388,
        "uid": 21621,
        "name": "nihanchu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3943 \u3010\u661f\u7a7a\u3011"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P3943)\n\n\u56e0\u4e3a\u533a\u95f4\u53d6\u53cd\u4e0d\u592a\u597d\u505a\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u628a\u5b83\u5dee\u5206\u4e00\u4e0b\uff0c\u8fd9\u6837\u4e00\u6b21\u533a\u95f4\u4fee\u6539\u76f8\u5f53\u4e8e\u8f6c\u5316\u6210\u4e86\u4e24\u6b21\u5355\u70b9\u4fee\u6539\u3002\n\n\u56e0\u4e3a\u539f\u6765\u7684\u5e8f\u5217\u91cc\u6700\u591a\u53ea\u6709 $k\\leq 8$ \u4e2a $0$\uff0c\u6240\u4ee5\u5dee\u5206\u4e4b\u540e\u6700\u591a\u53ea\u4f1a\u6709 $16$ \u4e2a $1$\uff0c\u800c\u4e14\u663e\u7136\u6709\u5076\u6570\u4e2a $1$\n\n\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u72b6\u538b $dp$\uff0c\u7528 $f[S]$ \u8868\u793a\u73b0\u5728\u5df2\u7ecf\u6d88\u9664\u6389\u7684 $1$ \u7684\u96c6\u5408\u4e3a $S$ \u7684\u6700\u5c11\u64cd\u4f5c\u6b21\u6570\u3002\n\n$$f[S]=\\min\\limits_{popcount(S\\ xor\\ S^\\prime)=2}\\{f[S^\\prime]+calc(S^\\prime,S)\\}$$\n\n\u8003\u8651 $calc$ \u7684\u8ba1\u7b97\uff0c\u6211\u4eec\u53ef\u4ee5\u4ee5\u6bcf\u4e00\u4e2a\u5dee\u5206\u540e\u4e3a $1$ \u7684\u4f4d\u7f6e\u4e3a\u8d77\u70b9\u505a\u4e00\u6b21 spfa\uff08\u5176\u5b9e\u662fbfs\uff09\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u5feb\u901f\u5f97\u51fa $calc$ \u7684\u503c\u4e86\n\n\n$\\mathcal O(2^{2k}\\times(2k)^2)$\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n# define Rep(i,a,b) for(int i=a;i<=b;i++)\n# define _Rep(i,a,b) for(int i=a;i>=b;i--)\n# define RepG(i,u) for(int i=head[u];~i;i=e[i].next)\n\ntypedef long long ll;\n\nconst int N=1e5+5;\n\ntemplate<typename T> void read(T &x){\n   x=0;int f=1;\n   char c=getchar();\n   for(;!isdigit(c);c=getchar())if(c=='-')f=-1;\n   for(;isdigit(c);c=getchar())x=(x<<1)+(x<<3)+c-'0';\n    x*=f;\n}\n\nint n,k,m;\nint a[N],b[N],p[N],tot;\nint f[1<<20];\nint dis[N][20]; \nbool inq[N];\n\nvoid spfa(int s,int op){\n\tqueue<int> q;\n\tdis[s][op]=0;\n\tq.push(s);\n\tinq[s]=true;\n\twhile(!q.empty()){\n\t\tint u=q.front();q.pop();\n\t\tinq[u]=false;\n\t\tRep(i,1,m){\n\t\t\tint v=u+b[i];\n\t\t\tif(v>n+1)continue;\n\t\t\tif(dis[v][op]>dis[u][op]+1){\n\t\t\t\tdis[v][op]=dis[u][op]+1;\n\t\t\t\tif(!inq[v])inq[v]=true,q.push(v);\t\n\t\t\t}\n\t\t}\n\t\tRep(i,1,m){\n\t\t\tint v=u-b[i];\n\t\t\tif(v<1)continue;\n\t\t\tif(dis[v][op]>dis[u][op]+1){\n\t\t\t\tdis[v][op]=dis[u][op]+1;\n\t\t\t\tif(!inq[v])inq[v]=true,q.push(v);\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main()\n{\n\tmemset(f,0x3f,sizeof(f));\n\tmemset(dis,0x3f,sizeof(dis)); \n\tread(n),read(k),read(m);\n\tRep(i,1,k){\n\t\tint x;\n\t\tread(x);\n\t\ta[x]=1;\t\n\t}\n\tRep(i,1,m)read(b[i]);\n\tRep(i,1,n+1)if(a[i]^a[i-1])p[tot++]=i;\n\tfor(int i=0;i<tot;i++)\n\t\tspfa(p[i],i);\n\tf[0]=0;\n\tfor(int S=0;S<1<<tot;S++)\n\t\tfor(int i=0;i<tot;i++)\n\t\t\tif(S>>i&1^1)\n\t\t\t\tfor(int j=0;j<tot;j++)\n\t\t\t\t\tif(i!=j&&S>>j&1^1)\n\t\t\t\t\t\tf[S|(1<<i)|(1<<j)]=min(f[S|(1<<i)|(1<<j)],f[S]+dis[p[j]][i]);\n\tprintf(\"%d\\n\",f[(1<<tot)-1]);\n\treturn 0;\n}\n```\n",
        "postTime": 1606696749,
        "uid": 97344,
        "name": "devout",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3943 \u3010\u661f\u7a7a\u3011"
    },
    {
        "content": "\u4e00\u9053\u5f88\u597d\u7684\u953b\u70bc\u601d\u7ef4\u96be\u5ea6\u7684\u9898\uff0c\u5982\u679c\u60a8\u80fd\u5728\u8003\u573a\u4e0a\u76f4\u63a5\u60f3\u51fa\u6765\u7684\u8bdd\uff0c\u63d0\u9ad8\u7ec4450\u5206\u4ee5\u4e0a\u5c31\u6ca1\u95ee\u9898\u4e86\u5427\u3002\uff08\u522b\u50cf\u4f5c\u8005\u4e00\u6837\u770b\u4e86\u597d\u51e0\u7bc7\u9898\u89e3\u624d\u52c9\u5f3a\u4f1a\uff09\n\n|\u3000\u3000\u5148\u63d0\u53d6\u51fa\u9898\u76ee\u5927\u610f\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6n<=40000\u768401\u4e32\uff0c\u5176\u4e2d1\u7684\u4e2a\u6570<=8\uff0c\u6709m\u79cd\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u90fd\u662f\u628a\u4e00\u4e2a\u8be5\u64cd\u4f5c\u5bf9\u5e94\u957f\u5ea6\u7684\u533a\u95f4\u53d6\u53cd\uff0c\u6216\u8005\u8bf4\u5f02\u6216\u4e0a1\uff0c\u6c42\u4f7f\u6574\u4e2a\u4e32\u53d8\u4e3a\u53ea\u67090\u7684\u4e32\u7684\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\u3002\u3000\n\n|\u3000\u3000\u9996\u5148\u5bf9\u4e8e\u4e00\u6b21\u64cd\u4f5c\uff0c\u80af\u5b9a\u4e0d\u80fd\u66b4\u529b\u5730\u4e00\u4e2a\u4e2a\u53bb\u53d6\u53cd\u5427\u3002\u4f18\u5316\u533a\u95f4\u64cd\u4f5c\uff0c\u8981\u4e48\u7528\u6570\u636e\u7ed3\u6784\uff0c\u8981\u4e48\u7528\u524d\u7f00\u548c\u6216\u5dee\u5206\u3002\u5176\u5b9e\u8fd9\u91cc\u53ef\u4ee5\u7528**\u5dee\u5206**\u6765\u4f18\u5316\uff1a\u5efa\u7acb\u65b0\u7684\u4e0b\u6807\u6700\u5927\u4e3an+1\u3001\u4e0b\u6807\u6b63\u5e38\u4ece1\u5f00\u59cb\u7684d\u6570\u7ec4\uff0cd[i]=a[i]^a[i-1]\uff0c\u6bcf\u6b21\u533a\u95f4\u4fee\u6539\u65f6\uff0c\u8bbe\u4fee\u6539\u7684\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u4e3al\uff0c\u53f3\u7aef\u70b9\u4e3ar\uff0c\u53ea\u8981\u8ba9a[l]\u548ca[r+1]\u5206\u522b\u5f02\u6216\u4e0a1\u5c31\u884c\u4e86\u3002\n\n|\u3000\u3000\u3000\u3000\u89e3\u91ca\u4e00\u4e0b\uff1a\u8fd9\u91cc\u7684\u5dee\u5206\u4e2d\u7684\u201c\u5dee\u201d\u5df2\u7ecf\u4e0d\u80fd\u7b80\u5355\u7406\u89e3\u4e3a\u51cf\u6cd5\u505a\u5dee\u4e86\uff0c\u800c\u662f\u903b\u8f91\u4e0a\u7684\u201c\u5dee\u8ddd\u201d\u3002\u5dee\u5206\u7ef4\u62a4\u7684\u662f\u76f8\u90bb\u5143\u7d20\u95f4\u7684\u903b\u8f91\u5173\u7cfb\uff0c\u4ece\u800c\u4f7f\u80fd\u4ece\u521d\u59cb\u72b6\u6001\uff08a[0]\uff09\u901a\u8fc7\u5dee\u5206\u6570\u7ec4\u8868\u8fbe\u7684\u903b\u8f91\u5173\u7cfb\u63a8\u51fa\u67d0\u4e2a\u4f4d\u7f6e\u4e0aa\u7684\u503c\uff08\u4ece\u5f62\u5f0f\u4e0a\u770b\u5c31\u662f\u6c42\u524d\u7f00\uff09\u3002\u5bf9\u4e8e\u5f02\u6216\u6765\u8bf4\uff0c\u6b63\u597d\u6ee1\u8db3\u8fd9\u6837\u7684\u6027\u8d28\uff1a\u6211\u4eec\u8bfb\u5165\u4e32\u65f6\u4ecea[1]\u5f00\u59cb\u8bfb\u5165\uff0c\u90a3a[0]\u6ca1\u7ba1\u5b83\u7684\u8bdd\u5c31\u4f1a\u662f0\uff0c\u90a3\u4e48\u53d1\u73b0\u4ece\u5b83\u5f00\u59cb\u5411\u540e\u4e0ed\u6570\u7ec4\u505a\u524d\u7f00\u5f02\u6216\u65f6\uff0c\u8bbe\u5f53\u524d\u505a\u5230\u7b2ci\u4e2a\u4f4d\u7f6e\u4e86\uff08\u5373\u5f53\u524d\u503c=a[0]^d[1]^d[2]^\u2026\u2026^d[i]\uff09\uff0c\u5219\u5f53\u524d\u503c\u5c31\u662fa[i]\u7684\u503c\uff0c\u540c\u6837\u5bf9\u4e8e\u5dee\u5206\u4f18\u5316\u7684\u533a\u95f4\u64cd\u4f5c\u6765\u8bf4\uff0c\u5bf9  \u5de6\u7aef\u70b9  \u548c   \u53f3\u7aef\u70b9+1  \u5904\u53d6\u53cd\u540e\uff0c\u5728\u6c42\u4e00\u904d\u524d\u7f00\u5f02\u6216\uff0c\u53d1\u73b0\u5bf9\u4e8e\u90a3\u4e2a\u8981\u4fee\u6539\u7684\u533a\u95f4\uff0c\u771f\u7684\u5c31\u53d6\u53cd\u4e86\u3002\uff08\u53ef\u4ee5\u8fd9\u4e48\u8003\u8651\uff1a\u5bf9\u4e8e\u533a\u95f4\u4e2d\u7684\u4f4d\u7f6e\u6765\u8bf4\uff0c\u4fee\u6539\u540e\u518d\u6c42\u5b8c\u524d\u7f00\u540e\uff0c\u6bcf\u4f4d\u90fd\u6bd4\u4fee\u6539\u524d\u7684\u8fd9\u4f4d\u591a\u5f02\u6216\u4e861\uff0c\u6545\u53d6\u53cd\uff1b\u5bf9\u4e8e\u533a\u95f4\u540e\u9762\u7684\u4f4d\u7f6e\uff0c\u4fee\u6539\u540e\u518d\u6c42\u5b8c\u524d\u7f00\u540e\uff0c\u6bcf\u4f4d\u90fd\u6bd4\u4fee\u6539\u524d\u7684\u8fd9\u4f4d\u591a\u5f02\u6216\u4e862\u4e2a1\uff0c\u5c31\u4e0d\u4f1a\u6539\u53d8\uff0c\u603b\u4f53\u4e0a\u770b\uff0c\u8fd9\u4e2a\u533a\u95f4\u5c31\u88ab\u53d6\u53cd\u4e86\u3002\u8fd9\u8981\u4f9d\u8d56\u4e8e**\u5f02\u6216\u8fd9\u4e2a\u8fd0\u7b97\u53ef\u4ea4\u6362\u4e14\u6709[\u5355\u4f4d\u5143\uff08\u5e7a\u5143\uff09]**(https://baike.baidu.com/item/%E5%8D%95%E4%BD%8D%E5%85%83/11035606?fr=aladdin)\u3001\u4e141\u6709\u5f02\u6216\u610f\u4e49\u4e0b\u7684\u9006\u5143\uff08\u5176\u5b9e\u6240\u6709\u6b63\u6574\u6570\u90fd\u6709\uff09\uff08\u9006\u5143\u53ef\u4e0d\u53ea\u9650\u4e8e\u53d6\u6a21\u54df\uff09\uff09\u3002\u56e0\u4e3a\u8981\u80fd\u5b9e\u73b0\u53f3\u7aef\u70b9\u7b49\u4e8en\u7684\u533a\u95f4\u4fee\u6539\uff0c\u6240\u4ee5d\u6570\u7ec4\u7684\u6700\u5927\u4e0b\u6807\u4e3an+1\uff0c\u540c\u65f6\u4e5f\u662f\u4e3a\u4e0b\u65871\u7684\u4e2a\u6570\u4e3a\u5076\u6570\u7684\u7ed3\u8bba\u505a\u94fa\u57ab\u3002\n\n|\u3000\u3000\u90a3\u4e48\u95ee\u9898\u5c31\u53d8\u4e3a\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6n<=40001\u768401\u4e32\uff0c\u5176\u4e2d1\u7684\u4e2a\u6570<=16\uff0c\u6709m\u79cd\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u90fd\u662f\u628a\u4e0b\u6807\u5dee\u8be5\u64cd\u4f5c\u5bf9\u5e94\u957f\u5ea6\u7684\u4e24\u4e2a\u6570\u53d6\u53cd\uff0c\u6c42\u4f7f\u6574\u4e2a\u4e32\u53d8\u4e3a\u53ea\u67090\u7684\u4e32\u7684\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\u3002\n\n|\u3000\u3000\u3000\u3000\u89e3\u91ca\u4e00\u4e0b\uff1a\u8003\u8651\u5c06\u539f\u4e32\u76841\u5168\u90fd\u62ff\u51fa\u6765\u540e\u4e00\u4e2a\u4e2a\u52a0\u5165\u5230\u4e00\u4e2a\u5168\u662f0\u7684\u4e32u\u91cc\uff0c\u5f62\u6210\u4e00\u4e2a\u4e0e\u539f\u4e32\u5b8c\u5168\u4e00\u6837\u7684\u4e32\uff0c\u770b\u770bu\u4e32\u5bf9\u5e94\u7684\u5dee\u5206\u6570\u7ec4\u7684\u53d8\u5316\uff0c\u53d1\u73b0\u6bcf\u6b21\u52a0\u5165\u4e00\u4e2a1\uff0c\u5dee\u5206\u6570\u7ec4\u8981\u4e48\u65b0\u589e2\u4e2a1\uff08\u52a0\u5165u\u4e32\u76841\u5728u\u4e32\u4e2d\u5de6\u53f3\u6ca1\u6709\u76f8\u90bb\u76841\uff09\uff0c\u8981\u4e48\u6709\u4e00\u4e2a1\u5f80\u540e\u6216\u524d\u79fb\u4e00\u4e2a\u4f4d\u7f6e\uff08\u52a0\u5165u\u4e32\u76841\u5728u\u4e32\u4e2d\u7684\u5de6\u8fb9\u6216\u53f3\u8fb9\u4e2d\u53ea\u6709\u4e00\u8fb9\u6709\u76f8\u90bb\u76841\uff09\uff0c\u8981\u4e48\u51cf\u5c112\u4e2a1\uff08\u52a0\u5165u\u4e32\u76841\u5728u\u4e32\u4e2d\u7684\u5de6\u8fb9\u548c\u53f3\u8fb9\u90fd\u76f8\u90bb\u76841\uff09\uff0c\u56e0\u4e3a\u8981\u4eceu\u4e32\u4e2d\u52a0\u6700\u591a8\u4e2a1\uff0c\u663e\u7136\u5bf9\u5e94\u7684\u5dee\u5206\u6570\u7ec4\u6700\u591a\u5c3116\u4e2a1\uff0c\u540c\u65f6\u5dee\u5206\u6570\u7ec4\u4e2d1\u7684\u4e2a\u6570\u4e00\u5b9a\u4e3a\u5076\u6570\u3002\n\n|\u3000\u3000\u3000\u3000\u663e\u7136\u5bf9\u4e8e\u6bcf\u6b21\u64cd\u4f5c\u53d6\u53cd\u7684\u4e24\u4e2a\u6570\u4e2d\u4e00\u5b9a\u6709\u4e00\u4e2a1\uff0c\u4e0d\u7136\u8fd9\u6b21\u64cd\u4f5c\u4e0d\u4f46\u6ca1\u7528\uff0c\u8fd8\u591a\u51fa\u4e862\u4e2a1\uff0c\u6d6a\u8d39\u6b21\u6570\u8fd8\u589e\u591a\u4efb\u52a1\u3002\u8003\u8651\u6bcf\u6b21\u53d6\u53cd\u7684\u4e24\u4e2a\u6570\uff1a\n\n|\u3000\u3000\u3000\u3000\u3000\u30001\u3001\u67091\u4e2a1\uff1a\u90a3\u4e48\u7ed3\u679c\u662f\u539f\u67651\u7684\u4f4d\u7f6e\u73b0\u5728\u53d8\u6210\u4e860\uff0c\u539f\u67650\u7684\u4f4d\u7f6e\u73b0\u5728\u53d8\u6210\u4e861\u3002\u5f62\u8c61\u5316\u5730\uff0c1\u4ece\u539f\u6765\u7684\u4f4d\u7f6e\u79fb\u52a8\u5230\u4e86\u53e6\u4e00\u4e2a\u4f4d\u7f6e\n\n|\u3000\u3000\u3000\u3000\u3000\u30002\u3001\u67092\u4e2a1\uff1a\u90a3\u4e48\u8fd9\u4e24\u4e2a1\u90fd\u4f1a\u53d8\u4e3a0\uff0c\u5f62\u8c61\u5316\u5730\u4e00\u4e2a1\u79fb\u52a8\u5230\u4e86\u67091\u7684\u4f4d\u7f6e\uff0c\u4e24\u4e2a1\u78b0\u5230\u4e00\u8d77\u5c31\u6d88\u5931\u4e86\u3002\n\n|\u3000\u3000\u4e8e\u662f\u95ee\u9898\u53c8\u88ab\u5f62\u8c61\u5316\u5730\u8f6c\u5316\u4e3a\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6n<=40001\u768401\u4e32\uff0c\u5176\u4e2d1\u7684\u4e2a\u6570<=16\uff0c\u6709m\u79cd\u79fb\u52a8\u957f\u5ea6\uff0c\u6bcf\u6b21\u79fb\u52a8\u90fd\u662f\u628a1\u4e2a1\u79fb\u52a8\u8fd9\u4e2a\u79fb\u52a8\u76f8\u5e94\u7684\u79fb\u52a8\u957f\u5ea6\uff0c\u82e52\u4e2a1\u78b0\u5230\u4e00\u8d77\uff08\u5728\u540c\u4e00\u4e2a\u4f4d\u7f6e\uff09\u5c31\u4f1a\u6d88\u5931\uff0c\u6c42\u4f7f\u6574\u4e2a\u4e32\u7684\u6240\u67091\u6d88\u5931\u7684\u6700\u5c0f\u79fb\u52a8\u6b21\u6570\u3002\n\n|\u3000\u3000\u3000\u3000\u5982\u679c\u6211\u4eec\u77e5\u9053\u4e86\u8fd9\u4e9b1\u4e24\u4e24\u78b0\u5230\u4e00\u8d77\u6d88\u5931\u7684\u6700\u5c0f\u79fb\u52a8\u6b21\u6570\uff0c\u8dd1\u4e2a**\u72b6\u538bDP**\u5c31\u53ef\u4ee5\u55bd\u3002\u800c\u8fd9\u4e9b1\u4e24\u4e24\u78b0\u5230\u4e00\u8d77\u6d88\u5931\u7684\u6700\u5c0f\u79fb\u52a8\u6b21\u6570\uff0c\u6b63\u53ef\u4ee5\u5bf9\u6bcf\u4e2a1\u8dd1\u4e00\u904dBFS\u6c42\u5f97\uff08\u628a\u4e32\u7684\u6bcf\u4e00\u4f4d\u770b\u6210\u4e00\u4e2a\u70b9\uff0c\u5411\u8fd9\u4e2a\u70b9\u80fd\u4e00\u6b21\u79fb\u52a8\u5230\u7684\u6240\u6709\u70b9\u90fd\u8fde\u4e00\u6761\u957f\u5ea6\u4e3a1\u7684\u8fb9\uff09\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(kmn)\uff0c\u5b8c\u5168\u53ef\u4ee5\u63a5\u53d7\u3002\u81f3\u4e8e\u72b6\u538bDP\uff0c\u63a8\u8350\u5199O(k*(2\u76842K\u6b21\u65b9))\u7684DP\uff0c\u5982\u679c\u5199O((k\u7684\u5e73\u65b9)*(2\u76842*K\u6b21\u65b9))\u7684DP\uff0c\u867d\u7136\u80fd\u8fc7\u8fd9\u4e2a\u9898\uff0c\u4f46\u662f\u5f88\u5bb9\u6613\u5230\u8003\u573a\u4e0a\u88ab\u5361\u3002\u5173\u4e8eO(k*(2\u76842*K\u6b21\u65b9))\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u5f53\u524d\u72b6\u6001\u5411\u4ee5\u540e\u72b6\u6001\u8f6c\u79fb\uff0c\u5f53\u524d\u72b6\u6001\u7b2c\u4e00\u4e2a\u6ca1\u6709\u88ab\u6d88\u53bb\u76841\u8fdf\u65e9\u8981\u88ab\u6d88\u53bb\uff0c\u4e0d\u5982\u5148\u6d88\u53bb\uff0c\u8f6c\u79fb\u5230\u5305\u62ec\u8fd9\u4e2a1\u7684\u72b6\u6001\uff0c\u5bb9\u6613\u53d1\u73b0\u6bcf\u4e00\u4e2a\u6d88\u53bb\u6240\u67091\u7684\u72b6\u6001\uff0c\u90fd\u53ef\u4ee5\u901a\u8fc7\u8fd9\u6837\u7684\u7b56\u7565\u5b9e\u73b0\u51fa\u6765\uff0c\u6240\u4ee5\u8fd9\u6837\u662f\u6b63\u786e\u7684\u3002\n\n\u4ee5\u4e0b\u662f\u6ce8\u91ca\u4e86\u7684AC\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\n\nusing namespace std;\n\nconst int N=40005,M=64,K=8;\n\nint n,k,m,x,a[N],d[N],caolen[M+2],d1[K<<2],cntd1,lst[N],nxt[N*M<<1],to[N*M<<1],cnt;\nint wei[N],vis[N];\n\nlong long dp[1<<K*2],dis[K<<3][K<<3];\n\nchar ch;\n\ninline int read()\n{\n\tx=0;\n\tch=getchar();\n\twhile(!isdigit(ch)) ch=getchar();\n\twhile(isdigit(ch)) x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n\treturn x;\n}\n\ninline void addedge(int u,int v)\n{\n\tnxt[++cnt]=lst[u];\n\tlst[u]=cnt;\n\tto[cnt]=v;\n}\n\nstruct node{\n\tint w,dlen;\n}head;\n\nqueue<node>q,ling;\n\ninline void bfs(int w,int ord)//\u53d8\u91cf\u542b\u4e49\uff1a\u8fd9\u4e2a1\u5728\u539f\u4e32\u4e2d\u7684\u4f4d\u7f6e\uff0c\u8fd9\u4e2a1\u5728d1\uff08\u5c06d\u4e2d\u76841\u53c8\u5355\u72ec\u5b58\u4e86\u4e00\u4e0b\uff09\u4e2d\u7684\u4f4d\u7f6e \n{\n\tmemset(vis,0,sizeof vis);\n\tq=ling;\n\tvis[w]=1;\n\tint cntin=1,t;\n\tq.push((node){w,0});\n\twhile(!q.empty())\n\t{\n\t\thead=q.front();\n\t\tq.pop();\n\t\tfor(int e=lst[head.w];e;e=nxt[e])\n\t\t\tif(!vis[t=to[e]])\n\t\t\t{\n\t\t\t\tvis[t]=1;\n\t\t\t\tcntin++;\n\t\t\t\tif(d[t])\n\t\t\t\t\tdis[ord][wei[t]]=head.dlen+1;\n\t\t\t\tif(cntin==n) \n\t\t\t\t\treturn;\n\t\t\t\tq.push((node){t,head.dlen+1});\n\t\t\t}\n\t}\n}\n\ninline void init()\n{\n\tn=read(),k=read(),m=read();\n\tfor(int i=1;i<=k;++i)\n\t\ta[read()]=1;\n\tfor(int i=1;i<=m;++i)\n\t\tcaolen[i]=read();\n\tfor(int i=1;i<=n+1;++i)\n\t{\n\t\td[i]=a[i]^a[i-1];\n\t\tif(d[i])\n\t\t{\n\t\t\td1[++cntd1]=i;\n\t\t\twei[i]=cntd1;\n\t\t}\n\t\t\t\n\t}\n\tfor(int i=1;i<=n+1;++i)\n\t\tfor(int j=1;j<=m;++j)\n\t\t{\n\t\t\tif(i+caolen[j]<=n+1)\n\t\t\t\taddedge(i,i+caolen[j]);\n\t\t\tif(i-caolen[j]>0)\n\t\t\t\taddedge(i,i-caolen[j]);\n\t\t}\n\tmemset(dis,0x3f,sizeof dis);\n\tfor(int i=1;i<=cntd1;i++)\n\t\tbfs(d1[i],i);\n}\n\nint main()\n{\n\tinit();\t\n\tint lim=(1<<cntd1)-1;\n\tmemset(dp,0x3f,sizeof dp);\n\tdp[0]=0;//\u4e0b\u6807\u4e3a1\u7684\u6d88\u53bb\u72b6\u6001\uff08\u4e0b\u6807\u7684\u4e8c\u8fdb\u5236\u7b2ci\u4f4d\u4e3a1\uff1ad1\u4e2d\u7b2ci\u4e2a1\u5df2\u88ab\u6d88\u53bb\uff09 \n\tfor(int i=0;i<=lim;++i)\n\t{\n\t\tint j=0;\n\t\twhile(i&(1<<j))\n\t\t\tj++;\n\t\tfor(int t=j+1;t<cntd1;t++)\n\t\t{\n\t\t\tif(!(i&(1<<t)))\n\t\t\tdp[i|(1<<j)|(1<<t)]=min(dp[i|(1<<j)|(1<<t)],dp[i]+dis[j+1][t+1]);\n\t\t}\n\t}\n\tprintf(\"%lld\",dp[lim]);\n\treturn 0;\n}\n```\n\n\u6587\u7ae0\u540c\u6b65\u53d1\u8868\u4e8e[\u535a\u5ba2\u56ed](https://www.cnblogs.com/InductiveSorting-QYF/p/11765183.html)\u3002\n\n\uff08\u5199\u4e86\u8fd9\u4e48\u591a\uff0c\u5e94\u8be5\u80fd\u61c2\u4e86\u5427~\uff09\n\n\uff08\u61c2\u4e86\u7684\u8bdd\u8bf7\u7559\u4e2a\u8d5e\uff0c\u8ba9\u66f4\u591a\u4eba\u770b\u5230\uff1b\u4e0d\u61c2\u7684\u8bdd\uff1f\u95ee\u5c31\u597d\u4e86~\uff09",
        "postTime": 1572420781,
        "uid": 45543,
        "name": "YHASDY",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3943 \u3010\u661f\u7a7a\u3011"
    },
    {
        "content": "### \u4f4d\u8fd0\u7b97\uff1a\n\n1. 1<< i >>1 & num\uff0c\u5982\u679c\u4e3a1\u8bf4\u660e\u4e8c\u8fdb\u5236\u4e0b$num$\u7684\u7b2c$i$\u4f4d\u4e3a1\uff0c\u5426\u5219\u4e3a0\n\n1. $num_1$ & $num_2$\uff0c\u5982\u679c\u4e3a0\u8bf4\u660e\u4e8c\u8fdb\u5236\u4e0b\u4e24\u4e2a\u6570\u76f8\u540c\u4f4d\u4e0b\u6ca1\u6709\u91cd\u53e0\u76841\n\n1. $num$ & $num$<<1\uff0c\u5982\u679c\u4e3a0\u8bf4\u660e\u4e8c\u8fdb\u5236\u4e0b$num$\u7684\u5de6\u53f3\u4e00\u4f4d\u4e0e\u5b83\u672c\u8eab\u4e0d\u540c\u4e3a1\n\n### \u5b9a\u4e49\uff1a\n\n\u72b6\u538b dp \u662f\u52a8\u6001\u89c4\u5212\u7684\u4e00\u79cd\uff0c\u901a\u8fc7\u5c06\u72b6\u6001\u538b\u7f29\u4e3a\u6574\u6570\u6765\u8fbe\u5230\u4f18\u5316\u8f6c\u79fb\u7684\u76ee\u7684\u3002\n\n### \u4e00\u4e9b\u65b9\u6cd5\uff1a\n\n1. \u5982\u679c\u4e0a\u4e0b\u884c\u6709\u5f71\u54cd\u7684\u8bdd\uff0c\u7ecf\u5e38\u8bbe$dp_{i,j}$\uff0c$i$\u8868\u793a\u7b2c$i$\u884c\uff0c$j$\u8868\u793a\u8fd9\u4e00\u884c\u7684\u72b6\u6001\uff0c\u53ef\u4ee5\u4ece$dp_{i-1,k}$\u8f6c\u79fb\uff0c\u4f46\u662f\u8981\u5224\u65ad\u662f\u5426\u5408\u6cd5\n\n1. \u901a\u5e38\u6211\u4eec\u4f1a\u628a$2^n-1$\u4e2d\u60c5\u51b5\u5148\u9884\u5904\u7406\u51fa\u5f53\u524d\u884c\u5408\u6cd5\u7684\u72b6\u6001\uff0c\u8f6c\u79fb\u65f6\u518d\u5224\u65ad\u4e24\u884c\u662f\u5426\u5408\u6cd5\n\n1. \u5982\u679c\u6211\u5bf9\u4e00\u4e2a\u72b6\u6001\u6709\u6240\u64cd\u4f5c\uff0c\u60f3\u5f97\u5230\u53e6\u4e00\u4e2a\u72b6\u6001\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5bf9$2^n-1$\u79cd\u72b6\u6001\u5206\u522b\u8fdb\u884c$m$\u6b21\u64cd\u4f5c\u8fde\u8fb9\uff0c\u8dd1\u6700\u77ed\u8def\u6c42\u51fa\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\n\n### solution\n\n\u8fd9\u9053\u9898\u5c31\u548c\u4e0a\u6587\u6240\u8bf4\u7684\u7b2c\u4e09\u79cd\u60c5\u51b5\u76f8\u7b26\uff0c\u56e0\u4e3a\u706f\u53ea\u6709\u4e24\u79cd\u72b6\u6001\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8f6c\u6362\u621001\u5b57\u7b26\u4e32\uff0c\u8fdb\u884c\u533a\u95f4\u53d6\u53cd\u64cd\u4f5c\uff0c\u8fdb\u800c\u6211\u4eec\u53ef\u4ee5\u8054\u60f3\u5230\u524d\u7f00\u5dee\u5206\u548c\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u4fee\u6539\u64cd\u4f5c\u6211\u4eec\u5982\u4f55\u5904\u7406\uff1f\uff1f\uff1f\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e\u4e00\u6bb5\u533a\u95f4\u8fdb\u884c\u4fee\u6539\uff0c\u53ea\u4f1a\u4fee\u6539\u533a\u95f4\u5de6\u53f3\u7aef\u70b9\u7684\u4e24\u4e2a\u503c\uff0c\u4e14\u5f53\u706f\u5168\u90e8\u5173\u6389\u7684\u65f6\u5019\uff0c\u524d\u7f00\u548c\u5168\u4e3a0\u3002\n\n\u601d\u8def\u9010\u6e10\u6e05\u6670\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u5e0c\u671b\u628a1\u53d8\u62100\uff0c\u5176\u4ed6\u591a\u4f59\u7684\u64cd\u4f5c\u4e0d\u9700\u8981\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a1\u5168\u90e8\u538b\u7f29\u5728\u4e00\u8d77\uff0c\u540c\u65f6\u8bb0\u5f55\u4e00\u4e0b\u4ed6\u4eec\u5728\u539f\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\uff0c\u901a\u8fc7\u7ed9\u51fa\u7684\u533a\u95f4\u6211\u4eec\u53ef\u4ee5\u7ec4\u5408\u51fa\u53e6\u4e00\u4e9b\u533a\u95f4\uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u6240\u6709\u80fd\u62fc\u51d1\u51fa\u7684\u533a\u95f4\u548c\u4ed6\u4eec\u6240\u9700\u8981\u7684\u64cd\u4f5c\u6b21\u6570\uff0c\u706f\u7684\u6240\u6709\u72b6\u6001\u5206\u522b\u8fdb\u884c\u5404\u79cd\u64cd\u4f5c\u5e76\u5411\u5f97\u51fa\u7684\u72b6\u6001\u8fde\u8fb9\uff0c\u8fb9\u6743\u4e3a\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\u8dd1\u6700\u77ed\u8def\u5373\u53ef\n\n### code\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <queue>\n#include <vector>\n\n#define N maxn\n\n\nusing namespace std;\nint read(){\n\tint x = 1,a = 0;char ch = getchar();\n\twhile (ch < '0'||ch > '9'){if (ch == '-') x = -1;ch = getchar();}\n\twhile (ch >= '0'&&ch <= '9'){a = a*10+ch-'0';ch = getchar();}\n\treturn x*a;\n}\nconst int maxn = 1e6+7,inf = 1e9+7;\nqueue<int>q;\nint n,k,m;\nint a[maxn],sum[maxn],s[maxn],cnt,arr[maxn];\nint b[maxn],vis[maxn],f[N],dis[N],ins[N];\n\nvector<int>g,w;\n\nvoid SPFA(int pos)\n{\n\tmemset(dis,63,sizeof(dis));\n\tdis[pos] = 0,ins[pos] = 1;q.push(pos);\n\twhile(!q.empty()) {\n\t\tint u = q.front();q.pop();ins[u] = 0;\n\t\tfor(int i = 0;i < g.size();i ++) {\n\t\t\tint v = u^g[i];\n\t\t\tif(dis[v] > dis[u]+w[i]) {\n\t\t\t\tdis[v] = dis[u]+w[i];\n\t\t\t\tif(!ins[v]) {q.push(v);ins[v] = 1;}\t\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main(){\n\tn = read(),k = read(),m = read();\n\tfor (int i = 0;i <= n+1;i++) a[i] = 1;\n\tfor (int i = 1;i <= k;i++){\n\t\tint x = read();a[x] = 0;\n\t}\n\tfor (int i = 1;i <= n+1;i++) sum[i] = a[i]^a[i-1];\n\tfor (int i = 1;i <= m;i++) b[i] = read();\n\tfor (int i = 1;i <= n+1;i++){\n\t\tif (sum[i] == 1){\n\t\t\tarr[++cnt] = 1;\n\t\t\ts[cnt] = i;\n\t\t}\n\t}\n\tfor (int i = 1;i <= n;i++) f[i] = inf;\n\tf[0] = 0;q.push(0);vis[0] = 1;\n\twhile(!q.empty()) {\n\t\tint u = q.front();q.pop();\n\t\tfor(int i = 1;i <= m;i ++) {\n\t\t\tif(u+b[i] <= n && vis[u+b[i]] == 0) {\n\t\t\t\tvis[u+b[i]] = 1,f[u+b[i]] = f[u] + 1;\n\t\t\t\tq.push(u+b[i]);\n\t\t\t} \n\t\t\tif(u-b[i] > 0 && vis[u-b[i]] == 0) {\n\t\t\t\tvis[u-b[i]] = 1,f[u-b[i]] = f[u] + 1;\n\t\t\t\tq.push(u-b[i]);\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i = 1;i <= cnt;i ++) {\n\t\tfor(int j = i+1;j <= cnt;j ++) {\n\t\t\tg.push_back((1<<i>>1)^(1<<j>>1));\n\t\t\tw.push_back(f[s[j]-s[i]]);\n\t\t}\n\t}\n\tSPFA((1<<cnt)-1);\n\tprintf(\"%d\",dis[0]);\n\treturn 0;\n}\n```",
        "postTime": 1606569033,
        "uid": 181308,
        "name": "\u5c0f\u53c8\u53c8",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3943 \u3010\u661f\u7a7a\u3011"
    },
    {
        "content": "\u597d\u5427\uff0c\u6211\u5728\u8fd9\u91cc\u8981\u63d0\u51fa\u4e00\u4e2a\u5f88\u5c11\u6709\u4eba\u6ce8\u610f\u5230\u7684\u70b9\n\n\u6216\u8bb8\u6709\u540c\u5b66\u4e5f\u60f3\u5230\u4e86\uff0c\u4f46\u662f\u53ef\u80fd\u6ca1\u6709\u53bb\u6ce8\u610f\u8fd9\u4e2a\u7ec6\u8282\u6216\u8005\u4ed4\u7ec6\u601d\u8003\u5b83\u7684\u53ef\u884c\u6027\n\n\u4e0b\u9762\u6765\u4e3e\u51fa\u4e00\u4f8b\u5b9e\u9645\u7684\u4f8b\u5b50\uff1a\n\n\u5047\u5982\u5904\u7406\u540e\u7684\u540e\u7684\u6570\u7ec4\u662f\u8fd9\u6837\n\n```\n1 0 0 1 0 0 1\n```\n\u53ea\u7ed9\u51fa\u4e00\u79cd\u8df3\u52a8\u65b9\u6cd5\uff1a\u4e00\u6b21\u6027\u5f80\u524d\u9762\u8df3\u4e09\u6b65\n\n\u95ee\u9898\u6765\u4e86\uff0c\u4e00\u53f7\u706f\u6ce1\u5230\u5e95\u80fd\u4e0d\u80fd\u8df3\u5230\u4e03\u53f7\u706f\u6ce1\u53bb\u5462\n\n\u90a3\u4e48\u6309\u7167\u67d0\u4e9b\u9898\u89e3\u7684\u8bf4\u6cd5\uff0c\u5f53\u4e00\u53f7\u706f\u6ce1\u8df3\u52a8\u4e09\u6b65\u5230\u8fbe\u56db\u53f7\u706f\u6ce1\u65f6\uff0c\u4e24\u53ea\u706f\u6ce1\u4f1a\u76f8\u4e92\u62b5\u6d88\n\n\u8fd9\u6837\u6765\u770b\uff0c\u4e00\u53f7\u706f\u6ce1\u5c31\u5df2\u7ecf\u88ab\u62b5\u6d88\u4e86\uff0c\u81ea\u7136\u4e5f\u5c31\u4e0d\u80fd\u8df3\u5230\uff17\u53f7\u706f\u6ce1\n\n\u5417\uff1f\n\n\u5b9e\u5219\u4e0d\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u7b49\u6548\u6cd5\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\n\n\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u770b\u6210\u4e00\u53f7\u706f\u6ce1\u5148\u8df3\u5230\u56db\u53f7\u548c\u56db\u53f7\u62b5\u6d88\n\n\u7136\u540e\u4e03\u53f7\u706f\u6ce1\u5411\u524d\u8df3\uff0c\u8df3\u5230\u56db\u53f7\u706f\u6ce1\n\n\u6240\u4ee5\u4e2d\u95f4\u8fc7\u7a0b\uff0c\u90a3\u4e2a\u4f4d\u7f6e\u4e0a\u6709\u6ca1\u6709\u706f\u6ce1\u5176\u5b9e\u662f\u4e0d\u91cd\u8981\u7684(\u65e0\u5173\u7684)\n\n\u6700\u540e\u7684\u7ed3\u679c\u5c31\u662f\uff1a\u6211\u8fd8\u53ea\u662f\u82b1\u4e86\u4e24\u6b65\uff0c\u4f46\u662f\u4f9d\u65e7\u8fbe\u5230\u4e86\u4ece\u4e00\u53f7\u8df3\u5230\u4e03\u53f7\u7684\u76ee\u7684\n\n\u4e0a\u4e00\u4e2a\u4ee3\u7801\u597d\u4e86\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<queue>\nusing namespace std;\ninline int read(){int x=0,y=1;char k;while(k<'0'||k>'9'){if(k=='-')y=-1;k=getchar();}while(k>='0'&&k<='9'){x=(x<<3)+(x<<1)+k-'0';k=getchar();}return x*y;}\nint dis[40005],t[22][22],n,k,m,a[40005],pos[22],cnt,c[40005],f[1048578],vis[40005];\nqueue<int>q;\ninline void spfa(int from){\n    for(int i=1;i<=n+2;i++) dis[i]=999999999;\n    while(!q.empty())q.pop();memset(vis,0,sizeof(vis));\n    dis[from]=0,vis[from]=1;q.push(from);\n    while(!q.empty()){\n        int t=q.front();q.pop(),vis[t]=0;\n        for(int i=1;i<=m;i++){\n            int p=t-c[i];if(p>=1){if(dis[p]>dis[t]+1){dis[p]=dis[t]+1;if(!vis[p]){vis[p]=1;q.push(p);}}}\n            p=t+c[i];if(p<=n+1){if(dis[p]>dis[t]+1){dis[p]=dis[t]+1;if(!vis[p]){vis[p]=1;q.push(p);}}}\n        }\n    }\n}\nint main(){\n    n=read(),k=read(),m=read();\n    for(int i=1;i<=k;i++){int p=read();a[++p]=1;}\n    for(int i=1;i<=n+1;i++){\n        a[i]=a[i]^a[i+1];\n        if(a[i]==1) pos[++cnt]=i;\n    }for(int i=1;i<=m;i++) c[i]=read();\n    for(int i=1;i<=cnt;i++){spfa(pos[i]);for(int u=1;u<=cnt;u++) t[i][u]=dis[pos[u]];}\n    for(int i=0;i<=(1<<cnt)-1;i++) f[i]=999999999;f[0]=0;\n    for(int i=0;i<=(1<<cnt)-1;i++){\n        for(int a=1;a<=cnt;a++){\n            for(int b=a+1;b<=cnt;b++){\n                if((i&(1<<(a-1)))&&(i&(1<<(b-1)))&&t[a][b]<999999999){\n                    int con=i^(1<<(a-1));con^=1<<(b-1);\n                    f[i]=min(f[i],f[con]+t[a][b]);\n                }\n            }\n        }\n    }\n    if(f[(1<<cnt)-1]<999999999)printf(\"%d\",f[(1<<cnt)-1]);\n    else printf(\"-1\");\n    return 0;\n}\n```",
        "postTime": 1538226129,
        "uid": 47378,
        "name": "\u67cf\u6728\u7531\u7eaaAKB48",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3943 \u3010\u661f\u7a7a\u3011"
    },
    {
        "content": "## \u9898\u76ee\u8bb2\u89e3\n--------------------\n### \u524d\u8a00\n\n\u9996\u5148\uff0c\u770b\u5230\u8fd9\u9053\u9898\uff0c\u6211\u5c31\u60f3\u5230\u4e86\u4e00\u9053\u72b6\u538b\u9898\uff0c\u5982\u679c\u4f60\u770b\u8fc7\u6211\u7684\u72b6\u538b\u4e13\u9898\u7684\u8bdd\uff0c\u5c31\u4f1a\u53d1\u73b0\u8fd9\u548c **[It\u2019s not a Bug , it\u2019s a Feature!] **\u5f88\u50cf\u3002\u540c\u5c5e\u4e8e\u5f00\u5173\u706f\u95ee\u9898\u3002\n\n\u53ef\u662f\u4ed4\u7ec6\u770b\u6765\uff0c\u8fd9\u9053\u9898emmm\u597d\u50cf\u6570\u636e\u6709\u70b9\u3002\u3002\u3002\u592a\u5927\u4e86\uff0c\u849f\u84bb\u7684\u6211\u53ea\u597d\u5728\u8003\u573a\u4e0a\u6253\u4e86\u4e00\u4e2a\u72b6\u538b+\u9690\u5f0f\u56fespfa\u3002\u7ed3\u679c\u53ea\u5f97\u4e8630\u5206\u3002\n\n**\u6b64\u9898\u6b63\u89e3\uff1a\u5dee\u5206+bfs(\u5b8c\u5168\u80cc\u5305)+\u72b6\u538bDP(spfa)\u3002**\n\n\u771f\u662f\u4e00\u9053\u4f18\u79c0\u7684\u9898\u76ee\u554a\u3002\n\n----------------------------------\n\n### \u5dee\u5206\n\n**\u5728\u9898\u89e3\u7684\u5e2e\u52a9\u4e0b\uff08\u6ca1\u9519\uff0c\u5c31\u662f\u9898\u89e3\uff09\uff0c\u4e86\u89e3\u4e86\u5f02\u6216\u5dee\u5206\u3002**\n\n**\u5dee\u5206\uff1a\u4e00\u4e2a\u53ef\u4ee5\u628a\u533a\u95f4\u4fee\u6539\u53d8\u4e3a\u5355\u70b9\u4fee\u6539\u7684\u64cd\u4f5c\u3002**\n\n**\u53ea\u662f\u8fd9\u91cc\u7684\u5dee\u5206\u662f\u5f02\u6216\u5dee\u5206\uff08\u4e0e\u666e\u901a\u5dee\u5206\u4e0d\u4e00\u6837\uff01\uff01\uff09\uff0c\u662f\u524d\u540e\u5f02\u6216\u7684\u7ed3\u679c\u3002**\n\n**\u800c\u4e14\u533a\u95f4\u7684\u4e24\u7aef\u90fd\u8981\u7b97\u4e0a\uff0c\u7136\u540eO(n)->O(k)~~(\u80e1\u4e71\u5206\u6790\uff0c\u4e0d\u8981\u8ba4\u771f\uff09~~**\n\n**\u6b64\u65f6\u6211\u4eec\u53cd\u8f6c\u533a\u95f4\uff0c\u5c31\u76f8\u5f53\u4e8e\u5c06\u533a\u95f4\u4e24\u7aef\u6362\u4f4d\u3002\u7531\u4e8ek\u6bd4\u8f83\u5c0f\uff0c\u81ea\u7136\u60f3\u5230\u72b6\u538b\u3002**\n\n-------------------\n### bfs\uff081\uff0c1\uff09\u70b9\u5bf9\u5904\u7406\u8ddd\u79bb\n\n**\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5904\u7406\u4e00\u4e0b\u6bcf\u4e2a 1 \u4e4b\u95f4\u7684\u8ddd\u79bb\uff08\u4e5f\u5c31\u662f\u82b1\u8d39\uff09\uff0c\u7528\u6bcf\u4e2a\u5c0f\u6b65\uff08\u6240\u7ed9\u533a\u95f4\u8f6c\u6362\u957f\u5ea6\uff09\u7ec4\u6210\u8fd9\u4e2a\u8ddd\u79bb\uff0c\u7528bfs\u4e0d\u5c31\u80fd\u89e3\u51b3\u5417\uff08\u4e5f\u53ef\u4ee5\u5b8c\u5168\u80cc\u5305\uff09\u3002**\n\n**\u4e3e\u4e2a\u6837\u6817\uff1a**\n\n**\u67091\uff0c5\u4e24\u4e2a\u4f4d\u7f6e\u4e3a1\uff0c\u67093\uff0c4\u957f\u5ea6\u7684\u533a\u95f4\u53cd\u8f6c\u3002\uff08\u6837\u4f8b\u89e3\u91ca\uff09\u3002**\n\n**\u5c0610001\u5dee\u5206\u540e\uff0c\u53d8\u6210110011\u3002**\n\n**\u5c06\u56db\u4e2a1\u4e24\u4e24\u6d88\u6389\uff0c\u660e\u663e\u662f\u7b2c1&\u7b2c5\uff0c\u7b2c2&\u7b2c6\uff0c\u4e24\u6b65\u957f\u5ea6\u4e3a4\u7684\u64cd\u4f5c\u3002**\n\n**\u800c\u6211\u4eec\u53ea\u9700\u8981bfs\u6c42\u51fa\u6bcf\u4e2a 1 \u4e4b\u95f4\u7684\u6700\u77ed\u8ddd\u79bb\u5373\u53ef\uff0c\u9009\u62e9\u8be5\u54ea\u4e24\u4e2a 1 \u6d88\u6389\u662fDP\u7684\u4e8b\u60c5\u4e86\u3002**\n\n------------------------------------\n### \u72b6\u538bDP\u5904\u7406\u6700\u4f18\u51b3\u7b56\n\n**\u6700\u540e\uff0c\u72b6\u538bDP\u5c06 1 \u4e24\u4e24\u76f8\u6d88\uff0c\u76f8\u5f53\u4e8e\u51b3\u7b56\u5e94\u8be5\u54ea\u4e24\u4e2a 1 \u76f8\u6d88\u3002**\n\n**\u8bbe\u72b6\u6001\u4e3a\u6bcf\u4e2a1\u662f\u5426\u6d88\u6389\u4e86\uff0c\u521d\u59cb\u4e3a0\uff0c\u6700\u540e\u72b6\u6001\u4e3a(1<<1\u7684\u6570\u91cf)-1\u8868\u793a1\u5168\u90e8\u6d88\u6389\u3002**\n\n**\uff08\u96c6\u5408\u4e0d\u8d85\u8fc7$2^{1\u7684\u6570\u91cf}$\uff09\u3002**\n\n---------------------------\n## code:\n\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#include<cstdio>\n#include<queue>\nconst int maxn=500005;\nusing namespace std;\nint m,n,k;\nint way[maxn],a[maxn],b[maxn],one[maxn];\nint dis[20][20],f[1<<18];\nqueue<int>q;\nint s[maxn];\nbool vis[maxn];\nvoid bfs(int a)\n{\n    memset(s,0,sizeof s);\n    memset(vis,0,sizeof vis);\n    vis[a]=1;\n    s[a]=0;\n    q.push(a);\n    while(!q.empty())\n    {\n        int u=q.front();\n        q.pop();\n        for(int i=1;i<=m;i++)\n        {\n            int v1=u+way[i],v2=u-way[i];\n            if(v1<=n&&vis[v1]==0)\n            {\n                q.push(v1);\n                s[v1]=s[u]+1;\n                vis[v1]=1;\n            }\n            if(v2>=0&&vis[v2]==0)\n            {\n                q.push(v2);\n                s[v2]=s[u]+1;\n                vis[v2]=1;\n            }\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d%d%d\",&n,&k,&m);\n    for(int i=1;i<=k;i++)\n    {\n        int x;\n        scanf(\"%d\",&x);\n        a[x]=1;\n    }\n    for(int i=1;i<=m;i++)\n        scanf(\"%d\",&way[i]);\n    int cnt=0;\n    for(int i=0;i<=n;i++)\n    {\n        b[i]=a[i]^a[i+1];\n        if(b[i]==1)\n            one[++cnt]=i;\n        //cout<<b[i];\n    }\n    for(int i=1;i<=cnt;i++)\n    {\n        bfs(one[i]);\n        for(int j=1;j<=cnt;j++)\n            dis[i][j]=s[one[j]];\n    }\n    int S=1<<cnt;\n    for(int i=1;i<S;i++) f[i]=0x3f3f3f3f;\n    for(int i=0;i<S;i++)\n    {\n        int j=0;\n        while(i&(1<<j)) j++;\n        for(int p=j+1;p<cnt;p++)\n        {\n            if(!(i&(1<<p))&&dis[p+1][j+1])\n                f[i|(1<<p)|(1<<j)]=min(f[i|(1<<p)|(1<<j)],f[i]+dis[p+1][j+1]);\n        }\n    }\n    printf(\"%d\\n\",f[S-1]);\n    return 0;\n}\n```\n---------------------------------------------\n# : )       \u6b22\u8fce\u8bbf\u95ee\u65b0\u5f00\u535a\u5ba2[\u4f20\u9001\u95e8](http://tchoi.club)",
        "postTime": 1537143062,
        "uid": 59032,
        "name": "\u8f7b\u5c18",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3943 \u3010\u661f\u7a7a\u3011"
    },
    {
        "content": "\n[$\\Longrightarrow$\u539f\u9898\u94fe\u63a5](https://www.luogu.com.cn/problem/P3943)\n\n\u5f88\u5999\u7684\u4e00\u9053\u9898\uff0c\u672c $\\mathrm{juruo}$ \u5728\u8003\u573a\u4e0a\u505a\u4e0d\u51fa\u6765\u3002\u601d\u8def\u9519\u4e86\uff0c\u5e72\u77aa\u773c\u534a\u5929\u770b\u4e0d\u51fa\u505a\u6cd5\u3002\n\n\u56e0\u672c\u4eba\u559c\u597d\uff0c**\u5c06\u539f\u9898\u7684 $0/1$ \u8c03\u6362\u4e86**\u3002\uff08\u96fe\uff09\n\n\u5bf9\u533a\u95f4\u8fdb\u884c\u64cd\u4f5c\uff0c\uff08\u53ef\u4ee5\u770b\u6210\uff09\u6700\u540e\u624d\u89c2\u5bdf\u7b54\u6848\uff08\u5982\u679c\u662f\u66b4\u529b\uff09\uff0c\u90a3\u4e48\u53ef\u4ee5\uff08\u6bd4\u8f83\u96be\uff09\u60f3\u5dee\u5206\u3002\u5bf9\u533a\u95f4 $[l,r]$ \u53d6\u53cd\uff0c\u5c31\u662f\u5728\u5dee\u5206\u6570\u7ec4 $f_{1...n+1}$ \u4e2d $f_l,f_{r+1}$ \u5206\u522b\u53d6\u53cd\uff0c\u540c\u65f6\uff0c\u5f53\u5b58\u5728 $a_i=p$ \uff0c\u90a3\u4e48 $f_p,f_{p+1}$ \u5206\u522b\u53d6\u53cd\u3002\u90a3\u4e48\u6700\u7ec8\u7b2c$i$\u4e2a\u4f4d\u7f6e\u7684\u503c\u5c31\u662f $\\bigoplus_{j=1}^i f_j$\u3002\n\n\u63a5\u7740\u53ef\u4ee5\u60f3\u5230\uff0c\u539f\u6570\u7ec4\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u90fd\u53d8\u6210\u96f6\u548c$f$\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u90fd\u53d8\u6210\u96f6\u662f\u7b49\u4ef7\u7684\u3002\n\n\u73b0\u5728\u95ee\u9898\u8f6c\u5316\u6210\u4e86\uff1a\u6709 $m$ \u79cd\u95f4\u9694\uff0c\u6bcf\u6b21\u64cd\u4f5c\u9009\u53d6\u4e00\u4e2a\u95f4\u9694 $b$ \u548c\u4e00\u4e2a\u5f00\u59cb\u4f4d\u7f6e $st$ \uff0c\u7136\u540e $f_{st}, f_{b+st}$ \u5206\u522b\u53d6\u53cd\uff0c\u7528\u6700\u5c11\u7684\u64cd\u4f5c\u4f7f $f$ \u53d8\u6210\u96f6\u3002(\u5e9f\u8bdd)\n\n**\u5148\u8003\u8651 $n\\leq 16$ \u6216\u8005\u66f4\u5c0f\u7684\u60c5\u51b5\u3002**\n\n\u53ef\u4ee5\u60f3\u5230\uff0c\u7528\u4e00\u6b21\u6216\u591a\u6b21\u64cd\u4f5c\u53ef\u4ee5\u505a\u51fa\u591a\u79cd\u95f4\u9694\uff0c\u90a3\u4e48\u6211\u4eec\u8bbe $val(i,j)$ \u8868\u793a\u540c\u65f6\u5c06 $i,j$ \u8fd9\u4e24\u4e2a\u4f4d\u7f6e\u53d6\u53cd\u9700\u8981\u7684\u6700\u5c0f\u6b65\u6570\u3002\u4e3a\u4e86\u6c42\u51fa\u8fd9\u4e2a\u6570\u7ec4\uff0c\u6211\u4eec\u5c06\u95ee\u9898\u8f6c\u5316\u4e3a\u4e00\u4e2a\u6700\u77ed\u8def\u95ee\u9898\uff0c\u5c06\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u770b\u6210\u56fe\u4e0a\u7684\u4e00\u4e2a\u70b9\uff0c\u800c\u4e00\u4e2a\u70b9 $p$ \u6709\u6700\u591a $2m$ \u6761\u8fb9\uff08\u56e0\u4e3a\u6709\u8fb9\u754c\uff09\uff0c\u5206\u522b\u4e3a $p \\pm b_1, p \\pm b_2, p \\pm b_3...$ \u3002\u4f46\u662f\u56e0\u4e3a\u8fd9\u91cc\u7684\u8fb9\u6743\u90fd\u662f $1$ \uff0c\u6240\u4ee5\u76f4\u63a5\u4f7f\u7528 $\\mathrm{BFS}$ \u5c31\u597d\u4e86\uff08\u6bcf\u6b21\u9009\u62e9\u4e00\u4e2a\u8d77\u59cb\u8282\u70b9\uff0c\u7136\u540e\u66b4\u529b\u8dd1\uff09\u3002\n\n\u8bbe $d(S)$ \u8868\u793a $f$ \u7684\u503c\u7684\u72b6\u6001\u538b\u7f29\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528 $\\mathrm{spfa}$ \uff0c\u5c06\u4e00\u4e2a\u72b6\u6001\u770b\u6210\u4e00\u4e2a\u70b9\uff0c\u4e00\u6761\u8fb9 $(S, S \\oplus \\{i\\} \\oplus \\{j\\})$ \u7684\u8fb9\u6743\u5c31\u662f $val(i,j)$ \u3002\u8d77\u59cb\u70b9\u5c31\u662f $f$ \u8fd8\u6ca1\u6709\u64cd\u4f5c\u4e4b\u524d\u7684\u72b6\u6001\uff0c\u7b54\u6848\u5c31\u662f $d(0)$ \u3002\n\n\u4f46\u662f\u5bf9\u4e8e\u8fd9\u4e2a\u90e8\u5206\u5206\u800c\u8a00\uff0c\u76f4\u63a5\u4f7f\u7528 $\\mathrm{spfa}$ \u5c31\u597d\u4e86\uff0c\u8fd9\u6837\u5199\u53cd\u800c\u8fd8\u53ef\u80fd\u4f1a\u8d85\u65f6\uff0c\u4f46\u662f\u4e0a\u8ff0\u7684\u505a\u6cd5\u624d\u80fd\u9010\u6b65\u62d3\u5c55\u5230 $n \\leq 4\\times 10^4$ \u3002\n\n**\u8003\u8651 $n\\leq 200$ \u7684\u60c5\u51b5\u3002**\n\n$val(i,j)$ \u4e00\u6837\u53ef\u4ee5\u6c42\u51fa\u6765\uff0c\u4f46\u662f $d$ \u662f\u6c42\u4e0d\u4e86\u3002\uff08\u60b2)\n\n\u8003\u8651\u6bcf\u4e00\u6b21\u64cd\u4f5c\uff0c\u5bf9 $f$ \u4e2d $1$ \u7684\u4e2a\u6570\u6709\u4e09\u79cd\u53d8\u5316\uff1a$+2$\uff0c\u4e0d\u53d8\uff0c$-2$\uff0c\u663e\u7136 $+2$ \u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u8fd9\u8f88\u5b50\u90fd\u4e0d\u53ef\u80fd\u7684\u3002\u800c\u5bf9\u4e8e\u4e0d\u53d8\u7684\u60c5\u51b5\uff0c\u662f\u6211\u53ef\u4ee5\u770b\u6210\u662f $-2$ \u64cd\u4f5c\u4e2d\u7684\u5176\u4e2d\u51e0\u6b65\uff0c\u56e0\u4e3a\u65b0\u589e\u7684\u90a3\u4e2a $1$ \u4e00\u5b9a\u662f\u8981\u5728\u4e4b\u540e\u88ab\u5220\u6389\u7684\u3002\u90a3\u4e48\u6211\u4eec\u5728\u505a $\\mathrm{spfa}$ \u7684\u65f6\u5019\uff0c\u6bcf\u6b21\u8f6c\u79fb\u90fd\u8981\u4fdd\u8bc1 $i \\in S, j \\in S, i < j$ \uff0c\u7136\u540e\u4ed4\u7ec6\u60f3\u60f3\uff0c\u5176\u5b9e\u6839\u672c\u4e0d\u9700\u8981 $\\mathrm{spfa}$ \uff0c\u53ea\u9700\u8981\u4e00\u4e2a $dp$ \u5c31\u53ef\u4ee5\u4e86\uff0c\u56e0\u4e3a\u6bcf\u4e2a $S$ \u53ea\u4f1a\u5411\u81ea\u5df1\u7684\u771f\u5b50\u96c6\u8fde\u8fb9\u3002\u540c\u65f6\uff0c\u6211\u4eec\u5df2\u7ecf\u4e0d\u9700\u8981\u8bb0\u4f4f\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u7684\u72b6\u6001\uff0c\u53ea\u9700\u8981\u8bb0\u4f4f $f$ \u521d\u59cb\u72b6\u6001\u4e2d\uff0c\u662f $1$ \u7684\u4f4d\u7f6e\u5c31\u597d\u4e86\u3002\n\n**\u8003\u8651 $n\\leq 4\\times 10^4$ \u7684\u60c5\u51b5\u3002**\n\n\u56e0\u4e3a\u6211\u4eec\u8f6c\u79fb\u7684\u65f6\u5019\u53ea\u7528\u5230\u4e86 $f$ \u521d\u59cb\u72b6\u6001\u662f $1$ \u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5 $val(i,j)$ \u66f4\u6539\u4e3a\u5c06 $pos_i,pos_j$ \u53d6\u53cd\u6240\u9700\u8981\u7684\u6700\u5c0f\u6b65\u6570\uff0c\u5176\u4e2d $pos_i$ \u8868\u793a $f$ \u7684\u521d\u59cb\u72b6\u6001\u4e2d\u7b2c $i$ \u4e2a\u4e3a $1$ \u7684\u4f4d\u7f6e\u3002\u56e0\u4e3a\u539f\u6570\u7ec4\u53ea\u6709 $k(k\\leq 8)$ \u4e2a $1$ ,\u90a3\u4e48 $pos$ \u7684\u5927\u5c0f\u81f3\u591a\u4e3a $16$ \u3002\u4f46\u662f\u6211\u4eec\u5728\u8ba1\u7b97 $val(i,*)$ \u7684\u65f6\u5019\u4f9d\u7136\u8981\u904d\u5386\u6240\u6709\u7684\u70b9\uff0c\u6240\u4ee5\u8ba1\u7b97 $val(i,j)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(kn)$ \u3002\n\n\u90a3\u4e48\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(kmn+2^{k}k^2)$ \u3002\n\n**\u8003\u8651$k\\leq 11$\u7684\u60c5\u51b5\u3002**\n\n\u5bf9\u4e8e\u4e00\u4e2a $dp$ \u7684\u72b6\u6001 $S$ \uff0c\u5176\u7b2c\u4e00\u4e2a\u4e3a $1$ \u7684\u4f4d\u7f6e\u662f\u4e00\u5b9a\u8981\u53d8\u6210 $0$ \u7684\uff08\u5e9f\u8bdd\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u5728\u6bcf\u4e00\u6b21\u8f6c\u79fb\u7684\u65f6\u5019\u90fd\u5f3a\u5236\u9009\u62e9\u7b2c\u4e00\u4e2a\u4e3a $1$ \u7684\u4f4d\u7f6e\u4f5c\u4e3a $i$ ,\u7136\u540e\u518d\u679a\u4e3e\u914d\u5957\u7684\u7b2c\u4e8c\u4e2a\u4f4d\u7f6e\u3002\n\n\u90a3\u4e48\u6700\u7ec8\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(nmk+2^k k)$ \u3002\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int maxn = 4e4 + 5, maxk = 15, maxm = 75;\nint n, m, k, pos_sz, b[maxm], sta[maxn];\nint pos[maxk << 1], val[maxk << 1][maxk << 1];\n\nint dist[maxn], vis[maxn];\nqueue<int> q;\nvoid calc_dfs() {\n    for (int st = 1; st <= pos_sz; st++) {\n        memset(dist, 0x3f, sizeof(dist)), memset(vis, 0, sizeof(vis));\n        q.push(pos[st]), vis[pos[st]] = 1, dist[pos[st]] = 0;\n        while (!q.empty()) {\n            int u = q.front(); q.pop();\n            for (int i = 1; i <= m; i++) {\n                int v = u + b[i];\n                if (v <= n + 1 && !vis[v]) {\n                    dist[v] = dist[u] + 1, vis[v] = 1;\n                    q.push(v);\n                } \n                v = u - b[i];\n                if (v >= 1 && !vis[v]) {\n                    dist[v] = dist[u] + 1, vis[v] = 1;\n                    q.push(v);\n                } \n            }\n        }\n        for (int ed = 1; ed <= pos_sz; ed++)\n            val[st][ed] = dist[pos[ed]];\n    }\n}\n\nint f[1 << (11 << 1)];\n\nint main() {\n    scanf(\"%d%d%d\", &n, &k, &m);\n    for (int i = 1; i <= k; i++) {\n        int p; scanf(\"%d\", &p);\n        sta[p] ^= 1, sta[p + 1] ^= 1;\n    }\n    for (int i = 1; i <= m; i++) scanf(\"%d\", &b[i]);\n    for (int i = 1; i <= n + 1; i++) if (sta[i]) \n        pos[++pos_sz] = i;\n    calc_dfs();\n    \n    memset(f, 0x3f, sizeof(f));\n    int maxS = (1 << pos_sz) - 1; f[maxS] = 0;\n    for (int S = maxS; S >= 1; S--) {\n        int p = 1;\n        while (!(S & (1 << (p - 1)))) p++; \n        for (int p2 = p + 1; p2 <= pos_sz; p2++) {\n            if (!(S & (1 << (p2 - 1)))) continue;\n            int nexS = S ^ (1 << (p - 1)) ^ (1 << (p2 - 1));\n            f[nexS] = min(f[nexS], f[S] + val[p][p2]);\n        }\n    }\n    printf(\"%d\\n\", f[0]);\n    return 0;\n}\n```",
        "postTime": 1606521843,
        "uid": 52404,
        "name": "\u5751\u961f\u53cb\u7684\u5c0f\u767d",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3943 \u3010\u661f\u7a7a\u3011"
    },
    {
        "content": "\u5b66\u72b6\u6001\u538b\u7f29\u7684\u65f6\u5019\u627e\u5230\u7684\u9898\uff0c\u987a\u4fbf\u5199\u7bc7\u9898\u89e3\n$\\colorbox{white}{\\color{white}{\\text{\u4e3a\u4e86\u6da8\u4f30\u503c\uff08\u9003\uff09}}}$\n\n\u4ecb\u7ecd\u4e00\u4e0b\u8981\u7528\u7684\u5e72\u8d27\uff1a~~\u4f4d\u8fd0\u7b97~~\u72b6\u6001\u538b\u7f29\uff0c\u5dee\u5206\uff0c\u80cc\u5305\uff0cDP\uff08\u597d\u50cf\u540e\u4e24\u4e2a\u90fd\u662f\u4e00\u4e2a\u4e1c\u897f\uff09\n$$\\colorbox{white}{\\color{white}{\\text{\u8fd9\u4e48\u591a\u4e1c\u897f\uff0c\u602a\u4e0d\u5f97\u662f\u7d2b\u9898}}}$$\n### \u7b2c\u4e00\u6b65\uff1a\u5904\u7406\u6ca1\u88ab\u70b9\u4eae\u7684\u706f\u6ce1\n\u975e\u5e38\u7684\u6c34\uff0c\u5dee\u5206\u5373\u53ef\u3002\n\n\u4e0d\u540c\u4e8e\u666e\u901a\u5dee\u5206\u6570\u7ec4\uff08\u5c31\u662f\u90a3\u4e2a\u201ca\u7684\u5dee\u5206\u6570\u7ec4\u662fd\u6570\u7ec4\uff0cd\u7684\u524d\u7f00\u548c\u662fa\u6570\u7ec4\u201d\uff09\uff0c\uff0c\u672c\u9898\u8981\u7528\u7684\u5dee\u5206\u6570\u7ec4\u662f\u201ca\u7684\u5dee\u5206\u6570\u7ec4\u662fd\u6570\u7ec4\uff0cd\u7684\u524d\u7f00\u5f02\u6216\u662fa\u6570\u7ec4\u201d\u3002\u5904\u7406\u65b9\u5f0f\u89c1\u4e0b\u9762\u7684\u4ee3\u7801\uff1a\n```cpp\nint x;\nfor (int i = 1; i <= k; i++) {\n\tscanf(\"%d\", &x);\n\td[x] ^= 1;//\u5dee\u5206\u8bb0\u5f55\n\td[x + 1] ^= 1;\n}\n```\n### \u7b2c\u4e8c\u6b65\uff1a\u5904\u7406\u53ef\u4ee5\u505a\u5230\u7684\u7ffb\u8f6c\u957f\u5ea6\u548c\u6240\u9700\u7684\u6b21\u6570\u3002\n\u80cc\u5305\u3002\u4f46\u662f\u533a\u95f4\u957f\u5ea6\u53ef\u4ee5\u76f8\u51cf\uff0c\u6240\u4ee5\u8981\u6b63\u53cd\u6765\u4e24\u904d\u3002\n```cpp\nfor (int i = 1; i <= l; i++)\n\tfor (int j = v[i]; j <= n; j++)\n\t\tw[j] = min(w[j], w[j - v[i]] + 1);//\u6b63\u7740\u80cc\u5305\nfor (int i = 1; i <= l; i++)\n\tfor (int j = n - v[i]; j >= 0; j--)\n\t\tw[j] = min(w[j], w[j + v[i]] + 1);//\u53cd\u7740\u80cc\u5305\n```\n## \u91cd\u78c5\u6b65\u9aa4\uff1a\u87ba\u65cb\u5927DP\n\u5c06\u8981\u4fee\u6539\u7684\u90a3\u51e0\u4e2a\u70b9\u538b\u7f29\u51fa\u6765\uff0c\u538b\u6210\u4e00\u4e2a`int`\uff0c\u4f5c\u4e3a`f`\u7684\u4e0b\u6807\u3002\n```cpp\nmemset(f, inf, sizeof(f));\nf[0] = 0;\nint s = (1 << p) - 1;\nfor (int i = 0; i < s; i++) {\n\tfor (int j = 1; j <= p; j++) {\n\t\tif ((1 << (j - 1)) & i)\n\t\t    continue;\n\t\tfor (int x = j + 1; x <= p; x++) {\n\t\t\tif ((1 << (x - 1)) & i)\n\t\t\t    continue;\n\t\t\tf[i | (1 << (j - 1)) | (1 << (x - 1))] = min(f[i | (1 << (j - 1)) | (1 << (x - 1))], f[i] + w[abs(t[x] - t[j])]);\n\t\t}\n\t}\n}\n```\n### \u6700\u540e\u4e00\u6b65\uff1a\u8f93\u51fa\u7b54\u6848\n\u8fc7\u6c34\u76f4\u63a5\u8d34\u4ee3\u7801\uff1a\n```cpp\nif (f[s] != inf)\n\tprintf(\"%d\\n\", f[s]);\nelse \n\tputs(\"-1\");\n```\n\n## ~~\u63a5\u4e0b\u6765\u662f\u53c8\u9999\u53c8\u7f8e\u5473\u7684\u603b\u4ee3\u7801\uff1a~~\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int inf = 0x3f3f3f3f;\nint t[11], v[70], w[40005], a[40005], f[70000];\nint main() {\n\tint n, k, l, p = 0;\n\tscanf(\"%d %d %d\", &n, &k, &l);\n\tfor (int i = 1; i <= k; i++) {\n\t\tint x;\n\t\tscanf(\"%d\", &x);\n\t\ta[x] ^= 1;\n\t\ta[x + 1] ^= 1;\n\t}\n\tfor (int i = 1; i<= n + 1; i++)\n\t    if (a[i])\n\t        t[++p] = i;\n\tfor (int i = 1; i <= l; i++)\n\t    scanf(\"%d\", &v[i]);\n\tmemset(w, inf, sizeof(w));\n\tw[0] = 0;\n\tfor (int i = 1; i <= l; i++)\n\t    for (int j = v[i]; j <= n; j++)\n\t        w[j] = min(w[j], w[j - v[i]] + 1);\n\tfor (int i = 1; i <= l; i++)\n\t    for(int j = n - v[i]; j >= 0; j--)\n\t        w[j] = min(w[j], w[j + v[i]] + 1);\n\tmemset(f, inf, sizeof(f));\n\tf[0] = 0;\n\tint s = (1 << p) - 1;\n\tfor (int i = 0; i < s; i++) {\n\t\tfor (int j = 1; j <= p; j++) {\n\t\t\tif ((1 << (j - 1)) & i)\n\t\t\t    continue;\n\t\t\tfor (int x = j + 1; x <= p; x++) {\n\t\t\t\tif ((1 << (x - 1)) & i)\n\t\t\t\t    continue;\n\t\t\t\tf[i | (1 << (j - 1)) | (1 << (x - 1))] = min(f[i | (1 << (j - 1)) | (1 << (x - 1))], f[i] + w[abs(t[x] - t[j])]);\n\t\t\t}\n\t\t}\n\t}\n\tif (f[s] != inf)\n\t    printf(\"%d\", f[s]);\n\telse \n\t    puts(\"-1\");\n}\n```\n$$\\colorbox{white}{\\color{white}{\\text{~~\u6700\u540e\u4e0d\u8981\u8138\u7684\u6c42\u6da8\u5495\u503c~~}}}$$\n## \u6700\u540e\uff0c\u8d34\u4e00\u4e2a\u4f18\u5316\u5230\u6781\u81f4\u7684~~\u6ee5\u7528\u4f4d\u8fd0\u7b97\u88c5\u903c\u7684~~\u4ee3\u7801\uff08\u6709\u5174\u8da3\u7684\u8bf7\u81ea\u884c\u94bb\u7814\uff09\n```cpp\n#include<stdio.h>\n#include<bits/stdc++.h>\nusing namespace std;\nint t[15], v[105], w[40005], a[40005], f[(1 << 21) + 5];\ninline int log2(int k) {\n\tint l = 0, r = 21, mid;\n\twhile (l < r) {\n\t\tmid = (l + r) >> 1;\n\t\tif (k >> mid != 0)\n\t\t\tl = mid + 1;\n\t\telse\n\t\t\tr = mid;\n\t}\n\treturn l;\n}\nint main() {\n\tmemset(a, 0, sizeof(a));\n\tint n, k, l, p = 0;\n\tscanf(\"%d %d %d\", &n, &k, &l);\n\tint qqq;\n\tfor (int i = 1; i <= k; i++) {\n\t\tscanf(\"%d\", &qqq);\n\t\ta[qqq] ^= 1;\n\t\ta[qqq + 1] ^= 1;\n\t}\n\tfor (int i = 1; i <= n + 1; i++)\n\t\tif (a[i])\n\t\t\tt[++p] = i;\n\tfor (int i = 1; i <= l; i++)\n\t\tscanf(\"%d\", v + i);\n\tfor (int i = 1; i <= n; i++)\n\t\tw[i] = 0x3f3f3f3f;\n\tfor (int i = 1; i <= l; i++)\n\t\tfor (int j = v[i]; j <= n; j++)\n\t\t\tw[j] = min(w[j], w[j - v[i]] + 1);\n\tfor (int i = 1; i <= l; i++)\n\t\tfor (int j = n - v[i]; j >= 0; j--)\n\t\t\tw[j] = min(w[j], w[j + v[i]] + 1);\n\tunsigned int s = (1 << p) - 1;\n\tfor (int i = 1; i <= s; i++)\n\t\tf[i] = 0x3f3f3f3f;\n\tfor (int i = 0; i < s; i++) {\n\t\tint q = i ^ s;\n\t\tfor (int j = q & (-q); j <= q && q; q -= j, j = q & (-q)) {\n\t\t\tint qq = q - j;\n\t\t\tfor (int x = qq & (-qq); x <= qq && qq; qq -= x, x = qq & (-qq)) {\n\t\t\t\tf[i | j | x] = min(f[i | j | x], f[i] + w[abs(t[log2(x)] - t[log2(j)])]);\n\t\t\t}\n\t\t}\n\t}\n\tif (f[s] != 0x3f3f3f3f)\n\t\tprintf(\"%d\\n\", f[s]);\n\telse \n\t\tputs(\"-1\");\n}\n```",
        "postTime": 1569143939,
        "uid": 124683,
        "name": "Krystallos",
        "ccfLevel": 9,
        "title": "\u9898\u89e3P3943\u3010\u661f\u7a7a\u3011"
    },
    {
        "content": "\n### \u72b6\u538bdp+\u5dee\u5206\n\n### [\u661f\u7a7a](https://www.luogu.org/problemnew/show/P3943)\n\u8fd9\u9898\u601d\u7ef4\u96be\u5ea6\u8fd8\u662f\u5f88\u5927\u7684.\n\u9996\u5148\u53d1\u73b0n\u7279\u522b\u7684\u5927,\u4f46\u662fk\u7279\u522b\u5c0f,\u663e\u7136\u662f\u8981\u5728k\u4e0a\u9762\u505a\u6587\u7ae0.\n\n\u8003\u8651\u5bf9\u539f\u5e8f\u5217\u8fdb\u884c\u5f02\u6216\u5dee\u5206,\u8fd9\u6837\u6709\u4ec0\u4e48\u597d\u5904\u5462?\u4e8e\u662f$010000110$\u5c31\u53d8\u6210\u4e86$0110000101$\n\n\u597d\u5904\u5c31\u662f\u533a\u95f4\u53d6\u53cd$[l,r]$\u7684\u65f6\u5019\u7b49\u4ef7\u4e8e\u5728\u5f02\u6216\u5e8f\u5217\u4e0a\u53d6\u53cd$l-1$\u548c$r$,\u4e8e\u662f\u73b0\u5728\u6211\u4eec\u7684\u76ee\u6807\u5c31\u53d8\u6210\u628a\u5f02\u6216\u5e8f\u5217\u4e0a\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u901a\u8fc7\u6bcf\u6b21\u53d6\u53cd\u4e24\u4e2a\u95f4\u9694\u4e00\u5b9a\u7684\u70b9,\u53d8\u62100\u7684\u6700\u5c0f\u6b21\u6570.\n\n\u7531\u4e8e\u6211\u4eec\u4e00\u6b21\u5728\u4e24\u4e2a0\u4e0a\u53d6\u53cd\u6ca1\u6709\u4efb\u4f55\u610f\u4e49,\u6bcf\u4e00\u6b21\u4fee\u6539\u8981\u4e48\u662f\u628a\u4e24\u4e2a1\u53d8\u62100,\u8981\u4e48\u662f\u4e00\u4e2a0\u53d81,\u4e00\u4e2a1\u53d80.\u5982\u679c\u662f\u540e\u8005\u7684\u8bdd,\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u770b\u505a\u8fd9\u4e2a\u524d\u9762\u76841\u5f80\u540e\u8df3\u4e86\u4e00\u6bb5,\u6700\u540e\u8fd8\u662f\u8981\u901a\u8fc7\u548c\u53e6\u5916\u4e00\u4e2a1\u540c\u65f6\u6d88\u6389.\n\n\u4e8e\u662f\u5c31\u53d8\u6210\u4e86\u70b9\u4e0e\u70b9\u4e4b\u95f4\u4e24\u4e24\u914d\u5bf9\u6c42\u6700\u5c0f\u4ee3\u4ef7\u7684\u95ee\u9898.\u70b9\u4e0e\u70b9\u4e4b\u95f4\u5339\u914d\u7684\u6700\u5c0f\u4ee3\u4ef7\u53ef\u4ee5\u901a\u8fc7bfs\u9884\u5904\u7406.\n\n\u6ce8\u610f\u8fd9\u91cc\u4e0d\u662f\u4e8c\u5206\u56fe\u5339\u914d,\u662f\u968f\u610f\u5339\u914d,\u6240\u4ee5\u4e0d\u80fd\u7528\u4e8c\u5206\u56fe\u5339\u914d\u7684\u7b97\u6cd5.\n\u4e00\u4e2a\u72b6\u538bdp\u8f7b\u677e\u641e\u5b9a.\n\n\u6ce8\u610f\u8fd9\u4e2adp\u770b\u8d77\u6765\u662f$O(2^kk^2)$\u7684,\u4e8b\u5b9e\u4e0a\u662f$O(2^kk)$\u7684.\n\n$k^2$\u8fdb\u884c\u4e86\u5927\u91cf\u7684\u91cd\u590d\u8fd0\u7b97,\u4e8b\u5b9e\u4e0a\u6211\u4eec\u53ea\u8981\u6309\u987a\u5e8f\u627e\u5230\u4e00\u5bf9\u6ca1\u6709\u5339\u914d\u8fc7\u7684\u70b9\u76f4\u63a5\u8f6c\u79fb\u5c31\u53ef\u4ee5\u4e86.\n\n\u8fd9\u6837\u663e\u7136\u662f\u53ef\u4ee5\u904d\u5386\u8f6c\u79fb\u5230\u6240\u6709\u7684\u72b6\u6001\u7684.\n\n\u642c\u8fd0zsy\u5de8\u5de8\u7684\u4ee3\u7801.\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<cstdlib>\n#include<ctime>\n#include<queue>\n#include<set>\n#include<map>\n#include<vector>\n#include<bitset>\n#define mid ((l+r)>>1)\n#define rc ((rt<<1)|1)\n#define lc (rt<<1)\n#define ll long long\n#define FILE(s) freopen(s\".in\",\"r\",stdin),freopen(s\".out\",\"w\",stdout)\nusing namespace std;\nint gi()\n{\n\tchar c;int x,sign=1;\n\twhile((c=getchar())>'9'||c<'0')if(c=='-')sign=-1;\n\tx=c-'0';while((c=getchar())>='0'&&c<='9')x=(x<<1)+(x<<3)+c-'0';\n\treturn x*sign;\n}\nint n,m,k,vis[40005],cost[17][17],st[17];\nint f[1<<17],b[100],dis[40005];queue<int> q;\nvoid bfs(int s,int *f)\n{\n\tmemset(dis,0,sizeof(vis));dis[s]=1;q.push(s);\n\twhile(!q.empty())\n\t{\n\t\tint u=q.front();q.pop();\n\t\tfor(int i=1;i<=m;i++)\n\t\t{\n\t\t\tif(u+b[i]<=n&&!dis[u+b[i]])dis[u+b[i]]=dis[u]+1,q.push(u+b[i]);\n\t\t\tif(u-b[i]>=1&&!dis[u-b[i]])dis[u-b[i]]=dis[u]+1,q.push(u-b[i]);\n\t\t}\n\t}\n\tfor(int i=1;i<=k;i++)f[i]=dis[st[i]]-1;\n}\nint main()\n{\n\tFILE(\"starlit\");\n\tcin>>n>>k>>m;n++;\n\tfor(int i=1,x;i<=k;i++)x=gi(),vis[x]^=1,vis[x+1]^=1;//\u628a\u521d\u59cb\u5e8f\u5217\u5f02\u6216\u5dee\u5206\n\tk=0;\n\tfor(int i=1;i<=n;i++)if(vis[i])st[++k]=i;//\u6807\u8bb0\u54ea\u4e9b\u70b9\u662f1\n\tfor(int i=1;i<=m;i++)b[i]=gi();//\u8bfb\u5165\u64cd\u4f5c\u7684\u7c7b\u578b\n\tfor(int i=1;i<=k;i++)bfs(st[i],cost[i]);//\u9884\u5904\u7406\u51fa\u6240\u6709\u70b9\u4e24\u4e24\u4e4b\u95f4\u7684\u6700\u5c11\u5230\u8fbe\u6b21\u6570\n\tmemset(f,0x3f,sizeof(f));f[0]=0;\n\tfor(int i=0;i<(1<<k)-1;i++)//\u72b6\u538bdp\n\t{\n\t\tfor(int j=1;j<=k;j++)//O((2^k)*k)\u7684\u590d\u6742\u5ea6\n\t\t{\n\t\t\tif((1<<(j-1))&i)continue;\n\t\t\tfor(int l=j+1;l<=k;l++)\n\t\t\t{\n\t\t\t\tif(((1<<(l-1))&i)||cost[j][l]==-1)continue;\n\t\t\t\tf[i|(1<<(j-1))|(1<<(l-1))]=\n\t\t\t\t\tmin(f[i|(1<<(j-1))|(1<<(l-1))],f[i]+cost[j][l]);\n\t\t\t}\n\t\t\tbreak;//\u6309\u987a\u5e8f\u4e00\u5bf9\u4e00\u5bf9\u5730\u52a0\u70b9\n\t\t}\n\t}\n\tcout<<f[(1<<k)-1]<<endl;\n\treturn 0;\n}\n\n```\n\n\n\n",
        "postTime": 1538897951,
        "uid": 61672,
        "name": "Brioche",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3943 \u3010\u661f\u7a7a\u3011"
    }
]