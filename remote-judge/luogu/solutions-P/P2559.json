[
    {
        "content": "    \n    \n    \n    \n```txt  \n    \u8fd9\u9053\u9898\u4e00\u5f00\u59cb\u770b\u662fAHOI\u4ee5\u4e3a\u5f88\u96be\uff0c\u4f46\u4ed4\u7ec6\u8bfb\u8fc7\u9898\u4e4b\u540e\uff0c\u7adf\u7136\u5c31\u662f\u4e00\u9053\u88f8\u7684\u6700\u77ed\u8def\u6c34\u9898\u3002\u53ea\u9700\u8981\u628a\u56fe\n\u5efa\u597d\u5c31\u884c\u4e86\n    \u770b\u5230\u6ca1\u4eba\u5199SPFA\uff0c\u4e8e\u662f\u6211\u6765\u5199\u4e00\u4e0b\n    \u8fd9\u9898\u7684\u4e3b\u8981\u601d\u8def\u662f\uff1a\u9996\u5148\u628a\u9898\u76ee\u4e2d\u6240\u7ed9\u7684\u6bcf\u4e00\u4e2a\u5730\u5f62\u7684\u8868\u7ed9\u6253\u51fa\u6765\uff0c\u4e4b\u540e\u518d\u6839\u636e\u8bfb\u5165\u7684s\u6570\u7ec4\u5efa\u597d\u56fe\n\uff0c\u518d\u8dd1\u4e00\u904d\u88f8\u7684SPFA\u5c31\u53ef\u4ee5\u4e86\u3002\n\n```\n```cpp\n#include<queue>\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define N 20010\nusing namespace std;\ninline void read(int &x)\n{\n    x=0;\n    int p=1;\n    char c=getchar();\n    while(!isdigit(c)){if(c=='-')p=-1;c=getchar();}\n    while(isdigit(c)) {x=(x<<1)+(x<<3)+(c^'0');c=getchar();}\n    x*=p;\n}//\u5feb\u901f\u8bfb\u5165\nint h[10]={0,2,6,4,8,6,10,14};//\u8fd9\u662f\u5730\u5f62\u7684\u8868\nint s[10];\nint S,T,c,e;\nconst int inf=0x3f3f3f3f;\nint to[N],beg[N],nex[N],w[N],vis[N],dis[N];\nvoid add(int x,int y,int z)\n{\n    to[++e]=y;\n    nex[e]=beg[x];\n    beg[x]=e;\n    w[e]=z;\n}\nvoid SPFA()\n{\n    memset(dis,inf,sizeof(dis));//\u8fd9\u91cc\u53ea\u6267\u884c\u4e00\u6b21\uff0c\u4e0d\u9700\u8981\u6e05\u6807\u8bb0\u6570\u7ec4\n    queue<int>q;//\u961f\u5217\u4f18\u5316\n    q.push(S);\n    vis[S]=1;\n    dis[S]=0;\n    while(!q.empty())\n    {\n        int k=q.front();\n        q.pop();\n        vis[k]=0;\n        for(int i=beg[k];i;i=nex[i])\n        {\n            int y=to[i];\n            if(dis[y]>dis[k]+w[i])//\u677e\u5f1b\u64cd\u4f5c\n            {\n                dis[y]=dis[k]+w[i];\n                if(!vis[y])\n                {\n                    vis[y]=1;\n                    q.push(y);\n                }\n            }\n        }\n    }\n    printf(\"%d\\n\",dis[T]);\n}\nint main()\n{\n    for(int i=1;i<=7;i++)read(s[i]);    \n    read(S);read(T);\n    read(c);\n    for(int i=1;i<=c;i++)\n    {\n        int tmp;\n        int x,y,z;\n        read(x);read(y);read(tmp);\n        if(s[tmp])z=h[tmp]/2;//\u7b97\u51fa\u8def\u5f84\u7684\u6743\u503c\n        else z=h[tmp];\n        add(x,y,z);\n        add(y,x,z);//\u65e0\u5411\u56fe\n    }\n    SPFA();//\u6700\u77ed\u8def\n    return 0;\n}\n```",
        "postTime": 1503903336,
        "uid": 22016,
        "name": "pengym",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2559 \u3010[AHOI2002]\u54c8\u5229\u00b7\u6ce2\u7279\u4e0e\u9b54\u6cd5\u77f3\u3011"
    },
    {
        "content": "### \u8fd9\u662f\u7eff\u540d\u849f\u84bb\u7b2c\u4e8c\u6b21\u53d1\u9898\u89e3\uff08\u7b2c\u4e00\u6b21\u6ca1\u6709\u901a\u8fc7\uff09......\n\u4e00\u9053\u76f8\u5bf9\u7b80\u5355\u7684\u7701\u9009\u9898\uff08\u6700\u77ed\u8def\u6a21\u677f\u9898\uff09~~\u4e5f\u662f\u6211AC\u7684\u7b2c\u4e00\u9053\u7eff\u9898~~\n\n\u6bcf\u4e24\u4e2a\u57ce\u5e02\u4e4b\u95f4\u7684\u65f6\u95f4\u7531\u5730\u5f62\u548c\u6709\u65e0\u9b54\u6cd5\u77f3\u51b3\u5b9a\uff0c\u800c\u6bcf\u4e2a\u5730\u5f62\u901a\u8fc7\u7684\u65f6\u95f4\u662f\u56fa\u5b9a\u7684\uff082,6,4,8,6,10,14\uff09\uff0c\u8f93\u5165\u4e86\u9b54\u6cd5\u77f3\u7684\u6709\u65e0\uff0c\u6240\u4ee5\u65f6\u95f4\u5c31\u51fa\u6765\u4e86\u3002\n\n \u4f17\u6240\u5468\u77e5\uff0c\u6700\u77ed\u8def\u7b97\u6cd5\u5f88\u591a\uff0c\u8fd9\u91cc\u6211\u9009\u7528\u4e86Floyd\u7b97\u6cd5\uff08\u65f6\u590dN^3\uff09\uff0c\u6211\u89c9\u5f97\u6bd4\u8f83\u597d\u61c2\uff0c\u4ee3\u7801\u4e5f\u7b80\u5355\uff08\u57ce\u5e02\u7f16\u53f7\u4e0d\u8d85\u8fc7100\uff0c\u8fd9\u4e0d\u662f\u660e\u663e\u6697\u793a\u7528Floyd\u5417\uff09~~\u53cd\u6b63\u6211\u8fdeDijkstra\u90fd\u4e0d\u4f1a~~\n \n\u4ee5\u4e0b\u662fFloyd\u5177\u4f53\u601d\u8def\uff1a\n\n### \u7528dis[i][j]\u6570\u7ec4\u8868\u793ai~j\u7684\u6700\u77ed\u8def\u5f84\uff0c\u4ece1~n\u679a\u4e3e\u4e2d\u95f4\u70b9k\uff0c\u5982\u679c\u4ecei\u5230j\u8fc7k\u6709\u66f4\u77ed\u7684\u8def\u5f84\u5c31\u5237\u65b0\uff0c\u5426\u5219\u4fdd\u7559\u539f\u6765\u8def\u5f84\uff08\u6709\u70b9\u52a8\u89c4\u601d\u60f3\uff0c\u8f6c\u79fb\u65b9\u7a0b\uff1adis[i][j]=min(dis[i][j],dis[i][k]+dis[k][j])\uff09\n\u6ce8\u610f\u4e8b\u9879\uff1a\n1 \u5faa\u73af\u65f6\u8981\u628a\u4e2d\u95f4\u70b9k\u653e\u5728\u6700\u5916\u5c42\uff1b \n2 \u4e00\u5f00\u59cb\u65f6\uff08\u8f93\u5165\u524d\uff09\u6bcf\u4e24\u4e2a\u70b9\u4e4b\u95f4\u90fd\u662f\u6ca1\u6709\u8def\u7684\uff0c\u6240\u4ee5\u8ddd\u79bb\u8981\u6807\u6210\u65e0\u9650\u800c\u4e0d\u662f0\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4\u6240\u6709\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u90fd\u662f0\n3 \u8fd9\u79cd\u7b97\u6cd5\u53ea\u9002\u7528\u4e8e\u65e0\u8d1f\u73af\u56fe\uff08\u4e5f\u5c31\u662f\u4e0d\u5b58\u5728\u8fb9\u6743\u503c\u548c\uff1c0\u7684\u73af\uff09~~\u4e0d\u8fc7\u597d\u50cf\u548c\u8fd9\u9898\u6ca1\u6709\u5173\u7cfb~~\n\n\u732e\u4e0a\u7801\u98ce\u5947\u7279\u7684\u4ee3\u7801\uff08\u6709\u4e00\u4e9b\u6ce8\u91ca\uff0c\u4e0d\u8fc7\u6211\u8bed\u6587\u4e0d\u592a\u597d\uff0c\u8fd8\u8bf7\u89c1\u8c05\uff09\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nunsigned long long i,j,k,x,y,c,dist[105][105];//\u8fd9\u4e2a\u6570\u7ec4\u8bb0\u5f55\u8ddd\u79bb \nint s[8]={99999,2,6,4,8,6,10,14};//\u8fd9\u4e2a\u6570\u7ec4\u8bb0\u5f55\u6bcf\u4e2a\u5730\u5f62\u82b1\u8d39\u65f6\u95f4(\u6211\u4e60\u60ef\u4ece1\u5f00\u59cb,\u6240\u4ee5s[0]\u8981\u7a7a\u51fa) \nbool ck[8];//\u5224\u65ad\u6709\u6ca1\u6709\u77f3\u5934 \nint main(){\n\tmemset(dis,100000,sizeof(dis));//\u521d\u59cb\u5316:\u5fc5\u987b\u8db3\u591f\u5927(\u5373\u4e00\u5f00\u59cb\u6700\u77ed\u8def\u662f\u65e0\u9650\u957f) \n\tfor(i=1;i<8;i++)cin>>ck[i]; \n\tcin>>x>>y>>c;//x\u8d77\u70b9,y\u7ec8\u70b9(\u6211\u66f4\u4e60\u60ef\u7528\u53d8\u91cfi,j\u5199for\u5faa\u73af) \n\tif(x==y){ //\u7279\u5224:\u5982\u679cx,y\u76f8\u7b49\u5c31\u662f0!!!!(\u7b2c\u4e00\u6b21\u63d0\u4ea4WA\u4e869\u53f7\u70b9,\u5c31\u56e0\u4e3a\u8fd9\u4e2a) \n\t\tcout<<0;\n\t\treturn 0;\n\t}\n\twhile(c--){\n\t\tcin>>i>>j>>k;\n\t\tif(ck[k]){ //\u6709\u77f3\u5934,\u82b1\u8d39\u51cf\u534a \n\t\t\tdis[i][j]=s[k]/2;\n\t\t\tdis[j][i]=s[k]/2;//\u6ce8\u610f\u8fd9\u91cc\u662f\u53cc\u5411\u8fb9,\u6240\u4ee5\u4e24\u5934\u90fd\u8981\u8bb0\u5f55\t\n\t\t}\n\t\telse { //\u6ca1\u77f3\u5934,\u82b1\u8d39\u7167\u5e38 \n\t\t\tdis[i][j]=s[k];\n\t\t\tdis[j][i]=s[k];\n\t\t}\n\t}\n\tfor(k=1;k<=100;k++){ //Floyd\u6838\u5fc3\u4ee3\u7801,\u5177\u4f53\u601d\u8def\u89c1\u4e0a(\u6ce8\u610f\u4e2d\u95f4\u70b9\u5faa\u73af\u653e\u6700\u5916\u5c42) \n\t\tfor(i=1;i<=100;i++){\n\t\t\tfor(j=1;j<=100;j++){\n\t\t\t\tdis[i][j]=min(dis[i][j],dis[i][k]+dis[k][j]);\n\t\t\t}\n\t\t}\n\t}\n\tcout<<dis[x][y]<<endl;//\u6700\u540e\u8f93\u51fa\u4ecex\u5230y\u6700\u77ed\u8def\u8ddd\u79bb \n\treturn 0;\n}\n```\n\n",
        "postTime": 1564449202,
        "uid": 148121,
        "name": "zjy111",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2559 \u3010[AHOI2002]\u54c8\u5229\u00b7\u6ce2\u7279\u4e0e\u9b54\u6cd5\u77f3\u3011"
    },
    {
        "content": "# \u9119\u4eba\u5386\u5c3d\u6ca7\u6851\uff0c\u7ec8\u4e8eAC\u4e86\n\n**\u8fd9\u5176\u5b9e\u662f\u4e00\u4e2a\u6700\u77ed\u8def\u677f\u5b50\u9898\uff0c_~~\u7ed3\u679c\u6211\u88ab\u5730\u5f62\u6574\u5f97\u4e1c\u5012\u897f\u6b6a~~_**\n\n\u5047\u8bbe\uff1a\u57ce\u5e02u\u548c\u57ce\u5e02v\u4e4b\u95f4\u6709\u4e00\u79cd\u5730\u5f62w\uff0c\n\n\u6240\u8017\u8d39\u7684\u65f6\u95f4\u5c31\u4e3ah[w]\uff0c\u800c\u4e07\u4e07\u4e0d\u662fh[u]\uff01\n\n\u5982\u679cs[w]==1\uff0c\u6240\u8017\u8d39\u7684\u65f6\u95f4\u6539\u4e3ah[u]/2\u3002\u4f46\u662f\uff0c\u8fd8\u8981\u518d\u5efa\u7acb\u4e00\u4e2a\u53d8\u91cfww\uff0c\u6765\u8bb0\u5f55h[w]/2\uff0c\u4e0d\u53ef\u4ee5\u6539\u52a8h[w]\u7684\u539f\u503c\uff01\n\n**_\u5e9f\u8bdd\u4e0d\u591a\u8bf4\uff0c\u677f\u5b50\u8fea\u6770\u514b\u65af\u62c9\uff1a_**\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<vector>\nusing namespace std;\nint h[8]={0,2,6,4,8,6,10,14};\nint s[8];\nint from,t,d[110],c;\nstruct edge\n{\n\tint to,cost;\n};\nvector<edge>G[110];//vector\u5b58\u56fe \ntypedef pair<int,int>P; \nvoid dijkstra(int s)\n{\n\tfor(int i=1;i<=110;i++) d[i]=1e9;//\u8d4b\u521d\u503c \n\tpriority_queue<P,vector<P>,greater<P> >q;//\u5b9a\u4e49\u4f18\u5148\u961f\u5217q \n\td[s]=0;//\u81ea\u5df1\u672c\u8eab\u5230\u81ea\u5df1\u672c\u8eab\u7684\u8ddd\u79bb\u662f0 \n\tq.push(P{0,s});//\u52a0\u5165\u5230\u961f\u5217\u91cc \n\twhile(!q.empty())//\u53ea\u8981\u8fd8\u6709\u5143\u7d20 \n\t{\n\t\tP p=q.top();//\u53d6\u961f\u9996 \n\t\tq.pop();//\u58f0\u660e\u4e00\u4e0b\uff0cp.first\u4ee3\u8868\u8ddd\u79bb\uff0cp.second\u4ee3\u8868\u4e00\u4e2a\u70b9 \n\t\tint v=p.second;//\u4e3a\u4e86\u65b9\u4fbf\u4e00\u4e9b\uff0c\u5b58\u5728\u53d8\u91cf\u91cc \n\t\tif(d[v]<p.first) continue;\n\t\tfor(int i=0;i<G[v].size();i++)\n\t\t{\n\t\t\tedge e=G[v][i]; \n\t\t\tif(d[e.to]>d[v]+e.cost)//\u677e\u5f1b\u64cd\u4f5c\uff0c\u8d2a\u5fc3\u601d\u60f3 \n\t\t\t{\n\t\t\t\td[e.to]=d[v]+e.cost;\n\t\t\t\tq.push(P{d[e.to],e.to});\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tfor(int i=1;i<=7;i++) scanf(\"%d\",&s[i]);\n\tscanf(\"%d%d%d\",&from,&t,&c);\n\twhile(c--)\n\t{\n\t\tint u,v,w;//vector\u5b58\u56fe \n\t\tscanf(\"%d%d%d\",&u,&v,&w);\n\t\tint ww=h[w];\n\t\tif(s[w]==1) ww/=2;\n\t\tG[u].push_back(edge{v,ww});//\u65e0\u5411\u56fe \n\t\tG[v].push_back(edge{u,ww});//\u5982\u679c\u60a8\u5b58\u4e86\u6709\u5411\u56fe\u53ea\u80fd\u5f97\u523030\u5206 \n\t}\n\tdijkstra(from);\n\tprintf(\"%d\\n\",d[t]);//\u8f93\u51fa \n\treturn 0;//\u517b\u6210\u826f\u597d\u4e60\u60ef \n}\n```\n",
        "postTime": 1582783626,
        "uid": 174303,
        "name": "_NaCly_Fish",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2559 \u3010[AHOI2002]\u54c8\u5229\u00b7\u6ce2\u7279\u4e0e\u9b54\u6cd5\u77f3\u3011"
    },
    {
        "content": "## \u4ee4\u4eba\u7a92\u606f\u7684floyd\uff0c\u5b9e\u5728\u60f3\u4e0d\u5230\u6253floyd\u5c45\u7136AC\u4e86\uff01\uff01\uff01\u65f6\u95f4\uff1a0ms\u5185\u5b58\uff1a2544KB\n\n## \u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include<iostream>\nusing namespace std;\nint h[8]={0,2,6,4,8,6,10,14};//\u6253\u4e2a\u9759\u6001\u6570\u7ec4\u4fdd\u5b58\u6bcf\u79cd\u5730\u5f62\u9700\u8981\u7684\u65f6\u95f4\uff0c\u7531\u4e8e\u9759\u6001\u6570\u7ec4\u662f\u4ece0\u5f00\u59cb\u7684\uff0c\u6240\u4ee5\u4e0a\u9762\u8981\u5148\u6253\u4e2a0\u5148\uff0c\u5267\u6bd2\u65e0\u6bd4\uff0c\u8fd9\u91cc\u5361\u4e86\u6211\u597d\u4e45\nint mind=99999999,s[8];\nint a[1001][1001],x,y,b[10001],n,m,c,z;\nint main()\n{\n    for(int i=1;i<=7;i++)\n    cin>>s[i];\n    cin>>n>>m;\n    cin>>c;\n    for(int i=1;i<=c;i++)\n      for(int j=1;j<=c;j++)\n           if(i!=j) a[i][j]=99999999;//\u521d\u59cb\u5316\n    for(int i=1;i<=c;i++)\n    {\n        cin>>x>>y>>z;//\u8bfb\u5165\n        if(s[z]==1)//\u5224\u65ad\u8fd9\u4e2a\u5730\u5f62\u6709\u6ca1\u6709\u9b54\u6cd5\u77f3\n        {\n            a[x][y]=h[z]/2;//\u6709\u7684\u8bdd\u53ea\u7528\u82b1\u4e00\u534a\u65f6\u95f4\n            a[y][x]=a[x][y];//\u65e0\u5411\u56fe\u5b58\u8fb9\n            continue;\n        }\n            a[x][y]=h[z];//\u5982\u679c\u6ca1\u6709\u9b54\u6cd5\u77f3\uff0c\u5c31\u5e38\u89c4\u5b58\u8fb9\n            a[y][x]=h[z];\n    }\n    for(int k=1;k<=c;k++)//\u5f00\u59cb\u4ee4\u4eba\u7a92\u606f\u7684floyd\n        for(int i=1;i<=c;i++)\n            if(k!=i)\n                for(int j=2;j<=c;j++)\n                       {\n                            if(a[i][j]>a[i][k]+a[k][j]) \n                        {\n                            a[i][j]=a[i][k]+a[k][j];\n                        }\n                        }\n    cout<<a[n][m];//\u8f93\u5165\u7b2cn\u4e2a\u70b9\u5230\u7b2cm\u4e2a\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\n    return 0;\n}\n//\u6211\u7684\u6c34\u4ee3\u7801\u5728\u4e0a\u9762\uff0c\u795d\u5927\u5bb6\u987a\u5229AC\uff01~\n```",
        "postTime": 1514451792,
        "uid": 37322,
        "name": "stephen\u2192_\u2192",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2559 \u3010[AHOI2002]\u54c8\u5229\u00b7\u6ce2\u7279\u4e0e\u9b54\u6cd5\u77f3\u3011"
    },
    {
        "content": "## \u7b80\u8981\u5206\u6790\n\n\u5f88\u660e\u663e\u662f\u4e00\u9053\u6700\u77ed\u8def\uff0c\u53ef\u60dc\u9898\u76ee\u4e2d\u6ca1\u6709\u7ed9\u51fa\u6570\u636e\u8303\u56f4\uff08~~\u53cd\u6b63\u6211\u662f\u770b\u5176\u4ed6\u9898\u89e3\u7684\u6570\u7ec4\u5927\u5c0f\u7684AwA~~\n\n\u7a33\u59a5\u8d77\u89c1\u80af\u5b9a\u662f\u4e00\u904d\u5806\u4f18\u5316\u7684 $dijkstra$\n\n\u4e3b\u8981\u7684\u8003\u70b9\u5728\u4e8e\u5efa\u56fe\n\n\u9996\u5148\uff0c\u9898\u76ee\u7ed9\u51fa\u4e86 $7$ \u79cd\u5730\u5f62\u7684\u8fb9\u6743\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u6570\u7ec4\u5148\u5b58\u8d77\u6765\n\n\u7136\u540e\uff0c\u7b2c\u4e00\u884c\u9898\u76ee\u4f1a\u8f93\u5165 $7$ \u4e2a $0$ \u6216 $1$ \uff0c\u5982\u679c\u8f93\u5165\u7684\u662f $1$ \uff0c\u90a3\u6211\u4eec\u52a0\u8fb9\u65f6\u9700\u8981\u5c06\u8be5\u5730\u5f62\u7684\u8fb9\u6743\u9664\u4ee5 $2$\n\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4f4d\u8fd0\u7b97\u4e2d\u7684 **\u5de6\u79fb** \u64cd\u4f5c\uff0c\u5de6\u79fb $1$ \u5c31\u76f8\u5f53\u4e8e\u9664\u4ee5 $2$\n\n\u5efa\u5b8c\u56fe\u8dd1\u4e00\u904d\u6700\u77ed\u8def\u5c31\u884c\u4e86\n\n## \u5b8c\u6574\u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n#define ri register int\nusing namespace std;\nint S, T, m, x, y, z, tot = 0, h[20005] = {0}, vis[20005] = {0}, dis[20005] = {0}\uff1b\nint s[8] = {0, 2, 6, 4, 8, 6, 10, 14};\nstruct edge {\n\tint u, v, w;\n} e[2 * 20005] = {0};\nstruct node {\n\tint d, p;\n\tbool operator < (const node &x) const {\n\t\treturn x.d < d;\n\t}\n} tmp;\npriority_queue <node> q;\ninline int read() {\t\t//\u5feb\u8bfb\n\tint x = 0;\n\tchar c = getchar();\n\tfor (; c < 48 || 57 < c; ) c = getchar();\n\tfor (; 48 <= c && c <= 57; c = getchar()) x = (x << 3) + (x << 1) + (c ^ 48);\n\treturn x;\n}\ninline void print(int x) {\t\t//\u5feb\u8f93\n\tif (x > 9) print(x / 10);\n\tputchar(x % 10 + 48);\n}\ninline void add(int u, int v, int w) {\t//\u52a0\u8fb9\n\te[++tot].u = h[u], e[tot].v = v, e[tot].w = w, h[u] = tot;\n}\nint main() {\n\tfor (ri i = 1; i <= 7; i++) s[i] >>= read();\t//\u4f4d\u8fd0\u7b97\n\tS = read(), T = read(), m = read(), memset(dis, 0x3f, sizeof(dis));\n\tfor (ri i = 0; i < m; i++)\n    \tx = read(), y = read(), z = read(), add(x, y, s[z]), add(y, x, s[z]); \n\tdis[S] = 0, q.push((node) {0, S});\t//dijkstra\n\twhile (!q.empty()) {\n\t\ttmp = q.top(), q.pop();\n\t\tif (vis[tmp.p]) continue;\n\t\tvis[tmp.p] = 1;\n\t\tfor (ri i = h[tmp.p]; i; i = e[i].u)\n\t\t\tif (dis[e[i].v] > dis[tmp.p] + e[i].w)\n\t\t\t\tdis[e[i].v] = dis[tmp.p] + e[i].w, q.push((node) {dis[e[i].v], e[i].v});\n\t}\n\tprint(dis[T]);\n\treturn 0;\n}\n```\n",
        "postTime": 1571997532,
        "uid": 51692,
        "name": "\u706b\u8f66\u53f8\u673a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3-P2559"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9053\u9898\u5c31\u662f\u6bd4\u8f83\u7075\u6d3b\u7684\u4f46\u613f\u6700\u77ed\u8def\u7b97\u6cd5\n\n\u5982\u679c\u8fd8\u4e0d\u4f1a\u6700\u77ed\u8def\u7b97\u6cd5\u7684\u540c\u5b66\u53ef\u4ee5\u770b\u770b\u6211\u5199\u7684[\u6700\u77ed\u8def\u7b97\u6cd5\u7684\u535a\u5ba2](https://www.cnblogs.com/szbszb/p/11280672.html)\n\n\u6211\u4eec\u5148\u5b9a\u4e49\u4e00\u4e2a\u6570\u7ec4c\uff0cc[i]\u4ee3\u8868\u7c7b\u578bi\u7684\u5730\u5f62\u6240\u9700\u8981\u7684\u65f6\u95f4/2\uff0c\u5373\uff1a\n\n```cpp\nlong long c[8]={0,1,3,2,4,3,5,7};\n```\n\uff08\u7c7b\u578b0\u5c31\u4e3a0\u5566\uff0c\u5176\u5b9e\u968f\u4fbf\u7684\uff09\n\n\u7136\u540e\u5728\u5f00\u5934\u52a0\u4e0a\u8fd9\u6837\u4e00\u53e5\uff1a\n```cpp\nfor (i=1;i<=7;i++)\n{\n\tscanf(\"%lld\",&x);\n\tif (x) zx[i]=c[i];\n\telse zx[i]=c[i]*2;\n}\n```\nzx\u6570\u7ec4\u4ee3\u8868\u7c7b\u578bi\u6240\u9700\u7684\u65f6\u95f4\n\n\u7136\u540e\u5c31\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u5355\u6e90\u6700\u77ed\u8def\u4e86\uff0c\u7531\u4e8en<=100\uff0c\u6240\u4ee5dijkra\u4e0d\u7528\u5806\uff08\u4f18\u5148\u961f\u5217\uff09\u4f18\u5316\u4e5f\u53ef\u4ee5\uff0c\u5305\u62ecSPFA\u3001folyd\u90fd\u662f\u53ef\u4ee5\u7684\n\n\u535a\u4e3b\u8fd8\u662f\u7528\u4e86[\u94fe\u5f0f\u524d\u5411\u661f](https://www.cnblogs.com/szbszb/p/11298047.html)\u548c\u4f18\u5148\u961f\u5217\u4f18\u5316\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nlong long i,n,m,f,t,x,y,z,zx[8],he[101],ne[10001],to[100001],l[100001],d[101],u,v,cnt;\nlong long c[8]={0,1,3,2,4,3,5,7};\nbool b[101];\npriority_queue<pair<long long,long long> >q; \nint main()\n{\n\tfor (i=1;i<=7;i++)\n\t{\n\t\tscanf(\"%lld\",&x);\n\t\tif (x) zx[i]=c[i];\n\t\telse zx[i]=c[i]*2;\n\t}\n\tscanf(\"%lld%lld\",&f,&t);\n\tscanf(\"%lld\",&m);\n\tfor (i=1;i<=m;i++)//\u94fe\u5f0f\u524d\u5411\u661f\n\t{\n\t\tscanf(\"%lld%lld%lld\",&x,&y,&z);\n\t\tz=zx[z];\n\t\tcnt++;\n\t\tne[cnt]=he[x];\n\t\tto[cnt]=y;\n\t\tl[cnt]=z;\n\t\the[x]=cnt;\n\t\tcnt++;\n\t\tne[cnt]=he[y];\n\t\tto[cnt]=x;\n\t\tl[cnt]=z;\n\t\the[y]=cnt;\n\t}\n\tfor (i=1;i<=100;i++)\n\t\td[i]=1e11;\n\td[f]=0;\n\tq.push(make_pair(0,f));//\u4f18\u5148\u961f\u5217\n\twhile(q.size())\n\t{\n\t\tu=q.top().second;\n\t\tq.pop();\n\t\tif(b[u]) continue;\n\t\tb[u]=true;\n\t\tfor (i=he[u];i;i=ne[i])\n\t\t{\n\t\t\tv=to[i];\n\t\t\tif (d[v]>d[u]+l[i])\n\t\t\t{\n\t\t\t\td[v]=d[u]+l[i];\n\t\t\t\tq.push(make_pair(-d[v],v));//\u5927\u6839\u5806\u8f6c\u5c0f\u6839\u5806\n\t\t\t}\n\t\t } \n\t}\n\tprintf(\"%lld\",d[t]);\n\treturn 0;\n}\n```",
        "postTime": 1571145330,
        "uid": 33480,
        "name": "szbszb",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2559 \u3010[AHOI2002]\u54c8\u5229\u00b7\u6ce2\u7279\u4e0e\u9b54\u6cd5\u77f3\u3011"
    },
    {
        "content": "\u8fd9\u9898\u9664\u4e86\u5efa\u56fe\u6ca1\u6709\u4efb\u4f55\u96be\u5ea6\u597d\u5417\uff1f~~\uff08\u5176\u5b9e\u5efa\u56fe\u4e5f\u6ca1\u6709\u96be\u5ea6\uff0c\u4f46\u6211\u662f\u849f\u84bb\uff09~~\n\n\u601d\u8def\uff1a\n\u5148\u6253\u4e2a\u8868\u5b58\u4e0b\u6bcf\u4e2a\u5730\u5f62\u7684\u901a\u8fc7\u65f6\u95f4\uff0c\u8f93\u5165\u7684\u65f6\u5019\u6253\u4e2aif\u5224\u65ad\u6709\u6ca1\u6709\u9b54\u6cd5\u77f3\uff0c\u7136\u540e\u628ah\u6570\u7ec4\u91cc\u5b58\u7684\u8868\uff08/2)\u5b58\u8fdb\u53bb\uff0c\u518d\u8dd1\u4e00\u904d\u6700\u77ed\u8def\uff0c\u8fd9\u91cc\u6211\u90fd\u7528\u7684\u662f\u90bb\u63a5\u77e9\u9635\u3002\n\n------------\n### Floyd\uff1a\n\u4e00\u79cd\u5229\u7528\u52a8\u6001\u89c4\u5212\u7684\u601d\u60f3\u5bfb\u627e\u7ed9\u5b9a\u7684\u52a0\u6743\u56fe\u4e2d\u591a\u6e90\u70b9\u4e4b\u95f4\u6700\u77ed\u8def\u5f84\u7684\u7b97\u6cd5\uff0c\u4e0eDijkstra\u7b97\u6cd5\u7c7b\u4f3c\u3002\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nint h[15] = {0,2,6,4,8,6,10,14},s[10],dp[105][105];//h\u662f\u8868\uff0c\u6211\u4e60\u60ef\u4ece1\u53f7\u4f4d\u5f00\u59cb\uff0c\u5176\u5b83\u6211\u5c31\u4e0d\u591a\u8bf4\u4e86\u5427\uff1f\ninline int read() {\n    int x = 0,f = 1; char c = getchar();\n    while (c < '0' || c > '9') {if (c == '-') f = -1;c = getchar();}\n    while (c <='9' && c >='0') {x = x * 10 + c - '0';c = getchar();}\n    return x * f;\n}\ninline void write(int x) {\n    int k = 0,lx = x;char put[40];\n    if (lx ==0) putchar('0');\n    if (lx < 0) putchar('-'),lx = -lx;\n    while (lx)  put[++k] = (lx % 10) + '0',lx /= 10;\n    while (k)   putchar( put[ k-- ] );\n    putchar('\\n');\n}//\u5feb\u8bfb + \u5feb\u8f93\nint main() {\n\tmemset(dp,0x3f,sizeof dp);//memset\u628adp\u6570\u7ec4\u8d4b\u62100x3f\uff0c\u8001\u5e08\u8bf4\u662f\u9632\u6ea2\u51fa\n\tfor(register int i = 1;i <= 7;i ++) s[i] = read();//\u8f93\u5165\n\tint begin,end;\n\tbegin = read(),end = read();\n\tint c;\n\tc = read();\n\tfor(register int i = 1;i <= c;i ++) {\n\t\tint x,y,w;\n\t\tx = read(),y = read(),w = read();\n\t\tif(s[w] == 1) dp[x][y] = dp[y][x] = h[w] / 2;//\u89c1\u4e0a\u6587\n\t\telse dp[x][y] = dp[y][x] = h[w];//\u540c\u4e0a\n\t}//\u8fd9\u91cc\u4e00\u5b9a\u8981\u5b58\u6210\u65e0\u5411\u56fe\uff0c\u56e0\u4e3a\u8fd9\u4e2a2\u6b2120fen\n\tfor(register int i = 1;i <= 100;i ++) {//\u521d\u59cb\u5316\uff0c\u540c\u4e0a\n\t\tfor(register int j = 1;j <= 100;j ++) {\n\t\t\tif(i == j) dp[i][j] = 0;\n\t\t}\n\t}\n\tfor(register int k = 1;k <= 100;k ++) {//\u4e09\u4e2a\u5faa\u73af\u90fd\u662f\u4ece1\u5230100\uff0c\u770b\u5230\u6709\u4eba\u524d\u4e24\u4e2a\u5faa\u73af1 - c\u6211\u60f3\u7b11\uff0cc\u7684\u6570\u636e\u8303\u56f4\u662f10000\uff0c\u8fd9\u6837\u5199\u65e9\u5c31\u8d85\u65f6\u4e86\u597d\u5427\uff1f\n\t\tfor(register int i = 1;i <= 100;i ++) {\n\t\t\tfor(register int j = 1;j <= 100;j ++) {\n\t\t\t\tdp[i][j] = std::min(dp[i][j],dp[k][j] + dp[i][k]);\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\",dp[begin][end]);//\u8f93\u51fa\u4e0d\u89e3\u91ca\n\treturn 0; \n}\n```\n------------\n### Dijkstra\uff1a\n\u662f\u4ece\u4e00\u4e2a\u9876\u70b9\u5230\u5176\u4f59\u5404\u9876\u70b9\u7684\u6700\u77ed\u8def\u5f84\u7b97\u6cd5\uff0c\u89e3\u51b3\u7684\u662f\u6709\u6743\u56fe\u4e2d\u6700\u77ed\u8def\u5f84\u95ee\u9898\u3002\u8fea\u6770\u65af\u7279\u62c9\u7b97\u6cd5\u4e3b\u8981\u7279\u70b9\u662f\u4ee5\u8d77\u59cb\u70b9\u4e3a\u4e2d\u5fc3\u5411\u5916\u5c42\u5c42\u6269\u5c55\uff0c\u76f4\u5230\u6269\u5c55\u5230\u7ec8\u70b9\u4e3a\u6b62\u3002\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nint h[15] = {0,2,6,4,8,6,10,14},s[10],map[105][105],dis[105],vis[105];\ninline int read() {\n    int x = 0,f = 1; char c = getchar();\n    while (c < '0' || c > '9') {if (c == '-') f = -1;c = getchar();}\n    while (c <='9' && c >='0') {x = x * 10 + c - '0';c = getchar();}\n    return x * f;\n}\ninline void write(int x) {\n    int k = 0,lx = x;char put[40];\n    if (lx ==0) putchar('0');\n    if (lx < 0) putchar('-'),lx = -lx;\n    while (lx)  put[++k] = (lx % 10) + '0',lx /= 10;\n    while (k)   putchar( put[ k-- ] );\n    putchar('\\n');\n}//\u5feb\u8bfb + \u5feb\u8f93\nvoid Dijkstra(int x) {//\u88f8\u7684Dijkstra\u4e0d\u89e3\u91ca\uff0c\u4e0d\u4f1a\u7684\u81ea\u5df1\u5ea6\u5a18\n\tmemset(dis,127,sizeof(dis));\n\tint begin = x;\n\tvis[begin] = 1;\n\tfor(register int i = 1;i <= 100;i ++) dis[i] = std::min(dis[i],map[begin][i]);\n\tfor(register int i = 1;i <= 99;i ++) {\n\t\tint Min = 1e9;\n\t\tfor(register int j = 1;j <= 100;j ++) {\n\t\t\tif(vis[j] == 0 && Min > dis[j]) {\n\t\t\t\tMin = dis[j];\n\t\t\t\tbegin = j;\n\t\t\t}\n\t\t}\n\t\tvis[begin] = 1;\n\t\tfor(register int j = 1;j <= 100;j ++) dis[j] = std::min(dis[j],dis[begin] + map[begin][j]);\n\t}\n}\n\nint main() {\n\tmemset(map,0x3f,sizeof map);\n\tfor(register int i = 1;i <= 7;i ++) s[i] = read();\n\tint begin,end;\n\tbegin = read(),end = read();\n\tint c;\n\tc = read();\n\tfor(register int i = 1;i <= c;i ++) {\n\t\tint x,y,w;\n\t\tx = read(),y = read(),w = read();\n\t\tif(s[w] == 1) map[x][y] = map[y][x] = h[w] / 2;\n\t\telse map[x][y] = map[y][x] = h[w];\n\t}//\u90fd\u548c\u4e0a\u6587\u4e00\u6837\n\tfor(register int i = 1;i <= 100;i ++) {\n\t\tfor(register int j = 1;j <= 100;j ++) {\n\t\t\tif(i == j) map[i][j] = 0;\n\t\t}\n\t}\n\tDijkstra(begin);\n\tprintf(\"%d\",dis[end]);\n\treturn 0; \n}\n```\nPS\uff1a\u8bdd\u8bf4Dijkstra\u662f\u6bd4Floyd\u5feb\u5f88\u591a\u5462\uff0c\u4e00\u4e2a24ms\uff0c\u4e00\u4e2a102ms\n\n\u6700\u540e\uff0c\u5173\u4e8eSPFA\uff0c\u5b83\u6b7b\u4e86\n\n",
        "postTime": 1566433909,
        "uid": 173484,
        "name": "C20212724\u6768\u4eac\u671d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2559 \u3010[AHOI2002]\u54c8\u5229\u00b7\u6ce2\u7279\u4e0e\u9b54\u6cd5\u77f3\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5c31\u662f\u4e00\u9898**\u6700\u7ecf\u5178\u7684**\\_\u5355\u6e90\u6700\u77ed\u8def\u95ee\u9898\\_\uff0c\u76f4\u63a5\u7528**\u6700\u666e\u901a\u7684\u8fea\u6770\u65af\u7279\u62c9\u7b97\u6cd5\uff08Dijkstra\uff09**\u5c31\u53ef\u4ee5\u4e86\n\n\n**\u4e0d\u7528\u90bb\u63a5\u8868\uff0c\u4e0d\u7528\u5806\u4f18\u5316\uff0c\u4e5f\u4e0d\u4f1aTLE\uff01\uff01\uff01**\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#include<queue>\nusing namespace std;\nint map[101][101];//\u5730\u56fe---\u8fde\u901a\u70b9\u95f4\u8ddd\u79bb \nbool list[101];//\u8bb0\u5f55\u8fd9\u4e2a\u70b9\u662f\u5426\u88ab\u8d70\u8fc7 \nint dis[101];\nint start,end;//i\u662f\u8d77\u70b9\uff0cj\u662f\u7ec8\u70b9 \nint C,x,y,tpe;\nconst int INF=2e9;\nint stone[8]={INF};\nint v,k;\nint time[8]={INF,2,6,4,8,6,10,14};\nvoid init();\nvoid dijkstra();\nint main(){\n    for(k=1;k<=7;k++){\n        scanf(\"%d\",&stone[k]);\n        if(stone[k]) time[k]/=2;\n    }\n    scanf(\"%d%d%d\",&start,&end,&C);\n    init();//\u521d\u59cb\u5316\n    for(k=1;k<=C;k++){\n        scanf(\"%d%d%d\",&x,&y,&tpe);\n        if(tpe<=7&&tpe>=1&&time[tpe]<map[x][y]){//\u7279\u5224\uff0c\u53d6\u6700\u77ed\u8def\n            map[x][y]=time[tpe];\n            map[y][x]=time[tpe];\n        }\n    }\n    dijkstra();\n    printf(\"%d\",dis[end]);\n    return 0;\n}\nvoid init(){\n    memset(list,false,sizeof(list));\n    list[start]=true;\n    for(k=1;k<=100;k++){\n        dis[k]=INF;\n    }\n    dis[start]=0;\n    for(k=1;k<=100;k++){\n        for(int l=1;l<=100;l++){\n            if(k==l) map[k][l]=0;\n            else map[k][l]=INF;\n        }\n    }\n}\nvoid dijkstra(){\n    int min;\n    while(!list[end]){//\u53ea\u9700\u8981\u7ec8\u70b9\u7684\u8def\u5f84\u7b97\u51fa\u6765\u5c31\u53ef\u4ee5\u7ed3\u675f\n        min=INF;\n        list[start]=true;\n        for(v=1;v<=C;v++){\n        //\u677e\u5f1b\u64cd\u4f5c\n            if(map[start][v]!=INF&&!list[v]){\n                if(dis[v]>dis[start]+map[start][v]){\n                    dis[v]=dis[start]+map[start][v];\n                }\n            }\n        }\n       //\u627e\u4e0e\u5f53\u524d\u8d77\u70b9\u6700\u77ed\u7684\u70b9\n        for(int g=1;g<=100;g++){\n            if(!list[g]&&dis[g]<min){\n                min=dis[g];\n                start=g;\n            }\n        }\n    }\n}\n```",
        "postTime": 1512804111,
        "uid": 51653,
        "name": "\u6c22\u6c1f\u9178er",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2559 \u3010[AHOI2002]\u54c8\u5229\u00b7\u6ce2\u7279\u4e0e\u9b54\u6cd5\u77f3\u3011"
    },
    {
        "content": "\u5206\u6790\u4e00\u4e0b\u9898\u76ee \u5176\u5b9e\u662f\u4e00\u4e2a\u56fe\u3002\u4f46\uff0c\u5b9e\u8bdd\u5b9e\u8bf4\uff0c\u5bf9\u4e8e\u6211\u4eec\u8fd9\u79cd\u849f\u84bb\u6765\u8bf4\uff0c\u8fd9\u79cd\u56fe\u8fd8\u662f\u6bd4\u8f83\u96be\u7684\n\n\u9996\u5148\u8981\u751f\u6210\u8fd9\u4e2a\u56fe\u7684\u5404\u4e2a\u8def\u5f84\uff0c\u663e\u7136\u8def\u5f84\u7684\u957f\u5ea6\u5df2\u7ecf\u7ed9\u4e86\uff0c\u800c\u4e14\u80fd\u4e0d\u80fd\u6709\u9b54\u6cd5\u77f3~~\uff08\u80fd\u4e0d\u80fd\u5f00\u5f00\u6302\uff09~~\u4e5f\u5df2\u7ecf\u544a\u8bc9\u6211\u4eec\u4e86\n\n##### \u4e5f\u5c31\u662f\u8bf4\uff01\uff01\uff01\n\n\u8fd9\u4e2a\u56fe\u5df2\u7ecf\u51fa\u6765\u4e86\uff0c\u8fb9\uff0c\u70b9\u7684\u4fe1\u606f\u90fd\u6709\u4e86\n\n\u6240\u4ee5\uff0c\u76f4\u63a5\u5f00\u59cb\u66b4\u641c\n\n\u4f46\u662f\u8981\u8bb0\u4f4f\uff0c\u5982\u679ci\u53ef\u4ee5\u5230j\uff0c\u90a3\u4e48j\u4e5f\u53ef\u4ee5\u5230i\n\n```c\n#include<bits/stdc++.h>\nusing namespace std;\nint h[8]={0,2,6,4,8,6,10,14};\nint s[8];\nint start,final;\nint n,tx,ty,a,maxn=-1,minn=100000000;\nint dis[110][110];\nint vis[110][110];\nvoid dfs(int x,int t){\n\tif(x==final){\n\t\tminn=min(minn,t);\n\t\treturn;\n\t}\n\tfor(int i=1;i<=maxn;i++){\n\t\tif(vis[x][i]!=0){\n\t\t\tif(dis[x][i]) dfs(i,t+h[vis[x][i]]/2);\n\t\t\telse dfs(i,t+h[vis[x][i]]);\n\t\t}\n\t}\n}\nint main(){\n\tfor(int i=1;i<=7;i++)\n\t\tcin>>s[i];\n\tcin>>start>>final>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>tx>>ty>>a;\n\t\tvis[tx][ty]=a;\n\t\tvis[ty][tx]=a;\n\t\tdis[tx][ty]=s[a];\n\t\tdis[ty][tx]=s[a];\n\t\tmaxn=max(maxn,max(tx,ty));\n\t}\n\tdfs(start,0);\n\tcout<<minn<<endl;\n    return 0;\n}\n```\n\n\u4f46\u662f\u3002\u3002\u3002\u3002\u3002\u3002\n\n\u4f60\u4f1a\u53d1\u73b0\u8fd9\u9898\u4f1aMLE+WA,\u53ea\u670910\u5206\uff0c\u5728DFS\u65f6\uff0c\u7cfb\u7edf\u6808\u4f1a\u7206\u6389\n\n\u7136\u800c\u4e0b\u9762\u7684\u7a0b\u5e8f\u6ca1\u6709\u5c06\u201c\u5982\u679ci\u53ef\u4ee5\u5230j\uff0c\u90a3\u4e48j\u4e5f\u53ef\u4ee5\u5230i\u201d\u52a0\u5230\u7a0b\u5e8f\u91cc\u7adf\u7136\u4f1a20\u5206\uff01\uff01\uff01\n\n\u4e0d\u5f97\u4e0d\u8bf4\uff0c\u6570\u636e\u592a\u6c34\u3002\u3002\u3002\n\n```c\n#include<bits/stdc++.h>\nusing namespace std;\nint h[8]={0,2,6,4,8,6,10,14};\nint s[8];\nint start,final;\nint n,tx,ty,a,maxn=-1,minn=0x3f3f3f3f3f3f;\nint dis[110][110];\nint vis[110][110];\nvoid dfs(int x,int m){\n\tif(x==final){\n\t\tminn=min(minn,m);\n\t\treturn;\n\t}\n\tfor(int i=1;i<=final;i++){\n\t\tif(vis[x][i]!=0){\n\t\t\tif(dis[x][i]) dfs(i,m+h[vis[x][i]]/2);\n\t\t\telse dfs(i,m+h[vis[x][i]]);\n\t\t}\t\n\t}\n}\nint main(){\n\tfor(int i=1;i<=7;i++)\n\t\tcin>>s[i];\n\tcin>>start>>final>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>tx>>ty>>a;\n\t\tvis[tx][ty]=a;\n\t\tdis[tx][ty]=s[a];\n\t\t//maxn=max(maxn,max(tx,ty));\n\t}\n\tdfs(start,0);\n\tcout<<minn<<endl;\n    return 0;\n}\n```\n\u518d\u4ed4\u7ec6\u5206\u6790\uff0c\u53d1\u73b0\uff0c\u7cfb\u7edf\u6808\uff0c\u597d\u50cf\u53d7\u4e0d\u4f4f\n\n\n##### \u6240\u4ee5\uff0c\u6211\u4eec\u5f00\u59cb\u4e00\u4e9b\u641c\u7d22\u526a\u679d\n\n\u76f8\u4fe1\u8bb8\u591a\u4eba\u505a\u8fc7\u8ff7\u5bab\u8fd9\u7c7b\u7684\u9898\u76ee\uff0c\u4f1a\u60f3\u5230\u7528\u8d70\u4e00\u904d\u5c31\u6253\u4e00\u4e2a\u6807\u8bb0\uff0c\u518d\u56de\u6eaf\u7684\u65b9\u6cd5\u3002\u4f46\u662f\u5728\u8fd9\u4e00\u9898\uff0c\u663e\u7136\u662f\u4e0d\u5927\u594f\u6548\u7684\n\n\u6240\u4ee5\u53e6\u5916\u4e00\u4e2a\u526a\u679d\u65b9\u6cd5\u4fbf\u5f88\u660e\u663e\u4e86\n\n### \u8bb0\u5fc6\u5316\n\n\u8bb0\u5fc6\u5316\u641c\u7d22:\u7b97\u6cd5\u4e0a\u4f9d\u7136\u662f\u641c\u7d22\u7684\u6d41\u7a0b\uff0c\u4f46\u662f\u641c\u7d22\u5230\u7684\u4e00\u4e9b\u89e3\u7528\u52a8\u6001\u89c4\u5212\u7684\u90a3\u79cd\u601d\u60f3\u548c\u6a21\u5f0f\u4f5c\u4e00\u4e9b\u4fdd\u5b58\u3002\n\n\u8bb0\u5fc6\u5316\u7b97\u6cd5\u5728\u6c42\u89e3\u7684\u65f6\u5019\u8fd8\u662f\u6309\u7740\u81ea\u9876\u5411\u4e0b\u7684\u987a\u5e8f\uff0c\u4f46\u662f\u6bcf\u6c42\u89e3\u4e00\u4e2a\u72b6\u6001\uff0c\u5c31\u5c06\u5b83\u7684\u89e3\u4fdd\u5b58\u4e0b\u6765\uff0c\u4ee5\u540e\u518d\u6b21\u9047\u5230\u8fd9\u4e2a\u72b6\u6001\u7684\u65f6\u5019\uff0c\u5c31\u4e0d\u5fc5\u91cd\u65b0\u6c42\u89e3\u4e86\u3002\n\n\u2014\u2014\u2014\u2014\u6458\u81ea360\u767e\u79d1\n\n(\u641c\u7d22\u57fa\u672c\u4e0a\u90fd\u8981\u6302\u4e0a\u8bb0\u5fc6\u5316\uff0c\u6211\u5c06\u8bb0\u5fc6\u5316\u7406\u89e3\u4e3a\u641c\u7d22\u526a\u679d\u7684\u5fc5\u7531\u4e4b\u8def\uff09\n\n##### \u6240\u4ee5\u5982\u4f55\u5199\u8bb0\u5fc6\u5316\u5462\uff1f\n\n\u9996\u5148\uff0c\u6211\u4eec\u53d1\u73b0\u3002\u4f60\u4f1a\u201c\u501a\u95e8\u56de\u9996\u201d\u3002\n\n\u201c\u501a\u95e8\u56de\u9996\u201d\uff1a\u4f60\u4f1a\u53d1\u73b0\u81ea\u5df1\u5728\u641c\u7d22\u7684\u9014\u4e2d\u83ab\u540d\u56de\u5934\uff0c\u7531i\u5230j\u4e4b\u540e\uff0c\u518d\u4ecej\u5230i\uff0c\u4ece\u800c\u5c06\u4e00\u4e2a\u597d\u597d\u7684\u7cfb\u7edf\u6808\u76f4\u63a5MLE\u6389\n\n### \u5982\u4f55\u89e3\u51b3\uff1f\n\n\u5f00\u4e00\u4e2af\u6570\u7ec4\uff0c\u5b58\u653e\u5230\u5f53\u524d\u4f4d\u7f6e\u7684\u6700\u5c0f\u8ddd\u79bb\u5373\u53ef\n\n\u5982\u679cf[x]\u5c0f\u4e8et\u90a3\u4e48\u76f4\u63a5return\uff0c\u628a\u8fd9\u4e2a\u5206\u652f\u6bd9\u6389\n\n\u5426\u5219\u5c06f[x]\uff08x\u8868\u793a\u5f53\u524d\u4f4d\u7f6e\uff09\u8d4b\u503c\u4e3at(\u8ddd\u79bb)\n\n\u6240\u4ee5\u4fbf\u663e\u800c\u6613\u89c1\u4e86\n```c\n#include<bits/stdc++.h>\nusing namespace std;\nint h[8]={0,2,6,4,8,6,10,14};\nint s[8];\nint start,final;\nint n,tx,ty,a,maxn=-1,minn=100000000;\nint dis[110][110];\nint vis[110][110];\nint f[110];\nvoid dfs(int x,int t){\n\tif(t>f[x]) return;\n\tf[x]=t;\n\tif(x==final){\n\t\tminn=min(minn,t);\n\t\treturn;\n\t}\n\tfor(int i=1;i<=maxn;i++){\n\t\tif(vis[x][i]!=0){\n\t\t\tif(dis[x][i]) dfs(i,t+h[vis[x][i]]/2);\n\t\t\telse dfs(i,t+h[vis[x][i]]);\n\t\t}\n\t}\n}\nint main(){\n\tfor(int i=1;i<=100;i++) f[i]=100000000;\n\tfor(int i=1;i<=7;i++)\n\t\tcin>>s[i];\n\tcin>>start>>final>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>tx>>ty>>a;\n\t\tvis[tx][ty]=a;\n\t\tvis[ty][tx]=a;\n\t\tdis[tx][ty]=s[a];\n\t\tdis[ty][tx]=s[a];\n\t\tmaxn=max(maxn,max(tx,ty));\n\t}\n\tdfs(start,0);\n\tcout<<minn<<endl;\n    return 0;\n}\n```\n\uff08\u53ea\u52a0\u4e86\u56db\u884c\u3002\u3002\u3002\u5c31AC\u4e86\uff09\n\nCSP-J RP++",
        "postTime": 1571973893,
        "uid": 107344,
        "name": "Ricardo_21",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2559 \u3010[AHOI2002]\u54c8\u5229\u00b7\u6ce2\u7279\u4e0e\u9b54\u6cd5\u77f3\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u4e0d\u7b97\u96be\uff0c\u5c31\u662f\u4e00\u4e2a\u6700\u77ed\u8def\uff08$SSSP$)\u3002\n\n\u6570\u636e\u4e5f\u4e0d\u662f\u5f88\u6bd2\uff0c\u7528$Floyd$\u5373\u53efAC\u3002\n\n\u8fd9\u91cc\u7528\u4e86$Dijkstra$\u3002\n\n### Code\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\nusing namespace std;\n#define re register\n#define rep(i,a,b) for (re int i=a;i<=b;++i)\n#define repd(i,a,b) for (re int i=a;i>=b;--i)\n#define maxx(a,b) a=max(a,b);\n#define minn(a,b) a=min(a,b);\n#define LL long long\n#define inf (1<<30)\ninline int read()\n{\n    int w=0,f=1; char c=getchar();\n    while (!isdigit(c)) f=c=='-'?-1:f,c=getchar();\n    while (isdigit(c)) w=(w<<3)+(w<<1)+(c^'0'),c=getchar();\n    return w*f;\n}\nconst int maxn=100+5,maxm=1e4+5;\nstruct Edge\n{\n    int u,v,w,pre;\n};\nstruct Node\n{\n    int u,d;\n    bool operator<(const Node&rhs) const\n\t{\n        return d>rhs.d;\n    }\n};\nint way[8]={0,2,6,4,8,6,10,14};\npriority_queue<Node> Q;\nstruct Graph\n{\n\t#define iter(i,u) for (re int i=G[u];i;i=edges[i].pre)\n    Edge edges[maxm<<1];\n    int n,m;\n    int G[maxn];\n    int dis[maxn],vis[maxn];\n    void init(int n)\n\t{\n        this->n=n;\n        m=0;\n        memset(G,0,sizeof(G));\n    }\n    void AddEdge(int u,int v,int w)\n\t{\n        edges[++m]=(Edge){u,v,way[w],G[u]};\n        G[u]=m;\n        edges[++m]=(Edge){v,u,way[w],G[v]};\n        G[v]=m;\n    }\n    void dijkstra(int s)\n\t{\n        memset(vis,0,sizeof(vis));\n        memset(dis,0x3f,sizeof(dis));\n        dis[s]=0;\n        Q.push((Node){s,0});\n        while (!Q.empty())\n\t\t{\n            int u=Q.top().u;Q.pop();\n            if (vis[u]) continue;\n            vis[u]=1;\n            iter(i, u)\n\t\t\t{\n                Edge&e=edges[i];\n                if (dis[u]+e.w<dis[e.v])\n\t\t\t\t{\n                    dis[e.v]=dis[u]+e.w;\n            \t\tQ.push((Node){e.v,dis[e.v]});\n                }\n            }\n        }\n    }\n}G;\nint s,t,m;\nint main()\n{\n    rep(i,1,7) \n        if (read()) way[i]>>=1;\n    s=read(),t=read();\n    G.init(100);\n    m=read();\n    rep(i,1,m)\n\t{\n        int u=read(),v=read(),w=read();\n        G.AddEdge(u,v,w);\n    }\n    G.dijkstra(s);\n    printf(\"%d\",G.dis[t]);\n    return 0;\n}\n```",
        "postTime": 1562426290,
        "uid": 98954,
        "name": "\u4e0d\u5b58\u5728\u4e4b\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2559 \u3010[AHOI2002]\u54c8\u5229\u00b7\u6ce2\u7279\u4e0e\u9b54\u6cd5\u77f3\u3011"
    },
    {
        "content": "\u6700\u77ed\u8def\u88f8\u9898\uff01\n\n\u6211\u7528\u7684\u662fdijkstra\u9886\u63a5\u8868+\u5806\u4f18\u5316\n\n\u636e\u8bf4Floyd\u90fd\u80fd\u8fc7...\n\n\u4f46\u662f\u6211\u53d1\u73b0\u81ea\u5df1\u9694\u4e86\u4e00\u4e2a\u6708\u6ca1\u78b0\u7684\u4e1c\u897f\u5c31\u6709\u70b9\u5fd8\u4e86 \u8fd9\u91cc\u603b\u7ed3\u4e00\u4e0bdijkstra\u5806\u4f18\u5316\u7684\u601d\u8def\n\n\uff08PS \u50cf\u8fd9\u79cd\u65e0\u5411\u56fe\uff01\uff01\uff01\u9700\u8981add\u4e24\u6b21\uff01\uff01\uff01\uff01\uff01\uff01\uff01\u5361\u4e86\u597d\u4e45\uff09\n\ndijkstra\u7b97\u6cd5\u7684\u6838\u5fc3\u2014\u2014\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u2014\u2014\u627e\u5f53\u524d\u70b9\u76f8\u8fde\u7684\u70b9\u79bb\u8d77\u70b9\u6700\u8fd1\u7684\u70b9\u2014\u2014\u4ece\u8fd9\u4e2a\u70b9\u51fa\u53d1\u677e\u5f1b\u2014\u2014\u5982\u679c\u76f8\u8fde\u7684\u70b9\u5728\u96c6\u5408\u91cc\uff0c\u4e14\u5f53\u524d\u8def\u5f84\u4f18\u4e8e\u4e4b\u524d\u8def\u5f84\u90a3\u4e48\u66ff\u6362\n\n\u5efa\u7acbpriority_queue<make_pair<int int> > \u7b2c\u4e00\u4e2a\u5b58\u8def\u5f84\u957f\u5ea6 \u7b2c\u4e8c\u5b58\u5bf9\u5e94\u7684\u70b9\n\n \u5bf9\u4e8e\u5f53\u524d\u7684\u70b9 \u5148\u4ecepriority_queue\u91cc\u53d6\u51fa\u79bb\u8d77\u70b9\u8def\u5f84\u6700\u77ed\u7684\u4e00\u4e2a\u70b9 \uff08\u8fd9\u4e2a\u64cd\u4f5c \u5728\u539f\u7248dijkstra\u4e2d\u662f\u6700\u8d39\u65f6\u95f4\u7684\uff09\u4ece\u8fd9\u4e2a\u70b9\u5411\u5b83\u76f8\u8fde\u7684\u8fb9\u904d\u5386 \u8fdb\u884c\u677e\u5f1b\u64cd\u4f5c\n \n okok\u770b\u4ee3\u7801\n \n ```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int INF=0x7fffffff;\nint start,end,m;\nint x,y,z; \nint t[8]={0,2,6,4,8,6,10,14};\n\nint to[10005],first[1005],next[10005],v[10005],tot,dis[1005];\npriority_queue <pair<int,int> > q;\n\nvoid add(int x,int y,int ooo)\n{\n\ttot++;\n\tnext[tot]=first[x];\n\tfirst[x]=tot;\n\tto[tot]=y;\n\tv[tot]=ooo;\n}\n\nvoid dijkstra()\n{\n\tdis[start]=0;\n\tq.push(make_pair(0,start));\n\twhile(!q.empty())\n\t{\n\t\tint k=q.top().second;\n\t\tq.pop();\n\t\tfor(int i=first[k];i;i=next[i])\n\t\t{\n\t\t\tint f=to[i];\n\t\t\tif(dis[k]+v[i]<dis[f])\n\t\t\t{\n\t\t\t\tdis[f]=dis[k]+v[i];\n\t\t\t\tq.push(make_pair(-dis[f],f));\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tfor(int i=1;i<=7;i++)\n\t{\n\t\tint is_stone;\n\t\tcin>>is_stone;\n\t\tif(is_stone==1) t[i]=t[i]/2;\n\t}\n\tcin>>start>>end;\n\tcin>>m;\n\t\n\tfor(int i=1;i<=1005;i++)\n\t{\n\t\tdis[i]=INF;\n\t}\n\t\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcin>>x>>y>>z;\n\t\tadd(x,y,t[z]);//\u8bb0\u5f97\u4e24\u6b21\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01 \n\t\tadd(y,x,t[z]);\n\t}\n\tdijkstra();\n\tcout<<dis[end]<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1523276663,
        "uid": 60299,
        "name": "Patrickpwq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2559 \u3010[AHOI2002]\u54c8\u5229\u00b7\u6ce2\u7279\u4e0e\u9b54\u6cd5\u77f3\u3011"
    },
    {
        "content": "\u4e00\u540d\u849f\u84bb\u5199\u7684\u9898\u89e3\uff0c\u671b\u5927\u725b\uff0c\u795e\u725b\u52ff\u55b7\u3002\n\n\u672c\u9898\u7684\u4e3b\u8981\u601d\u60f3\u5728\u4e8e\u5efa\u597d\u4e00\u4e2a\u56fe\uff0c\u7136\u540e\u505aDijkstra\u5c31\u53ef\u4ee5\u4e86\uff08\u63a8\u8350\u6ca1\u5b66\u8fc7Dijkstra\u5148\u53bb\u767e\u5ea6\u4e00\u4e0b\u5b66\u4e60\u4e00\u4e0b\uff0c\u4e0d\u7136\u4f60\u53ef\u80fd\u770b\u4e0d\u61c2\uff09\n\n----------------------------------------------------------------\uff08\u534e\u4e3d\u7684\u5206\u754c\u7ebf\uff09\n\n\n\n\n\n\n\n\n\n```cpp\nvar\n i,j,m,n,x,y,f,k,max,min:longint;\n map:array[1..100,1..100]of longint;\n pad:array[1..100]of boolean;//\u6a21\u62df\u96c6\u5408\uff1bfalse\u5728\u96c6\u5408\u91cc\uff0ctrue\u5728\u96c6\u5408\u5916\n zdl:array[1..100]of longint;\n d:array[1..7]of longint;\nbegin\n d[1]:=2;d[2]:=6;d[3]:=4;d[4]:=8;d[5]:=6;d[6]:=10;d[7]:=14;\n for i:=1 to 7 do//\u9884\u5904\u7406+\u8f93\u5165\uff08\u6784\u56fe\uff09\n  begin\n   read(f);\n   if f=1 then d[i]:=d[i] div 2;\n  end;\n fillchar(pad,sizeof(pad),false);\n read(m,n);//\u8f93\u5165\n read(f);\n for i:=1 to f do//\u9884\u5904\u7406\u6211\u5c31\u4e0d\u591a\u8bf4\u4e86\n  begin\n   read(x,y,k);\n   map[x,y]:=d[k];\n   map[y,x]:=d[k];\n   if x>max then max:=x;\n   if y>max then max:=y;\n  end;\n for i:=1 to max do//\u540c\u4e0a\n  zdl[i]:=maxlongint;\n zdl[m]:=0;\n for i:=1 to max-1 do//Dijkstra\u7b97\u6cd5\u5f00\u59cb\n  begin\n   pad[m]:=true;//\u8fd9\u91cc\u5c31\u662f\u8981\u505a\u6807\u8bb0\u7684\u539f\u56e0\uff08\u5e9f\u8bdd,\u52ff\u55b7\uff09\n   if m=n then break;\n   for j:=1 to max do\n    if (map[m,j]<>0)and not pad[j] and(map[m,j]+zdl[m]<zdl[j])//\u5982\u679c\u8fd9\u6761\u8def\u5f84\u662f\u901a\u7684\uff0c\u4e14j\u70b9\u5728\u96c6\u5408\u91cc\uff0c\u90a3\u4e48\u5c31\u9009\u8f83\u5c0f\u7684\u90a3\u4e00\u4e2a\u3002\uff08\u9009\u62e9\u96c6\u5408\u91cc\u7684\u6700\u4f18\u503c\uff09\n       then zdl[j]:=map[m,j]+zdl[m];\n   min:=maxlongint;//\u9884\u5904\u7406\uff08\u5e9f\u8bdd\uff09\n   for j:=1 to max do//\u7b97\u6cd5\u7cbe\u9ad3\u90e8\u5206\u7684\u5f00\u59cb\n    if not pad[j] and(zdl[j]<min) then//\u5982\u679c\u8fd9\u4e2a\u70b9\u5728\u96c6\u5408\u91cc\uff0c\u4e14\u5f53\u524d\u8def\u5f84\u4f18\u4e8e\u4e4b\u524d\u8def\u5f84\u90a3\u4e48\u66ff\u6362\u3002\uff08\u8d2a\u5fc3\uff09\n     begin\n      min:=zdl[j];//\u66ff\u6362\n      m:=j;//\u505a\u6807\u8bb0\n     end;\n   end;\n writeln(zdl[n]);\nend.\n```",
        "postTime": 1502720918,
        "uid": 29482,
        "name": "lovelive__",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2559 \u3010[AHOI2002]\u54c8\u5229\u00b7\u6ce2\u7279\u4e0e\u9b54\u6cd5\u77f3\u3011"
    }
]