[
    {
        "content": "\u524d\u7f6e\u6280\u80fd\uff1aNTT\uff0c\u591a\u9879\u5f0f\u6c42\u9006\uff0c\u591a\u9879\u5f0f\u5bf9\u6570\u51fd\u6570\uff0c\u591a\u9879\u5f0f\u6c42\u5bfc\u3002\n\n\u9996\u5148\u6211\u4eec\u6309\u9898\u610f\u5199\u51fa\u7b54\u6848\u7684\u5f0f\u5b50\uff1a$$ans_k=\\frac{\\sum_{i = 1}^n\\sum_{j = 1}^m(a_i+b_j)^k}{nm}$$\n\n\u5148\u4e0d\u7ba1\u5206\u6bcd\uff0c\u628a\u5206\u5b50\u7528\u4e8c\u9879\u5f0f\u5b9a\u7406\u5c55\u5f00\uff1a\n\n$$ans_k=\\sum_{r = 0}^k\\sum_{i = 1}^n\\sum_{j = 1}^m\\binom r ka_i^rb_j^{k-r}$$\n\n$$ans_k=k!\\times\\sum_{r = 0}^k(\\sum_{i = 1}^n\\frac{a_i^r}{r!})(\\sum_j^m\\frac{b_j^{k-r}}{(k-r)!})$$\n\n\u8fd9\u6837\u5b50\u5c31\u5199\u6210\u4e86\u5377\u79ef\u7684\u5f62\u5f0f\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u8981\u80fd\u5feb\u901f\u6c42\u51fa$\\sum_{k=1}^na^k$\uff0c\u5c31\u53ef\u4ee5\u7528NTT\u8ba1\u7b97\u5377\u79ef\u4e86\u3002\n\n\u6211\u4eec\u5199\u51fa\u8fd9\u4e2a\u4e1c\u897f\u7684\u751f\u6210\u51fd\u6570\uff1a$$1+a^1x+a^2x^2+...+a^\\infty x^\\infty$$\n\n$x^k$\u7684\u7cfb\u6570\u8868\u793a$k$\u6b21\u5e42\u548c\uff0c\u90a3\u4e48\u6211\u4eec\u7528\u7b49\u6bd4\u6570\u5217\u6c42\u548c\u516c\u5f0f\u89e3\u51fa\u6765\u53ef\u4ee5\u5f97\u5230\uff1a$$\\frac{1}{1-ax}$$\n\n\u4ee4$f(x)$\u4e3a\u8fd9\u4e9b\u751f\u6210\u51fd\u6570\u7684\u548c\uff0c\u90a3\u4e48\uff1a\n$$f(x) = \\sum_{i = 1}^n\\frac{1}{1-a_ix}$$\n\n\u8fd9\u4e2a\u4e1c\u897f\u4e0d\u597d\u7b97\uff0c\u6211\u4eec\u53d1\u73b0$$\\ln'(1-a_ix)=\\displaystyle\\frac{1}{1-a_ix}$$\n\n\u6211\u4eec\u4ece\u5bf9\u6570\u51fd\u6570\u89d2\u5ea6\u8003\u8651\uff0c\u53c8\u53ef\u4ee5\u53d1\u73b0\uff1a\n$$(\\ln(1-a_ix))'=\\frac{-a_i}{1-a_ix}$$\n\u8bbe$g(x)=\\displaystyle\\sum_{i = 1}^n\\displaystyle\\frac{-a_i}{1-a_ix}$\uff0c\u90a3\u4e48$f(x)=-x\\times g(x)+n$\n\n$g(x)$\u4e5f\u5f88\u597d\u7b97\uff0c\u5316\u4e00\u4e0b\u5f0f\u5b50\u5c31\u53d8\u6210\u4e86\uff1a\n\n$$g(x)=\\sum_{i = 1}^n(\\ln(1-a_ix))'$$\n$$=(\\ln(\\prod_{i = 1}^n(1-a_ix)))'$$\n\n\u8fd9\u6837\u5b50$g$\u5c31\u53ef\u4ee5\u7528\u5206\u6cbb+NTT\u7b97\uff0c\u7b97\u51fa$g$\u540e\u518d\u63a8\u51fa$f$\uff0c$f$\u4e2d$x_i$\u7684\u7cfb\u6570\u5c31\u662f$\\displaystyle\\sum_{j = 1}^na_j^i$\uff0c\u90a3\u4e48\u6211\u4eec\u4ee3\u56de\u539f\u5f0f\u518d\u505a\u4e00\u904d\u5377\u79ef\u5c31\u597d\u4e86\uff0c\u603b\u7684\u590d\u6742\u5ea6\u4e3a$O(n\\log^2n)$\u3002\n\n\u8d34\u4e00\u4e0b\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = 1 << 19 | 1; \nconst int M = log2(N) + 3; \nconst int mod = 998244353;\n\nint n, m, t, cnt = -1, tp[M << 1][N];\nint a[N], b[N], ans[N], Sa[N], Sb[N];\nint rev[N], A[N], B[N], fac[N], ifac[N];\n\ninline int inv(int x) { return 1ll * ifac[x] * fac[x - 1] % mod; }\ninline int add(int x, int y) { return (x += y) < mod ? x : x - mod; }\n\ninline int qpow(int _, int __) {\n\tint ___ = 1; \n\tfor (; __; _ = 1ll * _ * _ % mod, __ >>= 1) \n\t\tif (__ & 1) ___ = 1ll * ___ * _ % mod;\n\treturn ___;\n}\n\ninline void Math_Init(int n) {\n\tfac[0] = ifac[0] = 1; \n\tfor (int i = 1; i <= n; ++ i) \n\t\tfac[i] = 1ll * fac[i - 1] * i % mod;\n\tifac[n] = qpow(fac[n], mod - 2);\n\tfor (int i = n; i; -- i) \n\t\tifac[i - 1] = 1ll * ifac[i] * i % mod;\n}\n\ninline void NTT(int *a, int n, int fh) {\n\tfor (int i = 0; i < n; ++ i) \n\t\tif (i < rev[i]) swap(a[i], a[rev[i]]);;\n\tfor (int Wn, limit = 2; limit <= n; limit <<= 1) {\n\t\tWn = qpow(fh ^ 1 ? qpow(3, mod - 2) : 3, (mod - 1) / limit);\n\t\tfor (int W = 1, j = 0; j < n; j += limit, W = 1) \n\t\t\tfor (int i = j; i < j + (limit >> 1); ++ i, W = 1ll * W * Wn % mod) {\n\t\t\t\tint a1 = a[i], a2 = 1ll * W * a[i + (limit >> 1)] % mod;\n\t\t\t\ta[i] = add(a1, a2), a[i + (limit >> 1)] = add(a1, mod - a2);\n\t\t\t}\n\t}\n\tif (fh ^ 1) for (int i = 0; i < n; ++ i) \n\t\ta[i] = 1ll * a[i] * inv(n) % mod;\n}\n\ninline void Invpoly(int *a, int *b, int len) {\n\tint limit = 1, k = 0;\n\tif (len ^ 1) {\n\t\tInvpoly(a, b, len >> 1);\n\t\twhile (limit < len * 2) limit <<= 1, ++ k;\n\t\tfor (int i = 0; i < limit; ++ i) {\n\t\t\tA[i] = B[i] = 0;\n\t\t\trev[i] = (rev[i >> 1] >> 1) | ((i & 1) << (k - 1));\n\t\t}\n\t\tfor (int i = 0; i < len; ++ i) \n\t\t\tA[i] = a[i], B[i] = b[i];\n\t\tNTT(A, limit, 1), NTT(B, limit, 1);\n\t\tfor (int i = 0; i < limit; ++ i) \n\t\t\tA[i] = 1ll * A[i] * B[i] % mod * B[i] % mod;\n\t\tNTT(A, limit, -1);\n\t\tfor (int i = 0; i < len; ++ i) \n\t\t\tb[i] = add(b[i], add(b[i], mod - A[i]));\n\t}\t\n\telse b[0] = qpow(a[0], mod - 2);\n}\n\ninline void Derpoly(int *a, int len) {\n\tfor (int i = 0; i < len - 1; ++ i) \n\t\ta[i] = 1ll * (i + 1) * a[i + 1] % mod;\n\ta[len - 1] = 0;\n}\n\ninline void Solve(int l, int r, int *a, int *b) {\n\tif (l == r) return (void) (a[0] = 1, a[1] = mod - b[l]); \n\tint mid = (l + r) >> 1, *a1 = tp[++ cnt], *a2 = tp[++ cnt], limit = 1, k = 0; \n\tSolve(l, mid, a1, b), Solve(mid + 1, r, a2, b);\n\twhile (limit <= r - l + 1) limit <<= 1, ++ k;\n\tfor (int i = 0; i < limit; ++ i) \n\t\trev[i] = (rev[i >> 1] >> 1) | ((i & 1) << (k - 1));\n\tNTT(a1, limit, 1), NTT(a2, limit, 1);\n\tfor (int i = 0; i < limit; ++ i) \n\t\ta[i] = 1ll * a1[i] * a2[i] % mod, a1[i] = a2[i] = 0;\n\tNTT(a, limit, -1), cnt -= 2;\n}\n\ninline void Get_S(int *a, int *f, int n) {\n\tint invf[N] = {0}, limit = 1, k = 0;\n\twhile (limit < max(n, t) * 2) limit <<= 1, ++ k;\n\tSolve(1, n, f, a), Invpoly(f, invf, limit >> 1), Derpoly(f, limit);\n\tfor (int i = 0; i < limit; ++ i) \n\t\trev[i] = (rev[i >> 1] >> 1) | ((i & 1) << (k - 1));\n\tNTT(f, limit, 1), NTT(invf, limit, 1);\n\tfor (int i = 0; i < limit; ++ i) \n\t\tf[i] = 1ll * f[i] * invf[i] % mod;\n\tNTT(f, limit, -1);\n\tfor (int i = limit - 2; ~i; -- i) \n\t\tf[i + 1] = 1ll * f[i] * (mod - 1) % mod;\n\tf[0] = n;\n\tfor (int i = 0; i < limit; ++ i) {\n\t\tif (i > t) f[i] = 0;\n\t\tf[i] = 1ll * f[i] * ifac[i] % mod;\n\t}\n}\n\nint main() {\n\tint limit = 1, k = 0;\n\n\tMath_Init(N - 5), scanf(\"%d%d\", &n, &m);\n\tfor (int i = 1; i <= n; ++ i) scanf(\"%d\", &a[i]);\n\tfor (int i = 1; i <= m; ++ i) scanf(\"%d\", &b[i]);\n\tscanf(\"%d\", &t), Get_S(a, Sa, n), Get_S(b, Sb, m);\n\n\twhile (limit <= t * 2) limit <<= 1, ++ k;\n\tfor (int i = 0; i < limit; ++ i) \n\t\trev[i] = (rev[i >> 1] >> 1) | ((i & 1) << (k - 1));\n\tNTT(Sa, limit, 1), NTT(Sb, limit, 1);\n\tfor (int i = 0; i < limit; ++ i) \n\t\tSa[i] = 1ll * Sa[i] * Sb[i] % mod;\n\tNTT(Sa, limit, -1);\n\n\tfor (int i = 1; i <= t; ++ i) \n\t\tprintf(\"%lld\\n\", 1ll * Sa[i] * fac[i] % mod * inv(n) % mod * inv(m) % mod);\n\n\treturn 0;\n}\n\n```",
        "postTime": 1545917176,
        "uid": 48173,
        "name": "Jacob233",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4705 \u3010\u73a9\u6e38\u620f\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u7684\u5f0f\u5b50\u90fd\u63a8\u4e86\u597d\u4e45\uff0c\u611f\u89c9\u81ea\u5df1\u6c34\u5e73\u8d8a\u6765\u8d8a\u4f4e\u4e86\uff0c\uff0c\n****\n\u5f88\u5bb9\u6613\u5f97\u51fa\u8fd9\u6837\u66b4\u529b\u8ba1\u7b97\u7684\u4e00\u4e2a\u5f0f\u5b50\uff0c\u6700\u540e\u9664\u4e00\u4e2a $nm$ \u5c31\u662f\u671f\u671b\u503c\u3002\n\n$$c_k=\\sum_{i=1}^n\\sum_{j=1}^m(a_i+b_j)^k$$\n$$c_k=\\sum_{i=1}^n\\sum_{i=1}^m\\sum_{r=0}^k\\binom{k}{r}a_i^rb_j^{k-r}$$\n\u4ea4\u6362\u4e00\u4e0b\u6c42\u548c\u987a\u5e8f\u5c31\u6709\n$$c_k=k!\\sum_{r=0}^k\\sum_{i=1}^n\\frac{a_i^r}{r!}\\sum_{j=1}^m\\frac{b_j^{k-r}}{(k-r)!}$$\n\u540e\u9762\u4e24\u4e2a\u548c\u5f0f\u53ef\u4ee5\u5c06\u5176\u770b\u4e3a\u4e24\u90e8\u5206\u7684\u4e58\u79ef\n$$c_k=k!\\sum_{r=0}^k\\left( \\frac{1}{r!}\\sum_{i=1}^na_i^r\\right)\\left( \\frac{1}{(k-r)!}\\sum_{j=1}^mb_j^{k-r}\\right)$$\n\u8fd9\u6837\u5c31\u662f\u4e00\u4e2a\u5377\u79ef\u7684\u5f62\u5f0f\uff0c\u8bbe\n$$A(x)=\\sum_{r=0}^\\infty x^r\\sum_{i=1}^na_i^r \\quad B(x)=\\sum_{r=0}^\\infty x^r\\sum_{i=1}^mb_i^r$$\n\u628a\u5b83\u4eec\u53d8\u6210 EGF\uff0c\u4e58\u8d77\u6765\u5c31\u662f $\\{c_k\\}_{k=0}^\\infty$ \u7684 EGF\u3002  \n\u8003\u8651\u5feb\u901f\u8ba1\u7b97 $A(x)$\uff0c\u53e6\u4e00\u4e2a\u4e5f\u662f\u4e00\u6837\u7684\u505a\u6cd5\u3002\n\n$$A(x)=\\sum_{i=1}^n\\sum_{r=0}^\\infty a_i^rx^r=\\sum_{i=1}^n\\frac{1}{1-a_ix}$$\n\u76f4\u63a5\u52a0\u662f\u6ca1\u6cd5\u8ba1\u7b97\u7684\uff08\u771f\u7684\u5417\uff1f\uff09\uff0c\u53ef\u4ee5\u7528\u8fd9\u6837\u4e00\u4e2a\u53d6 $\\ln$ \u7684\u5957\u8def\uff08\u5c31\u662f\u8fd9\u91cc\u6211\u60f3\u4e86\u597d\u4e45\uff09\n$$A(x)=n-x\\sum_{i=1}^n\\frac{-a_i}{1-a_ix}=n-x\\sum_{i=1}^n\\ln(1-a_ix)'$$\n\u56e0\u4e3a\u5bfc\u6570\u4e4b\u548c\u7b49\u4e8e\u548c\u7684\u5bfc\u6570\uff0c\u518d\u628a $\\ln$ \u79fb\u5230\u5916\u9762\u53bb\uff0c\u5f0f\u5b50\u5c31\u80fd\u5316\u6210\u8fd9\u6837\n$$A(x)=n-x\\left( \\ln\\prod_{i=1}^n(1-a_ix)\\right)'$$\n\u5206\u6cbb\u4e58 + \u591a\u9879\u5f0f $\\ln$ \u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(n \\log^2 n)$\u3002\n\n\u5982\u679c\u60f3\u4e0d\u5230\u4e0a\u9762\u7684\u591a\u9879\u5f0f $\\ln$ \u505a\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u8fd9\u6837\u66b4\u529b\u8ba1\u7b97\u5206\u5f0f\uff1a\n$$\\frac{A(x)}{B(x)}+\\frac{C(x)}{D(x)}=\\frac{A(x)D(x)+B(x)C(x)}{B(x)D(x)}$$\n\u5408\u5e76\u4e24\u9879\u9700\u8981\u516d\u6b21 dft\uff0c\u5e38\u6570\u5927\u4e86\u4e00\u500d\uff0c\u4f46\u662f\u597d\u60f3\u4e86\u5f88\u591a\u3002  \n\n```cpp\n#pragma GCC optimize (\"unroll-loops\")\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#define N 262147\n#define ll long long\n#define p 998244353\n#define reg register\nusing namespace std;\n\ninline void read(int &x){\n    x = 0;\n    char c = getchar();\n    while(c<'0'||c>'9') c = getchar();\n    while(c>='0'&&c<='9'){\n        x = (x<<3)+(x<<1)+(c^48);\n        c = getchar();\n    }\n}\n\nvoid print(int x){\n    if(x>9) print(x/10);\n    putchar(x%10+'0');\n}\n\ninline int power(int a,int t){\n    int res = 1;\n    while(t){\n        if(t&1) res = (ll)res*a%p;\n        a = (ll)a*a%p;\n        t >>= 1;\n    }\n    return res;\n}\n\ninline int getlen(int n){\n    return 1<<(32-__builtin_clz(n));\n}\n\nint rev[N],rt[N],inv[N],fac[N],ifac[N];\nint siz;\n\nvoid init(int n){\n    int w,lim = 1;\n    while(lim<=n) lim <<= 1,++siz;\n    for(reg int i=1;i!=lim;++i) rev[i] = (rev[i>>1]>>1)|((i&1)<<(siz-1));\n    w = power(3,(p-1)>>siz);\n    fac[0] = fac[1] = ifac[0] = ifac[1] = inv[1] = rt[lim>>1] = 1;\n    for(reg int i=(lim>>1)+1;i!=lim;++i) rt[i] = (ll)rt[i-1]*w%p;\n    for(reg int i=(lim>>1)-1;i;--i) rt[i] = rt[i<<1];\n    for(reg int i=2;i<=n;++i){\n        inv[i] = (ll)(p-p/i)*inv[p%i]%p;\n        fac[i] = (ll)fac[i-1]*i%p;\n        ifac[i] = (ll)ifac[i-1]*inv[i]%p;\n    }\n}\n\ninline void NTT(int *f,int type,int lim){\n    if(type==-1) reverse(f+1,f+lim);\n    static unsigned long long a[N];\n    reg int x,shift = siz-__builtin_ctz(lim);\n    for(reg int i=0;i!=lim;++i) a[rev[i]>>shift] = f[i];\n    for(reg int mid=1;mid!=lim;mid<<=1)\n    for(reg int j=0;j!=lim;j+=(mid<<1))\n    for(reg int k=0;k!=mid;++k){\n        x = a[j|k|mid]*rt[mid|k]%p;\n        a[j|k|mid] = a[j|k]+p-x;\n        a[j|k] += x;\n    }\n    for(reg int i=0;i!=lim;++i) f[i] = a[i]%p;\n    if(type==1) return;\n    x = p-(p-1)/lim;\n    for(reg int i=0;i!=lim;++i) f[i] = (ll)f[i]*x%p;\n}\n\ninline void inverse(const int *f,int n,int *R){\n    static int g[N],h[N],s[30];\n    memset(g,0,getlen(n<<1)<<2);\n    int lim = 1,top = 0;\n    while(n){\n        s[++top] = n;\n        n >>= 1;\n    }\n    g[0] = power(f[0],p-2);\n    while(top--){\n        n = s[top+1];\n        while(lim<=(n<<1)) lim <<= 1;\n        memcpy(h,f,(n+1)<<2);\n        memset(h+n+1,0,(lim-n)<<2);\n        NTT(g,1,lim),NTT(h,1,lim);\n        for(reg int i=0;i!=lim;++i) g[i] = g[i]*(2-(ll)g[i]*h[i]%p+p)%p;\n        NTT(g,-1,lim);\n        memset(g+n+1,0,(lim-n)<<2);\n    }\n    memcpy(R,g,(n+1)<<2);\n}\n\ninline void log(int *f,int n){\n    static int g[N];\n    int lim = getlen(n<<1);\n    inverse(f,n,g);\n    memset(g+n+1,0,(lim-n)<<2);\n    for(reg int i=0;i<=n;++i) f[i] = (ll)f[i+1]*(i+1)%p;\n    NTT(f,1,lim),NTT(g,1,lim);\n    for(reg int i=0;i!=lim;++i) f[i] = (ll)f[i]*g[i]%p;\n    NTT(f,-1,lim);\n    memset(f+n+1,0,(lim-n)<<2);\n    for(reg int i=n;i;--i) f[i] = (ll)f[i-1]*inv[i]%p;\n    f[0] = 0;\n}\n\n#define mid ((l+r)>>1)\n#define ls (u<<1)\n#define rs (u<<1|1)\nint len[N];\n\nvoid solve(int l,int r,int u,const int *a,int *R){\n    len[u] = r-l+1;\n    if(l==r){\n        R[0] = 1,R[1] = p-a[l];\n        return;\n    }\n    int f[N],g[N];\n    solve(l,mid,ls,a,f);\n    solve(mid+1,r,rs,a,g);\n    int lim = getlen(len[u]);\n    memset(f+len[ls]+1,0,(lim-len[ls]+2)<<2);\n    memset(g+len[rs]+1,0,(lim-len[rs]+2)<<2);\n    NTT(f,1,lim),NTT(g,1,lim);\n    for(reg int i=0;i!=lim;++i) f[i] = (ll)f[i]*g[i]%p;\n    NTT(f,-1,lim);\n    memcpy(R,f,(len[u]+1)<<2);\n}\n#undef ls\n#undef rs\n#undef mid\n\nint n,m,k,t;\nint a[N],b[N],F[N],G[N];\n\nint main(){\n    read(n),read(m);\n    init(200000);\n    for(reg int i=1;i<=n;++i) read(a[i]);\n    for(reg int i=1;i<=m;++i) read(b[i]);\n    read(k);\n    t = k,k = max(max(k,n),m);\n    solve(1,n,1,a,F);\n    solve(1,m,1,b,G);\n    log(F,k+1),log(G,k+1);\n    for(reg int i=0;i<=k;++i){\n        F[i] = (ll)F[i+1]*(i+1)%p;\n        G[i] = (ll)G[i+1]*(i+1)%p;\n    }\n    F[k+1] = G[k+1] = 0;\n    for(reg int i=k;i;--i){\n        F[i] = p-F[i-1];\n        G[i] = p-G[i-1];\n    }\n    F[0] = n,G[0] = m;\n    for(reg int i=2;i<=k;++i){\n        F[i] = (ll)F[i]*ifac[i]%p;\n        G[i] = (ll)G[i]*ifac[i]%p;\n    }\n    int lim = getlen(k<<1);\n    NTT(F,1,lim),NTT(G,1,lim);\n    for(reg int i=0;i!=lim;++i) F[i] = (ll)F[i]*G[i]%p;\n    NTT(F,-1,lim);\n    int tmp = power((ll)n*m%p,p-2);\n    for(reg int i=0;i<=k;++i) F[i] = (ll)F[i]*fac[i]%p*tmp%p;\n    for(reg int i=1;i<=t;++i) print(F[i]),putchar('\\n');\n    return 0;\t\n}\n```",
        "postTime": 1580221176,
        "uid": 115864,
        "name": "NaCly_Fish",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4705 \u3010\u73a9\u6e38\u620f\u3011"
    },
    {
        "content": "\u57fa\u7840\u524d\u7f6e\u6280\u80fd\n\n1.\u57fa\u7840\u6570\u5b66  \n2.NTT(FFT)  \n3.\u591a\u9879\u5f0f\u6c42\u9006  \n4\\*.Taylor\u5c55\u5f00\n\n\n\u8bbe $ans_k$\uff0c\u4e3a\n\n$$ans_k=\\sum_{i=1}^n \\sum_{j=1}^m (a_i+b_j)^k$$\n\n\u8bbe $Ans(x)$ \u4e3a $ans$ \u7684\u751f\u6210\u51fd\u6570\n\n\u7b54\u6848\u5373\u4e3a\u6c42\u591a\u9879\u5f0f $Ans(x) * \\frac{1}{nm}$ \n\n\u7136\u540e....\u9996\u5148\u8fd9\u4e2a\u5f0f\u5b50....\n\n$$ans_k= \\sum_{i=1}^n \\sum_{j=1}^m (a_i+b_j)^k$$\n\n\u8003\u8651\u4e8c\u9879\u5f0f\u5c55\u5f00\n\n$$ans_k= \\sum_{i=1}^n \\sum_{j=1}^m \\sum_{t=0}^k C_k^t a_i^{k-t} b_j^t$$\n\n\u8003\u8651\u4ea4\u6362\u6c42\u548c\u987a\u5e8f\uff0c\u628a $k$ \u63d0\u5230\u524d\u9762\n\n$$ans_k= \\sum_{t=0}^k \\sum_{i=1}^n \\sum_{j=1}^m C_k^t a_i^{k-t} b_j^t$$\n\n\n$$ans_k= \\sum_{t=0}^k C_k^t \\sum_{i=1}^n a_i^{k-t}\\sum_{j=1}^m b_j^t$$\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u8ba1\u4e24\u4e2a\u65b0\u7684\u591a\u9879\u5f0f\u4e3a $A(x),B(x)$\uff0c\u4ee4\n\n$$A(x)=\\sum_{i=1}^n a_i^x$$\n$$B(x)=\\sum_{i=1}^m b_i^x$$\n\n\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u5f88\u4f18\u7f8e\u7684\u5316\u7b80:\n\n$$ans_k= \\sum_{t=0}^k C_k^t\\ A(k-t)\\ B(t)$$\n\n\u7ec4\u5408\u6570\u76f4\u63a5\u62c6\u51fa\u6765\n\n$$ans_k= \\sum_{t=0}^k \\frac{k!}{t!(k-t)!}\\ A(k-t)\\ B(t)$$\n\n$$=k! \\sum_{t=0}^k \\frac{A(k-t)}{(k-t)!}\\ \\frac{B(t)}{t!}$$\n\n\u975e\u5e38\u597d\u3002\u73b0\u5728\u7684\u95ee\u9898\u53d8\u6210\u4e86$A(x)=\\sum_{i=1}^n a_i^x$\u8fd9\u4e2a\u770b\u8d77\u6765\u975e\u5e38\u4e0d\u53cb\u597d\u7684\u591a\u9879\u5f0f\u600e\u4e48\u6c42\u3002~~(\u8bf4\u5b9e\u8bdd\u4e0d\u4f1a\u7684\u8bdd\u771f\u7684\u662f\u6ca1\u6cd5\u60f3\u51fa\u6765\u7684...)(Drench\u8bf4\u662f\u975e\u5e38\u7ecf\u5178\u7684\u95ee\u9898)~~\n\n\u5148\u8003\u8651\u4e00\u4e2a\u591a\u9879\u5f0f\uff0c\u5373\u4e3a$F(x)$\uff0c\u4e3a\n\n$$F(x)=\\prod_{i=1}^n(a_ix+1)$$\n\n\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u5206\u6cbb\u6c42\u51fa\u6765\u3002\u5177\u4f53\u4e00\u70b9\u5927\u6982\u5c31\u662f...\n\n$$F_l(x)=\\prod_{i=1}^{(n/2)}\\ (a_ix+1)$$\n$$F_r(x)=\\prod_{i=(n/2)+1}^{n}(a_ix+1)$$\n$$F(x)=F_l(x)F_r(x)$$\n\n\u6c42\u51fa\u8fd9\u4e2a\u4e1c\u897f\u4e4b\u540e\uff0c\u518d\u5bf9\u8fd9\u4e2a\u4e1c\u897f\u53d6$ln$....\n\n$$ln(F(x))=G(x)$$\n\n\u8fd9\u662f\u4e2a\u591a\u9879\u5f0f\u6c42$ln$\uff0c\u5177\u4f53\u6765\u8bf4...\n\n$$(ln(x))'=\\frac{1}{x}$$\n\n\u94fe\u5f0f\u6cd5\u5219\uff1a\u5982\u679c\n\n$$h(x)=f(g(x))$$\n\n\u90a3\u4e48\u5c31\u4f1a\u6709\n\n$$h'(x)=f'(g(x))g'(x)$$\n\n\u8fd9\u91cc\u7684$ln(x)$\u5c31\u76f8\u5f53\u4e8e$f(x)$\n\n\u56e0\u4e3a$G(x)=f(F(x))$\n$$G'(x)=f'(F(x))F'(x)=\\frac{F'(x)}{F(x)}$$\n\n\u53ef\u80fd\u9700\u8981\u53cd\u5e94\u4e00\u4e0b  \n\n\u7136\u540e\uff0c\n\n$$G(x)=\\int \\frac{F'(x)}{F(x)}$$\n\n\u81f3\u4e8e\u591a\u9879\u5f0f\u7684\u6c42\u5bfc\u548c\u79ef\u5206\uff0c\u5176\u5b9e\u975e\u5e38\u7b80\u5355\uff0c\u6c42\u5bfc\u7684\u65f6\u5019$a_{i}=(i+1)a^{(i+1)},$ \u79ef\u5206\u7684\u65f6\u5019$a_i=inv(i)a_{i-1}$\u3002\u5173\u952e\u662f\u6c42\u51fa$\\frac{1}{F(x)}$\u662f\u4e00\u4e2a\u591a\u9879\u5f0f\u6c42\u9006\u7684\u8fc7\u7a0b\u3002[P4238 \u3010\u6a21\u677f\u3011\u591a\u9879\u5f0f\u6c42\u9006](https://www.luogu.org/problemnew/show/P4238)\n\n\u8fd9\u4e48\u8d39\u52b2\u6c42\u51fa $G(x)$ \u5e72\u561b\u5462\uff1f\n\n......\n\n\u6cf0\u52d2($taylor$)\u5c55\u5f00\uff1a\n\n\u9996\u5148\u7ea6\u5b9a\u7528$f^{(n)}(x)$\u8868\u793a$f(x)$\u7684$n$\u9636\u5bfc\u6570\u3002\n\n\u82e5\u51fd\u6570 $f(x)$ \u5728\u5305\u542b $x0$ \u7684\u67d0\u4e2a\u95ed\u533a\u95f4 $[a,b]$ \u4e0a\u5177\u6709 $n$ \u9636\u5bfc\u6570\uff0c\u4e14\u5728\u5f00\u533a\u95f4 $(a,b)$ \u4e0a\u5177\u6709 $(n+1)$ \u9636\u5bfc\u6570\uff0c\u5219\u5bf9\u95ed\u533a\u95f4 $[a,b]$ \u4e0a\u4efb\u610f\u4e00\u70b9 $x$ \uff0c\u6210\u7acb\u4e0b\u5f0f\uff1a\n\n![](https://gss1.bdstatic.com/9vo3dSag_xI4khGkpoWK1HF6hhy/baike/s%3D561/sign=143f6442fadeb48fff69a1d8c11e3aef/a686c9177f3e670920f8bbdc32c79f3df8dc551d.jpg)\n\n\u4e0a\u9762\u662f\u767e\u5ea6\u767e\u79d1\u6284\u7684~~(\u987a\u624b\u5f15\u7528\u4e86\u56fe\u7247\u3002)~~\u3002\n\n\u7528\u975e\u5e38\u4e0d\u51c6\u786e\u7684\u4eba\u8bdd\u6765\u8bf4\uff0c\u5c31\u662f\u6709\u4e00\u4e2a\u51fd\u6570$f(x)$\uff0c\u8fd9\u4e2a\u51fd\u6570\u968f\u4fbf\u662f\u4ec0\u4e48$log,sin,cos$\uff0c\u53ea\u8981\u8fd9\u4e2a$f(x)$\u53ef\u5728\u4efb\u610f\u70b9\u5bfc\u4efb\u610f\u6b21\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u4e00\u4e2a\u975e\u5e38\u5947\u602a\u7684\u65e0\u7a77\u9879\u7684\u591a\u9879\u5f0f$g(x)$\u4ece\u67d0\u4e00\u4e2a\u70b9$x_0$\u6765\u62df\u5408\u8fd9\u6837\u7684\u4e00\u4e2a\u51fd\u6570\u3002$g(x)$\u7684\u6bcf\u4e00\u9879$a_i$\u4e3a\uff1a\n\n$$\\frac{f^{(n)}(x_0)}{n!}$$\n\n\u5408\u8d77\u6765\u5c31\u662f\n\n$$f(x)=\\sum_{k=1}^{+\\infty} \\frac{f^{(k)}(x_0)}{k!}(x-x_0)^k$$\n\n\u8fd9\u4e2a\u4e1c\u897f\u7684\u5927\u81f4\u601d\u8def\u5c31\u662f\u8ba9$g(x_0)=f(x_0)$\uff0c\u8ba9$g'(x_0)=f'(x_0)$\uff0c\u8ba9$g''(x_0)=f''(x_0)$\uff0c\u76f4\u5230\u8ba9$g^{(+\\infty)}(x_0)=f^{(+\\infty)}(x_0)$\uff0c\u8fd9\u4e24\u4e2a\u51fd\u6570\u5c31\u53ef\u4ee5\u8bf4\u4e00\u6837\u4e86\u3002\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\u7684$g(x)$\u5199\u51fa\u6765\u5c31\u662f\u6cf0\u52d2\u5c55\u5f00\u3002\u5f53\u7136\u6ca1\u6709\u8fd9\u4e48\u7b80\u5355\uff0c\u5173\u4e8etaylor\u5c55\u5f00\u77e5\u4e4e\u4e0a\u6709\u8bb2\u7684\u975e\u5e38\u597d\u7684\uff0c\u5982\u679c\u60f3\u5b66\u5efa\u8bae\u81ea\u5df1\u53bb\u770b\u4e00\u770b\u3002\n\n\u56de\u5230\u8fd9\u4e2a\u4e1c\u897f $F(x)=\\prod_{i=1}^n(a_ix+1)$ \u3002\u7528\u5206\u6cbbNTT\u8ba1\u7b97\u51fa $F(x)$ \u4e4b\u540e\u518d\u5bf9\u5b83\u591a\u9879\u5f0f\u6c42$ln$\u5f97\u5230 $G(x)$ :\n\n$$G(x)=ln(\\ \\ \\prod_{i=1}^n(a_ix+1)\\ \\ )$$\n\n\u975e\u5e38\u660e\u663e\u7684\u5316\u7b80  \n\n$$G(x)=\\sum_{i=1}^nln(a_ix+1)$$\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u628a\u91cc\u9762\u7684\u8fd9\u4e2a\u51fd\u6570 $ln(x)$ \u5728 $1$ \u8fd9\u4e2a\u70b9\u8fdb\u884cTaylor\u5c55\u5f00\u3002\n\n\u539f\u59cb\u7684\u516c\u5f0f\n\n$$f(x)=\\sum_{k=1}^{+\\infty} \\frac{f^{(k)}(x_0)}{k!}(x-x_0)^k$$\n\n$ln(x)$\u6c42\u5bfc\u7684\u901a\u9879\u516c\u5f0f\n$$(ln(x))'=x^{-1}\\ \\ \\ \\ \\ \\ \\ (x^a)'=(a-1)x^{a-1}$$\n\n$$(ln(x))^{(n)}=(-1)^{(n+1)}n!x^{-n}$$\n\n\u5e26\u5165\n$$ln(a_ix+1)=\\sum_{k=1}^{+\\infty} \\frac{(-1)^{(k+1)}(k-1)!}{k!}(a_ix)^k$$\n\n$$ln(a_ix+1)=\\sum_{k=1}^{+\\infty} \\frac{(-1)^{(k+1)}}{k}a_i^kx^k$$\n\n\u56e0\u4e3a\u5728\u6c42$G(x)$\u7684\u65f6\u5019\u7528\u5230\u4e86\u591a\u9879\u5f0f\u6c42\u9006\uff0c\u5bf9$x^{K+1}$\u53d6\u6a21\u540e\uff0c\u8fd9\u4e2a\u5f0f\u5b50\u4e2d\u5927\u4e8e$K$\u6b21\u7684\u9879\u6ca1\u6709\u610f\u4e49.  \n\n\u5bf9\u4e8e\u5355\u72ec\u7684\u4e00\u9879\n\n$$ln(a_ix+1)=\\sum_{k=1}^{K} \\frac{(-1)^{(k+1)}}{k}a_i^kx^k$$\n\n\u6240\u4ee5\n\n$$G(x)=\\sum_{i=1}^nln(a_ix+1)=\\sum_{i=1}^n\\sum_{k=1}^{K} \\frac{(-1)^{(k+1)}}{k}a_i^kx^k$$\n\n\u4e3a\u4e86\u8868\u8fbe\u7684\u6e05\u695a\u4e00\u70b9\u968f\u4fbf\u627e\u4e00\u4e2a$t$\u628a$t(k)$\u8bb0\u4e3a$\\frac{(-1)^{(k+1)}}{k}$\n\n$$G(x)=\\sum_{i=1}^nln(a_ix+1)=\\sum_{i=1}^n\\sum_{k=1}^{K} t(k)a_i^kx^k$$\n\n\u663e\u7136\u53ef\u4ee5\u4ea4\u6362\u4e00\u4e0b\u987a\u5e8f\n\n$$G(x)=\\sum_{k=1}^{K} t(k)\\sum_{i=1}^na_i^kx^k$$\n\n$$G(x)=\\sum_{k=1}^{K} t(k)A(k)x^k$$\n\n\u54c7\uff01\n\n\u7136\u540e\u6211\u7684\u4ee3\u7801\u5199\u7684\u5de8\u578b\u4e11\uff0c\u5e38\u6570\u83ab\u540d\u5de8\u578b\u5927\uff0c\u5361\u4e86\u4e00\u6b21\u624dA,\u4ec5\u4f9b\u5bf9\u62cd...\n\n```cpp\n#include <bits/stdc++.h>\n#define rap(i,s,n) for(int i=s;i<=n;i++)\n#define drap(i,n,s) for(int i=n;i>=s;i--)\n#define N 410000\n#define P 998244353\n#define lb(x) ((x&(-x)))\n#define ll long long\n#define m(s,k) memset(s,k,sizeof s)\nusing namespace std;\nchar xB[1<<15],*xS=xB,*xTT=xB;\n#define getc() (xS==xTT&&(xTT=(xS=xB)+fread(xB,1,1<<15,stdin),xS==xTT)?0:*xS++)\n#define isd(c) ((c>='0'&&c<='9')||(c=='-'))\ntemplate<typename T>\ninline bool rd(T& xa){\n    char xchh; T f=1; while(xchh=getc(),(!isd(xchh))&&(xchh!=0));\n    if(xchh==0) return 0; if(xchh=='-') xchh=getc(),f=-1; xa=xchh-'0';\n    while(xchh=getc(),isd(xchh)) xa=xa*10+xchh-'0'; xa*=f; return 1;\n}\nll mpow(ll a,ll k,ll p){ll res=1; while(k){if(k&1) res=res*a%p; k>>=1; a=a*a%p;} return res%p;}\nll Inv(ll x){return mpow(x,P-2,P);}\nll fac[N],inv[N],finv[N];\nvoid Finit(int n){\n    fac[0]=1; rap(i,1,n) fac[i]=fac[i-1]*i%P;\n    inv[1]=1; rap(i,2,n) inv[i]=inv[P%i]*(P-P/i)%P;\n    finv[0]=1; rap(i,1,n) finv[i]=finv[i-1]*inv[i]%P;\n}\nnamespace Poly{\n    ll c[N],f[N],f1[N],fi[N];\n    int rev[N],lim,l;\n    void init(int n){\n        lim=1,l=0; while(lim<=n) lim<<=1,l++;\n        rap(i,1,lim-1) rev[i]=(rev[i>>1]>>1)|((i&1)<<(l-1));\n    }\n    void NTT(ll *A,int k){\n        rap(i,1,lim-1) if(i<rev[i]) swap(A[i],A[rev[i]]); for(int l=1;l<lim;l<<=1){\n            ll gn=mpow(3,(P-1)+k*(P-1)/l/2,P); for(int j=0;j<lim;j+=l*2){\n                ll g=1; for(int k=0;k<l;k++,g=g*gn%P){\n                    ll x=A[k+j],y=A[k+j+l]*g%P;\n                    A[k+j]=(x+y)%P; A[k+j+l]=(x-y+P)%P;\n                }\n            }\n        }\n        if(k==-1) {ll tinv=Inv(lim); rap(i,0,lim-1) A[i]=A[i]*tinv%P;}\n    }\n    void MUL(ll *A,int n,ll *B,int m,ll *C){\n        init(n+m); NTT(A,1); NTT(B,1); rap(i,0,lim-1) C[i]=A[i]*B[i]%P; NTT(A,-1); NTT(B,-1); NTT(C,-1);\n    }\n    void MUL(ll *A,int n,ll *B,int m){\n        init(n+m); NTT(A,1); NTT(B,1); rap(i,0,lim-1) B[i]=B[i]*A[i]%P; NTT(A,-1); NTT(B,-1);\n    }\n    void INV(ll *A,ll *B,int n){\n        if(n==1){B[0]=Inv(A[0]); return;} INV(A,B,(n+1)>>1);\n        init(2*n); m(c,0); rap(i,0,n-1) c[i]=A[i]; NTT(c,1); NTT(B,1);\n        rap(i,0,lim-1) B[i]=(2-B[i]*c[i]+P)%P*B[i]%P;\n        NTT(B,-1); rap(i,n,lim-1) B[i]=0; return;\n    }\n    void MUL(ll *A,int *a,int n){\n        int len=1; while(len<n) len<<=1; ll *f[N];\n        rap(i,1,len){f[i]=new ll[lb(i)<<2]; f[i][0]=1; f[i][1]=a[i];}\n        for(int l=1;l<len;l<<=1){init(2*l); for(int j=l*2;j<=len;j+=l*2){\n            NTT(f[j-l],1); NTT(f[j],1);\n            rap(i,0,lim-1) f[j][i]=f[j][i]*f[j-l][i]%P; NTT(f[j],-1);\n        }}\n        rap(i,0,n) A[i]=f[len][i];\n        return;\n    }\n    void DEAL(ll *A,int *a,int n,int k){\n        m(f,0); MUL(f,a,n); m(f1,0); rap(i,0,n-1) f1[i]=f[i+1]*(i+1)%P;\n        m(fi,0); INV(f,fi,k+1); MUL(f1,n-1,fi,k,A); drap(i,k,1) A[i]=A[i-1]*inv[i]%P;\n        rap(i,k+1,lim-1) A[i]=0;\n        rap(i,1,k){A[i]=A[i]*i%P; if((i&1)==0) A[i]=P-A[i];}\n    }\n}\nint n,m,K,a[N],b[N];\nll A[N],B[N],ans[N];\nint main(){\n    rd(n); rd(m); rap(i,1,n) rd(a[i]); rap(i,1,m) rd(b[i]); rd(K);\n    Finit(max(max(n,m),K)+100);\n    Poly::DEAL(A,a,n,K); Poly::DEAL(B,b,m,K);\n    rap(i,1,K) A[i]=A[i]*finv[i]%P,B[i]=B[i]*finv[i]%P;\n    A[0]=n; B[0]=m; Poly::MUL(A,K,B,K,ans);\n    ll tinv=Inv(1ll*n*m%P); rap(i,1,K) ans[i]=ans[i]*fac[i]%P*tinv%P;\n    rap(i,1,K) printf(\"%lld\\n\",ans[i]);\n    return 0;\n}\n\n```",
        "postTime": 1530519474,
        "uid": 98650,
        "name": "WinXP",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4705 \u3010\u73a9\u6e38\u620f\u3011"
    },
    {
        "content": "# \u66f4\u7b80\u5355\u7684\u7b97\u6cd5\u548c\u66f4\u5feb\u7684NTT\n\n### \u671f\u671b\u7684\u7ebf\u6027\u6027\n\n\u8bbe$a,b$\u662f\u4e24\u4e2a**\u4e0d\u76f8\u5173**\u7684\u968f\u673a\u53d8\u91cf\uff0c$E(x)$\u4e3a$x$\u7684\u671f\u671b\u53d6\u503c\uff0c\u5219\uff1a\n$$E(a\\cdot b)=E(a)\\cdot E(b)$$\n\u8bc1\u660e\uff1a\n\n\u5982\u679c$a,b$\u7684\u53d6\u503c\u662f\u79bb\u6563\u7684\uff08\u6bd4\u5982\u9898\u76ee\u4e2d\u7684$a,b$\uff0c\u53ea\u80fd\u4ece\u7ed9\u5b9a\u7684\u6709\u9650\u4e2a\u6570\u4e2d\u9009\u62e9\uff09\uff0c\u90a3\u4e48\u53ef\u4ee5\u8bbe$P_a(x)$\u4e3a$a$\u53d6\u5230$x$\u7684\u6982\u7387\n\n\u5219\u6211\u4eec\u8981\u6c42\u7684$E(a\\cdot b)=\\sum_{\\forall x,y}{P_a(x)P_b(y)}$\n\n\u53c8\u56e0\u4e3a$E(a)\\cdot E(b)=\\sum_{\\forall x} P_a(x)\\sum_{\\forall y} P_b(y)$\n\n\u5c06\u4e0b\u9762\u7684\u5f0f\u5b50\u7684$P_a(x)$\u4e58\u8fdb\u540e\u9762\u7684$\\sum$\u5373\u53ef\u53d1\u73b0\u4e24\u4e2a\u5f0f\u5b50\u662f\u76f8\u7b49\u7684\u3002\n\n\u4f46\u662f\uff0c\u8981\u6ce8\u610f\uff0c\u5982\u679c$a,b$\u662f\u76f8\u5173\u7684\uff0c\u90a3\u4e48\u4e0a\u8ff0\u6027\u8d28\u5c31\u4e0d\u518d\u9002\u7528\u4e86\u3002\n\n### \u6574\u6570$k$\u6b21\u5e42\u548c\n\n\u5bf9\u4e8e\u4e00\u4e2a\u6570\u5217\uff0c\u5982\u679c\u6211\u4eec\u8981\u6c42\uff1a\u5bf9\u4e8e\u6240\u6709\u7684$t\\in [0,k]$\uff0c$A_i^t$\u7684\u548c\uff0c\u600e\u4e48\u505a\u5462\uff1f\n\n\u5bf9\u4e8e\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u6709\u4e00\u4e2a$O(nlog^2n)$\u7684\u505a\u6cd5\u3002\n\n\u5199\u51fa\u8fd9\u4e2a\u548c\u5173\u4e8e$t$\u7684\u751f\u6210\u51fd\u6570(\u51fd\u6570\u4e2d$x^c$\u7cfb\u6570\u662f$c$\u6b21\u5e42\u548c)\n$$1+a_1^1x+a_1^2x^2+a_1^3x^3+\\cdots+$$\n\n$$1+a_2^1x+a_2^2x^2+a_2^3x^3+\\cdots+$$\n\n$$\\cdots $$\n\n\u6839\u636e\u7b49\u6bd4\u6570\u5217\u6c42\u548c\u516c\u5f0f(\u5728\u751f\u6210\u51fd\u6570\u4e2d\u7684\u63a8\u5e7f)\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u4e0a\u9762\u7684\u5f0f\u5b50\u5b9e\u9645\u4e0a\u662f\uff1a\n$$\\frac{1}{1-a_1x}+\\frac{1}{1-a_2x}+\\cdots+\\frac{1}{1-a_nx}$$\n\u5982\u679c\u6211\u4eec\u66b4\u529b\u4ece\u5de6\u5f80\u53f3\u5408\u5e76\u8fd9\u4e2a\u5f0f\u5b50\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f\uff1a$O(n^2)$\u7684\uff0c\u56e0\u4e3a\u6bcf\u8fdb\u884c\u4e00\u6b21\u901a\u5206\uff0c\u5206\u5b50\u6700\u9ad8\u9879\u6b21\u6570\u5fc5\u7136\u589e\u52a0\u3002\n\n\u5982\u679c\u9010\u5c42\u5408\u5e76\u8fd9\u4e2a\u5f0f\u5b50\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u53d8\u6210$O(nlog^2n)$\u3002\u9010\u5c42\u7684\u610f\u601d\uff0c\u5373\u6bcf\u4e00\u5c42\u5408\u5e76\u6240\u6709\u76f8\u90bb\u7684\u5206\u5f0f\uff0c\u4e14\u4e0d\u91cd\u590d\u5408\u5e76\u3002\u590d\u6742\u5ea6\u8bc1\u660e\u540c\u5206\u6cbbFFT\u3002\n\n### \u9898\u76ee\u5206\u6790\n\n\u9996\u5148\uff0c\u7531\u4e8e\u6211\u4eec\u8981\u6c42$(x+y)^t$\u7684\u671f\u671b\uff0c\u6839\u636e\u7b2c\u4e00\u4e2a\u524d\u7f6e\u77e5\u8bc6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5148\u5c06\u8fd9\u4e2a\u5f0f\u5b50\u5c55\u5f00\n$$E(x+y)^t=\\sum_{i=0}^tC_t^iE(x^i)E(y^{t-i})$$\n\u6240\u4ee5\uff0c\u6211\u6709\u79cd\u9884\u611f\uff0c\u5c31\u662f\u4e3a\u4e86\u6c42\u5bf9\u4e8e\u6240\u6709$t$ \u7684\u7b54\u6848\uff0c\u6211\u4eec\u53ea\u8981\u5206\u522b\u6c42\u51fa\u5bf9\u4e8e\u6240\u6709\u7684$t$\uff0c$x^t$\u7684\u671f\u671b\u548c$y^t$\u7684\u671f\u671b\uff0c\u5c31\u53ef\u4ee5\u7528\u5377\u79ef\u7684\u65b9\u5f0f\u5feb\u901f\u6c42\u51fa$(x+y)^t$\u7684\u671f\u671b\u3002\n\n\u5b9e\u9645\u4e0a\uff0c\u7684\u786e\u662f\u8fd9\u6837\u7684\uff1a\n$$F(t)=\\sum_{i=0}^tC_t^iA(i)B(t-i)$$\n$$F(t)=\\sum_{i=0}^t\\frac{t!}{i!(t-i)!}A(i)B(t-i)$$\n$$\\frac{1}{t!}F(t)=\\sum_{i=0}^t\\frac{1}{i!}A(i)\\cdot\\frac{1}{t-i}B(t-i)$$\n\u8fd9\u662f\u4e00\u4e2a\u5377\u79ef\u7684\u5f62\u5f0f\uff0c\u88ab\u5377\u79ef\u7684\u4e24\u51fd\u6570\u5206\u522b\u662f$\\frac{1}{i!}A(i)$\u548c$\\frac{1}{t-i}B(t-i)$\n\n\u6240\u4ee5\u4e0b\u9762\u7684\u4efb\u52a1\u5c31\u662f\u6c42$A(i),B(i)$\uff0c\u4e5f\u5c31\u662f$a,b$\u7684$i$\u6b21\u5e42\u671f\u671b\u3002\u8fd9\u4e2a\u671f\u671b\u5c31\u662f$i$\u6b21\u5e42\u548c\u9664\u4ee5\u9879\u6570\uff0c\u7528\u7b2c\u4e8c\u4e2a\u524d\u7f6e\u77e5\u8bc6\u89e3\u51b3\u5373\u53ef\uff0c\u603b\u590d\u6742\u5ea6$O(nlog^2n)$\u3002\u5b9e\u9645\u4e0a\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5927\u6982\u67092\u500d\u4e8e\u672c\u9898\u53e6\u4e00\u79cd\u65b9\u6cd5\u7684\u5e38\u6570\uff0c\u56e0\u6b64\u9700\u8981\u5728NTT\u7684\u6548\u7387\u4e0a\u505a\u4f18\u5316\u624d\u53ef\u4ee5AC\u3002\n\n### \u66f4\u5feb\u7684NTT\n\n\u8003\u8651\u5230\u4e00\u822c\u7684NTT\u90fd\u7565\u6162\u4e8eFFT\uff0c\u4f18\u5316NTT\u7684\u5e38\u6570\u4ee5\u52a0\u901f\u8ba1\u7b97\u52bf\u5728\u5fc5\u884c\u3002\n\n\u672c\u9898\u4e2d\u7531\u4e8e\u9700\u8981\u8fdb\u884c\u5206\u6cbbFFT\uff0cNTT\u6267\u884c\u6b21\u6570\u5c06\u975e\u5e38\u591a\uff0c\u6240\u4ee5\u4f18\u5316\u7684\u4e3b\u8981\u65b9\u6cd5\u6709\u4e24\u4e2a\uff1a\n\n- 1.\u5c06\u4e00\u5207\u53ef\u4ee5\u9884\u5904\u7406\u7684\u4e1c\u897f\u9884\u5904\u7406\n- 2.\u5c06\u4e00\u5207\u53ef\u4ee5\u7701\u7565\u7684\u53d6\u6a21\u7701\u7565\n\n\u7ecf\u8fc7\u6211\u6bd4\u8f83\u5f7b\u5e95\u7684\u5e38\u6570\u4f18\u5316\u540e\uff0c\u6210\u4e86\u8fd9\u6837\uff1a\n\n```cpp\nvoid dft(int f)\n{\n    for(int i=0;i<len;i++)if(i<rev[i])swap(x[i],x[rev[i]]);\n    for(int w=1,b=1;w<len;w<<=1,b++)\n    {\n        ll *wx=(f==1?wi[b]:wii[b]);\t\t//wi\u548cwii\u4e3a\u539f\u6839\u7684\u5e42\u53ca\u5e42\u7684\u9006\n        for(int j=0;j<len;j+=(w<<1))\n        {\n            for(int i=j;i<j+w;i++)\n            {\n                ll a=x[i],b=wx[i-j]*x[i+w];\n                x[i]=(a+b)%MOD;\n                x[i+w]=(a-b+MOD*MOD)%MOD;\n            }\n        }\n    }\n    if(f==-1)\n    {\n        ll mul=ksm(len,MOD-2);\n        for(int i=0;i<len;i++)x[i]=x[i]*mul%MOD;\n    }\n}\n```\n\n\u5728\u6d1b\u8c37\"\u3010\u6a21\u677f\u3011\u591a\u9879\u5f0f\u4e58\u6cd5\"\u4e2d\uff0c\u6548\u7387\u63d0\u534720%\n\n\u5728\u6d1b\u8c37\"\u73a9\u6e38\u620f\"\u4e2d\uff0c\u6548\u7387\u63d0\u534748%\n\n### \u4ee3\u7801\n```cpp\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"sse3\",\"sse2\",\"sse\")\n#pragma GCC target(\"avx\",\"sse4\",\"sse4.1\",\"sse4.2\",\"ssse3\")\n#pragma GCC target(\"f16c\")\n#pragma GCC optimize(\"inline\",\"fast-math\",\"unroll-loops\",\"no-stack-protector\")\n#pragma GCC diagnostic error \"-fwhole-program\"\n#pragma GCC diagnostic error \"-fcse-skip-blocks\"\n#pragma GCC diagnostic error \"-funsafe-loop-optimizations\"\n#pragma GCC diagnostic error \"-std=c++14\"\n\n#include <cstdlib>\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#define MX (524288+10)\n#define MOD 998244353LL\n#define G 3\n\nusing namespace std;\n\ntypedef long long ll;\n\nint len,bit,rev[MX];\nint n1,n2,m,A[MX],B[MX];\nll fac[MX];\nll EA[MX],EB[MX];\nll gp[MX],gpi[MX],wi[22][MX],wii[22][MX];\n\nll read()\n{\n\tll x=0;char ch=getchar();\n\twhile(!isdigit(ch))ch=getchar();\n\twhile(isdigit(ch))x=x*10+ch-'0',ch=getchar();\n\treturn x;\n}\n\nvoid qm(ll& x){x%=MOD;if(x<0)x+=MOD;}\n\nvoid init(int l)\n{\n\tlen=1,bit=0,rev[0]=0;\n\twhile(len<l)len<<=1,bit++;\n\tfor(int i=1;i<len;i++)rev[i]=(rev[i>>1]>>1)|((i&1)<<(bit-1));\n}\n\nll ksm(ll x,ll t)\n{\n\tll ans=1;\n\twhile(t)\n\t{\n\t\tif(t&1)ans=ans*x%MOD;\n\t\tx=x*x%MOD;\n\t\tt>>=1;\n\t}\n\treturn ans;\n}\n\nll inv(ll x){return ksm(x,MOD-2);}\n\nstruct poly\n{\n\tll *x;\n\tvoid resize(){delete x;x=new ll[len];memset(x,0,len*sizeof(ll));}\n\tvoid reset(){memset(x,0,len*sizeof(ll));}\n\tvoid input(int s){for(int i=0;i<s;i++)scanf(\"%lld\",&x[i]),qm(x[i]);}\n\tvoid output(int s){for(int i=0;i<s;i++)printf(\"%lld \",x[i]);putchar('\\n');}\n\tvoid dft(int f)\n\t{\n\t\tfor(int i=0;i<len;i++)if(i<rev[i])swap(x[i],x[rev[i]]);\n\t\tfor(int w=1,b=1;w<len;w<<=1,b++)\n\t\t{\n\t\t\tll *wx=(f==1?wi[b]:wii[b]);\n\t\t\tfor(int j=0;j<len;j+=(w<<1))\n\t\t\t{\n\t\t\t\tfor(int i=j;i<j+w;i++)\n\t\t\t\t{\n\t\t\t\t\tll a=x[i],b=wx[i-j]*x[i+w];\n\t\t\t\t\tx[i]=(a+b)%MOD;\n\t\t\t\t\tx[i+w]=(a-b+MOD*MOD)%MOD;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(f==-1)\n\t\t{\n\t\t\tll mul=ksm(len,MOD-2);\n\t\t\tfor(int i=0;i<len;i++)x[i]=x[i]*mul%MOD;\n\t\t}\n\t}\n};\n\npoly up[MX],dn[MX];\npoly dl,ul,dr,ur,dv,f1,f2;\npoly tmp;\n\nvoid get_inv(poly &a,poly &b,int nx)\n{\n\tif(nx==1)b.x[0]=inv(a.x[0]);\n\telse\n\t{\n\t\tget_inv(a,b,nx>>1);\n\t\tfor(int i=0;i<nx;i++)tmp.x[i]=a.x[i],tmp.x[i+nx]=0;\n\t\tinit(nx<<1);\n\t\ttmp.dft(1);\n\t\tb.dft(1);\n\t\tfor(int i=0;i<len;i++)\n\t\t\ttmp.x[i]=(b.x[i]*2-tmp.x[i]*b.x[i]%MOD*b.x[i]%MOD+MOD)%MOD;\n\t\ttmp.dft(-1);\n\t\tfor(int i=0;i<nx;i++)b.x[i]=tmp.x[i],b.x[i+nx]=0;\n\t}\n}\n\nvoid work(int *val,ll *tar,int sz,int ori)\n{\n\tinit(2);\n\tfor(int i=0;i<sz;i++)\n\t{\n\t\tup[i].resize();\n\t\tdn[i].resize();\n\t\tif(i<ori)up[i].x[0]=1;\n\t\tdn[i].x[0]=1;\n\t\tdn[i].x[1]=-val[i],qm(dn[i].x[1]);\n\t}\n\tfor(int i=1;i<sz;i<<=1)\n\t{\n\t\tinit(min(i<<2,sz<<1));\n\t\tdl.resize();\n\t\tdr.resize();\n\t\tul.resize();\n\t\tur.resize();\n\t\tfor(int j=0;j+i<sz;j+=(i<<1))\n\t\t{\n\t\t\tdl.reset();\n\t\t\tdr.reset();\n\t\t\tul.reset();\n\t\t\tur.reset();\n\t\t\tfor(int k=0;k<(len>>1);k++)dl.x[k]=dn[j].x[k];\n\t\t\tfor(int k=0;k<(len>>1);k++)dr.x[k]=dn[j+i].x[k];\n\t\t\tfor(int k=0;k<(len>>1);k++)ul.x[k]=up[j].x[k];\n\t\t\tfor(int k=0;k<(len>>1);k++)ur.x[k]=up[j+i].x[k];\n\t\t\tdn[j].resize();\n\t\t\tup[j].resize();\n\t\t\tdl.dft(1);\n\t\t\tdr.dft(1);\n\t\t\tul.dft(1);\n\t\t\tur.dft(1);\n\t\t\tfor(int k=0;k<len;k++)dn[j].x[k]=dl.x[k]*dr.x[k]%MOD;\n\t\t\tfor(int k=0;k<len;k++)up[j].x[k]=(ul.x[k]*dr.x[k]+dl.x[k]*ur.x[k])%MOD;\n\t\t\tdn[j].dft(-1);\n\t\t\tup[j].dft(-1);\n\t\t}\n\t}\n\t\n\tdv.resize();\n\ttmp.resize();\n\tget_inv(dn[0],dv,len>>1);\n\t\n\tdv.dft(1);\n\tup[0].dft(1);\n\tfor(int i=0;i<len;i++)tmp.x[i]=dv.x[i]*up[0].x[i]%MOD;\n\ttmp.dft(-1);\n\t\n\tfor(int i=0;i<sz;i++)tar[i]=tmp.x[i];\n}\n\nvoid calc_ans()\n{\n\tinit(max(max(n1,m),n2));\n\tint slen=len;\n\twork(A,EA,slen,n1);\n\twork(B,EB,slen,n2);\n\tinit(slen*2);\n\tf1.resize();\n\tf2.resize();\n\tfor(int i=0;i<len>>1;i++)f1.x[i]=EA[i]*inv(fac[i])%MOD*inv(n1)%MOD,f2.x[i]=EB[i]*inv(fac[i])%MOD*inv(n2)%MOD;\n\tf1.dft(1);\n\tf2.dft(1);\n\tfor(int i=0;i<len;i++)f1.x[i]=f1.x[i]*f2.x[i]%MOD;\n\tf1.dft(-1);\n\tfor(int i=1;i<m;i++)printf(\"%lld\\n\",f1.x[i]*fac[i]%MOD);putchar('\\n');\n}\n\nvoid prework()\n{\n\tfac[0]=1;\n\tfor(int i=1;i<MX;i++)fac[i]=fac[i-1]*(ll)i%MOD;\n\tfor(int i=0;i<MX;i++)gp[i]=ksm(G,(MOD-1)>>i),gpi[i]=inv(gp[i]);\n\tfor(int w=1,i=1;w<MX;i++,w<<=1)\n\t{\n\t\twi[i][0]=1;\n\t\twii[i][0]=1;\n\t\tfor(int j=1;j<w;j++)\n\t\t{\n\t\t\twi[i][j]=wi[i][j-1]*gp[i]%MOD;\n\t\t\twii[i][j]=wii[i][j-1]*gpi[i]%MOD;\n\t\t}\n\t}\n}\n\nint main()\n{\n\tprework();\n\tscanf(\"%d%d\",&n1,&n2);\n\tfor(int i=0;i<n1;i++)A[i]=read();\n\tfor(int i=0;i<n2;i++)B[i]=read();\n\tscanf(\"%d\",&m);m++;\n\tcalc_ans();\n\treturn 0;\n}\n```",
        "postTime": 1530713890,
        "uid": 41155,
        "name": "totorato",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4705 \u3010\u73a9\u6e38\u620f\u3011"
    },
    {
        "content": "\u4f60\u8c37\u9898\u89e3\u754c\u9762aligned\u4e0d\u80fd\u7528\uff0c\u6240\u4ee5\u8fd9\u91cc\u7684\uff08\u4f1a\u6302\u7684\uff09\u516c\u5f0f\u90fd\u7528\u56fe\u7247\u4ee3\u66ff\uff0c\u89c1\u8c05\n\n~~\u611f\u89c9\u5199\u7684\u8fd8\u662f\u5f88\u8be6\u7ec6\u7684awa~~\n\n\u6765\u5168\u9762\u5199\u4e00\u4e0b\u8fd9\u9053\u9898\u7684\u6240\u6709\u63a8\u5bfc\u8fc7\u7a0b\u548c\u601d\u8003\u65b9\u5f0f\u7f62\uff08\u5305\u62ec\u90a3\u4e2a\u5947\u602a\u8f6c\u5316\u7684\u601d\u8003\u65b9\u5f0f\uff09\n\n\u9898\u610f\u5199\u7684\u633a\u6e05\u6670\u7684\uff0c\u5bf9\u4e8e\u6bcf\u4e2a$k(1\\le k\\le t)$\u6c42\n\n![](https://i.loli.net/2020/04/30/QiFXspMO5vzAZCW.jpg)\n\n\u9996\u5148\u8981\u5316\u5316\u5f0f\u5b50\uff0c\u53ef\u4ee5\u628a\u89e3\u91ca\u4e0e\u516c\u5f0f\u5bf9\u7167\u7740\u770b\n\n- \u7b2c\u4e00\u884c\uff0c\u6284\u4e0b\u5f0f\u5b50\n\n- \u7b2c\u4e8c\u884c\uff0c\u4e8c\u9879\u5f0f\u5c55\u5f00\n\n- \u7b2c\u4e09\u884c\uff0c\u5c55\u5f00\u7ec4\u5408\u6570\n\n- \u7b2c\u56db\u884c\uff0c\uff08~~\u6309\u76f4\u89c9~~\uff09\u5408\u5e76\u4e00\u4e9b\u9879\n\n- \u7b2c\u4e94\u884c\uff0c\u5f04\u6210\u5377\u79ef\u7684\u5f62\u5f0f\n\n![](https://i.loli.net/2020/04/30/euNmQWyo6UsDKvd.jpg)\n\n\u82e5\u4ee4\n\n![](https://i.loli.net/2020/04/30/jGfxMdICsJikOg3.jpg)\n\n\u5219\n\n![](https://i.loli.net/2020/04/30/aJZjwFLWyPHpfiI.jpg)\n\n\u5c31\u662f\u7528\u5377\u79ef\u8868\u793a\u539f\u5f0f\n\n\u90a3\u73b0\u5728\u5c31\u8981\u6c42$A(x),B(x)$\uff0c\u53ea\u8981\u6211\u4eec\u80fd\u6c42\u51fa\u8fd9\u4e24\u4e2a\u751f\u6210\u51fd\u6570\uff0c\u6211\u4eec\u5c31\u80fd\u5f97\u5230\u6240\u6709\u7684$ans(k)$\u4e86\n\n\u7531\u4e8e\u6c42\u6cd5\u7c7b\u4f3c\uff0c\u8fd9\u91cc\u4ec5\u7ed9\u51fa\u6c42\u89e3$A(x)$\u7684\u65b9\u6cd5\n\n\u9996\u5148\u5c31\u662f\u8003\u8651\u4ea4\u6362\u6c42\u548c\u6b21\u5e8f\u4e86\n\n![](https://i.loli.net/2020/04/30/fzgxk3LRV4ErsQ1.jpg)\n\n\u54a6\uff1f\u8c8c\u4f3c$\\sum\\limits_jx^ja_i^j=\\dfrac{1}{1-a_ix}$\u6211\u4eec\u662f\u77e5\u9053\u7684\uff0c\u4f46\u8fd9\u91cc\u591a\u4e86\u4e00\u4e2a$j!$\u600e\u4e48\u5f04\uff1f\u91cd\u65b0\u8bbe\u4e00\u4e2a$A_1(x)$\u597d\u4e86\u3002\n\n\u4ee4\n\n![](https://i.loli.net/2020/04/30/tFOaZ1yd27KBH4I.jpg)\n\n\u90a3\u4e48$[x^n]A(x)=\\dfrac{1}{n!}[x^n]A_1(x)$\n\n\u4e5f\u5c31\u662f\u6c42\u51fa$A_1(x)$\u5c31\u53ef\u4ee5\u6c42$A(x)$\u4e86\n\n\u90a3\u91cd\u65b0\u6539\u5199\u4e00\u4e0b\u4e0a\u9762\u4ea4\u6362\u6c42\u548c\u987a\u5e8f\u7684\u8fc7\u7a0b\n\n![](https://i.loli.net/2020/04/30/W38t6ZyEFwVzlna.jpg)\n\n\u4e0b\u9762\u600e\u4e48\u505a\uff1f\u76f4\u63a5\u6c42\u9006\u662f\u4e0d\u884c\u7684\uff0c\u8c8c\u4f3c\u5361\u4f4f\u4e86...\n\n\u6211\u4eec\u6765\u601d\u8003\u4e00\u4e2a\u95ee\u9898\uff0c\u600e\u4e48\u628a\u8ba8\u538c\u7684\u5206\u5f0f\u53bb\u6389\uff1f\u90a3\u5c31\u662f\u8bf4\uff0c\u6709\u4ec0\u4e48\u65b9\u6cd5\u53ef\u4ee5\u5f04\u51fa\u4e00\u4e2a\u5206\u5f0f\uff1f\n\n\u6b38\uff01\u6709\u8fd9\u4e48\u4e00\u4e2a\uff1a$\\ln'(x)=\\dfrac{1}{x}$\uff0c\u90a3\u5c31\u5f80$\\ln$\u548c\u5bfc\u6570\u4e0a\u9760\u5427\uff0c\u6bd4\u5982\u8fd9\u4e00\u4e2a\u5c1d\u8bd5\uff1a\n\n$$\n\\ln'(1-a_ix)=\\frac{1}{1-a_ix}\n$$\n\n\u8fd9\u662f\u6700\u76f4\u63a5\u7684\u5c1d\u8bd5\uff0c\u4ee3\u5230\u4e0a\u9762\u7684\u5f0f\u5b50\u91cc\u8bd5\u8bd5\uff1f\n\n![](https://i.loli.net/2020/04/30/It61iXceTbRNof4.jpg)\n\n\u770b\u8d77\u6765\u4e5f\u6ca1\u6cd5\u505a...\u8fd9\u4e2a\u5c1d\u8bd5\u4e0d\u80fd\u89e3\u51b3\u95ee\u9898\n\n\u4e0d\u8fc7\u518d\u60f3\u60f3\uff0c\u4e3a\u4ec0\u4e48\u505a\u4e0d\u4e86\uff1f\u6211\u4eec\u5176\u5b9e\u53ef\u4ee5\u60f3\u65b9\u6cd5\u628a\u5bfc\u6570\u5f04\u5230$\\sum$\u5916\u9762\u53bb\uff0c\u8fd9\u6837\u5c31\u597d\u505a\u4e86\u3002\u90a3\u600e\u4e48\u5f04\u5462\uff1f\u90a3\u5c31\u6574\u4e2a\u6c42\u5bfc\u5427...\n\n\u6ce8\u610f\uff0c\u4f7f\u7528\u4e86$[f(g(x))]'=g'(x)f'[g(x)]$\n\n$$\n\\begin{aligned}\n[\\ln(1-a_ix)]'\n&=(1-a_ix)\\ln'(1-a_ix) \\cr\n&=\\frac{-a_i}{1-a_ix}\n\\end{aligned}\n$$\n\n\u6709\u70b9\u63a5\u8fd1\u4e86...\uff0c\u5c1d\u8bd5\u628a$\\dfrac{-a_i}{1-a_ix}$\u5f04\u6210$\\dfrac{1}{1-a_ix}$\n\n\u6839\u636e\u57fa\u672c\u7684\u5c0f\u5b66\uff08\u521d\u4e2d\uff1f\uff09\u7684\u77e5\u8bc6\uff0c\u6709\n\n$$\n\\frac{1}{1-a_ix}=1-x\\frac{-a_i}{1-a_ix}\n$$\n\n\u6b38\uff0c\u53ef\u4ee5\u4e86\uff01\n\n\u90a3\u628a\u6240\u6709\u7684\u4e1c\u897f\u6574\u7406\u8d77\u6765\uff0c\u91cd\u5199\u5f0f\u5b50\uff0c\u5f97\u5230\n\n![](https://i.loli.net/2020/04/30/seOfxPG2ZWyTKhk.jpg)\n\n\u547c...\u73b0\u5728\u5c31\u53ea\u5269$\\prod\\limits_{i=1}^n(1-a_ix)$\u8981\u6c42\u4e86\n\n\u76f4\u63a5\u6309\u987a\u5e8f\u4e58\u80af\u5b9a\u662f\u4f1aT\u7684\n\n$T(n)=T(n-1)+O(n\\log n)$\n\n\u6211\u4eec\u6309\u6bcf\u6b21\u4ece\u4e2d\u95f4\u5206\u6210\u4e24\u8fb9\u5206\u6cbb\u4e0b\u53bb\u4e58\uff0c\u518d\u5408\u5e76\u8d77\u6765\n\n$T(n)=2T(\\dfrac{n}{2})+O(n\\log n)=O(n\\log^2 n)$\n\n\u90a3\u8fd9\u9898\u7ec8\u4e8e\u89e3\u51b3\u4e86...\n\n\u603b\u7ed3\uff1a\u5f97\u5230\u7684\u601d\u8003\u65b9\u5411\uff1a\u6709\u4ec0\u4e48\u65b9\u6cd5\u53ef\u4ee5\u5f04\u51fa\u4e00\u4e2a\u9898\u76ee\u8981\u6c42\u7684\u5f62\u5f0f\uff0c\u5c31\u5f80\u90a3\u4e2a\u65b9\u6cd5\u4e0a\u9760\uff08\u6bd4\u5982\u8fd9\u9898\u5c31\u662f$\\ln$\u6c42\u5bfc\u51fa\u5206\u5f0f\uff09\n\n\u4ee3\u7801\u4ec5\u4f9b\u53c2\u8003\uff0c\u4e0d\u559c\u52ff\u55b7\n\n```cpp\n#include<cstdio>\nusing namespace std;\nconst int N=265005;\n#define mod 998244353\nint a[N],b[N],f[N],g[N],M[N],L[N],A[19][N],fil[N],Inv[N],fac[N],w[N],r[N],stk[19][N];\nint n,m,Inv3,t;\ninline int Plus(int x, int y){ x+=y; return (x>=mod?x-mod:x); }\ninline int fastpow(int x, int y){ int z=1; for (; y; y>>=1,x=1ll*x*x%mod) if (y&1) z=1ll*z*x%mod; return z; }\ninline void Qiudao(int* a, int n){ for (int i=1; i<n; i++) a[i-1]=1ll*i*a[i]%mod; a[n-1]=0;}\ninline void Jifen(int* a, int n){ for (int i=n-1; i; i--) a[i]=1ll*fastpow(i,mod-2)*a[i-1]%mod; a[0]=0; }\ninline void Swap(int& a, int& b){ a^=b; b^=a; a^=b; }\ninline void NTT(int* a, int n, bool op){\n\tfor (int i=0; i<n; i++)\n\t\tif (i<fil[i]) Swap(a[i],a[fil[i]]);\n\tfor (int len=2; len<=n; len<<=1){\n\t\tint g=fastpow(op?Inv3:3,(mod-1)/len),l=len>>1,now=1,res;\n\t\tfor (int i=0; i<n; i+=len,now=1)\n\t\t\tfor (int j=i; j<i+l; j++){\n\t\t\t\tres=1ll*now*a[j+l]%mod;\n\t\t\t\ta[j+l]=Plus(a[j],mod-res);\n\t\t\t\ta[ j ]=Plus(a[j],res);\n\t\t\t\tnow=1ll*now*g%mod;\n\t\t\t}\n\t}\n}\ninline void Mutiply(int* a, int* b, int len1, int len2, int lim){\n\tint m=len1+len2,n; for (n=1; n<m; n<<=1);\n\tfor (int i=0; i<len2; i++) M[i]=b[i];\n\tfor (int i=len2; i<n; i++) M[i]=0;\n\tfor (int i=0; i<n; i++) fil[i]=(fil[i>>1]>>1)|((i&1)?(n>>1):0);\n\tNTT(a,n,0); NTT(M,n,0);\n\tfor (int i=0; i<n; i++) a[i]=1ll*a[i]*M[i]%mod;\n\tNTT(a,n,1); int Invn=fastpow(n,mod-2);\n\tfor (int i=0; i<lim; i++) a[i]=1ll*a[i]*Invn%mod;\n\tfor (int i=lim; i<n; i++) a[i]=0;\n}\ninline void Inverse(int* a, int m){\n\tint n; for (n=1; n<m; n<<=1);\n\tw[0]=fastpow(a[0],mod-2);\n\tfor (int len=2; len<=n; len<<=1){\n\t\tint l=len>>1;\n\t\tfor (int i=0; i<l; i++) r[i]=Plus(w[i],w[i]);\n\t\tMutiply(w,w,l,l,len);\n\t\tMutiply(w,a,len,len,len);\n\t\tfor (int i=0; i<len; i++) w[i]=Plus(r[i],mod-w[i]);\n\t}\n\tfor (int i=0; i<m; i++) a[i]=w[i];\n\tfor (int i=m; i<n; i++) a[i]=0;\n\tfor (int i=0; i<n; i++) w[i]=r[i]=0;\n}\ninline void Ln(int* a, int m){\n\tint n; for (n=1; n<m; n<<=1);\n\tfor (int i=0; i<m; i++) L[i]=a[i];\n\tfor (int i=m; i<n; i++) L[i]=0;\n\tQiudao(a,m); Inverse(L,m);\n\tMutiply(a,L,m-1,m,m); Jifen(a,m);\n\tfor (int i=m; i<n; i++) a[i]=0;\n}\nint solve(int l, int r, int* a, int dep){\n\tif (l==r){ stk[dep][0]=1; stk[dep][1]=mod-a[l]; return 2; }\n\tint mid=(l+r)>>1;\n\tint len1=solve(l,mid,a,dep+1);\n\tfor (int i=0; i<len1; i++) A[dep][i]=stk[dep+1][i],stk[dep+1][i]=0;\n\tint len2=solve(mid+1,r,a,dep+1);\n\tfor (int i=0; i<len2; i++) stk[dep][i]=stk[dep+1][i],stk[dep+1][i]=0;\n\tMutiply(stk[dep],A[dep],len2,len1,len1+len2);\n\tfor (int i=0; i<len1+len2; i++) A[dep][i]=0;\n\treturn len1+len2;\n}\ninline void Make(int* a, int* b, int n){\n\tint len=solve(1,n,a,0);\n\tfor (int i=0; i<t; i++) b[i]=stk[0][i];\n\tfor (int i=0; i<len; i++) stk[0][i]=0;\n\tLn(b,t); Qiudao(b,t);\n\tfor (int i=t-1; i; i--) b[i]=mod-b[i-1]; b[0]=n;\n\tfor (int i=0; i<t; i++) b[i]=1ll*b[i]*Inv[i]%mod;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor (int i=1; i<=n; i++) scanf(\"%d\",&a[i]);\n\tfor (int i=1; i<=m; i++) scanf(\"%d\",&b[i]);\n\tscanf(\"%d\",&t); t++;\n\tfac[0]=Inv[0]=1; Inv3=fastpow(3,mod-2);\n\tfor (int i=1; i<t; i++) Inv[i]=fastpow(fac[i]=1ll*fac[i-1]*i%mod,mod-2);\n\tMake(a,f,n); Make(b,g,m);\n\tMutiply(f,g,t,t,t); int res=1ll*fastpow(n,mod-2)*fastpow(m,mod-2)%mod;\n\tfor (int i=1; i<t; i++) printf(\"%d\\n\",1ll*res*f[i]%mod*fac[i]%mod);\n\treturn 0;\n}\n```\n\n~~\u4e0d\u8981\u8138\u5730\u6c42\u8d5e~~",
        "postTime": 1588080447,
        "uid": 44599,
        "name": "wishapig",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4705 \u3010\u73a9\u6e38\u620f\u3011"
    },
    {
        "content": "[\u6211\u7684\u535a\u5ba2](https://www.cnblogs.com/Memory-of-winter/p/10372741.html)\n\n**\u9898\u76ee\u5927\u610f\uff1a**\u5bf9\u4e8e\u6bcf\u4e2a$k\\in[1,t]$\uff0c\u6c42\uff1a\n$$\\dfrac{\\sum\\limits_{i=1}^n\\sum\\limits_{j=1}^m(a_i+b_j)^k}{nm}$$\n$n,m,t\\leqslant10^5$\n\n**\u9898\u89e3\uff1a**\u53d1\u73b0\u8fd9\u4e2a$nm$\u662f\u4e00\u4e2a\u5b9a\u503c\uff0c\u53ef\u4ee5\u5148\u4e0d\u8003\u8651\uff0c\u5148\u5bf9\u6bcf\u4e00\u4e2a$k$\u6765\u6c42\n$$\\begin{aligned}&\\sum\\limits_{i=1}^n\\sum\\limits_{j=1}^m(a_i+b_j)^k\\\\=&\\sum\\limits_{i=1}^n\\sum\\limits_{j=1}^m\\sum\\limits_{s=0}^k\\binom ksa_i^sb_j^{k-s}\\\\=&\\sum\\limits_{s=0}^k\\binom ks\\sum\\limits_{i=1}^na_i^s\\sum\\limits_{j=1}^mb_j^{k-s}\\\\=&\\sum\\limits_{s=0}^k\\dfrac{k!}{s!(k-s!)}\\sum\\limits_{i=1}^na_i^s\\sum\\limits_{j=1}^mb_j^{k-s}\\\\=&k!\\sum\\limits_{s=0}^k\\sum\\limits_{i=1}^n\\dfrac{a_i^s}{s!}\\sum\\limits_{j=1}^m\\dfrac{b_j^{k-s}}{(k-s)!}\\\\\\end{aligned}$$\n\u4ee4$A_k=\\sum\\limits_{i=0}^n\\dfrac{a_i^k}{k!},B_k=\\sum\\limits_{i=0}^m\\dfrac{b_i^k}{k!}$\u5f0f\u5b50\u5c31\u53d8\u6210\u4e86\n$$k!\\sum\\limits_{s=0}^kA_sB_{k-s}\\\\$$\n\u5c31\u53ef\u4ee5\u5f88\u7b80\u5355\u7684\u6c42\u51fa\u6765\u4e86\uff0c\u73b0\u5728\u7684\u95ee\u9898\u53d8\u6210\u4e86\u5982\u4f55\u6c42$A,B$\u3002\u63a5\u4e0b\u6765\u5c31\u8bb2\u6c42$A$\u7684\u65b9\u6cd5\uff0c$B$\u7684\u76f8\u540c\u3002\n\n\u4ee4$A(x)$\u4e3a$A$\u7684\u751f\u6210\u51fd\u6570\uff0c\u5373$A(x)=\\sum\\limits_{k=0}^{\\infty}\\dfrac{\\sum\\limits_{i=0}^na_i^k}{k!}x^k$\uff0c\u8fd9\u4e00\u4e2a$k!$\u4e5f\u5f88\u597d\u89e3\u51b3\uff0c\u4e0b\u9762\u5c31\u7701\u7565\u4e0d\u5199\n$$\\begin{aligned}f(x)=&\\sum\\limits_{k=0}^{\\infty}\\sum\\limits_{i=0}^na_i^kx^k\\\\=&\\sum\\limits_{i=0}^n\\sum\\limits_{k=0}^{\\infty}a_i^kx^k\\\\=&\\sum\\limits_{i=0}^n\\dfrac1{1-a_i}\\end{aligned}$$\n\u53d1\u73b0$\\ln'(x)=\\dfrac1x,\\ln'(1-ax)=\\dfrac{-a_i}{1-a_i}$\n\n\u4ee4$g(x)=\\sum\\limits_{i=0}^n\\dfrac{-a_i}{1-a_i}$\uff0c\u7136\u540e$f(x)=-g(x)x+n$\uff0c\u800c$g(x)$\u53ef\u4ee5\u6bd4\u8f83\u7b80\u5355\u7684\u6c42\u51fa\u6765\uff1a\n$$\\begin{aligned}g(x)=&\\sum\\limits_{i=0}^n\\dfrac{-a_i}{1-a_i}\\\\=&\\sum\\limits_{i=0}^n\\ln'(1-a_ix)\\\\=&\\ln'(\\prod\\limits_{i=1}^n(1-a_ix))\\end{aligned}$$\n\u4ee4$M(x)=\\prod\\limits_{i=1}^n(1-a_ix)$\uff0c\u8fd9\u53ef\u4ee5\u7528\u5206\u6cbb$FFT$\u6c42\u51fa\n$$\\begin{aligned}g(x)=&\\ln'(M(x))\\\\=&(\\int\\dfrac{M'(x)}{M(x)})'\\\\=&\\dfrac{M'(x)}{M(X)}\\end{aligned}$$\n\u7136\u540e\u628a$g(x)$\u8f6c\u6210$f(x)$\uff0c\u518d\u53d8\u6210\u6307\u6570\u578b\u751f\u6210\u51fd\u6570\u5377\u4e00\u4e0b\u5c31\u597d\u4e86\uff0c\u6ce8\u610f\u522b\u5fd8\u8bb0\u4e0a\u9762\u7701\u7565\u6389\u7684\u4e00\u4e9b\u4e1c\u897f\n\n\n\n**C++ Code\uff1a**\n\n```cpp\n#include <algorithm>\n#include <cstdio>\n#include <iostream>\n#include <vector>\n#define maxn 262144\nconst int mod = 998244353;\n\n#define mul(x, y) static_cast<long long> (x) * (y) % mod\n\nnamespace Math {\n\tinline int pw(int base, int p) {\n\t\tstatic int res;\n\t\tfor (res = 1; p; p >>= 1, base = mul(base, base)) if (p & 1) res = mul(res, base);\n\t\treturn res;\n\t}\n\tinline int inv(int x) { return pw(x, mod - 2); }\n}\ninline void reduce(int &x) { x += x >> 31 & mod; }\ninline void clear(register int *l, const int *r) {\n\tif (l >= r) return ;\n\twhile (l != r) *l++ = 0;\n}\n\nint inv[maxn], ifac[maxn], fac[maxn];\nint A[maxn], B[maxn];\nnamespace Poly {\n#define N maxn\n\tint lim, s, rev[N], Wn[N];\n\tinline void init(const int n) {\n\t\tlim = 1, s = -1; while (lim < n) lim <<= 1, ++s;\n\t\tfor (register int i = 1; i < lim; ++i) rev[i] = rev[i >> 1] >> 1 | (i & 1) << s;\n\t\tconst int t = Math::pw(3, (mod - 1) / lim);\n\t\t*Wn = 1; for (register int *i = Wn + 1; i != Wn + lim; ++i) *i = mul(*(i - 1), t);\n\t}\n\tinline void FFT(int *A, const int op = 1) {\n\t\tfor (register int i = 1; i < lim; ++i) if (i < rev[i]) std::swap(A[i], A[rev[i]]);\n\t\tfor (register int mid = 1; mid < lim; mid <<= 1) {\n\t\t\tconst int t = lim / mid >> 1;\n\t\t\tfor (register int i = 0; i < lim; i += mid << 1)\n\t\t\t\tfor (register int j = 0; j < mid; ++j) {\n\t\t\t\t\tconst int X = A[i + j], Y = mul(A[i + j + mid], Wn[t * j]);\n\t\t\t\t\treduce(A[i + j] += Y - mod), reduce(A[i + j + mid] = X - Y);\n\t\t\t\t}\n\t\t}\n\t\tif (!op) {\n\t\t\tconst int ilim = Math::inv(lim);\n\t\t\tfor (register int *i = A; i != A + lim; ++i) *i = mul(*i, ilim);\n\t\t\tstd::reverse(A + 1, A + lim);\n\t\t}\n\t}\n\n\tstd::vector<int> P1[maxn], P2[maxn];\n#define __DC_FFT(x, A) \\\n\tvoid DC_FFT##x(int rt, int l, int r) { \\\n\t\tif (l == r) { \\\n\t\t\tP##x[rt] = {1, A[l]}; \\\n\t\t\treturn ; \\\n\t\t} \\\n\t\tstatic int C[N], D[N]; \\\n\t\tconst int mid = l + r >> 1, L = rt << 1, R = rt << 1 | 1; \\\n\t\tDC_FFT##x(L, l, mid), DC_FFT##x(R, mid + 1, r); \\\n\t\tconst int n = P##x[L].size(), m = P##x[R].size(); \\\n\t\tinit(n + m); \\\n\t\tstd::copy(P##x[L].begin(), P##x[L].end(), C), clear(C + n, C + lim); \\\n\t\tstd::copy(P##x[R].begin(), P##x[R].end(), D), clear(D + m, D + lim); \\\n\t\tFFT(C), FFT(D); \\\n\t\tfor (int i = 0; i < lim; ++i) C[i] = mul(C[i], D[i]); \\\n\t\tFFT(C, 0); \\\n\t\tP##x[rt].assign(C, C + n + m - 1); \\\n\t}\n\t__DC_FFT(1, A)\n\t__DC_FFT(2, B)\n\n\tinline void DER(int *A, int *B, int n) {\n\t\tB[n - 1] = 0; for (int i = 1; i < n; ++i) B[i - 1] = mul(A[i], i);\n\t}\n\n\tvoid INV(int *A, int *B, int n) {\n\t\tif (n == 1) { *B = Math::inv(*A); return ; }\n\t\tstatic int C[N], D[N];\n\t\tconst int len = n + 1 >> 1;\n\t\tINV(A, B, len), init(len * 3);\n\t\tstd::copy(A, A + n, C), clear(C + n, C + lim);\n\t\tstd::copy(B, B + len, D), clear(D + len, D + lim);\n\t\tFFT(C), FFT(D);\n\t\tfor (int i = 0; i < lim; ++i) D[i] = (2 - mul(C[i], D[i]) + mod) * D[i] % mod;\n\t\tFFT(D, 0); std::copy(D + len, D + n, B + len);\n\t}\n\n\tvoid solve(std::vector<int> P, int *A, int t) {\n\t\tstatic int B[N], C[N];\n\t\tconst int n = P.size();\n\t\tstd::copy(P.begin(), P.end(), A); clear(A + n, A + t);\n\t\tDER(A, B, n), INV(A, C, t);\n\t\tinit(n + t);\n\t\tclear(B + n, B + lim), clear(C + t, C + lim);\n\t\tFFT(B), FFT(C);\n\t\tfor (int i = 0; i < lim; ++i) A[i] = mul(B[i], C[i]);\n\t\tFFT(A, 0);\n\t\tfor (int i = t; i; --i) reduce(A[i] = -A[i - 1]);\n\t\tA[0] = n - 1;\n\t\tfor (int i = 0; i < t; ++i) A[i] = mul(A[i], ifac[i]);\n\t}\n\tvoid TANG_Yx(int n, int m, int t) {\n\t\tDC_FFT1(1, 0, n - 1), DC_FFT2(1, 0, m - 1);\n\t\tstatic int A[N], B[N];\n\t\tsolve(P1[1], A, t), solve(P2[1], B, t);\n\t\tinit(t << 1);\n\t\tclear(A + t, A + lim), clear(B + t, B + lim);\n\t\tFFT(A), FFT(B);\n\t\tfor (int i = 0; i < lim; ++i) A[i] = mul(A[i], B[i]);\n\t\tFFT(A, 0);\n\t\tconst int nm = mul(Math::inv(n), Math::inv(m));\n\t\tfor (int i = 1; i < t; ++i) printf(\"%lld\\n\", mul(A[i], fac[i]) * nm % mod);\n\t}\n#undef N\n}\n\nint n, m, t;\nint main() {\n\tstd::ios::sync_with_stdio(false), std::cin.tie(0), std::cout.tie(0);\n\tinv[0] = inv[1] = ifac[0] = ifac[1] = fac[0] = fac[1] = 1;\n\tfor (int i = 2; i < maxn; ++i) {\n\t\tinv[i] = mul(mod - mod / i, inv[mod % i]);\n\t\tifac[i] = mul(ifac[i - 1], inv[i]);\n\t\tfac[i] = mul(fac[i - 1], i);\n\t}\n\tstd::cin >> n >> m;\n\tfor (int i = 0; i < n; ++i) std::cin >> A[i], reduce(A[i] = -A[i]);\n\tfor (int i = 0; i < m; ++i) std::cin >> B[i], reduce(B[i] = -B[i]);\n\tstd::cin >> t; ++t;\n\tPoly::TANG_Yx(n, m, t);\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1550107044,
        "uid": 22072,
        "name": "Memory_of_winter",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4705 \u3010\u73a9\u6e38\u620f\u3011"
    },
    {
        "content": "UPD\uff1aLaTeX \u9505\u4e86\n\n>   Github \u535a\u5ba2\u539f\u6587\u94fe\u63a5\uff1a[[Link\u2197]](https://longlongzhu123.github.io/sol-luogu-P4705-brief/)\n\n\u5165\u95e8\u7a0d\u8fdb\u9636\uff0c\u633a\u6709\u610f\u601d\u7684\u4e00\u9053\u9898\u3002\n\n# \u63a8\u5bfc I\n\n\u8bb0\u201c$k$ \u6b21\u4ef7\u503c\u201d\u7684\u7b54\u6848\u4e3a $c _ k$\u3002\u6839\u636e\u671f\u671b\u7684\u5b9a\u4e49\u5f97\u5230\u5f0f\u5b50\uff1a\n\n$$ c _ k = \\sum _ {x = 0} ^ {n - 1} \\sum _ {y = 0} ^ {m - 1} (a _ x + b _ y) ^ k \\cdot \\frac {1} {nm} $$\n\n\u8fdb\u884c\u63a8\u5bfc\u3002\n\n$$ \\begin {aligned} c _ k &= \\sum _ {x = 0} ^ {n - 1} \\sum _ {y = 0} ^ {m - 1} (a _ x + b _ y) ^ k \\cdot \\frac {1} {nm} \\\\ &= \\sum _ {x = 0} ^ {n - 1} \\sum _ {y = 0} ^ {m - 1} \\sum _ {i + j = k} \\binom {k} {i} a _ x ^ i b _ y ^ j \\cdot \\frac {1} {nm} \\\\ &= \\sum _ {i + j = k} \\sum _ {x = 0} ^ {n - 1} \\sum _ {y = 0} ^ {m - 1} \\binom {k} {i} a _ x ^ i b _ y ^ j \\cdot \\frac {1} {nm} \\\\ &= \\frac {1} {nm} \\sum _ {i + j = k} \\binom {k} {i} \\sum _ {x = 0} ^ {n - 1} a _ x ^ i \\sum _ {y = 0} ^ {m - 1} b _ y ^ j \\\\ &= \\frac {1} {nm} \\sum _ {i + j = k} \\frac {k!} {i! j!} \\sum _ {x = 0} ^ {n - 1} a _ x ^ i \\sum _ {y = 0} ^ {m - 1} b _ y ^ j \\\\ &= \\frac {k!} {nm} \\sum _ {i + j = k} \\frac {1} {i!} \\sum _ {x = 0} ^ {n - 1} a _ x ^ i \\frac {1} {j!} \\sum _ {y = 0} ^ {m - 1} b _ y ^ j \\\\ &= \\frac {k!} {nm} \\sum _ {i + j = k} \\left ( \\frac {1} {i!} \\sum _ {x = 0} ^ {n - 1} a _ x ^ i \\right ) \\left ( \\frac {1} {j!} \\sum _ {y = 0} ^ {m - 1} b _ y ^ j \\right ) \\\\ &= \\frac {k!} {nm} \\sum _ {i + j = k} \\left ( \\frac {1} {i!} a' _ i \\right ) \\left ( \\frac {1} {j!} b' _ j \\right ) \\end {aligned} $$\n\n\u770b\u5f97\u51fa\u8fd9\u662f\u4e00\u4e2a\u5377\u79ef\u7684\u5f62\u5f0f\u3002\u5176\u4e2d\u76f8\u4e58\u7684\u4e24\u9879\u5206\u522b\u4e3a $\\left < \\frac {1} {i!} a' _ i \\right >$ \u548c $\\left < \\frac {1} {j!} b' _ j \\right >$\u3002\uff08\u8fd9\u91cc $\\left < x \\right >$ \u8868\u793a\u5e8f\u5217\uff09\n\n\u8003\u8651\u600e\u4e48\u6c42 $\\displaystyle a' _ i = \\sum _ {x = 0} ^ {n - 1} a _ x ^ i$\u3002\n\n# \u63a8\u5bfc II\n\n\u4e0d\u59a8\u5229\u7528\u751f\u6210\u51fd\u6570\u7684\u6570\u5b66\u5de5\u5177\u3002\n\n\u5c06\u9700\u8981\u6c42\u89e3\u7684\u5e8f\u5217\u653e\u5165\u751f\u6210\u51fd\u6570\uff0c\u5e76\u5229\u7528\u5176\u6027\u8d28\u5bf9\u5f0f\u5b50\u8fdb\u884c\u53d8\u6362\uff0c\u4ece\u800c\u5f97\u5230**\u5feb\u901f\u6c42\u89e3\u7cfb\u6570**\u7684\u7b97\u6cd5\u3002\u6b64\u65f6\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528 FFT \u7b49\u7b97\u6cd5\u8fdb\u884c\u8ba1\u7b97\u3002\n\n\u8bbe $\\left < a' _ i \\right >$ \u7684\u751f\u6210\u51fd\u6570\u4e3a $A(X)$\uff0c\u90a3\u4e48\uff1a\n\n$$ \\begin {aligned} A(X) &= \\sum _ {i = 0} ^ {\\infty} a' _ i X ^ i \\\\ &= \\sum _ {i = 0} ^ {\\infty} \\sum _ {x = 0} ^ {n - 1} a _ x ^ i X ^ i \\\\ &= \\sum _ {x = 0} ^ {n - 1} \\sum _ {i = 0} ^ {\\infty} a _ x ^ i X ^ i \\\\ &= \\sum _ {x = 0} ^ {n - 1} \\frac {1} {1 - a _ x X} \\end {aligned} $$\n\n\u4e0d\u59a8\u8bb0\u4f5c $\\displaystyle A(x) = \\sum _ {i = 0} ^ {n - 1} \\frac {1} {1 - a _ i x}$\u3002\n\n**\uff08\u6700\u5173\u952e\u4e5f\u662f\u6700\u56f0\u96be\u7684\u4e00\u6b65\uff09**\u8003\u8651\uff1a\n\n$$ \\begin {aligned} \\ln' (1 - a _ i x) &= \\frac {1} {1 - a _ i x} = F \\\\ (\\ln (1 - a _ i x))' &= \\frac {-a _ i} {1 - a _ i x} = G \\end {aligned} $$\n\n\u5219 $F + x \\cdot G = 1$\u3002\u5373 $F = 1 - x \\cdot G$\u3002\n\n>   \u5bb9\u6613\u9677\u5165\u7684\u4e00\u4e2a\u8bef\u533a\uff1a\u7528 $F = \\frac {G} {-a _ i}$ \u6765\u8868\u793a $F$\u3002\n>   \n>   \u7406\u8bba\u4e0a\u8fd9\u662f\u53ef\u884c\u7684\u3002\u7136\u800c\u5c06\u5176\u4ee3\u5165\u5f0f\u5b50 $\\sum _ {i = 0} ^ {n - 1} F$ \u4e2d\uff0c\u5c31\u4f1a\u53d1\u73b0\u8fd9\u5bf9\u89e3\u9898\u6ca1\u6709\u4efb\u4f55\u5e2e\u52a9\u3002\n>   \n>   \u6b63\u786e\u7684\u65b9\u6cd5\u5e94\u8be5\u8981\u8ba9 $F$ \u548c $G$ \u4e4b\u95f4\u4e0d\u4e0e $i$ \u53d1\u751f\u4efb\u4f55\u5173\u7cfb\uff0c\u4ece\u800c\u63d0\u53d6\u56e0\u5f0f\u5b9e\u73b0 $F$ \u5230 $G$ \u7684\u8f6c\u6362\u3002\n\n$$ \\begin {aligned} A(x) &= \\sum _ {i = 0} ^ {n - 1} \\frac {1} {1 - a _ i x} \\\\ &= \\sum _ {i = 0} ^ {n - 1} \\ln' (1 - a _ i x) \\\\ &= \\sum _ {i = 0} ^ {n - 1} (1 - x \\cdot (\\ln (1 - a _ i x))') \\\\ &= \\sum _ {i = 0} ^ {n - 1} 1 - \\sum _ {i = 0} ^ {n - 1} x \\cdot (\\ln (1 - a _ i x))' \\\\ &= n - x \\sum _ {i = 0} ^ {n - 1} (\\ln (1 - a _ i x))' \\end {aligned} $$\n\n\u8003\u8651\u8ba1\u7b97 $\\displaystyle \\sum _ {i = 0} ^ {n - 1} (\\ln (1 - a _ i x))'$\u3002\n\n# \u63a8\u5bfc III\n\n\u8fd0\u7528\u5957\u8def\uff1a$\\displaystyle \\sum \\ln (\\text {xxx}) \\iff \\ln \\prod (\\text {xxx})$\u3002\u53c2\u8003**\u4ed8\u516c\u4e3b\u7684\u80cc\u5305**\u4e00\u9898\u5bf9\u8fd9\u4e2a\u65b9\u6cd5\u7684\u8fd0\u7528 [[Link\u2197]](https://longlongzhu123.github.io/sol-luogu-P4389/#%E5%B9%B2%E5%98%9B%E8%A6%81%E7%9B%B8%E4%B9%98)\u3002\n\n$$ \\begin {aligned} \\sum _ {i = 0} ^ {n - 1} (\\ln (1 - a _ i x))' &= \\left ( \\sum _ {i = 0} ^ {n - 1} \\ln (1 - a _ i x) \\right )' \\\\ &= \\left ( \\ln \\prod _ {i = 0} ^ {n - 1} (1 - a _ i x) \\right )' \\end {aligned} $$\n\n\u6709\u4e00\u4e2a\u7ecf\u5178\u7684\u5206\u6cbb\u7b97\u6cd5\u53ef\u4ee5\u89e3\u51b3 $\\prod _ {i = 0} ^ {n - 1} (1 - a _ i x)$\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u82e5 $n$ \u662f $2$ \u7684 $k$ \u6b21\u5e42\uff0c\u4ee4 $m = \\frac {n} {2}$\uff0c\u5c06\u5f0f\u5b50\u62c6\u6210 $\\prod _ {i = 0} ^ {m - 1} (1 - a _ i x)$ \u548c $\\prod _ {i = m} ^ {n - 1} (1 - a _ i x)$ \u4e24\u90e8\u5206\u9012\u5f52\u6c42\u89e3\u3002\u56de\u6eaf\u65f6\u5c06\u8fd9\u4e24\u90e8\u5206\u7528 FFT \u4e58\u8d77\u6765\u5373\u53ef\u3002\n\n# \u5f52\u7eb3\u7b97\u6cd5\u6d41\u7a0b\n\n\u6574\u7406\u4e00\u4e0b\u6211\u4eec\u9700\u8981\u505a\u4ec0\u4e48\uff1a\n\n1.  \u9012\u5f52\u6c42 $\\prod _ {i = 0} ^ {n - 1} (1 - a _ i x)$\u3002\n2.  \u591a\u9879\u5f0f Ln\uff0c\u5f97\u5230 $\\ln \\prod _ {i = 0} ^ {n - 1} (1 - a _ i x)$\u3002\n3.  \u6c42\u5bfc\uff0c\u5f97\u5230 $\\left ( \\ln \\prod _ {i = 0} ^ {n - 1} (1 - a _ i x) \\right )'$\n4.  \u7528 $F = 1 - x \\cdot G$ \u5f97\u5230 $n - x \\cdot \\left ( \\ln \\prod _ {i = 0} ^ {n - 1} (1 - a _ i x) \\right )'$\u3002\u5373\u4e3a $a _ i'$ \u7684\u751f\u6210\u51fd\u6570 $A(x)$\u3002\n5.  \u5c06\u6240\u6709 $a _ i'$ \u4e58\u4e0a $\\frac {1} {i!}$\u3002\u6c42 $a _ i'$ \u548c $b _ i'$ \u7684\u5377\u79ef\u3002\u7b54\u6848\u4e58\u4ee5 $\\frac {k!} {nm}$\u3002\n\n# \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nconst int kMaxN = 100000 * 16 + 10; // \u5f00\u8db3\u7a7a\u95f4\uff01\nconst int kMod = 998244353;\nconst int kPri = 3;\nconst int kPriInv = 332748118;\ninline LL Read() {\n  int get = getchar();\n  LL res = 0;\n  while (!isdigit(get)) get = getchar();\n  while (isdigit(get)) {\n    res = res * 10 + get - '0';\n    get = getchar();\n  }\n  return res;\n}\ninline LL Fpow(LL x, LL k) {\n  LL ans = 1;\n  for (; k; k >>= 1) {\n    if (k & 1) ans = ans * x % kMod;\n    x = x * x % kMod;\n  }\n  return ans;\n}\ninline LL Fadd(LL x, LL y) {\n  return (x += y) >= kMod ? x - kMod : x;\n}\ninline LL Fdec(LL x, LL y) {\n  return (x -= y) < 0 ? x + kMod : x;\n}\ninline void RaderSort(LL* a, int n) {\n  int j = 0;\n  for (int i = 0; i < n; ++i) {\n    if (i < j) swap(a[i], a[j]);\n    for (int l = (n >> 1); (j ^= l) < l; l >>= 1)\n      continue;\n  }\n}\ninline void Ntt(LL* a, int n, bool opt) {\n  RaderSort(a, n);\n  LL pri = opt ? kPri : kPriInv;\n  for (int len = 2; len <= n; len <<= 1) {\n    LL unit = Fpow(pri, (kMod - 1) / len);\n    for (int i = 0; i < n; i += len) {\n      LL w = 1;\n      int mid = i + (len >> 1);\n      for (int j = 0; j < (len >> 1); ++j) {\n        LL tmp = w * a[mid + j] % kMod;\n        a[mid + j] = Fdec(a[i + j], tmp);\n        a[i + j] = Fadd(a[i + j], tmp);\n        w = w * unit % kMod;\n      }\n    }\n  }\n  if (!opt) {\n    LL inv = Fpow(n, kMod - 2);\n    for (int i = 0; i < n; ++i)\n      a[i] = a[i] * inv % kMod;\n  }\n}\nLL inv_t[kMaxN];\ninline void InvIter(LL* a, LL* b, int n) {\n  int lim = (n << 1);\n  fill(inv_t, inv_t + lim, 0);\n  copy(a, a + n, inv_t);\n  Ntt(inv_t, lim, true);\n  Ntt(b, lim, true);\n  for (int i = 0; i < lim; ++i)\n    b[i] = Fdec(2, inv_t[i] * b[i] % kMod) * b[i] % kMod;\n  Ntt(b, lim, false);\n  fill(b + n, b + lim, 0);\n}\ninline void Inv(LL* a, LL* b, int n) {\n  fill(b, b + n, 0);\n  b[0] = Fpow(a[0], kMod - 2);\n  for (int len = 2; len <= n; len <<= 1)\n    InvIter(a, b, len);\n}\ninline void Deri(LL* a, int n) {\n  for (int i = 0; i < n - 1; ++i)\n    a[i] = (i + 1) * a[i + 1] % kMod;\n  a[n - 1] = 0;\n}\ninline void Inte(LL* a, int n) {\n  for (int i = n - 2; i >= 0; --i)\n    a[i + 1] = a[i] * Fpow(i + 1, kMod - 2) % kMod;\n  a[0] = 0;\n}\nLL log_t[kMaxN];\ninline void Log(LL* a, int n) {\n  int lim = (n << 1);\n  fill(log_t, log_t + lim, 0);\n  Inv(a, log_t, n);\n  Deri(a, lim);\n  fill(a + n, a + lim, 0);\n  Ntt(a, lim, true);\n  Ntt(log_t, lim, true);\n  for (int i = 0; i < lim; ++i)\n    a[i] = a[i] * log_t[i] % kMod;\n  Ntt(a, lim, false);\n  Inte(a, n);\n  fill(a + n, a + lim, 0);\n}\nLL exp_t[kMaxN], exp_a[kMaxN]; // \u603b\u8981\u8bb0\u5f97\u6e05\u7a7a\u4e34\u65f6\u6570\u7ec4\uff01\ninline void ExpIter(LL* a, LL* b, int n) {\n  int lim = (n << 1);\n  fill(exp_t, exp_t + lim, 0);\n  copy(b, b + n, exp_t);\n  Log(exp_t, n);\n  for (int i = 0; i < n; ++i)\n    exp_t[i] = Fdec(a[i], exp_t[i]);\n  Ntt(b, lim, true);\n  Ntt(exp_t, lim, true);\n  for (int i = 0; i < lim; ++i)\n    b[i] = b[i] * (exp_t[i] + 1) % kMod;\n  Ntt(b, lim, false);\n}\ninline void Exp(LL* a, LL* b, int n) {\n  fill(b, b + n, 0); // \u603b\u8981\u8bb0\u5f97\u6e05\u7a7a\u8f93\u51fa\u6570\u7ec4\uff01\n  b[0] = 1;  // a[0] = 0, b[0] = e ^ a[0] = e ^ 0 = 1.\n  for (int len = 2; len <= n; len <<= 1)\n    ExpIter(a, b, len);\n}\n// res = (1 - a_0 x) (1 - a_1 x) (1 - a_2 x) ... (1 - a_{n - 1} x)\n// res \u7684\u957f\u5ea6\u9884\u7559 4 \u500d\uff08\u4e58\u6cd5\u7559\u7a7a\u95f4\u25b3\uff09\nvoid Solve(LL* a, LL* res, int n) {\n  if (n == 1) {\n    res[0] = 1;\n    res[1] = kMod - a[0];\n    res[2] = res[3] = 0;\n  } else {\n    int mid = (n >> 1), lim = mid * 4; // lim \u5373\u4e3a\u7559\u7a7a\u95f4\n    Solve(a, res, mid);\n    Solve(a + mid, res + lim, mid);\n    Ntt(res, lim, true);\n    Ntt(res + lim, lim, true);\n    for (int i = 0; i < lim; ++i)\n      res[i] = res[i] * res[lim + i] % kMod;\n    Ntt(res, lim, false);\n    fill(res + lim, res + 2 * lim, 0);\n  }\n}\nint n, m, t, lim;\nLL a0[kMaxN], b0[kMaxN];\nLL a[kMaxN], b[kMaxN];\nLL fac[kMaxN];\nvoid Calc(LL* a0, LL* a, int lim, int n) {\n  Solve(a0, a, lim);\n  Log(a, lim);\n  Deri(a, lim);\n  for (int i = lim - 1; i >= 1; --i)\n    a[i] = kMod - a[i - 1];\n  a[0] = n;\n  for (int i = 0; i < lim; ++i)\n    a[i] = a[i] * Fpow(fac[i], kMod - 2) % kMod;\n}\nint main() {\n  scanf(\"%d %d\", &n, &m);\n  for (int i = 0; i < n; ++i)\n    scanf(\"%lld\", &a0[i]);\n  for (int i = 0; i < m; ++i)\n    scanf(\"%lld\", &b0[i]);\n  scanf(\"%d\", &t);\n  int maxn = max(max(n, m), t) + 10;\n  lim = 1;\n  while (lim < maxn) lim <<= 1;\n  fac[0] = 1;\n  for (int i = 1; i < lim; ++i)\n    fac[i] = fac[i - 1] * i % kMod;\n  Calc(a0, a, lim, n);\n  Calc(b0, b, lim, m);\n  Ntt(a, (lim << 1), true); // \u7559\u7a7a\u95f4\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\n  Ntt(b, (lim << 1), true);\n  for (int i = 0; i < (lim << 1); ++i)\n    a[i] = a[i] * b[i] % kMod;\n  Ntt(a, (lim << 1), false);\n  for (int i = 1; i <= t; ++i)\n    printf(\"%lld\\n\", a[i] * Fpow(1ll * n * m % kMod, kMod - 2) % kMod * fac[i] % kMod);\n  // \u8bf7\u6ce8\u610f\u8fd9\u4e2a 1ll * n * m\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\n  // \u7c7b\u578b\u5f3a\u5236\u8f6c\u6362\uff01\uff01\uff01\uff01\uff01\n  return 0;\n}\n```\n",
        "postTime": 1585811685,
        "uid": 57525,
        "name": "longlongzhu123",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4705 \u3010\u73a9\u6e38\u620f\u3011"
    },
    {
        "content": "\u8fd9\u9898\u662f\u771f\u7684\u795e\u4ed9\u554a...\u5c45\u7136\u7528\u7684 stl \u6765\u5361\u5e38\uff1f\n\n\u8bdd\u8bf4 998244353 \u771f\u7684\u53ef\u4ee5\u4e00\u773c NTT \uff1f\n\n# noteskey\n\n\u6240\u4ee5\u8bf4\u53ea\u8981\u63a8\u67ff\u5b50\u5c31\u597d\u4e86\u4f46\u662f\u6709\u7684\u5730\u65b9\u7684\u63a8\u5bfc\u6839\u672c\u5c31\u60f3\u4e0d\u5230...\n\n\u6211\u4eec\u4ee4\u7b2c t \u4e2a\u7b54\u6848\u4e3a $ANS_t\\over nm$ \uff0c\u9664\u53bb nm \u5176\u5b9e\u5c31\u662f\u7b97\u671f\u671b\u65f6\u8981\u9664\u53bb\u7684\u65b9\u6848\u6570\n\n\u90a3\u4e48\u6709\uff1a\n\n$$\\begin{aligned}{}ANS_t=&\\sum_{i=1}^{n} \\sum_{j=1}^m (a_i+b_j)^t \\\\=&\\sum_{i=1}^{n}\\sum_{j=1}^{m}\\sum_{k=0}^{t} \\begin{pmatrix} t\\\\k \\end{pmatrix} a_i^{k}b_{j}^{t-k}  \\\\=&\\sum_{k=0}^{t} \\begin{pmatrix} t\\\\k \\end{pmatrix} \\sum_{i=1}^{n}a_i^{k} \\sum_{j=1}^{m}  b_{j}^{t-k} \\\\=& \\sum_{k=0}^{t} \\begin{pmatrix} t\\\\k \\end{pmatrix}  \\Big( \\sum_{i=1}^{n}a_i^{k} \\Big) \\Big(\\sum_{j=1}^{m}  b_{j}^{t-k} \\Big) \\\\=&\\sum_{k=0}^{t} t! \\Big({ \\sum_{i=1}^{n}a_i^{k}\\over k! } \\Big) \\Big( {\\sum_{j=1}^{m}  b_{j}^{t-k} \\over (t-k)!} \\Big)                     \\end{aligned}$$\n\n\u90a3\u4e48\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u5c31\u662f\u5377\u79ef\u7684\u5f62\u5f0f\u4e86\uff0c\u4e8e\u662f\u6211\u4eec\u7684\u4efb\u52a1\u5c31\u662f\u5feb\u901f\u7b97\u51fa\u540e\u9762\u4e24\u4e2a\u8868\u8fbe\u5f0f\u6240\u5bf9\u5e94\u7684\u7684\u591a\u9879\u5f0f\n\n\u6211\u4eec\u8bbe\uff1a\n\n$$\\begin{aligned} f(k)=\\sum_{i=1}^n a_i ^{k} \\\\ g(k)=\\sum_{i=1}^{m}b_{i}^{k} \\end{aligned}$$\n\n\u90a3\u4e48\u6211\u4eec\u53ea\u8981\u6c42\u51fa $f(1...t) ,g(1...t)$ \u5373\u53ef\n\n\u4f46\u662f\u6c42\u51fa\u6765\u6ca1\u6709\u8fd9\u4e48\u7b80\u5355...\n\n\u6211\u4eec\u8003\u8651\u5148\u6c42\u51fa\uff1a\n\n$$f_j(x)=\\sum_{i=1}^{k}a_j^{i}$$\n\n\u7136\u540e\u6211\u4eec\u4ee4\uff1a\n\n$$F(x)= \\sum_{i=1}^{n} f_{i}(x)$$\n\n\u90a3\u4e48 $F(x)$ \u7684\u7b2c k \u9879\u5c31\u8868\u793a\u4e86\n\n$$\\sum_{i=1}^{i} a_{i}^{k} x^k$$\n\n\u5373\uff1a\n\n$$[x^{k}]F(x)=\\sum_{i=1}^{i} a_{i}^{k}$$\n\n\u90a3\u4e48\u6211\u4eec\u73b0\u5728\u53d1\u73b0\u8981\u6c42\u51fa $f_{j=1...n}(x)$ \uff0c\u4f46\u662f\u6ca1\u6709\u4ec0\u4e48\u9ad8\u6548\u7684\u529e\u6cd5\u80fd\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\n\n\u4e8e\u662f\u6211\u4eec\u628a $f_{j}(x)$ \u4e2d\u7684\u4e0a\u9650 k \u6539\u6389\uff0c\u53d8\u6210 $\\infty$ \uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u7528\u751f\u6210\u51fd\u6570\u6765\u89e3\u51b3\u4e86\uff1a\n\n$$f_{j}(x)={1\\over 1- a_i x} $$\n\n\u7136\u540e\u5c31\u662f\u628a\u8fd9\u4e9b $f_j(x)$ \u52a0\u8d77\u6765\u4e86\uff1a\n\n$$F(x)={1\\over 1-a_1x} +{1\\over 1-a_2x} + ...+{1\\over 1-a_nx}$$\n\n\u6700\u540e\u5c31\u662f\u600e\u4e48\u5408\u5e76\u8fd9\u4e9b $f_j(x)$ \u7684\u95ee\u9898\u4e86\uff0c\u6211\u4eec\u53d1\u73b0\uff1a \n\n$$ln(1-a_ix)'={-a_i\\over 1-a_ix}$$\n\n\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u548c\u6211\u4eec\u8981\u6c42\u7684\u4e1c\u897f\u86ee\u50cf\u7684\uff0c\u90a3\u4e48\u8fd9\u91cc\u53c8\u6709\uff1a\n\n$$\\begin{aligned}G(x)=&\\sum_{i=1}^{n} ln(1-a_ix)' \\\\ F(x)=&-x\u00b7G(x)+n                         \\end{aligned}$$\n\n\u90a3\u4e48\u6211\u4eec\u7684\u4efb\u52a1\u5c31\u5df2\u7ecf\u662f\u6c42\u51fa G(x) \u4e86\n\n$$G(x)=\\sum_{i=1}^{n} ln(1-a_ix)'= ln(\\prod_{i=1}^n (1-a_ix))'$$\n\n\u7136\u540e\u6211\u4eec\u5c31\u8981\u5728\u4f18\u79c0\u7684\u65f6\u95f4\u5185\u6c42\u51fa$\\prod_{i=1}^n (1-a_ix)$ \uff0c\u7136\u540e\u53d6\u4e2a Ln \u518d\u6c42\u4e2a Inv \uff0c\u53f3\u79fb\u4e00\u4f4d\u8ba9\u6700\u4f4e\u9879\u4e3a n \uff0c $F(x)$ \u5c31\u6784\u9020\u597d\u4e86\n\n\u81f3\u4e8e\u5bf9 b \u6570\u7ec4\u4e5f\u662f\u540c\u6837\u7684\u6c42\u6cd5\uff0c\u4e24\u4e2a\u8981\u6c42\u7684\u591a\u9879\u5f0f\u6c42\u51fa\u6765\u540e\uff0c\u6211\u4eec\u8fd8\u8981\u8ba9\u4e24\u4e2a\u591a\u9879\u5f0f\u9664\u53bb\u5bf9\u5e94\u7684\u9636\u4e58\uff0c\u7136\u540e\u518d\u53bb\u5377\u79ef\n\n\u5377\u5b8c\u79ef\u540e\u4e5f\u548c\u6700\u5f00\u59cb\u7684\u5f0f\u5b50\u4e00\u6837\uff0c\u7b2c t \u9879\u4e58\u4e0a t! \uff0c\u7136\u540e\u522b\u5fd8\u4e86\u6211\u4eec\u8fd8\u8981\u9664\u53bb nm \u624d\u662f\u6700\u7ec8\u7684\u7b54\u6848...\n\n\u6700\u540e\u5c31\u662f\u987a\u5e8f\u8f93\u51fa\u5c31\u597d\u4e86\n\n\n\n\n# code\n\u8fd9\u6ca1\u6551\u4e86\u7684\u538b\u884c\u3010\u96fe\n\n\n```cpp\n//by Judge\n#include<bits/stdc++.h>\n#define Rg register\n#define fp(i,a,b) for(Rg int i=(a),I=(b)+1;i<I;++i)\n#define fd(i,a,b) for(Rg int i=(a),I=(b)-1;i>I;--i)\n#define ll long long\nusing namespace std;\nconst int mod=998244353;\nconst int iG=332748118;\nconst int M=524288+3;\ntypedef int arr[M];\n#ifndef Judge\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\n#endif\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline int inc(int x,int y){return (x+y)%mod;}\ninline int mul(int x,int y){return 1ll*x*y%mod;}\ninline int dec(int x,int y){return (x-y+mod)%mod;}\ninline int read(){ int x=0,f=1; char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n\tfor(;isdigit(c);c=getchar()) x=x*10+c-'0'; return x*f;\n} char sr[1<<21],z[20];int CCF=-1,Z;\ninline void Ot(){fwrite(sr,1,CCF+1,stdout),CCF=-1;}\ninline void print(int x,char chr='\\n'){\n\tif(CCF>1<<20)Ot();if(x<0)sr[++CCF]=45,x=-x;\n\twhile(z[++Z]=x%10+48,x/=10);\n\twhile(sr[++CCF]=z[Z],--Z);sr[++CCF]=chr;\n} int n,m,t,qq,rev,d,limit;\narr a,b,f,g,fac,ifac,lg,r[20],D[21],G[2];\ninline int qpow(Rg int x,Rg int p=mod-2,Rg int s=1){\n\tfor(;p;p>>=1,x=mul(x,x)) if(p&1) s=mul(s,x); return s;\n}\ninline void prep(int n=262143){ for(limit=1;limit<=n;limit<<=1);\n\tfac[0]=fac[1]=1; fp(i,2,limit) fac[i]=mul(fac[i-1],i);\n\tfp(d,1,19){ lg[1<<d]=d; fp(i,0,(1<<d)-1)\n\t\tr[d][i]=(r[d][i>>1]>>1)|((i&1)<<(d-1));\n\t}\n\tfor(Rg int t=(mod-1)>>1,i=1,x,y;i<limit;i<<=1,t>>=1){\n\t\tx=qpow(3,t),y=qpow(iG,t),G[0][i]=G[1][i]=1;\n\t\tfp(k,1,i-1) G[1][i+k]=mul(G[1][i+k-1],x);\n\t\tfp(k,1,i-1) G[0][i+k]=mul(G[0][i+k-1],y);\n\t}\n}\ninline void init(int n){\n\tfor(limit=1;limit<n;limit<<=1); d=lg[limit];\n}\ninline void NTT(int* a,int tp){\n\tfp(i,0,limit-1) if(i<r[d][i]) swap(a[i],a[r[d][i]]);\n\tfor(Rg int mid=1,I=2;mid<limit;mid<<=1,I<<=1)\n\t\tfor(Rg int j=0,x,y;j<limit;j+=I) fp(k,0,mid-1)\n\t\t\tx=a[j+k],y=mul(a[j+k+mid],G[tp][mid+k]),\n\t\t\ta[j+k]=inc(x,y),a[j+k+mid]=dec(x,y);\n\tif(tp) return ; int inv=qpow(limit);\n\tfp(i,0,limit-1) a[i]=mul(a[i],inv);\n}\ninline void Mul(int* a,int* b,int* c,int n){\n\tstatic arr A,B; fp(i,0,n-1) A[i]=a[i],B[i]=b[i];\n\tfill(A+n,A+limit,0),fill(B+n,B+limit,0),NTT(A,1),NTT(B,1);\n\tfp(i,0,limit-1) A[i]=mul(A[i],B[i]); NTT(A,0),copy(A,A+limit,c);\n}\nvoid Inv(int* a,int* b,int n){\n\tif(n==1) return b[0]=qpow(a[0]),void();\n\tInv(a,b,n>>1),init(n<<1); static arr c,d;\n\tfp(i,0,n-1) c[i]=a[i],d[i]=b[i];\n\tfp(i,n,limit-1) c[i]=d[i]=0; NTT(c,1),NTT(d,1);\n\tfp(i,0,limit-1) c[i]=mul(c[i],mul(d[i],d[i])); NTT(c,0);\n\tfp(i,0,n-1) b[i]=dec(inc(b[i],b[i]),c[i]);\n}\ninline void Derv(int* a,int* b,int n){\n\tfp(i,1,n-1) b[i-1]=mul(a[i],i); b[n-1]=0;\n}\ninline void Ln(int* a,int* b,int n){ static arr c,d;\n\tmemset(c,0,(n+1)<<2),memset(d,0,(n+1)<<2);\n\tDerv(a,c,n),Inv(a,d,n),init(n<<1);\n\tMul(c,d,b,n),fill(b+n,b+limit,0);\n}\ninline void solv(int* a,int d,int l,int r){\n\tif(l==r) return D[d][0]=1,D[d][1]=mod-a[l],void(); static arr A,B;\n\tint mid=(l+r)>>1; solv(a,d,l,mid),solv(a,d+1,mid+1,r),init(r-l+2);\n\tfp(i,0,mid-l+1) A[i]=D[d][i]; fp(i,0,r-mid) B[i]=D[d+1][i];\n\tfill(A+mid-l+2,A+limit,0),fill(B+r-mid+1,B+limit,0);\n\tMul(A,B,D[d],r-l+1),fill(D[d]+r-l+2,D[d]+limit,0);\n}\nint main(){ n=read(),m=read(),rev=qpow(mul(n,m)),prep();\n\tfp(i,1,n) a[i]=read(); fp(i,1,m) b[i]=read();\n\tsolv(a,1,1,n),copy(D[1],D[1]+n+1,f);\n\tsolv(b,1,1,m),copy(D[1],D[1]+m+1,g);\n\tt=read(),qq=max(max(n,m),t); init(qq+1),qq=limit;\n\tLn(f,f+1,qq),Ln(g,g+1,qq),f[0]=n,g[0]=m;\n\tfp(i,1,qq-1) f[i]=dec(mod,f[i]),g[i]=dec(mod,g[i]);\n\tfac[0]=ifac[0]=ifac[1]=1; fp(i,1,qq-1) fac[i]=mul(fac[i-1],i);\n\tfp(i,2,qq-1) ifac[i]=mul(mod-mod/i,ifac[mod%i]);\n\tfp(i,1,qq-1) ifac[i]=mul(ifac[i],ifac[i-1]);\n\tfp(i,0,qq-1) f[i]=mul(f[i],ifac[i]),g[i]=mul(g[i],ifac[i]);\n\tfp(i,qq,qq<<1) f[i]=g[i]=0; init(qq<<1),NTT(f,1),NTT(g,1);\n\tfp(i,0,limit-1) f[i]=mul(f[i],g[i]); NTT(f,0);\n\tfp(i,1,t) print(mul(f[i],mul(fac[i],rev))); return Ot(),0;\n}\n```\n",
        "postTime": 1555894433,
        "uid": 38576,
        "name": "J\u03bcdge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4705 \u3010\u73a9\u6e38\u620f\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u4e2a\u5e38\u6570\u662f\u522b\u4eba $3$ \u500d\u4f46\u662f\u80fd\u8fc7\u7684\u601d\u8def\u2026\u2026\n\n\u6ca1\u5173\u7cfb\uff0c\u601d\u8def\u8d85\u7ea7\u597d\u60f3\uff0c\u5c31\u662f\u4ee3\u7801\u957f\u4e86\u70b9\u3002 ~~\u63e1\u77404K\u7684\u4ee3\u7801\u7206\u86cb~~\n\n\u9996\u5148\u5217\u51fa\u5f0f\u5b50\uff1a\n\n$$ans_t\\times nm=\\sum_{i=1}^{n}\\sum_{j=1}^{m}(a_i+b_j)^t$$\n\n\u7531\u4e8c\u9879\u5f0f\u5b9a\u7406\uff1a\n\n$$ans_t\\times nm=\\sum_{k=0}^{t}C_t^k\\sum_{i=1}^{n}a_i^k\\sum_{j=1}^{m}b^{t-k}$$\n\n\u7ee7\u7eed\u63a8\u5f0f\u5b50\uff1a\n\n$$ans_t\\times nm=\\sum_{k=0}^{t}\\frac {t!}{k!(t-k)!}\\sum_{i=1}^{n}a_i^k\\sum_{j=1}^{m}b^{t-k}$$\n\n$$ans_t\\times nm=t!\\sum_{k=0}^{t}(\\sum_{i=1}^{n}\\frac {a_i^k}{k!})(\\sum_{j=1}^{m}\\frac {b^{t-k}}{(t-k)!})$$\n\n\u8fd9\u662f\u6211\u4eec\u90fd\u559c\u6b22\u770b\u5230\u7684\u5377\u79ef\u5f62\u5f0f\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u95ee\u9898\u8f6c\u5316\u6210 $f(k)=\\sum_{i=1}^{n}a_i^k$\uff0c\u5feb\u901f\u6c42\u51fa $f(1),f(2),...,f(t)$\n\n\u6211\u4eec\u6784\u9020\u751f\u6210\u51fd\u6570 $\\Large\\frac {1}{1-a_i}$\uff0c\u4e5f\u5c31\u662f $1+a_ix+a_i^2x^2+...$\n\n\u73b0\u5728\u6211\u4eec\u6c42\u7684\u662f $\\Large\\frac {1}{1-a_1}+\\Large\\frac {1}{1-a_2}+...+\\Large\\frac {1}{1-a_n}$\n\n\u7136\u540e\u6211\u5c31\u4e0d\u4f1a\u4ec0\u4e48\u9ad8\u7aef\u7684\u5bf9\u6570\u51fd\u6570\u4e86\u2026\u2026\n\n\u8fd9\u65f6\u5019\u6211\u4eec\u7528\u5c0f\u5b66\u7684\u901a\u5206\u4e86\uff01\n\n$\\Large\\frac{P_1(x)}{Q_1(x)}+\\Large\\frac{P_2(x)}{Q_2(x)}=\\Large\\frac{P_1(x)*Q_2(x)+P_2(x)*Q_1(x)}{Q_1(x)*Q_2(x)}$\n\n\u5f53\u7136\u663e\u7136\u4e0d\u80fd\u8fd9\u4e48\u76f4\u63a5\u5408\u5e76\u554a\u2026\u2026\u4e0d\u7136\u65f6\u95f4\u590d\u6742\u5ea6\u53d8\u6210\u4e86 $O(n^2\\log n)$\n\n\u6211\u4eec\u53d1\u73b0\u5f00\u59cb\u65f6\u5206\u5b50\u662f\u5e38\u6570\uff0c\u5206\u6bcd\u662f\u4e00\u6b21\u5f0f\uff0c\u90a3\u4e48\u53ef\u4ee5\u501f\u7528\u5206\u6cbb\u7684\u601d\u60f3\uff0c\u5c06\u5de6\u533a\u95f4\u548c\u53f3\u533a\u95f4\u5408\u5e76\uff01\n\n\u56e0\u4e3a\u4e00\u6b21\u5408\u5e76\u9700\u8981\u4e09\u6b21 $NTT$\uff0c\u6bcf\u6b21 $NTT$ \u7684\u6700\u9ad8\u6b21\u4e0d\u8d85\u8fc7 $len_{l,r}\\times 2$\uff0c\u6240\u4ee5 $T(n)=2\\times (\\frac n2)+n\\log n$\uff0c\u7531\u4e3b\u5b9a\u7406\u5f97\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log^2 n)$\n\n\u5206\u6cbb\u5b8c\u4e86\u4ee5\u540e\u5bf9\u5206\u6bcd\u6c42\u4e2a\u9006\uff0c\u4e0e\u5206\u5b50\u5377\u8d77\u6765\u5c31\u53ef\u4ee5\u5f97\u5230 $f(1),f(2),...,f(t)$ \u4e86\uff01\n\n\u6700\u540e\u8fd8\u8981 $NTT$ \u4e00\u6b21\u3002\u5b9e\u9645\u4e0a\u8ba1\u7b97\u5e38\u6570\u7684\u8bdd\uff0c\u65f6\u95f4\u5e94\u8be5\u662f $2\\times 3\\times 200000\\log^2 200000$\uff0c\u6240\u4ee5\u5e38\u6570\u5de8\u5927\uff0c\u5efa\u8bae\u62ff\u4e00\u4e2a\u7a0d\u5fae\u5feb\u4e00\u4e9b\u7684 $NTT$ \u677f\u5b50\u3002\u3002\u3002\n\n~~\u4e00\u4e0d\u5c0f\u5fc3\u5c31\u5199\u4e86175\u884c~~\n\n$Code\\ Below:$\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn=400000+10;\nconst int maxT=100001;\nconst int mod=998244353;\nint n,m,T,a[maxn],b[maxn],f[maxn],fac[maxn],inv[maxn],r[maxn],G[40][2];\nvector<int> P[maxn],Q[maxn];\n\ninline int read(){\n    register int x=0,f=1;char ch=getchar();\n    while(!isdigit(ch)){if(ch=='-')f=-1;ch=getchar();}\n    while(isdigit(ch)){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();}\n    return (f==1)?x:-x;\n}\n\ninline int add(int x,int y){\n\tx+=y;x>=mod?x-=mod:0;\n\treturn x;\n}\n\ninline int sub(int x,int y){\n\tx-=y;x<0?x+=mod:0;\n\treturn x;\n}\n\ninline int mul(int x,int y){\n\tx=1ll*x*y%mod;\n\treturn x;\n}\n\ninline void calcrev(int lim){\n\tfor(int i=0;i<lim;i++) r[i]=(r[i>>1]>>1)|((i&1)?(lim>>1):0);\n}\n\ninline int fpow(int a,int b){\n\tint ret=1;\n\tfor(;b;b>>=1,a=mul(a,a))\n\t\tif(b&1) ret=mul(ret,a);\n\treturn ret;\n}\n\ninline void Gpre(){\n\tfor(int len=1,l=0;len<=mod;len<<=1,l++){\n\t\tG[l][0]=fpow(3,(mod-1)/len);\n\t\tG[l][1]=fpow(G[l][0],mod-2);\n\t}\n}\n\ninline void NTT(int *f,int n,int op){\n\tfor(int i=0;i<n;i++)\n\t\tif(i<r[i]) swap(f[i],f[r[i]]);\n\tint buf,tmp,x,y;\n\tfor(int len=1,l=1;len<n;len<<=1,l++){\n\t\ttmp=(op==1)?G[l][0]:G[l][1];\n\t\tfor(int i=0;i<n;i+=len<<1){\n\t\t\tbuf=1;\n\t\t\tfor(int j=0;j<len;j++){\n\t\t\t\tx=f[i+j];y=mul(buf,f[i+j+len]);\n\t\t\t\tf[i+j]=add(x,y);f[i+j+len]=sub(x,y);\n\t\t\t\tbuf=mul(buf,tmp);\n\t\t\t}\n\t\t}\n\t}\n\tif(op==1) return ;\n\tint inv=fpow(n,mod-2);\n\tfor(int i=0;i<n;i++) f[i]=mul(f[i],inv);\n}\n\ninline void Mul(int *A,int *B,int *C,int n,int m){\n\tint lim;\n\tfor(lim=1;lim<(n+m);lim<<=1);\n\tcalcrev(lim);\n\tNTT(A,lim,1);NTT(B,lim,1);\n\tfor(int i=0;i<lim;i++) C[i]=mul(A[i],B[i]);\n\tNTT(C,lim,-1);\n}\n\ninline void Clear(int *A,int *B,int *C,int *D,int n){\n\tint lim=1;\n\tfor(lim=1;lim<(n<<1);lim<<=1);\n\tfor(int i=0;i<lim;i++) A[i]=B[i]=C[i]=0;\n\tfor(int i=n;i<lim;i++) D[i]=0;\n}\n\ninline void Clear(int *A,int *B,int *C,int n){\n\tint lim;\n\tfor(lim=1;lim<n;lim<<=1);\n\tfor(int i=0;i<lim;i++) A[i]=B[i]=C[i]=0;\n}\n\ninline void Inv(int *a,int *b,int n){\n\tb[0]=fpow(a[0],mod-2);\n\tstatic int A[maxn],B[maxn],C[maxn],len,lim;\n\tfor(len=1;len<(n<<1);len<<=1){\n\t\tlim=len<<1;\n\t\tfor(int i=0;i<len;i++) A[i]=a[i],B[i]=b[i];\n\t\tcalcrev(lim);\n\t\tNTT(A,lim,1);NTT(B,lim,1);\n\t\tfor(int i=0;i<lim;i++) C[i]=mul(sub(2,mul(A[i],B[i])),B[i]);\n\t\tNTT(C,lim,-1);\n\t\tfor(int i=0;i<len;i++) b[i]=C[i];\n\t}\n\tClear(A,B,C,b,n);\n}\n\ninline void solve(int *a,int l,int r,int x){\n\tif(l==r){\n\t\tP[x].push_back(1);\n\t\tQ[x].push_back(1);\n\t\tQ[x].push_back(mod-a[l]);\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1,n,m;\n\tstatic int A[maxn],B[maxn],C[maxn],D[maxn];\n\tsolve(a,l,mid,x<<1);solve(a,mid+1,r,x<<1|1);\n\tn=Q[x<<1].size();m=Q[x<<1|1].size();\n\tfor(int i=0;i<n;i++) A[i]=Q[x<<1][i];\n\tfor(int i=0;i<m;i++) B[i]=Q[x<<1|1][i];\n\tMul(A,B,C,n,m);\n\tfor(int i=0;i<n+m-1;i++) Q[x].push_back(C[i]);\n\tClear(A,B,C,n+m);\n\tn=P[x<<1].size();m=Q[x<<1|1].size();\n\tfor(int i=0;i<n;i++) A[i]=P[x<<1][i];\n\tfor(int i=0;i<m;i++) B[i]=Q[x<<1|1][i];\n\tMul(A,B,C,n,m);\n\tfor(int i=0;i<n+m-1;i++) D[i]=add(D[i],C[i]);\n\tClear(A,B,C,n+m);\n\tn=P[x<<1|1].size();m=Q[x<<1].size();\n\tfor(int i=0;i<n;i++) A[i]=P[x<<1|1][i];\n\tfor(int i=0;i<m;i++) B[i]=Q[x<<1][i];\n\tMul(A,B,C,n,m);\n\tfor(int i=0;i<n+m-1;i++) D[i]=add(D[i],C[i]);\n\tClear(A,B,C,n+m);\n\tfor(int i=0;i<n+m-1;i++) P[x].push_back(D[i]);\n\tClear(D,D,D,n+m);\n\tP[x<<1].clear();Q[x<<1].clear();\n\tP[x<<1|1].clear();Q[x<<1|1].clear();\n}\n\ninline void calc(int *a){\n\tint n=P[1].size(),m=Q[1].size();\n\tstatic int A[maxn],B[maxn],C[maxn];\n\tfor(int i=0;i<m;i++) A[i]=Q[1][i];\n\tInv(A,B,maxT);\n\tfor(int i=0;i<n;i++) A[i]=P[1][i];\n\tfor(int i=n;i<maxT;i++) A[i]=0;\n\tMul(A,B,C,n,maxT);\n\tfor(int i=0;i<maxT;i++) a[i]=C[i];\n\tClear(A,B,C,n+maxT);\n\tP[1].clear();Q[1].clear();\n}\n\nint main()\n{\n\tGpre();\n\tn=read(),m=read();\n\tfor(int i=1;i<=n;i++) a[i]=read();\n\tfor(int i=1;i<=m;i++) b[i]=read();\n\tfac[0]=fac[1]=inv[0]=inv[1]=1;\n\tfor(int i=2;i<maxT;i++) fac[i]=mul(fac[i-1],i);\n\tfor(int i=2;i<maxT;i++) inv[i]=mul(mod-mod/i,inv[mod%i]);\n\tfor(int i=2;i<maxT;i++) inv[i]=mul(inv[i],inv[i-1]);\n\tstatic int A[maxn],B[maxn],C[maxn];\n\tsolve(a,1,n,1);calc(A);\n\tsolve(b,1,m,1);calc(B);\n\tfor(int i=0;i<maxT;i++) A[i]=mul(A[i],inv[i]);\n\tfor(int i=0;i<maxT;i++) B[i]=mul(B[i],inv[i]);\n\tMul(A,B,C,maxT,maxT);\n\tint invnm=fpow(mul(n,m),mod-2);\n\tfor(int i=1;i<maxT;i++) f[i]=mul(fac[i],mul(C[i],invnm));\n\tClear(A,B,C,maxT<<1);\n\tT=read();\n\tfor(int i=1;i<=T;i++) printf(\"%d\\n\",f[i]);\n    return 0;\n}\n```",
        "postTime": 1549506989,
        "uid": 35069,
        "name": "Owen_codeisking",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4705 \u3010\u73a9\u6e38\u620f\u3011"
    },
    {
        "content": "\u5148\u5316\u7b80\u7b54\u6848\u7684\u5f0f\u5b50\uff1a\n$$\nans_k=\\frac{1}{nm}\\sum_{i=1}^n\\sum_{j=1}^m(a_i+b_j)^k \n\t\n\t=\\frac{1}{nm}\\sum_{i=1}^n\\sum_{j=1}^m\\sum_{l=0}^k\\binom{k}{l}a_i^lb_j^{k-l} \n\t\n\t=\\frac{k!}{nm}\\sum_{l=0}^k\\left (\\sum_{i=1}^n\\frac{a_i^l}{l!}\\right )\\left (\\sum_{j=1}^m\\frac{b_j^{k-l}}{(k-l)!} \\right )\n$$\n\u53d1\u73b0\u662f\u5377\u79ef\u7684\u5f62\u5f0f\uff0c\u90a3\u4e48\u53ea\u8981\u80fd\u5feb\u901f\u8ba1\u7b97 $s_k=\\sum\\limits_{i=1}^n a_i^k$\uff0c\u7136\u540e\u8fdb\u884c\u5377\u79ef\u8ba1\u7b97\u7b54\u6848\u5373\u53ef\u3002\n\n\u6784\u9020\u751f\u6210\u51fd\u6570 $f(x)=\\sum\\limits_{i \\geqslant 0} s_ix^i$\uff0c\u8fdb\u884c\u5316\u7b80\uff1a\n$$\nf(x)=\\sum_{i \\geqslant 0} s_ix^i =\\sum_{i \\geqslant 0} \\sum_{j=0}^{n-1} a_j^ix^i \t=\\sum_{j=0}^{n-1}\\frac{1}{1-a_jx}\n$$\n\u6ce8\u610f\u5230\uff1a\n$$\n{(\\ln (1-a_ix))}'= \\frac{-a_i}{1-a_ix}\n$$\n\u4ee3\u5165\u5f97\uff1a\n$$\nf(x)=\\sum_{i=0}^{n-1}\\frac{1}{1-a_ix} \n\t\n\t=\\sum_{i=0}^{n-1}1-x{(\\ln (1-a_ix))}' \n\t\n\t=n-x{\\left (\\sum_{i=0}^{n-1}\\ln (1-a_ix)\\right )}' \n\t\n\t=n-x\\left (\\ln\\prod_{i=0}^{n-1} (1-a_ix)\\right )'\n$$\n\u5bf9\u4e8e $\\prod\\limits_{i=0}^{n-1} (1-a_ix)$\uff0c\u53ef\u4ee5\u901a\u8fc7\u5206\u6cbb\u6765\u6c42\u89e3\uff0c\u5373\u5148\u7b97\u51fa\u5de6\u53f3\u4e24\u534a\u540e\u4e58\u8d77\u6765\u3002\n\n\u6700\u540e\u901a\u8fc7\u591a\u9879\u5f0f\u5bf9\u6570\u51fd\u6570\u5373\u53ef\u6c42\u89e3\u7b54\u6848\u3002\n\n$code:$\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 800010\n#define P 998244353\n#define G 3\nusing namespace std;\ntypedef long long ll;\ntemplate<typename T> inline void read(T &x)\n{\n    x=0;char c=getchar();bool flag=false;\n    while(!isdigit(c)){if(c=='-')flag=true;c=getchar();}\n    while(isdigit(c)){x=(x<<1)+(x<<3)+(c^48);c=getchar();}\n    if(flag)x=-x;\n}\nll n,m,k,all;\nll rev[maxn],a[maxn],b[maxn],f[maxn],g[maxn],fac[maxn],ifac[maxn];\nll qp(ll x,ll y)\n{\n    ll v=1;\n    while(y)\n    {\n        if(y&1) v=v*x%P;\n        x=x*x%P,y>>=1;\n    }\n    return v;\n}\nint calc(int n)\n{\n    int lim=1;\n    while(lim<=n) lim<<=1;\n    for(int i=0;i<lim;++i)\n        rev[i]=(rev[i>>1]>>1)|((i&1)?lim>>1:0);\n    return lim;\n}\nvoid NTT(ll *a,int lim,int type)\n{\n    for(int i=0;i<lim;++i)\n        if(i<rev[i])\n            swap(a[i],a[rev[i]]);\n    for(int len=1;len<lim;len<<=1)\n    {\n        ll wn=qp(G,(P-1)/(len<<1));\n        for(int i=0;i<lim;i+=len<<1)\n        {\n            ll w=1;\n            for(int j=i;j<i+len;++j,w=w*wn%P)\n            {\n                ll x=a[j],y=w*a[j+len]%P;\n                a[j]=(x+y)%P,a[j+len]=(x-y+P)%P;\n            }\n        }\n    }\n    if(type==1) return;\n    ll inv=qp(lim,P-2);\n    for(int i=0;i<lim;++i) a[i]=a[i]*inv%P;\n    reverse(a+1,a+lim);\n}\nvoid Inv(int deg,ll *a,ll *b)\n{\n    static ll t[maxn];\n    if(deg==1)\n    {\n        b[0]=qp(a[0],P-2);\n        return;\n    }\n    Inv((deg+1)>>1,a,b);\n    int lim=calc(deg<<1);\n    for(int i=0;i<deg;++i) t[i]=a[i];\n    for(int i=deg;i<lim;++i) t[i]=b[i]=0;\n    NTT(t,lim,1),NTT(b,lim,1);\n    for(int i=0;i<lim;++i)\n        b[i]=b[i]*(2-t[i]*b[i]%P+P)%P;\n    NTT(b,lim,-1);\n    for(int i=deg;i<lim;++i) b[i]=0;\n}\nvoid Ln(int deg,ll *a,ll *b)\n{\n    static ll inva[maxn],dera[maxn];\n    Inv(deg,a,inva);\n    for(int i=0;i<deg-1;++i) dera[i]=a[i+1]*(i+1)%P;\n    dera[deg-1]=0;\n    int lim=calc(deg<<1);\n    for(int i=deg;i<lim;++i) dera[i]=inva[i]=0;\n    NTT(dera,lim,1),NTT(inva,lim,1);\n    for(int i=0;i<lim;++i) b[i]=dera[i]*inva[i]%P;\n    NTT(b,lim,-1);\n    for(int i=deg-1;i>=1;--i) b[i]=b[i-1]*qp(i,P-2)%P;\n    b[0]=0;\n    for(int i=deg;i<lim;++i) b[i]=0;\n}\nvoid solve(int l,int r,ll *a,ll *b)\n{\n    if(l==r)\n    {\n        b[0]=1,b[1]=P-a[l];\n        return;\n    }\n    int mid=(l+r)>>1;\n    ll a1[maxn],a2[maxn];\n    solve(l,mid,a,a1),solve(mid+1,r,a,a2);\n    int lim=calc(r-l+1);\n    for(int i=mid-l+2;i<lim;++i) a1[i]=0;\n    for(int i=r-mid+1;i<lim;++i) a2[i]=0;\n    NTT(a1,lim,1),NTT(a2,lim,1);\n    for(int i=0;i<lim;++i) b[i]=a1[i]*a2[i]%P;\n    NTT(b,lim,-1);\n    for(int i=r-l+2;i<lim;++i) b[i]=0;\n}\nvoid get(int n,ll *a,ll *b)\n{\n    static ll t[maxn];\n    solve(1,calc(all),a,t),Ln(all+1,t,b);\n    for(int i=0;i<=all;++i) b[i]=b[i+1]*(i+1)%P;\n    b[all+1]=0;\n    for(int i=all;i;--i) b[i]=P-b[i-1];\n    b[0]=n;\n    for(int i=0;i<=all;++i) b[i]=b[i]*ifac[i]%P;\n}\nvoid init()\n{\n    fac[0]=ifac[0]=1;\n    for(int i=1;i<=all;++i) fac[i]=fac[i-1]*i%P;\n    ifac[all]=qp(fac[all],P-2);\n    for(int i=all-1;i;--i) ifac[i]=ifac[i+1]*(i+1)%P;\n}\nint main()\n{\n    read(n),read(m);\n    for(int i=1;i<=n;++i) read(a[i]);\n    for(int i=1;i<=m;++i) read(b[i]);\n    read(k),all=max(k,max(n,m)),init();\n    get(n,a,f),get(m,b,g);\n    int lim=calc(all<<1);\n    NTT(f,lim,1),NTT(g,lim,1);\n    for(int i=0;i<lim;++i) f[i]=f[i]*g[i]%P;\n    NTT(f,lim,-1);\n    ll inv=qp(n*m%P,P-2);\n    for(int i=1;i<=k;++i) printf(\"%lld\\n\",fac[i]*inv%P*f[i]%P);\n    return 0;\n}\n```",
        "postTime": 1596628843,
        "uid": 172489,
        "name": "lhm_",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4705 \u3010\u73a9\u6e38\u620f\u3011"
    },
    {
        "content": "\u53ea\u9700\u8981\u6c42\u51fa\n\n$$\n\\sum_{i=1}^n\\sum_{j=1}^m(a_i+b_j)^k,k\\in[1,t]\n$$\n\n\u5bf9 $k$ \u5efa\u7acb EGF:\n\n$$\n\\begin{aligned}&\\sum_{k\\geq 0}\\frac{x^k}{k!}\\sum_{i=1}^n\\sum_{j=1}^m(a_i+b_j)^k\\\\=&\\sum_{i=1}^n\\sum_{j=1}^m\\sum_{k\\geq 0}\\frac{((a_i+b_j)x)^k}{k!}\\\\=&\\sum_{i=1}^n\\sum_{j=1}^ne^{a_ix}e^{b_jx}\\\\=&\\left(\\sum_{i=1}^ne^{a_ix}\\right)\\left(\\sum_{i=1}^me^{b_ix}\\right)\\end{aligned}\n$$\n\n\u5c55\u5f00\u5f97\u5230\n\n$$\n\\sum_{i=1}^ne^{a_ix}=\\sum_{i=1}^n\\sum_{k\\geq 0}\\frac{a_i^kx^k}{k!}=\\sum_{k\\geq 0}\\frac{x^k}{k!}\\sum_{i=1}^na_i^k\n$$\n\n\u90a3\u4e48\u53ea\u9700\u8981\u6c42\u51fa\n\n$$\n\\sum_{i=1}^na_i^k,k\\in[1,t]\n$$\n\n\u8003\u8651\u5e42\u7ea7\u6570\n\n$$\n\\sum_{k\\geq 1}\\frac{x^k}{k}\\sum_{i=1}^na_i^k=\\sum_{i=1}^n\\sum_{k\\geq 1}\\frac{(a_ix)^k}{k}=-\\sum_{i=1}^n\\ln(1-a_ix)=-\\ln\\left(\\prod_{i=1}^n(1-a_ix)\\right)\n$$\n\n\u53ef\u4ee5\u5206\u6cbb NTT \u8ba1\u7b97.\n\n\u590d\u6742\u5ea6 $O(n\\log^2n+t\\log t)$\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<vector>\n#include<algorithm>\nusing namespace std;\nconst int mod=998244353,N=5e5;\nvector<int>fa[N],fb[N];\nint fac[N],ifac[N],rev[N],w[N],inv[N],limn,ea[N],eb[N],a[N],b[N],n,m,T;\nint qpower(int a,int b){int ans=1;for(;b;b>>=1,a=1ll*a*a%mod)if(b&1)ans=1ll*ans*a%mod;return ans;}\nvoid NTT_prework(int n)\n{\n    limn=1;while(limn<=n)limn<<=1;\n    for(int i=1;i<limn;i++)rev[i]=rev[i>>1]>>1|((i&1)?(limn>>1):0);\n    for(int i=1;i<limn;i<<=1)\n    {\n        int omg=qpower(3,(mod-1)/(i<<1));\n        w[i]=1;\n        for(int j=1;j<i;j++)w[i+j]=1ll*omg*w[i+j-1]%mod;\n    }\n    inv[1]=1;for(int i=2;i<=n;i++)inv[i]=1ll*(mod-mod/i)*inv[mod%i]%mod;\n    fac[0]=ifac[0]=1;for(int i=1;i<=n;i++)fac[i]=1ll*fac[i-1]*i%mod,ifac[i]=1ll*ifac[i-1]*inv[i]%mod;\n}\nnamespace NTTtmp{int tmp[N];}\nvoid NTT(int a[],int l)\n{\n    using namespace NTTtmp;\n    for(int i=0;i<l;i++)tmp[rev[i]/(limn/l)]=a[i];\n    for(int i=1;i<l;i<<=1)\n        for(int j=0;j<l;j+=i<<1)\n            for(int k=0;k<i;k++)\n            {\n                int x=tmp[j+k],y=1ll*w[i+k]*tmp[i+j+k]%mod;\n                tmp[j+k]=(x+y)%mod,tmp[i+j+k]=(x-y)%mod;\n            }\n    for(int i=0;i<l;i++)a[i]=tmp[i];\n}\nnamespace MULtmp{int tmpa[N],tmpb[N];}\nvoid mul(const vector<int>A,const vector<int>B,vector<int>&c)\n{\n    using namespace MULtmp;\n    int la=A.size(),lb=B.size(),n=la+lb-1;\n    int l=1;while(l<n)l<<=1;\n    for(int i=0;i<la;i++)tmpa[i]=A[i];for(int i=la;i<l;i++)tmpa[i]=0;\n    for(int i=0;i<lb;i++)tmpb[i]=B[i];for(int i=lb;i<l;i++)tmpb[i]=0;\n    NTT(tmpa,l),NTT(tmpb,l);\n    for(int i=0;i<l;i++)tmpa[i]=1ll*tmpa[i]*tmpb[i]%mod;\n    reverse(tmpa+1,tmpa+l);NTT(tmpa,l);int ivl=mod-(mod-1)/l;\n    c.resize(n);\n    for(int i=0;i<n;i++)c[i]=1ll*tmpa[i]*ivl%mod;\n}\nvoid solve1(int rot,int lt,int rt)\n{\n    if(lt==rt){fa[rot].resize(2);fa[rot][0]=1,fa[rot][1]=-a[lt];return;}\n    int mid=(lt+rt)>>1;\n    solve1(rot<<1,lt,mid),solve1(rot<<1|1,mid+1,rt);\n    mul(fa[rot<<1],fa[rot<<1|1],fa[rot]);\n}\nvoid solve2(int rot,int lt,int rt)\n{\n    if(lt==rt){fb[rot].resize(2);fb[rot][0]=1,fb[rot][1]=-b[lt];return;}\n    int mid=(lt+rt)>>1;\n    solve2(rot<<1,lt,mid),solve2(rot<<1|1,mid+1,rt);\n    mul(fb[rot<<1],fb[rot<<1|1],fb[rot]);\n}\nvoid mul(const int A[],const int B[],int c[],int n)\n{\n    using namespace MULtmp;\n    int l=1;while(l<(n<<1))l<<=1;\n    for(int i=0;i<n;i++)tmpa[i]=A[i],tmpb[i]=B[i];\n    for(int i=n;i<l;i++)tmpa[i]=tmpb[i]=0;\n    NTT(tmpa,l),NTT(tmpb,l);\n    for(int i=0;i<l;i++)tmpa[i]=1ll*tmpa[i]*tmpb[i]%mod;\n    reverse(tmpa+1,tmpa+l);NTT(tmpa,l);int ivl=mod-(mod-1)/l;\n    for(int i=0;i<n;i++)c[i]=1ll*tmpa[i]*ivl%mod;\n}\nnamespace Invtmp{int tmpa[N],tmpb[N];}\nvoid Inv(const int a[],int b[],int n)\n{\n    using namespace Invtmp;\n    if(n==1){b[0]=qpower(a[0],mod-2);return;}\n    int nn=(n+1)>>1;Inv(a,b,nn);\n    int l=1;while(l<(n<<1))l<<=1;\n    for(int i=0;i<nn;i++)tmpa[i]=b[i];for(int i=nn;i<l;i++)tmpa[i]=0;\n    for(int i=0;i<n;i++)tmpb[i]=a[i];for(int i=n;i<l;i++)tmpb[i]=0;\n    NTT(tmpa,l),NTT(tmpb,l);\n    for(int i=0;i<l;i++)tmpa[i]=(2-1ll*tmpa[i]*tmpb[i])%mod*tmpa[i]%mod;\n    reverse(tmpa+1,tmpa+l);NTT(tmpa,l);int ivl=mod-(mod-1)/l;\n    for(int i=0;i<n;i++)b[i]=1ll*tmpa[i]*ivl%mod;\n}\nnamespace Lntmp{int tmpa[N],tmpb[N];}\nvoid Ln(const int a[],int b[],int n)\n{\n    using namespace Lntmp;\n    for(int i=0;i<n-1;i++)tmpa[i]=1ll*(i+1)*a[i+1]%mod;\n    tmpa[n-1]=0;\n    Inv(a,tmpb,n);\n    mul(tmpa,tmpb,tmpa,n);\n    for(int i=1;i<n;i++)b[i]=1ll*inv[i]*tmpa[i-1]%mod;\n    b[0]=0;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);int iv=qpower(1ll*n*m%mod,mod-2);\n    for(int i=1;i<=n;i++)scanf(\"%d\",a+i);\n    for(int i=1;i<=m;i++)scanf(\"%d\",b+i);\n    scanf(\"%d\",&T);++T;\n    NTT_prework(max(T<<1,max(n,m)));\n    solve1(1,1,n),solve2(1,1,m);\n    for(int i=0;i<T&&i<=n;i++)a[i]=fa[1][i];\n    for(int i=0;i<T&&i<=m;i++)b[i]=fb[1][i];\n    Ln(a,ea,T),Ln(b,eb,T);\n//    cout<<(-1ll*1*eb[1]%mod+mod)%mod<<endl;\n    a[0]=n,b[0]=m;\n    for(int i=1;i<T;i++)a[i]=-1ll*ifac[i-1]*ea[i]%mod,b[i]=-1ll*ifac[i-1]*eb[i]%mod;\n    mul(a,b,a,T);\n    for(int i=1;i<T;i++)printf(\"%d\\n\",(1ll*fac[i]*a[i]%mod*iv%mod+mod)%mod);\n}\n```",
        "postTime": 1593226538,
        "uid": 22136,
        "name": "qwaszx",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4705 \u3010\u73a9\u6e38\u620f\u3011"
    },
    {
        "content": "\u6211\u592a\u849f\u84bb\u4e86\uff0c\u770b\u4e86\u9898\u89e3\u4e4b\u540e\u624d\u4f1a\u505aQAQ\n\n\u770b\u5230\u9898\u76ee\u63cf\u8ff0\u4e4b\u540e\uff0c\u53ef\u4ee5\u6839\u636e\u9898\u76ee\u5217\u51fa\u5f0f\u5b50\n$$ans_t=\\sum_{i=1}^{n}\\sum_{j=1}^{m}(a_i+b_j)^t$$\n\u5c06\u5176\u5c55\u5f00\u4e3a\n$$ans_t=\\sum_{i=1}^{n}\\sum_{j=1}^{m}\\sum_{k=0}^{t}{t\\choose k}a_i^kb_j^{t-k}$$\n$$ans_t=\\sum_{k=0}^{t}{t \\choose k}\\sum_{i=1}^{n}a_i^k\\sum_{j=1}^{m}{b_j^{t-k}}$$\n\u518d\u628a\u7ec4\u5408\u6570\u62c6\u5f00\u4e3a\n$$ans_t=\\sum_{k=0}^{t}{\\frac{t!}{k!(t-k)!}}\\sum_{i=1}^{n}a_i^k\\sum_{j=1}^{m}{b_j^{t-k}}$$\n$$ans_t=t!\\sum_{k=0}^{t}\\sum_{i=1}^{n}\\frac{a_i^k}{k!}\\sum_{j=1}^{m}{\\frac{b_j^{t-k}}{(t-k)!}}$$\n\u8fd9\u91cc\u5c31\u8868\u73b0\u51fa\u4e86\u5927\u5bb6\u559c\u95fb\u4e50\u89c1\u7684\u5377\u79ef\u5f62\u5f0f\u3002\u968f\u540e\u95ee\u9898\u5c31\u53d8\u4e3a\u4e86\u6c42$\\sum_{i=1}^{n}{a_i^k}$\u3002\n\n\u8fd9\u7bc7\u9898\u89e3\u548c\u4ee5\u4e0a\u4e24\u7bc7\u524d\u9762\u7684\u63a8\u5bfc\u8fc7\u7a0b\u662f\u5b8c\u5168\u76f8\u540c\u7684\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u6211\u770b\u4e86\u4e24\u79cd\u4e0d\u540c\u7684\u505a\u6cd5\u4e4b\u540e\u6bd4\u8f83\u559c\u6b22\u751f\u6210\u51fd\u6570\u8fd9\u79cd\u7b80\u5355\u6613\u61c2\u7684\u505a\u6cd5\uff0c\u4f46\u662f\u90a3\u7bc7\u9898\u89e3\u4e2d\u6c42\u751f\u6210\u51fd\u6570\u7684\u548c\u7684\u65b9\u6cd5\u5e76\u6ca1\u6709\u8bb2\u5f97\u5f88\u6e05\u695a\uff0c~~\u800c\u4e14\u6211\u592a\u83dc\u4e86\u4e0d\u4f1a\u901a\u5206\u554a~~\uff0c\u56e0\u6b64\u6211\u6839\u636e\u7b2c\u4e00\u7bc7\u9898\u89e3\u7684\u601d\u8def\u4f7f\u7528\u751f\u6210\u51fd\u6570\u63a8\u5bfc\u4e86\u4e00\u904d\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u8981\u6c42\u7684\u662f\uff1a\n$$\\sum_{i=1}^{n}{a_i^k}$$\n\u5bf9\u4e8e\u4e00\u4e2a$i$\uff0c\u53ef\u4ee5\u4f7f\u7528\u7b49\u6bd4\u6570\u5217\u6c42\u548c\u516c\u5f0f\u6c42\u51fa\u6570\u5217$1,a_i,a_i^2...a_i^t$\u7684\u751f\u6210\u51fd\u6570$A_i(x)$\u3002\n$$A_i(x)=\\sum_{j=0}^{t}{a_i^jx^j}=\\frac{1}{1-a_ix}$$\n\u5219\n$$F(x)=\\sum_{i=1}^{n}{A_i(x)}=\\sum_{i=1}^{n}{\\frac{1}{1-a_ix}}$$\n\u5bb9\u6613\u53d1\u73b0\uff1a\n$$\\ln^{'}(1-a_ix)=\\frac{1}{1-a_ix}$$\n\u4ee3\u5165\u5f97:\n$$F(x)=\\sum_{i=1}^{n}{\\ln^{'}(1-a_ix)}$$\n\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u8fd8\u662f\u4e0d\u80fd\u5feb\u901f\u5730\u8ba1\u7b97\uff0c\u4e8e\u662f\u4e3a\u4e86\u80fd\u591f\u5408\u5e76$ln$\uff0c\u6211\u4eec\u5c06\u5176\u53d8\u6210\u8fd9\u6837\uff1a\n$$(\\ln(1-a_ix))^{'}=\\frac{-a_i}{1-a_ix}$$\n\u7136\u540e\u6c42\n$$G(x)=\\sum_{i=1}^{n}{\\frac{-a_i}{1-a_ix}}$$\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u6109\u5feb\u5730\u8ba1\u7b97\n$$G(x)=\\sum_{i=1}^{n}{(\\ln(1-a_ix))^{'}}=(\\ln(\\prod_{i=1}^{n}(1-a_ix)))^{'}$$\n\u5176\u4e2d$\\prod_{i=1}^{n}(1-a_ix)$\u4f7f\u7528\u5206\u6cbb\u5373\u53ef\u3002\n\n\u6700\u540e\u89c2\u5bdf\u6c42\u5f97\u7684$G(x)$\uff0c\u53d1\u73b0$F(x)=-xG(x)+n$\uff0c\u5c31\u641e\u5b9a\u4e86\u3002\n\n\u548c\u4e0a\u9762\u4e24\u7bc7\u9898\u89e3\u7684\u505a\u6cd5\u5bf9\u6bd4\uff0c\u9996\u5148\uff0c\u7b2c\u4e8c\u7bc7\u9898\u89e3\u4e2d\u7684\u751f\u6210\u51fd\u6570\n$$F(x)=1+a_i^1x^1+a_i^2x^2+...+a_i^tx^t$$\n\u88ab\u6211\u4eec\u5316\u6210\u4e86\n$$A(x)=-a_i^1-a_i^2x^1-...-a_i^tx^{t-1}$$\n\u8fd9\u4f9d\u7136\u662f\u53ef\u4ee5\u6c42\u51fa\u7b54\u6848\u6765\u7684\uff0c\u800c\u4e14\u5408\u5e76\u7684\u65f6\u5019\u4e5f\u4e0d\u518d\u9700\u8981\u901a\u5206\u4e86\u3002\n\n\u7136\u540e\u7b2c\u4e00\u7bc7\u9898\u89e3\u4e2d\u6c42\u51fa\u6765\u7684\u5f0f\u5b50\n$$G(x)=\\sum_{i=1}^{n}{\\ln(a_ix+1)}=\\sum_{i=1}^{n}{\\frac{(-1)^{(k-1)}}{k}a_i^kx^k}$$\n\u5c06$a_i$\u6362\u4e3a$-a_i$\u540e\u53d8\u4e3a\n$$G(x)=\\sum_{i=1}^{n}{\\frac{(-1)^{(k-1)}}{k}(-a_i)^kx^k}=\\sum_{i=1}^{n}{\\frac{(-1)^{(k\\times2-1)}}{k}a_i^kx^k}$$\n$$G(x)=\\sum_{i=1}^{n}{\\frac{-a_i^k}{k}x^k}$$\n\u6c42\u5bfc\uff1a\n$$G(x)=\\sum_{i=1}^{n}{\\frac{-a_i^kk}{k}x^{k-1}}=\\sum_{i=1}^{n}{-a_i^kx^{k-1}}$$\n\u7136\u540e\u5c31\u5f97\u5230\u4e86\u4e0a\u9762\u7684\u5f0f\u5b50\uff0c\u8fd9\u8bf4\u660e\u4e24\u4e2a\u505a\u6cd5\u662f\u5b8c\u5168\u7b49\u4ef7\u7684\u3002~~\u5e9f\u8bdd\uff0c\u4e0d\u7136\u600e\u4e48\u90fd\u80fdA\u3002~~\n\n\u503c\u5f97\u6ce8\u610f\u7684\u662f\u591a\u9879\u5f0f\u6c42$\\ln$\u65f6\u5148\u6c42\u5bfc\u518d\u79ef\u5206\uff0c\u4f46\u662f\u6c42\u7b54\u6848\u90a3\u91cc\u53c8\u6c42\u4e86\u4e00\u904d\u5bfc\uff0c\u56e0\u6b64\u6c42$\\ln$\u65f6\u53ef\u4ee5\u7701\u7565\u79ef\u5206\u90a3\u4e00\u6b65\u3002\n\n\u4ee3\u7801\uff08\u5199\u5f97\u4e11\u8bf7\u89c1\u8c05\uff09\uff1a\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nconst int M=998244353,N=262144;\nint gti(void)\n{\n    char c=getchar();\n    int ret=0,st=1;\n    for (;!isdigit(c);c=getchar()) if (c=='-') st=-1;\n    for (;isdigit(c);c=getchar()) ret=ret*10+c-'0';\n    return ret*st;\n}\n\nint fpw(int a,int b)\n{\n    a%=M,b%=M-1;\n    if (b<0) b+=M-1;\n    int c=1;\n    for (;b;b>>=1,a=1ll*a*a%M)\n        if (b&1)\n            c=1ll*c*a%M;\n    if (c<0) c+=M;\n    return c;\n}\n\nnamespace Poly\n{\n    int id[N<<1];\n    int init(int len)\n    {\n        int ret=0;\n        for (;1<<ret<len;ret++);\n        for (int i=0;i<1<<ret;i++)\n            id[i]=id[i>>1]>>1|((i&1)<<(ret-1));\n        return 1<<ret;\n    }\n    void ntt(int *a,int len,int tag=1)\n    {\n        for (int i=0;i<len;i++)\n            if (id[i]>i)\n                swap(a[i],a[id[i]]);\n        for (int l=1;l<len;l<<=1)\n        {\n            int gl=fpw(3,tag*(M-1)/l/2);\n            for (int st=0;st<len;st+=l<<1)\n                for (int g=1,tmp,i=st;i<st+l;i++,g=g*1ll*gl%M)\n                    tmp=a[i+l]*1ll*g%M,a[i+l]=(a[i]-tmp)%M,(a[i]+=tmp)%=M;\n        }\n        int rev=fpw(len,-(tag<0));\n        for (int i=0;i<len;i++)\n            a[i]=(1ll*rev*a[i]%M+M)%M;\n    }\n    void mul(int *ret,int *a,int *b,int len)\n    {\n        static int c[N<<1],d[N<<1],e[N<<1];\n        copy(a,a+len,d),copy(b,b+len,e);\n        ntt(d,len),ntt(e,len);\n        for (int i=0;i<len;i++)\n            c[i]=1ll*d[i]*e[i]%M;\n        ntt(c,len,-1);\n        copy(c,c+len,ret);\n    }\n    void inv(int *ret,int *a,int len)\n    {\n        static int c[N<<1],b[N<<1],b0[N<<1];\n        if (len==1)\n            ret[0]=fpw(a[0],-1);\n        else\n        {\n            inv(b0,a,len>>1);\n            int k=init(len<<1);\n            copy(a,a+len,c);\n            fill(c+len,c+k,0);\n            fill(b0+(len>>1),b0+k,0);\n            ntt(c,k),ntt(b0,k);\n            for (int i=0;i<k;i++)\n                b[i]=((b0[i]*2ll-1ll*b0[i]*b0[i]%M*c[i]%M)%M+M)%M;\n            ntt(b,k,-1);\n            copy(b,b+len,ret);\n        }\n    }\n    void derv(int *ret,int *a,int len)\n    {\n        static int c[N<<1];\n        for (int i=1;i<len;i++)\n            c[i-1]=i*1ll*a[i]%M;\n        c[len-1]=0;\n        copy(c,c+len,ret);\n    }\n    void derln(int *ret,int *a,int len)\n    {\n        static int c[N<<1],d[N<<1],e[N<<1];\n        derv(d,a,len),inv(e,a,len);\n        init(len<<1);\n        mul(c,d,e,len<<1);\n        copy(c,c+len,ret);\n    }\n}\n\nvoid work(int *ret,int *a,int len)\n{\n    static int pool[2][N<<4],*p,*q;\n    p=pool[0],q=pool[1];\n    for (int i=0,*j=p;i<len;i++,j+=4)\n        j[0]=1,j[1]=(M-a[i])%M,j[2]=j[3]=0;\n    for (int l=1;l<len;l<<=1)\n    {\n        int k=Poly::init((l+1)<<1);\n        for (int *st=p;st<p+len*4;st+=l<<3)\n        {\n            Poly::mul(q+(st-p),st,st+(l<<2),k);\n            fill(q+(st-p)+(l<<2),q+(st-p)+(l<<3),0);\n        }\n        swap(p,q);\n    }\n    copy(p,p+len,ret);\n}\n\nint a[N<<1],b[N<<1],f[N<<1],g[N<<1],fct[N<<1],ifc[N<<1];\nint main(void)\n{\n    int n=gti(),m=gti(),rev=fpw(n*1ll*m%M,M-2);\n    for (int i=0;i<n;i++)\n        a[i]=gti();\n    for (int i=0;i<m;i++)\n        b[i]=gti();\n    int k=Poly::init(n+1),l=Poly::init(m+1);\n    work(f,a,k),work(g,b,l);\n    int t=gti(),r=max(Poly::init(t+1),max(l,k));\n    Poly::derln(f+1,f,r),Poly::derln(g+1,g,r);\n    for (int i=1;i<r;i++)\n        f[i]=(-f[i]+M)%M,g[i]=(-g[i]+M)%M;\n    f[0]=n,g[0]=m,fct[0]=1;\n    for (int i=1;i<r;i++)\n        fct[i]=fct[i-1]*1ll*i%M;\n    ifc[r-1]=fpw(fct[r-1],M-2);\n    for (int i=r-2;i>=0;i--)\n        ifc[i]=ifc[i+1]*(i+1ll)%M;\n    for (int i=0;i<r;i++)\n        f[i]=f[i]*1ll*ifc[i]%M,g[i]=g[i]*1ll*ifc[i]%M;\n    Poly::init(r<<1);\n    for (int i=r;i<=r<<1;i++)\n        f[i]=g[i]=0;\n    Poly::mul(f,f,g,r<<1);\n    for (int i=0;i<=t;i++)\n        if (i) printf(\"%lld\\n\",f[i]*1ll*fct[i]%M*rev%M);\n    return 0;\n}\n\n```",
        "postTime": 1542605600,
        "uid": 5641,
        "name": "fallleaves01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4705 \u3010\u73a9\u6e38\u620f\u3011"
    },
    {
        "content": "\u9898\u89e3\u90fd\u662f\u6e05\u4e00\u8272\u7684$\\ln$\uff0c\u8fd9\u91cc\u63d0\u4e00\u4e2a\u4e0d\u7528$\\ln$\u7684\u3002\u5f0f\u5b50\u5c31\u4e0d\u63a8\u4e86\uff0c\u5176\u4ed6\u9898\u89e3\u8bb2\u7684\u90fd\u5f88\u6e05\u695a\u3002\n\n\u73b0\u5728\u6211\u4eec\u8981\u89e3\u51b3\u7684\u662f$F(x) = \\sum_{i=0}^n \\sum_{j=0}^\\infty a_i^j x^j$\u600e\u4e48\u5feb\u901f\u8ba1\u7b97\u3002\u540e\u9762\u662f\u4e2a\u5e38\u7528\u7684\u7ea7\u6570$\\frac{1}{1-x} = \\sum_{i=0}^\\infty x^i$\uff0c\u4ee3\u5165$a_ix$\u7acb\u523b\u5f97\u5230$F(x)=\\sum_{i=0}^n \\frac{1}{1-a_i x}$\u3002\u8fd9\u91cc\u5176\u4ed6\u7684\u9898\u89e3\u90fd\u662f\u6ce8\u610f\u5230\u8fd9\u4e2a\u5f62\u5f0f\u548c\u5bf9\u6570\u7684\u5bfc\u6570\u76f8\u8fd1\uff0c\u53bb\u51d1\u4e86\u4e00\u4e2a\u5bfc\u6570\u3002\u4f46\u5176\u5b9e\u8fd9\u4e2a\u5f62\u5f0f\u5df2\u7ecf\u53ef\u4ee5\u76f4\u63a5\u5206\u6cbb\u4e86\u3002\n\n\u5206\u6cbb\u7684\u8fc7\u7a0b\u5e76\u4e0d\u662f\u76f4\u63a5\u6c42\u5f97$F(x)$\uff0c\u800c\u662f\u6c42\u51fa\u4e00\u4e2a\u901a\u5206\u4e4b\u540e\u7684\u6709\u7406\u5206\u5f0f$\\frac{P(x)}{Q(x)}$\u3002\u5047\u8bbe\u5206\u6cbb\u4e4b\u540e\u5de6\u53f3\u4e24\u8fb9\u5f97\u5230\u7684\u7ed3\u679c\u662f$\\frac{P_l{x}}{Q_l(x)},\\frac{P_r(x)}{Q_r(x)}$\uff0c\u5219\n\n$$\n\\frac{P(x)}{Q(x)}=\\frac{P_l(x)}{Q_l(x)}+\\frac{P_r(x)}{Q_r(x)}=\\frac{P_l(x)Q_r(x)+P_r(x)Q_l(x)}{Q_l(x)Q_r(x)}\n$$\n\n\u663e\u7136\u590d\u6742\u5ea6\u662f$T(n)=2T(n/2)+O(n\\lg n) = O(n \\lg ^2 n)$\uff0c\u5b9e\u9645\u4e0a\u5e94\u8be5\u6bd4\u6c42\u5bf9\u6570\u7684\u5206\u6cbb\u591a\u4e86\u4e24\u500d\u7684\u5e38\u6570\uff083\u6b21NTT->6\u6b21NTT\uff09\uff0c\u4f46\u4e5f\u4e0d\u6162\uff0c\u5408\u7406\u5b9e\u73b0\u4e0d\u4f1a\u88ab\u5361\u5e38\u3002\n\n\u4ee3\u7801\u4e3b\u8981\u5173\u6ce8`solve`\u51fd\u6570\uff0c\u662f\u5206\u6cbb\u7684\u90e8\u5206\u3002\u5176\u4ed6\u90fd\u662f\u677f\u5b50\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cassert>\n#include <algorithm>\n#include <vector>\n#define ll long long\n\ninline int to2pow(int n) {\n    int ret = 1;\n    while(ret < n)  ret <<= 1;\n    return ret;\n}\n\ntemplate<int Modulo>\nll qpow(ll a, ll b) {\n    ll ret = 1;\n    for(; b; b >>= 1) {\n        if(b&1)  ret = (ret*a) % Modulo;\n        a = (a*a) % Modulo;\n    }\n    return ret;\n}\n\nll qpow(ll a, ll b, int modulo) {\n    ll ret = 1;\n    for(; b; b >>= 1) {\n        if(b&1)  ret = (ret*a) % modulo;\n        a = (a*a) % modulo;\n    }\n    return ret;\n}\n\ntemplate<int Modulo>\nstruct InvArr {\n    static std::vector<int> inv;\n    int operator[] (int index) {\n        if(index >= (int)inv.size())  expand(index+1);\n        return inv[index];\n    }\n    void expand(int size) {\n        for(int i = inv.size(); i < size; ++i)\n            inv.push_back((ll)(Modulo - Modulo/i) * inv[Modulo%i] % Modulo);\n    }\n};\ntemplate<int Modulo>\nstd::vector<int> InvArr<Modulo>::inv = {0, 1};\n\ntemplate<class T>\nusing Poly = std::vector<T>;\n\ntemplate<int Modulo, int Priroot = 3>\nstruct NTT {\n    int expo, n;\n    std::vector<int> ind;\n    static std::vector<std::vector<int>> omega;\n\n    NTT(int expo, bool): expo(expo), n(1<<expo), ind(n) {\n        for(int i = 0; i < n; ++i)  ind[i] = (ind[i>>1]>>1) | ((i&1)<<(expo-1));\n        if((int)omega.size() < expo)  setOmega();\n    }\n    NTT(int n_ = 1): expo(0), n(1) {\n        while(n < n_) { n <<= 1; ++expo; }\n        ind.resize(n);\n        for(int i = 0; i < n; ++i)  ind[i] = (ind[i>>1]>>1) | ((i&1)<<(expo-1));\n        if((int)omega.size() < expo)  setOmega();\n    }\n\n    void setOmega() {\n        int oldsz = omega.size();\n        omega.resize(expo);\n        for(int i = oldsz, half = (1<<i); i < expo; ++i, half <<= 1) {\n            ll unit = qpow<Modulo>(Priroot, (Modulo-1)/(half<<1));\n            omega[i].resize(half);\n            omega[i][0] = 1;\n            for(int j = 1; j < half; ++j) omega[i][j] = omega[i][j-1]*unit % Modulo;\n        }\n    }\n\n    void doubled() {\n        for(int i = 0; i < n; ++i)  ind[i] <<= 1;\n        ind.resize(n<<=1);  ++expo;\n        for(int i = n>>1; i < n; ++i)  ind[i] = (ind[i>>1]>>1) | ((i&1)<<(expo-1));\n        if((int)omega.size() < expo)  setOmega();\n    }\n\n    void ntt(Poly<int> &pol, bool isINTT = false) const {\n        if((int)pol.size() < n)  pol.resize(n);\n        for(int i = 0; i < n; ++i) if(i < ind[i]) std::swap(pol[i], pol[ind[i]]);\n        for(int half = 1, e = 0; half < n; ++e, half <<= 1) {\n            for(int i = 0; i < n; i += (half<<1)) {\n                for(int k = 0; k < half; ++k) {\n                    int x = pol[i+k], y = 1ll * omega[e][k] * pol[i+k+half] % Modulo;\n                    pol[i+k]      = (x + y) % Modulo;\n                    pol[i+k+half] = (x - y + Modulo) % Modulo;\n                }\n            }\n        }\n        if(isINTT) {\n            ll invn = qpow<Modulo>(n, Modulo-2);\n            std::reverse(pol.begin()+1, pol.begin()+n);\n            for(int i = 0; i < n; ++i) pol[i] = pol[i] * invn % Modulo;\n        }\n    }\n\n    void intt(Poly<int> &pol) const { ntt(pol, 1); }\n\n    void swap(NTT<Modulo, Priroot> &ot) {\n        expo ^= ot.expo ^= expo ^= ot.expo;\n        n ^= ot.n ^= n ^= ot.n;\n        std::swap(ind, ot.ind);\n    }\n};\ntemplate<int Modulo, int Priroot>\nstd::vector<std::vector<int>> NTT<Modulo, Priroot>::omega = {};\n\ntemplate<int Modulo, int Priroot = 3>\ninline const NTT<Modulo, Priroot>& newNTT(int expo, bool) {\n    static bool inited[25] = {};\n    static NTT<Modulo, Priroot> *arr = new NTT<Modulo, Priroot>[25](); // 1<<24 = 16,777,216\n    if(inited[expo])  return arr[expo];\n    inited[expo] = true;\n    return arr[expo] = NTT<Modulo, Priroot>(expo, 0);\n}\n\ntemplate<int Modulo, int Priroot = 3>\ninline const NTT<Modulo, Priroot>& newNTT(int n) {\n    int expo = 0;\n    while((1<<expo) < n)  ++expo;\n    return newNTT<Modulo, Priroot>(expo, 0);\n}\n\ntemplate<int Modulo, int Priroot = 3>\nvoid polyInv(const Poly<int> &pol, Poly<int> &ret, int n = -1) {\n    if(n == -1)  n = pol.size();\n#ifdef __POLY_OK__\n    assert(n > 0 && pol[0]); // no solution\n#endif\n    int m = to2pow(n); if((int)ret.size() < m) ret.resize(m);\n    ret[0] = qpow<Modulo>(pol[0], Modulo-2);\n    Poly<int> f(m), r(m);\n    for(int len = 2, cond = std::min(2, n); len <= m; len <<= 1, cond = std::min(len, n)) {\n        const auto &ntt = newNTT<Modulo, Priroot>(len);\n        for(int i = 0; i < cond; ++i)  f[i] = pol[i];\n        for(int i = 0; i < (len>>1); ++i)  r[i] = ret[i];\n        ntt.ntt(f);  ntt.ntt(r);\n        for(int i = 0; i < len; ++i)  f[i] = 1ll*f[i]*r[i]%Modulo;\n        ntt.intt(f);  std::fill(f.begin(), f.begin()+(len>>1), 0);  ntt.ntt(f);\n        for(int i = 0; i < len; ++i)  f[i] = 1ll*f[i]*r[i]%Modulo;\n        ntt.intt(f);\n        for(int i = (len>>1); i < len; ++i)  ret[i] = f[i] ? Modulo-f[i] : 0;\n    }\n}\n\n#define mod 998244353\nvoid solve(Poly<int> &pol, Poly<int> &up, Poly<int> &down, int l, int r) {\n    if(l == r-1) {\n        down[0] = up[0] = 1;\n        down[1] = (mod-pol[l]) % mod;\n        return ;\n    }\n    const auto &ntt = newNTT<mod>(r-l+1);\n    int mid = (l+r) >> 1;\n    solve(pol, up, down, l, mid);\n    Poly<int> up2(ntt.n), down2(ntt.n);\n    solve(pol, up2, down2, mid, r);\n    ntt.ntt(up);  ntt.ntt(down);  ntt.ntt(up2);  ntt.ntt(down2);\n    for(int i = 0; i < ntt.n; ++i) {\n        up[i] = (1ll*up[i]*down2[i]+1ll*up2[i]*down[i]) % mod;\n        down[i] = (1ll*down[i]*down2[i]) % mod;\n    }\n    ntt.intt(up);  ntt.intt(down);\n}\n\nint main() {\n    int n, m, t;\n    scanf(\"%d %d\", &n, &m);\n    Poly<int> p1(n), p2(m), u1(n), u2(m), d1(n+1), d2(m+1), i1, i2;\n    for(int i = 0; i < n; ++i)  scanf(\"%d\", &p1[i]);\n    for(int i = 0; i < m; ++i)  scanf(\"%d\", &p2[i]);\n    scanf(\"%d\", &t);\n    solve(p1, u1, d1, 0, n);  solve(p2, u2, d2, 0, m);\n    u1.resize(t+1);  u2.resize(t+1);  d1.resize(t+1);  d2.resize(t+1);\n    polyInv<mod>(d1, i1, t+1);  polyInv<mod>(d2, i2, t+1);\n    const auto &ntt = newNTT<mod>(2*t+1);\n    ntt.ntt(u1);  ntt.ntt(u2);  ntt.ntt(i1);  ntt.ntt(i2);\n    for(int i = 0; i < ntt.n; ++i) {\n        u1[i] = (1ll*u1[i]*i1[i]) % mod;\n        u2[i] = (1ll*u2[i]*i2[i]) % mod;\n    }\n    ntt.intt(u1);  ntt.intt(u2);\n    u1.resize(t+1);  u2.resize(t+1);\n    InvArr<mod> inv;\n    for(int i = 0, fac = 1; i <= t; ++i, fac = 1ll*fac*inv[i]%mod) {\n        u1[i] = (1ll*u1[i]*inv[n]%mod * fac) % mod;\n        u2[i] = (1ll*u2[i]*inv[m]%mod * fac) % mod;\n    }\n    ntt.ntt(u1);  ntt.ntt(u2);\n    for(int i = 0; i < ntt.n; ++i) {\n        u1[i] = (1ll*u1[i]*u2[i]) % mod;\n    }\n    ntt.intt(u1);\n    for(int i = 1, fac = 1; i <= t; ++i, fac = (1ll*fac*i%mod))\n        printf(\"%lld\\n\", 1ll*u1[i]*fac%mod);\n    return 0;\n}\n```",
        "postTime": 1614316476,
        "uid": 48658,
        "name": "silverxz",
        "ccfLevel": 0,
        "title": "P4705 \u73a9\u6e38\u620f \u9898\u89e3"
    },
    {
        "content": "## \u9898\u610f\n\u7ed9\u51fa\u4e24\u4e2a\u5e8f\u5217$a,b$\uff0c\u957f\u5ea6\u5206\u522b\u4e3a$n,m$\uff0c\u8bf7\u6c42\u51fa$x=1,2,\\ldots,t$\uff0c\u4e0b\u5f0f\u7684\u503c\n$$\\dfrac{\\sum_{i=1}^n\\sum_{j=1}^m(a_i+b_j)^x}{nm}$$\n## \u9898\u89e3\n~~\u770b\u5230\u8fd8\u80fd\u53d1\u5c31\u6765\u6c34\u4e00\u7bc7~~\n\n\u672c\u4eba\u6570\u5b66\u6bd4\u8f83\u83dc\u6709\u9519\u8bef\u8bf7\u8054\u7cfb\u8fd9\u4e2a\u5c51\n\n\u6211\u4eec\u8bb0$x$\u7684\u7b54\u6848\u4e3a$ans_x$\uff0c\u90a3\u4e48\u5c31\u6709\uff1a\n$$ans_x\\times nm=\\sum_{i=1}^n\\sum_{j=1}^m(a_i+b_j)^x$$\n\u597d\u50cf\u4e5f\u505a\u4e0d\u4e86\u4ec0\u4e48\uff0c\u90a3\u5c31\u628a$(a_i+b_j)^x$\u7528\u4e8c\u9879\u5f0f\u5b9a\u7406\u5c55\u5f00\u518d\u8bf4\uff1a\n$$ans_x\\times nm=\\sum_{i=1}^n\\sum_{j=1}^m\\sum_{k=0}^x\\tbinom{x}{k}a_i^{k}b_j^{x-k}$$\n\u4ea4\u6362\u987a\u5e8f\uff0c\u518d\u628a\u4e07\u6076\u7684\u7ec4\u5408\u6570\u5c55\u5f00\u3002\n$$ans_x\\times nm=\\sum_{k=0}^x\\sum_{i=1}^n\\sum_{j=1}^m\\tbinom{x}{k}a_i^{k}b_j^{x-k}=\\sum_{k=0}^x\\sum_{i=1}^n\\sum_{j=1}^m\\frac{x!}{k!(x-k)!}a_i^{k}b_j^{x-k}$$\n\n$$\\frac{ans_x\\times nm}{x!}=\\sum_{k=0}^x\\frac{\\sum_{i=1}^na_i^k}{k!}\\frac{\\sum_{j=1}^mb_j^{x-k}}{(x-k)!}$$\n\n\u5982\u679c\u6211\u4eec\u8bb0$A(k)=\\sum_{i=1}^na_i^k$,$B(k)=\\sum_{i=1}^mb_i^k$\uff0c\u90a3\u4e48\u5c31\u6709\uff1a\n\n$$\\frac{ans_x\\times nm}{x!}=\\sum_{k=0}^x\\frac{A(k)}{k!}\\frac{B(x-k)}{(x-k)!}$$\n\n\u8fd9\u6837\u5377\u79ef\u5c31\u5f88\u660e\u663e\u4e86\u3002\n\n\u4e8e\u662f\u5269\u4e0b\u7684\u95ee\u9898\u5c31\u53d8\u6210\u6c42$A(0),A(1),A(2),\\ldots,A(t)$\uff0c\u8003\u8651\u6784\u9020\u4e0b\u9762\u4e00\u4e2a\u591a\u9879\u5f0f\uff1a\n$$F(x)=\\prod_{i=1}^n(1+a_ix)$$\n\u8fd9\u4e2a\u53ef\u4ee5\u5206\u6cbb\u5f97\u5230\uff0c\u590d\u6742\u5ea6~~\u663e\u7136\u6b63\u786e~~\n\n\u4e24\u8fb9\u540c\u53d6$\\ln$\u5f97\u5230\uff1a\n\n$$\\ln F(x)=\\sum_{i=1}^n\\ln(1+a_ix)$$\n\n\u4e24\u8fb9\u6c42\u5bfc\uff1a\n\n$$(\\ln F(x))^\\prime=\\sum_{i=1}^n\\frac{a_i}{1+a_ix}$$\n\n\u53c8\u77e5\uff0c$\\frac{1}{1+a_ix}=\\frac{1}{1-(-a_ix)}$\uff0c\u5373\u4e3a\u4e00\u4e2a\u9996\u9879\u4e3a$1$\uff0c\u516c\u6bd4\u4e3a$-a_ix$\u7684\u6570\u5217\u7684\u548c\uff0c\u90a3\u4e48$\\frac{1}{1+a_ix}=\\sum_{j=0}^{+\\infty}(-a_ix)^j$\n\n\u5e26\u5e26\u5e26\u56de\u53bb\uff1a\n\n$$(\\ln F(x))^\\prime=\\sum_{i=1}^na_i\\sum_{j=0}^{+\\infty}(-a_ix)^j$$\n\n\u518d\u79ef\u56de\u53bb\uff1a\n\n$$\\ln F(x)=\\int \\sum_{i=1}^na_i\\sum_{j=0}^{+\\infty}(-a_ix)^jdx=\\sum_{i=1}^na_i\\sum_{j=1}^{+\\infty}\\frac{(-a_i)^{j-1}x^j}{j}$$\n\n$$=\\sum_{i=1}^n\\sum_{j=1}^{+\\infty}\\frac{(-1)^{j-1}a_i^{j}x^j}{j}=\\sum_{j=1}^{+\\infty}\\frac{(-1)^{j-1}x_j}{j}\\sum_{i=1}^na_i^j=\\sum_{j=1}^{+\\infty}\\frac{(-1)^{j-1}A(j)}{j}x^j$$\n\n\u4e8e\u662f\u6b64\u65f6\u6c42\u51fa$A$\u4e5f\u4e0d\u96be\u4e86\uff0c\u968f\u4fbf\u4e58\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\n\n$B$\u4e5f\u540c\u7406\u3002\u628a$A,B$\u5e26\u56de\u53bb\uff0c\u4e0d\u96be\u5f97\u5230\u7b54\u6848\u3002\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nnamespace in{\n    #ifdef slow\n    inline int getc(){return getchar();}\n    #else\n    char buf[1<<21],*p1=buf,*p2=buf;\n    inline int getc(){return p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++;}\n    #endif\n    template <typename T>inline void read(T& t){\n\t\tt=0;int f=0;char ch=getc();while (!isdigit(ch)){if(ch=='-')f = 1;ch=getc();}\n\t    while(isdigit(ch)){t=t*10+(ch-48);ch = getc();}if(f)t=-t;\n\t}\n    template <typename T,typename... Args> inline void read(T& t, Args&... args){read(t);read(args...);}\n}\nnamespace out{\n\tchar buffer[1<<21];int p1=-1;const int p2 = (1<<21)-1;\n\tinline void flush(){fwrite(buffer,1,p1+1,stdout),p1=-1;}\n\tinline void putc(const char &x) {if(p1==p2)flush();buffer[++p1]=x;}\n\ttemplate <typename T>void write(T x) {\n\t\tstatic char buf[15];static int len=-1;if(x>=0){do{buf[++len]=x%10+48,x/=10;}while (x);}else{putc('-');do {buf[++len]=-(x%10)+48,x/=10;}while(x);}\n\t\twhile (len>=0)putc(buf[len]),--len;\n\t}\n}\nusing namespace std;\ntemplate<const int mod>\nstruct modint{\n    int x;\n    modint<mod>(int o=0){x=o;}\n    modint<mod> &operator = (int o){return x=o,*this;}\n    modint<mod> &operator +=(modint<mod> o){return x=x+o.x>=mod?x+o.x-mod:x+o.x,*this;}\n    modint<mod> &operator -=(modint<mod> o){return x=x-o.x<0?x-o.x+mod:x-o.x,*this;}\n    modint<mod> &operator *=(modint<mod> o){return x=1ll*x*o.x%mod,*this;}\n    modint<mod> &operator ^=(int b){\n        modint<mod> a=*this,c=1;\n        for(;b;b>>=1,a*=a)if(b&1)c*=a;\n        return x=c.x,*this;\n    }\n    modint<mod> &operator /=(modint<mod> o){return *this *=o^=mod-2;}\n    modint<mod> &operator +=(int o){return x=x+o>=mod?x+o-mod:x+o,*this;}\n    modint<mod> &operator -=(int o){return x=x-o<0?x-o+mod:x-o,*this;}\n    modint<mod> &operator *=(int o){return x=1ll*x*o%mod,*this;}\n    modint<mod> &operator /=(int o){return *this *= ((modint<mod>(o))^=mod-2);}\n\ttemplate<class I>friend modint<mod> operator +(modint<mod> a,I b){return a+=b;}\n    template<class I>friend modint<mod> operator -(modint<mod> a,I b){return a-=b;}\n    template<class I>friend modint<mod> operator *(modint<mod> a,I b){return a*=b;}\n    template<class I>friend modint<mod> operator /(modint<mod> a,I b){return a/=b;}\n    friend modint<mod> operator ^(modint<mod> a,int b){return a^=b;}\n    friend bool operator ==(modint<mod> a,int b){return a.x==b;}\n    friend bool operator !=(modint<mod> a,int b){return a.x!=b;}\n    bool operator ! () {return !x;}\n    modint<mod> operator - () {return x?mod-x:0;}\n\tmodint<mod> &operator++(int){return *this+=1;}\n};\nconst int N=4e6+5;\n\nconst int mod=998244353;\nconst modint<mod> GG=3,Ginv=modint<mod>(1)/3,I=86583718;\nstruct poly{\n\tvector<modint<mod>>a;\n\tmodint<mod>&operator[](int i){return a[i];}\n\tint size(){return a.size();}\n\tvoid resize(int n){a.resize(n);}\n};\nint rev[N];\ninline int ext(int n){int k=0;while((1<<k)<n)k++;return k;}\ninline void init(int k){int n=1<<k;for(int i=0;i<n;i++)rev[i]=(rev[i>>1]>>1)|((i&1)<<(k-1));}\ninline void ntt(poly&a,int k,int typ){\n\tint n=1<<k;\n\tfor(int i=0;i<n;i++)if(i<rev[i])swap(a[i],a[rev[i]]);\n\tfor(int mid=1;mid<n;mid<<=1){\n\t\tmodint<mod> wn=(typ>0?GG:Ginv)^((mod-1)/(mid<<1));\n\t\tfor(int r=mid<<1,j=0;j<n;j+=r){\n\t\t\tmodint<mod> w=1;\n\t\t\tfor(int k=0;k<mid;k++,w=w*wn){\n\t\t\t\tmodint<mod> x=a[j+k],y=w*a[j+k+mid];\n\t\t\t\ta[j+k]=x+y,a[j+k+mid]=x-y;\n\t\t\t}\n\t\t}\n\t}\n\tif(typ<0){\n\t\tmodint<mod> inv=modint<mod>(1)/n;\n\t\tfor(int i=0;i<n;i++)a[i]*=inv;\n\t}\n}\ninline poly one(){poly a;a.a.push_back(1);return a;}\npoly operator +(poly a,poly b){\n\tint n=max(a.size(),b.size());a.resize(n),b.resize(n);\n\tfor(int i=0;i<n;i++)a[i]+=b[i];return a;\n}\npoly operator -(poly a,poly b){\n\tint n=max(a.size(),b.size());a.resize(n),b.resize(n);\n\tfor(int i=0;i<n;i++)a[i]-=b[i];return a;\n}\ninline poly operator*(poly a,poly b){\n\tint n=a.size()+b.size()-1,k=ext(n);\n\ta.resize(1<<k),b.resize(1<<k),init(k);\n\tntt(a,k,1);ntt(b,k,1);for(int i=0;i<(1<<k);i++)a[i]*=b[i];\n\tntt(a,k,-1),a.resize(n);return a;\n}\ninline poly operator*(poly a,modint<mod> b){for(int i=0;i<a.size();i++)a[i]*=b;return a; }\ninline poly operator/(poly a,modint<mod> b){for(int i=0;i<a.size();i++)a[i]/=b;return a; }\ninline poly operator-(poly a){for(int i=0;i<a.size();i++)a[i]=-a[i];return a; }\npoly inv(poly F,int k){\n\tint n=1<<k;F.resize(n);\n\tif(n==1){F[0]=modint<mod>(1)/F[0];return F;}\n\tpoly G,H=inv(F,k-1);\n\tG.resize(n),H.resize(n<<1),F.resize(n<<1);\n\tfor(int i=0;i<n/2;i++)G[i]=H[i]*2;\n\tinit(k+1),ntt(H,k+1,1),ntt(F,k+1,1);\n\tfor(int i=0;i<(n<<1);i++)H[i]=H[i]*H[i]*F[i];\n\tntt(H,k+1,-1),H.resize(n);\n\tfor(int i=0;i<n;i++)G[i]-=H[i];return G;\n}\ninline poly inv(poly a){\n\tint n=a.size();\n\ta=inv(a,ext(n)),a.resize(n);return a;;\n}\ninline poly deriv(poly a){//\u6c42\u5bfc \n\tint n=a.size()-1;\n\tfor(int i=0;i<n;i++)a[i]=a[i+1]*(i+1);\n\ta.resize(n);return a;\n}\ninline poly inter(poly a){//\u6c42\u539f \n\tint n=a.size()+1;a.resize(n);\n\tfor(int i=n;i>=1;i--)a[i]=a[i-1]/i;\n\ta[0]=0;return a;\n}\ninline poly ln(poly a){\n\tint n=a.size();\n\ta=inter(deriv(a)*inv(a));\n\ta.resize(n);return a;\n}\n#define mid (l+r>>1)\ninline poly F(int l,int r,int *a){\n\tpoly G;\n\tif(l==r){G.resize(2);G[0]=1;G[1]=a[l];}\n\telse{\n\t\tG=F(l,mid,a)*F(mid+1,r,a);\n\t}\n\t//printf(\"[%d,%d] \",l,r);for(int i=0;i<G.size();i++)printf(\"%d \",G[i].x);puts(\"\");\n\treturn G;\n}\nint n,m,t,a[N],b[N];\npoly A,B;\nmodint<mod>fac[N];\nsigned main(){\n\tfac[0]=1;for(int i=1;i<N;i++)fac[i]=fac[i-1]*i;\n\tin::read(n,m);\n\tfor(int i=1;i<=n;i++)in::read(a[i]);\n\tfor(int i=1;i<=m;i++)in::read(b[i]);\n\tin::read(t);\n\tA=F(1,n,a);A.resize(t+1);A=ln(A);\n\tA[0]=n;for(int i=1;i<=t;i++)if(i&1)A[i]*=i;else A[i]*=i,A[i]=-A[i];\n\tB=F(1,m,b);B.resize(t+1);B=ln(B);\n\tB[0]=m;for(int i=1;i<=t;i++)if(i&1)B[i]*=i;else B[i]*=i,B[i]=-B[i];\n\t//for(int i=0;i<=t;i++)cout<<A[i].x<<\" \";cout<<endl;\n\t//for(int i=0;i<=t;i++)cout<<B[i].x<<\" \";cout<<endl;\n\tfor(int i=0;i<=t;i++)A[i]/=fac[i];\n\tfor(int i=0;i<=t;i++)B[i]/=fac[i];\n\tpoly ans=A*B;for(int i=0;i<=t;i++)ans[i]=(ans[i]*fac[i]/n)/m;\n\tfor(int i=1;i<=t;i++)cout<<ans[i].x<<endl;\n}\n```",
        "postTime": 1609419817,
        "uid": 174304,
        "name": "jun\u5934\u5409\u5409",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4705 \u3010\u73a9\u6e38\u620f\u3011"
    },
    {
        "content": "# P4705 \u73a9\u6e38\u620f  \n## \u9898\u76ee\u5927\u610f  \n\u7ed9\u4f60\u8fde\u4e2a\u5e8f\u5217 $a_i~b_i$ . \u548c $k$ ,\u5206\u522b\u95ee\u4f60\u4ece $a,b$ \u4e2d\u53d6\u51fa\u4e00\u4e2a\u6570\u4e4b\u548c\u7684 $1\\to k$ \u6b21\u5e42\u7684\u671f\u671b \u3002   \n## $solution$   \n\u9996\u5148\u8fd9\u8fd8\u662f\u8ba9\u6211\u4eec\u6c42   \n\n$$\\frac{1}{nm}\\sum_{i=1}^{n}\\sum_{j=1}^{m}(a_i+b_j)^t~(t\\in[1,k])$$   \n\n\u5982\u679c\u6211\u4eec\u76f4\u63a5\u66b4\u529b\u6c42\u51fa\u6765\u663e\u7136\u590d\u6742\u5ea6\u5f88\u7cdf\u7cd5 $O(n^2)$ \u7ea7\u522b\u7684 \u3002\u6240\u4ee5\u6211\u4eec\u8003\u8651\u6539\u53d8\u4ed6\u7684\u5f62\u5f0f \u3002    \n$$\\frac{1}{nm}\\sum_{i=1}^{n}\\sum_{j=1}^{m}\\sum_{z=0}^{t}C_{t}^{z}~a_i^z~b_j^{t-z}~(t\\in[1,k])$$  \n\n$$\\frac{1}{nm}\\sum_{i=1}^{n}\\sum_{j=1}^{m}\\sum_{t=0}^{z}\\frac{t!}{(t-z)!z!}~a_i^z~b_j^{t-z}$$    \n\n$$\\frac{t!}{nm}\\sum_{i=1}^{n}\\sum_{j=1}^{m}\\sum_{t=0}^{z}\\frac{b_j^{t-z}}{(t-z)!}~\\frac{a_i^z}{z!}~$$     \n\n\u6211\u4eec\u8bbe $A_k=\\sum_{t=0}^{k}a^t$   \n\u5462\u4e48\u591a\u9879\u5f0f $A$ \u4e3a\u5176\u7684\u751f\u6210\u51fd\u6570 \u3002  \n$B$ \u540c\u7406 \u3002   \n\u5462\u4e48\u7b54\u6848\u5c31\u662f   \n\n$$\\frac{t!}{nm}\\sum_{t=0}^{z}\\frac{B_{t-z}}{(t-z)!}~\\frac{A_z}{z!}~$$    \n\n\u8fd9\u5c31\u662f\u4e00\u4e2a\u5377\u79ef\u7684\u5f62\u5f0f\uff0c \u6240\u4ee5\u53ea\u8981\u6211\u4eec\u53ef\u4ee5\u5feb\u901f\u6c42\u51fa $A,B$ \u5462\u4e48\u590d\u6742\u5ea6\u5c31\u662f $O(nlogn)$ \uff0c\u4e0b\u9762\u9664\u9636\u4e58\u6700\u540e\u5904\u7406\u4e00\u4e0b\u5c31\u597d\u4e86\u3002  \n\n\u6211\u4eec\u8981\u6c42   \n$A_k=\\sum_{t=1}^{k}a_i^t=\\frac{1}{1-a_ix}$ \u7684\u751f\u6210\u51fd\u6570 $A$ .    \n$A=\\sum_{i=1}^{n}\\frac{1}{1-a_ix}$  \n\n\u597d\uff0c\u6211\u5c31\u76f4\u63a5\u8bf4\u5957\u8def\u4e86 \u3002     \n\n$ln(1-a_ix)'=\\frac{1}{1-a_ix}$  \n$A=\\sum_{i=1}^{n}ln'(1-a_ix)$   \n\u4f46\u662f $ln'(1\\-a_ix)$ \u65e0\u6cd5\u5feb\u901f\u5408\u5e76 \u3002 \n\u6240\u4ee5\u6211\u4eec\u627e\u4e00\u4e2a\u53ef\u4ee5\u5feb\u901f\u5408\u5e76\u7684 \uff0c\u4e14\u4e0e\u5176\u76f8\u5173 \uff0c\u53ef\u4ee5\u4e92\u76f8\u8f6c\u6362\u7684 \u3002 \n\u6211\u4eec\u8bbe     \n\n$G=\\sum_{i=1}^{n}ln(1-a_ix)'$    \n$G=ln(\\Pi(1-a_ix))'$    \n$G=\\sum_{i=1}^n\\frac{-a_i}{1-a_ix}$  \n$A=Gx+n$\n\n\u663e\u7136\u6211\u4eec\u6c42\u5bfc\u53ea\u662f\u5c06\u5176\u964d\u4f4e\u4e00\u7ef4\uff0c\u6240\u4ee5\u8fd9\u6837\u662f\u4e0d\u5f71\u54cd\u7b54\u6848\u7684 \u3002\u4ed6\u540c\u65f6\u6539\u53d8\u4e86\u7ef4\u5ea6\u7f62\u4e86 \u3002   \n\u540e\u9762\u8fd9\u4e2a $\\Pi(1-a_ix)$ \u6211\u4eec\u76f4\u63a5\u5206\u6cbb\u505a\u51fa\u6765\u597d\u4e86 \uff0c\n\u6700\u540e\u6211\u4eec\u6c42\u51fa $G$ \u518d\u8f6c\u6210 $A$ ,\u5bf9\u4e8e $B$ \u7684\u8bdd\u540c\u7406  \u3002    \n\n\u6700\u540e $A,B$ \u7b2c $i$ \u4f4d $ * inv[i!] $ \u597d\u4e86 \u3002     \n\n\u4ee3\u7801\u4e3a\u4e86\u65b9\u4fbf\u8c03\u8bd5\u6240\u4ee5\u6709\u5f88\u591a\u6570\u7ec4\u90fd\u53ef\u4ee5\u7701\u7565 \uff0c \u6240\u4ee5\u7a7a\u95f4\u53ef\u80fd\u4f1a\u6709\u70b9\u5927 \u3002\n\n* $code$   \n\n```cpp\n\n\n// luogu-judger-enable-o2\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\n#define ll long long \n#define lb(x) (x&(-x))\n#define dec(x,y) (x-y+mod)%mod\n#define add(x,y) (x+y)%mod\n#define mul(x,y) (x*y)%mod  \n#define de() cout<<\"2333\" \nusing namespace std;\nconst ll maxn=2e6+10;\nconst ll mod=998244353,G=3,Gi=332748118;\n\nll poww(ll x,ll k) {\n    ll ans=1;\n    while(k) {\n        if(k&1) ans=mul(ans,x);\n        x=mul(x,x);\n        k>>=1;\n    }\n    return ans;\n}\ninline ll read() {\n    ll data=0,f=1;char c=getchar();\n    while('0'>c||c>'9') {\n        if(c=='-') f=-1;c=getchar();\n    }while('0'<=c&&c<='9') {\n        data=data*10+c-'0';c=getchar(); \n    }return data*f;\n}\nll n;\nll aa[maxn],bb[maxn],cc[maxn],rev[maxn],A[maxn],B[maxn],l,limit;\nvoid NTT(ll *A,ll type,ll len) {\n    l=0,limit=1;\n    while(limit<=len) l++,limit<<=1;\n    for(ll i=0;i<limit;++i) rev[i]=(rev[i>>1]>>1)|((1&i)<<(l-1));\n    for(ll i=0;i<limit;++i) if(rev[i]>i) swap(A[i],A[rev[i]]);\n    for(ll mid=1;mid<limit;mid<<=1) {\n        ll Wn=poww(type==1?G:Gi,(mod-1)/(mid<<1));\n        for(ll R=mid<<1,j=0;j<limit;j+=R) {\n            ll w=1;\n            for(ll k=0;k<mid;++k,w=mul(w,Wn)) {\n                ll x=A[j+k],y=mul(w,A[j+k+mid]);\n                A[j+k]=add(x,y);A[j+k+mid]=dec(x,y);\n            }\n        }\n    }\n    if(type==-1) {\n        ll inv=poww(len<<1,mod-2);\n        for(ll i=0;i<limit;++i) {\n            A[i]=mul(A[i],inv);\n        }\n    }\n}\nvoid Inv(ll *a,ll *b,ll len) {\n    if(len==1) {\n        b[0]=poww(a[0],mod-2);\n        return ;\n    }\n    Inv(a,b,len>>1); \n    for(ll i=0;i<(len<<1);++i) A[i]=B[i]=0;\n    for(ll i=0;i<len;++i) A[i]=a[i],B[i]=b[i];\n    NTT(A,1,len);NTT(B,1,len);\n    for(ll i=0;i<=limit;++i) A[i]=mul(mul(A[i],B[i]),B[i]);\n    NTT(A,-1,len);\n    for(ll i=0;i<len;++i) b[i]=dec(mul(2,b[i]),A[i]);\n}\nll AA[maxn],BB[maxn]; \n\nll inv[maxn];\nvoid Direv(ll *A,ll *B,ll len){\n    for(ll i=1;i<len;++i) B[i-1]=mul(A[i],i);B[len-1]=0; \n}\nvoid Inter(ll *A,ll *B,ll len){\n    for(ll i=1;i<len;++i) B[i]=mul(A[i-1],inv[i]);B[0]=0; \n}\nvoid Ln(ll *a,ll *b,ll len){\n    Direv(a,AA,len),Inv(a,BB,len);\n    NTT(AA,1,len),NTT(BB,1,len);\n    for(ll i=0,l=len<<1;i<l;++i) AA[i]=mul(AA[i],BB[i]);\n    NTT(AA,-1,len),Inter(AA,b,len<<1);\n    for(ll i=0,l=len<<1;i<l;++i) AA[i]=BB[i]=0;\n}\nvoid init(ll limit){\n    for(ll i=0,l=limit<<1;i<=l;++i) inv[i]=poww(i,mod-2);\n}\nll F[maxn];\nll a[maxn],b[maxn],Fa[maxn],Fb[maxn],Ga[maxn],Gb[maxn];\nll iv[maxn],m,K;\nvoid wo(ll n,ll *aa,ll *A) {\n    ll len=1; while(len<n) len<<=1; ll *f[maxn];\n    for(ll i=1;i<=len;++i){f[i]=new ll[lb(i)<<2];// new \u51fd\u6570\u8868\u793a\u52a8\u6001\u5f00\u51falong long \u7c7b\u578b\u7a7a\u95f4\u4e3a (lb(i)<<2)\n    f[i][0]=1; f[i][1]=mod-aa[i];}\n    for(ll l=1;l<len;l<<=1){ \n        for(ll j=l*2;j<=len;j+=l*2){\n        \tNTT(f[j-l],1,l*2); NTT(f[j],1,l*2);\n        \tfor(ll i=0;i<=limit-1;++i) f[j][i]=f[j][i]*f[j-l][i]%mod; NTT(f[j],-1,l*2);\n    \t}\n    }\n    for(ll i=0;i<=n;++i) A[i]=f[len][i];\n    return;\n}\n\nll MAX;\nvoid Mul(ll *A,ll *B,ll *C,ll n) {\n    NTT(A,1,n);\n    NTT(B,1,n);\n    for(ll i=0;i<=limit;++i) C[i]=A[i]*B[i]%mod;\n    NTT(C,-1,n); \n}\nll jc[maxn],ANS[maxn],INV,GGa[maxn],GGb[maxn];\nint main()\n{\n    scanf(\"%lld%lld\",&n,&m);\n    for(ll i=1;i<=n;++i) a[i]=read();\n    for(ll i=1;i<=m;++i) b[i]=read();\n    scanf(\"%lld\",&K);\n    MAX=max(K+1,max(n,m));\n    limit=1;\n    while(limit<=MAX) limit<<=1;\n    init(limit);\n    jc[0]=1;\n    for(ll i=1;i<=limit+1;++i) jc[i]=jc[i-1]*i%mod;\n    INV=poww(n*m%mod,mod-2)%mod;\n    iv[limit+1]=poww(jc[limit+1],mod-2);\n    for(int i=limit;i;i--) iv[i]=iv[i+1]*(i+1)%mod;\n    iv[0]=1; \n    wo(n+1,a,GGa);\n    limit=1;\n    while(limit<=MAX) limit<<=1;\n    Ln(GGa,Ga,limit<<1);limit=1;while(limit<=MAX) limit<<=1;\n    for(ll i=1;i<=limit;++i) Ga[i-1]=1ll*Ga[i]*(i)%mod;\n    Fa[0]=n;\n    for(ll i=1;i<limit;i++){Fa[i]=1ll*(mod-Ga[i-1]+mod)%mod*iv[i]%mod;} \n    wo(m+1,b,GGb);\n    limit=1;\n    while(limit<=MAX) limit<<=1;\n    Ln(GGb,Gb,limit<<1);limit=1;while(limit<=MAX) limit<<=1;\n    for(ll i=0;i<=limit;++i) Gb[i]=Gb[i+1]*(i+1)%mod; \n    Fb[0]=m; \n    for(ll i=1;i<=limit;++i) Fb[i]=1ll*(mod-Gb[i-1]+mod)*iv[i]%mod;//for(ll i=0;i<=limit;++i) cout<<Fb[i]<<\" \";puts(\"\");\n    Mul(Fa,Fb,ANS,limit<<1);\n\n    for(ll i=1;i<=K;++i)ANS[i]=1ll*ANS[i]*INV%mod*jc[i]%mod;\n    for(ll i=1;i<=K;++i) cout<<ANS[i]<<\"\\n\";\n    return 0;\n}\n\n\n\n\n\n```\n\n\n\n\n\n\n\n",
        "postTime": 1563329548,
        "uid": 102786,
        "name": "Sym_Je",
        "ccfLevel": 0,
        "title": "P4705 \u73a9\u6e38\u620f"
    }
]