[
    {
        "content": "\u8bbeF[i]\u8868\u793a\u5c06\u524di\u4e2a\u4eba\u5904\u7406\u5b8c\u6bd5\u6240\u8981\u7528\u7684\u6700\u5c11\u5bdd\u5ba4\u4e2a\u6570\n\n\u8003\u8651\u66b4\u529b\u7684O(n^2)\u7684\u8f6c\u79fb\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u65f6\u95f4\u5927\u591a\u6570\u7528\u5728\u4e86\u5bfb\u627e\u6700\u5c0f\u4e14\u6ee1\u8db3\u6761\u4ef6\u7684\u60c5\u51b5\n\n\u53ef\u4ee5\u8003\u8651\u5206\u60c5\u51b5\u8ba8\u8bba\uff0c\u5bf9\u4e8e\u90fd\u662f\u819c\u62dc\u4e00\u4e2a\u4eba\u7684\u60c5\u51b5\u7528\u6570\u7ec4\u8bb0\u5f55\uff0c\u5bf9\u4e8e\u819c\u62dc\u4eba\u6570\u7684\u7edd\u5bf9\u503c\u4e0d\u5927\u4e8eM\u7684\u60c5\u51b5\uff0c\u5316\u7b80\u5f97\u5230\u4e00\u4e2a\u4e0d\u7b49\u5f0f\uff0c\u7136\u540e\u7528\u7ebf\u6bb5\u6811\uff08\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u6700\u503c\uff09\u8bb0\u5f55\u3002\n\n\u5177\u4f53\u5206\u6790\u770b\u6211\u7684\u4ee3\u7801\u548c\u4ee3\u7801\u5f00\u5934\u7684\u6ce8\u91ca\u3002\n\n```cpp\n\n//j~i\u53ef\u4ee5\u653e\u5728\u4e00\u95f4\u5bbf\u820d(j<=i)  c01[i]\u8868\u793a\u524di\u4e2a\u4eba\u4e2d\u819c\u62dcc01\u7684\u4eba\u6570\uff0cyyy[i]\u540c\u7406\n//\u60c5\u51b51\uff1ac01[j - 1] = c01[i]\n//\u60c5\u51b52\uff1ayyy[j - 1] = c01[i]\n//\u60c5\u51b53\uff1a\u8bbea = yyy[i] - yyy[j - 1]   b = c01[i] - c01[j - 1]\n//       |a - b| <= M\n//\u9700\u6ee1\u8db3\uff1a\u2460a - b <= M \n//        =>(yyy[i] - yyy[j - 1]) - (c01[i] - c01[j - 1]) <=M\n//        =>yyy[i] - yyy[j - 1] - c01[i] + c01[j - 1] <= M\n//        =>c01[j - 1] - yyy[j - 1] <= M + c01[i] - yyy[i] \n//      \u2461b - a <= M\n//        =>yyy[j - 1] - c01[j - 1] <= M + yyy[i] - c01[i]\n//        =>c01[j - 1] - yyy[j - 1] >= c01[i] - yyy[i] - M\n//\u6574\u7406\u53ef\u5f97 \u60c5\u51b53\u7b49\u4ef7\u4e8e\uff1a\n// c01[i] - yyy[i] - M <= c01[j - 1] - yyy[j - 1] <= M + c01[i] - yyy[i]\n\n//\u60c5\u51b51\u548c\u60c5\u51b52\u7528\u6570\u7ec4\u8bb0\u5f55\uff0c\u60c5\u51b53\u7528\u7ebf\u6bb5\u6811\u5904\u7406 \u65f6\u95f4\u590d\u6742\u5ea6O(nlogn) \n\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n\nusing namespace std;\n\nconst size_t Max_N(500050);\nconst int Add(500000);\nconst int INF(0X3F3F3F3F);\n\nvoid Get_Val(int &Ret)\n{\n    Ret = 0;\n    char ch;\n    while ((ch = getchar()), (ch > '9' || ch < '0'))\n        ;\n    do\n    {\n        (Ret *= 10) += ch - '0';\n    }\n    while ((ch = getchar()), (ch >= '0' && ch <= '9'));\n}\n\nstruct node\n{\n    int l, r;\n    int Min;\n};\n\nstruct Segment_Tree\n{\n    node segt[Max_N << 3];\n    void build_tree(const int&, const int&, const int&);\n    void change(const int&, const int&, const int &);\n    int rmq_min(const int&, const int&, const int&);\n    inline\n    void pushup(const int &cur)\n    {\n        segt[cur].Min = min(segt[cur << 1].Min, segt[(cur << 1) | 1].Min);\n    }\n};\nSegment_Tree Space;\n\nvoid Segment_Tree::build_tree(const int &cur, const int &l, const int &r)\n{\n    segt[cur].l = l, segt[cur].r = r, segt[cur].Min = INF;\n    if (l == r)\n        return;\n    int mid = l + ((r - l) >> 1);\n    build_tree(cur << 1, l, mid);\n    build_tree((cur << 1) | 1, mid + 1, r);\n}\n\nvoid Segment_Tree::change(const int &cur, const int &i, const int &x)\n{\n    if (segt[cur].l == i && segt[cur].r == i)\n    {\n        segt[cur].Min = x;\n        return;\n    }\n    int mid = segt[cur].l + ((segt[cur].r - segt[cur].l) >> 1);\n    if (i <= mid)\n        change(cur << 1, i, x);\n    else\n        change((cur << 1) | 1, i, x);\n    pushup(cur);\n}\n\nint Segment_Tree::rmq_min(const int &cur, const int &l, const int &r)\n{\n    if (segt[cur].l == l && segt[cur].r == r)\n        return segt[cur].Min;\n    int mid = segt[cur].l + ((segt[cur].r - segt[cur].l) >> 1);\n    if (r <= mid)\n        return rmq_min(cur << 1, l, r);\n    else\n        if (l > mid)\n            return rmq_min((cur << 1) | 1, l, r);\n        else\n            return min(rmq_min(cur << 1, l, mid), rmq_min((cur << 1) | 1, mid + 1, r));\n}\n\nint N, M;\nint c01[Max_N], yyy[Max_N];\n\nint F[Max_N];\nint c01_dp[Max_N], yyy_dp[Max_N];\nint Minus[Max_N << 1];\n\nvoid init()\n{\n    int v;\n    Get_Val(N), Get_Val(M);\n    for (int i = 1;i <= N;++i)\n    {\n        Get_Val(v);\n        yyy[i] = yyy[i - 1] + (v == 1);\n        c01[i] = c01[i - 1] + (v == 2);\n    }\n}\n\nvoid dp()\n{\n    memset(c01_dp, 0X3F, sizeof(c01_dp));\n    memset(yyy_dp, 0X3F, sizeof(yyy_dp));\n    memset(Minus, 0X3F, sizeof(Minus));\n    Minus[0 + Add] = c01_dp[0] = yyy_dp[0] = F[0] = 0;\n    Space.build_tree(1, -500000, 500000);\n    Space.change(1, 0, 0);\n    int a, b, c;\n    for (int i = 1;i <= N;++i)\n    {\n        a = c01_dp[c01[i]];\n        b = yyy_dp[yyy[i]];\n        c = Space.rmq_min(1, c01[i] - yyy[i] - M, M + c01[i] - yyy[i]);\n        F[i] = min(min(a + 1, b + 1), min(c + 1, F[i - 1] + 1));\n        c01_dp[c01[i]] = min(c01_dp[c01[i]], F[i]);\n        yyy_dp[yyy[i]] = min(yyy_dp[yyy[i]], F[i]);\n        if (F[i] < Minus[c01[i] - yyy[i] + Add])\n        {\n            Minus[c01[i] - yyy[i] + Add] = F[i];\n            Space.change(1, c01[i] - yyy[i], F[i]);\n        }\n    }\n    printf(\"%d\", F[N]);\n}\n\nint main()\n{\n    init();\n    dp();\n    return 0;\n}\n\n```",
        "postTime": 1453699270,
        "uid": 3182,
        "name": "Created_equal1",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2418 \u3010yyy loves OI IV\u3011"
    },
    {
        "content": "emmmm.\n\u7b2c\u4e00\u773c\u5c31\u89c9\u5f97\u8fd9\u9053\u9898\u5e94\u8be5, \u9664\u4e86\u6700\u540e\u4e00\u4e2a\u5bbf\u820d, \u5176\u4f59\u5bbf\u820d\u8981\u4e48\u5168\u662f1\u8981\u4e48\u5168\u662f2, \u8981\u4e481\u548c2\u7684\u6570\u91cf\u7684\u7edd\u5bf9\u503c\u5e94\u8be5\"\u7b49\u4e8e\"m. \u6240\u4ee5\u7528\u4e00\u4e2a\u524d\u7f00\u548c\u76f4\u63a5DP\u5c31O(n)\u4e86? \u4e0d\u7528\u524d\u9762\u7684\u9898\u89e3\u90a3\u4e9b\u6811\u7ed3\u6784. \u8fd9\u9898\u7684\u6570\u636e\u6709\u70b9\u5f31, \u6240\u4ee5\u4e5f\u4e0d\u592a\u4fdd\u8bc1\u7a0b\u5e8f\u662f\u5bf9\u7684. \n\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <map>\n#include <cstdio>\n#include <unordered_map>\nusing namespace std;\n\nconst int maxn = 500000 + 7;\nint n, m;\nint data[maxn], f[maxn], s1[maxn], s2[maxn];\n\nunordered_map<int, int> mp;\nvoid update(int u, int x) {\n    if (mp.count(u) == 0) {\n        mp[u] = x;\n    }\n    else mp[u] = min(mp[u], x);\n}\n\nconst int inf = 2147483646;\nint query(int u) {\n    if (mp.count(u) == 0) return inf;\n    return mp[u];\n}\n\nint main() {\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 1; i <= n; i++) {\n        scanf(\"%d\", &data[i]);\n    }\n    for (int i = 1; i <= n; i++) {\n        s1[i] += s1[i - 1] + (data[i] == 1);\n        s2[i] += s2[i - 1] + (data[i] == 2);\n    }\n    int last1 = 0, last2 = 0;\n    f[0] = 0;\n    update(0, 0);\n    for (int i = 1; i <= n; i++) {\n        if (data[i] == 1) {\n            f[i] = f[last2] + 1;\n            last1 = i;\n        }\n        else if (data[i] == 2) {\n            f[i] = f[last1] + 1;\n            last2 = i;\n        }\n        f[i] = min(f[i], min(query((s1[i] - s2[i]) - m), query((s1[i] - s2[i]) + m)) + 1);\n        update(s1[i] - s2[i], f[i]);\n    }\n    \n    int ans = inf;\n    if (abs(s1[n] - s2[n]) <= m) ans = 1;\n    else {\n        for (int i = 1; i <= n; i++) {\n            if (s2[n] - s2[i] == 0) ans = min(ans, f[i] + 1);\n            if (s1[n] - s1[i] == 0) ans = min(ans, f[i] + 1);\n            if (abs((s1[i] - s2[i]) - (s1[n] - s2[n])) <= m) ans = min(ans, f[i] + 1);\n        }\n    }\n    cout << ans << endl;\n    return 0;\n}\n\n```",
        "postTime": 1522762985,
        "uid": 44299,
        "name": "acesrc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2418 \u3010yyy loves OI IV\u3011"
    },
    {
        "content": "\u7531\u9898\u610f\u53ef\u77e5\uff0c\u53ea\u6709\u4e24\u79cd\u4eba\uff08\uff1f\uff09\uff0c\u4e0d\u59a8\u628a\u652f\u6301yyy\u795e\u4ed9\u7684\u4eba\u770b\u6210$-1$\uff0c\u628a\u652f\u6301c01\u795e\u4ed9\u7684\u4eba\u770b\u6210$1$\n\n\u8bbe\uff1a$\\large sum_i:$\u524d$i$\u4e2a\u4eba\u503c\u7684\u524d\u7f00\u548c\n\n\u6839\u636e\u5b9a\u4e49\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c$L$\u5230$R$\u4e4b\u95f4\u4e24\u79cd\u4eba\u6570\u7684\u5dee\u4e3a$\\large \\left | sum_R-sum_{L-1} \\right |$\n\n\u4e0d\u96be\u53d1\u73b0\u8fd9\u9898\u662f\u4e2aDP\uff0c\u8003\u8651\u5982\u4f55\u5b9a\u4e49\u8f6c\u79fb\u65b9\u7a0b\n\n\u8bbe\uff1a$\\large f_i:$\u524d$i$\u4e2a\u4eba\u6700\u5c11\u5206\u51e0\u7ec4\n\n\u8f6c\u79fb\u65b9\u7a0b\u975e\u5e38\u663e\u7136\uff1a\n\n$\\Large f_i=\\min(f_j)+1\\;[\\; \\left | sum_R-sum_L \\right |\\leq M]$\n\n\u6734\u7d20\u7684$O(n^2)DP$\u80af\u5b9a\u662f\u8fc7\u4e0d\u53bb\uff0c\u63a5\u4e0b\u6765\u8003\u8651\u5982\u4f55\u4f18\u5316\n\n\u4e0d\u59a8\u5c06\u5f0f\u5b50\u62c6\u5f00\uff0c\u5f97\uff1a\n\n$$\\Large [\\; \\left | sum_R-sum_L \\right |\\leq M]$$\n\n- \u5982\u679c$\\large sumR \\leq sumL$,\u5219$\\large sum_L\\leq sum_R+M$\n\n- \u5982\u679c$\\large sumR > sumL$,\u5219$\\large sum_L\\geq  sum_R-M$\n\n\u5373\uff1a\n\n$$\\Large sum_R-M\\leq sum_L\\leq sum_R+M$$\n\n\u4e5f\u5c31\u662f\u8bf4$\\large f_i$\u7b49\u4e8e\u5728\u6240\u6709\u6ee1\u8db3\u8fd9\u4e2a\u5f0f\u5b50\u7684$L$\u4e2d\u53d6$f_L$\u6700\u5c0f\u7684\u518d$+1$\n\n\u6240\u4ee5\u8bf4\u5982\u4f55\u627e\u6709\u54ea\u4e9b$L$\u6ee1\u8db3\u8fd9\u4e2a\u5f0f\u5b50\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u628a$sum_i$\u5f53\u6210$i$\u7684\u5750\u6807\uff0c\u7136\u540e\u7528\u4e00\u4e2a\u6570\u7ec4\u6765\u5b58\n\n\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\u4f60\u60f3\u5230\u4e86\u4ec0\u4e48\u5462\uff1f\n\n\u6ca1\u9519\uff0c\u7ebf\u6bb5\u6811\u53ef\u4ee5\u5b8c\u7f8e\u652f\u6301\n\n\u4e0d\u8fc7\u8fd9\u91cc\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a$sum_i$\u53ef\u80fd\u4f1a\u51fa\u73b0\u8d1f\u6570\uff0c\u4e5f\u5c31\u4f1a\u6570\u7ec4\u8d8a\u754c\u3002\u56e0\u4e3a$n$\u4e3a$500000$,\u6240\u4ee5$sum_i$\u6700\u5c0f\u503c\u4e3a$-500000$\uff0c\u56e0\u4e3a\u8fd8\u6709$-M$\u7684\u64cd\u4f5c\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6574\u4f53\u5411\u53f3\u79fb$700000$\uff0c\u8fd9\u6837\u5c31\u907f\u514d\u4e86\u6570\u7ec4\u8d8a\u754c\n\n## code\n```\n#include<bits/stdc++.h>\n#define maxn 2000005\nusing namespace std;\nconst int T=7e5,INF=1<<30;\nint n,Now,LL,RR,L,R,y,x,Ans,f[maxn],sum[maxn],M,a[maxn],Lst;\nstruct lc{\n\tint L,R,x,k;\n}tree[8000005],Tree[maxn];\nstruct IO{\n\tstatic const int S=1<<21;\n\tchar buf[S],*p1,*p2;int st[105],Top;\n\t~IO(){clear();}\n\tinline void clear(){fwrite(buf,1,Top,stdout);Top=0;}\n\tinline void pc(const char c){Top==S&&(clear(),0);buf[Top++]=c;}\n\tinline char gc(){return p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++;}\n\tIO&operator >> (char&x){while(x=gc(),x==' '||x=='\\n');return *this;}\n\ttemplate<typename T> IO&operator >> (T&x){\n\t\tx=0;bool f=0;char ch=gc();\n\t\twhile(ch<'0'||ch>'9'){if(ch=='-') f^=1;ch=gc();}\n\t\twhile(ch>='0'&&ch<='9') x=(x<<3)+(x<<1)+ch-'0',ch=gc();\n\t\tf?x=-x:0;return *this;\n\t}\n\tIO&operator << (const char c){pc(c);return *this;}\n\ttemplate<typename T> IO&operator << (T x){\n\t\tif(x<0) pc('-'),x=-x;\n\t\tdo{st[++st[0]]=x%10,x/=10;}while(x);\n\t\twhile(st[0]) pc('0'+st[st[0]--]);return *this;\n\t}\n}fin,fout;\ninline int min(int a,int b){return a<b? a:b;}\ninline int max(int a,int b){return a>b? a:b;}\ninline void build(int k,int L,int R){\n\ttree[k].L=L,tree[k].R=R;\n\tif (L==R){tree[k].k=tree[k].x=INF;return;}\n    int mid=L+R>>1;\n    build(k<<1,L,mid);build(k<<1|1,mid+1,R);\n    tree[k].k=tree[k].x=INF;\n}\ninline void Build(int k,int L,int R){\n\tTree[k].L=L,Tree[k].R=R;\n\tif (L==R){Tree[k].k=Tree[k].x=INF;return;}\n    int mid=L+R>>1;\n    Build(k<<1,L,mid);Build(k<<1|1,mid+1,R);\n    Tree[k].k=Tree[k].x=INF;\n}\ninline void down(int k){\n\ttree[k<<1].x=min(tree[k<<1].x,tree[k].k);\n\ttree[k<<1].k=min(tree[k<<1].k,tree[k].k);\n\ttree[k<<1|1].x=min(tree[k<<1|1].x,tree[k].k);\n\ttree[k<<1|1].k=min(tree[k<<1|1].k,tree[k].k);\n\ttree[k].k=INF;\n}\ninline void Down(int k){\n\tTree[k<<1].x=min(Tree[k<<1].x,Tree[k].k);\n\tTree[k<<1].k=min(Tree[k<<1].k,Tree[k].k);\n\tTree[k<<1|1].x=min(Tree[k<<1|1].x,Tree[k].k);\n\tTree[k<<1|1].k=min(Tree[k<<1|1].k,Tree[k].k);\n\tTree[k].k=INF;\n}\ninline void Get(int k){\n\tif (tree[k].L>=L&&tree[k].R<=R){Now=min(Now,tree[k].x);return;}\n\tdown(k);\n\tint mid=tree[k].L+tree[k].R>>1;\n\tif (L<=mid) Get(k<<1);\n\tif (R>mid) Get(k<<1|1);\n\ttree[k].x=min(tree[k<<1].x,tree[k<<1|1].x);\n}\ninline void GET(int k){\n\tif (Tree[k].L>=L&&Tree[k].R<=R){Now=min(Now,Tree[k].x);return;}\n\tDown(k);\n\tint mid=Tree[k].L+Tree[k].R>>1;\n\tif (L<=mid) GET(k<<1);\n\tif (R>mid) GET(k<<1|1);\n\tTree[k].x=min(Tree[k<<1].x,Tree[k<<1|1].x);\n}\ninline void change(int k){\n\tif (tree[k].L==tree[k].R&&tree[k].L==x){tree[k].x=min(tree[k].x,y);tree[k].k=min(tree[k].k,y);return;}\n\tdown(k);\n\tint mid=tree[k].L+tree[k].R>>1;\n\tif (x<=mid) change(k<<1);\n\telse change(k<<1|1);\n\ttree[k].x=min(tree[k<<1].x,tree[k<<1|1].x);\n}\ninline void Change(int k){\n\tif (Tree[k].L==Tree[k].R&&Tree[k].L==x){Tree[k].x=min(Tree[k].x,y);Tree[k].k=min(Tree[k].k,y);return;}\n\tDown(k);\n\tint mid=Tree[k].L+Tree[k].R>>1;\n\tif (x<=mid) Change(k<<1);\n\telse Change(k<<1|1);\n\tTree[k].x=min(Tree[k<<1].x,Tree[k<<1|1].x);\n}\nint main(){\n\tfreopen(\"wyy.in\",\"r\",stdin);\n\tfreopen(\"wyy.out\",\"w\",stdout);\n\tfin>>n>>M;sum[0]=LL=RR=T;\n\tfor (int i=1;i<=n;i++){\n\t\tfin>>a[i];sum[i]=sum[i-1];f[i]=INF;\n\t\tif (a[i]==1) sum[i]--;\n\t\telse sum[i]++; \n\t\tLL=min(LL,sum[i]),RR=max(RR,sum[i]);\n\t}\n\tbuild(1,LL,RR);Build(1,0,n);Change(1);\n    for (int i=1;i<=n;i++){\n    \tif (abs(T-sum[i])<=M){\n\t    \tf[i]=0;\n            if (a[i]!=a[i-1]) Lst=i-1;\n\t\t}\n\t\telse{\n\t\t\tNow=INF;\n        \tif (a[i]!=a[i-1]) Lst=i-1;\n    \t\tL=Lst,R=i-1,GET(1);\n\t\t\tL=sum[i]-M,R=M+sum[i];Get(1);\n        \tif (Now!=INF) f[i]=Now;\n        \telse f[i]=f[i-1];\n    \t}\n\t\tf[i]++;x=sum[i],y=f[i];\n    \tchange(1);x=i;Change(1);\n\t}\n\tfout<<f[n];\n\treturn 0;\n}\n```\n",
        "postTime": 1591095124,
        "uid": 108047,
        "name": "LlLlCc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2418 \u3010yyy loves OI IV\u3011"
    },
    {
        "content": "\u611f\u89c9\u8fd8\u662f\u6709\u70b9\u6de6\uff0c$WA$ \u4e86\u65e0\u6570\u53d1\u624d\u8fc7\u6389\u4e86\u8fd9\u9053\u9898\u3002    \n\u8fd9\u9053\u9898\u9996\u5148\u6211\u4eec\u4e0d\u96be\u770b\u51fa\u662f\u4e00\u4e2a $dp$ \uff0c\u800c\u4e14\u662f\u4e2a\u5f88\u7ecf\u5178\u7684\u5206\u7ec4 $dp$ \uff0c\u6211\u4eec\u53ea\u8981\u6839\u636e\u9898\u610f\u6a21\u62df\u4e00\u4e0b\u8fd9\u4e2a $dp$ \u5373\u53ef\uff0c\u6a59 $dp$ \u4e0d\u60f3\u7ec6\u8bb2\u3002  \n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n ^ 2)$ \u4ea4\u4e0a\u53bb\u540e\u4f60\u4f1a\u4e0d\u51fa\u610f\u5916\u5730 $T$ \u6389\u4e03\u4e2a\u70b9\u3002  \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nconst int Len = 5e5 + 5;\nint n,m,dp[Len],a[Len],sum[Len][3],num_two,num_one;\nint Iabs(int x){return x >= 0 ? x : -x;}\nbool check(int l,int r)\n{\n\tnum_one = sum[r][1] - sum[l - 1][1] , num_two = sum[r][2] - sum[l - 1][2];\n\tif(num_one == (r - l + 1) || (num_two == (r - l + 1)) || Iabs(num_one - num_two) <= m) return true;\n\treturn false; \n}\nint main()\n{\n\tscanf(\"%d %d\",&n,&m);\n\tfor(int i = 1 ; i <= n ; i ++)\n\t{\n\t\tint x;scanf(\"%d\",&x);\n\t\tsum[i][1] = sum[i - 1][1] + (x == 1);\n\t\tsum[i][2] = sum[i - 1][2] + (x == 2);\n\t}\n\tmemset(dp , 0x3f , sizeof dp);\n\tdp[0] = 0;\n\tfor(int i = 1 ; i <= n ; i ++)\n\t{\n\t\tfor(int j = 0 ; j < i ; j ++)\n\t\t\tif(check(j + 1 , i)) dp[i] = min(dp[i] , dp[j] + 1);\n\t}\n\tprintf(\"%d\\n\",dp[n]);\n\treturn 0;\n}\n```    \n\u4e8e\u662f\u6211\u4eec\u8003\u8651\u4f18\u5316\u8fd9\u4e2a $dp$ \uff0c\u5f88\u660e\u663e\u6211\u4eec\u53ef\u4ee5\u5bf9\u6211\u4eec\u7684 $check$ \u90e8\u5206\u8fdb\u884c\u4e00\u5b9a\u7684\u4f18\u5316\uff1a    \n- \u5bf9\u4e8e\u5168\u90e8\u4e3a $1$ \u6216\u8005\u5168\u90e8\u4e3a $2$ \u7684\u60c5\u51b5\u76f4\u63a5\u7ef4\u62a4\u5373\u53ef\uff0c\u8fd9\u91cc\u53ef\u4ee5\u518d\u5f00\u4e2a\u7ebf\u6bb5\u6811\uff0c\u4ea6\u6216\u53ef\u4ee5\u76f4\u63a5\u52a8\u6001\u7ef4\u62a4\uff0c\u6211\u5c31\u6ca1\u6709\u518d\u5f00\u7ebf\u6bb5\u6811\u4e86\u3002    \n- \u5bf9\u4e8e\u6bd4\u8f83\u68d8\u624b\u7684\u4eba\u6570\u76f8\u5dee\u7684\u7edd\u5bf9\u503c\u63a7\u5236\u5728 $m$ \u4ee5\u5185\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u5f53\u6211\u4eec\u6b64\u65f6 $dp$ \u8f6c\u79fb\u5230\u7b2c $i$ \u4f4d\u65f6\uff0c\u6211\u4eec\u7684\u53f3\u7aef\u70b9\u662f\u786e\u5b9a\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u628a\u6211\u4eec\u7684\u5f0f\u5b50\u5c55\u5f00\uff0c\u5373 $sum[r][1] - sum[r][2] + sum[l - 1][2] - sum[l - 1][1]$ \uff0c\u5f53\u524d\u53ef\u4ee5\u8ba1\u7b97 $sum[r][1] - sum[r][2]$ \uff0c\u6240\u4ee5\u6211\u4eec\u7ef4\u62a4\u540e\u9762\u8fd9\u4e00\u5768\u4e1c\u897f\u6253\u5165\u7ebf\u6bb5\u6811\u7136\u540e\u901a\u8fc7\u7edd\u5bf9\u503c\u7684\u6982\u5ff5\u8ba1\u7b97\u51fa\u67e5\u8be2\u533a\u95f4\u67e5\u8be2\u6700\u5c0f\u503c\u5373\u53ef\u3002\n  \n \u53ef\u80fd\u8fd8\u662f\u6709\u70b9\u4e0d\u597d\u7406\u89e3\uff0c\u6240\u4ee5\u8fd9\u91cc\u4ee5\u6837\u4f8b\u4e3e\u4e2a\u4f8b\u5b50\uff1a    \n```\n5 1\n1\n1\n2\n2\n1\n```\n\u4e3a\u4e86\u65b9\u4fbf\u884c\u6587\uff0c\u4ee4 $sum[r][1] - sum[r][2] = calc(r)$ \uff0c$sum[l][2] - sum[l][1] = Tot(l)$ \u3002  \n\u521d\u59cb\u5316 $dp[0] = 0$ \uff0c\u63a5\u7740\u5faa\u73af $1 \\sim n$\uff1a    \n- \u8f6c\u79fb\u5230\u7b2c\u4e00\u4e2a\u6570\uff0c$calc(i) = 1$ \uff0c\u9700\u8981\u67e5\u8be2\u7684 $Tot()$ \u533a\u95f4\u4e3a $-2 \\sim 0$ \uff1b     \n- \u8f6c\u79fb\u5230\u7b2c\u4e8c\u4e2a\u6570\uff0c$calc(i) = 2$ \uff0c\u9700\u8981\u67e5\u8be2\u7684 $Tot()$ \u533a\u95f4\u4e3a $-3 \\sim -1$ \uff1b   \n- \u8f6c\u79fb\u5230\u7b2c\u4e09\u4e2a\u6570\uff0c$calc(i) = 1$ \uff0c\u540c\u7b2c\u4e00\u4e2a\u6570\u7684\u67e5\u8be2\u533a\u95f4\uff1b    \n- \u8f6c\u79fb\u5230\u7b2c\u56db\u4e2a\u6570\uff0c$calc(i) = 0$ \uff0c\u9700\u8981\u67e5\u8be2\u7684 $Tot()$ \u533a\u95f4\u4e3a $-1 \\sim 1$ \uff1b    \n- \u8f6c\u79fb\u5230\u7b2c\u4e94\u4e2a\u6570\uff0c$calc(i) = 1$ \uff0c\u540c\u7b2c\u4e00\u4e2a\u6570\u7684\u67e5\u8be2\u533a\u95f4\u3002    \n\n\u81f3\u4e8e\u8fd9\u4e2a\u67e5\u8be2\u7684\u533a\u95f4\u6d89\u53ca\u5230\u8d1f\u6570\uff0c\u518d~~\u77aa~~\u4e00\u4e0b\u539f\u9898\uff0c\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\u6211\u4eec\u6b64\u65f6\u7ef4\u62a4\u7684\u533a\u95f4\u7684\u503c\u57df\u53ea\u4f1a\u5728 $-n \\sim n$\u4e4b\u95f4\uff0c\u79bb\u6563\u4e00\u4e0b\u5c31\u597d\u4e86\u3002    \n\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u7b2c\u4e8c\u79cd\u64cd\u4f5c\uff0c\u6211\u4eec\u5f00\u4e24\u4e2a\u53d8\u91cf\u7ef4\u62a4\u4e00\u4e0b\u5f53\u524d\u7684\u8fde\u7eed\u533a\u95f4\u662f\u54ea\u79cd\u6570\uff0c\u4ee5\u53ca\u533a\u95f4\u7684\u6700\u5c0f $dp$ \u503c\u662f\u591a\u5c11\uff0c\u5982\u679c\u5f53\u524d\u8fd9\u4e2a\u6570\u5df2\u7ecf\u6253\u7834\u4e86\u8fde\u7eed\u7684\u533a\u95f4\u5c31\u5220\u9664\u539f\u5148\u6570\u636e\u91cd\u65b0\u7ef4\u62a4\uff0c\u5426\u5219\u5c31\u76f4\u63a5\u7ef4\u62a4\u6700\u5c0f\u503c\u5373\u53ef\u3002   \n\u8fd9\u9053\u9898\u8bb2\u5230\u8fd9\u91cc\u5dee\u4e0d\u591a\u5df2\u7ecf\u5b8c\u4e86\uff0c\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u51e0\u4e2a\u7ec6\u8282\uff1a    \n1.\u7ebf\u6bb5\u6811\u7a7a\u95f4\u5f00\u516b\u500d\uff0c\u56e0\u4e3a\u4f60\u6b64\u65f6\u79bb\u6563\u51fa\u6765\u540e\u6709 $2n + 1$ \u4e2a\u6570\uff1b    \n2.\u7ef4\u62a4\u4e00\u4e8c\u64cd\u4f5c\u65f6\uff0c\u4e5f\u8bb8\u4f60\u4f1a\u4e60\u60ef\u6027\u5730\u8ba4\u4e3a\u8fd9\u4e2a $dp$ \u503c\u662f\u4e25\u683c\u4e0d\u4e0b\u964d\u7684\uff0c\u5b9e\u9645\u4e0a\u4f60\u968f\u624b\u753b\u51e0\u4e2a\u6837\u4f8b\u5c31\u53ef\u4ee5\u628a\u8fd9\u4e2a\u7ed3\u8bba\u63a8\u7ffb\uff0c\u6240\u4ee5\u4e00\u5b9a\u8981\u7ef4\u62a4\u533a\u95f4\u6700\u5c0f\u503c\u3002   \n3.\u7531\u4e8e \u6211\u4eec\u8ba1\u7b97\u51fa\u6765\u7684\u67e5\u8be2\u533a\u95f4\u6709\u53ef\u80fd\u4f1a\u8dd1\u51fa $-n \\sim n$ \uff0c\u6240\u4ee5\u67e5\u8be2\u4e4b\u524d\u7f29\u4e00\u4e0b\u8fd9\u4e2a\u533a\u95f4\u63a7\u5236\u5728 $-n \\sim n$ \u4e4b\u95f4\uff0c\u4e0d\u7136\u6709\u53ef\u80fd\u8d8a\u754c\u3002   \n\n\u9644\u4ee3\u7801\uff0c\u5e2e\u52a9\u4e00\u4e0b\u8c03\u4e0d\u8fc7\u8fd9\u9053\u9898\u7684\u540c\u5fd7\u4eec\uff0c\u5176\u5b9e\u9898\u4e0d\u96be\uff0c\u7ec6\u8282\u591a\uff0c\u8bc4\u4e2a\u7d2b\u9898\u4e5f\u8bf4\u5f97\u8fc7\u53bb\u3002    \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n//\u5355\u72ec\u7ef4\u62a4\u5168\u662f\u4e00\u79cd\u4eba\u7684\u60c5\u51b5\n//\u6211\u4eec\u628a\u6211\u4eec\u7684\u51cf\u6cd5\u5c55\u5f00\u4e00\u4e0b\uff0c\u53d1\u73b0\u6211\u4eec\u53ea\u8981\u7ef4\u62a4\u4e00\u4e0b\u76f8\u5bf9\u5dee\u503c\u5c31\u884c\u4e86\uff0c+1\u7684\u8bdd\u7ebf\u6bb5\u6811\u91cc\u9762\u7ef4\u62a4\u7684\u503c\u5c31\u9700\u8981-1\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5f00\u4e00\u4e2a2 * n\u7684\u7ebf\u6bb5\u6811\uff0c\u7136\u540e\u79bb\u6563\u4e00\u4e0b\u67e5\u8be2\u5373\u53ef\u3002 \nusing namespace std;\nconst int Len = 5e5 + 5;\nint num_c[Len],n,m,dp[Len],a[Len],sum[Len][3],num_two,num_one,now_c[Len];\nint ans[Len << 3];\nint Iabs(int x){return x >= 0 ? x : -x;}\nint deC(int num){return num + n + 1;}\nint ls(int x){return x << 1;}\nint rs(int x){return x << 1 | 1;}\nvoid push_up(int x){ans[x] = min(ans[ls(x)] , ans[rs(x)]);}\nvoid build(int p,int l,int r)\n{\n\tans[p] = n + 1;\n\tif(l == r) return;\n\tint mid = (l + r) >> 1;\n\tbuild(ls(p) , l , mid);\n\tbuild(rs(p) , mid + 1 , r);\n}\nvoid update(int p,int l,int r,int idx,int w)\n{\n\tif(l == r) \n\t{\n\t\tans[p] = min(ans[p] , w);\n\t\treturn;\n\t}\n\tint mid = (l + r) >> 1;\n\tif(idx <= mid) update(ls(p) , l , mid , idx , w);\n\tif(idx > mid) update(rs(p) , mid + 1 , r , idx , w);\n\tpush_up(p);\n}\nint query(int p,int l,int r,int nl,int nr)\n{\n\tif(nl <= l && nr >= r) return ans[p];\n\tint mid = (l + r) >> 1;int res = n + 1;\n\tif(nl <= mid) res = min(res , query(ls(p) , l , mid , nl , nr));\n\tif(nr > mid) res = min(res , query(rs(p) , mid + 1 , r , nl , nr));\n\treturn res;\n}\nint main()\n{\n\tscanf(\"%d %d\",&n,&m);\n\tint lim = (n << 1) + 1;\n\tfor(int i = 1 ; i <= n ; i ++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tsum[i][1] = sum[i - 1][1] + (a[i] == 1);\n\t\tsum[i][2] = sum[i - 1][2] + (a[i] == 2);\n\t}\n\tfor(int i = 0 ; i <= n ; i ++) num_c[i] = sum[i][2] - sum[i][1];\n\tbuild(1 , 1 , lim);\n\tmemset(dp , 0x3f , sizeof dp);\n\tdp[0] = 0;\n\tupdate(1 , 1 , lim , deC(num_c[0]) , dp[0]);\n\tint lst = 0 , preans = 0;\n\tfor(int i = 1 ; i <= n ; i ++)\n\t{\t\n\t\tint nums = sum[i][1] - sum[i][2];\n\t\tint l = -m - nums , r = m - nums;\n\t\tl = deC(max(l , -n)) , r = deC(min(r , n));\n\t\tif(lst != a[i])\n\t\t{\n\t\t\tlst = a[i];\n\t\t\tpreans = dp[i - 1];\n\t\t}\n\t\tdp[i] = min(preans , query(1 , 1 , lim , l , r)) + 1;\n\t\tupdate(1 , 1 , lim , deC(num_c[i]) , dp[i]);\n\t\tpreans = min(preans , dp[i]);\n\t\t//printf(\"%d %d %d %d\\n\",lst,lstidx,preans,dp[i]);\n\t}\n\tprintf(\"%d\\n\",dp[n]);\n\treturn 0;\n}\n```",
        "postTime": 1606206385,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2418 \u3010yyy loves OI IV\u3011"
    },
    {
        "content": "\u770b\u8fc7\u51e0\u4f4dac\u672c\u9898\u7684\u9898\u89e3\u540e\uff0c\u6211\u53ea\u80fd\u8bf4\u4ee3\u7801\u770b\u4ed6\u4eec\u7684\uff0c\u6211\u6765\u628a\u601d\u8def\u8bf4\u5f97\u660e\u786e\u4e00\u4e9b\u3002\n\n\u7eaf\u533a\u95f4\u52a8\u89c4\u53ea\u80fd30\u5206\uff0c\u6570\u636e\u7ed3\u6784\u7684\u9650\u5236\uff1b\u66b4\u529b70\u5206\uff08\u6211\u60f3\u5410\u8840\uff09\uff1b\u73b0\u5728\u8bf4\u4e00\u4e0bac\u7684\u7ebf\u6bb5\u6811+\u5355\u8c03\u5b50\u5e8f\u5217+\u533a\u95f4\u52a8\u89c4\uff08\u6ce8\u610f\u4e0d\u662f\u5355\u8c03\u6700\u957f\u5b50\u5e8f\u5217\uff09\u3002\n\n\u9996\u5148\u5efa\u6811\uff0c\u67e5\u8be2\uff0c\u4fee\u6539\u4e09\u4e2a\u51fd\u6570\u5fc5\u987b\u6253\u4e0a\uff0c\u518d\u52a0\u4e0a\u6bcf\u4e2a\u533a\u95f4\u7684\u4ef7\u503c\u3002\u603b\u533a\u95f4\u7684\u4ef7\u503c\u4e3a\u8be5\u6b21\u904d\u5386\u6240\u5f97\u5230\u7684\u7684\u533a\u95f4\u6240\u5177\u6709\u7684**\u8f83**\u5c0f\u623f\u95f4\u6570\uff0c\u8fd9\u6837\u5c31\u65b9\u4fbf\u4e86\u63a5\u4e0b\u6765\u7684\u64cd\u4f5c\uff0c\u56e0\u4e3a\u6211\u4eec\u6bcf\u6b21\u5148\u4fee\u6539\u603b\u533a\u95f4\u7684\u4ef7\u503c\uff0c\u518d\u7528\u67e5\u8be2\u51fd\u6570\u627e\u51fa\u5df2\u77e5\u7684**\u6700**\u5c0f\u4ef7\u503c\u5e76\u7528\u4e00\u4e2a\u6570\u7ec4\u8fdb\u884c\u8bb0\u5f55\uff0c\u8be5\u6570\u7ec4\u7b2ci\u9879\u5373\u4e3a\u4ece1\u5230i\u7684\u533a\u95f4\u6700\u5c0f\u4ef7\u503c\uff08\u6240\u8c13\u7684\u7684\u6700\u5c0f\u4ef7\u503c\u5b9e\u9645\u4e0a\u662f[1,1][1,2][1,3][1,4]...\u4e2d\u6700\u5c0f\u7684\u8f83\u5c0f\u4ef7\u503c\uff0c\u6765\u6bd4\u8f83\u662f\u5426\u5e94\u8be5\u5bf9\u8bb0\u5f55\u8fdb\u884c\u5927\u89c4\u6a21\u7684\u66f4\u65b0\uff09\u3002\n\n\u5efa\u5b8c\u6811\u540e\uff0c\u8bb0\u5f55\u4e0b\u6bcf\u4e2a\u533a\u95f4\uff08[1,1][1,2][1,3]...\uff09\u7684\u4e24\u79cd\u4eba\u6570\u4e4b\u5dee\uff0c\u5728\u8f93\u5165\u65f6\u627e\u51fa\u5355\u8c03\u5e8f\u5217\u5e76\u4ee5\u6b64\u8fdb\u884c\u66f4\u65b0\uff08\u6b64\u5904\u7528\u5230\u533a\u95f4\u52a8\u89c4\u7684\u601d\u60f3\uff0c[1,i]\u533a\u95f4\u6700\u5c0f\u623f\u95f4\u6570\u7531[1,j]\u7684\u6700\u5c0f\u623f\u95f4\u6570\uff08\u8fd9\u662f\u771f\u7684\u6700\u5c0f\u623f\u95f4\u6570\uff09\u52a0\u4e0a\u786e\u4fdd\u4e3a\u4e00\u4e2a\u96c6\u5408\u7684[j+1,i]\uff08[1,i]==min([1,j]+1,[1,i]),j<i\uff09\u63a8\u51fa\uff09\uff0c\u6bcf\u6b21\u7528\u6700\u5c0f\u4ef7\u503c\u4e0e[1,i]\u63a8\u51fa\u65b0\u7684\u6700\u5c0f\u4ef7\u503c\uff08\u4fdd\u8bc1\u6700\u5c0f\u4ef7\u503c\u4e0d\u4f1a\u5e72\u6270\u5230\u533a\u95f4\u4e2d[1,j]\u4e0e[j,i]\u7684\u5408\u5e76\uff0c\u56e0\u4e3a[j,i]\u53ef\u80fd\u5c1a\u672a\u63a8\u51fa\u6700\u5c0f\u623f\u95f4\u6570\uff09\uff0c\u6700\u540e\u6ce8\u610f\u8f93\u51fa\u8fd9\u4e2a\u6570\u7ec4\u7684\u6700\u540e\u4e00\u9879\u800c\u975e\u8bb0\u5f55\u7684\u6700\u5c0f\u4ef7\u503c\uff0c\u56e0\u4e3a\u6574\u4e2a\u533a\u95f4\u7684\u672b\u7aef\u53ef\u80fd\u5e76\u4e0d\u6ee1\u8db3[j+1,i]\u5c0f\u4e8e\u6700\u5c0f\u4ef7\u503c\u3002\n",
        "postTime": 1488809177,
        "uid": 27138,
        "name": "mrkrnblsa",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2418 \u3010yyy loves OI IV\u3011"
    },
    {
        "content": "\u95ee\u9898\u7b80\u8ff0\uff1a\n\n\u7ed9\u4f60N\u4e2a\u6570\uff0c\u5b83\u4eec\u662f1\u62162\uff0c\u8981\u6c42\u5206\u51fa\u6700\u5c11\u96c6\u5408\uff0c\u4f7f\u6bcf\u4e2a\u96c6\u5408\u4e2d\u8981\u4e48\u53ea\u67091\u6216\u53ea\u67092\uff0c\u8981\u4e481\u548c2\u7684\u4e2a\u6570\u4e4b\u5dee\u4e0d\u8d85\u8fc7M\u3002\n\n\u7b97\u6cd5\u5206\u6790\uff1a\n\n\u6bcf\u4e2a\u96c6\u5408\u91cc\u7684\u6570\u5728\u539f\u6570\u4e32\u4e2d\u90fd\u662f\u8fde\u7eed\u7684\u4e00\u6bb5\uff0c\u91c7\u7528\u7c7b\u4f3c\u533a\u95f4\u52a8\u6001\u89c4\u5212\u7684\u601d\u60f3\uff0c\u5c06[1,i]\u533a\u95f4\u5206\u6210[1\uff0cj]\u533a\u95f4\u4e0e\u5408\u6cd5[j+1,i]\u96c6\u5408\u7ec4\u6210\uff0c\u5219\u8981\u4f7f[1,i]\u533a\u95f4\u6ee1\u8db3\u6761\u4ef6\u7684\u96c6\u5408\u6570\u6700\u5c0f\uff0c\u663e\u7136[1\uff0cj]\u533a\u95f4\u6ee1\u8db3\u6761\u4ef6\u7684\u96c6\u5408\u6570\u4e3a\u6700\u5c0f\uff0c\u5373\u6bcf\u4e00\u6bb5\u7684\u6700\u5c0f\u503c\u90fd\u53ef\u4ee5\u4ece\u524d\u9762\u7684\u67d0\u4e00\u6bb5\u7684\u6700\u5c0f\u503c\u8f6c\u79fb\u8fc7\u6765\u3002\n\n\u6bcf\u6b21\u8003\u8651\u5bf9\u4e8e[1,i]\u8fd9\u6bb5\u6570\uff0c\u51b3\u7b56\u662f\u4ece\u524d\u9762\u7684\u6240\u6709\u6570\u6bb5[1,j](j<i)\u4e2d\u627e\u4e00\u4e2a\u6bb5\u3002\u6ee1\u8db3\uff1a1\u3001\u7b2cJ+1\u4e2a\u6570\u5230\u7b2cI\u4e2a\u6ee1\u8db3\u7ec4\u6210\u4e00\u4e2a\u96c6\u5408\u7684\u6761\u4ef6\uff1b\n\n2\u3001\u7b2c1\u4e2a\u5230\u7b2cJ\u4e2a\u6570\u6240\u7ec4\u6210\u7684\u96c6\u5408\u603b\u6570\u6700\u5c11\u3002\n\n\u5219\u6bb5[1,i]\u7684\u6700\u5c0f\u96c6\u5408\u6570\u4e3a\uff1a\u7b2c1\u4e2a\u5230\u7b2cJ\u4e2a\u6570\u6240\u7ec4\u6210\u7684\u96c6\u5408\u603b\u6570\u7684\u57fa\u7840\u4e0a\u52a01\u3002\n\n\u5206\u6790\u7ec4\u6210\u4e00\u4e2a\u96c6\u5408\u7684\u6761\u4ef6\uff0c\u9898\u76ee\u5df2\u7ecf\u544a\u8bc9\u6211\u4eec\uff0c\u4e00\u4e2a\u96c6\u5408\u4e2d\u8981\u4e48\u53ea\u67091\u6216\u53ea\u67092\uff0c\u8981\u4e481\u548c2\u7684\u4e2a\u6570\u4e4b\u5dee\u4e0d\u8d85\u8fc7M\u3002\n\n\u9884\u5904\u7406\uff0c\u8bbe s1[i]\uff0cs2[i]\u5206\u522b\u8868\u793a\u533a\u95f4[1,I]\u4e2d1\u7684\u4e2a\u6570\u4e0e2\u7684\u4e2a\u6570\u3002\u7528O(N)\u7684\u4ee3\u4ef7\u6c42\u5f97\u3002\n\n\u533a\u95f4[i,j]\u4e2d\uff1a\n\n1\u7684\u4e2a\u6570S1\uff1ds1[j]-s1[i-1]\uff1b\n\n2\u7684\u4e2a\u6570S2\uff1ds2[j]-s2[i-1]\uff1b\n\n\u8fd9\u6837\uff0c\u53ea\u8981S1=0 \u6216S2=0\u6216ABS\uff08S1-S2\uff09<=M\uff0c\u5c31\u80fd\u7ec4\u6210\u96c6\u5408\u3002\n\n\u8bbeF[i]\u8868\u793a\u7b2c1\u4e2a\u5230\u7b2cI\u4e2a\u6570\u6240\u7ec4\u6210\u7684\u6700\u5c11\u96c6\u5408\u6570\u91cf\u3002\n\n\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a\n\nF[I]=MIN{F[J]}+1{S1[J+1,I]=0 or S2[J+1,I]=0 or ABS(S1[J+1,I]-S2[J+1,I])<=M}\n\n\n```cpp\nprocedure main;\nvar i,j:longint;\nbegin\nfor i:=1 to n do \n   for j:=1 to i do\n      if (abs(s1[j,i]-s2[j,i])<=m) or (s1[j,i]=0) or (s2[j,i]=0) then {\u6ee1\u8db3\u6761\u4ef6}\n     f[i]:=min(f[i],f[j-1]+1); {\u8fdb\u884c\u8f6c\u79fb}\nend;\n\n```",
        "postTime": 1477834994,
        "uid": 26985,
        "name": "Lucia",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2418 \u3010yyy loves OI IV\u3011"
    },
    {
        "content": "//j~i\u53ef\u4ee5\u653e\u5728\u4e00\u95f4\u5bbf\u820d(j<=i)  c01[i]\u8868\u793a\u524di\u4e2a\u4eba\u4e2d\u819c\u62dcc01\u7684\u4eba\u6570\uff0cyyy[i]\u540c\u7406\n\n\n\n\n\n\n\n\n```cpp\n//\u60c5\u51b51\uff1ac01[j - 1] = c01[i]\n//\u60c5\u51b52\uff1ayyy[j - 1] = c01[i]\n//\u60c5\u51b53\uff1a\u8bbea = yyy[i] - yyy[j - 1]   b = c01[i] - c01[j - 1]\n//       |a - b| <= M\n//\u9700\u6ee1\u8db3\uff1a\u2460a - b <= M\n//        =>(yyy[i] - yyy[j - 1]) - (c01[i] - c01[j - 1]) <=M\n//        =>yyy[i] - yyy[j - 1] - c01[i] + c01[j - 1] <= M\n//        =>c01[j - 1] - yyy[j - 1] <= M + c01[i] - yyy[i]\n//      \u2461b - a <= M\n//        =>yyy[j - 1] - c01[j - 1] <= M + yyy[i] - c01[i]\n//        =>c01[j - 1] - yyy[j - 1] >= c01[i] - yyy[i] - M\n//\u6574\u7406\u53ef\u5f97 \u60c5\u51b53\u7b49\u4ef7\u4e8e\uff1a\n// c01[i] - yyy[i] - M <= c01[j - 1] - yyy[j - 1] <= M + c01[i] - yyy[i]\n//\u60c5\u51b51\u548c\u60c5\u51b52\u7528\u6570\u7ec4\u8bb0\u5f55\uff0c\u60c5\u51b53\u7528\u7ebf\u6bb5\u6811\u5904\u7406 \u65f6\u95f4\u590d\u6742\u5ea6O(nlogn)\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\nusing namespace std;\nconst size_t Max_N(500050);\nconst int Add(500000);\nconst int INF(0X3F3F3F3F);\nvoid Get_Val(int &Ret)\n{\nRet = 0;\nchar ch;\nwhile ((ch = getchar()), (ch > '9' || ch < '0'))\n;\ndo\n{\n(Ret *= 10) += ch - '0';\n}\nwhile ((ch = getchar()), (ch >= '0' && ch <= '9'));\n}\nstruct node\n{\nint l, r;\nint Min;\n};\nstruct Segment_Tree\n{\nnode segt[Max_N << 3];\nvoid build_tree(const int&, const int&, const int&);\nvoid change(const int&, const int&, const int &);\nint rmq_min(const int&, const int&, const int&);\n```\ninline\n\n\n\n\n\n\n\n\n```cpp\nvoid pushup(const int &cur)\n{\nsegt[cur].Min = min(segt[cur << 1].Min, segt[(cur << 1) | 1].Min);\n}\n};\nSegment_Tree Space;\nvoid Segment_Tree::build_tree(const int &cur, const int &l, const int &r)\n{\nsegt[cur].l = l, segt[cur].r = r, segt[cur].Min = INF;\nif (l == r)\nreturn;\nint mid = l + ((r - l) >> 1);\nbuild_tree(cur << 1, l, mid);\nbuild_tree((cur << 1) | 1, mid + 1, r);\n}\nvoid Segment_Tree::change(const int &cur, const int &i, const int &x)\n{\nif (segt[cur].l == i && segt[cur].r == i)\n{\nsegt[cur].Min = x;\nreturn;\n}\nint mid = segt[cur].l + ((segt[cur].r - segt[cur].l) >> 1);\nif (i <= mid)\nchange(cur << 1, i, x);\nelse\nchange((cur << 1) | 1, i, x);\npushup(cur);\n}\nint Segment_Tree::rmq_min(const int &cur, const int &l, const int &r)\n{\nif (segt[cur].l == l && segt[cur].r == r)\nreturn segt[cur].Min;\nint mid = segt[cur].l + ((segt[cur].r - segt[cur].l) >> 1);\nif (r <= mid)\nreturn rmq_min(cur << 1, l, r);\nelse\nif (l > mid)\nreturn rmq_min((cur << 1) | 1, l, r);\nelse\nreturn min(rmq_min(cur << 1, l, mid), rmq_min((cur << 1) | 1, mid + 1, r));\n}\nint N, M;\nint c01[Max_N], yyy[Max_N];\nint F[Max_N];\nint c01_dp[Max_N], yyy_dp[Max_N];\nint Minus[Max_N << 1];\nvoid init()\n{\nint v;\nGet_Val(N), Get_Val(M);\nfor (int i = 1;i <= N;++i)\n{\nGet_Val(v);\nyyy[i] = yyy[i - 1] + (v == 1);\nc01[i] = c01[i - 1] + (v == 2);\n}\n}\nvoid dp()\n{\nmemset(c01_dp, 0X3F, sizeof(c01_dp));\nmemset(yyy_dp, 0X3F, sizeof(yyy_dp));\nmemset(Minus, 0X3F, sizeof(Minus));\nMinus[0 + Add] = c01_dp[0] = yyy_dp[0] = F[0] = 0;\nSpace.build_tree(1, -500000, 500000);\nSpace.change(1, 0, 0);\nint a, b, c;\nfor (int i = 1;i <= N;++i)\n{\na = c01_dp[c01[i]];\nb = yyy_dp[yyy[i]];\nc = Space.rmq_min(1, c01[i] - yyy[i] - M, M + c01[i] - yyy[i]);\nF[i] = min(min(a + 1, b + 1), min(c + 1, F[i - 1] + 1));\nc01_dp[c01[i]] = min(c01_dp[c01[i]], F[i]);\nyyy_dp[yyy[i]] = min(yyy_dp[yyy[i]], F[i]);\nif (F[i] < Minus[c01[i] - yyy[i] + Add])\n{\nMinus[c01[i] - yyy[i] + Add] = F[i];\nSpace.change(1, c01[i] - yyy[i], F[i]);\n}\n}\nprintf(\"%d\", F[N]);\n}\nint main()\n{\ninit();\ndp();\nreturn 0;\n}\n```",
        "postTime": 1467711375,
        "uid": 19689,
        "name": "YGSY1506",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2418 \u3010yyy loves OI IV\u3011"
    }
]