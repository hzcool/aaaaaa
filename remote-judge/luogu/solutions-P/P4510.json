[
    {
        "content": "\u65e2\u7136\u8fd9\u9898\u6ca1\u6709\u9898\u89e3\u90a3\u6211\u5c31\u6765\u4e00\u53d1\u5427\uff08\n\n\u9996\u5148\u56e0\u4e3a\u9898\u9762\u8fc7\u4e8e\u590d\u6742\u8fd9\u91cc\u5c31\u4e0d\u63d0\u4f9b\u9898\u610f\u7b80\u8ff0\u4e86\uff0c\u5982\u679c\u8fd8\u6ca1\u6709\u5b8c\u5168\u4e86\u89e3\u9898\u610f\u5efa\u8bae\u518d\u591a\u8bfb\u51e0\u904d\u9898\u3002\n\n\u6211\u4eec\u89c2\u5bdf\u76ee\u6807\u5f0f\u5b50\uff1a\n$$\n\\text{Profit} = \\lfloor10\\ln(1+A)\\rfloor \\times S-C\n$$\n\u6ce8\u610f\u5230\u6539\u9020\u540e\u8840\u7f18\u94fe\u76f8\u90bb\u4e24\u8005\u4e3a\u5f02\u6027\u7684\u60c5\u51b5\u6570\u91cf $A$ \u7684\u4e0a\u754c\u662f $N\\times K=200$ \uff0c\u5373 $\\lfloor10\\ln(1+A)\\rfloor \\in [0,52]$ \uff0c\u5e76\u4e0d\u5927\uff0c\u90a3\u4e48\u6211\u4eec\u8003\u8651\u679a\u4e3e\u8fd9\u90e8\u5206\u7684\u503c\uff0c\u7b97\u5b8c\u4ee5\u540e\u518d\u68c0\u9a8c\u3002\n\n\u6211\u4eec\u79f0\u8f88\u5206\u5173\u7cfb\u4e3a\u6df1\u5ea6\uff0c\u7f8a\u4e3a\u70b9\uff0c\u90a3\u4e48\u663e\u7136\u6df1\u5ea6\u4e0d\u540c\u7684\u70b9\u4e4b\u95f4\u4e0d\u4f1a\u76f8\u4e92\u5f71\u54cd\u3002\u4e8e\u662f\u6211\u4eec\u8003\u8651\u8bbe\u8ba1\u4e00\u4e2aDP\uff0c\u4ee4 $f_{i,j,s}$ \u8868\u793a\u5f53\u524d\u505a\u5230\u7b2c $i$ \u5c42\uff0c\u8840\u7f18\u94fe\u76f8\u90bb\u4e24\u70b9\u4e3a\u5f02\u6027\u7684\u60c5\u51b5\u6570\u91cf\u4e3a $j$ \uff0c\u6240\u6709\u8840\u7f18\u94fe\u4e0a\u5f53\u524d\u5c42\u7684**\u53d8\u6027\u60c5\u51b5**\u4e3a $s$ \u65f6\u7684\u6700\u5927\u6536\u76ca\u3002\u5bb9\u6613\u5f97\u51fa\u8f6c\u79fb\u65b9\u7a0b\uff1a\n$$\nf_{i,j,s}=\\max f_{i-1,j',s'}+P_{i,s}\n$$\n\u5176\u4e2d $P_{i,s}$ \u8868\u793a\u5f53\u524d\u5c42\u72b6\u6001\u4e3a $s$ \u65f6\u8fd9\u4e00\u5c42\u70b9\u7684\u6700\u5927\u6536\u76ca\u3002\u6211\u4eec\u53ea\u9700\u8981\u679a\u4e3e $j'$\uff0c$s'$ \u548c $s$ \u5c31\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u8f6c\u79fb\u3002\n\n\u90a3\u4e48\u73b0\u5728\u8003\u8651\u5982\u4f55\u8ba1\u7b97 $P_{i,s}$\u3002\u6211\u4eec\u5265\u79bb\u51fa\u5f53\u524d\u5c42\u7684\u9650\u5236\u6761\u4ef6\uff0c\u53d1\u73b0\u5176\u548c[\u8fd9\u9053\u9898](https://www.luogu.com.cn/problem/P4313)\u975e\u5e38\u76f8\u4f3c\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u540c\u6837\u7684\u65b9\u5f0f\u5efa\u7acb\u6700\u5c0f\u5272\u6a21\u578b\u6765\u8dd1\u7f51\u7edc\u6d41\uff0c\u5177\u4f53\u505a\u6cd5\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002\n\n\u505a\u5b8cDP\u4ee5\u540e\u6211\u4eec\u9700\u8981\u518d\u7edf\u4e00\u5904\u7406\u548c\u8840\u7f18\u94fe\u6ca1\u6709\u5173\u7cfb\u7684\u6563\u70b9\uff0c\u7136\u540e\u5bf9\u4e8e\u67d0\u4e00\u4e2a\u7279\u5b9a\u7684 $\\lfloor10\\ln(1+A)\\rfloor$ \u503c\uff0c\u6211\u4eec\u5728 $f_{n,j,s}$ \u4e2d\u679a\u4e3e\u5408\u6cd5\u7684 $j$ \u548c $s$ \u6765\u7edf\u8ba1\u7b54\u6848\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u7b97\u4e00\u4e0b\u65f6\u95f4\u590d\u6742\u5ea6\uff0c$O(10\\ln(NK)N2^K(O(\\text{dinic})+NK2^K))$\uff0c~~\u4e0d\u592a\u8fc7\u5f97\u53bb\u7684\u6837\u5b50~~\u3002\u4f46\u662f\u5b83\u663e\u7136\u662f\u8dd1\u4e0d\u6ee1\u7684\uff0c\u4f55\u51b5 $\\text{dinic}$ \u66f4\u8dd1\u4e0d\u6ee1\uff0c\u6240\u4ee5\u5b9e\u9645\u4e0a\u5b83\u5f88\u8f7b\u677e\u5c31\u8dd1\u8fc7\u53bb\u4e86\u3002\n\n\u4ee3\u7801\u5b9e\u73b0\u65f6\u9700\u8981\u6ce8\u610f\u7ec6\u8282\uff0c\u6bd4\u5982\u9898\u76ee\u4e2d\u7684\u4e0b\u53d6\u6574\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define rep(i,a,b) for(R int i=a;i<=b;i++)\n#define R register\n#define endl putchar('\\n')\nconst int N=500005,inf=0x3f3f3f3f;\nusing namespace std;\n\nint n,k,m,p,a[N],c[N],cn[5][55],x[N],y[N],b[N];\ndouble d[N];\nint f[55][205][16],ans,dep[N],fa[N],rv[N],sx[2][5];\nint s,t,head[N],cnt,now[N],dis[N],flow;\nstruct edge { int a,b,next,f; } e[N];\nqueue<int> q;\nchar str[N];\nint find(int x) { return x==fa[x]?x:fa[x]=find(fa[x]); }\nvoid add_edge(int a,int b,int f) {\n\te[cnt]=(edge){a,b,head[a],f};\n\thead[a]=cnt++;\n}\nvoid add(int a,int b,int f) { add_edge(a,b,f),add_edge(b,a,0); }\n\nbool bfs() {\n\twhile(!q.empty()) q.pop();\n\trep(i,1,t) dis[i]=now[i]=0;\n\tdis[s]=1,now[s]=head[s],q.push(s);\n\twhile(!q.empty()) {\n\t\tint x=q.front(); q.pop();\n\t\tif(x==t) return 1;\n\t\tfor(R int i=head[x];i!=-1;i=e[i].next) {\n\t\t\tif(e[i].f&&!dis[e[i].b]) {\n\t\t\t\tdis[e[i].b]=dis[x]+1;\n\t\t\t\tnow[e[i].b]=head[e[i].b];\n\t\t\t\tq.push(e[i].b);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\nint dfs(int x,int mn) {\n\tif(x==t) return mn;\n\tint res=0;\n\tfor(R int i=now[x];i!=-1&&mn;i=e[i].next) {\n\t\tnow[x]=i;\n\t\tif(e[i].f&&dis[e[i].b]==dis[x]+1) {\n\t\t\tint k=dfs(e[i].b,min(mn,e[i].f));\n\t\t\tif(!k) dis[e[i].b]=0;\n\t\t\te[i].f-=k,e[i^1].f+=k;\n\t\t\tres+=k,mn-=k;\n\t\t}\n\t}\n\treturn res;\n}\nvoid dinic() { while(bfs()) flow+=dfs(s,inf); }\n\nvoid clear() {\n\ts=m+p*2+1,t=s+1,cnt=flow=0;\n\trep(i,1,t) head[i]=-1,rv[i]=0;\n}\nint calc(int nw,int S,int ln) {\n\tclear();\n\trep(i,1,k) rv[cn[i][nw]]=i;\n\trep(i,1,m) {\n\t\tif(dep[i]==nw) {\n\t\t\tif(rv[i]) {\n\t\t\t\tif(S>>(rv[i]-1)&1) add(s,i,c[i]),add(i,t,inf);\n\t\t\t\telse add(s,i,inf);\n\t\t\t} else add(s,i,c[i]);\n\t\t}\n\t}\n\tint tot=0;\n\trep(i,1,p) {\n\t\tif(dep[x[i]]==nw) {\n\t\t\ttot+=(b[i]+(int)(b[i]*d[i]))*ln;\n\t\t\tadd(s,i+m,b[i]*ln),add(i+m,x[i],inf),add(i+m,y[i],inf);\n\t\t\tadd(x[i],i+p+m,inf),add(y[i],i+p+m,inf),add(i+p+m,t,(int)(b[i]*d[i])*ln);\n\t\t}\n\t}\n\tdinic();\n\treturn tot-flow;\n}\nint finish(int ln) {\n\tclear();\n\trep(i,1,m) if(!dep[i]) add(s,i,c[i]),add(i,t,0);\n\tint tot=0;\n\trep(i,1,p) {\n\t\tif(!dep[x[i]]) {\n\t\t\ttot+=(b[i]+(int)(b[i]*d[i]))*ln;\n\t\t\tadd(s,i+m,b[i]*ln),add(i+m,x[i],inf),add(i+m,y[i],inf);\n\t\t\tadd(x[i],i+p+m,inf),add(y[i],i+p+m,inf),add(i+p+m,t,(int)(b[i]*d[i])*ln);\n\t\t}\n\t}\n\tdinic();\n\treturn tot-flow;\n}\nint solve(int ln) {\n\tint lim=(1<<k)-1;\n\tmemset(f,-inf,sizeof f);\n\trep(s,0,lim) f[1][0][s]=calc(1,s,ln);\n\trep(i,2,n) {\n\t\trep(s,0,lim) {\n\t\t\tint res=calc(i,s,ln);\n\t\t\trep(j,0,k-1) sx[0][j]=a[cn[j][i]]^((s>>j)&1);\n\t\t\trep(sp,0,lim) {\n\t\t\t\trep(j,0,k-1) sx[1][j]=a[cn[j][i-1]]^((sp>>j)&1);\n\t\t\t\trep(j,0,n*k) {\n\t\t\t\t\tint nw=j;\n\t\t\t\t\trep(l,0,k-1) nw+=sx[0][l]^sx[1][l];\n\t\t\t\t\tf[i][nw][s]=max(f[i][nw][s],f[i-1][j][sp]+res);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tint res=0;\n\trep(i,0,n*k) {\n\t\tif(floor(10.0*log(1+i))==ln) {\n\t\t\trep(s,0,lim) res=max(res,f[n][i][s]);\n\t\t}\n\t}\n\treturn res+finish(ln);\n}\n\nvoid init() {\n\trep(i,1,m) {\n\t\ta[i]=str[i]=='M';\n\t\tdep[i]=dep[find(i)];\n\t}\n}\n\nint main() {\n\tscanf(\"%d%d%d%d%s\",&n,&k,&m,&p,str+1);\n\trep(i,1,m) fa[i]=i;\n\trep(i,1,m) scanf(\"%d\",&c[i]);\n\trep(i,1,k) rep(j,1,n) {\n\t\tscanf(\"%d\",&cn[i][j]);\n\t\tdep[cn[i][j]]=j;\n\t}\n\trep(i,1,p) {\n\t\tscanf(\"%d%d%d%lf\",&x[i],&y[i],&b[i],&d[i]);\n\t\tint fx=find(x[i]),fy=find(y[i]);\n\t\tif(dep[fx]) fa[fy]=fx;\n\t\telse fa[fx]=fy;\n\t}\n\tinit();\n\trep(ln,0,53) ans=max(ans,solve(ln));\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1630133073,
        "uid": 91736,
        "name": "RPChe_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4510 [CTSC2015]\u6027\u522b\u6539\u9020\u8ba1\u5212"
    },
    {
        "content": "[\u6d1b\u8c37\u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P4510)\n\n\u4e00\u9053\u5f88\u70e6\u7684\u7f51\u7edc\u6d41\u9898\uff0c\u4ee3\u7801\u6bcf\u4e00\u5757\u7684\u7ed3\u6784\u90fd\u5f88\u6e05\u6670\uff0c\u4f46\u662f\u62fc\u8d77\u6765\u5c31\u8ba9\u4eba\u89c9\u5f97\u5f88\u70e6\u2026\u2026\n\n\u9996\u5148\u6b64\u9898\u7684\u4e00\u5927\u96be\u70b9\u5728\u4e8e\u8bfb\u9898\uff0c\u6211\u4e00\u5f00\u59cb\u50bb\u50bb\u5730\u4ee5\u4e3a\u6563\u70b9\u6ca1\u6709\u7528\uff0c\u5fc3\u60f3\u8fd9\u9898\u4e0d\u662f sb \u72b6\u538b dp \u5417\uff0c\u540e\u6765\u624d\u53d1\u73b0\u662f\u81ea\u5df1\u90fd\u9519\u9898\u4e86\u2026\u2026\u4e8b\u5b9e\u4e0a\u672c\u9898\u6b63\u786e\u7684\u9898\u610f\u5982\u4e0b\uff1a\n\n- \u5bf9\u4e8e\u8840\u7f18\u94fe\u4e0a\u7684\u70b9\uff0c\u4efb\u4f55\u4e00\u6761\u94fe\u4e0a\u7684\u7b2c $j$ \u4e2a\u70b9\u7684\u6df1\u5ea6\u90fd\u662f $j$\u3002\n- \u5bf9\u4e8e\u4e0d\u5728\u8840\u7f18\u94fe\u4e0a\u7684\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5**\u4e3a\u5176\u9644\u4e0a\u9002\u5f53\u7684\u6df1\u5ea6**\u4f7f\u5f97\u5bf9\u4e8e\u6240\u6709\u201c\u7e41\u884d\u5173\u7cfb\u201d\uff0c\u90fd\u6709 $dep_x=dep_y$\u3002\n\n\u5982\u679c\u6ca1\u6709 $\\lfloor 10\\ln(1+A)\\rfloor$ \u8fd9\u4e2a\u7cfb\u6570\u7684\u5b58\u5728\uff0c\u90a3\u4e48\u4e0d\u96be\u53d1\u73b0\u6b64\u9898\u5c31\u662f\u4e00\u4e2a\u88f8\u7684\u96c6\u5408\u5212\u5206\u6a21\u578b\u3002\u5177\u4f53\u6765\u8bf4\u5efa\u7acb\u6e90\u6c47\uff0c\u5b9a\u4e49\u4e00\u4e2a\u70b9\u4e0e\u6e90\u70b9\u76f8\u8fde\u5f53\u4e14\u4ec5\u5f53\u5b83\u7684\u6027\u522b\u6ca1\u53d8\uff0c\u4e0e\u6c47\u70b9\u76f8\u8fde\u5f53\u4e14\u4ec5\u5f53\u5b83\u7684\u6027\u522b\u53d8\u4e86\uff0c\u7136\u540e\u7528\u4e00\u7ec4\u65b9\u6848\u7684\u5272\u7684\u8d39\u7528\u6765\u523b\u753b\u4e00\u4e2a\u65b9\u6848\u5bf9\u5e94\u7684\u6536\u76ca\uff0c\u9996\u5148\u5bf9\u6bcf\u4e2a\u70b9\u8fde\u8fb9 $S\\to i$\uff0c\u5bb9\u91cf $c_i$\u3002\u5bf9\u4e8e\u6bcf\u7ec4\u7e41\u884d\u5173\u7cfb\u6211\u4eec\u65b0\u5efa\u4e24\u4e2a\u70b9 $P_1,P_2$ \u5206\u522b\u8868\u793a\u540c\u65f6\u53d8\u548c\u540c\u65f6\u4e0d\u53d8\u7684\u6536\u76ca\uff1a\n\n- \u5bf9\u4e8e $P_1$\uff0c\u8fde\u8fb9 $S\\to P_1$\uff0c\u5bb9\u91cf $b_i$\uff0c\u518d\u8fde\u8fb9 $P_1\\to x,P_1\\to y$\uff0c\u5bb9\u91cf\u5747 $\\infty$\uff0c\u6b64\u65f6\u5982\u679c $P_1$ \u4e0e $S$ \u76f8\u8fde\u4f46 $x,y$ \u4e4b\u4e00\u4e0e $T$ \u76f8\u8fde\u663e\u7136\u5272\u7684\u6743\u503c\u5c31\u65e0\u7a77\u5927\u4e86\u3002\n- \u5bf9\u4e8e $P_2$ \u4e5f\u540c\u7406\uff0c\u8fde\u8fb9 $P_2\\to T$\uff0c\u5bb9\u91cf $\\lfloor b_id_i\\rfloor$\uff0c\u518d\u8fde\u8fb9 $x\\to P_2,y\\to P_2$\uff0c\u5bb9\u91cf\u5747 $\\infty$\u3002\n\n\u7136\u540e\u62ff $\\sum b_i+\\lfloor b_id_i\\rfloor$ \u51cf\u53bb\u6700\u5c0f\u5272\u5c31\u662f\u7b54\u6848\u3002\n\n~~\uff08\u4e8b\u5b9e\u4e0a\u771f\u5b9e\u60c5\u51b5\u662f\uff1a\u5982\u679c\u6ca1\u6709\u7cfb\u6570\u90a3\u4e48\u76f4\u63a5\u6bcf\u4e2a\u70b9\u90fd\u4fdd\u6301\u539f\u6765\u7684\u6027\u522b\u5373\u53ef\uff09~~\n\n\u73b0\u5728\u6709\u4e86\u8fd9\u4e2a\u7cfb\u6570\u7684\u5b58\u5728\u3002\u4e4d\u4e00\u770b\u4ee5\u4e3a\u9700\u8981\u5947\u602a\u7684\u964d\u7ef4\u6280\u5de7\uff0c\u4f46\u5b9e\u9645\u4e0a\u53d1\u73b0 $\\lfloor 10\\ln(1+A)\\rfloor$ \u662f\u5f88\u5c0f\u7684\uff0c\u6700\u591a\u53ea\u6709 $53$\uff0c\u56e0\u6b64\u76f4\u63a5\u679a\u4e3e\u5b83\uff0c\u5269\u4f59\u90e8\u5206\u600e\u4e48\u529e\u5462\uff1f$k$ \u5f88\u5c0f\uff0c\u800c\u6211\u4eec\u9010\u5c42\u8f6c\u79fb\u65f6\u53ea\u7528\u5173\u5fc3\u4e0a\u4e00\u5c42\u8840\u7f18\u94fe\u4e0a\u7684\u70b9\u7684\u72b6\u6001\uff0c\u4e00\u773c\u72b6\u538b\u3002$dp_{i,j,S}$ \u8868\u793a\u8003\u8651\u5230\u7b2c $i$ \u5c42\uff0c$j$ \u5bf9\u76f8\u90bb\u5f02\u6027\uff0c\u4e0a\u4e00\u5c42\u72b6\u6001\u4e3a $S$\u3002\u8f6c\u79fb\u5f88\u5bb9\u6613\u3002\u4ee3\u4ef7\u8dd1\u4e00\u904d\u4e0a\u9762\u7684\u6700\u5c0f\u5272\u5373\u53ef\u3002\u6700\u540e\u518d\u5bf9\u4e0e\u8840\u7f18\u94fe\u6ca1\u6709\u4efb\u4f55\u8054\u7cfb\u7684\u70b9\u8dd1\u4e00\u904d\u6700\u5c0f\u5272\uff0c\u628a\u5171\u4eab\u52a0\u4e0a\u5373\u53ef\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $53\u00b7n^2k\u00b74^k+53\u00b7n2^k\u00b7\\Theta(\\text{dinic})$\uff0c\u7531\u4e8e dinic \u90e8\u5206\u663e\u7136\u8dd1\u4e0d\u6ee1\uff0c\u53ef\u4ee5\u901a\u8fc7\u3002\n\n```cpp\nconst int MAXK = 4;\nconst int MAXN = 50;\nconst int MAXM = 1000;\nconst int MAXP = 1e4;\nconst int MAXNK = 200;\nconst int MAXMSK = 16;\nint n, k, m, p, cst[MAXM + 5]; ll res = 0;\nint ch[MAXK + 2][MAXN + 5], dep[MAXM + 5]; char s[MAXM + 5];\nstruct dat {int u, v, w; double coef;} b[MAXP + 5];\nstruct ufset {\n\tint f[MAXM + 5];\n\tufset() {memset(f, 0, sizeof(f));}\n\tint find(int x) {return (!f[x]) ? x : f[x] = find(f[x]);}\n} F;\nvoid init_dep() {\n\tfor (int i = 1; i <= p; i++) {\n\t\tint fu = F.find(b[i].u), fv = F.find(b[i].v);\n\t\tif (dep[fv]) swap(fu, fv); if (fu != fv) F.f[fv] = fu;\n\t}\n\tfor (int i = 1; i <= m; i++) dep[i] = dep[F.find(i)];\n}\nnamespace MaxFlow {\n\tconst ll INFll = 1e13;\n\tconst int MAXV = 1e5;\n\tconst int MAXE = 1e6;\n\tint S, T, hd[MAXV + 5], to[MAXE + 5], nxt[MAXE + 5], ec = 1; ll cap[MAXE + 5];\n\tvoid init_graph() {for (int i = 1; i <= T; i++) hd[i] = 0; ec = 1;}\n\tvoid adde(int u, int v, ll f) {\n\t\tto[++ec] = v; cap[ec] = f; nxt[ec] = hd[u]; hd[u] = ec;\n\t\tto[++ec] = u; cap[ec] = 0; nxt[ec] = hd[v]; hd[v] = ec;\n\t}\n\tint dis[MAXV + 5], now[MAXV + 5];\n\tbool getdep(int S, int T) {\n\t\tfor (int i = 1; i <= T; i++) dis[i] = -1;\n\t\tqueue<int> q; q.push(S); dis[S] = 0;\n\t\twhile (!q.empty()) {\n\t\t\tint x = q.front(); q.pop(); now[x] = hd[x];\n\t\t\tfor (int e = hd[x]; e; e = nxt[e]) {\n\t\t\t\tint y = to[e]; ll z = cap[e];\n\t\t\t\tif (z && !~dis[y]) {dis[y] = dis[x] + 1; q.push(y);}\n\t\t\t}\n\t\t}\n\t\treturn ~dis[T];\n\t}\n\tint getflow(int x, ll f) {\n\t\tif (x == T) return f; ll ret = 0;\n\t\tfor (int &e = now[x]; e; e = nxt[e]) {\n\t\t\tint y = to[e]; ll z = cap[e];\n\t\t\tif (z && dis[y] == dis[x] + 1) {\n\t\t\t\tll w = getflow(y, min(f - ret, z));\n\t\t\t\tret += w; cap[e] -= w; cap[e ^ 1] += w;\n\t\t\t\tif (f == ret) return ret;\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\tll dinic() {\n\t\tll ret = 0;\n\t\twhile (getdep(S, T)) ret += getflow(S, INFll);\n\t\treturn ret;\n\t}\n} using namespace MaxFlow;\nll getcst(int x, int msk, int LN) {\n\tint cntv = 0, cnte = 0, idcnt; static int id[MAXM + 5];\n\tfor (int i = 1; i <= m; i++) if (dep[i] == x) id[i] = ++cntv;\n\tfor (int i = 1; i <= p; i++) if (dep[b[i].u] == x) ++cnte;\n\tS = cntv + cnte * 2 + 1; T = S + 1; idcnt = cntv; ll sum = 0;\n\tinit_graph();\n\tfor (int i = 1; i <= m; i++) if (dep[i] == x) adde(S, id[i], cst[i]);\n\tfor (int i = 1; i <= k; i++) {\n\t\tint pt = ch[i][x];\n\t\tif (((msk >> i - 1) & 1) == (s[pt] == 'M')) adde(S, id[pt], INFll); // not change\n\t\telse adde(id[pt], T, INFll);\n\t}\n\tfor (int i = 1; i <= p; i++) if (dep[b[i].u] == x) {\n\t\tint idu = id[b[i].u], idv = id[b[i].v]; ++idcnt; // both not change\n\t\tadde(idcnt, idu, INFll); adde(idcnt, idv, INFll);\n\t\tadde(S, idcnt, b[i].w * LN); sum += b[i].w * LN;\n\t\t++idcnt; // both change\n\t\tadde(idu, idcnt, INFll); adde(idv, idcnt, INFll);\n\t\tadde(idcnt, T, floor(b[i].w * b[i].coef) * LN);\n\t\tsum += floor(b[i].w * b[i].coef) * LN;\n\t}\n\treturn sum - dinic();\n}\nll getrst(int LN) {\n\tint cntv = 0, cnte = 0, idcnt; static int id[MAXM + 5];\n\tfor (int i = 1; i <= m; i++) if (!dep[i]) id[i] = ++cntv;\n\tfor (int i = 1; i <= p; i++) if (!dep[b[i].u]) ++cnte;\n\tS = cntv + cnte * 2 + 1; T = S + 1; idcnt = cntv; ll sum = 0;\n\tinit_graph();\n\tfor (int i = 1; i <= m; i++) if (!dep[i]) adde(S, id[i], cst[i]);\n\tfor (int i = 1; i <= p; i++) if (!dep[b[i].u]) {\n\t\tint idu = id[b[i].u], idv = id[b[i].v]; ++idcnt; // both not change\n\t\tadde(idcnt, idu, INFll); adde(idcnt, idv, INFll);\n\t\tadde(S, idcnt, b[i].w * LN); sum += b[i].w * LN;\n\t\t++idcnt; // both change\n\t\tadde(idu, idcnt, INFll); adde(idv, idcnt, INFll);\n\t\tadde(idcnt, T, floor(b[i].w * b[i].coef) * LN);\n\t\tsum += floor(b[i].w * b[i].coef) * LN;\n\t}\n\treturn sum - dinic();\n}\nll dp[MAXN + 5][MAXNK + 5][MAXMSK + 2];\nvoid solve_LN(int LN) {\n\tstatic ll cst_layer[MAXN + 5][MAXMSK + 2];\n//\tprintf(\"solve_LN %d\\n\", LN);\n\tfor (int i = 1; i <= n; i++) for (int j = 0; j < (1 << k); j++)\n\t\tcst_layer[i][j] = getcst(i, j, LN);\n\tmemset(dp, 0xcf, sizeof(dp));\n\tfor (int i = 0; i < (1 << k); i++) dp[1][0][i] = cst_layer[1][i];\n\tfor (int i = 2; i <= n; i++) for (int j = 0; j < (1 << k); j++) {\n\t\tfor (int l = 0; l <= (i - 1) * k; l++) for (int s = 0; s < (1 << k); s++)\n\t\t\tif (l >= __builtin_popcount(j ^ s))\n\t\t\t\tchkmax(dp[i][l][j], dp[i - 1][l - __builtin_popcount(j ^ s)][s] + cst_layer[i][j]);\n\t}\n\tll rst = getrst(LN);\n\tfor (int i = 0; i <= (n - 1) * k; i++) if (floor(10.0 * log(i + 1)) == LN) {\n\t\tfor (int j = 0; j < (1 << k); j++) chkmax(res, dp[n][i][j] + rst);\n\t}\n}\nint main() {\n\tscanf(\"%d%d%d%d%s\", &n, &k, &m, &p, s + 1);\n\tfor (int i = 1; i <= m; i++) scanf(\"%d\", &cst[i]);\n\tfor (int i = 1; i <= k; i++) for (int j = 1; j <= n; j++)\n\t\tscanf(\"%d\", &ch[i][j]), dep[ch[i][j]] = j;\n\tfor (int i = 1; i <= p; i++) scanf(\"%d%d%d%lf\", &b[i].u, &b[i].v, &b[i].w, &b[i].coef);\n\tinit_dep();\n\tfor (int LN = 0; LN <= 53; LN++) solve_LN(LN);\n\tprintf(\"%lld\\n\", res);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1657599273,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4510 [CTSC2015]\u6027\u522b\u6539\u9020\u8ba1\u5212"
    },
    {
        "content": "> [P4510 [CTSC2015] \u6027\u522b\u6539\u9020\u8ba1\u5212](https://www.luogu.com.cn/problem/P4510)\n\n$10\\ln(1 + A)$ \u4f5c\u4e3a\u8d21\u732e\u7cfb\u6570\u76f8\u5f53\u79bb\u8c31\uff0c\u56e0 $\\ln(1 + A) < 5.3$\uff0c\u8003\u8651\u76f4\u63a5\u679a\u4e3e\u8be5\u503c\uff0c\u8bbe\u4e3a $I$\u3002\n\n\u6ce8\u610f\u5230\u6bcf\u5c42\u4ec5\u548c\u4e0e\u5b83\u76f8\u90bb\u7684\u4e24\u5c42\u6709\u5173\uff0c\u4e14\u9700\u8981\u77e5\u9053\u8840\u7f18\u94fe\u76f8\u90bb\u4e24\u8005\u4e3a\u5f02\u6027\u7684\u60c5\u51b5\u6570\u91cf\uff0c\u6545\u8bbe $f_{i, j, k}$ \u8868\u793a\u5f53\u524d\u8003\u8651\u5230\u7b2c $i$ \u5c42\uff0c\u5df2\u7ecf\u51fa\u73b0 $j$ \u5bf9\u8840\u7f18\u94fe\u76f8\u90bb\u5f02\u6027\uff0c\u4e14\u7b2c $i$ \u5c42\u6bcf\u53ea\u7ef5\u7f8a\u7684\u6027\u522b\u72b6\u6001\u4e3a $k$\u3002\n\n\u8f6c\u79fb\u65f6\uff0c\u94a6\u5b9a\u5f53\u524d\u5c42\u6240\u6709\u8840\u7f18\u94fe\u4e0a\u7ef5\u7f8a\u7684\u6027\u522b\uff0c\u8f6c\u79fb\u7cfb\u6570\u600e\u4e48\u6c42\uff1f\u5bf9\u4e8e\u6bcf\u7ec4\u7e41\u884d\u5173\u7cfb $(u, v, b, d)$\uff0c\n\n- \u82e5 $u, v$ \u5747\u672a\u6539\u53d8\u6027\u522b\uff0c\u4ea7\u751f $Ib$ \u8d21\u732e\u3002\n- \u82e5 $u, v$ \u5747\u6539\u53d8\u6027\u522b\uff0c\u4ea7\u751f $I\\lfloor bd\\rfloor$ \u8d21\u732e\u3002\n\n\u6bcf\u53ea\u7ef5\u7f8a\u53ea\u6709\u4e24\u79cd\u6027\u522b\u53ef\u80fd\uff0c\u6545\u8003\u8651\u96c6\u5408\u5212\u5206\u6a21\u578b\u3002\u4f46\u5176\u4ec5\u80fd\u5904\u7406\u989d\u5916\u8d21\u732e\u89e6\u53d1\u6761\u4ef6\u4e3a\u6d89\u53ca\u5230\u7684\u6240\u6709\u70b9\u72b6\u6001\u76f8\u540c\uff0c\u800c\u82e5\u4e0e $S$\uff0c$T$ \u76f8\u8fde\u5206\u522b\u8868\u793a\u96c4\u6027\u6216\u96cc\u6027\u5219\u4e0d\u6ee1\u8db3\u9002\u7528\u6761\u4ef6\u3002\u4e0d\u8fc7\u5728\u68b3\u7406\u8d21\u732e\u65f6\u5df2\u7ecf\u81ea\u7136\u5730\u7ed9\u51fa\u4e86\u53e6\u4e00\u79cd\u8868\u793a\u65b9\u6cd5\uff1a\u5c06 $k$ \u7684\u5b9a\u4e49\u6539\u4e3a\u7b2c $i$ \u5c42\u6bcf\u53ea\u7ef5\u7f8a\u662f\u5426\u6539\u53d8\u6027\u522b\u7684\u72b6\u6001\uff0c\u4e14\u4e0e $S$ \u76f8\u8fde\u8868\u793a\u4fdd\u7559\u6027\u522b\uff0c\u4e0e $T$ \u76f8\u8fde\u8868\u793a\u6539\u53d8\u6027\u522b\u3002\n\n\u4e0a\u8ff0\u6a21\u578b\u76f8\u5f53\u7c7b\u4f3c [\u6587\u7406\u5206\u79d1](https://www.luogu.com.cn/problem/P4313) \u4ee5\u53ca [\u5c0f M \u7684\u4f5c\u7269](https://www.luogu.com.cn/problem/P1361)\u3002\n\n\u636e\u6b64\uff0c\u679a\u4e3e\u5f53\u524d\u5c42\u6bcf\u53ea\u7ef5\u7f8a\u662f\u5426\u6539\u53d8\u72b6\u6001 $k$\uff0c\u5e76\u4ee4\u521d\u59cb\u8f6c\u79fb\u7cfb\u6570 $J$ \u53d6\u5230\u6240\u6709\u8d21\u732e\uff0c\u5373 $\\sum Ib + I\\lfloor bd\\rfloor$\uff0c\u56e0\u4e3a\u6211\u4eec\u5e0c\u671b\u6700\u5927\u5316\u8d21\u732e\uff0c\u5373\u5229\u7528\u96c6\u5408\u5212\u5206\u6a21\u578b\u6700\u5c0f\u5316\u6263\u9664\u7684\u4ee3\u4ef7\u3002\n\n\u5728\u6b64\u57fa\u7840\u4e0a\u5efa\u51fa\u7f51\u7edc\uff1a\n\n- \u679a\u4e3e\u6240\u6709\u5f53\u524d\u5c42\u6d89\u53ca\u5230\u7684\u7ef5\u7f8a $i$\uff0c\n  - \u82e5 $i$ \u5728\u8840\u7f18\u94fe\u4e0a\u4e14\u88ab\u94a6\u5b9a\u6539\u53d8\u6027\u522b\uff0c\u5219 $i\\to T$ \u8fde\u5bb9\u91cf $+\\infty$ \u7684\u8fb9\u8868\u793a\u5f3a\u5236\u6539\u53d8\u6027\u522b\uff0c\u4e14 $J$ \u51cf\u53bb $c_i$\u3002\n  - \u82e5 $i$ \u5728\u8840\u7f18\u94fe\u4e0a\u4e14\u88ab\u94a6\u5b9a\u4fdd\u7559\u6027\u522b\uff0c\u5219 $S\\to i$ \u8fde\u5bb9\u91cf $+\\infty$ \u7684\u8fb9\u8868\u793a\u5f3a\u5236\u4fdd\u7559\u6027\u522b\u3002\n  - \u82e5 $i$ \u4e0d\u5728\u8840\u7f18\u94fe\u4e0a\uff0c\u5219 $S\\to i$ \u8fde\u5bb9\u91cf\u4e3a $c_i$ \u7684\u8fb9\u8868\u793a\u82e5\u5272\u6389\u8fd9\u6761\u8fb9\u4f7f\u5f97 $i$ \u4e0e $T$ \u76f8\u8fde\uff0c\u6539\u53d8\u6027\u522b\uff0c\u5219\u9700\u8981 $c_i$ \u7684\u4ee3\u4ef7\u3002\u540c\u7406 $i\\to T$ \u8fde\u5bb9\u91cf\u4e3a $0$ \u7684\u8fb9\u8868\u793a\u4fdd\u7559\u6027\u522b\u4e0d\u9700\u8981\u4efb\u4f55\u4ee3\u4ef7\u3002\n- \u679a\u4e3e\u5f53\u524d\u5c42\u6d89\u53ca\u5230\u7684\u7e41\u884d\u5173\u7cfb $e = (u, v, b, d)$\u3002\n  - $S\\to e_1$\uff0c$e_1\\to u, v$ \u5206\u522b\u8fde\u5bb9\u91cf $Ib$ \u548c $+\\infty$ \u7684\u8fb9\uff0c\u8868\u793a\u53ea\u8981 $u$ \u6216 $v$ \u6539\u53d8\u6027\u522b\u5219\u9700\u8981\u5272\u6389 $S\\to e_1$ \u5bb9\u91cf\u4e3a $Ib$ \u7684\u8fb9\uff0c\u6263\u6389\u5b83\u672c\u8eab\u5bf9 $J$ \u4ea7\u751f\u7684 $Ib$ \u7684\u8d21\u732e\u3002\n  - \u540c\u7406\uff0c$u, v\\to e_2$\uff0c$e_2 \\to T$ \u5206\u522b\u8fde\u5bb9\u91cf $+\\infty$ \u548c $I\\lfloor bd\\rfloor$ \u7684\u8fb9\u3002\n\n\n$J$ \u51cf\u53bb $S\\to T$ \u7684\u6700\u5927\u6d41\u5373\u771f\u6b63\u7684\u8d21\u732e\u7cfb\u6570\u3002\u518d\u679a\u4e3e\u4e0a\u4e00\u5c42\u72b6\u6001 $j'$ \u548c $k'$\uff0c\u6709\u8f6c\u79fb\u5f0f\n$$\nf_{i - 1, j', k'} + J'\\to f_{i, j + \\mathrm{popcount}(k' \\oplus k), k}\n$$\n\u6ce8\u610f\u4e0d\u4e0e\u8840\u7f18\u94fe\u4e0a\u7ef5\u7f8a\u901a\u8fc7\u7e41\u884d\u5173\u7cfb\u8fde\u901a\u7684\u7ef5\u7f8a\u4e0d\u5c5e\u4e8e\u4efb\u4f55\u4e00\u5c42\u3002\u5bf9\u4e8e\u5b83\u4eec\u4e4b\u95f4\u7684\u7e41\u884d\u5173\u7cfb\uff0c\u4e0d\u6539\u53d8\u6027\u522b\u6700\u4f18\uff0c\u8d21\u732e\u4e3a $L = \\sum Ib$\u3002\n\n\u6700\u7ec8\u679a\u4e3e\u4f7f\u5f97 $\\ln(1 + A) = I$ \u7684 $A$\uff0c\u7528 $L + \\max\\limits_{k = 0} ^ {2 ^ K - 1} f_{n, A, k}$ \u66f4\u65b0\u7b54\u6848\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(\\ln(NK) \\cdot N2 ^ K \\cdot ((M + P) \\sqrt{M + P} +  NK2 ^ K))$\uff0c$\\ln(NK)$ \u6709 $10$ \u500d\u5e38\u6570\u4f46\u7f51\u7edc\u6d41\u5e38\u6570\u8f83\u5c0f\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\ninline void cmax(ll &x, ll y) {x = x > y ? x : y;}\nbool Mbe;\nconstexpr int N = 50 + 5;\nconstexpr int M = 1e3 + 5;\nconstexpr int P = 1e4 + 5;\nconstexpr int inf = 0x1064822E;\nstruct flow {\n  int mx, cnt, hd[P], nxt[P << 4], to[P << 4], limit[P << 4];\n  void clear() {memset(hd, 0, mx + 1 << 2), cnt = 1, mx = 0;}\n  void add(int u, int v, int w = inf) {\n    mx = max(mx, max(u, v));\n    nxt[++cnt] = hd[u], hd[u] = cnt, to[cnt] = v, limit[cnt] = w;\n    nxt[++cnt] = hd[v], hd[v] = cnt, to[cnt] = u, limit[cnt] = 0;\n  }\n  int T, dis[P], cur[P];\n  int dfs(int id, int res = inf) {\n    if(id == T) return res;\n    int flow = 0;\n    for(int i = cur[id]; i && res; i = nxt[i]) {\n      int it = to[i], c = min(res, limit[i]);\n      cur[id] = i;\n      if(dis[id] + 1 == dis[it] && c) {\n        int k = dfs(it, c);\n        flow += k, res -= k, limit[i] -= k, limit[i ^ 1] += k;\n      }\n    }\n    if(!flow) dis[id] = -1;\n    return flow;\n  }\n  int maxflow(int s, int t) {\n    mx = max(mx, t);\n    int flow = 0;\n    T = t;\n    while(1) {\n      queue<int> q;\n      memset(dis, -1, mx + 1 << 2);\n      memcpy(cur, hd, mx + 1 << 2);\n      q.push(s), dis[s] = 0;\n      while(!q.empty()) {\n        int t = q.front();\n        q.pop();\n        for(int i = hd[t]; i; i = nxt[i])\n          if(dis[to[i]] == -1 && limit[i])\n            dis[to[i]] = dis[t] + 1, q.push(to[i]);\n      }\n      if(dis[t] == -1) return flow;\n      flow += dfs(s, 2e9);\n    }\n  }\n} g;\nstruct edge {\n  int u, v, ori, rev;\n} e[P];\nll ans;\nchar s[M];\nint n, k, m, p, A;\nint c[M], fa[M], dep[M], bel[M];\nint find(int x) {return fa[x] == x ? x : fa[x] = find(fa[x]);}\nvector<int> ind[N];\nvector<edge> edg[N];\nvoid solve(int ln) {\n  static ll f[M][32], h[M][32];\n  for(int i = 1; i <= n; i++) {\n    ll tot = 0;\n    int t = m + edg[i].size() * 2 + 1;\n    for(edge it : edg[i]) tot += (it.ori + it.rev) * ln;\n    for(int S = 0; S < 1 << k; S++) {\n      ll coef = tot;\n      g.clear();\n      for(int it : ind[i])\n        if(dep[it])\n          if(S >> bel[it] & 1) coef -= c[it], g.add(it, t); // \u5f3a\u5236\u6539\u53d8\n          else g.add(0, it);\n        else g.add(0, it, c[it]); // \u4fdd\u7559\u65e0\u4ee3\u4ef7\uff0c\u65e0\u8fb9 add(it, t) -> add(0, it)\n      int node = m;\n      for(edge it : edg[i]) {\n        g.add(0, ++node, it.ori * ln), g.add(node, it.u), g.add(node, it.v); // \u53ea\u8981\u4e00\u4e2a\u6539\u53d8\u5c31\u4e0d\u884c\n        g.add(++node, t, it.rev * ln), g.add(it.u, node), g.add(it.v, node); // \u53ea\u8981\u4e00\u4e2a\u4e0d\u6539\u53d8\u5c31\u4e0d\u884c\n      }\n      coef -= g.maxflow(0, t);\n      if(i == 1) {\n        h[0][S] = coef;\n        continue;\n      }\n      for(int j = 0; j <= (i - 1) * k; j++)\n        for(int T = 0; T < 1 << k; T++) {\n          int cnt = j + __builtin_popcount(T ^ S);\n          cmax(h[cnt][S], f[j][T] + coef);\n        }\n    }\n    swap(f, h), memset(h, 0xcf, sizeof(h));\n  }\n  ll res = 0;\n  for(int cnt = 1; cnt <= A; cnt++)\n    if(ln == (int) (10 * log(1 + cnt)))\n      for(int S = 0; S < 1 << k; S++)\n        cmax(res, f[cnt][S]);\n  for(edge it : edg[0]) res += it.ori * ln;\n  ans = max(ans, res);\n}\nbool Med;\nint main() {\n  fprintf(stderr, \"%.4lf MB\\n\", (&Mbe - &Med) / 1048576.0);\n  #ifdef ALEX_WEI\n    freopen(\"1.in\", \"r\", stdin);\n    freopen(\"1.out\", \"w\", stdout);\n  #endif\n  ios::sync_with_stdio(0);\n  cin >> n >> k >> m >> p >> s + 1;\n  A = (n - 1) * k;\n  for(int i = 1; i <= m; i++) cin >> c[i], fa[i] = i;\n  for(int i = 0; i < k; i++)\n    for(int j = 1; j <= n; j++) {\n      int ind;\n      cin >> ind;\n      dep[ind] = j, bel[ind] = i;\n    }\n  for(int i = 1; i <= p; i++) {\n    double d;\n    cin >> e[i].u >> e[i].v >> e[i].ori >> d;\n    e[i].rev = e[i].ori * d;\n    int x = find(e[i].u), y = find(e[i].v);\n    if(dep[x]) fa[y] = x;\n    else fa[x] = y;\n  }\n  for(int i = 1; i <= m; i++) ind[dep[find(i)]].push_back(i);\n  for(int i = 1; i <= p; i++) edg[dep[find(e[i].u)]].push_back(e[i]);\n  int bound = 10 * log(1 + A);\n  for(int i = 1; i <= bound; i++) {\n    bool exist = 0;\n    for(int j = 1; j <= A; j++) exist |= i == (int) (10 * log(1 + j));\n    if(exist) solve(i);\n  }\n  cout << ans << endl;\n  return cerr << 1e3 * clock() / CLOCKS_PER_SEC << \" ms\\n\", 0;\n}\n/*\n2022/7/15\nstart coding at 19:15\nfinish debugging at 20:14\n*/\n```",
        "postTime": 1657893408,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "P4510 [CTSC2015] \u6027\u522b\u6539\u9020\u8ba1\u5212"
    }
]