[
    {
        "content": "\u8d34\u4e2a[\u535a\u5ba2\u94fe\u63a5](https://www.cnblogs.com/HLAUV/p/10629695.html)\n\n\u9996\u5148\u6211\u4eec\u8981\u77e5\u9053\uff0c\u5982\u679c\u662f\u6811\u7684\u8bdd\uff0c\u91cd\u5fc3\u7684\u4f4d\u7f6e\u4e00\u5b9a\u5728\u4e00\u534a\u7684\u76f4\u5f84\u91cc\u90a3\u4e2a\u4f4d\u7f6e\u5bf9\u5427\u3002\n\n\u6240\u4ee5\u5982\u679c\u56fe\u662f\u4e00\u68f5\u6811\uff0c\u90a3\u4e481/2\u7684\u76f4\u5f84\u957f\u5c31\u662f\u7b54\u6848\u4e86\u3002\n\n\uff08\u7136\u800c\u8fd9\u9053\u9898\u6ca1\u6709\u6811\u7684\u90e8\u5206\u5206\uff09\n\n\u770b\u5230\u6709n\u6761\u8fb9\u5c31\u77e5\u9053\u662f\u57fa\u73af\u6811\u3002\n\n\u65e2\u7136\u662f\u57fa\u73af\u6811\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5e94\u8be5\u628a\u73af\u4f5c\u4e3a\u91cd\u70b9\u7814\u7a76\u5bf9\u8c61\u3002\n\n\u73af\u5c31\u662f\u89e3\u9898\u7684\u5173\u952e\uff0c\u4e60\u60ef\u6027\u5730\u628a\u57fa\u73af\u6811\u753b\u6210~~\u7ec6\u83cc~~\n\n\n![](https://cdn.luogu.com.cn/upload/pic/55486.png)\n\n\n\u6b64\u65f6\u8fd9\u4e2a\u57fa\u73af\u6811\u7684\u76f4\u5f84\u6709\u4e24\u79cd\u60c5\u51b5 \u6709\u7ecf\u8fc7\u57fa\u73af \u6216 \u6ca1\u6709\u7ecf\u8fc7\u57fa\u73af\n\n\u6ca1\u6709\u7ecf\u8fc7\u57fa\u73af\u7684\u5c31\u662f\u73af\u4e0a\u6302\u7740\u7684\u6bcf\u4e00\u68f5\u5c0f\u5b50\u6811\u7684\u6700\u5927\u76f4\u5f84\u4e86\u3002\n\n\u6709\u7ecf\u8fc7\u57fa\u73af\u7684\u600e\u4e48\u6c42\u5462\uff1f\n\n\u8003\u8651\u679a\u4e3e\u6bcf\u4e2a\u4f4d\u7f6e\u628a\u73af\u65ad\u5f00\uff08\u57fa\u73af\u6811\u5e38\u89c1\u5957\u8def\uff09\u3002\n\n\n\n![](https://cdn.luogu.com.cn/upload/pic/55484.png)\n\n\n\u5bf9\u6bcf\u4e00\u4e2a\u5b50\u6811\u6c42\u4e00\u4e2a\u6700\u5927\u6df1\u5ea6\uff0c\u7136\u540eMax(\u4e24\u4e2a\u5b50\u6811\u6700\u5927\u6df1\u5ea6\u52a0\u5b83\u4eec\u5728\u73af\u4e0a\u7684\u8ddd\u79bb)\u5c31\u4e3a\u76f4\u5f84\u4e86\u3002\n\n\u4f46\u6211\u4eec\u6709\u5f88\u591a\u79cd\u65ad\u73af\u65b9\u6848\uff0c\u6bcf\u4e00\u6b21\u90fd\u6c42\u4e00\u6b21\u590d\u6742\u5ea6\u80af\u5b9a\u662f\u8981\u4e0a\u5929\u7684\u3002\n\n\u6240\u4ee5\u60f3\u4e2a\u529e\u6cd5\u4f18\u5316\uff08\u8fd9\u91cc\u501f\u9274\u4e86[ljh2000](https://www.cnblogs.com/ljh2000-jump/p/6391591.html)\u7684\u65b9\u6cd5\uff09\n\n\u5148\u57281\u5230tot\uff08\u73af\u957f\uff09\u7684\u5730\u65b9\u65ad\u5f00\u3002\n\npre[]\u4e0ebck[]\u5206\u522b\u8868\u793a\u524d\u7f00\u548c\u540e\u7f00\u7684 Max[\u67d0\u4e2a\u5b50\u6811\u6700\u5927\u6df1\u5ea6+\u5b83\u7684\u524d\u7f00\uff08\u540e\u7f00\uff09\u94fe\u957f]\n\n\n\n![](https://cdn.luogu.com.cn/upload/pic/55488.png)\n\n\nbs1[]\u548cbs2[]\u5206\u522b\u8868\u793a\u524d\u7f00\u548c\u540e\u7f00\u7684 Max[\u67d0\u4e24\u4e2a\u5b50\u6811\u7684\u6700\u5927\u6df1\u5ea6+\u5b83\u4eec\u4e4b\u95f4\u7684\u8ddd\u79bb]\n\n\n![](https://cdn.luogu.com.cn/upload/pic/55487.png)\n\n\n\u6240\u4ee5\u6bcf\u6b21\u4ecei\u5230i+1\u7684\u5730\u65b9\u65ad\u5f00\uff0c\u7b54\u6848\u7684\u6c42\u6cd5\u5c31\u5f88\u7b80\u5355\u4e86\u3002\n\n\n```cpp\nFor(i,1,tot-1){\n\tDb mx1=max(bs1[i],bs2[i+1]);\n\tDb mx2=max(mx1,pre[i]+bck[i+1]+crD[0]);\n\tFn=min(Fn,max(mx1,mx2));\n}\n```\n\nDFS\u62a0\u73af\u3001\u65ad\u73af\u7684\u65f6\u5019\u6bd4\u8f83\u7e41\u7410\u4e00\u5b9a\u8981\u6ce8\u610f\u7ec6\u8282\u3002\n\n\u597d\u4e86\u4e0a\u4ee3\u7801\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n\n#define For(i,a,b) for(register int i=a;i<=b;++i)\n#define Dwn(i,a,b) for(register int i=a;i>=b;--i)\n#define Pn putchar('\\n')\n#define Re register\n#define Db double\n\nusing namespace std;\n\nconst int N=1e5+5;\n\nint head[N],nxt[N*2],v[N*2],cnt=1;\nDb w[N*2],dia[N],z,dmx[N],Fn;\nint n,m,x,y;\ninline void read(int &v){\n\tv=0;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9')c=getchar();\n\twhile(c>='0'&&c<='9')v=v*10+c-'0',c=getchar();\n}\ninline void read(Db &v){\n\tv=0;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9')c=getchar();\n\twhile(c>='0'&&c<='9')v=v*10+c-'0',c=getchar();\n}\nvoid add(int ux,int vx,Db wx){\n\tnxt[++cnt]=head[ux]; head[ux]=cnt; v[cnt]=vx; w[cnt]=wx;\n\tnxt[++cnt]=head[vx]; head[vx]=cnt; v[cnt]=ux; w[cnt]=wx;\n}\n\nint tot=0,top=0,st[N],cr[N*2],vis[N],suc=0,fc[N];\nDb crD[N*2],stD[N];\nvoid dfsCir(int x,int fa){\n\tvis[x]=1;\n\tif(x==1)st[++top]=x,stD[top]=0;\n\tfor(Re int i=head[x];i;i=nxt[i]){\n\t\tint vv=v[i]; if(vv==fa)continue;\n\t\tif(!vis[vv]){\n\t\t\tst[++top]=vv; stD[top]=w[i];\n\t\t\tdfsCir(vv,x);\n\t\t}else{\n\t\t\tsuc=1;\n\t\t\twhile(st[top]!=vv){\n\t\t\t\tfc[st[top]]=1;\n\t\t\t\tcr[++tot]=st[top];\n\t\t\t\tcrD[tot]=stD[top--];\n\t\t\t}\n\t\t\tfc[st[top]]=1;\n\t\t\tcr[++tot]=st[top];\n\t\t\tcrD[tot]=w[i];\n\t\t\treturn;\n\t\t}\n\t\tif(suc)return;\n\t}\n\ttop--;\n}\nint pos;\nDb mxD;\nvoid dfsTrD(int x,Db dix,int fa){\n\tif(dix>mxD)mxD=dix,pos=x;\n\tfor(Re int i=head[x];i;i=nxt[i]){\n\t\tint vv=v[i];\n\t\tif(vv==fa||fc[vv])continue;\n\t\tdfsTrD(vv,dix+w[i],x);\n\t}\n}\nDb GetTrD(int x){\n\tpos=mxD=0;\n\tdfsTrD(x,0,0);\n\tmxD=0;\n\tdfsTrD(pos,0,0);\n\treturn mxD;\n}\n\nDb pre[N],bck[N],bs1[N],bs2[N],Ds=0; \nvoid DP(){\n\tDs=mxD=0;\n \tFor(i,1,tot){\n \t\tpre[i]=max(pre[i-1],dmx[cr[i]]+Ds);\n \t\tif(i>=2)bs1[i]=max(bs1[i-1],mxD+Ds+dmx[cr[i]]);\n \t\tmxD=max(mxD,dmx[cr[i]]-Ds);\n\t \tDs+=crD[i];\n\t}\n\tDs=mxD=0;\n\tcrD[0]=crD[tot];\n\tDwn(i,tot,1){\n\t\tbck[i]=max(bck[i+1],dmx[cr[i]]+Ds);\n\t\tif(i<=tot-1)bs2[i]=max(bs2[i+1],mxD+Ds+dmx[cr[i]]);\n\t\tmxD=max(mxD,dmx[cr[i]]-Ds);\n\t\tDs+=crD[i-1];\n\t}\n\tFn=bs1[tot];\n\tFor(i,1,tot-1){\n\t\tDb mx1=max(bs1[i],bs2[i+1]);\n\t\tDb mx2=max(mx1,pre[i]+bck[i+1]+crD[0]);\n\t\tFn=min(Fn,max(mx1,mx2));\n\t}\n}\n\nint main(){\n\t//freopen(\"ex.in\",\"r\",stdin);\n//\tfreopen(\"ex.out\",\"w\",stdout);\n    read(n); \n    For(i,1,n){read(x); read(y); read(z); add(x,y,z);}\n    dfsCir(1,0); \n    For(i,1,tot){\n    \tfc[cr[i]]=0;\n\t\tdia[cr[i]]=GetTrD(cr[i]);\n\t\tfc[cr[i]]=1;\n\t}\n    For(i,1,tot){\n    \tmxD=0; \n    \tdfsTrD(cr[i],0,0);\n    \tdmx[cr[i]]=mxD;\n    } \n    DP();\n    For(i,1,tot)Fn=max(Fn,dia[cr[i]]);\n    printf(\"%.1lf\",Fn/2.0);\n    return 0;\n}\n    \n\n```\n\n\n\n\n\n\n",
        "postTime": 1553959592,
        "uid": 86041,
        "name": "_LAUV_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1399 \u3010[NOI2013]\u5feb\u9910\u5e97\u3011"
    },
    {
        "content": "\u4f5c\u4e3a\u4e00\u9053NOI\u9898\uff0c\u8fd9\u9053\u9898\u662f\u4e00\u9053\u597d(\u96be)\u9898\uff0c\u8fd9\u9053\u9898\u7ed9\u4e86\u4e00\u5f20N\u70b9N\u8fb9\u7684\u56fe\uff0c\u8ba9\u4f60\u5728\u56fe\u4e2d\u627e\u4e00\u70b9\u5230\u56fe\u4e2d\u6700\u8fdc\u70b9\u6700\u8fd1\uff0c\u8f93\u51fa\u8fd9\u4e2a\u8ddd\u6700\u8fdc\u70b9\u6700\u8fd1\u7684\u8ddd\u79bb\uff0c\u9996\u5148\u95ee\u9898\u964d\u4f4e\uff0c\u5982\u679c\u8fd9\u662f\u4e00\u68f5\u6811\uff0c\u6c42\u4e00\u70b9\u5230\u6700\u8fdc\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u90a3\u5176\u5b9e\u5c31\u662f\u6811\u7684\u76f4\u5f84\u7684\u4e00\u534a\uff0c\u4f46\u662f\u8fd9\u9053\u9898\u662f\u4e00\u9897\u73af\u5957\u6811\uff0c\u6240\u4ee5\u73b0\u5728\u5206\u4e24\u79cd\u60c5\u51b5\n### 1 \u8fd9\u4e2a\u73af\u5957\u6811\u7684\u6700\u957f\u8def\u5f84\u4e0d\u7ecf\u8fc7\u73af\n\n\u8fd9\u79cd\u60c5\u51b5\u662f\u6bd4\u8f83\u7b80\u5355\u7684\uff0c\u6211\u4eec\u9996\u5148\u901a\u8fc7\u4e00\u4e9b\u624b\u6bb5\u6c42\u51fa\u8fd9\u4e2a\u73af\uff0c\u5e76\u8bb0\u5f55\u73af\u7684\u4fe1\u606f\uff0c(\u65b9\u6cd5\uff1atarjan\uff0cdfs\uff0c\u5e76\u67e5\u96c6)\uff1b\u7136\u540e\u679a\u4e3e\u6bcf\u4e00\u4e2a\u73af\u4e0a\u7684\u70b9\uff0c\u5bf9\u8fd9\u4e9b\u70b9\u4e0b\u7684\u5b50\u6811\u6c42\u76f4\u5f84\uff0c\u53d6\u8fd9\u4e9b\u76f4\u5f84\u7684\u6700\u5927\u503c\uff0c\u8bb0\u4e3aans1.\n\n\u4ee5\u4e0a\u64cd\u4f5c\u627e\u73af\u662fO(n+m),\u5bf9\u6240\u6709\u73af\u4e0a\u7684\u70b9\u6c42\u5b50\u6811\u662fO(n)\u7684\uff0c\u6240\u4ee5\u8fd9\u4e00\u6b65\u603b\u590d\u6742\u5ea6O(n+m);\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u539f\u56e0\uff1a\u6bcf\u4e2a\u70b9\u53ea\u4fbf\u5229\u4e86\u4e00\u6b21\n\n### 2 \u8fd9\u4e2a\u73af\u5957\u6811\u7684\u6700\u957f\u8def\u5f84\u7ecf\u8fc7\u73af\n\n\u8fd9\u79cd\u60c5\u51b5\u662f\u6bd4\u8f83\u590d\u6742\u7684\uff0cO(n * n) 60\u5206\u7b97\u6cd5\u662f\u679a\u4e3e\u73af\u4e0a\u7684\u65ad\u70b9\uff0c\u662f\u65e0\u6cd5AC\u7684\uff0c\u56e0\u6b64\u9700\u8981\u4f18\u5316\u3002\n\n\u89c4\u5b9a\u73af\u4e0a\u6bcf\u4e2a\u70b9\u4e3a1--> circle_cnt\n\nA[i]\u8868\u793a(\u524d\u7f00\u94fe\u957f\u5ea6+\u5f53\u524d\u6362\u4e0a\u8282\u70b9\u5b50\u6811\u6700\u5927\u6df1\u5ea6)\n\nB[i]\u8868\u793a(\u524d\u7f00\u4e2d\u4e24\u4e2a\u70b9\u5b50\u6811\u7684\u6700\u5927\u6df1\u5ea6+\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb)\n\nC[i]\u8868\u793a(\u540e\u7f00\u94fe\u957f\u5ea6+\u5f53\u524d\u6362\u4e0a\u8282\u70b9\u5b50\u6811\u6700\u5927\u6df1\u5ea6)\n\nD[i]\u8868\u793a(\u540e\u7f00\u4e2d\u4e24\u4e2a\u70b9\u5b50\u6811\u7684\u6700\u5927\u6df1\u5ea6+\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb)\n\u56e0\u6b64\u5f53\u6211\u4eec\u679a\u4e3e\u5230\u65ad\u88c2\u73af\u4e0ai\u4e0ei+1\u70b9\u4e4b\u95f4\u7684\u8fb9\u65f6\uff0c\n\n\u7b54\u6848\u4e3amax(max(B[i],D[i]),A[i]+C[i+1]+(1-->circle_cnt\u70b9\u7684\u8fb9\u6743))\uff1b\n\n\u8fd9\u4e2a\u5f0f\u5b50\u7684\u542b\u4e49\u662f \u53d6\n\nmax((\u524d\u7f00\u4e2d\u7684\u6700\u5927\u76f4\u5f84)\uff0c(\u540e\u7f00\u4e2d\u7684\u6700\u5927\u76f4\u5f84)\uff0c(\u524d\u7f00i\u4e0e\u540e\u7f00i+1\u8de8\u8fc71\u548ccircle_cnt\u70b9\u4e4b\u95f4\u7684\u8fb9\u6240\u7ec4\u6210\u7684\u76f4\u5f84))\n\n\u663e\u7136\u7684\u6211\u4eec\u8981\u4fdd\u7559\u8fd9\u91cc\u6c42\u51fa\u7684\u6700\u5c0f\u503c\uff0c\u56e0\u4e3a\u8fd9\u91cc\u6c42\u51fa\u7684\u8def\u5f84\u662f\u6240\u6709\u8def\u5f84\u90fd\u6709\u53ef\u80fd\uff0c\u4e0d\u4e00\u5b9a\u662f\u4e24\u70b9\u95f4\u7684\u6700\u77ed\u8def\uff0c\u8fd9\u91cc\u6211\u5c31\u6709\u7591\u95ee\uff0c\u4f46\u5c31\u50cf\u7b2c\u4e00\u4e2a\u6837\u4f8b\uff0c\u6700\u957f\u7684\u8def\u662f3->1->4->2\u8ddd\u79bb\u4e3a5\uff0c\u4e8b\u5b9e\u4e0a\u67093->1->2->4\u8ddd\u79bb\u4e3a4\u7684\u8def\u5b58\u5728\uff0c\u8fd9\u6837\u65e0\u7591\u7f29\u77ed\u4e86\u6c42\u7684\u76f4\u5f84\u3002\n\n\u8bb0\u8fd9\u4e2a\u6700\u5c0f\u503c\u4e3aans2.\u8fd9\u4e2a\u6b65\u9aa4\u590d\u6742\u5ea6\u65f6O(circle_cnt)\n\n\u6700\u7ec8\u8f93\u51famax(ans1,ans2)/2;\n\nHow interesting it is!\n\n\u4ee5\u4e0a\u5c31\u662f\u4e3b\u8981\u601d\u8def\uff0c\u5bf9\u4e8e\u7ecf\u8fc7\u73af\u4e0a\u7684\u8def\u5f84\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7ebf\u6bb5\u6811\u6765\u6c42\uff0c\u4f46\u662f\u6ca1\u6709\u8fd9\u79cd\u65b9\u6cd5\u66f4\u4f18\u3002\n\u4ee3\u7801\u5982\u4e0b\n~~~\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<string>\n#include<queue>\n#include<cmath>\n#include<map>\nusing namespace std;\ntypedef long long ll;\nconst int maxn=100000+10;\nconst int inf=0x3f3f3f3f;\nconst int mod=1e9+7;\nint n;\nstruct Edge{\n\tint to,from,cost;\n}edge[maxn<<1];\nint last[maxn<<1],cnt=0;\nint huan[maxn],huan_cnt=0,huan_zhi[maxn],fa[maxn],cost[maxn],huan_sign[maxn];\nint dfn[maxn],timee=0;\nll dis[maxn];\nll ans=0,ans1=0;\nll A[maxn],B[maxn];\n//A[i]\u8868\u793a \u524d\u7f00\u4e2d\u6700\u5927\u7684\u4e00\u6761\u94fe+\u5f53\u524d\u8282\u70b9\u6811\u7684\u6700\u5927\u6df1\u5ea6 \n//B[i]\u8868\u793a\u524d\u7f00\u4e2d\u4e24\u68f5\u6811\u7684\u6700\u5927\u6df1\u5ea6+\u8fd9\u4e24\u4e2a\u8282\u70b9\u95f4\u7684\u8ddd\u79bb \nll C[maxn],D[maxn]; //\u8fd9\u662f\u540e\u7f00\u505a\u7684\n//\u56e0\u6b64\u5f53\u65ad\u6362\u4e0a\u7b2ci\u4e0ei+1\u6761\u8fb9\u65f6 ans=max(max(B[i],D[i+1]),A[i]+C[i+1]+1-->cnt\u7684\u8fb9\u6743\u548c) \ninline int read(){\n    int a=1,b=0;char c=getchar();\n    while(c>'9'||c<'0'){if(c=='-') a=-1;c=getchar();}\n    while(c>='0'&&c<='9'){b=(b<<3)+(b<<1)+c-'0';c=getchar();}\n    return a*b;\n}\ninline void print(ll x){\n    if(x<0) x=-x,putchar('-');\n    if(x>9) print(x/10);\n    putchar(x%10+'0');\n}\ninline void pre(){\n\t\n}\ninline void add(int x,int y,int z){\n\tedge[++cnt].to=y;\n\tedge[cnt].cost=z;\n\tedge[cnt].from=last[x];\n\tlast[x]=cnt;\n}\ninline void input(){int xx,yy,zz;\n\tn=read();\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tfa[i]=i;\n\t\txx=read(),yy=read(),zz=read();\n\t\tadd(xx,yy,zz);\n\t\tadd(yy,xx,zz);\n\t}\n}\t\ninline void dfs(int now){//\u6b64\u5904\u627e\u73af\u5e76\u8bb0\u5f55 \n\tdfn[now]=++timee;\n\tfor(int i=last[now];i;i=edge[i].from)\n\t{\n\t\tint to=edge[i].to;\n\t\tif(to!=fa[now])\n\t\t{\n\t\t\tif(!dfn[to])\n\t\t\t{\n\t\t\t\tfa[to]=now;\n\t\t\t\tcost[to]=edge[i].cost;\n\t\t\t\tdfs(to);\n\t\t\t}\n\t\t\telse if(dfn[to]>dfn[now])\n\t\t\t{\n\t\t\t\tfor(;to!=now;to=fa[to])\n\t\t\t\t{\n\t\t\t\t\thuan_sign[to]=1;\n\t\t\t\t\thuan[++huan_cnt]=to;\n\t\t\t\t\thuan_zhi[huan_cnt]=cost[to];\n\t\t\t\t}\n\t\t\t\thuan_sign[now]=1;\n\t\t\t\thuan[++huan_cnt]=now;\n\t\t\t\thuan_zhi[huan_cnt]=edge[i].cost;\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n}\ninline void DP(int now,int father){//dis[i]\u8868\u793ai\u6240\u5728\u7684\u5b50\u6811\u4e0a\u7684\u76f4\u5f84 \n\tfor(int i=last[now];i;i=edge[i].from)\n\t{\n\t\tint to=edge[i].to;\n\t\tif(!huan_sign[to]&&to!=father)\n\t\t{\n\t\t\tDP(to,now);\n\t\t\tans=max((ll)dis[now]+dis[to]+edge[i].cost,ans);\n\t\t\tdis[now]=max(dis[now],dis[to]+edge[i].cost);\n\t\t}\n\t}\n}\ninline void solve(){\n\tdfs(1);\n\tfor(int i=1;i<=huan_cnt;++i) DP(huan[i],0);\n\tll sum=0,maxx=0;\n\tfor(int i=1;i<=huan_cnt;++i)\n\t{\n\t\tsum+=huan_zhi[i-1];\n\t\tA[i]=max(A[i-1],dis[huan[i]]+sum);\n\t\tB[i]=max(B[i-1],sum+maxx+dis[huan[i]]);\n\t\tmaxx=max(maxx,dis[huan[i]]-sum);\n\t}\n\tsum=maxx=0;\n\tint tmp=huan_zhi[huan_cnt];huan_zhi[huan_cnt]=0;\n\tfor(int i=huan_cnt;i>=1;--i)\n\t{\n\t\tsum+=huan_zhi[i];\n\t\tC[i]=max(C[i+1],dis[huan[i]]+sum);\n\t\tD[i]=max(D[i+1],sum+maxx+dis[huan[i]]);\n\t\tmaxx=max(maxx,dis[huan[i]]-sum);\n\t}\n\tll tep;\n\tans1=B[huan_cnt];\n\tfor(int i=1;i<huan_cnt;++i)\n\t{\n\t\ttep=max(B[i],D[i+1]);\n\t\ttep=max(tep,A[i]+C[i+1]+tmp);\n\t\tans1=min(tep,ans1);\n\t}\n\tans=max(ans,ans1);\n\tif(ans&1) print(ans>>1),puts(\".5\");\n\telse print(ans>>1),puts(\".0\");\n}\ninline void output(){\n    \n}\nint main(){int T;\n    T=1;\t\n    while(T--)\n    {\t \n        pre();\n        input();\n        solve();\t\t\n        output();\n    }\n    return  0;\n}\n~~~\n\n\n\n",
        "postTime": 1534408669,
        "uid": 64593,
        "name": "Mr_cold",
        "ccfLevel": 4,
        "title": "NOI2013 \u5feb\u9910\u5385"
    },
    {
        "content": "[\u9898\u9762](https://www.luogu.com.cn/problem/P1399)\n\n## \u9898\u610f\u5206\u6790\n\n\u9898\u76ee\u4e2d\u4f1a\u7ed9\u51fan\u4e2a\u70b9\uff0c\u6bcf\u4e2a\u70b9\u90fd\u6709\u4e00\u4e2a\u7236\u4eb2\uff0c\u8fd9\u6837\u5f62\u6210\u4e00\u4e2a\u56fe\uff0c\u8ba9\u4f60\u5728\u67d0\u4e00\u5904\uff08\u53ef\u4ee5\u5728\u70b9\u4e0a\uff0c\u4e5f\u53ef\u4ee5\u5728\u8fb9\u4e0a\uff09\u5b89\u7f6e\u4e00\u4e2a\u5feb\u9910\u5e97\u4f7f\u5f97\u6574\u5f20\u56fe\u4e0a\u79bb\u5b83\u6700\u8fdc\u7684\u70b9\u6700\u8fd1\u3002\n\n\u5f88\u5bb9\u6613\u60f3\u5230\u5728\u9898\u76ee\u6700\u540e\u81f3\u5c11\u6709\u4e24\u4e2a\u70b9\u79bb\u5feb\u9910\u5e97\u7684\u8ddd\u79bb\u76f8\u540c\uff0c\u56e0\u4e3a\u5982\u679c\u4e0d\u76f8\u540c\uff0c\u5feb\u9910\u5e97\u53ef\u4ee5\u671d\u8f83\u8fdc\u70b9\u7684\u65b9\u5411\u79fb\u52a8\u4e00\u6bb5\u8ddd\u79bb\uff0c\u6700\u540e\u7b54\u6848\u66f4\u4f18\u3002\u800c\u7531\u4e8e\u5feb\u9910\u5e97\u79bb\u8fd9\u4e24\u4e2a\u70b9\u7684\u8ddd\u79bb\u90fd\u662f\u6700\u957f\u7684\uff0c\u6240\u4ee5\u8fd9\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u5e94\u8be5\u662f\u6240\u6709\u70b9\u4e2d\u6700\u957f\u7684\uff0c\u5373\u8fd9\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8def\u5f84\u5c31\u662f\u76f4\u5f84\u3002\u6240\u4ee5\u5feb\u9910\u5e97\u5fc5\u7136\u5728\u76f4\u5f84\u7684\u6b63\u4e2d\u95f4\u4ee5\u4f7f\u5f97\u5b83\u79bb\u76f4\u5f84\u4e24\u7aef\u8ddd\u79bb\u76f8\u540c\u3002\n\n\u6240\u4ee5\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u7b97\u51fa\u6574\u5f20\u56fe\u4e2d\u7684\u76f4\u5f84\uff0c\u8bb0\u76f4\u5f84\u957f\u4e3a$ans$\uff0c\u5219\u6700\u540e\u7b54\u6848\u5c31\u662f$ans/2$\uff0c\u8f93\u51fa\u5373\u53ef\u3002\n\n## \u6734\u7d20\u7b97\u6cd5\n\n\u7531\u4e8e\u8fd9\u6574\u5f20\u56fe\u662f\u4e00\u4e2a\u57fa\u73af\u6811\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u6bcf\u6b21\u7834\u6389\u73af\u4e0a\u7684\u4e00\u6761\u8fb9\u4f7f\u5b83\u53d8\u6210\u4e00\u9897\u6811\uff0c\u7136\u540e\u6c42\u51fa\u76f4\u5f84\uff0c\u6700\u540e\u7edf\u8ba1\u6240\u6709\u7684\u76f4\u5f84\u4e2d\u6700\u77ed\u7684\u90a3\u4e2a\u4f5c\u4e3a\u7b54\u6848\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n^2)$\uff0c\u5b9e\u73b0\u8f83\u7b80\u5355\n\n## \u6b63\u89e3\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n)$\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u628a\u73af\u4e0a\u4efb\u610f\u70b9\u6240\u5728\u7684\u5b50\u6811\u7684\u53c2\u6570\u5b58\u653e\u5728\u8fd9\u4e2a\u70b9\u4e0a\uff0c\u7136\u540e\u5bf9\u4e8e\u8fd9\u4e9b\u70b9\u8fdb\u884c\u64cd\u4f5c\u3002\n\n\u6211\u4eec\u5148\u8003\u8651\u6574\u4e2a\u56fe\u4e0a\u7684\u76f4\u5f84\u53ef\u80fd\u5b58\u5728\u7684\u60c5\u51b5\u3002\n- \u8fd9\u4e2a\u76f4\u5f84\u5b8c\u5168\u5728\u73af\u4e0a\u67d0\u4e00\u70b9\u6240\u5728\u7684\u5b50\u6811\u4e2d\u3002\n- \u8fd9\u4e2a\u76f4\u5f84\u4ece\u73af\u4e0a\u67d0\u4e00\u70b9\u6240\u5728\u5b50\u6811\u51fa\u53d1\uff0c\u5230\u8fbe\u8be5\u70b9\u540e\u5728\u73af\u4e0a\u8d70\u8fc7\u4e00\u4e9b\u8fb9\u5230\u8fbe\u53e6\u4e00\u4e2a\u70b9\uff0c\u8fdb\u5165\u8be5\u70b9\u6240\u5728\u5b50\u6811\u5e76\u4e14\u7ed3\u675f\u3002\n\n\u7b2c\u4e00\u79cd\u60c5\u51b5\u89e3\u51b3\u6bd4\u8f83\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u9700\u8981\u904d\u5386\u73af\u4e0a\u7684\u6bcf\u4e00\u4e2a\u70b9\uff0c\u6c42\u51fa\u5b83\u6240\u5728\u5b50\u6811\u7684\u76f4\u5f84\u8ba1\u5165\u7b54\u6848\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff0c\u6211\u4eec\u5bb9\u6613\u53d1\u73b0\u76f4\u5f84\u5728\u67d0\u5b50\u6811\u5185\u7684\u90e8\u5206\u4e00\u5b9a\u662f\u4ece\u8be5\u5b50\u6811\u7684\u6839\u51fa\u53d1\u7684\u6700\u957f\u8def\u5f84\uff0c\u5373\u6811\u7684\u6700\u5927\u6df1\u5ea6\u3002\u6240\u4ee5\u6211\u4eec\u9884\u5148\u5904\u7406\u73af\u4e0a\u6240\u6709\u70b9\u6240\u5728\u5b50\u6811\u7684\u6700\u5927\u6df1\u5ea6\u8bb0\u4e3a$dis_i$\u3002\n\n\u7136\u540e\u6211\u4eec\u5b9a\u4e49\u56db\u4e2a\u6570\u7ec4\uff0c\u6682\u4e14\u547d\u540d\u4e3a$A,B,C,D$\u3002\u8bb0\u73af\u4e0a\u70b9\u6570\u4e3a$cnt$\uff0c\u73af\u4e0a\u70b9\u79bb1\u53f7\u70b9\u7684\u8ddd\u79bb\u4e3a$pre_i$,\u79bbcnt\u53f7\u70b9\u7684\u8ddd\u79bb\u4e3a$sub_i$\u5219\n- $A_i$\u8868\u793a\u73af\u4e0a$1\\leq x\\leq i$\u65f6$dis_x+pre_x$\u7684\u6700\u5927\u503c\n- $B_i$\u8868\u793a\u73af\u4e0a$1\\leq x\\leq y\\leq i$\u4e2d$dis_x+dis_y-pre_x+pre_y$\u7684\u6700\u5927\u503c\n- $C_i$\u8868\u793a\u73af\u4e0a$i\\leq x\\leq cnt$\u4e2d$dis_x+sub_x$\u7684\u6700\u5927\u503c\n- $D_i$\u8868\u793a\u73af\u4e0a$i\\leq x\\leq y\\leq cnt$\u4e2d$dis_x+dis_y+sub_x-sub_y$\u7684\u6700\u5927\u503c\n\n\u56db\u4e2a\u6570\u7ec4\u5206\u522b\u5b58\u653e\u7684\u662f\uff0c\u4e0d\u5b8c\u6574\u7684\u76f4\u5f84\u7684\u53f3\u534a\u8fb9\u7684\u6700\u5927\u503c\uff0c\u5904\u5728i\u5de6\u4fa7\u7684\u76f4\u5f84\u7684\u6700\u5927\u503c\uff0c\u4e0d\u5b8c\u6574\u7684\u76f4\u5f84\u7684\u5de6\u534a\u8fb9\u7684\u6700\u5927\u503c\uff0c\u548c\u5904\u5728i\u53f3\u4fa7\u7684\u76f4\u5f84\u7684\u6700\u5927\u503c\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5f88\u81ea\u7136\u7684\u60f3\u5230\u5bf9\u4e8e\u67d0\u4e00\u4e2ai\uff0c\u5728\u73af\u4e0a\u65ad\u5f00i\u548ci+1\u4e4b\u95f4\u7684\u8fde\u8fb9\u540e\u76f4\u5f84\u5e94\u8be5\u53ef\u4ee5\u5206\u6210\u4e09\u90e8\u5206\uff08\u5176\u4e2dtmp\u662f1\u548ccnt\u4e24\u70b9\u95f4\u8fb9\u7684\u957f\u5ea6\uff09\uff1a\n- \u53ea\u5728$1\\sim i$\u4e4b\u95f4\u7684\u76f4\u5f84\uff0c\u5373$B_i$\n- \u53ea\u5728$i+1\\sim cnt$\u4e4b\u95f4\u7684\u76f4\u5f84\uff0c\u5373$D_i$\n- \u4e00\u534a\u5728$1\\sim i$\u4e4b\u95f4\uff0c\u4e00\u534a\u5728$i+1\\sim cnt$\u4e4b\u95f4\uff0c\u901a\u8fc71\u53f7\u70b9\u548ccnt\u53f7\u70b9\u7684\u8fde\u8fb9\u8fde\u63a5\u7684\u76f4\u5f84\uff0c\u5373$A_i+C_{i+1}+tmp$\n\n\u6240\u4ee5\u7efc\u5408\u8d77\u6765\u6211\u4eec\u4ecei\u53f7\u70b9\u65ad\u5f00\u7684\u76f4\u5f84\u957f\u5ea6\u5373\u4e3a$max(B_i,D_i,A_i+C_{i+1}+tmp)$\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5faa\u73af\u679a\u4e3en\u6b21\u5373\u53ef\u6c42\u51fa\u7b54\u6848\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(n)$\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u627e\u73af\u64cd\u4f5c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(n)$\uff0c\u56e0\u4e3a\u6bcf\u4e00\u4e2a\u70b9\u53ea\u8bbf\u95ee\u8fc7\u4e00\u6b21\uff1b\u5bf9\u4e8e\u6bcf\u9897\u5b50\u6811\u4e0a\u7684\u6c42\u76f4\u5f84\u548c\u6c42\u6df1\u5ea6\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5747\u4e3a$O(n)$\uff1b\u6700\u540e\u7684dp\u64cd\u4f5c\u4e5f\u662f$O(n)$\u3002\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(n)$\u3002\n\n## \u7ec6\u8282\n\n\u4f46\u662f\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e9b\u7ec6\u8282\u3002\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u6c42\u51fa\u76f4\u5f84\uff0c\u6240\u4ee5\u5728\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\uff08\u5982\u6700\u540edp\u8fc7\u7a0b\u4e2d\u6bd4\u8f83\u4e09\u79cd\u60c5\u51b5\uff09\u9700\u8981\u4f7f\u7528max\uff0c\u4f46\u662f\u6700\u540e\u5728\u7edf\u8ba1\u8fc7\u7a0b\u4e2d\uff08\u5c31\u662f\u5c06\u7ed3\u679c\u7edf\u8ba1\u8fdbans\u7684\u65f6\u5019\uff09\u6211\u4eec\u9700\u8981\u4f7f\u7528min\u3002\u56e0\u4e3a\u7edf\u8ba1\u8fc7\u7a0b\u4e2d\u63a5\u89e6\u7684\u6bcf\u4e00\u4e2a\u7b54\u6848\u90fd\u662f\u5728\u67d0\u4e00\u79cd\u60c5\u51b5\u4e0b\u53ef\u4ee5\u8fbe\u5230\u7684\u76f4\u5f84\u957f\u5ea6\uff0c\u6309\u7167\u9898\u9762\u63cf\u8ff0\uff0c\u6700\u5c0f\u7684\u5373\u4e3a\u6700\u4f18\u89e3\uff0c\u6211\u4eec\u9700\u8981\u53d6min\u3002\n\n\u800c\u4e14\u6211\u6700\u5f00\u59cb\u5077\u61d2\u5c1d\u8bd5\u5c06\u76f4\u5f84\u4e24\u79cd\u60c5\u51b5\uff08\u5728\u4e00\u68f5\u5b50\u6811\u4e2d\u548c\u5728\u4e24\u68f5\u5b50\u6811\u4e2d\uff09\u7684\u7ed3\u679c\u7528\u4e00\u4e2aanswer\u53d8\u91cf\u4e00\u8d77\u89e3\u51b3\uff0c\u4f46\u662f\u5230\u6700\u540e\u6211\u53d1\u73b0\u6211\u53ea\u62ff\u5230\u4e8680\u5206\uff0c\u670920\u5206WA\u4e86\u5e76\u4e14\u90fd\u662f\u7b54\u6848\u504f\u5c0f\u3002\u540e\u6765\u660e\u767d\u662f\u5bf9\u4e8e\u4e24\u4e2aanswer\uff0c\u6211\u4eec\u80af\u5b9a\u662f\u8981\u53d6max\u7684\uff08\u56e0\u4e3a\u5982\u679c\u4e24\u8005\u4e2d\u8f83\u5c0f\u7684\u503c\u662f\u76f4\u5f84\uff0c\u90a3\u4e48\u8f83\u5927\u8005\u663e\u7136\u6bd4\u5b83\u66f4\u957f\uff0c\u6240\u4ee5\u8f83\u5927\u8005\u624d\u5e94\u8be5\u662f\u76f4\u5f84\uff0c\u6240\u4ee5\u53d6max\uff09\uff0c\u4f46\u662f\u5728answer1\u548canswer2\u7684\u5185\u90e8\u7edf\u8ba1\u4e2d\u6211\u4eec\u5168\u90e8\u91c7\u7528\u7684\u662fmin\uff0c\u6240\u4ee5\u4e24\u4e2a\u53d8\u91cf\u662f\u4e0d\u53ef\u4ee5\u6df7\u7528\u7684\u3002\uff08\u5c0f\u7ec6\u8282\u800c\u5df2\u5566\uff0c\u53ea\u662f\u81ea\u5df1\u72af\u8fc7\u7684\u4e00\u4e2a\u9519\uff09\n\n\u8fd9\u4e9b\u7ec6\u8282\u53ef\u4ee5\u5728\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\u770b\u5230\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int maxn = 1e5 + 5;\n\nstruct edge\n{\n    int to, from, cost;\n} graph[maxn << 1];\nint last[maxn << 1], cnt = 0;\n\nint fa[maxn], cost[maxn];\nint ringDist[maxn]; //\u73af\u4e0a\u5b50\u6811\u7684\u524d\u9762\u7684\u8fb9\nint ring[maxn], ringCnt = 0;\nbool isRing[maxn]; //\u662f\u5426\u5728\u73af\u4e0a\nint dfn[maxn], timet = 0;\nlong long dis[maxn]; //\u5b50\u6811\u6700\u5927\u6df1\u5ea6\n\nlong long A[maxn], //\u524d\u7f00+\u5b50\u6811\u6700\u5927\u6df1\u5ea6\n    B[maxn],       //\u524d\u7f00\u4e2d\u4e24\u4e2a\u5b50\u6811\u7684\u6700\u5927\u6df1\u5ea6+\u4e24\u70b9\u8ddd\u79bb\n    C[maxn],       //\u540e\u7f00+\u5b50\u6811\u6700\u5927\u6df1\u5ea6\n    D[maxn];       //\u540e\u7f00\u4e2d\u4e24\u4e2a\u5b50\u6811\u7684\u6700\u5927\u6df1\u5ea6+\u4e24\u70b9\u8ddd\u79bb\n\nvoid add(int x, int y, int z)\n{\n    graph[++cnt].to = y;\n    graph[cnt].cost = z;\n    graph[cnt].from = last[x];\n    last[x] = cnt;\n    return;\n}\n\nvoid dfs(int p)\n{\n    dfn[p] = ++timet;\n    for (int i = last[p]; i; i = graph[i].from)\n    {\n        int to = graph[i].to;\n        if (to != fa[p])\n            if (!dfn[to]) //\u6b63\u5e38\u9012\u5f52\n            {\n                fa[to] = p;\n                cost[to] = graph[i].cost;\n                dfs(to);\n            }\n            else if (dfn[to] > dfn[p]) //\u627e\u5230\u73af\n            {\n                for (; to != p; to = fa[to]) //\u7ed5\u4e00\u5708\n                {\n                    isRing[to] = true;\n                    ring[++ringCnt] = to;\n                    ringDist[ringCnt] = cost[to];\n                }\n                isRing[p] = true;\n                ring[++ringCnt] = p;\n                ringDist[ringCnt] = graph[i].cost;\n            }\n    }\n    return;\n}\n\nlong long ans = 0;\n\nvoid work(int p, int fa)\n{\n    for (int i = last[p]; i; i = graph[i].from)\n    {\n        int to = graph[i].to;\n        if (!isRing[to] && to != fa)\n        {\n            work(to, p);\n            ans = max((long long)dis[p] + dis[to] + graph[i].cost, ans);\n            dis[p] = max(dis[p], dis[to] + graph[i].cost);\n        }\n    }\n    return;\n}\n\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n; i++)\n    {\n        fa[i] = i;\n        int from, to, dist;\n        scanf(\"%d%d%d\", &from, &to, &dist);\n        add(from, to, dist);\n        add(to, from, dist);\n    }\n    dfs(1);\n    for (int i = 1; i <= ringCnt; i++)\n        work(ring[i], 0); //\u5bf9\u4e8e\u73af\u4e0a\u7684\u6bcf\u4e00\u4e2a\u70b9\u8fdb\u884c\u5b50\u6811\u7684\u4fe1\u606f\u7edf\u8ba1\n    long long sum = 0, maxx = 0;\n    for (int i = 1; i <= ringCnt; i++)\n    {\n        sum += ringDist[i - 1];                          //sum\u662f\u524d\u7f00\n        A[i] = max(A[i - 1], dis[ring[i]] + sum);        //\u5b50\u6811\u6df1\u5ea6+\u524d\u7f00\u957f\u5ea6\n        B[i] = max(B[i - 1], sum + maxx + dis[ring[i]]); //\u7528\u4e4b\u524d\u6700\u6df1\u7684+\u5f53\u524d\u5b50\u6811\u6df1\u5ea6+\u4e24\u5b50\u6811\u4e4b\u95f4\u8ddd\u79bb\n        maxx = max(maxx, dis[ring[i]] - sum);            //\u7ef4\u62a4\u6700\u6df1\u7684\u5b50\u6811\u6df1\u5ea6\n        //\u8fd9\u91cc\u6211\u4eec\u76f4\u63a5\u5c06dis\u548c\u524d\u7f00\u4e00\u8d77\u5b58\u653e\uff0c\u65b9\u4fbf\u64cd\u4f5c\n    }\n    sum = maxx = 0;\n    int tmp = ringDist[ringCnt];\n    ringDist[ringCnt] = 0; //\u5207\u5f00\u73af\n    for (int i = ringCnt; i; i--)\n    {\n        sum += ringDist[i];                              //sum\u662f\u540e\u7f00\n        C[i] = max(C[i + 1], dis[ring[i]] + sum);        //\u5b50\u6811\u6df1\u5ea6+\u540e\u7f00\u957f\u5ea6\n        D[i] = max(D[i + 1], sum + maxx + dis[ring[i]]); //\u7528\u4e4b\u524d\u6700\u6df1\u7684+\u5f53\u524d\u5b50\u6811\u6df1\u5ea6+\u4e24\u5b50\u6811\u4e4b\u95f4\u8ddd\u79bb\n        maxx = max(maxx, dis[ring[i]] - sum);            //\u7ef4\u62a4\u6700\u6df1\u7684\u5b50\u6811\u6df1\u5ea6\n    }\n    long long ans2 = B[ringCnt]; //\u4ece1\u548ccnt\u4e4b\u95f4\u65ad\u5f00\u7684\u60c5\u51b5\n    for (int i = 1; i < ringCnt; i++)\n        ans2 = min(max(max(B[i], D[i + 1]), A[i] + C[i + 1] + tmp), ans2); //\u4ecei\u62c6\u5f00\u7684\u4e09\u79cd\u60c5\u51b5\n    printf(\"%.1lf\", (double)max(ans, ans2) / 2.0);\n    return 0;\n}\n```",
        "postTime": 1592028113,
        "uid": 98482,
        "name": "Macesuted",
        "ccfLevel": 0,
        "title": "P1399"
    },
    {
        "content": "\u8c8c\u4f3c\u90fd\u6ca1\u4eba\u8bb2\u6e05\u695a\u5c06\u9898\u76ee\u4ece\u57fa\u73af\u6811\u8f6c\u5316\u4e3a\u6811\u7684\u63a8\u8bba\u7684\u8bc1\u660eqaq\u3002\u6211\u8fd8\u601d\u8003\u8fd9\u4e2a\u601d\u8003\u4e86\u597d\u4e45\uff0c\u6700\u540e\u5728\u672c\u9898\u8ba8\u8bba\u88ab\u63d0\u9192\u540e\u624d\u53d1\u73b0\u6574\u4e2a\u601d\u8def\u65b9\u5411\u9519\u4e86X\n\n\u8fd9\u91cc\u5c31\u7740\u91cd\u8bb2\u4e0b\u8fd9\u4e2a\u63a8\u8bba\u7684\u8bc1\u660e\uff0c\u4ee5\u53ca\u7ed9\u51fa\u4e00\u4e2a\u4e0d\u592a\u4e00\u6837\u7684\u5904\u7406\u65ad\u73af\u540e\u6811\u76f4\u5f84\u7684\u65b9\u6cd5\uff08\u8fd9\u4e2a\u8981\u611f\u8c22[\u8ba8\u8bba\u533a](https://www.luogu.com.cn/discuss/show/255658)\u7684 @C3H5ClO qwq\uff09\n\n## \u89e3\u6790\n\n### \u8f6c\u5316\u95ee\u9898\n\nP.S. \u5199\u5b8c\u540e\u611f\u89c9\u81ea\u5df1\u8bb2\u5f97\u6709\u70b9\u70c2...\u5199\u5f97\u5f88\u96be\u7406\u89e3\n\n\u5982\u679c\u5b9e\u5728\u4e0d\u60f3\u770b\u4e0b\u9762\u8fd9\u6bb5\u5f88\u957f\u7684\u8f83\u4e25\u8c28\u8bc1\u660e\uff08\u751a\u81f3\u63a8\u8350\u522b\u770bX\uff09\uff0c\u53ef\u4ee5\u8003\u8651\u770b\u8fd9\u4e2a\u7b80\u5355\u7248\u672c\uff1a\n\n\u6211\u4eec\u505a\u51fa\u7b54\u6848\u70b9\u7684\u6700\u77ed\u8def\u751f\u6210\u6811\uff0c\u53d1\u73b0\u7b54\u6848\u70b9\u4e5f\u662f\u8be5\u751f\u6210\u6811\u4e0a\u5230\u5176\u5b83\u70b9\u8ddd\u79bb\u7684\u6700\u5927\u503c\u6700\u5c0f\u7684\u70b9\uff08\u5bf9\u4e8e\u8be5\u751f\u6210\u6811\u7684\u7b54\u6848\uff09\uff0c\u4e8e\u662f\u53ef\u4ee5\u8003\u8651\u679a\u4e3e\u751f\u6210\u6811\u5e76\u6c42\u751f\u6210\u6811\u7684\u7b54\u6848\u3002\u63a5\u7740\u53c8\u53d1\u73b0\u679a\u4e3e\u751f\u6210\u6811\u6c42\u51fa\u7684\u7b54\u6848\u503c\u4e0d\u4f1a\u5c0f\u4e8e\u539f\u56fe\u7684\u7b54\u6848\u503c\uff0c\u4e8e\u662f\u7b97\u6cd5\u6b63\u786e\u6027\u6210\u7acb\n\n\uff08\u6811\u7684\u7b54\u6848\u5e94\u8be5\u5f88\u597d\u6c42\u628a\uff0c\u6700\u957f\u8def\u5f84\uff08\u76f4\u5f84\uff09\u9664\u4e8c\u5c31\u884c\u4e86\uff0c\u8fd9\u4e2a\u6b63\u786e\u6027\u968f\u4fbf\u600e\u4e48\u8bc1\u90fd\u53ef\u4ee5\uff09\n\n\uff08\u4e00\u4e2a\u7a7a\u884c\u540e\u5f00\u59cb\u6b63\u5f0f\u7684\u8bc1\u660e\uff09\n\n&nbsp;\n\n\u4e3a\u4e86\u8bf4\u660e\u65b9\u4fbf\uff0c\u8fd9\u91cc\u5bf9\u4e00\u4e9b\u4e0b\u9762\u4f1a\u7528\u5230\u7684\u8bb0\u53f7\u6216\u51fd\u6570\u5148\u505a\u51fa\u5b9a\u4e49\u3002$G$ \u6307\u539f\u56fe\uff0c$V$ \u662f\u7531\u539f\u56fe\u6240\u6709\u7ed3\u70b9\u7ec4\u6210\u7684\u96c6\u5408\uff0c$T_s$ \u662f\u4ee5 $s$ \u4e3a\u8d77\u70b9\u505a\u51fa\u7684\u539f\u56fe\u7684\u6700\u77ed\u8def\u5f84\u751f\u6210\u6811\uff1b$dist_G(u, v)$ \u6307\u5728\u5e26\u6743\u65e0\u5411\u56fe $G$ \u4e2d $u, v$ \u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u53ef\u4ee5\u77e5\u9053\u5728\u6811\u4e2d\u5b83\u4eec\u7684\u8ddd\u79bb\u662f\u552f\u4e00\u7684\n\n\u8bbe\u5feb\u9910\u5e97\u6700\u4f18\u7684\u4f4d\u7f6e\u7684\u96c6\u5408\u4e3a $S$\uff0c\u5e76\u8bbe $s\\in S$\u3002\u7531\u9898\u610f\u53ef\u77e5\uff0c$T_s$ \u7684\u6700\u5927\u6df1\u5ea6\uff08\u5e26\u8fb9\u6743\uff09\u4e00\u5b9a\u662f\u6240\u6709 $T_u, u\\in V$ \u4e2d\u6700\u5c0f\u7684\uff1b\u6216\u8005\u8bf4 $s$ \u6ee1\u8db3 $\\max\\limits_{v\\in V}(dist_G(s, v))=\\min\\limits_{u\\in V}(\\max\\limits_{v\\in V}(dist_G(u, v)))$\uff0c\u4e5f\u53ef\u5199\u6210 $\\max\\limits_{v\\in V}(dist_G(s, v))<\\min\\limits_{u\\in V,u\\not\\in S}(\\max\\limits_{v\\in V}(dist_G(u, v)))$\uff08\u5176\u5b9e $s$ \u4e5f\u6709\u53ef\u80fd\u5728\u67d0\u6761\u8fb9\u4e0a\uff0c\u53ea\u9700\u591a\u52a0\u4e00\u4e9b\u5b9a\u4e49\uff0c\u8fd9\u91cc\u4e0d\u8003\u8651\uff09\n\n\u4e14\u9898\u76ee\u6240\u6c42\u7684\u7b54\u6848\u5373\u4e3a $\\min\\limits_{u\\in V}(\\max\\limits_{v\\in V}(dist_G(u, v)))=\\max\\limits_{v\\in V}(dist_G(s, v)), s\\in S$\n\n\u6211\u4eec\u5148\u8bc1\u660e\u4e00\u4e2a\u5f15\u7406\uff1a\n\n> \u5f15\u7406 1. \u5728 $T_s$ \u4e2d\u5bfb\u627e\u4e00\u4e2a\u70b9 $s'$\uff0c\u4f7f\u5f97 $s'$ \u5230\u5176\u5b83\u7ed3\u70b9\u7684\u5728 $T_s$ \u4e0a\u7684\u8ddd\u79bb\u7684\u6700\u5927\u503c\u6700\u5c0f\uff0c\u5219\u4e00\u5b9a\u6709 $s'\\in S$\n\n\u8003\u8651\u53cd\u8bc1\u6cd5\u3002\u82e5\u6709 $s', s'\\not\\in S$ \u4e14\u4f7f\u5f97 $s'$ \u5230\u5176\u5b83\u7ed3\u70b9\u7684\u8ddd\u79bb\u7684\u6700\u5927\u503c\u6700\u5c0f\uff0c\u6211\u4eec\u53d1\u73b0\u4e00\u5b9a\u6709 $\\max\\limits_{v\\in V}(dist_T(s', v))\\leq \\max\\limits_{v\\in V}(dist_{T}(s, v))$\u3002\u7531\u4e8e\u751f\u6210\u6811\u4e0a\u7684\u4e24\u70b9\u95f4\u6700\u77ed\u8ddd\u79bb\u4e00\u5b9a\u4e0d\u5c0f\u4e8e\u539f\u56fe\u4e0a\u4e24\u70b9\u95f4\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728\u539f\u56fe\u4e2d\uff0c\u6709 $\\max\\limits_{v\\in V}(dist_G(s', v))\\leq\\max\\limits_{v\\in V}(dist_G(s, v))<\\min\\limits_{u\\in V,u\\not\\in S}(\\max\\limits_{v\\in V}(dist_G(u, v)))$\uff0c\u5373\u4ee3\u8868 $s'\\in S$\u3002\u8fd9\u5bfc\u51fa\u4e86\u77db\u76fe\uff0c\u56e0\u6b64\u5047\u8bbe\u4e0d\u6210\u7acb\n\n\u63a5\u7740\u6211\u4eec\u518d\u8bc1\u660e\u4e00\u4e2a\u5f15\u7406\uff1a\n\n> \u5f15\u7406 2. \u679a\u4e3e $G$ \u7684\u751f\u6210\u6811 $T$\uff0c\u5e76\u5728\u751f\u6210\u6811\u4e0a\u627e\u4e00\u70b9 $s'$\uff0c\u4f7f\u5f97 $s'$ \u5230\u5176\u5b83\u7ed3\u70b9\u7684\u5728 $T$ \u4e0a\u7684\u8ddd\u79bb\u7684\u6700\u5927\u503c\u6700\u5c0f\uff0c\u5e76\u8bb0\u5c06\u8be5\u503c\u8bb0\u4e3a $f(T)$\uff1b\u5bf9\u4e8e\u6709\u6839\u6811\u6211\u4eec\u7528\u540c\u6837\u7684\u65b9\u5f0f\u5b9a\u4e49\u3002\u5219\u5bf9\u4e8e\u6240\u6709\u53ef\u80fd\u7684\u751f\u6210\u6811\uff0c\u6709 $f(T)\\geq f(T_s), s\\in S$\n\n\u7531\u4e8e \u5f15\u7406 1.\uff0c\u6211\u4eec\u5b9e\u9645\u4e0a\u6709 $f(T_s)=\\max\\limits_{v\\in V}(dist_G(s, v))$\n\n\u6211\u4eec\u7684\u8bc1\u660e\u601d\u8def\u5176\u5b9e\u548c\u521a\u624d\u5dee\u4e0d\u591a\u3002\u82e5\u5b58\u5728\u4e00\u4e2a\u751f\u6210\u6811 $T$\uff0c\u6709 $f(T)<f(T_s), s\\in S$\uff0c\u5373\u4ee3\u8868\u6211\u4eec\u80fd\u5728 $T$ \u4e0a\u627e\u5230\u4e00\u4e2a\u70b9 $s'$\uff0c\u4f7f\u5f97 $\\max\\limits_{v\\in V}(dist_G(s', v))\\leq\\max\\limits_{v\\in V}(dist_T(s', v))<\\max\\limits_{v\\in V}(dist_G(s, v))$\uff0c\u800c\u8fd9\u4e0d\u6ee1\u8db3 $S$ \u7684\u5b9a\u4e49\uff0c\u56e0\u6b64\u5047\u8bbe\u4e0d\u6210\u7acb\n\n&nbsp;\n\n\u6709\u4e86\u4e0a\u9762\u4e24\u4e2a\u5f15\u7406\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u5c31\u80fd\u5f97\u51fa\u4e00\u4e2a\u63a8\u8bba\uff1a\n\n> \u63a8\u8bba 1. \u679a\u4e3e $G$ \u7684\u751f\u6210\u6811 $T$\uff0c\u53d6\u6700\u5c0f\u7684 $f(T)$ \u7684\u503c\uff0c\u8be5\u503c\u5373\u4e3a\u9898\u76ee\u6240\u6c42\u7684\u7b54\u6848\uff08$\\max\\limits_{v\\in V}(dist_G(s, v))$\uff0c$s\\in S$\uff09\n\n\u7531 \u5f15\u7406 1. \u548c \u5f15\u7406 2. \uff0c\u8be5\u63a8\u8bba\u7acb\u5373\u6210\u7acb\n\n### \u518d\u8f6c\u5316\u95ee\u9898\n\n\u5bf9\u4e8e\u4e00\u4e2a\u57fa\u73af\u6811\uff0c\u679a\u4e3e\u5b83\u7684\u751f\u6210\u6811\u663e\u7136\u53ea\u7528\u679a\u4e3e\u65ad\u73af\u4e0a\u7684\u54ea\u6761\u8fb9\n\n\u9996\u5148\u6211\u4eec\u968f\u4fbf\u9009\u4e00\u6761\u8fb9\u65ad\u6389\u5f97\u5230\u4e00\u4e2a\u94fe\uff0c\u5e76\u628a\u5f97\u5230\u7684\u94fe\u5e8f\u5217\u590d\u5236\u4e00\u904d\uff0c\u8fd9\u6837\u5728\u8fd9\u4e2a\u590d\u5236\u540e\u5e8f\u5217\u4e0a\u6ed1\u52a8\u4e00\u4e2a\u5bbd\u5ea6\u4e3a $k$ \u7684\u7a97\u53e3\uff0c\u5176\u4e2d $k$ \u4e3a\u73af\u4e0a\u7ed3\u70b9\u4e2a\u6570\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u6240\u6709\u7684\u65ad\u73af\u60c5\u51b5\n\n\u5177\u4f53\u6765\u8bb2\uff0c\u6211\u4eec\u968f\u4fbf\u8bbe\u73af\u4e0a\u4e00\u4e2a\u7ed3\u70b9\u4e3a\u8d77\u70b9\uff0c\u5e76\u4ece\u5b83\u5f00\u59cb\u6309\u89c4\u5b9a\u65b9\u5411\u4e0d\u91cd\u590d\u904d\u5386\u73af\u4e0a\u7ed3\u70b9\uff0c\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u5e8f\u5217 $\\{u_0, \\cdots, u_{k-1}\\}$\uff0c\u8bbe\u5e8f\u5217\u4ece $0$ \u5f00\u59cb\uff0c\u5176\u4e2d $k$ \u4e3a\u73af\u4e0a\u7ed3\u70b9\u4e2a\u6570\u3002\u63a5\u7740\u5c06\u8be5\u5e8f\u5217\u590d\u5236\u4e00\u904d\uff0c\u5f97\u5230\u5e8f\u5217 $\\{u_0, \\cdots, u_{k-1}, u_0, \\cdots, u_{k-1}\\}$\uff0c\u91cd\u6807\u53f7\u4e3a $\\{u_0, \\cdots, u_{k-1}, u_k, \\cdots, u_{2k-1}\\}$\uff0c\u82e5\u6709\u4e00\u4e2a\u5bbd\u4e3a $k$ \u7a97\u53e3\u5728\u5e8f\u5217\u4e2d\u6ed1\u52a8\uff0c\u5e76\u89c4\u5b9a\u7a97\u53e3\u4e2d\u7b2c\u4e00\u4e2a\u5143\u7d20\u548c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u95f4\u7684\u8fb9\u662f\u65ad\u8fb9\uff0c\u8be5\u7a97\u53e3\u7684\u6240\u6709\u53ef\u80fd\u72b6\u6001\u5c31\u5bf9\u5e94\u7740\u6240\u6709\u53ef\u80fd\u7684\u65ad\u8fb9\u72b6\u6001\n\n\u540c\u65f6\u5728\u505a\u6811 dp \u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u5df2\u7ecf\u5bf9\u73af\u4e0a\u6bcf\u4e00\u4e2a\u70b9\u5904\u7406\u51fa\u4e86\u5b83\u53ea\u5411\u5b50\u6811\u8d70\u7684\u6700\u957f\u8def\u5f84\uff0c\u8bb0\u4e3a $f(u)$\n\n\u518d\u6765\u8003\u8651\u4e00\u6bb5\u8def\u5f84\u7684\u8d21\u732e\uff0c\u5176\u663e\u7136\u4e3a $f(u)+f(v)+dist(u, v)$\uff0c\u5176\u4e2d $u$ \u662f\u73af\u4e0a\u8d77\u70b9\uff0c$v$ \u662f\u73af\u4e0a\u7ec8\u70b9\uff0c$dist(u, v)$ \u6307\u4ece $u$ \u5230 $v$ \u5728\u73af\u4e0a\u6309\u89c4\u5b9a\u65b9\u5411\u904d\u5386\u7684\u8def\u5f84\u957f\n\n\u800c $dist(u, v)$ \u5176\u5b9e\u53ef\u4ee5\u7528\u524d\u7f00\u548c\u7ef4\u62a4\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u7ed9 $u_0$ \u8d4b\u6743\u503c $0$\uff0c\u5bf9\u4e8e\u5176\u4f59\u7684 $u_i$ \u8d4b\u6743\u503c $w(u_{i\\mod k}, u_{(i-1)\\mod k})$\uff0c\u5176\u4e2d $w(u, v)$ \u6307\u56fe\u4e2d\u5bf9\u5e94\u8fb9\u7684\u6743\u503c\uff1b\u6211\u4eec\u7ed9\u8fd9\u4e2a\u503c\u505a\u4e00\u4e2a\u524d\u7f00\u548c\uff0c\u8bb0\u4e3a $s(u)$\uff0c\u4e0a\u9762\u7684\u8d21\u732e\u5f0f\u5b50\u5c31\u53ef\u4ee5\u5199\u4e3a $f(u)-s(u)+f(v)+s(v)$\uff0c\u6211\u4eec\u8981\u4ee4\u5b83\u6700\u5927\n\n\uff08\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u4e0d\u590d\u5236\u5e8f\u5217\uff0c\u76f4\u63a5\u6839\u636e\u73af\u4e0a\u8def\u5f84\u6027\u8d28\u5206\u7c7b\u8ba8\u8bba\u5c31\u884c\u4e86\uff0c\u8fd8\u66f4\u597d\u7406\u89e3X\u3002\u8fd9\u4e2a\u505a\u6cd5\u53ef\u4ee5\u53c2\u8003\u5176\u4ed6\u9898\u89e3\u4ee5\u53ca [\u8fd9\u9053\u9898](https://www.luogu.com.cn/problem/CF835F)\uff09\n\n### \u6ed1\u52a8\u7a97\u53e3\u7ef4\u62a4\u6b21\u5927\u503c\n\n\u7531\u4e8e\u5f0f\u5b50\u91cc\u6709\u4e24\u4e2a\u5143\u7d20\uff0c\u4e00\u4e2a\u662f \u201c\u52a0\u201d \u4e00\u4e2a\u662f \u201c\u51cf\u201d\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u7ef4\u62a4\u4e24\u79cd\u503c\u7684\u6700\u5927\u503c\u3002\u4f46\u6ce8\u610f\u5230\u5f53 $f(u)$ \u8db3\u591f\u5927\u65f6\uff0c\u4e24\u79cd\u503c\u7684\u6700\u5927\u503c\u90fd\u4f1a\u53d6\u540c\u4e00\u4e2a\u7ed3\u70b9\uff0c\u8fd9\u663e\u7136\u662f\u4e0d\u5408\u6cd5\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u8fd8\u9700\u7ef4\u62a4\u6b21\u5927\u503c\u3002\u6ed1\u52a8\u7a97\u53e3\u6b21\u5927\u503c\u5355\u8c03\u961f\u5217\u662f\u4e0d\u53ef\u505a\u7684\uff08\u5982\u679c\u6709\u4ec0\u4e48\u65b9\u6cd5\u8bf7\u544a\u8bc9\u6211qaq\uff09\uff0c\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e2a\u5176\u5b83\u601d\u8def\u7684\u7ebf\u6027\u505a\u6cd5\n\n\u8bbe\u533a\u95f4\u4ece $0$ \u5f00\u59cb\u6807\u53f7\uff0c\u7a97\u53e3\u5927\u5c0f\u4e3a $m$\n\n\u8bbe $f(x, 0/1)$ \u8868\u793a\u53f3\u7aef\u70b9\u4e3a $x$\uff0c\u5de6\u7aef\u70b9\u4e3a\u6700\u5927\u7684 $y$ \u6ee1\u8db3 $y< x$ \u4e14 $(m-1)|y$\uff0c\u533a\u95f4 $(y, x]$ \u7684\u6700\u5927\u503c\uff08`0`\uff09\u3001\u6b21\u5927\u503c\uff08`1`\uff09\n\n\u8bbe $g(x, 0/1)$ \u8868\u793a\u5de6\u7aef\u70b9\u4e3a $x$\uff0c\u53f3\u7aef\u70b9\u4e3a\u6700\u5c0f\u7684 $y$ \u6ee1\u8db3 $y\\geq x$ \u4e14 $(m-1)|y$\uff0c\u533a\u95f4 $[x, y]$ \u7684\u6700\u5927\u503c\uff08`0`\uff09\u3001\u6b21\u5927\u503c\uff08`1`\uff09\n\n\u5bf9\u4e8e\u4efb\u610f\u7a97\u53e3\uff0c\u8bbe\u5176\u5de6\u7aef\u70b9\u4e3a $l$\uff0c\u5176\u8303\u56f4\u5c31\u4e3a $[l, l+m-1]$\u3002**\u5b83\u4e00\u5b9a\u5305\u542b\u4e00\u4e2a\u4e0b\u6807\u80fd\u88ab $(m-1)$ \u6574\u9664\u7684\u5143\u7d20**\uff1b\u8bbe\u8be5\u5143\u7d20\u4e0b\u6807\u4e3a $z$\uff0c\u8fd8\u4e00\u5b9a\u6ee1\u8db3 $[l, z], (z, l+m-1]$ \u5747\u975e\u7a7a\u3002\n\n\u8bbe $f'(x)=\\max(f(x, 0), f(x, 1))$\uff0c $g'(x)$ \u4e5f\u540c\u3002\u4e8e\u662f\u8be5\u7a97\u53e3\u7684\u6700\u5927\u503c\u5c31\u4e3a $\\max(g'(l), f'(l+m-1))$\uff0c\u6b21\u5927\u503c\u4e5f\u53ef\u7528\u7c7b\u4f3c\u7684\u65b9\u6cd5\u8ba1\u7b97\u51fa\n\n\u53e6\u5916\u5982\u679c\u533a\u95f4\u6709\u6b21\u5927\u503c\uff0c\u5219\u5e94\u6ee1\u8db3 $m\\geq 2$\uff0c\u6240\u4ee5\u6574\u9664 $(m-1)$ \u6ca1\u6709\u5927\u788d\n\n\uff08\u5176\u5b9e\u6539\u6210 $m$ \u4e5f\u53ef\u4ee5\uff0c\u7528\u7c7b\u4f3c\u7684\u65b9\u5f0f\u5b9a\u4e49\u5c31\u884c\u4e86\uff0c\u4e24\u4e2a\u533a\u95f4\u4e0d\u6ee1\u8db3\u5747\u975e\u7a7a\u4f46\u6ca1\u6709\u5927\u788d\u3002\u53ea\u662f\u6211\u6572\u4ee3\u7801\u65f6\u8fd8\u6ca1\u53d1\u73b0\u8fd9\u70b9\uff0c\u4e3a\u4e86\u65b9\u4fbf\u4ee3\u7801\u7406\u89e3\u9898\u89e3\u91cc\u5c31\u8bb2\u6210 $m-1$ \u4e86\uff09\n\n\u540c\u65f6\u8fd9\u4e2a\u65b9\u6cd5\u4e5f\u53ef\u7ef4\u62a4\u6ed1\u52a8\u7a97\u53e3\u7684\u5176\u5b83\u53ef\u9006/\u4e0d\u53ef\u9006\u533a\u95f4\u4fe1\u606f\uff08\u4e0d\u8fc7\u5fc5\u987b\u5f97\u53ef\u5408\u5e76\uff09\n\n## CODE\n\n\u9884\u5904\u7406\u4e0a\u8ff0\u4e24\u4e2a\u6570\u7ec4\u53ea\u9700\u987a\u7740\u9006\u7740\u904d\u5386\u4e00\u904d\u5e8f\u5217\uff0c\u6bcf\u9694 $(m-1)$ \u5c31\u6e05\u7a7a\u4e00\u6b21\u6700\u5927/\u6b21\u5927\u503c\u5373\u53ef\n\n\u4f46\u6ce8\u610f\u66f4\u65b0\u503c\u3001\u8bb0\u5f55\u503c\uff08\u9884\u5904\u7406\u6570\u7ec4\uff09\u3001\u6e05\u7a7a\u503c\u7684\u987a\u5e8f\uff0c\u6839\u636e\u4e0a\u9762\u5b9a\u4e49\u7684\u5f00/\u95ed\u533a\u95f4\u7b49\u4f1a\u6709\u4e00\u4e9b\u53d8\u5316\uff08\u8bdd\u8bf4\u8fd9\u91cc\u7684\u987a\u5e8f\u6211\u662f\u76f4\u63a5\u624b\u6a21\u51fa\u6765\u7684X\uff09\n\n\u53e6\u5916\u7531\u4e8e\u8fd8\u9700\u8bb0\u5f55\u503c\u5bf9\u5e94\u7684\u7ed3\u70b9\u7f16\u53f7\uff0c\u56e0\u6b64\u4ee3\u7801\u4f1a\u6709\u4e00\u4e9b\u58ee\u89c2...\u4e0d\u8fc7\u53ea\u8981\u601d\u8def\u770b\u61c2\u4e86\u81ea\u5df1\u5e94\u8be5\u4e5f\u80fd\u6572\u51fa\u6765X\uff08\u6700\u540e\u6211\u5b9e\u9645\u6253\u51fa\u6765\u4e5f\u6ca1\u8c03\u591a\u4e45\uff09\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#define ll long long\nusing std::max;\nusing std::min;\n\nconst int MAXN =1e5+50;\n\n/*------------------------------Map------------------------------*/\n\nint n, m;\nint first[MAXN], tote;\nstruct edge{\n\tint net, to, w;\n}e[MAXN<<1];\n\ninline void addedge(int u, int v, int w){\n\t++tote;\n\te[tote].to =v, e[tote].w =w, e[tote].net =first[u];\n\tfirst[u] =tote;\n\t++tote;\n\te[tote].to =u, e[tote].w =w, e[tote].net =first[v];\n\tfirst[v] =tote;\n}\n\n/*------------------------------Circle------------------------------*/\n\nint circle/*\u73af\u4e0a\u4e00\u70b9\uff0c\u76f8\u5f53\u4e8e index*/, lenc/*\u73af\u957f\u5ea6*/;\nint pre[MAXN], net[MAXN], evalpre[MAXN], evalnet[MAXN];\nbool vis[MAXN], color[MAXN];\nint stk[MAXN], top;\n\nint predfs(int u, int eid/*\u5904\u7406\u91cd\u8fb9\u73af*/){\n\tif((eid&1) == 0)\n\t\t--eid;\n\telse\n\t\t++eid;\n\tvis[u] =1;\n\tstk[top++] =u;\n\tfor(int l =first[u]; l; l =e[l].net)\n\t\tif(l != eid){\n\t\t\tnet[u] =e[l].to;\n\t\t\tevalnet[u] =e[l].w;\n\t\t\tif(vis[e[l].to])\n\t\t\t\treturn e[l].to;\n\t\t\telse{\n\t\t\t\tint ret =predfs(e[l].to, l);\n\t\t\t\tif(ret != 0)\n\t\t\t\t\treturn ret;\n\t\t\t}\n\t\t}\n\t--top;\n\treturn 0;\n}\n\nvoid getCircle(){\n\tint cir =predfs(1, 0);\n\tcircle =cir;\n\tlenc =1;\n\t/*\u63a5\u73af\u5e76\u7ed9\u73af\u67d3\u8272*/\n\tpre[cir] =stk[top-1];\n\tevalpre[cir] =evalnet[stk[top-1]];\n\tcolor[cir] =1;\n\twhile(stk[top-1] != cir){\n\t\t++lenc;\n\t\tpre[stk[top-1]] =stk[top-2];\n\t\tevalpre[stk[top-1]] =evalnet[stk[top-2]];\n\t\tcolor[stk[top-1]] =1;\n\t\t--top;\n\t}\n}\n\n/*------------------------------Dfs------------------------------*/\n\nll dp1[MAXN], dp2[MAXN];/*\u4ece u \u5411\u5b50\u6811\u8d70\u6700\u5927\u3001\u6b21\u5927\u7684\u94fe*/\nll Anst;\n\nvoid dfs1(int u, int fa){\n\tfor(int l =first[u]; l; l =e[l].net)\n\t\tif(e[l].to != fa && !color[e[l].to]/*\u907f\u514d\u8d70\u73af*/){\n\t\t\tdfs1(e[l].to, u);\n\t\t\tif(e[l].w+dp1[e[l].to] > dp1[u]){\n\t\t\t\tdp2[u] =dp1[u];\n\t\t\t\tdp1[u] =e[l].w+dp1[e[l].to];\n\t\t\t}\n\t\t\telse if(e[l].w+dp1[e[l].to] > dp2[u])\n\t\t\t\tdp2[u] =e[l].w+dp1[e[l].to];\n\t\t}\n\tAnst =max(Anst, dp1[u]+dp2[u]);\n}\n\n/*------------------------------\u6ed1\u52a8\u7a97\u53e3------------------------------*/\n\n/*\u5176\u4e2d z \u4ee3\u8868 x \u5de6\u4e14 z<x / \u53f3\u4e14 z>=x\uff0c\u6700\u8fd1\u7684\u4e0b\u6807\u88ab m-1 \u6574\u9664\u7684\u70b9\uff0c\u5176\u4e2d m \u4e3a\u7a97\u53e3\u5927\u5c0f*/\n/*\u524d\u4e24\u4e2a\u662f dp+sum\uff0c\u540e\u4e24\u4e2a\u662f dp-sum\uff0c\u7b2c\u4e8c\u7ef4\u4ee3\u8868\u6700\u5927/\u6b21\u5927\u503c*/\nll l1[MAXN<<1][2]/*(z, x]*/, r1[MAXN<<1][2]/*[x, z]*/, l2[MAXN<<1][2], r2[MAXN<<1][2];\nint idl1[MAXN<<1][2], idr1[MAXN<<1][2], idl2[MAXN<<1][2], idr2[MAXN<<1][2];\n\n/*------------------------------Main------------------------------*/\n\ninline int read(){\n\tint x =0; char c =getchar();\n\twhile(c < '0' || c > '9') c =getchar();\n\twhile(c >= '0' && c <= '9') x = (x<<3) + (x<<1) + (48^c), c =getchar();\n\treturn x;\n}\n\ninline void modify(ll &mx, ll & mxs, int &idmx, int &idmxs, const ll &val, const int &idval){\n\tif(val > mx)\n\t\tmxs =mx, idmxs =idmx, mx =val, idmx =idval;\n\telse if(val > mxs)\n\t\tmxs =val, idmxs =idval;\n}\n\nint main(){\n\tn =read();\n\tfor(int i =0; i < n; ++i){\n\t\tint u =read(), v =read(), w =read();\n\t\taddedge(u, v ,w);\n\t}\n\tgetCircle();\n\tfor(int u =circle, flg =0; u != circle || flg == 0; u =net[u]){\n\t\tif(u == circle)\n\t\t\tflg =1;\n\t\tdfs1(u, 0);\n\t}\n\tll sum =-evalpre[circle];\n\t/*\u8d70\u4e24\u5708\uff0c\u5e8f\u5217\u5927\u81f4\u4e3a\uff1as, ..., t, s, ..., t*/\n\tll mx1 =0, mx1s =0, mx2 =-0x3f3f3f3f3f3f3f3f, mx2s =-0x3f3f3f3f3f3f3f3f;/*mx \u6700\u5927\uff0cmxs \u6b21\u5927\uff0c\u6ce8\u610f mx2 \u53ef\u80fd\u53d6\u8d1f\u6570*/\n\tint idmx1 =-1, idmx1s =-1, idmx2 =-1, idmx2s =-1;\n\tfor(int u =circle, flg =0, i =0; u != circle || flg < 2; u =net[u], ++i){\n\t\tif(u == circle)\n\t\t\t++flg;\n\t\tsum +=evalpre[u];\n\t\tmodify(mx1, mx1s, idmx1, idmx1s, dp1[u]+sum, i);\n\t\tmodify(mx2, mx2s, idmx2, idmx2s, dp1[u]-sum, i);\n\t\tl1[i][0] =mx1, idl1[i][0] =idmx1, l1[i][1] =mx1s, idl1[i][1] =idmx1s;\n\t\tl2[i][0] =mx2, idl2[i][0] =idmx2, l2[i][1] =mx2s, idl2[i][1] =idmx2s;\n\t\tif(i%(lenc-1) == 0)/*\u5f00\u533a\u95f4\uff0c\u4e14\u6ce8\u610f\u987a\u5e8f ( \u8fd9\u91cc\u987a\u5e8f\u6211\u662f\u9760\u624b\u6a21\u89e3\u51b3\u7684 X )*/\n\t\t\tmx1 =mx1s =0, mx2 =mx2s =-0x3f3f3f3f3f3f3f3f,\n\t\t\tidmx1 =-1, idmx1s =-1, idmx2 =-1, idmx2s =-1;\n\t}\n//\tsum =-evalnet[pre[circle]];\n\t/*\u6ce8\u610f sum \u4e0d\u8981\u6e05\u7a7a\uff0c\u4ee5\u53ca\u6ce8\u610f\u63a5\u4e0b\u6765\u5bf9 sum \u7684\u5904\u7406*/\n\tmx1 =0, mx1s =0, mx2 =-0x3f3f3f3f3f3f3f3f, mx2s =-0x3f3f3f3f3f3f3f3f;\n\tidmx1 =-1, idmx1s =-1, idmx2 =-1, idmx2s =-1;\n\tfor(int u =pre[circle], flg =0, i =2*lenc-1/*\u6ce8\u610f\u4e0b\u6807*/; u != pre[circle] || flg < 2; u =pre[u], --i){\n\t\tif(u == pre[circle])\n\t\t\t++flg;\n\t\tif(i%(lenc-1) == 0)/*\u95ed\u533a\u95f4\uff0c\u4e14\u6ce8\u610f\u987a\u5e8f*/\n\t\t\tmx1 =mx1s =0, mx2 =mx2s =-0x3f3f3f3f3f3f3f3f,\n\t\t\tidmx1 =-1, idmx1s =-1, idmx2 =-1, idmx2s =-1;\n\t\tmodify(mx1, mx1s, idmx1, idmx1s, dp1[u]+sum, i);\n\t\tmodify(mx2, mx2s, idmx2, idmx2s, dp1[u]-sum, i);\n\t\tr1[i][0] =mx1, idr1[i][0] =idmx1, r1[i][1] =mx1s, idr1[i][1] =idmx1s;\n\t\tr2[i][0] =mx2, idr2[i][0] =idmx2, r2[i][1] =mx2s, idr2[i][1] =idmx2s;\n\t\tsum -=evalpre[u];\n\t}\n\t/*\u8d70\u4e00\u5708\u7edf\u8ba1\u7b54\u6848, \u521d\u59cb\u7a97\u53e3\u5927\u6982\u662f\u8fd9\u6837\u7684\uff1a[s, ..., t], s, ..., t*/\n\tll Ansc =0x3f3f3f3f3f3f3f3f;\n\tfor(int u =circle, flg =0, i =0; u != circle || flg < 1; u =net[u], ++i){\n\t\tif(u == circle)\n\t\t\t++flg;\n\t\tll Mx1 =0, Mx1s =0, Mx2 =-0x3f3f3f3f3f3f3f3f, Mx2s =-0x3f3f3f3f3f3f3f3f;\n\t\tint idMx1 =-1, idMx1s =-1, idMx2 =-1, idMx2s =-1;\n\t\tmodify(Mx1, Mx1s, idMx1, idMx1s, r1[i][0], idr1[i][0]), modify(Mx1, Mx1s, idMx1, idMx1s, r1[i][1], idr1[i][1]);\n\t\tmodify(Mx1, Mx1s, idMx1, idMx1s, l1[i+lenc-1][0], idl1[i+lenc-1][0]), modify(Mx1, Mx1s, idMx1, idMx1s, l1[i+lenc-1][1], idl1[i+lenc-1][1]);\n\t\tmodify(Mx2, Mx2s, idMx2, idMx2s, r2[i][0], idr2[i][0]), modify(Mx2, Mx2s, idMx2, idMx2s, r2[i][1], idr2[i][1]);\n\t\tmodify(Mx2, Mx2s, idMx2, idMx2s, l2[i+lenc-1][0], idl2[i+lenc-1][0]), modify(Mx2, Mx2s, idMx2, idMx2s, l2[i+lenc-1][1], idl2[i+lenc-1][1]);\n\t\tll Mx;\n\t\tif(idMx1 != idMx2)/*\u5982\u679c\u4e24\u79cd\u6700\u5927\u503c\u7684 id \u4e0d\u540c*/\n\t\t\tMx =Mx1+Mx2;\n\t\telse\n\t\t\tMx =max(Mx1+Mx2s, Mx1s+Mx2);\n\t\tAnsc =min(Ansc, Mx);\n\t}\n\tprintf(\"%.1lf\", max(Anst, Ansc)/2.0);\n}\n```",
        "postTime": 1599724665,
        "uid": 105254,
        "name": "Piwry",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1399 \u3010[NOI2013]\u5feb\u9910\u5e97\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\u5728\u4e00\u4e2a\u73af\u5957\u6811\u4e0a\uff0c\u627e\u4e2d\u5fc3\uff0c\u4f7f\u5f97\u6240\u6709\u70b9\u5230\u4e2d\u5fc3\u7684\u6700\u5927\u8ddd\u79bb\u6700\u5c0f\u3002\n\n\u9996\u5148\u5982\u679c\u662f\u5bf9\u4e8e\u6811\uff0c\u4e2d\u5fc3\u5e94\u8be5\u53d6\u5230\u76f4\u5f84\u7684\u4e2d\u70b9\u4e0a\uff0c\u7b54\u6848\u662f\u76f4\u5f84\u7684\u4e00\u534a\u3002\u5bf9\u4e8e\u73af\u5957\u6811\uff0c\u6211\u4eec\u5206\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\uff0c\u4e00\u79cd\u662f\u4e2d\u5fc3\u53d6\u5728\u67d0\u9897\u6811\u5185\uff0c\u8fd9\u65f6\u6211\u4eec\u53ef\u4ee5\u5148\u9884\u5904\u7406\u51fa\u6765\u6240\u6709\u8fd9\u68f5\u6811\u4ee5\u5916\u7684\u70b9\uff0c\u5230\u8fd9\u68f5\u6811\u7684\u6839\u7684\u6700\u5927\u8ddd\u79bb\uff0c\u8fd9\u53ef\u4ee5\u4f7f\u7528\u5355\u8c03\u961f\u5217\u5904\u7406\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u5982\u679c\u4e2d\u5fc3\u5728\u67d0\u9897\u6811\u5185\uff0c\u90a3\u4e48\u4e2d\u5fc3\u8981\u4e48\u5efa\u5728\u6811\u76f4\u5f84\u7684\u4e2d\u70b9\u4e0a\uff0c\u8981\u4e48\u5efa\u5728\u6839\u5411\u4e0b\u6700\u6df1\u7684\u8def\u5f84\u63a5\u4e0a\u6839\u5411\u5916\u6700\u8fdc\u7684\u8def\u5f84\u4e0a(\u6ce8\u610f\u53ea\u80fd\u5efa\u5728\u6811\u5185)\uff0c\u4e24\u79cd\u60c5\u51b5\u7efc\u5408\u4e00\u4e0b\u5373\u53ef\u3002\u5982\u679c\uff0c\u4e2d\u5fc3\u5efa\u5728\u73af\u4e0a\uff0c\u8fd9\u79cd\u60c5\u51b5\u76f8\u5bf9\u7b80\u5355\uff0c\u53ef\u4ee5\u4e8c\u5206\u7b54\u6848\uff0c\u8fd9\u6837\u5bf9\u6bcf\u4e2a\u8282\u70b9\uff0c\u4e3a\u4e86\u80fd\u8986\u76d6\u5b83\uff0c\u4e2d\u5fc3\u5fc5\u987b\u5efa\u5728\u73af\u4e0a\u8fde\u7eed\u7684\u4e00\u6bb5\uff0c\u6c42\u4e00\u4e2a\u73af\u4e0a\u7684\u533a\u95f4\u4ea4\u5373\u53ef\uff0c\u8fd9\u53ea\u9700\u8981\u7528\u67e5\u5206\u6c42\u524d\u7f00\u548c\u7684\u529e\u6cd5\u5c31\u80fd\u505a\u5230\u3002\n\n\u4f5c\u4e3a\u4e00\u9053NOI\u7684\u9898\u76ee\uff0c\u5206\u6790\u7684\u96be\u5ea6\u4e0d\u7b97\u9ad8\uff0c\u4f46\u4ee3\u7801\u91cf\u76f8\u5bf9\u8f83\u5927\uff0c\u96be\u5ea6\u5408\u9002\u3002\n\n```cpp\n#include <stdio.h>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint const N=3e5+1,L=22;\nstruct interval{\n\tlong long x,v;\n\tfriend bool operator <(interval a, interval b){\n\t\treturn a.x<b.x || (a.x==b.x && a.v<b.v); \n\t}\n}inter[N*4];\nint n,m,k,tot,x1,x2,l,h,t,a[N],b[N],to[N],pre[N],last[N],fa[N][L],d[N],s[N],q[N];\nlong long T,c[N],v[N],f[N],g[N],di[N],len[N],p[N],z,w[N],far[N];\nbool used[N],cir[N];\nlong long ans;\nvoid add(int a, int b, long long c){\n\tto[++tot]=b;\n\tpre[tot]=last[a];\n\tlast[a]=tot;\n\tv[tot]=c;\n}\nvoid dfs(int x, int father){\n\tfa[x][0]=father;\n\td[x]=d[father]+1;\n\tused[x]=true;\n\tfor (int i=last[x];i;i=pre[i])\n\t\tif (to[i]!=father){\n\t\t\tif (used[to[i]]) x1=x,x2=to[i],z=v[i]; else {\n\t\t\t\tw[to[i]]=v[i];\n\t\t\t\tdfs(to[i],x);\n\t\t\t}\n\t\t}\n}\nvoid dfs2(int x, int father){\n\tf[x]=g[x]=0;\n\tfor (int i=last[x];i;i=pre[i])\n\t\tif (!cir[to[i]] && to[i]!=father){\n\t\t\tdfs2(to[i],x);\n\t\t\tif (f[to[i]]+v[i]>=f[x]){\n\t\t\t\tg[x]=f[x];\n\t\t\t\tf[x]=f[to[i]]+v[i];\n\t\t\t} else \n\t\t\tif (f[to[i]]+v[i]>g[x]) g[x]=f[to[i]]+v[i];\n\t\t\tdi[x]=max(di[x],di[to[i]]);\n\t\t} \n\tdi[x]=max(di[x],f[x]+g[x]);\n}\nint lca(int x, int y){\n\tif (d[x]<d[y]) swap(x,y);\n\tfor (int j=L-1;j>=0;j--)\n\t\tif (d[x]-(1<<j)>=d[y]) x=fa[x][j];\n\tfor (int j=L-1;j>=0;j--)\n\t\tif (fa[x][j]!=fa[y][j]) x=fa[x][j],y=fa[y][j];\n\tif (x!=y) return fa[x][0]; else return x;\n}\nbool check(long long z){\n\tk=0;\n\tfor (int i=1;i<=l;i++){\n\t\tlong long c=z-f[s[i]];\n\t\tif (c*2>=T){\n\t\t\tinter[++k]={0,1};\n\t\t\tinter[++k]={T,-1};\n\t\t}else\n\t\t{\n\t\t\tlong long a=p[i-1]-c;\n\t\t\tlong long b=p[i-1]+c;\n\t\t\tif (a<0) a+=T;\n\t\t\tif (b>=T) b-=T;\n\t\t\tif (a<=b){\n\t\t\t\tinter[++k]={a,1};\n\t\t\t\tinter[++k]={b+1,-1};\n\t\t\t} else{\n\t\t\t\tinter[++k]={0,1};\n\t\t\t\tinter[++k]={b+1,-1};\n\t\t\t\tinter[++k]={a,1};\n\t\t\t\tinter[++k]={T,-1}; \n\t\t\t}\n\t\t}\n\t}\n\tsort(inter+1,inter+1+k);\n\tint now=0;\n\tfor (int i=1;i<=k;i++){\n\t\tnow+=inter[i].v;\n\t\tif (now==l) return true;\n\t}\n\treturn false;\n}\nlong long find(){\n\tlong long ll=0;\n\tfor (int i=1;i<=l;i++)\n\t\tll=max(ll,f[s[i]]);\n\tlong long rr=max(far[s[1]],f[s[1]]);\n\twhile (rr-ll>1){\n\t\tlong long mid=(ll+rr)/2;\n\t\tif (check(mid)) rr=mid; else ll=mid+1;\n\t}\n\tif (check(ll)) return ll;\n\treturn rr;\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor (int i=1;i<=n;i++){\n\t\tscanf(\"%d%d%lld\",&a[i],&b[i],&c[i]);\n\t\tc[i]*=2;\n\t\tadd(a[i],b[i],c[i]);\n\t\tadd(b[i],a[i],c[i]);\n\t}\n\tdfs(1,0);\n\tfor (int j=1;j<=L-1;j++)\n\t\tfor (int i=1;i<=n;i++)\n\t\t\tfa[i][j]=fa[fa[i][j-1]][j-1];\n\tint x3=lca(x1,x2);\n\tl=1+d[x1]+d[x2]-2*d[x3];\n\tm=0;\n\tfor (int i=x1;d[i]>=d[x3];i=fa[i][0]){\n\t\ts[++m]=i;\n\t\tif (i!=x3) len[m]=w[i];\n\t}\n\tm=l;\n\tfor (int i=x2;d[i]>d[x3];i=fa[i][0])\n\t\ts[m--]=i;\n\tfor (int i=d[x1]-d[x3]+1;i<=l-1;i++)\n\t\tlen[i]=w[s[i+1]];\n\tlen[l]=z;\n\tfor (int i=1;i<=l;i++)\n\t\ts[i+l]=s[i],len[i+l]=len[i];\n\tfor (int i=1;i<=2*l;i++)\n\t\tp[i]=p[i-1]+len[i];\n\tT=p[l];\n\tfor (int i=1;i<=l;i++)\n\t\tcir[s[i]]=true;\n\tfor (int i=1;i<=l;i++)\n\t\tdfs2(s[i],0);\n\tif (l>1){\n\t\tint j=1;\n\t\th=1,t=0;\n\t\tfor (int i=1;i<=l;i++){\n\t\t\twhile (h<=t && q[h]<=i) h++;\n\t\t\twhile (p[j]-p[i-1]<=T/2){\n\t\t\t\twhile (h<=t && p[j]+f[s[j+1]]>=p[q[t]-1]+f[s[q[t]]]) t--;\n\t\t\t\tq[++t]=++j;\n\t\t\t}\n\t\t\tif (h<=t) far[s[i]]=max(far[s[i]],p[q[h]-1]-p[i-1]+f[s[q[h]]]);\n\t\t}\n\t\t\n\t\th=1,t=0;\n\t\tj=2*l;\n\t\tfor (int i=2*l;i>=l+1;i--){\n\t\t\twhile (h<=t && q[h]>=i) h++;\n\t\t\twhile (p[i-1]-p[j-2]<=T/2){\n\t\t\t\twhile (h<=t && -p[j-2]+f[s[j-1]]>=-p[q[t]-1]+f[s[q[t]]]) t--;\n\t\t\t\tq[++t]=--j;\n\t\t\t}\n\t\t\tif (h<=t) far[s[i]]=max(far[s[i]],p[i-1]-p[q[h]-1]+f[s[q[h]]]);\n\t\t}\n\t\tans=find();\n\t\tfor (int i=1;i<=l;i++){\n\t\t\tif (di[s[i]]>=f[s[i]]+far[s[i]]) ans=min(ans,di[s[i]]/2); else\n\t\t\tif (far[s[i]]<f[s[i]]) ans=min(ans,(f[s[i]]+far[s[i]])/2); else\n\t\t\tans=min(ans,far[s[i]]);\n\t\t}\n\t} else ans=di[s[1]];\n\tdouble fans=ans;\n\tprintf(\"%.1lf\\n\",fans/2);\n\treturn 0;\n} \n```",
        "postTime": 1540974044,
        "uid": 95804,
        "name": "wu3412790",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1399 \u3010[NOI2013]\u5feb\u9910\u5e97\u3011"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\u6c42\u4e00\u68f5\u57fa\u73af\u6811\u7684\u91cd\u5fc3\u3002\u5373\u4e00\u4e2a\u70b9\uff0c\u4f7f\u5f97\u6811\u4e0a\u5230\u5176\u8ddd\u79bb\u6700\u957f\u7684\u70b9\u5230\u5176\u7684\u8ddd\u79bb\u6700\u77ed\u3002\u6ce8\u610f\uff0c\u8fd9\u4e2a\u70b9\u4e0d\u4e00\u5b9a\u662f\u4e00\u4e2a\u8282\u70b9\uff0c\u53ef\u4ee5\u5728\u6811\u4e0a\u7684\u4efb\u610f\u4f4d\u7f6e\u3002\u8f93\u51fa\u6811\u4e0a\u5230\u5176\u8ddd\u79bb\u6700\u957f\u7684\u70b9\u5230\u5176\u7684\u8ddd\u79bb\u3002\n\n~~\u6216\u8005\u8bf4\u6c42\u57fa\u73af\u6811\u6700\u77ed\u7684\u76f4\u5f84\uff1f\uff08\u5927\u96fe~~\n## \u89e3\u9898\u601d\u8def\n\u663e\u7136\uff0c\u8fd9\u9897\u57fa\u73af\u6811\u7684\u76f4\u5f84\u53ea\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\u7ecf\u8fc7\u73af\u548c\u4e0d\u7ecf\u8fc7\u73af\u3002\n\n\u5982\u679c\u4e0d\u7ecf\u8fc7\u73af\uff0c\u90a3\u5fc5\u5b9a\u662f\u73af\u4e0a\u67d0\u4e2a\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u7684\u76f4\u5f84\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528\u4e00\u822c\u6811\u4e0a\u7684\u505a\u6cd5\u505a\u3002\u518d\u5728\u6240\u6709\u7684\u5b50\u6811\u4e0a\u7684\u76f4\u5f84\u6c42\u6700\u5927\u503c\u5c31\u662f\u4e0d\u7ecf\u8fc7\u73af\u4e0a\u7684\u76f4\u5f84\u7684\u7b54\u6848\u3002\n\n\u91cd\u70b9\u5728\u4e8e\u73af\u4e0a\u7684\u60c5\u51b5\u3002\u9996\u5148\u6211\u4eec\u753b~~\u4e00\u4e2a\u7ec6\u83cc~~\u4e00\u68f5\u57fa\u73af\u6811\uff0c\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u9ed8\u8ba4\u8fd9\u68f5\u6811\u4e0a\u7684\u8fb9\u6743\u4e3a $1$\uff0c\u5b9e\u9645\u5b9e\u73b0\u65f6\u53ea\u9700\u8981\u8003\u8651\u4e0a\u8fb9\u6743\u5c31\u884c\u4e86\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/90foe4pr.png)\n\n\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u679a\u4e3e\u65ad\u5f00\u73af\u4e0a\u7684\u54ea\u4e00\u6761\u8fb9\uff0c\u518d\u6bcf\u79cd\u60c5\u51b5\u6c42\u4e00\u904d $\\max\\{dep_i + dep_j + dis(i,j)\\}$\uff0c\u6700\u540e\u5bf9\u6bcf\u79cd\u60c5\u51b5\u7684\u7b54\u6848\u53d6\u6700\u5c0f\u503c\u5c31\u662f\u7ecf\u8fc7\u73af\u5c71\u7684\u76f4\u5f84\u4e86\u3002\u5176\u4e2d $dep_i$ \u8868\u793a\u73af\u4e0a\u7b2c $i$ \u4e2a\u70b9\u7684\u5b50\u6811\u6700\u5927\u6df1\u5ea6\uff0c$dis(i,j)$ \u8868\u793a\u73af\u4e0a\u7b2c $i$ \u4e2a\u70b9\u548c\u7b2c $j$ \u4e2a\u70b9\u7684\u8ddd\u79bb\u3002\n\n\u8fd9\u6837\u4e0d\u4ec5\u8bf4\u8d77\u6765\u62d7\u53e3\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u7206\u70b8\u3002\n\n\u8003\u8651\u6709\u6ca1\u6709\u4ec0\u4e48\u529e\u6cd5\u4f18\u5316\u3002\u9996\u5148\uff0c\u6211\u4eec\u968f\u4fbf\u9009\u62e9\u73af\u4e0a\u7684\u4e00\u6761\u8fb9\u628a\u73af\u65ad\u5f00\uff0c\u8fd9\u91cc\u9009\u62e9\u7684\u662f $1$ \u548c $6$ \u4e4b\u95f4\u7684\u8fb9\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/fnnw7w57.png)\n\n\u7136\u540e\u8003\u8651\u679a\u4e3e\u73af\u4e0a\u7684\u70b9\uff0c\t\u6c42\u51fa\u5c06\u73af\u4e0a\u7b2c $i$ \u4e2a\u70b9\u548c\u73af\u4e0a\u7b2c $i + 1$ \u4e2a\u70b9\u4e4b\u95f4\u7684\u8fb9\u65ad\u5f00\u540e\u7684\u76f4\u5f84\uff0c\u518d\u53d6\u4e00\u4e2a $\\min$ \u5c31\u662f\u7ecf\u8fc7\u73af\u4e0a\u7684\u7b54\u6848\u4e86\u3002\n\n\u4e3a\u4e86\u533a\u5206\uff0c\u6211\u4eec\u628a\u521d\u59cb\u65ad\u5f00\u7684\u8fb9\uff0c\u5373\u8fd9\u91cc $1$ \u548c $6$ \u4e4b\u95f4\u7684\u8fb9\u6210\u4e3a**\u521d\u59cb\u65ad\u8fb9**\uff0c\u628a\u5f53\u524d\u679a\u4e3e\u7684\u8981\u65ad\u5f00\u7684\u8fb9\u6210\u4e3a**\u5f53\u524d\u65ad\u8fb9**\u3002\n\n\u63a5\u4e0b\u6765\u53c8\u5206\u60c5\u51b5\u8003\u8651\uff0c\u603b\u5171\u6709\u4e09\u79cd\u60c5\u51b5\uff1a\n\n1. \u8d77\u70b9\u548c\u7ec8\u70b9\u90fd\u5728\u5f53\u524d\u65ad\u8fb9\u5de6\u8fb9\u3002\n\n2. \u8d77\u70b9\u548c\u7ec8\u70b9\u90fd\u5728\u5f53\u524d\u65ad\u8fb9\u53f3\u8fb9\n\n3. \u8d77\u70b9\u548c\u7ec8\u70b9\u4e00\u4e2a\u5728\u5f53\u524d\u65ad\u8fb9\u5de6\u8fb9\uff0c\u4e00\u4e2a\u5728\u5f53\u524d\u65ad\u8fb9\u53f3\u8fb9\uff0c\u5373\u76f4\u5f84\u7ecf\u8fc7\u4e86\u521d\u59cb\u65ad\u8fb9\u3002\n\n\u5176\u4e2d\u524d\u4e24\u79cd\u60c5\u51b5\u53c8\u662f\u7c7b\u4f3c\u7684\uff0c\u6211\u4eec\u8be6\u7ec6\u8bb2\u7b2c\u4e00\u79cd\uff1a\n\n\u6211\u4eec\u8bbe $c_i$ \u8868\u793a\u4e24\u6bb5\u5728\u73af\u4e0a\u7b2c $i$ \u4e2a\u70b9\u6216\u7b2c $i$ \u4e2a\u70b9\u4e4b\u524d\u7684\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u4e0a\uff0c\u4e14\u81f3\u5c11\u7ecf\u8fc7\u4e86\u73af\u4e0a\u4e00\u6761\u8fb9\u7684\u76f4\u5f84\u957f\u5ea6\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u8981\u6c42\u7684\u7b2c\u4e00\u79cd\u60c5\u51b5\u7684\u76f4\u5f84\u957f\u5ea6\u3002\u8fd9\u4e2a\u4e0d\u592a\u597d\u6c42\uff0c\u6211\u4eec\u5148\u7a0d\u5fae\u4fee\u6539\u4e00\u4e0b\u5b9a\u4e49\uff1a $c_i$ \u8868\u793a\u8d77\u70b9\u7b2c $i$ \u4e2a\u70b9\u4e4b\u524d\u7684\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u4e0a\uff0c\u7ec8\u70b9\u5728\u4ee5\u73af\u4e0a\u7b2c $i$ \u4e2a\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u4e0a\uff0c\u4e14\u81f3\u5c11\u7ecf\u8fc7\u4e86\u73af\u4e0a\u4e00\u6761\u8fb9\u7684\u76f4\u5f84\u957f\u5ea6\u3002\u663e\u7136\u4f1a\u6709\u67ff\u5b50\uff1a\n\n$$c_i = \\max_{1 \\le j \\le i}\\{dep_i + dep_j + dis(i,j)\\}$$\n\n\u663e\u7136\uff0c\u76f4\u63a5\u679a\u4e3e\u53c8\u662f $O(TLE)$ \u7684\uff0c\u6211\u4eec\u60f3\u529e\u6cd5\u4f18\u5316\u3002\n\n\u9996\u5148\u4e00\u4e2a\u4f18\u5316\u7a7a\u95f4\u5728\u4e8e $dis(i,j)$\uff0c\u6c42\u8fd9\u4e2a\u5982\u679c\u66b4\u529b\u7684\u8bdd\u65f6\u95f4\u80af\u5b9a\u627f\u53d7\u4e0d\u4f4f\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u6c42\u4e00\u4e2a\u8ddd\u79bb\u524d\u7f00\u548c\uff0c$pre_i$ \u8868\u793a\u4ece\u73af\u4e0a\u7b2c $1$ \u4e2a\u70b9\u5230\u73af\u4e0a\u7b2c $i$ \u4e2a\u70b9\u7684\u8ddd\u79bb\uff0c\u90a3\u4e48 $dis(i,j) = |pre_i - pre_j|$\u3002\u5219\u67ff\u5b50\u53d8\u4e3a\uff1a\n\n\n$$c_i = \\max_{1 \\le j \\le i}\\{dep_i + dep_j + pre_i - pre_j\\}$$\n\n\u7136\u800c\uff0c\u8fd9\u6837\u4f9d\u65e7 $O(n^2)$\u3002\u5269\u4e0b\u7684\u4f18\u5316\u7a7a\u95f4\u5c31\u53ea\u6709\u679a\u4e3e\u7684\u65f6\u95f4\u4e86\uff0c\u9996\u5148\u79fb\u9879\uff0c\u5f97\u5230\uff1a\n\n$$c_i = \\max_{1 \\le j \\le i}\\{(dep_i + pre_i) + (dep_j - pre_j)\\}$$\n\n$dep_i + pre_i$ \u663e\u7136\u5728 $i$ \u56fa\u5b9a\u7684\u65f6\u5019\u662f\u5b9a\u503c\uff0c\u628a\u5b83\u4e22\u51fa\u6765\uff1a\n\n$$c_i = \\max_{1 \\le j \\le i}\\{(dep_j - pre_j)\\} + (dep_i + pre_i)$$\n\n\u90a3\u4e48\u4e2d\u95f4\u7684 $dep_j - pre_j$ \u6211\u4eec\u53ef\u4ee5\u53d8\u679a\u4e3e $i$ \u8fb9\u7ef4\u62a4\uff0c\u8fd9\u6837\u5c31\u662f $O(n)$ \u7684\u4e86\u3002\n\n\u4e8e\u662f\u6211\u4eec\u5728\u56de\u5230\u4e00\u5f00\u59cb\u8981\u6c42\u7684\u4e1c\u897f\uff0c\u53ea\u9700\u8981\u5bf9\u7b97\u51fa\u6765\u7684 $c$ \u6c42\u4e00\u4e2a\u524d\u7f00\u6700\u5927\u503c\u5c31\u597d\u4e86\u3002\n\n\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4e0e\u7b2c\u4e00\u79cd\u60c5\u51b5\u5bf9\u79f0\u3002\u6211\u4eec\u8bbe $d_i$ \u8868\u793a\u4e24\u6bb5\u5728\u73af\u4e0a\u7b2c $i$ \u4e2a\u70b9\u6216\u7b2c $i$ \u4e2a\u70b9\u4e4b\u524d\u540e\u7684\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u4e0a\uff0c\u4e14\u81f3\u5c11\u7ecf\u8fc7\u4e86\u73af\u4e0a\u4e00\u6761\u8fb9\u7684\u76f4\u5f84\u957f\u5ea6\u3002\u5b83\u7684\u6c42\u6cd5\u76f8\u540c\uff0c\u53ea\u9700\u8981\u6c42\u540e\u7f00\u6700\u5927\u503c\u548c\u8ddd\u79bb\u7684\u540e\u7f00\u548c\u5c31\u597d\u4e86\u3002\n\n\u5373\uff0c\u8bbe $suf_i$ \u8868\u793a\u4ece\u73af\u4e0a\u6700\u540e\u4e00\u4e2a\u70b9\u5230\u73af\u4e0a\u7b2c $i$ \u4e2a\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u5728\u7ecf\u8fc7\u4e0e\u4e0a\u9762\u7c7b\u4f3c\u7684\u7b80\u5316\u540e\uff0c\u6709\uff1a\n\n$$d_i = \\max_{i \\le j \\le t}\\{(dep_j - suf_j)\\} + (dep_i + suf_i)$$\n\n\u5176\u4e2d $t$ \u8868\u793a\u73af\u4e0a\u7684\u7ed3\u70b9\u6570\u91cf\uff0c\u4e5f\u4ee3\u8868\u73af\u4e0a\u6700\u540e\u4e00\u4e2a\u70b9\u3002\n\n\u7136\u540e\u6c42\u540e\u7f00\u6700\u5927\u503c\uff0c\u5c31\u5f97\u5230\u4e86\u6211\u4eec\u7b2c\u4e8c\u79cd\u60c5\u51b5\u7684\u7b54\u6848\u3002\n\n\u5982\u56fe\uff0c\u4f46 $i = 3$ \u65f6\uff0c$c_i$ \u548c $d_i$ \u672c\u522b\u4ee3\u8868\u4e86\u56fe\u4e2d\u84dd\u8272\u8def\u5f84\u5f97\u957f\u5ea6\u548c\u7d2b\u8272\u8def\u5f84\u5f97\u957f\u5ea6\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/56l46wi9.png)\n\n\u6709\u4e00\u4e9b\u7ec6\u8282\u9700\u8981\u6ce8\u610f\uff0c\u5047\u8bbe\u6211\u4eec\u5f53\u524d\u65ad\u8fb9\u662f\u73af\u4e0a\u7b2c $i$ \u4e2a\u70b9\u548c\u73af\u4e0a\u7b2c $i + 1$ \u4e2a\u70b9\u4e4b\u95f4\u7684\u8fb9\uff0c\u90a3\u4e48\u524d\u4e24\u79cd\u60c5\u51b5\u7684\u7b54\u6848\u5e94\u8be5\u662f $c_i$ \u548c $d_{i + 1}$ \u800c\u975e $c_i$ \u548c $d_i$\u3002\n\n\u81f3\u4e8e\u7b2c\u4e09\u79cd\u60c5\u51b5\u7a0d\u5fae\u590d\u6742\u4e00\u70b9\uff0c\u6211\u4eec\u7ef4\u62a4\u4e24\u4e2a\u6570\u7ec4\uff0c$a_i$ \u548c $b_i$\u3002\u5176\u4e2d $a_i$ \u8868\u793a\u4ee5\u73af\u4e0a\u7b2c\u4e00\u4e2a\u70b9\u4e3a\u8d77\u70b9\uff0c\u4ee5\u73af\u4e0a\u7b2c $i$ \u4e2a\u70b9\u6216\u73af\u4e0a\u7b2c $i$ \u4e2a\u70b9\u4ee5\u524d\u7684\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u67d0\u4e00\u70b9\u4e3a\u7ec8\u70b9\u7684\u6700\u5927\u957f\u5ea6\uff1b$b_i$ \u8868\u793a\u4ee5\u73af\u4e0a\u6700\u540e\u4e00\u4e2a\u70b9\u4e3a\u8d77\u70b9\uff0c\u4ee5\u73af\u4e0a\u7b2c $i$ \u4e2a\u70b9\u6216\u73af\u4e0a\u7b2c $i$ \u4e2a\u70b9\u4ee5\u540e\u7684\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u67d0\u4e00\u70b9\u4e3a\u7ec8\u70b9\u7684\u6700\u5927\u957f\u5ea6\u3002\n\n\u7ecf\u8fc7\u4e0a\u9762\u7684\u5957\u8def\u6211\u4eec\u77e5\u9053\uff0c\u5bf9\u4e8e $a_i$\uff0c\u53ef\u4ee5\u5148\u6c42\u51fa\u4ee5\u73af\u4e0a\u7b2c\u4e00\u4e2a\u70b9\u4e3a\u8d77\u70b9\uff0c\u4ee5\u73af\u4e0a\u7b2c $i$ \u4e2a\u70b9\u7684\u5b50\u6811\u4e2d\u67d0\u4e00\u70b9\u4e3a\u7ec8\u70b9\u7684\u6700\u5927\u957f\u5ea6\uff0c\u4e5f\u5c31\u662f $pre_i + dep_i$\uff0c\u518d\u6c42\u524d\u7f00\u6700\u5927\u503c\uff1b$b_i$ \u5219\u662f\u6c42\u51fa\u4ee5\u73af\u4e0a\u6700\u540e\u4e00\u4e2a\u70b9\u4e3a\u8d77\u70b9\uff0c\u4ee5\u73af\u4e0a\u7b2c $i$ \u4e2a\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u67d0\u4e00\u70b9\u4e3a\u7ec8\u70b9\u7684\u6700\u5927\u957f\u5ea6\uff0c\u5373 $suf_i + dep_i$\uff0c\u518d\u6c42\u540e\u7f00\u6700\u5927\u503c\u3002\n\n\u5982\u56fe\uff0c$a_i$ \u548c $d_i$ \u5206\u522b\u4ee3\u8868\u56fe\u4e2d\u7684\u6a59\u8272\u8def\u5f84\u957f\u5ea6\u548c\u7ea2\u8272\u8def\u5f84\u957f\u5ea6\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/9avewtnk.png)\n\n\u90a3\u4e48\u7b2c\u4e09\u79cd\u60c5\u51b5\u7684\u7b54\u6848\u5c31\u662f\u7ea2\u8272\u8def\u5f84\u957f\u5ea6\u52a0\u4e0a\u6a59\u8272\u8def\u5f84\u7684\u957f\u5ea6\u518d\u52a0\u4e0a\u521d\u59cb\u65ad\u8fb9\uff0c\u5373\u8fd9\u91cc $1$ \u548c $6$ \u4e4b\u95f4\u7684\u8fb9\u7684\u957f\u957f\u5ea6\u3002\n\n\u8fd9\u4e09\u79cd\u60c5\u51b5\u53d6\u6700\u5927\u503c\uff0c\u5c31\u662f\u5c06\u73af\u4e0a\u7b2c $i$ \u4e2a\u70b9\u548c\u73af\u4e0a\u7b2c $i + 1$ \u4e2a\u70b9\u4e4b\u95f4\u7684\u8fb9\u65ad\u5f00\u540e\u7684\u7b54\u6848\u3002\u63a5\u7740\u679a\u4e3e $i$ \u518d\u6c42\u6700\u5c0f\u503c\uff0c\u8fd9\u5c31\u662f\u76f4\u5f84\u7ecf\u8fc7\u73af\u4e0a\u7684\u7b54\u6848\u3002\n\n\u8fd9\u79cd\u60c5\u51b5\u4e0e\u4e4b\u524d\u76f4\u5f84\u4e0d\u7ecf\u8fc7\u73af\u4e0a\u7684\u7b54\u6848\u53d6 $\\max$ \u5c31\u662f\u8fd9\u9897\u57fa\u73af\u6811\u7684\u76f4\u5f84\u4e86\u3002\n\n\u5bf9\u4e8e\u8fd9\u4e00\u9898\u6765\u8bf4\uff0c\u7b54\u6848\u8fd8\u9700\u8981\u9664\u4ee5\u4e8c\u3002\n\n## \u5b8c\u6574\u4ee3\u7801\n\u63d0\u4f9b\u4e00\u4e9b\u9519\u8bef\u7ecf\u9a8c\u3002\n\n\u5982\u679c\u4f60 TLE\uff0c\u8bb0\u5f97\u628a `memset` \u6362\u6210\u65f6\u95f4\u6233\u3002\n\n\u5982\u679c\u4f60 WA 30pts\uff0c\u5927\u6982\u662f\u6ca1\u6709\u5f00 `long long`\u3002\n\n\u5982\u679c\u4f60 WA 50pts\uff0c\u5927\u6982\u662f `INF` \u5f00\u5c0f\u4e86\u3002\n\n\u5982\u679c\u4f60 WA 90pts\uff0c\u5927\u6982\u662f\u67d0\u4e9b\u6570\u7ec4\u6ca1\u6709\u53d6\u524d\u7f00\u6700\u5927\u503c\u6216\u8005\u540e\u7f00\u6700\u5927\u503c\u3002\n\n\u6ca1\u6709\u5220\u9664\u8c03\u8bd5\u884c\uff0c\u5982\u679c\u9700\u8981\u7684\u8bdd\u53ef\u4ee5\u5bf9\u7167\u4e00\u4e0b\u8f93\u51fa\u3002\n\n\n```cpp\n#include<bits/stdc++.h>\n#define MAXN 100010\n#define INF 0x7f7f7f7f7f7f7f7f\nusing namespace std;\ntypedef long long ll;\nstruct node{ ll id, dis; };\nstruct edge{ ll pre, to, w; };\nstack<node> s;\nnode cir[MAXN];\nedge e[MAXN << 1];\nll n, m, ans1, ans2 = INF, cnt = 1, times = 1;\nll head[MAXN], dis[MAXN], dia[MAXN], dep[MAXN], pre[MAXN], suf[MAXN], vis[MAXN], a[MAXN], b[MAXN], c[MAXN], d[MAXN];\nbool iscir[MAXN];\ninline ll read(){\n   ll s = 0, w = 1;\n   char ch = getchar();\n   while(ch < '0' || ch > '9') { if(ch == '-') w = -1; ch = getchar(); }\n   while(ch >= '0' && ch <= '9') s = s * 10 + ch - '0', ch = getchar();\n   return s * w;\n}\nvoid add_edge(ll u, ll v, ll w){\n    e[++cnt].pre = head[u];\n    e[cnt].to = v; e[cnt].w = w;\n    head[u] = cnt;\n}\nbool find_circle(ll now, ll fr){\n    s.push((node){now, e[fr].w}); vis[now] = times;\n    for(int i = head[now]; i; i = e[i].pre){\n        // printf(\"%lld -> %lld i = %lld fr = %lld %lld\\n\",now,e[i].to,i,fr,i ^ 1 == fr);\n        if((i ^ 1) == fr) continue;\n        // printf(\"*\\n\");\n        if(vis[e[i].to] != times){\n            if(find_circle(e[i].to, i)) return true;\n        }else{\n            while(s.top().id != e[i].to){\n                node p = s.top(); s.pop();\n                cir[++m] = p; iscir[p.id] = true;\n            }\n            cir[++m] = (node){e[i].to, e[i].w}; iscir[e[i].to] = true;\n            s.pop();\n            return true;\n        }\n    }\n    s.pop();\n    return false;\n}\nll bfs(ll st){\n    // memset(vis, 0, sizeof(vis));\n    // memset(dis, 0, sizeof(dis));\n    ll res = st; times++;\n    queue<ll> q; q.push(st);\n    dis[st] = 0; vis[st] = times;\n    while(!q.empty()){\n        ll now = q.front(); q.pop();\n        for(int i = head[now]; i; i = e[i].pre){\n            if(vis[e[i].to] != times && !iscir[e[i].to]){\n                // printf(\"    %lld -> %lld\\n\",now,e[i].to);\n                dis[e[i].to] = dis[now] + e[i].w;\n                if(dis[e[i].to] > dis[res]) res = e[i].to;\n                q.push(e[i].to); vis[e[i].to] = times;\n            }\n        }\n    }\n    return res;\n}\nint main(){\n    scanf(\"%lld\",&n);\n    for(int i = 1; i <= n; i++){\n        ll u = read(), v = read(), w = read();\n        add_edge(u, v, w); add_edge(v, u, w);\n    }\n    find_circle(1, 0);\n    for(int i = 1; i <= m; i++){\n        iscir[cir[i].id] = false;\n        ll p = bfs(cir[i].id);\n        dep[i] = dis[p]; dia[i] = dis[bfs(p)];\n        ans1 = max(ans1, dia[i]);\n        iscir[cir[i].id] = true;\n    }\n    for(int i = 2; i <= m; i++) pre[i] = pre[i - 1] + cir[i - 1].dis;\n    for(int i = m - 1; i >= 1; i--) suf[i] = suf[i + 1] + cir[i].dis;\n    for(int i = 1; i <= m; i++) a[i] = max(a[i - 1], dep[i] + pre[i]);\n    for(int i = m; i >= 1; i--) b[i] = max(b[i + 1], dep[i] + suf[i]);\n    for(ll i = 1, mx = 0; i <= m; i++){\n        c[i] = mx + pre[i] + dep[i];\n        mx = max(mx, dep[i] - pre[i]);\n    }\n    for(ll i = m, mx = 0; i >= 1; i--){\n        d[i] = mx + suf[i] + dep[i];\n        mx = max(mx, dep[i] - suf[i]);\n    }\n    for(int i = 1; i <= m; i++) c[i] = max(c[i], c[i - 1]);\n    for(int i = m; i >= 1; i--) d[i] = max(d[i], d[i + 1]);\n    for(int i = 1; i <  m; i++){\n        ll res = max(a[i] + b[i + 1] + cir[m].dis, max(c[i], d[i + 1]));\n        ans2 = min(ans2, res);\n    }\n    printf(\"%.1lf\\n\",(double)max(ans1, ans2) / 2.0);\n\n    // printf(\"iscir: \"); for(int i = 1; i <= n; i++) printf(\"%lld \",iscir[i]); printf(\"\\n\");\n    // printf(\"cir_id: \"); for(int i = 1; i <= m; i++) printf(\"%lld \",cir[i].id); printf(\"\\n\");\n    // printf(\"cir_dis: \"); for(int i = 1; i <= m; i++) printf(\"%lld \",cir[i].dis); printf(\"\\n\");\n    // printf(\"dia: \"); for(int i = 1; i <= m; i++) printf(\"%lld \",dia[i]); printf(\"\\n\");\n    // printf(\"dep: \"); for(int i = 1; i <= m; i++) printf(\"%lld \",dep[i]); printf(\"\\n\");\n    // printf(\"pre: \"); for(int i = 1; i <= m; i++) printf(\"%lld \",pre[i]); printf(\"\\n\");\n    // printf(\"suf: \"); for(int i = 1; i <= m; i++) printf(\"%lld \",suf[i]); printf(\"\\n\");\n    // printf(\"a: \"); for(int i = 1; i <= m; i++) printf(\"%lld \",a[i]); printf(\"\\n\");\n    // printf(\"b: \"); for(int i = 1; i <= m; i++) printf(\"%lld \",b[i]); printf(\"\\n\");\n    // printf(\"c: \"); for(int i = 1; i <= m; i++) printf(\"%lld \",c[i]); printf(\"\\n\");\n    // printf(\"d: \"); for(int i = 1; i <= m; i++) printf(\"%lld \",d[i]); printf(\"\\n\");\n\n    return 0;\n}\n```",
        "postTime": 1661353230,
        "uid": 547908,
        "name": "Hoshino_kaede",
        "ccfLevel": 7,
        "title": "P1399 [NOI2013] \u5feb\u9910\u5e97 \u9898\u89e3"
    },
    {
        "content": "### \u7b97\u6cd5\u5206\u6790\uff1a\n\n\u9996\u5148\u8fd9\u662f\u4e00\u9053\u57fa\u73af\u6811\u7684\u9898\u3002\u7ed9\u5b9a $n$ \u4e2a\u70b9\u548c $n$ \u6761\u8fb9\uff0c\u800c\u4e14\u4fdd\u8bc1\u8054\u901a\uff0c\u90a3\u4e48\u5c31\u5b58\u5728\u4e00\u4e2a\u73af\u3002\n\n\u8981\u6c42\u51fa\u4e00\u4e2a\u70b9\u5230\u79bb\u5b83\u8ddd\u79bb\u6700\u8fdc\u7684\u70b9\u7684\u8ddd\u79bb\u6700\u5c0f\uff0c\u663e\u7136\u8ddf\u76f4\u5f84\u6709\u5173\uff0c\u6c42\u51fa\u6b64\u57fa\u73af\u6811\u7684\u76f4\u5f84\uff0c\u7b54\u6848\u4e3a\u76f4\u5f84\u9664\u4ee5 $2$\u3002\n\n\u90a3\u4e48\u8003\u8651\u5982\u4f55\u6c42\u76f4\u5f84\u3002\u6709\u4e24\u79cd\u60c5\u51b5\u3002\n\n$1$.\u76f4\u5f84\u4e0d\u7ecf\u8fc7\u57fa\u73af\u3002\n\n$2$.\u76f4\u5f84\u7ecf\u8fc7\u57fa\u73af\u3002\n\n\u5728\u6c42\u76f4\u5f84\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5c06\u54ea\u4e9b\u70b9\u5728\u73af\u4e0a\u8bb0\u5f55\u4e0b\u6765\u3002\u6211\u4eec\u4ece $1$ \u53f7\u70b9\u5f00\u59cb\u6df1\u641c\u627e\u73af\u3002\u5177\u4f53\u770b\u4ee3\u7801\u6ce8\u91ca\u3002\n\n```cpp\ninline bool find(int u){\n\tvis[u] = 1; //\u8fd9\u4e2a\u70b9\u8bb0\u5f55\u4e3a\u8d70\u8fc7 \n\tfor(re int i(head[u]) ; i ; i=e[i].nxt){\n\t\tint v = e[i].to;\n\t\tif(v == fa[u]) continue; //\u8d70\u5230\u4e86\u7236\u4eb2\u4e0d\u884c \n\t\tfa[v] = u;\n\t\tw[v] = e[i].w; //\u5c06\u8fd9\u6761\u8fb9\u7684\u8fb9\u6743\u8f6c\u5316\u4e3a\u513f\u5b50\u7684\u70b9\u6743\uff0c\u548c\u6811\u5256\u7684\u8f6c\u5316\u7c7b\u4f3c \n\t\tif(!vis[v]) { if(find(v)) return 1; } //\u5982\u679c\u8fd9\u4e2a\u70b9\u6ca1\u6709\u8d70\u8fc7\u800c\u4e14\u540e\u9762\u80fd\u627e\u5230\u73af\uff0c\u5c31\u4e00\u76f4\u5f80\u56dereturn \n\t\telse{ //\u627e\u5230\u4e86\u73af \n\t\t\tint p = u; //\u679a\u4e3e\u73af\u4e0a\u7684\u70b9 \n\t\t\twhile(1){\n\t\t\t\tinc[p] = 1; //inc[p]=1\u8868\u793ap\u5728\u73af\u4e0a \n\t\t\t\tcv[++tot] = p; //\u73af\u4e0a\u7684\u70b9\u7684\u7f16\u53f7\uff0c\u7531\u4e8e\u540e\u9762\u64cd\u4f5c\uff0c\u6211\u4eec\u9700\u8981\u91cd\u65b0\u7f16\u53f7 \n\t\t\t\tcw[tot] = w[p]; //\u73af\u4e0a\u8fd9\u4e2a\u7f16\u53f7\u70b9\u7684\u70b9\u6743 \n\t\t\t\tp = fa[p]; //\u7531\u4e8e\u8bb0\u5f55\u4e86fa[p]\u662fp\u7684\u7236\u4eb2\uff0c\u6240\u4ee5\u53ef\u4ee5\u5f80\u56de\u627e \n\t\t\t\tif(p == u) break; //\u73af\u904d\u5386\u5b8c\u4e86 \n\t\t\t}\n\t\t\treturn 1; //\u8bb0\u5f55\u5df2\u7ecf\u627e\u5230\u73af \n\t\t}\n\t}\n\treturn 0; //\u6ca1\u627e\u5230\u5c31\u7ee7\u7eed\u5f80\u4e0b\u627e \n}\n```\n\n\n\u4e00\u4e2a\u4e00\u4e2a\u8003\u8651\uff0c\u5148\u770b\u76f4\u5f84\u4e0d\u7ecf\u8fc7\u57fa\u73af\uff0c\u8fd9\u4e2a\u6bd4\u8f83\u597d\u6c42\u3002\u6b64\u57fa\u73af\u6811\u7684\u76f4\u5f84\u4e3a\u73af\u4e0a\u6302\u7740\u7684\u70b9\u7684\u6bcf\u4e00\u68f5\u5b50\u6811\u7684\u6700\u5927\u76f4\u5f84\uff0c\u8bb0\u4e3a $res1$\uff0c\u679a\u4e3e\u73af\u4e0a\u7684\u6bcf\u4e00\u4e2a\u70b9\uff0c\u6df1\u641c\u8ba1\u7b97\u5b50\u6811\u7684\u76f4\u5f84 $res1 = max(d[u]+d[v]+w(u,v))$\u3002\u987a\u9053\u6c42\u51fa\u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811\u7684\u6700\u5927\u6df1\u5ea6 $d[u]$\u3002\n\n```cpp\ninline void dfs(int u,int fa){\n\tfor(re int i(head[u]) ; i ; i=e[i].nxt){\n\t\tint v = e[i].to,w = e[i].w;\n\t\tif(inc[v] || v==fa) continue; //\u5982\u679c\u8fd9\u4e2a\u70b9\u5728\u73af\u4e0a\uff0c\u6216\u8005\u641c\u5230\u4e86\u7236\u4eb2\u5c31\u4e0d\u7ee7\u7eed \n\t\tdfs(v,u); //\u5f80\u4e0b\u641c \n\t\tres1 = max(res1,d[u]+d[v]+w); //\u6c42\u6700\u5927\u7684\u76f4\u5f84 \n\t\td[u] = max(d[u],d[v]+w); //\u987a\u9053\u8bb0\u5f55\u4e0b\u6765\u4ee5u\u4e3a\u6839\u7684\u6700\u5927\u6df1\u5ea6 \n\t}\n}\n\nrep(i,1,tot) dfs(cv[i],0);\n```\n\n\u7136\u540e\u6765\u770b\u76f4\u5f84\u7ecf\u8fc7\u73af\u3002\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u60f3\u6cd5\u5c31\u662f\uff0c\u66b4\u529b\u679a\u4e3e\u5220\u54ea\u4e00\u6761\u8fb9\uff0c $res[i] = max ($\u4e24\u4e2a\u5b50\u6811\u7684\u6df1\u5ea6 $+$ \u5b83\u4eec\u5728\u73af\u4e0a\u7684\u8ddd\u79bb $)$\u3002\u5219\u7ecf\u8fc7\u73af\u7684\u76f4\u5f84 $res2 = min(res[i])$\u3002\n\n\u4f46\u8fd9\u6837\u505a\u590d\u6742\u5ea6\u662f $n^2$ \u7684\uff0c\u8fc7\u4e0d\u53bb\u672c\u9898\u3002\u8003\u8651\u5982\u4f55\u8fdb\u884c\u4f18\u5316\u3002\n\n$1$.\u628a\u8fb9 $(1,tot)$ \u65ad\u5f00\uff0c$tot$ \u4e3a\u73af\u4e0a\u6709 $tot$ \u4e2a\u70b9\uff0c\u9884\u5904\u7406\u524d\u7f00\u957f\u5ea6\u3002\n\n$A[i] = max($ \u524d\u7f00\u4e2d\u94fe\u7684\u957f\u5ea6 $+$ \u8282\u70b9\u6811\u7684\u6df1\u5ea6 $)$\u3002\n\n$B[i] = max($ \u524d\u7f00\u4e2d\u4e24\u68f5\u6811\u7684\u6df1\u5ea6 $+$ \u8fd9\u4e24\u4e2a\u8282\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb $)$\u3002\n\n$2$.\u628a\u8fb9 $(1,tot)$ \u65ad\u5f00\uff0c\u9884\u5904\u7406\u540e\u7f00\u957f\u5ea6\u3002\n\n$C[i] = max($ \u540e\u7f00\u4e2d\u94fe\u7684\u957f\u5ea6 $+$ \u8282\u70b9\u6811\u7684\u6df1\u5ea6 $)$\u3002\n\n$D[i] = max($ \u540e\u7f00\u4e2d\u4e24\u68f5\u6811\u7684\u6df1\u5ea6 $+$ \u8fd9\u4e24\u4e2a\u8282\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb $)$\u3002\n\n3.\u679a\u4e3e\u65ad\u5f00\u73af\u4e0a\u7684\u8fb9 $(i,i+1)$\uff0c\u62fc\u51d1\u7b54\u6848\u3002\n\n$res[i] = max(B[i],D[i+1],A[i]+C[i+1]+w(1,tot))$\n\n\u5219\u7ecf\u8fc7\u73af\u7684\u76f4\u5f84 $res2 = min(res[i])$\u3002\n\n\u6ce8\u610f\uff0c\u6700\u540e\u9700\u8981\u6709\u4e2a\u7279\u5224\uff0c\u65ad\u5f00 $(1,tot)$ \u8fd9\u6761\u8fb9\uff0c\u9700\u8981\u52a0\u4e0a\u4e00\u53e5\u8bdd $res2 = min(res2,B[tot])$\u3002\n\n\u90a3\u4e48\u57fa\u73af\u6811\u7684\u76f4\u5f84\u5c31\u662f $max(res1,res2)$\uff0c\u8fd9\u9053\u9898\u7684\u7b54\u6848\u5c31\u662f $max(res1,res2)/2$\u3002\n\n```cpp\ndouble sum=0,mx=0;\n\trep(i,1,tot){ //\u9884\u5904\u7406\u524d\u7f00 \n\t\tsum += cw[i-1]; //sum\u5c31\u662f\u94fe\u957f\u7684\u52a0\u548c \n\t\tA[i] = max(A[i-1],sum+d[cv[i]]); //\u6839\u636eA\u6570\u7ec4\u7684\u5b9a\u4e49\u6765\u63a8 \n\t\tB[i] = max(B[i-1],mx+d[cv[i]]+sum); //\u8fd9\u91cc\u5f88\u5de7\u5999\n\t\t\t\t\t\t\t\t\t\t\t//\u6211\u4eec\u7684mx\u8bb0\u5f55\u7684\u662fi\u8fd9\u4e2a\u70b9\u4e4b\u524d\u7684\u67d0\u4e00\u4e2a\u70b9k\u7684\u6df1\u5ea6-k\u4e4b\u524d\u7684\u94fe\u957f \n\t\t\t\t\t\t\t\t\t\t\t//\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u8981\u6c42B\u6570\u7ec4\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2a\u62b5\u6d88\u7684\u601d\u60f3\n\t\t\t\t\t\t\t\t\t\t\t//sum\u8bb0\u5f55\u7684\u662f\u94fe\u957f\u7684\u52a0\u548c\uff0c\u518d\u52a0\u4e0amx\uff0c\u4e5f\u5c31\u628ak\u524d\u9762\u7684\u94fe\u957f\u6d88\u6389\u4e86\n\t\t\t\t\t\t\t\t\t\t\t//\u6700\u540e\u5269\u7684\u5c31\u662fk\u7684\u6df1\u5ea6+k\u5230i\u7684\u94fe\u957f+i\u7684\u6df1\u5ea6\uff0c\u4e0eB\u6570\u7ec4\u5b9a\u4e49\u76f8\u540c \n\t\tmx = max(mx,d[cv[i]]-sum); //\u6ce8\u610f\u8981\u66f4\u65b0mx \n\t}\n\tsum = mx = 0;\n\tdouble cn_1 = cw[tot]; //\u8fd9\u91cc\u4e5f\u5f88\u5de7\u5999\uff0c\u628atot\u8fd9\u4e2a\u70b9\u7684\u70b9\u6743\u8bb0\u5f55\u4e0b\u6765\uff0c\u4e5f\u5c31\u662f\u76f8\u5f53\u4e8e\u628a1\u548ctot\u8fd9\u6761\u8fb9\u65ad\u5f00 \n\tcw[tot] = 0; //\u8981\u628atot\u8fd9\u4e2a\u70b9\u70b9\u6743\u6e05\u96f6 \n\tdrep(i,tot,1){ //\u9884\u5904\u7406\u540e\u7f00\uff0c\u548c\u524d\u7f00\u7c7b\u4f3c \n\t\tsum += cw[i];\n\t\tC[i] = max(C[i+1],sum+d[cv[i]]);\n\t\tD[i] = max(D[i+1],mx+d[cv[i]]+sum);\n\t\tmx = max(mx,d[cv[i]]-sum);\n\t}\n\tdouble res;\n\trep(i,1,tot){\n\t\tres = max(max(B[i],D[i+1]),A[i]+C[i+1]+cn_1); //\u4e0a\u8ff0\u6240\u8bf4\u7684\u4e09\u6bb5 \n\t\tres2 = min(res2,res); //\u4f7fres2\u6700\u5c0f\u5316 \n\t}\n\tres2 = min(res2,B[tot]); //\u522b\u5fd8\u4e86\u52a0\u4e0a\u7279\u5224 \n\tprintf(\"%.1lf\\n\",max(res1,res2)/2);\n```\n\n### \u603b\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#include <cmath>\n#define re register\n#define drep(a,b,c) for(re int a(b) ; a>=(c) ; --a)\n#define rep(a,b,c) \tfor(re int a(b) ; a<=(c) ; ++a)\nusing namespace std;\ninline int read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch == '-') f=-1 ; ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}\n\treturn x*f;\n}\nconst int M = 2e5+10;\nint n;\nint head[M],vis[M],fa[M];\nint inc[M],cv[M],cw[M],w[M];\ndouble d[M],A[M],B[M],C[M],D[M];\nint cnt,tot,ans;\ndouble res1,res2=1e18;\nstruct edge{\n\tint to,nxt,w;\n}e[M];\ninline void add(int u,int v,int w){\n\te[++cnt].to = v;\n\te[cnt].w = w;\n\te[cnt].nxt = head[u];\n\thead[u] = cnt;\n}\ninline bool find(int u){\n\tvis[u] = 1; //\u8fd9\u4e2a\u70b9\u8bb0\u5f55\u4e3a\u8d70\u8fc7 \n\tfor(re int i(head[u]) ; i ; i=e[i].nxt){\n\t\tint v = e[i].to;\n\t\tif(v == fa[u]) continue; //\u8d70\u5230\u4e86\u7236\u4eb2\u4e0d\u884c \n\t\tfa[v] = u;\n\t\tw[v] = e[i].w; //\u5c06\u8fd9\u6761\u8fb9\u7684\u8fb9\u6743\u8f6c\u5316\u4e3a\u513f\u5b50\u7684\u70b9\u6743\uff0c\u548c\u6811\u5256\u7684\u8f6c\u5316\u7c7b\u4f3c \n\t\tif(!vis[v]) { if(find(v)) return 1; } //\u5982\u679c\u8fd9\u4e2a\u70b9\u6ca1\u6709\u8d70\u8fc7\u800c\u4e14\u540e\u9762\u80fd\u627e\u5230\u73af\uff0c\u5c31\u4e00\u76f4\u5f80\u56dereturn \n\t\telse{ //\u627e\u5230\u4e86\u73af \n\t\t\tint p = u; //\u679a\u4e3e\u73af\u4e0a\u7684\u70b9 \n\t\t\twhile(1){\n\t\t\t\tinc[p] = 1; //inc[p]=1\u8868\u793ap\u5728\u73af\u4e0a \n\t\t\t\tcv[++tot] = p; //\u73af\u4e0a\u7684\u70b9\u7684\u7f16\u53f7\uff0c\u7531\u4e8e\u540e\u9762\u64cd\u4f5c\uff0c\u6211\u4eec\u9700\u8981\u91cd\u65b0\u7f16\u53f7 \n\t\t\t\tcw[tot] = w[p]; //\u73af\u4e0a\u8fd9\u4e2a\u7f16\u53f7\u70b9\u7684\u70b9\u6743 \n\t\t\t\tp = fa[p]; //\u7531\u4e8e\u8bb0\u5f55\u4e86fa[p]\u662fp\u7684\u7236\u4eb2\uff0c\u6240\u4ee5\u53ef\u4ee5\u5f80\u56de\u627e \n\t\t\t\tif(p == u) break; //\u73af\u904d\u5386\u5b8c\u4e86 \n\t\t\t}\n\t\t\treturn 1; //\u8bb0\u5f55\u5df2\u7ecf\u627e\u5230\u73af \n\t\t}\n\t}\n\treturn 0; //\u6ca1\u627e\u5230\u5c31\u7ee7\u7eed\u5f80\u4e0b\u627e \n}\ninline void dfs(int u,int fa){\n\tfor(re int i(head[u]) ; i ; i=e[i].nxt){\n\t\tint v = e[i].to,w = e[i].w;\n\t\tif(inc[v] || v==fa) continue; //\u5982\u679c\u8fd9\u4e2a\u70b9\u5728\u73af\u4e0a\uff0c\u6216\u8005\u641c\u5230\u4e86\u7236\u4eb2\u5c31\u4e0d\u7ee7\u7eed \n\t\tdfs(v,u); //\u5f80\u4e0b\u641c \n\t\tres1 = max(res1,d[u]+d[v]+w); //\u6c42\u6700\u5927\u7684\u76f4\u5f84 \n\t\td[u] = max(d[u],d[v]+w); //\u987a\u9053\u8bb0\u5f55\u4e0b\u6765\u4ee5u\u4e3a\u6839\u7684\u6700\u5927\u6df1\u5ea6 \n\t}\n}\nsigned main(){\n\tn=read();\n\trep(i,1,n){\n\t\tint u=read(),v=read(),w=read();\n\t\tadd(u,v,w),add(v,u,w);\n\t}\n\tfind(1);\n\trep(i,1,tot) dfs(cv[i],0);\n\tdouble sum=0,mx=0;\n\trep(i,1,tot){ //\u9884\u5904\u7406\u524d\u7f00 \n\t\tsum += cw[i-1]; //sum\u5c31\u662f\u94fe\u957f\u7684\u52a0\u548c \n\t\tA[i] = max(A[i-1],sum+d[cv[i]]); //\u6839\u636eA\u6570\u7ec4\u7684\u5b9a\u4e49\u6765\u63a8 \n\t\tB[i] = max(B[i-1],mx+d[cv[i]]+sum); //\u8fd9\u91cc\u5f88\u5de7\u5999\n\t\t\t\t\t\t\t\t\t\t\t//\u6211\u4eec\u7684mx\u8bb0\u5f55\u7684\u662fi\u8fd9\u4e2a\u70b9\u4e4b\u524d\u7684\u67d0\u4e00\u4e2a\u70b9k\u7684\u6df1\u5ea6-k\u4e4b\u524d\u7684\u94fe\u957f \n\t\t\t\t\t\t\t\t\t\t\t//\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u8981\u6c42B\u6570\u7ec4\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2a\u62b5\u6d88\u7684\u601d\u60f3\n\t\t\t\t\t\t\t\t\t\t\t//sum\u8bb0\u5f55\u7684\u662f\u94fe\u957f\u7684\u52a0\u548c\uff0c\u518d\u52a0\u4e0amx\uff0c\u4e5f\u5c31\u628ak\u524d\u9762\u7684\u94fe\u957f\u6d88\u6389\u4e86\n\t\t\t\t\t\t\t\t\t\t\t//\u6700\u540e\u5269\u7684\u5c31\u662fk\u7684\u6df1\u5ea6+k\u5230i\u7684\u94fe\u957f+i\u7684\u6df1\u5ea6\uff0c\u4e0eB\u6570\u7ec4\u5b9a\u4e49\u76f8\u540c \n\t\tmx = max(mx,d[cv[i]]-sum); //\u6ce8\u610f\u8981\u66f4\u65b0mx \n\t}\n\tsum = mx = 0;\n\tdouble cn_1 = cw[tot]; //\u8fd9\u91cc\u4e5f\u5f88\u5de7\u5999\uff0c\u628atot\u8fd9\u4e2a\u70b9\u7684\u70b9\u6743\u8bb0\u5f55\u4e0b\u6765\uff0c\u4e5f\u5c31\u662f\u76f8\u5f53\u4e8e\u628a1\u548ctot\u8fd9\u6761\u8fb9\u65ad\u5f00 \n\tcw[tot] = 0; //\u8981\u628atot\u8fd9\u4e2a\u70b9\u70b9\u6743\u6e05\u96f6 \n\tdrep(i,tot,1){ //\u9884\u5904\u7406\u540e\u7f00\uff0c\u548c\u524d\u7f00\u7c7b\u4f3c \n\t\tsum += cw[i];\n\t\tC[i] = max(C[i+1],sum+d[cv[i]]);\n\t\tD[i] = max(D[i+1],mx+d[cv[i]]+sum);\n\t\tmx = max(mx,d[cv[i]]-sum);\n\t}\n\tdouble res;\n\trep(i,1,tot){\n\t\tres = max(max(B[i],D[i+1]),A[i]+C[i+1]+cn_1); //\u4e0a\u8ff0\u6240\u8bf4\u7684\u4e09\u6bb5 \n\t\tres2 = min(res2,res); //\u4f7fres2\u6700\u5c0f\u5316 \n\t}\n\tres2 = min(res2,B[tot]); //\u522b\u5fd8\u4e86\u52a0\u4e0a\u7279\u5224 \n\tprintf(\"%.1lf\\n\",max(res1,res2)/2);\n\treturn 0;\n}\n```\n",
        "postTime": 1660574813,
        "uid": 226367,
        "name": "glorious_dream",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1399 \u3010[NOI2013]\u5feb\u9910\u5e97\u3011"
    },
    {
        "content": "# link:[\u9898\u76ee](https://www.luogu.org/problemnew/show/P1399)\n\n\n\n# [\u542c\u8bf4\u5728blog\u98df\u7528\u4f53\u9a8c\u66f4\u4f73](https://blog.csdn.net/qq_38944163/article/details/89470928)\n\n\n----\n## \u9898\u610f\n### \u7ed9\u51fa\u4e00\u4e2a\u57fa\u73af\u6811\uff0c\u6bcf\u6761\u8fb9\u6709\u4e00\u4e2a\u8fb9\u6743\uff0c\u5728\u56fe\u4e0a\u6c42\u51fa\u4e00\u4e2a\u70b9\uff08\u53ef\u4ee5\u5728\u8fb9\u4e0a\uff09\u4f7f\u5f97\u5b83\u5230\u56fe\u4e0a\u6bcf\u4e2a\u8282\u70b9\u7684\u6700\u5927\u8ddd\u79bb\u6700\u5c0f\uff0c\u8f93\u51fa\u90a3\u4e2a\u8ddd\u79bb.\n---\n### \u9898\u89e3\n~~\u53ef\u4ee5\u76f4\u63a5\u770b\u4ee3\u7801~~\n\n\u4e00\u4e2a\u548c\u5f88\u76f4\u89c2\u7684\u601d\u8def\uff0c\u5bf9\u4e8e\u57fa\u73af\u6811\uff0c\u53ea\u9700\u8981\u65ad\u5f00\u6362\u4e0a\u7684\u4e00\u6761\u8fb9\u7136\u540e\u6c42\u6811\u7684\u76f4\u5f84\u5c31\u53ef\u4ee5\u4e86\uff0c\u53ef\u4ee5\u8bc1\u660e\u65ad\u5f00\u4e00\u6761\u8fb9\u540e\u5bf9\u7b54\u6848\u6ca1\u6709\u5f71\u54cd\uff0c\u56e0\u4e3a\u8ddd\u79bb\u80af\u5b9a\u4e0d\u4f1a\u6210\u4e00\u4e2a\u73af\u3002\n\n\u4f46\u662f\u8fd9\u6837\u4e5f\u662f$o(n^2)$\u3002\n\n\u53ef\u4ee5\u5148\u5bf9\u6362\u4e0a\u7684\u6bcf\u4e2a\u5916\u5411\u6811\u505a\u4e00\u6b21\u6c42\u76f4\u5f84\uff08\u6700\u540e\u7684\u7b54\u6848\u80af\u5b9a\u5927\u4e8e\u7b49\u4e8e\u5b83\u7684\u4e00\u534a\u7684\uff09\uff0c\u6c42\u51fa$f[i]$\u8868\u793a\u4ee5\u7b2c$i$\u4e2a\u70b9\u4e3a\u8d77\u70b9,\u505a\u5927\u80fd\u5728\u5b50\u6811\u4e2d\u5ef6\u4f38\u7684\u957f\u5ea6\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u6362\u4e0a$i,j$\u4e24\u70b9,\u4ed6\u4eec\u7684\u8ddd\u79bb\u5c31\u662f$f[i]+f[j]+dis[i][j]$,$dis[i][j]$\u8868\u793a\u7684\u662f\u5728\u73af\u4e0a$i,j$\u7684\u76f4\u63a5\u8ddd\u79bb\u3002\n\n\u62c6\u6362\u6210\u94fe\u540e\u5c31\u53d8\u6210$f[i]+f[j]+sum[j] - sum[i]$,$ \\ $ $sum[i]$\u8868\u793a\u62c6\u73af\u6210\u94fe\u540e\u8fb9\u6743\u7684\u524d\u7f00\u548c,\u7136\u540e$f[i]-sum[i]$\u548c$f[j]-sum[j]$\u76f4\u63a5\u5f00\u4e24\u4e2a\u5806\u7ef4\u62a4\u4e00\u4e0b\u6700\u5927\u503c\u5c31\u53ef\u4ee5\u4e86,\u6ce8\u610f\u8981\u8003\u8651$i == j$\u7684\u60c5\u51b5\u3002\n\n~~\u662f\u4e0d\u662f\u5f88\u7b80\u5355\uff08\u6bd2\u7624\uff09~~\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define N 1000005\nusing namespace std;\nstruct edge{\n    int v, nxt, c;\n}e[N << 1];\nint p[N], eid;\nvoid init(){\n    memset(p, -1, sizeof p);\n    eid = 0;\n}\nvoid insert(int u, int v, int c){\n    e[eid].v = v;\n    e[eid].c = c;\n    e[eid].nxt = p[u];\n    p[u] = eid ++;\n}\nint dfn[N], n, fa[N], f[N], F, ring[N], cnt, ha[N], ans, tot, sum[N], val[N];\nvoid findring(int u){\n    if(dfn[u]) F = dfn[u];\n    if(F) return;\n    dfn[u] = ++ tot;\n    for(int i = p[u]; i + 1; i = e[i].nxt){\n        int v = e[i].v;\n        if(v == fa[u]) continue;\n        fa[v] = u;\n        findring(v);\n    }\n    if(F) ring[++ cnt] = u, ha[u] = 1;\n    if(F == dfn[u]) F = 0;\n}\nvoid dfs(int u){ //dp \n    for(int i = p[u]; i + 1; i = e[i].nxt){\n        int v = e[i].v;\n        if(v == fa[u] || ha[v]) continue;\n        fa[v] = u;\n        dfs(v);\n        ans = max(ans, f[u] + f[v] + e[i].c);//\u6c42\u6811\u7684\u76f4\u5f84 \n        f[u] = max(f[u], f[v] + e[i].c);//\u7b2cu\u4e3a\u8d77\u70b9,\u505a\u5927\u80fd\u5728\u5b50\u6811\u4e2d\u5ef6\u4f38\u7684\u957f\u5ea6 \n    }\n}\nstruct cmp1{int operator()(int x, int y){\n    return f[ring[x]] - sum[x] < f[ring[y]] - sum[y];\n}};\nstruct cmp2{int operator()(int x, int y){\n    return f[ring[x]] + sum[x] < f[ring[y]] + sum[y];\n}};\npriority_queue<int, vector<int>, cmp1> q1;//\u7ef4\u62a4f[i]-sum[i] \npriority_queue<int, vector<int>, cmp2> q2;//\u7ef4\u62a4f[i]+sum[i] \nsigned main(){\n    init();\n    scanf(\"%lld\", &n);\n    for(int i = 1; i <= n; i ++){\n        int u, v, c;\n        scanf(\"%lld%lld%lld\", &u, &v, &c);\n        insert(u, v, c);\n        insert(v, u, c);\n    }\n    findring(1);\n    memset(fa, 0, sizeof fa);\n    for(int i = 1; i <= cnt; i ++) dfs(ring[i]);//\u5bf9\u4e8e\u73af\u4e0a\u7684\u6bcf\u4e2a\u70b9\u5411\u5916\u5ef6\u4f38\u7684\u6811\u505a\u4e00\u6b21dp \n    ring[0] = ring[cnt]; \n    for(int i = 1; i <= cnt; i ++){//\u628a\u73af\u7684\u8fb9\u6743\u8868\u793a\u6210\u5e8f\u5217\u7684\u5f62\u5f0f \n        int u = ring[i];\n        for(int j = p[u]; j + 1; j = e[j].nxt){\n            int v = e[j].v;\n            if(v == ring[i - 1]) val[i] = e[j].c;\n        }\n    }\n    for(int i = 1; i <= cnt;i ++) val[i + cnt] = val[i], ring[i + cnt] = ring[i];//\u62c6\u73af\u6210\u94fe \n\n    for(int i = 1; i <= cnt * 2; i ++) sum[i] = sum[i - 1] + val[i];//\u505a\u73af\u4e0a\u8fb9\u6743\u7684\u524d\u7f00\u548c \n    int anss = 1e18;\n    for(int i = 1; i <= cnt; i ++) q1.push(i), q2.push(i);\n    for(int i = 1; i <= cnt; i ++){\n        while(q1.top() < i && q1.size() > 1)\tq1.pop();\n        while(q2.top() < i && q2.size() > 1)\tq2.pop();\n        int x = q1.top(), y = q2.top();\n        if(x == y){//\u8981\u9760\u8003\u8651i == j\u7684\u60c5\u51b5\uff0c\u6bcf\u4e2a\u518d\u53d6\u51fa\u4e00\u4e2a\u6700\u5927\u503c\uff0c\u7136\u540e\u4ea4\u53c9\u7ec4\u5408\u770b\u90a3\u4e2a\u5927 \n            q1.pop(), q2.pop();\n            while(q1.top() < i && q1.size() > 1)\tq1.pop();\n            while(q2.top() < i && q2.size() > 1)\tq2.pop();\n            int xx = q1.top(), yy = q2.top();\n            anss = min(anss, max(f[ring[x]] - sum[x] + f[ring[yy]] + sum[yy], f[ring[xx]] - sum[xx] + f[ring[y]] + sum[y]));//\u786c\u5957\u521a\u521a\u7684\u516c\u5f0f \n            q1.push(x), q2.push(y);\n        }else anss = min(anss, f[ring[x]] - sum[x] + f[ring[y]] + sum[y]);//\u4e0d\u7136\u5c31\u76f4\u63a5\u641e \n        q1.push(cnt + i), q2.push(cnt + i);\n    }\n    ans = max(anss, ans);//\u548c\u4e4b\u524d\u6811\u7684\u76f4\u5f84\u6c42\u4e2a\u6700\u5927\u503c \n    \n    printf(\"%lld.%lld\", ans/2, (ans&1)? 5:0);//\u8f93\u51fa \n    return 0;\n}\n\n```",
        "postTime": 1555998783,
        "uid": 31656,
        "name": "lomit",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1399 \u3010[NOI2013]\u5feb\u9910\u5e97\u3011"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n\u6c42\u57fa\u73af\u6811\u7684\u76f4\u5f84\u3002\n\n## \u89e3\u6790\n\n\u4e00\u9897\u57fa\u73af\u6811\u7684\u76f4\u5f84\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n1. \u76f4\u5f84\u4e3a\u73af\u4e0a\u67d0\u4e00\u70b9\u5b50\u6811\u7684\u76f4\u5f84\u3002\n2. \u76f4\u5f84\u4e3a\u73af\u4e0a\u67d0\u4e00\u70b9\u5b50\u8282\u70b9\u7ecf\u8fc7\u73af\u5230\u8fbe\u53e6\u4e00\u70b9\u5b50\u8282\u70b9\u3002\n\n\u5bf9\u4e8e\u60c5\u51b5 $1$\uff0c\u663e\u7136\u65ad\u73af\u4e0a\u54ea\u6761\u8fb9\u5bf9\u5b50\u6811\u76f4\u5f84\u4e0d\u4f1a\u6709\u5f71\u54cd\uff0c\u53ef\u4ee5\u76f4\u63a5\u5904\u7406\u51fa\u6765\u3002\n\n\u5bf9\u4e8e\u60c5\u51b5 $2$\uff0c\u53ef\u4ee5\u6c42\u65ad\u6389\u73af\u4e0a\u4efb\u610f\u4e00\u8fb9\u7684\u76f4\u5f84\u7684\u6700\u5927\u503c(\u4e5f\u5c31\u76f8\u5f53\u4e8e\u94a6\u5b9a\u4e00\u6761\u8fb9\u4e0d\u5c5e\u4e8e\u76f4\u5f84\uff0c\u6c42\u51fa\u6240\u4ee5\u53ef\u80fd\u7684\u76f4\u5f84\u60c5\u51b5)\uff1a\n\n ![](https://cdn.luogu.com.cn/upload/image_hosting/qt6z5cqn.png)\n\n\u5c06\u73af\u4e0a\u4efb\u610f\u4e00\u8fb9\u65ad\u5f00\u62c6\u73af\u4e3a\u94fe\uff0c\u5e76\u590d\u5236\u4e00\u904d\u63a5\u5728\u672b\u5c3e\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/h4gxe78j.png)\n\n\u7528\u4e00\u4e2a\u957f\u5ea6\u4e3a\u73af\u7684\u70b9\u6570\u7684\u7a97\u53e3\u4ece\u5de6\u5411\u53f3\u626b\u8fc7\u53bb\uff0c\u6bcf\u6b21\u66f4\u65b0\u7b54\u6848\uff0c\u5c31\u53ef\u4ee5\u5305\u542b\u6240\u4ee5\u65ad\u8fb9\u7684\u60c5\u51b5\u3002\n\n\u5982\u56fe\uff0c\u82e5\u5148\u65ad\u5f00 $1,3$ \u4e4b\u95f4\u7684\u8fb9\u3002\n\n\u4ee4 $dep_i$ \u4e3a $i$ \u70b9\u5b50\u8282\u70b9\u7684\u6700\u5927\u6df1\u5ea6\uff0c$sum_i$ \u4e3a $i$ \u8ddd $1$ \u53f7\u8282\u70b9\u7684\u8ddd\u79bb\u3002\n\n\u4ee4 $a_i=dep_i-sum_i,b_i=dep_i+sum_i$\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/g14ukm6w.png)\n\n\u5982\u56fe\uff0c\u7ea2\u8272\u6bb5\u4e3a $a$\uff0c\u84dd\u8272\u6bb5\u4e3a $b$\uff0c\u7d2b\u8272\u6bb5\u4e3a\u5408\u5e76\u540e\u7684\u76f4\u5f84\u3002\n\n\u76f4\u5f84\u957f\u5ea6\u4e3a $\\max\\{dep_i+dep_j+sum_j-sum_i\\}$ $(sum_i<sum_j)$\u3002\n\n\u4e5f\u5c31\u662f\u76f4\u5f84\u4e3a $\\max\\{a_i+b_j\\}$\u3002\n\n\u6240\u4ee5\u53ef\u4ee5\u53d6 $\\max\\{a_i\\}+\\max\\{b_j\\}$ \u4e3a\u76f4\u5f84\u3002\n\n\u4f46\u53ef\u80fd\u4f1a\u51fa\u73b0 $i=j$ \u7684\u60c5\u51b5\u3002\n\n\u6240\u4ee5\u8981\u7ef4\u62a4 $a_i$ \u548c $b_i$ \u7684\u6700\u5927\u503c\u548c\u6b21\u5927\u503c\u3002\n\n\u6700\u540e\u5c06\u60c5\u51b5 $1$ \u4e0e\u60c5\u51b5 $2$ \u53d6\u6700\u5927\u503c\u3002\n\n## \u5b9e\u73b0\n\n\u5efa\u7acb\u4e00\u4e2a\u53ef\u4ee5\u652f\u6301\u5355\u70b9\u4fee\u6539\u5e76\u67e5\u8be2\u6700\u503c\u7684\u6570\u636e\u7ed3\u6784(\u5982\u7ebf\u6bb5\u6811)\u3002\n\n\u65ad\u5f00\u73af\u4e0a\u4efb\u610f\u4e00\u8fb9\u5e76\u5c06\u94fe\u590d\u5236\u4e00\u904d\u63a5\u5728\u672b\u5c3e\u3002\n\n\u82e5\u73af\u957f\u4e3a$k$\u3002\n\n\u4f9d\u6b21\u626b\u63cf\u6bcf\u4e2a\u70b9\uff0c\u6bcf\u6b21\u66f4\u65b0 $a_i,b_i$ ,\u524d $(k-1)$ \u4e2a\u70b9\u4e0d\u66f4\u65b0 $ans$(\u8fd8\u6ca1\u5f62\u6210\u4e00\u9897\u5b8c\u6574\u7684\u6811),\u4e4b\u540e\u6bcf\u6b21\u67e5\u8be2 $a_i$ \u548c $b_i$ \u7684\u6700\u5927\u503c\u548c\u6b21\u5927\u503c\u66f4\u65b0 $ans$\u3002\n\n\u6bcf\u6b21\u66f4\u65b0\u7684\u4fe1\u606f\u7684\u6709\u6548\u671f\u4e3a $k$ \u6b21\u79fb\u52a8\u7a97\u53e3\u3002\n\n\u800c $k$ \u6b21\u79fb\u52a8\u7a97\u53e3\u662f\u4e00\u4e2a\u5faa\u73af\uff0c\u53c8\u56de\u5230\u4e86\u540c\u4e00\u70b9\uff0c\u76f4\u63a5\u66f4\u65b0 $a$ \u548c $b$ \uff0c\u66ff\u4ee3\u8fc7\u671f\u4fe1\u606f\u5373\u53ef\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define MAXN 200010\n#define ls p<<1\n#define rs p<<1|1\nint n;\nvector<int> ver[MAXN],e[MAXN];\ninline int read(){\n    int a=0;\n    char ch=getchar();\n    while(ch<'0'||ch>'9') ch=getchar();\n    while(ch>='0'&&ch<='9') {\n        a=(a<<1)+(a<<3)+(ch^48);\n        ch=getchar();\n    }\n    return a;\n}\ninline void add(int u,int v,int w){\n    ver[u].push_back(v);\n    e[u].push_back(w);\n}\nint pre[MAXN];\nint w[MAXN];\nchar mark[MAXN];\nint dep[MAXN];\nint _ans=0;\nvoid dfs_(int u){ //\u6807\u8bb0\u73af\u4e0a\u7684\u70b9\n    if(mark[u]) return ;\n    mark[u]=1;\n    dfs_(pre[u]);\n}\nbool dfs(int u,int fa){ //\u627e\u73af\n    for(int v,i=0;i<ver[u].size();i++){\n        if((v=ver[u][i])==fa) continue;\n        if(pre[v]){\n            pre[v]=u;\n            w[v]=e[u][i];\n            dfs_(u);\n            return 1;\n        }\n        pre[v]=u;\n        w[v]=e[u][i];\n        if(dfs(v,u)) return 1;\n    }\n    return 0;\n}\nvoid dfs_dep(int u,int fa){ //\u5904\u7406\u5b50\u6811\u76f4\u5f84\u548cdep[u]\n    for(int i=0,v;i<ver[u].size();i++){\n        if((v=ver[u][i])==fa) continue;\n        if(mark[v]) continue;\n        dfs_dep(v,u);\n        _ans=max(_ans,dep[u]+dep[v]+e[u][i]);\n        dep[u]=max(dep[u],dep[v]+e[u][i]);\n    }\n}\nint a[MAXN],b[MAXN];\ninline bool cmp1(int _a,int _b){ //\u56e0\u4e3a\u662f\u8bb0\u5f55\u7684\u70b9\u7684\u7f16\u53f7,\u6240\u4ee5\u6309\u6570\u7ec4\u5bf9\u5e94\u5143\u7d20\u6392\u5e8f\n    return a[_a]<a[_b];\n}\ninline bool cmp2(int _a,int _b){\n    return b[_a]<b[_b];\n}\nstruct node {\n    int a,aa,b,bb;\n    node operator + (node _b){\n        node res; //\u5947\u4e11\u65e0\u6bd4\u7684\u533a\u95f4\u6700\u5927\u503c\u6b21\u5927\u503c\u7ef4\u62a4\n        vector<int> rec;\n        rec.push_back(a);\n        rec.push_back(aa);\n        rec.push_back(_b.a);\n        rec.push_back(_b.aa);\n        sort(rec.begin(),rec.end(),cmp1);\n        res.a=rec[3],res.aa=rec[2];\n        rec.clear();\n        rec.push_back(b);\n        rec.push_back(bb);\n        rec.push_back(_b.b);\n        rec.push_back(_b.bb);\n        sort(rec.begin(),rec.end(),cmp2);\n        res.b=rec[3],res.bb=rec[2];\n\n        return res;\n    }\n}data[MAXN<<2];\ninline void push_up(int p){\n    data[p]=data[ls]+data[rs];\n}\ninline void build(int l,int r,int p){\n    if(l==r){\n        data[p].a=data[p].b=l;\n        //\u8bb0\u5f55\u5bf9\u5e94\u8282\u70b9\u7f16\u53f7\n        return ;\n    }\n    int mid=l+r>>1;\n    build(l,mid,ls);\n    build(mid+1,r,rs);\n    push_up(p);\n}\nvoid upd(int l,int r,int x,int p){\n    if(l==r){\n        // \u786e\u5b9e\u4ec0\u4e48\u90fd\u6ca1\u6709\n        return ;\n    }\n    int mid=l+r>>1;\n    if(mid>=x) upd(l,mid,x,ls);\n    else upd(mid+1,r,x,rs);\n    push_up(p);\n}\ninline int qu(){\n    if(data[1].a==data[1].b) //\u5982\u679c\u662f\u540c\u4e00\u70b9\uff0c\u5206\u7c7b\u8ba8\u8bba\u66f4\u65b0\n        return max(a[data[1].a]+b[data[1].bb],a[data[1].aa]+b[data[1].b]);\n    return a[data[1].a]+b[data[1].b]; //\u4e0d\u662f\u540c\u4e00\u70b9\uff0c\u76f4\u63a5\u66f4\u65b0\n}\nsigned main(){\n    scanf(\"%lld\",&n);\n    for(int i=1,u,v,w;i<=n;i++){\n        u=read();\n        v=read();\n        w=read();\n        add(u,v,w);\n        add(v,u,w);\n    }\n    dfs(1,0);\n    int __s=-1,sum=0,ans=LONG_LONG_MAX;\n    for(int i=1;i<=n;i++)\n        if(mark[i]) {\n            __s=i;//\u968f\u4fbf\u9009\u4e00\u4e2a\u5f00\u59cb\u70b9\n            dfs_dep(i,0);\n        }\n    memset(a,0xcf,sizeof a); //\u521d\u59cb-inf\n    memset(b,0xcf,sizeof b);\n    for(int i=__s;mark[i]<=2;i=pre[i]){ //\u5982\u679c\u7b2c3\u6b21\u626b\u5230\u4e00\u4e2a\u8282\u70b9\u4ee3\u8868\u5df2\u7ecf\u5904\u7406\u5b8c\u4e86\n        mark[i]++;\n        if(mark[pre[i]]<2){\n            a[i]=dep[i]-sum;\n            b[i]=dep[i]+sum;\n            //upd(1,n,i,1);\n            sum+=w[i];\n            if(mark[pre[pre[i]]]==2) //\u56e0\u4e3a\u6ca1\u6709\u67e5\u8be2\uff0c\u6700\u540e\u5efa\u6811\u65f6\u4e00\u6b21\u6027push_up\u4f1a\u66f4\u5feb\n                build(1,n,1);\n            continue;\n        }\n        a[i]=dep[i]-sum;\n        b[i]=dep[i]+sum;\n        sum+=w[i];\n        upd(1,n,i,1);//\u5355\u70b9\u4fee\u6539\n        ans=min(ans,qu());\n    }\n    if(ans<_ans) ans=_ans; //\u5982\u679c\u5b50\u6811\u76f4\u5f84\u66f4\u957f\u4e45\u9009\u5b50\u6811\u76f4\u5f84\n    printf(\"%.1lf\",ans*1.0/2);//\u7b54\u6848\u8981\u9664\u4ee52\u8f93\u51fa\n    return 0;\n}\n```",
        "postTime": 1637312958,
        "uid": 301244,
        "name": "________a____",
        "ccfLevel": 6,
        "title": "P1399 [NOI2013] \u5feb\u9910\u5e97 (\u9898\u89e3)"
    },
    {
        "content": "\u57fa\u73af\u6811\u7684\u9898\u5f53\u7136\u5148\u8003\u8651\u6811\u4e0a\u600e\u4e48\u641e\uff0c\u76f4\u63a5\u6c42\u4e2a\u76f4\u5f84\u5c31\u5b8c\u4e8b\u4e86\n\n\u73b0\u5728\u591a\u4e86\u4e2a\u73af\uff0c\u5148\u628a\u975e\u73af\u4e0a\u7684\u76f4\u5f84\uff08\u8bbe\u4e3a ans\uff09\u548c\u73af\u4e0a\u8282\u70b9 x \u5230\u53f6\u5b50\u7684\u6700\u5927\u8ddd\u79bb\uff08\u8bbe\u4e3a dis[x]\uff09\u6c42\u51fa\u6765\n\n\u8003\u8651\u5230\u5bf9\u4e8e\u67d0\u79cd\u6700\u4f18\u7684\u65b9\u6848\uff0c\u73af\u4e0a\u4e00\u5b9a\u6709\u67d0\u6761\u8fb9\u5b8c\u5168\u4e0d\u7528\u8d70\n\n\u6240\u4ee5\u53ef\u4ee5\u679a\u4e3e\u65ad\u54ea\u4e2a\u8fb9\u7136\u540e\u66b4\u529b\uff0c\u663e\u7136\u4f1a T \u98de\n\n\u8003\u8651\u80fd\u591f\u5feb\u901f\u6c42\u51fa\u67d0\u6761\u8fb9\u65ad\u5f00\u540e\u7ecf\u8fc7\u73af\u7684\u6700\u5927\u76f4\u5f84\n\n\u9884\u5904\u7406 A[i],B[i],C[i],D[i]\n\nA[i] \u8868\u793a\u4ece\u73af\u4e0a\u67d0\u4e2a\u56fa\u5b9a\u7684\u8d77\u70b9\u51fa\u53d1\u5230\u8fbe i \u4e4b\u524d\uff08\u5305\u62ec i\uff09 \u7684\u6700\u957f\u8def\u5f84\u957f\u5ea6\uff08\u8fd9\u91cc\u8def\u5f84\u5305\u62ec\u5230\u8fbe\u53f6\u5b50\u8282\u70b9\u7684\u8def\u5f84\uff09\n\n\u8fd9\u4e2a\u53ef\u4ee5\u901a\u8fc7\u7ef4\u62a4\u8d77\u70b9\u5230\u5f53\u524d\u8ddd\u79bb\u518d\u52a0\u4e0a\u6211\u4eec\u4e4b\u524d\u6c42\u51fa\u7684 dis \u5f97\u5230\n\nB[i] \u8868\u793a\u4ece\u73af\u4e0a\u90a3\u4e2a\u56fa\u5b9a\u7684\u8d77\u70b9\u51fa\u53d1\u5230\u8fbe i \u4e4b\u524d\uff08\u5305\u62ec i\uff09\u7684\u8282\u70b9\u4e2d\u67d0\u4e24\u4e2a\u53f6\u5b50\u8282\u70b9\u4e4b\u95f4\u7684\u6700\u957f\u8ddd\u79bb\n\n\u8fd9\u4e2a\u5373\u4e3a sum[i]\u2212sum[j]+dis[i]+dis[j]\uff0c\u5176\u4e2d sum[i] \u8868\u793a\u8d77\u70b9\u5230 i \u7684\u73af\u4e0a\u8def\u7a0b\n\n\u79fb\u9879 sum[i]+dis[i]+dis[j]\u2212sum[j] \uff0c\u52a8\u6001\u7ef4\u62a4\u5f53\u524d dis[j]\u2212sum[j] \u7684\u6700\u5927\u503c\u5373\u53ef\n\nC[i] \u8868\u793a\u4ece\u73af\u4e0a\u7ec8\u70b9\uff08\u5176\u5b9e\u5c31\u662f\u90a3\u4e2a\u56fa\u5b9a\u7684\u8d77\u70b9\u7684\u53e6\u4e00\u8fb9\u7684\u7b2c\u4e00\u4e2a\u8282\u70b9\uff09\u51fa\u53d1......\uff08\u5269\u4e0b\u7684\u548c A[i]\u8868\u793a\u7684\u662f\u4e00\u6837\u7684\uff09\n\nD[i] \u540c B[i] \uff0c\u53ea\u662f\u8d77\u70b9\u53d8\u6210\u4e86\u7ec8\u70b9\uff0c\u53cd\u8fc7\u6765\u4e86\n\n\u90a3\u4e48\u9884\u5904\u7406\u4e4b\u540e\uff0c\u679a\u4e3e\u65ad\u8fb9 i \uff08\u6ce8\u610f\u8fb9 i \u8fde\u63a5 i \u548c i+1\uff09\u90a3\u4e48 t=max(B[i],D[i+1],A[i]+C[i+1]+w)\n\n\u5176\u4e2d w \u662f\u8fde\u63a5\u8d77\u70b9\u548c\u7ec8\u70b9\u7684\u8fb9\u7684\u957f\u5ea6\uff0c\u90a3\u4e48 A[i]+C[i+1]+w \u5176\u5b9e\u5c31\u662f\u8de8\u8fc7\u8d77\u70b9\u7ec8\u70b9\u7684\u8ddd\u79bb\n\n\u6700\u540e ans=max(ans,min(t))\uff0c\u6ce8\u610f t \u53d6\u6700\u5c0f\u503c\uff0c\u56e0\u4e3a\u65ad\u8fb9\u662f\u5728\u6700\u4f18\u65b9\u6848\u4e0b\uff0c\u80af\u5b9a\u8981\u53d6\u6700\u5c0f\n\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#include<vector>\nusing namespace std;\ntypedef long long ll;\ninline int read()\n{\n    int x=0,f=1; char ch=getchar();\n    while(ch<'0'||ch>'9') { if(ch=='-') f=-1; ch=getchar(); }\n    while(ch>='0'&&ch<='9') { x=(x<<1)+(x<<3)+(ch^48); ch=getchar(); }\n    return x*f;\n}\nconst int N=2e5+7;\nconst ll INF=1e18;\nint n;\nint fir[N],from[N<<1],to[N<<1],val[N<<1],cntt;\ninline void add(int a,int b,int c) { from[++cntt]=fir[a]; fir[a]=cntt; to[cntt]=b; val[cntt]=c; }\nbool vis[N],ring[N],GG;\nvector <int> st,wt;\nvector <int> q,w;\nvoid find(int x,int fa,int ww)\n{\n    st.push_back(x); wt.push_back(ww); vis[x]=1;\n    for(int i=fir[x];i;i=from[i])\n    {\n        int &v=to[i]; if(v==fa) continue;\n        if(vis[v])\n        {\n            while(st[st.size()-1]!=v)\n            {\n                ring[st[st.size()-1]]=1;\n                q.push_back(st[st.size()-1]);\n                w.push_back(wt[wt.size()-1]);\n                st.pop_back(); wt.pop_back();\n            }\n            ring[v]=GG=1; q.push_back(v);\n            w.push_back(val[i]); return;\n        }\n        find(v,x,val[i]); if(GG) return;\n    }\n    st.pop_back(); wt.pop_back();\n}\nll dis[N],ans;\nvoid dfs(int x,int fa)\n{\n    for(int i=fir[x];i;i=from[i])\n    {\n        int &v=to[i]; if(ring[v]||v==fa) continue;\n        dfs(v,x); ans=max(ans,dis[x]+dis[v]+val[i]);\n        dis[x]=max(dis[x],dis[v]+val[i]);\n    }\n}\nll A[N],B[N],C[N],D[N];\nvoid solve()\n{\n    find(1,0,0); for(auto u: q) dfs(u,u);\n    ll sum=0,mx=0; int len=q.size();\n    A[0]=B[0]=dis[q[0]];\n    for(int i=1;i<len;i++)\n    {\n        mx=max(mx,dis[q[i-1]]-sum); sum+=w[i-1];\n        A[i]=max(A[i-1],sum+dis[q[i]]);\n        B[i]=max(B[i-1],mx+sum+dis[q[i]]);\n    }\n    sum=mx=0; C[len-1]=D[len-1]=dis[q[len-1]];\n    for(int i=len-2;i>=0;i--)\n    {\n        mx=max(mx,dis[q[i+1]]-sum); sum+=w[i];\n        C[i]=max(C[i+1],sum+dis[q[i]]);\n        D[i]=max(D[i+1],mx+sum+dis[q[i]]);\n    }\n    ll res=B[len-1];\n    for(int i=0;i<len-1;i++)\n    {\n        ll t=max(max(B[i],D[i+1]), A[i]+C[i+1]+w[len-1] );\n        res=min(res,t);\n    }\n    ans=max(ans,res);\n    printf(\"%lld\",ans>>1);\n    ans&1 ? printf(\".5\\n\") : printf(\".0\\n\");\n}\nint main()\n{\n    n=read(); int a,b,c;\n    for(int i=1;i<=n;i++)\n    {\n        a=read(),b=read(),c=read();\n        add(a,b,c); add(b,a,c);\n    }\n    solve();\n    return 0;\n}\n```\n",
        "postTime": 1604500770,
        "uid": 324858,
        "name": "\u26a1114514_zzm\u26a1",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1399 \u3010[NOI2013]\u5feb\u9910\u5e97\u3011"
    },
    {
        "content": "\u524d\u8a00\uff1a\u611f\u8c22\u7ba1\u7406\u5458\u5927\u5927\u767e\u5fd9\u4e2d\u5ba1\u6838\u9898\u89e3 QAQ \u3002\n### \u6765\u53d1\u6570\u636e\u7ed3\u6784\u7684\u9898\u89e3\n\u9996\u5148\u8981\u77e5\u9053\u5feb\u9910\u5e97\u7684\u9009\u5740\u4e00\u5b9a\u662f\u5728\u8fd9\u4e2a\u57fa\u73af\u6811\u7684**\u76f4\u5f84**\u4e0a\uff08\u5c31\u662f\u6700\u957f\u7684\u4e00\u6761\u94fe\uff09\u4e14\u5728\u5176\u4e2d\u95f4\u4f4d\u7f6e\uff0c\u90a3\u7b54\u6848\u5c31\u8f6c\u6362\u4e3a\u5982\u4f55\u6c42\u76f4\u5f84\u957f\u5ea6\u3002\n\n\u76f4\u5f84\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n### 1. \u4e0d\u7ecf\u8fc7\u73af\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 tarjan \u6c42\u51fa\u73af\u4e0a\u7684\u70b9\uff0c\u7136\u540e\u7528 DP \u6c42\u51fa\u4ee5\u73af\u5185\u6bcf\u4e2a\u70b9\u4e3a\u6839\u5b50\u6811\u7684\u6700\u5927\u76f4\u5f84\uff08\u6ce8\u610f\u4e0d\u8981\u7ecf\u8fc7\u73af\uff09\u3002\n\n### 2. \u7ecf\u8fc7\u73af \n\n\u5148\u8003\u8651\u65ad\u73af\uff08\u5f88\u5957\u8def\uff09\uff0c\u679a\u4e3e\u65ad\u6389\u54ea\u6761\u8fb9\uff0c\u65ad\u73af\u4e4b\u540e\u5c31\u53d8\u6210\u6c42\u4e00\u9897\u6811\u7684\u76f4\u5f84\u4e86\u3002\n\n\u73af\u4e0a\u4e24\u4e2a\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u8fd8\u8981\u8003\u8651\u9006\u65f6\u9488\u8fd8\u662f\u987a\u65f6\u9488\u592a\u9ebb\u70e6\uff0c\u5c06\u65ad\u7684\u73af\u5f62\u6210\u7684\u94fe\u76f4\u63a5\u590d\u5236\u4e00\u4efd\u5c31\u53ef\u4ee5\u5f88\u597d\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u5047\u8bbe\u73af\u957f\u5ea6\u4e3a $n$ \uff0c\u90a3\u65ad\u6389\u4e00\u6761\u8fb9\u5c31\u7b49\u540c\u4e8e\u5728 $2n$ \u7684\u5e8f\u5217\u4e2d\u9009\u51fa\u4e00\u6bb5\u957f\u5ea6\u4e3a $n$ \u8fde\u7eed\u7684\u533a\u95f4\u3002 \u7136\u540e\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u5728\u533a\u95f4\u4e2d\u9009\u51fa\u4e00\u4e2a**\u70b9\u5bf9**\uff0c\u82e5\u76f4\u5f84\u7ecf\u8fc7\u4e24\u70b9\u5219\u5176\u5927\u5c0f\u4e3a\uff1a\n$$ dp_i+dp_j+dis_{i,j}$$\n\uff08\u5176\u4e2d $dp_i$ \u4e3a\u60c5\u51b5 $1$ \u5f97\u5230\u7684\u8be5\u70b9\u53ef\u4ee5\u5ef6\u4f38\u51fa\u53bb\u7684\u6700\u957f\u94fe\uff09\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/wrgs1oz3.png)\n\n\u8fd9\u6837\u95ee\u9898\u5c31\u7b80\u4fbf\u591a\u4e86\uff0c\u4f46\u662f\u590d\u6742\u5ea6\u8fd8\u662f\u5f88\u9ad8\uff0c\u5982\u4f55\u4f18\u5316\u5462\uff1f\n\n\u6ce8\u610f\u5230 $dis_{i,j}$ \u53ef\u4ee5\u7528\u524d\u7f00\u548c\u8868\u793a\uff0c\u5373\uff1a\n$$ dis_{i,j} \\gets sum_j-sum_i $$\n\u7136\u540e \u76f4\u5f84 $(i,j)$ \u53d8\u4e3a\uff1a\n$$ dp_i+dp_j+sum_j-sum_i$$\n\u5bf9\u4e8e\u6bcf\u4e2a\u73af\u4e0a\u70b9\u8bbe\uff1a\n$$ A_i \\gets dp_i+sum_i $$\n$$ B_i \\gets dp_i-sum_i $$\n\n\u8fd9\u6837\u95ee\u9898\u53d8\u4e3a\u5e8f\u5217\u4e2d\u9009\u4e00\u6bb5\u533a\u95f4\u627e\u5230\u4e24\u4e2a\u6570\u4f7f\u5f97\u5176 $A_i+B_i$ \u6700\u5927\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5427\uff01\uff01\uff01\n\n\u4e0d\u5bf9\uff0c\u5982\u679c\u6700\u5927\u7684 $A_i$ \u8fd8\u6709 $B_i$ \uff0c\u662f\u540c\u4e00\u4e2a\u70b9\u5462\uff1f\u90a3\u5c31\u591a\u7ef4\u62a4\u4e2a\u6700\u5927\u503c\u4f4d\u7f6e\u548c\u6b21\u5927\u503c\u5457\uff0c\u4e5f\u5c31\u591a\u6253~~\u4e00\u70b9\u70b9~~\u4ee3\u7801\u7136\u540e\u591a\u5e26\u4e2a $\\log$ \u5427\u3002\n\n#### code\uff08\u4e0d\u8981\u8bd5\u56fe\u590d\u5236\u54e6 qaq \uff09\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nconst int N=4e5+100;\nconst int inf=1e17\uff1b\nint n;\nint head[N],to[N],ne[N],w[N],tot;\nvoid add(int x,int y,int z){\n\tne[++tot]=head[x];\n\tto[tot]=y,w[tot]=z;\n\thead[x]=tot;\n}\nvector<int>g;\nvector<int>edge;\nint st[N],sum[N];\nbool yes,vis[N],in[N];\nvoid find_circle(int u,int fa){\n\tg.push_back(u),vis[u]=1;\n\tfor(int i=head[u];i;i=ne[i]){\n\t\tif(yes) return;\n\t\tint v=to[i];\n\t\tif(v==fa) continue;\n\t\tif(vis[v]){\n\t\t\tint o;\n\t\t\tdo{\n\t\t\t\to=g.back(),g.pop_back();\n\t\t\t\tin[o]=1;\n\t\t\t\tst[++st[0]]=o;\n\t\t\t}while(o!=v);\n\t\t\tfor(int j=2;j<=st[0];j++) sum[j]=sum[j+st[0]]=edge.back(),edge.pop_back();\n\t\t\tsum[1+st[0]]=w[i];\n\t\t\tyes=1;return;\n\t\t}\n\t\tedge.push_back(w[i]);\n\t\tfind_circle(v,u);\t\n\t\tedge.pop_back();\n\t}\n\tvis[u]=0,g.pop_back();\n}\nint dp[N],ans=0;\nvoid dfs(int u,int fa){\n\tint mx1=0,mx2=0;\n\tfor(int i=head[u];i;i=ne[i]){\n\t\tint v=to[i];\n\t\tif(v==fa or in[v]) continue;\n\t\tdfs(v,u);\n\t\tif(dp[v]+w[i]>mx1) mx2=mx1,mx1=dp[v]+w[i];\t\n\t\telse mx2=max(mx2,dp[v]+w[i]);\n\t}\n\tdp[u]=mx1,ans=max(ans,mx1+mx2);\n}\nvoid work1(){\n\tfor(int k=1;k<=st[0];k++){\n\t\tint u=st[k];\n\t\tdfs(u,0);\n\t}\n}\nint a[N],b[N];\n#define lson o<<1\n#define rson o<<1|1\nstruct tree{\n\tint l,r,mxa1,mxa2,mxb1,mxb2;//A,B\u7684\u6700\u5927\u8fd8\u6709\u6b21\u5927\u503c\n\tint posa,posb;//A,B\u6700\u5927\u503c\u7684\u4f4d\u7f6e\n}t[N];\nvoid pushup(int o){\n\tif(t[lson].mxa1>t[rson].mxa1) t[o].mxa2=max(t[lson].mxa2,t[rson].mxa1),t[o].mxa1=t[lson].mxa1,t[o].posa=t[lson].posa;\n\telse t[o].mxa2=max(t[rson].mxa2,t[lson].mxa1),t[o].mxa1=t[rson].mxa1,t[o].posa=t[rson].posa;\n\tif(t[lson].mxb1>t[rson].mxb1) t[o].mxb2=max(t[lson].mxb2,t[rson].mxb1),t[o].mxb1=t[lson].mxb1,t[o].posb=t[lson].posb;\n\telse t[o].mxb2=max(t[rson].mxb2,t[lson].mxb1),t[o].mxb1=t[rson].mxb1,t[o].posb=t[rson].posb;\n}\nvoid build(int o,int l,int r){\n\tt[o].l=l,t[o].r=r;\n\tif(l==r){\n\t\tt[o].mxa1=t[o].mxa2=a[l];\n\t\tt[o].mxb1=t[o].mxb2=b[l];\n\t\tt[o].posa=t[o].posb=l;\n\t\treturn;\t\n\t}\n\tint mid=(l+r)>>1;\n\tbuild(lson,l,mid),build(rson,mid+1,r);\n\tpushup(o);\n}\nint mxa1,mxa2,mxb1,mxb2,posa,posb;\nvoid query(int o,int l,int r){\n\tif(t[o].l==l and t[o].r==r){\n\t\tif(t[o].mxa1>mxa1) mxa2=mxa1,mxa1=t[o].mxa1,posa=t[o].posa;\n\t\telse mxa2=max(mxa2,t[o].mxa1);\n\t\tif(t[o].mxb1>mxb1) mxb2=mxb1,mxb1=t[o].mxb1,posb=t[o].posb; \n\t\telse mxb2=max(mxb2,t[o].mxb1);\n\t\treturn;\n\t}\n\tint mid=(t[o].l+t[o].r)>>1\uff1b\n\tif(r<=mid) return query(lson,l,r);\n\telse if(l>mid) return query(rson,l,r);\n\telse return query(lson,l,mid),query(rson,mid+1,r);\n}\nvoid work2(){\n\tint res=inf\uff1b\n\tfor(int i=1;i<=2*st[0];i++) sum[i]+=sum[i-1],a[i]=dp[st[i>st[0]?i-st[0]:i]]-sum[i],b[i]=dp[st[i>st[0]?i-st[0]:i]]+sum[i];\n\tbuild(1,1,2*st[0]);\n\tfor(int i=st[0];i<2*st[0];i++){\n\t\tmxa1=-inf,mxa2=-inf,mxb1=-inf,mxb2=-inf,posa,posb;\n\t\tint l=i-st[0]+1,r=i;\n\t\tquery(1,l,r);\n\t\tif(posa!=posb) res=min(res,mxa1+mxb1);\n\t\telse res=min(res,max(mxa1+mxb2,mxa2+mxb1)); //\u6ce8\u610f\u60c5\u51b5\u8981\u8003\u8651\u5168\n\t}\n\tans=max(ans,res);\n}\nsigned main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tint x,y,z;scanf(\"%lld%lld%lld\",&x,&y,&z);\n\t\tadd(x,y,z),add(y,x,z);\n\t}\n\tfind_circle(1,0);\n\twork1(),work2();\n\tdouble ANS=(double)(ans)/2;\n\tprintf(\"%.1lf\",ANS);\n}",
        "postTime": 1679110117,
        "uid": 556740,
        "name": "hzx2020",
        "ccfLevel": 6,
        "title": "P1399 [NOI2013] \u5feb\u9910\u5e97"
    }
]