[
    {
        "content": "\u8d39\u7528\u6d41\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u7403\u961f\u8bbe\u70b9$A_i$\uff0c\u6bcf\u573a\u672a\u786e\u5b9a\u7684\u6bd4\u8d5b\u8bbe$B_i$\uff0c\u90a3\u4e48\u6709\u4e00\u4e2a\u6bd4\u8f83\u663e\u7136\u7684\u6846\u67b6\uff1a\n\n- \u5bf9\u4e8e\u6bcf\u4e2a\u70b9$A_i$\uff0c$A_i$\u5230$t$\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a\u5269\u4e0b\u7684\u573a\u6b21\u4e2d$i$\u6700\u591a\u53ef\u4ee5\u8d62\u7684\u6b21\u6570\uff0c\u8fd9\u4e2a\u6b21\u6570\u8bbe\u4e3a$mx_i$\u3002\n- \u5bf9\u4e8e\u6bcf\u4e2a\u70b9$B_i$\uff0c\u8fde\u8fb9$(s,B_i),(B_i,x),(B_i,y)$\uff0c\u5176\u4e2d$x,y$\u8868\u793a\u8fd9\u573a\u6bd4\u8d5b\u7684\u53cc\u65b9\uff0c\u5bb9\u91cf\u90fd\u4e3a$1$\u3002\n\n\u5f88\u663e\u7136\u53ef\u4ee5\u77e5\u9053\u8fd9\u4e2a\u56fe\u7684\u6bcf\u4e00\u79cd\u6700\u5927\u6d41\u4ee3\u8868\u4e00\u79cd\u65b9\u6848\uff0c\u73b0\u5728\u6211\u4eec\u7684\u76ee\u7684\u5c31\u662f\u8981\u7ed9\u8fd9\u4e2a\u56fe\u7684\u8fb9\u52a0\u6743\uff0c\u4f7f\u5f97\u8d39\u7528\u6700\u5c0f\u3002\n\n\u8003\u8651\u4e00\u573a\u6bd4\u8d5b\u90fd\u6ca1\u8fdb\u884c\u7684\u65f6\u5019\uff08\u9898\u76ee\u7ed9\u51fa\u7684\u7ed3\u679c\u4e0d\u7b97\uff09\uff0c\u5047\u8bbe\u6bcf\u652f\u7403\u961f\u6bcf\u573a\u90fd\u8f93\u4e86\uff0c\u90a3\u4e48\u5f53\u524d\u6709\u4e00\u4e2a\u603b\u4ee3\u4ef7\uff0c\u7136\u540e\u6bd4\u4e86\u4e00\u573a\u6bd4\u8d5b\uff0c\u90a3\u4e48\u5fc5\u7136\u5c31\u6709\u4e00\u652f\u7403\u961f\u8f93\u573a$-1$\uff0c\u80dc\u573a$+1$\uff0c\u8bbe\u539f\u6765\u8d62\u4e86$a$\u573a\uff0c\u8f93\u4e86$b$\u573a\uff0c\u90a3\u4e48\u65b0\u589e\u7684\u4ee3\u4ef7\u5c31\u662f\uff1a\n$$c_i(a+1)^2+d_i(b-1)^2-c_ia^2-d_ib^2$$\n$$=c_i+d_i+2c_ia-2d_ib$$\n\u6ce8\u610f\u5230\u968f\u7740\u80dc\u573a\u7684\u589e\u591a\uff0c\u8d25\u573a\u7684\u51cf\u5c0f\uff0c\u8fd9\u4e2a\u5f0f\u5b50\u662f\u5355\u8c03\u9012\u589e\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u62c6\u8fb9\u7684\u601d\u60f3\u5efa\u56fe\u3002\n\n\u90a3\u4e48\u5efa\u56fe\u4fee\u6539\u4e3a\uff1a\n\n- \u5bf9\u4e8e\u6bcf\u4e2a\u70b9$A_i$\uff0c\u5411$t$\u8fde$mx_i$\u6761\u8fb9\uff0c\u5bb9\u91cf\u4e3a$1$\uff0c\u8d39\u7528\u4f9d\u6b21\u9012\u589e\uff0c\u4e5f\u5c31\u662f\u4e0a\u9762\u90a3\u4e2a\u5f0f\u5b50\u3002\n- \u5176\u4ed6\u7684\u8fb9\u8d39\u7528\u5747\u4e3a$0$\u3002\n\n\u7136\u540e\u8dd1\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\uff0c\u52a0\u4e0a\u5df2\u7ecf\u786e\u5b9a\u7684\u82b1\u8d39\uff0c\u5c31\u662f\u603b\u4ee3\u4ef7\u4e86\u3002\n\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\n \nvoid read(int &x) {\n    x=0;int f=1;char ch=getchar();\n    for(;!isdigit(ch);ch=getchar()) if(ch=='-') f=-f;\n    for(;isdigit(ch);ch=getchar()) x=x*10+ch-'0';x*=f;\n}\n \nvoid print(int x) {\n    if(x<0) putchar('-'),x=-x;\n    if(!x) return ;print(x/10),putchar(x%10+48);\n}\nvoid write(int x) {if(!x) putchar('0');else print(x);putchar('\\n');}\n\n#define sqr(x) ((x)*(x))\n\nconst int maxn = 1e5+10;\nconst int inf = 1e9;\n\nint n,m,s,t,tot=1,cost;\nint head[maxn],vis[maxn],dis[maxn],a[maxn],b[maxn],C[maxn],D[maxn],l[maxn],fr[maxn],pre[maxn];\nstruct edge{int to,nxt,w,c;}e[maxn<<1];\n\nvoid add(int u,int v,int w,int c) {e[++tot]=(edge){v,head[u],w,c},head[u]=tot;}\nvoid ins(int u,int v,int w,int c) {add(u,v,w,c),add(v,u,0,-c);}\n\nint bfs() {\n    memset(dis,63,4*(t+1));\n    memset(vis,0,4*(t+1));\n    queue<int > q;q.push(s);dis[s]=0,vis[s]=1;\n    while(!q.empty()) {\n        int now=q.front();q.pop(),vis[now]=0;\n        for(int i=head[now];i;i=e[i].nxt)\n            if(e[i].w>0&&dis[e[i].to]>dis[now]+e[i].c) {\n                dis[e[i].to]=dis[now]+e[i].c;\n                if(!vis[e[i].to]) vis[e[i].to]=1,q.push(e[i].to);\n            }\n    }return dis[t]<inf;\n}\n \nint dfs(int x,int f) {\n    vis[x]=1;\n    if(x==t) return cost+=f*dis[t],f;\n    int used=0;\n    for(int i=head[x];i;i=e[i].nxt)\n        if((e[i].to==t||!vis[e[i].to])&&e[i].w>0&&dis[e[i].to]==dis[x]+e[i].c) {\n            int d=dfs(e[i].to,min(f-used,e[i].w));\n            if(d>0) e[i].w-=d,e[i^1].w+=d,used+=d;\n            if(used==f) break;\n        }return used;\n}\n \nint mcmf() {\n    cost=0;while(bfs()) dfs(s,inf);return cost;\n}\n\t\t\nint main() {\n\tread(n),read(m);s=n+m+1,t=s+1;\n\tfor(int i=1;i<=n;i++) read(a[i]),read(b[i]),read(C[i]),read(D[i]);\n\tfor(int i=1,x,y;i<=m;i++) {\n\t\tread(x),read(y),l[x]++,l[y]++;b[x]++,b[y]++;\n\t\tins(s,i+n,1,0),ins(i+n,x,1,0),ins(i+n,y,1,0);\n\t}\n\tint ans=0;\n\tfor(int i=1;i<=n;i++) ans+=C[i]*sqr(a[i])+D[i]*sqr(b[i]);\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=l[i];j++) ins(i,t,1,C[i]+D[i]+2*C[i]*a[i]-2*D[i]*b[i]),a[i]++,b[i]--;\n\twrite(ans+mcmf());\n\treturn 0;\n}\n\n```",
        "postTime": 1551694018,
        "uid": 50777,
        "name": "Hyscere",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4307 \u3010[JSOI2009]\u7403\u961f\u6536\u76ca / \u7403\u961f\u9884\u7b97\u3011"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/zzy2005/p/10299119.html)\n\n##\u9898\u89e3\n\n\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\n\n\u5148\u5047\u8bbe\u5269\u4e0b$m$\u573a\u6bd4\u8d5b\uff0c\u53cc\u65b9\u5168\u8f93\u3002\n\u8003\u8651$i$\u8d62\u4e00\u5c40\u7684\u8d21\u732e\n$C_i*(a_i+1)^2+D_i*(b_i-1)^2-C_i*a_i^2-D_i*b_i^2$\n$=C _i+2*a_i*C_i+D_i-2*b_i*D_i$\n\n\u5efa$m$\u4e2a\u70b9\u9650\u5236\u6bcf\u573a\u6bd4\u8d5b\u53ea\u6709\u4e00\u4e2a\u4eba\u8d62\uff0c\u81ea$S$\u8fde\u4e00\u6761$(1, 0)$\u7684\u8fb9\n\n\u7136\u540e\u4ece\u8fd9$m$\u7684\u70b9\u8fde\u5411\u548c\u6bd4\u8d5b\u6709\u5173\u7684\u4e24\u4e2a\u70b9\u4e00\u6761$(1, 0)$\u7684\u8fb9\n\n\n\u8003\u8651\u5173\u4e8e$t$\u7684\u8fb9\n\n\u56e0\u4e3a$a_i$\u548c$b_i$\u4f1a\u53d8\uff0c\u4e0d\u80fd\u76f4\u63a5\u8fde\u4e00\u6761\u8fb9\n\n\u7136\u540e\u6211\u4eec\u89c2\u5bdf\u4e00\u4e0b\u4e0a\u9762\u90a3\u4e2a\u5f0f\u5b50\uff0c\n\u663e\u7136\uff0c\u8d62\u5f97\u66f4\u591a\uff0c\u8d21\u732e\u5c31\u589e\u957f\u8d8a\u5927\n\n\u90a3\u4e48\uff0c\u62c6\u8fb9\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u8fde\u5411$t$\u5f88\u591a\u6761\u8fb9\uff0c\u5bb9\u91cf\u4e3a$1$\uff0c\u4ef7\u503c\u662f\u8d62\u4e86\u5bf9\u5e94\u573a\u6570\u7684\u8d21\u732e\n\n\u8d2a\u5fc3\u5730\u60f3\uff0c\u56e0\u4e3a\u8d62\u5f97\u66f4\u591a\uff0c\u8d21\u732e\u589e\u957f\u8d8a\u5927\uff0c\u8981\u6700\u5c0f\u8d39\u7528\uff0c\u6211\u4eec\u4f1a\u5148\u8d70\u8d62\u5f97\u5c11\u7684\u8fb9\n\u8fd9\u6837\u7d2f\u52a0\u7b54\u6848\u521a\u597d\u6ee1\u8db3\u6761\u4ef6\u5462\n\n##Code\n\n```cpp\n#include<bits/stdc++.h>\n\n#define LL long long\n#define RG register\n\nusing namespace std;\ntemplate<class T> inline void read(T &x) {\n\tx = 0; RG char c = getchar(); bool f = 0;\n\twhile (c != '-' && (c < '0' || c > '9')) c = getchar(); if (c == '-') c = getchar(), f = 1;\n\twhile (c >= '0' && c <= '9') x = x*10+c-48, c = getchar();\n\tx = f ? -x : x;\n\treturn ;\n}\ntemplate<class T> inline void write(T x) {\n\tif (!x) {putchar(48);return ;}\n\tif (x < 0) x = -x, putchar('-');\n\tint len = -1, z[20]; while (x > 0) z[++len] = x%10, x /= 10;\n\tfor (RG int i = len; i >= 0; i--) putchar(z[i]+48);return ;\n}\n\nconst int N = 10000, inf = 2147483647;\n\nstruct node {\n\tint to, nxt, w, v;\n}g[200*N];\nint last[N], gl = 1;\nvoid add(int x, int y, int w, int v) {\n\tg[++gl] = (node) {y, last[x], w, v};\n\tlast[x] = gl;\n\tg[++gl] = (node) {x, last[y], 0, -v};\n\tlast[y] = gl;\n}\n\nqueue<int> q;\nint pre[N], dis[N], from[N], s, t;\nbool vis[N];\n\nbool spfa() {\n\tmemset(dis, 127, sizeof(dis));\n\tdis[s] = 0;\n\tq.push(s);\n\twhile (!q.empty()) {\n\t\tint u = q.front(); q.pop();\n\t\tfor (int i = last[u]; i; i = g[i].nxt) {\n\t\t\tint v = g[i].to;\n\t\t\tif (g[i].w && dis[v] > dis[u] + g[i].v) {\n\t\t\t\tdis[v] = dis[u] + g[i].v; pre[v] = u; from[v] = i;\n\t\t\t\tif (!vis[v]) {\n\t\t\t\t\tvis[v] = 1;\n\t\t\t\t\tq.push(v);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvis[u] = 0;\n\t}\n\treturn dis[t] != dis[0];\n}\n\nint Mcmf() {\n\tint ans = 0;\n\twhile (spfa()) {\n\t\tint di = inf;\n\t\tfor (int i = t; i != s; i = pre[i]) di = min(di, g[from[i]].w);\n\t\tans += di*dis[t];\n\t\tfor (int i = t; i != s; i = pre[i]) g[from[i]].w -= di, g[from[i]^1].w += di;\n\t}\n\treturn ans;\n}\nint a[N], b[N], c[N], d[N], cnt[N];\n\nint main() {\n\tint n, m, sum = 0;\n\tread(n), read(m);\n\ts = m+n+1, t = s+1;\n\tfor (int i = 1; i <= n; i++)\n\t\tread(a[i]), read(b[i]), read(c[i]), read(d[i]);\n\tfor (int i = 1; i <= m; i++) {\n\t\tint x, y;\n\t\tread(x), read(y);\n\t\tb[x]++, b[y]++;\n\t\tcnt[x]++; cnt[y]++;\n\t\tadd(s, i, 1, 0);\n\t\tadd(i, x+m, 1, 0);\n\t\tadd(i, y+m, 1, 0);\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tsum += c[i]*a[i]*a[i] + d[i]*b[i]*b[i];\n\tfor (int i = 1; i <= n; i++) {\n\t\tfor (int j = 1; j <= cnt[i]; j++) {\n\t\t\tadd(i+m, t, 1, c[i]+2*a[i]*c[i]+d[i]-2*b[i]*d[i]);\n\t\t\tb[i]--; a[i]++;\n\t\t}\n\t}\n\tprintf(\"%d\\n\", sum+Mcmf());\n\treturn 0;\n}\n\n```\n",
        "postTime": 1548056898,
        "uid": 8952,
        "name": "M_se\u0430",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4307 \u3010[JSOI2009]\u7403\u961f\u6536\u76ca / \u7403\u961f\u9884\u7b97\u3011"
    },
    {
        "content": "## $\\text{Foreword}$\n\u4e0d\u592a\u4e00\u6837\u7684\u505a\u6cd5\uff1f  \n\u548c\u4e3b\u6d41\u505a\u6cd5\u76f8\u6bd4\uff0c\u672c\u505a\u6cd5\u4e0d\u9700\u8981\u63a8\u53d8\u5316\u91cf\u7684\u5f0f\u5b50\u5566\uff0c\u800c\u4e14**\u4e0d\u9700\u8981 $D_i\\le C_i$ \u7684\u6761\u4ef6\uff0c\u901a\u7528\u6027\u66f4\u5f3a**\u3002  \n## $\\text{Solution}$\n\u7b2c\u4e00\u773c\uff1a\u4ee3\u4ef7\u5e73\u65b9\uff1f\u5f88\u96be\u4e0d\u60f3\u5230~~\u4e8c\u5341\u5206\u949f\u524d\u521a\u505a\u5b8c\u7684~~[CF863F](https://www.luogu.com.cn/problem/CF863F)\u3002  \n\u60f3\u60f3\u90a3\u9053\u9898\u600e\u4e48\u505a\u7684\u6765\u7740\uff1f  \n\u6bcf\u4e2a\u6570\u5411\u6c47\u70b9\u8fde $n$ \u6761\u8fb9\uff0c\u4ee3\u4ef7\u5206\u522b\u4e3a $1,3,5...$\n\u539f\u7406\u4e5f\u5f88\u663e\u7136\uff0c\u8003\u8651\u5e73\u65b9\u7684\u589e\u91cf\uff0c$(k+1)^2-k^2=2k+1$\u3002  \n\n\u672c\u9898\u91c7\u7528\u7c7b\u4f3c\u7684\u601d\u8def\u3002\u6bcf\u652f\u961f\u4f0d\u5f00\u4e00\u4e2a\u80dc\u70b9\u3001\u4e00\u4e2a\u8d1f\u70b9 $win_i,los_i$ \u3002  \n\u8bbe\u7b2c $i$ \u652f\u961f\u4f0d\u53c2\u4e0e\u4e86 $num_i$ \u573a\u6bd4\u8d5b\uff0c\u90a3\u4e48\u5c31\u4ece\u80dc\u70b9\u8fde $num_i$ \u6761 $1$ \u6d41\u8fb9\uff0c\u4ee3\u4ef7\u4e3a $(2a_i+1)\\cdot c_i,(2a_i+3)\\cdot c_i,(2a_i+5)\\cdot c_i...$\uff0c\u540c\u7406\u8d1f\u70b9\u8fde\u8fb9\u8d39\u7528\u4e3a $(2b_i+1)\\cdot d_i,(2b_i+3)\\cdot d_i,(2b_i+5)\\cdot d_i...$ \u3002  \n\u7136\u540e\u6bcf\u6709\u4e00\u573a $u,v$ \u4e4b\u95f4\u7684\u6bd4\u8d5b\u5c31\u5f00\u4e24\u4e2a\u65b0\u70b9 $x,y$\uff0c\u8fde\u8fb9 $(s,x,1,0),(x,win_u,1,0),(x,win_v,1,0),(s,y,1,0),(y,los_u,1,0),(y,los_v,1,0)$\uff0c\u4ece\u800c\u9650\u5236\u4e24\u4e2a\u961f\u4f0d\u5fc5\u7136\u53ea\u6709\u4e00\u4e2a\u8d62\uff0c\u53ea\u6709\u4e00\u4e2a\u8f93\u3002  \n\n\u8fd9\u770b\u8d77\u6765\u975e\u5e38\u4e0d\u5bf9\uff0c\u56e0\u4e3a\u53ef\u80fd\u6709\u4e00\u652f\u961f\u4f0d\u53c8\u8d62\u53c8\u8f93\uff0c\u51fa\u73b0\u4e86\u975e\u6cd5\u6d41\u3002  \n\u90a3\u4e48\u6211\u4eec\u4e0d\u628a $win_i,los_i$ \u7684\u8fb9\u76f4\u63a5\u8fde\u5411\u6c47\u70b9\u4e86\uff0c\u800c\u662f\u518d\u5f00\u4e00\u4e2a\u65b0\u70b9 $id_i$\uff0c\u628a\u8fb9\u8fde\u5411\u5b83\uff0c\u5e76\u8fde\u8fb9 $(id_i,t,num_i,0)$\uff0c\u4ece\u800c\u5f3a\u5236 $i$ \u7684\u80dc\u8d1f\u5c40\u52a0\u8d77\u6765\u5fc5\u987b\u4e3a $num_i$\u3002  \n\u5728\u8fd9\u79cd\u5efa\u8fb9\u4e0b\uff0c\u5982\u679c\u67d0\u4e00\u573a $u,v$ \u7684\u6bd4\u8d5b $u$ \u53c8\u8d62\u53c8\u8f93\uff0c\u5438\u6536\u4e86\u4e8c\u7684\u6d41\u3002\u90a3\u4e48\u7531\u4e8e\u603b\u7684\u6d41\u6ca1\u6709\u4efb\u4f55\u5197\u4f59\uff0c$u$ \u5c31\u5fc5\u7136\u5728\u67d0\u4e00\u573a\u6bd4\u8d5b\u4e0a\u4f1a\u5438\u6536\u96f6\u6d41\uff0c\u4e8e\u662f\u53c8\u4ea7\u751f\u4e86\u4e00\u4e2a\u65b0\u7684\u5438\u6536\u4e8c\u6d41\u7684\u70b9\uff0c\u5b83\u4e5f\u5fc5\u987b\u5438\u6536\u4e00\u6b21\u96f6\u6d41...\u8fd9\u6837\u9012\u5f52\u4e0b\u53bb\uff0c\u53ea\u6709\u9012\u5f52\u56de\u5230\u5438\u6536\u8fc7\u4e00\u6b21\u96f6\u6d41\u7684 $v$ \u624d\u4f1a\u505c\u6b62\uff0c\u800c\u8fd9\u548c\u4e00\u5f00\u59cb $u,v$ \u4e00\u80dc\u4e00\u8d1f\u662f\u7b49\u4ef7\u7684\u3002  \n\u6240\u4ee5\u8fd9\u79cd\u8fde\u8fb9\u662f\u6b63\u786e\u7684\u3002\n\n## $\\text{Code}$\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define ull unsigned long long\n#define debug(...) fprintf(stderr,__VA_ARGS__)\n#define ok debug(\"OK\\n\")\nusing namespace std;\n\nconst int N=2e5+100;\nconst int inf=1e9;\ninline ll read(){\n  ll x(0),f(1);char c=getchar();\n  while(!isdigit(c)) {if(c=='-')f=-1;c=getchar();}\n  while(isdigit(c)) {x=(x<<1)+(x<<3)+c-'0';c=getchar();}\n  return x*f;\n}\n\nint n,m;\n\nint s,t,tot;\nstruct edge{\n  int to,nxt,cap,w;\n}p[N<<1];\nint fi[N],cur[N],cnt;\ninline void Addline(int x,int y,int c,int w){\n  p[++cnt]=(edge){y,fi[x],c,w};fi[x]=cnt;\n  return;\n}\ninline void add(int x,int y,int c,int w){\n  Addline(x,y,c,w);Addline(y,x,0,-w);\n  return;\n}\nint dis[N];\nbool vis[N];\nqueue<int>que;\nbool spfa(){\n  memset(dis,0x3f,sizeof(int)*(tot+1));\n  dis[s]=0;\n  que.push(s);vis[s]=1;\n  while(!que.empty()){\n    int now=que.front();que.pop();\n    vis[now]=0;\n    for(int i=cur[now]=fi[now];~i;i=p[i].nxt){\n      int to=p[i].to;\n      if(!p[i].cap) continue;\n      if(dis[to]>dis[now]+p[i].w){\n\tdis[to]=dis[now]+p[i].w;       \n\tif(!vis[to]){\n\t  que.push(to);vis[to]=1;\n\t}\n      }\n    }\n  }\n  return dis[t]<inf;\n}\nint flow,cost;\nint dfs(int x,int lim){\n  if(x==t||!lim){\n    cost+=lim*dis[t];\n    return lim;\n  }\n  if(vis[x]) return 0;\n  vis[x]=1;\n  int res(0);\n  for(int &i=cur[x];~i;i=p[i].nxt){\n    int to=p[i].to;\n    if(dis[to]!=dis[x]+p[i].w) continue;\n    int add=dfs(to,min(lim,p[i].cap));\n    res+=add;lim-=add;\n    p[i].cap-=add;p[i^1].cap+=add;\n    if(!lim) break;\n  }\n  if(!res) dis[x]=-1;\n  vis[x]=0;\n  return res;\n}\nvoid dinic(){\n  int tmp;\n  flow=cost=0;\n  while(spfa()){\n    while((tmp=dfs(s,inf))) flow+=tmp;\n  }\n  return;\n}\n\nint win[5050],los[5050],id[5050],num[5050];\nint a[5050],b[5050],c[5050],d[5050];\nsigned main(){\n#ifndef ONLINE_JUDGE\n  freopen(\"a.in\",\"r\",stdin);\n  freopen(\"a.out\",\"w\",stdout);\n#endif\n  memset(fi,-1,sizeof(fi));cnt=-1;\n  n=read();m=read();\n  for(int i=1;i<=n;i++){\n    a[i]=read();\n    b[i]=read();\n    c[i]=read();\n    d[i]=read();\n  }\n  for(int i=1;i<=n;i++){\n    win[i]=++tot;los[i]=++tot;id[i]=++tot;\n    cost+=c[i]*a[i]*a[i]+d[i]*b[i]*b[i];\n  }\n  s=++tot;t=++tot;\n  for(int i=1;i<=m;i++){\n    int u=read(),v=read();\n    num[u]++;num[v]++;\n    int x=++tot,y=++tot;\n    add(x,win[u],1,0);add(x,win[v],1,0);\n    add(y,los[u],1,0);add(y,los[v],1,0);\n    add(s,x,1,0);add(s,y,1,0);\n  }\n  for(int i=1;i<=n;i++){\n    add(id[i],t,num[i],0);\n    for(int j=0;j<num[i];j++){\n      add(win[i],id[i],1,(2*(a[i]+j)+1)*c[i]);\n      add(los[i],id[i],1,(2*(b[i]+j)+1)*d[i]);\n    }\n  }\n  dinic();\n  printf(\"%d\\n\",cost);\n  return 0;\n}\n/*\n*/\n \n\n```\n",
        "postTime": 1649003876,
        "uid": 449265,
        "name": "wind_whisper",
        "ccfLevel": 10,
        "title": "P4307 [JSOI2009] \u7403\u961f\u6536\u76ca / \u7403\u961f\u9884\u7b97"
    },
    {
        "content": "\u6ca1\u89c1\u8fc7\u7684 trick\uff0c\u8bb0\u5f55\u4e00\u4e0b\u3002\n\n\u8003\u8651\u95ee\u9898\u7684\u96be\u70b9\u5c31\u5728\u4e8e\u5982\u4f55\u5efa\u51fa\u8c01\u8f93\u8c01\u8d62\u7684\u5173\u7cfb\u3002\n\n\u5c06 $A$ \u7684\u80dc\u8d1f\uff0c$B$ \u5404\u770b\u6210\u4e00\u4e2a\u70b9\uff0c$B$ \u53ef\u4ee5\u88ab\u5206\u914d\u4e00\u4e2a\u5927\u5c0f\u4e3a $2$ \u7684\u6d41\u91cf\u6d41\u5411 $A$ \u4e2d\u7684\u4e00\u80dc\u4e00\u8d1f\u4e24\u4e2a\u70b9\uff0c\u4f46\u662f\u8fd9\u6837\u4f1a\u51fa\u73b0\u4e0d\u5408\u6cd5\u7684\u9009\u62e9\u60c5\u51b5\u3002\n\n\u8003\u8651\u5230\u76f4\u63a5\u66b4\u529b\u5efa\u662f\u4e00\u4e2a\u5173\u4e8e\u6d41\u91cf\u4e3a $2$ \u7684\u4e8c\u5143\u9009\u62e9\u5173\u7cfb\uff0c\u4e0d\u59a8\u5148\u5047\u8bbe\u6709\u4e00\u5143\u5168\u90e8\u9009\u6ee1\u540e\u91cd\u65b0\u5206\u914d\u9009\u62e9\u5173\u7cfb\uff0c\u4f7f\u5efa\u56fe\u53d8\u6210\u4e00\u4e2a\u6d41\u91cf\u4e3a $1$ \u7684\u4e8c\u5143\u9009\u62e9\u5173\u7cfb\u3002\n\n\u5177\u4f53\u5230\u6b64\u9898\u800c\u8a00\uff0c\u6211\u4eec\u53ef\u4ee5\u5047\u8bbe\u6bcf\u4e2a\u4eba\u5168\u90fd\u8f93\u6ee1\uff0c\u5982\u679c\u9009\u62e9\u4e00\u4e2a\u4eba\u8ba9\u4ed6\u8d62\u90a3\u4e48\u53e6\u5916\u4e00\u4e2a\u4eba\u672c\u8eab\u5c31\u5206\u914d\u7684\u8f93\u60c5\u51b5\uff0c\u53ef\u4ee5\u4e0d\u7ba1\u4ed6\uff1b\u5bf9\u4e8e\u9009\u62e9\u8ba9\u4ed6\u8d62\u7684\u90a3\u4e2a\u4eba $i$ \u5047\u8bbe\u4ed6\u4e4b\u524d\u8d62\u4e86 $x$ \u573a\u8f93\u4e86 $y$ \u573a\uff0c\u63a8\u4e00\u4e0b\u53d8\u5316\u91cf\u7684\u5f0f\u5b50\uff1a\n\n$(x + 1) ^ 2 C_i + (y - 1)^2D_i - x^2C_i-y^2D_i$\n\n\u5316\u4e00\u4e0b\u7b80\uff1a\n\n$=(2x+1)C_i-(2y+1)D_i$   \n\n\u968f\u7740 $x$ \u7684\u589e\u5927\uff0c$y$ \u7684\u503c\u51cf\u5c0f\uff0c\u53d8\u5316\u91cf\u7684\u503c\u4e0d\u65ad\u589e\u5927\u3002\n\n\u5219\u6211\u4eec\u76f4\u63a5\u5c06\u6bcf\u79cd\u60c5\u51b5\u5f53\u6210\u4e00\u79cd\u8fb9\u5efa\u51fa\u6765\uff0c\u663e\u7136\u7f51\u7edc\u6d41\u4f1a\u4f18\u5148\u589e\u5e7f\u524d\u9762\u7684\u8fb9\uff0c\u4ece\u800c\u7b26\u5408\u9898\u610f\u3002\n\n```cpp\n/*\nD,C <= 10\n\u8be1\u5f02\u7684\u6027\u8d28\u3002\n\u5148\u8003\u8651\u5982\u4f55\u8868\u793a\u589e\u91cf\uff0c\u53ef\u4ee5\u5bf9\u6bcf\u4e2a\u70b9\u5efa\u4e00\u4e2a\u8f93\u70b9\u4e00\u4e2a\u8d62\u70b9 \n\u4e00\u79cd\u6bd4\u8f83\u66b4\u529b\u7684\u6784\u9020\u662f\u76f4\u63a5\u653e\u6bcf\u4e2a\u961f\u8d62\u591a\u5c11\u6b21\n\u8981\u4fdd\u8bc1\u4e00\u6761\u8fb9\u5148\u4e8e\u4e00\u6761\u8fb9\u6d41\uff1f\u53ef\u4ee5\u5f3a\u884c\u8ba9\u8d39\u7528\u52a0\u4e00\u4e2a midInf\uff0c\u4f46\u662f\u597d\u50cf\u6ca1\u6709\u4ec0\u4e48 p \u7528\u2026\u2026\n\u554a\u554a\u554a\u554a\u6211\u65e0\u4e86\n\u6765\u80e1\u4e00\u4e2a\uff0c\u51b2\n\u600e\u4e48\u8868\u793a\u4e00\u4e2a\u65b9\u6848\u7684\u9009\u62e9/yjw\n\u76f8\u5f53\u4e8e\u9009\u4e00\u8fb9\u4e0d\u80fd\u9009\u53e6\u4e00\u8fb9\u4e86 \nAfter reading some tips\n\u5389\u5bb3\uff0c\u6ca1\u60f3\u5230\n\u54e6\uff0c\u8fd8\u662f\u53ef\u4ee5\u518d\u641e\u641e \n*/\n#include \"bits/stdc++.h\"\nusing namespace std;\nconst int Len = 2e4 + 5;\nconst int Inf = 1e9;\nint n,m,head[Len],cnt = 1,cur[Len],flag[Len],S,T,vis[Len],maxflow,a[Len],b[Len],bb[Len],C[Len],D[Len];\nlong long dis[Len],mincost;\nstruct Node\n{\n\tint next,to,w;\n\tlong long ww;\n}edge[Len << 3];\nvoid add(int from,int to,int w,long long ww)\n{\n\tedge[++ cnt].to = to;\n\tedge[cnt].next = head[from];\n\tedge[cnt].w = w;\n\tedge[cnt].ww = ww;\n\thead[from] = cnt;\n\tswap(from , to);\n\tedge[++ cnt].to = to;\n\tedge[cnt].next = head[from];\n\tedge[cnt].w = 0;\n\tedge[cnt].ww = -ww;\n\thead[from] = cnt;\n}\nbool SPFA()\n{\n\tqueue<int> Q;\n\tfor(int i = 1 ; i <= T ; i ++) dis[i] = Inf , flag[i] = vis[i] = 0;\n\tdis[S] = 0 , cur[S] = head[S] , vis[S] = 1;\n\tQ.push(S);\n\twhile(!Q.empty())\n\t{\n\t\tint p = Q.front();\n\t\tQ.pop();\n\t\tvis[p] = false;\n\t\tfor(int e = head[p] ; e ; e = edge[e].next)\n\t\t{\n\t\t\tint to = edge[e].to;\n\t\t\tif(edge[e].w && dis[to] > dis[p] + edge[e].ww)\n\t\t\t{\n\t\t\t\tdis[to] = dis[p] + edge[e].ww;\n\t\t\t\tcur[to] = head[to];\n\t\t\t\tif(!vis[to]) Q.push(to) , vis[to] |= 1;\n\t\t\t}\n\t\t}\n\t}\n\tif(dis[T] == Inf) return 0;\n\treturn 1;\n}\nint dfs(int u,int In)\n{\n\tif(u == T) return In;\n\tint Out = 0;\n\tflag[u] = 1;\n\tfor(int e = cur[u] ; e && In > 0 ; e = edge[e].next)\n\t{\n\t\tcur[u] = e;\n\t\tint to = edge[e].to;\n\t\tif(!flag[to] && edge[e].w && dis[to] == dis[u] + edge[e].ww)\n\t\t{\n\t\t\tint res = dfs(to , min(In , edge[e].w));\n\t\t\tmincost += res * edge[e].ww;\n\t\t\tIn -= res;\n\t\t\tOut += res;\n\t\t\tedge[e].w -= res;\n\t\t\tedge[e ^ 1].w += res;\n\t\t}\n\t}\n\tflag[u] = 0;\n\tif(!Out) dis[u] = -1;\n\treturn Out;\n}\nint main()\n{\n\tscanf(\"%d %d\",&n,&m);\n\tS = n + m + 1 , T = S + 1;\n\tfor(int i = 1 ; i <= n ; i ++) \n\t{\n\t\tscanf(\"%d %d %d %d\",&a[i],&b[i],&C[i],&D[i]);\n\t\tbb[i] = b[i];\n\t}\n\tfor(int i = 1 ; i <= m ; i ++) \n\t{\n\t\tint s,t;scanf(\"%d %d\",&s,&t);\n\t\tb[s] ++ , b[t] ++;\n\t\tadd(S , i , 1 , 0);\n\t\tadd(i , s + m , 1 , 0);\n\t\tadd(i , t + m , 1 , 0);\n\t}\n\tlong long ans = 0;\n\tfor(int i = 1 ; i <= n ; i ++) ans += 1ll * C[i] * a[i] * a[i] + 1ll * D[i] * b[i] * b[i];\n\tfor(int i = 1 ; i <= n ; i ++) \n\t{\n\t\tint now = a[i];\n\t\tfor(int j = b[i] ; j >= bb[i] ; j --) \n\t\t{\n\t\t\tadd(i + m , T , 1 , C[i] + D[i] + 1ll * 2 * now * C[i] - 1ll * 2 * j * D[i]);\n\t\t\tnow ++;\n\t\t}\n\t}\n\twhile(SPFA()) \n\t{\n\t\tint res = dfs(S , Inf);\n\t\tif(!res) break;\n\t\tmaxflow += res;\n\t}\n\tprintf(\"%lld\\n\",ans + mincost);\n\treturn 0;\n}\n```",
        "postTime": 1648019795,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4307 [JSOI2009]\u7403\u961f\u6536\u76ca / \u7403\u961f\u9884\u7b97"
    },
    {
        "content": "## \u8981\u6c42\u603b\u8d39\u7528\u6700\u4f4e\u8003\u8651\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u3002\n\n\u5bf9\u4e8e\u4e00\u573a\u6bd4\u8d5b\u540c\u65f6\u51b3\u7b56\u4e24\u652f\u961f\u4f0d\u8c01\u8f93\u8c01\u8d62\u4e0d\u597d\u529e\uff0c\u6211\u4eec\u5148\u5047\u8bbe\u5269\u4e0b\u7684\u6bd4\u8d5b\u6bcf\u652f\u961f\u4f0d\u90fd\u8f93\u4e86\uff0c\u8fd9\u6837\u6bcf\u6b21\u53ea\u8981\u51b3\u7b56\u8c01\u8d62\u4e86\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u6bcf\u6b21\u6bd4\u8d5b\u5c06\u6e90\u70b9\u8fde\u5411\u6bd4\u8d5b\uff0c\u6d41\u91cf\u4e3a$1$\u3001\u8d39\u7528\u4e3a$0$\uff1b\u518d\u5c06\u6bd4\u8d5b\u8fde\u5411\u4e24\u652f\u961f\u4f0d\uff0c\u6d41\u91cf\u4e3a$1$\u3001\u8d39\u7528\u4e3a$0$\u3002\n\n\u5047\u8bbe\u6bcf\u652f\u961f\u4f0d\u8fd8\u6709$k_{i}$\u573a\u6bd4\u8d5b\uff0c\u90a3\u4e48\u5c31\u5c06\u8fd9\u53ea\u961f\u4f0d\u5411\u6c47\u70b9\u8fde$k_{i}$\u6761\u8fb9\uff0c\u6d41\u91cf\u4e3a$1$\uff0c\u6bcf\u6761\u8fb9\u8d39\u7528\u4e3a\u591a\u8d62\u4e00\u6b21\u7684\u6536\u76ca\u3002\n\n\u6bcf\u652f\u961f\u4f0d\u7684\u8d77\u59cb\u6536\u76ca\u4e3a $C_{i}$\\*$x^2$+$D_{i}$\\*$y^2$, $x=win_{i}$, $y=lose_{i}+k_{i}$\uff0c\n\n\u6bcf\u591a\u8d62\u4e00\u6b21\u7684\u6536\u76ca\u4e3a$C*(x+1)^2+D*(y-1)^2-C*x^2-D*y^2=C*(2x+1)-D*(2y-1)$\uff0c\n\n\u56e0\u4e3a$D\\le C$\uff0c\u6240\u4ee5\u6bcf\u591a\u8d62\u4e00\u6b21\u7684\u6536\u76ca\u4f1a\u5355\u8c03\u9012\u589e\uff0c\u53c8\u56e0\u4e3a\u662f\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\uff0c\n\n\u6240\u4ee5\u4e00\u5b9a\u5148\u9009\u8d62\u4e00\u6b21\u7684\u8fb9\u3001\u518d\u9009\u8d62\u4e24\u6b21\u7684\u8fb9\u3001\u518d\u9009\u8d62\u4e09\u6b21\u7684\u8fb9\u2026\u2026\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=5010,maxm=6010,maxe=1e5+10,inf=0x3f3f3f3f;\nchar buf[1<<15],*fs,*ft;\ninline char getc() {\n\treturn (ft==fs&&(ft=(fs=buf)+fread(buf,1,1<<15,stdin),ft==fs))?0:*fs++;\n}\ntemplate<typename T>inline void read(T &x) {\n\tx=0;\n\tT f=1, ch=getchar();\n\twhile (!isdigit(ch) && ch^'-') ch=getchar();\n\tif (ch=='-') f=-1, ch=getchar();\n\twhile (isdigit(ch)) x=(x<<1)+(x<<3)+(ch^48), ch=getchar();\n\tx*=f;\n}\nchar Out[1<<24],*fe=Out;\ninline void flush() {\n\tfwrite(Out,1,fe-Out,stdout);\n\tfe=Out;\n}\ntemplate<typename T>inline void write(T x) {\n\tif (!x) *fe++=48;\n\tif (x<0) *fe++='-', x=-x;\n\tT num=0, ch[20];\n\twhile (x) ch[++num]=x%10+48, x/=10;\n\twhile (num) *fe++=ch[num--];\n\t*fe++='\\n';\n}\nint ver[maxe],edge[maxe],Next[maxe],cost[maxe],head[maxm],len=1;\ninline void add(int x,int y,int z,int c) {\n\tver[++len]=y,edge[len]=z,cost[len]=c,Next[len]=head[x],head[x]=len;\n\tver[++len]=x,edge[len]=0,cost[len]=-c,Next[len]=head[y],head[y]=len;\n}\nint s,t,dist[maxm];\nbool vis[maxm];\ninline bool spfa() {\n\tmemset(dist,0x3f,sizeof(dist));\n\tmemset(vis,0,sizeof(vis));\n\tqueue<int>q;\n\tq.push(s);\n\tdist[s]=0,vis[s]=1;\n\twhile (!q.empty()) {\n\t\tint x=q.front();\n\t\tq.pop();\n\t\tvis[x]=0;\n\t\tfor (int i=head[x]; i; i=Next[i]) {\n\t\t\tif (!edge[i]) continue;\n\t\t\tint y=ver[i];\n\t\t\tif (dist[y]>dist[x]+cost[i]) {\n\t\t\t\tdist[y]=dist[x]+cost[i];\n\t\t\t\tif (!vis[y]) q.push(y),vis[y]=1;\n\t\t\t}\n\t\t}\n\t}\n\tif (dist[t]==inf) return false;\n\telse return true;\n}\nint ans;\ninline int get(int x,int low) {\n\tvis[x]=1;\n\tif (x==t) return low;\n\tint tmp=low;\n\tfor (int i=head[x]; i; i=Next[i]) {\n\t\tint y=ver[i];\n\t\tif (edge[i] && dist[y]==dist[x]+cost[i] && (!vis[y] || y==t)) {\n\t\t\tint a=get(y,min(tmp,edge[i]));\n\t\t\tif (a>0) {\n\t\t\t\tans+=a*cost[i];\n\t\t\t\tedge[i]-=a;\n\t\t\t\tedge[i^1]+=a;\n\t\t\t\tif (!(tmp-=a)) break;\n\t\t\t}\n\t\t}\n\t}\n\treturn low-tmp;\n}\ninline void NetFlow() {\n\twhile (spfa()) {\n\t\tvis[t]=1;\n\t\twhile (vis[t]) {\n\t\t\tmemset(vis,0,sizeof(vis));\n\t\t\tget(s,inf);\n\t\t}\n\t}\n}\ntypedef int iarr[maxn];\niarr win,lose,c,d,In;\nint main() {\n\tint n,m;\n\tread(n); read(m);\n\ts=0,t=n+m+1;\n\tfor (int i=1; i<=n; ++i) read(win[i]),read(lose[i]),read(c[i]),read(d[i]);\n\tfor (int i=1,x,y; i<=m; ++i) add(s,i,1,0),read(x),read(y),add(i,x+m,1,0),add(i,y+m,1,0),++In[x],++In[y];\n\tfor (int i=1; i<=n; ++i) lose[i]+=In[i];\n\tfor (int i=1; i<=n; ++i) ans+=win[i]*win[i]*c[i]+lose[i]*lose[i]*d[i];//\u76f4\u63a5\u8ba1\u7b97\u521d\u59cb\u6536\u76ca\n\tfor (int i=1; i<=n; ++i) for (int j=1; j<=In[i]; ++j) add(i+m,t,1,2*c[i]*win[i]+c[i]+d[i]-2*d[i]*lose[i]),--lose[i],++win[i];\n\tNetFlow();\n\twrite(ans);\n\tflush();\n}\n```",
        "postTime": 1611751691,
        "uid": 306255,
        "name": "\u65e5\u5fa1\u8353\u7ff3",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P4307 \u3010[JSOI2009]\u7403\u961f\u6536\u76ca / \u7403\u961f\u9884\u7b97\u3011"
    },
    {
        "content": "### \u9898\u76ee\u94fe\u63a5\n\n[\u6233\u6211](https://www.luogu.org/problemnew/show/P4307)\n\n### $Solution$\n\n\u6211\u4eec\u53d1\u73b0\u8fd9\u9053\u9898\u76ee\u5e76\u4e0d\u597d\u505a\uff0c\u56e0\u4e3a\u8981\u8003\u8651\u4e24\u4e2a\u56e0\u7d20\u5bf9\u7b54\u6848\u7684\u5f71\u54cd\u3002\u4e8e\u662f\u6211\u4eec\u5047\u8bbe\u63a5\u4e0b\u6765\u7684$m$\u573a\u6bd4\u8d5b\u53cc\u65b9\u90fd\u8f93\u4e86\u3002\u8fd9\u8981\u6211\u4eec\u5c31\u53ea\u8981\u8003\u8651\u8d62\u4e00\u573a\u5bf9\u7b54\u6848\u7684\u5f71\u54cd\u4e86,\u90a3\u6bcf\u8d62\u4e00\u573a\u8f93\u7684\u6570\u91cf\u5c31\u4f1a\u51cf\u5c11$1$.\u6240\u4ee5\u6211\u4eec\u6765\u5316\u7b80\u4e00\u4e0b\u5f0f\u5b50:  \n>$$c*(x+1)^2-d*(y-1)^2-c*x^2-d*y^2=2*c*x-2*d*y+c+d$$\n$x$\u4e3a\u8d62\u7684\u6570\u91cf\uff0c$y$\u4e3a\u8f93\u7684\u6570\u91cf\n\n\u6211\u4eec\u5bf9\u4e8e\u8fd9\u4e2a\u53d1\u73b0\u4e0d\u80fd\u76f4\u63a5\u7684\u7b97\u8d21\u732e\uff0c\u4e8e\u662f\u76f4\u63a5\u62c6\u8fb9\u505a\u8d39\u7528\u6d41\u5c31\u597d\u4e86,\u6700\u540e\u7b54\u6848\u5c31\u662f\u5168\u8f93\u4e4b\u540e\u7684\u7b54\u6848\u52a0\u4e0a\u8d39\u7528\u6d41\u5373\u53ef\n\n### $Code$\n\u89c1[\u535a\u5ba2](https://www.cnblogs.com/hbxblog/p/10297286.html)",
        "postTime": 1548036680,
        "uid": 19805,
        "name": "\u64a4\u4e91",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4307 \u3010[JSOI2009]\u7403\u961f\u6536\u76ca / \u7403\u961f\u9884\u7b97\u3011"
    },
    {
        "content": "### \u8d39\u7528\u6d41\n\uff08\u601d\u8def\u5176\u5b9e\u4e5f\u662f\u501f\u9274\u7684\uff09\n\n\u601d\u8def\u5982\u4e0b\uff1a\n\n\u7531src\u5230\u6bcf\u573a\u6bd4\u8d5b\u8fde\u4e00\u6761\u8fb9\uff0c\u6d41\u91cf**1**\uff0c\u8d39\u7528**0**\uff1b\u7531\u6bcf\u573a\u6bd4\u8d5b\u5230\u6bcf\u573a\u6bd4\u8d5b\u7684\u53c2\u52a0\u65b9\u8fde\u8fb9\uff0c\u6d41\u91cf**1**\uff0c\u8d39\u7528**0**\u3002\uff08\u6d41\u91cf\u5b9e\u9645\u4e0a\u662f\u80dc\u573a\uff09\n\n\u8bbe\u4e00\u4e2a\u961f\u80dc\u573a\u4e3a**i**\uff0c\u8d1f\u573a\u4e3a**j**\uff0c\u5219\u589e\u52a0**1**\u80dc\u573a\uff0c\u51cf\u5c11**1**\u8d1f\u573a\u5bf9\u9884\u7b97\u7684\u5f71\u54cd\u4e3a\u6b63\u7684**c*(2*i+1)-d*(2*j-1)**\u3002\n\n\u5148\u8bbe\u6240\u6709\u961f\u5728\u63a5\u4e0b\u6765\u7684\u6bd4\u8d5b\u4e2d\u5168\u8d1f\uff0c\u7136\u540e\u4ece\u6bcf\u4e2a\u4eba\u8fde\u53c2\u52a0\u6b21\u6570\u6761\u8fb9\u5230**sink**\uff1a\u6d41\u91cf**1**\uff0c\u8d39\u7528**c*(2*i+1)-d*(2*j-1)** \uff0c\u7136\u540e **i+1,j-1**\u3002\n\n\u7531\u8d39\u7528\u6d41\u7684\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u4fdd\u8bc1\u6bcf\u573a\u6bd4\u8d5b\u90fd\u6709\u80dc\u8005\u4e14\u82b1\u8d39\u6700\u5c0f\u3002\u628a\u8d39\u7528\u6d41\u7684\u7ed3\u679c\u52a0\u4e0a\u6240\u6709\u961f\u5728\u63a5\u4e0b\u6765\u7684\u6bd4\u8d5b\u4e2d\u5168\u8d1f\u7684\u60c5\u51b5\u7684\u82b1\u8d39\u5373\u53ef\u3002\n\n\u8d34code\uff1a\n```cpp\n#include <iostream>\n#include <cstdlib>\n#include <cstring>\n#include <queue>\n#include <cstdio>\n#define prev Prev\nusing namespace std;\n\nconst int MAXN=20005,MAXM=1000005,INF=1<<30;\n\nint n,m,src,sink;\nstruct Edge\n{\n    int v,w,c,next,rev;\n}e[MAXM];\nint front[MAXN];\nint pree[MAXN],prev[MAXN],dis[MAXN],vis[MAXN];\nint to=0;\nvoid addEdge(int a,int b,int c,int d)\n{\n    to++;e[to].v=b;e[to].w=c;e[to].c=d;e[to].next=front[a];front[a]=to;e[to].rev=to+1;\n    to++;e[to].v=a;e[to].w=0;e[to].c=-d;e[to].next=front[b];front[b]=to;e[to].rev=to-1;\n}\nqueue<int> q;\nbool spfa()\n{\n    for(int i=1;i<=n+m+2;i++)dis[i]=INF;\n    memset(vis,0,sizeof(vis));\n    vis[src]=1;dis[src]=0;\n    q.push(src);\n    while(!q.empty())\n    {\n        int u=q.front();\n        q.pop();\n        for(int i=front[u];i;i=e[i].next)\n        {\n            if(e[i].w>0&&dis[e[i].v]>dis[u]+e[i].c)\n            {\n                dis[e[i].v]=dis[u]+e[i].c;\n                pree[e[i].v]=i;\n                prev[e[i].v]=u;\n                if(!vis[e[i].v])\n                {\n                    vis[e[i].v]=1;\n                    q.push(e[i].v);\n                }\n            }\n        }\n        vis[u]=false;\n    }\n    return dis[sink]<INF;\n}\nlong long ans1=0,ans2=0;\nvoid augment()\n{\n    int u=sink,dt=INF;\n    while(u!=src)\n    {\n    \tdt=min(dt,e[pree[u]].w);\n        u=prev[u]; \n    }\n    u=sink;\n    while(u!=src)\n    {\n        e[pree[u]].w-=dt;\n        e[e[pree[u]].rev].w+=dt;\n        u=prev[u];\n    }  \n    ans2+=dt*dis[sink];\n    ans1+=dt;\n}//\u8d39\u7528\u6d41\nint qt[MAXN],wi[MAXN],lo[MAXN],c[MAXN],d[MAXN];\nint main()\n{\n    long long ans=0;\n    cin>>n>>m;\n    src=n+m+1,sink=src+1;\n    for(int i=1;i<=n;i++)\n        cin>>wi[i]>>lo[i]>>c[i]>>d[i];\n    int tmp1,tmp2;\n    for(int i=1;i<=m;i++)\n    {\n        cin>>tmp1>>tmp2;\n        qt[tmp1]++;qt[tmp2]++;lo[tmp1]++;lo[tmp2]++;\n        addEdge(src,i+n,1,0);\n        addEdge(i+n,tmp1,1,0);\n        addEdge(i+n,tmp2,1,0);\n    }\n    for(int i=1;i<=n;i++)\n    \tans+=c[i]*wi[i]*wi[i]+d[i]*lo[i]*lo[i];\n        //\u6c42\u51fa\u6240\u6709\u961f\u5728\u63a5\u4e0b\u6765\u7684\u6bd4\u8d5b\u4e2d\u5168\u8d1f\u7684\u7ed3\u679c\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=qt[i];j++)\n        {\n            addEdge(i,sink,1,c[i]*(2*wi[i]+1)-d[i]*(2*lo[i]-1));\n            wi[i]++;lo[i]--;\n        }\n        //\u5efa\u56fe\n    while(spfa())augment();\n    ans+=ans2;\n    cout<<ans<<endl;\n    return 0;\n}\n```",
        "postTime": 1522236644,
        "uid": 52587,
        "name": "\u6226\u8266\u306f\u308b\u306a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4307 [JSOI2009]\u7403\u961f\u6536\u76ca / \u7403\u961f\u9884\u7b97"
    }
]