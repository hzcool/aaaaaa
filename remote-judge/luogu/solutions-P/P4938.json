[
    {
        "content": "\u4e0a\u4e00\u7bc7\u9898\u89e3\u8fd8\u662f\u8bb2\u5f97\u8fc7\u4e8e\u7b80\u5355\u4e86\u5427...  \n\n\u7a0d\u5fae\u8be6\u7ec6\u4e00\u70b9\u3002  \n\n\u6bcf\u4e2a\u70b9\u53ef\u4ee5\u5411\u5176\u4ed6\u70b9\u4f20\u8f93\u80fd\u91cf\uff0c\u663e\u7136\u662f\u7f51\u7edc\u6d41\u3002  \n\n\u540c\u65f6\uff0c\u4e0d\u80fd\u95f4\u63a5\u4f20\u8f93\u80fd\u91cf\uff0c  \n\n\u90a3\u4e48\u8003\u8651\u62c6\u70b9\uff0c\u5c06\u4e00\u4e2a\u70b9\u62c6\u6210\u5165\u70b9\u548c\u51fa\u70b9\uff0c\u70b9\u4e0e\u70b9\u4e4b\u95f4\u53ea\u6709\u5165\u70b9\u80fd\u5411\u51fa\u70b9\u4f20\u8f93\u80fd\u91cf\u3002  \n\n\u8fd9\u6837\u5c31\u907f\u514d\u4e86\u5df2\u7ecf\u88ab\u4f20\u8f93\u5230\u51fa\u70b9\u7684\u80fd\u91cf\u518d\u88ab\u4f20\u5230\u522b\u5904\u53bb\u3002  \n\n\u7136\u540e\u5c31\u662f\u5957\u8def\uff0c\u6e90\u70b9\u5411\u7b2c$i$\u4e2a\u5165\u70b9\u8fde$A_i$\u7684\u8fb9\uff0c\u7b2c$i$\u4e2a\u51fa\u70b9\u5411\u6c47\u70b9\u8fde$B_i$\u7684\u8fb9\uff0c\u6bcf\u4e2a\u5165\u70b9\u5411\u5bf9\u5e94\u7684\u51fa\u70b9\u8fde$\\inf$\u7684\u8fb9\u3002  \n\n\u8f93\u51fa\u65b9\u6848\u7684\u8bdd\uff0c\u53ea\u8981\u770b\u770b\u6bcf\u6761\u8fb9\u4e0a\u7684\u5269\u4f59\u5bb9\u91cf\u4e0e\u539f\u6765\u5dee\u4e86\u591a\u5c11\uff0c\u5c31\u77e5\u9053\u8d77\u70b9\u5411\u7ec8\u70b9\u4f20\u8f93\u4e86\u591a\u5c11\u80fd\u91cf\u4e86\u3002   \n\n\u4ee3\u7801\u53ef\u4ee5\u53c2\u8003  \n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\nusing std::queue;\n\nconst int N=1005,M=500005;\n\nconst int S=1003,T=1004;\n\nint n,m;\n\nint head[N],cur[N],level[N];\n\nstruct Edge\n{\n    int next,to,w,w0;\n};\nEdge E[M];\n\nvoid __add(int u,int v,int w)\n{\n    static int tot=-1;\n    E[++tot].next=head[u];\n    E[tot].to=v;\n    E[tot].w=E[tot].w0=w;\n    head[u]=tot;\n}\nvoid add(int u,int v,int w)\n{\n    __add(u,v,w);\n    __add(v,u,0);\n}\n\nbool bfs(int S,int T)\n{\n    memset(level,0x00,sizeof(level));\n    queue<int> q;\n    q.push(S);\n    level[S]=1;\n    while(!q.empty())\n    {\n        int u=q.front();\n        q.pop();\n        for(int i=head[u];~i;i=E[i].next)\n        {\n            int v=E[i].to;\n            if(E[i].w==0||level[v]!=0)continue;\n            level[v]=level[u]+1;\n            q.push(v);\n        }\n    }\n    return level[T];\n}\n\nint dfs(int u,int flow,int T)\n{\n    if(u==T||flow==0)return flow;\n    int res=0;\n    for(int i=cur[u];~i;cur[u]=i=E[i].next)\n    {\n        int v=E[i].to;\n        if(level[v]==level[u]+1&&E[i].w!=0)\n        {\n            int f=dfs(v,std::min(flow,E[i].w),T);\n            if(f!=0)\n            {\n                res+=f;\n                flow-=f;\n                E[i].w-=f;\n                E[i^1].w+=f;\n                if(flow==0)break;\n            }\n        }\n    }\n    return res;\n}\n\nint dinic(int S,int T)\n{\n    int res=0;\n    while(bfs(S,T))\n    {\n        memcpy(cur,head,sizeof(head));\n        res+=dfs(S,0x7fffffff,T);\n    }\n    return res;\n}\n\nint in_id(int x)\n{\n    return x;\n}\n\nint out_id(int x)\n{\n    return x+n;\n}\n\nint ans[N][N];\n\nint main()\n{\n    memset(head,0xff,sizeof(head));\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;++i)\n    {\n        int x;\n        scanf(\"%d\",&x);\n        add(S,in_id(i),x);\n        add(in_id(i),out_id(i),0x3fffffff);\n    }\n    int sum=0;\n    for(int i=1;i<=n;++i)\n    {\n        int x;\n        scanf(\"%d\",&x);\n        sum+=x;\n        add(out_id(i),T,x);\n    }\n    for(int i=0;i<m;++i)\n    {\n        int u,v;\n        scanf(\"%d%d\",&u,&v);\n        add(in_id(u),out_id(v),0x3fffffff);\n        add(in_id(v),out_id(u),0x3fffffff);\n    }\n    if(dinic(S,T)!=sum)\n    {\n        puts(\"NO\");\n        return 0;\n    }\n    puts(\"YES\");\n    for(int u=1;u<=n;++u)\n    {\n        for(int i=head[u];~i;i=E[i].next)\n        {\n            int v=E[i].to;\n            if(v<=n)continue;\n            if(v>n*2)continue;\n            v-=n;\n            ans[u][v]+=E[i].w0-E[i].w;\n        }\n    }\n    for(int i=1;i<=n;++i)\n    {\n        for(int j=1;j<=n;++j)\n        {\n            printf(\"%d \",ans[i][j]);\n        }\n        putchar('\\n');\n    }\n}\n```\n\n\n\n",
        "postTime": 1561555081,
        "uid": 60489,
        "name": "\u5c0f\u83dc\u9e1f",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4938 \u3010War1\u3011"
    },
    {
        "content": "\u9996\u5148\u6211\u4eec\u89c2\u5bdf\u6570\u636e\u8303\u56f4\uff0c $n \\leq 200$ ~~\u8fd9\u4e48\u5c0f\u7684\u6570\u636e\u8303\u56f4\u53c8\u662f\u7701\u9009\u7ea7\u522b\u7684\u611f\u89c9\u50cf\u7f51\u7edc\u6d41\u3002~~\n\n## \u5efa\u56fe\n\n\u521d\u6b65\u60f3\u6cd5\uff1a\u4ece\u6e90\u70b9\u50cf\u6bcf\u4e2a\u70b9\u8fde\u5bb9\u91cf\u4e3a $A_i$ \u7684\u8fb9\uff0c\u6bcf\u4e2a\u70b9\u5411\u6c47\u70b9\u8fde\u5bb9\u91cf\u4e3a $B_i$ \u7684\u8fb9\u3002\u6bcf\u6761LINK\u7684\u4e24\u4e2a\u7aef\u70b9\u8fde\u5bb9\u91cf\u4e3ainf\u7684\u53cc\u5411\u8fb9\n\n\u53d1\u73b0\u521d\u6b65\u60f3\u6cd5\u4e2d\u7684\u56fe\u65e0\u6cd5\u4fdd\u8bc1\u80fd\u91cf\u53ea\u662f\u76f4\u63a5\u4f20\u8f93\uff0c\u6240\u4ee5\u8fdb\u884c\u6539\u8fdb\uff0c\u6bcf\u4e2a\u70b9\u62c6\u6210\u4e24\u4e2a\u70b9\uff08\u5165\u70b9\u548c\u51fa\u70b9\uff09\uff0c\u6e90\u70b9\u5411\u5165\u70b9\u8fde\u5bb9\u91cf\u4e3a $A_i$ \u7684\u8fb9\uff0c\u51fa\u70b9\u5411\u6c47\u70b9\u8fde\u5bb9\u91cf\u4e3a $B_i$ \u7684\u8fb9\uff0c\u6bcf\u4e2a\u5165\u70b9\u5411\u5bf9\u5e94\u7684\u51fa\u70b9\u8fde\u5bb9\u91cf\u4e3ainf\u7684\u8fb9\u3002\u6bcf\u6761LINK\u7684\u4e24\u4e2a\u7aef\u70b9\u5bf9\u5e94\u7684\u5165\u70b9\u5206\u522b\u5411\u5bf9\u5e94\u7684\u51fa\u70b9\u8fde\u5bb9\u91cf\u4e3ainf\u7684\u8fb9\u3002\n\n\u8fd9\u4e2a\u6a21\u578b\u4e2d\uff0c\u6bcf\u4e00\u6761\u6d41\u7684\u8def\u5f84\u4ee3\u8868\u4ece\u5165\u70b9\u5411\u51fa\u70b9\u4f20\u8f93\u4e86\u6d41\u91cf\u5927\u5c0f\u7684\u80fd\u91cf\uff0c\u6bcf\u4e2a\u51fa\u70b9\u5411\u6c47\u70b9\u7684\u8fb9\u7684\u6d41\u91cf\u4ee3\u8868\u7ed3\u675f\u65f6\u8fd9\u4e2a\u70b9\u5269\u4f59\u7684\u80fd\u91cf\u3002\n\n## \u6c42\u6700\u5927\u6d41\n\u5957\u677f\u5b50\n\n## \u6c42\u4f20\u8f93\u65b9\u6848\n\u5982\u679c\u6700\u5927\u6d41\u5c0f\u4e8e $\\sum_{i=1}^n b_i$ \uff0c\u5219\u4e00\u5b9a\u6709\u4e00\u4e2a\u70b9\u7ed3\u675f\u65f6\u7684\u80fd\u91cf\u5c0f\u4e8e\u6240\u6c42 $B_i$ \u3002\u904d\u5386\u6240\u6709\u5165\u70b9\u5411\u51fa\u70b9\u8fde\u7684\u8fb9\uff0c\u8fd9\u6761\u8fb9\u7684\u6d41\u91cf\u5373\u4e3a\u6240\u6c42\u8f93\u51fa\n\n## \u6838\u5fc3\u4ee3\u7801\n```\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d\",&a[i]);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d\",&b[i]);\n\tfor(int i=1;i<=n;i++){\n\t\taddedge(s,i,a[i]);\n\t\taddedge(i+n,t,b[i]);\n\t\tsum+=b[i];\n\t\taddedge(i,i+n,inf);\n\t}\n\tfor(int i=1,x,y;i<=m;i++){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\taddedge(x,y+n,inf);\n\t\taddedge(y,x+n,inf);\n\t}\n\tint now=dinic();\n\tif(now!=sum){\n\t\tprintf(\"NO\\n\");\n\t\treturn 0;\n\t}\n\tprintf(\"YES\\n\");\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=head[i];j;j=e[j].nt){\n\t\t\tint to=e[j].to;\n\t\t\tif(to<=n) continue;\n\t\t\tif(to>n*2) continue;\n\t\t\tto-=n;\n\t\t\tans[i][to]+=e[j^1].w;\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tprintf(\"%d \",ans[i][j]);\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n} \n```",
        "postTime": 1588595267,
        "uid": 105006,
        "name": "\u8c0b\u4e8b\u5728\u4eba",
        "ccfLevel": 6,
        "title": "\u3010\u9898\u89e3\u3011P4938 War1"
    },
    {
        "content": "\u4e00\u770b\u5c31\u662f\u7f51\u7edc\u6d41\uff0c\u5b9e\u5728\u6ca1\u4ec0\u4e48\u597d\u8bb2\u7684\uff0c\u633a\u88f8\u7684\u3002\u5efa\u56fe\u540e\u770b\u4e00\u4e0b\u6700\u5927\u6d41\u662f\u5426\u80fd\u8dd1\u6ee1\u5373\u53ef\u3002\u5199\u4e00\u4e2adinic\u4f9b\u5927\u5bb6\u53c2\u8003\u3002\n```cpp\n// luogu-judger-enable-o2\n#include<iostream>\n#include<cctype>\n#include<cstdio>\n#include<queue>\n#include<cstring>\n#define N 1100\n#define M 110000\n#define inf 1e9+7\n#define ll long long\nusing namespace std;\ninline int read()\n{\n    int x=0,flag=1;\n    char ch=0;\n    while(!isdigit(ch)){ch=getchar();if(ch=='-')flag=-1;}\n    while(isdigit(ch)) {x=(x<<3)+(x<<1)+ch-'0';ch=getchar();}\n    return x*flag;\n}\nstruct edge\n{\n\tint to;\n\tint nxt;\n\tint w;\n\tint flow;\n}e[M*2];\nint num=-1,head[N];\ninline void add(int x,int y,int z)\n{\n\tnum++;\n\te[num].to=y;\n\te[num].nxt=head[x];\n\te[num].w=e[num].flow=z;\n\thead[x]=num;\n}\nint n,m,s,t,dep[N];\nqueue<int>q;\nbool bfs()\n{\n\tmemset(dep,0,sizeof(dep));\n\tdep[s]=1;q.push(s);\n\twhile(!q.empty())\n\t{\n\t\tint x=q.front();\n\t\tq.pop();\n\t\tfor(int i=head[x];i!=-1;i=e[i].nxt)\n\t\t{\n\t\t\tint to=e[i].to;\n\t\t\tif(!dep[to]&&e[i].w>0)\n\t\t\t{\n\t\t\t\tdep[to]=dep[x]+1;\n\t\t\t\tq.push(to);\n\t\t\t} \n\t\t}\n\t}\n\tif(dep[t])return true;\n\telse return false;\n}\nint dfs(int x,int flow)\n{\n\tif(x==t)return flow;\n\tfor(int i=head[x];i!=-1;i=e[i].nxt)\n\t{\n\t\tint to=e[i].to;\n\t\tif(dep[to]==dep[x]+1&&e[i].w!=0)\n\t\t{\n\t\t\tint w=dfs(to,min(flow,e[i].w));\n\t\t\tif(w>0)\n\t\t\t{\n\t\t\t    e[i].w-=w;\n\t\t\t    e[i^1].w+=w;\n\t\t\t    return w;\n\t\t    }\n\t\t}\n\t}\n\treturn 0;\n}\nint solve()\n{\n\tint w,ans=0;\n\twhile(bfs())\n\t{\n\t\tdo\n\t\t{\n\t\t\tw=dfs(s,inf);\n\t\t\tans+=w;\n\t\t}\n\t\twhile(w);\n\t}\n\treturn ans;\n}\nint ans[N][N];\nint main()\n{\n\tint x,y,i,j,tot=0,maxflow;\n\tn=read();m=read();\n\ts=2*n+10;t=2*n+11;\n\tmemset(head,-1,sizeof(head));\n\tfor(i=1;i<=n;i++)add(i,i+n,inf),add(i+n,i,0);\n\tfor(i=1;i<=n;i++)x=read(),add(s,i,x),add(i,s,0);\n\tfor(i=1;i<=n;i++)x=read(),add(i+n,t,x),add(t,i+n,0),tot+=x;\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tx=read();y=read();\n\t\tadd(x,y+n,inf);add(y+n,x,0);\n\t\tadd(y,x+n,inf);add(x+n,y,0);\n\t}\n\tmaxflow=solve();\n\tif(maxflow!=tot)\n\t{\n\t\tprintf(\"NO\");\n\t\treturn 0;\n\t}\n\tprintf(\"YES\\n\");\n\tfor(x=1;x<=n;x++)\n\t  for(int i=head[x];i;i=e[i].nxt)\n\t  {\n\t  \t  int to=e[i].to;\n\t  \t  if(!(n<to&&to<=2*n))continue;\n\t  \t  to-=n;\n\t  \t  if(x==to)continue;\n\t\t  ans[x][to]+=e[i].flow-e[i].w;\n\t  }\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tfor(j=1;j<=n;j++)\n\t\tprintf(\"%d \",ans[i][j]);\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1541491183,
        "uid": 45431,
        "name": "creed_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4938 \u3010War1\u3011"
    }
]