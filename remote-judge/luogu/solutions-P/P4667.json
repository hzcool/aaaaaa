[
    {
        "content": "\u62ff\u5230\u9898\u76ee\uff0c\u5148\u770b\u8981\u6c42\uff1aemmmm......\u5730\u56fe\uff08\u8ff7\u5bab\uff1f\uff09\uff0c\u6700\u77ed\u8def\u5f84......\u8fd9\u9898\u601d\u8def\u5c31\u6709\u4e86\uff1a**\u6ca1\u6bdb\u75c5\uff01bfs\u5c31\u5b8c\u4e86\uff01**\n\n\u5e95\u4e0b\u80af\u5b9a\u6709\u540c\u5b66\u9ad8\u5174\u574f\u4e86\uff1a\u201c\u4e0d\u5c31\u662fbfs\u561b\uff01bfs\u6211\u4f1a\uff01\u8fd9\u9898\u6211\u80af\u5b9a\u4e0d\u51fa30\u79d2\u5c31AC\u4e86\uff01\u54c8\u54c8\u54c8\u54c8\uff01\u201d\u884c\uff0c\u65e2\u7136\u4f60\u8bf4\u8fd9\u9898\u53ea\u7528bfs\u5c31\u80fdAC\uff0c\u90a3\u4f60\u8fc7\u6765\u641c\u4e00\u4e0b\u8bd5\u8bd5\uff01\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/w77pyosj.png)\n\n\u4ece\u8d77\u70b9\u5f00\u59cb\uff0c\u6cbf\u8def\u8d70\u5230A\u70b9\uff0cA\u53ef\u4ee5\u76f4\u8fbeB\u70b9\uff0c\u53c8\u53ef\u4ee5\u7ecf\u8fc7\u4e00\u6b65\u8f6c\u5411\u5230C\u3001D\u70b9\n\nB\u70b9\u51fa\u53d1\uff0c\u53ef\u4ee5\u5230E\uff08\u8f6c\u5411\uff09\u3001A\u3001F\u3001G\uff08\u76f4\u8fbe\uff09\uff1b\n\n\u7136\u540e\u518d\u4eceC\u3001D\u3001E\u51fa\u53d1.....\n\n\n\n------------\n\n**2000 years later......**\n\n\n\n------------\n\u6240\u4ee5\u8bf4\u561b\uff0c\u8fd9\u9898\u53ea\u7528bfs\u80af\u5b9a\u662f\u4e0d\u884c\u6ef4\uff0c\u4e0d\u5149\u641c\u7d22\u8def\u5f84\u8d39\u65f6\u8d39\u529b\uff0c\u6700\u540e\u8fd8\u8981\u8003\u8651\u6b65\u6570\u7684\u66f4\u65b0\uff0c\u6b63\u786e\u7b54\u6848\u9700\u8981\u641c\u7d22\u5f88\u4e45\u5f88\u4e45\u5f88\u4e45\u4e4b\u540e\u624d\u53ef\u4ee5\u641c\u51fa\u6765\uff0c\u6709\u6ca1\u6709\u4ec0\u4e48\u89e3\u51b3\u7684\u65b9\u6cd5\u5462\uff1f\uff1f\uff1f\n\n\u522b\u614c\uff0c\u6211\u4eec\u518d\u6765\u770b\u4e00\u4e0b\u9898\u76ee\uff1a\u6bcf\u6761\u7535\u7ebf\u8981\u4e48\u9700\u8981\u8f6c\u5411\uff0c\u8981\u4e48\u4e0d\u9700\u8981\u8f6c\u5411\uff0c\u5982\u679c\u4e0d\u7528\u8f6c\u5411\u5c31\u80fd\u8d70\u901a\uff0c\u90a3\u8fd8\u8f6c\u5411\u5e72\u561b\uff01**\u4e0d\u8f6c\u5411\u7684\u60c5\u51b5\uff0c\u80af\u5b9a\u662f\u6bd4\u8f6c\u5411\u8981\u597d\u7684**\n\n\u597d\u5427\uff0c\u6211\u627f\u8ba4\u4e0a\u4e00\u53e5\u662f\u53e5\u5e9f\u8bdd\uff0c\u4e0d\u8fc7\u4ece\u4e0a\u4e00\u53e5\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\uff1a**\u5982\u679c\u641c\u7d22\u7684\u65f6\u5019\u5148\u641c\u4e0d\u8f6c\u5411\u7684\uff0c\u518d\u641c\u8f6c\u5411\u7684**\uff0c\u90a3\u6b63\u786e\u7b54\u6848\u80af\u5b9a\u4f1a\u6765\u7684\u5feb\u5f88\u591a\n\n\u60f3\u5f97\u5012\u662f\u633a\u7f8e\uff0c\u4f46\u5230\u5e95\u600e\u6837\u624d\u80fd\u5b9e\u73b0\u8fd9\u4e00\u987a\u5e8f\u5462\uff1f\uff1f\uff1f\u666e\u901a\u7684\u5148\u8fdb\u5148\u51fa\u7684\u961f\u5217\u867d\u597d\uff0c\u4f46\u80af\u5b9a\u4e0d\u80fd\u73a9\u8fd9\u4e48\u795e\u5947\u7684\u64cd\u4f5c\uff0c\u4e0d\u8fc7\u54b1\u4eec\u53ef\u4ee5\u7528\u53e6\u5916\u4e00\u79cd\u201c\u5347\u7ea7\u7248\u201d\u7684\u961f\u5217\u2014\u2014**\u53cc\u7aef\u961f\u5217**\uff01\n\n\u6240\u8c13\u53cc\u7aef\u961f\u5217\uff0c\u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f**\u53ef\u4ee5\u5728\u4e24\u7aef\u540c\u65f6\u8fdb\u884c\u64cd\u4f5c\u7684\u961f\u5217**\uff0c\u6211\u4eec\u77e5\u9053\uff0c**\u666e\u901a\u7684\u961f\u5217\uff0c\u53ea\u80fd\u4ece\u961f\u5c3e\u8fdb\uff0c\u961f\u9996\u51fa**\uff0c\u800c**\u53cc\u7aef\u961f\u5217\uff0c\u5728\u961f\u9996\u548c\u961f\u5c3e\u90fd\u80fd\u8fdb\u884c\u5165\u961f\u548c\u51fa\u961f\u7684\u64cd\u4f5c**\uff0c\u60f3\u600e\u4e48\u73a9\uff0c\u5c31\u600e\u4e48\u73a9\uff01\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/2pr6ha6t.png)\n\n\u6709\u4e86\u8fd9\u53cc\u7aef\u961f\u5217\uff0c\u8fd9\u9898\u5c31\u597d\u529e\u4e86\uff1a\u5982\u679c**\u4e0d\u9700\u8981\u8f6c\u5411**\uff0c\u90a3\u5c31\u4ece**\u961f\u9996\u5165\u961f**\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5**\u5148\u641c\u5230**\uff0c**\u9700\u8981\u8f6c\u5411**\u5c31\u5728**\u961f\u5c3e\u5165\u961f**\uff0c**\u641c\u5b8c\u4e86\u4e0d\u8f6c\u5411\u7684\u624d\u4f1a\u641c\u8fd9\u4e9b**\uff0c**\u51fa\u961f\u7684\u8bdd**\u5c31\u7edf\u4e00\u4ece**\u961f\u9996**\u51fa\u53bb\u5c31\u597d\u5566\uff01\n\n\u8fd9\u4e48\u597d\u7684\u4e1c\u897f\uff0c\u5230\u5e95\u600e\u4e48\u5b9e\u73b0\u5462\uff1f\u522b\u5fd8\u4e86\u54b1\u4eecc++\u6709\u4e00\u4e2a\u795e\u5947\u7684\u767e\u5b9d\u888b\u2014\u2014**STL**\uff0c\u6211\u4eec\u4ece\u8fd9\u4e2a\u201c\u4e07\u80fd\u53e3\u888b\u201d\u91cc\u6311\u4e00\u4e2a......\u5c31\u4f60\u5566\uff0c**deque**\uff01\n\n\u81f3\u4e8e\u8fd9\u4e2adeque\uff0c\u4e5f\u4e0d\u662f\u591a\u96be\uff0c\u5982\u679c\u4f60\u4f1avector\u6216queue\u7684\u76f8\u5173\u64cd\u4f5c\uff0c\u90a3deque\u7684\u4f7f\u7528\u5bf9\u4f60\u6765\u8bf4\u5c31\u53ca\u5176\u8f7b\u677e\u6109\u5feb\u4e86\uff0c\u6765\uff0c\u8ba9\u6211\u4eec\u770b\u4e00\u4e0bdeque\u7684\u76f8\u5173\u64cd\u4f5c\uff1a\n\n|  |  |\n| :----------:  |:----------: |\n| deque <int> q |\u5b9a\u4e49\u4e00\u4e2aint\uff08\u5f53\u7136\u53ef\u4ee5\u6362\u6210\u522b\u7684\uff09\u7c7b\u578b\u7684\u540d\u4e3aq\u7684deque  |\n| q.push_front(x) |\u4eceq\u7684\u961f\u9996\u5c06x\u5165\u961f  |\n| q.push_back(x) |\u4eceq\u7684\u961f\u9996\u5c06x\u5165\u961f\uff08\u6709\u6ca1\u6709\u611f\u89c9\u8ddfvector\u8ff7\u4e4b\u76f8\u4f3c\u5462\uff09  |\n| q.pop_front() | \u5c06\u961f\u9996\u7684\u5143\u7d20\u51fa\u961f |\n| q.pop_back() | \u5c06\u961f\u9996\u7684\u5143\u7d20\u51fa\u961f\uff08vector\uff1a\uff1f\uff1f\uff1f\uff1f\uff1f\uff09 |\n| q.front() | get\u5230\u961f\u9996\u5143\u7d20\uff08\u8fd9\u56de\u8f6e\u5230queue\u611f\u53f9\u8ff7\u4e4b\u76f8\u4f3c\u4e86\uff09 |\n| q.empty()|\u5224\u65ad\u8fd9\u4e2adeque\u7a7a\u4e0d\u7a7a\uff0c\u7a7a\u8fd4\u56de1\uff0c\u4e0d\u7a7a\u8fd4\u56de0(queue...)|\n\n\n\uff08c\u515a\u548cp\u515a\u4e0d\u8981\u8d70\u5f00\uff0c\u4f60\u4eec\u867d\u7136\u6ca1\u6709STL\uff0c\u4f46\u4e5f\u53ef\u4ee5**\u624b\u5199**\u5440\uff0c\n\n\u5982\u679c\u6709**n\u4e2a\u70b9**\uff0c\u5f00\u4e00\u4e2a\u957f\u5ea6\u4e3a**2\\*n**\u7684\u6570\u7ec4\uff0c\n\n\u4e00\u5f00\u59cb\u628a**\u961f\u9996head**\u548c**\u961f\u5c3etail**\u90fd\u653e\u5728**n**\u7684\u4f4d\u7f6e\uff0c\n\n**\u961f\u9996\u5165\u961fhead--\uff0c\u961f\u5c3e\u5165\u961ftail++\uff0c\u51fa\u961fhead++\uff0c**\n\n\u4e00\u6837\u53ef\u4ee5\u8fc7\u8fd9\u4e2a\u9898\uff01\uff09\n  \n\u5230\u8fd9\u91cc\uff0c\u8fd9\u9898\u7684\u57fa\u672c\u601d\u8def\u5c31\u6709\u4e86:\u4ece\u8d77\u70b9\u5f00\u59cb\u7528\u5e7f\u641c\u65b9\u6cd5\u8d70\u5411\u7ec8\u70b9\uff0c**\u5224\u65ad\u7ecf\u8fc7\u7684\u7535\u7ebf\u8981\u8d70\u7684\u65b9\u5411\u662f\u5426\u8ddf\u539f\u56fe\u7684\u65b9\u5411\u4e00\u81f4**\uff0c\uff08\u4e0d\u4e00\u81f4\u5c31\u8981\u8f6c\u5411\u5566\uff09\uff0c**\u5982\u679c\u8981\u8f6c\u5411\uff0c\u961f\u9996\u5165\u961f\uff0c\u6b65\u6570+1\uff0c\u8981\u4e0d\u7136\u961f\u5c3e\u5165\u961f\uff0c\u6b65\u6570\u8fd8\u662f\u539f\u6765\u7684\u4e0d\u53d8**\uff08\u6bcf\u4e2a\u683c\u5b50\u7684\u6b65\u6570\u54b1\u53ef\u4ee5\u7528\u4e00\u4e2aint\u4e8c\u7ef4\u6570\u7ec4\u8bb0\u5f55\u54e6\uff01\uff09\uff0c\u548c\u666e\u901a\u7684bfs\u4e00\u6837\uff0c**\u641c\u5230deque\u4e3a\u7a7a\u4e3a\u6b62**\n  \n\u601d\u8def\u6709\u4e86\uff0c\u63a5\u4e0b\u6765\u5c31\u662f**\u7ec6\u8282\u51b3\u5b9a\u6210\u8d25**\u4e86\uff0c\u8fd9\u9898\u7ec6\u8282**\u771f\u7684\u5f88\u91cd\u8981**\uff01\n  \n## \u7ec6\u8282 1\uff1a\u683c\u5b50\u56fe?\u70b9\u56fe?\n  \n\u901a\u8fc7\u89c2\u5bdf\u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u4e2a\u9898\u76ee\u91cc\u9762\uff0c\u6211\u4eec\u662f\u770b**\u6bcf\u4e00\u4e2a\u70b9\u662f\u5426\u8054\u901a**\uff0c\u8fd8**\u7528\u683c\u5b50\u6765\u5224\u65ad\u7535\u7ebf\u7684\u4f4d\u7f6e**\uff0c\u6240\u4ee5\u8fd9\u4e2a\u9898\u6211\u4eec\u8981\u50cf[\u673a\u5668\u4eba\u642c\u91cd\u7269](https://www.luogu.com.cn/problem/P1126)\u4e00\u6837**\u628a\u683c\u5b50\u56fe\u8f6c\u5316\u6210\u70b9\u56fe**\uff0c\u4e0d\u5149\u8981\u8f6c\u5316\uff0c\u8fd8\u8981**\u5206\u522b\u5904\u7406**\uff08\u6211\u8fd9\u8fb9\u662f\u4ece0\u5f00\u59cb\u5b58\u7684\uff0c\u4e0b\u56fe\u9ec4\u8272\u6570\u5b57\u4ee3\u8868\u70b9\u5750\u6807\uff0c\u7eff\u8272\u6570\u5b57\u4ee3\u8868\u683c\u5b50\u5750\u6807\uff09\n  \n![](https://cdn.luogu.com.cn/upload/image_hosting/67kh9frj.png)\n  \n \n## \u7ec6\u8282 2\uff1a\u65b9\u5411\u6570\u7ec4\uff1f\uff1f\uff1f\n  \n\u5e7f\u641c\u561b\uff0c\u4e00\u5b9a\u8981\u6709\u4e00\u4e2a\u53eb**\u65b9\u5411\u6570\u7ec4**\u7684\u4e1c\u897f\uff0c\u4f46\u662f\u8fd9\u91cc\u7684\u7684\u65b9\u5411\u6570\u7ec4\u4e0d\u5927\u4e00\u6837\uff1a\n  \n1. \u5e73\u5e38\u6211\u4eec\u662f**\u4e0a\u4e0b\u5de6\u53f3**\u8d70\u8fc7\u53bb\uff0c\u4f46\u8fd9\u91cc\u5462\uff0c\u7535\u8def\u7684\u7535\u7ebf\u662f**\u6cbf\u659c\u7ebf\u8d70**\u7684\n2. \u524d\u9762\u8bf4\u4e86\uff0c\u8981**\u5c06\u683c\u5b50\u548c\u70b9\u5206\u522b\u5904\u7406**\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u5f04**\u4e24\u4e2a\u65b9\u5411\u6570\u7ec4**\uff0c\u4e00\u4e2a\u63a7\u5236\u683c\u5b50\uff0c\u53e6\u4e00\u4e2a\u63a7\u5236\u70b9\n3. \u56e0\u4e3a\u6211\u4eec\u8981\u5224\u65ad**\u662f\u5426\u9700\u8981\u8f6c\u5411**\uff0c\u800c\u9898\u76ee\u91cc\u7535\u7ebf\u7684\u72b6\u6001\u662f\u4ee5**\u5b57\u7b26**\u7684\u5f62\u5f0f\u7ed9\u51fa\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u8981\u641e\u4e00\u4e2a**\u5b57\u7b26\u6570\u7ec4**\uff0c\u6765\u83b7\u53d6**\u8d70\u8fd9\u4e2a\u65b9\u5411\u65f6\u7535\u7ebf\u7684\u72b6\u6001**\n  \n ![](https://cdn.luogu.com.cn/upload/image_hosting/zr8hz637.png)\n  \n\u4ece\u8fd9\u4e2a\u56fe\u5c31\u53ef\u4ee5\u770b\u51fa\u70b9\u3001\u683c\u5b50\u548c\u7535\u7ebf\u7684\u65b9\u5411\u4e86\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8fd9\u6837\u5b9a\u4e49\u65b9\u5411\u6570\u7ec4\uff1a\n \n\uff08\u7531\u4e8e'\\\\'\u662f\u8f6c\u4e49\u5b57\u7b26\uff0c\u6bd4\u5982'\\\\n'\u662f\u6362\u884c\uff0c\u5982\u679c\u8981\u7528\u5230'\\\\'\u8fd9\u4e2a\u5b57\u7b26\u7684\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u7528'\\\\\\\\'\u6765\u8868\u793a\uff09\n  \n```cpp\nconst int dx[4]={1,-1,-1,1};  //dx\u548cdy\u662f\u70b9\u7684\u65b9\u5411\u6570\u7ec4\nconst int dy[4]={1,1,-1,-1};\nconst char a[5]=\"\\\\/\\\\/\";  //\u5b57\u7b26\u6570\u7ec4\u8868\u793a\u7535\u7ebf\u5728\u5404\u4e2a\u65b9\u5411\u7684\u72b6\u6001\nconst int ix[4]={0,-1,-1,0};  //ix\u548ciy\u662f\u683c\u5b50\u7684\u65b9\u5411\u6570\u7ec4\nconst int iy[4]={0,0,-1,-1};\n```\n\n## \u7ec6\u8282 3\uff1a\u4ec0\u4e48\u65f6\u5019\u5165\u961f\uff1f\uff1f\uff1f\n  \n\u8fd9\u4e5f\u662f\u4e00\u4e2a\u5f88\u5751\u7684\u8bbe\u5b9a\uff1a\u4ec0\u4e48\u65f6\u5019\u4ece\u961f\u9996/\u961f\u5c3e\u5165\u961f\u5df2\u7ecf\u5728\u524d\u9762\u5f3a\u8c03\u4e862147483647\u904d\u4e86\uff0c\u4f46\u53ea\u6ce8\u610f\u8fd9\u4e2a\u5c31\u5b8c\u4e86\u5417\uff1f\uff1f\n  \n No\uff0c\u5982\u679c\u641c\u5230\u9876\u70b9\u5c31\u5165\u961f\uff0c\u90a3\u53ea\u4f1a\u8ba9\u4f60\u6b7b\u5faa\u73af\uff08\u4eb2\u6d4b\uff09\n  \n \u8fd9\u91cc\u76f4\u63a5\u544a\u8bc9\u5927\u5bb6\uff1a**\u53ea\u6709\u65b0\u7b97\u51fa\u6765\u7684\u6b65\u6570\u6bd4\u539f\u6765\u7684\u5c11\u7684\u65f6\u5019\uff0c\u624d\u80fd\u5165\u961f\uff01\uff01\uff01**\n  \n \u8fd8\u8981\u6ce8\u610f\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f**\u5f53\u4f60get\u5230\u961f\u9996\u9876\u70b9\u7684\u65f6\u5019\uff0c\u8981\u5148\u628a\u5b83pop\u51fa\u53bb**\uff08\u5426\u5219\u4f60\u4ece\u961f\u9996\u5165\u961f\u7684\u8bdd\uff0c\u521a\u8fdb\u53bb\u5c31\u51fa\u6765\u4e86\uff0c\u7a0b\u5e8f\u5c31\u4f1a\u53cd\u590d\u641c\u540c\u4e00\u4e2a\u70b9\uff0c\u4eb2\u6d4b\u6b7b\u5faa\u73af\uff09 \n## \u7ec6\u8282 4\uff1a\u65e0\u89e3\u7684\u60c5\u51b5\u600e\u4e48\u5224\u65ad\uff1f\n  \n\u8fd9\u4e2a\u9898\u8fd8\u6709\u4e00\u79cd\u60c5\u51b5\uff0c\u5c31\u662f\u201cNO SOLUTION\u201d\uff0c\u8fd9\u4e2a\u5177\u4f53\u6765\u8bf4\u5c31\u5f88\u597d\u529e\u4e86\uff1a\n \u505a\u8fc7[\u516b\u7687\u540e](https://www.luogu.com.cn/problem/P1219)\u7684\u5c0f\u4f19\u4f34\u4eec\u90fd\u77e5\u9053\uff1a**\u6cbf\u5bf9\u89d2\u7ebf\u8d70\u7684\u65f6\u5019\uff0c\u5750\u6807\u7684\u548c/\u5dee\u662f\u4e0d\u53d8\u7684**\uff0c\u8fd9\u91cc\u6211\u4eec\u5ef6\u4f38\u4e00\u4e0b\uff1a\u6cbf\u5bf9\u89d2\u7ebf\u8d70\u7684\u65f6\u5019\uff0c\u5750\u6807\u4e4b\u548c\u7684**\u5947\u5076\u6027**\u662f\u4e0d\u53d8\u7684\n  \n\u77e5\u9053\u4e86\u8fd9\u4e2a\u7ed3\u8bba\uff0c\u90a3\u5c31\u5f88\u597d\u529e\u4e86\uff0c\u7531\u4e8e\u8fd9\u91cc\u662f\u56fa\u5b9a\u4ece\uff080\uff0c0\uff09\u51fa\u53d1\uff0c\u6a2a\u7eb5\u5750\u6807\u548c\u662f\u5076\u6570\uff0c\u6240\u4ee5**\u53ea\u8981\u7ec8\u70b9\u7684\u6a2a\u7eb5\u5750\u6807\u548c\u662f\u5947\u6570\uff0c\u90a3\u5fc5\u5b9a NO SOLUTION**.\n  \n\u6240\u4ee5**\u6211\u4eec\u5728\u8f93\u5165\u5b8c\u7684\u65f6\u5019\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u628aNO SOLUTION \u7684\u60c5\u51b5\u5224\u65ad\u51fa\u6765\uff0c\u786e\u5b9a\u6709\u89e3\u4e4b\u540e\u518d\u641c\u7d22~**\n  \n ## \u7ec6\u8282 5\uff1a\u5176\u5b83\u4f60\u9700\u8981\u6ce8\u610f\u5230\u7684\u4e00\u5207\u7ec6\u8282\n  \n \u597d\u591a\u8981\u6ce8\u610f\u7684\u524d\u9762\u4e5f\u90fd\u8bf4\u4e86\uff0c\u50cf\u5224\u65ad\u8def\u7ebf\u8981\u5199\u4e24\u4e2a\u53cd\u659c\u6760\uff0c\u8fd8\u6709\u65b9\u5411\u6570\u7ec4\u961f\u5217\u7684\u90a3\u4e00\u5957......\n  \n \u8fd8\u6709\u4e00\u4e2a\u8981\u6ce8\u610f\u7684\uff1a\u8fd9\u4e2a\u9898\u53d8\u91cf\u90a3\u4e48\u591a\uff0c\u4e00\u5b9a\u8981\u64e6\u4eae\u773c\u775b\uff0c\u522b\u5199\u6df7\u4e86\n \n ~~\uff08\u672c\u84bb\u624d\u4e0d\u4f1a\u544a\u8bc9\u4f60\u6211\u5361\u4e86\u4e09\u5c0f\u65f6\u5c31\u662f\u56e0\u4e3a\u4e00\u4e2ay\u5199\u6210x\u4e86\u5462\uff09~~\n  \n \u5b66\u4f1a\u4e86\u65b9\u6cd5\uff0c\u6ce8\u610f\u4e86\u7ec6\u8282\uff0c\u6700\u540e\u5c31\u4e00\u5b9a\u80fdAC\u4e86\uff0c\u795d\u5c4f\u5e55\u524d\u7684\u5c0f\u53ef\u7231\u4eecAC\u8fd9\u4e2a\u9898\uff01\n  \n```cpp\n#include<iostream>\n#include<deque> //\u5934\u6587\u4ef6\u5565\u7684\u5c31\u4e0d\u7528\u6211\u8bf4\u4e86\u5427\n#include<cstring>\nusing namespace std;\nconst int dx[4]={1,-1,-1,1}; //\u65b9\u5411\u6570\u7ec4\uff0c\u522b\u641e\u9519\u4e86\nconst int dy[4]={1,1,-1,-1};\nconst char a[5]=\"\\\\/\\\\/\";\nconst int ix[4]={0,-1,-1,0};\nconst int iy[4]={0,0,-1,-1};\ndeque <int> x;  //\u53cc\u7aef\u961f\u5217\uff01\ndeque <int> y;\nchar map[505][505]; //\u5b58\u50a8\u5730\u56fe\nint vis [505][505]; //vis\u6570\u7ec4\uff0c\u8bb0\u5f55\u6700\u77ed\u6b65\u6570\nint l,c;  //l\u2014\u2014line\uff08\u884c\u6570\uff09\uff0cc\u2014\u2014column\uff08\u5217\u6570\uff09\nvoid I_love_luogu(){  //\u5e7f\u641c\u51fd\u6570\n\tmemset(vis,0x3f,sizeof(vis)); //\u56e0\u4e3a\u8981\u6c42\u6700\u5c0f\u503c\uff0c\u628avis\u6570\u7ec4\u521d\u59cb\u5316\u62100x3f\uff08\u5c31\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u6570\u5566\uff09\n\tx.push_back(0);  //\u8d77\u70b9\uff080\uff0c0\uff09\u5165\u961f\uff0c\u6b65\u6570\u662f0\n\ty.push_back(0);\n\tvis[0][0]=0; \n\twhile(!x.empty()){  //\u8fd9\u4e00\u90e8\u5206\u5c31\u662f\u628a\u5e7f\u641c\u7684\u677f\u5b50\u5566\n\t\tint xx=x.front();  //\u5148get\u5230\u961f\u9996\n\t\tint yy=y.front();\n\t\tx.pop_front();  //\u4e00\u5b9a\u8981get\u5b8c\u4e86\u4e4b\u540e\u5148pop\u51fa\u53bb\n\t\ty.pop_front();\n\t\tfor(int i=0;i<4;i++){  //4\u4e2a\u65b9\u5411\u4e00\u4e2a\u4e00\u4e2a\u8bd5\n\t\t\tint dnx=xx+dx[i]; //dnx\uff0cdxy\u2014\u2014\u70b9\u7684\u6a2a\u7eb5\u5750\u6807\n\t\t\tint dny=yy+dy[i];\n\t\t\tint inx=xx+ix[i];//inx\uff0ciny\u2014\u2014\u683c\u5b50\u7684\u6a2a\u7eb5\u5750\u6807\n\t\t\tint iny=yy+iy[i];\n\t\t\tif(dnx>=0&&dnx<=l&&dny>=0&&dny<=c){  //\u5982\u679c\u6ca1\u51fa\u754c\u7684\u8bdd\u5c31\u8003\u8651\u5165\u4e0d\u5165\u961f\n\t\t\t\tif(a[i]!=map[inx][iny]){ //\u770b\u770b\u5730\u56fe\u7684\u7535\u7ebf\u72b6\u6001\u548c\u5f80\u8fd9\u4e2a\u65b9\u5411\u8d70\u7684\u7535\u7ebf\u72b6\u6001\u662f\u5426\u4e00\u81f4\n\t\t\t\t\tint t=vis[xx][yy]+1;  //\u4e0d\u4e00\u81f4\u5c31\u8981\u8f6c\u5411\uff0c\u6b65\u6570+1\n\t\t\t\t\tif(t<vis[dnx][dny]){ //\u5982\u679c\u6bd4\u539f\u6765\u7684\u6b65\u6570\u5c0f\uff0c\u5c31\u5165\u961f\uff0c\u6807\u8bb0\n\t\t\t\t\t\tx.push_back(dnx); //\u8f6c\u5411\u80af\u5b9a\u4e0d\u5982\u4e0d\u8f6c\u5411\u597d\uff0c\u6240\u4ee5\u8981\u540e\u641c\uff0c\u4ece\u961f\u5c3e\u5165\u961f\n\t\t\t\t\t\ty.push_back(dny);\n\t\t\t\t\t\tvis[dnx][dny]=t; \t\n\t\t\t\t\t}\n\t\t\t\t}\t\n\t\t\t\telse{//\u8981\u4e0d\u5c31\u4e0d\u7528\u8f6c\u5411\n\t\t\t\t\tint t=vis[xx][yy] //\u4e0d\u7528\u8f6c\u5411\uff0c\u6b65\u6570\u4e0d\u7528\u53d8;\n\t\t\t\t\tif(t<vis[dnx][dny]){ //\u6b65\u6570\u6bd4\u539f\u6765\u7684\u5c0f\u624d\u80fd\u5165\u961f\n\t\t\t\t\t\tx.push_front(dnx); //\u4e0d\u7528\u8f6c\u5411\u80af\u5b9a\u66f4\u597d\uff0c\u8981\u5148\u641c\uff0c\u4ece\u961f\u9996\u5165\u961f\n\t\t\t\t\t\ty.push_front(dny);\n\t\t\t\t\t\tvis[dnx][dny]=t;\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\tcout<<vis[l][c]<<endl; //\u8f93\u51fa\u6700\u540e\u7684\u6b65\u6570\n}\nint main(){\n\t\tcin>>l>>c; //\u8f93\u5165\n\t\tfor(int i=0;i<l;i++)\n\t\t\tcin>>map[i];\n\t\tif((l+c)%2) //\u5982\u679c\u7ec8\u70b9\u6a2a\u7eb5\u5750\u6807\u548c\u662f\u5947\u6570\n\t\tcout<<\"NO SOLUTION\\n\";//\u90a3\u5c31\u94c1\u5b9a\u65e0\u89e3\n\t\telse I_love_luogu(); //\u4e0d\u65e0\u89e3\u90a3\u5c31\u5e7f\u641c\n\treturn 0;\t\t\n} \n```\nA\u4e86\u8fd9\u4e2a\u9898\uff0c\u76f8\u4fe1\u5c0f\u4f19\u4f34\u4eec\u5bf9\u53cc\u7aef\u961f\u5217\u7684\u8ba4\u8bc6\u548c\u5e94\u7528\u6709\u4e86\u4e00\u5b9a\u57fa\u7840\u4e86\uff0c\u4e0d\u8fc7\u8fd8\u6709\u4e2a\u95ee\u9898\uff1a**\u7a76\u7adf\u4ec0\u4e48\u65f6\u5019\u624d\u9700\u8981\u7528\u5230\u53cc\u7aef\u961f\u5217\u5462**\uff1f\uff1f\uff1f\n  \n  \u7b54\u6848\u5f88\u7b80\u5355\uff1a\u53ea\u8981**\u641c\u7d22\u7684\u4e1c\u897f\u5b58\u5728\u4e00\u4e2a\u4f18\u5148\u7ea7**\uff08\u6bd4\u5982\u8fd9\u4e2a\u9898\u91cc\u7684\u8981\u8f6c\u5411\u548c\u4e0d\u7528\u8f6c\u5411\uff09\uff0c\u90a3\u7528\u4e00\u4e2a\u53cc\u7aef\u961f\u5217\u5c31\u662f\u6700\u597d\u7684\u9009\u62e9\u5566\n  \n \u5982\u679c\u7406\u89e3\u4e86\u8fd9\u4e00\u70b9\uff0c\u518d\u7ed9\u4f60\u4eec\u63a8\u8350\u9053\u9898\uff1a[Labyrinth](https://www.luogu.com.cn/problem/CF1063B)\n  \n\u4e5f\u662f\u7528\u53cc\u7aef\u961f\u5217\u89e3\u51b3\uff0c\u597d\u597d\u601d\u8003\u5427\uff01\uff08\u8bf4\u53e5\u5b9e\u8bdd\uff0c\u8fd9\u9898\u66f4\u7b80\u5355\uff09\n  \n\u6700\u540e\uff1a\u7279\u522b\u9e23\u8c22\n  \n  Mr_yin \u8001\u5e08\uff1a\u63d0\u4f9b\u601d\u8def\n \n  vectorwyx \u5946\u4f6c\uff1a\u5e2e\u5fd9\u67e5\u9519\n  \n  \n  \n  \n> The End!",
        "postTime": 1579274062,
        "uid": 239405,
        "name": "yangrunze",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4667 \u3010[BalticOI 2011 Day1]   \u7535\u8def\u7ef4\u4fee\u3011"
    },
    {
        "content": "\u660e\u663e\u7684\u4e00\u4e2a\u641c\u7d22\u3002  \n\u5c06\u6bcf\u4e2a\u65b9\u683c\u7684\u56db\u4e2a\u70b9\u90fd\u63d0\u51fa\u6765\uff0c  \n\u82e5\u8be5\u65b9\u683c\u7684\u7535\u7ebf\u4e3a\u2018\\\u2019\uff0c\u5219\u7ed9\u5de6\u4e0a\u7684\u70b9\u548c\u53f3\u4e0b\u7684\u70b9\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a$0$\u7684\u8fb9\uff0c\u7ed9\u53f3\u4e0a\u7684\u70b9\u548c\u5de6\u4e0b\u7684\u70b9\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a$1$\u7684\u8fb9\uff1b  \n\u82e5\u4e3a\u2018/\u2019\uff0c\u5219\u7ed9\u5de6\u4e0a\u7684\u70b9\u548c\u53f3\u4e0b\u7684\u70b9\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a$1$\u7684\u8fb9\uff0c\u7ed9\u53f3\u4e0a\u7684\u70b9\u548c\u5de6\u4e0b\u7684\u70b9\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a$0$\u7684\u8fb9\u3002  \n\u5373\u5982\u4e0b\u56fe\u6240\u793a(\u56fe\u753b\u7684\u4e0d\u597d\u89c1\u8c05)\u3002\n![](https://cdn.luogu.com.cn/upload/pic/17601.png)  \n\u601d\u8def\u5f88\u660e\u786e\uff0c\u8fd9\u4e0d\u5c31\u662f\u4e2a\u6700\u77ed\u8def\u5417\uff0c\u4e0d\u8fc7\u5f88\u62b1\u6b49\u8fd9\u9898\u628a\u666e\u901a\u7684$SPFA$\u7ed9\u5361\u6389\u4e86![](https://cdn.luogu.com.cn/upload/pic/1436.png)\u3002  \n\u6240\u4ee5\u8fd9\u9898\u5e94\u7528\u5806\u4f18\u5316$DJ$\u6216\u662f$SPFA+SLF+LLL$\u4f18\u5316\u3002  \n\u4f46\u662f\uff0c\u8fd9\u9898\u5b9e\u9645\u4e0a\u662f\u53ef\u4ee5\u7528**\u53cc\u7aef\u5e7f\u641c**\u89e3\u51b3\u7684\uff0c\u800c\u4e14\u7406\u8bba\u4e0a\u5e94\u8be5\u6bd4\u4e0a\u8ff0\u4e24\u65b9\u6cd5\u8fd8\u8981\u5feb\uff01  \n\u56e0\u4e3a\u8fd9\u9898\u8fb9\u6743\u53ea\u6709$0$\u548c$1$\u4e24\u79cd\u60c5\u51b5\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u53cc\u7aef\u5e7f\u641c\u3002  \n\u5b9e\u73b0\u65b9\u6cd5\u5c31\u662f\u5728\u5e7f\u641c\u8fc7\u7a0b\u4e2d\u627e\u5230\u4e86\u4e00\u6761\u8fb9\uff0c  \n**\u82e5\u8fb9\u6743\u4e3a$1$\uff0c\u5219\u548c\u6b63\u5e38\u5e7f\u641c\u4e00\u6837\u4ece\u961f\u5c3e\u5165\u961f\uff1b\u82e5\u8fb9\u6743\u4e3a$0$\uff0c\u5219\u4ece\u961f\u9996\u5165\u961f\u3002**  \n\u5373\u5728\u5e7f\u641c\u8fc7\u7a0b\u4e2d\u4fdd\u6301\u961f\u5217\u5355\u8c03\u6027\uff0c\u4f7f\u5176\u6bcf\u6b21\u90fd\u80fd\u4f18\u5148\u904d\u5386\u8fb9\u6743\u4e3a$0$\u7684\u8fb9\u3002  \n\u4e0d\u8fc7\u6211\u53ef\u80fd\u6572\u4e86\u4e2a\u5947\u8469\u7684\u7b97\u6cd5\uff0c\u8c8c\u4f3c\u662f\u53cc\u7aef$SPFA$\uff1f\uff1f  \n\u611f\u89c9\u8dd1\u7684\u901f\u5ea6\u6bd4\u539f\u6c41\u539f\u5473\u7684\u53cc\u7aef\u5e7f\u641c\u8981\u6162\uff0c\u4f46\u53c8\u6bd4\u6700\u77ed\u8def\u7b97\u6cd5\u5feb\uff1f\uff1f  \n\u4e0d\u7ba1\u600e\u6837\u8fd8\u662f\u5148\u4e0a\u4ee3\u7801\u5427\u3002\n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int N=3e5+10;\nconst int M=3e6+10;\nint fi[N],di[M],da[M],ne[M],dis[N],nxt[M],nmb[M],n,m,l;\nbool v[N];\n//fi,di,da,ne\u4e3a\u5b58\u8fb9\u6570\u503c,dis\u8bb0\u5f55\u8ddd\u79bb,v\u8bb0\u5f55\u70b9\u6709\u65e0\u7ecf\u8fc7\n//nxt,nmb\u5219\u4e3a\u6570\u7ec4\u6a21\u62df\u94fe\u8868\n//nxt\u8bb0\u5f55\u4e0b\u4e00\u4e2a\u7a7a\u95f4(\u5373\u540e\u9a71)\uff0cnmb\u5219\u4e3a\u8fd9\u4e2a\u7a7a\u95f4\u5bf9\u5e94\u7684\u6570\u636e\n//\u56e0\u4e3a\u8981\u5b9e\u73b0\u4ece\u961f\u9996\u5165\u961f\u7684\u8bdd\u81ea\u7136\u4f7f\u7528\u94fe\u8868\u662f\u4e0d\u9519\u7684\n//\u800c\u6211\u5accSTL\u5e38\u6570\u8fc7\u5927\uff0c\u6240\u4ee5\u662f\u7528\u6570\u7ec4\u6765\u6a21\u62df\u94fe\u8868\ninline int re()//\u5feb\u8bfb\n{\n\tint x=0;\n\tchar c=getchar();\n\tfor(;c<'0'||c>'9';c=getchar());\n\tfor(;c>='0'&&c<='9';c=getchar())\n\t\tx=x*10+(c-'0');\n\treturn x;\n}\ninline int re_l()//\u8bfb\u53d6\u65b9\u683c\u6570\u636e\u5e76\u5224\u65ad\u662f'/'\u8fd8\u662f'\\'\u7684\u51fd\u6570\n{\n\tchar c=getchar();\n\tfor(;c!='\\\\'&&c!='/';c=getchar());\n\treturn c=='/'?1:0;\n}\ninline void add(int x,int y,int z)//\u52a0\u8fb9\n{\n\tdi[++l]=y;\n\tda[l]=z;\n\tne[l]=fi[x];\n\tfi[x]=l;\n\tdi[++l]=x;\n\tda[l]=z;\n\tne[l]=fi[y];\n\tfi[y]=l;\n}\ninline int ch(int x,int y)//\u7ed9\u6bcf\u4e2a\u70b9\u4e00\u4e2a\u6807\u7b7e\n{\n\treturn (x-1)*(m+1)+y;\n}\nint main()\n{\n\tint i,j,x,y,t,head,tail,s,ed;\n\tbool p=1;\n\tt=re();\n\twhile(t--)//\u591a\u7ec4\u6570\u636e\n\t{\n\t\tn=re();\n\t\tm=re();\n\t\thead=l=0;//\u521d\u59cb\u5316&\u6e05\u7a7a\u6570\u7ec4\n\t\ts=tail=1;\n\t\tp=1;\n\t\ted=ch(n+1,m+1);\n\t\tmemset(fi,0,sizeof(fi));\n\t\tmemset(v,0,sizeof(v));\n\t\tmemset(dis,50,sizeof(dis));\n\t\tmemset(nxt,0,sizeof(nxt));\n\t\tmemset(nmb,0,sizeof(nmb));\n\t\tfor(i=1;i<=n;i++)\n\t\t\tfor(j=1;j<=m;j++)//\u8f93\u5165\u65b9\u683c\u6570\u636e\n\t\t\t{\n\t\t\t\tif(re_l())//\u52a0\u8fb9\u65b9\u6cd5\u5373\u4e3a\u524d\u9762\u6240\u8ff0\n\t\t\t\t{\n\t\t\t\t\tadd(ch(i,j),ch(i+1,j+1),1);\n\t\t\t\t\tadd(ch(i+1,j),ch(i,j+1),0);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tadd(ch(i,j),ch(i+1,j+1),0);\n\t\t\t\t\tadd(ch(i+1,j),ch(i,j+1),1);\n\t\t\t\t}\n\t\t\t}\n\t\tdis[1]=0;//\u521d\u59cb\u5316\n\t\tv[1]=1;\n\t\tnxt[0]=1;\n\t\tnmb[1]=1;\n\t\twhile(p)//p\u7528\u6765\u8bb0\u5f55\u6709\u65e0\u5230\u8fbe\u7ec8\u70b9\uff0c\u6709\u5219\u76f4\u63a5\u9000\u51fa\n\t\t{\n\t\t\thead=nxt[head];//\u6bcf\u6b21\u901a\u8fc7\u540e\u9a71\u5230\u4e0b\u4e00\u4e2a\u7a7a\u95f4\n\t\t\tif(!head)//\u82e5\u6ca1\u6709\u540e\u9a71\u4e86\u5c31\u8868\u660e\u641c\u7d22\u5b8c\u6bd5\n\t\t\t\tbreak;\n\t\t\tx=nmb[head];//\u53d6\u51fa\u8be5\u7a7a\u95f4\u5bf9\u5e94\u7684\u6570\n\t\t\tfor(i=fi[x];i&&p;i=ne[i])//\u679a\u4e3e\u8fb9\n\t\t\t{\n\t\t\t\ty=di[i];\n\t\t\t\tif(!v[y]||dis[y]>dis[x]+da[i])//\u5982\u679c\u6ca1\u6709\u904d\u5386\u8fc7\u6216\u662f\u4e4b\u524d\u904d\u5386\u7684\u5e76\u4e0d\u662f\u6700\u77ed\u7684\n\t\t\t\t{\n\t\t\t\t\ts++;//\u7ed9\u94fe\u8868\u7533\u8bf7\u4e00\u4e2a\u65b0\u7a7a\u95f4\n\t\t\t\t\tif(da[i])//\u5224\u65ad\u8fb9\u6743\n\t\t\t\t\t{//\u82e5\u4e3a1\u5219\u4ece\u961f\u5c3e\u5165\u961f\n\t\t\t\t\t\tnxt[tail]=s;//\u5728\u94fe\u8868\u672b\u7aef\u7a7a\u95f4\u6253\u4e0a\u540e\u9a71\n\t\t\t\t\t\ttail=s;//\u66f4\u65b0\u672b\u7aef\n\t\t\t\t\t}\n\t\t\t\t\telse//\u82e5\u4e3a0\u5219\u4ece\u961f\u9996\u5165\u961f\n\t\t\t\t\t{\n\t\t\t\t\t\tnxt[s]=nxt[head];\n                        //\u5c06\u76ee\u524d\u904d\u5386\u7684\u7a7a\u95f4\u7684\u540e\u9a71\u8fc7\u7ee7\u7ed9\u65b0\u589e\u7a7a\u95f4\n                        //\u5373\u5c06\u539f\u672c\u961f\u5217\u7f6e\u4e8e\u65b0\u589e\u7a7a\u95f4\u540e\u9762\n\t\t\t\t\t\tnxt[head]=s;\n                        //\u5c06\u76ee\u524d\u904d\u5386\u7684\u7a7a\u95f4\u7684\u540e\u9a71\u6539\u4e3a\u65b0\u589e\u7a7a\u95f4\n                        //\u8fd9\u6837\u4e0b\u4e00\u6b21\u5faa\u73af\u5c31\u80fd\u5148\u904d\u5386\u65b0\u589e\u7a7a\u95f4\u4e86\n                        //\u4e8e\u662f\u5c31\u5b9e\u73b0\u4e86\u5c06\u65b0\u589e\u7a7a\u95f4\u7f6e\u4e8e\u961f\u9996\u7684\u529f\u80fd\n\t\t\t\t\t\tif(!nxt[s])\n\t\t\t\t\t\t\ttail=s;\n                        //\u4e00\u4e2a\u5c0f\u7ec6\u8282\n                        //\u82e5\u76ee\u524d\u961f\u5217\u4e3a\u7a7a\uff0c\u5373\u961f\u9996\u5c31\u662f\u961f\u5c3e\u7684\u60c5\u51b5\n                        //\u4e5f\u8981\u66f4\u65b0\u672b\u7aef\n\t\t\t\t\t}\n\t\t\t\t\tnmb[s]=y;//\u7ed9\u65b0\u589e\u7a7a\u95f4\u9644\u4e0a\u6570\u503c\n\t\t\t\t\tv[y]=1;//\u8bb0\u5f55\u8be5\u70b9\n\t\t\t\t\tdis[y]=dis[x]+da[i];//\u4fee\u6539\u8ddd\u79bb\n\t\t\t\t\tif(y==ed)//\u82e5\u5230\u8fbe\u7ec8\u70b9\uff0c\u76f4\u63a5\u9000\u51fa\u641c\u7d22\n\t\t\t\t\t\tp=0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(p)//\u82e5\u6ca1\u6709\u5230\u8fbe\u7ec8\u70b9\u8bf4\u660e\u65e0\u89e3\n\t\t\tprintf(\"NO SOLUTION\\n\");\n\t\telse\n\t\t\tprintf(\"%d\\n\",dis[ed]);\n\t}\n\treturn 0;\n}\n```\n\u8be5\u5947\u8469\u7b97\u6cd5\u8dd1\u4e86$460ms$\uff0c\u800c\u6211\u7684\u6734\u7d20$SPFA$\u5728\u5f00$O^2$\u7684\u60c5\u51b5\u4e0b\u8dd1\u4e86$2784ms$\uff0c\u4e14\u6700\u540e\u4e00\u4e2a\u70b9\u4e3a$932ms$\uff0c\u52c9\u5f3a\u5361\u4e86\u8fc7\u53bb\uff0c\u53ef\u89c1\u8be5\u5947\u8469\u7b97\u6cd5\u7684\u6548\u7387\u8fd8\u662f\u633a\u9ad8\u7684\u3002  \n\u4e0b\u9762\u4e0a\u4e0b\u5de8\u4f6c$lyd$\u7684\u6807\u51c6\u53cc\u7aef\u5e7f\u641c\uff0c\u8dd1\u4e86$204ms$\u3002\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <algorithm>\nusing namespace std;\n\nconst int cap = 500010;\nint dist[510][510]; char map[510][510]; bool proc[510][510];\npair<int, int> queue[cap * 2]; int r, c, li, ri;\ninline bool valid (int x, int y) { return x >= 0 && x <= r && y >= 0 && y <= c; }\ninline void que_add (int x, int y, int v)\n{\n    if (dist[x][y] < 0 || v < dist[x][y])\n    {\n        dist[x][y] = v;\n        if (li == ri || v > dist[queue[li].first][queue[li].second]) queue[ri++] = make_pair(x, y);\n        else queue[--li] = make_pair(x, y);\n    }\n}\nint main ()\n{\n    int kase; for (scanf(\"%d\", &kase); kase; --kase)\n    {\n        scanf(\"%d %d\", &r, &c);\n        if ((r + c) % 2)\n        {\n            for (int i = 0; i < r; i++) scanf(\"%s\", map[i]);\n            printf(\"NO SOLUTION\\n\");\n        }\n        else\n        {\n            for (int i = 0; i < r; i++) scanf(\"%s\", map[i]);\n            li = ri = cap; queue[ri++] = make_pair(0, 0);\n            memset(dist, -1, sizeof dist), dist[0][0] = 0;\n            memset(proc, false, sizeof proc);\n            while (li != ri)\n            {\n                int cx = queue[li].first, cy = queue[li].second; ++li;\n                if (valid(cx - 1, cy - 1))\n                {\n                    if (map[cx - 1][cy - 1] == '\\\\') que_add(cx - 1, cy - 1, dist[cx][cy]);\n                    else que_add(cx - 1, cy - 1, dist[cx][cy] + 1);\n                }\n                if (valid(cx - 1, cy + 1))\n                {\n                    if (map[cx - 1][cy] == '/') que_add(cx - 1, cy + 1, dist[cx][cy]);\n                    else que_add(cx - 1, cy + 1, dist[cx][cy] + 1);\n                }\n                if (valid(cx + 1, cy - 1))\n                {\n                    if (map[cx][cy - 1] == '/') que_add(cx + 1, cy - 1, dist[cx][cy]);\n                    else que_add(cx + 1, cy - 1, dist[cx][cy] + 1);\n                }\n                if (valid(cx + 1, cy + 1))\n                {\n                    if (map[cx][cy] == '\\\\') que_add(cx + 1, cy + 1, dist[cx][cy]);\n                    else que_add(cx + 1, cy + 1, dist[cx][cy] + 1);\n                }\n            }\n            printf(\"%d\\n\", dist[r][c]);\n        }\n    }\n    return 0;\n}\n//\u56e0\u4e3a\u662f\u4ecelyd\u5de8\u4f6c\u6240\u8457\u4e66\u7684\u5149\u76d8\u91cc\u590d\u5236\u7684\uff0c\u6240\u4ee5\u4fb5\u5220\n```",
        "postTime": 1523967409,
        "uid": 60181,
        "name": "Iowa_BattleShip",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2243 \u3010\u7535\u8def\u7ef4\u4fee\u3011"
    },
    {
        "content": " # \u6b63\u7edf\u53cc\u7aef\u961f\u5217\u641c\u7d22\n ### \u56de\u987e\uff1a\u666e\u901a\u961f\u5217\u8fdb\u884c\u8fb9\u6743\u4e3a\u5b9a\u503c\u7684\u6700\u77ed\u8def\n \u6bcf\u6b21\u5230\u8fbe\u90fd\u662f\u6700\u4f18\u7684\uff08\u610f\u5473\u7740\u4e0d\u7528\u53d6**min**\uff09\n ### why\uff1f\n\u56e0\u4e3a\u6240\u6709\u72b6\u6001\u6309\u7167 **\u5165\u961f\u7684\u5148\u540e\u987a\u5e8f** \u5177\u6709 **\u5c42\u6b21\u5355\u8c03\u6027**\uff0c\u6bcf\u6b21\u6269\u5c55\uff0c\u90fd\u5f80\u5916\u8d70\u4e00\u6b65\uff0c\u6ee1\u8db3\u4ece\u8d77\u59cb\u5230\u8be5\u72b6\u6001\u7684\u6700\u4f18\u6027\uff08\u4e0d\u7528\u53d6min/\u4e5f\u4e0d\u7528\u6bd4\u5927\u5c0f\uff0c\u5982\u679c\u5982\u6b64\u5931\u53bb\u4e86\u610f\u4e49\uff09\n## \u56de\u5230\u6b63\u9898\uff1a\u53cc\u7aef\u961f\u5217\u53ef\u4ee5\u8fdb\u884c\u8fb9\u6743\u4e24\u4e2a\u5b9a\u503c\uff08\u6211\u4eec\u5728\u6b64\u7b80\u5316\u62101/0\uff09\u7684\u6700\u77ed\u8def\n\u64cd\u4f5c\uff1a\u5bf9\u4e8e\u4e00\u6761\u8fb9u\u5230v\uff0c\u5982\u679c\u6b64\u8fb9\u6743\u503c\u4e3a0\uff0c\u6211\u4eec\u5c06\u5b83push_front\uff08v\uff09\uff0c\u5426\u5219push_back(k)\uff0c\u6bcf\u6b21\u53d6\u961f\u9996\n\u8fd9\u6837\u6211\u4eec\u4fdd\u8bc1\u4e86**\u5355\u8c03\u6027**\uff08\u5373\u6bcf\u6b21\u4f18\u5148\u9009\u62e9\u6700\u4f18\u7684\uff09\n\n\u6ce8\u610f\u7ec6\u8282\uff1a\u6211\u4eec\u653e\u5165\u961f\u5217\u91cc\u7684\u8fd8\u6709u\uff0c\u8fd9\u6837\u624d\u80fd\u505a\u5230\u5c06\u6bcf\u6b21\u53d6\u51fa\u7684\u65f6\u5019\u66f4\u65b0\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728\u961f\u5217\u4e2d\u653e\u5165\u4e8c\u5143\u7ec4\uff08u\uff0cv\uff09\uff0c\u5177\u4f53\u770b\u4ee3\u7801\n\n\u81f3\u4e8e\u5efa\u8fb9\uff08\u5176\u5b9e\u6211\u6ca1\u6709\u5efa\uff09\uff0c\u53ea\u8981\u8ba4\u4e3a\u67d0\u4e00\u65b9\u683c\u5bf9\u89d2\u4e24\u70b9\u95f4\u6709\u8fb9\uff0c\u8fb9\u6743\u4e3a0\uff0c\u5426\u5219\u4e3a1\n\n\u590d\u6742\u5ea6\uff1aO\uff08r*c\uff09\n\n\u5b9e\u6d4b\uff1a\u5f00o2(76ms)\uff08\u6bd5\u7adfdeque\u5e38\u6570\u5927\uff09\n\n\u4e0d\u5f00o2\uff08300ms\uff09\u901f\u5ea6\u76f8\u5f53\u53ef\u4ee5\n\n\u5e0c\u671b\u5927\u5bb6\u80fd\u901a\u8fc7\u6b64\u9898\u6b63\u786e\u8ba4\u8bc6\u5230\u53cc\u7aef\u961f\u5217\u7684bfs\uff08\u4e0d\u7528\u53d6min\u54e6\uff09\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<deque>\nusing namespace std;\nconst int MAXX=550;\nint dis[MAXX][MAXX];\nbool vis[MAXX][MAXX],Map[MAXX][MAXX];\nint dx[4]={1,-1,1,-1};\nint dy[4]={1,-1,-1,1};//\u6b64\u5904\u4e3a\u4e86\u65b9\u4fbf\nint t,r,c;\nchar s[MAXX];\ninline void init(){\n\tmemset(dis,0,sizeof(dis));\n\tmemset(vis,0,sizeof(vis));\n}\ninline bool check(int x,int y){\n\tif(x>=1&&y>=1&&x<=r+1&&y<=c+1)return true;\n\telse return false;\n}//\u68c0\u67e5\u662f\u5426\u5230\u8fb9\u754c\ninline int edge(int x,int xx,int y,int yy){\n\tif((xx<x&&yy<y)||(xx>x&&yy>y))return !Map[min(x,xx)][min(y,yy)];\n\telse return Map[min(x,xx)][min(y,yy)];\n}\ninline void bfs(){\n\tMap[0][0]=1;\n\tdeque< pair < pair<int ,int> ,pair<int ,int > > >q;//\u4e8c\u5143\u7ec4\u961f\u5217\n\tpair<int ,int > u=make_pair(0,0);\n\tpair<int ,int > v=make_pair(1,1);\n\tq.push_back(make_pair(u,v));\n\tdis[0][0]=0;\n\twhile(!q.empty()){\n\t\tpair< pair<int ,int > , pair<int ,int > >t=q.front();\n\t\tq.pop_front();\n\t\tpair<int ,int >u=t.first;\n\t\tpair<int ,int >v=t.second;\n\t\tint xx=u.first;\n\t\tint yy=u.second;\n\t\tint x=v.first;\n\t\tint y=v.second;\n\t\tif(vis[x][y])continue;//\u8fd9\u91cc\u4fdd\u8bc1\u590d\u6742\u5ea6O(r*c)\n\t\tdis[x][y]=dis[xx][yy]+edge(x,xx,y,yy);\n\t\tvis[x][y]=1;\n\t\tfor(int i=0;i<4;++i){\n\t\t\tint xv=x+dx[i];\n\t\t\tint yv=y+dy[i];\n\t\t\tpair<int ,int >s=make_pair(xv,yv);\n\t\t\tif(check(xv,yv)&&!vis[xv][yv]){\n\t\t\t\tif(edge(xv,x,yv,y))q.push_back(make_pair(v,s));\n\t\t\t\telse q.push_front(make_pair(v,s));\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tinit();\n\t\tscanf(\"%d%d\",&r,&c);\n\t\tfor(int i=1;i<=r;++i){\n\t\t\tscanf(\"%s\",s+1);\n\t\t\tfor(int j=1;j<=c;++j)\n\t\t\tif(s[j]=='\\\\')Map[i][j]=1;//\u8fd9\u91cc\u6709c++\u7684\u8f6c\u4e49\u5b57\u7b26\u6211\u4e48\u53ef\u4ee5\u8fd9\u4e48\u5904\u7406/\n\t\t\telse Map[i][j]=0;\n\t\t}\n\t\tbfs();\n\t\tif(vis[r+1][c+1])printf(\"%d\\n\",dis[r+1][c+1]);\n\t\telse printf(\"NO SOLUTION\\n\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1531899059,
        "uid": 56838,
        "name": "wangjyqh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2243 \u3010\u7535\u8def\u7ef4\u4fee\u3011"
    },
    {
        "content": "\u8fd9\u662f\u6211\u82b1\u4e86\u4e00\u6574\u5929\u624d\u5199\u5b8c\u7684\u9898\n\n\u8fde\u7528\u9898\u89e3\u4f5c\u5bf9\u62cd\u7684\u4e3b\u610f\u90fd\u7528\u8fc7\u4e86\uff08\u611f\u8c22\u697c\u4e0b\u7684\u5927\u4f6c\u4eec\uff09\n\n\u90fd\u2026\u2026\n\u5168\u5bf9\n\n\u4f46\u6d1b\u8c37\u4e0a\u5c31\u86d9\u58f0\u4e00\u7247\n\n\u2026\u2026\n\n\u2026\u2026\n\n\u2026\u2026\n\n\n\u7ec8\u4e8e\u5728\u6211\u5de6\u601d\u53f3\u60f3\uff0c\u4e0a\u8e7f\u4e0b\u8df3\u540e\uff0c\u7ec8\u4e8e\u627e\u5230\u4e86\u539f\u56e0\n\n\u5b83\u662f\u2026\u2026\n\n\uff08\u54d4\u2026\u2026\u89c1\u6587\u672b\uff09\n\n\n\n------------\n\n\n\u8fd9\u662f\u4e00\u9053\u53cc\u5411\u961f\u5217bfs\u9898\n\n\u9996\u5148\u5904\u7406\u8f93\u5165\u6570\u636e\n\n\u51e1\u662f'/'\u90fd\u662f\u5de6\u4e0b\u4e0e\u53f3\u4e0a\u8fde\u901a\uff0c'\\'\u5982\u662f\n\n\u6211\u4eec\u5c06\u8fde\u901a\u7684\u8bb0\u4e3a0\uff0c\u4e0d\u8fde\u901a\u8bb0\u4e3a1\uff08\u65cb\u8f6c\u4e00\u6b21\u5c31\u8fde\u901a\u4e86\uff09\n\n\u6240\u4ee5\u6b64\u65f6\u6211\u4eec\u8981\u627e\u7684\u7b54\u6848\u5c31\u662f\u4ece\u70b9\uff081\uff0c1\uff09\u5230\u70b9\uff08n+1,m+1\uff09\u7684\u6700\u77ed\u8def\u5f84\uff0c\u5c31\u662f\u8fd9\u4e48\u7b80\u5355\n\n\n\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\nint t,way[505][505][4],n,m;\n//way\u6570\u7ec4\u8bb0\u5f55\uff08i,j\uff09\u70b9\u5230\u53f3\u4e0a\uff0c\u5de6\u4e0a\uff0c\u5de6\u4e0b\uff0c\u53f3\u4e0a\u662f\u5426\u8fde\u901a\nbool vis[505][505][4];\nint num[505][505];\nchar s;\nint dir[4][2]={{1,1},{-1,-1},{1,-1},{-1,1}};\n//0 \u53f3\u4e0b 1 \u5de6\u4e0a 2 \u5de6\u4e0b 3 \u53f3\u4e0a  \nstruct Tr\n{\n    int x,y,val;\n    \n}q[1000005];\n\nint re(int i)\n{\n    switch(i)\n    {\n        case 0: return 1;break;\n        case 1: return 0;break; \n        case 2: return 3;break;\n        case 3: return 2;break;\n    }\n    return 0;\n}\n//\u8fd9\u4e2a\u51fd\u6570\u7684\u51fa\u73b0\u662f\u56e0\u4e3a\u6211\u61d2\u5f97\u6539\u521d\u59cb\u503c\uff08\u9003\u03b5=\u03b5=\u03b5=(~\uffe3\u25bd\uffe3)~\nint main()\n{\n    cin>>t;\n\twhile(t)\n    {\n        t--;\n        memset(vis,0,sizeof(vis));\n        memset(num,0x3f,sizeof(num));\n        cin>>n>>m;\n        \n        if(!n||!m) cout<<\"NO SOLUTION\"<<endl; \n        \n        for(int i=1;i<=n;i++)\n        {\n            for(int j=1;j<=m;j++)\n            {\n                s=getchar();\n                while(s!='\\\\'&&s!='/') s=getchar(); \n                if(s== '\\\\') //\u5355\u72ec\u6253\u2018/\u2019\u662f\u4f1a\u51fa\u9519\u7684 \n                {\n                    way[i+1][j][3]=1;//\u5de6\u4e0b\u89d2 \n                    way[i][j+1][2]=1;\n                    way[i][j][0]=0;\n                    way[i+1][j+1][1]=0;\n                    continue ;\n                }\n                if(s=='/')\n                {\n                    way[i][j][0]=1;//\u53f3\u4e0b\u89d2 \n                    way[i+1][j+1][1]=1;\n                    way[i+1][j][3]=0;\n                    way[i][j+1][2]=0;\n                    continue;\n        \n                } \n            }\n            s=getchar();\n        }\n        \n        \n        int head=300000,tail=300000;\n        q[head].x=1;\n        q[head].y=1;\n        q[head].val=0;\n        //vi=1;\n    \n        while(head<=tail)//\u5bfb\u627e\u6700\u77ed\u8def\n        {\n            int x=q[head].x,y=q[head].y,val=q[head].val;\n            for(int i=0;i<=3;i++)\n            {\n                int xx=x+dir[i][0],yy=y+dir[i][1];\n                if(xx<=n+1&&xx>=1&&yy<=m+1&&yy>=1&&!vis[xx][yy][re(i)])\n                {\n                    vis[xx][yy][re(i)]=1; \n                    if(way[x][y][i]) \n                    {\n                        num[xx][yy]=min(num[xx][yy],val+1);\n                        q[++tail].x=xx;\n                        q[tail].y=yy;\n                        q[tail].val=val+1; \n                }\n                else\n                {\n                    num[xx][yy]=min(num[xx][yy],val);\n                    q[head].x=xx;\n                    q[head].y=yy;\n                    q[head].val=val;\n                    head--;\n                }\n                }\n            }\n            head++;\n        }\n        if(vis[n+1][m+1][1])\n        {\n            cout<<num[n+1][m+1]<<endl ;\n        }\n        else cout<<\"NO SOLUTION\"<<endl ;\n    }\n    return 0;\n} \n```\n\u597d\u4e86\uff0c\u6765\u8bf4\u539f\u56e0\n\nLinux\u7cfb\u7edf\u4e0b\u6362\u884c\u7b26\u4e3a\u4e24\u4e2a\n\n\uff08Linux\uff1a\u6211\u5c31\u662f\u8fd9\u4e48\u4efb\u6027(\u3002\u30fb\u2200\u30fb)\u30ce\uff09\n",
        "postTime": 1535719505,
        "uid": 56865,
        "name": "Adaxy",
        "ccfLevel": 0,
        "title": "P2243 \u9898\u89e3\uff08\u53cc\u5411\u961f\u5217bfs\uff09"
    },
    {
        "content": "## \u6ce8\u610f \u8fd9\u7bc7\u9898\u89e3\u6709\u56db\u4efd\u4ee3\u7801\uff0cAC\u4ee3\u7801\u9700\u8981\u60a8\u4eec\u62fc\u51d1\u4e00\u4e0bqwq\n\n\u5bf9\u4e8e\u539f\u6765\u7684\u7535\u8def\u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u9876\u70b9\u548c\u5b83\u5468\u56f4\u7684\u70b9\u76f8\u8fde    \n\u70b9\u4e4b\u95f4\u5b58\u5728\u5bfc\u7ebf\u7684\u4e24\u4e2a\u70b9\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a $0$ \u7684\u8fb9\uff0c\u4e0d\u5b58\u5728\u5bfc\u7ebf\u7684\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a $1$ \u7684\u8fb9  \n\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u505a\u5462\uff0c\u539f\u6765\u6709\u8fb9\u7684\u4e24\u4e2a\u70b9\u672c\u6765\u5c31\u662f\u901a\u8def\u7684\uff0c\u4e5f\u5c31\u4e0d\u9700\u8981\u52a0\u8fb9\u6743  \n\u539f\u6765\u6ca1\u6709\u8fb9\u7684\u4e24\u4e2a\u70b9\uff0c\u9700\u8981\u5c06\u5bfc\u7ebf\u8f6c\u4e00\u4e0b\uff0c\u90a3\u8f6c\u52a8\u5bfc\u7ebf\u7684\u64cd\u4f5c\u4e5f\u5c31\u662f\u7ecf\u8fc7\u4e00\u6761\u8fb9\u6743\u4e3a $1$ \u7684\u8fb9\uff0c\u6700\u77ed\u8def\u7684\u957f\u5ea6\u52a0 $1$ \n\n\u8fd9\u6837\u5c31\u80fd\u5c06\u8fd9\u9053\u9898\u8f6c\u5316\u4e3a\u4e00\u4e2a\u6c42\u4ece\u5de6\u4e0a\u89d2\u5230\u53f3\u4e0b\u89d2\u7684\u6700\u77ed\u8def\u7684\u9898\u76ee  \n\u5f88\u660e\u663e\u8fd9\u662f\u4e00\u4e2a\u7f51\u683c\u56fe\uff0c\u800c\u4e14\u65f6\u9650 $150ms$ \u6700\u597d\u4e0d\u8981\u7528\u67d0\u4e2a\u7b97\u6cd5\n\n\u6211\u5148\u662f\u5199\u4e86\u4e00\u4e2a\u4f18\u5148\u961f\u5217\u4f18\u5316\u7684 $Dijkstra$\uff08\u5f00\u4e86 $O2$ \u8fc7\u4e86\uff0c\u4e0d\u5f00 $80-90$ \u5de6\u53f3\uff09\n```cpp\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\nusing namespace std;\n\nconst int INF=19260817;\nint n,m,cnt,sum;\nint left_up,left_down,right_up,right_down;\nchar f[505];\nint head[1100001],d[1100001];\n\nstruct edge\n{\n    int next,w,v;\n}e[1100001];\n\nvoid add(int u,int v,int w)\n{\n    e[++cnt].v=v;\n    e[cnt].w=w;\n    e[cnt].next=head[u];\n    head[u]=cnt;\n}\n\nstruct node\n{\n    int u,d;\n    bool operator<(const node& rhs) const{\n        return d>rhs.d;\n    }\n}; //\u7528cmp\u7684\u5199\u6cd5wa\u4e86\u4e00\u4e2a\u665a\u4e0a\u4e4b\u540e\u6211\u5c31\u518d\u4e5f\u4e0d\u90a3\u4e48\u5199\u4e86\n\nvoid Dijkstra()\n{\n    sum=(m+1)*(n+1);//\u8fd9\u662f\u603b\u7684\u8282\u70b9\u6570\n    priority_queue<node> q;\n    for(int i=1;i<=sum;i++) d[i]=INF;\n    d[1]=0;\n    q.push((node){1,d[1]});\n    while(!q.empty())\n    {\n        node x=q.top(); q.pop();\n        int u=x.u;\n        if(x.d!=d[u]) continue;\n        for(int i=head[u];i;i=e[i].next)\n        {\n            int v=e[i].v,w=e[i].w;\n            if(d[u]+w<d[v])\n            {\n                d[v]=d[u]+w;\n                q.push((node){v,d[v]});\n            }\n        }\n    }\n    if(d[sum]==INF) cout<<\"NO SOLUTION\";\n    else cout<<d[sum];\n} \n\nint main()\n{\n    std::ios::sync_with_stdio(false);\n    cin>>n>>m;\n    for(int i=0;i<n;++i)\n    {\n    \tcin>>f;\n        for(int j=0;j<m;++j)\n        {\n        \tleft_up=(m+1)*i+j+1;\n    \t\tright_up=(m+1)*i+j+2;\n    \t\tleft_down=(m+1)*(i+1)+j+1;\n    \t\tright_down=(m+1)*(i+1)+j+2;\n            //\u5904\u7406\u8282\u70b9\u7f16\u53f7\uff0c\u4e00\u6761\u8fb9\u5360\u4e00\u4e2a\u683c\u5b50\u7684\u8bdd\u5c31\u4f1a\u6709\u56db\u4e2a\u9876\u70b9\n            if(f[j]==92)//\u4e0d\u77e5\u9053\u8f6c\u4e49\u7b26\u7684\u6211\u5c31\u53ea\u80fd\u5199\u4e2aASCII\u7801\u4e86\n            {\n               \tadd(left_up,right_down,0);\n               \tadd(right_down,left_up,0);//\u65e0\u5411\u56fe\u6b63\u53cd\u5b58\u4e00\u6b21\n               \tadd(left_down,right_up,1);\n                add(right_up,left_down,1);\n           \t}\n            if(f[j]==47)\n            {\n            \tadd(left_down,right_up,0);\n                add(right_up,left_down,0);\n                add(left_up,right_down,1);\n                add(right_down,left_up,1);\n            }\n        }\n    }\n    Dijkstra();\n    return 0;\n}\n```\n\n\u867d\u7136\u8fc7\u4e86\uff0c\u4f46\u662f\u8fd9\u79cd\u65b9\u6cd5\u80af\u5b9a\u662f\u4e0d\u5b8c\u7f8e\u7684\uff08\u6bd5\u7adf\u5f00 $O2$ \u624d\u884c\uff09\u3002  \n\u5f88\u660e\u663e\uff0c\u6211\u8fd9\u4e2a\u5b58\u56fe\u7684\u65b9\u5f0f\u5e38\u6570\u592a\u5927\uff0c\u90a3\u6211\u4eec\u53ef\u4ee5\u6539\u4e00\u4e0b\u5b58\u56fe\n\n```\nvoid add(int u,int v,int w)\n{\n    e[++cnt].v=v;e[cnt].w=w;e[cnt].next=head[u];head[u]=cnt;\n    e[++cnt].v=u;e[cnt].w=w;e[cnt].next=head[v],head[v]=cnt;\n}//\u987a\u4fbf\u4e5f\u6539\u4e00\u4e0b\uff0c\u5199\u8d77\u6765\u66f4\u52a0\u65b9\u4fbf\u4e86\n\n//main\u51fd\u6570\u4e2d\u7684\u5b58\u56fe\n\tfor(int i=1;i<=n+1;++i)\n        for(int j=1;j<=m+1;++j)\n            mark[i][j]=++tot;//\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u9876\u70b9\u7684\u7f16\u53f7\n    for(int i=1;i<=n;++i)\n    {\n    \tcin>>f;\n        for(int j=1;j<=m;++j)\n        {\n            if(f[j-1]=='/')\n            {\n            \tadd(mark[i][j],mark[i+1][j+1],1);//\u8c03\u6574\u4e00\u4e0b\u5b58\u56fe\u51fd\u6570\u5c31\u65b9\u4fbf\u4e86\u5f88\u591a\n               \tadd(mark[i+1][j],mark[i][j+1],0);\n            }\n            else\n            {\n               \tadd(mark[i][j],mark[i+1][j+1],0);\n               \tadd(mark[i+1][j],mark[i][j+1],1);\n           \t}\n        }\n    }\n```\n\n\u4f46\u662f\u8fd9\u79cd\u5199\u6cd5\u8fd8\u662f\u53ea\u6709 $90$ \u5206\u5de6\u53f3\uff0c\u90a3\u8be5\u600e\u4e48\u529e\u5462\uff1f  \n\u6ce8\u610f\u5230 $Dijkstra$ \u7684\u5806\u4f18\u5316\u4e2d\u4f1a\u91cd\u590d\u52a0\u70b9\u5f88\u591a\u6b21  \n\u5728 $Dijkstra$ \u4e2d\uff0c\u6211\u4eec\u660e\u660e\u53ea\u662f\u9700\u8981\u627e\u51fa $dis$ \u503c\u6700\u5c0f\u7684\u70b9\u4e0d\u662f\u5417  \n\n\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u6765\u4f18\u5316\u67e5\u8be2\u64cd\u4f5c\uff08\u53ea\u9700\u8981\u5355\u70b9\u4fee\u6539\u5462\uff09  \n\u53ea\u8981\u6700\u521d\u5c06\u503c\u90fd\u8bbe\u4e3a $INF$ \uff0c\u8d77\u70b9\u8bbe\u4e3a $0$ \uff0c\u7ebf\u6bb5\u6811\u50a8\u5b58\u6700\u5c0f\u503c\uff0c  \n\u5c06\u8d70\u8fc7\u7684\u70b9\u4e5f\u8bbe\u4e3a $INF$ \uff0c $Dijkstra$ \u7684\u65f6\u5019\u5224\u65ad\u6811\u6839\u7684\u503c\u662f\u5426\u7b49\u4e8e $INF$ \uff0c   \n\u5982\u679c\u7b49\u4e8e\u7684\u8bdd\u5c31\u6ca1\u6709\u70b9\u80fd\u66f4\u65b0\u4e86\uff0c\u5c31\u505a\u5b8c\u4e86  \n\u53ef\u4ee5\u770b\u4e00\u4e0b\u544a\u8bc9\u6211\u8fd9\u4e2a\u65b9\u6cd5\u7684 @yizimi\u8fdc\u6b23 \u5927\u4f6c\u7684[\u535a\u5ba2](https://yizimiyuanxin.blog.luogu.org/solution-p1339-new)\n\n```cpp\nstruct segment_tree\n{\n\tint minx[1100001],tag[1100001];\n\tvoid push_up(int p)\n\t{\n\t\tminx[p]=min(minx[p<<1],minx[p<<1|1]);\n\t\ttag[p]=(minx[p<<1]<minx[p<<1|1])?tag[p<<1]:tag[p<<1|1];\n        //minx\u5b58\u6700\u5c0f\u503c\uff0ctag\u5b58\u62e5\u6709\u8fd9\u4e2a\u503c\u7684\u70b9\u7684\u7f16\u53f7\n\t}\n\tvoid build(int l,int r,int p)\n\t{\n\t\tif(l==r)\n\t\t{\n\t\t\tminx[p]=d[l];\n\t\t\ttag[p]=l;\n\t\t\treturn;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tbuild(l,mid,p<<1);\n\t\tbuild(mid+1,r,p<<1|1);\n\t\tpush_up(p);\n\t}\n\tvoid update(int now,int l,int r,int p,int k)\n\t{\n\t\tif(l==r)\n\t\t{\n\t\t\tminx[p]=k;\n\t\t\treturn;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tif(now<=mid) update(now,l,mid,p<<1,k);\n\t\telse update(now,mid+1,r,p<<1|1,k);\n\t\tpush_up(p);\n\t}\n}tree;\n\nvoid Dijkstra()\n{\n    for(int i=2;i<=tot;i++) d[i]=INF;\n    tree.build(1,tot,1);\n    while(tree.minx[1]<INF)//\u5982\u679c\u7ebf\u6bb5\u6811\u7684\u6811\u6839\u7684\u503c\u4e3aINF\uff0c\u90a3\u6240\u6709\u80fd\u627e\u7684\u70b9\u90fd\u627e\u5b8c\u4e86\n    {\n        int u=tree.tag[1];\n        tree.update(u,1,tot,1,INF);//\u8d70\u8fc7\u7684\u70b9\u8bbe\u4e3aINF\uff0c\u76f8\u5f53\u4e8evis\u6570\u7ec4\n        for(int i=head[u];i;i=e[i].next)\n        {\n            int v=e[i].v,w=e[i].w;\n            if(d[v]>d[u]+w)\n            {\n                d[v]=d[u]+w;\n                tree.update(v,1,tot,1,d[v]);//\u6811\u4e0a\u66f4\u65b0\n            }\n        }\n    }\n    if(d[tot]==INF) cout<<\"NO SOLUTION\";\n    else cout<<d[tot];\n} \n```\n\n\u4e3a\u4ec0\u4e48\u8fd8\u662f\u8fc7\u4e0d\u4e86\u554a\uff0c\u9012\u5f52\u7ebf\u6bb5\u6811\u7684\u5e38\u6570\u8fd9\u4e48\u5927\u5417 $qwq$  \n\u7b49\u4e00\u4e0b\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5355\u70b9\u4fee\u6539\uff0c\u67e5\u8be2\u90fd\u4e0d\u7528  \n\u90a3\u6211\u4eec\u4e3a\u4ec0\u4e48\u4e0d\u5199\u4e00\u68f5\u5e38\u6570\u5f88\u5c0f\uff0c\u4ee3\u7801\u53c8\u77ed\u7684zkw\u7ebf\u6bb5\u6811\u5462\n\n```cpp\nstruct segment_tree\n{\n\tint bit;\n\tint minx[1100001],tag[1100001];//\u771f\u7684\u662f\u4e60\u60ef\u4e86\u5199sum\uff0c\u5f53\u6210\u6700\u5c0f\u503c\u770b\u5c31\u884c\u4e86\n\tvoid push_up(int n)\n\t{\n\t\tminx[n]=min(minx[n<<1],minx[n<<1|1]);\n\t\ttag[n]=minx[n<<1]<minx[n<<1|1]?tag[n<<1]:tag[n<<1|1];\n\t}\n\tvoid build(int n)\n\t{\n\t\tfor(bit=1;bit<=n+1;bit<<=1);\n\t\tfor(int i=bit+1;i<=(bit<<1)-1;++i)\n\t\t{\n        \t //\u6ce8\u610f\u8fd9\u91cc\u7ed3\u675f\u5faa\u73af\u7684\u6761\u4ef6\u4e3a(bit<<1)-1\uff0c\u8fd9\u662f\u56e0\u4e3azkw\u7ebf\u6bb5\u6811\u9700\u8981\u628a\u53f6\u5b50\u586b\u6ee1\uff0c\n             //\u5982\u679c\u4e0d\u586b\u6ee1\u7684\u8bdd\u6700\u540e\u5c31\u4f1a\u6709\u7f16\u53f7\u5927\u4e8en\u7684\u70b9\u503c\u4e3a0\uff0c\u6811\u6839\u59cb\u7ec8\u4e3a0\uff0c\u9677\u5165\u6b7b\u5faa\u73af\n\t\t\t minx[i]=i-bit==1?0:INF;//\u5c06\u51fa\u53d1\u70b9\u7684dis\u503c\u8bbe\u4e3a0\n\t\t\t tag[i]=i-bit;\n\t\t}\n\t\tfor(int i=bit-1;i>=1;--i)\n\t\t\tpush_up(i);\n\t}\n\tvoid update(int n,int k)\n\t{\n\t\tfor(minx[n+=bit]=k,n>>=1;n;n>>=1)\n\t\t\tpush_up(n);\n\t}\n}tree;\n```\n\u81f3\u6b64\uff0c\u5c31\u53ef\u4ee5\u6ee1\u5206\u901a\u5173\u5566\uff01",
        "postTime": 1536685458,
        "uid": 53164,
        "name": "WorldBest\u4e36\u725b\u987f",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 P4667 \u3010[BalticOI 2011 Day1]Switch the Lamp On\u3011"
    },
    {
        "content": "# \u8fd9\u4e00\u9053\u9898\u660e\u663e\u662f\u53cc\u7aef\u961f\u5217\u5e7f\u641c\n\uff08\u672c\u9898\u89e3\u53c2\u8003\u4e86Rex_xyy\u7684\u9898\u89e3\u5e76\u8fdb\u884c\u4e86\u8be6\u7ec6\u8865\u5145\uff09\n\n\u57fa\u672c\u601d\u8def\n------------\n\u5c06\u8f93\u5165\u7684\u659c\u6760\u8f6c\u5316\u4e3a\u8fb9\u6743\u662f0/1\u7684\u56fe\uff1b\n\n\u5728\u8fdb\u884c\u641c\u7d22\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u641c\u7d22\u5230\u7684\u8fb9\u6743\u662f1\uff08\u9700\u8981\u8f6c\u4e00\u6b21\uff09\uff0c\u5219\u5c06\u5176\u653e\u5230\u961f\u5c3e\uff1b\n\n\u5982\u679c\u641c\u7d22\u5230 \u7684\u8fb9\u6743\u662f0\uff08\u76f4\u63a5\u8fde\u63a5\uff09\uff0c\u5219\u653e\u5230\u961f\u9996\uff0c\u4f18\u5148\u8fdb\u884c\u641c\u7d22\uff1b\n\n##### \u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u7b2c\u4e00\u6b21\u641c\u7d22\u5230\u7684\u7ed3\u679c\u662f\u6700\u4f18\u7684\uff0c\u90a3\u4e48\u6839\u672c\u4e0d\u9700\u8981min\u3002\n\n\n\u5177\u4f53\u601d\u8def\n------------\n### \u521d\u59cb\u5316\uff1a\n\n\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u4e09\u7ef4\u6570\u7ec4way[i][j][3]\uff1a\u7528\u4e8e\u8bb0\u5f55\u4ece\u70b9(i,j)\u5411\u56db\u4e2a\u89d2\u4e0a\u7684\u8fb9\u7684\u6743\u503c(0/1)\u3002\uff08\u56db\u4e2a\u65b9\u5411\u662f\u53f3\u4e0a\uff0c\u5de6\u4e0a\uff0c\u5de6\u4e0b\uff0c\u53f3\u4e0a\uff09\n\n\u7136\u540e\u6bcf\u4e00\u6b21\u8bfb\u5165\u4e00\u4e2a\u5b57\u7b26\uff08 / \u6216 \\ \uff09\uff1a\u5982\u679c\u8bfb\u5165\u4e86\"/\",\u5219\u4ee4\uff1a  \nway[i][j][0]=1;\uff08\u5f53\u524d\u70b9\u5411\u53f3\u4e0b\u7684\u8fb9\uff09  \nway[i+1][j+1][1]=1;\uff08\u53f3\u4e0b\u89d2\u7684\u70b9\u5411\u5de6\u4e0a\u7684\u8fb9\uff09  \nway[i+1][j][3]=0;\uff08\u4e0b\u9762\u7684\u70b9\u5411\u53f3\u4e0a\u7684\u8fb9\uff09  \nway[i][j+1][2]=0;\uff08\u53f3\u8fb9\u7684\u70b9\u5411\u5de6\u4e0b\u7684\u8fb9\uff09\n\n\u53cd\u4e4b\u5219\u4e0d\u8d58\u8ff0\u4e86\u3002\n\n### \u5e7f\u641c\u8fc7\u7a0b\uff1a\n\n\u9996\u5148\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\u961f\u5217\u5b58\u50a8\u6a2a\u5750\u6807\uff0c\u7eb5\u5750\u6807\u4ee5\u53ca\u5230\u5f53\u524d\u70b9\u8f6c\u8fc7\u591a\u5c11\u6b21\u3002\n\n\u7136\u540e\u5c06\u8d77\u70b9\u52a0\u5165\u961f\u5217\uff0c\u8fdb\u5165while\u5faa\u73af\uff0c\u8fd9\u91cc\u52a0\u5165\u8fd9\u4e00\u6bb5\u4ee3\u7801\u8fdb\u884c\u89e3\u91ca\uff0c\u6700\u540e\u8f93\u51fa\u7ed3\u679c\u5c31\u597d\u4e86\n```cpp\nwhile(head<=tail&&!vis[n+1][m+1][1])//\u53ea\u8981\u961f\u5217\u975e\u7a7a\u5e76\u4e14\u7ec8\u70b9\u6ca1\u6709\u88ab\u627e\u5230\u8fc7\uff08\u7b2c\u4e00\u6b21\u627e\u5230\u4fbf\u662f\u6700\u4f18\u89e3\uff09 \n        {\n            int x=q[head].x,y=q[head].y,val=q[head].val;//\u5b9a\u4e49x\uff0cy\uff0cval\u4e3a\u8f6c\u6362\u524d\u7684\u5750\u6807\u4ee5\u53ca\u6743\u503c\uff0c\u7531\u4e8e\u540e\u9762\u5934\u4f1a\u6539\u53d8\u56e0\u6b64\u9700\u8981\u5148\u5b58 \n            for(int i=0;i<=3;i++)//\u5411\u56db\u4e2a\u65b9\u5411\u8fdb\u884c\u641c\u7d22 \n            {\n                int xx=x+dir[i][0],yy=y+dir[i][1];//\u5b9a\u4e49xx\uff0cyy\u4e3a\u8f6c\u6362\u540e\u7684\u5750\u6807 \n                if(xx<=n+1&&xx>=1&&yy<=m+1&&yy>=1&&!vis[xx][yy][re(i)])//\u5982\u679c\u4e0d\u8d8a\u754c\u5e76\u4e14\u8fd9\u4e00\u6761\u8fb9\u6ca1\u6709\u88ab\u627e\u5230\u8fc7 \n                {\n                    vis[xx][yy][re(i)]=1;//\u6807\u8bb0\u8fd9\u4e00\u6761\u8fb9 \n                    if(way[x][y][i])//\u5982\u679c\u8fd9\u4ee5\u6761\u8fb9\u7684\u8fb9\u6743\u662f1 \n                    {\n                        num[xx][yy]=val+1;//\u8bb0\u5f55\u5230\u8fbe\u5f53\u524d\u70b9\u7684\u6700\u77ed\u8ddd\u79bb \n                        q[++tail].x=xx;\n                        q[tail].y=yy;\n                        q[tail].val=val+1;//\u5c06\u5176\u653e\u5230\u961f\u5c3e\uff0c\u7531\u4e8e\u5148\u641c\u7d22\u5230\u7684\u662f\u6700\u4f18\u7684\uff0c\u6240\u4ee5\u4e0d\u7528min \n                \t}\n                \telse//\u5982\u679c\u8fb9\u6743\u662f0\n                \t{\n                    \tnum[xx][yy]=val;\n                  \t\tq[head].x=xx;\n                \t    q[head].y=yy;\n                \t    q[head].val=val;//\u540c\u4e0a \n                \t    head--;//\u5c06\u5176\u76f4\u63a5\u8d1f\u503c\u4e3a\u5934\u4e4b\u540e\u5c06\u5934\u6307\u9488\u5411\u524d\u9762\u79fb\u52a8\u65b9\u4fbf\u540e\u9762\u7684\u8d4b\u503c \n                \t}\n                }\n            }\n            head++;//\u4e00\u822c\u7684\u5e7f\u641c \n        }\n```\n###### ~~\u6240\u4ee5\u4f60\u5c31\u4f1a\u5728\u91cc\u9762\u770b\u5230\u4e0d\u77e5\u9053\u662f\u4ec0\u4e48\u7684\u51fd\u6570re\uff0c\u5b9e\u9645\u4e0a\u662f\u56e0\u4e3a\u4f5c\u8005\u5728\u5199\u4ee3\u7801\u7684\u65f6\u5019\uff0c\u8f6c\u6362\u5750\u6807\u7684\u6570\u7ec4\u4ee5\u53ca\u5b58\u70b9\u5230\u53e6\u4e00\u4e2a\u70b9\u7684\u8fb9\u7684\u6743\u503c\u65b9\u5411\u4e0d\u7edf\u4e00\uff0c\u56e0\u6b64\u4f7f\u7528\u4e86\u51fd\u6570re\u3002~~\n\n\u4ee3\u7801\n------------\n\n\u6700\u540e\u9644\u4e0a\u53ea\u7528\u4e8699MS\u7684\u6539\u826fAC\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint t,way[505][505][4],n,m;//t\u5b58\u50a8\u6570\u636e\u7ec4\u6570\uff0cway\u4e0d\u5728\u89e3\u91ca\uff0cn\u548cm\u662f\u6a2a\u7eb5\u957f\u5ea6 \nbool vis[505][505][4];//vis\u662f\u8bb0\u5f55\u8fb9\u662f\u5426\u88ab\u8bbf\u95ee\u8fc7 \nint num[505][505];//num\u662f\u8bb0\u5f55\u4ece\u8d77\u70b9\u5230\u8fd9\u4e00\u4e2a\u70b9\u7684\u6700\u77ed\u8ddd\u79bb \nchar s;\nint dir[4][2]={{1,1},{-1,-1},{1,-1},{-1,1}};//\u56db\u4e2a\u65b9\u5411\u79fb\u52a8 \nstruct Tr\n{\n    int x,y,val;\n}q[1000005];//\u7ed3\u6784\u4f53\u961f\u5217 \nint re(int i)//\u5bf9\u539f\u4f5c\u8005\u7684\u5c0a\u91cd\uff08\u56db\u4e2a\u65b9\u5411\u4e0d\u5bf9\u5e94\uff09 \n{\n    switch(i)\n    {\n        case 0: return 1;break;\n        case 1: return 0;break; \n        case 2: return 3;break;\n        case 3: return 2;break;\n    }\n    return 0;\n}\nint main()\n{\n    cin>>t;\n    while(t)\n    {\n        t--;\n        memset(vis,0,sizeof(vis));//\u6bcf\u6b21\u9700\u8981\u521d\u59cb\u5316 \n        memset(num,0x3f,sizeof(num));\n        cin>>n>>m;\n        if(!n||!m) cout<<\"NO SOLUTION\"<<endl; \n        for(int i=1;i<=n;i++)//\u6bcf\u4e00\u884c \n        {\n            for(int j=1;j<=m;j++)//\u6bcf\u4e00\u5217 \n            {\n                s=getchar();//\u6bcf\u4e00\u6b21\u8f93\u5165\u4e00\u4e2a\u7b26\u53f7 \n                while(s!='\\\\'&&s!='/')s=getchar(); \n                if(s== '\\\\') //linux\u7684\u6076\u610f \n                {\n                    way[i+1][j][3]=1;//\u4e0d\u518d\u89e3\u91ca \n                    way[i][j+1][2]=1;\n                    way[i][j][0]=0;\n                    way[i+1][j+1][1]=0;\n                    continue;\n                }\n                if(s=='/')\n                {\n                    way[i][j][0]=1;//\u540c\u4e0a \n                    way[i+1][j+1][1]=1;\n                    way[i+1][j][3]=0;\n                    way[i][j+1][2]=0;\n                    continue;\n\n                }\n            }\n            s=getchar();//\u672b\u5c3e\u6709\u6362\u884c \n        }\n        int head=300000,tail=300000;//\u7531\u4e8e\u53cc\u6bb5\u961f\u5217\uff0c\u6240\u4ee5\u4e00\u5f00\u59cb\u5b9a\u4e49\u7684\u65f6\u5019\u5e94\u8be5\u5b9a\u4e49\u5230\u6570\u7ec4\u4e2d\u95f4 \n        q[head].x=1;//\u521d\u59cb\u5316 \n        q[head].y=1;\n        q[head].val=0;\n        while(head<=tail&&!vis[n+1][m+1][1])//\u53ea\u8981\u961f\u5217\u975e\u7a7a\u5e76\u4e14\u7ec8\u70b9\u6ca1\u6709\u88ab\u627e\u5230\u8fc7\uff08\u7b2c\u4e00\u6b21\u627e\u5230\u4fbf\u662f\u6700\u4f18\u89e3\uff09 \n        {\n            int x=q[head].x,y=q[head].y,val=q[head].val;//\u5b9a\u4e49x\uff0cy\uff0cval\u4e3a\u8f6c\u6362\u524d\u7684\u5750\u6807\u4ee5\u53ca\u6743\u503c\uff0c\u7531\u4e8e\u540e\u9762\u5934\u4f1a\u6539\u53d8\u56e0\u6b64\u9700\u8981\u5148\u5b58 \n            for(int i=0;i<=3;i++)//\u5411\u56db\u4e2a\u65b9\u5411\u8fdb\u884c\u641c\u7d22 \n            {\n                int xx=x+dir[i][0],yy=y+dir[i][1];//\u5b9a\u4e49xx\uff0cyy\u4e3a\u8f6c\u6362\u540e\u7684\u5750\u6807 \n                if(xx<=n+1&&xx>=1&&yy<=m+1&&yy>=1&&!vis[xx][yy][re(i)])//\u5982\u679c\u4e0d\u8d8a\u754c\u5e76\u4e14\u8fd9\u4e00\u6761\u8fb9\u6ca1\u6709\u88ab\u627e\u5230\u8fc7 \n                {\n                    vis[xx][yy][re(i)]=1;//\u6807\u8bb0\u8fd9\u4e00\u6761\u8fb9 \n                    if(way[x][y][i])//\u5982\u679c\u8fd9\u4ee5\u6761\u8fb9\u7684\u8fb9\u6743\u662f1 \n                    {\n                        num[xx][yy]=val+1;//\u8bb0\u5f55\u5230\u8fbe\u5f53\u524d\u70b9\u7684\u6700\u77ed\u8ddd\u79bb \n                        q[++tail].x=xx;\n                        q[tail].y=yy;\n                        q[tail].val=val+1;//\u5c06\u5176\u653e\u5230\u961f\u5c3e\uff0c\u7531\u4e8e\u5148\u641c\u7d22\u5230\u7684\u662f\u6700\u4f18\u7684\uff0c\u6240\u4ee5\u4e0d\u7528min \n                \t}\n                \telse//\u5982\u679c\u8fb9\u6743\u662f \n                \t{\n                    \tnum[xx][yy]=val;\n                  \t\tq[head].x=xx;\n                \t    q[head].y=yy;\n                \t    q[head].val=val;//\u540c\u4e0a \n                \t    head--;//\u5c06\u5176\u76f4\u63a5\u8d1f\u503c\u4e3a\u5934\u4e4b\u540e\u5c06\u5934\u6307\u9488\u5411\u524d\u9762\u79fb\u52a8\u65b9\u4fbf\u540e\u9762\u7684\u8d4b\u503c \n                \t}\n                }\n            }\n            head++;//\u4e00\u822c\u7684\u5e7f\u641c \n        }\n        if(vis[n+1][m+1][1])//\u5982\u679c\u8fd9\u4e00\u4e2a\u70b9\u88ab\u627e\u5230\u8fc7\u76f4\u63a5\u8f93\u51fa \n        cout<<num[n+1][m+1]<<endl\uff1b \n        else cout<<\"NO SOLUTION\"<<endl;//\u4e0d\u7136\u5c31\u8f93\u51fa\u6ca1\u6709\u7b54\u6848 \n    }\n    return 0;\n}\n```\n###### ~~\uff08\u8fd9\u4e0d\u7b97\u6284\u88ad\u5427\uff0c\u53ea\u662f\u4e3a\u4e86\u5e7f\u5927\u540c\u80de\u65e9\u65e5\u7406\u89e3\u8fd9\u9053\u9898\uff09~~",
        "postTime": 1564717070,
        "uid": 224927,
        "name": "lei_yu",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2243 \u3010\u7535\u8def\u7ef4\u4fee\u3011"
    },
    {
        "content": "## \u672c\u9898\u7528 \u7f29\u70b9+\u5e7f\u641c \u4e5f\u53ef\u4ee5\u8fc7\u7684\n\n~~\u4e3b\u8981\u662f\u6211\u61d2\u5f97\u80ccstl\u53cc\u7aef\u961f\u5217~~\n\n \u6211\u89c2\u5bdf\u5230\uff0c\u5176\u5b9e\u4e00\u5f00\u59cb\u7ed9\u51fa\u7684\u56fe\u5176\u5b9e\u662f\u82e5\u5e72\u8054\u901a\u5757\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e2a\u8054\u901a\u5757\u7f29\u6210\u4e00\u4e2a\u70b9\uff0c\u7136\u540e\u518d\u5efa\u56fe\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u6240\u6709\u8fb9\u7684\u6743\u503c\u5747\u4e3a1\u7684\u56fe\u3002\u73b0\u5728\u7684\u56fe\u5c31\u53ef\u4ee5\u505a\u5e7f\u641c\u4e86\u3002\n \n\n\u7ec6\u8282\u5728\u4ee3\u7801\u91cc\u8bf4\u5427\n\n\n------------\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nstruct ss{\n\tint node,nxt,w;\n}e1[500005],e2[500005];\nint vis1[500005],vis2[500005],head1[500005],head2[500005],tot1,tot2,mark[500005],ans[500005],k,now;char c[505][505];\nqueue<int> q;\nvoid dfs(int x)//\u65e0\u5411\u56fe\u7f29\u70b9\n{\n\tmark[x]=k;vis1[x]=1;\n\tfor(int i=head1[x];i;i=e1[i].nxt)\n\t\tif(!vis1[e1[i].node]) dfs(e1[i].node);\n}\nvoid add1(int u,int v)\n{\n\te1[++tot1].nxt=head1[u];\n\thead1[u]=tot1;\n\te1[tot1].node=v;\n}\nvoid add2(int u,int v,int ww)\n{\n\te2[++tot2].nxt=head2[u];\n\thead2[u]=tot2;\n\te2[tot2].node=v;\n\te2[tot2].w=ww;\n}\nvoid bfs(int x)//\u5e7f\u641c\n{\n\tq.push(x);vis2[x]=1;\n\twhile(!q.empty())\n\t{\n\t\tint t=q.front();q.pop();\n\t\tfor(int i=head2[t];i;i=e2[i].nxt)\n\t\t{\n\t\t\tint tt=e2[i].node;\n\t\t\tif(!vis2[tt])\n\t\t\t{\n\t\t\t\tq.push(tt);\n\t\t\t\tans[tt]=ans[t]+e2[i].w;\n\t\t\t\tvis2[tt]=1;\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tcin>>now;\n\twhile(now--)\n\t{\n\t\tmemset(vis1,0,sizeof(vis1));  // \u521d\u59cb\u5316\n\t\tmemset(vis2,0,sizeof(vis2));\n\t\tmemset(ans,0,sizeof(ans));\n\t\tmemset(head2,0,sizeof(head2));\n\t\tmemset(head1,0,sizeof(head1));\n\t\tmemset(mark,0,sizeof(mark));\n\t\ttot1=tot2=0;k=0;\n\t\tint n,m,x,y;\n\t\tcin>>n>>m;\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfor(int j=1;j<=m;j++)\n\t\t\t{\n\t\t\t\tcin>>c[i][j];\n\t\t\t\tx=(i-1)*(m+1)+j;//\u63d0\u53d6\u70b9\u7684\u7f16\u53f7\n\t\t\t\ty=x+m+2;\n\t\t\t\tif(c[i][j]=='/')\n\t\t\t\t{\n\t\t\t\t\tadd1(x+1,y-1);//\u5148\u5b58\u4e00\u4e2a\u65e0\u5411\u56fe\u7f29\u70b9\uff0c\u53ef\u4ee5\u76f4\u63a5\u4e92\u901a\u7684\u70b9\u8fde\u4e00\u6761\u8fb9\n\t\t\t\t\tadd1(y-1,x+1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tadd1(x,y);\n\t\t\t\t\tadd1(y,x);\n\t\t\t\t}\n\t\t\t}\n\t\tfor(int i=1;i<=(n+1)*(m+1);i++)\n\t\t\tif(!vis1[i])\n\t\t\t{\n\t\t\t\t++k;\n\t\t\t\tdfs(i);\n\t\t\t}\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfor(int j=1;j<=m;j++)\n\t\t\t{\n\t\t\t\tx=(i-1)*(m+1)+j;\n\t\t\t\ty=x+m+2;\n\t\t\t\tif(c[i][j]=='/')\n\t\t\t\t{\n\t\t\t\t\tif(mark[x]!=mark[y])\n\t\t\t\t\t{\n\t\t\t\t\t\tadd2(mark[x],mark[y],1);//\u5df2\u7ecf\u628a\u53ef\u4ee5\u4e92\u901a\u7684\u70b9\u7f29\u8fc7\u4e86\uff0c\u73b0\u5728\u53ea\u8981\u8003\u8651\u4e0d\u80fd\u76f4\u63a5\u4e92\u901a\u7684\u70b9\u4e86\n\t\t\t\t\t\tadd2(mark[y],mark[x],1);//\u5176\u5b9e\u53ef\u4ee5\u4e0d\u7528\u5b58\u8fb9\u6743\u7684\uff0c\u53ea\u662f\u6211\u592a\u61d2\u61d2\u5f97\u6539\u4e86\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif(mark[x+1]!=mark[y-1])\n\t\t\t\t\t{\n\t\t\t\t\t\tadd2(mark[x+1],mark[y-1],1);\n\t\t\t\t\t\tadd2(mark[y-1],mark[x+1],1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\tbfs(mark[1]);\n\t\tif(!vis2[mark[(n+1)*(m+1)]]) cout<<\"NO SOLUTION\\n\";//\u663e\u7136\uff0c\u641c\u4e0d\u5230\u8f93\u51fa\u65e0\u89e3\n\t\telse cout<<ans[mark[(n+1)*(m+1)]]<<endl;\n\t}\n}\n```\n### \u6ee1\u610f\u7684\u8bdd\u70b9\u4e2a\u8d5e\u5427\u3002",
        "postTime": 1564738604,
        "uid": 55201,
        "name": "clamee",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2243 \u3010\u7535\u8def\u7ef4\u4fee\u3011"
    },
    {
        "content": "### [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P4667)\n1.\u65b9\u6cd5\n\n\t\t\u53cc\u7aef\u961f\u5217BFS\n2.\u601d\u8def\n\n\t\t\u5efa\u4e00\u4e2a\u65e0\u5411\u56fe\uff0c\u82e5X\u5230Y\u4e0e\u539f\u6709\u7ebf\u91cd\u5408\uff0c\u8fb9\u6743\u4e3a0\uff0c\u5426\u5219\u4e3a1\u3002\uff08\u8981\u7ecf\u8fc7\u4e00\u6b21\u64cd\u4f5c\uff09\uff0c\u7136\u540e\u5728\u65e0\u5411\u56fe\u4e2d\u6c42\u4ece\u5de6\u4e0a\u5230\u53f3\u4e0b\u7684\u6700\u77ed\u8ddd\u79bb\u3002\n        \u56e0\u4e3a\u8fb9\u6743\u8981\u4e480\u8981\u4e481\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u53cc\u7aef\u961f\u5217BFS\u3002\u5982\u679c\u8fb9\u6743\u4e3a0\uff0c\u5c06\u8981\u5230\u8fbe\u7684\u70b9\u52a0\u5165\u961f\u9996\uff0c\u5426\u5219\u52a0\u961f\u5c3e\u3002\n        \u7136\u540e\u5c31\u662fR+C\u4e3a\u5947\u6570\u65f6\u662f\u65e0\u89e3\u7684\u60c5\u51b5\u3002\uff08\u7b80\u5355\u8bc1\u4e00\u4e0b\uff09\n3.\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 500010;\nint dis[510][510];\nchar g[510][510];\npair<int, int> q[MAXN * 2];\nint r, c, head, tail;\ninline bool check (int x, int y) \n{\n\treturn x >= 0 && x <= r && y >= 0 && y <= c;\n\t}\ninline void add (int x, int y, int v)\n{\n    if (dis[x][y] < 0 || v < dis[x][y])\n    {\n        dis[x][y] = v;\n        if (head == tail || v > dis[q[head].first][q[head].second]) q[tail++] = make_pair(x, y);\n        else q[--head] = make_pair(x, y);\n    }\n}\nint main ()\n{\n       scanf(\"%d %d\", &r, &c);\n        if ((r + c) % 2)\n        {\n            for (int i = 0; i < r; i++) scanf(\"%s\", g[i]);\n           printf(\"NO SOLUTION\\n\");\n        }\n        else\n        {\n            for (int i = 0; i < r; i++) scanf(\"%s\", g[i]);\n            head = tail = MAXN; q[tail++] = make_pair(0, 0);\n            memset(dis, -1, sizeof dis), dis[0][0] = 0;\n            while (head != tail)\n            {\n                int cx = q[head].first, cy = q[head].second; ++head;\n                if (check(cx - 1, cy - 1))\n                {\n                    if (g[cx - 1][cy - 1] == '\\\\') add(cx - 1, cy - 1, dis[cx][cy]);\n                    else add(cx - 1, cy - 1, dis[cx][cy] + 1);\n                }\n                if (check(cx - 1, cy + 1))\n                {\n                    if (g[cx - 1][cy] == '/') add(cx - 1, cy + 1, dis[cx][cy]);\n                    else add(cx - 1, cy + 1, dis[cx][cy] + 1);\n                }\n                if (check(cx + 1, cy - 1))\n                {\n                    if (g[cx][cy - 1] == '/') add(cx + 1, cy - 1, dis[cx][cy]);\n                    else add(cx + 1, cy - 1, dis[cx][cy] + 1);\n                }\n                if (check(cx + 1, cy + 1))\n                {\n                    if (g[cx][cy] == '\\\\') add(cx + 1, cy + 1, dis[cx][cy]);\n                    else add(cx + 1, cy + 1, dis[cx][cy] + 1);\n                }\n            }\n            printf(\"%d\\n\", dis[r][c]);\n        }\n    return 0;\n}\n```",
        "postTime": 1545469071,
        "uid": 33792,
        "name": "NY_YN",
        "ccfLevel": 0,
        "title": "P4667 [BalticOI 2011 Day1]Switch the Lamp On"
    },
    {
        "content": "\u5927\u4f6c\u90fd\u7528\u7ebf\u6bb5\u6811qwq\n\n\u6211\u6765\u7bc7\u624b\u5199\u5806\u4f18\u5316dij\u7684\u9898\u89e3\u5427qwq\n\n# \u601d\u8def\u5206\u6790\uff1a\n\u8981\u6c42\u65cb\u8f6c\u6700\u5c11\u7684\u8fb9\u4f7f\u5f97\u80fd\u4ece\u5de6\u4e0a\u89d2\u5230\u53f3\u4e0b\u89d2\n\n\u628a\u5404\u4e2a\u6b63\u65b9\u5f62\u7684\u9876\u70b9\u770b\u505a\u7ed3\u70b9\uff0c\u4ece0\u5230(n+1)*(m+1)-1\n\n\u5171(n+1)*(m+1)\u4e2a\u7ed3\u70b9\n\n\u5148\u628a\u9898\u76ee\u7ed9\u7684\u8fb9\u5b58\u597d(\u6682\u4e14\u79f0\u4f5c\u5b9e\u8fb9)\n\n\u7136\u540e\u628a\u5b9e\u8fb9\u65cb\u8f6c90\u00b0(\\\u53d8\u4e3a/\uff0c/\u53d8\u4e3a\\\\)\uff0c\u6210\u4e3a\u865a\u8fb9\uff0c\u5b58\u597d\n\n\u56e0\u4e3a\u865a\u8fb9\u9700\u8981\u65cb\u8f6c\u4e00\u6b21\u624d\u80fd\u5f97\u5230\uff0c\u6240\u4ee5\u4e00\u6761\u8def\u5f84\u8981\u7ecf\u8fc7\u865a\u8fb9\u8981\u4ed8\u51fa\u4ee3\u4ef71\n\n\u90a3\u4e48\u5b9e\u8fb9\u7684\u8fb9\u6743\u4e3a0\uff0c\u865a\u8fb9\u7684\u8fb9\u6743\u4e3a1\n\n\u7136\u540e\u4ee5\u5de6\u4e0a\u89d2\u4e3a\u8d77\u70b9\uff0c\u8dd1dij\u6c42\u6700\u77ed\u8def\uff0cdis[(n+1)*(m+1)-1]\u5373\u4e3a\u7b54\u6848\n\n# \u6ce8\u610f\u4e8b\u9879\n\u672c\u9898\u5bb9\u6613\u8d85\u65f6\n\npriority_queue\u5e38\u6570\u7a0d\u5927\uff0c\u4e0d\u5f00O2\u4f1a\u8d85\u65f6(88\u5206\u5de6\u53f3)\n\n\u90a3\u5c31\u7528\u624b\u5199\u5806\n\n(priority_queue 2510ms)(\u624b\u5199\u5806 1100ms)\n\n\n------------\n\n\n**\u7a7a\u95f4\uff1a**\n\n\u70b9\u6570260000\u591f\u4e86\n\n\u8fb9\u6570260000<<2\u3002\u8fb9\u6570\u4e3an\\*m\u7684\u56db\u500d(\u9898\u76ee\u7ed9\u4e86n\\*m\u6761\u8fb9(\u8fb9\u6743\u4e3a0)\uff0c\u6211\u4eec\u52a0\u4e86n\\*m\u6761\u65cb\u8f6c\u540e\u7684\u8fb9\u6743\u4e3a1\u7684\u8fb9\uff0c\u53c8\u56e0\u4e3a\u662f\u53cc\u5411\u8fb9\uff0c\u6240\u4ee5\u518d\\*2)\n~~\u6211\u4e00\u5f00\u59cb\u8fb9\u6570\u90fd\u6570\u9519\u4e86qwq70\u5206~~\n\n\u5806\u548c\u8fb9\u6570\u4e00\u6837 **\u6ce8\u610f\u4e0d\u662f\u548c\u70b9\u6570\u4e00\u6837**(\u7b2c\u4e00\u4efd\u4ee3\u7801)\n\n\n\n------------\n\n\ni\u8868\u793a\u7ed3\u70b9\u7f16\u53f7\uff0cv\u8868\u793a\u5165\u5806\u65f6\u7684dis[i] \n\n\u6700\u591a\u53ef\u80fd\u67094\\*n\\*m\u4e2a\u70b9\u8981\u5b58\u5230\u5806\u91cc\u9762\uff0c\u5373\u8fb9\u6570\n\n\u5806\u91cc\u9762\u53ef\u80fd\u540c\u65f6\u5b58\u5728i\u76f8\u7b49\u7684\u5143\u7d20\uff0c\u4f46\u5b83\u4eecv\u4e0d\u76f8\u7b49\n\n\u56e0\u4e3adis[i]\u53ef\u80fd\u88ab\u591a\u6b21\u66f4\u65b0(\u6bcf\u6b21\u66f4\u65b0v\u90fd\u51cf\u5c0f)\uff0c\u6bcf\u6b21\u66f4\u65b0\u90fd\u8981\u6254\u5806\u91cc\n\n\u66f4\u65b0\u6b21\u6570\u4e0e\u8fb9\u6570\u6709\u5173\uff0c\u6240\u4ee5\u6700\u591a\u53ef\u80fd\u67094\\*n\\*m\u4e2a\u70b9\u5728\u5806\u91cc\u9762\n\ndij\u4e2d\uff0c\u5f53\u4e00\u4e2a\u5143\u7d20a\u51fa\u5806\u65f6(a.v==dis[a.i])\uff0c\u5806\u4e2d\u5176\u5b83i=a.i\u7684\u5143\u7d20\u90fd\u6ca1\u7528\u4e86(\u56e0\u4e3aa.v\u4e00\u5b9a\u662f\u6700\u5c0f\u7684) \n\n\u6240\u4ee5dij\u4e2d\u6709 if(x.v!=dis[x.i]) continue;\u8be6\u89c1\u7b2c\u4e00\u4efd\u4ee3\u7801\u51fd\u6570dij\uff0c\u7b2c\u4e8c\u4efd\u4ee3\u7801\u4e0d\u9700\u8981\u8fd9\u884c \n\n\u8fd8\u6709\u5c31\u662f\u5806\u91cc\u9762\u4e0d\u80fd\u53ea\u5b58\u7ed3\u70b9\u7f16\u53f7i\u800c\u901a\u8fc7dis[i]\u6765\u8c03\u6574\u5806(\u7b2c\u4e8c\u4efd\u4ee3\u7801\u8fdb\u884c\u4e86\u4e00\u70b9\u5904\u7406\uff0c\u6240\u4ee5\u5c31\u53ef\u4ee5\u4e86)\n\n(\u56e0\u4e3adis[i]\u53ef\u80fd\u88ab\u591a\u6b21\u66f4\u65b0\uff0c\u53ea\u5b58\u7ed3\u70b9\u7f16\u53f7i\u800c\u901a\u8fc7dis[i]\u6765\u8c03\u6574\u5806\u7684\u8bdd\n\n\u6bcf\u6b21dis[i]\u66f4\u65b0(\u82e5\u4e0d\u8c03\u6574\u76f8\u5e94\u5143\u7d20\u7684\u4f4d\u7f6e)\u53ef\u80fd\u4f1a\u7834\u574f\u5806\u7684\u6027\u8d28,\u82e5\u8981\u4ece\u5806\u4e2d\u627e\u5230i\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u8fdb\u884c\u8c03\u6574\uff0c\u5c31\u8981\u7528\u4e00\u4e2a\u6570\u7ec4y\u8bb0\u5f55\u6bcf\u4e2a\u7ed3\u70b9\u5728\u5806\u4e2d\u7684\u4f4d\u7f6e\n\u5e76\u5728\u7ed3\u70b9\u5728\u5806\u4e2d\u7684\u4f4d\u7f6e\u53d1\u751f\u53d8\u5316\u65f6\u7ef4\u62a4y(\u8fd9\u6837\u6bcf\u4e2a\u7ed3\u70b9\u5bf9\u5e94\u4e00\u4e2a\u5143\u7d20))(\u8be6\u89c1\u7b2c\u4e8c\u4efd\u4ee3\u7801)\n\n\u6211\u5199\u8fc7\u53ea\u5b58\u7ed3\u70b9\u7f16\u53f7\u7684\u5806\uff0c~~\u5bfc\u81f4\u6211\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u4e0d\u6562\u624b\u5199\u5806\uff0c~~\u5f88\u4e45\u4e4b\u540e\u624d\u77e5\u9053\u600e\u4e48\u9519\u4e86\uff0c\u6240\u4ee5\u5e0c\u671b\u5927\u5bb6\u4e0d\u8981\u91cd\u8e48\u8986\u8f99qwq\n\n\u8fd8\u6709\u4e00\u4e9b\u6ce8\u610f\u4e8b\u9879\u770b\u6ce8\u91ca\n\n# \u4ee3\u7801\n\n\u82e5a\u8868\u793a\u603b\u70b9\u6570\uff0cb\u8868\u793a\u603b\u8fb9\u6570\n\n**\u7b2c\u4e00\u4efd\u4ee3\u7801(1100ms)**\n\n\u6700\u591ab\u6b21\u5165\u5806\uff0c\u5806\u4e2d\u6700\u591ab\u4e2a\u5143\u7d20\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u5e94\u8be5\u662fO(b*log(b))\n\n**\u7b2c\u4e8c\u4efd\u4ee3\u7801(1183ms)**\n\n\u7528\u4e00\u4e2a\u6570\u7ec4y\u8bb0\u5f55\u6bcf\u4e2a\u7ed3\u70b9\u5728\u5806\u4e2d\u7684\u4f4d\u7f6e\uff0cy[i]\u8868\u793a\u7ed3\u70b9i\u5728\u5806\u4e2d\u7684\u4f4d\u7f6e\n\n\u6bcf\u6b21dis[i]\u66f4\u65b0\u65f6\uff0c\u8c03\u6574\u4f4d\u7f6e\u4e3ay[i]\u7684\u5143\u7d20\u5728\u5806\u4e2d\u7684\u4f4d\u7f6e\uff0c\u800c\u4e0d\u662f\u65b0\u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20\u5230\u5806\u91cc\u9762\n\n\u6700\u591ab\u6b21\u5165\u5806\uff0c\u5806\u4e2d\u6700\u591aa\u4e2a\u5143\u7d20\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u5e94\u8be5\u662fO(b*log(a))\n\n\u800c\u4e14\u5806\u7684\u5143\u7d20\u53ef\u4ee5\u4e0d\u5b58v\uff0c\u76f4\u63a5\u7528dis[i]\u8fdb\u884c\u6bd4\u8f83\u4e5f\u53ef\u4ee5(\u5728\u7b2c\u4e8c\u4efd\u4ee3\u7801\u91cc\u9762\uff0c\u6240\u6709\u7ed3\u70b9v=dis[i])\n\n\u5e94\u8be5\u548c\u7ebf\u6bb5\u6811\u4f18\u5316\u7684\u4e00\u6837qwq\n\n**\u4e0d\u77e5\u9053\u6709\u6ca1\u6709\u641e\u9519\u590d\u6742\u5ea6qwq**\n\n**\u4e0d\u8fc7**\n\n\u7b2c\u4e00\u4efd\u4ee3\u7801\u548c\u7b2c\u4e8c\u5206\u4ee3\u7801\u8017\u65f6\u6ca1\u4ec0\u4e48\u5dee\u522b\n\n\u56e0\u4e3aa,b\u76f8\u5dee\u4e0d\u5927\uff0clog(b)\u548clog(a)\u6ca1\u4ec0\u4e48\u533a\u522b\n\n# \u7b2c\u4e00\u4efd\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\nusing namespace std;\n\nstruct node {\n\tint to,v,next;\n} e[260000<<2];//\u8fd9\u662f\u8fb9\nstruct qwq {\n\tint i,v;//i\u8868\u793a\u7ed3\u70b9\u7f16\u53f7\uff0cv\u8868\u793a\u5165\u5806\u65f6\u7684dis[i] \n\tbool operator <(const qwq &the)const {\n\t\treturn v<the.v;\n\t}\n} dui[260000<<2],z;//\u8fd9\u662f\u5806\uff0c\n\nint n,m,head[260000],dis[260000],ie,id;\nchar ch;\nvoid adde(int a,int b,int c) {//\u6570\u7ec4\u6a21\u62df\u90bb\u63a5\u8868\u50a8\u5b58 \n\te[++ie].next=head[a];\n\te[ie].to=b;\n\te[ie].v=c;\n\thead[a]=ie;\n\treturn ;\n}\nvoid din(qwq p) {//\u6254\u8fdb\u5806\u91cc \n\tdui[++id]=p;\n\tint x=id;\n\twhile(dui[x]<dui[x>>1])//\u5411\u4e0a\u8c03\u6574\uff0c\u7ef4\u62a4\u5806\u7684\u6027\u8d28 \n\t\tswap(dui[x],dui[x>>1]),x>>=1;\n\treturn ;\n}\nqwq dout() {//\u5f39\u51fadui[1]\uff0c\u5e76\u8fd4\u56de \n\tint x=1;\n\tqwq ans=dui[1];\n\tdui[1]=dui[id--];\n\twhile(1) {\n\t\tx<<=1;//x<<=1\u540e\u5fc5\u7136\u662f\u5076\u6570\uff0c\u5076\u6570|1\u7b49\u4ef7\u4e8e+1 \n\t\tif(x>id) break;//\u9632\u6b62\u8d8a\u754c \n\t\tif(x+1<=id&&dui[x|1]<dui[x])//\u786e\u5b9a\u9009\u62e9x\u8fd8\u662fx+1(\u9009\u6700\u5c0f\u7684) \n\t\t\tx|=1;//dui[x|1]<dui[x]\u6ce8\u610f<\u7b26\u53f7\uff0c\u4e0d\u80fd\u7528>\uff0c\u56e0\u4e3a\u53ea\u91cd\u8f7d\u4e86< \n\t\tif(dui[x]<dui[x>>1])//\u8c03\u6574 \n\t\t\tswap(dui[x],dui[x>>1]);\n\t\telse break;\n\t}\n\treturn ans;\n}\nvoid dij() {\n\tqwq x;\n\tmemset(dis,0x3f,4*(n+1)*(m+1+1));//4*(n+1)*(m+1),4*(n+1)*(m+1+1)\u8fd9\u6837\u5199\u4fdd\u9669\u4e00\u70b9\n\tdis[0]=0;\n\tz.i=0,z.v=0;\n\tdin(z);\n\twhile(id) {//id\u662f\u5806\u5185\u5143\u7d20\u7684\u4e2a\u6570\uff0c\u4ece1\u5f00\u59cb\u7f16\u53f7(\u4e0d\u80fd\u4ece0)\n\t\tx=dout();\n\t\tif(x.v!=dis[x.i]) continue;\n\t\t//x.v==dis[x.i]\u8868\u793ax.i\u8fd9\u4e2a\u7ed3\u70b9\u7b2c\u4e00\u6b21\u51fa\u5806\n\t\t//(\u4fdd\u8bc1dis[x.i]\u6700\u5c0f,\u65e0\u6cd5\u518d\u66f4\u65b0\uff0c\u5373\u786e\u5b9a\u8d77\u70b9\u5230x.i\u7684\u6700\u77ed\u8def) \n\t\t//x.v!=dis[x.i]\u65f6x.i\u8fd9\u4e2a\u7ed3\u70b9\u5df2\u7ecf\u51fa\u8fc7\u5806\u4e86\uff0cx.v\u5fc5\u5b9a\u5927\u4e8edis[x.i]\uff0c\u6240\u4ee5\u8df3\u8fc7 \n\t\tfor(int i=head[x.i]; i; i=e[i].next)\n\t\t\tif(dis[e[i].to]>dis[x.i]+e[i].v) {//\u66f4\u65b0dis \n\t\t\t\tdis[e[i].to]=dis[x.i]+e[i].v;\n\t\t\t\tz.i=e[i].to,z.v=dis[e[i].to];\n\t\t\t\tdin(z);//\u6254\u5806\u91cc \n\t\t\t}\n\t}\n\treturn ;\n}\nint main() {\n\tscanf(\"%d %d\",&n,&m);\n\tfor(int i=0,v,u,f; i<n; i++)\n\t\tfor(int j=0; j<m; j++) {\n\t\t\tch='0';//\u4e3a\u4e86\u8fdb\u5165\u5faa\u73af\n\t\t\twhile(ch!='\\\\'&&ch!='/') scanf(\"%c\",&ch);//\u9632\u6b62\u8bfb\u5230'\\n'\u7b49\u4e1c\u897f\n\t\t\tif(ch=='\\\\') f=0;//'\\\\'\u624d\u8868\u793a \u5b57\u7b26\\ \u3002\u7c7b\u4f3c\u5730\uff0c\u8981\u8f93\u51fa\u767e\u5206\u53f7printf(\"%%\");\n\t\t\telse f=1;//f\u786e\u5b9a\u8fb9\u6743 \n\t\t\tv=i*(m+1)+j;//\u5de6\u4e0a\u89d2\n\t\t\tu=(i+1)*(m+1)+j+1;//\u53f3\u4e0b\u89d2\n\t\t\tadde(v,u,f);//\u5982\u679c\u662f\\\uff0c\u90a3\u4e48\u5de6\u4e0a\u89d2\u4e0e\u53f3\u4e0b\u89d2\u4e4b\u95f4\u7684\u8fb9\u6743\u4e3a0\uff0c\u82e5\u662f/\u5219\u4e3a1\n\t\t\tadde(u,v,f);\n\t\t\tv=(i+1)*(m+1)+j;//\u5de6\u4e0b\u89d2\n\t\t\tu=i*(m+1)+j+1;//\u53f3\u4e0a\u89d2\n\t\t\tadde(v,u,f^1);//\u5982\u679c\u662f/\uff0c\u90a3\u4e48\u5de6\u4e0b\u89d2\u4e0e\u53f3\u4e0a\u89d2\u4e4b\u95f4\u7684\u8fb9\u6743\u4e3a0\uff0c\u82e5\u662f\\\u5219\u4e3a1\n\t\t\tadde(u,v,f^1);//0^1=1,1^1=0\n\t\t}\n\tdui[0].v=-1;\n\tdij();\n\tif(dis[(n+1)*(m+1)-1]==0x3f3f3f3f)//\u6700\u7ec8\u7b54\u6848\u662fdis[(n+1)*(m+1)-1]\n\t\tprintf(\"NO SOLUTION\");\n\telse printf(\"%d\",dis[(n+1)*(m+1)-1]);\n\treturn 0;\n}\n```\n\n# \u7b2c\u4e8c\u4efd\u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\nusing namespace std;\n\nstruct node {\n    int to,v,next;\n} e[260000<<2];\nstruct qwq {\n    int i,v;\n    bool operator <(const qwq &the)const {\n        return v<the.v;\n    }\n} dui[260000],z;//\u8fd9\u91cc\u7684\u5806\u6700\u591a\u5b58500*500\u4e2a\u5143\u7d20 \nint n,m,head[260000],dis[260000],ie,id,y[260000];\nchar ch;\nvoid adde(int a,int b,int c) {\n    e[++ie].next=head[a];\n    e[ie].to=b;\n    e[ie].v=c;\n    head[a]=ie;\n    return ;\n}\nvoid dup(int x)//\u5c06\u5806\u4e2d\u7b2cx\u4e2a\u4f4d\u7f6e\u5411\u4e0a\u8c03\u6574 \n{\n    while(dui[x]<dui[x>>1])\n        swap(y[dui[x].i],y[dui[x>>1].i]),swap(dui[x],dui[x>>1]),x>>=1;//\u7ef4\u62a4y \n    return ;\n}\nvoid din(qwq x) {\n    dui[++id]=x;\n    y[x.i]=id;//\n    dup(id);\n    return ;\n}\nqwq dout() {\n    int x=1;\n    qwq ans=dui[1];\n    y[dui[1].i]=0;//\n    dui[1]=dui[id--];\n    y[dui[1].i]=1;//\n    while(1) {\n        x<<=1;\n        if(x<id&&dui[x|1]<dui[x]) x|=1;\n        if(x<=id&&dui[x]<dui[x>>1])\n            swap(y[dui[x].i],y[dui[x>>1].i]),swap(dui[x],dui[x>>1]);//\u7ef4\u62a4y \n        else break;\n    }\n    return ans;\n}\nvoid dij() {\n    qwq x;\n    memset(dis,0x3f,4*(n+1)*(m+1+1));\n    dis[0]=0;\n    z.i=0,z.v=0;\n    din(z);\n    while(id) {\n        x=dout();\n        for(int i=head[x.i]; i; i=e[i].next)\n            if(dis[e[i].to]>dis[x.i]+e[i].v) {\n                dis[e[i].to]=dis[x.i]+e[i].v;\n                if(y[e[i].to]==0) {//y[e[i].to]==0\u8bf4\u660e\u7ed3\u70b9 e[i].to\u4e0d\u5728\u5806\u91cc \n                    z.i=e[i].to,z.v=dis[e[i].to];\n                    din(z);\n                }\n                else {//\u66f4\u65b0\u8c03\u6574 \n                    dui[y[e[i].to]].v=dis[e[i].to];\n                    dup(y[e[i].to]);//\u56e0\u4e3adui[y[e[i].to]].v\u53d8\u5c0f\u4e86\uff0c\u6240\u4ee5\u4e00\u5b9a\u662f\u5411\u4e0a\u8c03\u6574 \n                }\n            }\n    }\n    return ;\n}\nint main() {\n\tscanf(\"%d %d\",&n,&m);\n\tfor(int i=0,v,u,f; i<n; i++)\n\t\tfor(int j=0; j<m; j++) {\n\t\t\tch='0';\n\t\t\twhile(ch!='\\\\'&&ch!='/') scanf(\"%c\",&ch);\n\t\t\tif(ch=='\\\\') f=0;\n\t\t\telse f=1;\n\t\t\tv=i*(m+1)+j;\n\t\t\tu=(i+1)*(m+1)+j+1;\n\t\t\tadde(v,u,f);\n\t\t\tadde(u,v,f);\n\t\t\tv=(i+1)*(m+1)+j;\n\t\t\tu=i*(m+1)+j+1;\n\t\t\tadde(v,u,f^1);\n\t\t\tadde(u,v,f^1);\n\t\t}\n\tdui[0].v=-1;\n\tdij();\n\tif(dis[(n+1)*(m+1)-1]==0x3f3f3f3f)\n\t\tprintf(\"NO SOLUTION\");\n\telse printf(\"%d\",dis[(n+1)*(m+1)-1]);\n\treturn 0;\n}\n```",
        "postTime": 1537000038,
        "uid": 96546,
        "name": "qsmoonzh",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P4667 \u3010[BalticOI 2011 Day1]Switch the Lamp On\u3011"
    },
    {
        "content": "\u65e2\u7136\u6ca1\u6709\u9898\u89e3\uff0c\u90a3\u6211\u5c31\u6765\u53d1\u4e00\u6ce2\u5427\u3002\n\n\u5176\u5b9e\u8fd9\u9053\u9898\u7684\u601d\u8def\u662f\u6bd4\u8f83\u660e\u663e\u7684\uff0c\u8dd1\u4e00\u6ce2\u6700\u77ed\u8def\u5c31\u597d\u4e86\u3002\u3002\u3002\n\n\u5177\u4f53\u600e\u4e48\u505a\u5462\uff1f\n\n\u8003\u8651\u4e00\u4e2a\u65b9\u683c\uff0c\u8bbe\u5de6\u4e0a\u89d2\u4e3a\uff08i,j\uff09,\u5219\u53f3\u4e0a\u89d2\u4e3a\uff08i,j+1\uff09,\u5de6\u4e0b\u89d2\u4e3a\uff08i+1,j\uff09,\u53f3\u4e0b\u89d2\u4e3a\uff08i+1,j+1\uff09\u3002\n\n\u2460\u8be5\u65b9\u683c\u4e3a'\\'\uff1a\n\n\u53ef\u4ee5\u8fd9\u6837\u770b\uff0c\u4ece\uff08i,j\uff09\u5230\uff08i+1,j+1\uff09\u4e0d\u9700\u8981\u82b1\u8d39\uff0c\u5efa\u4e00\u6761\u6743\u503c\u4e3a0\u7684\u8fb9\uff0c\u4ece\uff08i,j+1\uff09\u5230\uff08i+1,j\uff09\u9700\u8981\u82b1\u8d391\uff0c\u5efa\u4e00\u6761\u6743\u503c\u4e3a1\u7684\u8fb9\u3002\n\n\u2461\u8be5\u65b9\u683c\u4e3a'/'\uff1a\n\n\u540c\u7406\uff0c\u4ece\uff08i,j\uff09\u5230\uff08i+1,j+1\uff09\u9700\u8981\u82b1\u8d391\uff0c\u5efa\u4e00\u6761\u6743\u503c\u4e3a1\u7684\u8fb9\uff0c\u4ece\uff08i,j+1\uff09\u5230\uff08i+1,j\uff09\u4e0d\u9700\u8981\u82b1\u8d39\uff0c\u5efa\u4e00\u6761\u6743\u503c\u4e3a0\u7684\u8fb9\u3002\n\n\u7136\u540e\u628a\u5750\u6807\u8f6c\u6362\u4e3a\u4e00\u4e2a\u6570\uff08\u778e\u641e\u5c31\u884c\uff09\u3002\n\n\u5b8c\u4e8b\u5566\u3002\u3002\u3002\n\n\u65f6\u9650\u5f88\u5c0f\uff0c\u6211\u7528\u4e86\u7ebf\u6bb5\u6811\u4f18\u5316dijstra\u3002\n\nPascal Code\uff1a\n\n```cpp\nvar\n  d,head,next,l1,l2,tree,id,wz:array[0..1000005]of longint;\n  h,l,i,j,n,ll,w,v,u,oo,x,y,num:longint;\n  ch:char;\nfunction wzl(x,y:longint):longint;\nbegin\n  exit((x-1)*(l+1)+y);\nend;\nprocedure add(x,y,z:longint);//\u94fe\u5f0f\u524d\u5411\u661f\nbegin\n  inc(num);\n  l1[num]:=y;\n  l2[num]:=z;\n  next[num]:=head[x];\n  head[x]:=num;\nend;\nprocedure build(p,l,r:longint);//\u5efa\u6811\nvar\n  mid:longint;\nbegin\n  if l=r then\n  begin\n    tree[p]:=d[l];\n    id[p]:=l;//\u8bb0\u5f55id\n    wz[l]:=p;\n    exit;\n  end;\n  mid:=(l+r) div 2;\n  build(p+p,l,mid);\n  build(p+p+1,mid+1,r);\n  if tree[p+p]<=tree[p+p+1] then\n  begin\n    tree[p]:=tree[p+p];\n    id[p]:=id[p+p];\n  end else\n  begin\n    tree[p]:=tree[p+p+1];\n    id[p]:=id[p+p+1];\n  end;\nend;\nprocedure change(p:longint);\nbegin\n  if p=0 then\n    exit;\n  if tree[p+p]<=tree[p+p+1] then\n  begin\n    tree[p]:=tree[p+p];\n    id[p]:=id[p+p];\n  end else\n  begin\n    tree[p]:=tree[p+p+1];\n    id[p]:=id[p+p+1];\n  end;\n  change(p div 2);\nend;\nbegin\n  readln(h,l);\n  for i:=1 to h do\n  begin\n    for j:=1 to l do\n    begin\n      read(ch);\n      case ch of//\u5efa\u8fb9\n        '\\':begin\n              x:=wzl(i,j);\n              y:=wzl(i+1,j+1);\n              add(x,y,0);\n              add(y,x,0);\n              x:=wzl(i+1,j);//wzl\uff0c\u5750\u6807\u8f6c\u6362\u4e3a\u4e00\u4e2a\u6570\n              y:=wzl(i,j+1);\n              add(x,y,1);\n              add(y,x,1);\n            end;\n        '/':begin\n              x:=wzl(i,j);\n              y:=wzl(i+1,j+1);\n              add(x,y,1);\n              add(y,x,1);\n              x:=wzl(i+1,j);\n              y:=wzl(i,j+1);\n              add(x,y,0);\n              add(y,x,0);\n            end;\n      end;\n    end;\n    readln;\n  end;\n  n:=wzl(h+1,l+1);//\u8ba1\u7b97\u7ec8\u70b9\uff0c\u8d77\u70b9\u663e\u7136\u662f1\n  oo:=100000005;\n  for i:=1 to n do//\u5f00\u59cbdijstra\n    d[i]:=oo;\n  d[1]:=0;\n  build(1,1,n);\n  ll:=head[1];\n  while ll<>0 do//\u521d\u59cb\u5316\uff0c\u5176\u5b9e\u53ef\u4ee5\u4e0d\u7528\n  begin\n    w:=l1[ll];\n    v:=l2[ll];\n    d[w]:=v;\n    tree[wz[w]]:=v;\n    change(wz[w] div 2);\n    ll:=next[ll];\n  end;\n  for i:=2 to n do//\u6539\u6210while\u8f83\u65b9\u4fbf\n  begin\n    if tree[1]=oo then//\u7279\u5224\uff0c\u9632\u5361\u5e38\n      break;\n    u:=id[1];\n    tree[wz[u]]:=oo;\n    change(wz[u] div 2);\n    ll:=head[u];\n    while ll<>0 do\n    begin\n      w:=l1[ll];\n      v:=l2[ll];\n      if d[w]>d[u]+v then\n      begin\n        d[w]:=d[u]+v;\n        tree[wz[w]]:=d[w];\n        change(wz[w] div 2);\n      end;\n      ll:=next[ll];\n    end;\n  end;\n  if d[n]>=oo then//\u8f93\u51fa\n    writeln('NO SOLUTION') else\n    writeln(d[n]);\nend.\n```",
        "postTime": 1535456358,
        "uid": 10341,
        "name": "GK0328",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4667 \u3010[BalticOI 2011 Day1]Switch the Lamp On\u3011"
    },
    {
        "content": "\u63d0\u4ea4\u8d85\u591a\u901a\u8fc7\u7387\u8d85\u4f4e\u7684\u9898\uff0c\u603b\u800c\u8a00\u4e4b\u7b97\u6cd5\u79d2\u6389\u4e86\uff0c\u7136\u800c\u5728\u56fe\u8bba\u4e0a\u672c\u4eba\u81ea\u5e26\u4e0d\u521d\u59cb\u5316buff\u3002\n\n\u7b97\u6cd5\uff1a\u6211\u4eec\u628a\u53ef\u4ee5\u4e0d\u65cb\u8f6c\u901a\u8fc7\u7684\u8fb9\u6807\u8bb0\u4e3a0\uff0c\u9700\u8981\u65cb\u8f6c\u7684\u6807\u8bb0\u4e3a1\uff0c\u8dd1\u4e00\u6b21\u5355\u6e90\u6700\u77ed\u8def\uff0c\u4ece\u5de6\u4e0a\u5230\u53f3\u4e0b\uff0c\u6613\u53d1\u73b0\u6700\u77ed\u8ddd\u79bb\u5c31\u662f\u9700\u8981\u65cb\u8f6c\u7684\u6b21\u6570\u3002\n\n\uff08\u6211\u4eec\u53ef\u4ee5\u770b\u6210\u6bcf\u6b21\u8981\u7528\u5230\u65cb\u8f6c\u540e\u7684\u8fb9\uff0c\u9700\u8981\u8017\u8d391\u7684\u4ef7\u503c\uff0c\u6700\u540e\u4ef7\u503c\u603b\u548c\u5f53\u7136\u5c31\u662f\u7b54\u6848\u3002\uff09\n\n\u6211\u4eec\u8fd9\u6837\u60f3\uff0c\u8fd9\u662f\u4e2a\u56fe\u3002\u53ef\u4ee5\u6570\u51fa\u6765\uff0c\u8282\u70b9\u6570\u5e94\u5f53\u662f\uff08R+1\uff09\\*\uff08C+1\uff09\uff0c\u5982\u6837\u4f8b\u3002\n\n\u5f53\u7136\uff0c\u51fa\u53d1\u70b9\u662f1\u53f7\u70b9\uff0c\u95ee\u9898\u662f\uff0c\u5982\u4f55\u8868\u8fbe\u8fd9\u4e9b\u8282\u70b9\u624d\u80fd\u8ba9\u6211\u4eec\u6e05\u695a\u786e\u8ba4\u53f3\u4e0b\u89d2\u7684\u5750\u6807\u5462\uff1f\n\n\u6211\u7684\u601d\u8def\u662f\u5efa\u56fe\u7684\u65f6\u5019\uff0c\u6309\u5982\u4e0b\u65b9\u5f0f\u5206\u914d\u70b9\u7684\u7f16\u53f7\u3002\n\n1  2  3  4    5  6\n\n7  8  9  10 11 12\n\n...\u5f53\u7136\u8fd9\u662f\u6837\u4f8b\u3002\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u65b9\u683c\uff0c\u9700\u8981\u6807\u8bb0\u56db\u4e2a\u70b9\uff0c\u56db\u4e2a\u70b9\u5750\u6807\u53ef\u4ee5\u8f7b\u6613\u6c42\u5f97\u3002\n\n\u8fd9\u5c31\u662f\u8fd9\u90e8\u5206\u7684\u4f5c\u7528\uff1a\n\n\n```cpp\n                  int pos1=((i-1)*(C+1)+j);    //\u5de6\u4e0a \n                int pos2=(i*(C+1)+j+1);      //\u53f3\u4e0b \n                int pos3=((i-1)*(C+1)+j+1);  //\u53f3\u4e0a \n                int pos4=(i*(C+1)+j);        //\u5de6\u4e0b \n```\n\u6211\u4eec\u786e\u5b9a\u4e86\u56db\u4e2a\u70b9\u7684\u4f4d\u7f6e\uff0c\u63a5\u4e0b\u6765\u5c31\u53ea\u9700\u8981\u8fde\u8fb9\u4e86\u3002\uff08\u597d\u5728\u8fd9\u9053\u9898\u5bf9\u4e8e\u5185\u5b58\u6ca1\u9650\u5236\uff0c\u968f\u4fbf\u5f00\u7b80\u76f4\u723d\u3002\uff09\n\u5982\u679c'/'\u5c31\u53f3\u4e0a\u5230\u5de6\u4e0b\u8fde\u8fb9\uff0c\u8fd9\u6761\u8fb9\u6743\u503c\u4e3a0\uff08val=0\uff09\u3002\u8fde\u8fb9\u8981\u8fde\u53cc\u5411\uff08\u672a\u8bc1\u5b9e\uff0c\u6211\u8fd9\u4e48\u8fde\u5f97\u3002\uff09\n\n\u540c\u65f6\u4e5f\u8981\u53cc\u5411\u7684\u8fde\u4e00\u6761\u4ece\u5de6\u4e0a\u5230\u53f3\u4e0b\u7684\u8fb9\uff0c\u6743\u503c\u4e3a1\uff0c\u8868\u793a\u65cb\u8f6c\u540e\u7684\u8fb9\u3002\n\n\u5982\u679c\u662f\u2019\\\u2018\u5219\u53cd\u4e4b\u3002\n\n\n\u56fe\u5efa\u597d\u4e86\uff0c\u5bf9\u4e8e\u5982\u6b64\u7a20\u5bc6\u7684\u56fe\u6211\u9009\u62e9heap\u4f18\u5316\u7684dijkstra\u3002\u4e0d\u6e05\u695a\u5176\u4ed6\u5355\u6e90\u80fd\u5426\u8fc7\uff0c\u4f46\u591a\u6e90\u4f30\u8ba1\u8fc7\u4e0d\u4e86\u3002\n\n\u6700\u540e\u7b54\u6848\u5c31\u662f1\u5230\uff08R+1\uff09\\*\uff08C+1\uff09\u7684\u6700\u77ed\u8def\u5566\u3002\n\n\n\u8fd9\u4e2a\u5de7\u5999\u7684\u601d\u8def\u4f7f\u5f97\u8fd9\u9053\u8ba9\u4eba\u6478\u4e0d\u7740\u5934\u8111\u7684\u9898\u7b80\u5355\u660e\u4e86\u4e86\u5f88\u591a\uff0c\u601d\u7ef4\u6e05\u6670\u5e94\u8be5\u80fd\u79d2\u51fa\u7b97\u6cd5\u5427\u3002\n\n\u8bb0\u4f4f\u662f\u591a\u7ec4\u6570\u636e\uff0c\u6bcf\u6b21\u8981\u521d\u59cb\u5316dis\uff0cvis\uff08flag\uff09\uff0ce\uff0cpre\u7b49\u6570\u7ec4\u3002\n\n\u6ce8\u610f\uff01\uff01\uff01\uff01\u94fe\u5f0f\u524d\u5411\u661f\u4e00\u5b9a\u8981\u6e05\u7a7atot\uff0c\u4e0d\u6e05\u7a7atot\u4f1a\u6709\u5de8\u91cf\u5185\u5b58\u5360\u7528\uff08\u4eb2\u6d4b\u51e0\u767e\u500d\u5185\u5b58\u624dAC\uff09\u6bcf\u6b21\u6e05\u7a7a\u4e86\u5c31\u4f1a\u4ece\u4e00\u5f00\u59cb\u5b58\u8fb9\u4e86\u3002\n\n\n\u5c11\u8d70\u5f2f\u8def\u3002\n\nP.S.\u4e2a\u4eba\u89c9\u5f97\u8fd9\u9053\u9898\u5e94\u5f53\u662fNOIP\u63d0\u9ad8\u6216\u4ee5\u4e0a\u3002\n\n\u4e0a\u4ee3\u7801\u3002\n\n\n\n\n   \n        \n\n        \n    \n        \n```cpp\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#include<algorithm>\n#define pa pair<int,int>\n#define INF 2147483647\nusing namespace std;\npriority_queue<pa,vector<pa>,greater<pa> >q;  //\u4f18\u5148\u961f\u5217\uff0cheap\nstruct node\n{\n    int to;\n    int val;\n    int next;\n}e[4*501*501];                                                 //\u94fe\u5f0f\u524d\u5411\u661f\u6807\u51c6struct\uff0c\u5927\u5c0f\u503c\u5f97\u6ce8\u610f\u3002\nint dis[501*501];\nint flag[501*501];\nint pre[4*501*501];\nint tot=0;\nvoid Add(int x,int y,int v)                                         //\u6dfb\u52a0\u5355\u5411\u8fb9\u3002\n{\n    tot++;\n    e[tot].next=pre[x];\n    pre[x]=tot;\n    e[tot].to=y;\n    e[tot].val=v;\n}\nint dij(int t)                                     //t\u5f00\u59cb\u7684\u5806\u4f18dij\uff0c\u4ee3\u7801\u4e0d\u505a\u8fc7\u591a\u6ce8\u91ca\u3002\n{\n   memset(flag,0,sizeof(flag));\n   dis[t]=0;\n   q.push(make_pair(dis[t],t));\n   while(!q.empty())\n   {\n    pa now=q.top();\n    q.pop();\n    if(flag[now.second])\n      continue;\n    flag[now.second]=1;\n    for(int i=pre[now.second];i;i=e[i].next)\n      if(dis[now.second]+e[i].val<dis[e[i].to])\n        {\n            dis[e[i].to]=dis[now.second]+e[i].val;\n            if(!flag[e[i].to])\n              q.push(make_pair(dis[e[i].to],e[i].to));\n        }\n    }\n}\nint main()\n{\n    int T;\n    scanf(\"%d\",&T);\n    while(T--)\n    {\n        int R,C;\n        tot=0;\n        memset(e,0,sizeof e);                                   //\u6e05\u7a7a\u3002\n        memset(pre,0,sizeof pre);\n        scanf(\"%d %d\",&R,&C);\n        for(int i=1;i<=R;++i)\n        {\n          char s[510];\n              scanf(\"%s\",&s);\n          for(int j=1;j<=C;++j)\n          {\n          if(s[j-1]=='/')\n              {\n                  int pos1=((i-1)*(C+1)+j);    //\u5de6\u4e0a \n                int pos2=(i*(C+1)+j+1);      //\u53f3\u4e0b \n                int pos3=((i-1)*(C+1)+j+1);  //\u53f3\u4e0a \n                int pos4=(i*(C+1)+j);        //\u5de6\u4e0b \n                Add(pos1,pos2,1);                           //\u5411\u56db\u4e2a\u65b9\u5411\u52a0\u8fb9\u3002\n                Add(pos2,pos1,1);\n                Add(pos3,pos4,0);\n                Add(pos4,pos3,0);\n            }\n          else\n            {\n                int pos1=((i-1)*(C+1)+j);\n                int pos2=(i*(C+1)+j+1);\n                int pos3=((i-1)*(C+1)+j+1);\n                int pos4=(i*(C+1)+j);\n                Add(pos1,pos2,0);                         //\u8fd9\u91cc\u662f\u201c\u53cd\u4e4b\u201d\n                Add(pos2,pos1,0);\n                Add(pos3,pos4,1);\n                Add(pos4,pos3,1);\n            }\n        }\n       }\n    for(int i=1;i<=(R+1)*(C+1);++i)\n          dis[i]=INF;                                   //\u521d\u59cb\u683cdis\u6570\u7ec4\u3002\n      dij(1);                                                   //\u8dd1dij\n//    for(int i=1;i<=24;++i)\n//    {\n//      printf(\"%d \",dis[i]);\n//      if(i%6==0)\n//        printf(\"\\n\");\n//    }\n  if(dis[(R+1)*(C+1)]==INF)                              //\u65e0\u89e3\u60c5\u51b5\uff0c\u6ca1\u6709\u6700\u77ed\u8def\uff08\u867d\u7136\u4e0d\u592a\u786e\u5b9a\u662f\u4ec0\u4e48\u60c5\u51b5\uff09\n    printf(\"NO SOLUTION\\n\");\n   else \n     printf(\"%d\\n\",dis[(R+1)*(C+1)]);                          //\u8f93\u51fa\u7ed3\u679c\u3002\u7ed3\u679c\u662f\u5230\u53f3\u4e0b\u89d2\u7684\u6700\u77ed\u8def\u3002\n     }   \n//AC by fz\n}\n```",
        "postTime": 1478688953,
        "uid": 17667,
        "name": "feilongz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2243 \u3010\u7535\u8def\u7ef4\u4fee\u3011"
    },
    {
        "content": "#\u6ca1\u6709P\u515a\u7684\u9898\u89e3\uff0c\u90a3\u6211\u6765\u8865\u4e00\u53d1\n\n#\u8fd9\u9898\u5361\u4e86\u621114\u6b21\u63d0\u4ea4\u3002\u3002\u3002\u6700\u540e\u628a\u6570\u7ec4\u5f00\u5c0f\u70b9\u5c31\u8fc7\u4e86\uff08\u7384\u5b66\uff09\n\n\u697c\u4e0b\u5927\u4f6c\u7528\u7684\u90fd\u662fdij+\u5806\uff0c\u90a3\u6211\u6765\u8bf4\u4e00\u4e0bSPFA\u5427\u3002\u3002\u3002\n\n\u628a\u8f93\u5165\u7684'/'\u2018\\\u2019\u770b\u6210\u4e00\u6761\u8fb9\uff0c\u4e0d\u6539\u53d8\u7684\u60c5\u51b5\u4e0b\u6743\u503c\u4e3a0\uff0c\u5426\u5219\u4e3a1\u3002\u3002\u3002\n\n\u7136\u540e\u7528SPFA\u8dd1\u4e00\u904d\u6700\u77ed\u8def\u5c31\u884c\u4e86\u3002\u3002\u3002\n\n\u6ce8\u610f\uff1a\u7528\u6765\u5b58\u7ed3\u70b9\u7684\u6570\u7ec4\u8981\u5f00\u5927\u4e00\u70b9\u3002\u56e0\u4e3a\u4ece\u4e00\u4e2a\u70b9\u6700\u591a\u53ea\u80fd\u6269\u6563\u5230\u659c\u5bf9\u89d2\u7684\u56db\u4e2a\u70b9\uff0c\u6240\u4ee5\u5b58\u8fb9\u7684\u6570\u7ec4\u53ea\u8981\u5f00**\u70b9\u7684\u4e2a\u6570\\*4**\u5c31\u884c\u4e86\uff0c\u5f00**\u70b9\u7684\u4e2a\u6570\\*4**\u5c31\u884c\u4e86\u3002\n\n\u53e6\u5916\u5c31\u76f4\u63a5\u8dd1\u6700\u6734\u7d20\u7684SPFA\u548c\u7948\u7977\u4e0d\u8981\u8d85\uff08wei\uff09\u65f6\uff08diao\uff09\u5c31\u884c\u4e86\u3002\u3002\u3002\n\n#\u5996\u602a\u5427\n\n\u732e\u4e0a\u4e11\u964b\u7684AC\u4ee3\u7801\uff1a\n\n```cpp\nconst\n  maxn=300000;\nvar\n  f:array[0..15000000]of longint;\n  b:array[0..maxn]of boolean;\n  sum:array[0..maxn]of longint;\n  a,tt:array[0..maxn,1..4]of longint;\n  dis:array[0..maxn]of longint;\n  n,m,tututu,i,j,h,t,x,y:longint;\n  c:char;\nprocedure zz(x,y,z:longint);\nbegin\n  inc(sum[x]);\n  a[x,sum[x]]:=y;\n  tt[x,sum[x]]:=z;\n  inc(sum[y]);\n  a[y,sum[y]]:=x;\n  tt[y,sum[y]]:=z;\nend;\nbegin\n  readln(tututu);\n  while tututu>0 do \n    begin\n      dec(tututu);//\u7eaa\u5ff5\u88ab\u5e9f\u53f7\u7684dalao\n      fillword(sum,sizeof(sum) div 2,0);\n      readln(n,m);\n      for i:=1 to n do \n        begin\n          for j:=1 to m do \n            begin\n              read(c);\n              if c='\\' then\n                begin\n                  x:=(i-1)*(m+1)+j;\n                  y:=i*(m+1)+j+1;\n                  zz(x,y,0);\n                  x:=(i-1)*(m+1)+j+1;\n                  y:=i*(m+1)+j;\n                  zz(x,y,1);\n                end \n                else \n                  begin\n                    x:=(i-1)*(m+1)+j+1;\n                    y:=i*(m+1)+j;\n                    zz(x,y,0);\n                    x:=(i-1)*(m+1)+j;\n                    y:=i*(m+1)+j+1;\n                    zz(x,y,1);\n                  end;//\u5b58\u8fb9\uff0c\u6211\u4eec\u628a\u77e9\u9635\u6bcf\u4e00\u884c\u8fde\u63a5\u5728\u4e00\u8d77\uff0c\u8fde\u6210\u4e00\u6761\u94fe\uff0c\u90a3\u539f\u672c\u8981\u7528\u4e8c\u4f4d\u5b58\u50a8\u7684\u70b9\u5c31\u53ef\u4ee5\u7528\u4e00\u4e2a\u6574\u5f62\u8868\u793a\u4e86\n            end;\n          readln;\n        end;\n      fillword(b,sizeof(b) div 2,0);\n      for i:=1 to (n+1)*(m+1) do dis[i]:=666666;//\u521d\u59cb\u5316\n      dis[1]:=0;\n      h:=0; \n      t:=1;\n      f[1]:=1;\n      b[1]:=true;\n      while h<t do\n        begin\n          inc(h);\n          x:=f[h];\n          b[x]:=false;\n          for i:=1 to sum[x] do \n            if dis[x]+tt[x,i]<dis[a[x,i]] then \n              begin\n                dis[a[x,i]]:=dis[x]+tt[x,i];\n                if not b[a[x,i]] then \n                  begin\n                    inc(t);\n                    f[t]:=a[x,i];\n                    b[a[x,i]]:=true;\n                  end;\n              end;\n        end;//SPFA\n      if dis[(n+1)*(m+1)]=666666 then writeln('NO SOLUTION')\n        else writeln(dis[(n+1)*(m+1)]);//\u8f93\u51fa\n    end;\nend.\n```",
        "postTime": 1506851933,
        "uid": 25355,
        "name": "\u590f\u8272\u796d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2243 \u3010\u7535\u8def\u7ef4\u4fee\u3011"
    },
    {
        "content": "   \u5f88\u660e\u663e\u662f\u4e00\u9053\u641c\u7d22\u7684\u9898\u3002\n\n   \u6211\u4eec\u53ef\u4ee5\u628a\u7535\u8def\u677f\u4e0a\u7684\u6bcf\u4e2a\u683c\u70b9(\u6a2a\u7ebf\u4e0e\u7ad6\u7ebf\u7684\u4ea4\u53c9\u70b9)\u770b\u4f5c\u65e0\u5411\u56fe\u4e2d\u7684\u7ed3\u70b9\u3002     \n   \u82e5\u4e24\u4e2a\u7ed3\u70b9 $x$ \u548c $y $\u662f\u67d0\u4e2a\u5c0f\u65b9\u683c\u7684\u4e24\u4e2a\u5bf9\u89d2,\u5219\u5728 $x $\u4e0e $y$ \u4e4b\u95f4\u8fde\u8fb9\u3002\u82e5\u8be5\u65b9\u683c\u4e2d\u7684\u6807\u51c6\u4ef6(\u5bf9\u89d2\u7ebf)\u4e0e$ x$ \u5230$ y$ \u7684\u7ebf\u6bb5\u91cd\u5408,\u5219\u8fb9\u6743\u4e3a $0$ ;\u82e5\u5782\u76f4\u76f8\u4ea4,\u5219\u8fb9\u6743\u4e3a $1$  (\u8bf4\u660e\u9700\u8981\u65cb\u8f6c $1$ \u6b21\u624d\u80fd\u8fde\u901a)\u3002\u7136\u540e,\u6211\u4eec\u5728\u8fd9\u4e2a\u65e0\u5411\u56fe\u4e2d\u6c42\u51fa\u4ece\u5de6\u4e0a\u89d2\u5230\u53f3\u4e0b\u89d2\u7684\u6700\u77ed\u8ddd\u79bb,\u5c31\u5f97\u5230\u4e86\u7ed3\u679c\u3002\n       \n   \u8fd9\u662f\u4e00\u4e2a\u8fb9\u6743\u8981\u4e48\u662f $0$ ,\u8981\u4e48\u662f $1$ \u7684\u65e0\u5411\u56fe\u3002\u5728\u8fd9\u6837\u7684\u56fe\u4e0a,\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u53cc\u7aef\u961f\u5217\u5e7f\u5ea6\u641c\u7d22\u8ba1\u7b97\u3002\u7b97\u6cd5\u7684\u6574\u4f53\u6846\u67b6\u4e0e\u4e00\u822c\u7684\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u7c7b\u4f3c\uff0c\u53ea\u662f\u5728\u6bcf\u4e2a\u7ed3\u70b9\u4e0a\u6cbf\u5206\u652f\u6269\u5c55\u65f6\u7a0d\u4f5c\u6539\u53d8\u3002\u5982\u679c\u8fd9\u6761\u5206\u652f\u662f\u8fb9\u6743\u4e3a$ 0 $\u7684\u8fb9\uff0c\u5c31\u628a\u6cbf\u6539\u5206\u652f\u5230\u8fbe\u7684\u65b0\u8282\u70b9\u4ece\u961f\u5934\u5165\u961f\uff1b\u5982\u679c\u8fd9\u6761\u5206\u652f\u662f\u8fb9\u6743\u4e3a$ 1$ \u7684\u8fb9\uff0c\u5c31\u50cf\u4e00\u822c\u7684\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u4e00\u6837\u4ece\u961f\u5c3e\u5165\u961f\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u6211\u4eec\u5c31\u4ecd\u7136\u80fd\u4fdd\u8bc1\u4efb\u610f\u65f6\u523b\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u961f\u5217\u4e2d\u7684\u7ed3\u70b9\u5bf9\u5e94\u7684\u8ddd\u79bb\u503c\u90fd\u5177\u6709\u201c\u4e24\u6bb5\u6027\u201d\u548c\u201c\u5355\u8c03\u6027\u201d\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u4ece\u961f\u5934\u51fa\u961f\u65f6\uff0c\u5c31\u80fd\u5f97\u5230\u4ece\u5de6\u4e0a\u89d2\u5230\u8be5\u7ed3\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u3002\n   \n   \u56e0\u4e3a\u6bcf\u4e2a\u7ed3\u70b9\u53ea\u9700\u8981\u8bbf\u95ee\u4e00\u6b21\uff0c\u6240\u4ee5\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(n\\times m)$\u3002\n   \n~~\u4ee3\u7801\u5c31\u81ea\u529b\u66f4\u751f\u5427~~",
        "postTime": 1581824994,
        "uid": 176990,
        "name": "Celtic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4667 \u3010[BalticOI 2011 Day1]Switch the Lamp On\u3011"
    },
    {
        "content": "# Luogu2243\u7535\u8def\u7ef4\u4fee\n[\u4f20\u9001\u95e8](https://www.luogu.org/problem/P2243)\n\n[\u4e0d\u6765\u4eba\u5bb6\u535a\u5ba2\u5eb7\u5eb7\u5417](https://www.cnblogs.com/Shiina-Rikka/p/11629327.html)\n# \u539f\u9898\n\u627e\u5230\u5de6\u4e0a\u89d2\u5230\u53f3\u4e0b\u89d2\u7684\u901a\u8def\u3002\u53ef\u4ee5\u65cb\u8f6c\u67d0\u4e00\u4e2a\u65b9\u5757\uff0c\u4ee3\u4ef7\u4e3a\u4e00\u3002\n![\u76f4\u63a5\u822c\u725b\u5ba2\u7684\u56fe\u4e86](https://uploadfiles.nowcoder.com/files/20190710/314053_1562717136849_2601-1.png)\nlyd\u4e66\u4e0a\u7684\u4f8b\u98982333\n# \u600e\u4e48\u505a\n\u5176\u5b9e\u601d\u8def\u5c31\u662flyd\u7684\u89e3\u6cd5\uff0c\u5199\u7684\u65f6\u5019\u6709\u4e00\u4e9b\u4f18\u5316\u89c9\u5f97\u633a\u6709\u5fc5\u8981\u5206\u4eab\u4e00\u4e0b\u3002\u6bd4\u5982\u4e09\u76ee\u8fd0\u7b97\u7b26\u8fd8\u6709\u4f4d\u8fd0\u7b97\u7684\u4f18\u5316\u3002\n\n\u5c06\u8fd9\u4e2a\u95ee\u9898\u8f6c\u5316\u4e3a\u4ece\u5de6\u4e0a\u5230\u53f3\u4e0b\u7684\u6700\u77ed\u8def\u95ee\u9898\u3002\u82e5\u8fd9\u4e2a\u89d2\u9700\u8981\u65cb\u8f6c\u5219\u662f\u6743\u503c\u4e3a1\u7684\u8def\u5f84\uff0c\u5426\u5219\u6743\u503c\u4e3a0\u3002\u8fd9\u4e2a\u65f6\u5019\u8dd1\u6700\u77ed\u8def\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u7531\u4e8e\u8def\u5f84\u7684\u6743\u503c\u5f88\u7279\u6b8a\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u53cc\u7aef\u961f\u5217\u4f18\u5316\u3002\u5f53\u6743\u503c\u4e3a0\u65f6\u4ece\u961f\u5934\u63d2\u5165\uff0c\u6743\u503c\u4e3a1\u65f6\u4ece\u961f\u5c3e\u63d2\u5165\u3002\u6bcf\u6b21\u53d6\u961f\u5934\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u4e00\u76f4\u5728\u8d70\u6700\u4f18\u89e3\u3002\u800c\u4e0d\u9700\u8981dijkstra\u5806\u4f18\u5316\u6216\u8005SPFA\u591a\u6b21\u5bfb\u627e\u6700\u4f18\u89e3\u3002\n\n\u7801\u4ee3\u7801\u65f6\u8fd8\u6709\u4f18\u5316\u6ce8\u91ca\u5728\u4ee3\u7801\u91cc\u4e86\u3002\n# \u6254\u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nnamespace sss\n{\nconst int MAXN = 505;\nint r, c;\n//\u4e0b\u4e00\u6b65\u7684\u65b9\u5411\uff0c\u51cf\u5c11\u7801\u91cf\nconst int step_x[] = {1, -1, 1, -1};\nconst int step_y[] = {1, -1, -1, 1};\nchar s[MAXN][MAXN];\nint d[MAXN][MAXN];\nbool v[MAXN][MAXN];\nstruct node\n{\n    int x, y;\n    node() {}\n    node(const int &_x, const int &_y)\n    {\n        x = _x, y = _y;\n    }\n};\n//\u4e0b\u4e00\u4e2a\u70b9\ninline node nextpoint(const node &now, const int &sp)\n{\n    return node(now.x + step_x[sp], now.y + step_y[sp]);\n}\n//\u8def\u5f84\u5bf9\u5e94\u7684\u7535\u7ebf\ninline node queryline(const node &now, const node &nxt)\n{\n    return node(max(now.x, nxt.x), max(now.y, nxt.y));\n}\n//\u5224\u65ad\u662f\u5426\u5408\u6cd5\ninline bool judge(const node &now, const int &sp)\n{\n    return now.x >= 0 && now.y >= 0 && now.x <= r && now.y <= c;\n}\n//bfs\u627e\u6700\u4f18\u89e3\ninline void bfs()\n{\n    //\u591a\u6d4b\u4e0d\u6e05\u7a7a\uff0c\u7206\u96f6\u4e24\u884c\u6cea\n    memset(d, 0x3f, sizeof(d));\n    memset(v, 0, sizeof(v));\n    deque<node> q;\n    d[0][0] = 0;\n    q.push_back(node(0, 0));\n    while (q.size())\n    {\n        node now = q.front();\n        q.pop_front();\n        if (v[now.x][now.y])\n            continue;\n        v[now.x][now.y] = true;\n        //\u56db\u6b21\u5faa\u73af\u627e\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u4e0d\u7528\u624b\u5199\u56db\u6b21\n        for (register int sp = 0; sp <= 3; ++sp)\n        {\n            //\u4e0b\u4e00\u4e2a\u70b9\n            node nxt = nextpoint(now, sp);\n            //\u5bf9\u5e94\u7684\u7535\u7ebf\n            node lin = queryline(now, nxt);\n            //\u5408\u6cd5\u624d\u8d70\n            if (judge(nxt, sp))\n            {\n                //\u8fd9\u4e2a\u4f4d\u7f6e\u4f7f\u7528\u4f4d\u8fd0\u7b97\u8fdb\u884c\u4f18\u5316\u3002\n                int z = (s[lin.x][lin.y] == '\\\\') ^ (sp == 0 || sp == 1);\n                if (d[nxt.x][nxt.y] > d[now.x][now.y] + z)\n                {\n                    d[nxt.x][nxt.y] = d[now.x][now.y] + z;\n                    //\u4e09\u76ee\u8fd0\u7b97\u7b26\u51cf\u5c11\u7801\u91cf\uff08\u61d2\uff09\n                    z ? q.push_back(nxt) : q.push_front(nxt);\n                }\n            }\n        }\n    }\n}\ninline void sov()\n{\n    //\u591a\u6d4b\u4e0d\u6e05\u7a7a\uff0c\u7206\u96f6\u4e24\u884c\u6cea\n    memset(s, 0, sizeof(s));\n    scanf(\"%d %d\", &r, &c);\n    for (register int i = 1; i <= r; ++i)\n        scanf(\"%s\", s[i] + 1);\n    bfs();\n    //\u4e09\u76ee\u8fd0\u7b97\u7b26\u51cf\u5c11\u7801\u91cf\uff08\u61d2\uff09\n    d[r][c] == 0x3f3f3f3f ? (printf(\"NO SOLUTION\\n\")) : (printf(\"%d\\n\", d[r][c]));\n}\n} // namespace sss\nint main()\n{\n    int T;\n    scanf(\"%d\", &T);\n    for (register int ttt = 1; ttt <= T; ++ttt)\n    {\n        sss::sov();\n    }\n}\n```",
        "postTime": 1570409170,
        "uid": 143186,
        "name": "lky1433223",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2243 \u3010\u7535\u8def\u7ef4\u4fee\u3011"
    },
    {
        "content": "\n### \u7535\u8def\u7ef4\u4fee\n\n\u8fd9\u9053\u9898\u7684\u89e3\u6cd5\u662f\u5148\u5efa\u8fb9\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5355\u4f4d\u6b63\u65b9\u5f62\uff0c\u5c06\u6709\u8fb9\u76f8\u8fde\u7684\u4e24\u4e2a\u5bf9\u89d2\u5efa\u4e00\u6761\u957f\u5ea6\u4e3a0\u7684\u65e0\u5411\u8fb9\uff0c\u53e6\u5916\u4e24\u4e2a\u5bf9\u89d2\u5efa\u4e00\u6761\u957f\u5ea6\u4e3a1\u7684\u65e0\u5411\u8fb9\u3002\u7136\u540e\u53ef\u4ee5\u8dd1\u6700\u77ed\u8def\u6216\u8005\u7528**\u53cc\u7aef\u961f\u5217bfs**(**0-1bfs**)\u3002\n\n\u8dd1\u6700\u77ed\u8def\u7684\u8bdd\u8981\u6ce8\u610f\u7531\u4e8e\u662f\u7f51\u683c\u56fespfa\u4f1a\u70b8\u6389\uff0c\u6240\u4ee5\u8981\u7528\u5806\u4f18\u5316\u7684dijkstra( ~~\u4e0d\u4f1a\u4e0d\u52a0\u5806\u4f18\u5316\u7684dijkstra (^_^)~~  )\n\n\u56e0\u4e3a\u5728\u7ec3\u4e60\u5e7f\u641c\uff0c\u6240\u4ee5\u6211\u7528\u7684\u662f\u53cc\u7aef\u961f\u5217bfs\n\n\u5f53\u6211\u4eec\u9047\u5230\u8fb9\u6743\u53ea\u67091\u7684\u60c5\u51b5\u65f6\uff0c\u663e\u7136\u76f4\u63a5bfs\uff0c\u7136\u540e\u7b2c\u4e00\u6b21\u8bbf\u95ee\u5230\u67d0\u4e2a\u70b9\u7684\u201c\u65f6\u95f4\u201d\u5c31\u662f\u5230\u5b83\u7684\u6700\u77ed\u8def\u5f84\n\n\u5f53\u8fb9\u6743\u540c\u65f6\u5b58\u57281\u548c0\u4e24\u79cd\u60c5\u51b5\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u91c7\u7528\u53cc\u7aef\u961f\u5217bfs\uff0c\u4e5f\u53eb\u4f5c0-1bfs\uff0c\u5c31\u662f\u8bbf\u95ee\u65f6\uff0c\u82e5\u8fb9\u6743\u4e3a0\uff0c\u5219\u628a\u76ee\u6807\u70b9v\u653e\u5728\u961f\u9996\uff0c\u82e5\u8fb9\u6743\u4e3a1\uff0c\u5219\u628a\u76ee\u6807\u70b9\u653e\u5728\u961f\u5c3e\uff0c\u8fd9\u6837\u662f\u4e3a\u4e86\u4f7f\u5f97\u8fb9\u6743\u4e3a0\u65f6\u7684\u76ee\u6807\u70b9v\u5148\u88ab\u8bbf\u95ee\u3002\n\n\u6211\u6309\u7167\u8fd9\u4e2a\u601d\u8def\u505a\u4e86\uff0c\u4f46\u5374WA\u4e86\uff0c\u540e\u6765\u6211\u4e00\u770b\u9898\u89e3\uff0c\u961f\u5217\u91cc\u7ef4\u62a4\u7684\u5c45\u7136\u4e0d\u662f\u70b9\uff0c\u800c\u662f\u8fb9\uff0c\u6211\u4e00\u76f4\u60f3\u4e0d\u901a\u4e3a\u4ec0\u4e48\uff0c\u627e\u4e86\u534a\u5929\u4e5f\u53ea\u6709\u9898\u89e3\u6a21\u7cca\u5730\u5199\u5230\uff0c\u7136\u540e\u6211\u5c31\u81ea\u5df1\u624b\u73a9\u4e86\u4e00\u628a\uff0c\u53d1\u73b0\u5982\u679c\u662f\u7ef4\u62a4\u70b9\uff0c\u90a3\u4e48\u6709\u53ef\u80fd\u4f1a\u51fa\u73b0\u8fd9\u6837\u7684\u60c5\u51b5\uff1a\u663e\u7136\u5982\u679c\u8fb9\u6743\u4e3a0\uff0c\u90a3\u4e48\u76ee\u6807\u70b9v\u4e0e\u70b9u\u5e94\u8be5\u5904\u4e8e\u5e7f\u641c\u7684\u540c\u4e00\u5c42\uff0c\u4f46\u5982\u679c\u662f\u7ef4\u62a4\u70b9\uff0c\u5c31\u53ef\u80fd\u4f1a\u51fa\u73b0\u70b9v\u5728\u88ab\u70b9u\u8bbf\u95ee\u5230\u4e4b\u524d\u88ab\u4e0b\u4e00\u5c42\u7684\u70b9\u63d0\u524d\u8bbf\u95ee\u4e86\uff08\u4e5f\u5c31\u662f\u7531\u8fd9\u4e00\u5c42\u7684\u70b9\u901a\u8fc7\u8fb9\u6743\u4e3a1\u7684\u8fb9\u5f97\u5230\u7684\u76ee\u6807\u70b9vv\u8bbf\u95ee\u8fc7\u6765\uff08\u56e0\u4e3a\u5982\u679c\u662f\u7ef4\u62a4\u70b9\uff0c\u90a3\u4e48\u5c31\u4f1a\u50cf\u662f\u4e00\u4e2a\u6df1\u641c\u7684\u8fc7\u7a0b\uff0c\u4f1a\u5728\u6211\u628a\u8fd9\u4e00\u5c42\u8bbf\u95ee\u5b8c\u4e4b\u524d\uff0c\u4e0b\u4e00\u5c42\u7684\u70b9\u5148\u628a\u8fd9\u4e00\u5c42\u7684\u70b9\u8bbf\u95ee\u4e86\uff09\uff09\u3002\u4f46\u5982\u679c\u6211\u4eec\u662f\u7ef4\u62a4\u8fb9\u7684\u8bdd\uff0c\u90a3\u4e48\u5c06\u4f1a\u8d77\u5230\u4e00\u4e2a\u6ede\u7559\u7684\u4f5c\u7528\uff0c\u80fd\u591f\u7559\u7ed9\u6211\u65f6\u95f4\uff0c\u8ba9\u6211\u5148\u628a\u8fd9\u4e00\u5c42\u7684\u8bbf\u95ee\u5b8c\u4e86\uff0c\u5728\u8bbf\u95ee\u4e0b\u4e00\u5c42\u3002\n\n\u8fd9\u662f\u6211WA\u6389\u7684\u8bbf\u95ee\u70b9\u7684\u4ee3\u7801\uff08\u6ce8\u91ca\u6389\u7684\u662f\u6211\u624b\u73a9\u641c\u7d22\u8fc7\u7a0b\u7684\u4ee3\u7801\uff09\n\n```c++\n#include <iostream>\n#include <queue>\n#include <deque>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\n#define Maxn 280000\nint n,m;\ndeque<int>q;\nint fir[Maxn],nxt[Maxn*2],vv[Maxn*2],edg[Maxn*2];\nint tot=0,ans=0;\nint vis[Maxn],dis[Maxn];\nvoid add(int u,int v,int w)\n{\n    nxt[++tot]=fir[u];\n    fir[u]=tot;\n    vv[tot]=v;\n    edg[tot]=w;\n}\n//int room[1000];\nint id(int x,int y){return (x-1)*(m+1)+y;}\nvoid bfs()\n{\n    memset(dis,-1,sizeof(dis));\n    q.push_front(id(1,1));vis[id(1,1)]=1;dis[id(1,1)]=0;\n    while(!q.empty())\n    {\n   //    int cnt=0;\n   //     printf(\"q:\");\n    //    while(!q.empty())\n     //   {\n     //       room[++cnt]=q.front();q.pop_front();\n     //       printf(\"%d \",room[cnt]);\n     //   }\n     //   printf(\"\\n\");\n      //       for(int i=cnt;i>=1;i--)q.push_front(room[i]);\n        int u=q.front();q.pop_front();\n     //   printf(\"u=%d dis[u]=%d\\n\",u,dis[u]);\n        for(int i=fir[u];i;i=nxt[i])\n        {\n           // printf(\"u->v: %d->%d\\n\",u,vv[i]);\n            int v=vv[i];\n            if(vis[v]==1)continue;\n            vis[v]=1;\n            dis[v]=dis[u]+edg[i];\n            if(v==id(n+1,m+1))return;\n            if(edg[i]==0)q.push_front(v);\n            else q.push_back(v);\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n    {\n        string str;cin>>str;\n        for(int j=1;j<=m;j++)\n        {\n            int x1=id(i,j),x2=id(i+1,j+1),y1=id(i+1,j),y2=id(i,j+1);\n            if(str[j-1]=='/')\n            {\n                add(x1,x2,1);add(x2,x1,1);\n                add(y1,y2,0);add(y2,y1,0);\n            }\n            else\n            {\n                add(x1,x2,0);add(x2,x1,0);\n                add(y1,y2,1);add(y2,y1,1);\n            }\n        }\n    }\n    bfs();\n /*           for(int i=1;i<=n+1;i++)\n        for(int j=1;j<=m+1;j++)\n        printf(\"id(%d,%d)=%d\\n\",i,j,id(i,j));\n    for(int i=1;i<=id(n+1,m+1);i++)\n        printf(\"dis[%d]=%d\\n\",i,dis[i]);\n    printf(\"id(n+1,m+1)=%d\\n\",id(n+1,m+1));printf(\"dis[%d]=%d\\n\",id(n+1,m+1),dis[id(n+1,m+1)]);*/\n    if(dis[id(n+1,m+1)]==-1)printf(\"NO SOLUTION\\n\");\n    else printf(\"%d\\n\",dis[id(n+1,m+1)]);\n    return 0;\n}\n\n```\n\n\u8fd9\u662f\u6b63\u89e3\n\n```c++\n#include <iostream>\n#include <queue>\n#include <deque>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\n#define Maxn 2800000\nint n,m;\ndeque<int>q;\nint fir[Maxn],nxt[Maxn*4],uu[Maxn*4],vv[Maxn*4],edg[Maxn*4];\nint tot=0,ans=0;\nint vis[Maxn],dis[Maxn];\nvoid add(int u,int v,int w)\n{\n    nxt[++tot]=fir[u];\n    fir[u]=tot;\n    uu[tot]=u;\n    vv[tot]=v;\n    edg[tot]=w;\n}\nint id(int x,int y){return (x-1)*(m+1)+y;}\nvoid bfs()\n{\n    memset(dis,-1,sizeof(dis));\n    memset(vis,0,sizeof(vis));\n    q.clear();\n    q.push_front(id(1,1));vis[id(1,1)]=1;dis[id(1,1)]=0;\n    while(!q.empty())\n    {\n        int e=q.front();q.pop_front();\n        int u=uu[e];int v=vv[e];\n        if(vis[v]==1)continue;\n        vis[v]=1;\n        dis[v]=dis[u]+edg[e];\n        if(v==id(n+1,m+1))return;\n        for(int i=fir[v];i;i=nxt[i])\n        {\n            if(vis[vv[i]]==1)continue;\n            if(edg[i]==0)q.push_front(i);\n            else q.push_back(i);\n        }\n    }\n}\nint main()\n{\n    int T;scanf(\"%d\",&T);\n    while(T--)\n    {\n        tot=0;memset(fir,0,sizeof(fir));\n        scanf(\"%d%d\",&n,&m);\n        for(int i=1;i<=n;i++)\n        {\n            string str;cin>>str;\n            for(int j=1;j<=m;j++)\n            {\n                int x1=id(i,j),x2=id(i+1,j+1),y1=id(i+1,j),y2=id(i,j+1);\n                if(str[j-1]=='/')\n                {\n                    add(x1,x2,1);add(x2,x1,1);\n                    add(y1,y2,0);add(y2,y1,0);\n                }\n                else\n                {\n                    add(x1,x2,0);add(x2,x1,0);\n                    add(y1,y2,1);add(y2,y1,1);\n                }\n            }\n        }\n        bfs();\n        if(dis[id(n+1,m+1)]==-1)printf(\"NO SOLUTION\\n\");\n        else printf(\"%d\\n\",dis[id(n+1,m+1)]);\n    }\n    return 0;\n}\n\n```\n\n[\u4e2a\u4eba\u535a\u5ba2](<https://www.cnblogs.com/LianQ/>)\n\n\n\n\n\n",
        "postTime": 1565622104,
        "uid": 101477,
        "name": "Akaina",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2243 \u3010\u7535\u8def\u7ef4\u4fee\u3011"
    },
    {
        "content": "\u770b\u4e86\u773c\u9898\u89e3\uff0c\u8c8c\u4f3c\u6ca1\u6709\u548c\u6211\u7684\u601d\u8def\u4e00\u6837\u7684....\n\n\u6240\u4ee5\u5c31\u6765\u5199\u4e00\u7bc7\u9898\u89e3...\n\n\u9996\u5148\u6211\u4e0d\u4f1a\u4ec0\u4e48\u53cc\u5411BFS\u4e5f\u61d2\u5f97\u5199\u6700\u77ed\u8def...\n\n\u6240\u4ee5\uff0c\u5c31\u4e00\u4e2aBFS ~~\u95ef\u904d\u5929\u4e0b~~\u518d\u52a0\u4e0a\u4e00\u4e2aDFS(BFS\u81ea\u7136\u4e5f\u53ef\u4ee5)\u8bb0\u5f55\u8054\u901a\u5feb\n\n\u8fd8\u662f\u5148\u5148\u770b\u9898\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/1286.png)\n\n~~\u611f\u6027\u7406\u89e3\u4e00\u4e0b...\u8c8c\u4f3c\u5982(1,2),(2,1),(1,4),(4,1)\u90fd\u5230\u4e0d\u4e86~~ \u867d\u7136\u8fd9\u4e2a\u4e48\u4ec0\u4e48\u7528\n\u597d\u4e86\uff0c\u8fdb\u5165\u4e3b\u9898\n\n\u9996\u5148\uff0cBFS\u662f\u4e00\u4e2a\u961f\u5217\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u7ed3\u679c\u7684\u771f\u786e\u6027\uff0c\u6240\u4ee5\u5b58\u5f53\u524d\u82b1\u8d39\u7684\u6570\u7ec4\u5fc5\u987b\u7b26\u5408\u5355\u8c03\u6027\uff0c\u4e0d\u7136\u5c31\u6ca1\u6cd5\u8fbe\u5230\u6700\u77ed\u8def\u7684\u6548\u679c\u4e86(~~\u5f00\u59cb\u5c31\u662f\u6ca1\u6ce8\u610f\u5355\u8c03\uff0c\u8c03\u4e862\u4e2a\u5c0f\u65f6~~)\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u70b9\u53ef\u4ee5\u76f4\u63a5\u5230\u56db\u4e2a\u70b9\uff0c\u800c\u5230\u8fd9\u56db\u4e2a\u70b9\u6240\u82b1\u8d39\u7684\u6b21\u6570\u4e3a1\u62160\uff0c\u6240\u4ee5\u53ea\u8981\u5f53\u961f\u4f0d\u4e2d\u6709\u4e00\u4e2a\u70b9Q\u65f6\uff0c\u7528DFS\u628aQ\u53ef\u4ee5\u82b1\u8d390(\u5373\u8054\u901a\u5feb)\u6b21\u5c31\u53ef\u4ee5\u5230\u8fbe\u7684\u70b9\u5168\u90e8\u653e\u8fdb\u961f\u5217\uff0c\u7136\u540e\uff0c\u5c31\u662f\u4e00\u4e2a\u88f8\u7684BFS\u6700\u77ed\u8def\u4e86...\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint queue_spend[1000000];//\u961f\u5217\u4e2d\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u6700\u5c11\u82b1\u8d39\nint queue_x[1000000],queue_y[1000000];//\u961f\u5217\u4e2d\u7684\u70b9\nint tail,head,N,M;\nint boo[605][605];\nint _map[605][605];\n//\u6ce8\u610f\uff1aboo\u5224\u65ad\u7684\u662f\u70b9\uff0c_map\u5224\u65ad\u7684\u662f\u8fb9\n/*\nB   C\n \\ /\n  A\n / \\\nD   E\nA\u70b9\u5b58\u7684\u662fA\u8fd9\u4e2a\u70b9\u548cA-E\u8fd9\u6761\u8fb9\n*/\nint now_spead;//\u8bb0\u5f55\u5f53\u524d\u7684\u82b1\u8d39\nvoid add(int x,int y,int spend)//\u52a0\u5165\u961f\u5217\n{\n\tqueue_x[++tail]=x;\n\tqueue_y[tail]=y;\n\tqueue_spend[tail]=spend;\n\tboo[x][y]=0;\n}\nvoid around(int first_x,int first_y)//\u5411\u56db\u5468\u5bfb\u627e\u53ef\u4ee5\u4e0d\u82b1\u8d39\u5c31\u53ef\u4ee5\u5230\u7684\u70b9\n{\n\tif(boo[first_x-1][first_y-1]&&_map[first_x-1][first_y-1]==0)\n\t//\u6ce8\u610f\u5f53\u5750\u6807\u662f\u51cf\u65f6\uff0c\u5b58\u8fb9\u548c\u5b58\u70b9\u90fd\u662f\u51cf\uff1b\u52a0\u65f6\uff0c\u5b58\u8fb9\u5c31\u662f\u5f53\u524d\u70b9\u5bf9\u5e94\u7684\u8fb9\n\t{add(first_x-1,first_y-1,now_spead);around(first_x-1,first_y-1);}\n\tif(boo[first_x+1][first_y+1]&&_map[first_x][first_y]==0)\n\t{add(first_x+1,first_y+1,now_spead);around(first_x+1,first_y+1);}\n\tif(boo[first_x+1][first_y-1]&&_map[first_x][first_y-1]==1)\n\t{add(first_x+1,first_y-1,now_spead);around(first_x+1,first_y-1);}\n\tif(boo[first_x-1][first_y+1]&&_map[first_x-1][first_y]==1)\n\t{add(first_x-1,first_y+1,now_spead);around(first_x-1,first_y+1);}\n}\nvoid write(int out)//\u8f93\u51fa\n{cout<<out<<endl;}\nvoid solve()\n{\n\tint i,j;\n\tfor(i=0;i<=N+2;i++)//\u628a\u8868\u8d4b\u7a7a\n\tfor(j=0;j<=M+2;j++)\n\tboo[i][j]=0;\n\tcin>>N>>M;\n\tchar ch;\n\tfor(i=1;i<=N;i++)//\u8bfb\u5165\n\tfor(j=1;j<=M;j++)\n\t{\n\t\tcin>>ch;\n\t\tif(ch=='/')_map[i][j]=1;//\u8bb0\u5f55\u4e0b\u8fb9\n\t\telse _map[i][j]=0;\n\t\t//\u8bb0\u5f55\u4e0b\u70b9\n\t\tboo[i][j]=1;\n\t\tif(i==N)\n\t\tboo[i+1][j]=1;\n\t\tif(j==M)\n\t\tboo[i][j+1]=1;\n\t\tif(i==N&&j==M)\n\t\tboo[i+1][j+1]=1;\n\t}\n\t//\u961f\u5217\u521d\u59cb\u5316\n\ttail=1;\n\thead=0;\n\tboo[1][1]=0;\n\tnow_spead=0;\n\taround(queue_x[1],queue_y[1]);//\u628a\u4e00\u5f00\u59cb\u5c31\u53ef\u4ee5\u76f4\u63a5\u5230\u8fbe\u7684\u70b9\u653e\u5165\u961f\u5217\uff0c\u5e76\u4e14\u82b1\u8d39\u662f0\n\twhile((++head)<=tail)\n\t{\n\t\tif(queue_x[head]==N+1&&queue_y[head]==M+1)//\u627e\u5230\u7ed3\u679c\n\t\t{\n\t\t\twrite(queue_spend[head]);\n\t\t\treturn;\n\t\t}\n\t\tif(_map[queue_x[head]-1][queue_y[head]-1]==1&&boo[queue_x[head]-1][queue_y[head]-1])//\u5982\u679c\u8fd9\u4e2a\u65b9\u5411\u884c\u8d70\u8981\u82b1\u8d391\u6b21\u7684\u8bdd\u5c31\u5165\u961f\uff0c\u6bd4\u8f83\u75280\u6b21\u7684\u65e9\u5165\u961f\u4e86\n\t\t{\n\t\t\tadd(queue_x[head]-1,queue_y[head]-1,queue_spend[head]+1);\n\t\t\tnow_spead=queue_spend[tail];\n\t\t\taround(queue_x[tail],queue_y[tail]);//\u6ce8\u610f\u8fd9\u91cc\u4e00\u5b9a\u5c31\u8981\u628a\u62d3\u5c55\u505a\u6389\uff0c\u4e0d\u7136\u51c9\u51c9\uff0c\u6211\u5c31\u662f\u5728\u5728\u8fd9\u91cc\u88ab\u5361\u4e86\n\t\t}\n\t\tif(_map[queue_x[head]][queue_y[head]]==1&&boo[queue_x[head]+1][queue_y[head]+1])//\u4ee5\u4e0b\u540c\u7406\n\t\t{\n\t\t\tadd(queue_x[head]+1,queue_y[head]+1,queue_spend[head]+1);\n\t\t\tnow_spead=queue_spend[tail];\n\t\t\taround(queue_x[tail],queue_y[tail]);\n\t\t}\n\t\tif(_map[queue_x[head]-1][queue_y[head]]==0&&boo[queue_x[head]-1][queue_y[head]+1])\n\t\t{\n\t\t\tadd(queue_x[head]-1,queue_y[head]+1,queue_spend[head]+1);\n\t\t\tnow_spead=queue_spend[tail];\n\t\t\taround(queue_x[tail],queue_y[tail]);\n\t\t}\n\t\tif(_map[queue_x[head]][queue_y[head]-1]==0&&boo[queue_x[head]+1][queue_y[head]-1])\n\t\t{\n\t\t\tadd(queue_x[head]+1,queue_y[head]-1,queue_spend[head]+1);\n\t\t\tnow_spead=queue_spend[tail];\n\t\t\taround(queue_x[tail],queue_y[tail]);\n\t\t}\n\t}\n\tcout<<\"NO SOLUTION\"<<endl;//\u65e0\u89e3\n}\nint main()\n{\n\t//\u8fd9\u91cc\u4e00\u76f4\u90fd\u4e0d\u4f1a\u6539\uff0c\u5c31\u76f4\u63a5\u653e\u5728\u961f\u4f0d\u4e2d\n\tqueue_x[1]=1;\n\tqueue_y[1]=1;\n\tqueue_spend[1]=0;\n\tint T;\n\tcin>>T;//\u8fdb\u884cT\u6b21\u64cd\u4f5c\n\tint i;\n\tfor(i=1;i<=T;i++)\n\tsolve();\n}\n```\n\nQAQ",
        "postTime": 1555767413,
        "uid": 86625,
        "name": "Limit",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2243 \u3010\u7535\u8def\u7ef4\u4fee\u3011"
    },
    {
        "content": "```c\n#include<cstdio>\n#include<iostream>\n#include<vector>\n#include<cstring>\n#include<queue>\nusing namespace std;\nint n,r,c;char ch;int vis[510*510];int d[510*510];\nstruct Edge{\n    int to,w;//to\u8bb0\u5f55\u70b9\uff0cw\u8bb0\u5f55\u8ddd\u79bb\n};\nvector<Edge>g[510*510];//\u90bb\u63a5\u8868\u52a0\u7ed3\u6784\u4f53\u50a8\u5b58\u8fb9\u548c\u70b9\ndeque<int>q;//\u53cc\u7aef\u961f\u5217\u4f18\u5316\nvoid spfa(int i){\n    memset(d,0x3f,sizeof(d));\n    memset(vis,0,sizeof(vis));\n    d[i]=0;vis[i]=1;q.push_front(i);\n    while(!q.empty()){\n        int f1=q.front();q.pop_front();vis[f1]=0;\n        if(f1==(r+1)*(c+1)+5) return;\n        for(int j=0;j<g[f1].size();j++){\n            Edge e=g[f1][j];\n            int to=e.to,s=e.w;\n            if(d[f1]+s<d[to]){\n                d[to]=d[f1]+s;\n                if(vis[to]==0){\n                    if(!q.empty()&&d[to]<=d[q.front()]) q.push_front(to);\n                    //\u8ba9\u79bb\u7740\u7ec8\u70b9\u8fd1\u4e14\u8ddd\u79bb\u77ed\u7684\u70b9\u4f18\u5148\u8fdb\u5165\u961f\u5217\n                    else q.push_back(to); \n                    vis[to]=1;\n                }\n            }\n        }\n    }\n}\nint main(){\n    cin>>n;\n    for(int k=1;k<=n;k++){\n        memset(g,0,sizeof(g));\n        cin>>r>>c;\n        for(int i=1;i<=r;i++)\n        for(int j=1;j<=c;j++){\n            cin>>ch;\n            int a=(i-1)*(c+1)+j;int b=(i-1)*(c+1)+j+1;\n            int C=i*(c+1)+j;int d=i*(c+1)+j+1;\n            if(ch=='\\\\'){\n                g[a].push_back((Edge){d,0});g[d].push_back((Edge){a,0});\n                g[b].push_back((Edge){C,1});g[C].push_back((Edge){b,1});\n            }\n            if(ch=='/'){\n                g[a].push_back((Edge){d,1});g[d].push_back((Edge){a,1});\n                g[b].push_back((Edge){C,0});g[C].push_back((Edge){b,0});\n            }\n        }\n    \tspfa(1);\n    \tif(d[(r+1)*(c+1)]==0x3f3f3f3f)cout<<\"NO SOLUTION\\n\";\n    \telse cout<<d[(r+1)*(c+1)]<<endl;\n    }\n    return 0;\n}\n```\n\u9644~\u53cc\u7aef\u961f\u5217\u4ee3\u7801\u5e94\u7528\n![]((https://graph.baidu.com/resource/1014f64e9df3ee0ab4f1401553996190.jpg)",
        "postTime": 1553996500,
        "uid": 124016,
        "name": "Meicow",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2243 \u3010\u7535\u8def\u7ef4\u4fee\u3011"
    },
    {
        "content": "# \u5173\u4e8e\u6b64\u9898\u7684\u53cc\u7aef\u961f\u5217\u89e3\u6cd5\n\u80fd\u7528\u56fe\u505a\uff0c\u4e0d\u8981\u7528bfs\uff0c~~\u6bd5\u7adf\u6211\u4e0d\u4f1a~~\n\n\u90a3\u4e48\u600e\u4e48\u6784\u5efa\u8fd9\u4e2a\u56fe\u5462\uff1f\n\n\u6211\u4eec\u4ece\u5de6\u4e0a\u70b9\u5230\u53f3\u4e0b\u70b9\u4e00\u6b21\u547d\u540d\u4e3a1\u30012\u30013........\n\n\u4e24\u4e2a\u76f8\u4e92\u8fde\u901a\u7684\u70b9\u8fb9\u6743\u4e3a\u4e00\uff0c\u53cd\u4e4b\u4e3a\u96f6\u3002\u4e8e\u662f\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u56fe\n\n\u03a3(\u3063 \u00b0\u0414 \u00b0;)\u3063\u90a3\u4e48SPFA\u8dd1\u4e00\u904d\u4e0d\u5c31\u89e3\u51b3\u4e86\u5417\n\n```cpp\nvoid spfa(int s){\n    queue<int>q;\n    //memset(d,0x3f,sizeof(d));\n    //memset(vis,0,sizeof(vis));\n    d[s]=0;\n    q.push(s);\n    vis[s]=1;\n    while (!q.empty()){\n        int u=q.front();q.pop();\n        vis[u]=0;\n        for(int i=0;i<g[u].size();i++){\n            int v=g[u][i].v,w=g[u][i].w;\n            if(d[u]+w<d[v]){\n                d[v]=d[u]+w;\n                if(vis[v]==0){\n                    q.push(v);\n                    vis[v]=1;\n                }\n            }\n        }\n    }\n}\n```\n\u7136\u800c\u8fd9\u6837\u5e76\u4e0d\u662f\u6700\u4f18\u7684\n\n\uff08\u4ee5\u4e0b\u91cd\u70b9\uff09\n\n\u53cc\u7aef\u961f\u5217\u89e3\u6cd5\u624d\u6b63\u5b97\n\n```cpp\nvoid spfa(int s){\n    deque<int>q;\n    //memset(d,0x3f,sizeof(d));\n    //memset(vis,0,sizeof(vis));\n    d[s]=0;\n    q.push_front(s);\n    vis[s]=1;\n    while (!q.empty()){\n        int u=q.front();q.pop_front();\n        vis[u]=0;\n        for(int i=0;i<g[u].size();i++){\n            int v=g[u][i].v,w=g[u][i].w;\n            if(d[u]+w<d[v]){\n                d[v]=d[u]+w;\n                if(vis[v]==0){\n                    if(!q.empty()&&d[v]<=d[q.front()])q.push_front(v);//\u6b64\u5904\u8fdb\u884c\u4f18\u5316\n                    else q.push_back(v);\n                    vis[v]=1;\n                }\n            }\n        }\n    }\n}\n```\n\u6ee1\u5206\n\n\u4ee5\u4e0b\u5b8c\u6574\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstring>\n#include<vector>\n#include<cstdio>\n#include<deque>\nusing namespace std;\nstruct node{\n    int v,w;\n};\nvector<node>g[1000000];\nint x,y,t; \nint vis[1000000];\nint d[1000000];\nvoid spfa(int s){//\u5e73\u51e1\u65e0\u5947\u7684spfa \n    deque<int>q;//\u53cc\u7aef\u961f\u5217q \n    memset(d,0x3f,sizeof(d));\n    memset(vis,0,sizeof(vis));\n    d[s]=0;\n    q.push_front(s);\n    vis[s]=1;\n    while (!q.empty()){\n        int u=q.front();q.pop_front();\n        vis[u]=0;\n        for(int i=0;i<g[u].size();i++){\n            int v=g[u][i].v,w=g[u][i].w;\n            if(d[u]+w<d[v]){\n                d[v]=d[u]+w;\n                if(vis[v]==0){\n                    if(!q.empty()&&d[v]<=d[q.front()])q.push_front(v);\n                    else q.push_back(v);\n                    vis[v]=1;\n                }\n            }\n        }\n    }\n}\t\n\nint main(){\n    cin>>x>>y;\n    t=(x+1)*(y+1);//t\u53f7\u70b9\uff0c\u5373\u6700\u53f3\u4e0b\u89d2\u7684\u70b9 \n    for(int i=1;i<=t;i++)g[i].clear();\n    for(int i=1;i<=x;i++){\n        char p[1000][1000];\n        for(int j=1;j<=y;j++){\n            cin>>p[i][j];\t\n            if(p[i][j]=='\\\\'){\n                g[(i-1)*(y+1)+j].push_back((node){i*(y+1)+j+1,0});//\u6b64\u5904\u6784\u9020\u56fe \n                g[i*(y+1)+j+1].push_back((node){(i-1)*(y+1)+j,0});\n                g[(i-1)*(y+1)+j+1].push_back((node){i*(y+1)+j,1});\n                g[i*(y+1)+j].push_back((node){(i-1)*(y+1)+j+1,1});\n            }\n            else {\n                g[(i-1)*(y+1)+j].push_back((node){i*(y+1)+j+1,1});\n                g[i*(y+1)+j+1].push_back((node){(i-1)*(y+1)+j,1});\n                g[(i-1)*(y+1)+j+1].push_back((node){i*(y+1)+j,0});\n                g[i*(y+1)+j].push_back((node){(i-1)*(y+1)+j+1,0});\n            }\n        }\n    }\n    spfa(1);\n    if(d[t]==0x3f3f3f3f)cout<<\"NO SOLUTION\\n\";//\u4ece1\u53f7\u70b9\u5230t\u53f7\u70b9\u7684\u8ddd\u79bb \n    else cout<<d[t]<<endl;\n    return 0;\n}\n```\n",
        "postTime": 1553867731,
        "uid": 125133,
        "name": "\u6708\u79bb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4667 \u3010[BalticOI 2011 Day1]Switch the Lamp On\u3011"
    },
    {
        "content": "~~\u4e3a\u4ec0\u4e48\u90fd\u662f\u7ebf\u6bb5\u6811+Dij~~\n\n\n\u9996\u5148\u6bcf\u4e2a\u5143\u4ef6\u53ea\u6709\u4e24\u79cd\u72b6\u6001\uff0c\u4e5f\u5c31\u662f\u8bf4\u6700\u591a\u6bcf\u4e2a\u5143\u4ef6\u53ea\u9700\u8981\u8f6c1\u6b21\u3002\n\n\n\u7136\u540e\u663e\u7136\u53ef\u4ee5**\u6700\u77ed\u8def**\uff0c\u4ece\u6bcf\u4e2a\u70b9\u5411\u5de6\u4e0a\u3001\u53f3\u4e0a\u3001\u5de6\u4e0b\u3001\u53f3\u4e0b\u62d3\u5c55\u3002\n\n\n\u65e0\u8111\u4e71\u5199\u4e86\u4e2a\u88f8\u7684spfa\u7ed3\u679cWA\u98de...\n\n\n\u518d\u60f3\u60f3\u5c31\u80fd\u53d1\u73b0**\u5728\u677e\u5f1b\u7684\u65f6\u5019\uff0cdis\u90fd\u662f\u5728\u5f53\u524d\u70b9\u7684\u57fa\u7840\u4e0a+0(\u4e0d\u52a0)\u6216+1\u7684\u3002**\n\n\n\u4e8e\u662f\u6709\u4e86\u4e00\u79cd**\u53cc\u5411\u961f\u5217(deque)**\u7684\u795e\u5947\u505a\u6cd5\u3002\n\n\n\u5728bfs\u7684\u65f6\u5019\uff0c\u5982\u679c\u5f53\u524d\u589e\u52a0\u7684\u8ddd\u79bb\u4e3a0(\u5373\u4e0d\u9700\u8981\u65cb\u8f6c)\u5219\u628a\u65b0\u70b9**\u653e\u5230\u961f\u5934**\u76f4\u63a5\u8fdb\u884c\u4e0b\u4e00\u8f6e\u677e\u5f1b\uff0c\u5426\u5219**\u653e\u5230\u961f\u5c3e**\u3002\n\n\n\u5bb9\u6613\u770b\u51fa\u6765\uff0c\u8fd9\u6837bfs\u5c31\u80fd**\u4fdd\u8bc1\u7b2c\u4e00\u6b21\u641c\u5230\u76ee\u6807\u70b9\u7684\u65f6\u5019\u4e00\u5b9a\u662f\u6700\u77ed\u8def**\u3002\n\n\n~~\u4e0d\u5f00O2\u5c31\u8f7b\u677e\u8fc7\u4e86...~~\n\n```cpp\n//\u75281\u8868\u793a'/'\uff0c2\u8868\u793a'\\'\u3002\u6bcf\u4e2a\u5143\u4ef6\u5de6\u4e0a\u89d2\u7684\u5750\u6807\u4e3a\u5176\u7f16\u53f7,(1,1)\u4e3a\u8d77\u70b9,(n+1,m+1)\u4e3a\u7ec8\u70b9\n#include <iostream>\n#include <cstdio>\n#include <cctype>\n#include <deque>\n#include <cstring>\n#define il inline\n#define vd void\n#define rep(i,x,y) for(register int i=x;i<=y;++i)\n#define drp(i,x,y) for(register int i=x;i>=y;--i)\nusing namespace std;\nconst int Len=2333333,aa[4][2]={{-1,-1},{-1,1},{1,-1},{1,1}},ab[4]={2,1,1,2},p[4][2]={{-1,-1},{-1,0},{0,-1},{0,0}};\n//aa\u4e3a4\u4e2a\u65b9\u5411\u7684\u4f4d\u79fb\uff0cab\u4e3a4\u4e2a\u5143\u4ef6\u671f\u671b\u7684\u65b9\u5411\uff0cp\u4e3a4\u4e2a\u5143\u4ef6\u7f16\u53f7\u7684\u4f4d\u79fb\nchar buf[Len],*p1=buf,*p2=buf,duf[Len],*q1=duf;\nil char gc(); il int rd(); il vd pc(char c); il vd rt(int x); il vd flush();\nint n,m,nx,ny,d,c[505][505],dis[505][505];\nstruct P{int x,y,d;}u;\ndeque <P> q;\nil int Get(){char c; while((c=gc())!='/'&&c!='\\\\'); return c=='/'?1:2;}//\u6ce8\u610f'\\'\u7684\u8bfb\u5165\nint main(){\n    n=rd(),m=rd(),memset(dis,0x3f,sizeof(dis));\n    rep(i,1,n) rep(j,1,m) c[i][j]=Get();\n    q.push_back((P){1,1,0}),dis[1][1]=0;\n    while(!q.empty()){\n        u=q.front(),q.pop_front(); //front()\u961f\u5934,pop_front()\u5f39\u51fa\u961f\u5934\n        rep(i,0,3){\n            nx=u.x+aa[i][0],ny=u.y+aa[i][1],d=c[u.x+p[i][0]][u.y+p[i][1]]!=ab[i]; //\u82e5\u65b9\u5411\u4e0d\u76f8\u7b49,\u5219d=1,\u8868\u793a\u9700\u89811\u6b65\u6765\u8f6c\u5411\n            if(nx&&ny&&nx<n+2&&ny<m+2&&dis[nx][ny]>dis[u.x][u.y]+d){\n                dis[nx][ny]=dis[u.x][u.y]+d,\n                d?q.push_back((P){nx,ny,dis[nx][ny]}):q.push_front((P){nx,ny,dis[nx][ny]}); //\u5224\u65ad\u63d2\u5165\u65b9\u5411,push_front()\u63d2\u5230\u961f\u5934,push_back()\u63d2\u5230\u961f\u5c3e\n                if(nx==n+1&&ny==m+1) break; //\u8fd9\u91cc\u76f4\u63a5break\n            }\n        }\n        if(nx==n+1&&ny==m+1) break;\n    }\n    if(dis[n+1][m+1]!=0x3f3f3f3f) rt(dis[n+1][m+1]);\n    else printf(\"NO SOLUTION\");\n    return flush(),0;\n}//\u4ee5\u4e0b\u4e3a\u8bfb\u4f18\u8f93\u4f18\n\nil char gc(){return p1==p2&&(p2=(p1=buf)+fread(buf,1,Len,stdin),p1==p2)?-1:*p1++;}\nil int rd(){char c; int f=1;\n    while(!isdigit(c=gc())&&c!='-');\n    c=='-'?f=-1,c=gc():0; int x=c^48;\n    while(isdigit(c=gc())) x=((x+(x<<2))<<1)+(c^48);\n    return x*f;\n}\nil vd pc(char c){q1==duf+Len&&fwrite(q1=duf,1,Len,stdout),*q1++=c;}\nil vd rt(int x){x<0?pc('-'),x=-x:0,pc((x>=10?rt(x/10),x%10:x)+48);}\nil vd flush(){fwrite(duf,1,q1-duf,stdout);}\n```",
        "postTime": 1537441557,
        "uid": 27463,
        "name": "Shallowy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4667 \u3010[BalticOI 2011 Day1]Switch the Lamp On\u3011"
    },
    {
        "content": "## \u53cc\u7aef\u961f\u5217BFS\n\u8fd9\u9053\u9898\u7528\u5230\u4e86\u53cc\u7aef\u961f\u5217BFS\u3002\n\n\u601d\u8def\u70b9\u62e8\uff1a\n\u6211\u4eec\u53ef\u4ee5\u628a\u7535\u8def\u677f\u4e0a\u7684\u6bcf\u4e2a\u683c\u70b9\uff08\u6a2a\u7ebf\u4e0e\u7ad6\u7ebf\u7684\u4ea4\u53c9\u70b9\uff09\u770b\u4f5c\u65e0\u50cf\u56fe\u4e2d\u7684\u7ed3\u70b9\uff0c\u82e5\u4e24\u4e2a\u7ed3\u70b9x\u548cy\u662f\u67d0\u4e2a\u5c0f\u65b9\u683c\u7684\u4e24\u4e2a\u5bf9\u89d2\uff0c\u5219\u5728x\u548cy\u4e4b\u95f4\u8fde\u8fb9\uff0c\u82e5\u8be5\u65b9\u683c\u4e2d\u7684\u6807\u51c6\u4ef6\uff08\u5bf9\u89d2\u7ebf\uff09\u4e0ex\u5230y\u7684\u7ebf\u6bb5\u91cd\u5408\uff0c\u5219\u8fb9\u6743\u4e3a0\uff1b\u82e5\u5782\u76f4\u76f8\u4ea4\u5219\u8fb9\u6743\u4e3a1.\uff08\u8bf4\u660e\u9700\u8981\u65cb\u8f6c1\u6b21\u624d\u80fd\u8fde\u901a\uff09\u7136\u540e\uff0c\u6211\u4eec\u5728\u8fd9\u4e2a\u65e0\u5411\u56fe\u4e2d\u6c42\u51fa\u5de6\u4e0a\u89d2\u5230\u53f3\u4e0b\u89d2\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u5c31\u5f97\u5230\u4e86\u7ed3\u679c\u3002\n\u8fd9\u662f\u4e00\u4e2a\u8fb9\u6743\u8981\u4e48\u4e3a0\u8981\u4e48\u4e3a1\u7684\u65e0\u5411\u56fe\uff0c\u5728\u8fd9\u6837\u7684\u56fe\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u53cc\u7aef\u961f\u5217\u5e7f\u5ea6\u641c\u7d20\u6765\u8ba1\u7b97\uff0c\u7b97\u6cd5\u7684\u6574\u9898\u6846\u67b6\u4e3a\u4e00\u822c\u7684\u5e7f\u641c\u7c7b\u4f3c\uff0c\u53ea\u662f\u5728\u6bcf\u4e2a\u7ed3\u70b9\u4e0a\u6cbf\u5206\u652f\u6269\u5c55\u65f6\u7a0d\u4f5c\u6539\u53d8\uff0c\u5982\u679c\u8fd9\u6761\u5206\u652f\u662f\u8fb9\u6743\u4e3a0\u7684\u8fb9\uff0c\u5c31\u628a\u6cbf\u8be5\u5206\u652f\u5230\u8fbe\u7684\u65b0\u7ed3\u70b9\u4ece\u961f\u5934\u5165\u961f\uff0c\u5982\u679c\u8fd9\u6761\u5206\u652f\u662f\u8fb9\u6743\u4e3a1\u7684\u8fb9\uff0c\u5c31\u50cf\u4e00\u822c\u7684\u5e7f\u5ea6\u641c\u7d22\u4e00\u6837\u4ece\u961f\u5c3e\u5165\u961f\uff0c\u8fd9\u6837\u4e00\u6765\uff0c\u6211\u4eec\u5c31\u4ecd\u7136\u80fd\u4fdd\u8bc1\u4efb\u610f\u65f6\u523b\u5e7f\u641c\u961f\u5217\u4e2d\u7684\u7ed3\u70b9\u5bf9\u5e94\u7684\u8ddd\u79bb\u503c\u90fd\u5177\u6709\u201c\u4e24\u6bb5\u6027\u201d\u548c\u201c\u5355\u8c03\u6027\u201d\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u4ece\u961f\u5934\u51fa\u5217\u65f6\uff0c\u5c31\u80fd\u5f97\u5230\u4ece\u5de6\u4e0a\u89d2\u5230\u8be5\u7ed3\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\u3002\n\u56e0\u4e3a\u6bcf\u4e2a\u8282\u70b9\u90fd\u53ea\u8bbf\u95ee\u4e86\u4e00\u904d\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO\uff08R*C\uff09\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<algorithm>\n#include<string.h>\nusing namespace std;\nconst int cap=500010;\nint dist[510][510];\nchar map[510][510];\nbool proc[510][510];\npair<int ,int >queue[cap*2];\nint r,c,li,ri;\ninline bool valid(int x,int y) {\n\treturn x>=0&&x<=r&&y>=0&&y<=c;\n}\ninline void que_add(int x,int y,int v){\n\tif(dist[x][y]<0||v<dist[x][y]) {\n\t\tdist[x][y]=v;\n\t\tif(li==ri||v>dist[queue[li].first][queue[li].second])queue[ri++]=make_pair(x,y);\n\t\telse queue[--li]=make_pair(x,y);\n\t}\n}\nint main() {\n\tint kase;\n\tfor(scanf(\"%d\",&kase); kase; --kase)\n\t {\n\t\tcin>>r>>c;\n\t\tif((r+c)%2)\n\t\t {\n\t\t\tfor(int i=0; i<r; i++)cin>>map[i];\n\t\t\tcout<<\"NO SOLUTION\\n\";\n\t\t} \n\t\telse {\n\t\t\tfor(int i=0; i<r; i++)cin>>map[i];\n\t\t\tli=ri=cap;\n\t\t\tqueue[ri++]=make_pair(0,0);\n\t\t\tmemset(dist,-1,sizeof dist),dist[0][0]=0;\n\t\t\tmemset(proc,false,sizeof proc);\n\t\t\twhile(li!=ri) \n\t\t\t{\n\t\t\t\tint cx=queue[li].first,cy=queue[li].second;\n\t\t\t\t++li;\n\t\t\t\tif(valid(cx-1,cy-1))\n\t\t\t\t {\n\t\t\t\t\tif(map[cx-1][cy-1]=='\\\\')que_add(cx-1,cy-1,dist[cx][cy]);\n\t\t\t\t\telse que_add(cx-1,cy-1,dist[cx][cy]+1);\n\t\t\t\t}\n\t\t\t\tif(valid(cx-1,cy+1)) {\n\t\t\t\t\tif(map[cx-1][cy]=='/')que_add(cx-1,cy+1,dist[cx][cy]);\n\t\t\t\t\telse que_add(cx-1,cy+1,dist[cx][cy]+1);\n\t\t\t\t}\n\t\t\t\tif(valid(cx+1,cy-1)) {\n\t\t\t\t\tif(map[cx][cy-1]=='/')que_add(cx+1,cy-1,dist[cx][cy]);\n\t\t\t\t\telse que_add(cx+1,cy-1,dist[cx][cy]+1);\n\t\t\t\t}\n\t\t\t\tif(valid(cx+1,cy+1)) {\n\t\t\t\t\tif(map[cx][cy]=='\\\\')que_add(cx+1,cy+1,dist[cx][cy]);\n\t\t\t\t\telse que_add(cx+1,cy+1,dist[cx][cy]+1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",dist[r][c]);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1572013894,
        "uid": 230323,
        "name": "\u10e6\ufe4f\ufeec\u5317\u2766\u6800",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2243 \u3010\u7535\u8def\u7ef4\u4fee\u3011"
    },
    {
        "content": "\u4e4b\u524d\u89c9\u5f97\u8fd9\u4e1c\u897f\u633a\u7b80\u5355...\u7ed3\u679c\u4e00\u5199\u624d\u77e5\u9053\u81ea\u5df1\u6839\u672c\u4e0d\u4f1a...\n\n### 0.\u8003\u8651\u4e00\u5f20\u65e0\u5411\u56fe\uff0c\u5176\u8fb9\u6743\u5168\u4e3a$1$\n\n\u76f4\u63a5$BFS$\u6269\u5c55\u5373\u53ef.\n\n### 1.\u8003\u8651\u4e00\u5f20\u65e0\u5411\u56fe\uff0c\u5176\u8fb9\u6743\u975e\u8d1f\n\n$dijkstra$\u5373\u53ef.\u6700\u597d\u7528$zkw$\u7ebf\u6bb5\u6811\u4f18\u5316\uff0c\u5e38\u6570\u6bd4\u914d\u5bf9\u5806\u7565\u5c0f\n\n\u987a\u4fbf\u8003\u8651\u4e00\u4e0b$dijkstra$\u7684\u539f\u7406\uff0c\u672c\u8d28\u53ef\u4ee5\u7b97\u4e00\u4e2a$dp$\uff0c\u6bcf\u6b21\u7528\u5f53\u524d\u6700\u4f18\u7684\u70b9\u66f4\u65b0\u5176\u4ed6\u70b9\uff0c\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u5f53\u524d\u6700\u4f18\u70b9.\n\n### 2.\u8003\u8651\u4e00\u5f20\u65e0\u5411\u56fe\uff0c\u5176\u8fb9\u6743\u4e3a$0$\u6216$1$\n\n\u7ed3\u5408$0$\u548c$1$.\u4f7f\u7528$BFS$\u8fdb\u884c\u6269\u5c55\u5e76\u7ef4\u62a4\u5f53\u524d\u6700\u4f18\u7684\u4f4d\u7f6e.\u663e\u7136\u6269\u5c55\u4e00\u4e2a\u8282\u70b9\u65f6\u8fb9\u6743\u4e3a$0$\u5219\u66f4\u4f18\uff0c\u6254\u5230\u961f\u9996\uff1b\u5426\u5219\u6254\u5230\u961f\u5c3e.\n\n\u6b63\u786e\u6027\uff1f\n\n\u9996\u5148\uff0c$BFS$\u7684\u961f\u5217\u4e2d\u4e00\u5b9a\u53ea\u6709\u4e24\u79cd\u6743\u503c\u4e14\u5dee\u4e3a$1$\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u5f52\u7eb3.\u6211\u4eec\u4e00\u5b9a\u662f\u53d6\u5c0f\u7684\u4e00\u4e9b\uff0c\u5e76\u4e14\u6700\u591a\u589e\u52a0$1$\uff0c\u6240\u4ee5\u59cb\u7ec8\u662f\u5dee\u4e3a$1$\u7684\u4e24\u79cd\u6743\u503c.\n\n\u7136\u540e\u961f\u9996\u5143\u7d20\u4e00\u5b9a\u4e0d\u4f1a\u518d\u88ab\u66f4\u65b0.\u8fd9\u4e2a\u4e5f\u662f\u663e\u7136\u7684\uff0c\u6240\u4ee5\u7b97\u6cd5\u7684\u6b63\u786e\u6027\u53ef\u4ee5\u4fdd\u8bc1.\n\n\u8003\u8651\u4e00\u4e2a\u95ee\u9898.\u5982\u679c\u6211\u628a\u4e00\u4e2a\u4e1c\u897f\u6254\u5230\u4e86\u961f\u5c3e\uff0c\u4f46\u540e\u6765\u5b83\u53c8\u53ef\u4ee5\u88ab\u66f4\u65b0\uff0c\u600e\u4e48\u5904\u7406\u5462\uff1f\u4eff\u7167$dijkstra$\uff0c\u53ea\u9700\u8981\u8bb0\u5f55\u4e00\u4e2a\u70b9\u7684\u771f\u6b63\u6700\u77ed\u8def\uff0c\u961f\u5217\u91cc\u5b58\u7684\u662f\u67d0\u4e2a\u65f6\u523b\u7684\u6700\u77ed\u8def\uff0c\u5982\u679c\u5b83\u5927\u4e8e\u771f\u6b63\u7684\u6700\u77ed\u8def\u5c31\u4e0d\u8fdb\u884c\u6269\u5c55.\n\n\u6bcf\u4e2a\u70b9\u6700\u591a\u8fdb\u961f\u4e24\u6b21\uff0c\u590d\u6742\u5ea6$O(n)$\n\n\u5efa\u8bae\u624b\u5199\u53cc\u7aef\u961f\u5217.$stl::deque$\u901f\u5ea6\u6781\u6162.\u624b\u5199\u65b9\u6cd5...\u76f4\u63a5\u628a\u961f\u5934\u5f00\u591f\u5927\u5c31\u597d\u4e86233\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#define INF 1000000007\nusing namespace std;\nconst int N=3e6;\nint dis[N],n,m,mm,nxt[N],fst[N];\nchar st[1000];\nstruct Edge{int v,w;}e[N];\nstruct Node{int id,dis;}q[N];\nvoid ade(int u,int v,int w){e[++mm]=(Edge){v,w},nxt[mm]=fst[u],fst[u]=mm;}\nvoid Link(int u,int v,int w){ade(u,v,w),ade(v,u,w);}\nint id(int i,int j){return (i-1)*(m+1)+j;}\nvoid bfs()\n{\n\tint S=id(1,1);\n\tint head=1000000,tail=1000001;\n\tq[head+1]=(Node){S,0};dis[S]=0;\n\twhile(head<tail)\n\t{\n\t\tint u=q[++head].id,d=q[head].dis;if(d>dis[u])continue;\n\t\tfor(int i=fst[u];i;i=nxt[i])\n\t\t{\n\t\t\tint v=e[i].v;\n\t\t\tif(dis[u]+e[i].w>=dis[v])continue;\n\t\t\tif(e[i].w==0){q[head--]=(Node){v,dis[v]=dis[u]};}\n\t\t\telse q[++tail]=(Node){v,dis[v]=dis[u]+1};\n\t\t}\n\t}\n}\nvoid clear(int n)\n{\n\tfor(int i=1;i<=n;i++)fst[i]=0,dis[i]=INF;\n\tmm=0;\n}\nint main()\n{\n\tint T=1;scanf(\"%d\",&T);\n\twhile(T--)\n\t{\n\t\tscanf(\"%d%d\",&n,&m);\n\t\tclear(id(n+1,m+1));\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tscanf(\"%s\",st+1);\n\t\t\tfor(int j=1;j<=m;j++)\n\t\t\t\tif(st[j]=='/')Link(id(i+1,j),id(i,j+1),0),Link(id(i,j),id(i+1,j+1),1);\n\t\t\t\telse Link(id(i,j),id(i+1,j+1),0),Link(id(i+1,j),id(i,j+1),1);\n\t\t}\n\t\tbfs();\n\t\tif(dis[id(n+1,m+1)]==INF)puts(\"NO SOLUTION\");\n\t\telse printf(\"%d\\n\",dis[id(n+1,m+1)]);\n\t}\n}\n```",
        "postTime": 1556612662,
        "uid": 22136,
        "name": "qwaszx",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2243 \u3010\u7535\u8def\u7ef4\u4fee\u3011"
    },
    {
        "content": " \u8fd9\u9053\u9898\u662f\u4e00\u4e2a\u53cc\u7aef\u961f\u5217\u7684bfs\uff0c\u6240\u4ee5\u4e3b\u8981\u5199\u5982\u4f55\u52a0\u5165\u53cc\u7aef\u961f\u5217\uff08\u4e0d\u7528\u6539\u53d8\u65b9\u5411\u7684\u653e\u961f\u5217\u524d\u8fb9\uff0c\u9700\u8981\u7684\u653e\u540e\u8fb9\uff0c\u4ee5\u4fdd\u8bc1\u6700\u4f18\u89e3\uff09\uff0c\u4ee5\u53ca\u5224\u65ad\u589e\u52a0\u7b54\u6848\u5c31\u5f88\u597d\u5199\u4e86\uff0c~~\u4f46\u50cf\u6211\u8fd9\u4e48\u61d2\u7684\u4eba\uff0c\u600e\u4e48\u53ef\u80fd\u624b\u5199\u53cc\u7aef\u961f\u5217~~\uff0c\u4e8e\u662f\u8fd9\u91cc\u5f15\u5165STL\u2014\u2014**deque**\uff0c\u5934\u6587\u4ef6\u5c31\u662f<deque>,~~\u8fd8\u6709bits\uff0c\u597d\u50cfqueue\u4e5f\u6709~~\n \u5177\u4f53\u64cd\u4f5c\u5982\u4e0b\uff1a(~~\u518d\u4e5f\u4e0d\u7528\u62c5\u5fc3\u6570\u7ec4\u7206\u4e86\u5199\u5faa\u73af\u961f\u5217\u4e86\u5462~~)\n  \n####  \u58f0\u660e\uff1a\n  \n####   \tdeque<int>q;\uff08\u5f53\u7136\u662f\u53ef\u4ee5\u653epair,struct\u7684\uff09\n  \n  \n#### \u52a0\u5165\u961f\u5217\u524d\u7aef\n  \t\n###   \tq.push_front();\n  \n#### \u52a0\u5165\u961f\u5217\u540e\u7aef\n  \n### \u3000\u3000q.push_back();\n####   \u76f8\u5e94\u7684\u5220\u9664\u64cd\u4f5c\u5206\u522b\u4e3a\uff1a\n### \t\tq.pop_front()\u548cq.pop_back();\n  \n \u8fd8\u6709\u8981\u6ce8\u610f\u5173\u4e8e\u8fd9\u4e00\u9898\u7684\u4e00\u9898\u662f\uff0c\u6211\u4eec\u4e0d\u80fd\u662f\u7528\u6bcf\u4e2a\u683c\u5b50\u7684\u7535\u8def\u65b9\u5411\u6765\u641c\uff0c\u56e0\u4e3a\u4f60\u662f\u8981\u5bf9\u4e00\u4e9b\u7535\u8def\u65b9\u5411\u8fdb\u884c\u6539\u53d8\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u6bcf\u4e2a\u683c\u5b50\u7684\u4fe1\u606f\u5b58\u50a8\u5728\n\u5bf9\u5e94\u7684\u683c\u5b50\u7684\u5de6\u4e0a\u89d2\uff0c\u5efa\u7acb\uff08n+1\uff09*\uff08n+1\uff09\u7684\u56fe,\u4e5f\u5c31\u662f\u5bf9\u70b9\u6765\u8fdb\u884c\u641c\u7d22\uff0c\u6765\u5224\u65ad\u4e24\u4e2a\u70b9\u662f\u5426\u8054\u901a\uff08\u6240\u4ee5\u8dd1dijkstra\u4e5f\u662f\u53ef\u4ee5\u7684\uff09\u3002\n  \n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<queue>\n#include<deque>\n#include<cstdio>\nusing namespace std;\nconst int N=520,M=1e5;\nint T,n,m,dist[N][N],dx[4]={1,-1,1,-1},dy[4]={1,-1,-1,1};\nbool vis[N][N];\nchar s[N][N];\nstruct node\n{\n\tint x,y;\n};\ndeque<node>que;\nvoid add(bool f,int x,int y,int t)\n{\n\tif(dist[x][y]<=t&&vis[x][y])return;\n\tvis[x][y]=1;\n\tdist[x][y]=t;\n\tnode now;\n\tnow.x=x,now.y=y;\n\t(!f||que.empty())?que.push_back(now):que.push_front(now);\n}\nvoid bfs()\n{\n\tnode now;\n\tnow.x=0,now.y=0;\n\tque.push_back(now);\n\tvis[0][0]=1;\n\twhile(!que.empty())\n\t{\n\t\tnode w=que.front();\n\t\tque.pop_front();\n\t\tint x=w.x,y=w.y;\n\t\tint t=dist[x][y];\n\t\tfor(int i=0;i<4;i++)\n\t\t{\n\t\t\tint xx=x+dx[i],yy=y+dy[i];\n\t\t\tif(xx<0||yy<0||xx>n||yy>m)continue;\n\t\t\tif(i==0)s[x][y]=='\\\\'?add(1,xx,yy,t):add(0,xx,yy,t+1);\n\t\t\tif(i==1)s[xx][yy]=='\\\\'?add(1,xx,yy,t):add(0,xx,yy,t+1);\n\t\t\tif(i==2)s[x][yy]=='/'?add(1,xx,yy,t):add(0,xx,yy,t+1);\n\t\t\tif(i==3)s[xx][y]=='/'?add(1,xx,yy,t):add(0,xx,yy,t+1);//\u4e09\u6bcd\u538b\u884c\u7b80\u76f4\u4e0d\u8981\u592a\u597d\u7528\uff0c\uff08\u800c\u4e14\u8fd8\u5feb\uff09\n\t\t}\n\t}\n\tprintf(\"%d\\n\",dist[n][m]);\n}\nint main()\n{\n\tscanf(\"%d\",&T);\n\twhile(T--)\n\t{\n\t\tmemset(dist,0,sizeof(dist));\n\t\tmemset(vis,0,sizeof(vis));\n\t\tscanf(\"%d%d\",&n,&m);\n\t\tfor(int i=0;i<n;i++)scanf(\"%s\",s[i]);\n\t\tif((n+m)&1)\n\t\t{\n\t\t\tprintf(\"NO SOLUTION\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tbfs();\n\t}\n\treturn 0;\n}\n",
        "postTime": 1553587503,
        "uid": 103267,
        "name": "kxahcc",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2243 \u3010\u7535\u8def\u7ef4\u4fee\u3011"
    },
    {
        "content": "### \u9898\u5916\u8bdd \n\t\u80fd\u7528\u6700\u77ed\u8def\u5199\u7684\u7edd\u5bf9\u4e0d\u5199\u641c\u7d22\n### \u9898\u610f\n\t\u7ed9\u5b9a\u4e00\u5f20\u5168\u662f'\\'\u548c'/'\u7684\u56fe\uff0c\u6c42\u6700\u5c11\u9700\u8981\u65cb\u8f6c\u591a\u5c11\u6b21\u6807\u51c6\u4ef6\u624d\u80fd\u4f7f\u5f97\u5de6\u4e0a\u89d2\u4e0e\u53f3\u4e0b\u89d2\u8054\u901a\uff0c\u5982\u679c\u6c38\u8fdc\u4e0d\u53ef\u80fd\u8054\u901a\u5c31\u8f93\u51fa'NO SOLUTION'\n### \u5206\u6790\n\t1\u3001\u53ef\u4ee5\u5f88\u6e05\u6670\u7684\u770b\u51fa\uff0c\u6bcf\u4e2a'/'\u6216\u8005'\\'\u90fd\u8fde\u63a5\u4e86\u4e24\u4e2a\u683c\u70b9\uff0c\u90a3\u4e48\u4e5f\u5c31\u76f8\u5f53\u4e8e\u8fd9\u4e24\u4e2a\u70b9\u4e4b\u95f4\u4e0d\u9700\u8981\u65cb\u8f6c\u5373\u53ef\u8054\u901a\uff0c\u56e0\u6b64\u6211\u4eec\u628a\u8fd9\u4e24\u4e2a\u683c\u70b9\u4e4b\u95f4\u7684\u8def\u5f84\u957f\u8bbe\u4e3a0\n    2\u3001\u5bf9\u4e8e\u6bcf\u4e2a\u5c0f\u683c\u4e2d\u7684\u53e6\u4e24\u4e2a\u6ca1\u6709\u88ab'/'\u6216\u8005'\\'\u8fde\u63a5\u7684\u683c\u70b9\uff0c\u53ea\u9700\u8981\u5c06'/'\u6216\u8005'\\'\u65cb\u8f6c\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4f7f\u5176\u8054\u901a\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u8fd9\u4e24\u4e2a\u683c\u70b9\u4e4b\u95f4\u7684\u8def\u5f84\u957f\u5ea6\u8bbe\u4e3a1\n    3\u3001\u4e4b\u540e\u6211\u4eec\u53ef\u4ee5\u5efa\u6210\u4e00\u4e2a\u8fb9\u6743\u4e3a0\u62161\u7684\u65e0\u5411\u56fe\uff0c\u8dd1\u4e00\u4e2a\u4ece\u5de6\u4e0a\u89d2\u5230\u53f3\u4e0b\u89d2\u7684\u6700\u77ed\u8def\u5373\u53ef\n    4\u3001\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u7531\u4e8e\u6211\u4eec\u662f\u7528\u683c\u70b9\u5728\u5efa\u56fe\uff0c\u6240\u4ee5\u683c\u70b9\u7684\u5e8f\u53f7\u9700\u8981\u505a\u4e00\u4e2a\u7b80\u5355\u7684\u5904\u7406\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u4ee5n=5,m=5\u4e3a\u4f8b\uff0c\u6bcf\u4e00\u884c\u5c31\u4f1a\u67096\u4e2a\u70b9\uff0c\u4e14\u884c\u6570\u4f1a\u67096\u884c\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u8dd1\u4ece1\u523036\u7684\u6700\u77ed\u8def\n### \u6ce8\u610f\u4e8b\u9879\n\t\u5efa\u8bae\u4f7f\u7528\u5806\u4f18\u5316\u7684dijsktra\uff0c\u4e0d\u7136\u88f8SPFA\u4f1aT4\u4e2a\u70b9\n### \u4ee3\u7801\n\uff08SPFA TLE60\u5206\uff09\n```cpp\n#include<bits/stdc++.h>\n#define N 250005\nusing namespace std;\nstruct node{\n\tint to,nxt,w;\n}e[N*4];\nint cnt=0,head[N*4];\nvoid add(int u,int v,int c){\n\t//cout<<u<<\" \"<<v<<\" \"<<c<<endl;\n\te[++cnt].to=v;e[cnt].nxt=head[u];head[u]=cnt;e[cnt].w=c;\n}\nqueue<int>q;\nchar c[505][505];\nint dis[N+5];\nbool vis[N+5];\nvoid SPFA(int s){\n\tq.push(s);\n\tdis[s]=0;\n\twhile(!q.empty()){\n\t\tint x=q.front();\n\t\tq.pop();\n\t\tvis[x]=0;\n\t\tfor(int i=head[x];i;i=e[i].nxt){\n\t\t\tint v=e[i].to;\n\t\t\tif(dis[v]>dis[x]+e[i].w){\n\t\t\t\tdis[v]=dis[x]+e[i].w;\n\t\t\t\tif(!vis[v]){\n\t\t\t\t\tvis[v]=1;\n\t\t\t\t\tq.push(v);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nvoid clean(){\n\tmemset(dis,0x3f3f3f3f,sizeof(dis));\n\tmemset(e,0,sizeof(e));\n\tmemset(head,0,sizeof(head));\n\tmemset(vis,0,sizeof(vis));\n\tcnt=0;\n}\nint main(){\n\t//freopen(\"3.txt\",\"r\",stdin);\n\tint T;\n\tscanf(\"%d\",&T);\n\twhile(T--){\n\t\tclean();\n\t\tint n,m;\n\t\tscanf(\"%d%d\",&n,&m);\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tfor(int j=1;j<=m;j++){\n\t\t\t\tcin>>c[i][j];\n\t\t\t}\n\t\t}\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tfor(int j=1;j<=m;j++){\n\t\t\t\tif(c[i][j]=='/'){\n\t\t\t\t\tadd((i-1)*(m+1)+j,i*(m+1)+j+1,1);\n\t\t\t\t\tadd(i*(m+1)+j+1,(i-1)*(m+1)+j,1);\n\t\t\t\t\tadd((i-1)*(m+1)+j+1,i*(m+1)+j,0);\n\t\t\t\t\tadd(i*(m+1)+j,(i-1)*(m+1)+j+1,0);\n\t\t\t\t}else{\n\t\t\t\t\tadd((i-1)*(m+1)+j,i*(m+1)+j+1,0);\n\t\t\t\t\tadd(i*(m+1)+j+1,(i-1)*(m+1)+j,0);\n\t\t\t\t\tadd((i-1)*(m+1)+j+1,i*(m+1)+j,1);\n\t\t\t\t\tadd(i*(m+1)+j,(i-1)*(m+1)+j+1,1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tSPFA(1);\n\t\tif(dis[(n+1)*(m+1)]==0x3f3f3f3f){\n\t\t\tprintf(\"NO SOLUTION\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tprintf(\"%d\\n\",dis[(n+1)*(m+1)]);\n\t}\n\treturn 0;\n}\n\t\n\n```\n\uff08\u5806\u4f18\u5316dijsktra AC100\u5206\uff09\n```cpp\n#include<bits/stdc++.h>\n#define N 250005\n#define m(a,b) make_pair(a,b)\nusing namespace std;\nstruct node{\n\tint to,nxt,w;\n}e[N*6];\nint dis[N*6];\nbool vis[N*6];\nstruct cmp{\n    bool operator()(int a,int b){\n        return dis[a]>dis[b];\n    }\n};\npriority_queue< pair<int,int> > q;\nint cnt=0,head[N*6];\nvoid add(int u,int v,int c){\n\t//cout<<u<<\" \"<<v<<\" \"<<c<<endl;\n\te[++cnt].to=v;e[cnt].nxt=head[u];head[u]=cnt;e[cnt].w=c;\n}\nchar c[505][505];\nvoid DIJ(int s){\n    q.push(m(0,s));\n    dis[s]=0;\n    while(!q.empty()){\n        int x=q.top().second;\n        q.pop();\n        if(vis[x])continue;\n        vis[x]=1;\n        for(int i=head[x];i;i=e[i].nxt){\n            int v=e[i].to;\n            if(!vis[v]&&dis[v]>dis[x]+e[i].w){\n                dis[v]=dis[x]+e[i].w;\n                //vis[v]=1;\n                q.push(m(-dis[v],v));\n            }\n        }\n    }\n}\nvoid clean(){\n\tmemset(dis,0x3f3f3f3f,sizeof(dis));\n\tmemset(e,0,sizeof(e));\n\tmemset(head,0,sizeof(head));\n\tmemset(vis,0,sizeof(vis));\n\tcnt=0;\n}\nint main(){\n\t//freopen(\"3.txt\",\"r\",stdin);\n\tint T;\n\tscanf(\"%d\",&T);\n\twhile(T--){\n\t\tclean();\n\t\tint n,m;\n\t\tscanf(\"%d%d\",&n,&m);\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tfor(int j=1;j<=m;j++){\n\t\t\t\tcin>>c[i][j];\n\t\t\t}\n\t\t}\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tfor(int j=1;j<=m;j++){\n\t\t\t\tif(c[i][j]=='/'){\n\t\t\t\t\tadd((i-1)*(m+1)+j,i*(m+1)+j+1,1);\n\t\t\t\t\tadd(i*(m+1)+j+1,(i-1)*(m+1)+j,1);\n\t\t\t\t\tadd((i-1)*(m+1)+j+1,i*(m+1)+j,0);\n\t\t\t\t\tadd(i*(m+1)+j,(i-1)*(m+1)+j+1,0);\n\t\t\t\t}else{\n\t\t\t\t\tadd((i-1)*(m+1)+j,i*(m+1)+j+1,0);\n\t\t\t\t\tadd(i*(m+1)+j+1,(i-1)*(m+1)+j,0);\n\t\t\t\t\tadd((i-1)*(m+1)+j+1,i*(m+1)+j,1);\n\t\t\t\t\tadd(i*(m+1)+j,(i-1)*(m+1)+j+1,1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tDIJ(1);\n\t\tif(dis[(n+1)*(m+1)]==0x3f3f3f3f){\n\t\t\tprintf(\"NO SOLUTION\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tprintf(\"%d\\n\",dis[(n+1)*(m+1)]);\n\t}\n\treturn 0;\n}\n\t\n\n```\n\n\n    ",
        "postTime": 1537446501,
        "uid": 32026,
        "name": "zzlh",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2243 \u3010\u7535\u8def\u7ef4\u4fee\u3011"
    },
    {
        "content": "## \u6807\u7b7e\uff1a   \n\u6700\u77ed\u8def\u5e7f\u641c\u3001\u53cc\u7aef\u961f\u5217\u5e7f\u641c      \n### \u7406\u89e3\uff1a   \n\u5bf9\u4e8e\u4e00\u6b21\u65cb\u8f6c\uff0c\u6211\u4eec\u53ef\u4ee5\u7406\u89e3\u6210\u8fb9\u6743\u4e3a1\u7684\u8fb9   \n\u5bf9\u4e8e\u5df2\u6709\u7684\u7ebf\u8def\uff0c\u5efa\u7acb\u8fb9\u6743\u4e3a0\u7684\u8fb9   \n\u6240\u4ee5\u8fd9\u9053\u9898\u53ef\u4ee5\u8f6c\u5316\u6210\u6700\u77ed\u8def\u95ee\u9898   \n\u663e\u7136\u6700\u77ed\u8def\u7684\u89e3\u6cd5\u90fd\u53ef\u4ee5\u505a   \n\u4f46\u89c2\u5bdf\u5230\u65f6\u9650\u53ea\u6709150ms\uff0c\u5e76\u4e14\u8fb9\u6743\u53ea\u67090/1\uff0c\u6211\u4eec\u8003\u8651\u53cc\u7aef\u961f\u5217\u7684\u5e7f\u641c   \n\u5373\u5bf9\u4e8e\u8fb9\u6743\u4e3a0\u7684\u70b9\uff0c\u653e\u961f\u5934\u4f18\u5148\u6269\u5c55  \n\u5bf9\u4e8e\u8fb9\u6743\u4e3a1\u7684\u70b9\uff0c\u5219\u653e\u961f\u5c3e   \n\u5f53\u4e00\u4e2a\u70b9\u4ece\u5bf9\u5934\u53d6\u51fa\u65f6\uff0c\u5c31\u6c42\u51fa\u4e86\u8d77\u70b9\u5230\u8be5\u70b9\u7684\u6700\u77ed\u8def   \n### \u5b9e\u73b0\uff1a  \n1.\u5bf9\u4e8e\u7f51\u683c\u4e0a\u7684\u6bcf\u4e00\u70b9\uff08i\uff0cj),\u7528\uff08m+1)*i+j\u8868\u793a\u8be5\u70b9\uff0c\u907f\u514d\u4e86\u7ed3\u6784\u4f53\u7684\u4f7f\u7528   \n### \u4e0a\u4ee3\u7801   \n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<deque>\n#define N 510 \nusing namespace std;\nint n,m,T,d[N*N],head[N*N],tot; \nbool vis[N*N];\nstruct Edge{\n\tint v,next,val;\n}edge[N*N*4];\ninline int read(){\n\tint x=0,f=1;char ch=getchar();while(ch<'0'||ch>'9'){if(ch=='-')f=-f;ch=getchar();\n\t}while(ch>='0'&&ch<='9'){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();\n\t}return x*f;\n}\ninline void add(int x,int y,int z){edge[++tot].v=y;edge[tot].next=head[x];edge[tot].val=z;head[x]=tot;}\nvoid bfs(int s){\n\tdeque<int>q;q.push_front(s);memset(vis,0,sizeof(vis));memset(d,0x3f,sizeof(d));d[s]=0;\n\twhile(q.size()){\n\t\tint u=q.front();q.pop_front();\n\t\tif(vis[u])continue;\n\t\tvis[u]=1; \n\t\tfor(int i=head[u];i;i=edge[i].next){\n\t\t\tint v=edge[i].v,z=edge[i].val;\n\t\t\tif(z){\n\t\t\t\td[v]=min(d[v],d[u]+1);\n\t\t\t\tq.push_back(v);\n\t\t\t}\n\t\t\telse {\n\t\t\t\td[v]=min(d[v],d[u]);\n\t\t\t\tq.push_front(v);\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\t\tn=read();m=read();tot=0;memset(head,0,sizeof(head));\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfor(int j=1;j<=m;j++)\n\t\t\t{\n\t\t\t\tchar ch;cin>>ch;\n\t\t\t\tif(ch=='\\\\'){\n\t\t\t\t\tadd((m+1)*(i-1)+j,(m+1)*i+j+1,0);\n\t\t\t\t\tadd((m+1)*i+j+1,(m+1)*(i-1)+j,0);\n\t\t\t\t\tadd((m+1)*(i-1)+j+1,(m+1)*i+j,1);\n\t\t\t\t\tadd((m+1)*i+j,(m+1)*(i-1)+j+1,1);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tadd((m+1)*(i-1)+j,(m+1)*i+j+1,1);\n\t\t\t\t\tadd((m+1)*i+j+1,(m+1)*(i-1)+j,1);\n\t\t\t\t\tadd((m+1)*(i-1)+j+1,(m+1)*i+j,0);\n\t\t\t\t\tadd((m+1)*i+j,(m+1)*(i-1)+j+1,0); \n\t\t\t\t}\n\t\t\t} \n\t\tbfs(1);\n\t\tif(d[(n+1)*(m+1)]==0x3f3f3f3f)printf(\"NO SOLUTION\\n\");\n\t\telse printf(\"%d\\n\",d[(n+1)*(m+1)]);\n\treturn 0;\n}\n/*\n1\n3 5\n\\\\\\\\\\\n\\\\///\n/\\\\\\\\   d[3]\n*/\n```\n",
        "postTime": 1556629172,
        "uid": 88733,
        "name": "Zekrom",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4667 \u3010[BalticOI 2011 Day1]Switch the Lamp On\u3011"
    },
    {
        "content": "\u6211\u8fd9\u9898\u7684\u601d\u8def\u80af\u5b9a\u662f$Heap+Dijkstra$ ~~\uff0c\u7eb5\u7136\u8fd9\u662f\u4e00\u9053\u53cc\u7aef\u961f\u5217bfs\u7684\u4f8b\u9898~~ \u3002\u7136\u540e\u5c31\u6709\u4ee5\u4e0b\u7684\u8981\u70b9\uff1a\n\n\u4e00\u3001\u5efa\u56fe\uff1a\n\n\u5efa\u56fe\u7684\u7b56\u7565\u5f88\u7b80\u5355\uff1a\u5982\u679c$(i,j)$\u662f ' \\ '\uff0c\u90a3\u4e48\u8868\u793a\u4ece\u5de6\u4e0a\u89d2\u8d70\u5230\u53f3\u4e0b\u89d2\uff08\u6216\u53cd\u4e4b\uff09\u4e0d\u9700\u8981\u7ecf\u8fc7\u65cb\u8f6c\uff0c\u800c\u4ece\u5de6\u4e0b\u89d2\u8d70\u5230\u53f3\u4e0a\u89d2\uff08\u6216\u53cd\u4e4b\uff09\u9700\u8981\u7ecf\u8fc7\u4e00\u6b21\u65cb\u8f6c\u3002\u6240\u4ee5\u6211\u4eec\u4ece$(i,j)$\u5230$(i+1,j+1)$\u5efa\u4e00\u6761\u6743\u4e3a$0$\u7684\u53cc\u5411\u8fb9\uff0c\u4ece$(i+1,j)$\u5230$(i,j+1)$\u5efa\u4e00\u6761\u6743\u4e3a$1$\u7684\u53cc\u5411\u8fb9\u3002\n\n\u53e6\u4e00\u79cd\u60c5\u51b5\u540c\u7406\n\n\u90a3\u4e48\u5f88\u660e\u663e\u8fd9\u662f\u4e00\u4e2a\u6ca1\u6709\u8d1f\u6743\u7684**\u7f51\u683c\u56fe**\u4e86\u3002\u6211\u4eec\u9009\u62e9$Dijkastra$\u3002\n\n\u73b0\u5728\u53c8\u6709\u4e00\u4e2a\u65b0\u7684\u95ee\u9898\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e8c\u7ef4\u7684\u56fe\uff0c\u6211\u4eec\u4e0d\u53ef\u80fd\u76f4\u63a5\u7528\u4e8c\u7ef4\u7684\u4e0b\u6807\u8dd1$SSSP$\u5427\uff1f\u90a3\u6837\u592a\u9ebb\u70e6\u4e86\u3002\n\n\u4e8e\u662f\u6211\u4eec\u8003\u8651\u5bf9\u8fd9\u5f20\u56fe\u8fdb\u884c\u4e8c\u5411\u7b94\u653b\u51fb\uff1a\u628a\u5b83\u62cd\u6210\u4e00\u7ef4\u7684\uff0c\u5177\u4f53\uff1a\n\n$(x,y) \\text{ -> } (c+1)*(x-1)+y; $\n\n```cpp\nint HASH(int x,int y)//\u4e0d\u8981\u5728\u610f\u51fd\u6570\u540d\n{\n    return (c+1)*(x-1)+y;\n}\n```\n\n\u4e8e\u662f\u6211\u4eec\u5f97\u5230\u4e86\u7b2c\u4e00\u4efd\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MaxN = 505,MaxM = 505;\nconst int Max_tot = MaxN * MaxM;\nconst int inf=0x3f3f3f3f;\npriority_queue <pair<int,int> > q;\nint head[Max_tot],k=1;\nstruct Edge {\n    int to,next,dis;\n}e[10*Max_tot];\nchar maze[MaxN][MaxM];\nint dis[Max_tot],vis[Max_tot];\nint r,c;\nvoid add(int from,int to,int dis) //\u5efa\u8fb9\uff08\u5355\u5411\uff09\n{\n    e[k].to=to;\n    e[k].dis=dis;\n    e[k].next=head[from];\n    head[from]=k++;\n}\nvoid insert(int from,int to,int dis) //\u5efa\u8fb9\uff08\u53cc\u5411\uff09\n{\n    add(from,to,dis);\n    add(to,from,dis);\n}\nint HASH(int x,int y) //\u4e8c\u5411\u7b94\u51fd\u6570\n{\n    return (c+1)*(x-1)+y;\n}\ninline void dijkstra(int st) //SSSP\u7b97\u6cd5\n{\n    memset(dis,0x3f,sizeof(dis));\n    memset(vis,0,sizeof(vis));\n    dis[st]=0;\n    q.push(make_pair(0,1));\n    while(q.size()) {\n        int minn=q.top().second;\n        q.pop();\n        if(vis[minn]) continue;\n        vis[minn]=1;\n        for(int i=head[minn];i;i=e[i].next) {\n            int y=e[i].to;\n            int z=e[i].dis;\n            if(dis[y]>dis[minn]+z) {\n                dis[y]=dis[minn]+z;\n                q.push(make_pair(-dis[y],y));\n            }\n        }\n    }\n}\nvoid BuildG() //\u5efa\u56fe\n{\n    for(int i=1;i<=r;i++) {\n        for(int j=1;j<=c;j++) {\n            if(maze[i][j]=='\\\\') {\n                int f1=HASH(i,j);\n                int t1=HASH(i+1,j+1);\n                int f2=HASH(i+1,j);\n                int t2=HASH(i,j+1);\n                insert(f1,t1,0);\n                insert(f2,t2,1); \n            }\n            else if(maze[i][j]=='/') {\n                int f1=HASH(i,j);\n                int t1=HASH(i+1,j+1);\n                int f2=HASH(i+1,j);\n                int t2=HASH(i,j+1);\n                insert(f1,t1,1);\n                insert(f2,t2,0); \n            }\n        }\n    }\n}\nvoid init() //\u5404\u79cd\u521d\u59cb\u5316\uff0c\u4ee5\u53ca\u89e3\n{\n    memset(head,0,sizeof(head));\n    memset(vis,0,sizeof(vis));\n    memset(dis,0x3f,sizeof(dis));\n    memset(e,0,sizeof(e));\n    memset(maze,0,sizeof(maze));\n    k=1;\n    while(q.size()) q.pop();\n    cin>>r>>c;\n    for(int i=1;i<=r;i++) {\n        for(int j=1;j<=c;j++) {\n            cin>>maze[i][j];\n        }\n    }\n    BuildG();\n    dijkstra(1);\n    if(dis[HASH(r+1,c+1)]==inf) cout<<\"NO SOLUTION\"<<endl;\n    else cout<<dis[HASH(r+1,c+1)]<<endl;\n}\nint main()\n{\n    ios::sync_with_stdio(0);\n    init(); //\u8fd9\u91cc\u5c31\u6ca1\u4ec0\u4e48\u597d\u89e3\u91ca\u7684\u4e86\u3002\n}\n```\n\n\u4e8c\uff1a\u6cbb\u597d\u61d2\u764c\n\n\u4f46\u662f\uff01\uff01\uff01\u8fd9\u662f\u4e00\u4e2a\u4e0d\u5b8c\u7f8e\u7684\u505a\u6cd5\u3002\u56e0\u4e3a$STL$\u7684\u5e38\u6570\u771f\u7684\u662f\u592a\u5927\u4e86\u3002\u5982\u4f55\u8ba9\u6211\u4eec\u7684\u7a0b\u5e8f\u8dd1\u5f97\u66f4\u5feb\u5462\uff1f\n\n$Ans$\uff1a ~~\u5438\u6c27~~ \u624b\u5199\u5806\u3002\n\n\u6211\u4eec\u52a0\u4e0a\u8fd9\u6837\u7684\u4ee3\u7801:\n\n```cpp\ntemplate<typename T> \nstruct Priority_Queue { //\u8fd9\u4e2a\u7ed3\u6784\u4f53\u53ef\u4ee5\u652f\u6301STL\u4e2dpriority_queue\u7684\u7edd\u5927\u90e8\u5206\u64cd\u4f5c\u3002\n    T heap[100005];\n    int heap_size=0;\n    \n    T top() {\n        return heap[1]; \n    }\n    \n    bool empty() {\n        return heap_size==0;\n    }\n    \n    int size() {\n        return heap_size;\n    }\n    \n    void push(T x) {\n        heap_size++;\n        heap[heap_size]=x;\n        int now=heap_size;\n        while(now>1) {\n            int next=now>>1;\n            if(heap[now]<heap[next]) {\n                swap(heap[now],heap[next]);\n            }\n            else return;\n            now=next;\n        }\n        return;\n    }\n    \n    void pop() {\n        heap[1]=heap[heap_size];\n        heap_size--;\n        int now=1,next;\n        while((now<<1)<=heap_size) {\n            next=now<<1;\n            if(next+1<=heap_size&&heap[next+1]<heap[next]) next++;\n            if(heap[next]<heap[now]) {\n                swap(heap[now],heap[next]);\n            }\n            else return;\n            now=next;\n        }\n        return;\n    }\n};\n\nbool operator < (pair<int,int> x,pair<int,int> y) { //\u8fd9\u91cc\u9700\u8981\u91cd\u8f7d\u4e00\u4e0b\u8fd0\u7b97\u7b26\u3002\n    return x.first<y.first;\n}\n```\n\n\u7136\u540e\u628a\n\n```cpp\npriority_queue< pair<int,int> >q;\n```\n\n\u6539\u6210\n\n```cpp\nPriority_Queue< pair<int,int> >q;\n```\n\n\u4ee5\u53ca$Dijkstra$\u4e2d\u7684\u677e\u5f1b\uff08\u4e4b\u524d\u6211\u4eec\u7528\u7684\u662f\u5927\u6839\u5806\uff0c\u5f80\u91cc\u5b58\u76f8\u53cd\u6570\uff09\n\n```cpp\n                q.push(make_pair(-dis[y],y));\n```\n\n\u6539\u6210\n\n```cpp\n                q.push(make_pair(dis[y],y));\n```\n\n\u5c31\u53ef\u4ee5$AC$\u4e86",
        "postTime": 1556626477,
        "uid": 92254,
        "name": "Social_Zhao",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4667 \u3010[BalticOI 2011 Day1]Switch the Lamp On\u3011"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.luogu.org/blog/user53410/solution-p2243)\n\n$N$\u53d1\u5168WA\n\n\u641e\u4e86\u4e00\u756a\u540e\u53d1\u73b0\u961f\u5217\u6ca1\u6709\u6e05\u7a7a\n\n~~\u6211\u771f\u50bb,\u771f\u7684\u3002\u6211\u5355\u77e5\u9053\u2026\u2026~~\n\n\u53cc\u7aef\u961f\u5217\u641c\u7d22\uff0c\u5efa\u4e00\u5f20\u5927\u56fe\uff0c\u8003\u8651\u5230\u6709\u4e9b\u8fb9\u4e0d\u7528\u7ffb\u8f6c\uff0c\u4e3a\u4e86\u4f7f\u6574\u4e2a\u961f\u5217\u5355\u8c03\uff0c\u5c06\u4e0d\u7528\u7ffb\u8f6c\u7684\u8fb9\u80fd\u5230\u8fbe\u7684\u70b9\u5168\u90e8\u52a0\u5165\u524d\u7aef\u3002\n\n\u5177\u4f53\u8fc7\u7a0b\u8be6\u60c5\u8bf7\u89c1$2^6$\u884c\u4ee3\u7801,~~\u8fd8\u662f\u4e2a\u6574\u6570~~\n\n```\n#include<queue>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int maxn=505;\nchar map[maxn][maxn];//\u53ea\u6709map\u5b58\u7684\u662f\u7b26\u53f7\u7684\u5750\u6807,\u5176\u5b83\u90fd\u662f\u5b58\u683c\u70b9\u7684.\nbool used[maxn][maxn];\nint dx[4]={1,1,-1,-1},\n    dy[4]={1,-1,1,-1};\nint n,m,dis[maxn][maxn];\ndeque< pair<int,int> >q,empty;//\u4e8c\u5143\u7ec4,\u5206\u522b\u5b58x\u548cy\u3002\nbool turn(int x1,int y1,int x2,int y2)\n{\n    int x=map[(x1+x2)/2][(y1+y2)/2]=='/'?1:-1;//\u5224\u65ad\u7535\u7ebf\u662f\u5426\u76f4\u63a5\u8fde\u63a5\u4e24\u4e2a\u70b9\n    return x==(y1-y2)/(x1-x2);\n}\nvoid bfs()\n{\n    memset(used,0,sizeof(used));\n    memset(dis,0x3f3f3f3f,sizeof(dis));\n    q=empty;q.push_back(make_pair(0,0));dis[0][0]=0;//\u6e05\u96f6!!!\n    while(!q.empty())\n    {\n        int a=q.front().first,\n            b=q.front().second;\n        q.pop_front();used[a][b]=true;\n        for(int i=0;i<4;i++)\n        {\n            int x=dx[i]+a,y=dy[i]+b;\n            if(x<0||n<x||y<0||m<y||used[x][y])\n                continue;\n            if(turn(a,b,x,y))//\u5982\u679c\u7535\u7ebf\u4e0d\u76f4\u63a5\u8fde\u63a5\u4e24\u4e2a\u70b9,\u5373\u4ee3\u4ef7\u4e3a1\n            {//\u5c31\u628a\u7ed3\u70b9\u6309\u6b63\u5e38\u5165\u961f\n                dis[x][y]=min(dis[x][y],dis[a][b]+1);//\u6ce8\u610f\u8981\u53d6\u6700\u5c0f\u503c\n                q.push_back(make_pair(x,y));\n            }\n            else//\u5982\u679c\u7535\u7ebf\u76f4\u8fde,\u90a3\u4e48\u5230(a,b),(x,y)\u4e24\u4e2a\u70b9\u7684\u6b65\u6570\u662f\u4e00\u6837\u7684\n            {//\u6362\u53e5\u8bdd\u8bf4,\u4ed6\u4eec\u7684\u5c42\u7ea7\u662f\u4e00\u6837\u7684,\u7531\u4e8e\u4e00\u822c\u7684\u5e7f\u641c\u7684\u961f\u5217\u5c42\u7ea7\u662f\u5355\u8c03\u9012\u589e\u7684,\u6240\u4ee5\u4e3a\u4e86\u4fdd\u8bc1\u8fd9\u4e2a\u6027\u8d28,\u5c06(x,y)\u4ece\u961f\u9996\u5165\u961f.\n                dis[x][y]=min(dis[x][y],dis[a][b]);\n                q.push_front(make_pair(x,y));\n            }\n            if(x==n&&y==m) return;\n        }\n    }\n}\nint main()\n{\n    int t;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d%d\",&n,&m);\n        for(int i=0;i<n;i++)\n            scanf(\"%s\",map[i]);\n        if((n+m)%2)//\u6613\u8bc1\u5230\u8fbe\u7ec8\u70b9\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u662f\u5076\u6570\n        {\n            puts(\"NO SOLUTION\");\n            continue;\n        }\n        bfs();\n        printf(\"%d\\n\",dis[n][m]);\n    }\n    return 0;\n}\n```",
        "postTime": 1546424148,
        "uid": 53410,
        "name": "XY_cpp",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2243 \u3010\u7535\u8def\u7ef4\u4fee\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5bf9\u6211\u76f8\u5f53**\u4e0d\u53cb\u597d**5555555555\n\n~~\u4e3a\u4e86\u5199\u9898\u89e3\u8fd8\u5f97 _\u6362_ \u4e2a\u6d4f\u89c8\u5668~~\n\n~~\u8fd9\u544a\u8bc9\u6211\u4eec**\u641c\u72d7\u6d4f\u89c8\u5668**\u662f\u6709\u591a\u5751~~\n\n\u603b\u4e4b\uff0c\u6b63\u5982\u65e0\u6570\u9898\u89e3\u6240\u8a00\uff0c\u8fd9\u9053\u9898\u5c31\u662f\u4e2a\u88f8\u7684**\u53cc\u7aef\u961f\u5217**\u6700\u77ed\u8def\n\n\u7136\u800c\u8fd9\u9053\u9898\u5751\u5c31\u5751\u5728\u540c\u4e00\u4e2a\u6d4b\u8bd5\u70b9\u6709\u591a\u7ec4\u6570\u636e\n\n~~\u5bfc\u81f4\u5f88\u5bb9\u6613\u51fa\u73b0\u4ee5\u4e0b\u60c5\u51b5\uff1a~~\n\n~~\u5728\u4e0a\u4e00\u7ec4 _**\u5927**_ \u6570\u636e\u6d4b\u5b8c\u4e4b\u540e\u518d\u6765\u4e00\u7ec4 _**\u5c0f**_ \u6570\u636e\u5c31\u5bb9\u6613\u51fa\u73b0\u8d8a\u754c~~\n\n~~\uff08\u8fd9\u544a\u8bc9\u6211\u4eec**\u521d\u59cb\u5316**\u662f\u6709\u591a\u4e48\u91cd\u8981 \u2014\u2014\u6765\u81ea\u4e00\u4e2a\u4e3a\u521d\u59cb\u5316\u800c\u8d21\u732e**\u4e03**\u6b21\u63d0\u4ea4\u7684\u849f\u84bb\uff09~~\n\n\u53e6\u9644\uff1a\u6ca1\u6709\u597d\u597d\u5224\u5b9a\u6570\u636e\u7684\u65f6\u5019\u5c31\u5f88\u5bb9\u6613\u88abLinux\u7684**\u53cc\u6362\u884c\u7b26**\u5751\u54e6~\n\n~~\u5df2\u7ecf\u6709**\u4e24**\u4f4d\u88ab\u5751\u7684\u524d\u8f88\u4e86~~\n\n# \u597d\u4e86\u4e0a\u9762\u90fd\u662f\u5e9f\u8bdd\u4e0b\u9762\u624d\u662f\u6b63\u6587\uff1a\n\n## \u601d\u8def\uff1a\u53cc\u7aef\u961f\u5217\u641c\u7d22\n\n\u5148\u5c06\u5b57\u7b26\u8f6c\u6210\u6570\u5b57\u65b9\u4fbf\u5224\u65ad\n\n\u7136\u540e\u6211\u4eec\u6839\u636e\u662f\u5426\u9700\u8981\u65cb\u8f6c\uff0c\u7ed9\u56fe\u4e2d\u76f8\u90bb\u7684\u683c\u5b50\u5efa\u8fb9\uff0c\u4e00\u8fb9\u505a\u4e00\u8fb9\u5efa\u5c31\u597d\uff0c\u4e0d\u7528\u9884\u5904\u7406\n\n\u5efa\u8fb9\u7684\u89c4\u5219\uff1a\u9700\u8981\u65cb\u8f6c\u90a3\u4e48\u5c31\u5efa\u6743\u503c\u4e3a 1 \u7684\u8fb9\uff0c\u5426\u5219\u5efa\u6743\u503c\u4e3a 0 \u7684\u8fb9\n\n\u5f88\u5bb9\u6613\u60f3\u5230\uff0c\u5230\u8fbe\u7ec8\u70b9\u7684\u6700\u77ed\u8def\u7684\u957f\u5ea6\u5c31\u662f\u6240\u6c42\u7684\u7b54\u6848\n\n\u90a3\u4e48\u6211\u4eec\u91c7\u7528\u53cc\u7aef\u961f\u5217\u7684\u5bbd\u641c\u6765\u505a\n\n\u5f88\u660e\u663e\uff0c\u6743\u503c\u4e3a 0 \u7684\u8fb9\u8981\u4f18\u4e8e\u6743\u503c\u4e3a 1 \u7684\u8fb9\n\n\u6545\uff0c\u5728\u5c06\u8282\u70b9\u5165\u961f\u7684\u65f6\u5019\uff0c\u5c06\u6743\u503c\u4e3a 0 \u7684\u63d2\u5165\u961f\u5934\uff0c\u6743\u503c\u4e3a 1 \u7684\u63d2\u5165\u961f\u5c3e\n\n\u7136\u540e\u5c31\u662f\u6b63\u5e38\u8dd1\u6700\u77ed\u8def\n\nP.S.1.\u6b64\u9898\u540c[P4667](https://www.luogu.org/problemnew/show/P4667)\uff0c\u800c[P4667](https://www.luogu.org/problemnew/show/P4667)\u7531\u4e8e\u65f6\u9650\u7684\u7f18\u6545~~\u4e5f\u8bb8~~\u662f\u5f53\u524d\u8fd9\u9898\u7684\u52a0\u5f3a\u7248\uff0c\u6240\u4ee5\u63a8\u8350\u5927\u5bb6\u8d81\u70ed\u6253\u94c1\u518d\u53bb\u5207\u4e00\u4e0b[P4667](https://www.luogu.org/problemnew/show/P4667)\u3002\n\n~~\u6211\u624d\u4e0d\u4f1a\u8bf4\u6211\u7684\u4ee3\u7801\u4e5f\u80fd\u76f4\u63a5\u5207[P4667](https://www.luogu.org/problemnew/show/P4667)\u5462~~\uff0c\u6bd5\u7adf\u8fd8\u662f\u6709\u4e00\u4e01\u70b9\u5c0f\u4e0d\u540c\u7684\uff0c\u5982\u679c\u4f60\u4e0d\u6539\u4e00\u4e0b\u4e0b\u786e\u5b9e\u5207\u4e0d\u4e86\n\nP.S.2.\u60ca\u5947\u5730\u53d1\u73b0[P4667](https://www.luogu.org/problemnew/show/P4667)\u4e2d\u67d0\u5927\u4f6c\u7684\u601d\u8def\u51e0\u4e4e\u8ddf\u5728\u4e0b\u8fd9\u4e2a\u849f\u84bb\u4e00\u6bdb\u4e00\u6837\uff0c\u5728\u4e0b\u7684\u9898\u89e3\u4e0d\u4f1a\u88ab\u5224\u6284\u88ad\u5427\uff08\u7b11\uff09\n\n### \u5b8c\u6574\u4ee3\u7801\n\n```\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ninline char Getchar() {\n\tstatic char buf[35], *p1 = buf, *p2 = buf;\n\treturn p1 == p2\n\t\t   && (p2 = (p1 = buf) + fread(buf, 1, 5201314, stdin),\n\t\t\t   p1 == p2) ? EOF : *p1++;\n}\n\ntemplate<class T_T>void in(T_T &QAQ) {\n\tQAQ = 0;\n\tint QwQ = 0;\n\tchar TAT = Getchar();\n\twhile (!isdigit(TAT))\n\t\tQwQ |= (TAT == '-'), TAT = Getchar();\n\twhile (isdigit(TAT))\n\t\tQAQ = (QAQ << 1) + (QAQ << 3) + (TAT ^ 48), TAT = Getchar();\n\tQAQ = QwQ ? -QAQ : QAQ;\n}\n\ninline void out(int QAQ) {\n\n\tint QwQ = 0;\n\tchar TAT[20];\n\n\tif (!QAQ) putchar('0');\n\telse {\n\t\tif (QAQ < 0) putchar('-'), QAQ = -QAQ;\n\t\twhile (QAQ) TAT[++QwQ] = (QAQ % 10) + 48, QAQ /= 10;\n\t\twhile (QwQ) putchar(TAT[QwQ--]);\n\t}\n\tputs(\"\");\n\n\treturn ;\n}\n//\u4ee5\u4e0a\u4e3a\u4f1f\u5927\u7684\u8bfb\u4f18\u8f93\u4f18 \n\nint n, m, T;\nconst int dt[4][2] = {{-1, -1}, {-1, 1}, {1, -1}, {1, 1}};\n// dt \u6570\u7ec4\u50a8\u5b58\u4e0b\u6807\u79fb\u52a8\u7684\u65b9\u5411 \nconst int val[4] = {2, 1, 1, 2};\nconst int pos[4][2] = {{-1, -1}, {-1, 0}, {0, -1}, {0, 0}};\n// val \u6570\u7ec4\u548c pos \u6570\u7ec4\u7528\u4e8e\u5224\u65ad\u4e0b\u4e00\u4e2a\u7684\u7535\u8def\u5143\u4ef6\u65b9\u5411\u4e0e\u5f53\u524d\u5143\u4ef6\u662f\u5426\u76f8\u540c\n// \u76f8\u540c\u5219\u5c06\u6743\u503c\u8bb0\u4e3a 0\uff0c\u5426\u5219\u4e3a 1\uff08\u4e5f\u53ef\u7406\u89e3\u4e3a\u662f\u5426\u9700\u8981\u65cb\u8f6c\uff0c\u662f\u5373\u4e3a 1\uff0c\u5426\u5373\u4e3a 0\uff09 \n// \u5177\u4f53\u7528\u6cd5\u8be6\u89c1 Solve \u51fd\u6570 \nint nx, ny, d, mp[505][505], dis[505][505];\n// nx \u548c ny \u5b58\u4e0b\u4e00\u4e2a\u7535\u8def\u5143\u4ef6\u7684\u5750\u6807\n// d \u5373\u4e3a\u4e0a\u9762\u8bf4\u7684\u8fb9\u6743\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u4e2a d \u53ea\u662f\u6682\u65f6\u6027\u5b58\u50a8\u5f53\u524d\u8fb9\u7684\u6743\u503c\n// mp \u6570\u7ec4\u5b58\u7535\u8def\u5143\u4ef6\u65b9\u5411\uff0c\u50a8\u5b58\u89c4\u5f8b\uff1a'/'\u4e3a 1\uff0c'\\'\u4e3a 2\n// dis \u6570\u7ec4\u5f53\u7136\u662f\u7528\u6765\u5b58\u5f53\u524d\u70b9\u5230\u8d77\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\uff08\u65cb\u8f6c\u6b21\u6570\uff09\u554a \nstruct node {\n\tint x, y;\n\t// \u7528\u4e8e\u5b58\u50a8\u70b9\u7684\u5750\u6807\u4fe1\u606f\u7684\u7ed3\u6784\u4f53\n};\ndeque<node> q;\n// \u53cc\u7aef\u961f\u5217 \n\n// gt \u51fd\u6570\u7528\u4e8e\u5904\u7406\u7535\u8def\u56fe\uff0c\u5c06\u7535\u8def\u56fe\u6539\u6210 1 \u6216 2\n// \u6539\u53d8\u89c4\u5f8b\u540c mp \u6570\u7ec4\u7684\u50a8\u5b58\u89c4\u5f8b \ninline int gt() {\n\tregister char ch;\n\twhile ((ch = Getchar()) != '/' && ch != '\\\\');\n\t// \u9700\u8981\u6ce8\u610f'\\'\u5143\u4ef6\u7684\u8bfb\u5165\uff0c\u5e94\u7801\u4e3a '\\\\'\uff0c\u5176\u4e2d\u7b2c\u4e00\u4e2a\u659c\u6760\u610f\u4e3a\u53d6\u6d88\u5f15\u7528\uff0c\u81f3\u4e8e\u6548\u679c\u8bf7\u81ea\u884c\u767e\u5ea6 \n\treturn ch == '/' ? 1 : 2; // \u8f6c\u6362 \n}\n\n// Solve \u51fd\u6570\u624d\u662f\u771f\u6b63\u7684\u4e3b\u51fd\u6570\uff0c\u4e0b\u9762\u7684\u201c\u4e3b\u51fd\u6570\u201d\u53ea\u662f\u4e3a\u4e86\u591a\u7ec4\u6570\u636e\u800c\u5b58\u5728 \ninline void Solve() {\n\tin(n), in(m);\n\tmemset(dis, 0x3f, sizeof dis);\n\tmemset(mp, -1, sizeof mp);\n\tfor (register int i = 1; i <= n; ++i)\n\t\tfor (register int j = 1; j <= m; ++j)\n\t\t\tmp[i][j] = gt();\n\t//\u4e00\u5927\u6ce2\u521d\u59cb\u5316\u554a\u521d\u59cb\u5316\u2014\u2014\u6765\u81ea\u4e00\u4e2a\u4e3a\u4e86\u521d\u59cb\u5316\u8d21\u732e\u4e03\u6b21\u63d0\u4ea4\u7684\u849f\u84bb \n\tq.push_back((node) {1, 1});\n\tdis[1][1] = 0;\n\t//\u628a\u8d77\u70b9\u63a8\u5165\u961f\u5217 \n\tregister node u;\n\t// u \u5b58\u5f53\u524d\u70b9\u7684\u4fe1\u606f \n\twhile (!q.empty()) {\n\t\tu = q.front();\n\t\tq.pop_front();\n\t\tfor (register int i = 0; i < 4; ++i) {\n\t\t\tnx = u.x + dt[i][0], ny = u.y + dt[i][1];\n\t\t\t// \u679a\u4e3e\u4e0b\u4e00\u4e2a\u5143\u4ef6\u7684\u4e0b\u6807\n\t\t\t// \u7531\u4e8e\u5f53\u524d\u5143\u4ef6\u53ef\u80fd\u65cb\u8f6c\u8fc7\u4e5f\u53ef\u80fd\u6ca1\u6709\uff0c\u6240\u4ee5\u56db\u4e2a\u65b9\u5411\u90fd\u80fd\u8fdb\u884c\u679a\u4e3e \n\t\t\td = mp[u.x + pos[i][0]][u.y + pos[i][1]] != val[i];\n\t\t\t//\u8fb9\u6743\uff08\u662f\u5426\u65cb\u8f6c\uff09\u7684\u5224\u65ad \n\t\t\tif (nx && ny && nx < n + 2 && ny < m + 2\n\t\t\t\t\t&& dis[nx][ny] > dis[u.x][u.y] + d) {\n\t\t\t\t//\u5224\u65ad\u662f\u5426\u51fa\u754c\u4e0e\u662f\u5426\u53ef\u4ee5\u66f4\u65b0\u8ddd\u79bb \n\t\t\t\tdis[nx][ny] = dis[u.x][u.y] + d;\n\t\t\t\td ? q.push_back((node) {nx, ny}) \n\t\t\t\t: q.push_front((node) {nx, ny});\n\t\t\t\t// \u6839\u636e\u5355\u8c03\u6027\uff0c\u628a\u8fb9\u6743\u4e3a 0 \u7684\u70b9\u653e\u5230\u961f\u5934\uff0c\u8fb9\u6743\u4e3a 1 \u7684\u70b9\u653e\u961f\u5c3e \n\t\t\t\tif (nx == n + 1 && ny == m + 1) break;\n\t\t\t\t//\u8fd9\u91cc\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u5230\u8fbe\u7ec8\u70b9 \n\t\t\t}\n\t\t}\n\t\tif (nx == n + 1 && ny == m + 1) break;\n\t\t//\u8fd9\u91cc\u53c8\u53ef\u4ee5\u5224\u65ad\u4e00\u4e0b \n\t}\n\tif (dis[n + 1][m + 1] != 0x3f3f3f3f) out(dis[n + 1][m + 1]);\n\telse puts(\"NO SOLUTION\");\n\t// \u5224\u65ad\u6709\u65e0\u7b54\u6848\uff0c\u6709\u5c31\u8f93\u51fa\u561b\uff0c\u6ca1\u6709\u7684\u8bdd\uff0c\u8fd8\u662f\u8f93\u51fa\u561b\uff08\u7b11\uff09\n}\n\nint main() {\n\n\tin(T);\n\twhile (T--) Solve();\n\t//\u6bcf\u7ec4\u6570\u636e\u8c03\u7528\u4e00\u6b21 Solve \u51fd\u6570 \n\n\treturn 0;\n}\n```",
        "postTime": 1543476035,
        "uid": 56301,
        "name": "Yukhoi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2243 \u3010\u7535\u8def\u7ef4\u4fee\u3011"
    },
    {
        "content": "\u6de6\uff0c\u8fd9\u9898\u9519\u7684\u8352\u5510\u3002\u60e8\uff01\n\n-------------\n\n\u4e0a\u9898\uff1a[ P2243 \u7535\u8def\u7ef4\u4fee](https://www.luogu.org/problemnew/show/P2243)\n\n\u672c\u9898\u600e\u4e48\u770b\u90fd\u5f88\u6c34\uff08\u53ea\u8981\u4f60\u4e0d\u7528\u53cc\u5411BFS\uff09\u3002\n\n### \u4f46\u662f\uff0c\u5751\u7239\u554a\uff01\n\n\u4e24\u884c\u56de\u8f66\uff0c\u8fd8\u80fd\u4e0d\u80fd\u6109\u60a6\u5730getchar()\u4e86\u3002\n\n\u9898\u89e3\u533a\u627e\u5230\u4e00\u4f4d\u540c\u6837\u5982\u6b64\u7684\u5144\u5f1f\uff1a\n![](https://cdn.luogu.com.cn/upload/pic/40701.png )\n![](https://cdn.luogu.com.cn/upload/pic/40702.png )\n\n\u540c\u662f\u5929\u6daf\u6ca6\u843d\u4eba\u5440\u3002\n\nJOJO\uff0c\u6211\u4e0d\u7528getchar()\u4e86\u3002\n\n------------\n\u601d\u8def\u5982\u4e0b\uff1a\n1. \u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a(r+1)*(c+1)\u7684\u77e9\u9635\uff0c\u7ed9\u5b83\u4eec\u7f16\u53f7\uff1a\n\n```\nLL change(int x,int y){\n\t\n\tint ans=(x-1)*(m+1)+y;\n\treturn ans;\n\t\n}\n```\n2. \u7136\u540e\u6839\u636e\u201c/\u201d\u8fd8\u662f\u201c\\\u201d\u6765\u8fde\u8fb9\uff1a\n\n```\nif(dic=='/'){\n\t//cout<<\"run1\"<<endl;\n\tpush(change(i,j),change(i+1,j+1),1);\n\tpush(change(i+1,j+1),change(i,j),1);\n\tpush(change(i+1,j),change(i,j+1),0);\n\tpush(change(i,j+1),change(i+1,j),0); \n} \nelse{\n\t//cout<<\"run2\"<<endl;\n\tpush(change(i,j),change(i+1,j+1),0);\n\tpush(change(i+1,j+1),change(i,j),0);\n\tpush(change(i+1,j),change(i,j+1),1);\n\tpush(change(i,j+1),change(i+1,j),1); \n} \n```\n3. \u6109\u60a6\u5730\u8dd1\u4e00\u904d\u5355\u6e90\u6700\u77ed\u8def\u3002\uff08\u4ec0\u4e48\uff1f\u4f60\u8bf4SPFA\u8fc7\u4e0d\u4e86\uff0c\n[\u51fa\u95e8\u5de6\u62d0\uff0c\u597d\u8d70\u4e0d\u9001](https://www.luogu.org/problemnew/show/P4779)\u3002)\n\n--------------\n## CODE\n```\n#include<bits/stdc++.h>\n#define FOR(i,a,b) for(int i=a;i<=b;i++)\n#define Maxn 502\n#define inf 25000000\n#define LL long long\n\nusing namespace std;\n\ninline int read(){\n\t\n\tint ans=0; int fg=1; char c=getchar();\n\twhile(!(c<='9'&&c>='0')){ if(c=='-') fg=-1; c=getchar(); }\n\twhile(c<='9'&&c>='0'){ ans=ans*10+c-'0'; c=getchar(); }\n\treturn ans*fg;\n}\n\nint n,m;\n\nLL change(int x,int y){\n\t\n\tint ans=(x-1)*(m+1)+y;\n\treturn ans;\n\t\n}\n\nstruct lline{\n\tint st,en,pre,w;\n}line[Maxn*Maxn*10];\nint tot=0;\nint head[Maxn*Maxn];\nvoid push(int a,int b,int c){\n\ttot++;\n\tline[tot].st=a;\n\tline[tot].en=b;\n\tline[tot].w=c;\n\tline[tot].pre=head[a];\n\thead[a]=tot;\n}\n\n\nLL dis[Maxn*Maxn];\nint vis[Maxn*Maxn];\npriority_queue< pair<int,int> > q;\nLL DJ(){\n    FOR(i,1,(n+1)*(m+1)){\n        dis[i]=inf;\n        vis[i]=0;\n    }\n     while(!q.empty()) q.pop();\n    dis[1]=0;\n    q.push(make_pair(0,1));\n    while(!q.empty()){\n        int x=q.top().second;\n        q.pop(); \n        if(vis[x]) continue;\n        vis[x]=1;\n        for(int i=head[x];i;i=line[i].pre){\n            int y=line[i].en; int l=line[i].w;\n            if(dis[y]>dis[x]+l){\n                dis[y]=dis[x]+l;\n                q.push(make_pair(-dis[y],y));//\u61d2\u5f97\u91cd\u8f7d\u8fd0\u7b97\u7b26\n            }\n        }\n    }\n    \n//    FOR(i,1,n+1){\n//    \tFOR(j,1,m+1)\n//    \t\tcout<<dis[change(i,j)]<<\" \";\n//    \tcout<<endl;\n//\t}\n    \n    return (dis[(n+1)*(m+1)]);\n    \n}\n\n\n//queue<int> q;\n//int SPFA(){\n//\tFOR(i,1,(n+1)*(m+1)){\n//\t\tdis[i]=inf;\n//\t\tvis[i]=0;\n//\t}\n//    q.push(1);\n//    dis[1]=0;\n//    while(!q.empty()){\n//        int x=q.front();\n//        q.pop();\n//        vis[x]=0;\n//        for(int i=head[x];i;i=line[i].pre){\n//            int v=line[i].en;\n//            if(dis[v]>dis[x]+line[i].w){\n//                dis[v]=dis[x]+line[i].w;\n//                if(!vis[v]){\n//                    vis[v]=1;\n//                    q.push(v);\n//                }\n//            }\n//        }\n//    }\n//    return (dis[(n+1)*(m+1)]);\n//}\n\nint main(){\n\t\n\tint T; cin>>T;\n\t\n\tFOR(ccc,1,T){\n\t\n\tn=read(); m=read();\n\t\n//\tfor(int i=1;i<=n+1;i++){\n//\t\tfor(int j=1;j<=m+1;j++)\n//\t\t\tcout<<change(i,j)<<\" \";\n//\t\tputs(\"\");\n//\t}\n\t\n\t\n\tmemset(head,0,sizeof(head));\n\tmemset(line,0,sizeof(line));\n\ttot=0;\n\t\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tchar dic; cin>>dic;\n\t\t\tif(dic=='/'){\n\t\t\t\t//cout<<\"run1\"<<endl;\n\t\t\t\tpush(change(i,j),change(i+1,j+1),1);\n\t\t\t\tpush(change(i+1,j+1),change(i,j),1);\n\t\t\t\tpush(change(i+1,j),change(i,j+1),0);\n\t\t\t\tpush(change(i,j+1),change(i+1,j),0); \n\t\t\t} \n\t\t\telse{\n\t\t\t\t//cout<<\"run2\"<<endl;\n\t\t\t\tpush(change(i,j),change(i+1,j+1),0);\n\t\t\t\tpush(change(i+1,j+1),change(i,j),0);\n\t\t\t\tpush(change(i+1,j),change(i,j+1),1);\n\t\t\t\tpush(change(i,j+1),change(i+1,j),1); \n\t\t\t} \n\t\t}\n\t\t\n\t//cout<<DJ()<<endl;\n\tlong long Ans=DJ();\n\tif(Ans==inf)\n\t\tcout<<\"NO SOLUTION\"<<endl;\n\telse\n\t\tcout<<Ans<<endl;\n\t\n\t}\n\t\n\treturn 0;\n}\n```\n--------------\n### \u9898\u5916\u8bdd\n\u7559\u4e86\u4e2aSPFA\u7684\u4ee3\u7801\uff0c\u6709\u597d\u4e8b\u8005\u53ef\u4ee5\u4ea4\u7740\u73a9\u73a9\u3002",
        "postTime": 1540830204,
        "uid": 29304,
        "name": "DYI_ZJZGC",
        "ccfLevel": 0,
        "title": "10.29\u65e5\u5fd7"
    },
    {
        "content": "\u5176\u5b9e\u5e76\u4e0d\u4e00\u5b9a\u8981\u624b\u5199\u5806\u3002\n\n\u611f\u8c22\u4f1f\u5927\u7684STL\u9020\u798f\u4f17\u751f\u3002\n\n\u4ecb\u7ecd\u4e00\u4e9bstl\u63d0\u4f9b\u7684~~\u6211\u7b2c\u4e00\u6b21\u7528\u7684~~\u5806\u64cd\u4f5c\u51fd\u6570\u3002\n- \uff08\u4ee5\u4e0b\u6240\u6709end\u90fd\u662f\u6570\u7ec4\u5c3e\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\uff09\n- \u751f\u6210\u5806\uff1amake_heap(T* begin,T* end)\uff0c\u5c06\u4e00\u4e2a\u65e0\u5e8f\u6570\u7ec4\u7ec4\u7ec7\u6210\u5806\u3002\n- \u63d2\u5165\u503c\uff1a\u5728\u6570\u7ec4\u5c3e\u52a0\u4e0a\u63d2\u5165\u7684\u6570\u503c\uff0c\u518d\u8c03\u7528push_heap(T* begin,T* end);\u7ef4\u62a4\u5806\u7684\u6027\u8d28\u3002\n- \u5f39\u51fa\u5806\u9876\uff1apop_heap(T* begin,T* end);\u6c5f\u5806\u9876\u79fb\u52a8\u5230\u961f\u5217\u5c3e\u90e8\uff0c\u5176\u4ed6\u90e8\u5206\u7ef4\u6301\u5806\u7684\u6027\u8d28\u3002\n- \u63d2\u5165\u5f39\u51fa\u8981\u6c42\u6570\u7ec4\u5df2\u7ecf\u662f\u4e00\u4e2a\u5806\n\n\u6ca1\u4e86\u4f18\u5148\u961f\u5217\u5e95\u5c42\u7684vector\uff0c\u4e0d\u5438\u6c27\uff0c\u5806+dij\u4e5f\u5c31ac\u4e86\u3002\n\n~~\u8dd1\u4e862758ms\uff0c\u6700\u5927\u70b9128ms\u3002~~\n```cpp\n#include <iostream>\n#include <algorithm>\n//#include <memory.h>\nusing namespace std;\n\nconst unsigned int INT_MAX=2147483647;\n\nconst int kmaxn=260000;\nconst int kmaxm=kmaxn<<3;\n/////////////////////////////////////////////////////\nstruct unit\n{\n\tint first;\n\tint second;\n\tunit():first(0),second(0){};\n\tunit(int f,int s):first(f),second(s){};\n\tconst int operator<(const unit& u)const\n\t{\n\t\treturn first>u.first;\n\t}\n};\nclass p_queue\n{\n\tunit heap[kmaxm];\n\tint otail;\n\tpublic:\n\t\tp_queue():otail(0){};\n\t\tunit top(){\n\t\t\tpop_heap(&heap[0],&heap[otail]);\n\t\t\treturn heap[otail-1];\n\t\t}\n\t\tvoid pop(){otail--;//\u4ee5\u524d\u662f\u4f18\u5148\u961f\u5217\u5199\u7684dij\uff0c\u5e72\u8106\u5c31\u8fd9\u6837\u51d1\u6d3b\u4e00\u4e0b\uff0c\u5176\u5b9etop\u91cc\u5f39\u51fa\u8981\u5b89\u5168\u4e00\u4e9b\uff0c\u6bd5\u7adfpop_heap\u4e4b\u540e\u6570\u7ec4\u5c3e\u5143\u7d20\u5df2\u7ecf\u4e0d\u7b26\u5408\u5806\u7684\u6027\u8d28\u4e86\u3002\n\t\t}\n\t\tvoid push(const unit v){\n\t\t\theap[otail++]=v;\n\t\t\tpush_heap(&heap[0],&heap[otail]);\n\t\t}\n\t\tconst bool empty()const{return !otail;}\n}q;\n\n//////////////////////////////////////////////////////\nstruct edge\n{\n\tint dest=0;\n\tlong long int length=0;\n\tedge* next=NULL;\n};\nconst int max_pool_size=kmaxn<<2;\nedge memory_pool[max_pool_size];\nint pool_otail;\nedge* list[kmaxn];//\u94fe\u5f0f\u524d\u5411\u661f\u662f\u4e0d\u4f1a\u5199\u7684\uff0c\u8fd9\u8f88\u5b50\u4e5f\u4e0d\u4f1a\u5199\u524d\u5411\u661f\u7684\nint result[kmaxn];\nbool hsh[kmaxn];\nvoid relax(int p)\n{\n\tedge* t=list[p];\n\twhile(t)\n\t{\n\t\tif(result[t->dest]>result[p]+t->length)\n\t\t{\n\t\t\tresult[t->dest]=result[p]+t->length;\n\t\t\tq.push(unit(result[t->dest],t->dest));\n\t\t}\n\t\tt=t->next;\n\t}\n}\nvoid shortest_path(const int start)\n{\n\tfor(register int i=0;i<kmaxn;++i)\n\t\tresult[i]=INT_MAX;\n\tq.push(unit(0,start));\n\tresult[start]=0;\n\tint count=0;\n\tint t=0;\n\twhile(!q.empty())\n\t{\n\t\t\tt=q.top().second;\n\t\t\tq.pop();\n\t\t\tif(!hsh[t])\n\t\t\t{\n\t\t\t\trelax(t);\n\t\t\t\thsh[t]=true;\n\t\t\t}\t\n\t}\n}\nvoid add_edge(const int& s,const int &d,const long long int &w)\n{\n\tif(list[s])\n\t{\n\t\tmemory_pool[pool_otail].next=list[s];\n\t}\n\tlist[s]=&memory_pool[pool_otail++];\n\tlist[s]->dest=d;\n\tlist[s]->length=w;\n}\n\n\n////////////////////////////////////////////////////\nint n,m;\nchar ch;\nint main()\n{\n \tios::sync_with_stdio(false);\n \tcin>>n>>m;\n \t++n;\n \t++m;\n \tfor(register int i=1;i<n;++i)\n \t{\n \t\tfor(register int f=1;f<m;++f)\n \t\t{\n \t\t\tcin>>ch;\n \t\t\tif(ch=='\\\\')\n \t\t\t{\n \t\t\t\t//map[i][m*i+f]=1;\n \t\t\t\tadd_edge(m*(i-1)+f,m*i+f+1,0);\n \t\t\t\tadd_edge(m*i+f+1,m*(i-1)+f,0);\n \t\t\t\tadd_edge(m*(i-1)+f+1,m*i+f,1);\n \t\t\t\tadd_edge(m*i+f,m*(i-1)+f+1,1);\n \t\t\t}\n \t\t\telse\n \t\t\t{\n \t\t\t\tadd_edge(m*(i-1)+f,m*i+f+1,1);\n \t\t\t\tadd_edge(m*i+f+1,m*(i-1)+f,1);\n \t\t\t\tadd_edge(m*(i-1)+f+1,m*i+f,0);\n \t\t\t\tadd_edge(m*i+f,m*(i-1)+f+1,0);\n \t\t\t}\n \t\t}\n \t}\n \tshortest_path(1);\n \tif(result[n*m]==INT_MAX)\n \t{\n \t\tcout<<\"NO SOLUTION\"<<endl;\n \t}\n \telse\n \t{\n \t\tcout<<result[n*m]<<endl;\n \t}\n \treturn 0;\n} \n```\n\u672c\u4eba\u849f\u84bb\uff0c\u5e0c\u671b\u5404\u4f4d\u795e\u7287\u6307\u51fa\u9519\u8befQAQ\u3002~~\u8fd8\u5e0c\u671b\u7ba1\u7406\u5458\u7ed9\u4e2a\u901a\u8fc7\u3002~~",
        "postTime": 1540384535,
        "uid": 56184,
        "name": "_\u8679_",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4667 \u3010[BalticOI 2011 Day1]Switch the Lamp On\u3011"
    },
    {
        "content": "             P2243 \u7535\u8def\u7ef4\u4fee   \n [ P2243 \u7535\u8def\u7ef4\u4fee](https://www.luogu.org/problemnew/show/P2243)    \n \n \u8fd9\u9053\u9898\u660e\u663e\u662f\u4e00\u4e2abfs\uff0c\u5c31\u7c7b\u4f3c\u4e8e\u8ff7\u5bab\u95ee\u9898\u561b\uff0c\u53ea\u662f\u591a\u4e86\u4e00\u4e2a\u7ef4\u62a4\u7684\u4e1c\u897f\uff0c---\u6700\u77ed\u7684\u6539\u53d8\u6b21\u6570\uff0c\u8fd9\u6837\u53ea\u8981\u6bcf\u4e2a\u70b9\u7ef4\u62a4\u4e00\u4e0b\u8fd9\u4e2a\u503c\uff0c\u8fd9\u5c31\u8981\u7528\u5230\u53cc\u7aef\u961f\u5217\uff0c\u5c31ok\u54af\u3002    \n \u7136\u540e\u6211\u4eec\u60f3\u600e\u4e48\u641e\uff0c\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5176\u5b9e\u4ece\u4e00\u4e2a\u70b9\u5230\u53e6\u5916\u4e00\u4e2a\u70b9\u6240\u82b1\u8d39\u7684\u4ee3\u4ef7\u8981\u4e48\u4e3a1\uff0c\u8981\u4e48\u4e3a0\uff0c\u6211\u4eec\u6700\u597d\u6bcf\u6b21\u90fd\u4ece\u5f53\u524d\u7684\u6700\u5c0f\u503c\u8f6c\u79fb\uff0c\u800c\u53cc\u7aef\u961f\u53ef\u4ee5\u7ef4\u62a4\u961f\u5217\u7684\u5355\u8c03\u6027\u3002  \n \u6211\u4eec\u53c8\u53ef\u4ee5\u628a\u65b9\u683c\u8f6c\u6362\u4e3a\u70b9\uff0c\u8fd9\u6837\u6211\u4eec\u76f4\u63a5\u6c42\u4ece0\uff0c0--->n,m\u7684\u6700\u77ed\u8def\uff08\u6700\u5c0f\u82b1\u8d39\uff09   \n \n \u82e5\u8fb9\u6743\u4e3a1\uff0c\u5219\u548c\u6b63\u5e38\u5e7f\u641c\u4e00\u6837\u4ece\u961f\u5c3e\u5165\u961f\uff1b\u82e5\u8fb9\u6743\u4e3a0\uff0c\u5219\u4ece\u961f\u9996\u5165\u961f\u3002\n \n \u56e0\u4e3a\u6211\u4eec\u53d6\u51fa\u7684\u90fd\u662f\u5f53\u524d\u6808\u4e2d\u5230\u67d0\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u5f84\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u53d6\u51fa\u7684\u503c\u5982\u679c\u5230\u53e6\u4e00\u4e2a\u70b9\u7684\u8ddd\u79bb\u8fd8\u4e3a0\uff0c\u5462\u4e48\u5c31\u8f6c\u79fb\uff0c\u6765\u66f4\u65b0\u3002\n \n ```cpp\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#include<cstdio>\n#include<queue>\n\nusing namespace std;\n\nconst int maxn=500001;\n\npair<int,int> que[2*maxn];\n\n\nint t;\nint li,ri;\nint cap;\n\nint n,m;\n\nchar s[501][501];\n\nint dist[501][501];\n\nbool check(int x,int y)\n{\n\treturn x>=0&&x<=n&&y>=0&&y<=m;\n}\n\nvoid add_que(int x,int y,int v)\n{\n\tif(dist[x][y]<0||dist[x][y]>v)\n\t{\n\t\tdist[x][y]=v;\n\t\tif(li==ri||v>dist[que[li].first][que[li].second])\n\t\t{\n\t\t\tque[ri++]=make_pair(x,y);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tque[--li]=make_pair(x,y);\n\t\t}\n\t}\n}\n\nint main()\n{\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%d%d\",&n,&m);\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t\t\tscanf(\"%s\",s[i]);\n\t\t}\n\t\tif((n+m)%2)\n\t\t{\n\t\t\tprintf(\"NO SOLUTION\\n\");\n\t\t\tcontinue;\n\t\t}\n\t\tmemset(dist,-1,sizeof(dist));\n\t\tdist[0][0]=0;\n\t\tli=ri=maxn;\n\t\tque[ri++]=make_pair(0,0);\n\t\twhile(li!=ri)\n\t\t{\n\t\t\tint cx=que[li].first;\n\t\t\tint cy=que[li].second;\n\t\t\t++li;\n\t\t\tif(check(cx-1,cy-1))\n\t\t\t{\n\t\t\t\tif(s[cx-1][cy-1]=='\\\\')\n\t\t\t\t{\n\t\t\t\t\tadd_que(cx-1,cy-1,dist[cx][cy]);\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tadd_que(cx-1,cy-1,dist[cx][cy]+1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(check(cx-1,cy+1))\n\t\t\t{\n\t\t\t\tif(s[cx-1][cy]=='/')\n\t\t\t\tadd_que(cx-1,cy+1,dist[cx][cy]);\n\t\t\t\telse\n\t\t\t\tadd_que(cx-1,cy+1,dist[cx][cy]+1);\n\t\t\t}\n\t\t\tif(check(cx+1,cy+1))\n\t\t\t{\n\t\t\t\tif(s[cx][cy]=='\\\\')\n\t\t\t\t{\n\t\t\t\t\tadd_que(cx+1,cy+1,dist[cx][cy]);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tadd_que(cx+1,cy+1,dist[cx][cy]+1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(check(cx+1,cy-1))\n\t\t\t{\n\t\t\t\tif(s[cx][cy-1]=='/')\n\t\t\t\t{\n\t\t\t\t\tadd_que(cx+1,cy-1,dist[cx][cy]);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tadd_que(cx+1,cy-1,dist[cx][cy]+1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",dist[n][m]);\n\t}\n}\n```\n \n ",
        "postTime": 1537354391,
        "uid": 102786,
        "name": "Sym_Je",
        "ccfLevel": 0,
        "title": "P2243 \u7535\u8def\u7ef4\u4fee"
    },
    {
        "content": "\u7531\u697c\u4e0a\u6240\u8bf4,\u8fd9\u7535\u8def\u56fe\u53ef\u4ee5\u8f6c\u5316\u6210\u56fe\uff0c\u9898\u76ee\u4efb\u52a1\u5c31\u662f\u6c42\u6700\u77ed\u8def\u3002\n\n\u4f46\u662f\u6709\u51e0\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\n\n1. \u7535\u8def\u56fe\u7684\u70b9\u8f6c\u6210\u56fe\u4e0a\u7684\u70b9\n\n2. \u5b58\u56fe\u53ef\u4ee5\u7528\u90bb\u63a5\u8868,vector<int>[],\u4f46\u662f\u6ce8\u610f\u5230\u9898\u76ee\u4e2d\u4e00\u4e2a\u7535\u8def\u56fe\u4e0a\u7684\u70b9\u6700\u591a\u53ea\u53ef\u4ee5\u6709\u56db\u6761\u8fb9\uff0cint M[251002][5]\u4e5f\u884c\u3002\n\n3. \u5728\u8fdb\u884cbfs\u4e2d\u65f6\u5982\u679c\u4f60\u7684dis[]\u6ca1\u6709\u4f5cbfs\u7684\u72b6\u6001\uff0c\u5343\u4e07\u4e0d\u8981\u542clyd\u4e66\u4e0a\u8bf4\u7684\u7b2c\u4e00\u6b21\u8bbf\u95ee\u4f18\u5316\u7684\u65b9\u6cd5\n\n\u9644\u4ee3\u7801\n\n```c++\n#include <bits/stdc++.h>\n\nusing namespace std;\n#define pii pair<int,int>\npii M[251002][5];\nint n[251002];\ninline char gc(){\n\tregister char t=getchar();\n\twhile (t!='\\\\'&&t!='/') t=getchar();\n\treturn t;\n}\n#define ri register int\ninline void cnt(ri from,ri to,ri v){M[from][n[from]++]=pii(to,v);}\ninline void cnt2(ri from,ri to,ri v){cnt(from,to,v);cnt(to,from,v);}\nint dis[251002];\nint R,C,to;\ninline int f(ri i,ri j){return i*C+i+j;}\nbool bfs(){\n\tdeque<int> d;\n\td.push_front(0);dis[0]=0;\n\twhile (!d.empty()){\n\t\tri from=d.front();d.pop_front();\n\t\tif (from==to) return true;\n\t\tfor (ri t=0;t<n[from];t++){\n\t\t\tregister pii &i=M[from][t];\n\t\t\tif (i.second==0){\n\t\t\t\tif (dis[i.first]>dis[from]){\n\t\t\t\t\tdis[i.first]=dis[from];\n\t\t\t\t\td.push_front(i.first);\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tif (dis[i.first]>dis[from]+1){\n\t\t\t\t\tdis[i.first]=dis[from]+1;\n\t\t\t\t\td.push_back(i.first);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nint main(){\n\tri T;\n\tscanf(\"%d\",&T);\n\twhile (T--){\n\t\tscanf(\"%d%d\",&R,&C);\n\t\tfor (ri i=1;i<=R;i++)\n\t\t\tfor (ri j=1;j<=C;j++)\n\t\t\t\tif (gc()=='\\\\'){\n\t\t\t\t\tcnt2(f(i,j),f(i-1,j-1),0);\n\t\t\t\t\tcnt2(f(i-1,j),f(i,j-1),1);\n\t\t\t\t}else{\n\t\t\t\t\tcnt2(f(i,j),f(i-1,j-1),1);\n\t\t\t\t\tcnt2(f(i-1,j),f(i,j-1),0);\n\t\t\t\t}\n\t\tmemset(dis,127,sizeof(dis));\n\t\tto=f(R,C);\n\t\tif (bfs()){\n\t\t\tcout << dis[to] << endl;\n\t\t}else{\n\t\t\tcout << \"NO SOLUTION\" << endl;\n\t\t}\n\t\tmemset(n,0,sizeof(n));\n\t}\n}\n```",
        "postTime": 1529502991,
        "uid": 46860,
        "name": "z3475",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2243 \u3010\u7535\u8def\u7ef4\u4fee\u3011"
    },
    {
        "content": "\u4ee4\u65cb\u8f6c\u540e\u7684\u8fb9\u7684\u8fb9\u6743\u4e3a1\uff0c\u4e0d\u65cb\u8f6c\u4e3a0.\n\n\u4e00\u4e2a\u65b9\u5757\u4e0d\u4f1a\u88ab\u91cd\u590d\u8d70\u4e24\u904d\uff0c\u56e0\u4e3a\u8fd9\u4e0d\u7b26\u5408\u6700\u77ed\u8def\u8d2a\u5fc3\u7b56\u7565\u3002\n\n\u4e8e\u662f\u5efa\u56fe\u8dd1\u6700\u77ed\u8def\u5c31\u884c\u3002\n\n\u5047\u8bbe\u4e00\u5f00\u59cb\u65b9\u5757\u662f`\\`\uff0c\u65b9\u5757\u7684\u5750\u6807\u4e3a`i,j`\uff0c\u90a3\u4e48\u70b9\u7684\u5750\u6807\u5c31\u4ece`i,j`\u5411`i+1,j+1`\u8fde\u8fb9\u6743\u4e3a0\u7684\u8fb9\uff0c`i+1,j`\u5411`i,j+1`\u8fde\u8fb9\u6743\u4e3a1\u7684\u8fb9\u3002`/`\u540c\u7406\u3002\n\n\u603b\u5171\u6709$(n+1)(m+1)$\u4e2a\u70b9.\u8d77\u70b9\u4e3a`0,0`\uff0c\u7ec8\u70b9\u4e3a`n,m`\u3002\u8fd9\u4e2a\u5e94\u8be5\u4e0d\u4f1a\u5f88\u96be\u60f3\u3002\n\n\u90a3\u4e48\u70b9\u6570\u53ef\u80fd\u8981\u7834$250000$\uff0c\u6709\u4e24\u79cd\u65b9\u6cd5\u8dd1\u6700\u77ed\u8def\uff1aDijkstra+Heap\uff0c\u6216\u8005\u662fSPFA+SLF+LLL\u4f18\u5316\u3002\u6211\u7528\u7684\u540e\u8005\u3002\u7531\u4e8edeque\u5e38\u6570\u60ca\u4eba\uff0c\u5f00\u4e86O2\u624d\u8fc7....\n\n## Code\n\n```cpp\n// Code by ajcxsu\n// Problem: Network\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=3e5,M=3e6;\nint h[N],to[M],nexp[M],W[M],p=1;\ninline void ins(int a,int b,int w) {\n    nexp[p]=h[a], h[a]=p, to[p]=b, W[p]=w, p++;\n}\n#define dins(x,y,z) ins(x,y,z), ins(y,x,z)\n\nint n,m;\ninline int point(int x,int y) {\n    return x*(m+1)+y;\n}\n\nbool S[N];\nint dist[N];\nint SPFA(int s,int t) {\n    memset(dist,0x3f,sizeof(dist));\n    dist[s]=0;\n    S[s]=1;\n    deque<int> qu;\n    qu.push_back(s);\n    int na;\n    int tot=0;\n    while(!qu.empty()) {\n        while(dist[qu.front()]>tot/qu.size()) qu.push_back(qu.front()), qu.pop_front();\n        na=qu.front(), qu.pop_front();\n        tot-=dist[na];\n        S[na]=0;\n        for(int u=h[na];u;u=nexp[u])\n            if(dist[na]+W[u]<dist[to[u]]) {\n                dist[to[u]]=dist[na]+W[u];\n                if(!S[to[u]]) {\n                    if(qu.empty() || dist[qu.front()]>dist[to[u]]) qu.push_front(to[u]);\n                    else qu.push_back(to[u]);\n                    tot+=dist[to[u]];\n                }\n            }\n    }\n    return dist[t];\n}\n\nint main() {\n    ios::sync_with_stdio(false);\n    int T;\n    cin>>T;\n    while(T--) {\n        memset(h,0,sizeof(h)), p=1;\n        cin>>n>>m;\n        char ch;\n        for(int i=0;i<n;i++)\n        for(int j=0;j<m;j++) {\n            cin>>ch;\n            if(ch=='\\\\') dins(point(i,j), point(i+1,j+1),0), dins(point(i+1,j), point(i,j+1),1);\n            if(ch=='/') dins(point(i,j), point(i+1,j+1),1), dins(point(i+1,j), point(i,j+1),0);\n        }\n        int ans=SPFA(point(0,0), point(n,m));\n        if(ans==0x3f3f3f3f) cout<<\"NO SOLUTION\"<<endl;\n        else cout<<ans<<endl;\n    }\n\n    return 0;\n}\n\n```",
        "postTime": 1522916930,
        "uid": 5554,
        "name": "Sino_E",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2243 \u3010\u7535\u8def\u7ef4\u4fee\u3011"
    },
    {
        "content": "\u4e0d\u9519\u7684\u4e00\u9053\u56fe\u8bba\n\n\u5bf9\u4e8e**\u6bcf\u4e00\u4e2a**\u6b63\u65b9\u5f62\uff0c\u6211\u4eec\u628a\u5b83\u7684\u56db\u4e2a\u70b9\u90fd\u63d0\u53d6\u51fa\u6765\uff0c\u5047\u5982\u4e24\u4e2a\u70b9\u4e2d\u6709\u5bf9\u89d2\u7ebf\uff0c\u5c31\u8fde\u4e0a\u8fb9\u6743\u4e3a0\u7684\u8fb9\uff0c\u6ca1\u6709\u5c31\u8fde\u8fb9\u6743\u4e3a1\u7684\u8fb9\uff08\u8868\u793a\u9700\u8981\u8f6c\uff09\u3002\n\n\u63a5\u4e0b\u6765\u76f4\u63a5\u8dd1\u6700\u77ed\u8def\u5c31\u884c\u4e86\uff0c\u6211\u7528\u7684\u5806\u4f18\u5316dij.\n\n\u5177\u4f53\u89c1\u4ee3\u7801\n\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <queue>\n#include <string>\n#include <iostream>\n#define M 4*501*501\n#define N 1000*1000\n#define INF 0x3f3f3f3f\nusing namespace std;\ntypedef pair<int,int> Pair;\nstruct node\n{\n    int to,value,next;\n}e[M];\nint tot,st[M];\nint n,m;\nvoid add(int x,int y,int z)\n{\n    e[++tot].to=y;\n    e[tot].value=z;\n    e[tot].next=st[x];\n    st[x]=tot;\n}\nint dis[N];\nbool flag[N];\npriority_queue< Pair,vector<Pair>,greater<Pair> >que;\nint dij(int start,int end)\n{\n    memset(flag,0,sizeof flag);\n    dis[start]=0;\n    que.push(make_pair(dis[start],start));\n    while (!que.empty())\n    {\n        Pair now=que.top();\n        que.pop();\n        if (flag[now.second]) continue;\n        flag[now.second]=1;\n        for (int i=st[now.second];i;i=e[i].next)\n            if (dis[now.second]+e[i].value<dis[e[i].to])\n            {\n                dis[e[i].to]=dis[now.second]+e[i].value;\n                if (!flag[e[i].to]) que.push(make_pair(dis[e[i].to],e[i].to));\n            }\n    }\n    return dis[end];\n}\nmain()\n{\n    int T;\n    scanf(\"%d\",&T);\n    while(T--)\n    {\n        memset(e,0,sizeof e);\n        memset(st,0,sizeof st);\n    int a1,a2,a3,a4;\n    tot=0;\n    scanf(\"%d %d\",&n,&m);\n    for (int i=1;i<=n;i++)\n    {\n        char s[510];\n        scanf(\"%s\",&s);\n        for (int j=1;j<=m;j++)\n        {\n            if (s[j-1]=='/')   /*   ->  / */\n            {\n                int a1=(i-1)*(m+1)+j;\n                int a2=i*(m+1)+j+1;\n                int a3=(i-1)*(m+1)+j+1;\n                int a4=i*(m+1)+j;\n            //    printf(\"i:%d,j:%d,%d,%d,%d,%d\\n\",i,j,a1,a2,a3,a4);\n                add(a1,a2,1);\n                add(a2,a1,1);\n                add(a3,a4,0);\n                add(a4,a3,0);\n            }\n            else    /*    -> \\ */\n            {\n                int a1=(i-1)*(m+1)+j;\n                int a2=i*(m+1)+j+1;\n                int a3=(i-1)*(m+1)+j+1;\n                int a4=i*(m+1)+j;\n            //    printf(\"i:%d,j:%d,%d,%d,%d,%d\\n\",i,j,a1,a2,a3,a4);\n                add(a1,a2,0);\n                add(a2,a1,0);\n                add(a3,a4,1);\n                add(a4,a3,1);\n            }\n        }\n    }\n    for(int i=1;i<=(n+1)*(m+1);++i)\n          dis[i]=INF;\n    int ans=dij(1,(n+1)*(m+1));\n    if (ans==INF)\n        printf(\"NO SOLUTION\\n\");\n    else\n        printf(\"%d\\n\",ans);\n    }\n}\n```",
        "postTime": 1478688571,
        "uid": 17689,
        "name": "\u8fdc\u822a\u4e4b\u66f2",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2243 \u3010\u7535\u8def\u7ef4\u4fee\u3011"
    },
    {
        "content": "\u601d\u8def\u540c\u697c\u4e0b\u795e\u7287\uff0c\u4f46\u662f\uff0c\u6c42\u6700\u77ed\u8def\u7684\u65f6\u5019\u4e0d\u80fd\u7528folyd\uff0c\u666e\u901adijkstra\uff0c\u6211\u666e\u901adijkstra50\u5206\n\n\u8fd8\u6709\uff0c\u6bcf\u6b21\u64cd\u4f5c\u4e00\u5b9a\u8981\u5c06\u6570\u7ec4\u6e05\u96f6\uff01\uff01\uff01\u8fd9\u662f\u4ee3\u7801\u4e60\u60ef\u95ee\u9898\uff0c\u597d\u5427\uff0c\u6211\u627f\u8ba4\u672c\u849f\u84bb\u4e60\u60ef\u4e0d\u597d\n\n\u8fd9\u91cc\u9644\u4e0a\u4ee3\u7801\uff1a\n\n\n\n\n```cpp\n program ex02;\ntype rec=record n,t,d:longint; end;\n     rec2=record num,data:longint; end;\nvar w:array[0..5001000] of rec;\n    h,d,pl:array[0..300000] of longint;\n    small:array[0..300000] of rec2;\n    v:array[0..300000] of boolean;\n    map:array[0..501,0..501] of string[2];\n    t,n,m,tot,cnt:longint;\n    i:longint;\nprocedure init;\nvar i,j:longint;\n    s:ansistring;\nbegin\n  readln(n,m);\n  for i:=1 to n do\n  begin\n    readln(s);\n    for j:=1 to m do\n     map[i,j]:=s[j];\n  end;\n  fillchar(small,sizeof(small),127);\n  small[0].data:=0;\nend;\nprocedure make(x,y,k:longint);\nbegin\n  inc(tot);\n  w[tot].n:=h[x]; h[x]:=tot; w[tot].t:=y; w[tot].d:=k;\n  inc(tot);\n  w[tot].n:=h[y]; h[y]:=tot; w[tot].t:=x; w[tot].d:=k;\nend;\nprocedure pre;\nvar i,j:longint;\nbegin\n  for i:=1 to n do\n   for j:=1 to m do\n   begin\n    if map[i][j]='/' then begin make((i)*(m+1)+j,(i-1)*(m+1)+j+1,0); make((i-1)*(m+1)+j,i*(m+1)+j+1,1); end;\n    if map[i][j]='\\' then begin make((i)*(m+1)+j,(i-1)*(m+1)+j+1,1); make((i-1)*(m+1)+j,i*(m+1)+j+1,0); end;\n   end;\nend;\nprocedure swap(a,b:longint);\nvar p:rec2; q:longint;\nbegin\n  q:=pl[small[a].num]; pl[small[a].num]:=pl[small[b].num]; pl[small[b].num]:=q;\n  p:=small[a]; small[a]:=small[b]; small[b]:=p;\nend;\nprocedure put(x:longint);\nvar k:longint;\nbegin\n  if pl[x]=0 then\n  begin\n    inc(cnt);\n    pl[x]:=cnt;\n    small[cnt].num:=x;\n    small[cnt].data:=d[x];\n    k:=cnt;\n  end\n  else\n  begin\n    small[pl[x]].data:=d[x];\n    k:=pl[x];\n  end;\n  while small[k].data<small[k div 2].data do\n  begin\n    swap(k,k div 2);\n    k:=k div 2;\n  end;\nend;\nfunction get:longint;\nvar k:longint;\nbegin\n  get:=small[1].num;\n  pl[small[cnt].num]:=1;\n  small[1]:=small[cnt];\n  small[cnt].data:=maxlongint;\n  k:=1;  dec(cnt);\n  if cnt>0 then\n  while (small[k].data>small[k*2].data) or (small[k].data>small[k*2+1].data) do\n  begin\n    if small[k*2].data<small[k*2+1].data then\n    begin\n      swap(k,k*2);\n      k:=k*2;\n    end\n    else\n    begin\n      swap(k,k*2+1);\n      k:=(k*2+1);\n    end;\n  end;\nend;\nprocedure find(x:longint);\nvar k:longint;\nbegin\n  k:=h[x];\n  while k>0 do\n  begin\n    if not v[w[k].t] then\n      if w[k].d+d[x]<d[w[k].t] then\n      begin\n        d[w[k].t]:=w[k].d+d[x];\n        put(w[k].t);\n      end;\n    k:=w[k].n;\n  end;\nend;\nprocedure dij(x:longint);\nvar i:longint;\n    p,min:longint;\nbegin\n  d[x]:=0;\n  v[x]:=true;\n  find(x);\n  for i:=1 to (n+1)*(m+1)-1 do\n  begin\n    if cnt>0 then\n     p:=get\n    else\n     break;\n    v[p]:=true;\n    find(p);\n  end;\nend;\nbegin\n  readln(t);\n  for i:=1 to t do\n  begin\n    fillchar(v,sizeof(v),false);\n    fillchar(d,sizeof(d),127);\n    fillchar(h,sizeof(h),0);\n    fillchar(w,sizeof(w),0);\n    fillchar(pl,sizeof(pl),0);\n    cnt:=0;\n    tot:=0;\n    init;             //\u8bfb\u5165\n    pre;            //\u5efa\u8fb9\n    dij(1);          //\u5806\u4f18dij\n        if d[(n+1)*(m+1)]<=20000000 then\n     writeln(d[(n+1)*(m+1)])\n        else writeln('NO SOLUTION');\n  end;\nend.\npascal \u5806\u795e\u9a6c\u7684\u6700\u8ba8\u538c\u4e86\uff08~~~~(>_<)~~~~\uff09\n```",
        "postTime": 1478223792,
        "uid": 9525,
        "name": "fengjunjie",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2243 \u3010\u7535\u8def\u7ef4\u4fee\u3011"
    }
]