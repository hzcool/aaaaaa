[
    {
        "content": "# \u82e5\u516c\u5f0f\u5931\u6548\u8bf7\u5230\u535a\u5ba2\u5185\u67e5\u770b\n# \u82e5\u516c\u5f0f\u5931\u6548\u8bf7\u5230\u535a\u5ba2\u5185\u67e5\u770b\n# \u82e5\u516c\u5f0f\u5931\u6548\u8bf7\u5230\u535a\u5ba2\u5185\u67e5\u770b\n\u4e3a\u4e86\u9632\u6b62\u6709\u4eba\u770b\u4e0d\u89c1\uff08\u91cd\u590d\u4e09\u904d\uff09\n---\n\u9898\u4e0a\u8981\u6c42\u6211\u4eec\u6c42\u51fa\uff1a\u9009\u62e9\u4e00\u5bf9 $i,j,i+1<j$ \u5c06\u5e8f\u5217\u5206\u4e3a\u4e09\u6bb5\uff08$[1,i],[i+1,j-1],[j,n]$\uff09\u81f3\u5c11\u6709\u4e00\u6bb5\u5305\u542b\u5b50\u4e32 $S_{l,r}$ \u7684\u65b9\u6848\u3002\n\n\u76f4\u63a5\u6c42\u6ca1\u6709\u4ec0\u4e48\u601d\u8def\uff0c\u8003\u8651\u6c42\u51fa\u6bcf\u4e00\u6bb5\u90fd\u4e0d\u5305\u542b\u5b50\u4e32 $S_{l,r}$ \u7684\u65b9\u6848\uff0c\u7136\u540e\u7528\u603b\u65b9\u6848 ${n-1}\\choose 2$ \u51cf\u6389\u5373\u53ef\u3002\n\n> \u7531\u4e8e\u9898\u4e0a\u8981\u6c42 $l,r$ \u4e0d\u76f8\u90bb\u6240\u4ee5\u603b\u65b9\u6848\u662f ${n-1}\\choose 2$ \u3002\n\n---\n\n\u9996\u5148\u8981\u77e5\u9053\u6240\u6709\u4e0e $S_{l,r}$ \u76f8\u540c\u7684\u5b50\u4e32\u7684\u4f4d\u7f6e\u3002\n\n\u8fd9\u4e2a\u53ef\u4ee5\u76f4\u63a5\u7528\u540e\u7f00\u81ea\u52a8\u673a+\u7ebf\u6bb5\u6811\u5408\u5e76+\u6811\u4e0a\u500d\u589e\u6c42\u51fa\n\n\u73b0\u5728\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u6bcf\u4e2a\u4e0e $S_{l,r}$ \u76f8\u540c\u7684\u5b50\u4e32\u7684\u4f4d\u7f6e\uff0c\u5047\u8bbe\u6709 $m$ \u4e2a\u8fd9\u6837\u7684\u5b50\u4e32\uff0c\u7b2c $i$ \u4e2a\u5b50\u4e32\u4f4d\u4e8e $[l_i,r_i]$ \u3002\n\n\u9996\u5148\u53ef\u4ee5\u89c2\u5bdf\u5f97\u51fa\u5982\u679c\u5b58\u5728\u4e09\u4e2a\u4ee5\u4e0a\u4e92\u4e0d\u76f8\u4ea4\u7684\u5b50\u4e32\uff0c\u7b54\u6848\u4e3a $0$\u3002\n\n\u90a3\u4e48\u5269\u4e0b\u7684\u5b50\u4e32\u53ea\u5b58\u5728\u4e24\u79cd\u60c5\u51b5\u3002\n\n>\u4e0b\u6587\u51fa\u73b0\u7684 $len$ \u6307\u8be2\u95ee\u7684\u5b50\u4e32\u957f\u5ea6\u3002\n\n## \u60c5\u51b5 1 \n\n> \u6700\u9760\u5de6\u7684\u5b50\u4e32\u4e0e\u6700\u9760\u53f3\u7684\u5b50\u4e32\u76f8\u4ea4\n\n![image](https://cdn.luogu.com.cn/upload/image_hosting/cx9ixlks.png)\n\n\u5728\u8fd9\u91cc\u6211\u4eec\u5c06 $i$ \u9009\u62e9\u7684\u4f4d\u7f6e\u5206\u7c7b\u3002\n\n1. \u5f53 $i\\in[1,l_1)$ \u65f6\uff0c\u663e\u7136 $S_{1,i}$ \u4e0d\u5305\u542b\u4efb\u4f55\u5b50\u4e32\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u4fdd\u8bc1 $S_{i+1,j-1}$ \u548c $S_{j,n}$ \u4e0d\u5305\u542b\u4efb\u610f\u5b50\u4e32\u5373\u53ef\u3002\u53ef\u4ee5\u53d1\u73b0\u5408\u6cd5\u7684 $j$ \u9009\u62e9\u7684\u533a\u95f4\u4e00\u5b9a\u662f $(l_m,r_1]$\u3002\n\n   \u8fd9\u90e8\u5206\u7684\u8d21\u732e\u4e3a\uff1a\n   $$\n   (l_1-1)(r_1-l_m)\n   $$\n\n2. \u5f53 $i\\in[l_i,l_{i+1})$ \u65f6\uff0c\u663e\u7136 $S_{1,i}$ \u4e0d\u5305\u542b\u4efb\u4f55\u5b50\u4e32\uff0c\u6b64\u65f6 $S_{j,n}$ \u7684\u9650\u5236\u5c31\u662f $l_m<j$ \uff0c $S_{i+1,j-1}$  \u7684\u9650\u5236\u662f $j\\leq r_{i+1}$\u3002\uff08\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u5f53 $i\\in[l_1,l_2)$ \u65f6 $j\\in(l_3,r_2]$ \uff0c\u5f53 $i\\in[l_2,l_3)$ \u65f6 $j\\in(l_3,r_3]$\uff09\n\n   \u8fd9\u7c7b\u60c5\u51b5\u8d21\u732e\u4e3a\uff1a\n   $$\n   \\sum_{i=1}^{m-1}(l_{i+1}-l_i)(r_{i+1}-l_m)=\\sum_{i=1}^{m-1}(r_{i+1}-r_i)(r_{i+1}-l_m)\n   $$\n\n3. \u5f53 $i\\in[l_m,r_1)$ \u65f6\uff0c\u53ea\u9700\u8981\u4fdd\u8bc1 $i+1<j$ \u5373\u53ef\uff0c\u6b64\u65f6\u7684\u65b9\u6848\u6570\u76f8\u5f53\u4e8e $j$ \u5728 $[l_m,r_1]$ \u4e2d\u7684\u65b9\u6848\u6570$+\\ j$ \u5728 $(r_1,n]$ \u4e2d\u7684\u65b9\u6848\u6570\u3002\n\n   \u8fd9\u90e8\u5206\u7684\u8d21\u732e\u4e3a\uff1a\n   $$\n   {{r_1-l_m}\\choose 2}+(r_1-l_m)(n-r_1)\n   $$\n\n4. \u5f53 $i\\in[r_1,n]$ \u65f6\uff0c\u7b54\u6848\u4e3a $0$ \n\n\u6240\u4ee5\u60c5\u51b5 $1$ \u7684\u603b\u65b9\u6848\u662f\n$$\n\\sum_{i=1}^{m-1}(r_{i+1}-r_i)(r_{i+1}-l_m)+{{r_1-l_m}\\choose 2}+(r_1-l_m)(n-r_1)+(l_1-1)(r_1-l_m)\n$$\n\n ## \u60c5\u51b5 2 \n\n> \u6700\u9760\u5de6\u7684\u5b50\u4e32\u4e0e\u6700\u9760\u53f3\u7684\u5b50\u4e32\u4e0d\u76f8\u4ea4\n\n![image](https://cdn.luogu.com.cn/upload/image_hosting/w1r6xxwg.png)\n\n\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u53ef\u4ee5\u53d1\u73b0\u6ee1\u8db3\u6761\u4ef6\u7684 $i,j$ \u9996\u5148\u5fc5\u987b\u6ee1\u8db3 $i<r_1,l_m<j$ \u3002\n\n1. \u7531\u4e8e\u6700\u9760\u5de6\u7684\u533a\u95f4\u548c\u6700\u9760\u53f3\u7684\u533a\u95f4\u5e76\u4e0d\u76f8\u4ea4\uff0c\u6240\u4ee5\u5982\u679c $i\\in[1,l_1)$  \u663e\u7136\u4e0d\u5b58\u5728\u5408\u6cd5\u7684 $j$ \u3002\n\n2. \u5f53 $i\\in[l_i,l_{i+1})$ \u65f6\uff0c\u53ef\u4ee5\u53d1\u73b0\u8fd9\u91cc\u4e0e\u60c5\u51b5 $1$ \u552f\u4e00\u4e0d\u540c\u70b9\u5c31\u5728\u4e8e $l_{i+1}$ \u53ef\u80fd\u5927\u4e8e $r_1$ \uff08$l_4>r_1$\uff09\u3002\n\n   \u53ef\u4ee5\u89c2\u5bdf\u7684\u51fa\uff0c\u82e5 $l_m<r_{i+1}$ \u4e14 $l_{i+1}<r_1$ \u8fd8\u662f\u53ef\u4ee5\u4f7f\u7528\u60c5\u51b5 $1$ \u7684\u65b9\u6cd5\u6c42\u51fa\u5373\uff1a\n   $$\n   \\sum_{i=1}^{m-1}(r_{i+1}-r_i)(r_{i+1}-l_m),l_m<r_{i+1}<r_1+len-1\n   $$\n   \u5982\u4e0a\u56fe\u6240\u793a\u6b64\u65f6\u6211\u4eec\u5df2\u7ecf\u6c42\u51fa\u4e86 $i\\in[l_1,l_3)$ \u7684\u7b54\u6848\uff0c\u4f46\u662f\u5f53 $i\\in[l_3,r_1)$ \u4e2d\u7684\u7b54\u6848\u5728\u4e0a\u5f0f\u4e2d\u5e76\u6ca1\u6709\u88ab\u8ba1\u7b97\u3002\n\n   \u8fd9\u79cd\u60c5\u51b5\u8d21\u732e\u663e\u7136\u662f $(r_1-l_3)(r_4-l_4)$ \n\n   \u66f4\u666e\u904d\u7684\uff0c\u627e\u5230 $r_1+len-1$ \u7684\u5728 `right` \u96c6\u5408\u4e2d\u7684\u524d\u9a71 $p_1$ \u548c\u540e\u7ee7 $p_2$ \n\n   \u90a3\u8fd9\u79cd\u60c5\u51b5\u7684\u8d21\u732e\u4e3a $(r_1-l_{p_1})(r_{p_2}-l_m),r_{p_2}>l_m$\n\n\u6240\u4ee5\u60c5\u51b5 $2$ \u6bd4\u60c5\u51b5 $1$ \u590d\u6742\u8bb8\u591a\u3002\n\n\u4f46\u672c\u8d28\u53ea\u6709\u4e24\u4e2a\u6c42\u548c\u516c\u5f0f\n$$\n\\sum_{i=1}^{m-1}(r_{i+1}-r_i)(r_{i+1}-l_m),l_m<r_{i+1}<r_1+len-1\n$$\n\n$$\n(r_1-l_{p_1})(r_{p_2}-l_m),r_{p_2}>l_m\n$$\n\n## \u4ee3\u7801\u5b9e\u73b0\n\n\u7ebf\u6bb5\u6811\u9700\u8981\u7ef4\u62a4\u533a\u95f4\u6700\u5927\u503c\uff0c\u533a\u95f4\u6700\u5c0f\u503c\uff0c\u8fd8\u9700\u8981\u7ef4\u62a4 $(r_{i+1}-r_i)r_{i+1}$ \u548c $(r_{i+1}-r_i)$\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee $l,r$ \n\n\u901a\u8fc7\u500d\u589e\u627e\u5230 $S_{1,r}$ \u5bf9\u5e94 `parent` \u6811\u4e0a\u54ea\u4e2a\u8282\u70b9\u3002\n\n\u7136\u540e\u5148\u5224\u65ad\u662f\u5426\u5b58\u5728\u4e09\u4e2a\u4e0d\u76f8\u4ea4\u7684\u533a\u95f4\uff0c\u53ef\u4ee5\u5148\u627e\u51fa\u6700\u9760\u5de6\u7684\u4f4d\u7f6e\u548c\u6700\u9760\u53f3\u7684\u4f4d\u7f6e\u7136\u540e\u67e5\u8be2\u533a\u95f4\u6700\u5927\u503c\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u60c5\u51b5 $1$ \u6216\u60c5\u51b5 $2$ \u5206\u522b\u6c42\u89e3\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\u60c5\u51b5 $1$ \u548c\u60c5\u51b5 $2$ \u90fd\u6709 $(r_{i+1}-r_i)(r_{i+1}-l_m)=(r_{i+1}-r_i)r_{i+1}-(r_{i+1}-r_i)l_m$ \u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=2e5+10;\nconst int inf=0x3f3f3f3f;\nstruct Node{int Min,Max;long long sum1,sum2;}tr[maxn*40];\nstruct Segment_Tree\n{\n    int son[maxn*40][2],tot;\n    Node merge(const Node &a,const Node &b)\n    {\n        Node c;\n        c.Min=min(a.Min,b.Min);\n        c.Max=max(a.Max,b.Max);\n        c.sum1=a.sum1+b.sum1+b.Min*1LL*(b.Min-a.Max);\n        c.sum2=a.sum2+b.sum2+b.Min-a.Max;\n        return c;\n    }\n    int Find_Max(int l,int r,int rt,int L,int R)\n    {\n        if(!rt)return 0;\n        if(L<=l&&r<=R)return tr[rt].Max;\n        int mid=l+r>>1,ans=0;\n        if(L<=mid)ans=Find_Max(l,mid,son[rt][0],L,R);\n        if(R>mid)ans=max(ans,Find_Max(mid+1,r,son[rt][1],L,R));\n        return ans;\n    }\n    int Find_Min(int l,int r,int rt,int L,int R)\n    {\n        if(!rt)return inf;\n        if(L<=l&&r<=R)return tr[rt].Min;\n        int mid=l+r>>1,ans=inf;\n        if(L<=mid)ans=Find_Min(l,mid,son[rt][0],L,R);\n        if(R>mid)ans=min(ans,Find_Min(mid+1,r,son[rt][1],L,R));\n        return ans;\n    }\n    Node tmp;\n    void Query(int l,int r,int rt,int L,int R)\n    {\n        if(!rt)return;\n        if(L<=l&&r<=R)\n        {\n            if(tmp.Min==0)tmp=tr[rt];\n            else tmp=merge(tmp,tr[rt]);\n            return ;\n        }\n        int mid=l+r>>1;\n        if(L<=mid)Query(l,mid,son[rt][0],L,R);\n        if(R>mid)Query(mid+1,r,son[rt][1],L,R);\n    }\n    void update(int l,int r,int &rt,int p)\n    {\n        if(!rt)rt=++tot;\n        if(l==r)\n        {\n            tr[rt].Min=tr[rt].Max=p;\n            tr[rt].sum1=tr[rt].sum2=0;\n            return;\n        }\n        int mid=l+r>>1;\n        if(p<=mid)update(l,mid,son[rt][0],p);\n        else update(mid+1,r,son[rt][1],p);\n        if(son[rt][0]&&son[rt][1])tr[rt]=merge(tr[son[rt][0]],tr[son[rt][1]]);\n        else if(son[rt][0])tr[rt]=tr[son[rt][0]];\n        else tr[rt]=tr[son[rt][1]];\n    }\n    int Merge(int x,int y)\n    {\n        if(!x||!y)return x+y;\n        int rt=++tot;\n        son[rt][0]=Merge(son[x][0],son[y][0]);\n        son[rt][1]=Merge(son[x][1],son[y][1]);\n        if(son[rt][0]&&son[rt][1])tr[rt]=merge(tr[son[rt][0]],tr[son[rt][1]]);\n        else if(son[rt][0])tr[rt]=tr[son[rt][0]];\n        else tr[rt]=tr[son[rt][1]];\n        return rt;\n    }\n}T;\nint root[maxn],cnt=0,lst;\nint son[maxn][10],fa[maxn];\nint len[maxn],pos[maxn],up[maxn][19],dep[maxn];\nvoid Add(int c,int id)\n{\n    int cur=++cnt,p=lst;\n    lst=pos[id]=cur,len[cur]=len[p]+1;\n    while(p&&!son[p][c])son[p][c]=cur,p=fa[p];\n    if(!p)fa[cur]=1;\n    else \n    {\n        int q=son[p][c];\n        if(len[p]+1==len[q])fa[cur]=q;\n        else \n        {\n            int nq=++cnt;len[nq]=len[p]+1;\n            memcpy(son[nq],son[q],sizeof(son[q]));\n            fa[nq]=fa[q],fa[q]=fa[cur]=nq;\n            while(p&&son[p][c]==q)son[p][c]=nq,p=fa[p];\n        }    \n    }    \n}\nint n;\nint head[maxn],ecnt=0;\nstruct edge{int v,nxt;}e[maxn<<1];\nvoid add(int u,int v){e[++ecnt]=(edge){v,head[u]},head[u]=ecnt;}\nvoid dfs(int u)\n{\n    up[u][0]=fa[u];\n    for(int i=1;i<=18;i++)up[u][i]=up[up[u][i-1]][i-1];\n    for(int i=head[u];~i;i=e[i].nxt)\n    {\n        int v=e[i].v;\n        dep[v]=dep[u]+1;\n        dfs(v);\n        if(u!=1)root[u]=T.Merge(root[u],root[v]);\n    }\n}\nvoid build()\n{\n    memset(head,-1,sizeof(head)),ecnt=0;\n    for(int i=1;i<=cnt;i++)if(fa[i])add(fa[i],i);\n    for(int i=1;i<=n;i++)T.update(1,n,root[pos[i]],i);\n    dfs(1);\n}\nlong long C(int len)\n{\n    if(len<2)return 0;\n    return len*1LL*(len-1)/2;\n}\nlong long query(int l,int r)\n{\n    int Len=r-l+1,u=pos[r];\n    for(int i=18;i>=0;i--)if(len[up[u][i]]>=Len)u=up[u][i];\n    int L=tr[root[u]].Min,R=tr[root[u]].Max;\n    if(L<R-Len*2+1&&T.Find_Max(1,n,root[u],L,R-Len)-Len+1>L)return C(n-1);\n    if(R-Len+1<=L)\n    {\n        Node now=tr[root[u]];\n        int lm=R-Len+1;\n        long long ans=now.sum1-now.sum2*lm+C(L-lm)+(L-lm)*1LL*(n-Len);\n        return C(n-1)-ans;\n    }\n    else \n    {\n        T.tmp=(Node){0,0,0,0};\n        int lm=R-Len+1,poslm=T.Find_Max(1,n,root[u],1,lm);\n        T.Query(1,n,root[u],poslm,L+Len-1);\n        Node now=T.tmp;\n        int p1=T.Find_Max(1,n,root[u],1,L+Len-1);\n        int p2=T.Find_Min(1,n,root[u],L+Len,n);\n        long long ans=now.sum1-now.sum2*lm+(p2>lm?(L-(p1-Len+1))*1LL*(p2-lm):0);\n        return C(n-1)-ans;\n    }\n}\nchar s[maxn];\nint q;\nint main()\n{\n    scanf(\"%d%d\",&n,&q);\n    scanf(\"%s\",s+1);\n    cnt=lst=1;\n    for(int i=1;i<=n;i++)Add(s[i]-'0',i);\n    build();\n    while(q--)\n    {\n        int l,r;\n        scanf(\"%d%d\",&l,&r);\n        printf(\"%lld\\n\",query(l,r));\n    }\n}\n```\n\n",
        "postTime": 1583240554,
        "uid": 19951,
        "name": "Reaepita",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4384 \u3010[\u516b\u7701\u8054\u80032018]\u5236\u80e1\u7a9c\u3011"
    },
    {
        "content": "\u4ece\u53bb\u5e74\u4e5d\u7701\u8054\u8003\u5495\u5495\u5495\u5230\u73b0\u5728\u7684\u4e00\u9053\u9898\n\n~~\u7ec6\u8282\u76f8\u5f53\u70e6\u4eba\u5e76\u4e14\u7801\u91cf\u5de8\u5927\uff0c\u505a\u597d\u78014~5\u4e2akb\u7684\u5fc3\u7406\u51c6\u5907~~\n\n____________________\n\n### \u524d\u7f6e\u829d\u58eb:\u540e\u7f00\u81ea\u52a8\u673a(SAM)\n\n\u5982\u679c\u4f60\u4e0d\u77e5\u9053\u4ec0\u4e48\u662f\u540e\u7f00\u81ea\u52a8\u59ec\u6216\u8005\u77e5\u9053\u540e\u7f00\u81ea\u52a8\u59ec\u662f\u4ec0\u4e48\u4f46\u662f\u60f3\u5b66\u7684\u4eba\n\n~~\u53ef\u4ee5\u51fa\u95e8\u5de6\u8f6c\u4f60\u7ad9\u6a21\u677f\u533a\u5305\u6559\u5305\u4f1a~~\n\n~~\u8bb2\u4e2a\u7b11\u8bdd\uff0cSAM\u5f88\u4f11\u95f2\u7684~~\n\n### \u524d\u7f6e\u829d\u58eb:\u7ebf\u6bb5\u6811\u5408\u5e76\n\n\u5982\u679c\u4f60\u4e0d\u77e5\u9053\u4ec0\u4e48\u662f\u7ebf\u6bb5\u6811\u5408\u5e76\u7684\u8bdd\u5c3d\u7ba1\u4f60\u7ad9\u6ca1\u6709\u4ed6\u7684\u819c\u677f\u4e0d\u8fc7\u4f8b\u9898\u8fd8\u662f\u6709\u51e0\u9053\uff0c\u53ef\u4ee5\u53bb\u770b\u770b[\u8fd9\u4e2a\u535a\u5ba2](https://www.luogu.org/blog/styx-ferryman/xian-duan-shu-ge-bing-zong-ru-men-dao-fang-qi)\u7136\u540e\u505a\u505a\u91cc\u9762\u7684\u4f8b\u9898\u5927\u6982\u5c31\u53ef\u4ee5get\u5230\u8fd9\u662f\u4e00\u79cd\u600e\u6837\u7684\u7b97\u6cd5\u4e86\n\n~~\u8bb2\u4e2a\u7b11\u8bdd\uff0c\u7ebf\u6bb5\u6811\u5408\u5e76\u633a\u4f11\u95f2\u7684~~\n\n### \u524d\u7f6e\u829d\u58eb:\u6811\u4e0a\u500d\u589e\n\n~~\u86e4\uff1f\u6562\u6de6\u4e5d\u7701\u8054\u8003\u9898\u4e0d\u4f1a\u6811\u4e0a\u500d\u589e\uff1f\u4f60\u53ef\u4ee5\u6682\u65f6\u4e0d\u7528\u770b\u8fd9\u7bc7\u9898\u89e3\u4e86~~\n___________________\n\n# \u672c\u9898\u9898\u89e3\n\n~~\u4e00\u53e5\u8bdd\u9898\u89e3:SAM\u500d\u589e\u7ebf\u6bb5\u6811\u5408\u5e76\u4e09\u8fde\uff0c\u7136\u540e\u5206\u60c5\u51b5\u8ba8\u8bba\u4e00\u4e0b\u5c31\u505a\u5b8c\u4e86~~\n\n~~\u5f53\u7136\u8fd9\u6837\u5199\u9898\u89e3\u7684\u4eba\u5c31\u8be5\u6253\u6b7b,\u6211\u4eec\u8fd8\u662f\u597d\u597d\u8bb2\u4e0b\u8fd9\u9898\u8be5\u600e\u4e48\u505a~~\n\n\u90a3\u4e48\u6211\u4eec\u6765\u590d\u8ff0\u4e00\u4e0b\u5e76\u4e0d\u660e\u786e\u7684\u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6bcf\u6b21\u8be2\u95ee\u4e00\u4e2a\u5b50\u4e32$(l,r)$\u95ee\u4f60\u6709\u591a\u5c11\u4e2d\u628a\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5207\u6210\u4e09\u6bb5\u7684\u65b9\u5f0f\u4f7f\u5f97\u6bcf\u4e00\u6bb5\u5f53\u4e2d\u90fd\u542b\u6709\u4e00\u4e2a\u548c$(l,r)$\u8fd9\u4e2a\u5b50\u4e32\u4e00\u6837\u7684\u4e32\n\n## \u6b63\u96be\u5219\u53cd\n\n\u90a3\u4e48\u663e\u7136\u76f4\u63a5\u505a\u4e0d\u662f\u975e\u5e38\u597d\u505a\u90a3\u4e48\u6211\u4eec\u6b63\u96be\u2642\u5219\u53cd\u4e00\u4e0b\uff0c\u6211\u4eec\u7528${n-1 \\choose 2}$(\u6240\u6709\u53ef\u80fd\u7684\u5207\u5272\u65b9\u6848)\u51cf\u53bb**\u5c06\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5207\u6210\u4e09\u6bb5\uff0c\u6bcf\u4e00\u6bb5\u90fd\u4e0d\u51fa\u73b0\u548c$(l,r)$\u8fd9\u4e2a\u5b50\u4e32\u4e00\u6837\u7684\u4e32**\u7684\u65b9\u6848\u6570\n\n\u90a3\u4e48\u6211\u4eec\u5047\u8bbe$(l,r)$\u8fd9\u4e2a\u4e32\u5728\u539f\u4e32\u5f53\u4e2d\u7684\u4e00\u4e9b\u4f4d\u7f6e$(lx,rx)$\u51fa\u73b0\u4e86,\u6211\u4eec\u5c06\u6240\u6709\u51fa\u73b0\u4f4d\u7f6e\u7684\u53f3\u7aef\u70b9\u6784\u6210\u7684\u96c6\u5408\u8bb0\u4e3a$Right$\u5047\u8bbe\u6211\u4eec\u901a\u8fc7\u67d0\u79cd\u5965\u5999\u91cd\u91cd\u7684\u624b\u6bb5get\u5230\u4e86$(l,r)$\u8fd9\u4e2a\u533a\u95f4\u7684$Right$\u96c6\u5408,\u90a3\u4e48\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u770b\u5982\u4f55\u7edf\u8ba1\u5c06\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5207\u6210\u4e09\u6bb5\u5e76\u4e14\u6bcf\u6bb5\u90fd\u4e0d\u51fa\u73b0$(l,r)$\u7684\u65b9\u6848\u6570\n\n\u4ee5\u4e0b\u6211\u4eec\u5c06\u548c$(l,r)$\u8fd9\u6bb5\u5b50\u4e32\u957f\u7684\u4e00\u6837\u7684\u5b57\u7b26\u4e32\u79f0\u4e4b\u4e3a\u76ee\u6807\u4e32\n\n### case1:\u51fa\u73b0\u4e86\u4e09\u4e2a\u4e92\u4e0d\u76f8\u4ea4\u7684\u76ee\u6807\u4e32\n\n\u6839\u636e\u62bd\u5c49\u539f\u7406\u4f60\u6b64\u65f6\u7684\u65b9\u6848\u6570\u76ee\u80af\u5b9a\u662f0,\u56e0\u4e3a\u4f60\u65e0\u8bba\u5207\u5230\u90a3\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e0a\u7b2c\u4e09\u4e2a\u5b57\u7b26\u4e32\u603b\u4f1a\u88ab\u5269\u4e0b\n\n### case2:\u6ca1\u6709\u51fa\u73b0\u4e09\u4e2a\u4e92\u4e0d\u76f8\u4ea4\u7684\u76ee\u6807\u4e32\n\n\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6211\u4eec\u7684\u65b9\u6848\u6570\u76ee\u53ef\u80fd\u4e0d\u662f0\u4e86.\u90a3\u4e48\u6211\u4eec\u4f9d\u7136\u9700\u8981\u7ee7\u7eed\u5206\u60c5\u51b5\u8ba8\u8bba\n\n\u6211\u4eec\u4ee4leftpos\u8868\u793aright\u96c6\u5408\u4e2d\u7684\u6700\u5c0f\u503c(\u6362\u53e5\u8bdd\u8bf4\u5c31\u662f\u6700\u9760\u5de6\u7684\u53f3\u7aef\u70b9),ed\u8868\u793a\u6700\u9760\u53f3\u7684\u5de6\u7aef\u70b9(\u6362\u53e5\u8bdd\u8bf4ed\u7b49\u4e8eright\u96c6\u5408\u5f53\u4e2d\u7684\u6700\u5927\u503c\u51cf\u53bb\u8be2\u95ee\u4e32\u7684\u957f\u5ea6+1)\n\n### case2.1:\u6700\u9760\u5de6\u7684\u76ee\u6807\u4e32\u548c\u6700\u9760\u53f3\u7684\u76ee\u6807\u4e32\u662f\u76f8\u4ea4\u7684\n\n\u6839\u636e\u8fd9\u4e2a\u6761\u4ef6\u6211\u4eec\u53ef\u4ee5\u7acb\u5373\u63a8\u51fa\u4e00\u4e2a\u91cd\u8981\u7684\u4e8b\u5b9e\u662f,\u6240\u6709\u76ee\u6807\u4e32\u5f7c\u6b64\u662f\u76f8\u4ea4\u7684,\u6ca1\u6709\u4e24\u4e2a\u4e32\u4e92\u76f8\u5206\u79bb\n\n\u90a3\u8fd9\u4e2a\u6027\u8d28\u6709\u4ec0\u4e48\u7528\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u5c06\u65b9\u6848\u5206\u6210\u4e24\u7c7b\u6765\u8fdb\u884c\u7edf\u8ba1\n\n### case2.1.1\u7b2c\u4e00\u5200\u6ca1\u6709\u5207\u5b8c\u5168\u90e8\u7684\u76ee\u6807\u4e32\n\n\u90a3\u4e48\u6211\u4eec\u4f9d\u7136\u4f1a\u53d1\u73b0\u4e09\u4e2a\u91cd\u8981\u7684\u6027\u8d28\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u52a0\u901f\u7edf\u8ba1\n\n\u7b2c\u4e00\uff0c\u5f53\u7b2c\u4e00\u5200\u56fa\u5b9a\u5728i\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u65f6\u5019\uff0c\u5408\u6cd5\u7684\u7b2c\u4e8c\u5200\u4f4d\u7f6ej\u7684\u53d6\u503c\u8303\u56f4**\u662f\u4e00\u6bb5\u8fde\u7eed\u7684\u533a\u95f4**\n\n _\u8fd9\u4e2a\u6027\u8d28\u76f8\u5f53\u597d\u8bc1\u660e\uff0c\u7b2c\u4e8c\u5200\u5fc5\u987b\u5207\u5b8c\u5269\u4e0b\u7684\u6240\u6709\u76ee\u6807\u4e32\uff0c\u663e\u7136\u53ea\u6709\u5207\u5728\u5269\u4e0b\u7684\u7ebf\u6bb5\u7684\u4ea4\u96c6\u4e0a\u624d\u80fd\u5207\u5b8c,\u7ebf\u6bb5\u7684\u4ea4\u5fc5\u7136\u8fd8\u662f\u4e00\u6bb5\u8fde\u7eed\u7684\u7ebf\u6bb5,\u6240\u4ee5j\u7684\u53d6\u503c\u8303\u56f4\u5c31\u662f\u4e00\u6bb5\u8fde\u7eed\u7684\u533a\u95f4_ \n\n\u7b2c\u4e8c,\u5982\u679c\u7b2c\u4e00\u5200\u5207\u5728p\u4e0a\uff0c\u7b2c\u4e8c\u5200\u5207\u5728q\u4e0a\uff0c\u90a3\u4e48**p\u548cq\u5207\u6389\u7684\u7ebf\u6bb5\u96c6\u5408\u76f8\u540c\u65f6**p\u548cq\u5bf9\u5e94\u7684\u5408\u6cd5\u7684\u7b2c\u4e8c\u5200\u533a\u95f4\u76f8\u540c\n\n _\u5207\u5b8c\u4e4b\u540e\u5269\u4e0b\u7684\u7ebf\u6bb5\u76f8\u540c\u540c\u81ea\u7136\u5269\u4e0b\u7684\u7ebf\u6bb5\u7684\u4ea4\u96c6\u4e5f\u662f\u76f8\u540c\u7684_ \n\n\u7b2c\u4e09,\u7b2c\u4e8c\u5200\u53d6\u503c\u8303\u56f4\u76f8\u540c\u7684\u7b2c\u4e00\u5200\u4f4d\u7f6e\u4e5f**\u6784\u6210\u4e86\u4e00\u4e2a\u8fde\u7eed\u7684\u533a\u95f4**\n\n _\u7531\u4e8e\u6240\u6709\u7ebf\u6bb5\u7684\u957f\u5ea6\u90fd\u662f\u4e00\u6837\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u7b2c\u4e00\u5200\u7684\u4f4d\u7f6e\u5728\u4ece\u5de6\u5411\u53f3\u632a\u52a8\u7684\u8fc7\u7a0b\u4e2d\u6bcf\u7ecf\u8fc7\u4e00\u4e2a\u4e32\u624d\u4f1a\u591a\u5207\u4e00\u4e2a\u7ebf\u6bb5\uff0c\u800c\u5728\u5207\u5b8c\u7b2ci\u4e2a\u4e32\u5230\u5207\u7b2ci+1\u4e2a\u4e32\u4e4b\u95f4\u7684\u533a\u95f4\u6240\u5207\u7684\u7ebf\u6bb5\u96c6\u5408\u662f\u4e0d\u53d8\u7684\uff0c\u81ea\u7136\u7b2c\u4e8c\u5200\u7684\u53d6\u503c\u8303\u56f4\u4e5f\u76f8\u540c_ \n \n\u90a3\u4e48\u6709\u4e86\u8fd9\u4e9b\u6027\u8d28\u6211\u4eec\u80fd\u5e72\u4ec0\u4e48\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u7b2c\u4e00\u5200\u7684\u4f4d\u7f6e\uff0c\u5e76\u4e14\u5c06\u6240\u6709\u7b2c\u4e8c\u5200\u9650\u5236\u76f8\u540c\u7684\u7b2c\u4e00\u5200\u4f4d\u7f6e\u7528\u4e58\u6cd5\u5206\u914d\u5f8b\u5408\u5e76\u8d77\u6765\n\n\u6362\u53e5\u8bdd\u8bf4,\u6211\u4eec\u7684\u5f0f\u5b50\u5c31\u662f\u8fd9\u4e2a\uff0c\u5176\u4e2d$rt_{i}$\u8868\u793a\u4ece\u5de6\u6570\u7b2ci\u4e2a\u76ee\u6807\u4e32\u7684\u53f3\u7aef\u70b9\n\n$$\\sum_{i}((rt_{i+1}-len+1)-(rt_{i}-len+1))(rt_{i+1}-ed)$$\n\n\u89e3\u91ca\u4e00\u4e0b\u4e0a\u9762\u7684\u5f0f\u5b50\u5c31\u662f\u7b2c\u4e00\u5200\u5728$(rt_{i+1}-len+1,rt_{i}-len+1)$\u7684\u65f6\u5019,\u7b2c\u4e8c\u5200\u7684\u53d6\u503c\u8303\u56f4\u90fd\u662f$(ed,rt_{i+1})$(\u56e0\u4e3a$rt_{i+1}$\u662f\u5269\u4e0b\u7684\u7ebf\u6bb5\u7684\u53f3\u7aef\u70b9\u6700\u5c0f\u503c,\u800ced\u662f\u5de6\u7aef\u70b9\u7684\u6700\u5927\u503c)\n\n\u6240\u4ee5\u4e24\u4e2a\u533a\u95f4\u957f\u5ea6\u76f4\u63a5\u4e58\u8d77\u6765\u5c31\u597d\u4e86\n\n\u7b80\u5355\u5316\u7b80\u4e00\u4e0b\u5f0f\u5b50\u5c31\u662f\n\n$$\\sum_{i}(rt_{i+1}-r_{i})rt_{i+1}-ed\\sum_{i}rt_{i+1}-rt_{i}$$\n\n### case2.1.2 \u5176\u4e2d\u4e00\u5200\u5207\u5b8c\u4e86\u5168\u90e8\u7684\u5b57\u7b26\u4e32\n\n\u90a3\u4e48\u663e\u7136\u5176\u4e2d\u5fc5\u7136\u6709\u4e00\u5200\u843d\u5728\u4e86$(ed,leftpos)$\u8fd9\u4e2a\u533a\u95f4\u91cc\uff0c\u90a3\u4e48\u6211\u4eec\u5047\u5982\u4e24\u5200\u90fd\u843d\u5728\u4e86\u8fd9\u4e2a\u533a\u95f4\u5f53\u4e2d\uff0c\u6211\u4eec\u7684\u65b9\u6848\u6570\u5c31\u662f${leftpos-ed \\choose 2}$\n\n\u63a5\u4e0b\u6765\u4e3a\u4e86\u907f\u514d\u548c\u4e0a\u9762\u7684\u5f0f\u5b50\u7b97\u91cd,\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u53e6\u4e00\u5200\u8fd8\u53ef\u4ee5\u653e\u5728\u54ea\u91cc\uff0c\u6211\u4eec\u53d1\u73b0\u521a\u624d\u7684\u5f0f\u5b50\u5f53\u4e2d\u5df2\u7ecf\u7edf\u8ba1\u597d\u4e86\u7b2c\u4e00\u5200\u843d\u5728$(leftpos-len+1,leftpos)$\u8fd9\u4e2a\u533a\u95f4\u7684\u65b9\u6848\u6570\u76ee\u4e86\n\n\u6240\u4ee5\u6211\u4eec\u73b0\u5728\u6709\u4e00\u5200\u843d\u5728\u4e86$(ed,leftpos)$\u8fd9\u4e2a\u533a\u95f4\uff0c\u56e0\u6b64\u53e6\u4e00\u5200\u53ef\u80fd\u7684\u53d6\u503c\u8303\u56f4\u5c31\u662f$(1,leftpos-len)$\u548c$(leftpos+1,n)$\u8fd9\u4e24\u4e2a\u533a\u95f4\n\n\u63a8\u4e00\u4e0b\u5f0f\u5b50\u5c31\u662f\n\n$${leftpos-ed \\choose 2}+(leftpos-ed)(n-len)$$\n\n\u6240\u4ee5\u6211\u4eec\u6700\u9760\u5de6\u548c\u6700\u9760\u53f3\u7684\u76ee\u6807\u4e32\u662f\u76f8\u4ea4\u7684\u8fd9\u4e2a\u60c5\u51b5\u5c31\u662f\u8fd9\u4e2a\u5f0f\u5b50\u4e86\n\n$$\\sum_{i}(rt_{i+1}-r_{i})rt_{i+1}-ed\\sum_{i}rt_{i+1}-rt_{i}+{leftpos-ed \\choose 2}+(leftpos-ed)(n-len)$$\n\n### case2.2 \u6700\u9760\u5de6\u7684\u76ee\u6807\u4e32\u548c\u6700\u9760\u53f3\u7684\u76ee\u6807\u4e32\u5e76\u4e0d\u76f8\u4ea4\n\n\u8fd9\u79cd\u60c5\u51b5\u4e0b\u7531\u4e8e\u6211\u4eec\u77e5\u9053\u5e76\u6ca1\u6709\u51fa\u73b0\u4e09\u4e2a\u4e0d\u76f8\u4ea4\u7684\u76ee\u6807\u4e32\uff0c\u6240\u4ee5\u6211\u4eec\u6240\u6709\u76ee\u6807\u4e32\u5c31\u53ef\u4ee5\u88ab\u5206\u4e3a\u4e09\u7c7b\n\n1.\u4ec5\u548c\u6700\u9760\u5de6\u7684\u76ee\u6807\u4e32\u76f8\u4ea4\n\n2.\u4ec5\u548c\u6700\u9760\u6709\u7684\u76ee\u6807\u4e32\u76f8\u4ea4\n\n3.\u548c\u4e24\u4e2a\u4e32\u90fd\u76f8\u4ea4\n\n\u5957\u7528\u4e0a\u4e00\u79cd\u60c5\u51b5\u7684\u5206\u6790\u65b9\u5f0f\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u8fd9\u4e2a\u5f0f\u5b50\n\n$$\\sum_{i}((rt_{i+1}-len+1)-(rt_{i}-len+1))(rt_{i+1}-ed)$$\n\n\u4f46\u662f\u548c\u4e0a\u4e00\u4e2a\u60c5\u51b5\u4e0d\u540c\u7684\u662f\u8fd9\u91cc\u9700\u8981\u52a0\u4e00\u70b9\u9650\u5236\u6761\u4ef6\n\n$$rt_{i+1}>ed,rt_{i+1}+len-1<leftpos$$\n\n\u53e6\u5916\u4e00\u70b9\u9700\u8981\u6ce8\u610f\u7684\u662f\u8fd9\u662f\u5bf9$rt_{i+1}$\u7684\u9650\u5236\uff0c\u6240\u4ee5$rt_{1}<ed$\u5e76\u4e14\u5e94\u8be5\u662fed\u5728right\u96c6\u5408\u91cc\u7684\u524d\u9a71\n\n\u6b64\u65f6\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u57fa\u672c\u4e0a\u8ba1\u6570\u5b8c\u6240\u6709\u7684\u65b9\u6848\u4e86\uff0c\u4f46\u662f\u6211\u4eec\u8fd8\u9700\u8981\u52a0\u4e0a\u4e00\u70b9\u4fee\u6b63\uff0c\u5c31\u662f\u4e0a\u9762\u7684\u5f0f\u5b50\u5c11\u7edf\u8ba1\u4e86\u4e00\u79cd\u60c5\u51b5,\u4e5f\u5c31\u662f\u5f53\u6211\u4eec\u7684\u7b2c\u4e00\u5200\u4e0d\u65ad\u79fb\u52a8\u7684\u65f6\u5019,\u4f1a\u5728\u6700\u540e\u78b0\u5230$leftpos$\u800c\u4e0d\u662f\u67d0\u4e00\u4e2a\u4e32\u7684\u5de6\u7aef\u70b9\u7ed3\u675f(\u5728\u4e0a\u4e00\u79cd\u60c5\u51b5\u5f53\u4e2d\u4e0d\u4f1a\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5,\u56e0\u4e3a\u6700\u540e\u4e00\u4e2a\u78b0\u5230\u7684\u4e32\u7684\u5de6\u7aef\u70b9\u662f\u6700\u53f3\u7aef\u7684\u4e32,\u800c\u540e\u9762\u7684\u60c5\u51b5\u4f1a\u4e00\u6b21\u6027\u5207\u65ad\u6240\u6709\u7684\u4e32)\n\n\u90a3\u4e48\u6211\u4eec\u9700\u8981\u7a0d\u7a0d\u4fee\u6b63\u4e00\u4e0b\u6211\u4eec\u7684\u5f0f\u5b50\uff0c\u90a3\u5c31\u662f\u6211\u4eec\u67e5\u627e\u4e00\u4e0b$leftpos+len-1$\u5728right\u96c6\u5408\u4e2d\u7684\u524d\u9a71pre\u548c\u540e\u7ee7suc\uff0c\u90a3\u4e48\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u7684\u60c5\u51b5\u5c31\u662f\u7b2c\u4e00\u5200\u7684\u4f4d\u7f6e\u843d\u5728\u4e86$(pre-len+1,leftpos)$\u8fd9\u4e2a\u533a\u95f4\u65f6\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u6211\u4eec\u53d1\u73b0\u6b64\u65f6\u7b2c\u4e8c\u5200\u7684\u9650\u5236\u8303\u56f4\u5e94\u8be5\u662f$(ed,suc)$\u8fd9\u4e2a\u533a\u95f4(\u56e0\u4e3a\u53f3\u7aef\u70b9\u7684\u6700\u5c0f\u503c\u5c31\u662fsuc)\n\n\u6240\u4ee5\u6211\u4eec\u7684\u5f0f\u5b50\u5c31\u662f\u8fd9\u4e2a\u5f0f\u5b50(\u65b9\u62ec\u53f7\u7528\u6765\u89c4\u907f\u975e\u6cd5\u60c5\u51b5)\n\n$$(leftpos-pre+len+1)(suc-ed)[suc>ed]$$\n\n\u7136\u540e\u628a\u4e24\u79cd\u60c5\u51b5\u52a0\u8d77\u6765\u5c31\u597d\u4e86\n\n## \u7ef4\u62a4right\u96c6\u5408\n\n\u524d\u9762\u7684\u4e00\u7cfb\u5217\u63a8\u5bfc\u90fd\u662f\u57fa\u4e8e\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u67d0\u79cd\u5965\u5999\u91cd\u91cd\u7684\u65b9\u5f0f\u6765get\u5230right\u96c6\u5408\u624d\u80fd\u5b9e\u73b0\u7684,\u90a3\u4e48\u95ee\u9898\u6765\u4e86\u6211\u4eec\u8be5\u5982\u4f55\u7ef4\u62a4right\u96c6\u5408\u5462\uff1f\n\n\u5982\u679c\u4f60\u5bf9\u540e\u7f00\u81ea\u52a8\u59ec\u90a3\u4e00\u5957\u7406\u8bba\u76f8\u5f53\u719f\u6089\u7684\u8bdd\u4f60\u4f1a\u77e5\u9053\u4e00\u4e2a\u4e32\u7684right\u96c6\u5408\u5c31\u662f\u8fd9\u4e2a\u4e32\u5728\u540e\u7f00\u81ea\u52a8\u59ec\u5bf9\u5e94\u8282\u70b9\u7684right\u96c6\u5408\n\n\u90a3\u4e48\u6211\u4eec\u60f3\u8981\u77e5\u9053\u4e00\u4e2a\u540e\u7f00\u81ea\u52a8\u59ec\u8282\u70b9\u7684right\u96c6\u5408\u957f\u4ec0\u4e48\u6837\u6211\u4eec\u662f\u6ca1\u6709\u529e\u6cd5\u76f4\u63a5\u77e5\u9053\u7684\uff0c\u6211\u4eec\u77e5\u9053\u8fd9\u4e2a\u70b9\u7684right\u96c6\u5408\u7b49\u4e8e\u4ed6\u5728parent\u6811\u7684\u5b50\u6811\u4e2d\u6240\u6709\u70b9\u7684right\u96c6\u5408\u7684\u5e76\u96c6\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5408\u5e76\u8fd9\u4e2a\u8282\u70b9\u7684\u5b69\u5b50\u4eec\u7684right\u96c6\u5408\u6765\u6c42\u51fa\u8fd9\u4e2a\u70b9\u7684right\u96c6\u5408\u4e86\uff0c\u8fd9\u4e2a\u4e1c\u897f\u5728parent\u6811\u4e0a\u8dd1\u4e00\u4e2a\u7ebf\u6bb5\u6811\u5408\u5e76\u5c31\u51fa\u6765\u4e86\n\n\u5177\u4f53\u5b9e\u73b0\u7684\u65f6\u5019\u5bf9\u4e8e\u540e\u7f00\u81ea\u52a8\u59ec\u4e2d\u6bcf\u4e00\u4e2a\u4ee3\u8868\u524d\u7f00\u7f00i\u7684\u8282\u70b9\u6211\u4eec\u628ai\u8fd9\u4e2a\u5143\u7d20\u63d2\u5165\u5230\u6743\u503c\u7ebf\u6bb5\u6811\u4e2d\u53bb\uff0c\u63a5\u4e0b\u6765\u5728\u6811\u4e0adfs\uff0c\u5c06\u8fd9\u4e2a\u70b9\u7684\u5b69\u5b50\u5168\u90e8\u5408\u5e76\u8d77\u6765\u5c31\u662f\u8fd9\u4e2a\u70b9\u7684right\u96c6\u5408\u4e86\n\n\u90a3\u4e48\u95ee\u9898\u6765\u4e86\u6211\u4eec\u5982\u4f55\u5b9a\u4f4d\u4e00\u4e2a\u5b50\u4e32\u5728\u540e\u7f00\u81ea\u52a8\u59ec\u4e0a\u5bf9\u5e94\u7684\u8282\u70b9\u4f4d\u7f6e\u5462\uff1f\n\n\u4e00\u4e2a\u76f8\u5f53\u66b4\u529b\u7684\u60f3\u6cd5\u662f\u76f4\u63a5\u5728\u540e\u7f00\u81ea\u52a8\u59ec\u4e0a\u5927\u529b\u8dd1\u8fd9\u4e2a\u5b50\u4e32\u53ef\u4ee5\u786e\u5b9a\u8fd9\u4e2a\u5b50\u4e32\u7684\u4f4d\u7f6e\n\n\u4e0d\u8fc7\u53e6\u4e00\u79cd\u65b9\u5f0f\u662f\u901a\u8fc7\u6811\u4e0a\u500d\u589e\u7684\u65b9\u5f0f\u4e0d\u65ad\u7684\u4eceparent\u6811\u4e0a\u8868\u793a\u524d\u7f00r\u7684\u8282\u70b9\u5411\u4e0a\u8df3\uff0c\u4e00\u76f4\u4fdd\u8bc1\u5bf9\u5e94\u8282\u70b9\u7684len\u503c\u4e0d\u5c0f\u4e8e\u6211\u4eec\u8fd9\u4e2a\u5b50\u4e32\u7684\u957f\u5ea6\uff0c\u8fd9\u6837\u500d\u589e\u4e0b\u53bb\u6211\u4eec\u5c31\u53ef\u4ee5\u5feb\u901f\u7684\u5b9a\u4f4d\u4e86\n\n\u5b9a\u4f4d\u4e86\u4e4b\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u8fd9\u4e2a\u8be2\u95ee\u6302\u5230\u8fd9\u4e2a\u8282\u70b9\u4e0a\u4e86\uff0c\u6700\u540e\u5728parent\u6811\u4e0adfs\u4e00\u4e0b\u5c31\u53ef\u4ee5\u56de\u7b54\u6bcf\u4e00\u4e2a\u8be2\u95ee\u4e86\n\n\u7ebf\u6bb5\u6811\u5408\u5e76\u7684\u65f6\u5019\u4e3a\u4e86\u56de\u7b54\u6bcf\u4e00\u8be2\u95ee\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u7684\u4fe1\u606f\u662f\n\n$$\\sum_{i}(rt_{i+1}-rt_{i})rt_{i+1}$$\n\n$$\\sum_{i}(rt_{i+1}-rt_{i})$$\n\n\u8fd9\u4e2a\u4e1c\u897f\u7ef4\u62a4\u7684\u65b9\u5f0f\u4e5f\u76f8\u5f53\u7b80\u5355\uff0c\u6211\u4eec\u7ebf\u6bb5\u6811\u4e0a\u6bcf\u4e00\u4e2a\u8282\u70b9\u7ef4\u62a4\u4e00\u4e0b\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u6109\u5feb\u7684\u5408\u5e76\u4e24\u4e2a\u8282\u70b9\u7684\u4fe1\u606f\u4e86\u4e5f\u5c31\u53ef\u4ee5\u7ef4\u62a4\u4e86\n\n\u540c\u7406\u6211\u4eec\u4e5f\u53ef\u4ee5\u5229\u7528\u7ef4\u62a4\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u7684\u4fe1\u606f\u5feb\u901f\u7684\u67e5\u8be2\u524d\u9a71\u548c\u540e\u7ee7\n\n\u590d\u6742\u5ea6$O((n+q)logn)$\u7ec6\u8282\u57fa\u672c\u5206\u60c5\u51b5\u8ba8\u8bba\u5b8c\u4e86\uff0c\u5173\u4e8e\u5b9e\u73b0\u65f6\u5019\u7684\u4e00\u4e9btrick\u53ef\u4ee5\u81ea\u884c\u53c2\u8003\u4ee3\u7801\n\n\u4e0a\u4ee3\u7801~\n\n```C\n#include<cstdio>\n#include<algorithm>\n#include<vector>\nusing namespace std;const int N=1e5+10;typedef long long ll;\nint n;int m;int v[2*N];int x[2*N];int al[2*N];int ct;char mde[N];\nint len[2*N];ll ans[3*N];int fa[2*N][22];//\u500d\u589e \nstruct qry{int len;int tim;};vector <qry> vq[2*N];\ninline void add(int u,int V){v[++ct]=V;x[ct]=al[u];al[u]=ct;}\ninline void dfs1(int u)//\u9884\u5904\u7406\u500d\u589e\u6570\u7ec4 \n{\n    for(int i=0;fa[u][i];i++)fa[u][i+1]=fa[fa[u][i]][i];\n    for(int i=al[u];i;i=x[i])fa[v[i]][0]=u,dfs1(v[i]);\n}\ninline int ck(int p,int le)//\u500d\u589e\u5b9a\u4f4d \n{for(int i=20;i>=0;i--)if(fa[p][i]&&len[fa[p][i]]>=le)p=fa[p][i];return p;}\ninline ll ctwo(ll p){return (p*(p-1))>>1;}\nstruct suffixautomaton//\u7b80\u6613\u540e\u7f00\u81ea\u52a8\u59ec\u819c\u677f \n{\n    int mp[2*N][10];int fa[2*N];int ct;\n    inline void ih(){for(int i=1;i<=n;i++)len[i]=i;ct=n+1;}\n    inline void ins(int i,int c)\n    {\n        int p=(i-1)?(i-1):(n+1);\n        for(;p&&mp[p][c]==0;p=fa[p])mp[p][c]=i;\n        if(!p){fa[i]=n+1;return;}int q=mp[p][c];\n        if(len[q]==len[p]+1){fa[i]=q;return;}\n        ++ct;len[ct]=len[p]+1;\n        for(int i=0;i<=9;i++)mp[ct][i]=mp[q][i];\n        for(;p&&mp[p][c]==q;p=fa[p])mp[p][c]=ct;\n        fa[ct]=fa[q];fa[q]=ct;fa[i]=ct;\n    }\n    inline void build(){for(int i=1;i<=ct;i++)add(fa[i],i);}\n}sam;\nstruct linetree//\u7ebf\u6bb5\u6811\u5408\u5e76\u677f\u5b50 \n{\n    int mi[22*N];int mx[22*N];ll v1[22*N];ll v2[22*N];\n    int s[22*N][2];int rt;ll ans1;ll ans2;int ct;\n    inline void mg(const int& p)//\u5408\u5e76\u8fd9\u4e2a\u8282\u70b9\u7684\u4e24\u4e2a\u5b69\u5b50 \n    {\n        int ls=s[p][0];int rs=s[p][1];\n        if(!rs){mi[p]=mi[ls];mx[p]=mx[ls];v1[p]=v1[ls];v2[p]=v2[ls];return;}\n        if(!ls){mi[p]=mi[rs];mx[p]=mx[rs];v1[p]=v1[rs];v2[p]=v2[rs];return;}\n        mi[p]=mi[ls];mx[p]=mx[rs];ll del=mi[rs]-mx[ls];\n        v1[p]=v1[ls]+v1[rs]+del*mi[rs];v2[p]=v2[ls]+v2[rs]+del;\n    }\n    inline void mg(int p1,int p2)//\u7ebf\u6bb5\u6811\u5408\u5e76 \n    {\n        if(s[p1][0]&&s[p2][0])mg(s[p1][0],s[p2][0]);else if(s[p2][0])s[p1][0]=s[p2][0];\n        if(s[p1][1]&&s[p2][1])mg(s[p1][1],s[p2][1]);else if(s[p2][1])s[p1][1]=s[p2][1];mg(p1);\n    }\n    inline void ins(int p,int l,int r,int pos//\u63d2\u5165\u4e00\u4e2a\u8282\u70b9\n    {\n        mi[p]=mx[p]=pos;if(r-l==1){return;}int mid=(l+r)/2;\n        if(pos<=mid)ins(s[p][0]=++ct,l,mid,pos);\n        else ins(s[p][1]=++ct,mid,r,pos);\n    }\n    inline int qmi(int p,int l,int r,int dl,int dr)//\u533a\u95f4\u6700\u5c0f\u503c \n    {\n        if(dl==l&&dr==r){return mi[p];}int mid=(l+r)/2;ll res=0x3f3f3f3f;\n        if(dl<mid&&s[p][0])res=qmi(s[p][0],l,mid,dl,min(dr,mid));\n        if(res!=0x3f3f3f3f)return res;\n        if(mid<dr&&s[p][1])return qmi(s[p][1],mid,r,max(dl,mid),dr);return 0x3f3f3f3f;\n    }\n    inline int qmx(int p,int l,int r,int dl,int dr)//\u533a\u95f4\u6700\u5927\u503c \n    {\n        if(dl==l&&dr==r){return mx[p];}int mid=(l+r)/2;ll res=-0x3f3f3f3f;\n        if(mid<dr&&s[p][1])res=qmx(s[p][1],mid,r,max(dl,mid),dr);\n        if(res!=-0x3f3f3f3f)return res;\n        if(dl<mid&&s[p][0])return qmx(s[p][0],l,mid,dl,min(dr,mid));return -0x3f3f3f3f;\n    }\n    inline void qry(int p,int l,int r,int dl,int dr)//\u8be2\u95ee\u7684\u65f6\u5019\u65b0\u5f00\u4e00\u4e2a\u8282\u70b9\u4ece\u5de6\u5230\u53f3\u5408\u5e76 \n    {\n        if(dl==l&&dr==r)\n        {\n            if(rt==-1){rt=mx[p];ans1=v1[p];ans2=v2[p];return;}\n            else {ll del=mi[p]-rt;rt=mx[p];ans1+=v1[p]+mi[p]*del;ans2+=v2[p]+del;return;}\n        }int mid=(l+r)/2;\n        if(dl<mid&&s[p][0])qry(s[p][0],l,mid,dl,min(dr,mid));\n        if(mid<dr&&s[p][1])qry(s[p][1],mid,r,max(dl,mid),dr);\n    }\n    inline ll cqry(int u,int l,int r,int st,int ed)\n    {if(l>r)return 0;rt=st;ans1=0;ans2=0;qry(u,0,n,l-1,r);return ans1-ed*ans2;}\n    inline ll calc(int p,int ed){return v1[p]-ed*v2[p];}\n}lt;\ninline void dfs2(int u)\n{\n    for(int i=al[u];i;i=x[i])dfs2(v[i]),lt.mg(u,v[i]);\n    int lp=lt.mi[u];int rp=lt.mx[u];vector <qry> :: iterator  it;\n    for(it=vq[u].begin();it!=vq[u].end();++it)\n    {\n        int ed=rp-it->len+1;//\u60c5\u51b51 \n        if(ed<=lp){ans[it->tim]+=lt.calc(u,ed)+ctwo(lp-ed)+(ll)(lp-ed)*(n-it->len);}\n        else \n        {\n            int pos=lt.qmx(u,0,n,0,ed);if(pos-it->len+1>=lp)continue;//\u5224\u65ad3\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u4e0d\u76f8\u4ea4\u53ef\u4ee5\u67e5max\u6765\u89e3\u51b3 \n            ans[it->tim]+=lt.cqry(u,ed+1,lp+it->len-1,pos,ed);//\u8fd9\u91cc\u4f20\u53c2\u6570\u7684\u65f6\u5019\u76f4\u63a5\u628a\u5f00\u5934\u4f20\u8fdb\u53bb\u4e86 \n            int pos1=lt.qmi(u,0,n,lp+it->len-1,n);pos=lt.qmx(u,0,n,0,lp+it->len-1);\n            if(pos!=-0x3f3f3f3f&&pos1!=0x3f3f3f3f)//\u4fee\u6b63 \n                ans[it->tim]+=(lp-pos+it->len-1)*(pos1-ed)*(pos1>=ed);\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);scanf(\"%s\",mde+1);sam.ih();\n    for(int i=1;i<=n;i++)sam.ins(i,mde[i]-'0');\n    lt.ct=sam.ct;sam.build();dfs1(n+1);\n    for(int i=1,l,r;i<=m;i++)//\u79bb\u7ebf \n        scanf(\"%d%d\",&l,&r),vq[ck(r,r-l+1)].push_back((qry){r-l+1,i});\n    for(int i=1;i<=n;i++)lt.ins(i,0,n,i);dfs2(n+1);\n    for(int i=1;i<=m;i++)printf(\"%lld\\n\",ctwo(n-1)-ans[i]);return 0;//\u62dc\u62dc\u7a0b\u5e8f \n}\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "postTime": 1540429708,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4384 \u3010[\u516b\u7701\u8054\u80032018]\u5236\u80e1\u7a9c\u3011"
    },
    {
        "content": "\u963f\u8bfa\uff0c\u5927\u5bb6\u90fd\u5199\u7684\u662f SAM\uff0c\u90a3\u6211\u8fd9\u4e2a\u5f31\u5f31\u7684\u53ea\u4f1a SA \u7684\u83dc\u9e21\u8be5\u5982\u4f55\u662f\u597d\u5462\uff1f\n\n\u8bf6\u591a... SA \u548c SAM \u662f\u5f88\u76f8\u4f3c\u7684\uff0c\u90a3\u662f\u4e0d\u662f\u53ef\u4ee5\u641e\u51fa SA \u505a\u6cd5\u5462\uff1f\n\n\u6b38\uff0c\u771f\u7684\u53ef\u4ee5\u6b38\uff0c\u4f7f\u7528 SA \u4e5f\u53ef\u4ee5\u5728 $O(n\\log n+q\\log n)$  \u7684\u65f6\u95f4\u5185\u505a\u6389\u5b83\u6b38\uff01\n\n\u6211\u4eec\u5047\u8bbe\u5df2\u7ecf\u6c42\u51fa\u4e86 $s$ \u7684\u540e\u7f00\u6570\u7ec4\uff0c\u8003\u8651 SA \u7684\u4ece\u5927\u5230\u5c0f\u5408\u5e76 height \u7684\u5957\u8def\u3002\u628a\u8be2\u95ee\u6309\u7167 $r-l+1$ \u964d\u5e8f\u6392\u5e8f\uff0c\u5e76\u4e14\u5c06 height $\\geq r-l+1$ \u7684\u95f4\u9694\u8fdb\u884c\u5408\u5e76\uff0c\u90a3\u4e48 $\\mathrm{rank}[l]$ \u6240\u5728\u7684\u6bb5\u5c31\u662f $s[l:r]$ \u7684\u6240\u6709\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\n\n\u8003\u8651\u6c42\u51fa\u8fd9\u4e2a\u6bb5\u7684\u7b54\u6848\uff0c\u6b63\u7740\u8003\u8651\u4f3c\u4e4e\u4e0d\u662f\u5f88\u5bb9\u6613\uff0c\u8003\u8651\u6c42\u51fa**\u4e0d\u5408\u6cd5**\u7684\u65b9\u6848\u6570\u3002\n\n\u6211\u4eec\u8003\u8651\u5bf9\u4e8e $(i,j)$ \uff0c$s[l:r]$ \u6ca1\u6709\u51fa\u73b0\u5728 $s[1:i],s[i+1:j-1],s[j:n]$ \u4e2d\n\n\u90a3\u4e48\u5bf9\u4e8e\u6240\u6709 $s[l:r]$ \u7684\u51fa\u73b0\u4f4d\u7f6e\uff08\u51fa\u73b0\u4f4d\u7f6e\u5b9a\u4e49\u4e3a\u51fa\u73b0\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684\u4f4d\u7f6e\uff09\uff0c\u53d6\u6700\u5c0f\u7684 $X$,\u6700\u5927\u7684 $Y$\u3002\n\n\u6211\u4eec\u4ee4 $L=r-l+1=|s[l:r]|$\n\n\u90a3\u4e48\u4e3a\u4e86 $s[1:i]$ \u4e2d\u6ca1\u6709\u51fa\u73b0\uff0c\u9700\u8981\u4fdd\u8bc1 $i\\leq X+L-2$\n\n\u4e3a\u4e86 $s[j:n]$ \u4e2d\u6ca1\u6709\u51fa\u73b0\uff0c\u9700\u8981\u4fdd\u8bc1 $j\\geq Y+1$\n\n\u4e3a\u4e86 $s[i+1:j-1]$ \u4e2d\u6ca1\u6709\u51fa\u73b0\uff0c\u5219\u7a0d\u6709\u4e9b\u590d\u6742\uff0c\u6211\u4eec\u628a\u6bd4 $c$ \u5927\u7684\u7b2c\u4e00\u4e2a $s[l:r]$ \u51fa\u73b0\u4f4d\u7f6e\uff0c\u8bb0\u4e3a $\\operatorname{next}(c)$\uff08\u82e5\u6ca1\u6709\u5219 $+\\infty$\uff09\n\n\u90a3\u4e48\u6709\u5408\u6cd5\u7684\u8bdd\u6700\u5de6\u8fb9\u7684\u90a3\u4e2a\u4e5f\u5fc5\u5b9a\u5408\u6cd5\uff0c\u6240\u4ee5\u53ea\u9700\u8ba9\u6700\u5de6\u8fb9\u7684\u975e\u6cd5\u5373\u53ef\uff0c\u4e5f\u5c31\u662f $\\operatorname{next}(i)+L-1\\geq j$\n\n\u90a3\u4e48\u9650\u5236\u76f8\u5f53\u4e8e $1\\leq i\\leq \\min(n-2,X+L-2),Y+1\\leq j\\leq n,i+1<j,\\operatorname{next}(i)+L-1\\geq j$\n\n\u90a3\u4e48\u6211\u4eec\u5176\u5b9e\u5c31\u662f\u8981\u6c42\u548c\u5f0f\n$$\\sum_{1\\leq i\\leq \\min(n-2,X+L-2)}\\sum_{j}[\\min(n,\\operatorname{next}(i)+L-1)\\geq j> \\max(i+1,Y)]$$\n\n\u6211\u4eec\u53ef\u4ee5\u8f6c\u5316\u8fd9\u4e2a\u548c\u5f0f\u4e3a\n$$\\sum_{1\\leq i\\leq \\min(n-2,X+L-2)}[\\min(n,\\operatorname{next}(i)+L-1)\\geq \\max(i+1,Y)](\\min(n,\\operatorname{next}(i)+L-1)-\\max(i+1,Y))$$\n\n\u8fd9\u4e0d\u96be\u7406\u89e3\uff0c\u5bf9\u4e8e\u6240\u6709\u5408\u6cd5\u7684 $j$ \u90fd\u662f\u4e00\u4e2a\u533a\u95f4\uff0c\u533a\u95f4\u5305\u542b\u7684\u5143\u7d20\u4e2a\u6570\u5c31\u662f\u4e24\u4e2a\u7aef\u70b9\u7684\u5dee\uff0c\u4f46\u662f\u8fd8\u8981\u6392\u9664\u8d1f\u7684\u3002\n\n\u6ce8\u610f\u5230\u4e00\u4e9b\u4e8b\u60c5\uff1a$\\operatorname{next}(i)+L-1\\geq i+1+1-1=i+1$\uff0c$n\\geq Y$\uff0c$n\\geq i+2>i+1$\uff0c\u8fd9\u610f\u5473\u7740\uff1a\n\n$$[\\min(n,\\operatorname{next}(i)+L-1)\\geq \\max(i+1,Y)]=[\\operatorname{next}(i)+L-1\\geq Y]$$\n\n\u90a3\u4e48\u5c31\u662f\n\n$$\\sum_{1\\leq i\\leq \\min(n-2,X+L-2)}[\\operatorname{next}(i)+L-1\\geq Y](\\min(n,\\operatorname{next}(i)+L-1)-\\max(i+1,Y))$$\n\n\u90a3\u4e48\u53d1\u73b0 $\\operatorname{next}(i)+L-1\\geq Y$ \u8fd9\u4e2a\u6761\u4ef6\u76f8\u5f53\u4e8e $i\\geq E$\uff0c \u5176\u4e2d $E$ \u4e3a\u6700\u5927\u7684 $<Y-L+1$ \u7684 $s[l:r]$ \u51fa\u73b0\u4f4d\u7f6e\u3002\u82e5\u6ca1\u6709\u5219\u8bbe $E=1$\u3002\n\n\u987a\u4fbf\u4e3a\u4e86\u597d\u770b\u8bbe $F=\\min(n-2,X+L-2)$\n\n\u4e8e\u662f\u5c31\u53d8\u6210\u4e86\n$$\\sum_{E\\leq i\\leq F}(\\min(n,\\operatorname{next}(i)+L-1)-\\max(i+1,Y))$$\n\n\u6ce8\u610f\u5230 $\\max(i+1,Y)$  \u8fd9\u4e00\u9879\u6bd4\u8f83\u7b80\u5355\uff0c\u53ea\u9700\u8981\u5206\u7c7b\u8ba8\u8bba $i+1$ \u4e0e $Y$ \u7684\u5173\u7cfb\u5373\u53ef\uff0c\u6211\u4eec\u91cd\u70b9\u5173\u6ce8\u524d\u9762\u7684\u3002\n\n$$\\sum_{E\\leq i\\leq F}\\min(n,\\operatorname{next}(i)+L-1)$$\n\n\u548c\u4e4b\u524d $E$ \u5dee\u4e0d\u591a\uff0c\u8003\u8651 $n-L+1\\geq \\operatorname{next}(i)$ \u7684\u610f\u4e49\u3002\u8fd9\u76f8\u5f53\u4e8e\u627e\u5230\u6700\u540e\u4e00\u4e2a $s[l:r]$ \u51fa\u73b0\u4f4d\u7f6e $\\leq n-L+1$ \u7684\u70b9 $G$\uff0c\u7136\u540e\u8981\u6c42 $i< G$\n\n\u6240\u4ee5\u5c31\u662f\n\n$$\\sum_{E\\leq i\\leq\\min(F,G-1)}(\\operatorname{next}(i)+L-1)+\\sum_{\\max(E,G)\\leq i\\leq F}n$$\n\n\u53f3\u8fb9\u7684\u90a3\u4e2a\u4e0d\u7528\u591a\u8bf4\u5927\u5bb6\u90fd\u4f1a\u6c42\uff0c\u770b\u5de6\u8fb9\u7684\u8fd9\u4e2a\u73a9\u610f\n\n\n\u4ee4$H=\\min(F,G-1)$\uff0c\n$$\\sum_{E\\leq i\\leq H}(\\operatorname{next}(i)+L-1)$$\n\n$L-1$ \u8fd9\u4e00\u9879\u4e5f\u5f88\u5bb9\u6613\u8ba1\u7b97\uff0c\u90a3\u6211\u4eec\u4e5f\u5c31\u662f\u8981\u8003\u8651\n\n$$\\sum_{E\\leq i\\leq H}\\operatorname{next}(i)$$\n\n\n\u4ee4 $A$ \u4e3a $\\operatorname{next}(H)$\uff0c $B$ \u4e3a $\\operatorname{next}(E)$\uff0c\u6240\u6709 $s[l:r]$ \u51fa\u73b0\u4f4d\u7f6e\u6392\u597d\u5e8f\u7684\u6570\u7ec4\u4e3a $\\{c_i\\}$\n\n\u90a3\u80af\u5b9a\u53ef\u4ee5\u627e\u5230 $L,R$ $c_L=B,c_R=A$\uff0c$L\\leq R$\uff0c\u4e0d\u59a8\u5047\u8bbe $L<R$\uff0c\u6211\u4eec\u601d\u8003\u5bf9\u4e8e\u6bcf\u4e00\u4e2a $j$\uff0c\u6ee1\u8db3 $\\operatorname{next}(i)=c_j(E\\leq i\\leq H)$ \u7684 $i$ \u7684\u4e2a\u6570\u3002\n\n\u5bf9\u4e8e $L<j<R$\uff0c\u662f $c_j-c_{j-1}$ \u4e2a\u3002\u5bf9\u4e8e $j<L,R>r$\uff0c\u663e\u7136\u53ea\u6709 $0$ \u4e2a\u3002\u5bf9\u4e8e $j=R$\uff0c\u6709 $H-c_{j-1}+1$ \u4e2a\u3002\u5bf9\u4e8e $j=L$\uff0c\u6709 $c_j-E$ \u4e2a\u3002\n\n\u4e0a\u9762\u7684\u7ed3\u8bba\u53ef\u4ee5\u901a\u8fc7\u5728\u7eb8\u4e0a\u753b\u51e0\u4e2a $c$ \u6570\u7ec4\u548c $E,H$ \u533a\u95f4\u6613\u5f97\u3002\n\n\u6240\u4ee5\u4e0a\u8ff0\u548c $=\\sum\\limits_{L<j\\leq R}c_j(c_j-c_{j-1})+c_R(H-c_R+1)+c_L(c_L-E)$\n\n$c_R(H-c_R+1)+c_L(c_L-E)=A(H-A+1)+B(B-E)$ \uff0c\u53ef\u4ee5\u76f4\u63a5\u6c42\u5f97\uff0c\u8003\u8651 $\\sum\\limits_{L<j\\leq R}c_j(c_j-c_{j-1})$\u3002\n\n\u8003\u8651\u4f7f\u7528\uff08\u6743\u503c\u7ebf\u6bb5\u6811\u7684\uff09\u7ebf\u6bb5\u6811\u5408\u5e76\u6765\u7ef4\u62a4\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u8fde\u7eed\u6bb5\uff0c\u7ef4\u62a4\u5b83\u4e4b\u5185\u7684 $\\mathrm{sa}[i]$ \u6784\u6210\u7684\u96c6\u5408\uff0c\u6ce8\u610f\u8fd9\u4e2a\u96c6\u5408\u5c31\u76f8\u5f53\u4e8e $c$ \u6570\u7ec4\u3002\n\n\u7136\u540e\u6211\u4eec\u4ee4\u6bcf\u4e00\u4e2a\u53f6\u5b50 $u$ \u7684\u6743\u503c\u4e3a $u(u-\\operatorname{prev}(u))$ \uff0c\u5176\u4e2d $\\operatorname{prev}(u)$ \u4e3a\u7ebf\u6bb5\u6811\u4e2d $u$ \u7684\u524d\u9a71\uff08\u5c0f\u4e8e $u$ \u7684\u7b2c\u4e00\u4e2a\u53f6\u8282\u70b9\uff09\n\n\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u4ee5\u4e0b\u91cf\n\n- \u8be5\u8282\u70b9\u5b50\u6811\u5185\u6743\u503c\u548c sum \n- \u8be5\u8282\u70b9\u5b50\u6811\u5185\u6700\u5927\u7684\u5143\u7d20 max\n- \u8be5\u8282\u70b9\u5b50\u6811\u5185\u6700\u5c0f\u7684\u5143\u7d20 min\n- \u8be5\u8282\u70b9\u5b50\u6811\u5185\u6700\u5c0f\u7684\u5143\u7d20\u7684 $\\operatorname{prev}(u)$\n- \u4e00\u4e2a\u6807\u8bb0 tag\uff0c\u4ee3\u8868\u6b32\u5c06\u8fd9\u4e2a\u8282\u70b9\u5185\u6700\u5c0f\u7684\u5143\u7d20\u7684 $\\operatorname{prev}(u)$ \u6539\u6210 $k$\n\n\u5177\u4f53\u6765\u8bb2\uff0cpushdown \u5c31\u662f\u770b\u6709\u6ca1\u6709 tag\uff0c\u82e5\u6709\u5219\u66f4\u65b0 $\\operatorname{prev}(u)$\uff0csum\uff0c\u7136\u540e\u5c06 tag \u4e0b\u653e\u5230\u81ea\u5df1\u6700\u5de6\u8fb9\u7684\u90a3\u4e2a\u513f\u5b50\u4e0a\u3002\n\n\u5408\u5e76\u65f6\uff0c\u8003\u8651\u6309\u7167\u987a\u5e8f dfs\uff0c\u540c\u65f6\u7ef4\u62a4\u4e00\u4e2a\u503c $l$\uff0c\u4ee3\u8868dfs\u5230\u7684\u6700\u53f3\u8fb9\u7684\u53f6\u5b50\u3002\n\n\u82e5\u4e24\u4e2a\u8282\u70b9\u90fd\u975e\u7a7a\uff0c\u5219 dfs \u4e0b\u53bb\uff0c\u5426\u5219\u82e5\u4e00\u4e2a\u4e3a\u7a7a\uff0c\u62ff $l$ \u53bb\u6253\u7ed9\u90a3\u4e2a\u975e\u7a7a\u8282\u70b9\u7684 tag\uff0c\u7136\u540e\u62ff\u975e\u7a7a\u8282\u70b9\u7684 max \u66f4\u65b0 $l$\u3002\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u652f\u6301\u533a\u95f4\u6743\u503c\u548c\u4e86\u3002\u987a\u4fbf\u6211\u4eec\u4e5f\u53ef\u4ee5\u652f\u6301\u6c42\u524d\u9a71\u540e\u7ee7\uff0c\u8fd9\u6837\u6211\u4eec\u4e0a\u8ff0\u8fc7\u7a0b\u4e2d\u7684\u6240\u6709\u91cf\u5747\u53ef\u4ee5\u6bcf\u6b21 $O(\\log n)$ \u65f6\u95f4\u6c42\u5f97\u3002\n\n\u800c\u7ebf\u6bb5\u6811\u5408\u5e76\u590d\u6742\u5ea6\u663e\u7136\u662f $O(n\\log n)$\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6 $O((n+q)\\log n)$\uff0c\u8dd1\u5f97\u8fd8\u86ee\u5feb\u7684\u3002\n\n\u6700\u540e\uff0c\u7528\u603b\u65b9\u6848\u6570 $(n-1)(n-2)/2$ \u51cf\u53bb\u521a\u624d\u6c42\u7684\u65b9\u6848\uff0c\u5c31\u662f\u771f\u6b63\u7684\u7b54\u6848\u5566\uff01\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n//dengyaotriangle!\n\nconst int maxn=100005;\nconst int maxq=300005;\n\nchar s[maxn];\nint rnk[maxn],sa[maxn],pre[maxn],cnt[maxn],h[maxn];\nint n,q;\nlong long ans[maxq];\n\nvector<pair<int,int> >qry[maxn];\nvector<int> chg[maxn];\n\nstruct node{\n    long long sum;\n    int mi,mx,tg,prv;\n    node* c[2];\n}pool[maxn*55];int ps;\n\nnode* nwnode(){\n    node* rt=pool+ps++;\n    rt->mx=INT_MIN;rt->mi=INT_MAX;\n    return rt;\n}\n\nvoid pd(node* rt){\n    if(rt->tg){\n        rt->sum+=rt->mi*(long long)(rt->prv-rt->tg);\n        rt->prv=rt->tg;\n        if(rt->c[0])rt->c[0]->tg=rt->tg;\n        else if(rt->c[1])rt->c[1]->tg=rt->tg;\n        rt->tg=0;\n    }\n}\nint mlp;\nnode* mrg(node* a,node*b){\n    if(!a&&!b)return NULL;\n    else if(!a){\n        if(mlp)b->tg=mlp;\n        pd(b);\n        mlp=b->mx;\n        return b;\n    }else if(!b){\n        if(mlp)a->tg=mlp;\n        pd(a);\n        mlp=a->mx;\n        return a;\n    }\n    pd(a);pd(b);\n    a->c[0]=mrg(a->c[0],b->c[0]);\n    a->c[1]=mrg(a->c[1],b->c[1]);\n    a->mi=min(a->c[0]?a->c[0]->mi:INT_MAX,a->c[1]?a->c[1]->mi:INT_MAX);\n    a->mx=max(a->c[0]?a->c[0]->mx:INT_MIN,a->c[1]?a->c[1]->mx:INT_MIN);\n    a->prv=(a->c[0]?a->c[0]->prv:a->c[1]->prv);\n    a->sum=(a->c[0]?a->c[0]->sum:0)+(a->c[1]?a->c[1]->sum:0);\n    return a;\n}\n\nnode* build(int cl,int cr,int x){\n    node* rt=nwnode();\n    rt->mi=rt->mx=x;rt->sum=x*(long long)x;\n    if(cl!=cr){\n        int cm=(cl+cr)>>1;\n        if(x<=cm)rt->c[0]=build(cl,cm,x);\n        else rt->c[1]=build(cm+1,cr,x);\n    }\n    return rt;\n}\n\nlong long qsum(node* rt,int cl,int cr,int l,int r){\n    if(!rt)return 0;\n    int cm=(cl+cr)>>1;\n    pd(rt);\n    if(cl==l&&cr==r)return rt->sum;\n    else if(r<=cm)return qsum(rt->c[0],cl,cm,l,r);\n    else if(l>cm)return qsum(rt->c[1],cm+1,cr,l,r);\n    else return qsum(rt->c[0],cl,cm,l,cm)+qsum(rt->c[1],cm+1,cr,cm+1,r);\n}\nint nxt(node* rt,int cl,int cr,int i){\n    if(!rt)return INT_MAX;\n    int cm=(cl+cr)>>1;\n    if(cl==cr) return cl;\n    else if(i<=cm)return min(nxt(rt->c[0],cl,cm,i),(rt->c[1]?rt->c[1]->mi:INT_MAX));\n    else return nxt(rt->c[1],cm+1,cr,i);\n}\nint prv(node* rt,int cl,int cr,int i){\n    if(!rt)return INT_MIN;\n    int cm=(cl+cr)>>1;\n    if(cl==cr)return cl;\n    else if(i<=cm)return prv(rt->c[0],cl,cm,i);\n    else return max(prv(rt->c[1],cm+1,cr,i),(rt->c[0]?rt->c[0]->mx:INT_MIN));\n}\n\nint pr[maxn];\n\nint grt(int x){return pr[x]==x?x:pr[x]=grt(pr[x]);}\nnode* rt[maxn];\n\nnamespace nqio{const unsigned R=4e5,W=4e5;char*a,*b,i[R],o[W],*c=o,*d=o+W,h[40],*p=h,y;bool s;struct q{void r(char&x){x=a==b&&(b=(a=i)+fread(i,1,R,stdin),a==b)?-1:*a++;}void f(){fwrite(o,1,c-o,stdout);c=o;}~q(){f();}void w(char x){*c=x;if(++c==d)f();}q&operator>>(char&x){do r(x);while(x<=32);return*this;}q&operator>>(char*x){do r(*x);while(*x<=32);while(*x>32)r(*++x);*x=0;return*this;}template<typename t>q&operator>>(t&x){for(r(y),s=0;!isdigit(y);r(y))s|=y==45;if(s)for(x=0;isdigit(y);r(y))x=x*10-(y^48);else for(x=0;isdigit(y);r(y))x=x*10+(y^48);return*this;}q&operator<<(char x){w(x);return*this;}q&operator<<(char*x){while(*x)w(*x++);return*this;}q&operator<<(const char*x){while(*x)w(*x++);return*this;}template<typename t>q&operator<<(t x){if(!x)w(48);else if(x<0)for(w(45);x;x/=10)*p++=48|-(x%10);else for(;x;x/=10)*p++=48|x%10;while(p!=h)w(*--p);return*this;}}qio;}using nqio::qio;\n\nint main(){\n    qio>>n>>q>>(s+1);\n    for(int i=1;i<=n;i++)cnt[s[i]]++;\n    for(int i=1;i<128;i++)cnt[i]+=cnt[i-1];\n    for(int i=n;i>=1;i--)sa[cnt[s[i]]--]=i;\n    rnk[sa[1]]=1;\n    for(int i=2;i<=n;i++)rnk[sa[i]]=rnk[sa[i-1]]+(s[sa[i]]!=s[sa[i-1]]);\n    int m=rnk[sa[n]];\n    for(int k=1;k<=n;k<<=1){\n        int t=0;\n        for(int i=n-k+1;i<=n;i++)pre[++t]=i;\n        for(int i=1;i<=n;i++)if(sa[i]>k)pre[++t]=sa[i]-k;\n        for(int i=1;i<=m;i++)cnt[i]=0;\n        for(int i=1;i<=n;i++)cnt[rnk[i]]++;\n        for(int i=1;i<=m;i++)cnt[i]+=cnt[i-1];\n        for(int i=n;i>=1;i--)sa[cnt[rnk[pre[i]]]--]=pre[i];\n        for(int i=1;i<=n;i++)pre[i]=rnk[i];\n        rnk[sa[1]]=1;\n        for(int i=2;i<=n;i++)rnk[sa[i]]=rnk[sa[i-1]]+(pre[sa[i]]!=pre[sa[i-1]]||pre[sa[i]+k]!=pre[sa[i-1]+k]);\n        if((m=rnk[sa[n]])==n)break;\n    }\n    for(int i=1;i<=n;i++){\n        if(rnk[i]==1)h[rnk[i]]=0;\n        else{\n            int ch=h[rnk[i-1]];ch-=!!ch;\n            while(s[i+ch]==s[sa[rnk[i]-1]+ch])ch++;\n            h[rnk[i]]=ch;\n        }\n    }\n    for(int i=1;i<=n;i++)pr[i]=i,rt[i]=build(1,n,sa[i]);\n    for(int i=2;i<=n;i++)chg[h[i]].push_back(i);\n    for(int i=1;i<=q;i++){\n        int l,r;\n        qio>>l>>r;\n        qry[r-l+1].push_back(make_pair(l,i));\n    }\n    for(int i=n;i>=1;i--){\n        for(int j=0;j<chg[i].size();j++){\n            int l=grt(chg[i][j]-1),r=grt(chg[i][j]);\n            pr[r]=l;\n            mlp=0;\n            rt[l]=mrg(rt[l],rt[r]);\n        }\n        for(int j=0;j<qry[i].size();j++){\n            int c=grt(rnk[qry[i][j].first]);\n            long long cans=((long long)(n-1)*(n-2))>>1;\n            int x=rt[c]->mi,y=rt[c]->mx;\n            int e=(y-i<1)?1:max(1,prv(rt[c],1,n,y-i)),f=min(n-2,x+i-2);\n            if(e<=f){\n                int sp=min(y-2,f);\n                if(e<=sp)cans+=y*(long long)(sp-e+1);\n                int bp=max(y-1,e);\n                if(bp<=f)cans+=((f-bp+1)*(long long)(bp+1+f+1))>>1;\n                int g=max(1,prv(rt[c],1,n,n-i+1));\n                if(max(e,g)<=f)cans-=(f-max(e,g)+1)*(long long)n;\n                int h=min(f,g-1);\n                if(e<=h){\n                    cans-=(i-1)*(long long)(h-e+1);\n                    int a=nxt(rt[c],1,n,h+1);\n                    int b=nxt(rt[c],1,n,e+1);\n                    if(a==b)cans-=(h-e+1)*(long long)a;\n                    else{\n                        cans-=b*(long long)(b-e);\n                        cans-=a*(long long)(h-a+1);\n                        cans-=qsum(rt[c],1,n,b+1,a);\n                    }\n                }\n            }\n            ans[qry[i][j].second]=cans;\n        }\n    }\n    for(int i=1;i<=q;i++)qio<<ans[i]<<'\\n';\n    return 0;\n}\n```",
        "postTime": 1613368142,
        "uid": 62598,
        "name": "dengyaotriangle",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4384 \u3010[\u516b\u7701\u8054\u80032018]\u5236\u80e1\u7a9c\u3011"
    },
    {
        "content": "Upd on 2022.6.9\uff1a\u91cd\u5199\u4e86\u4e00\u7bc7\u9898\u89e3\uff0c\u539f\u9898\u89e3\u89c1 [\u94fe\u63a5](https://www.luogu.com.cn/paste/b4pcmzxu)\u3002\n\n\u4ee4 $t = s_{l, r}$\uff0c\u4e0b\u6587 $l, r$ \u8868\u793a\u5176\u5b83\u5185\u5bb9\u3002\n\n\u9650\u5236\u901a\u8fc7 \u201c\u6216\u201d \u8fde\u63a5\uff0c\u5206\u7c7b\u8ba8\u8bba\u8f83\u9ebb\u70e6\uff0c\u8003\u8651\u5bb9\u65a5\u6c42 $s_{1, i}$\uff0c$s_{i + 1, j}$\uff0c$s_{j + 1, n}$ \u5747\u4e0d\u5305\u542b $t$ \u7684 $1\\leq i < j < n$ \u5bf9\u6570\u3002\u5373\u5728 $n - 1$ \u4e2a\u7a7a\u9699\u5904\u5207\u4e24\u5200\uff0c\u4f7f\u5f97\u5207\u51fa\u6765\u7684\u4e09\u4e2a\u5b57\u7b26\u4e32\u5747\u4e0d\u5305\u542b $t$\u3002\n\n\u8003\u8651\u56fa\u5b9a\u4e86\u7b2c\u4e00\u5200\u7684\u4f4d\u7f6e\u5728 $i$ \u548c $i + 1$ \u4e4b\u95f4\u540e\uff0c\u6709\u591a\u5c11\u4e2a\u7a7a\u9699 $j\\sim j + 1$ \u7b26\u5408\u6761\u4ef6\u3002\n\n1. \u82e5 $s_{i + 1, n}$ \u5f53\u4e2d\u6ca1\u6709\u51fa\u73b0 $t$\uff0c\u5219\u7b2c\u4e8c\u5200\u53ef\u4ee5\u5207\u5728\u4efb\u4f55\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5171\u6709 $n - (i + 1)$ \u79cd\u65b9\u6848\u3002\n2. \u5426\u5219\uff0c\u5bf9\u4e8e $s_{i + 1, n}$\uff0c\u4ee4 $t$ \u7b2c\u4e00\u6b21\u51fa\u73b0\u4e3a $s_{p - L + 1, p}(L = r - l + 1)$\uff0c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u4e3a $s_{q - L + 1, q}$\uff0c\u90a3\u4e48\u7b2c\u4e8c\u5200\u5fc5\u987b\u5207\u5728 $s_{q - L + 1, p}$ \u4e2d\u95f4\uff0c\u65b9\u6848\u6570\u5373 $p - (q - L + 1)$\u3002\n\n\u8fd9\u6837\u5df2\u7ecf\u53ef\u4ee5\u505a $\\sum r - l + 1\\leq 10 ^ 6$ \u7684\u90e8\u5206\u5206\u4e86\uff1a\u5efa\u51fa SAM\uff0c\u7ebf\u6bb5\u6811\u5408\u5e76\u7ef4\u62a4 endpos \u96c6\u5408\uff0c\u500d\u589e\u8df3\u5230 $t$ \u5bf9\u5e94\u72b6\u6001\u3002\u67e5\u8be2\u4e0a\u8ff0\u4fe1\u606f\u662f\u57fa\u7840\u4e2d\u7684\u57fa\u7840\u3002\n\n\u76f4\u63a5\u8003\u8651\u7b2c\u4e00\u5200\u7684\u4f4d\u7f6e\u6ca1\u6709\u524d\u9014\uff0c\u6211\u4eec\u8f6c\u6362\u8d21\u732e\u65b9\u5f0f\u3002\n\n\u5148\u8003\u8651\u8f83\u7b80\u5355\u7684 case 1\uff1a$s_{i + 1, n}$ \u6ca1\u6709\u51fa\u73b0 $t$\u3002\u53ea\u9700\u627e\u5230\u7b2c\u4e00\u6b21\u51fa\u73b0\u548c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u91cd\u5408\u90e8\u5206 $s_{l', r'}$\uff0c\u82e5\u5176\u975e\u7a7a\uff0c\u5219\u7b54\u6848\u52a0\u4e0a $\\sum\\limits_{i = l'} ^ {r' - 1} n - (i + 1)$\u3002\u7b49\u5dee\u6570\u5217\u6c42\u4e2a\u548c\u5373\u53ef\u3002\n\ncase 2 \u8f83\u4e3a\u68d8\u624b\u3002\u6ce8\u610f\u5230\u6bcf\u6b21 $t$ \u7684\u51fa\u73b0 $s_{p - L + 1, p}$ \u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a\uff1a\u4f7f\u5f97 $t$ \u7b2c\u4e00\u6b21\u51fa\u73b0\u5728 $s_{i + 1, n}$ \u662f $s_{p - L + 1, p}$ \u7684\u7b2c\u4e00\u5200\uff08$i\\sim i + 1$\uff09\u7684\u65b9\u6848\u6570\uff0c\u4e58\u4ee5\u7b2c\u4e8c\u5200\u65b9\u6848\u6570\u3002\n\n\u540e\u8005\u6211\u4eec\u5df2\u7ecf\u5206\u6790\u8fc7\u4e86\uff0c\u662f $p - (q - L + 1)$\uff0c\u5176\u4e2d $q$ \u662f $t$ \u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff08$s_{q - L + 1, q} = t$ \u4e14 $q$ \u6700\u5927\uff09\uff0c\u5b83\u662f\u5173\u4e8e\u6bcf\u6b21\u8be2\u95ee\u7684 $l, r$ \u7684\u5b9a\u503c\uff0c\u53ef\u4ee5\u89c6\u4f5c\u5e38\u6570\uff08\u7ebf\u6bb5\u6811\u5408\u5e76\u5bb9\u6613\u6c42\u89e3 $q$\uff09\u3002\n\n\u524d\u8005\u4ed4\u7ec6\u5206\u6790\uff0c\u5bb9\u6613\u5f97\u5230\u4e3a $p - pre$\uff0c\u5176\u4e2d $pre$ \u662f $p$ \u4e4b\u524d\u7684 $t$ \u5728 $s$ \u5f53\u4e2d\u7684\u51fa\u73b0\u4f4d\u7f6e\uff0c\u5373 $s_{pre - L + 1, pre} = t$ \u4e14 $pre < p$ \u4e14 $pre$ \u6700\u5927\u3002\u8fd9\u662f\u56e0\u4e3a\u82e5 $i < pre - L + 1$\uff0c\u5219 $s_{i + 1, n}$ \u7b2c\u4e00\u6b21\u51fa\u73b0 $t$ \u662f\u5728 $pre$ \u6216\u4e4b\u524d\uff1b\u800c $i$ \u9700\u8981\u5c0f\u4e8e\u7b49\u4e8e $p - L$\uff0c\u5426\u5219\u7b2c\u4e00\u6b21\u51fa\u73b0 $t$ \u662f\u5728 $p$ \u4e4b\u540e\uff0c\u6240\u4ee5 $pre - L + 1 \\leq i \\leq p - L$\uff0c\u5373 $i$ \u6709 $(p - L) - (pre - L + 1) + 1 = p - pre$ \u79cd\u53d6\u503c\u3002\n\n\u6709\u4e00\u4e2a\u7ec6\u8282\uff0c\u5c31\u662f $p - (q - L + 1)$ \u8981\u548c $0$ \u53d6 $\\max$\uff0c\u56e0\u4e3a\u5f53 $p - (q - L + 1) < 0$ \u65f6\uff0c\u79fb\u4e0b\u9879\u53d1\u73b0 $p \\leq q - L$\uff0c\u5373 $s_{i + 1, n}$ \u51fa\u73b0\u4e86\u4e24\u6b21 $t$ \u7684\u4e0d\u91cd\u53e0\u7684\u51fa\u73b0\uff0c\u6b64\u65f6\u7b2c\u4e8c\u5200\u65e0\u8bba\u5982\u4f55\u90fd\u65e0\u6cd5\u6ee1\u8db3\u6761\u4ef6\u3002\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4fdd\u8bc1 $p - (q - L + 1) \\geq 0$\u3002\n\n\u7efc\u5408\u8d77\u6765\uff0c\u5bf9\u4e8e case 2\uff0c\u7b2c\u4e00\u5200\u7684\u4f4d\u7f6e\u6709\u8fd9\u4e9b\u9650\u5236\uff1a\n\n- \u5de6\u7aef\u70b9 $\\geq 1$\u3002\n- \u5de6\u7aef\u70b9 $\\geq u - L + 1$\uff0c\u5176\u4e2d $u$ \u662f $s_{1, q - L}$ \u5f53\u4e2d $t$ \u7684\u6700\u540e\u4e00\u6b21\u51fa\u73b0\uff0c\u8fd9\u662f\u4e3a\u4e86\u4fdd\u8bc1 $p - (q - L + 1) \\geq 0$\uff0c\u4e0d\u5b58\u5728\u5219\u53ef\u89c6\u4e3a $-\\infty$\u3002\n- \u53f3\u7aef\u70b9 $\\leq q - L$\uff0c\u8fd9\u662f\u4e3a\u4e86\u4fdd\u8bc1 case 2 \u7684\u524d\u63d0\u6761\u4ef6 $s_{i + 1, n}$ \u51fa\u73b0 $t$\u3002\n- \u53f3\u7aef\u70b9 $\\leq f - 1$\uff0c\u5176\u4e2d $f$ \u662f $s$ \u5f53\u4e2d $t$ \u7684\u7b2c\u4e00\u6b21\u51fa\u73b0\u3002\u8fd9\u662f\u4e3a\u4e86\u4fdd\u8bc1 $s_{1, i}$ \u5f53\u4e2d\u4e0d\u51fa\u73b0 $t$\u3002\n\n\u4ee4 $l = max(1, u - L + 1)$\uff0c$r = min(q - L, f - 1)$\uff0c\u7b2c\u4e00\u5200\u7684\u8303\u56f4\u5373 $i\\in [l, r]$\u3002\n\n\u8003\u8651\u5f53 $s_{p - L + 1, p}$ \u4f5c\u4e3a $s_{i + 1, n}$ \u7b2c\u4e00\u6b21\u51fa\u73b0\u65f6 $i$ \u7684\u53d6\u503c\u8303\u56f4\uff0c\u4e0a\u6587\u5206\u6790\u8fc7\u662f $[pre - L + 1, p - L]$\u3002\u56e0\u6b64\u7b54\u6848\u5373\u5bf9\u4e8e $t$ \u5728 $s$ \u4e2d\u6240\u6709\u51fa\u73b0\u4f4d\u7f6e $p$\uff0c\n$$\n\\sum\\limits_p |[pre - L + 1, p - L] \\cap [l, r] \\cap \\mathbb Z| \\times (p - (q - L + 1))\n$$\n\u6ce8\u610f $q - L + 1$ \u662f\u5b9a\u503c\uff0c\u53ef\u4ee5\u89c6\u4e3a\u5e38\u6570\u3002\n\n\u6d88\u9664 $[l, r]$ \u7684\u9650\u5236\u662f\u5bb9\u6613\u7684\u3002\u8003\u8651\u4f7f\u5f97 $[pre - L + 1, p - L]$ \u5b8c\u5168\u5305\u542b\u4e8e $[l, r]$ \u7684 $(pre, p)$ \u4e8c\u5143\u7ec4\uff0c\u6211\u4eec\u53d1\u73b0\u4ee4 $P = \\mathrm{endpos}(t) \\cap [l + L - 1, r + L]$\uff0c\u5373 $[l + L - 1, r + L]$ \u5f53\u4e2d\u6240\u6709 $t$ \u5728 $s$ \u4e2d\u7684\u51fa\u73b0\u4f4d\u7f6e\uff0c\u6309\u987a\u5e8f\u8bb0\u505a $p_1, p_2, \\cdots, p_k$\uff0c\u5219\u5176\u5185\u90e8\u7684\u8d21\u732e\u4e3a $\\sum\\limits_{i = 2} ^ k (p_i - p_{i - 1})(p_i - (q - L + 1))$\u3002\u5f53\u7136\uff0c\u8fd8\u9700\u52a0\u4e0a $p_1$ \u4e0e\u5176 $pre$ \u7684\u8d21\u732e $(p_1 - (l + L - 1))(p_1 - (q - L + 1))$\uff0c\u4ee5\u53ca $p_k$ \u4e0e $t$ \u5728 $p_k$ \u4e0b\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e $suf$ \u7684\u8d21\u732e $((r + L) - p_k)(suf - (q - L + 1))$\u3002\n\n$(pre, p_1)$ \u548c $(p_k, suf)$ \u7684\u8d21\u732e\u53ea\u6709 $\\mathcal{O}(1)$ \u6b21\uff0c\u662f\u5e73\u51e1\u7684\u3002\u5c06 $p_0$ \u89c6\u4f5c $l + L - 1$ \u53ef\u4ee5\u51cf\u5c11\u8ba8\u8bba $(pre, p_1)$ \u7684\u60c5\u51b5\u3002\u552f\u4e00\u9ebb\u70e6\u7684\u5730\u65b9\u5728\u4e8e $\\sum (p_i - p_{i - 1})(p_ i - (q - L + 1))$\u3002\u62c6\u6210 $\\sum (p_i - p_{i - 1})p_i$ \u548c $\\sum (p_i - p_{i - 1})(q - L + 1)$\uff0c\u53d1\u73b0\u6211\u4eec\u53ea\u9700\u7ef4\u62a4 $\\sum (p_i - p_{i - 1})p_i$\uff08$\\sum p_i - p_{i - 1}$ \u5c31\u662f\u6700\u5927\u4f4d\u7f6e\u51cf\u53bb\u6700\u5c0f\u4f4d\u7f6e\uff09\uff0c\u5373\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u4e0b\u6807\u4e58\u4ee5\u5b83\u5230\u5b83\u7684\u524d\u9a71\u8ddd\u79bb\u4e4b\u548c\uff0c\u7ebf\u6bb5\u6811\u5f88\u5bb9\u6613\u505a\u5230\u8fd9\u4e00\u70b9\u3002\n\n\u7efc\u4e0a\uff0ccase 2 \u7684\u7b54\u6848\u5f0f\u4e3a\n$$\n\\left(\\sum\\limits_{i = 1} ^ k (p_i - p_i - 1) p_i\\right) + (r + L - p_k)\\times suf - (r - l + 1) \\times (q - L + 1)\n$$\n\u5176\u4e2d $r - l + 1$ \u7531 $(p_1 - (l + L - 1)) + \\left(\\sum\\limits_{i = 2} ^ k p_i - p_{i - 1}\\right) + (r + L - p_k)$ \u5316\u7b80\u5f97\u5230\uff0c\u672c\u8d28\u4e0a\u662f $[l, r]$ \u6240\u5305\u542b\u7684\u6574\u6570\u4e2a\u6570\u3002\n\n\u7ebf\u6bb5\u6811\u5408\u5e76\u7ef4\u62a4 endpos \u96c6\u5408\u53ca\u5176\u76f8\u5173\u4fe1\u606f\uff1a\u533a\u95f4\u6700\u5c0f\u6700\u5927\u503c\uff0c\u4ee5\u53ca\u533a\u95f4\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u4e0b\u6807\u4e58\u4ee5\u5b83\u5230\u5b83\u7684\u524d\u9a71\u8ddd\u79bb\u4e4b\u548c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}((n + q)\\log n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n\\log n)$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconstexpr int N = 2e5 + 5;\nconstexpr int S = 10;\nconstexpr int K = N * 40;\nstruct dat {\n  int l, r;\n  long long val;\n  dat(int _l = N, int _r = -1, long long _v = -1) {l = _l, r = _r, val = _v;}\n  dat operator + (const dat &rhs) const {\n    if(r == -1) return rhs;\n    if(rhs.r == -1) return *this;\n    return dat(l, rhs.r, val + rhs.val + 1ll * rhs.l * (rhs.l - r));\n  }\n} val[K];\nint node, R[N], ls[K], rs[K];\nvoid insert(int l, int r, int p, int &x) {\n  x = ++node;\n  if(l == r) return val[x] = dat(p, p, 0), void();\n  int m = l + r >> 1;\n  if(p <= m) insert(l, m, p, ls[x]);\n  else insert(m + 1, r, p, rs[x]);\n  val[x] = val[ls[x]] + val[rs[x]];\n}\nint merge(int x, int y) {\n  if(!x || !y) return x | y;\n  int z = ++node;\n  ls[z] = merge(ls[x], ls[y]);\n  rs[z] = merge(rs[x], rs[y]);\n  return val[z] = val[ls[z]] + val[rs[z]], z;\n}\ndat query(int l, int r, int ql, int qr, int x) {\n  if(ql > qr) return dat();\n  if(ql <= l && r <= qr) return val[x];\n  int m = l + r >> 1;\n  dat ans;\n  if(ql <= m) ans = ans + query(l, m, ql, qr, ls[x]);\n  if(m < qr) ans = ans + query(m + 1, r, ql, qr, rs[x]);\n  return ans;\n}\nint n, q, lg, ed[N], anc[S << 1][N];\nint las = 1, cnt = 1, son[N][S], fa[N], len[N], buc[N], id[N];\nvoid ins(int it) {\n  int p = las, cur = ++cnt;\n  las = cur, len[cur] = len[p] + 1;\n  insert(1, n, len[cur], R[cur]);\n  ed[len[cur]] = cur;\n  while(!son[p][it]) son[p][it] = cur, p = fa[p];\n  if(!p) return fa[cur] = 1, void();\n  int q = son[p][it];\n  if(len[p] + 1 == len[q]) return fa[cur] = q, void();\n  int cl = ++cnt;\n  len[cl] = len[p] + 1, fa[cl] = fa[q];\n  fa[q] = fa[cur] = cl;\n  memcpy(son[cl], son[q], S << 2);\n  while(son[p][it] == q) son[p][it] = cl, p = fa[p];\n}\nchar s[N];\nint main() {\n#ifdef ALEX_WEI\n  freopen(\"1.in\", \"r\", stdin);\n  freopen(\"1.out\", \"w\", stdout);\n#endif\n  scanf(\"%d%d%s\", &n, &q, s + 1);\n  for(int i = 1; i <= n; i++) ins(s[i] - '0');\n  for(int i = 1; i <= cnt; i++) buc[len[i]]++;\n  for(int i = 1; i <= n; i++) buc[i] += buc[i - 1];\n  for(int i = cnt; i; i--) id[buc[len[i]]--] = i;\n  for(int i = cnt; i; i--) R[fa[id[i]]] = merge(R[fa[id[i]]], R[id[i]]);\n  for(int i = 1; i <= cnt; i++) anc[0][i] = fa[i];\n  lg = log2(cnt);\n  for(int i = 1; i <= lg; i++)\n    for(int j = 1; j <= cnt; j++)\n      anc[i][j] = anc[i - 1][anc[i - 1][j]];\n  for(int i = 1; i <= q; i++) {\n    int pl, pr, L, p;\n    long long ans = 0;\n    scanf(\"%d%d\", &pl, &pr);\n    p = ed[pr], L = pr - pl + 1;\n    for(int j = lg; ~j; j--) if(len[anc[j][p]] >= L) p = anc[j][p];\n    dat whole = val[R[p]];\n    if(whole.l - 1 >= whole.r - L + 1) {\n      int l = whole.r - L + 1, r = whole.l - 1;\n      int sl = n - r - 1, sr = n - l - 1;\n      ans += 1ll * (sl + sr) * (sr - sl + 1) / 2;\n    }\n    int l = max(1, query(1, n, 1, whole.r - L, R[p]).r - L + 1);\n    int r = min(whole.r - L, whole.l - 1);\n    if(l <= r) {\n      dat inside = dat(l + L - 1, l + L - 1, 0) + query(1, n, l + L, r + L, R[p]);\n      ans += inside.val - 1ll * (r - l + 1) * (whole.r - L + 1);\n      if(inside.r < r + L) {\n        dat rt = query(1, n, r + L + 1, n, R[p]);\n        ans += 1ll * (r + L - inside.r) * rt.l; \n      }\n    }\n    printf(\"%lld\\n\", 1ll * (n - 1) * (n - 2) / 2 - ans);\n  }\n  return 0;\n}\n/*\n2022/6/9\nstart coding at 13:41\nfinish debugging at 15:37\n*/\n```",
        "postTime": 1619873458,
        "uid": 123294,
        "name": "Alex_Wei",
        "ccfLevel": 10,
        "title": "P4384 [\u516b\u7701\u8054\u80032018]\u5236\u80e1\u7a9c \u9898\u89e3"
    },
    {
        "content": "## $\\text{Foreword}$\n>\u4eba\u90fd\u9053\u6b63\u96be\u5219\u53cd\uff0c\u6211\u504f\u8bf4\u6b63\u4e5f\u4e0d\u96be\u3002  \n\n\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u79cd\u6b63\u9762\u76f4\u63a5\u7edf\u8ba1\u7684\u505a\u6cd5\u3002  \n\u548c\u8865\u96c6\u505a\u6cd5\u76f8\u6bd4\uff0c\u6ca1\u6709\u90a3\u4e48\u591a\u7684\u5206\u7c7b\u8ba8\u8bba\uff0c\u66f4\u591a\u7684\u662f\u5bf9\u95ee\u9898\u7684\u6b63\u5411\u5206\u6790\u548c\u9010\u5c42\u5316\u7b80\u3001\u8f6c\u5316\uff0c\u4e5f\u5e76\u4e0d\u9ebb\u70e6\u3002  \n\u7531\u4e8e\u9700\u8981\u5199\u5f88\u591a\u7ebf\u6bb5\u6811\u7684\u64cd\u4f5c\uff0c\u7801\u91cf\u8f83\u5927\uff0c\u672c\u4eba\u5728210\u884c\u5de6\u53f3\uff08\u4f46\u90fd\u662f\u8f83\u4e3a\u57fa\u7840\u7684\u64cd\u4f5c\uff0c\u5199\u8d77\u6765\u5f88\u8212\u9002\uff09\u3002  \n~~\u672c\u6765\u8fd9\u5c31\u662f\u4e00\u9053\u7801\u519c\u9898\u4e0d\u662f\u5417\uff01~~  \n\u6211\u4eec\u5f00\u59cb\u5427\u3002\n## $\\text{Solution}$\n\n\u524d\u7f6e\u89c4\u5b9a\uff1a  \n\u4ee5\u4e0b\u8bbe\u622a\u4e0b\u7684\u4e32\u7684\u4e24\u7aef\u70b9\uff08\u5373\u9898\u9762\u63cf\u8ff0 $i+1,j-1$\uff09\u4e3a $x,y$\uff0c$x,y\\in(1,n)$\u3002  \n\u8bbe\u8be2\u95ee\u4e32\u957f\u5ea6\u4e3a $len$\u3002  \n\u8bbe $s(a,b)=\\sum_{i=a}^bi$\uff0c$a>b$ \u65f6\uff0c\u89c4\u5b9a $s(a,b)=0$\u3002  \n\n\uff08\u4ee5\u4e0b\u57fa\u672c\u6a21\u62df\u6211\u505a\u672c\u9898\u7684\u601d\u7ef4\u8fc7\u7a0b\uff09  \n\nSA \u548c\u672c\u9898\u611f\u89c9\u4e0d\u662f\u5f88\u642d\uff0c\u90a3\u57fa\u672c\u5c31\u662f SAM \u4e86\u3002  \n\u7ed9\u7684\u9650\u5236\u4e4d\u4e00\u770b\u975e\u5e38\u6076\u5fc3\uff0c\u4f46\u7ec6\u60f3\u60f3\u8fd8\u633a\u6709\u8bdd\u8bf4\u7684\u3002  \n\n### Part 1 \n\u8bbe\u8be2\u95ee\u4e32\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684**\u53f3\u7aef\u70b9** \u4f4d\u7f6e\u4e3a $a$\uff0c\u6700\u540e\u4e00\u6b21\u51fa\u73b0**\u5de6\u7aef\u70b9** \u4f4d\u7f6e\u4e3a $b$\uff0c\u90a3\u4e48\u5f53\u4e2d\u95f4\u622a\u4e0b\u7684\u5b57\u7b26\u4e32 $x>a$ \u6216 $y<b$ \u7684\u65f6\u5019\uff0c\u5fc5\u7136\u662f\u5408\u6cd5\u7684\u3002  \nSAM \u53cd\u4e32\u5148\u5efa\u51fa\u540e\u7f00\u6811\uff0c\u8bb0\u5f55\u51fa\u73b0\u7684\u6700\u65e9\u548c\u6700\u665a\u4f4d\u7f6e\u5e76\u5411\u7236\u4eb2\u4f20\u9012\uff0c\u5373\u53ef\u7ef4\u62a4\u8fd9\u4e24\u4e2a\u503c\u3002\n\u5bb9\u6613\u7edf\u8ba1\u8fd9\u4e2a\u65f6\u5019\u7684\u7b54\u6848\uff0c\u5e94\u8be5\u662f\uff1a\n$$s(1,n-a-1)+s(1,b-2)-s(1,(b-1)-(a+1)+1)$$\n\u6700\u540e\u51cf\u53bb\u7684\u662f\u4e3a\u4e86\u5bb9\u65a5\u6389\u5de6\u53f3\u7aef\u70b9\u540c\u65f6\u6ee1\u8db3\u6761\u4ef6\u7b97\u91cd\u7684\u65b9\u6848\u6570\u3002\n\n### Part 2\n\u90a3\u4e48\u73b0\u5728\u7684\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u4e86\uff1a\n>\u6c42 $x\\le a,y\\ge b$ \u4e14\u5305\u542b\u8be2\u95ee\u4e32\u7684\u5b57\u7b26\u4e32 $(x,y)$ \u5bf9\u6570\u3002\n\n\u8fd9\u4e2a\u4e1c\u897f\u5e76\u592a\u4e0d\u597d\u505a\u3002  \n\u66b4\u529b\u600e\u4e48\u505a\uff1f  \n~~\u66b4\u529b\u662f\u4e0d\u662f~~\u6211\u4eec\u56fa\u5b9a\u4e00\u4e2a $x$\uff0c\u7136\u540e\u8bbe**\u5de6\u7aef\u70b9\u5728 $x$ \u53f3\u4fa7\u7684\u6700\u9760\u5de6\u7684\u5b57\u7b26\u4e32\u7684\u53f3\u7aef\u70b9**\u4e3a $pos$\uff0c\u90a3\u4e48 $r$ \u7684\u53d6\u503c\u8303\u56f4\u5c31\u662f $[\\max(b,pos),n-1]$\u3002  \n\u968f\u7740\u5de6\u7aef\u70b9\u53f3\u79fb\uff0c $pos$ \u5355\u8c03\u4e0d\u5347\uff0c\u53f3\u7aef\u70b9\u53ef\u4ee5\u53d6\u5230\u7684\u8303\u56f4\u80af\u5b9a\u662f\u9010\u6e10\u53d8\u5927\uff0c\u6700\u540e\u53d8\u6210 $[b,n-1]$\u3002\n\u6211\u4eec\u5c1d\u8bd5\u6390\u5934\u53bb\u5c3e\u7684\u8ba1\u7b97\u8fd9\u90e8\u5206\u7684\u7b54\u6848\u3002\n#### Part 2.1\n\u6211\u4eec\u627e\u5230\u6ee1\u8db3 $r\\le b$ \u7684\u6700\u9760\u5de6\u8be2\u95ee\u4e32\uff0c\u8bbe\u5176\u5de6\u7aef\u70b9\u4e3a $u$\uff0c\u90a3\u4e48\u5f53 $x\\le u$ \u65f6\uff0c$y$ \u7684\u53d6\u503c\u8303\u56f4\u5c31\u53d8\u6210\u4e86 $[b,n-1]$\u3002  \n\u8fd9\u90e8\u5206\u7684\u8d21\u732e\u662f\uff1a\n$$(u-1)(n-b)$$\n\u9700\u8981\u6ce8\u610f\u4e00\u4e9b\u8fb9\u754c\u60c5\u51b5\uff0c\u5982\u679c $u\\ge a$\uff0c\u90a3\u4e48\u6574\u4e2a part2 \u7684\u8d21\u732e\u5c31\u662f $(a-1)(n-b)$\uff0c\u52a0\u4e0a\u540e\u76f4\u63a5\u8fd4\u56de\u5373\u53ef\u3002\n#### Part 2.2\n\u8bbe $l>a$ \u7684\u6700\u9760\u5de6\u7684\u8be2\u95ee\u4e32\u7684\u5de6\u7aef\u70b9\u4e3a $suf$\uff0c$l\\le a$ \u7684\u6700\u9760\u53f3\u7684\u8be2\u95ee\u4e32\u5de6\u7aef\u70b9\u4e3a $pre$\uff0c\u90a3\u4e48\u5f53 $x\\in(pre,a]$ \u65f6\uff0c$y$ \u4e00\u76f4\u662f\u5728\u53d7 $suf$ \u8fd9\u4e2a\u4e32\u7ea6\u675f\uff0c\u5176\u8303\u56f4\u662f $[suf+len-1,n-1]$\u3002  \n\u8fd9\u90e8\u5206\u7684\u8d21\u732e\u5c31\u662f\uff1a\n$$(a-pre)(n-suf)$$\n\n#### Part 2.3\n\u73b0\u5728\u6211\u4eec\u53ea\u5269\u4e0b $x\\in[u+1,pre]$ \u8fd9\u4e00\u6bb5\u7684\u8d21\u732e\u4e86\u3002\n\n\u6211\u4eec\u60f3\u60f3\u6700\u7406\u60f3\u7684\u60c5\u51b5\uff1a\u6bcf\u4e2a\u4f4d\u7f6e\u90fd\u6709\u4e00\u4e2a\u8be2\u95ee\u4e32\u7684\u5de6\u7aef\u70b9\uff0c\u90a3\u4e48\u7b54\u6848\u663e\u7136\u5c31\u662f\uff1a\n$$\\sum_{i=u+1}^{pre}n-(i+len-1)=s(n-(pre+len-1),n-(u+1+len-1))$$\n\u4f46\u662f\u73b0\u5b9e\u5f88\u9aa8\u611f\uff0c\u771f\u5b9e\u7b54\u6848\u53ef\u80fd\u4f1a\u53d6\u4e0d\u5230\u8fd9\u4e48\u591a\uff0c\u90a3\u4e48\u4f1a\u5c11\u591a\u5c11\u5462\uff1f  \n\u4e3e\u4e2a\u6817\u5b50\uff0c\u8bbe\u5de6\u7aef\u70b9\u51fa\u73b0\u96c6\u5408\u4e3a $101001$\uff0c\u8003\u8651\u5b83\u548c $111111$ \u76f8\u6bd4\u5c11\u4e86\u591a\u5c11\u7b54\u6848\u3002  \n\u4e0d\u96be\u53d1\u73b0\uff0c\u7b2c\u4e00\u6bb5\u957f\u5ea6\u4e3a $1$ \u7684 $0$ \u4e32\u4f7f\u7b54\u6848\u51cf\u5c11\u4e86 $1$\uff0c\u7b2c\u4e8c\u6bb5\u7b54\u6848\u4e3a $2$ \u7684 $0$ \u4e32\u4f7f\u7b54\u6848\u51cf\u5c11\u4e86 $1+2=3$\u3002  \n\u4e00\u822c\u7684\uff0c\u4e00\u6bb5\u957f\u5ea6\u4e3a $L$ \u7684\u6781\u957f $0$ \u4e32\uff0c\u4f1a\u4f7f\u7b54\u6848\u51cf\u5c11 $s(1,L)$\u3002  \n\u90a3\u4e48\u95ee\u9898\u5c31\u53d8\u6210\u6c42 $[u+1,pre]$ \u8fd9\u90e8\u5206 $0$ \u4e32\u51cf\u5c11\u7684\u7b54\u6848\u4e4b\u548c\uff0c\u5229\u7528\u7ebf\u6bb5\u6811\u5408\u5e76 $startpos$ \u96c6\u5408\u5373\u53ef\u8f7b\u677e\u7ef4\u62a4\u3002  \n(~~startpos\u8fd9\u4e2a\u540d\u5b57\u662f\u6211\u778e\u8d77\u7684\uff0c\u5c31\u662f\u6b63\u5e38SAM\u7684endpos~~)\n\n\n\u7136\u540e\u672c\u9898\u5c31\u505a\u5b8c\u4e86\u3002  \n\u65f6\u95f4\u590d\u6742\u5ea6 $O((n+m)\\log n)$\u3002\n## $\\text{Code}$\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define ull unsigned long long\n#define debug(...) fprintf(stderr,__VA_ARGS__)\n#define ok debug(\"OK\\n\")\nusing namespace std;\n\nconst int N=4e5+100;\nconst int C=10;\n\ninline ll read(){\n\tll x(0),f(1);char c=getchar();\n\twhile(!isdigit(c)) {if(c=='-')f=-1;c=getchar();}\n\twhile(isdigit(c)) {x=(x<<1)+(x<<3)+c-'0';c=getchar();}\n\treturn x*f;\n}\n\nint n,m,k;\n\nint tag[N],mn[N],mx[N];\nint pos[N];\nint pl[N][20];\nvector<int>v[N];\n\n#define calc(x) (1ll*(x)*((x)+1)/2)\nstruct node{\n\tint llen,rlen,siz;\n\tll sum;\n};\nnode operator + (const node &a,const node &b){\n\tnode o;\n\to.siz=a.siz+b.siz;\n\to.llen=a.llen==a.siz?a.siz+b.llen:a.llen;\n\to.rlen=b.rlen==b.siz?b.siz+a.rlen:b.rlen;\n\to.sum=a.sum+b.sum;\n\to.sum+=calc(a.rlen+b.llen)-calc(a.rlen)-calc(b.llen);\n\treturn o;\n}\ninline node emp(int len){\n\treturn (node){len,len,len,calc(len)};\n}\n\nstruct tree{\n\tint ls,rs;\n\tnode o;\n};\nint rt[N],tot;\nstruct Seg{\n\ttree tr[N*20];\n\t#define mid ((l+r)>>1)\n\tinline void pushup(int k,int l,int r){\n\t\tnode x=tr[k].ls?tr[tr[k].ls].o:emp(mid-l+1);\n\t\tnode y=tr[k].rs?tr[tr[k].rs].o:emp(r-mid);\n\t\ttr[k].o=x+y;\n\t\treturn;\n\t}\n\tinline int copy(int x){\n\t\ttr[++tot]=tr[x];\n\t\treturn tot;\n\t}\n\tvoid upd(int &k,int l,int r,int p){\n\t\tk=copy(k);\n\t\tif(l==r){\n\t\t\ttr[k].o=(node){0,0,1,0};\n\t\t\treturn;\n\t\t}\n\t\tif(p<=mid) upd(tr[k].ls,l,mid,p);\n\t\telse upd(tr[k].rs,mid+1,r,p);\n\t\tpushup(k,l,r);\n\t}\n\tint merge(int x,int y,int l,int r){\n\t\tif(!x||!y) return x|y;\n\t\tint now=copy(x);\n\t\ttr[now].ls=merge(tr[now].ls,tr[y].ls,l,mid);\n\t\ttr[now].rs=merge(tr[now].rs,tr[y].rs,mid+1,r);\n\t\tpushup(now,l,r);\n\t\treturn now;\n\t}\n\tint findsuf(int k,int l,int r,int p){\n\t\tif(!k) return 0;\n\t\tif(l==r) return (l>=p)?l:0;\n\t\tif(p>mid) return findsuf(tr[k].rs,mid+1,r,p);\n\t\telse{\n\t\t\tint res=findsuf(tr[k].ls,l,mid,p);\n\t\t\tif(res) return res;\n\t\t\telse return findsuf(tr[k].rs,mid+1,r,p);\n\t\t}\n\t}\n\tint findpre(int k,int l,int r,int p){\n\t\tif(!k) return 0;\n\t\tif(l==r) return (l<=p)?l:0;\n\t\tif(p<=mid) return findpre(tr[k].ls,l,mid,p);\n\t\telse{\n\t\t\tint res=findpre(tr[k].rs,mid+1,r,p);\n\t\t\tif(res) return res;\n\t\t\telse return findpre(tr[k].ls,l,mid,p);\n\t\t}\n\t}\n\tnode query(int k,int l,int r,int x,int y){\n\t\tif(!k) return emp(min(r,y)-max(l,x)+1);\n\t\tif(x<=l&&r<=y) return tr[k].o;\n\t\tif(y<=mid) return query(tr[k].ls,l,mid,x,y);\n\t\telse if(x>mid) return query(tr[k].rs,mid+1,r,x,y);\n\t\telse return query(tr[k].ls,l,mid,x,y)+query(tr[k].rs,mid+1,r,x,y);\n\t}\n}seg;\n\nvoid dfs(int x,int fa){\n\tpl[x][0]=fa;\n\tfor(int k=1;pl[x][k-1];k++) pl[x][k]=pl[pl[x][k-1]][k-1];\n\tfor(int to:v[x]){\n\t\tdfs(to,x);\n\t\tmn[x]=min(mn[x],mn[to]);\n\t\tmx[x]=max(mx[x],mx[to]);\n\t\trt[x]=seg.merge(rt[x],rt[to],1,n);\n\t}\n\tif(tag[x]){\n\t\tseg.upd(rt[x],1,n,tag[x]);\n\t}\n\treturn;\n}\n\nstruct SAM{\n\tint tr[N][C],fa[N],len[N],tot,lst;\n\tSAM(){\n\t\ttot=lst=1;\n\t}\n\tinline void ins(int c,int id){\n\t\tc-='0';\n\t\tint cur=++tot,p=lst;lst=tot;\n\t\tlen[cur]=len[p]+1;\n\t\tpos[id]=cur;\n\t\ttag[cur]=id;mn[cur]=mx[cur]=id;\n\t\tfor(;p&&!tr[p][c];p=fa[p]) tr[p][c]=cur;\n\t\tif(!p) fa[cur]=1;\n\t\telse{\n\t\t\tint q=tr[p][c];\n\t\t\tif(len[q]==len[p]+1) fa[cur]=q;\n\t\t\telse{\n\t\t\t\tint nq=++tot;\n\t\t\t\tmn[nq]=n+1;mx[nq]=0;\n\t\t\t\tlen[nq]=len[p]+1;fa[nq]=fa[q];\n\t\t\t\tfor(int i=0;i<C;i++) tr[nq][i]=tr[q][i];\n\t\t\t\tfa[cur]=fa[q]=nq;\n\t\t\t\tfor(;p&&tr[p][c]==q;p=fa[p]) tr[p][c]=nq;\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\tvoid build(){\n\t\tfor(int i=2;i<=tot;i++) v[fa[i]].push_back(i);\n\t\tdfs(1,0);\n\t}\n\tint find(int l,int r){\n\t\tint x=pos[l],L=r-l+1;\n\t\tfor(int k=18;k>=0;k--){\n\t\t\tif(len[pl[x][k]]>=L) x=pl[x][k];\n\t\t}\n\t\treturn x;\n\t}\n}sam;\n\ninline ll Sum(ll x,ll y){\n\tif(x>y) return 0;\n\telse return (x+y)*(y-x+1)/2;\n}\nll work(int l,int r){\n\tint x=sam.find(l,r),len=r-l+1;\n\tint a=mn[x]+len-1,b=mx[x];\n\tll ans=Sum(1,n-a-1)+Sum(1,b-2);\n\tint w=(b-1)-(a+1)+1;\n\tif(w>=1) ans-=calc(w);\n\ta=min(a,b);\n\tint pre=seg.findpre(rt[x],1,n,a),suf=seg.findsuf(rt[x],1,n,a+1);\n\tint u=seg.findpre(rt[x],1,n,b-len+1);\n\tif(u>=a){\n\t\tans+=1ll*(a-1)*(n-b);\n\t\treturn ans;\n\t}\n\tif(suf){\n\t\tans+=1ll*(a-pre)*(n-(suf+len-1));\n\t}\n\tif(u) ans+=1ll*(u-1)*(n-b);\n\t//calc: [u+1,pre]\n\tu=max(u,1);\n\tif(u+1<=pre){\n\t\tans+=Sum(n-(pre+len-1),n-(u+1+len-1));\t\t\n\t\tnode o=seg.query(rt[x],1,n,u+1,pre);\n\t\tans-=o.sum;\n\t}\n\treturn ans;\n}\n\nchar s[N];\nsigned main(){\n#ifndef ONLINE_JUDGE\n\tfreopen(\"a.in\",\"r\",stdin);\n\tfreopen(\"a.out\",\"w\",stdout);\n#endif\n\tn=read();m=read();\n\tscanf(\" %s\",s+1);\n\tfor(int i=n;i>=1;i--) sam.ins(s[i],i);\n\tsam.build();\n\tfor(int i=1;i<=m;i++){\n\t\tint l=read(),r=read();\n\t\tprintf(\"%lld\\n\",work(l,r));\n\t}\n\treturn 0;\n}\n/*\n*/\n```\n\n\n\n\n\n\n\n\n\n\n",
        "postTime": 1647657717,
        "uid": 449265,
        "name": "wind_whisper",
        "ccfLevel": 10,
        "title": "P4384 [\u516b\u7701\u8054\u8003 2018] \u5236\u80e1\u7a9c"
    },
    {
        "content": "## \u9898\u610f\n\n\u7ed9\u957f\u5ea6\u4e3a$n$\u7684\u5b57\u7b26\u4e32\u4ee5\u53ca$q$\u7ec4\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u5c06\u5b57\u7b26\u4e32**\u5207\u4e24\u5200**\u53d8\u6210\u4e09\u4e2a**\u975e\u7a7a\u4e32**\u4e2d\u51fa\u73b0$s_{l,r}$\u7684\u65b9\u6848\u3002\n\n## \u9898\u89e3\n\n``SAM+\u500d\u589e+fhq-treap(\u6216\u7ebf\u6bb5\u6811\u5408\u5e76)``\n\n\u5927\u4f53\u601d\u8def\u4e0e\u5176\u4ed6\u9898\u89e3\u4e00\u81f4\uff0c\u53ea\u4e0d\u8fc7\u6211\u662f\u7528``fhq-treap``\u5b9e\u73b0\u7684\uff0c\u63d0\u4ea4\u7ed3\u679c\u5982\u4e0b\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/0lpfqekn.png)\n\n\u53d1\u73b0\u8dd1\u7684\u8fd8\u662f\u5f88\u5feb\u7684\uff0c\u800c\u4e14\u4ee3\u7801\u91cf\u8ddf\u7ebf\u6bb5\u6811\u5408\u5e76\u5dee\u4e0d\u592a\u591a\uff08\u5427\uff09\uff0c\u590d\u6742\u5ea6\u4e00\u6837\uff0c\u4f46\u662f\u5185\u5b58\u5f88\u5c0f\u3002\n\n\u8fd9\u9053\u9898\u601d\u8def\u6bd4\u8f83\u7b80\u5355\u3002\u770b\u5230\u8ddf\u5b50\u4e32\u76f8\u5173\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\u7528``SAM``\u89e3\u51b3\u95ee\u9898\u3002\u8003\u8651\u5c06\u64cd\u4f5c\u79bb\u7ebf\uff0c\u6211\u4eec\u628a\u5bf9\u5e94\u7684\u64cd\u4f5c\u653e\u5230``Parent\u6811``\u4e0a\u5bf9\u5e94\u7684\u4f4d\u7f6e\uff0c\u8fd9\u4e00\u6b65\u4f7f\u7528\u500d\u589e\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a``Parent\u6811``\u4e0a\u7684\u7ed3\u70b9\u4ee3\u8868\u4e86$endpos$\uff0c\u5373\u539f\u4e32\u4e2d\u6240\u6709\u5b50\u4e32$=s_{l,r}$\u6700\u540e\u4e00\u4f4d\u4e0b\u6807\u7684\u96c6\u5408\uff08SAM\u7684\u6982\u5ff5\uff09\u3002\u6b63\u5411\u7edf\u8ba1\u7b54\u6848\u5f88\u56f0\u96be\uff0c\u8003\u8651\u53cd\u5411\u7edf\u8ba1\u975e\u6cd5\u89e3\u3002\u8bb0\u4e00\u5200\u5207\u5728\u7b2c$x$\u4e2a\u5b57\u7b26\u540e\u9762\uff0c\u8003\u8651\u5148\u5207\u7b2c\u4e00\u5200\uff0c\u663e\u7136\u7b2c\u4e00\u5200\u5207\u7684\u4f4d\u7f6e$i$\u8981\u5c0f\u4e8e$endpos$\u4e2d\u6700\u5c0f\u7684\u6570$op$\uff08\u5426\u5219\u539f\u4e32\u4e2d\u7b2c\u4e00\u4e2a\u5b50\u4e32\u5b8c\u6574\u4f7f\u5f97\u7b54\u6848\u5408\u6cd5\uff09\u3002\u786e\u5b9a\u4e0b\u6765\u7b2c\u4e00\u5200\u7684\u4f4d\u7f6e\uff0c\u90a3\u4e48\u8003\u8651\u7b2c\u4e8c\u5200\u7684\u4f4d\u7f6e\uff0c\u8fd9\u4e2a\u7b2c\u4e8c\u5200$j$\u8d21\u732e\u5230\u975e\u6cd5\u7b54\u6848\uff0c\u5f53\u4e14\u4ec5\u5f53$\\forall p\\in endpos,p>i+\\mid s_{l,r}\\mid-1$\uff0c\u90fd\u6ee1\u8db3$p-\\mid s_{l,r}\\mid+1\\leqslant j<p$\uff0c$p$\u8fd8\u6709\u6761\u4ef6\u662f\u7531\u4e8e$i$\u53ef\u80fd\u4e5f\u5207\u5230\u4e86\u90a3\u4e9b\u4e32\u3002\u628a\u4e0a\u9762\u7684\u5f0f\u5b50\u53d8\u53d8\u5f62\uff0c\u76f8\u5f53\u4e8e\u6c42\n\n$$\\max(p-\\mid s_{l,r}\\mid+1) \\leqslant j<\\min p,p\\in endpos\\&\\&p>i+\\mid s_{l,r}\\mid-1$$\n\n\u7684\u89e3$j$\u7684\u65b9\u6848\u6570\uff0c\u4e5f\u5c31\u662f$\\min p-\\max(p-\\mid s_{l,r}\\mid+1)=\\min p-\\max p+\\mid s_{l,r}\\mid-1$\u3002\u4e14\u5bf9\u4e8e\u6bcf\u4e00\u4e2a$i$\uff0c\u90fd\u8981\u6c42\u89e3\u3002\u6ce8\u610f\u8fd9\u4e2a\u5f0f\u5b50\u7b97\u8fdb\u8d21\u732e\u5f53\u4e14\u4ec5\u5f53$\\geqslant 0$\uff0c\u5373\u5b58\u5728$i>q$\uff0c\u6ee1\u8db3$\\max p-\\min p\\leqslant\\mid s_{l,r}\\mid-1$\uff1b\u8fd8\u8981\u8ba8\u8bba\u662f\u5426\u5b58\u5728$p$\uff0c\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u4efb\u610f\u4f4d\u7f6e\u90fd\u662f\u975e\u6cd5\u7684\uff0c\u8d21\u732e\u4e3a\u7b49\u5dee\u6570\u5217\u6c42\u548c\u3002\n\n\u5bf9\u4e8e\u6240\u6709\u7684$i$\uff0c\u6211\u4eec\u8981\u8ba1\u7b97$\\min p-\\max p,p>i+C$\uff0c\u5269\u4f59\u7684\u5e38\u6570\u90e8\u5206\u7684\u53ea\u9700\u8981\u770b\u80fd\u5bf9\u975e\u6cd5\u89e3\u8d21\u732e\u7684$i$\u6709\u591a\u5c11\u518d\u4e58\u8fdb\u53bb\u5c31\u884c\u4e86\u3002$C$\u53ef\u4ee5\u4e0b\u6807\u5e73\u79fb\u89e3\u51b3\u6389\uff0c\u90a3\u4e48\u5b9e\u9645\u4e0a\u7ef4\u62a4\u7684\u5c31\u662f\u4e0b\u6807$p$\u7684\u5dee\u5206\u3002\u7ef4\u62a4\u6bcf\u4e00\u4e2a$p$\u5f80\u524d\u7684\u8d21\u732e\uff0c\u533a\u95f4\u4e00\u5b9a\u662f$t\\in(pre_p,p]$\uff0c\u8fd9\u4e00\u6bb5\u7684\u6743\u503c$w_t=p$\u3002\u90a3\u4e48\u7b54\u6848\u5c31\u53d8\u6210\u4e86$\\sum\\limits_{q<i\\leqslant\\max p}w_i-\\max p$\u3002\u8fd9\u91cc\u7528\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u53ef\u4ee5\u89e3\u51b3\uff0c\u8fd9\u4e2a$q$\u4e5f\u662f\u53ef\u4ee5\u4e8c\u5206\u627e\u5230\u7684\u3002\u5bf9\u4e8e\u6bcf\u4e2a``Parent\u6811``\u7ed3\u70b9\u5bf9\u5e94\u7684\u7ebf\u6bb5\u6811\uff0c\u9700\u8981\u901a\u8fc7\u5b50\u6811\u7684\u7ebf\u6bb5\u6811\u5408\u5e76\u5f97\u6765\uff0c\u4f46\u662fwtcl\uff0c\u4e0d\u4f1a\u7ebf\u6bb5\u6811\u5408\u5e76\u53ea\u60f3\u5230\u4e86``fhq-treap``\u542f\u53d1\u5f0f\u5408\u5e76\u3002\n\n\u6700\u540e\u603b\u6570-\u975e\u6cd5\u6570\u5c31\u662f\u7b54\u6848\u3002\n\n\u590d\u6742\u5ea6$\\mathcal O((n+q)\\log n)$\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\n#define rep(i, a, b) for (int i = a, i##end = b; i <= i##end; ++i)\n#define per(i, a, b) for (int i = a, i##end = b; i >= i##end; --i)\n#define rep0(i, a) for (int i = 0, i##end = a; i < i##end; ++i)\n#define per0(i, a) for (int i = a-1; ~i; --i)\n#define chkmin(a, b) a = std::min(a, b)\n#define chkmax(a, b) a = std::max(a, b)\n#define x first\n#define y second\n\ntypedef long long ll;\n\ninline int read() {\n\tint w = 0, f = 1; char c;\n\twhile (!isdigit(c = getchar())) c == '-' && (f = -1);\n\twhile (isdigit(c)) w = w*10+(c^48), c = getchar();\n\treturn w * f;\n}\n\nconst int maxn = 111111;\nconst int inf = 1<<30;\n\nnamespace FHQ {\n#define lc FHQ::ch[o][0]\n#define rc FHQ::ch[o][1]\n\tint ch[maxn][2], r[maxn], sz[maxn], tot = 0;\n\tll sum[maxn];\n\tstd::pair<int, int> key[maxn], area[maxn]; // store the line (]\n\tint newnode(std::pair<int, int> x) {\n\t\tr[++tot] = rand(), key[tot] = area[tot] = x, sum[tot] = 1ll*x.y*(x.y-x.x), sz[tot] = 1;\n\t\treturn tot;\n\t}\n\tvoid pushup(int o) {\n\t\tsz[o] = sz[lc] + sz[rc] + 1;\n\t\tsum[o] = sum[lc] + sum[rc] + 1ll*key[o].y*(key[o].y-key[o].x);\n\t\tarea[o] = std::make_pair(std::min(lc ? area[lc].x : inf, key[o].x), std::max(key[o].y, rc ? area[rc].y : -inf));\n\t}\n\tvoid split(int o, int x, int &l, int &r) {\n\t\tif (!o) { l = r = 0; return; }\n\t\tif (key[o].y < x) l = o, split(rc, x, ch[l][1], r), pushup(l);\n\t\telse r = o, split(lc, x, l, ch[r][0]), pushup(r);\n\t}\n\tint merge(int x, int y) {\n\t\tif (!x || !y) return x | y;\n\t\treturn r[x] > r[y] ? (ch[x][1] = merge(ch[x][1], y), pushup(x), x) : (ch[y][0] = merge(x, ch[y][0]), pushup(y), y);\n\t}\n}\n\nint rt[maxn*2], pos[maxn];\n\nnamespace SAM {\n\tint ch[maxn*2][10], fa[maxn*2], len[maxn*2], tot;\n\tint last;\n\tvoid init() { fa[last = tot = 0] = -1; }\n\tvoid extend(int x) {\n\t\tint p = last, cur = ++tot;\n\t\tpos[len[cur] = len[last]+1] = cur;\n\t\trt[cur] = FHQ::newnode(std::make_pair(0, len[cur]));\n\t\tfor (; ~p && !ch[p][x]; p = fa[p]) ch[p][x] = cur;\n\t\tif (p == -1) fa[cur] = 0;\n\t\telse {\n\t\t\tint q = ch[p][x];\n\t\t\tif (len[p]+1 == len[q]) fa[cur] = q;\n\t\t\telse {\n\t\t\t\tint cpy = ++tot;\n\t\t\t\tmemcpy(&ch[cpy], &ch[q], sizeof ch[q]);\n\t\t\t\tfa[cpy] = fa[q]; len[cpy] = len[p]+1;\n\t\t\t\tfa[q] = fa[cur] = cpy;\n\t\t\t\tfor (; ~p && ch[p][x] == q; p = fa[p]) ch[p][x] = cpy;\n\t\t\t}\n\t\t}\n\t\tlast = cur;\n\t}\n}\n\nint n, q, len[maxn*3];\nll ans[maxn*3];\nchar s[maxn];\n\nint par[18][maxn*2];\nstd::vector<int> G[maxn*2], qry[maxn*2];\nvoid dfs1(int u) {\n\trep(i, 1, 17) par[i][u] = par[i-1][par[i-1][u]];\n\trep0(i, G[u].size())\n\t\tdfs1(G[u][i]);\n}\n\nint get(int o, int d) {\n\tif (!o) return 0;\n\twhile (FHQ::ch[o][d]) o = FHQ::ch[o][d];\n\treturn o;\n}\n#define getop(o) get(o, 0)\n#define geted(o) get(o, 1)\n\nvoid fix(int o, std::pair<int, int> x) {\n\tif (!FHQ::ch[o][0]) FHQ::key[o] = x;\n\telse fix(FHQ::ch[o][0], x);\n\tFHQ::pushup(o);\n}\n\nvoid merge(int &x, int y) { // x<-y\n\tif (!y) return;\n\tmerge(x, FHQ::ch[y][0]), merge(x, FHQ::ch[y][1]);\n\tFHQ::ch[y][0] = FHQ::ch[y][1] = 0;\n\tint l, r; FHQ::split(x, FHQ::key[y].y, l, r);\n\tint ed = geted(l), op = getop(r);\n\tif (ed) FHQ::key[y].x = FHQ::key[ed].y;\n\tif (op) fix(r, std::make_pair(FHQ::key[y].y, FHQ::key[op].y));\n\tFHQ::pushup(y); x = FHQ::merge(l, FHQ::merge(y, r));\n}\n\nll query(int o, int ql, int qr) { // \u7c7b\u4f3c\u4e8e\u7ebf\u6bb5\u6811\uff0c\u5728\u5e73\u8861\u6811\u4e0a\u7684\u67e5\u8be2(,]\n\tif (ql >= qr) return 0;\n\tif (ql <= FHQ::area[o].x && FHQ::area[o].y <= qr) return FHQ::sum[o];\n\tll ans = 0; int l = FHQ::key[o].x, r = FHQ::key[o].y;\n\tif (l < qr && ql < r) ans = 1ll * (std::min(qr, r) - std::max(ql, l)) * r;\n\tif (lc) ans += query(lc, ql, std::min(qr, l));\n\tif (rc) ans += query(rc, std::max(ql, r), qr);\n\treturn ans;\n}\n\nvoid dfs2(int u) {\n\trep0(i, G[u].size()) {\n\t\tint v = G[u][i];\n\t\tdfs2(v);\n\t\tif (FHQ::sz[rt[u]] < FHQ::sz[rt[v]]) std::swap(rt[u], rt[v]);\n\t\tmerge(rt[u], rt[v]);\n\t}\n\t// deal with the qrys\n\tint op = FHQ::key[getop(rt[u])].y, ed = FHQ::area[rt[u]].y;\n\trep0(i, qry[u].size()) {\n\t\tint id = qry[u][i], ql = len[id], qr = op+len[id]-1, x, y;\n\t\tFHQ::split(rt[u], ed-len[id]+1, x, y);\n\t\tint xed = FHQ::area[x].y, l = std::max(ql, xed), r = std::min(ed, qr);\n\t\tans[id] = 1ll*(n-1)*(n-2)/2-1ll*(len[id]-1-ed)*(r>l?r-l:0)-query(y,l,r)-(qr>r?1ll*((n+len[id])*2-r-qr-3)*(qr-r)/2:0);\n\t\trt[u] = FHQ::merge(x, y);\n\t}\n}\n\nint main() {\n\tsrand(time(0));\n\tn = read(), q = read();\n\tscanf(\"%s\", s);\n\tSAM::init();\n\trep0(i, n) SAM::extend(s[i]-'0');\n\trep(i, 1, SAM::tot) G[par[0][i] = SAM::fa[i]].push_back(i);\n\tdfs1(0);\n\trep(i, 1, q) {\n\t\t// getpos\n\t\tint l = read(), r = read(), p = pos[r];\n\t\tlen[i] = r-l+1;\n\t\tper0(x, 17)\n\t\t\tif (len[i] <= SAM::len[par[x][p]]) p = par[x][p];\n\t\tqry[p].push_back(i);\n\t}\n\tdfs2(0);\n\trep(i, 1, q) printf(\"%lld\\n\", ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1592184522,
        "uid": 7706,
        "name": "AC_Evil",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4384 \u3010[\u516b\u7701\u8054\u80032018]\u5236\u80e1\u7a9c\u3011"
    },
    {
        "content": "\u5199\u8d77\u6765\u590d\u6742\uff0c\u4f46\u662f\u8bf4\u8d77\u6765\u5e76\u4e0d\u590d\u6742\u7684\u4e00\u9053\u9898\u3002\u3002\u3002\n\n\u9996\u5148\u8fd9\u9898\u5982\u679c\u76f4\u63a5\u8003\u8651\u6ee1\u8db3\u6761\u4ef6\u7684\u4f1a\u53d1\u73b0\u6781\u4e3a\u6bd2\u7624\u3002\n\n\u53cd\u8fc7\u6765\u8003\u8651\u7528\u603b\u65b9\u6848-\u4e0d\u6ee1\u8db3\u6761\u4ef6\u7684\u5c31\u4f1a\u53cb\u597d\u7684\u591a\u3002\n\n\u8003\u8651\u5982\u4f55\u6c42\u4e0d\u6ee1\u8db3\u6761\u4ef6\u7684\u3002\n\n\u53d1\u73b0\u5b9e\u9645\u4e0a\u672c\u8d28\u5c31\u662f\u7528\u4e24\u6761\u7ebf\u7a7f\u8fc7\u6240\u6709\u7684\u4e32$s_{l,r}$\n\n\u8bbe\u73b0\u5728\u6709$m$\u4e2a\u4e32\uff0c\u7b2c$i$\u4e32\u7684\u5de6\u53f3\u7aef\u70b9\u4e3a$l_i,r_i$\n\n\u90a3\u4e48\u5728\u4e0d\u8003\u8651\u79bb$r_1$\u6700\u8fd1\u7684$l_i$\u65f6\uff0c\u7b54\u6848\u4e3a$\\sum (r_{i+1}-r_i)*(r_{i+1}-l_m)$\n\n\u53d1\u73b0\u8fd9\u73a9\u610f\u4e0d\u597d\u7ef4\u62a4\n\n\u62c6\u5f00\u53d1\u73b0\u5bb9\u6613\u7ef4\u62a4\n\n$\\sum (r_{i+1}-r_i)*r_{i+1}$\n\n$\\sum (r_{i+1}-r_i)*l_m$\n\n\u9650\u5236\u6761\u4ef6\u5206\u522b\u4e3a\n\n$r_{i+1} <= r_1$\n\n$r_{i+1} >= l_m$\n\n\u90a3\u4e48\u8fd9\u4e00\u6bb5\u5373\u53ef\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e86\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u79bb$r_1$\u6700\u8fd1\u7684$l_i$\u8fd9\u4e2d\u95f4\u4ea7\u751f\u7684\u8d21\u732e\u3002\n\n\u4f1a\u51fa\u73b0\u4e24\u79cd\u60c5\u51b5\uff0c\n\n\u7b2c\u4e00\u79cd$l_i <= r_1$\uff0c\u8fd9\u79cd\u60c5\u51b5\u968f\u4fbf\u5728$[l_i,r_1]$\u53d6\u4e00\u70b9\u4fbf\u6ee1\u8db3\u6761\u4ef6\n\n\u7b2c\u4e8c\u79cd$r_1 < l_n$,\u8fd9\u79cd\u60c5\u51b5\u65b9\u6848\u4fbf\u662f\u4e24\u6bb5\u4ea4\u7684\u4e58\u79ef\n\n\u60f3\u6e05\u695a\u63a5\u4e0b\u6765\u5c31\u5f88\u597d\u5199\u4e86\uff0c\u6c42\u51faSAM,\u7136\u540e\u500d\u589e\u8c03\u5230\u5bf9\u5e94\u8282\u70b9\u3002\n\n\u5bf9\u5e94\u8282\u70b9\u4e0a\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u5373\u53ef\n\n\u53e6\u5916\u6ce8\u610f\u7ec6\u8282\u5c31\u662f\u4e86\uff0c\u8be6\u89c1\u4ee3\u7801QAQ\n\n\nc++\u4ee3\u7801\u5982\u4e0b\uff1a\n```\n#include<bits/stdc++.h>\n#define rep(i,x,y) for(register int i = x;i <= y; ++ i)\n#define repd(i,x,y) for(register int i = x;i >= y; -- i)\nusing namespace std; \ntypedef long long ll;\ntemplate<typename T>inline bool chkmin(T&x,T y) { return x > y ? x = y, 1 : 0; }\ntemplate<typename T>inline bool chkmax(T&x,T y) { return x < y ? x = y, 1 : 0; }\ntemplate<typename T>inline void read(T&x)\n{\n\tchar c;int sign = 1;x = 0;\n\tdo { c = getchar(); if(c == '-') sign = -1; }while(!isdigit(c));\n\tdo { x = x * 10 + c - '0'; c = getchar(); }while(isdigit(c));\n\tx *= sign;\n}\nconst int N = 2e5 + 50;\nstruct SAM\n{\n\tint ch[10],pre,len,pos,sz;\n}t[N];\nint sz = 1,root = 1,lst = 1;\n\ninline int insert(int x,int i)\n{\n\tint p = lst,np = ++ sz;\t\n\tt[np].len = t[p].len + 1; t[np].sz = 1; t[np].pos = i;\n\tfor(;p && !t[p].ch[x];p = t[p].pre) t[p].ch[x] = np;\n\tif(!p) t[np].pre = root;\n\telse\n\t{\n\t\tint q = t[p].ch[x];\n\t\tif(t[q].len == t[p].len + 1) t[np].pre = q;\n\t\telse\n\t\t{\n\t\t\tint nq = ++ sz;\n\t\t\tt[nq] = t[q];\n\t\t\tt[nq].pos = 0; t[nq].sz = 0;\n\t\t\tt[nq].len = t[p].len + 1;\n\t\t\tt[q].pre = t[np].pre = nq;\n\t\t\tfor(;p&&t[p].ch[x] == q;p=t[p].pre) t[p].ch[x] = nq;\n\t\t}\n\t}\n\n\tlst = np;\n\treturn np;\n}\n\nconst int M = 2e7 + 60;\nint rt[N],Rt[50],ls[M],rs[M],mx[M],mi[M],cnt;\nll val1[M],val2[M]; \n\nvoid ins(int&x,int l,int r,int pos,int nxt)\n{\n\tint y = x; x = ++ cnt;\n\tls[x] = ls[y];rs[x] = rs[y];\n\tif(l == r)\n\t{\n\t\tmi[x] = mx[x] = nxt;\n\t\tval1[x] = 1ll * (nxt - pos) * nxt;\n\t\tval2[x] = nxt - pos;\n\t\treturn ;\n\t}\n\tint mid = l + r >> 1;\n\tif(pos <= mid) ins(ls[x],l,mid,pos,nxt);\n\telse ins(rs[x],mid+1,r,pos,nxt);\n\tmx[x] = max(mx[ls[x]],mx[rs[x]]); \n\tmi[x] = min(mi[ls[x]],mi[rs[x]]);\n\tval1[x] = val1[ls[x]] + val1[rs[x]];\n\tval2[x] = val2[ls[x]] + val2[rs[x]];\n}\n\nint n;\n\nint Tak[50],Top;\nset<int> s[50];\nset<int> :: iterator it,it1;\n\ninline void add(int x,int w)\n{\n\tif(!w) return ;\n\n\tit1 = s[x].lower_bound(w);\t\n\n\tif(s[x].empty())\n\t{\n\t\tins(Rt[x],1,n,w,1e7);\t\n\t}\n\telse if(it1 == s[x].end())\n\t{\n\t\t-- it1;\n\t\tins(Rt[x],1,n,w,1e7);\n\t\tins(Rt[x],1,n,*it1,w);\n\t}\n\telse if(it1 == s[x].begin())\n\t{\n\t\tins(Rt[x],1,n,w,*it1);\n\t}\n\telse\n\t{\n\t\tins(Rt[x],1,n,w,*it1);\n\t\t-- it1;\n\t\tins(Rt[x],1,n,*it1,w);\n\t}\n\n\ts[x].insert(w);\n}\n\nint tot = 1;\ninline void merge(int x,int y)\n{\n\tit = s[y].begin();\t\n\twhile(it != s[y].end())\n\t\tadd(x,*(it++));\n\ts[y].clear();\n\tTak[++Top] = y;\n\tRt[y] = 0;\n}\n\nvector<int> g[N];\nvoid dfs1(int x) { for(auto&i:g[x]) { dfs1(i); t[x].sz += t[i].sz; } }\n\nint L[N],R[N];\nvoid dfs(int x,int z)\n{\n\tint mx = -1,hson;\n\tfor(auto&i:g[x])\n\t\tif(chkmax(mx,t[i].sz))\n\t\t\thson = i;\n\t\n\tif(~mx)\n\t{\n\t\tdfs(hson,z);\n\t\tfor(auto&i:g[x]) if(i != hson)\n\t\t{\n\t\t\tint q = Top ? Tak[Top--] : ++ tot;\n\t\t\tdfs(i,q);\n\t\t\tmerge(z,q);\n\t\t}\n\t}\n\n\tadd(z,t[x].pos);\t\n\trt[x] = Rt[z];\n\n\tit = s[z].begin(); L[x] = *it;\n\tit = s[z].end(); if(it!=s[z].begin()) { -- it; R[x] = *it;}\n}\n\nll find(int x,int l,int r,int l1,int l2,int len)\n{\n\t//printf(\"%d %d %d %d %d\\n\",l,r,mx[x],l1,l2);\n\tif(mi[x] - len > l1 || mx[x] < l2 - len) return 0;\n\tif(mx[x] - len <= l1 && mi[x] >= l2 - len) return val1[x] - val2[x] * (l2 - len);\n\tint mid = l + r >> 1;\n\tif(l1 >= mi[rs[x]] - len) return find(ls[x],l,mid,l1,l2,len) + find(rs[x],mid+1,r,l1,l2,len);\n\telse return find(ls[x],l,mid,l1,l2,len);\n}\n\nint fnxt(int x,int l,int r,int pos)\n{\n\tif(l == r) return mi[x];\n\tint mid = l + r >> 1;\n\tif(mx[ls[x]] > pos) return fnxt(ls[x],l,mid,pos);\n\telse return fnxt(rs[x],mid+1,r,pos);\n}\n\nint fqmxl(int x,int l,int r,int pos,int len)\n{\n\tif(mx[x] - len + 1 <= pos) return mx[x] - len + 1;\n\tif(!x) return n + 1;\n\tint mid = l + r >> 1;\n\tif(mi[rs[x]] - len + 1 <= pos) return fqmxl(rs[x],l,mid,pos,len);\n\telse return fqmxl(ls[x],mid+1,r,pos,len);\n}\n\ninline ll get(int r,int l,int len,int now)\n{\n\tl = l - len + 1;\t\n\tif(l >= r)\n\t{\n\t\tint qmxl = r - len + 1;\n\t\tchkmax(qmxl , fqmxl(rt[now],1,n,r,len));\n\t\tint z = fnxt(rt[now],1,n,qmxl + len - 1);\n\t\tif(z <= l) return 0;\n\t\treturn 1ll * (r - qmxl) * (z - l);\n\t}\n\tint k = l - (r - len + 1);\n\tlen = r - l + 1;\n\treturn 1ll * (n - len - k) * (len-1) + (1ll * (len - 2) * (len-1)/2);\n}\n\nint q,pos[N];\nchar S[N];\n\nint p[N][21];\n\nint main()\n{\n\t//freopen(\"cutting20.in\",\"r\",stdin);\n\t//freopen(\"hnta.out\",\"w\",stdout);\n\tmi[0] = 1e7;\n\t\n\tread(n); read(q);\n\tscanf(\"%s\",S + 1);\n\n\trep(i,1,n) pos[i] = insert(S[i]-'0',i);\n\n\trep(i,1,sz) g[t[i].pre].push_back(i);\n\n\tdfs1(root); dfs(root,1);\n\n\trep(i,1,sz) p[i][0] = t[i].pre;\n\trep(j,1,20) rep(i,1,sz) p[i][j] = p[p[i][j-1]][j-1];\t\n\n\tll ans = 1ll * (n - 1) * (n - 2) / 2;\n\t//cout << ans << endl;\n\twhile(q--)\n\t{\n\t\tint l,r; read(l); read(r);\n\t\tif(l > n || l < 1 || r > n || r < 1 || r < l) \n\t\t{\n\t\t\tprintf(\"%lld\\n\",ans);\n\t\t\tcontinue;\n\t\t}\n\t\tint now = pos[r],len = r - l + 1; \n\t\trepd(i,20,0) if(t[p[now][i]].len >= len) now = p[now][i];\n\t\tprintf(\"%lld\\n\",ans - find(rt[now],1,n,L[now],R[now],len-1) - get(L[now],R[now],len,now));\n\t}\n\n\treturn 0;\n}\n  ```",
        "postTime": 1554335133,
        "uid": 23087,
        "name": "Tgotp",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4384 \u3010[\u516b\u7701\u8054\u80032018]\u5236\u80e1\u7a9c\u3011"
    },
    {
        "content": "\u672c\u6587\u8d77\u7b14\u4e8e```2021.11.23```\u3002\n\n[P4384 [\u516b\u7701\u8054\u80032018]\u5236\u80e1\u7a9c](https://www.luogu.com.cn/problem/P4384)\n\n\u77e5\u8bc6\u70b9\uff1a\u540e\u7f00\u6570\u7ec4 + \u5bb9\u65a5 + \u7ebf\u6bb5\u6811\u5408\u5e76\u3002\n\n\u8bfb\u5b8c\u9898\u57fa\u672c\u53ef\u4ee5\u786e\u8ba4\uff0c\u8fd9\u9898\u8ddf $\\text{AC}$ \u81ea\u52a8\u673a\u6ca1\u6709\u5173\u7cfb\uff0c\u90a3\u5c31\u5f80\u540e\u7f00\u5bb6\u65cf\u65b9\u9762\u8003\u8651\uff0c\u6700\u7b80\u5355\u7684\u5c31\u662f\u540e\u7f00\u6570\u7ec4\u3002\n\n\u8be2\u95ee\u95ee\u7684\u662f\u5408\u6cd5\u65b9\u6848\u6570\uff0c\u4e14\u76f4\u63a5\u8003\u8651\u8be2\u95ee\u7684\u7b54\u6848\u6709\u4e9b\u96be\uff0c\u8fd9\u65f6\u5019\u6709\u4e24\u79cd\u53ef\u80fd\u7684\u65b9\u5411\uff0c\u4e00\u79cd\u662f\u6b63\u96be\u5219\u53cd\uff0c\u4e00\u79cd\u662f\u5bb9\u65a5\uff0c\u89e3\u9898\u65f6\u6211\u7528\u7684\u662f\u5bb9\u65a5\uff0c\u522b\u7684\u9898\u89e3\u7528\u7684\u597d\u50cf\u90fd\u662f\u6b63\u96be\u5219\u53cd\u3002\n\n\u8bbe\u6027\u8d28 $A$ \u8868\u793a $s_{1,i}$ \u5305\u542b $s_{l,r}$\uff0c\u6027\u8d28 $B$ \u8868\u793a $s_{i+1,j-1}$ \u5305\u542b $s_{l,r}$\uff0c\u6027\u8d28 $C$ \u8868\u793a $s_{j,n}$ \u5305\u542b $s_{l,r}$\uff0c$P(T)$ \u8868\u793a\u6709\u6027\u8d28 $T$ \u7684\u5408\u6cd5\u65b9\u6848\u6570\uff0c\u5219\u7b54\u6848\u4e3a\uff1a\n$$\nans=P(A\\cup B\\cup C) = P(A)+P(B)+P(C)-P(AB)-P(BC)-P(AC)+P(ABC)\n$$\n \u5efa\u5b8c\u540e\u7f00\u6570\u7ec4 $sa$ \u53ca $height$ \u6570\u7ec4\u540e\uff0c\u65b9\u4fbf\u7684\u662f\u53ef\u4ee5\u5feb\u901f\u6c42\u51fa\u54ea\u4e9b\u5b50\u4e32\u4e0e $s_{l,r}$ \u76f8\u540c\uff0c\u518d\u6ce8\u610f\u5230\u9898\u76ee\u662f\u79bb\u7ebf\u7684\uff0c\u6240\u4ee5\u57fa\u672c\u7684\u601d\u8def\u6846\u67b6\u5c31\u53ef\u4ee5\u786e\u5b9a\u4e86\uff0c\u5c06\u6240\u6709\u8be2\u95ee\u6309\u5b57\u7b26\u4e32\u957f\u5ea6\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u7136\u540e\u4f9d\u6b21\u5904\u7406\uff0c\u5728\u5904\u7406\u7684\u8fc7\u7a0b\u4e2d\u4e0d\u65ad\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u548c\u5e76\u67e5\u96c6\u5c06 $\\text{lcp}$ \u5927\u4e8e\u7b49\u4e8e\u5f53\u524d\u5b57\u7b26\u4e32\u957f\u5ea6\u7684\u540e\u7f00\u5408\u5e76\u5230\u540c\u4e00\u8fde\u901a\u5757\uff0c\u7136\u540e\u5229\u7528\u6570\u636e\u7ed3\u6784\u6c42\u51fa $ans$\u3002\n\n\u8003\u8651\u67d0\u6b21\u8be2\u95ee $s_{l,r}$\u3002\n\n\u82e5 $l=r$\uff0c\u5219\u6240\u6709\u65b9\u6848\u90fd\u5408\u6cd5\uff0c\u7b54\u6848\u4e3a $(n-1)(n-2)/2$\u3002\n\n\u82e5 $r-l+1\\geq n-1$\uff0c\u6b64\u65f6\u6ca1\u6709\u65b9\u6848\u5408\u6cd5\uff0c\u7b54\u6848\u4e3a $0$\u3002\n\n\u5426\u5219\u5c31\u7528\u5bb9\u65a5\u3002 \n\n\u8bbe $s_{l,r}$ \u7684\u957f\u5ea6\u4e3a $len$\uff0c\u4e0e $s_{l,r}$ \u76f8\u540c\u7684\u5b57\u7b26\u4e32\u6709 $e_1$ \u4e2a\uff08\u5305\u62ec $s_{l,r}$\uff09\uff0c\u5b83\u4eec\u5f00\u5934\u7684\u4f4d\u7f6e\u5206\u522b\u4e3a $p_i$\uff0c\u540c\u65f6\u8bbe $s=p_1$\uff0c$t=p_e$\u3002\n\n\u9996\u5148\u53ef\u4ee5\u53d1\u73b0 $P(A),P(C),P(AC)$ \u6bd4\u8f83\u597d\u6c42\uff1a\n$$\nP(A)=\\sum_{i=s+len-1}^{n-2}\\sum_{j=i+2}^{n}1\\\\\nP(C)=\\sum_{i=1}^{t-2}\\sum_{j=i+2}^{t}1\\\\\nP(AC)=\\sum_{i=s+len-1}^{t-2}\\sum_{j=i+2}^{t}1\n$$\n\u89c2\u5bdf\u5230\u8fd9\u4e09\u4e2a\u5f0f\u5b50\u957f\u7684\u5f88\u50cf\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2a\u51fd\u6570\u4ee3\u66ff\uff0c\u4e8e\u662f\u8bbe\uff1a\n$$\nf(a,b)=\\sum_{i=a}^{b-2}\\sum_{j=i+2}^{b}1=(b-a)(b-a-1)/2\n$$\n\u5219\u6709\uff1a\n$$\nP(A)=f(s+len-1,n)\\\\\nP(C)=f(1,t)\\\\\nP(AC)=f(s+len-1,t)\n$$\n\u6ce8\u610f\u5f53 $b<a+2$ \u65f6 $f(a,b)=0$\u3002\n\n\u800c\u5176\u5b83\u5e26\u4e0a\u6027\u8d28 $B$ \u7684 $P(B),P(AB),P(BC),P(ABC)$ \u5219\u975e\u5e38\u68d8\u624b\u3002\n\n\u7ecf\u8fc7\u4e00\u756a\u601d\u8003\u53ef\u4ee5\u53d1\u73b0\uff0c\u6c42 $P(B),P(AB),P(BC),P(ABC)$ \u56db\u8005\u7684\u5173\u952e\u662f\u4f1a\u6c42 $P(B)$\uff0c\u5176\u5b83\u4e09\u8005\u53ef\u7528\u901a\u8fc7\u7c7b\u4f3c\u7684\u65b9\u6cd5\u5f97\u5230\u3002\n\n\u4e8e\u662f\u8bbe $g(a,b)$ \u8868\u793a\u5f53 $i\\geq a$ \u548c $j\\leq b$ \u65f6\u6ee1\u8db3\u6027\u8d28 $B$ \u5373 $s_{i+1,j-1}$ \u5305\u542b $s_{l,r}$ \u7684\u65b9\u6848\u6570\uff0c\u5219\u6709\uff1a\n$$\nP(B)=g(1,n)\\\\\nP(AB)=g(s+len-1,n)\\\\\nP(BC)=g(1,t)\\\\\nP(ABC)=g(s+len-1,t)\\\\\n$$\n\u6240\u4ee5\u63a5\u4e0b\u6765\u53ea\u9700\u8981\u5173\u6ce8\u5982\u4f55\u4e0d\u91cd\u4e0d\u6f0f\u5730\u6c42\u51fa $g(a,b)$\u3002\n\n$g(a,b)$ \u7684\u542b\u4e49\u662f\u5f53 $i\\geq a\\wedge j\\leq b$ \u65f6 $s_{i+1,j-1}$ \u4e2d\u5305\u542b\u5b57\u7b26\u4e32 $s_{l,r}$ \u7684\u5408\u6cd5\u65b9\u6848\u6570\uff0c\u8fd9\u81f3\u5c11\u8981\u6c42\u4e86 $s_{i+1,j-1}$ \u957f\u5ea6\u8981\u5927\u4e8e\u7b49\u4e8e $len$\uff0c\u4e5f\u5373\u81f3\u5c11\u8981\u6709\u4e00\u4e2a\u4e0e $s_{l,r}$ \u76f8\u540c\u7684\u5b57\u7b26\u4e32\u7684\u5f00\u5934\u5728\u533a\u95f4 $[a+1,b-len]$ \u4e2d\uff0c\u5426\u5219 $g(a,b)=0$\u3002\n\n\u4e8e\u662f\u518d\u8bbe $[a+1,b-len]$ \u4e2d\u4e0e $s_{l,r}$ \u76f8\u540c\u7684\u5b57\u7b26\u4e32\u6709 $e_2$ \u4e2a\uff0c\u5b83\u4eec\u5f00\u5934\u7684\u4f4d\u7f6e\u5206\u522b\u4e3a $q_k$\uff0c\u540c\u65f6\u8bbe $c=q_1,d=q_{e_2}$\u3002\n\n\u4e3a\u4e86\u4e0d\u91cd\u4e0d\u6f0f\uff0c\u679a\u4e3e\u6bcf\u4e00\u4e2a $q_k$\uff0c\u7136\u540e\u52d2\u4ee4 $s_{i+1,j-1}$ \u6240\u5305\u542b\u7684\u4e0e $s_{l,r}$ \u76f8\u540c\u7684\u5b57\u7b26\u4e32\u4e2d\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e3a $q_k$ \u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\uff0c\u6c42\u6b64\u65f6\u7684\u65b9\u6848\u6570\uff0c\u8bbe\u4e3a $h(k)$\uff0c\u5219\u6709\uff1a\n$$\n\\begin{aligned}\nh(k)&=\\sum_{i=q_{(k-1)}}^{(q_{k})-1}\\sum_{j=(q_{k})+len}^{b}1\\\\\n&=(q_k-q_{(k-1)})\\cdot(b-len+1-q_k)\\\\\n&=(q_k-q_{(k-1)})\\cdot(b-len+1)-q_k^2+q_k\\cdot q_{(k-1)}\n\\end{aligned}\n$$\n\u8fd9\u4ee3\u8868\u4e86 $i$ \u4e0d\u80fd\u5207\u5230 $q_k$ \u7684\u5bf9\u5e94\u5b57\u7b26\u4e32\u548c $s_{i+1,j}$ \u5fc5\u987b\u4e0d\u5305\u542b $q_{k-1}$ \u7684\u5bf9\u5e94\u5b57\u7b26\u4e32\uff0c\u4ee5\u53ca $j$ \u4e0d\u80fd\u5207\u5230 $q_k$ \u7684\u5bf9\u5e94\u5b57\u7b26\u4e32\u3002\n\n\u7279\u6b8a\u7684\uff0c\u8ba9 $q_0=a$ \u4e8e\u662f\u6709\uff1a\n$$\n\\begin{aligned}\ng(a,b)&=\\sum_{k=1}^{e_2}h(k)\\\\\n&=\\sum_{k=1}^{e_2}(q_k-q_{(k-1)})\\cdot(b-len+1)-\\sum_{k=1}^{e_2}q_k^2+\\sum_{k=1}^{e_2}q_k\\cdot q_{(k-1)}\\\\\n&=(d-a)\\cdot(b-len+1)-\\sum_{k=1}^{e_2}q_k^2+a\\cdot c+\\sum_{k=2}^{e_2}q_k\\cdot q_{(k-1)}\n\\end{aligned}\n$$\n$g(a,b)$ \u7684\u7b2c\u4e00\u9879\u548c\u7b2c\u4e09\u9879\u53ef\u4ee5\u76f4\u63a5\u7b97\u51fa\u6765\uff0c\u7b2c\u4e8c\u9879\u548c\u7b2c\u56db\u9879\u5219\u53ef\u4ee5\u7528\u5355\u70b9\u4fee\u6539\u7684\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u6545\u4e5f\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u7ef4\u62a4\uff0c\u4e8e\u662f\u8fd9\u9898\u5c31\u89e3\u51b3\u4e86\u3002\n\n\u4ee3\u7801\u867d\u7136\u6709 ```6k``` \u4f46\u7ed3\u6784\u6e05\u6670\u5206\u660e\u3002\n\n```cpp\n#include <stdio.h>\n#include <algorithm>\n#include <string.h>\n#include <iostream>\n#include <assert.h>\nusing namespace std;\n\n#define re register\n#define sf scanf\n#define pf printf\n#define nl() putchar('\\n')\n#define ms(x, val) memset(x, val, sizeof(x))\n#define ll long long\n#define _for(i, a, b) for(re int (i) = (a); (i) < (b); ++(i))\n#define _rfor(i, a, b) for(re int (i) = (a); (i) <= (b); ++(i))\n#define _fev(p, u) for(re int (p) = head[(u)]; (p); (p) = nex[(p)])\n#define inf 0x7fffffff\n#define maxn 100005\n#define maxq 300005\n#define maxnn 2000005 \n\nint rdnt(){\n\tre int x = 0, sign = 1;\n\tre char c = getchar();\n\twhile (c < '0' || c > '9') { if (c == '-') sign = -1; c = getchar(); }\n\twhile (c >= '0' && c <= '9') x = (x<<3) + (x<<1) + (c ^ 48), c = getchar();\n\treturn x * sign;\n}\n\nchar str[maxn];\nint\tn, q, ncnt = 0, rg,\n\tht[maxn], sa[maxn], buc[maxn],\n\trk[maxn*2], arr[maxn*2],\n\trt[maxn], uf[maxn];\nll\tans[maxq];\nstruct Qry{ int p, len, id; } Q[maxq];\nstruct Ans{ int le, ri; ll sqr, sm; };\nstruct Seg{ int lc, rc; Ans as; } seg[maxnn];\n#define lc(x) seg[x].lc\n#define rc(x) seg[x].rc\n#define as(x) seg[x].as\n\ninline bool operator<(const Qry &q1, const Qry &q2){ return q1.len > q2.len; }\ninline bool cmp(re int a, re int b){ return ht[a] > ht[b]; }\n\nint new_node(re int nn){\n\tre int x = ++ncnt;\n\tseg[x] = seg[nn];\n\treturn x;\n}\n\nAns cbn(const Ans &a, const Ans &b){\n\tif (!a.le) return b;\n\telse if (!b.le) return a;\n\telse return {a.le, b.ri, a.sqr+b.sqr, a.sm+b.sm+(ll)a.ri*b.le};\n}\n\ninline void ud(re int x){\n\tas(x) = cbn(as(lc(x)), as(rc(x)));\n}\n\nvoid addn(int &x, int p, int tl, int tr){\n\tif (!x) x = new_node(0);\n\tif (tl == tr){ as(x) = {p, p, (ll)p*p, 0}; return; }\n\tint mi = (tl+tr)>>1;\n\tif (p <= mi) addn(lc(x), p, tl, mi);\n\telse addn(rc(x), p, mi+1, tr);\n\tud(x);\n}\n\nint merge(int x, int y, int tl, int tr){\n\tif (!x || !y) return x+y;\n\tassert(tl < tr);\n\tint mi = (tl+tr)>>1;\n\tlc(x) = merge(lc(x), lc(y), tl, mi);\n\trc(x) = merge(rc(x), rc(y), mi+1, tr);\n\tud(x);\n\treturn x;\n}\n\nAns qry(int x, int l, int r, int tl, int tr){\n\tif (!x) return {0, 0, 0, 0};\n\tif (l == tl && r == tr) return as(x);\n\tint mi = (tl+tr)>>1;\n\tif (r <= mi) return qry(lc(x), l, r, tl, mi);\n\telse if (l > mi) return qry(rc(x), l, r, mi+1, tr);\n\telse return cbn(qry(lc(x), l, mi, tl, mi), qry(rc(x), mi+1, r, mi+1, tr));\n}\n\nvoid get_sa(re char *str, re int n, re int m = 128){\n\tms(rk, 0); ms(arr, 0);\n\tre int *x = rk, *y = arr, p;\n\t_rfor(i, 1, m) buc[i] = 0;\n\t_rfor(i, 1, n) ++buc[x[i] = str[i]+1];\n\t_rfor(i, 2, m) buc[i] += buc[i-1];\n\tfor(re int i = n; i >= 1; --i) sa[buc[x[i]]--] = i;\n\tfor(re int j = 1; j < n; j <<= 1){\n\t\tp = 0;\n\t\t_rfor(i, n-j+1, n) y[++p] = i;\n\t\t_rfor(i, 1, n) if (sa[i] > j) y[++p] = sa[i]-j;\n\t\t\n\t\t_rfor(i, 1, m) buc[i] = 0;\n\t\t_rfor(i, 1, n) ++buc[x[i]];\n\t\t_rfor(i, 2, m) buc[i] += buc[i-1];\n\t\tfor(re int i = n; i >= 1; --i) sa[buc[x[y[i]]]--] = y[i];\n\t\t\n\t\tswap(x, y);\n\t\tp = x[sa[1]] = 1;\n\t\t_rfor(i, 2, n)\n\t\t\tif (y[sa[i]] == y[sa[i-1]] && y[sa[i]+j] == y[sa[i-1]+j]) x[sa[i]] = p;\n\t\t\telse x[sa[i]] = ++p;\n\t\tif (p == n) break;\n\t\telse m = p; \n\t}\n\t_rfor(i, 1, n) rk[sa[i]] = i;\n}\n\nvoid get_ht(re char *str, re int n){\n\tre int j = ht[1] = 0;\n\t_rfor(i, 1, n){\n\t\tif (rk[i] == 1) continue;\n\t\tif (j) --j;\n\t\tre char *s1 = str+i-1, *s2 = str+sa[rk[i]-1]-1;\n\t\twhile(s1[j+1] == s2[j+1]) ++j;\n\t\tht[rk[i]] = j;\n\t}\n}\n\nint stk[maxn];\nint find(re int u){\n\tre int top = 0;\n\twhile(uf[u] > 0) stk[top++] = u, u = uf[u];\n\twhile(top) uf[stk[--top]] = u;\n\treturn u;\n}\n\nbool unite(re int u, re int v){\n\tu = find(u); v = find(v);\n\tassert(u != v); assert(rt[u] && rt[v]);\n\tif (uf[u] > uf[v]) u^=v^=u^=v;\n\tuf[u] += uf[v];\n\tuf[v] = u;\n\trt[u] = merge(rt[u], rt[v], 1, rg);\n\trt[v] = 0;\n\treturn true;\n}\n\ninline ll f(re ll a, re ll b){ return b>=a+2 ? (b-a)*(b-a-1)/2 : 0; }\n\nll g(re int a, re int b, re int root, re int len){\n\tif (b-len-a <= 0) return 0;\n\tAns as = qry(root, a+1, b-len, 1, rg);\n\tif (as.le == 0) return 0;\n\treturn (ll)(as.ri-a)*(b+1-len) - as.sqr + (ll)a*as.le + as.sm;\n}\n\nll get_ans(re int p, re int len){\n\tif (len == 1) return (ll)(n-1)*(n-2)/2;\n\telse if (len >= n-1) return 0;\n\tre int root = rt[find(p = rk[p])], s = as(root).le, t = as(root).ri;\n\tre ll\n\t\tpa = f(s+len-1, n), pb = g(1, n, root, len), pc = f(1, t),\n\t\tpab = g(s+len-1, n, root, len), pbc = g(1, t, root, len), pac = f(s+len-1, t),\n\t\tpabc = g(s+len-1, t, root, len);\n\treturn pa+pb+pc-pab-pbc-pac+pabc;\n}\n\nint main(){\n\t#ifndef ONLINE_JUDGE\n\tfreopen(\"sample.in\", \"r\", stdin);\n\tfreopen(\"sample.out\", \"w\", stdout);\n\t#endif\n\t\n\tlc(0) = rc(0) = 0; as(0) = {0, 0, 0, 0}; ms(uf, -1); ms(rt, 0); \n\tn = rg = rdnt(), q = rdnt();\n\tsf(\"%s\", str+1);\n\tget_sa(str, n);\n\tget_ht(str, n);\n\t_rfor(i, 1, n) addn(rt[i], sa[i], 1, rg);\n\t_rfor(i, 1, q) Q[i].p = rdnt(), Q[i].len = rdnt()-Q[i].p+1, Q[i].id = i;//pf(\"i:%d \", i);\n\tsort(Q+1, Q+1+q);\n\t_rfor(i, 2, n) arr[i-1] = i;\n\tsort(arr+1, arr+1+n-1, cmp);\n\tre int cur = 0;\n\t_rfor(i, 1, q){\n\t\twhile(cur < n-1 && ht[arr[cur+1]] >= Q[i].len) ++cur, unite(arr[cur], arr[cur]-1);\n\t\tans[Q[i].id] = get_ans(Q[i].p, Q[i].len);\n\t}\n\t_rfor(i, 1, q) pf(\"%lld\\n\", ans[i]);\n\n\treturn 0;\n}\n```\n\n",
        "postTime": 1637649024,
        "uid": 474113,
        "name": "MoYuFang",
        "ccfLevel": 7,
        "title": "\u3010P4384 [\u516b\u7701\u8054\u80032018]\u5236\u80e1\u7a9c\u3011\u9898\u89e3"
    },
    {
        "content": "\u81f3\u4eca\u4e3a\u6b62\u505a\u8fc7\u7684\u6700\u70e6\u4eba\u7684\u9898\n\n\u5927\u6982\u662f\u56e0\u4e3a\u6211\u5df2\u7ecf\u5f88\u4e45\u6ca1\u6709\u78b0 SAM \u4e86\uff0c\u6240\u4ee5\u8fd9\u4e2a\u9898\u8017\u8d39\u4e86\u6211\u4e00\u4e0b\u5348+\u4e00\u665a\u4e0a\u7684\u65f6\u95f4\uff0c\u6709\u5fc5\u8981\u53d1\u4e2a\u9898\u89e3\u7eaa\u5ff5\u4e00\u4e0b.jpg\n\n# \u9898\u89e3\n\n\u8003\u8651\u53cd\u8fc7\u6765\u6c42\uff0c\u4e5f\u5c31\u662f\u6c42 $[1,l][l+1,r-1][r,n]$ \u8fd9\u4e2a\u5206\u6bb5\u6cd5\u5728\u4efb\u610f\u4e00\u6bb5\u91cc\u90fd\u627e\u4e0d\u5230\u4e00\u4e2a $s_{l,r}$\u3002 \u4e5f\u5c31\u662f\u8bf4\u7528 $l\\sim l+1$ \u8fd9\u4e00\u5200\u548c $r-1\\sim r$ \u8fd9\u4e00\u5200\u628a\u6240\u6709\u4e32\u5168\u90fd\u5207\u4e86\u7684\u65b9\u6848\u6570\u3002\u7136\u540e\u7528 $\\binom{n-1}{2}$ \u628a\u5b83\u51cf\u4e86\u3002\n\n~~\u5b9e\u9645\u4e0a\u4e0d\u7ba1\u600e\u4e48\u63a8\u90fd\u53ef\u4ee5\u63a8\u5f97\u7b54\u6848\uff0c\u4f46\u53cd\u8fc7\u6765\u63a8\u662f\u6700\u597d\u63a8\u7684\u4e00\u79cd\u3002\u6211\u5728\u5176\u5b83\u65b9\u6cd5\u4e2d\u90fd\u6ca1\u80fd\u5f97\u5230\u6700\u540e\u7684\u7ed3\u679c\uff0c\u4e8e\u662f\u8017\u8d39\u4e86\u4e00\u4e2a\u4e0b\u5348\u7684\u65f6\u95f4~~\n\n\u8003\u8651\u7528 SAM \u6765\u505a\u8fd9\u4e2a\u9898\uff0c\u6839\u636e\u5957\u8def\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ece $s_{1,r}$ \u5bf9\u5e94\u7684\u8282\u70b9\u5f00\u59cb\uff0c\u5728 parent \u6811\u4e0a\u500d\u589e\u7684\u65b9\u6cd5\u6765\u6c42\u5f97 $s_{l,r}$ \u6240\u5728\u7684\u8282\u70b9\u3002\n\n\u90a3\u4e48\u5230\u8fd9\u4e2a\u8282\u70b9\u540e\u6211\u4eec\u5c31\u77e5\u9053\u4e86\u4e00\u4e2a endpos \u96c6\u5408\uff0c\u901a\u8fc7\u5b83\u80fd\u77e5\u9053 $s_{l,r}$ \u5728 $s$ \u4e2d\u7684\u5176\u5b83\u51fa\u73b0\u4f4d\u7f6e\u3002\u8bbe\u5b83\u4eec\u662f $[l_1,r_1],[l_2,r_2],\\cdots,[l_k,r_k] (l_1< l_2< \\cdots <l_k)$\u3002\n\n\u7531\u4e8e\u6211\u4eec\u8981\u6c42\u4e0d\u5408\u6cd5\uff0c\u6240\u4ee5 $l<r_1$ \u662f\u4e00\u5b9a\u8981\u7684\u4e0d\u7136 $[l_1,r_1]$ \u5c31\u5728 $[1,l]$ \u91cc\u4e86\n\n\u90a3\u4e48\u73b0\u5728\u6211\u4eec\u56fa\u5b9a\u8fd9\u4e2a $l$\uff0c\u5047\u8bbe\u5b83\u628a\u6240\u6709\u4e32\u90fd\u5207\u5230\u4e86\u4e5f\u5c31\u662f $l_k\\le l$ \u65f6\uff0c\u8fd9\u65f6 $r$ \u968f\u4fbf\u53d6\u4e5f\u5c31\u662f\u5728 $[l+2,n]$ \u5185\u3002\u5426\u5219\u6211\u4eec\u627e\u5230\u7b2c\u4e00\u4e2a $l_i>l$ \u7684 $i$ \u8bbe\u4e3a $nex(l)$\uff0c\u6b64\u65f6 $[i,k]$ \u8fd9\u4e9b\u4e32\u90fd\u6ca1\u88ab\u5207\u5230\uff0c\u5f97\u5230 $r$ \u5e94\u8be5\u5728 $[l_k+1,r_{nex(l)}]$ \u5185\u3002\uff08\u8fd9\u4e24\u4e2a\u533a\u95f4\u53ef\u80fd\u662f\u7a7a\u7684\uff09\n\n\u6240\u4ee5\u73b0\u5728\u5c31\u6709\u4e00\u4e2a\u5bf9\u6bcf\u4e2a $l$ \u90fd\u53bb $O(1)$ \u8ba1\u7b97\u7684\u65b9\u6848\uff0c\u4f46\u6211\u4eec\u4e0d\u80fd\u8981\u8fd9\u4e2a\u5f0f\u5b50\uff0c\u56e0\u4e3a\u548c\u5f0f\u7684\u503c\u90fd\u5728\u6bcf\u4e2a\u4f4d\u7f6e\u4e0a\uff0c\u4e0d\u53ea\u5728 endpos \u4e0a\uff0c\u65e0\u6cd5\u7ef4\u62a4\u3002\n\n## \u60c5\u51b5 1\n\n\u7531\u4e8e\u4e0a\u8ff0\u5206\u6790\u7684\u4e24\u4e2a if \u6761\u4ef6 $l<r_1$ \u548c $l_k\\le l$\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u505a\u51fa\u4e00\u4e2a\u5206\u7c7b\u8ba8\u8bba\u4ee5**\u7b80\u5316**\u63a8\u51fa\u7684\u5f0f\u5b50\n\n\u5f53 $l_k\\ge r_1$ \u65f6\uff0c\u7531\u4e8e $l<r_1$ \u6240\u4ee5\u4e0d\u53ef\u80fd\u6709 $l_k\\le l$ \u4e5f\u5c31\u662f\u8bf4\u4e0d\u53ef\u80fd\u4e00\u5200\u628a\u6240\u6709\u4e32\u5168\u5207\u4e86\u3002\u6240\u4ee5\u662f\n\n$$\n\\sum_{l=1}^{r_1-1} \\max(0,r_{nex(l)}-l_k)\n$$\n\n\u6211\u4eec\u9700\u8981\u628a\u4fe1\u606f\u653e\u5230\u6bcf\u4e2a endpos \u4e0a\uff0c\u6240\u4ee5\u8981\u7ee7\u7eed\u63a8\u3002\u601d\u8def\u5f88\u76f4\u63a5\u5c31\u662f\u8003\u8651\u5bf9\u4e00\u4e9b $l$ \u5b83\u4eec\u7684 $nex(l)$ \u662f\u4e00\u6837\u7684\uff0c\u628a\u8d21\u732e\u90fd\u653e\u5728 $nex(l)$ \u4e0a\u3002\u6240\u4ee5\u7b2c\u4e00\u662f\u8003\u8651 $nex(l)$ \u5728\u4ec0\u4e48\u65f6\u5019\u8d21\u732e\u4e0d\u662f 0 \u4e5f\u5c31\u662f max \u5728\u53f3\u8fb9\u53d6\uff0c\u7b2c\u4e8c\u662f\u8003\u8651\u6700\u540e\u53ef\u80fd\u4f1a\u6709\u4e00\u6bb5 $[l_{?-1}+1,l_?]$ \u88ab $r_1-1$ \u76f4\u63a5\u622a\u65ad\u3002\u4e0b\u9762\u662f\u7ec6\u8282\uff1a\n\n\u627e\u5230\u7b2c\u4e00\u4e2a $i$ \u6ee1\u8db3 $r_i> l_k$ \uff08\u5728 $len>1$ \u65f6\u4e00\u5b9a\u5b58\u5728\u4e14 $>1$\uff09\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a $j$ \u6ee1\u8db3 $r_1-1< l_j$\uff08\u4e00\u5b9a\u5b58\u5728\uff09\uff0c\u82e5 $i\\le j$ \u5219\u7b54\u6848\u662f\u4e0b\u5f0f\uff0c\u5426\u5219\u662f 0\n\n$$\n\\sum_{t=i}^{j-1} (l_t-l_{t-1})(r_t-l_k) + (r_1-l_{j-1})(r_j-l_k)\n$$\n\n## \u60c5\u51b5 2\n\n\u5f53 $l_k<r_1$ \u65f6\uff0c\u6b64\u65f6\u6240\u6709\u533a\u95f4\u90fd\u5806\u79ef\u5728\u4e00\u5757\uff0c\u4ea4\u975e\u7a7a\u3002\u6240\u4ee5\u5207\u5b8c\u4e00\u5200 $l<r_1$ \u540e\u4e00\u5b9a\u53ef\u4ee5\u518d\u5207\u4e00\u5200\uff0c\u4e0d\u9700\u8981 max \u4e86\u3002\u7b54\u6848\u4e3a\n\n$$\n\\sum_{l=l_k}^{r_1-1} (n-l-1)+\\sum_{l=1}^{l_k-1} r_{nex(l)}-l_k\n$$\n\n\u4e5f\u5c31\u662f\n\n$$\n\\sum_{l=l_k}^{r_1-1} (n-l-1)+(l_1-1)(r_t-l_k)+\\sum_{t=2}^{k} (l_t-l_{t-1})(r_t-l_k)\n$$\n\n## \u7ef4\u62a4\n\n\u4e0d\u7ba1\u600e\u4e48\u8bf4\uff0c\u6211\u4eec\u53d1\u73b0\u6211\u4eec\u9700\u8981\u505a\u7684\u4e8b\u60c5\u662f\u67e5\u8be2\u4e00\u4e2a\u524d\u9a71\u6216\u540e\u7ee7\uff0c\u6216\u8005\u8be2\u95ee\u4e00\u6bb5\u533a\u95f4\u7684 $\\sum_t (r_t-r_{t-1})r_t$ \u7684\u548c\uff0c\u6216\u8be2\u95ee\u4e00\u6bb5\u533a\u95f4\u7684 $\\sum_t (r_t-r_{t-1})$ \u7684\u548c\u3002\u6211\u4eec\u91c7\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\uff08\u79bb\u7ebf\u7ebf\u6bb5\u6811\u5408\u5e76\u6216\u5728\u7ebf\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u5408\u5e76\uff09\u8fdb\u884c\u7ef4\u62a4\uff0c\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u5b58\u50a8\u5185\u90e8 endpos \u7684\u6700\u5927\u503c\u4e0e\u6700\u5c0f\u503c\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O((n+q)\\log n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log n)$\u3002\n\n## \u5b9e\u73b0\n\n\u5e76\u4e0d\u662f\u5f88\u957f\u3002\u4e0d\u8fc7\u8c03\u8d77\u6765\u786e\u5b9e\u633a\u70e6\u4eba\n\n\u5efa\u8bae\u4f60\u5148\u5199\u4e00\u4e2a\u66b4\u529b\u9a8c\u8bc1\u4e00\u4e0b\u4f60\u63a8\u7684\u5f0f\u5b50\u662f\u4e0d\u662f\u5bf9\u7684\uff0c\u7136\u540e\u518d\u5199\uff0c\u987a\u4fbf\u4e5f\u53ef\u4ee5\u5bf9\u62cd\u4e86\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n\ntypedef long long ll;\nconst int MAXN=1e5+5;\nconst int MX1=MAXN*40;\nconst int MX2=MAXN*2;\n\nint N,Q;char S[MAXN];\n\nint rt[MX2];\nstruct segmentTree{\n\t#define mid ((l+r)>>1)\n\tstruct data{\n\t\tint mn,MX1;ll sum;\n\t\tdata(){}\n\t\tdata(int mn,int MX1,ll sum):mn(mn),MX1(MX1),sum(sum){}\n\t\tfriend data operator+(const data& l,const data& r){\n\t\t\tll sum=l.sum+r.sum;if(l.MX1&&r.mn)sum+=(r.mn-l.MX1)*r.mn;\n\t\t\treturn data(l.mn?l.mn:r.mn,r.MX1?r.MX1:l.MX1,sum);\n\t\t}\n\t}T[MX1];\n\tint ls[MX1],rs[MX1],mn[MX1],mx[MX1],Tlen;ll sum[MX1];\n\tvoid ins(int& o,int l,int r,int pos){\n\t\tif(r<pos||l>pos)return;\n\t\tif(!o)o=++Tlen;\n\t\tif(l==r)T[o].mn=T[o].MX1=l;\n\t\telse ins(ls[o],l,mid,pos),ins(rs[o],mid+1,r,pos),T[o]=T[ls[o]]+T[rs[o]];\n\t}\n\tdata qry(int o,int l,int r,int L,int R){\n\t\tif(!o||r<L||l>R)return data(0,0,0);\n\t\tif(L<=l&&r<=R)return T[o];\n\t\telse return qry(ls[o],l,mid,L,R)+qry(rs[o],mid+1,r,L,R);\n\t}\n\tint merge(int o1,int o2,int l,int r){\n\t\tif(!o1||!o2)return o1|o2;\n\t\tint o=++Tlen;ls[o]=merge(ls[o1],ls[o2],l,mid),rs[o]=merge(rs[o1],rs[o2],mid+1,r);\n\t\tT[o]=T[ls[o]]+T[rs[o]];\n\t\treturn o;\n\t}\n}T;\n\nstruct suffixAutomaton{\n\tint fa[MX2][20];\n\tstruct node{int v,next;}E[MX2];int head[MX2],Elen;\n\tvoid add(int u,int v){++Elen,E[Elen].v=v,E[Elen].next=head[u],head[u]=Elen;}\n\tvoid dfs(int u){\n\t\tfor(int i=1;i<=19;++i)fa[u][i]=fa[fa[u][i-1]][i-1];\n\t\tfor(int i=head[u];i;i=E[i].next){\n\t\t\tfa[E[i].v][0]=u,dfs(E[i].v);\n\t\t\trt[u]=T.merge(rt[u],rt[E[i].v],1,N);\n\t\t}\n\t}\n\n\tint son[MX2][10],link[MX2],len[MX2],endpos[MX2],id[MAXN],last,Tlen;\n\tsuffixAutomaton(){link[0]=-1;}\n\tvoid extend(int ch,int ed){\n\t\tint cur=++Tlen;T.ins(rt[cur],1,N,ed),id[ed]=cur,len[cur]=len[last]+1;int p=last;\n\t\tfor(;p!=-1&&!son[p][ch];p=link[p])son[p][ch]=cur;\n\t\tif(p!=-1){\n\t\t\tint q=son[p][ch];\n\t\t\tif(len[q]==len[p]+1)link[cur]=q;\n\t\t\telse{\n\t\t\t\tint clone=++Tlen;link[clone]=link[q],len[clone]=len[p]+1;\n\t\t\t\tfor(int i=0;i<10;++i)son[clone][i]=son[q][i];\n\t\t\t\tfor(;p!=-1&&son[p][ch]==q;p=link[p])son[p][ch]=clone;\n\t\t\t\tlink[cur]=link[q]=clone;\n\t\t\t}\n\t\t}\n\t\tlast=cur;\n\t}\n\tvoid build(){\n\t\tfor(int i=1;i<=Tlen;++i)add(link[i],i);\n\t\tdfs(0);\n\t}\n\tint qry(int l,int r){\n\t\tint p=id[r];\n\t\tif(len[link[p]]<r-l+1)return p;\n\t\tfor(int i=19;i>=0;--i){\n\t\t\tif(link[fa[p][i]]!=-1&&len[link[fa[p][i]]]>=r-l+1)p=fa[p][i];\n\t\t}\n\t\treturn fa[p][0];\n\t}\n}SAM;\n\nint main(){\n\tscanf(\"%d%d%s\",&N,&Q,S+1);\n\tfor(int i=1;i<=N;++i)SAM.extend(S[i]-'0',i);\n\tSAM.build();\n\twhile(Q--){\n\t\tint l,r,p,len;\n\t\tscanf(\"%d%d\",&l,&r),len=r-l+1;\n\t\tif(l==r){\n\t\t\tprintf(\"%lld\\n\",1ll*(N-1)*(N-2)/2);\n\t\t\tcontinue;\n\t\t}\n\t\tll ans=0;\n\t\tp=rt[SAM.qry(l,r)];\n\t\tint r1=T.T[p].mn,lk=T.T[p].MX1-len+1;\n\t\tif(lk>=r1){\n\t\t\tint i=T.qry(p,1,N,T.T[p].MX1-len+2,N).mn;\n\t\t\tint j=T.qry(p,1,N,T.T[p].mn+len-1,N).mn;\n\t\t\tif(i<=j){\n\t\t\t\tint pi=T.qry(p,1,N,1,i-1).MX1,pj=T.qry(p,1,N,1,j-1).MX1;\n\t\t\t\tif(i<j)ans+=T.qry(p,1,N,pi,pj).sum-1ll*(pj-pi)*lk;\n\t\t\t\tans+=1ll*(r1-(pj-len+1))*(j-lk);\n\t\t\t}\n\t\t}else{\n\t\t\tans+=T.T[p].sum-1ll*(T.T[p].MX1-T.T[p].mn)*lk;\n\t\t\tans+=1ll*(T.T[p].mn-len)*(r1-lk);\n\t\t\tans+=1ll*(r1-lk)*N-1ll*(r1-lk)*(r1+lk+1)/2;\n\t\t}\n\t\tans=1ll*(N-1)*(N-2)/2-ans;\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1617198766,
        "uid": 62308,
        "name": "Mr_Wu",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4384 [\u516b\u7701\u8054\u80032018]\u5236\u80e1\u7a9c"
    },
    {
        "content": "\u6bd2\u7624 ~~\u4e0d\u5931\u7cbe\u81f4~~\n\n\u601d\u8003\u4e00\u4e0b\u66b4\u529b\n\n\u663e\u7136\u53ef\u4ee5\u6811\u4e0a\u500d\u589e \u7136\u540e\u518d\u627e\u5230\u4e32\u5728\u54ea\u91cc \u8fd9\u662f\u5e38\u89c1\u5957\u8def\n\n\u7136\u540e\u627e\u5230\u4e32\u5728\u54ea\u91cc\u4e4b\u540e\u8003\u865145\u5206\u7684\u66b4\u529b\n\n\u7a0d\u6709\u5e38\u8bc6\u7684\u5957\u8def\u7ebf\u6bb5\u6811\u7ef4\u62a4right\u96c6\u5408\u540e\u660e\u663e\u5c31\u5f97\u5230\u4e86\u8fd9\u4e2a\u4e32\u51fa\u73b0\u4f4d\u7f6e\n\n\u6b63\u96be\u5219\u53cd \u8003\u8651\u4e0d\u5408\u6cd5\u7684\u60c5\u51b5\n\n\u660e\u663e\u4e09\u4e2a\u4e32\u4e0d\u91cd\u5408\u5c31\u4e0d\u884c\n\n\u968f\u540e\u601d\u8003\u4e24\u4e2a\u4e32/\u4e00\u4e2a\u4e32\u7684\u60c5\u51b5\n\n\u5dee\u5206\u7b97\u4e00\u4e0b\u8d21\u732e \u6700\u540e\u5f97\u5230\u4e00\u4e2a\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u5f0f\u5b50\n\n\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u4e0b\u5373\u53ef\n\n```\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n#include<vector>\nusing namespace std;\ntypedef long long LL;\nconst int N=3e5+100;\nconst int INF=1e9+10;\ninline void read(int &x){\n\tx=0;\n\tint f=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){\n\t\tif(ch=='-')f=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9'){\n\t\tx=x*10+ch-'0';\n\t\tch=getchar();\n\t}\n\tx*=f;\n}\nstruct Front_Star{\n\tint u,v,nxt;\n}e[N<<2];\nint cnt=1;\nint first[N];\nvoid add(int u,int v){\n\t++cnt;\n\te[cnt].u=u;\n\te[cnt].v=v;\n\te[cnt].nxt=first[u];\n\tfirst[u]=cnt;\n}\nint root[N];\nstruct Segment_Tree{\t\n\tint lson[N*50];\n\tint rson[N*50];\n\tint RL[N*50];\n\tint RR[N*50];\n\tLL sum1[N*50];\n\tLL sum2[N*50];\n\tint cnt;\n\tinline void PushUp(int p){\n\t\tRL[p]=INF;\n\t\tif(lson[p])RL[p]=min(RL[p],RL[lson[p]]);\n\t\tif(rson[p])RL[p]=min(RL[p],RL[rson[p]]);\n\t\t\n\t\tRR[p]=-INF;\n\t\tif(lson[p])RR[p]=max(RR[p],RR[lson[p]]);\n\t\tif(rson[p])RR[p]=max(RR[p],RR[rson[p]]);\n\t\t\n\t\tsum1[p]=0;\n\t\tsum2[p]=0;\n\t\t\n\t\tif(RL[p]!=INF&&RR[p]!=-INF)sum1[p]=RR[p]-RL[p];\n\t\t#define lc lson[p]\n\t\t#define rc rson[p]\n\t\tsum2[p]=sum2[lc]+sum2[rc];\n\t\tif(RR[lc]!=-INF&&RL[rc]!=INF&&lc&&rc){\n\t\t\tsum2[p]+=(RL[rc]-RR[lc])*RL[rc];\n\t\t}\n\t\t#undef lc \n\t\t#undef rc\n\t}\n\tvoid Update(int &p,int l,int r,int pos){\n\t\tif(!p)p=++cnt;\n\t\tif(l==r){\n\t\t\tRL[p]=l;\n\t\t\tRR[p]=r;\n\t\t\tsum1[p]=0;\n\t\t\tsum2[p]=0;\n\t\t\treturn;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tif(pos<=mid)Update(lson[p],l,mid,pos);\n\t\telse Update(rson[p],mid+1,r,pos);\n\t\tPushUp(p);\n\t}\n\tint Merge(int x,int y,int l,int r){\n\t\tif(!x||!y)return x+y;\n\t\tint np=++cnt;\n\t\tif(l==r){\n\t\t\tRL[np]=l;\n\t\t\tRR[np]=r;\n\t\t\tsum1[np]=0;\n\t\t\tsum2[np]=0;\n\t\t\treturn np;\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tlson[np]=Merge(lson[x],lson[y],l,mid);\n\t\trson[np]=Merge(rson[x],rson[y],mid+1,r);\n\t\tPushUp(np);\n\t\treturn np;\n\t}\n\tint QueryL(int p,int l,int r,int dl,int dr){\n\t\tif(!p)return INF;\n\t\tif(dl<=l&&r<=dr){\n\t\t\treturn RL[p];\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tint ret=INF;\n\t\tif(dl<=mid)ret=min(ret,QueryL(lson[p],l,mid,dl,dr));\n\t\tif(mid< dr)ret=min(ret,QueryL(rson[p],mid+1,r,dl,dr));\n\t\treturn ret;\n\t}\n\tint QueryR(int p,int l,int r,int dl,int dr){\n\t\tif(!p)return -INF;\n\t\tif(dl<=l&&r<=dr){\n\t\t\treturn RR[p];\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tint ret=-INF;\n\t\tif(dl<=mid)ret=max(ret,QueryR(lson[p],l,mid,dl,dr));\n\t\tif(mid< dr)ret=max(ret,QueryR(rson[p],mid+1,r,dl,dr));\n\t\treturn ret;\n\t}\n\t#define lc lson[p]\n\t#define rc rson[p]\n\tpair<pair<LL,LL>,pair<int,int> >QuerySum(int p,int l,int r,int dl,int dr){//sum1 sum2 RL RR\n\t\tif(dl>dr)return make_pair(make_pair(0,0),make_pair(INF,-INF));\n\t\t\n\t\tif(!p)return make_pair(make_pair(0,0),make_pair(INF,-INF));\n\t\t\n\t\tif(dl<=l&&r<=dr){\n\t\t\treturn make_pair(make_pair(sum1[p],sum2[p]),make_pair(RL[p],RR[p]));\n\t\t}\n\t\tint mid=(l+r)>>1;\n\t\tif(dl<=mid&&dr<=mid){\n\t\t\treturn QuerySum(lson[p],l,mid,dl,dr);\n\t\t}\n\t\tif(mid< dl&&mid< dr){\n\t\t\treturn QuerySum(rson[p],mid+1,r,dl,dr);\n\t\t}\n\t\tpair<pair<LL,LL>,pair<int,int> >Lnow=QuerySum(lc,l,mid,dl,dr);\n\t\tpair<pair<LL,LL>,pair<int,int> >Rnow=QuerySum(rc,mid+1,r,dl,dr);\n\t\tpair<pair<LL,LL>,pair<int,int> >ret=make_pair(make_pair(0,0),make_pair(INF,-INF));\n\t\t\n\t\tret.first.second=Lnow.first.second+Rnow.first.second;\n\t\t\n\t\tif(lc)ret.second.first=min(ret.second.first,Lnow.second.first);\n\t\tif(lc)ret.second.second=max(ret.second.second,Lnow.second.second);\n\t\t\n\t\tif(rc)ret.second.first=min(ret.second.first,Rnow.second.first);\n\t\tif(rc)ret.second.second=max(ret.second.second,Rnow.second.second);\n\t\t\n\t\tif(Lnow.second.second!=-INF&&Rnow.second.first!=INF){\n\t\t\tret.first.second+=(Rnow.second.first-Lnow.second.second)*Rnow.second.first;\n\t\t}\n\t\tif(ret.second.first!=INF&&ret.second.second!=-INF){\n\t\t\tret.first.first=ret.second.second-ret.second.first;\n\t\t}\n\t\treturn ret;\n\t}\n\t#undef lc \n\t#undef rc\n}T;\nchar S[N];\nint n,Q;\nLL Ans[N];\nstruct Suffix_AutoMation{\n\tstruct Suffix_Node{\n\t\tint vis[11];\n\t\tint pre,step;\n\t}SA[N<<2];\n\tint cnt,last;\n\tint fa[N][21];\n\tvector<pair<int,int> >End[N];\n\tint pos[N];\n\tvoid Insert(char C,int Id){\n\t\tint p=last;\n\t\tint np=++cnt;\n\t\tlast=np;\n\t\tSA[np].step=SA[p].step+1;\n\t\tfor(;!SA[p].vis[C-'0'];p=SA[p].pre)SA[p].vis[C-'0']=np;\n\t\tif(!p){\n\t\t\tSA[np].pre=1;\n\t\t}\n\t\telse{\n\t\t\tint q=SA[p].vis[C-'0'];\n\t\t\tif(SA[q].step==SA[p].step+1){\n\t\t\t\tSA[np].pre=q;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tint nq=++cnt;\n\t\t\t\tSA[nq].step=SA[p].step+1;\n\t\t\t\tmemcpy(SA[nq].vis,SA[q].vis,sizeof(SA[nq].vis));\n\t\t\t\tSA[nq].pre=SA[q].pre;\n\t\t\t\tSA[np].pre=SA[q].pre=nq;\n\t\t\t\tfor(;SA[p].vis[C-'0']==q;p=SA[p].pre)SA[p].vis[C-'0']=nq;\n\t\t\t}\n\t\t}\n\t\tpos[Id]=np;\n\t\tT.Update(root[np],1,n,Id);\n\t}\n\tvoid DFS(int u,int fat){\n\t\tfa[u][0]=fat;\n\t\tfor(int i=1;i<=20;++i){\n\t\t\tfa[u][i]=fa[fa[u][i-1]][i-1];\n\t\t}\n\t\tfor(int i=first[u];i;i=e[i].nxt){\n\t\t\tint v=e[i].v;\n\t\t\tDFS(v,u);\n\t\t\troot[u]=T.Merge(root[u],root[v],1,n);\n\t\t}\n//\t\tcout<<u<<\" \"<<T.cnt<<'\\n';\n\t}\n\tvoid Build(){\n\t\tfor(int i=1;i<=cnt;++i){\n\t\t\tadd(SA[i].pre,i);\n\t\t}\n\t\tDFS(1,0);\n\t}\n\tint GetFa(int x,int len){\n\t\tfor(int i=20;i>=0;--i){\n\t\t\tif(fa[x][i]&&SA[fa[x][i]].step>=len){\n\t\t\t\tx=fa[x][i];\n\t\t\t}\n\t\t}\n\t\treturn x;\n\t}\n\tLL Get(int pos,int len){\n\t\tint L=T.QueryL(root[pos],1,n,1,n);\n\t\tint R=T.QueryR(root[pos],1,n,1,n);\n\t\tif(L+len<=R-len){//Cas 1\n\t\t\tint mid=T.QueryL(root[pos],1,n,L+len,R-len);\n\t\t\tif(mid!=INF){\n\t\t\t\treturn 1LL*(n-1)*(n-2)/2;\n\t\t\t}\n\t\t}\n\t\t//Cas 2\n\t\tLL ret=0;\t\t\t\n\t\tif(L==R){//Cas 2.0\n\t\t\tret=1LL*(len-1)*(len-2)/2+1LL*(len-1)*(L-len+n-R);\n\t\t\treturn 1LL*(n-1)*(n-2)/2-ret;\n\t\t}\n\t\tif(R-len+1<=L){//Cas 2.1\n\t\t\t//Cas 2.11\n\t\t\tLL Ed=R-len+1;\n\t\t\tpair<pair<LL,LL>,pair<int,int> >now=T.QuerySum(root[pos],1,n,1,n);\n\t\t\t\t\n\t\t\tret=ret+now.first.second-Ed*now.first.first;\t\t\t\t\n\t\t\t//Cas 2.12\n\t\t\t\t//Cas 2.120\n\t\t\t\tret=ret+(L-Ed)*(L-Ed-1)/2;\n\t\t\t\t//Cas 2.121\n\t\t\t\tret=ret+(L-Ed)*(L-len+(n-L));\n\t\t}\n\t\telse{\n\t\t\tint suc=T.QueryR(root[pos],1,n,1,L+len-1);\n\t\t\tint pre=T.QueryL(root[pos],1,n,L+len,n);\n\t\t\t\n\t\t\tint Ed=R-len+1;\n\t\t\t\n\t\t\tint Nxt=T.QueryR(root[pos],1,n,1,Ed);\n\t\t\tpair<pair<LL,LL>,pair<int,int> >now=T.QuerySum(root[pos],1,n,Ed,L+len-1);\n\t\t\tif(now.second.first!=INF&&now.second.second!=-INF){\n\t\t\t\tnow.first.first=now.second.second-Nxt;\n\t\t\t\tnow.first.second+=(now.second.first-Nxt)*now.second.first;\n\t\t\t\tnow.second.first=Nxt;\n\t\t\t}\n\t\t\t\n\t\t\tret=ret+now.first.second-Ed*now.first.first;\n\t\t\tif(suc!=-INF&&pre!=INF){\n\t\t\t\tret=ret+(L-(suc-len+1))*(pre-Ed)*(pre>=Ed);\n\t\t\t}\n\t\t}\n\t\treturn 1LL*(n-1)*(n-2)/2-ret;\n\t}\n\tvoid Calc(int u){\n\t\tif(End[u].size()){\n\t\t\tfor(int j=0;j<End[u].size();++j){\n\t\t\t\tint len=End[u][j].first;\n\t\t\t\tint now=GetFa(u,len);\n\t\t\t\tAns[End[u][j].second]=Get(now,len);\n\t\t\t}\n\t\t}\n\t\tfor(int i=first[u];i;i=e[i].nxt){\n\t\t\tint v=e[i].v;\n\t\t\tCalc(v);\n\t\t}\n\t}\n\tvoid Solve(){\n\t\tcnt=last=1;\n\t\tfor(int i=1;i<=n;++i){\n\t\t\tInsert(S[i],i);\n\t\t}\n\t\tBuild();\n//\t\texit(0);\n\t\tfor(int i=1;i<=Q;++i){\n\t\t\tint l,r;\n\t\t\tread(l);\n\t\t\tread(r);\n\t\t\tEnd[pos[r]].push_back(make_pair(r-l+1,i));\t\t\t\n\t\t}\n\t\tCalc(1);\n\t\tfor(int i=1;i<=Q;++i){\n\t\t\tcout<<Ans[i]<<'\\n';\n\t\t}\n\t}\n}SAM;\nint main(){\n//\tfreopen(\"cutting.in\",\"r\",stdin);\n//\tfreopen(\"cutting.out\",\"w\",stdout);\n\tscanf(\"%d%d\",&n,&Q);\n\tscanf(\"%s\",S+1);\n\tSAM.Solve();\n\treturn 0;\n}\n```\n",
        "postTime": 1553958183,
        "uid": 28147,
        "name": "\u5289\u5b50\u98ba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4384 \u3010[\u516b\u7701\u8054\u80032018]\u5236\u80e1\u7a9c\u3011"
    }
]