[
    {
        "content": "# \u9898\u89e3\n\n\u9898\u76ee\u8981\u6c42 \u603b\u4ea4\u901a\u91cf\u4e0d\u51cf\u5c11  \n\u82e5 \u603b\u4ea4\u901a\u91cf \u589e\u52a0\u7684\u8bdd\uff0c\u4e00\u5b9a\u4e0d\u4f18  \n\u6240\u4ee5 \u603b\u4ea4\u901a\u91cf \u5b88\u6052  \n\u4e5f\u5c31\u662f ****\u6211\u4eec\u4e0d\u751f\u4ea7\u6d41\u91cf \uff0c\u6211\u4eec\u53ea\u505a\u6d41\u91cf\u7684\u642c\u8fd0\u5de5****  \n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5  \n\u5c06 \u538b\u7f29 \u770b\u6210 **\u9000\u6d41**  \n\u5c06 \u6269\u5bb9 \u770b\u6210 **\u589e\u5e7f**  \n\u90a3\u4e48 $X-Y \\Rightarrow \\Delta$\u603b\u8d39\u7528  $\\Rightarrow$  \u538b\u7f29\u5bfc\u81f4\u7684\u8d39\u7528$-$\u6269\u5bb9\u5bfc\u81f4\u7684\u8d39\u7528  \n\u538b\u7f29 $\\Rightarrow$  $(v,u,c)(c!=0)$ \u8fb9\u6743$\\ a-d $   \n\u589e\u5e7f $\\Rightarrow$ $(u,v,inf)\\ \\ \\ \\ \\ \\ \\ \\ \\ $ \u8fb9\u6743$\\  b+d$  \n\u8fd9\u6837\u5efa\u56fe\u540e\uff0c\u4f1a\u51fa\u73b0\u4e00\u4e9b\u73af\uff0c\u6bcf\u4e00\u4e2a\u73af\uff0c\u90fd\u662f\u4e00\u4e2a\u6d41\u91cf\u642c\u8fd0\u7684\u9014\u5f84  \n\n\u4ee4 $$max\\{\\ (X-Y)/k\\ \\}=ans$$\n\u5219\u5bf9\u4e8e\u56fe\u4e2d\u4efb\u610f\u4e00\u4e2a\u73af\uff0c\u6709 $$ans>=(X-Y)/k $$\u53ef\u63a8\u77e5 $$ ans \\times k-(X-Y)>=0 $$  \n\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u4e00\u4e2a$mid$  \n\u5f53 $mid>=ans$ \u65f6\uff0c$mid \\times k-(X-Y)>=0 $   \n\u5f53 $mid<\\ \\ \\ ans$ \u65f6\uff0c$mid \\times k-(X-Y)<\\ \\ \\ 0$   \n\u5e76\u5c06\u8d39\u7528$ (a-d\\ or\\ b+d) $\u5b58\u6210\u8fb9\u6743\uff0c\u5c06$\\ k\\ $\u770b\u6210\u662f\u73af\u4e0a\u7684\u70b9\u6570 $($\u73af\u4e0a\u7684\u70b9\u6570$=$\u73af\u4e0a\u7684\u8fb9\u6570$=$ $k)$  \n\u4e5f\u5c31\u662f\u627e\u5230\u4e00\u4e2a\u70b9\u5c31 $+mid$\uff0c\u76f8\u5f53\u4e8e\u662f\u5c06\u8fb9\u6743\u770b\u6210\u4e86 $($\u8fb9\u6743$+mid)$   \n\u90a3\u4e48\uff0c\u5f53 $mid \\times k-(X-Y)<0\\Rightarrow \\sum e[i]<0(e[i]$\u4e3a\u8fb9\u6743$)$ \u65f6\uff0c\u8fd9\u4e2a\u73af\u4e3a\u4e00\u4e2a\u8d1f\u73af   \n\u4e8e\u662f\u6211\u4eec\u4e8c\u5206\u7684\u5224\u65ad\u6761\u4ef6\u5c31\u53ef\u4ee5\u6362\u6210\u56fe\u4e2d\u662f\u5426\u6709\u8d1f\u73af  \n\u5373  \n\u5f53$\\ mid>=ans\\ $\u65f6\uff0c$mid \\times k-(X-Y)>=0\\ $ \u65e0\u8d1f\u73af   \n\u5f53$\\ mid<\\ \\ \\ ans\\ $\u65f6\uff0c$mid \\times k-(X-Y)< 0\\ \\ \\ \\ $ \u6709\u8d1f\u73af  \n\u7136\u540e$spfa$\u5224\u8d1f\u73af\u5373\u53ef \n# \u4ee3\u7801\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\n#define eps 1e-3\n#define inf 1e9\n#define N 5005\n\nint n,m;\ninline int read() {\n\tint tmp=0,w=1;\n\tchar ch=0;\n\twhile(!isdigit(ch)) {if(ch=='-') w=-1;ch=getchar();}\n\twhile(isdigit(ch)) tmp=(tmp<<1)+(tmp<<3)+ch-'0',ch=getchar();\n\treturn tmp*w;\n}\n\nstruct node {\n\tint v,f,nex;\n}e[N<<1];\nint tot,h[N];\nvoid add(int u,int v,int f) {\n\te[++tot].v=v,e[tot].f=f,e[tot].nex=h[u],h[u]=tot;\n}\n\nbool vis[N];\ndouble dis[N];\nbool spfa(int x,double mid) {\n\tvis[x]=1;\n\tint xx;\n\tfor(int i=h[x];i;i=e[i].nex) {\n\t\txx=e[i].v;\n\t\tif(dis[xx]>dis[x]+e[i].f+mid) {\n\t\t\tdis[xx]=dis[x]+e[i].f+mid;\n\t\t\tif(vis[xx]) return 1;\n\t\t\tif(spfa(xx,mid)) return 1;\n\t\t}\n\t}\n\tvis[x]=0;\n\treturn 0;\n}\nbool pd(double mid) {\n\tmemset(vis,0,sizeof(vis));\n\tmemset(dis,0,sizeof(dis));\n\tfor(int i=1;i<=n;++i) if(spfa(i,mid)) return 1;\n\treturn 0;\n}\nvoid Bsearch() {\n\tdouble l=0,r=inf,mid;\n\twhile(r-l>=eps) {\n\t\tmid=(l+r)/2;\n\t\tif(pd(mid)) l=mid;\n\t\telse r=mid;\n\t}\n\tprintf(\"%.2lf\",l);\n}\n\nint main()\n{\n\tn=read()+2,m=read();\n\tint u,v,a,b,c,d;\n\tfor(int i=1;i<=m;++i) {\n\t\tu=read(),v=read(),a=read(),b=read(),c=read(),d=read();\n\t\tif(c!=0) add(v,u,a-d);\n\t\tadd(u,v,b+d);\n\t}\n\tBsearch();\n\treturn 0;\n}\n```",
        "postTime": 1520047883,
        "uid": 36728,
        "name": "\u96e8\u5b63",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3288 \u3010[SCOI2014]\u65b9\u4f2f\u4f2f\u8fd0\u6930\u5b50\u3011"
    },
    {
        "content": "> \u4fee\u6539\u4e86\u4e00\u4e0b\u6392\u7248\n\n\u8fd9\u9898\u795eTM\u6807\u7b7e\u7f51\u7edc\u6d41~~\u4f3c\u4e4e\u7528\u5230\u4e86\u7f51\u7edc\u6d41\u7684\u601d\u60f3~~\u2026\u2026\n\n\u9996\u5148\uff0c\u8fd9\u9898\u80af\u5b9a\u662f\u5206\u6570\u89c4\u5212\uff0c\u56e0\u4e3ata\u8981\u6c42\u8c03\u6574\u4e4b\u540e\u5fc5\u987b\u8981\u4fdd\u6301\u6bcf\u6761\u9053\u8def\u6ee1\u8d1f\u8377\uff0c\u4e14\u603b\u4ea4\u901a\u91cf\u4e0d\u4f1a\u51cf\u5c11\n\n\u5982\u679c\u603b\u4ea4\u901a\u91cf\u589e\u52a0\uff0c\u82b1\u8d39\u80af\u5b9a\u4f1a\u589e\u52a0\uff0c\u5373\u5927\u4e8e\u8c03\u6574\u524d\u7684\u82b1\u8d39\n\n\u6240\u4ee5\u8981\u4fdd\u6301\u6d41\u91cf\u4e0d\u53d8\uff0c\u6211\u4eec\u8003\u8651\u7f51\u7edc\u6d41\u7684\u601d\u60f3\n\n\u538b\u7f29$\\rightarrow$\u7f51\u7edc\u6d41\u91cc\u7684\u9000\u6d41\n\n\u6269\u5145$\\rightarrow$\u7f51\u7edc\u6d41\u91cc\u7684\u589e\u5e7f\n\n\u6240\u4ee5\u5bf9\u4e8e\u539f\u56fe\u7ed9\u5b9a\u6bcf\u4e00\u6761\u8fb9$(u,v)$\uff0c\u6211\u4eec\u5728\u65b0\u56fe\u91cc\u5bf9\u5e94\u5efa\u4e24\u6761\u8fb9\n\n$(v,u)$\uff0c\u8fb9\u6743\u4e3a$a_i-d_i$\uff08\u4f60\u538b\u7f29\u4e00\u5355\u4f4d\u82b1\u8d39$a_i$\uff0c\u540c\u65f6\u8fd9\u6761\u8fb9\u5c11\u4e86\u4e00\u5355\u4f4d\u6d41\u91cf\u6240\u4ee5\u82b1\u8d39\u51cf\u53bb$d_i$\uff09\uff0c\u5bf9\u5e94\u538b\u7f29\n\n$(u,v)$\uff0c\u8fb9\u6743\u4e3a$b_i+d_i$\uff08\u4f60\u6269\u5145\u4e00\u5355\u4f4d\u82b1\u8d39$b_i$\uff0c\u540c\u65f6\u8fd9\u6761\u8fb9\u591a\u4e86\u4e00\u5355\u4f4d\u6d41\u91cf\u6240\u4ee5\u82b1\u8d39\u52a0\u4e0a$d_i$\uff09\uff0c\u5bf9\u5e94\u6269\u5145\n\n\u6211\u4eec\u4ee4$tot=max(\\frac{X-Y}{k})$\uff0c\u6240\u4ee5$tot\\ge \\frac{X-Y}{k}$\n\n\u5373$tot\\times k\\ge X-Y$\n\n\u6240\u4ee5\u6211\u4eec\u4e8c\u5206\u4e00\u4e2a\u6570$mid$\uff0c\u5373\u8c03\u6574\u6bd4\u7387\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5728\u65b0\u56fe\u4e2dxjb\u8dd1\uff0c\u7ecf\u8fc7\u7684\u70b9\u6570\uff08\u4e5f\u662f\u8fb9\u6570\uff09\u5c31\u662f\u8c03\u6574\u6b21\u6570\uff0c\u5373$k$\n\n\u56e0\u4e3a\u4f60\u8c03\u6574\u4e00\u6b21\u5c31\u76f8\u5f53\u4e8e\u7ecf\u8fc7\u65b0\u56fe\u91cc\u7684\u4e00\u6761\u8fb9\uff0c\u540c\u65f6\u52a0\u4e0a\u8fd9\u6761\u8fb9\u7684\u8d21\u732e$w$\uff08\u5c31\u662f\u8fb9\u6743\uff09\n\n\u6211\u4eec\u53ef\u4ee5\u628a$X-Y$\u5316\u4e3a$X-(X+\\sum w)$\uff0c\u5373$-\\sum w$\n\n\u6240\u4ee5\u95ee\u9898\u5c31\u8f6c\u4e3a\u4e86\u6bd4\u8f83$mid\\times k$\u548c$-\\sum w$\u7684\u5927\u5c0f\n\n\u5373$mid\\times k+\\sum w$\u662f\u5426\u5927\u4e8e0\n\n\u7136\u540e\u539f\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u5728\u65b0\u56fe\u91cc\u627e\u8d1f\u73af\n\n\u8981\u662f\u6709\u8d1f\u73af\uff0c\u8bf4\u660e$mid\\times k<X-Y$\n\n\u53cd\u4e4b\u8bf4\u660e$mid\\times k\\ge X-Y$\n\n\u8fd9\u6837\u95ee\u9898\u5c31\u89e3\u51b3\u4e86\n\n\u8fd8\u6709\u4e00\u70b9\uff0c\u9898\u76ee\u4e2d\u8981\u6c42\u4e0d\u8c03\u6574\u6e90\u70b9\u8fde\u63a5\u7684\u90a3\u4e00\u6761\u8fb9\uff0c\u6240\u4ee5\u7279\u5224\u4e00\u4e0b~~\u4f46\u6ca1\u7279\u5224\u597d\u50cf\u4e5f\u80fd\u8fc7~~\n\n### \u4ee3\u7801\n```\n# include<iostream>\n# include<cstring>\n# include<cstdio>\n# include<queue>\nusing namespace std;\nconst int MAX=1e4+1;\nconst double ops=1e-3;\nstruct p{\n\tint x,y;\n\tdouble dis;\n}c[MAX];\nint n,m,num;\nint h[MAX];\ndouble d[MAX];\nbool use[MAX];\nint read()\n{\n\tint x=0;\n\tchar ch=getchar();\n\tfor(;!isdigit(ch);ch=getchar());\n\tfor(;isdigit(ch);x=x*10+ch-48,ch=getchar());\n\treturn x;\n}\nvoid add(int x,int y,double dis)\n{\n\tc[++num]=(p){h[x],y,dis},h[x]=num;\n}\nbool spfa(int x,double mid)\n{\n\tuse[x]=1;\n\tfor(int i=h[x];i;i=c[i].x)\n\t  if(d[c[i].y]>d[x]+c[i].dis+mid)\n\t  {\n\t  \td[c[i].y]=d[x]+c[i].dis+mid;\n\t  \tif(use[c[i].y]) return 1;\n\t  \tif(spfa(c[i].y,mid)) return 1;\n\t  }\n\tuse[x]=0;\n\treturn 0;\n}\nbool look(double mid)\n{\n\tmemset(d,0,sizeof(d));\n\tmemset(use,0,sizeof(use));\n\tfor(int i=1;i<=n+2;i++)\n\t  if(spfa(i,mid)) return 1;\n\treturn 0;\n}\nint main()\n{\n\tn=read(),m=read();\n\tfor(int i=1;i<=m;i++)\n\t  {\n\t  \tint x=read(),y=read();\n\t\tdouble A=read(),B=read(),dis=read(),cn=read();\n\t  \tif(x==n+1) A=0,B=0,cn=0;\n\t\tif(dis) add(y,x,A-cn);\n\t  \tadd(x,y,B+cn);\n\t  }\n\tdouble l=0,r=1e8,ans;\n\twhile(l<=r)\n\t{\n\t\tdouble mid=(l+r)/2;\n\t\tif(look(mid))\n\t\tans=mid,l=mid+ops;\n\t\telse r=mid-ops;\n\t}\n\tprintf(\"%.2lf\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1521084940,
        "uid": 49206,
        "name": "Dispwnl",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3288 \u3010[SCOI2014]\u65b9\u4f2f\u4f2f\u8fd0\u6930\u5b50\u3011"
    },
    {
        "content": "\n#### \u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u70b9[\u8fd9\u91cc](https://wa-automaton.github.io/2019/04/22/SCOI2014-Luogu-P3288-\u65b9\u4f2f\u4f2f\u8fd0\u6930\u5b50/)~\n\n\n\n# \u9898\u89e3\n~~\u771f\u662f\u4e2a\u8bed\u6587\u9898~~  \n\u5728\u8270\u96be\u770b\u61c2\u4e86\u9898\u610f\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u65b9\u4f2f\u4f2f\u5b9e\u9645\u4e0a\u662f\u5728DAG\u4e0a\u8dd1\u7f51\u7edc\u6d41\u3002\u6240\u4ee5\u95ee\u9898\u53ef\u4ee5\u7b80\u5316\u4e3a\uff1a\u7ed9\u4e00\u4e2a\u7f51\u7edc\u56fe\uff0c\u53ef\u4ee5\u8fdb\u884c\u589e\u5e7f\u6216\u8005\u9000\u6d41\uff0c\u5bf9\u8fb9i\u589e\u5e7f\u4e00\u6b21\u7684\u8d39\u7528\u4e3a$b_i+d_i$,\u9000\u6d41\u4e00\u6b21\u7684\u8d39\u7528\u4e3a$a_i-d_i$,\uff08\u6ce8\u610f\u8fb9\u6743\u4e3a0\u7684\u8fb9\u4e0d\u80fd\u9000\u6d41\uff09\u6700\u7ec8\u4f7f\u5f97\u603b\u6d41\u91cf\u4e0d\u53d8\uff08\u589e\u5e7f\u548c\u9000\u6d41\u90fd\u9700\u8981\u82b1\u8d39\uff0c\u6240\u4ee5\u603b\u6d41\u91cf\u53d8\u5927\u80af\u5b9a\u4e0d\u4f18\uff09\uff0c\u5e76\u6700\u5927\u5316\u539f\u5f0f\u3002\n\n\u9898\u9762\u7ed9\u7684$(X-Y)/k$\u592a\u96be\u770b\u4e86\uff0c\u6211\u4eec\u7ed9\u5b83\u6362\u4e00\u4e0b\uff1a\n\u4ee4$Y=X+\\Delta w$\uff0c\n\u5219\u539f\u5f0f\u53d8\u4e3a$-\\Delta w/k$\u3002\n\n\u5982\u4f55\u4fdd\u6301\u6d41\u91cf\u4e0d\u53d8\u7684\u60c5\u51b5\u4e0b\uff0c\u4f18\u5316\u589e\u5e7f\u7684\u8d39\u7528\uff1f\n\n\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u5b9a\u7406\uff1a\n> \u6d88\u5708\u5b9a\u7406\uff1a\u4e00\u4e2a\u6d41\u662f\u5f53\u524d\u6d41\u91cf\u4e0b\u7684\u6700\u5c0f\u8d39\u7528\u6d41\uff0c\u7b49\u4ef7\u4e8e\u5f53\u524d\u6b8b\u91cf\u7f51\u7edc\u4e0a\u6ca1\u6709\u8d1f\u8d39\u7528\u5708\u3002\n\n> \u8bc1\u660e\uff1a\u5047\u8bbe\u6b8b\u91cf\u7f51\u7edc\u4e0a\u5b58\u5728\u8d1f\u8d39\u7528\u5708\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u539f\u6765\u4e0d\u7ecf\u8fc7\u8d1f\u5708\u7684\u6d41\u6cbf\u7740\u8fd9\u4e2a\u8d1f\u5708\u589e\u5e7f\u4e00\u6b21\uff0c\u5219\u6211\u4eec\u7684\u6d41\u91cf\u4f1a\u4e0d\u53d8\uff0c\u5e76\u4e14\u51cf\u5c11\u4e86\u6240\u82b1\u7684\u8d39\u7528\u3002\n\n\u6240\u4ee5\uff1a\u6211\u4eec\u73b0\u5728\u7684\u76ee\u6807\u5c31\u662f\u5728\u6b8b\u91cf\u7f51\u7edc\u4e0a\u6cbf\u7740\u8d1f\u5708\u589e\u5e7f,\u4e14$\\text{maximize}\\{-\\Delta w/k\\}$.\n\u56e0\u4e3a\u6211\u4eec\u8981\u6700\u5927\u5316\u6bd4\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u663e\u7136\u8981\u9009\u62e9**\u4e00\u4e2a**\u6700\u4f18\u7684\u73af\u8fdb\u884c\u589e\u5e7f\u3002\u9009\u62e9\u591a\u4e2a\u73af\uff0c\u7b54\u6848\u663e\u7136\u4f1a\u53d8\u52a3\uff08\u6c42\u7684\u662f\u5e73\u5747\u503c\u561b\uff09\u3002\u8fd9\u5c31\u662f\u4e00\u4e2a\u6700\u5c0f\uff08\u5927\uff09\u5e73\u5747\u503c\u56de\u8def\u95ee\u9898\u4e86\u3002\u5957\u7528\u5206\u6570\u89c4\u5212\u7684\u601d\u8def\uff0c\u4e8c\u5206+bellman-ford\u5224\u65ad\u8d1f\u73af\u5c31\u53ef\u4ee5\u4e86\u3002\n\n# \u4ee3\u7801\n```cpp\n// luogu-judger-enable-o2\n#include <cstdio>\n#include <cstring>\n#include <queue>\n\nusing std::queue;\n\nconst int maxn=5000+1000;\nconst double eps=1e-6;\n\nstruct Edge\n{\n    int to,next;double w;\n}edge[maxn<<1];\n\nint head[maxn],cnt;\nint u[maxn],v[maxn],a[maxn],b[maxn],c[maxn],d[maxn];\n\ninline void add(int u,int v,double w)\n{\n    edge[++cnt].next=head[u];\n    edge[cnt].to=v;\n    edge[cnt].w=w;\n    head[u]=cnt;\n}\n\nbool spfa(int s,int n)\n{\n    static bool vis[maxn];\n    static double d[maxn];\n    static int cnt[maxn];\n    queue<int> q;\n    q.push(s);\n    for (int i=1;i<=n;++i) d[i]=1e18;\n    memset(vis,0,sizeof(vis));\n    memset(cnt,0,sizeof(cnt));\n    vis[s]=true;d[s]=0;\n    while (!q.empty())\n    {\n        int u=q.front();q.pop();\n        vis[u]=false;\n        for (int i=head[u];i;i=edge[i].next)\n        {\n            int v=edge[i].to;\n            if (d[v]>d[u]+edge[i].w)\n            {\n                d[v]=d[u]+edge[i].w;\n                cnt[v]=cnt[u]+1;\n                if (cnt[v]>=n) return true;\n                if (!vis[v]) vis[v]=true,q.push(v);\n            }\n        }\n    }\n    return false;\n}\n\ninline bool check(double mid,int n,int m)\n{\n    cnt=0;\n    memset(head,0,sizeof(head));\n    for (int i=1;i<=m;++i)\n    {\n        add(u[i],v[i],mid+(b[i]+d[i]));\n        if (c[i]>0) add(v[i],u[i],mid+(a[i]-d[i]));\n    }\n    return spfa(n-1,n);\n}\n\nint main()\n{\n    int n,m;\n    scanf(\"%d%d\",&n,&m);\n    n+=2;\n    double sigma=0;\n    for (int i=1;i<=m;++i)\n        scanf(\"%d%d%d%d%d%d\",u+i,v+i,a+i,b+i,c+i,d+i),sigma+=a[i]+b[i]+(double)c[i]*d[i];\n    double l=0,r=sigma;\n    while (l+eps<r)\n    {\n        // printf(\"%.3lf %.3lf\\n\",l,r);\n        double mid=(l+r)/2;\n        if (check(mid,n,m)) l=mid;\n        else r=mid;\n    }\n    printf(\"%.2lf\",l);\n}\n```",
        "postTime": 1555945884,
        "uid": 48711,
        "name": "_WA\u81ea\u52a8\u673a",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3288 \u3010[SCOI2014]\u65b9\u4f2f\u4f2f\u8fd0\u6930\u5b50\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u60a8\u4eec\u7684\u8fd9\u4e2a\u627e\u8d1f\u73af\u5f88\u4f18\u79c0\u554a\uff0c\u4e0d\u4ec5\u601d\u8def\u5f88\u5bf9\u5f88\u6b63\u786e\uff0c\u590d\u6742\u5ea6\u4e5f\u540a\u9524\u6211\u8d39\u7528\u6d41\u554a\u2026\u2026\n\n\u4f46\u662f\u76f4\u63a5\u8d39\u7528\u6d41\u4e5f\u53ef\u4ee5\u554aQAQ(\u5f53\u7136\u8981\u5148\u4e8c\u5206)\n\n\u5efa\u56fe\u601d\u8def\uff1a\u4f60\u53d1\u73b0\u589e\u52a0\u5c31\u662f\u589e\u5e7f\uff0c\u4f46\u538b\u7f29\u8fd9\u4e2a\u51cf\u5c11\u4e0d\u592a\u597d\u641e\u554a\uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u6709\u4e00\u4e2a\u6bd4\u8f83\u5999\u7684\u601d\u8def\uff0c\u5148\u628a\u8fd9\u5f20\u56fe\u7ed9\u538b\u7f29\u6ca1\uff0c\u7136\u540e\u6211\u4eec\u518d\u53cd\u6094\uff08\u7c7b\u4f3c\u4e8e\u7f51\u7edc\u6d41\u4e2d\u7684\u53cd\u5411\u8fb9\u601d\u8def\uff09\u3002\n\n\u5373\u5bf9\u4e8e\u9664\u8d77\u70b9\u7684\u90a3\u6761\u8fb9\u5916\uff0c\u5bf9\u4e00\u6761\u8fb9$(u,v,a,b,c,d)$\u5728\u8d39\u7528\u6d41\u4e2d\u5efa\u4e24\u6761\u8fb9\uff1a(\u5047\u8bbe\u5f53\u524d\u4e8c\u5206\u7684\u503c\u4e3a$mid$)\n\n$u->v$\u5efa\u4e00\u6761\u5bb9\u91cf\u4e3a$c$\uff0c\u8d39\u7528\u4e3a$d-a-mid$\u7684\u8fb9\uff0c\u8fd9\u6761\u8fb9\u7684\u542b\u4e49\u4e3a\u6211\u4eec\u4e00\u5f00\u59cb\u628a\u6bcf\u6761\u8fb9\u90fd\u7ed9\u538b\u7f29\u6ca1\u4e86\uff0c\u4f46\u662f\u8fd9\u663e\u7136\u4e0d\u662f\u6700\u4f18\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u53cd\u6094\u7684\u65f6\u5019\u4e5f\u5c31\u662f\u589e\u5e7f\u4e86\uff08\u53cd\u6094\u538b\u7f29==\u589e\u5e7f\uff09\u3002\n\n$u->v$\u518d\u5efa\u4e00\u6761\u5bb9\u91cf\u4e3a$\\infty$\uff0c\u8d39\u7528\u4e3a$d+c+mid$\u7684\u8fb9\uff0c\u8fd9\u6761\u8fb9\u7684\u542b\u4e49\u5c31\u662f\u9898\u76ee\u4e2d\u7684\u6269\u5bb9\u3002\n\n\u8fd9\u6837\u6700\u5c0f\u8d39\u7528\u6700\u5927\u6d41\u8fc7\u540e\uff0c\u6211\u4eec\u7684\u5b9e\u9645\u8d39\u7528\u4e3a \u539f\u56fe\u6bcf\u6761\u8fb9\u7684\u5bb9\u91cf$\\times$\uff08\u5355\u4f4d\u538b\u7f29\u8d39\u7528+$mid$\uff09+\u7f51\u7edc\u6d41\u8dd1\u51fa\u6765\u7684\u8d39\u7528\u3002\n\n\u6bcf\u6b21\u4e8c\u5206\u5c31check\u5f53\u524d\u8dd1\u51fa\u6765\u7684\u8d39\u7528\u80fd\u4e0d\u80fd\u4e25\u683c\u5c0f\u4e8e\u539f\u6765\u7684\u8d39\u7528\u5c31ok\u4e86\uff0c\u6211\u81ea\u8ba4\u4e3a\u4ee3\u7801\u8fd8\u662f\u5199\u7684\u6bd4\u8f83\u6e05\u695a\uff0c\u6709\u6ca1\u8bb2\u660e\u767d\u7684\u5730\u65b9\u5c31\u79c1\u4fe1\u6211\u5427QAQ\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<cmath>\nusing namespace std;\n#define INF 0x3f3f3f3f\n#define M 51000\n#define N 5010\nconst double eps=1e-4;\nstruct node{\n\tint fr,to,next,res;double d;\n}q[M];\nstruct Edge{\n\tint fr,to,a,b,c,d;\n}E[3010];\nint head[N],ss,flow[N],lst[N],que[N<<6],S,T,m;double dis[N],X;bool inq[N];\nvoid addedge(int x,int y,int r,double d)\n{\n\tq[++ss]=(node){x,y,head[x],r, d};head[x]=ss;\n\tq[++ss]=(node){y,x,head[y],0,-d};head[y]=ss;\n}\nbool spfa()\n{\n\tmemset(flow,0x3f,sizeof(flow));\n\tint f=1,e=0;\n\tfor (int i=0;i<=T;++i) dis[i]=1ll<<60;\n\tque[++e]=S;dis[S]=0;\n\twhile(f<=e)\n\t{\n\t\tint u=que[f++];\n\t\tinq[u]=false;\n\t\tfor (int j=head[u];~j;j=q[j].next)\n\t\t\tif (q[j].res&&dis[q[j].to]>dis[u]+q[j].d)\n\t\t\t{\n\t\t\t\tint t=q[j].to;\n\t\t\t\tdis[t]=dis[u]+q[j].d;\n\t\t\t\tflow[t]=min(flow[u],q[j].res);\n\t\t\t\tlst[t]=j;\n\t\t\t\tif (!inq[t]) que[++e]=t,inq[t]=true;\n\t\t\t}\n\t}\n\treturn dis[T]<(1ll<<59);\n}\nbool check(double C)\n{\n\tmemset(head,-1,sizeof(head));ss=-1;double all=0;\n\tfor (int l=1;l<=m;++l)\n\t\tif (E[l].fr==S) addedge(E[l].fr,E[l].to,E[l].c,E[l].d);\n\t\telse\n\t\t{\n\t\t\taddedge(E[l].fr,E[l].to,E[l].c,-E[l].a-C+E[l].d);\n\t\t\taddedge(E[l].fr,E[l].to,INF,E[l].b+C+E[l].d);\n\t\t\tall+=(E[l].a+C)*E[l].c;\n\t\t}\n\twhile(spfa())\n\t{\n\t\tall+=dis[T]*flow[T];\n\t\tfor (int i=T;i^S;i=q[lst[i]].fr)\n\t\t{\n\t\t\tq[lst[i]].res-=flow[T];\n\t\t\tq[lst[i]^1].res+=flow[T];\n\t\t}\n\t}\n\treturn X-all>eps;\n}\nint main()\n{\n\tint n;double l=0,r=0,mid;\n\tscanf(\"%d%d\",&n,&m);S=n+1;T=n+2;\n\tfor (int i=1;i<=m;++i)\n\t{\n\t\tscanf(\"%d%d%d%d%d%d\",&E[i].fr,&E[i].to,&E[i].a,&E[i].b,&E[i].c,&E[i].d);\n\t\tr+=E[i].c*E[i].d;\n\t}\n    X=r;\n\twhile(r-l>eps)\n\t{\n\t\tmid=(l+r)/2;\n\t\tif (check(mid)) l=mid;\n\t\telse r=mid;\n\t}\n\tprintf(\"%.2lf\",l);\n\treturn 0;\n}\n```",
        "postTime": 1544749052,
        "uid": 45876,
        "name": "\u51c4\u9b49",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3288 \u3010[SCOI2014]\u65b9\u4f2f\u4f2f\u8fd0\u6930\u5b50\u3011"
    },
    {
        "content": "# P3288 \u9898\u89e3\n## \u9898\u76ee\u5927\u610f\n$N+2$ \u4e2a\u70b9\uff0c$M$ \u6761\u6709\u5411\u8fb9\uff0c\u6bcf\u6761\u8fb9\u4ece $u_i$ \u5230 $v_i$\uff0c\u7b2c $i$ \u6761\u8fb9\u53ef\u4ee5\u589e\u52a0\u4e00\u70b9\u5bb9\u91cf\u4ee3\u4ef7\u4e3a $b_i$ \u6216\u51cf\u5c0f\u4e00\u70b9\u5bb9\u91cf\u4ee3\u4ef7\u4e3a $a_i$ \u4ee5\u53ca\u5f53\u524d\u5bb9\u91cf $c_i$ \u548c\u4e00\u5355\u4f4d\u901a\u8fc7\u6240\u9700\u7684\u4ee3\u4ef7 $d_i$\u3002\n\n\u8981\u6c42\u6700\u540e**\u6bcf\u6761\u8fb9\u4ecd\u7136\u662f\u6ee1\u6d41\u91cf\u800c\u4e14\u603b\u4ea4\u901a\u91cf\u4e0d\u53d8**\uff0c\u6c42\u8c03\u6574\u540e\u603b\u8d39\u7528\u4e0e\u8c03\u6574\u524d\u603b\u8d39\u7528\u4e4b\u5dee\u9664\u4ee5\u8c03\u6574\u6b21\u6570\u3002\n## \u601d\u8def\n\u4e00\u773c\u5206\u6570\u89c4\u5212\u3002\n\n\u9996\u5148\u6211\u4eec\u8bd5\u7740\u6ee1\u8db3\u6d41\u91cf\u4e0d\u53d8\u7684\u6761\u4ef6\uff0c\u90a3\u6211\u4eec\u80af\u5b9a\u4e0d\u80fd\u53ea\u52a0\u4e0d\u51cf\u4e86\u3002\n\n\u7136\u540e\u6211\u4eec\u8981\u628a\u539f\u56fe\u4e2d\u7684\u6bcf\u4e00\u6761\u8fb9\u62c6\u6210\u4e24\u4e2a\uff0c\u5206\u522b\u662f $u_i$ \u5230 $v_i$\uff0c\u8fb9\u6743\u4e3a $a_i-d_i$ \u548c $v_i$ \u5230 $u_i$\uff0c\u8fb9\u6743\u4e3a $b_i+d_i$\u3002\n\n\u8fd9\u91cc\u7684\u8fb9\u6743\u5c31\u662f\u6211\u4eec\u589e\u52a0\u6216\u51cf\u5c11\u4e00\u70b9\u6d41\u91cf\u6240\u80fd\u9020\u6210\u7684\u603b\u4ee3\u4ef7\uff08\u64cd\u4f5c\u4ee3\u4ef7\u52a0\u901a\u8fc7\u5f53\u524d\u8fb9\u4ee3\u4ef7\uff09\u3002\n\n\u6211\u4eec\u8981\u77e5\u9053\u6709\u8fd9\u4e48\u4e00\u4ef6\u4e8b\uff1a**\u4e00\u4e2a\u6d41\u662f\u5f53\u524d\u6d41\u91cf\u4e0b\u7684\u6700\u5c0f\u8d39\u7528\u6d41\uff0c\u76f8\u5f53\u4e8e\u5f53\u524d\u6b8b\u91cf\u7f51\u7edc\u4e0a\u6ca1\u6709\u8d1f\u8d39\u7528\u5708**\u3002\n\n\u90a3\u4e48\u5c31\u662f\u8981\u5224\u65ad\u662f\u5426\u5b58\u5728\u8d1f\u73af\uff0c\u82e5\u5b58\u5728\u5219 $l=mid$\uff0c\u53cd\u4e4b $r=mid$\u3002\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst double eps = 1e-5;\nint n,m;\nint vis[5005];\ndouble dis[5005];\nvector<pair<int,int> >adj[5005];\nbool spfa(int x,double y){\n//\tcout<<q.front()<<\" \"<<q.size()<<endl;\n\tvis[x] = true;\n\tfor(int j = 0;j<adj[x].size();j++){\n//\t\tcout<<\" from \"<<cur<<\" to \"<<adj[cur][j].first<<endl;\n\t\tif(dis[adj[x][j].first]>dis[x]+adj[x][j].second+y){\n//\t\t\tcout<<\"?\";\n\t\t\tdis[adj[x][j].first] = dis[x]+adj[x][j].second+y;\n\t\t\tif(vis[adj[x][j].first]||spfa(adj[x][j].first,y))return true;\n\t\t}\n\t}\n\tvis[x] = false;\n\treturn false;\n}\nbool check(double x){\n\tmemset(vis,0,sizeof(vis));\n\tmemset(dis,0,sizeof(dis));\n\tfor(int i = 1;i<=n;i++){\n\t\tif(spfa(i,x)){\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nint main(){\n\tcin>>n>>m;\n\tn+=2;\n\tfor(int i = 0;i<m;i++){\n\t\tint u,v,a,b,c,d;\n\t\tscanf(\"%d %d %d %d %d %d\",&u,&v,&a,&b,&c,&d);\n\t\tif(c!=0)adj[v].push_back(make_pair(u,a-d));\n\t\tadj[u].push_back(make_pair(v,b+d));\n\t}\n\tdouble l = 0,r = 1e9;\n\twhile(r-l>eps){\n\t\tdouble mid = (l+r)/2;\n\t\tif(check(mid)){\n\t\t\tl = mid;\n\t\t}else{\n\t\t\tr = mid;\n\t\t}\n\t}\n\tprintf(\"%.2f\",r);\n\treturn 0;\n}\n```",
        "postTime": 1677569768,
        "uid": 260978,
        "name": "Day_Dreamer_H",
        "ccfLevel": 0,
        "title": "P3288 \u9898\u89e3"
    },
    {
        "content": "### [P3288 [SCOI2014]\u65b9\u4f2f\u4f2f\u8fd0\u6930\u5b50](https://www.luogu.com.cn/problem/P3288)\n\n\u4f9d\u7136\u662f\u5206\u6570\u89c4\u5212\uff0c\u5148\u628a\u539f\u6765\u7684\u5f0f\u5b50\u8f6c\u5316\u4e00\u4e0b\uff1a\n\n$\\dfrac{X-Y}{k} \\to \\dfrac{\\sum(abs(c_i-f_i)\\times (-)d_i-cost(c_i-f_i))}{\\sum abs(c_i-f_i)}$\u3002\uff08$f_i$ \u4e3a $i$ \u73b0\u5728\u7684\u6d41\u91cf\uff09\n\n\u8001\u89c4\u77e9\uff0c\u5206\u6570\u89c4\u5212\u4e8c\u5206 $mid$\u3002\n\n$\\dfrac{\\sum(abs(c_i-f_i)\\times (-)d_i-cost(c_i-f_i))}{\\sum abs(c_i-f_i)}<mid$\n\n\u5c06 $cost(c_i,f_i)=abs(c_i-f_i)\\times a_i(b_i)$ \u5e26\u5165\uff0c\u79fb\u9879\u3002\n\n$\\sum abs(c_i-f_i)\\times ((-)d_i-a_i(b_i)-mid)<0$\n\n\u5c06 $a,b,d,-d$ \u62c6\u5206\u5f00\u3002\n\n\u5f53 $c_i-f_i$ \u4e3a\u6b63\u65f6\uff1a\n\n$\\sum abs(c_i-f_i)\\times (-a_i+d_i-mid)<0$\n\n\u5f53 $c_i-f_i$ \u4e3a\u8d1f\u65f6\uff1a\n\n$\\sum abs(c_i-f_i)\\times (-b_i-d_i-mid)<0$\n\n\u6211\u4eec\u8003\u8651\u5b83\u7684\u5b9e\u9645\u610f\u4e49\uff0c\u89c2\u5bdf\u4e8c\u5206\u6027\u8d28\u3002\n\n\u6211\u4eec\u4e8c\u5206\u51fa\u7684 $mid$ \u5bf9\u5e94\u7684\u662f $\\dfrac{X-Y}{k}$ \u7684\u6700\u5927\u503c\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e0d\u5b58\u5728 $\\sum abs(c_i-f_i)\\times ((-)d_i+a_i(b_i)-mid)>0$\n\n\u5982\u679c\u6211\u4eec\u5728\u539f\u672c\u7684\u56fe\u7684\u57fa\u7840\u4e0a\u5efa\u7acb\u4e00\u4e2a\u65b0\u56fe\uff1a\n\n- $v_i\\to u_i$ \u662f\u4e00\u6761\u8fb9\u6743\u4e3a $-a_i+d_i-mid$ \u7684\u8fb9\u3002\uff08\u56e0\u4e3a\u8fd9\u65f6\u5019 $abs(c_i-f_i)>0$ \u5bf9\u5e94\u7684\u662f $v_i\\to u_i$\uff0c\u4e5f\u5c31\u662f\u538b\u7f29\u4e00\u6b21\uff09\n\n- $u_i\\to v_i$ \u662f\u4e00\u6761\u8fb9\u6743\u4e3a $-b_i-d_i-mid$ \u7684\u8fb9\u3002\uff08\u539f\u56e0\u540c\u7406\uff09\n\n\u90a3\u4e48\u5982\u4f55\u5224\u65ad\u662f\u5426\u6709\u5927\u4e8e `0` \u7684\u60c5\u51b5\u634f\uff1f\n\n\u540c\u65f6\u8fd8\u8981\u6ce8\u610f\u4e00\u4e2a\u9690\u85cf\u6761\u4ef6\uff0c\u6bcf\u4e2a\u70b9\u7684\u51fa\u5165\u5ea6\u662f\u4e0d\u53d8\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u8981\u9009\u4e00\u4e2a\u73af\u4f7f\u5f97\u4ed6\u7684\u548c\u5927\u4e8e `0`\u3002\n\n\u6211\u4eec\u53d1\u73b0\u4e0d\u597d\u5224\u65ad\uff0c\u5224\u6b63\u73af\u90a3\u6bd4\u7684\u4e0a\u5224\u8d1f\u73af\u3002\n\n\u6240\u4ee5\u6211\u4eec\u628a\u8fb9\u6743\u5168\u90e8\u90fd\u4e58\u4e0a $-1$\u3002\n\n\u95ee\u9898\u5f97\u89e3\uff0c\u53ea\u9700\u8981\u5728\u65b0\u56fe\u4e4b\u4e0a\u5224\u65ad\u662f\u5426\u5b58\u5728\u8d1f\u73af\u5373\u53ef\uff01\n\u82e5\u6709\u8d1f\u73af\uff0c\u8bf4\u660e $mid$ \u592a\u5c0f\u3002\u5426\u5219\u662f $mid$ \u592a\u5927\u3002\n\n\u6ce8\u610f\uff0c\u4f60\u7684 $v_i\\to u_i$ \u7684\u524d\u63d0\u662f $c_i>0$\u3002\n\n\u5176\u4f59\u7684\u5c31\u770b\u4ee3\u7801\u5427\u3002\n\n### CODE\n\n```cpp\n#include<bits/stdc++.h>\n#define N 1000006\nconst double eps=1e-9;\nconst int inf=1e9;\nusing namespace std;\nint read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nint n,m,head[N],tot;\nstruct fig\n{\n\tint to,next;\n\tdouble val,ini;\n}k[N];\ndouble dis[N];\nbool vis[N];\nvoid add(int from,int to,int val)\n{\n\tk[++tot].to=to;\n\tk[tot].next=head[from];\n\tk[tot].ini=(double)val;\n\thead[from]=tot;\n}\nbool spfa(int now)\n{\n\tvis[now]=1;\n\tfor(int i=head[now],to;i;i=k[i].next)\n\t{\n\t\tto=k[i].to;\n\t\tif(dis[to]>dis[now]+k[i].val)\n\t\t{\n\t\t\tdis[to]=dis[now]+k[i].val;\n\t\t\tif(vis[to]||spfa(to))return 1;\n\t\t}\n\t}\n\tvis[now]=0;\n\treturn 0;\n}\nbool check(double mid)\n{\n\tfor(int i=1;i<=tot;i++)k[i].val=k[i].ini+mid;\n\tfor(int i=1;i<=n;i++)dis[i]=0,vis[i]=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(spfa(i))\n\t\treturn 1;\n\t}\n\treturn 0;\n}\nint main()\n{\n\tn=read()+2;m=read();\n\tfor(int i=1,u,v,a,b,c,d;i<=m;i++)\n\t{\n\t\tu=read();v=read();a=read();\n\t\tb=read();c=read();d=read();\n\t\tadd(u,v,b+d);\n\t\tif(c!=0)add(v,u,a-d);\n\t}\n\tdouble l=0,r=inf,mid;\n\twhile(r-l>eps)\n\t{\n\t\tmid=(l+r)/2.0;\n\t\tif(check(mid))l=mid;\n\t\telse r=mid;\n\t}\n\tprintf(\"%.2f\",r);\n\treturn 0;\n}\n```",
        "postTime": 1673563687,
        "uid": 331947,
        "name": "hegm",
        "ccfLevel": 0,
        "title": "P3288 [SCOI2014]\u65b9\u4f2f\u4f2f\u8fd0\u6930\u5b50 \u9898\u89e3"
    },
    {
        "content": "###   \u6982\u5ff5\n$\\qquad$\u6d41\u91cf\uff1a\u6bcf\u6761\u8fb9\u7ecf\u8fc7\u7684\u6b21\u6570\n\n   $\\qquad$\u539f\u70b9\uff1a\u6d41\u91cf\u7684\u6765\u6e90\u3002\n   \n   $\\qquad$\u6c47\u70b9:\u6d41\u91cf\u7684\u6700\u7ec8\u7ec8\u70b9\uff08\u5728\u672c\u9898\u5bf9\u5e94\u7ec8\u70b9\uff09\u3002\n   \n   $\\qquad$\u6b8b\u91cf\u7f51\u7edc\uff1a\u8fd9\u6761\u8fb9\uff08\u6d41\uff09\u4e2d\u8fd8\u80fd\u6709\u591a\u5c11\u6d41\u91cf\u901a\u8fc7\u3002\n\n\n\n$\\qquad$\u9996\u5148\uff0c\u9898\u76ee\u8981\u6c42\u603b\u4ea4\u901a\u91cf\u4e0d\u53d8\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u6c42\u603b\u4ea4\u901a\u5b88\u6052\uff0c\u4e0d\u751f\u4ea7\uff0c\u53ea\u642c\u8fd0\u3002\n\n$\\qquad$\u6211\u4eec\u53ef\u4ee5\u5bf9\u5e94\u6269\u5bb9\u548c\u538b\u7f29\u5bf9\u5e94\u5efa\u4e24\u6761\u8fb9\uff1a\n\n$\\qquad$\u538b\u7f29$(v,u,ai-di)$\uff08\u4ece$v$\u5230$u$\u6709\u4e00\u6761\u8fb9\u6743$ai-di$\u7684\u8def\uff09\u8fb9\u6743\u4e3a$ai-di$\u662f\u56e0\u4e3a\u538b\u7f29$1$\uff0c\u82b1\u8d39$ai$\uff0c\u4f46\u51cf\u5c11$1$\u4e2a\u5355\u4f4d\uff0c\u8d39\u7528\u51cf\u5c11$di$\u3002\u4e4b\u6240\u4ee5\u8981\u4ece$(v,u)$\u4ece$u$\u8d70\u5230$v$\u4e4b\u540e\uff0c\u5982\u679c\u60f3\u538b\u7f29\u53ef\u4ee5\u518d\u4ece$v$\u8d70\u5411$u$\uff0c\u628a\u7b2c\u4e00\u6b21\u5e26\u8fc7\u53bb\u7684\u6d41\u91cf\u6362\u56de\u53bb\uff0c\u76f8\u5f53\u4e8e\u6094\u68cb\u3002\n\n$\\qquad$\u6269\u5bb9$ ( u,u,ai+di) $\uff08\u4ece$u$\u5230$u$\u6709\u4e00\u6761\u8fb9\u6743$ai+di$\u7684\u8def\uff09\u8fb9\u6743\u4e3a$bi+di$\u662f\u56e0\u4e3a\u6269\u5bb9$1$\uff0c\u82b1\u8d39$bi$\uff0c\u589e\u52a0$di$,\u5982\u679c\u60f3\u6269\u5bb9\uff0c\u5c31\u53ef\u4ee5\u4ece\u81ea\u5df1\u518d\u8dd1\u5411\u81ea\u5df1\uff0c\u8fbe\u5230\u6269\u5bb9\u3002\n\n$\\qquad$\u6211\u4eec\u4ee4$tot=max( \\dfrac{x-y}{k})$ \u5373$tot\\ge \\dfrac{x-y}{k}$\n\n\u6240\u4ee5$tot*k \\ge x-y$\n\n$\\qquad$\u6211\u4eec\u4e8c\u5206$mid$\u8c03\u6574\u6bd4\u7387\uff0c\u4e5f\u5c31\u662f$tot-k$\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0$k$\u5b9e\u9645\u4e0a\u5c31\u662f\u5728\u6211\u4eec\u5728\u521d\u59cb\u5316\u65f6\u5efa\u7684\u65b0\u56fe\u4e0a\u8dd1\u4e00\u6b21\u8fb9\u6570\uff0c\u56e0\u4e3a\u5b9e\u9645\u4e0a\u6bcf\u4e00\u6761\u8fb9\u90fd\u662f\u4ee5\u6b21\u8c03\u8282\u3002\u6211\u4eec\u8fd8\u53ef\u4ee5\u628a$X-Y$\u8f6c\u5316\u4e3a$X-(X+\\sum{}{}di)$\u4e5f\u5c31\u662f$-X$\n\u6240\u4ee5\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u6bd4\u8f83$mid*k$\u4e0e$-\\sum{}{}di$\u7684\u5927\u5c0f\u3002\u82e5$(mid*k)+\\sum{}{}di$\u5c0f\u4e8e\u96f6\uff0c$mid*k$\u5c0f\u4e8e$X-Y$\uff0c\u5426\u5219$mid*k$\u5927\u4e8e$X-Y$,\u9898\u76ee\u5c31\u53d8\u6210\u4e86\u6c42\u8d1f\u73af\u3002\n\u4ee3\u7801\n",
        "postTime": 1572169405,
        "uid": 90880,
        "name": "minkite",
        "ccfLevel": 0,
        "title": "\u65b9\u4f2f\u4f2f\u8fd0\u6930\u5b50"
    },
    {
        "content": "\u89e3\uff1a  \n\u5206\u6570\u89c4\u5212+\u8d1f\u73af   \n\u6211\u4eec\u4e00\u5f00\u59cb\u4f1a\u60f3\u5230\u7f51\u7edc\u6d41\u3002    \n\n\u9996\u5148\u6211\u4eec\u5047\u8bbe\u56fe\u4e2d\u4e00\u5f00\u59cb\u6d41\u91cf\u4e3a0\uff0c\u76ee\u524d\u6211\u4eec\u5904\u4e8e\u589e\u5e7f\u9636\u6bb5\uff0c\u90a3\u4e48\u5bf9\u4e8e\u9898\u76ee\u4e2d\u7684\u4e24\u79cd\u8c03\u6574\u65b9\u5f0f  \n\u538b\u7f29  \u5c31\u76f8\u5f53\u4e8e\u589e\u5e7f\u65f6\u9000\u6d41   \n\u6269\u5bb9  \u5c31\u76f8\u5f53\u4e8e\u4e0d\u65ad\u589e\u5e7f   \n\u56e0\u4e3a\u8981\u201c\u8c03\u6574\u4e4b\u540e\uff0c\u5fc5\u987b\u8981\u4fdd\u6301\u6bcf\u6761\u9053\u8def\u6ee1\u8d1f  \u8377\uff0c\u4e14\u603b\u4ea4\u901a\u91cf\u4e0d\u4f1a\u51cf\u5c11\u201d\uff0c\u90a3\u4e48\u5355\u7eaf\u6269\u5bb9\u663e\u7136\u662f\u4e0d\u4f1a\u66f4\u4f18\u7684  \n\u53ef\u80fd\u5b58\u5728\u7684\u66f4\u4f18\u65b9\u6848\u4e3a   \u5728\u4fdd\u8bc1\u6700\u5927\u6d41\u4e0d\u53d8\u7684\u60c5\u51b5\u4e0b\u4f7f\u5f97\u538b\u7f29\u7684\u6269\u5bb9\u7684\u603b\u8d39\u7528\u52a0\u8d77\u6765\u6700\u5c11\u3002\n\u4e5f\u5c31\u662f\u8bf4\u5b58\u5728\u5982\u4e0b\u6b8b\u91cf\u7f51\u7edc\uff1a   \n\u6269\u5bb9  u -> v  \u82b1\u8d39 b+d   \n\u538b\u7f29  \uff08\u5373\u76f8\u5f53\u4e8e\u53cd\u5411\u8fb9\u6709\u6d41\u91cf\u7684\u8bdd\uff09 \u6ee1\u8db3 c>0 \u65f6 v -> u  \u82b1\u8d39  -(b-a) \u5373a-b  \n\n\n\n\u7136\u540e\u6211\u4eec\u8003\u8651\u5bf9\u95ee\u9898\u6c42\u89e3\uff0c\uff08\u8fd9\u4e00\u770b\u5c31\u662f\u5206\u6570\u89c4\u5212\uff09 \u6211\u4eec\u5c31\u60f3\u8d77\u4e86\u4e8c\u5206\u3002  \n\u5047\u8bbe\u5f53\u524d\u7b54\u6848\u4e3a ans ,\u4ee4 Z=X-Y  \n\u90a3\u4e48\u4e0d\u4f18\u7684\u60c5\u51b5\u4e00\u5b9a\u6ee1\u8db3 Z >= ans * k \u4e5f\u5c31\u662f Z - ans * k >=0  \n==> ans * k -Z <= 0  \nZ=X-Y \u4e5f\u5c31\u662f\u8bf4 Z=\u8c03\u6574\u4e4b\u524d\u7684\u603b\u8d39\u7528\u662f - \u8c03\u6574\u540e\u7684\u603b\u8d39\u7528  \n\n\u4e5f\u5c31\u662f  Z=\u03a3\u6211\u4eec\u5728\u6b8b\u91cf\u7f51\u7edc\u4e2d\u8d70\u8fc7\u7684\u8fb9\u6743\u548c  k=\u6211\u4eec\u5728\u6b8b\u91cf\u7f51\u7edc\u4e2d\u7ecf\u8fc7\u7684\u70b9   \n\u5230\u8fd9\u91cc\uff0c\u6211\u4eec\u8981\u77e5\u9053\u4e00\u4e2a\u5b9a\u7406\u3002   \n\u6d88\u5708\u5b9a\u7406   \n\u6240\u8c13\u6d88\u5708\u5b9a\u7406\uff0c\u5c31\u662f\u5728\u67d0\u4e2a\u6d41 ff \u4e2d\uff0c\u5982\u679c\u5176\u5bf9\u5e94\u7684\u6b8b\u4f59\u7f51\u7edc\u6ca1\u6709\u8d1f\u5708\uff08\u5269\u4f59\u6d41\u91cf\u4e3a 00 \u7684\u8fb9\u89c6\u4e3a\u4e0d\u5b58\u5728\uff09\uff0c\n\n\u90a3\u5b83\u4e00\u5b9a\u5c31\u662f\u5f53\u524d\u6d41\u91cf\u4e0b\u7684\u6700\u5c0f\u8d39\u7528\u6d41  \u3002\n\n\u53cd\u4e4b\u4ea6\u7136\u3002\u5373\u300cff \u662f\u6700\u5c0f\u8d39\u7528\u6d41\u7b49\u4ef7\u4e8e\u5176\u6b8b\u4f59\u7f51\u7edc\u4e2d\u6ca1\u6709\u8d1f\u5708\u300d\u3002\n\n\u6709\u4e86\u8fd9\u4e2a\u5b9a\u7406\uff0c\u6211\u4eec\u5c31\u597d\u505a\u4e86\u3002  \n\u6211\u4eec\u4e8c\u5206ans,\u5c06\u6bcf\u6761\u8fb9\u8fb9\u6743\u52a0\u4e0aans\uff08\u628a\u03a3\u964d\u6389\uff09\uff0c\u5224\u65ad\u662f\u5426\u5b58\u5728\u8d1f\u73af  \n\u641e\u5b9a\u3002\n\n\u8fd8\u4e0d\u61c2\u5f97\u770b\u4ee3\u7801\u5427\u3002  \n[\u4ee3\u7801](http://www.cnblogs.com/adelalove/p/8496554.html)",
        "postTime": 1520061214,
        "uid": 36397,
        "name": "\u6c89\u8fb0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3288 \u3010[SCOI2014]\u65b9\u4f2f\u4f2f\u8fd0\u6930\u5b50\u3011"
    },
    {
        "content": "#\u9898\u89e3\n\n\u76ee\u6807\u5c31\u662f\n\n$$Maximize\\ \\lambda = \\frac{X-Y}{k}$$\n\n\u6309\u7167\u5206\u6570\u89c4\u5212\u7684\u4e00\u822c\u89c4\u5f8b\uff0c\n\n\u6784\u9020\uff1a\n\n$$g(\\lambda) = \\lambda k + Y - X$$\n\n\u7531\u4e8e\u603b\u6d41\u91cf\u4e0d\u53d8\uff0c\u6211\u4eec\u8003\u8651\u8f6c\u79fb\u6d41\u91cf\u3002\n\n\u6ce8\u610f\u5230\uff0c\u5bf9\u4e8e\u6bcf\u6761\u8fb9\uff0c\u6211\u4eec\u5982\u679c\u589e\u52a0\u5176\u5bb9\u91cf\u5219\u4f1a\u589e\u52a0(b[i]+d[i]+lambda)\u70b9\u503c\uff0c\u5982\u679c\u51cf\u5c11\u5c31\u662f(a[i]-d[i]+lambda)\u70b9\u503c\u3002\n\n\u5982\u679c\u53ef\u4ee5\u6784\u6210\u4e00\u4e2a\u8d1f\u73af\uff0c\u90a3\u4e48\u5c31\u4e00\u5b9a\u53ef\u4ee5\u66f4\u4f18\u3002\n\n\u6240\u4ee5\u6211\u4eec\u4e8c\u5206$\\lambda$\uff0ccheck\u5373\u53ef\u3002\n\n#\u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define eps 1e-5\nstruct haha {\n  int x, y, a, b, c, d;\n};\nstruct edge {\n  int from, to;\n  double cost;\n};\nconst int maxn = 5005;\nvector<edge> G[maxn];\nhaha b[maxn];\nint n, m;\nint vis[maxn], flag;\ndouble dist[maxn];\nvoid add_edge(int from, int to, double cost) {\n  G[from].push_back((edge){from, to, cost});\n}\nvoid dfs(int i) {\n  vis[i] = 1;\n  for (int j = 0; j < G[i].size(); j++) {\n    edge &e = G[i][j];\n    if (dist[e.to] > dist[i] + e.cost) {\n      if (vis[e.to])\n        flag = 1;\n      else {\n        dist[e.to] = dist[i] + e.cost;\n        dfs(e.to);\n      }\n    }\n  }\n  vis[i] = 0;\n}\nbool check(double lambda) {\n  for (int i = 1; i <= n; i++)\n    G[i].clear();\n  for (int i = 1; i <= m; i++) {\n    if (b[i].c)\n      add_edge(b[i].y, b[i].x, b[i].a - b[i].d + lambda);\n    add_edge(b[i].x, b[i].y, b[i].b + b[i].d + lambda);\n  }\n  flag = 0;\n  memset(vis, 0, sizeof(vis));\n  memset(dist, 0, sizeof(dist));\n  for (int i = 1; i <= n && !flag; i++) {\n    dfs(i);\n  }\n  return flag;\n}\nint main() {\n  // freopen(\"input\", \"r\", stdin);\n  scanf(\"%d %d\", &n, &m);\n  n += 2;\n  for (int i = 1; i <= m; i++)\n    scanf(\"%d%d%d%d%d%d\", &b[i].x, &b[i].y, &b[i].a, &b[i].b, &b[i].c, &b[i].d);\n  double L = 0, R = 10000000;\n  while (R - L > eps) {\n    double mid = (L + R) / 2;\n    if (check(mid))\n      L = mid;\n    else\n      R = mid;\n  }\n  printf(\"%.2f\\n\", L);\n}\n```\n#\u603b\u7ed3\n\n1. \u56fe\u4e0a\u7684\u5206\u6570\u89c4\u5212\u95ee\u9898\u8981\u8003\u8651\u5206\u644a\u5230\u6bcf\u4e2a\u8fb9\u4e0a\u3002\n\n2. \u5206\u6570\u89c4\u5212\u95ee\u9898\u8981\u6ce8\u610fdouble\u7684\u8d4b\u503c\u3002\n\n\n\u6700\u540e\u505a\u4e00\u4e2a\u5e7f\u544a\uff1a\u6b22\u8fce\u8bbf\u95ee[\u6211\u7684\u535a\u5ba2](www.cnblogs.com/gengchen)\n",
        "postTime": 1489188904,
        "uid": 7429,
        "name": "MrMorning",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3288 \u3010[SCOI2014]\u65b9\u4f2f\u4f2f\u8fd0\u6930\u5b50\u3011"
    },
    {
        "content": "\u672c\u9898\u53ef\u4ee5\u7528\u5206\u6570\u89c4\u5212\uff08\u8fd9\u662f\u4ec0\u4e48\uff1fTAT\uff09\u505a\u554a\u3002\u3002\u3002\u3002\n\n\u5b83\u7684\u601d\u8def\u662f\u8fd9\u4e2a\u6837\u5b50\u7684\uff1a\u5148\u60f3\u4e86\u4e00\u4e0b\uff0c\u52a0\u5bb9\u91cf\u7b49\u4e8e\u662f\u5728\u539f\u6765\u7684\u57fa\u7840\u4e0a\u52a0\u4e86\u4e00\u6761\u65e0\u9650\u5bb9\u91cf\u7684\u4ef7\u683c\u4e3aa-d\u7684\u8fb9\uff0c\u51cf\u5bb9\u91cf\u7b49\u4e8e\u662f\u5728\u539f\u6765\u7684\u57fa\u7840\u4e0a\u52a0\u4e86\u4e00\u6761\u5bb9\u91cf\u4e3ac\u7684\u4ef7\u683c\u4e3ab+d\u7684\u8fb9\uff08\u56e0\u4e3a\u5fc5\u987b\u6ee1\u6d41\uff09,\u7136\u800c\u9898\u76ee\u6240\u6c42\u7684\u662f\u6bd4\u7387\u3002\u53ef\u4ee5\u53d1\u73b0\u56e0\u4e3a\u5fc5\u987b\u6ee1\u6d41\u4e14\u603b\u6d41\u91cf\u4e0d\u53d8\uff0c\u6240\u4ee5\u6d41\u91cf\u662f\u5728\u5404\u4e2a\u8def\u4e0a\u8f6c\u79fb\u7684\uff0c\u6240\u4ee5\u524d\u9762\u6240\u8bf4\u8981\u52a0\u7684\u8fb9\u53ef\u4ee5\u5f62\u6210\u73af\uff0c\u6bcf\u4e00\u4e2a\u73af\u4ee3\u8868\u4e00\u79cd\u6d41\u91cf\u8f6c\u79fb\u7684\u65b9\u6848\u3002\u518d\u601d\u8003\u53ef\u4ee5\u53d1\u73b0\uff0c\u6bd4\u7387\u4e0e\u5230\u5e95\u6211\u6d41\u8fd9\u4e2a\u73af\u7684\u6d41\u91cf\u591a\u5c11\u6ca1\u6709\u5173\u7cfb\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u76f4\u63a5\u770b\u6700\u5927\u8d1f\u6743\u73af\u9664\u4ee5\u73af\u4e2d\u7684\u8282\u70b9\u4e2a\u6570\u5373\u53ef\uff08\u8282\u70b9\u4e2a\u6570\u7b49\u4e8e\u73af\u4e2a\u6570\uff09\uff0c\u90a3\u4e48\u63a5\u4e0b\u6765\u7684\u4e8b\u60c5\u5c31\u662f\u7528spfa\u548c\u4e8c\u5206\u4e86\uff01\uff01\uff01\n\n\n\n\n\n\n\n\n\n    \n\n        \n            \n\n\n    \n\n\n\n\n    \n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<queue>\nusing namespace std;\n#define LL long long\n#define pb push_back\n#define Set(a, v) memset(a, v, sizeof(a))\n#define For(i, a, b) for(int i = (a); i <= (int)(b); i++)\n#define Forr(i, a, b) for(int i = (a); i >= (int)(b); i--)\n#define MAXN (5000+5)\n#define INF 0x3f3f3f3f\nstruct node{\n    int v, dis;\n};\nint n, s, t, num[MAXN];\nvector<node> G[MAXN];\ndouble dis[MAXN];\nbool inq[MAXN];\nbool spfa(double add){\n    queue<int> q;\n    Set(inq, 0); Set(num, 0);\n    For(i, 1, n) dis[i] = INF*1.0;\n    inq[s] = true; dis[s] = 0;\n    q.push(s);\n    while(!q.empty()){\n        int now = q.front(); q.pop();\n        inq[now] = false;\n        if(num[now] > n) return true;\n        For(i, 0, G[now].size()-1){\n            int v = G[now][i].v;\n            double nd = add + (double)G[now][i].dis;\n            if(dis[v] > dis[now]+nd){\n                dis[v] = dis[now]+nd;\n                if(!inq[v]){\n                    num[v]++; inq[v] = true;\n                    q.push(v);\n                }\n            }\n        }\n    }\n    return false;\n}\nint main(){\n    freopen(\"test.in\", \"r\", stdin);\n    freopen(\"test.out\", \"w\", stdout);\n    int m;\n    scanf(\"%d%d\", &n, &m);\n    s = n+1, t = n+2;\n    n += 2;\n    double L = 0, R = 0;\n    For(i, 1, m){\n        int u, v, a, b, c, d;\n        scanf(\"%d%d%d%d%d%d\", &u, &v, &a, &b, &c, &d);\n //       if(u == s || v == s) continue;\n        if(c) G[v].pb((node){u, a-d});\n        G[u].pb((node){v, b+d});\n        if(a-d < 0) R += d-a;\n    }\n    while(R-L > 1e-3){\n        double mid = (L+R)/2;\n        if(spfa(mid)) L = mid;\n        else R = mid;\n    }\n    printf(\"%.2lf\\n\", L);\n    return 0;\n}\n\n```",
        "postTime": 1482924625,
        "uid": 8925,
        "name": "miaowey",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3288 \u3010[SCOI2014]\u65b9\u4f2f\u4f2f\u8fd0\u6930\u5b50\u3011"
    }
]