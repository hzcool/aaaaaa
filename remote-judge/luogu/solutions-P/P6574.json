[
    {
        "content": "\u7701\u9009\u524d\u6700\u540e\u4e00\u7bc7\u9898\u89e3\uff0c\u611f\u89c9\u662f\u4e2a\u6bd4\u8f83\u6e05\u65b0\u7684\u8d2a\u5fc3\u9898\u3002  \nTweetuzki \u795e\u4ed9\u5199\u4e86\u957f\u94fe\u5256\u5206\u548c\u7ebf\u6bb5\u6811\uff0c\u79c1\u4ee5\u4e3a\u4e0d\u5fc5\u8981\u3002\n### \u9898\u610f\n\u5b9a\u4e49\u70b9\u96c6 $V$ \u4e3a\u6811\u7684\u4e00\u4e2a $k-$\u72ec\u7acb\u96c6\uff0c\u5f53\u4e14\u4ec5\u5f53 $\\forall x,y\\in V,dis(x,y)\\ge k$\u3002  \n\u7ed9\u5b9a\u4e00\u68f5\u5927\u5c0f\u4e3a $n$ \u7684\u6811\uff0c\u6c42\u6700\u5927 $k-$\u72ec\u7acb\u96c6\u7684\u5927\u5c0f\u3002  \n$1\\le n,k\\le 2\\times 10^5$\u3002\n\n### \u9898\u89e3\n\u9996\u5148\u8bc1\u660e\u4e00\u4e2a\u91cd\u8981\u7ed3\u8bba\uff1a\u5bf9\u4e8e\u4ee5 $x$ \u4e3a\u6839\u7684\u5b50\u6811\uff0c\u5047\u8bbe\u8be5\u5b50\u6811\u7684\u6700\u5927 $k-$\u72ec\u7acb\u96c6\u5927\u5c0f\u4e3a $f_x$\uff0c\u5219 $x$ \u5b50\u6811\u5bf9 $x$ \u7684\u7236\u4eb2\u7684\u8d21\u732e\u4e3a $f_x-1$ \u6216 $f_x$\u3002\n\n\u8fd9\u4e2a\u4e0a\u754c\u975e\u5e38\u663e\u7136\uff0c\u4e0d\u4f5c\u8d58\u8ff0\u3002  \n\u8003\u8651\u8bc1\u660e\u8fd9\u4e2a\u4e0b\u754c\u3002\u5047\u8bbe\u6211\u4eec\u5f53\u524d\u5728\u6c42\u5b50\u6811 $x$ \u7684\u7b54\u6848\uff0c\u6b63\u5728\u8003\u8651\u5408\u5e76\u5b50\u6811 $y$ \u7684\u7b54\u6848\uff0c\u6211\u4eec\u4ee4 $a,b$ \u5206\u522b\u8868\u793a\u4e4b\u524d\u5df2\u7ecf\u9009\u4e2d\u7684\u70b9\u4e2d\uff0c\u6df1\u5ea6\u6700\u5c0f\u70b9\u548c\u975e\u4e25\u683c\u6b21\u5c0f\u70b9\uff0c$c,d$ \u5206\u522b\u8868\u793a\u5b50\u6811 $y$ \u4e2d\u6df1\u5ea6\u6700\u5c0f\u70b9\u548c\u975e\u4e25\u683c\u6b21\u5c0f\u70b9\uff0c$d_1=dis(x,a),d_2=dis(x,b),d_3=dis(y,c),d_4=dis(y,d)$\uff0c\u663e\u7136\u5b58\u5728 $d_1\\le d_2,d_3\\le d_4$\u3002  \n$\\because dis(a,b)\\ge k$\uff0c$x$ \u662f $a,b$ \u7684\u516c\u5171\u7956\u5148    \n$\\therefore d_1+d_2\\ge k$  \n\u540c\u7406\uff0c$d_3+d_4\\ge k$\u3002\n\n\u8003\u8651\u8fd9\u6837\u4e00\u4e2a\u8d2a\u5fc3\u7b56\u7565\uff1a\n- \u5982\u679c $d_1+d_3+1\\ge k$\uff0c\u5219\u5b50\u6811 $y$ \u7684\u6240\u6709\u8282\u70b9\u90fd\u53ef\u4ee5\u8ba1\u5165\u7b54\u6848\uff0c\u53d6\u5230\u4e0a\u754c $f_y$\u3002\n- \u5982\u679c $d_1+d_3+1 < k$\uff0c\n\t- \u5982\u679c $d_3+1>d_1$\uff0c\u5728\u6700\u7ec8\u7b54\u6848\u4e2d\u5220\u9664 $a$\uff0c\u52a0\u5165\u5b50\u6811 $y$ \u7684\u6240\u6709\u8282\u70b9\uff0c\u65b9\u6848\u4ecd\u7136\u5408\u6cd5\u4e14\u6700\u4f18\uff0c\u8d21\u732e\u4e3a\u4e0b\u754c $f_y-1$\u3002\n    - \u5982\u679c $d_3+1\\le d_1$\uff0c\u52a0\u5165\u5b50\u6811 $y$ \u9664 $c$ \u4ee5\u5916\u7684\u6240\u6709\u8282\u70b9\uff0c\u65b9\u6848\u4ecd\u7136\u5408\u6cd5\u4e14\u6700\u4f18\uff0c\u8d21\u732e\u4e3a\u4e0b\u754c $f_y-1$\u3002\n    \n\u5bf9\u4e8e\u540e\u9762\u4e24\u79cd\u7b56\u7565\uff0c\u6700\u4f18\u6027\u4e0d\u96be\u8bc1\u660e\u3002\u7531\u4e8e\u4e00\u5b9a\u65e0\u6cd5\u53d6\u5230 $f_y$\uff0c\u56e0\u6b64\u53ea\u5220\u53bb\u4e00\u4e2a\u70b9\u4e00\u5b9a\u662f\u6700\u4f18\u7684\u3002  \n\u5bf9\u4e8e $d_3+1>d_1$ \u7684\u60c5\u51b5\uff0c\u6700\u7ec8\u53ea\u9009\u62e9\u4e86 $b,c,d$ \u4e09\u4e2a\u70b9\u3002\u7531\u4e8e $dis(c,d)\\ge k$\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8bc1\u660e $dis(b,c)\\ge k$ \u5373\u53ef\u3002  \n$\\because d_1<d_3+1,d_1+d_2\\ge k$  \n$\\therefore dis(b,c)=d_2+d_3+1 > d_2+d_1\\ge k$  \n$\\therefore dis(b,c)>k$\n\n\u5bf9\u4e8e $d_3+1\\le d_1$ \u7684\u60c5\u51b5\uff0c\u6700\u7ec8\u9009\u62e9\u4e86 $a,b,d$ \u4e09\u4e2a\u70b9\uff0c\u6211\u4eec\u53ea\u9700\u8bc1\u660e $dis(a,d)\\ge k$\u3002  \n$\\because d_3+1\\le d1,d_3+d_4\\ge k$  \n$\\therefore dis(a,d)=d_1+d_4+1\\ge d_3+d_4+2\\ge k+2$  \n$\\therefore dis(a,d)>k$\n\n\u6240\u4ee5\uff0c\u6bcf\u68f5\u5b50\u6811\u7684\u8d21\u732e\u81f3\u5c11\u4e3a $f_x-1$\u3002\n\n\u6211\u4eec\u5728 dfs \u7684\u8fc7\u7a0b\u4e2d\u7ef4\u62a4\u6bcf\u68f5\u5b50\u6811\u6700\u5927 $k-$\u72ec\u7acb\u96c6\u7684\u5927\u5c0f $f_x$\uff0c\u4ee5\u53ca\u6240\u6709\u53d6\u5230\u6700\u5927\u503c\u7684\u65b9\u6848\u4e2d\uff0c\u6df1\u5ea6\u6700\u5c0f\u7684\u70b9\u7684\u6700\u5927\u6df1\u5ea6 $dep_x$\u3002\n- \u5f53 $dep_x+dep_y+1\\ge k$ \u65f6\uff0c$dep_x\\gets \\min(dep_x,dep_y+1)$\uff0c$f_x\\gets f_x+f_y$\u3002\n- \u5f53 $dep_x+dep_y+1< k$ \u65f6\uff0c$dep_x\\gets \\max(dep_x,dep_y+1)$\uff0c$f_x\\gets f_x+f_y-1$\u3002\n\n\u5408\u5e76\u5b8c\u6240\u6709\u5b50\u6811\u540e\uff0c\u518d\u5224\u65ad\u4e00\u4e0b\u80fd\u4e0d\u80fd\u9009\u6839\u8282\u70b9\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(n)$\uff0c\u4ee3\u7801\u6781\u4e3a\u7b80\u5355\u3002\n\n### \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define reg register\ntypedef long long ll;\nusing namespace std;\nconst int MN=2e5+5;\nint to[MN<<1],nxt[MN<<1],h[MN],cnt;\ninline void ins(int s,int t){\n\tto[++cnt]=t;nxt[cnt]=h[s];h[s]=cnt;\n\tto[++cnt]=s;nxt[cnt]=h[t];h[t]=cnt;\n}\nint n,m,f[MN],dep[MN];\nvoid dfs(int st,int fa=0){\n\tdep[st]=1e9;\n\tfor(reg int i=h[st];i;i=nxt[i])\n\t\tif(to[i]!=fa){\n\t\t\tdfs(to[i],st);\n\t\t\tif(dep[st]+1+dep[to[i]]>=m){\n\t\t\t\tf[st]+=f[to[i]];\n\t\t\t\tdep[st]=min(dep[st],dep[to[i]]+1);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tf[st]+=f[to[i]]-1;\n\t\t\t\tdep[st]=max(dep[st],dep[to[i]]+1);\n\t\t\t}\n\t\t}\n\tif(dep[st]>=m)f[st]++,dep[st]=0;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(reg int i=2,x;i<=n;i++)\n\t\tscanf(\"%d\",&x),ins(i,x+1);\n\tdfs(1);printf(\"%d\\n\",f[1]);\n\treturn 0;\n}\n```",
        "postTime": 1592968505,
        "uid": 17930,
        "name": "Marser",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6574 \u3010[BOI 2017] Cat in a tree\u3011"
    },
    {
        "content": "> \u7ed9\u51fa\u4e00\u68f5 $n$ \u4e2a\u70b9\u7684\u6811\u3002\u5b9a\u4e49 $k-$ \u72ec\u7acb\u96c6\u4e3a\u4e00\u4e2a\u70b9\u96c6\uff0c\u8fd9\u4e2a\u70b9\u96c6\u5185\u6ee1\u8db3\u4efb\u610f\u4e24\u70b9\u95f4\u8ddd\u79bb\u4e0d\u5c0f\u4e8e $k$\u3002\u6c42\u8fd9\u68f5\u6811\u7684\u6700\u5927 $d-$ \u72ec\u7acb\u96c6\u3002\n> \n> $n, d \\le 2 \\times 10 ^ 5$\u3002\n\n\u6b22\u8fce\u89c2\u8d4f\u777f\u667a\u505a\u6cd5\uff01~~\u8d2a\u5fc3\u4e0d\u591f\uff0c\u6570\u636e\u7ed3\u6784\u6765\u51d1~~\n\n\u76f4\u63a5\u4e0a\u4e00\u4e2a\u66b4\u529b DP\uff0c$f_{u, i}$ \u8868\u793a\u9009\u5b8c $u$ \u5b50\u6811\u5185\u7684\u70b9\uff0c\u6700\u540e\u4e00\u4e2a\u9009\u7684\u70b9\u4e0e $u$ \u7684\u8ddd\u79bb\u4e3a $i$ \u7684\u6700\u591a\u9009\u70b9\u4e2a\u6570\u3002\n\n\u8003\u8651\u52a0\u5165\u4e00\u4e2a\u513f\u5b50 $v$ \u7684\u5b50\u6811\u65f6\u5982\u4f55\u8f6c\u79fb\u3002\n\n1. \u513f\u5b50\u90e8\u5206\u4e0d\u9009\u70b9\uff0c\u6ca1\u6709\u66f4\u65b0\uff0c$f_{u, i} = f_{u, i}$\u3002\n1. \u5df2\u52a0\u5165\u90e8\u5206\u4e0d\u9009\u70b9\uff0c\u5168\u90e8\u4ece\u513f\u5b50\u90e8\u5206\u8fc7\u7ee7\u8fc7\u6765\u3002\u5373 $f_{u, i}  = \\max(f_{u, i}, f_{v, i + 1})$\u3002\n1. \u5df2\u52a0\u5165\u90e8\u5206\u548c\u513f\u5b50\u90e8\u5206\u90fd\u9009\u70b9\uff0c\u4e0d\u59a8\u8bbe\u513f\u5b50\u90e8\u5206\u6700\u540e\u4e00\u4e2a\u9009\u7684\u70b9\u4e0e $v$ \u8ddd\u79bb\u4e3a $j$\uff0c\u5219\u5f53\u4e14\u4ec5\u5f53 $i + j + 1 \\ge d$ \u7684\u65f6\u5019\u53ef\u4ee5\u8f6c\u79fb\uff0c\u8f6c\u79fb\u5230 $\\min(i, j + 1)$ \u7684\u4f4d\u7f6e\u3002\u5373 $f_{u, \\min(i, j + 1)} = \\max(f_{u, \\min(i, j + 1)}, f_{u, i} + f_{v, j})$\u3002\n\n\u524d\u4e24\u79cd\u76f4\u63a5\u8f6c\u79fb\u5c31\u662f\u7ebf\u6027\u7684\uff0c\u7b2c\u4e09\u79cd\u7528\u524d\u7f00 / \u540e\u7f00\u6700\u5927\u503c\u4f18\u5316\u540e\u4e5f\u53ef\u4ee5\u505a\u5230\u7ebf\u6027\u8f6c\u79fb\u3002\u5230\u6b64\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n ^ 2)$\u3002\n\n\u6ce8\u610f\u5230 DP \u72b6\u6001\u4e0e\u6df1\u5ea6\u6709\u5173\uff0c\u76f4\u63a5\u4e0a\u957f\u94fe\u5256\u5206\u8fdb\u884c\u4f18\u5316\u3002\u6309\u7167\u957f\u5256\u5957\u8def\uff0cDP \u6570\u7ec4\u76f4\u63a5\u4ece\u504f\u7231\u513f\u5b50\u8fc7\u7ee7\u8fc7\u6765\uff0c\u5176\u5b83\u513f\u5b50\u66b4\u529b\u8f6c\u79fb\u3002\u56e0\u4e3a\u8fd9\u91cc\u7684 DP \u6570\u7ec4\u6d89\u53ca\u5230\u4e86\u4fee\u6539\u548c\u53d6\u6700\u5927\u503c\uff0c\u8981\u5957\u4e00\u4e2a\u7ebf\u6bb5\u6811\u6765\u4ee3\u66ff\u4e4b\u524d\u7684\u524d\u7f00 / \u540e\u7f00\u6700\u5927\u503c\u52a0\u901f\u8f6c\u79fb\u7684\u65b9\u6cd5\u3002\n\n\u957f\u5256\u662f\u7ebf\u6027\u7684\uff0c\u53ea\u6709\u4e2a\u7ebf\u6bb5\u6811\u7684 $\\log$\u3002\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n \\log n)$\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <algorithm>\n#include <cstdio>\n#include <cstring>\n\nconst int MaxN = 200000, MaxV = (1 << 19);\n\nstruct graph_t {\n  int cnte;\n  int head[MaxN + 5], to[MaxN + 5], next[MaxN + 5];\n\n  inline void addEdge(int u, int v) {\n    cnte++;\n    to[cnte] = v;\n    next[cnte] = head[u];\n    head[u] = cnte;\n  }\n};\n\nint N, D;\nint Fa[MaxN + 5], Len[MaxN + 5], Wson[MaxN + 5];\nint Id[MaxN + 5], Dfn[MaxN + 5], Dfc;\ngraph_t Gr;\n\nstruct SegTree {\n  int L[MaxV + 5], R[MaxV + 5];\n  int Mx[MaxV + 5];\n\n  void buildTree(int left, int right, int i = 1) {\n    L[i] = left, R[i] = right;\n    Mx[i] = 0;\n    if (L[i] == R[i]) return;\n    int mid = (L[i] + R[i]) >> 1;\n    buildTree(left, mid, i << 1);\n    buildTree(mid + 1, right, i << 1 | 1);\n  }\n\n  void updateTree(int pos, int val, int i = 1) {\n    if (L[i] == R[i]) {\n      Mx[i] = std::max(Mx[i], val);\n      return;\n    }\n    int mid = (L[i] + R[i]) >> 1;\n    if (pos <= mid) updateTree(pos, val, i << 1);\n    else updateTree(pos, val, i << 1 | 1);\n    Mx[i] = std::max(Mx[i << 1], Mx[i << 1 | 1]);\n  }\n\n  int queryTree(int left, int right, int i = 1) {\n    if (left > right) return 0;\n    if (L[i] == left && R[i] == right) return Mx[i];\n    int mid = (L[i] + R[i]) >> 1;\n    if (right <= mid) return queryTree(left, right, i << 1);\n    else if (left > mid) return queryTree(left, right, i << 1 | 1);\n    else return std::max(queryTree(left, mid, i << 1), queryTree(mid + 1, right, i << 1 | 1));\n  }\n};\nSegTree T;\n\nvoid init() {\n  scanf(\"%d %d\", &N, &D);\n  for (int i = 1; i < N; ++i) {\n    int f;\n    scanf(\"%d\", &f);\n    Gr.addEdge(f + 1, i + 1);\n  }\n}\n\nvoid dfs1(int u) {\n  Len[u] = 0;\n  for (int i = Gr.head[u]; i; i = Gr.next[i]) {\n    int v = Gr.to[i];\n    Fa[v] = u;\n    dfs1(v);\n    if (Len[v] + 1 > Len[u]) {\n      Len[u] = Len[v] + 1;\n      Wson[u] = v;\n    }\n  }\n}\n\nvoid dfs2(int u) {\n  Dfc++;\n  Id[u] = Dfc, Dfn[Dfc] = u;\n  if (Wson[u] != 0) dfs2(Wson[u]);\n  for (int i = Gr.head[u]; i; i = Gr.next[i]) {\n    int v = Gr.to[i];\n    if (v == Wson[u]) continue;\n    dfs2(v);\n  }\n}\n\ninline void upt(int u, int v) {\n  int n = Len[v] + 1;\n  static int a[MaxN + 5], sufmax[MaxN + 5], f[MaxN + 5];\n  for (int i = 0; i < n; ++i) a[i + 1] = T.queryTree(Id[v] + i, Id[v] + i);\n  sufmax[n] = a[n];\n  for (int i = n - 1; i >= 1; --i) sufmax[i] = std::max(sufmax[i + 1], a[i]);\n  for (int i = 0; i <= n; ++i) f[i] = 0;\n  for (int i = 0; i <= n; ++i) {\n    if (i > D - i) break;\n    if (D - i > n) continue;\n    f[i] = std::max(f[i], T.queryTree(Id[u] + i, Id[u] + i) + sufmax[D - i]);\n  }\n  for (int i = 1; i <= n; ++i) {\n    int val = sufmax[i] + T.queryTree(std::max(Id[u] + i, Id[u] + D - i), Id[u] + Len[u]);\n    f[i] = std::max(f[i], val);\n  }\n  for (int i = 0; i <= n; ++i) T.updateTree(Id[u] + i, f[i]);\n}\n\nvoid dfs3(int u) {\n  if (Wson[u] != 0) dfs3(Wson[u]);\n  T.updateTree(Id[u], T.queryTree(Id[u] + D, Id[u] + Len[u]) + 1);\n  for (int i = Gr.head[u]; i; i = Gr.next[i]) {\n    int v = Gr.to[i];\n    if (v == Wson[u]) continue;\n    dfs3(v);\n    upt(u, v);\n  }\n}\n\nvoid solve() {\n  dfs1(1);\n  dfs2(1);\n  T.buildTree(1, N);\n  dfs3(1);\n  printf(\"%d\\n\", T.queryTree(Id[1], Id[1] + Len[1]));\n}\n\nint main() {\n  init();\n  solve();\n  return 0;\n}\n```",
        "postTime": 1590913439,
        "uid": 48843,
        "name": "Tweetuzki",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6574 \u3010[BOI 2017] Cat in a tree\u3011"
    },
    {
        "content": "\u770b\u5230 ix35 \u5728 cmd \u535a\u5ba2\u4e0b\u8bc4\u8bba\u201c\u5f26\u56fe\u6700\u5927\u72ec\u7acb\u96c6\u201d\u4e8e\u662f\u60f3\u51fa\u4e86\u8fd9\u4e2a\u505a\u6cd5\uff08\uff08\uff08\n\n\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a\u6bcf\u4e2a\u70b9\u5411\u4e0e\u5b83 $dis\\le k-1$ \u7684\u70b9\u8fde\u8fb9\uff0c\u6c42\u6700\u5927\u72ec\u7acb\u96c6\u3002\n\n\u8fd9\u662f\u4e00\u4e2a\u5b50\u6811\u56fe\uff08\u8fde\u8fb9\u5411\u4e00\u4e2a\u6811\u4e0a\u8fde\u901a\u5757\uff09\uff0c\u800c\u5b50\u6811\u56fe\u7684\u5b8c\u7f8e\u6d88\u9664\u5e8f\u5217\u662f\u6309\u7167\u6700\u6d45\u70b9\u4ece\u6df1\u5230\u6d45\u6392\u5217\u7684\u3002\n\n\u4e8e\u662f\u628a\u6240\u6709\u70b9\u6309\u7167 $dep$ \u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u76f4\u63a5\u8d2a\u5fc3\uff0c\u80fd\u52a0\u5165\u5c31\u52a0\u5165\u3002\uff08\u9700\u8981\u5224\u65ad $dis\\le k-1$ \u7684\u70b9\u6709\u6ca1\u6709\u5df2\u7ecf\u88ab\u52a0\u5165\u4e86\u7684\uff0c\u53ef\u4ee5\u62c9\u4e2a\u70b9\u5206\u6811\u677f\u5b50\uff09\u3002\u4ea4\u4e0a\u53bb\u53d1\u73b0\u8fd9\u6837\u662f\u5bf9\u7684\u3002\n\n\u4ee3\u7801\u5c31\u4e0d\u653e\u4e86\u3002",
        "postTime": 1637937392,
        "uid": 151935,
        "name": "Rainbow_qwq",
        "ccfLevel": 0,
        "title": "P6574 [BalticOI 2017] Cat in a tree"
    },
    {
        "content": "### [BalticOI 2017] Cat in a tree\n\n\u795e\u4ed9\u7f8e\u5c11\u5973 Tweetuzki \u5b66\u59d0\u7528\u4e86\u957f\u5256+\u7ebf\u6bb5\u6811\uff0c\u79c1\u4ee5\u4e3a\u957f\u5256\u53ef\u4ee5\u505a\u5230\u7ebf\u6027\u3002\n\n##### \u7b80\u8981\u9898\u610f\n\n- \u7ed9\u5b9a $n$ \u4e2a\u70b9\u7684\u6811\uff0c\u70b9\u96c6 $S$ \u5408\u6cd5\u5f53\u4e14\u4ec5\u5f53 $\\forall u,v\\in S, dis(u,v)\\ge k$\u3002\u6c42 $\\max |S|$\u3002\n\n- $n \\le 2\\times 10^5$\u3002\n\n##### \u9898\u89e3\n\n\u8bb0 $f_{u,i}$ \u8868\u793a\u4ee5 $u$ \u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c\u9009\u62e9\u7684\u6df1\u5ea6\u6700\u6d45\u7684\u70b9\u6df1\u5ea6**\u5927\u4e8e\u7b49\u4e8e** $i$ \u7684\u6700\u5927\u70b9\u96c6\u5927\u5c0f\u3002\u6b64\u5904\u6df1\u5ea6\u9488\u5bf9\u8fd9\u4e00\u5b50\u6811\u800c\u8a00\u3002\u8f6c\u79fb\u8003\u8651\u52a0\u5165\u4e00\u68f5\u5b50\u6811\uff0c\u65b9\u7a0b\u6bd4\u8f83\u7b80\u5355\uff1a\u66f4\u65b0 $f_{u,j}$ \u65f6\uff0c\u8bb0 $t = \\max(j,k-j)$\uff08\u5206\u522b\u4fdd\u8bc1\u72b6\u6001\u7684\u5408\u6cd5\u6027\u548c\u7b54\u6848\u7684\u5408\u6cd5\u6027\uff09\uff0c$f_{u,j}\\leftarrow \\max(f_{u,j}+f_{v,t-1}, f_{u,t}+f_{v,j-1})$\uff0c\u6700\u540e\u505a\u4e00\u904d\u540e\u7f00 $\\max$ \u5373\u53ef\u3002\n\n\u6ce8\u610f\u5230\u5f53 $j \\gt dep_u$ \u65f6\uff0c$f_{u,j}=0$\u3002\u6240\u4ee5\u8f6c\u79fb\u65f6\u53ea\u9700\u8981\u679a\u4e3e\u5230 $dep_v$ \u5373\u53ef\u3002\u8fd9\u542f\u53d1\u6211\u4eec\u4f7f\u7528\u957f\u5256\u4f18\u5316\u3002\n\n##### \u4ee3\u7801\n\n\u6ce8\u610f\u8fb9\u754c\u7ec6\u8282\u3002\n\n``` cpp\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n\nusing namespace std;\n\nconst int MAXN = 200010;\n\nint n, K;\nstruct edge{\n\tint ne, to;\n\tedge(int N=0,int T=0):ne(N),to(T){}\n}e[MAXN<<1];\nint fir[MAXN], num = 0;\ninline void join(int a, int b)\n{\n\te[++num] = edge(fir[a], b);\n\tfir[a] = num;\n}\nint buf[MAXN], *f[MAXN], *now = buf, dep[MAXN], son[MAXN], fa[MAXN];\nvoid predfs(int u, int pa)\n{\n\tfa[u] = pa;\n\tfor(int i=fir[u],v;i;i=e[i].ne) if((v = e[i].to) != pa)\n\t{\n\t\tpredfs(v, u);\n\t\tdep[u] = max(dep[u], dep[v]+1);\n\t\tif(dep[son[u]] < dep[v]) son[u] = v;\n\t}\n\tdep[u] = dep[son[u]] + 1;\n}\nvoid dfs(int u)\n{\n\tf[u][0] = 1; \n\tif(son[u])\n\t{\n\t\tf[son[u]] = f[u] + 1;\n\t\tdfs(son[u]);\n\t\tif(K-1 < dep[son[u]]) f[u][0] += f[son[u]][K-1];\n\t\tf[u][0] = max(f[u][1], f[u][0]);\n\t}\n\tfor(int i=fir[u],v;i;i=e[i].ne) if((v=e[i].to) != fa[u] && v != son[u])\n\t{\n\t\tf[v] = now; now += dep[v];\n\t\tdfs(v);\n\t\tfor(int j=0;j<=dep[v];j++)\n\t\t{\n\t\t\tint k = max(j, K-j);\n\t\t\tf[u][j] = max(((k) ? (j<dep[u]?f[u][j]:0) + (k<=dep[v]?f[v][k-1]:0) : 0), (j ? (k<dep[u]?f[u][k]:0) + f[v][j-1] : 0));\n\t\t}\n\t\tfor(int j=dep[v];~j;j--) f[u][j] = max(f[u][j], j==dep[u]-1?0:f[u][j+1]);\n\t}\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&K);\n\tfor(int i=2,x;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&x);\n\t\tjoin(i, ++x);\n\t\tjoin(x, i);\n\t}\n\tpredfs(1, 0);\n\tf[1] = now; now += dep[1];\n\tdfs(1);\n\tprintf(\"%d\\n\",f[1][0]);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1631353115,
        "uid": 151601,
        "name": "Aphros",
        "ccfLevel": 0,
        "title": "[BalticOI 2017] Cat in a tree"
    }
]