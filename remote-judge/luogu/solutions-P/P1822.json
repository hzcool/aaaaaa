[
    {
        "content": "\u4e0d\u660e\u767d\u4e3a\u4ec0\u4e48\u8fd9\u9898\u4f1a\u88ab\u6254\u5230\u201c\u5206\u5757\u201d\u91cc\u3002\n\n\u8bf4\u4e00\u4e0b\u6211\u7684\u505a\u6cd5\uff08\u987a\u5e26\u4e00\u63d0\uff0c\u76ee\u524dAC\u4ee3\u7801\u4e2d\u9664\u4e86\u6253\u8868\u7684\u4e4b\u5916\u53ea\u6709\u4e24\u4e2a\uff0c\u53e6\u4e00\u4e2a\u65e2\u770b\u4e0d\u660e\u767d\u6709\u7f16\u8bd1\u4e0d\u8fc7\uff09\u3002\n\n\u9996\u5148\u5199\u4e2a\u66b4\u529b\uff0c\u53ef\u4ee5\u53d1\u73b0$A=1,B=10^7$\u7684\u65f6\u5019\u7b54\u6848\u4e5f\u53ea\u6709\u4e09\u4e07\u591a\u3002\n\n\u6211\u4eec\u8003\u8651\u5982\u679c\u6709\u4e00\u4e2a\u56fe\uff0c\u6bcf\u4e2a\u9876\u70b9\u6709\u4e00\u4e2a\u6570\uff0c\u7136\u540e\u4ece$magic[x]$\u5230$x$\u8fde\u8fb9\uff0c\u90a3\u4e48\u663e\u7136\u67d0\u4e2a\u6570\u7684\u9b54\u6cd5\u6307\u7eb9\u662f$7$\u5f53\u4e14\u4ec5\u5f53\u4ece$7$\u53ef\u4ee5\u5230\u8fbe\u5b83\u3002\u90a3\u4e48\u6211\u4eec\u4ece$7$\u5f00\u59cb\u5e7f\u641c\uff08\u56fe\u5e76\u4e0d\u7528\u5b9e\u9645\u5efa\u51fa\u6765\uff09\u3002\n\n\u5e7f\u641c\u6bcf\u6b21\u62d3\u5c55\u65f6\u6211\u4eec\u9700\u8981\u4ece$a$\u51fa\u53d1\u62d3\u5c55\u51fa\u6240\u6709$magic[b]=a$\u7684$b$\u3002\u8003\u8651\u679a\u4e3e$b$\u7684\u4e2a\u4f4d\uff0c\u90a3\u4e48\u56e0\u4e3a$b$\u7684\u5341\u4f4d\u4e0e\u4e2a\u4f4d\u5dee\u7684\u7edd\u5bf9\u503c\u662f$a$\u7684\u4e2a\u4f4d\uff0c\u6240\u4ee5$b$\u7684\u5341\u4f4d\u81f3\u591a\u6709\u4e24\u79cd\u53ef\u80fd\uff1b\u540c\u7406\uff0c\u786e\u5b9a$b$\u7684\u5341\u4f4d\u540e\uff0c\u5176\u767e\u4f4d\u6570\u81f3\u591a\u6709\u4e24\u79cd\u53ef\u80fd...\u5982\u6b64\u505a\u4e0b\u53bb\uff0c\u6700\u540e\u6700\u591a\u62d3\u5c55\u51fa$2^l$\u4e2a\u6570\uff0c\u5176\u4e2d$l$\u662f$a$\u7684\u4f4d\u6570\u3002\u4f46\u5b9e\u9645\u4e0a\u51e0\u4e4e\u4e0d\u53ef\u80fd\u6709\u90a3\u4e48\u591a\u6570\uff0c\u56e0\u4e3a\u8bb8\u591a\u9009\u62e9\u4f1a\u4f7f\u67d0\u4e00\u4f4d\u4e0a\u7684\u6570\u4e0d\u5728$[0,9]$\u8303\u56f4\u5185\uff08\u5b9e\u9645\u4e0a\uff0c\u5982\u679c$b$\u7684\u524d\u4e24\u4f4d\u4e0d\u7b49\uff0c\u5bb9\u6613\u8bc1\u660e$magic[b]\\leq10^l\\Rightarrow b\\leq 10^{l+1}$\uff0c\u4e8e\u662f\u5e73\u5747\u6bcf\u4e2a\u6570\u80fd\u6269\u5c55\u51fa$10$\u4e2a\u6570\uff09\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5$dfs$\u5b9e\u73b0\u3002\n\n\u4e0d\u8fc7\u8981\u6ce8\u610f\u4e00\u70b9\uff1a\u7531\u4e8e\u6c42$magic[b]$\u7684\u5b9a\u4e49\u662f\u76f8\u90bb\u4e24\u9879\u53d6\u7edd\u5bf9\u503c\u518d\u53bb\u6389\u524d\u5bfc\u96f6\uff0c\u6240\u4ee5\u7531$magic[b]$\u6c42$b$\u7684\u65f6\u5019\u53ef\u80fd\u8981\u628a$b$\u7684\u6700\u9ad8\u4f4d\u91cd\u590d\u51e0\u904d\uff0c\u8fd9\u6837\u6c42\u51fa\u7684$magic$\u4e0d\u53d8\uff08\u56e0\u4e3a\u53ea\u662f\u591a\u4e86\u524d\u5bfc\u96f6\uff09\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <algorithm>\n#include <cstdio>\ntypedef long long LL;\nbool mm[10000050];\nint p[10], A, B;\nint queue[40000], num, head, tail;\nvoid dfs(int x, LL y, int p10) {\n  if (y > B) return;\n  if (x == 0) {\n    int last = y / (p10 / 10);\n    if (!last) return;\n    dfs(x, y + (LL)last * p10, p10 * 10);\n    if (y >= A && y <= B) ++num;\n    if (p10 < B) queue[tail++] = y;\n    return;\n  }\n  int last = y / (p10 / 10), nxt = x % 10;\n  x /= 10;\n  if (last - nxt >= 0) dfs(x, y + p10 * (last - nxt), p10 * 10);\n  if (nxt && last + nxt < 10) dfs(x, y + p10 * (last + nxt), p10 * 10);\n}\nint main() {\n  scanf(\"%d%d\", &A, &B);\n  head = tail = num = 0;\n  queue[tail++] = 7;\n  if (A <= 7 && B >= 7) ++num;\n  do\n    for (int i = 0; i < 10; ++i)\n      dfs(queue[head], i, 10);\n  while (++head < tail);\n  printf(\"%d\\n\", num);\n  return 0;\n}\n\n```",
        "postTime": 1514264965,
        "uid": 7868,
        "name": "_rqy",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1822 \u3010\u9b54\u6cd5\u6307\u7eb9\u3011"
    },
    {
        "content": "\u9898\u76ee\u94fe\u63a5\uff1a[P1822 \u9b54\u6cd5\u6307\u7eb9](https://www.luogu.org/problemnew/show/P1822)  \n  \n\u8fd9\u91cc\u6765\u4ecb\u7ecd\u4e00\u4e9b\u95f4\u9694\u6253\u8868\u7684\u65b9\u6cd5\u548c\u6280\u5de7\u3002 \n### 1\uff0c\u7b54\u6848\u53ef\u9012\u63a8\uff0c\u624d\u9002\u5408\u95f4\u9694\u6253\u8868  \n\u4ec0\u4e48\u53eb\u53ef\u9012\u63a8\u5462\uff1f  \n\u5047\u8bbe$\\text{F}_n$\u4e3a\u533a\u95f4$[1,n]$\u7684\u7b54\u6848\uff0c\u90a3\u4e48$\\text{F}_{n+1}$\u5e94\u8be5\u53ef\u4ee5\u7531\u5f88\u77ed\u7684\u65f6\u95f4\u4ece$\\text{F}_n$\u63a8\u51fa\u6765\u3002\u6ee1\u8db3\u8fd9\u4e2a\u6761\u4ef6\uff0c\u5c31\u53ef\u4ee5\u6109\u5feb\u5730\u95f4\u9694\u6253\u8868\u8fa3\uff01   \n\u50cf\u8fd9\u4e00\u9898\u5c31\u662f\u53ef\u9012\u63a8\u7684\uff0c\u9012\u63a8\u5f0f\u53ef\u4ee5\u5199\u6210\u8fd9\u6837\uff1a  \n```cpp\nf[n] = f[n-1] + IsLucky(n);\n```\n### 2\uff0c\u95f4\u9694\u6253\u8868\u7528\u6cd5  \n\u4e2a\u4eba\u5bf9\u4e8e\u533a\u95f4\u7edf\u8ba1\u95ee\u9898\u7684\u7528\u6cd5\u662f\u8fd9\u6837\u7684\uff1a  \n\u5728\u8fd9\u9898\u4e2d\uff0c\u8bb0\u5f55$[1,10^6],[1,2*10^6]....[1,1000*10^6]$\u533a\u95f4\u7684\u7b54\u6848\uff0c\u5bb9\u6613\u770b\u51fa\u8fd9\u662f\u4e00\u4e2a\u524d\u7f00\u548c\u7684\u5f62\u5f0f\u3002  \n\u5f53\u6211\u4eec\u8981\u8ba1\u7b97\u533a\u95f4$[l,r]$\u7684\u7b54\u6848\u65f6\uff0c\u53ea\u9700\u8981\u8ba1\u7b97$[1,r]-[1,l-1]$\u5373\u53ef  \n\u5bf9\u4e8e$[1,a]$\u7684\u7b54\u6848\uff0c\u53ef\u4ee5\u62c6\u6210\u4e24\u90e8\u5206\u8ba1\u7b97\uff0c\u4e00\u90e8\u5206\u662f\u5df2\u7ecf\u641e\u597d\u7684\u524d\u7f00\u548c\uff0c\u4e00\u90e8\u5206\u66b4\u529b\u8ba1\u7b97\u3002  \n### 3\uff0c\u6253\u8868\u7684\u95f4\u9694  \n\u6839\u636e\u4e0a\u9762\u4e00\u6bb5\uff0c\u53ef\u4ee5\u53d1\u73b0\u6253\u8868\u7684\u95f4\u9694\u8d8a\u5c0f\uff0c\u8fd0\u884c\u901f\u5ea6\u5c31\u8d8a\u5feb\u3002  \n\u4f46\u662f\u4ee3\u7801\u8fc7\u957f\u7684\u8bdd\uff0c\u662f\u6ca1\u529e\u6cd5\u63d0\u4ea4\u7684\u3002\u8fd9\u9898\u5355\u6b21\u9012\u63a8\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f$\\Theta(\\log n)$\u7684\uff0c\u6240\u4ee5\u6253\u8868\u95f4\u9694\u7528$10^6$\u5c31\u884c\u4e86\u3002  \n\n\u8fd9\u9898\u8868\u7684\u751f\u6210\u5668\u4e5f\u975e\u5e38\u597d\u5199\uff0c\u6309\u7167\u9898\u610f\u6a21\u62df\u5c31\u5b8c\u4e86\u3002  \n\u5927\u6982\u5c31\u662f\u8fd9\u4e48\u591a\uff0c\u6211\u4eec\u628a\u4ee3\u7801\u653e\u4e0a\u6765\u5427qwq\uff1a    \n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#define N 100003\n#define p 998244353\n#define reg register\nusing namespace std;\n\nint a[15];\nint table[1003] = {0,2045,3089,3839,4196,4512,4828,5186,5935,6979,8453,9319,10363,10666,10886,11040,11155,11239,11364,11710,12637,13015,13573,14323,14544,14748,14902,15020,15154,15300,15682,15792,16062,16365,16722,16898,17102,17270,17398,17487,17562,17647,17773,18071,18292,18608,18784,19004,19172,19260,19329,19398,19486,19654,19874,20050,20366,20587,20885,21011,21096,21171,21260,21388,21556,21760,21936,22293,22596,22866,22977,23359,23504,23638,23756,23910,24114,24336,25085,25643,26021,26948,27295,27419,27503,27618,27772,27992,28295,29339,30205,32227,32981,33205,33276,33362,33477,33645,33943,34501,35975,36601,37159,37277,37358,37409,37442,37461,37491,37807,39268,40134,41178,41481,41701,41855,41970,42054,42179,42525,43452,43562,44120,44214,44435,44531,44608,44656,44688,44714,44774,44848,45118,45234,45300,45395,45599,45717,45800,45855,45884,45934,46060,46178,46255,46305,46381,46494,46662,46719,46762,46806,46894,47002,47081,47121,47162,47206,47297,47395,47480,47521,47610,47679,47760,47794,47817,47847,47868,47948,48015,48151,48296,48370,48434,48485,48506,48528,48552,48587,48640,49129,49476,49551,49612,49663,49687,49700,49728,49900,49979,51122,51876,51923,51968,52019,52055,52070,52090,52319,53243,53483,53723,54021,54139,54208,54259,54287,54330,54393,54978,55844,56172,56475,56588,56665,56716,56751,56776,56838,57213,57591,58149,58899,59120,59324,59478,59596,59730,59876,60258,60325,60519,60822,60906,61082,61178,61259,61308,61340,61365,61412,61510,61808,61934,62003,62098,62318,62426,62478,62516,62559,62616,62784,62897,62973,63023,63100,63218,63344,63394,63442,63511,63639,63757,63817,63857,63891,63920,64016,64090,64246,64343,64477,64553,64630,64664,64691,64714,64740,64795,64957,65150,65274,65328,65397,65448,65471,65494,65529,65566,65877,66192,66416,66451,66509,66560,66582,66610,66682,66959,66984,67062,67180,67348,67413,67471,67506,67533,67547,67561,67943,68035,68151,68371,68472,68541,68594,68627,68666,68698,68808,69366,69460,69681,69777,69854,69902,69934,69960,70020,70130,70400,70703,71060,71236,71440,71608,71736,71825,71900,71934,72017,72135,72356,72420,72596,72709,72818,72860,72887,72925,72977,73085,73305,73400,73469,73595,73893,73991,74038,74073,74127,74196,74364,74460,74536,74595,74660,74854,74964,75015,75081,75155,75273,75374,75434,75478,75508,75555,75693,75725,75785,75860,75944,76009,76086,76138,76159,76184,76217,76241,76282,76329,76400,76452,76521,76577,76611,76646,76662,76685,76732,76823,76941,77056,77108,77153,77188,77204,77219,77389,77453,77518,77631,77785,77850,77911,77943,77975,77995,78373,78613,78692,78818,79022,79123,79187,79233,79260,79314,79381,79575,79878,79962,80138,80234,80315,80364,80396,80421,80506,80632,80930,81151,81467,81643,81863,82031,82119,82188,82215,82257,82366,82479,82655,82719,82940,83058,83141,83175,83204,83259,83342,83460,83664,83759,83825,83941,84211,84285,84326,84375,84453,84529,84683,84779,84856,84889,84967,85077,85100,85146,85195,85249,85364,85465,85544,85573,85596,85648,85663,85685,85738,85773,85859,85924,86005,86057,86083,86095,86107,86133,86185,86266,86331,86417,86452,86505,86527,86542,86594,86617,86646,86725,86826,86941,86995,87044,87090,87113,87223,87301,87334,87411,87507,87661,87737,87815,87864,87905,87979,88249,88365,88431,88526,88730,88848,88931,88986,89015,89049,89132,89250,89471,89535,89711,89824,89933,89975,90002,90071,90159,90327,90547,90723,91039,91260,91558,91684,91769,91794,91826,91875,91956,92052,92228,92312,92615,92809,92876,92930,92957,93003,93067,93168,93372,93498,93577,93817,94195,94215,94247,94279,94340,94405,94559,94672,94737,94801,94971,94986,95002,95037,95082,95134,95249,95367,95458,95505,95528,95544,95579,95613,95669,95738,95790,95861,95908,95949,95973,96006,96031,96052,96104,96181,96246,96330,96405,96465,96497,96635,96682,96712,96756,96816,96917,97035,97109,97175,97226,97336,97530,97595,97654,97730,97826,97994,98063,98117,98152,98199,98297,98595,98721,98790,98885,99105,99213,99265,99303,99330,99372,99481,99594,99770,99834,100055,100173,100256,100290,100365,100454,100582,100750,100954,101130,101487,101790,102060,102170,102230,102256,102288,102336,102413,102509,102730,102824,103382,103492,103524,103563,103596,103649,103718,103819,104039,104155,104247,104629,104643,104657,104684,104719,104777,104842,105010,105128,105206,105232,105508,105580,105608,105630,105681,105739,105775,105999,106314,106624,106661,106696,106719,106742,106793,106862,106916,107041,107234,107395,107450,107476,107499,107526,107560,107637,107713,107847,107945,108100,108174,108270,108299,108333,108373,108433,108551,108679,108748,108796,108846,108972,109090,109167,109217,109293,109406,109574,109631,109674,109712,109764,109872,110092,110187,110256,110382,110680,110778,110825,110850,110882,110931,111012,111108,111284,111368,111671,111865,111933,112315,112460,112594,112712,112866,113070,113292,114041,114599,114978,115352,115414,115439,115474,115525,115602,115715,116019,116346,117213,117797,117860,117903,117931,117982,118051,118169,118467,118708,118947,119871,120100,120120,120135,120171,120222,120267,120314,121068,122211,122290,122462,122490,122503,122527,122578,122639,122715,123061,123550,123603,123638,123662,123684,123705,123756,123820,123894,124039,124175,124242,124322,124343,124373,124396,124430,124511,124580,124669,124710,124795,124893,124984,125028,125069,125109,125188,125296,125384,125428,125471,125528,125696,125809,125885,125935,126012,126130,126256,126306,126335,126390,126473,126591,126795,126890,126956,127072,127342,127416,127476,127502,127534,127582,127659,127755,127976,128070,128628,128738,129665,130012,130136,130220,130335,130489,130709,131012,132056,132922,134383,134699,134729,134748,134781,134832,134913,135031,135589,136215,139782,142039,142127,142133,142153,142186,142221,142275,142589,144611,144982,145988,146122,146131,146140,146176,146229,146279,146471,147398,147455,147527,147611,147625,147636,147660,147708,147786,147884,148266,148312,148353,148376,148394,148403,148424,148480,148563,148632,148707,148757,148840,148892,148919,148940,148963,149015,149124,149181,149250,149294,149382,149490,149569,149609,149650,149694,149785,149883,149968,150003,150057,150126,150294,150390,150466,150525,150590,150784,150894,150948,150975,151021,151085,151186,151390,151516,151595,151835,152214,152588,152650,152675,152710,152761,152838,152951,153255,153582,154448,156470,157224,157448,157519,157605,157720,157888,158186,158744,160218};\n\ninline int abs(int x);\ninline int magic(int n);\ninline bool check(int n);\nvoid print(int x);\nint calc(int n);\n\nint main(){\n    int a,b,l,r;\n    scanf(\"%d%d\",&l,&r);\n    print(calc(r)-calc(l-1));\n    return 0;\n}\n\nint calc(int n){\n    int m = n%1000000;\n    n /= 1000000;\n    int res = table[n];\n    n *= 1000000;\n    m += n;\n    for(int i=n+1;i<=m;++i)\n        if(check(i)) ++res;\n    return res;\t\n}\n\ninline int abs(int x){\n    return x<0?-x:x;\n}\n\ninline bool check(int n){\n    while(n>9) n = magic(n);\n    return n==7;\n}\n\ninline int magic(int n){\n    int x = 0,i = 1;\n    for(;n>0;++i){\n        a[i] = n%10;\n        n /= 10;\n    }\n    for(reg int j=i-1;j>1;--j)\n        x = (x<<3)+(x<<1)+abs(a[j]-a[j-1]);\n    return x;\n}\n\nvoid print(int x){\n    if(x>9) print(x/10);\n    putchar(x%10+'0');\n}\n```  \n### 4\u3001\u4f8b\u98981\uff1a  \n\n\u7ed9\u4f60\u4e24\u4e2a\u6b63\u6574\u6570$l,r$\uff0c\u4f60\u9700\u8981\u6c42\u51fa\u533a\u95f4$[l,r]$\u4e2d\u6709\u591a\u5c11\u6574\u6570\uff0c\u5b83\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u6709\u5947\u6570\u4e2a$1$\u3002  \n$1\\le l\\le r \\le10^9$  \n\u6b64\u9898\u867d\u7136\u7528\u641c\u7d22+\u5404\u79cd\u7384\u5b66\u526a\u679d\u4f18\u5316\u4e5f\u80fd\u8fc7\uff0c\u4f46\u662f\u8fd9\u5f88\u660e\u663e\u53ef\u4ee5\u95f4\u9694\u6253\u8868\u3002  \n\u66b4\u529b\u7edf\u8ba1\u524d\u7f00\u548c\uff0c\u7136\u540e\u6309\u6211\u4eec\u4e0a\u9762\u7684\u505a\u6cd5\u5c31\u597d\u3002  \n\u7531\u4e8e\u8fd9\u9898\u5e76\u4e0d\u96be\uff0c\u6240\u4ee5\u5c31\u4e0d\u653e\u4ee3\u7801\u4e86\u3002  \n\n### 5\u3001\u4f8b\u98982\uff1a  \n[P1662 \u65707](https://www.luogu.org/problemnew/show/P1662)  \u8fd9\u9898\u5c31\u4e0d\u662f\u533a\u95f4\u7684\u95ee\u9898\u4e86\uff0c\u4f46\u662f\u6211\u4eec\u4f9d\u7136\u53ef\u4ee5\u7528\u95f4\u9694\u6253\u8868\u6765\u641e\u3002  \n\u8fd9\u9898\u7684\u6253\u8868\u96be\u5ea6\u7a0d\u5fae\u9ad8\u4e86\u4e00\u4e9b\uff0c\u56e0\u4e3a\u6211\u4eec\u4e0d\u4ec5\u8981\u8bb0\u5f55\u6570\u5230\u8c01\u4e86\uff0c\u8fd8\u8981\u8bb0\u4e0b\u6765\u4e0b\u4e00\u6b21\u6570\u7684\u65b9\u5411\u3002  \n\u8fd9\u9898\u7684\u505a\u6cd5\u548c\u524d\u9762\u4e5f\u662f\u5927\u540c\u5c0f\u5f02\u3002\u4ecd\u7136\u662f\u628a\u8be2\u95ee\u62c6\u6210\u4e24\u5757\uff0c\u4e00\u90e8\u5206\u662f\u7b97\u597d\u7684\uff0c\u4e00\u90e8\u5206\u66b4\u529b\u5373\u53ef\u3002  \n$\\text{Code:}$\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\n\nbool cnt(int a){\n\tif(a%7 == 0) return true;\n\twhile(a>0){\n\t\tif(a%10 == 7) return true;\n\t\ta /= 10;\n    }\n\treturn false;\n}\n\nint main(){\n    int n,c,i,turn;\n    int a[52] = {0,522,887,364,841,548,880,228,750,52,866,123,1167,162,370,892,1257,734,1328,396,64,716,194,1166,560,1303,259,1264,579,462,97,620,26,319,593,1278,1278,1278,1278,1278,1278,946,261,1076,437,960,366,659,327,119,934};\n    int turns[52] = {0,1,0,1,1,0,1,0,1,0,1,1,0,1,0,1,0,1,1,1,0,1,0,1,0,0,1,0,1,0,1,0,0,1,1,0,0,0,0,0,1,0,1,0,1,0,0,1,0,1,0};\n    scanf(\"%d\",&n);\n    c = n/20000000 + 1;\n    i = a[c-1];\n    turn = turns[c-1];\n    c = (n/20000000)*20000000 + 1;\n    while(c<=n){\n        if(turn == 0) i++;\n        else i--;\n        i %= 1337;\n        if(i == 0) i = 1337;\n        if(cnt(c)) turn = 1-turn;\n        c++;\n    }\n    printf(\"%d\",i);\n}\n```\n### 6\uff0c\u603b\u7ed3  \n\u95f4\u9694\u6253\u8868\u662f\u4e2a\u5e38\u7528\u7684\u6280\u5de7\uff0c\u5c24\u5176\u662f\u5728\u6570\u4f4ddp\u7b49\u95ee\u9898\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u9a97\u4e0d\u5c11\u5206\u3002\u5982\u679c\u5e38\u6570\u6bd4\u8f83\u4f18\u79c0\uff0c\u751a\u81f3\u53ef\u4ee5AC\u3002  \n\u6240\u4ee5\uff1a  \n~~\u6253\u8868\u5927\u6cd5\u597d\uff0c\u5165\u6559\u4fdd\u5e73\u5b89~~",
        "postTime": 1547630858,
        "uid": 115864,
        "name": "NaCly_Fish",
        "ccfLevel": 6,
        "title": "\u95f4\u9694\u6253\u8868\u795e\u6559"
    },
    {
        "content": "- ***\u6211\u4e0d\u662f\u6765\u8bb2\u6b63\u89e3\u7684***\n\n**\u6211\u5f88\u62b1\u6b49**\u6211\u7684\u8fd9\u4efd\u9898\u89e3\u53ef\u80fd\u8f9c\u8d1f\u4e86\u8fd9\u7d2b\u8272\u7684\u96be\u5ea6\u6807\u7b7e\n\n\u8bdd\u8bf4\u8fd9\u9053\u9898\u76ee\u62ff\u5230\u7684\u7b2c\u4e00\u53cd\u5e94\u9664\u4e86\u66b4\u529b\u5c31\u662f\u6beb\u65e0\u601d\u8def\u5bf9\u5427\n\n\u5e94\u8be5\u53ef\u4ee5\u5927\u6982\u731c\u5230\u8fd9\u9898\u5c31\u662f\u8003\u4f60\u6570\u5b66, \u56de\u5fc6\u4e00\u4e0bNOIPD1T1\n\n- ***\u6570\u636e\u90a3\u4e48\u5c11, \u6211\u4eec\u8981\u6253\u8868!***\n\n\u5173\u952e\u662f\u8fd9\u4e2a\u8868\u600e\u4e48\u6253, \u9996\u5148\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u66b4\u529b\u7a0b\u5e8f\u7b97\u51fa\u4e00\u4e2a\u6570\u7684\u9b54\u6cd5\u6307\u7eb9, \u7cfb\u7edf\u81ea\u5e26\u7684pow\u6211\u7528\u5feb\u901f\u5e42\u6362\u6389\u4e86, \u5176\u4ed6\u5e38\u6570\u4f18\u5316\u6211\u61d2\u5f97\u52a0, \u53cd\u6b63\u7ebf\u4e0b\u5904\u7406\u6709\u7684\u662f\u65f6\u95f4! \u5728\u8fd9\u4e2a\u6570\u636e\u4e0b, \u590d\u6742\u5ea6\u63a5\u8fd1**O(1)**.\n\n```cpp\ninline int qpow(int x, int y)\n{\n    if (y == 0) return 1;\n    int temp = qpow(x, y >> 1);\n    if (y & 1) return temp * temp * x;\n    else return temp * temp;\n}\nint magic(int x)\n{\n    int y = 0, num[10], i = -1;\n    while (x) num[++i] = x % 10, x /= 10;\n    for (int j = 0; j < i; j++)\n        y += abs(num[j] - num[j+1]) * qpow(10, j);\n    if (y < 10) return y;\n    else return magic(y);\n}\n```\n- ***\u5206\u5757\u5927\u6cd5\u597d!***\n\n\u6574\u533a\u95f4\u7684\u65e0\u975e\u5c31\u90a3\u4e48\u51e0\u79cd\u4e1c\u897f, \u7ebf\u6bb5\u6811\u6811\u72b6\u6570\u7ec4\u6709\u70b9\u6740\u9e21\u7684\u611f\u89c9, \u524d\u7f00\u548c\u8c8c\u4f3c\u4e0d\u9519(\u9057\u61be\u7a7a\u95f4\u611f\u89c9\u4f1a\u70b8), \u4f46\u5206\u5757\u5c31\u66f4\u8d5e\u4e86, \u5355\u4e2a\u533a\u95f4\u4ec5\u9700**O(Sqrt(N))**.\n\n\u6211\u4eec\u5148\u5c06\u6240\u6709\u7684\u533a\u95f4\u4fe1\u606f\u901a\u8fc7\u6253\u8868\u7684\u65b9\u5f0f\u5904\u7406\u597d, \u6ca1\u6709\u5904\u7406\u7684\u5730\u65b9\u5c31\u7528\u66b4\u529b\u5904\u7406\u6389! \u6253\u8868\u65f6\u95f4\u590d\u6742\u5ea6**O(NlogN)**\n\n```cpp\nint main()\n{\n    freopen(\"table.out\", \"w\", stdout);\n    int Len = 31623, res = 1, L, R;\n    for (int i = 1; i <= Len; i++)\n    {\n        L = (i - 1) * Len + 1;\n        R = min(1000000000, Len * i);\n        for (int j = L; j <= R; j++)\n            if (magic(j) == 7) res++;\n        printf(\"%d,\", res); res = 0;\n    }\n    return 0;\n} \n```\n\u901a\u8fc7\u4e0a\u9762\u7684\u7a0b\u5e8f\u6211\u4eec\u5b9e\u73b0\u4e86\u5bf9\u6bcf\u4e2a\u533a\u95f4\u5185\u7684\u9b54\u6cd5\u6307\u7eb9\u4e3a7\u7684\u4e2a\u6570\u7edf\u8ba1, \u4e3a\u4e86\u4fdd\u8bc1\u6211\u4eec\u7684\u6253\u8868\u673a\u6b63\u5e38\u5de5\u4f5c, \u5148\u5c06\u6570\u636e\u8c03\u5c0f\u8bd5\u4e00\u8bd5\u770b\u770b\u80fd\u4e0d\u80fd\u7528, \u8bc1\u660e\u65e0\u8bef\u540e\u5c31\u53ef\u4ee5**\u6302\u673a**\u4e86!!!!!!\n\n- ***\u6302\u673a1140ms\u8fc7\u540e***\n\n\u8981\u4ea4\u7684\u7a0b\u5e8f\u5728\u4e0b\u9762, \u590d\u6742\u5ea6**O(Sqrt(B))**\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 35000, Len = 31623;\nconst int Cnt[] = {/*\u6b64\u5904\u8fc7\u4e8e\u78c5\u7934\u88ab\u6211\u5207\u6389\u4e86*/};\ninline int qpow(int x, int y);\nint magic(int x);\ninline int ID(const int &x) { return (x + Len - 1) / Len; }\ninline int L(const int &x) { return (ID(x) - 1) * Len + 1; }\ninline int R(const int &x) { return ID(x) * Len; }\nint main()\n{\n    int A, B, res = 0;\n    scanf(\"%d%d\", &A, &B);\n    if (A <= 7 && 7 <= B) res++;\n    \n    if (ID(A) == ID(B))\n    {\n        for (int i = A; i <= B; i++)\n            res += bool(magic(i) == 7);\n        printf(\"%d\\n\", res); return 0;\n    }\n    for (int i = A; i <= R(A); i++)\n        res += bool(magic(i) == 7);\n    for (int i = L(B); i <= B; i++)\n        res += bool(magic(i) == 7);\n    for (int i = ID(A) + 1; i < ID(B); i++)\n        res += Cnt[i];\n    printf(\"%d\\n\", res);\n    return 0;\n} \n```\n\u771f\u662f\u53ef\u6015, AC\u4ee3\u7801\u5c31\u6211\u6700\u957f, \u7b97\u4e86.\n",
        "postTime": 1513818092,
        "uid": 45660,
        "name": "yxr811740686",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1822 \u3010\u9b54\u6cd5\u6307\u7eb9\u3011"
    },
    {
        "content": "\u6211\u4eec\u795e\u5947\u7684\u6559\u7ec3loli\u5728\u8003\u8bd5\u91cc\u653e\u4e86\u8fd9\u9053\u9898\uff0c\u7adf\u7136\u80fd\u795e\u5947\u7684\u5dee\u70b9A\u6389\n\n\u611f\u89c9\u8fd9\u9053\u9898\u5f88\u641c\u7d22\uff0c\u800c\u4e14\u6709\u4e00\u79cd\u6570\u4f4ddp\u7684\u611f\u89c9\n\n\u53cd\u6b63\u6211\u4e5f\u4e0d\u4f1a\u5199\u6570\u4f4ddp\uff0c\u90a3\u5c31\u5199\u4e00\u4e2a\u6570\u4f4d\u641c\u7d22\u5427\n\n\u6211\u4eec\u7684\u8d77\u59cb\u72b6\u6001\u5c31\u662f$magic(7)=7$\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u901a\u8fc7\u589e\u52a0\u6570\u4f4d\u7684\u641c\u7d22\u6765\u6269\u5c55\u8fd9\u4e2a\u72b6\u6001\uff0c\u540c\u65f6\u5728\u641c\u7d22\u7684\u8fc7\u7a0b\u4e2d\u51cf\u6389\u4e00\u4e9b\u4e0d\u5408\u6cd5\u7684\u72b6\u6001\uff0c\u8fd9\u6837\u5c31\u80fd\u4e0d\u6253\u8868\u7684\u4f18\u96c5A\u6389\u4e86\n\n\u5177\u4f53\u770b\u6ce8\u91ca\u5427\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#define re register\n#define LL long long\nusing namespace std;\nLL A,B;\nLL ans=0;\nLL w1,w2;\nint num_10(LL T)\n{\n    int k=0;\n    while(T)\n    {\n        k++;\n        T/=10;\n    }\n    return k;\n}//\u7edf\u8ba1\u6570\u4f4d\u4e2a\u6570\ninline LL read()\n{\n    char c=getchar();\n    LL x=0;\n    while(c<'0'||c>'9') c=getchar();\n    while(c>='0'&&c<='9')\n      x=(x<<3)+(x<<1)+c-48,c=getchar();\n    return x;\n}\nvoid se(LL f,int t,int p,int num[]);\nvoid dfs(LL x,int step)//x\u8868\u793a\u5f53\u524d\u7684\u6570,step\u8868\u793a\u5f53\u524d\u7684\u4f4d\u6570\uff0c\u6bcf\u4e00\u5c42\u641c\u7d22\u5f80\u5916\u6269\u5c55\u4e00\u4f4d\n{\n    if(step<=w2&&x<=B&&x>=A) ans++;\n    //\u5982\u679c\u5f53\u524d\u7684\u6570\u5728\u8303\u56f4\u4e4b\u5185\u6211\u4eec\u5c31\u589e\u52a0\u7b54\u6848\n    if(step>=w2) return;//\u5982\u679c\u4f4d\u6570\u5927\u4e8e\u7b49\u4e8eB\u7684\u4f4d\u6570\uff0c\u6211\u4eec\u5c31\u51cf\u6389\n    int k=0,num[11];\n    memset(num,0,sizeof(num));\n    while(x)\n    {\n        num[++k]=x%10;\n        x/=10;\n    }//\u5c06x\u4e2a\u5404\u4e2a\u6570\u4f4d\u62c6\u5f00\n    num[++k]=0;\n    for(re int i=1;i<=9;i++)//\u679a\u4e3e\u4e0b\u4e00\u4e2a\u72b6\u6001\u7684\u7b2c\u4e00\u4f4d\u6570\n        se(i,step,step+1,num);\n    for(re int j=1;j+step+1<=w2;j++)//\u7531\u4e8e\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e00\u957f\u4e32\u524d\u5bfc0\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u679a\u4e3e\u524d\u5bfc0\u7684\u4e2a\u6570\n    for(re int i=1;i<=9;i++)//\u8fd8\u662f\u679a\u4e3e\u4e00\u4e2a\u72b6\u6001\u7684\u9996\u4f4d\n        se(i,step+j,step+j+1,num);\n}\nint main()\n{\n    A=read(),B=read();\n    w1=num_10(A),w2=num_10(B);\n    dfs(7,1);\n    cout<<ans<<endl;\n    return 0;\n}\nvoid se(LL f,int t,int p,int num[])//f\u662f\u5f53\u524d\u7684\u6570\uff0ct\u662fnum\u7684\u4f4d\u6570\uff0cp\u662f\u76ee\u6807\u4f4d\u6570\n{\n    if(!t) //num\u7684\u4f4d\u6570\u5df2\u7ecf\u7528\u5b8c\n    {\n        dfs(f,p);//\u641c\u7d22\u4e00\u4e2a\u65b0\u72b6\u6001\n        return;\n    }\n    if(f%10+num[t]<=9) se(f*10+f%10+num[t],t-1,p,num);//\u5982\u679c\u8fd9\u4e00\u4f4d\u52a0\u4e0a\u5bf9\u5e94\u7684\u5dee\u6ca1\u6709\u8d85\u8fc79\uff0c\u90a3\u4e48\u53ef\u4ee5\u662f\u52a0\n    if(f%10+num[t]==f%10-num[t]) return;//\u5982\u679c\u52a0\u548c\u51cf\u5f97\u5230\u7684\u662f\u4e00\u4e2a\u6570\uff0c\u90a3\u4e48\u5c31\u6ca1\u6709\u51cf\u5f97\u5fc5\u8981\u4e86\n    if(f%10-num[t]>=0) se(f*10+f%10-num[t],t-1,p,num);//\u5982\u679c\u8fd9\u4e00\u4f4d\u51cf\u4e0a\u5bf9\u5e94\u7684\u5dee\u6ca1\u6709\u5c0f\u4e8e\uff0c\u90a3\u4e48\u53ef\u4ee5\u662f\u51cf\n}\n```",
        "postTime": 1534734040,
        "uid": 35178,
        "name": "asuldb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1822 \u3010\u9b54\u6cd5\u6307\u7eb9\u3011"
    },
    {
        "content": "\u5927\u5bb6\u90fd\u77e5\u9053\u8fd9\u9053\u9898\u53ef\u4ee5\u6253\u8868\uff0c\u4f46\u662f\u600e\u6837\u6253\u8868\uff1f\n\n\n\u697c\u4e0a\u7684\u65b9\u6cd5\u592a\u8fc7\u66b4\u529b\n\n\n\u51b5\u4e14\n\n### \u8dd1\u5f97\u5f88\u6162\n\n\n\u81f3\u5c11\u5728\u5b66\u6821\u8fd9\"\u70c2\"\u673a\u5668\u4e0a\u6ca1\u8dd1\u51fa\u6765\n\n\n\u975e\u5e38\u6000\u7591\u5176\u590d\u6742\u5ea6\n\n\n\u6240\u4ee5\n\n\u6211\u4eec\u8981\u4f18\u96c5\u7684\u6253\u8868\n\n\n------------\n\n\n\u8003\u8651\u4e00\u4e0b\n\n\n$magic(5913)=482$\n\n\n$magic(482)=46$\n\n\n$magic(46)=2$\n\n\n\u5728\u8ba1\u7b97magic(5913)\u65f6\u6211\u4eec\u53c8\u91cd\u65b0\u8ba1\u7b97\u4e86magic(482)\n\n\n\u8fd9\u4e2a\u7ed3\u679c\u6211\u4eec\u4e4b\u524d\u5df2\u7ecf\u8ba1\u7b97\u8fc7\n\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4fdd\u5b58\u4e00\u4e0b\uff0c\u76f4\u63a5\u7528\uff0c\u5c31\u53ef\u4ee5\u5feb\u901f\u51fa\u7ed3\u679c\n\n\n## \u65f6\u95f4\u6362\u7a7a\u95f4\uff01\n\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u8fd9\u5176\u5b9e\u5c31\u7c7b\u4f3c\u4e8e\u5e76\u67e5\u96c6\u7684\u8def\u5f84\u538b\u7f29\u64cd\u4f5c  ~~\u957f\u5f97\u90fd\u4e00\u6837~~\n\n\n\u56e0\u4e3a\u503c\u53ef\u80fd\u4e3a\u96f6 \u6211\u4eec\u8ba9\u521d\u503c\u4e3a-1 \u8bbf\u95ee\u8fc7\u5c31\u53d8\u62100-9\u4e2d\u7684\u4e00\u4e2a\u503c\n\n\n------------\n\n\n``` cpp\nchar a[0..9]={0..9}\na[10..1E9]=-1;\n\ninline int magic(register int x) {\n    register int t=1,s=0;\n    while (x>=10) {\n        s+=abs((x%10)-(x/=10)%10)*t;\n        t*=10;\n    }\n    return s;\n}\n\ninline int work(register int x) {\n    return (a[x]==-1)?a[x]=work(magic(x)):a[x];\n}\n```\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u8f83\u4e3a\u4f18\u96c5\u7684\u505a\u4e00\u4e2a\u95f4\u9694\u4e3asqrt\u7684\u8868\u4e86\n\n\n------------\n\n\n\u8fd9\u5c31\u7ed3\u675f\u4e86\u5417\uff0c\u4e8b\u60c5\u5e76\u6ca1\u6709\u8fd9\u4e48\u7b80\u5355\n\n\n\u672c\u5730\u8fd9\u6837\u6253\u8868\u662f\u53ef\u4ee5\u4e86\uff0c\u53ef\u662f\u5982\u679c\u6211\u4eec\u8981\u5f80oj\u4e0a\u4ea4\uff0c\u8981\u5904\u7406\u5757\u5916\u7684\u6570\u5b57\uff0c\u6570\u7ec4\u5f00\u4e0d\u4e0b\u600e\u4e48\u529e\uff1f\n\n\n1. \u6362\u6734\u7d20\u7684\u66b4\u529b\u65b9\u6848 \u5c31\u4e0d\u7528\u5f00\u6570\u7ec4\u4e86 \u697c\u4e0a\u6709\u8bb2\n\n\n2. \u4e00\u79cd\u5de7\u5999\u7684\u65b9\u6848\n\n\n\u4e3a\u9632\u6b62\u8d8a\u754c\uff0c\u6211\u4eec\u5728work()\u4e2d\u52a0\u4e0a\n\n```cpp\nwhile (x>N) x=magic(x);\n```\n\n\u8d4b\u521d\u503cmemset\u592a\u6162\u600e\u4e48\u529e\uff1f\n\n\n\u6211\u4eec\u628a\u5b83\u53d6\u4e2a\u53cd\u7701\u6389\u5c31\u597d\u4e86\uff0c\u53cd\u6b63\u8ba9\u503c\u57df\u4e0d\u4e3a\u96f6\u5c31\u884c\n\n\n\u6700\u7ec8\u6210\u54c1\n\n\n```cpp\nchar a[0..9]={~0..~9}\na[10..1E9]=0\ninline int work(register int x) {\n    while (x>N) x=magic(x);\n    return !a[x]?a[x]=work(magic(x)):a[x];\n}\n```\n\n\u4e0d\u7528\u521d\u59cb\u5316\u5c31\u4f1a\u8dd1\u8d77\u6765\u5f88\u5feb\n\n\n\u6700\u540e\u7684\u7a0b\u5e8f\n\n\n```cpp\n#include <bits/stdc++.h>\nconst int N=1e8+2e7,S=31623;\nusing namespace std;\nint an[]={/* \u6253\u7684\u8868 */}\nchar a[N+20];\nint ans;\ninline int magic(register int x) {\n    register int t=1,s=0;\n    while (x>=10) \n        s+=abs((x%10)-(x/=10)%10)*t,t*=10;\n    return s;\n}\n\ninline int work(register int x) {\n    while (x>N) x=magic(x);\n    return !a[x]?(a[x]=work(magic(x))):a[x];\n}\n\nint main() {\n    int l,r,ll,rr;\n    scanf(\"%d%d\",&l,&r);\n    for (int i=0;i<10;++i) a[i]=~i;\n    ll=l/S;\n    rr=r/S;\n    if (ll==rr){\n        for (int i=l;i<=r;++i) if (work(i)==~7) ans++;\n        return printf(\"%d\\n\",ans),0;\n    }\n    for (int i=l;i<(ll+1)*S;++i) if (work(i)==~7) ans++;\n    for (int i=ll+1;i<rr;++i) ans+=an[i];\n    for (int i=rr*S;i<=r;++i) if (work(i)==~7) ans++;\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```\n\n------------\n\n\n~~\u5b66\u957f\u8bf4 \u5185\u5b58\u5c31\u662f\u62ff\u6765\u7528\u7684 \u4e0d\u7528\u5c31\u7b97\u6d6a\u8d39 hhh~~\n\n\n~~\u697c\u4e0a\u7684\u6253\u8868\u65b9\u6cd5\u80af\u5b9a\u4e0d\u662fO(n)\u7684~~\n",
        "postTime": 1517232377,
        "uid": 50763,
        "name": "wcwac",
        "ccfLevel": 0,
        "title": "\u8981\u4f18\u96c5\u7684\u6253\u8868"
    },
    {
        "content": "#### \u514d\u8d23\u58f0\u660e\uff1a\u6211\u4e0d\u662f\u6765\u8bb2\u6b63\u89e3\u7684\uff0c\u8fd9\u662f\u5199\u7ed9OI\u5165\u95e8\u5b66\u8005\u4eec\u7684\u5206\u5757\u9898\u89e3\n\n\u5185\u5bb9\u8f83\u6c34\uff0c\u6709\u9519\u8bef\u6b22\u8fce\u76f4\u63a5D\n\n---\n## \u5206\u5757\u57fa\u7840\n- #### \u5206\u5757\u601d\u60f3\n\n\u5206\u5757\u662f\u4e00\u79cd\u4f18\u7f8e\u7684\u66b4\u529b\u3002\u4ed6\u7684\u6838\u5fc3\u601d\u60f3\u5728\u4e8e**\u5c06\u4e00\u4e2a\u8981\u7ef4\u62a4\u7684\u533a\u95f4\uff08\u957f\u5ea6\u4e3a $n$\uff09\u5206\u6210\u6709\u7a77\u4e2a $\\sqrt n$ \u4e2a\u5b50\u533a\u95f4\u6765\u8fdb\u884c\u5206\u522b\u7ef4\u62a4**\u3002\u6bcf\u4e2a\u5b50\u533a\u95f4\u7684\u957f\u5ea6\u90fd\u4e3a $\\sqrt n$\u3002\n\n\n**\u6211\u4eec\u6240\u8981\u67e5\u8be2\u7684\u533a\u95f4\u6240\u8986\u76d6\u7684\u6bcf\u4e2a\u5757\u7684\u4fe1\u606f\u8fdb\u884c\u6574\u5408\uff0c\u5c31\u662f\u6211\u4eec\u8981\u67e5\u8be2\u7684\u533a\u95f4\u7684\u4fe1\u606f**\u3002\n\n\u8fd9\u6837\u5c06\u533a\u95f4\u5206\u5757\u6765\u5904\u7406\u6709\u4ec0\u4e48\u597d\u5904\u5462\uff1f\u53ef\u4ee5\u611f\u6027\u7406\u89e3\uff0c\u5982\u679c\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u8fd9\u4e2a\u5757\u7684\u5168\u90e8\u4fe1\u606f\uff0c\u90a3\u4e48\u4e0b\u4e00\u6b21\u8981\u67e5\u8be2\u5305\u542b\u8fd9\u4e2a\u5757\u7684\u533a\u95f4\u4fe1\u606f\u65f6\uff0c\u5c31\u76f4\u63a5\u8c03\u7528\u8fd9\u4e2a\u5757\u5c31\u53ef\u4ee5\u4e86\u3002\u663e\u7136\u4f18\u5316\u4e86\u4e0d\u5c11\u3002\n\n---\n\n- ### \u5206\u5757\u533a\u95f4\u7684\u6784\u9020\n\n\u5206\u5757\u533a\u95f4\u6784\u9020\u8d77\u6765\u601d\u7ef4\u96be\u5ea6\u4e0d\u9ad8\uff0c\u6211\u4eec\u76f4\u63a5\u5728\u4ee3\u7801\u4e2d\u7684\u6ce8\u91ca\u8fdb\u884c\u8bb2\u89e3\u548c\u7406\u89e3\u3002\n\n```\nint S,C=0,belong[500010],st[10010],en[10010],sum[10010]={0};\n\nS\u4ee3\u8868\u6bcf\u4e2a\u5757\u7684\u957f\u5ea6\uff0c\u5373\u4e3a\u6839\u53f7n\u53d6\u6574\u3002\nC\u4ee3\u8868\u6240\u5206\u6210\u7684\u5757\u7684\u4e2a\u6570\uff0c\u4e00\u822c\u4e5f\u662f\u6839\u53f7n\u53d6\u6574\nbelong[i]\u4ee3\u8868\u539f\u533a\u95f4\u4e2d\u7684\u7b2c i \u4e2a\u5143\u7d20\u6240\u5c5e\u5757\u7684\u7f16\u53f7\nst[i] \u8868\u793a\u7b2c i \u4e2a\u5757\u7684\u5de6\u7aef\u70b9\uff0c\u540c\u7406 en[i] \u4ee3\u8868\u53f3\u7aef\u70b9\nsum[i] \u4ee3\u8868\u7b2ci\u4e2a\u5757\u5143\u7d20\u4fe1\u606f\u7684\u6574\u5408\uff0c\u5bf9\u4e8e\u8fd9\u91cc\u7684\u4ee3\u7801\u5c55\u73b0\u6211\u4f7f\u7528\u7684\u662f\u548c\u7684\u5f62\u5f0f\n\ninline void build()\n{\n   S=int(sqrt(double(n)));  //\u6c42\u51faS\u7684\u5927\u5c0f\n   for(register int i=1;i<=n;i+=S)  //\u4e3a\u6bcf\u4e2a\u5757\u8bbe\u7acb\u5de6\u7aef\u70b9\u548c\u53f3\u7aef\u70b9\n   {\n      st[++C]=i;\n      en[C]=min(n,i+S-1);\n   }\n   for(register int i=1;i<=C;++i)  //\u679a\u4e3e\u6240\u6709\u7684\u5757\n   {\n     for(register int j=st[i];j<=en[i];++j)  //\u904d\u5386\u6bcf\u4e2a\u5757\u4e2d\u7684\u5143\u7d20\uff0c\u5c06\u4ed6\u4eec\u6240\u5c5e\u7684\u5757\u7684\u7f16\u53f7\u8bb0\u5f55\n     {\n       belong[j]=i;  //\u8868\u793a\u7b2cj\u4e2a\u5143\u7d20\u662f\u7b2ci\u5757\u7684\n       sum[i]+=a[j];  //\u7edf\u8ba1\u7b2ci\u5757\u5143\u7d20\u7684\u548c\n     }\n   }\n   return ;\n}\n```\n\n\n---\n\n- ### \u5206\u5757\u533a\u95f4\u5355\u70b9\u4fee\u6539\n\n\u663e\u800c\u6613\u89c1\uff0c\u53ea\u6709\u6b64\u5143\u7d20\u6240\u5728\u7684\u5757\u624d\u4f1a\u56e0\u4e3a\u5355\u70b9\u4fee\u6539\u800c\u4ea7\u751f\u6539\u53d8\uff0c\u56e0\u6b64\u76f4\u63a5\u4fee\u6539\u5c31\u597d\u4e86\u3002\n\n```\ninline void single(int x,int k)  \u5728\u7b2cx\u4e2a\u4f4d\u7f6e\u52a0\u4e0ak\n{\n  a[x]+=k;\n  sum[belong[x]]+=k;   //\u5728x\u6240\u5c5e\u5757\u7684\u4fe1\u606f\u96c6\u5408sum\u6570\u7ec4\u4e2d\u8fdb\u884c\u4fee\u6539\n  return ;\n}\n```\n\n---\n\n- ### \u5206\u5757\u533a\u95f4\u7684\u533a\u95f4\u4fee\u6539\n\n\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u6570\u7ec4 $delta$ \uff0c$delta_i$ \u8bb0\u5f55\u7b2c $i$ \u4e2a\u5757 **\u6574\u4e2a\u5757\u88ab\u4fee\u6539\u7684\u53d8\u5316\u60c5\u51b5\uff0c\u5f53\u4e14\u4ec5\u5f53\u8fd9\u4e2a\u5757\u88ab\u6574\u5757\u4e00\u8d77\u4fee\u6539\u7684\u65f6\u5019\uff0c\u624d\u4f1a\u6539\u53d8\u8fd9\u4e2a\u5757\u7684 $delta$**\u3002\n\n\u8bbe\u8981\u4fee\u6539\u7684\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u662f $l$\uff0c\u53f3\u7aef\u70b9\u662f $r$\uff0c\u82e5 $[l,r]$ \u7684\u4f4d\u7f6e\u548c\u6211\u4eec\u5df2\u5206\u597d\u7684\u4e00\u4e2a\u5757\u91cd\u5408\uff1a\n\n$$\n\\boxed{~~~~~~~~~~~~~}\\quad\\boxed{~~~~~~~~~~~~~}\\quad\\boxed{~~~~~~~~~~~~~}\\quad\\boxed{~~~~~~~~~~~~~}\\quad\\boxed{~~~~~~~~~~~~~}\n$$\n$$\n\\colorbox{Black}{~~~~~~~~~~~~~}\n$$\n\nps:\u767d\u8272\u5757\u4e3a\u6240\u5206\u7684\u5757\uff0c\u9ed1\u8272\u5757\u4e3a$[l,r]$\n\n\n\u4e5f\u5c31\u662f\u8bf4\u5b58\u5728\u7b2c $i$ \u4e2a\u5757\u4f7f\u5f97 $st_i=x$\u4e14$en_i=y$\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5bf9\u8fd9\u4e2a\u5757\u8fdb\u884c\u6574\u5757\u64cd\u4f5c\uff0c\u5373\u76f4\u63a5\u6539\u53d8 $delta_i$ \u7684\u503c\u3002\n\n```\n  int l=belong[x],r=belong[y];\n  if(l==r&&st[l]==x&&en[l]==y)\n  {\n    delta[l]+=k;  //\u8bb0\u5f55\u7b2c l \u4e2a\u5757\u7684\u53d8\u5316\u60c5\u51b5\u3002\n    return ;\n  }\n```\n\n\u53ef\u662f\uff0c\u8981\u662f $x,y$ \u5e76\u4e0d\u662f\u7406\u60f3\u7684\u521a\u597d\u5728\u4e00\u4e2a\u5757\u4e2d\uff0c\u800c\u662f\u540c\u65f6\u6d89\u730e\u4e86\u4e09\u4e2a\u5757\u5462\uff1f\n\n$$\n\\boxed{~~~~~~~~~~~~~}\\,\\boxed{~~~~~~~~~~~~~}\\,\\boxed{~~~~~~~~~~~~~}\\,\\boxed{~~~~~~~~~~~~~}\\,\\boxed{~~~~~~~~~~~~~}\n$$\n$$\n\\colorbox{Black}{~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~}\n$$\n\n\u5f88\u7b80\u5355\uff0c\u5bf9\u4e8e $[l,r]$ \u533a\u95f4\u5185\uff0c\u90a3\u4e9b\u5b8c\u6574\u7684\u5757\u6211\u4eec\u901a\u8fc7\u6539\u53d8 $delta$ \u6765\u6539\u53d8\uff0c\u800c\u90a3\u4e9b\u4e0d\u5b8c\u6574\u7684\u5757\uff0c\u6211\u4eec\u901a\u8fc7\u5355\u70b9\u4fee\u6539 $single$ \u6765\u4e00\u4e00\u6539\u53d8\u4ed6\u4eec\u7684\u539f\u503c\u3002\n\n```\n  for(register int i=x;i<=en[l];++i)  //\u6539\u53d8\u5de6\u8fb9\u7684\u4e0d\u5b8c\u6574\u533a\u95f4\n    single(i,k);\n  for(register int i=st[r];i<=y;++i)  //\u6539\u53d8\u53f3\u8fb9\u7684\u4e0d\u5b8c\u6574\u533a\u95f4\n    single(i,k);\n  for(register int i=l+1;i<r;++i)  //\u5b8c\u6574\u533a\u95f4\u7edf\u4e00\u4fee\u6539\n    delta[i]+=k;\n```\n\n\u56e0\u6b64\u4e00\u4e2a\u5b8c\u6574\u7684\u533a\u95f4\u4fee\u6539\u51fd\u6570 $range$ \u5c31\u51fa\u6765\u4e86\n\n```\nint delta[10010]={0};\ninline void range(int x,int y,int k)\n{\n  int l=belong[x],r=belong[y];\n  if(l==r&&st[l]==x&&en[l]==y)\n  {\n    delta[l]+=k;\n    return ;\n  }\n  for(register int i=x;i<=en[l];++i)\n    single(i,k);\n  for(register int i=st[r];i<=y;++i)\n    single(i,k);\n  for(register int i=l+1;i<r;++i)\n    delta[i]+=k;\n  return ;\n}\n```\n\n---\n\n- ### \u5206\u5757\u7684\u533a\u95f4\u67e5\u8be2\n\n\u4ecd\u7136\u8003\u8651\u67e5\u8be2\u4e00\u4e2a $[l,r]$ \u7684\u533a\u95f4\uff0c\u5982\u679c $l,r$ \u5728\u540c\u4e00\u4e2a\u5757\u5185\uff0c\u90a3\u4e48\u4e5f\u8bb8\u4f1a\u662f\u8fd9\u4e48\u4e00\u79cd\u60c5\u51b5\uff1a\n\n$$\n\\boxed{~~~~~~~~~~~~~}\\quad\\boxed{~~~~~~~~~~~~~}\\quad\\boxed{~~~~~~~~~~~~~}\\quad\\boxed{~~~~~~~~~~~~~}\\quad\\boxed{~~~~~~~~~~~~~}\n$$\n$$\n\\colorbox{Black}{~~~}\n$$\n\u6b64\u65f6\uff0c$[l,r]$ \u7684\u786e\u5728\u4e00\u4e2a\u5757\u5185\uff0c\u4f46\u662f\u53c8\u5e76\u4e0d\u662f\u5360\u636e\u8fd9\u6574\u4e00\u4e2a\u5757\uff0c\u8fd9\u79cd\u60c5\u51b5\u6211\u4eec\u5c31\u9700\u8981\u7279\u5224\u5904\u7406\n\n```\n  int l=belong[x],r=belong[y],ans=0;\n  if(l==r)\n  {\n    for(register int i=x;i<=y;++i)\n      ans+=a[i]+delta[belong[i]];  //\u6700\u6734\u7d20\u7684\u5bf9\u8be5\u533a\u95f4\u8fdb\u884c\u6c42\u548c\uff0c\u6b64\u65f6delta\u6570\u7ec4\u5c31\u6d3e\u4e0a\u7528\u573a\u4e86\u3002\n    return ans;\n  }\n```\n\n\u5bf9\u4e8e\u533a\u95f4\u67e5\u8be2\uff0c\u6211\u4eec\u4f9d\u65e7\u53ef\u4ee5\u5c1d\u8bd5\u50cf\u533a\u95f4\u4fee\u6539\u90a3\u6837\u601d\u8003\uff0c\u5c06\u533a\u95f4\u6240\u5360\u636e\u7684\u5757\u5206\u4e3a\u4e09\u90e8\u5206\uff1a\n\n1. \u5de6\u8fb9\u7684\u4e0d\u5b8c\u6574\u5757\n2. \u4e2d\u95f4\u7684\u5b8c\u6574\u5757\n3. \u53f3\u8fb9\u7684\u4e0d\u5b8c\u6574\u5757\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u5bf9\u533a\u95f4\u8fdb\u884c\u6709\u903b\u8f91\u7684\u67e5\u8be2\u3002\n\n\u5bf9\u4e8e\u5de6\u53f3\u4e0d\u5206\uff0c\u76f4\u63a5\u66b4\u529b\u5904\u7406\u5373\u53ef\uff0c\u5bf9\u4e8e\u4e2d\u95f4\u5b8c\u6574\u5757\uff0c\u4fe1\u606f\u6574\u5408\u6570\u7ec4$sum$\u548c\u53d8\u5316\u8bb0\u5f55\u6570\u7ec4$delta$\u7684\u529f\u80fd\u5c31\u4f53\u73b0\u51fa\u6765\u4e86\uff0c\u4ed6\u4eec\u6781\u5927\u7a0b\u5ea6\u7684\u4f18\u5316\u4e86\u5b8c\u6574\u5757\u7684\u5904\u7406\u3002\n\n```\n  for(register int i=x;i<=en[l];++i)  //\u5de6\u534a\u4e0d\u5b8c\u6574\u90e8\u5206\n    ans+=a[i]+delta[belong[i]];\n  for(register int i=st[r];i<=y;++i)  //\u53f3\u534a\u4e0d\u5b8c\u6574\u90e8\u5206\n    ans+=a[i]+delta[belong[i]];\n  for(register int i=l+1;i<r;++i)  //\u5b8c\u6574\u7684\u5757\u76f4\u63a5\u5229\u7528sum\u548cdelta\u5361\u901f\u7d2f\u52a0\u5373\u53ef\n    ans+=sum[i]+delta[i]*(en[i]-st[i]+1);\n```\n\n\u8fd9\u6837\u5c31\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u5206\u5757\u533a\u95f4\u67e5\u8be2\u51fd\u6570\uff1a\n\n```\ninline int query(int x,int y)\n{\n  int l=belong[x],r=belong[y],ans=0;\n  if(l==r)\n  {\n    for(register int i=x;i<=y;++i)\n      ans+=a[i]+delta[belong[i]];\n    return ans;\n  }\n  for(register int i=x;i<=en[l];++i)\n    ans+=a[i]+delta[belong[i]];\n  for(register int i=st[r];i<=y;++i)\n    ans+=a[i]+delta[belong[i]];\n  for(register int i=l+1;i<r;++i)\n    ans+=sum[i]+delta[i]*(en[i]-st[i]+1);\n  return ans;\n}\n```\n---\n## \u5206\u5757\u6253\u8868\n\n\u76f8\u4fe1\u6b64\u65f6\u7684\u4f60\u5df2\u7ecf\u5bf9\u5206\u5757\u6709\u4e86\u57fa\u7840\u7684\u8ba4\u8bc6\uff0c\u90a3\u4e48\u6211\u4eec\u56de\u5230\u8fd9\u9053\u9898\u76ee\uff0c\u5982\u4f55\u5229\u7528\u5206\u5757\u6765\u66b4\u529b\u89e3\u51b3\u5462\uff1f\n\n\u5982\u679c\u4f60\u4e0d\u4f1a\u7701\u9009\u7ea7\u522b\u601d\u7ef4\u96be\u5ea6\u7684\u641c\u7d22\uff0c\u90a3\u4e48\u5728\u8003\u573a\u81ea\u7136\u800c\u7136\u7684\u601d\u8def\u5c31\u662f**\u6253\u8868**\u3002\n\n\u4f46\u662f\u5f88\u663e\u7136\uff0c\u8fd9\u9898\u7684\u6570\u636e\u89c4\u6a21\u76f4\u63a5\u6253\u8868\u7684\u8bdd\u4f1a\u7206\u7a0b\u5e8f\u957f\u5ea6\uff0c\u90a3\u4e48\u600e\u4e48\u529e\uff1f\u9650\u5236\u6253\u8868\u7684\u4e0d\u662f\u7a0b\u5e8f\uff0c\u800c\u662f\u4eba\u5fc3\u3002\n\u6211\u4eec\u53ef\u4ee5\u9009\u62e9**\u5206\u5757\u6253\u8868**\n\n\u5206\u5757\u6253\u8868\u7684\u601d\u8def\u548c\u5206\u5757\u7b80\u76f4\u5982\u51fa\u4e00\u8f99\uff1a**\u6211\u4eec\u76f4\u63a5\u7ebf\u4e0b\u6c42\u51fa\u6bcf\u4e00\u4e2a\u5757\u7684\u4fe1\u606f\u6574\u5408\uff0c\u4e5f\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e2a\u5757\u8fdb\u884c\u6253\u8868\uff0c\u7136\u540e\u5229\u7528\u5206\u5757\u6765\u5408\u5e76\u4fe1\u606f\u3002**\n\n\u601d\u8def\u975e\u5e38\u6e05\u6670\uff0c\u5bf9\u4e8e\u8fd9\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u5757\u7684\u957f\u5ea6\u8bbe\u4e3a$1000000$\uff0c\u7136\u540e\u6253\u8868\u6c42\u5f97\u6bcf\u4e2a\u5757\u7684\u5e78\u8fd0\u6570\u4e2a\u6570\uff0c\u7136\u540e\u5229\u7528\u5206\u5757\u7b97\u6cd5\u6d41\u7a0b\u6765\u5bf9\u6240\u67e5\u8be2\u533a\u95f4\u8fdb\u884c\u4fe1\u606f\u6574\u5408\u3002\n\n\u5148\u5949\u4e0a\u6253\u8868\u7a0b\u5e8f\uff1a\n```\nint n,tot=0,sum[1000010]={0};\nint magic(int x)\n{\n\tif(x<10) return x;\n\tint a[20],t=0;\n\twhile(x)\n\t{\n\t\ta[++t]=x%10;\n\t\tx/=10;\n\t}\n\tint m=0;\n\tfor(int i=t;i>=2;i--)\n\t{\n\t\tm=m*10+abs(a[i]-a[i-1]);\n\t}\n\treturn magic(m);\n}\nint main()\n{\n\tcin>>n;\n\ttot=1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(i%1000000==0) sum[tot]+=sum[tot-1],tot++;\n\t\tsum[tot]+=(magic(i)==7);\n\t}\n\tfor(int i=1;i<=tot;i++)\n\t  {\n\t  \tif(sum[i]==0) break;\n\t  \tcout<<sum[i]<<',';\n\t  }\n\treturn 0;\n} \n```\n\u5bf9\u4e8e\u8fd9\u6bb5\u7a0b\u5e8f\u8f93\u51fa\u7684\u662f\u6bcf\u4e00\u4e2a\u957f\u5ea6\u4e3a $1000000$ \u7684\u5757\u6240\u542b\u5e78\u8fd0\u6570\u7684\u524d\u7f00\u548c\u3002\n\n\u6709\u4e86\u6253\u8868\u7684\u5e2e\u52a9\uff0c\u6211\u4eec\u5c31\u7b49\u4e8e\u6709\u4e86\u6bcf\u4e2a\u5757\u7684\u4fe1\u606f\uff08\u5229\u7528\u524d\u7f00\u548c\u76f8\u51cf\u6c42\u533a\u95f4\u548c\u603b\u4f1a\u5427\uff09\uff0c\u7136\u540e\u76f4\u63a5\u5982\u4e0a\u6587\u6240\u8bb2\u5229\u7528\u8fd9\u4e9b\u5757\u8fdb\u884c\u5206\u5757\u4e2d\u7684\u533a\u95f4\u4fe1\u606f\u6574\u5408\u5373\u53ef\u3002\n\n## CODE:\t\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\nint sum[1010]={//\u5df2\u5220\u51cf};\nint st[1010],en[1010],S,tot;\nint l,r;\nint belong(int x)  //\u6c42\u5f53\u524d\u5143\u7d20\u6240\u5c5e\u5757\u7684\u7f16\u53f7\n{\n\tif(x%1000000==0) return x/1000001+1;\n\telse return x/1000000+1;\n}\nvoid start()\n{\n  S=1000000;\n  for(int i=1;i<=r;i+=S)\n  {\n    st[++tot]=i;\n    en[tot]=i+S-1;\n  }\n  return ;\n  //\u9884\u5904\u7406\u5757\u7684\u5de6\u53f3\u7aef\u70b9\n}\nint magic(int x)  //\u6c42\u5f97magic\u503c\uff08\u672c\u4eba\u849f\u84bb\uff0c\u5199\u5f97\u7279\u522b\u4e11\uff09\n{\n\tif(x<10) return x;\n\tint a[20],t=0;\n\twhile(x)\n\t{\n\t\ta[++t]=x%10;\n\t\tx/=10;\n\t}\n\tint m=0;\n\tfor(int i=t;i>=2;i--)\n\t{\n\t\tm=m*10+abs(a[i]-a[i-1]);\n\t}\n\treturn magic(m);\n}\nint range(int l,int r)  //\u5206\u5757\u601d\u8def\u7684\u533a\u95f4\u67e5\u8be2\n{\n  int ans=0;\n  if(belong(l)==belong(r))\n  {\n    for(int i=l;i<=r;i++)\n      ans+=(magic(i)==7);\n    return ans;\n  }\n  ans=sum[belong(r)]-sum[belong(l)-1];\n  for(int i=st[belong(l)];i<l;i++)\n    ans-=(magic(i)==7);\n  for(int i=r+1;i<=en[belong(r)];i++)\n    ans-=(magic(i)==7);\n  return ans;\n}\nsigned main()\n{\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  cout.tie(0);\n  cin>>l>>r;\n  start();\n  cout<<range(l,r);\n  return 0;\n}\n```\n\n---\n\n## \u603b\u7ed3\n\n\u8fd9\u662f\u849f\u84bb\u7684\u7b2c\u4e00\u7bc7\u535a\u5ba2\uff0c\u671b\u80fd\u901a\u8fc7\u672c\u4eba\u7684\u4e00\u70b9\u70b9\u5fae\u5fae\u7684\u5e2e\u52a9\uff0c\u4f7f\u5f97\u66f4\u591a\u4eba\u5728\u5076\u7136\u4e2d\u4f53\u4f1a\u7b97\u6cd5\u4e4b\u7f8e\u3002",
        "postTime": 1653192975,
        "uid": 488775,
        "name": "_SAI_",
        "ccfLevel": 5,
        "title": "P1822\u9898\u89e3\uff0c \u5206\u5757\u4e0e\u6253\u8868\u7684\u6709\u673a\u7ed3\u5408"
    },
    {
        "content": "\u4e2a\u4eba\u89c9\u5f97\u8fd9\u662f\u4e00\u9053\u5f88\u597d\u7684 DFS \u9898\u3002\n\n\u5bf9\u4e8e\u6bcf\u6b21\u641c\u7d22\uff0c\u90fd\u8981\u6269\u5c55\u51fa\u4e00\u4e2a\u6570\u4f4d\uff0c\u6240\u4ee5\u6bcf\u6b21\u679a\u4e3e\u7684\u5c31\u662f\u65b0\u6269\u5c55\u7684\u8fd9\u4e2a\u6570\u4f4d\u653e\u7684\u6570\u5b57\u3002\u5269\u4e0b\u6570\u4f4d\u4e0a\u7684\u7684\u6570\u5219\u7531\u4e0e\u5176\u76f8\u90bb\u6570\u4f4d\u4e0a\u7684\u6570\u63a8\u7406\u800c\u6765\u3002\u800c\u7531\u4e8e\u662f\u7edd\u5bf9\u503c\uff0c\u6240\u4ee5\u6709\u4e24\u79cd\u60c5\u51b5\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u70b9\u5c31\u662f**\u524d\u5bfc\u96f6**\uff0c\u5982\uff1a\n\n$magic(770)=7$ \u800c 770 \u5c31\u662f\u641c\u7d22 07 \u7684\u7ed3\u679c\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nll a,b,ans;\nint len; //b\u7684\u6570\u4f4d\nvoid dfs(ll,int);\nvoid f(int,int,ll,int*);\nint main(){\n\tscanf(\"%lld%lld\",&a,&b);\n\tll b1=b;\n\twhile(b1){\n\t\tlen++;\n\t\tb1/=10;\n\t}\n\tdfs(7,1);//\u6240\u6709\u9b54\u6cd5\u6570\u75317\u641c\u7d22\u800c\u6765\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\nvoid f(int w,int ww,ll s,int num[15]){\n//w,ww\u8868\u793a\u6570\u4f4d\u4e2a\u6570\uff0cs\u662f\u65b0\u4ea7\u751f\u7684\u6570\uff0cnum\u6570\u7ec4\u662fx\u7684\u5404\u4e2a\u6570\u4f4d\n\tif(w==0){//\u6240\u6709\u6570\u4f4d\u90fd\u641c\u7d22\u5b8c\u4e86\n\t\tdfs(s,ww+1);//\u641c\u7d22\u4e0b\u4e00\u4e2a\u6570\n\t\treturn;\n\t}\n\tint s1,s2;\n\ts1=s%10+num[w],s2=s%10-num[w];//\u7edd\u5bf9\u503c\u4ea7\u751f\u7684\u4e24\u79cd\u60c5\u51b5\n\tif(s1<10) f(w-1,ww,s*10+s1,num);\n\tif(s2>=0&&s1!=s2) f(w-1,ww,s*10+s2,num);\n}\nvoid dfs(ll x,int w){ //x\u8868\u793a\u5f53\u524d\u641c\u7684\u6570,w\u8868\u793ax\u7684\u6570\u4f4d\n\tif(x>=a&&x<=b){\n\t\tans++;\n\t}\n\tif(x>=b) return;//\u8fb9\u754c\u6761\u4ef6\n\tint num[15],nl=0;\n\tmemset(num,0,sizeof(num));\n\twhile(x){\n\t\tnum[++nl]=x%10;\n\t\tx/=10;\n\t}//\u62c6\u5206x\u7684\u5404\u4e2a\u6570\u4f4d\n\tfor(int j=0;j+w<len;++j){//j\u8868\u793a\u52a0\u4e0a\u7684\u524d\u5bfc\u96f6\u7684\u4e2a\u6570\n\t\tfor(int i=1;i<=9;++i){//\u679a\u4e3e\u6700\u9ad8\u6570\u4f4d\u4e0a\u7684\u6570\n\t\t\tf(j+w,j+w,i,num);\n\t\t}\n\t} \n}\n```\n",
        "postTime": 1644421648,
        "uid": 566900,
        "name": "zhangzongyue",
        "ccfLevel": 0,
        "title": "P1822\u9898\u89e3"
    },
    {
        "content": "  \n# \u601d\u8def\u5206\u6790\n\n\u7784\u4e00\u4e0b\u6570\u636e\u8303\u56f4,\u5c45\u7136\u8fbe\u5230\u4e86$10$\u4ebf\u7ea7\u522b,\u663e\u7136\u66b4\u529b\u7edf\u8ba1\u5c31\u884c\u4e0d\u901a\u4e86,\u9898\u76ee\u4e2d\u53c8\u663e\u7136\u4e0e\u6570\u4f4d\u6709\u5173.\u6240\u4ee5\u6211\u4eec\u8003\u8651**\u7c7b\u4f3c\u6570\u4f4d\u7684\u641c\u7d22\u529e\u6cd5**\u89e3\u51b3\u672c\u9898.  \n\n\u9996\u5148\u6211\u4eec\u9700\u660e\u767d\u82e5**\u4e00\u4e2a\u6570\u5b57\u53ef\u80fd\u4e3a\u5e78\u8fd0\u6570,\u90a3\u5fc5\u662f\u7531\u4e00\u4e2a\u4f1a\u662f\u5e78\u8fd0\u6570\u7684\u6570\u62d3\u5c55\u8fc7\u6765\u7684**,\u9898\u76ee\u4e5f\u544a\u8bc9\u6211\u4eec$7$\u662f\u5e78\u8fd0\u6570\u5b57,\u5219**\u6240\u6709\u5e78\u8fd0\u6570\u5b57\u5c31\u5fc5\u662f\u7531$7$\u62d3\u5c55\u6765\u7684**.\u6240\u4ee5\u6211\u4eec\u7531$7$\u5f00\u59cb\u75af\u72c2\u62d3\u5c55,\u62d3\u5c55\u51fa\u6765\u7684\u6570\u5728$l-r$\u4e4b\u5185\u5373\u4f7f\u7b26\u5408\u6761\u4ef6\u7684\u89e3,\u8fd9\u4e9b\u89e3\u53c8\u8fd8\u80fd\u62d3\u5c55\u51fa\u5176\u4ed6\u89e3,\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5199\u5e7f\u641c\u6765\u62d3\u5c55\u60c5\u51b5.\n\n\u90a3\u4e48\u4e00\u5f00\u59cb\u5c31\u628a$7$\u5165\u961f,\u5982\u4f55\u62d3\u5c55\u5462,\u9996\u5148\u6211\u4eec\u7684\u539f\u59cb\u6570\u5982\u679c\u53ef\u4ee5\u901a\u8fc7$magic$\u53d8\u4e3a\u5e78\u8fd0\u6570\u7684\u8bdd,\u53ef\u4ee5\u901a\u8fc7\u4e24\u79cd\u65b9\u5f0f\u62d3\u5c55\u51fa\u6765.  \n\n### \u62d3\u5c55\u65b9\u5f0f\n\n\u6211\u4eec\u82e5\u4ee4\u5f53\u524d\u7528\u4e8e\u62d3\u5c55\u7684\u5e78\u8fd0\u6570\u5b57\u4e3a **$magicx$** ,\u539f\u59cb\u6570\u4e3a **$old$**   \n\n\u90a3\u4e48$magicx$\u7684\u5f53\u524d\u4f4d **$nowx$** \u5fc5\u662f\u7531\u539f\u59cb\u6570$old$\u7684\u4e0a\u4e00\u4f4d\u51cf\u5f53\u524d\u4f4d\u5f97\u5230\u7684.  \n\u6240\u4ee5\u6211\u4eec\u8981\u62d3\u5c55\u7684\u4e0b\u4e00\u4e2a\u539f\u59cb\u6570\u4e3a $old+10^{wei+1}$ $\\times$ $(\u539f\u59cb\u6570\u5f53\u524d\u4f4d-nowx)$ \u6216  $old+10^{wei+1}$ $\\times$ $(nowx+\u539f\u59cb\u6570\u5f53\u524d\u4f4d)$ .\n### \u521d\u59cb\u539f\u59cb\u6570\u4ee5\u53ca\u590d\u6742\u5ea6\u5c0f\u5c0f\u7684\u5206\u6790\n\n\u539f\u59cb\u6570\u4e2a\u4f4d\u5fc5\u4e3a $0-9$ \u4e4b\u95f4\u7684\u67d0\u4e2a,\u7531\u8fd9\u4e2a\u4e2a\u4f4d\u6211\u4eec\u62d3\u5c55\u4e0b\u4e00\u4e2a\u539f\u59cb\u6570\u5c31\u53ea\u67092\u79cd\u60c5\u51b5,\u6240\u4ee5\u961f\u5217\u4e2d\u4e00\u4e2a\u72b6\u6001\u5c31\u6700\u591a\u53ea\u6709$2^{10}$(~~\u5e94\u8be5\u6ca1\u7b97\u9519\u8db4~~)   \n\n### \u540e\u8bdd\n\u6240\u4ee5\u5c31\u53ef\u4ee5\u6109\u5feb\u7684\u641c\u7d22\u6c42\u89e3\u5566$QAQ$.\n\n\u53e6\u5916\u8fd8\u6709\u4e9b\u7ec6\u8282\u89c1\u4ee3\u7801\u8db4(\u8bb0\u5f97\u5f00$long\\ long$,\u6211\u6ca1\u5f00\u5c31\u53ea\u6709$70$\u4e86$QWQ$).  \n###  _\u4ee5\u4e0b\u662f\u4ee3\u7801\u90e8\u5206(\u91cc\u9762\u8fd8\u6709\u6ce8\u91ca\u7684\u55f7)_\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nint l,r,ans;\nqueue<int>q;\nvoid DFS(int magicx,int old,int wei)\n{\n\tif(old>r) return;\n\tif(magicx==0)//\u5f53\u6211\u4eecmagicx\u7684\u4f4d\u6570\u88ab\u679a\u4e3e\u5b8c\u4e86\u540e.\u4ecd\u7136\u6709\u4e9b\u72b6\u6001\u53ef\u4ee5\u62d3\u5c55.\n\t//\u59827,\u663e\u71367\u4f1a\u76f4\u63a5\u62d3\u5c55\u523070,\u523070\u65f6magicx\u5c31\u53d8\u6210\u4e867/10=0\u4e86\u3002\n\t//\u4f46\u4ecd\u6709\u5982770,7770\u7684\u53ef\u4ee5\u62d3\u5c55.\u5c31\u76f4\u63a5\u628aold\u6700\u5927\u4f4d\u62ff\u8fc7\u6765,\u590d\u5236\u4e00\u904d\u63a5\u5230\u6700\u5927\u4f4d\u4e0a. \n\t{\n\t\tint nxt=old/pow(10,wei);//\u53d6\u6700\u9ad8\u4f4d.\n\t\tif(!nxt)return;\n\t\tDFS(magicx,old+nxt*pow(10,wei+1),wei+1);//\u628a\u7c7b\u4f3c70\u53d8\u4e3a770; \n\t\tif(old>=l&&old<=r) ans++;\n\t\tif(pow(10,wei+1)<r) q.push(old);//\u8fd8\u6709\u62d3\u5c55\u53ef\u80fd\u7684\u5c31\u5165\u961f. \n\t\treturn; \n\t}\n\t//\u628amagicx/10\u4fdd\u8bc1\u6bcf\u6b21magicx\u7684\u4e2a\u4f4d\u6570\u662f\u6211\u4eec\u53ef\u62d3\u5c55\u7684\u6570. \n\tint nxt=old/pow(10,wei),nowx=magicx%10; magicx/=10;\n\t//\u7531\u4e8e\u539f\u6570\u7684\u4e0a\u4e00\u4f4d\u51cf\u5f53\u524d\u4e3aold\u7684\u7edd\u5bf9\u503c\u4e3amagicx\u7684\u5f53\u524d\u4f4d\u6570,\u800cmagicx\u7684\u5f53\u524d\u4f4d\u6570\u6211\u4eec\u77e5\u9053.\n\t//\u6240\u4ee5\u53ef\u62d3\u5c55\u7684\u4e0a\u4e00\u4f4d\u5c31\u662fnxt-nowx\u6216nxt+nowx;\n\tif(nxt-nowx>=0) DFS(magicx,old+pow(10,wei+1)*(nxt-nowx),wei+1);\n\tif(nowx&&nowx+nxt<10) DFS(magicx,old+pow(10,wei+1)*(nowx+nxt),wei+1);\n}\nsigned main() \n{\n  \tscanf(\"%lld%lld\",&l,&r);\n\tq.push(7);\n  \tif(l<=7&&r>=7) ans++;\n  \twhile(!q.empty())\n  \t{\n  \t\tfor(int i=0;i<=9;i++)\n\t\tDFS(q.front(),i,0);\n\t\tq.pop();\n  \t}\n  \tprintf(\"%lld\",ans);\n  \treturn 0;\n}\n```\n",
        "postTime": 1601992867,
        "uid": 221002,
        "name": "hytree",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1822 \u3010\u9b54\u6cd5\u6307\u7eb9\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5077\u770b\u6807\u7b7e\u7684\u540c\u5b66\u4eec\u4e00\u5b9a\u77e5\u9053\u662f**\u641c\u7d22**\u3002\u90a3\u4e48\u600e\u4e48\u641c\u5462\uff1f\n\n\u770b\u4e00\u4e0b\u6570\u636e\u8303\u56f4\uff0c\u5341\u4ebf\u7684\u8303\u56f4\u679a\u4e3e\u6bcf\u4e2a\u6570\u641c\u4f1a\u8d85\u65f6\u3002\u4f46\u5982\u679c\u4ed4\u7ec6\u5ba1\u9898\u5c31\u77e5\u9053\u6700\u540e\u7684\u7ed3\u679c 7 \u662f\u786e\u5b9a\u7684\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5012\u7740\u641c\uff0c\u4e5f\u5c31\u662f\u4ece 7 \u5411\u80fd\u53d8\u6210\u5b83\u7684\u6570\u9010\u5c42\u62d3\u5c55\u3002\u800c\u4e14\u9006\u5411\u64cd\u4f5c\u7684\u7ed3\u679c\u4e00\u5b9a\u6bd4\u539f\u6570\u5927\uff0c\u6240\u4ee5\u539f\u6570\u8d85\u51fa\u8303\u56f4\u5c31\u4e0d\u7528\u641c\u4e86\u3002\n\n### \u4e00\u4e2a\u8981\u6ce8\u610f\u7684\u5730\u65b9\n\n\u6211\u4eec\u6765\u770b\u8fd9\u6837\u4e00\u7ec4\u6570\u636e\n```\n1108\n```\n\u5b83\u7684\u64cd\u4f5c\u7ed3\u679c\u4e3a 018 \uff0c\u4f46 18 \u4e0d\u4f1a\u62d3\u5c55\u5230 1108 \u3002\u6240\u4ee5\u6211\u4eec\u62d3\u5c55\u65f6\u8981**\u8865\u8db3\u524d\u5bfc\u96f6**\u3002\n# \u4ee3\u7801\uff1a\n```\n#include <bits/stdc++.h>\nusing namespace std;\nqueue <int> q;\nint ans;\nint l, r;\nvoid make_num(int n, int sum, int las, int len) {//\u9020\u51fa\u7b26\u5408\u8981\u6c42\u7684\u6570\u3002\n    //n \u4ee3\u8868\u64cd\u4f5c\u6570\uff0csum \u4ee3\u8868\u64cd\u4f5c\u540e\u7684\u6570\uff0clas \u4ee3\u8868\u4e0a\u4e00\u4f4d\u6570\uff08\u7528\u4e8e\u63a8\u4e0b\u4e00\u4f4d\uff09\uff0clen \u53d6\u5f53\u524dn\u7684\u9996\u4f4d\u3002\n    if (!len) {\n        q.push(sum);//\u9020\u51fa\u6570\u540e\u52a0\u5165\u961f\u5217\u3002\n        return;\n    }\n    if (las - n / len >= 0 && n / len != 0)//\u56e0\u4e3a\u5dee\u662f\u7edd\u5bf9\u503c\u6240\u4ee5\u5206\u7c7b\u8ba8\u8bba\u3002\n        make_num(n % len, sum * 10 + las - n / len, las - n / len, len / 10);\n    if (las + n / len <= 9)\n        make_num(n % len, sum * 10 + las + n / len, las + n / len, len / 10);\n}\nvoid bfs() {\n    if (q.empty()) return;\n    int x = q.front();\n    q.pop();\n    if (l <= x && x <= r) ans++;//\u5728\u533a\u95f4\u5185\u7b54\u6848\u52a0\u4e00\u3002\n    if (x >= r) { //\u8d85\u51fa\u533a\u95f4\u5c31\u8fd4\u56de\u3002\n        if (!q.empty()) bfs();\n        return;\n    }\n    int len = 1;\n    while (len * 10 <= x) len *= 10;\n    for (int i = 1; i <= 9; i++) //\u679a\u4e3e\u53ef\u80fd\u7684\u9996\u4f4d\u3002\n        make_num(x, i, i, len);\n    while (len <= r / 10) {\n       len *= 10;\n        for (int i = 1; i <= 9; i++)\n            make_num(x, i, i, len);//\u8865\u96f6\u540e\u7ee7\u7eed\u62d3\u5c55\uff0c\u4f46\u8865\u96f6\u7684\u6570\u4e0d\u8ba1\u5165\u7ed3\u679c\n    }\n    if (!q.empty()) bfs();\n}\nint main() {\n    scanf(\"%d%d\", &l, &r);\n    q.push(7);// 7 \u4e00\u5b9a\u4e3a\u521d\u59cb\u6001\n    bfs();\n    printf(\"%d\", ans);\n}\n```",
        "postTime": 1674789437,
        "uid": 763215,
        "name": "Boenzhang",
        "ccfLevel": 0,
        "title": "1822"
    }
]