[
    {
        "content": "**\u9898\u610f** \uff1a \u7ed9\u51fa\u5e73\u9762\u4e0a\u7684\u4e00\u4e2a\u70b9\u96c6 $S$ \u3002\r\n\r\n\u7ed9\u51fa\u5e73\u9762\u4e0a\u7684\u82e5\u5e72\u4e2a\u5706\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5706\uff0c\u5224\u5b9a\u5176\u662f\u5426\u5b8c\u5168\u5728 $S$ \u7684\u51f8\u5305\u7684\u5185\u90e8\u3002\r\n\r\n\u4fdd\u8bc1\u5706\u7684\u534a\u5f84\u53d8\u5316\u4e0d\u8d85\u8fc7 $1$ \u65f6\u7b54\u6848\u4e0d\u53d1\u751f\u53d8\u5316\u3002\r\n\r\n$n,m\\leq 5\\times 10^5$\uff0c\u65f6\u9650 $\\texttt{2s}$\u3002\r\n\r\n------------\r\n\r\n\u5c06\u51f8\u5305\u62c6\u5206\u6210\u4e0a\u51f8\u58f3\u548c\u4e0b\u51f8\u58f3\u3002\u6211\u4eec\u53ea\u9700\u5206\u522b\u5224\u65ad\u5706\u662f\u5426\u5728 \u4e0a/\u4e0b \u51f8\u58f3\u5185\u90e8\u3002\r\n\r\n\u4e0b\u9762\u53ea\u4ecb\u7ecd\u4e0a\u51f8\u58f3\uff0c\u5c06 $y$ \u5750\u6807\u7ffb\u8f6c\u5373\u53ef\u8f6c\u5316\u4e3a\u4e0b\u51f8\u58f3\u3002\r\n\r\n\u8bb0 ${\\rm convex}(S)$ \u4e3a\u70b9\u96c6 $S$ \u7684\u4e0a\u51f8\u58f3\uff08\u5185\u90e8\u7684\u533a\u57df\uff09\u3002\r\n\r\n\u8bb0 ${\\rm contract}(T,r)$ \u8868\u793a\u80fd\u5b8c\u5168\u653e\u5165\u5e73\u9762\u533a\u57df $T$ \u4e2d\u7684\u534a\u5f84\u4e3a $r$ \u7684\u5706\u7684\u5706\u5fc3\u7684\u96c6\u5408\u3002\r\n\r\n\u8003\u8651\u968f\u7740 $r$ \u7684\u589e\u5927  ${\\rm contract}\\big({\\rm convex}(S),r\\big)$ \u4f1a\u5982\u4f55\u53d8\u5316\u3002\r\n\r\n\u82e5\u5c06 ${\\rm convex}(S)$ \u63cf\u8ff0\u4e3a\u534a\u5e73\u9762\u4ea4\uff0c\u5219\u53d8\u5316\u76f8\u5f53\u4e8e\u6bcf\u4e2a\u534a\u5e73\u9762\u7f29\u5c0f\u4e86 $r$ \u5355\u4f4d\u8ddd\u79bb\u3002\r\n\r\n\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u6709\u4e9b\u534a\u5e73\u9762\u53ef\u80fd\u4e0d\u518d\u5728\u51f8\u58f3\u4e0a\uff0c\u9700\u8981\u5c06\u5176\u5220\u9664\u3002\r\n\r\n\u6bcf\u4e2a\u534a\u5e73\u9762\u53ea\u53ef\u80fd\u88ab\u4e24\u4fa7\u7684\u534a\u5e73\u9762\u8feb\u5bb3\u6389\uff0c\u7528**\u5806**\u7ef4\u62a4\u6bcf\u4e2a\u534a\u5e73\u9762\u88ab\u8feb\u5bb3\u6389\u7684\u65f6\u95f4\u3002\r\n\r\n\u5982\u4f55\u8ba1\u7b97 $l_1,l_3$ \u8feb\u5bb3 $l_2$ \u6240\u9700\u65f6\u95f4\uff1f\r\n\r\n\u8fd9\u662f\u521d\u4e2d\u6570\u5b66\u57fa\u7840\u9898\uff1a\u505a\u4e24\u6761\u89d2\u5e73\u5206\u7ebf\uff0c\u53d6\u4ea4\u70b9\u5230 $l_2$ \u7684\u8ddd\u79bb\u3002\r\n\r\n![](https://cdn.luogu.com.cn/upload/image_hosting/v0wp6nzq.png)\r\n\r\n\u5f53\u67d0\u4e2a\u534a\u5e73\u9762\u88ab\u5220\u9664\u65f6\uff0c\u91cd\u65b0\u8ba1\u7b97\u4e24\u4fa7\u7684\u534a\u5e73\u9762\u7684\u8feb\u5bb3\u65f6\u95f4\u3002\r\n\r\n\u5bf9\u4e8e\u4e00\u4e2a\u6b63\u786e\u7684\u6536\u7f29\u51f8\u58f3\uff0c\u5bb9\u6613**\u4e8c\u5206**\u5224\u5b9a\u5706\u5fc3\u662f\u5426\u5728\u5176\u4e2d\u3002\r\n\r\n\u7528**\u5e76\u67e5\u96c6**\u7ef4\u62a4\u5e8f\u5217\uff0c\u80fd\u652f\u6301\u5220\u9664\u67d0\u4e2a\u5143\u7d20\uff0c\u5feb\u901f\u67e5\u627e\u67d0\u4e2a\u5143\u7d20\u7684\u524d\u540e\u7ee7\u3002\r\n\r\n\u590d\u6742\u5ea6 $O\\big((n+m)\\log n\\big)$\u3002\r\n\r\n\u4ee3\u7801\u5e38\u6570\u5f88\u5927\u3002\r\n\r\n```cpp\r\n#include<algorithm>\r\n#include<cstdio>\r\n#include<queue>\r\n#include<cmath>\r\n#define db double\r\n#define MaxN 500500\r\nusing namespace std;\r\nnamespace io {\r\n  char buf[5005000],*p1=buf,*p2=buf;\r\n  #define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,5000000,stdin),p1==p2)?EOF:*p1++)\r\n  int rd() {\r\n    int x=0;char ch=getchar(),f=0;\r\n    while(ch<'0'||'9'<ch)f|=(ch=='-'),ch=getchar();\r\n    while('0'<=ch&&ch<='9')x=x*10+(ch^48),ch=getchar();\r\n    return f?-x:x;\r\n  }\r\n}using io::rd;\r\nconst db eps=1e-3;\r\nstruct Point{db x,y;}p[MaxN];\r\nbool cmpP(const Point &A,const Point &B)\r\n{return fabs(A.x-B.x)<eps ? A.y<B.y : A.x<B.x;}\r\nPoint operator + (const Point &A,const Point &B){return (Point){A.x+B.x,A.y+B.y};}\r\nPoint operator - (const Point &A,const Point &B){return (Point){A.x-B.x,A.y-B.y};}\r\nPoint operator * (const Point &A,db x){return (Point){A.x*x,A.y*x};}\r\nPoint operator / (const Point &A,db x){return (Point){A.x/x,A.y/x};}\r\ndb operator ^ (const Point &A,const Point &B){return A.x*B.y-A.y*B.x;}\r\nbool anticlo(Point A,Point B,Point C){return ((A-B)^(C-B))>eps;}\r\ndb gl(Point A){return sqrt(A.x*A.x+A.y*A.y);}\r\nstruct Line{Point a,b;};\r\ndb dis(Line l,Point p){return ((p-l.a)^(l.b-l.a))/gl(l.b-l.a);}\r\nbool chk(Line l,Point p,db r){return dis(l,p)+eps>r;}\r\nPoint dir(Line l){return (l.b-l.a)/gl(l.b-l.a);}\r\nLine shift(Line l,db dis)\r\n{\r\n  Point d=dir(l)*dis;\r\n  swap(d.x,d.y);d.y*=-1;\r\n  return (Line){l.a+d,l.b+d};\r\n}\r\nPoint inter(Line A,Line B)\r\n{\r\n  db sl=(A.a-B.b)^(B.a-B.b),sr=(B.a-B.b)^(A.b-B.b);\r\n  return A.a+(A.b-A.a)*sl/(sl+sr);\r\n}\r\ndb gr(Line A,Line B,Line C)\r\n{\r\n  Point p1=inter(A,B),p2=inter(B,C);\r\n  Line l1=(Line){p1,p1-dir(A)+dir(B)}\r\n      ,l2=(Line){p2,p2-dir(B)+dir(C)};\r\n  return fabs(dis(B,inter(l1,l2)));\r\n}\r\nstruct Cir{Point o;int r,p;}s[MaxN];\r\nbool cmpC(const Cir &A,const Cir &B){return A.r<B.r;}\r\nint f[MaxN],c[MaxN];\r\nint find(int u)\r\n{return f[u]==u ? u : f[u]=find(f[u]);}\r\nvoid merge(int u,int v){\r\n  u=find(u);v=find(v);\r\n  c[f[u]=v]+=c[u];\r\n}\r\nLine l[MaxN];db dt[MaxN];\r\n#define Pr pair<db,int>\r\n#define fir first\r\n#define sec second\r\n#define mp make_pair\r\npriority_queue<Pr,vector<Pr>,greater<Pr>> q;\r\nint nowr,top;\r\nvoid upd(int p)\r\n{\r\n  if (p==1||p==top)return;\r\n  db ndt=gr(l[find(p-1)],l[p],l[p+c[p]]);\r\n  if (dt[p]-ndt>eps)q.push(mp(dt[p]=ndt,p));\r\n}\r\nvoid del(int p){\r\n  merge(p,p-1);p=find(p);\r\n  upd(p);upd(p+c[p]);\r\n}\r\nbool qry(Point p)\r\n{\r\n  int tl=2,tr=top-1;\r\n  while(tl<tr){\r\n    int mid=(tl+tr+1)>>1;\r\n    int t=find(mid);\r\n    if (t==1){tl=mid+1;continue;}\r\n    int pre=find(t-1);\r\n    if (inter(shift(l[pre],nowr),shift(l[t],nowr)).x<p.x+eps)tl=mid;\r\n    else tr=mid-1;\r\n  }return tl<=1||tl>=top||chk(l[find(tl)],p,nowr);\r\n}\r\nPoint stk[MaxN];\r\nint n,m,tn;\r\nbool ans[MaxN];\r\nvoid calc()\r\n{\r\n  top=0;\r\n  for (int i=1;i<=n;i++){\r\n    while(top>1&&!anticlo(stk[top-1],stk[top],p[i]))top--;\r\n    stk[++top]=p[i];\r\n  }\r\n  top--;\r\n  for (int i=1;i<=top;i++){\r\n    l[i]=(Line){stk[i],stk[i+1]};\r\n    f[i]=i;c[i]=1;\r\n  }\r\n  while(!q.empty())q.pop();\r\n  for (int i=2;i<top;i++)\r\n    q.push(mp(dt[i]=gr(l[i-1],l[i],l[i+1]),i));\r\n  for (int i=1;i<=m;i++){\r\n    nowr=s[i].r;\r\n    while(!q.empty()&&q.top().fir+eps<nowr){\r\n      Pr now=q.top();q.pop();\r\n      if (now.fir-dt[now.sec]>eps)continue;\r\n      del(now.sec);\r\n    }\r\n    ans[s[i].p]&=chk(l[1],s[i].o,nowr);\r\n    ans[s[i].p]&=chk(l[top],s[i].o,nowr);\r\n    if (ans[s[i].p])ans[s[i].p]&=qry(s[i].o);\r\n  }\r\n}\r\nvoid solve()\r\n{\r\n  n=rd();\r\n  for (int i=1;i<=n;i++){p[i].x=rd();p[i].y=rd();}\r\n  sort(p+1,p+n+1,cmpP);\r\n  m=rd();\r\n  for (int i=1;i<=m;i++){\r\n    s[i].o.x=rd();s[i].o.y=rd();s[i].r=rd();\r\n    ans[s[i].p=i]=1;\r\n  }sort(s+1,s+m+1,cmpC);\r\n  calc();\r\n  for (int i=1;i<=n;i++)p[i].y*=-1;\r\n  for (int i=1;i<=m;i++)s[i].o.y*=-1;\r\n  calc();\r\n  for (int i=1;i<=m;i++)putchar(ans[i] ? '1' : '0');puts(\"\");\r\n}\r\nint main()\r\n{\r\n  int T=rd();\r\n  while(T--)solve();\r\n  return 0;\r\n}\r\n```",
        "postTime": 1625499870,
        "uid": 58705,
        "name": "command_block",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 \u3010P5525 [Ynoi2012] WC2016\u5145\u6ee1\u4e86\u5931\u671b\u3011"
    },
    {
        "content": "\u5455\u5410\u9898\uff0c\u7801\u4e86\u4e00\u665a\u4e0a\u8c03\u4e86\u4e00\u5929\uff0c\u4e00\u5806\u7ec6\u8282\uff0c\u771f\u7684\u65e0\u8bed\u3002\n\n\u4e0d\u8fc7\u8c03\u8bd5\u8ba1\u7b97\u51e0\u4f55\u7684\u9898\u8fd8\u662f~~\u5f88\u6709\u4e50\u8da3~~\u5e76\u4e14\u80fd\u5b66\u5230\u5f88\u591a\u4e1c\u897f\u7684\uff0c\u81f3\u5c11\u73b0\u5728\u4f1a\u51e0\u4f55\u753b\u677f\u7684\u57fa\u672c\u7528\u6cd5\u4e86\u3002\n\n\u5176\u5b9e cmd \u5df2\u7ecf\u8bb2\u7684\u5f88\u6e05\u695a\u4e86\uff0c\u8fd9\u4efd\u9898\u89e3\u53ef\u80fd\u4f1a\u591a\u4e00\u4e9b\u7ec6\u8282\u7684\u8bb2\u89e3\u3002        \n\n\u6211\u4eec\u9996\u5148\u8f6c\u5316\u9898\u610f\uff0c\u4e0d\u96be\u53d1\u73b0\u5982\u679c\u6839\u636e\u5b9a\u4e49\uff0c\u4efb\u610f\u4e24\u70b9\u53ef\u8fbe\u7ebf\u6bb5\u4e0a\u7684\u4efb\u610f\u4e00\u70b9\u53ef\u8fbe\uff0c\u53ef\u63a8\u51fa\u4efb\u610f\u4e00\u4e2a\u7531\u7ed9\u51fa\u70b9\u6784\u6210\u7684\u591a\u8fb9\u5f62\u5185\u7684\u70b9\u53ef\u8fbe\uff0c\u8fd9\u4e2a trick \u5728[\u6b64\u9898](https://www.luogu.com.cn/problem/P4049)\u4e2d\u4e5f\u6709\u6240\u6d89\u53ca\u3002      \n\n\u73b0\u5728\u95ee\u9898\u53d8\u6210\u4e86\u7ed9\u5b9a\u4e00\u4e2a\u51f8\u5305\uff0c\u95ee\u4e00\u4e9b\u5706\u662f\u5426\u5728\u51f8\u5305\u5185\u3002             \n\n\u6211\u4eec\u8003\u8651\u5982\u679c\u662f\u95ee\u70b9\u5c31\u7b80\u5355\u591a\u4e86\uff0c\u76f4\u63a5\u5206\u4e3a\u4e0a\u4e0b\u51f8\u58f3\u540e\u4e8c\u5206\u662f\u5728\u54ea\u6761\u7ebf\u4e0b\u9762\u5c31\u53ef\u4ee5\u76f4\u63a5\u7b97\u4e86\u3002                    \n\n\u8111\u6d1e\u4e00\u5f00\uff0c\u53ef\u4ee5\u60f3\u5230\u4e00\u79cd\u5224\u5706->\u5224\u70b9\u7684\u8f6c\u5316\uff1a\u5c06\u51f8\u5305\u6574\u4f53\u5185\u90e8\u51f9 $r$ \u4e2a\u5355\u4f4d\uff0c\u7136\u540e\u95ee\u5706\u5fc3\u662f\u5426\u5728\u51f8\u5305\u5185\u3002               \n\n\u6240\u4ee5\u6211\u4eec\u5982\u679c\u80fd\u7ef4\u62a4\u51f8\u5305\u5728\u4efb\u610f\u51f9\u9677 $r$ \u4e2a\u5355\u4f4d\u65f6\u7684\u51f8\u5305\u5f62\u6001\u5c31\u597d\u5566\uff01\uff01\uff01    \n\n\u5c06 $r$ \u770b\u6210\u65f6\u95f4\u8f74\uff0c\u4e0d\u96be\u53d1\u73b0\u65f6\u95f4\u8f74\u4f1a\u88ab\u5212\u5206\u4e3a\u591a\u4e2a\u6bb5\uff0c\u5982\u679c\u4ece\u4e00\u4e2a\u6bb5\u8fc7\u6e21\u5230\u4e0b\u4e00\u4e2a\u6bb5\u5c31\u4f1a\u4f7f\u5f97\u51f8\u5305\u4e0a\u7684\u67d0\u6761\u7ebf\u6bb5\u88ab\u76f8\u90bb\u7684\u4e24\u6761\u7ebf\u6bb5\u5939\u6389\uff0c\u8fd9\u91cc\u53ef\u4ee5\u753b\u4e2a\u56fe\u6765\u611f\u77e5\u4e00\u4e0b\uff1a                   \n\n\n[![HtF2FO.png](https://s4.ax1x.com/2022/02/10/HtF2FO.png)](https://imgtu.com/i/HtF2FO)         \n\n\u5982\u56fe\uff0c\u5047\u8bbe $AB,BC,CD$ \u4e09\u6761\u7ebf\u6bb5\u4e3a\u51f8\u5305\u4e0a\u7684\u7ebf\u6bb5\uff0c$EF$ \u662f\u5e73\u884c\u4e8e $BC$\uff0c\u4e14\u8fc7 $\u2220ABC,\u2220BCD$ \u89d2\u5e73\u5206\u7ebf\u4ea4\u70b9\u7684\u4e00\u6761\u76f4\u7ebf\u3002               \n\n\u8bbe\u4e24\u4e2a\u89d2\u5e73\u5206\u7ebf\u7684\u4ea4\u70b9\u4e3a $P$\uff0c$P$ \u4e0e\u76f4\u7ebf $BC$ \u7684\u8ddd\u79bb\u4e3a $d$\uff0c\u90a3\u4e48\u5f53\u5f53\u524d\u65f6\u523b\u4e3a $d$ \u65f6\uff0c$BC$ \u79fb\u52a8\u5230 $EF$ \u4e0a\u6765\u5e76\u4e14\u5f62\u6210\u7684\u534a\u5e73\u9762\u521a\u597d\u5b8c\u5168\u8986\u76d6\u4e86 $A'B'$ \u548c $B'C'$ \u5f62\u6210\u7684\u534a\u5e73\u9762\uff0c\u6240\u4ee5\u6b64\u65f6\u8be5\u6761\u76f4\u7ebf\u5c31\u8981\u88ab\u5220\u6389\uff0c\u5176\u4e2d $A'B',B'C'$ \u4e3a $AB,BC$ \u5411\u5185\u51f9\u9677 $d$ \u4e2a\u5355\u4f4d\u6240\u5f97\u7684\u76f4\u7ebf\u3002                  \n\n\u5e76\u4e14\u7531\u4e8e\u662f\u51f8\u5305\uff0c\u6700\u5148\u5c06\u4e00\u6761\u76f4\u7ebf\u5939\u6389\u7684\u53ea\u6709\u53ef\u80fd\u662f\u76f8\u90bb\u7684\u4e24\u6761\u76f4\u7ebf\u3002\u5e94\u8be5\u53ef\u4ee5\u7528\u57fa\u672c\u7684\u4e09\u89d2\u51fd\u6570\u77e5\u8bc6\u76f4\u63a5\u4ee3\u5b57\u6bcd\u8ba1\u7b97\u5f97\u51fa\uff0c\u5982\u679c\u4e0d\u662f\u76f8\u90bb\u7684\u4e24\u6761\u76f4\u7ebf\u53bb\u5939\u88ab\u5220\u9664\u76f4\u7ebf\uff0c\u4e24\u6761\u89d2\u5e73\u5206\u7ebf\u7684\u4ea4\u70b9\u5230\u88ab\u5220\u9664\u76f4\u7ebf\u7684\u8ddd\u79bb\u4e00\u5b9a\u6bd4\u7528\u76f8\u90bb\u4e24\u6761\u76f4\u7ebf\u53bb\u5939\u4ea7\u751f\u7684\u89d2\u5e73\u5206\u7ebf\u7684\u4ea4\u70b9\u5230\u88ab\u5220\u9664\u76f4\u7ebf\u7684\u8ddd\u79bb\u5927\u3002\u8fd9\u91cc\u6ca1\u6709\u7ec6\u8bc1\uff0c\u5e94\u8be5\u4e0d\u96be\u3002             \n\n\uff08gxy \u8bf4\u8fd9\u4e2a\u4e1c\u897f\u5c31\u662f\u51f8\u5305\u7684\u5b9a\u4e49\uff0c\u4e0d\u662f\u5f88\u61c2\u2026\u2026\uff09          \n\n\u6839\u636e\u8fd9\u4e2a\u6027\u8d28\uff0c\u6211\u4eec\u4e0d\u96be\u60f3\u5230\u8fd9\u4e2a\u4e1c\u897f\u7684\u5c31\u662f\u5728\u5e8f\u5217\u4e0a\u5220\u9664\u6570\u4f46\u8981\u5feb\u901f\u7ef4\u62a4\u6b63\u786e\u4f4d\u7f6e\u4ee5\u53ca\u524d\u9a71\u540e\u7ee7\uff0c\u8fd9\u4e2a\u5e76\u67e5\u96c6\u5c31\u53ef\u4ee5\u505a\u4e86\u3002                 \n\n\u4e8e\u662f\u7efc\u5408\u4e0a\u8ff0\u65b9\u6cd5\uff0c\u6211\u4eec\u5c31\u6709\u4e86\u4e00\u4e2a $O((n + m) \\log n)$ \u7684\u505a\u6cd5\uff0c\u4e2a\u4eba\u611f\u89c9\u5176\u5b9e\u6bcf\u6b65\u90fd\u4e0d\u96be\u60f3\u4f46\u662f\u601d\u8003\u8fc7\u7a0b\u6bd4\u8f83\u8fde\u7eed\u6027\uff0c~~\u6211\u662f\u6ca1\u60f3\u5230\u76f8\u90bb\u4e24\u6761\u76f4\u7ebf\u624d\u4f1a\u5939\u6389\u4e2d\u95f4\u7ebf\u6bb5\u5c31\u6302\u6389\u4e86\u3002~~                       \n\n\u7136\u540e\u5c31\u662f\u5b9e\u73b0\u7ec6\u8282\uff1a               \n\n1. \u6b64\u9898\u4e0d\u5361\u7cbe\u5ea6\uff0ceps \u5f00 $10 ^ {-3}$ \u5c31\u591f\u4e86\uff0c\u800c\u4e14\u968f\u4fbf\u5f00\u65b9\u4e09\u89d2\u51fd\u6570\u597d\u50cf\u4e5f\u90fd\u4e0d\u4f1a\u6302\u7684\u5f88\u60e8\uff08\u5f53\u7136\u522b\u592a\u4f5c\u6b7b\u4e86\uff0c\u80fd\u7701\u8fd8\u662f\u80fd\u7701\uff09\uff0c\u6240\u4ee5\u5982\u679c WA \u6389\u7684\u8bdd\u5341\u6709\u516b\u4e5d\u90fd\u662f\u4f60\u5199\u9519\u4e86\u2026\u2026                 \n\n2. \u53ef\u4ee5\u62c6\u4e0a\u4e0b\u51f8\u58f3\u6765\u5199\u4e5f\u53ef\u4ee5\u5408\u5728\u4e00\u8d77\u5199\uff0c\u4f46\u662f\u5982\u679c\u4e0d\u7279\u5224\u8fb9\u754c\u7ebf\u7684\u8bdd\u524d\u516d\u4e2a\u6d4b\u8bd5\u70b9\u90fd\u4e0d\u80fd\u901a\u8fc7\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u8fc7\u540e\u56db\u4e2a\u70b9\u4f46\u524d\u516d\u4e2a\u70b9\u8fc7\u4e0d\u4e86\u7684\u60c5\u51b5\u53ef\u80fd\u662f\u8fd9\u91cc\u6302\u6389\u4e86\uff1b\n\n3. \u7528\u4f18\u5148\u961f\u5217\u5b9e\u73b0\u5206\u6bb5\u8fc7\u7a0b\uff0c\u53ef\u4ee5\u518d\u5f00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u54ea\u4e9b\u7ebf\u88ab\u5220\u4e86\uff0c\u8fd9\u6837\u5f53\u961f\u9996\u5f39\u51fa\u65f6\u5224\u4e00\u4e0b\u7ebf\u88ab\u5220\u6389\u6ca1\u6709\u5c31\u53ef\u4ee5\u9664\u53bb\u5197\u6742\u4fe1\u606f\u4e86\u3002             \n\n\u6700\u540e\u518d\u8d34\u4e00\u4e0b\u6b64\u9898\u7684\u7eaf\u968f\u673a\u5c0f\u70b9\u6570\u636e\u751f\u6210\u5668\uff0c\u662f\u6839\u636e\u968f\u673a\u751f\u6210\u7684 $n ^ 2$ \u4e2a\u70b9\u6c42\u51f8\u5305\u5f97\u5230\u7684\u671f\u671b\u70b9\u6570\u662f $n$ \u7684\u539f\u7406\u505a\u7684\uff0c\u8fd9\u6837\u751f\u6210\u7684\u6570\u636e\u4e0d\u662f\u5f88\u5f3a\uff0c\u8c8c\u4f3c\u5728 IOI2017 \u96c6\u8bad\u961f\u8bba\u6587\u300a\u6b63\u591a\u8fb9\u5f62\u300b\u91cc\u9762\u6709\u66f4\u597d\u7684\u6570\u636e\u751f\u6210\u65b9\u5f0f\u3002                  \n```cpp\n#include \"bits/stdc++.h\"\nusing namespace std;\nconst int Len = 2e6 + 5;\nconst double eps = 1e-6;\nint n,m;\nstruct point\n{\n\tdouble x,y;\n\tpoint(){x = y = 0.0;}\n\tpoint(double X,double Y){x = X , y = Y;}\n\tpoint operator - (const point &ano) const\n\t{return point(x - ano.x , y - ano.y);}\n\tdouble operator ^ (const point &ano) const\n\t{return x * ano.y - y * ano.x;}\n\tdouble operator * (const point &ano) const\n\t{return x * ano.x + y * ano.y;}\n\tvoid output(){printf(\"%.0f %.0f\\n\",x,y);}\n}p[Len],stk[Len];\nint top;\ndouble mul(point p0,point p1,point p2){return (p1 - p0) ^ (p2 - p0);}\nint idf(double x)\n{\n\tif(fabs(x) < eps) return 0;\n\tif(x > 0) return 1;\n\treturn -1;\n}\ndouble dis(point x,point y){return sqrt((y - x) * (y - x));}\nbool cmp(point x,point y)\n{\n\tdouble tmp = mul(p[1] , x , y);\n\tif(idf(tmp) > 0) return 1;\n\t//if(idf(tmp) == 0 && dis(p[1] , x) < dis(p[1] , y)) return 1;\n\treturn 0;\n}\nint nums[2];\nint main()\n{\n\tsrand(time(0));\n\tint T = 5;nums[0] = -1 , nums[1] = 1;\n\tprintf(\"%d\\n\",T);\n\twhile(T --)\n\t{\n\t\tint N = 10 * 10;//\u671f\u671b\u751f\u6210sqrt(N)\u4e2a\u70b9 \n\t\ttop = 0;\n\t\tfor(int i = 1 ; i <= N ; i ++) p[i].x = rand() % 10 * nums[rand() % 2], p[i].y = rand() % 10 * nums[rand() % 2];\n\t\tfor(int i = 1 ; i <= N ; i ++) if(p[i].y < p[1].y || (p[i].y == p[1].y && p[i].x < p[1].x)) swap(p[i] , p[1]);\n\t\tsort(p + 2 , p + 1 + N , cmp);\n\t\tstk[top = 1] = p[1];\n\t\tfor(int i = 2 ; i <= N ; i ++)\n\t\t{\n\t\t\tif(p[i - 1].x == p[i].x && p[i - 1].y == p[i].y) continue;\n\t\t\twhile(top > 1 && idf(mul(stk[top - 1] , stk[top] , p[i])) <= 0) top --;\n\t\t\tstk[++ top] = p[i];\n\t\t}\n\t\tprintf(\"%d\\n\",top);\n\t\tfor(int i = 1 ; i <= top ; i ++) stk[i].output();\n\t\tint m = 10;printf(\"%d\\n\",m);//\u95ee\u7684\u5706\u7684\u4e2a\u6570 \n\t\tfor(int i = 1 ; i <= m ; i ++)\n\t\t{\n\t\t\tint x = rand() % 10 , y = rand() % 10 , z = rand() % 10;\n\t\t\tprintf(\"%d %d %d\\n\",x,y,z);\n\t\t}\n\t}\n\treturn 0; \n}\n```",
        "postTime": 1644477860,
        "uid": 132533,
        "name": "Hakuoro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5525 [Ynoi2012] WC2016\u5145\u6ee1\u4e86\u5931\u671b"
    }
]