[
    {
        "content": "\u5927\u6982\u662f\u6811\u4e0a\u5dee\u5206\u7684\u9898\uff1f\n\n\u5148\u4ecb\u7ecd\u4e0b\u4ec0\u4e48\u662f\u6811\u4e0a\u5dee\u5206\u2026\u2026(\u8bf4\u5b9e\u5728\u7684\u5e94\u8be5\u53eb\u6811\u4e0a\u524d\u7f00\u548c\u6bd4\u8f83\u597d)\n\n\u5927\u6982\u662f\u6211\u4eec\u8981\u7b97\u8def\u5f84\u4e0a\u7684\u4e00\u4e9b\u6570(\u901a\u5e38\u662f\u6c42\u548c)\uff0c\u7136\u540e\u8ba1\u7b97\u8def\u5f84\u4fe1\u606f\u7684\u65f6\u5019\u6211\u4eec\u5904\u7406\u4e00\u4e9b\u4fe1\u606f\uff0c\u7136\u540e\u901a\u8fc7\u7b97$Dep_{u}+Dep_{v}-2Dep_{lca(u,v)}$\u6765\u8ba1\u7b97\u8def\u5f84\u4e0a\u7684\u4fe1\u606f\n\n\u9898\u76ee\u770b\u8d77\u6765\u975e\u5e38\u6709\u6811\u94fe\u5256\u5206\u7684\u611f\u89c9\u2026\u2026\u4f46\u662f\u95ee\u9898\u662f\uff0c\u8fd9\u9053\u9898\u6ca1\u6709\u4fee\u6539\u8fd9\u5c31\u5bfc\u81f4\u9898\u76ee\u96be\u5ea6\u5927\u5e45\u5ea6\u4e0b\u964d\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u628a\u6bcf\u4e2a\u70b9\u6df1\u5ea6\u7684k\u6b21\u65b9\u6253\u4e00\u4e2a\u8868\uff0c\u4e4b\u540e\u6211\u4eec\u56e0\u4e3a\u8981\u505a\u51cf\u6cd5\uff0c\u6240\u4ee5\u6211\u4eec\u4ee4$val_{i,k}$\u8868\u793ai\u52301\u53f7\u70b9\u8def\u5f84\u4e0a\u70b9\u6df1\u5ea6\u7684k\u6b21\u65b9\u4e4b\u548c\u2026\u2026\n\n\u7136\u540e\u95ee\u9898\u6765\u4e86\uff0c\u6211\u4eec\u7ef4\u62a4\u7684\u662f\u70b9\u6743\u548c\uff0c\u6240\u4ee5\u5462\u6211\u4eec\u53d1\u73b0\u76f4\u63a5\u51cf\u7684\u8bdd\u4f1a\u5bfc\u81f4lca\u8fd9\u4e2a\u70b9\u6ca1\u7b97\uff0c\u6240\u4ee5\u7565\u5fae\u6539\u4e00\u4e0b\u516c\u5f0f\uff0c\u4f7flca\u8fd9\u4e2a\u70b9\u4e5f\u88ab\u7b97\u4e00\u6b21\n\n\u7136\u540e\u6211\u4eec\u8be2\u95ee$u,v,k$\u7684\u65f6\u5019\u8f93\u51fa$val_{u,k}+val_{v,k}-val_{lca(u,v)}-val_{fa_{lca(u,v)}}$\u5373\u53ef\n\n\u95ee\u9898\u5c31\u662f\u5982\u4f55\u627elca\u4e86\u2026\u2026~~(\u6b22\u8fce\u4f7f\u7528TarjanO(n)\u6c42lca)~~\n\n~~\u6b22\u8fce\u4f7f\u7528st\u8868O(1)\u67e5\u8be2~~\n\n\u7136\u800c\u6700\u7c97\u66b4\uff0c\u53ef\u9760\u6027\u6700\u5f3a\uff0c\u5e38\u6570\u5c0f\u800c\u4e0d\u4f1a\u88ab\u8f7b\u6613\u5361\u7684\u7b97\u6cd5\u8fd8\u662f\u500d\u589e\uff0c\u6240\u4ee5\u8fd9\u9053\u9898\u4e0a\u4e00\u4e2a\u500d\u589e\u677f\u5b50\u5373\u53ef\u901a\u8fc7\u6b64\u9898\u4e86~(\u4e0d\u4f1a\u500d\u589e\u6cd5\u6c42lca\u7684\u8bdd\u51fa\u95e8\u5de6\u8f6c\u4f60\u7ad9\u819c\u677f\u533a\uff0c\u5305\u6559\u5305\u4f1a~)\n\n\u4e0a\u4ee3\u7801~\n\n```C\n#include<cstdio>\n#include<algorithm>\nusing namespace std;typedef long long ll;const ll mod=998244353;const int N=3*1e5+10;const int M=60;\nint n;int m;int v[2*N];int x[2*N];int al[N];int ct;ll dep[N];int fa[N][22];int book[N];ll val[N][M];\ninline void add(int u,int V){v[++ct]=V;x[ct]=al[u];al[u]=ct;}ll mi[M];\ninline void dfs(int u)//\u5904\u7406val\u7684\u4fe1\u606f\u4ee5\u53ca\u500d\u589e\u7684\u4fe1\u606f \n{\n    book[u]=true;for(int i=0;fa[u][i];i++){fa[u][i+1]=fa[fa[u][i]][i];}\n    for(int i=al[u];i;i=x[i])\n    {\n        if(book[v[i]]){continue;}\n        fa[v[i]][0]=u;dep[v[i]]=dep[u]+1;\n        for(int j=1;j<=50;j++){mi[j]=mi[j-1]*dep[v[i]]%mod;}\n        for(int j=1;j<=50;j++){val[v[i]][j]=(mi[j]+val[u][j])%mod;}\n        dfs(v[i]);\n    }\n}\ninline int lca(int u,int v)//\u500d\u589e\u6c42lca \n{\n    if(dep[u]<dep[v]){swap(u,v);}int d=dep[u]-dep[v];\n    for(int i=0;d;d>>=1,i++){if(d&1){u=fa[u][i];}}if(u==v){return u;}\n    for(int i=20;i>=0;i--){if(fa[u][i]!=fa[v][i]){u=fa[u][i];v=fa[v][i];}}\n    return fa[u][0]; \n}\nint main()\n{\n    scanf(\"%d\",&n);mi[0]=1;\n    for(int i=1,u,v;i<n;i++){scanf(\"%d%d\",&u,&v);add(u,v);add(v,u);}dfs(1);//dfs\u5904\u7406 \n    scanf(\"%d\",&m);\n    for(int i=1,u,v,k;i<=m;i++)\n    {\n        scanf(\"%d%d%d\",&u,&v,&k);int l=lca(u,v);//\u7136\u540e\u6211\u4eec\u5c31\u76f4\u63a5\u51cf\u4e86\uff0c\u6ce8\u610flca\u53ea\u7b97\u4f46\u662f\u8981\u7b97\u4e00\u6b21 \n        printf(\"%lld\\n\",(val[u][k]+val[v][k]+2*mod-val[fa[l][0]][k]-val[l][k])%mod);\n    }return 0;//\u62dc\u62dc\u7a0b\u5e8f~ \n}\n\n```",
        "postTime": 1524655230,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4427 \u3010[BJOI2018]\u6c42\u548c\u3011"
    },
    {
        "content": "\u770b\u6765\u6811\u5256\u5b66\u591a\u4e86\uff0c\u4eba\u4f1a\u53d8\u50bb\u662f\u771f\u768423333    \n\u770b\u5230\u548c\u6811\u6709\u5173\u7684\u9898\u90fd\u4f1a\u60f3\u5230\u6811\u5256  \n~~\u5047\u7684\uff0c\u56e0\u4e3a\u81ea\u5df1\u592a\u5f31\u4e86~~  \n\n\u4e0d\u591a\u8bf4\u4e86\uff0c\u6765\u770b\u9898\u3002\u9898\u76ee\u4e2d\u53ea\u6709\u67e5\u8be2\uff0c\u6ca1\u6709\u4fee\u6539\u64cd\u4f5c\uff0c\u5f88\u5bb9\u6613\u5c31\u80fd\u60f3\u5230\u7528\u5dee\u5206\u6765\u505a\u3002  \n\u8fd9\u91cc\u7528\u4e00\u4e2a\u6570\u7ec4$\\text{s}[u][k]$\u8868\u793a\u4ece\u6839\u5230$u$\u8282\u70b9\u7684$k$\u6b21\u65b9\u548c\uff0c\u8fd9\u4e2a\u5728\u6811\u5256\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u987a\u4fbf\u5904\u7406\u6389\u3002   \n$k$\u5f88\u5c0f\uff0c\u4e0d\u8fc7$50$\uff0c\u968f\u4fbf\u641e\u4e0d\u4f1a\u8d85\u65f6\n```cpp\nfor(int i=0;i<=50;++i){\n    s[u][i] = s[f][i]+power(depth[u]-1,i);\n    s[u][i] %= p;\n}\n```  \n\u8fd9\u91cc$\\text{depth}[1]=1$\uff0c\u6bd4\u9898\u76ee\u4e2d\u6df1\u5ea6\u7684\u5b9a\u4e49\u591a\u4e86$1$\uff0c\u6240\u4ee5\u8981$-1$\u3002$f$\u8868\u793a$u$\u7684\u7236\u8282\u70b9   \n\n\u7136\u540e\u6811\u5256\u5b8c\u4e86\u4e4b\u540e\uff0c\u6bcf\u6b21\u67e5\u8be2\u53ef\u4ee5$\\Theta(\\log_2n)$\u89e3\u51b3\u3002  \n\u8981\u6ce8\u610f\u4e24\u70b9\uff1a  \n1\u3001$\\text{lca}(u,v)$\u53ea\u88ab\u91cd\u590d\u7b97\u4e86\u4e00\u6b21\uff0c\u800c\u5b83\u7684\u7956\u5148\u8282\u70b9\u90fd\u88ab\u91cd\u590d\u7b97\u4e86\u4e24\u6b21\u3002  \n2\u3001\u8fdb\u884c\u51cf\u6cd5\u8fd0\u7b97\u65f6\uff0c\u7ed3\u679c\u6709\u53ef\u80fd\u5c0f\u4e8e$0$\uff0c$+p$\u518d\u6a21$p$\u5c31\u597d\u4e86\u3002\n```cpp\nf = lca(u,v);\nans = (s[u][k]+s[v][k])%p;\nans -= (s[f][k]+s[fa[f]][k])%p;\nans = (ans+p)%p;\n```   \n\n\u53e6\u5916\uff1a\u4e0d\u7528\u90fd\u5f00long long\uff0c\u5360\u7a7a\u95f4\u8981\u591a\u51fa\u4e00\u500d\u3002\u5feb\u901f\u5e42\u7684\u65f6\u5019\u4e34\u65f6\u8f6c\u4e00\u4e0b\u5c31\u884c\u4e86\u3002\n\n\u6700\u540e\u8d34\u51faAC\u4ee3\u7801\uff1a  \n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#include<vector>\n#include<queue>\n#define N 300003\n#define inf 0x3f3f3f3f\n#define ll long long\n#define p 998244353\nusing namespace std;\n\nvector<int> adj[N];\nint n,m,cnt;\nint depth[N],son[N],s[N][51],size[N];\nint id[N],top[N],fa[N];\n\ninline int power(int a,int t){\n    int res = 1;\n    while(t){\n        if(t&1) res = (ll)res*a%p;\n        a = (ll)a*a%p;\n        t >>= 1;\n    }\n    return res;\n}\n\ninline void read(int &x){\n    x = 0;\n    char c = getchar();\n    while(!isdigit(c)) c = getchar();\n    while(isdigit(c)){\n        x = (x<<3)+(x<<1)+c-'0';\n        c = getchar();\n    }\n}\n\nvoid print(int x){\n    if(x>9) print(x/10);\n    putchar(x%10+'0');\n}\n\nvoid dfs1(int u,int f){\n    depth[u] = depth[f]+1;\n    for(int i=0;i<=50;++i){\n        s[u][i] = s[f][i]+power(depth[u]-1,i);\n        s[u][i] %= p;\n    }\n    fa[u] = f;\n    size[u] = 1;\n    int v,t = -1,l = adj[u].size();\n    for(int i=0;i<l;++i){\n        v = adj[u][i];\n        if(v==f) continue;\n        dfs1(v,u);\n        size[u] += size[v];\n        if(size[v]>t){\n            t = size[v];\n            son[u] = v;\n        }\n    }\n}\n\nvoid dfs2(int u,int f){\n    id[u] = ++cnt;\n    top[u] = f;\n    if(son[u]==0) return;\n    dfs2(son[u],f);\n    int v,l = adj[u].size();\n    for(int i=0;i<l;++i){\n        v = adj[u][i];\n        if(v==fa[u]||v==son[u]) continue;\n        dfs2(v,v);\n    }\n}\n\ninline int lca(int u,int v){\n    int t;\n    while(top[u]!=top[v]){\n        if(depth[top[u]]<depth[top[v]]){\n            t = u;\n            u = v;\n            v = t;\n        }\n        u = fa[top[u]];\n    }\n    if(depth[u]<depth[v]) return u;\n    return v;\n}\n\nint main(){\n    int u,v,k,f,ans;\n    read(n);\n    for(int i=1;i<n;++i){\n        read(u),read(v);\n        adj[u].push_back(v);\n        adj[v].push_back(u);\n    }\n    dfs1(1,0);\n    dfs2(1,1);\n    read(m);\n    ++m;\n    while(--m){\n        read(u),read(v),read(k);\n        f = lca(u,v);\n        ans = (s[u][k]+s[v][k])%p;\n        ans -= (s[f][k]+s[fa[f]][k])%p;\n        ans = (ans+p)%p;\n        print(ans);\n        putchar(10);\n    }\n    return 0;\n}\n```\n",
        "postTime": 1543852808,
        "uid": 115864,
        "name": "NaCly_Fish",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4427 \u3010[BJOI2018]\u6c42\u548c\u3011"
    },
    {
        "content": "## \u8fd9\u9053\u9898\u76ee\u96be\u5ea6\u4e0d\u662f\u5f88\u5927\uff0c\u5927\u6982\u4e5f\u5c31$Noip Day2T1$\u7684\u96be\u5ea6\u3002\n### \u4e0b\u9762\u6211\u4eec\u6765\u8bb2\u4e00\u4e0b\u6211\u7684\u5fc3\u8def\u5386\u7a0b\n### $1.1$\u7406\u89e3\u9898\u76ee\u610f\u601d\uff1a\n\u8fd9\u9053\u9898\u76ee\u5c31\u662f\u7ed9\u6211\u4eec\u6c42\u6811\u4e0a\u7684\u4e24\u4e2a\u70b9$x,y$\uff0c\u7ed9\u4f60\u4e00\u4e2a\u6743\u503c$k$\uff0c\u8ba9\u4f60\u8ba1\u7b97\u5728$x,y$\u4e4b\u95f4\u7684\u603b\u548c\uff0c\u8fd9\u9053\u9898\u76ee\u7684\u603b\u548c\u662f\u8fd9\u6837\u7b97\u7684:\u90a3\u4e48\u6211\u4eec\u5148\u6765\u7406\u89e3\u4e00\u4e0b\u6837\u4f8b\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/60623.png)\n\n\u6837\u4f8b\u4e2d$deep[1]=0,deep[4]=2,deep[2]=1$\uff0c\u6240\u4ee5\u5bf9\u4e8e\u7b2c\u4e00\u7ec4\u6570\u636e\u5b83\u7684\u7b54\u6848\u5c31\u662f$2^5+1^5+0^5=33$\n\n### $2.1$\u7b97\u6cd5\u601d\u60f3\n\u8fd9\u9053\u9898\u76ee\u770b\u5230\u70b9\u4e0e\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u3001\u6df1\u5ea6\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u7528$lca$,\u5982\u679c\u4f60\u4e0d\u4f1a$lca$[\u53f3\u62d0\u261e](https://www.luogu.org/problemnew/show/P3379)\n\u8fd9\u6837\u6211\u4eec\u8fd9\u9053\u9898\u76ee\u5269\u4e0b\u7684\u5c31\u662f\u5982\u4f55\u7edf\u8ba1\u7b54\u6848\uff0c\u6211\u4eec\u8bb0\u5f55\u4e00\u4e2a\u6570\u7ec4$pre[u][k]$\u8868\u793a\u4ee5$u$\u4e3a\u8282\u70b9\uff0c$k$\u4e3a\u9898\u76ee\u7ed9\u5b9a\u7684\u6743\u503c\uff0c\u5728\u8fd9\u68f5\u6570\u4e2d\u7684\u524d\u7f00\u548c\u3002\n\n\u5bf9\u4e8e\u6837\u4f8b\u7684\u7b2c\u4e8c\u7ec4\u6570\u636e\uff1a$pre[4][45]$\u8868\u793a\u4ece$4$\u5230\u6839\u8282\u70b9$1$\u7684\u7b54\u6848\u3002\u90a3\u4e48\u6211\u4eec\u8ba1\u7b97$4$\u4e0e$5$\u4e4b\u95f4\u7684\u603b\u548c\u662f\u4e0d\u662f\u5c31\u662f$pre[4][k]+pre[5][k]-pre[lca(4,5)][k]-pre[fa[lca(4,5)][0]][k]$\n\n\u4e8e\u662f\u6211\u4eec\u5bf9\u4e8e\u4efb\u4f55\u6811\u4e0a\u7684\u4e24\u70b9$a,b$\uff0c$a,b$\u7684\u516c\u5171\u7956\u5148\u4e3a$x$\u4e24\u70b9\u4e4b\u95f4\u7684\u603b\u548c\u5c31\u662f$sum=pre[a][k]+pre[b][k]-pre[x][k]-pre[fa[x][0]][k]$\uff0c\u5176\u4e2d\u7684$fa[][]$\u5c31\u662f\u6c42$lca$\u65f6\u5019\u7684\u53d8\u91cf\u6570\u7ec4\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u5982\u4f55\u9884\u5904\u7406\u51fa$pre[][]$,\u6211\u4eec\u53ef\u4ee5\u518d\u9884\u5904\u7406$lca$\u65f6\u987a\u5e26\u4fbf\u5b8c\u6210\u3002\u4e8e\u662f\u5c31\u5f88\u7b80\u5355\u5566\uff01\n\n### $3.1$\u4ee3\u7801\u5b9e\u73b0\n\u8fd9\u9053\u9898\u76ee\u7684\u4ee3\u7801\u5b9e\u73b0\u662f\u5f88\u7b80\u5355\u7684\uff0c\u5c31\u662f$lca$\u7684\u6a21\u677f\u4ee3\u7801\uff08\u53ea\u8981\u5728$dfs$\u9884\u5904\u7406\u65f6\u52a0\u70b9\u4e1c\u897f\u5c31\u53ef\u4ee5\u4e86\uff09\uff0c\u4e8e\u662f\u5c31\u662f\u5957\u7528\u5f97\u51fa\u6765\u7684\u516c\u5f0f\u5c31\u53ef\u4ee5\u4e86\u3002\n```cpp\n#include <bits/stdc++.h>\n#define int long long \n#define re register\nusing namespace std;\nconst int maxn=300500,mod=998244353;\nstruct nood {\n\tint nex,to;\n} e[maxn<<2];\nint head[maxn],fa[maxn][25],dep[maxn];\nint n,m,cnt,res,ans,vis[maxn],pre[maxn][55];\ninline int ksm(int a,int b) {\n\tint ret=1;\n\twhile(b) {\n\t\tif(b&1) ret=ret*a%mod;\n\t\ta=a*a%mod;\n\t\tb>>=1;\n\t}\n\treturn ret%mod;\n}//\u5feb\u901f\u5e42\ninline void add_edge(int u,int v) {\n\te[++cnt].nex=head[u];\n\thead[u]=cnt;\n\te[cnt].to=v;\n}\ninline void dfs(int u,int f) {\n\tdep[u]=dep[f]+1;\n\tfa[u][0]=f;\n\tfor ( re int i=1;i<=50;i++ ) \n\t\tpre[u][i]=(pre[f][i]+ksm(dep[u],i)+mod)%mod;\n    //\u56e0\u4e3ak\u6700\u591a\u53ea\u670950\uff0c\u6240\u4ee5\u76f4\u63a5\u66b4\u529b\u9884\u5904\u7406\u6bcf\u4e00\u4e2apre\u6570\u7ec4\n\tfor ( re int i=head[u];i;i=e[i].nex ) {\n\t\tint v=e[i].to;\n\t\tif(v==f) continue;\n\t\tdfs(v,u);\n\t}\n}\ninline int Lca(int x,int y) {\n\tif(dep[x]>dep[y]) swap(x,y);\n\tfor ( re int i=20;i>=0;i-- ) \n\t\tif(dep[x]<=dep[y]-(1<<i)) y=fa[y][i];\n\tif(x==y) return x;\n\tfor ( re int i=20;i>=0;i-- ) \n\t\tif(fa[x][i]!=fa[y][i]) \n\t\t\tx=fa[x][i],y=fa[y][i];\n\treturn fa[x][0];\n}//\u7eaf\u79cdlca\u6a21\u677f\ninline int read() {\n\tint sum=0,ff=1; char ch=getchar();\n\twhile(ch<'0' or ch>'9') { if(ch=='-') ff=-1; ch=getchar(); }\n\twhile(ch>='0' and ch<='9') { sum=(sum*10+ch-'0'); ch=getchar(); }\n\treturn sum*ff;\n}\nsigned main() {\n//\tfreopen(\"BJOI2018.in\",\"r\",stdin);\n//\tfreopen(\"BJOI2018.out\",\"w\",stdout);\n\tn=read();\n\tfor ( re int i=1;i<=n-1;i++ ) {\n\t\tint u=read(),v=read();\n\t\tadd_edge(u,v);\n\t\tadd_edge(v,u);\n\t}\n\t\n\tdep[1]=-1; dfs(1,1);//\u7535\u98ce\u6247\u9884\u5904\u7406deep\u6570\u7ec4\n\tfor ( re int j=1;j<=21;j++ ) \n\t\tfor ( re int i=1;i<=n;i++ ) \n\t\t\tfa[i][j]=fa[fa[i][j-1]][j-1];\n    //\u500d\u589e\u9884\u5904\u7406fa\u6570\u7ec4\n\tint q=read();\n\twhile(q--) {\n\t\tint x=read(),y=read(),z=read();\n\t\tint lca=Lca(x,y);\n\t\tint sum1=(pre[x][z]+pre[y][z]+mod)%mod;\n\t\tint sum2=(pre[lca][z]+pre[fa[lca][0]][z]+mod)%mod;\n\t\t//\u5957\u7528\u516c\u5f0f\n\t\tprintf(\"%lld\\n\",((sum1-sum2)+mod)%mod);\n\t}\n\treturn 0;\n}\n\t\t\n```\n",
        "postTime": 1560240481,
        "uid": 172612,
        "name": "\u7c73\u5947\u5947\u7c73",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4427 \u3010[BJOI2018]\u6c42\u548c\u3011"
    },
    {
        "content": "\u6765\u4e00\u53d1\u6307\u9488\u6811\u5256\u9898\u89e3\u3002\n\u8fd9\u4e2a\u9898\u7684\u8bdd\uff0c\u6211\u4eec\u7ef4\u62a4\u4e00\u4e0b300000\u4ee5\u5185\u6bcf\u4e00\u4e2a\u657050\u4ee5\u5185\u7684\u6bcf\u4e2a\u6b21\u65b9\uff0c\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a450\u4ee5\u5185\u7684\u6bcf\u4e2a\u6b21\u65b9\uff0c\u8f6c\u79fb\u65f6for\u5faa\u73af\u8f6c\u79fb\u3002\n\u53d6\u6a21\u64cd\u4f5c\u4f1a\u6bd4\u8f83\u6162\uff08\u53c2\u8003\u9a97\u5206\u5bfc\u8bba\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u91c7\u7528\u51cf\u6765\u7b97\u3002\n\u8be6\u89c1\u4ee3\u7801\n```cpp\n#include <iostream>\n#include <cstdio>\nusing namespace std;\ninline int read()\n{\n\tint x = 0 , f = 1;\tchar ch = getchar();\n\twhile(ch < '0' || ch > '9')\t{if(ch == '-')\tf = -1; ch = getchar();}\n\twhile(ch >= '0' && ch <= '9') {x = (x << 3) + (x << 1) + (ch ^ 48); ch = getchar();}\n\treturn x * f;\n}\nconst int N = 300001 , mod = 998244353;\ninline int work(int x) {return x >= mod ? x - mod : x;}\nint n , m , maxdep , cnt;\nint head[N] , hs[N] , dfn[N] , id[N] , dep[N] , top[N] , fa[N] , size[N] , f[N][51];\nstruct Tree_div\n{\n\tstruct Edge\n\t{\n\t\tint to , nxt;\n\t}e[N << 1];\n\tinline void add(int from,int to)\n\t{\n\t\te[++cnt] = (Edge) {to,head[from]};\n\t\thead[from] = cnt; \n\t}\n\tvoid get_tree(int now)\n\t{\n\t\tsize[now] = 1;\n\t\tmaxdep = max(maxdep,dep[now]);\n\t\tfor(int i = head[now];i;i = e[i].nxt)\n\t\t{\n\t\t\tint to = e[i].to;\n\t\t\tif(dep[to] || to == 1)\tcontinue;\n\t\t\tdep[to] = dep[now] + 1;\n\t\t\tfa[to] = now;\n\t\t\tget_tree(to);\n\t\t\tsize[now] += size[to];\n\t\t\tif(size[to] > size[hs[now]])\ths[now] = to;\t\n\t\t}\n\t}\n\tvoid dfs(int now,int topfa)\n\t{\n\t\tdfn[now] = ++cnt;\n\t\tid[cnt] = now;\n\t\ttop[now] = topfa;\n\t\tif(hs[now])\tdfs(hs[now],topfa);\n\t\tfor(int i = head[now];i;i = e[i].nxt)\n\t\t{\n\t\t\tint to = e[i].to;\n\t\t\tif(to == hs[now] || to == fa[now])\tcontinue;\n\t\t\tdfs(to,to);\n\t\t}\n\t}\n\tstruct node\n\t{\n\t\tnode *ls , *rs;\n\t\tint l , r , sum[51];\n\t\tnode (int l = 0,int r = 0) : l(l) , r(r) {ls = rs = NULL; sum[51] = {0};}\n\t\tinline int len() {return r - l + 1;}\n\t\tinline int mid() {return (l + r) >> 1;}\n\t\tinline void up() {for(int i = 1;i <= 50;i ++)\tsum[i] = work(ls -> sum[i] + rs -> sum[i]);}\n\t} *root , pool[N << 2] , *tail;\n\tvoid build(node *&p,int l,int r)\n\t{\n\t\tp = new (tail ++) node(l,r);\n\t\tif(l == r)\n\t\t{\n\t\t\tfor(int i = 1;i <= 50;i ++)\tp -> sum[i] = f[dep[id[l]]][i];\n\t\t\treturn ;\n\t\t}\n\t\tbuild(p -> ls,l,p -> mid());\n\t\tbuild(p -> rs,p -> mid() + 1,r);\n\t\tp -> up();\n\t}\n\tint Sum(node *p,int x,int y,int k)\n\t{\n\t\tif(x <= p -> l && p -> r <= y)\treturn p -> sum[k];\n\t\tint res = 0;\n\t\tif(x <= p -> mid())\tres = work(res + Sum(p -> ls,x,y,k));\n\t\tif(y > p -> mid())\tres = work(res + Sum(p -> rs,x,y,k));\n\t\treturn res;\n\t}\n\tinline int SUM(int x,int y,int k)\n\t{\n\t\tint res = 0;\n\t\twhile(top[x] != top[y])\t\n\t\t{\n\t\t\tif(dep[top[x]] < dep[top[y]])\tswap(x,y);\n\t\t\tres = work(res + Sum(root,dfn[top[x]],dfn[x],k));\n\t\t\tx = fa[top[x]];\n\t\t}\n\t\tif(dep[x] < dep[y])\tswap(x,y);\n\t\tres = work(res + Sum(root,dfn[y],dfn[x],k));\n\t\treturn res;\n\t}\n\tinline void init()\n\t{\n\t\tn = read();\n\t\tfor(int i = 1 , u , v;i < n;i ++)\tu = read() , v = read() , add(u,v) , add(v,u);\n\t\tget_tree(1);\n\t\tcnt = 0;\n\t\tdfs(1,1);\n\t\tfor(int i = 1;i <= 50;i ++)\tf[1][i] = 1;\n\t\tfor(int i = 2;i <= maxdep;i ++)\t\n\t\t{\n\t\t\tf[i][0] = 1;\n\t\t\tfor(int j = 1;j <= 50;j ++)\tf[i][j] = (long long)f[i][j-1] * i % mod;\n\t\t}\n\t\tbuild(root,1,n);\n\t\tm = read();\n\t\tfor(int i = 1 , x , y , k;i <= m;i ++)\n\t\t{\n\t\t\tx = read(); y = read(); k = read();\n\t\t\tprintf(\"%d\\n\",SUM(x,y,k));\n\t\t}\n\t}\n\tTree_div() {tail = pool;}\n}cf;\nint main() {cf.init();return 0;}\n```\n",
        "postTime": 1568290300,
        "uid": 153898,
        "name": "Treaker",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4427 \u3010[BJOI2018]\u6c42\u548c\u3011"
    },
    {
        "content": "## **\u9898\u76ee**\n\n[\u8fd9\u91cc](https://www.luogu.org/problemnew/show/P4427)\n\n## **\u601d\u8def**\n\n\u9898\u76ee\u8981\u6c42\u7684\u662f\u8def\u5f84\u4e0a\u70b9\u7684\u6df1\u5ea6\u7684k\u6b21\u65b9\u548c\u3002\n\n\u8fd9\u9898\u4e00\u770b\u7528\u6811\u5256\u52a0\u7ebf\u6bb5\u6811\u4e00\u5b9a\u53ef\u4ee5\u89e3\u3002\n\nk<=50\uff01\uff01\uff01\n\n\u53ef\u4ee5\u5148\u5728\u5efa\u7ebf\u6bb5\u6811\u65f6\u5c060\u523050\u6b21\u548c\u90fd\u7b97\u4e00\u904d\uff0c\u8fd9\u6837\u67e5\u8be2\u65f6\u5c31\u4f1a\u5f88\u65b9\u4fbf\u3002\n\n\u56e0\u4e3ak\u6b21\u65b9\u4f1a\u5f88\u5927\uff0c\u6211\u5148\u7528\u4e86\u4e00\u4e2a\u6570\u7ec4\uff0c\u5c060\u5230\u6811\u4e0a\u6700\u6df1\u7684\u70b9\u7684\u6df1\u5ea6\u76840\u523050\u6b21\u90fd\u7b97\u4e86\u4e00\u904d\u3002\n\n\u8fd9\u9898\u662fMod998244353\uff0c\u5728\u7b97\u51e0\u6b21\u65b9\u65f6\u8981\u5f00long long\u3002\u5728\u7ebf\u6bb5\u6811\u6c42\u533a\u95f4\u548c\u65f6\uff0c\u53ea\u8981\u6ce8\u610f\u53d6\u6a21\uff0c\u5c31\u4e0d\u4f1a\u8d85\u51faint\u8303\u56f4\uff0c\u6240\u4ee5\u533a\u95f4\u548c\u7528int\u5c31\u53ef\u4ee5\u5566\u3002\u8fd9\u6837\u5c31\u4fdd\u8bc1\u4e86\u7a7a\u95f4\u4e0d\u4f1a\u8d85\uff0c\u65f6\u95f4\u4e5f\u662f\u5b89\u5168\u7684\u3002\uff08\u591a\u597d\uff01\n\n\n\n\u4ee5\u4e0a\u662f\u7ebf\u6bb5\u6811\uff0c\u6811\u5256\u90e8\u5206\u60f3\u5fc5\u5927\u5bb6\u90fd\u660e\u767d\uff0c\u5c31\u4e0d\u8bf4\u4e86\uff08~~\u8fd9\u4e0d\u662f\u5077\u61d2\uff01\uff01\uff01~~\uff09\u3002\n\n## **\u4ee3\u7801**\n\n\u4e0d\u8bf4\u4e86:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=300001,mod=998244353;\nint n,m,head[maxn],cnt,tot;\nlong long f[maxn][51];\nint dep[maxn],siz[maxn],fa[maxn],son[maxn],maxx,anss,ans;\nstruct node{\n    int nxt,to;\n}edge[maxn<<1];\nvoid add_edge(int x,int y){\n    edge[++cnt]=(node){head[x],y};\n    head[x]=cnt;\n}\nvoid dfs1(int x,int ffa){\n    fa[x]=ffa,siz[x]=1;\n    for(int i=head[x];i;i=edge[i].nxt){\n        int y=edge[i].to;\n        if(y!=ffa){\n            dep[y]=dep[x]+1;\n            dfs1(y,x);\n            siz[x]+=siz[y];\n            if(siz[y]>siz[son[x]]) son[x]=y;\n        }\n    }\n}\nint top[maxn],in[maxn],id[maxn];\nvoid dfs2(int x,int tp){\n    top[x]=tp,in[x]=++tot,id[tot]=x;\n    if(son[x]) dfs2(son[x],tp);\n    for(int i=head[x];i;i=edge[i].nxt){\n        int y=edge[i].to;\n        if(y!=fa[x]&&y!=son[x]) dfs2(y,y);\n    }\n}\nint t[maxn<<2][51];\nvoid build(int c,int l,int r){\n    if(l==r){\n        for(int i=0;i<=50;i++)\n        t[c][i]=f[dep[id[l]]][i];\n        return;\n    }\n    int mid=(l+r)>>1;\n    build(c<<1,l,mid); build(c<<1|1,mid+1,r);\n    for(int i=0;i<=50;i++)\n    t[c][i]=(t[c<<1][i]+t[c<<1|1][i])%mod;\n}\nlong long query(int c,int l,int r,int x,int y,int k){\n    if(x<=l&&r<=y) return t[c][k];\n    int mid=(l+r)>>1;anss=0;\n    if(mid>=x) anss=query(c<<1,l,mid,x,y,k);\n    if(mid<y) anss=(anss+query(c<<1|1,mid+1,r,x,y,k))%mod;\n    return anss;\n}\nlong long ask(int x,int y,int k){\n    ans=0;\n    while(top[x]^top[y]){\n        if(dep[top[x]]<dep[top[y]]) swap(x,y);\n        ans=(ans+query(1,1,n,in[top[x]],in[x],k))%mod;\n        x=fa[top[x]];\n    }\n    if(dep[x]>dep[y]) swap(x,y);\n    ans=(ans+query(1,1,n,in[x],in[y],k))%mod;\n    return ans;\n}\nint main(){\n    scanf(\"%d\",&n);\n    int x,y,k;\n    for(int i=1;i<n;i++){\n        scanf(\"%d%d\",&x,&y);\n        add_edge(x,y),add_edge(y,x);\n    }\n    dfs1(1,0),dfs2(1,1);\n    for(int i=1;i<=n;i++) maxx=max(maxx,dep[i]);\n    //\u5148\u9884\u5904\u7406\u51fai\u7684k\u6b21\u65b9\n    for(int i=0;i<=maxx;i++) f[i][0]=1;\n    for(int i=0;i<=maxx;i++)\n    for(int j=1;j<=50;j++) f[i][j]=(f[i][j-1]*i)%mod;\n    \n    build(1,1,n);\n    scanf(\"%d\",&m);\n    for(int i=1;i<=m;i++){\n        scanf(\"%d%d%d\",&x,&y,&k);\n        printf(\"%lld\\n\",ask(x,y,k));\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1548477407,
        "uid": 47757,
        "name": "dunko",
        "ccfLevel": 6,
        "title": "[BJOI2018]\u6c42\u548c"
    },
    {
        "content": "\u6811\u5256\n\n\u56e0\u4e3ak\u5f88\u5c0f\uff0c\u6240\u4ee5\u53ef\u4ee5\u5c061~300000\u7684k\u6b21\u65b9\u90fd\u9884\u5904\u7406\u51fa\u6765\uff0c\u8bb0\u4e3ad[i][k]\n\n\u56e0\u4e3a\u8fd9\u4e2a\u9898\u76ee\u6ca1\u6709\u4efb\u4f55\u4fee\u6539\u64cd\u4f5c\uff0c\u6240\u4ee5\u6811\u5256\u4e4b\u540e\u6211\u4eec\u5229\u7528d\u6570\u7ec4\u9884\u5904\u7406\u4e00\u4e2a\u524d\u7f00\u548c\u5373\u53ef\u5b8c\u6210\u67e5\u8be2\n\n\u65f6\u95f4\u590d\u6742\u5ea6O(kn+mlogn)\u5f00O2\u80af\u5b9a\u8fc7\u4e86\n\nps:\u8003\u573a\u4e0a\u6709\u4ebaO(nm)\u6c34\u8fc7\u4e0d\u77e5\u9053\u662f\u4ec0\u4e48\u64cd\u4f5c\n\n```cpp\n#include <iostream>\n#include <cstdlib>\n#include <cstring>\n#include <cstdio>\n#define mod 998244353\n\nusing namespace std;\nconst int MAXN = 300005;\nint n,m;\ninline int read()\n{\n    char c = 0;\n    int res = 0;\n    while(!isdigit(c)) c = getchar();\n    while(isdigit(c))\n    {\n        res = res*10+c-'0';\n        c = getchar();\n    }\n    return res;\n}\nstruct Node\n{\n    int u,v;\n    Node *next;\n}*h[MAXN],pool[MAXN<<1];\nint tot = 0;\ninline void addEdge(int u, int v)\n{\n    Node *p = &pool[++tot], *q = &pool[++tot];\n    p->v = v; p->next = h[u]; h[u] = p;\n    q->v = u; q->next = h[v]; h[v] = q;\n}\nint maxdep = 0;\nint size[MAXN],top[MAXN],son[MAXN],id[MAXN],rid[MAXN],dep[MAXN],fa[MAXN],dfn = 0;\ninline void dfs1(int u)\n{\n    maxdep = max(maxdep,dep[u]);\n    size[u] = 1;\n    int maxa = -1;\n    for(Node *p = h[u]; p; p=p->next)\n    {\n        if(p->v==fa[u]) continue;\n        dep[p->v] = dep[u]+1;\n        fa[p->v] = u;\n        dfs1(p->v);\n        size[u] += size[p->v];\n        if(size[p->v]>maxa)\n        {\n            maxa = size[p->v];\n            son[u] = p->v;\n        }\n    }\n}\ninline void dfs2(int u, int topf)\n{\n    id[u] = ++dfn;\n    rid[id[u]] = u;\n    top[u] = topf;\n    if(son[u]) dfs2(son[u],topf);\n    for(Node *p = h[u]; p; p=p->next)\n    {\n        if(id[p->v]) continue;\n        dfs2(p->v,p->v);\n    }\n}\nint c[55][MAXN];\nlong long p[MAXN][55];\nint main()\n{\n//\tfreopen(\"sum.in\",\"r\",stdin);\t\n //   freopen(\"sum.out\",\"w\",stdout);\n    n = read();\n    for(int i = 1; i<n; i++)\n        addEdge(read(),read());\n    dfs1(1);\n    dfs2(1,1);\n    \n    for(int i = 1; i<=maxdep; i++)\n    {\n    \tp[i][1] = i;\n        for(int j = 2; j<=50; j++)\n            p[i][j] = p[i][j-1]*i%mod;\n    }\n    for(int i = 1; i<=50; i++)\n        for(int j = 1; j<=n; j++)\n            c[i][j] = (c[i][j-1]+p[dep[rid[j]]][i])%mod;\n    m = read();\n    int x,y,z;\n    while(m--)\n    {\n        x = read(), y = read(), z = read();\n        int res = 0;\n        while(top[x]!=top[y])\n        {\n            if(dep[top[x]]<dep[top[y]]) swap(x,y);\n            res = (res+((long long)c[z][id[x]]-c[z][id[top[x]]-1]+mod)%mod)%mod;\n            x = fa[top[x]];\n        }\n        if(dep[y]<dep[x]) swap(x,y);\n        res = (res+((long long)c[z][id[y]]-c[z][id[x]-1]+mod)%mod)%mod;\n        printf(\"%d\\n\",res);\n    }\n    return 0;\n}\n```",
        "postTime": 1523952882,
        "uid": 31098,
        "name": "Caro23333",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4427 \u3010[BJOI2018]\u6c42\u548c\u3011"
    },
    {
        "content": "\u5514, \u5f88\u6709\u4fe1\u5fc3\u5730\u7801\u4e86LCA\u7ed3\u679cWA\u7206\u96f6, \u4e00\u5b9a\u8981\u6ce8\u610f\u53d6\u6a21\u8d1f\u6570\u7684\u60c5\u51b5!  \n\u987a\u5e26\u4e00\u53e5, \u6700\u5feb\u7684IO\u662fiostream!  \n\n\n------------\n\u8fdb\u5165\u6b63\u9898, \u672c\u9898\u660e\u663e\u662f\u4e00\u9053LCA(\u6700\u8fd1\u516c\u5171\u7956\u5148)\u7684\u677f\u9898.  \nLCA\u95ee\u9898\u7684\u6c42\u89e3\u4e00\u822c\u6709\u4ee5\u4e0b\u4e09\u79cd\u65b9\u6cd5:  \n- \u66b4\u529b\u722c\u6811, \u5355\u6b21$O(n)$;\n- \u500d\u589e, \u5355\u6b21$O(log_2n)$;\n- Tarjan, \u591a\u6b21$O(n+q)$;  \n\n\u5bf9\u4e8ealgori.1, \u671f\u671b\u5f97\u520630\u5206, \u8fd9\u91cc\u4e3b\u8981\u603b\u7ed3algori.2\u500d\u589e\u6cd5, \u5176\u9884\u5904\u7406\u65f6\u95f4\u53ef\u4ee5\u5361\u8fc7\u6570\u636e, \u800c\u4e14\u5bb9\u6613\u5b9e\u73b0. ~~\u5176\u5b9e\u662f\u56e0\u4e3a\u6211\u80cc\u4e0d\u4f4fTarjan.~~  \n\u6c42\u5f97LCA\u4e4b\u540e\u5462? \u6211\u4eec\u9700\u8981qkpow\u626b\u4e00\u904ddepth? NO!  \n\u547d\u540d\u5e76\u6c42\u89e3! \u6211\u4eec\u7528$Ans(a,b,k)$\u6765\u8868\u793a\u7b54\u6848, \u518d\u4ee4:  \n\n$\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,PreSum(u,k)=\\sum_{v}depth_v^k[LCA(u,v)=v]$  \n\n\u7b80\u5355\u6765\u8bf4, \u5c31\u662fu\u7684\u6240\u6709\u7956\u5148\u7ed3\u70b9(\u5305\u62ecu\u672c\u8eab)\u7684\u6df1\u5ea6\u7684k\u6b21\u65b9\u548c.  \n\u7c7b\u6bd4\u7ebf\u6027\u524d\u7f00\u548c\u7684\u601d\u60f3, \u8bbe$LCA(a,b)=d$, \u5219\u5e94\u6709:  \n\n$Ans(a,b,k)=PreSum(a,k)+PreSum(b,k)-2\\times PreSum(d,k)+depth_d^k$  \n\n\u8fd9\u5e76\u4e0d\u4ee4\u6211\u4eec\u6ee1\u610f, \u56e0\u4e3a\u6211\u4eec\u5e76\u4e0d\u5e0c\u671b\u7ef4\u62a4\u8fc7\u591a\u7684\"k\u6b21\u65b9\", \u8fd9\u5f88\u5bb9\u6613\u5728mod\u8fc7\u7a0b\u4e2d\u51fa\u9519.  \n\u89c2\u5bdf\u5de6\u5f0f\u7b2c\u56db\u9879, \u6211\u4eec\u96be\u9053\u8981\u4e3a\u4e86\u5b83\u6765\u7ef4\u62a4depth\u7684k\u6b21\u65b9? \u5f97\u76ca\u4e8e\u500d\u589e\u7b97\u6cd5\u4f1a\u6c42\u5f97\u6bcf\u4e2a\u7ed3\u70b9\u7684\u7236\u4eb2, \u53eb\u8fd9\u4e2a\u500d\u589e\u722c\u6811\u7684\u6570\u7ec4F\u5427, \u6211\u4eec\u7528\u5b83\u5bf9Ans\u7ee7\u7eed\u5316\u7b80:  \n\n$Ans(a,b,k)=PreSum(a,k)+PreSum(b,k)-PreSum(d,k)-(PreSum(d,k)-depth_d^k)$\n$\n\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,=PreSum(a,k)+PreSum(b,k)-(PreSum(d,k)+PreSum(F[d][0],k))$  \n\nThat's amazing! \u8fd9\u6837\u4e00\u6765, \u53ea\u7528\u5728dfs\u65f6\u987a\u4fbf\u7ef4\u62a4\u4e00\u4e0bPreSum\u5c31\u53ef\u4ee5AC\u4e86.  \n\u5982\u679c\u8fd8\u662fWA, \u53ef\u4ee5\u501f(chao)\u9274(xi)\u4e00\u4e0b\u4ee3\u7801\u91cc\u5bf9\u53d6\u6a21\u7684\u5904\u7406. Good luck!  \n```cpp\n#include <vector>\n#include <iostream>\n\n#define Int register int\n\ntypedef long long int LL;\n\nusing namespace std;\n\nconst int MAXN = 300000, MAXK = 50, MAXLOG = 20, Mod = 998244353;\nint n, m, Fa[MAXN + 5][MAXLOG + 5] = {};\nLL Depth[MAXN + 5] = {}, PreSum[MAXN + 5][MAXK + 5] = {};\nvector<int> G[MAXN + 5] = {};\n\ninline void AddEdge ( const int u, const int v ) { // \u52a0\u8fb9\u64cd\u4f5c \n\tG[u].push_back ( v );\n\tG[v].push_back ( u );\n}\n\ninline void DFS ( const int u, const int fa ) { // \u9884\u5904\u7406depth[], Fa[][] and PreSum[][]. \n\tFa[u][0] = fa;\n\tfor ( Int i = 1; i <= 20; ++ i ) {\n\t\tFa[u][i] = Fa[Fa[u][i - 1]][i - 1];\n\t}\n\tLL Tmp = 1;\n\tfor ( Int i = 1; i <= 50; ++ i ) {\n\t\tTmp = ( Tmp * Depth[u] ) % Mod; // \u968f\u65f6\u53d6\u6a21! \n\t\tPreSum[u][i] = PreSum[fa][i] + Tmp;\n\t\tif ( PreSum[u][i] >= Mod ) PreSum[u][i] -= Mod;\n\t}\n\tfor ( unsigned int i = 0; i < G[u].size (); ++ i ) { // \u5bfb\u627e\u76f8\u90bb\u7ed3\u70b9 \n\t\tif ( G[u][i] ^ fa ) { // \u82e5\u4e0d\u662f\u7236\u7ed3\u70b9(ps.\u53ea\u6709\u76f8\u7b49\u7684\u4e24\u4e2a\u6574\u6570\u4ea6\u6216\u503c\u4e3a\u96f6, \u5373a^b==0\u7b49\u4ef7\u4e8ea==b) \n\t\t\tDepth[G[u][i]] = Depth[u] + 1; // \u5f53\u7136, \u8fd9\u53e5\u53ef\u4ee5\u6254\u5230\u4e0a\u9762 \n\t\t\tDFS ( G[u][i], u );\n\t\t}\n\t}\n}\n\ninline int LCA ( int a, int b ) { // LCA\u6a21\u677f \n\tfor ( Int i = 20; ~ i; -- i ) { \n\t\tif ( Depth[Fa[a][i]] >= Depth[b] ) {\n\t\t\ta = Fa[a][i];\n\t\t}\n\t\tif ( Depth[Fa[b][i]] >= Depth[a] ) { // \u4e24\u4e2aif\u53ea\u6709\u4e00\u4e2a\u4f1a\u8fdb\u5165, \u4e5f\u6709\u5199\u6cd5\u662f\u5f53a>b\u65f6, swap( a, b ). \n\t\t\tb = Fa[b][i];\n\t\t}\n\t}\n\tif ( a ^ b ) {\n\t\tfor ( Int i = 20; ~ i; -- i ) {\n\t\t\tif ( Fa[a][i] ^ Fa[b][i] ) {\n\t\t\t\ta = Fa[a][i], b = Fa[b][i];\n\t\t\t}\n\t\t}\n\t\treturn Fa[a][0]; // \u6ce8\u610f\u54e6, \u4e24\u4e2a\u7ed3\u70b9\u4e00\u8d77\u5411\u4e0a\u722c\u65f6, \u7b97\u6cd5\u4f1a\u628a\"\u521a\u597d\u4f1a\u5408\"\u5f53\u505a\"\u8d85\u8fc7\u76ee\u6807\u70b9\", \u6240\u4ee5\u6b64\u65f6a\u4e0eb\u8fd8\u6709\u4e00\u6b65\u4e4b\u9065 \n\t}\n\treturn a; // \u4e0d\u9700\u8981\u4e00\u8d77\u722c, return\u4efb\u610f\u4e00\u4e2a\u70b9 \n}\n\ninline void Work () {\n\tios :: sync_with_stdio ( false ); // \u9c81\u8fc5\u8bf4:\"\u65f6\u95f4\u5c31\u50cf\u6d77\u7ef5\u91cc\u7684\u6c34, cin/cout\u5173\u6389\u540c\u6b65\u603b\u662f\u8fd8\u6709\u7684.\" \n\tcin >> n;\n\tfor ( Int i = 1; i <= n - 1; ++ i ) {\n\t\tint u, v;\n\t\tcin >> u >> v;\n\t\tAddEdge ( u, v );\n\t}\n\tDepth[0] = -1; // \u9898\u76ee\u8981\u6c42\u6839\u7ed3\u70b9\u6df1\u5ea6\u4e3a0, \u56e0\u4e3a\u5728dfs\u4e2d\u4f1a+1, \u8fd9\u91cc\u5148\u8d4b\u4e3a-1 \n\tDFS ( 1, 0 ); // \u9884\u5904\u7406 \n\tcin >> m;\n\twhile ( m -- ) {\n\t\tint a, b, k, lab;\n\t\tcin >> a >> b >> k;\n\t\tlab = LCA ( a, b );\n\t\tcout << ( ( PreSum[a][k] + PreSum[b][k] ) % Mod - ( PreSum[lab][k] + PreSum[Fa[lab][0]][k] ) % Mod + Mod ) % Mod << endl;\n\t\t// \u7279\u522b\u6ce8\u610f, \u53d6\u6a21\u540e\u7684\u51cf\u6cd5\u53ef\u80fd\u7206\u51fa\u8d1f\u6570, \u88ab\u6570\u8bba\u6298\u78e8\u8fc7\u7684\u5b69\u5b50\u90fd\u77e5\u9053, \u6807\u51c6\u5904\u7406\u65b9\u6cd5\u662f( x % Mod + Mod ) % Mod. \n\t}\n}\n\nint main () {\n\tWork ();\n\treturn 0;\n}\n```",
        "postTime": 1558187009,
        "uid": 123807,
        "name": "Rainybunny",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4427 \u3010[BJOI2018]\u6c42\u548c\u3011"
    },
    {
        "content": "\u5927\u5bb6\u597d\u50cf\u90fd\u7528\u7684\u662f\u5728\u7ebfLCA\u500d\u589e\u7b97\u6cd5\u6b38...\n\n\u90a3\u6211\u7528\u4e00\u4e0b\u79bb\u7ebf\u7684tarjan\u597d\u4e86\n\n\u7531\u9898\u610f\u5bb9\u6613\u77e5\u9053\u8fd9\u9898\u4f7f\u7528LCA~~\u6807\u7b7e\u4e0a\u90fd\u6709\u4e86\u554a\u5582~~\n\n\u7531\u4e8e\u8fd9\u91cc\u6bcf\u7ec4\u8be2\u95ee\u5bf9\u4e8e\u53e6\u4e00\u7ec4\u8be2\u95ee\u5e76\u6ca1\u6709\u5f71\u54cd\uff0c\u6240\u4ee5\u6211\u4eec\u80fd\u7528tarjan\u7b97\u6cd5\uff0c\u5f53\u7136\u500d\u589e\u4e5f\u884c\n\n- \u9996\u5148\u5b9a\u4e49\u53d8\u91cf\uff08\u6ce8\u91ca\u5728\u4ee3\u7801\u91cc\u9762\uff09\uff1a\n\n```\nstruct edge {int to, prev; } e[1000005]; //edge\u7ed3\u6784\u4f53\uff0c\u5b58\u8fb9\nstruct node {//node\u7ed3\u6784\u4f53\uff0c\u5b58query\n    int to, prev, num; \n    bool flag; \n    node() {flag = false; } //\u6784\u9020\u51fd\u6570\uff0c\u5e94\u8be5...\u5b66\u8fc7\u5427\n} qs[1000005]; \n\nbool vis[500005], flg[500005]; //\u4e24\u4e2a\u7ed3\u6784\u4f53\u5206\u522b\u8bb0\u5f55edge,query\nint n, m, s, tot = 0, cnt = 0, lca[500005], last[500005], lastq[500005], pre[500005]; //tot,cnt\u662f\u94fe\u5f0f\u524d\u5411\u661f\u7528\u7684\uff0clca\u5c31\u662flca\u7684\u6570\u7ec4\uff0clast\u548clastq\u4e5f\u662f\u94fe\u5f0f\u524d\u5411\u661f\u7528\u7684\uff0cpre\u662f\u5e76\u67e5\u96c6\u7684\u7956\u5148\u6570\u7ec4\nint maxd = -1, dep[500005], a[500005], b[500005], k[500005]; //a,b,k\u662f\u8f93\u5165\u6570\u7ec4\uff0cdep\u8868\u793a\u6df1\u5ea6\nll sum[500005][60]; \n```\n\n- \u7136\u540e\u662f\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\uff08\u6ca1\u5565\u597d\u8bf4\uff09\uff1a\n\n```\ninline void add(int x, int y) {//add edge\n    e[++tot].to = y; \n    e[tot].prev = last[x]; \n    last[x] = tot; \n} \n\ninline void add2(int x, int y, int id) {//add query\n    qs[++cnt].to = y; \n    qs[cnt].prev = lastq[x]; \n    qs[cnt].num = id; \n    lastq[x] = cnt; \n} \n```\n\n- \u6211\u4eec\u7684chg\u51fd\u6570\uff1a\n\n```\ninline int chg(int num) {\n\tif (num & 1) return num + 1; //\u5982\u679cnum & 1 != 0\uff0c\u8fd4\u56denum + 1\n\telse return num - 1; //\u5426\u5219\u8fd4\u56denum - 1\n}  \n```\n\n- \u63a5\u7740\u6211\u4eec\u627e\u7956\u5148\uff08\u4e0d\u7528\u8bb2\u4e86\uff09\uff1a\n\n```\nint find(int x) {//\u8def\u5f84\u538b\u7f29\u627e\u7956\u5148\n    if (pre[x] != x) pre[x] = find(pre[x]); \n    return pre[x]; \n} \n```\n\n- \u7136\u540e\u662f\u5408\u5e76\uff08\u4e5f\u4e0d\u7528\u8bf4\u4e86\u5427\uff09\uff1a\n\n```\nvoid merge(int x, int y) {\n\tint f1 = find(x), f2 = find(y); \n    pre[f2] = f1; \n} \n```\n\n- \u5927\u5927\u5c0f\u5c0f\u7684\u9644\u52a0\u51fd\u6570\u5904\u7406\u597d\u4e86\uff0c\u63a5\u7740\u662f\u6211\u4eec\u4ee3\u7801\u7684\u6838\u5fc3\u90e8\u5206\uff08dfs\uff09\uff1a\n\n```\nvoid dfs(int cur, int f) {//cur\u8868\u793a\u73b0\u5728\u8fb9\u7684\u7f16\u53f7\n    for (int i = last[cur]; i; i = e[i].prev) {//\u5148\u679a\u4e3e\u8fb9\n        if (e[i].to != f && !vis[e[i].to]) {//\u5982\u679c\u6ee1\u8db3\u6761\u4ef6\u5c31\u53ef\u4ee5\u7ee7\u7eeddfs\n            dep[e[i].to] = dep[cur] + 1;//\u6df1\u5ea6+1\n            maxd = max(maxd, dep[e[i].to]);//\u5f97\u5230maxd\n            vis[e[i].to] = 1;//\u6253\u4e0a\u6807\u8bb0\n            dfs(e[i].to, cur);//\u7ee7\u7eed\u641c\u7d22\n            merge(cur, e[i].to);//\u5408\u5e76\u4fe9\u8fb9\n        } \n    }\n    for (int i = lastq[cur]; i; i = qs[i].prev) {//\u679a\u4e3equery\n        if (!qs[i].flag && vis[qs[i].to]) {//\u6ee1\u8db3\u6761\u4ef6\n            lca[qs[i].num] = find(qs[i].to);//\u627e\u5230\u7956\u5148\u5e76\u8d4b\u503c\u7ed9lca\u6570\u7ec4\n        \tqs[i].flag = 1;//\u6807\u8bb0i\n            qs[chg(i)].flag = 1;//\u6807\u8bb0chg(i)\n        }\n    }\n} \n```\n\n- \u63a5\u7740\u662fgetsum\u51fd\u6570\uff08\u8981\u8bb0\u5f97%p\uff09\uff1a\n\n```\nll getsum(int x, int y, int k) {\n    if (x != -1) {//\u5982\u679cx\u4e0d\u7b49\u4e8e-1\n        return (sum[y][k] - sum[x][k] + p) % p; //\u8fd4\u56de\n    } else {//\u5426\u5219\n        return sum[y][k] % p; //\u8fd4\u56de\n    } \n} \n```\n\n- \u6700\u540e\u662fmain\u51fd\u6570\uff1a\n\n```\nint main() {\n    cin >> n; //\u8f93\u5165n\n    for (int i = 1, x, y; i < n; i++) {//\u5faa\u73af\n        cin >> x >> y; //\u8f93\u5165\u8fb9\n        //\u5b58\u8fb9\n        add(x, y); \n        add(y, x); \n    } \n    cin >> m; //\u8f93\u5165m\n    for (int i = 1; i <= n; i++) pre[i] = i; //\u5e76\u67e5\u96c6\u521d\u59cb\u5316\n    for (int i = 1; i <= m; i++) {//\u5faa\u73af\n        cin >> a[i] >> b[i] >> k[i]; //\u8f93\u5165query\n        //\u5b58query\n        add2(a[i], b[i], i); \n        add2(b[i], a[i], i); \n    } \n    dfs(1, 0); //dfs\u51fd\u6570\n    for (int i = 1; i <= maxd; i++) {//sum\u521d\u59cb\u5316\n        sum[i][1] = i; //\u4e00\u6761\u8fb9\u8981\u4e3a1\n        for (int j = 2; j <= 50; j++) {\n            sum[i][j] = (sum[i][j - 1] * i) % p;//\u8bb0\u5f97%p \n        } \n    } \n    for (int j = 1; j <= 50; j++) {\n        for (int i = 1; i <= maxd; i++) {\n            sum[i][j] = (sum[i][j] + sum[i - 1][j]) % p;//\u8bb0\u5f97%p \n        } \n    }  \n    for (int i = 1; i <= m; i++) {\n        ll ans = 0; //ans\n        if (a[i] == lca[i]) {\u5982\u679ca[i]=lca[i]\n    \t\tans = getsum(dep[a[i]] - 1, dep[b[i]], k[i]); //\u5f97\u5230ans\u7684\u503c\n        } else if (b[i] == lca[i]) {//\u5982\u679cb[i]=lca[i]\n    \t\tans = getsum(dep[b[i]] - 1, dep[a[i]], k[i]); //\u5f97\u5230ans\u7684\u53e6\u4e00\u4e2a\u503c\n        } else {//\u5426\u5219\n        \tans = getsum(dep[lca[i]] - 1, dep[a[i]], k[i]); //\u5f97\u5230ans\n        \tans = (ans + getsum(dep[lca[i]], dep[b[i]], k[i])) % p; //\u66f4\u65b0ans\n        } \n        cout << ans << endl;//\u8f93\u51faans \n    } \n    return 0; //\u7ed3\u675f\n} \n```\n\n\u6240\u4ee5\u6574\u4e2a\u4ee3\u7801\u5c31\u5f97\u51fa\u6765\u4e86\uff1a\n\n```\n#include<cstdio>\n#include<iostream>\n#define p 998244353\n#define ll long long\nusing namespace std;\n\nstruct edge {int to, prev; } e[1000005]; \nstruct node {\n    int to, prev, num; \n    bool flag; \n    node() {flag = false; } \n} qs[1000005]; \n\nbool vis[500005], flg[500005]; \nint n, m, s, tot = 0, cnt = 0, lca[500005], last[500005], lastq[500005], pre[500005]; \nint maxd = -1, dep[500005], a[500005], b[500005], k[500005]; \nll sum[500005][60]; \n\ninline void add(int x, int y) {\n    e[++tot].to = y; \n    e[tot].prev = last[x]; \n    last[x] = tot; \n} \n\ninline int chg(int num) {\n\tif (num & 1) return num + 1; \n\telse return num - 1; \n}  \n\ninline void add2(int x, int y, int id) {\n    qs[++cnt].to = y; \n    qs[cnt].prev = lastq[x]; \n    qs[cnt].num = id; \n    lastq[x] = cnt; \n} \n\nint find(int x) {\n    if (pre[x] != x) pre[x] = find(pre[x]); \n    return pre[x]; \n} \n\nvoid merge(int x, int y) {\n\tint f1 = find(x), f2 = find(y); \n    pre[f2] = f1; \n} \n\nvoid dfs(int cur, int f) {\n    for (int i = last[cur]; i; i = e[i].prev) {\n        if (e[i].to != f && !vis[e[i].to]) {\n            dep[e[i].to] = dep[cur] + 1; \n            maxd = max(maxd, dep[e[i].to]); \n            vis[e[i].to] = 1; \n            dfs(e[i].to, cur); \n            merge(cur, e[i].to); \n        } \n    }\n    for (int i = lastq[cur]; i; i = qs[i].prev) {\n        if (!qs[i].flag && vis[qs[i].to]) {\n            lca[qs[i].num] = find(qs[i].to); \n        \tqs[i].flag = 1; \n            qs[chg(i)].flag = 1;\n        }\n    }\n} \n\nll getsum(int x, int y, int k) {\n    if (x != -1) {\n        return (sum[y][k] - sum[x][k] + p) % p; \n    } else {\n        return sum[y][k] % p; \n    } \n} \n\nint main() {\n    cin >> n; \n    for (int i = 1, x, y; i < n; i++) {\n        cin >> x >> y; \n        add(x, y); \n        add(y, x); \n    } \n    cin >> m; \n    for (int i = 1; i <= n; i++) pre[i] = i; \n    for (int i = 1; i <= m; i++) {\n        cin >> a[i] >> b[i] >> k[i]; \n        add2(a[i], b[i], i); \n        add2(b[i], a[i], i); \n    } \n    dfs(1, 0); \n    for (int i = 1; i <= maxd; i++) {\n        sum[i][1] = i; \n        for (int j = 2; j <= 50; j++) {\n            sum[i][j] = (sum[i][j - 1] * i) % p; \n        } \n    } \n    for (int j = 1; j <= 50; j++) {\n        for (int i = 1; i <= maxd; i++) {\n            sum[i][j] = (sum[i][j] + sum[i - 1][j]) % p; \n        } \n    }  \n    for (int i = 1; i <= m; i++) {\n        ll ans = 0; \n        if (a[i] == lca[i]) {\n    \t\tans = getsum(dep[a[i]] - 1, dep[b[i]], k[i]); \n        } else if (b[i] == lca[i]) {\n    \t\tans = getsum(dep[b[i]] - 1, dep[a[i]], k[i]); \n        } else {\n        \tans = getsum(dep[lca[i]] - 1, dep[a[i]], k[i]); \n        \tans = (ans + getsum(dep[lca[i]], dep[b[i]], k[i])) % p; \n        } \n        cout << ans << endl; \n    } \n    return 0; \n} \n```",
        "postTime": 1582508580,
        "uid": 306573,
        "name": "Ender32k",
        "ccfLevel": 0,
        "title": "P4427 [BJOI2018]\u6c42\u548c"
    },
    {
        "content": "\u8fd9\u79cd\u4e0d\u5e26\u4fee\u6539\u7684\u9898\uff0c\u5bf9\u4e8e\u849f\u84bb\u6765\u8bf4\u8fd8\u662f\u500d\u589e\u6bd4\u8f83\u597d\u5199\n\n\u9884\u5904\u74061~50\u6b21\u65b9\u7684\u6df1\u5ea6\u7684\u524d\u7f00\u548c\uff0c\u500d\u589e\u65f6\u4e00\u6bb5\u4e00\u6bb5\u8ba1\u5165\u7b54\u6848\uff0c\u6ce8\u610f\u79d1\u5b66\u53d6\u819c\n```\n#include<cstdio>\n#include<cctype>\n#include<cmath>\n#include<algorithm>\n\n#define MOD 998244353\n#define LL long long\n\nint Read()\n{\n    int x = 0; char c = getchar();\n    while (!isdigit(c))\n    {\n        c = getchar();\n    }\n    while (isdigit(c))\n    {\n        x = (x << 3) + (x << 1) + (c ^ 48);\n        c = getchar();\n    }\n    return x;\n}\n\nstruct Edge\n{\n    int to, next;\n}edge[600002];\n\nint head[300002], cnt;\n\nvoid Add_edge(int u, int v) \n{\n    edge[++cnt] = (Edge) { v, head[u] };\n    head[u] = cnt;\n    edge[++cnt] = (Edge) { u, head[v] };\n    head[v] = cnt;\n}\n\nint sum[300002][52],depth[300002],maxdepth;//sum[i][j]\u8bb0\u5f55\u6df1\u5ea6i\u7684j\u6b21\u65b9\u7684\u524d\u7f00\u548c \nint grand[300002][21];//\u8bb0\u5f55\u500d\u589e\u7956\u5148 \nbool vis[300002];\n\nvoid Get_depth(int node)//dfs\u5f97\u5230\u7236\u4eb2\u4e0e\u6df1\u5ea6 \n{\n    vis[node] = 1;\n    for (int i = head[node]; i; i = edge[i].next)\n    {\n        int to=edge[i].to;\n        if (!vis[to])\n        {\n            maxdepth = std::max(depth[to] = depth[node] + 1, maxdepth);\n            grand[to][0] = node;\n            Get_depth(to);\n        }\n    }\n}\n\nvoid Fast_power(int dep, int p)//\u8bb0\u5fc6\u5316\u5feb\u901f\u5e42\uff0c\u4e5f\u8bb8\u53ef\u4ee5\u51cf\u5c0f\u5e38\u6570 \n{\n    if (sum[dep][p])\n    {\n        return;\n    }\n    if (!p)\n    {\n        sum[dep][p] = 1;\n        return;\n    }\n    else\n    {\n        Fast_power(dep, p >> 1);\n        if (p & 1)\n        {\n            sum[dep][p] = (LL)sum[dep][p >> 1] * (LL)sum[dep][p >> 1] % MOD * (LL)dep % MOD;\n        }\n        else\n        {\n            sum[dep][p] = (LL)sum[dep][p >> 1] * (LL)sum[dep][p >> 1] % MOD;\n        }\n    }\n    return;\n}\n\nvoid Get_power(int num)\n{\n    for (int i = 1; i <= maxdepth; ++i)\n    {\n        for (int j = 50; j >= 1; --j)\n        {\n            Fast_power(i, j);//\u5feb\u901f\u5e42 \n        }\n    }\n    for (int i = 1; i <= maxdepth; ++i)\n    {\n        for (int j = 1; j <= 50; ++j)\n        {\n            sum[i][j] = (sum[i][j] + sum[i-1][j])%MOD;//\u524d\u7f00\u548c \n        }\n    }\n}\n\nvoid init(int n)\n{\n    for (int i = 1; (1 << i) <= n; ++i)\n    {\n        for (int j = 1; j <= n; ++j)\n        {\n            grand[j][i] = grand[grand[j][i - 1]][i - 1];//\u9884\u5904\u7406\u500d\u589e \n        }\n    }\n}\n\nint Query(int u, int v, int k, int n)//\u67e5\u8be2\n{\n    int ans = 0;\n    if (depth[u]>depth[v])\n    {\n        std::swap(u, v);\n    }\n    int dif = depth[v] - depth[u];\n    for (int i = 0; (1 << i) <= dif; ++i)\n    {\n        if ((1 << i)&dif)\n        {\n            ans = ((ans - sum[depth[grand[v][i]]][k] + sum[depth[v]][k]) % MOD + MOD) % MOD;\n            v = grand[v][i];\n        }\n    }\n    if (u != v)\n    {\n        for (int i = (int)log2(n); i >= 0; --i)\n        {\n            if (grand[u][i] != grand[v][i])\n            {\n                ans = ((ans - sum[depth[grand[u][i]]][k] + sum[depth[u]][k]) % MOD + MOD) % MOD;\n                u = grand[u][i];\n                ans = ((ans - sum[depth[grand[v][i]]][k] + sum[depth[v]][k]) % MOD + MOD) % MOD;\n                v = grand[v][i];\n            }\n        }\n        /*\n        / \u6b64\u65f6\u7684\u72b6\u51b5\u5e94\u4e3a\uff1a \n        /       LCA\n        /      /   \\\n        /     u    v\n        /    /      \\\n        /  \u5df2\u7edf\u8ba1\u7684\u90e8\u5206 \n        */ \n        //\u9700\u8981\u52a0\u4e0au\u3001v\u7684\u7b54\u6848 \n        ans = ((ans - sum[depth[grand[u][0]]][k] + sum[depth[u]][k]) % MOD + MOD) % MOD;\n        ans = ((ans - sum[depth[grand[v][0]]][k] + sum[depth[v]][k]) % MOD + MOD) % MOD;\n        u = grand[u][0];\n    }\n    /*\n    / \u6b64\u65f6\u7684\u72b6\u51b5\u5e94\u4e3a\uff1a\n    /      LCA,u,v\n    /      /     \\\n    /    \u5df2\u7edf\u8ba1\u7684\u90e8\u5206 \n    */ \n    //\u90a3\u4e48\u518d\u52a0\u4e0aLCA\u7684\u7b54\u6848\u5373\u53ef \n    return ((ans - sum[depth[grand[u][0]]][k] + sum[depth[u]][k]) % MOD + MOD) % MOD;\n}\n\nint main()\n{\n    int n = Read();\n    for (int i = 1; i<n; ++i)\n    {\n        Add_edge(Read(), Read());\n    }\n\n    grand[1][0] = 1;\n    depth[1] = 0;\n    Get_depth(1);\n    Get_power(n);\n    init(n);\n\n    int m = Read(), u, v, k;\n    for (int i = 0; i<m; ++i)\n    {\n        u = Read(), v = Read(), k = Read();\n        printf(\"%d\\n\", Query(u, v, k, n));\n    }\n    return 0;\n}\n```",
        "postTime": 1523937946,
        "uid": 53374,
        "name": "SuperJvRuo",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4427 \u3010[BJOI2018]\u6c42\u548c\u3011"
    },
    {
        "content": "\u849f\u84bb\u7684\u5e7f\u544a\uff1ahttp://www.neptuuz.com/wordpress/?p=297\n\n\u7531\u4e8ek\u7684\u8303\u56f4\u6bd4\u8f83\u5c0f\uff0c\u6240\u4ee5\u53ef\u4ee5\u5f00k\u4e2a\u7ebf\u6bb5\u6811\uff0c\u7136\u540e\u5c31\u662f\u6811\u5256\u88f8\u9898\u4e86\uff0c\n\n\u8981\u6ce8\u610f\u5f88\u591a\u4f18\u5316\u7684\u7ec6\u8282\uff0c\u521d\u59cb\u5316\u7ebf\u6bb5\u6811\u4e0d\u80fd\u4e00\u4e2a\u4e2a\u70b9\u8d4b\u503c\uff0c\u4e0d\u7136\u5c31\u4f1a\u53d8\u6210O(knlogn)\u7136\u540eTLE\uff08\u600e\u4e48\u8bc4\u6d4b\u663e\u793a\u7684\u662fRE\uff1floj\u663e\u793a\u7684\u624d\u662fTLE\uff09\n\n\u590d\u6742\u5ea6O(kn+mlogn)\uff0c\u8fd8\u8981\u5f00\u4e2aO2\u624d\u80fd\u8fc7\n\nCode:\n```cpp\n#include<stdio.h>\n#include<iostream>\n#define MAXN 300010\n#define MOD 998244353\n#define LL long long\n#define pos(l, r) ((l+r) | (l != r))\nusing namespace std;\n\nint read() {\n\tint x = 0;\n\tchar c = getchar();\n\twhile (c < '0' || c > '9') c = getchar();\n\twhile (c >= '0' && c <= '9') {\n\t\tx = x*10+c-'0';\n\t\tc = getchar();\n\t}\n\treturn x;\n}\n\nvoid write(int x) {\n\tif (x == 0) putchar('0');\n\telse {\n\t\tint len = 0, dg[20];\n\t\twhile (x > 0) {\n\t\t\tdg[++len] = x%10;\n\t\t\tx /= 10;\n\t\t}\n\t\tfor (int i = len; i >= 1; --i) putchar(dg[i]+'0');\n\t}\n\tputchar('\\n');\n}\n\nstruct Edge {\n\tint u, v, next;\n} e[MAXN*2];\n\nint n, m, h[MAXN], w[MAXN], son[MAXN], id[MAXN], top[MAXN], cnt, par[MAXN], dep[MAXN][51], t[51][MAXN*2], fid[MAXN];\n\nvoid addEdge(int num, int ui, int vi) {\n\te[num] = (Edge) {ui, vi, h[ui]};\n\th[ui] = num;\n}\n\nvoid dfs(int u) {\n\tw[u] = 1;\n\tfor (int i = h[u]; i; i = e[i].next) {\n\t\tif (!w[e[i].v]) {\n\t\t\tdep[e[i].v][1] = dep[u][1]+1;\n\t\t\tpar[e[i].v] = u;\n\t\t\tdfs(e[i].v);\n\t\t\tw[u] += w[e[i].v];\n\t\t\tif (w[son[u]] < w[e[i].v]) son[u] = e[i].v;\n\t\t}\n\t}\n}\n\nvoid init(int u, int p) {\n\tid[u] = ++cnt;\n\tfid[cnt] = u;\n\ttop[u] = p;\n\tif (son[u]) init(son[u], p);\n\tfor (int i = h[u]; i; i = e[i].next) {\n\t\tif (!top[e[i].v]) init(e[i].v, e[i].v);\n\t}\n}\n\nvoid build(int l, int r, int p, int k) {\n\tif (l == r) t[k][p] = dep[fid[l]][k];\n\telse {\n\t\tint mid = (l+r)>>1, lc = pos(l, mid), rc = pos(mid+1, r);\n\t\tbuild(l, mid, lc, k);\n\t\tbuild(mid+1, r, rc, k);\n\t\tt[k][p] = t[k][lc]+t[k][rc];\n\t\tif (t[k][p] >= MOD) t[k][p] -= MOD;\n\t}\n}\n\nint query(int l, int r, int x, int y, int p, int k) {\n\tif (x <= l && r <= y) return t[k][p];\n\tint mid = (l+r)>>1, lc = pos(l, mid), rc = pos(mid+1, r), ans = 0;\n\tif (x <= mid) ans += query(l, mid, x, y, lc, k);\n\tif (y > mid) ans += query(mid+1, r, x, y, rc, k);\n\tif (ans >= MOD) ans -= MOD;\n\treturn ans;\n}\n\nint solve(int u, int v, int k) {\n\tint pu = top[u], pv = top[v], res = 0;\n\twhile (pu != pv) {\n\t\tif (dep[pu][1] < dep[pv][1]) {\n\t\t\tswap(u, v);\n\t\t\tswap(pu, pv);\n\t\t}\n\t\tres += query(1, n, id[pu], id[u], pos(1, n), k);\n\t\tif (res >= MOD) res -= MOD;\n\t\tu = par[pu];\n\t\tpu = top[u];\n\t}\n\tif (dep[u][1] < dep[v][1]) swap(u, v);\n\tres += query(1, n, id[v], id[u], pos(1, n), k);\n\tif (res >= MOD) res -= MOD;\n\treturn res;\n}\n\nint main() {\n\tn = read();\n\tfor (int i = 1, ui, vi; i < n; ++i) {\n\t\tui = read(); vi = read();\n\t\taddEdge(i, ui, vi);\n\t\taddEdge(i+n, vi, ui);\n\t}\n\tdfs(1);\n\tinit(1, 1);\n\tfor (int i = 1; i <= 50; ++i) {\n\t\tfor (int j = 1; j <= n; ++j) {\n\t\t\tif (i == 1) break;\n\t\t\tdep[j][i] = (LL)dep[j][i-1]*(LL)dep[j][1]%MOD;\n\t\t}\n\t\tbuild(1, n, pos(1, n), i);\n\t}\n\tm = read();\n\tfor (int i = 1, ui, vi, k; i <= m; ++i) {\n\t\tui = read(); vi = read(); k = read();\n\t\twrite(solve(ui, vi, k));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1523847439,
        "uid": 2008,
        "name": "AmamiyaUmi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4427 \u3010[BJOI2018]\u6c42\u548c\u3011"
    },
    {
        "content": "## \u9898\u610f\uff1a\n\n\u7ed9\u51fa\u4e00\u68f5\u6709\u6700\u591a $300000$ \u4e2a\u8282\u70b9\u5e76\u4e14\u6839\u7ed3\u70b9\u7f16\u53f7\u4e3a $1$ \u7684\u6709\u6839\u6811\uff0c\u518d\u7ed9\u51fa\u6700\u591a $300000$ \u4e2a\u8be2\u95ee\uff0c\u6bcf\u6b21\u8be2\u95ee\u7ed9\u51fa $x,y,k$ \uff0c\u8981\u6c42\u6c42\u51fa\u5728\u6811\u4e0a $x$ \u5230 $y$ \u7684\u8def\u5f84\u4e0a\u6240\u6709\u70b9\u6df1\u5ea6\u7684 $k$ \u6b21\u65b9\u4e4b\u548c\uff08\u6839\u8282\u70b9\u6df1\u5ea6\u4e3a $0$ \uff0c\u6b21\u65b9\u548c\u7edf\u8ba1\u5305\u62ec\u70b9 $x$ \u548c\u70b9 $y$ \uff09\u3002\n\n## \u524d\u7f6e\u77e5\u8bc6\uff1a\n\n1. \u6811\u4e0a\u6700\u77ed\u8ddd\u79bb\u5fc5\u7136\u662f $x->lca(x,y)->y$ \uff0c\u663e\u7136\u6210\u7acb\u3002\n\n2. \u66b4\u529b\u8df3 $lca$ \u5728\u94fe\u7684\u60c5\u51b5\u4e0b\u5fc5\u7136\u4f1a $TLE$ \uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u638c\u63e1\u500d\u589e $lca$ \u7684\u5199\u6cd5\u3002\n\n3. \u6bcf\u6b21\u627e\u51fa\u6811\u4e0a\u6700\u77ed\u8def\u7136\u540e\u66b4\u529b\u5feb\u901f\u5e42\u7d2f\u52a0\uff0c\u6700\u574f\u6bcf\u6b21\u90fd\u8981\u52a0\u957f\u5ea6\u4e3a $N$ \u7684\u4e00\u6761\u94fe\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4f1a\u8fbe\u5230 $O(TNlogN)$ \u7684\u7ea7\u522b\uff0c\u5fc5\u5b9a\u9003\u4e0d\u51fa $TLE$ \u7684\u547d\u8fd0\u3002\u770b\u5230 $k$ \u7684\u8303\u56f4\u624d $1$ ~ $30$ \u4e0d\u96be\u60f3\u5230\u9700\u8981 $N*K$ \u7684\u590d\u6742\u5ea6\u53bb\u9884\u5904\u7406k\u6b21\u65b9\u7684\u548c\u3002\n\n## \u601d\u8def\uff1a\n\n\u7528\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u8fb9\u5e76\u6839\u636e\u9898\u610f\u4ee5 $1$ \u53f7\u8282\u70b9\u4e3a\u6839\u5efa\u6811\uff0c\u5728\u5efa\u6811\u7684\u8fc7\u7a0b\u4e2d\u987a\u4fbf\u5904\u7406\u5f53\u524d\u70b9\u7684\u6df1\u5ea6\u548c\u5f53\u524d\u8282\u70b9 $2^{0}$ \u3001 $2^{1}$ \u3001 $2^{2}$ \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u7684\u7956\u5148\u8282\u70b9\uff0c\u4e3a\u540e\u7eed\u500d\u589e $lca$ \u505a\u51c6\u5907\u3002**\u4ee3\u7801\u5982\u4e0b\uff1a**\n\n```cpp\ninline void add(int u,int v){\n\tedge[++cnt]=v;nxt[cnt]=head[u];head[u]=cnt;\n\tedge[++cnt]=u;nxt[cnt]=head[v];head[v]=cnt;\n}//\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u8fb9\u65b9\u5f0f\uff0c\u5f88\u8282\u7ea6\u7a7a\u95f4\ninline void build(int x,int fa){\n\tf[x][0]=fa;dep[x]=dep[fa]+1;//2^0\u7684\u7956\u5148\u8282\u70b9\u5c31\u662f\u7236\u4eb2\u8282\u70b9\uff0cdep\u6570\u7ec4\u8bb0\u5f55\u6df1\u5ea6\n\tfor (int i=1;i<=p[dep[x]];++i) f[x][i]=f[f[x][i-1]][i-1];//\u5f97\u51fa\u5176\u4ed6\u7956\u5148\u8282\u70b9\n\tfor (int next=head[x];next;next=nxt[next])\n\t if (edge[next]!=fa) build(edge[next],x);//\u524d\u5411\u661f\u627e\u513f\u5b50\u8282\u70b9\u9012\u5f52\u4e0b\u53bb\u5efa\u6811\n}\n```\n\n $p$ \u6570\u7ec4\u662f\u4e00\u4e2a $O(log)$ \u7ea7\u53d8\u4e3a $O(1)$ \u7684\u9884\u5904\u7406\u5e38\u6570\u4f18\u5316\uff0c\u53ef\u4ee5 $O(1)$ \u7ed9\u51fa $n$ \u4ee5\u5185\u4efb\u610f\u6570\u7684 $log_{2}$ \u662f\u591a\u5c11\uff0c\u5f88\u6709\u6548\u3002**\u4ee3\u7801\u5982\u4e0b\uff1a**\n \n```cpp\nfor (int i=1;i<=n;++i) p[i]=p[i-1]+(1<<p[i-1]==i);\n```\n\n\u800c\u4e14\u8fd9\u91cc\u6709\u7528\u5230\u4e00\u4e2a~~\u7b97\u662f\u516c\u5f0f\u7684~~\u73a9\u610f\u513f\u5427\uff0c\u5c31\u662f $f[x][i]=f[f[x][i-1]][i-1]$ \uff0c $f[x][i]$ \u56e0\u4e3a\u5b58\u7684\u662f\u70b9 $x$ \u7684 $2^{i}$ \u7684\u7956\u5148\u8282\u70b9\uff0c\u800c\u8fd9\u4e2a\u7956\u5148\u8282\u70b9\u662f\u70b9 $x$ \u7684 $2^{i-1}$ \u7684\u7956\u5148\u8282\u70b9\u7684 $2^{i-1}$ \u7684\u7956\u5148\u8282\u70b9\uff0c\u6240\u4ee5\u5c31\u53ef\u4ee5\u50cf $dp$ \u4e00\u6837\u5f97\u5230 $x$ \u7684 $2^{i}$ \u7684\u7956\u5148\u8282\u70b9\u3002\n\n\u505a\u5b8c\u4e86\u5b58\u8fb9\u548c\u5efa\u6811\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u5bf9\u6bcf\u6b21\u8be2\u95ee\u7ed9\u51fa\u7684 $x$ \u548c $y$ \u505a\u500d\u589e $lca$ \u4e86\u3002\u8fd9\u4e2a\u5e94\u8be5\u4e0d\u9700\u8981\u591a\u4f5c\u89e3\u91ca\uff0c\u5177\u4f53\u7591\u95ee\u89c1\u4e0b\u9762\u4ee3\u7801\u91cc\u5199\u7684\u6ce8\u91ca\u5427\u3002**\u4ee3\u7801\u5982\u4e0b\uff1a**\n\n```cpp\ninline int lca(int x,int y){\n\tif (dep[x]<dep[y]) swap(x,y);//\u9ed8\u8ba4\u8ba9x\u7684\u6df1\u5ea6\u5927\u4e8ey\u7684\u6df1\u5ea6\uff0c\u51cf\u5c11\u5206\u7c7b\u8ba8\u8bba\n\twhile(dep[x]>dep[y]) x=f[x][p[dep[x]-dep[y]]-1];\n   //\u500d\u589e\u5c06x\u8df3\u5230x\u7684\u7956\u5148\u5904\uff0c\u76f4\u5230x\u548cy\u7b49\u6df1\u4e3a\u6b62\n\tif (x==y) return x;//\u5982\u679cx=y\uff0c\u4ee3\u8868x\u548cy\u91cd\u5408\u4e86\uff0c\u90a3\u4e48lca(x,y)\u5c31\u662f\u5f53\u524d\u7684x\n\tfor (int i=p[dep[x]]-1;i>=0;--i)\n\t if (f[x][i]!=f[y][i]) x=f[x][i],y=f[y][i];//\u5982\u679c2^i\u4e24\u8005\u7684\u7956\u5148\u4e0d\u540c\uff0c\u90a3\u4e48\u5c31\u4e00\u8d77\u5411\u4e0a\u8df3\u52302^i\uff0c\u76f4\u5230\u5b83\u4eec\u7236\u4eb2\u8282\u70b9\u76f8\u540c\u4e3a\u6b62\n\treturn f[x][0];//\u8fd4\u56de\u5b83\u4eec\u76f8\u540c\u7684\u90a3\u4e2a\u7236\u4eb2\u8282\u70b9\n}\n```\n\n\u505a\u5b8c\u500d\u589e $lca$ \uff0c\u6211\u4eec\u53ea\u9700\u8981\u6700\u540e\u4e00\u6b65\u7edf\u8ba1 $k$ \u6b21\u65b9\u548c\u5c31\u884c\u4e86\u3002\u7ecf\u8fc7\u601d\u8003\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u6761\u94fe\u4e00\u5b9a\u662f\u4ece\u6df1\u5ea6\u9ad8\u7684\u5730\u65b9\u5230\u6df1\u5ea6\u4f4e\u7684\u5730\u65b9\uff0c $lca(x,y)$ \u65f6\u6df1\u5ea6\u6700\u4f4e\uff0c\u7136\u540e\u518d\u4ece\u6df1\u5ea6\u4f4e\u7684\u5230\u53e6\u4e00\u4e2a\u6df1\u5ea6\u9ad8\u7684\u5730\u65b9\uff0c\u800c\u4e14\u76f8\u90bb\u70b9\u7684\u6df1\u5ea6\u5dee\u90fd\u662f $1$ \uff0c\u6240\u4ee5\u53ef\u4ee5\u524d\u7f00\u548c\u9884\u5904\u7406\uff0c\u7136\u540e $ \\Sigma^{r}_{i=l} ksm[i][k]=mi[r][k]-mi[l-1][k]$ \u5c31\u53ef\u4ee5 $O(1)$ \u6c42\u51fa $k$ \u6b21\u65b9\u548c\u4e86\u3002**\u4ee3\u7801\u5982\u4e0b\uff1a**\n\n```cpp\ninline void pre(){\n\tfor (int i=1;i<=n;++i) mi[i][0]=1;//\u4efb\u610f\u6b63\u6574\u6570\u76840\u6b21\u5e42\u4e3a1\n\tfor (int i=1;i<=n;++i) p[i]=p[i-1]+(1<<p[i-1]==i);//\u524d\u9762\u500d\u589elca\u4e2dp\u6570\u7ec4\u7684\u9884\u5904\u7406\n\tfor (int i=1;i<=n;++i)\n\t for (int j=1;j<=50;++j) mi[i][j]=mi[i][j-1]*i%M;//\u6c42\u51fai\u7684j\u6b21\u5e42\u5bf9M\u53d6\u6a21\u540e\u7684\u503c\n\tfor (int i=1;i<=n;++i)\n\t for (int j=1;j<=50;++j) mi[i][j]=(mi[i-1][j]+mi[i][j])%M;//\u5bf9\u6240\u6c42\u7684\u5e42\u6b21\u505a\u524d\u7f00\u548c\n}\n```\n## \u590d\u6742\u5ea6\u5206\u6790\uff1a\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u7a33\u5b9a $O(TlogN)$ \uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e5f\u8fdc\u8fdc\u8fbe\u4e0d\u5230 $512MB$ \u3002\n\n## \u5b8c\u6574\u65e0\u6ce8\u91ca\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int L=1000000;\nchar LZH[L],*SSS,*TTT;\ninline char gc(){if (SSS==TTT) TTT=(SSS=LZH)+fread(LZH,1,L,stdin);return *SSS++;}\ninline int read(){int x=0,f=1;char c=gc();for (;c<'0'||c>'9';c=gc()) if (c=='-') f=-1;for (;c>='0'&&c<='9';c=gc()) x=(x<<1)+(x<<3)+c-48;return x*f;}\ninline void write(int x){if(x<0) putchar('-'),x=-x;if(x>9) write(x/10);putchar(x%10+48);}\ninline void wln(int x){write(x);putchar(10);}\ninline void wlk(int x){write(x);putchar(32);}\nconst int maxn=300003;\nconst int M=998244353;\nint edge[maxn<<1],nxt[maxn<<1],head[maxn],p[maxn];\nint n,cnt,f[maxn][20],dep[maxn],mi[maxn][53];\ninline void pre(){\n\tfor (int i=1;i<=n;++i) mi[i][0]=1;\n\tfor (int i=1;i<=n;++i) p[i]=p[i-1]+(1<<p[i-1]==i);\n\tfor (int i=1;i<=n;++i)\n\t for (int j=1;j<=50;++j) mi[i][j]=mi[i][j-1]*i%M;\n\tfor (int i=1;i<=n;++i)\n\t for (int j=1;j<=50;++j) mi[i][j]=(mi[i-1][j]+mi[i][j])%M;\n}\ninline void add(int u,int v){\n\tedge[++cnt]=v;nxt[cnt]=head[u];head[u]=cnt;\n\tedge[++cnt]=u;nxt[cnt]=head[v];head[v]=cnt;\n}\ninline void build(int x,int fa){\n\tf[x][0]=fa;dep[x]=dep[fa]+1;\n\tfor (int i=1;i<=p[dep[x]];++i) f[x][i]=f[f[x][i-1]][i-1];\n\tfor (int next=head[x];next;next=nxt[next])\n\t if (edge[next]!=fa) build(edge[next],x);\n}\ninline int lca(int x,int y){\n\tif (dep[x]<dep[y]) swap(x,y);\n\twhile(dep[x]>dep[y]) x=f[x][p[dep[x]-dep[y]]-1];\n\tif (x==y) return x;\n\tfor (int i=p[dep[x]]-1;i>=0;--i)\n\t if (f[x][i]!=f[y][i]) x=f[x][i],y=f[y][i];\n\treturn f[x][0];\n}\nsigned main(){\n\tn=read();pre();\n\tfor (int i=1;i<n;++i) add(read(),read());\n\tbuild(1,0);for (int i=1;i<=n;++i) dep[i]--;\n\tint T=read();while(T--){\n\t\tint x=read(),y=read(),k=read();\n\t\tint top=lca(x,y),ans=mi[max(dep[x],dep[y])][k];\n\t\tans=(ans+M-mi[dep[top]?dep[top]-1:0][k])%M;\n\t\tans=(ans+mi[min(dep[x],dep[y])][k])%M;\n\t\tans=(ans+M-mi[dep[top]][k])%M;wln(ans);\n\t}\n\treturn 0;\n}\n```\n\n\u5b8c\u7ed3\u6492\u82b1 $QwQ$ \uff01",
        "postTime": 1572271681,
        "uid": 185759,
        "name": "cz666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4427 \u3010[BJOI2018]\u6c42\u548c\u3011"
    },
    {
        "content": "**\u603b\u7684\u6765\u8bf4\uff0c\u8fd9\u9898\u5c31\u662f\u4e00\u4e2a\u5b57:\u7384\uff01**\n\n\u9996\u5148\u62ff\u5230\u9898\u76ee\u6211\u4eec\u90fd\u4e0d\u96be\u60f3\u5230\u5c31\u662flca\n\n\u4f46\u662f\u9898\u76ee\u4e2d\u8981\u6c42\u8f93\u51fa\u8def\u5f84\u4e2d\u6240\u6709\u70b9\u7684k\u6b21\u65b9\u548c\n\n\u518d\u770b\u770bk\u7684\u8303\u56f4----k<=50!!!\n\n\u8fd9\u4e48\u597d\u7684\u6027\u8d28\u5f53\u7136\u662f\u7ed9\u6211\u4eec\u9884\u5904\u7406k\u6b21\u65b9\u548c\u7684\u5566\n\n**\u4e8e\u662f\u6211\u4eec\u8bb0$mem[i][k]$\u8868\u793a$\\sum_{j=1}^{j<=i}j^k$**\n\n\u7531\u4e8e\u8def\u5f84\u4e0a\u7684\u70b9\u7684\u6df1\u5ea6\u5fc5\u5b9a\u662f\u8fde\u7eed\u7684\u4e00\u6bb5\u533a\u95f4\n\n\u6839\u636e\u5bb9\u65a5\u7684\u601d\u60f3\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u5f88\u5feb\u77e5\u9053**\u7b54\u6848\u5c31\u662f**\n\n$mem[de[x]-1][k]-mem[de[fa]-2][k]+mem[de[y]-1][k]-mem[de[fa]-1][k]$\n\n\u5176\u4e2dx,y\u8868\u793a\u4e24\u4e2a\u8282\u70b9,de\u8868\u793a\u6df1\u5ea6,fa\u8868\u793a\u6700\u8fd1\u516c\u5171\u7956\u5148\n\n~~\u7136\u540e\u8fd9\u9898\u5c31\u6210SB\u9898\u4e86~~\n\n\u6211\u82b1\u4e86\u4e00\u4e2a\u4e0b\u5348\u7684\u65f6\u95f4\u8c03\u8fd9\u9898,\u8fd9\u91cc\u5206\u4eab\u4e00\u4e0b\u6211\u8fc7\u7684\u5751:\n\n**1:\u6240\u6709\u53d8\u91cf\u90fd\u8981\u521d\u59cb\u5316**\n\n\u4e00\u5f00\u59cb\u6211\u7684\u5168\u5c40\u53d8\u91cf\u90fd\u6ca1\u51fa\u59cb\u5316,\u4e8e\u662f\u4e00\u76f4RE\u540e\u6765\u8f93\u51fade[0]\u53d1\u73b0\u5b83\u7684\u503c\u662f\u4e2a\u968f\u673a\u6570...\n\n**2.de\u6570\u7ec4\u90fd\u8981\u52a01**\n\n\u4e5f\u5c31\u662f\u8bf4de[1]=1,\u5728\u4f7f\u7528\u65f6\u518d-1,\u5426\u5219f\u6570\u7ec4\u5c31\u4e0d\u5bf9\n\n**3.\u8ba1\u7b97\u7b54\u6848\u65f6\u8981\u7279\u5224x==y\u548cfa==1**\n\nx==y\u65f6\u5982\u679cx==1\u5219 $ans=0$\n\n\u5426\u5219 $ans=(de[x]-1)^k$\n\nfa==1\u65f6 $ans=mem[de[x]-1][k]+mem[de[y]-1][k]$\n\n**\u7136\u540e\u5c31\u662f\u4ee3\u7801\u5566**\n\n```cpp\n#include<bits/stdc++.h>\n#define int  long long\nusing namespace std;\nint read(){\n    int x=0;char ch=getchar();\n    while(ch>'9'||ch<'0')ch=getchar();\n    while(ch>='0'&&ch<='9')x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n    return x;\n}\nint de[1000005],mem[300005][55],n,m,f[300005][55];\nconst int mod=998244353;\nint head[1000005],ji;\nstruct node{\n    int next,yuan;\n}ed[10000005];\nvoid dfs(int k,int d){\n    for(int i=head[k];i;i=ed[i].next){\n        int y=ed[i].yuan;\n        if(!de[y]){\n            de[y]=d;\n            f[y][0]=k;\n            for(int j=1;j<=20;j++)f[y][j]=f[f[y][j-1]][j-1];\n            dfs(y,d+1);\n        }\n    }\n}\nvoid add(int p,int q){\n\ted[++ji].next=head[p];\n\ted[ji].yuan=q;\n\thead[p]=ji;\n}\nint quick(int b,int p){\n    int re=1;\n    while(p){\n        if(p&1)re=(1ll*re*b)%mod;\n        p>>=1;b=(1ll*b*b)%mod;\n    }\n    return re;\n}\nint mo(int aa,int bb){\n    int re=aa+bb;\n    re=((re+mod)%mod%mod);\n    return re;\n}\nvoid pre(){\n    for(int i=1;i<=300005;i++){\n    \tfor(int j=1;j<=50;j++){\n            mem[i][j]=mo(mem[i-1][j],quick(i,j));\n        }\n    }\n}\nvoid work(int x,int y,int fa,int k){\n    int ans=0;\n    de[0]=0;de[1]=1;mem[0][k]=0;\n    if(fa!=1){\n    \tans=mo(mem[de[x]-1][k]-mem[de[fa]-2][k],mod);\n    \tans=mo(ans,mo(mem[de[y]-1][k]-mem[de[fa]-1][k],mod));\n   \t}else {\n   \t\tans=mem[de[x]-1][k];\n   \t\tans=mo(ans,mem[de[y]-1][k]);\n   \t}\n    if(x!=y)printf(\"%lld\\n\",ans);\n    else if(x==1)printf(\"0\\n\");\n    \t else printf(\"%lld\\n\",quick(de[x]-1,k));\n}\nvoid lca(int x,int y,int k){\n    if(de[x]>de[y])swap(x,y);\n    int memx=x,memy=y;\n    for(int i=20;i>=0;i--){\n        if(de[f[y][i]]>=de[x])y=f[y][i];\n    }\n    if(x==y){work(memx,memy,memx,k);return ;}\n    for(int i=20;i>=0;i--){\n        if(f[x][i]!=f[y][i]){\n            x=f[x][i],y=f[y][i];\n        }\n    }\n    work(memx,memy,f[x][0],k);\n}\nsigned main(){\n    pre();\n    memset(f,0,sizeof(f));\n    memset(de,0,sizeof(de));\n    memset(ed,0,sizeof(ed));\n    memset(head,0,sizeof(head));\n    n=read();\n    int cn,cm,ck;\n    for(int i=1;i<n;i++){\n\t\tint cn=read(),cm=read();\n\t\tadd(cn,cm);add(cm,cn);\n\t}\n    de[1]=1;\n    dfs(1,2);\n    m=read();\n    for(int i=1;i<=m;i++){\n        cn=read(),cm=read(),ck=read();\n        lca(cn,cm,ck);\n    }\n}\n```\n\n\u5c31\u8fd9\u4e48\u591a\u4e86,\u6211\u5f97\u5403\u996d\u53bb\u5566",
        "postTime": 1571831360,
        "uid": 111197,
        "name": "lqhsr",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4427 \u3010[BJOI2018]\u6c42\u548c\u3011"
    },
    {
        "content": "\u849f\u84bb\u4e00\u5f00\u59cb\u6ca1\u770b\u6570\u636e\u89c4\u6a21\uff0c\u66b4\u529bk\u6b21\u65b9\u52a0\uff0c\u7ed3\u679c\u5f88\u663e\u7136\uff1a~~\u7f8e\u5999\u768430\u5206~~\u3002\n\n\u7136\u540e\u5c31\u662f\u75af\u72c2\u5361\u5e38\uff0c~~\u6700\u540e\u653e\u5f03\u4e86~~\u3002\n\n------------\n#### \u518d\u6b21\u6d4f\u89c8\u6570\u636e\u89c4\u6a21\uff0c O\uff08NK\uff09\u7684\u9884\u5904\u7406\u597d\u50cf\u4e0d\u4f1a\u70b8\uff0c\n\u7136\u540e\u5c31\u662f\u6f2b\u957f\u7684\u6539\u4ee3\u7801\u65c5\u7a0b\n\n------------\n\u7b97\u4e86\uff0c\u4e0d\u56de\u987e\u5386\u53f2\u4e86\uff0c~~\u90fd\u662f\u6ceaT_T~~\u3002\u8fdb\u5165\u6b63\u9898\uff1a\n\n\u54b1\u4eec\u5148\u4e0d\u7ba1K\u6b21\u65b9\u548c\uff0c\u4ece\u70b9i\u8282\u70b9\u5230\u70b9j\u8282\u70b9\u7684\u8def\u5f84\u5176\u5b9e\u5c31\u662fi\u5230\u5b83\u4fe9\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\uff08\u8fd9\u91cc\u5199\u4f5clc\uff09\u4e0elc\u5230j\u8fd9\u6761\u8def\u5f84\uff0c\u6240\u4ee5\u6253\u4e00\u4e2aLCA\u6a21\u677f\u8fd9\u4e00\u95ee\u5c31\u89e3\u51b3\u4e86\u3002\n\n\u518d\u5c31\u662fK\u6b21\u65b9\u548c\u4e86\uff0c\u5176\u5b9e\u4e5f\u5f88\u597d\u5199\uff0c\u5728\u8be2\u95ee\u4e4b\u524d\u9884\u5904\u7406\u51fa\u6839\u8282\u70b9\u5230\u6bcf\u4e2a\u70b9\u7684K\u6b21\u65b9\u548c\uff0c\u518d\u5c31\u662fO\uff081\uff09\u67e5\u8be2\u4e86\u3002\n\n\u8bdd\u4e0d\u591a\u8bf4\uff0c\u624b\u8d77\uff0c\u7801\u843d\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define re register\nusing namespace std;\nstruct edge{int v,net;}e[600005];\nconst int mod=998244353;\ninline int read()\n{\n\tre int sum=0;\n\tre char ch=getchar();\n\twhile(ch<'0'||ch>'9')ch=getchar();\n\twhile(ch>='0'&&ch<='9')sum=(sum<<1)+(sum<<3)+(ch^48),ch=getchar();\n\treturn sum;\n}\ninline int Min(int x,int y){return (x<y?x:y);}\ninline int Max(int x,int y){return (x>y?x:y);}\nint n,m,dep[300005],hd[300005],cnt,f[300005][20];\nlong long ans,poww[300005][51],sum[300005][51],num;//poww[i][j]\u4e3ai\u8282\u70b9\u6df1\u5ea6\u7684j\u6b21\u65b9\uff0csum[i][j]\u4e3a\u6839\u8282\u70b9\u5230i\u8282\u70b9\u7684j\u6b21\u65b9\u548c\ninline void add(int u,int v)\n{\n\te[++cnt].v=v,e[cnt].net=hd[u],hd[u]=cnt;\n\te[++cnt].v=u,e[cnt].net=hd[v],hd[v]=cnt;\n}\nvoid first(int u,int fa)\n{\n\tfor(re int i=1;i<=19;i++)f[u][i]=f[f[u][i-1]][i-1];\n\tfor(re int i=hd[u],v;i;i=e[i].net)\n\t{\n\t\tv=e[i].v;\n\t\tif(v==fa)continue;\n\t\tdep[v]=dep[u]+1;\n\t\tf[v][0]=u;\n\t\tfirst(v,u);\n\t}\n}\ninline int lca(int x,int y)\n{\n\tif(dep[x]<dep[y])swap(x,y);\n\tfor(re int i=19;i>=0;i--)\n\t\tif(dep[f[x][i]]>=dep[y])x=f[x][i];\n\tif(x==y)return x;\n\tfor(re int i=19;i>=0;i--)\n\t\tif(f[x][i]!=f[y][i])\n\t\t\tx=f[x][i],y=f[y][i];\n\treturn f[x][0];\n}\nvoid dfs(int u,int fa)\n{\n\tfor(re int i=hd[u],v;i;i=e[i].net)\n\t{\n\t\tv=e[i].v;\n\t\tif(v==fa)continue;\n\t\tfor(re int j=1;j<=50;j++)\n\t\t\tsum[v][j]=(sum[u][j]+poww[v][j])%mod;\n\t\tdfs(v,u);\n\t}\n}//\u849f\u84bb\u7684K\u6b21\u65b9\u548c\u9884\u5904\u7406\nint main()\n{\n\tfreopen(\"sum.in\",\"r\",stdin);\n    freopen(\"sum.out\",\"w\",stdout);\n\tn=read();\n\tfor(re int i=1;i<n;i++)add(read(),read());\n\tm=read();\n\tfirst(1,-1);\n\tfor(re int i=1;i<=n;i++)\n\t{\n\t\tnum=dep[i];\n\t\tfor(re int j=1;j<=50;j++)\n\t\t\tpoww[i][j]=num,num=(num*dep[i])%mod;\n\t}\n\tdfs(1,-1);\n\tfor(re int i=1,x,y,z,lc,mi;i<=m;i++)\n\t{\n\t\tx=read(),y=read(),z=read(),ans=0;\n\t\tlc=lca(x,y);\n\t\tans=(sum[x][z]-sum[lc][z]+mod)%mod;\n\t\tans=(ans+(sum[y][z]-sum[lc][z]+mod)%mod)%mod;\n\t\tans=(ans+poww[lc][z])%mod;//\u6700\u540elc\u8282\u70b9\u8981\u8bb0\u5f97\u52a0\u4e0a\n\t\tprintf(\"%lld\\n\",ans);\t\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1570363729,
        "uid": 92275,
        "name": "Chester1011",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4427 \u3010[BJOI2018]\u6c42\u548c\u3011"
    },
    {
        "content": "### \u8003\u5bdflca\\\u6811\u4e0a\u5dee\u5206\\\u6811\u5256\n\u5f53\u7136\u5927\u4f17\u89e3\u6cd5\u662f\u6811\u4e0a\u5dee\u5206\u6216\u8005\u6811\u5256\u3002  \n\u5176\u5b9e\u8fd8\u6709\u66f4\u52a0\u66b4\u529b\u4e00\u70b9\u7684\u89e3\u6cd5\u3002  \n\u4f8b\u5982\uff0c\u4eceu\u8282\u70b9\u5230\u8fbev\u8282\u70b9\uff0c\u5176\u6700\u8fd1\u516c\u5171\u7956\u5148\u8ba1\u4e3aanc\uff0c\u7528d\u8868\u793a\u6df1\u5ea6\uff0c\u5219\u6240\u6c42\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a d(u)^k + (d(u)-1)^k + (d(u)-2)^k + \u2026\u2026 + d(anc)^k + (d(anc+1)) ^ k + (d(anc)+2)^k + \u2026\u2026 + d(v)^k  \n\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u4e2a\u7ed3\u679c\u7b49\u4e8e d(anc)^k + (d(anc+1)) ^ k + (d(anc)+2)^k + \u2026\u2026 + d(v)^k + d(anc)^k + (d(anc+1)) ^ k + (d(anc)+2)^k + \u2026\u2026 + d(u)^k - d(anc) ^ k.  \n\u5982\u679c\u7528f(x, k)\u8868\u793a 1^k + 2^k + \u2026\u2026 + x^k, \u4e0a\u8ff0\u5f0f\u5b50\u7b49\u4ef7\u4e8ef(d(u), k) + f(d(v), k) - f(d(anc), k) - f(d(anc-1), k)  \n\u6ca1\u9519\u8fd9\u5c31\u662f\u666e\u901a\u7684\u5dee\u5206\u3002\u5148\u7528O(Dk)\u9884\u5904\u7406\u8fd9\u4e2a\u524d\u7f00\u548c\uff0cD\u8868\u793a\u6df1\u5ea6\u3002\u9884\u5904\u7406lcaO(n), \u7136\u540elca\u627e\u5230anc\u6bcf\u6b21\u67e5\u8be2O(logn),m\u6b21\u67e5\u8be2\u5171O(mlogn),\u6240\u4ee5O(Dk+mlogn+n)\u3002\u5373\u4f7f\u662f\u4e00\u6761\u94fe\uff0cD\u53d6\u5230300000, Dk1500000\u4e5f\u4e0d\u4f1agg\u3002  \n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <iostream>\n#define p 998244353\n\nusing namespace std;\n\nint n;\nint head[300010], ver[600010], nex[600010], tot = 0;\nint fa[300010][20], d[300010], t, dmax;\nlong long pr[300010][60];\n\ninline int max(int i, int j) {\n    return i > j ? i : j;\n}\n\ninline long long max(long long i, long long j) {\n\treturn i > j ? i : j;\n}\n\ninline char gc() {\n    static char buf[300000], *p1 = buf, *p2 = buf;\n    return p1==p2 && (p2 = (p1 = buf) + fread(buf, 1, 300000, stdin), p1 == p2) ? EOF : *p1++;\n}\n\ninline int read() {\n    int x = 0;\n    char ch = gc();\n    while(ch < '0' || ch > '9') ch = gc();\n    while(ch >= '0' && ch <= '9') { x = (x << 3) + (x << 1) + (ch & 15); ch = gc(); }\n    return x;\n}\n\ninline void add(int u, int v) {\n    ver[tot] = v; nex[tot] = head[u]; head[u] = tot++;\n}\n\ninline void dfs1(int pre, int cur) {\n    d[cur] = d[pre] + 1; fa[cur][0] = pre; dmax = max(d[cur], dmax);\n    for(int i = 1; i <= t; i++) fa[cur][i] = fa[fa[cur][i-1]][i-1];\n    for(int i = head[cur]; i != -1; i = nex[i]) if(ver[i] != pre)\n        dfs1(cur, ver[i]);\n}\n\ninline void swap(int &i, int &j) {\n\tint t = i; i = j; j = t;\n}\n\ninline int lca(int u, int v) {\n\tif(d[v] < d[u]) swap(u, v);\n\tfor(int i = t; i > -1; --i) if(d[fa[v][i]] >= d[u]) v = fa[v][i];\n\tif(u == v) return u;\n\tfor(int i = t; i > -1; --i) if(fa[v][i] != fa[u][i]) u = fa[u][i], v = fa[v][i];\n\treturn fa[u][0];\n}\n\nint main() {\n    int u, v;\n    n = read(); t = (int)(log(n) / log(2)) + 1;\n    memset(head, -1, sizeof(head));\n    for(int i = 1; i < n; i++) {\n        u = read(); v = read();\n        add(u, v); add(v, u);\n    }\n    dmax = 0; d[0] = -1;\n    dfs1(0, 1);\n    for(int i = 1; i <= dmax; i++) {\n        pr[i][0] = 1; pr[i][1] = i % p;\n        for(int k = 2; k <= 50; k++)\n            pr[i][k] = pr[i][k-1] * i % p;\n    }\n    for(int i = 1; i <= 50; i++)\n        for(int j = 1; j <= dmax; j++)\n            pr[j][i] = (pr[j-1][i] + pr[j][i]) % p;\n    int m = read();\n    int du, dv, dfa, k, ft;\n    long long ans = 0;\n    while(m--) {\n        u = read(); v = read(); k = read();\n        ft = lca(u, v); dfa = d[ft]; du = d[u]; dv = d[v]; \n        ans = (pr[du][k] + pr[dv][k] + p + p - pr[dfa][k] - pr[d[fa[ft][0]] == -1 ? 0 : d[fa[ft][0]]][k]) % p;\n        printf(\"%lld\\n\", ans);\n    }\n    return 0;\n}\n```\n\u4e4b\u524d\u8ddf\u673a\u623f\u4f17\u4eba\u53e3\u7cca\u6253\u8868\u52a0\u901f\uff0c\u7136\u800c\u4e00\u6253\u51fa\u8868\u6765\u5185\u5b58\u5230\u4e86148MBQaQ\u3002  \n\u6b22\u8fce\u4e92\u76f8\u5173\u6ce8(\u7136\u800c\u5728oi\u754c\u849f\u84bb\u7684\u5708\u5f88\u5c0f)\u3002  \n\u6700\u540e\u5b89\u5229\u4e00\u4e0b[\u849f\u84bb\u7684\u6d1b\u8c37\u535a\u5ba2](https://www.luogu.org/blog/oldherd/)",
        "postTime": 1552724813,
        "uid": 88735,
        "name": "\u5bd2\u9e3d\u513f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4427 \u3010[BJOI2018]\u6c42\u548c\u3011"
    }
]