[
    {
        "content": "### \u86af\u8693\r\n#### ***80\u5206***\r\n\u3000\u3000\u9996\u5148\u8fd9\u9053\u9898\u53ef\u4ee5\u7528*\u5408\u5e76\u679c\u5b50*\u7684\u601d\u8def\u505a, \u5408\u5e76\u679c\u5b50\u662f\u627e\u5230\u4e24\u4e2a\u6700\u5c0f\u7684\u5e76\u5408\u5e76, \u800c\u8fd9\u9053\u9898\u662f\u627e\u5230\u6700\u5927\u7684\u62c6\u5206.\u5b9e\u9645\u4e0a\u662f\u5dee\u4e0d\u591a\u7684.\r\n\r\n\u3000\u3000\u5982\u4f55\u5904\u7406\u6bcf\u6b21\u7684\u5c06\u6bcf\u53ea\u86af\u8693\u52a0\u4e00\u5b9a\u957f\u5ea6\u5462?\u6216\u8bb8\u53ef\u4ee5\u8f6c\u53d8\u601d\u8def, \u6bcf\u6b21\u53ea\u6709\u4e24\u53ea\u86af\u8693\u6ca1\u88ab\u52a0\u5176\u4ed6\u7684\u5168\u90e8\u88ab\u52a0\u4e86, \u6839\u636e**\u8fd0\u52a8\u662f\u76f8\u4e92**\u7684, **\u9664\u4e86\u90a3\u88ab\u5207\u6210\u7684\u4e24\u53ea\u86af\u8693**\u5176\u4ed6\u7684\u90fd\u5f80**\u6b63\u65b9\u5411**\u79fb\u52a8\u4e86\u4e00\u4e9b, \u7b49\u4ef7\u4e8e\u90a3\u4e24\u53ea\u5f80**\u8d1f\u65b9\u5411**\u79fb\u52a8\u4e86\u4e00\u4e9b. \u6240\u4ee5\u53ef\u4ee5\u8bb0\u5f55**\u7d2f\u8ba1\u52a0**\u7684\u957f\u5ea6, \u6709\u51e0\u53ea\u6ca1\u88ab\u52a0\u7684\u5c31\u51cf\u53bb\u5c31\u597d\u4e86.\r\n\r\n\u3000\u3000\u5229\u7528*\u5806*\u6216\u8005\u662f**\u4f18\u5148\u961f\u5217**, \u4fdd\u5b58\u6bcf\u53ea\u86af\u8693, \u7136\u540e\u6bcf\u6b21\u5207\u65ad\u5c31\u5f39\u51fa\u5806\u9876\u5143\u7d20(*\u86af\u8693*)\u62c6\u6210\u4e24\u53ea\u540e\u653e\u5165\u5806.\u8fd9\u6837\u505a\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u6982\u662f$O(m\\log_2 n)$.\u6839\u636e\u4e00\u4e9b**\u5c0f\u7ec6\u8282\u7684\u5904\u7406**\u5f53\u7136\u6709\u5feb\u6709\u6162.\u6211\u524d\u524d\u540e\u540e\u6539\u4e86\u4e0d\u5c11\u5c0f\u7ec6\u8282\u5927\u6982\u662f\u4ea4\u4e86\u4e03\u6b21.\u8fd9\u4e48\u505a\u5927\u6982\u5c31\u662f\u5f97\u5230**80-85**\u5206\u4e86.\r\n\r\n|\u6b21\u6570|\u5f97\u5206|\u539f\u56e0|\r\n|:--:|:--:|:--:|\r\n|4|80|\u7528\u961f\u5217\u8bb0\u5f55\u6bcf\u6b21\u5207\u7684\u86af\u8693;\u7528\u6570\u7ec4\u8bb0\u5f55|\r\n|2|85|\u76f4\u63a5\u8f93\u51fa\u88ab\u5207\u7684\u86af\u8693|\r\n|1|75|O2|\r\n\r\n#### ***100\u5206***\r\n\u3000\u3000\u5173\u952e\u70b9: \u53d1\u73b0\u6b64\u9898\u4e2d\u9690\u542b\u7684**\u5355\u8c03\u6027**.\r\n\r\n\u3000\u3000\u53d1\u73b0**\u5148\u88ab\u5207\u6389**\u7684\u86af\u8693\u5206\u6210\u7684\u86af\u8693\u4e00\u5b9a\u6bd4**\u540e\u5207\u6389**\u7684\u86af\u8693\u5206\u6210\u7684\u86af\u8693\u5927.\r\n\u3000\u3000\u5047\u8bbe\u8fd9\u4e24\u53ea\u86af\u8693\u5206\u522b\u4e3a$a,b$,\u5176\u4e2d$a>b$.\u90a3\u4e48\u5b83\u88ab\u5207\u6210$a_1,a_2$.\u3000t\u79d2\u540e, $b$\u88ab\u5207\u6210\u4e86$b_1,b_2$.\u6b64\u65f6$a_1,a_2$\u7684\u957f\u5ea6\u4e3a$l_{a_1}+t=pl_{a}+t,l_{a_2}+t=(1-p)l_a+t$.\u800c$b_1,b_2$\u7684\u957f\u5ea6\u5374\u4e3a$p(l_b+t),(1-p)(1_b+t)$, \u5bb9\u6613\u770b\u51fa$l_{a_1}>l_{b_1},l_{a_2}>l_{b_2}$.\u4e5f\u5c31\u662f\u8bf4**\u6839\u672c\u4e0d\u9700\u8981\u7528\u4e00\u4e2a\u5806\u6765\u7ef4\u62a4, \u5b83\u672c\u6765\u5c31\u5177\u6709\u4e00\u5b9a\u5355\u8c03\u6027**.\r\n\r\n\u3000\u3000\u90a3\u4e48\u5c31\u662f\u8bf4\u5982\u679c\u86af\u8693$a_1,a_2,\\cdots,$\u6ee1\u8db3$a_1>a_2>\\cdots$,\u90a3\u4e48\u4ee5\u6b64\u5206\u6210\u4e24\u53ea$a_{11},a_{12},a_{21},a_{22},\\cdots $.\u90a3\u4e48$a_{12}>a_{22}>\\cdots,a_{11}>a_{21}>\\cdots$\r\n\r\n\u3000\u3000\u90a3\u4e48\u5c31\u53ef\u4ee5\u5c06\u8fd9\u4e24\u5806**\u4f9d\u6b21\u5b58\u50a8**, \u52a0\u4e0a\u8fd8\u6ca1\u88ab\u5207\u8fc7\u7684\u86af\u8693.\u6bcf\u6b21\u8981\u5207\u65f6\u5728\u8fd9\u4e09\u5806\u91cc\u9762\u9009\u62e9\u6700\u5927\u7684, \u5207\u5b8c\u518d\u4f9d\u6b21\u653e\u56de\u53bb.\r\n\u3000\u3000\u6240\u4ee5\u8fd9\u4e48\u505a\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(m)$.\u518d\u4f18\u5316\u4e00\u4e0b\u7ec6\u8282\u57fa\u672c\u4e0a\u5c31\u6ca1\u95ee\u9898\u4e86.\r\n\r\n \u3000\u3000***\u7ed3\u8bba***: \u5584\u4e8e\u53d1\u73b0\u9898\u76ee\u4e2d\u9690\u542b\u7684\u5355\u8c03\u6027.\r\n\r\n\u3000\u3000Tip:**\u6709\u4e9b\u7ec6\u8282\u9700\u8981\u4ed4\u7ec6\u8003\u8651\u4e0d\u7136\u4f1a\u5f88\u60e8**\r\n\r\n#### Code\r\n##### 80\u5206\r\n```c++\r\n#include<iostream>\r\n#include<cstdio>\r\n#include<queue>\r\n#include<cmath>\r\nusing namespace std;\r\n\r\npriority_queue<int>ans;//\u4f18\u5148\u961f\u5217\r\nint n,m,q,u,v,t;\r\nint sigma;//\u7d2f\u8ba1\u52a0\u7684\r\ndouble p;\r\nint tot;\r\n\r\nint main(){\r\n    scanf(\"%d%d%d%d%d%d\",&n,&m,&q,&u,&v,&t);\r\n    p=(double)u/v;int tmp;\r\n    for(int i=1;i<=n;++i){\r\n        scanf(\"%d\",&tmp);\r\n        ans.push(tmp);\r\n    }\r\n    for(int i=1;i<=m;++i){\r\n        int top=ans.top()+sigma;//\u88ab\u5207\u7684\u86af\u8693\u7684\u957f\u5ea6\r\n        ans.pop();\r\n        int a1=floor(p*(double)top),a2=top-a1;//\u88ab\u5207\u6210\u7684\u4e24\u53ea\u7684\u957f\u5ea6\r\n        a1-=sigma,a2-=sigma;\r\n        a1-=q,a2-=q;//\u9700\u8981\u51cf\u53bb\u5b83\u4eec\u4fe9\u6ca1\u52a0\u7684\r\n        ans.push(a1),ans.push(a2);//\u653e\u56de\u961f\u5217\r\n        if(i%t==0)printf(\"%d \",top);//\u8981\u6c42\u8f93\u51fa\u7684\u7b2c\u4e00\u884c\r\n        sigma+=q;//\u7d2f\u52a0\r\n    }\r\n    putchar('\\n');//\u6362\u884c\r\n    for(int i=1;ans.size();++i){\r\n        if(i%t==0)printf(\"%d \",ans.top()+sigma);//\u8981\u6c42\u8f93\u51fa\u7684\u7b2c\u4e8c\u884c\r\n        ans.pop();\r\n    }\r\n    return 0;\r\n}\r\n```\r\n##### 100\u5206\r\n```c++\r\n#include<algorithm>\r\n#include<iostream>\r\n#include<cstdio>\r\n#include<queue>\r\n#include<cmath>\r\n#define N 7000005\r\nusing namespace std;\r\n\r\nbool cmp(const int &a,const int &b){\r\n    return a>b;\r\n}\r\n\r\npriority_queue<int>ans;\r\nint cut1[N],now[N],cut2[N];\r\nint n,m,q,u,v,t;\r\nint sigma;\r\ndouble p;\r\nint h,h1,h2;\r\nint t0,t1,t2;\r\n\r\nint main(){\r\n    scanf(\"%d%d%d%d%d%d\",&n,&m,&q,&u,&v,&t);\r\n    p=(double)u/v;int tmp;\r\n    for(t0=1;t0<=n;++t0)\r\n        scanf(\"%d\",&now[t0]);\r\n    --t0;t1=t2=0;h=h1=h2=1;\r\n    sort(now+1,now+t0+1,cmp);//\u5bf9\u6240\u6709\u86af\u8693\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\r\n    int top;\r\n    for(int i=1;i<=m;++i){\r\n        if(h>t0){if(cut1[h1]>cut2[h2])top=cut1[h1++];else top=cut2[h2++];}\r\n        else if(now[h]>=cut1[h1]&&now[h]>=cut2[h2])top=now[h],++h;\r\n        else if(cut1[h1]>=cut2[h2]&&now[h]<=cut1[h1])top=cut1[h1],++h1;\r\n        else top=cut2[h2],++h2;\r\n        ;;;//\u4e0a\u8ff0\u56db\u884c\u90fd\u662f\u4e3a\u4e86\u627e\u5230\u5e94\u8be5\u88ab\u5207\u7684\u86af\u8693,\u5199\u7684\u9ebb\u70e6\u7ec6\u8282\u5f88\u591a\r\n        top+=sigma;\r\n        int a1=floor(p*(double)top),a2=top-a1;\r\n        sigma+=q;\r\n        a1-=sigma,a2-=sigma;\r\n        cut1[++t1]=a1,cut2[++t2]=a2;\r\n        if(i%t==0)printf(\"%d \",top);\r\n    }\r\n    putchar('\\n');\r\n    for(int i=h;i<=t0;++i)ans.push(now[i]);\r\n    for(int i=h1;i<=t1;++i)ans.push(cut1[i]);\r\n    for(int i=h2;i<=t2;++i)ans.push(cut2[i]);\r\n    for(int i=1;ans.size();++i){\r\n        if(i%t==0)printf(\"%d \",ans.top()+sigma);\r\n        ans.pop();\r\n    }\r\n    return 0;\r\n}\r\n```",
        "postTime": 1525143993,
        "uid": 39067,
        "name": "aiyougege",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2827 \u3010\u86af\u8693\u3011"
    },
    {
        "content": "\u601d\u8def:\n\n\u6211\u4eec\u53ef\u4ee5\u60f3\u4e00\u4e0b\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u79d2\u9664\u4e86\u88ab\u5207\u7684\u54ea\u4e00\u4e2a\u6240\u6709\u7684\u86af\u8693\u90fd\u589e\u957fQ\u7c73\uff0c\u6211\u4eec\u6765\u7ef4\u62a43\u4e2a\u961f\u5217\uff0c\u961f\u52171\u8868\u793a\u6700\u5f00\u59cb\u7684\u86af\u8693\uff0c\u961f\u52172\u8868\u793a\u6bcf\u4e00\u6b21\u88ab\u5207\u7684\u86af\u8693\u88ab\u5206\u5f00\u7684\u8f83\u957f\u7684\u90a3\u4e00\u90e8\u5206\uff0c\u961f\u52173\u8868\u793a\u6bcf\u4e00\u6b21\u88ab\u5207\u7684\u86af\u8693\u88ab\u5206\u5f00\u7684\u8f83\u77ed\u7684\u90a3\u4e00\u90e8\u5206\u3002\n\n\u6211\u4eec\u5148\u628a\u539f\u5e8f\u5217\u6392\u5e8f\uff0c\u56e0\u4e3a\u4e0d\u7ba1\u600e\u4e48\u5207\uff0c\u5148\u88ab\u5207\u7684\u86af\u8693\u5206\u6210\u7684\u4e24\u90e8\u5206\u4e00\u5b9a\u6bd4\u540e\u5207\u7684\u86af\u8693\u5206\u6210\u7684\u4e24\u90e8\u5206\u5927(\u8f83\u5927\u7684\u90e8\u5206\u548c\u8f83\u5927\u7684\u90e8\u5206\u6bd4\u8f83\uff0c\u8f83\u5c0f\u7684\u90e8\u5206\u548c\u8f83\u5c0f\u7684\u90e8\u5206\u6bd4\u8f83)\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7701\u53bb\u6bcf\u4e00\u79d2\u589e\u52a0\u6bcf\u53ea\u86af\u8693\u7684\u957f\u5ea6\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u8f6c\u6362\u6210\u5728\u67e5\u8be2\u780d\u90a3\u53ea\u86af\u8693\u65f6\uff0c\u628a\u589e\u52a0\u7684\u957f\u5ea6\u7b97\u5230\u86af\u8693\u7684\u603b\u957f\u5ea6\u4e0a\u3002\n\n\u5bfb\u627e\u6bcf\u6b21\u780d\u54ea\u4e00\u53ea\u86af\u8693\u5c31\u662f\u5728\u961f\u52171\u3001\u961f\u52172\u3001\u961f\u52173\u7684\u961f\u5934\u627e\u4e00\u4e2a\u7b97\u4e0a\u589e\u52a0\u7684\u957f\u5ea6\u6700\u5927\u7684\u86af\u8693\uff0c\u4e4b\u540e\u628a\u4ed6\u51fa\u961f\uff0c\u5207\u5f00\u7684\u4e24\u90e8\u5206\u5206\u522b\u8fdb\u5165\u961f2\u3001\u961f3\u3002\n\n\u5bf9\u4e8e\u589e\u91cf\u7684\u8ba1\u7b97\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u86af\u8693\u5728\u961f\u5217\u4e2d\u7684\u6807\u53f7\uff0c\u56e0\u4e3a\u961f\u52171\u4e2d\u7684\u86af\u8693\u76f4\u5230\u88ab\u5207\u662f\u4e00\u76f4\u5904\u4e8e\u4e00\u79cd\u589e\u957f\u72b6\u6001\uff0c\u6240\u4ee5\u76f4\u63a5\u52a0\u4e0a`(\u5f53\u524d\u65f6\u95f4-1) \\* Q`\u5c31\u53ef\u4ee5\u4e86\uff0c\u800c\u5bf9\u4e8e\u961f\u52172\u548c\u961f\u52173\u7684\u86af\u8693\uff0c\u4ed6\u7684\u589e\u957f\u662f\u4ece\u88ab\u5207\u6389\u90a3\u4e00\u523b\u7684\u4e0b\u4e00\u79d2\u5f00\u59cb\u7684\uff0c\u6240\u4ee5\u4ed6\u7684\u589e\u957f\u91cf\u5219\u662f`(\u5f53\u524d\u65f6\u95f4-1-\u88ab\u5207\u5272\u7684\u65f6\u95f4)\\*Q`\u3002\n\n\u7edf\u8ba1\u7b54\u6848\u7684\u65f6\u5019\u628a\u4e09\u4e2a\u961f\u5217\u5408\u5e76\uff0c\u6392\u5e8f\u8f93\u51fa\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include <map>\n#include <set>\n#include <queue>\n#include <stack>\n#include <cstdio>\n#include <iostream>\n#include <cstring>\n#include <cmath>\n#include <cstdlib>\n#include <algorithm>\nusing namespace std;\nconst int MAXN = 1e7;\ninline int read(){\n    int w = 1, data = 0; char ch = 0;\n    while(ch != '-' && (ch < '0' || ch > '9')) ch = getchar();\n    if(ch == '-') w = -1, ch = getchar();\n    while(ch >= '0' && ch <= '9') data = data * 10 + ch - '0', ch = getchar();\n    return w * data;\n}\nint n, Q, m, T, h[10], t[10], tmp; \ndouble u, v, p;\nint q[4][MAXN], ans[MAXN];\ninline void find(int x){\n    int num = 0, sum = 0;\n    for(int i = 1; i <= 3; i++){\n        if(i == 1 && q[i][h[i]] + x * Q > sum && h[i] < t[i]) num = i, sum = q[i][h[i]] + x * Q;\n        else if(q[i][h[i]] + (x-h[i])*Q > sum && h[i] < t[i]) num = i, sum = q[i][h[i]] + (x-h[i])*Q;\n    }\n    ans[x+1] = sum; tmp = sum; q[num][h[num]++];\n}\nint lxz[MAXN];\nvoid Print_Ans(){\n    int num = 0;\n\n    for(int i = T, tot = 1; i <= m && tot <= m/T; i += T, tot++)\n        printf(\"%d \",ans[i]);\n    printf(\"\\n\");    \n    \n    for(int i = 1; i <= 3; i++){\n        for(int j = h[i]; j < t[i]; j++){\n            if(i == 1 && h[i] < t[i]) lxz[++num] = q[i][j] + (m) * Q;\n            else if(h[i] < t[i]) lxz[++num] = q[i][j] + (m-j)*Q;\n        }\n    }\n    sort(lxz+1, lxz+num+1, greater<int>());\n    for(int i = T, tot = 1; i <= num && tot <= (n+m)/T; i += T, tot++)\n        printf(\"%d \",lxz[i]);\n}\nint main(){\n    scanf(\"%d%d%d%lf%lf%d\", &n, &m, &Q, &u, &v, &T);\n    p = u / v; \n    for(int i = 1; i <= 3; i++) h[i] = t[i] = 1; \n    for(int i = 1; i <= n; i++) q[1][i] = read(), t[1]++;\n\n    sort(q[1]+h[1], q[1]+t[1], greater<int>());\n\n    for(int i = 1; i <= m; i++){\n        find(i-1);\n        double a = floor(tmp * p), b = tmp - a;\n        if(a < b) swap(a, b);\n        q[2][t[2]++] = a; q[3][t[3]++] = b;\n    }\n\n    Print_Ans();\n    return 0;\n}\n```",
        "postTime": 1510190881,
        "uid": 30329,
        "name": "lxzy_Zby",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2827 \u3010\u86af\u8693\u3011"
    },
    {
        "content": "~~\u53d1\u73b0\u6ca1\u6709\u7528\u9ed1\u4e66\u505a\u6cd5\u7684\uff0c\u6211\u5c31\u4e0d\u8981\u8138\u7684\u8bb2\u4e00\u4e0b\u5427~~\n# \u9ed1\u4e66\u505a\u6cd5\u8be6\u89e3\n\n\n------------\n\u5173\u4e8e\u961f\u5217\u4e09\u5144\u5f1f\u5bf9\u86af\u8693\u7684~~\u5206\u8d43~~\n#### \u6211\u91cd\u70b9\u8bb2\u4e00\u4e0b\u6ee1\u5206\u7b97\u6cd5\n\u6839\u636e**\u8f93\u5165\u8f93\u51fa**\u4ee5\u53ca**n\u3001m\u7684\u6570\u636e\u8303\u56f4**\u53ef\u4ee5\u77e5\u9053\uff0c\u9700\u8981\u5728\u6bcf\u79d2\u8fdb\u884c\u5207\u5272\u65f6\u627e\u51fa\u5f53\u524d\u6700\u5927\u503c\uff0c\u8fd9\u65f6\u4f60\u5c31\u4f1a\u53d1\u73b0**\u679a\u4e3e**\u548c**\u5806\u3001\u5355\u8c03\u961f\u5217**\u7b49\u67e5\u627e/\u7ef4\u62a4\u6700\u5927\u503c\u7684\u65b9\u6cd5\u662f\u8d85\u65f6\u7684\u3002**\u8fd9\u65f6\u5c31\u8bde\u751f\u4e86\u961f\u5217\u4e09\u5144\u5f1fq1\u3001q2**\u548c**q3**\uff0c\u5982\u679cq1\u5f00\u59cb\u65f6\u5355\u8c03\u9012\u51cf\uff0c\u6bcf\u6b21\u53d6\u51fa**\u6700\u5927\u503c**\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a\u86af\u8693\u5206\u5f00\uff0c\u628a\u5176\u4e2d**\u5927\u7684\u4e00\u90e8\u5206\u538b\u5165q2\uff0c\u5c0f\u7684\u4e00\u90e8\u5206\u538b\u5165q3**\uff0c\u663e\u7136\uff0c\u6b64\u65f6**q1\u3001q2\u548cq3\u90fd\u662f\u5355\u8c03\u9012\u51cf**\u7684\uff08\u6240\u4ee5\u6bcf\u6b21\u7684\u53d6\u51fa\u64cd\u4f5c\u5c31\u53ef\u4ee5\u662f\uff1a**\u5728q1\u3001q2\u3001q3\u7684\u961f\u9996\u53d6\u51fa\u6700\u5927\u7684\u4e00\u4e2a**\uff09\u3002\n#### \u8fd9\u65f6\u4f60\u4f1a\u4ea7\u751f\u4e00\u4e2a\u7591\u95ee\uff1a\u600e\u6837\u8ba9\u86af\u8693\u751f\u957f\u5462\uff1f\n\u6211\u4eec\u53d1\u73b0\uff0c\u66b4\u529b\u5c06\u6bcf\u6b21\u6bcf\u53ea\u86af\u8693\u7684\u957f\u5ea6\u52a0\u4e0aq\u662f\u4e0d\u73b0\u5b9e\u7684\uff0c\u6240\u4ee5\u6211\u5b9a\u4e49\u4e86\u4e00\u4e2ay\uff0c\u7528\u6765\u8868\u793a\u86af\u8693**\u589e\u957f\u7684\u957f\u5ea6**\uff0cy\u521d\u59cb\u65f6\u4e3a\u96f6\uff0c\u6bcf\u8fc7\u4e00\u79d2\u52a0\u4e0a\u4e00\u4e2aq\u3002**\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u60f3\uff1a**\n#### \u5728\u6bcf\u4e00\u79d2\u521d\uff0c\u6700\u957f\u7684\u86af\u8693\u88ab\u5207\u5f00\uff1b\u5728\u8fd9\u4e00\u79d2\u8fc7\u7a0b\u4e2d\uff0c\u5176\u4ed6\u86af\u8693\u589e\u957f\u4e86q\uff1b\u5728\u8fd9\u4e00\u79d2\u672b\uff0c\u6700\u957f\u7684\u86af\u8693\u88ab\u5207\u6210\u4e24\u534a\uff0c\u5206\u522b\u538b\u5165\u6570\u7ec4\u4e2d\uff1a\n```cpp\nans[i]=getmax()+y;\nint j=ans[i]*u/v,k=ans[i]-j;\ny+=q;\nput(j-y,k-y);\n```\n#### \u4e3a\u4ec0\u4e48\u4f1a\u6709\u4e00\u4e2a\u52a0y\u548c\u4e00\u4e2a\u51cfy\u7684\u64cd\u4f5c\u5462\uff1f\n\u6570\u5b66\u8bc1\u660e\uff1a**\u5982\u679c\u7b2ca\u79d2\uff08\u6b64\u65f6y=(a-1)q\uff09\u521d\u53d6\u51fa\u4e00\u4e2a\u86af\u8693s\uff0c\u90a3\u4e48\u5b83\u7684\u5b9e\u9645\u957f\u5ea6\u662f\uff08s+(a-1)q\uff09,\u5b83\u4f1a\u88ab\u5207\u6210\u4e24\u534as1\u548cs2\u5728\u7b2ca+1\u672b\u88ab\u653e\u56de\u53bb\uff0cs1\u3001s2\u5c31\u662f\u8fd9\u4e24\u6761\u65b0\u86af\u8693\u7684\u521d\u59cb\u957f\u5ea6\uff0c\u800c\u653e\u56de\u53bb\u7684\u662fs1-aq\u548cs2-aq\u3002\u5982\u679c\u5728\u7b2cb+1\u79d2\u521ds1-aq\u88ab\u53d6\u4e86\u51fa\u6765\uff0c\u8fd9\u65f6\u5b83\u4f1a\u52a0\u4e0abq\u6210\u4e3as1-aq+bq\u3002\u800c\u5728\u7b2ca\u79d2\u672b\u5230\u7b2cb+1\u79d2\u521d\u4e2d\u95f4\u6709b-a\u79d2\uff0cs1\u7684\u957f\u5ea6\u5e94\u8be5\u662f\u521d\u59cb\u957f\u5ea6s1\u52a0\u4e0a\u589e\u52a0\u7684\u957f\u5ea6(b-a)q\u5373s1+(b-a)q=s1-aq+bq**\u3002\u7b97\u6cd5\u6210\u7acb\n#### \u4ee5\u4e0a\u6709\u70b9\u7ed5\uff0c\u4f60\u4e5f\u53ef\u4ee5\u611f\u6027\u7684\u7406\u89e3\u4e3a\uff1a\u961f\u5217\u4e2d\u5b58\u50a8\u4e86\u86af\u8693\u7684\u76f8\u5bf9\u957f\u5ea6\uff0c\u9664\u4e86\u88ab\u5207\u7684\u86af\u8693\u90fd\u589e\u957f\u5c31\u76f8\u5f53\u4e8e\u88ab\u5207\u7684\u86af\u8693\u7f29\u77ed\u4e86\uff0c\u6700\u540e\u6c42\u7b54\u6848\u65f6\u518d\u52a0\u4e0a\u589e\u52a0\u7684\u957f\u5ea6\u5c31\u53ef\u4ee5\u4e86\n\u673a\u623f\u91cc\u6709\u5927\u4f6c\u7528\u65f6\u95f4\u6233 ~~\u6211\u4e0d\u4f1aqwq~~\n#### \u6d1b\u8c37\u6570\u636e\u6709\u70b9\u6c34 ~~\u6211\u5728ccf\u7684\u6570\u636e\u4e0a\u662fT\u4e86\u4e24\u4e2a\u70b9\u7684~~\n\u4e0b\u9762\u662f\u6211\u7684\u4ee3\u7801\uff0c\u5c31\u4e0d\u8fc7\u591a\u6ce8\u91ca\u4e86\n```cpp\n#include<queue>\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#define ll long long\nusing namespace std;\nll n,m,q,u,v,t,a[7500000],ans[7500000],s=0,y=0,tot=0;//\u4e00\u5b9a\u8981\u5f00long long \u4e2d\u95f4\u6709\u8fc7\u7a0b\u91cf\u662f\u7206int\u7684\nqueue<ll> q1,q2,q3;\nll getmax(){                              //\u6c42\u4e09\u4e2a\u961f\u5217\u4e2d\u961f\u9996\u5143\u7d20\u7684\u6700\u5927\u503c\n\tint x1=-(1<<30),x2=x1,x3=x1;\n\tif(!q1.empty())x1=q1.front();\n\tif(!q2.empty())x2=q2.front();\n\tif(!q3.empty())x3=q3.front();\n\tif(x1>=x2&&x1>=x3){q1.pop();return x1;}\n\telse if(x2>=x1&&x2>=x3){q2.pop();return x2;}\n\tq3.pop();return x3;\n}\nvoid put(ll x1,ll x2){                    //\u538b\u5165\u4e24\u6761\u65b0\u86af\u8693\n\tif(x1<x2){int z=x1;x1=x2;x2=z;}\n\tq2.push(x1),q3.push(x2);\n\treturn;\n}\nbool cmp(ll x,ll y){\n\treturn x>y;\n}\ninline ll read(){\n\tchar ch=getchar();ll j=0,k=1;\n\twhile(ch<'0'||ch>'9'){if(ch=='-')k=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9')j=j*10+ch-'0',ch=getchar();\n\treturn j*k;\n}\ninline void write(ll x){\n\tif(x<0)putchar('-'),x=-x;\n\tif(x>9)write(x/10);\n\tputchar(x%10+'0');\n\treturn;\n}\nint main(){\n\tn=read(),m=read(),q=read(),u=read(),v=read(),t=read();\n\tfor(ll i=1;i<=n;i++)a[i]=read();\n\tsort(a+1,a+n+1,cmp);\n\tfor(ll i=1;i<=n;i++)q1.push(a[i]);    //\u4fdd\u8bc1q1\u5355\u8c03\u9012\u51cf\n\tfor(ll i=1;i<=m;i++){\n\t\tans[i]=getmax()+y;\n\t\tint j=ans[i]*u/v,k=ans[i]-j;\n\t\ty+=q;\n\t\tput(j-y,k-y);\n\t}\n\twhile(!q1.empty()||!q2.empty()||!q3.empty())a[++tot]=getmax()+y;//\u6700\u540e\u5269\u4e0b\u7684\u86af\u8693\u6309\u964d\u5e8f\u5b58\u50a8\n\tfor(int i=t;i<=m;i+=t)write(ans[i]),putchar(' ');\n\tputchar('\\n');\n\tfor(int i=t;i<=tot;i+=t)write(a[i]),putchar(' ');\n\tputchar('\\n');\n\treturn 0;\n}\n```",
        "postTime": 1540353787,
        "uid": 33615,
        "name": "\u6c42\u8d25",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2827 \u3010\u86af\u8693\u3011"
    },
    {
        "content": "[\u60a8\u53ef\u5728\u6211\u7684\u535a\u5ba2\u4e2d\u67e5\u770b\u672c\u6587\uff0c\u8c22\u8c22\uff01](https://www.cnblogs.com/crab-in-the-northeast/p/luogu-p2827.html)\n\n**\u4e8b\u5b9e\u4e0a\uff0c\u672c\u9898\u7591\u4f3c\u6240\u6709\u9898\u89e3\u548c lyd \u84dd\u4e66\u4e0a\u7684\u8bc1\u660e\u5747\u6709\u8bef\uff0c\u672c\u7bc7\u9898\u89e3\u5c06\u7ed9\u51fa\u4e00\u4e2a\u4e25\u8c28\u7684\u5355\u8c03\u6027\u6b63\u786e\u6027\u8bc1\u660e\u3002**\n\n\u4e00\u773c\u770b\u4e0a\u53bb\u5bb9\u6613\u60f3\u5230 $q = 0$ \u7684 $\\mathcal{O}(m \\log m)$ \u5806\u505a\u6cd5\u3002\n\n$q >0$ \u65f6\uff0c\u66b4\u529b\u7ed9\u96c6\u5408\u4e2d\u7684\u5143\u7d20 $+q$ \u663e\u7136\u662f\u4e0d\u53ef\u53d6\u7684\u3002\u89c2\u5bdf\u5230\u9664\u4e86\u88ab\u5207\u5f00\u7684\u4e24\u4e2a\u5143\u7d20\u4e0d $+q$ \u5176\u4f59\u5747 $+q$\uff0c\u53ef\u4ee5\u7b49\u6548\u5730\u770b\u505a\uff1a\u628a $x$ \u5207\u4e3a $\\lfloor px\\rfloor - q$ \u548c $x - \\lfloor px\\rfloor - q$\uff0c\u7136\u540e\u7ed9\u6240\u6709\u96c6\u5408\u4e2d\u7684\u5143\u7d20 $+q$\u3002\n\n\u90a3\u4e48\u6211\u4eec\u6bcf\u79d2\u53ef\u4ee5\u4e0d\u5b9e\u9645\u7ed9\u6bcf\u4e2a\u5143\u7d20 $+q$\uff0c\u800c\u662f\u8bb0\u5f55\u6574\u4e2a\u96c6\u5408\u901a\u8fc7\u5168\u5c40 $+q$ \u4ea7\u751f\u7684\u504f\u79fb\u91cf\uff0c\u6bcf\u6b21\u901a\u8fc7\u7ed9\u6bcf\u4e2a\u6570\u52a0\u4e0a\u8fd9\u4e2a\u504f\u79fb\u91cf\u5f97\u5230\u5b83\u7684\u771f\u5b9e\u6570\u503c\u3002\u53d1\u73b0\u504f\u79fb\u91cf $t$ \u79d2\u540e\u5c31\u662f $qt$\u3002\u53ef\u4ee5\u7528 $\\mathcal{O}(m \\log m)$ \u8f83\u4e3a\u4f4e\u6548\u7387\u5730\u89e3\u51b3\u672c\u9898\u4e86\uff0c\u603b\u7ed3\u4e00\u4e0b\uff1a\n\n\u5faa\u73af $t$ \u4ece $0$ \u5230 $m - 1$\uff0c\u8868\u793a $[t, t +1]$ \u8fd9\u4e00\u79d2\uff08\u5373\u7b2c $t +1$ \u79d2\uff09\u7684\u64cd\u4f5c\uff1a\n\n- \u53d6\u51fa\u96c6\u5408\u6700\u5927\u503c $x'$\uff0c\u5f97\u5230\u5176\u771f\u5b9e\u503c $x = x' +qt$\uff1b\n- \u5207 $x$ \u4e3a $\\lfloor px\\rfloor$ \u548c $x - \\lfloor px \\rfloor$ \u4e24\u90e8\u5206\uff1b\n- \u5c06 $\\lfloor px\\rfloor - q -  qt$\uff0c$x - \\lfloor px\\rfloor -  q- qt$ \u653e\u56de\u96c6\u5408\uff08$-q$ \u662f\u4e0a\u9762\u7b49\u6548\u7684\u7ed3\u679c\uff0c$-qt$ \u662f\u8981\u628a\u771f\u5b9e\u503c\u6539\u4e3a\u504f\u79fb\u503c\u653e\u56de\u96c6\u5408\uff09\u3002\n\n---\n\n$\\mathcal{O}(m \\log m)$ \u4e0d\u591f\u4f18\u79c0\uff0c\u8003\u8651 $\\mathcal{O}(m)$ \u7684\u505a\u6cd5\uff0c\u6211\u4eec\u8fd8\u662f\u5148\u8003\u8651 $q = 0$\uff0c\u6574\u4e2a\u96c6\u5408\u662f\u9759\u6001\u7684\u6bd4\u8f83\u597d\u60f3\u3002\n\n\u53d1\u73b0\u6211\u4eec\u4ece\u5927\u5230\u5c0f\u53d6 $x$\uff0c\u5207\u5f00\u5f62\u6210\u7684 $\\lfloor px\\rfloor$ \u663e\u7136\u4e5f\u662f\u4ece\u5927\u5230\u5c0f\u7684\uff08\u6b63\u6bd4\u4f8b\u51fd\u6570\u548c $\\lfloor x \\rfloor$ \u5747\u5355\u8c03\u4e0d\u964d\uff09\u3002\u90a3\u4e48 $x - \\lfloor px\\rfloor$ \u5462\uff1f\n\n\u4e25\u683c\u8bc1\u660e\u4e00\u4e0b\u3002\u547d\u9898\uff1a\u5bf9\u4e8e $x_1, x_2 \\in \\mathbb Z, x_1 \\ge x_2, 0< p < 1$\uff0c\u6709 $x_1 - \\lfloor px_1 \\rfloor \\ge x_2 - \\lfloor px_2 \\rfloor$\u3002\n\n\u8bc1\u660e\uff1a$x_1 \\ge x_2 \\land x_1, x_2 \\in \\mathbb Z$\uff0c\u56e0\u6b64 $x_1 - x_2 \\in \\N$\u3002\u53c8\u56e0\u4e3a $0 <p < 1$\uff0c\u6240\u4ee5\uff1a\n$$\n\\begin{aligned}x_1 - x_2  &\\ge p(x_1 - x_2) \\\\ x_1 - x_2 + p x_2 & \\ge px_1 \\\\  \\lfloor px_2 + (x_1 - x_2) \\rfloor & \\ge\\lfloor px_1 \\rfloor \\\\ \\lfloor px_2 \\rfloor + (x_1 - x_2) & \\ge \\lfloor px_1 \\rfloor \\\\ x_1 - \\lfloor px_1 \\rfloor & \\ge x_2 - \\lfloor px_2 \\rfloor  \\end{aligned}\n$$\n\u6ce8\u610f\u8fd9\u91cc\u7684\u8bc1\u660e\u5f88\u5bb9\u6613\u51fa\u73b0\u4f2a\u8bc1\uff0c\u5177\u4f53\u8bf7\u89c1 <https://www.luogu.com.cn/paste/c4jthmhz>\uff0c\u8fd9\u4e5f\u662f\u51e0\u4e4e\u6240\u6709\u9898\u89e3\u9519\u8bef\u7684\u5730\u65b9\uff0c\u8fd9\u91cc\u4e0d\u5c55\u5f00\u4e86\u3002\n\n\u56e0\u6b64\u6211\u4eec\u8003\u8651\u7ef4\u62a4 A\uff0cB\uff0cC \u4e09\u4e2a\u961f\u5217\uff0c\u521d\u59cb\u65f6\u961f\u5217 A \u4ece\u5927\uff08\u961f\u5934\uff09\u5230\u5c0f\uff08\u961f\u5c3e\uff09\u4fdd\u5b58\u539f\u59cb $n$ \u4e2a\u6570\u5b57\uff0cB \u548c C \u4e3a\u7a7a\u3002\u5176\u4e2d B \u4fdd\u5b58\u6bcf\u4e00\u79d2\u5207\u5f00\u5f62\u6210\u7684 $\\lfloor px\\rfloor$\uff0cC \u4fdd\u5b58\u6bcf\u4e00\u79d2\u5207\u5f00\u5f62\u6210\u7684 $x - \\lfloor px\\rfloor$\uff0c\u5177\u4f53\u4fdd\u5b58\u65b9\u6cd5\u5c31\u662f\u76f4\u63a5\u63a8\u5165 B \u6216 C \u7684\u961f\u5c3e\uff0c\u6839\u636e\u521a\u521a\u7684\u7ed3\u8bba\uff0cB \u548c C \u5c06\u59cb\u7ec8\u6ee1\u8db3\u5355\u8c03\u6027\uff0c\u961f\u5934\u5927\u961f\u5c3e\u5c0f\u3002\u6240\u4ee5\u6bcf\u6b21\u7684\u6700\u5927\u503c\u53ea\u6709\u53ef\u80fd\u662f A\uff0cB\uff0cC \u4e09\u4e2a\u961f\u5217\u4e2d\u67d0\u4e2a\u961f\u5934\uff0c\u53d6\u4e09\u4e2a\u961f\u5934\u4e2d\u7684\u6700\u5927\u503c\uff0c\u5207\u5f00\u4e4b\u540e\u5206\u522b\u653e\u5165 B \u548c C \u5373\u53ef\u3002\n\n\u8003\u8651 $q \\ge 0$\uff0c\u4e0a\u8ff0\u7ed3\u8bba\u662f\u5426\u4ecd\u6210\u7acb\uff1f\n\n\u6211\u4eec\u5047\u8bbe\u67d0\u4e00\u79d2\uff0c\u6211\u4eec\u5207\u5f00\u4e86\u4e00\u4e2a\u6570 $x_1$\uff0c\u4e0b\u4e00\u79d2\uff0c\u6211\u4eec\u5207\u5f00\u4e86\u4e00\u4e2a\u6570 $x_2 + q$\u3002$x_2 + q$ \u5728\u4e0a\u4e00\u79d2\u65f6\u4e3a $x_2$\uff0c\u56e0\u6b64 $x_1 \\ge x_2$\u3002\u6211\u4eec\u7684\u8bc1\u660e\u76ee\u6807\u662f $\\lfloor px_1\\rfloor+ q \\ge \\lfloor p(x_2 + q)\\rfloor$ \u548c $x_1 - \\lfloor px_1\\rfloor+ q \\ge x_2 + q - \\lfloor p(x_2 + q)\\rfloor$\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e00\u6761\uff1a$\\lfloor px_1\\rfloor+ q = \\lfloor px_1 + q\\rfloor \\ge \\lfloor px_2 + pq\\rfloor = \\lfloor p(x_2 + q)\\rfloor$\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u6761\uff1a$x_1 - \\lfloor px_1\\rfloor+ q \\ge x_2 +q - \\lfloor px_2\\rfloor \\ge  x_2 + q - \\lfloor p(x_2 +q) \\rfloor$\u3002\n\n\u56e0\u6b64\u5728\u4e0a\u8ff0\u505a\u6cd5\u7684\u57fa\u7840\u4e0a\uff0c\u914d\u5408\u4e00\u4e0b $qt$ \u7684\u504f\u79fb\u91cf\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(m)$\u3002\n\n```cpp\n#include <bits/stdc++.h>\ninline int read() {\n    int x = 0;\n    bool f = true;\n    char ch = getchar();\n    for (; !isdigit(ch); ch = getchar())\n        if (ch == '-')\n            f = false;\n    for (; isdigit(ch); ch = getchar())\n        x = (x << 1) + (x << 3) + ch - '0';\n    return f ? x : (~(x - 1));\n}\n\nconst int maxn = (int)1e5 + 5;\nconst int mininf = 0xc0c0c0c0;\nint a[maxn];\n\nstd :: queue <int> qw[4];\ntypedef std :: pair <int, int> pii;\n\nint main() {\n    int n = read(), m = read(), q = read(), u = read(), v = read(), t = read();\n    for (int i = 1; i <= n; ++i)\n        a[i] = read();\n    std :: sort(a + 1, a + n + 1, std :: greater <int> ());\n    for (int i = 1; i <= n; ++i)\n        qw[1].push(a[i]);\n\n    for (int i = 0; i < m; ++i) {\n        pii p = std :: max({std :: make_pair(qw[1].empty() ? mininf : qw[1].front(), 1),\n                            std :: make_pair(qw[2].empty() ? mininf : qw[2].front(), 2),\n                            std :: make_pair(qw[3].empty() ? mininf : qw[3].front(), 3)});\n        int x = p.first + q * i, j = p.second;\n        qw[j].pop();\n        \n        int b = 1ll * x * u / v, c = x - b;\n        qw[2].push(b - q - q * i);\n        qw[3].push(c - q - q * i);\n\n        if (i % t == t - 1)\n            printf(\"%d \", x);\n    }\n\n    puts(\"\");\n\n    for (int i = 1; i <= n + m; ++i) {\n        pii p = std :: max({std :: make_pair(qw[1].empty() ? mininf : qw[1].front(), 1),\n                            std :: make_pair(qw[2].empty() ? mininf : qw[2].front(), 2),\n                            std :: make_pair(qw[3].empty() ? mininf : qw[3].front(), 3)});\n        int x = p.first, j = p.second;\n        qw[j].pop();\n\n        if (i % t == 0)\n            printf(\"%d \", x + q * m);\n    }\n\n    puts(\"\");\n    return 0;\n}\n```\n\n\u5982\u679c\u89c9\u5f97\u672c\u7bc7\u9898\u89e3\u5199\u5f97\u597d\uff0c\u8bf7\u4e0d\u8981\u5fd8\u8bb0\u70b9\u8d5e\uff0c\u8ba9\u8fd9\u7bc7\u5177\u6709\u4e25\u8c28\u7684\u6b63\u786e\u6027\u8bc1\u660e\u7684\u9898\u89e3\u66f4\u591a\u51cf\u5c11\u5bf9\u540e\u4eba\u7684\u8bef\u5bfc\uff0c\u8c22\u8c22\uff01",
        "postTime": 1668359557,
        "uid": 120868,
        "name": "dbxxx",
        "ccfLevel": 6,
        "title": "P2827"
    },
    {
        "content": "# [P2827\u3010\u86af\u8693\u3011](https://www.luogu.org/problemnew/show/P2827)\n## \u9898\u76ee\u5927\u610f\uff1a\n- \u4e00\u5171\u6709n\u53ea\u86af\u8693\uff0c\u6bcf\u53ea\u86af\u8693\u6709\u4e00\u4e2a\u957f\u5ea6\uff0c\u5e76\u4e14\u86af\u8693\u4f1a\u6309\u6bcf\u5e74q\u5398\u7c73\u7684\u901f\u5ea6\u589e\u957f\u3002\u73b0\u5728\u6bcf\u5e74\u9009\u62e9\u4e00\u53ea\u6700\u957f\u7684\u86af\u8693\uff0c\u5c06\u5176\u6309p\u7684\u6bd4\u4f8b\u5207\u6210\u4e24\u534a\uff0c\u88ab\u5207\u7684\u7684\u86af\u8693\u8fd9\u4e00\u5e74\u4e0d\u80fd\u589e\u957f\uff0c\u95ee\u6bcf\u5e74\u88ab\u5207\u7684\u86af\u8693\u7684\u957f\u5ea6\u548cm\u5e74\u540e\u6240\u6709\u86af\u8693\u7684\u957f\u5ea6\uff08\u636e\u9898\u610f\u53ea\u9700\u8f93\u51fa\u90e8\u5206\u7ed3\u679c\uff09\n\n## \u9898\u76ee\u5206\u6790\uff1a\n- \u770b\u5230\u8fd9\u9898\u9996\u5148\u60f3\u5230\u7684\u662f\u4f7f\u7528\u5806\u6765\u505a\uff08\u56e0\u4e3a\uff0c\u5207\u86af\u8693\u7b26\u5408\u5806\u7684\u67e5\u8be2\u6781\u503c\u3001\u63d2\u5165\u548c\u5220\u9664\uff09\u3002\u4f46\u8003\u8651\u5230\u6570\u636e\u7684\u8303\u56f4\uff081<=n<=10^5,0<=m<=7**10^6\uff09\uff0c\u7531\u4e8e\u4f7f\u7528\u5806\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(m*logn)\uff0c\u5176\u7ed3\u679c\u5fc5\u7136\u4f1a\u5bfc\u81f4\u8d85\u65f6\uff0c\u6240\u4ee5\u53ea\u6709\u53e6\u8f9f\u8e4a\u5f84\u3002\n\n  \n- \u518d\u4ed4\u7ec6\u89c2\u5bdf\uff0c\u53d1\u73b0\u6bcf\u5e74\u5207\u6700\u957f\u7684\u4e00\u53ea\u86af\u8693\uff0c\u8bf4\u660e\u5207\u8fc7\u7684\u86af\u8693\u957f\u5ea6\u5177\u6709\u5355\u8c03\u6027\uff0c\u5373\u5148\u5207\u7684\u86af\u8693\u7684\u5de6\u6bb5\u4e00\u5b9a\u5927\u4e8e\u7b49\u4e8e\u540e\u5207\u86af\u8693\u7684\u5de6\u6bb5\uff0c\u5148\u5207\u86af\u8693\u7684\u53f3\u6bb5\u4e00\u5b9a\u5927\u4e8e\u7b49\u4e8e\u540e\u5207\u86af\u8693\u7684\u53f3\u6bb5\u3002  \n### \u4ee5\u4e0b\u4e3a\u8bc1\u660e\u8fc7\u7a0b\uff1a\u4e3a\u65b9\u4fbf\uff0c\u8bbe\u4e24\u53ea\u86af\u8693\u957f\u5ea6\u4e3aa\uff0cb\uff0c\u5207\u540e\u7684\u957f\u5ea6\u5206\u522b\u662fa1,a2,b1,b2.   \n- a>=b\n- \u6240\u4ee5 a*p>=b*p,a-ap>=b-bp\n- \u56e0\u4e3a\u5207\u8fd9\u4e24\u53ea\u86af\u8693\u7684\u65f6\u5019\u8fd9\u4e24\u53ea\u86af\u8693\u90fd\u5c11\u589e\u957f\u4e86q\u5398\u7c73\n- \u6240\u4ee5\u53ef\u8bc1a1>=b1,a2>=b2\n### \u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u8fd9\u9898\u53ef\u4ee5\u4f7f\u7528\u666e\u901a\u961f\u5217\u6765\u505a\uff0c\u4f7f\u590d\u6742\u5ea6\u964d\u81f3O(m)\n- \u4f7f\u75283\u4e2a\u961f\u5217\u5206\u522b\u4fdd\u5b58\u6ca1\u88ab\u5207\u8fc7\u7684\u86af\u8693\uff0c\u88ab\u5207\u8fc7\u7684\u86af\u8693\u5de6\u6bb5\uff0c\u548c\u88ab\u5207\u8fc7\u7684\u86af\u8693\u53f3\u6bb5\n#### - \u6ce8\u610f\u56e0\u4e3a\u6700\u5f00\u59cb\u7ed9\u7684\u86af\u8693\u6570\u636e\u5e76\u4e0d\u662f\u6309\u7167\u9012\u51cf\u987a\u5e8f\uff0c\u6240\u4ee5\u53ef\u4ee5\u9009\u62e9\u63d0\u524d\u6392\u5e8f\u6216\u8005\u7b2c\u4e00\u4e2a\u961f\u5217\u4f7f\u7528\u4f18\u5148\u961f\u5217\n- \u6bcf\u6b21\u53d6\u51fa3\u4e2a\u961f\u5217\u4e2d\u6700\u957f\u7684\u4e00\u53ea\u86af\u8693\uff0c\u5c06\u5176\u5207\u65ad\u90fd\u5206\u522b\u653e\u5165\u540e\u4e24\u4e2a\u6570\u7ec4\uff0c\u4f9d\u6b64\u7c7b\u63a8\u5faa\u73afm\u6b21\u5373\u53ef\u6c42\u51fa\u7ed3\u679c\n- \u8fd8\u9700\u8981\u8003\u8651\u86af\u8693\u7684\u589e\u957f\u957f\u5ea6\u95ee\u9898\uff0c\u7531\u4e8e\u6bcf\u6b21\u9664\u4e86\u88ab\u5207\u7684\u86af\u8693\uff0c\u5176\u4ed6\u6240\u6709\u7684\u86af\u8693\u90fd\u5728\u589e\u957f\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u518d\u4ece\u961f\u5217\u4e2d\u53d6\u5143\u7d20\u7684\u65f6\u5019\u52a0\u4e0a\uff08i-1\uff09*q\uff0c\u653e\u56de\u65f6\u51cf\u53bbi*q\u7684\u957f\u5ea6\uff08**\u56e0\u4e3a\u88ab\u5207\u7684\u86af\u8693\u8fd9\u5e74\u4e0d\u589e\u957f\uff0c\u6240\u4ee5\u591a\u51cfq\u5398\u7c73\uff0c\u5177\u4f53\u5b9e\u73b0\u53c2\u89c1\u7a0b\u5e8f**\uff09\n## \u4ee5\u4e0b\u4e3a\u4ee3\u7801\u90e8\u5206\uff0c\u9644\u89e3\u6790\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nqueue<ll>a;queue<ll>b;queue<ll>c;//\u7531\u4e8e\u63d0\u524d\u6392\u5e8f\uff0c\u6240\u4ee5\u76f4\u63a5\u4f7f\u7528\u961f\u5217\nbool cmp(ll x,ll y){return x>y;}//\u6392\u5e8f\u6bd4\u8f83\u51fd\u6570\nint main()\n{\n    ll n,m,q,u,v,t,x,y;         //\u53d8\u91cf\uff0c\u4fdd\u9669\u8d77\u89c1\u5168\u90e8\u5f00long long\n    scanf(\"%lld%lld%lld%lld%lld%lld\",&n,&m,&q,&u,&v,&t);\n    ll ne[100005];               //\u9884\u5904\u7406\u517c\u6392\u5e8f\u6570\u7ec4\n    for(ll i=1;i<=n;i++)\n      {\n      \tscanf(\"%lld\",&ne[i]);    //\u8f93\u5165\n\t  }\n\tsort(ne+1,ne+n+1,cmp);      //\u6392\u5e8f\n\tfor(ll i=1;i<=n;i++)\n\t  a.push(ne[i]);             //\u5c06\u6392\u5e8f\u7ed3\u679c\u5168\u90e8\u5982\u961f\n\tfor(int i=1;i<=m;i++){\n\t\tll maxn=-2147483647,f;   //-INF\n\t\tif(!a.empty())if(a.front()>maxn)maxn=a.front(),f=1;\n\t\tif(!b.empty())if(b.front()>maxn)maxn=b.front(),f=2;\n\t\tif(!c.empty())if(c.front()>maxn)maxn=c.front(),f=3;//\u627e\u6700\u5927\u503c\n\t\tif(f==1)a.pop();else if(f==2)b.pop();else if(f==3)c.pop();\n        //\u4e2a\u4eba\u80fd\u529b\u6709\u9650\uff0c\u4e0d\u4f1a\u4f7f\u7528\u6307\u9488\u6307\u5411STL\uff0c\u6240\u4ee5\u9ebb\u70e6\u4e00\u4e9b\n\t\tmaxn+=(i-1)*q;x=maxn*u/v;y=maxn-x;\n        //\u5206\u522b\u65f6\u7b97\u6700\u957f\u86af\u8693\u7684\u771f\u5b9e\u957f\u5ea6\uff0c\u5de6\u6bb5\u957f\u5ea6\u548c\u53f3\u6bb5\u957f\u5ea6\n\t\tif(!(i%t))cout<<maxn<<\" \";b.push(x-i*q);c.push(y-i*q);\n        //\u8f93\u51fa\u63a7\u5236\uff1b\u5de6\u6bb5\u5165\u961f\u548c\u53f3\u6bb5\u5165\u961f\n\t}\n\tcout<<endl;//\u6362\u884c\n\tll p=1; //\u8f93\u51fa\u63a7\u5236\u53d8\u91cf\n\twhile(p){ //\u8fd9\u91cc\u7684p\u59cb\u7ec8\u4e3a\u771f\uff0c\u5faa\u73af\u622a\u6b62\u6761\u4ef6\u518d\u5faa\u73af\u5185\n\t\tll maxn=-2147483647,f;//\u521d\u59cb\u5316\n\t\tif(a.empty()&&b.empty()&&c.empty())break;//\u6240\u6709\u961f\u5217\u4e3a\u7a7a\u65f6\u9000\u51fa\n\t\tif(!a.empty())if(a.front()>maxn)maxn=a.front(),f=1;\n\t    if(!b.empty())if(b.front()>maxn)maxn=b.front(),f=2;\n\t    if(!c.empty())if(c.front()>maxn)maxn=c.front(),f=3;\n\t\tif(f==1)a.pop();if(f==2)b.pop();if(f==3)c.pop();//\u5982\u4e0a\n\t\tif(p%t==0)\n\t\t  cout<<maxn+(m)*q<<\" \";           //\u8f93\u51fa\n\t\tp++;                               //\u8f93\u51fa\u63a7\u5236\n\t}\n\tcout<<endl;\n\treturn 0;                             //\u7ed3\u675f\n}\n```\n# \u6b22\u8fce\u5404\u4f4d\u6307\u51fa\u4e0d\u8db3",
        "postTime": 1538802353,
        "uid": 119261,
        "name": "7KByte",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2827 \u3010\u86af\u8693\u3011"
    },
    {
        "content": "###c++\u9898\u89e3\n\n\u5bf9\u4e8e\u8fd9\u6837\u4e00\u4e2a\u9898\uff0c\u6700\u7b80\u5355\u7684\u60f3\u6cd5\u5c31\u662f\u7528\u5806\u6765\u6a21\u62dfm\u6b21\u5207\u5272\u7684\u8fc7\u7a0b\uff0c\u4e0d\u8fc7\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO((n+m)log(n+m))\uff08\u8981\u7528\u697c\u4e0b\u6240\u8bb2\u7684\u8fdb\u884c\u4f18\u5316\uff09\uff0c\u53ea\u80fd\u901a\u8fc765%\u7684\u6570\u636e\u3002\n\n\u90a3\u4e48\u600e\u4e48\u4f18\u5316\u5462\uff1f\uff1f\n\n\u53ef\u4ee5\u5148\u624b\u52a8\u6a21\u62df\u4e00\u4e0b\u5207\u5272\u7684\u8fc7\u7a0b\uff0c\u5f97\u5230\u4e00\u4e0b\u4e24\u4e2a\u7ed3\u8bba\uff1a\n\n- \u5148\u5207\u5272\u7684\u957f\u5ea6\u4e00\u5b9a\u6bd4\u540e\u5207\u5272\u7684\u957f\u5ea6\u957f\u3002\uff08\u5728\u957f\u86af\u8693\u88ab\u5207\u5272\u65f6\uff09\n\n- \u540c\u4e00\u79cd\u5207\u6cd5\uff0c\u540e\u5207\u5272\u7684\u4e00\u5b9a\u6bd4\u5148\u5207\u5272\u7684\u77ed\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4e09\u4e2a\u961f\u5217\uff0cq[1]\uff08\u6700\u5f00\u59cb\u8bfb\u5165\u7684\u86af\u8693\uff09\uff0cq[2]\uff08\u5207\u51fa\u6765\u7684\u86af\u86931\uff09\uff0cq[3]\uff08\u5207\u51fa\u6765\u7684\u86af\u86932\uff09\n\n\u6bcf\u6b21\u4ece\u4e09\u4e2a\u961f\u5217\u7684\u961f\u9996\u53d6\u51fa\u6700\u957f\u86af\u8693\uff0c\u5207\u5272\u540e\u653e\u5165q[2],q[3]\uff08q[1]\u53ea\u53d6\u4e0d\u653e\uff09\n\n\u4e00\u76f4\u505am\u6b21\u5373\u53ef\u3002\n\n\u6ce8\u610f\u4e00\u4e0b\uff1a\n\n1.\u86af\u8693\u957f\u5ea6\\*u/v\u7684\u4e2d\u95f4\u503c\u8d85\u8fc7\u4e86int\uff0c\u8981\u7528long long\u4f5c\u4e3a\u4e2d\u95f4\u503c\n\n2.mx\u8981\u7f6e\u6210-maxint\uff0c\u56e0\u4e3a\u4f7f\u7528\u4f18\u5316\\*\u540e\u8d1f\u6570\u4f1a\u5f88\u5c0f\n\n\u4f18\u5316\u5373\uff1a\u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cfl,\u6bcf\u6b21\u5207\u5272l+=q \u6bcf\u6b21\u53d6\u51fa\u6765\u7684\u86af\u8693\u90fd+=l \u653e\u8fdb\u53bb\u7684\u4e24\u53ea\u5c31-=(l+=q) \u5230\u6700\u540e\u8f93\u51fa\u518d\u628a\u6240\u6709\u7684\u86af\u8693\u90fd+l\uff0c\u8fd9\u6837\u5c31\u4e0d\u7528\u4e00\u4e2a\u4e00\u4e2a\u52a0\u4e86.\n\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\nusing namespace std;\n\nconst int maxl = (int)8e6, Inf = 1 << 31 - 1;\nint n, m, Q, u, v, ti;\nint q[4][maxl], h[4], t[4];\n\ninline int read()\n{\n    char c;\n    do {\n      c = getchar();\n    }while(c < '0' || c > '9');\n    int sum = 0;\n    do {\n      sum = sum * 10 + c - 48;\n      c = getchar();\n    }while(c >= '0' && c <= '9');\n    return sum;\n}\n\ninline void init()\n{\n    register int i;\n    n = read(); m = read(); Q = read(); \n    u = read();v = read(); ti = read();\n    for(i = 1; i <= n; i++)\n      q[1][i] = read();\n}\n\ninline bool cmp(int a, int b)\n{\n     return a > b;\n}\n\ninline void prepare()\n{\n    sort(q[1] + 1, q[1] + n + 1, cmp);\n    h[1] = 1; t[1] = n; \n    h[2] = h[3] = 1; t[2] = t[3] = 0;\n}\n\ninline void solve()\n{\n    register int i, j, l = 0;\n    for(i = 1; i <= m; i++) {\n      int mi = -1, mx = -Inf;\n      for(j = 1; j <= 3; j++)\n        if(h[j] <= t[j] && q[j][h[j]] > mx) mi = j, mx = q[j][h[j]];\n      //printf(\"(%d %d)\\n\", mi, mx);\n      h[mi]++; mx += l; l += Q;\n      int x = (int)((long long)mx * u / v) , y = mx - x;\n      t[2]++; q[2][t[2]] = x - l; t[3]++; q[3][t[3]] = y - l;\n      if(i % ti == 0) printf(\"%d \", mx);\n    }\n    printf(\"\\n\");\n    for(i = 1; i <= m + n; i++) {\n      int mi = -1, mx = -Inf;\n      for(j = 1; j <= 3; j++)\n        if(h[j] <= t[j] && q[j][h[j]] > mx) mi = j, mx = q[j][h[j]];\n       h[mi]++;\n      if(i % ti == 0) printf(\"%d \", mx + l);\n    }\n}\n\nint main()\n{\n    freopen(\"earthworm.in\", \"r\", stdin);\n    freopen(\"earthworm.out\", \"w\", stdout);\n    init();\n    prepare();\n    solve();\n    return 0;\n}\n```",
        "postTime": 1481888466,
        "uid": 17156,
        "name": "dsl2002",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2827 \u3010\u86af\u8693\u3011"
    },
    {
        "content": "\u86af\u8693\u53ef\u4ee5\u5206\u4e3a\u4e09\u7c7b\u2014\u2014\n\n1. \u672a\u88ab\u5207\u5272\u8fc7\u7684\u86af\u8693\n2. \u4e0a\u6b21\u5207\u5272\u4e2d\u7531$\\lfloor xp \\rfloor$\u65b9\u5f0f\u4ea7\u751f\n3. \u4e0a\u6b21\u5207\u5272\u4e2d\u7531$x - \\lfloor xp \\rfloor$\u65b9\u5f0f\u4ea7\u751f\n\n\u5bf9\u540c\u4e3a\u7b2c\u4e8c\u7c7b\u6216\u7b2c\u4e09\u7c7b\u7684\u86af\u8693\u6709\u5982\u4e0b\u7684\u6027\u8d28\u2014\u2014\n\n- \u8bbe\u86af\u8693$A$\u5207\u5272\u540e\u4ea7\u751f\u4e86\u7b2c\u4e8c\u7c7b\u86af\u8693$A'$\u3002\n- \u8bbe\u86af\u8693$B$\u5207\u5272\u540e\u4ea7\u751f\u4e86\u7b2c\u4e8c\u7c7b\u86af\u8693$B'$\u3002\n- $A$\u548c$B$\u90fd\u5728\u4e16\u7684\u65f6\u5019\uff0c\u5982\u679c\u6709$A$\u6bd4$B$\u957f\uff0c\u5219$A'$\u548c$B'$\u90fd\u5728\u4e16\u65f6\u4e00\u5b9a\u6709$A'$\u6bd4$B'$\u957f\u3002\n\n\u8bc1\u660e\uff1a\n\n\u6211\u4eec\u4e0d\u59a8\u7528$A$\u8868\u793a\u86af\u8693$A$\u5728$0$\u65f6\u523b\u957f\u5ea6\uff08\u5b83\u90a3\u65f6\u53ef\u80fd\u8fd8\u672a\u4ea7\u751f\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u5728\u4e16\u65f6$t$\u65f6\u523b\u7684\u957f\u5ea6\u51cf\u53bb$tq$\u5f97\u5230\u4e00\u4e2a\u65e0\u5b9e\u9645\u610f\u4e49\u7684\u957f\u5ea6\uff09\u3002\u5bf9$B$\u3001$A'$\u3001$B'$\u540c\u7406\u3002\u6ce8\u610f\u8fd9\u4e2a$0$\u65f6\u523b\u957f\u5ea6\u53ef\u4ee5\u7528\u6765\u6bd4\u8f83\u86af\u8693\u4e4b\u95f4\u7684\u76f8\u5bf9\u957f\u77ed\u3002\n\n\u4e0d\u59a8\u8bbe$A$\u5728$t_A$\u65f6\u523b\u88ab\u5207\u5272\uff0c$B$\u5728$t_B$\u65f6\u523b\u88ab\u5207\u5272\uff0c\u5219\u6709$t_A\\leq t_B$\u3002\n\n$$A'=\\lfloor (A+t_Aq)p\\rfloor - t_Aq$$\n\n$$B'=\\lfloor (B+t_Bq)p\\rfloor - t_Bq$$\n\n\u7531$0\\leq p\\leq 1$\u6613\u89c1$A'\\geq B'$\uff0c\u5f97\u8bc1\u3002\n\n\u5bf9\u4e8e\u540c\u4e3a\u7b2c\u4e09\u7c7b\u7684\u86af\u8693\uff0c\u4e5f\u6709\u7c7b\u4f3c\u7684\u6027\u8d28\u3002\n\n\u6545\u6240\u6709\u7b2c\u4e8c\u7c7b\u6216\u7b2c\u4e09\u7c7b\u86af\u8693\uff0c\u5176\u4ea7\u751f\u65f6\u95f4\u4ece\u65e9\u5230\u665a\u7684\u987a\u5e8f\u5c31\u662f\u957f\u5ea6\u4ece\u957f\u5230\u77ed\u7684\u987a\u5e8f\uff0c\u53ef\u4ee5\u7528\u961f\u5217\u5728$O(m)$\u5185\u7ef4\u62a4\u3002\u800c\u7b2c\u4e00\u7c7b\u86af\u8693\u662f\u6709\u9650\u7684\uff0c\u53ea\u6709\u521d\u59cb\u90a3$n$\u6761\uff0c$O(nlogn)$\u6392\u5e8f\u5904\u7406\u5373\u53ef\u3002\n\n\u6bcf\u6b21\u8981\u627e\u5f53\u524d\u6700\u957f\u7684\u86af\u8693\uff0c\u5148\u5206\u522b\u53d6\u51fa\u8fd9\u4e09\u7c7b\u86af\u8693\u5404\u81ea\u7684\u961f\u9996\uff08\u6700\u957f\uff09\uff0c\u7136\u540e\u6bd4\u8f83\u51fa\u5168\u5c40\u6700\u957f\u7684\u86af\u8693\u5373\u53ef\u3002\n\n\u603b\u4f53\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\log n+m)$\u3002\n\n``` cpp\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n\nusing namespace std;\n\nint main() {\n    ios::sync_with_stdio(false);\n    int n, m, q, u, v, t;\n    cin >> n >> m >> q >> u >> v >> t;\n    int siz[3] = { n + 1, m + 1, m + 1 };\n    int *ptr_b[3], *ptr_e[3];\n    for (int i = 0; i < 3; ++i)\n        memset(ptr_b[i] = ptr_e[i] = new int[siz[i]], 0xcf, sizeof(int) * siz[i]);\n    for (int i = 0; i < n; ++i)\n        cin >> *(ptr_e[0]++);\n    sort(ptr_b[0], ptr_e[0], greater<int>());\n    int *answer = new int[n + m];\n    for (int cur = 0; cur < m; ++cur) {\n        int k = 0;\n        for (int i = 1; i < 3; ++i)\n            if (*ptr_b[k] < *ptr_b[i])\n                k = i;\n        answer[cur] = cur * q + *(ptr_b[k]++);\n        int a = (long long)answer[cur] * u / v;\n        int b = (long long)answer[cur] - a;\n        *(ptr_e[1]++) = a - (cur + 1) * q;\n        *(ptr_e[2]++) = b - (cur + 1) * q;\n    }\n    for (int i = t - 1; i < m; i += t)\n        cout << answer[i] << \" \";\n    cout << endl;\n    for (int cur = 0; cur < n + m; ++cur) {\n        int k = 0;\n        for (int i = 1; i < 3; ++i)\n            if (*ptr_b[k] < *ptr_b[i])\n                k = i;\n        answer[cur] = m * q + *(ptr_b[k]++);\n    }\n    for (int i = t - 1; i < n + m; i += t)\n        cout << answer[i] << \" \";\n    cout << endl;\n    return 0;\n}\n```",
        "postTime": 1581429845,
        "uid": 18756,
        "name": "YOUSIKI",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2827 \u3010\u86af\u8693\u3011"
    },
    {
        "content": "\u56e0\u4e3a\u6bcf\u6b21\u64cd\u4f5c\u540e\u90fd\u8981\u4e3a\u5176\u5b83\u6570+=q\n\n\u505a\u4e2a\u7b49\u4ef7\u53d8\u6362\u5373\u53ef\uff0c\u8ba9\u5f53\u524d\u6570-=q\n\n\u56de\u5934\u518d\u628a\u8be5\u52a0\u7684\u52a0\u4e0a\n\n### 85\u5206\n\u4f18\u5148\u961f\u5217\u7ef4\u62a4\n\u539f\u7406\u5f88\u7b80\u5355\uff0c\u6bcf\u6b21\u53d6\u51fa\u6700\u957f\u7684\uff0c\u5207\u5f00\uff0c\u653e\u8fdb\u53bb\n###### \u4ee3\u7801\uff1a\n```cpp\n//\u5934\u6587\u4ef6\u7565\nusing namespace std;\nvoid read(int &x);\nconst int MAXN=(int)1e5+5;\nconst int MAXM=(int)7e6+5;\nint n,m,u,v,q,t;\ndouble p;\nint ans1[MAXM];\npriority_queue<int> pq;\nint main() {\n\tcin>>n>>m>>q>>u>>v>>t;\n\tp=(double)u/v;\n\tfor(int i=1,x; i<=n; ++i) {\n\t\tread(x);\n\t\tpq.push(x);\n\t}\n\tint delta=0;\n\tfor(int i=1; i<=m; ++i) {\n\t\tint x=pq.top();\n\t\tpq.pop();\n\t\tx+=delta;\n\t\tans1[i]=x;\n\t\tint px=p*x;\n\t\tpq.push(px-delta-q);\n\t\tpq.push(x-px-delta-q);\n\t\tdelta+=q;\n\t}\n\tfor(int i=t; i<=m; i+=t)\n\t\tcout<<ans1[i]<<\" \";\n\tcout<<endl;\n\tint count=1;\n\twhile(!pq.empty()) {\n\t\tif(count%t==0)\n\t\t\tcout<<pq.top()+delta<<\" \";\n\t\tpq.pop();\n\t\tcount++;\n\t}\n\treturn 0;\n}\nvoid read(int &x) {\n\tx=0;\n\tint f=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9') {\n\t\tif(ch=='-') f=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9') {\n\t\tx=x*10+ch-'0';\n\t\tch=getchar();\n\t}\n\tx*=f;\n}\n```\n### 100\u5206\n\u5b9e\u9645\u4e0a\u8fd9\u9053\u9898\u6709\u4e2a\u9690\u542b\u7684\u5355\u8c03\u6027,\u5373\u4e00\u4e2a\u957f\u7684\u5207\u6210\u4e24\u534a\u540e\uff0c\u8fd9\u4e24\u534a\n\n\u5206\u522b\u6bd4\u540e\u6765\u5207\u7684\u77ed\u86af\u8693\u7684\u4e24\u534a\u957f.\u7528\u4e00\u4e2a\u961f\u5217\u4e3a\u539f\u59cb\u6570\u636e\uff0c\u53e6\u5f00\u4e24\n\n\u4e2a\u961f\u5217\u5206\u522b\u4fdd\u5b58\u4e24\u534a\n\n\u8bbex>=y,0<p<1\u5176\u4e2d\u7684\u4e0d\u7b49\u5f0f\u4e3a[px]+q=[px+q]>=[py+pq]=[p(y+q)]\n\n\u53e6\u4e00\u534a\u4e5f\u662f\u663e\u7136\u7684,\u53ef\u4ee5\u8bbep2=1-p,\u8bc1\u660e\u65b9\u6cd5\u540c\u4e0a\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\uff1a\n\nx-y>=p(x-y) => x-px>=y-py>=y-p(y+q) \u8fdb\u4e00\u6b65\u6709\n\nx-[px]+q=[x-px]+q>=[y-p(y+q)]+q=y+q-[p(y+q)]\n###### \u4ee3\u7801\uff1a\n```cpp\n#include <\u7565>\nusing namespace std;\nvoid read(int &x);\nconst int MAXN=(int)1e5+5;\nconst int MAXM=(int)7e6+5;\nint n,m,u,v,q,t;\ndouble p;\nint ans1[MAXM],a[MAXN];\nqueue<int> q1,q2,q3;\ninline int GetMax();\nint main() {\n\tcin>>n>>m>>q>>u>>v>>t;\n\tp=(double)u/v;\n\tfor(int i=1; i<=n; ++i)\n\t\tread(a[i]);\n\tsort(a+1,a+n+1,greater<int>());\n\tfor(int i=1; i<=n; ++i)\n\t\tq1.push(a[i]);\n\tint delta=0;\n\tfor(int i=1; i<=m; ++i) {\n\t\tint x=GetMax();\n\t\tx+=delta;\n\t\tans1[i]=x;\n\t\tint px=p*x;\n\t\tq2.push(px-delta-q);\n\t\tq3.push(x-px-delta-q);\n\t\tdelta+=q;\n\t}\n\tfor(int i=t; i<=m; i+=t)\n\t\tcout<<ans1[i]<<\" \";\n\tcout<<endl;\n\tint count=1;\n\twhile(!q1.empty()||!q2.empty()||!q3.empty()) {\n\t\tint x=GetMax();\n\t\tif(count%t==0)\n\t\t\tcout<<x+delta<<\" \";\n\t\tcount++;\n\t}\n\treturn 0;\n}\ninline int GetMax() {\n\tint x1=INT_MIN,x2=INT_MIN,x3=INT_MIN;\n\tif(!q1.empty())\n\t\tx1=q1.front();\n\tif(!q2.empty())\n\t\tx2=q2.front();\n\tif(!q3.empty())\n\t\tx3=q3.front();\n\tif(x1>=x2&&x1>=x3) {\n\t\tq1.pop();\n\t\treturn x1;\n\t} else if(x2>=x3) {\n\t\tq2.pop();\n\t\treturn x2;\n\t} else {\n\t\tq3.pop();\n\t\treturn x3;\n\t}\n}\nvoid read(int &x) {\n\tx=0;\n\tint f=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9') {\n\t\tif(ch=='-') f=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9') {\n\t\tx=x*10+ch-'0';\n\t\tch=getchar();\n\t}\n\tx*=f;\n}\n```\n",
        "postTime": 1569073848,
        "uid": 183645,
        "name": "\u65b9\u7a0b_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2827 \u3010\u86af\u8693\u3011"
    },
    {
        "content": "### \u5148\u5206\u6790\u4e00\u4e0b\u9898\u610f\uff1a\n\u8fd9\u4e2a\u9898\u8bf4\u7684\u5c31\u662f\u4e00\u5f00\u59cb\u7ed9\u4f60\u5f88\u591a\u6761\u86af\u8693\uff0c\u7136\u540e\u7ed9\u51fa\u4f60\u89c4\u5b9a\u7684\u6b21\u6570\uff0c\u6bcf\u4e00\u6b21\u90fd\u4ece\u86af\u8693\u91cc\u9762\u62ff\u51fa\u6700\u957f\u7684\u6765\u5207\u6210\u4e00\u6761\u662f\u539f\u6765q\u500d\u7684\uff0c\u53e6\u4e00\u6761\u662f\u539f\u6765\u7684\uff081 - q\uff09\u500d\uff0c\u628a\u5207\u5f00\u7684\u4e24\u6761\u518d\u653e\u56de\u53bb\u3002\u89c4\u5b9a\u6b21\u6570\u5b8c\u6210\u4e4b\u540e\uff0c\u518d\u5c06\u5269\u4f59\u7684\u5168\u90e8\u86af\u8693\u4ece\u5927\u5230\u5c0f\u987a\u5e8f\u8f93\u51fa\uff0c\u5c31\u662f\u9171\u7d2bQWQ\n\n\u53ef\u4ee5\u770b\u51fa\uff0c\u6709\u4e00\u79cd\u5f88\u66b4\u529b\u5f88\u7b80\u5355\u7684\u65b9\u6cd5\uff0c\u5c06\u6bcf\u4e00\u6761\u86af\u8693\u7684\u957f\u5ea6\u90fd\u653e\u5165\u4e00\u4e2a\u5927\u6839\u5806\uff08\u4f18\u5148\u961f\u5217\uff09\u4e2d\uff0c\u7136\u540e\u4ece1 - m\u6b21\u6bcf\u4e00\u6b21\u90fd\u4ece\u5806\u9876\uff08\u961f\u9996\uff09\u53d6\u51fa\u6700\u957f\u7684\u90a3\u6761\u86af\u8693\u7136\u540e\u6309\u7167\u7ed9\u51fa\u7684u,v\u5207\u5f00\u518d\u653e\u56de\u5927\u6839\u5806\uff08\u4f18\u5148\u961f\u5217\uff09\uff0c\u8fd9\u91cc\u7684\u5927\u6839\u5806\u548c\u4f18\u5148\u961f\u5217\u90fd\u662f\u53ef\u4ee5\u76f4\u63a5\u6392\u5e8f\u7684\u53ea\u9700\u8981\u5c06\u6570\u653e\u8fdb\u53bb\u5c31\u597d\u4e86\uff0c\u8fd9\u6837\u66b4\u529bm\u6b21\u3002m\u6b21\u5b8c\u6210\u4e4b\u540e\uff0c\u4ece\u5806\u9876\uff08\u961f\u9996\uff09\u6bcf\u4e00\u6b21\u8f93\u51fa\u5806\u9876\uff08\u961f\u9996\uff09\u7684\u6570\uff0c\u7136\u540e\u5f39\u51fa\u77e5\u9053\u5806\u7a7a\uff08\u961f\u5217\u7a7a\uff09\u7ed3\u675f\u4e86\u3002\n\n\u6ca1\u6709\u8fd9\u4e48\u7b80\u5355\uff01\uff01\uff01\uff01\uff01\uff01\n\n\u5728\u526a\u65ad\u4e00\u6761\u86af\u8693\u7684\u540c\u65f6\u5176\u4ed6\u7684\u86af\u8693\u8fd8\u4f1a\u957f\u5927\uff01\uff01\uff01\u9a6c\u4e0a\u5c31\u4f1a\u60f3\u5230\u662f\u533a\u95f4\u4fee\u6539\uff0c\n\u56e0\u4e3a\u51fa\u73b0\u4e86\u533a\u95f4\u4fee\u6539\uff0c\u4e0d\u8fc7\u8fd9\u4e2a\u533a\u95f4\u662f\u4e00\u5b9a\u7684\uff0c\u4e00\u5b9a\u662f\u9664\u4e86\u6700\u5927\u7684\u90a3\u4e2a\u4e4b\u5916\u7684\uff0c\n\u6240\u4ee5\u53ef\u4ee5\u53ea\u5728\u6700\u5927\u7684\u90a3\u4e00\u4e2a\u4e0a\u9762\u6700\u624b\u811a\uff0c\u6bd5\u7adf\u53ea\u6709\u4e00\u4e2a\uff0c\n\u6240\u4ee5\u4fee\u6539\u8d77\u6765\u4e5f\u662f\u5bb9\u6613\u7684\u5f88\u591a\uff0c\n\u53ef\u4ee5\u6bcf\u4e00\u6b21 \u4e0d\u589e\u52a0\u53ea\u8bb0\u5f55\u589e\u52a0\u6b21\u6570\u6700\u540e\u7528\u5230\u7684\u65f6\u5019\u518d\u52a0\n\u90a3\u4e48\u90a3\u4e2a\u4e0d\u52a0\u7684\u600e\u4e48\u529e\u5462\uff1f\n\u53ef\u4ee5\u51cf\u53bb\u9700\u8981\u52a0\u7684\u6570\uff0c\u8fd9\u6837\u5c31\u5f88\u5de7\u5999\u4e86\uff0c\u53ef\u4ee5\u548c\u522b\u7684\u4e00\u6837\u52a0\u4e0a\u76f8\u540c\u7684\u6570\uff0c\u540c\u65f6\u8fd8\u53ef\u4ee5\u8ba9\u6392\u5e8f\u662f\u6b63\u786e\u7684\n\u4e0d\u7136\u522b\u7684\u90fd\u6ca1\u52a0\u90a3\u4e48\u5c31\u4f1a\u5f71\u54cd\u6392\u5e8f\n\n\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n\nusing namespace std;\npriority_queue<int>q;\nint main()\n{\n\tint n,m,qq,u,v,t;\n//n:\u86af\u8693\u6570 ; m : m\u79d2\u5185\u7684\u72b6\u51b5 ; q \uff1a\u5176\u4f59\u86af\u8693\u589e\u52a0\u7684\u957f\u5ea6  \n\tint qwq; \n\tscanf(\"%d%d%d%d%d%d\",&n,&m,&qq,&u,&v,&t);\n\tdouble p;\n\tp = u * 1.0 / v;\n\tfor(int i = 1;i <= n;++ i)\n\t{\n\t\tscanf(\"%d\",&qwq);\n\t\tq.push(qwq);\n\t}\n\tint jss = 0;\n\twhile(m --) \n\t{\n\t\tint awa = q.top() + jss * qq;\n\t\tjss ++;\n\t\tif(jss % t == 0)\n\t\t\tprintf(\"%d \",awa);\n\t\tq.pop();\n\t\tint X1 = awa * p;\n\t\tint aa = X1 - jss * qq;\n\t\tint bb = (awa - X1) - jss * qq;\n\t\tq.push(aa);q.push(bb);\n\t}\n\tprintf(\"\\n\");\n\tint js = 0;\n\twhile(!q.empty())\n\t{\n\t\tjs ++;\n\t\tif(js % t == 0)\n\t\t\tprintf(\"%d \",q.top() + jss * qq);\n\t\tq.pop();\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}\n```\n\u4e0d\u8fc7\u5f88\u597d\u7684\u662f\uff0c\u53ea\u670985\u5206\uff0c\u4e09\u4e2a\u70b9\u90fd\u662f1.2s\uff0c\u5c31\u8d85\u4e86\u4e00\u4e22\u4e22\u53ea\u9700\u8981\u4f18\u5316\u4e00\u4e0b\u4e0b\u5c31\u597d\u4e86\u3002\n\n\u4f46\u662f\u53ef\u4ee5\u600e\u4e48\u4f18\u5316\u5462\uff1f\n\n\u5176\u5b9e\u8fd9\u91cc\u53ef\u4ee5\u53d1\u73b0\u4e00\u79cd\u5f88\u663e\u7136\u7684\u5355\u8c03\u6027\uff0c\u5982\u679c\u4f60\u5c06\u4e00\u5f00\u59cb\u7684\u86af\u8693\u6392\u597d\u5e8f\n\u90a3\u4e48\u524d\u4e00\u6761\u86af\u8693\u5207\u51fa\u6765\u7684\u4e24\u6761\u86af\u8693\u4e00\u5b9a\u5404\u81ea \u5927\u4e8e\u7b49\u4e8e\u540e\u9762\u4e00\u6761\u86af\u8693\u5207\u51fa\u6765\u7684\u4e24\u6761\u86af\u8693\n\u6bd5\u7adf\u524d\u4e00\u6761\u86af\u8693\u4e00\u5b9a\u5927\u4e8e\u7b49\u4e8e\u540e\u9762\u90a3\u4e00\u4e2a\uff0c\u6240\u4ee5\u5207\u51fa\u6765\u7684\u5206\u534a\u653e\u5728\u4e24\u4e2a\u6570\u7ec4\u4e2d\u548c\u540e\u9762\u5bf9\u5e94\u7684\u5207\u51fa\u6765\u7684\u4e24\u6761\u4e5f\u4e00\u5b9a\u662f\u5927\u4e8e\u7b49\u4e8e\u7684 \n\u6240\u4ee5\u53ef\u4ee5\u8bbe\u7f6e\u4e09\u4e2a\u5355\u8c03\u961f\u5217\uff08\u6216\u8005sort\u6392\u5e8f\u7136\u540e\u7528\u6570\u7ec4\u50a8\u5b58\uff09\n\u6bcf\u4e00\u6b21\u5207\u5f97\u65f6\u5019\u90fd\u4ece\u4e09\u4e2a\u961f\u5217\u91cc\u9762\u627e\u6700\u5927\u7684\u5207\u5c31\u597d\u4e86\n\nAC\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nconst int M1 = 1e5 + 5;\nconst int M2 = 8e6;\nusing namespace std;\nint a[M1];\nint b[M2];\nint c[M2];\nbool cmp(int x,int y)\n{\n\treturn x > y;\n}\nint main()\n{ \n\tint n,m,qq,u,v,t;\n//n:\u86af\u8693\u6570 ; m : m\u79d2\u5185\u7684\u72b6\u51b5 ; q \uff1a\u5176\u4f59\u86af\u8693\u589e\u52a0\u7684\u957f\u5ea6  \n\tint qwq; \n\tscanf(\"%d%d%d%d%d%d\",&n,&m,&qq,&u,&v,&t);\n\ta[n + 1] = -0x7fffffff;\n\tdouble p;\n\tp = u * 1.0 / v;\n\tfor(int i = 1;i <= n;++ i)\n\t\tscanf(\"%d\",&a[i]);\n\tsort(a + 1,a + n + 1,cmp);\n\tint js = 0;\n\tint ja = 1;\n\tint jb = 1,tb = 0;\n\tint jc = 1,tc = 0;\n\tint Max;\n\tint zuobiao;\n\twhile(m --)\n\t{\n\t\tif(a[ja] >= b[jb] && a[ja] >= c[jc])\n\t\t{\n\t\t\tMax = a[ja];\n\t\t\tja ++;\n\t\t}\n\t\telse\n\t\tif(b[jb] >= a[ja] && b[jb] >= c[jc])\n\t\t{\n\t\t\tMax = b[jb];\n\t\t\tjb ++;\n\t\t}\n\t\telse\n\t\tif(c[jc] >= a[ja] && c[jc] >= b[jb])\n\t\t{\n\t\t\tMax = c[jc];\n\t\t\tjc ++;\n\t\t}\n\t\tint awa = Max + js * qq;\n\t\tjs ++;\n\t\tif(js % t == 0)\n\t\t\tprintf(\"%d \",awa);\n\t\tint X1 = awa * p;\n\t\tb[++ tb] = X1 - js * qq;\n\t\tc[++ tc] = (awa - X1) - js * qq;\n\t}\n\tprintf(\"\\n\");\n\tint ans = 0;\n\tfor(int i = ja;i <= n;++ i)a[i] += qq * js;\n\tfor(int i = jb;i <= tb;++ i)b[i] += qq * js;\n\tfor(int i = jc;i <= tc;++ i)c[i] += qq * js;\n\tb[tb + 1] = -0x7fffffff;\n\tc[tc + 1] = -0x7fffffff;\n\twhile(ja <= n || jb <= tb || jc <= tc)\n\t{\n\t\tans ++;\n\t\tif(a[ja] >= b[jb] && a[ja] >= c[jc] && ja <= n)\n\t\t{\n\t\t\tif(ans % t == 0)\n\t\t\t\tprintf(\"%d \",a[ja]);\n\t\t\tja ++;\n\t\t}\n\t\telse\n\t\tif(b[jb] >= a[ja] && b[jb] >= c[jc] && jb <= tb)\n\t\t{\n\t\t\tif(ans % t == 0)\n\t\t\t\tprintf(\"%d \",b[jb]);\n\t\t\tjb ++;\n\t\t}\n\t\telse\n\t\tif(c[jc] >= a[ja] && c[jc] >= b[jb] && jc <= tc)\n\t\t{\n\t\t\tif(ans % t == 0)\n\t\t\t\tprintf(\"%d \",c[jc]);\n\t\t\tjc ++;\n\t\t}\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}\n```\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nconst int M1 = 1e5 + 5;\nconst int M2 = 8e6;\nusing namespace std;\nint a[M1];\nint b[M2];\nint c[M2];\nbool cmp(int x,int y)\n{\n\treturn x > y;\n}\nint main()\n{ \n\tint n,m,qq,u,v,t;\n//n:\u86af\u8693\u6570 ; m : m\u79d2\u5185\u7684\u72b6\u51b5 ; q \uff1a\u5176\u4f59\u86af\u8693\u589e\u52a0\u7684\u957f\u5ea6  \n\tint qwq; \n\tscanf(\"%d%d%d%d%d%d\",&n,&m,&qq,&u,&v,&t);\n\ta[n + 1] = -0x7fffffff;\n\tdouble p;\n\tp = u * 1.0 / v;\n\tfor(int i = 1;i <= n;++ i)\n\t\tscanf(\"%d\",&a[i]);\n\tsort(a + 1,a + n + 1,cmp);\n\tint js = 0;\n\tint ja = 1;\n\tint jb = 1,tb = 0;\n\tint jc = 1,tc = 0;\n\tint Max;\n\tint zuobiao;\n\twhile(m --)\n\t{\n\t\tif(a[ja] >= b[jb] && a[ja] >= c[jc])\n\t\t{\n\t\t\tMax = a[ja];\n\t\t\tja ++;\n\t\t}\n\t\telse\n\t\tif(b[jb] >= a[ja] && b[jb] >= c[jc])\n\t\t{\n\t\t\tMax = b[jb];\n\t\t\tjb ++;\n\t\t}\n\t\telse\n\t\tif(c[jc] >= a[ja] && c[jc] >= b[jb])\n\t\t{\n\t\t\tMax = c[jc];\n\t\t\tjc ++;\n\t\t}\n\t\tint awa = Max + js * qq;\n\t\tjs ++;\n\t\tif(js % t == 0)\n\t\t\tprintf(\"%d \",awa);\n\t\tint X1 = awa * p;\n\t\tb[++ tb] = X1 - js * qq;\n\t\tc[++ tc] = (awa - X1) - js * qq;\n\t}\n\tprintf(\"\\n\");\n\tint ans = 0;\n\tfor(int i = ja;i <= n;++ i)a[i] += qq * js;\n\tfor(int i = jb;i <= tb;++ i)b[i] += qq * js;\n\tfor(int i = jc;i <= tc;++ i)c[i] += qq * js;\n\tb[tb + 1] = -0x7fffffff;\n\tc[tc + 1] = -0x7fffffff;\n\twhile(ja <= n || jb <= tb || jc <= tc)\n\t{\n\t\tans ++;\n\t\tif(a[ja] >= b[jb] && a[ja] >= c[jc] && ja <= n)\n\t\t{\n\t\t\tif(ans % t == 0)\n\t\t\t\tprintf(\"%d \",a[ja]);\n\t\t\tja ++;\n\t\t}\n\t\telse\n\t\tif(b[jb] >= a[ja] && b[jb] >= c[jc] && jb <= tb)\n\t\t{\n\t\t\tif(ans % t == 0)\n\t\t\t\tprintf(\"%d \",b[jb]);\n\t\t\tjb ++;\n\t\t}\n\t\telse\n\t\tif(c[jc] >= a[ja] && c[jc] >= b[jb] && jc <= tc)\n\t\t{\n\t\t\tif(ans % t == 0)\n\t\t\t\tprintf(\"%d \",c[jc]);\n\t\t\tjc ++;\n\t\t}\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}\n```\n",
        "postTime": 1565183774,
        "uid": 186489,
        "name": "EarthGiao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2827 \u3010\u86af\u8693\u3011"
    },
    {
        "content": "\u6765\u4e00\u53d1\u6587\u5b57\u8bc1\u660e~\n\n\n\u6570\u636e\u8303\u56f4\u5f88\u5927\u3002\u3002\u3002\n\n\n\u5982\u679c\u7528priority\\_queue\u641e\u7684\u8bdd\u80af\u5b9a\u662f\u4f1at\u7684\u3002\n\n\n\u6240\u4ee5\u80af\u5b9a\u8981\u60f3\u4e00\u60f3\u4f18\u5316\u7684\u601d\u8def\u3002\n\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e\u961f\u5217\u6765\u8bb2\uff0c\u540c\u52a0\uff0c\u51cf\u662f\u4e0d\u6539\u53d8\u8fd9\u4e2a\u961f\u5217\u7684\u5927\u5c0f\u5173\u7cfb\u7684\uff1b\n\n\n\u4f46\u662f\u5462\uff0c\u5207\u5f00\u86af\u8693\u4ee5\u53ca\u65b0\u86af\u8693\u4e0d\u52a0\u662f\u4f1a\u6539\u53d8\u8fd9\u4e2a\u961f\u5217\u7684\u5927\u5c0f\u5173\u7cfb\u7684\u3002\n\n\n\u4e00\u79cd\u7b80\u5355\u7684\u60f3\u6cd5\u662fpriority\\_queue\uff08\u90fd\u8bf4\u4e86\u4f1at\u554a\u5582\uff09\u3002\n\n\n\u53e6\u4e00\u79cd\u662f\u628a\u5207\u51fa\u6765\u7684\u4e24\u6761\u86af\u8693\u9694\u79bb\u5f00\uff0c\u53d1\u73b0\u6bcf\u6b21\u90fd\u4f1a\u5207\u51fa\u4e24\u79cd\u7c7b\u578b\u7684\u86af\u8693\uff0c\u4e00\u79cd\u957f\u7684\u548c\u4e00\u79cd\u77ed\u7684\u3002\uff08\u56e0\u4e3a\u662f\u6309\u6bd4\u4f8b\u5207\u5272\uff09\n\n\n\u90a3\u4e48\u628a\u8fd9\u4e24\u6761\u86af\u8693\u653e\u5230\u4e24\u4e2a\u961f\u5217\u5f53\u4e2d\uff0c\u5c31\u80fd\u591f\u9694\u79bb\u8fd9\u4e24\u53ea\u86af\u8693\uff0c\u4ece\u800c\u8d77\u5230\u4fdd\u62a4\u4e3b\u961f\u5355\u8c03\u6027\u7684\u4f5c\u7528\n\n\n\u95ee\u9898\u662f\u8981\u4e0d\u8981\u7528priority\\_queue\u3002\n\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5728\u961f\u5217\u4e00\u548c\u961f\u5217\u4e8c\u5f53\u4e2d\uff0c\u76f8\u90bb\u7684\u4e24\u4e2a\u5143\u7d20\u603b\u662f\u7d27\u63a5\u7740\u653e\u8fdb\u53bb\u7684\uff08\u5e9f\u8bdd\u5417\u4e0d\u662f\uff09\n\n\n\u95ee\u9898\u6765\u4e86\uff0c\u8fd9\u4e24\u6761\u86af\u8693\u6765\u81ea\u54ea\u91cc\uff1f\n\n\n\u7b54\u6848\u662f\u539f\u6765\u6240\u6709\u86af\u8693\u4e2d\u7b2c\u4e00\u5927\u548c\u7b2c\u4e8c\u5927\u7684\u86af\u8693\uff0c\u663e\u7136\u8fd9\u4e24\u6761\u86af\u8693\u662f\u8fd9\u4e24\u6761\u86af\u8693\u540c\u4e00\u6bd4\u4f8b\u7684\u540e\u4ee3\n\n\n\u6240\u4ee5\u524d\u9762\u7684\u86af\u8693\u5c31\u81ea\u7136\u5927\u4e8e\u540e\u9762\u7684\u86af\u8693\uff0c\u56e0\u6b64\u5c31\u5220\u53bb\u4e86priority\\_queue\u8fd9\u4e2a\u64cd\u4f5c\u3002\n\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e\uff0c\u8fd9\u6837\u5904\u7406\u7684\u4e09\u4e2a\u961f\u5217\uff08\u4e3b\u961f\uff0c\u957f\u86af\u8693\u961f\uff0c\u77ed\u86af\u8693\u961f\uff09\u90fd\u662f\u5355\u8c03\u7684\uff0c\u4e5f\u5c31\u662f\u961f\u5934\u5927\u4e8e\u7b49\u4e8e\u8be5\u961f\u7684\u6240\u6709\u5143\u7d20\u3002\n\n\n\u6700\u540e\u5c31\u662f\uff0c\u6211\u4eec\u4e0d\u80fd\u6bcf\u6b21\u90fd\u52a0\u4e0a\u4e00\u4e2aq\uff08\u663e\u7136\u662f\u627et\uff09\u6211\u4eec\u5047\u88c5\u8fd9\u4e2a\u86af\u8693\u5728\u53d6\u51fa\u7684\u4e00\u77ac\u95f4\u957f\u5927\u4e86\uff08i-1\uff09\\*q\uff08i\u4e3a\u79d2\u6570\uff09\u7136\u540e\u585e\u56de\u53bb\u7684\u65f6\u5019\u5728\u51cf\u53bbi\\*q\u5373\u53ef\n\n\n\uff08\u6ce8\uff1a\u5fc5\u987b\u52a0\u4e0a(i-1)\\*q,\u4e0d\u7136\u5411\u4e0b\u53d6\u6574\u7cbe\u5ea6\u4f1a\u4e0d\u51c6\uff09\n\n\n\u4e0a\u4ee3\u7801~\n\n\n```cpp\n#include<stdio.h>\n#include<queue>\n#include<algorithm>\nusing namespace std;\nint n;int m;int q;int u;int v;int t;\nqueue <int> q1;queue <int> q2;queue <int> q3;\ninline int maxnum()//\u53d6\u6700\u5927\u503c\u7684\u64cd\u4f5c\n{\nint res=-0x3f3f3f3f;int num=0;\nif(!q1.empty()&&res<q1.front())res=q1.front(),num=1;\nif(!q2.empty()&&res<q2.front())res=q2.front(),num=2;\nif(!q3.empty()&&res<q3.front())res=q3.front(),num=3;\nif(num==1)q1.pop();\nelse if(num==2)q2.pop();\nelse if(num==3)q3.pop();\nreturn res;\n}\nint a[100000];int now;int j;\nint main()\n{\nscanf(\"%d%d%d%d%d%d\",&n,&m,&q,&u,&v,&t);\nfor(int i=0;i<n;i++)\n{\nscanf(\"%d\",&a[i]);\n}\nsort(a,a+n);\nfor(int i=n-1;i>=0;i--)//\u5012\u7740\u626b\uff01\uff08\u6572\u9ed1\u677f\uff09sort\u6700\u5927\u503c\u5728\u6700\u540e\n{\nq1.push(a[i]);\n}\nfor(int i=1;i<=m;i++,j+=q)//\u636e\u8bf4\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u8fd0\u7b97\uff0cpriority_queue\u60f3\u5361\u5e38\u7ed3\u679c\u5931\u8d25\u3002\u3002\n{\nint te=maxnum()+j;\nif(i%t==0)printf(\"%d \",te);\n//printf(\"ais%d bis%d\\n\",t*u/v-i*q,t-t*u/v-i*q);\nint ma=max(1LL*te*u/v-j-q,te-1LL*te*u/v-j-q);q2.push(ma);//\u5927\u7684\u653eq2\uff0c\u5c0f\u7684\u653eq3\nint mi=min(1LL*te*u/v-j-q,te-1LL*te*u/v-j-q);q3.push(mi);\n}\nprintf(\"\\n\");\nfor(int i=1;!q1.empty()||!q2.empty()||!q3.empty();i++)\n{ \nint res=maxnum();\nif(i%t==0)printf(\"%d \",res+j);\n}\nreturn 0;\n}\n```",
        "postTime": 1508146426,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2827 \u3010\u86af\u8693\u3011"
    },
    {
        "content": "$CSP2019\\;\\;\\;RP++$\n\n### \u524d\u7f6e\u77e5\u8bc6\n\n1. \u961f\u5217\n\n### \u89e3\u6cd5\n\n\u9996\u5148$O(nlogn)$\u505a\u6cd5, \u53ef\u4ee5\u8003\u8651\u7528\u5806\u7ef4\u62a4\u6bcf\u6b21\u53d6\u51fa\u6700\u5927\u7684\u5207\u4e86\u518d\u653e\u56de\u53bb\n\n\u4f46\u662f\u6211\u4eec\u8fd8\u6709\u52a0\u957f\u64cd\u4f5c, \u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981\u5145\u5206\u53d1\u6325\u4eba\u7c7b\u667a\u6167\u4e86, \u6211\u4eec\u53ef\u4ee5\u8003\u8651\u8bbe\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf$\\lambda$\u8868\u793a\u5f53\u524d\u52a0\u7684**\u6b21\u6570**, \u7136\u540e\u6240\u6709\u6570\u52a0\u4e0a\u8fd9\u4e2a\u503c, \u8003\u8651\u5230\u6700\u5927\u7684\u5207\u5b8c\u4e0d\u52a0\u957f\u5ea6, \u6211\u4eec\u628a\u5b83\u51cf\u53bb$\\lambda \\times p$\n\n\u63a5\u4e0b\u6765\u8003\u8651$O(n)$\u6c42\u89e3, \u4e3a\u6b64\u5148\u8bc1\u660e\u4ee5\u4e0b\u7ed3\u8bba\n\n- \u5bf9\u4e8e\u4e24\u6761\u86af\u8693$a, b$, \u82e5$a$\u5148\u88ab\u5207\u4e3a$x, y$\u4e24\u6761\u86af\u8693(\u8bbe$len_x \\leq len_y$), \u800c$b$\u540e\u88ab\u5207\u4e3a$u, v$\u4e24\u6761\u86af\u8693(\u8bbe$len_u \\leq len_v$), \u5219\u5728$b$\u88ab\u5207\u5b8c\u540e\u7684**\u4efb\u610f\u65f6\u523b**, \u5747\u6709$len_x \\leq len_u; len_y \\leq len_v$\n\n\u8bc1\u660e:\n\n\u8bbe$b$\u88ab\u5207\u5b8c\u7684\u65f6\u523b\u4e3a$t1$\n\n\u5fc5\u6709\u5bf9\u4e8e\u5927\u4e8e$t1$\u4efb\u610f\u65f6\u523b$t2$, $u$\u6210\u957f\u4e86$t2-t1$\u65f6\u523b, \u5373\u6210\u957f\u4e86$(t2-t1) \\times q$\n\n\u540c\u7406, \u8bbe$a$\u88ab\u5207\u5b8c\u7684\u65f6\u523b\u4e3a$x1$\n\n\u5fc5\u6709\u5bf9\u4e8e\u5927\u4e8e$x1$\u4efb\u610f\u65f6\u523b$t2$, $x$\u6210\u957f\u4e86$t2-x1$\u65f6\u523b, \u5373\u6210\u957f\u4e86$(t2-x1) \\times q$\n\n\u8003\u8651$b$\u7684\u6210\u957f, \u53ea\u9700\u8003\u8651$[x1, t1)$\u6bb5, \u5728\u8fd9\u4e9b\u65f6\u6bb5\u4e2d$b$\u6210\u957f\u4e86$(t1-x1) \\times q$\u957f\u5ea6\n\n\u6240\u4ee5\u8bf4\u6709\u5728\u65f6\u95f4$t2$\u65f6:\n\n$$\nlen_u = (t2-t1) \\times q + \\lfloor p \\times (t1-x1) \\times q \\rfloor \\le (t2-t1) \\times q + (t1-x1) \\times q \\leq len_x\n$$\n\n\u540c\u7406\u53ef\u8bc1$len_y$ \u4e0e $len_v$\n\n\u90a3\u4e48\u5f00\u4e09\u4e2a\u961f\u5217\u7ef4\u62a4\u6ca1\u6709\u88ab\u526a\u7684\u86af\u8693, \u88ab\u526a\u6210$\\lfloor px \\rfloor$\u7684\u86af\u8693 \u548c \u88ab\u526a\u6210$x-\\lfloor px \\rfloor$\u7684\u86af\u8693\n\n\u7136\u540e\u8fd9\u4e09\u4e2a\u961f\u5217\u66f4\u65b0\u65f6\u53ea\u9700\u5c06\u6570\u63d2\u5165\u81f3\u961f\u5217\u672b\u5c3e\u5373\u53ef\n\n### \u4ee3\u7801\n\n```cpp\n/*\n\tcode by tyqtyq\n*/\n#pragma GCC optimize(3)\n#pragma GCC optimize(2)\n#include<bits/stdc++.h>\nusing namespace std;\n#define f(i,x,y) for(register int i=x, i##end=y; i<=i##end; ++i)\n#define d(i,x,y) for(register int i=y, i##end=x; i>=i##end; --i)\n#define FO(x) {freopen(#x\".in\",\"r\",stdin);freopen(#x\".out\",\"w\",stdout);}\nint read(int& x){x=0; int f=1, ch=getchar(); while(!isdigit(ch)) f=ch=='-'?-1:f, ch=getchar(); while(isdigit(ch)) x=x*10+ch-'0', ch=getchar(); return x*=f;}\nint read(){int x=0, f=1, ch=getchar(); while(!isdigit(ch)) f=ch=='-'?-1:f, ch=getchar(); while(isdigit(ch)) x=x*10+ch-'0', ch=getchar(); return x*f;}\nint max(int x, int y){return x>y?x:y;} int min(int x, int y){return x<y?x:y;}\nint n,m,q,u,v,t;\ndouble p;\nint a[100005];\nstruct que {\n\tint tag=0;\n\tint a[8000005], l, r;\n\tque(){\n\t\tl = r = 1;\t\n\t}\n\tint empty() {\n\t\treturn l==r;\n\t}\n\tvoid push_back(int v) {\n\t\ta[r] = v - tag ; ++r;\n\t}\n\tvoid add(int p) {\n\t\ttag += p;\n\t}\n\tint front() {\n\t\treturn a[l] + tag;\n\t}\n\tint pop() {\n\t\t++l; return a[l-1]+tag;\n\t}\n\tvoid print(){\n\t\t//cout<<\"Queue.print:\"<<endl;\n\t\t//f(i,l,r-1) cout<<a[i]+tag<<endl;\n\t}\n} Q1, Q2, Q3;\n// Q1 the queue of things haven't been cut\n// Q2 the queue of thing have been cut into [px]\n// Q3 the queue of thing have been cut into x-[px]\nint cutqueue[8000005], cnt;\nvoid cut(int len) {\n\tQ1.add(q);\n\tQ2.add(q);\n\tQ3.add(q);\n\tQ2.push_back(int(p*len));\n\tQ3.push_back(len-int(p*len));\n\tcutqueue[++cnt] = len;\n}\nint getmx() {\n\tint mx = -0x3f3f3f3f;\n\tif(!Q1.empty()) mx = max(mx, Q1.front()) ;\n\tif(!Q2.empty()) mx = max(mx, Q2.front()) ;\n\tif(!Q3.empty()) mx = max(mx, Q3.front()) ;\n\tif(!Q1.empty() && mx == Q1.front()) return Q1.pop();\n\tif(!Q2.empty() && mx == Q2.front()) return Q2.pop();\n\tif(!Q3.empty() && mx == Q3.front()) return Q3.pop();\n\treturn mx;\n}\nint main() {\n\tread(n); read(m); read(q); read(u); read(v); read(t); p = double(u)/v;\n\tf(i,1,n) read(a[i]); sort(a+1, a+1+n, greater<int>());\n\t//f(i,1,n) printf(\"a[%d]=%d\\n\", i, a[i]);\n\tf(i,1,n) Q1.push_back(a[i]);\n\twhile(m--){\n\t\tint val = getmx();\n\t\t//printf(\"pop: %d\\n\", val);\n\t\tcut(val);\n\t}\n\tf(i,1,cnt) if(i%t==0) printf(\"%d \", cutqueue[i]); puts(\"\");\n\t//Q1.print(); Q2.print(); Q3.print();\n\tf(i,1,n+cnt) {\n\t\tint val = getmx();\n\t\tif(i%t==0) printf(\"%d \", val);\n\t} puts(\"\");\n}\n```",
        "postTime": 1573289466,
        "uid": 133345,
        "name": "lightup37",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2827 \u3010\u86af\u8693\u3011"
    },
    {
        "content": "### Description\n\n\u672c\u9898\u4e2d\uff0c\u6211\u4eec\u5c06\u7528\u7b26\u53f7\u230ac\u230b\u8868\u793a\u5bf9$c$\u5411\u4e0b\u53d6\u6574\uff0c\u4f8b\u5982\uff1a\u230a3.0\u230b=\u230a3.1\u230b=\u230a3.9\u230b=3\u3002\n\n\u86d0\u86d0\u56fd\u6700\u8fd1\u86af\u8693\u6210\u707e\u4e86\uff01\u9694\u58c1\u8df3\u86a4\u56fd\u7684\u8df3\u86a4\u4e5f\u62ff\u86af\u8693\u4eec\u6ca1\u529e\u6cd5\uff0c\u86d0\u86d0\u56fd\u738b\u53ea\u597d\u53bb\u8bf7\u795e\u5200\u624b\u6765\u5e2e\u4ed6\u4eec\u6d88\u706d\u86af\u8693\u3002\n\n\u86d0\u86d0\u56fd\u91cc\u73b0\u5728\u5171\u6709$n$\u53ea\u86af\u8693\uff08$n$\u4e3a\u6b63\u6574\u6570)\u3002\u6bcf\u53ea\u86af\u8693\u62e5\u6709\u957f\u5ea6\uff0c\u6211\u4eec\u8bbe\u7b2c$i$\u53ea\u86af\u8693\u7684\u957f\u5ea6\u4e3a$a_i(i=1,2,...,n)$\uff0c\u5e76\u4fdd\u8bc1\u6240\u6709\u7684\u957f\u5ea6\u90fd\u662f\u975e\u8d1f\u6574\u6570\uff08\u5373:\u53ef\u80fd\u5b58\u5728\u957f\u5ea6\u4e3a$0$\u7684\u86af\u8693\uff09\u3002\n\n\u6bcf\u4e00\u79d2\uff0c\u795e\u5200\u624b\u4f1a\u5728\u6240\u6709\u7684\u86af\u8693\u4e2d\uff0c\u51c6\u786e\u5730\u627e\u5230\u6700\u957f\u7684\u90a3\u4e00\u53ea\uff08\u5982\u6709\u591a\u4e2a\u5219\u4efb\u9009\u4e00\u4e2a\uff09\u5c06\u5176\u5207\u6210\u4e24\u534a\u3002\u795e\u5200\u624b\u5207\u5f00\u86af\u8693\u7684\u4f4d\u7f6e\u7531\u5e38\u6570$p$(\u662f\u6ee1\u8db3$0<p<1$\u7684\u6709\u7406\u6570)\u51b3\u5b9a\uff0c\u8bbe\u8fd9\u53ea\u86af\u8693\u957f\u5ea6\u4e3a$x$\uff0c\u795e\u5200\u624b\u4f1a\u5c06\u5176\u5207\u6210\u4e24\u53ea\u957f\u5ea6\u5206\u522b\u4e3a\u230a$px$\u230b\u548c$x-$\u230a$px$\u230b\u7684\u86af\u8693\u3002\u7279\u6b8a\u5730\uff0c\u5982\u679c\u8fd9\u4e24\u4e2a\u6570\u7684\u5176\u4e2d\u4e00\u4e2a\u7b49\u4e8e$0$\uff0c\u5219\u8fd9\u4e2a\u957f\u5ea6\u4e3a$0$\u7684\u86af\u8693\u4e5f\u4f1a\u88ab\u4fdd\u7559\u3002\u6b64\u5916\uff0c\u9664\u4e86\u521a\u521a\u4ea7\u751f\u7684\u4e24\u53ea\u65b0\u86af\u8693\uff0c\u5176\u4f59\u86af\u8693\u7684\u957f\u5ea6\u90fd\u4f1a\u589e\u52a0$q$(\u662f\u4e00\u4e2a\u975e\u8d1f\u6574\u5e38\u6570)\u3002\n\n\u86d0\u86d0\u56fd\u738b\u77e5\u9053\u8fd9\u6837\u4e0d\u662f\u957f\u4e45\u4e4b\u8ba1\uff0c\u56e0\u4e3a\u86af\u8693\u4e0d\u4ec5\u4f1a\u8d8a\u6765\u8d8a\u591a\uff0c\u8fd8\u4f1a\u8d8a\u6765\u8d8a\u957f\u3002\u86d0\u86d0\u56fd\u738b\u51b3\u5b9a\u6c42\u52a9\u4e8e\u4e00\u4f4d\u6709\u7740\u6d2a\u8352\u4e4b\u529b\u7684\u795e\u79d8\u4eba\u7269\uff0c\u4f46\u662f\u6551\u5175\u8fd8\u9700\u8981$m$\u79d2\u624d\u80fd\u5230\u6765......($m$\u4e3a\u975e\u8d1f\u6574\u6570\uff09\n\n\u86d0\u86d0\u56fd\u738b\u5e0c\u671b\u77e5\u9053\u8fd9$m$\u79d2\u5185\u7684\u6218\u51b5\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u4ed6\u5e0c\u671b\u77e5\u9053\uff1a\n\n$\\cdot m$\u79d2\u5185\uff0c\u6bcf\u4e00\u79d2\u88ab\u5207\u65ad\u7684\u86af\u8693\u88ab\u5207\u65ad\u524d\u7684\u957f\u5ea6\uff08\u6709$m$\u4e2a\u6570\uff09\n\n$\\cdot m$\u79d2\u540e\uff0c\u6240\u6709\u86af\u8693\u7684\u957f\uff08\u6709$n+m$\u4e2a\u6570)\u3002\n\n\u86d0\u86d0\u56fd\u738b\u5f53\u7136\u77e5\u9053\u600e\u4e48\u505a\u5566\uff01\u4f46\u662f\u4ed6\u60f3\u8003\u8003\u4f60......\n\n### Input\n\n\u7b2c\u4e00\u884c\u5305\u542b\u516d\u4e2a\u6574\u6570$n,m,q,u,v,t$\uff0c\u5176\u4e2d\uff1a$n,m,q$\u7684\u610f\u4e49\u89c1\u95ee\u9898\u63cf\u8ff0\uff1b\n\n$u,v,t$\u5747\u4e3a\u6b63\u6574\u6570\uff1b\u4f60\u9700\u8981\u81ea\u5df1\u8ba1\u7b97$p=u/v$(\u4fdd\u8bc1$0<u<v$)\uff1b$t$\u662f\u8f93\u51fa\u53c2\u6570\uff0c\u5176\u542b\u4e49\u5c06\u4f1a\u5728\u8f93\u51fa\u683c\u5f0f\u4e2d\u89e3\u91ca\u3002\n\n\u7b2c\u4e8c\u884c\u5305\u542b$n$\u4e2a\u975e\u8d1f\u6574\u6570\uff0c\u4e3a$a_1,a_2,...,a_n$\uff0c\u5373\u521d\u59cb\u65f6n\u53ea\u86af\u8693\u7684\u957f\u5ea6\u3002\n\n\u540c\u4e00\u884c\u4e2d\u76f8\u90bb\u7684\u4e24\u4e2a\u6570\u4e4b\u95f4\uff0c\u6070\u597d\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\u3002\n \n$1<=n<=10^5$\uff0c$0<m<7*10^6$\uff0c$0<u<v<10^9$\uff0c$0<=q<=200$\uff0c$1<t<71$\uff0c$0<ai<10^8$\u3002\n\n### Output\n\n\u7b2c\u4e00\u884c\u8f93\u51fa$\\frac{m}{t}$\u4e2a\u6574\u6570\uff0c\u6309\u65f6\u95f4\u987a\u5e8f\uff0c\u4f9d\u6b21\u8f93\u51fa\u7b2c$t$\u79d2\uff0c\u7b2c$2t$\u79d2\uff0c\u7b2c$3t$\u79d2\u2026\u2026\u88ab\u5207\u65ad\u86af\u8693\uff08\u5728\u88ab\u5207\u65ad\u524d\uff09\u7684\u957f\u5ea6\u3002\n\n\u7b2c\u4e8c\u884c\u8f93\u51fa$\\frac{n+m}{t}$\u4e2a\u6574\u6570\uff0c\u8f93\u51fa$m$\u79d2\u540e\u86af\u8693\u7684\u957f\u5ea6\uff1b\u9700\u8981\u6309\u4ece\u5927\u5230\u5c0f\u7684\u987a\u5e8f\u4f9d\u6b21\u8f93\u51fa\u6392\u540d\u7b2c$t$\uff0c\u7b2c$2t$\uff0c\u7b2c$3t$\u2026\u2026\u7684\u957f\u5ea6\u3002\n\n\u540c\u4e00\u884c\u4e2d\u76f8\u90bb\u7684\u4e24\u4e2a\u6570\u4e4b\u95f4\uff0c\u6070\u597d\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\u3002\u5373\u4f7f\u67d0\u4e00\u884c\u6ca1\u6709\u4efb\u4f55\u6570\u9700\u8981\u8f93\u51fa\uff0c\u4f60\u4e5f\u5e94\u8f93\u51fa\u4e00\u4e2a\u7a7a\u884c\u3002\n\n\u8bf7\u9605\u8bfb\u6837\u4f8b\u6765\u66f4\u597d\u5730\u7406\u89e3\u8fd9\u4e2a\u683c\u5f0f\u3002\n \n### Sample Input\n\n3 7 1 1 3 1\n\n3 3 2\n\n### Sample Output\n\n3 4 4 4 5 5 6\n\n6 6 6 5 5 4 4 3 2 2\n\n### Solution\n\n#### \u89e3\u6cd5\u4e00\n\n\u9898\u76ee\u8981\u6c42\u591a\u6b21\u8be2\u95ee\u6700\u5927\u503c\uff0c\u5f88\u660e\u663e\u53ef\u4ee5\u7528\u4e8c\u53c9\u5806\u6c42\u89e3\u3002\n\n\u7528\u4e00\u4e2a\u4f18\u5148\u961f\u5217\u4fdd\u5b58\u6bcf\u53ea\u86af\u8693\uff0c\u6bcf\u6b21\u53d6\u6700\u5927\u503c\u7136\u540e\u780d\u6210\u4e24\u4e2a\u6570\u653e\u56de\u53bb\u3002\n\n\u81f3\u4e8e\u5904\u7406\u6bcf\u53ea\u86af\u8693$+=q$\uff0c\u904d\u5386\u6bcf\u4e2a\u5143\u7d20\u663e\u7136\u4e0d\u73b0\u5b9e\u3002\u8f6c\u53d8\u601d\u8def\uff0c\u8bbe$add$\u8868\u793a\u5230\u76ee\u524d\u4e3a\u6b62\u603b\u5171\u589e\u52a0\u7684\u957f\u5ea6\uff0c\u7531\u4e8e\u8fd0\u52a8\u662f\u76f8\u4e92\u7684\uff0c\u9664\u4e86\u65b0\u780d\u51fa\u6765\u7684\u4e24\u53ea\u4ee5\u5916\u6240\u6709\u86af\u8693\u589e\u957f$q$\u7b49\u4ef7\u4e8e\u5c06\u65b0\u780d\u51fa\u6765\u7684\u86af\u8693\u51cf\u53bb$q$\u3002\u6240\u4ee5\u6211\u4eec\u5728\u6bcf\u6b21$pop$\u65f6\u5c06\u62ff\u51fa\u6765\u7684\u86af\u8693\u957f\u5ea6$+=add$\uff0c$push$\u65f6\u4e24\u6761\u86af\u8693\u957f\u5ea6$-=add$\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O((n+m)log_2(n+m))$\uff0c\u9884\u671f\u5f97\u5206$65$\uff0c\u5361\u5e38\u4f18\u79c0\u52a0\u4e0a\u5904\u7406\u65f6\u8f93\u51fa\u80fd\u5f97$85$\u5206\u3002~~\u5176\u5b9e\u8003\u573a\u4e0a\u66b4\u529b$85$\u5206\u5df2\u7ecf\u5f88\u53ef\u4ee5\u4e86$qwq$~~\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5 + 10;\nconst int M = 7e6 + 10;\nint n, m, q, u, v, t, num, add, now, e1, e2;\ndouble p;\npriority_queue<int, vector<int>, less<int> > Q;\n\ninline int read() {\n    int res = 0, flag = 1;\n    char c = getchar();\n    for(; !isdigit(c); c = getchar()) if(c == '-') flag = -1;\n    for(; isdigit(c); c = getchar()) res = (res<<3) + (res<<1) + (c^48);\n    return res * flag;\n}\n\nint main() {\n    n = read(), m = read(), q = read(), u = read(), v = read(), t = read();\n    p = (double)u/v;\n    for(register int i = 1; i <= n; i++) {\n        register int k = read();\n        Q.push(k);\n    }\n    for(register int i = 1; i <= m; i++) {\n        now = Q.top() + add;\n        Q.pop();\n        e1 = floor((double)now*p), e2 = now - e1;\n        add += q;\n        e1 -= add, e2 -= add;\n        Q.push(e1), Q.push(e2);\n        if(!(i%t)) printf(\"%d \", now);\n    }\n    printf(\"\\n\");\n    for(int i = 1; !Q.empty(); i++) {\n        if(!(i%t)) printf(\"%d \", Q.top() + add);\n        Q.pop();\n    }\n    return 0;\n}\n```\n\n#### \u89e3\u6cd5\u4e8c\n\n\u8fde\u4e8c\u53c9\u5806\u90fd\u4e0d\u9700\u8981\u3002\n\n**\u5f15\u7406\uff1a**\n\n\u5bf9\u4e8e\u5148\u780d\u7684\u86af\u8693\u5206\u6210\u7684\u4e24\u6bb5\u4e2d\u7684\u4efb\u610f\u4e00\u6bb5\uff0c\u5b83\u4e00\u5b9a\u6bd4\u540e\u5207\u6389\u7684\u86af\u8693\u957f\u3002\n\n**\u8bc1\u660e\uff1a**\n\n\u53cd\u8bc1\u6cd5\u3002\n\n\u5047\u8bbe\u5b58\u5728\u8fd9\u6837\u4e00\u53ea\u957f\u5ea6\u4e3a$a_i$\u7684\u86af\u8693\uff0c\u5b83\u88ab\u780d\u540e$T$\u79d2\u949f\u780d\u7684\u90a3\u53ea\u86af\u8693\u5206\u6210\u7684\u4e24\u6bb5\u957f\u5ea6\u6700\u5927\u3002\u8bbe\u8fd9\u53ea\u86af\u8693$T$\u79d2\u524d\u7684\u957f\u5ea6\u4e3a$a_j$\u3002\u5219\uff1a\n\n$\\cdot pa_i+Tq\u2264(Tq+a_j)p$\n\n\u5c55\u5f00\uff0c\u5f97$pa_i+Tq\u2264Tpq+pa_j$\u3002\n\n\u56e0\u4e3a\u5f53$a_i$\u88ab\u780d\u65f6\u4e00\u5b9a\u6709$a_i>a_j$\uff0c\n\n\u6240\u4ee5$pa_i>pa_j$\u3002\n\n\u53c8\u56e0\u4e3a$0<p<1$\uff0c\n\n\u6240\u4ee5$pa_i+Tq>Tpq+pa_j$\uff0c\u4e0e\u4e4b\u524d\u7ed3\u8bba$pa_i+Tq\u2264Tpq+pa_j$\u77db\u76fe\uff0c\u6545\u5047\u8bbe\u4e0d\u6210\u7acb\uff0c\u539f\u547d\u9898\u6210\u7acb\u3002\n\n**\u8bc1\u6bd5\u3002**\n\n\u4e8e\u662f\u53ef\u4ee5\u8003\u8651\u5efa\u7acb\u4e09\u4e2a\u961f\u5217\uff0c\u5176\u4e2d$now$\u5b58\u50a8\u539f\u59cb\u86af\u8693\uff0c$cut1$\u548c$cut2$\u5206\u522b\u5b58\u50a8\u5207\u5272\u6210\u7684\u4e24\u53ea\u86af\u8693\uff0c\u6839\u636e\u5f15\u7406\uff0c\u8f93\u51fa\u65f6\u6bcf\u6b21\u53d6\u4e09\u4e2a\u961f\u5934\u7684\u6700\u5927\u503c\u5373\u53ef\u3002\u86af\u8693\u957f\u5ea6\u589e\u91cf\u5904\u7406\u65b9\u6cd5\u540c\u4e0a\u3002\u65f6\u95f4\u590d\u6742\u5ea6$O(n+m)$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int INF = ~0U>>1;\nconst int M = 7e6 + 10;\nint cut1[M],now[M],cut2[M];\nint n, m, q, u, v, t, add, h, h1, h2, t0, t1, t2;\ndouble p;\n\ninline int read() {\n    int res = 0, flag = 1;\n    char c = getchar();\n    for(; !isdigit(c); c = getchar()) if(c == '-') flag = -1;\n    for(; isdigit(c); c = getchar()) res = (res<<3) + (res<<1) + (c^48);\n    return res * flag;\n}\n\ninline bool cmp(const int &x,const int &y){\n    return x > y;\n}\n\nint main(){\n    n = read(), m = read(), q = read(), u = read(), v = read(), t = read();\n    p = (double)u/v;\n    for(t0 = 1; t0 <= n; t0++) now[t0] = read();\n    t0--;\n    t1 = t2 = 0;\n    h = h1 = h2 = 1;\n    sort(now+1, now+t0+1, cmp);\n    int top;\n    for(register int i = 1; i <= m; i++){\n        if(h > t0) {\n            if(cut1[h1] > cut2[h2]) top = cut1[h1++];\n            else top = cut2[h2++];\n        }\n        else if(now[h]>=cut1[h1] && now[h]>=cut2[h2]) top = now[h], h++;\n        else if(cut1[h1]>=cut2[h2] && now[h]<=cut1[h1]) top = cut1[h1], h1++;\n        else top = cut2[h2], h2++;\n        top += add;\n        int e1 = floor((double)top*p), e2 = top - e1;\n        add += q;\n        e1 -= add, e2 -= add;\n        cut1[++t1] = e1, cut2[++t2] = e2;\n        if(!(i%t)) printf(\"%d \", top);\n    }\n    printf(\"\\n\");\n    int i=1;\n    while(h<=t0 || h1<=t1 || h2<=t2) {\n        int flag, Max = -INF;\n        if(h <= t0 && now[h] > Max) Max = now[h], flag = 1;\n        if(h1 <= t1 && cut1[h1] > Max) Max = cut1[h1], flag = 2;\n        if(h2 <= t2 && cut2[h2] > Max) Max = cut2[h2], flag = 3;\n        if(flag == 1) h++;\n        else if(flag == 2) h1++;\n        else h2++;\n        if(!(i%t)) printf(\"%d \", Max + add);\n        i++;\n    }\n    return 0;\n}\n```",
        "postTime": 1541763747,
        "uid": 47996,
        "name": "Zenurik",
        "ccfLevel": 0,
        "title": "[NOIP2016]\u86af\u8693"
    },
    {
        "content": "//\u9519\u522b\u5b57\u4fee\u6b63\uff0c\u8bf7\u7ba1\u7406\u5458\u5220\u6389\u8fd9\u53e5\u8bdd\n\u8fd9\u9053\u9898luogu\u4e0a\u6709\u4e0d\u5c11\u4f18\u5148\u961f\u5217\u7684\u9898\u89e3\u90fd\u662f\u9519\u7684\u3002\u3002\u3002\u3002\n\n\uff08\u9762\u5305\u8bf4\uff1a\u201d\u5927\u6982\u662fchen_zhe\u53c8\u52a0\u5f3a\u6570\u636e\u4e86\uff0c~\u9003\u201c\uff09\n\n\u8fd9\u9053\u9898\u6211\u4e00\u5f00\u59cb\u6309\u4f18\u5148\u961f\u5217\u505a\uff0c\u5f00\u4e863\u4e2a\u5806\u8fd8T\u5230\u98de\u8d77\n\n\u540e\u6765\u53d1\u73b0\u4e00\u70b9\uff1a\u201c\u65b0\u5207\u7684\u4e00\u5b9a\u6bd4\u524d\u9762\u7684\u77ed\u54ce\u3002\u3002\u3002\u201d\n\n\u7136\u540e\u5c31A\u4e86\u3002\u3002\u3002\n\n\u5355\u8c03\u6027\u600e\u4e48\u6765\u7684\u5462\uff1f\u6211\u4eec\u6765\u8bc1\u660e\u4e00\u4e0b\uff1a\n\n\u9996\u5148\uff0c\u6839\u636e\u9898\u610f\uff0c\u6bcf\u4e00\u6b21\u5207\u7684\u86af\u8693\u90fd\u662f\u6700\u957f\u7684\n\n\u6211\u5f00\u4e863\u4e2a\u6570\u7ec4\uff0c\u5206\u522b\u8868\u793a\u539f\u59cb\u86af\u8693\uff0c\u88ab\u5207\u540e\u8f83\u957f\u7684\u86af\u8693\u548c\u88ab\u5207\u540e\u8f83\u77ed\u7684\u86af\u8693\n\n\u6240\u4ee5\u8fd9\u6b21\u5207\u7684\u86af\u8693\u957f\u5ea6cd2<=\u4e0a\u6b21\u5207\u7684\u86af\u8693\u957f\u5ea6cd1+q\n\n\u90a3\u4e48\u5207\u4e0b\u6765\u7684\u4e24\u6bb5\u5206\u522b\u662f\uff1a\nL1=\uff08cd1+q\uff09*p=cd1*p+q*p\n\nL2=cd1+q-L1;\n\n\u6211\u4eec\u5047\u8bbep>0.5\n\n\uff08\u5c0f\u4e8e\u4ea4\u6362L1,L2\u5373\u53ef\uff09\n\n\u90a3\u4e48L1\u5e94\u8be5\u653e\u5728\u8f83\u5927\u6570\u7ec4\u91cc\n\n\u8f83\u5927\u6570\u7ec4\u4e2d\u6700\u77ed\u7684\u5e94\u8be5\u662f:\n\ncd1*p+q\n\n\u56e0\u4e3aq\u662f\u5927\u4e8e0\u7684\u6b63\u6574\u6570\n\n\u6240\u4ee5\u8f83\u5927\u6570\u7ec4\u4e2d\u6700\u77ed\u7684\u4e00\u5b9a\u6bd4\u65b0\u5207\u51fa\u6765\u7684\u957f\n\n\u5373\u4e3a\u5355\u8c03\u6027\n\n\u95ee\u9898\u89e3\u51b3\u3002\u3002\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#define rii register int i\n#define rij register int j\n#define inf 19260810700\nusing namespace std;\nlong long x[10000005],y[10000005],z[10000005],n,m,q,t;\nlong long u,v;\nlong long headx,heady,headz,tailx,taily,tailz;\nbool cmp(int lk,int kl)\n{\n    return lk>kl;\n}\nint main()\n{\n    cin>>n>>m>>q>>u>>v>>t;\n    for(rii=1;i<=n;i++)\n    {\n        scanf(\"%d\",&x[i]);\n    }\n    tailx=n;\n    headx=0;\n    sort(x+1,x+n+1,cmp);\n    for(rij=1;j<=m;j++)\n    {\n        long long ltt=-inf;\n        long long kkk=-inf;\n        long long lzn=-inf;\n        if(headx!=tailx)\n        {\n            ltt=x[headx+1];\n        }\n        if(heady!=taily)\n        {\n            kkk=y[heady+1];\n        } \n        if(headz!=tailz)\n        {\n            lzn=z[headz+1];\n        }\n        ltt=max(ltt,max(kkk,lzn));\n        if(ltt==kkk)\n        {\n            heady++;\n            y[heady]=0;\n        }\n        else\n        {\n            if(ltt==lzn)\n            {\n                headz++;\n                z[headz]=0;\n            }\n            else\n            {\n                headx++;\n                x[headx]=0;\n            }\n        }\n        ltt+=(j-1)*q;\n        if(j%t==0)\n        {\n            printf(\"%lld \",ltt);\n        }\n        long long len=ltt;\n        long long l1=len*u;\n        l1/=v;\n        long long l2=len-l1;\n        l1-=q*j;\n        l2-=q*j;\n        tailz++;\n        taily++;\n        y[taily]=l1;\n        z[tailz]=l2;\n    }\n    printf(\"\\n\");\n    for(rii=1;i<=n+m;i++)\n    {\n           long long ltt=-inf;\n        long long kkk=-inf;\n        long long lzn=-inf;\n        if(headx!=tailx)\n        {\n            ltt=x[headx+1];\n        }\n        if(heady!=taily)\n        {\n            kkk=y[heady+1];\n        } \n        if(headz!=tailz)\n        {\n            lzn=z[headz+1];\n        }\n        ltt=max(ltt,max(kkk,lzn));\n        if(ltt==kkk)\n        {\n            heady++;\n        }\n        else\n        {\n            if(ltt==lzn)\n            {\n                headz++;\n            }\n            else\n            {\n                headx++;\n            }\n        }\n        if(i%t==0)\n        {\n            printf(\"%lld \",ltt+m*q);\n        }\n    }\n}\n```",
        "postTime": 1532654847,
        "uid": 52176,
        "name": "ztz11",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2827 \u3010\u86af\u8693\u3011"
    },
    {
        "content": "\u7eaf\u6a21\u62df\uff0c\u6211\u4eec\u7528\u4e09\u4e2a\u961f\u5217\uff0c\u7b2c\u4e00\u4e2a\u5b58\u539f\u59cb\u961f\u5217\uff08\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff09\uff0c\u7b2c\u4e8c\u4e2a\u5b58\u5207\u5b8c\u540e\u8f83\u957f\u7684\u90a3\u4e2a\u5b50\u86af\u8693\uff0c\u7b2c\u4e09\u4e2a\u5b58\u5207\u5b8c\u540e\u8f83\u77ed\u7684\u90a3\u4e2a\u5b50\u86af\u8693\u3002\u90a3\u4e48\u53ef\u4ee5\u59cb\u7ec8\u4fdd\u6301\u4e09\u4e2a\u961f\u5217\u90fd\u662f\u4e25\u683c\u9012\u51cf\u7684\u3002\n\n\u6bcf\u6b21\u4ece\u4e09\u4e2a\u961f\u5217\u4e2d\u9009\u51fa\u6700\u957f\u7684\u90a3\u4e2a\u86af\u8693\uff0c\u5207\u5b8c\u540e\u5206\u522b\u538b\u5165q1,q2\uff0c\u4e00\u76f4\u6a21\u62df\u5373\u53ef\u3002\n\n\n\n\n\n\n\n```cpp\n//#include<math.h>\n//double ceil(double x) //\u5411\u4e0a\u53d6\u6574\n//double floor(double x) //\u5411\u4e0b\u53d6\u6574\n#include<iostream>\n#include<cstring>\n#include<cmath>\n#include<cstdio>\n#include<algorithm>\n#define R read()\n#define re register\nusing namespace std;\nconst int maxn = 1e7;\nint n,m,q,u,v,t;\nint q0[maxn],h0=1,t0=0,q1[maxn],h1=1,t1=0,q2[maxn],h2=1,t2=0;\nint O1,O2;\ndouble p;\nbool cmp(int x,int y)\n{\n    return x > y;\n}\ninline int read();\nint main()\n{\n    n = R;m = R;q = R;u = R;v = R;t = R;\n    for(re int i=1;i<=n;i++) {\n        q0[i] = R;\n        q0[i] += m*q;//\u5148\u628a\u86af\u8693\u53ef\u80fd\u957f\u7684\u957f\u5ea6\u52a0\u4e0a\uff0c\u62ff\u51fa\u6765\u65f6\u518d\u628a\u591a\u7b97\u7684\u90e8\u5206\u9664\u53bb \n    }\n    sort(q0+1,q0+n+1,cmp);\n    t0 = n;p = (u*1.0)/(v*1.0);\n    O1 = m/t;O2 = (n+m)/t;//\u4e24\u884c\u5206\u522b\u5e94\u8be5\u8f93\u51fa\u7684\u6570\u7684\u6570\u91cf \n    for(re int i=1,a=0,b=0,c=0,x1,x2,d;i<=m;i++) {//\u6a21\u62df\u5207\u5272 \n        a = 0;b = 0;c = 0;\n        if(h0<=t0) a = q0[h0];\n        if(h1<=t1) b = q1[h1];\n        if(h2<=t2) c = q2[h2];\n        d = max(a,max(b,c));//\u9009\u51fa\u6700\u957f\u7684 \n        if(a == d && h0<=t0) ++h0;\n        else if(b == d && h1<=t1) ++h1;\n        else ++h2;//\u628a\u9009\u7684\u90a3\u6761\u86af\u8693\u5f39\u51fa\u961f\u5217 \n        d -= (m-i+1)*q;\n        if(i%t == 0 && O1) {\n            printf(\"%d \",d);\n            --O1;\n```\n}//\u8f93\u51fa\n```cpp\n        x1 = floor(p*(1.0*d));\n        x2 = d - x1;\n        if(x1 > x2) {\n            q1[++t1] = x1+(m-i)*q;\n            q2[++t2] = x2+(m-i)*q;\n        }\n        else {\n            q1[++t1] = x2+(m-i)*q;\n            q2[++t2] = x1+(m-i)*q;\n```\n}//\u5206\u522b\u538b\u5165\u53e6\u5916\u4e24\u4e2a\u961f\u5217\n\n```cpp\n    }\n    cout<<endl;\n    int i=0,a,b,c,d;\n    while(O2) {//\u5224\u65ad\u5269\u4e0b\u7684\u957f\u5ea6\uff0c\u8fc7\u7a0b\u76f8\u4f3c \n        ++i;\n        a = 0;b = 0;c = 0;\n        if(h0<=t0) a = q0[h0];\n        if(h1<=t1) b = q1[h1];\n        if(h2<=t2) c = q2[h2];\n        d = max(a,max(b,c));\n        if(i%t == 0 && O2) {\n            printf(\"%d \",d);\n            --O2;\n        }\n        if(a == d && h0<=t0) ++h0;\n        else if(b == d && h1<=t1) ++h1;\n        else ++h2;\n    }\n    return 0;\n}\ninline int read()\n{\n    int w=1,x=0;\n    char ch = getchar();\n    while(ch < '0' || ch > '9') {\n        if(ch == '-') w = -1;\n        ch = getchar();\n    }\n    while(ch <= '9' && ch >= '0') {\n        x = (x<<1) + (x<<3) + ch - '0';\n        ch = getchar();\n    }\n    return x*w;\n}\n```",
        "postTime": 1510057141,
        "uid": 17326,
        "name": "\u6797\u5fd7\u6770",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2827 \u3010\u86af\u8693\u3011"
    },
    {
        "content": "\u8fd8\u6ca1\u6709pascal\u9898\u89e3\u6765\u53d1\u4e00\u4e2a\n\n###\u8981\u7528\u4e8c\u53c9\u5806\uff1f\n\n###\u8981\u7528O2\u4f18\u5316\uff1f\n\n###\u8981\u7528\u3002\u3002\u3002\n\n\u5728\u4e07\u80fd\u7684PASCAL\u9762\u524d\uff0c\u8fd9\u4e9b\u90fd\u592a\u96be\u4e86\u3002\uff08\u5443\u3002\u3002\u3002\uff09\n\n\u4f46\u662f\uff0c\u6211\u4eec\u80fd\u591f\u6ce8\u610f\u5230\uff0c\u5982\u679c\u628a\u7b2c1s\u6700\u957f\u7684\u90a3\u53ea\u86af\u8693\u5207\u6210\u4e24\u6bb5\uff0c\u518d\u628a\u7b2c2s\u6700\u957f\u7684\u86af\u8693\u5207\u6210\u4e24\u6bb5\uff0c\u518d\u628a\u7b2c3s\u6700\u957f\u7684\u86af\u8693\u5207\u6210\u4e24\u6bb5\uff0c\u5982\u679c\u8fd93s\u5207\u7684\u86af\u8693\u4e0d\u662f\u88ab\u5207\u8fc7\u7684\uff0c\u90a3\u4e48\u7b2c1s\u5207\u51fa\u7684\u86af\u8693\u4e2d\u8f83\u957f\u7684>\u7b2c2s\u5207\u51fa\u7684\u86af\u8693\u4e2d\u8f83\u957f\u7684>\u7b2c3s\u5207\u51fa\u7684\u86af\u8693\u4e2d\u8f83\u957f\u7684\uff0c\u8f83\u77ed\u7684\u4e5f\u662f\u5982\u6b64\u3002\u4e8e\u662f\uff0c\u6211\u4eec\u5207\u6389\u4e00\u53ea\u86af\u8693\uff0c\u628a\u5b83\u5207\u51fa\u7684\u4e24\u53ea\u86af\u8693\u5206\u522b\u52a0\u5165\u5207\u51fa\u7684\u8f83\u957f\u86af\u8693\u961f\u5217\u4e0e\u5207\u51fa\u7684\u8f83\u77ed\u86af\u8693\u961f\u5217\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u961f\u5217\u90fd\u662f**\u6709\u5e8f\u7684**\u3002\n\n\u90a3\u4e48\uff0c\u957f\u5ea6\u7684\u589e\u52a0\u600e\u4e48\u529e\u5462\uff1f\u6539\u5c11\u4e0d\u6539\u591a\uff0c\u6211\u4eec\u53ea\u9700\u628a\u5207\u9664\u7684\u86af\u8693\u51cf\u53bbq\u5373\u53ef\uff0c\u5728\u7a0b\u5e8f\u4e2d\u901a\u8fc7lj\u6765\u5b8c\u6210\u3002\u6ce8\u610f\uff1a\u5f53\u5207\u9664\u86af\u8693\u65f6\uff0c\u4e00\u5b9a\u8981\u5148\u628a\u88ab\u5207\u86af\u8693\u7684\u957f\u5ea6\u52a0\u4e0alj\u540e\u5728\u4e58p\uff0c\u88ab\u5207\u9664\u7684\u86af\u8693\u5219\u8981\u51cf\u53bblj\u4e0ep\uff08\u7a0b\u5e8f\u4e2d\u5df2\u5728\u524d\u9762\u52a0\u8fc7q\u4e86\uff0c\u6240\u4ee5\u4e0d\u7528\u518d\u51cf\uff09\u3002\n\n\u53e6\u5916\uff0c\u4e00\u5b9a\u8981\u6ce8\u610f\u8303\u56f4\u554a\uff0cint64\u554a\uff0c\u6211\u88ab\u5751\u4e863\u6b21\u3002\u3002\u3002\n\n\u8d34\u4ee3\u7801\n\n```pas\nvar\n  i,q,m,n,z1,z2,z3,w1,w2,w3,t,gg:longint;\n  i1,lj,q1,q2,q3,j1,j2,u,v:int64;\n  a,b,c:array[1..800000000] of longint;\n  p:extended;\n  procedure qsort(l,r:longint);\n  var\n    i,j,k,t:longint;\n  begin\n    i:=l; j:=r; k:=a[(i+j)div 2];\n    repeat\n      while a[i]>k do inc(i);\n      while a[j]<k do dec(j);\n      if i<=j then\n              begin\n                t:=a[i];\n                a[i]:=a[j];\n                a[j]:=t;\n                inc(i);\n                dec(j);\n              end;\n    until i>j;\n    if i<r then qsort(i,r);\n    if j>l then qsort(l,j);\n  end;\n  procedure swap(var a,b:int64);\n  var\n    t:int64;\n  begin\n    t:=a; a:=b; b:=t;\n  end;\nbegin\n  readln(n,m,q,u,v,t);\n  p:=u/v;\n  for i:=1 to n do\n    read(a[i]);\n  qsort(1,n);\n  z1:=1;\n  z2:=1;\n  z3:=1;\n  w1:=n;\n  w2:=0;\n  w3:=0;\n  for i:=1 to m do\n  begin\n    if z1>n then a[z1]:=-maxlongint;\n    q1:=a[z1]+lj;\n    q2:=b[z2]+lj;\n    q3:=c[z3]+lj;\n    lj:=lj+q;\n    if (q1>q2) then\n               if q1>q3 then gg:=1\n                        else gg:=3\n               else\n               if q2>q3 then gg:=2\n                        else gg:=3;\n    case gg of\n     1:begin\n         if i mod t=0 then write(q1,' ');\n         j1:=trunc(q1*p);\n         j2:=q1-j1;\n         if j1<j2 then swap(j1,j2);\n         inc(w2);\n         b[w2]:=j1-lj;\n         inc(w3);\n         c[w3]:=j2-lj;\n         inc(z1);\n       end;\n     2:begin\n         if i mod t=0 then write(q2,' ');\n         j1:=trunc(q2*p);\n         j2:=q2-j1;\n         if j1<j2 then swap(j1,j2);\n         inc(w2);\n         b[w2]:=j1-lj;\n         inc(w3);\n         c[w3]:=j2-lj;\n         inc(z2);\n       end;\n     3:begin\n         if i mod t=0 then write(q3,' ');\n         j1:=trunc(q3*p);\n         j2:=q3-j1;\n         if j1<j2 then swap(j1,j2);\n         inc(w2);\n         b[w2]:=j1-lj;\n         inc(w3);\n         c[w3]:=j2-lj;\n         inc(z3);\n       end;\n    end;\n  end;\n  writeln;\n  i1:=0;\n  while (z1<=w1)or(z2<=w2)or(z3<=w3) do\n  begin\n    inc(i1);\n    if z1>w1 then a[z1]:=-maxlongint;\n    if z2>w2 then b[z2]:=-maxlongint;\n    if z3>w3 then c[z3]:=-maxlongint;\n    q1:=a[z1]+lj;\n    q2:=b[z2]+lj;\n    q3:=c[z3]+lj;\n    if (q1>q2) then\n               if q1>q3 then gg:=1\n                        else gg:=3\n               else\n               if q2>q3 then gg:=2\n                        else gg:=3;\n    if i1 mod t=0 then\n                 begin\n                   if gg=1 then write(q1,' ');\n                   if gg=2 then write(q2,' ');\n                   if gg=3 then write(q3,' ');\n                 end;\n    if gg=1 then inc(z1);\n    if gg=2 then inc(z2);\n    if gg=3 then inc(z3);\n  end;\n  writeln;\n  readln;\n  readln;\nend.\n```",
        "postTime": 1506181864,
        "uid": 48804,
        "name": "ryycpp",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2827 \u3010\u86af\u8693\u3011"
    },
    {
        "content": "\u9996\u5148\u6211\u4eec\u7ed9\u86af\u8693\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u3002\u7136\u540e\u53ef\u4ee5\u53d1\u73b0\uff0c\u6bcf\u6b21\u5207\u51fa\u6765\u7684\u86af\u8693\u4e2d\uff0c\u957f\u7684\u90a3\u5199\u6309\u5207\u7684\u987a\u5e8f\u5f62\u6210\u975e\u4e0a\u5347\u5e8f\u5217\uff0c\u77ed\u7684\u90a3\u4e9b\u4e5f\u5982\u6b64\u3002\u90a3\u4e48\u6211\u4eec\u7ef4\u62a43\u4e2a\u5355\u8c03\u961f\u5217\u5373\u53ef\uff08\u539f\u59cb\u86af\u8693\u4e5f\u7b97\u4e00\u4e2a\u5355\u8c03\u961f\u5217\uff09\uff0c\u6bcf\u6b21\u627e\u4e09\u4e2a\u961f\u5217\u961f\u9996\u5143\u7d20\u6700\u5927\u7684\u90a3\u4e2a\uff0c\u628a\u8fd9\u4e2a\u86af\u8693\u5207\u6389\uff0c\u7136\u540e\u5206\u522b\u63d2\u5165\u4e24\u4e2a\u5355\u8c03\u961f\u5217\u4e2d\u3002\u6700\u540e\u4e5f\u6309\u7167\u8fd9\u6837\u6bcf\u6b21\u627e\u51fa\u6700\u5927\u7684\uff0c\u6309\u8981\u6c42\u628a\u8be5\u8f93\u51fa\u7684\u8f93\u51fa\u5373\u53ef\u3002\u7531\u4e8e\u6700\u540e\u6709n+m\u53ea\u86af\u8693\uff0c\u6240\u4ee5\u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6O(n+m)\u3002\n\nUOJ\u7684Extra Test\u4f1a\u5361\u4f60pp\u7684\u7cbe\u5ea6\uff0c\u8981\u7528long double\u3002\uff08\u867d\u7136\u6d1b\u8c37\u4e0a\u6ca1\u6709\u8fd9\u79cd\u70b9\uff09\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cctype>\nusing namespace std;\nint y[7200005],d[7200005],x[7200005],ly,ry,ld,rd,lx,rx,n,m,q,u,v,t,pl,bufpos;\nlong double p;\nchar buf[30000000];\ninline void init(){\n    bufpos=0;\n    buf[fread(buf,1,30000000,stdin)]='\\0';\n}\ninline int readint(){\n    int p=0;\n    for(;!isdigit(buf[bufpos]);bufpos++);\n    for(;isdigit(buf[bufpos]);bufpos++)\n    p=(p<<3)+(p<<1)+buf[bufpos]-'0';\n    return p;\n}\nbool com(int a,int b){return a>b;}\nint main(){\n    init();\n    memset(y,129,sizeof y);\n    n=readint(),m=readint(),q=readint(),u=readint(),v=readint(),t=readint();\n    p=(long double)u/v;\n    for(int i=1;i<=n;++i)y[i]=readint();\n    sort(y+1,y+n+1,com);\n    ly=ld=lx=1;\n    ry=n;\n    rd=rx=pl=0;\n    memset(d,129,sizeof d);\n    memset(x,129,sizeof x);\n    for(int i=1;i<=m;++i){\n        int yb=y[ly]+pl,db=d[ld]+pl,xb=x[lx]+pl;\n        pl+=q;\n        if(db>xb){\n            if(db>yb){\n                if(i%t==0)printf(\"%d \",db);\n                int a=(int)(db*p);\n                int b=db-a;\n                if(a<b)swap(a,b);\n                d[++rd]=a-pl;\n                x[++rx]=b-pl;\n                ++ld;\n            }else{\n                if(i%t==0)printf(\"%d \",yb);\n                int a=(int)(yb*p);\n                int b=yb-a;\n                if(a<b)swap(a,b);\n                d[++rd]=a-pl;\n                x[++rx]=b-pl;\n                ++ly;\n            }\n        }else{\n            if(xb>yb){\n                if(i%t==0)printf(\"%d \",xb);\n                int a=(int)(xb*p);\n                int b=xb-a;\n                if(a<b)swap(a,b);\n                d[++rd]=a-pl;\n                x[++rx]=b-pl;\n                ++lx;\n            }else{\n                if(i%t==0)printf(\"%d \",yb);\n                int a=(int)(yb*p);\n                int b=yb-a;\n                if(a<b)swap(a,b);\n                d[++rd]=a-pl;\n                x[++rx]=b-pl;\n                ++ly;\n            }\n        }\n    }\n    printf(\"\\n\");\n    int ct=0;\n    while(ly<=ry||ld<=rd||lx<=rx){\n        ++ct;\n        int yb=y[ly]+pl,db=d[ld]+pl,xb=x[lx]+pl;\n        if(db>xb){\n            if(db>yb){\n                if(ct%t==0)printf(\"%d \",db);\n                ++ld;\n            }else{\n                if(ct%t==0)printf(\"%d \",yb);\n                ++ly;\n            }\n        }else{\n            if(xb>yb){\n                if(ct%t==0)printf(\"%d \",xb);\n                ++lx;\n            }else{\n                if(ct%t==0)printf(\"%d \",yb);\n                ++ly;\n            }\n        }\n    }\n    printf(\"\\n\");\n    return 0;\n}\n```",
        "postTime": 1505392714,
        "uid": 13745,
        "name": "kanloner",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2827 \u3010\u86af\u8693\u3011"
    },
    {
        "content": "##**\u301060-85pts\u3011\u5806**\n\n- \u5f88\u5bb9\u6613\u60f3\u5230\u7528\u5806\u6765\u7ef4\u62a4\u6240\u6709\u86af\u8693\u7684\u957f\u5ea6\uff1a\n\n- \u9488\u5bf9\u7b2c\u4e00\u95ee\uff0c\u6211\u4eec\u6bcf\u6b21\u53d6\u51fa\u6700\u957f\u7684\u90a3\u53ea\u86af\u8693\uff0c\u5c06\u5176\u5207\u5272\u540e\u518d\u6b21\u63d2\u5165\u5806\u4e2d\n\n- \u9488\u5bf9\u7b2c\u4e8c\u95ee\uff0c\u6211\u4eec\u76f4\u63a5\u5c06\u5806\u4e2d\u6240\u6709\u5143\u7d20\u6309\u5927\u5c0f\u987a\u5e8f\u53d6\u51fa\n\n- \u4f46\u8fd9\u6837\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u4f55\u5904\u7406\u6bcf\u6b21\u53d6\u51fa\u540e\uff0c\u5176\u4f59\u86af\u8693\u7684\u957f\u5ea6\u90fd\u589e\u52a0$q$\uff1f\n\n- \u6211\u4eec\u53e6\u5916\u8bb0\u4e00\u4e2a\u53d8\u91cf$Add$\uff0c\u8868\u793a\u5f53\u524d\u6bcf\u6761\u86af\u8693\uff08\u4e0d\u8003\u8651\u88ab\u5207\u5272\u7684\uff09\u7684\u957f\u5ea6\u5df2\u7ecf\u589e\u52a0\u4e86\u591a\u5c11\uff0c\u6bcf\u6b21\u53d6\u51fa\u7684\u65f6\u5019\u52a0\u4e0a$Add$\u5c31\u8868\u793a\u73b0\u5728\u7684\u5b9e\u9645\u957f\u5ea6\uff08\u5f53\u7136\uff0c\u63d2\u5165\u5806\u4e2d\u65f6\u8fd8\u8981\u518d\u51cf\u56de\u53bb\uff09\n\n- \u8003\u8651\u5230\u5207\u5272\u540e\u7684\u86af\u8693\u4e0d\u80fd\u589e\u52a0\u957f\u5ea6\uff0c\u6211\u4eec\u628a\u95ee\u9898\u8f6c\u5316\uff1a\u76f4\u63a5\u5c06\u8fd9\u5207\u5272\u51fa\u7684\u4e24\u53ea\u86af\u8693\u957f\u5ea6\u90fd\u51cf\u53bb$q$\u518d\u63d2\u5165\u5806\uff0c\u5c31\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\n\n- \u8fd9\u6837\u7684\u603b\u590d\u6742\u5ea6\u4e3a$O((n + m)log(n + m))$\uff0c\u5e94\u8be5\u662f\u80fd\u901a\u8fc7\u5927\u90e8\u5206\u6570\u636e\u70b9\u7684\n\n##**Code-1**\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n\nusing namespace std;\nconst int N = 1e5 + 5, M = 7e6 + 5;\nint n, m, q, u, v, t, Add;\ndouble p;\n\nstruct BigRt\n{\n    int g[N + M], l;\n    \n    inline void Pop()\n    {\n        g[1] = g[l--];\n        int now = 1, nxt = 2, res = g[1];\n        while (nxt <= l)\n        {\n            if (nxt < l && g[nxt | 1] > g[nxt]) nxt |= 1;\n            if (res < g[nxt])\n             g[now] = g[nxt], nxt = (now = nxt) << 1;\n            else break;\n        }\n        g[now] = res;\n    }\n    \n    inline void Push(const int &res)\n    {\n        g[++l] = res;\n        int now = l, nxt = l >> 1;\n        while (nxt)\n        {\n            if (res > g[nxt])\n             g[now] = g[nxt], nxt = (now = nxt) >> 1;\n            else break;\n        }\n        g[now] = res;\n    }\n}Q;\n\ninline int get()\n{\n    char ch; int res = 0; bool f = true;\n    while (((ch = getchar()) < '0' || ch > '9') && ch != '-');\n    if (ch == '-') f = false; \n     else res = ch - '0';\n    while ((ch = getchar()) >= '0' && ch <= '9')\n     res = (res << 3) + (res << 1) + ch - '0';\n    return f? res : -res;\n}\n\ninline void put(int x)\n{\n    if (x < 0)\n     x = -x, putchar('-'); \n    if (x > 9) put(x / 10);\n    putchar(x % 10 + 48); \n}\n\ninline bool cmp(const int &x, const int &y) {return x > y;}\n\nint main()\n{\n    n = get(); m = get(); q = get(); \n    u = get(); v = get(); t = get();\n    p = (double)u / v; Q.l = 0;\n    for (int i = 1; i <= n; ++i) Q.Push(get());\n    for (int i = 1; i <= m; ++i)\n    {\n        int x = Q.g[1] + Add; Q.Pop(); \n         if (i % t == 0) put(x), putchar(' '); \n        int l = (int)(p * x), r = x - l; \n        Q.Push(l - Add - q); Q.Push(r - Add - q);\n        Add += q; \n    }\n    putchar('\\n');\n    for (int i = 1; i <= n + m; ++i)\n    { \n        if (i % t == 0) put(Q.g[1] + Add), putchar(' ');\n        Q.Pop();    \n    }\n}\n```\n##**\u3010100pts\u3011\u961f\u5217**\n\n- \u6211\u4eec\u4f1a\u53d1\u73b0\u86af\u8693\u7684\u5207\u5272\u5177\u6709\u5355\u8c03\u6027\uff1a\u4e00\u53ea\u86af\u8693\u5207\u5272\u540e\u4f1a\u5206\u4e3a$\\lfloor px \\rfloor$\u548c$x - \\lfloor px \\rfloor$\u4e24\u4e2a\u90e8\u5206\uff0c\u5bf9\u4e8e\u5176\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u90e8\u5206\uff0c\u5728\u67d0\u4e00\u65f6\u523b\u5207\u5272\u51fa\u7684\u90a3\u53ea\u86af\u8693\u5fc5\u7136\u4f1a\u6bd4\u5728\u5b83\u4e4b\u540e\u5207\u5272\u51fa\u6765\u7684\u86af\u8693\u8981\u957f\n\n- \u6211\u4eec\u7528\u53cd\u8bc1\u6cd5\u5bf9\u6b64\u4e88\u4ee5\u8bc1\u660e\uff1a\n\n- \u8bbe\u67d0\u4e00\u65f6\u523b\u88ab\u9009\u51fa\u7684\u67d0\u53ea\u86af\u8693\u5207\u5272\u524d\u7684\u957f\u5ea6\u4e3a$a_i$\uff0c\u7ecf\u8fc7$N$\u79d2\u540e\uff0c\u5047\u8bbe\u5b58\u5728\u4e00\u53ea\u4e4b\u524d\u672a\u88ab\u5207\u5272\u8fc7\u7684\u86af\u8693\u8fd9\u4e00\u79d2\u5207\u5272\u5b8c\u540e\u957f\u5ea6\u6700\u5927\uff0c\u6211\u4eec\u8bb0\u5176$N$\u79d2\u524d\u7684\u957f\u5ea6\u4e3a$a_j$\uff0c\u90a3\u4e48$a_i, a_j$\u5fc5\u7136\u8981\u6ee1\u8db3\uff08\u6211\u4eec\u5148\u53ea\u8003\u8651\u5207\u5272\u51fa\u7684$\\lfloor px \\rfloor$\u90a3\u90e8\u5206\u86af\u8693\uff0c$x - \\lfloor px \\rfloor$\u540c\u7406\uff09\uff1a\n\n- $a_i \\times p + N \\times q \\le (a_j + N \\times q) \\times p$\n\n- \u5206\u914d\u540e\u5f97\u5230$a_i \\times p + N \\times q \\le a_j \\times p + N \\times q \\times p$\n\n- \u53c8\u56e0\u4e3a$N$\u79d2\u524d\u957f\u5ea6\u4e3a$a_i$\u7684\u86af\u8693\u88ab\u9009\u51fa\uff0c\u6240\u4ee5\u90a3\u4e00\u65f6\u523b\u6ee1\u8db3$a_i \\ge a_j$\uff0c\u800c$p$\u7684\u53d6\u503c\u8303\u56f4\u4e3a$0 < p < 1$\uff0c\u6240\u4ee5\u5fc5\u7136\u6ee1\u8db3\n\n- $a_i \\times p + N \\times q > a_j \\times p + N \\times q \\times p$\n\n- \u4e0e\u4e4b\u524d\u7684\u5047\u8bbe\u77db\u76fe\uff0c\u56e0\u6b64\u4e0a\u8ff0\u60c5\u51b5\u4e0d\u53ef\u80fd\u5b58\u5728\uff0c\u6211\u4eec\u8bc1\u5f97\u86af\u8693\u7684\u5207\u5272\u5177\u6709\u5355\u8c03\u6027\n\n- \u8003\u8651\u8bb0\u5f55\u4e09\u4e2a\u961f\u5217\uff0c\u5206\u522b\u5b58\u50a8\u672a\u5207\u5272\u8fc7\u7684\u86af\u8693\u548c\u5207\u5272\u6210\u7684\u4e24\u53ea\u86af\u8693\uff0c\u6bcf\u6b21\u5c06\u86af\u8693\u63d2\u5165\u5bf9\u5e94\u7684\u961f\u5c3e\u3002\u6839\u636e\u6211\u4eec\u4e0a\u9762\u63a8\u8bba\u5f97\u51fa\u7684\u5355\u8c03\u6027\uff0c\u6bcf\u6b21\u53d6\u51fa\u4e09\u4e2a\u961f\u5934\u7684\u6700\u5927\u503c\u5373\u53ef\uff0c\u86af\u8693\u957f\u5ea6\u7684\u589e\u52a0\u548c\u4e0a\u8ff0\u5806\u505a\u6cd5\u7684\u5904\u7406\u65b9\u5f0f\u76f8\u540c\uff0c\u8fd9\u6837\u7684\u603b\u590d\u6742\u4e3a$O(n + m)$\n\n##**Code-2**\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n\nusing namespace std;\ntypedef long long ll;\nconst int Maxn = 2147483647;\nconst int N = 1e5 + 5, M = 7e6 + 5;\nint n, m, q, u, v, t, Add;\nint Q[3][M], qt[3], qw[3]; \n\ninline int get()\n{\n    char ch; int res;\n    while ((ch = getchar()) < '0' || ch > '9');\n    res = ch - '0';\n    while ((ch = getchar()) >= '0' && ch <= '9')\n     res = (res << 3) + (res << 1) + ch - '0';\n    return res;\n}\n\ninline void put(int x)\n{ \n    if (x > 9) put(x / 10);\n    putchar(x % 10 + 48); \n}\n\ninline bool cmp(const int &x, const int &y) {return x > y;}\n\ninline int GetMax()\n{\n    int res = -Maxn, k;\n    for (int i = 0; i < 3; ++i)\n     if (qt[i] < qw[i] && res < Q[i][qt[i] + 1])\n      res = Q[i][qt[i] + 1], k = i;\n    qt[k]++; return res;\n}\n \nint main()\n{\n    n = get(); m = get(); q = get(); \n    u = get(); v = get(); t = get();\n    for (int i = 1; i <= n; ++i) Q[0][++qw[0]] = get(); \n    sort(Q[0] + 1, Q[0] + qw[0] + 1, cmp);\n    for (int i = 1; i <= m; ++i)\n    {\n        int x = GetMax() + Add;\n         if (i % t == 0) put(x), putchar(i + t > m ? '\\n' : ' '); \n        int l = (ll)x * u / v, r = x - l; \n        Q[1][++qw[1]] = l - Add - q;\n        Q[2][++qw[2]] = r - Add - q; Add += q; \n    }\n    if (t > m) putchar('\\n');\n    int tmp = n + m;\n    for (int i = 1; i <= tmp; ++i)\n    {\n        int x = GetMax() + Add;\n         if (i % t == 0) {put(x); if (i + t <= tmp) putchar(' ');}\n    }\n    return 0;\n}\n```",
        "postTime": 1501834037,
        "uid": 17952,
        "name": "Log_x",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2827 \u3010\u86af\u8693\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u6211\u5f53\u65f6\u89c9\u5f97\u5806\u4e5f\u662f\u53ef\u4ee5\u6253\u5f97\uff0c\u4f46\u662f\u628aq\u505a\u4e00\u4e2a\u61d2\u5904\u7406\uff0c\u53ef\u80fd\u4f1a\u51fa\u95ee\u9898\uff0c\u6240\u4ee5\u5c31\u6253\u4e86\u4e2a\u7ebf\u6bb5\u6811\uff0c\u76f4\u63a5\u66b4\u529b\u641e\u3002\u4f46\u8fd9\u6837\u5c31\u79bb\u6b63\u89e3\u8fdc\u4e86\u3002\u505a\u5806\u7684\u65f6\u5019\uff0c\u5176\u5b9e\u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u4eec\u5b8c\u5168\u65e0\u9700\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u5806\uff0c\u90a3\u4e48\u671f\u671b\u590d\u6742\u5ea6\u5c31\u662fO((n+m)log(n+m))\uff0c\u6211\u4eec\u53ef\u4ee5\u5206\u6210\u4e09\u4e2a\u5806\uff0c\u5206\u522b\u7ef4\u62a4\u539f\u5e8f\u5217\uff0c\u5206\u7684\u7b2c\u4e00\u6bb5\uff0c\u5206\u7684\u7b2c\u4e8c\u6bb5\uff0c\u90a3\u4e48\u6bcf\u6b21\u5c31\u662f\u5728\u4e09\u4e2a\u5806\u9876\u4e2d\u53d6\u4e00\u4e2a\u6700\u5927\u7684\u5206\uff0c\u7136\u540e\u63d2\u5165\u5230\u540e\u9762\u4e24\u4e2a\u5806\u4e2d\u53bb\uff0c\u671f\u671b\u590d\u6742\u5ea6O(3nlogn)\uff0c\u8fd9\u4e48\u505a\u5f53\u65f6\u8003\u573a\u4e0a\u5c31\u6709\u4eba\u60f3\u5230\u8fd9\u4e2a\u5c0f\u4f18\u5316\uff0c\u5e76\u4e14\u8fd9\u4e48\u5199\u4e86\uff0c100\u5206\uff08\u592a\u53ef\u6015\u4e86\uff0c\u4ed6\u662f\u5361\u5e38\u8fc7\u7684\uff09\u3002\u6309\u7167\u7406\u8bba\u590d\u6742\u5ea6\uff0c\u8fd9\u4e2a\u662f\u8fc7\u4e0d\u6389\u7684\uff0c\u4f46\u662f\u8fd9\u4e2a\u7406\u8bba\u590d\u6742\u5ea6\u53ea\u662f\u8868\u9762\u73b0\u8c61\uff0c\u4e0b\u9762\u53ef\u4ee5\u8bc1\u660e\u8fd9\u4e2a\u505a\u6cd5\u671f\u671b\u590d\u6742\u5ea6\u662f\u53ef\u4ee5\u505a\u5230O(3n)\u7684\uff01\n\n\u9996\u5148\u8bb2\u4e00\u4e0b\u5bf9q\u8fd9\u4e2a\u7c7b\u4f3c\u7ebf\u6bb5\u6811\u533a\u95f4\u4fee\u6539\u61d2\u6807\u8bb0\u7684\u5904\u7406\uff0c\n\n\u6211\u4eec\u5982\u679c\u6211\u4eec\u9996\u5148\u628a\u521d\u59cb\u5e8f\u5217\u6392\u5e8f\u4f7f\u5f97\uff1a\n\na1>=a2>=a3>=a4.....>=an\n\n\u90a3\u4e48\u6211\u4eec\u5148\u5207a1,\u5206\u6210\u4e24\u4e2ab1=a1\\*p,c1=a1-b1\n\n\u4e0d\u59a8\u8bbeb1>c1\uff08\u5982\u679cb1<c1\uff0cswap\u4e00\u4e0b\u5c31\u597d\u4e86\uff09\n\n\u6211\u4eec\u8bbe\u7f6e\u4e00\u4e2aaddv\u8868\u793a\u52a0\u4e86\u591a\u5c11\u6b21q\uff0c\u90a3\u4e48\u6211\u4eec\u6bcf\u6b21\u5411\u5806\u4e2d\u627e\u51fa\u4e00\u4e2a\u6700\u957f\u7684\uff0c\u5148\u628a\u5b83\u52a0\u4e0aaddv\uff08\u56e0\u4e3a\u6211\u4eec\u4e4b\u524d\u4e00\u76f4\u6ca1\u6709\u7ed9\u5b83\u52a0q\uff0c\u6240\u4ee5\u8fd9\u91cc\u6211\u4eec\u4e00\u6b21\u6027\u52a0\u4e0a\uff09\uff0c\u628a\u5b83\u8f93\u51fa\uff0c\u7136\u540e\u628aaddv+=q\uff0c\u518d\u628a\u5b83\u5206\u6210\u4e24\u6bb5\uff0c\u628a\u4e24\u6bb5\u51cf\u53bb\u51cf\u53bbaddv\uff0c\u7136\u540e\u63d2\u5165\u5230\u65b0\u7684\u5806\u4e2d\u53bb\u3002\n\n\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u5904\u7406\u662f\u6b63\u786e\u7684\u5462\uff1f\u6211\u4eec\u8003\u8651\u4e00\u4e0b\u5207\u65ad\u7684\u5f71\u54cd\u5c31\u597d\u4e86\u2014\u2014\u4f7f\u5f97\u8fd9\u4e24\u6bb5\u5728\u8fd9\u4e2a1s\u4e2d\u6ca1\u6709\u589e\u52a0\u957f\u5ea6\uff0c\u6240\u4ee5\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2aaddv\u540e\uff0c\u6211\u4eec\u53ea\u9700\u4ee4\u8fd9\u4e24\u6bb5\u90fd\u51cf\u53bbq\uff0c\u90a3\u4e48\u8f83\u5176\u4ed6\u6bb5\uff0c\u4ed6\u4eec\u5c31\u662f\u5c11\u52a0\u4e86\u4e00\u6b21q\uff0c\u53ef\u4ee5\u518d\u81ea\u5df1\u4ed4\u7ec6\u60f3\u4e00\u60f3\u3002\n\n\u4f46\u662f\uff0c\u4e3a\u4e86\u8bc1\u660e\u4e0a\u8ff0\u505a\u6cd5\u7684\u7ed3\u679c\u662fO(n)\u7684\uff0c\u6211\u4eec\u4e0b\u9762\u7684\u8bba\u8ff0\u4e2d\uff0c\u4e0d\u5f15\u5165\u61d2\u4f18\u5316\uff01\n\n\u8fd9\u91cc\uff0c\u5982\u679c\u7b2c\u4e8c\u6b21\u6211\u4eec\u5207\u7684\u662f\u4e0a\u8ff0\u7684b1\uff08\u5373b1>a2+q\uff09,\u5206\u6210\u7684\u4e24\u6bb5\u663e\u7136\u5c0f\u4e8eb1\u548cc1,\n\n\u5982\u679c\u6211\u4eec\u5207\u7684\u662fa2+q,\u90a3\u4e48\u5c31\u6709b1+=q,c1+=q,b2=(a2+q)\\*p,c2=a2+q-b2\uff08\u540c\u7406\uff0c\u4e0d\u59a8\u8bbeb2>c2\uff09\n\n\u90a3\u4e48b2=(a2+q)\\*p=a2\\*p+q\\*p<=a1\\*p+q=b1\u3002\uff08a2<a1,p<=1\uff09\n\n\u7efc\u4e0a\u53ef\u77e5\uff0c\u6211\u4eec\u5207\u7684\u7ebf\u6bb5\u957f\u5ea6\u662f\u5355\u8c03\u4e0d\u4e0a\u5347\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u4e0a\u9762\u5b9e\u9645\u4e0a\u53ea\u6709\u539f\u59cb\u5e8f\u5217\u7684\u5806\u662fO(logn)\u7684\u6548\u7387\u53d6\u51fa\uff0c\u800c\u5269\u4e0b\u7684\u4e24\u4e2a\u5806\uff0c\u5c31\u662f\u5806\u9876\u662f\u6700\u957f\u7684\uff0c\u5e76\u4e14\u540e\u9762\u7684\u90fd\u662f\u201c\u6392\u5e8f\u201d\u597d\u4e86\u7684\uff0c\u90a3\u4e48\u95ee\u9898\u5c31\u7b80\u5355\u4e86\uff0c\u6211\u4eec\u7ef4\u62a4\u4e09\u4e2a\u5355\u8c03\u961f\u5217\u5c31\u597d\u4e86\u3002\n\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>  \n#include<algorithm>  \n#include<cstring>  \n#define re register  \n#define For(i,a,b) for (re int i=(a);i<=(b);i++)  \n#define in(a) (a)=read()  \nusing namespace std;  \ntemplate<class T>inline bool ChkMax(T &a,int b){return a<b?a=b,1:0;}  \ninline bool cmp(int a,int b){return a>b;}  \ntypedef long long ll;  \nconst int INF=0x3f3f3f3f;  \nconst int N=7e6+6;  \nint c,n,m,q,u,v,t,f[N],g[N],h[N];  \nll addv=0,p1=1,p2=1,p3=1,t2=0,t3=0,x;  \ninline int read(){  \n    int x=0,f=1;char ch=getchar();  \n    while (ch<'0' || ch>'9'){if (ch=='-')f=-1;ch=getchar();}  \n    while ('0'<=ch && ch<='9'){x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}  \n    return x*f;  \n}  \ninline void calc(){  \n    x=-INF,c=0;  \n    if (p1<=n  && ChkMax(x,h[p1]))c=1;  \n    if (p2<=t2 && ChkMax(x,f[p2]))c=2;  \n    if (p3<=t3 && ChkMax(x,g[p3]))c=3;  \n    x+=addv;  \n    p1+=c==1;p2+=c==2;p3+=c==3;  \n}  \nint main(){  \n    in(n),in(m),in(q),in(u),in(v),in(t);  \n    For(i,1,n)in(h[i]);  \n    sort(h+1,h+n+1,cmp);  \n    For(i,1,m){  \n        calc();addv+=q;  \n        ll y=x*u/v,z=x-y;  \n        if (y<z)swap(y,z);  \n        f[++t2]=y-addv;g[++t3]=z-addv;  \n        if (i%t==0)printf(\"%lld \",x);  \n    }  \n    puts(\"\");  \n    int tn=0,tot=n-p1+t2-p2+t3-p3+3;  \n    while (tot--){  \n        calc();  \n        if ((++tn)%t==0)printf(\"%lld \",x);  \n    }  \n    return 0;  \n}\n```",
        "postTime": 1506689640,
        "uid": 54916,
        "name": "I_AM_HelloWord",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2827 \u3010\u86af\u8693\u3011"
    },
    {
        "content": "# \u86af\u8693 \u9898\u89e3\r\n\r\n\u9996\u5148\u6211\u4eec\u770b\u770b\u8fd9\u9053\u9898\u7684\u66b4\u529b\u65b9\u6cd5\u600e\u4e48\u5199\uff1a**\uff08\u8003\u573a\u4e0a\u6211\u5199\u7684\u5c31\u662f\u66b4\u529b\u54c8\u54c8\uff09**\r\n\r\n\u76f4\u63a5\u6a21\u62df\u4e0d\u5c31\u5b8c\u4e8b\u4e86\uff01\r\n\r\n```cpp\r\n#include <cstdio>\r\n#include <cmath>\r\n#include <queue>\r\nusing namespace std;\r\npriority_queue <double> Q,Qt;\r\nint n,m,q;\r\ndouble p,u,v,t,cnt;\r\nint main(){\r\n\tscanf(\"%d%d%d%lf%lf%lf\",&n,&m,&q,&u,&v,&t);\r\n\tp=u/v;\r\n\tfor (int i=1;i<=n;i++){\r\n\t\tdouble tmp;\r\n\t\tscanf(\"%lf\",&tmp);\r\n\t\tQ.push(tmp);\r\n\t}\r\n\tfor (int i=1;i<=m;i++){\r\n\t\tdouble x=Q.top(); Q.pop();\r\n\t\tdouble x1=floor(x*p),x2=floor(x-x1);\r\n\t\tQt=Q; while (!Q.empty()) Q.pop();\r\n\t\twhile (!Qt.empty()) Q.push(Qt.top()+q),Qt.pop();\r\n\t\tQ.push(x1); Q.push(x2);\r\n\t\tif (cnt<floor(i/t)) cnt++,printf(\"%d \",(int)x);\r\n\t}\r\n\tcnt=0; putchar('\\n');\r\n\tfor (int i=1;i<=n+m;i++){\r\n\t\tint x=Q.top(); Q.pop();\r\n\t\tif (cnt<floor(i/t)) cnt++,printf(\"%d \",(int)x);\r\n\t}\r\n}\r\n```\r\n\u5f53\u7136\uff0c\u8fd9\u6837\u6a21\u62df\u5e76\u4e0d\u662f\u6700\u5b8c\u7f8e\u7684\u6a21\u62df\uff0c\u6211\u4eec\u53ef\u4ee5\u662f\u7528C++ STL Set\u6216\u5e73\u8861\u6811\u6765\u5b9e\u73b0\u8fd9\u4e2a\u6a21\u62df\u7684\u8fc7\u7a0b\u3002\u7ed3\u679c\u5f53\u7136\u53ea\u670930\u5206\u5566\uff01\r\n\r\n\u6211\u4eec\u518d\u6765\u770b\u770b\u5982\u4f55\u4f18\u5316\u3002\u6211\u4eec\u53d1\u73b0\u6bcf\u4e00\u6b21\u96c6\u5408\u4e2d\u6240\u6709\u5143\u7d20\u90fd\u4f1a\u589e\u52a0$q$\uff08\u9664\u4e86\u5f53\u524d\u780d\u6389\u7684\u8fd9\u4e2a\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u201c**\u96c6\u5408\u504f\u79fb\u91cf**\u201d\u6765\u63cf\u8ff0\u8fd9\u4e2a\u589e\u52a0\uff0c\u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u628a\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u53d6\u51fa\u6765\u589e\u52a0\u4e86\u3002\u4f30\u8ba1\u53ef\u4ee5\u63d0\u9ad8\u523050\u5206\u3002\r\n\r\n\u5177\u4f53\u5730\u8bf4\uff0c\u6211\u4eec\u628a\u5f53\u524d\u53d6\u51fa\u7684\u6700\u5927\u503c\u8bbe\u4e3a$x$\uff0c\u96c6\u5408\u504f\u79fb\u91cf\u8bbe\u4e3a$\\Delta$\uff0c\u5219$x$\u7684\u771f\u5b9e\u503c\u4f4d$x+\\Delta$\uff0c\u780d\u5b8c\u4e4b\u540e\u65b0\u751f\u6210\u7684\u4e24\u6761\u86af\u8693\u957f\u5ea6\u5206\u522b\u4e3a$\\lfloor p(x+\\Delta)\\rfloor$\u548c$x+\\Delta-\\lfloor p(x+\\Delta)\\rfloor$\u3002\u90a3\u4e48\u63d2\u5165\u7684\u65f6\u5019\u8981\u628a\u5f53\u524d\u7684\u96c6\u5408\u504f\u79fb\u503c\u51cf\u6389\uff0c\u518d\u51cf\u53bb\u4e00\u4e2a$q$\uff0c\u4ee5\u62b5\u6d88\u5f53\u524d\u8fd9\u4e00\u8f6e$\\Delta=\\Delta+q$\u5e26\u6765\u7684\u5f71\u54cd\uff08**\u76f8\u5f53\u4e8e\u5f53\u524d\u6ca1\u6709\u589e\u52a0**\uff09\u3002\r\n\r\n\u8fd8\u60f3\u4f18\u5316\u7684\u8bdd\uff0c\u5f53\u7136\u5c31\u9700\u8981\u4e00\u70b9\u6570\u5b66\u77e5\u8bc6\u4e86\u3002\r\n\r\n\u8bbe$x_1\\ge x_2$\uff0c\u8bbe\u5f53\u524d\u65f6\u95f4\u5185\u5207\u9664\u7684\u86af\u8693\u957f\u5ea6\u4e3a$x_1$\uff0c\u4e0b\u4e00\u79d2\u5207\u9664\u7684\u86af\u8693\u957f\u5ea6\u4e3a$x_2+q$\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5206\u6790\u4e00\u4e0b\uff1a\r\n\r\n$\\lfloor px_1\\rfloor+q \\ge \\lfloor px_2\\rfloor+q\\ge\\lfloor px_2+q\\rfloor\\ge\\lfloor p(x_2+q)\\rfloor$\r\n\r\n$\\because x_1-x_2\\ge p(x_1-x_2)$\r\n\r\n$\\therefore x_1-px_1\\ge x_2-p(x_2+q)$\r\n\r\n$\\therefore x_1-\\lfloor px_1\\rfloor+q=\\lfloor x_1-px_1 \\rfloor+q\\ge \\lfloor x_2-p(x_2+q)\\rfloor=x_2+q-\\lfloor p(x_2+q)\\rfloor$\r\n\r\n\u5b8c\u7f8e\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u795e\u5947\u7684\u5355\u8c03\u6027\uff1a\u5982\u679c\u8bf4$x_1\\ge x_2$\uff0c\u90a3\u4e48\u4ed6\u4eec\u88ab\u5207\u65ad\u540e\u7684\u4e24\u7aef\u90fd\u5206\u522b\u5355\u8c03\u9012\u51cf\uff01\r\n\r\n\u6240\u4ee5\u8bf4\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e09\u4e2a\u961f\u5217\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a\r\n\r\n$q_0$\u4e3a\u539f\u59cb\u5e8f\u5217\uff0c$q_1,q_2$\u4e3a\u5206\u522b\u780d\u65ad\u540e\u7684\u4e24\u4e2a\u5e8f\u5217\uff0c\u8fd9\u4e09\u4e2a\u5e8f\u5217\u90fd\u6ee1\u8db3\u5355\u8c03\u9012\u51cf\u7684\u6027\u8d28\uff08\u539f\u59cb\u5e8f\u5217\u5e76\u4e0d\u6709\u5e8f\uff0c\u6240\u4ee5$q_0$\u9700\u8981\u5728\u63d2\u5165\u7684\u65f6\u5019\u624b\u52a8\u6392\u5e8f\uff09\u3002\r\n\r\n\u9644\u6e90\u4ee3\u7801\uff1a\r\n\r\n```cpp\r\n#include <cstdio>\r\n#include <queue>\r\n#include <algorithm>\r\n#include <cmath>\r\n#include <iostream>\r\n#define inf 0x3f3f3f3f\r\nusing namespace std;\r\nconst int MAXN=1e5+10;\r\nconst int MAXM=7e6+10;\r\ntypedef long long ll;\r\nll n,m,q,u,v,t,cnt;\r\nll delta;\r\nll a[MAXN];\r\nqueue <ll> Q,q1,q2;\r\nbool cmp(ll a,ll b)\r\n{\r\n\treturn a>b;\r\n}\r\nint main()\r\n{\r\n\t//freopen(\"in.txt\",\"r\",stdin);\r\n\t//freopen(\"out.txt\",\"w\",stdout);\r\n\tscanf(\"%lld%lld%lld%lld%lld%lld\",&n,&m,&q,&u,&v,&t);\r\n\tfor (int i=1;i<=n;i++)\r\n\t\tscanf(\"%lld\",&a[i]);\r\n\tsort(a+1,a+1+n,cmp);\r\n\tfor (int i=1;i<=n;i++)\r\n\t\tQ.push(a[i]);\r\n\tfor (int i=1;i<=m;i++)\r\n\t{\r\n\t\tll t1,t2,t0,res,x1,x2;\r\n\t\tt0=t1=t2=res=-inf;\r\n\t\tif (!Q.empty()) t0=Q.front();\r\n\t\tif (!q1.empty()) t1=q1.front();\r\n\t\tif (!q2.empty()) t2=q2.front();\r\n\t\tres=max(t0,max(t1,t2));\r\n\t\tif (!Q.empty()&&res==t0) Q.pop();\r\n\t\telse if (!q1.empty()&&res==t1) q1.pop();\r\n\t\telse if (!q2.empty()&&res==t2) q2.pop();\r\n\t\tres=res+delta;\r\n\t\tx1=floor((ll)u*res/v); x2=res-floor((ll)u*res/v);\r\n\t\tq1.push(x1-delta-q);\r\n\t\tq2.push(x2-delta-q);\r\n\t\tdelta+=q;\r\n\t\tif (cnt<floor(i/t)) cnt++,printf(\"%lld \",res);\r\n\t}\r\n\tputchar('\\n');\r\n\tcnt=0;\r\n\tfor (int i=1;i<=n+m;i++)\r\n\t{\r\n\t\tll t1,t2,t0,res;\r\n\t\tt0=t1=t2=res=-inf;\r\n\t\tif (!Q.empty()) t0=Q.front();\r\n\t\tif (!q1.empty()) t1=q1.front();\r\n\t\tif (!q2.empty()) t2=q2.front();\r\n\t\tres=max(t0,max(t1,t2));\r\n\t\tif (!Q.empty()&&res==t0) Q.pop();\r\n\t\telse if (!q1.empty()&&res==t1) q1.pop();\r\n\t\telse if (!q2.empty()&&res==t2) q2.pop();\r\n\t\tres=res+delta;\r\n\t\tif (cnt<floor(i/t)) cnt++,printf(\"%lld \",res);\r\n\t}\r\n}\r\n```\r\n",
        "postTime": 1573219690,
        "uid": 113476,
        "name": "Gorun",
        "ccfLevel": 4,
        "title": "\u9898\u89e3\u3010P2831\u3011 \u86af\u8693"
    },
    {
        "content": "> \u505a\u6cd5: \u5dee\u5206+\u5355\u8c03\u6027\u4f18\u5316\n\n~~2016\u5e74T2\u9898\u76ee\u90fd\u6bd4T3\u96be\u5417\u2026\u2026\u8fd9\u4e48\u6050\u6016\u2026\u2026~~\n\nP20: \u76f4\u63a5\u5c31\u52a0\u503csort\u5c31\u53ef\u4ee5\u4e86\u3002\n\nP70: \u76f4\u63a5\u5dee\u5206,\u7136\u540e\u653e\u5165\u4f18\u5148\u961f\u5217\u8fdb\u884c\u7ef4\u62a4\u5373\u53ef(\u6bcf\u4e2a\u6570\u53d6\u51fa\u6765+(i-1)\\*q,\u5b58\u5165\u65f6\u518d-i\\*q,\u8fd9\u6837\u5c31\u80fd\u4f7f\u5f97\u5728\u8fd9\u4e00\u56de\u5408\u4e0d\u52a0\u4e0aq)\n\n\u7136\u540e\u6211\u4eec\u770b\u5982\u4f55\u76f4\u63a5\u5199\u3002\n\n\u5176\u5b9e,\u6211\u4eec\u662f\u53ef\u4ee5\u628a\u5b83\u6574\u51fa\u5355\u8c03\u6027\u7684**\u6709\u5355\u8c03\u6027\u7684**\n\n\u6211\u4eec\u7528\u4e09\u4e2a\u961f\u5217\u6765\u8868\u793a\u8fd8\u6ca1\u5207\u7684\u86af\u8693,\u5207\u4e86\u7684\u7b2c\u4e00\u6bb5\u7684\u86af\u8693,\u5207\u4e86\u7684\u7b2c\u4e8c\u6bb5\u86af\u8693,\u800c\u540e\u9762\u4e24\u4e2a\u5e8f\u5217\u5982\u679c\u628a\u5207\u6210\u4e24\u534a\u7684\u86af\u8693\u76f4\u63a5\u653e\u5165\u961f\u5c3e\u662f**\u6709\u5355\u8c03\u6027\u7684**\n\n\u6211\u4eec\u8bb0\u5f55\u5f53\u524d\u5207\u6389\u7684\u86af\u8693\u957f\u5ea6\u4e3aA,\u4e0b\u4e00\u6b21\u5207\u6389\u7684\u4e3aB\n\n\u8fd8\u6ca1\u5207\u7684\u4e09\u4e2a\u5e8f\u5217\u4e3a\n\n```\n1: A    B    C \u2026\u2026\n2: \u7a7a\n3: \u7a7a\n```\n\n\u5207\u4e86\u7b2c\u4e00\u6761\n\n```\n1: B + q      C + q \u2026\u2026\n2: A \u00d7 p\n3: A \u00d7 (1 - p)\n```\n\n\u5207\u4e86\u7b2c\u4e8c\u6761\n\n```\n1: C + q \u2026\u2026\n2: A \u00d7 p + q      (B + q) \u00d7 p\n3: A \u00d7 (1 - p)    (B + q) \u00d7 (1-p)\n```\n\n\u6211\u4eec\u518d\u6bd4\u8f83\u961f\u52172\u4e2d\u7684\u4e24\u6761\n\n```\n(B + q) \u00d7 p = B \u00d7 p + q \u00d7 p \n\u2235 B < A\n\u2234 B \u00d7 p < A \u00d7 p\n\u53c8\u2235 0 < p < 1\n\u2234 p \u00d7 q < q\n\u7efc\u4e0a\u6240\u8ff0\uff0c (B + q) \u00d7 p < A \u00d7 p + q\n```\n\n\u770b\u5b8c\u4e86\u5e94\u8be5\u8fd9\u5c31\u4e0d\u96be\u8bc1\u660e\u4e86\u5427\n\n\u6211\u4eec\u4e4b\u524d\u5207\u6389\u7684\u5728\u7b2c\u4e8c\u4e2a\u5207\u6210\u4e24\u534a\u7684\u540c\u65f6,\u4e5f\u4f1a+p,\u8fd9\u4e5f\u5c31\u5bfc\u81f4\u4e862,3\u4e24\u4e2a\u5e8f\u5217\u90fd\u662f\u6709\u5355\u8c03\u6027\u7684\u3002\n\n\u7136\u540e\u5c31\u76f4\u63a5\u7ef4\u62a4\u961f\u5217\u5c31\u597d\u4e86\n\n#### Code:\n\n```cpp\n#include<bits/stdc++.h>\n#define re register\n#define rep(i,a,b) for(re int i=a,i##end=b; i<=i##end; i++)\n#define drep(i,a,b) for(re int i=a,i##end=b; i>=i##end; i--)\n#define repp(i,a,b) for(re int i=a,i##end=b; i<i##end; i++)\n#define drepp(i,a,b) for(re int i=a,i##end=b; i>i##end; i--)\n#define Erep(i,x) for(int i=head[x]; i; i=Edge[i].nxt)\n#define lowbit(x) (x&-x)\n#define debug(x) cout<<#x<<\" = \"<<x<<endl;\n#define coint const int\ntypedef long long ll;\nusing namespace std;\ntemplate<class T>inline T rd(){\n\tstatic char ch;static bool neg;static T x;\n\tfor(neg=0,ch=0; ch>'9'||ch<'0'; neg|=(ch=='-'),ch=getchar());\n\tfor(x=0; ch>='0'&&ch<='9'; x=(x<<1)+(x<<3)+(ch^'0'),ch=getchar());\n\treturn neg?-x:x;\n}\ntemplate<class T>inline T Max(const T &x, const T &y){\n\treturn x>y?x:y;\n}\ntemplate<class T>inline T Min(const T &x, const T &y){\n\treturn x<y?x:y;\n}\ncoint N=1e5+5,M=7e6+5;\n//bool S1;\nstruct Heap{\n\tint sum[N+M];\n\tint sz;\n\tHeap(){ sz=0; return; }\n\tinline void push(ll x){\n\t\tsum[++sz]=x;\n\t\tint now=sz,nxt;\n\t\twhile(nxt=now>>1,nxt){\n\t\t\tnxt=now>>1;\n\t\t\tif(sum[now]>sum[nxt]) swap(sum[now],sum[nxt]),now=nxt;\n\t\t\telse break;\n\t\t}\n\t\treturn;\n\t}\n\tinline void pop(){\n\t\tsum[1]=sum[sz--];\n\t\tint now=1,nxt;\n\t\twhile(nxt=now<<1,nxt<=sz){\n\t\t\tif(nxt<sz && sum[nxt|1]>sum[nxt]) nxt|=1;\n\t\t\tif(sum[now]<sum[nxt]) swap(sum[now],sum[nxt]),now=nxt;\n\t\t\telse break;\n\t\t}\n\t\treturn;\n\t}\n\tinline ll top() { return sum[1]; }\n\tinline int size() { return sz; }\n\tinline bool empty() { return !sz; }\n}Q;\n\nint n,m,t,u,v,q;\n\nstruct P70{\n\tHeap Q;\n//\tpriority_queue<ll>Q;\n\tinline void solve(){\n\t\tdouble p=1.0*u/v;\n\t\trep(i,1,n) Q.push(rd<int>());\n\t\tint tot=0;\n\t\trep(i,1,m){\n\t\t\tint now=Q.top()+(i-1)*q; Q.pop();\n\t\t\ttot++;\n\t\t\tif(tot==t) printf(\"%d \",now),tot=0;\n\t\t\tint nxt1=floor(now*p),nxt2=now-nxt1;\n\t\t\tQ.push(nxt1-i*q); Q.push(nxt2-i*q);\n\t\t}\n\t\tif(m<=t) puts(\" \");\n\t\telse puts(\"\");\n\t\ttot=0;\n\t\tif(Q.size()<t) puts(\" \");\n\t\telse{\n\t\t\twhile(!Q.empty()){\n\t\t\t\ttot++;\n\t\t\t\tif(tot==t){\n\t\t\t\t\tprintf(\"%d \",Q.top()+m*q);\n\t\t\t\t\ttot=0;\n\t\t\t\t}\n\t\t\t\tQ.pop();\n\t\t\t}\n\t\t\tputs(\"\");\n\t\t}\n\t\treturn;\n\t}\n}p70;\n\nstruct P10{\n\tstatic const int N=1000+5,M=1000+5;\n\tll A[N+M];\n\tinline void solve(){\n\t\trep(i,1,n) A[i]=rd<ll>();\n\t\tsort(A+1,A+n+1,greater<ll>());\n\t\tint tot=0;\n\t\trep(i,1,m){\n\t\t\tll now=A[1]; A[1]=0;\n\t\t\ttot++;\n\t\t\tif(tot==t) printf(\"%lld \",now),tot=0;\n\t\t\tA[n+1]=now*u/v;\n\t\t\tA[n+2]=now-A[n+1];\n\t\t\trep(j,2,n) A[j]+=q;\n\t\t\tn+=2;\n\t\t\tsort(A+1,A+n+1,greater<ll>());\n\t\t\tn--;\n\t\t}\n\t\tif(m<t) puts(\" \");\n\t\telse puts(\"\");\n\t\ttot=0;\n\t\tif(!n) puts(\" \");\n\t\telse {\n\t\t\trep(i,1,n){\n\t\t\t\ttot++;\n\t\t\t\tif(tot==t){\n\t\t\t\t\tprintf(\"%lld \",A[i]);\n\t\t\t\t\ttot=0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tputs(\"\");\n\t\t}\n\t\treturn;\n\t}\n}p10;\n\n\ninline bool cmp(const int &x, const int &y){\n\treturn x>y;\n}\nstruct P100{\n\tint A[N],B[M],C[M];\n\tint l1,r1,l2,r2,l3,r3;\n\tinline void solve(){\n\t\tconst double p=1.0*u/v;\n\t\trep(i,1,n) A[i]=rd<int>();\n\t\tsort(A+1,A+n+1,cmp);\n\t\tl1=1,r1=n,l2=1,r2=0,l3=1,r3=0;\n\t\tint tot=0;\n\t\trep(i,1,m){\n\t\t\tint a=(l1<=r1)?A[l1]:-2e9,b=(l2<=r2)?B[l2]:-2e9,c=(l3<=r3)?C[l3]:-2e9;\n//\t\t\tprintf(\"now %d , a = %d , b = %d , c = %d \\n\",i,a,b,c);\n\t\t\tint res=Max(a,Max(b,c));\n\t\t\t(res==a?l1++,1:(res==b?l2++,2:l3++,3));\n\t\t\tres+=(i-1)*q; tot++;\n\t\t\t(tot==t && (printf(\"%d \",res), tot=0));\n\t\t\tint nxt1=floor(res*p),nxt2=res-nxt1;\n\t\t\tnxt1-=i*q,nxt2-=i*q;\n\t\t\tB[++r2]=nxt1,C[++r3]=nxt2;\n\t\t}\n\t\tputs(\"\"); tot=0;\n\t\trep(i,1,n+m){\n\t\t\tint a=(l1<=r1)?A[l1]:-2e9,b=(l2<=r2)?B[l2]:-2e9,c=(l3<=r3)?C[l3]:-2e9;\n//\t\t\tprintf(\"now %d , a = %d , b = %d , c = %d \\n\",i,a,b,c);\n\t\t\tint res=Max(a,Max(b,c));\n\t\t\t(res==a?(l1++):(res==b?(l2++):(l3++)));\n\t\t\ttot++;\n\t\t\t(tot==t && (printf(\"%d \",res+m*q), tot=0));\n\t\t}\n\t\tputs(\"\");\n\t\treturn;\n\t}\n}p100;\n\n//bool S2;\n\nint main(){\n//\tcout<<(&S2-&S1)/1024.0/1024<<endl;\n//\tfreopen(\"earthworm.in\",\"r\",stdin);\n//\tfreopen(\"earthworm.out\",\"w\",stdout);\n\tn=rd<int>(),m=rd<int>(),q=rd<int>(),u=rd<int>(),v=rd<int>(),t=rd<int>();\n//\tdebug(n); debug(m);\n\tp100.solve();\n\treturn 0;\n}\n```",
        "postTime": 1567222116,
        "uid": 81715,
        "name": "ppp204",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2827 \u3010\u86af\u8693\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5176\u5b9e\u8fd8\u884c\uff0c\u7528\u4f18\u5148\u961f\u5217  \n\u301050\u5206\u3011  \n\u5bf9\u4e8eq=0\uff0c\u5373\u5269\u4e0b\u7684\u86af\u8693\u6ca1\u6709\u589e\u957f\uff0c\u957f\u5ea6\u4fdd\u6301\u4e0d\u53d8\u3002  \n\u5229\u7528\u4f18\u5148\u961f\u5217\u6a21\u62df\u5373\u53ef\uff1a\u6bcf\u6b21\u4ece\u5806\u4e2d\u53d6\u6700\u5927\u503c\uff0c\u5207\u6210\u4e24\u6bb5\uff0c\u518d\u5165\u5806\u3002  \n\n```\n#include<bits/stdc++.h>\nusing namespace std;\npriority_queue<int> pq;\nint main(){\n\tint n,m,q,u,v,t;\n\tscanf(\"%d%d%d%d%d%d\",&n,&m,&q,&u,&v,&t);\n\tif(q==0){\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tint a;scanf(\"%d\",&a);\n\t\t\tpq.push(a);\n\t\t}\n\t\tfor(int i=1;i<=m;i++){\n\t\t\tint nod=pq.top();pq.pop();\n\t\t\tif(i%t==0)printf(\"%d \",nod);\n\t\t\tint a=nod*u/v;\n\t\t\tint b=nod-a;\n\t\t\tpq.push(a);pq.push(b);\n\t\t}\n\t\tprintf(\"\\n\");\n\t\tfor(int i=1;i<=n+m;i++){\n\t\t\tint nod=pq.top();pq.pop();\n\t\t\tif(i%t==0)printf(\"%d \",nod);\n\t\t}\n\t}\n\treturn 0;\n} \n\n```\n\n\u301065\u5206\u3011  \n\u5bf9\u4e8e60%\u7684\u6570\u636e\uff0c M<=10^5\u3002q\u975e\u96f6\u65f6\u5982\u4f55\u5904\u7406\uff1f  \n\u201c\u9664\u4e86\u521a\u521a\u4ea7\u751f\u7684\u4e24\u53ea\u65b0\u86af\u8693\uff0c\u5176\u4f59\u86af\u8693\u7684\u957f\u5ea6\u90fd\u4f1a\u589e\u52a0\u00a0q\uff08\u662f\u4e00\u4e2a\u975e\u8d1f\u6574\u5e38\u6570\uff09\u201d  \n\u8981\u589e\u52a0\u7684\u8fd9\u4e9b\u201c\u957f\u5ea6\u201d\u90fd\u5728\u5806\u91cc\uff0c\u53d6\u51fa\u5c06\u4e4b\u589e\u52a0q\u540e\u518d\u653e\u5165\u5806\uff0c\u663e\u7136\u4e0d\u73b0\u5b9e\u3002  \n\u201c\u5176\u4f59\u86af\u8693\u7684\u957f\u5ea6\u90fd\u4f1a\u589e\u52a0\u00a0q\u201d\uff0c\u4e5f\u53ef\u4ee5\u76f8\u5bf9\u7684\u770b\u4f5c\uff1a\n\uff08\u521a\u521a\u4ea7\u751f\u7684\u4e24\u53ea\u65b0\u86af\u8693\u51cf\u5c11q\uff0c\u5176\u4f59\u86af\u8693\u7684\u957f\u5ea6\u4e0d\u53d8 \uff09  +  \uff08 \u6574\u4f53\u589e\u52a0q\uff09\n\n```\n\tint add=0; //\u6574\u4f53\u589e\u91cf \n\tfor(int i=1;i<=m;i++){\n\t\tint nod=pq.top();pq.pop();\n\t\tif(i%t==0)printf(\"%d \",nod+add);\n\t\tint a=(long long)(nod+add)*u/v;\n\t\tint b=(nod+add-a);\n\t\tadd+=q;\n\t\tpq.push(a-add);pq.push(b-add);\n\t}\n\tprintf(\"\\n\");\n\tfor(int i=1;i<=n+m;i++){\n\t\tint nod=pq.top();pq.pop();\n\t\tif(i%t==0)printf(\"%d \",nod+add);\n\t}\n```\n\n\u3010100\u5206\u3011  \n100%\u7684\u6570\u636e\u6ee1\u8db3m\u22647*10^6\uff0c\u6b64\u65f6\u679a\u4e3e\u548c\u5806\u3001\u5355\u8c03\u961f\u5217\u7b49\u67e5\u627e/\u7ef4\u62a4\u6700\u5927\u503c\u7684\u65b9\u6cd5\u662f\u8d85\u65f6\u7684\u3002  \n\u6b64\u9898\u4e2d\u9690\u542b\u5355\u8c03\u6027\uff1a\u5148\u88ab\u5207\u6389\u7684\u86af\u8693\u5206\u6210\u7684\u86af\u8693\u4e00\u5b9a\u6bd4\u540e\u5207\u6389\u7684\u86af\u8693\u5206\u6210\u7684\u86af\u8693\u5927  \n\u90a3\u4e48\u5c31\u53ef\u4ee5\u5c06\u8fd9\u4e24\u5806\u4f9d\u6b21\u5b58\u50a8, \u52a0\u4e0a\u8fd8\u6ca1\u88ab\u5207\u8fc7\u7684\u86af\u8693\u3002\u6bcf\u6b21\u8981\u5207\u65f6\u5728\u8fd9\u4e09\u5806\u91cc\u9762\u9009\u62e9\u6700\u5927\u7684, \u5207\u5b8c\u518d\u4f9d\u6b21\u653e\u56de\u53bb\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(m)\n```\n#include<bits/stdc++.h>\nusing namespace std;\npriority_queue<int> pq;\nqueue<int> qa;\nqueue<int> qb;\nqueue<int> qc;\nint main(){\n\tint n,m,q,u,v,t;\n\tscanf(\"%d%d%d%d%d%d\",&n,&m,&q,&u,&v,&t);\n\tfor(int i=1;i<=n;i++){\n\t\tint a;scanf(\"%d\",&a); pq.push(a);\n\t}\n\twhile(!pq.empty()){\n\t\tint nod=pq.top();pq.pop(); qa.push(nod);\n\t}\n\tint add=0; //\u6574\u4f53\u589e\u91cf \n\tfor(int i=1;i<=m;i++){\n\t\tint noda,nodb,nodc,nod=-0x7fffffff;\n\t\tif(!qa.empty()){noda=qa.front();nod=max(nod,noda);}\n\t\tif(!qb.empty()){nodb=qb.front();nod=max(nod,nodb);}\n\t\tif(!qc.empty()){nodc=qc.front();nod=max(nod,nodc);}\n\t\tif(!qa.empty()&&nod==noda)qa.pop();\n\t\telse if(!qb.empty()&&nod==nodb)qb.pop();\n\t\telse if(!qc.empty()&&nod==nodc)qc.pop();\n\t\tif(i%t==0)printf(\"%d \",nod+add);\n\t\tint a=(long long)(nod+add)*u/v;\n\t\tint b=(nod+add-a);\n\t\tadd+=q;\n\t\tqb.push(a-add);qc.push(b-add);\n\t}\n\tprintf(\"\\n\");\n\tfor(int i=1;i<=n+m;i++){\n\t\tint noda,nodb,nodc,nod=-0x7fffffff;\n\t\tif(!qa.empty()){noda=qa.front();nod=max(nod,noda);}\n\t\tif(!qb.empty()){nodb=qb.front();nod=max(nod,nodb);}\n\t\tif(!qc.empty()){nodc=qc.front();nod=max(nod,nodc);}\n\t\tif(!qa.empty()&&nod==noda)qa.pop();\n\t\telse if(!qb.empty()&&nod==nodb)qb.pop();\n\t\telse if(!qc.empty()&&nod==nodc)qc.pop();\n\t\t\n\t\tif(i%t==0)printf(\"%d \",nod+add);\n\t}\n\treturn 0;\n} \n```",
        "postTime": 1563625827,
        "uid": 84487,
        "name": "King_of_DarkWorld",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2827 \u3010\u86af\u8693\u3011"
    },
    {
        "content": "\u770b\u5230\u8fd9\u9898\u9996\u5148\u60f3\u5230\u7684\u662f\u7528\u4e8c\u53c9\u5806\u505a\n\n\u5806\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$ O(logn) $\uff0c\u4e00\u5171$ m $\u6b21\uff0c\u5373$ O(mlogn) $\n\u800c\u8003\u8651\u5230\u6570\u636e\u7684\u8303\u56f4$ n <= 105, m <= 7 \u2217 106 $\n\u6240\u4ee5\u80af\u5b9a\u4f1a$ TLE $\uff0c\u4f46\u4e5f\u80fd\u62ff\u5230$ 70 $\u5206\u5de6\u53f3\n\n\u90a3\u4e48\u6211\u4eec\u6ce8\u610f\u5230\u4e00\u4ef6\u4e8b\u60c5\uff1a\n\n\u6bcf\u6b21\u4f1a\u5207\u6700\u957f\u7684\u86af\u8693\n\n\u8fd9\u8bf4\u660e\u4ec0\u4e48\uff1f\u628a\u5207\u6389\u7684\u62ff\u8d70\u540e\u5269\u4e0b\u7684\u8fd8\u5177\u6709\u5355\u8c03\u6027\n\n\u4e0d\u8bba\u540e\u5207\u7684\u4ec0\u4e48\u65f6\u5019\u5207\uff0c\u5b83\u4eec\u90fd\u5728\u540c\u6837\u591a\u7684\u65f6\u95f4\u5185\u589e\u957f\u4e86\n\n\u6240\u4ee5\u6211\u4eec\u80fd\u63a8\u51fa\u5bf9\u4e8e\u5bf9\u5e94\u7684\u5207\u540e\u7684\u67d0\u90e8\u5206\uff0c\u5148\u5207\u7684\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e\u540e\u5207\u7684\n\n\u5373\u8bbe\u5148\u5207\u7684\u65f6\u95f4\u4e3a$x$\uff0c\u540e\u5207\u7684\u65f6\u95f4\u4e3a$y$\n\u5728$x$\u548c$y$\u4e4b\u95f4\u7684\u65f6\u95f4$y\u2212x$\u91cc\u5b83\u4eec\u589e\u957f\u4e86\u540c\u6837\u957f\u7684$ (y \u2212 x) \u2217 q $\n\n\u6240\u4ee5\u5bf9\u4e8e\u5207\u540e\u67d0\u90e8\u5206\uff0c\u5148\u5207\u5927\u4e8e\u7b49\u4e8e\u540e\u5207\n\n\u8fd9\u53e5\u7ed3\u8bba\u6211\u91cd\u590d\u4e86\u4e24\u904d\uff0c\u56e0\u4e3a\u5b83\u771f\u7684\u5f88\u91cd\u8981\u3002\n\n\u4ee5\u81f3\u4e8e\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u63a8\u51fa\uff1a\u6240\u6709\u88ab\u5207\u86af\u8693\u7684\u67d0\u90e8\u5206\uff0c\u6309\u65f6\u95f4\u5148\u540e\u5448\u73b0\u5355\u8c03\u6027\n\n\u672c\u6765\u7ef4\u62a4\u4f18\u5148\u961f\u5217\u53d8\u6210\u4e86\u76f4\u63a5\u662f\u5355\u8c03\u7684\u961f\u5217\n\n\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u76f4\u63a5\u5f00\u666e\u901a\u961f\u5217\u5c31\u884c\u4e86\uff08\u8fd9\u91cc\u7528$ STL $\u7684\u4f1a\u8d85\u65f6\uff0c\u53ea\u80fd\u6a21\u62df\uff09\n\n\u90a3\u4e48\u8fd9\u91cc\u6211\u4eec\u5f00\u4e09\u4e2a\u961f\u5217$q1$\uff0c$q2$\uff0c$q3$\n$q1$\u5b58\u50a8\u6700\u521d\u86af\u8693\u7684\u957f\u5ea6\uff0c\u6bcf\u6b21\u5207\u6389\u961f\u9996\u5e76\u4ece\u961f\u5217\u4e2d\u79fb\u9664\n\n$q2$\u5b58\u50a8\u76ee\u524d\u88ab\u5207\u7684\u8f83\u957f\u7684\u90e8\u5206\uff0c\u65b0\u7684\u88ab\u5207\u7684\u8f83\u957f\u90e8\u5206\u8fdb\u5165\u961f\u5c3e\n\n$q3$\u5b58\u50a8\u76ee\u524d\u88ab\u5207\u7684\u8f83\u77ed\u7684\u90e8\u5206\uff0c\u65b0\u7684\u88ab\u5207\u7684\u8f83\u77ed\u90e8\u5206\u8fdb\u5165\u961f\u5c3e\n\n\u8fd9\u6837\u5c31\u5bf9\u4e86\u5417\uff1f\u7b54\u6848\u662f\u5426\u5b9a\u7684\n\n\u56e0\u4e3a\u8fd8\u6709\u4e00\u79cd\u60c5\u51b5\u662f\uff1a\u5f53\u524d\u88ab\u5207\u7684\u86af\u8693\u662f\u4e4b\u524d\u67d0\u4e00\u6b21\u88ab\u5207\u86af\u8693\u7684\u4e00\u90e8\u5206\n\n\u4e5f\u5c31\u662f\u8bf4\u65b0\u7684\u6700\u957f\u86af\u8693\u4e5f\u6709\u53ef\u80fd\u5728$q2$\u6216$q3$\u91cc\n\n\u6240\u4ee5\u6211\u4eec\u6bcf\u6b21\u7684\u6700\u957f\u86af\u8693\u5e94\u8be5\u662f$max(q1.front(), q2.front(), q3.front())$\n\n\u6bcf\u6b21\u7528\u4e2a\u5c0f\u6a21\u62df\u5c31\u597d\u4e86\u554a\n\n\u6700\u540e\u522b\u5fd8\u4e86\u6ce8\u610f\u7cbe\u5ea6\u7684\u63a7\u5236\n\n\u4f2a\u4ee3\u7801\n```cpp\n\ninline int TOP()  //\u627e\u6700\u957f\n{\n    int x1=-inf,x2=-inf,x3=-inf;\n    if(h1<=t1) x1=q1[h1];\n    if(h2<=t2) x2=q2[h2];\n    if(h3<=t3) x3=q3[h3];\n    if(x1>=x2&&x1>=x3)  \n    { \n        h1++;  \n        return x1; \n    }\n    else if(x2>=x3)  \n    { \n        h2++;  \n        return x2; \n    }\n    else\n    {\n        h3++;  \n        return x3;\n    }\n}\nint main()\n{\n    \u8f93\u5165\u53ca\u521d\u59cb\u5316\n    sort(q1+1,q1+n+1,cmp);\n    for(int i=1;i<=m;i++)\n    {\n        top=TOP();\n        \u6a21\u62df\n    }\n    \u8f93\u51fa\n    return 0;\n}\n\n```",
        "postTime": 1560945752,
        "uid": 89371,
        "name": "Frostnova",
        "ccfLevel": 0,
        "title": "\u9898\u89e3P2827 \u3010\u86af\u8693\u3011"
    },
    {
        "content": "#### \u6d1b\u8c37 P2827 \u86af\u8693\n\u9996\u5148\u6700\u5bb9\u6613\u60f3\u5230\u7684\n85\u5206 \u4f18\u5148\u961f\u5217\n```\n#include <iostream>\n#include <cstdio>\n#include <queue>\n#include <cmath>\nusing namespace std;\npriority_queue<int> qy;\nint main(){\n\tint n,m,t,q;\n\tdouble u,v,p;\n\tscanf(\"%d %d %d %lf %lf %d\",&n,&m,&q,&u,&v,&t);\n\tp=u/v;\n\tfor(int i=0;i<n;++i)\n\t{\n\t\tint d;\n\t\tscanf(\"%d\",&d);\n\t\tqy.push(d);\n\t}\n\tint ans=0;\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tint d=qy.top()+ans;//\u8981\u5148\u8fd8\u539f\uff0c\u4e0d\u7136\u8ba1\u7b97d1 d2\u4f1a\u51fa\u9519 \n\t\tqy.pop();\n\t\tif(!(i%t))\n\t\t\tprintf(\"%d \",d);\n\t\tint d1=floor(p*double(d)),d2=d-d1;\n\t\td1-=ans;\n\t\td2-=ans;\n\t\td1-=q;\n\t\td2-=q;\n\t\t//\u51cf\u6389\u52a0\u4e0a\u7684ans\uff0c\u7531\u4e8ed1 d2\u5c11\u52a0\u4e00\u6b21q\uff0c\u5148\u51cf\u6389\u4e00\u6b21 \n\t\t//printf(\"%d %d %d\\n\",d,d1,d2);\n\t\tqy.push(d1);\n\t\tqy.push(d2);\n\t\tans+=q;\n\t}\n\tprintf(\"\\n\");\n\tfor(int i=1;i<=n+m;++i)\n\t{\n\t\tint d=qy.top();\n\t\tif(!(i%t))\n\t\t\tprintf(\"%d \",d+ans);\n\t\tqy.pop();\n\t}\n\tprintf(\"\\n\");\n\treturn 0;\n}\n```\n---\n\u770b\u5b8c\u9898\u89e3...emmm\n\u89e3\u91ca\u6458\u4e86aiyougege\u7684\u9898\u89e3\n\n\u5173\u952e\u70b9: \n\u53d1\u73b0\u6b64\u9898\u4e2d\u9690\u542b\u7684\u5355\u8c03\u6027.\n\u53d1\u73b0\u5148\u88ab\u5207\u6389\u7684\u86af\u8693\u5206\u6210\u7684\u86af\u8693\u4e00\u5b9a\u6bd4\u540e\u5207\u6389\u7684\u86af\u8693\u5206\u6210\u7684\u86af\u8693\u5927. \u3000\u3000\n\n\u8bc1\u660e:\n\u5047\u8bbe\u8fd9\u4e24\u53ea\u86af\u8693\u5206\u522b\u4e3aa,b,\u5176\u4e2da>b.\n\u90a3\u4e48\u5b83\u88ab\u5207\u6210a1,a2,t\u79d2\u540e, b\u88ab\u5207\u6210\u4e86b1,b2\n\u6b64\u65f6a1,a2\u7684\u957f\u5ea6\u4e3a```p*a+q*t```,```(1-p)*a+q*t```\n\u800cb1,b2\u7684\u957f\u5ea6\u5374\u4e3a```p*(b+q*t)```, ```(1-p)*(b+q*t)```\n\u6613\u770b\u51faa1>b1,a2>b2 .\\\n\u4e5f\u5c31\u662f\u8bf4\u6839\u672c\u4e0d\u9700\u8981\u7528\u4e00\u4e2a\u5806\u6765\u7ef4\u62a4, \u5b83\u672c\u6765\u5c31\u5177\u6709\u4e00\u5b9a\u5355\u8c03\u6027.\n\n\u90a3\u4e48\u5c31\u53ef\u4ee5\u5c06\u8fd9\u4e24\u5806\u4f9d\u6b21\u5b58\u50a8, \u52a0\u4e0a\u8fd8\u6ca1\u88ab\u5207\u8fc7\u7684\u86af\u8693.\u6bcf\u6b21\u8981\u5207\u65f6\u5728\u8fd9\u4e09\u5806\u91cc\u9762\u9009\u62e9\u6700\u5927\u7684, \u5207\u5b8c\u518d\u4f9d\u6b21\u653e\u56de\u53bb. \u3000\u3000\u6240\u4ee5\u8fd9\u4e48\u505a\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(m)O(m).\u518d\u4f18\u5316\u4e00\u4e0b\u7ec6\u8282\u57fa\u672c\u4e0a\u5c31\u6ca1\u95ee\u9898\u4e86.\n\n\u3000\u3000\u7ed3\u8bba: \u5584\u4e8e\u53d1\u73b0\u9898\u76ee\u4e2d\u9690\u542b\u7684\u5355\u8c03\u6027.\n\n\u3000\u3000Tip:\u6709\u4e9b\u7ec6\u8282\u9700\u8981\u4ed4\u7ec6\u8003\u8651\u4e0d\u7136\u4f1a\u5f88\u60e8\n```\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\nusing namespace std;\n#define N 7100005\nint n,m,k,t;\ndouble u,v,p;\nstruct T\n{\n    int h,t;\n    int q[N];\n}q[4];\nbool cmp(int a,int b)\n{\n    return a>b;\n}\nvoid push(int d,int x)\n{\n    q[d].t++;\n    q[d].q[q[d].t]=x;\n    //printf(\"%d %d\\n\",q.t,q.q[q.t]);\n}\nvoid pop(int d)\n{\n    q[d].h++;\n}\nint max()\n{\n    int d1=1,d2;\n    d2=q[2].q[q[2].h]>q[3].q[q[3].h]?2:3;\n    if(q[1].h>q[1].t)//\u6ce8\u610f\u6709\u53ef\u80fdq[1]\u4e3a\u7a7a \u540e\u9762\u662f0 \u800cq[2] q[3] \u4f1a\u51fa\u73b0\u8d1f\u6570\n        return d2;\n    d1=q[1].q[q[1].h]>q[d2].q[q[d2].h]?d1:d2;\n    return d1;\n}\nint main(){\n    //freopen(\"a.txt\",\"r\",stdin);\n    //freopen(\"b.txt\",\"w\",stdout);\n    q[1].h=1,q[1].t=0;\n    q[2].h=1,q[2].t=0;\n    q[3].h=1,q[3].t=0;\n    scanf(\"%d %d %d %lf %lf %d\",&n,&m,&k,&u,&v,&t);\n    p=u/v;\n    for(int i=0;i<n;++i)\n    {\n        int l;\n        scanf(\"%d\",&l);\n        push(1,l);\n    }\n    sort(q[1].q+1,q[1].q+n+1,cmp);\n    int ans=0;\n    for(int i=1;i<=m;++i)\n    {\n        int d=max();\n        int x=q[d].q[q[d].h]+ans;\n        if(!(i%t))\n            printf(\"%d \",x);\n        pop(d);\n        int a=floor(double(x)*p),b=x-a;\n        //printf(\"%d %d %d\\n\",x,a,b);\n        a-=ans,b-=ans;\n        a-=k,b-=k;\n        if(a>b)\n        {\n            push(2,a);\n            push(3,b);\n        }\n        else\n        {\n            push(2,b);\n            push(3,a);\n        }\n        ans+=k;\n    }\n    printf(\"\\n\");\n    for(int i=q[2].h;i<=q[2].t;++i)\n    {\n        push(1,q[2].q[i]);\n    }\n    for(int i=q[3].h;i<=q[3].t;++i)\n    {\n        push(1,q[3].q[i]);\n    }\n    sort(q[1].q+q[1].h,q[1].q+q[1].t+1,cmp);\n    int y=0;\n    for(int i=q[1].h;i<=q[1].t;++i)\n    {\n        y++;\n        if(!(y%t))\n            printf(\"%d \",q[1].q[i]+ans);\n        pop(1);\n    }\n    return 0;\n}\n```\n-----\n\u52a0\u4f18\u5316\n\u4e09\u4e2a\u5806\u90fd\u5177\u6709\u5355\u8c03\u6027\uff0c\u6bcf\u4e00\u6b21\u6bd4\u8f83\u4e09\u4e2a\u5806\u9876\u5c31\u80fd\u5f97\u5230\u6700\u5927\u503c\n```\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\nusing namespace std;\n#define N 7100005\nint n,m,k,t;\ndouble u,v,p;\nstruct T\n{\n    int h,t;\n    int q[N];\n}q[4];\nbool cmp(int a,int b)\n{\n    return a>b;\n}\nvoid push(int d,int x)\n{\n    q[d].t++;\n    q[d].q[q[d].t]=x;\n    //printf(\"%d %d\\n\",q.t,q.q[q.t]);\n}\nvoid pop(int d)\n{\n    q[d].h++;\n}\nint max()//\u4e09\u4e2a\u90fd\u8981\u5224\u7a7a \u4e03\u79cd\u60c5\u51b5 \u65e0\u6bd4\u9ebb\u70e6...\n{\n    int d1,d2,d3;\n    d1=q[2].q[q[2].h]>q[3].q[q[3].h]?2:3;\n    d2=q[1].q[q[1].h]>q[3].q[q[3].h]?1:3;\n    d3=q[2].q[q[2].h]>q[1].q[q[1].h]?2:1;\n    if(q[1].h>q[1].t)\n    {\n        if(q[2].h>q[2].t)//1 2\u4e3a\u7a7a\n            return 3;\n        if(q[3].h>q[3].t)//1 3\u4e3a\u7a7a\n            return 2;\n        return d1;//1\u4e3a\u7a7a\n    }\n    if(q[2].h>q[2].t)\n    {\n        if(q[3].h>q[3].t)//2 3\u4e3a\u7a7a\n            return 1;\n        return d2;//2\u4e3a\u7a7a\n    }\n    if(q[1].h>q[1].t)//3\u4e3a\u7a7a\n        return d3;\n    return q[d1].q[q[d1].h]>q[d2].q[q[d2].h]?d1:d2;//\u90fd\u4e0d\u4e3a\u7a7a \u53ef\u4ee5\u4efb\u610f\u4e24\u4e2a\u6bd4\u8f83\n}\nint main(){\n    //freopen(\"a.txt\",\"r\",stdin);\n    //freopen(\"b.txt\",\"w\",stdout);\n    q[1].h=1,q[1].t=0;\n    q[2].h=1,q[2].t=0;\n    q[3].h=1,q[3].t=0;\n    scanf(\"%d %d %d %lf %lf %d\",&n,&m,&k,&u,&v,&t);\n    p=u/v;\n    for(int i=0;i<n;++i)\n    {\n        int l;\n        scanf(\"%d\",&l);\n        push(1,l);\n    }\n    sort(q[1].q+1,q[1].q+n+1,cmp);\n    int ans=0;\n    for(int i=1;i<=m;++i)\n    {\n        int d=max();\n        int x=q[d].q[q[d].h]+ans;\n        if(!(i%t))\n            printf(\"%d \",x);\n        pop(d);\n        int a=floor(double(x)*p),b=x-a;\n        //printf(\"%d %d %d\\n\",x,a,b);\n        a-=ans,b-=ans;\n        a-=k,b-=k;\n        if(a>b)\n        {\n            push(2,a);\n            push(3,b);\n        }\n        else\n        {\n            push(2,b);\n            push(3,a);\n        }\n        ans+=k;\n    }\n    printf(\"\\n\");\n    for(int i=1;i<=m+n;++i)//\u76f4\u63a5\u5229\u7528\u5355\u8c03\u6027 \u627e\u4e09\u4e2a\u961f\u5217\u6700\u5927\u503c\u5e76\u51fa\u961f\n    {\n        int d=max();\n        int x=q[d].q[q[d].h]+ans;\n        pop(d);\n        if(!(i%t))\n            printf(\"%d \",x);\n    }\n    return 0;\n}\n```",
        "postTime": 1553399762,
        "uid": 108821,
        "name": "Mintind",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2827 \u3010\u86af\u8693\u3011"
    },
    {
        "content": "## NOIP2016 day2 t2  \u86af\u8693\n\n\u201c\u8fd9\u9898\u6709\u4e00\u79cd\u5e7f\u4e3a\u4eba\u77e5\u7684\u505a\u6cd5\uff0c\u5b83\u53eb**\u4f18\u5148\u961f\u5217**\u3002\u201d\n\u2014\u2014\u5e72\u7269\u56fd\u5927\u7687\u5e1d\n\n\u55ef\u2026\u2026\u611f\u89c9\u50cf\u4e2a\u6a21\u62df\u3002\n\n-   \u7528sum\u5c06\u86af\u8693\u7684\u603b\u589e\u957f\u8ba1\u7b97\u51fa\u6765\uff0c\u56e0\u4e3a\u86af\u8693\u4eec\u7684\u589e\u957f\u76f8\u540c\u6240\u4ee5\u4e0d\u4f1a\u5f71\u54cd\u6392\u4f4d\uff0c\u4e5f\u80fd\u66f4\u65b9\u4fbf\u64cd\u4f5c\u3002\n-   \u8fd9\u9898\u8f93\u51fa\u6709\u70b9\u5927\uff08\u968f\u4fbf\u770b\u4e86\u4e00\u4e2a\u70b9\uff0c\u67091M\u591a\uff09\uff0c\u5f3a\u70c8\u63a8\u8350\u4f7f\u7528 **\u5feb\u8bfb\u5feb\u8f93**\uff08\u987a\u5e26\u4e00\u63d0\uff0ccode\u4e2d\u7684\u5feb\u8f93\u662f\u81ea\u9002\u5e94\u578b\uff0c\u4e0d\u7528\u6539\u6570\u636e\u7c7b\u578b\uff0c\u53ef\u4ee5\u56fe\u4e2a\u65b9\u4fbf\uff09\u3002\n-   \u6b64\u9898\u8fd8\u8981\u6ce8\u610f\u4e00\u4e0b\uff0c\u4ec0\u4e48\u65f6\u5019\u4fdd\u7559\u5c0f\u6570\uff0c\u4ec0\u4e48\u65f6\u5019\u53d6\u6574\u3002\n \n~~\u6715\u7684\u4ee3\u7801\u4e00\u5411\u53ef\u8bfb\u6027\u8f83\u9ad8~~\uff0c\u770b\u4e0d\u61c2\u7684\u53ef\u4ee5\u5728\u804a\u5929\u680f\u91cc\u5192\u6ce1\u3002\u5982\u6709\u66f4\u597d\u7684\u65b9\u6cd5\uff08\u7b80\u6d01+\u9ad8\u6548\uff09\uff0c\u6b22\u8fce\u4f17\u5e05\u537f\u9753\u81e3\u4e0a\u758f\u76f4\u8c0f\n \n //\u6ca1\u62a2\u5230Bilibili\u4eca\u5e74\u7684\u62dc\u5e74\u796d\u624b\u529e\uff0c\u5fc3\u788epianggang\u2026\u2026\n \n------------\n### 65\u5206\uff1a\u4f18\u5148\u961f\u5217\n\uff08\u6d1b\u8c37\u4e0a\u6570\u636e\u597d\u50cf\u6709\u70b9\u6c34\uff0c\u6d4b\u51fa\u676585\u5206\uff0c\u5b98\u65b9\u6570\u636e\u662f65\u5206\uff09\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n\ndouble p;\nint sum;//\u86af\u8693\u603b\u589e\u957f \nint n, m, k/*q*/, u, v, t;\npriority_queue<int> q;//\u4f18\u5148\u961f\u5217 \n\nil int read()  {\n  int x=0;  bool f=1;  char ch=getchar();\n  while(ch<48||ch>57)  { if(ch=='-') f=0;  ch=getchar(); }\n  while(ch>=48&&ch<=57)  { x=(x<<3)+(x<<1)+(ch^48);  ch=getchar(); }\n  return f?x:-x;\n}\ntemplate<typename T> void print(const T x)  {\n  if(x >= 10)  print(x/10);\n  putchar( (x%10)|48 ); \n}\ntemplate<typename T>il void put(const T x)  {\n  if(x < 0)  putchar('-'), print(-x);\n  else  print(x);\n}\n\n\nint main()  {\n  freopen(\"input1.txt\", \"r\", stdin);\n  //freopen(\"output.txt\", \"w\", stdout);\n  \n  n=read(), m=read(), k=read(), u=read(), v=read(), t=read();\n  p = (double)u/v;//\u4e0d\u8981\u6389\u7cbe\u5ea6\n  for(int i = 0; i < n; ++i)  {\n  \tint a;\n  \ta=read();\n  \tq.push(a);\n  }\n  for(int i = 1; i <= m; ++i)  {\n  \tint l = q.top()+sum;//\u88ab\u5207\u7684\u86af\u8693\u7684\u957f\u5ea6\n  \tif(i%t == 0)  put(l), putchar(' ');/* \u8f93\u51fa\u7b2c\u4e00\u6392 */\n\tq.pop();\n\tsum += k;\n\tint nl = l*p;\n\tq.push(nl-sum);\n\tq.push(l-nl-sum); \n  }\n  printf(\"\\n\");\n  int tim = 0;\n  while( !q.empty() )  {\n  \ttim++;\n  \tint l = q.top()+sum;\n  \tif(tim%t == 0)  put(l), putchar(' ');\n  \tq.pop();\n  }\n  \n  return 0;\n}\n```\n\n\n------------\n### 100\u5206\uff1a\u624b\u5de5\u961f\u5217\n#### \u4f18\u5148\u961f\u5217\u4e0d\u591f\u5feb\uff0c\u4f1aTLE\uff01\uff01\n\n\u4ed4\u7ec6\u60f3\u60f3\uff0c\u5c31\u80fd\u53d1\u73b0**\u5148\u88ab\u5207\u6389**\u7684\u86af\u8693\u5206\u6210\u7684\u86af\u8693\u4e00\u5b9a\u6bd4**\u540e\u5207\u6389**\u7684\u86af\u8693\u5206\u6210\u7684\u86af\u8693\u957f\uff0c\u8fd9\u5c31\u662f\u9898\u76ee\u4e2d\u9690\u542b\u7684\u5355\u8c03\u6027\u3002\n\u90a3\u4e48\u86af\u8693\u6709\u5982\u4e0b\u4e09\u79cd\u72b6\u6001\uff1a\n\n1. q\uff1a \u6ca1\u5207\u7684\uff1b\n2. q1\uff1a \u5207\u4e86\u7684\uff1b\n3. q2\uff1a \u5207\u5269\u4e0b\u7684\u3002\n\n\u7531\u6b64\u53ef\u5f97\uff1a\u6bcf\u4e2a\u6a21\u62df\u961f\u5217\u7684\u7b2c\u4e00\u4e2a\u503c\uff08q[0], q1[0], q2[0]\uff09\u90fd\u4e3a\u8be5\u961f\u5217\u4e2d\u6700\u5927\u3002\n\n\u5982\u6b64\u8fd9\u822c\uff0c\u7528DIY\u7684\u624b\u5de5\u961f\u5217\u66ff\u6362\u4f18\u5148\u961f\u5217\u5373\u53ef\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n\nconst int N = 1e5+5, M = 7e6+5;\nconst int inf = 0x3f3f3f3f;\ndouble p;\nint sum;\nint n, m, k, u, v, t;\nint q[N], q1[M], q2[M], head, head1, head2, tail, tail1, tail2;//\u624b\u5de5\u961f\u5217 \n\nil int read()  {\n  int x=0;  bool f=1;  char ch=getchar();\n  while(ch<48||ch>57)  { if(ch=='-') f=0;  ch=getchar(); }\n  while(ch>=48&&ch<=57)  { x=(x<<3)+(x<<1)+(ch^48);  ch=getchar(); }\n  return f?x:-x;\n}\ntemplate<typename T> void print(const T x)  {\n  if(x >= 10)  print(x/10);\n  putchar( (x%10)|48 ); \n}\ntemplate<typename T>il void put(const T x)  {\n  if(x < 0)  putchar('-'), print(-x);\n  else  print(x);\n}\n\n\nil bool cmp(int a, int b)  { return a > b; }\n\n\nil int TOP()  {//\u76f8\u5f53\u4e8e q.top() \n  int x=-inf, x1=-inf, x2=-inf;\n  if(head < tail)  x = q[head];\n  if(head1 < tail1)  x1 = q1[head1];\n  if(head2 < tail2)  x2 = q2[head2];\n  if(x>=x1 && x>x2)  { head++;  return x; }//x\u6700\u5927 \n  else if(x1 > x2)  { head1++;  return x1; }//x1\u6700\u5927 \n  head2++;  return x2;//x2\u6700\u5927 \n}\n\n\nint main()  {\n  n=read(), m=read(), k=read(), u=read(), v=read(), t=read();\n  p = (double)u/v;//\u6d6e\u70b9\u6570\u7cbe\u5ea6\u4e0d\u8981\u4e22 \n  tail = n;\n  for(int i = 0; i < n; ++i)  q[i]=read();\n  sort(q, q+n, cmp);//\u4f18\u5148\u6027 \n  //q, q1, q2\u90fd\u662f0\u57fa\u51c6\n  for(int i = 1; i <= m; ++i)  {\n  \tint x = TOP()+sum;\n  \tif(i%t == 0)  put(x), putchar(' ');\n  \tsum += k;\n  \tint nx = p*x;\n  \tint x1 = nx-sum, x2 = x-nx-sum;\n  \tq1[tail1++]=x1, q2[tail2++]=x2;\n  }\n  putchar('\\n');\n  int tim = 0;\n  while( ++tim<=(n+m) )\n  \tif(tim%t == 0)  put(TOP()+sum), putchar(' ');\n  \telse  TOP();//\u51fa\u961f=q.pop() \n  \n  return 0;\n}\n```",
        "postTime": 1550201425,
        "uid": 149062,
        "name": "\u5e72\u7269\u56fd\u5927\u7687\u5e1d",
        "ccfLevel": 0,
        "title": "NOIP2016 day2 t2  \u86af\u8693"
    },
    {
        "content": "\u6211\u4eec\u53ef\u4ee5\u628a\u5168\u90e8\u7684\u86af\u8693\u5206\u4e3a\u4e09\u7c7b\uff1a\n\n1\u3001\u4e00\u5f00\u59cb\u5c31\u6709\u7684\u521d\u59cb\u86af\u8693\n\n2\u3001\u5207\u6389\u540e\u77ed\u7684\u90a3\u90e8\u5206\u7684\u86af\u8693\n\n3\u3001\u5207\u6389\u540e\u957f\u7684\u90a3\u90e8\u5206\u7684\u86af\u8693\n\n\u56e0\u4e3a\u5148\u5207\u6389\u7684\u86af\u8693\u4e24\u90e8\u5206\u957f\u5ea6\u4e00\u5b9a\u90fd\u6bd4\u540e\u5207\u6389\u7684\u86af\u8693\u4e24\u90e8\u5206\u957f\uff08\u56e0\u4e3a\u5207\u6389\u7684p\u548c\u589e\u957f\u7684q\u90fd\u662f\u4e00\u6837\u7684\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u8fd9\u4e9b\u86af\u8693\u957f\u5ea6\u7684\u5355\u8c03\u9012\u51cf\u6027\uff0c\u5c31\u53ea\u9700\u8981\u5728\u628a\u521d\u59cb\u7684\u86af\u8693\u5165\u961f\u524d\u4ece\u5927\u5230\u5c0f\u6392\u4e2a\u5e8f\uff0c\u7136\u540e\u5728\u4e4b\u540e\u7684\u6bcf\u4e00\u79d2\u53d6\u51fa\u6700\u957f\u7684\u86af\u8693\u65f6\uff0c\u4ece\u4e09\u4e2a\u961f\u5217\u4e2d\u627e\u51fa\u6700\u5927\u7684\u5373\u53ef\uff0c\u56e0\u4e3a\u4e09\u4e2a\u961f\u5217\u90fd\u662f\u5206\u522b\u7b26\u5408\u5355\u8c03\u9012\u51cf\u6027\u7684\u3002\n\n\u5bf9\u4e8e\u9664\u4e86\u5207\u65ad\u7684\u86af\u8693\u90fd\u9700\u8981\u52a0\u4e0a\u957f\u5ea6q\uff0c\u663e\u7136\u6211\u4eec\u4e0d\u80fd\u6bcf\u6b21\u628a\u5168\u90e8\u86af\u8693\u4ece\u961f\u5217\u91cc\u53d6\u51fa\u6765\uff0c\u52a0\u4e0aq\u540e\u518d\u91cd\u65b0\u5165\u961f\u3002\u5176\u5b9e\u5269\u4e0b\u7684\u86af\u8693\u589e\u52a0\u957f\u5ea6\uff0c\u76f8\u5f53\u4e8e\u5207\u65ad\u7684\u86af\u8693\u51cf\u5c11\u76f8\u540c\u7684\u957f\u5ea6\u3002\u53ea\u9700\u8981\u6bcf\u79d2\u90fd\u628a\u589e\u91cf(addlen)\u4e00\u76f4\u52a0q\uff0c\u7136\u540e\u6c42\u7b54\u6848\u65f6\u5c31\u628a\u672c\u8eab\u957f\u5ea6+addlen\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u8ba1\u7b97\u4e86\u5207\u6389\u7684\u4e24\u90e8\u5206\u957f\u5ea6\uff0c\u9700\u8981\u628a\u5bf9\u5e94\n\u7684\u90e8\u5206\u653e\u5230\u6b63\u786e\u7684\u961f\u5217\u91cc\uff0c\u5373\u5c0f\u7684\u90e8\u5206\u653e\u5230minpart\uff0c\u5927\u7684\u90e8\u5206\u653e\u5230maxpart\u3002\n\n\u8f93\u51fa\u6700\u540e\u86af\u8693\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u540e\u7684\u957f\u5ea6\u65f6\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u628a\u961f\u5217\u91cc\u5143\u7d20\u5168\u90e8\u53d6\u51fa\u518d\u8fdb\u884c\u6392\u5e8f\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6309\u7167\u548c\u524d\u9762\u53d6\u51fa\u6700\u957f\u7684\u86af\u8693\u7684\u76f8\u540c\u7684\u601d\u8def\uff0c\u6bcf\u6b21\u53d6\u51fa\u4e09\u4e2a\u961f\u5217\u4e2d\u6700\u5927\u7684\u5143\u7d20\uff0c\u653e\u5230\u7b54\u6848\u6570\u7ec4\u4e2d\uff0c\u6700\u540e\u7b54\u6848\u6570\u7ec4\u4e2d\u5c31\u662f\u4ece\u5927\u5230\u5c0f\u7684\u5143\u7d20\u5566\u3002\n\n\u8fd8\u6709\u4e00\u70b9\u5c0f\u5c0f\u7684\u9700\u8981\u6ce8\u610f\u7684\uff1a\n\n1\u3001\u628a\u6570\u5f00\u5927\u4e00\u70b9\uff08long long\uff09\uff0c\u4e0d\u7136\u4f1a\u7206\u6389\uff0c\u53ea\u670970\u5206\n\n2\u3001\u5bf9\u4e8e\u6211\u4eec\u9700\u8981\u81ea\u5df1\u6c42\u7684p=u/v\uff0c\u6211\u4e0d\u5efa\u8bae\u5927\u5bb6\u76f4\u63a5double p=(double)u/v\uff0c\u56e0\u4e3a\u6d6e\u70b9\u6570\u7684\u7cbe\u5ea6\u95ee\u9898\u5f88\u9ebb\u70e6\u7684\uff0c\u8fd8\u662f\u5efa\u8bae\u5927\u5bb6\u6309\u7167\u6211\u90a3\u6837\u7ed3\u6210\u5206\u6570\u5f62\u5f0f\uff0c\u7528\u7684\u65f6\u5019*pfenzi/pfenmu\u5373\u53ef\uff0c\u4f46\u5c0f\u5fc3\u4e58\u7684\u65f6\u5019\u7206int\n\n3\u3001findmax\u5728\u4e09\u4e2a\u961f\u5217\u91cc\u627e\u6700\u5927\u5143\u7d20\u65f6\uff0c\u6700\u5927\u503c\u4e00\u5b9a\u8981\u5f00\u5f88\u5c0f\u5f88\u5c0f\uff0c\u6bd4\u5982-1(1<<30)\uff0c\u53cd\u6b63\u5f00\u6210-1\u4f1a\u6b7b\u5faa\u73af\uff08\u6211\u4e5f\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u3002\u3002\u3002\u3002\uff09\n\n\u8be6\u7ec6\u770b\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\ninline int read()//\u8bfb\u5165\u4f18\u5316 \n{\n\tint f=1;\n\tint i=0;\n\tchar ch;\n\tfor(ch=getchar();!isdigit(ch)&&ch!='-';ch=getchar());\n\tif(ch=='-')\n\t{\n\t\tint f=-1;\n\t\tch=getchar();\n\t}\n\tfor(;isdigit(ch);ch=getchar())\n\t\ti=(i<<1)+(i<<3)+ch-'0';\n\treturn i*f;\n}\ninline void write(int x)//\u8f93\u51fa\u4f18\u5316 \n{\n    if(x<0)\n\t{\n\t\tputchar('-');\n\t\tx=-x;\n\t}\n    if(x>9)\n\t\twrite(x/10);\n    putchar(x%10+'0');\n    return;\n}\nbool com(int a,int b)//\u81ea\u5b9a\u4e49\u5927\u5c0f\u6bd4\u8f83\u6392\u5e8f\u51fd\u6570 \n{\n\treturn a>b;//\u4ece\u5927\u5230\u5c0f\u6392\u5e8f \n}\nqueue<ll> origin,minpart,maxpart;//\u4e09\u4e2a\u961f\u5217\uff1a\u521d\u59cb\uff0c\u5207\u6389\u540e\u7684\u5c0f\u90e8\u5206\uff0c\u5207\u6389\u540e\u7684\u5927\u90e8\u5206 \ninline ll findmax()//\u5728\u4e09\u4e2a\u961f\u5217\u4e2d\u627e\u6700\u5927\u503c \n{\n\tll orimax=-(1<<30);\n\tll minmax=-(1<<30);\n\tll maxmax=-(1<<30);\n\tif(!origin.empty()) \n\t\torimax=origin.front();//\u521d\u59cb\u961f\u5217\u7684\u6700\u5927\u503c \n\tif(!minpart.empty())\n\t\tminmax=minpart.front();//\u5c0f\u90e8\u5206\u961f\u5217\u7684\u6700\u5927\u503c \n\tif(!maxpart.empty())\n\t\tmaxmax=maxpart.front();//\u5927\u90e8\u5206\u961f\u5217\u7684\u6700\u5927\u503c \n\tif(orimax>=minmax&&orimax>=maxmax)\n\t{\n\t\torigin.pop();\n\t\treturn orimax;\n\t}\n\tif(maxmax>=orimax&&maxmax>=minmax)\n\t{\n\t\tmaxpart.pop();\n\t\treturn maxmax;\n\t}\n\tif(minmax>=orimax&&minmax>=maxmax)\n\t{\n\t\tminpart.pop();\n\t\treturn minmax;\n\t}//\u627e\u51fa\u6700\u5927\u503c\uff0c\u8fd4\u56de\u6700\u5927\u503c\uff0c**\u5f39\u51fa\u6700\u5927\u503c** \n}\ninline void push(ll a,ll b)//\u5207\u5272\u540e\u4e24\u90e8\u5206\u5206\u522b\u5165\u961f \n{\n\tif(a<b) \n\t\tswap(a,b);//\u8ba9a\u4e3a\u6700\u5927\u7684\u90e8\u5206 \n\tmaxpart.push(a);//\u5927\u7684\u90e8\u5206\u52a0\u5165\u5927\u90e8\u5206\u961f\u5217 \n\tminpart.push(b);//\u5c0f\u7684\u90e8\u5206\u52a0\u5165\u5c0f\u90e8\u5206\u961f\u5217 \n}\nll n,m,q,u,v,t;//\u9898\u76ee\u8981\u6c42 \nll pfenzi,pfenmu;//\u8ba1\u7b97\u5207\u5f00\u957f\u5ea6\u7684p \nll a[7500005];//\u5f00\u59cb\u7684\u86af\u8693\u957f\u5ea6\uff0c\u4e5f\u7528\u4e8e\u50a8\u5b58\u3001\u8f93\u51fa\u6700\u540e\u7684\u86af\u8693\u957f\u5ea6 \nll len[7500005];//\u6bcf\u4e00\u79d2\u5207\u6389\u7684\u86af\u8693\u7684\u957f\u5ea6 \nll addlen;//\u957f\u5ea6\u589e\u91cf \nll tot;//\u8bb0\u5f55\u6700\u540e\u7684\u86af\u8693\u6570 \nint main()\n{\n\tn=read();//n\u53ea\u86af\u8693\n\tm=read();//\u6551\u5175\u8fd8\u9700\u8981m\u79d2\u624d\u80fd\u5230\u6765\n\tq=read();//\u86af\u8693\u7684\u957f\u5ea6\u90fd\u4f1a\u589e\u52a0q \n\tu=read();//\u8ba1\u7b97q\u503c \n\tv=read();//\u8ba1\u7b97q\u503c \n\tt=read();//\u8f93\u51fa\u53c2\u6570\n\tpfenzi=u,pfenmu=v;//p=u/v\uff1b \n\tfor(ll i=1;i<=n;i++)\n\t\ta[i]=read();//\u7b2ci\u53ea\u86af\u8693\u7684\u957f\u5ea6\n\tsort(a+1,a+1+n,com);//\u6309\u7167\u957f\u5ea6\u4ece\u5927\u5230\u5c0f\u6392\u5e8f \n\tfor(ll i=1;i<=n;i++)//\u4fdd\u8bc1\u521d\u59cb\u961f\u5217\u5355\u8c03\u9012\u51cf \n\t\torigin.push(a[i]);//\u628a\u521d\u59cb\u957f\u5ea6\u52a0\u5165\u521d\u59cb\u961f\u5217 \n\tfor(ll i=1;i<=m;i++)//m\u79d2 \n\t{\n\t\tlen[i]=findmax()+addlen;\n\t\tll lpart=len[i]*pfenzi/pfenmu;\n\t\tll rpart=len[i]-lpart;//\u8ba1\u7b97\u5207\u6389\u7684\u4e24\u90e8\u5206\u957f\u5ea6 \n\t\taddlen+=q;//\u86af\u8693\u6bcf\u4e00\u79d2\u90fd\u8981\u589e\u957f \n\t\tpush(lpart-addlen,rpart-addlen);//\u5c06\u4e24\u90e8\u5206\u5206\u522b\u52a0\u5165\u5927\u3001\u5c0f\u90e8\u5206\u961f\u5217 \n\t}\n\twhile(!origin.empty()||!maxpart.empty()||!minpart.empty())//\u5f53\u8fd8\u6709\u6570\u6ca1\u53d6\u51fa\u6765\u65f6 \n\t\ta[++tot]=findmax()+addlen;//\u627e\u51fa\u6700\u5927\u7684\u653e\u5230\u7b54\u6848\u6570\u7ec4\uff0c\u76f8\u5f53\u4e8e\u4ece\u5927\u5230\u5c0f\u6392\u5e8f \n\tfor(ll i=t;i<=m;i+=t)//\u6bcf\u95f4\u9694t\u8f93\u51fa\u4e00\u6b21 \n\t{\n\t\twrite(len[i]);//\u8f93\u51fa\u526a\u77ed\u86af\u8693\u7684\u957f\u5ea6 \n\t\tprintf(\" \");\n\t}\n\tprintf(\"\\n\");//\u6362\u884c \n\tfor(ll i=t;i<=tot;i+=t)//\u6bcf\u95f4\u9694t\u8f93\u51fa\u4e00\u6b21 \n\t{\n\t\twrite(a[i]);//\u8f93\u51fa\u6700\u540e\u5269\u4e0b\u7684\u86af\u8693\u7684\u957f\u5ea6 \n\t\tprintf(\" \");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1540952932,
        "uid": 59097,
        "name": "\u5f20\u4ea6\u5f1b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2827 \u3010\u86af\u8693\u3011"
    },
    {
        "content": "AC\u9700\u8981O\uff08M\uff09O\uff08M\uff09\u7b97\u6cd5 \n\u6211\u4eec\u5148\u60f3\u4e00\u4e2aO\uff08MlogN\uff09O\uff08MlogN\uff09\u7684\u7b97\u6cd5\uff0c\u7136\u540e\u60f3\u529e\u6cd5\u4f18\u5316\u6389logN\n\n\u9700\u8981\u505a\u7684\u5c31\u662f\u4e0d\u65ad\u5730\u627e\u6700\u957f\u86af\u8693\uff0c\u7136\u540e\u5207\u4e00\u5207\uff0c\u518d\u7ed9\u8fd9\u6b21\u6ca1\u6709\u88ab\u5207\u7684\u86af\u8693\u52a0\u4e0a\u4e00\u4e2a\u957f\u5ea6q\n\n\u81ea\u7136\u53ef\u4ee5\u60f3\u5230\u5806\u6765\u52a8\u6001\u7ef4\u62a4\u6700\u5927\u503c\uff0c\u7136\u540e\u9700\u8981\u8003\u8651\u6bcf\u6b21\u5207\u5272\u540e\u86af\u8693\u7684\u589e\u957f\u8be5\u600e\u4e48\u64cd\u4f5c\u3002\u4e0d\u80fd\u53bb\u6bcf\u5207\u4e00\u6b21\u5c31\u626b\u4e00\u8fb9\u6570\u7ec4\uff0c\u9700\u8981\u627e\u5230\u4e00\u79cd\u5dee\u5206\u7684\u65b9\u6cd5\uff0c\u628a\u533a\u95f4\u64cd\u4f5c\u6539\u4e3a\u7aef\u70b9\u64cd\u4f5c\u3002\n\n\u91cd\u70b9\u662f\u5dee\u5206\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u4e00\u4e2a\u86af\u8693\u88ab\u5207\uff0c\u5176\u4ed6\u86af\u8693\u589e\u957fp\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2a\u53d8\u91cfsope\u8868\u793a\u6700\u5927\u589e\u957f\u64cd\u4f5c\u6570*p\uff0c\u7136\u540e\uff0c\u628a\u88ab\u5207\u7684\u86af\u8693\u957f\u5ea6-p\uff0c\u5176\u4ed6\u86af\u8693\u957f\u5ea6\u4e0d\u53d8\uff0c\u6700\u540e\u8f93\u51fa\u7684\u65f6\u5019\uff0c\u5168\u52a0\u4e0asope\uff0c\u7ed3\u679c\u5c31\u662f\u5bf9\u7684\n\n\u73b0\u5728\u53bb\u4f18\u5316logN\uff0c\u627e\u627e\u89c4\u5f8b\u53ef\u4ee5\u53d1\u73b0\u86af\u8693\u662f\u8d8a\u5207\u8d8a\u5c0f\u7684\uff0c\u5e76\u4e14\u957f\u86af\u8693\u5207\u7684\u4e24\u90e8\u5206\u4e00\u5b9a\u4f1a\u5206\u522b\u5927\u4e8e\u77ed\u86af\u8693\u5207\u7684\u4e24\u90e8\u5206\u3002\n\n\u8fd9\u6837\u7684\u8bdd\u53ef\u4ee5\u5f00\u4e09\u4e2a\u961f\u5217\uff0c\u628a\u8f93\u5165\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u540e\u653e\u5165\u7b2c\u4e00\u4e2a\u961f\u5217\uff0c \n\u5207\u51fa\u7684\u7b2c\u4e00\u90e8\u5206\u653e\u5230\u7b2c\u4e8c\u4e2a\u961f\u5217\uff0c\u7b2c\u4e09\u90e8\u5206\u653e\u5230\u7b2c\u4e09\u4e2a\u961f\u5217 \n\u6839\u636e\u5df2\u77e5\u7684\u6027\u8d28\uff0c\u4e09\u4e2a\u961f\u5217\u4e00\u5b9a\u6ee1\u8db3\u5355\u8c03\u9012\u51cf\uff0c\u6211\u4eec\u4f9d\u6b21\u53d6\u6700\u5927\u7684\u961f\u9996\u5373\u53ef\n\n\u6709\u4e2a\u5c0f\u7ec6\u8282\uff1a\n```\nint fir = (long long)fx*u/v;;\nint sec = fx - fir;\nfir -= (sope + q); \nsec -= (sope + q);\n\n```\n\u65b0\u5207\u7684\u86af\u8693\u51cf\u5c11sope+q\uff1f \n\u6211\u4eec\u6210\u529f\u5dee\u5206\u7684\u6761\u4ef6\u662f\uff0c\u533a\u95f4\u6240\u6709\u503c\u7684\u76f8\u5bf9\u5927\u5c0f\u4e0d\u53d8\uff0c\u5728\u65b0\u86af\u8693\u52a0\u5165\u4e4b\u524d\uff0c\u5176\u4ed6\u7684\u86af\u8693\u5df2\u7ecf\u589e\u957f\u4e86sope\uff0c\u52a0\u5165\u4e4b\u540e\uff0c\u5176\u4ed6\u86af\u8693\u53c8\u589e\u957f\u4e86q \n\u5176\u4ed6\u7684\u589e\u52a0\u4e86\u591a\u5c11\uff0c\u5c31\u9700\u8981\u5bf9\u4e0d\u589e\u52a0\u7684\u51cf\u5c11\u591a\u5c11\uff0c\u6240\u4ee5\u9700\u8981\u5bf9\u65b0\u86af\u8693\u51cf\u53bb(sope+q)\n\n## \u4ee3\u7801\uff1a\n```cpp\n#include <cstdio>\n#include <queue>\n#include <cmath>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n#define debug(x) cerr<<#x<<\"=\"<<x<<endl;\nconst int MAXN = 1e5+10;\nconst int MAXM = 7*1e6+10;\nint n,m,q,v,t,a[MAXN],den,size,ans[MAXN+MAXM],u;\ndouble p;\nbool cmp(int a, int b) {\n    return a > b;\n}\nqueue <int> e[3];\nint getMax() {\n    int res = -1;\n    for(int i=0; i<3; i++) {\n        if((!e[i].empty()) && (res == -1 || e[i].front() > e[res].front()))\n            res = i;\n    }\n    return res;\n}\nint main() {\n    scanf(\"%d %d %d %d %d %d\",&n,&m,&q,&u,&v,&t);\n    for(int i=1; i<=n; i++) \n        scanf(\"%d\",&a[i]);\n    sort(a+1,a+n+1,cmp);\n    for(int i=1; i<=n; i++)\n        e[0].push(a[i]);    \n    for(int i=1; i<=m; i++) {\n        int f1=0, f2=0, f3=0;\n        int id = getMax();\n        int sope = (i-1)*q;\n        int fx = e[id].front();\n        e[id].pop();\n        fx += sope;\n        if(!(i%t))\n            printf(\"%d \",fx);\n        int fir = (long long)fx*u/v;;\n        int sec = fx - fir;\n        fir -= (sope + q);\n        sec -= (sope + q);\n        e[1].push(fir);\n        e[2].push(sec);\n    }\n    printf(\"\\n\");\n    int sope = q*m;\n    for(int i=1; i<=n+m; i++) {\n        int id = getMax();\n        int fx = e[id].front();\n        e[id].pop();\n        if(!(i%t))\n            printf(\"%d \",fx+sope);\n    }\n    return 0;\n}\n```",
        "postTime": 1539994332,
        "uid": 69036,
        "name": "\u8c26\u8c26\u541b\u5b50",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2827 \u3010\u86af\u8693\u3011"
    },
    {
        "content": "\u849f\u84bb\u535a\u5ba2\u4f20\u9001\u95e8\uff1a[QAQ](https://www.cnblogs.com/GoldenPotato/p/9615308.html)\n\n\n------------\n\n## Solution\n\n\u770b\u5230\u8fd9\u9898\uff0c\u6211\u4eec\u80af\u5b9a\u4f1a\u6709\u4e00\u4e2a\u5927\u80c6\u60f3\u6cd5\u3002\n\n\u90a3\u5c31\u662f\u76f4\u63a5\u7528\u5806\u6a21\u62df\u8fd9\u4e2a\u8fc7\u7a0b\u3002\n\n**\u5bf9\u4e8eq\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u5806\u4e2d\u591a\u7ef4\u62a4\u4e00\u4e2aT,\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u63d2\u5165\u7684\u65f6\u95f4\uff0c\u5728\u65b0\u7684\u5143\u7d20\u63d2\u5165\u65f6\u76f4\u63a5\u8ba1\u7b97\u6240\u6bd4\u8f83\u7684\u70b9\u7684\u5f53\u524d\u957f\u5ea6\u5c31\u53ef\u4ee5\u5b8c\u6210\u63d2\u5165\u4e86\u3002**\n\n**\u65f6\u95f4\u590d\u6742\u5ea6** $O(M*log(M))$\n\n\u8fd9\u6837\u7684\u505a\u6cd5\u53ea\u80fd\u83b7\u5f9765-70\u5206\uff0c\u56e0\u4e3a\u540e\u9762\u7684\u6570\u636e\u975e\u5e38\u5927\u3002\n\n .\n\n\u6240\u4ee5\u8bf4\uff0c\u6211\u4eec\u8981\u53e6\u5bfb\u4ed6\u8def\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u7ecf\u8fc7~~\u770b\u9898\u89e3~~\u624b\u73a9\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u5f88\u663e\u7136\u4f46\u662f\u5f88\u91cd\u8981\u7684\u7ed3\u8bba\uff1a\n\n**\u5728q=0\u7684\u65f6\u5019\uff0c\u4e00\u6761\u7ebf\u6bb5\u6240\u5206\u88c2\u51fa\u6765\u7684\u4e24\u6761\u7ebf\u6bb5\u80af\u5b9a\u8981\u6bd4\u5b83\u66f4\u5c0f\u7684\u7ebf\u6bb5\u5206\u88c2\u51fa\u6765\u7684\u5bf9\u5e94\u7684\u4e24\u6761\u7ebf\u6bb5\u66f4\u5927\u3002\n**\n\n\u8bc1\u660e\u5341\u5206\u7b80\u5355\uff0c\u8bbex\uff0cy\u4e3a\u4e24\u6761\u5206\u88c2\u524d\u7684\u7ebf\u6bb5\uff0c\u4e14x>y\n\n\u90a3\u4e48\uff0c\u8f83\u957f\u7684\u90a3\u4e00\u6761(\u5047\u8bbep>0.5(p\u4e3a\u5206\u5272\u70b9)) \u4e3a\uff1a px \u4e0e py\uff0c \u663e\u7136\uff0cpx>py\n\n\u540c\u7406\u53ef\u8bc1\u53e6\u4e00\u6761\u7ebf\u6bb5\u4e5f\u6709\u8fd9\u79cd\u5173\u7cfb\u3002\n\n.\n\n\n\u6839\u636e\u8fd9\u4e2a\u5173\u7cfb\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u8fd9\u6837\u7684\u505a\u6cd5\uff1a\n\n\u6211\u4eec\u5f00\u4e09\u4e2a\u961f\u5217\uff0c**\u7b2c\u4e00\u4e2a\u961f\u5217\u653e\u5165\u6392\u597d\u5e8f\u7684\u539f\u5e8f\u5217\uff0c\u7b2c\u4e8c\u4e2a\u961f\u5217\u653e\u6bcf\u6b21\u5206\u88c2\u51fa\u6765\u7684\u8f83\u957f\u7684\u86af\u8693\uff0c\u7b2c\u4e09\u4e2a\u653e\u6bcf\u6b21\u5206\u88c2\u51fa\u6765\u7684\u8f83\u77ed\u7684\u86af\u8693\u3002**\n\n\u90a3\u4e48\u6839\u636e\u521a\u624d\u7684\u8bc1\u660e\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\uff0c**\u7b2c\u4e8c\u4e2a\u4e0e\u7b2c\u4e09\u4e2a\u961f\u5217\u4e00\u5b9a\u662f\u6709\u5e8f\u7684**\uff0c\u56e0\u4e3a\u6211\u4eec\u6bcf\u6b21\u53d6\u7684\u86af\u8693\u4e00\u5b9a\u6bd4\u4e4b\u524d\u53d6\u7684\u66f4\u77ed\uff0c\u6240\u4ee5\u5206\u88c2\u51fa\u6765\u7684\u80af\u5b9a\u6bd4\u6bd4\u4e4b\u524d\u5206\u88c2\u51fa\u6765\u7684\u86af\u8693\u66f4\u77ed\u3002\n\n\u8fd9\u6837\u5b50\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6a21\u62df\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u6bcf\u6b21\u53d6\u4e09\u4e2a\u961f\u5217\u4e2d\u6700\u5927\u7684\u90a3\u4e00\u4e2a\uff0c\u5e76\u628a\u5206\u88c2\u51fa\u6765\u7684\u5bf9\u5e94\u653e\u5230\u7b2c\u4e8c\u7b2c\u4e09\u4e2a\u961f\u5217\u7684\u672b\u5c3e\u5c31\u597d\u3002\n\n .\n\n\u4e8b\u5b9e\u4e0a\uff0c**\u5bf9\u4e8eq>0\u7684\u60c5\u51b5\uff0c\u8fd9\u4e2a\u63a8\u8bba\u4e5f\u662f\u6210\u7acb\u7684**\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u5047\u8bbe\u51fa\u6765x\u4e0ey\u5206\u522b\u662f\u5206\u88c2\u524d\u7684\u7ebf\u6bb5\u957f\u5ea6\u4e14x>y,\u5047\u8bbex\u4e0ey\u4e4b\u95f4\u95f4\u9694\u7684\u65f6\u95f4\u4e3aT\n\n\u90a3\u4e48\uff0c\u5728y\u5206\u88c2\u7684\u65f6\u523b\uff0cx\u5206\u88c2\u51fa\u6765\u7684\u7ebf\u6bb5\u8f83\u957f\u7684\u957f\u5ea6\u4e3a(\u5047\u8bbep>0.5)\uff1a\n$px+T*q $ y\u5206\u88c2\u51fa\u6765\u7684\u8f83\u957f\u7684\u7ebf\u6bb5\u957f\u5ea6\u4e3a\uff1a$(y+T*q)*p = py + T*q*p$\n\n\u663e\u7136  $px+T*q > py + T*q*p$\n\n\u6240\u4ee5\u8bf4\uff0c\u6211\u4eec\u521a\u521a\u7684\u7ed3\u8bba\u5728\u8fd9\u91cc\u4e5f\u662f\u6210\u7acb\u7684\u3002\n\n\u5bf9\u4e8e\u5728\u67d0\u4e00\u65f6\u523b\u7684\u7ebf\u6bb5\u7684\u5177\u4f53\u957f\u5ea6\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5728\u961f\u5217\u4e2d\u591a\u8bb0\u5f55\u4e00\u4e2a\u63d2\u5165\u65f6\u95f4\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u7b97\u51fa\u67d0\u4e00\u65f6\u523b\u7684\u67d0\u6761\u7ebf\u6bb5\u7684\u5177\u4f53\u957f\u5ea6\u4e86\u3002\n\n**\u65f6\u95f4\u590d\u6742\u5ea6O\uff08nlogn+m\uff09**\n\n. \n\n\u5c31\u9171\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5AC\u8fd9\u9053\u9898\u5566(\u2267\u03c9\u2266)/\n\n\n------------\n## Code\n**\u4e0d\u5efa\u8bae\u4f7f\u7528STL\u7684\u961f\u5217\uff0c\u8fd9\u9898\u6709\u70b9\u5c0f\u5361\u5e38\n**\n```cpp\n//Luogu P2827 \u86af\u8693\n//Sep,9th,2018\n//\u5de7\u5999\u7684\u4e09\u4e2a\u961f\u5217\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<algorithm>\nusing namespace std;\nlong long read()\n{\n\tlong long x=0,f=1; char c=getchar();\n\twhile(!isdigit(c)){if(c=='-') f=-1;c=getchar();}\n\twhile(isdigit(c)){x=x*10+c-'0';c=getchar();}\n\treturn x*f;\n}\nconst int N=100000+100;\nconst int M=7000000+N+2000;\nint a[M],n,m,q,u,v,t;\nstruct worm\n{\n\tint T,s;\n\tworm (int A,int B)\n\t{\n\t\ts=A,T=B;\n\t}\n\tinline int GetLen(int mtime)//mtime\u79d2\u540e\u7684\u957f\u5ea6\n\t{\n\t\treturn s+(mtime-T)*q;\n\t}\n};\nqueue <worm> A,B,C;\ndouble p;\nbool cmp(int x,int y)\n{\n\treturn x>y;\n}\nint main()\n{\n\tn=read(),m=read(),q=read(),u=read(),v=read(),t=read();\n\tfor(int i=1;i<=n;i++)\n\t\ta[i]=read();\n\t\n\tsort(a+1,a+1+n);\n\tfor(int i=n;i>=1;i--)\n\t\tA.push(worm(a[i],0));\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tlong long from=-1,t_MAX=-0x3f3f3f3f;\n\t\tif(A.empty()==false) from=1,t_MAX=A.front().GetLen(i-1);\n\t\tif(B.empty()==false and B.front().GetLen(i-1)>t_MAX) from=2,t_MAX=B.front().GetLen(i-1);\n\t\tif(C.empty()==false and C.front().GetLen(i-1)>t_MAX) from=3,t_MAX=C.front().GetLen(i-1);\n\t\tint px=(t_MAX*u)/v,t_px=t_MAX-px;\n\t\tB.push(worm(max(px,t_px),i));\n\t\tC.push(worm(min(px,t_px),i));\n\t\tif(from==1) A.pop();\n\t\telse if(from==2) B.pop();\n\t\telse C.pop();\n\t\tif(i%t==0)\n\t\t\tprintf(\"%lld \",t_MAX);\n\t}\n\tprintf(\"\\n\");\n\t\n\tn=0;\n\twhile(A.empty()==false)\n\t\ta[++n]=A.front().GetLen(m),A.pop();\n\twhile(B.empty()==false)\n\t\ta[++n]=B.front().GetLen(m),B.pop();\n\twhile(C.empty()==false)\n\t\ta[++n]=C.front().GetLen(m),C.pop();\n\tsort(a+1,a+1+n,cmp);\n\tfor(int i=1;i<=n;i++)\n\t\tif(i%t==0)\n\t\t\tprintf(\"%d \",a[i]);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1536501165,
        "uid": 52563,
        "name": "GoldenPotato137",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2827 \u3010\u86af\u8693\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u76ee\u7684\u601d\u8def\u7279\u522b\u5de7\u5999\uff0c\u6211\u4eec\u7528\u4e09\u6761\u961f\u5217\u6765\u8fdb\u884c\u7ef4\u62a4\n\n\u73b0\u5728\u6709\u4e09\u6761\u961f\u5217,a,l,r.\u4e00\u5f00\u59cba\u91cc\u9762\u88c5\u4e86\u6240\u6709\u7684\u86af\u8693\u957f\u5ea6\u5e76\u6392\u5e8f\u4fdd\u8bc1\u5176\u5355\u8c03\u9012\u51cf\uff0cl\uff0cr\u90fd\u662f\u7a7a\u7684\n\n\u6bcf\u6b21\u64cd\u4f5c\uff0c\u4ecea,l,r\u7684\u961f\u9996\u53d6\uff0c\u53d6\u957f\u5ea6\u6700\u957f\u7684\uff0c\u90a3\u4e48\u8fd9\u4e2a\u86af\u8693\u4e00\u5b9a\u662f\u6700\u957f\u7684\uff08\u540e\u9762\u4f1a\u8bf4\u660e\uff09\uff0c\u7136\u540e\u628a\u8fd9\u4e2a\u86af\u8693\u5207\u5f00\uff0c\u957f\u7684\u653el\uff0c\u77ed\u7684\u653er\u3002\u4e00\u76f4\u5207m\u6b21\u7ed3\u675f\n\n\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u505a\uff1f\u8fd9\u4e48\u505a\u6709\u4e00\u70b9\uff0c\u6211\u4eec\u80fd\u4fdd\u8bc1\u4e09\u6761\u961f\u5217\u90fd\u662f\u5355\u8c03\u9012\u51cf\u7684\u3002a\u4e00\u5f00\u59cb\u5c31\u662f\u7684\uff0c\u53c8\u53ea\u4f1a\u4ece\u91cc\u9762\u53d6\u51fa\u5143\u7d20\u800c\u4e0d\u4f1a\u52a0\u5165\u5143\u7d20\u6240\u4ee5\u80af\u5b9a\u4e00\u76f4\u90fd\u662f\u5355\u8c03\u9012\u51cf\u7684\u3002l\u548cr\uff0c\u6bcf\u6b21\u52a0\u5165\u7684\u5143\u7d20\u4e00\u5b9a\u662f\u6700\u5c0f\u7684\uff0c\u8fd9\u4e2a\u5f88\u597d\u8bc1\u660e\u3002\u56e0\u4e3a\u4f60\u73b0\u5728\u8fd9\u6b21\u64cd\u4f5c\u4e2d\u8fd8\u6ca1\u5207\u7684\u86af\u8693\u80af\u5b9a\u6bd4\u524d\u9762\u7684\u4efb\u4f55\u4e00\u53ea\u86af\u8693\u5728\u8fd8\u6ca1\u5207\u7684\u65f6\u5019\u7684\u90a3\u6574\u53ea\u86af\u8693\u77ed\uff08\u4e24\u4e2a\u6ca1\u5207\u7684\u6bd4\uff09\u4e0d\u7136\u524d\u9762\u9009\u7684\u65f6\u5019\u80af\u5b9a\u5c31\u4f1a\u9009\u90a3\u6761\u957f\u7684\u800c\u4e0d\u9009\u77ed\u7684\u4e86\u3002\u90a3\u4e48\u53c8\u662f\u6309\u7167\u4e00\u5b9a\u6bd4\u4f8b\u5207\u7684\uff0c\u5207\u5b8c\u4e4b\u540e\u80af\u5b9a\u539f\u6765\u90a3\u6761\u957f\u7684\u73b0\u5728\u4f9d\u7136\u6bd4\u53e6\u5916\u4e00\u6761\u957f\uff0c\u800c\u6bcf\u6b21\u589e\u957f\u7684\u957f\u5ea6\u90fd\u662f\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u8bf4l,r\u4e5f\u80af\u5b9a\u662f\u5355\u8c03\u9012\u51cf\u7684\u4e86\u3002\n\n\u90a3\u65e2\u7136\u662f\u5355\u8c03\u9012\u51cf\u7684\uff0c\u6700\u957f\u7684\u90a3\u4e2a\u80af\u5b9a\u662f\u4e09\u4e2a\u961f\u5217\u7684\u5bf9\u5934\u4e2d\u9009\u3002\u8fd9\u6837\u5c31\u4fdd\u8bc1\u4e86\u6bcf\u6b21\u90fd\u80fd\u6700\u5feb\u7684\u627e\u5230\u6700\u957f\u7684\u90a3\u4e2a\u4e86\u3002\u8fd8\u6709\u4e00\u4e2a\u7ec6\u8282\u5c31\u662f\u4ee5\u52a0\u4ee3\u51cf\u3002\u5982\u679c\u6bcf\u6761\u86af\u8693\u90fd\u8981\u4fee\u6539\u957f\u5ea6\u7684\u8bdd\u590d\u6742\u5ea6\u5f88\u9ad8\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7528\u4e00\u4e2a\u53d8\u91cf\u628a\u8981\u52a0\u591a\u5c11\u7d2f\u8ba1\u8d77\u6765\uff0c\u5728\u8ba1\u7b97\u7684\u65f6\u5019\u52a0\u4e0a\u53bb\u5c31\u884c\u4e86\uff0c\u56e0\u4e3a\u6240\u6709\u86af\u8693\u7684\u589e\u52a0\u91cf\u90fd\u662f\u4e00\u6837\u7684\uff0c\u5bf9\u4e8e\u4e0d\u52a0\u7684\u86af\u8693\uff0c\u51cf\u53bb\u4e00\u6b21\u589e\u52a0\u91cf\u5c31\u884c\u4e86\u3002\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\nint read(){\n    int x=0,f=1;char ch=getchar();\n    while(ch>'9'||ch<'0'){if(ch=='-')f*=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}return x*f;\n}\nint n,m,q,u,v,t,a[7000005],l[7000005],r[7000005],topl=1,enl=1,topr=1,enr=1,cnt=0,k=0,topp=1,ans[10000000],ll;\ndouble p;\nbool cmp(int a,int b){\n    return a>b;\n}\nint main(){\n    n=read();m=read();q=read();u=read();v=read();t=read();\n    for(int i=1;i<=n;i++)a[i]=read();\n    sort(a+1,a+1+n,cmp);\n    for(int i=1;i<=m;i++){\n        if((l[enl]>=a[topp]||topp>n)&&(l[enl]>=r[enr]||enr>=topr)&&enl<topl){\n            k=l[enl];l[enl]=0;enl++;\n        }else if((r[enr]>=a[topp]||topp>n)&&(r[enr]>=l[enl]||enl>=topl)&&enr<topr){\n            k=r[enr];r[enr]=0;enr++;\n        }else{\n            k=a[topp];a[topp]=0;topp++;\n        }\n        int c1,c2;int tt=k+cnt;\n        c1=(long long)tt*u/v;\n        c2=tt-c1;\n        l[topl]=max(c1,c2)-cnt-q;topl++;\n        r[topr]=min(c1,c2)-cnt-q;topr++;\n        if((i%t)==0){\n            printf(\"%d \",k+cnt);\n        }\n        cnt+=q;\n    }\n    printf(\"\\n\");\n    while(++ll){\n        if((l[enl]>=a[topp]||topp>n)&&(l[enl]>=r[enr]||enr>=topr)&&enl<topl){\n            k=l[enl];enl++;\n        }else if((r[enr]>=a[topp]||topp>n)&&(r[enr]>=l[enl]||enl>=topl)&&enr<topr){\n            k=r[enr];enr++;\n        }else if((a[topp]>=l[enl]||enl>=topl)&&(a[topp]>=r[enr]||enr>=topr)&&topp<=n){\n            k=a[topp];topp++;\n        }else break;\n        if((ll%t)==0){\n            printf(\"%d \",k+cnt);\n        } \n    }\n    \n    return 0;\n}\n```",
        "postTime": 1535950141,
        "uid": 20370,
        "name": "Pleasun",
        "ccfLevel": 6,
        "title": "NOIP2016\u63d0\u9ad8\u7ec4\u86af\u8693 \uff08earthworm.cpp\uff09"
    },
    {
        "content": "# NOIP2016\u86af\u8693\n\n> ## \u9898\u76ee\u63cf\u8ff0\n\n[\u6d1b\u8c37\u4f20\u9001\u95e8](https://www.luogu.org/problem/show?pid=2827)\n\n\n\u672c\u9898\u4e2d\uff0c\u6211\u4eec\u5c06\u7528\u7b26\u53f7\n\n\u230ac\u230b\u8868\u793a\u5bf9c\u5411\u4e0b\u53d6\u6574\uff0c\u4f8b\u5982\uff1a\n\n\u230a3.0\u230b=\u230a3.1\u230b=\u230a3.9\u230b=3\n\n\n\u86d0\u86d0\u56fd\u6700\u8fd1\u86af\u8693\u6210\u707e\u4e86\uff01\u9694\u58c1\u8df3\u86a4\u56fd\u7684\u8df3\u86a4\u4e5f\u62ff\u86af\u8693\u4eec\u6ca1\u529e\u6cd5\uff0c\u86d0\u86d0\u56fd\u738b\u53ea\u597d\u53bb\u8bf7\u795e\u5200\u624b\u6765\u5e2e\u4ed6\u4eec\u6d88\u706d\u86af\u8693\u3002\n\n\n\u86d0\u86d0\u56fd\u91cc\u73b0\u5728\u5171\u6709n\u53ea\u86af\u8693\uff08n\u4e3a\u6b63\u6574\u6570)\u3002\u6bcf\u53ea\u86af\u8693\u62e5\u6709\u957f\u5ea6\uff0c\u6211\u4eec\u8bbe\u7b2ci\u53ea\u86af\u8693\u7684\u957f\u5ea6\u4e3a\n\nai(i=1,2,...,n)\uff0c\u5e76\u4fdd\u8bc1\u6240\u6709\u7684\u957f\u5ea6\u90fd\u662f\u975e\u8d1f\u6574\u6570\uff08\u5373:\u53ef\u80fd\u5b58\u5728\u957f\u5ea6\u4e3a0\u7684\u86af\u8693\uff09\u3002\n\n\n\u6bcf\u4e00\u79d2\uff0c\u795e\u5200\u624b\u4f1a\u5728\u6240\u6709\u7684\u86af\u8693\u4e2d\uff0c\u51c6\u786e\u5730\u627e\u5230\u6700\u957f\u7684\u90a3\u4e00\u53ea\uff08\u5982\u6709\u591a\u4e2a\u5219\u4efb\u9009\u4e00\u4e2a\uff09\u5c06\u5176\u5207\u6210\u4e24\u534a\u3002\u795e\u5200\u624b\u5207\u5f00\u86af\u8693\u7684\u4f4d\u7f6e\u7531\u5e38\u6570p(\u662f\u6ee1\u8db30<p<1\u7684\u6709\u7406\u6570)\u51b3\u5b9a\uff0c\u8bbe\u8fd9\u53ea\u86af\u8693\u957f\u5ea6\u4e3ax\uff0c\u795e\u5200\u624b\u4f1a\u5c06\u5176\u5207\u6210\u4e24\u53ea\u957f\u5ea6\u5206\u522b\u4e3a\u230apx\u230b\u548cx\u2212\u230apx\u230b\u7684\u86af\u8693\u3002\u7279\u6b8a\u5730\uff0c\u5982\u679c\u8fd9\u4e24\u4e2a\u6570\u7684\u5176\u4e2d\u4e00\u4e2a\u7b49\u4e8e0\uff0c\u5219\u8fd9\u4e2a\u957f\u5ea6\u4e3a0\u7684\u86af\u8693\u4e5f\u4f1a\u88ab\u4fdd\u7559\u3002\u6b64\u5916\uff0c\u9664\u4e86\u521a\u521a\u4ea7\u751f\u7684\u4e24\u53ea\u65b0\u86af\u8693\uff0c\u5176\u4f59\u86af\u8693\u7684\u957f\u5ea6\u90fd\u4f1a\u589e\u52a0q(\u662f\u4e00\u4e2a\u975e\u8d1f\u6574\u5e38\u6570)\u3002\n\n\n\u86d0\u86d0\u56fd\u738b\u77e5\u9053\u8fd9\u6837\u4e0d\u662f\u957f\u4e45\u4e4b\u8ba1\uff0c\u56e0\u4e3a\u86af\u8693\u4e0d\u4ec5\u4f1a\u8d8a\u6765\u8d8a\u591a\uff0c\u8fd8\u4f1a\u8d8a\u6765\u8d8a\u957f\u3002\u86d0\u86d0\u56fd\u738b\u51b3\u5b9a\u6c42\u52a9\u4e8e\u4e00\u4f4d\u6709\u7740\u6d2a\u8352\u4e4b\u529b\u7684\u795e\u79d8\u4eba\u7269\uff0c\u4f46\u662f\u6551\u5175\u8fd8\u9700\u8981m\u79d2\u624d\u80fd\u5230\u6765......(m\u4e3a\u975e\u8d1f\u6574\u6570\uff09\n\n\n\u86d0\u86d0\u56fd\u738b\u5e0c\u671b\u77e5\u9053\u8fd9m\u79d2\u5185\u7684\u6218\u51b5\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u4ed6\u5e0c\u671b\u77e5\u9053\uff1a\n\n\n- m\u79d2\u5185\uff0c\u6bcf\u4e00\u79d2\u88ab\u5207\u65ad\u7684\u86af\u8693\u88ab\u5207\u65ad\u524d\u7684\u957f\u5ea6\uff08\u6709m\u4e2a\u6570\uff09\n\n- m\u79d2\u540e\uff0c\u6240\u6709\u86af\u8693\u7684\u957f\u5ea6\uff08\u6709n+m\u4e2a\u6570)\u3002\n\n\n\u86d0\u86d0\u56fd\u738b\u5f53\u7136\u77e5\u9053\u600e\u4e48\u505a\u5566\uff01\u4f46\u662f\u4ed6\u60f3\u8003\u8003\u4f60......\n\n\n> ## \u8f93\u5165\n\n\u8f93\u5165\u6587\u4ef6\u540d\u4e3aearthworm.in\u3002\n\n\n\u7b2c\u4e00\u884c\u5305\u542b\u516d\u4e2a\u6574\u6570n,m,q,u,v,t\uff0c\u5176\u4e2d\uff1a\n\n\nn,m,q\u7684\u610f\u4e49\u89c1\u3010\u95ee\u9898\u63cf\u8ff0\u3011\uff1b\n\n  \nu,v,t\u5747\u4e3a\u6b63\u6574\u6570\uff1b\n\n  \n\u4f60\u9700\u8981\u81ea\u5df1\u8ba1\u7b97p=u/v(\u4fdd\u8bc10<u<v);\n\n  \nt\u662f\u8f93\u51fa\u53c2\u6570\uff0c\u5176\u542b\u4e49\u5c06\u4f1a\u5728\u3010\u8f93\u51fa\u683c\u5f0f\u3011\u4e2d\u89e3\u91ca\u3002\n\n\n\u7b2c\u4e8c\u884c\u5305\u542bn\u4e2a\u975e\u8d1f\u6574\u6570\uff0c\u4e3a\n\nai,a2,...,an\uff0c\u5373\u521d\u59cb\u65f6n\u53ea\u86af\u8693\u7684\u957f\u5ea6\u3002\n\n\n\u540c\u4e00\u884c\u4e2d\u76f8\u90bb\u7684\u4e24\u4e2a\u6570\u4e4b\u95f4\uff0c\u6070\u597d\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\u3002\n\n\n\u4fdd\u8bc1\n1\u2264n\u226410^5\u200b\u200b\uff0c\n\n0<m\u22647\u221710^6\u200b\u200b\uff0c\n\n0\u2264u<v\u226410^9\u200b\u200b\uff0c\n\n0\u2264q\u2264200\uff0c\n\n1\u2264t\u226471\uff0c\n\n\n> ## \u8f93\u51fa\n\n0<ai\u226410^8\u200b\u200b\u3002  \n\n\u8f93\u51fa\u6587\u4ef6\u540d\u4e3aearthworm.out\u3002\n\n\n\u7b2c\u4e00\u884c\u8f93\u51fa\u230am/t\u230b\u4e2a\u6574\u6570\uff0c\u6309\u65f6\u95f4\u987a\u5e8f\uff0c\u4f9d\u6b21\u8f93\u51fa\u7b2ct\u79d2\uff0c\u7b2c2t\u79d2\uff0c\u7b2c3t\u79d2\u2026\u2026\u88ab\u5207\u65ad\u86af\u8693\uff08\u5728\u88ab\u5207\u65ad\u524d\uff09\u7684\u957f\u5ea6\u3002\n\n\n\u7b2c\u4e8c\u884c\u8f93\u51fa\u230a(n+m)/t\u230b\u4e2a\u6574\u6570\uff0c\u8f93\u51fam\u79d2\u540e\u86af\u8693\u7684\u957f\u5ea6\uff1b\u9700\u8981\u6309\u4ece\u5927\u5230\u5c0f\u7684\u987a\u5e8f\uff0c\u4f9d\u6b21\u8f93\u51fa\u6392\u540d\u7b2ct\uff0c\u7b2c2t\uff0c\u7b2c3t\u2026\u2026\u7684\u957f\u5ea6\u3002\n\n\n\u540c\u4e00\u884c\u4e2d\u76f8\u90bb\u7684\u4e24\u4e2a\u6570\u4e4b\u95f4\uff0c\u6070\u597d\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\u3002\u5373\u4f7f\u67d0\u4e00\u884c\u6ca1\u6709\u4efb\u4f55\u6570\u9700\u8981 \u8f93\u51fa\uff0c\u4f60\u4e5f\u5e94\u8f93\u51fa\u4e00\u4e2a\u7a7a\u884c\u3002\n\n\n\u8bf7\u9605\u8bfb\u6837\u4f8b\u6765\u66f4\u597d\u5730\u7406\u89e3\u8fd9\u4e2a\u683c\u5f0f\u3002\n\n\n> ## \u6837\u4f8b\u8f93\u5165\n\n\u8f93\u5165\u6837\u4f8b#1\uff1a\n\n3 7 1 1 3 1\n\n3 3 2\n\n\u8f93\u5165\u6837\u4f8b#2\uff1a\n\n3 7 1 1 3 2\n\n3 3 2\n\n\u8f93\u5165\u6837\u4f8b#3\uff1a\n\n3 7 1 1 3 9\n\n3 3 2\n\n> ## \u6837\u4f8b\u8f93\u51fa\n\n\u8f93\u51fa\u6837\u4f8b#1\uff1a\n\n3 4 4 4 5 5 6\n\n6 6 6 5 5 4 4 3 2 2\n\n\n\u8f93\u51fa\u6837\u4f8b#2\uff1a\n\n4 4 5\n6 5 4 3 2\n\n\n\u8f93\u51fa\u6837\u4f8b#3\uff1a\n\n//\u7a7a\u884c  \n\n2\n\n> ## \u8bf4\u660e\n\n\u3010\u8f93\u5165\u8f93\u51fa\u6837\u4f8b\u8bf4\u660e\u3011\n\n\n\u3010\u6837\u4f8b\u89e3\u91ca1\u3011\n\n\u5728\u795e\u5200\u624b\u5230\u6765\u524d\uff1a3\u53ea\u86af\u8693\u7684\u957f\u5ea6\u4e3a3,3,2\u3002\n\n\n1\u79d2\u540e\uff1a\u4e00\u53ea\u957f\u5ea6\u4e3a3\u7684\u86af\u8693\u88ab\u5207\u6210\u4e86\u4e24\u53ea\u957f\u5ea6\u5206\u522b\u4e3a1\u548c2\u7684\u86af\u8693\uff0c\u5176\u4f59\u86af\u8693\u7684\u957f\u5ea6\u589e\u52a0\u4e861\u3002\u6700\u7ec84\u53ea\u86af\u8693\u7684\u957f\u5ea6\u5206\u522b\u4e3a(1,2),4,3\u3002\u62ec\u53f7\u8868\u793a\u8fd9\u4e2a\u4f4d\u7f6e\u521a\u521a\u6709\u4e00\u53ea\u86af\u8693\u88ab\u5207\u65ad\n\n\n2\u79d2\u540e\uff1a\u4e00\u53ea\u957f\u5ea6\u4e3a4\u7684\u86af\u8693\u88ab\u5207\u6210\u4e861\u548c3\u30025\u53ea\u86af\u8693\u7684\u957f\u5ea6\u5206\u522b\u4e3a\uff1a2,3,(1,3),4\u3002\n\n\n3\u79d2\u540e\uff1a\u4e00\u53ea\u957f\u5ea6\u4e3a4\u7684\u86af\u8693\u88ab\u5207\u65ad\u30026\u53ea\u86af\u8693\u7684\u957f\u5ea6\u5206\u522b\u4e3a\uff1a3,4,2,4,(1,3)\u3002\n\n\n4\u79d2\u540e\uff1a\u4e00\u53ea\u957f\u5ea6\u4e3a4\u7684\u86af\u8693\u88ab\u5207\u65ad\u30027\u53ea\u86af\u8693\u7684\u957f\u5ea6\u5206\u522b\u4e3a\uff1a4,(1,3),3,5,2,4\u3002\n\n\n5\u79d2\u540e\uff1a\u4e00\u53ea\u957f\u5ea6\u4e3a5\u7684\u86af\u8693\u88ab\u5207\u65ad\u30028\u53ea\u86af\u8693\u7684\u957f\u5ea6\u5206\u522b\u4e3a\uff1a5,2,4,4,(1,4),3,5\u3002\n\n\n6\u79d2\u540e\uff1a\u4e00\u53ea\u957f\u5ea6\u4e3a5\u7684\u86af\u8693\u88ab\u5207\u65ad\u30029\u53ea\u86af\u8693\u7684\u957f\u5ea6\u5206\u522b\u4e3a\uff1a\uff081,4),3,5,5,2,5,4,6\u3002\n\n\n7\u79d2\u540e\uff1a\u4e00\u53ea\u957f\u5ea6\u4e3a6\u7684\u86af\u8693\u88ab\u5207\u65ad\u300210\u53ea\u86af\u8693\u7684\u957f\u5ea6\u5206\u522b\u4e3a\uff1a2,5,4,6,6,3,6,5,(2,4)\u3002\n\n\n\u6240\u4ee5\uff0c7\u79d2\u5185\u88ab\u5207\u65ad\u7684\u86af\u8693\u7684\u957f\u5ea6\u4f9d\u6b21\u4e3a3,4,4,4,5,5,6\u3002\n\n\n7\u79d2\u540e\uff0c\u6240\u6709\u86af\u8693\u957f\u5ea6\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u4e3a6,6,6,5,5,4,4,3,2,2\u3002\n\n\n\u3010\u6837\u4f8b\u89e3\u91ca2\u3011\n\n\u8fd9\u4e2a\u6570\u636e\u4e2d\u53ea\u6709t=2\u4e0e\u4e0a\u4e2a\u6570\u636e\u4e0d\u540c\u3002\u53ea\u9700\u5728\u6bcf\u884c\u90fd\u6539\u4e3a\u6bcf\u4e24\u4e2a\u6570\u8f93\u51fa\u4e00\u4e2a\u6570\u5373\u53ef\u3002\n\n\n\u867d\u7136\u7b2c\u4e00\u884c\u6700\u540e\u6709\u4e00\u4e2a6\u6ca1\u6709\u88ab\u8f93\u51fa\uff0c\u4f46\u662f\u7b2c\u4e8c\u884c\u4ecd\u7136\u8981\u91cd\u65b0\u4ece\u7b2c\u4e8c\u4e2a\u6570\u518d\u5f00\u59cb\u8f93\u51fa\u3002\n\n\n\u3010\u6837\u4f8b\u89e3\u91ca3\u3011\n\n\u8fd9\u4e2a\u6570\u636e\u4e2d\u53ea\u6709t=9\u4e0e\u4e0a\u4e2a\u6570\u636e\u4e0d\u540c\u3002\n\n\n\u6ce8\u610f\u7b2c\u4e00\u884c\u6ca1\u6709\u6570\u8981\u8f93\u51fa\uff0c\u4f46\u4e5f\u8981\u8f93\u51fa\u4e00\u4e2a\u7a7a\u884c\u3002\n\n\n\u3010\u6570\u636e\u8303\u56f4\u3011\n\n\n\n> ## \u9898\u89e3\n\n![](https://i.loli.net/2017/10/04/59d48c0dadaaf.png)\n\n- \u4e4d\u4e00\u770b\u9898\u76ee\uff0cwoc\u8fd9\u4e00\u4f18\u5148\u961f\u5217\u5927\u6c34\u9898\u554a\uff0c\u7136\u540e\u7528priority\\_queue\u6765xjb\u641e\uff0c\u6700\u540e\u53d1\u73b0priority\\_queue\u8fd9\u4e2a\u4e1c\u897f\u5b83\u6ca1\u6709\u8fed\u4ee3\u5668\u2026\u2026\n\n- \u6700\u540e\u53d1\u73b0\u6b63\u89e3\u53c8\u7b80\u5355\u53c8\u77ed\uff08\u5c31\u662f\u592a\u96be\u60f3\u4e86\n\n- \u778e\u626f\u6de1\u7ed3\u675f\uff0c\u6211\u4eec\u6765\u8bb2\u9898\u76ee\uff1a\n\n1. \u5047\u8bbe\u6709\u4e24\u53ea\u86af\u8693\u957f\u5ea6\u5206\u522b\u4e3ax\uff0cy\uff0c\u4e14x>y\uff1b\u90a3\u4e48\u6839\u636e\u9898\u610fx\u4e00\u5b9a\u88ab\u5148\u5207\uff0c\u4e8e\u662f\u6211\u4eec\u5047\u8bbey\u5728x\u88ab\u5207\u540ei\u79d2\u88ab\u5207\u3002\n\n2. \u5047\u8bbex\u88ab\u5207\u6210x1\u548cx2\u4e24\u6bb5\uff0cy\u88ab\u5207\u6210y1\u548cy2\u4e24\u6bb5\uff1b\n\n3. \u6613\u5f97\n\n![](https://i.loli.net/2017/10/04/59d498e1c76cd.png)\n\n4. \u7531\u4e0a\u53ef\u5f97x1>y1;x2>y2;\n\n- \u4e8e\u662f\u6211\u4eec\u5f003\u4e2a\u961f\u5217\n\nqs\u5b58\u50a8\u672a\u88ab\u5207\u7684\uff0c(\u5df2\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n\nq1\u5b58\u50a8 p\\*x\uff0c\n\nq2\u5b58\u50a8 x-p\\*x;\n\n- \u7531\u524d\u9762\u53ef\u5f97\u6bcf\u4e2a\u961f\u5217\u90fd\u662f\u5355\u8c03\u7684\uff08\u6b64\u5904\u5373\u7531\u5927\u5230\u5c0f\u7684\n\n- \u4e8e\u662f\u6bcf\u6b21\u53d63\u4e2a\u5806\u9996\u7684\u6700\u5927\u5143\u7d20\u6a21\u62df\u5373\u53ef\n\n- ps\uff1a\u8fd8\u8981\u4fdd\u5b58\u4e00\u4e2a\u65f6\u95f4\u6233\u8868\u793a\u86af\u8693\u589e\u52a0\u7684\u957f\u5ea6\uff0c\u6bcf\u6b21\u53d6\u51fa\u65f6\u52a0\u4e0a\uff0c\u653e\u56de\u65f6\u51cf\u53bb\n\n\n> ## \u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <queue>\n#include <algorithm>\n#include <cstring>\n\nusing namespace std;\n\nconst int maxn=100050;\nint n,m,q,u,v,t,add,a[maxn];\n\nqueue <int> qs,q1,q2;\n\nint cmp(int x,int y){\n    return x>y;\n}\n\nint get_front(queue <int> &y){\n    return y.empty()?-0x3f3f3f:y.front()+add;\n}\n\nint compare_front(){\n    int a=get_front(qs),b=get_front(q1),c=get_front(q2),\n        mx=max(a,max(b,c));\n    if(mx==a) qs.pop();\n    else if(mx==b) q1.pop();\n    else if(mx==c) q2.pop();\n    return mx;\n}\n\nint main(){\n    scanf(\"%d%d%d%d%d%d\",&n,&m,&q,&u,&v,&t);\n    for(int i=1;i<=n;i++) scanf(\"%d\",a+i);\n    sort(a+1,a+n+1,cmp);\n    for(int i=1;i<=n;i++) qs.push(a[i]);\n    for(int i=1;i<=m;add+=q,i++){\n        int cur=compare_front(),\n            l1=(long long)cur*u/v,\n            l2=cur-l1;\n        q1.push(l1-add-q);q2.push(l2-add-q);\n        if(i%t==0) printf(\"%d \",cur);\n    }\n    printf(\"\\n\");\n    for(int i=1;i<=n+m;i++)\n        i%t==0?printf(\"%d \",compare_front()):compare_front();\n    printf(\"\\n\");\n    return 0;\n}\n```",
        "postTime": 1513488413,
        "uid": 27598,
        "name": "\u9006\u5c18",
        "ccfLevel": 0,
        "title": "NOIP2016\u86af\u8693"
    },
    {
        "content": "\uff08\u8bed\u6587\u6c34\u5e73\u6bd4\u8f83\u5dee \u4f60\u4eec\u51d1\u5408\u7740\u770b\n\n\n\u5148\u8003\u8651\u66b4\u641c\n\n\u5efa\u7acb\u4e00\u4e2a\u5806\u6a21\u62dfm\u6b21\u5207\u5272\u7684\u8fc7\u7a0b\uff0c\u6bcf\u6b21\u5bf9\u5806\u91cc\u7684\u6240\u6709\u5143\u7d20+q \u7279\u6b8a\u7684\u5bf9\u4e8eq=0\u7684\u60c5\u51b5\u4e0d\u52a0\n\n\u65f6\u95f4\u590d\u6742\u5ea6O(m(n+m)) \u5b9e\u6d4b\u53ef\u901a\u8fc750%\u7684\u6570\u636e\n\n\u5bf9\u6bcf\u4e2a\u5143\u7d20\u90fd+q\u5b9e\u5728\u662f\u592a\u8d39\u65f6\u95f4\u4e86\uff01\n\n\u5176\u5b9e\u6211\u4eec\u53ea\u8981\u5bf9\u65b0\u5207\u5f00\u76842\u53ea\u86af\u8693\u7684\u957f\u5ea6-q \u7136\u540e\u518d\u653e\u5230\u5806\u91cc\u9762 \u5c31\u53ef\u4ee5\u4fdd\u8bc1\u5927\u5c0f\u5173\u7cfb\u548c\u5168\u90e8+q\u7b49\u540c\u4e86\uff01\n\n\u4f46\u662f\u4e0b\u6b21\u518d\u62ff\u51fa\u6765\u7684\u65f6\u5019\uff0c\u4f1a\u5bf9\u5207\u5272\u9020\u6210\u5f71\u54cd \u4f8b\u5982 x\\*u/v!=(x-q)\\*u/v +q\n\n\u6240\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cfmark,\u6bcf\u6b21\u5207\u5272mark+=q \u6bcf\u6b21\u53d6\u51fa\u6765\u7684\u86af\u8693\u90fd+=mark \u653e\u8fdb\u53bb\u7684\u4e24\u53ea\u5c31-=(mark+=q) \u5230\u6700\u540e\u518d\u628a\u6240\u6709\u7684\u86af\u8693\u90fd+mark\n\n\u6700\u540e\u8fd8\u8981\u6392\u5e8f\u4e00\u4e0b\n\n\u65f6\u95f4\u590d\u6742\u5ea6O((n+m)log(n+m)) \u5b9e\u6d4b\u53ef\u901a\u8fc765%\u7684\u6570\u636e\n\n\u6709\u6ca1\u6709\u66f4\u597d\u7684\u65b9\u6cd5\u5462\uff1f \u53ef\u5426\u5229\u7528\u4e00\u4e9b\u7279\u522b\u7684\u89c4\u5f8b\u6765\u964d\u4f4e\u65f6\u95f4\u590d\u6742\u5ea6\uff1f\n\n\u6211\u4eec\u6765\u6a21\u62df\u4e00\u4e0b\n\n\u8bfb\u5165\u4e00\u5927\u5806\u86af\u8693\uff0c\u7136\u540e\u7528\u5806\u628a\u4ed6\u4eec\u6392\u5e8f\u597d\uff0c\u4ece\u5c0f\u5230\u5927\u5206\u522b\u4e3ax1 x2 x3 x4....\n\n\u7b2c\u4e00\u53ea\u88ab\u5207\u7684\u86af\u8693\u663e\u7136\u662fx1 \u628a\u4ed6\u5207\u6210y1\u548cz1 \u6b64\u65f6\u518d\u628ay1-q\u548cz1-q\u653e\u5230\u5806\u91cc\u9762 \u6211\u4eec\u5047\u8bbeyi>=zi\n\n\u7b2c\u4e8c\u53ea\u88ab\u5207\u7684\u86af\u8693\u663e\u7136\u662f(x2+q)\u6216y1 \u5207\u51fa\u6765\u7684\u662f y2=(x2+q)\\*u/v z2=... \u6216\u8005\u662f y2=y1\\*u/v z2=...\n\n\u7136\u540e\u518d\u628ay2-2q z2-2q\u653e\u5230\u5806\u91cc\u9762\u53bb\n\n\u6211\u4eec\u6bd4\u8f83\u4e00\u4e0by1-q\u548cy2-2q \u5047\u8bbe\u5207\u7684\u662f(x2+q)\u4e14y1-q=y2-2q\n\n\u5c31\u662f x1\\*u/v-q=(x2+q)\\*u/v-2q\n\n\u5316\u7b80\u4e00\u4e0b x1-q=(x2+q)-2q \u663e\u7136\u53ea\u6709x2=x1\u65f6\u6210\u7acb\n\n\u800cx2<=x1 \u6240\u4ee5 y2-2q<=y1-q\n\n\u518d\u770b\u4e00\u4e0b\u5207\u7684\u662fy1\u7684\u60c5\u51b5 y2=y1\\*u/v-2q \u4e14u/v<=1 \u8fd9\u65f6\u5019y2\u663e\u7136\u5c0f\u4e8e\u7b49\u4e8ey1-q\n\n\u6240\u4ee5\uff01 \u5207\u51fa\u6765\u7684y1 y2 y3 y4 y5..... \u662f\u9012\u51cf\u7684\uff01\n\n\u540c\u7406 z1 z2 z3 z4 z5.....\u4e5f\u662f\u9012\u51cf\u7684\n\n\u4e8e\u662f\u6211\u4eec\u53ea\u8981\u5f00\u4e09\u4e2a\u961f\u5217 \u5206\u522b\u7ef4\u62a4xi yi zi\u5c31\u53ef\u4ee5\u4e86\n\n\u6700\u540e\u518d\u628a\u4e09\u4e2a\u961f\u5217\u5f52\u5e76\u4e00\u4e0b \u65f6\u95f4\u590d\u6742\u5ea6O(n+m)\n\n\u4e8e\u662f\u5c31\u901a\u8fc7\u4e86\u6240\u6709\u7684\u6570\u636e\u3002\u3002\u3002\n\n\u55b5>V<\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\nusing namespace std;\n#define repi(i,a,b) for(int i=a;i<=b;i++)\n#define repd(i,a,b) for(int i=a;i>=b;i--)\n#define dg(x) cout<<#x<<'='<<x<<' '\n#define _end cout<<endl\n#define ll long long\nconst int N=1e5+100;\nconst int M=7e6+100;\nconst int NM=N+M;\nll qy[NM],c1[M],c2[M],qt,c1h,c1t,c2h,c2t;\nll cut[M]={0};\nbool cmp(ll a,ll b){\n    return a>b;\n}\nint n,m,q,u,v,t;\nvoid read(){\n    scanf(\"%d%d%d%d%d%d\",&n,&m,&q,&u,&v,&t);\n    repi(i,1,n){\n        ll x; scanf(\"%lld\",&x);\n        qy[i]=x;\n    } sort(qy+1,qy+1+n); qt=n;\n}\nll tem[NM];\nvoid merge(ll *a,ll *b,ll *ans,int at,int bt){\n    int k,ak,bk;\n    k=ak=bk=1; k--;\n    while(ak<=at&&bk<=bt){\n        while(ak<=at&&a[ak]>=b[bk]) ans[++k]=a[ak++];\n        while(bk<=bt&&b[bk]>=a[ak]) ans[++k]=b[bk++];\n    }\n    while(ak<=at) ans[++k]=a[ak++];\n    while(bk<=bt) ans[++k]=b[bk++];\n}\nvoid work(){\n    c1h=c1t=c2h=c2t=1;\n    c2t--; c1t--;\n    ll mark=0;\n    repi(i,1,m){\n        ll maxi=-1,use=0;\n        if(c1t>=c1h) maxi=c1[c1h],use=1;\n        if(c2t>=c2h&&maxi<c2[c2h]) maxi=c2[c2h],use=2;\n        if(qt>=1&&qy[qt]>maxi) maxi=qy[qt],use=3;\n        if(use==1) c1h++;\n        if(use==2) c2h++;\n        if(use==3) qt--;\n        ll x1,x2,x=maxi+mark; cut[i]=x;\n        x1=x*u/v; x2=x-x1; mark+=q;\n        x1-=mark; x2-=mark;\n        c1[++c1t]=x1; c2[++c2t]=x2;\n    }\n    int m=qt/2;    repi(i,1,m) swap(qy[i],qy[qt-i+1]);\n    repi(i,1,qt) qy[i]+=mark;\n    repi(i,c1h,c1t) c1[i]+=mark;\n    repi(i,c2h,c2t) c2[i]+=mark;\n    merge(qy,c1+c1h-1,tem,qt,c1t-c1h+1);\n    merge(tem,c2+c2h-1,qy,qt+c1t-c1h+1,c2t-c2h+1);\n}\nvoid print(){\n    int k=t;\n    while(k<=m){\n        printf(\"%lld \",cut[k]);\n        k+=t;\n    } printf(\"\\n\"); k=t;\n    while(k<=m+n){\n        printf(\"%lld \",qy[k]);\n        k+=t;\n    }\n}\nint main()\n{\n//  freopen(\"data.in\",\"r\",stdin);\n    read(); work(); print();\n    return 0;\n}\n```",
        "postTime": 1480130588,
        "uid": 11585,
        "name": "\u4f0a\u65af\u5361\u5c14\u7684\u98ce",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2827 \u3010\u86af\u8693\u3011"
    },
    {
        "content": "\u5148\u6765\u4e00\u4e2a35\u5206\u7684\u7eaf\u66b4\u529b\uff1a\n```cpp\u3001#include<bits/stdc++.h>\n#define ll long long\n#define p u*1.0/v\nusing namespace std;\n\nll n,m,q,u,v,t;\npriority_queue<ll> Q;\n\nint main(){\n//  freopen(\"earthworm.in\",\"r\",stdin);\n//  freopen(\"earthworm.out\",\"w\",stdout);\n    scanf(\"%lld %lld %lld %lld %lld %lld\",&n,&m,&q,&u,&v,&t);\n    for(ll i=1; i<=n; i++){\n        ll x;\n        scanf(\"%lld\",&x);\n        Q.push(x);//\u5165\u961f\n    }\n    \n    for(ll i=1; i<=m; i++){\n        ll z=Q.top(); Q.pop();//\u62ff\u5230\u6700\u5927\u503c\n        if(i%t==0) printf(\"%lld \",z);//\u80fd\u6574\u9664\u5219\u8f93\u51fa\n        vector<ll> vec;\n        while(!Q.empty()){\n            vec.push_back(Q.top());\n            Q.pop();//\u53d6\u51faQ\u4e2d\u7684\u6240\u6709\u503c\n        }\n        while(!vec.empty()){\n            Q.push(vec.back()+q);//\u628a\u503c+q\u518d\u53cd\u56de\u53bb\n            vec.pop_back();\n        }\n        ll x=floor(p*z),y=z-x;//\u62ff\u5230\u503c\n        Q.push(x); Q.push(y);//\u5165\u961f\n    }\n    putchar('\\n');\n    \n    ll i=0;\n    while(!Q.empty()){\n        i++;\n        if(i%t==0) printf(\"%lld \",Q.top());\n        Q.pop();\n    }\n//  fclose(stdin); fclose(stdout);\n    return 0;\n}\n```\n\u8fd9\u6837\u4f1aTLE\uff08\u5e9f\u8bdd\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u4f18\u5316\n\n\u5b66\u8fc7\u7ebf\u6bb5\u6811\u7684\u540c\u5b66\u4f1a\u60f3\u5230lazy mark\uff0c\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u7528\u7c7b\u4f3c\u7684\u65b9\u6cd5\uff0c\u5ef6\u8fdf\u66f4\u65b0\u957f\u5ea6\uff0c\u7701\u4e86n\n\n\u8fd9\u6837\u4f1a\u670960\u621665\u5206\n\n\u5982\u679c\u8981\u6709\u6ee1\u5206\uff0c\u8981\u53d1\u73b0\u9690\u542b\u7684\u5355\u8c03\u6027\uff1a\u5148\u5207\u7684\u5bf9\u5e94\u957f\u5ea6\u4e00\u5b9a\u6bd4\u540e\u5207\u7684\u957f\n\n\u7528\u4e00\u4e2a\u5355\u8c03\u961f\u5217\u6765\u7ef4\u62a4,\u7701\u4e86\u4f18\u5148\u961f\u5217\u5165\u961f\u7684logn:\n\nq1\u653e\u539f\u59cb\u957f\u5ea6\n\nq2\u653e[p*x]\u7684\u957f\u5ea6\n\nq3\u653ex-[p*x]\u7684\u957f\u5ea6\n\n\u6700\u5927\u503c\u5c31\u662f\u4e09\u4e2a\u961f\u5217\u5bf9\u9996\u7684\u6700\u5927\u503c\n\n\u518d\u8bf4\u4e00\u53e5\uff1a\u8fd9\u9898\u4f1a\u5361\u5e38\u6570\uff0c\u6240\u4ee5\u8981\u7528\u70b9\u597d\u73a9\u7684\uff0c\u5177\u4f53\u89c1\u6ce8\u91ca\n\n```cpp\n#pragma GCC optimize(2)//\u5e38\u6570\u4f18\u53161\uff1aO2\u4f18\u5316\n#include<bits/stdc++.h>\n#define ll long long\n#define p u*1.0/v\n#define INF 2147483647\nusing namespace std;\n\nll n,m,q,u,v,t,a[100010];\nstruct node{\n    ll value,Time;\n    //\u957f\u5ea6=value+q*Time\n};\nqueue<node> q1,q2,q3;\ninline bool cmp(ll x,ll y){\n    return x>y;\n}\n\nint main(){\n//  freopen(\"earthworm.in\",\"r\",stdin);\n//  freopen(\"earthworm.out\",\"w\",stdout);\n    scanf(\"%lld %lld %lld %lld %lld %lld\",&n,&m,&q,&u,&v,&t);\n    for(ll i=1; i<=n; i++) scanf(\"%lld\",&a[i]);\n    sort(a+1,a+1+n,cmp);//\u6392\u5e8f\n    for(ll i=1; i<=n; i++) q1.push(node{a[i],0});//\u5165\u961f\n    \n    for(ll i=1; i<=m; i++){\n        ll x=-INF;\n        if(!q1.empty()) x=max(x,q1.front().value+q*(i-1-q1.front().Time));\n        if(!q2.empty()) x=max(x,q2.front().value+q*(i-1-q2.front().Time));\n        if(!q3.empty()) x=max(x,q3.front().value+q*(i-1-q3.front().Time));\n        //\u627e\u6700\u5927\u503c\n        if(!q1.empty()&&q1.front().value+q*(i-1-q1.front().Time)==x) q1.pop();\n        else if(!q2.empty()&&q2.front().value+q*(i-1-q2.front().Time)==x) q2.pop();\n        else if(!q3.empty()&&q3.front().value+q*(i-1-q3.front().Time)==x) q3.pop();\n        //\u627e\u5230\u6700\u5927\u503c\u5bf9\u5e94\u7684\u961f\u5217\uff0c\u5e76\u5c06\u4e4b\u51fa\u961f\n        //\u6ce8\u610f\u8fd9\u91cc\u4e00\u5b9a\u8981\u6709else\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u6709\u591a\u4e2a\u51fa\u5217\n        //empty\u5e94\u8be5\u4e0d\u4f1a\u6709\u4eba\u5fd8\u6389\n        \n        if(i%t==0) printf(\"%lld \",x);//\u80fd\u591f\u6574\u9664\u624d\u8f93\u51fa\n        ll y=p*x,z=x-y;//\u7b97\u51fa\u4e24\u4e2a\u7684\u957f\u5ea6\n        q2.push(node{y,i}); q3.push(node{z,i});//\u5165\u961f\n    }\n    putchar('\\n');//\u8f93\u51fa\u6362\u884c\u7b26\n    \n    ll i=0;\n    while((!q1.empty())||(!q2.empty())||(!q3.empty())){//\u4e09\u4e2a\u961f\u5217\u5747\u4e0d\u4e3a\u7a7a\n        i++;//\u7edf\u8ba1\u4e2a\u6570\n        ll x=-INF;\n        if(!q1.empty()) x=max(x,q1.front().value+q*(m-q1.front().Time));\n        if(!q2.empty()) x=max(x,q2.front().value+q*(m-q2.front().Time));\n        if(!q3.empty()) x=max(x,q3.front().value+q*(m-q3.front().Time));\n        if(!q1.empty()&&q1.front().value+q*(m-q1.front().Time)==x) q1.pop();\n        else if(!q2.empty()&&q2.front().value+q*(m-q2.front().Time)==x) q2.pop();\n        else if(!q3.empty()&&q3.front().value+q*(m-q3.front().Time)==x) q3.pop();\n        //\u4e0e\u4e0a\u9762\u540c\u7406\n        if(i==t){\n            printf(\"%lld \",x);\n            i=0;//\u5e38\u6570\u4f18\u53162\n            //\u539f\u6765\u662fif(i%t==0) printf()\n            //LG\u4e0a\u80fd\u8fc7\uff0c\u4f46\u6559\u7ec3\u7684OJ\u4e0a\u5361\u4e86\n            //\u8fd9\u6837\u591a\u8fc7\u51e0\u4e2a\u70b9\n        }\n    }\n//  fclose(stdin); fclose(stdout);\n    return 0;\n}\n```",
        "postTime": 1537665731,
        "uid": 27924,
        "name": "xukuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2827 \u3010\u86af\u8693\u3011"
    },
    {
        "content": "                 P2827 \u86af\u8693        \n  [P2827 \u86af\u8693](https://www.luogu.org/problemnew/show/P2827#sub)   \n   \u9996\u5148\u8fd9\u9053\u9898\u6211\u4eec\u7b2c\u4e00\u773c\u5c31\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u4e2a\u9898\u4f3c\u4e4e\u53ef\u4ee5\u7528\u5806\uff0c\u6bcf\u6b21\u627e\u5230\u6700\u5927\u7684\uff0c\u62c6\u5f00\u6254\u8fdb\u53bb\uff0c\u5c31?\u54af\uff0c\u4ed6\u8bf4\u5176\u4ed6\u7684\u4f1a\u52a0p\uff0c\u76f4\u63a5\u628a\u62c6\u5f00\u7684\u6bcf\u4e2a\u51cfp\uff0c\u6700\u540e\u8f93\u51fa\u65f6\u52a0\u4e0a\u5df2\u7ecf\u7ecf\u8fc7\u7684\u6b21\u6570\u00d7p,\u5c31?\u54af\u3002    \n   \u4f46\u53ea\u6709\u516b\u5341\u5206\u3002\u3002\u3002   \n   ```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n\nusing namespace std;\n\nint n,m,q,u,v,t;\n\ndouble p;\n\npriority_queue<int,vector<int>,less<int> > Q;\n\nint main()\n{\n\tfreopen(\"a.in\",\"r\",stdin);\n\tfreopen(\"a.ans\",\"w\",stdout);\n\tscanf(\"%d%d%d%d%d%d\",&n,&m,&q,&u,&v,&t);\n\tdouble p=1.0*u/v;\n\tfor(int i=1;i<=n;i++) \n\t{\n\t\tint x;\n\t\tscanf(\"%d\",&x);\n\t\tQ.push(x);\n\t}\n\t//cout<<p<<endl;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tif(i%t==0)\n\t\t{\n\t\t\tprintf(\"%d \",Q.top()+(i-1)*q); \n\t\t}\n\t\tint f=Q.top()+(i-1)*q;\n\t\tint x1=f*p;\n\t//\tcout<<f<<\"*\"<<endl;\n\t//\tcout<<x1<<endl;\n\t\tint x2=f-x1;\n\t\tx1-=i*q;\n\t\tx2-=i*q;\n\t\tQ.pop();\n\t\tQ.push(x1);\n\t\tQ.push(x2);\n\t}\n\tprintf(\"\\n\");\n\tint i=1;\n\twhile(!Q.empty())\n\t{\n\t\tif(i%t==0)\n\t\t{\n\t\t\tprintf(\"%d \",Q.top()+m*q);\n\t\t}\n\t\ti++;\n\t\tQ.pop();\n\t}\n\treturn 0;\n}\n\n \n```\n   \u8fd9\u4e2a\u9898\u6211\u4eec\u53d1\u73b0\u7528\u4e86\u5806\uff0c\u590d\u6742\u5ea6\u8fd8\u662f\u8fc7\u4e0d\u53bb\uff0c\u5e38\u6570\u6709\u70b9\u5927\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u8003\u8651\u4e00\u4e0b\uff0c\u5982\u679c\u6211\u4eec\u628a\u6700\u5927\u6309\u6bd4\u4f8b\u62c6\u5f00\u540e\u6bcf\u4e2a-p\uff0c\u4e4b\u540e\uff0c\u7b2c\u4e8c\u5927\u7684\u4e5f\u662f\u62c6\u5f00\u518d\u51cf\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u53d1\u73b0\uff0c\u6bcf\u6b21\u62c6\u5f00\u7684\u5bf9\u5e94\u8d77\u6765\uff0c\u6c38\u8fdc\u662f\u8d8a\u5927\u7684\u62c6\u5f00\u8d8a\u5927\uff0c\u7b26\u5408\u5355\u8c03\u6027\uff0c\u56e0\u6b64\u7ef4\u62a4\u4e09\u4e2a\u6570\u7ec4\u5c31?\u54af\u3002    \n   a[]\u539f\u5148\u6570\u7ec4\uff0c\u4ece\u5927\u5230\u5c0f\u3002     \n   b[] a[i]\u00d7p    \n   c[] a[i]-b[i]    \n   \u90fd\u5177\u6709\u5355\u8c03\u6027   \n   \u6bcf\u6b21\u6bd4\u8f83\u6bcf\u4e2a\u6570\u7ec4\u91cc\u6700\u5927\u7684\uff0c\u7136\u540e\u5728\u62c6\u5f00\u5206\u653e\u5165b[],c[]\u4e2d\u5c31?\u54af\u3002\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<iostream>\n\nusing namespace std;\n\nint n,m,q,u,v,t;\n\n\nint a[11150001],b[11150001],c[11150001];\n\nint ta,tb,tc;\nint wa,wb,wc;\n\nint num=0;\n\nbool cmp(int a,int b)\n{\n\treturn a>b;\n}\n\nint main()\n{\n\tfreopen(\"a.in\",\"r\",stdin);\n\tfreopen(\"a.out\",\"w\",stdout);\n\ttb=ta=tc=1;\n\t\n\tscanf(\"%d%d%d%d%d%d\",&n,&m,&q,&u,&v,&t);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&a[i]);\n\t}\n\tsort(a+1,a+n+1,cmp);\n\twa=n;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint maxx=-2147483626;\n\t\tint cc=0;\n\t\tif(maxx<a[ta]&&ta<=wa)\n\t\t{\n\t\t\tcc=1;\n\t\t\tmaxx=a[ta];\n\t\t}\n\t\tif(maxx<b[tb]&&tb<=wb&&tb)\n\t\t{\n\t\t\tcc=2;\n\t\t\tmaxx=b[tb];\n\t\t}\n\t\tif(maxx<c[tc]&&tc<=wc&&tc)\n\t\t{\n\t\t\tcc=3;\n\t\t\tmaxx=c[tc];\n\t\t}\n\t\t//cout<<maxx<<\"*\"<<endl;\n\t\t//return 0; \n\t\tif(i%t==0)\n\t\t{\n\t\t\tprintf(\"%d \",maxx+(i-1)*q);\n\t\t}\n\t\t//cout<<cc<<endl;\n\t\tif(cc==1)\n\t\t{\n\t//\t\tcout<<\"2333\";\n\t\t\tta++;\n\t\t\tmaxx+=(i-1)*q;\n\t\t\tint x1=maxx*1.0*u/v;\n\t\t\tint x2=maxx-x1;\n\t\t\t//cout<<x2<<endl;\n\t\t\t//return 0;\n\t\t\tb[++wb]=x1-q*i;\n\t\t\tc[++wc]=x2-q*i;\n\t\t}\n\t\telse if(cc==2)\n\t\t{\n\t\t\ttb++;\n\t\t\tmaxx+=(i-1)*q;\n\t\t\tint x1=maxx*1.0*u/v;\n\t\t\tint x2=maxx-x1;\n\t\t\tb[++wb]=x1-q*i;\n\t\t\tc[++wc]=x2-q*i;\n\t\t}\n\t\telse if(cc==3)\n\t\t{\n\t\t\ttc++;\n\t\t\tmaxx+=(i-1)*q;\n\t\t\tint x1=maxx*1.0*u/v;\n\t\t\tint x2=maxx-x1;\n\t\t\tb[++wb]=x1-i*q;\n\t\t\tc[++wc]=x2-i*q;\n\t\t}\n\t/*\tcout<<\"******************\"<<endl;\n\t\tfor(int i=1;i<=ta;i++)\n\t\t{\n\t\t\tcout<<a[i]<<\" \";\n\t\t}\n\t\tcout<<endl;\n\t\tfor(int i=1;i<=tb;i++)\n\t\t{\n\t\t\tcout<<b[i]<<\" \";\n\t\t}cout<<endl;\n\t\tfor(int i=1;i<=tc;i++)\n\t\t{\n\t\t\tcout<<c[i]<<\" \";\n\t\t}cout<<endl ;*/\n\t//\tcout<<maxx<<\"*\"<<endl;\n\t}\n\tprintf(\"\\n\");\n\tfor(int i=1;i<=n+m;i++)\n\t{\n\t\tint maxx=-2147483476;\n\t\tint cc=0;\n\t\tif(maxx<a[ta]&&ta<=wa)\n\t\t{\n\t\t\tcc=1;\n\t\t\tmaxx=a[ta];\n\t\t}\n\t\tif(maxx<b[tb]&&tb<=wb)\n\t\t{\n\t\t\tcc=2;\n\t\t\tmaxx=b[tb];\n\t\t}\n\t\tif(maxx<c[tc]&&tc<=wc)\n\t\t{\n\t\t\tcc=3;\n\t\t\tmaxx=c[tc];\n\t\t}\n\t\tif(i%t==0)\n\t\t{\n\t\t//\tcout<<\"2333\";\n\t//\t\tcout<<maxx<<endl;\n\t\t\tprintf(\"%d \",maxx+m*q);\n\t\t}\n\t\tif(cc==1)\n\t\t{\n\t\t\tta++;\n\t\t}\n\t\tif(cc==2)\n\t\t{\n\t\t\ttb++;\n\t\t}\n\t\tif(cc==3)\n\t\t{\n\t\t\ttc++;\n\t\t}\n\t}\n\treturn 0;\n}\n\n\n\n```    \n\n\n\u9644\u8d60\u5bf9\u62cd\u5668   \n\ngen\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<ctime>\n#include<cstdlib>\n\nusing namespace std;\n\nint main()\n{\n\tfreopen(\"a.in\",\"w\",stdout);\n\tsrand(time(0)+2004); \n\tint n,m,q,u,v,t;\n\tn=rand()%2004030+1,m=rand()%2200030,q=rand()%2222220,u=rand()%22222220,v=rand()%2222220,t=rand()%222222222; \n\tprintf(\"%d %d %d %d %d %d\\n\",n,m,q,u%v,v,t);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(i%10==0)\n\t\tcout<<endl;\n\t\tint x=rand()%22222220;\n\t\tprintf(\"%d \",x);\n\t} \n\tprintf(\"%d\\n\");\n\treturn 0;\n}\n\n\n```   \n\npai    \n\n```\n@echo off\n:loop\ngen.exe\nbao.exe\nzheng.exe\nfc a.ans a.out \nif not errorlevel 1 goto loop\npause \ngoto loop\n```",
        "postTime": 1537621486,
        "uid": 102786,
        "name": "Sym_Je",
        "ccfLevel": 0,
        "title": "P2827 \u86af\u8693"
    }
]