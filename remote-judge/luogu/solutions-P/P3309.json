[
    {
        "content": "\u4e0d\u5931\u4e00\u822c\u6027\u8bbe\u5f53\u524d\u8be2\u95ee\u7684$y_0>0$\uff0c\u90a3\u4e48$\\dfrac{ans}{y_0}=\\max\\{\\dfrac{x_0}{y_0}\\cdot x+y\\}$\uff0c\u7136\u540e\u8fd9\u4e2a\u4e1c\u897f\u548c\u659c\u7387\u4f18\u5316\u957f\u5f97\u4e00\u6837\uff0c\u7b54\u6848\u4e00\u5b9a\u662f\u5728\u51f8\u58f3\u4e0a\u7684.\n\n\u4e8e\u662f\u6211\u4eec\u7ef4\u62a4\u8fd9\u4e2a\u51f8\u58f3.\u56e0\u4e3a\u6709\u533a\u95f4\u8be2\u95ee\u6240\u4ee5\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6bcf\u4e2a\u533a\u95f4\u7684\u51f8\u58f3.\u5177\u4f53\u5730\uff0c\u63d2\u5165\u7684\u65f6\u5019\u7edf\u8ba1\u5f53\u524d\u533a\u95f4\u5df2\u7ecf\u6709\u591a\u5c11\u4e2a\u70b9\uff0c\u5982\u679c\u70b9\u6570\u7b49\u4e8e\u5f53\u524d\u533a\u95f4\u957f\u5ea6\u90a3\u4e48\u6784\u9020\u51fa\u8fd9\u4e2a\u533a\u95f4\u7684\u51f8\u58f3.\u8be2\u95ee\u7684\u65f6\u5019\u62c6\u6210$\\log$\u4e2a\u533a\u95f4\u5206\u522b\u8dd1\u4e8c\u5206/\u4e09\u5206\u5373\u53ef.\n\n\u6c42\u51f8\u5305\u8fd9\u91cc\u4f7f\u7528\u6309$x$\u5750\u6807\u6392\u5e8f\u7684\u90a3\u4e2a\u7b97\u6cd5.\u6ce8\u610f\u5982\u679c\u51e0\u4e2a\u70b9\u7684$x$\u76f8\u540c\u90a3\u4e48\u8981\u6309$y$\u6392\u5e8f.\n\n\u63d2\u5165\u7684\u65f6\u5019\u6bcf\u4e2a\u533a\u95f4\u53ea\u4f1a\u88ab\u6784\u5efa\u4e00\u6b21\u51f8\u5305\uff0c\u603b\u590d\u6742\u5ea6$O(n\\log n)$\uff0c\u6392\u5e8f\u7528\u5f52\u5e76.\n\n\u67e5\u8be2\u7684\u65f6\u5019\u62c6\u6210$\\log$\u4e2a\u533a\u95f4\uff0c\u6bcf\u4e2a\u533a\u95f4$O(\\log n)$\u4e09\u5206/\u4e8c\u5206\uff0c\u603b\u590d\u6742\u5ea6$O(n\\log ^2 n)$\n\n\u4f7f\u7528$vector$\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u5728\u6bcf\u4e2a\u8282\u70b9\u5f00\u4e00\u4e2a\u6808\uff0c\u4f46\u662f\u975e\u5e38\u5403\u6c27(\u4e0d\u5f00$O2$\u4f1aT\u6700\u540e\u4e00\u4e2a\u70b9).\u53ef\u4ee5\u4e0d\u7528$stl$\uff0c\u7528\u4e00\u4e2a\u5927\u6808\u5b58\u4e0b\u6240\u6709\u533a\u95f4\u7684\u51f8\u5305\uff0c\u5bf9\u6bcf\u4e2a\u7ebf\u6bb5\u6811\u8282\u70b9\u5b58\u4e0b\u5b83\u6240\u5728\u51f8\u5305\u7684\u8d77\u6b62\u70b9\u5373\u53ef.\n\n\u8fd9\u91cc\u5f53\u7136\u8fd8\u662f\u7528\u65e0\u8111\u7684$vector$\u4e86233\n\n\u8fd9\u9053\u9898\u8fd8\u544a\u8bc9\u6211\u4eec\u6240\u6709\u957f\u6210$f[i]=\\min\\limits_{L(i)\\leq j\\leq R(i)}\\{k(i)x(j)+F(j)\\}+G(i)$\u7684$dp$\u90fd\u662f\u53ef\u505a\u7684233\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<cstring>\nusing namespace std;\nconst int N=2e6;\nlong long lastans;\nstruct Point{\n\tint x,y;\n\tbool operator <(const Point &a)const{return x!=a.x?x<a.x:y<a.y;}\n\tPoint operator -(const Point &a)const{return (Point){x-a.x,y-a.y};}\n\tlong long operator *(const Point &a)const{return 1ll*x*a.y-1ll*y*a.x;}\n};\nstruct Node{vector<Point>st[2];}a[N];\nint size[N],n;\nchar st[5];\nlong long calc(int rot,int x,int y)\n{\n\tint o=0;\n\tif(y<0)x=-x,y=-y,o=1;\n\tint l=0,r=a[rot].st[o].size()-1;\n//\tcout<<rot<<\" \"<<l<<\" \"<<r<<endl;\n\twhile(l<r)\n\t{\n\t\tint mid=(l+r)>>1;//cout<<l<<\" \"<<r<<\" \"<<mid<<endl;\n\t\tif(-1ll*x*(a[rot].st[o][mid+1].x-a[rot].st[o][mid].x)>=1ll*y*(a[rot].st[o][mid+1].y-a[rot].st[o][mid].y))r=mid;\n\t\telse l=mid+1;\n\t}\n//\tcout<<l<<endl;\n\treturn 1ll*x*a[rot].st[o][l].x+1ll*y*a[rot].st[o][l].y;\n}\nlong long query(int rot,int lt,int rt,int lq,int rq,int x,int y)\n{\n\tif(lt>=lq&&rt<=rq)return calc(rot,x,y);\n\tint mid=(lt+rt)>>1;\n\tif(rq<=mid)return query(rot<<1,lt,mid,lq,rq,x,y);\n\telse if(lq>mid)return query(rot<<1|1,mid+1,rt,lq,rq,x,y);\n\telse return max(query(rot<<1,lt,mid,lq,mid,x,y),query(rot<<1|1,mid+1,rt,mid+1,rq,x,y));\n}\nvoid build(int rot,int len)\n{\n\tfor(int o=0;o<=1;o++)\n\t{\n\t\tvector<Point>tmp;tmp.clear();\n\t\tvector<Point>::iterator i=a[rot<<1].st[o].begin(),j=a[rot<<1|1].st[o].begin();\n\t\tfor(;i!=a[rot<<1].st[o].end()||j!=a[rot<<1|1].st[o].end();)\n\t\t\tif(i==a[rot<<1].st[o].end()||(j!=a[rot<<1|1].st[o].end()&&*j<*i))tmp.push_back(*j++);\n\t\t\telse tmp.push_back(*i++);\n\t\tint top=0;\n\t\tfor(vector<Point>::iterator i=tmp.begin();i!=tmp.end();++i)\n\t\t{\n\t\t\twhile(top>1&&((a[rot].st[o][top-1]-a[rot].st[o][top-2])*(*i-a[rot].st[o][top-1]))>=0)--top,a[rot].st[o].pop_back();\n\t\t\ta[rot].st[o].push_back(*i);++top;\n\t\t}\n\t}\n}\nvoid update(int rot,int lt,int rt,int q,int x,int y)\n{\n\tif(lt==rt){a[rot].st[0].push_back((Point){x,y}),a[rot].st[1].push_back((Point){-x,-y}),++size[rot];return;}\n\tint mid=(lt+rt)>>1;\n\tif(q<=mid)update(rot<<1,lt,mid,q,x,y);\n\telse update(rot<<1|1,mid+1,rt,q,x,y);\n\t++size[rot];if(size[rot]==rt-lt+1)build(rot,rt-lt+1);\n}\nvoid deco(int &x)\n{\n\tx^=(lastans&0x7fffffff);\n}\nvoid print(int rot,int lt,int rt)\n{\n\tprintf(\"%d %d %d\\n\",rot,lt,rt);\n\tint mid=(lt+rt)>>1;\n\tif(lt!=rt)print(rot<<1,lt,mid),print(rot<<1|1,mid+1,rt);\n}\nint main()\n{\n\tint enc=0;\n\tscanf(\"%d%s\",&n,st+1);if(st[1]!='E')enc=1;\n//\tcout<<enc<<endl;\n//\tfreopen(\"cswa.txt\",\"w\",stdout);\n\tint nn=0;//print(1,1,n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%s\",st+1);\n\t\tif(st[1]=='Q')\n\t\t{\n\t\t\tint l,r,x,y;\n\t\t\tscanf(\"%d%d%d%d\",&x,&y,&l,&r);\n\t\t\tif(enc)deco(x),deco(y),deco(l),deco(r);\n//\t\t\tcout<<x<<\" \"<<y<<\" \"<<l<<\" \"<<r<<endl;\n\t\t\tprintf(\"%lld\\n\",lastans=query(1,1,n,l,r,x,y));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint x,y;\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tif(enc)deco(x),deco(y);\n//\t\t\tcout<<x<<\" \"<<y<<endl;\n\t\t\tupdate(1,1,n,++nn,x,y);\n\t\t}\n//\t\tprint(1,1,n);\n\t}\n}\n```",
        "postTime": 1561602646,
        "uid": 22136,
        "name": "qwaszx",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3309 \u3010[SDOI2014]\u5411\u91cf\u96c6\u3011"
    },
    {
        "content": "ans=(x1,x2)\u70b9\u79ef(x2,y2)=x1\\*x2+y1\\*y2\n\n\u6ce8\u610f\u5230\u8fd9\u662f\u9f50\u6b21\u7684\uff0c\u5b9e\u9645\u4e0a\u53ea\u8ddfk=x2/y2\u6709\u5173\n\nans=y2\\*(x1\\*k+y1)\n\n\u4e0d\u59a8\u8bbey2>0,\u5982\u679cy2<0,\u6211\u4eec\u53ea\u7528\u628ax1,x2,y1,y2\u5168\u90e8\u53d6\u53cd\u5373\u53ef\u3002\n\n\u90a3\u4e48\u5c31\u662f\u6c42max(x1\\*k+y1)\n\n\u8fd9\u663e\u7136\u5c31\u662f\u8981\u7ef4\u62a4\u4e0a\u51f8\u58f3\u3002\n\n\u5f3a\u5236\u5728\u7ebf\uff0c\u7528\u4e8c\u8fdb\u5236\u5206\u7ec4\u5373\u53ef(\u53ef\u4ee5\u770b\u4f5c\u4e00\u4e2a\u52a8\u6001\u7684\u7ebf\u6bb5\u6811\uff0c\u76f4\u63a5\u7528\u7ebf\u6bb5\u6811\u6765\u5b9e\u73b0)\u3002\n\n\u5177\u4f53\u7684\u8bf4\uff0c\u5c31\u662f\u5f53\u7ebf\u6bb5\u6811\u7684\u4e00\u4e2a\u533a\u95f4\u6ee1\u4e86\u5c31build\u51fa\u4ed6\u7684\u51f8\u58f3\u3002\n\n\u5982\u679c\u6709\u5220\u9664\u64cd\u4f5c(unknown\u90a3\u9898)\u7684\u8bdd\uff0c\u5c31\u53ea\u7528\u591a\u4e00\u4e2a\u65e0\u6548\u6807\u8bb0\uff0c\u8868\u793a\u5f53\u524d\u7684\u533a\u95f4\u7684\u51f8\u58f3\u662f\u5047\u7684\u3002\n\n\u5f53\u4e00\u4e2a\u533a\u95f4\u6ee1\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4e0d\u7acb\u523bbuild\uff0c\u53ea\u6709\u5f53\u4ed6\u7ebf\u6bb5\u6811\u7684\u53f3\u8fb9\u7684\u5144\u5f1f\u6ee1\u4e86\u624dbuild\u3002\n\n\u8fd9\u6837\u4fee\u6539\u590d\u6742\u5ea6\u663e\u7136\u662f\u5bf9\u7684\u3002\n\n\u8fd9\u6837\u7ebf\u6bb5\u6811\u6bcf\u4e00\u5c42\u6700\u591a\u4e00\u4e2a\u65e0\u6548\u7684\uff0c\u67e5\u8be2\u65f6\u8fd8\u662flog\u4e2a\u533a\u95f4\u3002\n\n(\u90a3\u9898\u7a7a\u95f4\u53ea\u7ed964MB,\u4f3c\u4e4e\u4e0d\u591f\u554a)\n\n```cpp\n#include<bits/stdc++.h>\n\n#define ll long long\n#define mid (l+r>>1)\n#define cl (k<<1)\n#define cr (cl+1)\nvoid chmax(ll &x,const ll &y) { if(x<y)x=y; }\nconst int N=400005;\nstruct point\n{\n    int x,y;\n    friend point operator -(const point &p)\n    {\n        return (point){-p.x,-p.y};\n    }\n    friend bool operator <(const point &p1,const point &p2)\n    {\n        return p1.x<p2.x||p1.x==p2.x&&p1.y<p2.y;\n    }\n    friend point operator -(const point &p1,const point &p2) \n    {\n        return (point){p1.x-p2.x,p1.y-p2.y};\n    }\n    friend ll operator *(const point &p1,const point &p2)//p1\u53c9\u79efp2 \n    {\n        return (ll)p1.x*p2.y-(ll)p1.y*p2.x;\n    }\n    friend ll dot_product(const point &p1,const point &p2)//p1\u70b9\u79efp2 \n    {\n        return (ll)p1.x*p2.x+(ll)p1.y*p2.y;\n    }\n}now;\nstruct tu\n{\n    point *a;int n;\n    void init(int _n)\n    {\n        n=_n;\n        a=new point [n+3];\n    }\n    void push(const point &x)\n    {\n        while(n>=2&&(a[n]-a[n-1])*(x-a[n-1])>=0) --n;\n        a[++n]=x;\n    }\n    void merge(const tu &q1,const tu &q2)\n    {\n        init(q1.n+q2.n);\n        \n        //\u6309x\u4e3a\u7b2c\u4e00,y\u4e3a\u7b2c\u4e8c\u5f52\u5e76 \n        int h1=1,h2=1;\n        n=0;\n        for(;;)\n        if(q1.a[h1]<q2.a[h2]) \n        {push(q1.a[h1++]);\n         if(h1>q1.n)\n         {\n             while(h2<=q2.n) push(q2.a[h2++]);\n             break;\n         }\n        }\n        else\n        {push(q2.a[h2++]);\n         if(h2>q2.n)\n         {\n             while(h1<=q1.n) push(q1.a[h1++]);\n             break;\n         }\n        }\n    }\n    ll erfen(const point &x)\n    {\n        int l=1,r=n;\n        while(l!=r)\n        if(dot_product(a[mid],x)<=dot_product(a[mid+1],x)) l=mid+1;\n        else r=mid;\n        return dot_product(a[l],x);\n    }\n};\nstruct seg\n{\n    tu a[2];//0=\u6b63 1=\u8d1f \n    ll check()\n    {\n        if(now.y<0) return a[1].erfen(-now);\n        return a[0].erfen(now);\n    }\n}a[N<<2];int tot;\nint dy[N];\nvoid init(int k,int l,int r)\n{\n    if(l==r)     {dy[l]=k;return ;}\n    init(cl,l,mid);init(cr,mid+1,r);\n}\n\nvoid add()\n{\n    int k=dy[++tot];\n    a[k].a[0].init(1);a[k].a[0].a[1]=now;\n    a[k].a[1].init(1);a[k].a[1].a[1]=-now;\n    while((k&1)&&k>1) \n    {\n        k>>=1;\n        for(int j=0;j<2;++j)\n            a[k].a[j].merge(a[cl].a[j],a[cr].a[j]);\n    }\n}\n\nll ans;\nint ql,qr;\nvoid qiu(int k,int l,int r)\n{\n    if(ql<=l&&qr>=r) { chmax(ans,a[k].check()); return ; }\n    if(ql<=mid) qiu(cl,l,mid);\n    if(qr>mid) qiu(cr,mid+1,r);\n}\n\nbool encode;\ninline void decode (int &x) {\n if(encode)\n  x ^= (ans & 0X7FFFFFFF);\n}\n\nint main()\n{\n    freopen(\"1.in\",\"r\",stdin);\n    int n;char type[5];\n    scanf(\"%d%s\",&n,type);\n    encode=type[0]!='E';\n    init(1,1,n);\n    for(int i=1;i<=n;++i)\n    {\n        scanf(\"%s%d%d\",type,&now.x,&now.y);decode(now.x);decode(now.y);\n        if(type[0]=='A') add();\n        else \n        { scanf(\"%d%d\",&ql,&qr);decode(ql);decode(qr);\n          ans=-(1e18);\n          qiu(1,1,n);\n          printf(\"%lld\\n\",ans); \n        }\n    }\n}\n```",
        "postTime": 1491569568,
        "uid": 9168,
        "name": "kczno1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3309 \u3010[SDOI2014]\u5411\u91cf\u96c6\u3011"
    },
    {
        "content": "## P3339 \u3010\u5411\u91cf\u96c6\u3011\n\n### \u9898\u610f\n\n+ \u7a7a\u4e8c\u5143\u7ec4\u6570\u7ec4 $a$\uff0c\u652f\u6301\uff1a\n1. \u5728 $a$ \u672b\u5c3e\u52a0\u5165\u4e00\u4e2a\u4e8c\u5143\u7ec4 $(x, y)$\uff08\u4e0b\u6807\u4ece $1$ \u5f00\u59cb\uff09\uff1b\n1. \u7ed9\u51fa $x,y,l,r$\uff0c\u67e5\u8be2 $\\max\\limits_{i=l}^{r}(x\\times a_i.x+y\\times a_i.y)$\u3002\n+ $|x|,|y|\\le10^8$\uff0c$1\\le n\\le4\\times10^5$\uff0c\u4fdd\u8bc1\u8be2\u95ee\u5408\u6cd5\uff0c\u5f3a\u5236\u5728\u7ebf\u3002\n\n### \u505a\u6cd5\n\n\u660e\u663e\u662f\u659c\u7387\u4f18\u5316\uff0c\u4f46\u662f\u6709\u533a\u95f4\u9650\u5236\uff0c\u8003\u8651\u7ebf\u6bb5\u6811\u7ef4\u62a4\u51f8\u5305\uff0c\u67e5\u8be2\u65f6\u62c6\u6210 $O(\\log n)$ \u4e2a\u88ab\u5b8c\u5168\u5305\u542b\u7684\u7ebf\u6bb5\u6811\u533a\u95f4\uff0c\u6bcf\u4e2a\u533a\u95f4\u4e00\u6b21\u4e09\u5206\uff0c\u5355\u6b21\u67e5\u8be2\u590d\u6742\u5ea6 $O(\\log^2n)$\u3002\n\n\u66b4\u529b\u5408\u5e76\u5b50\u6811\u7684\u8bdd\u5355\u6b21\u4fee\u6539\u590d\u6742\u5ea6\u4e3a $O(n\\log n)$\u3002\n\n\u6ce8\u610f\u5230\u53ea\u6709\u63d2\u5165\uff0c\u53ef\u4ee5\u7528 `set` \u7ef4\u62a4\u51f8\u5305\uff0c\u5355\u6b21\u4fee\u6539 $O(\\log^2n)$\u3002\u53ef\u8fc7\u3002~~\u4f46\u662f\u6211\u4e0d\u4f1a\u5199\u3002~~\n\n\u6ce8\u610f\u5230\u53ea\u6709\u88ab\u5b8c\u5168\u5305\u542b\u7684\u7ebf\u6bb5\u6811\u533a\u95f4\u91cc\u7684\u51f8\u5305\u624d\u4f1a\u88ab\u7528\u5230\uff0c\u800c\u4e14\u6bcf\u6b21\u4fee\u6539\u53ea\u5728\u6570\u7ec4\u672b\u5c3e\u3002\u6240\u4ee5\u6bcf\u4e2a\u7ebf\u6bb5\u6811\u533a\u95f4\u53ea\u9700\u8981\u5728\u5b50\u6811\u88ab\u586b\u6ee1\u90a3\u4e00\u523b\u5408\u5e76\u5373\u53ef\uff0c\u6b64\u524d\u4e0d\u4f1a\u7528\u5230\u8fd9\u4e2a\u7ebf\u6bb5\u6811\u533a\u95f4\u7684\u51f8\u5305\uff0c\u6b64\u540e\u4e0d\u4f1a\u4fee\u6539\u5230\u8fd9\u4e2a\u7ebf\u6bb5\u6811\u533a\u95f4\u3002\u603b\u4fee\u6539\u590d\u6742\u5ea6 $O(n\\log n)$\u3002",
        "postTime": 1646796590,
        "uid": 246014,
        "name": "Cutest_Junior",
        "ccfLevel": 6,
        "title": "P3339 \u3010\u5411\u91cf\u96c6\u3011"
    },
    {
        "content": "\u663e\u7136\u7b54\u6848\u5728\u51f8\u58f3\u4e0a\uff0c\u8003\u8651\u5982\u4f55\u7ef4\u62a4\u533a\u95f4\u7684\u51f8\u58f3\uff0c\u7136\u540e\u53ef\u4ee5\u4e09\u5206\u7b54\u6848\u3002\n\n\u8003\u8651\u7ebf\u6bb5\u6811\uff1f\u52a0\u70b9\u66b4\u529b\u6c42\u51f8\u5305\u7684\u590d\u6742\u5ea6\u770b\u8d77\u6765\u5f88\u4e0d\u5bf9\u3002\u8003\u8651\u6811\u72b6\u6570\u7ec4\uff1f\u6211\u4eec\u6ca1\u6cd5\u628a\u4e24\u4e2a\u524d\u7f00\u533a\u95f4\u7684\u4fe1\u606f\u76f8\u51cf\u3002\u8003\u8651\u4e00\u4e2a\u52a0\u5f3a\u7248\u7684\u6811\u72b6\u6570\u7ec4\uff0c\u60f3\u5230\u4ee5\u6bcf\u4e2a $i$ \u4e3a\u53f3\u7aef\u70b9\uff0c\u7ef4\u62a4\u957f\u5ea6\u4e3a $1,2,4,\\cdots,\\operatorname{lowbit}(i)$ \u7684\u533a\u95f4\u7684\u51f8\u58f3\uff0c\u66b4\u529b\u6c42\u51f8\u58f3\u7684\u590d\u6742\u5ea6\u662f\u5bf9\u7684\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u8be2\u95ee\u7684\u533a\u95f4 $[l,r]$\uff0c\u6211\u4eec\u8981\u600e\u4e48\u627e\u5230\u4e00\u5806\u533a\u95f4\u7684\u5e76\u96c6\u662f\u5b83\u5462\uff1f\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/jmg364tz.png)\n\n\u8349\uff0c\u8fd9\u73a9\u610f\u7684\u672c\u8d28\u548c\u7ebf\u6bb5\u6811\u4e00\u6837\uff01\u90a3\u6211\u4eec\u4e0d\u5982\u76f4\u63a5\u5199\u4e2a\u7ebf\u6bb5\u6811\u3002\n\n\u4e8e\u662f\u6211\u4eec\u8003\u8651\u5bf9\u4e8e\u8fd9\u4e2a\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u67d0\u4e2a\u533a\u95f4\uff0c\u5f53\u4e14\u4ec5\u5f53\u52a0\u5165\u8fd9\u4e2a\u533a\u95f4\u7684\u6700\u53f3\u8fb9\u4e00\u4e2a\u70b9\u7684\u65f6\u5019\u518d\u5efa\u51fa\u8fd9\u4e2a\u533a\u95f4\u7684\u51f8\u5305\uff0c\u4e8e\u662f\u590d\u6742\u5ea6\u5c31\u662f\u5bf9\u7684\u4e86\uff01\n\n\u603b\u590d\u6742\u5ea6 $O((n+q)\\log^2n)$\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nstruct Point {\n    int x, y;\n    bool operator<(const Point &o) const {\n        if (x != o.x) return x < o.x;\n        return y < o.y;\n    }\n    ll operator*(const Point &o) const {\n        return 1ll * x * o.y - 1ll * y * o.x;\n    }\n    Point& operator-=(const Point &o) {\n        x -= o.x;\n        y -= o.y;\n        return *this;\n    }\n    Point operator-(const Point &o) {\n        Point tmp(*this);\n        tmp -= o;\n        return tmp;\n    }\n} pt[400005];\nll Dot(const Point &a, const Point &b) {\n    return 1ll * a.x * b.x + 1ll * a.y * b.y;\n}\nint pcnt;\nint n;\nstruct SegTree {\n    struct Node {\n        vector<Point> up, dn;\n    } f[1600005];\n    void BuildConv(int p, int l, int r) {\n        vector<Point> t, &t1 = f[p].up, &t2 = f[p].dn;\n        for (int i = l; i <= r; i++) {\n            t.emplace_back(pt[i]);\n        }\n        sort(t.begin(), t.end());\n        for (auto i : t) {\n            while (t1.size() >= 2 && (i - t1[t1.size() - 2]) * (t1[t1.size() - 1] - t1[t1.size() - 2]) <= 0) t1.pop_back();\n            t1.emplace_back(i);\n        }\n        for (auto i : t) {\n            while (t2.size() >= 2 && (i - t2[t2.size() - 2]) * (t2[t2.size() - 1] - t2[t2.size() - 2]) >= 0) t2.pop_back();\n            t2.emplace_back(i);\n        }\n    }\n    ll Calc(const vector<Point> &p, const Point &x) {\n        int l = 0, r = p.size() - 1;\n        while (r - l >= 3) {\n            int m1 = l + (r - l) / 3, m2 = r - (r - l) / 3;\n            if (Dot(p[m1], x) > Dot(p[m2], x)) r = m2;\n            else l = m1;\n        }\n        ll ans = -1e18;\n        for (int i = l; i <= r; i++) ans = max(ans, Dot(p[i], x));\n        return ans;\n    }\n    void Modify(int i, int p = 1, int cl = 1, int cr = n) {\n        int mid = cl + cr >> 1;\n        if (i == cr) {\n            BuildConv(p, cl, cr);\n        }\n        if (cl == cr) return;\n        if (i <= mid) Modify(i, p << 1, cl, mid);\n        else Modify(i, p << 1 | 1, mid + 1, cr);\n    }\n    ll Query(int l, int r, const Point &w, int p = 1, int cl = 1, int cr = n) {\n        if (cl > r || cr < l) return -1e18;\n        if (cl >= l && cr <= r) {\n            if (w.y > 0) {\n                return Calc(f[p].up, w);\n            }\n            else {\n                return Calc(f[p].dn, w);\n            }\n        }\n        int mid = cl + cr >> 1;\n        return max(Query(l, r, w, p << 1, cl, mid), Query(l, r, w, p << 1 | 1, mid + 1, cr));\n    }\n} tr;\nchar s;\nll las;\nvoid Dec(int& x) {\n    if (s != 'E') x = x ^ (las & 0x7fffffff);\n}\nint main() {\n    scanf(\"%d %c\", &n, &s);\n    for (int i = 1; i <= n; i++) {\n        char op; Point w;\n        scanf(\" %c%d%d\", &op, &w.x, &w.y);\n        Dec(w.x); Dec(w.y);\n        if (op == 'A') {\n            pt[++pcnt] = w;\n            tr.Modify(pcnt);\n        }\n        else {\n            int l, r;\n            scanf(\"%d%d\", &l, &r);\n            Dec(l); Dec(r);\n            printf(\"%lld\\n\", las = tr.Query(l, r, w));\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1681196176,
        "uid": 363415,
        "name": "251Sec",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3309 [SDOI2014]\u5411\u91cf\u96c6"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P3309)\n\n\u8fbe\u6210\u6210\u5c31\uff1a\u4e00\u4eba\u72ec\u9738\u4e09\u9875\u63d0\u4ea4\n\n\u81ea\u5df1\u5199\u7684\u83ab\u540d\u5176\u5999MLE\u6b7b\u90fd\u4e0d\u77e5\u9053\u600e\u4e48\u56de\u4e8b\uff0c\u7167\u7740\u9898\u89e3\u6253\u4e00\u76f4RE\u4e00\u4e2a\u70b9\u6700\u540e\u53d1\u73b0\u7adf\u7136\u662f\u51f8\u5305\u4e0a\u4e00\u4e2a\u70b9\u6c42\u9519\u4e86\u2026\u2026\u56db\u4e2a\u534a\u5c0f\u65f6\u5c31\u4e00\u76f4\u7528\u6765\u8c03\u4ee3\u7801\u4e86\u2026\u2026\n\n![](https://i.loli.net/2018/11/22/5bf69369bd582.png)\n\n\u90a3\u4e48\u6211\u4eec\u53ea\u8981\u7ef4\u62a4\u597d\u8fd9\u4e2a\u51f8\u58f3\uff0c\u56e0\u4e3a\u8fd9\u662f\u4e00\u4e2a\u51f8\u51fd\u6570\uff0c\u6240\u4ee5\u53ea\u8981\u5728\u4e0a\u9762\u4e09\u5206\u627e\u6700\u503c\u5373\u53ef\n\n\u4e8e\u662f\u73b0\u5728\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u8d44\u74f7\u63d2\u5165\u7684\u51f8\u58f3\u3002\u8003\u8651\u7ebf\u6bb5\u6811\uff0c\u6211\u4eec\u53d1\u73b0\u6bcf\u4e00\u6b21\u5728\u7ebf\u6bb5\u6811\u4e0a\u8be2\u95ee\u7684\u533a\u95f4\u5fc5\u7136\u90fd\u662f\u5df2\u7ecf\u628a\u70b9\u63d2\u6ee1\u4e86\u7684\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7ebf\u6bb5\u6811\u4e0a\u6bcf\u4e00\u4e2a\u8282\u70b9\u5185\u7684\u6240\u6709\u5143\u7d20\u90fd\u63d2\u5165\u5b8c\u4e4b\u540e\uff0c\u518d\u6784\u5efa\u51f8\u58f3\uff0c\u90a3\u4e48\u663e\u7136\u6bcf\u4e2a\u8282\u70b9\u53ea\u4f1a\u88ab\u6784\u5efa\u4e00\u6b21\u51f8\u5305\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u662f$O(nlog^2n)$\n\n\u7136\u540e\u6ce8\u610f\u4e00\u4e2a\u7ec6\u8282\u2026\u2026\u56e0\u4e3a\u6211\u4eec\u7ef4\u62a4\u597d\u7684\u51f8\u5305\u8981\u4fbf\u4e8e\u5206\u6210\u4e0a\u4e0b\u51f8\u58f3\uff0c\u6240\u4ee5\u51f8\u5305\u7684\u8d77\u70b9\u5e94\u8be5\u662f$x$\u5750\u6807\u6700\u5c0f\u7684\uff0c\u8fd9\u6837\u624d\u6ee1\u8db3\u5b83\u5de6\u53f3\u4e24\u8fb9\u5206\u522b\u662f\u4e0a\u51f8\u58f3\u548c\u4e0b\u51f8\u58f3\u2026\u2026\u6211\u6309\u7167\u4ee5\u524d\u7684\u5199\u6cd5\u627e$y$\u5750\u6807\u6700\u5c0f\u7684\u5f53\u8d77\u70b9\u7136\u540e\u5c31\u6ca1\u6709\u7136\u540e\u4e86\u2026\u2026\n```\n//minamoto\n#include<bits/stdc++.h>\n#define fp(i,a,b) for(register int i=a,I=b+1;i<I;++i)\n#define fd(i,a,b) for(register int i=a,I=b-1;i>I;--i)\n#define ll long long\n#define inf 1e18\nusing namespace std;\ntemplate<class T>inline bool cmax(T&a,const T&b){return a<b?a=b,1:0;}\nint flag=0,all;ll lasans=0;\nint read(){\n    int res,f=1;char ch;\n    while((ch=getchar())>'9'||ch<'0')(ch=='-')&&(f=-1);\n    for(res=ch-'0';(ch=getchar())>='0'&&ch<='9';res=res*10+ch-'0');\n    res*=f;if(flag)res^=(lasans&0x7fffffff);\n    return res;\n}\nchar sr[1<<21],z[20];int C=-1,Z=0;\ninline void Ot(){fwrite(sr,1,C+1,stdout),C=-1;}\nvoid print(ll x){\n    if(C>1<<20)Ot();if(x<0)sr[++C]='-',x=-x;\n    while(z[++Z]=x%10+48,x/=10);\n    while(sr[++C]=z[Z],--Z);sr[++C]='\\n';\n}\nconst int N=4e5+5;\nstruct node{int x,y;}b[N],st[N];\nstruct seg{\n    int l,r,pos,sz;seg *ch[2];\n    vector<node>mp;\n}pool[N<<2],*rt;\ninline node operator -(node a,node b){return (node){a.x-b.x,a.y-b.y};}\ninline ll operator *(node a,node b){return 1ll*a.x*b.y-1ll*b.x*a.y;}\ninline ll dot(node a,node b){return 1ll*a.x*b.x+1ll*a.y*b.y;}\ninline bool operator <(node a,node b){\n    a=a-st[1],b=b-st[1];\n    return a*b==0?1ll*a.x*a.x+1ll*a.y*a.y<1ll*b.x*b.x+1ll*b.y*b.y:a*b>0;\n}\nvoid graham(seg *p){\n\tint top=1,sz=p->r-p->l+1,k=1;\n\tfp(i,1,sz)b[i]=p->mp[i-1];\n\tfp(i,2,sz)if(b[i].x<b[k].x||(b[i].x==b[k].x&&b[i].y<b[k].y))k=i;\n\tswap(b[1],b[k]),st[1]=b[1],sort(b+2,b+sz+1);\n\tfp(i,2,sz){\n\t\twhile(top>1&&(b[i]-st[top-1])*(st[top]-st[top-1])>=0)--top;\n\t\tst[++top]=b[i];\n\t}st[++top]=b[1];p->sz=top;\n\tvector<node>().swap(p->mp);\n//\tp->mp.clear();\n\tfp(i,1,top)p->mp.push_back(st[i]);\n\tfp(i,1,top-1)if(st[i+1].x<=st[i].x){p->pos=i-1;break;}\n}\nll calc(seg *p,node q){\n\tint l,r,m1,m2;ll ans=-inf;\n\tq.y>0?(l=p->pos,r=p->sz-1):(l=0,r=p->pos);\n\twhile(r-l>=3){\n\t\tm1=l+(r-l)/3,m2=r-(r-l)/3;\n\t\tdot(q,p->mp[m1])>dot(q,p->mp[m2])?r=m2:l=m1;\n\t}fp(i,l,r)cmax(ans,dot(q,p->mp[i]));return ans;\n}\nvoid ins(seg *p,int pos,node x){\n    p->mp.push_back(x);if(pos==p->r)graham(p);if(p->l==p->r)return;\n    int mid=(p->l+p->r)>>1;pos<=mid?ins(p->ch[0],pos,x):ins(p->ch[1],pos,x);\n}\nll query(seg *p,int l,int r,node x){\n    if(l<=p->l&&r>=p->r)return calc(p,x);\n    int mid=(p->l+p->r)>>1;ll res=-inf;\n    if(l<=mid)cmax(res,query(p->ch[0],l,r,x));\n    if(r>mid)cmax(res,query(p->ch[1],l,r,x));\n    return res;\n}\nvoid build(seg *p,int l,int r){\n    p->l=l,p->r=r;if(l==r)return;int mid=(l+r)>>1;\n    build(p->ch[0]=pool+ ++all,l,mid),build(p->ch[1]=pool+ ++all,mid+1,r);\n}\nint main(){\n//\tfreopen(\"testdata.in\",\"r\",stdin);\n    int n,l,r,tot=0;char s[10];node x;\n    n=read(),scanf(\"%s\",s),flag=s[0]!='E';\n    build(rt=pool+ ++all,1,n);\n    while(n--){\n        scanf(\"%s\",s),x.x=read(),x.y=read();\n        if(s[0]=='Q')l=read(),r=read(),print(lasans=query(rt,l,r,x));\n        else ins(rt,++tot,x);\n    }return Ot(),0;\n}\n```",
        "postTime": 1542886968,
        "uid": 41781,
        "name": "bztMinamoto",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3309 \u3010[SDOI2014]\u5411\u91cf\u96c6\u3011"
    },
    {
        "content": ">\u652f\u6301\u4ee5\u4e0b\u64cd\u4f5c\n>\n- \u5728\u5e8f\u5217\u672b\u5c3e\u63d2\u5165\u4e00\u4e2a\u5411\u91cf\n- \u8be2\u95ee$[l,r]$\u4e2d\u5411\u91cf\u4e0e\u7ed9\u5b9a\u5411\u91cf$(x_0,y_0)$\u70b9\u79ef\u6700\u5927\u503c\n\n$x_0x_i+y_0y_i>x_0x_j+y_0y_j$\n\n$x_0(x_i-x_j)>y_0(y_j-y_i)$\n\n- $-\\frac{x_0}{y_0}<\\frac{y_i-y_j}{x_i-x_j},y_0>0$\n- $-\\frac{x_0}{y_0}>\\frac{y_i-y_j}{x_i-x_j},y_0\\leqslant0$\n\n\u610f\u601d\u5c31\u662f$y_0>0$\u7ef4\u62a4\u4e0a\u51f8\u58f3\uff0c\u5426\u5219\u7ef4\u62a4\u4e0b\u51f8\u58f3\n\n\u6700\u540e\u6700\u4f18\u503c\u4e09\u5206\u5373\u53ef\uff0c\u6ce8\u610f\u6574\u6570\u4e09\u5206\u5c3d\u91cf\u589e\u5927\u95f4\u8ddd(\u6700\u597d\u4e2d\u95f4\u4e09\u4e2a\u90fd\u4fdd\u7559)",
        "postTime": 1596254752,
        "uid": 40629,
        "name": "zzw4257",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3309 \u3010[SDOI2014]\u5411\u91cf\u96c6\u3011"
    }
]