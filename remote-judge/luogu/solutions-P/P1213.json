[
    {
        "content": "\u679a\u4e3e\u66b4\u529b\u5927\u6cd5\u597d\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\n\n\u56e0\u4e3a\u65f6\u949f\u53ea\u67093,6,9,12\uff0c\u4e09\u4e2a\u72b6\u6001\uff0c\u6bcf\u4e2a\u65f6\u949f\u8f6c\u523012\u9700\u8981\uff0812-k\uff09%4\u6b21\u79fb\u52a8\uff0c\n\n\u7d2f\u8ba1\u6bcf\u6b21\u79fb\u52a8\uff0c\u5982a\u8868\u53d71,2,4,\u63a7\u5236\uff0c\u6240\u4ee5if(p1+p2+p4)%4==(4-a[1])%4,a\u8868\u5c31\u8f6c\u523012\n\n\u4ee5\u6b64\u7c7b\u63a8\uff0c\u4ece1 \u5f00\u59cb\uff0c\u4fdd\u8bc1\u6700\u5c0f\n\n\u6bd4\u8f83\u4e11\u7684\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint b[10000];\nvoid out()\n{\n    for(int i=1;i<=9;i++)\n    if(b[i]>0)\n    for(int j=1;j<=b[i];j++)\n    cout<<i<<\" \";\n}\nint main()\n{int a[100];\n    for(int i=1;i<=9;i++)\n    {cin>>a[i];\n     a[i]=a[i]/3;\n    }\n    for(int p1=0;p1<=3;p1++)\n    for(int p2=0;p2<=3;p2++)\n    for(int p3=0;p3<=3;p3++)\n    for(int p4=0;p4<=3;p4++)\n    for(int p5=0;p5<=3;p5++)\n    for(int p6=0;p6<=3;p6++)\n    for(int p7=0;p7<=3;p7++)\n    for(int p8=0;p8<=3;p8++)\n    for(int p9=0;p9<=3;p9++)\n    if((p1+p2+p4)%4==(4-a[1])%4&&(p1+p2+p3+p5)%4==(4-a[2])%4&&(p2+p3+p6)%4==(4-a[3])%4&&(p1+p4+p5+p7)%4==(4-a[4])%4&&\n    (p1+p3+p5+p7+p9)%4==(4-a[5])%4&&(p3+p5+p6+p9)%4==(4-a[6])%4&&(p4+p7+p8)%4==(4-a[7])%4&&(p5+p7+p8+p9)%4==(4-a[8])%4&&\n    (p6+p8+p9)%4==(4-a[9])%4)\n    {b[1]=p1;\n    b[2]=p2;\n    b[3]=p3;\n    b[4]=p4;\n    b[5]=p5;\n    b[6]=p6;\n    b[7]=p7;\n    b[8]=p8;\n    b[9]=p9;\n    out();\n    }\n}\n```",
        "postTime": 1498188356,
        "uid": 11086,
        "name": "\u4e00\u5ff5\u4e4b\u95f4",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1213 \u3010\u65f6\u949f\u3011"
    },
    {
        "content": "\n\u8fd9\u9898\u9700\u8981\u5728\u53ef\u8bfb\u6027\u548c\u6548\u7387\u4e4b\u95f4\u59a5\u534f\n\n## Overview\n\n\u4e00\u5171\u53ea\u6709 $4^9$ \u4e2a\u72b6\u6001\uff0c\u5927\u6982\u4e8c\u5341\u516d\u4e07\u591a\u4e00\u70b9\uff0c\u6240\u4ee5\u80af\u5b9a\u662f\u591f\u7528\u4e86\n\nbfs\u80af\u5b9a\u662f\u90a3\u4e2abfs\uff0c\u5173\u952e\u662f\u72b6\u6001\u7684\u8868\u793a\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2aint\u6765\u8868\u793a\u72b6\u6001\uff0c\u8fd9\u6837\u8f6c\u79fb\u7684\u65f6\u5019\u6bd4\u8f83\u9ebb\u70e6\uff0c\u4e5f\u53ef\u4ee5\u7528`3*3`\u77e9\u9635\u6765\u8868\u793a\u8fd9\u6837\u6548\u7387\u4e0e\u7a7a\u95f4\u5f00\u9500\u4f1a\u6bd4\u8f83\u5927~~\u867d\u7136\u6211\u7528\u7684\u5c31\u662f\u8fd9\u4e2a~~\n\n\u9605\u8bfb\u4e86\u4e00\u4e0b\u5df2\u6709\u7684\u9898\u89e3\uff0cummmmm\uff0c\u4ee3\u7801~~\u597d\u4e11~~\u4e0d\u662f\u5f88\u76f4\u89c2\n\n\u53ef\u4ee5\u8054\u60f3\u5230\u516b\u6570\u7801\u548c\u534e\u5bb9\u9053\n\n\u4ece\u6570\u5b66\u89d2\u5ea6\u6765\u770b\uff0c\u8fd99\u79cd\u8fd0\u7b97\u662f9\u4e2a\u7b97\u5b50\uff08\u6700\u7b80\u5355\u7684\u52a0\u6cd5\u8fd0\u7b97\uff09\n\n## ~~\u5fc3\u8def\u5386\u7a0b~~\u63a2\u7d22\u8fc7\u7a0b\n\n### `map <Matrix, int>`\n\n\u4e8e\u662f\u4e4e\u6211\u7684\u7b2c\u4e00\u4efd\u4ee3\u7801\uff08\u51fa\u4e8e\u7bc7\u5e45\u548c\u7f8e\u89c2\u8fd9\u91cc\u7ed9\u51fa\u5173\u952e\u4ee3\u7801\uff0c\u5927\u5bb6\u53ef\u4ee5\u610f\u4f1a\uff0c\u5b8c\u6574\u4ee3\u7801\u9644\u5728\u6700\u540e\u9762\uff09\n\n```c++\n\nconst int MOVES[11][MATRIX_N][MATRIX_N] = {\n    {// ABDE\n        {1,1,0},\n        {1,1,0},\n        {0,0,0}\n    },{//ABC\n        {1,1,1},\n        {0,0,0},\n        {0,0,0}\n    },\n    ...\n};\n\nstruct Matrix{\n    int s[MATRIX_N][MATRIX_N];\n\n    Matrix(){memset(s, 0, sizeof(s));}\n    int* operator [](int idx){return s[idx];}\n    Matrix (const int arr[MATRIX_N][MATRIX_N]){...}\n    void read(){...}\n    friend Matrix operator + (Matrix &a, Matrix &b){...}\n    friend Matrix operator - (Matrix &a, Matrix &b){...}\n    friend bool operator < (const Matrix &a, const Matrix &b){...}\n    bool is_target(){..}\n    void print(){...}\n} moves[11];\n\nmap <Matrix, int> vis;  // come from which move\n\nvoid print_path(Matrix cur){\n    if (vis[cur] == -1) return;\n    Matrix pre = cur - moves[vis[cur]];\n    print_path(pre);\n    printf(\"%d\", vis[cur] + 1);\n    //cur.print();\n    if (!cur.is_target()) putchar(' ');\n}\n\nvoid bfs(Matrix start){\n    queue <Matrix> Q;\n    vis[start] = -1;\n    for (Q.push(start); !Q.empty();){\n        Matrix cur = Q.front(); Q.pop();\n        if (cur.is_target()) {\n            print_path(cur);\n            return;\n        }\n        for (int i = 0; i < 9; i++){\n            Matrix nxt = cur + moves[i];\n            if (vis[nxt]) continue;\n            vis[nxt] = i;\n            Q.push(nxt);\n        }\n    }\n}\n\nint main(){...}\n```\n\n\u81ea\u4ee5\u4e3a\u662f\u6700\u76f4\u89c2\u7684\u4e00\u4e2a\u7248\u672c\uff0c\u53ef\u80fd\u662fpython\u5199\u591a\u4e86\u5427\u3002\n\n\u53ea\u8fc7\u4e86\u4e24\u4e2a\u70b9\uff0c\u53ef\u80fd\u662f\u8fc7\u591a\u7684matrix\u5bfc\u81f4\u6548\u7387\u964d\u4f4e\uff0c\u5185\u5b58\u4e5f\u96be\u4ee5\u63a7\u5236\n\n### `map <int, int>`\n\n\u4e8e\u662f\u4e4e\u5f80matrix\u4e2d\u6dfb\u52a0`to_int()`\u51fd\u6570\n\n```c++\nstruct Matrix{\n\t...\n\n    int to_int(){\n        int ans = 0;\n        for (int i = 0; i < MATRIX_SIZE; i++)\n            for (int j = 0; j < MATRIX_SIZE; j++)\n                ans = (ans * 10) + s[i][j];\n        return ans;\n    }\n    ...\n}\n\n...\n\ntypedef pair<int, int> P;\nmap <int, P> vis;  // pair<pre, come from which move>\n```\n\n\u8fc7\u4e865\u4e2a\u70b9\uff0c\u679c\u7136\u6709\u6bd2\uff0cummmm\uff0c\u52a0\u4e2a\u6c27\u6c14\u4f18\u5316\uff0c\u8fc7\u4e86\n\n\u4f46\u662f\u4e0d\u7518\u5fc3\u554a\uff0c\u601d\u7d22\u4e00\u4e0b\uff0c\u4e00\u5171\u5c31\u90a3\u4e48\u70b9\u72b6\u6001\uff0c\u51fa\u9505\u7684\u5927\u6982\u7387\u662f`map`\n\n### \u8001\u8001\u5b9e\u5b9e\u54c8\u5e0c\u5427\n\n\u5176\u5b9e\u6570\u7ec4\u957f\u5ea6\u53ea\u8981`30w`\u5c31\u8db3\u591f\uff0c\u53ef\u4ee5\u6574\u4e00\u4e2a\u7c7b\u4f3c\u5eb7\u6258\u5c55\u5f00\u7684\u54c8\u5e0c\u51fd\u6570\uff0c\u76f4\u63a5\u8ba1\u7b97\u51fa\u4ed6\u662f\u6392\u53f7\u7b2c\u51e0\u5927\u7684\uff0c\u4e0d\u8fc7\uff0c~~\u56e0\u4e3a\u61d2~~\uff0c\u4e3a\u4ec0\u4e48\u5148\u6a21\u4e00\u4e2a\u5927\u8d28\u6570\u5462~~\u66b4\u529b\u4e00\u4e0b\u5462~~\n\n\u4e8e\u662f\u4e4e\n\n```c++\nconst int MOD = magic_number(a girls qq id);\n\nstruct Matrix{\n    ...\n\n    int to_int(){\n        int ans = 0;\n        for (int i = 0; i < MATRIX_SIZE; i++)\n            for (int j = 0; j < MATRIX_SIZE; j++)\n                ans = (ans * 10) + s[i][j];\n        return ans % MOD;\n    }\n    ...\n\n} start, target, moves[11];\n\n...\n\nP vis[MOD];\n//map <int, P> vis;  // pair<pre, come from which move>\n\nvoid print_path(int cur){\n    if (cur == start.to_int()) return;\n    int pre = vis[cur].first;\n    print_path(pre);\n    printf(\"%d\", vis[cur].second + 1);\n    if (cur != target.to_int()) putchar(' ');\n}\n...\n\n```\n\n\u8bd5\u4e86\u51e0\u4e2a\u6570\u5b57\u90fdWA\u4e86\uff0c\u8fd9\u4e2a\u65f6\u5019\u5df2\u7ecf\u60f3\u5199\u7c7b\u4f3c\u5eb7\u6258\u5c55\u5f00\u7684\u4e00\u6837\u4e1c\u897f\u4e86\uff0c\u4f46\u662f\uff0c\u4f3c\u4e4e\u8fd8\u80fd\u6323\u624e\u4e00\u4e0b\uff0c[\u5e38\u7528Hash\u8d28\u6570\u8868](https://blog.csdn.net/shiyongyang/article/details/78079109)\n\n\u53c8\u8bd5\u4e86\u4e24\u4e2a\u6570\u5b57\uff0c\u597d\u4e86\uff0cA\u4e86\u3002\u6807\u51c6\u5199\u6cd5\u5eb7\u6258\u5c55\u5f00\u6216\u8005\u6574\u4e2a\u54c8\u5e0c\u51b2\u7a81\u7684\u5904\u7406\uff08\u7ebf\u6027\u63a2\u67e5\u6216\u8005\u62c9\u94fe\u90fd\u884c\uff09\u6216\u8005\u591a\u6b21\u54c8\u5e0c\u591a\u6765\u51e0\u4e2a`magic_number`\u3002\u81ea\u5df1\u6ca1\u6709\u7ee7\u7eed\u5f80\u4e0b\u53ef\u80fd\u662f\u56e0\u4e3a\u6298\u817e\u4e86\u633a\u4e45\u7d2f\u4e86~~\u61d2~~\n\n~~STL\u6709\u98ce\u9669\uff0c\u4f7f\u7528\u9700\u8c28\u614e\uff0c~~ \u771f\u9999\n\n## ~~\u6700\u540ebb\u51e0\u53e5~~Summary\n\n\u53ef\u80fd\u5de5\u7a0b\u4ee3\u7801\u5199\u591a\u4e86\uff0c\u66f4\u503e\u5411\u4e8e\u4f7f\u7528\u9020\u597d\u7684\u8f6e\u5b50\u5427\u3002\n\n\u4e0b\u9762\u4e24\u4efd\u4ee3\u7801\u76f8\u4fe1\u4e0d\u9700\u8981\u4ec0\u4e48\u6ce8\u91ca\uff0c\u56e0\u4e3a\u51fd\u6570\u540d\u4e0e\u53d8\u91cf\u540d\u90fd\u662f\u6709\u610f\u4e49\u7684\u5355\u8bcd\u6216\u77ed\u8bed\uff0c\u8bfb\u8d77\u6765\u611f\u89c9\u50cf\u662f\u5199\u6587\u7ae0\u4e00\u822c\u3002\u6bcf\u4e2a\u51fd\u6570\u90fd\u4fdd\u6301\u572820\u884c\u4ee5\u5185\uff0c\u51fa\u9505\u7684\u6982\u7387\u5927\u5927\u964d\u4f4e\uff0c\u7f16\u8bd1\u6837\u4f8b\u65e0debug\u4e00\u904d\u8fc7\uff0c\u8fd9\u91cc\u4e0d\u662f\u8bf4\u4ee3\u7801\u80fd\u529b\u6709\u591a\u597d\uff0c\u800c\u662f\u8bf4\uff0c\u4f7f\u7528\u8fd9\u4e2a\u5199\u6cd5\uff0c\u4f1a\u8ba9\u81ea\u5df1\u601d\u8def\u66f4\u52a0\u6e05\u6670\uff0c\u4e00\u6bb5\u65f6\u95f4\u5185\u53ea\u5173\u6ce8\u4e00\u6bb5\u903b\u8f91\uff0c\u5f88\u591a\u4eba\u4ee3\u7801debug\u4e0d\u51fa\u6765\u4e0d\u662f\u56e0\u4e3a\u4ee3\u7801\u80fd\u529b\u5f31\uff0c\u53cd\u800c\u662f\u56e0\u4e3a\u4ee3\u7801\u80fd\u529b\u592a\u5f3a\uff0c\u50cf\u4e00\u4e2a `int main`\u5b8c\u6210\u6240\u6709\u7684\u903b\u8f91\u3002\u8fd9\u6837\u7684\u4ee3\u7801\u5728\u81ea\u5df1\u8111\u5b50\u5341\u5206\u6e05\u6670\u7684\u65f6\u5019\u662f\u53ef\u4ee5\u7801\u7684\u98de\u8d77\u7684\uff0c\u4e0d\u8fc7\u53ef\u80fd\u53ea\u6709\u4e24\u5929\u5185\u7684\u81ea\u5df1\u624d\u80fd\u770b\u61c2\uff0c\u53ef\u80fd\u8fc7\u4e86\u4e24\u5929\u81ea\u5df1\u56de\u5934\u770b\u7684\u65f6\u5019\u60ca\u547c\u201c\u6211\u9760\uff0c\u4ec0\u4e48shit\u201d\u3002\u8fd9\u91cc\u5927\u90e8\u5206\u7684\u4ee3\u7801\u4f9d\u7136\u662fc\u8bed\u8a00\u4e2d\u7684`strct`\u5176\u5b9e\u662f\u628a\u5176\u5f53\u6210\u4e00\u4e2a\u5b8c\u5168`public`\u7684`class`\u6765\u7528\u4e86\uff0c\u518d~~\u9700\u6c42\u53d8\u66f4~~\u6362\u5199\u6cd5\u7684\u65f6\u5019\uff0c\u53ea\u8981\u4e13\u6ce8\u90a3\u4e48\u51e0\u4e2a\u51fd\u6570\u5c31\u597d\u4e86\uff0c\u975e\u5e38\u5feb\u3002\u7a0d\u5fae\u8bb2\u4e00\u70b9\u8f6f\u4ef6\u5de5\u7a0b\u5427\uff0c\u4f46\u592a\u201c\u4f18\u96c5\u201d\u4e86\u53c8\u4f1a\u5bfc\u81f4\u4ee3\u7801\u8fc7\u4e8e\u81a8\u80c0\uff0c\u6bcf\u4e2a\u4eba\u5199\u7684\u65f6\u5019\u90fd\u4f1a\u6709\u4e00\u4e2a\u81ea\u5df1\u7684\u5e73\u8861\u70b9\u3002\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e2a\u6817\u5b50\uff0c\u53ea\u662f\u5e0c\u671b\u4ee5\u540eOI\u9009\u624b\u7684\u4ee3\u7801\u98ce\u683c\u4e0d\u518d\u88ab\u4e1a\u754c\u55b7\u3002\u5e0c\u671b\u4ee5\u540e\u770b\u9898\u89e3\u533a\u7684\u65f6\u5019\u80fd\u5982\u540c\u8bfb\u6587\u7ae0\u4e00\u6837\u8bfb\u5927\u5bb6\u7684\u4ee3\u7801\u3002\n\n\u4e00\u4e0d\u5c0f\u5fc3\u7d6e\u7d6e\u53e8\u53e8\u53c8\u5199\u4e86\u4e00\u5806\uff0c\u7761\u89c9\u7761\u89c9\n\n## \u81f4\u8c22\n\n\u611f\u8c22\u53c8\u767d\u3001jjm\u3001\u8d3e\u7ef4\u65af\u5e2e\u5fd9\u770b\u4ee3\u7801\uff0c\u611f\u8c22\u5076\u50cf\u6d3e\u6b4c\u624b\u7684\u97f3\u4e50\u966a\u6211\u5ea6\u8fc7\u8fd9\u4e2a\u591c\u665a\n\nsee you later\n\n## Future Work\n\n\u4f9d\u7136\u6709\u4f18\u5316\u7a7a\u95f4\uff0c\u6bd4\u5982\u8bf4bfs\u7684\u961f\u5217\u91cc\u9762\u586b\u7684\u662fint\u7136\u540e\u505a\u4e00\u4e2aint\u8f6cMatrix\u8fdb\u884c\u8ba1\u7b97\u751a\u81f3\u76f4\u63a5\u5bf9int\u7a7a\u95f4\u8fdb\u884c\u4e5d\u79cd\u8fd0\u7b97\u3002\u54c8\u5e0c\u8fd9\u91cc\u662f\u641c\u4e86\u4e00\u4e2a\u7b80\u5355\u7684magic_number\u6df7\u8fc7\u53bb\u4e86\uff0c\u524d\u6587\u63d0\u4e86\u53ef\u4ee5\u4f7f\u7528\u66f4\u4f18\u96c5\u7684\u54c8\u5e0c\u3002\u4e0d\u5199\u4e86\uff0c~~\u61d2~~\n\n- \u53c8\u767d\uff1a\u53ea\u8981\u5bb9\u5fcd\u4e11\u964b\uff0c\u4e5d\u7ef4\u7684vis\n- \u6211\uff1a\u6211\u62d2\u7edd\n\n## \u9644\u5f55\n\n\u60b2\u4f24\u662f\u5962\u4f88\u54c1\u6211\u6d88\u53d7\u4e0d\u8d77\uff0c\u5feb\u4e50\u50cf\u5669\u68a6\u603b\u8ba9\u4eba\u60ca\u9192\n\n\n### AC\u7248\u672c\u4ee3\u7801\n\n```c++\n\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef pair<int, int> P;\nconst int MOD = 12255871;\n\nconst int MATRIX_N = 5;\nconst int MATRIX_SIZE = 3;\n\nconst int MOVES[11][MATRIX_N][MATRIX_N] = {\n    {// ABDE\n        {1,1,0},\n        {1,1,0},\n        {0,0,0}\n    },{//ABC\n        {1,1,1},\n        {0,0,0},\n        {0,0,0}\n    },{//BCEF\n        {0,1,1},\n        {0,1,1},\n        {0,0,0}\n    },{//ADG\n        {1,0,0},\n        {1,0,0},\n        {1,0,0}\n    },{//BDEFH\n        {0,1,0},\n        {1,1,1},\n        {0,1,0}\n    },{//CFI\n        {0,0,1},\n        {0,0,1},\n        {0,0,1}\n    },{//DEGH\n        {0,0,0},\n        {1,1,0},\n        {1,1,0}\n    },{//GHI\n        {0,0,0},\n        {0,0,0},\n        {1,1,1}\n    },{//EFHI\n        {0,0,0},\n        {0,1,1},\n        {0,1,1}\n    }\n};\n\nstruct Matrix{\n    int s[MATRIX_N][MATRIX_N];\n\n    Matrix(){memset(s, 0, sizeof(s));}\n    int* operator [](int idx){return s[idx];}\n    Matrix (const int arr[MATRIX_N][MATRIX_N]){\n        for (int i = 0; i < MATRIX_SIZE; i++)\n            for (int j = 0; j < MATRIX_SIZE; j++)\n                s[i][j] = arr[i][j] * 3;\n    }\n    void read(){\n        for (int i = 0; i < MATRIX_SIZE; i++)\n            for (int j = 0; j < MATRIX_SIZE; j++) {\n                scanf(\"%d\", &s[i][j]);\n                s[i][j] %= 12;\n            }\n    }\n\n    friend Matrix operator + (Matrix &a, Matrix &b){\n        Matrix c;\n        for (int i = 0; i < MATRIX_SIZE; i++)\n            for (int j = 0; j < MATRIX_SIZE; j++)\n                c[i][j] = (a[i][j] + b[i][j]) % 12;\n        return c;\n    }\n\n    int to_int(){\n        int ans = 0;\n        for (int i = 0; i < MATRIX_SIZE; i++)\n            for (int j = 0; j < MATRIX_SIZE; j++)\n                ans = (ans * 10) + s[i][j];\n        return ans % MOD;\n    }\n\n    void print(){\n        for (int i = 0; i < MATRIX_SIZE; i++)\n            for (int j = 0; j < MATRIX_SIZE; j++)\n                printf(\"%d%c\", s[i][j], j==MATRIX_SIZE-1?' ':' ');\n        puts(\"\");\n    }\n} start, target, moves[11];\n\nP vis[MOD];\n//map <int, P> vis;  // pair<pre, come from which move>\n\nvoid print_path(int cur){\n    if (cur == start.to_int()) return;\n    int pre = vis[cur].first;\n    print_path(pre);\n    printf(\"%d\", vis[cur].second + 1);\n    if (cur != target.to_int()) putchar(' ');\n}\n\nint bfs(Matrix start){\n    queue <Matrix> Q;\n    memset(vis, 0, sizeof vis);\n    vis[start.to_int()] = P(-1, -1);\n    for (Q.push(start); !Q.empty();){\n        Matrix cur = Q.front(); Q.pop();\n        if (cur.to_int() == target.to_int()) return cur.to_int();\n        for (int i = 0; i < 9; i++){\n            Matrix nxt = cur + moves[i];\n            if (vis[nxt.to_int()] != P(0, 0)) continue;\n            //if (vis.find(nxt.to_int()) != vis.end()) continue;\n            vis[nxt.to_int()] = P(cur.to_int(), i);\n            Q.push(nxt);\n        }\n    }\n}\n\nint main(){\n    //freopen(\"in.txt\", \"r\", stdin);\n    //freopen(\"out.txt\", \"w\", stdout);\n    for (int i = 0; i < 9; i++){\n        moves[i] = Matrix(MOVES[i]);\n    }\n    start.read();\n    int ans = bfs(start);\n    print_path(ans);\n    return 0;\n}\n\n```\n\n### \u7b2c\u4e00\u7248\u4ee3\u7801}\uff08\u53ef\u80fd\u8fd8\u6709\u5c0f\u5751\uff09\n\n\u53cd\u6b63\u53ea\u80fd\u8fc7\u4e24\u4e2a\u70b9\uff0cwho cares\n\n```c++\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int MATRIX_N = 5;\nconst int MATRIX_SIZE = 3;\n\nconst int MOVES[11][MATRIX_N][MATRIX_N] = {\n    {// ABDE\n        {1,1,0},\n        {1,1,0},\n        {0,0,0}\n    },{//ABC\n        {1,1,1},\n        {0,0,0},\n        {0,0,0}\n    },{//BCEF\n        {0,1,1},\n        {0,1,1},\n        {0,0,0}\n    },{//ADG\n        {1,0,0},\n        {1,0,0},\n        {1,0,0}\n    },{//BDEFH\n        {0,1,0},\n        {1,1,1},\n        {0,1,0}\n    },{//CFI\n        {0,0,1},\n        {0,0,1},\n        {0,0,1}\n    },{//DEGH\n        {0,0,0},\n        {1,1,0},\n        {1,1,0}\n    },{//GHI\n        {0,0,0},\n        {0,0,0},\n        {1,1,1}\n    },{//EFHI\n        {0,0,0},\n        {0,1,1},\n        {0,1,1}\n    }\n};\n\nstruct Matrix{\n    int s[MATRIX_N][MATRIX_N];\n\n    Matrix(){memset(s, 0, sizeof(s));}\n    int* operator [](int idx){return s[idx];}\n    Matrix (const int arr[MATRIX_N][MATRIX_N]){\n        for (int i = 0; i < MATRIX_SIZE; i++)\n            for (int j = 0; j < MATRIX_SIZE; j++)\n                s[i][j] = arr[i][j] * 3;\n    }\n    void read(){\n        for (int i = 0; i < MATRIX_SIZE; i++)\n            for (int j = 0; j < MATRIX_SIZE; j++) {\n                scanf(\"%d\", &s[i][j]);\n                s[i][j] %= 12;\n            }\n    }\n\n    friend Matrix operator + (Matrix &a, Matrix &b){\n        Matrix c;\n        for (int i = 0; i < MATRIX_SIZE; i++)\n            for (int j = 0; j < MATRIX_SIZE; j++)\n                c[i][j] = (a[i][j] + b[i][j]) % 12;\n        return c;\n    }\n\n    friend Matrix operator - (Matrix &a, Matrix &b){\n        Matrix c;\n        for (int i = 0; i < MATRIX_SIZE; i++)\n            for (int j = 0; j < MATRIX_SIZE; j++)\n                c[i][j] = (a[i][j] - b[i][j] + 12) % 12;\n        return c;\n    }\n\n    friend bool operator < (const Matrix &a, const Matrix &b){\n        for (int i = 0; i < MATRIX_SIZE; i++)\n            for (int j = 0; j < MATRIX_SIZE; j++)\n                if (a.s[i][j] != b.s[i][j]) return a.s[i][j] < b.s[i][j]; \n        return false;\n    }\n\n    bool is_target(){\n        for (int i = 0; i < MATRIX_SIZE; i++)\n            for (int j = 0; j < MATRIX_SIZE; j++)\n                if (s[i][j]) return false; \n        return true;\n    }\n\n    void print(){\n        puts(\"\");\n        for (int i = 0; i < MATRIX_SIZE; i++)\n            for (int j = 0; j < MATRIX_SIZE; j++)\n                printf(\"%d%c\", s[i][j], j==MATRIX_SIZE-1?'\\n':' ');\n    }\n} moves[11];\n\nmap <Matrix, int> vis;  // come from which move\n\nvoid print_path(Matrix cur){\n    if (vis[cur] == -1) return;\n    Matrix pre = cur - moves[vis[cur]];\n    print_path(pre);\n    printf(\"%d\", vis[cur] + 1);\n    //cur.print();\n    if (!cur.is_target()) putchar(' ');\n}\n\nvoid bfs(Matrix start){\n    queue <Matrix> Q;\n    vis[start] = -1;\n    for (Q.push(start); !Q.empty();){\n        Matrix cur = Q.front(); Q.pop();\n        if (cur.is_target()) {\n            print_path(cur);\n            return;\n        }\n        for (int i = 0; i < 9; i++){\n            Matrix nxt = cur + moves[i];\n            if (vis[nxt]) continue;\n            vis[nxt] = i;\n            Q.push(nxt);\n        }\n    }\n}\n\nint main(){\n    //freopen(\"in.txt\", \"r\", stdin);\n    for (int i = 0; i < 9; i++){\n        moves[i] = Matrix(MOVES[i]);\n    }\n    Matrix start;\n    start.read();\n    bfs(start);\n    return 0;\n}\n\n```\n\n",
        "postTime": 1555520993,
        "uid": 4741,
        "name": "cww970329",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1213 \u3010\u65f6\u949f\u3011"
    },
    {
        "content": "## \u76f4\u63a5\u6253\u8868\u5b58\u5165\u540e\uff0c\u8fdb\u884cdfs\u6c42\u89e3\n**\u4e0a\u4ee3\u7801\uff1a**\n```\n#include<iostream>\n#define M 9//3*3 \nusing namespace std;\n//\u6253\u8868\u5f0f\u5b58\u5165\uff0c\u76f8\u5f53\u4e8e\u79fb\u52a8\u7684\u65b9\u6cd5 \nint node[M][M]={\n{1,1,0,1,1,0,0,0,0},\n{1,1,1,0,0,0,0,0,0},\n{0,1,1,0,1,1,0,0,0},\n{1,0,0,1,0,0,1,0,0},\n{0,1,0,1,1,1,0,1,0},\n{0,0,1,0,0,1,0,0,1},\n{0,0,0,1,1,0,1,1,0},\n{0,0,0,0,0,0,1,1,1},\n{0,0,0,0,1,1,0,1,1}\n};\nint a[M],c[M],f[M];\nvoid dfs(int x);\nint main()\n{\n\tfor(int i=0;i<M;i++)\n\t{\n\t\tcin>>a[i];\n\t\ta[i]=a[i]/3%4;//\u75280-4\u6765\u8868\u793a12,3,6,9\u70b9 \n\t}//\n\tdfs(0);//\u5f00\u59cb\u6df1\u641c \n\treturn 0;\n}\nvoid dfs(int x)\n{\n\tbool ok=1;//\u7531\u4e8e\u5224\u65ad\u662f\u5426\u7b26\u5408\u6761\u4ef6:\u5168\u53d8\u4e3a12\u70b9 \n\tfor(int i=0;i<M;i++)f[i]=a[i];//\u590d\u5236 \n\tfor(int i=0;i<M;i++)\n\t\tfor(int j=0;j<M;j++)f[i]=(f[i]+node[j][i]*c[j])%4;//\u5faa\u73af\u8fdb\u884c\u53d6\u6570\uff0c\u5e76\u6a214\u53d6\u4f59 \n\tfor(int i=0;i<M;i++)\n\t\tif(f[i]>0){ok=0;break;} //\u53ea\u6709\u5168\u4e3a0\uff0c\u5373\u5168\u662f12\u70b9\u624d\u53ef\u4ee5 \n\tif(ok)//\u5982\u679c\u7b26\u5408\uff0c\u8fdb\u884c\u8f93\u51fa \n\t{\n\t\tfor(int i=0;i<M;i++)\n\t\t\tfor(int j=0;j<c[i];j++)cout<<i+1<<\" \";//\u6570\u7ec4\u4ece0\u5f00\u59cb\u7684\u539f\u56e0\u624d\u8981i+1 \n\t\tcout<<endl;\n\t\tx=9;//\u76f8\u5f53\u4e8ereturn; (\u8ba9\u5b83\u53d8\u4e3a\u8fb9\u754c\u6570) \n\t}\n\tif(x==M)return;//\u8fb9\u754c\u6761\u4ef6 \n\tfor(int i=0;i<4;i++){c[x]=i;dfs(x+1);} //\u7ee7\u7eed\u8fdb\u884c\u641c\u7d22(0-3\u5373\u53ef) \n}\n```\n",
        "postTime": 1555759343,
        "uid": 183603,
        "name": "SUNCHAOYI",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1213 \u3010\u65f6\u949f\u3011"
    },
    {
        "content": "## \u66b4\u529b\u641c\u7d22\n\ndfs\u679a\u4e3e9\u6b21\uff0c\u76f8\u5f53\u4e8e\u4e00\u4e2a\u4e5d\u91cd\u5faa\u73af\u3002\n\n\u56e0\u4e3a\u4f7f\u75284\u6b21\u540c\u4e00\u79cd\u8f6c\u6cd5\u4f1a\u8f6c\u56de\u539f\u6765\u7684\u72b6\u6001\uff0c\u6240\u4ee5\u4f7f\u7528\u6bcf\u4e00\u79cd\u8f6c\u6cd5\u6700\u591a\u79e9\u5e8f\u4f7f\u7528\u4e09\u6b21\uff0c\u4e5f\u5c31\u81ea\u7136\u4ece0\u679a\u4e3e\u52303\u3002\n```cpp\nvoid dfs(int cur)\n{\n\tif(cur>9)//9\u91cd\u5faa\u73af\u540e\n\t{\n\t\tif(check())//\u5224\u65ad\n\t\t\tfl=true;//\u8868\u793a\u5df2\u7ecf\u627e\u5230\u89e3\n\t\treturn;\n\t}\n\tfor(f[cur]=0;f[cur]<=3;f[cur]++)//\u679a\u4e3e\u4f7f\u7528\u6bcf\u4e00\u79cd\u8f6c\u6cd5\u7684\u6b21\u6570\n\t{\n\t\tdfs(cur+1);\n\t\tif(fl)\n\t\t\treturn;//\u6709\u89e3\u5219\u76f4\u63a5\u8df3\u51fa\n\t}\n}\n```\n\u8f6c\u6cd5\u90fd\u662f\u7ed9\u51fa\u6765\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u7edf\u8ba1\u6bcf\u4e2a\u65f6\u949f\u4f1a\u6536\u5230\u54ea\u4e9b\u64cd\u4f5c\u7684\u5f71\u54cd\u3002\n\n| A | B | C | D | E | F | G | H | I |\n| :----------- | :----------- | :----------- | :----------- | :----------- | :----------- | :----------- | :----------- | :----------- |\n| 124 | 1235 | 236 | 1457 | 13579 | 3569 | 478 | 5789 | 689 |\n\n\u4f8b\u5982\uff0c\u65f6\u949fA\u53ea\u4f1a\u6536\u52301\u30012\u30014\u7684\u5f71\u54cd\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u770b\u7ecf\u8fc71\u30012\u30014\u7684\u64cd\u4f5c\u540e\uff0c\u65f6\u949fA\u662f\u5426\u671d\u541112\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\n\n```cpp\n//a[]\u4e2d\u50a8\u5b58\u7684\u662f\u9700\u8981\u8f6c\u52a8\u7684\u6b21\u6570\nbool check()\n{\n\treturn ((f[1]+f[2]+f[4]          )%4==a[1]&&\\\n\t\t\t(f[1]+f[2]+f[3]+f[5]     )%4==a[2]&&\\\n\t\t\t(f[2]+f[3]+f[6]          )%4==a[3]&&\\\n\t\t\t(f[1]+f[4]+f[5]+f[7]     )%4==a[4]&&\\\n\t\t\t(f[1]+f[3]+f[5]+f[7]+f[9])%4==a[5]&&\\\n\t\t\t(f[3]+f[5]+f[6]+f[9]     )%4==a[6]&&\\\n\t\t\t(f[4]+f[7]+f[8]          )%4==a[7]&&\\\n\t\t\t(f[5]+f[7]+f[8]+f[9]     )%4==a[8]&&\\\n\t\t\t(f[6]+f[8]+f[9]          )%4==a[9]);\n}\n```\n[AC\u4ee3\u7801](https://user50130.blog.luogu.org/p1213-code) **33ms, 0.8MB**\n\n_\u6e29\u99a8\u63d0\u793a\uff1a\u4ee3\u7801\u4ec5\u4f9b\u53c2\u8003\uff0c\u8bf7\u52ff\u6284\u88ad_",
        "postTime": 1544617784,
        "uid": 50130,
        "name": "woshishei",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1213 \u3010\u65f6\u949f\u3011"
    },
    {
        "content": "# \u66b4\u529b\u78be\u6807\u7b97\uff01\n\n\u6807\u7b97\u5e94\u8be5\u662f**\u641c\u7d22**\uff0c~~\u4e5f\u4e0d\u96be\u60f3~~\uff0c\u4e0d\u8fc7\u672c\u849f\u84bb\u6df1\u5f97\u67d0\u5e26\u4f6c\n**~~[@\u8d1e\u767d\u53f6\u7fd4](https://www.luogu.org/space/show?uid=113884)~~**\n\u7684\u66b4\u529b\u5fc3\u5f97\uff08\u96fe\uff09\uff0c\u6240\u4ee5\u6253\u4e86\u4e2a\u66b4\u529b\u51fa\u6765\u3002\n\n\u5177\u4f53(\u66b4\u529b)\u601d\u8def\u697c\u4e0a\u5927\u4f6c\u90fd\u8bf4\u4e86\uff0c\u8fd9\u91cc\u5c31\u4e0d\u591a\u8bb2\u4e86\uff0c\u8be6\u89c1\u4ee3\u7801\u6ce8\u91ca\n\n```cpp\n#include<cstdio>\nusing namespace std;\n\nint Time[10];//\u7a7a\u95f4\u590d\u6742\u5ea6\u4e5f\u5f88\u5c0f233 \nint Ans[10];\n\nint main()\n{\n\tfor(int i=1;i<10;Time[i]/=3,i++)\n\tscanf(\"%d\",&Time[i]);//\u8bfb\u5165\u65f6\u5904\u7406 \n\t\n\t//\u5982\u679c\u4f60\u6253\u8fc7\u66b4\u529b\uff0c\u770b\u9898\u76ee\u5c31\u4e0d\u96be\u60f3\u5230 O(3^9 = 19683)\u590d\u6742\u5ea6\uff0c\u51e0\u4e4e\u7ea6\u7b49\u4e8e O(1)\n\t//\u53ea\u679a\u4e3e\u52303\u662f\u56e0\u4e3a\u8f6c4\u4e0b\u5c31\u7b49\u4e8e\u4e0d\u8f6c\uff0c\u5f88\u597d\u7406\u89e3 \n\tfor(Ans[1]=0;Ans[1]<4;Ans[1]++)\n\tfor(Ans[2]=0;Ans[2]<4;Ans[2]++)\n\tfor(Ans[3]=0;Ans[3]<4;Ans[3]++)\n\tfor(Ans[4]=0;Ans[4]<4;Ans[4]++)\n\tfor(Ans[5]=0;Ans[5]<4;Ans[5]++)//\u7801\u98ce\u4e0d\u597d\u8bf7\u89c1\u8c05 QOQ \n\tfor(Ans[6]=0;Ans[6]<4;Ans[6]++)\n\tfor(Ans[7]=0;Ans[7]<4;Ans[7]++)\n\tfor(Ans[8]=0;Ans[8]<4;Ans[8]++)\n\tfor(Ans[9]=0;Ans[9]<4;Ans[9]++)\n\t//\u5224\u65ad\u516c\u5f0f\uff1a(Ans[a]+Ans[b]+...+Ans[n])%4 == 4-Time[x]\n\tif( ( Ans[1]+Ans[2]+Ans[4] )%4               == 4-Time[1])\n\tif( ( Ans[1]+Ans[2]+Ans[3]+Ans[5] )%4        == 4-Time[2])\n\tif( ( Ans[6]+Ans[2]+Ans[3] )%4               == 4-Time[3])\n\tif( ( Ans[1]+Ans[4]+Ans[7]+Ans[5] )%4        == 4-Time[4]) \n\tif( ( Ans[3]+Ans[5]+Ans[9]+Ans[1]+Ans[7] )%4 == 4-Time[5])//\u5229\u7528\u516c\u5f0f\u5224\u65ad \n\tif( ( Ans[3]+Ans[5]+Ans[9]+Ans[6] )%4        == 4-Time[6])\n\tif( ( Ans[7]+Ans[4]+Ans[8] )%4               == 4-Time[7])\n\tif( ( Ans[8]+Ans[5]+Ans[9]+Ans[7] )%4        == 4-Time[8])\n\tif( ( Ans[6]+Ans[8]+Ans[9] )%4               == 4-Time[9])\n\t{\n\t\tfor(int i=1;i<10;i++)\n\t\tif(Ans[i]>0)//\u8fd9\u91cc\u6211\u5361\u4e86\u633a\u4e45(\u9605\u8bfb\u7406\u89e3\u5dee) \n\t\tfor(int j=1;j<=Ans[i];j++)//\u4e0d\u662f\u8f93\u51fa\u6bcf\u4e00\u79cd\u505a\u6cd5\u7684\u6b21\u6570 \n\t\tprintf(\"%d \",i);//\u800c\u662f\u8f93\u51fa\u5177\u4f53\u6b65\u9aa4 \n\t\t\n\t\treturn 0;\n\t}\n\t\n\treturn 0;\n}\n```\n\n~~\u5feb\u5f97\u4e00\u6279~~\n\n(\u672c\u4eba\u7b2c\u4e00\u7bc7\u9898\u89e3\uff0c\u6c42\u8fc7)",
        "postTime": 1568719996,
        "uid": 66321,
        "name": "\u8d1e\u767d\u9648\u745e\u797a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1213 \u3010\u65f6\u949f\u3011T:2019_9_17"
    },
    {
        "content": "~~\u8d21\u732eO(1)\u66b4\u529b~~\n\n\u679a\u4e3e\u4e5d\u79cd\u65b9\u6848\u5728\u6bcf\u79cd\u65b9\u6848\u4f7f\u75284\u6b21\u4ee5\u4e0b\u7684\u60c5\u51b5\u4e0b\u7b97\u51fa\u6240\u6709\u53ef\u4ee5\u7684\u60c5\u51b5\uff0c\u6392\u5e8f\u8f93\u51fa\u6700\u5c0f\u7684\n\n4^9=262144(\u624b\u7b97\u4e0d\u77e5\u9053\u5bf9\u4e0d\u5bf9\uff09\u80af\u5b9a\u6ca1\u6709\u65f6\u95f4\u95ee\u9898\uff0c\u7a7a\u95f4\u561b\u5c31\u66f4\u6ca1\u95ee\u9898\u4e86\u3002\n\n\u867d\u7136\u65f6\u95f4\u6ca1\u95ee\u9898\uff0c\u4f46\u662f\u65f6\u95f4\u8d8a\u5c11\u8d8a\u597d\u561b\uff0c\u89c2\u5bdf\u4e00\u4e0b\n\n- 1.ABDE\n- 2.ABC\n- 3.BCEF\n- 4.ADG\n- 5.BDEFH\n- 6.CFI\n- 7.DEGH\n- 8.GHI\n- 9.EFHI\n\n\u542bA\u7684\u53ea\u67091.2.4.\u6240\u4ee5\u679a\u4e3e\u5230\u7b2c4\u4e2a\u5c31\u53ef\u4ee5\u7279\u5224\u7b2c\u4e00\u4e2a\u65f6\u95f4\u8868\u53ef\u4e0d\u53ef\u4ee5\u4e86\n\n~~\u5176\u5b9e\u6211\u4eec\u5047\u5982\u628a\u5e8f\u5217\u53d8\u6362\u4e00\u4e0b\u8fd8\u53ef\u4ee5\u66f4\u7701\u65f6\u95f4\uff0c\u4f46\u6ca1\u5fc5\u8981\u4e86~~\n\ncalc\u5b8c\u6210\u540e\u8fdb\u5165\u8ba1\u7b97\u73af\u8282\uff0c\u6392\u5e8f\u4e00\u4e0bsum\u7136\u540e\u8f93\u51fa\u7b2c\u4e00\u4e2a\u5c31\u884c\u4e86\uff0c\u4e0b\u9762\u8bf7\u770b\u6211\u6bd4\u4e4b\u524d\u90a3\u51e0\u4f4d\u597d\u770b\u4e00\u70b9\u7684\u4ee3\u7801\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint a[10],cnt;\nstruct node{\n    int g[100];\n    int sum,cntss;//sum\u662f\u548c\uff0ccntss\u662fans[i].g[]\u524d\u591a\u5c11\u4e2a\u6570\u975e0\n}ans[10000];\nbool cmp(node a,node b){\n    return a.sum<b.sum;\n}\nvoid add(int aa,int b,int c,int d,int e,int f,int g,int h,int i){\n    int cnts=0;//\u8d4b\u521d\u503c\n    cnt++;\n    for(int j=1;j<=aa;j++)\n       ans[cnt].g[++cnts]=1;//em\u2026\u2026\u8fc7\u4e8e\u4e11\u964b\n    for(int j=1;j<=b;j++)\n       ans[cnt].g[++cnts]=2;//\u5168\u90e8\u538b\u5165\n    for(int j=1;j<=c;j++)\n       ans[cnt].g[++cnts]=3;\n    for(int j=1;j<=d;j++)\n       ans[cnt].g[++cnts]=4;\n    for(int j=1;j<=e;j++)\n       ans[cnt].g[++cnts]=5;\n    for(int j=1;j<=f;j++)\n       ans[cnt].g[++cnts]=6;\n    for(int j=1;j<=g;j++)\n       ans[cnt].g[++cnts]=7;\n    for(int j=1;j<=h;j++)\n       ans[cnt].g[++cnts]=8;\n    for(int j=1;j<=i;j++)\n       ans[cnt].g[++cnts]=9;\n    for(int j=1;j<=cnts;j++)\n       ans[cnt].sum+=ans[cnt].g[i];//\u76f8\u52a0\n    ans[cnt].cntss=cnts;//em\n}\nvoid print(){\n    for(int i=1;i<ans[1].cntss;i++)//\u53ca\u5176\u4e11\u964b\u7684\u8f93\u51fa\n       cout<<ans[1].g[i]<<\" \";\n    cout<<ans[1].g[ans[1].cntss];\n    exit(0);\n}\nvoid init(){\n    for(int i=1;i<=9;i++){cin>>a[i];a[i]=a[i]/3;a[i]=4-a[i];}\n    //\u5728\u8fd9\u4e9b\u64cd\u4f5c\u540ea[i]\u7684\u503c\u5c31\u662f\u540e\u9762\u548ci\u6709\u5173\u7684\u64cd\u4f5c\u7684\u548c%4\u7684\u503c\n}\nvoid solve(){\n    sort(ans+1,ans+cnt+1,cmp);\n    print();\n}\nvoid calc(){\n    for(int aa=0;aa<=3;aa++)\n       for(int b=0;b<=3;b++)\n          for(int c=0;c<=3;c++) \n             for(int d=0;d<=3;d++)\n                if((aa+b+d)%4==a[1])//\u7701\u53bb\u4e00\u4e9b\u590d\u6742\u5ea6\n                   for(int e=0;e<=3;e++)\n                      if((aa+b+c+e)%4==a[2])\n                         for(int f=0;f<=3;f++)\n                            if((b+c+f)%4==a[3])//\u53c8\u7701\u53bb\u4e00\u4e9b\u590d\u6742\u5ea6\n                                for(int g=0;g<=3;g++)\n                                    if((aa+d+e+g)%4==a[4])\n                                        for(int h=0;h<=3;h++)\n                                           if((d+g+h)%4==a[7])\n                                               for(int i=0;i<=3;i++)\n                                                  if((aa+c+e+g+i)%4==a[5]&&(c+e+f+i)%4==a[6]&&(e+g+h+i)%4==a[8]&&(f+h+i)%4==a[9])add(aa,b,c,d,e,f,g,h,i);//\u8fd9\u4e48\u4e11\n}\nint main(){\n    init();//\u8f93\u5165\n    calc();//\u66b4\u529b\n    solve();//\u6392\u5e8f\u8f93\u51fa\n    return 0;                        \n}\n```",
        "postTime": 1534735487,
        "uid": 48142,
        "name": "Ousmane_Dembele",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1213 \u3010\u65f6\u949f\u3011"
    },
    {
        "content": "\u840c\u65b0\u7b2c\u4e00\u6b21\u9898\u89e3\n\n\u8fd9\u9053\u9898\u662f\u4e00\u9053\u975e\u5e38\u88f8\u7684\u641c\u7d22\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<algorithm>\n#include<cmath>\n#include<cstring>\n#include<queue>\n#include<vector>\n#include<iostream>\nusing namespace std;\nconst int mv[10][10]={\n    {0,0,0,0,0,0,0,0,0,0},\n    {0,1,1,0,1,1,0,0,0,0},\n    {0,1,1,1,0,0,0,0,0,0},\n    {0,0,1,1,0,1,1,0,0,0},\n    {0,1,0,0,1,0,0,1,0,0},\n    {0,0,1,0,1,1,1,0,1,0},\n    {0,0,0,1,0,0,1,0,0,1},\n    {0,0,0,0,1,1,0,1,1,0},\n    {0,0,0,0,0,0,0,1,1,1},\n    {0,0,0,0,0,1,1,0,1,1},\n};\nint dos[100],ansd[100];\nint n,did[1000000],ansl;\nint done[10];\nint move(int k,int p){//\u7528\u4f4d\u8fd0\u7b97\u76f4\u63a5\u6539\u53d8\u72b6\u6001 \n    int t=k,t1,t2,t3;\n    for(int i=1;i<=9;i++){ \n        if(mv[p][i]){\n            int s=2*(9-i);\n            t1=t&(3<<s);\n            t2=((1<<s)+t1)&(3<<s);\n            t=t&(~(3<<s));\n            t=t2|t;\n        }\n    }\n    return t;\n}\nvoid dfs(int x,int k){//\u7565\u52a0\u526a\u679d\uff0c\u5982\u6709\u4e0d\u8db3\uff0c\u8bf7\u5927\u795e\u6307\u70b9 \n    if(k>ansl||k>40)return;\n    if(x==0){\n        if(ansl>k){\n            for(int i=1;i<=k;i++){\n                ansd[i]=dos[i];\n            }\n            ansl=k;\n        }\n        return;\n    }\n    if(did[x]==1)return;\n    did[x]=1;\n    for(int i=1;i<=9;i++){\n        if(done[i]<3){\n            done[i]++;\n            int t=x;\n            t=move(t,i);\n            dos[k+1]=i;\n            dfs(t,k+1);\n            done[i]--;\n        }\n    }\n}\nint main(){\n    int x=0;ansl=1<<20;\n    for(int i=1;i<=9;i++){\n        scanf(\"%d\",&x);\n        n=n<<2;n+=((x/3)%4);\n```\n}//\u65f6\u949f\u53ea\u67092^2\u79cd\u72b6\u6001\uff0c\u4e8e\u662f\u5fc3\u4e2d\u4e00\u559c,hahahaha\n    dfs(n,0);    \n\n    for(int i=1;i<=ansl;i++)printf(\"%d \",ansd[i]);\n\n}",
        "postTime": 1470188531,
        "uid": 10025,
        "name": "\u795e\u4e00\u822c\u7684\u4e16\u754c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1213 \u3010\u65f6\u949f\u3011"
    },
    {
        "content": "## \u679a\u4e3e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u4f18\u5316\uff083\u4e2a\u5faa\u73af\uff09\n\n\u6211\u4eec\u5148\u5c06\u8f93\u5165\u7684\u6bcf\u4e00\u4e2a\u6570\u5316\u4e3a\u5b83\u6700\u5c11\u8fd8\u8981\u51e0\u6b21\u53d8\u621012\u8bb0\u4e3ac[i]\uff08\u5982\uff1a9->1\uff09{\u516c\u5f0f\uff084-\uff08\u8f93\u5165\u7684\u6570/3\uff09}\uff1b\n\n\u7531\u9898\u610f\u53ef\u77e5\uff1a\n\n1\u949f\u53ef\u53d7\u5f00\u51731\uff0c2\uff0c4\u63a7\u5236\n\n2\u949f\u53ef\u53d7\u5f00\u51731\uff0c2\uff0c3\uff0c5\u63a7\u5236\n\n3\u949f\u53ef\u53d7\u5f00\u51732\uff0c3\uff0c6\u63a7\u5236\n\n4\u949f\u53ef\u53d7\u5f00\u51731\uff0c4\uff0c5\uff0c7\u63a7\u5236\n\n5\u949f\u53ef\u53d7\u5f00\u51731\uff0c3\uff0c5\uff0c7\uff0c9\u63a7\u5236\n\n6\u949f\u53ef\u53d7\u5f00\u51733\uff0c5\uff0c6\uff0c9\u63a7\u5236\n\n7\u949f\u53ef\u53d7\u5f00\u51734\uff0c7\uff0c8\u63a7\u5236\n\n8\u949f\u53ef\u53d7\u5f00\u51735\uff0c7\uff0c8\uff0c9\u63a7\u5236\n\n9\u949f\u53ef\u53d7\u5f00\u51734\uff0c8\uff0c9\u63a7\u5236\n\n\n\n------------\n\n\n\u7528p1-p9\u8868\u793a\u5f00\u5173\u4f7f\u7528\u7684\u6b21\u6570\uff0c\u6240\u4ee5\u5f53\n\n#### \uff08\u53ef\u4ee5\u5f71\u54cdi\u949f\u7684\u5f00\u5173\u7684\u603b\u4f7f\u7528\u6b21\u6570%4\uff09\u4e0ec[i]\u76f8\u7b49\u65f6\n\n\u5c31\u53ef\u4ee5\u5c06\u949fi\u79fb\u52a8\u523012\uff1b\n\n\u6211\u4eec\u53ef\u4ee5\u5217\u4e00\u4e2a\u8868\u6765\u8868\u793a\u53ef\u4ee5\u7684\u60c5\u51b5\n\n\n|\u53f7\u6570   |\u53ef\u4ee5\u7684\u60c5\u51b5|\n| :----------- | :----------- |\n|  1|c[1]==(p1+p2+p4)%4\n| 2 | c[2]==(p1+p2+p3+p5)%4   |\n|  3|  c[3]==(p3+p2+p6)%4  |\n| 4 |c[4]==(p1+p4+p5+p7)%4    |\n|  5|  c[5]==(p1+p3+p5+p7+p9)%4  |\n|  6| c[6]==(p3+p5+p6+p9)%4   |\n|  7| c[7]==(p8+p4+p7)%4   |\n|  8| c[8]==(p5+p7+p8+p9)%4   |\n|  9|   c[9]==(p6+p8+p9)%4 |\n\n\n------------\n\n\n# \u91cd\u70b9\n\n\u89c2\u5bdf\u53ef\u4ee5\u53d1\u73b0p4\u4e0ec[1]-p1-p2\u53ef\u80fd\u6709\u4e00\u4e9b\u5173\u7cfb\n\n\u8fd9\u4e9b\u5173\u7cfb\u53ef\u4ee5\u8868\u793a\u4e3ap4=order\uff08c[1]-p1-p2\uff09\n\n\u5176\u4e2dorder\u662f\u4e00\u4e2a\u51fd\u6570\n\nint order(int x)\n\n{\n\n   if(x>=0) return x%4;\n   \n\telse return (x+4*1024)%4;//\u5176\u4e2d1024\u53ef\u4ee5\u6362\u6210\u4efb\u610f\u4e00\u4e2a\u8f83\u5927\u7684\u6570\n}\n\n\n\n#### \u540c\u7406\n\np5=order(c[2]-p1-p2-p3);\n\np6=order(c[3]-p2-p3);\n                    \np7=order(c[4]-p1-p4-p5);\n                    \np8=order(c[7]-p4-p7);\n                    \np9=order(c[9]-p6-p8);\n\n### \u89e3\u91ca\n\norder\u51fd\u6570\u7684\u610f\u601d\u5c31\u662f\u8868\u793a\u6700\u5c11\u8fd8\u8981\u51e0\u6b21\u624d\u80fd\u523012\n\n\u5f53pl=order\uff08c[i]-pj-pk-p..\uff09\u3010\u8868\u793a\u67d0\u4e00\u79cd\u60c5\u51b5\u3011\u5927\u4e8e\u96f6\u65f6\u8bf4\u660e\u8fd8\u6ca1\u6709\u8d85\u8fc712\uff0cpl\u8fd8\u9700\uff08c[i]-pj-pk-p..\uff09%4\u6b21\u624d\u53ef\u4ee5\u523012\n\n\u5f53\u5b83\u5c0f\u4e8e\u96f6\u65f6\uff0c\u8868\u793a\u5b83\u4ee5\u8d85\u8fc712\u5df2\u7ecf\u7ed5\u4e86y\u5708\uff08y>=1\uff09,\u6240\u4ee5\u5b83\u9700\u8981\u52a0\u4e0a\u4e00\u4e2a4\u7684\u500d\u6570\u518d\u53bb\u6a21\u56db\uff0c\u56e0\u4e3a\u5047\u5982\u5f53\u5b83\u4e3a-1\u4e0e-5\u65f6\uff0c\u949f\u6307\u9488\u662f\u5728\u540c\u4e00\u4e2a\u5730\u65b9\uff08\u8fd4\u56de\u7684\u6570\u76f8\u7b49\uff09\n\n\u5176\u5b9e\n(x+\uff084* 1024\uff09)%4=(\uff084*n+x\uff09+(1024-n)*4)%4=\uff084*n+x\uff09%4+((1024-n)*4)%4==(4*n+x)%4\u3010\u56e0\u4e3a0<=4*n+x<4\uff0c\u6240\u4ee5\u624d\u8981\u4e00\u4e2a\u8f83\u5927\u7684\u6570,\u4e5f\u8bf4\u660e\u4e86\u4e3a\u4ec0\u4e48\u8981\u7528\u8fd9\u4e2a\u5f0f\u5b50\u3011\n\n#### \u6240\u4ee5\u53ea\u8981\u679a\u4e3ep1\uff0cp2\uff0cp3\u5c31\u53ef\u4ee5\u8868\u793a\u51fa\u6240\u6709\u7684\u60c5\u51b5\uff1b\n\n\n------------\n\n\n#### \u81f3\u4e8e\u5982\u4f55\u8f93\u51fa\uff1a\u5c31\u662f\u4ecep1-p9\u4f7f\u7528\u51e0\u6b21\u5c31\u8f93\u51e0\u4e2a\n\n\n------------\n\n\n\u4e0a\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint c[10],j;\nint order(int x)//\u51fd\u6570\u672c\u4f53\n{\n\tif(x>=0) return x%4;\n\telse return (x+4*1024)%4;\n}\nint main()\n{\n\tfor(int p=1;p<=9;p++)\n\t{\n\t\tcin>>j;\n\t\tc[p]=4-(j/3);//\u5f97c[1]\n\t}\n\tfor(int p1=0;p1<=3;p1++)//\u679a\u4e3e\n\t{\n\t\tfor(int p2=0;p2<=3;p2++)\n\t\t{\n\t\t\tfor(int p3=0;p3<=3;p3++)\n\t\t\t{\n\t\t\t\t\tint p4=order(c[1]-p1-p2);//\u5f97\u51fa\u5176\u4ed6\u6570\u636e\n\t\t\t\t\tint p5=order(c[2]-p1-p2-p3);\n\t\t\t\t\tint p6=order(c[3]-p2-p3);\n\t\t\t\t\tint p7=order(c[4]-p1-p4-p5);\n\t\t\t\t\tint p8=order(c[7]-p4-p7);\n\t\t\t\t\tint p9=order(c[9]-p6-p8);\n\t\t\t\tif(c[1]==(p1+p2+p4)%4&&c[2]==(p1+p2+p3+p5)%4&&c[3]==(p3+p2+p6)%4&&c[4]==(p1+p4+p5+p7)%4&&\n\t\t\t\tc[5]==(p1+p3+p5+p7+p9)%4&&c[6]==(p3+p5+p6+p9)%4&&c[7]==(p8+p4+p7)%4&&c[8]==(p5+p7+p8+p9)%4&&\n\t\t\t\tc[9]==(p6+p8+p9)%4)//\u5224\u65ad\n\t\t\t\t{\n\t\t\t\t\tfor(int p=1;p<=p1;p++) cout<<1<<' ';\n\t\t\t\t\tfor(int p=1;p<=p2;p++) cout<<2<<' ';\n\t\t\t\t\tfor(int p=1;p<=p3;p++) cout<<3<<' ';\n\t\t\t\t\tfor(int p=1;p<=p4;p++) cout<<4<<' ';\n\t\t\t\t\tfor(int p=1;p<=p5;p++) cout<<5<<' ';\n\t\t\t\t\tfor(int p=1;p<=p6;p++) cout<<6<<' ';\n\t\t\t\t\tfor(int p=1;p<=p7;p++) cout<<7<<' ';\n\t\t\t\t\tfor(int p=1;p<=p8;p++) cout<<8<<' ';\n\t\t\t\t\tfor(int p=1;p<=p9;p++) cout<<9<<' ';//\u8f93\u51fa\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n    return 0\uff1b\n}\n```\n\n                    ",
        "postTime": 1563111056,
        "uid": 199270,
        "name": "Y_B_Y",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1213 \u3010\u65f6\u949f\u3011"
    },
    {
        "content": " \u67e5\u770b\u5b8c\u6574\u9898\u89e3\u4ee3\u7801\u8bf7\u70b9\u8fd9\u91cc:[NOIPiao51](https://www.noipiao.cf/view/51)\n \n \u5c31\u662f\u6b63\u5e38\u7684\u66b4\u529bbfs\n```cpp\nvoid bfs(){\n    node tt;\n    for(int j=0;j<9;j++){\n        tt.state[j] = state[j];\n    }\n    tt.ans = \"\";\n    q.push(tt);\n    while(!q.empty()){\n        node now = q.front();\n        q.pop();\n        //if(vis.count(now.ans)) continue;\n        //cout << now.ans << endl;\n        if(checkOK(now.state)){\n            ans = now.ans;\n            return;\n        }\n        for(int i=0;i<9;i++){\n            node nextn = now;\n            for(int k=0;k<9;k++){\n                nextn.state[k] = (nextn.state[k] + movement[i][k]) % 5;\n                if(nextn.state[k] == 0) nextn.state[k] = 1;\n            }\n            nextn.ans += (char)('0'+i+1);\n            if(!vis[nextn.state[0]][nextn.state[1]][nextn.state[2]][nextn.state[3]][nextn.state[4]][nextn.state[5]][nextn.state[6]][nextn.state[7]][nextn.state[8]]){\n                q.push(nextn);\n                vis[nextn.state[0]][nextn.state[1]][nextn.state[2]][nextn.state[3]][nextn.state[4]][nextn.state[5]][nextn.state[6]][nextn.state[7]][nextn.state[8]] = true;\n            }\n        }\n    }\n}\n```\n \u4e0d\u8fc7\u8981\u6ce8\u610f\u7684\u662f\u8bb0\u5f55\u5df2\u7ecf\u51fa\u73b0\u8fc7\u7684\u60c5\u51b5\n \n \u5982\u679c\u5df2\u7ecf\u51fa\u73b0\u8fc7\u5c31\u4e0d\u5fc5\u5411\u4e0b\u7ee7\u7eed\u641c\u7d22\u4e86\uff0c\u5426\u5219\u641c\u7d22\u4e86\u4e5f\u662f\u65e0\u7528\u529f\n \n \u8fd9\u91cc\u7528\u4e00\u4e2a\u7b28\u4f46\u662f\u5f88\u6709\u6548\u5730\u65b9\u6cd5\uff0c9\u7ef4\u6570\u7ec4\u5206\u522b\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u72b6\u6001\n```cpp\nbool vis[5][5][5][5][5][5][5][5][5];\n```\n\u7136\u540e\u662f\u5b8c\u6574\u4ee3\u7801\n```cpp\n// luogu-judger-enable-o2\n#include <bits/stdc++.h>\nusing namespace std;\nstruct node{\n    int state[9];\n    string ans;\n};\nconst bool movement[9][9] = \n{\n// A B C D E F G H I\n// 1 2 3 4 5 6 7 8 9\n  {1,1,0,1,1,0,0,0,0},\n  {1,1,1,0,0,0,0,0,0},\n  {0,1,1,0,1,1,0,0,0},\n  {1,0,0,1,0,0,1,0,0},\n  {0,1,0,1,1,1,0,1,0},\n  {0,0,1,0,0,1,0,0,1},\n  {0,0,0,1,1,0,1,1,0},\n  {0,0,0,0,0,0,1,1,1},\n  {0,0,0,0,1,1,0,1,1}\n};\nint state[9];\ninline bool checkOK(int state[]){\n    for(int i=0;i<9;i++){\n        if(state[i] != 4) return false;\n    }\n    return true;\n}\nstring ans = \"\";\nbool vis[5][5][5][5][5][5][5][5][5];\nqueue<node> q;\nvoid bfs(){\n    node tt;\n    for(int j=0;j<9;j++){\n        tt.state[j] = state[j];\n    }\n    tt.ans = \"\";\n    q.push(tt);\n    while(!q.empty()){\n        node now = q.front();\n        q.pop();\n        //if(vis.count(now.ans)) continue;\n        //cout << now.ans << endl;\n        if(checkOK(now.state)){\n            ans = now.ans;\n            return;\n        }\n        for(int i=0;i<9;i++){\n            node nextn = now;\n            for(int k=0;k<9;k++){\n                nextn.state[k] = (nextn.state[k] + movement[i][k]) % 5;\n                if(nextn.state[k] == 0) nextn.state[k] = 1;\n            }\n            nextn.ans += (char)('0'+i+1);\n            if(!vis[nextn.state[0]][nextn.state[1]][nextn.state[2]][nextn.state[3]][nextn.state[4]][nextn.state[5]][nextn.state[6]][nextn.state[7]][nextn.state[8]]){\n                q.push(nextn);\n                vis[nextn.state[0]][nextn.state[1]][nextn.state[2]][nextn.state[3]][nextn.state[4]][nextn.state[5]][nextn.state[6]][nextn.state[7]][nextn.state[8]] = true;\n            }\n        }\n    }\n}\nint main(){\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    for(int i=0;i<9;i++){\n        int time;\n        //scanf(\"%d\",&time);\n        cin >> time;\n        state[i] = time / 3;\n    }\n    memset(vis,false,sizeof vis);\n    bfs();\n    for(int i=0;i<ans.size();i++){\n        if(i == 0){\n            cout << ans[i];\n        }else{\n            cout << \" \" << ans[i];\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1537517930,
        "uid": 83266,
        "name": "aRenBigFather",
        "ccfLevel": 0,
        "title": "[P1213] \u65f6\u949f"
    },
    {
        "content": "\u5199\u4e2a\u4e8c\u8fdb\u5236\u7684\u72b6\u6001\u8f6c\u79fb\n\n```cpp\nconst int c[10][6]={{},{4,8,7,5,4,0},{3,8,7,6,0,0},{4,7,6,4,3,0},{3,8,5,2,0,0},{5,7,5,4,3,1},{3,6,3,0},{4,5,4,2,1},{3,2,1,0},{4,4,3,1,0}};\n//9\u79cd\u8f6c\u79fb\uff0c[0]\u8868\u793a\u79fb\u52a8\u7684\u4e2a\u6570\uff0c[i](1<=i<=[0])\u8868\u793a\u5de6\u79fb\u4f4d\u6570\uff08\u8ba1\u7b97\u65b9\u6cd5\uff1a9-\u79fb\u52a8\u7684\u65f6\u949f\u7f16\u53f7\uff09\n//\u6bcf\u4e2a\u65f6\u949f\u7528\u4e24\u4f4d\u4e8c\u8fdb\u5236\u6570\u8868\u793a\uff0c\u6837\u4f8b\u662f111100101010100110\nfj(1,c[i][0]){\n                if(y&(1<<(c[i][j]*2)))//\u5982\u679c\u7b2c\u4e8c\u4f4d\u662f1\n        y^=(1<<(c[i][j]*2+1));//\u7b2c\u4e00\u4f4d\u53d6\u53cd\n                y^=(1<<(c[i][j]*2));//\u7b2c\u4e8c\u4f4d\u53d6\u53cd\n            }\n```\n00->01  01->10  10->11  11->00\n",
        "postTime": 1481426267,
        "uid": 12668,
        "name": "Minclxc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1213 \u3010\u65f6\u949f\u3011"
    },
    {
        "content": "\u697c\u4e0b\u51e0\u4f4d\u7684\u4ee3\u7801\u592a\u96be\u770b\u4e86\uff0c\u770b\u6211\u8fd9\u4e2a\u591a\u6e05\u723d\u3002\u3002\n\n\uff08\u5927\u4f6c\u4eec\u522b\u6253\u6211T-T\uff09\n\n\u663e\u800c\u6613\u89c1\uff0c\u5f53\u7136\u662f\u5e7f\u641c\u5566\uff01\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<string>\n#include<cstdlib>\n#include<cmath>    //\u4e00\u5768\u5934\u6587\u4ef6\nusing namespace std;\nint list[1000007]={0};\nstring data[1000000];\nint next[1000000]={0},cnt;\nstring s[10]={\"\",\"1245\",\"123\",\"2356\",\"147\",\"24568\",\"369\",\"4578\",\"789\",\"5689\"};  //\u6bd4\u90a3\u77e9\u9635\u543c\u770b\u591a\u4e86\u5bf9\u4e0d\u5bf9\u2014\u2014\u2014\u2014\u8fd9\u6bb5\u8868\u793a\u79fb\u52a8\u65b9\u6cd5\nstring a;\nstruct clo\n{\n    string sz,bz;\n}tim;    //\u7ed3\u6784\u4f53\nqueue<clo>q;\nint ok(string h)\n{\n    int sum=0;\n    for(int i=0;i<h.size();i++)sum=sum*33+h[i];\n    sum=abs(sum%1000007);\n    int u=list[sum];\n    while(u)\n    {\n        if(data[u]==h)return 0;\n        u=next[u];\n    }\n    data[++cnt]=h;\n    next[cnt]=list[sum];\n    list[sum]=cnt;\n    return 1;\n}   //\u6b64\u9898\u4e00\u5b9a\u8981\u53bb\u91cd\uff01\uff01\u4e0d\u8fc7\u6211\u89c9\u5f97\u54c8\u5e0c\u4ee3\u7801\u771f\u7684\u6bd4\u4e5d\u7ef4\u6570\u7ec4\u597d\u770b\u591a\u4e86\uff0c\u867d\u7136\u65f6\u95f4\u6162\u4e86\u4e00\u4e9b~\\(^o^)/\nint bfs()\n{\n    tim.sz=a;tim.bz=\"\";\n    q.push(tim);       //\u521d\u59cb\u5316+\u5165\u961f\n    while(q.size())\n    {\n        clo p=q.front();\n        q.pop();\n        for(int i=1;i<=9;i++)\n        {\n            tim=p;\n            for(int j=0;j<s[i].size();j++)\n            {\n                int k=(char)(tim.sz[s[i][j]-49]-48)+1;\n                if(k>4)k=1;\n                tim.sz[s[i][j]-49]=k+48;\n            }   //\u4fee\u6539\u65f6\u949f\u65f6\u95f4\n            tim.bz+=i+48;\n            if(tim.sz==\"444444444\")  //\u5224\u65ad\u662f\u5426\u8fbe\u5230\u76ee\u6807\n            {\n                for(int j=0;j<tim.bz.size();j++)cout<<tim.bz[j]<<\" \";\n                cout<<endl;            //\u8f93\u51fa\u7ed3\u679c\n                return 0;\n            }\n            if(ok(tim.sz))q.push(tim);    //\u5982\u679c\u6ca1\u6709\u91cd\u590d\uff0c\u5219\u5165\u961f\n        }\n    }\n}       //\u5e7f\u641c\u4ee3\u7801\nint main()\n{\n    for(int i=1;i<=3;i++)\n    {\n        for(int j=1;j<=3;j++)\n        {\n            int t;\n            cin>>t;       //\u8f93\u5165\n            t/=3;\n            a=a+(char)(t+48);     //\u5c06\u65f6\u949f\u77e9\u9635\u538b\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\n        }\n    }\n    bfs();      //\u5e7f\u641c\u5927\u6cd5\u543c\uff01\uff01\n    return 0;\n}\n```",
        "postTime": 1508396020,
        "uid": 14474,
        "name": "2016jzy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1213 \u3010\u65f6\u949f\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6709\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u6027\u8d28\uff0c\u65f6\u949f\u8f6c4\u6b21\u4f1a\u56de\u5230\u539f\u59cb\u72b6\u6001\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u679a\u4e3e0~3\u5c31\u53ef\u4ee5\u4e86\n\n\u7136\u540e\u5c31\u662f\u7206\u641c\uff0c\u901a\u8fc79^3\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u53ef\u4ee5AC\u6b64\u9898\n\n\u7136\u540e\u6211\u8fd8\u662f\u770b\u4e86\u4e00\u4e0b\u9898\u76ee\u7684\u6807\u7b7e\uff1a\u8fdb\u5236\n\n\u7136\u540e\u8fd9\u9053\u9898\u5c31\u53ef\u4ee5\u8f6c\u5316\u4e3a\u4e00\u4e2a\u56db\u8fdb\u5236\u7684\u95ee\u9898\uff0c\u5982\u679c\u8d85\u8fc74\u5c31\u81ea\u7136\u6ea2\u51fa\u5c31\u53ef\u4ee5\u4e86\n\n\u53ef\u4ee5\u81ea\u5df1\u5b9a\u4e49\u4e00\u4e2a\u5bb9\u5668\u4e5f\u53ef\u4ee5\u5b8f\u66ff\u6362\uff0c\u5c06\u4ee3\u7801\u679a\u4e3e\u90e8\u5206\u5168\u4e0d\u65ad\u7684\u6a21\u56db\u53d6\u4f59\n\n```cpp\n\u5355\u72ec\u7684\u4e00\u884c\u5305\u62ec\u4e00\u4e2a\u7528\u7a7a\u683c\u5206\u5f00\u7684\u5c06\u6240\u6709\u6307\u9488\u6307\u5411 1212 \u70b9\u7684\u6700\u77ed\u79fb\u52a8\u987a\u5e8f\u7684\u5217\u8868\u3002\n\n\u5982\u679c\u6709\u591a\u79cd\u65b9\u6848\uff0c\u8f93\u51fa\u90a3\u79cd\u4f7f\u5176\u8fde\u63a5\u8d77\u6765\u7684\u6570\u5b57\u6700\u5c0f\u7684\u65b9\u6848\u3002(\u4e3e\u4f8b\u6765\u8bf4 5 2 4 6 < 9 3 1 1 )\u3002\n```\n\u4f46\u662f\u6709\u4e0a\u9762\u7684\u90a3\u4e00\u884c\n\n\u6240\u4ee5\u6211\u4eec\u5728\u64cd\u4f5c\u7684\u540c\u65f6\u8fd8\u9700\u8981\u8bb0\u5f55\u6bcf\u6b21\u64cd\u4f5c\uff0c\u53ef\u4ee5\u901a\u8fc7vis\u6765\u770b\uff0c\n\u53ea\u7528\u5b9a\u4e49\u4e00\u4e2a\uff0c\u5982\u679c\u6570\u66f4\u5c0f\u5c31\u76f4\u63a5\u66f4\u65b0",
        "postTime": 1584354314,
        "uid": 219033,
        "name": "Snow_Dreams",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1213 \u3010[USACO1.4][IOI1994]\u65f6\u949f The Clocks\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u53ef\u4ee5\u628a\u4e8c\u7ef4\u5316\u4e00\u7ef4\uff0c\u7136\u540e\u5c31\u4f1a\u7b80\u5355\u5f88\u591a\u4e86\u3002\n\n\u6838\u5fc3\u601d\u8def\uff1a\u6c5f3\\*3\u7684\u4e8c\u7ef4\u6570\u7ec4\u6539\u62109\u7684\u4e00\u7ef4\u6570\u7ec4\uff0c\u5efa\u7acb\u4e00\u4e2a\u4e8c\u7ef4\u8868\uff0c\u5b58\u6bcf\u79cd\u64cd\u4f5c\u5f71\u54cd\u7684\u65f6\u949f\u3002\u7136\u540e\u5e7f\u641c\uff0c\u7528\u4e5d\u7ef4\u6570\u7ec4\u5224\u5f53\u524d\u72b6\u6001\u662f\u5426\u4e0e\u4e4b\u524d\u7684\u72b6\u6001\u76f8\u540c\uff08\u8fd9\u4e2a\u5f88\u91cd\u8981\uff09\u3002\n\n```cpp\n-#include <cstdio>-\n-#include <cstdlib>-\n-using namespace std;-\n-struct doby{-\n-    short a[10],mov[61],no;-\n-}q[262145];-\n-int h=0,t=1,move[10][10]={---move\u4e3a\u8bb0\u5f55\u6bcf\u79cd\u64cd\u4f5c\u5f71\u54cd\u7684\u65f6\u949f\n```\n-    0,0,0,0,0,0,0,0,0,0,-\n-    0,1,1,0,1,1,0,0,0,0,-\n\n-    0,1,1,1,0,0,0,0,0,0,-\n\n-    0,0,1,1,0,1,1,0,0,0,-\n\n-    0,1,0,0,1,0,0,1,0,0,-\n\n-    0,0,1,0,1,1,1,0,1,0,-\n\n-    0,0,0,1,0,0,1,0,0,1,-\n\n-    0,0,0,0,1,1,0,1,1,0,-\n\n-    0,0,0,0,0,0,0,1,1,1,-\n\n-    0,0,0,0,0,1,1,0,1,1,-\n\n```cpp\n-    },start[10];-\n-bool f[5][5][5][5][5][5][5][5][5];---\u5224\u91cd\u6570\u7ec4\n-int main()-\n-{-\n-    for(register int i=1;i<=9;i++)scanf(\"%d\",&start[i]),start[i]/=3;---\u628a\u6bcf\u4e2a\u65f6\u95f4\u00f73\uff0c3,6,9,12\u6539\u62101,2,3,4\uff0c\u4f1a\u8ba9\u6570\u7ec4\u53d8\u5c0f\n-    for(register int i=1;i<=9;i++)q[1].a[i]=start[i];\n-    f[start[1]][start[2]][start[3]][start[4]][start[5]][start[6]][start[7]][start[8]][start[9]]=1;---\u8bb0\u5f55\u5f53\u524d\u72b6\u6001\n-    q[1].no=0;-\n-    int p=1;-\n-            for(register int i=1;i<=9;i++)---\u5148\u5224\u65ad\u521d\u59cb\u72b6\u6001\u662f\u5426\u7b26\u5408\u8981\u6c42\n-            {-\n-                if(q[1].a[i]!=4)-\n-                {-\n-                    p=0;-\n-                    break;-\n-                }-\n-            }-\n-            if(p)return 0;-\n-    while(h<t)-\n-    {-\n    -    h++;-\n-        for(register int k=1;k<=9;k++)---\u4e5d\u79cd\u64cd\u4f5c\n-        {-\n-            t++;-\n-            register int p=0;-\n-            for(register int i=1;i<=9;i++)---\u64cd\u4f5c\u65f6\u949f\n-            {-\n-                q[t].a[i]=q[h].a[i]+move[k][i];-\n    -            if(q[t].a[i]==5)q[t].a[i]=1;-\n-            }-\n-            if(f[q[t].a[1]][q[t].a[2]][q[t].a[3]][q[t].a[4]][q[t].a[5]][q[t].a[6]][q[t].a[7]][q[t].a[8]][q[t].a[9]]==1)---\u5224\u91cd\uff0c\u5982\u679c\u5f53\u524d\u72b6\u6001\u4e0e\u4e4b\u524d\u72b6\u6001\u76f8\u540c\n-            {-\n-            t--;---\u5219\u65e0\u89c6\u672c\u6b21\u64cd\u4f5c\n-                continue;-\n-            }-\n-            else f[q[t].a[1]][q[t].a[2]][q[t].a[3]][q[t].a[4]][q[t].a[5]][q[t].a[6]][q[t].a[7]][q[t].a[8]][q[t].a[9]]=1;-\u8bb0\u5f55\u5f53\u524d\u72b6\u6001\n-            for(register int i=1;i<=q[h].no;i++)---\u8bb0\u6b65\u6570\n-            {-\n-                q[t].mov[i]=q[h].mov[i];-\n-            }-\n-            q[t].no=q[h].no+1;-\n-            q[t].mov[q[t].no]=k;-\n-            p=1;-\n-            for(register int i=1;i<=9;i++)---\u5224\u65ad\u662f\u5426\u7b26\u5408\u6807\u51c6\n-            {-\n-            if(q[t].a[i]!=4)-\n-                {-\n-                    p=0;-\n-                    break;-\n-                }-\n-            }-\n-            if(p)-\n-            {-\n-                for(register int i=1;i<=q[t].no;i++)-\n-                {-\n-                    printf(\"%d \",q[t].mov[i]);-\n-                }-\n-                return 0;-\n-            }-\n-        }-\n-    }-\n-    return 0;-\n-}-\n```",
        "postTime": 1508232336,
        "uid": 14381,
        "name": "1jia1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1213 \u3010\u65f6\u949f\u3011"
    },
    {
        "content": "\u96be\u770b\u7684\u5e7f\u641c\u3002\u3002\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\nusing namespace std;\nconst int mm=1<<19;\nconst int cc[9][9]= {{3,3,0,3,3,0,0,0,0},\n    {3,3,3,0,0,0,0,0,0},\n    {0,3,3,0,3,3,0,0,0},\n    {3,0,0,3,0,0,3,0,0},\n    {0,3,0,3,3,3,0,3,0},\n    {0,0,3,0,0,3,0,0,3},\n    {0,0,0,3,3,0,3,3,0},\n    {0,0,0,0,0,0,3,3,3},\n    {0,0,0,0,3,3,0,3,3}\n};\nbool v[4][4][4][4][4][4][4][4][4];\nstruct Node\n{\n    int status[9];\n    int step,path;\n};\nNode q[mm];\nint cl[9];\nint head,tail;\nbool bb=1;\nint ans;\nbool isEnd(int c[])\n{\n    for(int i=0; i<9; i++)\n        if(c[i]!=0)return 0;\n    return 1;\n}\nvoid printout(int i)\n{\n    if(q[i].path<0)return;\n    printout(q[i].path);\n    printf(\"%d \",q[i].step+1);\n}\nint main()\n{\n    //freopen(\".in\" ,\"r\",stdin)\n    //freopen(\".out\" ,\"w\",stdout)\n    for(int i=0; i<9; i++)\n    {\n        cin>>cl[i];\n        cl[i]%=12;\n    }\n    v[cl[0]/3][cl[1]/3][cl[2]/3][cl[3]/3][cl[4]/3][cl[5]/3][cl[6]/3][cl[7]/3][cl[8]/3]=1;\n    if(v[0][0][0][0][0][0][0][0][0])\n        return 0;\n    for(int i=0; i<9; i++)\n        q[0].status[i]=cl[i];\n    q[0].step=-1;\n    q[0].path=-1;\n    head=tail=0;\n    while(head<=tail&&tail<mm-10&&bb)\n    {\n        int tc[9];\n        for(int k=0; k<9; k++)\n        {\n            for(int i=0; i<9; i++)\n                tc[i]=(q[head].status[i]+cc[k][i])%12;\n            if(v[tc[0]/3][tc[1]/3][tc[2]/3][tc[3]/3][tc[4]/3][tc[5]/3][tc[6]/3][tc[7]/3][tc[8]/3])continue;\n            v[tc[0]/3][tc[1]/3][tc[2]/3][tc[3]/3][tc[4]/3][tc[5]/3][tc[6]/3][tc[7]/3][tc[8]/3]=1;\n            ++tail;\n            for(int i=0; i<9; i++)\n                q[tail].status[i]=tc[i];\n            q[tail].step=k;\n            q[tail].path=head;\n            if(v[0][0][0][0][0][0][0][0][0])\n            {\n                ans=tail;\n                bb=0;\n                break;\n            }\n        }\n        ++head;\n    }\n    printout(ans);\n    return 0;\n}\n```",
        "postTime": 1506828548,
        "uid": 28924,
        "name": "BallBall",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1213 \u3010\u65f6\u949f\u3011"
    },
    {
        "content": "```cpp\n#include<cstdio>\n#include<cstdlib>\n//#include<iostream>\n//#include<algorithm>\nusing namespace std;\n#define N 262145  //\u4e3a4^9 \u4e00\u4e2a\u79cd\u67094\u79cd\u72b6\u6001\uff0c\u67099\u4e2a\u949f\uff0c\u6240\u4ee5\u8fd9\u6574\u4e2a\u5e03\u5c40\u5c31\u67094^9\u4e2a\u72b6\u6001 \nconst int size[9] = {4, 3, 4, 3, 5, 3, 4, 3, 4};\nconst int dir[9][6] = {{0, 1, 3, 4}, {0, 1, 2}, {1, 2, 4, 5},\n                       {0, 3, 6}, {1, 3, 4, 5, 7}, {2, 5, 8},\n                       {3, 4, 6, 7}, {6, 7, 8}, {4, 5, 7, 8}};//\u4ece0\u52308 \u8868\u793a\u4ece\u7b2c1\u4e2a\u65f6\u949f\u5230\u7b2c9\u4e2a\u65f6\u949f \nint T,a[4][4],b[4][4],q[N],step[N],op[N][30];//op\u4e3a\u5e8f\u5217\u987a\u5e8f \nvoid bfs(int st)\n{\n    int i,j;\n    for(i=0;i<N;i++)//\u4e00\u5b9a\u8981\u4ece0\u5f00\u59cb\uff01\u56e0\u4e3a\u5168\u662f12\u65f6\u5c31\u662fstep[0]\u8981\u6267\u884c\u540e\u9762if(step[]==-1)\u540e\u9762\u7684\u64cd\u4f5c\u5fc5\u987b\u5148\u8981\u8d4b\u521d\u59cb\u503c\u4e3a-1 \n        step[i]=-1;//\u521d\u59cb\u5316\n    int l=1,r=0;\n    q[++r]=st;    step[st]=0;//step\u8868\u793a\u5230\u8fbe\u8fd9\u4e2a4\u8fdb\u5236\u8f6c\u6210\u7684\u5341\u8fdb\u5236\u7f16\u7801[]\u7684\u6b65\u9aa4\u6570 \n    while(l<=r)\n    {\n        int cur=q[l++];\n        int x=cur;\n        for(i=1;i<=3;i++)\n            for(j=1;j<=3;j++,x=x/4)//\u8fd9\u4e2a=\u8d4b\u503c\u4e00\u5b9a\u8981\u5199\u4e0a \n                a[i][j]=x%4;//\u5012\u53d9\u50a8\u5b58\u8f6c\u6210\u76844\u8fdb\u5236\u2014\u2014\u7ffb\u8bd1 \n        for(int k=0;k<9;k++)//\u679a\u4e3e\u64cd\u4f5c\n        {\n            for(i=1;i<=3;i++)\n                for(j=1;j<=3;j++)\n                    b[i][j]=a[i][j];//\u590d\u5236\u68cb\u76d8    \n            for(i=0;i<size[k];i++)//dir\u6570\u7ec4\u662f\u4ece0\u5f00\u59cb\u7684 \n            {\n                int x=dir[k][i]/3+1;\n                int y=dir[k][i]%3+1;//\u6ce8\u610f\u5b9e\u9645\u7684\u5e03\u5c40\u548cdir\u6570\u7ec4\u6709\u70b9\u5dee\u5f02\n                //\u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u8ba9\u5b9e\u9645\u5e03\u5c40\u4ece0\u5f00\u59cb\u6765\u4f7f\u5f97\u66f4\u52a0\u65b9\u4fbf \n                b[x][y]=(b[x][y]+1)%4;//\u4f7f\u5f97\u987a\u65f6\u9488\u65cb\u8f6c90\u5ea6\u800c\u4e14\u4e0d\u51fa\u8fd94\u79cd\u60c5\u51b5 \n            }\n            int code=0,m=1;\n            for(i=1;i<=3;i++)\n                for(j=1;j<=3;j++,m*=4)\n                    code+=b[i][j]*m;\n            if(step[code]==-1)//\u4e4b\u524d\u6ca1\u6709\u88ab\u904d\u5386\u8fc7\n            {\n                step[code]=step[cur]+1;//\u53ea\u591a\u4e86\u4e00\u6b65 \n                for(i=1;i<=step[cur];i++)//\u628a\u4e4b\u524d\u7684\u6240\u6709\u987a\u5e8f\u8d4b\u503c\uff0cstep\u5df2\u7ecf\u8bb0\u5f55\u4e86\u8fd9\u4e9b\u987a\u5e8f\u7684\u603b\u91cf\u6709\u591a\u5c11\u65b9\u4fbf\u679a\u4e3e\u8f6e\u6570\n                    op[code][i]=op[cur][i];//\u540e\u9762\u7684i\u8868\u793a\u8fd9\u4e2a\u987a\u5e8f\u662f\u7b2c\u51e0\u4e2a\n                op[code][step[cur]+1]=k+1;//\u5982\u679c\u540e\u9762\u5199i\uff0c\u90a3\u4e48\u4f1a\u9519\uff01\u56e0\u4e3ai\u5728\u6700\u540e\u8fd8\u52a0\u4e861\uff01\uff01\n                //\u5199k+1\u662f\u56e0\u4e3a\u9898\u76ee\u4e2d\u662f\u4ece1\u5f00\u59cb\u7684\uff0c\u800c\u6211\u4eec\u7684dir\u679a\u4e3e\u662f\u4ece0\u5f00\u59cb\u7684\n                q[++r]=code; \n                if(code==0)//\u8fd9\u4e2a\u4ee3\u8868\u5168\u90e8\u662f12\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u8fd9\u91cc\u662f\u628a12\u76844\u8fdb\u5236\u5b9a\u4e49\u4e3a0 \u6765\u65b9\u4fbf\u8ba1\u7b97\n                    return ;\n            } \n        }  \n    }\n}\nint main() \n{\n    int x;\n    for(int i=1,m=1;i<=3;i++)\n        for(int j=1;j<=3;j++,m*=4)//\u6ce8\u610f\u8fd9\u662f\u4e2a\u4e25\u683c\u7684\u8f6c4\u8fdb\u5236\u7684\u65b9\u6cd5 \n        {\n            scanf(\"%d\",&x);\n                T+=((x/3)%4)*m;//\u6211\u4eec\u53ef\u4ee5\u8fd9\u4e48\u64cd\u4f5c\u4f7f\u5f97\u5230\u8fd9\u4e2a\u72b6\u6001\u76844\u8fdb\u5236\u8868\u793a \n        }\n    bfs(T);\n    for(int i=1;i<=step[0];i++)//step[0]\u8868\u793a\u5230\u5168\u90e8\u662f12 \u7684\u6b65\u9aa4\u6570\n        printf(\"%d%c\",op[0][i],i==step[0]?'\\n':' ');//op\u524d\u9762\u662f\u6307\u7684\u7f16\u7801\uff0c\u540e\u9762\u662f\u6307\u7684\u987a\u5e8f\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u7684\u987a\u5e8f\u5750\u6807\u4ec0\u4e48\u7684 \n        return 0; \n    }\n```\n/\\*\u6211\u4eec\u5728\u8fd9\u91cc\u7528\u4e00\u4e2a4\u8fdb\u5236\u4e32\u6765\u8868\u793a312\u30013\u30016\u30019\u70b9\u7684\u60c5\u51b5\ndir\u4ee3\u8868\u8981\u8fdb\u884c\u64cd\u4f5c\u7684\u65f6\u949f\u7f16\u7801\n\nsize\u8868\u793a\u4e00\u6b21\u79fb\u52a8\u8981\u6d89\u53ca\u5230\u7684\u65f6\u949f\u4e2a\u6570\uff0c\u65b9\u4fbf\u4e4b\u540e\u679a\u4e3e\n\n\u7528step\u521d\u59cb\u503c\u4e3a-1 \u5e76\u4e4b\u540e\u5148\u5224\u65ad\u4ed6\u662f\u5426\u4e3a-1 \u518d\u8fdb\u884c\u66f4\u65b0\u64cd\u4f5c\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4e00\u5b9a\u7684\u8bb0\u5fc6\u5316\u641c\u7d22\n\n\u5e76\u4e14\u4fdd\u8bc1\u7b2c\u4e00\u6b21\u5230\u8fd9\u4e2a\u72b6\u6001\u65f6\u7684\u6b65\u9aa4\u6700\u5c0f\n\n\u6211\u4eec\u4ece\u5c0f\u7684\u5f00\u59cb\u5f80\u5927\u7684 \u679a\u4e3e\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u89e3\u51b3\u8f93\u51fa\u65f6\u7684\u8fde\u63a5\u6570\u6700\u5c0f\u7684\u95ee\u9898\u4e86 \\*/\n",
        "postTime": 1500023503,
        "uid": 24027,
        "name": "IG_TheShy_",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1213 \u3010\u65f6\u949f\u3011"
    },
    {
        "content": "\u76f4\u63a5\u901a\u8fc7\u4e8c\u8fdb\u5236\u7a77\u4e3e\u72b6\u6001\n\n\n\n```cpp\nconst a:array[1..9,1..9] of longint=\n((1,1,0,1,1,0,0,0,0),\n(1,1,1,0,0,0,0,0,0),\n(0,1,1,0,1,1,0,0,0),\n(1,0,0,1,0,0,1,0,0),\n(0,1,0,1,1,1,0,1,0),\n(0,0,1,0,0,1,0,0,1),\n(0,0,0,1,1,0,1,1,0),\n(0,0,0,0,0,0,1,1,1),\n(0,0,0,0,1,1,0,1,1));\nvar\n b,c,d,ans:array[1..9] of longint;\n e:array[0..27] of longint;\n i,min,s,xb,j,t,x,k:longint;\n f:boolean;\nbegin\n for i:=1 to 9 do read(b[i]);\n min:=1 shl 30;\n for j:=0 to 1 shl 19-1 do//\u8fde\u7eed\u4e24\u4f4d\u4e8c\u8fdb\u5236\u8868\u793a\u8be5\u64cd\u4f5c\u8fdb\u884c\u6b21\u6570,\u6b21\u6570\u4e3a0,1,2,3\uff0c\u56e0\u4e3a\u540c\u4e00\u4e2a\u64cd\u4f5c\u64cd\u4f5c4\u6b21\u4e0e\u4e0d\u64cd\u4f5c\u6548\u679c\u4e00\u6837\n begin\n  t:=j;\n  for i:=9 downto 1 do\n  begin\n   d[i]:=t xor (t shr 1 shl 1);\n   t:=t shr 1;\n   x:=t xor (t shr 1 shl 1);\n   d[i]:=x shl 1 or d[i];\n   t:=t shr 1\n  end;//\u8bfb\u53d6\n  c:=b;\n  f:=true;\n  for i:=1 to 9 do\n   for k:=1 to 9 do\n    inc(c[k],d[i]*3*a[i,k]);\n  for i:=1 to 9 do\n   if c[i] mod 12<>0 then\n   begin\n    f:=false;\n```\nbreak\n\n```cpp\n   end;\n  if f then\n  begin\n   s:=0;\n   for i:=1 to 9 do inc(s,d[i]);\n   if s<min then\n   begin\n    min:=s;\n    ans:=d\n   end\n  end\n end;\n for i:=1 to 9 do\n  for s:=1 to ans[i] do\n  begin\n   inc(xb);\n   e[xb]:=i\n  end;\n for i:=1 to xb-1 do write(e[i],' ');\n writeln(e[xb])\nend.\n\n```",
        "postTime": 1470727690,
        "uid": 19567,
        "name": "zx2003",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1213 \u3010\u65f6\u949f\u3011"
    }
]