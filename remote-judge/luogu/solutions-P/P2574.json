[
    {
        "content": "\u9996\u5148\uff0c\u7531\u4e8e\u662f\u533a\u95f4\u4fee\u6539\u548c\u533a\u95f4\u67e5\u8be2\uff0c\u5e76\u4e14\u6570\u636e\u8303\u56f4\u8fd8\u8fd9\u4e48\u5927\uff0c\u6240\u4ee5\u9700\u8981\u4f7f\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u3002\n\u8bfb\u5165\u7684\u6570\u90fd\u662f0\u62161\u4e14\u4fee\u6539\u64cd\u4f5c\u4e3a\u5f02\u62161\u7684\u8bdd\uff0c\u90a3\u4e48lazytag\u548c\u7ebf\u6bb5\u6811\u7684\u7ef4\u62a4\u5c31\u5f88\u597d\u60f3\u4e86\u3002\n### \u56e0\u4e3a0^1=1\uff0c1^1=0\uff0c\u6240\u4ee5\u672c\u9898\u5982\u679c\u5bf9\u540c\u4e00\u4e2a\u533a\u95f4\u8fde\u7eed\u5f02\u62161\u4e24\u6b21\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u548c\u6ca1\u6709\u5f02\u6216\u662f\u4e00\u6837\u7684\u3002\n\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u4e2d\u4e0d\u662f\u53f6\u5b50\u7ed3\u70b9\u7684\u8282\u70b9\uff0c\u5b83\u7684\u503c\u662f\u5b83\u7684\u5de6\u53f3\u5b50\u6811\u7684\u548c\uff0c\u4e5f\u5c31\u662f\u5b83\u5bf9\u5e94\u7684\u8fd9\u6bb5\u533a\u95f4\u91cc\u97621\u7684\u4e2a\u6570\uff08\u56e0\u4e3a\u53ea\u67090\u548c1\uff0c\u6240\u4ee5\u5b83\u7684\u503c\u662f\u51e0\u5c31\u6709\u51e0\u4e2a1\uff09\u3002\n### \u5982\u679c\u5bf9\u4e8e\u4e00\u6bb5\u533a\u95f4\uff0c\u957f\u5ea6\u4e3alen\uff0c\u6709n\u4e2a1\uff0c\u90a3\u4e48\u5c31\u6709len-n\u4e2a0\u3002\u76f8\u5e94\u5730\uff0c\u5bf9\u8fd9\u6bb5\u533a\u95f4\u5f02\u62161\u4e4b\u540e\uff0c\u5b83\u76841\u7684\u4e2a\u6570\u5c31\u53d8\u6210\u4e86len-n\u3002\n\u8fd9\u5c31\u662f\u8fd9\u4e2a\u9898\u7684\u57fa\u672c\u601d\u8def\u3002\u8fd8\u6709\u4e00\u4e9b\u9700\u8981\u6ce8\u610f\u7684\u70b9\uff1a\n\n\u8bfb\u5165\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u6309\u7167\u5b57\u7b26\u8bfb\u5165\uff0c\u5426\u5219\u5c31\u76f4\u63a5\u8bfb\u5165\u4e86\u6240\u6709\u7684\u6570\uff08\u56e0\u4e3a\u6ca1\u6709\u7a7a\u683c\uff09\u3002\n\n\u5982\u679c\u8bf4\u533a\u95f4\u957f\u5ea6\u5e76\u4e0d\u80fd\u6574\u9664\u4ee52\uff0c\u90a3\u4e48\u5c31\u628a\u9664\u4ee5\u4e8c\u5411\u4e0b\u53d6\u6574\u4e22\u7ed9\u5de6\u513f\u5b50\uff0c\u7136\u540e\u628a\u5269\u4e0b\u7684\u4e22\u7ed9\u53f3\u513f\u5b50\u3002\n\n\u4e0b\u9762\u8d34\u4ee3\u7801\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <string>\n#include <cmath>\n#include <algorithm>\n#include <cstdlib>\n#include <set>\n#include <map>\n#include <vector>\n#include <queue>\n#define maxx 300020\n#define ll long long\nusing namespace std;\nint n,m,p,l,r,a[maxx];\nchar s[maxx];\nll add[maxx<<2],sum[maxx<<2];\ninline void getup(int rt)//\u5411\u4e0a\u66f4\u65b0 \n{\n\tsum[rt]=sum[rt<<1]+sum[rt<<1|1];\n}\ninline void bulid(int l,int r,int rt)//\u5efa\u6811 \n{\n\tif(l==r)\n\t{\n\t\tsum[rt]=a[l];//\u8d4b\u503c \n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\tbulid(l,mid,rt<<1);\n\tbulid(mid+1,r,rt<<1|1);\n\tgetup(rt);\n}\ninline void pushdown(int rt,int len)//\u4f20\u9012tag \n{\n\tif(add[rt])\n\t{\n\t\tadd[rt<<1]^=1;\n\t\tadd[rt<<1|1]^=1; \n\t\tsum[rt<<1]=(len-(len>>1))-sum[rt<<1];\n\t\tsum[rt<<1|1]=(len>>1)-sum[rt<<1|1];\n\t\tadd[rt]=0;\n\t}\n}\ninline ll query(int L,int R,int l,int r,int rt)//\u5206\u533a\u95f4\u67e5\u8be2 \n{//LR\u662f\u8981\u67e5\u8be2\u7684\u533a\u95f4\uff0clr\u662f\u7ed9\u5b9a\u7684\u533a\u95f4\u3002update\u540c\u7406\u3002 \n\tif(l>=L&&r<=R)return sum[rt];\n\tpushdown(rt,r-l+1);\n\tint mid=(r+l)>>1;\n\tll tot=0;\n\tif(L<=mid) tot+=query(L,R,l,mid,rt<<1);\n    if(mid+1<=R) tot+=query(L,R,mid+1,r,rt<<1|1);\n    return tot;\n}\ninline void update(int L,int R,int l,int r,int rt)//\u66f4\u65b0 \n{\n\tpushdown(rt,r-l+1);\n\tif(l>=L&&r<=R)\n\t{\n\t\tadd[rt]^=1;\n\t\tsum[rt]=r-l+1-sum[rt];\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n    if(L<=mid) update(L,R,l,mid,rt<<1);\n    if(mid+1<=R) update(L,R,mid+1,r,rt<<1|1);  \n    getup(rt);\n} \nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++) cin>>s[i];//\u5148\u8bfb\u5165\u5b57\u7b26 \n\tfor(int i=1;i<=n;i++) a[i]=s[i]-'0';//\u518d\u8f6c\u6362\u6210\u6570\u5b57 \n\tbulid(1,n,1);\n\tfor(int i=1;i<=m;i++) \n\t{\n\t\tscanf(\"%d%d%d\",&p,&l,&r);\n\t\tif(p==0)\n\t\t\tupdate(l,r,1,n,1);\n\t\tif(p==1)\n\t\t\tcout<<query(l,r,1,n,1)<<endl; \n\t}\n\treturn 0;\n}\n```",
        "postTime": 1534895855,
        "uid": 47345,
        "name": "H2O3",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2574 \u3010XOR\u7684\u827a\u672f\u3011"
    },
    {
        "content": "# XOR\u7684\u827a\u672f\n# ~~\u9898\u76ee\u524d\u4e24\u4e2a\u5b57\u6bcd\u543c\u543c\u543c~~\n~~\u4e00\u9053\u7b80\u5355\u6a21\u677f\u9898~~\n## \u601d\u8def\n\u4e0e\u5e73\u5e38\u7684\u7ebf\u6bb5\u6811\u4e0d\u540c\u7684\u662f\uff0c\u8fd9\u6b21\u4e0d\u662f\u533a\u95f4\u52a0\u6cd5\uff0c\u533a\u95f4\u4e58\u6cd5\u7b49\u57fa\u7840\u64cd\u4f5c\uff0c\u800c\u662f\u795e\u5947\u7684\u53d6\u53cd\uff0c\u8ba9\u6211\u4e0d\u7531\u81ea\u4e3b\u7684\u60f3\u5230\u9898\u76eeXOR\uff08\u563b\u563b\u563bQAQ\uff09\n\u90a3\u6211\u4eec\u600e\u4e48\u529e\u5462\uff1f\uff1f\u53ea\u670901\u54e6\uff0c\u4e0d\u9519\uff01\uff01\n\n------------\n##### \u8bf7\u770b\u795e\u5947\u7684\u6817\u5b50\u4e00\u679a\n\u533a\u95f4\u4e2d\u53d6\u53cd\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6c42\u7684\u662f\u548c\uff0c\u4f24\u5bb3\u503c\u662f1\u7684\u4e2a\u6570\uff0c\u4e0d\u5c31\u662f\u548c\u561b\uff01\uff01\u54c8\u54c8\u54c8\uff01\uff01\uff01\n\n\u770b\uff0c10101\uff0c\u67093\u4e2a1\uff0c\u53d6\u53cd\u8fc7\u540e\uff0c01010\uff0c\u5c31\u53d8\u62102\u4e2a1\u5566\uff01\uff01\u5c31\u662f5-3=2\n\n\u5728\u770b\uff0c00110\uff0c\u67092\u4e2a1\uff0c\u53d6\u53cd\u8fc7\u540e\uff0c11001\uff0c\u5c31\u53d8\u62102\u4e2a1\u5566\uff01\uff01\u5c31\u662f5-2=3\n##### \u6240\u4ee5\u5462\uff0c\u533a\u95f4\u548c\uff0c\u6bcf\u6b21\u5728\u4e0b\u4f20\u61d2\u60f0\u6807\u8bb0\u7684\u65f6\u5019\u5462\uff0c\u5c31\u53d8\u6210\u533a\u95f4\u957f\u5ea6\u51cf\u53bb\u81ea\u8eab\u7684\u503c\u5c31\u9614\u4ee5\u5566\uff01\uff01\uff01\n\n\n------------\n\n#### \u68d2\u68d2\u54d2\uff01\uff01\n#### \u4e0a\u4ee3\u7801\u5427\uff01\uff01\uff01~~\u849f\u84bb\u4ee3\u7801\uff0c\u4e0d\u559c\u52ff\u55b7~~\n#### \u81f3\u4e8e\u4e00\u4e9b\u5934\u6587\u4ef6\u5b9a\u4e49\u4ec0\u4e48\u7684\u7701\u7565\u5566\uff0c\u7a7a\u95f4\u4e0d\u591f\uff0c\u563b\u563b\u563b\uff01\uff01\uff01\n```\nstruct node\n{\n\tint left;//\u533a\u95f4\u5de6\u7aef\u70b9\n\tint right;//\u53f3\u7aef\u70b9\n\tint w;//\u521d\u503c\n\tint v;//\u6807\u8bb0\n}tree[Maxn*2];\n\nvoid Build_Tree(int index,int l,int r)//\u795e\u5947\u5efa\u6811\uff0c\u8fde\u51fd\u6570\u540d\u90fd\u662f\u90a3\u4e48\u7684\u76f4\u63a5\u3002\u3002\u3002\n{\n\ttree[index].left=l;\n\ttree[index].right=r;\n\tif(l==r) {\n\t\ttree[index].w=a[l];\n\t\treturn;\n\t}\n\tint mid=(l+r)/2;\n\tBuild_Tree(index*2,l,mid);\n\tBuild_Tree(index*2+1,mid+1,r);\n\ttree[index].w=tree[index*2].w+tree[index*2+1].w;\n}//\u5efa\u6811\u5f88\u7b80\u5355\uff0c\u4e0d\u8bf4\u5566\uff01\uff01\n\nvoid Spread(int index)//\u4e0b\u4f20\u61d2\u60f0\u6807\u8bb0\n{\n\tif(tree[index].v) {\n\t\ttree[index*2].w=tree[index*2].right-tree[index*2].left+1-tree[index*2].w;//\u5982\u4e0a\u6240\u8bf4\u4fee\u6539\n\t\ttree[index*2+1].w=tree[index*2+1].right-tree[index*2+1].left+1-tree[index*2+1].w;\n\t\ttree[index*2].v^=1;//\u6807\u8bb0\u5f88\u7b80\u5355\uff0c\u5c31\u76f4\u63a5\u53d6\u53cd\u597d\u5566\uff01\uff01\n\t\ttree[index*2+1].v^=1;\n\t\ttree[index].v=0;//\u522b\u5fd8\u8bb0\u6e05\u7a7a\uff01\uff01\n\t}\n}\n\nint Query(int index,int l,int r)//\u81ea\u8ba4\u4e3a\u597d\u7406\u89e3\u7684\u67e5\u8be2\u3002\u3002\u3002\n{\n\tif(tree[index].left>=l&&tree[index].right<=r) return tree[index].w;//\u5982\u679c\u5b8c\u5168\u5305\u542b\uff0c\u8fd4\u56de\u533a\u95f4\n\tint mid=(tree[index].left+tree[index].right)/2;\n\tint ans=0;\n\tSpread(index);//\u4e0b\u4f20\u6807\u8bb0\n\tif(l<=mid) ans+=Query(index*2,l,r);//\u7ee7\u7eed\u5411\u4e0b\n\tif(r>mid) ans+=Query(index*2+1,l,r);\n\treturn ans;\n}\n\nvoid Change(int index,int l,int r)//\u4fee\u6539\u533a\u95f4\u5f88\u7b80\u5355\uff0c\u4e0d\u8bf4\u5566\uff01\uff01\uff01\n{\n\tif(tree[index].left>=l&&tree[index].right<=r) {\n\t\ttree[index].w=tree[index].right-tree[index].left+1-tree[index].w;\n\t\ttree[index].v^=1;\n\t\treturn;\n\t}\n\tint mid=(tree[index].left+tree[index].right)/2;\n\tSpread(index);\n\tif(l<=mid) Change(index*2,l,r);\n\tif(r>mid) Change(index*2+1,l,r);\n\ttree[index].w=tree[index*2].w+tree[index*2+1].w;\n}\n\nint main()\n{\n\tcin>>n>>m;\n\tfor(int i=1; i<=n; i++)\n\t\tscanf(\"%1d\",&a[i]);\n\tBuild_Tree(1,1,n);\n\tfor(int i=1; i<=m; i++) {\n\t\tcin>>z;\n\t\tif(z==0) {\n\t\t\tcin>>x>>y;\n\t\t\tChange(1,x,y);\t\n\t\t}\n\t\telse {\n\t\t\tcin>>x>>y;\n\t\t\tcout<<Query(1,x,y)<<endl;\t\n\t\t}\n\t}\n\treturn 0;\n}\n\n```\n##### \u6ca1\u5566\uff0c\u849f\u84bb\u671b\u5927\u5bb6\u591a\u591a\u652f\u6301\uff01\uff01\uff01\uff01",
        "postTime": 1537098272,
        "uid": 26800,
        "name": "Sshenyyyu",
        "ccfLevel": 0,
        "title": "P2574 XOR\u7684\u827a\u672f"
    },
    {
        "content": "\u50cf\u8fd9\u6837\u7684\u9898\u76ee\u4e00\u770b\u5c31\u77e5\u9053\u7528\u5206\u5757\u6bd4\u7ebf\u6bb5\u6811\u65b9\u4fbf\u5566\uff01\n\n\u6211\u4eec\u5c06\u6570\u7ec4\u5206\u4e3a$\\sqrt{n}$\u5757\uff0c\u6bcf\u5757\u5927\u5c0f\u4e3a$\\sqrt{n}$\u3002\n\n\u6211\u4eec\u8bb0\u5f55\u5982\u4e0b\u53d8\u91cf\n- \n1. $blk[i]$\uff0c\u8868\u793a$i$\u5c5e\u4e8e\u7b2c\u51e0\u4e2a\u5757\u3002\n2. $fst[i]$\uff0c\u8868\u793a\u7b2c$i$\u4e2a\u5757\u7684\u8d77\u59cb\u4f4d\u7f6e\u5728\u54ea\u3002\n3. $lst[i]$\uff0c\u8868\u793a\u7b2c$i$\u4e2a\u5757\u7684\u7ed3\u675f\u4f4d\u7f6e\u5728\u54ea\u3002\n4. $tag[i]$\uff0c\u8868\u793a\u7b2c$i$\u4e2a\u5757\u4e0a\u7684\u61d2\u6807\u8bb0\u3002\n5. $a[i]$\uff0c\u8868\u793a\u7b2c$i$\u76cf\u706f\u7684\u5f00\u5173\u60c5\u51b5\u3002\n6. $sum[i][j]$\uff0c\u8868\u793a\u7b2c$i$\u4e2a\u5757\u4e2d\u72b6\u6001\u4e3a$j$\u7684\u706f\u7684\u6570\u91cf\u3002\u5176\u4e2d$j\u2208${$0,1$}\n\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5206\u5757\u5566\uff01\n\n## \u9884\u5904\u7406\n\u5148\u9884\u5904\u7406\u51fa$blk,fst,lst$\u3002\u4ee4$h=\\sqrt{n}$\uff0c\u5219\u663e\u7136\u6709$blk[i]=\\lfloor\\frac{i}{h}\\rfloor+1,fst[i]=(i-1)\u00d7h+1,lst[i]=i\u00d7h$\uff0c\u6216\u8005\u53ef\u4ee5\u5148\u628a$blk$\u505a\u597d\uff0c\u518d\u7528\u4e00\u6b21\u5faa\u73af\u5224\u65ad\u4e00\u4e0b\u3002\u7279\u522b\u5730\uff0c$lst[blk[n]]=n$\uff0c\u4e5f\u5c31\u662f\u6700\u540e\u4e00\u4e2a\u5757\u7684\u7ed3\u675f\u4f4d\u7f6e\u662f$n$\u3002\n```cpp\nh=(int)sqrt(n);\nfor (int i=1;i<=n;i++) blk[i]=(i-1)/h+1;\nfor (int i=1;i<=n;i++)\n    if (blk[i]!=blk[i-1]) fst[blk[i]]=i,lst[blk[i-1]]=i-1;\nlst[blk[n]]=n;\n```\n\u7136\u540e\u8bfb\u5165$a$\u6570\u7ec4\u5e76\u4e14\u7b97\u597d$sum$\u6570\u7ec4\u3002\n```cpp\nfor (int i=1;i<=n;i++)\n{\n    char s=getchar();\n    while (s!='0'&&s!='1') s=getchar();\n    a[i]=s-'0';\n    sum[blk[i]][a[i]]++;\n}\n```\n## \u4fee\u6539\n\u6839\u636e\u5206\u5757\u7684\u5957\u8def\uff0c\u4fee\u6539\u64cd\u4f5c\u5e94\u8be5\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u5373\u4e24\u8fb9\u7684\u4fee\u6539\u548c\u4e2d\u95f4\u90e8\u5206\u7684\u4fee\u6539\u3002\u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0c\u5728\u6b64\u90e8\u5206\u548c\u7edf\u8ba1\u90e8\u5206\u4e2d\uff0c\u8bb0$l$\u6240\u5728\u5757\u4e3a$bl$\uff0c$r$\u6240\u5728\u5757\u4e3a$br$\u3002\n\n\u4e24\u8fb9\u7684\u4fee\u6539\u5f88\u7b80\u5355\uff0c\u4e24\u8fb9\u7684\u6570\u7684\u4e2a\u6570\u4e0d\u4f1a\u8d85\u8fc7$2\\sqrt{n}$\uff0c\u6240\u4ee5\u76f4\u63a5\u66b4\u529b\u4fee\u6539\u5373\u53ef\uff0c\u6ce8\u610f\u628a$a$\u4fee\u6539\u6389\u7684\u540c\u65f6\u4e0d\u8981\u5fd8\u8bb0\u4fee\u6539$sum$\u3002\n```cpp\nfor (int i=l;i<=lst[bl];i++) sum[bl][a[i]]--,a[i]^=1,sum[bl][a[i]]++;\nfor (int i=fst[br];i<=r;i++) sum[br][a[i]]--,a[i]^=1,sum[br][a[i]]++;\n```\n\u4e2d\u95f4\u7684\u4fee\u6539\u7531\u4e8e\u4f1a\u6709\u5f88\u591a\u6570\uff0c\u6240\u4ee5\u4e0d\u80fd\u66b4\u529b\u4fee\u6539\uff0c\u6240\u4ee5\u6211\u4eec\u9009\u62e9\u4f7f\u7528\u548c\u7ebf\u6bb5\u6811\u7c7b\u4f3c\u7684\u61d2\u6807\u8bb0$tag$\uff0c\u66b4\u529b\u7ed9\u4e2d\u95f4\u7684\u5757\u52a0\u4e0a\u61d2\u6807\u8bb0\u5373\u53ef\u3002\u7531\u4e8e\u6211\u4eec\u603b\u7684\u5757\u6570\u53ea\u6709$\\sqrt{n}$\u5757\uff0c\u6240\u4ee5\u66b4\u529b\u8df3\u5757\u6700\u591a\u53ea\u4f1a\u8df3$\\sqrt{n}$\u6b21\u3002\n```cpp\nfor (int i=bl+1;i<br;i++) tag[i]^=1;\n```\n\u6ce8\u610f\uff0c\u5982\u679c$bl=br$\u7684\u8bdd\uff0c\u90a3\u4e48\u6211\u4eec\u65e0\u6cd5\u533a\u5206\u4e3a\u4e24\u8fb9\u548c\u4e2d\u95f4\uff0c\u5c31\u76f4\u63a5$l$~$r$\u66b4\u529b\u4fee\u6539$a$\u548c$sum$\u5373\u53ef\u3002\u7531\u4e8e$bl=br$\uff0c\u5373\u5728\u540c\u4e00\u5757\u5185\uff0c\u6240\u4ee5\u9700\u8981\u4fee\u6539\u7684\u6570\u4e0d\u8d85\u8fc7$\\sqrt{n}$\u4e2a\u3002\n```cpp\nif (bl==br) \n{\n    for (int i=l;i<=r;i++) sum[bl][a[i]]--,a[i]^=1,sum[bl][a[i]]++;\n\treturn;\n}\n```\n#### \u4fee\u6539\u90e8\u5206\u4ee3\u7801\n```cpp\nvoid update(int l,int r)\n{\n    int bl=blk[l],br=blk[r];\n    if (bl==br) \n    {\n        for (int i=l;i<=r;i++) sum[bl][a[i]]--,a[i]^=1,sum[bl][a[i]]++;\n        return;\n    }\n    for (int i=bl+1;i<br;i++) tag[i]^=1;\n    for (int i=l;i<=lst[bl];i++) sum[bl][a[i]]--,a[i]^=1,sum[bl][a[i]]++;\n    for (int i=fst[br];i<=r;i++) sum[br][a[i]]--,a[i]^=1,sum[br][a[i]]++;\n}\n```\n\u7531\u4e8e\u6bcf\u79cd\u60c5\u51b5\u90fd\u4e0d\u4f1a\u8fdb\u884c\u8d85\u8fc7$\\sqrt{n}$\u6b21\u64cd\u4f5c\uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(\\sqrt{n})$\u3002\n\n## \u7edf\u8ba1\n\u7edf\u8ba1\u5176\u5b9e\u548c\u4fee\u6539\u7c7b\u4f3c\u3002\u6211\u4eec\u4ecd\u7136\u5206\u4e09\u79cd\u60c5\u51b5\u8ba8\u8bba\u3002\n\n\u4e24\u8fb9\u7684\u7edf\u8ba1\uff0c\u53ea\u8981\u8ba1\u7b97$a[i]$^$tag[bl]$\uff08\u5de6\u8fb9\uff09\u548c$a[i]$^$tag[br]$\uff08\u53f3\u8fb9\uff09\u662f\u5426\u4e3a1\u5373\u53ef\u3002\n```cpp\nfor (int i=l;i<=lst[bl];i++) if (a[i]^tag[bl]==1) ans++;\nfor (int i=fst[br];i<=r;i++) if (a[i]^tag[br]==1) ans++;\n```\n\n\n\u4e2d\u95f4\u7684\u7edf\u8ba1\uff0c\u7b2c$i$\u5757\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5c31\u662f$sum[i][tag[i]$^$1]$\u3002\u76f4\u63a5\u52a0\u4e0a\u5373\u53ef\u3002\n```cpp\nfor (int i=bl+1;i<br;i++) ans+=sum[i][1^tag[i]];\n```\n\u5982\u679c$bl=br$\uff0c\u5219\u4ece$l$~$r$\u5faa\u73af\uff0c\u6309\u7167\u4e24\u8fb9\u7edf\u8ba1\u7684\u65b9\u6cd5\u7edf\u8ba1\u7b54\u6848\u5373\u53ef\u3002\n```cpp\nif (bl==br) \n{\n    for (int i=l;i<=r;i++) if (a[i]^tag[bl]==1) ans++;\n    return ans;\n}\n```\n#### \u7edf\u8ba1\u90e8\u5206\u4ee3\u7801\n```cpp\nint query(int l,int r)\n{\n    int bl=blk[l],br=blk[r],ans=0;\n    if (bl==br) \n    {\n        for (int i=l;i<=r;i++) if (a[i]^tag[bl]==1) ans++;\n        return ans;\n    }\n    for (int i=bl+1;i<br;i++) ans+=sum[i][1^tag[i]];\n    for (int i=l;i<=lst[bl];i++) if (a[i]^tag[bl]==1) ans++;\n    for (int i=fst[br];i<=r;i++) if (a[i]^tag[br]==1) ans++;\n    return ans;\n}\n```\n\u540c\u7406\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(\\sqrt{n})$\n\n\u6709$m$\u6b21\u64cd\u4f5c\uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(m\\sqrt{n})$\u3002\n\n## \u603b\u7a0b\u5e8f\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=100010;\nint n,m,h,blk[N],fst[N],lst[N],tag[N],a[N],sum[N][2];\n\nvoid read(int &x) {scanf(\"%d\",&x);}\nvoid write(int x) {printf(\"%d\\n\",x);}\n\nvoid update(int l,int r)\n{\n\tint bl=blk[l],br=blk[r];\n\tif (bl==br) \n\t{\n\t\tfor (int i=l;i<=r;i++) sum[bl][a[i]]--,a[i]^=1,sum[bl][a[i]]++;\n\t\treturn;\n\t}\n\tfor (int i=bl+1;i<br;i++) tag[i]^=1;\n\tfor (int i=l;i<=lst[bl];i++) sum[bl][a[i]]--,a[i]^=1,sum[bl][a[i]]++;\n\tfor (int i=fst[br];i<=r;i++) sum[br][a[i]]--,a[i]^=1,sum[br][a[i]]++;\n}\n\nint query(int l,int r)\n{\n\tint bl=blk[l],br=blk[r],ans=0;\n\tif (bl==br) \n\t{\n\t\tfor (int i=l;i<=r;i++) if (a[i]^tag[bl]==1) ans++;\n\t\treturn ans;\n\t}\n\tfor (int i=bl+1;i<br;i++) ans+=sum[i][1^tag[i]];\n\tfor (int i=l;i<=lst[bl];i++) if (a[i]^tag[bl]==1) ans++;\n\tfor (int i=fst[br];i<=r;i++) if (a[i]^tag[br]==1) ans++;\n\treturn ans;\n}\n\nint main()\n{\n\tread(n);read(m);\n\th=(int)sqrt(n);\n\tfor (int i=1;i<=n;i++) blk[i]=(i-1)/h+1;\n\tfor (int i=1;i<=n;i++)\n\t\tif (blk[i]!=blk[i-1]) fst[blk[i]]=i,lst[blk[i-1]]=i-1;\n\tlst[blk[n]]=n;\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tchar s=getchar();\n\t\twhile (s!='0'&&s!='1') s=getchar();\n\t\ta[i]=s-'0';\n\t\tsum[blk[i]][a[i]]++;\n\t}\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tint opt,l,r;\n\t\tread(opt);read(l);read(r);\n\t\tif (opt==0) update(l,r);\n\t\tif (opt==1) write(query(l,r));\n\t}\n}\n```\n\n",
        "postTime": 1554966990,
        "uid": 29575,
        "name": "Holy_Push",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2574 \u3010XOR\u7684\u827a\u672f\u3011"
    },
    {
        "content": "\u5c31\u8fd9\u6c99\u96d5\u9898\u8fd8\u7528\u5f97\u4e0a\u7ebf\u6bb5\u6811/\u5206\u5757\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u538b\u4f4d\u5904\u7406\uff0c\u5c0632\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u538b\u5165\u4e00\u4e2a```unsigned int```\u4e2d\uff0c\u66b4\u529b\u4fee\u6539\uff0c\u5f00\u542fO2\u5373\u53efAC\u3002\n\n```\n#include<cstdio>\n#include<cctype>\n#include<utility>\n#define PII pair<int,int>\n\n//\u4ee5\u7a7a\u95f4\u6362\u65f6\u95f4\uff0c\u5feb\u901f\u7edf\u8ba1\u4e00\u4e2aunsigned int\u4e2d\u6709\u591a\u5c11\u4e2a1\nconst unsigned char popcount_tab[]=\n{\n    0,1,1,2,1,2,2,3,1,2,2,3,2,3,3,4,\n    1,2,2,3,2,3,3,4,2,3,3,4,3,4,4,5,\n    1,2,2,3,2,3,3,4,2,3,3,4,3,4,4,5,\n    2,3,3,4,3,4,4,5,3,4,4,5,4,5,5,6,\n    1,2,2,3,2,3,3,4,2,3,3,4,3,4,4,5,\n    2,3,3,4,3,4,4,5,3,4,4,5,4,5,5,6,\n    2,3,3,4,3,4,4,5,3,4,4,5,4,5,5,6,\n    3,4,4,5,4,5,5,6,4,5,5,6,5,6,6,7,\n    1,2,2,3,2,3,3,4,2,3,3,4,3,4,4,5,\n    2,3,3,4,3,4,4,5,3,4,4,5,4,5,5,6,\n    2,3,3,4,3,4,4,5,3,4,4,5,4,5,5,6,\n    3,4,4,5,4,5,5,6,4,5,5,6,5,6,6,7,\n    2,3,3,4,3,4,4,5,3,4,4,5,4,5,5,6,\n    3,4,4,5,4,5,5,6,4,5,5,6,5,6,6,7,\n    3,4,4,5,4,5,5,6,4,5,5,6,5,6,6,7,\n    4,5,5,6,5,6,6,7,5,6,6,7,6,7,7,8,\n};\n\n//\u628a\u6570\u5206\u62104\u6bb5\u8fdb\u884c\u7edf\u8ba1\nint popcount (register unsigned int x)\n{\n    return popcount_tab[(x>>0)&0xff]+popcount_tab[(x>>8)&0xff]+popcount_tab[(x>>16)&0xff]+popcount_tab[(x>>24)&0xff];\n}\n\nint Read()\n{\n\tint x=0;char c=getchar();\n\twhile(!isdigit(c))\n\t{\n\t\tc=getchar();\n\t}\n\twhile(isdigit(c))\n\t{\n\t\tx=x*10+(c^48);\n\t\tc=getchar();\n\t}\n\treturn x;\n}\n\nusing std::pair;\n\nunsigned int arr[10005];\n//\u5c06\u5e8f\u5217\u4e0b\u6807\u8f6c\u6362\u4e3a\u538b\u4f4d\u4e0b\u6807\u4e0e\u4f4d\u7f6e\nPII trans(int pos)\n{\n\treturn PII(pos/32,pos%32);\n}\n\n//\u6574\u4e2a\u5728\u4e00\u4e2a\u6570\u91cc\u7684\u90e8\u5206xor-1\uff0c\u96f6\u6563\u90e8\u5206\u6328\u4e2a\u5904\u7406\nvoid Rev(PII l,PII r)\n{\n\tif(l.first==r.first)\n\t\tfor(int i=l.second;i<=r.second;++i)\n\t\t\tarr[l.first]^=(1<<i);\n\telse\n\t{\n\t\tfor(int i=l.first+1;i!=r.first;++i)\n\t\t\tarr[i]^=-1;\n\t\tfor(int i=l.second;i<32;++i)\n\t\t\tarr[l.first]^=(1<<i);\n\t\tfor(int i=0;i<=r.second;++i)\n\t\t\tarr[r.first]^=(1<<i);\n\t}\n}\n\n//\u540c\u4e0a\nint Query(PII l,PII r)\n{\n\tint res=0;\n\tif(l.first==r.first)\n\t\tfor(int i=l.second;i<=r.second;++i)\n\t\t\tres+=(arr[l.first]>>i)&1;\n\telse\n\t{\n\t\tfor(int i=l.first+1;i!=r.first;++i)\n\t\t\tres+=popcount(arr[i]);\n\t\tfor(int i=l.second;i<32;++i)\n\t\t\tres+=(arr[l.first]>>i)&1;\n\t\tfor(int i=0;i<=r.second;++i)\n\t\t\tres+=(arr[r.first]>>i)&1;\n\t}\n\treturn res;\n}\n\nchar str[200005];\n\nint main()\n{\n\tint n=Read(),m=Read(),opt;\n\tscanf(\"%s\",str+1);\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tif(str[i]-'0'==1)\n\t\t{\n\t\t\tPII pos=trans(i);\n\t\t\tarr[pos.first]+=1<<pos.second;\n\t\t}\n\t}\n\twhile(m--)\n\t{\n\t\topt=Read();\n\t\tPII l=trans(Read());\n\t\tPII r=trans(Read());\n\t\tif(opt==0)\n\t\t{\n\t\t\tRev(l,r);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprintf(\"%d\\n\",Query(l,r));\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1538638391,
        "uid": 53374,
        "name": "SuperJvRuo",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2574 \u3010XOR\u7684\u827a\u672f\u3011"
    },
    {
        "content": "# P2574\n[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P2574)\n## \u9898\u610f\u7b80\u8ff0\n- \u7ed9\u4e00\u4e2a\u957f\u5ea6\u4e3an\u768401\u4e32\u3002\n- \u4f60\u9700\u8981\u8fdb\u884c\u4e24\u79cd\u64cd\u4f5c\u30021.\u5bf9\u533a\u95f4$[l,r]$\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6570\u8fdb\u884c\u975e\u8fd0\u7b97\uff08\u75310\u53d8\u4e3a1,1\u53d8\u4e3a0\uff09\u30022.\u8be2\u95ee\u533a\u95f4$[l,r]$\u4e2d1\u7684\u6570\u76ee\n- $2\u2264n,m\u22642\u00d710^5,0\u2264op\u22641,1\u2264l\u2264r\u2264n$\n\n## \u9898\u76ee\u5206\u6790\n  \u770b\u5230 $2\u2264n,m\u22642\u00d710^5$ \u5c31\u53ef\u4ee5\u77e5\u9053\u6bcf\u4e00\u6b21\u7684\u4fee\u6539\u548c\u67e5\u8be2\u64cd\u4f5c\u590d\u6742\u5ea6\u90fd\u662f $n \\log n$ \uff0c\u90a3\u4e48\u8fd9\u5c31\u662f\u4e00\u9053\u533a\u95f4\u4fee\u6539+\u533a\u95f4\u67e5\u8be2\u7684\u7ebf\u6bb5\u6811\u4e86\u3002\n  \n### \u5efa\u6811\n\u8fd9\u662f\u4e00\u4e2a01\u4e32\uff0c\u6240\u4ee5\u4e00\u4e2a\u533a\u95f4\u4e2d1\u7684\u6570\u76ee\u5c31\u662f\u8fd9\u4e2a\u533a\u95f4\u548c\u3002\u6240\u4ee5\u6211\u4eec\u7684\u7ebf\u6bb5\u6811\u53ef\u4ee5\u7ef4\u62a44\u4e2a\u503c\uff1a\u5de6\u7aef\u70b9\u3001\u53f3\u7aef\u70b9\u3001\u533a\u95f4\u548c\u3001\u4e0b\u4f20\u6807\u8bb0\u3002\u5c31\u662f\u8fd9\u4e2a\u4e9a\u5b50\uff1a\n\n```cpp\nstruct Tree{\n\tint le,r;\n\tll sum,la2;\n\t#define le(x) a[x].le\n\t#define r(x) a[x].r\n\t#define sum(x) a[x].sum\n\t#define la2(x) a[x].la2 \n}a[N*4];\n```\n\u5efa\u6811\u561b\u5c31\u6309\u6a21\u677f\u5efa\u5c31\u597d\u4e86\n\n```cpp\nvoid build(int p,int le,int r){\n\tle(p)=le,r(p)=r;\n\tif(le==r){\n\t\tsum(p)=b[le];\n\t\treturn ;\n\t}\n\tint mid=(le+r)/2;\n\tbuild(p*2,le,mid);\n\tbuild(p*2+1,mid+1,r);\n\tsum(p)=sum(p*2)+sum(p*2+1); \n}\n```\n\n### \u4fee\u6539\n\n\u628a\u533a\u95f4\u91cc\u7684\u6bcf\u4e00\u4e2a\u6570\u75310\u53d8\u62101\uff0c1\u53d8\u62100\uff0c\u6211\u4eec\u5c31\u53d1\u73b0\uff0c\u539f\u6765\u4e00\u4e2a\u957f\u5ea6\u4e3aL\u7684\u533a\u95f4\u91cc\u6709a\u4e2a1\uff0c\u64cd\u4f5c\u540e\u5c31\u6709L-a\u4e2a1\u3002\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u7528\u533a\u95f4\u957f\u5ea6 r-le+1 \u51cf\u6389\u539f\u6765\u7684\u533a\u95f4\u548c sum \u5c31\u662f\u65b0\u7684 sum\u3002\n\n\u81f3\u4e8e\u4e0b\u4f20\u6807\u8bb0\u5c31\u66f4\u7b80\u5355\u4e86\u3002\u5bf9\u4e8e1\u4e2a\u70b9\uff0c\u5b83\u53ea\u6709\u4e24\u79cd\u72b6\u6001\uff1a\u8981\u4fee\u6539\u548c\u4e0d\u8981\u4fee\u6539\uff0c\u6240\u4ee5\u53ea\u8981\u7528\u4e00\u4e2a\u5e03\u5c14\u53d8\u91cf\u5b58\u5b83\u8981\u4e0d\u8981\u4fee\u6539\u5c31\u53ef\u4ee5\u4e86\uff08\u5f53\u7136int\u4e5f\u53ef\u4ee5\uff09\n\n\u7efc\u4e0a\uff0c\u4fee\u6539\u4ee3\u7801\u5e94\u8be5\u662f\uff1a\n\n```cpp\nvoid spread(int p){\t\n\tif(!la2(p)) return;\n\tsum(p*2)=r(p*2)-le(p*2)+1-sum(p*2);//\u533a\u95f4\u957f\u5ea6\u51cf\u6389\u539f\u533a\u95f4\u548c\uff0c\u4e0b\u540c \n\tsum(p*2+1)=r(p*2+1)-le(p*2+1)+1-sum(p*2+1);\n\tla2(p*2)=!la2(p*2);la2(p*2+1)=!la2(p*2+1);//1\u4ee3\u8868\u8981\u64cd\u4f5c\uff0c0\u4ee3\u8868\u4e0d\u8981\u64cd\u4f5c\uff0c\u4e24\u79cd\u64cd\u4f5c\u7684\u8f6c\u6362\u53ea\u8981 ! \u4e00\u4e0b\u5c31\u597d\u4e86 \n\tla2(p)=0;//\u6e05\u9664\u6807\u8bb0 \n}\nvoid change(int p,int le,int r){\n\tif(le<=le(p)&&r>=r(p)){\n\t\tsum(p)=r(p)-le(p)+1-sum(p);//\u533a\u95f4\u957f\u5ea6\u51cf\u6389\u539f\u533a\u95f4\u548c\n\t\tla2(p)=!la2(p);\n\t\treturn;\n\t}\n\tspread(p);\n\tint mid=(le(p)+r(p))/2;\n\tif(mid>=le) change(p*2,le,r);//\u5904\u7406\u5de6\u53f3 \n\tif(mid<r) change(p*2+1,le,r);\n\tsum(p)=sum(p*2+1)+sum(2*p);\n}\n```\n### \u8be2\u95ee\n\n\u6309\u6a21\u677f\u6253\u5c31\u597d\u4e86\uff0c\u4ece\u4e0b\u5230\u4e0a\u7d2f\u8ba1\u7b54\u6848\n\n```cpp\nint ask(int p,int le,int r){\n\tint ans=0;\n\tif(le(p)>=le&&r(p)<=r){\n\t\treturn sum(p); \t\n\t}\n\tspread(p);\n\tint mid=(le(p)+r(p))/2;\n\tif(mid>=le) ans=ans+ask(p*2,le,r);\n\tif(mid<r) ans=ans+ask(p*2+1,le,r);\n\treturn ans;\n}\n```\n\n## \u5b8c\u6574\u4ee3\u7801\n\n ```cpp\n#include<bits/stdc++.h>\n#define INF 0x3f3f3f3f\n#define N 200002\n#define ll long long\nusing namespace std;\nint n,m;\nint b[N];\nstruct Tree{\n\tint le,r;\n\tll sum,la2;\n\t#define le(x) a[x].le\n\t#define r(x) a[x].r\n\t#define sum(x) a[x].sum\n\t#define la2(x) a[x].la2 \n}a[N*4];\nvoid build(int p,int le,int r){\n\tle(p)=le,r(p)=r;\n\tif(le==r){\n\t\tsum(p)=b[le];\n\t\treturn ;\n\t}\n\tint mid=(le+r)/2;\n\tbuild(p*2,le,mid);\n\tbuild(p*2+1,mid+1,r);\n\tsum(p)=sum(p*2)+sum(p*2+1); \n}\nvoid spread(int p){\t\n\tif(!la2(p)) return;\n\tsum(p*2)=r(p*2)-le(p*2)+1-sum(p*2);//\u533a\u95f4\u957f\u5ea6\u51cf\u6389\u539f\u533a\u95f4\u548c\uff0c\u4e0b\u540c \n\tsum(p*2+1)=r(p*2+1)-le(p*2+1)+1-sum(p*2+1);\n\tla2(p*2)=!la2(p*2);la2(p*2+1)=!la2(p*2+1);//1\u4ee3\u8868\u8981\u64cd\u4f5c\uff0c0\u4ee3\u8868\u4e0d\u8981\u64cd\u4f5c\uff0c\u4e24\u79cd\u64cd\u4f5c\u7684\u8f6c\u6362\u53ea\u8981 ! \u4e00\u4e0b\u5c31\u597d\u4e86 \n\tla2(p)=0;//\u6e05\u9664\u6807\u8bb0 \n}\nvoid change(int p,int le,int r){\n\tif(le<=le(p)&&r>=r(p)){\n\t\tsum(p)=r(p)-le(p)+1-sum(p);//\u533a\u95f4\u957f\u5ea6\u51cf\u6389\u539f\u533a\u95f4\u548c\n\t\tla2(p)=!la2(p);\n\t\treturn;\n\t}\n\tspread(p);\n\tint mid=(le(p)+r(p))/2;\n\tif(mid>=le) change(p*2,le,r);//\u5904\u7406\u5de6\u53f3 \n\tif(mid<r) change(p*2+1,le,r);\n\tsum(p)=sum(p*2+1)+sum(2*p);\n}\nint ask(int p,int le,int r){\n\tint ans=0;\n\tif(le(p)>=le&&r(p)<=r){\n\t\treturn sum(p); \t\n\t}\n\tspread(p);\n\tint mid=(le(p)+r(p))/2;\n\tif(mid>=le) ans=ans+ask(p*2,le,r);\n\tif(mid<r) ans=ans+ask(p*2+1,le,r);\n\treturn ans;\n}\nvoid read(int &x) {\n    int f = 1; x = 0;\n    char ch = getchar();\n    while (ch < '0' || ch > '9')   {if (ch == '-') f = -1; ch = getchar();}\n    while (ch >= '0' && ch <= '9') {x = x * 10 + ch - '0'; ch = getchar();}\n    x *= f;\n}\nint main()\n{\n    cin>>n>>m;\n    for(int i=1;i<=n;i++){\n    \tchar c;\n    \tcin>>c;\n    \tb[i]=c-'0';//b\u5b58\u539f\u4e32 \n\t}\n\tbuild(1,1,n);\n\tfor(int i=1;i<=m;i++){\n\t\tint c,x,y,k;\n\t\tread(c),read(x),read(y);\n\t\tswitch(c){\n\t\t\tcase 0:change(1,x,y);break;\n\t\t\tcase 1:printf(\"%d\\n\",ask(1,x,y));break;\n\t\t}\n\t}\n\treturn 0;\n}\n\t\n\n```\n\n~~**\u5199\u9898\u89e3\u4e0d\u6613\uff0c\u70b9\u4e2a\u8d5e\u5457**~~\n\n",
        "postTime": 1581818639,
        "uid": 235658,
        "name": "llzzxx712",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2574 \u3010XOR\u7684\u827a\u672f\u3011"
    },
    {
        "content": "/\\*\u5c06lazy\u6570\u7ec4\u6539\u4e00\u4e0b\uff0c\u6807\u5fd7\u53d6\u53cd\u3002\\*/\n\n \n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<string>\n#define lson root<<1,l,mid\n#define rson root<<1|1,mid+1,r\n#define N 200005\nusing namespace std;\nstring a;\nint n,m,p,l,r;\nint num[N],tree[N<<2],lazy[N<<2];\nvoid push(int root)\n{\n    tree[root]=tree[root<<1]+tree[root<<1|1];\n}\nvoid pushdown(int root,int len)\n{\n    if(lazy[root])\n    {\n        lazy[root<<1]^=1;    //\u6807\u5fd7\u4ee5\u5f53\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u8981\u53d6\u53cd \n        lazy[root<<1|1]^=1;\n        tree[root<<1]=(len-(len>>1))-tree[root<<1];        //\u5f02\u6216\uff0c\u5c06\u539f\u5148\u72b6\u6001\u5168\u90e8\u7ffb\u8f6c\n        tree[root<<1|1]=(len>>1)-tree[root<<1|1];    //\u8be5\u533a\u95f4\u4e00\u5171(r-l+1)>>1 \u4e2a\u5143\u7d20\uff0c\u51cf\u53bb\u81ea\u5df1\u5373\u4e3a\u5f02\u6216\u540e\u72b6\u6001 \n        lazy[root]=0;\n    }\n}\nvoid build(int root,int l,int r)\n{\n    if(l==r)    //\u627e\u5230\u53f6\u5b50\u8282\u70b9 \n    {\n        scanf(\"%1d\",&tree[root]);    //%1d\uff0c\u53ea\u8f93\u5165\u4e00\u4e2a\u6570\u5b57 \n        return;\n    }\n    int mid=(l+r)>>1;\n    build(lson);    //\u5efa\u5de6\u5b50\u6811 \n    build(rson);    //\u5efa\u53f3\u5b50\u6811 \n    push(root);\n}\nint query(int root,int l,int r,int L,int R)\n{\n    if(L<=l&&r<=R) return tree[root];    //\u67e5\u8be2\u533a\u95f4\u5305\u542b\u5f53\u524d\u533a\u95f4\uff0c\u76f4\u63a5\u8fd4\u56de\u5f53\u524d\u533a\u95f4\u7684\u503c \n    pushdown(root,r-l+1);    //\u5c06lazy\u6570\u7ec4\u4e0b\u653e\uff0c\u66f4\u65b0\u5b50\u6811\u8282\u70b9 \n    int mid=(l+r)>>1;\n    int sum=0;\n    if(L<=mid) sum+=query(lson,L,R);    //\u67e5\u8be2\u5de6\u5b50\u6811 \n    if(mid<R) sum+=query(rson,L,R);        //\u67e5\u8be2\u53f3\u5b50\u6811 \n    return sum;\n}\nvoid update(int root,int l,int r,int L,int R)\n{\n    if(L<=l&&r<=R)\n    {\n        lazy[root]^=1;    //\u8868\u793a\u4ee5\u5f53\u524d\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u8981\u53d6\u53cd \n        tree[root]=r-l+1-tree[root];    //\u5c06\u5f53\u524d\u5b50\u6811\u4e2d\u7684\u503c\u5168\u90e8\u5f02\u6216\uff0c\u603b\u6570\u51cf\u53bb\u5f53\u524d\u6570\u5373\u4e3a\u5f02\u6216\u540e\u7684\u503c \n        return;\n    }\n    pushdown(root,r-l+1);    //\u66f4\u65b0\u5b50\u6811 \n    int mid=(l+r)>>1;\n    if(L<=mid) update(lson,L,R);    //\u66f4\u65b0\u5de6\u5b50\u6811 \n    if(mid<R) update(rson,L,R);        //\u66f4\u65b0\u53f3\u5b50\u6811 \n    push(root);\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    build(1,1,n);\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d%d\",&p,&l,&r);\n        if(p==0)\n        {\n            update(1,1,n,l,r);\n        }\n        else\n        {\n            printf(\"%d\\n\",query(1,1,n,l,r));\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1500728163,
        "uid": 39886,
        "name": "Drifterming",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2574 \u3010XOR\u7684\u827a\u672f\u3011"
    },
    {
        "content": "## \u6307\u9488\u9898\u89e3\u6765\u4e00\u53d1\uff01\uff01\uff01\n\u8fd9\u9053\u9898\u5f88\u7b80\u5355\uff0c\u4e00\u773c\u5207\u3002\n\n\u6211\u4eec\u8003\u8651\u533a\u95f4\u5f02\u6216\u4ee5\u540e\uff0c\u8fd9\u4e2a\u533a\u95f41\u7684\u4e2a\u6570\u5c31\u53d8\u4e3a\u4e86len - \u539f\u6765\u7684\u4e2a\u6570\u3002\n\n\u5bf9\u4e8e\u6807\u8bb0\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u53d6\u5f02\u6216\u6765\u7ef4\u62a4\u5c31\u884c\u4e86\n```cpp\n#include <iostream>\n#include <cstdio>\nusing namespace std;\nconst int N = 200020;\ninline int read()\n{\n\tint x = 0 , f = 1;\tchar ch = getchar();\n\twhile(ch < '0' || ch > '9')\t{if(ch == '-')\tf = -1; ch = getchar();}\n\twhile(ch >= '0' && ch <= '9') {x = (x << 3) + (x << 1) + (ch ^ 48); ch = getchar();}\n\treturn x * f;\n}\nint n , m;\nchar s[N];\nstruct Segment_tree\n{\n\t#define mid ((p -> l + p -> r) >> 1)\n\tstruct node\n\t{\n\t\tnode *ls , *rs;\n\t\tint l , r , sum , tag;\n\t\tnode (int l = 0,int r = 0) : l(l) , r(r) {sum = tag = 0;}\n\t\tinline int len() {return r - l + 1;}\n\t\tinline void up() {sum = ls -> sum + rs -> sum;}\n\t\tinline void down() \n\t\t{\n\t\t\tif(tag)\n\t\t\t{\n\t\t\t\tls -> tag ^= 1;\n\t\t\t\trs -> tag ^= 1;\n\t\t\t\ttag = 0;\n\t\t\t\tls -> sum = ls -> len() - ls -> sum;\n\t\t\t\trs -> sum = rs -> len() - rs -> sum;\n\t\t\t}\n\t\t}\n\t}*root;\n\tvoid build(node *&p,int l,int r)\n\t{\n\t\tp = new node(l,r);\n\t\tif(l == r)\treturn (void)(p -> sum = (s[l] == '1'));\n\t\tbuild(p -> ls,l,mid);\n\t\tbuild(p -> rs,mid+1,r);\n\t\tp -> up();\n\t}\n\tvoid chenge(node *p,int x,int y)\n\t{\n\t\tif(x <= p -> l && p -> r <= y)\t\n\t\t{\n\t\t\tp -> tag ^= 1;\n\t\t\tp -> sum = p -> len() - p -> sum;\n\t\t\treturn;\n\t\t}\n\t\tif(p -> tag)\tp -> down();\n\t\tif(x <= mid) chenge(p -> ls,x,y);\n\t\tif(y > mid)\tchenge(p -> rs,x,y);\n\t\tp -> up();\n\t}\n\tint query(node *p,int x,int y)\n\t{\n\t\tif(x <= p -> l && p -> r <= y)\treturn p -> sum;\n\t\tif(p -> tag)\tp -> down();\n\t\tint res = 0;\n\t\tif(x <= mid)\tres += query(p -> ls,x,y);\n\t\tif(y > mid)\t\tres += query(p -> rs,x,y);\n\t\treturn res;\n\t}\n\tinline void LOL()\n\t{\n\t\tn = read(); m = read();\n\t\tscanf(\"%s\",s+1);\n\t\tbuild(root,1,n);\n\t\tfor(int i = 1 , opt , l , r;i <= m;i ++)\n\t\t{\n\t\t\topt = read(); l = read(); r = read();\n\t\t\tif(opt & 1)\tprintf(\"%d\\n\",query(root,l,r));\n\t\t\telse chenge(root,l,r);\n\t\t}\n\t}\n}CF;\nint main()\n{\n\tCF.LOL();\n\treturn 0;\n}\n\n```\n",
        "postTime": 1568621954,
        "uid": 153898,
        "name": "Treaker",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2574 \u3010XOR\u7684\u827a\u672f\u3011"
    },
    {
        "content": "### \u4e3b\u8981\u601d\u8def\uff1a\u7ebf\u6bb5\u6811\n\n~~\u7ebf\u6bb5\u6811\u5927\u6cd5\u597d~~\n\n\u6211\u89c9\u5f97\u8fd9\u9053\u9898\u5c31\u662f\u628a\u533a\u95f4\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\u7684\u666e\u901a\u7ebf\u6bb5\u6811\u6539\u4e86\u6539\u61d2\u6807\u8bb0\u5c31\u5b8c\u4e86\n\n\u4e0d\u4f1a\u7ebf\u6bb5\u6811\uff1f\u4e0d\u7740\u6025\u554a\uff0c\u6211\u4eec\u6709\u5165\u95e8\u5b9d\u5178\u2014\u2014\n\n#### \u5177\u4f53\u7ebf\u6bb5\u6811\u5165\u95e8\uff1a\n\n[\u5165\u95e81\uff1a\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2](https://yizimiyuanxin.blog.luogu.org/ac-jun-tuan-zhou-bao-xian-duan-shu-zong-ru-men-dao-ru-tu)\n\n[\u5165\u95e82\uff1a\u61d2\u6807\u8bb0\u53ca\u533a\u95f4\u4fee\u6539](https://yizimiyuanxin.blog.luogu.org/ac-jun-tuan-zhou-bao-di-er-zhou-xian-duan-shu-zong-ru-men-dao-ru-tu-post)\n\n~~Blog\u53d1\u5b8c\u5c31\u8dd1~~\n\n\u8bb0\u5f97\uff0c\u8fd9\u91cc\u7684xor\u5982\u679cxor\u4e24\u6b21\u5c31\u76f8\u5f53\u4e8e\u6ca1\u64cd\u4f5c\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u7ef4\u62a4\u61d2\u6807\u8bb0\u65f6\u53ef\u4ee5\u518d\u5077\u70b9\u61d2\uff0c\u6bcf\u6b21\u61d2\u6807\u8bb0\u53d6\u53cd\u3002\n\n\u6211\u4eec\u533a\u95f4\u53d6\u53cd\u65f6\uff0c\u5b9e\u9645\u4e0a\u662f\u539f\u6765\u662f0\uff0c\u73b0\u5728\u53d8\u4e3a1\uff0c\u539f\u6765\u662f1\uff0c\u73b0\u5728\u53d8\u4e3a0\uff0c\u4ed6\u4eec\u7684\u6570\u76ee\u662f\u4e92\u8865\u7684\uff0c\u6240\u4ee5\u533a\u95f4\u53d6\u53cd\u540e1\u7684\u6570\u76ee\u5c31\u662f\u4e4b\u524d0\u7684\u6570\u76ee\n\n### \u4ee3\u7801\uff1a\n\n```cpp\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <vector>\nusing namespace std;\n#define go(i, j, n, k) for (int i = j; i <= n; i += k)\n#define fo(i, j, n, k) for (int i = j; i >= n; i -= k)\n#define rep(i, x) for (int i = h[x]; i; i = e[i].nxt)\n#define mn 222222\n#define inf 2147483647\n#define ll long long\n#define ld long double\n#define fi first\n#define se second\n#define root 1, n, 1\n#define lson l, m, rt << 1\n#define rson m + 1, r, rt << 1 | 1\n#define bson l, r, rt\n//#define LOCAL\n#define mod \n#define Debug(...) fprintf(stderr, __VA_ARGS__)\ninline int read(){\n    int f = 1, x = 0;char ch = getchar();\n    while (ch > '9' || ch < '0'){if (ch == '-')f = -f;ch = getchar();}\n    while (ch >= '0' && ch <= '9'){x = x * 10 + ch - '0';ch = getchar();}\n    return x * f;\n}\n//This is AC head above...\nint z[mn << 2], col[mn << 2], a[mn];\ninline void update(int rt){\n    z[rt] = z[rt << 1] + z[rt << 1 | 1];\n}\ninline void color(int l,int r,int rt){\n    z[rt] = (r - l + 1) - z[rt];\n    col[rt] ^= 1;\n}\ninline void push_col(int l,int r,int rt){\n    if(col[rt]){\n        int m = (l + r) >> 1;\n        color(lson);\n        color(rson);\n        col[rt] = 0;\n    }\n}\ninline void build(int l,int r,int rt){\n    if(l==r){\n        z[rt] = a[l];\n        return;\n    }\n    int m = (l + r) >> 1;\n    build(lson);\n    build(rson);\n    update(rt);\n}\ninline void modify(int l,int r,int rt,int nowl,int nowr){\n    if(nowl<=l && r<=nowr){\n        col[rt] ^= 1;\n        z[rt] = (r - l + 1) - z[rt];\n        return;\n    }\n    int m = (l + r) >> 1;\n    push_col(bson);\n    if(nowl<=m)\n        modify(lson, nowl, nowr);\n    if(m<nowr)\n        modify(rson, nowl, nowr);\n    update(rt);\n}\ninline int query(int l,int r,int rt,int nowl,int nowr){\n    if(nowl<=l && r<=nowr){\n        return z[rt];\n    }\n    int m = (l + r) >> 1;\n    push_col(bson);\n    if(nowl<=m){\n        if(m<nowr)\n            return query(lson, nowl, nowr) + query(rson, nowl, nowr);\n        else\n            return query(lson, nowl, nowr);\n    }else\n        return query(rson, nowl, nowr);\n}\nint n, m;\ninline void debug(){\n    go(i, 1, n, 1) printf(\"%d \", a[i]);\n    puts(\"\");\n}\nint main(){\n    n = read(), m = read();\n    string c;\n    cin >> c;\n    go(i, 0, n - 1, 1)\n        a[i + 1] = c[i] - '0';\n    //debug();\n    build(root);\n    go(i,1,m,1){\n        int s = read(), x = read(), y = read();\n        if(!s)\n            modify(root, x, y);\n        else\n            cout << query(root, x, y) << \"\\n\";\n    }\n#ifdef LOCAL\n    Debug(\"\\nMy Time: %.3lfms\\n\", (double)clock() / CLOCKS_PER_SEC);\n#endif\n    return 0;\n}\n\n```\n\n#### \u7b2c\u5341\u4e09\u6b21\u53d1\u9898\u89e3\uff0c\u5e0c\u671b\u53ef\u4ee5\u5e2e\u52a9\u521d\u5b66\u8005\u5165\u95e8\u7ebf\u6bb5\u6811",
        "postTime": 1537375562,
        "uid": 71168,
        "name": "yizimi\u8fdc\u6b23",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2574 \u3010XOR\u7684\u827a\u672f\u3011"
    },
    {
        "content": "\u7ebf\u6bb5\u6811\uff08\u8303\u56f4\u4fee\u6539\uff0c\u8303\u56f4\u67e5\u8be2\uff09\uff0c\u8fd0\u7528\u61d2\u60f0\u6807\u8bb0\n\n\u672c\u9898\u8981\u70b9\u5728\u4e8e\u4e32\u7684\u957f\u5ea6\u6781\u957f\uff0c\u6240\u4ee5\u5f3a\u884c\u6a21\u62df\u662f\u884c\u4e0d\u901a\u7684\uff08\u4e00\u70b9\u4e00\u70b9\u7d2f\u52a0\u7684\u505a\u6cd5\uff09\uff0c\u672c\u4eba\u5b9e\u6d4b\u53ea\u670970\u5206\u3002\n\n[R8445976 \u8bc4\u6d4b\u8be6\u60c5\uff08\u5f3a\u884c\u66b4\u529b\u6a21\u62df\uff09](https://www.luogu.org/recordnew/show/8445976)\n\n\u6240\u4ee5\u6211\u4eec\u5728\u8fd9\u91cc\u8fdb\u884c\u7ebf\u6bb5\u6811\u6c42\u548c\u64cd\u4f5c\uff0c\u8981\u70b9\u5728\u4e8e\u6539\u53d8\u4e00\u4e2a\u533a\u95f4\u7684\u548c\u65f6\u53ea\u9700\u5c06\u8303\u56f4\u5185\u7684\u603b\u6570\u51cf\u53bb\u5f53\u524d\u6570\u503c\u5373\u53ef\u3002\n\n\u9700\u8981\u91cd\u70b9\u6ce8\u610f\u7684\u662f\u5728\u8fdb\u884cUpdate\u66f4\u65b0\u65f6\uff0c\u5982\u679c\u6240\u6c42\u533a\u95f4\u5728\u4e00\u534a\u800c\u4e0d\u5728mid\u5de6\u53f3\u65f6\uff0c\u4e00\u5b9a\u8981\u5c06\u53e6\u5916\u4e00\u6bb5\u4e5f\u8fdb\u884cpushdown\uff08\u56e0\u4e3a\u6b64\u533a\u95f4\u7684\u61d2\u60f0\u6807\u8bb0\u5df2\u7ecf\u66f4\u65b0\uff09\uff0c\u4e0d\u7136\u540e\u679c\u5f88\u4e25\u91cd\u3002\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\nusing namespace std;\nconst int SIZE=400006;\nint n,m,a[SIZE|1],AnsQuery=0;\nchar s[SIZE|1];\nstruct SegTree{\n    int l,r,v;\n    bool la;\n}t[SIZE<<2|1];\nvoid PushUp(int id);\nvoid PushDown(int id);\nvoid Build(int id,int l,int r);\nvoid Update(int id,int l,int r);\nvoid Query(int id,int l,int r);\nint main(){\n    int con,x,y;\n    scanf(\"%d%d%s\",&n,&m,s+1);\n    for(int i=1;i<=n;i++) a[i]=s[i]-'0';\n    Build(1,1,n);\n    for(int i=1;i<=m;i++){\n        scanf(\"%d%d%d\",&con,&x,&y);\n        if(con==0){\n            Update(1,x,y);\n        }\n        else{\n            AnsQuery=0;\n            Query(1,x,y);\n            printf(\"%d\\n\",AnsQuery);\n        }\n    }\n    return 0;\n}\n\n\nvoid Build(int id,int l,int r){\n    t[id].l=l;t[id].r=r;t[id].la=0;\n    int mid=(l+r)>>1;\n    if(l==r) t[id].v=a[t[id].l];\n    else{\n        Build(id<<1,l,mid);\n        Build(id<<1|1,mid+1,r);\n        PushUp(id);\n    }\n}\n\nvoid PushUp(int id){\n    t[id].v=t[id<<1].v+t[id<<1|1].v;\n}\n\nvoid PushDown(int id){\n    if(t[id].la==1){\n        t[id<<1].la=1-t[id<<1].la;t[id<<1|1].la=1-t[id<<1|1].la;\n        t[id].v=t[id].r-t[id].l+1-t[id].v;\n        t[id].la=0;\n    }\n}\n\nvoid Update(int id,int l,int r){\n    PushDown(id);\n    if(t[id].l==l&&t[id].r==r) {\n        t[id].la=1-t[id].la;\n        PushDown(id); \n    } \n    else{\n        int mid=(t[id].l+t[id].r)>>1; \n        if(l>mid){\n            Update(id<<1|1,l,r);\n            PushDown(id<<1);\n        }\n        else{\n            if(r<=mid){\n                Update(id<<1,l,r);\n                PushDown(id<<1|1);\n            }\n            else{\n                Update(id<<1,l,mid); Update(id<<1|1,mid+1,r);\n            }\n        }\n        PushUp(id);\n    } \n}\n\nvoid Query(int id,int l,int r){\n    PushDown(id);\n    if(t[id].l==l&&t[id].r==r) AnsQuery+=t[id].v;\n    else{\n        int mid=(t[id].l+t[id].r)>>1;\n        if(l>mid) {\n            Query(id<<1|1,l,r);\n            PushDown(id<<1);\n        }\n        else{\n            if(r<=mid){\n                Query(id<<1,l,r);\n                PushDown(id<<1|1);\n            }\n            else{\n                Query(id<<1,l,mid); Query(id<<1|1,mid+1,r); \n            }\n        }\n    }\n}\n```",
        "postTime": 1531452662,
        "uid": 52428,
        "name": "Jameswood",
        "ccfLevel": 0,
        "title": "P2574 XOR\u7684\u827a\u672f"
    },
    {
        "content": "\u5206\u5757\u5927\u6cd5\u597d\uff0c\u4fee\u6539\u65b9\u5f0f\u6539\u4e00\u4e0b\u5c31A\u4e86\uff0c\u5177\u4f53\u770b\u6ce8\u91ca\u3002\n\u8fd0\u884c\u901f\u5ea6\u4e0d\u7b97\u5feb\uff0c\u4f46\u662f\u5199\u8d77\u6765\u662f\u771f\u5feb\u3002\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint A[200001],Lft[501],Rgt[501],GPS[200001],Sum[501];\nbool Inc[501];\t\t\t\t\t\t\t//Inc[i]\u8868\u793a\u7b2ci\u5757\u53d6\u4e86\u591a\u5c11\u6b21\u53cd(\u5076\u6570\u6b21\u7b49\u4ef7\u4e8e0\u6b21,\u5947\u6570\u6b21\u7b49\u4ef7\u4e8e1\u6b21) \nint n,m,i,j,x,y,Len,Tot,Ins;\nvoid Modify(int l,int r){\t\t\t\t//\u4fee\u6539\u64cd\u4f5c \n\tif(GPS[l]==GPS[r]){\t\t\t\t\t//\u5224\u65ad\u662f\u5426\u5728\u4e00\u4e2a\u5757\u5185(\u9632\u6b62\u91cd\u590d,\u4e0b\u540c) \n\t\tfor(int i=l;i<=r;++i)\n\t\t\tif(A[i])\n\t\t\t\tA[i]=0,Sum[GPS[l]]--;\t//\u66f4\u65b0\u65f6\u5c06A[i]\u53d6\u53cd,\u5e76\u4e14\u66f4\u65b0Sum[] \n\t\t\telse\n\t\t\t\tA[i]=1,Sum[GPS[l]]++;\n\t\treturn;\n\t}\n\tfor(int i=l;i<=Rgt[GPS[l]];++i)\t\t//\u96f6\u788e\u5757\u66b4\u529b \n\t\tif(A[i])\n\t\t\tA[i]=0,Sum[GPS[l]]--;\n\t\telse\n\t\t\tA[i]=1,Sum[GPS[l]]++;\n\tfor(int i=r;i>=Lft[GPS[r]];--i)\n\t\tif(A[i])\n\t\t\tA[i]=0,Sum[GPS[r]]--;\n\t\telse\n\t\t\tA[i]=1,Sum[GPS[r]]++;\n\tfor(int i=GPS[l]+1;i<GPS[r];++i)\t//\u6574\u5757\u4fee\u6539Inc[] \n\t\tInc[i]=1-Inc[i];\n}\nint Query(int l,int r){\n\tint Ret=0;\n\tif(GPS[l]==GPS[r]){\n\t\tfor(int i=l;i<=r;++i)\n\t\t\tif(A[i]^Inc[GPS[l]])\t\t//\u8981xor\u4e00\u4e0bInc[] \n\t\t\t\t++Ret;\n\t\treturn Ret;\n\t}\n\tfor(int i=l;i<=Rgt[GPS[l]];++i)\n\t\tif(A[i]^Inc[GPS[l]])\n\t\t\t++Ret;\n\tfor(int i=r;i>=Lft[GPS[r]];--i)\n\t\tif(A[i]^Inc[GPS[r]])\n\t\t\t++Ret;\n\tfor(int i=GPS[l]+1;i<GPS[r];++i)\t//\u5982\u679c\u6574\u5757\u4fee\u6539\u8fc7\u5947\u6570\u6b21\u8981\u8fd4\u56de0\u7684\u4e2a\u6570 \n\t\tif(Inc[i])\n\t\t\tRet+=(Rgt[i]-Lft[i]+1)-Sum[i];\n\t\telse\n\t\t\tRet+=Sum[i];\n\treturn Ret;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tLen=sqrt(n);\t\t\t\t\t//\u5206\u5757\u5e38\u89c4\u64cd\u4f5c \n\tTot=n/Len;\n\tif(n%Len)\n\t\t++Tot;\n\tfor(i=1;i<=n;++i){\n\t\tchar c;\n\t\tcin>>c;\n\t\tA[i]=c-'0';\n\t\tGPS[i]=(i-1)/Len+1;\n\t\tif(A[i])\n\t\t\t++Sum[GPS[i]];\t\t\t//Sum[i]\u4fdd\u5b58\u7b2ci\u5757\u91cc1\u7684\u4e2a\u6570 \n\t}\n\tfor(i=1;i<=Tot;++i){\n\t\tLft[i]=(i-1)*Len+1;\n\t\tRgt[i]=i*Len;\n\t}\n\tRgt[Tot]=n;\n\twhile(m--){\n\t\tscanf(\"%d%d%d\",&Ins,&x,&y);\n\t\tif(Ins==0)\n\t\t\tModify(x,y);\n\t\tif(Ins==1)\n\t\t\tprintf(\"%d\\n\",Query(x,y));\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1538064244,
        "uid": 24518,
        "name": "\u5047\u88c5\u601d\u8003",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2574 \u3010XOR\u7684\u827a\u672f\u3011"
    },
    {
        "content": "\u9996\u5148\u51ed\u76f4\u89c9\u611f\u89c9\u662f\u7ebf\u6bb5\u6811\uff0c\u5173\u952e\u662f\u600e\u4e48\u6765\u7ef4\u62a4\n\n\u5bf9\u64cd\u4f5c2\uff0c\u6211\u4eec\u8981\u67e5\u8be2\u533a\u95f4[x,y]\u7684\u548c\uff0c\u4e5f\u5c31\u662f[x,y]\u4e2d1\u7684\u4e2a\u6570\uff0c\u4e3a\u4e86\u8fbe\u5230\u8be2\u95eelogn\u590d\u6742\u5ea6\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u4e00\u6bb5\u533a\u95f4\u51851\u51fa\u73b0\u7684\u6b21\u6570\n\n\u63a5\u4e0b\u6765\u89e3\u51b3\u64cd\u4f5c1\n\n\n\u6ce8\u610f\u5230\u5728\u533a\u95f4\u5f02\u6216\u4e0a1\u540e\uff0c\u533a\u95f4\u91cc\u7684\u65700\u53d8\u6210\u4e861,1\u53d8\u6210\u4e860\uff0c\u56e0\u4e3a\u6211\u4eec\u7ef4\u62a4\u4e86\u533a\u95f41\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u77e5\u9053\u4fee\u6539\u540e\u533a\u95f4\u4e2d0\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u90a3\u6211\u4eec\u53ea\u8981\u518d\u7ef4\u62a4\u4e0b\u539f\u672c\u533a\u95f40\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u77e5\u9053\u4fee\u6539\u540e1\u51fa\u73b0\u7684\u6b21\u6570\u4e86\uff0c\u5e76\u4e14\u8fd9\u4e9b\u51fa\u73b0\u6b21\u6570\u662f\u6ee1\u8db3\u533a\u95f4\u52a0\u6cd5\u7684\uff0c\u5f88\u597d\u7ef4\u62a4\n\n\u6240\u4ee5\u64cd\u4f5c1\u5bf9\u7ebf\u6bb5\u6811\u7684\u5f71\u54cd\u5c31\u662f\u5c06\u533a\u95f4\u4e2d0\u7684\u4e2a\u6570\u4e0e\u533a\u95f4\u4e2d1\u7684\u6b21\u6570\u4ea4\u6362\u4e86\u4e00\u4e0b\uff0c\u5e76\u4e14\u53ef\u4ee5\u7528\u4e2a\u61d2\u6807\u8bb0\u6765\u65b9\u4fbf\u7684\u4e0b\u4f20\u5f71\u54cd\uff0c\u53ea\u8981\u5728\u67e5\u8be2\u548c\u4fee\u6539\u65f6\u4e0b\u4f20\u4e00\u4e0b\u5c31\u597d\u4e86\n\n\u4e0a\u4ee3\u7801~~~\n\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=2e5+5;\nint n,m;//\u6a21\u677f\u5566\nstruct E_tree{\n\tint sum0[N<<2],sum1[N<<2],lz[N<<2];//sum0\u4e3a0\u51fa\u73b0\u6b21\u6570\uff0csum1\u4e3a1\u51fa\u73b0\u6b21\u6570\uff0clz\u4e3a\u6807\u8bb0\n\t#define ls(p) p<<1\n\t#define rs(p) p<<1|1\n\tvoid push_up(int p){\n\t\tsum0[p]=sum0[ls(p)]+sum0[rs(p)];\n\t\tsum1[p]=sum1[ls(p)]+sum1[rs(p)];\n\t}\n\tvoid ad(int p){\n\t\tswap(sum0[p],sum1[p]);\n\t\tlz[p]^=1;\n\t}\n\tvoid push_down(int p){\n\t\tif(!lz[p])return;\n\t\tad(ls(p));\n\t\tad(rs(p));\n\t\tlz[p]=0;\n\t}\n\tvoid build(int p,int l,int r){\n\t\tif(l==r){\n\t\t\tint k;\n\t\t\tscanf(\"%1d\",&k);\n\t\t\tif(k)sum1[p]=1;\n\t\t\telse sum0[p]=1;\n\t\t\treturn;\n\t\t}\n\t\tint mid=l+r>>1;\n\t\tbuild(ls(p),l,mid);\n\t\tbuild(rs(p),mid+1,r);\n\t\tpush_up(p);\n\t}\n\tvoid add(int p,int l,int r,int x,int y){\n\t\tif(l>y||r<x)return;\n\t\tif(x<=l&&r<=y){\n\t\t\tad(p);\n\t\t\treturn;\n\t\t}\n\t\tpush_down(p);\n\t\tint mid=l+r>>1;\n\t\tadd(ls(p),l,mid,x,y);\n\t\tadd(rs(p),mid+1,r,x,y);\n\t\tpush_up(p);\n\t}\n\tint ask(int p,int l,int r,int x,int y){\n\t\tif(l>y||r<x)return 0;\n\t\tif(x<=l&&r<=y)return sum1[p];\n\t\tpush_down(p);\n\t\tint mid=l+r>>1;\n\t\treturn ask(ls(p),l,mid,x,y)+ask(rs(p),mid+1,r,x,y);\n\t}\n}T;//\u7ed3\u6784\u4f53\u907f\u514d\u51b2\u7a81\uff0c\u7528\u51faSTL\u7684\u611f\u89c9\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tT.build(1,1,n);\n\tint o,x,y;\n\twhile(m--){\n\t\tscanf(\"%d%d%d\",&o,&x,&y);\n\t\tif(o==1)printf(\"%d\\n\",T.ask(1,1,n,x,y));\n\t\telse T.add(1,1,n,x,y);\n\t}\n\treturn 0;\n}\n```\n\u4e0a\u9762\u53ef\u80fd\u6ca1\u89e3\u91ca\u6e05\u695a\uff0c\u5982\u679c\u6709\u4e0d\u61c2\u7684\u5c0f\u4f19\u4f34\u53ef\u4ee5\u6765\u79c1\u4fe1\u95ee\u6211\uff0c\u849f\u84bb\u5fc5\uff08zi\uff09\u5c06\uff08ji\uff09\u5927\uff08dou\uff09\u529b\uff08bu\uff09\u76f8\uff08zhi\uff09\u52a9\uff08dao\uff09\uff0c~~\uff08\u9003~~\n",
        "postTime": 1572159345,
        "uid": 148092,
        "name": "Dark_lightrq",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2574 \u3010XOR\u7684\u827a\u672f\u3011"
    },
    {
        "content": "## \u770b\u9898\u89e3\u4e2d\u597d\u50cf\u6ca1\u6709\u5206\u5757\u7684\uff0c\u4e8e\u662f\u672c\u849f\u84bb\u5c31\u5199\u4e86\u4e2a\u5206\u5757\n\n\u5bf9\u4e8e\u8fd9\u79cd\u6570\u636e\u6bd4\u8f83\u6c34\u7684\u9898\u76ee\uff0c\u5206\u5757\u751a\u81f3\u4f1a\u6bd4\u7ebf\u6bb5\u6811\u66f4\u65b9\u4fbf\u3002\n~~\u56e0\u4e3a\u7ebf\u6bb5\u6811\u4ee3\u7801\u975e\u5e38\u957f\uff0c\u4e14\u70b9\u4e00\u4e0b\uff0c\u8c03\u4e00\u5e74\u3002~~\n\n\u5206\u5757\u7684\u601d\u60f3\u975e\u5e38\u7b80\u5355\uff0c\u5c31\u662f\u5927\u5757\u7ef4\u62a4\uff0c\u5c0f\u5757\u66b4\u529b\u3002\u628a\u957f\u5ea6\u4e3an\u7684\u6570\u5217\u5206\u5230sqrt(n)\u5757\uff0c\u9884\u5904\u7406\u6bcf\u4e00\u4e2a\u5757\u7684\u548c\uff0c\u6bcf\u4e2a\u5757\u5b58\u4e00\u4e2a\u61d2\u6807\u8bb0\u3002\n\n### \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8be2\u95ee\uff0c\u5728\u533a\u95f4\u5185\u7684\u5757\u76f4\u63a5\u628a\u548c\u52a0\u5230\u7b54\u6848\u91cc\uff0c\u4e24\u5934\u7684\u6570\u66b4\u529b\u52a0\u5165\u3002\n\n### \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u67e5\u8be2\uff0c\u5728\u533a\u95f4\u5185\u7684\u5757\u76f4\u63a5\u4fee\u6539\u61d2\u6807\u8bb0\uff0c\u4e24\u5934\u7684\u6570\u66b4\u529b\u4fee\u6539\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,T,len;\nint k=1,a[200010],bk[200010],bl[500][500],sum[500],lan[500];\ninline int read()\n{//\u5feb\u8bfb\uff1f\n\tchar c=getchar();\n\tfor(;c!='0' && c!='1';c=getchar());\n\treturn (int)(c-'0');\n } \n inline int query(int l,int r)\n {//\u6c42\u548c\n \tint i,ret=0;\n \tfor(i=l;bk[i]==bk[l] && i<=r;++i){\n \t\tif(lan[bk[i]]){\n \t\t\tret+=(a[i]^1);\n\t\t }else ret+=a[i];\n\t }//\u5904\u7406\u524d\u534a\u90e8\u5206\n\t for(;i+len<=r;i+=len){\n\t \tif(lan[bk[i]]){\n\t \t\tret+=(bl[bk[i]][0]-sum[bk[i]]);\n\t\t }else ret+=sum[bk[i]];\n\t \t\n\t }//\u5904\u7406\u5757\n\t for(;i<=r;++i){\n\t \tif(lan[bk[i]]){\n\t \t\tret+=a[i]^1;\n\t\t }\n\t\t else ret+=a[i];\n\t }//\u5904\u7406\u540e\u534a\u90e8\u5206\n\t return ret;\n }\n inline void add(int l,int r)\n {\n \tint i;\n \tfor(i=l;bk[i]==bk[l] && i<=r;++i){\n \t\tif(lan[bk[i]]){\n \t\t\tif(a[i]){\n \t\t\t    sum[bk[i]]--;\n\t\t\t }\n\t\t\t else sum[bk[i]]++;\n\t\t }\n\t\t else if(a[i]){\n\t\t sum[bk[i]]--;\n\t\t } else sum[bk[i]]++;\n \t\ta[i]^=1;\n\t }//\u5904\u7406\u524d\u534a\u90e8\u5206\n\t for(;i+len<=r;i+=len){\n\t \tlan[bk[i]]^=1;\n\t }//\u5904\u7406\u5757\n\t for(;i<=r;++i){\n\t     if(lan[bk[i]]){\n \t\t\tif(a[i]){\n \t\t\t    sum[bk[i]]--;\n\t\t\t }\n\t\t\t else sum[bk[i]]++;\n\t\t }\n\t\t else if(a[i]){\n\t\t sum[bk[i]]--;\n\t\t } else sum[bk[i]]++;\n\t \ta[i]^=1;\n\t }//\u5904\u7406\u540e\u534a\u90e8\u5206\n }\nint main()\n{\n\tcin>>n>>T;\n\tlen=(int)sqrt(n);\n\tfor(int i=1;i<=n;++k){\n\t\tint j=1;\n\t\tfor(;j<=len && i<=n;++j,++i){\n\t\t\ta[i]=bl[k][j]=read();\n\t\t\tbk[i]=k;\n\t\t\tsum[k]+=bl[k][j];\n\t\t}\n\t\tbl[k][0]=j-1;\n\t}\n//\tfor(int i=1;i<=n;++i)cout<<a[i];puts(\"\");\n\tint _a,_b,_c;\n\twhile(T--){\n\t\tscanf(\"%d%d%d\",&_a,&_b,&_c);\n\t\tif(_a==0){\n\t\t\tadd(_b,_c);\n\t\t}\n\t\tif(_a==1){\n\t\t\tprintf(\"%d\\n\",query(_b,_c));\n\t\t}\n//\t     for(int i=1;i<=n;++i)\n//\t         if(lan[bk[i]]){\n//\t         \tcout<<(a[i]^1);\n//\t\t\t }else cout<<a[i];\n//\t\tputs(\"\");\n\t}\n}\n```",
        "postTime": 1536494333,
        "uid": 48143,
        "name": "zhenglier",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2574 \u3010XOR\u7684\u827a\u672f\u3011"
    },
    {
        "content": "# \u9047\u4e8b\u4e0d\u51b3\u5148\u5206\u5757\n> \u5206\u5757\uff0c\u5373\u53ef\u611f\u53d7\u66b4\u529b\u7684\u7f8e\u611f\uff0c\u4e5f\u53ef\u611f\u53d7AC\u7684\u5feb\u611f\n\n\u7528\u5206\u5757\u7ef4\u62a4\u533a\u95f4\u548c\uff0c\u5f53\u7136\u5728\u7ef4\u62a4\u533a\u95f4\u7684lazy\u6807\u5fd7\uff0c\u75280\u8868\u8be5\u533a\u95f4\u672a\u6709\u6807\u5fd7\uff0c1\u8868\u8be5\u533a\u95f4\u6709\u6807\u5fd7\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u5927\u529b\u5206\u5757\u5566\uff1a\n\n\u6211\u7684\u5206\u5757\u6253\u7684\u6bd4\u8f83\u66b4\u529b\uff0c\u5728\u5904\u7406\u6b8b\u5757\u662f\u76f4\u63a5\u4e0b\u653e\u6807\u8bb0\uff0c\u590d\u6742\u5ea6\u4e0d\u662f\u5f88\u4f18\u4f46\u8fd8\u662f\u53ef\u4ee5\u63a5\u53d7(2.01s)\n\n### \u518d\u4e0d\u61c2\u4ee3\u7801\u91cc\u6709\u6ce8\u91ca\uff1a\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cmath>\n#define N 300500\nusing namespace std;\n\nint n,m;\nchar s[N];//\u5c0601\u5b57\u7b26\u4e32\u8bfb\u5165\nint a[N],sum[N],lz[N];//\u533a\u95f4\u548c\u4e0elazy\u6807\u5fd7\u6570\u7ec4\nint tag[N],L[N],R[N];\n//\u5206\u5757 tag[i]\u8868i\u6240\u5728\u7684\u5757\u7684\u7f16\u53f7\uff0cL[i]\u548cR[i]\u4e3a\u7b2ci\u5757\u7684\u5de6\u53f3\u7aef\u70b9\u5728\u539f\u6570\u7ec4\u7684\u4f4d\u7f6e\n\n//\u4e0b\u653e\u6807\u8bb0\u7684\u51fd\u6570\uff0c\u6b64\u5904\u4e3a\u66b4\u529b\u4fee\u6539\ninline void Update(int k) {\n\tif(lz[tag[k]]) {\n\t\tsum[tag[k]] = R[tag[k]] - L[tag[k]] + 1 - sum[tag[k]];\n        //\u5f02\u6216\u7684\u4e0b\u653e\uff0c\u628a\u533a\u95f4\u548c\u4e2d1\u53d80\uff0c\u76f4\u63a5\u51cf\u53bb\u5373\u53ef\n\t\tfor(int i = L[tag[k]];i <= R[tag[k]];i ++) a[i] ^= 1;\n\t\tlz[tag[k]] = 0;//\u4e0b\u653e\u540e\u6807\u5fd7\u6d88\u5931\n\t}\n}\n\n//\u4fee\u6539\u51fd\u6570\ninline void Change(int l,int r) {\n\tif(tag[l] == tag[r]) { //\u5bf9\u4e8e\u6b8b\u5757\u66b4\u529b\u5373\u53ef\n\t\tUpdate(l);\n\t\tfor(int i = l;i <= r;i ++)\n\t\t\tsum[tag[l]] -= a[i],\n\t\t\ta[i] ^= 1,\n\t\t\tsum[tag[l]] += a[i];\n\t\treturn ;\n\t}\n\tUpdate(l);\n\tfor(int i = l;i <= R[tag[l]];i ++) \n\t\tsum[tag[l]] -= a[i], a[i] ^= 1, sum[tag[l]] += a[i];\n\tfor(int i = tag[l] + 1;i < tag[r];i ++) {\n\t\tif(lz[i]) lz[i] = 0;\n\t\telse lz[i] = 1;\n        //\u6839\u636e\u5f02\u6216\u7684\u6027\u8d28\u4e4b\u524d\u6709\u6807\u8bb0\u7684\u53d6\u6d88\uff0c\u6ca1\u6709\u7684\u52a0\u4e0a\n\t}\n\tUpdate(r);\n\tfor(int i = L[tag[r]];i <= r;i ++) \n\t\tsum[tag[r]] -= a[i], a[i] ^= 1, sum[tag[r]] += a[i];\n}\n\n//\u6c42\u548c\u51fd\u6570\ninline int Ask(int l,int r) {\n\tint res = 0;\n\tif(tag[l] == tag[r]) {//\u66b4\u529b\u7edf\u8ba1\n\t\tUpdate(l);\n\t\tfor(int i = l;i <= r;i ++) res += a[i];\n\t\treturn res;\n\t}\n\tUpdate(l);\n\tfor(int i = l;i <= R[tag[l]];i ++) res += a[i];\n\tfor(int i = tag[l] + 1;i < tag[r];i ++) {\n\t\tif(lz[i]) res += R[i] - L[i] + 1 - sum[i];\n\t\telse res += sum[i];\n        //\u5bf9\u4e8e\u6574\u5757\uff0c\u8981\u8003\u8651\u662f\u5426\u6709\u6807\u8bb0\n\t}\n\tUpdate(r);\n\tfor(int i = L[tag[r]];i <= r;i ++) res += a[i];\n\treturn res;\n}\n\nint main() {\n\tscanf(\"%d%d%s\",&n,&m,s + 1); int len = sqrt(n);\n\tfor(int i = 1;i <= n;i ++) a[i] = (s[i] == '1');\n    //\u5bf9\u4e8e\u5206\u5757\u7684\u9884\u5904\u7406\n\tfor(int i = 1;i <= n;i ++) tag[i] = (i - 1) / len + 1;\n\tfor(int i = 1;i <= tag[n];i ++)\n\t\tL[i] = R[i - 1] + 1,R[i] = min(n,L[i] + len - 1);\n\tfor(int i = 1;i <= tag[n];i ++) \n\t\tfor(int j = L[i];j <= R[i];j ++)\n\t\t\tsum[i] += a[j];\n    //\u6c42\u533a\u95f4\u548c\n\tfor(int i = 1;i <= m;i ++) {\n\t\tint opt,l,r; scanf(\"%d%d%d\",&opt,&l,&r);\n\t\tif(opt == 0) Change(l,r);\n\t\telse printf(\"%d\\n\",Ask(l,r));\n\t}\n\treturn 0;\n}\n```\n\n#### \u6700\u540e\u5b89\u5229\u4e0b\u6211\u7684[\u535a\u5ba2](https://sakura1314.blog.luogu.org/#)",
        "postTime": 1569321525,
        "uid": 153839,
        "name": "\u6e05\u8fdc\u5b66\u4f1a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2574 \u3010XOR\u7684\u827a\u672f\u3011"
    },
    {
        "content": "~~\u636e\u8bf4\u8fd9\u9898\u597d\u50cf\u6709\u516d\u500d\u7ecf\u9a8c~~\n\n\u6211\u4eec\u7b80\u5355\u5206\u6790\u4e00\u4e0b\n\n\u521d\u59cb\u6240\u6709\u6570\u90fd\u662f0\n\n\u9898\u76ee\u8981\u6c42\u652f\u6301\u4e24\u79cd\u64cd\u4f5c\uff0c\u4e00\u79cd\u662f\u533a\u95f4\u5f02\u62161\uff0c\u8fd8\u6709\u4e00\u79cd\u662f\u533a\u95f4\u67e5\u8be21\u7684\u4e2a\u6570\n\n\u8003\u8651\u5230\u6240\u6709\u6570\u4e2d\u53ea\u67090\u548c1\n\n\u6240\u4ee5\u67e5\u8be2\u53ef\u4ee5\u6539\u4e3a\u67e5\u8be2\u533a\u95f4\u548c\n\n\u533a\u95f4\u5f02\u62161\u4e5f\u53ef\u4ee5\u4ece\u533a\u95f4\u548c\u7684\u89d2\u5ea6\u53d6\u8003\u8651\u95ee\u9898\n\n---\n\n\u5047\u8bbe\u6211\u4eec\u539f\u6765\u6709$k$\u4e2a1\uff0c\u533a\u95f4\u957f\u5ea6\u4e3a$l$\n\n\u73b0\u5728\u5c31\u6709$l-k$\u4e2a1\n\n\u6240\u4ee5$sum_{now}=l-sum_{pre}$\n\n\u6807\u8bb0\u4e0b\u4f20\u4e5f\u53ef\u4ee5\u7ef4\u62a4\u4e86\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f\u7ef4\u62a4\u4e00\u9897\u7ebf\u6bb5\u6811\u7684\u65f6\u95f4$O(nlogn)$\n\ncode:\n\n```\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\n\n#define rd(x) x=read()\n#define N 200005 \n \nusing namespace std;\n\nint n,m;\nstruct T{\n\tint l,r,mid,v,tag;\n}t[N<<2];\n\ninline int read()\n{\n    int f=1,x=0;char s=getchar();\n    while(s<'0'||s>'9'){if(s=='-')f=-1;s=getchar();}\n    while(s>='0'&&s<='9'){x=x*10+s-'0';s=getchar();}\n    return x*f;\n}\n\nvoid pushdown(int rt,int len)\n{\n\tif(t[rt].tag)\n    {\n        t[rt<<1].tag^=1; \n        t[rt<<1|1].tag^=1;\n        t[rt<<1].v=(len-(len>>1))-t[rt<<1].v;\n        t[rt<<1|1].v=(len>>1)-t[rt<<1|1].v;\n        t[rt].tag=0;\n    }\n}\n\nvoid build(int rt,int l,int r)\n{\n\tint mid=(l+r)>>1;\n\tt[rt].l=l,t[rt].r=r,t[rt].mid=mid,t[rt].tag=0;\n\tif(l==r)\n\t{\n\t\tscanf(\"%1d\",&t[rt].v);\n\t\treturn;\n\t}\n\tbuild(rt<<1,l,mid);\n\tbuild(rt<<1|1,mid+1,r);\n\tt[rt].v=t[rt<<1].v+t[rt<<1|1].v;\n}\n\nvoid update(int rt,int l,int r)\n{\n    if(l<=t[rt].l&&t[rt].r<=r)\n    {\n        t[rt].tag^=1;     \n        t[rt].v=t[rt].r-t[rt].l+1-t[rt].v;    \n        return;\n    }\n    pushdown(rt,t[rt].r-t[rt].l+1);\n    if(l<=t[rt].mid)update(rt<<1,l,r);    \n    if(t[rt].mid<r)update(rt<<1|1,l,r);        \n    t[rt].v=t[rt<<1].v+t[rt<<1|1].v; \n}\nint query(int rt,int l,int r)\n{\n    if(l<=t[rt].l&&t[rt].r<=r)return t[rt].v;\n    pushdown(rt,t[rt].r-t[rt].l+1);\n    int sum=0;\n    if(l<=t[rt].mid)sum+=query(rt<<1,l,r); \n    if(t[rt].mid<r)sum+=query(rt<<1|1,l,r);        \n    return sum;\n}\n\nint main()\n{\n\trd(n),rd(m);\n\tbuild(1,1,n);\n\twhile(m--)\n\t{\n\t\tint opt,l,r;\n\t\trd(opt),rd(l),rd(r);\n\t\tif(opt)printf(\"%d\\n\",query(1,l,r));\n\t\telse update(1,l,r);\t\n\t}\n\t\n\treturn 0;\n}\n\n\n```",
        "postTime": 1565919696,
        "uid": 53807,
        "name": "Erusel",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2574 \u3010XOR\u7684\u827a\u672f\u3011"
    },
    {
        "content": "\u4e2a\u4eba\u8ba4\u4e3a\u6bd4\u8f83\u597d\u7406\u89e3\u7684\u7ebf\u6bb5\u6811\u4ee3\u7801\n\n\u56e0\u4e3a\u662f\u5f02\u6216\uff0c\u5e76\u4e14\u53ea\u67091 \u548c 0 \u4e24\u4e2a\u72b6\u6001\uff0c\u6240\u4ee5\u6bcf\u6b21\u533a\u95f4\u5f02\u6216\u540e\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a\u8be5\u533a\u95f40\u7684\u6570\u91cf\u548c1\u7684\u6570\u91cf\u4ea4\u6362\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\n\n\u53e6\u5916\u6ce8\u610fpushdown\u662fcg\uff08change\uff09\u9700\u8981\u6bcf\u6b21\u5f02\u6216\u4e00\u4e0b\uff0c\u5355\u7eaf\u7684\u8d4b\u503c\u4f1a\u51fa\u73b0\u8fd9\u79cd\u95ee\u9898\uff1a\n\n\t1^1=0     1^1^1=1\n    \u800c\u5355\u7eaf\u8d4b\u503c\uff0c\u5219\u4f1a\u53d8\u62101^1^1\u51fa\u73b00\u7684\u60c5\u51b5\u3002\n    \n\u53e6\u5916\u6ca1\u4ec0\u4e48\u95ee\u9898\uff0c\u5f88\u597d\u7684\u4e00\u9053\u7ebf\u6bb5\u6811\u9898\u76ee\n```cpp\n//\u5934\u6587\u4ef6\u60a8\u5c31\u81ea\u5df1\u5199\u5427 \n\n#define lson i*2,l,mid\n#define rson i*2+1,mid+1,r\n#define ls i*2\n#define rs i*2+1\n\nusing namespace std;\n\nint n,m,a[200500];\n\nstruct tree{\n\tint l,r,ope,clo,cg;\n}t[800400];\n\nvoid build_tree(int i,int l,int r)\n{\n\tt[i].l=l;\n\tt[i].r=r;\n\tif(l==r) \n\t{\n\t\tt[i].clo=!a[l];  //\u7531\u4e8e\u53ea\u67090 1\u4e24\u79cd\u72b6\u6001 \uff010=1 \n\t\tt[i].ope=a[l];\n\t\treturn ;\n\t}\n\tint mid=(l+r)/2;\n\tbuild_tree(lson);\n\tbuild_tree(rson);\n\tt[i].clo=t[ls].clo+t[rs].clo;\n\tt[i].ope=t[ls].ope+t[rs].ope;\n\treturn ;\n}\n\nvoid pushdown(int i)\n{\n\tif(!t[i].cg) return ;\n\tt[i].cg=0;\n\tt[ls].cg^=1;   //\u8bb0\u5f97\u6807\u8bb0\u4e0b\u4f20 \u5f02\u6216\u4e24\u6b21==\u4e0d\u5f02\u6216 \n\tt[rs].cg^=1;\n\tswap(t[ls].clo,t[ls].ope);\n\tswap(t[rs].clo,t[rs].ope);\n}\n\nvoid change_tree(int i,int l,int r,int x,int y)\n{\n\tif(l>=x&&r<=y)\n\t{\n\t\tt[i].cg^=1;\n\t\tswap(t[i].ope,t[i].clo);  //\u4ea4\u6362\u4e00\u4e0b\u5c31\u597d\u4e86 \n\t\treturn ;\t\n\t}\n\tpushdown(i);\n\tint mid=(l+r)/2;\n\tif(x<=mid) change_tree(lson,x,y);\n\tif(y>mid) change_tree(rson,x,y);\n\tt[i].clo=t[ls].clo+t[rs].clo; //\u6bcf\u6b21pushdown\u8bb0\u5f97\u52a0\u4e0a\u8fd9\u53e5\u8bdd \n\tt[i].ope=t[ls].ope+t[rs].ope;\n\treturn ;\n}\n\nint ask_ope_tree(int i,int l,int r,int x,int y)\n{\n\tif(l>=x&&r<=y) return t[i].ope;\n\tpushdown(i);\n\tint mid=(l+r)/2;\n\tint ans=0;\n\tif(x<=mid) ans+=ask_ope_tree(lson,x,y);\n\tif(y>mid) ans+=ask_ope_tree(rson,x,y);\n\tt[i].clo=t[ls].clo+t[rs].clo;  //\u8fd9\u6bb5\u8bdd\u8bb0\u5f97\u52a0\u4e0a \n\tt[i].ope=t[ls].ope+t[rs].ope;\n\treturn ans;\n}\n\nint main()\n{\n\tint i,j;\n\tscanf(\"%d %d\\n\",&n,&m);  //\u8bb0\u5f97\u8bfb\u5165\u7a7a\u683c \n\tfor(i=1;i<=n;i++)\n\t{\n\t\tchar t1;\n\t\tscanf(\"%c\",&t1);\n\t\ta[i]=t1-'0';\n\t}\n\tbuild_tree(1,1,n);\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tint t1,t2,t3;\n\t\tscanf(\"%d %d %d\",&t1,&t2,&t3);\n\t\tif(t1==0) change_tree(1,1,n,t2,t3);\n\t\telse printf(\"%d\\n\",ask_ope_tree(1,1,n,t2,t3));\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1564107132,
        "uid": 38636,
        "name": "\u5bd2\u51b0\u5927\u5927",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2574 \u3010XOR\u7684\u827a\u672f\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u7ebf\u6bb5\u6811\u88f8\u9898\n\n\u9996\u5148\u7531\u4e8e $xor$ \u8fd0\u7b97\u5177\u6709\u4ea4\u6362\u5f8b\u548c\u7ed3\u5408\u5f8b\uff0c\u6240\u4ee5 $lazy$ \u6807\u5fd7\u53ef\u4ee5\u5411\u4e0b\u4f20\u9012\uff0c\u5373 $lazy[child] = lazy[child]$ $xor$ $lazy[root]$\uff0c\u5e76\u4e14\u53ea\u6709 $0$ \u548c $1$ \u4e24\u79cd\u72b6\u6001\u3002\n\n\u7531\u4e8e\u6570\u7ec4\u4e2d\u53ea\u6709 $0$ \u548c $1$ \uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u7ef4\u62a4\u533a\u95f4\u548c\u5c31\u80fd\u7ef4\u62a4\u533a\u95f4\u4e2d $1$ \u7684\u6570\u91cf\u3002\u5047\u8bbe\u4e00\u4e2a\u533a\u95f4\u548c\u4e3a $n$ \uff0c\u5219\u5bf9\u8fd9\u4e2a\u533a\u95f4 $xor$ $1$ \uff08\u5373\u6bcf\u4e2a\u6570\u53d6\u53cd\uff09\u540e\uff0c\u533a\u95f4\u548c\u4e3a $len-n$\u3002\n\n\u7531\u6b64\u6211\u4eec\u4fbf\u53ef\u4ee5\u63a8\u51fa\u5177\u4f53\u4ee3\u7801\u4e86\u3002\n\n------------\n\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\n#define INF_MAX 0x3f3f3f3f\n#define Arr_MAX 200001\ntypedef long long ll;\n\nll read() { //\u5feb\u8bfb\n    ll s=0,w=1; char ch=getchar();\n    while (ch<'0'||ch>'9') {if (ch=='-') w=-1; ch=getchar();}\n    while (ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n    return s*w;\n}\n\nll a[Arr_MAX],segtree[5*Arr_MAX],lazy[5*Arr_MAX];\nint n,m; char ch;\n\nvoid build(int root,int sleft,int sright) {\n    if (sleft == sright) {\n        segtree[root] = a[sleft]; lazy[root] = 0;\n        return;\n    }\n    int mid = (sleft+sright)/2;\n    build(root*2,sleft,mid);\n    build(root*2+1,mid+1,sright);\n    segtree[root] = segtree[root*2]+segtree[root*2+1]; lazy[root] = 0;\n}\n\nvoid pushdown(int root,int left1,int right1,int left2,int right2) { //\u6b64\u5904\u4e0b\u4f20lazy\u6807\u5fd7\n    if (lazy[root] != 0) {\n        lazy[root*2] ^= lazy[root];\n        lazy[root*2+1] ^= lazy[root];\n        segtree[root*2] = (right1-left1+1)-segtree[root*2];\n        segtree[root*2+1] = (right2-left2+1)-segtree[root*2+1];\n        lazy[root] = 0;\n    }\n}\n\nvoid update(int root,int sleft,int sright,int qleft,int qright) {\n    if (sleft>qright||sright<qleft) return;\n    if (sleft>=qleft&&sright<=qright) {\n        segtree[root] = (sright-sleft+1)-segtree[root];\n        lazy[root] ^= 1;\n        return;\n    }\n    int mid = (sleft+sright)/2;\n    pushdown(root,sleft,mid,mid+1,sright);\n    update(root*2,sleft,mid,qleft,qright);\n    update(root*2+1,mid+1,sright,qleft,qright);\n    segtree[root] = segtree[root*2]+segtree[root*2+1];\n}\n\nll query(int root,int sleft,int sright,int qleft,int qright) {\n    if (sleft>qright||sright<qleft) return 0;\n    if (sleft>=qleft&&sright<=qright) return segtree[root];\n    int mid = (sleft+sright)/2;\n    pushdown(root,sleft,mid,mid+1,sright);\n    return query(root*2,sleft,mid,qleft,qright)+query(root*2+1,mid+1,sright,qleft,qright);\n}\n\nint main() {\n    ios::sync_with_stdio(false);\n    n = read(); m = read(); ch = getchar(); while (ch!='0'&&ch!='1') ch = getchar(); \n    for (int i=1;i<=n;i++) a[i] = ch-'0', ch = getchar(); //\u8fd9\u6837\u8bfb\u5b57\u7b26\u53ef\u4ee5\u907f\u514d\u6362\u884c\u548c\u591a\u4f59\u7a7a\u683c\u7684\u95ee\u9898\n    build(1,1,n);\n    for (int i=1;i<=m;i++) {\n        int q,x,y; q = read();\n        if (q == 0) {\n            x = read(); y = read();\n            update(1,1,n,x,y);\n        } else {\n            x = read(); y = read();\n            printf(\"%lld\\n\",query(1,1,n,x,y));\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1557492061,
        "uid": 31712,
        "name": "zrzluck99",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2574 \u3010XOR\u7684\u827a\u672f\u3011"
    },
    {
        "content": "^\u7684\u6027\u8d28\uff0c0\u62161^0\u4e0d\u53d8\uff0c^1\u5c31\u662f\u53d6\u53cd\uff0c\u6240\u4ee5\u53ea\u8003\u8651\u5f53\u524dlazy%2=1\u62160,0\u5c31\u8df3\u8fc7\uff0clazy\u4e0d\u7528\u6e05\u7a7a\uff0c\u56e0\u4e3a\u6bcf\u6b21\u64cd\u4f5c\u90fd\u662f^1\uff0c\u4e4b\u540e\u5b9e\u9645\u64cd\u4f5c\u65f6\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u4e00\u4e2a01\u4e32^1\u540e\u76841\u7684\u4e2a\u6570\u5c31\u662f\u5f53\u524d\u7ebf\u6bb5\u6811\u533a\u95f4\u7684\u957f\u5ea6-\u5f53\u524d\u533a\u95f4\u7684sum\uff0c\u6240\u4ee5\u6267\u884c^\u64cd\u4f5c\u65f6\uff0c\u53ea\u9700\u8981\u628asum\u66f4\u65b0\u6210\u8fd9\u4e2a\u5c31\u597d\uff0clazy\u4e0b\u653e\u4e5f\u4e00\u6837\uff0c\u5b50\u533a\u95f4\u4e5f\u662f\u8fd9\u4e48\u66f4\u65b0\n```cpp\n//By AcerMo\n#include<cmath>\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nconst int M=500500;\nstruct Tree\n{\n    int son[2],bond[2];\n    int la,asum;\n}t[M];\nint n,m;\nstring s;\nint num[M],cnt=1,rt=0;\nvoid up(int x)\n{\n    int ls=t[x].son[0];\n    int rs=t[x].son[1];\n    t[x].asum=t[ls].asum+t[rs].asum;\n    t[x].bond[0]=t[ls].bond[0];\n    t[x].bond[1]=t[rs].bond[1];\n    return ;\n}\nvoid built(int l,int r,int cur)\n{\n    if (l==r) \n    {\n        t[cur].asum=num[l];\n        t[cur].bond[0]=t[cur].bond[1]=l;\n        t[cur].son[0]=t[cur].son[1]=-1;\n        return ; \n    }\n    t[cur].son[0]=cnt++;\n    t[cur].son[1]=cnt++;\n    int mid=(l+r)>>1;\n    built(l,mid,t[cur].son[0]);\n    built(mid+1,r,t[cur].son[1]);\n    up(cur);\n    return ;\n}\nvoid down(int x)\n{\n    if (t[x].la%2==0) return ;\n    int ls=t[x].son[0];\n    int rs=t[x].son[1];\n    t[ls].asum=(t[ls].bond[1]-t[ls].bond[0]+1-t[ls].asum);\n    t[rs].asum=(t[rs].bond[1]-t[rs].bond[0]+1-t[rs].asum);\n    t[ls].la++;\n    t[rs].la++;\n    t[x].la=0;\n    return ;\n}\nvoid date(int l,int r,int val,int cur)\n{\n    if (l<=t[cur].bond[0]&&t[cur].bond[1]<=r)\n    {\n        t[cur].asum=(t[cur].bond[1]-t[cur].bond[0]+1-t[cur].asum);\n        t[cur].la++;\n        return ;\n    }\n    down(cur);\n    int mid=(t[cur].bond[0]+t[cur].bond[1])>>1;\n    if (l<=mid) date(l,r,val,t[cur].son[0]);\n    if (r>mid) date(l,r,val,t[cur].son[1]);\n    up(cur);\n    return ;\n}\nint query(int l,int r,int x)\n{\n    if (l<=t[x].bond[0]&&t[x].bond[1]<=r) return t[x].asum;\n    down(x);up(x);int tot=0;\n    int mid=(t[x].bond[0]+t[x].bond[1])>>1;\n    if (l<=mid) tot+=query(l,r,t[x].son[0]);\n    if (r>mid) tot+=query(l,r,t[x].son[1]);\n    return tot; \n}\nint main()\n{\n    scanf(\"%d %d\",&n,&m);cin>>s;\n    for (int i=1;i<=n;i++) num[i]=s[i-1]-'0';\n    built(1,n,rt);\n    while (m--)\n    {\n        int a,b,c;\n        scanf(\"%d %d %d\",&a,&b,&c);\n        if (a==0)\n        {\n            date(b,c,1,rt);\n        }\n        else cout<<query(b,c,rt)<<endl;\n    }\n    return 0;\n}\n```",
        "postTime": 1527240456,
        "uid": 71558,
        "name": "AcerMo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2574 \u3010XOR\u7684\u827a\u672f\u3011"
    },
    {
        "content": "\u53ef\u4ee5\u7528\u5206\u5757\u89e3\u51b3\uff0c\u628an\u4e2a\u6570\u5206\u6210sqrt(N)\u5757\uff0c\u6bcf\u5757sqrt(N)\u4e2a\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u5355\u72ec\u67e5\u8be2\u524d\u7aef\u548c\u540e\u7aef\u7684\u6563\u5757\uff0c\u4e2d\u95f4\u7684\u6574\u5757\u76f4\u63a5\u7528\u9884\u5148\u5904\u7406\u597d\u7684\u5757\u5185\u6574\u6570\u548c\u3002\n\n\u4fee\u6539\u7684\u65f6\u5019\u5148\u4fee\u6539\u524d\u7aef\u540e\u7aef\u7684\u6563\u5757\uff0c\u518d\u4fee\u6539\u4e2d\u95f4\u7684\u6574\u5757\uff0c\u4fee\u6539\u7684\u8fc7\u7a0b\u4e2d\u76f4\u63a5\u5c31\u53ef\u4ee5\u628a\u6bcf\u4e00\u5757\u5185\u7684\u6574\u6570\u4e00\u540c\u4fee\u6539\u4e86\uff0c\u56e0\u4e3a\u662f\u5f02\u6216\uff0c\u6240\u4ee5\u76f4\u63a5\u62ff\u5757\u6570\u7684\u4e2a\u6570-\u5f53\u524d\u5757\u5185\u6574\u6570\u548c\u5c31\u662f\u65b0\u7684\u5757\u5185\u6574\u6570\u548c\u4e86\u3002\n\n\u9644\u5e26\u5927\u5e38\u6570\u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <cmath>\nusing namespace std;\nconst int MAXN = 220000;\ninline int read(){\n\tint w = 1, data = 0; char ch = 0;\n\twhile(ch != '-' && (ch < '0' || ch > '9')) ch = getchar();\n\tif(ch == '-') w = -1, ch = getchar();\n\twhile(ch >= '0' && ch <= '9') data = data * 10 + ch - '0', ch = getchar();\n\treturn w * data;\n}\nchar str[MAXN];\nint a[MAXN], block[MAXN], sum[MAXN], tag[MAXN], fl[MAXN];\nint n, m, op;\nvoid reset(int rt){\n\tsum[rt] = 0; int r = min(rt*op, n);\n\tfor(int i = (rt-1)*op+1; i <= r; i++)\n\t\tsum[rt] += (a[i] ^ tag[rt]);\t\n}\nvoid rever(int l, int r){\n\tif(block[l] == block[r]){\n\t\tfor(int i = l; i <= r; i++) a[i] ^= 1;\n\t\treset(block[l]);\n\t}else{\n\t\tfor(int i = l; i <= (block[l])*op; i++) a[i] ^= 1;\n\t\tfor(int i = (block[r]-1)*op + 1; i <= r; i++) a[i] ^= 1;\n\t\treset(block[l]); reset(block[r]);\n\t\t\n\t}\n\tfor(int i = block[l]+1; i <= block[r]-1; i++)\n\t\tsum[i] = fl[i] - sum[i], tag[i] ^= 1;\n}\nint query(int l, int r){\n\tint ans = 0;\n\tif(block[l] == block[r]){\n\t\tfor(int i = l; i <= r; i++) \n\t\t\tans += (a[i] ^ tag[block[i]]);\n\t}else{\n\t\tfor(int i = l; i <= (block[l])*op; i++)\n\t\t\tans += (a[i] ^ tag[block[i]]);\n\t\tfor(int i = (block[r]-1)*op + 1; i <= r; i++)\n\t\t\tans += (a[i] ^ tag[block[i]]);\n\t}\n\tfor(int i = block[l]+1; i <= block[r]-1; i++)\n\t\tans += sum[i];\n\treturn ans;\n}\nint main(){\n\tn = read(); m = read(); op = sqrt(n);\n\tscanf(\"%s\",str+1);\n\tfor(int i = 1; i <= n; i++){\n\t\ta[i] = str[i] - '0';\n\t\tblock[i] = (i-1)/op+1;\n\t\tfl[block[i]]++;\n\t}\n\tfor(int i = 1; i <= block[n]; i++) reset(i);\n\tfor(int i = 1; i <= m; i++){\n\t\tint ch = read(), l = read(), r = read();\n\t\tif(ch == 0) rever(l, r);\n\t\telse printf(\"%d\\n\", query(l, r));\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1523855731,
        "uid": 30329,
        "name": "lxzy_Zby",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2574 \u3010XOR\u7684\u827a\u672f\u3011"
    },
    {
        "content": "P2574\u518d\u7ec3\u4e00\u9053\u7ebf\u6bb5\u6811\u7684\u9898\u3002\n\n\u9898\u610f\u662f\u957f\u5ea6\u4e3an\u768401\u5b57\u4e32\uff0c\u8be2\u95ee\u533a\u95f41\u7684\u4e2a\u6570\uff0c\u533a\u95f4\u66f4\u65b0\u4e3a\u5c06\u533a\u95f4\u4e2d\u7684\u6570xor 1\u3002\n\n\u4e8e\u662f\u5c31\u5f88\u6e05\u695a\u4e86\uff0c\u7531\u4e8exor 1\u5373\u5c06\u533a\u95f4\u4e2d0,1\u4e92\u6362\uff0c\u56e0\u6b64\u7ebf\u6bb5\u6811\u8282\u70b9\u5b58\u533a\u95f40\u7684\u4e2a\u6570\u548c1\u7684\u4e2a\u6570\uff0c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u548c\u3002\u53c8\u7531\u4e8exor 1\u4e24\u6b21\u5373\u4e0d\u53d8\uff0clazytag\u7684\u64cd\u4f5c\u53ea\u9700\u8981\u53d6\u53cd\u5373\u53ef\u3002\n\n\u9898\u76ee\u662fXOR\u7684\u827a\u672f\uff0c\u4e3a\u4e86\u7167\u5e94\uff0c\u4e5f\u5c1d\u8bd5\u4e86\u4e00\u4e0b\u4e00\u4e9b\u7ec6\u8282\u7684\u4f4d\u8fd0\u7b97\u5199\u6cd5\uff08\n\n\u6839rt,\u5de6\u5b50\u6811rt<<1,\u53f3\u5b50\u6811rt<<1|1\uff08\n\n```cpp\n#include<stdio.h>\n#define MAX 200005\nstruct node{\n    int zero,one;\n    int lazy;\n};\nstruct node segtree[MAX*4];\n\nchar ch[MAX];\n\nvoid swap(int *a,int *b){\n    *a^=*b;\n    *b^=*a;\n    *a^=*b;\n}\n\nvoid build(int rt,int st,int ed){\n    segtree[rt].lazy=0;\n    if(st==ed){\n        if(ch[st-1]=='1'){\n            segtree[rt].zero=0;\n            segtree[rt].one=1;\n        }\n        else{\n            segtree[rt].zero=1;\n            segtree[rt].one=0;\n        }\n        return;\n    }\n    int mid=(st+ed)>>1;\n    build(rt<<1,st,mid);\n    build(rt<<1|1,mid+1,ed);\n    segtree[rt].zero=segtree[rt<<1].zero+segtree[rt<<1|1].zero;\n    segtree[rt].one=segtree[rt<<1].one+segtree[rt<<1|1].one;\n}\n\nvoid push(int rt){\n    if(segtree[rt].lazy){\n        segtree[rt<<1].lazy^=1;\n        segtree[rt<<1|1].lazy^=1;\n        swap(&segtree[rt<<1].zero,&segtree[rt<<1].one);\n        swap(&segtree[rt<<1|1].zero,&segtree[rt<<1|1].one);\n        segtree[rt].lazy=0;\n    }\n}\n\nint query(int rt,int nst,int ned,int qst,int qed){\n    if(qst>ned||qed<nst)return 0;\n    if(qst<=nst&&qed>=ned)return segtree[rt].one;\n    int mid=(nst+ned)>>1;\n    push(rt);\n    return query(rt<<1,nst,mid,qst,qed)+query(rt<<1|1,mid+1,ned,qst,qed);\n}\n\nvoid update(int rt,int nst,int ned,int ust,int ued){\n    if(ust>ned||ued<nst)return;\n    if(ust<=nst&&ued>=ned){\n        segtree[rt].lazy^=1;\n        swap(&segtree[rt].one,&segtree[rt].zero);\n        return;\n    }\n    int mid=(nst+ned)>>1;\n    push(rt);\n    update(rt<<1,nst,mid,ust,ued);\n    update(rt<<1|1,mid+1,ned,ust,ued);\n    segtree[rt].zero=segtree[rt<<1].zero+segtree[rt<<1|1].zero;\n    segtree[rt].one=segtree[rt<<1].one+segtree[rt<<1|1].one;\n}\n\nint main(){\n    int n,m,i,type,x,y;\n    scanf(\"%d%d\",&n,&m);\n    scanf(\"%s\",ch);\n    \n    build(1,1,n);\n    \n    for(i=1;i<=m;i++){\n        scanf(\"%d%d%d\",&type,&x,&y);\n        if(type){\n            printf(\"%d\\n\",query(1,1,n,x,y));\n        }\n        else{\n            update(1,1,n,x,y);\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1521903732,
        "uid": 71624,
        "name": "Frankenstein",
        "ccfLevel": 4,
        "title": "\u3010\u7ebf\u6bb5\u6811\u3011XOR\u7684\u827a\u672f"
    },
    {
        "content": "\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u70b9[\u8fd9\u91cc](https://blog.csdn.net/A_Comme_Amour/article/details/79681126)\n\u9898\u76ee\n-\n\n[\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P2574)\n\n\u9898\u89e3\n-\n\n\u6bd4\u7ebf\u6bb5\u68112\u8fd8\u8981\u7b80\u5355\uff1b\u5f02\u6216\u7684\u64cd\u4f5c\n\n\u4ee3\u7801\n-\n\n```\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<iostream>\nusing namespace std;\nconst int maxn=1000000;\nconst int inf=1e9;\n\nint n,m,a[maxn],sum[maxn],tag[maxn];\nbool leaves[maxn];\nchar ch[maxn];\n\nvoid pushup(int rt)\n{\n\tsum[rt]=sum[rt<<1]+sum[rt<<1|1];\n}\nvoid pushdown(int rt,int tot)//tot\u5b50\u6811\u7684\u8282\u70b9\u7684\u6570\u91cf \n{\n\tif (tag[rt])\n\t{\n\t\ttag[rt<<1]^=tag[rt];\n\t\ttag[rt<<1|1]^=tag[rt];\n\t\tsum[rt<<1]=(tot-(tot>>1))-sum[rt<<1];//\u5f02\u6216\u7684\u8fd0\u7b97 \n\t\tsum[rt<<1|1]=(tot>>1)-sum[rt<<1|1];\n\t\ttag[rt]=0;\n\t}\n}\n\nvoid build_tree(int rt,int l,int r)\n{\n\tif (l==r)\n\t{\n\t\tsum[rt]=a[l]; return;\n\t}\n\tint mid=(l+r)>>1;\n\tbuild_tree(rt<<1,l,mid);\n\tbuild_tree(rt<<1|1,mid+1,r);\n\tpushup(rt);\n}\n\nvoid change(int rt,int l,int r,int L,int R)\n{\n\tif (L<=l && r<=R)\n\t{\n\t\ttag[rt]^=1;\n\t\tsum[rt]=r-l+1-sum[rt];\n\t\treturn;\n\t}\n\tpushdown(rt,r-l+1);\n\tint mid=(l+r)>>1;\n\tif (L<=mid) change(rt<<1,l,mid,L,R);\n\tif (R>mid) change(rt<<1|1,mid+1,r,L,R);\n\tpushup(rt);\n}\n\nint ques(int rt,int l,int r,int L,int R)\n{\n\tif (L<=l && r<=R) return sum[rt];\n\tpushdown(rt,r-l+1);\n\tint mid=(l+r)>>1; int ans=0;\n\tif (L<=mid) ans+=ques(rt<<1,l,mid,L,R);\n\tif (R>mid) ans+=ques(rt<<1|1,mid+1,r,L,R);\n\treturn ans;\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tscanf(\"%s\",ch+1);\n\tfor (int i=1; i<=n; i++) a[i]=ch[i]-'0';\n\tbuild_tree(1,1,n);\n\tfor (int i=1; i<=m; i++)\n\t{\n\t\tint opt,x,y; scanf(\"%d%d%d\",&opt,&x,&y);\n\t\tif (!opt) change(1,1,n,x,y);\n\t\telse printf(\"%d\\n\",ques(1,1,n,x,y));\n\t}\n\treturn 0;\n}\n```\n\n\u603b\u7ed3\n-\n\u4eca\u5929\u4e0a\u5348\u505a\u4e86\u4e24\u9053\u6c34\u9898\uff0c\u90fd\u6ca1\u67091A\n\u6211\u81ea\u5df1\u5199\u9519\u7684\u5730\u65b9\u5728\u4e8etot\u6570\u7ec4\u641e\u5f97\u51fa\u4e86\u95ee\u9898\uff0c\u5f02\u6216\u5728\u533a\u95f4\u91cc\u5c31\u662f\u603b\u6570\u51cf\u53bbsum\u503c",
        "postTime": 1521895762,
        "uid": 48036,
        "name": "\u79cb\u65e5\u79c1\u8bed",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2574 \u3010XOR\u7684\u827a\u672f\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u597d\u50cf\u6ca1\u6709\u6807\u8bb0\u6c38\u4e45\u5316\u7684\u9898\u89e3\n\n\u6807\u8bb0\u6c38\u4e45\u5316\u4e4b\u540e\u5c31\u53ef\u4ee5\u514d\u53bbpushdown\u4e86\uff0c\u53ea\u9700\u5bf9\u9014\u5f84\u6807\u8bb0\u7684\u5f71\u54cd\u8fdb\u884c\u5904\u7406\u5373\u53ef\u3002\u7406\u8bba\u4e0a\u6807\u8bb0\u6c38\u4e45\u5316\u4f1a\u6bd4\u6807\u8bb0\u4e0b\u4f20\u5feb\uff0c\u4f46\u6807\u8bb0\u6c38\u4e45\u5316\u7684\u5c40\u9650\u5728\u4e8e\u53ea\u80fd\u7ef4\u62a4\u4e0d\u4f1a\u4e92\u76f8\u5f71\u54cd\u7684\u6807\u8bb0\uff0c\u56e0\u4e3a\u5b83\u65e0\u6cd5\u5904\u7406\u6807\u8bb0\u7684\u5148\u540e\u987a\u5e8f\u3002\n\n\u53ea\u6709\u4e00\u79cd\u6807\u8bb0\u7684\u60c5\u51b5\u4e0b\u5c3d\u91cf\u5199\u6807\u8bb0\u6c38\u4e45\u5316\u5427\uff0c\u53ef\u4ee5\u907f\u514d\u88ab\u5361\u5e38\u3002\n\n\u53c2\u8003\u4ee3\u7801\u5982\u4e0b\u2193\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\n\nint n,m,p,l,r;\nbool a[1<<18],tag[1<<19];\nint num[1<<19];\n\nvoid build(int k,int l,int r){\n\tif(l==r){\n\t\tnum[k]=a[l];\n\t\treturn;\n\t}int i=k<<1,mid=(l+r)>>1;\n\tbuild(i,l,mid);\n\tbuild(i|1,mid+1,r);\n\tnum[k]=num[i]+num[i|1];\n}\n\nvoid chg(int k,int l,int r,int le,int ri){\n\tif(le<=l&&r<=ri){\n\t\ttag[k]^=1;\n\t\tnum[k]=(r-l+1)-num[k];\n\t\treturn;\n\t}int i=k<<1,mid=(l+r)>>1;\n\tif(le<=mid) chg(i,l,mid,le,ri);\n\tif(mid<ri) chg(i|1,mid+1,r,le,ri);\n\tnum[k]=num[i]+num[i|1];\n\tif(tag[k]) num[k]=r-l+1-num[k];\n}\n\nint ask(bool x,int k,int l,int r,int le,int ri){\n\tif(le<=l&&r<=ri){\n\t\tif(x) return r-l+1-num[k];\n\t\treturn num[k];\n\t}int i=k<<1,mid=(l+r)>>1;\n\tint sum=0;\n\tif(le<=mid) sum+=ask(x^tag[k],i,l,mid,le,ri);\n\tif(mid<ri) sum+=ask(x^tag[k],i|1,mid+1,r,le,ri);\n\treturn sum; \n}\n\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;++i){\n\t\tscanf(\"%1d\",&a[i]);\n\t}build(1,1,n);\n\twhile(m--){\n\t\tscanf(\"%d%d%d\",&p,&l,&r);\n\t\tif(p==0){\n\t\t\tchg(1,1,n,l,r);\n\t\t}else{\n\t\t\tprintf(\"%d\\n\",ask(0,1,1,n,l,r));\n\t\t}\n\t}return 0;\n}\n```",
        "postTime": 1521718985,
        "uid": 31293,
        "name": "Adove",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2574 \u3010XOR\u7684\u827a\u672f\u3011"
    },
    {
        "content": "\u7ebf\u6bb5\u6811\u6a21\u677f\u5957\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\n\n\n\u7ef4\u62a4\u533a\u95f4\u4e3a1\u7684\u6570\u7684\u4e2a\u6570\uff0c\u4fee\u6539\u6b21\u6570\u662f2\u7684\u500d\u6570\u7684\u65f6\u5019\u76f8\u5f53\u4e8e\u6ca1\u6709\u4fee\u6539\uff0c\u6240\u4ee5\u53ef\u4ee5\u5c06\u4fee\u6539\u6b21\u6570\u770b\u4e3a\\*-1\uff0c\u4e3a1\u65f6\u5219\u4fee\u6539\uff0c\u4e3a-1\u65f6\u5219\u6ca1\u4fee\u6539\n",
        "postTime": 1478959522,
        "uid": 681,
        "name": "worcher",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2574 \u3010XOR\u7684\u827a\u672f\u3011"
    },
    {
        "content": "\u8fd9\u5dee\u4e0d\u591a\u662f\u7ebf\u6bb5\u6811\u7684\u6a21\u677f\uff0c\u53ea\u4e0d\u8fc7\u61d2\u6807\u7b7e\u6709\u4e00\u70b9\u6539\u53d8\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n\nconst int N=200010;\n\nstruct tree{\n    int l,r,sum,n;\n    bool lazy;\n} t[4*N];\n\nint n,m;\nint A[N];\n\nvoid build(int x,int l,int r){\n    t[x].l=l; t[x].r=r;\n    t[x].n=r-l+1;\n    if(t[x].n==1){\n        t[x].sum=A[l];\n        return;\n    }\n    int mid=(l+r)>>1;\n    build(x*2,l,mid);\n    build(x*2+1,mid+1,r);\n    t[x].sum=t[x*2].sum+t[x*2+1].sum;\n    return;\n}\n\nvoid change(int x,int l,int r){\n    if(t[x].l==l&&t[x].r==r){\n        t[x].lazy=!t[x].lazy;\n        t[x].sum=t[x].n-t[x].sum;\n        return;\n    }\n    if(t[x].lazy){\n        t[x].lazy=false;\n        t[x*2].lazy=!t[x*2].lazy;\n        t[x*2+1].lazy=!t[x*2+1].lazy;\n        t[x*2].sum=t[x*2].n-t[x*2].sum;\n        t[x*2+1].sum=t[x*2+1].n-t[x*2+1].sum;\n    }\n    int mid=(t[x].l+t[x].r)>>1;\n    if(r<=mid) change(x*2,l,r);\n    else if(mid<l) change(x*2+1,l,r);\n    else{ change(x*2,l,mid); change(x*2+1,mid+1,r); }\n    t[x].sum=t[x*2].sum+t[x*2+1].sum;\n    return;\n}\n\nint query(int x,int l,int r){\n    if(t[x].l==l&&t[x].r==r) return t[x].sum;\n    if(t[x].lazy){\n        t[x].lazy=false;\n        t[x*2].lazy=!t[x*2].lazy;\n        t[x*2+1].lazy=!t[x*2+1].lazy;\n        t[x*2].sum=t[x*2].n-t[x*2].sum;\n        t[x*2+1].sum=t[x*2+1].n-t[x*2+1].sum;\n    }\n    int ans;\n    int mid=(t[x].l+t[x].r)>>1;\n    if (r<=mid) ans=query(2*x,l,r);\n    else if (mid<l) ans=query(2*x+1,l,r);\n    else ans=(query(2*x,l,mid)+query(2*x+1,mid+1,r));\n    if(t[x].lazy) ans=(r-l+1)-ans;\n    return ans;\n}\n\nint main(){\n    //freopen(\"art.in\",\"r\",stdin);\n    //freopen(\"art.out\",\"w\",stdout);\n    scanf(\"%d%d\",&n,&m);\n    for(int a=1;a<=n;++a) scanf(\"%1d\",&A[a]);\n    build(1,1,n);\n    int opt,l,r;\n    for(int a=1;a<=m;++a){\n        scanf(\"%d%d%d\",&opt,&l,&r);\n        if(!opt) change(1,l,r);\n        else printf(\"%d\\n\",query(1,l,r));\n    }\n    //fclose(stdin);\n    //fclose(stdout);\n    return 0;\n}\n```",
        "postTime": 1493992325,
        "uid": 26625,
        "name": "white945",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2574 \u3010XOR\u7684\u827a\u672f\u3011"
    },
    {
        "content": "\u76f4\u63a5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e00\u4e0b\u533a\u95f4\uff0c\u5411\u4e0b\u4f20\u9012\u6807\u8bb0\uff0c\u4fee\u6539\u5148\u7956\u8282\u70b9\u7684\u503c\u5c31\u597d\u4e86\u3002\n\npas\u4ee3\u7801\u5982\u4e0b\uff1a\n\n\n\nvar fz:array[1..1050000]of boolean;  //\u5e03\u5c14\u6570\u7ec4\u4fbf\u4e8e\u76f4\u63a5\u5224\u65ad\u7ffb\u8f6c\n\n\n\n\n\n\n\n```cpp\n    a:array[1..1050000]of longint;   //\u56db\u500d\u7a7a\u95f4\n    i,j,n,m,f,o,d,x:longint;\n    s:ansistring;\nprocedure build(l,r,k:longint);         //\u5efa\u6811\nvar mid:longint;\nbegin\n  if l=r then exit;\n  mid:=(l+r)>>1;\n  build(l,mid,2*k);\n  build(mid+1,r,2*k+1);\n  a[k]:=a[2*k]+a[2*k+1];\nend;\nprocedure down(l,r,k:longint);       //\u4f20\u9012\u6807\u8bb0\nbegin\n  if fz[k] then\n  begin\n    fz[k]:=false; a[k]:=(r-l+1)-a[k];\n    fz[2*k]:=not fz[2*k];                 //\u4e24\u6b21\u7ffb\u8f6c\u53ef\u4ee5\u89c6\u4e3a\u4e0d\u7ffb\u8f6c\n    fz[2*k+1]:=not fz[2*k+1];\n  end;\nend;\nprocedure try(l,r,k:longint);            //\u4fee\u6539\u8282\u70b9\u7684\u503c\nvar mid:longint;\nbegin\n  down(l,r,k);\n  if (o<=l)and(r<=d) then\n  begin\n    fz[k]:=not fz[k];                         \n    down(l,r,k); exit;\n  end;\n  mid:=(l+r)>>1;\n  if o<=mid then try(l,mid,2*k)\n   else down(l,mid,2*k);\n  if mid+1<=d then try(mid+1,r,2*k+1)\n   else down(mid+1,r,2*k+1);\n  a[k]:=a[2*k]+a[2*k+1];\nend;\nprocedure pd(l,r,k:longint);         //\u5224\u65ad\u8282\u70b9\u7684\u503c\nvar mid:longint;\nbegin\n  down(l,r,k);\n  if (o<=l)and(r<=d) then\n   begin inc(x,a[k]); exit; end;           //\u627e\u5230\u5c31\u76f4\u63a5\u7d2f\u8ba1\n  mid:=(l+r)>>1;\n  if o<=mid then pd(l,mid,2*k);\n  if mid+1<=d then pd(mid+1,r,2*k+1);\nend;\nbegin\n  readln(n,m); j:=1;\n  for i:=1 to 1000 do\n    if j>=n then break\n     else inc(j,j);\n  readln(s);\n  for i:=1 to n do   \n    a[j-1+i]:=ord(s[i])-ord('0');   //\u8981\u7528\u5b57\u7b26\u4e32\u5224\u65ad\u4e00\u4e0b\u8bfb\u5165\n  build(1,j,1);\n  for i:=1 to m do\n  begin\n    readln(f,o,d);\n    if f=0 then try(1,j,1)\n     else begin\n       x:=0; pd(1,j,1);\n       writeln(x);\n     end;\n  end;\nend.\n```",
        "postTime": 1484980624,
        "uid": 13413,
        "name": "ICEMAGE",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2574 \u3010XOR\u7684\u827a\u672f\u3011"
    }
]