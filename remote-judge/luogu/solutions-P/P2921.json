[
    {
        "content": "\u505a\u5b8c\u4ee5\u540e\u7c97\u7565\u7ffb\u4e86\u4e0b\u9898\u89e3\uff0c\u53d1\u73b0\u90fd\u662f $Tarjan$ \u6216\u8bb0\u5fc6\u5316\u641c\u7d22\uff0c\u603b\u4e4b\u9003\u4e0d\u51fa $dfs$\uff0c\u6240\u4ee5\u6211\u5c31\u628a\u6211\u7684\u975e\u9012\u5f52\u65b9\u6cd5\u8d21\u732e\u4e00\u4e0b\u5427\u3002\n\n\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u9053\u9898\u7528 $Tarjan$ \u662f\u5927\u6750\u5c0f\u7528\u4e86\u3002\u6b64\u9898\u4e0d\u9700\u8981\u4efb\u4f55\u7b97\u6cd5\uff0c\u4e24\u5c42\u7b80\u5355\u7684\u5faa\u73af\u5c31\u80fd\u89e3\u51b3\u3002\n\n\u9996\u5148\u6211\u4eec\u9700\u8981\u6ce8\u610f\u5230\u4e00\u70b9\uff0c\u867d\u7136\u6b64\u9898\u4e5f\u662f\u4e00\u5f20\u6709\u5411\u56fe\uff0c\u4f46\u662f\u6bcf\u4e2a\u70b9\u7684\u51fa\u5ea6\u6709\u4e14\u53ea\u6709 \u201c1\u201d\u3002\u8fd9\u8bf4\u660e\u4ec0\u4e48\uff1f\u4e0d\u9700\u8981\u9012\u5f52\uff0c\u76f4\u63a5\u6cbf\u7740\u8fd9\u6761\u552f\u4e00\u7684\u8def\u5f84\u8d70\u4e0b\u53bb\u5c31\u884c\u4e86......\n\n### \u4e00\u3001\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u65b9\u6cd5\uff0c\u6211\u4eec\u5bf9\u6bcf\u4e2a\u70b9\u8bbe\u7f6e\u4e24\u4e2a\u5c5e\u6027\uff1a\n\n1\u3001\u989c\u8272 $(color)$ \uff1a \u6b64\u8282\u70b9\u7b2c\u4e00\u6b21\u88ab\u8bbf\u95ee\u65f6\uff0c\u8fd9\u6761\u8bbf\u95ee\u4ed6\u7684\u8def\u5f84\u662f\u7531\u90a3\u4e2a\u8282\u70b9\u53d1\u51fa\u7684\uff08\u8d77\u70b9\uff09\u3002\n\n2\u3001\u65f6\u95f4\u6233 $(dfn)$ \uff1a\u6b64\u8282\u70b9\u7b2c\u4e00\u6b21\u88ab\u8bbf\u95ee\u65f6\uff0c\u4ed6\u5230\u53d1\u51fa\u8fd9\u6761\u8def\u5f84\u7684\u8d77\u70b9\u7684\u8ddd\u79bb\uff08\u53d1\u51fa\u8282\u70b9\u7684 $dfn = 0$\uff0c\u7b2c\u4e8c\u4e2a\u88ab\u8bbf\u95ee\u7684\u8282\u70b9\u7684 $dfn = 1$\uff0c\u7b2c\u4e09\u4e2a $dfn = 2$ ......\uff09\n\n\u6709\u4e86\u8fd9\u4e24\u4e2a\u5c5e\u6027\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba1\u7b97\u73af\u7684\u5927\u5c0f\uff0c\u65b9\u6cd5\u5982\u4e0b\uff1a\n\n1\u3001\u4ece\u67d0\u4e00\u8282\u70b9\u53d1\u51fa\u8def\u5f84\n\n2\u3001\u8d70\u5230\u67d0\u4e2a\u8282\u70b9\u4e0a\uff08\u5305\u62ec\u8d77\u70b9\uff09\uff0c\u5982\u679c\u8fd9\u4e2a\u8282\u70b9\u6ca1\u6709\u88ab\u67d3\u8272\uff0c\u90a3\u4e48\u67d3\u6210\u81ea\u5df1\u7684\u989c\u8272\uff0c\u5e76\u6807\u8bb0\u4e0a $dfn$\n\n3\u3001\u8d70\u5230\u67d0\u4e2a\u8282\u70b9\u4e0a\uff0c\u5982\u679c\u8fd9\u4e2a\u8282\u70b9\u5df2\u7ecf\u88ab\u67d3\u6210\u4e86\u81ea\u5df1\u7684\u989c\u8272\uff0c\u90a3\u4e48\u73af\u7684\u5927\u5c0f\u5c31\u51fa\u6765\u4e86\uff1a\u5f53\u524d\u65f6\u95f4 $(cnt)$ $-$ \u6b64\u8282\u70b9 $dfn$\n\n\u5230\u4e86\u8fd9\u4e00\u6b65\uff0c\u5b9e\u9645\u4e0a\u5df2\u7ecf\u89e3\u51b3\u4e86\u53e6\u4e00\u4e2a\u66f4\u7b80\u5355\u7684\u95ee\u9898\uff1a[NOIP2015 \u4fe1\u606f\u4f20\u9012](https://www.luogu.org/problemnew/show/P2661)\u3002 \u63a5\u4e0b\u6765\u5c31\u662f\u672c\u9898\u7279\u8272\u4e86\n\n### \u4e8c\u3001\u5bf9\u4e8e\u6bcf\u4e00\u53ea\u5976\u725b\uff08\u6216\u8005\u8bf4\u6bcf\u4e00\u4e2a\u8d77\u70b9\u3001\u989c\u8272\u3001\u8def\u5f84\uff09\uff0c\u6211\u4eec\u8bb0\u5f55\u5982\u4e0b\u4e24\u4e2a\u5c5e\u6027\uff1a\n\n1\u3001\u73af\u7684\u5927\u5c0f $(minc)$ \uff1a\u6bcf\u6761\u8def\u5f84\u6700\u7ec8\u90fd\u4f1a\u8fdb\u5165\u73af\u4e2d\uff0c\u6216\u8005\u8d77\u70b9\u672c\u8eab\u5c31\u5728\u73af\u4e2d\uff0c\u6211\u4eec\u8bb0\u5f55\u4e0b\u8fd9\u4e2a\u73af\u7684\u5927\u5c0f\u4e3a\u4e4b\u540e\u670d\u52a1\n\n2\u3001\u5165\u73af\u65f6\u95f4\u6233 $(sucdfn)$ \uff1a\u8fd9\u6761\u8def\u5f84\u4ec0\u4e48\u65f6\u5019\u4f1a\u8fdb\u5165\u73af\u4e2d\uff0c\u540c\u6837\u662f\u4e3a\u4e4b\u540e\u670d\u52a1\u7684\u4e00\u4e2a\u5c5e\u6027\n\n\u9996\u5148\u8bb2\u89e3\u4e00\u4e0b\u5982\u679c\u5f97\u5230\u8fd9\u4e24\u4e2a\u5c5e\u6027\uff1a\n\n1\u3001\u5728\u4e0a\u4e00\u8282\u4e2d\u6211\u4eec\u5df2\u7ecf\u8bb2\u4e86\u5982\u4f55\u521d\u6b65\u83b7\u53d6\u73af\u7684\u5927\u5c0f\uff0c\u5165\u73af\u65f6\u95f4\u6233\u53ea\u8981\u8bb0\u5f55\u4e3a\u90a3\u4e2a\u4ea4\u70b9\u7684\u65f6\u95f4\u6233\u5373\u53ef\n\n2\u3001\u5982\u679c\u8d70\u5230\u4e86\u4e4b\u524d\u8d70\u8fc7\u7684\u8282\u70b9\uff0c\u90a3\u4e48\u65b0\u7684\u8def\u5f84\u5fc5\u7136\u8fdb\u5165\u4e4b\u524d\u8def\u5f84\u7684\u73af\u4e2d\uff0c\u76f4\u63a5\u628a\u8fd9\u4e2a\u73af\u7684\u5927\u5c0f\u8981\u8fc7\u6765\u5c31\u884c\u4e86\u3002\u5165\u73af\u65f6\u95f4\u6233\u5219\u5206\u4e24\u79cd\u60c5\u51b5\uff1a\n\ni. \u5982\u679c\u8fd9\u4e2a\u8282\u70b9\u4e0d\u5728\u73af\u4e2d\uff0c\u201c\u539f\u8def\u5f84\u7684\u5165\u73af\u65f6\u95f4\u6233 $-$ \u539f\u8def\u5f84\u4e2d\u6b64\u8282\u70b9\u7684\u65f6\u95f4\u6233 +\u3000\u65b0\u8def\u5f84\u5f53\u524d\u65f6\u95f4\u201d\u3000\u5373\u4e3a\u65b0\u8def\u5f84\u7684\u5165\u73af\u65f6\u95f4\u6233;\n\nii. \u800c\u5982\u679c\u8fd9\u4e2a\u8282\u70b9\u5728\u73af\u4e2d\uff0c\u76f4\u63a5\u5c31\u662f\u65b0\u8def\u5f84\u5f53\u524d\u65f6\u95f4\u3002\n\niii. \u5224\u65ad\u65b9\u6cd5\u5219\u662f \u201c\u539f\u8def\u5f84\u7684\u5165\u73af\u65f6\u95f4\u6233 $-$ \u539f\u8def\u5f84\u4e2d\u6b64\u8282\u70b9\u7684\u65f6\u95f4\u6233\u201d \u662f\u5426\u5927\u4e8e $0$\uff0c\u7efc\u5408\u8d77\u6765\u5c31\u662f\uff1a\u201c$max($\u539f\u8def\u5f84\u7684\u5165\u73af\u65f6\u95f4\u6233 $-$ \u539f\u8def\u5f84\u4e2d\u6b64\u8282\u70b9\u7684\u65f6\u95f4\u6233$, \\;0)$ +\u3000\u65b0\u8def\u5f84\u5f53\u524d\u65f6\u95f4\u201d\n\n### \u4e09\u3001\u628a\u4e0a\u9762\u7684\u95ee\u9898\u90fd\u89e3\u51b3\u4e86\uff0c\u51fa\u7b54\u6848\u5c31\u592a\u7b80\u5355\u4e86\uff1a\n\n1\u3001\u7b2c\u4e00\u8282\u4e2d\u7684\u53d1\u73b0\u73af\u7684\u5927\u5c0f\u4e4b\u540e\uff0c\u7b54\u6848\u5c31\u662f\u201c\u5f53\u524d\u65f6\u95f4\u201d\n\n2\u3001\u7b2c\u4e8c\u8282\u4e2d\u4e0e\u4e4b\u95f4\u8d70\u8fc7\u7684\u8282\u70b9\u76f8\u9047\u5e76\u8bb0\u5f55\u5b8c\u4fe1\u606f\u540e\uff0c\u7b54\u6848\u662f \u201c\u5165\u73af\u65f6\u95f4\u6233 + \u73af\u7684\u5927\u5c0f\u201d\n\n\u81f3\u6b64\u672c\u9898\u5df2\u7ecf\u5b8c\u7f8e\u89e3\u51b3\uff0c\u4e14\u6ca1\u6709\u7528\u5230\u4efb\u4f55\u7b97\u6cd5\u3002\u8d34\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nconst int maxn = 100000 + 5;\n\nint n;\nint nxt[maxn];\nint color[maxn];\nint sucdfn[maxn];\nint dfn[maxn];\nint minc[maxn];\n\nvoid Init()\n{\n\tcin >> n;\n\tfor(int i = 1; i <= n; ++i) cin >> nxt[i];\n\tmemset(color, 0, sizeof(color));\n\tmemset(dfn, 0, sizeof(dfn));\n\tmemset(minc, 0, sizeof(minc));\n}\n\nvoid Solve()\n{\n\tfor(int cow = 1; cow <= n; ++cow) \n\t{\n\t\tfor(int i = cow, cnt = 0; ; i = nxt[i], ++cnt)\n\t\t{\n\t\t\tif(!color[i]) {\n\t\t\t\tcolor[i] = cow;\n\t\t\t\tdfn[i] = cnt;\n\t\t\t}\n\t\t\telse if(color[i] == cow) {\n\t\t\t\tminc[cow] = cnt - dfn[i];\n\t\t\t\tsucdfn[cow] = dfn[i];\n\t\t\t\tcout << cnt << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tminc[cow] = minc[color[i]];\n\t\t\t\tsucdfn[cow] = cnt + max(sucdfn[color[i]] - dfn[i], 0);\n\t\t\t\tcout << sucdfn[cow] + minc[cow] << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n} \n\nint main()\n{\n\tInit();\n\tSolve();\n\treturn 0;\n}\n```",
        "postTime": 1529826730,
        "uid": 55956,
        "name": "cjrsacred",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2921 \u3010[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    },
    {
        "content": "##solution\n\n###\u9996\u5148\u770b\u5230\u8fd9\u9898\uff0c\u9898\u76ee\u8981\u6c42\u56de\u5230\u7ecf\u8fc7\u7684\u70b9\uff0c\u90a3\u4e48\u5f88\u660e\u663e\u662f\u5f62\u6210\u4e86\u4e00\u4e2a\u73af\uff0c\u90a3\u4e48\u5f88\u5bb9\u6613\u60f3\u5230\u662fTarjan\uff0c\u4ed4\u7ec6\u4e00\u60f3\uff0c\u4e00\u4e2a\u70b9\u53ea\u6709\u4e24\u79cd\u60c5\u51b5\uff0c\u8981\u4e48\u5728\u73af\u4e2d\uff0c\u8981\u4e48\u901a\u8fc7\u4e00\u6761\u94fe\u4e0e\u73af\u76f8\u63a5\u3002\u90a3\u4e48\u601d\u8def\u4fbf\u5f88\u660e\u663e\u4e86\uff0c\u5148\u7f29\u70b9\uff0c\u8bb0\u5f55\u5404\u4e2a\u73af\u7684\u5927\u5c0f\uff0c\u5728\u73af\u5185\u7684\u70b9\u7684Ans\u503c\u4fbf\u662f\u73af\u7684\u5927\u5c0f\uff0c\u5728\u73af\u5916\u7684\u70b9\u7684Ans=\u70b9\u5230\u73af\u7684\u6700\u77ed\u8ddd\u79bb+\u73af\u7684\u5927\u5c0f\u3002\n\u4f46\u6ce8\u610f\u8981\u7279\u5224\u73af\u5927\u5c0f\u4e3a1\u7684\u60c5\u51b5\u3002\n##\u8d34\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int Maxn=100005;\nint next[Maxn];\nint ans[Maxn];\nint head[Maxn],cnt;\nstruct road\n{\n    int to,next;\n}e[Maxn*2];\nvoid add(int a,int b)\n{\n    cnt++;\n    e[cnt].to=b;\n    e[cnt].next=head[a];\n    head[a]=cnt;\n}\nint sum,color[Maxn],low[Maxn],ins[Maxn],tim[Maxn],sta[Maxn],top=1,col;\nint Lemon[Maxn];\nvoid Tarjan(int x)\n{\n    sum++;\n    tim[x]=low[x]=sum;\n    sta[top]=x;\n    top++;\n    ins[x]=1;\n    for(int i=head[x];i!=0;i=e[i].next)\n    {\n        if(ins[e[i].to]==0)\n        {\n            Tarjan(e[i].to);\n            low[x]=min(low[x],low[e[i].to]);\n        }\n        else if(ins[e[i].to]==1)\n             \tlow[x]=min(low[x],tim[e[i].to]);\n    }\n    if(tim[x]==low[x])\n    {\n        col++;\n        do\n        {\n            top--;\n            color[sta[top]]=col;\n            ins[sta[top]]=-1;\n        }while(sta[top]!=x);\n    }\n    return ;\n}\nvoid search(int root,int x,int step)\n{\n    if(ans[x]!=0) {\n                    ans[root]=ans[x]+step;\n                    return ;\n                  }\n    else search(root,next[x],step+1);\n}\nint main()\n{\n    int n;\n    cin>>n;\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&next[i]);\n        add(i,next[i]);\n        if(next[i]==i) ans[i]=1;//\u6ce8\u610f\u7279\u5224\u73af\u4e3a1\u7684\u60c5\u51b5\u3002\n    }\n    for(int i=1;i<=n;i++)\n        if(ins[i]==0) Tarjan(i);\n    for(int i=1;i<=n;i++)\n    \tLemon[color[i]]++;//\u8bb0\u5f55\u73af\u7684\u5927\u5c0f\n    for(int i=1;i<=n;i++)\n    \tif(Lemon[color[i]]!=1) ans[i]=Lemon[color[i]];//\u5904\u7406\u5728\u73af\u5185\u7684\u70b9\n    for(int i=1;i<=n;i++)\n    \tif(ans[i]==0) search(i,next[i],1);//\u5904\u7406\u5728\u73af\u5916\u7684\u70b9\u3002\n    for(int i=1;i<=n;i++)\n    \tprintf(\"%d\\n\",ans[i]);\n    return 0;\n}\n```",
        "postTime": 1529411028,
        "uid": 26317,
        "name": "_Lemon_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2921 \u3010[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    },
    {
        "content": "\u6c34\u8fc7\u8fd9\u9898\u4e00\u770b\u9898\u89e3\u53d1\u73b0\u5927\u90e8\u5206\u90fd\u662fTarjan\u4e4b\u7c7b~~\u6211\u4e0d\u4f1a~~\u590d\u6742\u7684\u7b97\u6cd5\uff0c\u8981\u4e0d\u5c31\u662f\u4e00\u4e9b\u4e0d\u591f\u4f18\u826f\u3001\u4e0d\u591f\u6613\u61c2\u7684\u7b97\u6cd5\u3002\u4e8e\u662f\u53d1\u8fd9\u7bc7\u9898\u89e3\uff0c\u5e0c\u671b\u5e2e\u52a9\u4e00\u4e0b\u548c\u6211\u4e00\u6837\u7684\u849f\u84bb\u3002\n\n---\n\n\n\u5728\u505a\u63d0\u9ad8\u8bd5\u70bc\u573a\u65f6\u770b\u5230\u4e86\u8fd9\u9898:\n\n![shilianchang](https://s2.ax1x.com/2019/07/30/eG4szD.png)\n\n\uff08~~\u5b9e\u5728\u627e\u4e0d\u5230\u6ca1\u6709\u901a\u8fc7\u7684\u56fe\u7247\u4e86~~\uff09\n\n\u4f5c\u4e3a\u4e00\u4e2a\u677f\u5757\u91cc\u7684\u9898\uff0c\u81ea\u7136\u662f\u8fde\u7740\u505a\u7684\uff0c\u4e8e\u662f\u4ea7\u751f\u4e86\u4e00\u79cd\u795e\u5947\u7684\u60ef\u6027\u601d\u7ef4\u3002\u5728\u770b\u5230\u9898\u9762\u7684\u7b2c\u4e00\u773c\u5c31\u53d1\u73b0\u8fd9\u9053\u9898\u4e0e[P2611 \u4fe1\u606f\u4f20\u9012](https://www.luogu.org/problem/P2661)\u5341\u5206\u76f8\u50cf\uff0c\u5c31\u5c1d\u8bd5\u4f7f\u7528\u4e0e\u4fe1\u606f\u4f20\u9012\u7c7b\u4f3c\u7684\u65b9\u6cd5\u6765\u6c42\u89e3\u3002\n\n\u6839\u636e\u9898\u610f\uff0c\u4e00\u53ea\u5976\u725b\u505c\u6b62\u7684\u6761\u4ef6\u662f\u6765\u5230\u5979\u6240\u7ecf\u8fc7\u8fc7\u7684\u623f\u95f4\uff0c\u6240\u4ee5\u5976\u725b\u60f3\u8981\u505c\u4e0b\u6765\u5fc5\u987b\u8981\u627e\u5230\u4e00\u4e2a\u73af\u3002\u6211\u4eec\u4ece\u4e00\u4e2a\u70b9\u5f00\u59cb\u641c\u7d22\u7684\u65f6\u5019\u7528s\u6570\u7ec4\u8bb0\u5f55\u4e0b\u4f9d\u6b21\u5230\u8fbe\u6bcf\u4e2a\u623f\u95f4\u7684\u7cd6\u679c\u6570\u5e76\u7528vis\u6570\u7ec4\u8bb0\u5f55\u8bbf\u95ee\u8fc7\u7684\u623f\u95f4\uff0c\u5728\u627e\u5230\u5df2\u7ecf\u8bbf\u95ee\u8fc7\u7684\u623f\u95f4\u7684\u65f6\u5019\uff0c\u7528\u73b0\u5728\u5230\u8fbe\u8fd9\u4e2a\u623f\u95f4\u5e94\u8be5\u5f97\u5230\u7684\u7cd6\u679c\u6570s[n]\u51cf\u53bb\u5df2\u7ecf\u4e0a\u6b21\u6765\u5230\u65f6\u5f97\u5230\u7684\u7cd6\u679c\u6570s[m]\uff0c\u7528h\u6570\u7ec4\u8bb0\u5f55\u4e0b\u6765\uff0c\u5c31\u53ef\u4ee5\u5f97\u77e5\u8fd9\u4e2a\u73af\u4e0a\u83b7\u5f97\u7684\u7cd6\u679c\u6570\u3002\n\n```cpp\nvoid dfs(int now,int nowc)\n{\n    if(vis[now]==true) //\u5982\u679c\u5df2\u7ecf\u8bbf\u95ee\u8fc7\n    {\n        h[now]=nowc-s[now]; //\u73af\u4e0a\u7684\u7cd6\u679c\u6570\n        return;\n    }\n    vis[now]=true; //\u8bb0\u5f55\u8bbf\u95ee\u8fc7\n    s[now]=nowc; //\u8bb0\u5f55\u73b0\u5728\u7684\u7cd6\u679c\u6570\n    dfs(a[now],nowc+1);\n    return;\n}\n```\n\u90a3\u8bb0\u5f55\u4e0b\u73af\u4e0a\u7684\u7cd6\u679c\u6570\u6709\u4ec0\u4e48\u7528\u5462\uff1f\u4f60\u770b\u8fd9\u91cc\u6709\u4e00\u4e2a\u53c8\u5927\u53c8\u5706\u7684\u73af\uff1a\n\n![huan](https://s2.ax1x.com/2019/07/30/eGT4BQ.jpg)\n\n\u56e0\u4e3a\u4e00\u4e2a\u623f\u95f4\u901a\u5411\u7684\u623f\u95f4\u90fd\u662f\u552f\u4e00\u7684\uff0c\u4e0d\u96be\u53d1\u73b0\u4e00\u4f46\u6765\u5230\u73af\u4e0a\u7684\u4efb\u4f55\u4e00\u4e2a\u623f\u95f4\uff0c\u5fc5\u5b9a\u4f1a\u7ed5\u8fd9\u4e2a\u73af\u4e00\u5708\u56de\u5230\u539f\u70b9\u3002\u5219\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u73af\u4e0a\u7684\u623f\u95f4\uff0c\u4e4b\u540e\u4f1a\u83b7\u5f97\u7684\u7cd6\u679c\u6570\u5c31\u662f\u786e\u5b9a\u7684\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u8fd9\u4e2a\u7279\u70b9\uff0c\u6807\u8bb0\u73af\u4e0a\u7684\u6bcf\u4e00\u4e2a\u623f\u95f4\uff0c\u4e00\u4f46\u5230\u8fbe\u8fd9\u4e9b\u623f\u95f4\u5c31\u76f4\u63a5\u8fd4\u56de\u73af\u4e0a\u7684\u7cd6\u679c\u6570\u3002\n\n```cpp\nint dfs(int now,int nowc)\n{\n    if(h[now]!=0) return nowc-1+h[now]; //\u5982\u679c\u8fd9\u4e2a\u623f\u95f4\u5728\u73af\u4e0a\uff0c\u76f4\u63a5\u8fd4\u56de\u73af\u4e0a\u7cd6\u679c\u6570\n    if(vis[now]==true)\n    {\n        h[now]=nowc-s[now];\n        flag=now; //\u8bb0\u5f55\u73b0\u5728\u73af\u4e0a\u7684\u7ec8\u70b9\n        return nowc-1; //\u8fd4\u56de\u73b0\u5728\u7684\u7cd6\u679c\u6570\n    }\n    vis[now]=true;\n    s[now]=nowc;\n    int ans=dfs(d[now],nowc+1); //\u56e0\u4e3a\u8fd8\u9700\u8981\u6807\u8bb0\u6240\u4ee5\u4e0d\u76f4\u63a5\u8fd4\u56de\u503c\n    if(flag!=0) //\u5982\u679c\u623f\u95f4\u8fd8\u5728\u73af\u4e0a\n    {\n        if(now==flag) flag=0; //\u5982\u679c\u56de\u5230\u8d77\u70b9\uff0c\u5c31\u6e05\u7a7a\u8bb0\u5f55\n        else h[now]=h[flag]; //\u5426\u5219\u6807\u8bb0\u8fd9\u4e2a\u623f\u95f4\u5728\u73af\u4e0a\n    }\n    vis[now]=false //\u6e05\u9664\u8bb0\u5f55\uff0c\u7701\u597d\u591a\u4e2amemset()\n    return ans;\n}\n```\n\u7136\u540e\u5f00\u5f00\u5fc3\u5fc3\u4ea4\u4e00\u53d1\u3002\n\n![tle](https://s2.ax1x.com/2019/07/30/eG7IKO.png)\n\n![heiren](https://s2.ax1x.com/2019/07/30/eG7HVH.jpg)\n\n\u597d\u50cf\u6709\u4e9b\u4e0d\u5bf9\u52b2\uff0c\u679c\u7136\u84dd\u9898\u4e0d\u662f\u90a3\u4e48\u597d\u6c34\u7684\u3002\u3002\u3002\u4ed4\u7ec6\u4e00\u60f3\u539f\u56e0\u5e94\u8be5\u662f\u53ef\u80fd\u51fa\u73b0\u6709\u597d\u591a\u5c0f\u73af\u7684\u60c5\u51b5\uff0c\u8fd9\u6837\u7684\u60c5\u51b5\u4e0b\u57fa\u672c\u5c31\u7b49\u540c\u4e8e\u66b4\u529b\u3002\n\n\u4e8e\u662f\u6211\u5f00\u52a8\u6211\u7684\u5c0f\u8111\u74dc\uff0c\u53d1\u73b0TLE\u7684\u539f\u56e0\u6b63\u662f\u601d\u8003\u7684\u4e0d\u591f\u5168\u9762\u3002\u65e2\u7136\u4e00\u4e2a\u623f\u95f4\u901a\u5411\u7684\u623f\u95f4\u662f\u552f\u4e00\u7684\uff0c\u90a3\u4e48\u6765\u5230\u4efb\u610f\u4e00\u4e2a\u623f\u95f4\uff0c\u63a5\u4e0b\u6765\u7684\u7ed3\u5c40\u90fd\u662f\u56fa\u5b9a\u54d2\uff01\uff01\uff01\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u5728\u56de\u6eaf\u7684\u65f6\u5019\u5bf9\u4e8e\u4e0d\u5728\u73af\u4e0a\u7684\u623f\u95f4\u8bb0\u5f55\u4e0b\u4e4b\u540e\u83b7\u5f97\u7684\u7cd6\u679c\u6570\uff0c\u5728\u4e0b\u4e00\u6b21\u5230\u8fbe\u7684\u65f6\u5019\u76f4\u63a5\u8fd4\u56de\u5373\u53ef\u3002\n\n```cpp\nint dfs(int now,int nowc)\n{\n    if(h[now]!=0) return nowc-1+h[now];\n    if(vis[now]==true)\n    {\n        h[now]=nowc-s[now];flag=now;\n        return nowc-1;\n    }\n    vis[now]=true;s[now]=nowc;\n    int ans=dfs(d[now],nowc+1);\n    if(flag!=0)\n    {\n        if(now==flag) flag=0;\n        else h[now]=h[flag];\n    }\n    else h[now]=h[d[now]]+1; //\u5982\u679c\u4e0d\u5728\u73af\u4e0a\u5c31\u8bb0\u5f55\u4e0b\u4e00\u4e2a\u623f\u95f4\u7684\u7cd6\u679c\u6570\u52a01\n    vis[now]=false;\n    return ans;\n}\n```\n\n\u8f7b\u8f7b\u7684\u6572\u4e0a\u4e00\u884c\u4ee3\u7801\uff0c\u518d\u4e00\u6b21\u63d0\u4ea4\u3002\n\n![ac](https://s2.ax1x.com/2019/07/30/eGOvDK.png)\n\n\u8fd9\u56de\u5c31\u8212\u670d\u4e86\uff0c\u6bd4\u4e4b\u524d\u9ad8\u5230\u4e0d\u77e5\u9053\u54ea\u91cc\u53bb\u4e86\u3002\u5fcd\u4e0d\u4f4f\u770b\u4e86\u4e00\u53d1\u6700\u4f18\u89e3\uff0c\u7ed3\u679c\u53d1\u73b0\u7adf\u7136\u53ea\u6392\u5728\u7b2c9\u9875\uff1f\u4ed4\u7ec6\u4e00\u770b\u524d\u9762\uff0c\u7adf\u7136\u90fd\u52a0\u5feb\u8bfb\u548c\u5f00O2\uff0c\u54fc\u54fc\uff0c\u90a3\u5c31\u7531\u4e0d\u5f97\u6211\u4e86\u3002\u7ecf\u8fc7\u4e00\u756a\u5c1d\u8bd5\uff0c\u7ec8\u4e8e\u641e\u5230\u4e86\u7b2c2\u9875\u7684\u7b2c\u4e00\u4e2a\uff0c\u624d\u6562\u6765\u53d1\u9898\u89e3\u3002\n\n\u5b8c\u6574\u4ee3\u7801\n\n```cpp\n// \u5feb\u8bfb\u8bf7\u81ea\u884c\u6dfb\u52a0\n#include <iostream>\n#include <cstdio>\nusing namespace std;\nint n,d[100008],s[100008],h[100008],flag;\nbool vis[100008];\nint dfs(int now,int nowc)\n{\n    if(h[now]!=0) return nowc-1+h[now];\n    if(vis[now]==true)\n    {\n        h[now]=nowc-s[now];flag=now;\n        return nowc-1;\n    }\n    vis[now]=true;s[now]=nowc;\n    int ans=dfs(d[now],nowc+1);\n    if(flag!=0)\n    {\n        if(now==flag) flag=0;\n        else h[now]=h[flag];\n    }\n    else h[now]=h[d[now]]+1;\n    vis[now]=false;\n    return ans;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++) scanf(\"%d\",&d[i]);\n    for(int i=1;i<=n;i++) printf(\"%d\\n\",dfs(i,1));\n    return 0;\n}\n```",
        "postTime": 1564474121,
        "uid": 103440,
        "name": "\u4e00\u5251\u7f25\u7f08",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2921 [USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm"
    },
    {
        "content": "\u8003\u8651\u5230\u8fd9\u4e2a\u56fe\u6bcf\u4e2a\u70b9\u53ea\u6709\u4e00\u6761\u51fa\u8fb9\uff0c\u53ef\u4ee5\u628a\u626b\u51fa\u7b54\u6848\u7684\u601d\u8def\u7b80\u5316\u4e00\u4e0b\uff0c\u5206**\u7b80\u5355\u73af**\u548c**\u94fe**\u7a0d\u5fae\u8ba8\u8bba\u4e00\u4e0b\uff0c\u53ef\u4ee5\u8f83\u5927\u7a0b\u5ea6\u51cf\u5c0f\u4ee3\u7801\u91cf\u3002\n```\n#include<cstdio>\n#include<iostream>\nusing namespace std;\nconst int N=1e5+5;\nint n,to[N],rd[N],w[N],dep[N],mk[N];char vis[N],ins[N];\nint dfs(int x){\n    int t=to[x];vis[x]=ins[x]=1;\n    if(!vis[t]){dep[t]=dep[x]+1;w[x]=dfs(t);w[x]+=(mk[t]?(mk[x]=(mk[x]!=2?1:0),0):1);}\n    else if(ins[t])w[x]=dep[x]-dep[t]+1,mk[x]=1,mk[t]=(x==t?0:2);\n    else w[x]=w[t]+1;\n    ins[x]=0;return w[x];\n}\nint main(){\n    ios::sync_with_stdio(false);cin>>n;int x;\n    for(int i=1;i<=n;++i)cin>>to[i],++rd[to[i]];\n    for(int i=1;i<=n;++i)if(!rd[i])w[i]=1,dfs(i);\n    for(int i=1;i<=n;++i)if(!vis[i])dfs(i);//totally a cycle\n    for(int i=1;i<=n;++i)cout<<w[i]<<endl;\n    return 0;\n}\n```\n~~\u8fd9\u4e48\u70b9\u4ee3\u7801\u6211\u5c45\u7136\u8c03\u4e86\u4e00\u4e0b\u5348~~",
        "postTime": 1531998809,
        "uid": 8270,
        "name": "backup_noob",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2921 \u3010[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    },
    {
        "content": "\u505a\u6cd5\u7c7b\u4f3c\u4e8eNOIP2015 D1T2 message\u3002\n\n\u62d3\u6251\u6392\u5e8f\u5220\u94fe \u2192 \u5bf9\u73af\u4e0a\u7684\u70b9\u8ba1\u7b97\u7b54\u6848 \u2192 dfs\u8ba1\u7b97\u5176\u4ed6\u70b9\u7684\u7b54\u6848\u3002\n\n\u73af\u4e0a\u7684\u70b9\u7b54\u6848\u90fd\u4e00\u6837\uff0c\u53ef\u4ee5\u4e00\u904ddfs\u8dd1\u51fa\u6765\uff1b\n\n\u5176\u4ed6\u70b9\u7684\u7b54\u6848\u5728dfs\u8fd4\u56de\u7684\u65f6\u5019+1\u5373\u53ef\u3002\n\n\u5b9e\u73b0\u7ec6\u8282\u8be6\u89c1\u4ee3\u7801\u3002\n\n\n```cpp\n#include <cstdio>\n#define maxn 100010\n\nint next[maxn], in[maxn], ans[maxn];\nbool vis[maxn];\n\nvoid del(int cur) {\n    vis[cur] = true;\n    in[next[cur]]--;\n    if(!in[next[cur]]) del(next[cur]);\n}\n\nint calccircle(int cur, int depth) {\n    ans[cur] = depth;\n    if(ans[next[cur]]) return depth;\n    else return ans[cur] = calccircle(next[cur], depth + 1);\n}\n\nint calc(int cur) {\n    if(ans[cur]) return ans[cur];\n    else return ans[cur] = calc(next[cur]) + 1;\n}\n\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n    for(int i = 1; i <= n; i++) scanf(\"%d\", next + i), in[next[i]]++;\n    for(int i = 1; i <= n; i++) if(!in[i] && !vis[i]) del(i);\n    for(int i = 1; i <= n; i++) if(in[i] && !ans[i]) calccircle(i, 1);\n    for(int i = 1; i <= n; i++) if(!in[i] && !ans[i]) calc(i);\n    for(int i = 1; i <= n; i++) printf(\"%d\\n\", ans[i]);\n}\n```",
        "postTime": 1516106664,
        "uid": 21421,
        "name": "pantw",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2921 \u3010[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    },
    {
        "content": "# P2921 \u5728\u519c\u573a\u4e07\u5723\u8282 \u9898\u89e3\n## \u5e76\u67e5\u96c6 \u9898\u89e3\n### \u7136\u53d1\u73b0\u9898\u89e3\u90fd\u662f$Tarjan$ ~~\u800c\u672c\u4eba\u5e76\u4e0d\u4f1a\u5199\uff08\u8fd9\u5c31\u662f\u8fd9\u7bc7\u9898\u89e3\u7684\u6765\u5386\uff09~~\n\u9644\u8d60\u5e76\u67e5\u96c6\u6a21\u677f\u9898\uff1a[[\u6a21\u677f]\u5e76\u67e5\u96c6](https://www.luogu.org/problemnew/show/P3367)\n\nPart 1\uff1a\u9898\u76ee\u5206\u6790\n------------\n\n- \u770b\u5230\u8fd9\u4e2a\u9898\u76ee\uff0c\u6bcf\u4e2a\u623f\u95f4\u90fd\u4f1a\u5bf9\u5e94\u4e00\u4e2a\u6240\u8981\u53bb\u7684\u623f\u95f4\uff0c\u8bf4\u660e**\u8fd9\u662f\u4e00\u5f20\u6709\u5411\u56fe\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u7406\u89e3\u6210\u4e00\u7247\u5e26\u73af\u7684\u68ee\u6797**\u3002\u65e2\u7136\u8fd9\u91cc\u8bf4\u5230\u4e86\u73af\uff0c\u90a3\u4e48\u5f88\u81ea\u7136\u5730\u60f3\u5230$Tarjan$\uff0c**\u4f46\u662f\uff0c\u5e76\u67e5\u96c6\u4e0d\u4e5f\u662f\u53ef\u4ee5\u6c42\u73af\u7684\u5417\uff1f**\n\n\u5e76\u67e5\u96c6\u53ef\u4ee5\u786c\u5957\uff0c\u4f46\u662f\u6211\u4eec\u9700\u8981\u53e6\u5f00\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u8fd9\u4e2a\u8282\u70b9\u7684\u7236\u8282\u70b9\uff0c\u8fd9\u6837\uff0c\u5728\u6211\u4eec\u627e\u5230\u73af\u4e4b\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u539f\u6837\u9000\u56de\uff0c\u4f9d\u6b21\u8d4b\u503c\u3002\n\n**\u56e0\u4e3a\u5728\u4e00\u4e2a\u73af\u4e0a\u7684\u623f\u95f4\u8d70\u4e00\u5708\u7ecf\u8fc7\u7684\u623f\u95f4\u6570\u662f\u4e00\u6837\u7684\uff01**\n\n\u90a3\u4e48\u4e3a\u4ec0\u4e48\u8981\u53e6\u5916\u8bb0\u5f55\u7236\u8282\u70b9\uff1f\u56e0\u4e3a\u6211\u4eec**\u8def\u5f84\u538b\u7f29**\u4e86\uff0c\u8fd9\u6837**\u6bcf\u4e2a\u70b9\u5168\u90e8\u6307\u5411\u6839\u8282\u70b9\uff0c\u6211\u4eec\u5c31\u56de\u4e0d\u53bb\u4e86**\u3002\n\n\nPart 2\uff1a\u95ee\u9898\u89e3\u51b3\n------------\n\n### \u89e3\u51b3\u73af\n\n\u641c\u7d22\u73af\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u90a3\u4e48\u73af\u4e0a\u8fd8\u6709\u4e00\u4e9b\u652f\u94fe\u600e\u4e48\u89e3\u51b3\u5462\uff1f\u6211\u4eec\u753b\u56fe\u4f1a\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9\u53ea\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n1. **\u5728\u73af\u4e0a**\n1. **\u5728\u901a\u5411\u73af\u7684\u8def\u4e0a**\n\n\u90a3\u4e48\u5982\u679c\u6211\u4eec\u628a\u73af\u7684\u5927\u5c0f\u5b9a\u4e49\u4e3a\u73af\u4e0a\u7684\u8282\u70b9\u6570\uff0c**\u90a3\u4e48\uff1a**\n\n**\u5b9a\u7406\u4e00**\uff1a**\u94fe\u4e0a\u5404\u70b9\u8d70\u5230\u6709\u8d70\u8fc7\u7684\u70b9\u6240\u7ecf\u8fc7\u7684\u8282\u70b9\u6570\u5c31\u90fd\u7b49\u4e8e\u73af\u7684\u5927\u5c0f**\n\n**\u5b9a\u7406\u4e8c**\uff1a**\u94fe\u4e0a\u5404\u70b9\u8d70\u5230\u6709\u8d70\u8fc7\u7684\u70b9\u6240\u7ecf\u8fc7\u7684\u8282\u70b9\u6570\u5c31\u7b49\u4e8e\u8be5\u8282\u70b9\u5230\u73af\u4e0a\u7684\u8ddd\u79bb+\u73af\u7684\u5927\u5c0f**\n\n\u6240\u4ee5\u6211\u4eec\u5bf9\u6bcf\u4e2a\u8282\u70b9\u5168\u90e8\u52a0\u5165\u5e76\u67e5\u96c6\u8d70\u4e00\u904d\uff0c\u5e76\u4e14\u8fd9\u79cd\u65b9\u6cd5\u662f\u5728\u7ebf\u7684\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u50a8\u5b58\u6570\u636e\uff1a\n\n```cpp\n  //f\u5b58\u50a8\u5728\u54ea\u4e2a\u96c6\u5408\uff0cfa\u5b58\u50a8\u7236\u8282\u70b9\uff0c\u5e76\u67e5\u96c6\u64cd\u4f5c\u662f\u5bf9f\u7684\u64cd\u4f5c\n  //i\u662f\u5faa\u73af\u53d8\u91cf\uff0c\u5f53\u524d\u5230\u7b2ci\u4e2a\u623f\u95f4\uff0c\u8d70\u5230\u7b2cm\u4e2a\u623f\u95f4\n  //\u5e76\u67e5\u96c6\u522b\u5fd8\u4e86\u6570\u7ec4\u521d\u59cb\u5316\n    int m;\n    scanf(\"%d\",&m);\n    Find(m,i);\n    \n  int Get(int x) {\n    if(x==f[x]) return x;\n    return f[x]=Get(f[x]);\n  }\n  void Find(int p,int q) {\n    if(Get(p)==Get(q)) {//\u627e\u5230\u73af\u4e86\n      int cnt=1;//\u6700\u540e\u4f1a\u5c11\u4e00\u4e2a\uff0c\u8fd9\u91cc\u521d\u503c\u8bbe\u4e3a1\n      //\u56de\u9000\n      for(int i=p;i!=q;i=fa[i]) cnt++;//\u7d2f\u52a0\u73af\u7684\u957f\u5ea6\n      for(int i=p;i!=q;i=fa[i]) E[i]=cnt;\n      //\u5b9a\u7406\u4e00\n      E[q]=cnt;\n      return;\n      //E\u6570\u7ec4\u662f\u7b54\u6848\u6570\u7ec4\n    }\n    //\u6ca1\u627e\u5230\u73af\n    //\u5e76\u67e5\u96c6\u96c6\u5408\u5408\u5e76\uff0c\u53ef\u4ee5\u5199\u6210merge\u51fd\u6570\u5f62\u5f0f\n    //\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u91cc\u662f\u4ee5\u5f53\u524d\u623f\u95f4\u4e3a\u7236\u8282\u70b9\u5408\u5e76\u7684\n    f[Get(q)]=Get(p);\n    fa[q]=p; //\u8bb0\u5f55\u7236\u8282\u70b9\n    /*\n    merge\u51fd\u6570\uff1a\n    void merge(int x,int y) {\n      f[get(x)]=get(y);\n    }\n    */\n  }\n```\n\u8fd9\u91cc\u4f5c\u4e2a\u89e3\u91ca\uff0c\u4e3a\u4ec0\u4e48Get(p)==Get(q)\u5c31\u662f\u627e\u5230\u73af\u4e86\uff1f\u9996\u5148\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u662f\u5728\u7ebf\u7684\uff0c\u4e00\u5f00\u59cb$f[i]$\u7684\u521d\u59cb\u503c\u90fd\u4e3a$i$\uff0c\u90a3\u4e48\u5982\u679c$i$(\u7b2c$i$\u4e2a\u623f\u95f4)\uff0c$x$(\u8981\u53bb\u7684\u623f\u95f4)\u6307\u5411\u540c\u4e00\u4e2a\u7956\u5148\uff0c\u90a3\u5c31\u8bf4\u660e$i$\u4e0e$x$\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u5185\uff0c\u8fd9\u91cc\u7684\u96c6\u5408\u6307\u4ec0\u4e48\uff1f\u5c31\u662f\u6211\u4eec\u6240\u8bf4\u7684\u73af\uff0c\u56e0\u6b64\u5e76\u67e5\u96c6\u53ef\u4ee5\u89e3\u51b3\u73af\u7684\u95ee\u9898\u3002\n\n**\u8fd9\u5c31\u662f\u5e76\u67e5\u96c6\uff1a\u67e5\u8be2\u5143\u7d20\u662f\u5426\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u5185\uff0c\u5e76\u4e14\u652f\u6301\u5c06\u4e24\u4e2a\u5143\u7d20\u540c\u65f6\u653e\u5230\u4e00\u4e2a\u96c6\u5408\u5185\u3002**\n\n### \u73af\u89e3\u51b3\u5b8c\u4e86\uff0c\u4e0b\u9762\u9700\u8981\u89e3\u51b3\u94fe\n\n**\u6211\u4eec\u5728\u89e3\u51b3\u73af\u7684\u65f6\u5019\uff0c\u5df2\u7ecf\u628a\u73af\u4e0a\u7684\u70b9\u90fd\u8d4b\u4e88\u4e86\u7b54\u6848\uff0c\u90a3\u4e48\u5269\u4e0b\u6ca1\u7b54\u6848\u7684\u5c31\u662f\u94fe\u4e86**\u3002\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u7528$O(n)$\u7684\u65f6\u95f4\u627e\u4e00\u4e0b\u8fd8\u6709\u90a3\u4e9b\u6ca1\u7b54\u6848\u7684\uff0c\u518d\u7528\u4e00\u4e2a\u5faa\u73af\u627e\u5230\u5b83\u5230\u6240\u5728\u73af\u7684\u8ddd\u79bb\u5c31\u884c\u4e86\u3002\u603b\u590d\u6742\u5ea6\u5927\u6982$O(2n)?$\n\n```cpp\n  for(int i=1;i<=n;i++) {\n    if(!E[i]) {//\u627e\u5230\u94fe\uff0c\u5904\u7406\u94fe\u4e0a\u7684\u8282\u70b9\n      int cnt=1,j;\n      for(j=fa[i];!E[j];j=fa[j]) cnt++;\n      //\u540c\u7406\uff0c\u94fe\u7684\u957f\u5ea6\n      E[i]=cnt+E[j];\n    }\n    //\u8f93\u51fa\u7b54\u6848\n    printf(\"%d\\n\",E[i]);\n  }\n```\n\u4e0d\u7406\u89e3\u7684\u8bdd\u6211\u8fd8\u7279\u610f\u7ed9\u4e86\u5f20\u56fe(~~\u611f\u8c22\u51e0\u4f55\u753b\u677f\u7684\u652f\u6301~~)\uff1a\n![](https://i.loli.net/2019/06/05/5cf79a0d7a28114585.jpg)\n\nPart 3\uff1aAC\n------------\n\n\u597d\u4e86\uff0c\u4e0a\u9762\u5df2\u7ecf\u89e3\u51b3\u5b8c\u672c\u9898\u4e86\uff0c\u522b\u5fd8\u4e86**\u5e76\u67e5\u96c6\u521d\u59cb\u5316**\uff1a\n\n```cpp\n  for(int i=1;i<=n;i++) f[i]=i;\n```\n\u4e0b\u9762\u6574\u7406\u4e00\u4e0b\u5173\u952e\u4ee3\u7801\u7247\u6bb5\uff1a\n\n**\u6570\u7ec4\u3001\u5b9a\u4e49\u4ea4\u4ee3\uff1a**\n```cpp\n  int E[SIZE],f[SIZE],fa[SIZE];\n  //E\u7b54\u6848\u6570\u7ec4\uff0cf\u5e76\u67e5\u96c6\u6570\u7ec4\uff0cfa\u7236\u8282\u70b9\u6570\u7ec4\n```\n\n\n**1. \u5e76\u67e5\u96c6\u90e8\u5206\uff1a**\n\n```cpp\n  int get(int x) {\n    if(x==f[x]) return x;\n    return f[x]=get(f[x]);\n  }\n  int merge(int x,int y) {\n    f[get(x)]=get(y);\n  }\n```\n**2. \u627e\u73af\uff1a**\n\n```\n  for(int i=1;i<=n;i++) {\n    int m;\n    scanf(\"%d\",&m);\n    Find(m,i);\n  }\n  //\u51fd\u6570\u4f4d\u7f6e\u81ea\u5df1\u770b\u7740\u529e\n  void Find(int p,int q) {\n  if(get(p)==get(q)) {//\u627e\u5230\u73af\n    int cnt=1;\n    for(int i=p;i!=q;i=fa[i]) cnt++; //\u627e\u73af\u7684\u957f\u5ea6\n    for(int i=p;i!=q;i=fa[i]) E[i]=cnt;\n    E[q]=cnt;\n    return;\n  }\n  //\u6ca1\u627e\u5230\uff0c\u5408\u5e76\n  merge(q,p);\n  fa[q]=p;\n}\n```\n**3. \u627e\u94fe&\u8f93\u51fa\u7b54\u6848\uff1a**\n\n```cpp\n  for(int i=1;i<=n;i++) {\n    if(!E[i]) {\n      int cnt=1,j;\n      for(j=fa[i];!E[j];j=fa[j]) cnt++;\n      //\u627e\u94fe\u7684\u957f\u5ea6\n      E[i]=cnt+E[j];\n    }\n    printf(\"%d\\n\",E[i]);\n  }\n```\n**4. $End$**\n\n```cpp\n  return 0;//\u6bd4\u8d5b\u5fd8\u4e86\u5199\u540e\u679c\u81ea\u8d1f\n```\n~~\u5269\u4e0b\u90e8\u5206\u81ea\u5df1\u8865\u5145\u4e86\uff0c\u6709\u95ee\u9898\u79c1\u804a~~\n\n\n$END$\n------------\n\n## \u6700\u540e\u795d\u5927\u5bb6$NOIP2019 RP++$\n\n\uff08~~\u8fd9\u6837\u53ef\u4ee5\u70b9\u8d5e\u4e86\u5427\uff1f~~\uff09\n",
        "postTime": 1559730447,
        "uid": 196649,
        "name": "xiejinhao",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2921 \u3010[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    },
    {
        "content": "\u53d1\u7bc7\u849f\u84bb\u81f3\u6781\u7684\u9898\u89e3...(\u4e0d\u61c2\u7f29\u70b9,tarjan.jpg)\n\u9996\u5148\u8fd9\u9898n\u70b9n\u8fb9\u8fd8tmd\u8fde\u901a,\u90a3\u663e\u7136\u8fd9\u9898\u5c31\u662f\u4e00\u68f5n\u4e2a\u6811\u4e0a\u591a\u4e86\u4e00\u6761\u5947\u5947\u602a\u602a\u7684\u8fb9(\u8fd4\u7956\u8fb9),\u65e2\u7136\u53ea\u6709\u4e00\u6761\u8fd4\u7956\u7684\u8fb9,\u90a3\u4e48\u4e5f\u5c31\u7b49\u4ef7\u4e8e\u8fd9\u68f5\u6811\u4e0a\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u73af.\u6240\u4ee5\u76f4\u63a5\u8ba8\u8bba\u4e00\u4e2a\u70b9\u662f\u5426\u5728\u73af\u4e0a,\u5982\u679c\u5728\u5219\u7b54\u6848\u4e0e\u5b83\u6307\u5411\u70b9\u76f8\u540c,\u4e0d\u7136\u5c31\u7b49\u4e8e\u5b83\u6307\u5411\u70b9\u7b54\u6848+1,\u5177\u4f53\u5c31\u76f4\u63a5\u5927\u529bdfs,\u6bcf\u4e2a\u70b9\u6700\u591a\u8bbf\u95ee\u4e00\u6b21,\u6545\u603b\u590d\u6742\u5ea6\u4e3aO(n).(\u8fd9\u91cc\u6ce8\u610f\u4e0bdfs\u4e0d\u4e00\u5b9a\u53ea\u8dd1\u4e00\u904d\u5c31\u80fd\u8bbf\u95ee\u6240\u6709\u7684\u70b9,\u4f46\u663e\u7136\u8dd1\u4e00\u6b21dfs\u4e00\u5b9a\u53ef\u4ee5\u5904\u7406\u6389\u73af)\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,to[100010],dp[100010],deep[100010];\nbool vis[100010];//\u662f\u5426\u8bbf\u95ee \nvoid dfs(int pos,int dep)\n{\n\tvis[pos]=1;deep[pos]=dep;\n\tif(dp[to[pos]])dp[pos]=dp[to[pos]]+1;//\u5982\u679c\u5df2\u6c42\u5f97\u6307\u5411\u70b9\u7b54\u6848,\u90a3\u4e48\u5b83\u4e0e\u6307\u5411\u70b9\u4e0d\u53ef\u80fd\u540c\u5728\u73af\u4e0a,\u6545\u7b54\u6848\u4e3a\u6307\u5411\u70b9+1 \n\telse if(deep[to[pos]])//\u5982\u679c\u8dd1\u5230\u8fd9\u6b21dfs\u5df2\u8bbf\u95ee\u8fc7\u7684\u70b9,\u8bf4\u660e\u627e\u5230\u73af\u4e86,\u66b4\u529b\u66f4\u65b0\u73af\u4e0a\u6240\u6709\u70b9\u7b54\u6848 \n\t{\n\t\tdp[pos]=(deep[pos]-deep[to[pos]]+1);\n\t\tint nw=to[pos];\n\t\twhile(nw!=pos)\n\t\t{\n\t\t\tdp[nw]=dp[pos];\n\t\t\tnw=to[nw];\n\t\t}\n\t}\n\telse //\u5982\u679c\u8dd1\u5b8c\u6307\u5411\u70b9\u800c\u5b83\u672c\u8eab\u7b54\u6848\u6ca1\u6709\u66f4\u65b0,\u90a3\u4e48\u8bf4\u660e\u5b83\u4e0d\u5728\u73af\u4e0a,\u7b54\u6848\u4e3a\u6307\u5411\u70b9+1 \n\t{\n\t\tdfs(to[pos],dep+1);\n\t\tif(!dp[pos])dp[pos]=dp[to[pos]]+1;\n\t}\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d\",&to[i]);\n\tfor(int i=1;i<=n;i++)\n\t\tif(!vis[i])dfs(i,0);//\u6ca1\u8bbf\u95ee\u8fc7\u5c31dfs \n\tfor(int i=1;i<=n;i++)\n\t\tprintf(\"%d\\n\",dp[i]);\t//\u8f93\u51fa \n}\n```\n",
        "postTime": 1525778049,
        "uid": 51742,
        "name": "sigland",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2921 \u3010[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    },
    {
        "content": "\u672c\u8d28\u4e0a\u662f\u4e00\u9053\u56fe\u8bba\u9898\uff0c\u4f46\u662f\u7531\u4e8e\u5176\u9898\u9762\u7684\u7279\u6b8a\u6027\u53ef\u4ee5\u505a\u4e00\u4e9b\u7b80\u5316\u3002\n\n\u82e5\u4e00\u4e2a\u70b9u\u7684\u540e\u7ee7\u8282\u70b9\u662fv\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5728\u56fe\u4e2d\u8fde\u4e00\u6761**(u,v)\u7684\u6709\u5411\u8fb9**\u3002\u6c42\u6bcf\u5934\u5976\u725b\u80fd\u5230\u8fbe\u7684\u8282\u70b9\u6570\uff0c\u5c31\u53ef\u4ee5\u5bf9\u8fd9\u5f20\u56fe\u8dd1**Tarjan\u7f29\u70b9**\uff0c\u7136\u540e\u518d\u7528**\u62d3\u6251+DP**\u6216\u662f**\u8bb0\u5fc6\u5316\u641c\u7d22**\u5b9e\u73b0\u3002\n\n**\u7b80\u5316\uff1a**\n\n\u53ef\u77e5\u6bcf\u4e2a\u70b9\u51fa\u5ea6\u4e3a\u4e00\uff0cso...\u6211\u4eec\u5c31\u4e0d\u9700\u8981\u7528\u90bb\u63a5\u8868\u5b58\u8fb9\u4e86\uff01\u800c\u4e14\u4ece\u6bcf\u4e2a\u70b9\u51fa\u53d1\u540e\u8def\u5f84\u662f\u552f\u4e00\u7684\uff0c\u56e0\u6b64\u5728\u7f29\u70b9\u540e\uff0c\u6bcf\u4e2a\u5f3a\u8054\u901a\u5206\u91cf\u7684\u51fa\u5ea6\u4e5f\u81f3\u591a\u4e3a\u4e00\u3002\n\n\u6211\u4eec\u8bbedp[u]\u8868\u793a\u4eceu\u53f7\u5f3a\u8054\u901a\u5206\u91cf(\u91cd\u65b0\u6807\u53f7)\u51fa\u53d1\u53ef\u4ee5\u5230\u8fbe\u7684\u8282\u70b9\u6570\uff0c\u8bbeu\u7684\u51fa\u8fb9\u6307\u5411v\uff0c\u53ef\u77e5**dp[u]=dp[v]+sz[u]**\uff08\u5176\u4e2dsz[u]\u4e3au\u5f3a\u8054\u901a\u5206\u91cf\u7684\u5927\u5c0f\uff09\u3002\u8bb0\u641c\u8f6c\u79fb\u5373\u53ef\u3002\n\n\u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nconst int _ = 100005;\nint n,to[_],dfn[_],low[_],tot,stack[_],top,vis[_],col[_],scc,out[_],sz[_],dp[_];\nint gi()\n{\n    int x=0,w=1;char ch=getchar();\n    while ((ch<'0'||ch>'9')&&ch!='-') ch=getchar();\n    if (ch=='-') w=0,ch=getchar();\n    while (ch>='0'&&ch<='9') x=(x<<3)+(x<<1)+ch-'0',ch=getchar();\n    return w?x:-x;\n}\nvoid Tarjan(int u)\n{\n    dfn[u]=low[u]=++tot;\n    stack[++top]=u;vis[u]=1;\n    int v=to[u];\n    if (!dfn[v]) Tarjan(v),low[u]=min(low[u],low[v]);\n    else if (vis[v]) low[u]=dfn[v];\n    if (dfn[u]==low[u])\n    {\n        scc++;//\u5f3a\u8054\u901a\u5206\u91cf\u7684\u6807\u53f7\n        do\n        {\n            v=stack[top--];\n            vis[v]=0;\n            col[v]=scc;//\u67d0\u70b9\u6240\u5728\u7684\u5f3a\u8054\u901a\u5206\u91cf\u7684\u6807\u53f7\n            sz[scc]++;//\u5927\u5c0f\n        }while (u!=v);\n    }\n}\nint dfs(int u)\n{\n    if (!u||dp[u]) return dp[u];\n    return dp[u]=dfs(out[u])+sz[u];\n}\nint main()\n{\n    n=gi();\n    for (int i=1;i<=n;i++)\n        to[i]=gi();\n    for (int i=1;i<=n;i++)\n        if (!dfn[i]) Tarjan(i);\n    for (int i=1;i<=n;i++)\n        if (col[i]!=col[to[i]])\n            out[col[i]]=col[to[i]];\n    for (int i=1;i<=n;i++)\n        printf(\"%d\\n\",dfs(col[i]));\n    return 0;\n}\n\n```",
        "postTime": 1510211469,
        "uid": 47654,
        "name": "\u79df\u9165\u96e8",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2921 \u3010[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    },
    {
        "content": "# Tarjan\n\u9996\u5148\uff0c\u62ff\u5230\u9898\u76ee\uff0c\u5148\u6765\u5206\u6790\u4e00\u4e0b\u8fd9\u4e2a\u56fe\u7684\u5927\u81f4\u6a21\u6837\u3002\n\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c**\u6bcf\u4e00\u5934\u5976\u725b\u6709\u591a\u6761\u5165\u8fb9\uff0c\u4f46\u53ea\u6709\u81f3\u591a\u4e00\u6761\u51fa\u8fb9\u3002** \u6240\u4ee5\uff0c\u8fd9\u4e2a\u56fe\u5927\u81f4\u662f\u8fd9\u6837\u7684\uff08\u5047\u8bbe\u4e0d\u5b58\u5728\u81ea\u73af\uff09![](https://cdn.luogu.com.cn/upload/pic/56558.png )\n\n\u5f62\u5982\u8fd9\u6837\uff0c\u6709n\u6761\u8fb9\uff0cn\u4e2a\u7ed3\u70b9\uff0c\u4e14\u6bcf\u4e2a\u8282\u70b9\u6709\u4e14\u4ec5\u6709\u4e00\u6761\u51fa\u8fb9\u7684\u56fe\uff0c\u88ab\u79f0\u4e3a**\u57fa\u73af\u5185\u5411\u6811**\n\n\u4e0d\u96be\u770b\u51fa\uff0c\u548c\u5916\u5411\u6811\u4e00\u6837\uff0c**\u6bcf\u4e2a\u5185\u5411\u6811\u53ea\u6709\u4e00\u4e2a\u73af\uff0c\u5373\u6bcf\u4e2a\u7ed3\u70b9\u4e00\u5b9a\u6709\u5b83\u552f\u4e00\u5bf9\u5e94\u7684\u73af\u3002** \n\n\u7136\u800c\u6309\u7167\u8fd9\u9053\u9898\u76ee\u7684\u610f\u601d\uff0c**\u6211\u4eec\u53ea\u9700\u627e\u5230\u6bcf\u4e2a\u70b9\u5bf9\u5e94\u7684\u73af\uff0c\u7edf\u8ba1\u4ece\u8be5\u7ed3\u70b9\u5230\u8fbe\u73af\u7684\u8def\u5f84\u7684\u957f\u5ea6\uff0c\u518d\u52a0\u4e0a\u73af\u7684\u5927\u5c0f\uff0c\u5c31\u662f\u7b54\u6848\u3002\u800c\u5bf9\u4e8e\u73af\u4e0a\u7684\u70b9\uff0c\u5b83\u6240\u5c5e\u7684\u73af\u7684\u5927\u5c0f\u5c31\u662f\u7b54\u6848\u3002**\n\n\u4f46\u662f\uff0c\u76f4\u63a5\u8fd9\u6837\u5b50\u5b9e\u73b0\u663e\u7136\u8981\u8d85\u65f6\uff0c\u56e0\u4e3a\u4f60\u5728\u4e0d\u65ad\u5730\u8d70\u91cd\u590d\u7684\u7ed3\u70b9\u3002**\u6240\u4ee5\u6211\u4eec\u5e94\u8be5\u7528Tarjan\u6c42\u51fa\u5f3a\u8fde\u901a\u5206\u91cf\u540e\uff0c\u5c06\u8fb9\u53cd\u5411\uff0c\u5c06\u5f3a\u8fde\u901a\u5206\u91cf\u4e0a\u7684\u70b9\u7684\u5bf9\u5e94\u5b50\u6811\u8fdb\u884c\u4e00\u6b21\u7b80\u5355\u7684\u6811\u5f62DP\uff0c** \u5c31\u53ef\u4ee5\u5728 O(N) \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u91cc\u6c42\u89e3\u4e86\u3002\uff08\u56e0\u4e3a\u6b64\u65f6\u53d8\u6210\u4e86\u5916\u5411\u6811\uff09\n\n\u540c\u65f6\uff0c**\u8fd8\u8981\u6ce8\u610f\u81ea\u73af\u3002**\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cctype>\nusing namespace std;\nconst int maxn=100050,maxm=100050;\ninline int read(){\t//\u5feb\u8bfb \n   int s=0,w=1;\n   char ch=getchar();\n   while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n   while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n   return s*w;\n}\nint cnt;\t//\u8fb9\u6570 \nint head[maxn],next[maxm],to[maxm];\t\t//\u6b63\u5411\u56fe \nint head1[maxn],next1[maxn],to1[maxn];\t//\u53cd\u5411\u56fe \ninline void add(int x,int y)\t//\u8fde\u8fb9 \n{\n    cnt++;\n    to[cnt]=y;\n    next[cnt]=head[x];\n    head[x]=cnt;\n    to1[cnt]=x;\n    next1[cnt]=head1[y];\n    head1[y]=cnt;\n}\nint low[maxn],dfn[maxn],tp,tot,s[maxn],n,m;\t//tarjan \nbool vis[maxn];\nint k,scc[maxn],bel[maxn],ans[maxn];\n// scc[i]  \u7f16\u53f7\u4e3ai\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u5927\u5c0f \n// bel[i]  i\u7ed3\u70b9\u6240\u5c5e\u7684\u5f3a\u8fde\u901a\u5206\u91cf\n// ans[i]  \u6bcf\u4e2a\u7ed3\u70b9\u7684\u7b54\u6848 \nvoid tarjan(int u)\n{\n    tp++;\n    tot++;\n    dfn[u]=low[u]=tot;\n    s[tp]=u;\n    vis[u]=1;\n    for(int i=head[u];i;i=next[i])\n    {\n        int v=to[i];\n        if(!dfn[v]){\n            tarjan(v);\n            low[u]=min(low[u],low[v]);\n        }\n        else if(vis[v])\n        {\n            low[u]=min(low[u],dfn[v]);\n        }\n    }\n    if(low[u]==dfn[u])\n    {\n        k++;\n        do{\n            scc[k]++;\n            bel[s[tp]]=k;\n            vis[s[tp]]=0;\n            tp--;\n        }while(u!=s[tp+1]);\n    }\n}\nvoid dfs(int u)\t//\u5bf9\u53cd\u5411\u56fe\u4e2d\u6bcf\u4e00\u4e2a\u5b50\u6811\u6c42\u89e3 \n{\n    for(int i=head1[u];i;i=next1[i])\n    {\n\t\tint v=to1[i];\n\t\tif(!ans[v])\n\t\t{\n\t\t\tans[v]=ans[u]+1;\n\t\t\tdfs(v);\n\t\t}\n\t}\n}\nint main()\n{\n    n=read();\n    for(int i=1;i<=n;i++)\n    {\n        int x;\n        x=read();\n        add(i,x);\n    }\n    for(int i=1;i<=n;i++)\n    {\n        if(!dfn[i]){\n            tarjan(i);\n        }\n    }\n    for(int i=1;i<=n;i++)\n    {\n\t\tif(to[head[i]]==i)\t//\u81ea\u73af \n\t\t{\n\t\t\tans[i]=1;\n\t\t}\n\t\tif(scc[bel[i]]>1)\t//\u662f\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u4e0a\u7684\u70b9 \n\t\t{\n\t\t\tans[i]=scc[bel[i]];\n\t\t}\n\t}\n    for(int i=1;i<=n;i++)\n    {\n\t\tif(scc[bel[i]]>1||to[head[i]]==i)\t//\u6ce8\u610f\u81ea\u73af \n\t\t{\n\t\t\tans[i]=scc[bel[i]];\n\t\t\tdfs(i);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcout<<ans[i]<<endl;\n\t}\n    return 0;\n}\n\n```\n",
        "postTime": 1555170090,
        "uid": 99643,
        "name": "\u9648\u5200\u4ed4",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2921 \u3010 [USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    },
    {
        "content": "\u8fd9\u9898\u4e0e\u5176\u8bf4\u662f\u4e2a\u56fe\u8bba\u9898\uff0c\u4e0d\u5982\u8bf4\u662f\u4e2a\u6a21\u62df\u9898\u2026\u2026\n\n\u5728\u4efb\u4f55\u65f6\u523b\uff0c\u4e00\u53ea\u5976\u725b\u90fd\u53ea\u6709\u4e24\u79cd\u53ef\u80fd\u7684\u72b6\u6001\uff1a\n\n1. \u5728\u4e00\u4e2a\u73af\u4e0a\n\n1. \u5728\u901a\u5f80\u4e00\u4e2a\u73af\u7684\u8def\u4e0a\n\n\n***\u6240\u4ee5\u6211\u4e0d\u59a8\u5927\u6b65\u5411\u524d\u8d70\u53bb\uff0c\u5411\u7740\u6211\u81ea\u4ee5\u4e3a\u53ef\u4ee5\u8d70\u53bb\u7684\u8def\u3002\u2014\u2014\u9c81\u8fc5***\n\n\u6211\u4eec\u9009\u5b9a\u4e86\u4e00\u4e2a\u70b9\uff0c\u5c31\u53ea\u7ba1\u8d70\u3002\u5728\u8fd9\u4e00\u8fc7\u7a0b\u4e2d\uff0c\u4e5f\u53ea\u4f1a\u53d1\u751f\u4e24\u4ef6\u4e8b\uff1a\n\n1. \u78b0\u5230\u4e86\u4e00\u4e2a\u70b9\uff0c\u8fd9\u4e2a\u70b9\u7684\u6700\u7ec8\u7b54\u6848\u6211\u5df2\u7ecf\u77e5\u9053\u4e86\n\n1. \u78b0\u5230\u4e86\u4e00\u4e2a\u70b9\uff0c\u8fd9\u4e2a\u70b9\u6211\u521a\u521a\u8d70\u8fc7\u4e86\n\n**\u7b2c\u4e00\u79cd**\u60c5\u51b5\uff0c\u6211\u4eec\u53ea\u9700\u5f80\u56de\u8d70\uff0c\u540c\u65f6\u5bf9\u8def\u5f84\u4e0a\u7684\u70b9\u6807\u8bb0\u7b54\u6848\uff1a**\u6bcf\u4e2a\u70b9\u7684\u7b54\u6848\u662f\u5b83\u7684\u4e0b\u4e00\u4e2a\u70b9\u7684\u7b54\u6848+1.**\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e00\u4e2abefore\u6570\u7ec4\uff0c\u6765\u544a\u8bc9\u6211\u4eec\u5982\u4f55\u5f80\u56de\u8d70\u3002\n\n**\u7b2c\u4e8c\u79cd**\u60c5\u51b5\uff0c\u8fd9\u8868\u660e\u6211\u4eec\u5df2\u7ecf\u53d1\u73b0\u4e86\u4e00\u4e2a\u4e4b\u524d\u6ca1\u6709\u53d1\u73b0\u7684\u73af\u3002\u6211\u4eec\u53ea\u9700\u505a\u4e24\u4ef6\u4e8b\uff1a\n\n1. \u6807\u8bb0\u4ece\u8d77\u70b9\u5f00\u59cb\uff0c\u901a\u5f80\u73af\u7684\u8def\u5f84\u4e0a\u70b9\u7684\u7b54\u6848\u3002\u8fd9\u548c\u7b2c\u4e00\u79cd\u60c5\u51b5\u662f\u4e00\u6837\u7684\u3002\n\n1. \u6807\u8bb0\u73af\u4e0a\u6bcf\u4e2a\u70b9\u7684\u7b54\u6848\u3002\u53ea\u9700\u8981\u5728\u8bbf\u95ee\u6bcf\u4e2a\u70b9\u7684\u65f6\u5019\u8bb0\u5f55\u4e00\u4e0b\u201c\u65f6\u95f4\u6233\u201d\uff0c\u4e24\u6b21\u8bbf\u95ee\u540c\u4e00\u4e2a\u70b9\u7684\u65f6\u95f4\u6233\u76f8\u51cf\u5c31\u53ef\u4ee5\u5f97\u5230\u73af\u7684\u5927\u5c0f\u3002\n\n\u6bcf\u4e2a\u70b9\u90fd\u8d70\u4e86\u4e14\u53ea\u8d70\u4e86\u4e24\u904d\u3002\u65f6\u95f4\u590d\u6742\u5ea6O(N).\n\n```cpp\n//\n//Author EricWay1024\n#include<algorithm>\n#include<bitset>\n#include<cmath>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<ctime>\n#include<deque>\n#include<iostream>\n#include<map>\n#include<queue>\n#include<set>\n#include<stack>\n#include<string>\n#include<utility>\n#include<vector>\n#define INF 0x3f3f3f3f\n#define N 101234\nusing namespace std;\n\nint n, next[N];\nint vis[N];\nint ans[N];\nint before[N];\n\ninline int read(){\n    int x=0; int sign=1; char c=getchar();\n    while(c>'9' || c<'0') {if (c=='-') sign=-1;c=getchar();}\n    while(c>='0' && c<='9'){x=(x<<3)+(x<<1)+c-'0';c=getchar();}\n    return x*sign;\n}\n\nvoid walk_back(int u, int num){\n    while(!ans[u]){\n        ans[u]=num++;\n        u=before[u];\n    }\n} \n\nvoid walk_ring(int u, int num){\n    while(!ans[u]){\n        ans[u]=num;\n        u=next[u];\n    }\n} \n\nvoid walk(int u){\n    memset(vis, 0, sizeof(vis));\n    memset(before, 0, sizeof(before));\n    int num=1; \n    while(1){\n        if (ans[u]){\n            if (before[u]) walk_back(before[u], ans[u]+1); \n            break;\n        }\n        if (vis[u]){\n            ans[u]=num-vis[u];\n            if (before[u]) walk_back(before[u], ans[u]+1);\n            walk_ring(next[u], ans[u]);\n            break;\n        }\n        vis[u]=num++;\n        if (!vis[next[u]])before[next[u]]=u; //\u6ce8\u610f\u8fd9\u91cc\u7684if\u3002\u8fd9\u662f\u4e3a\u4e86\u9632\u6b62\u901a\u5f80\u73af\u7684\u8def\u5f84\u88ab\u8986\u76d6\n        u=next[u];\n    }\n}\n\nint main(){\n#ifdef ERIC\n    freopen(\"2921.in\",\"r\",stdin);\n    double TIMEA=clock();\n#endif\n    n=read();\n    for (int i=1; i<=n; i++) next[i]=read();\n    \n    for (int i=1; i<=n; i++){\n        if (!ans[i]) walk(i);\n    }\n    for (int i=1; i<=n; i++){\n        cout<<ans[i]<<\"\\n\";\n    }\n\n\n#ifdef ERIC\n    double TIMEB=clock();\n    printf(\"\\nTime consumed: %.3fs.\\n\", (TIMEB-TIMEA)/1000);\n#endif\n    return 0;\n}\n\n\n```",
        "postTime": 1540715628,
        "uid": 81690,
        "name": "EricWay1024",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2921 \u3010[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    },
    {
        "content": "\u770b\u4e86\u597d\u591a\u7bc7\u9898\u89e3\uff0c\u52c9\u52c9\u5f3a\u5f3a\u61c2\u4e86\u4e00\u70b9\uff0c\u6765\u8bb2\u4e00\u4e0b\u3002\n\n\u9996\u5148\u4e00\u4e2a\u5bb9\u6613\u7406\u89e3\u7684\u70b9\u5c31\u662f\u4e00\u4e2a\u70b9\u8981\u4e48\u5728\u4e00\u6761\u94fe\u4e0a\uff0c\u8981\u4e48\u5728\u4e00\u4e2a\u73af\u4e0a\uff0c\u6240\u4ee5\u6211\u4eec\u5206\u4e24\u79cd\u60c5\u51b5\uff0c\u5982\u679c\u5728\u94fe\u4e0a\u53ef\u4ee5\u6cbf\u7740\u627e\u4e0b\u53bb\uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u73af\uff0c\u52a0\u4e0a\u73af\u7684\u503c\uff0c\u5982\u679c\u4e00\u4e2a\u73af\uff0c\u76f4\u63a5\u8f93\u51fa\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u96be\u70b9\u5728\u4e8e\u5982\u4f55\u627e\u73af\uff0c\u6211\u4eec\u53ef\u4ee5\u7528tarjan\u7b97\u6cd5\uff0c\u5982\u679c\u627e\u5230\u4e00\u4e2a\u6839\u8282\u70b9\uff0c\u5c31\u4ee3\u8868\u53d1\u73b0\u4e00\u4e2a\u65b0\u7684\u73af\uff0c\u5c06\u8fd9\u4e2a\u73af\u91cc\u9762\u6240\u6709\u7684\u70b9\u5f52\u5230\u8fd9\u4e2a\u73af\u3002\n\n\u8be6\u89c1\u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nconst int M = 100000;\nint low[M + 5],way[M + 5];\nint col;\nint sum;\nint next[M + 5];\nint ans[M + 5];\nint sta[M + 5];\nint top = 1;\nint sh[M + 5];\nint ins[M + 5];\nint color[M + 5];\nvoid tarjan(int x){\n\tsta[top] = x;\n\ttop ++;\n\tsum ++;\n\tlow[x] = sum;\n\tway[x] = sum;\n\tins[x] = 1;\n\tif(ins[next[x]] == 0){\n\t\ttarjan(next[x]);\n\t\tlow[x] = min(low[x],low[next[x]]);\n\t}\n\telse{\n\t\tif(ins[next[x]] == 1){\n\t\t\tlow[x] = min(low[x],way[next[x]]);\n\t\t}\n\t}\n\tif(low[x] == way[x]){//\u5982\u679c\u627e\u5230\u4e00\u4e2a\u73af\n\t\tcol ++;//\u73af\u6570\u91cf\u52a0\u4e00\n\t\tdo{\n\t\t\ttop --;\n\t\t\tins[sta[top]] = -1;//\u5df2\u7ecf\u641c\u8fc7\n\t\t\tsh[sta[top]] = col;//\u5168\u5f52\u5230\u8fd9\u4e2a\u73af\n\t\t}while(sta[top] != x);\n\t\treturn;\n\t}\n}\nvoid search(int root,int x,int b){\n\tif(ans[x] != 0){\n\t\tans[root] = ans[x] + b;//\u627e\u5230\u73af\u7684\u6570\u76ee + \u5df2\u7ecf\u8d70\u7684\u6b65\u6570\n\t\treturn;\n\t}\n\tsearch(root,next[x],b + 1);\n}\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor(int i = 1;i <= n;i ++){\n\t\tscanf(\"%d\",&next[i]);\n\t\tif(i == next[i]){\n\t\t\tans[i] = 1;//\u5355\u4e2a\u6210\u73af\uff0c\u7279\u5224\n\t\t}\n\t}\n\tfor(int i = 1;i <= n;i ++){\n\t\tif(! ins[i]){//\u5982\u679c\u6ca1\u6709\u641c\u8fc7\u5c31\u641c\u4e00\u4e0b\n\t\t\ttarjan(i);\n\t\t}\n\t}\n\tfor(int i = 1;i <= n;i ++){//\u7edf\u8ba1\u4e00\u4e2a\u73af\u7684\u6570\u91cf\n\t\tcolor[sh[i]] ++;\n\t}\n\tfor(int i = 1;i <= n;i ++){\n\t\tif(color[sh[i]] != 1){//\u5982\u679c\u8fd9\u4e2a\u73af\u7684\u5927\u5c0f\u4e0d\u4e3a1\uff0c\u8bf4\u660ei\u5c5e\u4e8e\u8fd9\u4e2a\u73af\u3002\n\t\t\tans[i] = color[sh[i]];\n\t\t}\n\t}\n\tfor(int i = 1;i <= n;i ++){\n\t\tif(! ans[i]){//\u5982\u679cans == 0\uff0c\u8bf4\u660eans\u4e0d\u5728\u73af\u5185\uff0c\u641c\n\t\t\tsearch(i,next[i],1);\n\t\t}\n\t}\n\tfor(int i = 1;i <= n;i ++){\n\t\tprintf(\"%d\\n\",ans[i]);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1570619902,
        "uid": 54135,
        "name": "king_more",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2921 \u3010[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    },
    {
        "content": "### \u4f7f\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u89e3\u51b3\u95ee\u9898\u3002\n### \u5904\u7406vis\u6570\u7ec4\u4f7f\u7528col\uff0c\u4e0d\u540c\u7684\u6570\u5b57\u4ee3\u8868\u4e0d\u540c\u6b21\u7684\u641c\u7d22\uff0c\u56e0\u800c\u53ef\u4ee5\u7b80\u5355\u5730\u5224\u65ad\u60c5\u51b5\u3002\n### rnk\u6570\u7ec4\u50a8\u5b58\u6bcf\u4e00\u6b21\u641c\u7d22\u4e2d\u641c\u5230\u7684\u70b9\u7684\u65f6\u95f4\u6233\uff0c\u5148\u6839\u636evis\u7684col\u5224\u65ad\u662f\u5426\u5728\u540c\u4e00\u904d\u7684\u641c\u7d22\u4e2d\uff0c\u5982\u679c\u662f\uff0c\u5219\u7528\u4e24\u6b21\u65f6\u95f4\u6233\u7684\u5dee\u4ee3\u8868\u73af\u7684\u5927\u5c0f\u3002\n### \u4f7f\u7528\u5168\u5c40\u53d8\u91cfcot\u6765\u63a7\u5236\u641c\u7d22\uff0c\u7528\u5b83\u6765\u8868\u793a\u56de\u6eaf\u540e\u7684\u60c5\u51b5(\u662f\u5728\u73af\u4e0a\u8fd8\u662f\u5728\u94fe\u4e0a)\u3002\n### \u9664\u53bb\u4ee5\u4e0a\u641c\u7d22\u7684\u6280\u5de7\uff0c\u5269\u4f59\u7684\u5c31\u662f\u6a21\u62df\u8fa3\uff5e\n\n```cpp\n#include <cstdio>\n#include <cstring>\n\nusing namespace std;\n\nint vis[100010], rnk[100010], res[100010], target[100010], col = 1, cnt = 1, cot;\n\nint search(int cur) {\n\tif(vis[cur]) {\n\t\tif(vis[cur] == col)\n\t\t\treturn cot = cnt - rnk[cur];\n\t\telse {\n\t\t\tcot = 0; return res[cur];\n\t\t}\n\t}\n\t\n\tvis[cur] = col; rnk[cur] = cnt++;\n\tint t = search(target[cur]);\n\t\n\tif(cot) {\n\t\tcot--; return res[cur] = t;\n\t}\n\telse\n\t\treturn res[cur] = t+1;\n}\n\nint main() {\n\tint n;\n\tscanf(\"%d\", &n);\n\tfor(int i = 1; i <= n; i++) scanf(\"%d\", target+i);\n\tfor(int i = 1; i <= n; i++)\n\t\tif(!res[i]) {\n\t\t\tsearch(i);\n\t\t\tcol++; cnt = 1;\n\t\t}\n\tfor(int i = 1; i <= n; i++) printf(\"%d\\n\", res[i]);\n\treturn 0;\n}\n```",
        "postTime": 1549245632,
        "uid": 88735,
        "name": "\u5bd2\u9e3d\u513f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2921 \u3010[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    },
    {
        "content": "## tarjan\u7f29\u70b9\n\n\n------------\n1. \u5148\u7528tarjan\u627e\u5230\u4e00\u4e2a\u73af\u6216\u8005\u662f\u4e00\u4e2a\u70b9\uff0c\u7528sum\u628a\u8fd9\u4e2a\u73af\u7684\u70b9\u6570\u4fdd\u5b58\u3002\n2. \u5976\u725b\u4f1a\u51fa\u73b0\u4e24\u79cd\u8d70\u6cd5\uff1a1)\u5728\u81ea\u5df1\u73af\u91cc\u91c7\u96c6\u7cd6\u679c\u30022)\u53bb\u522b\u4eba\u73af\u91cc\u91c7\u96c6\u7cd6\u679c\u3002\n1. \u5f53\u5976\u725b\u73b0\u5728\u5728\u4e00\u4e2a\u73af\u91cc\uff0c\u91c7\u96c6\u5b8c\u8fd9\u4e2a\u73af\u91cc\u7684\u6240\u6709\u7cd6\u679c\u540e\uff0c\u5c31\u7ed3\u675f\u4e86\u3002\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#define NN 100001\nusing namespace std;\nint N,t,top,co;\nint l[NN],head[NN],q[NN],col[NN],dfn[NN],low[NN],stack[NN],sum[NN],f[NN];\nvoid tarjan(int u)\n{\n    dfn[u]=low[u]=++t;\n    stack[++top]=u;\n    int v=q[u];\n    if(!dfn[v])\n    {\n        tarjan(v);\n        low[u]=min(low[u],low[v]);\n    }\n    else if(!col[v])low[u]=min(low[u],low[v]);\n    if(dfn[u]==low[u])\n    {\n        co++;\n        while(1)\n        {\n            int t=stack[top];top--;\n            col[t]=co;\n            sum[co]++;//\u7edf\u8ba1\u73af\u91cc\u6709\u591a\u5c11\u7cd6\u679c\n            if(t==u)break;\n        }\n    }\n}\nint sl(int x,int s)\n{\n    if(col[x]==col[s])return 0;\n    //\u5982\u679c\u73b0\u5728\u8fd9\u4e2a\u70b9\u548c\u4e0a\u4e00\u4e2a\u70b9\u90fd\u5728\u4e00\u4e2a\u73af\u91cc\uff0c\u5c31\u9000\u51fa\u3002\n    if(f[x])return f[x];//\u8bb0\u5fc6\u5316\u641c\u7d22\uff0c\u4e0d\u7136\u4f1a\u8d85\u65f6...\n    int a=sum[col[x]],v=q[x];\n    return f[x]=a+sl(v,x);\n}\nint main()\n{\n    scanf(\"%d\",&N);\n    for(int i=1;i<=N;i++)\n    {\n        scanf(\"%d\",&l[i]);\n        q[i]=l[i];//q[i]\u662fi\u7684\u4e0b\u4e00\u4e2a\u70b9\n    }\n    for(int i=1;i<=N;i++)\n     if(!dfn[i])tarjan(i);\n    for(int i=1;i<=N;i++)\n     printf(\"%d\\n\",sl(i,0));\n    return 0;//OK.\n}\n```",
        "postTime": 1525921764,
        "uid": 57146,
        "name": "ifyml",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2921 \u3010[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    },
    {
        "content": "# \u7eaf\u8bb0\u5fc6\u5316\u641c\u7d22\n\n~~\u83dc\u9e21\u5199\u7ed9\u65b0\u624b\u770b\u7684~~\n\n\u672c\u849f\u84bb\u8868\u793a\u4e0d\u4f1a\u4ec0\u4e48Tarjan\u7f29\u70b9\uff1b\u53ea\u4f1a\u6253\u6253\u66b4\u641c\uff1b~~(\u672c\u849f\u84bb\u81ea\u5df1\u5199\u51fa\u7684\u7b2c\u4e00\u9053\u84dd\u9898\uff09.~~\n\n **\u66b4\u641c\u601d\u8def\uff1a**\n\n- \u9996\u5148\u8fd9\u9053\u9898\u7684\u56fe\u662f\u4e00\u6761\u5e26\u73af\u7684\u94fe\uff08\u53ef\u80fd\u662f\u4e0d\u8fde\u901a\u7684\uff0c\u4f46\u8fd9\u70b9\u5728\u4ee3\u7801\u5b9e\u73b0\u7684\u65f6\u5019\u53ef\u4ee5\u4e0d\u8003\u8651\uff09\uff0c\u90a3\u5c31\u5148\u6784\u9020\u51fa\u8fd9\u6761\u94fe\uff0c\u7136\u540e\u518d\u5728\u94fe\u91ccdfs\uff1b\n- \u4e00\u4e2a\u73af\u91cc\u7684\u9694\u95f4\u80fd\u591f\u5230\u8fbe\u7684\u9694\u95f4\u603b\u6570\u662f\u76f8\u540c\u7684\uff0c\u662f\u7b49\u4e8e\u8fd9\u4e2a\u73af\u91cc\u7684\u7ed3\u70b9\u4e2a\u6570\u7684\uff1b\u627e\u73af\u53ef\u4ee5\u5728dfs\u7684\u8fc7\u7a0b\u4e2d\u627e\uff0c\u5177\u4f53\u5982\u4f55\u64cd\u4f5c\u770b\u4ee3\u7801\uff1b\n- \u5982\u679c\u8fd9\u4e2a\u7ed3\u70b9\u4e0d\u5c5e\u4e8e\u4efb\u4f55\u4e00\u4e2a\u73af\uff0c\u90a3\u5b83\u80fd\u53bb\u5230\u7684\u603b\u9694\u95f4\u6570\u4f1a\u7b49\u4e8e\u5b83\u53bb\u5230\u7684\u4e0b\u4e00\u4e2a\u9694\u95f4\u80fd\u53bb\u5230\u7684\u9694\u95f4\u6570\u52a01\uff1b\n------------\n**\u601d\u8def\u6709\u4e86\uff0c\u4f60\u53ef\u4ee5\u5148\u53bb\u8bd5\u8bd5\u81ea\u5df1\u5b8c\u5584\u4ee3\u7801\uff0c\u5982\u679c\u8fd8\u4e0d\u884c\uff0c\u90a3\u518d\u770b\u4e0b\u9762\u7684\u4ee3\u7801\u4e5f\u4e0d\u8fdf\uff1b**\n\n**\u4ee3\u7801+\u5b9e\u73b0\u8fc7\u7a0b\uff1a**~~\u672c\u849f\u84bb\u4ee3\u7801\u80fd\u529b\u4e0d\u5f3a\uff0c\u53ef\u80fd\u8fd8\u53ef\u4ee5\u4f18\u5316\uff0c\u5982\u679c\u53ef\u4ee5\u8fd8\u8bf7\u8bc4\u8bba\u544a\u8bc9\u6211~~\n```cpp\n#include<iostream>\n#include<cstring>\nusing namespace std;\nbool c[100004],h[100004];//dfs\u904d\u5386\u4e2dc\u6570\u7ec4\u5224\u65ad\u662f\u5426\u904d\u5386\u8fc7\uff1bh\u5224\u65ad\u8fd9\u4e2a\u7ed3\u70b9\u662f\u5426\u5728\u73af\u91cc \nint father[100004];//\u4e0b\u4e00\u4e2a\u9694\u95f4 \uff1b \nint n;\nint d[100005];//\u6700\u7ec8\u7b54\u6848\uff1b \nvoid dfs(int x)\n{\n\tif(c[x]){//\u5f53dfs\u9047\u5230\u7ecf\u8fc7\u7684\u7ed3\u70b9\u65f6\uff0c\u4ece\u8fd9\u4e2a\u7ed3\u70b9\u5f00\u59cb\u5f80\u540e\u4e00\u5b9a\u4f1a\u6784\u6210\u4e00\u4e2a\u73af\uff1b\u4e3a\u4ec0\u4e48\u5462\uff0c\u53ef\u4ee5\u60f3\u8c61\u5f53\u4e00\u4e2a\u50cf\u4e00\u4e2a6\u4e00\u6837\u7684\u56fe\uff0c\u4ece\u5934\u90e8\u5f00\u59cbdfs\uff0c\u90a3\u5f53\u4f60\u9047\u5230\u7b2c\u4e00\u4e2a\u8d70\u8fc7\u7684\u70b9\u65f6\uff0c\u90a3\u5c31\u4ee3\u8868\u4f60\u80fd\u4ece\u8fd9\u4e2a\u70b9\u8d70\u56de\u8fd9\u4e2a\u70b9\uff0c\u90a3\u4e0d\u5c31\u662f\u4e00\u4e2a\u73af\u5417\uff1b \n\t\tint t=x,k=1;\n\t\tx=father[x];\n\t\twhile(x!=t){//\u8bb0\u5f55\u7ed3\u70b9\u6570\uff0c\u5b58\u73af\uff1b \n\t\t\tk++;\n\t\t\th[x]=1;\n\t\t\tx=father[x];\n\t\t}\n\t\th[x]=1;//\u4ee3\u7801\u5197\u6742\u90e8\u5206\uff0c\u54ea\u4f4d\u5927\u4f6c\u53ef\u4ee5\u89e3\u51b3\u4e00\u4e0b\uff1b\uff08\u5176\u5b9e\u5c31\u662f\u61d2\uff0c\u4e0d\u60f3\u6539\u4e86\uff09\uff1b \n\t\td[x]=k;\n\t\tx=father[x];\n\t\twhile(x!=t){//\u5b58\u7b54\u6848\uff1b \n\t\t\td[x]=k;\n\t\t\tx=father[x];\n\t\t}\n\t\treturn;\n\t}\n\tif(d[x]){//\u4e0b\u4e00\u4e2a\u70b9\u904d\u5386\u8fc7\uff0c\u90a3\u5c31\u8fd4\u56de\uff1b\u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5\u7528c\u6570\u7ec4\u5462\uff1f\u56e0\u4e3a\u4e0b\u9762\u6570\u7ec4\u5f52\u96f6\u4e86\uff1b\u90a3\u4e3a\u4ec0\u4e48\u8981\u5f52\u96f6\u5462\uff1f \u56e0\u4e3a\u6211\u4eec\u5224\u73af\u662f\u7528\u7684c\uff0c\u5982\u679cc\u4e0d\u5f52\u96f6\uff0c\u90a3\u5c31\u4f1a\u51fa\u73b0\u9519\u5224\u73af\uff1b\u6240\u4ee5\u8fd9\u91cc\u6211\u4eec\u7528d\u7684\u503c\u662f\u5426\u6539\u53d8\u8fc7\u6765\u5224\u65ad\uff1b \n\t\treturn;\n\t}\n\tc[x]=true;\n\tdfs(father[x]);\n\tif(!h[x]){//\u5982\u679c\u4e0d\u662f\u5728\u73af\u91cc\u7684\uff0c\u90a3\u4ed6\u80fd\u5230\u7684\u603b\u9694\u95f4\u6570\u5c31\u4f1a\u7b49\u4e8e\u5b83\u80fd\u53bb\u5230\u7684\u4e0b\u4e00\u4e2a\u9694\u95f4\u80fd\u53bb\u5230\u7684\u9694\u95f4\u6570\u52a01\uff1b \n\t\td[x]=d[father[x]]+1;\n\t}\n\treturn;\n}\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>father[i];\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tmemset(c,0,sizeof(c));//c\u5f52\u96f6\uff0cdfs\u91cc\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48\uff1b \n\t\tif(!d[i])//\u8981\u4e0d\u8981\u90fd\u65e0\u6240\u8c13\uff1b \n\t\tdfs(i);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tcout<<d[i]<<endl;\n\t}\n\treturn 0;\n}\n```\n\n\n------------\n\u9898\u89e3\u53ea\u662f\u63d0\u4f9b\u4e2a\u601d\u8def\uff0c\u5728\u4ee3\u7801\u5b9e\u73b0\u8fd9\u65b9\u9762\u8fd8\u662f\u8981\u9760\u81ea\u5df1\uff0c\u6240\u4ee5\u5f53\u4f60\u4e0b\u6b21\u770b\u9898\u89e3\u7684\u65f6\u5019\u4e0d\u59a8\u5c31\u53ea\u770b\u601d\u8def\uff0c\u518d\u81ea\u5df1\u5b9e\u73b0\u4ee3\u7801\uff0c\u8fd9\u6837\u53ef\u80fd\u5bf9\u4f60\u63d0\u5347\u4f60\u7684\u4ee3\u7801\u80fd\u529b\u4f1a\u66f4\u52a0\u6709\u6240\u5e2e\u52a9\uff1b",
        "postTime": 1570887442,
        "uid": 224436,
        "name": "zfz04",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2921 \u3010[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    },
    {
        "content": "[[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm](https://www.luogu.org/problemnew/show/P2921 \"[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\")\n\n- \u9898\u76ee\u5927\u610f:\n\n\u4ece\u56fe\u4e2d\u7b2c$i$\u53f7\u8282\u70b9\u5f00\u59cb\u904d\u5386,\u6bcf\u4e2a\u8282\u70b9\u5b58\u6709\u4e0b\u4e00\u6b65\u8981\u53bb\u7684\u8282\u70b9,\u5f53\u904d\u5386\u7684\u8def\u5f84\u51fa\u73b0\u73af\u65f6\u7ed3\u675f\u904d\u5386\u5e76\u8f93\u51fa\u8def\u5f84\u957f\u5ea6(\u8fb9\u6743\u9ed8\u8ba4\u4e3a\u4e00)\n\n~~\u5176\u5b9e\u662f\u505a\u5b8c\u4e86\u9898\u624d\u53cd\u5e94\u8fc7\u6765\u8fd9\u662f\u5f20\u56fe\u53ef\u4ee5\u8dd1tarjan~~(\u9003)\n\n\u6bcf\u6b21\u76f4\u63a5\u904d\u5386\u80af\u5b9a\u4f1a$T$,\u8003\u8651\u4f18\u5316.\n\u6bd4\u8f83\u5408\u9002\u7684\u4f18\u5316\u65b9\u6cd5\u5c31\u662f\u5728\u56fe\u4e0a\u904d\u5386\u7684\u65f6\u5019\u52a0\u4e2a\u8bb0\u5fc6\u5316,\u5728\u904d\u5386\u5230\u7ec8\u70b9\u65f6\u4fdd\u5b58\u8def\u5f84\u4e0a\u6240\u6709\u8282\u70b9\u7684\u7b54\u6848.\n\n\u8003\u8651\u600e\u4e48\u8ba1\u7b97\u8fd9\u6837\u7684\u7b54\u6848.\n\n- \u8def\u5f84\u4e00\u5b9a\u662f\u7531\u4e00\u6761\u94fe\u52a0\u4e0a\u4e00\u4e2a\u73af\u6784\u6210,\u5206\u60c5\u51b5\u6765\u8ba8\u8bba.\n\n\u5bf9\u4e8e\u73af\u4e0a\u7684\u8282\u70b9,\u4ece\u4efb\u4e00\u8282\u70b9\u51fa\u53d1,\u60f3\u8981\u56de\u5230\u4e00\u4e2a\u53bb\u8fc7\u7684\u8282\u70b9,\u53ea\u80fd\u56de\u5230\u4ed6\u81ea\u5df1,\u56e0\u4e3a\u672c\u9898\u4e2d\u6bcf\u4e2a\u8282\u70b9\u81f3\u591a\u53ea\u6709\u4e00\u6761\u51fa\u8fb9,\u6240\u4ee5\u8981\u8d70\u7684\u8def\u5f84\u957f\u5c31\u662f\u73af\u7684\u957f\u5ea6.\n\n\u5bf9\u4e8e\u94fe\u4e0a\u7684\u8282\u70b9,\u7b54\u6848\u5f88\u663e\u7136\u5c31\u662f\u4ece\u8d77\u59cb\u8282\u70b9\u5230\u7ec8\u70b9\u7684\u8def\u5f84\u957f\u51cf\u53bb\u4ece\u8d77\u59cb\u8282\u70b9\u5230\u8def\u5f84\u4e0a\u7b2ci\u4e2a\u8282\u70b9\u7684\u8ddd\u79bb.\n\n\u5173\u4e8e\u73af\u7684\u5224\u5b9a:\u7528\u4e00\u4e2a\u6808\u5b58\u904d\u5386\u65f6\u7ecf\u8fc7\u7684\u8282\u70b9,\u5f53\u904d\u5386\u5230\u5df2\u7ecf\u7ecf\u8fc7\u7684\u8282\u70b9\u65f6\u5c31\u5f39\u6808\u76f4\u5230\u4fbf\u5229\u5230\u7684\u8282\u70b9\u88ab\u5f39\u51fa,\u5f39\u6808\u5f39\u51fa\u7684\u6240\u6709\u8282\u70b9\u5373\u4e3a\u73af\u4e0a\u7684\u8282\u70b9.\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define N 100005\nusing namespace std;\ninline ll read(){\n    ll s=0,w=1;\n    char ch=getchar();\n    while(!isdigit(ch)){if(ch=='-')w=-1;ch=getchar();}\n    while(isdigit(ch)){s=s*10+ch-'0';ch=getchar();}\n    return s*w;\n}\nint n;\nint nxt[N],cnt[N],ans[N],vis[N];\t\nstack<int> s;\nvector<int> nd;\nint dfs(int from,int now,int cnt){\n    if(ans[now]) return ans[now];\n    vis[now]=1;\n    s.push(now);\n    if(ans[nxt[now]]) {\n    \tfor(int i=from,j=0;!ans[i];i=nxt[i],j++)\n        \tans[i]=cnt+ans[nxt[now]]-j;\t\t//\u9047\u5230\u5df2\u7ecf\u4fdd\u5b58\u8fc7\u7b54\u6848\u7684\u8282\u70b9\u5c31\u80fd\u4fdd\u5b58\u76ee\u524d\u8def\u5f84\u4e0a\u8282\u70b9\u7684\u7b54\u6848\u5e76\u9000\u51fa\n        return ans[from]=cnt+ans[nxt[now]];\n    }\n    if(vis[nxt[now]]){\n        int tmp=0,node;\n        do{\n            node=s.top();\n            nd.push_back(node);\n            s.pop();\n            tmp++;\n        }while(node!=nxt[now]);\n        for(int i=0;i<nd.size();i++){\n            ans[nd[i]]=tmp;\t\t//\u4fdd\u5b58\u73af\u4e0a\u8282\u70b9\u7684\u7b54\u6848\n        }\n        for(int i=from,j=0;!ans[i];i=nxt[i],j++){\n        \tans[i]=cnt-j;\t//\u4fdd\u5b58\u94fe\u4e0a\u8282\u70b9\u7684\u7b54\u6848\n        }\n        return ans[from]=cnt;\n    }\n    return dfs(from,nxt[now],cnt+1);\n}\nint main(){\n    n=read();\n    for(int i=1;i<=n;i++){\n        nxt[i]=read();\n    }\n    for(int i=1;i<=n;i++){\n        nd.clear();\n        int ans=dfs(i,i,1);\n        printf(\"%d\\n\",ans);\n    }\n    return 0;\n}\n```",
        "postTime": 1563960832,
        "uid": 119246,
        "name": "_Nova",
        "ccfLevel": 0,
        "title": "[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm"
    },
    {
        "content": "### \u89e3\u9898\u601d\u8def\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u5165\u5ea6\u6709\u4e14\u4ec5\u6709$1$\n\n\u56e0\u6b64\u6bcf\u4e00\u4e2a\u70b9\u5fc5\u5b9a\u4f1a\u5728$1$\u4e2a\u73af\u6216\u80fd\u591f\u5230$1$\u4e2a\u73af\u4e0a\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u7684\u7b54\u6848\uff1a\n\n- \u5982\u679c\u5728\u73af\u4e0a\uff0c\u5c31\u662f\u8fd9\u4e2a\u73af\u7684\u5927\u5c0f\uff08\u5faa\u73af\u5b8c\u4e00\u5708\u56de\u5230\u81ea\u5df1\uff09\n\n- \u4e0d\u5728\u73af\u4e0a\uff0c\u5c31\u662f\u5148\u5230\u8fd9\u4e2a\u73af\u4e0a\u518d\u7ed5\u4e00\u5708\u56de\u5230\u73af\u7684\u8d77\u70b9\uff0c\u5373\u6539\u70b9\u5230\u73af\u7684\u8ddd\u79bb\u52a0\u4e0a\u90a3\u4e2a\u73af\u7684\u5927\u5c0f\n\n### \u5b9e\u73b0\u65b9\u6cd5\n\n- \u9996\u5148\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u627e\u5b83\u6240\u5bf9\u5e94\u7684\u73af\uff0c\u8bb0\u5f55\u8be5\u73af\u5927\u5c0f\uff0c\u73af\u6253\u4e0a\u6807\u8bb0\uff0c\u641c\u8fc7\u7684\u73af\u4e0d\u7528\u518d\u641c\n\n\u8bbe\u94fe\u603b\u957f\u4e3a$k$\uff0c\u5219\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a:$\\Theta(kn)$\n\n- \u63a5\u7740\u4e5f\u662f\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u8ba9\u5b83\u679a\u4e3e\u627e\u73af\uff0c\u6709\u627e\u5230\u7684\u76f4\u63a5\u8fd4\u56de\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u540c\u6837\u662f:$\\Theta(kn)$\n\n\u8be5\u7b97\u6cd5\u74f6\u9888\u4e3a$k$\uff0c\u56e0\u6b64\u6700\u574f\u4f1a\u88ab\u5361\u5230:$\\Theta(n^2)$\n\n\u6240\u4ee5\u672c\u9898\u6570\u636e\u8fd8\u662f\u6c34\u4e86\u70b9\n\n### $hack$\u6570\u636e\n\nhttps://www.luogu.org/paste/xsn8gjnc\n\n### \u4ee3\u7801\n\n```cpp\n#include <cstdio>\nint n,s,sum,a[100001],ans[100001];\nbool vis[100001],in[100001],b[100001];\nint read(){\n    char ch=getchar();int res=0,w=1;\n    while(ch<'0'||ch>'9') {if(ch=='-') w=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9') {res=res*10+ch-'0';ch=getchar();}\n    return res*w;\n}\nvoid dfs1(int x){\n\tvis[x]=true;in[x]=true;\n\tif(vis[a[x]]&&(in[a[x]]||b[a[x]])) s=a[x];\n\telse dfs1(a[x]);\n\tin[x]=false;\n}\nvoid dfs2(int x){\n\tb[x]=true;sum++;\n\tif(!b[a[x]]) dfs2(a[x]);\n\tans[x]=sum;\n}\nvoid dfs3(int x){\n\tif(!ans[a[x]]) dfs3(a[x]);\n\tans[x]=ans[a[x]]+1;\n}\nint main(){\n\tn=read();\n\tfor(register int i=1;i<=n;i++) a[i]=read();\n\tfor(register int i=1;i<=n;i++)\n\t\tif(!vis[i])\n\t\t{\n\t\t\tdfs1(i);\n\t\t\tif(!b[s]) {sum=0;dfs2(s);}\n\t\t}\n\tfor(register int i=1;i<=n;i++)\n\t\tif(!ans[i]) dfs3(i);\n\tfor(register int i=1;i<=n;i++) printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n```",
        "postTime": 1563722300,
        "uid": 80679,
        "name": "Register",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2921 \u3010[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    },
    {
        "content": "\u6628\u5929\u5199\u4e86\u7bc7\u9898\u89e3\u5374\u56e0\u3010\u91cd\u590d\u7684\u89e3\u6cd5\u3011\u88ab\u62d2\u7edd\u4e86\uff0c\u592a\u7f9e\u803b\u4e86\u3002\n\n\u8fd9\u6b21\u6211\u601d\u8def\u5e94\u8be5\u4e0d\u4f1a\u6709\u91cd\u590d\u7684\uff0c\u7c97\u7565\u7684\u5730\u770b\u4e86\u770b\u5927\u5bb6\u90fd\u6bd4\u8f83\u957f\u3002\u6211\u7684\u4ee3\u7801\u6bd4\u8f83\u77ed\u5427\u3002\n\n\u601d\u8def\u5982\u4e0b\uff1a\u4e24\u4e2a\u6570\u7ec4\uff0c\u4e00\u4e2avis[],\u4e00\u4e2adat[]\uff0cvis\u7528\u6765\u5b58\u50a8\u7684\u662f\u6df1\u5ea6\uff0cdat\u7528\u6765\u50a8\u5b58\u7b54\u6848\u3002\u8fd9\u4e2a\u9898\u5b9e\u9645\u4e0a\u662f\u7531\u4e00\u4e9b\u73af\u548c\u4e00\u4e9b\u6811\u6839\u6302\u5728\u73af\u4e0a\u7684\u6811\u7ec4\u6210\u7684\u3002\n\n\u4e0d\u65ad\u9012\u5f52\uff0c\u5982\u679c\u53d1\u73b0\u6df1\u5ea6\u6bcf\u6b21+1\u8d4b\u7ed9vis\uff0c\u5982\u679c\u53d1\u73b0\u5f53\u524dvis\u4e0a\u6709\u503c\uff0c\u90a3\u4e48\u628a\u4ed6\u7684dat\u8d4b\u4e3ad-vis\uff1b\u628ahuan\u8fd9\u4e2a\u5168\u5c40\u53d8\u91cf\u8d4b\u4e3atrue\uff0c\u6b64\u65f6\u6bcf\u6b21return dat[u]\uff1b\u518d\u6b21\u8d70\u5230\u539f\u4f4d\u7f6e\uff08\u5224\u65ad\u65b9\u6cd5\u5f88\u591a\uff0c\u8fd9\u91cc\u6211\u662f\u91c7\u7528\u56de\u5230\u539f\u4f4d\u7f6e\u65f6\u5df2\u7ecf\u6709dat\u6765\u5224\u65ad\uff09\u628ahuan\u8fd9\u4e2a\u5168\u5c40\u53d8\u91cf\u8d4b\u4e3afalse\uff0c\u6b64\u65f6return dat[u]+1;\n\n\u9012\u5f52\u524d\u4e5f\u6709\u4e2a\u5224\u65ad\uff0c\u5982\u679cdat\u6709\u503c\uff0c\u90a3\u4e48\u8fd4\u56dedat[u]+1;\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <memory.h>\n\nusing namespace std;\nconst int maxn = 100010;\n\nint n;\nint da[maxn],vis[maxn],dat[maxn];\nbool huan =false;\n\nint dfs(int u,int d){\n    if(dat[u]) return dat[u]+1;\n    if(vis[u]){\n        dat[u] = d- vis[u];\n        huan = true;\n        return dat[u];\n    }\n    vis[u] = d;\n    int res = dfs(da[u],d+1);\n    if(dat[u]) huan = false;\n    if(huan) return dat[u] = res;\n    return (dat[u] = res)+1;\n}\n\nint main()\n{\n    memset(vis,0,sizeof(vis));\n    memset(dat,0,sizeof(dat));\n    cin>>n;\n    for(int i =1;i<=n;i++) cin>>da[i];\n    for(int i =1;i<=n;i++) if(!vis[i]) dfs(i,1);\n    for(int i =1;i<=n;i++) cout<<dat[i]<<endl;\n    return 0;\n}\n\n```\n\n",
        "postTime": 1545970243,
        "uid": 126027,
        "name": "huainan_marquis",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2921 \u3010[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    },
    {
        "content": "## **\u524d\u7f6e**\n\u770b\u4e86\u51e0\u7bc7\u9898\u89e3\u90fd\u53d1\u73b0\u4e0d\u600e\u4e48\u80fd\u770b\u61c2  \n\u6700\u540e\u4e5f\u5c31\u53ea\u80fd\u81ea\u5df1\u778e\u903c\u903c\uff0c~~\u800c\u4e14\u8fd8AC\u4e86~~...\n### **\u9898\u89e3**\n\u63a5\u4e0b\u6765\u8ba9\u6211\u4eec\u6b65\u5165\u6b63\u9898  \n~~\u7c97\u7565~~\u9605\u8bfb\u9898\u76ee\u6211\u4eec\u4f1a\u53d1\u73b0\uff1a  \n\u6bcf\u4e2a\u70b9\u90fd\u53ea\u6709\u4e00\u4e2a\u51fa\u8fb9  \n  \n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff1a**\u5176\u5b9e\u5bf9\u4e8e\u6bcf\u4e2a\u8fde\u901a\u56fe\u90fd\u53ea\u6709\u4e00\u4e2a\u73af!!!** \n\uff08\u4e3a\u4ec0\u4e48\u8bf4\u8fde\u901a\u56fe\u5462?\u56e0\u4e3a~~\u4ed4\u7ec6~~\u89c2\u5bdf\u6837\u4f8b\uff0c\u53d1\u73b0\u5e76\u4e0d\u662f\u6240\u6709\u7684\u70b9\u90fd\u662f\u8fde\u8d77\u6765\u7684.\uff09\n\n\u4e00\u4e2a\u73af\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4e0d\u7528\u7f29\u70b9\u7b49\u9ad8\u6df1\u7684\u7b97\u6cd5\u4e86.  \n  \n1\u3001\u6211\u4eec\u5148\u8981\u627e\u51fa\u6bcf\u4e2a\u73af\uff0c\u5e76\u4e14\u53ea\u5c06\u8fd9\u4e2a\u73af\u91cc\u9762\u7684\u6240\u6709\u70b9\u7684\u8d21\u732e\u8d4b\u4e3a\u73af\u7684\u957f\u5ea6\u3002\uff08**\u4e0d\u7528\u7ba1\u9664\u4e86\u73af\u5916\u7684\u70b9**\uff09  \n\uff08\u8fd9\u5f88\u597d\u5904\u7406\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4e00\u904ddfs\u5373\u53ef\uff09  \n2\u3001\u7136\u540e\u5c31\u662f\u8be2\u95ee\u7b54\u6848\u4e86.  \n\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u6709\u4e24\u79cd\u60c5\u51b5.  \none:\u672c\u8eab\u5904\u4e8e\u73af\u4e2d.  \ntwo:\u4e0d\u5904\u4e8e\u73af\u4e2d.  \n\uff08~~\u8fd9\u4e0d\u662f\u5e9f\u8bdd\u4e48~~.\uff09  \n\u5bf9\u4e8eone,\u6211\u4eec\u76f4\u63a5\u8f93\u51fa\u521a\u624ddfs\u51fa\u7684\u957f\u5ea6\u5373\u53ef.  \n\u5bf9\u4e8etwo,\u6211\u4eec\u5c31\u4e00\u76f4\u627e\u5b83\u6240\u6307\u5411\u7684\u4f4d\u7f6e,\u76f4\u5230\u90a3\u4e2a\u70b9\u5c5e\u4e8e\u4e00\u4e2a\u73af.  \n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5728O(n)\u7684\u65f6\u95f4\u91cc\u9762AC\u5566\u3002\n#### \u4ee3\u7801\n```.cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=100005;\nint n,len,dp[N],a[N],x,p,to[N];\nbool vis[N]; \nvoid dfs(int t) //\u627e\u73af\n{\n\tvis[t]=true;\n\tlen++;\n\ta[len]=t; //a\u6570\u7ec4\u8868\u793a\u904d\u5386\u8fc7\u7684\u70b9\n\tif (vis[to[t]]) //\u53d1\u73b0\u5df2\u7ecf\u904d\u5386\u8fc7\n\t{\n\t\tp=len;\n\t\tx=1;\n\t\twhile(a[len]!=to[t] && len>0)//x\u8868\u793a\u73af\u7684\u957f\u5ea6\n\t\t{\n\t\t\tx++;\n\t\t\tlen--;\n\t\t}\n\t\tif (a[len]!=to[t]) return;\n\t\tfor (int i=len;i<=p;i++) //\u5c06\u73af\u91cc\u7684\u6bcf\u4e00\u4e2a\u70b9\u90fd\u8d4b\u6210\u73af\u7684\u957f\u5ea6\n\t\t  dp[a[i]]=x;\n\t}\n\telse \n\t  dfs(to[t]);\n}\nint work(int t) //\u8ba1\u7b97\u7b54\u6848\n{\n\tif (dp[t]) return dp[t];\n\treturn 1+work(to[t]);\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor (int i=1;i<=n;i++)\n\t  scanf(\"%d\",&to[i]);\n\tfor (int i=1;i<=n;i++)\n\t  if (vis[i]==false)\n\t  { \n\t    len=0;\n\t    dfs(i);\n\t  }\n\tfor (int i=1;i<=n;i++)\n\t  printf(\"%d\\n\",dp[i]=work(i));\n\treturn 0;\n}\n```\n\n\t  printf(\"%d\\n\",dp[i]=work(i));\n      \u5bf9\u4e8e\u8fd9\u53e5\u8bdd\u5927\u5bb6\u53ef\u80fd\u6709\u7591\u95ee  \n      \u4e3a\u4ec0\u4e48\u8981dp[i]=work(i)\u5462\uff1f\n      \u56e0\u4e3a\u5f53\u524d\u8fd9\u4e2a\u70b9\u7684\u7b54\u6848\u7edf\u8ba1\u51fa\u6765\u540e\uff0c\u522b\u7684\u70b9\u5982\u679c\u904d\u5386\u5230\u8fd9\u4e2a\u70b9  \n      \u5c31\u53ef\u4ee5\u76f4\u63a5\u7edf\u8ba1\u7b54\u6848\u4e86\u3002  \n      \uff08\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u590d\u6742\u5ea6\u662fO\uff08n\uff09\u7684\u539f\u56e0\uff09\n\u8fd9\u6837\u5c31\u6109\u5feb\u7684\u7ed3\u675f\u4e86\u3002\n~~\u8bb0\u5f97\u597d\u8bc4\u54e6\uff0c\u4eb2~~~~~~",
        "postTime": 1545825644,
        "uid": 88040,
        "name": "\u82e5\u7389",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2921 \u3010[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    },
    {
        "content": "\u554a\uff0c\u7b2c\u4e00\u6b21\u5199\u9898\u89e3\u3002\u3002\u5199\u7684\u4e0d\u5927\u597d\u8bf7\u89c1\u8c05\uff01\uff01\n\u8fdb\u5165\u6b63\u9898\uff1a\n\u770b\u5b8c\u9898\u76ee\u6211\u4eec\u4f1a\u6ce8\u610f\u5230\n1. \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u5b83\u53ea\u6709\u4e00\u4e2a\u51fa\u5ea6\uff0c\u4e00\u4e2a\u6216\u96f6\u4e2a\u6216\u591a\u4e2a\u5165\u5ea6\uff1b\n\n1. \u73af\u5728\u9898\u76ee\u4e2d\u7684\u610f\u601d\u5f88\u51f8\u663e\uff1b\n\n\u90a3\u4e48\u6211\u4eec\u518d\u628a\u56fe\u753b\u4e00\u753b\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a~~\u60ca\u5929\u5927\u79d8\u5bc6~~\u5c0f\u7ed3\u8bba\uff1a\n\u5176\u5b9e\u56fe\u5c31\u662f\u5f88\u591a\u6761\u94fe\uff0c\u8fd9\u6761\u94fe\u4ee5\u4e00\u4e2a\u73af\u4e3a\u7ed3\u675f\uff0c\u5f62\u8c61\u4e00\u70b9\u7684\u5c31\u76f8\u5f53\u4e8e\u4e00\u7aef\u662f\u4e00\u4e2a\u7ed3\u7684\u7ef3\u5b50\uff0cOK\u90a3\u4e48\u6211\u4eec\u8dd1\u4e00\u4e2atarjan\u7f29\u70b9\u6700\u7ec8\u6211\u4eec\u53ef\u4ee5\u628a\u56fe\u5904\u7406\u6210\u5f88\u591a\u6761\u666e\u901a\u7684\u94fe\uff0c\u7b54\u6848\u4e5f\u5f88\u663e\u800c\u6613\u89c1\u4e86\u3002\u73af\u4e0a\u7684\u70b9\u7684\u7b54\u6848\u81ea\u7136\u7b49\u4e8e\u73af\u7684\u5927\u5c0f\uff0c\u73af\u5916\u7684\u70b9\u7684\u7b54\u6848=\u73af\u7684\u5927\u5c0f+\u73af\u5230\u8fd9\u4e2a\u70b9\u7684\u8ddd\u79bb\u3002\u8bb2\u5230\u8fd9\u91cc\u5f88\u663e\u7136\u53ef\u4ee5(\u4e2a\u4eba\u89c9\u5f97tarjan\u5f88\u597d\u7528)tarjan+dfs\u8dd1\u7b54\u6848\u4e86\u3002\n\n\u6211\u7684\u505a\u6cd5\u662f\uff0ctarjan\u7f29\u70b9 \u7136\u540e \u4ece\u73af\u5f00\u59cb\u53cd\u5411dfs\u90a3\u4e48\u5c31\u53ef\u4ee5\u4e00\u6b21dfs\u8dd1\u51fa\u4e00\u6761\u94fe\u7684\u6240\u6709\u7b54\u6848\u5566\uff01\n\n\u653eAC\u4ee3\u7801~~\uff08\u8fd9\u624d\u662f\u91cd\u70b9\uff09~~\n```cpp\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934\u4e5f\u4e0d\u5927\u63a8\u8350\u3002\u3002\u3002\n//\u8fd9\u9898\u6211\u4e4b\u524d\u8111\u6b8b\u7684\u7528\u4e86\u90bb\u63a5\u8868\u5b58\u56fe \u5927\u5bb6\u53ef\u4ee5\u4e0d\u6a21\u4eff\nusing namespace std;\nint n,m,num,h[1000000],fin[1000000],id[1000000],dfn[1000000],low[1000000],t,in[1000000],loop[1000000],gg,ans[1000000];\nstack <int> p;//\u8dd1tarjan\u7528\nstruct edge \n{\n    int to,next,rev;//\u7ec8\u70b9 \u4e0b\u4e00\u6761\u8fb9\u7684\u5730\u5740\uff08\u5728\u8fd9\u9898\u6ca1\u7528\uff09 \u662f\u5426\u662f\u53cd\u8fb9\n}e[10000000];\nvoid readdata()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        int x;\n        scanf(\"%d\",&x);\n        num++;//\u53cd\u5411\u5b58\u56fe\n        e[num].to=i;\n        e[num].next=h[x];\n        h[x]=num;\n        e[num].rev=1;//\u8fd9\u662f\u53cd\u8fb9\n        num++;//\u6b63\u5411\u5b58\u56fe\n        e[num].to=x;\n        e[num].next=h[i];\n        h[i]=num;\n        e[num].rev=0;//\u8fd9\u662f\u6b63\u8fb9\n    }\n}\nvoid tarjan(int s)\n{\n    dfn[s]=low[s]=++t;//\u65f6\u95f4\u6233\u8bb0\u5f55\n    p.push(s);//\u8fdb\u53bb\n    in[s]=1;//\u6807\u8bb0\u8be5\u70b9\u5df2\u5728\u961f\u5217 \n    for(int i=h[s];i;i=e[i].next)\n    {\n        if(!e[i].rev)//\u8dd1\u6b63\u8fb9\n        {\n            int o=e[i].to;\n            if(!dfn[o])//\u8fd8\u6ca1\u53d1\u73b0 \n            {\n                tarjan(o);\n                low[s]=min(low[s],low[o]);\n            }\n            else if(in[o]) low[s]=min(low[s],dfn[o]);//\u5982\u679co\u70b9\u5df2\u7ecf\u5728\u961f\u5217\u4e2d \n        }\n    }\n    if(dfn[s]==low[s])//\u5219s\u662f\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u6839 \n    {\n        gg++;\n        int k;\n        do\n        {\n            k=p.top();\n            p.pop();\n            in[k]=0;\n            id[k]=gg;//id i \u8868\u793ai\u70b9\u5728\u54ea\u4e00\u4e2a\u5708\u5185\n            loop[gg]++;//\u5c06\u4e00\u4e2a\u5206\u91cf\u4e2d\u7684\u5143\u7d20\u67d3\u6210\u4e00\u8272 loop \u8868\u793a\u5708\u7684\u5927\u5c0f\n        }while(s!=k);\n    }\n}\nvoid dfs_findans(int x,int fa)//\u5f53\u524d\u70b9 \u70b9\u7684\u7238\u7238\n{\n    fin[x]=1;\n    if(id[x] == id[fa])//\u5982\u679c\u5728\u540c\u4e00\u4e2a\u5708\u5185\n        ans[x]=ans[fa];//\u90a3\u4e48\u4ed6\u4eec\u90fd\u7b49\u4e8e\u5708\u7684\u5927\u5c0f\n    if(id[x] != id[fa])//\u5982\u679c\u4e0d\u5728\u540c\u4e00\u4e2a\u5708\u5185\n        ans[x]=ans[fa]+1;\n    for(int i=h[x];i;i=e[i].next)\n    {\n        if(e[i].rev==1)//\u5728\u8fd9\u91cc\u8dd1\u53cd\u8fb9\n        {\n            int p=e[i].to;\n            if(!fin[p])//\u8bb0\u5f55\u5df2\u7ecf\u5b8c\u6210\n            {\n                dfs_findans(p,x);\n\t\t\t}\n        }\n    }\n}\nint main()\n{\n    readdata();\n    for(int i=1;i<=n;i++)//\u8dd1tarjan\n        if(!dfn[i])\n        tarjan(i);\n    for(int i=1;i<=n;i++)//\u8fd9\u91cc\u662f\u4e3a\u4e86\u5904\u7406\u4e00\u4e0b\u81ea\u73af\u548c\u53ea\u6709\u4e00\u4e2a\u70b9\u7684\u60c5\u51b5\n        if(loop[id[i]]==1)\n            for(int j=h[i];j;j=e[j].next)\n            {\n                if(!e[j].rev)\n                {\n                    int o=e[j].to;\n                    if(o!=i)//\u5982\u679c\u4e0d\u662f\u81ea\u73af\n                        loop[id[i]]--;//\u628a\u4e0d\u662f\u81ea\u73afloop\u7684\u8bb0\u5f55\u62100\n                }\n            }\n    for(int i=1;i<=n;i++)\n    {\n        if(loop[id[i]]>=1 && !fin[i])//\u5982\u679c\u5b83\u662f\u4e00\u4e2a\u73af \u90a3\u4e48\u6211\u5c31\u4ece\u4ed6\u5f00\u59cb\u53cd\u5411\u8dd1\u56fe\u8bb0\u5f55\u7b54\u6848\n        {\n            ans[i]=loop[id[i]];//\u76f4\u63a5\u7b49\u4e8e\u73af\u7684\u5927\u5c0f\n            dfs_findans(i,i);\n        }\n    }\n    for(int i=1;i<=n;i++) printf(\"%d\\n\",ans[i]);\n    return 0;\n}\n```",
        "postTime": 1538824218,
        "uid": 86283,
        "name": "\u53ef\u601c\u7684\u5c0f\u767d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2921 \u3010[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    },
    {
        "content": "## \u6211\u628a\u5b83\u5355\u7eaf\u5f53\u6a21\u62df\u9898\u6765\u5199\u4e86 \uff08==\uff09\n  \n\n------------\n- \u6211\u4eec\u9996\u5148\u7406\u89e3\u9898\u610f\uff1a\u725b\u987a\u7740\u623f\u95f4\u6307\u793a\u5f80\u4e0b\u8dd1\uff0c\u8dd1\u5230\u5b83\u66fe\u7ecf\u5230\u7684\u623f\u95f4\u5c31\u505c\u3002\u9996\u5148\u641e\u5b9a\uff0c\u4e00\u5b9a\u6709\u73af\u5bf9\u5427\uff0c\u4e0d\u7136\u4e0d\u4f1a\u505c\u4e0b\u3002\n- \u7406\u89e3\u5b8c\u9898\u610f\u5c31\u53ef\u4ee5\u5f00\u59cb\u6a21\u62df\u4e86\uff0c\u5230\u8fc7\u7684\u5230\u8fc7\u7684\u623f\u95f4\u5168\u90e8\u6807\u8bb0\uff0c\u5e76\u6807\u8bb0\u6700\u5148\u5230\u8fd9\u4e2a\u623f\u95f4\u7684\u662f\u54ea\u4e00\u5934\u725b\uff0c\u8fd9\u6837\u8bb0\u5f55\u6709\u4ec0\u4e48\u7528\u5462\uff1f\u8fd9\u53ef\u4ee5\u7528\u6765\u533a\u5206\u662f\u81ea\u73af\u8fd8\u662f\u6700\u540e\u4e00\u5b9a\u662f\u9677\u5165\u4ed6\u73af\uff0c\u8fd9\u5f88\u91cd\u8981\u3002\n- \u597d\u7684\uff0c\u7b56\u7565\u62df\u5b9a\u597d\uff0c\u6211\u4eec\u7528\u66b4\u529b\u6765\u5b9e\u73b0\u8fd9\u4e2a\u7b56\u7565\uff0c\u4f55\u65f6\u5f00\u59cb\u641c\uff0c\u623f\u95f4\u6ca1\u6709\u725b\u6765\u8fc7\u5c31\u641c\u5457\uff0c\u7136\u540e\u4e0b\u4e00\u4e2a\u4e00\u4e2a\u623f\u95f4\u5982\u679c\u6ca1\u725b\u5230\u8fc7\uff0c\u90a3\u5934\u725b\u5c31\u53bb\u90a3\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u6700\u540e\u4e00\u5b9a\u4f1a\u9047\u5230\u4e0b\u4e00\u4e2a\u623f\u95f4\u66fe\u7ecf\u6709\u725b\u6765\u8fc7.\n- \u65e0\u8def\u53ef\u8d70\u4e86\uff0c\u6211\u4eec\u8fd9\u4e2a\u65f6\u5019\u5c31\u53ef\u4ee5\u5224\u65ad\u4e86\uff1a(1)  \u5982\u679c\u662f\u81ea\u5df1\u5230\u8fc7\u7684\uff0c\u6211\u4eec\u5c31\u627e\u5230\u4e86\u73af\u5185\u7684\u4e00\u70b9po\uff0c\u800c\u4e14\u662f\u725b\u6700\u65e9\u6765\u7684\u70b9\uff0c\u8be5\u70b9\u7684ans[po]\u5c31\u662f\u8fd9\u4e2a\u73af\u7684\u5927\u5c0f\uff0c\u6211\u4eec\u8bb0\u5f55\u4e0b\u5b83\u7684\u4f4d\u7f6e\u5373\u53ef\uff0c\u4ee5\u4fbf\u7b49\u7b49\u628a\u8fd9\u4e2a\u73af\u4e0a\u7684\u503c\u7edf\u4e00\u4e3aans[po];\uff082\uff09\u5982\u679c\u662f\u522b\u7684\u725b\u8d70\u8fc7\u4e86\uff0c\u6211\u4eec\u8fd9\u5934\u806a\u660e\u7684\u725b\u4e3a\u5565\u8981\u518d\u8d70\u4e00\u904d\u505a\u540c\u6837\u7684\u4e8b\u60c5\u9981\uff0c\u800c\u4e14\u8fd9\u4e2a\u70b9\u7684ans\u4e00\u5b9a\u66f4\u65b0\u8fc7\uff0c\u76f4\u63a5\u52a0\u4e0aans[next[x]]\u8d70\u4eba\u4e86\u3002\n\n\n------------\n\n\u4ee3\u7801\uff1a\uff08\u4ece\u4e3b\u7a0b\u5e8f\u5f00\u59cb\u770b\u5427\uff09\n\n```\n#include<iostream>\n#include<cstdlib>\n#include<memory.h>\n#include<math.h>\n#include<stdio.h>\nusing namespace std;\nconst long N=100001;\nlong next[N],n,ans[N]={0},snum=0,num[N]={0},po;\nbool b[N]={0};//\u8bb0\u5f55\u6709\u6ca1\u725b\u6765\u8fc7\nvoid read()\n{\n\tcin>>n;\n\tfor(long i=1;i<=n;++i)\n\t{\n\t\tcin>>next[i];\n\t\tans[i]=1;  //\u521d\u59cb\u5316\u90fd\u662f1\uff1b\n\t\tif(next[i]==i) //\u8fd8\u6ca1\u5f00\u59cb\u5c31\u7ed3\u675f\u7684\u70b9\u76f4\u63a5\u7b5b\u6389\n\t\t{\n\t\tb[i]=1;\n\t\t}\n\t}\n}\nlong search(long x)\n{\n   long res;\n  res=1; //\u521d\u59cb\u503c\u662f1\uff1b\n  if(b[next[x]]==0)//\u53ef\u4ee5\u5f80\u4e0b\u8dd1\n  {\n  \tb[next[x]]=1;//\u6807\u8bb0\u6709\u725b\n  \tnum[next[x]]=snum;//\u662f\u8fd9\u5934\u725b\u8dd1\u7684\n  \tres+=search(next[x]);//\u7d2f\u52a0\u7b54\u6848\n  }\n  else//\u4e0b\u4e00\u4e2a\u623f\u95f4\u6709\u725b\u6765\u8fc7\n  {\n  \tif(num[next[x]]==num[x])//\u662f\u81ea\u5df1\u8dd1\u7684\n  \t{\n  \t  po=next[x];//\u4e0b\u4e00\u4e2a\u623f\u95f4\u5c31\u662f\u73af\u5934\uff0cans[po]=\u73af\u7684\u5927\u5c0f\uff1b\n\t\treturn 1;//\u8fd4\u56de\n  \t}\n  \telse\n  \t{\n  \t\tres+=ans[next[x]];//\u4e0d\u662f\u81ea\u5df1\u8dd1\u7684\uff0c\u76f4\u63a5\u7d2f\u52a0\u7b54\u6848\n  \t}\n  }\n  ans[x]=res;//\u8bb0\u5fc6\u4e00\u4e0b\uff0c\u6709\u725b\u8dd1\u8fc7\u7684\u623f\u95f4\u5c31\u6709\u503c\uff0c\u4e14\u6700\u4f18\uff1b\n  return res;//\u8fd4\u56de\n  \n}\nvoid doit()\n{ long now;\n\tfor(long i=1;i<=n;++i)\n\t{\n\t\tif(b[i]==0)//\u6709\u6ca1\u725b\u6765\u8fc7\u7684\u70b9\n\t\t{\n\t\t\tb[i]=1; //\u8fd9\u91cc\u5f97\u5148\u5904\u7406\uff0c\u4ee5\u514d\u8fd9\u5c31\u662f\u6362\u4e0a\u70b9\uff1b\n\t\t\tsnum++;//\u8dd1\u8d77\u6765\u7684\u7b2c\u51e0\u5934\u725b\uff1b\n\t\t     po=0;//\u8bb0\u5f55\u73af\u4e0a\u70b9\u7684\u8ba1\u6570\u5668\u5f52\u96f6\n\t\t     num[i]=snum;//\u8fd9\u4e2a\u623f\u95f4\u662f\u7b2c\u51e0\u5934\u8dd1\u8d77\u6765\u7684\u725b\u6765\u7684\n\t\t\tans[i]=search(i);//\u8ba1\u7b97\u7b54\u6848\n\t\t\tif(po>0)//\u6709\u73af\uff01\uff01\uff01\n\t\t\t{  \n\t\t\t\tnow=next[po];\n\t\t\t\twhile(now!=po)//\u8dd1\u73af\u5e76\u66f4\u65b0\u73af\n\t\t\t\t{\n\t\t\t\t\tans[now]=ans[po];\n\t\t\t\t\tnow=next[now];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nvoid print()//\u8f93\u51fa\n{\n\tfor(long i=1;i<=n;++i)\n\t{\n\t\tcout<<ans[i]<<endl;\n\t} \n}\nint main()\n{  \nread();\ndoit();\nprint();\nreturn 0;\n} \n```",
        "postTime": 1533709179,
        "uid": 106591,
        "name": "zery",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2921 \u3010[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    },
    {
        "content": "\u663e\u7136\u53ef\u4ee5\u8dd1\u4e00\u8fb9Tarjan\u7f29\u70b9\u7136\u540e\u8bb0\u5fc6\u5316\u7206\u641c\u3002\u3002\n\n\u867d\u7136\u53ef\u4ee5\u4e0d\u7528Tarjan\uff0c\n\n\u90a3\u5c31\u5f53\u662f\u91cd\u65b0\u7ec3\u7ec3Tarjan\u4e86\u3002\n\n\u76f4\u63a5\u8d34\u4ee3\u7801\u3002\n\n\u4e0b\u9762\u6709\u6ce8\u91ca\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = 100000;\n\nint n;\nint to[N + 1];\nint col[N + 1];\nint dis[N + 1];\nint dnf[N + 1];\nint low[N + 1];\nint nex[N + 1];\nint res[N + 1];\nbool in[N + 1];\nint S[N + 1];\nint top;\nint tot;\nint T;\n\nvoid Tarjan(int x) {\n\tS[++top] = x;\n\tin[x] = 1;\n\tdnf[x] = low[x] = ++T;\n\tif(!dnf[to[x]]) {\n\t\tTarjan(to[x]);\n\t\tlow[x] = min(low[x], low[to[x]]);\n\t}\n\telse if(in[to[x]])\n\t\tlow[x] = min(low[x], dnf[to[x]]);\n\tif(dnf[x] == low[x]) {\n\t\tint f = 0;\n\t\ttot++;\n\t\twhile(f != x) {\n\t\t\tf = S[top--];\n\t\t\tdis[tot]++;\n\t\t\tin[f] = 0;\n\t\t\tcol[f] = tot;\n\t\t}\n\t}\n}//Tarjan\u7f29\u70b9\n\nint get_res(int x) {\n    if(nex[x] == x) return dis[x];\n    if(res[x]) return res[x];\n    return res[x] = dis[x] + get_res(nex[x]);\n}//\u8bb0\u5fc6\u5316\uff0c\u5982\u679c\u4e4b\u524d\u5df2\u7ecf\u7b97\u8fc7\u7b54\u6848\u4e86\u5c31\u76f4\u63a5return\n\nint main() {\n\tscanf(\"%d\", &n);\n\tfor(int i = 1; i <= n; i++) scanf(\"%d\", &to[i]);\n\tfor(int i = 1; i <= n; i++) if(!dnf[i]) Tarjan(i); //\u7f29\u70b9\n\tfor(int i = 1; i <= n; i++) nex[col[i]] = col[i]; //\u53cd\u6b63\u7f29\u70b9\u540e\u5c31\u662fDAG\uff0c\u76f4\u63a5\u5f53\u505a\u5e76\u67e5\u96c6\u6765\u641e\n\tfor(int i = 1; i <= n; i++) if(col[i] != col[to[i]]) nex[col[i]] = col[to[i]];//\u7c7b\u4f3c\u5e76\u67e5\u96c6\u7684\u201c\u8ba4\u7236\u4eb2\u201d\n\tfor(int i = 1; i <= n; i++) if(!res[col[i]]) res[col[i]] = get_res(col[i]);//\u67e5\u627e\u6bcf\u4e00\u4e2a\u7f29\u8fc7\u70b9\u7684\u7b54\u6848\n\tfor(int i = 1; i <= n; i++) printf(\"%d\\n\", res[col[i]]);//\u6bcf\u4e00\u4e2a\u73af\u91cc\u7684\u70b9\u7684\u7b54\u6848\u90fd\u662f\u4e00\u6837\u7684\n\treturn 0;\n}\n```",
        "postTime": 1523622584,
        "uid": 20782,
        "name": "CYJian",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2921 \u3010[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    },
    {
        "content": "\u9996\u5148tarjan\u7f29\u70b9\uff0c\u4e4b\u540e\u63d0\u4f9b\u4e00\u79cd\u4e0d\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u7684\u601d\u8def\u3002\n\n\u6211\u4eec\u5c06\u7f29\u70b9\u540e\u7684\u56fe\u53cd\u5411\u5730\u5efa\u8fb9\uff0c\u7531\u4e8e\u662fDAG\uff0c\u505a\u4e00\u6b21\u7c7b\u4f3c\u62d3\u6251\u6392\u5e8f\u7684dp\u5c31\u597d\u4e86\u3002\u6b63\u786e\u6027\u663e\u7136\uff0c\u53ef\u624b\u63a8\u8ba1\u7b97\u4e00\u4e0b\u3002\n\n\uff08\u5176\u5b9e\u548c\u8bb0\u5fc6\u5316\u4e5f\u5dee\u4e0d\u591a\u7684\u611f\u89c9\u3002\u3002\uff09\n\n\u8d34\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#include<cmath>\n#include<queue>\n#include<vector>\n#include<map>\n#include<cctype>\n#define F first\n#define S second\n#define pb push_back\n#define mp make_pair\nusing namespace std;\n \nconst int INF = 1e9;\nconst double EPS = 1e-8;\n \ninline int read()\n{\n    char ch = getchar(); int x = 0, flag = 1;\n    while (!isdigit(ch)){ if (ch == '-') flag = -1; ch = getchar(); }\n    while (isdigit(ch)){ x = x*10+ch-'0'; ch = getchar(); }\n    return x*flag;\n}\n \ninline void write(int a){ if (!a) return; write(a/10); putchar('0'+a%10); }\ninline void writeln(int a){ write(a); puts(\"\"); }\n \nconst int N = 100010;\nint n, m, cnt = 0, clk = 0, top = 0, num = 0;\nint head[N], dfn[N], low[N], s[N], bel[N], w[N], x[N], in[N], dis[N];\n \nstruct Edge{\n    int to, nex;\n}e[N];\n \ninline void add(int x, int y){ e[++ cnt].to = y; e[cnt].nex = head[x]; head[x] = cnt; }\n \ninline void dfs(int u)\n{\n    dfn[u] = low[u] = ++ clk; s[++ top] = u;\n    for (int i = head[u]; i; i = e[i].nex){\n        int v = e[i].to;\n        if (!dfn[v]){\n            dfs(v);\n            dfn[u] = min(dfn[u], dfn[v]);\n        } else if (!bel[v]) dfn[u] = min(dfn[u], low[v]);\n    }\n    if (dfn[u] != low[u]) return;\n    num ++;\n    while (s[top] != u){\n        bel[s[top --]] = num;\n        w[num] ++;\n    }\n    bel[s[top --]] = num; w[num] ++;\n}\n \nint main()\n{\n    n = read();\n    for (int i = 1; i <= n; i ++){\n        x[i] = read(); add(i, x[i]);\n    }\n    for (int i = 1; i <= n; i ++)\n        if (!dfn[i]) dfs(i);\n    cnt = 0; memset(head, -1, sizeof head);\n    for (int i = 1; i <= n; i ++){\n        if (bel[i] == bel[x[i]]) continue;\n        add(bel[x[i]], bel[i]); in[bel[i]] ++;\n    }\n    queue<int> q;\n    for (int i = 1; i <= num; i ++)\n        if (!in[i]){\n            q.push(i);\n            dis[i] = w[i];\n        }\n    while (!q.empty()){\n        int u = q.front(); q.pop();\n        for (int i = head[u]; i; i = e[i].nex){\n            int v = e[i].to; in[v] --;\n            dis[v] = dis[u]+w[v];\n            if (!in[v]) q.push(v);\n        }\n    }\n    for (int i = 1; i <= n; i ++) writeln(dis[bel[i]]);\n    return 0;\n}\n```",
        "postTime": 1508303705,
        "uid": 19722,
        "name": "fy0123",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2921 \u3010[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    },
    {
        "content": "\u662f\u4e00\u9898\u4e0d\u7b97\u592a\u96be\u7684\u8bb0\u5fc6\u5316\u641c\u7d22\uff1b\n\n\u5148\u7528\u5f3a\u8054\u901a\u5c06\u5f7c\u6b64\u662fnext\u7684\u70b9\u8fde\u5728\u4e00\u8d77\uff1b\n\n\u7136\u540e\u518d\u8fdb\u884c\u8bb0\u5fc6\u5316\u641c\u7d22\uff1b\n\n\u4ee3\u7801\u5982\u4e0b\uff08\u4ee3\u7801\u4e0d\u7b97\u96be\u770b\uff09\uff1b\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#define M 100010\nusing namespace std;\nint n,a[M],ans[M],b[M],bo[M];\nstruct edge\n{\n    int to;\n    int next;\n};\nedge e[M],e2[M];\nint head[M],num;\nvoid add(int from,int to)\n{\n    e[++num].to=to;\n    e[num].next=head[from];\n    head[from]=num;\n}\nint head2[M],num2;\nvoid add2(int from,int to)\n{\n    e2[++num2].to=to;\n    e2[num2].next=head2[from];\n    head2[from]=num2;\n}\nint low[M],dfn[M],sta[M],vis[M],blo[M],depth,cnt,top;\nvoid tarjan(int x)//\u5f3a\u8054\u901a\n{\n    dfn[x]=low[x]=++depth;\n    vis[x]=1;\n    sta[++top]=x;\n    for(int i=head[x];i!=0;i=e[i].next)\n    {\n        int to=e[i].to;\n        if(dfn[to]==0)\n        {\n            tarjan(to);\n            low[x]=min(low[x],low[to]);\n        }\n        else\n        {\n            if(vis[to]==1)\n                low[x]=min(low[x],dfn[to]);\n        }\n    }\n    if(low[x]==dfn[x])\n    {\n        cnt++;int j;\n        while(j!=x)\n        {\n            j=sta[top--];\n            vis[j]=0;\n            blo[j]=cnt;\n            b[cnt]+=1;\n        }\n    }\n}\nint dfs(int x)\n{\n    ans[x]=b[x];\n    for(int i=head2[x];i!=0;i=e2[i].next)\n    {\n        int to=e2[i].to;\n        if(ans[to]==0)\n            ans[x]+=dfs(to);//\u8bb0\u5fc6\u5316\u641c\u7d22\u8fd9\u4e00\u6b65\uff0c\u5e94\u8be5\u4e0d\u7b97\u96be\u61c2\uff1b\n        else\n        {\n            ans[x]+=ans[to];\n            break;\n        }\n    }\n    return 0;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        if(i!=a[i]) add(i,a[i]);\n    }\n    for(int i=1;i<=n;i++)\n        if(dfn[i]==0) tarjan(i);\n    for(int i=1;i<=n;i++)\n    {\n        if(blo[i]!=blo[a[i]])\n            add2(blo[i],blo[a[i]]);//\u4ee5\u7f29\u70b9\u5efa\u56fe\n    }\n    memset(bo,0,sizeof(bo));\n    for(int i=1;i<=cnt;i++) dfs(i);\n    for(int i=1;i<=n;i++)\n        printf(\"%d\\n\",ans[blo[i]]);\n    return 0;\n}\n```",
        "postTime": 1508059427,
        "uid": 35361,
        "name": "LZWei",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2921 \u3010[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u4e2a\u6bcf\u4e2a\u70b9\u51fa\u5ea6\u4e3a1\u7684\u6709\u5411\u56fe\uff0c\u81ea\u5df1\u73a9\u73a9\u5c31\u53d1\u73b0\u662f\u73af\u4e0a\u6302\u4e86\u5f88\u591a\u6811\uff0c\u7136\u540e\u7b54\u6848\u5c31\u662f\u6bcf\u4e2a\u70b9\u7684\u6df1\u5ea6\u52a0\u4e0a\u73af\u7684size\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5 + 50;\nint n, nxt[N], ctim, tim[N], f[N], cirl, cirr;\nvoid dfs(int v) {\n    tim[v] = ++ctim;\n    if (tim[nxt[v]] == 0) { \n        dfs(nxt[v]);\n        if (cirl <= tim[v] && tim[v] <= cirr) f[v] = cirr - cirl + 1;\n        else f[v] = f[nxt[v]] + 1;\n    } else if (tim[nxt[v]] > 0) {\n        cirr = tim[v]; cirl = tim[nxt[v]];\n        f[v] = cirr - cirl + 1;\n    } else f[v] = f[nxt[v]] + 1;\n    tim[v] = -1;\n}\nint main(int argc, char *argv[]) {\n    int i; scanf(\"%d\", &n);\n    for (i = 1;i <= n;++i) scanf(\"%d\", &nxt[i]);\n    for (i = 1;i <= n;++i) if (!tim[i]) { cirr = cirl = ctim = 0; dfs(i); }\n    for (i = 1;i <= n;++i) printf(\"%d\\n\", f[i]);\n    return 0;\n}\n```",
        "postTime": 1496969756,
        "uid": 24745,
        "name": "CuriousCat",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2921 \u3010[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    },
    {
        "content": "\n**\u6765\u4e00\u7bc7Java\u7684\u9898\u89e3\uff0c\u76f8\u540c\u7684\u601d\u8def\uff0c\u53d7\u9650\u4e8e\u4e0d\u540c\u4e8eC/C++\u7279\u6027\uff0c\u4ee3\u7801\u5b9e\u73b0\u4e0d\u4e00\u6837\u3002**\n\n------------\n1. \u9898\u610f\n- \u5e26\u73af\u65e0\u6743\u6709\u5411\u56fe\uff0c\u6c42\u6bcf\u4e2a\u70b9\u80fd\u591f\u8bbf\u95ee\u5230\u70b9\u7684\u6570\u91cf\uff08\u5305\u62ec\u81ea\u5df1\uff09\uff0c\u7528dp[i]\u8868\u793a\n- \u6807\u7b7e\u662f\uff1a\u52a8\u5f52\u3001\u8bb0\u5fc6\u5316\u641c\u7d22\n\n2. \u601d\u8def\n- \u56fe\u4e2d\u7684\u70b9\uff0c\u5206\u4e3a\u4e24\u79cd **_\u73af\u4e0a_** \u548c **_\u73af\u5916_** \n- **_\u73af\u4e0a_** \u7684\u70b9\uff0cdp[i]\u662f\u76f8\u540c\u7684\uff0c\u53ef\u7528\u5e76\u67e5\u96c6\u5408\u5e76\u70b9\u3002\n- **_\u73af\u5916_** \u7684\u70b9\uff0cdp[i]\u662f\u70b9\u5230\u73af\u7684\u8ddd\u79bb+\u73af\u4e2d\u70b9\u7684\u6570\u91cf\n\n\u6240\u4ee5\n- \u5148\u4f7f\u7528\u62d3\u6251\u6392\u5e8f\uff08Topological Order\uff09\u533a\u5206\u4e24\u79cd\u70b9 **_\u73af\u4e0a_** \u548c **_\u73af\u5916_**\n- \u518d\u4f7f\u7528\u5e76\u67e5\u96c6\u5408\u5e76 **_\u73af\u4e0a_** \u70b9\u540c\u65f6\u8ba1\u7b97\u73af\u4e2d\u7684\u70b9\u7684\u6570\u91cf\n- \u7136\u540e\u8bb0\u5fc6\u5316dfs\uff0c\u8ba1\u7b97 **_\u73af\u5916_** \u7684\u70b9\u5230\u73af\u7684\u8ddd\u79bb\uff0c\u4ece\u800c\u7b97\u51fadp[i]\n\n------------\n3. \u4e0d\u540c\n- \u672c\u9898\uff0cN\u503c\u4e3a100,000 \u6240\u4ee5\u4f7f\u7528Java\u7684\u9898\u89e3\u4e0d\u80fd\u50cfC/C++\u90a3\u6837dfs\u4f7f\u7528\u65b9\u6cd5\u9012\u5f52\uff0c\u800c\u8981\u4f7f\u7528stack\u9012\u5f52\u3002 \n\n------------\n4. \u6ce8\u89e3\n- \u53cc\u7aef\u961f\u5217ArrayDeque<Integer> deque\uff0c\u6211\u7684\u4ee3\u7801\u4e2d\u65e2\u8981\u4f7f\u7528\u961f\u5217\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\uff0c\u53c8\u8981\u4f7f\u7528\u6808\u8fdb\u884c\u9012\u5f52\uff0c\u6240\u4ee5\u4f7f\u7528\u4e86ArrayDeque\uff0c\u65e2\u53ef\u4ee5\u5f53\u961f\u5217\u53c8\u53ef\u4ee5\u5f53\u6808\u4f7f\u7528\u3002\n- \u6570\u7ec4idr[]\u4fdd\u5b58\uff0c\u6bcf\u4e2a\u70b9\u7684\u5165\u5ea6\uff0c\u62d3\u6251\u6392\u5e8f\u4ece \u5165\u5ea6\u4e3a0\u7684\u8fdb\u884c\n```java\n        for (int i = 1; i <= N; i++) {\n            if (idr[i] == 0) deque.add(i);\n        }\n        while (!deque.isEmpty()) {\n            int n = deque.poll();\n            dp[n] = -1;//\u6807\u8bb0\u4e3a\u73af\u5916\u7684\u70b9\n            if (--idr[path[n]] == 0) deque.add(path[n]);\n        }\n```\n- \u5e76\u67e5\u96c6\uff0c\u5408\u5e76\u70b9\uff0c\u7edf\u8ba1\u73af\u4e2d\u7684\u70b9\u6570\n```java\n    for (int i = 1; i <= N; i++) \n\t if(dp[i] != -1 && dp[path[i]] != -1)  union(i, path[i]);\n \n  \n  \n    private static int find(int c) {\n        if (p[c] == c) return c;\n        return p[c] = find(p[c]);\n    }\n\n    private static void union(int c1, int c2) {\n        int p1 = find(c1);\n        int p2 = find(c2);\n        if (p1 != p2) {\n            p[p1] = p2;\n            dp[p2] += dp[p1];\n        }\n    }  \n```\n- \u8bb0\u5fc6\u5316dfs\uff0c\u8ba1\u7b97 **_\u73af\u5916_** \u7684\u70b9\u5230\u73af\u7684\u8ddd\u79bb\uff0c\u4ece\u800c\u7b97\u51fadp[i]\n```java\n   for (int i = 1; i <= N; i++) if (dp[i] == -1) dfs(i);\n                         \n                         \n   private static void dfs(int n) {\n        deque.add(n);\n        int num;\n        while (!deque.isEmpty()) {\n            num = deque.peekLast();\n            if (dp[find(path[num])] > 0) {\n                dp[num] = dp[find(path[num])] + 1;\n                deque.pollLast();\n            } else {\n                deque.add(path[num]);\n            }\n        }\n    }\n```\n\n------------\n5.\u5b8c\u5168\u4ee3\u7801\n```java\nimport java.io.*;\nimport java.util.ArrayDeque;\n\n/*\n1. TopologyOlder \u53bb\u9664\u94fe\u4e0a\uff08\u73af\u5916\uff09\u7684\u70b9\n2. \u5e76\u67e5\u96c6 \u7b97\u51fa\u73af\u4e2d\u7684\u70b9\n3. \u94fe\u4e0a\uff08\u73af\u5916\uff09\u7684\u70b9 dfs \u5230\u73af\n* */\npublic class Main {\n    private static int[] path;\n    private static int[] dp;\n    private static int[] p;\n    private static final ArrayDeque<Integer> deque = new ArrayDeque<>();\n\n    public static void main(String[] args) throws IOException {\n       StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));\n        in.nextToken();\n        int N = (int) in.nval;\n        path = new int[N + 1];\n        dp = new int[N + 1];\n        int[] idr = new int[N + 1];\n        p = new int[N + 1];\n        for (int i = 1; i <= N; i++) {\n            in.nextToken();\n            path[i] = (int) in.nval;\n            idr[path[i]]++;\n            p[i] = i;\n            dp[i] = 1;\n        }\n        //Topology\n        for (int i = 1; i <= N; i++) {\n            if (idr[i] == 0) deque.add(i);\n        }\n        while (!deque.isEmpty()) {\n            int n = deque.poll();\n            dp[n] = -1;\n            if (--idr[path[n]] == 0) deque.add(path[n]);\n        }\n        for (int i = 1; i <= N; i++) if (dp[i] != -1 && dp[path[i]] != -1) union(i, path[i]);\n        for (int i = 1; i <= N; i++) if (dp[i] == -1) dfs(i);\n\n        StringBuilder ans = new StringBuilder();\n        for (int i = 1; i <= N; i++) ans.append(dp[find(i)]).append('\\n');\n        System.out.print(ans.toString());\n    }\n\n    private static int find(int c) {\n        if (p[c] == c) return c;\n        return p[c] = find(p[c]);\n    }\n\n    private static void union(int c1, int c2) {\n        int p1 = find(c1);\n        int p2 = find(c2);\n        if (p1 != p2) {\n            p[p1] = p2;\n            dp[p2] += dp[p1];\n        }\n    }\n\n    private static void dfs(int n) {\n        deque.add(n);\n        int num;\n        while (!deque.isEmpty()) {\n            num = deque.peekLast();\n            if (dp[find(path[num])] > 0) {\n                dp[num] = dp[find(path[num])] + 1;\n                deque.pollLast();\n            } else {\n                deque.add(path[num]);\n            }\n        }\n    }\n}\n\n\n\n```\n",
        "postTime": 1573400179,
        "uid": 236490,
        "name": "\u738b\u9e4fPRO",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2921 \u3010[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    },
    {
        "content": "# Tarjan\u4ec0\u4e48\u7684\u6211\u4e0d\u559c\u6b22\u54e6\u3002\n#### **[\u9898\u76ee\u4f20\u9001\u95e8\uff0c\u51b2\u51b2\u51b2\uff01](https://www.luogu.org/problemnew/show/P2921)**\n### \u7ffb\u4e86\u4e00\u4e0b\u9898\u89e3,\u597d\u591a\u5927\u4f6c\u90fd\u7528\u4e86Tarjan\u7f29\u70b9qwq\uff0c\u539f\u8c05\u6211\u8fd9\u4e2aLJ\u849f\u84bb\u4e0d\u4f1aTarjan\u3002\n- \u5c3d\u7ba1\u5982\u6b64\uff0c\u7784\u4e86\u4e00\u773c\u9898\u76ee\uff0c\u5916\u52a0\u4e00\u70b9\u601d\u8003\uff0c~~\u53d1\u73b0\u5f88\u6c34~~\uff0c\u4e0d\u7528Tarjan\u76f4\u63a5\u8d70\u8bb0\u5fc6\u5316\u641c\u7d22okk\u3002\n- \u5728\u4ecb\u7ecd\u65b9\u6cd5\u524d\uff0c\u8bf7\u5148\u8fc7\u76ee\u4e00\u8fb9\u4e0b\u9762\u7684\u4ee3\u7801awa\uff1a\n```cpp\n#include<cstdio>\nusing namespace std;\nconst int N=100005;\nint room[N],to[N];\nint stack[N],tot=0;\nint dfn[N],depth;\nint sign=0;\nbool ds[N];\nint n;\nint move(int x){\n\tif(room[x])return room[x];\n\tstack[++tot]=x;\n\tif(ds[x]){\n\t\tsign=++depth-dfn[x];\n\t\treturn 0;\n\t}\n\tdfn[x]=++depth;\n\tds[x]=true;\n\troom[x]=1+move(to[x]);\n\tds[x]=false;\n\treturn room[x];\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;++i)scanf(\"%d\",&to[i]);\n\tfor(int i=1;i<=n;++i){\n\t\tdepth=0,tot=0,sign=0;\n\t\tprintf(\"%d\\n\",move(i));\n\t\tif(sign==1)continue;\n\t\tint tail=stack[tot--];\n\t\troom[tail]=sign;\n\t\twhile(tot&&stack[tot]!=tail){\n\t\t\troom[stack[tot]]=sign;\n\t\t\t--tot;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n- \u8981\u8ba4\u771f\u6d4f\u89c8\u4e00\u904d\u54e6\uff0c\u8fd9\u6837\u505a\u662f\u4e3a\u4e86\u66f4\u597d\u7684\u7406\u89e3\u4e0b\u9762\u7684\u89e3\u91ca\u3002\n# \u63a5\u4e0b\u6765\u662f\u4ee3\u7801\u5256\u6790\uff1a\n\n```\n/*\u53d8\u91cf\u58f0\u660e(\u4ece\u4e0a\u5f80\u4e0b):\n    N \u9898\u76ee\u6700\u5927\u725b\u68da\u6570+5\n    room[n]-n\u53f7\u725b\u68da\u7684\u7b54\u6848\n    to[n]---n\u53f7\u725b\u68da\u8fde\u63a5\u7684\u4e0b\u4e00\u4e2a\u725b\u68da\u7684\u53f7\n    stack[]-\u6808(\u7eaf\u624b\u6253,\u4ece[1]\u5f00\u59cb\u5b58)\n    tot-----\u6808\u4e2d\u5143\u7d20\u6570\u91cf\n    dfn[n]--n\u53f7\u725b\u68da\u5728\u6808\u4e2d\u7684\u4f4d\u7f6e\n    depth---\u4e0edfn[]\u642d\u914d\u4f7f\u7528\uff0c++depth\u6765\u9012\u589e\u4f4d\u7f6e\n    sign----\u56de\u5230\u67d0\u4e2a\u53bb\u8fc7\u7684\u725b\u68da\u65f6 \u8bb0\u4e0b\u7684\u4e00\u4e2a\u6807\u7b7e\n           (stack[],dfn[],sign\u642d\u914d\u4f7f\u7528\u4ee3\u66ff Tarjan !)\n    ds[n]---\u5e03\u5c14\u6570\u7ec4 \u8bb0\u5f55n\u53f7\u725b\u68da\u662f\u5426\u53bb\u8fc7\u4e86 \u53bb\u8fc7\u7684\u4e3atrue\n           (\u56e0\u4e3a\u4e0d\u60f3\u7528memset()\u5f52false,ds[]\u9700\u8981\u56de\u6eaf)\n    n-------\u4e00\u5171n\u4e2a\u725b\u68da\n    move(x)-\u5f53\u524d\u5728x\u53f7\u725b\u68da\n*/\n```\n### <\u4ee5\u9898\u76ee\u7684\u6570\u636e\u70b9\u4e3a\u4f8b>[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P2921)\u00b7\u5982\u56fe\uff1a\n![](https://cdn.luogu.com.cn/upload/pic/64520.png)\n\n```cpp\nint main(){\n\tscanf(\"%d\",&n);//\u8f93\u5165\u4e00\u5171n\u4e2a\u725b\u68da\n\tfor(int i=1;i<=n;++i)scanf(\"%d\",&to[i]);//\u8f93\u5165\u53bb\u5411\n\tfor(int i=1;i<=n;++i){/*i\u53f7\u725b\u68da\u7684\u725b\u5f00\u59cb\u4ecei\u53f7\u725b\u68da\u51fa\u53d1*/ \n\t\tdepth=0,tot=0,sign=0;//\u5f52\u96f6\n\t\tprintf(\"%d\\n\",move(i));//\u8f93\u51fa\u7b54\u6848\n\t\tif(sign==1)continue;//sign==1\u610f\u5473\u7740G\u53f7\u725b\u68da\u8fde\u63a5\u81ea\u5df1G\u53f7\u725b\u68da G\u2208[1,n]\n\t\tint tail=stack[tot--];//\u8bb0\u4e0b\u6808\u5c3e\u7684\u725b\u68da\u53f7\u6570\n\t\troom[tail]=sign;//\u8fd9\u4e2a\u725b\u68da\u7684\u7b54\u6848\u662fsign,\u4e0b\u9762\u8be6\u89e3\n\t\twhile(tot&&stack[tot]!=tail){\n\t\t\troom[stack[tot]]=sign;\n\t\t\t--tot;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n### \u6211\u4eec\u6765\u770b\u770b\u6838\u5fc3\u51fd\u6570move():\n```cpp\nint move(int x){//\u5f53\u524d\u5728x\u53f7\u725b\u68da\n\tif(room[x])return room[x];//\u8bb0\u5fc6\u5316\u641c\u7d22\n\tstack[++tot]=x;//\u6765\u5230\u4e00\u4e2a\u725b\u68da\uff0c\u725b\u68da\u53f7\u6570\u538b\u5165\u6808\u4e2d\n\tif(ds[x]){//\u5224\u65ad\u8fd9\u4e2a\u725b\u68da\u6765\u8fc7\u6ca1,\u6765\u8fc7\u4e3atrue\n\t\tsign=++depth-dfn[x];//\u8bb0\u5f55\u5dee\n\t\treturn 0;//\u56de\u5230\u53bb\u8fc7\u7684\u725b\u68da\u5566\uff0c\u7ed3\u675fi\u53f7\u725b\u7684\u641c\u7cd6\u8fc7\u7a0b\n\t}\n\tdfn[x]=++depth;//\u5982\u679c\u6ca1\u6765\u8fc7\uff0c\u8bb0\u4e0bx\u53f7\u725b\u68da\u5728\u6808\u4e2d\u7684\u4f4d\u7f6e\uff0c\u5373i\u53f7\u725b\u7b2cdfn[x]\u6b21\u6765\u5230\u7684\u662fx\u53f7\u725b\u68da\u3002\n\tds[x]=true;\n\troom[x]=1+move(to[x]);//\u641c\u4e0b\u4e00\u4e2a\u8fde\u63a5\u7684\u725b\u68da\u8fd4\u56de\u7684\u503c+1\uff0c\u540c\u65f6\u8bb0\u5fc6\u5316\u641c\u7d22\u3002\n\tds[x]=false;//qwq\u56de\u6eaf\n\treturn room[x];//\u8fd4\u56dex\u53f7\u725b\u68da\u7684\u7b54\u6848\n}\n```\n#### \u6ca1\u770b\u61c2\uff1f\u4e0b\u9762\u8be6\u89e3\uff1a\n- \u4ee51\u53f7\u725b\u68da\u4e3a\u4f8b\uff1a\n- 1\u53f7\u725b\u4ece1\u53f7\u725b\u68da\u51fa\u53d1\u5566\uff0c\u6240\u8c13\u7684\u51fa\u53d1\uff0c\u662f\u5148\u5230\u8fbe\u81ea\u5df1\u7684\u725b\u68da:\n- move(1)\n- room[1]==0\u6ca1\u8bb0\u5fc6\u8fc7\uff0c\u538b\u5165\u6808(\u5982\u56fe)\uff0c\u6765\u8fc7\u4e861\u53f7\u725b\u68dads[1]=true\u3002\u53bb\u4e0b\u4e00\u4e2a\u725b\u68da:move(to[1]),\u628a\u4e0b\u4e00\u4e2a\u725b\u68da\u7684\u7b54\u6848(room[to[1]])\u52a0\u4e0a\u81ea\u5df1\u5f53\u524d\u7684\u725b\u68da(+1)\u5f97\u5230room[1]\u3002\n- ![image](https://cdn.luogu.com.cn/upload/pic/64536.png)\n- to[1]=1,move(to[1])\u5373move(1);\n- room[1]==0\u6ca1\u8bb0\u5fc6\u8fc7\uff0c\u538b\u5165\u6808(\u5982\u56fe)\uff0cds[1]\u4e3atrue\u610f\u5473\u725b\u725b\u6765\u8fc7\u4e861\u53f7\u725b\u68da\u3002sign\u8bb0\u5f55\u4e0a\u6b21\u5230\u8fbe1\u53f7\u725b\u68da\u5230\u8fd9\u6b21\u5230\u8fbe1\u53f7\u725b\u68da\u7684\u8def\u7a0b(sign=1),return 0 \u8868\u793a\u65c5\u7a0b\u7ed3\u675f\u3002\n- ![image](https://cdn.luogu.com.cn/upload/pic/64543.png)\n#### \u7ed3\u675fi=1\u7684\u725b\u725b\u7684\u65c5\u7a0b\u3002\n- \u4ee54\u53f7\u725b\u68da\u4e3a\u4f8b\uff1a(\u5047\u8bbe\u8fd0\u884c\u5b8ci=1\uff0c\u76f4\u63a5\u8d70i=4\uff0ci=2,3\u672a\u8fd0\u884c\uff0croom[2,3]\u672a\u8bb0\u5fc6)\n- 4\u53f7\u725b\u4ece4\u53f7\u725b\u68da\u51fa\uff0c\u662f\u5148\u5230\u8fbe\u81ea\u5df1\u7684\u725b\u68da:\n- move(4)\n- room[4]==0,4\u5165\u6808\uff0c\u56e0\u4e3ads[4]==false,\u6240\u4ee5ds[4]=true\u3002to[4]=3,\u8d70move(3)\n- room[3]==0,3\u5165\u6808\uff0c\u56e0\u4e3ads[3]==false,\u6240\u4ee5ds[3]=true\u3002to[3]=2,\u8d70move(2)\n- room[2]==0,2\u5165\u6808\uff0c\u56e0\u4e3ads[2]==false,\u6240\u4ee5ds[2]=true\u3002to[2]=3,\u8d70move(3)\n- room[3]==0,3\u5165\u6808\uff0c\u56e0\u4e3ads[3]==true,\u56de\u5230\u4e863\u53f7\u725b\u68da\u3002sign\u8bb0\u5f55\u4e0a\u6b21\u5230\u8fbe3\u53f7\u725b\u68da\u5230\u8fd9\u6b21\u5230\u8fbe3\u53f7\u725b\u68da\u7684\u8def\u7a0b(\u53733\u6240\u5728\u7684\u73af\u7684\u957f\u5ea6sign=++depth-dfn[3]=2),return 0 \u8868\u793a\u65c5\u7a0b\u7ed3\u675f\u3002\n- \u6700\u540e\u5f97\u5230\u4e0b\u56fe\uff0c\u8868\u793a4\u53f7\u725b\u56de\u5230\u53bb\u8fc7\u76843\u53f7\u725b\u68da\u65f6\uff1a\n- ![image](https://cdn.luogu.com.cn/upload/pic/64548.png)\n#### \u7ed3\u675fi=4\u7684\u725b\u725b\u7684\u65c5\u7a0b\u3002\n#### \u6ce8\u610f\uff01\u7ed3\u675f\u4e864\u53f7\u725b\u7684\u65c5\u7a0b\u8fd8\u8981\u66f4\u65b0\u672c\u6b21\u5bfb\u627e\u5230\u7684\u73af\u4e2d\u6240\u6709\u725b\u68da\u7684room[]\u3002\u5373\u540e\u534a\u90e8\u5206\uff1a\n\n```cpp\n    ...\n    printf(\"%d\\n\",move(i));//i=4\n\t\tif(sign==1)continue;//sign==\u610f\u5473\u7740G\u53f7\u725b\u68da\u8fde\u63a5\u81ea\u5df1G\u53f7\u725b\u68da G\u2208[1,n]\uff0c\u65e0\u9700\u66f4\u65b0\n\t\tint tail=stack[tot--];//\u8bb0\u4e0b\u6808\u5c3e\u7684\u725b\u68da\u53f7\u6570\n\t\troom[tail]=sign;//\u8fd9\u4e2a\u725b\u68da\u7684\u7b54\u6848\u662fsign\n\t\twhile(tot&&stack[tot]!=tail){//\u628a\u73af\u4e2d\u6240\u6709\u725b\u68daroom[]=sign\n\t\t\troom[stack[tot]]=sign;\n\t\t\t--tot;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n## \u7b97\u6cd5\u7684\u6b63\u786e\u6027\uff1a\n- \u6211\u4eec\u9898\u4e2d\u7684\u73af\u6ee1\u8db3\u6027\u8d28\uff1an\u4e2a\u70b9,n\u6761(\u6709\u5411)\u8fb9\u9996\u5c3e\u76f8\u8fde\u6210\u73af\u5982\u56fe\uff1a\u6211\u4eec\u79f0\u4ed6\u4e3a \u5708\u3002\uff08\u56fe\u4e2dn-1\u6539\u4e3an\uff09\n- ![image](https://cdn.luogu.com.cn/upload/pic/64561.png)\n- \u6211\u4eec\u5e38\u8bf4\u7684\u73af\uff0c\u5373Tarjan\u6c42\u7684\u73af\u5982\u56fe\uff1a\n- ![image](https://cdn.luogu.com.cn/upload/pic/64563.png)\n- \u6240\u4ee5\u5462\uff0c\u6211\u89c9\u5f97\u53ef\u4ee5\u4e0d\u7528Tarjan\u6c42\u602a\u53ef\u601c\u7684'\u5708'\uff0c\u7528\u6808\u5c31\u53ef\u4ee5\u4e86\u3002\uff08\u5176\u5b9e\u548cTarjan\u4e2d\u7684\u6808\u5f88\u50cf\uff09\n- \u8865\u5145\u4e00\u4e2a\u5c0f\u70b9\uff1a\n- ![image](https://cdn.luogu.com.cn/upload/pic/64565.png)\n\n---\n### \u849f\u84bb\u6073\u6c42\u5404\u4f4d\u6307\u70b9qwq\n### ~~(\u5e7f\u544a,\u672c\u849f\u84bb\u5f00\u59cb\u5efa\u8bbeBlog\u4e86awa:[\u70b9\u6211](https://www.luogu.org/blog/134593/))~~",
        "postTime": 1563505876,
        "uid": 134593,
        "name": "\u53cd\u624b\u4e00\u53eaMJJ",
        "ccfLevel": 4,
        "title": "\u3010\u9898\u89e3\u3011P2921 \u3010[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    },
    {
        "content": "##### **\u4e0d\u7528Tarjan\uff0c\u4e0d\u7528\u9012\u5f52\uff0c\u4e0d\u7528dfn\uff01\uff01\uff01**\n\n\u9996\u5148\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u8fd9\u9898\u7684\u610f\u601d\u662f\u6c42\u51fa\u4e00\u4e2a\u6709\u5411\u56fe\u4e2d\u7684\u6240\u6709\u73af\u7684\u5927\u5c0f\uff0c\u5e76\u4e14\u7528\u6c42\u51fa\u6765\u7684\u73af\u7684\u5927\u5c0f\u6765\u66f4\u65b0\u76f8\u90bb\u7684\u70b9\u7684\u6700\u8fd1\u8ddd\u79bb\uff0c\u800c\u8fd9\u4e2a\u6700\u8fd1\u8ddd\u79bb\u5c31\u662f\u6240\u6c42\u7684\u7b54\u6848\u3002\n\n\u6211\u4eec\u7528d[i]\u8868\u793a\u7b2ci\u53ea\u5976\u725b\u56de\u5230\u67d0\u4e00\u4e2a\u5979\u5df2\u7ecf\u53bb\u8fc7\u7684\u9694\u95f4\u7684\u6700\u8fd1\u8ddd\u79bb\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u6709\u4ee5\u4e0b\u7ed3\u8bba\uff1a\n\n(1)\u73af\u4e0a\u7684\u4efb\u4f55\u70b9\u7684\u6700\u8fd1\u8ddd\u79bb\u90fd\u662f\u8fd9\u4e2a\u73af\u7684\u5927\u5c0f\n\nd[i] = i\u6240\u5728\u7684\u73af\u7684\u5927\u5c0f\n\n(2)\u6240\u6709\u4e0d\u5728\u73af\u4e0a\u7684\u70b9\u7684\u6700\u8fd1\u8ddd\u79bb\u7b49\u4e8e\u8fd9\u4e2a\u70b9\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u6700\u8fd1\u8ddd\u79bb+1\n\nd[i] = d[nxt[i]]+1\n\n\u6709\u4e86\u8fd9\u4e24\u4e2a\u7ed3\u8bba\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u987a\u5229\u5730AC\u8fd9\u9898~~\u53ec\u5524\u795e\u9f99~~\u4e86\n\n\u6700\u540e\u8d34\u4e0a\u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int maxn = 1e5 + 5;\nint nxt[maxn], n, d[maxn], st[maxn], vis[maxn];\n\\\\st\u4e3a\u6a21\u62df\u6808\nint dfs(int v0) {\n\tst[0] = 0;\n\tst[++st[0]] = v0;\n\tint v = v0, size, vt;\n\twhile (!vis[v]) {\\\\\u5982\u679c\u8bbf\u95ee\u5230\u4e86\u8bbf\u95ee\u8fc7\u7684\u8282\u70b9\uff0c\u90a3\u4e48\u5c31\u662f\u627e\u5230\u4e86\u73af\n\t\tvis[v] = 1;\n\t\tv = nxt[v];\n\t\tst[++st[0]] = v;\\\\\u8282\u70b9\u5165\u6808\n\t}\n\tif (!d[v]) {\\\\\u5982\u679c\u8fd9\u4e2a\u73af\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7\n\t\tsize = 1, vt = nxt[v];\\\\size\u8bb0\u5f55\u73af\u7684\u5927\u5c0f\n\t\twhile (vt != v) {\\\\\u8ba1\u7b97\u73af\u7684\u5927\u5c0f\n\t\t\tvt = nxt[vt];\n\t\t\tsize++;\n\t\t}\n\t\td[vt] = size;\\\\\u6807\u8bb0\u7b2c\u4e00\u4e2a\u8bbf\u95ee\u7684\u8282\u70b9\n        \\\\\u5982\u679c\u5355\u72ec\u6807\u8bb0\uff0c\u8fd9\u4e2a\u8282\u70b9\u53ef\u80fd\u88ab\u6f0f\u8fc7\n\t\twhile (st[--st[0]] != v) {\\\\\u6807\u8bb0\u5176\u4ed6\u73af\u4e0a\u7684\u8282\u70b9\n\t\t\tvt = st[st[0]];\n\t\t\td[vt] = size;\\\\\u7ed3\u8bba(1)\n\t\t}\n\t}\n\twhile (st[0] > 1) {\\\\\u6807\u8bb0\u5165\u6808\u4f46\u672a\u88ab\u8bbf\u95ee\u7684\u8282\u70b9\n\t\tvt = st[st[0]];\n\t\tv = st[--st[0]];\n\t\td[v] = d[vt] + 1;\\\\\u7ed3\u8bba(2)\n\t}\n\treturn d[v];\n}\n\nint main() {\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++)\n\t\tcin >> nxt[i];\n\tfor (int i = 1; i <= n; i++)\n\t\tcout << dfs(i) << endl;\n\treturn 0;\n}\n\n```\n",
        "postTime": 1563032630,
        "uid": 145566,
        "name": "jhdonghj",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2921 \u3010[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    },
    {
        "content": "# \u8fd9\u9898\u59a5\u59a5\u7684\u5e76\u67e5\u96c6\uff0c\u770b\u5f88\u591a\u4eba\u7528tarjan\uff0c\u6709\u70b9\u5927\u6750\u5c0f\u7528\u4e86\u3002\n## \u7b2c\u4e00\u773c\u611f\u89c9\u9898\u76ee\u597d\u6c34\uff0c\u9012\u5f52next\u53bb\u7b97\uff0c\u4e00\u5206\u949f\u6253\u51fa\u66b4\u529b\u4ee3\u7801\uff1a\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 100000 + 10;\nint next[MAXN];\nbool b[MAXN];\nint n;\nint num,x,y;\nvoid work(int now){\n    if(b[now])return;\n    b[now] = true;\n    num++;\n    work(next[now]);\n}\nint main(){\n    scanf(\"%d\",&n);\n    for(int i = 1;i <= n; i++){\n        scanf(\"%d\",&next[i]);\n    }\n    for(int i = 1;i <= n; i++){\n        num = 0;\n        memset(b,false,sizeof(b));\n        work(i);\n        printf(\"%d\\n\",num);\n    }\n    return 0;\n}\n```\n### ~~\u81ea\u5df1%%%orz~~\u4e00\u63d0\u4ea4\uff0c40QWQ\n\n## \u76f4\u5165\u4e3b\u9898\u3002\u65e2\u7136\u8981\u6c42\u8def\u5f84\u957f\u5ea6\uff0c\u7528\u5e76\u67e5\u96c6\u538b\u7f29\u5c31\u4f1aWA\u3002\u5f88\u591a\u5927\u4f6c\u4e8e\u662f\u90fd\u4e0d\u538b\u7f29\u3002\u90a3\u4e48\u849f\u84bb\u4ecb\u7ecd\u4e00\u79cd\u538b\u7f29\u4e14\u6548\u7387\u9ad8\u8fc7\u4e0d\u538b\u7f29\u7684\u65b9\u6cd5\u3002\n\n# \u601d\u8def\uff1a\u6211\u4eec\u4e0d\u96be\u60f3\u5230\uff0c\u5bf9\u4e8eFJ\u7684\u519c\u573a\uff0c\u53ea\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n__$\\color{Red}\\text{\u4e00\uff1a\u53ea\u6709\u73af\u3002}$__\n\n__$\\color{Red}\\text{\u4e00\uff1a\u6709\u73af\u6709\u5c3e\u5df4\u3002}$__\n\n# \u6211\u4eec\u53ea\u8981\u6bcf\u6b21\u8f93\u5165next\u7684\u65f6\u5019\u5224\u65ad\u662f\u5426\u5f62\u6210\u4e86\u73af\u3002\n# \u5f62\u6210\u4e86\u73af\uff0c\u5219\u73af\u4e2d\u7684\u9694\u95f4\u4e2d\u7684\u725b\u7684\u7b54\u6848\u5c31\u662f\u73af\u7684\u5927\u5c0f\uff0c\u53ea\u8981\u627e\u73af\u5373\u53ef\u3002\n# \u6700\u540e\u5faa\u73af\u627e\u6ca1\u6709\u7b54\u6848\u7684\u9694\u95f4\uff0c\u5373\u4e0d\u518d\u73af\u4e2d\u800c\u6ca1\u6709\u66f4\u65b0\u7b54\u6848\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7b97\u51fa\uff1a\n\n\n__$\\color{Blue}\\text{\u5728\u73af\u5916\u9762\u7684\u5c3e\u5df4\u7684\u7b54\u6848\u5c31\u662f\uff1a\u5b83\u7b2c\u4e00\u4e2a\u5165\u73af\u7684\u7956\u5148\u5230\u5b83\u7684\u8ddd\u79bb\u52a0\u4e0a\u73af\u7684\u8ddd\u79bb\u5373\u53ef}$__\n\n## \u6211\u4eec\u867d\u7136\u538b\u7f29\u4e86\uff0c\u4f46\u662f\u4f9d\u7136\u8981\u8bb0\u5f55\u76f4\u63a5\u7236\u4eb2\uff0c\u4ee5\u4fbf\u4e4b\u540e\u7b97\u5c3e\u5df4\u7684\u7b54\u6848\u3002\n\n## \u4ee3\u7801\n\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 300000 + 10;\nint dis[MAXN], fa[MAXN];\nint num[MAXN], ans[MAXN];\n//dis\u8bb0\u5f55\u5230\u7956\u5148\u7684\u8ddd\u79bb\n//fa\u8bb0\u5f55\u76f4\u63a5\u7956\u5148\n//num\u8bb0\u5f55\u538b\u7f29\u540e\u7684\u7956\u5148 \nint n, next; \n\ninline int read(){//\u5feb\u901f\u8bfb\u5165\uff0c\u6b22\u8fce\u590d\u5236 \n    int f = 1, x = 0;\n    char c = getchar();\n\n    while (c < '0' || c > '9'){\n        if (c == '-')\n            f = -1;\n        c = getchar();\n    }\n\n    while (c >= '0' && c <= '9'){\n        x = x * 10 + c - '0';\n        c = getchar();\n    }\n\n    return f * x;\n}\n\nint find(int x) {//\u67e5\u51fd\u6570 \n    if(num[x] == x){//\u5230\u8fbe\u7956\u5148\u8fd4\u56de \n    \treturn x;\n\t}\n\t//\u8fd9\u91cc\u662f\u8def\u5f84\u538b\u7f29\u5fc5\u5907\u7684\n\tint p = num[x];//\u8bb0\u5f55\u539f\u672c\u7956\u5148 \n    num[x] = find(num[x]);//\u538b\u7f29 \n    dis[x] += dis[p];//\u52a0\u4e0a\u5230\u65b0\u7956\u5148\u7684\u8ddd\u79bb \n    return num[x];//\u8fd4\u56de \n}\n\nint work(int x){//\u9012\u5f52\u627e\u5230\u73af \n\tif(ans[x] != 0)return x;//\u4e00\u65e6\u5b83\u7684\u503c\u4e0d\u4e3a0\u5373\u5df2\u5728\u73af\u5185\uff0c\u5219\u8fd4\u56de \n\tint p = work(fa[x]);//\u7ee7\u7eed\u9012\u5f52 \n\tans[x] = ans[fa[x]] + 1;//\u66f4\u65b0\u5230\u7b2c\u4e00\u4e2a\u5165\u73af\u7684\u8ddd\u79bb \n\treturn p;\n}\n\nint main() {\n    n = read();//\u8bfb\u5165n \n\n    for(int i = 1; i <= n + 10; i++){\n    \tnum[i] = i;//\u521d\u59cb\u5316\u81ea\u5df1\u4e3a\u81ea\u5df1\u7684\u7236\u4eb2 \n\t}\n\n    for(int i = 1; i <= n; i++) {\n        next = read();//\u8bfb\u5165\u4e00\u4e2ai\u7684\u4e0b\u9694\u95f4 \n        if(find(next) == i) {//\u5982\u679c\u5f62\u6210\u73af \n            ans[i] = dis[next] + 1;//\u5219\u5728\u73af\u5185\u7684\u70b9\u7684\u7b54\u6848\u5373\u662f\u73af\u7684\u5927\u5c0f \n            while(next != i){//\u66f4\u65b0\u6240\u6709\u5728\u73af\u4e0a\u7684\u70b9\u7684\u7b54\u6848 \n            \tans[next] = ans[i];//\u8bb0\u5f55\u7b54\u6848 \n            \tnext = fa[next];//\u5230\u4e0b\u4e00\u4f4d \n\t\t\t}\n        } else {//\u5426\u5219\u4e0d\u5f62\u6210\u73af \n            num[i] = next;//\u8ba4\u7956\u5148 \n            fa[i] = next;//\u8ba4\u7238\u7238 \n            dis[i]++;//\u5230\u7956\u5148\u7684\u8ddd\u79bb \n        }\n    }\n\t\n\tfor(int i = 1;i <= n; i++){\n\t\tif(ans[i] == 0){//\u5982\u679c\u4e0d\u5728\u73af\u5185 \n\t\t\twork(i);//\u627e\u7b2c\u4e00\u4e2a\u5165\u73af\u7684\u70b9\u5e76\u66f4\u65b0 \n\t\t}\n\t}\n\t\n\tfor(int i = 1;i <= n; i++){\n\t\tcout<<ans[i]<<\"\\n\";//\u8f93\u51fa \n\t}\n\t\n\treturn 0;//end \n}\n```\n",
        "postTime": 1556100826,
        "uid": 37682,
        "name": "\u5fa1\u00b7Dragon",
        "ccfLevel": 0,
        "title": "P2921 [USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm \u9898\u89e3"
    },
    {
        "content": "\u53d1\u73b0\u5de8\u4f6c\u4eec\u90fd\u7528$Tarjan$\uff0c\u4f46\u662f\u849f\u84bb\u6211\u7528\u4e86\u5e76\u67e5\u96c6\u5199\u8fd9\u9053\u9898\uff0c\u8fd9\u9053\u9898\u5f88\u50cf[P2661](https://www.luogu.org/problemnew/show/P2661)\uff0c\u90a3\u9053\u9898\u7528\u5e26\u6743\u5e76\u67e5\u96c6\u6c42\u6709\u5411\u56fe\u4e2d\u7684\u6700\u5c0f\u73af\uff0c\u8fd9\u9053\u9898\u8981\u6c42\u7684\u662f\u6bcf\u4e2a\u70b9\u5728\u6709\u5411\u56fe\u4e2d\u7684\u73af\u7684\u957f\u5ea6\u6216\u8fdb\u5165\u73af\u4e4b\u524d\u7ecf\u8fc7\u7684\u70b9\u6570\u4e0e\u73af\u7684\u957f\u5ea6\u7684\u548c\u3002\u7531\u4e8e\u5e76\u67e5\u96c6\u7ecf\u8fc7\u8def\u5f84\u538b\u7f29\u540e\u53ea\u80fd\u5b58\u50a8\u5b83\u7956\u5148\u7684\u4fe1\u606f\uff0c\u6240\u4ee5\u6211\u4eec\u5f00\u4e00\u4e2a$fa$\u6570\u7ec4\u8bb0\u5f55\u5b83\u7684\u7236\u4eb2\u3002\u5224\u65ad\u73af\u6211\u4eec\u53ea\u9700\u5224\u65ad\u8bfb\u5165\u7684$a_{i}$\u4e0e$i$\u662f\u5426\u7956\u5148\u8282\u70b9\u76f8\u540c\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5224\u65ad\u662f\u5426\u80fd\u6784\u6210\u4e00\u4e2a\u73af\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ninline int read(){\n   int s=0,w=1;\n   char ch=getchar();\n   while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n   while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n   return s*w;\n}//\u5feb\u8bfb\nint ans[300000],f[300000],fa[3000000];\nint find(int k){\n    if (f[k]==k)return k;\n    else return f[k]=find(f[k]);\n}//\u5e76\u67e5\u96c6\nint main(){\n    int n=read();\n    for (int i=1;i<=200000;i++)f[i]=i,fa[i]=1;//\u521d\u59cb\u5316\n    for (int i=1;i<=n;i++){\n        int x=read();\n        if (find(x)==find(i)){//\u5982\u679c\u6784\u6210\u73af\n            int res=1;\n            for (int j=x;j!=i;j=fa[j]) res++;//\u4ecex->x\u7684\u7236\u4eb2-->\u2026\u2026\u76f4\u5230\u56de\u5230i\uff0c\u5176\u4e2di~x\u8fd9\u6761\u8fb9\u6ca1\u7b97\uff0c\u6240\u4ee5res\u521d\u503c\u8d4b\u4e3a1\n            for (int j=x;j!=i;j=fa[j]) ans[j]=res;//\u7ed9\u73af\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u7684\u7b54\u6848\u8d4b\u503c\n            ans[i]=res;//i\u8fd9\u4e2a\u70b9\u521a\u521a\u6ca1\u8d4b\u503c\n        }else{\n            f[find(i)]=find(x);\n            fa[i]=x;\n        }\n    }//\u7531\u4e8ei\u4e00\u5b9a\u662f\u7b2c\u4e00\u6b21\u8d4b\u503c\uff0c\u6240\u4ee5find(i)\u4e00\u5b9a\u7b49\u4e8ei\uff0c\u6240\u4ee5\u8fd9\u4e2a\u5faa\u73af\u4e2d\u7684find(i)\u90fd\u53ef\u4ee5\u5199\u6210i\n    for (int i=1;i<=n;i++) \n        if (ans[i]==0){\n            int res=1,j;\n            for (j=fa[i];ans[j]==0;j=fa[j])\n                res++;\n            ans[i]=res+ans[j];\n        }//\u7279\u522b\u5904\u7406\u81ea\u8eab\u4e0d\u5728\u73af\u4e2d\u7684\u70b9\uff0c\u8ba1\u7b97\u8fdb\u5165\u73af\u4e4b\u524d\u7ecf\u8fc7\u7684\u70b9\u6570\u4e0e\u73af\u7684\u957f\u5ea6\u7684\u548c\n    for (int i=1;i<=n;i++) printf(\"%d\\n\",ans[i]);\n}\n```",
        "postTime": 1548307676,
        "uid": 54260,
        "name": "tcchyc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2921 \u3010[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    },
    {
        "content": "\u672c\u9898\u53ef\u7528tanjan\u5148\u627e\u73af\uff0c\n```\nvoid tarjan(int u){\n\tdfn[u]=low[u]=++ti;\n\tstack[++top]=u;\n\tint v=to[u];\n\tif (!dfn[v]){\n\t\ttarjan(v);\n\t\tlow [u]=min(low[u],low[v]);\n\t}else if (!col[v])low [u]=min(low[u],dfn[v]);\n\tif(low[u]==dfn[u]){\n\t\tcol[u]=++co;\n\t\tsi[co]++;\n\t\twhile (stack[top]!=u){\n\t\t\tsi[co]++;\n\t\t\tcol[stack[top--]]=co;\n\t\t}\n\t\ttop--;\n\t}\n\treturn ;\n}\n```\n\u63a5\u7740\u8fdb\u884c\u8bb0\u5fc6\u5316\u641c\u7d22\n```\nint ans[N];\nvoid work (int u){\n\tif (si[col[u]]>1) {\n\t\tans[u]=si[col[u]];\n\t\treturn;\n\t}\n\tint ne=to[u];\n\tint ans1=1;\n\tint p=0;\n\twhile (1){\n\t\tif (ne==u){\n\t\t\tans[u]=ans1;\n\t\t\treturn;\n\t\t}\n\t\tif (ans[ne]){\n\t\t\tans[u]=ans1+ans[ne];\n\t\t\treturn;\n\t\t}\n\t\tif (si[col[ne]]>1){\n\t\t\tans[u]=ans1+si[col[ne]];\n\t\t\treturn;\n\t\t}\n\t\tans1++;\n\t\tne=to[ne];\n//\t\tcout<<++p<<\" \"<<ne<<endl;\n\t}\n}\n```\n\u6709\u4e00\u70b9\u9700\u8981\u6ce8\u610f\u7684\uff0c\u6709\u7684\u8fb9\u5b58\u5728\u81ea\u73af\uff0c\u5373\u73af\u5927\u5c0f\u4e3a1\uff0c\u5728\u4e0a\u8ff0\u7684\u4ee3\u7801\u4e2d\u5c06\u53ef\u80fd\u65e0\u9650\u5faa\u73af\uff0c\u6211\u5c31\u88ab\u5361\u4e86\u4e24\u4e2a\u70b9\uff1b\n\u89e3\u51b3\u65b9\u6cd5\u662f\u8bfb\u5165\u65f6\u76f4\u63a5\u8bc6\u522b\u51fa\u6765\u5e76\u4e0a\u8272\uff0c\u5bf9\u5e94\u7684ans[i]\u4e3a1\uff1b\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n```\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\ninline int read(){\n\tint x=0,f=1;\n\tchar s=getchar();\n\twhile (s<'0' or s>'9'){\n\t\tif (s=='-') f=-1;\n\t\ts=getchar();\n\t}\n\twhile (s>='0'and s<='9'){\n\t\tx=(x<<3)+(x<<1)+s-'0';\n\t\ts=getchar();\n\t}\n\treturn x*f;\n}\nconst int N=200010;\nconst int M=200010;\nint to[M];\nint col[N],si[N],stack[N],top,ti,co;\nint dfn[N],low[N];\nvoid tarjan(int u){\n\tdfn[u]=low[u]=++ti;\n\tstack[++top]=u;\n\tint v=to[u];\n\tif (!dfn[v]){\n\t\ttarjan(v);\n\t\tlow [u]=min(low[u],low[v]);\n\t}else if (!col[v])low [u]=min(low[u],dfn[v]);\n\tif(low[u]==dfn[u]){\n\t\tcol[u]=++co;\n\t\tsi[co]++;\n\t\twhile (stack[top]!=u){\n\t\t\tsi[co]++;\n\t\t\tcol[stack[top--]]=co;\n\t\t}\n\t\ttop--;\n\t}\n\treturn ;\n}\nint ans[N];\nvoid work (int u){\n\tif (si[col[u]]>1) {\n\t\tans[u]=si[col[u]];\n\t\treturn;\n\t}\n\tint ne=to[u];\n\tint ans1=1;\n\tint p=0;\n\twhile (1){\n\t\tif (ne==u){\n\t\t\tans[u]=ans1;\n\t\t\treturn;\n\t\t}\n\t\tif (ans[ne]){\n\t\t\tans[u]=ans1+ans[ne];\n\t\t\treturn;\n\t\t}\n\t\tif (si[col[ne]]>1){\n\t\t\tans[u]=ans1+si[col[ne]];\n\t\t\treturn;\n\t\t}\n\t\tans1++;\n\t\tne=to[ne];\n//\t\tcout<<++p<<\" \"<<ne<<endl;\n\t}\n}\nint n,m;\nint main(){\n//\tfreopen(\"testdata.in\",\"r\",stdin);\n//\tfreopen(\"ans.txt\",\"w\",stdout);\n\tn=read();\n\tint inf=N;\n\tfor (int i=1;i<=n;i++){\n\t\tto[i]=read();\n\t\tif (to[i]==i) ans[i]=1,col[i]=++inf,si[col[i]]=1;\n\t}\n\tfor (int i=1;i<=n;i++){\n\t\tif (col[i])continue;\n\t\ttarjan(i);\n\t}\n//\tfor (int i=1;i<=n;i++){\n//\t\tcout<<i<<\" \"<<col[i]<<\" \"<<si[col[i]]<<endl;\n//\t}\n\tfor (int i=1;i<=n;i++){\n\t\tif (ans[i]){\n\t\t\tprintf(\"%d\\n\",ans[i]);\n\t\t\tcontinue;\n\t\t}\n\t\twork(i);\n\t\tprintf(\"%d\\n\",ans[i]);\n\t}\n\treturn 0;\n}\n```\n\u4e0a\u8ff0\u4ee3\u7801\u5e94\u8be5\u8fd8\u6709\u4f18\u5316\u7684\u7a7a\u95f4\uff0c\u6b22\u8fce\u6307\u6559",
        "postTime": 1540726524,
        "uid": 71109,
        "name": "\u6b8b\u8840\u5915\u9633",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2921 \u3010[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    },
    {
        "content": "\u5bf9\u4e8e\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9x\uff0c\u8bb0\u5b83\u7684\u540e\u7ee7\u8282\u70b9\u4e3ato[x]\uff0c\u82e5x\u5728\u4e00\u4e2a\u73af\u4e2d\uff0c\u5219ans[x]=ans[to[x]]\uff0c\u82e5x\u4e0d\u5728\u73af\u4e2d\uff0c\u5219ans[x]=ans[to[x]]+1\uff0c\u53ef\u4ee5\u7528dfs\u7684\u65b9\u6cd5\u904d\u5386\u4e00\u6761\u7684\u8def\u5f84\uff0c\u5982\u679c\u67d0\u4e2a\u8282\u70b9\u7684\u540e\u7ee7\u5728\u8fd9\u6761\u8def\u5f84\u4e2d\u5df2\u7ecf\u88ab\u8bbf\u95ee\u8fc7\uff0c\u5219\u8bf4\u660e\u8fd9\u6761\u8def\u5f84\u53ef\u4ee5\u5f62\u6210\u73af\uff0c\u7531\u6b64\u6c42\u51fa\u8fd9\u6761\u8def\u5f84\u4e0a\u6240\u6709\u8282\u70b9\u7684\u7b54\u6848\uff0c\u82e5\u67d0\u4e2a\u8282\u70b9\u7684\u540e\u7ee7\u7684\u7b54\u6848\u5df2\u88ab\u6c42\u51fa\uff0c\u5219\u8fd9\u6761\u8def\u5f84\u4e0a\u6ca1\u6709\u73af\uff0c\u53ef\u4ee5\u5f80\u524d\u9012\u63a8\u6c42\u51fa\u8def\u5f84\u4e0a\u6240\u6709\u8282\u70b9\u7684\u7b54\u6848\u3002\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint ans[100010],vis[100010],to[100010],cir,rec[100010],totr;\nvoid getans(int x){\n\twhile(1){\n\trec[++totr]=x; vis[x]=totr;\n\tif (ans[to[x]]){\n\t\tans[x]=ans[to[x]]+1;\n\t\tbreak;\n\t}\n\tif (vis[to[x]]){\n\t\tcir=totr-vis[to[x]]+1;\n\t\tans[x]=cir; break; \n\t}\n\tx=to[x];\n\t}\n\tfor (int i=totr-1;i>=1;i--){\n\t\tif (i>=totr-cir+1) ans[rec[i]]=ans[rec[i+1]];\n\t\telse ans[rec[i]]=ans[rec[i+1]]+1;\n\t}\n}\nint main(){\n\tint n;\n\tscanf(\"%d\",&n);\n\tfor (int i=1;i<=n;i++)\n\t\tscanf(\"%d\",&to[i]);\n\tfor (int i=1;i<=n;i++)\n\t\tif (!ans[i]){\n\t\t\tcir=totr=0;\n\t\t\tmemset(vis,0,sizeof(vis));\n\t\t\tgetans(i);\n\t\t}\n\tfor (int i=1;i<=n;i++)\n\t\tprintf(\"%d\\n\",ans[i]);\n\treturn 0;\n}\n```",
        "postTime": 1533530909,
        "uid": 113188,
        "name": "yxchar",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2921 \u3010[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    },
    {
        "content": "\u9996\u5148\u8fd9\u662f\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u6c42\u4ece\u4e00\u4e2a\u70b9\u51fa\u53d1\u80fd\u7ecf\u8fc7\u7684\u6700\u5927\u70b9\u6570\uff0c\u672c\u849f\u84bb\u9a6c\u4e0a\u60f3\u5230\u4e86\u7206\u641c\u3002\n\n\u4f46\u7206\u641c\u7684\u590d\u6742\u5ea6\u662fn\u65b9\u7684\uff0c\u4f1aT\u6389\uff0c\u6240\u4ee5\u8003\u8651\u8bb0\u5fc6\u5316\u641c\u7d22\u3002\n\n\u4f46\u672c\u9898\u7684\u56fe\u662f\u6709\u5411\u6709\u73af\u56fe\uff0c\u4e0d\u662f\u6709\u5411\u65e0\u73af\u56fe\uff0c\u4e0d\u80fd\u76f4\u63a5\u8dd1\u641c\u7d22\uff0c\u6240\u4ee5\u8003\u8651tarjan\u7f29\u70b9\u91cd\u6784\u56fe\u5f62\u6210\u4e00\u4e2aDAG\uff0c\u5c31\u53ef\u4ee5\u6109\u5feb\u5730\u8dd1\u8bb0\u641c\u5566\uff08\u60f3\u5b66tarjan\u7684\uff0c\u5ba3\u4f20\u4e00\u4e0b\u6211\u7684[tarjan\u7684\u535a\u5ba2](https://www.luogu.org/blog/sincereactor/)\uff09\n\n\n\u987a\u4fbf\u5077\u5077\u544a\u8bc9\u4f60\u8fd9\u9898\u8fd8\u6709\u4e2a\u597d\u57fa\u53cb\u53eb[\u7f29\u70b9](https://www.luogu.org/problemnew/show/P3387)\n\n\n```\n#include<iostream>\n#include<stdio.h>\n#include<cstring>\nusing namespace std;\nstruct ss{\n\tint next,to;\n};ss data[200010];\nint n,p,timeclock,top,cnt,nex[200010];\nint head[200010],dfn[200010],low[200100],instack[200010],stack[200010],belong[200010],sum[200010];\nint f[200010];\nvoid add(int a,int b)\n{\n\tdata[++p].next=head[a];\n\tdata[p].to=b;\n\thead[a]=p;\n}\nvoid tarjan(int a)                        //tarjan\u7684\u8be6\u89e3\u53ef\u4ee5\u770b\u6211\u7684\u535a\u5ba2\u54e6 \n{\n\tdfn[a]=low[a]=++timeclock;\n\tinstack[a]=1;\n\tstack[++top]=a;\n\tfor(int i=head[a];i;i=data[i].next)\n\t{\n\t\tint v=data[i].to;\n\t\tif(!dfn[v])\n\t\t{\n\t\t\ttarjan(v);\n\t\t\tlow[a]=min(low[a],low[v]);\n\t\t}\n\t\telse\n\t\tif(instack[v])\n\t\tlow[a]=min(low[a],dfn[v]);\n\t}\n\tif(dfn[a]==low[a])\n\t{\n\t\tcnt++;\n\t\twhile(stack[top+1]!=a)\n\t\t{\n\t\t\tbelong[stack[top]]=cnt;\n\t\t\tinstack[stack[top--]]=0;\n\t\t\tsum[cnt]++;\n\t\t}\n\t}\n}\nvoid dfs(int a)                            //f[a]\u8868\u793a\u7b2ci\u4e2a\u70b9\u80fd\u5230\u8fbe\u7684\u70b9\u6570 \n{\n\tif(f[a]) return;                       //\u5982\u679c\u641c\u8fc7\u4e86\uff0c\u5c31\u9000\u51fa \n    f[a]=sum[a];\n    int maxsum=0;\n    for(int i=head[a];i;i=data[i].next)\n    {\n        if(!f[data[i].to]) dfs(data[i].to);\n        maxsum=max(maxsum,f[data[i].to]);\n    }\n    f[a]+=maxsum;                          //\u8bb0\u5fc6\u5316 \n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&nex[i]);\n\t\tadd(i,nex[i]);\n\t}\n\tfor(int i=1;i<=n;i++)\n\tif(!dfn[i])\n\ttarjan(i);\n\tmemset(data,0,sizeof(data));\n\tmemset(head,0,sizeof(head));\n\tp=0;\n\t//printf(\"cnt=%d\\n\",cnt);\n\tfor(int i=1;i<=n;i++)           \n\t{\n\t\tif(belong[i]!=belong[nex[i]])     //\u7f29\u70b9\u64cd\u4f5c\uff0c\u5c06\u6709\u5411\u6709\u73af\u56fe\u8f6c\u5316\u4e3a\u6709\u5411\u65e0\u73af\u56fe\uff0c\u65b9\u4fbf\u6211\u4eec\u8bb0\u641c \n\t\tadd(belong[i],belong[nex[i]]);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tdfs(belong[i]);\n\t\tprintf(\"%d\\n\",f[belong[i]]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1525933506,
        "uid": 63035,
        "name": "Danny_boodman",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2921 \u3010[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u672c\u6765\u60f3\u7684\u662fdfs\u904d\u5386\u6574\u5f20\u56fe\u5206\u522b\u7edf\u8ba1\u7b54\u6848\uff0c\u4e4b\u540e\u8003\u8651\u65f6\u95f4\u590d\u6742\u5ea6n<=1e5\u663e\u7136\u9700\u8981\u4e00\u4e2aO\uff08n\uff09\u6216\u8005nlogn\u7684\u7b97\u6cd5\u3002\u89c2\u5bdf\u9898\u76ee\uff0c\u53d1\u73b0\u6bcf\u4e2a\u70b9\u7684\u51fa\u5ea6\u4e00\u5b9a\u4e3a1\uff0c\u8fd9\u65f6\u5019\u7edf\u8ba1\u8fd9\u4e2a\u70b9\u6240\u5230\u8fbe\u7684\u6700\u591a\u7684\u70b9\u6570\u5176\u5b9e\u5c31\u53ef\u4ee5\u8868\u793a\u6210\u94fe+\u73af\u7684\u5f62\u5f0f\uff0c\u800c\u6bcf\u4e2a\u73af\u4e0a\u7684\u70b9\u7684\u7b54\u6848\u663e\u7136\u90fd\u662f\u4e00\u6837\u7684\u3002\u53ef\u4ee5\u4f7f\u7528\u62d3\u6251\u6392\u5e8f\u627e\u51fa\u6240\u6709\u7684\u73af\uff0c\u8bb0\u5f55\u7b54\u6848\uff0c\u7136\u540e\u4f7f\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u6216\u8005dp\u6765\u627e\u51fa\u7b54\u6848\u3002dfs(i)=dfs(a[i])+1,\u4f7f\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u6765\u8fdb\u884c\u7ef4\u62a4\u3002\n\n\n```cpp\n    #include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<cstring>\n#include<string>\n#include<algorithm>\n#include<queue>\n#include<stack>\n#include<vector>\n#include<map>\n#include<set>\n#include<functional>\n#define ll long long\n#define N 100001 \nusing namespace std;\ninline int read(){\n    int X=0,w=1;char ch=0;\n    while(ch>'9'||ch<'0'){\n        if(ch=='-'){\n            w=-1;\n        }\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9'){\n        X=(X<<1)+(X<<3)+ch-'0';\n        ch=getchar();\n    }\n    return X*w;\n}\nint a[N],n;\nint dp[N];\nint rd[N];\nint vis[N];\nint num=0;\nint dfs1(int x){\n    if(vis[x])return 0;\n    num++;\n    vis[x]=1;\n    dfs1(a[x]);\n}\nint exist[N];\nint dfs2(int x){\n    if(exist[x])return 0;\n    dp[x]=num;exist[x]=1;\n    dfs2(a[x]);\n}\nint dfs(int x){\n    if(dp[x])return dp[x];\n    dp[x]=dfs(a[x])+1;\n    return dp[x];\n}\nint main()\n{\n    n=read();\n    for(int i=1;i<=n;i++){\n        a[i]=read();\n        rd[a[i]]++;\n    }\n    queue<int> q;\n    for(int i=1;i<=n;i++){\n        if(!rd[i]){\n            q.push(i);\n            vis[i]=1;\n        }\n    }\n    while(!q.empty()){\n        int x=q.front();\n        q.pop();\n        rd[a[x]]--;\n        if(!rd[a[x]]){\n            q.push(a[x]);\n            vis[a[x]]=1;\n        }\n    }\n    for(int i=1;i<=n;i++){\n        num=0;\n        if(!vis[i]){\n            dfs1(i);\n            dfs2(i);\n        }\n    }\n    for(int i=1;i<=n;i++){\n        printf(\"%d\\n\",dfs(i)); \n    }\n    return 0;\n}\n\n```",
        "postTime": 1513476829,
        "uid": 36176,
        "name": "Jayne",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2921 \u3010[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    },
    {
        "content": "\u7b97\u6cd5\uff1a tarjan\u7f29\u70b9+\u8bb0\u5fc6\u5316\u641c\u7d22    \n\n\u5206\u6790\uff1a  \n+ \u4e3a\u4ec0\u4e48\u8981\u7528tarjan\u7f29\u70b9\u5462\uff1f    \n\n\u5f88\u663e\u7136\u9898\u76ee\u7ed9\u51fa\u7684\u6570\u636e\u662f\u4e00\u6761\u5e26\u6709\u73af\u7684\u94fe\uff0c\u4f4d\u4e8e\u73af\u4e0a\u7684\u9694\u95f4\u90fd\u53ef\u4ee5\u88ab\u5976\u725b\u8d70\u8fc7\uff0c\u6240\u4ee5\u8981\u662f\u5976\u725b\u7ecf\u8fc7\u4e86\u8fd9\u4e2a\u73af\uff0c\u90a3\u4e48\u8fd9\u4e2a\u73af\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u5c31\u662f\u73af\u4e0a\u70b9\u7684\u4e2a\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u7528tarjan\u5148\u5c06\u73af\u5904\u7406\u51fa\u6765\u3002\n\n\u4e2a\u4eba\u770b\u6cd5\uff1a\u662f\u5373\u7f29\u70b9\u6a21\u677f\u9898\u4e4b\u540e\u7684\u4e00\u9053\u7ec3\u624b\u9898\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#define Mi return\n#define manchi 0\n\nusing namespace std;\nconst int N = 100500;\n\ninline int read()\n{\n\tint num=0,w=1;char ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-')w=-1;ch=getchar();}\n\twhile(isdigit(ch)) num=(num<<1)+(num<<3)+ch-'0',ch=getchar();\n\tMi num*w;\n}\n\nint n,tot,Time,tot_,ans[N];bool vis[N];\nint ver[N],Next[N],head[N],from[N];\nint ver_[N],Next_[N],head_[N];\nint dfn[N],low[N],scc[N],stac[N],cnt,num[N];\n\ninline void add(int x,int y)\n{\n\tver[++tot]=y;\n\tNext[tot]=head[x];\n\thead[x]=tot;\n\tfrom[tot]=x;\n}\n\ninline void tarjan(int x)\n{\n\tlow[x]=dfn[x]=++Time;\n\tstac[++stac[0]]=x;vis[x]=1;\n\tfor(int i=head[x];i;i=Next[i])\n\t{\n\t\tint y=ver[i];\n\t\tif(!dfn[y])\n\t\t{\n\t\t\ttarjan(y);\n\t\t\tlow[x]=min(low[x],low[y]);\n\t\t}\n\t\telse if(vis[y]) \n\t\t\tlow[x]=min(low[x],low[y]);\n\t}\n\tif(dfn[x]==low[x])\n\t{\n\t\tcnt++;//cnt\u4e3a\u7f29\u70b9\u540e\u70b9\u7684\u4e2a\u6570 \n\t\tfor(int y=stac[stac[0]--];y;y=stac[stac[0]--])\n\t\t{\n\t\t\tscc[y]=cnt;vis[y]=0;num[cnt]++;//num[cnt]\u5373\u5f53\u524d\u8fd9\u4e2a\u73af(\u70b9)\u4e0a\u6709\u51e0\u4e2a\u70b9\n\t\t\tif(y==x) break;\n\t\t}\n\t}\n } \n\ninline int dfs(int x)\n{\n\tans[x]=num[x];//\u521d\u59cb\u8d21\u732e\u4e3a\u73af\u4e0a\u70b9\u7684\u4e2a\u6570 \n\tfor(int i=head_[x];i;i=Next_[i])\n\t{\n\t\tint y=ver_[i];\n\t\tif(!ans[y])//\u5982\u679c\u6ca1\u641c\u8fc7\u5c31\u5f80\u4e0b\u641c \n\t\t\tans[x]+=dfs(y);\n\t\telse{ans[x]+=ans[y];break;}\t//\u641c\u8fc7\u4e86\u5c31\u7d2f\u52a0\u7b54\u6848\u7136\u540e\u7ed3\u675f\u641c\u7d22 \n\t }\n\t return 0;\n}\n\nint main()\n{\n\tn=read();\n\tfor(int i=1,x;i<=n;i++)\n\t\tx=read(),add(i,x);\n\t\n\t//tarjan scc\u7f29\u70b9 \n\tfor(int i=1;i<=n;i++)\n\t\tif(!dfn[i]) tarjan(i);\n\t\n\t//\u5efa\u65b0\u56fe \n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint x=scc[from[i]],y=scc[ver[i]];\n\t\tif(x==y) continue;\n\t\tver_[++tot_]=y;\n\t\tNext_[tot_]=head_[x];\n\t\thead_[x]=tot_;\n\t}\n\t\n\t//\u5728\u65b0\u56fe\u4e0a\u8bb0\u5fc6\u5316\u641c\u7d22 \n\tfor(int i=1;i<=cnt;i++)\n\t\tdfs(i);\n\tfor(int i=1;i<=n;i++)\n\t\tprintf(\"%d\\n\",ans[scc[i]]);\n\t//\u6ce8\u610f\u8f93\u51fa\u7684\u65f6\u5019 \u5e94\u8be5\u662f\u8f93\u51faans[scc[i]]\u5373\u7f29\u70b9\u540e\u7684\u7b54\u6848 \n\tMi manchi;\n }\n//typed by zbwer 2019-10-31\n```\n",
        "postTime": 1572532504,
        "uid": 161521,
        "name": "zbwer",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2921 \u3010[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    },
    {
        "content": "\u770b\u5230\u8fd9\u9053\u9898\u76ee\u7684\u7b2c\u4e00\u53cd\u5e94\u5c31\u662fdfs\n\n\u6240\u4ee5\u4ea4\u4e00\u53d1dfs\u5148\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\ntypedef long long ll;\nconst int N = 1e5 + 5;\nstruct node\n{\n\tint num,nxt;\n}a[N];\nint n,ans,vis[N];\nvoid dfs(int x)\n{\n\t++ans; vis[x]=1;\n\tif(vis[a[x].nxt]) return ;\n\tdfs(a[x].nxt);\n}\ninline int read()\n{\n\tint x=0,w=1; char c=getchar();\n\twhile(c>'9'||c<'0') {if(c=='-') w=-1; c=getchar();}\n\twhile(c>='0'&&c<='9') {x=(x<<1)+(x<<3)+c-'0'; c=getchar();}\n\treturn w*x;\n}\nint main()\n{\n\tn=read();\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\ta[i].num=i;\n\t\ta[i].nxt=read();\n\t}\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tmemset(vis,0,sizeof(vis));\n\t\tans=0;\n\t\tvis[i]=1;\n\t\tdfs(i);\n\t\tprintf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n```\n\u6240\u4ee5\uff0c\u597d\uff0cT\u4e866\u4e2a\u70b9\uff0c\u5b8c\u7f8e40\u5206\uff08\u7ed3\u675f\u6218\u6597\uff09\n\n\u4f46\u662f\u771f\u7684OIer\uff0c\u6562\u4e8e\u76f4\u9762\u60e8\u6de1\u7684WA\uff0c\u6562\u4e8e\u76f4\u89c6\u6dcb\u6f13\u7684TLE\uff0c\u8fd9\u662f\u600e\u6837\u7684\u54c0\u75db\u8005\u548c\u5e78\u798f\u8005\uff1f\n\n\u4e8e\u662f\u4e4e\u3010~~\u5b66\u4e60\u5316\u5b66\u8001\u5e08~~\u3011\uff0c\u60f3\u5230\u4e86\u4f18\u5316\u65b9\u6cd5\uff08\u5e94\u8be5\u4e0d\u662f\u5f88\u96be\u60f3\uff09\n\n\u53ef\u4ee5\u5224\u65ad\u4e00\u4e0b\u5f53\u524d\u70b9\u8d70\u6ca1\u90fd\u8fc7\uff0c\u5982\u679c\u5f53\u524d\u70b9\u8d70\u8fc7\u4e86\u4e14\u5728\u73af\u4e0a\u5c31\u65e0\u9700\u518d\u8d70\uff08\u660e\u767d\u6211\u7684\u610f\u601d\uff1f\u3010~~\u5b66\u4e60\u7269\u7406\u8001\u5e08~~\u3011\uff09\n\n\u90a3\u8bb0\u641c\u5e94\u8be5\u5f88\u597d\u6253\u4e86\n```cpp\n//\u5e94\u8be5\u4e0d\u9700\u8981\u6253\u4ec0\u4e48\u6ce8\u91ca\u4e86\u5427\uff0c\u8fd9\u662f\u4e00\u9053\u88f8\u9898\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdio>\nusing namespace std;\nconst int N = 1e5 + 5;\nint n,nxt[N],ans[N],dep[N];\nvoid dfs(int x,int num)//x\u662f\u5f53\u524d\u70b9\uff0cnum\u662f\u5f53\u524d\u7684\u7b54\u6848\n{\n    dep[x]=num;\n    if(ans[nxt[x]])\n\t{\n        ans[x]=ans[nxt[x]]+1;\n        return ;\n    }\n    if(dep[nxt[x]])\n\t{\n        ans[x]=dep[x]-dep[nxt[x]]+1;\n        int k=nxt[x];\n        while(k!=x) ans[k]=ans[x],k=nxt[k];\n    }\n    else\n\t{\n        dfs(nxt[x],num+1);\n        if(!ans[x]) ans[x]=ans[nxt[x]]+1;\n    }\n    return ;\n}\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;++i) cin>>nxt[i];\n    for(int i=1;i<=n;++i)\n        if(!dep[i]) dfs(i,1);\n    for(int i=1;i<=n;++i) cout<<ans[i]<<endl;\n    return 0;\n}\n```\n",
        "postTime": 1568634680,
        "uid": 35148,
        "name": "Lying_Flat666",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2921 \u3010[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\n\n\u8fd9\u4e2a\u9898\u76ee\u6211\u4eec\u53ef\u4ee5\u5148\u628a\u5f3a\u8fde\u901a\u5206\u91cf\u6c42\u51fa\u6765\uff0c\uff08\u5f3a\u8fde\u901a\u5206\u91cf\uff1a\u5728\u8be5\u5b50\u56fe\u4e2d\u5982\u679cv->u\uff0c\u90a3\u4e48u->v\u4e00\u5b9a\u6210\u7acb\uff09\u3002\n\n\u7136\u540e\u5982\u679c\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u7684\u70b9\u6570\u5927\u4e8e\u7b49\u4e8e2\uff0c\u8bf4\u660e\u8be5\u5f3a\u8fde\u901a\u5206\u91cf\u6210\u73af\uff0c\u800c\u7b49\u4e8e1\u7684\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\n\n\u8981\u4e48\u81ea\u5df1\u6210\u73af\uff0c\u8981\u4e48\u76f4\u63a5\u6216\u95f4\u63a5\u8fde\u7740\u4e00\u4e2a\u73af\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5148\u7528tarjan\u6c42\u5f3a\u8fde\u901a\u5206\u91cf\uff0c\u7136\u540e\u5904\u7406\u4e0b\u7f29\u70b9\u540e\u7684\u6709\u5411\u65e0\u73af\u56fe\u5c31\u597d\u89e3\u51b3\u4e86\u3002\n\n------------\n```c\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <queue>\n#include <stack>\n#include <map>\n#include <cmath>\n#include <iomanip>\nusing namespace std;\n\ntypedef long long LL;\n#define inf (1LL << 25)\n#define rep(i,j,k) for(int i = (j); i <= (k); i++)\n#define rep__(i,j,k) for(int i = (j); i < (k); i++)\n#define per(i,j,k) for(int i = (j); i >= (k); i--)\n#define per__(i,j,k) for(int i = (j); i > (k); i--)\n\nconst int N = 100010;\nint DFN[N];\nint LOW[N];\nbool insta[N];\nint sccno[N]; //NO.x \u7f16\u53f7\nint sccdeep[N]; //\u5206\u91cf\u6df1\u5ea6\nint head[N];\nbool visscc[N]; //\u7f29\u70b9\u540e\u7684\u6709\u5411\u65e0\u73af\u56fe\nstack<int> sta;\nvector<int> scc[N];\nint scccnt,dfn,cnt;\nint n;\n\nstruct Edge{\n\tint loc;\n\tint to;\n\tint next;\n}e[N];\n\nvoid add(int u,int v){\n\te[cnt].loc = u;\n\te[cnt].to = v;\n\te[cnt].next = head[u];\n\thead[u] = cnt++;\n}\n\nvoid tarjan(int u){\n\n\t\n\tDFN[u] = LOW[u] = ++dfn;\n\tsta.push(u);\n\tinsta[u] = true;\n\n\tfor(int o = head[u]; ~o; o = e[o].next){\n\t\tint v = e[o].to;\n\n\t\tif(!DFN[v]){\n\t\t\ttarjan(v);\n\t\t\tLOW[u] = min(LOW[u],LOW[v]);\n\t\t}\n\t\telse if(insta[v]){\n\t\t\tLOW[u] = min(LOW[u],DFN[v]);\n\t\t}\n\t}\n\n\tif(LOW[u] == DFN[u]){\n\t\t++scccnt;\n\t\tscc[scccnt].clear();\n\t\twhile(1){\t\n\t\t\tint v = sta.top();\n\t\t\tsta.pop();\n\t\t\tsccno[v] = scccnt; //\u7f29\u70b9\n\t\t\tinsta[v] = false;\n\t\t\tscc[scccnt].push_back(v); //\u7f29\u70b9\n\t\t\t\n\t\t\tif(v == u) break;\n\t\t}\n\n\t\tsccdeep[scccnt] = scc[scccnt].size(); //\u5305\u542b\u51e0\u4e2a\u70b9\n\t\t// cout << scccnt << \" num \" << sccdeep[scccnt] << endl;\n\t}\n}\n\nvoid dfs(int ucnt){\n\n\t//xcnt  \u5c5e\u4e8e\u54ea\u4e00\u5757\u5206\u91cf\n\n\tint u = scc[ucnt][0]; //\u8be5\u70b9\n\tvisscc[ucnt] = true;\n\tfor(int o = head[u]; ~o; o = e[o].next){\n\t\tint v = e[o].to; //\u53bb\u7684\u70b9\n\t\tint vcnt = sccno[v]; \n\t\tif(v == u) break;//\u81ea\u5df1\u6210\u73af\n\t\tif(visscc[vcnt]) sccdeep[ucnt] += sccdeep[vcnt];\n\t\telse{\n\t\t\tdfs(vcnt);\n\t\t\tsccdeep[ucnt] += sccdeep[vcnt];\n\t\t}\n\n\t\t/*\u8fd9\u91cc\u7ed9\u4e00\u7ec4\u6570\u636e\u65b9\u4fbf\u7406\u89e3\n\t\t\t5\n\t\t\t2\n\t\t\t3\n\t\t\t5\n\t\t\t1\n\t\t*/\t\n\t}\n}\n\nvoid print(){\n\n\trep(i,1,n){\n\t\tcout << sccdeep[sccno[i]] << endl;\n\t}\n}\n\nint main(){\n\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\n\tcin >> n;\n\n\trep(i,1,n) head[i] = -1; //\u5934\n\tcnt = 0; //\u8fb9\u6570\n\tint v;\n\trep(u,1,n){\n\t\tcin >> v;\n\t\tadd(u,v);\n\t}\n\n\t// rep(i,1,n){\n\t// \tfor(int o = head[i]; ~o; o = e[o].next)\n\t// \t\tcout << i << ' ' << e[o].to << endl;\n\t// }\n\n\trep(i,1,n) insta[i] = sccno[i] = DFN[i] = LOW[i] = sccdeep[i] = 0;\n\tscccnt = dfn = 0;\n\trep(i,1,n) if(!DFN[i]){\n\t\ttarjan(i);\n\t}\n\n\n\trep(i,1,scccnt) if(sccdeep[i] >= 2) visscc[i] = true; //\u70b9\u6570\u8d85\u8fc72\u4e2a\u7684\u5206\u91cf\u662f\u73af\uff0c\u5148\u5904\u7406\u4e86\n\trep(i,1,scccnt) if(!visscc[i]){\n\t\tdfs(i);\n\t}\n\n\tprint();\n\n\tgetchar(); getchar();\n\treturn 0;\n}\n```\n",
        "postTime": 1565884972,
        "uid": 228209,
        "name": "SummerMing",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2921 \u3010[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    },
    {
        "content": "# \u8fd9\u9898\u53ef\u4ee5\u4e0d\u7528Tarjan!\n# \u53ef\u4ee5\u7528kosaraju\uff01\n#### \u4e0d\u8fc7\u6211\u66f4\u559c\u6b22tarjan\uff01\n## \u6240\u4ee5\u6211\u4eec\u8fd8\u662f\u7528Tarjan\n\u8fd9\u9898\u662f\u6211\u4eec\u6a21\u62df\u8003\u8bd5\u7684\u9898\u76ee \u8fd8\u662f\u6bd4\u8f83\u597d\u60f3\u7684 \n\u5927\u698215\u5206\u949f\u51fa\u6b63\u89e3\n#### \u601d\u8def\uff1a\u5206\u6790\u505c\u6b62\u7684\u60c5\u51b5\uff1a\u7531\u4e8e\u6bcf\u4e2a\u70b9\u53ea\u6709\u4e00\u6761\u51fa\u8fb9\uff0c\u90a3\u4e48\u53ea\u6709\u53ef\u80fd\u6210\u73af(\u4e0d\u8bba\u662f\u81ea\u73af\u8fd8\u662f\u7b80\u5355\u73af\uff09\n1.\u66b4\u529b\uff1a\u4ece\u6bcf\u4e2a\u70b9\u51fa\u53d1\u8dd1dfs\uff0c\u76f4\u5230\u505c\u6b62\uff0c\u4ee3\u7801\u7b80\u5355\uff0c\u5206\u6570\u56f0\u96be\u3002\n\n### 2.Tarjan+dfs \u6b63\u89e3\n#### \u5bf9\u8be5\u6709\u5411\u56fe\u8fdb\u884cTarjan\u7f29\u70b9\u3002\n\u5206\u6790:SCC.SIZE>1\u7684\u70b9\uff0cSIZE\u5373\u4e3a\u7b54\u6848(\u8be5\u70b9**\u5fc5\u5b9a\u4e14\u4ec5\u80fd**\u7ecf\u8fc7\u8be5\u73af\u4e0a\u7684\u6240\u6709\u70b9)\n\nSCC.SIZE=1\u65f6\uff0c\u8bf4\u660e\u8be5\u70b9\u53ef\u4ee5**\u7ee7\u7eed\u5411\u4e0b\u8d70**\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u6734\u7d20DFS,**\u76f4\u5230\u78b0\u5230SCC.size>1\u7684\u8282\u70b9\u505c\u6b62**\u3002\n\n\u4ee3\u7801\u53ef\u8bfb\u6027\u5e94\u8be5\u6bd4\u8f83\u9ad8\uff0c\u5c31\u662f\u4ee3\u7801\u4e2d\u7684w\u6570\u7ec4\u5373\u4e3asize;\n\u5269\u4e0b\u7684\u5c31\u662fTarjan\u548cDFS\u6a21\u677f\u4e86\uff0c\u81ea\u5df1\u63e3\u6469\u4e0b\u8fd8\u662f\u4e0d\u96be\u7684\u3002\n\u4e0a\u4ee3\u7801:(\u53ef\u80fd\u6bd4\u8f83\u7e41\u7410\uff0c\u53cd\u6b63\u8003\u8bd5\u4e5f\u6ca1\u60f3\u90a3\u4e48\u591a\uff0c~~\u5c06\u5c31\u770b~~)\n```cpp\n//a zj\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<vector>\n#include<stack>\nusing namespace std;\nconst int N=1e5+250;\ninline int read() {\n\tint ans=0;\n\tchar c;\n\tbool flag=true;\n\tfor(; c>'9'||c<'0'; c=getchar())if(c=='-')flag=false;\n\tfor(; c>='0'&&c<='9'; c=getchar())ans=ans*10+c-'0';\n\treturn flag ? ans : -ans;\n}\nint dfn[N],low[N],cloc,c[N],cnt,w[N];\nnamespace G1 {\n\tstruct Edge {\n\t\tint to,nxt;\n\t} edge[N];\n\tint head[N],tot=1;\n\tvoid add(int x,int y) {\n\t\tedge[++tot].to=y;\n\t\tedge[tot].nxt=head[x];\n\t\thead[x]=tot;\n\t}\n\tstack<int>st;\n\tbool ins[N];\n\tvoid tarjan(int u) {\n\t\tst.push(u),ins[u]=1;\n\t\tdfn[u]=low[u]=++cloc;\n\t\tfor(int i=head[u]; i; i=edge[i].nxt) {\n\t\t\tint v=edge[i].to;\n\t\t\tif(!dfn[v]) {\n\t\t\t\ttarjan(v);\n\t\t\t\tlow[u]=min(low[v],low[u]);\n\t\t\t} else if(ins[v]) {\n\t\t\t\tlow[u]=min(low[u],dfn[v]);\n\t\t\t}\n\t\t}\n\t\tif(low[u]==dfn[u]) {\n\t\t\tint tp;\n\t\t\tcnt++;\n\t\t\tdo {\n\t\t\t\ttp=st.top();\n\t\t\t\tst.pop();\n\t\t\t\tins[tp]=0;\n\t\t\t\tw[cnt]++;\n\t\t\t\tc[tp]=cnt;\n\t\t\t} while(tp!=u);\n\t\t}\n\t}\n}\nint summ;\nnamespace G2 {\n\tstruct Edge {\n\t\tint to,nxt;\n\t} edge[N];\n\tint head[N],tot=1;\n\tvoid add(int x,int y) {\n\t\tedge[++tot].to=y;\n\t\tedge[tot].nxt=head[x];\n\t\thead[x]=tot;\n\t}\n\tvoid dfs(int u) {\n\t\tif(w[u]==1)summ++;\n\t\telse {\n\t\t\tsumm+=w[u];\n\t\t\treturn ;\n\t\t}\n\t\tfor(int i=head[u]; i; i=edge[i].nxt) {\n\t\t\tint v=edge[i].to;\n\t\t\tdfs(v);\n\t\t}\n\t}\n}\nint n;\nint main() {\n//\tfreopen(\"a.in\",\"r\",stdin);\n//\tfreopen(\"a.out\",\"w\",stdout); \n\tn=read();\n\tfor(int i=1; i<=n; i++) {\n\t\tint t=read();\n\t\tif(t==i)continue;\n\t\tG1::add(i,t);\n\t}\n\tfor(int i=1; i<=n; i++)if(!dfn[i])G1::tarjan(i);\n\tfor(int u=1; u<=n; u++) {\n\t\tfor(int i=G1::head[u]; i; i=G1::edge[i].nxt) {\n\t\t\tint v=G1::edge[i].to;\n\t\t\tif(c[u]!=c[v])\n\t\t\t\tG2::add(c[u],c[v]);\n\n\t\t}\n\t}\n\tfor(int i=1; i<=n; i++)\n\t\tif(w[c[i]]==1) {\n\t\t\tsumm=0;\n\t\t\tG2::dfs(c[i]);\n\t\t\tw[c[i]]=summ;\n\t\t}\n\tfor(int i=1; i<=n; i++)printf(\"%d\\n\",w[c[i]]);\n\treturn 0;\n}\n/*\n5\n3\n4\n2\n5\n3\n*/\n```\n",
        "postTime": 1565364969,
        "uid": 119132,
        "name": "Binwens",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2921 \u3010[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    },
    {
        "content": "\u6b64\u9898\u6709\u4e24\u79cd\u627e\u73af\u6cd5\uff0c\u4e00\u79cd\u662f\u7528tarjan\uff0c\u4e00\u79cd\u662f\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u3002\n\n## tarjan\n\n\u5224\u65ad \u539f\u8def\u5f84\u7684\u5165\u73afdfn -\u2212 \u539f\u8def\u5f84\u4e2d\u6b64\u8282\u70b9\u7684dfn \u662f\u5426\u5927\u4e8e 0\n\n \u5982\u679c\u8fd9\u4e2a\u8282\u70b9\u4e0d\u5728\u73af\u4e2d\uff0c\u539f\u8def\u5f84\u7684\u5165\u73afdfn-\u2212 \u539f\u8def\u5f84\u4e2d\u6b64\u8282\u70b9\u7684dfn +\u3000\u65b0\u8def\u5f84\u5f53\u524d\u65f6\u95f4\u3000\u5373\u4e3a\u65b0\u8def\u5f84\u7684\u5165\u73afdfn;\n \n \u800c\u5982\u679c\u8fd9\u4e2a\u8282\u70b9\u5728\u73af\u4e2d\uff0c\u8bbe\u4e3a\u65b0\u8def\u5f84\u8d77\u70b9\u3002\n \n ```cpp\n#include<cstdio>\n#include<iostream>\n#include<string.h>\n#include<vector>\n#include<stack>\nusing namespace std;\nconst int N=100005;\nint n,anxt[N],f[N],dfn[N],low[N],last[N],acnt[N],fa[N],aa[N],tot=0,num=0,last2[N],aans[N];\nbool vis[100005];\nstack<int> stk;\nstruct node{\n    int frm,to,prev;\n}edge[N];\ninline void add(int a, int b){\n    edge[++tot]=node{a,b,last[a]};\n    last[a]=tot;\n}\nvoid tarjan(int u){\n    int v;\n    dfn[u]=low[u]=++num;\n    stk.push(u);\n    vis[u]=1;\n    for(int i=last[u];i;i=edge[i].prev){\n        v=edge[i].to;\n        if(!dfn[v]){\n            tarjan(v);\n            low[u]=min(low[u],low[v]);\n        }\n        else if(vis[v]){low[u]=min(low[u],dfn[v]);}\n    }\n    if(dfn[u]==low[u]){\n        int cnt=0;  \n        do{\n            cnt++;\n            v=stk.top();\n            stk.pop();\n            vis[v]=0;\n            fa[v]=u; \n        }while(u!=v);\n        acnt[u]=cnt; \n    }\n}\nint dfs(int x,int rt){\n    if(fa[x]==fa[rt])return 0; \n    if(aans[x])return aans[x];\n    return aans[x]=acnt[fa[x]]+dfs(anxt[x],x);\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(register int i=1;i<=n;i++){\n\t\tint num;\n\t\tscanf(\"%d\",&num);\n\t\tadd(i,num); \n\t\tanxt[i]=num;\t\t\n\t}\n\tfor(register int i=1;i<=n;i++){\n\t\tif(!fa[i])tarjan(i);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tprintf(\"%d\\n\",dfs(i,0));\t\t\n\t}\n\treturn 0;\n}\n\n```\n\n\n## \u8bb0\u5fc6\u5316\u641c\u7d22\n\n\u5f88\u7b80\u5355\u4e0d\u8bf4\u4e86\uff0c\u627e\u73af\u540e\u52a8\u89c4\u66f4\u65b0\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nconst int N=100005;\nint n,anxt[N]/*\u70b9\u7684\u4e0b\u4e00\u4e2a\u70b9\u7684\u5e8f\u53f7*/,aans[N]/*\u6b64\u70b9\u641c\u7d22\u7ecf\u5386\u70b9\u6570*/,adep[N]/*\u6b64\u70b9\u6df1\u5ea6*/;\nvoid dfs(int t,int dep/*\u6df1\u5ea6*/){\n\tadep[t]=dep;\n\tif(aans[anxt[t]]){\n\t\taans[t]=aans[anxt[t]]+1;//\u8bb0\u5fc6\u5316\u641c\u7d22 \n\t\treturn;\n\t}\n\tif(adep[anxt[t]]){//\u627e\u5230\u73af \n\t\taans[t]=adep[t]-adep[anxt[t]]+1;\n\t\tint k=anxt[t];\n\t\twhile(k!=t) aans[k]=aans[t],k=anxt[k]; //\u5904\u7406\u73af \n\t}\n\telse{//\u6ca1\u627e\u5230 \n\t\tdfs(anxt[t],dep+1);\n\t\tif(!aans[t]) aans[t]=aans[anxt[t]]+1;//\u52a8\u89c4\uff0c\u82e5\u5b50\u6811\u6ca1\u6709\u627e\u5230\u73af\u6ca1\u66f4\u65b0\uff0c\u5728\u5b50\u6811\u4e2a\u6570\u4e0a\u52a0\u4e00 \n\t}\n\treturn;\n}\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>anxt[i];\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tif(adep[i]==0){//\u5982\u679c\u5df2\u7ecf\u641c\u7d22\u8fc7\u7684\u8054\u901a\u5757\u91cc\u6ca1\u6709\u641c\u5230\n\t\t\tdfs(i,1);//\u4ee5\u8be5\u70b9\u4e3a\u8d77\u70b9\u7ee7\u7eed\u641c \n\t\t} \n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tcout<<aans[i]<<endl;//\u8f93\u51fa\u4e2a\u6570 \n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1561291595,
        "uid": 165561,
        "name": "lian_sama",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2921 \u3010[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5c31\u7c7b\u4f3c\u4e8e\u67d0\u201c\u4fe1\u606f\u4f20\u9012\u201d\n\n\u6211\u4eec\u9996\u5148\u7528$tarjan$\u7f29\u70b9\u3002\u5269\u4e0b\u7684\u5206\u7c7b\u8ba8\u8bba\n\n$\\text{1\uff1a}$\n\n\u8be5\u70b9\u5728\u67d0\u73af\u4e2d\u3002\u8fd9\u79cd\u60c5\u51b5\u76f4\u63a5``cout<<cnt[col[u]];``\n\n$\\text{2\uff1a}$\n\n\u8be5\u70b9\u662f\u94fe\u7ed3\u70b9\u3002\u6211\u4eec\u8dd1$dfs$\n\n\u5173\u952e\u90e8\u5206\uff1a\n\n```cpp\nvoid dfs(int u)\n{\n\tif(!f[v[u]]) {//\u5b83\u7684\u76ee\u6807\u4e5f\u662f\u94fe\n\t\tdfs(v[u]);//\u7ee7\u7eeddfs\n\t\tf[u]+=f[v[u]]+1;//\u52a0\u8d77\u6765\n\t}\n\telse f[u]+=f[v[u]]+1;//\u5982\u679c\u4ed6\u7684\u76ee\u6807\u4e0d\u662f\u94fe\u7684\u8bdd\u5c31\u76f4\u63a5\u52a0\u8d77\u6765\n}\n```\n\n\u5176\u4ed6\u7684\u5c31\u6ca1\u4ec0\u4e48\u96be\u70b9\u4e86\u3002\n\n\u5148\u7f29\u70b9\uff0c\u7136\u540e$dfs$\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=200005;\nstack<int>st;\nint dfn[maxn],low[maxn],col[maxn],cn[maxn],ins[maxn];\nint tim=0,cnt=0;\nstruct Edge {\n\tint to,nxt;\n}edge[2*maxn];\nint head[maxn];\nint k=1;\nint n;\nint f[maxn];\nint v[maxn];\nvoid add(int from,int to)\n{\n\tedge[k].to=to;\n\tedge[k].nxt=head[from];\n\thead[from]=k++;\n}\nvoid tj(int u)//tarjan\n{\n\tdfn[u]=low[u]=++tim;\n\tst.push(u);\n\tins[u]=1;\n\tfor(int i=head[u];i;i=edge[i].nxt) {\n\t\tint v=edge[i].to;\n\t\tif(!dfn[v]) {\n\t\t\ttj(v);\n\t\t\tlow[u]=min(low[u],low[v]);\n\t\t}\n\t\telse if(ins[v]) {\n\t\t\tlow[u]=min(low[u],dfn[v]);\n\t\t}\n\t}\n\tif(low[u]==dfn[u]) {\n\t\tcol[u]=++cnt;\n\t\tcn[cnt]++;\n\t\twhile(st.top()!=u) {\n\t\t\tcol[st.top()]=cnt;\n\t\t\tcn[cnt]++;\n\t\t\tst.pop();\n\t\t}\n\t\tst.pop();\n\t}\n}\nvoid dfs(int u)\n{\n\tif(!f[v[u]]) {\n\t\tdfs(v[u]);\n\t\tf[u]+=f[v[u]]+1;\n\t}\n\telse f[u]+=f[v[u]]+1;\n}\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;i++) {\n\t\tcin>>v[i];\n\t\tadd(i,v[i]);\n\t\tif(i==v[i]) f[i]=1;//\u81ea\u73af\uff0c\u4e0d\u52a0\u5219wa\uff0810\uff09\n\t}\n\tfor(int i=1;i<=n;i++) {\n\t\tif(!dfn[i]) tj(i);\n\t}\n\tfor(register int i=1;i<=n;i++) {\n\t\tif(cn[col[i]]!=1) f[i]=cn[col[i]];\n\t}\n\tfor(register int i=1;i<=n;i++) {\n\t\tif(!f[i]) dfs(i);//dfs\n\t\tcout<<f[i]<<endl;//\u8f93\u51fa\n\t}\n}\n```",
        "postTime": 1554963307,
        "uid": 92254,
        "name": "Social_Zhao",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2921 \u3010[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    },
    {
        "content": "\u5c3d\u7ba1\u8fd9\u9053\u9898\u6709\u5f88\u591a\u89e3\u6cd5\uff0c\u4f46\u6211\u626b\u4e86\u4e00\u904d\u9898\u89e3\u53d1\u73b0\u6211\u6253\u7684\u662f\u6700\u590d\u6742\u7684Tarjan\u7f29\u70b9+\u62d3\u6251+DP\u3002\n\n\u8fd9\u9053\u9898\u6211\u4e00\u5f00\u59cb\u6ca1\u6709\u7f29\u70b9\uff0c\u7ed3\u679c\u8fde\u6837\u4f8b\u90fd\u6ca1\u6709\u8fc7\u3002\u7b2c\u4e8c\u5929\u518d\u770b\u624d\u77e5\u9053\u9700\u8981\u7f29\u70b9\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u4e2d\u725b\u68da\u7684\u4e2a\u6570\u3002\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u62d3\u6251\uff0c\u6c42\u51fa\u4ece\u6bcf\u4e2a\u725b\u68da\u5f00\u59cb\uff0c\u80fd\u7ecf\u8fc7\u725b\u68da\u7684\u4e2a\u6570\u3002\u6ce8\u610f\u6211\u4eec\u5728\u7f29\u70b9\u4e4b\u540e\u7684\u8fde\u8fb9\u9700\u8981\u53cd\u5411\u3002\n\n\u5176\u5b9e\u8fd9\u9053\u9898\u4e5f\u6bd4\u8f83\u6c34\uff0c\u601d\u8def\u6bd4\u8f83\u660e\u7ec6\uff0c\u4ee3\u7801\u4e5f\u51e0\u4e4e\u662f\u6a21\u677f\uff0c\u5927\u5bb6\u5e94\u8be5\u4e5f\u80fd\u7528\u8fd9\u79cd~~\u5783\u573e~~\u65b9\u6cd5\u987a\u5229\u89e3\u51b3QWQ~~\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nconst int N=100012;\nqueue<int> q;\nint ti,dfn[N],low[N],stack[N],top,n,in[N];\nint edge,nex[N],head[N],vet[N],edge1,nex1[N],head1[N],vet1[N];\nint ans[N],belong[N],col;\ninline int read()\n{\n\tint x=0,f=1;char c=getchar();\n\twhile (c<'0'||c>'9') {if (c=='-') f=-1;c=getchar();}\n\twhile (c>='0'&&c<='9') x=x*10+c-48,c=getchar();\n\treturn x*f;\n}\ninline void addedge(int u,int v)\n{\n\tnex[++edge]=head[u];\n\thead[u]=edge;\n\tvet[edge]=v;\n}\ninline void dfs(int u)//\u7f29\u70b9\n{\n\tdfn[u]=low[u]=++ti;\n\tstack[++top]=u;\n\tint e,v;\n\tfor (e=head[u];v=vet[e],e;e=nex[e])\n\t{\n\t\tif (!dfn[v])\n\t\t{\n\t\t\tdfs(v);\n\t\t\tlow[u]=min(low[u],low[v]);\n\t\t}\n\t\telse if (!belong[v]) low[u]=min(low[u],dfn[v]);\n\t}\n\tif (dfn[u]==low[u])\n\t{\n\t\tbelong[u]=++col;\n\t\tans[col]++;\n\t\twhile (stack[top]!=u)\n\t\t{\n\t\t\tbelong[stack[top]]=col;\n\t\t\tans[col]++;\n\t\t\ttop--;\n\t\t}\n\t\ttop--;\n\t}\n}\ninline void addedge1(int u,int v)\n{\n\tnex1[++edge1]=head1[u];\n\thead1[u]=edge1;\n\tvet1[edge1]=v;\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor (int i=1; i<=n; i++)\n\taddedge(i,read());\n\tfor (int i=1; i<=n; i++)\n\tif (!belong[i]) dfs(i);\n\tfor (int i=1; i<=n; i++)\n\t{\n\t\tint e,v;\n\t\tfor (e=head[i];v=vet[e],e;e=nex[e])\n\t\tif (belong[i]!=belong[v])\n\t\t{\n\t\t\taddedge1(belong[v],belong[i]);//\u662f\u4ecev\u8fde\u5230i\n\t\t\tin[belong[i]]++;\n\t\t}\n\t}\n\tfor (int i=1; i<=col; i++)\n\tif (!in[i]) q.push(i);\n\tint u;\n\twhile (!q.empty())\n\t{\n\t\tint e,v,u=q.front();q.pop();\n\t\tfor (e=head1[u];v=vet1[e],e;e=nex1[e])\n\t\t{\n\t\t\tans[v]+=ans[u];\n\t\t\tin[v]--;\n\t\t\tif (!in[v]) q.push(v);\n\t\t}\n\t}\n\tfor (int i=1; i<=n; i++) \n    printf(\"%d\\n\",ans[belong[i]]);\n    //ans\u5b58\u50a8\u7684\u662f\u7f29\u70b9\u4e4b\u540e\u7684\u70b9\u4e2a\u6570\uff0c\u6240\u4ee5\u662fbelong[i]\n}\n```",
        "postTime": 1541060613,
        "uid": 43103,
        "name": "Tanktt",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2921 \u3010[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    },
    {
        "content": "\u5355\u7eaf\u89c9\u5f97\u4ee3\u7801\u597d\u770b\u800c\u5df2\n\n\u505a\u6cd5\u8ddfnoip2015\u90a3\u9053\u662f\u4e00\u56de\u4e8b\uff0c\u5904\u7406\u7b54\u6848\u6ce8\u610f\u4e0b\n\n\u7136\u540estack\u3002\u3002\u522b\u7528queue\u3002\u3002\u5c31\u884c\u4e86\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#include<stack>\nconst int N=100010;\nusing namespace std;\nint link[N],vis[N],ans[N],n,cnt;\nstack<int>Q;\nvoid Q_pop(int u)\n{\n\tint res=0;stack<int>P;\n\twhile(Q.top()!=u)P.push(Q.top()),Q.pop(),res++;\n\tP.push(Q.top()),Q.pop(),res++;\n\twhile(!P.empty())ans[P.top()]=res,P.pop();\n}\nvoid dfs(int u)\n{\n\tQ.push(u);\n\tvis[u]=cnt;\n\tif(!vis[link[u]])dfs(link[u]);\n\tif(!ans[link[u]] && vis[link[u]]==cnt){Q_pop(link[u]);return ;}\n\tif(!ans[u])ans[u]=ans[link[u]]+1;\n\treturn ;\n}\nvoid solve()\n{\n\tfor(int i=1;i<=n;i++)\n\tif(!vis[i])\n\t{\n\t\t++cnt;\n\t\tdfs(i);\n\t}\n\tfor(int i=1;i<=n;i++)printf(\"%d\\n\",ans[i]);\n}\nvoid In()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",&link[i]);\n}\nint main()\n{\n\tfreopen(\"in.txt\",\"r\",stdin);\n\tfreopen(\"out.txt\",\"w\",stdout);\n\tIn();solve();\n\tfclose(stdin);\n\tfclose(stdout);\n\treturn 0;\n}\n\n```",
        "postTime": 1532187208,
        "uid": 10035,
        "name": "vct170017",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2921 \u3010[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    },
    {
        "content": "\u6211\u4eec\u53ef\u4ee5\u7528\u6808\u6765\u7ef4\u62a4\n\n\u8d70\u4e00\u683c\u5c31\u8fdb\u6808\u4e00\u4e2a\uff0c\u5982\u679c\u4e0b\u4e00\u4e2a\u5728\u6808\u4e2d\u5c31\u51fa\u73b0\u4e86\u73af\uff0c\u800c\u4e14\u4e0d\u53ef\u80fd\u51fa\u73b0\u73af\u5957\u73af\uff08\u6bcf\u4e00\u4e2a\u70b9\u53ea\u6709\u4e00\u4e2a\u51fa\u5ea6\uff09\u90a3\u4e48\u5c31\u628a\u8fd9\u4e2a\u73af\u5168\u90e8\u51fa\u6808\uff0c\u7edf\u8ba1\u6570\u91cf\uff0c\u5e76\u6e05\u7a7a\u6808\uff0c\u6bcf\u4e00\u4e2a\u5143\u7d20\u7684\u6743\u503c\u662f\u5176\u540e\u7ee7\u52a0\u4e00\u3002\u5982\u679c\u4e0b\u4e00\u4e2a\u5143\u7d20\u4e0d\u5728\u6808\u4e2d\u4f46\u5df2\u7ecf\u8bbf\u95ee\u8fc7\uff0c\u90a3\u4e48\u5c31\u66f4\u65b0\u6743\u503c\uff08\u540e\u7ee7\u52a0\u4e00\uff09\u5e76\u6e05\u7a7a\u6808\u3002\n//\u4ee3\u7801\u989c\u503c\u8f83\u4f4e\uff0c\u5927\u5bb6\u7ed5\u4e00\u7ed5\u5c31\u77e5\u9053\u6570\u7ec4\u91cc\u9762\u662f\u4ec0\u4e48\u4e86\u563f\u563f\u563f\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nconst int maxn=1e5+10;\nint n;\nint nex[maxn];\nint s[maxn],l;\nint vis[maxn];\nint ans[maxn],fun[maxn],ansl;\nvoid fuck()\n{\n\tfor(register int i=1;i<=n;++i)\n\tif(!vis[i])\n\t{\n\t\ts[++l]=i;\n\t\twhile(l)\n\t\t{\n\t\t\tint u=s[l];\n\t\t\tif(!vis[nex[u]])\n\t\t\t{\n\t\t\t\tvis[s[l]]=1;\n\t\t\t\ts[++l]=nex[u];\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse if(vis[nex[u]]==1)\n\t\t\t{\n\t\t\t\tint t=nex[u];\n\t\t\t\t++ansl;\n\t\t\t\twhile(t!=s[l])\n\t\t\t\t{\n\t\t\t\t\tfun[s[l]]=ansl;\n\t\t\t\t\tvis[s[l]]=2;\n\t\t\t\t\t++ans[ansl];\n\t\t\t\t\t--l;\n\t\t\t\t}\n\t\t\t\tfun[t]=ansl;\n\t\t\t\t++ans[ansl];\n\t\t\t\tvis[t]=2;\n\t\t\t\t--l;\n\t\t\t\twhile(l)\n\t\t\t\t{\n\t\t\t\t\t++ansl;\n\t\t\t\t\tfun[s[l]]=ansl;\n\t\t\t\t\tvis[s[l]]=2;\n\t\t\t\t\tans[ansl]=1+ans[fun[nex[s[l]]]];\n\t\t\t\t\t--l;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(vis[nex[u]]==2)\n\t\t\t{\n\t\t\t\twhile(l)\n\t\t\t\t{\n\t\t\t\t\t++ansl;\n\t\t\t\t\tfun[s[l]]=ansl;\n\t\t\t\t\tvis[s[l]]=2;\n\t\t\t\t\tans[ansl]=1+ans[fun[nex[s[l]]]];\n\t\t\t\t\t--l;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(register int i=1;i<=n;++i)\n\t\tscanf(\"%d\",&nex[i]);\n\tfuck();\n\tfor(register int i=1;i<=n;++i)\n\t\tprintf(\"%d\\n\",ans[fun[i]]);\n\n\treturn 0;\n}\n\n\n```",
        "postTime": 1521721290,
        "uid": 20822,
        "name": "cn_lemon",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2921 \u3010[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    },
    {
        "content": "#\u6b64\u9898\u4e5f\u53ef\u4ee5\u7528tarjan\u7f29\u70b9#\n\n\u7531\u9898\u610f\u53ef\u5f97\u6bcf\u4e2a\u725b\u5230\u4e86\u4e00\u4e2a\u725b\u68da\u540e\u4e0b\u4e00\u4e2a\u53ea\u80fd\u53bb\u540e\u7ee7\u725b\u68da\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7528tarjan\u5148\u9884\u5904\u7406\u51fa\u6765\uff0c\u7136\u540e\u518d\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u7edf\u8ba1\u7b54\u6848\n\n**\u4e00\u5b9a\u8981\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\uff0c\u5426\u5219\u4f1a\u8d85\u65f66\u4e2a\u70b9**\n\n\u4ee3\u7801\u5982\u4e0b\u201c\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#include<algorithm>\nusing namespace std;\nconst int maxn=200005;\nint n,x,k=0,head[maxn],dfn[maxn],low[maxn],color_num=0,dfs_num=0;\nbool visit[maxn];int ans[maxn];\nint stack[maxn],top=0,val[maxn],head_new[maxn],color[maxn];\nstruct node\n{\n    int to,next;\n} edge[maxn<<1],edge_new[maxn<<1];\nvoid add(int u,int v)\n{\n    edge[++k].to=v;\n    edge[k].next=head[u];\n    head[u]=k;\n}\nvoid tarjan(int x)\n{\n    dfn[x]=low[x]=++dfs_num;\n    visit[x]=true;stack[++top]=x;\n    for(int i=head[x];i;i=edge[i].next)\n    {\n        if(!dfn[edge[i].to])\n        {\n            tarjan(edge[i].to);\n            low[x]=min(low[x],low[edge[i].to]);\n        }\n        else if(visit[edge[i].to]) low[x]=min(low[x],dfn[edge[i].to]);\n    }\n    if(low[x]==dfn[x])\n    {\n        visit[x]=false;color_num++;\n        while(stack[top+1]!=x)\n        {\n            val[color_num]++;\n            visit[stack[top]]=false;\n            color[stack[top]]=color_num;\n            top--;\n        }\n    }\n}\n\nvoid add_new(int u,int v)\n{\n    edge_new[++k].to=v;\n    edge_new[k].next=head_new[u];\n    head_new[u]=k;\n}\nvoid dfs(int x)\n{\n    if(ans[x]) return;\n    ans[x]+=val[x];\n    for(int i=head_new[x];i;i=edge_new[i].next)\n    {\n        dfs(edge_new[i].to);\n        ans[x]+=ans[edge_new[i].to];\n    }\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&x);\n        add(i,x);\n    }\n    k=0;\n    for(int i=1;i<=n;i++) if(!dfn[i]) tarjan(i);\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=head[i];j;j=edge[j].next)\n        {\n            if(color[i]!=color[edge[j].to])\n            {\n                add_new(color[i],color[edge[j].to]);\n            }\n        }\n    }\n    for(int i=1;i<=n;i++) dfs(color[i]);\n    for(int i=1;i<=n;i++) printf(\"%d\\n\",ans[color[i]]);\n    return 0;\n}\n```",
        "postTime": 1504005659,
        "uid": 26229,
        "name": "lemonaaaaa",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2921 \u3010[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    },
    {
        "content": "\u7531\u4e8e\u6bcf\u4e2a\u70b9\u6070\u6709\u4e00\u6761\u51fa\u5ea6\uff0c\u6240\u4ee5\u8fd9\u662f\u4e00\u7247\u57fa\u73af\u5185\u5411\u6811\u68ee\u6797\n\n>  \u57fa\u73af\u5185\u5411\u6811\uff1a\u4e00\u4e2a\u6070\u6709\u4e00\u4e2a\u73af\u4e14\u5176\u4ed6\u70b9\u90fd\u6307\u5411\u8be5\u73af\u7684\u8fde\u901a\u56fe\n\n\u663e\u7136\uff0c\u5bf9\u5176\u62d3\u6251\u6392\u5e8f\u540e\u5c31\u53ea\u5269\u4e0b\u73af\u4e86\uff08\u89c9\u5f97\u4e0d\u591f\u663e\u7136\u53ef\u4ee5\u79c1\u4fe1\u6211\uff09\uff0c\u7136\u540e\u6c42\u5269\u4f59\u7684\u73af\u7684\u957f\u5ea6\uff0c\u5bf9\u4e8e\u4e0d\u5728\u73af\u4e0a\u7684\u70b9\u8bb0\u641c\u5373\u53ef\n\n```cpp\n#include<cstdio>\n#include<vector>\n\ntypedef long long ll;\nll read()\n{\n    ll f=1,x=0;\n    char c;\n    do\n    {\n        c=getchar();\n        if(c=='-')f=-1;\n    }while(c<'0'||c>'9');\n    do\n    {\n        x=x*10+c-'0';\n        c=getchar();\n    }while(c>='0'&&c<='9');\n    return f*x;\n}\n\n#define maxn 100010\n#define INF (1ll<<58)\n\nll n;\nll v[maxn],din[maxn],f[maxn];//\u5230\u8fbe\u7684\u70b9\uff0c\u5165\u5ea6\uff0c\u6bcf\u4e2a\u70b9\u7684\u7b54\u6848\n\nll q[maxn],h=1,t=1;\nvoid topo()//\u62d3\u6251\u6392\u5e8f\n{\n    for(ll i=1;i<=n;++i)\n        if(!din[i])q[t++]=i;\n    while(h<t)\n    {\n        ll u=q[h++];\n        if(!--din[v[u]])q[t++]=v[u];\n    }\n}\n\nvoid calc(ll u)//\u6c42\u73af\u957f\n{\n    ll t=v[u],cnt=1;\n    while(t!=u)\n    {\n        t=v[t];\n        ++cnt;\n    }\n    f[u]=cnt;\n    t=v[u];\n    while(t!=u)\n    {\n        f[t]=cnt;\n        t=v[t];\n    }\n}\nll dfs(ll u)//\u5904\u7406\u4e0d\u5728\u73af\u4e0a\u7684\u70b9\n{\n    if(f[u])return f[u];\n    else return f[u]=dfs(v[u])+1;\n}\nint main()\n{\n    n=read();\n    for(ll i=1;i<=n;++i)\n    {\n        ll t=read();\n        v[i]=t;\n        ++din[t];\n    }\n    topo();\n    for(ll i=1;i<=n;++i)\n        if(din[i]&&!f[i])\n            calc(i);\n    for(ll i=1;i<=n;++i)\n        if(!din[i])\n            dfs(i);\n    for(ll i=1;i<=n;++i)\n        printf(\"%lld\\n\",f[i]);\n    return 0;\n}\n```",
        "postTime": 1551835977,
        "uid": 73142,
        "name": "\u4e07\u5f18",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2921 \u3010[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    },
    {
        "content": "#  \u9898\u89e3tarjan\uff1f\uff1f\uff1f\n\n### \u8fd9\u9898\u76f4\u63a5\u5c31\u8bb0\u5fc6\u5316dfs\u561b\n\n### \u89c2\u5bdf\u53ef\u4ee5\u53d1\u73b0\uff0c\u4e0d\u5b58\u5728\u73af\u5957\u73af\n\n### \u90a3\u5c31\u975e\u5e38\u7b80\u5355\u4e86\u554a\u5c31\u6709\u4e00\u4e2a\u624b\u52a8\u6808\u6765\u505a\u73af\u5c31\u597d\u4e86\uff0c\u9047\u5230\u6808\u91cc\u51fa\u73b0\u7684\u5c31\u628a\u8fd9\u4f4d\u5230\u6808\u9876\u7684\u5168\u51fa\u6765\u8ba1\u5165size\u7136\u540e\u8ba1\u5165ans\u6570\u7ec4\n\n### \u7136\u540e\u6211\u4ee3\u7801\u91cc\u9762\u90a3\u4e2a\u5bf9k\u53d6\u8d1f\u6570\u5c31\u662f\u8bb0\u5f55\u524d\u9762\u662f\u56e0\u4e3a\u8bb0\u5fc6\u5316\u7684\u7b54\u6848\u8fd8\u662f\u56e0\u4e3a\u9047\u73af\u8df3\u51fa\n\n\n\n\n    \n```cpp\n#include<iostream>\nusing namespace std;\nint sta[100004],l;\nint temp[100005],tl;\nint b[100005];\nint n;\nint _next[100005];\nint ans[100005];\nint dfs(int);\nint main()\n{\n    cin>>n; \n    for (int i=1;i<=n;i++) cin>>_next[i];\n    for (int i=1;i<=n;i++)\n        {\n            if (b[i]==0)\n               {\n                     dfs(i);\n               }\n        }\n    for (int i=1;i<=n;i++) cout<<ans[i]<<endl;\n}\nint dfs(int k)\n{\n    if (ans[k]!=0) return ans[k];//\u8bb0\u5fc6\u5316\n    if (b[k]==1) return -1*k;//\u9047\u73af\n    sta[++l]=k;//\u624b\u52a8\u6808\n    b[k]=1;\n    int sp=dfs(_next[k]);\n    int size=0;\n    if (sp<0) \n       {\n            if (-1*sp!=k) return sp;\n            if (-1*sp==k)\n               {\n                   while (sta[l]!=k)\n                      {\n                           temp[++tl]=sta[l];\n                           l--;\n                           size++;\n                   }\n                //cout<<k<<\" \"<<size<<endl;\n                temp[++tl]=sta[l];\n                l--;\n                size++;\n                for (int i=1;i<=tl;i++) ans[temp[i]]=size;\n                tl=0;\n            }\n        return size;//\u8bb0\u5f55size\u5f55\u8fdbans\u7b54\u6848\u6570\u7ec4\n       }\n    if (sp>=0) return ans[k]=sp+1;//\u5982\u679c\u662f\u56e0\u4e3a\u627e\u5230\u7b54\u6848\u5219\u76f4\u63a5\u8fd4\u56de\n}\n```",
        "postTime": 1514354453,
        "uid": 14904,
        "name": "smzzl",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2921 \u3010[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    },
    {
        "content": "\u5982\u679c\u8fd9\u4e2a\u70b9\u5728\u73af\u4e2d\u7684\u8bdd\uff0c\u90a3\u4e48\u5bf9\u4e8e\u8fd9\u4e2a\u70b9\u7684\u7b54\u6848\u5c31\u662f\u6362\u7684\u5927\u5c0f\n(**~~\u663e\u800c\u6613\u89c1~~**)\n\n\u5982\u679c\u8fd9\u4e2a\u70b9\u4e0d\u5728\u73af\u4e2d\u7684\u8bdd\uff0c\u90a3\u4e48\u5bf9\u4e8e\u8fd9\u4e2a\u70b9\u7684\u7b54\u6848\u5c31\u662f\u5b83\u5230\u73af\u7684\u8ddd\u79bb\u518d\u52a0\u4e0a\u8be5\u6362\u7684\u5927\u5c0f\uff08\u53ef\u4ee5\u8bc1\u660e\u8fd9\u6837\u7684\u70b9\u6700\u591a\u53ea\u80fd\u5230\u8fbe\u5f97\u4e86\u4e00\u4e2a\u73af\uff09\n\n\uff08\u7684\u786e\u548c\u697c\u4e0a\u90a3\u4f4d\u5927\u4f6c\u7684\u60f3\u6cd5\u5dee\u4e0d\u591a\uff0c~~\u4f46\u5b9e\u73b0\u7684\u5c31\u4e0d\u4e00\u6837\u4e86~~\uff09\n\n\u5177\u4f53\u7ec6\u8282\u53ef\u4ee5\u770b\u7a0b\u5e8f\n\n\u5982\u679c\u8fd8\u6709\u7591\u95ee\u6216\u60f3hack\u7684\u5f53\u7136\u6b22(**ju**)\u8fce(**jue**)\n```cpp\n#include<bits/stdc++.h>\n#define rep(i,j,k) for(int i=j;i<=k;i++)\nusing namespace std;\nint ans[100010];\n\nstruct wzy{\n    int nxt,vertice;\n}edge[100010];\nint head[100010];int len=0;\nvoid add_edge(int x,int y){\n    edge[++len].nxt=head[x];edge[len].vertice=y;\n    head[x]=len;return;\n}\n\nint temp=0;int tempx=0;\nqueue<int>v;\nbool vis[100010];\nvoid dfs(int x){\n    vis[x]=1;\n    for(int i=head[x];i;i=edge[i].nxt){\n        int nop=edge[i].vertice;\n        if(nop==x){ans[nop]=1;continue;}\n        if(ans[nop]){ans[x]=ans[nop]+1;continue;}\n        if(vis[nop]){\n            temp=1;tempx=nop;v.push(tempx);\n            return;\n        }\n        dfs(nop);\n        if(tempx){temp++;v.push(nop);}\n        if(tempx==x){\n            while(!v.empty()){\n                ans[v.front()]=temp;v.pop();\n            }   \n            tempx=0;temp=0;\n            continue;\n        }\n        if(!ans[x])ans[x]=ans[nop]+1;\n    }\n    vis[x]=0;\n    return;\n}\nint main(){\n    int n;scanf(\"%d\",&n);\n    rep(i,1,n){\n        int x;scanf(\"%d\",&x);\n        add_edge(i,x); \n    }\n\n    rep(i,1,n){\n        if(!ans[i])dfs(i);\n    }\n\n    rep(i,1,n){\n        printf(\"%d\\n\",ans[i]);\n    }\n    return 0;\n}\n```",
        "postTime": 1535257846,
        "uid": 51128,
        "name": "ZGS_WZY",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2921 \u3010[USACO08DEC]\u5728\u519c\u573a\u4e07\u5723\u8282Trick or Treat on the Farm\u3011"
    }
]