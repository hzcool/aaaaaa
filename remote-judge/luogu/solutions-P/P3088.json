[
    {
        "content": "\u697c\u4e0bSTL\u7684nlogn\u505a\u6cd5\u4e5f\u5f88\u5de7\u5999\u554a\n\n\u8fd9\u91cc\u8bf4\u4e00\u4e0bO(n)\u7684\u5355\u8c03\u961f\u5217\u505a\u6cd5\n\n\u9996\u5148\u6bcf\u4e2a\u5143\u7d20\u80af\u5b9a\u8981\u6309\u7167\u4f4d\u7f6e\u6392\u5e8f\uff0c\u7136\u540e\u4f9d\u6b21\u8fdb\u961f\uff0c\u5224\u65ad\u5982\u679c\u961f\u5c3e\u7684\u6570\u5927\u5c0f\u5c0f\u4e8e\u8981\u8fdb\u961f\u7684\u6570\uff0c\u90a3\u5c31\u628a\u961f\u5c3e\u5f39\u51fa\uff0c\u76f4\u5230\u961f\u5c3e\u7684\u6570\u5927\u4e8e\u7b49\u4e8e\u8981\u8fdb\u961f\u7684\u6570\n\n\u8fd9\u662f\u4e3a\u4e86\u7ef4\u62a4\u5355\u8c03\u6027\n\n\u7136\u540e\u518d\u5224\u65ad\u5982\u679c\u961f\u5934\u7684\u6570\u4f4d\u7f6e\u7684\u5dee\u503c\u5927\u4e8ed\uff0c\u51fa\u961f\uff0c\u76f4\u5230\u5dee\u503c\u5c0f\u4e8ed\uff0c\u6b64\u65f6\u961f\u5934\u7684\u6570\u4e3a\u5355\u8c03\u961f\u5217\u5185\u7684\u5408\u6cd5\u6700\u5927\u503c\n\n\u56e0\u6b64\u53ea\u8981\u5c06\u8981\u8fdb\u961f\u7684\u6570\u4e0e\u76ee\u524d\u7684\u961f\u5934\u5143\u7d20\u6bd4\u8f83\u5373\u53ef\n\n\u8fd9\u6837\u7ef4\u62a4\u4e86\u524d\u9762\u7684\uff0c\u540e\u9762\u7684\u53cd\u4e00\u4e0b\u5c31\u597d\u4e86\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u56e0\u4e3a\u6bcf\u4e2a\u5143\u7d20\u6700\u591a\u8fdb\u961f\u51fa\u961f\u4e00\u6b21\uff0c\u6240\u4ee5\u662fO(n)\u7684\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct ppap{\n    int x,y;\n}a[100001];\nppap qq[100001];\nbool q[100001],h[100001];\ninline bool cmp(ppap a,ppap b){return a.x<b.x;}\nint main()\n{\n    int n,d;scanf(\"%d%d\",&n,&d);\n    for(int i=1;i<=n;i++)scanf(\"%d%d\",&a[i].x,&a[i].y);\n    sort(a+1,a+n+1,cmp);\n    int l=1,r=0;\n    for(int i=1;i<=n;i++){\n        while(l<=r&&qq[r].y<a[i].y)r--;\n        qq[++r]=a[i];\n        while(l<=r&&qq[l].x<a[i].x-d)l++;\n        if(qq[l].y>=a[i].y*2)q[i]=1;\n    }\n    memset(qq,0,sizeof qq);l=1;r=0;\n    for(int i=n;i;i--){\n        while(l<=r&&qq[r].y<a[i].y)r--;\n        qq[++r]=a[i];\n        while(l<=r&&qq[l].x>a[i].x+d)l++;\n        if(qq[l].y>=a[i].y*2)h[i]=1;\n    }\n    int ans=0;\n    for(int i=1;i<=n;i++)if(q[i]&&h[i])ans++;\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1492129293,
        "uid": 5716,
        "name": "jzqjzq",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3088 \u3010[USACO13NOV]\u6324\u5976\u725bCrowded Cows\u3011"
    },
    {
        "content": "#### Description\n\n> \u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $a_i$\uff0c\u6c42\u6709\u591a\u5c11\u4e2a\u4f4d\u7f6e\u6ee1\u8db3\u5de6\u8fb9\u548c\u53f3\u8fb9 $d$ \u4e2a\u6570\u4e2d **\u90fd** \u6709\u5927\u4e8e\u7b49\u4e8e $2 \\times a_i$ \u7684\u6570\u3002\n\n#### Solution\n\n~~\u8fd9\u9898\u6211\u4eec\u6559\u7ec3 10min AC\uff0c\u5e2e\u6211\u8c03\u8bd5\u7528\u4e86 1h\uff0c\u6559\u7ec3\u8bf4\u90fd\u8981\u75af\u4e86~~        \n~~\u4e8e\u662f\u6559\u7ec3\u8ba9\u6211\u5199\u4e00\u4e2a\u505a\u9898\u5fc3\u5f97\uff0c\u6211\u5c31\u6765\u987a\u4fbf\u5199\u4e00\u4e2a\u9898\u89e3\u529b~~\n\n\u4e00\u770b\u5230\u6240\u8c13\u957f\u5ea6\u4e3a $d$ \u7684\u533a\u95f4\uff0c\u90a3\u4e48\u80af\u5b9a\u5c31\u662f\u5355\u8c03\u961f\u5217\u4e86\u3002\n\n\u9898\u76ee\u6240\u8bf4\u7684\u5c31\u662f\u67e5\u627e\u4e00\u4e2a\u4f4d\u7f6e\u5de6\u8fb9\u548c\u53f3\u8fb9\u7684\u957f\u5ea6\u4e3a $d$ \u7684\u533a\u95f4\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8fd9\u4e48\u67e5\u8be2\u6700\u5927\u503c\uff0c\u5982\u679c\u6700\u5927\u503c\u6bd4 $2 \\times a_i$ \u5927\uff0c\u90a3\u4e48\u80af\u5b9a\u5c31\u5b58\u5728\u3002\n\n\u6ce8\u610f\uff0c\u9898\u76ee\u8bf4\u7684\u662f\u5de6\u53f3\u4e24\u8fb9\u7684\u533a\u95f4 **\u90fd** \u5b58\u5728\uff0c\u6240\u4ee5\u5de6\u53f3\u6211\u4eec\u90fd\u9700\u8981\u67e5\u8be2\u4e00\u904d\uff0c\u7136\u540e\u53d6\u4e00\u4e2a $\\rm and$\u3002\n\n\u5c0f\u7ec6\u8282\uff08\u4e5f\u5c31\u662f\u6559\u7ec3\u8ba9\u6211\u5199\u7684\u505a\u9898\u5fc3\u5f97\u90a3\u4e00\u90e8\u5206\uff09\uff1a\n\n- \u5728\u6700\u5f00\u59cb\u8981\u5148\u53cc\u5173\u952e\u8bcd\u5bf9 $x[i]$ \u6392\u5e8f\uff0c\u8fd9\u6837\u65b9\u4fbf\u4e4b\u540e\u8fdb\u884c\u8ddd\u79bb\u7279\u5224\u3002\n- \u7f3a\u5c11\u7684\u90e8\u5206\u4e0d\u8981\u7528 $0$ \u586b\u5145\uff0c\u53ef\u4ee5\u76f4\u63a5\u8ba1\u7b97\u8ddd\u79bb\uff0c\u5426\u5219\u53ef\u80fd\u4f1a TLE\u3002\n- \u8ba1\u7b97\u8ddd\u79bb\u7684\u65f6\u5019\u4ece\u5de6\u5230\u53f3\u8ba1\u7b97\u6709\u6ca1\u6709\u8d85\u51fa\u8303\u56f4\u662f $x[\\text{front}(ind)]<x[i]-d$\uff0c\u4ece\u53f3\u5230\u5de6\u8ba1\u7b97\u6709\u6ca1\u6709\u8d85\u51fa\u8303\u56f4\u662f $x[\\text{front}(ind)]>x[i]+d$\u3002\n- \u6ce8\u610f $2 \\times a_i$ \u8981\u548c\u6700\u540e\u5355\u8c03\u961f\u5217\u8dd1\u5b8c\u4e4b\u540e\u7684 $\\text{front}(q)$ \u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u5728\u8fc7\u7a0b\u4e2d\u6bd4\u8f83\u4f1a\u6709\u903b\u8f91\u9519\u8bef\u3002\n\n#### Code\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nstruct fjrtxdy {\n\tint x, h;\n} a[50086];\n\nbool fjrakioi (fjrtxdy fjr, fjrtxdy akioi) {\n\treturn fjr.x < akioi.x;\n}\n\ndeque <int> q;\ndeque <int> ind;\n\nbool ans1[50086];\nbool ans2[50086];\n\nint main () {\n\tint n, d;\n\tscanf(\"%d%d\", &n, &d);\n\tfor (int i = 1; i <= n; i++) scanf(\"%d%d\", &a[i].x, &a[i].h);\n\tsort(a + 1, a + n + 1, fjrakioi);\n\tint cnt = 0;\n   bool qwq = true;\n\tfor (int i = 1; i <= n; i++) {\n\t\twhile (!ind.empty() && a[ind.front()].x < a[i].x - d) {\n\t\t\tq.pop_front();\n\t\t\tind.pop_front();\n\t\t}\n        while (qwq) ;\n\t\twhile (!q.empty()) {\n\t\t\tint tmp = q.back();\n\t\t\tif (tmp <= a[i].h) {\n\t\t\t\tq.pop_back();\n\t\t\t\tind.pop_back();\n\t\t\t}\n\t\t\telse break;\n\t\t}\n\t\tq.push_back(a[i].h);\n\t\tind.push_back(i);\n\t\tif (q.front() >= a[i].h * 2) ans1[i] = true;\n\t}\n\tq.clear(), ind.clear();\n\tfor (int i = n; i >= 1; i--) {\n\t\twhile (!ind.empty() && a[ind.front()].x > a[i].x + d) {\n\t\t\tq.pop_front();\n\t\t\tind.pop_front();\n\t\t}\n\t\twhile (!q.empty()) {\n\t\t\tint tmp = q.back();\n\t\t\tif (tmp <= a[i].h) {\n\t\t\t\tq.pop_back();\n\t\t\t\tind.pop_back();\n\t\t\t}\n\t\t\telse break;\n\t\t}\n\t\tq.push_back(a[i].h);\n\t\tind.push_back(i);\n\t\tif (q.front() >= a[i].h * 2) ans2[i] = true;\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tif (ans1[i] && ans2[i])\n\t\t\tcnt++;\n\tprintf(\"%d\\n\", cnt);\n\treturn 0;\n}\n```",
        "postTime": 1606623972,
        "uid": 114914,
        "name": "\u4e00\u53ea\u4e66\u866b\u4ed4",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3088 \u3010[USACO13NOV]Crowded Cows S\u3011"
    },
    {
        "content": "\u4e00\u9053\u5355\u8c03\u961f\u5217\u9898 ~~\u7136\u800c\u6211WA\u4e863\u6b21 QAQ~~\n\n\u9996\u5148\u6211\u4eec\u5c06\u5976\u725b\u4eec\u6309X\u6392\u5e8f\u3002\u8003\u8651\u5976\u725bi\uff0c\u5982\u679c\u6240\u6709Xj\u2208[Xi-d\uff0cXi+d]\u7684\u5976\u725bj\uff0c\u5176\u4e2d\u6700\u5927\u7684Hj\uff1cHi\u00d72\uff0c\u90a3\u4e48\u663e\u7136\u5976\u725bi\u662f\u4e0d\u4f1a\u89c9\u5f97\u62e5\u6324\u7684\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u8003\u8651\u5982\u4f55\u6c42\u8fd9\u4e2a\u6700\u5927\u7684Hj\u3002\u6211\u4e00\u770b ~~\u54c7\u5149\u5934XD~~ \u8fd9\u73a9\u610f\u957f\u5f97\u771f\u50cf\u6ed1\u7a97iwi\uff01\u4e8e\u662f\u6211\u4eec\u8003\u8651\uff1a\u6b63\u8fd9\u505a\u4e00\u904d\uff0c\u5bf9\u6bcf\u4e2ai\u627e\u51faXj\u2208[Xi-d,Xi]\u7684\u6700\u5927Hj\uff1b\u7136\u540e\u518d\u5012\u7740\u505a\u4e00\u904d\uff0c\u5bf9\u6bcf\u4e2ai\u627e\u51faXj\u2208[Xi\uff0cXi+d]\u7684\u6700\u5927Hj\u3002\n\ncode\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nstruct Lin{\n    int x,h;\n}; \nLin data[50010];\nint n,d;\nint q[50010],l,r;\nbool cnt[50010];\ninline int cmp(const Lin &A,const Lin &B){\n    return A.x<B.x;\n}\nint main(){\n    scanf(\"%d%d\",&n,&d);\n    for (int i=1;i<=n;i++)\n        scanf(\"%d%d\",&data[i].x,&data[i].h);\n    sort(data+1,data+n+1,cmp);\n    l=r=0;\n    for (int i=1;i<=n;i++){\n        while (data[i].x-d>data[q[l]].x&&l<=r)\tl++;\n        if (data[q[l]].h>=(data[i].h<<1))\tcnt[i]=1;\n        while (data[i].h>data[q[r]].h&&l<=r)\tr--;\n        q[++r]=i;\n    }\n    int ans=0;\n    l=r=0;\n    memset(q,0,sizeof(q));\n    data[n+1].h=data[n+1].x=0;\n    for (int i=n;i>=1;i--){\n        while (data[i].x+d<data[q[l]].x&&l<=r)\tl++;\n        cnt[i]&=(data[q[l]].h>=(data[i].h<<1));\n        if (cnt[i]){\n        //\tcout<<i<<' ';\n            ans++;\n        }\n        while (data[i].h>data[q[r]].h&&l<=r)\tr--;\n        q[++r]=i;\n    }\n    cout<<ans<<endl;\n    return 20030109;//\u9632\u6284\u88ad\uff1a\u6302cp\u751f\u65e5:D\n}\n```",
        "postTime": 1533819106,
        "uid": 17540,
        "name": "yangzechenc",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3088 \u3010[USACO13NOV]\u6324\u5976\u725bCrowded Cows\u3011"
    },
    {
        "content": "[P3088](/problem/P3088)\n\n# \u5355\u8c03\u961f\u5217\n\n\u5148\u770b\u677f\u9898\uff1a[P1886](/problem/P1886)\n\n\u5355\u8c03\u961f\u5217\u7528\u961f\u5217\u5b9e\u73b0\uff0c\u6bcf\u6b21\u7a97\u53e3\u5411\u53f3\u6ed1\u52a8\u65f6\uff0c\u65b0\u8fdb\u6765\u7684\u5143\u7d20\u5c31\u5165\u961f\u3002\n\n\u6211\u4eec\u624b\u6a21\u4e00\u4e0b\u8fd9\u7ec4\u6570\u636e\uff08\u4ee5\u6700\u5927\u503c\u4e3a\u4f8b\uff09\uff1a\n\n```plain\n5 3\n3 5 4 2 1\n```\n\n\u5148\u5c06 $3$ \u5165\u961f\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/jjnu2hu9.png)\n\n\u518d\u5c06 $5$ \u5165\u961f\u3002\u8fd9\u65f6\u56e0\u4e3a $5$ \u6bd4 $3$ \u5927\uff0c\u800c\u4e14 $5$ \u540e\u8fdb\u6765\uff0c\u201c\u9000\u5f79\u201d\u5f97\u6bd4 $3$ \u665a\uff0c\u6240\u4ee5\u5728\u4e00\u5207\u60c5\u51b5\u4e0b\u90fd\u4e0d\u6bd4 $3$ \u5dee\uff0c**$3$ \u5df2\u7ecf\u6ca1\u7528\u4e86**\uff0c\u6240\u4ee5\u5f39\u51fa 3 \u518d\u5c06 5 \u5165\u961f\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/cj6t996h.png)\n\n\u63a5\u4e0b\u6765\u5c06 $4$ \u5165\u961f\u3002\u867d\u7136 $4$ \u6bd4 $5$ \u5c0f\uff0c\u4f46\u662f\u56e0\u4e3a\u540e\u8fdb\u6765\uff0c\u53ef\u80fd\u5728 $5$\u201c\u9000\u5f79\u201d\u4e4b\u540e\u80fd\u6210\u4e3a\u6700\u5927\u503c\uff0c\u6240\u4ee5\u5165\u961f\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/c3iywi73.png)\n\n\u518d\u5c06 $2$ \u5165\u961f\uff0c\u540c\u7406\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/73nbemc0.png)\n\n\u518d\u5c06 $1$ \u5165\u961f\uff0c\u6ce8\u610f\u8fd9\u65f6 $5$ \u5df2\u7ecf\u201c\u9000\u5f79\u201d\u4e86\uff0c\u6240\u4ee5\u5f39\u51fa\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/8j202xug.png)\n\n**\u6ce8\u610f\u5230\u6574\u4e2a\u8fc7\u7a0b\u4e2d\u6700\u5927\u503c\u90fd\u662f\u6700\u5de6\u8fb9\u7684\u503c\u3002**\n\n# \u672c\u9898\u601d\u8def\n\n\u8fd9\u9053\u9898\u4e2d\u5e76\u4e0d\u5173\u5fc3\u6709\u591a\u5c11\u4e2a\u8d85\u8fc7\u4e24\u500d\u9ad8\u5ea6\u7684\uff0c\u4e5f\u4e0d\u5173\u5fc3\u8d85\u8fc7\u591a\u5c11\uff0c\u6240\u4ee5\u60f3\u5230\u7ef4\u62a4\u533a\u57df\u5185\u6700\u9ad8\u7684\u725b\uff0c\u4e0e\u8fd9\u5934\u725b\u8eab\u9ad8\u7684\u4e24\u500d\u6bd4\u8f83\u3002\u53ef\u4ee5\u7528\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u3002\n\n\u4f46\u662f\u8fd9\u53ea\u80fd\u89e3\u51b3\u4e00\u5934\u725b\u5de6\u8fb9\u6709\u6ca1\u6709\u8db3\u591f\u9ad8\u7684\u725b\uff0c\u6240\u4ee5\u8fd8\u8981\u4ece\u53f3\u5230\u5de6\u518d\u6765\u4e00\u904d\u3002\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nstruct Cow{\n\tint x,h;\n\tbool operator<(Cow a){//\u4e3a\u4e86\u6392\u5e8f\n\t\treturn x<a.x;\n\t}\n}cow[50010];\nint n,d;\ndeque<Cow>dq;//\u5355\u8c03\u961f\u5217\u8981\u7528\u53cc\u7aef\u961f\u5217\nint pushleft(int x){\n\twhile(!dq.empty()&&dq.back().h<=cow[x].h)//\u7a7a\u4e86\u5c31\u4e0d\u80fd\u518d\u5f39\u4e86\n\t\tdq.pop_back();\n\tdq.push_back(cow[x]);\n\twhile(!dq.empty()&&dq.front().x+d<cow[x+1].x)//\u5224\u65ad\u662f\u5426\u201c\u9000\u5f79\u201d\uff0c\u6ce8\u610f\u521a\u538b\u5165\u7684\u725b\u4e5f\u53ef\u80fd\u9a6c\u4e0a\u201c\u9000\u5f79\u201d\uff0c\u6240\u4ee5\u8981\u5224\u7a7a\n\t\tdq.pop_front();\n\treturn dq.empty()?0:dq.front().h; //\u56e0\u4e3a\u4e0a\u8ff0\u539f\u56e0\uff0c\u5982\u679c\u7a7a\u4e86\u8fd4\u56de0\uff0c\u4fdd\u8bc1\u4e0d\u4f1a\u8ba9\u725b\u9519\u8bef\u5730\u611f\u5230\u62e5\u6324\n}\nint pushright(int x){\n\twhile(!dq.empty()&&dq.back().h<=cow[x].h)\n\t\tdq.pop_back();\n\tdq.push_back(cow[x]);\n\twhile(!dq.empty()&&dq.front().x-d>cow[x-1].x)\n\t\tdq.pop_front();\n\treturn dq.empty()?0:dq.front().h; \n}\nbool crowd[50010];//\u662f\u5426\u89c9\u5f97\u62e5\u6324\uff0ctrue\u8868\u793a\u5bbd\u655e\uff0cfalse\u8868\u793a\u62e5\u6324\nint main(){\n\tios::sync_with_stdio(false);\n\tcin>>n>>d;\n\tfor(int i=1;i<=n;i++)\n\t\tcin>>cow[i].x>>cow[i].h;\n\tsort(cow+1,cow+n+1);\n\tfor(int i=1;i<n;i++)\n\t\tif(pushleft(i)<2*cow[i+1].h)\n\t\t\tcrowd[i+1]=1;//\u5982\u679c\u4f4e\u4e8e2\u500d\u8eab\u9ad8\u5c31\u4e0d\u89c9\u5f97\u62e5\u6324\n\tdq.clear();//\u6ce8\u610f\u6e05\u7a7a\n\tfor(int i=n;i>1;i--)\n\t\tif(pushright(i)<2*cow[i-1].h)\n\t\t\tcrowd[i-1]=1;\n\tint ans=0;\n\tfor(int i=2;i<n;i++)//\u4e24\u7aef\u7684\u4e24\u5934\u725b\u4e0d\u53ef\u80fd\u89c9\u5f97\u62e5\u6324\n\t\tans+=int(!crowd[i]);\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1582026995,
        "uid": 178294,
        "name": "zhy137036",
        "ccfLevel": 9,
        "title": "\u5355\u8c03\u961f\u5217"
    },
    {
        "content": "## \u3010\u601d\u8def\u3011\n\u5355\u8c03\u961f\u5217    \n### \u3010\u9898\u76ee\u5206\u6790\u3011 \n\u6bcf\u4e00\u5934\u725b\u90fd\u6709\u4e24\u8fb9\u7684d\u957f\u5ea6\u7684\u7684\u533a\u95f4     \n\u53ea\u8981\u4e24\u8fb9\u7684\u533a\u95f4\u5185\u90fd\u6709\u5927\u4e8e\u7b49\u4e8e\u8fd9\u5934\u725b\u4e24\u500d\u8eab\u9ad8\u7684\u725b    \n\u90a3\u4ed6\u5c31\u4f1a\u89c9\u5f97\u62e5\u6324     \n\u6c42\u89c9\u5f97\u62e5\u6324\u7684\u725b\u7684\u6570\u91cf     \n\n### \u3010\u524d\u7f00\u601d\u60f3\u3011\n\u6709\u8eab\u9ad8\u81f3\u5c11\u662f\u5b83\u7684\u4e24\u500d\u7684\u5976\u725b\uff1f     \n\u8fd9\u5b8c\u5168\u53ef\u4ee5\u4e4b\u6bd4\u8f83\u6700\u9ad8\u7684\u90a3\u5934\u5976\u725b\u554a\uff1f    \n\u53ea\u8981\u6700\u9ad8\u7684\u6bd4\u4ed6\u7684\u4e24\u500d\u9ad8    \n\u90a3\u5c31\u81f3\u5c11\u662f\u6709\u7684\u4e86    \n\u5982\u679c\u6700\u9ad8\u7684\u4e0d\u5982\u4ed6\u7684\u4e24\u500d\u9ad8    \n\u90a3\u4e00\u5b9a\u6ca1\u6709\u6bd4\u4ed6\u4e24\u500d\u9ad8\u7684    \n\u6240\u4ee5\u6bd4\u8f83\u6700\u9ad8\u7684\u5c31\u53ef    \n\u533a\u95f4\u6700\u5927\u503c\uff1f     \n\u5f53\u7136\u662f\u5355\u8c03\u961f\u5217    \n\u4f46\u662f\u4e24\u4e2a\u533a\u95f4\uff1f    \n\u90a3\u5c31\u4e24\u4e2a\u5355\u8c03\u961f\u5217\uff01    \n\n### \u3010\u6700\u7ec8\u601d\u8def\u3011\n\u987a\u7740\u626b\u4e00\u904d\u5904\u7406\u51fa\u6bcf\u4e00\u4e2a\u70b9\u5de6\u8fb9\u533a\u95f4\u5185    \n\u6700\u9ad8\u7684\u90a3\u5934\u725b    \n\u5012\u7740\u626b\u4e00\u904d\u5904\u7406\u51fa\u6bcf\u4e00\u4e2a\u70b9\u53f3\u8fb9\u533a\u95f4\u5185    \n\u6700\u9ad8\u7684\u90a3\u5934\u725b   \n\uff08\u8fd9\u91cc\u533a\u95f4\u6307\u7684\u90fd\u662f\u5408\u6cd5\u533a\u95f4\u5373\u957f\u5ea6\u5c0f\u4e8e\u7b49\u4e8ed\u7684\u533a\u95f4\uff09       \n\u7136\u540e\u5728\u626b\u4e00\u904d\u6bcf\u4e00\u4e2a\u70b9    \n\u770b\u770b\u662f\u4e0d\u662f\u4e24\u500d\u90fd\u6709\u6bd4\u81ea\u5df1\u7684\u8eab\u9ad8\u9ad8\u4e24\u500d\u7684\u725b       \n\u5982\u679c\u6709\u90a3\u5c31\u8ba1\u6570    \n\u5982\u679c\u6ca1\u6709\u90a3\u5c31\u7ee7\u7eed      \n## \u3010\u5b8c\u6574\u4ee3\u7801\u3011\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<deque>\nusing namespace std;\nconst int Max = 50004;\nstruct node\n{\n\tint x;\n\tint h;\n}a[Max];\nbool cmp(const node x,const node y)\n{\n\treturn x.x < y.x;\n}\ndeque<node>q1,q2;\nint l[Max],r[Max];\nint main()\n{\n//\tfreopen(\"cow.in\",\"r\",stdin);\n\tint n,d;\n\tcin >> n >> d;\n\tfor(register int i = 1;i <= n;++ i)\n\t\tcin >> a[i].x >> a[i].h;\n\tsort(a + 1,a + 1 + n,cmp);\n\tfor(register int i = 1;i <= n;++ i)\n\t{\n\t\twhile(!q1.empty() && a[i].x - q1.front().x > d)\n\t\t\tq1.pop_front();\n\t\tif(!q1.empty())\n\t\t\tl[i] = q1.front().h;\n\t\telse\n\t\t\tl[i] = 0;\n\t\twhile(!q1.empty() && a[i].h > q1.back().h)\n\t\t\tq1.pop_back();\n\t\tq1.push_back(a[i]);\n\t}\n\tfor(register int i = n;i >= 1;i --)\n\t{\n\t\twhile(!q2.empty() && q2.front().x - a[i].x > d)\n\t\t\tq2.pop_front();\n\t\tif(!q2.empty())\n\t\t\tr[i] = q2.front().h;\n\t\telse\n\t\t\tr[i] = 0;\n\t\twhile(!q2.empty() && a[i].h > q2.back().h)\n\t\t\tq2.pop_back();\n\t\tq2.push_back(a[i]);\n\t}\n\tint js = 0;\n\tfor(register int i = 1;i <= n;++ i)\n\t\tif(l[i] >= a[i].h * 2 && r[i] >= a[i].h * 2)\n\t\t\tjs ++;\n\tcout << js << endl;\n\treturn 0;\n}\n```",
        "postTime": 1571271382,
        "uid": 186489,
        "name": "EarthGiao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3088 \u3010[USACO13NOV]\u6324\u5976\u725bCrowded Cows\u3011"
    },
    {
        "content": "~~\u8fd9\u662f\u4e00\u9053\u5355\u8c03\u961f\u5217\u7684\u9898\u76ee\uff0c\u4f46\u662fn\u624d\u4e94\u4e07\uff0c\u800c\u4e14\u6211\u61d2\u5f97\u5199\u79bb\u6563\u5316\uff0c\u7136\u540e\u6211\u5c31\u5199\u4e86\u4e2a\u5e73\u8861\u6811~~\n\n\u663e\u7136\u8fd9\u662f\u4e00\u4e2a\u4e8c\u7ef4\u504f\u5e8f\u95ee\u9898\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u5976\u725b$i$\uff0c\u5982\u679c\u5b83\u662f\u62e5\u6324\u7684\uff0c\u5219\u6709:\n\n$$max _{x[i]-d<=x[j]<x[i]} \\left \\{h[j] \\right \\}>=2h[i] \\ \\& \\ max _{x[i]<x[j]<=x[i]+d} \\left \\{h[j] \\right \\}>=2h[i]$$\n\n\u8fd9\u4e2a\u73a9\u610f\u663e\u7136\u53ef\u4ee5\u5355\u8c03\u961f\u5217\uff0c\u79bb\u6563\u5316+\u7ebf\u6bb5\u6811\uff0c\u7136\u540e\u6211\u5199\u4e86\u4e2a$Fhq Treap$\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\ntemplate<class type>inline const void read(type &in)\n{\n\tin=0;char ch=getchar();bool f=0;\n\twhile (ch<48||ch>57){if (ch=='-')f=1;ch=getchar();}\n\twhile (ch>47&&ch<58)in=(in<<3)+(in<<1)+(ch&15),ch=getchar();\n\tif (f)in=-in;\n}\ntemplate<class type>inline const void write(type out)\n{\n\tif (out>9)write(out/10);\n\tputchar(out%10+48);\n}\ntemplate<class type>inline const void writeln(type out)\n{\n\tif (out<0)putchar('-'),out=-out;\n\twrite(out);\n\tputchar('\\n');\n}\ntemplate<class type>inline const type max(const type &a,const type &b)\n{\n\treturn a>b?a:b;\n}\nconst int N=5e4+10;\nclass Fhq_Treap\n{\n\tprivate:\n\t\tstruct tree\n\t\t{\n\t\t\tint mx,key,val,priority;\n\t\t\ttree *lson,*rson;\n\t\t\tinline const void pushup()\n\t\t\t{\n\t\t\t\tmx=max(val,max(lson->mx,rson->mx));\n\t\t\t}\n\t\t}*root,memory_pool[N],*tail,*null;\n\t\tinline const void init()\n\t\t{\n\t\t\ttail=memory_pool;\n\t\t\tnull=tail++;\n\t\t\tnull->lson=null->rson=null;\n\t\t\troot=null;\n\t\t}\n\t\tinline tree *spawn(int key,int val)\n\t\t{\n\t\t\ttree *p=tail++;\n\t\t\tp->key=key;\n\t\t\tp->mx=p->val=val;\n\t\t\tp->priority=rand();\n\t\t\tp->lson=p->rson=null;\n\t\t\treturn p;\n\t\t}\n\t\tinline const void split(tree *p,int key,tree *&a,tree *&b)\n\t\t{\n\t\t\tif (p==null)return a=b=null,void();\n\t\t\tif (key<p->key)b=p,split(p->lson,key,a,b->lson);\n\t\t\telse a=p,split(p->rson,key,a->rson,b);\n\t\t\tp->pushup();\n\t\t}\n\t\tinline tree *merge(tree *a,tree *b)\n\t\t{\n\t\t\tif (a==null&&b==null)return null;\n\t\t\tif (a==null)return b;\n\t\t\tif (b==null)return a;\n\t\t\tif (a->priority<b->priority)return a->rson=merge(a->rson,b),a->pushup(),a;\n\t\t\treturn b->lson=merge(a,b->lson),b->pushup(),b;\n\t\t}\n\tpublic:\n\t\tinline Fhq_Treap(){init();}\n\t\tinline const void insert(int key,int val)\n\t\t{\n\t\t\ttree *a,*b;\n\t\t\tsplit(root,key,a,b);\n\t\t\troot=merge(a,merge(spawn(key,val),b));\n\t\t}\n\t\tinline const int query(int l,int r)\n\t\t{\n\t\t\ttree *a,*b,*c;\n\t\t\tsplit(root,r,a,b);\n\t\t\tsplit(a,l-1,a,c);\n\t\t\tint mx=c->mx;\n\t\t\troot=merge(a,merge(c,b));\n\t\t\treturn mx;\n\t\t}\n}fhq;\nint n,d,h[N],x[N],ans;\nint main()\n{\n\tread(n);read(d);\n\tfor (int i=1;i<=n;i++)read(x[i]),read(h[i]),fhq.insert(x[i],h[i]);\n\tfor (int i=1;i<=n;i++)\n\tans+=fhq.query(x[i]-d,x[i]-1)>=h[i]*2&&fhq.query(x[i]+1,x[i]+d)>=h[i]*2;\n\twriteln(ans);\n\treturn 0;\n}\n```",
        "postTime": 1570974760,
        "uid": 14374,
        "name": "zhengrunzhe",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3088 \u3010[USACO13NOV]\u6324\u5976\u725bCrowded Cows\u3011"
    },
    {
        "content": "### \u4f5c\u4e3a\u6700\u4f18\u89e3\u6211\u6765\u53d1\u4e2a\u9898\u89e3\n\n### \u5355\u8c03\u961f\u5217\u4e0d\u662fO(n)\u7684\u5417?\u52a0\u4e0a\u6392\u5e8f\u5e94\u8be5\u4e5f\u5f88\u5feb\u554a\n\n### \u4f46\u662f\u7ebf\u6bb5\u6811\u4e5f\u4e0d\u6162\uff0c\u50cf\u6211\u5c31\u8f7b\u8f7b\u677e\u677e\u62ff\u4e86\u4e2ark1\n\n### \u4e0d\u8fc7\u697c\u9876\u90a3\u7bc7\u9898\u89e3\u8dd1\u7684\u597d\u5feb\u554a\uff0c62ms\u53c8\u7834\u4e86\u6211\u7eaa\u5f55\n\n\u95f2\u8bdd\u5c11\u53d9\uff0c\u8fdb\u5165\u6b63\u9898\n\n\n------------\n\u7ebf\u6bb5\u6811\u4f5c\u4e3a\u6700\u4f18\u7684\u4e00\u79cd\u53ef\u4ee5\u52a8\u6001\u7684\u8bbf\u95ee\u533a\u95f4\u6700\u503c\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6bd4\u6811\u72b6\u6570\u7ec4\u66f4\u5feb\uff0c\u6bd4Spare Table\u4f7f\u7528\u66f4\u5e7f\u6cdb\uff08\u5e26\u4fee\uff09\uff0c\u6bd4\u5355\u8c03\u961f\u5217\u66f4\u5177\u6709\u968f\u673a\u8bbf\u95ee\u6027\u8d28\uff0c\u4e0d\u9700\u8981\u6ed1\u52a8\u7a97\u53e3\u8fd9\u6837\u8be2\u95ee\u6709\u4e00\u5b9a\u89c4\u5f8b\u3002\n\n\u7ebf\u6bb5\u6811\u7edd\u5bf9\u662f\u6700\u5f3a\u529b\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6743\u503c\u7ebf\u6bb5\u6811\u53ef\u4ee5\u540a\u6253\u5e73\u8861\u6811\uff0c\u51fd\u6570\u5f0f\u7ebf\u6bb5\u6811/\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u53ef\u4ee5\u78be\u538b\u6811\u72b6\u6570\u7ec4\u5957\u5e73\u8861\u6811\uff08\u5c11\u81f3\u5c11\u4e00\u4e2alog\uff09,\u6781\u7aef\u7684\uff0c\u66ff\u7f6a\u7f8a\u6811\u5957\u6743\u503c\u7ebf\u6bb5\u6811\u53ef\u4ee5\u7206\u9524\u5757\u72b6\u94fe\u8868\u5957\u6743\u503c\u5757\u72b6\u6570\u7ec4\uff08$nlog\u00b2n < n\u221an$\uff09\n\n\u6b64\u9898\u7684\u6570\u636e\u89c4\u6a21\u8f83\u5927\uff0c\u66b4\u529b\u80af\u5b9a\u6b7b\u7fd8\u7fd8\uff0c\u5361\u8fc7\u53bb\u7684\u662f\u795e\u4ed9\u3002\n\n```\nx(i)\u592a\u5927\uff0c\u53c8\u4e0d\u597d\u79bb\u6563\u5316\uff0c\u6211\u4eec\u8003\u8651\u7528lower_bound/\nupper_bound\u6765\u5b9a\u4f4d\u533a\u95f4\u7aef\u70b9\u3002\n\n\u4e0d\u8fc7\u8981\u5148\u6392\u4e2a\u5e8f\uff0c\u628a\u8282\u70b9\u7b80\u5355\u7528\u6570\u7ec4\u4e0b\u6807\u79bb\u6563\u4e00\u4e0b\uff0c\u628a\u7ebf\u6bb5\u6811\u7684\u4f4d\u7f6e\u5b9a\u597d\uff0c\u7136\u540e\u5355\u70b9\u4fee\u6539\u6216\u6574\u4f53\u5efa\u6811\u3002\n\n\u67e5\u8be2i\u65f6\u627eh[i]-D~h[i]+D\u533a\u95f4\uff0c\u4e8c\u5206\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u627e\u5230\u533a\u95f4\u540e\u627e\u4e00\u4e2a\u6700\u5927\u503cS\uff08\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff09\u3002\n\n\u5982\u679cS>=h[i]*2,\u5219ans++\u3002\n\n\u6700\u540e\u8f93\u51faans\u3002\n```\n\u559c\u95fb\u4e50\u89c1\u7684\u4ee3\u7801\u3002\n\n\u5f88\u591a\u5730\u65b9\u662f\u53ef\u4ee5\u4f18\u5316\u7684\uff08\u6211\u592a\u61d2\u4e86\u4e0d\u60f3\u518d\u4f18\u5316\uff09\uff0c\u5927\u5bb6\u8bd5\u8bd5\u80fd\u4e0d\u80fd\u5361\u5361\u5e38\u7834\u7eaa\u5f55\u3002\n\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nvoid read(int &x){\n\tchar c=getchar();\n\tint k=1;\n\twhile(c<'0'||c>'9') {if(c=='-') k=-1;c=getchar();}\n\tfor(x=0;c>='0'&&c<='9';c=getchar())\n\tx=x*10+c-'0';\n\tx*=k;\n}\nconst int N=200005;\nint n,p,q,m,k,y,x,s,ans,c,mx,d,b[N];\nstruct fox{\n\tint wei,high;\n}a[N*4];\nbool operator<(fox x,fox y){\n\treturn x.wei<y.wei;\n}\nint tree[N];\ninline void change(int k,int l,int r,int x,int y){\n\tif(l>x||r<x) return;\n\tif(l==x&&l==r){\n\t\ttree[k]=y;\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tchange(k<<1,l,mid,x,y);\n\tchange(k<<1|1,mid+1,r,x,y);\n\ttree[k]=max(tree[k<<1],tree[k<<1|1]);\n}\ninline int query(int k,int l,int r,int x,int y){\n\tif(l>r) return 0;\n\tif(l>y||r<x) return 0;\n\tif(x<=l&&r<=y) return tree[k];\n\tint mid=l+r>>1,s=query(k<<1,l,mid,x,y);\n\ts=max(query(k<<1|1,mid+1,r,x,y),s);\n\treturn s;\n}\nint main(){\n\tread(n);read(m);\n\tfor(register int i=1;i<=n;i++){\n\t\tread(a[i].wei);read(a[i].high);\n\t}\n\tsort(a+1,a+n+1);\n\tfor(register int i=1;i<=n;++i){\n\t\tchange(1,1,n,i,a[i].high);\n\t\tb[i]=a[i].wei;\n\t}\n\tfor(register int i=1;i<=n;i++){\n\t\tp=q=b[i];\n\t\tp-=m;p=max(p,0);\n\t\tq+=m;\n\t\tk=lower_bound(b+1,b+n+1,p)-b;\n\t\tc=upper_bound(b+1,b+n+1,q)-b-1;//-1\u5f88\u91cd\u8981\n\t\ts=query(1,1,n,k,i);d=query(1,1,n,i,c);\n\t\tif(min(s,d)>=a[i].high*2){\n\t\t\tans++;\n\t\t}\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1601963635,
        "uid": 226523,
        "name": "RAYMOND_7",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3088 \u3010[USACO13NOV]Crowded Cows S\u3011"
    },
    {
        "content": "\u8fd9\u9898\u6211\u7684\u60f3\u6cd5\u662f $RMQ$ \u3002 $RMQ$ \u5237\u533a\u95f4\u5185\u7684\u6700\u5927\u503c\u561b\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u53ea\u8981\u5de6\u8fb9\u7684\u533a\u95f4\u7684\u6700\u5927\u503c\u5927\u4e8e\u81ea\u8eab\uff0c\u90a3\u5c31\u628a\u5de6\u8fb9\u533a\u95f4\u7684\u5de6\u8fb9\u754c\u5f80\u53f3\u62f1\u4e00\u62f1\uff0c\u62f1\u7684\u8fc7\u7a0b\u7528\u4e8c\u5206 $\\log_2(n)$ \u7684\u65f6\u6548\u6765\u5b9e\u73b0\uff0c\u53f3\u8fb9\u7684\u533a\u95f4\u505a\u6cd5\u548c\u5de6\u8fb9\u4e00\u6837\u554a\uff0c\u533a\u95f4\u8d8a\u5c0f\u8d8a\u597d\u561b\uff0c\u7136\u540e\u5982\u679c\u5de6\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u5230\u81ea\u8eab\u7684\u8ddd\u79bb\u5c0f\u4e8e\u7b49\u4e8e $k$ \uff0c\u53f3\u533a\u95f4\u7684\u53f3\u7aef\u70b9\u5230\u81ea\u8eab\u7684\u8ddd\u79bb\u4e5f\u5c0f\u4e8e $k$\uff0c$ans$ \u5c31\u52a0\u52a0\uff0c\u6700\u540e\u8f93\u51fa $ans$ \u5c31ok\u4e86\u3002\n\nCode:\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct ZS{\n\tint x,h;\n\tbool operator <(const ZS b)const{return x<b.x;}\n}a[50005];\nint n,d,ans;\nint b[50005][20];\nint find(int x){\n\tint L=1,R=x,mid,cnt=1<<30;\n\twhile(L<=R){\n\t\tmid=(R-L>>1)+L;\n\t\tif(a[mid].x>=a[x].x-d)cnt=min(cnt,mid),R=mid-1;\n\t\telse L=mid+1;\n\t}\n\treturn cnt;\n}\nint find_(int x){\n\tint L=x,R=n,mid,cnt=0;\n\twhile(L<=R){\n\t\tmid=(R-L>>1)+L;\n\t\tif(a[mid].x<=a[x].x+d)cnt=max(cnt,mid),L=mid+1;\n\t\telse R=mid-1;\n\t}\n\treturn cnt;\n}\ninline int read(){\n\tint ret=0,f=1;char ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-')f=-f;ch=getchar();}\n\twhile(isdigit(ch)){ret=ret*10+ch-'0';ch=getchar();}\n\treturn ret*f;\n}\nint main(){\n\tn=read();d=read();\n\tfor(int i=1;i<=n;i++)a[i].x=read(),a[i].h=read();\n\tsort(a+1,a+1+n);\n\tfor(int i=1;i<=n;i++)b[i][0]=a[i].h;\n\tfor(int j=1;j<=18;j++)\n\t\tfor(int i=1;i<=n;i++)if(i+(1<<j-1)<=n)b[i][j]=max(b[i][j-1],b[i+(1<<j-1)][j-1]);\n\tfor(int i=1;i<=n;i++){\n\t\tint l=find(i),r=find_(i);\n\t\tint x=log2(i-l+1),y=log2(r-i+1);\n\t\tint L=max(b[l][x],b[i-(1<<x)+1][x]),R=max(b[i][y],b[r-(1<<y)+1][y]);\n\t\tif(L>=2*a[i].h&&R>=2*a[i].h)ans++;\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1597492624,
        "uid": 188879,
        "name": "VioletIsMyLove",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3088 \u3010[USACO13NOV]Crowded Cows S\u3011"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3088)\n\n\n[\u66f4~~\u574f~~\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.luogu.com.cn/blog/305532/post-ti-xie-p3088-post)\n\n**\u601d\u8def**\n\n> \u5f53\u4e00\u5934\u5976\u725b\u5de6\u8fb9D\u8ddd\u79bb\u5185\u800c\u4e14\u53f3\u8fb9D\u8ddd\u79bb\u5185\u6709\u8eab\u9ad8\u81f3\u5c11\u662f\u5b83\u7684\u4e24\u500d\u7684\u5976\u725b\n\n\u4e0d\u96be\u60f3\u5230\u4f7f\u7528**\u5355\u8c03\u961f\u5217**\uff08\u673a\u623f\u5927\u4f6c~~Canstant0x5F3759DF~~\u4f7f\u7528\u7684\u7ebf\u6bb5\u6811\u6211\u662f\u4e0d\u4f1a\uff09\n\n\u4ece\u5de6\u5230\u53f3\u3001\u4ece\u53f3\u5230\u5de6\u5404\u626b\u4e00\u904d\u5373\u53ef\u3002\n\n**\u4ee3\u7801**\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <queue>\n#include <algorithm>\n#define int long long\nusing namespace std;\n\nconst int MAXN = 5e4 + 5;\n\nint n, d, cnt;\nbool ans1[MAXN], ans2[MAXN];\ndeque<int> q;\n\nstruct cow\n{\n\tint x, h;\n\tbool operator <(const cow &p)const\n\t{\n\t\treturn x < p.x;\n\t}\n}a[MAXN];\n\nsigned main()\n{\n\tscanf(\"%lld%lld\", &n, &d);\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tscanf(\"%lld%lld\", &a[i].x, &a[i].h);\n\t}\n\tsort(a + 1, a + n + 1);\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\twhile (!q.empty() && a[q.back()].h < a[i].h)\n\t\t{\n\t\t\tq.pop_back();\n\t\t}\n\t\twhile (!q.empty() && a[i].x - a[q.front()].x > d)\n\t\t{\n\t\t\tq.pop_front();\n\t\t}\n\t\tq.push_back(i);\n\t\tif (a[q.front()].h >= (a[i].h << 1)) //\u7b49\u4ef7\u4e8ea[i].h * 2\n\t\t{\n\t\t\tans1[i] = true;\n\t\t}\n\t}\n\tq.clear();\n\tfor (int i = n; i; i--)\n\t{\n\t\twhile (!q.empty() && a[q.back()].h < a[i].h)\n\t\t{\n\t\t\tq.pop_back();\n\t\t}\n\t\twhile (!q.empty() && a[q.front()].x - a[i].x > d)\n\t\t{\n\t\t\tq.pop_front();\n\t\t}\n\t\tq.push_back(i);\n\t\tif (a[q.front()].h >= (a[i].h << 1))\n\t\t{\n\t\t\tans2[i] = true;\n\t\t}\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tif (ans1[i] && ans2[i]) //\u5982\u679c\u4e24\u4e2a\u540c\u65f6\u6ee1\u8db3\n\t\t{\n\t\t\tcnt++;\n\t\t}\n\t}\n\tprintf(\"%lld\", cnt);\n\treturn 0;\n}\n```\n",
        "postTime": 1620126098,
        "uid": 305532,
        "name": "mango09",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011P3088"
    },
    {
        "content": "\u8fd9\u9898\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811 $+$ \u4e8c\u5206\u89e3\u51b3\n\n\u9996\u5148\uff0c\u65e2\u7136\u662f\u5de6\u8fb9 $D$ \u8ddd\u79bb\u4e0e\u53f3\u8fb9 $D$ \u8ddd\u79bb\u4e4b\u5185\uff0c\u5c31\u53ef\u4ee5\u4e8c\u5206\u5de6\u8fb9 $D$ \u8ddd\u79bb\u7684\u4e0b\u6807\u4e0e\u53f3\u8fb9 $D$ \u8ddd\u79bb\u7684\u4e0b\u6807\uff0c\u7136\u540e\u67e5\u8be2\u7ebf\u6bb5\u6811\u4e2d\u7684\u6700\u5927\u503c\uff0c\u5224\u65ad\u662f\u4e0d\u662f**\u5927\u4e8e\u7b49\u4e8e** $2$ \u500d\u7684\u9ad8\u5ea6\u5373\u53ef\u3002\n\n\u4e8c\u5206\u4e00\u5b9a\u8981\u6ce8\u610f\u8fb9\u754c\uff0c\u540c\u65f6\u4e0d\u80fd\u76f4\u63a5\u7528\u4e24\u4e2a `lower_bound` \u5bfb\u627e\u4e0b\u6807\uff0c\u9664\u975e\u6392\u5e8f\u4e24\u8d9f\uff0c\u4e00\u8d9f\u6b63\u7740\u6392\u4e00\u8d9f\u53cd\u7740\u6392\u3002\n\n\u7ebf\u6bb5\u6811\u6ce8\u610f\u662f\u53d6**\u6700\u5927\u503c**\u800c\u4e0d\u662f\u6700\u5c0f\u503c\u3002\n\n\u6700\u540e\u653e\u4e0a~~\u96be\u5f97\u7684 \u4ebf--\u904dA\u7684~~\u4ee3\u7801:\n\n```cpp\n#include<stdio.h>\n#include<algorithm>\nusing namespace std;\nstruct Node{\n\tint l,r;\n\tint data;\n\tNode *ls,*rs;\n\tvoid PushUp(){data=max(ls?ls->data:0x7f7f7f7f,rs?rs->data:0x7f7f7f7f);}\n};\nNode A[200001];\nstruct QYB_AK_IOI{\n\tint X,H;\n}cs[50001];\nbool cmp(QYB_AK_IOI a,QYB_AK_IOI b){return a.X<b.X;}\nbool cmp1(QYB_AK_IOI a,QYB_AK_IOI b){return a.X>b.X;}\nbool cmp2(QYB_AK_IOI a,QYB_AK_IOI b){return a.X<b.X;}\nint N,D;\nvoid BuildT(int id,int l,int r){\n\tA[id].l=l;\n\tA[id].r=r;\n\tif(l==r){\n\t\tA[id].data=cs[l].H;\n\t\treturn;\n\t}\n\tA[id].ls=A+(id<<1);\n\tA[id].rs=A+(id<<1|1);\n\tint mid=(l+r)>>1;\n\tBuildT(id<<1,l,mid);\n\tBuildT(id<<1|1,mid+1,r);\n\tA[id].PushUp();\n}\nint Query(int id,int l,int r){\n\tif(A[id].l==l&&A[id].r==r)return A[id].data;\n\tint mid=(A[id].l+A[id].r)>>1;\n\tif(r<=mid)return Query(id<<1,l,r);\n\telse if(mid<l)return Query(id<<1|1,l,r);\n\telse return max(Query(id<<1,l,mid),Query(id<<1|1,mid+1,r));\n}\nint main(){\n\tscanf(\"%d%d\",&N,&D);\n\tfor(int i=1;i<=N;++i)\n\t\tscanf(\"%d%d\",&cs[i].X,&cs[i].H);\n\tsort(cs+1,cs+N+1,cmp);\n\tBuildT(1,1,N);\n\tint pre,nxt;\n\tint ans=0;\n\tint l,r,mid;\n\tfor(int i=2;i<N;++i){\n\t\tl=1;r=N;mid=(l+r)>>1;\n\t\twhile(l<r){\n\t\t\tif(cs[mid].X<cs[i].X-D)l=mid+1;\n\t\t\telse r=mid;\n\t\t\tmid=(l+r)>>1;\n\t\t}\n\t\tpre=l;\n\t\tl=1;r=N;mid=(l+r)>>1;\n\t\twhile(l<r){\n\t\t\tif(cs[mid].X<cs[i].X+D)l=mid+1;\n\t\t\telse r=mid;\n\t\t\tmid=(l+r)>>1;\n\t\t}\n\t\tnxt=l;\n\t\tint x,y;\n\t\tx=Query(1,pre,i-1);\n\t\ty=Query(1,i+1,nxt);\n\t\tif(Query(1,pre,i-1)>=2*cs[i].H&&Query(1,i+1,nxt)>=2*cs[i].H)\n\t\t\t++ans;\n\t}\n\tprintf(\"%d\\n\",ans);\n}\n```",
        "postTime": 1620109657,
        "uid": 228486,
        "name": "SunsetSamsara",
        "ccfLevel": 7,
        "title": "P3088 [USACO13NOV]Crowded Cows S \u9898\u89e3"
    },
    {
        "content": "\u5355\u8c03\u961f\u5217\u3002\u56e0\u4e3a\u8981\u4fdd\u8bc1\u961f\u9996\u662f\u6700\u9ad8\u7684\u5976\u725b\uff0c\u6240\u4ee5\u8fd9\u662f\u4e00\u4e2a\u5355\u8c03\u9012\u51cf\u961f\u5217\u3002\n\n\u7528\u7ed3\u6784\u4f53\u5b58\u50a8 $x_i, h_i$\uff0c\u7136\u540e\u4ee5\u5750\u6807\u4ece\u5c0f\u5230\u5927\u6392\u4e00\u904d\u5e8f\u3002\n\n\u56e0\u4e3a\u6bcf\u4e00\u5934\u725b\u9700\u8981\u6ee1\u8db3\n\n> **\u5de6\u8fb9D\u8ddd\u79bb\u5185\u800c\u4e14\u53f3\u8fb9D\u8ddd\u79bb\u5185**\u6709\u8eab\u9ad8\u81f3\u5c11\u662f\u5b83\u7684\u4e24\u500d\u7684\u5976\u725b\n\n\u6240\u4ee5\u9700\u8981\u4ece\u5de6\u5f80\u53f3\uff0c\u4ece\u53f3\u5f80\u5de6\u91cd\u590d\u626b\u4e24\u6b21\uff0c\u6807\u8bb0\u4e86\u4e24\u6b21\u7684\u5976\u725b\u5c31\u4f1a\u89c9\u5f97\u62e5\u6324\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5AC\u4e86\u3002\n\nCode\uff1a\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\nusing namespace std;\nconst int N = 50005;\nstruct node {\n    int x, y;\n}a[N];\nbool cmp(const node &a, const node &b) { //\u5750\u6807\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n    return a.x < b.x;\n}\nint n, d, q[N], h = 1, t = 1, f[N], ans;\nint main(void) {\n    scanf(\"%d%d\", &n, &d);\n    for (int i = 1; i <= n; ++i) {\n        scanf(\"%d%d\", &a[i].x, &a[i].y);\n    }\n    sort(a + 1, a + 1 + n, cmp);//\u6392\u5e8f\n    for (int i = 1; i <= n; ++i) { //\u4ece\u5de6\u5f80\u53f3\u626b\u4e00\u904d\n        while (h <= t && a[q[h]].x < a[i].x - d) {\n            h++;\n        }\n        if (a[i].y * 2 <= a[q[h]].y) f[i]++;\n        while (h <= t && a[q[t]].y <= a[i].y) {\n            t--;\n        }\n        q[++t] = i;\n    }\n    h = 1, t = 1;//\u521d\u59cb\u5316head\u548ctail\n    memset(q, 0, sizeof(q));//\u521d\u59cb\u5316\u5355\u8c03\u961f\u5217\n    for (int i = n; i >= 1; --i) { //\u7136\u540e\u4ece\u53f3\u5f80\u5de6\u626b\u4e00\u904d\n        while (h <= t && a[i].x + d < a[q[h]].x) {\n            h++;\n        }\n        if (a[i].y * 2 <= a[q[h]].y) f[i]++;\n        while (h <= t && a[q[t]].y < a[i].y) {\n            t--;\n        }\n        q[++t] = i;\n    }\n    for (int i = 1; i <= n; ++i) {\n    \tif (f[i] == 2) ans++;//\u7edf\u8ba1\u6807\u8bb0\u4e86\u4e24\u6b21\u7684\u5976\u725b\u7684\u4e2a\u6570\n\t}\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```\n\nTks.",
        "postTime": 1597718593,
        "uid": 205301,
        "name": "Tazuaki",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3088 \u3010[USACO13NOV]Crowded Cows S\u3011"
    },
    {
        "content": "[\u5173\u4e8epbds](https://baijiahao.baidu.com/s?id=1610302746201562113&wfr=spider&for=pc)\n\n\u76f4\u63a5\u6254\u4e86\u56db\u68f5\u5e73\u8861\u6811\u8fc7\u4e86\uff08\u8d5e\u7f8e$pbds$\uff09\u3002\n\u4f7f\u7528pbds\u5e93\u81ea\u5e26\u7684\u5e73\u8861\u6811\uff0c\u524d\u4e24\u68f5\u4ece\u5de6\u5411\u53f3\uff0c\u53e6\u5916\u4e24\u68f5\u76f8\u53cd\u3002\n\n\u524d\u4e24\u68f5\u7684\u505a\u6cd5\uff1a\n\u4e00\u68f5\u63d2\u5165\uff08\u5750\u6807\uff0c\u9ad8\u5ea6\uff09\u6309\u5750\u6807\u6392\u5e8f\uff0c\u4e00\u68f5\u63d2\u5165\uff08\u9ad8\u5ea6\uff0c\u5750\u6807\uff09\u6309\u9ad8\u5ea6\u6392\u5e8f\uff0c\u6bcf\u904d\u5386\u5230\u4e00\u5934\u725b\uff0c\u5c31\u5206\u522b\u63d2\u5165\u4e24\u68f5\u6811\u4e2d\uff0c\u540c\u65f6\u5904\u7406\u7b2c\u4e00\u68f5\u6811\uff0c\u5220\u9664\u5750\u6807\u6700\u5c0f\u7684\u70b9\u76f4\u5230\u5f53\u524d\u6811\u4e2d\u7684\u6700\u5c0f\u5750\u6807\u5728\u5f53\u524d\u904d\u5386\u5230\u7684\u725b\u7684\u5750\u6807\u7684\u5de6\u4fa7$D$\u8303\u56f4\u5185\uff0c\u56e0\u4e3a\u5b58\u7684\u65f6\u5019\u5229\u7528$pair$\u5b58\u4e86\u9ad8\u5ea6\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u5220\u6389\u53e6\u4e00\u68f5\u6811\u4e2d\u7684\u76f8\u5e94\u6570\u636e\uff0c\u4e4b\u540e\u627e\u51fa\u7b2c\u4e8c\u68f5\u6811\u4e2d\u9ad8\u5ea6\u7684\u6700\u5927\u503c\u662f\u5426\u662f\u5f53\u524d\u725b\u8eab\u9ad8\u7684\u4e24\u500d\u4ee5\u4e0a\uff0c\u5982\u679c\u662f\u5c31\u6807\u8bb0\u3002\n\n\u4ece\u53f3\u5230\u5de6\u540c\u7406\u3002\n\n\u88ab\u6807\u8bb0\u4e24\u6b21\u7684\u5373\u4e3a\u7b26\u5408\u8981\u6c42\u7684\uff0c\u8ba1\u6570\u5373\u53ef\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace __gnu_pbds;\nusing namespace std;\n#define ll long long\n#define il inline\ntree<pair<int,int>, null_type, less<pair<int,int> >, rb_tree_tag,tree_order_statistics_node_update> rbt;\ntree<pair<int,int>, null_type, less<pair<int,int> >, rb_tree_tag,tree_order_statistics_node_update> rbt2;\ntree<pair<int,int>, null_type, greater<pair<int,int> >, rb_tree_tag,tree_order_statistics_node_update> rbt3;\ntree<pair<int,int>, null_type, less<pair<int,int> >, rb_tree_tag,tree_order_statistics_node_update> rbt4;\nil ll read(){\n    char c=getchar();\n    ll f=1,x=0;\n    while(c<'0'||c>'9'){\n        if(c=='-')\n            f=-1;\n        c=getchar();\n    }\n    while(c>='0'&&c<='9'){\n        x=(x<<1)+(x<<3)+(c^'0');\n        c=getchar();\n    }\n    return x*f;\n}\nconst int N = 5e5+5;\nstruct cow{\n    ll x,h;\n}c[N];\nbool cmp(cow a,cow b){\n    return a.x<b.x||(a.x==b.x&&a.h<b.h);\n}\nint vis[N];\nll n,d;\nsigned main(){\n    n=read();\n    d=read();\n    int sz=0;\n    for(int i=1;i<=n;i++){\n        c[i]={read(),read()};\n    }\n    sort(c+1,c+1+n,cmp);\n    //\u4ece\u5de6\u5230\u53f3\n    for(int i=1;i<=n;i++){\n        rbt.insert(pair<int,int>(c[i].x,c[i].h));//\u5750\u6807\uff0c\u9ad8\u5ea6\n        rbt2.insert(pair<int,int>(c[i].h,c[i].x));//\u9ad8\u5ea6\uff0c\u5750\u6807\n        sz++;\n        if(i==1)continue;\n        int pos=rbt.find_by_order(0)->first;//\u627e\u5230\u5750\u6807\u6700\u5c0f\u503c\n        while(abs(pos-c[i].x)>d){//\u5f00\u59cb\u5220\u70b9\n            sz--;\n            int ht=rbt.find_by_order(0)->second;//\u627e\u9ad8\u5ea6\uff0c\u65b9\u4fbf\u5728\u7b2c\u4e8c\u68f5\u6811\u91cc\u5220\u9664\n            rbt2.erase(make_pair(ht,pos));\n            rbt.erase(rbt.find_by_order(0));\n            pos=rbt.find_by_order(0)->first;\n        }\n\n        int ma=rbt2.find_by_order(sz-1)->first;//\u627e\u9ad8\u5ea6\u6700\u5927\u503c\n\n        if(ma>=2*c[i].h){\n           vis[i]=1;//\u6807\u8bb0\n        }\n    }\n    //\u4ece\u53f3\u5230\u5de6\n    sz=0;\n    int ans=0;\n    for(int i=n;i>=1;i--){\n        rbt3.insert(pair<int,int>(c[i].x,c[i].h));\n        rbt4.insert(pair<int,int>(c[i].h,c[i].x));\n        sz++;\n\n        if(i==n)continue;\n        int pos=rbt3.find_by_order(0)->first;\n        while(abs(pos-c[i].x)>d){\n            sz--;\n            int ht=rbt3.find_by_order(0)->second;\n            rbt4.erase(make_pair(ht,pos));\n            rbt3.erase(rbt3.find_by_order(0));\n            pos=rbt3.find_by_order(0)->first;\n        }\n        int ma=rbt4.find_by_order(sz-1)->first;\n        if(ma>=2*c[i].h&&vis[i]==1){\n            ans++;\n        }\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n```\n",
        "postTime": 1588556282,
        "uid": 239864,
        "name": "Bazoka13",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3088 \u3010[USACO13NOV]Crowded Cows S\u3011--pbds"
    },
    {
        "content": "### Solve\n\n\u624b\u52a8\u6a21\u62df\u4e00\u4e0b\u961f\u5217\u5c31\u884c\u3002\n\n1.\u4e00\u4e2a\u9012\u51cf\u7684\u5355\u8c03\u961f\u5217\uff0c\u4fdd\u8bc1\u961f\u9996\u662f\u6700\u8fd1\u6700\u9ad8\u7684\u201c\u5976\u725b\u201d\uff08\u6700\u9ad8\u4f18\u5148\uff09\n\n2.\u4f9d\u6b21\u904d\u5386\uff0c\u5982\u679c\u961f\u9996\u7684\u6bd4\u4ed6\u9ad8\u4e24\u500d\u4ee5\u4e0a\uff0c\u5c31\u628a\u4ed6\u6807\u8bb0\u4e0b\u6765\uff1b\u5426\u5219\u5c31\u4e0d\u6807\u3002\n\n3.\u4ece\u5de6\u5230\u53f3\uff0c\u4ece\u53f3\u5230\u5de6\uff0c\u91cd\u590d\u4e24\u6b21\uff0c\u6709\u4e24\u6b21\u6807\u8bb0\u7684\u5c31\u662f\u201cCrowded Cows\"\u3002\n\n####  Tips\uff1a\n\n\u4e3a\u4ec0\u4e48\u5982\u6b64\u6807\u8bb0\u5462\uff1f\n\n\u9996\u5148\uff0c\u6211\u4eec\u4fdd\u8bc1\u4e86\u961f\u9996\u662f\u6700\u8fd1\u6700\u9ad8\u7684\u201c\u5976\u725b\u201d\u3002\u6240\u4ee5\u5982\u679c\u961f\u9996\u90fd\u6ca1\u6709\u4ed6\u9ad8\uff0c\u90a3\u5c31\u6ca1\u6709\u6bd4\u4ed6\u9ad8\u7684\u7684\u4e86\uff08\u6700\u8d77\u7801\u4ed6\u524d\u9762\u6ca1\u6709\u4e86\uff09\u3002\u800c\u7b2c\u4e8c\u6b21\u904d\u5386\u5c31\u662f\u89e3\u51b3\u4ed6\u540e\u9762\u662f\u5426\u6709\u6bd4\u4ed6\u9ad8\u7684\u201c\u5976\u725b\u201d\uff08\u4e0a\u6587\u7684\u201c\u9ad8\u201d\u90fd\u662f\u6307\u9ad8\u51fa\u4e24\u500d\u53ca\u4ee5\u4e0a\uff09\u3002\n\n\u5177\u4f53\u89c1\u4ee3\u7801\n\n### Code\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;  //\u6807\u51c6\u5f00\u5934\nconst int N=500001;\nint n,m;  //n==n,m==d\nint q[N][3];  //\u6838\u5fc3\u961f\u5217\nstruct note{\n\tint x,h,r;\n}d[N];  //d\u5b58\u50a8\u6bcf\u5934\u201c\u5976\u725b\u201d\u7684\u4fe1\u606f\u2014\u2014\u4f4d\u7f6e\uff08x\uff09\uff0c\u9ad8\u5ea6\uff08h)\uff0c\u5e8f\u53f7(r)\uff08\u5e8f\u53f7\u53ef\u4ee5\u65b9\u4fbf\u6807\u8bb0\uff09\nbool vis[N][3];  //\u6807\u8bb0\u5c0f\u80fd\u624b\nint ans;   //\u7b54\u6848\nint head=1,tail=1;  //head\u2014\u2014\u961f\u9996\uff0ctail\u2014\u2014\u961f\u5c3e\nbool cmp(const note &a,const note &b){  //\u6309\u4f4d\u7f6e\u4ece\u5c0f\u5230\u5927\u6392\n\treturn a.x<b.x;\n}\nint main()\n{\n\tmemset(q,0,sizeof(q));\n\tmemset(vis,false,sizeof(vis));\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++) cin>>d[i].x>>d[i].h,d[i].r=i;\n\tsort(d+1,d+1+n,cmp);  //sort\u5feb\u6392\uff0c\u5176\u5b9e\u4e5f\u53ef\u4ee5\u6362\u6210\u5176\u4ed6\u7684\u65b9\u6cd5\uff0c\u53ea\u8981\u4e0d\u5f71\u54cd\u7ed3\u679c\n\tq[head][0]=d[1].r;\n\tq[head][1]=d[1].x;\n\tq[head][2]=d[1].h;\n\tfor(int i=2;i<=n;i++){\n\t\twhile(q[head][1]<d[i].x-m&&head<=tail) head++;  //\u5982\u679c\u961f\u9996\u7684\u4f4d\u7f6e\u5df2\u7ecf\u8d85\u51fa\u4e86\u5f53\u524d\u201c\u5976\u725b\u201d\u7684\u8303\u56f4\uff0c\u90a3\u4e48\u961f\u9996\u5c31\u6ca1\u6709\u201c\u5229\u7528\u4ef7\u503c\u201d\u4e86\uff0c\u751a\u81f3\u4f1a\u5f71\u54cd\u6b63\u5e38\u6807\u8bb0\uff0c\u6240\u4ee5\u5fc5\u987b\u5220\u53bb\uff08\u5176\u5b9e\u5220\u53bb\u4e0d\u662f\u771f\u6b63\u7684\u5220\u53bb\uff0c\u53ea\u662f\u5934\u6307\u9488\u540e\u79fb\uff09\u3002\n\t\tif(q[head][2]>=d[i].h*2) vis[d[i].r][1]=true;  //\u6807\u8bb0\n\t\twhile(q[tail][2]<d[i].h&&tail>=head) tail--;  //\u961f\u5217\u66f4\u65b0\n\t\ttail++;\n\t\tq[tail][0]=d[i].r;\n\t\tq[tail][1]=d[i].x;\n\t\tq[tail][2]=d[i].h;\n\t}\n\thead=1;\n\ttail=1;\n\tmemset(q,0,sizeof(q));\n\tq[head][0]=d[n].r;\n\tq[head][1]=d[n].x;\n\tq[head][2]=d[n].h;\n\tfor(int i=n-1;i>=1;i--){  //\u518d\u6765\u4e00\u904d\n\t\twhile(q[head][1]>d[i].x+m&&head<=tail) head++;\n\t\tif(q[head][2]>=d[i].h*2) vis[d[i].r][2]=true;\n\t\twhile(q[tail][2]<d[i].h&&tail>=head) tail--;\n\t\ttail++;\n\t\tq[tail][0]=d[i].r;\n\t\tq[tail][1]=d[i].x;\n\t\tq[tail][2]=d[i].h;\n\t}\n\tfor(int i=1;i<=n;i++){  //\u6ce8\u610f\u662f\u4e24\u6b21\u6807\u8bb0\u90fd\u6709\uff0c\u624d\u662f\u201cCrowded Cows\u201d\n\t\tif(vis[i][1]==true&&vis[i][2]==true) ans++;\n\t}\n\tcout<<ans;  //\u5b8c\u7f8e\u8f93\u51fa\n\treturn 0;\n}\n```",
        "postTime": 1560654512,
        "uid": 70151,
        "name": "\u52a0\u52d2\u6bd4\u00b7\u53f2\u52aa\u6bd4",
        "ccfLevel": 0,
        "title": "P3088 \u3010[USACO13NOV]\u6324\u5976\u725bCrowded Cows\u3011"
    },
    {
        "content": "## \u89e3\u6790\n\u8fd9\u9053\u9898\u5c31\u662f\u4e00\u9053\u5355\u8c03\u961f\u5217\u7684\u6a21\u677f\u9898\uff0c\u9898\u610f\u5f88\u7b80\u5355\uff0c\u4e0e\u7eaf\u6a21\u677f\u76f8\u6bd4\uff0c\u8fd9\u9053\u9898\u8f93\u5165\u4e2d\u5976\u725b\u7684\u4f4d\u7f6e\u662f\u6253\u4e71\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u7ed3\u6784\u4f53\u52a0\u5feb\u6392\u5c06\u5976\u725b\u7684\u4f4d\u7f6e\u7531\u5927\u5230\u5c0f\u6392\u4e2a\u5e8f\u3002\n## \u5355\u8c03\u961f\u5217\u5728\u6b64\u9898\u4e2d\u7684\u5e94\u7528\n\u56e0\u4e3a\u6bcf\u5934\u725b\u5fc5\u987b\u4e24\u8fb9\u90fd\u6709\u8eab\u9ad8\u662f\u5b83\u4e24\u500d\u7684\u725b\u624d\u4f1a\u611f\u5230\u62e5\u6324\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u96be\u60f3\u5230\u8fde\u7eed\u7528\u4e24\u6b21\u5355\u8c03\u961f\u5217\u3002\u4e00\u6b21\u987a\u5e8f\uff0c\u4e00\u6b21\u9006\u5e8f\u3002\n## \u4ec0\u4e48\u662f\u5355\u8c03\u961f\u5217\uff1f\uff01\n\u7b80\u5355\u8bf4\u4e00\u4e0b\uff0c\u6211\u4eec\u7528\u6570\u7ec4\u6a21\u62df\u961f\u5217\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u7528 $STL$\uff0c\u7528\u961f\u5934\u5b58\u8eab\u9ad8\u6700\u9ad8\u7684\u5976\u725b\u7684\u7f16\u53f7\uff0c\u5982\u679c\u5b83\u4e0d\u5728\u5f53\u524d\u679a\u4e3e\u7684\u5976\u725b\u7684\u8ddd\u79bb\u5185\uff0c\u5c31\u8ba9\u5b83\u51fa\u961f\uff0c\u5982\u679c\u5f53\u524d\u5976\u725b\u7684\u8eab\u9ad8\u5927\u4e8e\u961f\u5c3e\u7684\u5976\u725b\u7684\u8eab\u9ad8\uff0c\u5c31\u5c06\u961f\u5c3e\u5c0f\u4e8e\u8fd9\u5934\u5976\u725b\u8eab\u9ad8\u7684\u5976\u725b\u51fa\u961f\uff0c\u6267\u884c\u5b8c\u8fd9\u4e9b\u64cd\u4f5c\u540e\uff0c\u8ba9\u5f53\u524d\u7684\u5976\u725b\u5165\u961f\uff0c\u518d\u679a\u4e3e\u4e0b\u4e00\u5934\u5976\u725b\u3002\n## \u6ce8\u610f\n\u5f53\u9006\u5e8f\u679a\u4e3e\u65f6\uff0c\u8303\u56f4\u7684\u5224\u65ad\u4e0e\u987a\u5e8f\u65f6\u6709\u6240\u4e0d\u540c\u3002\n```cpp\nwhile(head<=tail&&a[q[head]].dir>a[i].dir+d) head++;\n```\n## AC\u4ee3\u7801\n```\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=5*1e5+5;\ninline int read()\n{\n\tint x=0,flag=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')flag=0;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<3)+(x<<1)+ch-48;ch=getchar();}\n\treturn flag?x:-x;\n}\nstruct node{\n\tint dir,h;\n}a[N];\nint q[N],f[N],n,d,head=1,tail=1,tot=0;\ndouble nb;\nbool cmp(node x,node y)\n{\n\treturn x.dir<y.dir;\n}\nint main()\n{\n\tn=read();d=read();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\ta[i].dir=read();\n\t\ta[i].h=read();\n\t}\n\tsort(a+1,a+1+n,cmp);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\twhile(head<=tail&&a[q[head]].dir<a[i].dir-d) head++;\n\t\twhile(head<=tail&&a[q[tail]].h<=a[i].h) tail--;\n\t\tq[++tail]=i;\n\t\tnb=1.0*a[q[head]].h/2;//\u6ce8\u610f\u8fd9\u4e2a\u7ec6\u8282\uff0c\u80fd\u907f\u514d\u7206\u6570\u636e\u8303\u56f4\u7684\u95ee\u9898\n\t\tif(nb>=a[i].h) f[i]++;\n\t}\n\thead=1;tail=1;\n\tmemset(q,0,sizeof(q));\n\tfor(int i=n;i>=1;i--)\n\t{\n\t\twhile(head<=tail&&a[q[head]].dir>a[i].dir+d) head++;\n\t\twhile(head<=tail&&a[q[tail]].h<=a[i].h) tail--;\n\t\tq[++tail]=i;\n\t\tnb=1.0*a[q[head]].h/2;//\u4e00\u822c\u7528\u9664\u6cd5\u4ee3\u66ff\u4e58\u6cd5\n\t\tif(nb>=a[i].h&&f[i]==1) tot++; \n\t}\n\tprintf(\"%d\",tot);\n\treturn 0;\n}\n```\n",
        "postTime": 1608635478,
        "uid": 385145,
        "name": "\u795e\u7737\u4e4b\u6a31\u82b1",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3088 \u3010[USACO13NOV]Crowded Cows S\u3011"
    },
    {
        "content": "\u4e2a\u4eba\u611f\u89c9\u8fd9\u4e2a\u9898\u76ee\u5982\u679c\u60f3\u5230\u5355\u8c03\u961f\u5217\u7684\u65b9\u6cd5\u5c31\u4e0d\u96be\u4e86\u3002\u9700\u8981\u628a\u4e24\u4fa7\u7684\u62e5\u6324\u5206\u522b\u5224\u65ad\uff0c\u5373\u5148\u8981\u770b\u770b\u524d\u9762\u662f\u5426\u62e5\u6324\uff0c\u518d\u5224\u65ad\u540e\u9762\u662f\u5426\u62e5\u6324\uff0c\u5982\u679c\u67d0\u4e00\u70b9\u524d\u540e\u62e5\u6324\u5219\u53ef\u4ee5\u8ba1\u6570\u3002\n\n\u6838\u5fc3\u601d\u60f3\u662f\uff1a\n1.\u5148\u4ece\u524d\u5f80\u540e\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u9012\u51cf\u7684\u961f\u5217\uff0c\u6bcf\u6b21\u65b0\u5143\u7d20\u5165\u961f\u65f6\uff0c\u5224\u65ad\u961f\u9996\u5143\u7d20\u662f\u5426\u5927\u4e8e\u7b49\u4e8e\u4e8c\u500d\u65b0\u5143\u7d20\uff0c\u5982\u679c\u662f\uff0c\u5c31\u8bc1\u660e\u8fd9\u5934\u725b\u524d\u9762\u5f88\u62e5\u6324\uff0c\u6807\u6ce8\u4e00\u4e0b\u3002\n2.\u4ece\u540e\u5411\u524d\u518d\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u9012\u51cf\u961f\u5217\uff0c\u65b9\u6848\u540c\u4e0a\uff0c\u5982\u679c\u8fd9\u91cc\u4e5f\u62e5\u6324ans++\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff0c\u6709\u8f7b\u6807\u6ce8\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,d,ans;\nstruct cow\n{\n    int x,h;//\u4f4d\u7f6e\u548c\u9ad8\u5ea6\n};\ndeque <cow> dmax;\ncow c[50005];\nbool f[50005];\nbool cmp(cow b,cow a)\n{\n    if (a.x!=b.x)return (a.x>b.x);\n    else return (a.h>b.h);\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&d);\n    for (int i=1;i<=n;i++)\n        scanf(\"%d%d\",&c[i].x,&c[i].h);\n    sort(c+1,c+n+1,cmp);//\u4ece\u5c0f\u5230\u5927 \n    for (int i=1;i<=n;i++)\n    {\n    \tint nx,nh;\n    \tnx=c[i].x;\n    \tnh=c[i].h;\n\t\twhile(!dmax.empty()&&dmax.back().h<nh)\n\t\t\tdmax.pop_back();\n\t\twhile(!dmax.empty()&&dmax.front().x<nx-d)\n\t\t\tdmax.pop_front(); \n\t\t\n\t\tdmax.push_back((cow){nx,nh});\n\t\tif(dmax.front().h>=2*nh)\n\t\t\tf[i]=true;\n\t}\n\twhile(!dmax.empty())//\u6e05\u7a7a\u961f\u5217 \n\t\tdmax.pop_front();\n\tfor (int i=n;i>=1;i--)\n    {\n    \tint nx,nh;\n    \tnx=c[i].x;\n    \tnh=c[i].h;\n\t\twhile(!dmax.empty()&&dmax.back().h<nh)\n\t\t\tdmax.pop_back();\n\t\twhile(!dmax.empty()&&dmax.front().x>nx+d)\n\t\t\tdmax.pop_front(); \n\t\tdmax.push_back((cow){nx,nh});\n\t\tif(dmax.front().h>=2*nh)//\u540e\u9762\u62e5\u6324\uff0c\u5982\u679c\u8fd9\u53ea\u725b\u524d\u9762\u4e5f\u62e5\u6324\uff0c\u5c31\u591a\u4e00\u4e2aans. \n\t\t{\n\t\t\tif(f[i]) \n\t\t\t\tans++;\n\t\t}\n\t}\n\tcout<<ans<<endl;\n    return 0;\n}\n```\n",
        "postTime": 1603716809,
        "uid": 318195,
        "name": "Paris_Bentley",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P3088 \u3010[USACO13NOV]Crowded Cows S\u3011"
    },
    {
        "content": "\u8fd9\u9898\u597d\u5751\u554a\uff0c\u56e0\u4e3a\u5206\u5757\u4e00\u4e2a\u5c0f\u5c0f\u7684\u4f4d\u7f6e\u95ee\u9898\u5c45\u7136\u5361\u4e86\u849f\u84bb\u5341\u51e0\u4e2a\u63d0\u4ea4\u8bb0\u5f55\u2026\u2026\n\n\u6709\u8da3\u7684\u662f\uff0c\u672c\u9898\u5728\u6d1b\u8c37\u4e0a\u5982\u901a\u5165\u81ed\u6c27\uff0c\u53ef\u5c06rmq\u90e8\u5206\u66ff\u4ee3\u4e3a$O(n)$\u66b4\u529b\u5f3a\u5361\u8fc7\u53bb\uff0c\u4f46\u662f\u5728USACO\u670d\u52a1\u5668\u4e0a\u4f1aT\u6389\u4e00\u4e2a\u70b9\n\n\u5177\u4f53\u7684\u6765\u8bf4\uff0c\u849f\u84bb\u4f7f\u7528\u6392\u5e8f\uff0c`std::lower_bound/upper_bound`\u548c`map`\u4f7f\u5f97\u6211\u4eec\u80fd\u7528\u4f4e\u4e8e$O(n)$\u7684\u65f6\u95f4\u4ee3\u4ef7\u786e\u5b9a\u6bcf\u5934\u5976\u725b\u5de6\u53f3$d$\u5355\u4f4d\u8ddd\u79bb\u8303\u56f4\u5185\u6700\u8fdc\u5976\u725b\u7684\u7f16\u53f7\uff1b\u7559\u610f\u5230`upper_bound`\u51fd\u6570\u5728\u5976\u725b\u8ddd\u79bb\u7f16\u53f7\u6700\u5927\u7684\u5976\u725b\u8ddd\u79bb\u4e0d\u8db3$d$\u65f6\u4f1a\u8d8a\u754c\u4ece\u800c\u8fd4\u56de$0$\uff0c\u4f7f\u7528\u4e09\u76ee\u8fd0\u7b97\u7b26\u7279\u5224\uff0c~~\u9020\u5c31\u4e86\u90a3\u5768\u957f\u5f97\u4e0d\u6210\u6837\u7684\u8c03\u8bd5\u8bed\u53e5~~\n\n\u5269\u4e0b\u7684\u2026\u2026\u5c31\u662f\u6807\u51c6\u7684\u5206\u5757rmq\u6a21\u677f\u5566\uff01\u5982\u679c\u5bf9\u5404\u6570\u4e0d\u751a\u7406\u89e3\u7684\u8bdd\uff0c\u53ef\u8f93\u51fa\u5206\u6790\uff08\u6ed1\u7a3d\uff09\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 50005\nusing namespace std;\n\nint ans,len,n,d,p[maxn],val[maxn],be[maxn];\n\nmap<int,int>mp;\n\nstruct cows{\n\tint x,h;\n}c[maxn];\n\nbool cmp (cows l, cows r){\n\treturn l.x<r.x;\n}\n\ninline int query(int from,int to){\n    int cnt=-(1<<30);\n    for(register int i=from;i<=min(to,be[from]*len);i++) cnt=max(cnt,c[i].h);\n    if(be[from]!=be[to]){\n        for(register int i=(be[to]-1)*len+1;i<=to;i++) cnt=max(cnt,c[i].h);\n    }\n    for(register int i=be[from]+1;i<=be[to]-1;i++) cnt=max(cnt,val[i]);\n    return cnt;\n}\n\nint main(){\n//\tfreopen(\"crowded.in\",\"r\",stdin);\n//\tfreopen(\"crowded.out\",\"w\",stdout);\n\tscanf(\"%d%d\",&n,&d);\n\tlen=sqrt(n);\n\tfor(int i=1;i<=n;i++)be[i]=(i-1)/len+1;\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d%d\",&c[i].x,&c[i].h);\n\t\tp[i]=c[i].x;\n\t}\n\tsort(c+1,c+n+1,cmp);\n\tsort(p+1,p+n+1);\n\tfor(int i=1;i<=n;i++){\n\t\tmp[c[i].x]=i;\n\t\tval[be[i]]=max(val[be[i]],c[i].h);//THIS STEP MUST BE DONE AFTER SORTING\n\t}\n\tfor(int i=2;i<n;i++){ \n//\t\tprintf(\"%d %d %d %d %d %d\\n\",mp[*lower_bound(p+1,p+n+1,p[i]-d)],i,mp[*upper_bound(p+1,p+n+1,p[i]+d)]?mp[*upper_bound(p+1,p+n+1,p[i]+d)]-1:n,query(mp[*lower_bound(p+1,p+n+1,p[i]-d)],i),query(i,mp[*upper_bound(p+1,p+n+1,p[i]+d)]?mp[*upper_bound(p+1,p+n+1,p[i]+d)]-1:n),2*c[i].h);\n\t\tif(query(mp[*lower_bound(p+1,p+n+1,p[i]-d)],i)>=2*c[i].h && query(i,mp[*upper_bound(p+1,p+n+1,p[i]+d)]?mp[*upper_bound(p+1,p+n+1,p[i]+d)]-1:n)>=2*c[i].h) {\n\t\t\tans++;\n//\t\t\tprintf(\"%d\\n\",i);\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n}\n```\n\n\u611f\u8c22\u7ba1\u7406\u5ba1\u6838\uff01\n\n~~\u8fd9\u9898\u597d\u6bd2\u7624\u554a~~",
        "postTime": 1593710263,
        "uid": 62562,
        "name": "B_1168",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3088 \u3010[USACO13NOV]Crowded Cows S\u3011"
    },
    {
        "content": "# \u9898\u610f:\n\n```cpp\n\u6709n\u4e2a\u5976\u725b\u5728\u5403\u8349\uff0c\u5b83\u4eec\u6709\u4e24\u4e2a\u5c5e\u6027\uff0c\u9ad8\u5ea6\u548c\u5750\u6807\n\n\u5f53\u4e00\u4e2a\u5976\u725b\u5de6\u8fb9D\u8ddd\u79bb\u5185\u6709\u4e00\u4e2a\u8eab\u9ad8\u81f3\u5c11\u4e3a\u5b83\u4e24\u500d\u7684\u5976\u725b\u4e14\u5b83\u53f3\u8fb9D\u8ddd\u79bb\u5185\u4e5f\u6709\u4e00\u4e2a\u8eab\u9ad8\u81f3\u5c11\u4e3a\u4ed6\u4e24\u500d\u7684\u5976\u725b,\u5b83\u5c31\u4f1a\u611f\u5230\u62e5\u6324\n\n\u6c42\u6709\u591a\u5c11\u4e2a\u5976\u725b\u4f1a\u611f\u5230\u62e5\u6324\u3002\n```\n# \u89e3\u6790\uff1a\n\n\u9996\u5148\u7528\u4e00\u4e2a\u7ed3\u6784\u4f53\u6765\u5b58\u50a8\u5976\u725b\u7684\u4e24\u4e2a\u5c5e\u6027\u3002\n\n\u7136\u540e\u518d\u4ee5\u5750\u6807\u5927\u5c0f\u6392\u5e8f\uff0c\u77e5\u9053\u5976\u725b\u4eec\u7684\u8c01\u524d\u8c01\u540e\n\n## \u89e3\u6cd5\u4e00\n\n\u6211\u4eec\u53ef\u4ee5\u7528RMQ\u6765\u8ba1\u7b97\u533a\u95f4\u5185\u7684\u5976\u725b\u9ad8\u5ea6\u7684\u6700\u5927\u503c\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u5976\u725b\uff0c\u53ef\u4ee5\u5148\u7528\u4e8c\u5206\u786e\u5b9a\uff0c\u8ddd\u79bb\u5b83\u5c0f\u4e8eD\u7684\u5976\u725b\u4eec\u7684\u7f16\u53f7\u8303\u56f4\u3002\n\n\u5728\u5224\u65ad\u8fd9\u4e2a\u533a\u95f4\u7684\u5976\u725b\u9ad8\u5ea6\u7684\u6700\u5927\u503c\uff0c\u662f\u5426\u8d85\u8fc7\u5f53\u524d\u5976\u725b\u7684\u9ad8\u5ea6\u7684\u4e24\u500d\u3002\n\n**\u8fd9\u79cd\u65b9\u6cd5\u590d\u6742\uff0c\u4ee3\u7801\u8f83\u96be\u5b9e\u73b0\uff0c\u4f46\u6548\u7387\u4e3a$O(nlogn)$\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898**\n\n## \u89e3\u6cd5\u4e8c\n\n\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u5355\u8c03\u961f\u5217\u6765\u7ef4\u62a4\u60f3\u53d6\u5230\u7684\u6700\u5927\u503c\u3002\n\n\u6211\u7684\u60f3\u6cd5\u662f\u626b\u4e24\u904d\uff0c\u6b63\u7740\u4e00\u904d\uff0c\u53cd\u7740\u4e00\u904d\u3002\u6b63\u8fd9\u65f6\u53d6\u81ea\u5df1\u524d\u9762\u5408\u6cd5\u7684\u6700\u5927\u503c\uff0c\u53cd\u7740\u65f6\u53d6\u81ea\u5df1\u540e\u9762\u5408\u6cd5\u7684\u6700\u5927\u503c\uff0c\u82e5\u6b64\u6700\u5927\u503c\u5927\u4e8e\u5f53\u524d\u5976\u725b\u9ad8\u5ea6\u7684\u4e24\u500d\uff0c$ans_i$++,\u5982\u679c$ans_i=2$,\u5219\u8be5\u5976\u725b\u4f1a\u611f\u5230\u62e5\u6324\u3002\n\n\u6700\u540e\u518d\u7edf\u8ba1\u6709\u591a\u5c11\u4e2a$ans_i=2$\u7684\u5976\u725b\uff0c\u8f93\u51fa\u5373\u53ef\n\n# \u4ee3\u7801:\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nstruct oi {\n\tint h,x;\n} a[100001];\nbool cmp(oi x,oi y) {\n\treturn x.x<y.x;\n}\nint ans[100001],sum;\nint n,d;\ndeque<int>q,p;\nint main() {\n\tcin>>n>>d;\n\tfor(int i=1; i<=n; i++) scanf(\"%d%d\",&a[i].x,&a[i].h);\n\tsort(a+1,a+1+n,cmp);//\u6309\u5750\u6807\u6392\u5e8f\n\tq.push_back(a[1].h);\n\tp.push_back(1);\n\tfor(int i=1; i<=n; i++) {\n\t\twhile(!p.empty()&&a[i].x-a[p.front()].x>d) {//\u5355\u8c03\u961f\u5217\u7ef4\u62a4\uff0c\u5982\u679c\u961f\u9996\u7684\u5750\u6807\u4e0e\u81ea\u5df1\u76f8\u5dee\u5927\u4e8ed\uff0c\u5219\u76f4\u63a5\u5f39\u51fa\n\t\t\tq.pop_front();\n\t\t\tp.pop_front();\n\t\t}\n\t\twhile(!q.empty()&&a[i].h>q.back()) {//\u4ece\u540e\u9762\u538b\u5165\uff0c\u5c06\u6240\u6709\u6bd4\u81ea\u5df1\u5c0f\u7684\u6570\u5b57\u5f39\u51fa\uff0c\u4ee5\u8fbe\u5230\u7ef4\u62a4\u6700\u5927\u503c\u7684\u76ee\u7684\n\t\t\tq.pop_back();\n\t\t\tp.pop_back();\n\t\t}\n\t\tq.push_back(a[i].h);\n\t\tp.push_back(i);\n\t\tif(q.front()>=a[i].h*2) {//\u7edf\u8ba1\u7b54\u6848\n\t\t\tans[i]++;\n\t\t}\n\t}\n\twhile(!q.empty()) q.pop_back(),p.pop_back();//\u6e05\u7a7a\u961f\u5217\n\tfor(int i=n; i>=1; i--) {//\u53cd\u7740\u626b\u4e00\u904d\n\t\twhile(!p.empty()&&a[p.front()].x-a[i].x>d) {\n\t\t\tq.pop_front();\n\t\t\tp.pop_front();\n\t\t}\n\t\twhile(!q.empty()&&a[i].h>q.back()) {\n\t\t\tq.pop_back();\n\t\t\tp.pop_back();\n\t\t}\n\t\tq.push_back(a[i].h);\n\t\tp.push_back(i);\n\t\tif(q.front()>=a[i].h*2) {\n\t\t\tans[i]++;\n\t\t}\n\t}\n\tfor(int i=1; i<=n; i++) if(ans[i]==2) sum++;//\u7edf\u8ba1\u611f\u5230\u62e5\u6324\u5976\u725b\u7684\u4e2a\u6570\n\tcout<<sum<<endl;//\u8f93\u51fa\u7b54\u6848\n\treturn 0;\n}\n/*\n6 4\n3 6\n5 3 \n6 2\n9 7\n10 3\n11 2\n*/\n```\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(n)$\u4e14\u8f83\u597d\u89c6\u7ebf\uff0c\u662f\u8fd9\u7c7b\u9898\u76ee\u7684\u9996\u9009\u505a\u6cd5",
        "postTime": 1589025134,
        "uid": 175011,
        "name": "rfsfreffr",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3088 \u3010[USACO13NOV]Crowded Cows S\u3011"
    },
    {
        "content": "\u79bb\u6563\u5316+\u7ebf\u6bb5\u6811\n\uff08\u5305\u542b\u533a\u95f4\u4fee\u6539\uff0c\u5411\u4e0a\u66f4\u65b0\uff0c\u5efa\u6811\uff0c\u533a\u95f4\u67e5\u8be2\u7b49\u64cd\u4f5c\uff09\n\u5148\u5efa\u6811\uff0c\u518d\u5bf9\u8f93\u5165\u90e8\u5206\u8fdb\u884c\u6392\u5e8f\uff0c\u8bb0\u5f55first\uff08\u79bb\u6563\u64cd\u4f5c\uff09\u4e4b\u540e\u5c31\u597d\u64cd\u4f5c\u4e86\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n\nconst int MAXN=5e4;\n\nnamespace segment_tree\n{\n\t\n\ttemplate<class T>\n\tinline void sum_merge(T &a,T &b,T &c)\n\t{\n\t\ta=b+c;\n\t}\n\t\n\ttemplate<class T>\n\tinline void sum_lazy_down(T &a,T &b,int n)\n\t{\n\t\ta+=b*n;\n\t}\n\t\n\ttemplate<class T>\n\tinline T sum_ask_merge(T a,T b)\n\t{\n\t\treturn a+b;\n\t}\n\t\n\ttemplate<class T>\n\tinline void min_merge(T &a,T &b,T &c)\n\t{\n\t\ta=min(b,c);\n\t}\n\t\n\ttemplate<class T>\n\tinline void min_lazy_down(T &a,T &b,int n)\n\t{\n\t\ta+=b;\n\t}\n\t\n\ttemplate<class T>\n\tinline T min_ask_merge(T a,T b)\n\t{\n\t\treturn min(a,b);\n\t}\n\t\n\ttemplate<class T>\n\tinline void max_merge(T &a,T &b,T &c)\n\t{\n\t\ta=max(b,c);\n\t}\n\t\n\ttemplate<class T>\n\tinline void max_lazy_down(T &a,T &b,int n)\n\t{\n\t\ta+=b;\n\t}\n\t\n\ttemplate<class T>\n\tinline T max_ask_merge(T a,T b)\n\t{\n\t\treturn max(a,b);\n\t}\n\t\n\ttemplate<class T>\n\tstruct tnode\n\t{\n\t    T sum,lazy;\n\t    int l,r;\n\t};\n\t\n\ttemplate<class T>\n\tclass Segment_Tree\n\t{\n\tpublic:\n\t\tvoid(*merge)(T &parent,T &child1,T &child2);//\u5408\u5e76\u65f6\u7684\u89c4\u5219 \n\t\tvoid(*lazy_down)(T &value,T &lazy_value,int segment_length);//\u61d2\u6807\u8bb0\u4e0b\u4f20\u65f6\u7684\u89c4\u5219 \n\t\tT(*ask_merge)(T child1,T child2);//\u8be2\u95ee\u5408\u5e76\u65f6\u7684\u89c4\u5219 \n\t\t \n\t\tvoid sum_mode()\n\t\t{\n\t\t\t//\u6c42\u548c\u6a21\u5f0f \n\t\t\tmerge=sum_merge;\n\t\t\tlazy_down=sum_lazy_down;\n\t\t\task_merge=sum_ask_merge;\n\t\t}\n\t\t\n\t\tvoid min_mode()\n\t\t{\n\t\t\t//\u6c42\u6700\u5c0f\u6a21\u5f0f\n\t\t\tmerge=min_merge;\n\t\t\tlazy_down=min_lazy_down;\n\t\t\task_merge=min_ask_merge;\n\t\t}\n\t\t\n\t\tvoid max_mode()\n\t\t{\n\t\t\t//\u6c42\u6700\u5927\u6a21\u5f0f\n\t\t\tmerge=max_merge;\n\t\t\tlazy_down=max_lazy_down;\n\t\t\task_merge=max_ask_merge;\n\t\t}\n\t\t\n\t\t\n\t    void pushdown(int root)\n\t    {\n\t    \t//\u4e0b\u4f20 \n\t        if(t[root].lazy!=0)\n\t        {\n\t        \tlazy_down(t[root].sum,t[root].lazy,t[root].r-t[root].l+1);\n\t            if(t[root].l!=t[root].r)\n\t            {\n\t                int ch=root<<1;\n\t                t[ch].lazy+=t[root].lazy;\n\t                t[ch+1].lazy+=t[root].lazy;\n\t            }\n\t            t[root].lazy=0;\n\t        }\n\t    }\n\t    \n\t    void update (int root)\n\t    {\n\t    \t//\u4e0a\u66f4\u65b0 \n\t        int ch=root<<1;\n\t        pushdown(ch);\n\t        pushdown(ch+1);\n\t        merge(t[root].sum,t[ch].sum,t[ch+1].sum);\n\t    }\n\t    \n\t    void build(int l,int r,int root=1)\n\t    {\n\t    \t//\u5efa\u6811 \n\t        t[root].l=l;\n\t        t[root].r=r;\n\t        t[root].sum=t[root].lazy=0;\n\t        if(l!=r)\n\t        {\n\t            int mid=(l+r)>>1;\n\t            int ch=root<<1;\n\t            build(l,mid,ch);\n\t            build(mid+1,r,ch+1);\n\t            update(root);\n\t        }\n\t    }\n\t    \n\t    void change(int l,int r,T delta,int root=1)\n\t    {\n\t    \t//\u533a\u95f4\u4fee\u6539 \n\t    \tif(l>r)\n\t    \t\treturn ;\n\t        if(l==t[root].l&&r==t[root].r)\n\t        {\n\t            t[root].lazy+=delta;\n\t            pushdown(root);\n\t            return;\n\t        }\n\t        int mid=(t[root].l+t[root].r)>>1;\n\t        int ch=root<<1;\n\t        if(r<=mid)\n\t\t\t\tchange(l,r,delta,ch);\n\t        else if(l>mid)\n\t\t\t\tchange(l,r,delta,ch+1);\n\t        else \n\t\t\t{\n\t\t\t\tchange(l,mid,delta,ch);\n\t\t\t\tchange(mid+1,r,delta,ch+1);\n\t\t\t}\n\t        update(root);\n\t    }\n\t    \n\t    T ask(int l,int r,int root=1)\n\t    {\n\t    \t//\u533a\u95f4\u67e5\u8be2 \n\t    \tif(l>r)\n\t    \t\treturn 0;\n\t        pushdown(root);\n\t        if(t[root].l==l&&t[root].r==r)\n\t        {\n\t            return t[root].sum;\n\t        }\n\t        int mid=(t[root].l+t[root].r)>>1;\n\t        int ch=root<<1;\n\t        if(r<=mid)\n\t\t\t\treturn ask(l,r,ch);\n\t        else if(l>mid)\n\t\t\t\treturn ask(l,r,ch+1);\n\t        else \n\t\t\t\treturn ask_merge(ask(l,mid,ch),ask(mid+1,r,ch+1));\n\t    }\n\t    \n\tprivate:\n\t\ttnode<T> t[4*MAXN];\n\t};\t\t\n} \n\nusing namespace segment_tree;\nSegment_Tree<int> sg;\n\nconst int N=5e4+5;\npair<int,int> a[N];\nint b[N];\nint n,d,m; \n\nint main()\n{\n\tscanf(\"%d%d\",&n,&d);\n\tsg.max_mode();\n\tsg.build(1,n);\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d%d\",&a[i].first,&a[i].second);\n\tsort(a+1,a+n+1);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tb[++m]=a[i].first;\n\t\tsg.change(m,m,a[i].second);\n\t}\n\tint cnt=0;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint now=b[i];\n\t\tint pre=max(0,now-d),nxt=now+d;\n\t\tint left=lower_bound(b+1,b+m+1,pre)-b;\n\t\tint right=upper_bound(b+1,b+m+1,nxt)-b-1;\n\t\tint left_max=sg.ask(left,i);\n\t\tint right_max=sg.ask(i,right);\n\t\tif(left_max>=a[i].second*2&&right_max>=a[i].second*2)\n\t\t\tcnt++;\n\t}\n\tprintf(\"%d\\n\",cnt);\n\t\n    return 0;\n}\n\n\n```\n",
        "postTime": 1588601742,
        "uid": 278508,
        "name": "chenguanghui",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3088 \u3010[USACO13NOV]Crowded Cows S\u3011"
    },
    {
        "content": "\u6bd4\u8f83\u88f8\u7684\u5355\u8c03\u961f\u5217\u9898\u3002\u4e0e[P1901 \u53d1\u5c04\u7ad9](https://www.luogu.org/problemnew/show/P1901)\u6bd4\u8f83\u7c7b\u4f3c\n\n\u6392\u5e8f\uff0c\u7528\u5355\u8c03\u961f\u5217\u4ece\u5de6\u626b\u5230\u53f3\uff0c\u627e\u5230\u6bcf\u4e00\u5934\u5976\u725b\u5de6\u8fb9D\u8ddd\u79bb\u4ee5\u5185\u7684\u6700\u9ad8\u5976\u725b\u5e76\u5224\u65ad(\u6bcf\u6b21\u5f53\u961f\u4e2d\u6700\u9ad8\u6700\u9760\u5de6\u7684\u5976\u725b\u4e0e\u73b0\u5728\u7684\u5976\u725b\u8ddd\u79bb\u8d85\u8fc7D\u65f6\u5c31\u628a\u4ed6\u51fa\u961f\uff0c\u4fdd\u8bc1\u961f\u9996\u662f\u6700\u9ad8\u6700\u9760\u5de6\u4e14\u8ddd\u79bb\u5728D\u4ee5\u5185\u7684\u5976\u725b)\u3002\n\n\u7531\u4e8e\u4e24\u8fb9\u90fd\u8981\u5224\u65ad\uff0c\u6240\u4ee5\u8fd8\u8981\u4ece\u53f3\u5411\u5de6\u518d\u626b\u4e00\u904d\uff0c\u5de6\u53f3\u90fd\u62e5\u6324\u7684\u5976\u725b\u624d\u4f1a\u8d21\u732e\u7b54\u6848\u3002\n\n\u6392\u5e8f\u53ef\u4ee5\u4f7f\u7528\u57fa\u6570\u6392\u5e8f\uff0c\u6bd4sort\u5feb\u4e00\u70b9\u70b9\u3002\u5bf9\u57fa\u6570\u6392\u5e8f\u601d\u60f3\u4e0d\u6e05\u695a\u7684\u540c\u5b66\u53ef\u4ee5\u53bb\u770b\u4e00\u770b\u6d1b\u8c37\u65e5\u62a5\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define Getchar() (p1==p2 && (p2=(p1=io)+fread(io,1,1<<21,stdin),p1==p2)?EOF:*p1++)//\u5feb\u8bfb\n#define MAX (50000+50)\nusing namespace std;\n\nstruct Node{\n\tint x,h;\n}d[MAX],b[MAX];//d\u662f\u8f93\u5165,b\u7528\u4e8e\u57fa\u6570\u6392\u5e8f\n\nchar io[1<<21],*p1=io,*p2=io;//\u7528\u4e8e\u5feb\u8bfb\nint N,D,L=1,R,Q[MAX],T[1<<17],ans[MAX];\n//L,R,Q\u662f\u5355\u8c03\u961f\u5217\uff0cT\u7528\u4e8e\u6392\u5e8f\uff0cans\u7528\u4e8e\u7edf\u8ba1\u7b54\u6848\u3002\n\ninline void read(int &a)//\u5feb\u8bfb\n{\n    register char c=Getchar(); \n    for (a=0; c<'0'||'9'<c; c=Getchar());\n    for (; '0'<=c && c<='9'; c=Getchar())\n        a=(a<<3)+(a<<1)+(c^48);\n}\n\nvoid Rsort()//\u57fa\u6570\u6392\u5e8f\n{\n    for (register int i=1; i<=N; i++)\n\t\tT[(d[i].x&0xffff)+1]++;\n\tfor (register int i=1; i<=0xffff; i++)\n\t\tT[i]+=T[i-1];\n\tfor (register int i=1; i<=N; i++)\n\t\tb[++T[(d[i].x&0xffff)]]=d[i];\n\tmemset(T,0,sizeof(T));\n\tfor (register int i=1; i<=N; i++)\n\t\tT[(b[i].x>>16)+1]++;\n\tfor (register int i=1; i<=0xffff; i++)\n\t\tT[i]+=T[i-1];\n\tfor (register int i=1; i<=N; i++)\n\t\td[++T[(b[i].x>>16)]]=b[i];\n}\n\nint main()\n{\n    read(N); read(D);\n\tfor (register int i=1; i<=N; i++)\n\t\tread(d[i].x), read(d[i].h);\n\tRsort();//\u57fa\u6570\u6392\u5e8f\n\tfor (register int i=1; i<=N; i++)\n\t{\n\t\twhile (L<=R && d[Q[R]].h<d[i].h) R--;//\u5f53\u524d\u7684\u5976\u725b\u4e0d\u591f\u9ad8\uff0c\u51fa\u961f\n\t\twhile (L<=R && d[Q[L]].x<d[i].x-D) L++;//\u6700\u9ad8\u6700\u9760\u5de6\u7684\u5976\u725b\u8ddd\u79bb\u592a\u8fdc\uff0c\u51fa\u961f\n\t\tQ[++R]=i;//\u73b0\u5728\u7684\u5976\u725b\u5165\u961f\n\t\tif (d[Q[L]].h>=(d[i].h<<1)) ans[i]++;//\u5982\u679c\u6700\u9ad8\u7684\u725b\u9ad8\u4e8e\u5f53\u524d\u7684\u725b2\u500d\u5219ans++;\n\t}\n\tmemset(Q,0,N<<2); L=1; R=0;//\u91cd\u7f6e\uff0c\u91cd\u65b0\u8ba1\u6570\n\tfor (register int i=N; i>=1; i--)\n\t{//\u539f\u7406\u540c\u4e0a\uff0c\u7b26\u53f7\u7a0d\u6709\u53d8\u52a8\n\t\twhile (L<=R && d[Q[R]].h<d[i].h) R--;\n\t\twhile (L<=R && d[Q[L]].x>d[i].x+D) L++;\n\t\tQ[++R]=i;\n\t\tif (d[Q[L]].h>=(d[i].h<<1)) ans[i]++;//\u82e5ans\u4e3a2\u5219\u8be5\u5976\u725b\u5bf9\u7b54\u6848\u6709\u8d21\u732e\n\t}\n\tfor (register int i=1; i<=N; i++)\n\t\t(*ans)+=(ans[i]>>1);//\u6211\u7528ans[0]\u7edf\u8ba1\u7b54\u6848\uff08\u76ae\uff09\n\tprintf(\"%d\\n\",*ans); return 0;\n}\n```\n\n",
        "postTime": 1546663185,
        "uid": 73489,
        "name": "NyaRu_Official",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3088 \u3010[USACO13NOV]\u6324\u5976\u725bCrowded Cows\u3011"
    },
    {
        "content": "\u770b\u5230\u697c\u4e0b\u90fd\u662f\u5355\u8c03\u961f\u5217/set\u7684\u505a\u6cd5\uff0c\u5c45\u7136\u6ca1\u6709\u4f18\u5148\u961f\u5217\u7684\uff0c\u672c\u849f\u84bb\u6765\u4e00\u53d1\u3002\n\n\u4e3b\u8981\u662f\u6b63\u53cd\u4e24\u8fb9\u8fc7\u6765\u626b\u4e00\u904d\uff0c\u5224\u65ad\u8fd9\u4e2a\u70b9\u662f\u5426\u7b26\u5408\u3002\n\nTalk is easy.AC code: \n\n```cpp\n#include<cstdio>\n#include<queue>\n#include<map>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\n#define maxn 50000+10 \n#define P(x,y) make_pair(x,y)\nstruct Heapnode{\n    int x,h;\n}e[50000+10];\nint n,d,ans;\nshort a[maxn];\npriority_queue<pair<int,int> >Q;\nint read()\n{\n    char r=1;int s=0;\n    char c=getchar();\n    while((c<'0'||c>'9')&&c!='-')c=getchar();\n    if(c=='-'){r=-1;c=getchar();}\n    while(c>='0'&&c<='9')s=(s<<1)+(s<<3)+(c^'0'),c=getchar();\n    return s*r;\n}\ninline bool cmp(const Heapnode &a,const Heapnode &b){return a.x<b.x;}\n\nint main()\n{\n    n=read();d=read();\n    for(int i=1;i<=n;i++)e[i].x=read(),e[i].h=read();\n    sort(e+1,e+1+n,cmp);//\u6392\u5e8f\n    //\u6b63\u5411\u5224\u65ad\u662f\u5426\u5728\u5de6\u8fb9\u6709\u6ee1\u8db3\u7684\u70b9\n    for(int i=1;i<=n;i++)\n    {\n        while(!Q.empty()&&e[i].x-Q.top().second>d)  Q.pop();//\u8d85\u51fad\u8303\u56f4\u7684\u51fa\u961f\n        if(!Q.empty()&&Q.top().first>=e[i].h*2) a[i]=true;//\u6ce8\u610f\uff1a\u4e00\u5b9a\u8981\u961f\u5217\u975e\u7a7a\uff0c\u5426\u5219\u6ca1\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u725b\n        Q.push(P(e[i].h,e[i].x));//\u6ce8\u610f\u987a\u5e8f\n    }\n    while(!Q.empty() )Q.pop(); //\u6e05\u961f\n    //\u53cd\u5411\u8fc7\u6765\u505a\uff0c\u601d\u60f3\u8ddf\u4e0a\u4e00\u6bb5\u5927\u81f4\u4e00\u6837\uff0c\u4f46\u4e5f\u6709\u4e0d\u540c\n    for(int i=n;i>=1;i--)\n    {\n        while(!Q.empty()&&abs(e[i].x-Q.top().second)>d) Q.pop();//\u6ce8\u610f\u662f\u7edd\u5bf9\u503c\uff0c\u56e0\u4e3a\u6b64\u65f6\u662f\u5c0f\u51cf\u5927\n        if(!Q.empty()&&Q.top().first>=e[i].h*2)a[i]=a[i]&&1;//\u8981\u4e24\u8fb9\u90fd\u6ee1\u8db3\u624d\u884c\n        else a[i]=0;//\u8fd9\u4e00\u884c\u4e0d\u8981\u6f0f\uff0c\u5c0f\u5fc3\n        Q.push(P(e[i].h,e[i].x));\n    }\n    for(int i=1;i<=n;i++)ans+=a[i];\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1533363528,
        "uid": 43620,
        "name": "Michael123456",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3088 \u3010[USACO13NOV]\u6324\u5976\u725bCrowded Cows\u3011"
    },
    {
        "content": "## \u601d\u8def\n\n\n\u8fd9\u9898\u5176\u5b9e\u6709\u5f88\u591a\u65b9\u6cd5\uff0c\u4f46\u662f\u6211\u6700\u5148\u60f3\u5230\u7684\u662f\u6309\u7167\u5976\u725b\u7684\u9ad8\u5ea6\u6392\u5e8f\u5904\u7406\u3002\u800c\u4e14\u8fd9\u79cd\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u505a\u88ab\u56f0\u5728\u5e72\u8349\u5806\uff08\u91d1\uff09\u3002\n\n\n\u9996\u5148\u6309\u7167\u5976\u725b\u7684\u9ad8\u5ea6\u964d\u5e8f\u6392\u5e8f\uff0c\u5728\u5904\u7406\u4e00\u53ea\u5976\u725b\u65f6\uff0c\u628a\u5927\u4e8e\u7b49\u4e8e\u5b83\u7684\u9ad8\u5ea6\u76842\u500d\u7684\u5976\u725b\u7684\u4f4d\u7f6e\u653e\u8fdbset\u4e2d\uff0c\u518d\u5224\u65ad\u4e00\u4e0bset\u4e2d\u7684\u4f4d\u7f6e\u5728\u5f53\u524d\u5976\u725b\u4e24\u8fb9\u7684\u4f4d\u7f6e\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8ed\uff0c\u8ba1\u5165\u7b54\u6848\u5373\u53ef\u3002\n\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(N\\log N)$\uff0c\u4e0e\u5176\u4ed6\u65b9\u6cd5\u76f8\u540c\uff0c\u4f46\u5e38\u6570\u6bd4\u5355\u8c03\u961f\u5217\u5927\u3002\u56e0\u4e3a\u540e\u8005\u53ea\u8981\u7528\u5230sort\uff0c\u6bd4set\u5e38\u6570\u5c0f\u5f97\u591a\u3002\n\n\n## \u4ee3\u7801\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=50005;\npair<int,int> cow[N];\nint main()\n{\n    int n,d;\n    cin>>n>>d;\n    for(int i=1;i<=n;i++)\n        cin>>cow[i].second>>cow[i].first;\n    sort(cow+1,cow+n+1);\n    set<int> pos;\n    int j=n,ans=0;\n    for(int i=n;i;i--)\n    {\n        for(;j&&cow[j].first>=cow[i].first*2;j--)\n            pos.insert(cow[j].second);\n      //\u63d2\u5165\u9ad8\u5ea6\u5927\u4e8e\u7b49\u4e8e\u5f53\u524d\u9ad8\u5ea62\u500d\u7684\u5976\u725b\n        set<int>::iterator it=pos.lower_bound(cow[i].second);\n      //\u627e\u5230\u53f3\u8fb9\u7684\u5976\u725b\n        ans+=it!=pos.end()&&*it-cow[i].second<=d&&it--!=pos.begin()&&cow[i].second-*it<=d;\n      //\u5224\u65ad\u4e24\u8fb9\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n```",
        "postTime": 1497493908,
        "uid": 9406,
        "name": "zhzh2001",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3088 \u3010[USACO13NOV]\u6324\u5976\u725bCrowded Cows\u3011"
    },
    {
        "content": "stl\u5927\u6cd5\u597d\n\n\n\u641e\u4e24\u4e2amultiset\uff0c\u8bb0\u4e3a\u5de6\u8fb9\u7684\u70b9\u548c\u53f3\u8fb9\u7684\u70b9\uff0c\u5de6\u8fb9\u7684\u96c6\u5408\u4e0d\u65ad\u5220\u70b9\uff0c\u53f3\u8fb9\u7684\u4e0d\u65ad\u5165\u70b9\uff0c\u6bcf\u6b21\u5224\u65ad\u4e0b\u662f\u5426crowded\u3002\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\npair<int,int> q[50050];\nmultiset<int > x,y;\nint main(){\n    int n,d;\n    scanf(\"%d%d\",&n,&d);\n    for (int i=0;i<n;i++)\n        scanf(\"%d%d\",&q[i].first,&q[i].second);\n    sort(q,q+n);\n    int k=0,j=0,ans=0;\n    for (int i=0;i<n;i++){\n        while (k<n && q[i].first+d>=q[k].first)\n            y.insert(q[k++].second);\n        while (q[i].first-d>q[j].first)\n            x.erase(x.find(q[j++].second));\n        x.insert(q[i].second);\n        if (*--x.end()>=q[i].second*2 && *--y.end()>=q[i].second*2) \n            ans++;\n        y.erase(y.find(q[i].second));\n    }\n    cout<<ans;\n    return 0;\n}\n```",
        "postTime": 1474026139,
        "uid": 775,
        "name": "Expecto",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3088 \u3010[USACO13NOV]\u6324\u5976\u725bCrowded Cows\u3011"
    },
    {
        "content": "\u697c\u4e0bdalao\u4eec\u7684\u65b9\u6cd5\u5b9e\u5728\u662f666~\n\n\u4f5c\u4e3a\u849f\u84bb\u7684\u6211\u5c45\u7136\u7528\u679a\u4e3e\u8fc7\u4e86\u8fd9\u9053\u9898\uff08\u60f3\u7ec3\u7b97\u6cd5\u7684dalao\u4eec\u8bf7\u89c1\u697c\u4e0b\uff09\n\n\u4ee3\u7801:\n\n```cpp\nvar x,h:array[1..500000]of longint;\n    a,b:array[1..500000]of boolean;\n    n,i,m,ans,j:longint;\nprocedure sort(l,r:longint);\nvar i,j,k,y:longint;\nbegin\n  i:=l;\n  j:=r;\n  k:=h[(i+j)div 2];\n  repeat\n    while h[i]>k do\n      inc(i);\n    while h[j]<k do\n      dec(j);\n    if i<=j then\n    begin\n      y:=h[i];\n      h[i]:=h[j];\n      h[j]:=y;\n      y:=x[i];\n      x[i]:=x[j];\n      x[j]:=y;\n      inc(i);\n      dec(j);\n    end;\n  until i>j;\n  if i<r then sort(i,r);\n  if l<j then sort(l,j);\nend;\nbegin\n  readln(n,m);\n  fillchar(a,sizeof(a),false);\n  fillchar(b,sizeof(b),false);\n  for i:=1 to n do//\u8bfb\u5165\uff0c\u5c31\u4e0d\u63d0\u4e86\n    readln(x[i],h[i]);\n  sort(1,n);//\u6309\u7167\u8eab\u9ad8\u5bf9\u725b\u725b\u4eec\u6392\u5e8f\n  for i:=1 to n do//\u679a\u4e3e\u6bcf\u4e00\u5934\u725b\n    for j:=1 to i-1 do//\u679a\u4e3e\u6240\u6709\u6bd4 i \u725b\u9ad8\u7684\u725b\n    begin\n      if h[j]<2*h[i] then break;//\u5982\u679c\u5f53\u524d \u725b\u4e0d\u80fd\u6bd4 i \u725b\u7684\u4e24\u500d\u9ad8\uff0c\u90a3\u540e\u9762\u7684\u725b\u66f4\u4e0d\u53ef\u80fd\n      if abs(x[i]-x[j])<=m then//\u5224\u65ad\u662f\u5426\u5728\u8303\u56f4\u5185\n      begin\n        if x[i]>x[j] then b[i]:=true;//\u5224\u65ad\u5728\u5de6\u8fb9\u8fd8\u662f\u5728\u53f3\u8fb9\n        if x[i]<x[j] then a[i]:=true;\n      end;\n      if (a[i])and(b[i]) then//\u5982\u679c\u5de6\u53f3\u90fd\u6709\u5c31\u7d2f\u52a0\uff0c\u67e5\u627e\u4e0b\u4e00\u5934\u725b\n      begin\n        inc(ans);\n        break;\n      end;\n    end;\n  writeln(ans);//\u8f93\u51fa\uff0chehehe\nend.\n\n```",
        "postTime": 1502508434,
        "uid": 29245,
        "name": "Henry_he",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3088 \u3010[USACO13NOV]\u6324\u5976\u725bCrowded Cows\u3011"
    }
]