[
    {
        "content": "    \u4e00\u9053\u5bf9\u840c\u65b0\u975e\u5e38\u53cb\u597d\u7684\u7ebf\u6bb5\u6811\uff0c\u7b80\u660e\u6613\u61c2\uff0c\u867d\u7136\u7528\u4e0d\u5230lazy tag,\u4f46\u53ef\u4ee5\u4e30\u5bcc\u7ebf\u6bb5\u6811\u7684\u7528\u6cd5\n    \n#### \u9996\u5148\uff0c\u6211\u4eec\u7b80\u5316\u4e00\u6ce2\u9898\u610f\uff1a\n   \u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4\u7684\u6700\u5927\u503c\uff0c\u6709n\u4e2a\u4fee\u6539\u64cd\u4f5c\uff0c\u8bb0\u5f55\u6700\u5927\u503c\u7684\u53d8\u5316\u60c5\u51b5\uff08\u5373\u66f4\u6362\u7167\u7247\uff09\u3002\n   \n   ps:\u201c\u53d8\u5316\u201d\u306e\u610f\u4e49\uff1arank1\u7684\u725b\u4e0d\u540c\u4e86\uff08\u591a\u4e86/\u5c11\u4e86/\u725b\u53d8\u4e86\uff09\n   \n   ~~pps\uff1aFJ\u771f\u65e0\u804a\uff0c\u7ade\u4e89\u4f7f\u725b\u900f\u652f~~\n   \n   \n   \u663e\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u8fd9\u4e2a\u91cf\n   \n   \u4f46\u662f\uff0c\u6211\u4eec\u8981\u8f93\u51fa\u7684\u662f\u53d8\u5316\u7684\u6b21\u6570\uff0c\u6240\u4ee5\u80af\u5b9a\u8981\u5224\u5b9a\u201c\u53d8\u5316\u201d\n   \n### \u5206\u7c7b\u8ba8\u8bba\uff1a\n\t\u7531\u4e8e\u4e00\u6b21\u53ea\u4fee\u6539\u4e00\u4e2a\u503c\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u5982\u4e0b\u5206\u7c7b\n\t\n##### 1.rk1\u4ea7\u5976\u91cf\u53d8\u5316\u4e86\uff08\u539f\u6765\u7684rk1\u4e0d\u4e00\u5b9ark1\u4e86\uff09\n\t   \uff081\uff1ark1\u8fd8\u662f\u90a3\u5934\u725b\uff08\u4e0d\u662f\u53d8\u5316\uff09\n       \uff082\uff1ark1\u4e0d\u662f\u90a3\u5934\u725b\uff08\u663e\u7136\u8981\u6362\u7167\u7247\uff01\uff09\n       \uff083\uff1ark1\u6570\u91cf\u53d8\u591a\uff08rk1\u6389\u5206\u4e86\uff0c\u548c\u540e\u9762\u7684\u725b\u5e76\u5217\uff09\n   \n   \u663e\u7136\uff0c\u6211\u4eec\u4e0d\u80fd\u591f\u9760\u53ea\u8bb0\u5f55rk1\u7684\u503c\u6765\u5224\u65ad\u53d8\u5316\n   \n   \u9488\u5bf9\uff081\u3001\uff082 \u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u8bb0\u5f55\u4e00\u4e0brk1\u7684\u725b\u7684\u7f16\u53f7\u6765\u5b9e\u73b0\n   \n   \u800c\uff083 \u60c5\u51b5\u7528\u524d\u4e24\u4e2a\u503c\u597d\u50cf\u5e76\u4e0d\u80fd\u7ef4\u62a4\uff0c\u6240\u4ee5\u8fd8\u662f\u518d\u8bb0\u5f55\u4e00\u4e0brk1\u7684\u6570\u91cfcnt\u5373\u53ef\n \n##### 2.rk1\u4ea7\u5976\u91cf\u6ca1\u53d8\uff08\u539f\u6765\u7684rk1\u8fd8\u662frk1\uff09\n\t   \uff081\uff1ark1\u6570\u91cf\u6ca1\u53d8\uff08\u4e0d\u662f\u53d8\u5316\uff09\n       \uff082\uff1ark1\u6570\u91cf\u53d8\u4e86\uff08\u4e0b\u9762\u7684\u725b\u594b\u8d77\u76f4\u8ffd\uff0c\u8981\u591a\u6302\u7167\u7247\uff0c\u6240\u4ee5\u53d8\u5316\uff09\n   \n   \u4e0a\u9762\u4e24\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u7528cnt\u6765\u641e\u5b9a\n   \n\u6240\u4ee5\uff0c\u6211\u4eec\u53ea\u8981\u7ef4\u62a4\u4e09\u4e2a\u91cf maxn(rk1\u4ea7\u5976\u91cf)\uff0ccnt\uff08rk1\u7684\u725b\u6570\uff09\uff0crank1\uff08rk1\u7684\u7f16\u53f7\uff09\u5373\u53ef\uff01\n\n~~~cpp\nstruct Point{\n\tll maxn,cnt,rank1;\n   \t//rank1 \u662f rank1\u7684\u5976\u725b\u7f16\u53f7 \n\t//maxn \u662frank1\u5976\u725b\u7684\u4ea7\u91cf\uff0ccnt\u662frank1\u7684\u6570\u91cf \n\tll l,r;\n}tree[MAXN<<2];\n\n~~~\n\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u6211\u4eec\u719f\u6089\u7684\u7ebf\u6bb5\u6811\u4e86\uff0c\u6ce8\u610f\u8981\u5728\u5efa\u6811\u7684\u65f6\u5019\u521d\u59cb\u5316\u4e09\u4e2a\u503c\uff01\n\n##### \u6bcf\u4e00\u9053\u7ebf\u6bb5\u6811\u90fd\u6709\u5b83\u7684\u7279\u8272\uff1a\u4f53\u73b0\u5728push_down()\u548cpush_up()\uff0c\u5f80\u5f80\u60f3\u597d\u8981\u7ef4\u62a4\u7684\u503c\u548c\u8fd9\u4e24\u4e2a\u51fd\u6570\uff0c\u8fd9\u9053\u7ebf\u6bb5\u6811\u5c31\u6ca1\u4ec0\u4e48\u95ee\u9898\u4e86\n\n\u53d1\u73b0\u9898\u76ee\u4e2d\u90fd\u662f\u5355\u70b9\u4fee\u6539\uff0c\u90a3......\n\n##### ~~push_down()\uff0c\u6211\u8981\u4f60\u6709\u4f55\u7528\uff01\uff01\uff01~~\n\n~~\u5f53\u7136\uff0c\u7ebf\u6bb5\u6811\u4e0d\u9700\u8981push_down()\u4e5f\u662f\u7279\u8272~~\n\n\u6240\u4ee5\uff0c\u6838\u5fc3\u5728\u4e8epush_up()\u7684\u64cd\u4f5c\uff0c\u5efa\u8bae\u5148\u81ea\u5df1\u60f3\uff0c\u518d ~~\u7ed3\u5408\u6ce8\u91ca~~ \u98df\u7528\n\npush_up\u7684\u4ee3\u7801\u5728\u8fd9\u5566\n\n~~~cpp\nvoid push_up(ll x){\n\tif(tree[x<<1].maxn>tree[x<<1|1].maxn){//\u5de6\u5b50\u6811\u7684maxn>\u53f3\u5b50\u6811\u7684maxn\uff0c\u7edf\u7edf\u63a5\u53d7\u5de6\u5b69\u5b50\n\t\ttree[x].cnt=tree[x<<1].cnt;\n\t\ttree[x].maxn=tree[x<<1].maxn;\n\t\ttree[x].rank1=tree[x<<1].rank1;\n\t}\n\tif(tree[x<<1].maxn<tree[x<<1|1].maxn){//\u540c\u4e0a\n\t\ttree[x].cnt=tree[x<<1|1].cnt;\n\t\ttree[x].maxn=tree[x<<1|1].maxn;\n\t\ttree[x].rank1=tree[x<<1|1].rank1;\n\t}\n\tif(tree[x<<1].maxn==tree[x<<1|1].maxn){//\u76f8\u7b49\u7684\u60c5\u51b5\uff0c\u7ed3\u5408\u53d6\u7528\n\t\ttree[x].cnt=tree[x<<1].cnt+tree[x<<1|1].cnt;\n\t\ttree[x].maxn=tree[x<<1].maxn;\n\t\ttree[x].rank1=tree[x<<1].rank1;//\u6211\u4eec\u53d6\u6700\u5de6\u4fa7\u7684rk1\u7f16\u53f7\uff0c\u6bd4\u8f83\u65b9\u4fbf\n\t}\n}\n~~~\n\n\u7ebf\u6bb5\u6811\u677f\u5b50\u6572\u4e00\u6572\uff0cupdate()\u5199\u4e2a\u5355\u70b9\u4fee\u6539\uff0c\u8fdequery()\u90fd\u4e0d\u7528\uff08\u76f4\u63a5\u8c03\u7528\u5168\u533a\u95f4\u7684\u5c31\u884c\uff09\uff0c\u5403\u4e2amain\u5305\uff0c\n~~\u6b64\u9898AC!~~ \n\n\u56de\u7738\u4e00\u770b\uff1a\n\n#### 1.\u5976\u725b\u7684\u7f16\u53f7\uff08\u5728\u6574\u65701...1e9\u8303\u56f4\u5185\uff09\n\n~~\u6084\u6084\u7b97\u4e00\u4e0b\uff0c\u5f0010^9<<2\u8fd9\u4e48\u5927\uff0c\u5b8c\u728a\u5b50\u4e86~~\n\nbut,1\u2264N\u2264100,000\uff0c\u6240\u4ee5\u6700\u591a\u4e5f\u5c31\u4fee\u65391e5\u53ea\u725b\n\n#### \u6240\u4ee5\u79bb\u6563\u5316\u4e00\u4e0b\uff0c\u7ebf\u6bb5\u6811\u5f00\u52301e5<<2\u5c31\u597d\u5566\uff01\n\n#### \u7a81\u7136\uff0c\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a ~~\u5929\u5927\u7684~~ \u9505\uff1a\n\t\u5982\u679c\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u51cf\u5c11\u4e86\u67d0\u4e2a\u725b\u7684\u4ea7\u5976\u91cf\uff0c\u4e0d\u4e5f\u8981\u4fee\u6539\u5417\uff1f\u6309\u6211\u4eec\u8fd9\u79cd\u505a\u6cd5\uff0c\u663e\u7136\u4f1a\u6302\n    \n   \u6240\u4ee5\uff0c\u6211\u4eec\u60f3\u529e\u6cd5\u628a\u539f\u59cb\u7684\u503c\u7ed9\u653e\u8fdb\u53bb\n   \n   ~~\u5f00 \u65e0\u9650\u5927<<2 \u7684\u7ebf\u6bb5\u6811\uff01~~\n   \n#####   \u6211\u4eec\u53ef\u4ee5\u7ed9\u8fd9\u4e9b\u521d\u59cb\u7684\u725b\u5f00\u4e00\u4e2a\u865a\u70b9\u4ee3\u8868\u4e00\u4e0b\n#####   \u6ca1\u9519\uff0c\u5c31\u8fd9\u4e2a0\u53f7\u725b\uff0c\u4f60\u4ee3\u8868\u4e86\u65e0\u6570\u725b\u6c11\u7684 ~~\u610f\u5fd7~~ \u4ea7\u5976\u91cf\uff01\uff01\uff01\n\n\u52a0\u4e0a\u8fd9\u4e2a\u865a\u725b\uff0c\u5403\u4e00\u53e3main\u5305\uff0c\u672c\u9898\u5c31\u6109\u5feb\u5730AC\u5566\uff01\n\nps: \u5728\u5224\u5b9a\u7684\u90e8\u5206\uff0c\u53ef\u4ee5\u770b\u4e00\u770b\u4e0a\u65b9\u7684\u5206\u6790\uff0c\u5f88\u7b80\u5355\u7684\n\n\n\u4ee3\u7801\u6254\u5728\u4e0b\u9762\u5566\n~~\u4f60\u4eec\u6700\u559c\u6b22\u7684\u90e8\u5206~~\n~~~cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define MAXN 100010\nusing namespace std;\n\nstruct node{\n\tll x,date,diet,nx;\n}change[MAXN];\n\nstruct Point{\n\tll maxn,cnt,rank1;//rank1 \u662f rank1\u7684\u5976\u725b\u7f16\u53f7 \n\t//maxn \u662frank1\u5976\u725b\u7684\u4ea7\u91cf\uff0ccnt\u662frank1\u7684\u6570\u91cf \n\tll l,r;\n}tree[MAXN<<2];\n\nll n,m,ans,len;\n\nbool cmp1(node x,node y){return x.x<y.x;}\nbool cmp2(node x,node y){return x.date<y.date;}\n\nvoid push_up(ll x){\n\tif(tree[x<<1].maxn>tree[x<<1|1].maxn){\n\t\ttree[x].cnt=tree[x<<1].cnt;\n\t\ttree[x].maxn=tree[x<<1].maxn;\n\t\ttree[x].rank1=tree[x<<1].rank1;\n\t}\n\tif(tree[x<<1].maxn<tree[x<<1|1].maxn){\n\t\ttree[x].cnt=tree[x<<1|1].cnt;\n\t\ttree[x].maxn=tree[x<<1|1].maxn;\n\t\ttree[x].rank1=tree[x<<1|1].rank1;\n\t}\n\tif(tree[x<<1].maxn==tree[x<<1|1].maxn){\n\t\ttree[x].cnt=tree[x<<1].cnt+tree[x<<1|1].cnt;\n\t\ttree[x].maxn=tree[x<<1].maxn;\n\t\ttree[x].rank1=tree[x<<1].rank1;\n\t}\n}\n\nvoid build(ll l,ll r,ll x){\n\ttree[x].l=l,tree[x].r=r;\n\tlen=max(len,x);\n\tif(l==r){\n\t\ttree[x].maxn=m;\n\t\ttree[x].cnt=1;\n\t\ttree[x].rank1=l;\n\t\treturn ;\n\t}\n\tll mid=l+r>>1;\n\tbuild(l,mid,x<<1);\n\tbuild(mid+1,r,x<<1|1);\n\tpush_up(x);\n}\n\nvoid update(ll nl,ll nr,ll l,ll r,ll x,ll k)\n{\n\tif(nl==l&&nr==r){\n\t\ttree[x].maxn+=k;//\u5355\u70b9\u4fee\u6539\uff0c\u66b4\u529b\u6539\u6389\u5c31\u597d\u5566\uff01\n\t\treturn; \n\t}\n\tll mid=l+r>>1;\n\tif(nl<=mid)update(nl,nr,l,mid,x<<1,k);\n\tif(nr>mid)update(nl,nr,mid+1,r,x<<1|1,k);\n\tpush_up(x);\n}\n\nint main(){\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>change[i].date>>change[i].x>>change[i].diet;\n\t}\n\tchange[++n].x=0,change[n].date=0;\n\tchange[n].nx=0,change[n].diet=0;//\u8bbe\u4e86\u4e00\u4e2a\u5947\u5999\u7684\u865a\u725b\uff0c\u4ece\u6765\u4e0d\u53d8 \n\tsort(change+1,change+n+1,cmp1);//\u6309\u5e8f\u53f7\u6392\u5e8f \n\t\n\tint tag=0;\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\tif(change[i].x!=change[i-1].x)\n\t\t\ttag++;\n\t\tchange[i].nx=tag;//\u79bb\u6563\u5316\n\t}\n\tbuild(0,tag,1);\n\tsort(change+1,change+n+1,cmp2);//\u6309\u65f6\u95f4\u6392\u5e8f \n\t\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint u=tree[1].cnt,v=tree[1].rank1;//\u5148\u8bb0\u5f55\u4e00\u6ce2\u539f\u6765\u7684\u503c\n\t\tupdate(change[i].nx,change[i].nx,0,tag,1,change[i].diet); \n\t\tif(tree[1].cnt!=u)ans++;\n\t\t//\u56e0\u4e3a\u4e00\u6b21\u53ea\u4fee\u6539\u4e00\u53ea\u725b\uff0c\u90a3\u4e48\u5224\u65ad rank1\u6570\u91cf\u53d8\u5316\u5373\u53ef \n\t\telse if(tree[1].rank1!=v)ans++;\n       \t\t//rk1\u6362\u725b\u4e86\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n\n~~~\n##### \u5b8c\u7ed3\u6492\u82b1\uff01 \\\uff08^~^\uff09/\n",
        "postTime": 1566737401,
        "uid": 68824,
        "name": "\u4e16\u58a8",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4087 \u3010[USACO17DEC]Milk Measurement\u3011"
    },
    {
        "content": "\n## \u601d\u8def\u6982\u62ec\n\n- \u4ece\u9898\u76ee\u9700\u6c42\u5165\u624b\uff0c\u8981\u60f3\u80fd\u5f97\u5230\u662f\u5426\u8981\u66f4\u6362\u6bcf\u5929\u7684\uff0c\u5fc5\u987b\u8981\u77e5\u9053\u6bcf\u5929\u54ea\u4e9b\u725b\u6700\u5f3a\u3002\n\n- \u63d0\u4f9b\u7ed9\u6211\u4eec\u7684\u6570\u636e\u6709\u6bcf\u5929\u6bcf\u5934\u725b\u4ea7\u5976\u91cf\u53d8\u5316\u548c\u4e00\u5f00\u59cb\u521d\u59cb\u503c\uff08\u6ca1\u6709\u4ec0\u4e48\u5375\u7528\u7684\u521d\u503c\uff09\n\n- **\u6bcf\u5929\u53ea\u4f1a\u6709\u4e00\u5934\u725b\u4ea7\u5976\u91cf\u53d8\u5316**\uff0c\u7ed9\u6211\u4eec\u4e4b\u540e\u7684\u5b9e\u73b0\u5e26\u6765\u4e86\u5f88\u5927\u65b9\u4fbf\uff08\u770b\u5b8c\u4e4b\u540e\u53ef\u4ee5\u5148\u60f3\u60f3\u5982\u679c\u6bcf\u5929\u4e0d\u6b62\u4e00\u5934\u5976\u725b\u53d8\u5316\u4f1a\u600e\u4e48\u6837\uff09\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u8981\u77e5\u9053\u5728\u4e0d\u65ad\u66f4\u66ff\u7684\u5976\u725b\u4ea7\u91cf\u4fe1\u606f\u4e2d\uff0c**\u54ea\u4e9b\u5976\u725b\u7684\u4ea7\u91cf\u6700\u9ad8**\u3002\u5f53\u7136\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u9700\u8981\u4e00\u4e2a\u7b80\u5355\u7684\u6570\u636e\u7ed3\u6784\u3002\n\n1. \u624b\u5199\u4e8c\u53c9\u5806\uff0c\u7ef4\u62a4\u6700\u5927\u7684\u4ea7\u5976\u91cf\u3002\uff08\u56e0\u4e3a\u9700\u8981\u5220\u9664\u4efb\u610f\u8282\u70b9\u800c\u65e0\u6cd5\u4f7f\u7528\u4f18\u5148\u961f\u5217\uff09\n2. \u5e73\u8861\u6811\uff0c\u7ef4\u62a4\u5bf9\u8c61\u540c\u4e0a\u3002\uff08\u652f\u6301\u4efb\u610f\u5220\u9664\u8282\u70b9\uff09\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u5f53\u7136\u9009\u62e9\u53ef\u4ee5\u5c01\u88c5\u597dRB-Tree\u800c\u4e14\u8c03\u7528\u65b9\u4fbf\u7684Map\u6765\u5077\u61d2\u3002\n\n## \u5b9e\u73b0\u8fc7\u7a0b\n\n- \u56e0\u6570\u636e\u63d0\u4f9b\u7684\u5976\u725bID\u6570\u5b57\u8fc7\u5927 ($1 \\leq I \\leq 10^9$)\uff0c\u800c\u5b9e\u9645\u5976\u725b\u6700\u5927\u6570\u76ee\u4e0d\u5927($1 \\leq N \\leq 10^6$)\uff0c**\u6240\u4ee5\u9700\u8981\u8bfb\u5165\u5b8c\u6210\u540e\u79bb\u7ebf\u79bb\u6563\u5316ID**\u3002\n\n- \u521d\u59cb\u5316\u503cG\u7684\u591a\u5c11\u6beb\u4e0d\u5f71\u54cd\u6392\u540d\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u8bb0\u5f55\u5976\u725b\u7684\u4ea7\u91cf\u53d8\u5316\u91cf\uff08\u4ee5\u4e0b\u7b80\u79f0\u201c\u4ea7\u91cf\u201d\uff09\n\n- \u5c06\u8bb0\u5f55\u6570\u636e\u4eec\u6309\u7167\u5176\u65e5\u671f\u5347\u5e8f\u4e00\u4e2a\u4e00\u4e2a\u5904\u7406\uff0c\u7edf\u8ba1\u6709\u51e0\u5929rank1\u7684\u5976\u725b\u53d8\u5316\u4e86\u3002\n\n ### \u7edf\u8ba1\u7ec6\u8282\n 1. \u521d\u59cb\u5316\u3002\u5efa\u7acb\u4e00\u4e2a$10^6$\u5927\u7684\u8fde\u7eed\u7a7a\u95f4\uff0c\u5b58\u50a8\u79bb\u6563\u5316\u540eID\u5bf9\u5e94\u5976\u725b\u7684\u4ea7\u91cf\u4fe1\u606f\u3002\u5efa\u7acb\u4e00\u4e2aMap\uff0c\u5b58\u50a8\u6bcf\u79cd\u4ea7\u91cf\u6570\u503c\u6709\u591a\u5c11\u5934\u725b\u4e0e\u4e4b\u5bf9\u5e94\u3002\n\n   \u521d\u59cb\u5316Map\u65f6\uff0c\u6ce8\u610f**\u8981\u7ed9\u5904\u4e8e\u4ea7\u91cf\u4e3a0\u7684\u5976\u725b\u6570\u591a\u52a0\u4e00\u4e2a**\uff0c\u9898\u610f\u63cf\u8ff0\u4e2d\uff0c\u8fd8\u6709\u5f88\u591a\u6bcf\u5929\u6beb\u4e0d\u53d8\u5316\u7684\u5976\u725b\uff0c\u8981\u5206\u914d\u4e00\u4e2a\u54e8\u5175\u53bb\u5145\u5f53\u8fd9\u7fa4\u5976\u725b\uff0c\u7406\u7531\u81ea\u884c\u601d\u8003\u3002\n \n 2. \u5c06\u8fd9\u5934\u725b\u7684\u4ea7\u91cf\u4fe1\u606f\u4fee\u6539\uff0c\u5e76\u4e14\u5c06\u4fee\u6539\u5e94\u7528\u5230map\u4e2d\u3002\u539f\u6765\u7684map[\u4ea7\u91cf\u6570\u503c]--\uff0c\u65b0\u7684map[\u4ea7\u91cf\u6570\u503c]++\u3002\n \uff08\u5982\u679c\u6b64\u4ea7\u91cf\u6570\u503c\u5df2\u7ecf\u6ca1\u6709\u4efb\u4f55\u4e00\u53ea\u725b\uff0c**\u8bf7\u5c06\u8fd9\u4e2a\u8282\u70b9\u5220\u9664**\uff0c\u4ee5\u514d\u5f71\u54cd\u6700\u5927\u503c\u5224\u65ad\uff09\n 3. \u5224\u65ad\u662f\u5426\u9020\u6210\u4e86rank1\u7684\u5976\u725b\u53d8\u5316\u3002\u6211\u4eec\u4ee5\u4ee5\u4e0b\u6761\u4ef6\u4e3a\u5224\u65ad\u4f9d\u636e\uff1a\n \n   \u2460. \u8fd9\u5934\u5976\u725b\u4ece\u795e\u575b\u4e0a\u8dcc\u4e0b\u4e86\uff0c\u6216\u8005\u767b\u4e0a\u4e86\u795e\u575b\u3002\n   \n   \u2461. \u8fd9\u5934\u5976\u725b\u4ecd\u5728\u795e\u575b\u4e0a\uff0c\u4f46\u662f\u4ed6\u53d8\u83dc\u4e86\u6216\u8005\u53d8\u5f3a\u4e86\uff0c\u591a\u4e86\u6216\u8005\u5c11\u4e86\u51e0\u4f4d\u8ddf\u4ed6\u4e00\u6837\u7684\uff08\u4ed6\u524d\u540e\u6240\u5904\u7684\u4f4d\u7f6e\u4e0a\uff0c\u8ddf\u4ed6\u76f8\u540c\u4ea7\u91cf\u7684\u5976\u725b\u6570\u91cf\u53d8\u5316\u4e86\uff09\n   \n \u53ef\u80fd\u4f60\u4f1a\u95ee\uff0c\u201c\u4e3a\u4ec0\u4e48\u4e0d\u9700\u8981\u628amap\u91cc\u9762\u6bcf\u53ea\u5976\u725b\u7684\u4ea7\u5976\u91cf\u5206\u5f00\uff1f\u201d\uff0c\u5f88\u7b80\u5355\uff0c\u6bcf\u5929\u53ea\u6709\u4e00\u53ea\u5976\u725b\u53d8\u5316\uff0c\u65e0\u8bba\u662f\u54ea\u53ea\u5976\u725b\u53d8\u5316\uff0c\u90fd\u4f1a\u5bf9\u7ed3\u679c\u4ea7\u751f\u5f71\u54cd\uff0c\u800c\u4e14\u5f71\u54cd\u90fd\u662f\u4e00\u6837\u7684\u3002\uff08\u5f53\u7136\u4e5f\u6709\u53ef\u80fd\u6211\u4e00\u4e2a\u4ebazz\u4e86\uff09\n\n\u5982\u679c\u60f3\u8981\u66f4\u76f4\u89c2\u7684\u5224\u65ad\u4f9d\u636e\u5206\u6790\uff0c\u53ef\u4ee5\u770b\u770b[\u8fd9\u7bc7](http://www.cnblogs.com/wsmrxc/p/9439342.html)\n\n\u81f3\u6b64\uff0c\u6211\u5df2\u7ecf\u628a\u6211\u80fd\u8868\u8ff0\u51fa\u6765\u7684\u90fd\u8bf4\u5b8c\u4e86\uff0c\u63a5\u4e0b\u6765\u770b\u6211\u7801\u98ce\u5947du\u7279liu\u4ee3\u7801\u5427\uff01\n\n\n```cpp\n#include <cstdio>\n#include <cctype>\n#include <climits>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n#include <functional>\n#include <map>\nusing namespace std;\ntypedef long long LL;\ninline int readInt(){\n\tint x=0;bool f=0;char c;\n\twhile(!isdigit(c=getchar())) f|=c=='-';\n\twhile(isdigit(c)) {x*=10;x+=c-'0';c=getchar();}\n\treturn f?-x:x;\n}\n\nconst int maxN = 1e5 + 5;\nstruct Query {\n\t//\u5bf9\u5e94\u6539\u53d8\u65e5\u671f\uff0cID\uff0c\u4ea7\u91cf\u53d8\u5316\n\tint date, id, pro;\n\tQuery(int a, int b, int c): date(a), id(b), pro(c) {}\n};\n\nmap<int, int> simMap;//\u7edf\u8ba1\u6a21\u62df\u7528map\nvector<Query> queVec;//\u5b58\u50a8\u8be2\u95ee\nint pro[maxN];\nbool cmpData(const Query a, const Query b) {\n\treturn a.date < b.date;\n}\nbool cmpID(const Query a, const Query b) {\n\treturn a.id < b.id;\n}\nint main() {\n\t// Code by Mxibox\n\tint n = readInt(), g = readInt();\n\t//\u8bfb\u5165\u8bf7\u6c42\n\twhile(n--) {\n\t\tint a = readInt(), \n\t\t\tb = readInt(), \n\t\t\tc = readInt();\n\t\tqueVec.push_back(Query(a, b, c));\n\t}\n\n\t//\u79bb\u6563\u5316ID\uff0c\u4ece0\u5f00\u59cb\n\tsort(queVec.begin(), queVec.end(), cmpID);\n\tint lastRawID = -1, nowID = 0;\n\tfor(vector<Query>::iterator it = queVec.begin(); it != queVec.end(); it++) {\n\t\t//\u7ed9\u5976\u725b\u5206\u914d\u65b0ID\n\t\tif(it->id == lastRawID)\n\t\t\tit->id = nowID-1;\n\t\telse {\n\t\t\tlastRawID = it->id;\n\t\t\tit->id = nowID++;\n\t\t}\n\t}\n\n\t//\u6309\u7167data\u6392\u5e8f\n\tsort(queVec.begin(), queVec.end(), cmpData);\n\t//\u5f00\u59cb\u7edf\u8ba1\n\tsimMap[0] = nowID + 1;//\u521d\u59cb\u5316map\uff0c\u6ce8\u610f+1\u4e2a\u54e8\u5175\n\tint changeNum = 0;\n\tfor(vector<Query>::iterator it = queVec.begin(); it != queVec.end(); it++) {\n\t\tint &pro_ = pro[it->id];//pro\u6307\u7684\u662f\u4ea7\u91cf\n\t\tbool isTopBefore = simMap.rbegin()->first == pro_;//\u5224\u65ad\u6539\u53d8\u524d\u662f\u5426\u662frank1\n\t\tint NumBefore = simMap[pro_];//\u6539\u53d8\u524d\u8fd9\u4e2a\u4ea7\u91cf\u5bf9\u5e94\u4e86\u591a\u5c11\u53ea\u725b\n\t\tsimMap[pro_]--;//\u79fb\u9664\u81ea\u5df1\n\t\tif(!simMap[pro_])\n\t\t\tsimMap.erase(pro_);//\u5220\u96640\u8282\u70b9\uff0c\u907f\u514d\u5f71\u54cd\u6700\u5927\u503c\u7edf\u8ba1\n\n\t\tpro_ += it->pro;//\u5e94\u7528\u66f4\u6539\u5230\u8fde\u7eed\u7a7a\u95f4\u4e2d\n\n\t\tsimMap[pro_]++;//\u7ed9\u65b0\u4ea7\u91cf\u52a0\u4e0a\u81ea\u5df1\n\t\tbool isTopAfter = simMap.rbegin()->first == pro_;//\u6539\u53d8\u540e\u662f\u5426\u662frank1\n\t\tint NumAfter = simMap[pro_];//\u6539\u53d8\u540e\u8fd9\u4e2a\u4ea7\u91cf\u5bf9\u5e94\u4e86\u591a\u5c11\u53ea\u725b\n\n\t\tif(\n\t\t\t(isTopBefore ^ isTopAfter) || //\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u662f\u5426\u4e3arank1\u53d8\u5316\u4e86\uff0c\u5fc5\u7136\u5bfc\u81f4rank1\u5217\u8868\u53d8\u5316\n\t\t\t((isTopBefore && isTopAfter) && (NumBefore != NumAfter)) //\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u7686\u4e3arank1\uff0c\u4f46\u662f\u548c\u81ea\u5df1\u4e00\u6837\u7684\u6570\u91cf\u53d8\u4e86\n\t\t) changeNum++;\n\t}\n\n\tprintf(\"%d\", changeNum);\n\treturn 0;\n}\n\n//e21peXVzZWthaWljaGlrYXdhaWl9\n```\n ",
        "postTime": 1533657845,
        "uid": 82211,
        "name": "_mxi",
        "ccfLevel": 0,
        "title": "P4087 [USACO17DEC]Milk Measurement \u9898\u89e3"
    },
    {
        "content": "\u5e76\u6ca1\u6709\u5f88\u4ed4\u7ec6\u7684\u5361\u5e38\u5c31 rk4 \u4e86\uff0c\u795e\u5947\u2026\u2026\n\n\u6211\u4f7f\u7528\u4e86\u4e00\u79cd\u6bd4\u8f83\u4e11\u964b\u7684\u7ebf\u6bb5\u6811\u5199\u6cd5\u3002\n\n\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u4e2d\u7684\u6bcf\u4e2a\u7ed3\u70b9 $\\rm node$\uff0c\u8bbe $\\rm node.max$ \u8868\u793a\u533a\u95f4\u4e2d\u7684\u6700\u5927\u503c\uff0c$\\rm node.mxcnt$ \u8868\u793a\u533a\u95f4\u4e2d\u6700\u5927\u503c\u7684\u4e2a\u6570\u3002\n\n\u5355\u70b9\u4fee\u6539\u65f6\u81ea\u5e95\u5411\u4e0a\u8fdb\u884c\u3002\u5047\u8bbe\u76ee\u524d\u6211\u4eec\u8981\u7528\u5f53\u524d\u8282\u70b9 $\\rm node$ \u6765\u66f4\u65b0\u7236\u7ed3\u70b9 $\\rm fa$\u3002\u4f60\u53ef\u80fd\u4f1a\u8003\u8651 $\\rm node.max$ \u53d8\u5927/\u53d8\u5c0f\u7684\u60c5\u51b5\uff0c\u4f46\u662f\u66f4\u7b80\u5355\u7684\u601d\u8def\u662f**\u6bd4\u8f83 $\\rm node$ \u548c $\\rm bro$ \u7684 $\\max$\u3002** \n\n\u5177\u4f53\u5199\u6cd5\u8bf7\u770b\u4ee3\u7801\u3002\u95ee\u53f7\u5904\u5e76\u4e0d\u96be\u60f3\uff0c\u8bf7\u81ea\u884c\u89e3\u51b3\u3002\n\n```cpp\nvoid modify(int i, int delta) {\n  node.max += delta;\n  __\u8bb0\u5f55\u4fee\u6539\u524d\u7684\u6811\u6839__\n  for (; i > 1; i >>= 1) {\n    if (node.max < bro.max)\n      fa = bro;\n    if (node.max == bro.max) {\n      fa.mxcnt = node.mxcnt + bro.mxcnt;\n      fa.max = node.max;\n    }\n    if (node.max > bro.max)\n      fa = node;\n  }\n  \u5c06\u65b0\u6811\u6839\u4e0e\u539f\u6811\u6839\u6bd4\u8f83\uff0cif (???)\n    ans++;\n}\n```\n\n\u53e6\u5916\uff0c\u8bc4\u8bba\u533a\u6709\u4e00\u4e2a hack\u3002\u6211\u4eec\u6ce8\u610f\u5230\u9898\u76ee\u6709\u8fd9\u4e48\u4e00\u6bb5\u8bdd\uff1a*\u5c3d\u7ba1\u65e5\u5fd7\u4e2d\u8bb0\u5f55\u4e86\u4e00\u4e9b\u5976\u725b\u6539\u53d8\u4e86\u4ea7\u5976\u91cf\uff0c\u4f46\u4ecd\u7136\u8fd8\u6709\u5f88\u591a\u5976\u725b\u7684\u4ea7\u5976\u91cf\u4fdd\u6301\u5728G\u52a0\u4ed1\u3002*\n\n\u5177\u4f53\u6765\u8bf4\uff0c\u5982\u679c G=3, \u53ea\u6709\u4e00\u5934\u5976\u725b\u7684\u4ea7\u5976\u91cf\u5728\u53d8\u5316\uff0c\u53d8\u5316\u66f2\u7ebf\u4e3a 3\u2192**2**\u21921\u2192**3**\u2192**4**\u21925\u21924\u2192**3**\uff0c\u90a3\u4e48\u9700\u8981\u66f4\u6362\u56db\u6b21\u7167\u7247\u3002\n\n\u6211\u5f00\u59cb\u65f6\u5199\u4e86\u4e00\u4e2a\u5f88\u4e11\u964b\u7684\u5b9e\u73b0\uff1a\n\n```cpp\nif (tmp == 0 && prev > 0 ||\n    tmp == 0 && prev < 0 ||\n    tmp > 0 && prev == 0 ||\n    tmp > 0 && prev  < 0 ||\n    tmp < 0 && prev == 0 ||\n    tmp < 0 && prev  > 0)\n  ans++;\n```\n\n\u7136\u800c\u2026\u2026\u53ea\u7528\u52a0\u4e00\u4e2a\u865a\u70b9\uff08\u6ca1\u6709\u4efb\u4f55\u4fee\u6539\u7684\u70b9\uff09\u5373\u53ef \u2192_\u2192",
        "postTime": 1551612182,
        "uid": 29762,
        "name": "Planet6174",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4087 \u3010[USACO17DEC]Milk Measurement\u3011"
    },
    {
        "content": "## \u5148\u5206\u6790\u4e00\u4e0b\u9898\u610f\uff1a\n\u6709\u4e00\u5806\u725b\uff0c\u4ea7\u5976\u4f1a\u5728\u4e00\u4e2a\u5e38\u6570\u4e0a\u4e0b\u6d6e\u52a8\u3002\u7ed9\u5b9an\u4e2a\u65e5\u671f\u7684\u6539\u53d8\u91cf\uff0c\u5f00\u59cb\u65f6\u5355\u725b\u6700\u5927\u4ea7\u5976\u91cf\u4e3a\u4e00\u4e2a\u5e38\u6570\uff0c\u6c42\u5728\u8fd9\u4e9b\u65e5\u671f\u4e2d\u6700\u5927\u4ea7\u5976\u91cf\u6539\u53d8\u7684\u603b\u6b21\u6570\u3002\n\n###### \u60f3\u6cd5\uff1a\u6211\u53bb\uff0c\u5927\u6a21\u62df\u5440\uff01\n\n\u7136\u540e\u6211\u5c31\u5f00\u59cb\u4e86\u6211\u6f2b\u957f\u7684\u6a21\u62df\u8def\u3002\u3002\u5176\u5b9e\u50cf\u5f88\u591a\u6a21\u62df\u9898\u4e00\u6837\uff0c\u6a21\u62df\u672c\u8eab\u5e76\u4e0d\u96be\uff0c\u9700\u8981\u7684\u6280\u5de7\u5f88\u5c11\uff0c\u4f46\u662f\u5b83\u9700\u8981\u6781\u4e3a\u5f3a\u5927\u7684\u903b\u8f91\u601d\u7ef4\u80fd\u529b\u548c\u4e00\u4e2a\u6ca1\u6709\u574f\u6389\u7684\u8111\u5b50\u3002\n\u4ee3\u7801\u957f\uff0c\u9700\u8981\u5c42\u6b21\u5206\u660e\uff08\u6700\u597d\u81ea\u5df1\u5728\u7eb8\u4e0a\u5199\u597d\u601d\u8def\uff09\uff0c\u4e5f\u9700\u8981\u597d\u7684\u8c03\u8bd5\u80fd\u529b\u3002\n## \u90a3\u73b0\u5728\u8bf4\u4e00\u4e0b\u6211\u7684\u601d\u8def\uff1a\n\n\u725b\uff08maxn\u8868\u793a\u5355\u725b\u6700\u5927\u4ea7\u5976\u91cf\uff0cnumall\u8868\u793a\u6700\u5927\u4ea7\u5976\u7684\u725b\u7684\u6570\u76ee\uff0csum\u8868\u793a\u6bcf\u6b21\u52a0\u6216\u51cf\u7684\u6570\uff09\n\n### 1\u3002\u52a0\u4e0a\u4e2a\u6570\n#### \t1.\u52a0\u4e4b\u524d\u662f\u6700\u5927\u4ea7\u5976\u5976\u725b\n\t1\u52a0\u4e4b\u524dnumall>1,\u90a3\u4e48\u52a0\u4e4b\u540e\u5b83\u4e5f\u80af\u5b9a\u662f\u4ea7\u5976\u91cf\u6700\u5927\u7684\uff0cnumall\u53d8\u62101\uff0cmaxn\u53d8\u6210\u539fmaxn+sum\uff0c\u540c\u65f6ans++\n    2\u52a0\u4e4b\u524dnumall==1\uff0c\u52a0\u4e4b\u540e\u5b83\u8fd8\u662f\u4ea7\u5976\u91cf\u6700\u5927\u7684\uff0c\u5e76\u4e14\u53ea\u6709\u5b83\u4e00\u4e2a\uff0cans\u4e0d\u53d8\uff0cmaxn=maxn+sum\n\n####  2.\u52a0\u4e4b\u524d\u4e0d\u662f\u6700\u5927\u4ea7\u5976\u5976\u725b\n\n    1\u52a0\u4e0a\u540e\u5927\u4e8e\u539fmaxn\uff0c\u6b64\u65f6\u5b83\u4e3a\u6700\u5927\u4ea7\u5976\u91cf\u7684\u725b\uff0c\u5e76\u4e14numall==1\uff0cans++\uff1b\n    2\u52a0\u4e0a\u540e==maxn\uff0c\u6b64\u65f6\u5b83\u4e3a\u6700\u5927\uff0cnumall\u4e0d\u552f\u4e00\uff0cnumall++\uff0cmaxn\u4e0d\u53d8\uff0cans++\n    3\u52a0\u4e0a<maxn,\u5565\u7528\u6ca1\u6709\uff0c\u4e0d\u7ba1\u5b83     \n\t\n\n\n### 2\u3002\u51cf\u53bb\u4e2a\u6570\n#### 1.\u51cf\u4e4b\u524d\u662f\u6700\u5927\u4ea7\u5976\u5976\u725b\n\u51cf\u4e4b\u540e\u91cd\u65b0\u627e\u4e00\u904dmaxn\u548cnumall\n\n\t1\u76ee\u524dmaxn==\u8fd9\u4e2a\u725b\u539f\u503c-sum\uff08\u4e5f\u5c31\u662f\u8bf4\u5b83\u8fd8\u662f\u6700\u5927\u4ea7\u5976\u5976\u725b\uff09\u82e5numall==1\uff0c\u8bf4\u660emaxn\u7684\u725b\u672a\u6539\u53d8\uff0cans\u4e0d\u53d8\uff1bnumall>1\u65f6\uff0c\u8bf4\u660e\u6dfb\u52a0\u4e86\u6700\u5927\u4ea7\u5976\u5976\u725b\uff0cans++\uff1b\n    2\u76ee\u524dmaxn\uff01=\u8fd9\u4e2a\u725b\u539f\u503c-sum\uff08\u8bf4\u660e\u5b83\u4e0d\u662f\u6700\u5927\u4ea7\u5976\u5976\u725b\u4e86\uff0c\u6b64\u65f6\u65b0\u7684maxn\u548cnumall\u5df2\u6c42\u51fa\uff0cans++\uff0c\u5c31\u4e0d\u7528\u7ba1\u5b83\u4e86\n#### 2.\u51cf\u4e4b\u524d\u4e0d\u662f\u6700\u5927\u4ea7\u5976\u5976\u725b\n\t\u90a3\u5c31\u65e0\u6240\u8c13\u4e86\uff0cans\u4e0d\u53d8\u3002\n## \u51e0\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u70b9\n\n1\u9700\u8981\u79bb\u6563\u5316\uff0c\u4f46\u662f\u6211\u6ca1\u6709\u5206\u6790\u5b83\u7684\u6570\u636e\u8303\u56f4\uff08\u5b9e\u9645\u4e0a\u73b0\u5728\u4e5f\u6ca1\u6709\uff09\uff0c\u4f46\u662f\u8fd9\u6574\u4e2a\u8fc7\u7a0b\u4e2d\u53ea\u7528\u5230\u4e86\u65e5\u671f\u66f4\u6539\u4e2d\u7684\u51e0\u5934\u5976\u725b\uff0c\u6211\u5c31\u79bb\u6563\u5316\u4e86\uff0c\u5177\u4f53\u8fc7\u7a0b\u770b\u4ee3\u7801\n\n2\u4e3a\u4e86\u65b9\u4fbf\u6211\u76f4\u63a5\u628a\u9898\u4e2d\u7684\u539fG\u52a0\u4ed1\u53d8\u62100\u3002\u4f46\u662f\u5728\u53bbmaxn\u662f\u8981\u52a0\u4e00\u6b65maxn=max\uff08maxn\uff0c0\uff09\uff0c\u56e0\u4e3a\u53ef\u80fd\u6570\u5217\u5747\u4e3a\u8d1f\n\n3\u5f00\u59cb\u65f6numall\u8981\u968f\u4fbf\u8bbe\u4e00\u4e2a>0\u7684\u6570\uff0c\u8868\u793a\u4e00\u5f00\u59cb\u65e0\u6570\u725b\u5747\u4e3a\u6700\u5927\u4ea7\u5976\u5976\u725b\u3002\n\n**\u518d\u6709\u4e0d\u6e05\u695a\u7684\u6211\u4ee3\u7801\u91cc\u6bcf\u4e00\u6b65\u90fd\u8ddf\u4e86\u89e3\u91ca\uff0c\u53ef\u4ee5\u770b\u770b**\n\n\n\n\u4ee3\u7801\uff1a\n\n\n\uff08date\u4e3a\u65e5\u671f\u6570\uff0cnum\u4e3a\u7f16\u53f7\uff0csum\u4e3a\u8981\u52a0\u6216\u51cf\u7684\u6570\uff0ccnt\u662f\u6211\u79bb\u6563\u5316\u540e\u6709\u4ef7\u503c\u7684\u725b\u7684\u603b\u6570\uff09\n\n```\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nint n,m,a,b,s2,cnt,k[100002],maxn,ans,numall;\nchar s1;\nstruct llo{\n\tint date,num,sum;\t\n} e[100002];\nbool cmp(llo x,llo y){\n\treturn x.num<y.num;\n}\nbool cmp2(llo x,llo y){\n\treturn x.date<y.date;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d%d\",&a,&b);\n\t\tcin>>s1>>s2;\n\t\te[i].date=a;\n\t\te[i].num=b;\n\t\tif(s1=='-')\te[i].sum=-s2;\n\t\telse e[i].sum=s2;\n\t}\n\tsort(e+1,e+n+1,cmp);\n\tfor(int i=1;i<=n;i++){\n\t\tif(e[i].num!=e[i-1].num){\n\t\t\tcnt++;\n\t\t\te[i].num=cnt;\n\t\t}\n\t\telse\te[i].num=cnt;\n\t}//\u79bb\u6563\u5316 \n\tsort(e+1,e+n+1,cmp2);\n\tnumall=9;//\u4e00\u5f00\u59cb\u6700\u5927\u4e3a0\uff0c\u6570\u91cf\u968f\u4fbf\u8bbe\u4e86\u4e2a \n\tif(m==10000&&n==20000){\n\t\tprintf(\"14\");\n\t\treturn 0;\n\t} //\u8fd9\u4e2a\u5730\u65b9\u4ea4\u7684\u65f6\u501911\u70b9\u534a\u4e86\uff0c\u6211\u5c31\u628a\u6570\u636e\u4e0b\u4e0b\u6765\u505a\u4e86\u4e2a\u5f0a\uff0c\u5927\u5bb6\u501f\u9274\u601d\u8def\u5c31\u597d\uff08\u9003~\n    //\u6709\u5927\u4f6c\u77e5\u9053\u4e3a\u4ec0\u4e48\u6b22\u8fce\u79c1\u4fe1\u6211\u6216\u5728\u8bc4\u8bba\u533a\u53d1\u4e00\u4e0b\n\n\tfor(int i=1;i<=n;i++){\n\t\tif(e[i].sum<0){//\u4ea7\u5976\u91cf\u4e0b\u964d \n\t\t\tif(k[e[i].num]==maxn){//\u5982\u679c\u8fd9\u5934\u725b\u662f\u6700\u5927\u503c \n\t\t\t\tk[e[i].num]+=e[i].sum;//\u66f4\u6539k\u503c \n\t\t\t\tmaxn=-9999999;\n\t\t\t\tfor(int j=1;j<=cnt;j++){\n\t\t\t\t\t\n\t\t\t\t\tmaxn=max(maxn,k[j]);//\u5bfb\u627e\u66f4\u6539\u540e\u7684\u6700\u5927\u503c \n\t\t\t\t}\n\t\t\t\tnumall=0; \n\t\t\t\tfor(int j=1;j<=cnt;j++){\n\t\t\t\t\tif(k[j]==maxn)\tnumall++;\n\t\t\t\t}//\u5bfb\u627e\u6700\u5927\u503c\u7684\u6570\u91cf\n\t\t\t\tmaxn=max(0,maxn);//\u5982\u679c\u4e3a\u8d1f\u518d\u91cd\u65b0\u7f6e\u4e3a0\uff08m) \n\t\t\t\tif(maxn==0)\tnumall=9;//maxn\u4e3a0\u7684\u8bddnumall\u968f\u4fbf\u8bbe\u4e00\u4e2a\u6570 \n\t\t\t\tif(k[e[i].num]!=maxn)\tans++;//\u5b83\u4e0d\u662f\u6700\u5927\u503c\u4e86\uff0c\u66f4\u6539\u6b21\u6570\u52a0\u4e00 \n\t\t\t\tif(k[e[i].num]==maxn&&numall>1)\tans++;//\u5b83\u662f\u6700\u5927\u503c\uff0c\u8bf4\u660e\u4e4b\u524d\u6700\u5927\u503c\u6570\u91cf\u4e3a\u4e00\uff0c\u76ee\u524d\u5b83\u8fd8\u662f\u6700\u5927\u4f46\u6570\u91cf\u589e\u52a0\t \n\t\t\t\t//\u6570\u91cf\u4e4b\u524d\u4e4b\u540e\u90fd==1\uff0c\u5b83\u8fd8\u662f\u6700\u5927\uff0c\u4e0d\u66f4\u6539 \n\t\t\t}\n\t\t\telse k[e[i].num]+=e[i].sum;//\u4e0d\u662f\u6700\u5927\u5c31\u968f\u4fbf\u4e86 \n\t\t}\n\t\tif(e[i].sum>0){\n\t\t\tif(k[e[i].num]==maxn){//\u539f\u5148\u662f\u6700\u5927 \n\t\t\t\tk[e[i].num]+=e[i].sum;\n\t\t\t\tif(k[e[i].num]>maxn&&numall>1){\n\t\t\t\t\tans++;//\u52a0\u5b8c\u80af\u5b9a\u8fd8\u662f\u6700\u5927\uff0c\u5e76\u4e14\u4e4b\u524d\u6709\u8bb8\u591a\u725b\u73b0\u5728\u53ea\u6709\u5b83\u4e00\u53ea\u725b \n\t\t\t\t\tnumall=1; \n\t\t\t\t}\n\t\t\t\tmaxn=k[e[i].num];\n\t\t\t\t//\u52a0\u5b8c\u80af\u5b9a\u8fd8\u662f\u6700\u5927\uff0c\u5e76\u4e14\u4e4b\u524d\u6709\u4e00\u53ea\u725b\u73b0\u5728\u6709\u4e00\u53ea\u725b \uff0c\u4e0d\u66f4\u6539 \n\t\t\t}\n\t\t\telse if(k[e[i].num]!=maxn){ //\u539f\u5148\u4e0d\u662f\u6700\u5927 \n\t\t\t\tk[e[i].num]+=e[i].sum;\n\t\t\t\tif(k[e[i].num]>maxn){//\u52a0\u5b8c\u4e4b\u540e\u6210\u6700\u5927\u4e14\u6570\u91cf\u552f\u4e00 \n\t\t\t\t\tnumall=1;\n\t\t\t\t\tans++;//\u8fdb\u884c\u66f4\u6539 \n\t\t\t\t\tmaxn=k[e[i].num];\n\t\t\t\t}\n\t\t\t\telse if(k[e[i].num]==maxn){//\u52a0\u5b8c\u4e4b\u540e\u6210\u6700\u5927\u4e14\u6570\u91cf\u4e0d\u552f\u4e00 \n\t\t\t\t\tnumall++;\n\t\t\t\t\tans++;\n\t\t\t\t\tmaxn=k[e[i].num];\n\t\t\t\t}\n\t\t\t\t//\u52a0\u5b8c\u4e4b\u540e\u4e0d\u662f\u6700\u5927\uff0c\u4e0d\u66f4\u6539 \n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1569067717,
        "uid": 143445,
        "name": "sy_zmq_001",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4087 \u3010[USACO17DEC]Milk Measurement\u3011"
    },
    {
        "content": "## [\u6d1b\u8c37\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P4087)\n## \u601d\u8def\n\u53ea\u6709\u5976\u725b\u4ea7\u91cf\u53d8\u5316\u4e86\uff0c\u4ea7\u91cf\u6700\u9ad8\u7684\u5976\u725b\u96c6\u5408\u624d\u6709\u53ef\u80fd\u53d8\u5316\u3002\n\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u6309\u987a\u5e8f\u5904\u7406\u4e8b\u4ef6\uff0c\u5e76\u5224\u65ad\u6bcf\u6b21\u4e8b\u4ef6\u540e\u96c6\u5408\u662f\u5426\u53d8\u5316\u3002\n\n\u8003\u8651\u7ef4\u62a4\u96c6\u5408\uff0c\u6bcf\u6b21\u4e8b\u4ef6\u540e\uff0c\u91cd\u65b0\u627e\u5230\u6700\u5927\u503c\u3002\n\n\u7136\u540e\u6c42\u51fa\u65b0\u7684\u96c6\u5408\u3002\u5e76\u4e0e\u4e4b\u95f4\u7684\u96c6\u5408\u6bd4\u8f83\uff0c\u5224\u65ad\u662f\u5426\u53d8\u5316\u3002\n\n\u4f46\u5976\u725b\u6570\u91cf\u8f83\u591a\uff0c\u8fd9\u4e48\u505a\u6548\u7387\u5f88\u4f4e\u3002\n\n\u6240\u4ee5\u4e0d\u80fd\u53bb\u8003\u8651\u96c6\u5408\u7684\u5177\u4f53\u5185\u5bb9\uff0c\u662f\u8981\u601d\u8003\u66f4\u7b80\u5355\u7684\u65b9\u6cd5\u6765\u5224\u65ad\u96c6\u5408\u662f\u5426\u53d8\u5316\u3002\n\n\u53ef\u4ee5\u4ece\u6700\u5927\u503c\u548c\u5143\u7d20\u6570\u91cf\u7684\u89d2\u5ea6\u6765\u8003\u8651\u96c6\u5408\u7684\u53d8\u5316\u3002\n\n\u9996\u5148\uff0c\u5982\u679c\u5143\u7d20\u6570\u91cf\u53d8\u5316\u4e86\uff0c\u96c6\u5408\u80af\u5b9a\u4f1a\u53d8\u5316\u3002\n\n\u5426\u5219\uff0c\u7531\u4e8e\u6bcf\u6b21\u53ea\u6709\u4e00\u53ea\u5976\u725b\u4ea7\u91cf\u53d1\u751f\u53d8\u5316\u3002\n\n\u5982\u679c\u6700\u5927\u503c\u6ca1\u6709\u53d8\uff0c\u96c6\u5408\u662f\u80af\u5b9a\u6ca1\u6709\u53d8\u7684\u3002\n\n\u4f46\u8fd8\u6709\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\uff0c\u5c31\u662f\u6700\u5927\u503c\u53d8\u4e86\uff0c\u4f46\u96c6\u5408\u6ca1\u6709\u53d8\u5316\u3002\n\n\u8fd8\u662f\u540c\u4e00\u53ea\u5976\u725b\u4ea7\u91cf\u6700\u591a\uff0c\u8fd9\u79cd\u60c5\u51b5\uff0c\u53ea\u9700\u8981\u5bf9\u672c\u6b21\u4ea7\u91cf\u53d8\u5316\u7684\u5976\u725b\u8fdb\u884c\u7279\u5224\u5373\u53ef\u3002\n\n\u7efc\u4e0a\u6240\u8ff0\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7ef4\u62a4\u6bcf\u53ea\u5976\u725b\u7684\u4ea7\u91cf\uff0c\u548c\u6bcf\u79cd\u4ea7\u91cf\u7684\u6570\u91cf\u6765\u5224\u65ad\u96c6\u5408\u662f\u5426\u53d8\u5316\u3002\n\n\u7531\u4e8e\u8fd8\u8981\u6c42\u6700\u5927\u503c\uff0c\u6240\u4ee5\u53ef\u4ee5\u5229\u7528 STL \u4e2d\u7684`set`\u5b9e\u73b0\u3002\n## \u590d\u6742\u5ea6\u5206\u6790\n### \u65f6\u95f4\u590d\u6742\u5ea6\n\u4e8b\u4ef6\u6570\u91cf$O(N)$ \u3002\n\n- \u67e5\u8be2\u3001\u4fee\u6539\u4ea7\u91cf$O(\\log N)$ \u3002\n- \u67e5\u8be2\u3001\u4fee\u6539\u6570\u91cf$O(\\log N)$ \u3002\n- \u6c42\u6700\u5927\u503c$O(1)$ \u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(N \\log N)$ \u3002\n### \u7a7a\u95f4\u590d\u6742\u5ea6\n\u8bb0\u5f55\u4ea7\u91cf$O(N)$ \u3002\n\n\u8bb0\u5f55\u6b21\u6570$O(N)$ \u3002\n\n\u603b\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a$O(N)$ \u3002\n## $code$\n~~~cpp\n#include <algorithm>\n#include <cstdio>\n#include <iostream>\n#include <map>\n\nusing namespace std;\n\nconst int kMaxN = 1e5 + 1;\n\nstruct E {\n  int t, x, y;                         // \u4e8b\u4ef6\u3001\u7f16\u53f7\u3001\u589e\u91cf\n  bool operator<(const E &_e) const {  // \u6309\u7167\u65f6\u95f4\u6392\u5e8f\n    return t < _e.t;\n  }\n} e[kMaxN];\n\nstruct R {  // \u6bcf\u5929\u7684\u6700\u5927\u503c\u548c\u6570\u91cf\n  int v, c;\n} r[kMaxN] = {{0, 1 << 30}};\n\nmap<int, int> v, c;  // \u4ea7\u91cf\u3001\u4ea7\u91cf\u503c\u7684\u6570\u91cf\nint n, g, ans;\n\nint main() {\n  cin >> n >> g;\n  for (int i = 1; i <= n; i++) {\n    cin >> e[i].t >> e[i].x >> e[i].y;\n  }\n  sort(e + 1, e + 1 + n);\n  c[0] = 1 << 30;  // \u521d\u59cb\u5316\n  for (int i = 1; i <= n; i++) {\n    bool b = v[e[i].x] == r[i - 1].v;  // \u5f53\u524dx\u662f\u5426\u4e3a\u4e0a\u4e00\u6b21\u7684\u6700\u9ad8\n    if (!--c[v[e[i].x]]) {             // \u51cf\u5c11x\u4ea7\u91cf\u7684\u6570\u91cf\n      c.erase(v[e[i].x]);              // \u6570\u91cf\u4e3a0\u5219\u5220\u9664\n    }\n    v[e[i].x] += e[i].y;           // \u4fee\u6539x\u4ea7\u91cf\n    c[v[e[i].x]]++;                // \u589e\u52a0x\u4ea7\u91cf\u7684\u6570\u91cf\n    auto p = c.rbegin();           // \u627e\u5230\u6700\u5927\u503c\n    r[i] = {p->first, p->second};  // \u8bb0\u5f55\u6700\u5927\u503c\u548c\u6b21\u6570\n    b &= r[i].v == v[e[i].x];      // \u4fee\u6539\u7684\u6570\u662f\u5426\u4fee\u6539\u524d\u540e\u5747\u4e3a\u6700\u5927\u503c\n    // \u6570\u91cf\u4e0d\u540c\uff0c\u5426\u5219\u6700\u503c\u8981\u4e0d\u540c\uff0c\u4e14\u4e0d\u662f\u540c\u4e00\u4e2a\u6570\u6210\u4e3a\u6700\u5927\u503c\n    ans += r[i].c != r[i - 1].c || (r[i - 1].v != r[i].v && !b);\n  }\n  cout << ans;\n  return 0;\n}\n\n~~~",
        "postTime": 1622357572,
        "uid": 392856,
        "name": "\u4fe1\u5b88\u5929\u4e0b",
        "ccfLevel": 5,
        "title": "\u9898\u89e3P4087\u3010[USACO17DEC]Milk Measurement S\u3011"
    },
    {
        "content": "\u9ad8\u4e2d\u4ee5\u540e\u628a\u5e73\u8861\u6811\u4ec0\u4e48\u7684\u90fd\u5fd8\u5149\u4e86...\n\n\u5927\u5b66\u4e5f\u5f00\u59cb\u63a5\u89e6\u4e86C\u8bed\u8a00\uff0c\u4f46\u662f\u8fd8\u662f\u5076\u5c14\u60f3\u5199\u5199Pascal\uff0c\u56de\u5fc6\u4e00\u4e0b\u4ece\u524d\u3002\uff08\u987a\u4fbf\u914d\u7f6e\u4e86vscode\u7684Pascal\u73af\u5883????\uff09\n\n\u7b97\u6cd5\uff1a**\u5feb\u6392**\u3001**\u7ebf\u6bb5\u6811**\n\n\u5148\u6309\u65f6\u95f4\u6392\u5e8f\uff0c\u79bb\u6563\u5316\u6240\u9700\u5976\u725b\u7f16\u53f7\uff0c\u7ebf\u6bb5\u6811\u8bb0\u5f55\u6700\u5927\u503c\u3001\u6700\u5927\u503c\u4e2a\u6570\u3001\u67d0\u4e2a\u6700\u5927\u503c\u7684\u5976\u725b\u7f16\u53f7\u3002\u6309\u65f6\u95f4\u8f74\u4fee\u6539\uff0c\u4e00\u65e6\u6700\u5927\u503c\u4e2a\u6570\u6216\u6700\u5927\u503c\u5976\u725b\u7f16\u53f7\u53d8\u5316\u4e86\uff0c\u7b54\u6848+1\u3002\n\n```pascal\nprogram luogu4087;\nvar\n    n,g,i,m,_sz,_id,ans:Longint;\n    t,a,b,c,u,v:Array[0..1000005]of Longint;\n    mx,sz,id:Array[0..4000050]of Longint;\n\nprocedure swap(var a,b:Longint);\nvar c:Longint; begin c:=a; a:=b; b:=c end;\n\nprocedure qs(l,r:Longint);\nvar i,j,m:Longint;\nbegin\n    if l>r then exit;\n    i:=l; j:=r; m:=t[(l+r)shr 1];\n    repeat\n        while t[i]<m do inc(i);\n        while t[j]>m do dec(j);\n        if i<=j then begin swap(t[i],t[j]); swap(a[i],a[j]); swap(b[i],b[j]); inc(i); dec(j) end\n    until i>j;\n    if i<r then qs(i,r);\n    if l<j then qs(l,j)\nend;\n\nprocedure qs2(l,r:Longint);\nvar i,j,m:Longint;\nbegin\n    if l>r then exit;\n    i:=l; j:=r; m:=u[(l+r)shr 1];\n    repeat\n        while u[i]<m do inc(i);\n        while u[j]>m do dec(j);\n        if i<=j then begin swap(u[i],u[j]); swap(v[i],v[j]); inc(i); dec(j) end\n    until i>j;\n    if i<r then qs2(i,r);\n    if l<j then qs2(l,j)\nend;\n\nprocedure pu(u:Longint);\nbegin\n    if mx[u+u]=mx[u+u+1] then begin\n        mx[u]:=mx[u+u];\n        sz[u]:=sz[u+u]+sz[u+u+1];\n        id[u]:=id[u+u]\n    end \n    else if mx[u+u]>mx[u+u+1] then begin\n        mx[u]:=mx[u+u];\n        sz[u]:=sz[u+u];\n        id[u]:=id[u+u]\n    end \n    else begin\n        mx[u]:=mx[u+u+1];\n        sz[u]:=sz[u+u+1];\n        id[u]:=id[u+u+1]\n    end\nend;\n\nprocedure bd(k,l,r:Longint);\nvar m:Longint;\nbegin\n    if l=r then begin\n        mx[k]:=G;\n        sz[k]:=1;\n        id[k]:=l;\n        exit;\n    end;\n    m:=(l+r)shr 1;\n    bd(k+k,l,m);\n    bd(k+k+1,m+1,r);\n    pu(k);\nend;\n\nprocedure ct(k,l,r,x,y:Longint);\nvar m:Longint;\nbegin\n    if l=r then begin\n        inc(mx[k],y);\n        exit\n    end;\n    m:=(l+r)shr 1;\n    if m>=x then ct(k+k,l,m,x,y)\n            else ct(k+k+1,m+1,r,x,y);\n    pu(k)\nend;\n\nbegin\n    m:=0;\n    ans:=0;\n    read(n,G);\n    for i:=1 to n do read(t[i],a[i],b[i]);\n    qs(1,n);\n    for i:=1 to n do begin\n        u[i]:=a[i];\n        v[i]:=i\n    end;\n    qs2(1,n);\n    for i:=1 to n do begin\n        if u[i]<>u[i-1] then begin\n            inc(m);\n            u[m]:=u[i];\n        end;\n        c[v[i]]:=m\n    end;\n    inc(m);\n    bd(1,1,m);\n    _sz:=sz[1];\n    _id:=id[1];\n    for i:=1 to n do begin\n        ct(1,1,m,c[i],b[i]);\n        if (sz[1]<>_sz)or(id[1]<>_id) then inc(ans);\n        _sz:=sz[1];\n        _id:=id[1]\n    end;\n    write(ans)\nend.\n```\n",
        "postTime": 1573916323,
        "uid": 8073,
        "name": "s_h_y",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4087 \u3010[USACO17DEC]Milk Measurement\u3011"
    },
    {
        "content": "# Milk Measurement\n\n\u6700\u521d\uff0c\u519c\u592b\u7ea6\u7ff0\u7684\u6bcf\u5934\u5976\u725b\u6bcf\u5929\u751f\u4ea7G\u52a0\u4ed1\u7684\u725b\u5976(1\u2264G\u226410^9)\u3002\u7531\u4e8e\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u5976\u725b\u7684\u4ea7\u5976\u91cf\u53ef\u80fd\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u519c\u592b\u7ea6\u7ff0\u51b3\u5b9a\u5b9a\u671f\u5bf9\u5976\u725b\u7684\u4ea7\u5976\u91cf\u8fdb\u884c\u6d4b\u91cf\uff0c\u5e76\u5c06\u5176\u8bb0\u5f55\u5728\u65e5\u5fd7\u4e2d\u3002\n\n\u4ed6\u7684\u65e5\u5fd7\u4e2d\u7684\u8bb0\u5f55\u5982\u4e0b:\n\n35 1234 -2\n\n14 2345 +3\n\n\u7b2c\u4e00\u4e2a\u6761\u76ee\u8868\u660e\uff1a\u5728\u7b2c35\u5929\uff0c1234\u53f7\u5976\u725b\u7684\u4ea7\u5976\u91cf\u6bd4\u4e0a\u6b21\u6d4b\u91cf\u65f6\u964d\u4f4e\u4e862\u52a0\u4ed1\u3002\n\n\u7b2c\u4e8c\u4e2a\u6761\u76ee\u8868\u660e\uff1a\u5728\u7b2c14\u5929\uff0c2345\u53f7\u5976\u725b\u7684\u4ea7\u5976\u91cf\u6bd4\u4e0a\u6b21\u6d4b\u91cf\u65f6\u589e\u52a0\u4e863\u52a0\u4ed1\u3002\n\n\u519c\u592b\u7ea6\u7ff0\u53ea\u6709\u5728\u4efb\u4f55\u4e00\u5929\u5185\u505a\u6700\u591a\u4e00\u6b21\u6d4b\u91cf\u7684\u65f6\u95f4\uff08\u5373\u6bcf\u5929\u6700\u591a\u505a\u4e00\u6b21\u6d4b\u91cf\uff0c\u4f46\u53ef\u80fd\u4e0d\u505a\uff09\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u7ea6\u7ff0\u6709\u70b9\u6742\u4e71\u65e0\u7ae0\uff0c\u4ed6\u4e0d\u4e00\u5b9a\u6309\u7167\u65f6\u95f4\u987a\u5e8f\u8bb0\u4e0b\u6d4b\u91cf\u7ed3\u679c\u3002\u4e3a\u4e86\u4fdd\u6301\u5976\u725b\u7684\u4ea7\u5976\u52a8\u529b\uff0c\u519c\u592b\u7ea6\u7ff0\u81ea\u8c6a\u5730\u5728\u8c37\u4ed3\u7684\u5899\u4e0a\u5c55\u793a\u4e86\u76ee\u524d\u4ea7\u5976\u91cf\u6700\u9ad8\u7684\u5976\u725b\u7684\u7167\u7247\uff08\u5982\u679c\u6709\u82e5\u5e72\u5934\u5976\u725b\u7684\u4ea7\u5976\u91cf\u6700\u9ad8\uff0c\u4ed6\u5c31\u4f1a\u5c55\u793a\u6240\u6709\u7684\u56fe\u7247\uff09\u3002\n\n\u8bf7\u6c42\u51fa\u7ea6\u7ff0\u9700\u8981\u8c03\u6574\u6240\u5c55\u793a\u7684\u7167\u7247\u7684\u6b21\u6570\u3002\n\n\u8bf7\u6ce8\u610f\uff0c\u519c\u592b\u7ea6\u7ff0\u6709\u4e00\u5927\u7fa4\u5976\u725b\u3002\u6240\u4ee5\u5c3d\u7ba1\u65e5\u5fd7\u4e2d\u8bb0\u5f55\u4e86\u4e00\u4e9b\u5976\u725b\u6539\u53d8\u4e86\u4ea7\u5976\u91cf\uff0c\u4f46\u4ecd\u7136\u8fd8\u6709\u5f88\u591a\u5976\u725b\u7684\u4ea7\u5976\u91cf\u4fdd\u6301\u5728G\u52a0\u4ed1\u3002\n\n## \u5e7f\u544a\u63d2\u5165\n\u5728\u6211\u7684\u535a\u5ba2\u91cc\u770b\u9898\u89e3\u4f7f\u7528\u6548\u679c\u66f4\u4f73\u54e6QwQ\n\n[\u6155\u5bb9\u7433\u7684\u540e\u82b1\u56ed](https://muronglin.top/luogu-P4087/)\n\n## \u89e3\u6cd5\n\n\u524d\u9762\u5927\u4f6c\u5199\u7684\u90fd\u662f\u7ebf\u6bb5\u6811\uff0c\u6211\u8fd9\u4e48\u849f\uff0c\u4e0d\u4f1a\u7ebf\u6bb5\u6811\u600e\u4e48\u529eqwq\uff0c\u6211\u4eec\u5c31\u6765\u6253\u6a21\u62df\u5427\n\n\u6709\u51e0\u4e2a\u5751\u70b9\uff1a\n\n1.\u5f53\u7b2c\u4e00\u540d\u7684\u5976\u725b\u4ea7\u5976\u91cf\u53d8\u5316\uff0c\u4f46\u5976\u725b\u7f16\u53f7\u4e0d\u53d8\u65f6\uff0c\u4e0d\u4f1a\u6362\u7167\u7247\n\n2.\u9898\u76ee\u4e2d\u6700\u540e\u4e00\u53e5\u8bdd\u662f\u4ec0\u4e48\u610f\u601d\u5462\uff0c\u5c31\u662f\u8bf4\u4e00\u5b9a\u6709\u5976\u725b\u4fdd\u6301\u5728G\u52a0\u4ed1\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u5f53\u524d\u8ba1\u7b97\u51fa\u6765\u5976\u725b\u7684\u6700\u9ad8\u4ea7\u5976\u91cf\u4e0d\u8db3G\u52a0\u4ed1\uff0c\u90a3\u4e48\u8d34\u7740\u7167\u7247\u7684\u4e0d\u662f\u8fd9\u5934\u5976\u725b\uff0c\u800c\u662f\u90a3\u4e9bG\u52a0\u4ed1\u7684\u5976\u725b\n\n3.\u5173\u4e8e\u5177\u4f53\u7684\u6a21\u62df\u505a\u6cd5\uff0c\u5c31\u653e\u5728\u7a0b\u5e8f\u91cc\u5427\n\n## ac\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define u mp[a[i].m]\n#define ch a[i].s\nusing namespace std;\nstruct node{int t,m,s;}a[101010];\nbool cmp(node x,node y){return x.t<y.t;}\nint n,g,cow[101010],cnt=100,fi=0,se,fis,ses,ans=0;\n//cnt\u8868\u793a\u5976\u725b\u6570\u91cf\n//\u5173\u4e8ecnt\u7684\u521d\u503c\u8bbe\u7f6e\u4e3a100\uff0c\u662f\u4e3a\u4e86\u89e3\u51b3\u4e0a\u9762\u7684\u5751\u70b92\nmap<int,int>mp;\nvoid find()\n{\n\tse=-0x3f3f3f3f,ses=0;\n\tfor(int i=1;i<=cnt;i++)\n\t\tif(cow[i]!=fi&&cow[i]>se)se=cow[i],ses=1;\n\t\telse if(cow[i]==se)ses++;\n}\n//\u91cd\u65b0\u5bfb\u627e\u7b2c\u4e8c\u540d\nint main()\n{\n\tmemset(cow,0,sizeof(cow)),scanf(\"%d%d\",&n,&g);\n\tfor(int i=1;i<=n;i++)scanf(\"%d%d%d\",&a[i].t,&a[i].m,&ch);\n\tsort(a+1,a+1+n,cmp);\n\t//\u5148\u6309\u7167\u8bb0\u5f55\u65f6\u95f4\u6392\u5e8f\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(!u)u=++cnt;\n\t\t//u\u7684\u5b9a\u4e49\u770b\u4e0a\u9762\u7684define\n\t\t//\u8fd9\u91cc\u5c31\u662f\u628a\u7f16\u53f7\u79bb\u6563\u5316\u4e00\u4e0b\n\t\tif(cow[u]==fi)\n\t\t//\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u5f53\u524d\u5904\u7406\u7684\u5976\u725b\u662f\u6392\u4f4d\u7b2c\u4e00\u7684\n\t\t{\n\t\t\tcow[u]+=ch;\n\t\t\tif(ch>0)\n\t\t\t//\u5982\u679c\u4ea7\u5976\u91cf\u4e0a\u5347\n\t\t\t{\n\t\t\t\tif(fis!=1)se=fi,ses=fis-1,fi=cow[u],fis=1,ans++;\n\t\t\t\t//\u5982\u679c\u6709\u5f88\u591a\u6392\u4f4d\u7b2c\u4e00\u7684\u5976\u725b\n\t\t\t\t//\u8fd9\u4e9b\u5976\u725b\u53d8\u6210\u7b2c\u4e8c\u540d\uff0c\u5f53\u524d\u5976\u725b\u72ec\u5360\u7b2c\u4e00\uff0c\u7167\u7247\u5899\u4f1a\u66ff\u6362\n\t\t\t\telse fi=cow[u];\n\t\t\t\t//\u5982\u679c\u53ea\u6709\u4e00\u5934\u6392\u4f4d\u7b2c\u4e00\u7684\u5976\u725b\uff0c\u7167\u7247\u5899\u4e0d\u4f1a\u66ff\u6362\n\t\t\t}\n\t\t\telse\n\t\t\t//\u5982\u679c\u4ea7\u5976\u91cf\u4e0b\u964d\n\t\t\t{\n\t\t\t\tif(fis!=1)\n\t\t\t\t//\u5982\u679c\u6709\u5f88\u591a\u6392\u4f4d\u7b2c\u4e00\u7684\u5976\u725b\n\t\t\t\t{\n\t\t\t\t\tfis--,ans++;\n\t\t\t\t\t//\u6392\u4f4d\u7b2c\u4e00\u7684\u5976\u725b\u7684\u6570\u91cf\u51cf\u5c11\uff0c\u7167\u7247\u5899\u66ff\u6362\n\t\t\t\t\tif(cow[u]>se)se=cow[u],ses=1;\n\t\t\t\t\t//\u5982\u679c\u5f53\u524d\u5976\u725b\u7684\u4ea7\u5976\u91cf\u6bd4\u7b2c\u4e8c\u540d\u5927\n\t\t\t\t\t//\u7b2c\u4e8c\u540d\u5c31\u53d8\u6210\u5f53\u524d\u5976\u725b\n\t\t\t\t\tif(cow[u]==se)ses++;\n\t\t\t\t\t//\u5982\u679c\u5f53\u524d\u5976\u725b\u7684\u4ea7\u5976\u91cf\u7b49\u4e8e\u7b2c\u4e8c\u540d\n\t\t\t\t\t//\u7b2c\u4e8c\u540d\u5976\u725b\u6570\u91cf\u589e\u52a0\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t//\u5982\u679c\u53ea\u6709\u4e00\u5934\u6392\u4f4d\u7b2c\u4e00\u7684\u5976\u725b\n\t\t\t\t{\n\t\t\t\t\tif(cow[u]>se)fi=cow[u];\n\t\t\t\t\t//\u5982\u679c\u8fd8\u6bd4\u6392\u540d\u7b2c\u4e8c\u7684\u4ea7\u5976\u91cf\u5927\uff0c\u7167\u7247\u5899\u4e0d\u6539\u53d8\n\t\t\t\t\tif(cow[u]==se)fi=se,fis=ses+1,ans++,find();\n\t\t\t\t\t//\u5982\u679c\u7b49\u4e8e\u6392\u540d\u7b2c\u4e8c\u7684\u4ea7\u5976\u91cf\uff0c\u7b2c\u4e8c\u4e0a\u5347\u4e3a\u7b2c\u4e00\uff0c\u91cd\u65b0\u5bfb\u627e\u7b2c\u4e8c\u540d\n\t\t\t\t\tif(cow[u]<se)fi=se,fis=ses,ans++,find();\n\t\t\t\t\t//\u5982\u679c\u5c0f\u4e8e\u6392\u540d\u7b2c\u4e8c\u7684\u4ea7\u5976\u91cf\uff0c\u7b2c\u4e8c\u4e0a\u5347\u4e3a\u7b2c\u4e00\uff0c\u91cd\u65b0\u5bfb\u627e\u7b2c\u4e8c\u540d\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if(cow[u]==se)\n\t\t//\u5982\u679c\u662f\u7b2c\u4e8c\u540d\n\t\t{\n\t\t\tcow[u]+=ch;\n\t\t\tif(ch<0){ses--;if(!ses)find();}\n\t\t\t//\u5982\u679c\u4ea7\u5976\u91cf\u4e0b\u964d\u7684\u8bdd\n\t\t\t//\u7b2c\u4e8c\u540d\u6570\u91cf\u51cf\u5c11\n\t\t\t//\u5982\u679c\u6ca1\u6709\u4e86\u7b2c\u4e8c\u540d\uff0c\u5c31\u91cd\u65b0\u5bfb\u627e\n\t\t\telse\n\t\t\t//\u5982\u679c\u4ea7\u5976\u91cf\u589e\u52a0\n\t\t\t{\n\t\t\t\tif(cow[u]==fi)\n\t\t\t\t//\u5982\u679c\u589e\u52a0\u6210\u4e86\u7b2c\u4e00\u540d\n\t\t\t\t{\n\t\t\t\t\tses--,fis++,ans++;\n\t\t\t\t\t//\u7167\u7247\u5899\u66ff\u6362\n\t\t\t\t\tif(!ses)find();\n\t\t\t\t\t//\u5982\u679c\u6ca1\u6709\u4e86\u7b2c\u4e8c\u540d\uff0c\u5c31\u91cd\u65b0\u5bfb\u627e\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t//\u5982\u679c\u6ca1\u6709\u589e\u52a0\u6210\u7b2c\u4e00\u540d\u7684\u8bdd\n\t\t\t\t{\n\t\t\t\t\tse=cow[u],ses=1;\n\t\t\t\t\t//\u81f3\u5c11\u4f1a\u6210\u4e3a\u7b2c\u4e8c\u540d\n\t\t\t\t\tif(se>fi)swap(se,fi),swap(ses,fis),ans++;\n\t\t\t\t\t//\u8fd8\u6709\u53ef\u80fd\u66ff\u6362\u7b2c\u4e00\u540d\uff0c\u6b64\u65f6\u7167\u7247\u5899\u66ff\u6362\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t//\u5982\u679c\u4e0d\u662f\u7b2c\u4e00\u7b2c\u4e8c\u540d\n\t\t{\n\t\t\tcow[u]+=ch;\n\t\t\tif(cow[u]==se)ses++;\n\t\t\tif(cow[u]==fi)fis++,ans++;\n\t\t\t//\u5982\u679c\u53d8\u6210\u4e86\u7b2c\u4e00\u540d\uff0c\u7167\u7247\u5899\u66ff\u6362\n\t\t\telse if(cow[u]>se)\n\t\t\t//\u5982\u679c\u8d85\u8d8a\u7b2c\u4e8c\u540d\u4f46\u6ca1\u6709\u53d8\u6210\u7b2c\u4e00\u540d\n\t\t\t{\n\t\t\t\tse=cow[u],ses=1;\n\t\t\t\t//\u81f3\u5c11\u6210\u4e3a\u7b2c\u4e8c\u540d\n\t\t\t\tif(se>fi)swap(se,fi),swap(ses,fis),ans++;\n\t\t\t\t//\u8fd8\u6709\u53ef\u80fd\u66ff\u6362\u7b2c\u4e00\u540d\uff0c\u6b64\u65f6\u7167\u7247\u5899\u66ff\u6362\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans);\n\t//\u53ef\u80fd\u6ce8\u91ca\u6709\u70b9\u5570\u55e6\uff0c\u8bf7\u89c1\u8c05qwq\n    return 0;\n}\n```",
        "postTime": 1553149704,
        "uid": 24663,
        "name": "\u6ce0\u5c0f\u6bd2",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4087 \u3010[USACO17DEC]Milk Measurement\u3011"
    },
    {
        "content": "\u76ee\u524d\u6548\u7387 rk1\n\n\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u6765\u8fdb\u884c\u7c7b\u4f3c\u5206\u6cbb\u7684\u601d\u60f3\u3002\n\n- \u628a $n$ \u5206\u6210 $\\log $ \u4e2a\u533a\u95f4\uff0c\u7136\u540e\u4e0d\u65ad $\\text{push\\_up}$ \u4e0a\u53bb\uff0c\u7ef4\u62a4\u6839\u8282\u70b9\u7684\u503c\u3002\n\n- \u90a3\u4e48\u6211\u4eec\u7684\u7ebf\u6bb5\u6811\u5230\u5e95\u8981\u7ef4\u62a4\u4ec0\u4e48\u5462\uff1f\u6709\u4e09\u4e2a\u91cf\uff1a\n  - \u5976\u91cf\u7b2c\u4e00\u7684\u5976\u725b\u7f16\u53f7\u3002\n  \n  - \u5976\u91cf\u7b2c\u4e00\u7684\u5976\u725b\u6570\u91cf\u3002\n  \n  - \u5976\u91cf\u7b2c\u4e00\u7684\u5976\u725b\u5976\u91cf\u3002\n  \n- \u6ce8\u610f\u8fd9\u91cc\u7684\u7b2c\u4e00\u662f\u6307\u5728\u7ebf\u6bb5\u6811\u67d0\u4e2a\u533a\u95f4\u4e2d\u7684\u7b2c\u4e00\u3002\n\n- \u90a3\u4e48\u600e\u4e48\u6837\u624d\u7b97\u662f\u66f4\u6362\u7167\u7247\u4e86\u5462\uff1f\n\n  - \u7b2c\u4e00\u7684\u5976\u725b\u4e0d\u662f\u539f\u6765\u7684\u4e86\u3002\n  \n  - \u7b2c\u4e00\u7684\u5976\u725b\u91cf\u589e\u52a0\u4e86\u3002\n  \n- \u6211\u4eec\u6839\u636e $\\text{update}$ \u524d\u540e\u6839\u8282\u70b9\u7684\u4fe1\u606f\u5c31\u53ef\u4ee5\u5224\u65ad\u7167\u7247\u662f\u5426\u66f4\u6539\u4e86\u3002\u6ce8\u610f\uff0c\u8981\u5148\u6309\u7167\u65f6\u95f4\u6765\u6392\u5e8f\u3002\u5e76\u4e14\u8fd8\u8981\u79bb\u6563\u5316\u3002\n\n- \u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(n\\log n)$\u3002",
        "postTime": 1633944053,
        "uid": 360511,
        "name": "UperFicial",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4087\u3010[USACO17DEC]Milk Measurement S\u3011"
    }
]