[
    {
        "content": "[**\u66f4\u597d**\u7684\u9605\u8bfb\u4f53\u9a8c](http://zrzring.cn/index.php/archives/664/)\n\n\u8003\u8651\u8d2a\u5fc3\uff0c\u6309\u6743\u503c\u6392\u5e8f\uff0c\u5bf9\u4e8e\u679a\u4e3e\u5230\u7684\u8282\u70b9$i$\uff0c\u6211\u4eec\u8981\u5c3d\u91cf\u8ba9\u8fd9\u4e2a\u70b9\u548c\u5c0f\u7684\u70b9\u8fde\u8fb9\uff0c\u8003\u8651\u5230\u6211\u4eec\u8981\u4fdd\u8bc1\u8fd9\u68f5\u6811\u5b58\u5728\uff0c\u6240\u4ee5\u75591\u7684\u5ea6\u6570\u7528\u6765\u8ba9\u8fd9\u68f5\u6811\u80fd\u548c\u5269\u4e0b\u7684\u70b9\u8fde\u8d77\u6765\uff0c\u4e8e\u662f\u6bcf\u6b21\u679a\u4e3e\u7684\u8fde\u901a\u5757\u90fd\u9700\u8981\u9884\u7559\u81f3\u5c111\u5ea6\u6570\u548c\u540e\u9762\u7684\u70b9\u8fde\u8fb9\u3002\n\n\u6211\u4eec\u7528\u4e00\u4e2a\u6307\u9488$j$\u8868\u793a$[1, j]$\u5df2\u7ecf\u53d8\u6210\u4e86\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u90a3\u4e48\u5bf9\u4e8e\u679a\u4e3e\u5230\u7684$i$\u5c31\u4ece$j$\u5f80\u540e\u5f00\u59cb\u8fde\uff0c\u6240\u4ee5\u4efb\u610f\u65f6\u523b\u6211\u4eec\u8fde\u51fa\u6765\u7684\u4e00\u5b9a\u4ec5\u6709\u4e00\u4e2a\u8fde\u901a\u5757\u7684\uff0c\u6839\u636e\u4e0a\u9762\u7684\u7ed3\u8bba\uff0c\u6211\u4eec\u518d\u7ef4\u62a4\u8fd9\u4e2a\u8fde\u901a\u5757\u7684\u5ea6\u6570\u4f7f\u4ed6\u4fdd\u6301\u6709\u81f3\u5c11\u4e3a1\u7684\u5ea6\u6570\u5373\u53ef\u3002\n\n\u6211\u5199\u9898\u89e3\u4e00\u822c\u90fd\u5199\u7684\u5f88\u5c11\u7684\uff0c\u4f46\u8fd9\u6b21\u662f\u9a8c\u9898\u7684\u5de5\u4f5c\uff0c\u6240\u4ee5\u5199\u4e00\u4e0b\u8be6\u7ec6\u8bc1\u660e\u3002\n\n\u82e5\u5f53\u524d\u679a\u4e3e\u5230\u7684$i$\u4f7f\u5f97$[1, j]$\u8fde\u901a\u5757\u6700\u540e\u4ec5\u5269$i$\u8fd9\u4e2a\u70b9\u6709$1$\u7684\u5ea6\u6570\uff0c\u4e14$j + 1$\u7684\u70b9\u5ea6\u6570\u4e3a1\uff0c\u90a3\u4e48\u8fde\u8fd9\u4e2a\u70b9\u5c31\u4f1a\u5bfc\u81f4\u65e0\u6cd5\u548c\u540e\u9762\u7684\u70b9\u8fde\u901a\uff0c\u6240\u4ee5\u8981\u627e\u5230\u540e\u9762\u7b2c\u4e00\u4e2a\u5ea6\u6570\u5927\u4e8e1\u7684\u70b9$k$\u76f8\u8fde\uff0c\u7136\u540e\u518d\u5904\u7406i\u5230k\u4e4b\u95f4\u7684\u70b9\u76f4\u5230$k$\u7684\u5ea6\u6570\u4e3a1\u6216\u533a\u95f4\u5185\u7684\u70b9\u88ab\u8fde\u5b8c\uff0c\u5982\u679c\u8fd9\u4e2a\u533a\u95f4\u8fd8\u6709\u5269\u4e0b\u7684\u70b9\u5c31\u7ee7\u7eed\u5bfb\u627e\u4e0b\u4e00\u4e2a$k$\uff0c\u76f4\u5230$[1, k]$\u4e3a\u4e00\u4e2a\u8fde\u901a\u5757\u6216\u8005\u5df2\u7ecf\u8fde\u5230\u4e86$n$\uff0c\u7531\u4e8e\u9898\u76ee\u4fdd\u8bc1\u6811\u5b58\u5728\uff0c\u6240\u4ee5\u8fde\u5230$n$\u7684\u65f6\u5019\u5df2\u7ecf\u4e0d\u9700\u8981\u4fdd\u8bc1\u5ea6\u6570\u53ef\u4ee5\u76f4\u63a5\u76f8\u8fde\u3002\n\n\u82e5\u5df2\u77e5$a > b > c > d$\uff0c\u5728\u6240\u6709\u5c06\u4ed6\u4eec\u5206\u6210\u4e24\u5bf9\u5206\u522b\u6c42\u4e58\u79ef\u7684\u548c\u7684\u65b9\u6848\u4e2d\uff0c\u6700\u5927\u503c\u4e3a$ab + cd$\u3002\n\n\u6240\u4ee5\u5bf9\u4e8e\u4e0a\u8ff0\u8fc7\u7a0b\uff0c\u56e0\u4e3a\u5728\u4efb\u610f\u65f6\u523b\uff0c\u5168\u5c40\u6700\u5c0f\u7684\u6743\u503c\u4f1a\u548c\u5f53\u524d\u8be5\u6743\u503c\u80fd\u8fde\u8fb9\u7684\u6700\u5c0f\u6743\u503c\u76f8\u4e58\uff0c\u6240\u4ee5\u6700\u7ec8\u7ed3\u679c\u4e00\u5b9a\u662f\u6700\u5927\u503c\u3002\n\n\u53ef\u4ee5\u53cd\u8bc1\uff0c\u9996\u5148\u521d\u59cb\u7684\u8fb9\u96c6\u4e3a\u7a7a\u96c6\uff0c\u80af\u5b9a\u4e3a\u6700\u4f18\u89e3\u7684\u5b50\u96c6\uff0c\u5982\u679c\u6700\u5c0f\u7684\u6743\u503c$a$\u6ca1\u6709\u548c\u5b83\u80fd\u8fde\u7684\u6700\u5c0f\u6743\u503c$b$\u76f8\u8fde\uff0c\u800c\u548c$c$\u76f8\u8fde\uff0c\u90a3\u4e48\u4e00\u5b9a\u4f1a\u5b58\u5728\u4e00\u4e2a\u6bd4$a$\u5927\u7684\u6743\u503c$d$\u548c$b$\u76f8\u8fde\uff0c\u8fd9\u8fdd\u80cc\u4e86\u4e0a\u8ff0\u7ed3\u8bba\uff0c\u6240\u4ee5\u8fd9\u4e2a\u89e3\u4e00\u5b9a\u4e0d\u662f\u6700\u4f18\u7684\uff0c\u6545\u4e0a\u8ff0\u7ed3\u8bba\u6784\u6210\u7684\u5b50\u96c6\u4e00\u5b9a\u662f\u6700\u4f18\u89e3\u7684\u5b50\u96c6\uff0c\u4e8e\u662f\u5982\u679c\u5f53\u524d\u4e3a\u6700\u4f18\u89e3\u7684\u5b50\u96c6\uff0c\u4e4b\u540e\u6bcf\u6b65\u52a0\u7684\u8fb9\u90fd\u662f\u6700\u4f18\u89e3\u7684\u5b50\u96c6\u3002\n\n\u8fd9\u4e2a\u8fc7\u7a0b\u5177\u6709\u5bf9\u79f0\u6027\uff0c\u6240\u4ee5\u5bf9\u6743\u503c\u7684\u6392\u5e8f\u4ece\u5c0f\u5230\u5927\u548c\u4ece\u5927\u5230\u5c0f\u662f\u7b49\u4ef7\u7684\u3002\n\n\u800c\u6211\u4eec\u4fdd\u8bc1\u4e86$[1, j]$\u4e3a\u8fde\u901a\u5757\uff0c\u6bcf\u6b21\u76f8\u8fde\u4e00\u5b9a\u4e0e$[j + 1, n]$\u7684\u70b9\u76f8\u8fde\uff0c\u5bf9\u4e8e$k$\u6765\u8bf4\uff0c\u56e0\u4e3a$i$\u5230$k$\u8def\u5f84\u4e0a\u7684\u70b9\u5ea6\u6570\u5747\u4e3a1\uff0c\u6240\u4ee5\u548c$k$\u76f8\u8fde\u7684\u70b9\u4e0d\u53ef\u80fd\u4e0e\u4e4b\u524d\u7684\u8fde\u901a\u5757\u6784\u6210\u73af\uff0c\u5269\u4e0b\u7684\u70b9\u4e0e$[k + 1, n]$\u7684\u70b9\u76f8\u8fde\uff0c\u8fd9\u65f6\u53ef\u4ee5\u7406\u89e3\u4e3a\u8fd9\u4e9b\u70b9\u5df2\u7ecf\u4e0d\u5b58\u5728\uff0c\u5e76\u4e14\u540e\u9762\u7684\u70b9\u5ea6\u6570\u6539\u53d8\uff0c\u7531\u4e8e\u9898\u76ee\u4fdd\u8bc1\u53ef\u4ee5\u6784\u6210\u6811\uff0c\u52a0\u4e0a\u6211\u4eec\u9650\u5236\u4e86\u6bcf\u4e2a\u70b9\u81f3\u5c11\u8981\u4fdd\u75591\u7684\u5ea6\u6570\uff0c\u6240\u4ee5\u8fd9\u4e2a\u8fc7\u7a0b\u6beb\u65e0\u5f71\u54cd\u6b63\u786e\u6027\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6O(n)\uff0c\u8fd9\u91cc\u4e3a\u4e86\u590d\u6742\u5ea6\u5bf9\u5e94\u7528\u7684\u6876\u6392\uff0c\u5b9e\u9645\u4e0a\u7528sort\u53ef\u4ee5\u57282s\u5185\u901a\u8fc7\u6240\u6709\u6570\u636e\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <algorithm>\n#include <queue>\n\n#define mp(x, y) make_pair(x, y)\n#define file(s) freopen(s\".in\", \"r\", stdin), freopen(s\".out\", \"w\", stdout);\n\nusing namespace std;\n\nconst int N = 1e7 + 10;\n\ninline int read() {\n\tbool sym = 0; int res = 0; char ch = getchar();\n\twhile (!isdigit(ch)) sym |= (ch == '-'), ch = getchar();\n\twhile (isdigit(ch)) res = (res << 3) + (res << 1) + (ch ^ 48), ch = getchar();\n\treturn sym ? -res : res;\n}\n\nstruct NODE {int d, val;} dat[N], t[N];\n\nint n, m = 5e5, last, cnt[N];\n\nlong long ans;\n\nnamespace STD {\n\tunsigned seed;\n\tunsigned rnd(unsigned x) {\n\t\tx ^= x << 13; x ^= x >> 17; x ^= x << 5; return x;\n\t}\n\tint rad(int x, int y) {\n\t\tseed = rnd(seed); return seed % (y - x + 1) + x;\n\t}\n\tvoid init() {\n\t\tseed = read();\n\t\tfor(int i = 1; i <= n; i++) t[i].d = 1, t[i].val = rad(1, 500000);\n\t\tfor(int i = 1; i <= n - 2; i++) t[rad(1, n)].d++;\n\t}\n}\n\nvoid sort() {\n\tfor (int i = 1; i <= n; i++) cnt[t[i].val]++;\n\tfor (int i = 1; i <= m; i++) cnt[i] += cnt[i - 1];\n\tfor (int i = 1; i <= n; i++) dat[cnt[t[i].val]--] = t[i];\n}\n\nint main() {\n\tint type = read(); n = read();\n\tif (type == 1) STD::init(); else {\n\t\tfor (int i = 1; i <= n; i++) t[i].d = read();\n\t\tfor (int i = 1; i <= n; i++) t[i].val = read();\n\t}\n\tsort(); last = 1;\n\tfor (int i = 1, j = 2, k = 2; i <= n; i++, j = max(j, i + 1)) {\n\t\twhile (dat[i].d == 0 && i <= n) i++; if (i > n) break;\n\t\twhile (dat[i].d > 1) {\n\t\t\twhile (dat[j].d == 0) j++; if (dat[j].d > 1) last = j;\n\t\t\tans += 1ll * dat[i].val * dat[j].val; dat[i].d--; dat[j].d--; j++;\n\t\t}\n\t\tif (last == i) {\n\t\t\tk = max(j, k); while (dat[k].d <= 1 && k < n) k++;\n\t\t\tans += 1ll * dat[i].val * dat[k].val; dat[i].d--; dat[k].d--; i = j;\n\t\t\twhile (i < k && dat[k].d > 1) {\n\t\t\t\tans += 1ll * dat[i].val * dat[k].val; dat[i].d--; dat[k].d--; i++;\n\t\t\t}\n\t\t\tif (dat[k].d == 1) last = i; else last = k; i--;\n\t\t} else {\n\t\t\twhile (dat[j].d == 0 && j < n) j++; if (dat[j].d > 1) last = j;\n\t\t\tans += 1ll * dat[i].val * dat[j].val; dat[i].d--; dat[j].d--; j++;\n\t\t}\n\t}\n\tprintf(\"%lld\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1613829570,
        "uid": 28392,
        "name": "zrzring",
        "ccfLevel": 5,
        "title": "P7390 \u300cEZEC-6\u300d\u9020\u6811"
    }
]