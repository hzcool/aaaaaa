[
    {
        "content": "- [\u539f\u9898\u94fe\u63a5](https://www.luogu.com.cn/problem/P6885)\n\n------------\n\n### \u524d\u8a00\n\n- \u795e\u4ed9 DP \u9898\uff0c\u5efa\u8bae\u8bc4\u7d2b\uff0c\u8003\u573a\u4e0a\u53ea\u80fd $30$ \u5206\u66b4\u529b\u8d70\u4eba\uff0c\u672c\u7bc7\u9898\u89e3\u4fbf\u5206\u522b\u8bb2\u89e3\u4e00\u4e0b $30$ \u5206\u548c $100$ \u5206\u7684\u505a\u6cd5\u3002\uff08\u4e4b\u6240\u4ee5\u4e0d\u8bb2 $50$ \u5206\uff0c\u662f\u56e0\u4e3a\u5b83\u6ca1\u6709\u4ec0\u4e48\u533a\u5206\u5ea6\uff0c\u80fd\u60f3\u5230\u8fd9\u4e00\u6b65\u7684\u4eba\u4e00\u822c\u5c31\u80fd\u62ff\u6ee1\u4e86\uff09\n\n\n------------\n\n### 30 \u5206\u505a\u6cd5\n\n- \u8003\u8651\u679a\u4e3e\u6bcf\u4e00\u4e2a\u53ef\u80fd\u5e8f\u5217\uff0c\u7531\u4e8e\u6bcf\u4e00\u4e2a\u65b0\u589e\u5143\u7d20\u53ea\u6709\u653e\u6700\u5de6\u6216\u653e\u6700\u53f3\u4e24\u79cd\u9009\u62e9\uff0c\u6240\u4ee5\u4e00\u5171\u53ea\u4f1a\u6709 $2^n$ \u79cd\u4e0d\u540c\u5e8f\u5217\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5e8f\u5217\uff0c\u6211\u4eec\u7528 $n^2$ \u7edf\u8ba1\u6700\u957f\u4e25\u683c\u4e0a\u5347\u5b50\u5e8f\u5217\u53ca\u5176\u6570\u91cf\uff0c\u5c31\u53ef\u4ee5\u603b\u4f53\u4ee5 $O(2^nn^2)$ \u7684\u590d\u6742\u5ea6\u89e3\u51b3\u95ee\u9898\uff0c\u7531\u4e8e\u5176\u5b9e\u8dd1\u4e0d\u6ee1\u8fd9\u4e48\u591a\uff0c\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7\u524d $30$ \u5206\u3002\n\n- \u679a\u4e3e\u65f6\u6709\u4e00\u4e2a\u5c0f\u6280\u5de7\uff1a\u6211\u4eec\u53ef\u4ee5\u75282\u8fdb\u5236\u4ece\u524d\u5230\u540e\u679a\u4e3e $2$ \u5230 $n$ \u53f7\u5143\u7d20\u600e\u4e48\u653e\uff0c\u5982\u679c\u5176\u5bf9\u5e94\u4f4d\u4e0a\u4e3a $0$\uff0c\u5c31\u4ee3\u8868\u5f53\u524d\u5143\u7d20\u653e\u5230\u5de6\u8fb9\uff0c\u6211\u4eec\u5c31\u5c06\u5176\u653e\u5165\u4e00\u4e2a\u6808\u4e2d\uff0c\u5426\u5219\u5c06\u5176\u653e\u5165\u4e00\u4e2a\u961f\u5217\u4e2d\uff0c\u800c\u6700\u7ec8\u5e8f\u5217\u5c31\u662f\uff1a\u4f9d\u6b21\u4ece\u6808\u4e2d\u53d6\u51fa\u5143\u7d20\u52a0\u4e0a\u4e00\u53f7\u5143\u7d20\u52a0\u4e0a\u4f9d\u6b21\u4ece\u961f\u5217\u4e2d\u53d6\u51fa\u5143\u7d20\uff0c\u8bfb\u8005\u53ef\u4ee5\u601d\u8003\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u662f\u8fd9\u6837\u3002\n\n- \u7531\u4e8e\u66b4\u529b\u6bd4\u8f83\u7b80\u5355\uff0c\u5c31\u4e0d\u653e\u4ee3\u7801\u4e86\u3002\n\n### 100 \u5206\u505a\u6cd5\n\n- \u9996\u5148\u6211\u4eec\u9700\u8981\u5c06\u539f\u95ee\u9898\u8fdb\u884c\u8f6c\u5316\uff0c\u8fd9\u4e5f\u662f\u672c\u9898\u6700\u96be\u7684\u5730\u65b9\u3002\n\n- \u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u4e0d\u53ef\u80fd\u5bf9\u6bcf\u4e00\u4e2a\u53ef\u80fd\u5e8f\u5217\u90fd\u8fdb\u884c\u64cd\u4f5c\uff0c\u56e0\u4e3a\u5355\u662f\u679a\u4e3e\u7684\u65f6\u95f4\u6211\u4eec\u90fd\u65e0\u6cd5\u63a5\u53d7\uff0c\u90a3\u8ba9\u6211\u4eec\u601d\u8003\u4e00\u4e0b\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u53ef\u80fd\u5e8f\u5217\uff0c\u5b83\u4e0e\u7ed9\u5b9a\u5e8f\u5217\u6709\u4ec0\u4e48\u5173\u7cfb\uff1f\u5982\u679c\u4f60\u6709\u7740\u60ca\u4eba\u7684\u76f4\u89c9\uff0c\u6216\u8bb8\u53ef\u4ee5\u770b\u51fa\uff1a\u6bcf\u4e00\u4e2a\u53ef\u80fd\u5e8f\u5217\uff0c\u90fd\u662f\u7531\u7ed9\u5b9a\u5e8f\u5217\u9009\u62e9\u4e00\u4e2a\u5b50\u5e8f\u5217\u6cbf\u4e00\u53f7\u5143\u7d20\u201c\u7ffb\u6298\u201d\u81f3\u5de6\u4fa7\u5f97\u5230\u7684\u3002\n\n- \u8fd9\u4e48\u8bf4\u53ef\u80fd\u6709\u4e9b\u62bd\u8c61\uff0c\u6362\u79cd\u8bf4\u6cd5\uff0c\u5c31\u662f\u4ece\u539f\u5e8f\u5217\u4e2d\u62bd\u51fa\u4e00\u4e9b\u6570\uff0c\u5c06\u8fd9\u4e9b\u6570\u987a\u6b21\u7ec4\u6210\u4e00\u4e2a\u65b0\u5e8f\u5217\uff0c\u518d\u7ffb\u8f6c\u8fd9\u4e2a\u5e8f\u5217\uff0c\u62fc\u63a5\u81f3\u6700\u5de6\u4fa7\u5f97\u5230\u7684\u3002\uff08\u8fd9\u4e00\u90e8\u5206\u8bf7\u8bfb\u8005\u4ed4\u7ec6\u7406\u89e3\uff09\n\n- \u800c\u6709\u4e86\u8fd9\u4e2a\u7ed3\u8bba\uff0c\u6211\u4eec\u518d\u56de\u53bb\u770b\u9898\u5c31\u5bb9\u6613\u4e86\u8bb8\u591a\uff1a\u5bf9\u4e8e\u53ef\u80fd\u5e8f\u5217\u7684\u4e00\u4e2a\u6700\u957f\u4e25\u683c\u4e0a\u5347\u5b50\u5e8f\u5217\uff0c\u4e00\u5b9a\u662f\u7531\u539f\u5e8f\u5217\u7684\u4e00\u4e2a\u4e25\u683c\u4e0b\u964d\u5b50\u5e8f\u5217\u548c\u4e00\u4e2a\u4e25\u683c\u4e0a\u5347\u5b50\u5e8f\u5217\u62fc\u63a5\u800c\u6210\u7684\uff0c\u5f53\u7136\u9700\u8981\u6ee1\u8db3\u7684\u6761\u4ef6\u662f\u524d\u8005\u7684\u6700\u5927\u503c\u4e25\u683c\u5c0f\u4e8e\u540e\u8005\u7684\u6700\u5c0f\u503c\u4e14\u4e8c\u8005\u65e0\u4ea4\uff0c\u6211\u4eec\u53d1\u73b0\u8fd9\u6837\u5e76\u4e0d\u597d\u6c42\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u524d\u8005\u65b0\u589e\u4e00\u4e2a\u5143\u7d20\uff1a\u4e25\u683c\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u6700\u5c0f\u503c\u3002\n\n- \u8fd9\u6837\u8f6c\u5316\u4e4b\u540e\uff0c\u5982\u679c\u6211\u4eec\u7528 $dp1(i)$ \u548c $dp2(i)$ \u5206\u522b\u8868\u793a\u4ee5 $i$ \u4e3a\u5f00\u59cb\u7684\u6700\u957f\u4e25\u683c\u4e0a\u5347\u548c\u4e0b\u964d\u5b50\u5e8f\u5217\uff0c\u90a3\u7b54\u6848\u4fbf\u662f $\\max(dp1(i)+dp2(i)-1)$\uff0c\u5176\u4e2d $i$ \u4ece $1$ \u53d6\u5230 $n$\u3002\n\n- \u90a3\u63a5\u4e0b\u6765\u7684\u95ee\u9898\u5c31\u662f\u5982\u4f55\u6c42\u65b9\u6848\u6570\uff0c\u9996\u5148\u5982\u679c\u6700\u957f\u4e25\u683c\u4e0a\u5347\u548c\u4e0b\u964d\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\u5206\u522b\u4e3a $cnt1(i)$ \u548c $cnt2(i)$ \uff0c\u90a3\u5bf9\u4e8e\u786e\u5b9a\u7684 $i$\uff0c\u5b50\u5e8f\u5217\u7684\u4e2a\u6570\u663e\u7136\u662f $cnt1(i) \\times cnt2(i)$\uff0c\u6211\u4eec\u7528 $len$ \u8868\u793a\u6700\u957f\u4e25\u683c\u4e0a\u5347\u5b50\u5e8f\u5217\u957f\u5ea6\uff08\u62fc\u63a5\u540e\uff09\uff0c\u8fd9\u65f6\u6211\u4eec\u6765\u8003\u8651\u5176\u4ed6\u5143\u7d20\u600e\u4e48\u653e\uff1a\n\n1. $A_1$ \u5c5e\u4e8e\u6700\u957f\u4e25\u683c\u4e0a\u5347\u5b50\u5e8f\u5217\uff08\u62fc\u63a5\u540e\uff09\uff0c\u90a3\u8fd9\u65f6\u4e0d\u5728\u5e8f\u5217\u4e2d\u7684\u6240\u6709\u5143\u7d20\u663e\u7136\u6709\u7ffb\u8fc7\u53bb\u548c\u4e0d\u7ffb\u8fc7\u53bb\u4e24\u79cd\u9009\u62e9\uff0c\u6240\u4ee5\u5b83\u4eec\u7684\u9009\u62e9\u6709 $2^{n-len}$ \u79cd\u3002\n\n2. $A_1$ \u4e0d\u5c5e\u4e8e\u6700\u957f\u4e25\u683c\u4e0a\u5347\u5b50\u5e8f\u5217\uff08\u62fc\u63a5\u540e\uff09\uff0c\u8fd9\u65f6\u4e0d\u5728\u5e8f\u5217\u4e2d\u7684\u5143\u7d20\u9664\u4e86$A_1$ \u90fd\u6709\u4e24\u79cd\u9009\u62e9\uff0c\u53ef\u522b\u5fd8\u4e86\u5bf9\u4e8e\u62fc\u63a5\u524d\u4e24\u4e2a\u5b50\u5e8f\u5217\u7684\u63a5\u53e3\uff08\u5c31\u662f\u540c\u65f6\u5c5e\u4e8e\u4e24\u4e2a\u5e8f\u5217\u7684\u90a3\u4e2a\u5143\u7d20\uff09\uff0c\u7531\u4e8e\u5b83\u4e0d\u662f $A_1$,\u6240\u4ee5\u5b83\u53ef\u4ee5\u8ddf\u7740\u4efb\u4f55\u4e00\u4e2a\u5e8f\u5217\u8d70\uff0c\u7ffb\u4e0d\u7ffb\u90fd\u53ef\u4ee5\uff0c\u6240\u4ee5\u65b9\u6848\u8fd8\u8981 $\\times 2$\uff0c\u6240\u4ee5\u4e5f\u662f $2^{n-len}$ \u79cd\u3002\n\n- \u7efc\u4e0a\u6240\u8ff0\uff0c\u5bf9\u4e8e\u786e\u5b9a\u7684 $i$\uff0c\u65b9\u6848\u6570\u4e3a: \n$$cnt1(i) \\times cnt2(i) \\times2^{n-len}$$\n\n- \u6700\u540e\u4fbf\u662f\u5982\u4f55\u5feb\u901f\u6c42\u6700\u957f\u4e25\u683c\u4e0a\u5347\u5b50\u5e8f\u5217\uff0c\u76f8\u4fe1\u5927\u5bb6\u90fd\u4f1a $n^2$ \u7684\u505a\u6cd5\uff0c\u800c\u6811\u72b6\u6570\u7ec4\u4f18\u5316\u4e5f\u4e0d\u96be\uff0c\u8fd9\u91cc\u5c31\u4e0d\u7ec6\u8bb2\u4e86\u3002\uff08\u6ce8\u610f\u4e0d\u80fd\u7528\u8d2a\u5fc3\u52a0\u4e8c\u5206\uff0c\u56e0\u4e3a\u90a3\u6837\u4e0d\u4fbf\u4e8e\u7edf\u8ba1\u65b9\u6848\u6570\uff09\n\n- \u653e\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define LL long long\n#define lowbit(x) x&-x\nconst int N=2e5+10,mod=1e9+7;\nint n,A[N];\nLL ans1,ans2,dp1[N],dp2[N],cnt1[N],cnt2[N],fac[N];\nvector<int> vec;\nstruct node\n{\n\tint val;\n\tLL num;\n\tnode()\t{val=0,num=1;}\n\tinline void add(int x,LL y)\n\t{\n\t\tif(x>val)\tval=x,num=y;\n\t\telse if(x==val)\tnum=(num+y)%mod;\n\t}\n}C1[N],C2[N];\ninline void insert(int x,int y,LL z,node C[])\n{\n\tfor(;x<=n+1;x+=lowbit(x))\tC[x].add(y,z);\n}\ninline node query(int x,node C[])\n{\n\tnode res;\n\tfor(;x;x-=lowbit(x))\tres.add(C[x].val,C[x].num);\n\tres.num=res.val?res.num:1;\n\treturn res;\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfac[0]=1;\n\tfor(int i=1;i<=n;i++)\tfac[i]=fac[i-1]*2%mod;\n\tfor(int i=1;i<=n;i++)\tscanf(\"%d\",&A[i]),vec.push_back(A[i]);\n\tsort(vec.begin(),vec.end());\n\tvec.erase(unique(vec.begin(),vec.end()),vec.end());\n\tfor(int i=1;i<=n;i++)\tA[i]=lower_bound(vec.begin(),vec.end(),A[i])-vec.begin()+2;\n\tfor(int i=n;i>=1;i--)\n\t{\n\t\tnode up=query(n+1-A[i],C1),down=query(A[i]-1,C2);\n\t\tdp1[i]=up.val+1,cnt1[i]=up.num;;\n\t\tdp2[i]=down.val+1,cnt2[i]=down.num;\n\t\tinsert(n+2-A[i],dp1[i],cnt1[i],C1);\n\t\tinsert(A[i],dp2[i],cnt2[i],C2);\n\t}\n\tfor(int i=1;i<=n;i++)\t\n\t{\n\t\tint len=dp1[i]+dp2[i]-1;\n\t\tif(len>ans1)\tans1=len,ans2=cnt1[i]*cnt2[i]%mod*fac[n-len]%mod;\n\t\telse if(len==ans1)\tans2=(ans2+cnt1[i]*cnt2[i]%mod*fac[n-len]%mod)%mod;\n\t}\n\tprintf(\"%lld %lld\",ans1,ans2);\n\treturn 0;\t\n} \n```\n- \u5b8c\u7ed3\u6492\u82b1~\n\n\n\n\n\n\n\n",
        "postTime": 1663658965,
        "uid": 297806,
        "name": "Demeanor_Roy",
        "ccfLevel": 6,
        "title": "P6885 Zoltan \u9898\u89e3"
    },
    {
        "content": "# \u524d\u60c5\u63d0\u8981\n\u672c\u9898\u89e3\u7531[https://hsin.hr/coci/archive/2016_2017/](https://hsin.hr/coci/archive/2016_2017/)\n\u4ee5\u53ca[https://fanyi.baidu.com/](https://fanyi.baidu.com/)\n\u8d5e\u52a9\u53d1\u5e03\u3002\n# Zoltan\n\u4e3a\u4e86\u786e\u5b9a\u8fd9\u79cd\u6700\u957f\u4e25\u683c\u9012\u589e\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u6211\u4eec\u5fc5\u987b\u9488\u5bf9\u521d\u59cb\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e2a\u4f4d\u7f6e $x$ \uff0c\u786e\u5b9a\u4ece $x$ \u53f3\u4fa7\u4f4d\u7f6e\u5f00\u59cb\u5230 $x$ \u4f4d\u7f6e\u7ed3\u675f\u7684\u6700\u957f\u4e25\u683c\u9012\u51cf\u5b50\u5e8f\u5217\uff08\u5e8f\u5217\u4ece\u53f3\u5411\u5de6\u8bfb\u53d6\uff09\u7684\u957f\u5ea6\uff0c\u4ee5\u53ca\u5b9e\u73b0\u8be5\u6700\u5927\u503c\u7684\u65b9\u6cd5\u7684\u6570\u91cf\u3002\u540c\u6837\u7684\u601d\u60f3\u9002\u7528\u4e8e\u6700\u957f\u7684\u4e25\u683c\u9012\u51cf\u5b50\u5e8f\u5217\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u79cd\u76f8\u5bf9\u7b80\u5355\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u4f7f\u7528\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathcal O(n\\log n)$ \u7684 Fenwick \u6811\u6570\u636e\u7ed3\u6784\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u6ce8\u610f\u5230\uff0c\u89e3\u662f\u4e25\u683c\u9012\u589e\u548c\u4e25\u683c\u9012\u51cf\u5b50\u5e8f\u5217\u7684\u5e76\u96c6\uff0c\u4f7f\u5f97\u4e25\u683c\u9012\u589e\u5b50\u5e8f\u5217\u7684\u6700\u5927\u5143\u7d20\u5c0f\u4e8e\u4e25\u683c\u9012\u51cf\u5b50\u987a\u5e8f\u7684\u6700\u5c0f\u5143\u7d20\u3002\u5982\u679c $a$ \u662f\u5728\u4f4d\u7f6e $x$ \uff08\u5305\u62ec\u4f4d\u7f6e $x$ \uff09\u7ed3\u675f\u7684\u6700\u957f\u4e25\u683c\u9012\u589e\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u5e76\u4e14 $b$ \u5bf9\u4e8e\u4e25\u683c\u9012\u51cf\u5b50\u5e8f\u5217\u662f\u76f8\u540c\u7684\uff0c\u5e76\u4e14\u5982\u679c $num_a$ \u3001 $num_b$ \u5206\u522b\u662f\u83b7\u5f97\u5b83\u4eec\u7684\u65b9\u6cd5\u7684\u6570\u91cf\uff0c\u5219 $x$ \uff08\u5305\u62ec\u4f4d\u7f6e $x$ \uff09\u53f3\u4fa7\u7684\u6570\u5b57\u7684\u6700\u5927\u957f\u5ea6\u662f $a+b-1$ \uff0c\u5e76\u4e14\u83b7\u5f97\u8be5\u89e3\u7684\u65b9\u6cd5\u7684\u6570\u91cf\u662f $num_ a\\times num_b$ \u3002\n\n\u6240\u9700\u7684\u6700\u5927\u957f\u5ea6\u662f\u6bcf\u4e2a\u4f4d\u7f6e\u6240\u8ff0\u6700\u5927\u957f\u5ea6\u7684\u6700\u5927\u503c\u3002\u6211\u4eec\u7528 $r$ \u8868\u793a\u8fd9\u4e2a\u6570\u3002\u7136\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9e\u73b0\u8fd9\u4e2a\u957f\u5ea6\u7684\u8def\u5f84\u6570\u662f\u6240\u6709\u4f4d\u7f6e\u7684\u8def\u5f84\u6570\u7684\u4e58\u79ef\uff0c\u5176\u4e2d\u6700\u5927\u957f\u5ea6\u7b49\u4e8e $r\\times (2n-r)$ \u3002\n\n\u56e0\u5b50 $2n-r$ \u662f\u5fc5\u8981\u7684\uff0c\u56e0\u4e3a\u5982\u679c\u89e3\u7531 $r$ \u4e2a\u6570\u7ec4\u6210\uff0c\u5219\u5269\u4f59\u7684 $n-r$ \u4e2a\u6570\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u53ef\u4ee5\u72ec\u7acb\u5730\u653e\u7f6e\u5728\u6240\u6709\u6570\u4e4b\u524d\u6216\u4e4b\u540e\u3002\n# AC\u4ee3\u7801\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\n#define TRACE(x) cout << #x << \" = \" << x << endl;\n\ntypedef long long int llint;\n\ntypedef pair<int, int> par;\n\n#define X first\n#define Y second\n\nconst int MAXN = 500010, MOD = 1000000007;\n\ninline int add(int a, int b)\n{\n  int ret = a + b;\n  if(ret >= MOD) ret -= MOD;\n  return ret;\n}\n\ninline int mul(int a, int b)\n{\n  llint ret = (llint)a * b;\n  if(ret >= MOD) ret %= MOD;\n  return ret;\n}\n\nint n;\nint niz[MAXN], dva[MAXN];\n\npar A[MAXN], B[MAXN];\npar FWT_gore[MAXN], FWT_dolje[MAXN];\n\npar rj;\n\npar spoji(par a, par b)\n{\n if(b.X > a.X)\n {\n   a.X = b.X;\n   a.Y = b.Y;\n } \n else if(b.X == a.X)\n   a.Y = add(a.Y, b.Y);\n return a;\n}\n\nvoid ubaci_gore(int x, par v)\n{\n  x += 5;\n  for(; x < MAXN; x += x & -x)\n    FWT_gore[x] = spoji(FWT_gore[x], v);\n}\n\npar upit_gore(int x)\n{\n  x += 5;\n  par ret(0, 0);\n  for(; x > 0; x -= x & -x)\n    ret = spoji(ret, FWT_gore[x]);\n  return ret;\n}\n\nvoid ubaci_dolje(int x, par v)\n{\n  x += 5;\n  for(; x > 0; x -= x & -x)\n    FWT_dolje[x] = spoji(FWT_dolje[x], v);\n}\n\npar upit_dolje(int x)\n{\n  x += 5;\n  par ret(0, 0);\n  for(; x < MAXN; x += x & -x)\n    ret = spoji(ret, FWT_dolje[x]);\n  return ret;\n}\n\nvoid sazmi()\n{\n  vector<int> v;\n  for(int i = 0; i < n; i++)\n    v.push_back(niz[i]);\n  sort(v.begin(), v.end());\n  v.resize(unique(v.begin(), v.end()) - v.begin());\n  for(int i = 0; i < n; i++)\n    niz[i] = lower_bound(v.begin(), v.end(), niz[i]) - v.begin();\n}\n\nvoid sredi_gore()\n{\n  for(int i = n - 1; i >= 0; i--)\n  {\n    par p = upit_gore(niz[i] - 1);\n    if(p.X == 0)\n    {\n      A[i] = par(0, 1);\n      ubaci_gore(niz[i], par(1, 1));\n    }\n    else \n    {\n      A[i] = p;\n      p.X++;\n      ubaci_gore(niz[i], p);\n    }\n  }\n}\n\nvoid sredi_dolje()\n{\n  for(int i = n - 1; i >= 0; i--)\n  {\n    par p = upit_dolje(niz[i] + 1);\n    if(p.X == 0)\n    {\n      B[i] = par(0, 1);\n      ubaci_dolje(niz[i], par(1, 1));\n    }\n    else\n    {\n      B[i] = p;\n      p.X++;\n      ubaci_dolje(niz[i], p);\n    }\n  }\n}\n\nvoid postavi()\n{\n  dva[0] = 1;\n  for(int i = 1; i < MAXN; i++)\n    dva[i] = mul(dva[i - 1], 2);\n}\n\nvoid glavno()\n{\n  for(int i = 0; i < n; i++)\n    rj = spoji(rj, par(A[i].X + 1 + B[i].X, mul(A[i].Y, B[i].Y)));\n  rj.Y = mul(rj.Y, dva[n - rj.X]);\n}\n\nint main()\n{\n  postavi();\n  scanf(\"%d\", &n);\n  for(int i = 0; i < n; i++)\n    scanf(\"%d\", &niz[i]);\n  sazmi();\n  sredi_gore();\n  sredi_dolje();\n  glavno();\n  printf(\"%d %d\\n\", rj.X, rj.Y);\n  return 0;\n}\n```\n",
        "postTime": 1662439440,
        "uid": 681383,
        "name": "lidundun",
        "ccfLevel": 4,
        "title": "Zoltan"
    }
]