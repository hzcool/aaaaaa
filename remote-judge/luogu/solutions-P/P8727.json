[
    {
        "content": "## A  \u5408\u6570\u4e2a\u6570\n\u76f4\u63a5\u7528\u5faa\u73af\u8fdb\u884c\u679a\u4e3e\u641c\u7d22\u3002\u7f16\u5199\u7684\u51fd\u6570\u5982\u4e0b\u3002\n```c\nvoid work1()\n{\n    int ans=0;\n    for (int i=4;i<=2020;i++)\n    {\n        int j;\n        for (j=2;j*j<=i;j++)\n            if (i%j==0) break;\n        if (j*j<=i) ans++;\n    }\n    printf(\"%d\\n\", ans);\n}\n\n```\n\n\u6267\u884c\u4e0a\u9762\u7684\u5904\u7406\u51fd\u6570\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a$1713$\u3002\n\n## B  \u542b $2$ \u5929\u6570\n\n\u76f4\u63a5\u7528\u5faa\u73af\u5bf9\u6bcf\u4e00\u5929\u8fdb\u884c\u679a\u4e3e\u5224\u65ad\uff0c\u82e5\u5e74\u3001\u6708\u3001\u65e5\u6570\u5b57\u4e2d\u542b\u6709 $2$\uff0c\u5219\u8ba1\u6570\u3002\n\u7f16\u5199\u7684\u51fd\u6570\u5982\u4e0b\u3002\n```c\nint check(int x)   // \u5224\u65ad\u6574\u6570x \u4e2d\u662f\u5426\u542b\u6709\u6570\u5b57 2\n{\n\twhile(x)\n    {\n\t\tif (x%10==2) return 1;\n\t\tx/=10;\n\t}\n\treturn 0;\n}\nvoid work2()\n{\n    int month[2][13]={{0,31,28,31,30,31,30,31,31,30,31,30,31},\n                      {0,31,29,31,30,31,30,31,31,30,31,30,31}};\n    int y,m,d,ans=0;\n    for (y=1900;y<=9999;y++)\n    {\n        int f;\n        if (y%400==0||(y%4==0 && y%100!=0)) f=1;\n\t    else f=0;\n    \tfor (m=1;m<=12;m++)\n        {\n    \t\tfor (d=1;d<=month[f][m];d++)\n    \t\t{\n    \t\t\tif (check(y)||check(m)||check(d)) ans++;\n\t\t\t}\n\t\t}\n\t}\n    printf(\"%d\\n\", ans);\n}\n\n```\n\u6267\u884c\u4e0a\u9762\u7684\u5904\u7406\u51fd\u6570\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a$1994240$\u3002\n\n\n## C   \u672c\u8d28\u4e0a\u5347\u5e8f\u5217\n\n\u7528\u7ebf\u6027\u52a8\u6001\u89c4\u5212\u8fdb\u884c\u6c42\u89e3\u3002\n\n\u5b9a\u4e49\u72b6\u6001 $dp_i$ \u8868\u793a\u4ee5\u5b57\u7b26 $s_i$ \u7ed3\u5c3e\u7684\u672c\u8d28\u4e0d\u540c\u7684\u65b9\u6848\u6570\u3002\n\n\u7531\u4e8e\u7b2c $i$ \u4e2a\u5b57\u7b26\u7684\u72b6\u6001\u53ea\u4f1a\u548c\u524d $i-1$ \u4e2a\u5b57\u7b26\u6709\u5173\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u679a\u4e3e\u524d $i-1$ \u4e2a\u5b57\u7b26\u3002\n\n\u5f53\u524d $i-1$ \u4e2a\u5b57\u7b26\u4e2d\u6709\u67d0\u4e2a\u5b57\u7b26 $s_j$ \u548c $s_i$ \u76f8\u540c\u65f6\uff0c\u90a3\u4e48\u5c31\u4f1a\u51fa\u73b0\u91cd\u590d\u7684\u65b9\u6848\uff1b\u4f46\u662f\u7531\u4e8e $dp_i$ \u662f\u4e00\u5b9a\u5df2\u7ecf\u5305\u542b\u4e86 $dp_j$ \u7684\uff0c\u6240\u4ee5\u4e3a\u4e86\u907f\u514d\u91cd\u590d\uff0c\u53ef\u4ee5\u4ee4  $dp_j=0$\u3002\n\n\u5f53\u524d $i-1$ \u4e2a\u5b57\u7b26\u4e2d\u6709\u67d0\u4e2a\u5b57\u7b26 $s_j$ \u5c0f\u4e8e $s_i$ \u65f6\uff0c\u90a3\u4e48 $dp_i=dp_i+dp_j$\u3002\u56e0\u4e3a $s_i>s_j$\uff0c\u6240\u4ee5\u76f4\u63a5\u5728\u4ee5   $s_j$ \u7ed3\u5c3e\u7684\u672c\u8d28\u4e0a\u5347\u5e8f\u5217\u7ed3\u5c3e\u52a0\u4e00\u4e2a\u5b57\u7b26 $s_i$\uff0c\u8fd9\u6837\u4e5f\u662f\u4e00\u4e2a\u672c\u8d28\u4e0a\u5347\u5e8f\u5217\u3002\u8fd9\u6837\u53ef\u4ee5\u7ee7\u627f $dp_j$ \u7684\u6240\u6709\u53ef\u884c\u65b9\u6848\u3002\n\n\u5f53\u524d $i-1$ \u4e2a\u5b57\u7b26\u4e2d\u6709\u67d0\u4e2a\u5b57\u7b26 $s_j$ \u5927\u4e8e $s_i$ \u65f6\uff0c\u76f4\u63a5\u8df3\u8fc7\u5373\u53ef\u3002\n\n\u6700\u540e\u7ed3\u679c\u4fbf\u662f $dp_1+dp_2+\u2026+dp_{200}$\u3002\n\n\u7f16\u5199\u7684\u51fd\u6570\u5982\u4e0b\u3002\n```c\nvoid work3()\n{\n    int dp[210]={0};\n    char s[210]=\"tocyjkdzcieoiodfpbgcncsrjbhmugdnojjddhllnofawllbhfiadgdcdjstemphmnjihecoapdjjrprrqnhgccevdarufmliqijgihhfgdcmxvicfauachlifhafpdccfseflcdgjncadfclvfmadvrnaaahahndsikzssoywakgnfjjaihtniptwoulxbaeqkqhewl\";\n    int ans = 0;\n    int i,j;\n    for (i=0;i<strlen(s);i++)\n    {\n    \tdp[i]=1;\n    \tfor (j=0;j<i;j++)\n    \t{\n    \t\tif (s[i]==s[j]) dp[i]=0;\n    \t\telse if (s[j]<s[i]) dp[i]+=dp[j];\n\t\t}\n\t}\n\tfor (i=0;i<strlen(s);i++)  ans+=dp[i];\n    printf(\"%d\\n\", ans);\n}\n\n```\n\u6267\u884c\u4e0a\u9762\u7684\u5904\u7406\u51fd\u6570\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a$3616159$\u3002\n\n\n## D  \u54ab\u5c3a\u5929\u6daf\n\n\u4e00\u4e2a $k$ \u9636\u7684\u76ae\u4e9a\u8bfa\u66f2\u7ebf\u6709 $3^k$ \u884c\uff0c\u6bcf\u884c $3^k$ \u5217\uff0c\u5171 $3^k\\times 3^k$ \u4e2a\u683c\u5b50\uff0c\u5728\u8fd9\u4e9b\u683c\u5b50\u4e2d\uff0c\u6bcf\u884c\u4e2d\u76f8\u90bb\u7684\u683c\u5b50\u6570\u6709 $3^k-1$ \u4e2a\uff0c\u6bcf\u5217\u4e2d\u76f8\u90bb\u7684\u683c\u5b50\u6570\u4e5f\u6709 $3^k-1$ \u4e2a\uff0c\u56e0\u6b64\u76f8\u90bb\u7684\u683c\u5b50\u603b\u6570\u4e3a $2\\times 3^k \\times (3^k-1)$ \u4e2a\u3002\n\n\u4f8b\u5982\uff0c$1$ \u9636\u76ae\u4e9a\u8bfa\u66f2\u7ebf\u4e2d\u76f8\u90bb\u7684\u683c\u5b50\u6709 $2\\times 3 \\times (3-1)=12$ \u4e2a\u3002\n\n$2$ \u9636\u76ae\u4e9a\u8bfa\u66f2\u7ebf\u4e2d\u76f8\u90bb\u7684\u683c\u5b50\u6709 $2\\times 3^2 \\times (3^2-1)=2\\times 9 \\times 8=144$ \u4e2a\u3002\n\n\u7531\u9898\u76ee\u7ed9\u51fa\u7684\u793a\u610f\u56fe\u53ef\u77e5\uff0c\u4e00\u4e2a $k$ \u9636\u7684\u76ae\u4e9a\u8bfa\u66f2\u7ebf\u53ef\u4ee5\u5212\u5206\u4e3a $9$ \u4e2a $k-1$ \u9636\u7684\u76ae\u4e9a\u8bfa\u66f2\u7ebf\uff0c\u800c\u6bcf\u4e2a $k-1$ \u9636\u66f2\u7ebf\u5185\u90e8\u76f8\u90bb\u4e24\u4e2a\u683c\u5b50\u7684\u8ddd\u79bb\u548c\u4e0d\u53d7\u5176\u4f59\u540c\u9636\u66f2\u7ebf\u7684\u5f71\u54cd\u3002\n\n\u8bbe\u4e00\u4e2a $k-1$ \u9636\u76ae\u4e9a\u8bfa\u66f2\u7ebf\u5185\u90e8\u76f8\u90bb\u4e24\u4e2a\u683c\u5b50\u7684\u8ddd\u79bb\u548c\u4e3a  $a$\uff0c\u6bcf\u4e24\u4e2a $k-1$ \u9636\u76ae\u4e9a\u8bfa\u66f2\u7ebf\u95f4\u4e0a\u4e0b\u76f8\u90bb\u7684\u683c\u5b50\u7684\u8ddd\u79bb\u548c\u4e3a $b$\uff0c\u6bcf\u4e24\u4e2a $k-1$ \u9636\u76ae\u4e9a\u8bfa\u66f2\u7ebf\u95f4\u5de6\u53f3\u76f8\u90bb\u7684\u683c\u5b50\u7684\u8ddd\u79bb\u548c\u4e3a $c$\uff0c\u5219\u4e00\u4e2a $k$ \u9636\u76ae\u4e9a\u8bfa\u66f2\u7ebf\u5185\u90e8\u76f8\u90bb\u4e24\u4e2a\u683c\u5b50\u7684\u8ddd\u79bb\u548c\u4e3a $9\\times a+b+c$\u3002\n\n\u4f8b\u5982\uff0c\u5bf9\u4e8e $2$ \u9636\u76ae\u4e9a\u8bfa\u66f2\u7ebf\u4e2d\u76f8\u90bb\u7684\u683c\u5b50\u6709 $144$ \u4e2a\uff0c\u82e5\u5c06 $2$ \u9636\u76ae\u4e9a\u8bfa\u66f2\u7ebf\u770b\u6210\u7531 $9$ \u4e2a $1$ \u9636\u76ae\u4e9a\u8bfa\u66f2\u7ebf\u7ec4\u6210\uff0c\u5219\u6bcf\u4e2a $1$ \u9636\u76ae\u4e9a\u8bfa\u66f2\u7ebf\u5185\u90e8\u76f8\u90bb\u7684\u683c\u5b50\u6709 $12$ \u4e2a\uff0c\u4e24\u4e2a $1$ \u9636\u76ae\u4e9a\u8bfa\u66f2\u7ebf\u7684\u6c34\u5e73\u65b9\u5411\u4e0a\u76f8\u90bb\u7684\u683c\u5b50\u6709\u4e24\u884c\uff0c\u6bcf\u884c $9$ \u4e2a\u683c\u5b50\uff0c\u5782\u76f4\u65b9\u5411\u4e0a\u76f8\u90bb\u7684\u683c\u5b50\u6709\u4e24\u5217\uff0c\u6bcf\u5217\u540c\u6837 $9$ \u4e2a\u683c\u5b50\u3002\u5982\u4e0b\u56fe\u6240\u793a\u3002\u4e5f\u5c31\u662f $2$ \u9636\u76ae\u4e9a\u8bfa\u66f2\u7ebf\u4e2d\u76f8\u90bb\u7684 $144$ \u4e2a\u683c\u5b50\u53ef\u4ee5\u5206\u89e3\u4e3a $9\\times 12 +2\\times 9 +2\\times 9$\u3002\n\n\n![]( https://cdn.luogu.com.cn/upload/image_hosting/0w03a40g.png?x-oss-process=image/resize,m_lfit,h_306,w_405)\n\n\u56e0\u6b64\uff0c\u53ef\u4ee5\u4ece\u4f4e\u9636\u7684\u8ddd\u79bb\u548c\u9012\u63a8\u8ba1\u7b97\u51fa\u9ad8\u9636\u7684\u8ddd\u79bb\u548c\u3002\u5176\u4e2d\u5173\u952e\u662f\u6c42\u4f4e\u9636\u66f2\u7ebf\u4e4b\u95f4\u6c34\u5e73\u548c\u5782\u76f4\u76f8\u90bb\u7684\u8ddd\u79bb\u548c $b$ \u548c $c$\u3002\n\n\u7531\u56fe\u53ef\u53d1\u73b0\uff0c\u4e24\u884c\u6216\u4e24\u5217\u4e4b\u95f4\u76f8\u90bb\u5757\u7684\u8ddd\u79bb\u548c\u662f\u76f8\u7b49\u7684\uff0c\u4e8e\u662f\u53ea\u9700\u8ba8\u8bba\u4e00\u884c\u6216\u4e00\u5217\u7684\u8ddd\u79bb\u548c\u7684\u8ba1\u7b97\u65b9\u6cd5\uff0c\u5c06\u5176\u548c\u4e58\u4ee5 $2$ \u5373\u53ef\u3002\n\u82e5\u5c06 $k$ \u9636\u7684\u76ae\u4e9a\u8bfa\u66f2\u7ebf\u7684\u6700\u5de6\u4e0b\u89d2\u7684\u683c\u5b50\u8bbe\u7f6e\u4e3a\u539f\u70b9 $(0,0)$\uff0c\u6c34\u5e73\u5411\u53f3\u4e3a Y \u8f74\uff0c\u5782\u76f4\u5411\u4e0a\u4e3a X \u8f74\uff0c\u5219\u6bcf\u4e2a\u683c\u5b50\u7684\u5750\u6807\u5c31\u786e\u5b9a\u4e86\u3002\n\n$k$ \u9636\u7684\u76ae\u4e9a\u8bfa\u66f2\u7ebf\u6709 $3^k$ \u884c\u683c\u5b50\uff0c$k-1$ \u9636\u7684\u76ae\u4e9a\u8bfa\u66f2\u7ebf\u6709 $3^{k-1}$ \u884c\u683c\u5b50\uff0c\u56e0\u6b64\u6c34\u5e73\u65b9\u5411\u4e0a\uff0c$x$ \u503c\u4e3a $3^{k-1}$ \u548c $3^{k-1}-1$ \u7684\u683c\u5b50\u4e0a\u4e0b\u76f8\u90bb\uff0c\u5176 $y$ \u503c\u4ece $0 \\sim 3^k$\u3002\n\n\u5bf9\u4e8e\u76f8\u90bb\u7684\u4e24\u4e2a\u683c\u5b50 $(x,y)$ \u548c  $(x-1,y)$  \u8ba1\u7b97\u51fa\u5b83\u4eec\u4e0e\u539f\u70b9\u7684\u8ddd\u79bb\uff0c\u5219\u5dee\u7684\u7edd\u5bf9\u503c\u5c31\u662f\u76f8\u90bb\u4e24\u4e2a\u683c\u5b50\u7684\u8ddd\u79bb\u3002\n\n\u6c42\u4e00\u4e2a\u683c\u5b50 $(x,y)$ \u4e0e\u539f\u70b9 $(0,0)$ \u4e4b\u95f4\u7684\u8ddd\u79bb\u91c7\u7528\u9012\u5f52\u5b8c\u6210\uff0c\u53ef\u53c2\u770b\u7a0b\u5e8f\u4ee3\u7801\u3002\n\n\u7f16\u5199\u7684\u51fd\u6570\u5982\u4e0b\u3002\n```c\nlong long p[14];\nlong long abs(long long a)\n{\n    return a > 0 ? a : -a;\n}\nlong long calc(int k, long long x, long long  y) //\u6c42k\u9636\u66f2\u7ebf\u4e2d(x,y)\u4e0e\u539f\u70b9\uff080.0)\u7684\u8ddd\u79bb\n{\n    if (k == 0) return 0;\n    long long offset = x / p[k] * 3;\n    int flag = (offset == 3);\n    offset += flag ? (3 - y / p[k] - 1) : (y / p[k]);\n    if ((offset & 1) == 1)\n        x =  p[k] - x % p[k] - 1;\n    if (flag )\n         return  ((offset + 1) * p[k] * p[k] - calc(k - 1, x % p[k], y % p[k]) - 1) ;\n    else\n         return  (offset * p[k] * p[k] + calc(k - 1, x % p[k], y % p[k])) ;\n}\nvoid work4()\n{\n    int i,j;\n    p[1]=1;\n    for (i = 2; i <= 13; i++)\n        p[i] = p[i-1] * 3;\n    long long ans=0;\n    for (i = 1; i <= 12; i++)\n    {\n        long long tmp = 0;\n        for (j = 0; j < p[i + 1]; j++)\n        {\n            tmp += abs(calc(i, j, p[i]) - calc(i, j, p[i] - 1));\n            tmp += abs(calc(i, p[i], j) - calc(i, p[i] - 1, j));\n        }\n        ans = 9 * ans + 2 * tmp;\n    }\n    printf(\"%lld\", ans);\n}\n\n```\n\u6267\u884c\u4e0a\u9762\u7684\u5904\u7406\u51fd\u6570\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a$184731576397539360$\u3002\n\n\n## E  \u73a9\u5177\u86c7\n\u4ece $16$ \u4e2a\u65b9\u683c\u4e2d\u7684\u6bcf\u4e2a\u65b9\u683c\u4f5c\u4e3a\u8d77\u70b9\uff0c\u5206\u522b\u7528 DFS \u8fdb\u884c\u641c\u7d22\uff0c\u82e5\u4ece\u67d0\u4e2a\u8d77\u70b9\u51fa\u53d1\u80fd\u8d70 $16$ \u6b65\uff0c\u5219\u5c31\u662f\u4e00\u79cd\u53ef\u884c\u7684\u65b9\u6848\u3002\n```c\nint dx[4]={1, -1, 0, 0};\nint dy[4]={0, 0, 1, -1};\nint ans=0;\nint vis[16];\nint len;\nvoid dfs(int n)\n{\n    if (len == 16)\n    {\n        ans++;\n        return;\n    }\n    for (int i = 0; i < 4; i++)\n    {\n        int nx = n / 4 + dx[i];\n        int ny = n % 4 + dy[i];\n        if (nx < 0 || nx >= 4 || ny < 0 || ny >= 4)\n            continue;\n        int next = 4 * nx + ny;\n        if (!vis[next])\n        {\n            vis[next] = 1;\n            len++;\n            dfs(next);\n            vis[next] = 0;\n            len--;\n        }\n    }\n}\nvoid work5()\n{\n    for (int i = 0; i < 16; i++)\n    {\n        vis[i] = 1;\n        len++;\n        dfs(i);\n        vis[i] = 0;\n        len--;\n    }\n    printf(\"%d\\n\", ans);\n}\n\n```\n\n\u6267\u884c\u4e0a\u9762\u7684\u5904\u7406\u51fd\u6570\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a$552$\u3002\n\n\u6709\u4e86\u4e0a\u9762\u7684\u5904\u7406\u7ed3\u679c\uff0c\u63d0\u4ea4\u7ed9\u672c\u9898\u7684\u6e90\u7a0b\u5e8f\u5982\u4e0b\u3002\n\n```c\n#include <stdio.h>\n#include <string.h>\nint main()\n{\n    char T;\n    scanf(\"%c\",&T);\n    if (T=='A') printf(\"1713\\n\");\n    else if (T=='B') printf(\"1994240\\n\");\n    else if (T=='C') printf(\"3616159\\n\");\n    else if (T=='D') printf(\"184731576397539360\\n\");\n    else if (T=='E') printf(\"552\\n\");    \n    return 0;\n}\n\n```\n",
        "postTime": 1680927204,
        "uid": 228457,
        "name": "wuhan1234",
        "ccfLevel": 0,
        "title": "P8727 [\u84dd\u6865\u676f 2020 \u56fd A] \u586b\u7a7a\u95ee\u9898 \u9898\u89e3"
    }
]