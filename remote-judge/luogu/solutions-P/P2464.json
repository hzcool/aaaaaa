[
    {
        "content": "## \u524d\u8a00\n\n[\u9898\u76ee\u4f20\u9001\u95e8\uff01](https://www.luogu.com.cn/problem/P2464)\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\uff1f](https://www.cnblogs.com/liangbowen/p/16735475.html)\n\n**\u9898\u89e3\u505a\u6cd5\u5e76\u6ca1\u6709\u91cd\u590d**\u3002\n\n\u9898\u89e3\u533a\u5927\u90e8\u5206\u90fd\u662f\u5206\u5757\uff0c\u552f\u4e00\u4e00\u7bc7\u83ab\u961f\u4e5f\u6ca1\u6709\u79bb\u6563\u5316\u3002\uff08\u6240\u4ee5\u90a3\u7bc7\u9898\u89e3\u5e26\u4e86\u4e2a $O(\\log n)$\uff0c\u5e38\u6570\u5de8\u5927\uff09\u3002\n\n## \u601d\u8def\n\n\u5148\u6765\u4e00\u904d\u5e26\u4fee\u83ab\u961f\u677f\u5b50\u3002\u53ea\u6709 `add()` \u4e0e `del()` \u4e0d\u540c\uff0c\u5982\u4e0b\uff1a\n\n```cpp\nvoid add(int x) {cnt[x]++;}\nvoid del(int x) {cnt[x]--;}\n```\n\n\u6bcf\u6b21\u7684\u7b54\u6848\u5c31\u662f $cnt_k$\u3002\n\n\u628a `cnt[]` \u6362\u6210 `map <int , int>` \u5373\u53ef\u83b7\u5f97 60 \u5206\uff08\u6211\u7684\u4ee3\u7801\u81ea\u5e26\u8d85\u5927\u5e38\u6570\uff09\u3002\n\n---\n\n\u6b64\u65f6\u5c31\u8981\u79bb\u6563\u5316\u4e86\u3002\u53ef\u80fd\u5b58\u5728\u7684\u6570\u636e\u6709\u539f\u672c\u7684 $a_i$ \u4e0e\u6bcf\u4e00\u6b21\u66f4\u65b0\u540e\u7684\u6570 $p$\u3002\n\n\u5c06\u8fd9\u4e24\u7ec4\u6570\u6392\u5e8f\u53bb\u91cd\u3002\u7136\u540e\u5c06 $a_i$\uff0c\u66f4\u65b0\u7528\u7684 $p$\uff0c\u8be2\u95ee\u7684 $k$\uff0c\u90fd\u79bb\u6563\u5316\u3002\n\n\u8fd9\u6837\uff0c`cnt[]` \u5c31\u53ef\u4ee5\u4f7f\u7528\u6570\u7ec4\u4e86\uff0c\u7701\u4e0b\u4e86 `map` \u7684\u65f6\u95f4\u3002\u6ce8\u610f\u8981\u5f00\u53cc\u500d\u7a7a\u95f4\u3002\n\n```cpp\nsort(t + 1, t + curt + 1); //t[] \u5b58\u50a8\u4e86\u6240\u6709 ai \u4e0e\u66f4\u65b0\u7528\u7684 p\u3002\u5177\u4f53\u53ef\u4ee5\u770b\u5b8c\u6574\u4ee3\u7801\u3002\nint tt = unique(t + 1, t + curt + 1) - t - 1; //\u53bb\u91cd\nfor (int i = 1; i <= n; i++) a[i] = lower_bound(t + 1, t + tt + 1, a[i]) - t; //\u5bf9\u4e09\u4e2a\u6570\u7ec4\u90fd\u79bb\u6563\u5316\nfor (int i = 1; i <= curAsk; i++) ask[i].k = lower_bound(t + 1, t + tt + 1, ask[i].k) - t;\nfor (int i = 1; i <= curUpd; i++) upd[i].k = lower_bound(t + 1, t + tt + 1, upd[i].k) - t;\n```\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^{\\frac{5}{3}} + n \\log n)$\u3002\u524d\u9762\u7684\u662f\u5e26\u4fee\u83ab\u961f\u6b63\u5e38\u7684\u65f6\u95f4\uff0c\u540e\u9762\u662f\u79bb\u6563\u5316\u7684\u65f6\u95f4\u3002\n\n## \u5b8c\u6574\u4ee3\u7801\n\n\u8c8c\u4f3c\u4e0d\u9700\u8981\u4ec0\u4e48\u6ce8\u91ca\uff1f\u957f\u5f97\u548c\u677f\u5b50\u597d\u50cf\uff0c\u57fa\u672c\u53ea\u6709\u4e0a\u9762\u63d0\u5230\u7684\u5730\u65b9\u6539\u52a8\u4e86\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <algorithm>\n#define space putchar(' ')\n#define endl putchar('\\n')\nusing namespace std;\ntypedef long long LL;\ntypedef long double LD;\nvoid fastio()\n{\n\tios::sync_with_stdio(false);\n\tcin.tie(0), cout.tie(0);\n }\nint read()\n{\n\tchar op = getchar(); int x = 0, f = 1;\n\twhile (op < 48 || op > 57) {if (op == '-') f = -1; op = getchar();}\n\twhile (48 <= op && op <= 57) x = (x << 1) + (x << 3) + (op ^ 48), op = getchar();\n\treturn x * f;\n}\nvoid write(int x)\n{\n\tif (x < 0) putchar('-'), x = -x;\n\tif (x > 9) write(x / 10);\n\tputchar(x % 10 + 48);\n}\nconst int N = 1e5 + 5;\nint len, a[N];\nstruct Ask {int l, r, k; int t, id;} ask[N]; int curAsk;\nstruct Upd {int id, k;} upd[N]; int curUpd;\nbool cmp(Ask x, Ask y)\n{\n\tif (x.l / len != y.l / len) return x.l / len < y.l / len;\n\tif (x.r / len != y.r / len) return x.r / len < y.r / len;\n\treturn x.t < y.t;\n}\nint cnt[N << 1];\ninline void add(int x) {cnt[x]++;}\ninline void del(int x) {cnt[x]--;}\ninline void update(int l, int r, int t)\n{\n\tif (l <= upd[t].id && upd[t].id <= r) del(a[upd[t].id]), add(upd[t].k);\n\tswap(a[upd[t].id], upd[t].k);\n}\nint ans[N];\nint t[N << 1], curt;\nint main()\n{\n\tint n = read(), m = read();\n\tfor (int i = 1; i <= n; i++) a[i] = read(), t[++curt] = a[i];\n\tlen = pow(n, 2.0 / 3);\n\tfor (int i = 1; i <= m; i++)\n\t{\n\t\tchar op; cin >> op;\n\t\tif (op == 'C')\n\t\t{\n\t\t\tint x = read(), y = read();\n\t\t\tupd[++curUpd] = (Upd){x, y};\n\t\t\tt[++curt] = y;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint l = read(), r = read(), k = read();\n\t\t\tcurAsk++, ask[curAsk] = (Ask){l, r, k, curUpd, curAsk};\n\t\t}\n\t}\n\tsort(t + 1, t + curt + 1);\n\tint tt = unique(t + 1, t + curt + 1) - t - 1;\n\tfor (int i = 1; i <= n; i++) a[i] = lower_bound(t + 1, t + tt + 1, a[i]) - t;\n\tfor (int i = 1; i <= curAsk; i++) ask[i].k = lower_bound(t + 1, t + tt + 1, ask[i].k) - t;\n\tfor (int i = 1; i <= curUpd; i++) upd[i].k = lower_bound(t + 1, t + tt + 1, upd[i].k) - t;\n\tsort(ask + 1, ask + curAsk + 1, cmp);\n\tfor (int i = 1, l = 1, r = 0, t = 0; i <= curAsk; i++)\n\t{\n\t\twhile (l < ask[i].l) del(a[l++]);\n\t\twhile (l > ask[i].l) add(a[--l]);\n\t\twhile (r < ask[i].r) add(a[++r]);\n\t\twhile (r > ask[i].r) del(a[r--]);\n\t\twhile (t < ask[i].t) update(ask[i].l, ask[i].r, ++t);\n\t\twhile (t > ask[i].t) update(ask[i].l, ask[i].r, t--);\n\t\tans[ask[i].id] = cnt[ask[i].k];\n\t}\n\tfor (int i = 1; i <= curAsk; i++) write(ans[i]), endl;\n\treturn 0;\n}\n```\n\n\u5e0c\u671b\u80fd\u5e2e\u52a9\u5230\u5927\u5bb6\uff01",
        "postTime": 1664274225,
        "uid": 367488,
        "name": "liangbowen",
        "ccfLevel": 0,
        "title": "P2464 \u9898\u89e3"
    },
    {
        "content": "### Solution\uff1a\n\n\u3000\u3000\u672c\u9898\u89e3\u6cd5\u592a\u591a\uff0c\u524d\u540e\u7528\u4e864\u79cd\u65b9\u6cd5\u53bb\u505a\uff0c\u7531\u7b80\u5165\u7e41\u3002\n\n\u3000\u3000**\u6cd5\u4e00\uff1a\u5206\u5757+map\uff08736ms\uff09**\n\n\u3000\u3000\u6211\u4eec\u53ef\u4ee5\u5c06\u6570\u5217\u5212\u5206\u4e3a$\\sqrt n$\u5757\uff0c\u6bcf\u4e2a\u5757\u7528map\u7ef4\u62a4\u5757\u5185\u5143\u7d20\u51fa\u73b0\u6b21\u6570\uff0c\u90a3\u4e48\u5355\u6b21\u4fee\u6539\u53ef\u4ee5\u505a\u5230$O(\\log(\\sqrt n))$\uff0c\u5355\u6b21\u67e5\u8be2\u80fd\u505a\u5230$\\sqrt n \\log (\\sqrt n)$\u3002\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\sqrt n \\log(\\sqrt n))$\uff0c\u6781\u9650\u6570\u636e\u80fd\u5361\u5230$2e8$\uff0c\u4f46\u662f\u672c\u9898\u6570\u636e\u6bd4\u8f83\u6c34\u4e5f\u80fd\u8fc7\u3002\n\n\u3000\u3000**\u6cd5\u4e00\u4ee3\u7801\uff1a**\n  ```cpp\n/*Code by 520 -- 10.28*/\n#include<bits/stdc++.h>\n#include<ext/pb_ds/assoc_container.hpp>\n#include<ext/pb_ds/hash_policy.hpp>\n#define il inline\n#define ll long long\n#define RE register\n#define For(i,a,b) for(RE int (i)=(a);(i)<=(b);(i)++)\n#define Bor(i,a,b) for(RE int (i)=(b);(i)>=(a);(i)--)\nusing namespace std;\nusing namespace __gnu_pbds;\nconst int N=100005;\ngp_hash_table<int,int>mp[1005];\nint n,m,a[N],bl[N],ln[N],rn[N],clo,u,v,w;\nchar opt[2];\n\nint gi(){\n    int a=0;char x=getchar();\n    while(x<'0'||x>'9') x=getchar();\n    while(x>='0'&&x<='9') a=(a<<3)+(a<<1)+(x^48),x=getchar();\n    return a;\n}    \n\nil int query(int x,int y,int z){\n    int bx=bl[x],by=bl[y],res=0;\n    if(bx==by) {\n        For(i,x,y) res+=(a[i]==z);\n        return res;\n    }\n    For(i,bx+1,by-1) res+=mp[i][z];\n    For(i,x,rn[bx]) res+=(a[i]==z);\n    For(i,ln[by],y) res+=(a[i]==z);\n    return res;\n}\n\nint main(){\n    n=gi(),m=gi(); clo=sqrt(n);\n    For(i,1,n) {\n        a[i]=gi(),bl[i]=(i-1)/clo+1,mp[bl[i]][a[i]]++;\n        if(!ln[bl[i]]) ln[bl[i]]=i;\n        rn[bl[i]]=i;\n    }\n    For(i,1,m){\n        scanf(\"%s\",opt);\n        if(opt[0]=='Q') u=gi(),v=gi(),w=gi(),printf(\"%d\\n\",query(u,v,w));\n        else {\n            u=gi(),v=gi();\n            mp[bl[u]][a[u]]--;\n            a[u]=v;\n            mp[bl[u]][a[u]]++;\n        }\n    }\n    return 0;\n}\n```\n\n\n\u3000\u3000**\u6cd5\u4e8c\uff1a\u5206\u5757+\u79bb\u6563\u5316\uff08383ms\uff09**\n\n\u3000\u3000\u6211\u4eec\u663e\u7136\u53ef\u4ee5\u7528\u5947\u6280\u6deb\u5de7\u4f18\u5316\u6389\u6cd5\u4e00\u4e2d\u7684$\\log(\\sqrt n)$\u3002\u53ea\u9700\u8981\u79bb\u7ebf\u64cd\u4f5c\uff0c\u5e76\u5bf9\u6570\u7684\u503c\u57df\u79bb\u6563\uff0c\u7136\u540e\u7528\u7a7a\u95f4\u6362\u65f6\u95f4\uff0c\u4e00\u79cd\u65b9\u6cd5\u662f\u628a\u5757\u6570\u8c03\u5c0f\uff0c\u53e6\u4e00\u79cd\u662f\u76f4\u63a5\u7528short\u7c7b\u578b\u6765\u5f00\u6876\uff08\u53cd\u6b63\u4e00\u4e2a\u5757\u5185\u7684\u5143\u7d20\u6b21\u6570\u4e0d\u4f1a\u8d85\u8fc7$\\sqrt n<2^{16}-1$\uff09\uff0c\u80fd\u5361\u7740\u7a7a\u95f4\u8fc7\u3002\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\sqrt n)$\u3002\n\n\u3000\u3000**\u6cd5\u4e8c\u4ee3\u7801\uff1a**\n  ```cpp\n/*Code by 520 -- 10.28*/\n#include<bits/stdc++.h>\n#define il inline\n#define ll long long\n#define RE register\n#define For(i,a,b) for(RE int (i)=(a);(i)<=(b);(i)++)\n#define Bor(i,a,b) for(RE int (i)=(b);(i)>=(a);(i)--)\nusing namespace std;\nconst int N=100005;\nint n,m,a[N],bl[N],ln[N],rn[N],clo,u,v,w,*q[N<<1],cnt;\nstruct node{\n    int l,r,x;\n}t[N];\nshort mp[318][N<<1];\nchar opt[N][2];\n\nint gi(){\n    int a=0;char x=getchar();\n    while(x<'0'||x>'9') x=getchar();\n    while(x>='0'&&x<='9') a=(a<<3)+(a<<1)+(x^48),x=getchar();\n    return a;\n}    \n\nil bool cmp(int *a,int *b){return *a<*b;}\n\nil int query(int x,int y,int z){\n    int bx=bl[x],by=bl[y],res=0;\n    if(bx==by) {\n        For(i,x,y) res+=(a[i]==z);\n        return res;\n    }\n    For(i,bx+1,by-1) res+=mp[i][z];\n    For(i,x,rn[bx]) res+=(a[i]==z);\n    For(i,ln[by],y) res+=(a[i]==z);\n    return res;\n}\n\nint main(){\n    n=gi(),m=gi(); clo=sqrt(n);\n    For(i,1,n) {\n        a[i]=gi(),q[++cnt]=&a[i],bl[i]=(i-1)/clo+1;\n        if(!ln[bl[i]]) ln[bl[i]]=i;\n        rn[bl[i]]=i;\n    }\n    For(i,1,m){\n        scanf(\"%s\",opt[i]);\n        if(opt[i][0]=='Q') t[i]=node{gi(),gi(),gi()},q[++cnt]=&t[i].x;\n        else t[i]=node{gi(),gi(),0},q[++cnt]=&t[i].r;\n    }\n    sort(q+1,q+cnt+1,cmp); int lst=-1,tot=0;\n    For(i,1,cnt) if(*q[i]!=lst) lst=*q[i],*q[i]=++tot; else *q[i]=tot;\n    For(i,1,n) mp[bl[i]][a[i]]++;\n    For(i,1,m){\n        if(opt[i][0]=='Q') printf(\"%d\\n\",query(t[i].l,t[i].r,t[i].x));\n        else {\n            u=t[i].l,v=t[i].r;\n            mp[bl[u]][a[u]]--;\n            a[u]=v;\n            mp[bl[u]][a[u]]++;\n        }\n    }\n    return 0;\n}\n```\n\u3000\n\n\u3000\u3000**\u6cd5\u4e09\uff1a\u5e26\u4fee\u6539\u4e3b\u5e2d\u6811\uff081156ms \uff09**\n\n\u3000\u3000\u672c\u9898\u663e\u7136\u662f\u4e2a\u5e26\u4fee\u4e3b\u5e2d\u6811\u7684\u677f\u5b50\uff0c\u53ea\u9700\u8981\u79bb\u7ebf\u64cd\u4f5c\u5e76\u5bf9\u503c\u57df\u79bb\u6563\uff0c\u7136\u540e\u5c31\u76f4\u63a5\u677f\u5b50\u54af\u3002\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\log^2 n)$\u3002\n\n\u3000\u3000**\u6cd5\u4e09\u4ee3\u7801\uff1a**\n  ```cpp\n/*Code by 520 -- 10.28*/\n#include<bits/stdc++.h>\n#define il inline\n#define ll long long\n#define RE register\n#define For(i,a,b) for(RE int (i)=(a);(i)<=(b);(i)++)\n#define Bor(i,a,b) for(RE int (i)=(b);(i)>=(a);(i)--)\nusing namespace std;\nconst int N=100005;\nint n,m,a[N],*q[N<<1],cnt,tot,rt[N],X[N],Y[N],tx,ty;\nstruct query{\n    int l,r,x;\n}qus[N];\nstruct node{\n    int ls,rs,sz;\n}t[N*300];\nchar opt[N][2];\n\nint gi(){\n    int a=0;char x=getchar();\n    while(x<'0'||x>'9') x=getchar();\n    while(x>='0'&&x<='9') a=(a<<3)+(a<<1)+(x^48),x=getchar();\n    return a;\n}    \n\nil bool cmp(int *a,int *b){return *a<*b;}\n\nvoid ins(int l,int r,int k,int x,int lst,int &rt){\n    if(!rt) rt=++tot; t[rt]=t[lst],t[rt].sz+=x;\n    if(l==r) return;\n    int m=l+r>>1;\n    if(k<=m) ins(l,m,k,x,t[lst].ls,t[rt].ls);\n    else ins(m+1,r,k,x,t[lst].rs,t[rt].rs);\n}\n\nil void update(int i,int v){\n    int k=a[i];\n    while(i<=n) ins(1,cnt,k,v,rt[i],rt[i]),i+=i&-i;\n}\n\nil int calc(int x){\n    int l=1,r=cnt,k=qus[x].x,res=0;\n    tx=ty=0;\n    for(RE int i=qus[x].l-1;i;i-=i&-i) X[++tx]=rt[i];\n    for(RE int i=qus[x].r;i;i-=i&-i) Y[++ty]=rt[i];\n    while(1){\n        int mid=l+r>>1;\n        if(l==r) break;\n        if(mid>=k) {\n            r=mid;\n            For(i,1,tx) X[i]=t[X[i]].ls;\n            For(i,1,ty) Y[i]=t[Y[i]].ls;\n        }\n        else {\n            l=mid+1;\n            For(i,1,tx) X[i]=t[X[i]].rs;\n            For(i,1,ty) Y[i]=t[Y[i]].rs;\n        }\n    }\n    For(i,1,ty) res+=t[Y[i]].sz;\n    For(i,1,tx) res-=t[X[i]].sz;\n    return res;\n}\n\nint main(){\n    n=gi(),m=gi();\n    For(i,1,n) a[i]=gi(),q[++cnt]=&a[i];\n    For(i,1,m){\n        scanf(\"%s\",opt[i]);\n        if(opt[i][0]=='Q') qus[i]=query{gi(),gi(),gi()},q[++cnt]=&qus[i].x;\n        else qus[i]=query{gi(),gi(),0},q[++cnt]=&qus[i].r;\n    }\n    sort(q+1,q+cnt+1,cmp); int lst=-1;\n    For(i,1,cnt) if(*q[i]!=lst) lst=*q[i],*q[i]=++tot; else *q[i]=tot;\n    cnt=tot;\n    memset(&t[tot=0],0,sizeof(t[0]));\n    For(i,1,n) update(i,1);\n    For(i,1,m){\n        if(opt[i][0]=='Q') printf(\"%d\\n\",calc(i));\n        else {\n            int u=qus[i].l,v=qus[i].r;\n            update(u,-1),a[u]=v,update(u,1);\n        }\n    }\n    return 0;\n}\n```\n\u3000\u3000**\u6cd5\u56db\uff1a\u5e73\u8861\u6811\uff08432ms\uff09**\n\n\u3000\u3000\u6211\u4eec\u79bb\u7ebf\u64cd\u4f5c\u5e76\u5bf9\u503c\u57df\u79bb\u6563\u540e\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528\u65e0\u65cbtreap\u7ef4\u62a4\u6bcf\u4e2a\u503c\u57df\u7684\u4e0b\u6807\u4e2d\u5e8f\uff0c\u90a3\u4e48\u4fee\u6539\u5c31\u662f\u7b80\u5355\u7684\u5220\u9664\u64cd\u4f5c\uff0c\u67e5\u8be2\u4e5f\u662f\u7b80\u5355\u7684\u5206\u79bb\u64cd\u4f5c\u3002\u65f6\u95f4\u590d\u6742\u5ea6$O(n\\log n)$\u3002\n\n\u3000\u3000**\u6cd5\u56db\u4ee3\u7801\uff1a**\n  ```cpp\n/*Code by 520 -- 10.28*/\n#include<bits/stdc++.h>\n#define il inline\n#define ll long long\n#define RE register\n#define For(i,a,b) for(RE int (i)=(a);(i)<=(b);(i)++)\n#define Bor(i,a,b) for(RE int (i)=(b);(i)>=(a);(i)--)\nusing namespace std;\nconst int N=200005;\nint n,m,a[N],*q[N<<1],cnt;\nint ch[N][2],rt[N],rnd[N],date[N],siz[N];\nstruct node{\n    int l,r,x;\n}t[N];\nchar opt[N][2];\n\nint gi(){\n    int a=0;char x=getchar();\n    while(x<'0'||x>'9') x=getchar();\n    while(x>='0'&&x<='9') a=(a<<3)+(a<<1)+(x^48),x=getchar();\n    return a;\n}    \n\nil bool cmp(int *a,int *b){return *a<*b;}\n\nil int newnode(int v){\n    ++cnt;\n    siz[cnt]=1,date[cnt]=v,rnd[cnt]=rand();\n    return cnt;\n}\n\nil void up(int rt){siz[rt]=siz[ch[rt][0]]+siz[ch[rt][1]]+1;}\n\nint merge(int x,int y){\n    if(!x||!y) return x+y;\n    if(rnd[x]<rnd[y]) {ch[x][1]=merge(ch[x][1],y),up(x);return x;}\n    else {ch[y][0]=merge(x,ch[y][0]),up(y);return y;}\n}\n\nvoid split(int rt,int v,int &x,int &y){\n    if(!rt) {x=y=0;return;}\n    if(date[rt]<=v) x=rt,split(ch[rt][1],v,ch[x][1],y),up(x);\n    else y=rt,split(ch[rt][0],v,x,ch[y][0]),up(y);\n}\n\nil void ins(int k,int v){\n    int x,y; split(rt[k],v,x,y),rt[k]=merge(merge(x,newnode(v)),y);\n}\n\nil void del(int k,int v){\n    int x,y,z; split(rt[k],v,x,y),split(x,v-1,x,z),rt[k]=merge(x,y);\n}\n\nint main(){\n    srand(time(0));\n    n=gi(),m=gi();\n    For(i,1,n) a[i]=gi(),q[++cnt]=&a[i];\n    For(i,1,m){\n        scanf(\"%s\",opt[i]);\n        if(opt[i][0]=='Q') t[i]=node{gi(),gi(),gi()},q[++cnt]=&t[i].x;\n        else t[i]=node{gi(),gi(),0},q[++cnt]=&t[i].r;\n    }\n    sort(q+1,q+cnt+1,cmp); int lst=-1,tot=0;\n    For(i,1,cnt) if(*q[i]!=lst) lst=*q[i],*q[i]=++tot; else *q[i]=tot;\n    cnt=0;\n    For(i,1,n) ins(a[i],i);\n    For(i,1,m){\n        if(opt[i][0]=='Q') {\n            int x,y,z; \n            split(rt[t[i].x],t[i].r,x,y),split(x,t[i].l-1,x,z);\n            printf(\"%d\\n\",siz[z]);\n            rt[t[i].x]=merge(merge(x,z),y);\n        }\n        else {\n            int x,y,z,u=t[i].l,v=t[i].r;\n            del(a[u],u),a[u]=v,ins(a[u],u);\n        }\n    }\n    return 0;\n}\n```\n$\\quad\\;\\;$\u6b22\u8fce\u6765\u8e29\u535a\u5ba2\uff1a[five20](https://www.cnblogs.com/five20/p/9903954.html)\uff08\u849f\u84bb\u5199\u9898\u89e3\u4e0d\u6613\uff0c\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\uff0c\u4e07\u5206\u611f\u8c22\uff01\uff5e\uff09\n\n\n",
        "postTime": 1541420644,
        "uid": 44000,
        "name": "\u6d45\u8272\u8c03",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2464 \u3010[SDOI2008]\u90c1\u95f7\u7684\u5c0fJ\u3011"
    },
    {
        "content": "# \u4e8c\u5206+\u5206\u5757\n\n### \u524d\u8a00\n\n**\u6ce8\u610f\uff0c\u8fd9\u4efd\u9898\u89e3\u9002\u4e8e\u5927\u90e8\u5206\u5b66\u5206\u5757\u7684\u521d\u5b66\u8005\uff0c\u5bf9\u4e8e\u7b97\u6cd5\u53ef\u80fd\u8bb2\u5f97\u5f88\u7ec6\uff0c\u4f46\u5206\u5757\u7684\u524d\u7f6e\u7b80\u5355\u829d\u58eb\u4e0d\u4f1a\u63d0\u53ca\u3002**\n\n\u9017\u6bd4\u9898\uff0c\u6211\u4e5f\u633a\u9017\u6bd4\u8fde\u5206\u5757\u90fd\u80fd\u5199\u9505\u6389![/yun](https://cdn.luogu.com.cn/upload/pic/62240.png)\n\n\u8bb2\u4e2a\u4e0d\u4e00\u6837\u7684\u505a\u6cd5\uff0c\u770b\u5230\u697c\u4e0b\u90fd\u7528\u7684\u5e73\u8861\u6811\u6216\u662f $map$\uff0c\u8fd9\u91cc\u7ed9\u4e2a\u4e8c\u5206+\u5206\u5757\u7684 $\\texttt{naive}$ \u505a\u6cd5\u3002\n\n\u9898\u76ee\u8fde\u63a5\uff1a[$\\text{Link}$](https://www.luogu.com.cn/problem/P2464)\n\n### \u9898\u610f\u7b80\u8ff0\n\n\u7ed9\u5b9a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $a$\uff0c\u652f\u6301\u4e24\u79cd\u64cd\u4f5c\uff1a\n\n- \u5c06 $a_k$ \u66f4\u6539\u4e3a $x$\u3002\n\n- \u8be2\u95ee\u533a\u95f4 $[l,r]$ \u6709\u591a\u5c11\u4e2a\u6570\u7b49\u4e8e $x$\u3002\n\n$1\\le n,m\\le 10^5,1\\le a_i\\le 2^{31}-1$\u3002\n\n### \u9898\u76ee\u5206\u6790\n\n\u8fd9\u9053\u9898\u6559\u7ec3\u653e\u5728\u5e73\u8861\u6811\u4f5c\u4e1a\u91cc\uff0c\u4f46\u83dc\u9e21\u6211\u600e\u4e48\u770b\u90fd\u4e0d\u50cf\u662f\u5e73\u8861\u6811![/kk](https://cdn.luogu.com.cn/upload/pic/62227.png)\n\n\u53d1\u73b0 $1\\le n,m\\le 10^5$\uff0c\u800c\u4e14\u8981\u6c42\u533a\u95f4\u7edf\u8ba1\u4e2a\u6570\uff0c\u4e8e\u662f\u53ef\u4ee5\u8003\u8651 $O(n\\sqrt n)$ \u7684\u5206\u5757\u3002\n\n\u5bf9\u4e8e `C` \u64cd\u4f5c\uff0c\u663e\u7136\u76f4\u63a5\u66f4\u6539 $a_k$ \u5373\u53ef\u3002\n\n\u800c\u5bf9\u4e8e `Q` \u64cd\u4f5c\uff0c\u5982\u679c $x,y$ \u5728\u540c\u4e00\u5757\u91cc\uff0c\u66b4\u529b\u7edf\u8ba1\u5373\u53ef\uff0c\u590d\u6742\u5ea6 $O(\\sqrt n)$\uff0c\u5426\u5219\u6211\u4eec\u53ef\u4ee5\u5148\u66b4\u529b\u7edf\u8ba1\u8fb9\u89d2\u7684\u4e24\u5757\uff0c\u590d\u6742\u5ea6\u4ecd\u7136\u4e3a $O(\\sqrt n)$\uff0c\u4f46\u5bf9\u4e8e\u4e2d\u95f4\u7684\u5757\u8fd8\u66b4\u529b\u7edf\u8ba1\u7684\u8bdd $O(n\\sqrt n)$ \u76f4\u63a5\u4e0a\u5929\u3002\n\n\u4e8e\u662f\u5c31\u53ef\u4ee5\u7528\u5206\u5757\u4e2d\u4e00\u4e2a\u6bd4\u8f83\u5957\u8def\u7684\u505a\u6cd5\uff0c\u6211\u4eec\u989d\u5916\u518d\u8bbe\u4e00\u4e2a\u6570\u7ec4 $val$\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u4e0b\u6807\u8303\u56f4\u4e3a $[l,r]$ \u7684\u5757\uff0c$val_l$ \u81f3 $val_r$ \u5bf9\u5e94 $a$ \u6570\u7ec4\u5728 $[l,r]$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u8fc7\u540e\u7684\u503c\u3002\n\n\u6240\u4ee5\u8bf4\u5f53\u6211\u4eec\u505a\u66f4\u6539\u64cd\u4f5c\u5373 `C` \u64cd\u4f5c\u65f6\uff0c\u6211\u4eec\u5148\u8981\u66f4\u6539 $a$\uff0c\u800c\u4e14\u90a3\u4e00\u4e2a\u5757\u4e2d\u7684 $val$ \u7684\u503c\u4e5f\u8981**\u91cd\u65b0\u8d4b\u503c**\u540e\u6392\u5e8f\u3002\n\n\u5bf9\u4e8e\u67e5\u8be2\u64cd\u4f5c\uff0c\u66b4\u529b\u7edf\u8ba1\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u7edf\u8ba1 $a$ \u7684\u503c\uff0c\u56e0\u4e3a $val$ \u4e2d\u5b58\u7684\u6392\u8fc7\u5e8f\u7684\u503c\uff0c\u67e5\u8be2\u7684\u90a3\u4e2a\u8fb9\u89d2\u7684\u533a\u95f4\u4e2d\u7684 $val$ \u7684\u503c\u4e0d\u4e00\u5b9a\u5bf9\u5e94\u5b83\u771f\u5b9e\u7684\u503c\u3002\n\n\u4f46\u5bf9\u4e8e\u4e2d\u95f4\u7684\u90a3\u4e9b\u5757\uff0c\u5c31\u80fd\u76f4\u63a5\u67e5 $val$ \u4e86\uff0c\u56e0\u4e3a\u8fd9\u662f\u540e\u4e2d\u95f4\u7684\u90a3\u4e00\u5768\u8ddf\u987a\u5e8f\u5df2\u7ecf\u6ca1\u5173\u7cfb\u4e86\u3002\n\n\u90a3\u5bf9\u4e8e\u4e2d\u95f4\u7684\u67d0\u4e2a\u5757 $i$\uff0c\u600e\u4e48\u5feb\u901f\u67e5\u6b64\u5757\u5185\u7b49\u4e8e $k$ \u7684\u5143\u7d20\u4e2a\u6570\u5462\uff1f\n\n**\u4e8c\u5206**\u3002\u56e0\u4e3a\u6211\u4eec\u7684 $val$ \u5728\u6392\u597d\u5e8f\u540e\u5c31\u6ee1\u8db3\u5355\u8c03\u6027\u4e86\u3002\n\n\u7136\u540e\u53d1\u73b0 `lower_bound` \u80fd\u6c42 $\\ge k$ \u7684\u6700\u5c0f\u7684\u4f4d\u7f6e\uff0c\u800c `upper_bound` \u80fd\u6c42 $>k$ \u7684\u6700\u5c0f\u4f4d\u7f6e\uff0c\u4e24\u8005\u5206\u522b\u6c42\u4e00\u4e0b\u4f4d\u7f6e\u5f97\u5230 $p_1,p_2$\uff0c\u7b49\u4e8e $k$ \u7684\u5143\u7d20\u4e00\u5b9a\u5c31\u5728 $[p_1,p_2-1]$ \u8fd9\u4e2a\u533a\u95f4\u3002\n\n\u53ea\u4e0d\u8fc7\u8fd8\u8981\u7279\u5224\u4e00\u4e0b\uff1a\n\n- \u6ca1\u6709\u5408\u6cd5\u7684 $p_1$\uff0c\u8bf4\u660e\u6b64\u5757\u6ca1\u6709\u4e0e $k$ \u76f8\u7b49\u7684\u5143\u7d20\uff0c\u76f4\u63a5 `continue` \u6389\u3002\n\n- \u6709\u5408\u6cd5\u7684 $p_1$ \u5374\u6ca1\u6709\u5408\u6cd5\u7684 $p_2$\uff0c\u8bf4\u660e $[p_1,r_i]$ \u8fd9\u4e2a\u533a\u95f4\u90fd\u4e3a $k$ \u4e86\u3002\n\n\u7136\u540e\u5c31\u662f\u7b97\u533a\u95f4\u957f\u5ea6\u5c31\u6ca1\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n\\sqrt n\\log\\sqrt n)$\uff0c\u5e26\u4e2a $\\log$ \u662f\u56e0\u4e3a\u65e2\u8981\u6392\u5e8f\u8fd8\u8981\u4e8c\u5206\uff0c\u5728 $n,m\\le 10^5$ \u4e4b\u4e0b\u5f88\u8f7b\u677e\u3002\n\n\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a$O(n)$\u3002\n\n[$AC$ \u94fe\u63a5](https://www.luogu.com.cn/record/51444126)\n\n[$code$](https://paste.ubuntu.com/p/nvtGnSB5mK/)\n\n\u6c42\u8d5e![/kel](https://cdn.luogu.com.cn/upload/pic/62226.png)\n\n$$\\texttt{The End.by UF}$$\n\n",
        "postTime": 1622724268,
        "uid": 360511,
        "name": "UperFicial",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2464\u3010[SDOI2008]\u90c1\u95f7\u7684\u5c0fJ\u3011"
    },
    {
        "content": "[**\u9898\u76ee\u4f20\u9001\u95e8**](https://www.luogu.com.cn/problem/P2464)\n\n## \u524d\u8a00\n\n\u770b\u5230\u5176\u5b83\u9898\u89e3\u4e0d\u662f\u7528\u4e86\u5206\u5757\uff0c\u5c31\u662f\u7528\u4e86\u4e3b\u5e2d\u6811\u3001\u5e73\u8861\u6811\u3002\u8981\u4e48\u4ee3\u7801\u5b9e\u73b0\u590d\u6742\uff0c\u8981\u4e48\u7b97\u6cd5\u590d\u6742\u5ea6\u5f88\u4e0d\u4f18\u79c0\u3002\u6211\u6765\u5206\u4eab\u4e00\u4e2a\u4ee3\u7801\u5b9e\u73b0\u7b80\u5355\uff0c\u65f6\u7a7a\u590d\u6742\u5ea6\u4f18\u79c0\u7684\u7b97\u6cd5\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u6700\u574f $O(n \\log n)$\u3002  \n\u5bf9\u968f\u673a\u6570\u636e\u53ef\u4ee5\u4f18\u5316\u5230\u51e0\u4e4e $O(n)$\u3002\n\n\u524d\u7f6e\u829d\u58eb\uff1a[\u79bb\u6563\u5316](https://oi-wiki.org//misc/discrete/)\u3001[\u6811\u72b6\u6570\u7ec4](https://oi-wiki.org//ds/fenwick/)\uff08\u6216[\u7ebf\u6bb5\u6811](https://oi-wiki.org//ds/seg/)\uff09\u3002\n\n## \u5206\u6790\n\n\u663e\u800c\u6613\u89c1\u7684\u201c\u66b4\u529b\u201d\u505a\u6cd5\u662f\u5bf9\u6bcf\u4e2a\u7f16\u53f7\u5f00\u4e00\u68f5\u6811\uff0c\u8fd9\u4e2a\u505a\u6cd5\u4e0d\u80fd\u901a\u8fc7\u7684\u539f\u56e0\u662f **MLE** \u4e86\uff0c\u4f46\u5176\u4ee3\u7801\u5b9e\u73b0\u7b80\u5355\uff0c\u800c\u4e14\u65f6\u95f4\u590d\u6742\u5ea6\u975e\u5e38\u4f18\u79c0\u3002\n\n\u521d\u59cb\u6570\u7ec4\u53ef\u4ee5\u89c6\u4e3a $n$ \u6b21\u4fee\u6539\u64cd\u4f5c\u3002  \n\u8003\u8651\u4ec0\u4e48\u6837\u7684\u4fee\u6539\u64cd\u4f5c\u4f1a\u5f71\u54cd\u7f16\u7801\u4e3a $K$ \u7684\u8be2\u95ee\u64cd\u4f5c\u3002  \n\u53ef\u4ee5\u53d1\u73b0\uff0c\u6bcf\u6b21\u4fee\u6539\u64cd\u4f5c\u65f6\uff0c\u53ea\u6709\u88ab\u62ff\u6389\u7684\u4e66\u7684\u7f16\u7801\u4e3a $K$ \u6216\u65b0\u8d2d\u7684\u4e66\u7684\u7f16\u7801\u4e3a $K$ \u65f6\uff0c\u8be2\u95ee\u7684\u7b54\u6848\u53ef\u80fd\u4f1a\u88ab\u5f71\u54cd\u3002  \n\u56e0\u6b64\uff0c\u6211\u4eec\u628a\u6bcf\u6b21\u4fee\u6539\u64cd\u4f5c\u8f6c\u5316\u4e3a\u201c\u62ff\u6389\u4e00\u672c\u7f16\u53f7\u4e3a $K_1$ \u7684\u4e66\u201d\u518d\u201c\u8d2d\u5165\u4e00\u672c\u7f16\u53f7\u4e3a $K_2$ \u7684\u4e66\u201d\u3002\u7136\u540e\uff0c\u5bf9\u4e8e\u6240\u6709\u8be2\u95ee\u64cd\u4f5c\u548c\u8f6c\u5316\u5f97\u5230\u7684\u4fee\u6539\u64cd\u4f5c\uff0c\u6309\u7f16\u7801 $K$ \u5206\u4e3a\u4e0d\u540c\u90e8\u5206\uff0c\u6bcf\u90e8\u5206\u5185\u90e8\u6309\u539f\u64cd\u4f5c\u987a\u5e8f\u6392\u5e8f\u3002\u8fd9\u6837\uff0c\u4e0d\u540c\u90e8\u5206\u4e4b\u95f4\u662f\u4e92\u4e0d\u5f71\u54cd\u7684\uff0c\u6211\u4eec\u5c31\u53ea\u9700\u8981\u5f00 $1$ \u68f5\u6811\uff0c\u4e5f\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e0a\u6587\u63d0\u5230\u7684\u201c\u66b4\u529b\u201d\u505a\u6cd5\u4e86\u3002\n\n\u8fd9\u6837\uff0c\u8fd9\u90e8\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f\u662f $O(\\sum{c_k \\log n}) = O(n \\log n)$\uff08$c_k$ \u8868\u793a\u7f16\u7801\u4e3a $k$ \u7684\u8be2\u95ee\u64cd\u4f5c\u548c\u65b0\u4fee\u6539\u64cd\u4f5c\u7684\u6570\u91cf\uff09\u2026\u2026\u2026\u2026\u4e86\u5417\uff1f\n\n**\u4e0d\u662f**\u3002\u56e0\u4e3a\u6e05\u7a7a\u4e00\u68f5\u6811\u9700\u8981\u7684\u65f6\u95f4\u4e3a $O(n)$\uff0c\u6bcf\u4e2a\u7f16\u7801\u90fd\u6e05\u7a7a\u4e00\u6b21\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u7206\u70b8\uff01\n\n\u5982\u4f55\u89e3\u51b3\u8be5\u95ee\u9898\u5462\uff1f  \n\u53ef\u4ee5\u53d1\u73b0\u7f16\u7801\u4e3a $k$ \u7684\u64cd\u4f5c\u6d89\u53ca\u7684\u4f4d\u7f6e\u7684\u6570\u91cf\u4e0d\u8d85\u8fc7 $2c_k$\uff0c\u800c $\\sum{c_k} \\le n + 2m$\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u79bb\u6563\u5316\u8fd9\u4e9b\u4f4d\u7f6e\uff0c\u8fd9\u6837\u6e05\u7a7a\u6811\u7684\u603b\u65f6\u95f4\u5c31\u56de\u5230\u4e86 $O(n)$\uff0c\u53ef\u4ee5\u63a5\u53d7\u3002\n\n\u4e8e\u662f\uff0c\u8fd9\u90e8\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u771f\u6b63\u6210\u4e3a $O(\\sum {c_k \\log c_k}) \\le O(n \\log \\max{c_k})$\u3002  \n\u52a0\u4e0a\u6392\u5e8f\u7684\u590d\u6742\u5ea6 $O(n \\log n)$\uff0c\u603b\u590d\u6742\u5ea6 $O(n \\log n)$\u3002\n\n## \u4ee3\u7801\n\n[\u63d0\u4ea4\u8bb0\u5f55](https://www.luogu.com.cn/record/90380025)\u3002\n\n```cpp\n#include <bits/stdc++.h>\n// foru (i, l, r) ... \u8ba9 i \u4ece l \u589e\u52a0\u5230 r\uff08l <= i <= r\uff09\n#define foru(i, l, r) for(int i=(l); i<=(r); i++)\n// ford (i, l, r) ... \u8ba9 i \u4ece l \u51cf\u5c0f\u5230 r\uff08l >= i >= r\uff09\n#define ford(i, l, r) for(int i=(l); i>=(r); i--)\ntypedef long long ll;\n// \u5feb\u8bfb\u5feb\u5199\u5df2\u7701\u7565\uff0c\u53ef\u5728\u6b64\u67e5\u770b\uff1ahttps://www.luogu.com.cn/paste/hn6sr155\nusing io::fio;\nconst int N=1e5;\nint n, m, arr[N+10], ans[N*3+10];\nstruct Oper { // \u64cd\u4f5c\n\tbool isQuery;\n\tint id, k, x, y;\n\tinline void setValue(int id, int k, int x, int y) {\n\t\tthis->id = id;\n\t\tthis->k = k;\n\t\tthis->x = x;\n\t\tthis->y = y;\n\t}\n} oper[N*3+10]; // \u5927\u5c0f\u8981\u5f00\u5230 n + 2*m\uff0c\u5373 N*3\n\nstruct Fenwick { // \u6811\u72b6\u6570\u7ec4\n\tint size, val[N+10];\n\tinline void build(int size) {\n\t\tthis->size = size;\n\t\tmemset(val, 0, sizeof(int) * (size + 5));\n\t}\n\tvoid update(int x, int v) {\n\t\twhile (x <= size) {\n\t\t\tval[x] += v;\n\t\t\tx += x & (-x);\n\t\t}\n\t}\n\tint query(int x) {\n\t\tint ret = 0;\n\t\twhile (x) {\n\t\t\tret += val[x];\n\t\t\tx -= x & (-x);\n\t\t}\n\t\treturn ret;\n\t}\n\tinline int query(int x, int y) {\n\t\tif (x > y) return 0;\n\t\treturn query(y) - query(x - 1);\n\t}\n} tree;\n\nvoid solve(int left, int right) {\n\t// \u79bb\u6563\u5316\n\tstatic int hashPos[N+10];\n\tint mx_pos = 0;\n\tstd::set<int> st;\n\tforu (i, left, right) {\n\t\tOper &op = oper[i];\n\t\tif (op.isQuery) {\n\t\t\tst.insert(op.x);\n\t\t\tst.insert(op.y);\n\t\t} else {\n\t\t\tst.insert(op.x);\n\t\t}\n\t}\n\tfor (const int &x : st) hashPos[x] = ++mx_pos;\n\t// \u201c\u66b4\u529b\u201d\n\ttree.build(mx_pos);\n\tforu (i, left, right) {\n\t\tOper &op = oper[i];\n\t\tif (op.isQuery) ans[op.id] = tree.query(hashPos[op.x], hashPos[op.y]);\n\t\telse tree.update(hashPos[op.x], op.y);\n\t}\n}\n\nint main() {\n\tfio >> n >> m;\n\tint num_oper = 0;\n\tforu (i, 1, n) {\n\t\tfio >> arr[i];\n\t\t// \u5c06\u521d\u59cb\u6570\u7ec4\u4f5c\u4e3a\u4fee\u6539\u64cd\u4f5c\n\t\tOper &op = oper[++num_oper];\n\t\top.setValue(num_oper, arr[i], i, 1);\n\t}\n\tforu (i, 1, m) {\n\t\tchar c;\n\t\tfio >> c;\n\t\tswitch (c) {\n\t\t\tcase 'C': {\n\t\t\t\tint x, k;\n\t\t\t\tfio >> x >> k;\n\t\t\t\t// \u8f6c\u5316\u4fee\u6539\u64cd\u4f5c\n\t\t\t\tOper &op1 = oper[++num_oper];\n\t\t\t\top1.setValue(num_oper, arr[x], x, -1);\n\t\t\t\tOper &op2 = oper[++num_oper];\n\t\t\t\top2.setValue(num_oper, arr[x] = k, x, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'Q': {\n\t\t\t\tint x, y, k;\n\t\t\t\tfio >> x >> y >> k;\n\t\t\t\tOper &op = oper[++num_oper];\n\t\t\t\top.setValue(num_oper, k, x, y);\n\t\t\t\top.isQuery = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t// \u5c06 ans \u5168\u8bbe\u4e3a -1\uff0c\u4e8e\u662f\uff1aans \u975e\u8d1f\u6570 <=> \u67e5\u8be2\u64cd\u4f5c\u7684\u7b54\u6848\n\tmemset(ans, 0xff, sizeof(int) * (num_oper + 5));\n\t// \u5c06\u64cd\u4f5c\u6309 k \u6392\u5e8f\uff0ck \u76f8\u540c\u7684\u6309 id \u6392\u5e8f\uff0c\u4ee5\u4fdd\u8bc1\u64cd\u4f5c\u987a\u5e8f\n\tstd::sort(oper+1, oper+1+num_oper, [](Oper &a, Oper &b) {\n\t\tif (a.k != b.k) return a.k < b.k;\n\t\treturn a.id < b.id;\n\t});\n\t// \u5904\u7406\u6240\u6709\u6309 k \u5206\u6210\u7684\u90e8\u5206\n\tfor (int l = 1, r; l <= num_oper; l = r + 1) {\n\t\tr = l;\n\t\twhile (r + 1 <= num_oper && oper[r + 1].k == oper[l].k) ++r;\n\t\tsolve(l, r);\n\t}\n\tforu (i, 1, num_oper) {\n\t\tif (ans[i] < 0) continue;\n\t\tfio << ans[i] << '\\n';\n\t}\n\t\n\treturn 0;\n}\n```\n\n## \u8865\u5145\n\n\u5bf9\u968f\u673a\u6570\u636e\uff0c\u5982\u4f55\u8fbe\u5230\u51e0\u4e4e $O(n)$ \u5462\uff1f\n\n\u968f\u673a\u6570\u636e\u4e0b\uff0c$\\max{c_k}$ \u662f\u4e00\u4e2a\u5f88\u5c0f\u7684\u6570\u5b57\uff0c$O(n \\log \\max{c_k})$ \u63a5\u8fd1 $O(n)$\u3002  \n\u5bf9\u4e8e\u6392\u5e8f\uff0c\u4f7f\u7528\u57fa\u6570\u6392\u5e8f\u53ef\u8fbe\u5230 $O(n)$\u3002  \n\u56e0\u6b64\u603b\u590d\u6742\u5ea6\u51e0\u4e4e $O(n)$\u3002\n\n\u4e0d\u8fc7\u7531\u4e8e\u5e38\u6570\u8f83\u5927\uff0c\u5bf9\u672c\u9898\u5e76\u4e0d\u4f1a\u6bd4\u4f18\u5316\u524d\u5feb\u591a\u5c11\u3002\n",
        "postTime": 1665551872,
        "uid": 561644,
        "name": "CuiZhenhang",
        "ccfLevel": 0,
        "title": "P2464 [SDOI2008] \u90c1\u95f7\u7684\u5c0f J \u9898\u89e3"
    },
    {
        "content": "\u5148\u63a8\u8350\u4e00\u4e0b[\u535a\u5ba2](http://www.cnblogs.com/xzz\\_233/p/7396374.html)\u3002\u3002\u3002\n\n\n\u6211\u8fd9\u91cc\u7684\u201c\u79cd\u7c7b\u201d\u5c31\u662f\u539f\u9898\u7684\u201c\u7f16\u7801\u201d\u3002\u3002\u3002\n\n\n\u5bf9\u6bcf\u79cd\u4e66\u5efa\u7acb\u4e00\u68f5\u5e73\u8861\u6811\uff08\u6211\u7528\u65e0\u65cbtreap\uff09\uff0c\u7136\u540e\u4e00\u5f00\u59cb\u5f80\u6bcf\u4e2a\u5e73\u8861\u6811\u91cc\u63d2\u5750\u6807\uff08\u5f53\u7136\u8981\u6709\u5e8f\u63d2\u5165\uff09\u3002\n\n\n\u5f00\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u6bcf\u4e2a\u4f4d\u7f6e\u4e0a\u4e66\u7684\u79cd\u7c7b\u3002\n\n\n\u5bf9\u4e8e'C'\u64cd\u4f5c\uff0c\u627e\u5230\u8fd9\u4e2a\u4f4d\u7f6e\u4e0a\u4e66\u7684\u79cd\u7c7b\uff0c\u7136\u540e\u5728\u5bf9\u5e94\u5e73\u8861\u6811\u4e0a\u5220\u53bb\u8fd9\u4e2a\u5750\u6807\u3002\u518d\u8bb0\u5f55\u65b0\u7684\u79cd\u7c7b\uff0c\u5728\u5bf9\u5e94\u5e73\u8861\u6811\u4e0a\u65b0\u589e\u8fd9\u4e2a\u5750\u6807\u3002\u6bcf\u4e2a\u5e73\u8861\u6811\u8bb0\u5f55\u7684\u5750\u6807\u90fd\u5e94\u8be5\u662f\u6709\u5e8f\u7684\u3002\n\n\n\u5bf9\u4e8e'Q'\u64cd\u4f5c\uff0c\u7b54\u6848\u662f\u5bf9\u5e94\u5e73\u8861\u6811\u4e0a\u7684B\u7684\u6392\u540d\u51cf\u53bb(A-1)\u7684\u6392\u540d\uff0c\u6240\u4ee5\u5269\u4e0b\u7684\u533a\u95f4\u5c31\u662f[A,B]\u3002\n\n\n\u8f93\u5165\u4fdd\u8bc1\u4e66\u7684\u79cd\u7c7b$<=2^{31}\u22121$\uff0c\u6240\u4ee5\u8981\u79bb\u6563\u5316\u3002\u3002\u3002\u6211\u53ea\u4f1amap\u3002\u3002\u3002\u800c\u4e14\u61d2\u5f97\u6253\u79bb\u7ebf\u4e86\u3002\u3002\u3002\u6240\u4ee5\u8fb9\u8bfb\u5165\u8fb9\u79bb\u6563\u5316\u3002\u3002\u3002\u79bb\u6563\u5316\u5728ins\u51fd\u6570\u4e2d\u4f53\u73b0\uff0c\u53ca\u6bcf\u8bfb\u5165\u4e00\u6b21\u5c31\u63d2\u5165\uff08\u6709\u7684\u8bdd\u5f53\u7136\u4e0d\u63d2\u5165\uff09\n\n",
        "postTime": 1503121566,
        "uid": 23118,
        "name": "\u03bb\u1d09\u028d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2464 \u3010[SDOI2008]\u90c1\u95f7\u7684\u5c0fJ\u3011"
    },
    {
        "content": "\u8fd9\u9898\u53ef\u4ee5\u5206\u5757\uff0c\u53ef\u4ee5\u5e26\u4fee\u4e3b\u5e2d\u6811\uff0c\u53ef\u4ee5STL\u4e00\u5957\n\n\u4e0d\u8fc7 Luogu \u7684\u9898\u89e3\u91cc\u9762\u597d\u50cf\u6ca1\u6709\u5e26\u4fee\u83ab\u961f\u7684\u3002\n\n\u96be\u9053\u5c31\u6211\u89c9\u5f97\u8fd9\u662f\u6a21\u677f\u9898\u5417\u3002\u3002\n\n\u4e0a\u6765\u5c31\u6253\u83ab\u961f\u3002\u3002\n\n\u4ee3\u7801:\n```cpp\n#include <bits/stdc++.h>\n\n// Defination {{{\n#define PI std::pair<int, int>\n#define mk std::make_pair\n#define reg register\n#define ll long long\n#define rep(i, a, b) for(reg int i = a; i <= b; ++i)\n#define per(i, a, b) for(reg int i = a; i >= b; --i)\n#define pb push_back\n#define debug(...) fprintf(stderr, __VA_ARGS__)\n// }}}\n\ntemplate<typename T> T max(T a, T b) { return a > b ? a : b; }\ntemplate<typename T> T min(T a, T b) { return a < b ? a : b; }\n\ntemplate<typename T> void read(T &x) {\n    x = 0; reg char ch = getchar(); reg int f = 1;\n    for (; !isdigit(ch); ch = getchar()) if (ch == '-') f = -1;\n    for (; isdigit(ch); ch = getchar()) x = (x << 1) + (x << 3) + (ch ^ 48);\n    x *= f;\n}\n\n#define N 200005\n\nint n, m, tot, Cnt;\nint a[N], b[N], pos[N], ans[N];\n\nclass Query {\npublic:\n    int l, r, val, id, last, t;\n} q[N], o[N];\n\nint cnt[N << 1];\n\nstd::map<int, int> mp;\n\nbool cmp(Query A, Query B) {\n    if (pos[A.l] == pos[B.l]) {\n        if (pos[A.r] == pos[B.r]) return A.t < B.t;\n        else return pos[A.r] < pos[B.r];\n    }\n    return pos[A.l] < pos[B.l];\n}\n\nint main() {\n#ifndef ONLINE_JUDGE\n    freopen(\"2464.in\", \"r\", stdin);\n    freopen(\"2464.out\", \"w\", stdout);\n#endif\n    read(n), read(m);\n    rep (i, 1, n) read(a[i]), b[++tot] = a[i];\n    char opt[4];\n    int O = 0, Q = 0;\n    rep (i, 1, m) {\n        scanf (\"%s\", opt);\n        if (opt[0] == 'Q') {\n            ++Q;\n            read(q[Q].l), read(q[Q].r), read(q[Q].val);\n            b[++tot] = q[Q].val;\n            q[Q].id = Q, q[Q].t = O;\n        } else {\n            ++O;\n            read(o[O].l), read(o[O].val);\n            b[++tot] = o[O].val;\n            o[O].t = O;\n        }\n    }\n    std::sort(b + 1, b + tot + 1);\n    rep (i, 1, tot) {\n        if (mp[b[i]]) continue;\n        mp[b[i]] = ++Cnt;\n    }\n    rep (i, 1, n) a[i] = mp[a[i]];\n    rep (i, 1, Q) q[i].val = mp[q[i].val];\n    rep (i, 1, O) o[i].val = mp[o[i].val];\n    tot = 1;\n    int siz = pow(n, 0.6666667);\n    rep (i, 1, n) {\n        pos[i] = tot;\n        if (i % siz == 0) ++tot;\n    }\n    std::sort(q + 1, q + Q + 1, cmp);\n    rep (i, 1, n) b[i] = a[i];\n    rep (i, 1, O) {\n        o[i].last = b[o[i].l];\n        b[o[i].l] = o[i].val;\n    }\n    int L = 1, R = 0, K = 0;\n    rep (i, 1, Q) {\n        while (K < q[i].t) {\n            ++K;\n            if (o[K].l >= L && o[K].l <= R) --cnt[a[o[K].l]], ++cnt[o[K].val];\n            a[o[K].l] = o[K].val;\n        }\n        while (K > q[i].t) {\n            if (o[K].l >= L && o[K].l <= R) --cnt[a[o[K].l]], ++cnt[o[K].last];\n            a[o[K].l] = o[K].last;\n            --K;\n        }\n        while (R < q[i].r) {\n            ++R;\n            cnt[a[R]]++;\n        }\n        while (L > q[i].l) {\n            --L;\n            cnt[a[L]]++;\n        }\n        while (R > q[i].r) {\n            cnt[a[R]]--;\n            --R;\n        }\n        while (L < q[i].l) {\n            cnt[a[L]]--;\n            ++L;\n        }\n        ans[q[i].id] = cnt[q[i].val];\n    }\n    rep (i, 1, Q) printf(\"%d\\n\", ans[i]);\n    return 0; \n}\n\n/*\n _____  ____    _____\n|__  / |  _ \\  |__  /\n  / /  | |_) |   / / \n / /_  |  _ <   / /_ \n/____| |_| \\_\\ /____|\n  \n\n ________________________________________ \n< 2464.cpp is created by zrz who is weak >\n ---------------------------------------- \n        \\   ^__^\n         \\  (^^)\\_______\n            (__)\\       )\\/\\\n             U ||----w |\n                ||     ||\n\n*/\n```\n",
        "postTime": 1569332177,
        "uid": 52295,
        "name": "zrz_orz",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2464 \u3010[SDOI2008]\u90c1\u95f7\u7684\u5c0fJ\u3011"
    },
    {
        "content": "## \u9898\u76ee\u63cf\u8ff0\uff1a\n\u96fe\u3002\n## \u9898\u76ee\u5206\u6790\uff1a\n~~\u597d\u50cf\u662f\u5e73\u8861\u6811\u554aqwq~~\n\n~~\u6211\u4e0d\u7ba1\uff0c\u5e73\u8861\u6811\u8fa3\u4e48\u957f\uff0c\u6211\u624d\u4e0d\u5199\u5462~~\n\n\u6211\u4eec\u76f4\u63a5\u5bf9\u6bcf\u4e2a\u4e66\u90fd\u5efa\u4e00\u9897\u4f4d\u7f6e\u7ebf\u6bb5\u6811\u5c31\u884c\u5566\uff0c\u7ef4\u62a4\u6bcf\u4e2a\u4f4d\u7f6e\u8282\u70b9\u4e0a\u662f\u5426\u6709\u672c\u4e66\u3002\n\n\u522b\u5fd8\u4e86\u79bb\u6563\u5316~\n## \u9898\u76ee\u94fe\u63a5\uff1a\n[Luogu 2464](https://www.luogu.org/problemnew/show/P2464)\n## Ac \u4ee3\u7801\uff1a\n\n```\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\nconst int maxm=400100; \nnamespace seg{\n    int rt[maxm],sz;\n    int ls[maxm*8],rs[maxm*8],sum[maxm*8];\t\n    void insert(int &now,int l,int r,int ind,int num)\n    {\n    \tif(!now) now=++sz;\n    \tif(l>=r)\n    \t{\n    \t\tsum[now]+=num;\n    \t\treturn;\n    \t}\n    \tint mid=(l+r)>>1;\n    \tif(ind<=mid) insert(ls[now],l,mid,ind,num);\n    \telse insert(rs[now],mid+1,r,ind,num);\n    \tsum[now]=sum[ls[now]]+sum[rs[now]];\n    }\n    int ask(int now,int l,int r,int ql,int qr)\n    {\n    \tif(!now) return 0;\n    \tif(ql<=l&&r<=qr) return sum[now];\n    \tint mid=(l+r)>>1;\n    \tint res=0;\n    \tif(ql<=mid) res+=ask(ls[now],l,mid,ql,qr);\n    \tif(qr>mid) res+=ask(rs[now],mid+1,r,ql,qr);\n    \treturn res;\n    }\n}\nusing namespace seg;\nstruct node{\n    int opt,l,r,id;\n}q[maxm*4];\nint hash[maxm*10],a[maxm],n,m;\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    int tot=0;\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n        hash[++tot]=a[i];\n    }\n    char s[10];\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%s\",s);\n        if(s[0]=='C')\n        {\n            q[i].opt=0;\n            scanf(\"%d%d\",&q[i].l,&q[i].id);\n        }\n        else\n        {\n            q[i].opt=1;\n            scanf(\"%d%d%d\",&q[i].l,&q[i].r,&q[i].id);\n        }\n        hash[++tot]=q[i].id;\n    }\n    std::sort(hash+1,hash+tot+1);\n    int t=std::unique(hash+1,hash+tot+1)-hash-1;\n    for(int i=1;i<=n;i++)\n    {\n        a[i]=std::lower_bound(hash+1,hash+t+1,a[i])-hash;\n        insert(rt[a[i]],1,n,i,1);\n    }\n    for(int i=1;i<=m;i++)\n    {\n        if(!q[i].opt)\n        {\n            insert(rt[a[q[i].l]],1,n,q[i].l,-1);\n            a[q[i].l]=std::lower_bound(hash+1,hash+t+1,q[i].id)-hash;\n            insert(rt[a[q[i].l]],1,n,q[i].l,1);\n        }\n        else \n\t\t{\n\t\t\tint id=std::lower_bound(hash+1,hash+t+1,q[i].id)-hash;\n\t\t\tprintf(\"%d\\n\",ask(rt[id],1,n,q[i].l,q[i].r));\n\t\t}\n    }\n    return 0;\n}\n```\n",
        "postTime": 1522111366,
        "uid": 19842,
        "name": "\u534a\u4ed9\u80e1\u5c0f\u6843",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2464 \u3010[SDOI2008]\u90c1\u95f7\u7684\u5c0fJ\u3011"
    },
    {
        "content": "\u5b89\u5229\u4e00\u53d1\u81ea\u5df1\u535a\u5ba2\uff1a[\u4f20\u9001\u95e8=\uffe3\u03c9\uffe3=](http://k-xzy.cf/archives/3134)\n\n\n\u6211\u505a\u8fd9\u9898\u7684\u5386\u7a0b\uff1a\n\n\n1. \u666e\u901a\u7ebf\u6bb5\u6811\u5957\u5e73\u8861\u6811\uff08map\uff09\uff0c70\u5206\n\n2. \u534a\u9012\u5f52\u5f0f\uff08\u4fee\u6539\u53d8\u4e3a\u9012\u63a8\uff09\u7ebf\u6bb5\u6811\u5957\u5e73\u8861\u6811\uff08map\uff09\uff0c80\u5206\n\n3. \u6811\u72b6\u6570\u7ec4\u5957\u5e73\u8861\u6811\uff08map\uff09\uff0c90\u5206\n\n4. \u6811\u72b6\u6570\u7ec4\u5957\u54c8\u5e0c\u8868\uff08pbds,cc\\_hash\\_table\uff09\uff0c90\u5206\n\n5. \u6811\u72b6\u6570\u7ec4\u5957\u54c8\u5e0c\u8868\uff08pbds,gp\\_hash\\_table\uff09\uff0c<font color=lime>AC</font>\n\n\n\u5fc3\u7d2f\u554a\u3002\n\n\n\u5177\u4f53\u505a\u6cd5\u5f88\u66b4\u529b\uff0c\u5c31\u662f\u5bf9\u4e8e\u6811\u72b6\u6570\u7ec4\u7684\u6bcf\u4e2a\u8282\u70b9\u641e\u4e2a\u54c8\u5e0c\u8868\u5b58\u67d0\u79cd\u7f16\u7801\u51fa\u73b0\u7684\u6b21\u6570\u3002\n\n\n\u67e5\u8be2\u548c\u4fee\u6539\u5c31\u548c\u666e\u901a\u7684\u6811\u72b6\u6570\u7ec4\u4e00\u6a21\u4e00\u6837\u3002\n\n\n\u4ee3\u7801\u5f88\u77ed\u3002\n\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#define lowbit(a) (a&-a)\nusing namespace std;\nusing namespace __gnu_pbds;\ntemplate<typename _Tp>inline void IN(_Tp&dig)\n{\n    char c;bool flag=0;dig=0;\n    while(c=getchar(),!isdigit(c))if(c=='-')flag=1;\n    while(isdigit(c))dig=dig*10+c-'0',c=getchar();\n    if(flag)dig=-dig;\n}\nint n,m,data[100005];\nchar opt[5];\ngp_hash_table<int,int> mp[100005];\nvoid update(int pos,int k,int d){while(pos<=n)mp[pos][k]+=d,pos+=lowbit(pos);}\nint query(int pos,int k)\n{\n    int sum=0;\n    while(pos)sum+=mp[pos][k],pos-=lowbit(pos);\n    return sum;\n}\nint main()\n{\n    IN(n),IN(m);\n    for(int i=1;i<=n;i++)IN(data[i]),update(i,data[i],1);\n    int a,b,c;\n    while(m--)\n    {\n        scanf(\"%s\",opt),IN(a),IN(b);\n        if(opt[0]=='Q')IN(c),printf(\"%d\\n\",query(b,c)-query(a-1,c));\n        else update(a,b,1),update(a,data[a],-1),data[a]=b;\n    }\n    return 0;\n}\n```",
        "postTime": 1514468535,
        "uid": 22388,
        "name": "XZYQvQ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2464 \u3010[SDOI2008]\u90c1\u95f7\u7684\u5c0fJ\u3011"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P2464)\n\n[\u53ef\u80fd\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://chenyu-w.github.io/2022/08/11/P2464%E9%83%81%E9%97%B7%E7%9A%84%E5%B0%8FJ/)\n\n## \u524d\u8a00\n\n\u8fd9\u662f\u4e00\u4e2a\u4e0d\u4f1a\u5199\u5e26\u4fee\u83ab\u961f\u6240\u4ee5\u5206\u5757\u4e71\u641e\u7684\u849f\u84bb\u3002\n\n### \u524d\u7f6e\u829d\u58eb\n\n\u5206\u5757\n\n## \u5206\u6790\n\n\u9996\u5148\u770b\u5230\u8fd9\u4e2a $2^{31}-1$ \u7684\u503c\u57df\uff0c\u80af\u5b9a\u8981\u79bb\u6563\u5316\uff0c\u79bb\u6563\u5316\u540e\u8003\u8651\u5bf9\u539f\u5e8f\u5217\u5206\u5757\uff0c\u5757\u957f\u4e3a $\\sqrt{n}$\u3002\n\n\u6211\u4eec\u7528 $cnt[i][x]$ \u8868\u793a\u7b2c $i$ \u5757\u4e2d $x$ \u7684\u51fa\u73b0\u6b21\u6570\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u4fee\u6539\u64cd\u4f5c\uff0c\u6211\u4eec\u5c06\u5f53\u524d\u5757\u4e2d\u539f\u6570\u51fa\u73b0\u6b21\u6570\u51cf\u4e00\uff0c\u65b0\u6570\u51fa\u73b0\u6b21\u6570\u52a0\u4e00\uff0c\u6700\u540e\u5728\u539f\u5e8f\u5217\u4e2d\u4fee\u6539\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u67e5\u8be2\u64cd\u4f5c\uff0c\u6211\u4eec\u5206\u4e24\u79cd\u60c5\u51b5\u8003\u8651:\n\n1. \u82e5 $l$ \u548c $r$ \u5728\u540c\u4e00\u5757\u4e2d\uff0c\u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u626b\u63cf\u66b4\u529b\u5f97\u51fa\u7b54\u6848\u3002\n2. \u82e5 $l$ \u548c $r$ \u5728\u4e0d\u540c\u5757\u4e2d\uff0c\u90a3\u4e48\u6211\u4eec\u5bf9 $l$ \u548c $r$ \u6240\u5728\u5757\u5206\u522b\u66b4\u529b\u7edf\u8ba1\uff0c\u7528\u7ef4\u62a4\u7684 $cnt$ \u6570\u7ec4\u7edf\u8ba1\u4e2d\u95f4\u5757\u7b54\u6848\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\sqrt{n})$\u3002\n\n## \u4ee3\u7801\n\n```c++\n#include <bits/stdc++.h>\n\nusing namespace std;\nconst int N = 2e5 + 10, B = 320;\nint a[N], tot;\nint cnt[B][N];\nint id[N];\nunordered_map<int, int> h;\n\nint read()\n{\n    int x = 0, y = 1; char c = getchar();\n    while (c < '0' || c > '9') {if (c == '-') y = -1; c = getchar();}\n    while (c >= '0' && c <= '9') x = x * 10 + c - '0', c = getchar();\n    return x * y;\n}\n\nvoid modify(int x, int c)\n{\n    if (!h[c]) h[c] = ++tot;\n    c = h[c];\n    cnt[id[x]][a[x]]--, cnt[id[x]][c]++;\n    a[x] = c;\n}\n\nint query(int l, int r, int k)\n{\n    k = h[k];\n    if (id[l] == id[r])\n    {\n        int res = 0;\n        for (int i = l; i <= r; i++)\n            if (a[i] == k) res++; \n        return res;\n    }\n    int res = 0;\n    for (int i = l; id[i] == id[l]; i++)\n        if (a[i] == k) res++;\n    for (int i = r; id[i] == id[r]; i--)\n        if (a[i] == k) res++;\n    for (int i = id[l] + 1; i <= id[r] - 1; i++)\n        res += cnt[i][k];\n    return res;\n}\n\nint main()\n{\n    int n = read(), m = read();\n    for (int i = 1; i <= n; i++)\n    {\n        a[i] = read();\n        if (!h[a[i]]) h[a[i]] = ++tot;\n        a[i] = h[a[i]];\n        id[i] = (i - 1) / B + 1;\n        cnt[id[i]][a[i]]++;\n    }\n    while (m--)\n    {\n        char op;\n        cin >> op;\n        if (op == 'C')\n        {\n            int x = read(), c = read();\n            modify(x, c);\n        }\n        else\n        {\n            int l = read(), r = read(), k = read();\n            printf(\"%d\\n\", query(l, r, k));\n        }\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1660202727,
        "uid": 587248,
        "name": "wcywcywcywcy",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011P2464"
    },
    {
        "content": "\u8fd9\u91cc\u7ed9\u4e00\u79cd\u6613\u4e8e\u7406\u89e3\u7684\u6570\u7ec4\u7248\u975e\u65cb$treap$\u505a\u6cd5\u3002\n\n\u6211\u4eec\u7ed9\u6bcf\u4e00\u4e2a\u7f16\u53f7\u5f00\u4e00\u4e2a$treap$\uff0c\u89c2\u5bdf\u5230\u603b\u70b9\u6570\u7684\u503c\u662f\u786e\u5b9a\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u8bb0\u5f55\u4e0b\u6bcf\u4e00\u4e2a$treap$\u7684\u6839\u8282\u70b9\u5373\u53ef\u3002\u5728\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u6211\u4eec\u627e\u5230\u5bf9\u5e94\u7684$treap$\u91cc\u9762\u6743\u503c\u5728$[a,b]$\u4e4b\u95f4\u70b9\u7684\u4e2a\u6570\u3002\u63d2\u5165\u7684\u8bdd\u6211\u4eec\u9700\u8981\u7528\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u4e00\u4e0b\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u5bf9\u5e94\u7684\u4e66\u7684\u7f16\u53f7\uff0c\u7136\u540e\u6bcf\u6b21\u6839\u636e\u8fd9\u4e2a\u7f16\u53f7\u5148\u5220\u9664\u518d\u63d2\u5165\u3002\n\n\u52a8\u6001\u5f00\u70b9\u3002\u89c2\u5bdf\u5230\u7f16\u53f7\u8303\u56f4\u5f88\u5927\uff0c\u6211\u4eec\u4f7f\u7528$unordered$_$map$\u3002\n\n\u8fd9\u9898\u5e94\u8be5\u7b97\u662f$treap$\u677f\u5b50\u9898\u4e86\u3002\n\n```\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<map>\n#include<cstdlib>\n#include<tr1/unordered_map>\nusing namespace std;\nusing namespace std::tr1;\nint root[201000],tree[201000],size[201000],re[201000];\nint to[201000][2],cnt=0,pri[201000],n,m;\nunordered_map<int,int> mp;\nvoid update(int x)\n{\n\tsize[x]=size[to[x][0]]+size[to[x][1]]+1;\n}\nint build(int x)\n{\n\tsize[++cnt]=1;\n\ttree[cnt]=x;\n\tpri[cnt]=rand();\n\tto[cnt][0]=to[cnt][1]=0;\n\treturn cnt;\n}\nint merge(int x,int y)\n{\n\tif (!x||!y) return x+y;\n\tif (pri[x]<=pri[y]){\n\t\tto[y][0]=merge(x,to[y][0]);\n\t\tupdate(y);\n\t\treturn y;\n\t}\t\n\telse {\n\t\tto[x][1]=merge(to[x][1],y);\n\t\tupdate(x);\n\t\treturn x;\n\t}\n}\nvoid split(int now,int k,int &x,int &y)\n{\n\tif (!now) x=y=0;\n\telse if (tree[now]<=k){\n\t\tx=now;\n\t\tsplit(to[now][1],k,to[now][1],y);\n\t\tupdate(now);\n\t}\n\telse {\n\t\ty=now;\n\t\tsplit(to[now][0],k,x,to[now][0]);\n\t\tupdate(now);\n\t}\n}\nvoid insert(int wit,int val)\n{\n\tif (!root[wit]) {\n\troot[wit]=build(val);return;}; \n\tint x,y;\n\tsplit(root[wit],val,x,y);\n\troot[wit]=merge(merge(x,build(val)),y);\n}\nint query(int wit,int l,int r)\n{\n\tint x,y,z,h;\n\tsplit(root[wit],l-1,x,y);\n\tsplit(y,r,z,h);\n\tint an=size[z];\n\troot[wit]=merge(x,merge(z,h));\n\treturn an;\n}\nvoid del(int wit,int val)\n{\n\tint x,y,z,h;\n\tsplit(root[wit],val,x,y);\n\tsplit(x,val-1,z,h);\n\th=merge(to[h][0],to[h][1]);\n\troot[wit]=merge(merge(z,h),y);\n}\nint main()\n{\n\tint tot=0;\n\tscanf(\"%d%d\",&n,&m);\n\tfor (int i=1;i<=n;i++){\n\t\tint a;\n\t\tscanf(\"%d\",&a);\n\t\tif (!mp.count(a)) mp[a]=++tot;\n\t\tinsert(mp[a],i);\n\t\tre[i]=mp[a];\n\t}\n\tfor (int i=1;i<=m;i++){\n\t\tchar c;\n\t\tscanf(\" %c\",&c);\n\t\tif (c=='C'){\n\t\t\tint a,p;\n\t\t\tscanf(\"%d%d\",&a,&p);\n\t\t\tif (!mp.count(p)) mp[p]=++tot;\n\t\t\tdel(re[a],a);\n\t\t\tinsert(mp[p],a);\n\t\t\tre[a]=mp[p];\n\t\t}\n\t\telse {\n\t\t\tint a,b,k;\n\t\t\tscanf(\"%d%d%d\",&a,&b,&k);\n\t\t\tif (!mp.count(k)) {\n\t\t\t\tprintf(\"0\\n\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tprintf(\"%d\\n\",query(mp[k],a,b));\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1552229469,
        "uid": 11001,
        "name": "Kevin327",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2464 \u3010[SDOI2008]\u90c1\u95f7\u7684\u5c0fJ\u3011"
    },
    {
        "content": "STL\u5927\u6cd5\u597d\n\n\u7528map\u79bb\u6563\u5316\u4e66\u7684\u7f16\u7801\n\nvector\u5b58\u6bcf\u79cd\u7f16\u7801\u51fa\u73b0\u7684\u4f4d\u7f6e\n\n\u67e5\u8be2lower\\_bound\uff0c\u4fee\u6539erase\uff0cinsert\n\n\u518d\u7a0d\u5fae\u8ba8\u8bba\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\n\n~~\u4e0d\u5f00O2\u5feb\u6709O2\u4e0b\u76844\u500d\u4e86~~\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAX = 220000;\nmap<int, int> f;\nvector<int> g[MAX];\nint cnt;\nint read()\n{\n    int x = 0, f = 1; char ch = getchar();\n    while (!isdigit(ch)) { if (ch == '-') f = -1; ch = getchar(); }\n    while (isdigit(ch)) { x = x * 10 + ch - '0'; ch = getchar(); }\n    return x * f;\n}\nint n, q;\nint a[MAX];\nvector<int>::iterator il, ir;\nint main()\n{\n    n = read(), q = read();\n    for (int i = 1; i <= n; i++)\n    {\n        a[i] = read();\n        if (!f[a[i]]) f[a[i]] = ++cnt;\n        g[f[a[i]]].push_back(i);\n    }\n    while (q--)\n    {\n        char ask[5];\n        scanf(\"%s\", ask);\n        if (ask[0] == 'Q')\n        {\n            int l = read(), r = read(), x = read();\n            ir = lower_bound(g[f[x]].begin(), g[f[x]].end(), r);\n            il = lower_bound(g[f[x]].begin(), g[f[x]].end(), l);\n            int ans = 0;\n            if (il == g[f[x]].end())\n            {\n                puts(\"0\");\n                continue;\n            }\n            if (* ir == r) ans ++;\n            printf(\"%d\\n\", ans + (ir - il));\n        }\n        else\n        {\n            int p = read(), x = read();\n            if (a[p] == x) continue;\n            if (!f[x]) f[x] = ++cnt;\n            g[f[a[p]]].erase(lower_bound(g[f[a[p]]].begin(), g[f[a[p]]].end(), p));\n            g[f[x]].insert(lower_bound(g[f[x]].begin(), g[f[x]].end(), p), p);\n            a[p] = x;\n        }\n    }\n    return 0;\n}\n```\n\u575a\u6301\u4e0d\u7528STL\u53ef\u4ee5\u79bb\u7ebf\u79bb\u6563\u5316\u7f16\u7801\u540e\u7528\u5e73\u8861\u6811\u7ef4\u62a4\u4e0a\u9762vector\u5e72\u7684\u4e8b\u4e5f\u884c\n",
        "postTime": 1515895295,
        "uid": 37070,
        "name": "Ameyax",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2464 \u3010[SDOI2008]\u90c1\u95f7\u7684\u5c0fJ\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u770b\u5404\u4f4d\u5927\u795e\u7528\u5404\u79cd\u4e8c\u53c9\u6811AC\uff0c\u53ef\u662f\u6211\u61d2\uff08\u5176\u5b9e\u4e0d\u77e5\u9053\u600e\u4e48\u7528\uff09\uff0c\u6ca1\u5199\u4e8c\u53c9\u6811\uff0c\u5199\u4e86\u4e2a\u8d85\u7ea7\u7b80\u5355\u7684\u5206\u5757\u5c31AC\u4e86\uff0c\u6548\u7387\u8fd8\u524d\u51e0\u2026\u2026\n\n\u6211\u4eec\u53ef\u4ee5\u628a\u6570\u5217\u5206\u6210\u51e0\u5757\uff0c\u6bcf\u5757\u7528map\u7ef4\u62a4\uff08STL\u5927\u6cd5\u597d\uff09\uff0cmap\u53ef\u4ee5\u76f4\u63a5\u50a8\u5b58\u5f53\u524d\u5757\u5185\u67d0\u4e2a\u6570\u5b57\u7684\u4e2a\u6570\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u4e71\u641e\u4e86\u3002\n\n\u5bf9\u4e8e\u8be2\u95ee\uff0c\u76f4\u63a5\u5c31\u662f\u5757\u72b6\u6570\u7ec4\u6700\u57fa\u672c\u7684\u8be2\u95ee\u65b9\u5f0f\uff0c\u66f4\u6539\u5c31\u5148\u66f4\u6539\u6570\u5217\uff0c\u7136\u540e\u4fee\u6539\u5f53\u524d\u5757\u7684map\u503c\uff0c\u4e3a\u4e86\u8282\u7701\u7a7a\u95f4\uff0c\u5982\u679c\u5f53\u524d\u5757\u67d0\u4e2a\u6570\u5b57\u7684\u51fa\u73b0\u4e2a\u6570\u53d8\u62100\u4e86\uff0c\u53ef\u4ee5\u76f4\u63a5\u5220\u9664\u3002\n\n\u8fd9\u6837\u603b\u590d\u6742\u5ea6\u4e3aO((k+(n/k)\u00b7log k)\u00b7m)\uff0c\u5176\u4e2dk\u662f\u6bcf\u4e2a\u5757\u7684\u5927\u5c0f\u3002\n\n\u53ef\u4ee5\u901a\u8fc7\u51fd\u6570\u6c42\u5bfc\u7b97\u51fa\u5927\u81f4k=sqrt(n\u00b7log n)\u7684\u65f6\u5019\u590d\u6742\u5ea6\u6700\u4f4e\uff0c\u4e3aO(m\u00b7sqrt(n\u00b7log n))\u3002\n\n\u5206\u5757\u5927\u6cd5\u597d\u2026\u2026\n\n```cpp\n#include <stdio.h>\n#include <stdlib.h>\n#include <algorithm>\n#include <string.h>\n#include <vector>\n#include <math.h>\n#include <queue>\n#include <map>\n#include <functional>\n#include <time.h>\n#define inline __attribute((always_inline))\n#define INF 0x3f3f3f3f\nusing namespace std;\ntypedef long long ll;\n\nconst int maxn = 100005, maxs = 400;\nint seq[maxn], n, m, sz;\nmap<int, int> buc[maxs];\nmap<int, int>::iterator it;\nchar opt[5];\nint main(){\n    scanf(\"%d%d\", &n, &m);\n    sz = sqrt(n * log2(n));\n    for(int i = 0; i < n; i++){\n        scanf(\"%d\", seq + i);\n        int k = i / sz;\n        it = buc[k].find(seq[i]);\n        if(it == buc[k].end()) buc[k].insert(make_pair(seq[i], 1));\n        else it->second++;\n    }\n    while(m--){\n        scanf(\"%s\", opt);\n        if(opt[0] == 'C'){\n            int p, x;\n            scanf(\"%d%d\", &p, &x); p--;\n            int k = p / sz;\n            it = buc[k].find(seq[p]);\n            if(--it->second == 0) buc[k].erase(it);\n            seq[p] = x;\n            it = buc[k].find(x);\n            if(it == buc[k].end()) buc[k].insert(make_pair(x, 1));\n            else it->second++;\n        } else {\n            int s, t, x;\n            scanf(\"%d%d%d\", &s, &t, &x); s--, t--;\n            int ks = s / sz, kt = t / sz, res = 0;\n            if(ks * sz == s) ks--;\n            if(kt * sz + sz - 1 == t) kt++;\n            for(int i = ks + 1; i < kt; i++){\n                it = buc[i].find(x);\n                if(it != buc[i].end()) res += it->second;\n            }\n            int end = min(t + 1, ks * sz + sz);\n            for(int i = s; i < end; i++) res += seq[i] == x;\n            if(end <= t) for(int i = kt * sz; i <= t; i++) res += seq[i] == x;\n            printf(\"%d\\n\", res);\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1502432895,
        "uid": 30575,
        "name": "waaadreamer",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2464 \u3010[SDOI2008]\u90c1\u95f7\u7684\u5c0fJ\u3011"
    },
    {
        "content": "\u5148\u5bf9\u6240\u6709\u4e66\u7684\u7f16\u53f7\u79bb\u6563\u5316\u3002\u7136\u540e\u6211\u4eec\u6765\u9009\u62e9\u5b9e\u73b0\u7684\u6570\u636e\u7ed3\u6784\u3002\n\n\u8003\u8651\u7ebf\u6bb5\u6811\u5957\u7ebf\u6bb5\u6811\u3002\u7b2c\u4e00\u5c42\u7ebf\u6bb5\u6811\u4ee3\u8868\u7684\u662f\u533a\u95f4\u4fe1\u606f\uff0c\u5176\u4e2d\u6bcf\u4e00\u4e2a\u8282\u70b9\u4e0a\u90fd\u6709\u7740\u4e00\u4e2a\u52a8\u6001\u5f00\u70b9\u6743\u503c\u7ebf\u6bb5\u6811\u4ee3\u8868\u81ea\u5df1\u7ba1\u8f96\u533a\u95f4\u5185\u7684\u53d6\u503c\u60c5\u51b5\u3002\u5f53\u4fee\u6539\u65f6\u6211\u4eec\u5728\u7b2c\u4e00\u5c42\u7ebf\u6bb5\u6811\u4e0a\u9012\u5f52\uff0c\u5728\u6bcf\u4e00\u4e2a\u7ecf\u8fc7\u7684\u8282\u70b9\u7684\u7ebf\u6bb5\u6811\u4e2d\u5220\u53bb\u88ab\u4fee\u6539\u70b9\u539f\u6765\u7684\u6743\u503c\uff0c\u52a0\u4e0a\u4fee\u6539\u540e\u7684\u6743\u503c\u3002\u5f53\u67e5\u8be2\u65f6\u5219\u9012\u5f52\u5230\u5bf9\u5e94\u7684\u533a\u95f4\u67e5\u8be2\u5bf9\u5e94\u503c\u6709\u591a\u5c11\u4e2a\u5e76\u52a0\u548c\u5373\u53ef\u3002\n\n\u6709\u4e2a\u5f88\u5927\u7684\u95ee\u9898\u5c31\u662f\u5185\u5b58\u4e0d\u591f\u7528\u3002\u6211\u4eec\u53ef\u4ee5\u5f00\u4e00\u4e2a\u5185\u5b58\u6c60\u56de\u6536\u6743\u503c\u5df2\u7ecf\u53d8\u62100\u7684\u8282\u70b9\uff0c\u56e0\u4e3a\u5b83\u5df2\u7ecf\u6ca1\u6709\u7528\u4e86\uff0c\u5f53\u521b\u5efa\u65b0\u8282\u70b9\u65f6\u518d\u91cd\u590d\u7528\u5373\u53ef\u3002\n\n\u8fd9\u6837\u7684\u8bdd\u65f6\u7a7a\u590d\u6742\u5ea6\u90fd\u662f $O(n\\log^2n)$ \u7684\uff0c\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n## Code\n```cpp\n#include<cstring>\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\nnamespace EMT{\n\ttypedef long long ll;typedef double db;//(double)clock() / (double)CLOCKS_PER_SEC;\n\t#define pf printf\n\t#define F(i,a,b) for(register int i=a;i<=b;i++)\n\t#define D(i,a,b) for(register int i=a;i>=b;i--)\n\tinline int read(){int x=0,f=1;char ch=getchar();while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}while(ch>='0'&&ch<='9')x=x*10+ch-'0',ch=getchar();return x*f;}\n\tinline void file(){freopen(\"in.in\",\"r\",stdin);freopen(\"my.out\",\"w\",stdout);}\n\tinline int max(int a,int b){return a>b?a:b;}inline int min(int a,int b){return a<b?a:b;}\n\tinline void pi(int x){pf(\"%d \",x);}inline void pn(){pf(\"\\n\");}\n\tconst int N=1e5+10;\n\tint rt[N<<2];\n\tstruct seg{\n\t\tint siz[N*100],ls[N*100],rs[N*100],tot,sta[N*10],top;\n\t\tinline int cre(){\n\t\t\treturn top?sta[top--]:++tot;\n\t\t}\n\t\tinline void change(int &p,int l,int r,int x,int v){\n\t\t\tif(!p)p=cre();siz[p]+=v;\n\t\t\tif(l==r){\n\t\t\t    if(!siz[p])sta[++top]=p,p=0;\n\t\t\t    return;\n\t\t\t}\n\t\t\tint mid=(l+r)>>1;\n\t\t\tif(x<=mid)change(ls[p],l,mid,x,v);\n\t\t\telse change(rs[p],mid+1,r,x,v);\n\t\t\tif(!siz[p])sta[++top]=p,p=0;\n\t\t}\n\t\tinline int ask(int p,int l,int r,int x){\n\t\t\tif(!p)return 0;\n\t\t\tif(l==r)return siz[p];\n\t\t\tint mid=(l+r)>>1;\n\t\t\tif(x<=mid)return ask(ls[p],l,mid,x);\n\t\t\telse return ask(rs[p],mid+1,r,x);\n\t\t}\n\t}segm;\n\tint s[N<<1],a[N],len,n,m,opt[N],x[N],y[N],z[N];\n\tinline void build(int p,int l,int r){\n\t\tF(i,l,r)segm.change(rt[p],1,len,a[i],1);\n\t\tif(l==r)return;\n\t\tint mid=(l+r)>>1;\n\t\tbuild(p<<1,l,mid),build(p<<1|1,mid+1,r);\n\t}\n\tinline void change(int p,int l,int r,int x,int v1,int v2){\n\t\tsegm.change(rt[p],1,len,v1,-1),segm.change(rt[p],1,len,v2,1);\n\t\tif(l==r)return;\n\t\tint mid=(l+r)>>1;\n\t\tif(x<=mid)change(p<<1,l,mid,x,v1,v2);\n\t\telse change(p<<1|1,mid+1,r,x,v1,v2);\n\t}\n\tinline int ask(int p,int l,int r,int ql,int qr,int v){\n\t\tif(l>=ql&&r<=qr)return segm.ask(rt[p],1,len,v);\n\t\tint mid=(l+r)>>1;\n\t\tif(qr<=mid)return ask(p<<1,l,mid,ql,qr,v);\n\t\telse if(ql>mid)return ask(p<<1|1,mid+1,r,ql,qr,v);\n\t\telse return ask(p<<1,l,mid,ql,mid,v)+ask(p<<1|1,mid+1,r,mid+1,qr,v);\n\t}\n\tinline short main(){\n\t//\tfile();\n\t\tlen=n=read(),m=read();\n\t\tF(i,1,n)a[i]=s[i]=read();\n\t\tF(i,1,m){\n\t\t\tchar ch=getchar();\n\t\t\twhile(ch!='C'&&ch!='Q')ch=getchar();\n\t\t\tif(ch=='C')opt[i]=1,x[i]=read(),s[++len]=y[i]=read();\n\t\t\telse opt[i]=2,x[i]=read(),y[i]=read(),s[++len]=z[i]=read();\n\t\t}\n\t\tstd::sort(s+1,s+len+1);\n\t\tlen=std::unique(s+1,s+len+1)-s-1;\n\t\tF(i,1,n)a[i]=std::lower_bound(s+1,s+len+1,a[i])-s;\n\t\tbuild(1,1,n);\n\t\tF(i,1,m){\n\t\t\tif(opt[i]==1){\n\t\t\t\ty[i]=std::lower_bound(s+1,s+len+1,y[i])-s;\n\t\t\t\tif(a[x[i]]==y[i])continue;\n\t\t\t\tchange(1,1,n,x[i],a[x[i]],y[i]);\n\t\t\t\ta[x[i]]=y[i];\n\t\t\t}else{\n\t\t\t\tz[i]=std::lower_bound(s+1,s+len+1,z[i])-s;\n\t\t\t\tpi(ask(1,1,n,x[i],y[i],z[i])),pn();\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n}\nsigned main(){return EMT::main();}\n```",
        "postTime": 1636842720,
        "uid": 451066,
        "name": "letitdown",
        "ccfLevel": 9,
        "title": "P2464 [SDOI2008] \u90c1\u95f7\u7684\u5c0f J"
    },
    {
        "content": "$$\\href{http://blog.chhokmah.top/index.php/archives/65/}{\\Large\\texttt{My blog}}$$\n\n---\n# Description\n> Link\uff1a[\u6d1b\u8c37](https://www.luogu.org/problemnew/show/P2464)\n\n\u6570\u5217\u4e0a\u6709$n$\u4e2a\u989c\u8272  \n\u4e24\u79cd\u64cd\u4f5c\uff1a1\u3001\u5355\u70b9\u4fee\u6539\u30022\u3001\u533a\u95f4\u67e5\u8be2$[l,r]$\u5185\u989c\u8272$k$\u51fa\u73b0\u7684\u6b21\u6570\u3002\n# Data range \n$n,m\\leq 100000$\n<!--more-->\n\u505a\u4e00\u505a\u6c34\u9898\uff0c\u51b7\u9759\u4e00\u4e0b\u3002  \n# Solution\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u989c\u8272\u5efa\u7acb\u4e00\u4e2a\u5e73\u8861\u6811\uff0c\u6743\u503c\u5c31\u662f\u4f4d\u7f6e\u3002  \n\u7136\u540e\u7684\u67e5\u8be2\u5c31\u7b80\u5355\u4e86\u3002  \n\u5728\u4fee\u6539\u7684\u65f6\u5019\u628a\u539f\u6765\u7684\u989c\u8272\u8c03\u51fa\u6765\u3002  \n\u67e5\u8be2\u7684\u65f6\u5019\u67e5\u627e\u533a\u95f4\u5185\u7684\u524d\u9a71\u548c\u540e\u7ee7\u5c31\u53ef\u4ee5\u4e86\u3002  \n\u8bb0\u5f97\u8981\u79bb\u6563\u5316\u5466~~\n# Code\n\u6d1b\u8c37\u5f00\u4e86O2\u624d\u8fc7\u6389\u4e86\u7684\u5783\u573e\u4ee3\u7801 /kk\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 200000 + 6;\nconst int inf = 2147483647;\nstruct Treap {\n    int tot, rt;\n    struct node {\n        int val, ch[2], rd, cnt, sz;\n        void Init(int Val) { val = Val, rd = rand() % 300; sz = cnt = 1; ch[1] = ch[0] = 0; }\n    } tr[N * 10];\n    void pushup(int nod) { tr[nod].sz = tr[tr[nod].ch[0]].sz + tr[tr[nod].ch[1]].sz + tr[nod].cnt; }\n    void rotate(int &nod, int d) {\n        int k = tr[nod].ch[d]; tr[nod].ch[d] = tr[k].ch[d ^ 1]; tr[k].ch[d ^ 1] = nod;\n        pushup(nod); pushup(k); nod = k; \n    }\n    void ins(int &nod, int val) {\n        if (!nod) { nod = ++ tot; tr[nod].Init(val); }\n        else {\n            tr[nod].sz ++; \n            if (tr[nod].val == val) { tr[nod].cnt ++; return; }\n            int d = val > tr[nod].val; \n            ins(tr[nod].ch[d], val);\n            if (tr[nod].rd > tr[tr[nod].ch[d]].rd) rotate(nod, d);\n        }\n    }\n    void del(int &nod, int val) {\n    \tif (!nod) return;\n    \tif (tr[nod].val == val) {\n    \t\tif (tr[nod].cnt > 1) { tr[nod].cnt --, tr[nod].sz --; return; } \n    \t\tint d = tr[tr[nod].ch[0]].rd > tr[tr[nod].ch[1]].rd;\n    \t\tif (!tr[nod].ch[1] || !tr[nod].ch[0]) nod = tr[nod].ch[1] + tr[nod].ch[0];\n    \t\telse rotate(nod, d), del(nod, val);\n        }\n        else tr[nod].sz --, del(tr[nod].ch[tr[nod].val < val], val);\n    }\n    int pre(int nod, int val) {\n        if (!nod) return -inf;\n        if (tr[nod].val > val) return pre(tr[nod].ch[0], val);\n        else return max(tr[nod].val, pre(tr[nod].ch[1], val));\n    }\n    int suc(int nod, int val) {\n        if (!nod) return inf;\n        if (tr[nod].val < val) return suc(tr[nod].ch[1], val);\n        else return min(tr[nod].val, suc(tr[nod].ch[0], val));\n    }\n    int rk(int nod, int val) {\n    \tif (!nod) return 0; \n    \tif (tr[nod].val == val) return tr[tr[nod].ch[0]].sz + 1; \n    \tif (tr[nod].val > val) return rk(tr[nod].ch[0], val);\n    \telse return rk(tr[nod].ch[1], val) + (tr[tr[nod].ch[0]].sz + tr[nod].cnt);\n    }\n}tp;\nstruct Qus_Rec { int opt, x, y, z; } QwQ[N]; \nint disc[N << 1], dn = 0, b[N], a[N];\nint rt[N], n, m; \nint main() { \n    memset(rt, 0, sizeof(rt));\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 1; i <= n; i ++) scanf(\"%d\", &a[i]), disc[++ dn] = a[i]; \n    for (int i = 1; i <= m; i ++) {\n        char opt[5]; int x, y, z; \n        scanf(\"%s%d%d\", opt, &x, &y);\n        if (opt[0] == 'Q') {\n            scanf(\"%d\", &z);\n            QwQ[i].opt = 0; QwQ[i].x = x; QwQ[i].y = y; QwQ[i].z = z; disc[++ dn] = z; \n        } else {  QwQ[i].opt = 1; QwQ[i].x = x; QwQ[i].y = y; disc[++ dn] = y; }\n    }\n    sort(disc + 1, disc + 1 + dn);\n    dn = unique(disc + 1, disc + 1 + dn) - disc - 1;\n    for (int i = 1; i <= n; i ++) {\n        b[i] = lower_bound(disc + 1, disc + 1 + dn, a[i]) - disc;\n        tp.ins(rt[b[i]], i);\n    } \n    for (int i = 1; i <= m; i ++) {\n    \tif (!QwQ[i].opt) QwQ[i].z = lower_bound(disc + 1, disc + 1 + dn, QwQ[i].z) - disc;\n        else QwQ[i].y = lower_bound(disc + 1, disc + 1 + dn, QwQ[i].y) - disc;\n    }\n    for (int i = 1; i <= m; i ++) {\n        if (!QwQ[i].opt) {\n            int l = tp.suc(rt[QwQ[i].z], QwQ[i].x), r = tp.pre(rt[QwQ[i].z], QwQ[i].y);\n            if (l == inf || r == -inf) printf(\"0\\n\");\n            else printf(\"%d\\n\", tp.rk(rt[QwQ[i].z], r) - tp.rk(rt[QwQ[i].z], l) + 1);\n        } else {\n            tp.del(rt[b[QwQ[i].x]], QwQ[i].x);\n            tp.ins(rt[QwQ[i].y], QwQ[i].x); \n            b[QwQ[i].x] = QwQ[i].y; \n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1557152604,
        "uid": 35567,
        "name": "Ayers",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2464 \u3010[SDOI2008]\u90c1\u95f7\u7684\u5c0fJ\u3011"
    }
]