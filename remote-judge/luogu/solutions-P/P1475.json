[
    {
        "content": "\u76f4\u63a5\u7528dfs\n\n\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint a[102][102];//a[i][j]\u8868\u793a\u516c\u53f8i\u62e5\u6709\u516c\u53f8j\u767e\u5206\u4e4ba[i][j]\u7684\u80a1\u4efd\nint cnt[102]\uff1b//cnt[i]\u8868\u793a\u5f53\u524d\u9636\u6bb5\u4e2d\u516c\u53f8x\u62e5\u6709\u516c\u53f8i\u7d2f\u8ba1\u6709\u767e\u5206\u4e4bcnt[i]\u7684\u80a1\u4efd\nint m;\nbool f[102]\uff1b//f[i]\u8868\u793a\u5f53\u524d\u9636\u6bb5\u4e2d\u7b2ci\u4e2a\u516c\u53f8\u662f\u5426\u88ab\u641c\u7d22\u8fc7\nbool own[102];//own[i]\u8868\u793a\u5f53\u524d\u9636\u6bb5\u4e2d\u516c\u53f8x\u662f\u5426\u80fd\u63a7\u5236\u516c\u53f8i\nvoid EMILY(int x)\n{\n    if(f[x]==true)//\u8fb9\u754c\u6761\u4ef6\uff0c\u5982\u679c\u5f53\u524d\u516c\u53f8\u5df2\u88ab\u641c\u7d22\u8fc7\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\n        return ;\n    f[x]=true;//\u6807\u8bb0\u4e3a\u641c\u7d22\u8fc7\n    for(int i=m;i;i--)//\u679a\u4e3e\u6240\u6709\u516c\u53f8\n    {\n        cnt[i]+=a[x][i];//\u52a0\u4e0a\u5f53\u524d\u516c\u53f8\u7684\u80a1\u4efd\u767e\u5206\u70b9\n        if(cnt[i]>50)//\u6ee1\u8db3\u6761\u4ef6\n        {\n            own[i]=true;//\u8bbe\u7f6e\u4e3a\u80fd\u591f\u63a7\u5236\n            EMILY(i);//\u9012\u5f52\n        }\n    }\n}\nint main()\n{\n    freopen(\"1475.in\",\"r\",stdin);\n    freopen(\"1475.out\",\"w\",stdout);\n    int i,j,k,u,v,w,n;\n    for(scanf(\"%d\",&n);n;n--)\n    {\n        scanf(\"%d%d%d\",&u,&v,&w);\n        a[u][v]=w;//\u516c\u53f8u\u62e5\u6709\u516c\u53f8v\u767e\u5206\u4e4bw\u7684\u80a1\u4efd\n        m=max(u,max(m,v));//m\u4e3a\u516c\u53f8\u7684\u4e2a\u6570\n    }\n    for(i=1;i<=m;i++)\n    {\n        memset(f,false,sizeof(f));//\u628a\u904d\u5386\u60c5\u51b5\u5168\u90e8\u6e05\u7a7a\n        memset(own,false,sizeof(own));//\u628a\u6240\u5c5e\u60c5\u51b5\u5168\u90e8\u7f6e\u4e3afalse\n        memset(cnt,0,sizeof(cnt));//\u628a\u7d2f\u8ba1\u767e\u5206\u70b9\u5168\u90e8\u6e05\u96f6\n        EMILY(i);//\u4ece\u7b2ci\u4e2a\u516c\u53f8\u5f00\u59cb\u641c\u7d22\n        for(j=1;j<=m;j++)\n            if(own[j]==true&&i!=j)//\u5982\u679c\u516c\u53f8j\u5c5e\u4e8e\u516c\u53f8i\u4e14i\u4e0d\u7b49\u4e8ej\n                printf(\"%d %d\\n\",i,j);//\u8f93\u51fa\u516c\u53f8i\u63a7\u5236\u516c\u53f8j\n    }\n    return 0;\n}\n\n```",
        "postTime": 1494686421,
        "uid": 18993,
        "name": "\u4ee5\u58a8",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1475 \u3010\u63a7\u5236\u516c\u53f8 Controlling Companies\u3011"
    },
    {
        "content": "\u9898\u89e3by\uff1aredbag\n\n\u539f\u9898\u5730\u5740\uff1ahttp://www.luogu.org/problem/show?pid=1475\n\n\u9898\u89e3\u5730\u5740\uff1ahttp://redbag.duapp.com/?p=1334\n\n\u6211\u8bf4\u8fd9\u9053\u9898\u53ef\u4ee5\u7528dfs\uff1f\u4e0d\u4f1a\u7206\uff0c\u8fd8\u5f88\u5feb\n\n>USER: lanxuan yi [ylx14271]\n>TASK: concom\n>LANG: C++\n\n>Compiling...\n>Compile: OK\n\n>Executing...\n>Test 1: TEST OK [0.000 secs, 4336 KB]\n>Test 2: TEST OK [0.000 secs, 4336 KB]\n>Test 3: TEST OK [0.000 secs, 4336 KB]\n>Test 4: TEST OK [0.000 secs, 4336 KB]\n>Test 5: TEST OK [0.000 secs, 4336 KB]\n>Test 6: TEST OK [0.000 secs, 4336 KB]\n>Test 7: TEST OK [0.000 secs, 4336 KB]\n>Test 8: TEST OK [0.000 secs, 4336 KB]\n>Test 9: TEST OK [0.011 secs, 4336 KB]\n\n>All tests OK.\n\n>Your program ('concom') produced all correct answers!  This is your\n>submission #7 for this problem.  Congratulations!\n\u63a5\u4e0b\u6765\u662f\u4ee3\u7801\n\n```cpp\n/*\nID: ylx14274\nPROG: concom\nLANG: C++     \n*/\n#include<set>  \n#include<map>  \n#include<list>  \n#include<queue>  \n#include<stack>  \n#include<string>  \n#include<math.h>  \n#include<time.h>  \n#include<vector>  \n#include<bitset>  \n#include<memory>  \n#include<utility>  \n#include<stdio.h>  \n#include<sstream>  \n#include<iostream>  \n#include<stdlib.h>  \n#include<string.h>  \n#include<algorithm>\n#define LL unsigned long long\nusing namespace std;\nint x,y,k,n,t,i,j;\nint a[201][201];//a[i][j]\u8868\u793ai\u516c\u53f8\u63a7\u5236j\u516c\u53f8\u7684\u80a1\u6743\u6570\u91cf \nint pd[201];//\u5224\u91cd \nint he[201];\nvoid dfs(int c)//c\u662fi\u516c\u53f8\u63a7\u5236\u7684\u516c\u53f8 \n{\n    pd[c]=1;//\u6807\u8bb0 \n    int i;\n    for (i=1;i<=n;i++)\n    { \n        he[i]+=a[c][i];//\u52a0\u4e0ac\u516c\u53f8\u62e5\u6709i\u7684\u80a1\u6743 \n        if (he[i]>50)//c\u62e5\u6709\u516c\u53f8i \n        {\n            if (pd[i]==0)//\u6ca1\u88ab\u641c\u8fc7\n            dfs(i);//\u641c \n        } \n    } \n    return;\n}\nint main() \n{\n    freopen(\"concom.in\",\"r\",stdin);\n    freopen(\"concom.out\",\"w\",stdout);//\u6587\u4ef6 \n    scanf(\"%d\",&t);//\u8bfb\u5165 \n    n=0; \n    for (i=1;i<=t;i++)\n    {\n        scanf(\"%d%d%d\",&x,&y,&k);\n        if (x>n) n=x;\n        if (y>n) n=y;//\u627e\u516c\u53f8\u6570\u91cf\uff1f\u6807\u53f7\u6700\u5927\uff1f \n        a[x][y]+=k;//\u6807\u8bb0\n    } \n    for (i=1;i<=n;i++) \n    {\n        for (j=1;j<=200;j++) pd[j]=0;//\u6570\u7ec4\u8d4b\u521d\u503c \n        for (j=1;j<=200;j++) he[j]=0;//\u6570\u7ec4\u8d4b\u521d\u503c \n        dfs(i); //\u641c\uff0c\u81ea\u5df1\u63a7\u5236\u81ea\u5df1 \n        for (j=1;j<=n;j++) \n        if (he[j]>50&&i!=j)//\u4e0d\u80fd\u662f\u81ea\u5df1 \n            printf(\"%d %d\\n\",i,j); //\u8f93\u51fa \n    }\n    return 0; \n}\n```",
        "postTime": 1469592874,
        "uid": 2674,
        "name": "\u300cQQ\u7ea2\u5305\u300d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1475 \u3010\u63a7\u5236\u516c\u53f8 Controlling Companies\u3011"
    },
    {
        "content": "\u8fd9\u6837\u7684\u597d\u9898\uff0c\u600e\u4e48\u80fd\u56e0\u4e3a\u6570\u636e\u6c34\u800c\u7528\u7206\u641c\u6c34\u8fc7\u5462\uff1f\uff01\n\n\u5176\u5b9e\u4e00\u770b\u5230\u9898\u76ee\uff0c\u8bb8\u591a\u4eba\u90fd\u4f1a\u60f3\u5230\u5e76\u67e5\u96c6\u5427\n\n\u4f46\u8fd9\u53c8\u4e0d\u662f\u666e\u901a\u7684\u5e76\u67e5\n\n\u5177\u4f53\u6765\u8bf4\uff1a\n\n- \u4e00\u4e2a\u516c\u53f8\u53ef\u80fd\u6709\u591a\u4e2a\u7956\u5148\n\n- \u8f93\u51fa\u65f6\u8981\u628a\u7956\u5148\u94fe\u4e0a\u7684\u6240\u6709\u7956\u5148\u8f93\u51fa\n\n\u6240\u4ee5\uff0c\u53ea\u8981\u8fd0\u7528\u6811\u72b6\u6570\u636e\u7ed3\u6784\u5c31\u53ef\u4ee5\u4e86~~\n\n\u4ee3\u7801\u4e0d\u7cbe\u7684\u6211\u501f\u7528\u5e76\u67e5\u601d\u60f3\u6253\u4e86\u4e00\u4efd\u4ee3\u7801\uff0c\u6743\u5f53\u629b\u7816\u5f15\u7389\u4e86\uff08\u3002\u3002\u5c31\u53eb\u6811\u72b6\u5e76\u67e5\u5427\uff09\n\n\n\n\n\n\n```cpp\n#include<map>\n#include<list>\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nconst int maxn=505;\nint f[maxn][maxn];//f[x][y]\u8868\u793ax\u516c\u53f8\u62e5\u6709\u7684y\u516c\u53f8\u7684\u80a1\u4efd \nbool vis[maxn][maxn];//vis\u8868\u793ax\u662f\u4e0d\u662fy\u7684\u7236\u4eb2 \nstruct node{\n    int c,ff;\n}cop[maxn*maxn*maxn];//\u5e94\u8f93\u51fa\u7684\u7b54\u6848\uff08c\u662f\u7236\u4eb2\uff0cff\u662f\u513f\u5b50\uff09 \nint ccnt;\ninline int read(){\n    int k=0,base=1;char s;\n    while(s=getchar()){if(s=='-')base=-1;if(s>='0' && s<='9')break;}\n    while(s>='0' && s<='9'){k=(k<<3)+(k<<1)+(s^'0');s=getchar();}\n    return k*base;\n}\nint son[maxn][maxn],cnt[maxn];//son[x][y]\u8868\u793ax\u7684\u7b2cy\u4e2a\u513f\u5b50 \nint linker[maxn][maxn],cnt1[maxn];//linker[x][y]\u8868\u793ax\u62e5\u6709\u5176\u80a1\u4efd\u7684\u7b2cy\u4e2a\u516c\u53f8 \nvoid link(int x,int y){\n    if(vis[x][y])return;\n    son[x][++cnt[x]]=y;\n    vis[x][y]=1;\n```\n}//\u52a0\u4e00\u4e2a\u513f\u5b50\n\n```cpp\nvoid add(int x,int y,int w){\n    if(!vis[x][y])\n        f[x][y]+=w,linker[x][++cnt1[x]]=y;\n    if(f[x][y]>50 && !vis[x][y]){\n        link(x,y);\n    }\n```\n}//\u591a\u4e00\u4e2a\u5173\u7cfb\n\n```cpp\nvoid Find1(int x,int fa){\n    for(int i=1;i<=cnt1[x];i++){\n        if(f[x][linker[x][i]] && !vis[fa][linker[x][i]] && !vis[x][linker[x][i]]){\n            f[fa][linker[x][i]]+=f[x][linker[x][i]];\n            if(f[fa][linker[x][i]]>50)\n                link(fa,linker[x][i]);//\u5982\u679c\u5b50\u516c\u53f8\u62e5\u6709\u67d0\u4e2a\u516c\u53f8z\u7684\u80a1\u4efd\uff0c\u5e76\u4e14f[fa][z]>50,\u5c31\u628az\u653e\u8fdbx\u7684\u5b50\u6811\u4e2d \n        }\n    }\n```\n}//\u5bfb\u627efa\u7684\u5b50\u516c\u53f8\u6240\u62e5\u6709\u7684\u80a1\u4efd\n\n```cpp\nvoid Find(int x,int fa){\n    int head=0;\n    while(son[x][++head]!=0){\n        if(fa==son[x][head])continue;//\u8fd9\u53e5\u8bdd\u5fc5\u52a0\uff0c\u4e0d\u7136\u4f1a\u6709\u6b7b\u5faa\u73af \n        cop[++ccnt].c=fa;\n        cop[ccnt].ff=son[x][head];\n        Find(son[x][head],fa);\n    }\n```\n}//\u5bfb\u627e\u4ee5fa\u4e3a\u6700\u5927\u7684\u7956\u5148\u6811\u4e0a\u7684\u6240\u6709\u5b50\u516c\u53f8\n\n```cpp\nbool cmp(node a,node b){\n    if(a.c>b.c)return false;\n    if(a.c<b.c)return true;\n    else {\n        if(a.ff>b.ff)return false;\n    }\n    return true;\n```\n}//\u6309\u9898\u76ee\u8981\u6c42\u6392\u5e8f\n\n```cpp\nint main( ){\n    int m,n,j,k,i;\n    n=read();\n    for(i=1;i<=n;i++){\n        int x=read(),y=read(),w=read();\n        add(x,y,w);\n```\n}//\u52a0\u5173\u7cfb\n```cpp\n    for(i=1;i<=100;i++){\n        int j=0;\n        while(son[i][++j]!=0){\n            Find1(son[i][j],i);\n```\n}//\u5bfb\u627ei\u7684\u5b50\u516c\u53f8\u6240\u62e5\u6709\u7684\u80a1\u4efd\n```cpp\n    }\n    for(i=1;i<=100;i++)\n        Find(i,i);//\u5bfb\u627e\u4ee5fa\u4e3a\u6700\u5927\u7684\u7956\u5148\u7684\u6811\u4e0a\u7684\u7684\u6240\u6709\u5b50\u516c\u53f8 \n    sort(cop+1,cop+ccnt+1,cmp);\n    for(i=1;i<=ccnt;i++)\n        printf(\"%d %d\\n\",cop[i].c,cop[i].ff);//\u8f93\u51fa\u7956\u5148\u548c\u513f\u5b50 \n    return 0;\n}\n```\n\u5176\u5b9e\u8fd9\u5e76\u4e0d\u662f\u771f\u6b63\u7684\u5e76\u67e5\uff0c\u56e0\u4e3a\u662f\u7236\u4eb2\u4e0d\u65ad\u5bfb\u627e\u513f\u5b50\u800c\u4e0d\u662f\u513f\u5b50\u5bfb\u627e\u7236\u4eb2\n\u4f46\u65f6\u95f4\u6548\u7387\u4e5f\u4e0d\u9519\u4e86\uff0c\u4f5c\u8005\u6211\u5c06\u5341\u5206\u611f\u6fc0\u5404\u4f4d\u63d0\u51fa\u5b9d\u8d35\u610f\u89c1\n",
        "postTime": 1498889592,
        "uid": 43252,
        "name": "ABCDXYZ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1475 \u3010\u63a7\u5236\u516c\u53f8 Controlling Companies\u3011"
    },
    {
        "content": "\u8fd9\u4e00\u9053\u9898\u662f\u56e0\u4e3a\u6570\u636e\u5c0f\u624d\u5bb9\u6613\u7684\uff0c\u6211\u4eec\u76f4\u63a5dfs\u6765\u641c\u7d22\u5c31\u53ef\u4ee5\n\n\u4e86\uff0c\u5982\u679c\u4e0d\u7528\u641c\u7d22\u6216\u5e76\u67e5\u96c6\u7684\u8bdd\u5e94\u8be5\u5f88\u96be\u505a\u51fa\u6765\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\nusing namespace std;\nint n;//\u8868\u793a\u51fa\u73b0\u516c\u53f8\u7684\u5927\u5c0f \nint a[110][110],f[110];//a\u8868\u793a\u638c\u63e1\u80a1\u4efd\uff08\u4e0d\u4f1a\u6539\u53d8\uff09\uff0cf[k]\u8868\u793a\u5728\u641c\u7d22\u7b2ci\u4e2a\u516c\u53f8\u65f6\uff0c\u7b2ci\u4e2a\u516c\u53f8\u6240\u5360\u7b2ck\u4e2a\u516c\u53f8\u7684\u603b\u80a1\u4efd \nbool v[110],c[110];//v\u8868\u793a\u8fd9\u4e2a\u516c\u53f8\u662f\u5426\u641c\u7d22\u8fc7\uff0cc\u8868\u793a\u63a7\u5236 \nvoid dfs(int k)//\u641c\u7d22\u7b2ck\u4e2a\u516c\u53f8 \n{\n\tif(v[k]==true) return;//\u5982\u679c\u641c\u7d22\u8fc7\u4e86\uff0c\u5c31\u4e0d\u7528\u7ba1\u4e86 \n\tv[k]=true;//\u6539\u4e3a\u88ab\u641c\u7d22\u8fc7 \n\tfor(int i=1;i<=n;i++)//\u679a\u4e3e\u6bcf\u4e2a\u516c\u53f8 \n\t{\n\t\tf[i]+=a[k][i];\n\t\tif(f[i]>50)//\u5982\u679c\u63a7\u5236\u4e86\u8fd9\u4e2a\u516c\u53f8 \n\t\t{\n\t\t\tc[i]=true;//\u8bb0\u4e3a\u88ab\u63a7\u5236 \n\t\t\tdfs(i);//\u5f80\u4e0b\u6df1\u641c \n\t\t}\n\t}\n}\nint main()\n{\n\tint i,j,x,y,z,t;\n\tscanf(\"%d\",&t);//\u8f93\u5165 \n\tfor(i=1;i<=t;i++) \n\t{\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\ta[x][y]=z;n=max(n,max(x,y));//\u56e0\u4e3a\u6709\u4e9b\u516c\u53f8\u53ef\u80fd\u662f\u5047\u7684\uff0c\u5c31\u627e\u51fa\u73b0\u8fc7\u6700\u5927\u7684\u516c\u53f8\u5c31\u597d\u4e86 \n\t}\n\tfor(i=1;i<=n;i++)//\u679a\u4e3en\u4e2a\u51fa\u73b0\u8fc7\u7684\u516c\u53f8 \n\t{\n\t\tmemset(v,false,sizeof(v));//\u521d\u59cb\u5316 \n\t\tmemset(c,false,sizeof(c));\n\t\tmemset(f,0,sizeof(f));\n\t\tdfs(i);//\u4ece\u7b2ci\u4e2a\u516c\u53f8\u5f00\u59cb\u6df1\u641c \n\t\tfor(j=1;j<=n;j++)\n\t\t\tif(c[j]==true && i!=j)//\u5982\u679c\u63a7\u5236\u4e86\uff0c\u5c31\u8f93\u51fa \n\t\t\t\tprintf(\"%d %d\\n\",i,j);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1524380010,
        "uid": 66181,
        "name": "Celebrate",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1475 \u3010\u63a7\u5236\u516c\u53f8 Controlling Companies\u3011"
    },
    {
        "content": " _\u672c\u849f\u84bb\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\u3002\u8c28\u4ee5\u6b64\u9898\u7eaa\u5ff5\u6211\u7684AC200\u5427\uff0c\u671b\u7ba1\u7406\u5458\u7238\u7238\u5ba1\u6838\u901a\u8fc7\uff01_ \n\n[\u539f\u9898\u4f20\u9001\u95e8](https://www.luogu.org/problem/P1475)\n\n****\u770b\u5230\u8fd9\u9053\u9898\u6211\u7b2c\u4e00\u79d2\u5c31\u60f3\u5230\uff1a\u6c34\u9898\uff01\u5e76\u67e5\u96c6\u79d2\u5207\uff01 \n\u5ffd\u7136\u8f6c\u5ff5\u4e00\u60f3\uff0c\u672c\u849f\u84bb\u8fd8\u4e0d\u4f1a\u5e76\u67e5\u96c6\u9e2d\u3002\u3002\u3002\u3002\u70b9\u5f00\u6807\u7b7e\uff0c\u7b80\u5355\u7684\u641c\u7d22\u4e8c\u5b57\u9971\u542b\u5927\u5927\u5730\u6df1\u610f\uff08\u5176\u5b9e\u5c31\u662f\u4e2a\u666e\u901a\u7684\u66b4\u641c\uff09\uff0c\u90a3\u6211\u4eec\u5c31\u5229\u7528\u79bb\u6563\u5316\u641e\u4e00\u4e0b\u8fd9\u9053\u9898\u5427!\n\n## \u6240\u8c13\u79bb\u6563\u5316\uff1a\n\n#### \u5b98\u65b9\u5b9a\u4e49\uff1a\n\u628a\u65e0\u9650\u7a7a\u95f4\u4e2d\u6709\u9650\u7684\u4e2a\u4f53\u6620\u5c04\u5230\u6709\u9650\u7684\u7a7a\u95f4\u4e2d\u53bb\uff0c\u4ee5\u6b64\u63d0\u9ad8\u7b97\u6cd5\u7684\u65f6\u7a7a\u6548\u7387\u3002\n\nEmmmm\u3002\u3002\u3002\u8fd9\u4e48\u6709\u6280\u672f\u542b\u91cf\u7684\u5b9a\u4e49\u60f3\u6765\u6211\u8fd9\u79cd\u849f\u84bb\u4e5f\u770b\u4e0d\u61c2\n\n#### \u901a\u4fd7\u4e00\u70b9\uff1a\n\u5c31\u662f\u628a\u6ca1\u6709\u7528\u7684\u6570\u636e\u5168\u90e8\u5220\u6389\uff0c\u6362\u6210\u4e00\u4e9b\u6bd4\u8f83\u5c0f\u7684\u6570\u6765\u4ee3\u66ff\u8fd9\u4e9b\u5927\u6570\u636e\uff0c\u7528\u5c0f\u6570\u636e\u6765\u5904\u7406\u5927\u6570\u636e\u3002\n\n\u6570\u636e\u6bd4\u8f83\u6c34\uff0c\u6240\u4ee5\u518d\u7b80\u5355\u7684\u5199\u4e00\u4e2a\u66b4\u641c\uff0c\u5feb\u4e50\u7684\u63d0\u4ea4\nAC\u5176\u5b9e\u5f88\u7b80\u5355\u3002\n\n### \u9644\uff1a\u70b9\u5f00\u63d0\u4ea4\u8bb0\u5f55\u7b2c\u4e00\u9875\u4fbf\u6709\u4e24\u540d\u5c0f\u53ef\u601c\u6284\u9898\u89e3\u68d5\u540d\u4e86\u3002\u3002\u9898\u89e3\u867d\u597d\uff0c\u5c0f\u5fc3\u4e2d\u6bd2\u5662\uff01\n\n\u672c\u9898\u89e3\u79bb\u6563\u5316\u8fc7\u7a0b\u601d\u7ef4\u96be\u5ea6\u7565\u5927\uff0c\u4e0d\u8fc7\u8fd8\u662f\u5f88\u597d\u7406\u89e3\u7684\n## \u8bf7\u541b\u653e\u5fc3\u98df\u7528\uff01\n\n\n\u8be6\u60c5\u89c1\u6ce8\u91ca\u5427\uff0c\u9644\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,p,q,m,num,hh[2333333],h[6333][6333],w[6333][6333];\nint a[6333][6333],b[2333333],c[6333][6333],f[2333333],g[6333][6333],o[2333333];\nbool d[6333][6333],e[23333];\nint yes(int x,int y){\n\tfor(int i=1;i<=num;i++){\n\t\ta[x][i]+=a[y][i];       //\u6700\u521d\u7684\u516c\u53f8\u5bf9\u5176\u4ed6\u7684\u516c\u53f8\u63a7\u5236\u529b\u53c8\u5f3a\u4e86\u51e0\u5206 \n\t\tif(a[x][i]>50&&!d[x][i]){      //\u53c8\u6709\u516c\u53f8\u8981\u51c9\u4e86 \n\t\t\td[x][i]=1;\n\t\t\tc[x][++b[x]]=i;\n\t\t\tyes(x,i);             //\u7ee7\u7eed\u5bfb\u627e\u53ef\u4f9b\u6700\u521d\u7684\u516c\u53f8\u63a7\u5236\u7684\u5b50\u516c\u53f8 \n\t\t}\n\t}\n}\nint kuo(int x){\n\tfor(int i=1;i<=num;i++)\n\t\tif(a[x][i]>50&&!d[x][i]){        //\u5982\u679c\u53ef\u4ee5\u63a7\u5236\u4e141\u516c\u53f8\u8fd8\u6ca1\u63a7\u52362\u516c\u53f8 \n\t\t\td[x][i]=1;\n\t\t\tc[x][++b[x]]=i;          //2\u516c\u53f8\u6ca6\u9677\u4e86\u3002\u3002\u3002\u3002 \n\t\t\tyes(x,i);         //\u8fdb\u5165\u9012\u5f52\uff0c\u6269\u5c551\u516c\u53f8\u901a\u8fc72\u516c\u53f8\u53ef\u4ee5\u63a7\u5236\u7684\u5176\u4ed6\u516c\u53f8 \n\t\t}\n}\nint main(){\n\tint i,j;\n\tcin>>n;\n\tfor(i=1;i<=n;i++){\n\t\tcin>>p>>q>>m;                //\u6734\u7d20\u7684\u4e0d\u80fd\u518d\u6734\u7d20\u7684\u8f93\u5165  \uff08\u9003 \n\t\tif(!e[p]){o[++num]=p;e[p]=1;}          //\u8bb0\u5f55\u4e0b\u6765\u6bcf\u4e2a\u503c \n\t\tif(!e[q]){o[++num]=q;e[q]=1;}          //\u4e3a\u79bb\u6563\u5316\u505a\u51c6\u5907 \n\t\tg[p][++hh[p]]=q;              //\u8bb0\u5f55\u548c\u67d0\u4e00\u4e2a\u516c\u53f8\u6709\u8fde\u63a5\u7684\u6240\u6709\u5176\u4ed6\u516c\u53f8 \n\t\th[p][q]=m;\n\t}\n\tsort(o+1,o+num+1);                   //\u505a\u4e00\u4e2a\u6392\u5e8f\u4fdd\u8bc1\u6570\u636e\u8f93\u51fa\u5347\u5e8f\u6392\u5217 \n\tfor(i=1;i<=num;i++)f[o[i]]=i;          //\n\tfor(i=1;i<=num;i++)                //\u79bb\u6563\u5316 \n\t\tfor(j=1;j<=hh[o[i]];j++)\n\t\t\ta[i][f[g[o[i]][j]]]=h[o[i]][g[o[i]][j]];\n\tfor(i=1;i<=num;i++)kuo(i);               //\u67e5\u627e\u88abi\u516c\u53f8\u63a7\u5236\u7684\u516c\u53f8\uff0cdfs\u5f00\u59cb\uff01  \n\tfor(i=1;i<=num;i++)                 //\u8f93\u51fai\u516c\u53f8\u63a7\u5236\u7684\u516c\u53f8 \n\t\tfor(j=1;j<=num;j++)\n\t\t\tif(d[i][j]&&o[i]!=o[j])             //\u81ea\u5df1\u4e0d\u80fd\u63a7\u5236\u81ea\u5df1\u6240\u4ee5o[i]!=o[j] \n\t\t\t\tcout<<o[i]<<\" \"<<o[j]<<endl;       //\u8f93\u51fa\u7ed3\u679c \n\treturn 0;            //\u6bcf\u5929return 0\uff0c\u5feb\u4e50\u8d5b\u795e\u4ed9\uff01\uff01 \n}\n```\n _\u5c0f\u751f\u4e0d\u624d\uff0c\u9898\u89e3\u4e0d\u5982\u5404\u4f4ddalao\u6709\u6280\u672f\u542b\u91cf\uff0c\u82e5\u6709\u7591\u95ee\u8bc4\u8bba\u533a\u8ba8\u8bba\uff01\n\u795d\u5404\u4f4dOIer\u6c38\u8446\u9ed1\u53d1\uff01_ ",
        "postTime": 1569741435,
        "uid": 224552,
        "name": "kokodayou",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1475 \u3010\u63a7\u5236\u516c\u53f8 Controlling Companies\u3011"
    },
    {
        "content": "dijkstra\u7b97\u6cd5\uff0c\u5178\u578b\u7684\u641c\u7d22\n\n\u4e00\u904d\u53ef\u4ee5\u8fc7\uff0c\u6570\u636e\u4e0d\u5927\n\n```cpp\nuses math;\nconst\n    MAXN = 100;\ntype\n    arrn = array[1..MAXN] of longint;\nvar\n    M,i,N,x,y,p,node,j : longint;\n    hash : array[1..MAXN] of boolean;\n    dist : arrn;\n    map : array[1..MAXN] of arrn;\nbegin\n    readln(M);\n    for i := 1 to M do begin\n        readln(x,y,p); map[x,y] := p;\n        N := max(N,x); N := max(N,y);\n    end;\n    for node := 1 to N do begin\n        fillchar(hash,MAXN,0); hash[node] := true;\n        dist := map[node];\n        repeat\n            for i := 1 to N do\n                if not hash[i] and (dist[i] > 50) then break;\n            if hash[i] or (dist[i] <= 50) then begin\n                for i := 1 to node-1 do\n                    if hash[i] then writeln(node,' ',i);\n                for i := node+1 to N do\n                    if hash[i] then writeln(node,' ',i);\n                break;\n            end;\n            hash[i] := true;\n            for j := 1 to N do inc(dist[j],map[i,j]);\n        until false;\n    end;\nend.\n```",
        "postTime": 1468373271,
        "uid": 19901,
        "name": "\u68a6\u666f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1475 \u3010\u63a7\u5236\u516c\u53f8 Controlling Companies\u3011"
    },
    {
        "content": "**\u771f\u00b7\u66b4\u529b**\n***\n\u6709\u8fd9\u4e48\u591a\u7206\u641c\u9898\u89e3\u4e86\uff0c\u600e\u4e48\u5c31\u6ca1\u4e00\u7bc7\u66b4\u529b\u9898\u89e3\u52d2\uff08\u6bd5\u7adf$n<=100$\uff09\n\n\u65e2\u7136\u662f\u66b4\u529b\uff0c\u90a3\u4e48\u5c31\u4e0d\u591a\u8bb2\u4e86\uff0c\u6765\n\n**Code:**\n~~~cpp\n#include<bits/stdc++.h>\n#define RI register int\nusing namespace std;\n\nint in()\n{\n    int qwq=0;char c=getchar();//\u8f93\u5165\u90fd\u662f\u6b63\u6570\uff0c\u5c31\u4e0d\u5224\u2018-\u2019\u4e86\n    for(;!isdigit(c);c=getchar());\n    for(;isdigit(c);c=getchar()) qwq=(qwq<<1)+(qwq<<3)+(c&15);\n    return qwq;\n}\n\nconst int N=105;\n\nint n,m;\nint u,v,w;\nint a[N][N],cnt[N];\nint vis[N];\nint flag;\n\nint main()\n{\n    n=in();\n    for(RI i=1;i<=n;++i)\n    {\n    \tu=in(),v=in(),w=in();\n    \ta[u][v]=w;//u\u516c\u53f8\u62e5\u6709v\u516c\u53f8w%\u7684\u80a1\u4efd\n    \tm=max(m,max(u,v));//\u8ba1\u7b97\u5171\u6709\u591a\u5c11\u4e2a\u516c\u53f8\uff08\u5176\u5b9e\u76f4\u63a5\u7ed9m\u8d4b\u503c100\u5c31\u53ef\u4ee5\u4e86\uff0c\u65f6\u95f4\u5dee\u4e0d\u591a\uff09\n\t}\n\t\n\tfor(RI i=1;i<=m;++i)\n\t{\n\t\tmemset(vis,0,sizeof(vis));//\u6e05\u7a7a\n\t\tmemset(cnt,0,sizeof(cnt));//\u6570\u7ec4\n\t\tcnt[i]=100;//\u5bf9\u81ea\u5df1\u516c\u53f8\u7684\u63a7\u5236\u6743\u4e3a100%\n\t\tflag=1;\n\t\t\n\t\twhile(flag)\n\t\t{\n\t\t\tflag=0;\n\t\t\tfor(RI j=1;j<=m;++j)\n\t\t\t{\n\t\t\t\tif(!vis[j] && cnt[j]>50)//i\u516c\u53f8\u63a7\u5236\u4e86j\u516c\u53f8\u4e14\u4e4b\u524d\u672a\u62dc\u8bbf\uff08\u6ed1\u7a3d\uff09\n\t\t\t\t{\n\t\t\t\t\tvis[j]=1;\n\t\t\t\t\tfor(RI k=1;k<=m;++k) cnt[k]+=a[j][k];//\u52a0\u4e0aj\u516c\u53f8\u62e5\u6709\u7684\u80a1\u4efd\n\t\t\t\t\tflag=1;//\u52a0\u4e0aj\u516c\u53f8\u62e5\u6709\u7684\u80a1\u4efd\u540e\uff0ci\u516c\u53f8\u53ef\u80fd\u8fd8\u6709\u516c\u53f8\u53ef\u4ee5\u63a7\u5236\uff0c\u6240\u4ee5\u7ee7\u7eed\u627e\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor(RI j=1;j<=m;++j)\n\t\t{\n\t\t\tif(vis[j] && i!=j) printf(\"%d %d\\n\",i,j);//\u4e0d\u8f93\u51fa\u63a7\u5236\u81ea\u5df1\u7684\u516c\u53f8\uff08\u5373\u81ea\u5df1\uff09\n\t\t}\n\t}\n\t\n    return 0;\n}\n~~~",
        "postTime": 1572270309,
        "uid": 171014,
        "name": "R\u00b7Buffoon",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1475 \u3010\u63a7\u5236\u516c\u53f8 Controlling Companies\u3011"
    },
    {
        "content": "$USACO$ \u4e0a $CHAPTER 2$\n\n\u7684\u9898\n\n\u9ec4\u9898\u96be\u5ea6 \u4f46\u6211\u5199\u4e86\u4e00\u4e2a\u7f51\u7edc\u6d41\n\n\u770b\u4e86\u4e0b\u9898\u89e3 \u53ea\u6709\u6211\u662f\u5199\u7684\u7f51\u7edc\u6d41\n\n\u5176\u4ed6\u597d\u50cf\u90fd\u662f\u641c\u7d22\n\n\u601d\u60f3\n\n\u7f51\u7edc\u6d41\u4e2d\u8fdb\u884c\u662f\u5426\u53ef\u4ee5\u5897\u5e7f\u548c\u5897\u5e7f\u662f\n\n\u5373(\u6211\u5199\u7684$dinic$)DINIC\u4e2d\u7684$BFS$\u548c$DFS$\n\n\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u8d70\u7684\u65f6\u5019 \u6539\u6210\n\n```cpp\nif(depth[v = edge[e].v] == -1&&(edge[e].w&&able[tp]))//BFS\nif(depth[v = edge[e].v] == depth[x] + 1&&(edge[e].w&&able[x]))//DFS\n```\n\u5c31\u884c\u4e86 \u8fd8\u6709\u4e00\u4e9b\u8981\u6ce8\u610f\u7684\u70b9 \u5404\u4f4d\u795e\u4ed9\u5199\u7684\u65f6\u5019\u5f88\u5bb9\u6613\u60f3\u5230\n\n\u5bf9\u4e86 \u6211\u7528\u4e86$set$\u4f18\u5316\n\n\u53ef\u53bb\u91cd \u53ef\u6392\u5e8f \u4e3a\u4ec0\u4e48\u4e0d\u7528\u5462\uff1f\n\n\u65f6\u95f4\u590d\u6742\u5ea6\n\n$O(min(N^{0.67},M^{0.5}) * M*N^2)$ \n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u6bd4\u641c\u7d22\u4f18\u79c0 \u4f46\u7ec3\u7ec3\u7f51\u7edc\u6d41\u4e5f\u633a\u597d\u7684\n\n```cpp\n#include <set>\n#include <queue>\n#include <cstdio>\n#include <vector>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n#define reg register int\n#define isdigit(x) ('0' <= x&&x <= '9')\ntemplate<typename T>\ninline T Read(T Type)\n{\n\tT x = 0,f = 1;\n\tchar a = getchar();\n\twhile(!isdigit(a)) {if(a == '-') f = -1;a = getchar();}\n\twhile(isdigit(a)) {x = (x << 1) + (x << 3) + (a ^ '0');a = getchar();}\n\treturn x * f;\n}\nconst int MAXN = 10000;\nint n,cnt,ori_[MAXN];\nstruct node\n{\n\tint v,w,_nxt;\n}edge[MAXN],pos_[MAXN];\ninline void addedge(int u,int v,int w)\n{\n\tedge[++cnt].v = v;\n\tedge[cnt]._nxt = ori_[u];\n\tedge[cnt].w = w;\n\tori_[u] = cnt;\n}\ninline void add(int u,int v,int w) {addedge(u,v,w),addedge(v,u,0);}\nset<int> pany;\nbool able[MAXN],pr[MAXN];\nnamespace Dinitz\n{\n    const int inf = 0x7f7f7f7f;\n    int depth[MAXN],fire[MAXN];\n    inline bool Bfs(int s,int t)\n    {\n        memset(depth,-1,sizeof(depth));\n        queue<int> q;\n        q.push(s),depth[s] = 0;\n        while(!q.empty())\n        {\n            int v,tp = q.front();q.pop();\n            for(reg e = ori_[tp];e;e = edge[e]._nxt)\n                if(depth[v = edge[e].v] == -1&&(edge[e].w&&able[tp]))\n                {\n                \tdepth[v] = depth[tp] + 1,q.push(v);\n                \tif(edge[e].w >= 50) able[v] = 1;\n\t\t\t\t}\n        }\n        return (depth[t] != -1);\n    }\n    inline int dfs(int x,int t,int _flow)\n    {\n        if(x == t) return _flow; int v,flow_ = 0;\n\t\tfor(reg e = fire[x];e;e = edge[e]._nxt)\n        {\n            fire[x] = e;\n            if(depth[v = edge[e].v] == depth[x] + 1&&(edge[e].w&&able[x]))\n            {\n            \tif(edge[e].w >= 50) able[v] = 1;\n                int flow = dfs(v,t,min(_flow,edge[e].w));\n                _flow -= flow,flow_ += flow;\n                edge[e].w -= flow,edge[e ^ 1].w += flow;\n                if(!_flow) break;\n            }\n        }\n        if(!flow_) depth[x] = -1;\n        return flow_;\n    }\n    inline int Dinic(int s,int t)\n    {\n        int ans = 0;\n        while(Bfs(s,t))\n        {\n            for(set<int>::iterator i = pany.begin();i != pany.end();i++) fire[*i] = ori_[*i];\n            ans += dfs(s,t,inf);\n        }\n        return ans;\n    }\n}\nint main()\n{\n\tcnt = 1,n = Read(1);\n\tfor(reg i = 1;i <= n;i++)\n\t{\n\t\tint u = Read(1),v = Read(1),w = Read(1);\n\t\tadd(u,v,w);\n\t\tpany.insert(u),pany.insert(v);\n\t}\n\tfor(reg i = 1;i <= cnt;i++) pos_[i] = edge[i];\n\tfor(set<int>::iterator i = pany.begin();i != pany.end();i++)\n\t{\n\t\tmemset(able,0,sizeof(able));\n\t\tmemset(pr,0,sizeof(pr));\n\t\tset<int> pr_;\n\t\table[*i] = 1;\n\t\tint num = 1;\n\t\twhile(num)\n\t\t{\n\t\t\tnum = 0;\n\t\t\tfor(set<int>::iterator j = pany.begin();j != pany.end();j++)\n\t\t\t{\n\t\t\t\tif(*i == *j||pr[*j]) continue;\n\t\t\t\tint max_ = Dinitz::Dinic(*i,*j);\n\t\t\t\tfor(reg k = 1;k <= cnt;k++) edge[k] = pos_[k];\n\t\t\t\tif(max_ >= 50) pr_.insert(*j),num++,pr[*j] = able[*j] = 1;\n\t\t\t}\n\t\t}\n\t\tfor(set<int>::iterator j = pr_.begin();j != pr_.end();j++) printf(\"%d %d\\n\",*i,*j);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1574918669,
        "uid": 73992,
        "name": "resftlmuttmotw",
        "ccfLevel": 0,
        "title": "\u63a7\u5236\u516c\u53f8 Controlling Companies"
    },
    {
        "content": "\u6839\u636eUSACO\u4e0a\u7684\u5206\u533a\uff0c\u8fd9\u9053\u9898\u5e94\u8be5\u7528DFS\n\n------------\n\n\n1\uff09\u601d\u8def\n\n1.\u9996\u5148\u5148\u628a\u4e00\u5f00\u59cb\u80fd\u63a7\u5236\u7684\u641c\u51fa\u6765\n\n2.\u628a\u80fd\u63a7\u5236\u7684\u516c\u53f8\u5bf9\u5176\u4ed6\u516c\u53f8\u7684\u80a1\u4efd\u52a0\u8d77\u6765\n\n3.\u4e00\u76f4\u8fdb\u884c\u7b2c\u4e8c\u6b65\uff0c\u628a\u6240\u6709\u80fd\u63a7\u5236\u7684\u516c\u53f8\u90fd\u627e\u51fa\u6765\n\n------------\ncode\n\n```\n#include <string.h>\n\n#include <iostream>\n\nusing namespace std;\n\nconst int kMaxN = 100;\n\nint n, t;\nint a[101][101]; \nint dont[101];\nint com[101]; \n\nvoid dfs(int x) { \n  dont[x] = 1; \n  for (int i = 1; i <= n; i++) {\n    com[i] += a[x][i];\n    if (com[i] > 50) {\n      if (dont[i] == 0) {  //\u5224\u91cd\n        dfs(i);\n      }\n    }\n  }\n  return;\n}\n\nint main() {\n  cin >> t;\n  for (int i = 0; i < t; i++) {\n    int x, y, k;\n    cin >> x >> y >> k;\n    a[x][y] += k;\n    if (x > n) {\n      n = x;\n    }\n    if (y > n) {\n      n = y;\n    }\n  }\n  for (int i = 1; i <= n; i++) {\n    memset(dont, 0, sizeof(dont));\n    memset(com, 0, sizeof(com));\n    dfs(i);         \n    for (int j = 1; j <= n; j++) {\n      if (com[j] > 50 && i != j) {\n        cout << i << ' ' << j << endl;\n      }\n    }\n  }\n  return 0;\n}\n```\n",
        "postTime": 1610878909,
        "uid": 321290,
        "name": "un_def",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1475 \u3010[USACO2.3]\u63a7\u5236\u516c\u53f8 Controlling Companies\u3011"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\n\u82e5\u516c\u53f8$A,B$\u6ee1\u8db3\u516c\u53f8$A$\u6240\u63a7\u5236\u7684\u516c\u53f8\u6301\u6709$B$\u7684\u80a1\u7968\u603b\u548c\u5927\u4e8e$50\\%$\u6216$A=B$\u5219$A$\u63a7\u5236$B$\u3002\u73b0\u7ed9\u51fa$n$\u6761\u5173\u7cfb$(i,j,p)$\u8868\u793a\u516c\u53f8$i$\u6301\u6709\u516c\u53f8$j\\ p\\%$\u7684\u80a1\u7968\uff0c\u6c42\u6ee1\u8db3$A$\u63a7\u5236$B$\u4e14$A\\not=B$\u7684$(A,B)$\u3002\n\n\u516c\u53f8\u603b\u6570\u5c0f\u4e8e$100$\u3002\n\n## \u9898\u89e3\n\n\u867d\u7136\u4ee3\u7801\u6bd4\u8f83\u7b80\u5355\uff0c\u4f46\u7684\u786e\u4e0d\u662f\u4e00\u9053\u5bb9\u6613\u601d\u8003\u7684\u9898\u76ee\u3002\n\n\u5047\u8bbe\u5f53\u524d\u5404\u516c\u53f8\u7684\u5173\u7cfb\u4e3a$C_{i,j}$\uff0c\u82e5$C_{i,j}=1$\u5219\u516c\u53f8$i$\u63a7\u5236\u4e86\u516c\u53f8$j$\u3002\u7531\u9898\u610f\uff0c$C_{i,i}=1$\u3002\n\n\u6211\u4eec\u8bbe**\u521d\u59cb\u60c5\u51b5**\u4e0b\u516c\u53f8$A$\u6301\u6709\u516c\u53f8$B$\u7684\u80a1\u7968\u5360\u6bd4\u4e3a$P_{i,j}$\u3002\u6bcf\u4e00\u8f6e\u6211\u4eec\u5148\u7b97\u51fa**\u5f53\u524d\u8fd9\u4e00\u8f6e**\u516c\u53f8$i$\u6301\u6709\u516c\u53f8$j$\u7684\u80a1\u7968\u4e3a$Q_{i,j}$\u3002\u5373\uff1a\n\n$$Q_{i,k}=\\sum_{C_{i,j}=1}P_{j,k}$$\n\n\u7136\u540e\u6211\u4eec\u6839\u636e$Q_{i,j}$\u6765\u66f4\u65b0$C_{i,j}$\u3002\u53cd\u590d\u64cd\u4f5c\u4f7f\u5f97\u4e0d\u518d\u4ea7\u751f\u66f4\u65b0\u5373\u53ef\u3002\n\n\n## \u53c2\u8003\u4ee3\u7801\n\n```\n#include<bits/stdc++.h>\n#define up(l,r,i) for(int i=l;i<=r;i++)\n#define dn(l,r,i) for(int i=l;i>=r;i--)\nusing namespace std;\n\ntypedef long long LL;\nconst int INF =2147483647;\nint qread(){\n    int w=1,c,ret;\n    while((c=getchar())> '9'||c< '0')\n    w=(c=='-'?-1:1); ret=c-'0';\n    while((c=getchar())>='0'&&c<='9')\n    ret=ret*10+c-'0';\n    return ret*w;\n}\nconst int MAXN =100+3;\nint n,m=100;\nint P[MAXN][MAXN],Q[MAXN][MAXN]; bool C[MAXN][MAXN];\nint main(){\n    n=qread(); up(1,n,i){\n        int u=qread(),v=qread(),p=qread();\n        P[u][v]+=p;\n    }\n    up(1,m,i) C[i][i]=true;\n    up(1,m,T){\n        memset(Q,0,sizeof(Q));\n        up(1,m,i) up(1,m,j) if(C[i][j]) up(1,m,k) Q[i][k]+=P[j][k];\n        up(1,m,i) up(1,m,j) if(Q[i][j]>50) C[i][j]=true;\n    }\n    up(1,m,i) up(1,m,j) if(i!=j&&C[i][j]) printf(\"%d %d\\n\",i,j);\n    return 0;\n}\n```",
        "postTime": 1582544165,
        "uid": 68344,
        "name": "\u79bb\u6563\u5c0f\u6ce2\u53d8\u6362\u00b0",
        "ccfLevel": 9,
        "title": "\u3010\u9898\u89e3\u3011\u3010P1475 \u63a7\u5236\u516c\u53f8\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\n## \u4e00\u4e2a\u516c\u53f8\u60f3\u8981\u901a\u8fc7\u4ed6\u63a7\u5236\u7684\u516c\u53f8\u6765\u63a7\u5236\u5176\u4ed6\u516c\u53f8\u7684\u524d\u63d0\u662f\u4ed6\u6709\u63a7\u5236\u4e86\u7684\u516c\u53f8\n\u8fd9\u867d\u7136\u662f\u53e5\u5e9f\u8bdd\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff1a\n## \u53ef\u4ee5\u5148\u5224\u65ad\u67d0\u516c\u53f8\u76f4\u63a5\u63a7\u5236\u7684\u516c\u53f8\uff0c\u518d\u8003\u8651\u5176\u4ed6\u516c\u53f8\u3002\n\u6240\u4ee5\u5148\u4ee5\u6bcf\u4e2a\u516c\u53f8\u4e3a\u57fa\u51c6\u70b9\u51fa\u53d1\uff0c\u9047\u5230\u80fd\u63a7\u5236\u7684\u516c\u53f8\u5c31\u8fde\u8d77\u6765\uff0c\u5bf9\u5b83\u638c\u63a7\u80a1\u6743\u7684\u516c\u53f8\u8fdb\u884c\u641c\u7d22\uff0c\u7ed3\u679c\u7d2f\u52a0\u5230\u4ed6\u7684\u7236\u4eb2\uff08\u4e5f\u5c31\u662f\u63a7\u5236\u5b83\u7684\u516c\u53f8\u4e2d\uff09\uff0c\u76f4\u81f3\u5728\u52a0\u4e86\u4e00\u6b21\u540e\u53d1\u73b0\u8be5\u516c\u53f8\u5bf9\u521a\u521a\u83b7\u53d6\u80a1\u6743\u7684\u516c\u53f8\u7684\u80a1\u6743\u8fbe\u5230\u4e8650%\u4ee5\u4e0a\uff0c\u5c31\u53ef\u4ee5\u5bf9\u4ed6\u7ee7\u7eed\u641c\u7d22\n\n~~\u8fd9\u4e0d\u5c31\u662fdfs\u5417~~\n\n\u54e6\uff0c\u5bf9\u4e86\uff0c\u53ef\u80fd\u6709\u73af\u7684\u5b58\u5728\uff0c\u6240\u4ee5\u5bf9\u4e8e\u5df2\u7ecf\u63a7\u5236\u7684\u516c\u53f8\u5c31\u4e0d\u8981\u518d\u641c\u4e86\uff0c\u56e0\u4e3a\u4f60\u63a7\u5236\u5b83\u7684\u90a3\u4e00\u523b\u5c31\u5bf9\u4ed6\u641c\u7d22\u8fc7\u4e86\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n\n```cpp\n#include <iostream>\n\nusing namespace std;\n\nint a[120][120],b[120][120],ak[120][120],a0[120],i,j,k,o,p,q,m;//ak\u662f\u4e13\u95e8\u7528\u6765\u6807\u8bb0\u7684\uff0c\u76d1\u6d4b\u6bcf\u4e2a\u516c\u53f8\u5206\u522b\u638c\u63e1\u4e86\u54ea\u4e9b\u516c\u53f8\u7684\u80a1\u6743\u6765\u63d0\u9ad8\u67e5\u627e\u6548\u7387\n//b\u7528\u6765\u6807\u8bb0\u5df2\u7ecf\u63a7\u5236\u7684\u516c\u53f8\u6765\u907f\u514d\u6b7b\u5faa\u73af\n//a\u7528\u6765\u6807\u8bb0\u516c\u53f8\u4e4b\u95f4\u638c\u63e1\u7684\u80a1\u6743\u6570,\u901a\u8fc7\u7d2f\u52a0\u5b9e\u73b0\u67e5\u627e \n//a0\u4e13\u95e8\u6807\u8bb0\u6bcf\u4e2a\u516c\u53f8\u638c\u63e1\u4e86\u591a\u5c11\u516c\u53f8\u7684\u80a1\u6743 \nint fh;//\u6ca1\u6709\u8fd4\u56de\u503c\u4e5f\u7ed9\u4ed6\u5b89\u4e2a\u8fd4\u56de\u503c \n\nint search(int x,int y){\n\tfor(int w=1;w<=a0[y];w++)\n\t{\n\t\ta[x][ak[y][w]]+=a[y][ak[y][w]];\n\t\tif(a[x][ak[y][w]]>=50 && b[x][ak[y][w]]!=1)\n\t\t{\n\t\t\tb[x][ak[y][w]]=1;\n\t\t\tfh=search(x,ak[y][w]);\n\t\t}\n\t}\n\treturn 0;\n}\n\nint main(int argc, char** argv) {\n\tcin>>m;\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tcin>>o>>p>>j;\n\t\ta[o][p]=j;\n\t\tak[o][++a0[o]]=p;\n\t}\n\n\tfor(i=1;i<=100;i++)\n\t{\n\t\tb[i][i]=1;\n\t\tif(ak[i][1]!=0)\n\t\tfor(j=1;j<=a0[i];j++)\n\t\t{\n\t\t\tif(a[i][ak[i][j]]>=50 && b[i][ak[i][j]]!=1 && i!=ak[i][j])//\u53bb\u91cd\n\t\t\t{\n\t\t\t\tb[i][ak[i][j]]=1;\n\t\t\t\tfh=search(i,ak[i][j]);\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=1;i<=100;i++)\n\t\tfor(j=1;j<=100;j++)\n\t\tif(b[i][j]==1 && i!=j)\n\t\t{\n\t\t\tcout<<i<<\" \"<<j<<\"\\n\";\n\t\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1553339117,
        "uid": 55357,
        "name": "Thaumaturge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1475 \u3010\u63a7\u5236\u516c\u53f8 Controlling Companies\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u53ef\u4ee5\u7528BFS\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fdbfs\u4e00\u6b21\uff0c\u5165\u961f\u6761\u4ef6\u662f\u8fd9\u4e2a\u8282\u70b9\u662f\u5f53\u524d\u6b63\u5728\u8ba1\u7b97\u8282\u70b9\u7684\u5b50\u516c\u53f8\uff0c\u6216\u8005\u8bf4\u8fd9\u4e2a\u8282\u70b9\u88ab\u5f53\u524d\u8282\u70b9\u63a7\u5236\u4e86,\u6bcf\u4e2a\u8282\u70b9\u53ea\u5165\u961f\u4e00\u6b21\u5373\u53ef\uff0c\u8bdd\u4e0d\u591a\u8bf4\uff0c\u770b\u4ee3\u7801\n```cpp\n/*\nID: z8493331\nLANG: C++\nTASK: concom\n*/\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <queue>\nusing std::queue;\nqueue<int> q;\nbool con[200][200];\nstruct Edge{\n\tint from,to,val,next;\n\tvoid init(int f,int t,int v,int pos[],int cnt){\n\t\tfrom=f;to=t;val=v;\n\t\tnext=pos[from];\n\t\tpos[from]=cnt;\n\t}\n};\nEdge edges[10005];\nint pos[105],cnt=0;\nint n;\nvoid init(){\n\tscanf(\"%d\",&n);\n\tmemset(con,0,sizeof(con));\n\tmemset(edges,0,sizeof(edges));\n\tfor(int i=1;i<=n;i++){\n\t\tint x,y,p;\n\t\tscanf(\"%d%d%d\\n\",&x,&y,&p);\n\t\tcnt++;\n\t\tedges[cnt].init(x,y,p,pos,cnt);\n\t}\n}\nint p_cnt[2000];\nvoid bfs(int s){\n\tmemset(p_cnt,0,sizeof(p_cnt));\n\twhile(!q.empty()) q.pop();\n\tq.push(s);\n\twhile(!q.empty()){\n\t\tint x=pos[q.front()];\n\t\tq.pop();\n\t\tfor(;x;x=edges[x].next){\n\t\t\tp_cnt[edges[x].to]+=edges[x].val;\n\t\t\tif((p_cnt[edges[x].to]>50)&&(!con[s][edges[x].to])){\n\t\t\t\tq.push(edges[x].to);\n\t\t\t\tcon[s][edges[x].to]=true;\n\t\t\t}\n\t\t}\n\t}\n}\nvoid process(){\n\tfor(int i=1;i<=100;i++){\n\t\tbfs(i);\n\t}\n\tfor(int i=1;i<=100;i++){\n\t\tfor(int j=1;j<=100;j++){\n\t\t\tif(i==j)\n\t\t\t\tcontinue;\n\t\t\tif(con[i][j])\n\t\t\t\tprintf(\"%d %d\\n\",i,j);\n\t\t}\n\t}\n}\nint main(){\n\tfreopen(\"concom.in\",\"r\",stdin);\n\tfreopen(\"concom.out\",\"w\",stdout);\n\tinit();\n\tprocess();\n\treturn 0;\n}\n```",
        "postTime": 1520410496,
        "uid": 20342,
        "name": "Sarah",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1475 \u3010\u63a7\u5236\u516c\u53f8 Controlling Companies\u3011"
    },
    {
        "content": "**\u8fd9\u9898\u5982\u679c\u4e0d\u52a0\u601d\u8003\u76f4\u63a5\u7528 dfs \u4e00\u5b9a\u4f1a\u9519\u3002**\n\n\u4e3a\u4ec0\u4e48\u4f1a\u8fd9\u6837\u5462\uff0c\u4e8e\u662f\u6211\u4eec\u753b\u4e86\u5f20\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/fdwgsggn.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u8fd9\u5f20\u56fe\u91cc\u8282\u70b9 $1$ \u63a7\u5236\u4e86\u8282\u70b9 $2,6$\uff0c\u8282\u70b9 $2,6$ \u53c8\u540c\u65f6\u63a7\u5236\u4e86\u8282\u70b9 $3$\uff0c\u540c\u65f6\u8282\u70b9 $3$ \u6709\u8282\u70b9 $5$ \u7684 $30\\%$ \u80a1\u7968\uff0c\u663e\u7136\u8282\u70b9 $1$ \u662f\u65e0\u6cd5\u63a7\u5236\u8282\u70b9 $5$ \u7684\uff0c\u4f46\u6211\u4eec\u7684dfs\u7a0b\u5e8f\u4f1a\u5c06\u8282\u70b9 $3$ \u6709\u8282\u70b9 $5$ \u7684 $30\\%$ \u80a1\u7968\u540c\u65f6\u4f20\u9012\u7ed9\u8282\u70b9 $2,6$ \u8ba9\u8282\u70b9 $1$ \u6709 $60\\%$\uff0c\u56e0\u6b64\u51fa\u9519\u3002\n\n\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u76f4\u63a5\u7528 dfs \u4f1a**\u91cd\u590d\u7edf\u8ba1**\u3002\n\n\u4e8e\u662f\u6211\u4eec\u8003\u8651\u6362\u4e00\u79cd dfs \u7684\u7b56\u7565\uff0c\u5148\u8003\u8651\u80fd\u76f4\u63a5\u63a7\u5236\u7684\u516c\u53f8\uff0c\u7136\u540e\u6253\u4e0a\u6807\u8bb0\uff0c\u9632\u6b62\u518d\u88ab\u7edf\u8ba1\uff0c\u4e8e\u662f\u6211\u4eec\u5c31 AC \u4e86\u8fd9\u9053\u9898\u3002\n\n\u65b9\u6cd5\u6162\u4e86\u70b9\uff0c\u4f46\u6613\u7406\u89e3\u5f88\u591a\u3002\n```\n#include<iostream>\n#include<vector>\nusing namespace std;\nint G[200][200],control[1000][1000];\n//G\u4ee3\u8868\u521d\u59cb\u60c5\u51b5\uff0ccontrol[i][j]\u4ee3\u8868i\u5b9e\u9645\u4e0a\u6709j\u7684control[i][j]\u7684\u80a1\u7968\nbool vis[1000][1000];\nvoid dfs(int u,int v){\n\tvis[u][v]=1;\n\tfor(int i=1;i<=100;++i){\n\t\tcontrol[u][i]+=G[v][i];\n\t\tif(control[u][i]>50&&!vis[u][i])\n\t\t\tdfs(u,i);\n\t}\n}\nint main(){\n\tint n;\n\tcin>>n;\n\tfor(int i=0;i<n;++i)\n\t\tint u,v,dis;\n\t\tcin>>u>>v>>dis;\n\t\tG[u][v]=dis;\n\t\tcontrol[u][v]=dis;\n\t}\n\tfor(int i=1;i<=100;++i)\n\t\tfor(int j=1;j<=100;++j)\n\t\t\tif(i!=j&&G[i][j]>50&&!vis[i][j])//\u5982\u679c\u8d85\u8fc750\u624d\u6709\u53ef\u80fd\u66f4\u65b0\n\t\t\t\tdfs(i,j);\n\tfor(int i=1;i<=100;++i)\n\t\tfor(int j=1;j<=100;++j)\n\t\t\tif(i!=j&&control[i][j]>50)cout<<i<<\" \"<<j<<endl;\n\treturn 0;\n} \n```\n\n\u849f\u84bb\u7b2c\u4e00\u6b21\u4ea4\u9898\u89e3\uff0c\u6709\u9519\u8bef\u8bf7\u6307\u51fa\u54e6",
        "postTime": 1615381793,
        "uid": 164302,
        "name": "endless_loop",
        "ccfLevel": 0,
        "title": "P1475\u9898\u89e3"
    },
    {
        "content": "\u539f\u9898\u6233\u8fd9\u513f\u2014\u2014>[\u539f\u9898](https://www.luogu.com.cn/problem/P1475)\n\n\u9898\u89e3\u6765\u6e90\u6233\u8fd9\u513f\u2014\u2014>[\u9898\u89e3](https://blog.csdn.net/Akatsuki__Itachi/article/details/82503438)\n\n\u7c7b\u4f3cFloyd\u627e\u53ef\u8fbe\u8def\u5f84\uff0c\u4e0d\u8fc7\u8fd9\u9898\u6709\u73af\uff0c\u6240\u4ee5\u5728Floyd\u5916\u9762\u518d\u52a0\u4e00\u4e2a\u5faa\u73af\uff0c\u5f53\u4e0d\u518d\u6709\u70b9\u66f4\u65b0\u7684\u65f6\u5019\uff0c\u5c31\u53ef\u4ee5\u8df3\u51fa\u4e86\u3002\n\n\n```cpp\n\n#include<iostream>\n\n#include<cstdio>\n\n#include<cstring>\n\n#include<cmath>\n\n#include<algorithm>\n\n#include<queue>\n\n#define memset(a,v)  memset(a,v,sizeof(a))\n\n#define eps 1.0E-8\n\nusing namespace std;\n\nconst int MAXL(100);\n\nconst int INF(0x3f3f3f3f);\n\nconst int mod(1e9+7);\n\ntypedef long long int LL;\n\nint a[MAXL+50][MAXL+50];\n\nbool is[MAXL+50][MAXL+50];//\u5224\u65adi\u662f\u5426\u5305\u542bj\n\nint main()\n\n{\n\n    int n;\n\n    cin>>n;\n\n    for(int i=1; i<=n; i++)\n\n    {\n\n        int x,y,z;\n\n        cin>>x>>y>>z;\n\n        a[x][y]=z;\n\n        if(z>50)\n\n            is[x][y]=true;\n\n    }\n\n    while(true)\n\n    {\n\n        int loop=0;\n\n        for(int i=1; i<=100; i++)\n\n        {\n\n            for(int j=1; j<=100; j++)\n\n            {\n\n                if(i==j) continue;\n\n                if(!is[i][j])\n\n                {\n\n                    int temp=0;\n\n                    for(int k=1; k<=100; k++)\n\n                        if(is[i][k]!=0||i==k) temp+=a[k][j];//i==k\u7684\u65f6\u5019\u4ee3\u8868\u8fd8\u8981\u627e\u81ea\u5df1\u6240\u542b\u7684\u5b50\u516c\u53f8\u3002\n\n                    if(!is[i][j]&&temp>50)\n\n                        loop=1,is[i][j]=true;\n\n                }\n\n \n\n            }\n\n        }\n\n        if(!loop) break;//\u5f53\u6ca1\u6709\u70b9\u53ef\u4ee5\u66f4\u65b0\u7684\u65f6\u5019\uff0c\u8df3\u51fa\u5373\u53ef\u3002\n\n    }\n\n    for(int i=1; i<=100; i++)\n\n        for(int j=1; j<=100; j++)\n\n            if(i!=j&&is[i][j]==true)\n\n                cout<<i<<\" \"<<j<<endl;\n\n}\n\n \n\n```\n",
        "postTime": 1581675754,
        "uid": 122419,
        "name": "\u4f60\u7956\u5976\u6211\u5f88ok",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1475 \u3010\u63a7\u5236\u516c\u53f8 Controlling Companies\u3011"
    },
    {
        "content": "## ***\u63a7\u5236\u516c\u53f8***\n**\u9898\u76ee\u63cf\u8ff0**\n\u6709\u4e9b\u516c\u53f8\u662f\u5176\u4ed6\u516c\u53f8\u7684\u90e8\u5206\u62e5\u6709\u8005\uff0c\u56e0\u4e3a\u4ed6\u4eec\u83b7\u5f97\u4e86\u5176\u4ed6\u516c\u53f8\u53d1\u884c\u7684\u80a1\u7968\u7684\u4e00\u90e8\u5206\u3002(\u6b64\u5904\u7565\u53bb\u4e00\u53e5\u5e9f\u8bdd\uff09\u636e\u8bf4\uff0c\u5982\u679c\u81f3\u5c11\u6ee1\u8db3\u4e86\u4ee5\u4e0b\u4e09\u4e2a\u6761\u4ef6\u4e4b\u4e00\uff0c\u516c\u53f8A\u5c31\u53ef\u4ee5\u63a7\u5236\u516c\u53f8B\u4e86\uff1a\n\u516c\u53f8A = \u516c\u53f8B\u3002\n\u516c\u53f8A\u62e5\u6709\u5927\u4e8e50%\u7684\u516c\u53f8B\u7684\u80a1\u7968\u3002\n\u516c\u53f8A\u63a7\u5236K(K >= 1)\u4e2a\u516c\u53f8\uff0c\u8bb0\u4e3aC1, ..., CK\uff0c\u6bcf\u4e2a\u516c\u53f8Ci\u62e5\u6709xi%\u7684\u516c\u53f8B\u7684\u80a1\u7968\uff0c\u5e76\u4e14x1+ .... + xK > 50%\u3002\n\u7ed9\u4f60\u4e00\u4e2a\u8868\uff0c\u6bcf\u884c\u5305\u62ec\u4e09\u4e2a\u6570(i,j,p)\uff1b\u8868\u660e\u516c\u53f8i\u4eab\u6709\u516c\u53f8j\u7684p%\u7684\u80a1\u7968\u3002\u8ba1\u7b97\u6240\u6709\u7684\u6570\u5bf9(h,s)\uff0c\u8868\u660e\u516c\u53f8h\u63a7\u5236\u516c\u53f8s\u3002\u81f3\u591a\u6709100\u4e2a\u516c\u53f8\u3002\n\u5199\u4e00\u4e2a\u7a0b\u5e8f\u8bfb\u5165N\u7ec4\u6570(i,j,p)\uff0ci,j\u548cp\u662f\u90fd\u5728\u8303\u56f4(1..100)\u7684\u6b63\u6574\u6570\uff0c\u5e76\u4e14\u627e\u51fa\u6240\u6709\u7684\u6570\u5bf9(h,s)\uff0c\u4f7f\u5f97\u516c\u53f8h\u63a7\u5236\u516c\u53f8s\u3002\n**\u8f93\u5165\u683c\u5f0f**\n\u7b2c\u4e00\u884c\uff1a N\uff0c\u8868\u660e\u63a5\u4e0b\u6765\u4e09\u4e2a\u6570\u7684\u6570\u91cf\uff0c\u5373(i,j,p)\u7684\u6570\u91cf\u3002\n\u7b2c\u4e8c\u884c\u5230\u7b2cN+1\u884c\uff1a \u6bcf\u884c\u4e09\u4e2a\u6574\u6570\u4f5c\u4e3a\u4e00\u4e2a\u4e09\u5bf9\u6570(i,j,p)\uff0c\u8868\u793ai\u516c\u53f8\u62e5\u6709j\u516c\u53f8 p%\u7684\u80a1\u4efd\u3002\n**\u8f93\u51fa\u683c\u5f0f**\n\u8f93\u51fa\u96f6\u4e2a\u6216\u66f4\u591a\u4e2a\u7684\u63a7\u5236\u5176\u4ed6\u516c\u53f8\u7684\u516c\u53f8\u3002\u6bcf\u884c\u5305\u62ec\u4e24\u4e2a\u6574\u6570A\u3001B,\u8868\u793aA\u516c\u53f8\u63a7\u5236\u4e86B\u516c\u53f8\u3002\u5c06\u8f93\u51fa\u7684\u6570\u5bf9\u4ee5\u5347\u5e8f\u6392\u5217\u3002\n\u8bf7\u4e0d\u8981\u8f93\u51fa\u63a7\u5236\u81ea\u5df1\u7684\u516c\u53f8(\u5e94\u8be5\u662f\u4e0d\u8f93\u51fa\u81ea\u5df1\uff0c\u4e92\u76f8\u63a7\u5236\u7684\u516c\u53f8\u8fd8\u662f\u8981\u8f93\u51fa\u7684\uff09\u3002\n**\u8f93\u5165\u8f93\u51fa\u6837\u4f8b**\n**\u8f93\u5165**\n3\n1 2 80\n2 3 80\n3 1 20\n**\u8f93\u51fa** \n1 2\n1 3\n2 3\n**\u5206\u6790**\n\u8fd9\u9898\u6211\u4eec\u76f4\u63a5\u7528\u6df1\u641c\uff08DFS\uff09\n\u641c\u4e0b\u53bb\u5c31\u884c\u4e86\n**\u6ce8\u610f\u81ea\u5df1\u867d\u7136\u53ef\u4ee5\u63a7\u5236\u81ea\u5df1\uff0c\u4f46\u4e0d\u80fd\u8f93\u51fa\u6765**\n**AC\u4ee3\u7801**\n```cpp\n#include<iostream>\n#include<cstring> \nusing namespace std;\nint m,n,x,y,k,a[105][105],f[105][105],b[105],c[105];\nvoid dfs(int x,int y)\n{\n\tif(c[y]==1)return;//\u5224\u65ad\u662f\u5426\u641c\u8fc7\n\tc[y]=1;//\u6807\u8bb0 \n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tb[i]+=a[y][i];//\u52a0\u80a1\u4efd\n\t\tif(b[i]>50)//\u5927\u4e8e50\uff0c\u4e0d\u662f\u5927\u4e8e\u7b49\u4e8e50\n\t\t{\n\t\t\tf[x][i]=1;//\u8bf4\u660e\u53ef\u4ee5\u63a7\u5236\n\t\t\tdfs(x,i);//\u641c\u4e0b\u53bb\n\t\t}\n\t}\n}\nint main()\n{\n\tcin>>m;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcin>>x>>y>>k;\n\t\ta[x][y]=k;\n\t\tn=max(n,max(x,y));//\u8fd9\u5e76\u4e0d\u662f\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tmemset(b,0,sizeof(b));//\u6e05\u7a7a\n\t\tmemset(c,0,sizeof(c));\n\t\tdfs(i,i);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t for(int j=1;j<=n;j++)\n\t  if(f[i][j]&&i!=j)cout<<i<<' '<<j<<endl;//\u5224\u65ad\u8f93\u51fa\n}\n```\n## ***\u8c22\u8c22***\n",
        "postTime": 1576933562,
        "uid": 63931,
        "name": "LikeJ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1475 \u3010\u63a7\u5236\u516c\u53f8 Controlling Companies\u3011"
    },
    {
        "content": "**\u672c\u4eba\u849f\u84bb\uff0c\u4e0d\u8db3\u4e4b\u5904\u671b\u5305\u5bb9**\n\n\u6570\u636e\u6bd4\u8f83\u6c34\uff0c\u6700\u5927\u7684\u516c\u53f8\u7f16\u53f7\u8f83\u5c0f\uff0c\u56e0\u6b64\u53ef\u4ee5\u5f00\u4e24\u4e2a\u4e00\u7ef4\u6570\u7ec4\uff0c\u4e00\u4e2a\u6807\u8bb0\uff0c\u4e00\u4e2a\u8ba1\u6570\uff0c\u7528dfs\u82df\u8fc7\n\n\u5949\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n\nusing namespace std;\nint n,f[1005][1005],mx,x,y,k,sum[1005],check[1005];\n//f[i][j]\u8bb0\u5f55\u516c\u53f8i\u62e5\u6709\u516c\u53f8j\u7684\u80a1\u7968\nvoid wjl(int now)\n{\n    if(check[now]) return;\n    else check[now]=1;//\u6807\u8bb0\u627e\u8fc7\n    for(int i=1;i<=mx;i++)\n    {\n        sum[i]+=f[now][i];\n        if(sum[i]>50)wjl(i);\n\t\t//\u516c\u53f8now\u63a7\u5236\u516c\u53f8i\uff0c\u516c\u53f8now\u62e5\u6709\u6bcf\u4e00\u4e2a\u516c\u53f8\u7684\u80a1\u7968\u8981\u52a0\u4e0a\u516c\u53f8i\u62e5\u6709\u6240\u5bf9\u5e94\u516c\u53f8\u7684\u80a1\u7968\n    }\n}\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;i++)\n    {\n        cin>>x>>y>>k;\n        f[x][y]=k;\n        mx=max(mx,max(x,y));//\u8bb0\u5f55\u6700\u5927\u7684\u516c\u53f8\u7f16\u53f7\n    }\n    for(int i=1;i<=mx;i++)//\u63a7\u5236\u516c\u53f8\u5347\u5e8f\u6392\u5217\uff0c1\u5230mx\n    {\n    \tmemset(sum,0,sizeof(sum));//\u6e05\u96f6\u6570\u7ec4sum\n        memset(check,0,sizeof(check));//\u6e05\u96f6\u6570\u7ec4check\n        wjl(i);\n        for(int j=1;j<=mx;j++)//\u88ab\u63a7\u5236\u516c\u53f8\u5347\u5e8f\u6392\u5217\uff0c1\u5230mx\n        {\n        \tif(sum[j]>50&&i!=j) cout<<i<<\" \"<<j<<endl;//\u516c\u53f8i\u63a7\u5236\u516c\u53f8j\uff0c\u8f93\u51fa\u6570\u5bf9(i,j)\n        }\n    }\n    return 0;\n}\n```\n~~\u7ba1\u7406\u5458\u5927\u5927\u7ed9\u8fc7\u554a\u554a\u554a~~",
        "postTime": 1552287750,
        "uid": 80827,
        "name": "Jasonggg15",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1475 \u3010\u63a7\u5236\u516c\u53f8 Controlling Companies\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u6837\u80fd\u591f\u901a\u8fc7\u4e2d\u95f4\u70b9\u66f4\u65b0\u72b6\u6001\u7684\u9898\u53ef\u4ee5\u8003\u8651Floyd\u7b97\u6cd5\n\n\u4f46\u8981\u5199\u6210\u9012\u5f52\u7684\u5f62\u5f0f\uff08\u56e0\u4e3a\u6709\u73af\uff09\n\n\n\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\nint a[105][105]={0};\nbool con[105][105]={0};\nint n,m=0;\nvoid dfs(int i,int j)\n{\n    if (con[i][j]) return;    \n    con[i][j]=true;\n    for (int k=1;k<=m;k++)\n    {\n        a[i][k]+=a[j][k];\n        if (a[i][k]>50) dfs(i,k); \n    }\n}\nint main()\n{\n    int u,v,w;\n    cin>>n;\n    for (int i=1;i<=n;i++)\n    {\n        cin>>u>>v>>w;\n        a[u][v]=w;\n        if (u>m) m=u;\n        if (v>m) m=v;\n    }\n    for (int i=1;i<=m;i++) \n        for (int j=1;j<=m;j++)\n        if (a[i][j]>50) dfs(i,j);\n    for (int i=1;i<=m;i++)\n        for (int j=1;j<=m;j++)\n        if (i!=j && con[i][j]) \n        printf(\"%d %d\\n\",i,j);\n    return 0;\n}\n```",
        "postTime": 1477958650,
        "uid": 8629,
        "name": "ws_fuweidong",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1475 \u3010\u63a7\u5236\u516c\u53f8 Controlling Companies\u3011"
    },
    {
        "content": "\u8fd9\u4e00\u4e2a\u9898\u76ee\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u56fe\u6765\u4ee3\u8868\u63a7\u80a1\u5173\u7cfb\uff0c\u5982\u679c\u6709\u4e00\u6761\u8fb9\u662f\u4ece $a$ \u70b9\u8fde\u5411 $b$ \u70b9\u7684\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u8ba4\u4e3a\uff0c$a$ \u516c\u53f8\u88ab $b$ \u516c\u53f8\u63a7\u5236\u3002\n\n\u5982\u679c $a$ \u516c\u53f8\u88ab $b$ \u516c\u53f8\u63a7\u5236\uff0c\u800c\u4e14 $b$ \u516c\u53f8\u88ab $c$ \u516c\u53f8\u63a7\u5236\uff0c\u90a3\u4e48\u5c31\u8bf4\u660e\uff1a$a$ \u516c\u53f8\u88ab $c$ \u516c\u53f8\u63a7\u5236\u4e86\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u4e2a\u9898\u76ee\u53ef\u4ee5\u4f7f\u7528\u5e76\u67e5\u96c6\u6c42\u89e3\u4e86\u3002",
        "postTime": 1637815003,
        "uid": 378467,
        "name": "willem248",
        "ccfLevel": 5,
        "title": "P1475"
    },
    {
        "content": "\u8fd9\u9053\u9898\u53ef\u4ee5\u7528\u56fe\u8bba\u53bb\u505a\n\n\u89c2\u5bdf\u4e00\u4e0b\u6837\u4f8b\uff1a\n```cpp\n3\n1 2 80\n2 3 80\n3 1 20\n```\n\u4e0d\u96be\u53d1\u73b0\u5176\u5b9e\u5b83\u6709\u70b9\u50cf\u56fe\u8bba\u4e2d\u7684\u52a0\u8fb9\uff0c\u8fb9\u6743\u4e3a\u7b2c\u4e09\u4e2a\u6570\n\n\u7136\u540e\u8fd9\u9053\u9898\u7684n<=100\n\n\u7136\u540e\u53ef\u4ee5\u901a\u8fc7\u90bb\u63a5\u77e9\u9635\u5b58\u56fe\uff0c\u7136\u540e\u7528floyd\u76f4\u63a5\u53bb\u6c42\u6700\u77ed\u8def\uff0c\u7136\u540e\u5982\u679c\u6709\u4e00\u6761\u6709\u5411\u8fb9\u7684\u8fb9\u6743\u5927\u4e8e50\uff0c\u5c31\u8f93\u51fa\uff0c\u5e76\u628a\u7f16\u53f7\u6539\u53d8\uff0c\u7528\u5e76\u67e5\u96c6\u601d\u60f3\uff0c\u628a\u4e24\u4e2a\u516c\u53f8\u5408\u5e76\u5728\u4e00\u8d77\u5c31\u597d\u4e86",
        "postTime": 1584283754,
        "uid": 219033,
        "name": "Snow_Dreams",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1475 \u3010[USACO2.3]\u63a7\u5236\u516c\u53f8 Controlling Companies\u3011"
    }
]