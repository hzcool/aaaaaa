[
    {
        "content": "\u6700\u8fd1\u4e00\u76f4\u88ab\u673a\u623f\u6559\u7ec3\u903c\u7740\u505a\u591a\u9879\u5f0f\uff0c\u88ab\u641e\u81ea\u95ed\uff0c\u6240\u4ee5\u505a\u4e00\u505a\u6c34\u9898\u3002\n\n~~\u7ed3\u679c\u4e5f\u88ab\u6c34\u9898\u641e\u81ea\u95ed\u4e86~~\n\nQAQ\n\n\u9996\u5148\u5148\u770b\u4e00\u6bb5\u672c\u9898\u6211\u539f\u6765\u7684\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<queue>\nusing namespace std;\nint n;\nqueue<int> q[1000040]; \nbool rs[1040];\nint spt[1040];\nint f[1040][1040];\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d%d\",&spt[i],&f[i][0]);\n\t\tfor(int j=1;j<=f[i][0];j++) scanf(\"%d\",&f[i][j]);\n\t}\n\trs[1]=1; \n\tq[spt[1]].push(1);\n\tfor(int i=1;n;i++){\n\t\twhile(!q[i].empty()){\n\t\t\tn-=1;\n\t\t\tint now=q[i].front();\n\t\t\tfor(int j=1;j<=f[now][0];j++){\n\t\t\t\tif(rs[f[now][j]]) continue;\n\t\t\t\tq[i+spt[f[now][j]]].push(f[now][j]);\n\t\t\t\trs[f[now][j]]=1;\n\t\t\t}\n\t\t\tq[i].pop();\n\t\t}\n\t\tif(n==0){\n\t\t\tprintf(\"%d\\n\",i);\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\u601d\u8def\u6e05\u6670\uff0c\u5c31\u662f\u6bcf\u4e2a\u65f6\u95f4\u5f00\u4e2aqueue\u5b58\u50a8\u8be5\u65f6\u95f4\u5185\u5230\u8fbe\u7ec8\u70b9\u725b\u7684\u7f16\u53f7\u3002\u6837\u4f8b\u66f4\u662f\u76f4\u63a5\u6c34\u8fc7\u53bb\u2026\u2026\u2026\u2026\n\n\u53ef\u662f\u4e00\u4ea4\u4e0a\u53bb\u5168\u90fdMLE\u4e86\uff0c\u56fe\u7247\u592a\u8fc7\u6b8b\u5fcd\uff0c\u5c31\u4e0d\u653e\u4e86\u3002\n\n\u663e\u800c\u6613\u89c1\u6bcf\u4e2a\u65f6\u95f4\u5f00\u4e2a\u961f\u5217\u8fd9\u7a7a\u95f4\u5fc5\u70b8\u2026\u2026(\u849f\u84bb\u7684\u6211\u5f00\u59cb\u6ca1\u60f3\u5230\u2026\u2026\uff09\n\n\u56e0\u6b64\u6211\u4eec\u8be5\u5982\u4f55\u4f18\u5316\u5462\uff0c\u8fd9\u5c31\u662f\u4f18\u5148\u961f\u5217\u767b\u573a\u7684\u65f6\u5019\u4e86\u3002\n\n\u8fd9\u91cc\u7528\u5c0f\u6839\u5806\u5957\u4e2a\u4e8c\u5143\u7ec4\uff0c\u7b2c\u4e00\u5143\u7d20\u5b58\u50a8\u8be5\u7f16\u53f7\u7684\u5976\u725b\u5230\u7ec8\u70b9\u7684\u65f6\u95f4\uff0c\u7b2c\u4e8c\u4e2a\u5143\u7d20\u5b58\u50a8\u8be5\u725b\u7684\u7f16\u53f7\u3002\n\n\u4ee5\u540e\u6bcf\u6b21\u628a\u961f\u5934\u53d6\u51fa\uff0c\u5c06\u8fd9\u5934\u725b\u8be5\u901a\u77e5\u7684\u725b\u513f\u5168\u90fd\u626b\u4e00\u904d\uff0c\u6ca1\u901a\u77e5\u8fc7\u7684\u5c31\u8ba9\u4ed6\u7b56\u725b\u5954\u817e\uff0c\u5411\u5c0f\u6839\u5806\u91cc\u52a0\u5165\u4e00\u4e2a\u6210\u5458\uff0c\u7b2c\u4e00\u5143\u7d20\u4e3a\u5f53\u524d\u65f6\u95f4+\u8be5\u725b\u8dd1\u4e00\u5708\u7684\u65f6\u95f4\uff0c\u7b2c\u4e8c\u5143\u7d20\u5c31\u662f\u8be5\u725b\u7684\u7f16\u53f7\u3002\n\n\u6700\u540e\u4e00\u6b21\u8981\u6ce8\u610f\uff0c\u56e0\u4e3a\u5c31\u5269\u6700\u540e\u4e00\u5934\u725b\uff0c\u5176\u4ed6\u725b\u5168\u8dd1\u8fc7\u4e86\uff0c\u5f53\u6700\u540e\u4e00\u5934\u725b\u8dd1\u5b8c\u7684\u65f6\u5019\uff0c\u5f39\u51fa\uff0c\u6700\u540e\u961f\u5217\u4e3a\u7a7a\uff0c\u8f93\u51fa\u8be5\u725b\u8dd1\u5b8c\u7684\u65f6\u95f4.\n\n\u8be6\u89c1\u4ee3\u7801^-^\n```cpp\n#include<cstdio>\n#include<queue>\nusing namespace std;\nint n;\nbool rs[1040];\nint spt[1040];\nint f[1040][1040];\npriority_queue<pair<int,int> > q; \nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d%d\",&spt[i],&f[i][0]);\n\t\tfor(int j=1;j<=f[i][0];j++) scanf(\"%d\",&f[i][j]);\n\t}//\u8bfb\u5165 \n\trs[1]=1;//\u5bf9\u7b2c\u4e00\u5934\u725b\u6253\u6807\u8bb0 \n\tq.push(make_pair(-spt[1],1));//\u6ce8\u610f\uff0c\u56e0\u4e3a\u662fprioity_queue\u662f\u5927\u6839\u5806\uff0c\u52a0\u5165\u65f6\u95f4\u7684\u76f8\u53cd\u6570\u5373\u53ef\u5b9e\u73b0\u5c0f\u6839\u5806 \n\twhile(!q.empty()){\n\t\tpair<int,int> now=q.top();\n\t\tnow.first*=-1; //\u56e0\u4e3a\u4e4b\u524d\u52a0\u5165\u7684\u662f\u65f6\u95f4\u7684\u76f8\u53cd\u6570\uff0c\u6545\u8981\u53d8\u56de\u6765\u3002 \n\t\tfor(int j=1;j<=f[now.second][0];j++){ //\u679a\u4e3e\u5f53\u524d\u725b\u8981\u901a\u77e5\u7684\u6240\u6709\u725b\u3002 \n\t\t\tif(rs[f[now.second][j]]) continue; //\u5982\u679c\u5df2\u7ecf\u8dd1\u8fc7\u4e86\u5c31\u4e0d\u7528\u8dd1\u4e86\u3002 \n\t\t\tq.push(make_pair(-(now.first+spt[f[now.second][j]]),f[now.second][j])); //\u52a0\u5165\u961f\u5217\uff0c\u518d\u5f3a\u8c03\u4e00\u904d\uff0c\u65f6\u95f4\u8981\u662f\u76f8\u53cd\u6570\uff01\uff01! \n\t\t\trs[f[now.second][j]]=1; //\u5bf9\u8be5\u725b\u6253\u4e0a\u6807\u5fd7\uff0c\u5df2\u7ecf\u8dd1\u8fc7. \n\t\t}\n\t\tq.pop();\n\t\tif(q.empty()) printf(\"%d\\n\",now.first); //\u5982\u679c\u961f\u5217\u4e3a\u7a7a,\u5219\u6240\u6709\u725b\u90fd\u8dd1\u5b8c\u4e86\uff0c\u5219\u8f93\u51fa\u6700\u540e\u4e00\u5934\u725b\u8dd1\u5b8c\u7684\u65f6\u95f4 \n\t}\n\treturn 0;\n}\n```\n\u5199\u7684\u6bd4\u8f83\u4e11\uff0c\u591a\u89c1\u8c05\u54c8!\n",
        "postTime": 1582017694,
        "uid": 291139,
        "name": "TinG\u96ea\u4e4b\u4e0b",
        "ccfLevel": 5,
        "title": "P1882 \u63a5\u529b\u8d5b\u8dd1"
    },
    {
        "content": "## \u7b97\u6cd5\uff1a$\\text{STL}$\u5806\n- **\u524d\u8a00**\uff1a**\u6781\u529b\u5410\u69fd**\u8fd9\u9053\u9898\u7684\u63cf\u8ff0\uff08\u6bd4\u5982\u8bf4\u201c**\u6c14\u57ab\u7ebf**\u201d\u662f\u5565\u610f\u601d$QwQ$\uff09\n\n----------\n\n- \u8bf7\u6ce8\u610f\u8fd9\u53e5\u8bdd\uff1a\u201c**\u53ef\u80fd\u51fa\u73b0\u591a\u53ea\u5976\u725b\u901a\u77e5\u540c\u4e00\u53ea\u5976\u725b\u8d77\u8dd1\u7684\u60c5\u51b5\uff0c\u4f46\u662f\u6bcf\u4e00\u53ea\u5976\u725b\u53ea\u613f\u610f\u8dd1\u4e00\u5708\uff0c\u6240\u4ee5\u5b83\u88ab\u7b2c\u4e8c\u6b21\u53eb\u5230\u7684\u65f6\u5019\u5c31\u4e0d\u613f\u610f\u518d\u8dd1\u4e86\u3002**\u201d\uff0c\u8fd9\u53e5\u8bdd\u5c31\u544a\u8bc9\u6211\u4eec\uff0c\u5f53\u6709\u591a\u5934\u725b\u901a\u77e5\u4e00\u5934\u725b\u8dd1\u65f6\uff0c\u80af\u5b9a\u662f**\u603b\u7528\u65f6\u6700\u77ed**\u7684\u90a3\u5934\u725b\u5148\u901a\u77e5\u8fd9\u5934\u725b\u8dd1\uff0c~~\u81ea\u7136\u800c\u7136\u7684\u5c31\u60f3\u5230~~\uff0c\u6211\u4eec\u53ef\u4ee5\u7528$\\text{STL}$\u91cc\u9762\u7684**\u5806**\u6765\u7ef4\u62a4\uff0c\u5373**\u4f18\u5148\u961f\u5217**$\\text{priority\\_queue}$\u3002\n- \u90a3\u4e48\u5177\u4f53\u600e\u4e48\u505a\u5462\uff1f\u53ef\u4ee5\u7528\u4e00\u4e2a**\u7c7b\u4f3c\u4e8e**$\\text{BFS}$**\u7684\u65b9\u6cd5**\u89e3\u51b3\uff1a\n- $1.\\quad$\u5b9a\u4e49\u4e00\u4e2a\u5806$q$\uff0c\u5806\u91cc\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u662f\u4e00\u4e2a\u7ed3\u6784\u4f53$\\{id,t\\}$\uff0c\u5206\u522b\u4ee3\u8868\u8fd9\u662f\u7b2c$id$\u5934\u725b\uff0c\u5f53\u524d\u603b\u7528\u65f6\u4e3a$t$\uff1b\n- $2.\\quad$\u5c06$\\{1,0\\}$\u5148\u653e\u5165\u5806\uff0c$vis$\u503c\u53d8\u4e3a$1$\uff1b\n- $3.\\quad$\u6bcf\u6b21\u53d6\u5806\u9876$tp$\uff0c\u5f39\u51fa\uff0c\u679a\u4e3e\u5b83\u8981\u901a\u77e5\u7684\u725b$i$\uff0c\u82e5\u8fd9\u5934\u725b\u6ca1\u6709\u8dd1\uff08\u5373$vis=0$\uff09\uff0c\u5219\u5c06$\\{i,tp_t+i_t\\}$\u653e\u5165\u5806\uff1b\n- $4.\\quad$\u91cd\u590d\u6b65\u9aa4$3$\uff0c\u6bcf\u6b21\u4e0e$ans$\u53d6\u6700\u5927\u503c\uff0c\u76f4\u5230\u5806\u4e3a\u7a7a\u3002\n- \u6700\u540e\uff0c\u63d0\u9192\u5404\u4f4d\u8981**\u91cd\u8f7d\u5c0f\u4e8e\u53f7**\uff0c\u6ce8\u610f$\\text{STL}$\u5806\u662f\u5927\u7684\u4f18\u5148\uff0c\u91cd\u8f7d\u65f6**\u8981\u53cd\u8fc7\u6765\u5199**\uff0c\u5177\u4f53\u770b\u4ee3\u7801\u3002\n\n----------\n\n### \u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <queue>\nusing namespace std;\nvoid in(int &n){//\u5feb\u8bfb\n    n=0;int f=1;char c=getchar();\n    while (c<'0'||'9'<c){if (c=='-')f*=-1;c=getchar();}\n    while ('0'<=c&&c<='9'){n=n*10+(c-'0');c=getchar();}\n    n*=f;\n}\nstruct Node{\n    int id,t;//id\u4e0et\u540c\u4e0a\u6587\u89e3\u91ca\n    bool operator <(const Node &a) const{//\u91cd\u8f7d\u5c0f\u4e8e\u53f7\n        return t>a.t;\n    }\n};\nint a[1005],b[1005],c[1005][1005];\n//a\u4e3a\u9898\u76ee\u4e2d\u7684L,b\u4e3a\u9898\u76ee\u4e2d\u7684M\n//c\u5b58\u50a8\u7b2ci\u5934\u725b\u8981\u901a\u77e5\u7684\u725b\nbool vis[1005];//\u6807\u8bb0\u6709\u6ca1\u6709\u8dd1\nint main()\n{\n    priority_queue <Node> q;//\u6b65\u9aa41\uff1a\u5b9a\u4e49STL\u5806\n    int n;in(n);//\u8bfb\u5165\n    for (int i=1;i<=n;i++){//\u8bfb\u5165\n        in(a[i]),in(b[i]);\n        for (int j=1;j<=b[i];j++)in(c[i][j]);\n    }\n    //\u6b65\u9aa42\n    Node tmp;tmp.t=a[1],tmp.id=1;\n    q.push(tmp);vis[1]=1;\n    int ans=0;//ans\u521d\u59cb\u5316\u4e3a0\n    while (!q.empty()){\n        Node tp=q.top();q.pop();//\u53d6\u5806\u9876\u5e76\u5f39\u51fa\n        ans=max(ans,tp.t);//\u6bd4\u8f83\u53d6\u6700\u5927\u503c\n        for (int i=1;i<=b[tp.id];i++){\n            if (vis[c[tp.id][i]])continue;//\u8bbf\u95ee\u8fc7\u4e86\u5c31\u4e0d\u505a\n            vis[c[tp.id][i]]=1;//\u6807\u8bb0\n            Node tmp;tmp.t=tp.t+a[c[tp.id][i]],tmp.id=c[tp.id][i];\n            q.push(tmp);//\u5c06\u65b0\u7684\u8282\u70b9\u653e\u5165\u5806\n        }\n    }\n    printf (\"%d\",ans);//\u8f93\u51fa\n    return 0;\n}\n\n``````\n\n-----------\n\n### \u5e7f\u544a\n- \u63a8\u8350\u4e00\u4e0b\u8fd9\u4f4d\u540c\u5b66\u7684\u535a\u5ba2\uff08\u56e0$yzc$\u672c\u4eba\u8981\u6c42\uff0c\u5df2\u5c06**\u5de8\u4f6c**\u6539\u4e3a**\u849f\u84bb**\uff09\uff1a\n- $1. $[$yzc$**\u849f\u84bb**\u7684\u535a\u5ba2](https://www.luogu.com.cn/blog/ytxnqwl/)\n",
        "postTime": 1582703722,
        "uid": 123599,
        "name": "\u738b\u5955\u745c",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1882 \u3010\u63a5\u529b\u8d5b\u8dd1\u3011"
    },
    {
        "content": "\u77ed\u8def\uff0c\u7528dijkstra\u7b97\u51fa\u4ece\u725b1\u5230\u6bcf\u53ea\u725b\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u82e5i\u4f1a\u901a\u77e5j\uff0c\u90a3\u4e48i\u5230j\u8ddd\u79bb\u4e3al[j]\n\n```cpp\nvar\n  n,i,j,sum,min:longint;\n  a,b,d:array[-1..1002] of longint;\n  f:array[-1..1002,-1..1002] of longint;\n  t:array[-1..1002] of boolean;\nbegin\n  readln(n);\n  for i:=1 to n do\n    begin\n      read(a[i],b[i]);\n      for j:=1 to b[i] do read(f[i,j]);\n    end;\n  fillchar(d,sizeof(d),$3f);\n  d[1]:=a[1];\n  for i:=1 to b[1] do d[f[1,i]]:=a[1]+a[f[1,i]];\n  t[1]:=true;\n  for i:=1 to n-1 do\n    begin\n      min:=0;\n      for j:=1 to n do if not t[j] then\n        if d[j]<d[min] then min:=j;\n      if d[min]>sum then sum:=d[min];\n      t[min]:=true;\n      for j:=1 to b[min] do if not t[f[min,j]] then\n        if a[f[min,j]]+d[min]<d[f[min,j]] then d[f[min,j]]:=d[min]+a[f[min,j]];\n    end;\n  write(sum);\nend.\n```",
        "postTime": 1482058950,
        "uid": 20505,
        "name": "tututu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1882 \u3010\u63a5\u529b\u8d5b\u8dd1\u3011"
    },
    {
        "content": "# \u6700\u77ed\u8def\u597d\uff01\n\u770b\u5230\u5927\u4f6c\u4eec\u7528\u4e00\u4e2a\u4f18\u5148\u961f\u5217\u89e3\u51b3\u4e86\u95ee\u9898\uff0c\u770b\u4e0d\u592a\u61c2\uff0c\u849f\u84bb\u8fd9\u91cc\u7528\u7b80\u5355\u4e00\u70b9\u7684\u6700\u77ed\u8def\u3002\u5e0c\u671b\u80fd\u5e2e\u5230\u548c\u6211\u4e00\u6837\u770b\u4e0d\u61c2\u5176\u4ed6\u9898\u89e3\u7684\u849f\u84bb\u4eec\u3002\n# \u601d\u8def\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P1882)  \n\u770b\u5b8c\u9898\u76ee\u540e\u5f88\u5bb9\u6613\u53d1\u73b0\uff1a\u6bcf\u5934\u725b\u7684\u8d77\u8dd1\u65f6\u95f4\u4e3a **\u4ece\u725b 1 \u5f00\u59cb\u628a\u901a\u77e5\u4f20\u5230\u4ed6\u7684\u6700\u5c0f\u65f6\u95f4** \u3002\u6240\u4ee5\uff0c\u53ef\u4ee5\u628a\u6bcf\u5934\u725b\u770b\u4f5c\u8282\u70b9\uff0c\u6bcf\u4e2a\u901a\u77e5\u770b\u4f5c\u8fb9\uff0c\u90a3\u4e48\u8fb9\u6743\u5c31\u662f\u53d1\u901a\u77e5\u7684\u725b\u8dd1\u5708\u6240\u9700\u7684\u65f6\u95f4\u3002\u7136\u540e\u505a\u4e2a\u6700\u77ed\u8def\uff0c\u6bcf\u5934\u725b\u8dd1\u5b8c\u65f6\u95f4\u4e3a\u725b 1 \u5230\u4ed6\u7684\u6700\u77ed\u8def + \u8fd9\u5934\u725b\u7684\u8dd1\u5708\u65f6\u95f4\u3002\u6c42\u6700\u5927\u5373\u53ef\u3002\n# \u4ee3\u7801\u5b9e\u73b0\n dij \u5373\u53ef\uff08\u6bd5\u7adf\u6ca1\u8d1f\u6743\u8fb9\uff09\u3002  \n\u6ce8\u610f\uff0c\u7528\u94fe\u5f0f\u524d\u5411\u661f\u7684\uff08\u6bd4\u5982\u672c\u849f\u84bb\uff09\uff0c\u8fb9\u8981\u5f00\u5230 $1e6$ \uff0c\u800c\u4e0d\u662f $1e3$ \u3002\uff08\u849f\u84bb\u5728\u8fd9\u91cc\u88ab\u5361\u4e86\u4e94\u5206\u949f QAQ \uff09\u3002  \n\u9644\u4e0a\u849f\u84bb\u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\n#define pa pair<int,int>\n#define maxn 1000001\nusing namespace std;\nint mxn, n, m, l[maxn], d[maxn], used[maxn], head[maxn], nxt[maxn * 2], to[maxn * 2], v[maxn * 2], cnt;\npriority_queue< pa, vector<pa>, greater<pa> > pq;\n\nvoid add(int x, int y, int z) {\n\tto[++cnt] = y;\n\tnxt[cnt] = head[x];\n\thead[x] = cnt;\n\tv[cnt] = z;\n}\n\nvoid dij(int s) {\n\td[s] = 0;\n\tpq.push(make_pair(d[s], s));\n\twhile (pq.size()) {\n\t\tpa dt = pq.top();\n\t\tpq.pop();\n\t\tif (used[dt.second]) {\n\t\t\tcontinue;\n\t\t}\n\t\tused[dt.second] = 1;\n\t\tfor (int i = head[dt.second]; i; i = nxt[i]) {\n\t\t\tint y = to[i], z = v[i];\n\t\t\tif (d[y] > d[dt.second] + z) {\n\t\t\t\td[y] = d[dt.second] + z;\n\t\t\t\tpq.push(make_pair(d[y], y));\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main() {\n\tscanf(\"%d\", &n);\n\tfor (int j = 1; j <= n; j++) {\n\t\tscanf(\"%d%d\", &l[j], &m);\n\t\tfor (int i = 1; i <= m ; i ++ ) {\n\t\t\tint  b;\n\t\t\tscanf(\"%d\", &b);\n\t\t\tadd(j, b, l[j]);\n\t\t}\n\t}\n\tfor (int i = 1; i <= n ; i ++ )\n\t\td[i] = 2000000000;\n\tdij(1);\n\tfor (int i = 1; i <= n ; i ++ ) {\n\t\tmxn = max(mxn, d[i] + l[i]);\n\t}\n\tprintf(\"%d\", mxn);\n\treturn 0;\n}\n```\n\u5efa\u7acb\u7f8e\u597d\u6d1b\u8c37\uff0c\u675c\u7edd\u6284\u88ad\u3002  \n\u6709\u95ee\u9898\u8bf7\u79c1\u4fe1",
        "postTime": 1633140977,
        "uid": 408447,
        "name": "Mr_Dolphin",
        "ccfLevel": 5,
        "title": "P1882\u9898\u89e3"
    },
    {
        "content": "### \u7528$stl$\u7684\u4f18\u5148\u961f\u5217\u505a\u5c0f\u6839\u5806\u3002\n### \u6211\u7528\u4e86\u4e8c\u5143\u7ec4\uff0c\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u4fdd\u5b58\u65f6\u95f4\uff0c\u7b2c\u4e8c\u4e2a\u4f4d\u7f6e\u4fdd\u5b58\u7f16\u53f7\u3002\n```cpp\n#include<stdio.h>\n#include<queue>\n#include<vector>\n#define pr pair<int,int> \nusing namespace std;\ninline int read()//\u5feb\u8bfb\n{\n\tregister int x=0;register char c=getchar();for(;c<'0'||c>'9';c=getchar());\n\tfor(;c>='0'&&c<='9';x=(x<<3)+(x<<1)+(c^48),c=getchar());return x;\n}\nint n,l[1001],m,ans;vector<int>a[1001];\npriority_queue<pr,vector<pr>,greater<pr> >q;bool v[1001];\nmain()\n{\n\tn=read();\n\tfor(register int i=1;i<=n;++i)\n\t{\n\t\tl[i]=read();\n\t\tm=read();\n\t\tfor(;m--;)a[i].push_back(read());\n\t}\n\t//=====\u4ee5=====\u4e0a=====\u5747=====\u4e3a=====\u8f93=====\u5165=====\n\tv[1]=1;q.push(pr(l[1],1));\n\tfor(register pr now;--n/*n\u5934\u725b\uff0c\u5faa\u73afn-1\u6b21\uff0c\u6700\u540e\u4e00\u5934\u725b\u5355\u72ec\u5904\u7406*/;)\n\t{\n\t\tnow=q.top();//\u83b7\u53d6\u5806\u9876\n\t\tq.pop();//\u5806\u9876\u7684\u90a3\u5934\u725b\u8dd1\u5b8c\u4e86\uff0c\u30fe(\uffe3\u25bd\uffe3)Bye~Bye~\n\t\tfor(register int i=0;i<a[now.second].size();++i)\n\t\t\tif(!v[a[now.second][i]])//\u6293\u5230\u4e00\u5934\u6ca1\u8dd1\u8fc7\u7684\u725b\n\t\t\t{\n\t\t\t\tv[a[now.second][i]]=1;//\u8dd1\n\t\t\t\tq.push(pr(now.first+l[a[now.second][i]],a[now.second][i]));//\u585e\u5230\u5806\u91cc\n\t\t\t}\n\t}\n\t//=====\u4ee5=====\u4e0b=====\u5747=====\u4e3a=====\u8f93=====\u51fa=====\n\tprintf(\"%d\",q.top().first);\n}/*\u611f\u89c9\u6574\u4e2a\u8fc7\u7a0b\u50cfbfs*/\n```",
        "postTime": 1554211428,
        "uid": 90693,
        "name": "_\u2022\u0301\u3078\u2022\u0301\u256c_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1882 \u3010\u63a5\u529b\u8d5b\u8dd1\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u53ef\u4ee5\u7528BFS\u6765\u66f4\u65b0\u8282\u70b9\uff0c\u518d\u7528\u5806\u6765\u4fdd\u8bc1\u6bcf\u6b21\u53d6\u51fa\u7684\u8282\u70b9\u4e00\u5b9a\u662f\u5f00\u59cb\u8dd1\u5f97\u65f6\u95f4\u6700\u5feb\u7684\uff0c\u4e0d\u65ad\u66f4\u65b0\u76f4\u5230\u5806\u7a7a\u5373\u53ef\u3002\n\n\u867d\u7136\u9898\u76ee\u91cc\u6ca1\u6709\u8bf4\uff0c\u4f46\u662f\u9898\u76ee\u4fdd\u8bc1\u6709\u89e3\u3002\n\n```cpp\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#include<queue>\n#include<vector>\n#define MAXN 1000\nusing namespace std;\nstruct road{\n    int next,tv;\n}roads[MAXN*MAXN+10];\nint list[MAXN+10];\nint cnt=0;\nint ans;\nint l[MAXN+10];\nbool flag[MAXN+10];\nstruct node{\n    int st,pos;\n};\nstruct cmp{\n    bool operator() (node a,node b){\n        return a.st>b.st;\n    }\n};\npriority_queue<node, vector<node>,cmp> q;\nint mint[MAXN+10];\nint h=1;int t=1;\nint n;\nint add(int u,int v){\n    cnt++;\n    roads[cnt].tv=v;\n    roads[cnt].next=list[u];\n    list[u]=cnt;\n}\nint main(){\n    memset(mint,0x3f,sizeof(mint));\n    scanf(\"%d\",&n);\n    int x,y;\n    for (int i=1;i<=n;i++){\n        scanf(\"%d%d\",&l[i],&x);\n        for (int j=1;j<=x;j++){\n            scanf(\"%d\",&y);\n            add(i,y);\n        }\n    }\n    node nd;\n    nd.pos=1;\n    nd.st=0;\n    q.push(nd);\n    mint[q.top().pos]=0;\n    while(!q.empty()){\n        if (q.top().st>mint[q.top().pos]){\n            q.pop();\n            continue;\n        }\n        int w=list[q.top().pos];\n        int nt=q.top().st+l[q.top().pos];\n        ans=max(ans,nt);\n        while (w){\n            if (nt<mint[roads[w].tv]){\n                t++;\n                node nd;\n                nd.pos=roads[w].tv;\n                nd.st=nt;\n                q.push(nd);\n                mint[roads[w].tv]=nt;\n            }\n            w=roads[w].next;\n        }\n        q.pop();\n    }\n    printf(\"%d\",ans);\n}\n```",
        "postTime": 1508503717,
        "uid": 8876,
        "name": "hibiki",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1882 \u3010\u63a5\u529b\u8d5b\u8dd1\u3011"
    }
]