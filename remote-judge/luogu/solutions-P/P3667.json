[
    {
        "content": "## \u524d\u7f6e\u77e5\u8bc6\uff1a\u5b57\u7b26\u4e32Hash (\u677f\u5b50\uff1aP3370)\n\n\u4e00\u53e5\u8bdd\u9898\u610f\uff1a\u7ed9\u5b9a n \u4e2aA\u4e32\u548c n \u4e2aB\u4e32\uff0c\u957f\u5ea6\u5747\u4e3a m\uff0c\u6c42\u4e00\u4e2a\u6700\u77ed\u7684\u533a\u95f4 $[l,r]$\uff0c\u4f7f\u5f97\u4e0d\u5b58\u5728\u4e00\u4e2aA\u4e32a\u548c\u4e00\u4e2aB\u4e32b\uff0c\u4f7f\u5f97 $a[l,r]=b[l,r]$\n\n\u5728\u8fd9\u7bc7\u9898\u89e3\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528a\u6765\u4ee3\u8868A\u4e32\u4e2d\u7684\u4e00\u4e2a\u4e32\uff0cb\u6765\u4ee3\u8868B\u4e32\u4e2d\u7684\u4e00\u4e2a\u4e32\n\n\u4f7f\u7528 $a[l, r]$ \u6765\u4ee3\u8868 a\u4e32\u4e2d\u4ece l ~ r \u4f4d\u7f6e\u7684\u5b50\u4e32\n\n\u6700\u66b4\u529b\u7684\u60f3\u6cd5\u65e0\u975e\u4e8e\u5148\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u6700\u77ed\u7684\u5b50\u4e32\u957f\u5ea6$len$\uff0c\u4e4b\u540e\u518d\u679a\u4e3e\u957f\u5ea6\u4e3a$len$\u7684\u6240\u6709\u533a\u95f4$[l, r] (r = l + len - 1, 1 \\le l \\le r \\le m)$\uff0c\u66b4\u529b\u5224\u65ad\u6bcf\u4e2aA\u4e32 $a[l, r]$ \u4e0e\u6bcf\u4e2aB\u4e32 $b[l, r]$ \u6709\u6ca1\u6709\u91cd\u590d\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(n ^ 2 * m ^ 3)$\uff0c\u663e\u7136\u4f1a\u8d85\u65f6\n\n\u6211\u4eec\u8003\u8651\u5224\u65ad\u533a\u95f4$[l, r]$\u662f\u5426\u5408\u6cd5\u7684\u64cd\u4f5c\u8fdb\u884c\u4f18\u5316\u3002\n\n\u5177\u4f53\u64cd\u4f5c\uff08\u8bbe\u5f53\u524d\u5224\u65ad\u7684\u533a\u95f4\u4e3a $[l, r]$\uff09\uff1a\n\n1.\u5728\u64cd\u4f5c\u8fdb\u884c\u524d\u9884\u5904\u7406\u51fa\u6bcf\u4e2aA\u4e32\u4e2d $a[1, x] (1 \\le x \\le m)$ \u7684Hash\u503c\uff0c\u5047\u5b9aHash\u65f6\u7684\u8fdb\u5236\u6570\u4e3a $p$ \uff0c\u6a21\u6570\u4e3a $mod$ \uff0c\u90a3\u5c31\u6709$Hash[l, r] = (Hash[r] - Hash[l - 1] * p ^ {r - l + 1} + mod) \\% mod$\n\n\u9884\u5904\u7406\u4ee3\u7801\uff1a\n```cpp\n//strA[i][j]: \u7b2ci\u4e2aA\u4e32\u4e2d\u7b2cj\u4e2a\u5b57\u7b26\n//hA[i][j]: \u7b2ci\u4e2aA\u4e32\u4e2d\u524dj\u4e2a\u5b57\u7b26\u6784\u6210\u5b50\u4e32\u7684Hash\u503c\n\nfor (int i = 1; i <= n; ++i)\n{\n\tfor (int j = 1; j <= m; ++j)\n\t{\n\t\thA[i][j] = hA[i][j - 1] * p + strA[i][j];\n\t}\n}\n```\n\n\n2.\u5efa\u7acb\u4e00\u4e2a\u4ece\u6574\u6570\u6620\u5c04\u5230bool\u7684map\uff0c\u540d\u53eb$vis$\uff0c\u904d\u5386\u6bcf\u4e2aA\u4e32\uff0c\u5c06 $vis[Hash(a[l, r])]$ \u8bbe\u4e3a $true$\n\n3.\u904d\u5386\u6bcf\u4e2aB\u4e32\uff0c\u82e5 $vis[Hash(b[l, r])]$ \u4e3a $true$\uff0c\u5219\u5f53\u524d\u533a\u95f4\u4e0d\u5408\u6cd5\u3002\u82e5\u5bf9\u4e8e\u6240\u6709B\u4e32\u90fd\u6709 $vis[Hash(b(l, r))] = false$\uff0c\u5219\u5f53\u524d\u533a\u95f4\u5408\u6cd5\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n//pp[i]\u4e3a\u5df2\u7ecf\u9884\u5904\u7406\u597d\u7684 p \u7684 i \u6b21\u65b9\nmap<ull, bool> vis;\n\nbool check(int l, int r)\n{\n\tbool f = 1;\n\tvis.clear();\n\tfor (int i = 1; i <= n; ++i)\n\t{\n\t\tvis[hA[i][r] - pp[r - l + 1] * hA[i][l - 1]] = 1;\n\t}\n\tfor (int i = 1; i <= n; ++i)\n\t{\n\t\tif (vis.count(hB[i][r] - pp[r - l + 1] * hB[i][l - 1]))\n\t\t{\n\t\t\tf = 0;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (f)\n\t{\n\t\treturn true;\n\t}\n\treturn false;\n}\n```\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u5224\u65ad\u533a\u95f4\u662f\u5426\u5408\u6cd5\u7684\u64cd\u4f5c\u4ece $O(n ^ 2 * m)$ \u4f18\u5316\u5230 $O(n logn * m)$\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(nlogn * m ^ 3)$\uff0c\u4ecd\u7136\u4f1a\u8d85\u65f6\u3002\n\n\u4e8e\u662f\u6211\u4eec\u8003\u8651\u4e8c\u5206\u7b54\u6848\uff0c\u5bf9\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u533a\u95f4\u957f\u5ea6 $len$ \u7684\u64cd\u4f5c\u6539\u4e3a\u4e8c\u5206\u679a\u4e3e\uff0c\u90a3\u4e48\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u4e3a $O(nlogn * m^2logm)$\uff0c\u53ef\u4ee5\u6109\u5feb\u7684AC\u5566~\n\n\u4ee5\u4e0b\u4e3aAC\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <cctype>\n#include <cmath>\n#include <cstring>\n#include <algorithm>\n#include <string>\n#include <map>\n#include <iostream>\nusing namespace std;\n\nint read() //\u5feb\u8bfb\n{\n\tint x = 0;\n\tchar c;\n\tbool f = 0;\n\twhile (!isdigit(c = getchar()))\n\t{\n\t\tif (c == '-')\n\t\t{\n\t\t\tf = 1;\n\t\t}\n\t}\n\tdo\n\t{\n\t\tx = (x << 1) + (x << 3) + (c ^ 48);\n\t} while (isdigit(c = getchar()));\n\tif (f)\n\t{\n\t\treturn -x;\n\t}\n\treturn x;\n}\n\ntypedef unsigned long long ull;\n\nconst int maxn = 5e2 + 10;\nconst ull p = 131;\n\nint n, m;\n\null pp[maxn]; //p\u7684i\u6b21\u65b9\null hA[maxn][maxn], hB[maxn][maxn]; //Hash\u524d\u7f00\u548c\nchar strA[maxn][maxn], strB[maxn][maxn]; //\u4e32\n\nmap<ull, bool> vis;\n\nbool check(int len) //\u5224\u65ad\u533a\u95f4\u957f\u5ea6\u4e3alen\u65f6\u5408\u4e0d\u5408\u6cd5\n{\n\tfor (int l = 1, r = l + len - 1; r <= m; ++l, ++r)\n\t{\n\t\tbool f = 1;\n\t\tvis.clear();\n\t\tfor (int i = 1; i <= n; ++i) //\u679a\u4e3e\u6240\u6709A\u4e32\n\t\t{\n\t\t\tvis[hA[i][r] - pp[r - l + 1] * hA[i][l - 1]] = 1;\n\t\t}\n\t\tfor (int i = 1; i <= n; ++i) //\u679a\u4e3e\u6240\u6709B\u4e32\n\t\t{\n\t\t\tif (vis.count(hB[i][r] - pp[r - l + 1] * hB[i][l - 1])) //\u8fd9\u79cd\u64cd\u4f5c\u5c3d\u91cf\u7528count\u51fd\u6570\u5199\uff0c\u76f4\u63a5\u7528\u4e0b\u6807\u65b9\u5f0f\u5199\u7684\u8bdd\u5e38\u6570\u5927\u5f88\u591a\n\t\t\t{\n\t\t\t\tf = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (f)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nint main()\n{\n\tn = read(), m = read();\n\tpp[0] = 1; //\u6ce8\u610f\n\tfor (int i = 1; i <= 500; ++i) //\u9884\u5904\u7406p\u7684i\u6b21\u65b9\n\t{\n\t\tpp[i] = pp[i - 1] * p;\n\t}\n\tfor (int i = 1; i <= n; ++i)\n\t{\n\t\tscanf(\"%s\", strA[i] + 1);\n\t\tfor (int j = 1; j <= m; ++j)\n\t\t{\n        \t//\u9884\u5904\u7406\u524d\u7f00Hash\n\t\t\thA[i][j] = hA[i][j - 1] * p + strA[i][j];\n\t\t}\n\t}\n\tfor (int i = 1; i <= n; ++i)\n\t{\n\t\tscanf(\"%s\", strB[i] + 1);\n\t\tfor (int j = 1; j <= m; ++j)\n\t\t{\n\t\t\thB[i][j] = hB[i][j - 1] * p + strB[i][j];\n\t\t}\n\t}\n\tint l = 1, r = m;\n\tint ans = 0;\n\twhile (l <= r) //\u4e8c\u5206\u679a\u4e3e\u533a\u95f4\u957f\u5ea6\n\t{\n\t\tint mid = (l + r) >> 1;\n\t\tif (check(mid))\n\t\t{\n\t\t\tans = mid;\n\t\t\tr = mid - 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tl = mid + 1;\n\t\t}\n\t}\n\tprintf(\"%d\\n\", ans);\n}\n```\n",
        "postTime": 1645502056,
        "uid": 279857,
        "name": "Eafoo",
        "ccfLevel": 4,
        "title": "P3667 Bovine Genomics G \u9898\u89e3"
    },
    {
        "content": "## \u4e8c\u5206+hash\u524d\u7f00\u548c\u4f18\u5316\n\n#### \u4e8c\u5206\u6700\u77ed\u7b54\u6848\u957f\u5ea6  \n##### \u4e8c\u5206\u5c31\u662f\u4f18\u96c5\u7684\u66b4\u529b\uff08\u82cf\u795e\u8bed\u5f55-001\uff09\n\n\u679a\u4e3e\u957f\u5ea6\u4e3amid\u7684\u533a\u95f4 \n\n\u7136\u540e\u7528set\u5b58\u5165\u7b2c\u4e00\u79cd\u70b9\n\n\u518d\u7528\u524d\u7f00\u548c\u5904\u7406\u51fa\u8be5\u533a\u95f4\u7684hash\u503c\n\n\u6bcf\u6b21\u90fd\u5904\u7406\u592a\u6d6a\u8d39\u65f6\u95f4 \u9884\u5148\u5904\u7406\u51fa\u524d\u7f00\u548c\u7684\u4e00\u5f20\u54c8\u5e0c\u8868\n\n\u548cset\u91cc\u7684\u6570\u636e\u8fdb\u884c\u6bd4\u5bf9\u5373\u53ef\n\n### hash\u503c\u4e0d\u80fd\u76f4\u63a5\u51cf\uff1a\n\u9884\u5904\u7406\u51fa\u4e00\u4e2amul\uff08\u6a21\u6570\u7684\u5e42\uff09\n\nr-l\u65f6\u9700\u8981\u75281\u5230r\u7684hash\u503c\u51cf\u53bb\uff081\u5230l-1\uff09*mul\uff08r-l+1\uff09\n\n~~\uff08\u8bfb\u8005\u81ea\u8bc1\u4e0d\u96be\uff09~~\n### \u5173\u4e8eset.find()\n\u67e5\u627e\u65f6\u5982\u679c\u627e\u4e0d\u5230 \u5c31\u4f1a\u679a\u4e3e\u76f4\u5230end()\n\n\u5982\u679c\u627e\u5230\u4e86\u5219\u4e0d\u4f1a\n\n\u5224\u65ad\u65f6\u4e0d\u8981\u50cf\u6211\u8fd9\u4e2a\u50bb\u903c\u4e00\u6837\u5199\u9519if\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nchar s[510][510],t[510][510];\nconst int prime=198427;\nint mul[510],hash_first[510][510],hash_second[510][510];\nset<long long > f;\t\nint n,m;\nbool check(int len)\n{\n\n\tint re=0;\n\tfor(int i=1;i+len-1<=m;i++)\n\t{\n\t\tf.clear();\n\t\tint flag=0;\n\t\tint j=i+len-1;\n\t\tfor(int k=1;k<=n;k++)\n\t\t\tf.insert(hash_first[k][j]-hash_first[k][i-1]*mul[j-i+1]);\n\t\tfor(int k=1;k<=n;k++)\n\t\t\tif(f.find(hash_second[k][j]-hash_second[k][i-1]*mul[j-i+1])!=f.end())\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tif(!flag)\n\t\t{\n\t\t\tre=1;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn re;\n}\nint main()\n{\n\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)\n\t\tcin>>s[i]+1;\n\tfor(int i=1;i<=n;i++)\n\t\tcin>>t[i]+1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=m;j++)\n\t\t\thash_first[i][j]=(hash_first[i][j-1]*prime+s[i][j]);\n\t\tfor(int j=1;j<=m;j++)\n\t\t\thash_second[i][j]=(hash_second[i][j-1]*prime+t[i][j]);\n\t}\n\tmul[0]=1;\n    for(int i=1;i<=m;i++) \n\t\tmul[i]=mul[i-1]*prime;\n\tint l=1,r=m,ans=m;\n\twhile(l<=r) \n\t{\n        int mid=(l+r)>> 1;\n        if(check(mid)) ans=mid,r=mid-1;\n        else l=mid+1;\n    }\n\tcout<<ans;\n \treturn 0;\n}\n```\n",
        "postTime": 1571313454,
        "uid": 58064,
        "name": "COUPDETAT",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3667 \u3010[USACO17OPEN]Bovine Genomics G\u5976\u725b\u57fa\u56e0\u7ec4\uff08\u91d1\uff09\u3011"
    },
    {
        "content": "\u81ea\u5df1\u505a\u51fa\u7684\u84dd\u9898~~\u8bf4\u660e\u662f\u6076\u8bc4~~\n\n\u4f17\u6240\u5468\u77e5\uff0c45dino\u8fde\u7ea2\u9898\u90fd\u505a\u4e0d\u5bf9\n\n\n\n------------\n\u4e00\u5f00\u59cb\u53ea\u60f3\u5230\u66b4\u529b\uff0c\u4f46\u53d1\u73b0\u8981\u6c42\u7684\u662f\u6700\u5927\u7684\u6700\u5c0f\uff0c\u4e8e\u662f\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\uff0c\u590d\u6742\u5ea6\u7ea6\u4e3a $O(n^2)$ ,\u8c03\u4e86\u4e00\u4e0b\u5c31A\u4e86\uff0c\u8fde\u6c27\u90fd\u4e0d\u7528\u5438\u3002\n\n\n\n------------\n\n\u8bb2\u4e00\u4e0b\u4e8c\u5206\uff08\u8fd8\u7528\u8bb2\u5417\uff09\n\n\u4e8c\u5206\u7684\u8981\u6c42\u5c31\u662f\u6c42\u201c\u6700\u5927\u7684\u6700\u5c0f\u201d\u6216\u201c\u6700\u5c0f\u7684\u6700\u5927\u201d\n\n\u4ee5\u672c\u9898\u4e3a\u4f8b\uff0c\u7531\u4e8e\u8fd9\u4e00\u6bb5\u957f\u5ea6\u4e3a $m$ \u5fc5\u7136\u53ef\u4ee5\uff0c\u800c\u4e14\u8981\u6c42\u6700\u5c0f\u503c\uff0c\u6240\u4ee5\u7b26\u5408\u201c\u6700\u5927\u7684\u6700\u5c0f\u201d\u3002\n\n\u6240\u4ee5\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\uff0c\u5982\u679c\u51fa\u73b0\u201c\u6700\u5927\u201d\u6216\u201c\u6700\u5c0f\u201d\uff0c\u57fa\u672c\u4e0a\u5c31\u662f\u4e8c\u5206\u3002\n\n\u559c\u95fb\u4e50\u89c1\u7684\u4ee3\u7801\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m; \nstring a[501],b[501];\nmap<string,int> mp;\nbool check(int x,int k)\n{\n\tmp.clear();\n\tfor(int i=1;i<=n;i++)\t\n\t\tmp[a[i].substr(x,k)]=1;\n\tfor(int i=1;i<=n;i++)\n\t\tif(mp[b[i].substr(x,k)])\n\t\t\treturn 0;\n\treturn 1;\n}\nint main()\n{\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)\n\t\tcin>>a[i];\n\tfor(int i=1;i<=n;i++)\n\t\tcin>>b[i];\n\tint l=1,r=m;\n\twhile(l<r)\n\t{ \n\t\tint mid=(l+r)/2;\n\t\tbool flag=0;\n\t\tfor(int i=0;i<=m-mid;i++)\n\t\t\tif(check(i,mid))\n\t\t\t{\n\t\t\t\tflag=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tif(flag)\n\t\t\tr=mid;\n\t\telse\n\t\t\tl=mid+1;\n\t}\n\tcout<<l;\n\treturn 0;\n}\n```\n",
        "postTime": 1586346245,
        "uid": 240812,
        "name": "45dino",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3667 \u3010[USACO17OPEN]Bovine Genomics G\u3011"
    },
    {
        "content": "## P3667 \u4e8c\u5206+hash\u524d\u7f00\u548c+set\n\n\u4e8c\u5206\u662f\u5f88\u663e\u7136\u7684\uff0c\u90a3\u4e48 check \u7684\u8fc7\u7a0b\u662f\u4e00\u4e2a\u7ed9\u5b57\u7b26\u4e32\u5224\u7b49\u7684\u8fc7\u7a0b\uff0c\u90a3\u4e48\u81ea\u7136\u5c31\u4f1a\u60f3\u5230 hash\uff1a\n\n$$hash(s)=\\sum_{i=1}^{n}{s_i\u00b7base^{n-i}}$$\n\n(\u4e5f\u5c31\u662f\u628a\u5b57\u7b26\u4e32\u770b\u6210\u4e00\u4e2a base \u8fdb\u5236\u6570)\n\n(\u4e00\u822c\u4f1a\u52a0\u4e00\u4e2a\u6a21\u6570\uff0c\u4f46\u5b9e\u9645\u4e0a\u653e\u7740\u4e0d\u7ba1\u5c31\u76f8\u5f53\u4e8e\u5bf9 unsigned long long \u7684\u6700\u5927\u503c\u53d6\u6a21\u4e86\uff0c\u6548\u7387\u66f4\u9ad8\u98ce\u9669\u66f4\u5927\uff0c\u81f3\u5c11\u5728\u8fd9\u9898\u6ca1\u51fa\u4ec0\u4e48\u9505)\n\n\u8fd9\u6837\u7684 hash,\u7528\u7c7b\u4f3c\u524d\u7f00\u548c\u7684\u601d\u60f3\u5b58\u4e0b\u5230\u6bcf\u4e00\u4f4d\u7684 hash \u503c\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u505a\u5230 $O(1)$ \u67e5\u8be2\u5b50\u4e32\u7684 hash \u503c\uff1a\n\n$$hash(s_{l-r})=hash(s_r)-hash(s_{l-1})\u00b7base^{r-l+1}$$\n\n\u6bd4\u5982 $base=10$ \u65f6\uff1a\n\n$$hash(s_9)=123456789$$\n$$hash(s_5)=12345$$\n$$hash(s_{6-9})=123456789-12345\u00b710^4=6789$$\n\n(\u5f53\u7136 base \u8981\u9884\u5904\u7406 i \u6b21\u5e42)\n\n---\n\u4e8c\u5206\u7b54\u6848\u957f\u5ea6\uff0c\u679a\u4e3e\u6bcf\u4e00\u4e2a\u5de6\u7aef\u70b9\uff0c\u5c06\u524d n \u4e2a\u4e32\u7684 hash \u503c\u5b58\u5230 set \u91cc\uff0c\u518d\u904d\u5386\u540e n \u4e2a\u5b57\u7b26\u4e32\uff0c\u5982\u679c\u67d0\u4e2a\u5b57\u7b26\u4e32\u7684 hash \u503c\u5df2\u5728 set \u91cc\uff0c\u8bf4\u660e\u6709\u91cd\u590d\n\n---\n\u4e00\u4e9b\u8ba9\u6211\u6700\u4f18\u89e3\u7b2c\u4e8c\u7684\u5361\u5e38\u5c0f\u6280\u5de7\uff1a\n\n1. \u8bfb\u5165\u5b57\u7b26\u4e32\u65f6\uff0c\u5b9e\u6d4b\u4f7f\u7528\u2193\u7684cin\u6bd4\u5feb\u8bfb\u8981\u5feb\n```cpp\ncin.tie(0),ios::sync_with_stdio(0);\n```\n\n2. unordered_set \u662f\u65e0\u5e8f\u7684\u542c\u8d77\u6765\u4f1a\u5feb\u5f88\u591a\uff0c\u4f46\u4e5f\u56e0\u6b64\u8fed\u4ee3\u7684\u6548\u7387\u4e0d\u5982\u666e\u901aset\uff0c\u5728\u6b64\u9898\u4e2d\u4e5f\u662fset\u7a0d\u5feb\u4e00\u70b9\u70b9\n\n\u5b8c\u6574\u4ee3\u7801qwq\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define EL puts(\"Elaina\")\n#define reg register int\n#define qwq 0\nusing namespace std;\ntypedef unsigned long long ull;\nconst int maxn=5e2+3;\nconst ull base=5;\null pw[maxn];\nint val[137];\ninline void init(){\n    pw[0]=1,val['A']=1,val['C']=2,val['G']=3,val['T']=4;\n    for(reg i=1;i<maxn;++i)\n        pw[i]=pw[i-1]*base;\n}\nint n,m;\null h[2][maxn][maxn];\nchar s[maxn];\ninline void getHash(int p,int x){\n    for(reg i=1;i<=m;++i)\n        h[p][x][i]=h[p][x][i-1]*base+val[s[i]];\n}\ninline ull zStr(int p,int x,int l,int r){\n    return h[p][x][r]-h[p][x][l-1]*pw[r-l+1];\n}\ninline bool check(int l,int r){\n    set <ull> S;\n    for(reg i=1;i<=n;++i){\n        ull tmp=zStr(0,i,l,r);\n        S.insert(tmp);\n    }\n    for(reg i=1;i<=n;++i){\n        ull tmp=zStr(1,i,l,r);\n        if(S.count(tmp))return 1;\n    }\n    return 0;\n}\ninline bool check(int len){\n    for(reg l=1,r=len;r<=m;++l,++r)\n        if(!check(l,r))return 1;\n    return 0;\n}\nvoid solve(){\n    cin>>n>>m;\n    for(reg i=1;i<=n;++i)\n        cin>>s+1,getHash(0,i);\n    for(reg i=1;i<=n;++i)\n        cin>>s+1,getHash(1,i);\n\tint l=0,r=m,mid,ans;\n\twhile(l<=r){\n\t\tmid=(l+r)>>1;\n\t\tif(check(mid))ans=mid,r=mid-1;\n\t\telse l=mid+1;\n\t}\n\tprintf(\"%d\\n\",ans);\n}\nint main(){\n    cin.tie(qwq),ios::sync_with_stdio(qwq);\n    init();\n    solve();\n    return qwq;\n}\n```\n",
        "postTime": 1645343186,
        "uid": 280633,
        "name": "Muel_imj",
        "ccfLevel": 7,
        "title": "P3667 [USACO17OPEN]Bovine Genomics G"
    },
    {
        "content": "\u6709\u6591\u70b9\u548c\u6ca1\u6591\u70b9\u7684\u725b\u79f0\u4f5c A \u725b\u548c B \u725b .\n\n\u6700\u5927\u503c\u6700\u5c0f\uff0c\u663e\u7136\u4e8c\u5206\uff08\u7b54\u6848\uff0c\u5373\u957f\u5ea6\uff09 .\n\n\u7136\u540e\u95ee\u9898\u5c31\u53d8\u6210\u5224\u65ad\u6709\u6ca1\u6709\u6ee1\u8db3\u957f\u5ea6 $L$ \u7684\u533a\u95f4\u4e86 .\n\n\u679a\u4e3e\u5de6\u7aef\u70b9\uff0c\u7b97\u51fa\u53f3\u7aef\u70b9\uff0c\u7136\u540e\u628a\u6240\u6709 A \u725b\u7684\u533a\u95f4 Hash \u503c\u90fd\u4e22\u5230\u4e00\u4e2a  `set`\uff08\u6216\u54c8\u5e0c\u8868\uff09\u91cc\uff0c\u7136\u540e\u5bf9\u6bcf\u4e2a B \u725b\u7684\u533a\u95f4 Hash \u503c\u67e5\u8be2\u5373\u53ef .\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(nm\\log m)$ .\n\n***\nP.S.\n\n\uff08\u4ee5\u4e0b $n$ \u662f\u5b57\u7b26\u4e32\u957f\u5ea6\uff0c\u5b57\u7b26\u4e32\u4e0b\u6807\u4ece $1$ \u5f00\u59cb\uff09\n\n\u8fd9\u91cc\u5b57\u7b26\u4e32 Hash \u6211\u7528\u7684\u662f\n$$\\operatorname{Hash}(s)=\\left(\\sum_{i=1}^{n}s_i\\cdot base^{n-i}\\right)\\bmod P$$\n\u5176\u4e2d $base$ \u662f\u5b9a\u503c .\n\n\u53ef\u4ee5 $O(n)$ \u6c42 $base$ \u7684\u5e42\uff0c\u4e8e\u662f\u53ef\u4ee5 $O(n)$ \u9012\u63a8 Hash \u524d\u7f00\u548c $\\operatorname{ph}(k)$\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u968f\u4fbf\u6c42\u533a\u95f4 Hash \u503c\u4e86\n$$\\operatorname{Hash}(s[l:r])=\\operatorname{ph}(r)-base^{r-l+1}\\cdot \\operatorname{ph}(l-1)$$\n\n\u5173\u4e8e\u6b63\u786e\u6027\uff1a\n\n\u6211\u4eec\u6839\u636e\u751f\u65e5\u6096\u8bba\uff0c\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u4e1c\u897f\n> \u8003\u8651\u6a21\u6570 $P$, \u6240\u6709\u7684\u54c8\u5e0c\u503c\u90fd\u5728 $P$ \u4e4b\u5185\n> \n> \u4e8e\u662f\u6bcf\u4e00\u6b21\u5224\u5b9a\u7684\u9519\u8bef\u7387\u662f $\\dfrac 1P$\uff0c\u5728\u5927\u7ea6 $\\sqrt P$ \u6b21\u5224\u5b9a\u4e4b\u540e,\u9519\u8bef\u7387\u6210\u4e3a\u5e38\u6570 .\n\n\u53ef\u6015\uff0c\uff0c\uff0c\u8fd9\u4e1c\u897f\u5927\u6982\u53eb *\u751f\u65e5\u653b\u51fb* \u7f62 .\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u53cc Hash \u6216\u8005\u52a0\u5927\u6a21\u6570\uff0c\u6211\u5c31\u52a0\u5927\u6a21\u6570\u4e86 .\n\n\u4ee4\n$$P=999999999999989$$\n\u8fd9\u6837\u6b63\u786e\u7387\u5c31\u975e\u5e38\u9ad8\u529b\uff0c\u4f46\u662f\u6211\u4eec\u9012\u63a8\u6c42 $base$ \u7684\u5e42\u548c\u524d\u7f00 Hash \u7684\u65f6\u5019\u9700\u8981\u4e58\u6cd5\uff0c\u4e8e\u662f\u5c31\u8981\u641e $10^{16}$ \u7ea7\u522b\u7684\u4e58\u6cd5\u6a21\u8fd0\u7b97 .\n\n\u6211\u4ee3\u7801\u91cc\u7528\u7684\u662f $O(\\log)$ \u4e58\u6cd5 .\n***\n\nCode\n```cpp\nusing namespace std;\n\ntypedef long long ll;\nconst int N = 555;\nconst ll P = 999999999999989, base = 131;\ntypedef char str[N];\nint n, m;\nll pb[N];\nll mul(ll A, ll B) // O(log)\n{\n\tll ans = 0;\n\twhile (B)\n\t{\n\t\tif (B & 1) ans = (ans + A) % P;\n\t\tB >>= 1; A = (A + A) % P;\n\t} return ans;\n}\nvoid init()\n{\n\tpb[0] = 1;\n\tfor (int i=1; i<N; i++) pb[i] = mul(pb[i-1], base) % P;\n}\nstruct HashS\n{\n\tll ph[N];\n\tll hash(int l, int r)\n\t{\n\t\tll sub = l ? ph[l-1] : 0;\n\t\treturn (ph[r] - mul(sub, pb[r-l+1]) + P) % P;\n\t}\n\tinline explicit HashS(const str& s)\n\t{\n\t\tph[0] = s[0];\n\t\tfor (int i=1; i<m; i++) ph[i] = (mul(ph[i-1], base) + s[i]) % P;\n\t}\n};\nvector<HashS> HA, HB;\nstr tmp;\nunordered_set<int> H; // Hash Table\nbool check(int len)\n{\n\tfor (int l=0; l<m; l++)\n\t{\n\t\tint r = l + len - 1;\n\t\tif (r >= m) continue;\n\t\tH.clear(); bool flg = true;\n\t\tfor (int i=0; i<n; i++) H.insert(HA[i].hash(l, r));\n\t\tfor (int i=0; i<n; i++)\n\t\t\tif (H.find(HB[i].hash(l, r)) != H.end()){flg = false; break;}\n\t\tif (flg) return true;\n\t} return false;\n}\nint main()\n{\n\tinit();\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i=0; i<n; i++){scanf(\"%s\", tmp); HashS x(tmp); HA.push_back(x);}\n\tfor (int i=0; i<n; i++){scanf(\"%s\", tmp); HashS x(tmp); HB.push_back(x);}\n\tint l = 0, r = m, ans;\n\twhile (l <= r)\n\t{\n\t\tint mid = (l + r) >> 1;\n\t\tif (check(mid)){r = mid - 1; ans = mid;}\n\t\telse l = mid + 1;\n\t} printf(\"%d\\n\", ans);\n\treturn 0;\n}\n\n```",
        "postTime": 1639877973,
        "uid": 227514,
        "name": "jijidawang",
        "ccfLevel": 0,
        "title": "P3667"
    },
    {
        "content": "\u5176\u5b9e\u4e8c\u5206 + trie\u6811\u4e5f\u662f\u53ef\u4ee5\u6c34\u8fc7\u53bb\u7684qwq     \n\u603b\u7684\u6765\u8bf4, \u5c31\u662f\u4e8c\u5206\u957f\u5ea6, \u7528`trie\u6811`\u6765\u5224\u65ad\u662f\u5426\u53ef\u884c.   \n\u601d\u8def\u5012\u662f\u7b80\u5355, \u53ef\u662f\u5e38\u6570\u4e0d\u77e5\u9053\u5927\u5230\u54ea\u513f\u53bb\u4e86.  \n\n```cpp\n#include <cstdio>\n#include <stack>\n#include <cstring>\n#include <cassert>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nconst int MAXN = 5e2 + 20;\n\n\n    \nint N, M;\nchar str[MAXN << 1][MAXN];\n\ninline int getnum(char ch){\n    switch (ch){\n        case 'A': return 0;\n        case 'T': return 1;\n        case 'C': return 2;\n        case 'G': return 3;\n    }\n}\n\nnamespace trie\n{\n    struct Node\n    {\n        bool ended;\n        Node *ch[4];\n        Node() : ended(false) {}\n    }pool[MAXN * MAXN], *pit = pool, root, null;\n\n    int cnt = 1;\n\n    inline Node *newnode(){\n        if(cnt < (MAXN * MAXN)) return ++cnt, new(pit++) Node();\n        return new Node();\n    }\n\n    Node *insert(Node *cur, char s[], int p){\n        if(!cur) cur = newnode();\n        if(!p) return cur->ended = true, cur;\n        cur->ch[getnum(*s)] = insert(cur->ch[getnum(*s)], s + 1, p - 1);\n        return cur;\n    }\n\n    bool query(Node *cur, char s[], int p){\n        if(!cur) return false;\n        if(!p) return cur->ended;\n        return query(cur->ch[getnum(*s)], s + 1, p - 1);\n    }\n\n    void init(){\n        for(int i = 0; i < 4; i++) null.ch[i] = NULL;\n        null.ended = false;\n        for(int i = 0; i < cnt; i++) pool[i] = null;\n        pit = pool, cnt = 1; root = null;\n    }\n}\n\nbool check(int x){\n    using namespace trie;\n       \n    for(int l = 1; l <= (M - x + 1); l++){\n    \tinit();\n        for(int i = 1; i <= N; i++) insert(&root, str[i] + l, x);\n        bool flag = false;\n        for(int i = N + 1; i <= (N << 1); i++) \n            if(query(&root, str[i] + l, x)) {\n                flag = true; break;\n            }\n        if(!flag) return true;\n    }\n\n    return false;\n}\n\nint main()\n{\n    //freopen(\"p3667.in\", \"r\", stdin);\n    cin>>N>>M;\n    for(int i = 1; i <= (N << 1); i++) scanf(\" %s\", str[i] + 1);\n\n    int l = 0, r = M;\n    while(l < r){\n        int mid = (l + r) >> 1;\n        if(check(mid)) r = mid;\n        else l = mid + 1;\n    } \n    cout<<l<<endl;\n    return 0;\n}\n\n```\n",
        "postTime": 1534128181,
        "uid": 57705,
        "name": "\u4ffa\u662f\u5c0f\u7a0b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3667 \u3010[USACO17OPEN]Bovine Genomics G\u5976\u725b\u57fa\u56e0\u7ec4\uff08\u91d1\uff09\u3011"
    },
    {
        "content": "csdn\u4e0a\u5199\u4e86\u7bc7blog\uff0c\u7136\u540e\u7b97\u6cd5\u5176\u5b9e\u4e5f\u5f88\u5e38\u89c4\uff1a\u5dee\u5206+hash\u3002\n\n\u76f8\u8f83\u697c\u4e0b\u53ef\u80fd\u4e5f\u5c31\u662f\u8bf4\u6211\u7684blog\u5199\u7684\u8be6\u7ec6\u4e00\u4e9b\u5427...\n\n\u7136\u540e\u9644\u4e2a\u8fde\u63a5\u6211\u770b\u770b\u80fd\u4e0d\u80fd\u8fc7\u5ba1\u5427~\n\n[blog from csdn](https://blog.csdn.net/qq_35416331/article/details/80135708)\n\n\uff08\u5982\u679c\u80fd\u8fc7\u5ba1\u7684\u8bdd...\u8fd8\u662f\u633a\u4e0d\u9519\u7684\uff09",
        "postTime": 1524911495,
        "uid": 38576,
        "name": "J\u03bcdge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3667 \u3010[USACO17OPEN]Bovine Genomics G\u5976\u725b\u57fa\u56e0\u7ec4\uff08\u91d1\uff09\u3011"
    },
    {
        "content": "\u6211\u9996\u5148\u9996\u5148\u5148\u8003\u8651\u4e86\u4e8c\u5206+hash\uff0c\u4f46\u53ef\u80fd\u662f\u6211\u7684\u4e8c\u5206\u6709\u70b9\u95ee\u9898\uff0c\u4e00\u76f4tle\u4e86\u4e00\u4e2a\u70b9\uff0c\u7136\u540e\u5b8c\u5168\u4e0d\u77e5\u9053\u600e\u4e48\u53bb\u6539\u53d8\uff0c\u53ea\u80fd\u53bbUSACO\u7684\u5b98\u7f51\u4e0a\u770b\uff0c\u7ed3\u679c\u53d1\u73b0\u4e86\u66f4\u5389\u5bb3\u7684\u65b9\u6cd5\u3002\n\n\n\u539f\u82f1\u6587\u9898\u89e3\uff1a[http://www.usaco.org/current/data/sol\\_cownomics\\_gold\\_open17.html](http://www.usaco.org/current/data/sol\\_cownomics\\_gold\\_open17.html)\n\n\n\u90a3\u4e48\u6211\u6309\u7167\u6211\u7684\u7406\u89e3\u8bb2\u4e00\u4e0b\uff0c\u9996\u5148\u6211\u4eec\u5f00\u59cb\u5b9a\u4e49\u4e00\u4e2a\u533a\u95f4lef\u548crigh\uff0c\u5f00\u59cb\u6211\u4eec\u5c06\u5176\u5168\u90e8\u8d4b\u503c\u4e3a0\uff0c\u8868\u793a\u6c42\u51falef+1\u5230righ\u8fd9\u4e2a\u533a\u95f4\u5404\u4e2a\u725b\u7684hash\u503c(\u6211\u662f\u7528rand(),\u4e0d\u8fc7\u8fd9\u4e2a\u770b\u81ea\u5df1\u7684\u5fc3\u60c5\u968f\u4fbf\u8d4b\u503c\u5427\uff09\uff0c\u7136\u540e\u770b\u770b\u6709\u6ca1\u6709\u91cd\u590d\u7684\uff0c\u5982\u679c\u8fd9\u4e2a\u533a\u95f4\u53cc\u65b9\u7684\u725b\u4e92\u76f8\u6ca1\u6709\u76f8\u540c\u7684hash\u503c\u90a3\u4e48\u5c31\u53ef\u4ee5\u66f4\u65b0\u7b54\u6848\uff0c\u540c\u65f6\u5c06lef++,\u540c\u65f6\u6bcf\u5934\u725b\u7684hash\u503c\u51cf\u53bb\u6700\u524d\u9762\u4e00\u4e2a\u5b57\u6bcd\u7684hash,\u7136\u540e\u7ee7\u7eed\u5f80\u4e0b\u505a\uff08\u610f\u601d\u5c31\u662f\u5982\u679c\u5f53\u524d\u7b26\u5408\u7b54\u6848\uff0c\u90a3\u4e48\u6211\u4eec\u628a\u8fd9\u4e2a\u533a\u95f4\u7684\u6700\u524d\u9762\u4e00\u4f4d\u53bb\u6389\uff0c\u770b\u770b\u662f\u5426\u6709\u66f4\u4f18\u7684\u7b54\u6848\uff09\uff0c\u5982\u679c\u6709\u76f8\u540c\u7684hash\u503c\uff0c\u90a3\u4e48\u8bf4\u660e\u5f53\u524d\u533a\u95f4\u8fd8\u4e0d\u53ef\u4ee5\uff0c\u6240\u4ee5righ++\uff0c\u5e76\u5c06\u6bcf\u5934\u725b\u7684hash\u503c\u52a0\u4e0a\u540e\u9762\u4e00\u4f4d\u7684\u503c\u8fdb\u884c\u66f4\u65b0\u3002\u4ed6\u5229\u7528\u7684\u5c31\u662f\u5982\u679c\u5f53\u524d\u533a\u95f4\u662f\u53ef\u884c\u7684\uff0c\u90a3\u4e48\u628a\u5b83\u5f53\u505a\u540e\u7f00\u7684\u533a\u95f4\u4e5f\u4e00\u5b9a\u662f\u53ef\u884c\u7684\uff0c\u6240\u4ee5\u4e00\u5b9a\u4f1a\u8bbf\u95ee\u5230\u8fd9\u4e2a\u53ef\u884c\u533a\u95f4\u3002\n\n(\u611f\u89c9\u81ea\u5df1\u7684\u5206\u6790\u5f88\u4e0d\u6e05\u695a\uff0c\u53ef\u80fd\u6709\u9519\u8bef\uff0c\u5f88\u62b1\u6b49\u3002\u3002)\n\n\u5206\u6790\u4e86\u4e00\u4e0b\uff0c\u5b83\u7684hash\u503c\u8ba1\u7b97\u662f\u4ece\u4e0a\u4e00\u6b21\u7684\u63a8\u51fa\u6765\u7684\uff0c\u800c\u6211\u4e4b\u524dhash\u662f\u6bcf\u6b21\u90fd\u91cd\u65b0\u8ba1\u7b97\u4e00\u904d\uff0c\u6240\u4ee5\u3002\u3002\u3002\n\n\n\u5bf9\u4e86\u5224\u65adhash\u6709\u65e0\uff0c\u5f88\u65b9\u4fbf\u7684\u53ef\u4ee5\u7528set\u6765\u3002\n\n\n\u4e0b\u9762\u662f\u5177\u4f53\u7a0b\u5e8f\uff1a\n\n\u590d\u5236\u4ee3\u7801\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<set>\n#define maxn 1009\n#define mo 53894320\nusing namespace std;\ntypedef long long ll;\nchar ch[maxn];\nint n,ans,m,t;\nll val[maxn],s1[maxn][maxn],s2[maxn][maxn],hash1[maxn],hash2[maxn];\nint main()\n{\n  scanf(\"%d%d\",&n,&m);\n  for (int i=1;i<=n;i++) \n  {\n   scanf(\"%s\",ch);\n   for (int j=0;j<m;j++) s1[i][j]=ch[j]-65;\n  }\n  for (int i=1;i<=n;i++) \n  {\n   scanf(\"%s\",ch);\n   for (int j=0;j<m;j++) s2[i][j]=ch[j]-65;\n  }\n  for (int i=0;i<m;i++) val[i]=rand()%mo;\n  ans=m;t=n;\n  int lef=0,righ=0;\n  while (righ<m)\n  {\n       set<ll>p; \n       if (t==0) ans=min(ans,righ-lef);\n       if (t>0)\n       {\n        t=0;\n        for (int i=1;i<=n;i++) \n      {\n       hash1[i]=(hash1[i]+s1[i][righ]*val[righ])%mo;\n       p.insert(hash1[i]);\n      }\n      for (int i=1;i<=n;i++)\n      {\n       hash2[i]=(hash2[i]+s2[i][righ]*val[righ])%mo;\n       if (p.count(hash2[i])) t++;\n      }\n      righ++;\n     }\n     else\n     {\n      t=0;\n      for (int i=1;i<=n;i++) \n      {\n       hash1[i]=((hash1[i]-(s1[i][lef]*val[lef]))%mo+mo)%mo;\n       p.insert(hash1[i]);\n      } \n      for (int i=1;i<=n;i++)\n      {\n       hash2[i]=((hash2[i]-s2[i][lef]*val[lef])%mo+mo)%mo;\n       if (p.count(hash2[i])) t++;\n      }\n      lef++;\n     }\n  }\n  printf(\"%d\\n\",ans);\n  return 0;\n}\n```",
        "postTime": 1509003606,
        "uid": 21621,
        "name": "nihanchu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3667 \u3010[USACO17OPEN]Bovine Genomics G\u5976\u725b\u57fa\u56e0\u7ec4\uff08\u91d1\uff09\u3011"
    },
    {
        "content": "\u4e0e\u522b\u7684\u4e0d\u540c\u7684\u9898\u89e3\u662f\uff0c\u6211\u7684 hash \u503c\u751f\u6210\u6781\u4e3a\u7b80\u5355\u3002\n```cpp\nlong long h(int point ,char as)//point\u4e3a\u5b57\u7b26\u4f4d\u7f6e\n{\n\treturn point*as;\n}\n```\n\u8fd9\u6837\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u7b80\u6613\u7684\u54c8\u5e0c\u751f\u6210\u5668\u3002\u4f46\u8fd9\u6837\u9047\u5230\u7684\u95ee\u9898\u662f\uff1a\u4e0d\u540c\u7684\u5b57\u7b26\u4e32\u54c8\u5e0c\u503c\u6709\u4e00\u5b9a\u6982\u7387\u53ef\u80fd\u4f1a\u76f8\u7b49\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e00\u7455\u75b5\uff0c\u6211\u4eec\u9047\u5230\u54c8\u5e0c\u503c\u76f8\u7b49\u65f6\u5019\uff0c\u53ef\u4ee5\u76f4\u63a5\u5c06\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e00\u4e00\u6bd4\u8f83\uff0c\u770b\u770b\u662f\u5426\u771f\u7684\u4e3a\u540c\u4e00\u5b57\u7b26\u4e32\u3002\u8fd9\u6837\u4e00\u6765\u5373\u4f7f\u54c8\u5e0c\u638c\u63e1\u5f97\u4e0d\u592a\u597d\uff0c\u4e5f\u4f9d\u7136\u80fd\u901a\u8fc7\u6b64\u9898\u3002\n\n\u505a\u6cd5\uff1a\u7ed9\u6bcf\u4e2a\u5b57\u7b26\u4e32\u6bcf\u4e2a\u5b57\u7b26\u751f\u6210\u5bf9\u5e94\u54c8\u5e0c\u503c\uff0c\u7528\u4e00\u4e2a\u6570\u7ec4\u4fdd\u5b58\u8d77\u6765\uff0c\u7136\u540e\u518d\u7528\u4e00\u4e2a\u6570\u7ec4\u4fdd\u5b58\u597d\u6bcf\u4e2a\u5b57\u7b26\u4e32\u7684\u524d\u7f00\u548c\u3002\u8fd9\u65f6\u5019\u6211\u4eec\u4e8c\u5206\u957f\u5ea6\uff0c\u4e8c\u5206\u7684\u957f\u5ea6\u662f\u5426\u80fd\u6ee1\u8db3\u9898\u610f\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e00\u5c06\u6bcf\u4e2a\u6591\u70b9\u9a6c\u7684\u90e8\u5206\u57fa\u56e0\u4e0e\u65e0\u6591\u70b9\u9a6c\u7684\u90e8\u5206\u57fa\u56e0\u5bf9\u7167\uff0c\u770b\u770b\u662f\u5426\u6709\u76f8\u540c\u7684\uff08\u7528\u524d\u9762\u8ba1\u7b97\u7684 \u54c8\u5e0c\u503c\u5224\u65ad\uff09\u3002\u5982\u679c\u8fd9\u65f6\u5019\u54c8\u5e0c\u503c\u76f8\u7b49\u4e86\uff0c\u6709\u53ef\u80fd\u662f\u4e0d\u540c\u7684\u5b57\u7b26\u4e32\uff08\u6bd5\u7adf\u6211\u8fd9\u4e2a\u54c8\u5e0c\u751f\u6210\u8f83\u7b80\u5355\uff0c\u800c\u4e14\u9898\u76ee\u53ea\u6709\u56db\u79cd\u5b57\u6bcd\uff0c\u9047\u5230\u4e0d\u540c\u5b57\u7b26\u4e32\u54c8\u5e0c\u503c\u76f8\u7b49\u7684\u6982\u7387\u8fd8\u662f\u6709\u7684\uff09\uff0c\u90a3\u6211\u4eec\u6734\u7d20\u9a8c\u8bc1\u662f\u5426\u4e3a\u540c\u4e00\u5b57\u7b26\u4e32\u5373\u53ef\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u7528\u54c8\u5e0c\u6392\u9664\u4e86\u5f88\u591a\u4e0d\u53ef\u80fd\u76f8\u7b49\u7684\u5b57\u7b26\u4e32\uff0c\u51cf\u5c11\u7684\u6734\u7d20\u9a8c\u8bc1\u7684\u6b21\u6570\u3002\n\n\u4e0a\u4ee3\u7801\uff08\u9644\u6ce8\u91ca\uff09\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct pp{\n\tstring s;\n}a[1050];\nlong long n,m,b[1050][505],c[1050][505];//b \u88c5\u6bcf\u7b2c i \u4e2a\u5b57\u7b26\u4e32\u7684\u7b2cj\u5b57\u7b26\u7684hash\u503c\uff0cc\u5219\u4e3a\u7b2ci\u4e2a\u5b57\u7b26\u4e32\u7b2cj\u4f4d\u7f6e\u7684\u524d\u7f00\u548c \nbool check(int len){\n\tfor(int bg=0;bg<m-len;bg++)//\u679a\u4e3e\u57fa\u56e0\u7684\u8d77\u70b9 \n\t{\n\t\tint pd=0;//\u4f5c\u4e3a\u5224\u65ad\u662f\u5426\u9047\u5230\u76f8\u540c\u57fa\u56e0\u7684\u6807\u8bb0 \n\tfor(int i=1;i<=n;i++)// \u8fd9\u662f\u6591\u70b9\u725b\u57fa\u56e0\u7684\u5faa\u73af \n\t{\n\tfor(int u=n+1;u<=2*n;u++)// \u8fd9\u662f\u6ca1\u6709\u6591\u70b9\u7684\u725b\u57fa\u56e0\u7684\u5faa\u73af \n\t{\n\t\tlong long temp=c[i][bg+len]-c[i][bg]+b[i][bg]-b[i][bg+len],temp1=c[u][bg+len]-c[u][bg]+b[u][bg]-b[u][bg+len];//\u5229\u7528\u524d\u7f00\u548c\u6c42\u5b50\u4e32hash\u503c \n\t\tif(temp==temp1)//\u6838\u5fc3\u70b9\uff1a\u5982\u679c hash \u503c\u76f8\u7b49\u4e86\uff0c\u90a3\u4e48\u6734\u7d20\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32 \n\t    {\n\t    \tint sum=0;\n\t    \tfor(int j=bg;j<bg+len;j++)\n\t    \t{\n\t    \t\tif(a[i].s[j]==a[u].s[j])\n\t    \t\tsum++;\n\t\t\t}\n\t\t\tif(len==sum)//\u6210\u7acb\u8bf4\u660e\u4e24\u4e2a\u5b57\u7b26\u4e32\u5b8c\u5168\u76f8\u7b49 \n\t    \t{\n\t    \t\tpd=1;\n\t    \t\tbreak;//\u90a3\u4e48\u8fd9\u4e2a\u70b9\u5e76\u4e0d\u80fd\u4f5c\u4e3a\u57fa\u56e0\u8d77\u70b9\uff0c\u9000\u51fa\u5230\u6700\u5927\u7684\u90a3\u4e2a\u5faa\u73af\u53bb \n\t\t\t}\n\t\t}\n\t}\n\tif(pd==1)break;\n\t}\n\tif(pd==0)return 1;//\u5982\u679c bg \u4f5c\u4e3a\u8d77\u70b9\u7b26\u5408\u9898\u610f\uff0c\u5c31\u6ca1\u5fc5\u8981\u518d\u679a\u4e3e\u5176\u4ed6\u7b26\u5408\u9898\u610f\u7684\u70b9\u4e86 \n}\nreturn 0;//\u5982\u679c\u6bcf\u4e2a\u70b9\u4f5c\u4e3a\u8d77\u70b9\u90fd\u679a\u4e3e\u5b8c\u4e86\uff0c\u627e\u4e0d\u5230\u7b26\u5408\u8981\u6c42\u7684\u5c31\u8fd4\u56de\u5047\uff1b \n}\n\nlong long h(int point ,char as)\n{\n\treturn point*as;\n}\nint main(){\n\tcin>>n>>m;\n\tfor(int i=1;i<=2*n;i++)cin>>a[i].s;\n\t\n\tfor(int i=1;i<=2*n;i++)//hash \u6bcf\u4e2a\u5b57\u7b26 \n\tfor(int u=0;u<m;u++)b[i][u]=h(u,a[i].s[u]);\n\n\tfor(int i=1;i<=2*n;i++)c[i][0]=b[i][0];// hash \u524d\u7f00\u548c\u521d\u59cb\u5316\u4e0b \n\t\n\tfor(int i=1;i<=2*n;i++) // hash \u524d\u7f00\u548c\n\tfor(int u=1;u<m;u++)c[i][u]=c[i][u-1]+b[i][u];\n\n\tint l=1,r=m;\n\twhile(l<r){//\u4e8c\u5206\u957f\u5ea6 \n\tint mid=(l+r)>>1;\n\tif(check(mid))r=mid;else l=mid+1;\n}\n\tcout<<l;\n}\n```\n\n",
        "postTime": 1682587743,
        "uid": 439000,
        "name": "DINGZHEN666",
        "ccfLevel": 4,
        "title": "\u4e8c\u5206+\u7b80\u6613hash+hash\u524d\u7f00\u548c"
    },
    {
        "content": "\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\u3002\n\n\u4f5c\u4e3a\u849f\u84bb\u7ec8\u4e8e\u6709\u4f1a\u5e76\u4e14\u8fd8\u53ef\u4ee5\u63d0\u4ea4\u9898\u89e3\u7684\u9898\u4e86\u8fd8\u662f\u5f88\u5f00\u5fc3\u7684\u3002\n\n## \u601d\u8def\n\u9996\u5148\u8fd9\u4e2a\u9898\u662f\u4e00\u9053\u5b57\u7b26\u4e32\u5339\u914d\u7684\u9898\uff0c\u53ef\u4ee5\u7528\u54c8\u5e0c\u89e3\u51b3\u3002\n\n\u5176\u6b21\u8fd9\u4e2a\u9898\u662f\u4e00\u9053\u6c42\u6700\u77ed\u533a\u95f4\u7684\u9898\uff0c\u90a3\u4e48\u5f88\u5bb9\u6613\u5c31\u80fd\u60f3\u5230\u4ece $1$ \u5230 $m$ \u679a\u4e3e\u533a\u95f4\u957f\u5ea6\u518d\u4e0a\u4e0b\u5339\u914d,\u4f46\u8fd9\u6837\u7684\u60c5\u51b5\u4e0b\u590d\u6742\u5ea6\u5c06\u4f1a\u8fbe\u5230  $O(m^2/2 \\times n^2)$\uff0c\u7edd\u5bf9\u8d85\u65f6\u3002                   \n\n\u7136\u540e\u6211\u60f3\u5230\u4e8c\u5206\uff0c\u4f46\u6211\u592a\u849f\u84bb\u53ea\u542c\u8bf4\u8fc7\u4e8c\u5206\u67e5\u627e\uff0c\u4e0d\u8fc7\u5ffd\u7136\u5728\u770b\u4e8c\u5206\u67e5\u627e\u65f6\u770b\u5230\u4e00\u4e2a\u65b0\u540d\u8bcd\uff1a\u4e8c\u5206\u7b54\u6848\u3002\u800c\u6700\u77ed\u533a\u95f4\u957f\u5ea6\u8fd9\u4e9b\u4e1c\u897f\u5c31\u662f\u5f88\u5178\u578b\u7684\u53ef\u4ee5\u9760\u4e8c\u5206\u7b54\u6848\u53bb\u89e3\u51b3\u7684\u3002\n\n\u90a3\u8fd9\u9053\u9898\u7a81\u7136\u5c31\u597d\u529e\u4e86\uff0c\u4e8c\u5206\u679a\u4e3e\u5339\u914d\u957f\u5ea6\u5c31\u884c\u4e86\u3002\n\n\u6bd4\u5982\u8bf4\u6bcf\u884c\u6709 $500$ \u4e2a\u57fa\u56e0\u5b57\u7b26\u7ec4\u6210\u7684\u57fa\u56e0\u7ec4\uff0c\u90a3\u5c31\u9996\u5148\u5047\u8bbe $250$ \u662f\u6700\u77ed\u533a\u95f4\u957f\u5ea6\uff0c\u62ff\u5b83\u53bb\u4e0a\u4e0b\u66b4\u529b\u5339\u914d\uff0c\n\u5982\u679c\u6709\u4e0d\u5b58\u5728\u4e00\u4e2a $A$ \u4e32 $a$ \u548c\u4e00\u4e2a $B$ \u4e32 $b$\uff0c\u4f7f  $a[l,r]=b[l,r]$ \u7684\u60c5\u51b5\u51fa\u73b0\uff0c\u90a3\u4e48\u5c31\u8bf4\u660e\u8fd9\u4e00\u6bb5\u957f\u5ea6\u53ef\u884c\uff0c\u518d\u4e8c\u5206\u5de6\u8fb9\uff08$1$ \u5230 $250$\uff09\u5047\u8bbe $125$ \u662f\u6700\u77ed\u533a\u95f4\u3002\n\n\u90a3\u5982\u679c\u8bf4 $250$ \u4e0d\u884c\uff0c\u5c31\u8bf4\u660e\u6700\u77ed\u957f\u5ea6\u8981\u66f4\u957f\uff0c\u5c31\u53bb\u4e8c\u5206\u53f3\u8fb9\u5047\u8bbe $375$ \u662f\u6700\u77ed\u533a\u95f4\u3002\n\n\u4ee5\u6b64\u7c7b\u63a8\uff0c\u6700\u540e\u5f53\u5de6\u53f3\u8282\u70b9\u76f8\u7b49\u65f6\u5f97\u51fa\u7684\u5c31\u662f\u6700\u7ec8\u7b54\u6848\u3002\n\n\u8fd9\u6837\u4ee5\u6765\uff0c\u539f\u672c\u9700\u8981\u7ea6 $O(m^2/2)$ \u679a\u4e3e\u533a\u95f4\u957f\u5ea6\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u5c31\u76f4\u63a5\u964d\u4f4e\u4e3a\u4e86\u8fd9\u4e2a\u66f4\u4f18\u7684 $O(\\log_2m)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e86\u3002\n\n\u4f46\u662f\u4e0a\u4e0b\u76f4\u63a5\u5339\u914d\u7684\u8fc7\u7a0b\u4ecd\u7136\u4f1a\u4e58\u4e0a $n^2$ \u7ea7\u522b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u5e76\u4e0d\u4f18\u7f8e\uff0c\u6240\u4ee5\u53ef\u4ee5\u628a\u5728\u679a\u4e3e\u67d0\u533a\u95f4\u65f6\u5148\u628a\u540e $n$ \u884c\u626b\u4e00\u904d\uff0c\u7528 $map$ \u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u67d0\u4e2a\u54c8\u5e0c\u503c\u662f\u5426\u51fa\u73b0\u8fc7\uff0c\u8fd9\u6837\u518d\u626b\u524d $n$ \u884c\u65f6\u5c31\u53ef\u4ee5\u4ee5 $O(n \\times \\log n)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u67e5\u627e\u8be5\u5b50\u4e32\u662f\u5426\u5728\u540e $n$ \u884c\u3002\n\n\u4e2d\u51fa\u73b0\u8fc7\u4e86\uff0c\u90a3\u4e48\u603b\u4f53\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u964d\u4e3a\u4e86 $O(\\log_2 m \\times n \\times \\log n)$\uff0c\u86ee\u5feb\u7684\u3002                   \n\n## \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\ntypedef unsigned long long ll;\nusing namespace std;//\u4e8c\u5206\u7b54\u6848\u67e5\u627e \nchar a[1200][600];\nll f[1200][600];\nll c[1200];//\u6bcf\u4e00\u884c\u6682\u65f6\u5b58\u7684\u54c8\u5e0c\u503c \nll B=233;\nll Bi[1200];\nint n,m;\nint ans;\nmap<ll,ll> maps;\nint main()//\u67e5\u627e\u662f\u5426\u6709\u548c\u5b83\u4e0d\u5728\u540c\u4e00\u7ec4\u4f46\u662f\u54c8\u5e0c\u503c\u4e00\u6837\u7684\uff0c\u6709\u7684\u5c31\u76f4\u63a5\u820d \n{\n\tcin>>n>>m;\n\tfor(int i=1;i<=2*n;i++)\n\t{\n\t\tscanf(\"%s\",a[i]+1);\n\t\tf[i][0]=0;\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tf[i][j]=f[i][j-1]*B+a[i][j];\n\t\t}\n\t}\n\tint l=1;int r=m;Bi[0]=1;\n\tfor(int i=1;i<=m;i++)Bi[i]=Bi[i-1]*B;\n\twhile(l<r)//log2n\u67e5\u627e \n\t{\n\t\tint mid=(l+r)>>1;\n\t\tint len=mid;\t\t\n\t\tbool flag=0;//flag=1\u5c31\u8bf4\u660e\u8fd9\u4e48\u5c0f\u7684\u5730\u65b9\u4e0d\u591f \n\t\tfor(int i=1;i+len-1<=m;i++)//n\u67e5\u627e \n\t\t{\n\t\t\tflag=0;\n\t\t\tint j=i+len-1;//\u533a\u95f4\u53f3\u7aef\u70b9\n\t\t\tmemset(c,0,sizeof(c));\n\t\t\tmaps.clear();\n\t\t\tfor(int u=1;u<=2*n;u++)\n\t\t\t{\n\t\t\t\tc[u]=f[u][j]-f[u][i-1]*Bi[len];\n\t\t\t\t//cout<<\"cu1=\"<<c[u]<<endl;\n\t\t\t}\t\t\t\n\t\t\tfor(int u=n+1;u<=2*n;u++)\n\t\t\t{\n\t\t\t\tmaps[c[u]]=u;//\u8868\u793a\u8fd9\u4e2a\u54c8\u5e0c\u503c\u5bf9\u5e94\u7684\u5728u\u8fd9\u91cc \n\t\t\t} \n\t\t\tfor(int u=1;u<=n;u++)\n\t\t\t{\n\t\t\t\tif(maps[c[u]])//\u8bf4\u660e\u5b58\u5728\u4e0e\u4e4b\u76f8\u540c\u7684\u5b50\u4e32\n\t\t\t\t{\n\t\t\t\t\t\n\t\t\t\t\tflag=1;\n\t\t\t\t\tbreak;\n\t\t\t\t} \n\t\t\t}\n\t\t\tif(flag==0)break;//\u53ea\u8981\u6709\u4e00\u4e2a\u5730\u65b9\u505a\u5230\u4e86\u8fd9\u91cc\u4e0d\u5b58\u5728\u4e00\u4e2aalr=blr\u4e86\uff0c\u5c31\u53ca\u65f6\u8df3\u51fa\u5411\u5de6\u8d70\n\t\t}\n\t\tif(flag==1)\n\t\t\tl=mid+1;//\u5c31\u8bf4\u660e\u7b54\u6848\u8fd8\u8981\u66f4\u5927\u4e00\u4e9b\n\t\telse\n\t\t \tr=mid;\n\t}\n\tcout<<l; \n}\n```\n\n",
        "postTime": 1658756452,
        "uid": 578261,
        "name": "liangchenming",
        "ccfLevel": 0,
        "title": "p3667\u9898\u89e3"
    },
    {
        "content": "updated\uff1a\u4fee\u6539\u4e86\u90e8\u5206\u4e0d\u7b26\u5408\u9898\u89e3\u89c4\u8303\u7684\u6807\u70b9\uff0c\u7ba1\u7406\u5458\u5927\u5927\u8f9b\u82e6\u4e86\uff0c\u6c42\u901a\u8fc7\n\n\u5982\u679c\u6211\u4eec\u901a\u8fc7 hash \u786c\u8dd1\u66b4\u529b\uff0c\u590d\u6742\u5ea6\u662f $O(n^4)$ \u7684\uff0c   $n=500$ \u663e\u7136\u4f1a\u8d85\u65f6,\u6240\u4ee5\u8981\u9010\u6b65\u4f18\u5316\u3002\n\n### Step 1\n\u901a\u8fc7\u89c2\u5bdf\u53ef\u4ee5\u53d1\u73b0\uff0c\u67e5\u8be2 $A,B$ \u5404\u4e32\u7684 hash \u503c\u65f6\u53ef\u4ee5\u5c06\u5176\u4e2d\u4e00\u4e2a\u4e32\u7684 hash \u503c\u6392\u5e8f\uff0c\u7136\u540e\u4ee5\u53e6\u5916\u4e00\u4e2a\u4e32\u7684 \nhash \u503c\u5728\u5176\u4e2d\u67e5\u627e\uff0c\u53ef\u4ee5\u628a\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u5230 \n$O(n^3\\log n)$ \uff0c\u4f46\u663e\u7136\u4e0d\u591f\uff0c\u6240\u4ee5\u9700\u8981\u8fdb\u4e00\u6b65\u4f18\u5316\u3002\n```cpp\nll tmp[n+5];\nfor(int k=1;k<=n;k++)\n\ttmp[k]=gethashb(k,i,j);\nsort(tmp+1,tmp+n+1);\nfor(int k=1;k<=n;k++){\n\tint temp=lower_bound(tmp+1,tmp+1+n,gethasha(k,i,j))-tmp;\n\tif(tmp[temp]==gethasha(k,i,j)){\n\t\tflag=true;\n\t\tbreak;\n\t}\n}\n```\n### Step 2\n\n\u4e0d\u96be\u53d1\u73b0\u5bf9\u4e8e\u4e00\u4e2a\u56fa\u5b9a\u7684\u5de6\u7aef\u70b9\uff0c\u7b54\u6848\u5bf9\u4e8e\u957f\u5ea6\u5177\u6709\u5355\u8c03\u6027\u3002\n\n\u6bd4\u5982\u5bf9\u4e8e\u53f3\u7aef\u70b9\u4e3a $1$ \u7684\u60c5\u51b5\uff0c\u5982\u679c\u5de6\u7aef\u70b9\u5728\u7b2c $i$ \u4e2a\u4f4d\u7f6e $A,B$ \u4e32\u90fd\u4e0d\u76f8\u7b49\uff0c\u90a3\u5bf9\u4e8e\u4efb\u610f\u7684 $j>i$ \uff0c $A,B$ \u4e32\u5747\u4e0d\u76f8\u7b49\u3002\n\n\u6240\u4ee5\u679a\u4e3e\u5de6\u7aef\u70b9\uff0c\u5bf9\u5b50\u4e32\u957f\u5ea6\u8fdb\u884c\u4e8c\u5206\uff0c\u627e\u51fa\u7b26\u5408\u7b54\u6848\u7684\u6700\u5c0f\u89e3\uff0c\u7edf\u8ba1\u5165\u7b54\u6848\u5373\u53ef\uff0c\u6700\u7ec8\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^2\\log^2n)$ \u3002\n\n\u8fd8\u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\u8fd9\u9053\u9898\u7b54\u6848\u7684\u5355\u8c03\u6027\u6709\u6240\u4e0d\u540c\uff0c\u5728\u53f3\u4fa7\u4e8c\u4e0d\u662f\u5de6\u4fa7\uff0c\u6700\u5c0f\u503c\u800c\u4e0d\u662f\u6700\u5927\u503c\u3002\n\n\u849f\u84bb\u7801\u98ce\u4e0d\u4f73\uff0c\u52ff\u55b7\u3002\n```cpp\n#include<bits/stdc++.h>\n#define N 505\n#define B 233\n#define ll long long\nusing namespace std;\n\nconst ll mod=1e9+21;\nint n,m,ans=N+100;\nll p[N],hash_suma[N][N],hash_sumb[N][N];\nstring a[N],b[N];\ninline string getstr();\ninline ll gethasha(int i,int l,int r);\ninline ll gethashb(int i,int l,int r);\n\nint main(){\n\tcin>>n>>m;\n\tp[0]=1;\n\tfor(int i=1;i<=N-2;i++)\n\t\tp[i]=p[i-1]*B%mod;\n\tfor(int i=1;i<=n;i++)\n\t\ta[i]=getstr();\n\tfor(int i=1;i<=n;i++)\n\t\tb[i]=getstr();\n\tfor(int i=1;i<=n;i++){\n\t\thash_suma[i][0]=a[i][0];\n\t\thash_sumb[i][0]=b[i][0];\n\t\tfor(int j=1;j<m;j++){\n\t\t\thash_suma[i][j]=(hash_suma[i][j-1]*B+a[i][j])%mod;\n\t\t\thash_sumb[i][j]=(hash_sumb[i][j-1]*B+b[i][j])%mod;\n\t\t}\n\t}\n\tfor(int i=0;i<m;i++){\n\t\tint l=1,r=m-i;\n\t\tint t=605;\n\t\twhile(l<=r){\n\t\t\tint mid=(l+r)>>1;\n\t\t\tint j=i+mid-1;\n\t\t\tbool flag=false;\n\t\t\tll tmp[n+5];\n\t\t\tfor(int k=1;k<=n;k++)\n\t\t\t\ttmp[k]=gethashb(k,i,j);\n\t\t\tsort(tmp+1,tmp+n+1);\n\t\t\tfor(int k=1;k<=n;k++){\n\t\t\t\tint temp=lower_bound(tmp+1,tmp+1+n,gethasha(k,i,j))-tmp;\n\t\t\t\tif(tmp[temp]==gethasha(k,i,j)){\n\t\t\t\t\tflag=true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(flag) l=mid+1;\n\t\t\telse{\n\t\t\t\tt=min(t,mid);\n\t\t\t\tr=mid-1;\n\t\t\t}\n\t\t}\n\t\tif(t) ans=min(ans,t);\n\t}\n\tcout<<ans;\n} \n\ninline string getstr(){\n\tchar ch=getchar();\n\tstring s=\"\";\n\twhile(ch==' '||ch=='\\n')\n\t\tch=getchar();\n\twhile(ch!=' '&&ch!='\\n')\n\t\ts+=ch,ch=getchar();\n\treturn s;\n}\n\ninline ll gethasha(int i,int l,int r){\n\treturn (hash_suma[i][r]-hash_suma[i][l-1]*p[r-l+1]%mod+mod)%mod;\n}\n\ninline ll gethashb(int i,int l,int r){\n\treturn (hash_sumb[i][r]-hash_sumb[i][l-1]*p[r-l+1]%mod+mod)%mod;\n}\n```",
        "postTime": 1658733061,
        "uid": 510649,
        "name": "Rolling_star",
        "ccfLevel": 0,
        "title": "P3667 Bovine Genomics G \u9898\u89e3"
    },
    {
        "content": "[\u535a\u5ba2\u94fe\u63a5](https://blog.csdn.net/qq_43804974/article/details/110091863)\n\n\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u4e0d\u4e8c\u5206\uff0c\u4e5f\u4e0d\u54c8\u5e0c\uff0c\u7eafdp\u3002~~\u4f46\u662f\u590d\u6742\u5ea6\u771f\u4e0d\u884c~~ \n\u53ef\u4ee5\u77e5\u9053\uff0c\u4ec0\u4e48\u65f6\u5019\u4e00\u4e2a\u8fde\u7eed\u533a\u95f4\u53ef\u4ee5\u4f5c\u4e3a\u7b54\u6848\u5462\uff1f\u524dN\u4e2a\u4e32\u79f0\u4e4b\u4e3aA\u96c6\u5408\uff0c\u540eN \u4e2a\u4e32\u79f0\u96c6\u5408B\u3002\n\n\u5047\u8bbe\u8fd9\u4e2a\u8fde\u7eed\u533a\u95f4\u662f[L,R],\u957f\u5ea6\u662flen\uff0c\u53ea\u6709\u5bf9\u4e8e**\u4efb\u610f\u4e00\u4e2a**A\u4e2d\u7684\u4e32\uff0c\u5728L\u4f4d\u7f6e\u4e0eB\u4e2d\u6240\u6709\u7684\u4e32\u4e00\u4e00\u53bb\u6bd4\u5bf9\uff0c\u6700\u957f\u7684\u76f8\u540c\u7684\u90e8\u5206\u7684\u7684\u957f\u5ea6\u6700\u591a\u53ea\u80fd\u8fbe\u5230len - 1.\n\n\u4e0a\u9762\u4e00\u6bb5\u8bdd\u662f\u6700\u91cd\u8981\u4e5f\u662f\u6211\u4eecdp\u7684\u57fa\u7840\uff0c\u4e3a\u4ec0\u4e48\u6700\u957f\u53ea\u80fd\u8fbe\u5230len - 1,\u5982\u679c\u6700\u957f\u76f8\u7b49\u90e8\u5206\u8fbe\u5230len\u4e5f\u5c31\u662f[L,R]\u6574\u4e2a\u90fd\u4e00\u6837\uff0c\u90a3\u4e48\u6839\u636e\u9898\u610f\u6765\u8bf4\u8fd9\u662f\u4e00\u4e2a\u975e\u6cd5\u7684\u8fde\u7eed\u533a\u95f4\uff0c\u4e0d\u80fd\u591f\u4f5c\u4e3a\u7b54\u6848\u3002\n\n\u8bbef[i][j][z] \u4ee3\u8868A\u96c6\u5408\u91cc\u9762\u7684i\u4e32\u4e0eB\u96c6\u5408\u91cc\u9762\u7684j\u4e32\uff0c\u5728\u4ecez\u4f4d\u7f6e\u5f00\u59cb\u5339\u914d\uff0c\u6700\u957f\u76f8\u540c\u90e8\u5206\u7684\u4e32\u7684\u957f\u5ea6\u3002\n\n\u663e\u7136 \n\u7b2cz\u4f4d\u7684\u5b57\u7b26\u76f8\u540c \u5219f[i][j][z] = f[i][j][z + 1] + 1,\n\n\u7b2cz\u4f4d\u7684\u5b57\u7b26\u4e0d\u76f8\u540c \u5219f[i][j][z] = 0.\n\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2az\uff0c\u6c42\u51fa\u6bcf\u4e00\u4e2ai\u7684f[i][j][z]\u7684\u6700\u5927\u503c\u4e3amaxlen\uff0c\u7136\u540e\u5173\u4e8ez\u5411\u524d\u7684\u533a\u95f4\u7684\u7b54\u6848\u957f\u5ea6\u5c31\u662fmaxlen + 1\uff0c\u6ce8\u610f\u5224\u65ad\u524d\u9762\u6240\u8bf4\u7684\u975e\u6cd5\u60c5\u51b5\u3002\n\n\u5728\u914d\u5408\u4e0a\u6eda\u52a8\u6570\u7ec4\u51cf\u5c11\u7a7a\u95f4\uff0c\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5728O(N^2*M)\u4e0b\u5b8c\u6210\u8fd9\u9898\u3002\u4e0d\u5f00O2\u6700\u5927\u7684\u70b9\u662f540ms\uff0c\u5f00\u4e86O2\u6700\u5927\u7684\u70b9\u662f100ms\uff0c\n\n```cpp\n\nint N, M,f[max_][max_];\nchar node[max_ << 1][max_];\nil void ini() {\n\tN = read(); M = read();\n\tre int len,i, j,z,maxlen,ans = inf,Tm;\n\tfor (i = 1; i <= (N << 1); i++) {\n\t\tscanf(\"%s\", node[i] + 1);\n\t//\tcin >> node[i] + 1;\n\t}\n\tfor (len = 1, i = M; i >= 1; i--, len++) {\n\t\tTm = 0;\n\t\tfor (j = 1; j <= N; j++) {\n\t\t\tmaxlen = 0;\n\t\t\tfor (z = 1; z <= N; z++) {\n\t\t\t\tif (node[j][i] == node[N + z][i]) {\n\t\t\t\t\tf[j][z]++;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tf[j][z] = 0;\n\t\t\t\t}\n\t\t\t\tmaxlen = max(maxlen, f[j][z]);\n\t\t\t}\n\t\t\tTm = max(Tm, maxlen);\n\t\t}\n\t\tif (Tm != len) {\n\t\t\tans = min(ans, Tm + 1);\n\t\t}\n\t}\n\twrite(ans);\n//\tcout << ans;\n}\nsigned main() {\n\tini();\n\treturn 0;\n}\n```\n",
        "postTime": 1606217317,
        "uid": 156874,
        "name": "Boxxxxxx",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3667 \u3010[USACO17OPEN]Bovine Genomics G\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\n\n\u5bf9\u4e8e\u4e24\u7ec4\u5404n\u4e2a\u7684\u5b57\u7b26\u4e32\uff0c\u627e\u5230\u4e00\u4e2a\u533a\u95f4\uff08lef\uff0crig\uff09\u4f7f\u5f97\u533a\u95f4\u957f\u5ea6\u6700\u5c0f\uff0c\u7b2c\u4e00\u7ec4\u5b57\u7b26\u4e32\u4e2d\u6b64\u533a\u95f4\u5bf9\u5e94\u7684\u5b50\u4e32\u4e0e\u7b2c\u4e8c\u7ec4\u4e2d\u7684\u4e0d\u540c\u3002\n\n\u601d\u8def\uff1a\n\n\u4e8c\u5206\u679a\u4e3e\u957f\u5ea6\uff0c\u518d\u679a\u4e3e\u533a\u95f4\u7684\u5f00\u5934\uff0c\u518d\u7528map\u52a0\u4ee5\u5224\u65ad\uff0c\u6574\u4f53\u65f6\u95f4\u590d\u6742\u5ea6O\uff08n ^ 2 * logn ^ 2\uff09\u3002\n\n\u4ee3\u7801\uff1a\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nmap < string , bool > Hash;\n\nint n , m , ans;\nbool flag;\nstring s[1005];//\u56e0\u4e3a\u6709\u4e24\u7ec4\u5b57\u7b26\u4e32\uff0c\u6240\u4ee5\u6570\u7ec4\u591a\u5f00\u4e00\u500d\u3002 \n\nbool check (int lef , int rig) {//\u5224\u65ad\u533a\u95f4\uff08lef \uff0c rig\uff09\u662f\u5426\u7b26\u5408\u6761\u4ef6\u3002 \n\tHash.clear ();\n\tint len = (rig - lef + 1);\n\tfor (int i = 1 ; i <= n ; i++) {\n\t\tstring temp = s[i].substr (lef , len);\n\t\tHash[temp] = 1;\n\t}\n\tfor (int i = n + 1 ; i <= 2 * n ; i++) {\n\t\tstring temp = s[i].substr (lef , len);\n\t\tif (Hash[temp] == 1) {\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 1;\n}\n\nint main () {\n\tios::sync_with_stdio(false);//\u8bfb\u5165\u4f18\u5316 \n\tcout.tie(NULL);\n\tcin >> n >> m;\n\tfor (int i = 1 ; i <= 2 * n ; i++) {//[1 , n] \u8bb0\u5f55\u7b2c\u4e00\u7ec4\u6570\u636e\uff0c[n + 1 , 2 * n] \u8bb0\u5f55\u7b2c\u4e8c\u7ec4\u6570\u636e\u3002 \n\t\tcin >> s[i];\n\t}\n\tint lef = 1 , rig = m , len;\n\twhile (lef <= rig) {//\u4e8c\u5206\u67e5\u627elen \n\t\tlen = (lef + rig) >> 1;\n\t\tflag = 0;\n\t\tfor (int front = 1 ; front + len - 1 <= m ; front++) {//\u679a\u4e3e\u5de6\u7aef\u70b9 \n\t\t\tint last = front + len - 1;\n\t\t\tif (check (front , last) == 1) {\n\t\t\t\tflag = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (flag == 0) {\n\t\t\tlef = len + 1;\n\t\t} else {\n\t\t\tans = len;\n\t\t\trig = len - 1;\n\t\t}\n\t}\n\tcout << ans;\n\treturn 0;\n}\n```\n",
        "postTime": 1579616235,
        "uid": 185756,
        "name": "whc2020",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3667 \u3010[USACO17OPEN]Bovine Genomics G\u5976\u725b\u57fa\u56e0\u7ec4\uff08\u91d1\uff09\u3011"
    },
    {
        "content": "[$blog$](http://www.cnblogs.com/henry-1202)\n\n\u6211\u7684\u505a\u6cd5\u662f$O(nmlog^2n)$\u7684\u3002\n\n\u5148\u628a\u5b57\u7b26\u4e32hash\u6389\uff0c\u7136\u540e\u8fd9\u4e2a\u5224\u65ad\u53ef\u884c\u4e00\u770b\u5c31\u77e5\u9053\u662f\u53ef\u4ee5\u4e8c\u5206\u7684\u3002\u90a3\u5c31\u4e8c\u5206\u4e00\u6ce2\u7b54\u6848\u3002\u5224\u65ad\u90a3\u91cc\uff0c\u8003\u8651\u7528set\u6765\u7ef4\u62a4\u76f8\u540chash\u503c\u3002\n\n\u679a\u4e3e\u957f\u5ea6\u4e3ax\uff08\u4e8c\u5206\u7684\u503c\uff09\u7684\u533a\u95f4\uff0c\u7136\u540e\u5c06A\u4e32\u91cc\u9762\u8fd9\u4e2a\u533a\u95f4\u7684hash\u503c\u585e\u8fdbset\u91cc\u9762\u3002\u5bf9\u6bcf\u4e2aB\u4e32\u5728set\u91cc\u9762find\u4e00\u4e0b\u8fd9\u4e2a\u5b57\u4e32\u6709\u6ca1\u6709\u51fa\u73b0\u8fc7\u5373\u53ef\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define inf 0x3f3f3f3f\n#define il inline\n#define ull unsigned long long\n\nnamespace io {\n\n#define in(a) a = read()\n#define out(a) write(a)\n#define outn(a) out(a), putchar('\\n')\n\n#define I_int ll\ninline I_int read() {\n    I_int x = 0, f = 1;\n    char c = getchar();\n    while (c < '0' || c > '9') {\n        if (c == '-') f = -1;\n        c = getchar();\n    }\n    while (c >= '0' && c <= '9') {\n        x = x * 10 + c - '0';\n        c = getchar();\n    }\n    return x * f;\n}\nchar F[200];\ninline void write(I_int x) {\n    if (x == 0) return (void) (putchar('0'));\n    I_int tmp = x > 0 ? x : -x;\n    if (x < 0) putchar('-');\n    int cnt = 0;\n    while (tmp > 0) {\n        F[cnt++] = tmp % 10 + '0';\n        tmp /= 10;\n    }\n    while (cnt > 0) putchar(F[--cnt]);\n}\n#undef I_int\n\n}\nusing namespace io;\n\nusing namespace std;\n\n#define N 510\n#define base 13131\n\nint n = read(), m = read();\nchar s[N][N], t[N][N];\null h1[N][N], h2[N][N], p[N];\nset<ull>S;\n\null get(ull *h, int l, int r) {\n\treturn h[r] - h[l-1] * p[r-l+1];\n}\n\nbool check(int x) {\n\tbool ans = 0;\n\tfor(int l = 1; l + x - 1 <= m; ++l) {\n\t\tint r = l + x - 1, flag = 0;\n\t\tS.clear();\n\t\tfor(int i = 1; i <= n; ++i) {\n\t\t\tS.insert(get(h1[i], l, r));\n\t\t}\n\t\tfor(int i = 1; i <= n; ++i) {\n\t\t\tif(S.find(get(h2[i], l, r)) != S.end()) {\n\t\t\t\tflag = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!flag) {\n\t\t\tans = 1;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn ans;\n}\n\nint main() { \n\tfor(int i = 1; i <= n; ++i) scanf(\"%s\",s[i]+1);\n\tfor(int i = 1; i <= n; ++i) scanf(\"%s\",t[i]+1);\n\tp[0] = 1;\n\tfor(int i = 1; i <= m; ++i) p[i] = p[i - 1] * base;\n\tfor(int i = 1; i <= n; ++i) {\n\t\tfor(int j = 1; j <= m; ++j) h1[i][j] = h1[i][j-1]*base+(ull)s[i][j];\n\t\tfor(int j = 1; j <= m; ++j) h2[i][j] = h2[i][j-1]*base+(ull)t[i][j]; \n\t}\n\tint l = 1, r = m, ans = m;\n\twhile(l <= r) {\n\t\tint mid = (l + r) >> 1;\n\t\tif(check(mid)) ans = mid, r = mid - 1;\n\t\telse l = mid + 1;\n\t}\n\toutn(ans);\n\treturn 0;\n}\n```",
        "postTime": 1554016071,
        "uid": 36526,
        "name": "henry_y",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3667 \u3010[USACO17OPEN]Bovine Genomics G\u5976\u725b\u57fa\u56e0\u7ec4\uff08\u91d1\uff09\u3011"
    },
    {
        "content": "\u901a\u8fc7\u89c2\u5bdf\u53d1\u73b0\u7b54\u6848\u5177\u6709\u5355\u8c03\u6027,\u5e76\u4e14\u51fa\u73b0\u6ee1\u8db3\u67d0\u4e00\u6761\u4ef6\u7684\u6700\u5c0f\u503c\u8fd9\u6837\u7684\u5b57\u6837,\u4e8e\u662f\u53ef\u4ee5\u8003\u8651\u7528\u4e8c\u5206\u8fdb\u884c\u4f18\u5316,\u5373\u4e8c\u5206\u7b26\u5408\u7684\u7b54\u6848,\u5e76\u5bf9\u7b54\u6848\u8fdb\u884c\u5224\u65ad\u662f\u5426\u53ef\u884c,\u4e8e\u662f\u6c42\u89e3\u95ee\u9898\u8f6c\u5316\u4e3a\u4e86\u5224\u65ad\u53ef\u884c\u6027\u95ee\u9898.\r\n\r\n\u5224\u65ad\u90e8\u5206\u601d\u8def:\r\n\r\n\u4e00:\u770b\u5230\u9898\u76ee\u5927\u6982\u610f\u601d\u662f\u8981\u5927\u6570\u91cf\u7684\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u76f8\u7b49,\u7b2c\u4e00\u53cd\u5e94\u5c31\u662f\u5b57\u7b26\u54c8\u5e0c(\u907f\u514d\u4f4e\u6548\u5faa\u73af\u5224\u65ad),\u5982\u679c\u5b57\u7b26\u54c8\u5e0c\u4e0d\u660e\u767d\u53ef\u4ee5\u53c2\u8003\u697c\u4e0b\u5927\u4f6c\u9898\u89e3.\r\n\r\n\u4e8c:\u5728\u679a\u4e3e\u8d77\u70b9\u7684\u8fc7\u7a0b\u4e2d,\u53ef\u4ee5\u9884\u5148\u7528\u4e00\u4e2a\u6876\u6765\u88c5\u6240\u6709\u6591\u70b9\u725b\u7684\u54c8\u5e0c\u503c,\u7136\u540e\u518d\u5bf9\u7eaf\u9ed1\u7684\u725b\u8fdb\u884c\u626b\u63cf,\u82e5\u53d1\u73b0\u7eaf\u9ed1\u725b\u5bf9\u5e94\u7684\u54c8\u5e0c\u503c\u88ab\u5360\u4e86,\u5373\u53ef\u8ba4\u4e3a\u6709\u4e24\u5b50\u4e32\u662f\u76f8\u7b49\u7684,\u4e8e\u662f\u4fbf\u53ef\u4ee5\u76f4\u63a5\u9000\u51fa\u5faa\u73af\u5e76\u6362\u81f3\u4e0b\u4e00\u4e2a\u8d77\u70b9.\u81f3\u4e8e\u5bf9\u6876\u7684\u6e05\u7a7a,\u56e0\u4e3a\u5bf9\u6bcf\u4e00\u4e2a\u8d77\u70b9\u7684\u5224\u65ad\u4e2d\u603b\u5171\u9700\u8981\u5360\u7528\u6876\u4e2a\u6570\u6700\u591a\u4e0d\u8d85\u8fc7\u4e94\u767e,\u7528\u6e05\u7a7a\u51fd\u6570\u663e\u7136\u65f6\u95f4\u4e0d\u5212\u7b97,\u4e8e\u662f\u53ef\u4ee5\u8003\u8651\u7528\u4e00\u4e2a\u6570\u7ec4\u6765\u88c5\u6709\u54ea\u4e9b\u6876\u88ab\u5360\u7528\u4e86,\u9000\u51fa\u5faa\u73af\u540e\u76f4\u63a5\u4ece\u6570\u7ec4\u91cc\u53d6\u6570\u51fa\u6765\u4e00\u4e2a\u4e2a\u5c06\u6876\u6e05\u7a7a\u5373\u53ef.\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\u4e0d\u80fd\u7528\u65e0\u7b26\u53f7\u957f\u6574\u578b\u6765\u7701\u7565\u53d6\u6a21\u8fc7\u7a0b(\u56e0\u4e3a\u6876\u4e0d\u80fd\u5f00\u90a3\u4e48\u5927),\u4f46\u662f\u65f6\u95f4\u4e0a\u5176\u5b9e\u662f\u8981\u5feb\u7684.\r\n\r\n\u4e09:\u5f53\u627e\u5230\u4e00\u4e2a\u8d77\u70b9\u7b26\u5408\"\u6709\u6591\u70b9\u7684\u725b\u8fd9\u90e8\u5206\u7684\u5b50\u4e32,\u4e0d\u80fd\u548c\u65e0\u6591\u70b9\u7684\u725b\u7684\u8fd9\u90e8\u5206\u5b50\u4e32\u76f8\u540c\"\u8981\u6c42\u65f6,\u5373\u53ef\u9000\u51fa\u51fd\u6570,\u7f29\u5c0f\u533a\u95f4\u7b54\u6848,\u8fd9\u53ef\u4ee5\u7b97\u662f\u4e00\u4e2a\u5c0f\u526a\u679d.\r\n\r\n\u6700\u540e\u5949\u4e0a\u4ee3\u7801(\u7b2c\u4e00\u7bc7\u9898\u89e3,\u4e0d\u597d\u7684\u5730\u65b9\u6b22\u8fce\u6307\u51fa):\r\n```cpp\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nint N,M,l=1,r,mid,memr[510],cnt=1;//memr\u6570\u7ec4\u4e3a\u8bb0\u5f55\u6570\u7ec4 \r\nconst int INI=9999991;//INI\u8fdb\u5236\u6570 \r\nchar str1[1001][510];//\u88c5\u4e24\u79cd\u725b\u57fa\u56e0 \r\nlong long hash1[1001][510],p[510];//\u54c8\u5e0c\u548c\u5bf9\u5e94\u5e42 \r\nbool pd[INI+1000];//\u6876 \r\nbool ck(int nn){\r\n\tfor(int j=1;j<=M-nn+1;j++){//\u679a\u4e3e\u8d77\u70b9\uff0c\u5207\u8bb0\u52a0\u4e0a\u957f\u5ea6\u540e\u4e0d\u80fd\u8d85\u8fc7M \r\n\t\tbool bj=false;\r\n\t\tfor(int i=1;i<=N;i++){\r\n\t\t\tpd[(((hash1[i][j+nn-1]-hash1[i][j-1]*p[nn])%INI)+INI)%INI]=true;//\u88c5\u6876 \r\n\t\t\tmemr[cnt++]=(((hash1[i][j+nn-1]-hash1[i][j-1]*p[nn])%INI)+INI)%INI;//\u8bb0\u5f55\u54ea\u4e9b\u6876\u88ab\u88c5\u4e86 \r\n\t\t\t//(\u6ce8\u610f\u67d0\u5b50\u4e32\u7684\u54c8\u5e0c\u503c\u6709\u53ef\u80fd\u662f\u8d1f\u6570\uff0c\u6240\u4ee5\u8981\u52a0\u4e0aINI\u518d\u53d6\u6a21\uff0c\u4e0d\u7136\u4f1aRE)\r\n\t\t}\r\n\t\tfor(int i=N+1;i<=2*N;i++){//\u5bf9\u7eaf\u9ed1\u725b\u5224\u65ad \r\n\t\t\tif(pd[(((hash1[i][j+nn-1]-hash1[i][j-1]*p[nn])%INI)+INI)%INI]){\r\n\t\t\t\tbj=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(!bj)return true;//\u5c0f\u526a\u679d \r\n\t\tfor(int i=1;i<cnt;i++){//\u6062\u590d\u6876\u548c\u8bb0\u5f55\u6570\u7ec4 \r\n\t\t\tpd[memr[i]]=false;\r\n\t\t\tmemr[i]=0;\r\n\t\t}\r\n\t\tcnt=1;\r\n\t}\r\n\treturn false;\t\r\n}\r\nint main(){\r\n\tcin>>N>>M;\r\n\tp[0]=1;//\u5207\u8bb0\u5207\u8bb0\uff0c\u4e00\u4e2a\u975e\u96f6\u6570\u7684\u96f6\u6b21\u5e42\u662f1 \r\n\tfor(int i=1;i<=M;i++)p[i]=(p[i-1]*131)%INI;//\u9884\u5904\u7406\u5e42\u6b21 \r\n\tfor(int i=1;i<=2*N;i++)\r\n\t\tfor(int j=1;j<=M;j++)cin>>str1[i][j];//\u8bfb\u5165\u57fa\u56e0 \r\n\tfor(int i=1;i<=2*N;i++)\r\n\t\tfor(int j=1;j<=M;j++)hash1[i][j]=(hash1[i][j-1]*131+(str1[i][j]-'A'+1))%INI;//\u54c8\u5e0c\u9884\u5904\u7406 \r\n\tr=M;\r\n\twhile(l<r){//\u4e8c\u5206 \r\n\t\tmid=(l+r)>>1;\r\n\t\tif(ck(mid))r=mid;\r\n\t\telse l=mid+1;\r\n\t} \r\n\tprintf(\"%d\",l);//\u8f93\u51fa\u7b54\u6848 \r\n\treturn 0;\r\n}\r\n```\r\n",
        "postTime": 1682735228,
        "uid": 376827,
        "name": "FCJ666",
        "ccfLevel": 0,
        "title": "\u5b57\u7b26\u54c8\u5e0c+\u4e8c\u5206+\u6876\u4f18\u5316"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u79cd\u5e38\u6570\u8f83\u5c0f\u7684\u89e3\u6cd5\u3002\n\n[\u8be6\u7ec6\u9898\u610f](https://www.luogu.com.cn/discuss/157857)\u3002\n\n\u770b\u5230\u8fd9\u9053\u9898\u76ee\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u7684\u89e3\u51b3\u65b9\u6848\u662f\u679a\u4e3e\u957f\u5ea6\uff0c\u7136\u540e\u628a\u4e00\u7c7b\u5b57\u7b26\u4e32\u91cc\u9762\u7684\u5b57\u4e32\u62ff\u51fa\u6765\uff0c\u548c\u4e8c\u7c7b\u5b57\u4e32\u8fdb\u884c\u6bd4\u8f83\u3002\n\n\u6bd4\u8f83\u7684\u8bdd\u53ef\u4ee5\u5229\u7528 hash \u5b9e\u73b0\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n^3)$\uff0c\u8fd8\u6709\u53ef\u80fd\u4f1a\u7206\u7a7a\u95f4\uff0c\u5982\u679c\u4f60\u7528\u53e6\u7c7b STL \u5b9e\u73b0 hash \u5224\u91cd\u9700\u8981\u591a\u53ea $\\log$\uff0c\u5b8c\u5168\u8dd1\u4e0d\u8fc7\u53bb\u3002\n\n\u6211\u4eec\u6765\u5bfb\u627e\u6700\u4f18\u7b54\u6848\uff0c\u4ed6\u80af\u5b9a\u662f\u4e00\u6bb5\u5b50\u4e32\uff0c\u5bf9\u4e8e\u5305\u542b\u4ed6\u7684\u5b50\u4e32\u4e5f\u5fc5\u5b9a\u6210\u7acb\u3002\n\n\u56e0\u6b64\u5177\u6709\u5355\u8c03\u6027\uff0c\u53ef\u4ee5\u8fdb\u884c\u4e8c\u5206\u7b54\u6848\uff0c\u7136\u540e\u5224\u91cd\uff0c\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662f $O(n^2 \\log n)$\uff0c\u6216\u8005\u5b9e\u73b0\u4e0d\u597d\u53ef\u80fd\u4f1a\u4e24\u53ea $\\log$\uff0c\u5177\u4f53\u4ee3\u7801\u53ef\u4ee5\u7ffb\u6211\u7684\u63d0\u4ea4\u8bb0\u5f55\u3002\n\n\u5f53\u7136\uff0c\u6211\u4eec\u9700\u8981\u505a\u7684\u662f\u8fdb\u4e00\u6b65\u8fdb\u884c\u4f18\u5316\uff0c\u4e8c\u5206\u7b54\u6848\u662f\u7ef4\u62a4\u4e00\u6bb5\u533a\u95f4\uff0c\u4e8b\u5b9e\u4e0a\u6709\u66f4\u52a0\u4f18\u79c0\u7684\u65b9\u6cd5\u6765\u4ee3\u66ff\u8fd9\u79cd\uff0c\u5c31\u662f\u679a\u4e3e\u5de6\u7aef\u70b9\u7b97\u51fa\u53ef\u884c\u7684\u6700\u5de6\u8fb9\u7684\u53f3\u7aef\u70b9\uff0c\u7136\u540e\u5bf9\u4e8e\u4e0b\u4e00\u4e2a\u5de6\u7aef\u70b9\u8fdb\u884c\u7ee7\u627f\u64cd\u4f5c\uff0c\u5355\u8c03\u6027\u548c\u4e8c\u5206\u7b54\u6848\u4e00\u6837\u3002\n\n\u5982\u679c\u8fd9\u6837\u5b9e\u73b0\u7684\u8bdd\u5c31\u53ef\u4ee5\u62ff\u6389\u4e00\u53ea $\\log$\uff0c\u590d\u6742\u5ea6\u662f $O(n^2)$ \u7684\uff0c~~\u4f46\u662f\u6211\u5b9e\u73b0\u7684\u4e0d\u591f\u4f18\u79c0\uff0c\u8fd8\u662f\u53d8\u6210\u4e86 $O(n^2 \\log n)$~~\u3002\n\n\u8fd9\u91cc\u4ecb\u7ecd\u51e0\u79cd\u5361\u5e38\u65b9\u5f0f\uff0c\u7528 map set \u7b49 STL \u5e38\u6570\u771f\u7684\u5f88\u5927\uff0c\u6211\u4eec\u628a\u54c8\u5e0c\u7684\u4e1c\u897f\u5b58\u5230\u4e00\u4e2a\u6570\u7ec4\u91cc\u9762\uff0c\u7136\u540e\u8fdb\u884c lower_bound \u67e5\u627e\u662f\u5426\u51fa\u73b0\uff0c\u5f53\u7136\u524d\u63d0\u662f\u8981\u6392\u5e8f\u3002\n\n\u8fd9\u6837\u5e38\u6570\u4ee5\u53ca\u591f\u5c0f\u4e86\uff0c\u5982\u679c\u8fd8\u4e0d\u6ee1\u610f\u53ef\u4ee5\u628a\u53d6\u6a21\u54c8\u5e0c\u6539\u6210\u81ea\u7136\u6ea2\u51fa\uff0c\u8fd9\u6837\u4e5f\u4f1a\u51cf\u5c0f\u5e38\u6570\u3002\n\n\u76ee\u524d\u6211\u5728\u6700\u4f18\u89e3 rk2\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nconst int INF=505;\nconst int base=233;\nint n,m;\nstring s1[INF],s2[INF];\nunsigned long long ba[INF],hash1[INF][INF],hash2[INF][INF],p[INF];\nunsigned long long  Get1(int x,int l,int r) {return (hash1[x][r]-hash1[x][l-1]*ba[r-l+1]);}\nunsigned long long  Get2(int x,int l,int r) {return (hash2[x][r]-hash2[x][l-1]*ba[r-l+1]);} \nbool check(int len) {\n\tfor (int i=1;i+len-1<=m;i++) {\n\t\tp[0]=0;\n\t\tfor (int j=1;j<=n;j++)\n\t\t\tp[++p[0]]=Get1(j,i,i+len-1);\n\t\tsort(p+1,p+1+p[0]);int fl=0;\n\t\tfor (int j=1;j<=n;j++) {\n\t\t\tunsigned long long xx=Get2(j,i,i+len-1);\n\t\t\tint it=lower_bound(p+1,p+1+p[0],xx)-p;\n\t\t\tif (p[it]==xx) {fl=1;break;}\n\t\t}\n\t\tif (!fl) return 1;\n\t}\n\treturn 0;\n}\nsigned main()\n{\n\tios::sync_with_stdio(false);\n\tcin>>n>>m;ba[0]=1;\n\tfor (int i=1;i<=m;i++) ba[i]=ba[i-1]*base;\n\tfor (int i=1;i<=n;i++) {\n\t\tcin>>s1[i];s1[i]=\" \"+s1[i];\n\t\tfor (int j=1;j<=m;j++)\n\t\t\thash1[i][j]=(hash1[i][j-1]*base+s1[i][j]);\n\t}\n\tfor (int i=1;i<=n;i++) {\n\t\tcin>>s2[i];s2[i]=\" \"+s2[i];\n\t\tfor (int j=1;j<=m;j++)\n\t\t\thash2[i][j]=(hash2[i][j-1]*base+s2[i][j]);\n\t}\n//\tcout<<check(2)<<\" ?\\n\";\n//\tint l=1,r=m,ans=-1;\n//\twhile (l<=r) {\n//\t\tint Mid=(l+r)>>1;\n//\t\tif (check(Mid)) r=(ans=Mid)-1;\n//\t\telse l=Mid+1;\n//\t}\n//\tcout<<ans<<\"\\n\";\n\tint r=1,ans=1e9;\n\tfor (int i=1;i<=m;i++) {\n\t\tint cnt=0;\n\t\twhile (r+1<=m) {\n\t\t\tp[0]=0;\n\t\t\tfor (int j=1;j<=n;j++)\n\t\t\t\tp[++p[0]]=Get1(j,i,r);\n\t\t\tsort(p+1,p+1+p[0]);int fl=0;\n\t\t\tfor (int j=1;j<=n;j++) {\n\t\t\t\tunsigned long long xx=Get2(j,i,r);\n\t\t\t\tint it=lower_bound(p+1,p+1+p[0],xx)-p;\n\t\t\t\tif (p[it]==xx) {fl=1;break;}\n\t\t\t}\n\t\t\tif (!fl) {cnt=1;break;}\n\t\t\tr++;\n\t\t}\n\t\tif (cnt) ans=min(ans,r-i+1);\n\t}\n\tcout<<ans<<\"\\n\"; \n\treturn 0;\n}\n```\n",
        "postTime": 1662517390,
        "uid": 208653,
        "name": "_edge_",
        "ccfLevel": 0,
        "title": "P3667"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P3667)\n\n\u4ecb\u7ecd\u4e00\u79cd $O(n^2)$ \u7684\u7b97\u6cd5\u3002\n\n\u7b80\u5355\u6d4f\u89c8\u9898\u76ee\uff0c\u53d1\u73b0\u662f\u4e2a\u5b57\u7b26\u4e32\u9898\uff0c\u81ea\u7136\u60f3\u5230\u54c8\u5e0c\u3002\n\n\u5148\u8003\u8651\u5982\u4f55\u5224\u65ad\u533a\u95f4 $l$ \u5230 $r$ \u662f\u7b26\u5408\u6761\u4ef6\uff0c\u628a\u524d\u9762 $n$ \u4e2a\u4e32 $l$ \u5230 $r$ \u7684\u54c8\u5e0c\u503c\u653e\u5230 `unordered_set` \u91cc\u9762\uff0c\u67e5\u8be2\u540e\u9762 $n$ \u4e2a\u4e32\u7684\u54c8\u5e0c\u503c\u662f\u5426\u51fa\u73b0\u8fc7\u3002\u590d\u6742\u5ea6 $O(n)$\u3002\n\n\u7136\u540e\u8003\u8651\u600e\u4e48\u679a\u4e3e $l$\uff0c$r$\u3002\u8fd9\u91cc\u5c31\u662f\u4e2a\u5957\u8def\uff0c[\u6ed1\u52a8\u7a97\u53e3](https://www.luogu.com.cn/problem/P1886)\uff0c\u4e0d\u4f1a\u7684\u53ef\u4ee5\u53bb\u5b66\u4e60\u4e00\u4e0b\u3002\u7531\u4e8e $r$ \u5728\u52a0\uff0c$l$ \u5728\u52a0\uff0c\u679a\u4e3e\u7684\u590d\u6742\u5ea6\u662f $O(n)$\u3002\n\n\u6240\u4ee5\u603b\u7684\u590d\u6742\u5ea6\u662f $O(n^2)$\u3002\n\n\u76ee\u524d\u6392\u884c\u699c\uff1a[\u7b2c\u4e09](https://www.luogu.com.cn/record/79728398)\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\ntypedef unsigned long long ull;\nconst int N=503;\null n,m,q[N],X[N][N],Y[N][N];\nint O(char x)\n{\n\tif(x=='A')return 1;\n\tif(x=='C')return 2;\n\tif(x=='G')return 3;\n\tif(x=='T')return 4; \n}\nbool C(int l,int r)\n{\n\tunordered_set<ull> k;\n    for(int i=1;i<=n;i++)\n        k.insert(X[i][r]-X[i][l-1]*q[r-l+1]);\n    for(int i=1;i<=n;i++)\n        if(k.count(Y[i][r]-Y[i][l-1]*q[r-l+1]))return 1;\n    return 0;\n}\nint main()\n{\n\tios::sync_with_stdio(false),cin.tie(0);\n    cin>>n>>m;q[0]=1;\n    for(int i=1;i<N;i++)q[i]=q[i-1]*5;\n    for(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t    char x;cin>>x;\n\t\t\tX[i][j]=X[i][j-1]*5+O(x);\n\t\t}\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n        {\n        \tchar x;cin>>x;\n            Y[i][j]=Y[i][j-1]*5+O(x);\n        }\n    int s=1e9;\n    for(int l=1,r=1;l<=m&&r<=m;l++)\n    {\n    \twhile(C(l,r)==1&&r<=m)r++;\n    \ts=min(s,r-l+1);\n\t}\n\tcout<<s<<endl;\n    return 0;\n}\n```",
        "postTime": 1657890045,
        "uid": 178992,
        "name": "Hanghang",
        "ccfLevel": 0,
        "title": "P3667 \u9898\u89e3"
    },
    {
        "content": "\u9996\u5148\u8fd9\u9898\u53ef\u4ee5\u679a\u4e3e\u533a\u95f4\u957f\u5ea6\uff0c\u7136\u540e\u679a\u4e3e\u5de6\u7aef\u70b9\uff0c\u5c06\u524d\u4e00\u534ahash\u503c\u653e\u5165map\u4e2d\uff0c\u518d\u7b97\u540e\u4e00\u534a\u7684hash\u503c\uff0c\u8fd9\u6837\u590d\u6742\u5ea6\u662fn^3\n\n\u663e\u7136\u82e5x\u6ee1\u8db3\u6761\u4ef6\uff0c\u5219x+1\u4e5f\u6ee1\u8db3\u6761\u4ef6\uff0c\u6545\u53ef\u4ee5\u4e8c\u5206\u533a\u95f4\u957f\u5ea6\n\nhash\u503c\u53ef\u4ee5\u7528hash[r]-hash[l-1]*pow(prime,r-l+1)\u5f97\u5230\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxN=500+10,base=131,mod=1e9+7;\nchar s1[maxN][maxN],s2[maxN][maxN];\nint n,m,h1[maxN][maxN],h2[maxN][maxN],mul[maxN];\nmap<int,bool>ma;\nbool check(int len){\n\tbool out=false;\n\tfor(int i=1;i+len-1<=m;i++){\n\t\tma.clear();\n\t\tbool flag=true;\n\t\tfor(int j=1;j<=n;j++) \n\t\t\tma[(h1[j][i+len-1]-1ll*h1[j][i-1]*mul[len]%mod+mod)%mod]=true;\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tif(ma.count((h2[j][i+len-1]-1ll*h2[j][i-1]*mul[len]%mod+mod)%mod)){\n\t\t\t\tflag=false;break;\n\t\t\t}\n\t\tif(flag){\n\t\t\tout=true;break;\n\t\t}\n\t}\n\treturn out;\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)scanf(\"%s\",s1[i]+1);\n\tfor(int i=1;i<=n;i++)scanf(\"%s\",s2[i]+1);\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=m;j++){\n\t\th1[i][j]=(1ll*h1[i][j-1]*base+s1[i][j])%mod;\n\t\th2[i][j]=(1ll*h2[i][j-1]*base+s2[i][j])%mod;\n\t}\n\tmul[0]=1;for(int i=1;i<=m;i++) mul[i]=1ll*mul[i-1]*base%mod;\n\tcheck(1); \n\tint l=1,r=m,ans=0;\n\twhile(l<=r){\n\t\tint mid=(l+r)>>1;\n\t\tif(check(mid)) ans=mid,r=mid-1;\n\t\telse l=mid+1;\n\t}\n\tprintf(\"%d\\n\",ans);\n\treturn 0; \n} \n```",
        "postTime": 1572425334,
        "uid": 39638,
        "name": "\u6851\u6811\u4e0b\u7684\u9082\u9005",
        "ccfLevel": 7,
        "title": "P3667\u9898\u89e3"
    },
    {
        "content": "[\u67e5\u770b\u539f\u9898\u8bf7\u6233\u8fd9\u91cc](https://www.luogu.org/problem/P3667)\n\n\u9996\u5148\uff0c\u8fd9\u9053\u9898\u8ba9\u6c42\u6700\u5927\u503c\u6700\u5c0f\uff0c\u4e8e\u662f\u6211\u4eec\u5c31\u5f88\u81ea\u7136\u5f97\u60f3\u5230\u4e86\u53bb\u4e8c\u5206\u8fd9\u4e2a\u6700\u5c0f\u503c\u3002\n\n\u90a3\u4e48\uff0c\u600e\u4e48check\u5462\uff1f\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5982\u679c\u76f4\u63a5\u66b4\u529b\u53bbcheck\uff0c\u5373\u4e8c\u5206\u533a\u95f4\u957f\u5ea6+\u66b4\u529b\u679a\u4e3e\u5b57\u7b26\u4e32+\u66b4\u529b\u679a\u4e3e\u533a\u95f4\u5de6\u7aef\u70b9+\u66b4\u529b\u5bf9\u6bd4\uff0c\u90a3\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(n^2m^2\\log_2n)$\u7684\u3002\uff08\u5f15\u4eba\u6df1\u601d\u7684\u590d\u6742\u5ea6\u2026\u2026\uff09\n\n\u5f88\u663e\u7136\uff0c\u6211\u4eec\u9700\u8981\u53bb\u4f18\u5316\u8fd9\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n\n\u9996\u5148\uff0c\u5982\u679c\u6211\u4eec\u5bf9\u8981\u8fdb\u884c\u5bf9\u6bd4\u7684\u533a\u95f4\u8fdb\u884c\u54c8\u5e0c\uff0c\u7136\u540e\u7528set\u8fdb\u884c\u5224\u65ad\uff0c\u5c31\u53ef\u4ee5\u5c06\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u4f4e\u5230$O(nm^2\\log_2^2n)$\u3002\n\n\u8fd9\u91cc\u63d0\u4f9b\u4e24\u79cd\u7528set\u53bb\u68c0\u9a8c\u7684\u601d\u8def\uff1a\n\n1. \u7528\u4e00\u4e2aset\u53bb\u8bb0\u5f55\u597d\u7684\u57fa\u56e0\u6709\u591a\u5c11\u4e0d\u540c\u7684\u54c8\u5e0c\u503c$cnt1$\uff0c\u518d\u7528\u4e00\u4e2aset\u53bb\u8bb0\u5f55\u574f\u7684\u57fa\u56e0\u6709\u591a\u5c11\u4e0d\u540c\u7684\u54c8\u5e0c\u503c$cnt2$\uff0c\u518d\u7528\u4e00\u4e2aset\u53bb\u8bb0\u5f55\u597d\u7684\u57fa\u56e0\u548c\u574f\u7684\u57fa\u56e0\u4e00\u5171\u6709\u591a\u5c11\u4e0d\u540c\u7684\u54c8\u5e0c\u503c$cnt3$\uff0c\u5982\u679c$cnt3-cnt1=cnt2$\uff0c\u90a3\u4e48\u597d\u7684\u57fa\u56e0\u7684\u54c8\u5e0c\u503c\u548c\u574f\u7684\u57fa\u56e0\u7684\u54c8\u5e0c\u503c\u6ca1\u6709\u91cd\u590d\u3002\n2. \u7528\u4e00\u4e2aset\u53bb\u50a8\u5b58\u597d\u7684\u57fa\u56e0\u7684\u54c8\u5e0c\u503c\uff0c\u7136\u540e\u7528set\u81ea\u5e26\u7684find\u51fd\u6570\u67e5\u8be2\u6bcf\u4e00\u4e2a\u574f\u7684\u57fa\u56e0\u7684\u54c8\u5e0c\u503c\u662f\u5426\u5728\u8fd9\u4e2a\u96c6\u5408\u4e2d\u51fa\u73b0\u8fc7\u3002\n\n\u4f46\u662f\uff0c\u5373\u4fbf\u5982\u6b64\uff0c\u6211\u4eec\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4f9d\u7136\u65e0\u6cd5\u901a\u8fc7\u8fd9\u9053\u9898\uff0c\u4e3b\u8981\u539f\u56e0\u662f\u6bcf\u6b21\u8bb0\u5f55\u54c8\u5e0c\u503c\u90fd\u5360\u7528\u4e86\u5927\u91cf\u7684\u65f6\u95f4\u3002\n$hash[i]-hash[j-1]\\times pri^{i-j+1}(i>j)$\u5feb\u901f\u6c42\u5f97$hash[i][j]$\u7684\u503c\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(nm\\log_2 n)$\n\ncode:\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<set>\n#define ll long long\n#define INF 0x7fffffff\n#define re register\n#define rep(i,a,b) for(int i = (a); i <= (b); i++)\n#define qwq printf(\"qwq\\n\");\n#define mod1 122420729\n#define mod2 131937371\n\nusing namespace std;\n\nint read()\n{\n\tregister int x = 0,f = 1;register char ch;\n\tch = getchar();\n\twhile(ch > '9' || ch < '0'){if(ch == '-') f = -f;ch = getchar();}\n\twhile(ch <= '9' && ch >= '0'){x = x * 10 + ch - 48;ch = getchar();}\n\treturn x * f;\n}\n\nint n,m,l,r,mid,cnt1,cnt2,cnt3;\n\nlong long hfg[505][505],hfb[505][505],a[505],b[505],c[505];\n\nchar good[505][505],bad[505][505];\n\nvoid Hash()\n{\n\tmemset(hfg,0,sizeof(hfg));\n\tmemset(hfb,0,sizeof(hfb));\n\tfor(register int i = 0; i < n; i++) hfg[i][0] = good[i][0];\n\tfor(register int i = 0; i < n; i++) hfb[i][0] = bad[i][0];\n\tfor(register int i = 0; i < n; i++)\n\t\tfor(register int j = 1; j < m; j++)\n\t\t\thfg[i][j] = hfg[i][j - 1] * 13331 + good[i][j];\n\tfor(register int i = 0; i < n; i++)\n\t\tfor(register int j = 1; j < m; j++)\n\t\t\thfb[i][j] = hfb[i][j - 1] * 13331 + bad[i][j];\n}\n\nvoid get_Hash(int s,int l)\n{\n\tif(s == 0)\n\t{\n\t\tfor(int i = 0; i < n; i++) a[i] = hfg[i][l - 1];\n\t\tfor(int i = 0; i < n; i++) b[i] = hfb[i][l - 1];\n\t\treturn ;\n\t}\n\tfor(int i = 0; i < n; i++) a[i] = hfg[i][s + l - 1] - hfg[i][s - 1] * c[l];\n\tfor(int i = 0; i < n; i++) b[i] = hfb[i][s + l - 1] - hfb[i][s - 1] * c[l];\n}\n\nset<int> se1,se2,se3;\n\nbool check(int l)\n{\n\tfor(register int i = 0; i + l - 1 < m; i++)\n\t{\n\t\tget_Hash(i,l);\n\t\tint flag = 1;\n\t\tse1.clear(); se2.clear(); se3.clear();\n\t\tfor(register int j = 0; j < n; j++) se1.insert(a[j]),se3.insert(a[j]);\n\t\tcnt1 = se1.size();\n\t\tfor(register int j = 0; j < n; j++) se2.insert(b[j]),se3.insert(b[j]);\n\t\tcnt2 = se2.size();\n\t\tif(se3.size() - cnt1 == cnt2) return true;\n\t}\n\treturn false;\n}\n\nint main()\n{\n\tn = read(); m = read();\n\tc[1] = 13331;\n\tfor(int i = 2; i <= m; i++) c[i] = c[i - 1] * 13331; \n\tfor(register int i = 0; i < n; i++) cin >> good[i];\n\tfor(register int i = 0; i < n; i++) cin >> bad[i];\n\tl = 1; r = m;\n\tHash();\n\twhile(l < r)\n\t{\n\t\tmid = (l + r) >> 1;\n\t\tif(check(mid)) r = mid;\n\t\telse l = mid + 1;\n\t}\n\t\n\tget_Hash(1,4);\n\tprintf(\"%d\\n\",r);\n    return 0;\n}\n\n```",
        "postTime": 1571314265,
        "uid": 150821,
        "name": "Azuree",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3667 \u3010[USACO17OPEN]Bovine Genomics G\u5976\u725b\u57fa\u56e0\u7ec4\uff08\u91d1\uff09\u3011"
    },
    {
        "content": "## \u60f3\u8ba9\u5927\u5bb6\u6ce8\u610f\u4e00\u70b9\uff0c\u8fd9\u9053\u9898\u6253hash\u9700\u8981\u968f\u673a\u5316\uff0c\u81f3\u4e8e\u64cd\u4f5c\n```cpp\nsrand(time(NULL));\nfor(int i=1;i<=m;i++)\n\tflag[i]=rand();\n```\n### \u6211\u4eec\u6765\u4e00\u4e2a\u9c9c\u660e\u7684\u5bf9\u6bd4\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nchar ch[501];\nunsigned long long ans=1<<30,l=1,r=1;\nunsigned long long p[501][501],s[501][501],hashs[501],hashp[501],mod[501];\nset<unsigned long long> t;\nbool flag;\nint main()\n{\n\tint n,m;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%s\",ch+1);\n\t\tfor(int j=1;j<=m;j++)\n\t\t\ts[i][j]=ch[j]-'A'+1;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%s\",ch+1);\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tp[i][j]=ch[j]-'A'+1;\n\t}\n\twhile(r<=m)\n\t{\n\t\tt.clear();\n\t\tif(flag)\n\t\t{\n\t\t\tans=min(ans,r-l);\n\t\t\tflag=1;\n\t\t\tfor(int i=1;i<=n;i++)\n\t\t\t{\n\t\t\t\thashs[i]=(hashs[i]-13131*s[i][l]);\n\t\t\t\tt.insert(hashs[i]);\n\t\t\t}\n\t\t\tfor(int i=1;i<=n;i++)\n\t\t\t{\n\t\t\t\thashp[i]=(hashp[i]-13131*p[i][l]);\n\t\t\t\tif(t.count(hashp[i]))flag=0;\n\t\t\t}\n\t\t\tl++;\n\t\t}\n\t\tif(!flag)\n\t\t{\n\t\t\tflag=1;\n\t\t\tfor(int i=1;i<=n;i++)\n\t\t\t{\n\t\t\t\thashs[i]=(hashs[i]+13131*s[i][r]);\n\t\t\t\tt.insert(hashs[i]);\n\t\t\t}\n\t\t\tfor(int i=1;i<=n;i++)\n\t\t\t{\n\t\t\t\thashp[i]=(hashp[i]+13131*p[i][r]);\n\t\t\t\tif(t.count(hashp[i]))flag=0;\n\t\t\t}\n\t\t\tr++;\n\t\t}\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n#### \u2191\u4e0d\u597d\u610f\u601d\uff0c\u53ea\u670910\u5206\n\u7136\u800c\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nchar ch[501];\nunsigned long long ans=1<<30,l=1,r=1;\nunsigned long long p[501][501],s[501][501],hashs[501],hashp[501],mod[501];\nset<unsigned long long> t;\nbool flag;\nint main()\n{\n    srand(time(NULL));\n    int n,m;\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%s\",ch+1);\n        for(int j=1;j<=m;j++)\n            s[i][j]=ch[j]-'A'+1;\n    }\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%s\",ch+1);\n        for(int j=1;j<=m;j++)\n            p[i][j]=ch[j]-'A'+1;\n    }\n    for(int i=1;i<=m;i++)\n        mod[i]=rand();\n    while(r<=m)\n    {\n        t.clear();\n        if(flag)\n        {\n            ans=min(ans,r-l);\n            flag=1;\n            for(int i=1;i<=n;i++)\n            {\n                hashs[i]=(hashs[i]-mod[l]*s[i][l]);\n                t.insert(hashs[i]);\n            }\n            for(int i=1;i<=n;i++)\n            {\n                hashp[i]=(hashp[i]-mod[l]*p[i][l]);\n                if(t.count(hashp[i]))flag=0;\n            }\n            l++;\n        }\n        if(!flag)\n        {\n            flag=1;\n            for(int i=1;i<=n;i++)\n            {\n                hashs[i]=(hashs[i]+mod[r]*s[i][r]);\n                t.insert(hashs[i]);\n            }\n            for(int i=1;i<=n;i++)\n            {\n                hashp[i]=(hashp[i]+mod[r]*p[i][r]);\n                if(t.count(hashp[i]))flag=0;\n            }\n            r++;\n        }\n    }\n    cout<<ans<<endl;\n    return 0;\n}\n```\n### \u4e0d\u597d\u610f\u601d\uff0c\u6ee1\u5206\n~~\u5b9d\u5b9d\u7684\u5185\u5fc3\uff1aMMP\u51fa\u9898\u4eba\u6b7b\u51fa\u6765\u5403\u5c4e~~",
        "postTime": 1552397470,
        "uid": 93488,
        "name": "Porsche",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3667 \u3010[USACO17OPEN]Bovine Genomics G\u5976\u725b\u57fa\u56e0\u7ec4\uff08\u91d1\uff09\u3011"
    }
]