[
    {
        "content": "## \u9898\u76ee\u5927\u610f\uff1a\n\n  \u5c0fA\u5728\u5e73\u9762\u4e0a(0,0)\u70b9\u7684\u4f4d\u7f6e\uff0c\u7b2ci\u680b\u697c\u623f\u53ef\u4ee5\u7528\u4e00\u6761\u8fde\u63a5(i,0)\u548c(i,Hi)\u7684\u7ebf\u6bb5\u8868\u793a\uff0c\u5176\u4e2dHi\u4e3a\u7b2ci\u680b\u697c\u623f\u7684\u9ad8\u5ea6\u3002\u5982\u679c\u8fd9\u680b\u697c\u623f\u4e0a\u4efb\u4f55\u4e00\u4e2a\u9ad8\u5ea6\u5927\u4e8e0\u7684\u70b9\u4e0e(0,0)\u7684\u8fde\u7ebf\u6ca1\u6709\u4e0e\u4e4b\u524d\u7684\u7ebf\u6bb5\u76f8\u4ea4\uff0c\u90a3\u4e48\u8fd9\u680b\u697c\u623f\u5c31\u88ab\u8ba4\u4e3a\u662f\u53ef\u89c1\u7684\u3002\n\n  \u65bd\u5de5\u961f\u7684\u5efa\u9020\u603b\u5171\u8fdb\u884c\u4e86M\u5929\u3002\u521d\u59cb\u65f6\uff0c\u6240\u6709\u697c\u623f\u90fd\u8fd8\u6ca1\u6709\u5f00\u59cb\u5efa\u9020\uff0c\u5b83\u4eec\u7684\u9ad8\u5ea6\u5747\u4e3a0\u3002\u5728\u7b2ci\u5929\uff0c\u5efa\u7b51\u961f\u5c06\u4f1a\u5c06\u6a2a\u5750\u6807\u4e3aXi\u7684\u623f\u5c4b\u7684\u9ad8\u5ea6\u53d8\u4e3aYi(\u9ad8\u5ea6\u53ef\u4ee5\u6bd4\u539f\u6765\u5927\u2014\u4fee\u5efa\uff0c\u4e5f\u53ef\u4ee5\u6bd4\u539f\u6765\u5c0f\u2014\u62c6\u9664\uff0c\u751a\u81f3\u53ef\u4ee5\u4fdd\u6301\u4e0d\u53d8\u2014\u5efa\u7b51\u961f\u8fd9\u5929\u4ec0\u4e48\u4e8b\u4e5f\u6ca1\u505a)\u3002\u8bf7\u4f60\u5e2e\u5c0fA\u6570\u6570\u6bcf\u5929\u5728\u5efa\u7b51\u961f\u5b8c\u5de5\u4e4b\u540e\uff0c\u4ed6\u80fd\u770b\u5230\u591a\u5c11\u680b\u697c\u623f\uff1f\n  \n## \u5206\u6790\uff1a\n\n\u663e\u7136\u53ef\u4ee5\u60f3\u5230\u8fdb\u884c\u659c\u7387\u5904\u7406\uff0c\u901a\u8fc7\u659c\u7387\u7684\u5355\u8c03\u9012\u589e\u6765\u6c42\u51falen\u3002\n\n\u5176\u5b9e\u7b54\u6848\u5c31\u662f\u6574\u4e2a1\u2014n\u533a\u95f4\u4e2d\u4ece\u7b2c\u4e00\u9879\u5f00\u59cb\uff0c\u6bcf\u4e00\u4e2a\u5927\u4e8e\u524d\u4e00\u9879\u7684\u5fc5\u9009\uff0c\u5c0f\u4e8e\u7b49\u4e8e\u524d\u4e00\u9879\u7684\u5fc5\u987b\u4e0d\u9009\uff0c\u6240\u7684\u5f97\u5230\u7684\u5e8f\u5217\u957f\u5ea6\u3002\n\n\u56e0\u4e3a\u533a\u95f4\u662f\u56fa\u5b9a\u7684\uff0c\u5e76\u4e14\u53d1\u73b0\u4e00\u4e2a\u533a\u95f4\u5185\u7684\u7b54\u6848\u53ef\u4ee5\u901a\u8fc7\u4e24\u4e2a\u5b50\u533a\u95f4\u7528\u67d0\u79cd\u65b9\u5f0f\u8fdb\u884c\u8f6c\u79fb\u3002\u6240\u4ee5\u53ef\u4ee5\u8003\u8651\u5230\u7ebf\u6bb5\u6811\u505a\u6cd5\u3002\n\n\u7ebf\u6bb5\u6811\u4e2d\u53ea\u9700\u8981\u7ef4\u62a4\u4e24\u4e2a\u503c\uff0c\u4e00\u4e2a\u662f\u533a\u95f4\u6700\u5927\u503c\uff0c\u8fd8\u6709\u4e00\u4e2a\u662f\u533a\u95f4\u5e8f\u5217\u957f\u5ea6\uff08\u6309\u7167\u521a\u624d\u7684\u7406\u89e3\uff09\u7684\u503c\u3002\n\n\u5efa\u6811\uff08\u751a\u81f3\u4e0d\u7528\uff09\uff0c\u4fee\u6539\uff0c\u751a\u81f3\u4e0d\u7528pushdown\uff0c\u4e00\u5207\u597d\u8bf4\u3002\u4f46\u662f\u53d1\u73b0pushup\u4e0d\u597d\u5904\u7406\uff0c\u663e\u7136\u4e24\u4e2a\u5b50\u533a\u95f4\u7684\u503c\u4e0d\u80fd\u76f4\u63a5\u5408\u5e76\u3002\u5fc5\u987b\u6ee1\u8db3\u4e00\u5b9a\u5173\u7cfb\u3002\n\n\u53ef\u4ee5\u53d1\u73b0\uff0c\u533a\u95f4\u5185\u7684\u7b2c\u4e00\u9879\u4e00\u5b9a\u5728\u8fd9\u4e2a\u5e8f\u5217\u5185\uff0c\u533a\u95f4\u6700\u5927\u503c\u4e5f\u4e00\u5b9a\u5728\u8fd9\u4e2a\u5e8f\u5217\u5185\u3002\n\n\u5bf9\u4e8e\u8981\u88abpushup\u7684\u533a\u95f4\uff0c\u5b83\u7684\u4e24\u4e2a\u5b50\u533a\u95f4\u5df2\u7ecf\u5904\u7406\u597d\u4e86\uff0c\u5bb9\u6613\u77e5\u9053\uff0c\u5de6\u513f\u5b50\u533a\u95f4\u5185\u7684\u5e8f\u5217\u6bcf\u4e00\u9879\u4e00\u5b9a\u90fd\u5728\u8fd9\u4e2a\u5927\u533a\u95f4\u5185\u3002\uff08\u56e0\u4e3a\u524d\u9762\u5f62\u6001\u56fa\u5b9a\uff0c\u53c8\u4e0d\u80fd\u9009\u62e9\u4e0d\u770b\u5230\uff09\u6240\u4ee5\u53ea\u9700\u8981\u5904\u7406\u53f3\u513f\u5b50\u533a\u95f4\u548c\u5de6\u513f\u5b50\u533a\u95f4\u6700\u5927\u503c\u7684\u5173\u7cfb\uff0c\u5373\u53ef\u9012\u5f52\u5904\u7406len\u503c\u3002\n\n\u9012\u5f52\u8981\u4f20\u5165\u8be5\u533a\u95f4\u7684\u503c\u5fc5\u987b\u5927\u4e8e\u7684\u6700\u5c0f\u503c\uff0c\u8bbe\u4e3alx\u3002\u5bf9\u4e8e\u5f00\u59cb\u8fdb\u5165\u65f6\uff0c\u4e5f\u5c31\u662f\u5de6\u513f\u5b50\u7684\u6700\u5927\u503c\u3002\n\n1.\u5982\u679cl==r\uff0c\u8be5\u4f4d\u7f6e\u7684\u503c\u5927\u4e8elx\uff0creturn1\uff0c\u5426\u5219return0\uff1b\n\n2.\u5c06\u8be5\u533a\u95f4\u5288\u6210\u4e24\u6bb5\uff0c\u8bbe\u4e3as1,s2\u533a\u95f4\u3002\n\n\u2460\u5982\u679cs1\u7684\u6700\u5927\u503c\u5c0f\u4e8e\u7b49\u4e8elx\uff0c\u90a3\u4e48s1\u5fc5\u7136\u4e0d\u4f1a\u5bf9\u7b54\u6848\u4ea7\u751f\u8d21\u732e\uff0c\u53bb\u627es2\u3002\u5373\u4ee3\u7801\u4e2d\uff1a\nreturn pushup2(lx,s2,mid+1,r)\n\n\u2461\u5982\u679cs1\u7684\u6700\u5927\u503c\u5927\u4e8elx\uff0c\u90a3\u4e48s2\u4e2d\u5269\u4e0b\u7684\u5728s1,s2\u7ec4\u6210\u7684\u539f\u533a\u95f4\u4e2d\u505a\u8d21\u732e\u7684\u9879\u4e00\u5b9a\u80fd\u8d21\u732e\u5230\u6700\u7ec8\u7b54\u6848\u4e2d\u3002\u5373+l(x)-l(s1)\uff0c\u8fd9\u91cc\u6ce8\u610f\uff0c\u4e0d\u662f\nl(s2),\u56e0\u4e3a\u53ef\u80fd\u5728l(s2)\u4e2d\u5b58\u5728\u7684\u9879\uff0c\u4e0d\u4e00\u5b9a\u5728l(x)\u8fd9\u4e2a\u5927\u533a\u95f4\u4e2d\u51fa\u73b0\u3002\u6240\u4ee5\u8fd9\u4e24\u4e2a\u503c\u662f\u5b8c\u5168\u4e0d\u540c\u7684\u6982\u5ff5\u3002\n\n\u4e4b\u540e\u518d\u53bb\u5bfb\u627es1. \u5373\uff1areturn pushup2(lx,s1,l,mid)+l(x)-l(s1);\n\n\u6838\u5fc3\u4ee3\u7801\uff1a\n\n```cpp\nint pushup2(double lx,int x,int l,int r)\n{\n\tif(m(x)<=lx) return 0;//\u526a\u679d\n\tif(a[l]>lx) return l(x);//\u526a\u679d\n\tif(l==r) return a[l]>lx;//\u2460\n\tint s1=x<<1,s2=x<<1|1;\n\tint mid=(l+r)>>1;\n\tif(m(s1)<=lx) return pushup2(lx,s2,mid+1,r);//\u2461\n\telse return pushup2(lx,s1,l,mid)+l(x)-l(s1);//\u2462\n}\n```\n\n\u8be6\u89c1\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=100000+10;\nint n,m;\ndouble a[N];\nstruct node{\n\tdouble mx;\n\tint len;\n\t#define m(x) t[x].mx\n\t#define l(x) t[x].len\n}t[4*N];\nvoid pushup1(int x)\n{\n\tm(x)=max(m(x<<1),m(x<<1|1));\n}\nint pushup2(double lx,int x,int l,int r)\n{\n\tif(m(x)<=lx) return 0;\n\tif(a[l]>lx) return l(x); \n\tif(l==r) return a[l]>lx;\n\tint s1=x<<1,s2=x<<1|1;\n\tint mid=(l+r)>>1;\n\tif(m(s1)<=lx) return pushup2(lx,s2,mid+1,r);\n\telse return pushup2(lx,s1,l,mid)+l(x)-l(s1);\n}\nvoid chan(int x,int l,int r,int to,int c)\n{\n\tif(l==r&&l==to)\n\t{\n\t\tm(x)=(double)c/to;\n\t\tl(x)=1;\n\t\treturn ;\n\t}\n\tint mid=(l+r)>>1;\n\tif(to<=mid) chan(x<<1,l,mid,to,c);\n\telse if(to>mid) chan(x<<1|1,mid+1,r,to,c);\n\tpushup1(x);\n\tl(x)=l(x<<1)+pushup2(m(x<<1),x<<1|1,mid+1,r);\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tint x,y;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\ta[x]=(double)y/x;\n\t\tchan(1,1,n,x,y);\n\t\tprintf(\"%d\\n\",t[1].len);\n\t}\n\treturn 0;\n}\n```\n\n## \u603b\u7ed3\uff1a\n\n1.\u5176\u5b9e\u8fd9\u4e2a\u9898\u5c31\u662f\u628apushup logn\u5316\uff0c\u662fpushup\u4e00\u79cd\u96be\u5ea6\u5347\u7ea7\u7248\u3002\n\n2.\u53ea\u8981\u53ef\u4ee5\u60f3\u529e\u6cd5\u533a\u95f4\u5408\u5e76\u7684\u95ee\u9898\uff0c\u90fd\u53ef\u4ee5\u5c1d\u8bd5\u7528\u7ebf\u6bb5\u6811\u89e3\u51b3\u3002\u867d\u7136\u6709\u65f6\u5019\u4e00\u770b\u770b\u4e0d\u51fa\u6765\u3002",
        "postTime": 1525774223,
        "uid": 56672,
        "name": "\u67ab\u6797\u665a",
        "ccfLevel": 9,
        "title": "luogu P4198 \u697c\u623f\u91cd\u5efa\u2014\u2014\u7ebf\u6bb5\u6811"
    },
    {
        "content": "\u8fd9\u9053\u9898\u601d\u8def\u771f\u662f\u5999\u554aQWQ\n\n### [\u539f\u9898\u5730\u5740](https://www.luogu.org/problemnew/show/P4198)\n\n\u9898\u76ee\u5927\u610f\uff1a\u5728\u4e00\u4e2a\u5e73\u9762\u5185\uff0c\u6c42\u51fa\u6240\u6709\u7684\u9ad8\u5ea6\u5927\u4e8e$0$\u7684\u70b9\u4e0e$(0,0)$\u7684\u8fde\u7ebf\u6ca1\u6709\u4e0e\u4e4b\u524d\u7684\u7ebf\u6bb5\u76f8\u4ea4\u7684\u697c\u623f\uff0c\u5e26\u4fee\u6539\n\n\u770b\u5230\u5e26\u4fee\u6539\uff0c\u663e\u7136\u4f1a\u60f3\u5230\u6570\u636e\u7ed3\u6784\u6765\u7ef4\u62a4\uff0c\u518d\u770b\u5230\u518d\u5e73\u9762\u533a\u95f4\u52a0\u51cf\u548c\u533a\u95f4\u67e5\u8be2\uff0c\u663e\u7136\u53c8\u4f1a\u60f3\u5230\u7ebf\u6bb5\u6811\u3002\n\n\u90a3\u7ebf\u6bb5\u6811\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u8981\u7ef4\u62a4\u4ec0\u4e48\u503c\u5462\uff1f\n\n\u770b\u5230\u9898\u9762\u81ea\u7136\u4f1a\u60f3\u5230\u659c\u7387\n\n\u6240\u4ee5\u95ee\u9898\u5c31\u53ef\u4ee5\u8f6c\u5316\u6210\u6c42\u4e00\u4e2a\u6700\u957f\u9012\u589e\u7684\u659c\u7387\n\n\u65e2\u7136\u662f\u5355\u8c03\u9012\u589e\uff0c\u90a3\u4e48\u6211\u4eec\u7ebf\u6bb5\u6811\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u53ef\u4ee5\u7ef4\u62a4\u8fd9\u4e2a\u8282\u70b9\u6240\u5bf9\u5e94\u7684\u533a\u95f4\u7684\u6700\u5927\u503c\uff0c\u4e0e\u4ece\u8fd9\u6bb5\u533a\u95f4\u5f00\u5934\u53ef\u4ee5\u770b\u5230\u7684\u533a\u95f4\u5185\u7684\u6240\u6709\u697c\u623f\n\n\u90a3\u4e48\u6211\u4eec\u8981\u600e\u4e48\u67e5\u8be2\u5462\uff1f\n\n\u7b54\u6848\u663e\u7136\u662f\u7b2c\u4e00\u4e2a\u8282\u70b9\uff08\u6839\u8282\u70b9\uff09\u7684\u7b54\u6848\n\n\u6240\u4ee5\u6211\u4eec\u73b0\u5728\u7684\u4e3b\u8981\u95ee\u9898\u5c31\u662f\u600e\u4e48\u4fee\u6539\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\uff0c\u4ece\u8fd9\u6bb5\u533a\u95f4\u5934\u53ef\u4ee5\u770b\u5230\u7684\u697c\u623f\u6570\u91cf\u4e00\u5b9a\u4e3a$1$\uff0c\u533a\u95f4\u659c\u7387\u6700\u5927\u503c\u4e00\u5b9a\u4e3a\u8be5\u70b9\u7684\u659c\u7387\n\n\u90a3\u4e48\u5408\u5e76\u5462\uff1f\n\n\u663e\u7136\u5408\u5e76\u533a\u95f4\u7684\u6240\u6709\u697c\u623f\u4e00\u5b9a\u53ef\u4ee5\u770b\u5230\u5de6\u8fb9\u7684\u533a\u95f4\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u770b\u5230\u7684\u6240\u6709\u697c\u623f\uff08\u8fd9\u5e94\u8be5\u5f88\u663e\u7136\u5427\uff09\n\n\u90a3\u4e48\u53f3\u533a\u95f4\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u67e5\u627e\u53f3\u533a\u95f4\u7684\u5de6\u533a\u95f4\u7684\u6700\u5927\u503c\uff0c\u5982\u679c\u8fd9\u4e2a\u6700\u5927\u503c\u6bd4\u5de6\u533a\u95f4\u7684\u6700\u5927\u503c\u5c0f\uff0c\u90a3\u4e48\u6709\u533a\u95f4\u7684\u5de6\u533a\u95f4\u7684\u6240\u6709\u7b54\u6848\u4e00\u5b9a\u770b\u4e0d\u5230\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u9012\u5f52\u67e5\u627e\u53f3\u533a\u95f4\u7684\u53f3\u533a\u95f4\n\n\u5982\u679c\u53f3\u533a\u95f4\u7684\u5de6\u533a\u95f4\u7684\u6700\u5927\u503c\u6bd4\u5de6\u533a\u95f4\u7684\u6700\u5927\u503c\u5927\uff0c\u90a3\u4e48\u539f\u6765\u88ab\u53f3\u533a\u95f4\u7684\u5de6\u533a\u95f4\u6321\u4f4f\u7684\u73b0\u5728\u4e00\u6837\u4f1a\u88ab\u6321\u4f4f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u52a0\u4e0a\u53f3\u533a\u95f4\u7684\u7b54\u6848\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u9012\u5f52\u67e5\u627e\u53f3\u533a\u95f4\u7684\u5de6\u533a\u95f4\n\n\u4f46\u662f\u8fd9\u91cc\u6709\u4e00\u4e2a\u5751\u70b9\uff0c\u6709\u533a\u95f4\u7684\u7b54\u6848\u4e0d\u4e00\u5b9a\u662f$ans$[\u53f3\u533a\u95f4\u7684\u53f3\u533a\u95f4]\uff0c\u56e0\u4e3a\u53f3\u533a\u95f4\u7684\u7b54\u6848\u53ef\u80fd\u88ab\u5de6\u533a\u95f4\u6321\u4f4f\uff0c\u6240\u4ee5\u6709\u533a\u95f4\u7684\u7b54\u6848\u4e00\u5b9a\u662f$ans$[\u53f3\u533a\u95f4]-$ans$[\u53f3\u533a\u95f4\u7684\u5de6\u533a\u95f4]\n\n\u6bcf\u6b21\u67e5\u8be2\u7684\u590d\u6742\u5ea6\u4e3a$O(1)$\uff0c\u6211\u4eec\u6bcf\u6b21\u53ea\u4f1a\u9012\u5f52\u4e00\u4e2a\u513f\u5b50\uff0c\u6240\u4ee5\u6bcf\u6b21\u67e5\u8be2\u53f3\u513f\u5b50\u7b54\u6848\u7684\u590d\u6742\u5ea6\u4e3a$O(logn)$\uff0c\u6545\u6bcf\u6b21\u4fee\u6539\u7684\u590d\u6742\u5ea6\u4e3a$O(log^2n)$\n\n\u5176\u4ed6\u7684\u5730\u65b9\u5c31\u548c\u666e\u901a\u7ebf\u6bb5\u6811\u4e00\u6837\u4e86\n\n\u4e0a\u6587\u53ef\u80fd\u6709\u70b9~~\uff08\u5341\u5206\uff09~~\u62bd\u8c61\uff0c\u53ef\u4ee5\u7ed3\u5408\u4ee3\u7801\u7406\u89e3\n```\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<iostream>\n#define re register\n#define il inline\n#define inf 123456789\n#define debug printf(\"Now is %d\\n\",__LINE__);\nusing namespace std;\nil int read()\n{\n    re int x=0,f=1;char c=getchar();\n    while(c<'0'||c>'9'){if(c=='-') f=-1;c=getchar();}\n    while(c>='0'&&c<='9') x=(x<<3)+(x<<1)+(c^48),c=getchar();\n    return x*f;\n}\n#define D double\n#define maxn 100005\nint n,m,ans[maxn<<2];\nD ma[maxn<<2];\n#define ls k<<1\n#define rs k<<1|1\n#define max(a,b) a>b?a:b\nil int query(int k,int l,int r,D maxx)\n//maxx\u8868\u662f\u6211\u4eec\u8981\u67e5\u8be2\u7684\u503c\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u8981\u67e5\u8be2\u7684\u6bd4\u8be5\u503c\u659c\u7387\u5927\u7684\u659c\u7387\u7684\u697c\u623f\u6570\n{\n    if(ma[k]<=maxx)\n    {\n        return 0;\n    }//\u5982\u679c\u8fd9\u6bb5\u533a\u95f4\u7684\u6700\u5927\u659c\u7387\u6bd4\u76ee\u524d\u8981\u67e5\u8be2\u7684\u503c\u5927\uff0c\u90a3\u4e48\u663e\u7136\u5bf9\u7b54\u6848\u4e0d\u4f1a\u6709\u5f71\u54cd\uff0c\u6240\u4ee5\u8fd4\u56de0\n    if(l==r)\n    {\n        return ma[k]>maxx;\n    }//\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u90a3\u4e48\u5982\u679c\u8be5\u70b9\u7684\u659c\u7387\u5927\u4e8e\u8981\u67e5\u8be2\u7684\u503c\u5c31\u8fd4\u56de1\uff0c\u5426\u5219\u8fd4\u56de0\n    else if(ma[ls]<=maxx)\n    {\n        return query(rs,((l+r)>>1)+1,r,maxx);\n    }//\u5982\u679c\u5de6\u513f\u5b50\u7684\u6700\u5927\u503c\u5c0f\u4e8e\u7b49\u4e8e\u67e5\u8be2\u503c\uff0c\u5c31\u9012\u5f52\u53f3\u513f\u5b50\n    return query(ls,l,(l+r)>>1,maxx)+ans[k]-ans[ls];//\u5426\u5219\u9012\u5f52\u5de6\u513f\u5b50\n}\nil void change(int k,int l,int r,int ll,D v)\n{\n    if(l==ll&&r==ll)\n    {\n        ans[k]=1,ma[k]=v;\n        return;\n    }\n    re int mid=(l+r)>>1;\n    if(ll<=mid) change(ls,l,mid,ll,v);\n    else change(rs,mid+1,r,ll,v);\n    ma[k]=max(ma[ls],ma[rs]);\n    //\u76ee\u524d\u533a\u95f4\u7684\u6700\u5927\u503c\u663e\u7136\u662f\u5de6\u53f3\u533a\u95f4\u7684\u6700\u5927\u503c\u7684\u6700\u5927\u503c\n    ans[k]=ans[ls]+query(rs,mid+1,r,ma[ls]);\n    //\u8be5\u533a\u95f4\u7684\u7b54\u6848\u662f\u5de6\u533a\u95f4\u7684\u7b54\u6848\u52a0\u4e0a\u53f3\u533a\u95f4\u7684\u659c\u7387\u5927\u4e8e\u5de6\u533a\u95f4\u6700\u5927\u503c\u7684\u6240\u6709\u697c\u623f\n}\nint main()\n{\n    n=read(),m=read();\n    for(re int i=1,l,r;i<=m;++i)\n    {\n        l=read(),r=read();\n        change(1,1,n,l,(D)r/l);//\u6ce8\u610f\u659c\u7387\u8981\u7528double\n        printf(\"%d\\n\",ans[1]);\n    }\n    return 0;\n}\n```",
        "postTime": 1540384972,
        "uid": 57014,
        "name": "Nemlit",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4198 \u3010\u697c\u623f\u91cd\u5efa\u3011"
    },
    {
        "content": "# \u95f2\u626f\n\n\u8fd9\u9898\u7684\u9898\u9762\u6709\u95ee\u9898\u3002\n\n# \u9898\u9762\n\n[P4198 \u697c\u623f\u91cd\u5efa](https://www.luogu.org/problem/P4198)\n\n# Solution\n\n\u8fd9\u9053\u9898\u6211\u4eec\u4e0d\u9700\u8981\u770b\u9898\u9762\u7ed9\u7684\u89e3\u91ca\uff08\u56e0\u4e3a\u6709\u95ee\u9898\uff09\uff0c\u53ea\u9700\u8981\u7528\u6211\u4eec\u7684\u751f\u6d3b\u5e38\u8bc6\u6765\u5224\u65ad\u5c31\u884c\u3002\n\n\u6211\u4eec\u80fd\u770b\u5230\u4e00\u680b\u697c\uff0c\u5f53\u4e14\u4ec5\u5f53\u8fd9\u680b\u697c\u6700\u9ad8\u70b9\u4e0e\u539f\u70b9\u7684\u8fde\u7ebf\u6ca1\u6709\u7ecf\u8fc7\u4efb\u610f\u4e00\u4e2a\u5728\u5b83\u524d\u9762\u7684\u697c\u3002\uff08\u4ea4\u4e8e\u4e00\u70b9\u4e5f\u4e0d\u884c\uff0c\u76f8\u4f3c\u4e09\u89d2\u5f62\u641e\u4e00\u641e\u5c31\u53ef\u4ee5\u770b\u51fa\uff09\n\n\u6211\u4eec\u5c06\u6bcf\u4e00\u680b\u697c\u7684\u6743\u503c\u5b9a\u4e49\u4e3a\u6700\u9ad8\u70b9\u4e0e\u539f\u70b9\u7684\u8fde\u7ebf\u7684\u659c\u7387\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u7684\u662f\u4ee5\u7b2c\u4e00\u680b\u697c\u4e3a\u8d77\u70b9\u7684\u4e0d\u4e0b\u964d\u7684\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u3002\uff08\u53ef\u4ee5\u8bc1\u660e\u8fd9\u662f\u552f\u4e00\u7684\uff09\n\n\u5355\u70b9\u4fee\u6539\u80af\u5b9a\u662f\u6ca1\u6709\u4ec0\u4e48\u95ee\u9898\u7684\uff0c\u6211\u4eec\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898\u662f\u5982\u4f55\u7ef4\u62a4\u8fd9\u4e2a\u957f\u5ea6\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4\uff0c\u6211\u4eec\u4e00\u5b9a\u662f\u4ee5\u5b83\u7684\u6700\u5de6\u8fb9\u7684\u697c\u4e3a\u8d77\u70b9\u3002\n\n\u5f53\u4e24\u4e2a\u533a\u95f4\u5408\u5e76\u65f6\uff0c\u5de6\u533a\u95f4\u7684\u7b54\u6848\u663e\u7136\u662f\u4e0d\u4f1a\u53d8\u7684\uff0c\u800c\u53f3\u533a\u95f4\u6211\u4eec\u9700\u8981\u627e\u5230\u7b2c\u4e00\u4e2a\u5927\u4e8e\u5de6\u533a\u95f4\u7684\u6700\u5927\u503c\u7684\u70b9\uff0c\u7136\u540e\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u8d77\u70b9\uff0c\u5c06\u5269\u4e0b\u7684\u8fde\u4e0a\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u627e\u5230\u8fd9\u4e2a\u70b9\u7684\u4f4d\u7f6e\u5c31\u884c\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u4e00\u4e0b\u3002\n\n\u5b9a\u4e49 $get(x,k)$ \u8868\u793a $x$ \u4ee3\u8868\u7684\u533a\u95f4\u91cc\uff0c\u7b2c\u4e00\u4e2a\u5927\u4e8e $k$ \u7684\u4f4d\u7f6e\u5f00\u59cb\u7684\u5e8f\u5217\u7684\u957f\u5ea6\u3002\n\n1. \u5982\u679c\u5de6\u533a\u95f4\u7684\u6700\u5927\u503c\u5927\u4e8e $k$ \uff0c\u6211\u4eec\u5c31\u627e\u5de6\u533a\u95f4\uff0c\u53f3\u533a\u95f4\u7684\u6240\u6709\u7528\u5230\u4e86\u7684\u80af\u5b9a\u4f1a\u5bf9\u7b54\u6848\u9020\u6210 $ans_x-ans_{lc}$ \u7684\u8d21\u732e\u3002\n2. \u5982\u679c\u5de6\u533a\u95f4\u7684\u6700\u5927\u503c\u4e0d\u5927\u4e8e $k$ \uff0c\u6211\u4eec\u5c31\u627e\u53f3\u533a\u95f4\u3002\n3. \u5982\u679c\u5f53\u524d\u533a\u95f4\u7684\u6700\u5927\u503c\u90fd\u4e0d\u5927\u4e8e $k$ \uff0c\u76f4\u63a5\u8fd4\u56de $0$ \uff0c\u8868\u793a\u627e\u4e0d\u5230\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u89e3\u51b3\u5408\u5e76\u7684\u95ee\u9898\u4e86\uff0c\u76f4\u63a5\u4e0a\u7ebf\u6bb5\u6811\u5373\u53ef\u3002\n\n# Code\n\n```c++\n#include<bits/stdc++.h>\n#define del(a,i) memset(a,i,sizeof(a))\n#define ll long long\n#define inl inline\n#define il inl void\n#define it inl int\n#define ill inl ll\n#define re register\n#define ri re int\n#define rl re ll\n#define mid ((l+r)>>1)\n#define lowbit(x) (x&(-x))\n#define INF 0x3f3f3f3f\nusing namespace std;\ntemplate<class T>il read(T &x){\n\tint f=1;char k=getchar();x=0;\n\tfor(;k>'9'||k<'0';k=getchar()) if(k=='-') f=-1;\n\tfor(;k>='0'&&k<='9';k=getchar()) x=(x<<3)+(x<<1)+k-'0';\n\tx*=f;\n}\ntemplate<class T>il _print(T x){\n\tif(x/10) _print(x/10);\n\tputchar(x%10+'0');\n}\ntemplate<class T>il print(T x){\n\tif(x<0) putchar('-'),x=-x;\n\t_print(x);\n}\nll mul(ll a,ll b,ll mod){long double c=1.;return (a*b-(ll)(c*a*b/mod)*mod)%mod;}\nit qpow(int x,int m,int mod){\n\tint res=1,bas=x%mod;\n\twhile(m){\n\t\tif(m&1) res=(1ll*res*bas)%mod;\n\t\tbas=(1ll*bas*bas)%mod,m>>=1;\n\t}\n\treturn res%mod;\n}\nconst int MAXN = 1e5+5;\nint n,m,x,y;\n#define lc (cur<<1)\n#define rc (cur<<1|1)\nstruct Seg_Tree{\n\tdouble mx;\n\tint len;\n}T[MAXN<<2];\nit get(int cur,int l,int r,double k){\n\tif(T[cur].mx<=k) return 0;\n\tif(l==r) return (T[cur].mx>k);\n\tif(T[lc].mx<=k) return get(rc,mid+1,r,k);\n\treturn get(lc,l,mid,k)+T[cur].len-T[lc].len;\n}\nil pushup(int cur,int l,int r){\n\tT[cur].len=T[lc].len+get(rc,mid+1,r,T[lc].mx);\n\tT[cur].mx=max(T[lc].mx,T[rc].mx);\n}\nil updata(int cur,int l,int r,int pos,double k){\n\tif(l==r) return T[cur].mx=1.*k/pos,T[cur].len=1,void();\n\tif(mid>=pos) updata(lc,l,mid,pos,k);\n\telse updata(rc,mid+1,r,pos,k);\n\tpushup(cur,l,r);\n}\nint main(){\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\tread(n),read(m);\n\tfor(ri i=1;i<=m;++i){\n\t\tread(x),read(y);\n\t\tupdata(1,1,n,x,y);\n\t\tprint(T[1].len),puts(\"\");\n\t}\n\treturn 0;\n}\n```\n\n# \u603b\u7ed3\n\n\u636e\u8bf4\u662f\u4e00\u4e2a\u7ecf\u5178\u6a21\u578b\uff0c\u53eb\u674e\u8d85\u6811\u3002\u7136\u800c\u7f51\u4e0a\u7684\u674e\u8d85\u6811\u5168\u662f\u7ef4\u62a4\u7ebf\u6bb5\u3001\u76f4\u7ebf\u7684\uff1f\n\n\u8001\u5e08\u8868\u793a\uff1a\u8fd9\u4e0d\u662f\u4ee5\u8bb9\u4f20\u8bb9\u5417\uff01",
        "postTime": 1570671965,
        "uid": 122273,
        "name": "TheShadow",
        "ccfLevel": 0,
        "title": "P4198 \u697c\u623f\u91cd\u5efa \u9898\u89e3"
    },
    {
        "content": "\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u4ee5\u65f6\u95f4\u4e3a\u4e0b\u6807\u7684\u5409\u8001\u5e08\u7ebf\u6bb5\u6811\u3002\u4ece\u524d\u5f80\u540e\u6309\u7167\u4f4d\u7f6e\u626b\u63cf\uff0c\u7136\u540e\u5bf9\u7ebf\u6bb5\u6811\u8fdb\u884c\u533a\u95f4\u6700\u5927\u503c\u4fee\u6539\u3002\u6bcf\u88ab\u4fee\u6539\u4e00\u6b21\u5c31\u52a0\u4e00\uff0c\u6700\u540e\u8f93\u51fa $1\\sim n$ \u7684\u503c\u5373\u53ef\u3002\r\n\r\n\u5177\u4f53\u800c\u8a00\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5750\u6807\u770b\u4f5c\u6a2a\u8f74\uff0c\u628a\u65f6\u95f4\u770b\u4f5c\u7eb5\u8f74\uff0c\u5728\u7eb5\u8f74\u4e0a\u7ef4\u62a4\u4e00\u9897\u7ebf\u6bb5\u6811\u3002\u6cbf\u7740\u6a2a\u8f74\u626b\u63cf\uff0c\u5230\u6bcf\u4e2a\u4f4d\u7f6e\uff0c\u6211\u4eec\u90fd\u80fd\u76f4\u5230\u5b83\u5728\u67d0\u4e00\u65f6\u523b\u7684\u9ad8\u5ea6\u3002\u4e8e\u662f\u6211\u4eec\u628a\u9ad8\u5ea6\u548c\u5750\u6807\u8f6c\u5316\u4e3a\u659c\u7387\uff0c\u5bf9\u7eb5\u8f74\u8fdb\u884c\u533a\u95f4\u6700\u5927\u503c\u64cd\u4f5c\u3002\u5982\u679c\u4fee\u6539\u6210\u529f\uff0c\u90a3\u4e48\u610f\u5473\u7740\u8fd9\u5e62\u697c\u623f\u5728\u8fd9\u4e2a\u65f6\u523b\u53ef\u89c1\uff0c\u628a\u7b54\u6848\u5728\u8fd9\u4e2a\u533a\u95f4\u4e0a $+1$\u3002\r\n\r\n\u7136\u540e\u5728\u6700\u540e\u67e5\u8be2\u6bcf\u4e2a\u65f6\u523b\u5bf9\u5e94\u7684\u6b21\u6570\u8f93\u51fa\u5c31\u662f\u7b54\u6848\u3002\r\n\r\n\u5230\u5b9e\u73b0\u4e0a\u7684\u8bdd\uff0c\u6709\u4e00\u4e2a\u6ce8\u610f\u70b9\u662f\u6b21\u6570\u7684\u7edf\u8ba1\u662f\u8fd9\u4e2a\u533a\u95f4\u6700\u5c0f\u503c\u88ab\u4fee\u6539\u7684\u6b21\u6570\uff0c\u800c\u4e0d\u662f\u6574\u4e2a\u533a\u95f4\u88ab\u4fee\u6539\u7684\u6b21\u6570\u3002\u8fd9\u4e2a\u6b21\u6570\u4f1a\u968f\u7740\u4fee\u6539\u548c\u67e5\u8be2\u4e0b\u4f20\u3002\r\n\r\n\r\n```cpp\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nnamespace IO\r\n{\r\n\tbool EOFstate = 0;\r\n\ttemplate<typename T>inline void read(T& x)\r\n\t{\r\n\t\tx = 0; int f = 1; char c = getchar();\r\n\t\twhile (('0' > c || c > '9') && !EOFstate) { if (c == '-')f = -1; c = getchar(), EOFstate = c == EOF; }\r\n\t\twhile ('0' <= c && c <= '9')x = (x << 3) + (x << 1) + c - '0', c = getchar();\r\n\t\tx *= f;\r\n\t}\r\n\ttemplate<typename T = int>inline T read()\r\n\t{\r\n\t\tT x;\r\n\t\tx = 0; int f = 1; char c = getchar();\r\n\t\twhile (('0' > c || c > '9') && !EOFstate) { if (c == '-')f = -1; c = getchar(), EOFstate = c == EOF; }\r\n\t\twhile ('0' <= c && c <= '9')x = (x << 3) + (x << 1) + c - '0', c = getchar();\r\n\t\tx *= f;\r\n\t\treturn x;\r\n\t}\r\n\ttemplate<typename T>inline void write(T x, char end = ' ')\r\n\t{\r\n\t\tif (x == 0)return putchar('0'), putchar(end), void();\r\n\t\tif (x < 0)putchar('-'), x = -x;\r\n\t\tchar c[21], cnt = 0;\r\n\t\twhile (x)c[cnt++] = x % 10 + '0', x /= 10;\r\n\t\twhile (cnt)putchar(c[--cnt]); putchar(end);\r\n\t}\r\n}using namespace IO;//\u5feb\u8bfb\u5feb\u5199\u677f\u5b50\r\n\r\nconst int N = 100005, inf = 0x7fffffff;\r\nint n, m;\r\nstruct Opt\r\n{\r\n\tint p, t;\r\n\tdouble v;\r\n\tinline void rd(int i)\r\n\t{\r\n\t\tt = i;\r\n\t\tread(p), v = read();\r\n\t\tv /= p;\r\n\t}\r\n\tinline friend bool operator<(Opt a, Opt b)\r\n\t{\r\n\t\treturn a.p == b.p ? a.t < b.t : a.p < b.p;\r\n\t}\r\n}opt[N];//\u5b58\u50a8\u4fee\u6539\u64cd\u4f5c\r\n\r\nstruct Node\r\n{\r\n\tdouble mn, se = inf;\r\n\tint v = 0;//\u6700\u5c0f\u6b21\u5c0f\u548c\u6b21\u6570\r\n}t[N << 2];\r\n#define ls p<<1\r\n#define rs p<<1|1\r\ninline void pushup(int p)\r\n{//\u5408\u5e76\u8282\u70b9,\u7ef4\u62a4\u6700\u5c0f\u548c\u6b21\u5c0f\u503c\r\n\tif (t[ls].mn == t[rs].mn)\r\n\t\tt[p].mn = t[ls].mn, t[p].se = min(t[ls].se, t[rs].se);\r\n\telse if (t[ls].mn < t[rs].mn)\r\n\t\tt[p].mn = t[ls].mn, t[p].se = min(t[ls].se, t[rs].mn);\r\n\telse\r\n\t\tt[p].mn = t[rs].mn, t[p].se = min(t[ls].mn, t[rs].se);\r\n}\r\ninline void pushdown(int p)\r\n{//\u4e0b\u4f20\u6b21\u6570\u548c\u6700\u503c\r\n\tif (t[ls].mn <= t[p].mn)\r\n\t\tt[ls].mn = t[p].mn, t[ls].v += t[p].v;\r\n\tif (t[rs].mn <= t[p].mn)\r\n\t\tt[rs].mn = t[p].mn, t[rs].v += t[p].v;\r\n\tt[p].v = 0;\r\n}\r\ninline void update(int p, double v)\r\n{//\u5bf9\u4e00\u4e2a\u8282\u70b9\u53d6max\u64cd\u4f5c\r\n\tif (t[p].mn >= v)\r\n\t\treturn;\r\n\tif (t[p].se > v)\r\n\t\treturn t[p].mn = v, t[p].v++, void();\r\n\tpushdown(p), update(ls, v), update(rs, v), pushup(p);\r\n}\r\ninline void modify(int p, int L, int R, int l, int r, double v)\r\n{\r\n\tif (l <= L && R <= r)\r\n\t\treturn update(p, v);\r\n\tpushdown(p);\r\n\tint mid = L + R >> 1;\r\n\tif (l <= mid)\r\n\t\tmodify(ls, L, mid, l, r, v);\r\n\tif (r > mid)\r\n\t\tmodify(rs, mid + 1, R, l, r, v);\r\n\tpushup(p);\r\n}\r\ninline int query(int p, int L, int R, int x)\r\n{\r\n\tif (L == R)\r\n\t\treturn t[p].v;\r\n\tpushdown(p);\r\n\tint mid = L + R >> 1;\r\n\tif (x <= mid)\r\n\t\treturn query(ls, L, mid, x);\r\n\telse\r\n\t\treturn query(rs, mid + 1, R, x);\r\n}\r\n#undef ls\r\n#undef rs\r\n\r\nint main()\r\n{\r\n\tread(n), read(m);\r\n\tfor (int i = 1; i <= m; ++i)\r\n\t\topt[i].rd(i);\r\n\tsort(opt + 1, opt + m + 1);\r\n\tfor (int i = 1, ne = 0; i <= m; ++i)\r\n\t{\r\n\t\tif (opt[i].p != opt[i + 1].p)\r\n\t\t\tne = m + 1;\r\n\t\telse\r\n\t\t\tne = opt[i + 1].t;\r\n\t\tmodify(1, 1, m, opt[i].t, ne - 1, opt[i].v);\r\n\t}\r\n\tfor (int i = 1; i <= m; ++i)\r\n\t\twrite(query(1, 1, m, i), '\\n');\r\n\treturn 0;\r\n}\r\n\r\n\r\n```\r\n\r\n\r\n~~\u611f\u8c22 @rxjdasiwzl @401rk8 \u7684\u6566\u4fc3~~",
        "postTime": 1660262766,
        "uid": 237893,
        "name": "donkeys",
        "ccfLevel": 5,
        "title": "P4198 \u697c\u623f\u91cd\u5efa"
    },
    {
        "content": "~~\u795e\u9898~~\n\n------------------------\n\n$Step1:$ \n\n\u6211\u4eec\u8003\u8651\u5148\u5199\u4e2a\u66b4\u529b\u8dd1\u8fd9\u4e2a\u6570\u636e\uff0c\u53d1\u73b0\u8c8c\u4f3c\u662f\u901a\u8fc7\u4e00\u4e2a\u5355\u8c03\u6808\u6765\u5b9e\u73b0\u7684\uff0c\u6211\u4eec\u8981\u627e\u7684\u8c8c\u4f3c\u662f\u4e00\u4e2a\u4ece$1$\u53f7\u70b9\u5f00\u59cb\u7684\u4e00\u4e2a\u5355\u8c03\u589e\u5e8f\u5217\uff08\u659c\u7387\uff09\n\n\u4e8e\u662f\u975e\u5e38\u6709\u610f\u601d\u7684\u4e00\u70b9\u5c31\u662f\u4f60\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u5f88\u96be\u7ef4\u62a4\uff0c\u6709\u6ca1\u6709\u4ec0\u4e48\u597d\u7684\u65b9\u5f0f\u53bb\u7ef4\u62a4\u4ed6\u5462\uff1f\n\n$Step2:$\n\n\u6211\u4eec\u5c1d\u8bd5\u7528\u4e00\u4e2a\u7ebf\u6bb5\u6811\u53bb\u7ef4\u62a4\uff0c\u521d\u59cb\u94a6\u5b9a$0$\u53f7\u70b9\u5fc5\u9009\uff0c\u659c\u7387\u4e3a$0$\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u6211\u4eec\u7528\u4e09\u4e2a\u91cf\u6765\u7ef4\u62a4\u5b83$(fr,mx,len)$\u5206\u522b\u8868\u793a\u8fd9\u4e2a\u533a\u95f4\u5f00\u59cb\u7684\u70b9\u662f\u8c01\u548c\u533a\u95f4\u6700\u5927\u503c\u4ee5\u53ca\u957f\u5ea6\u3002\u7528\u8fd9\u4e24\u4e2a\u91cf\u6765\u8868\u793a\u8fd9\u4e2a\u533a\u95f4\u5185\u5355\u8c03\u589e\u7684\u5e8f\u5217\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u533a\u95f4\u5f00\u59cb\u7684\u70b9\u548c\u533a\u95f4\u6700\u5927\u503c\u7684\u70b9\u4e00\u5b9a\u90fd\u5728\u8fd9\u4e2a\u533a\u95f4\u5185\u7684\u5355\u8c03\u4e0a\u5347\u7684\u533a\u95f4\u5185\u3002\n\n\u5047\u8bbe\u6211\u4eec\u5148\u6c42\u51fa\u4e86\u6240\u6709\u7684\u957f\u5ea6\uff0c\u73b0\u5728\u8981\u5179\u5a03\u4fee\u6539\uff1f\n\n$Step3:$\n\n\u6ce8\u610f\u5230\u6bcf\u6b21\u4fee\u6539\u53ea\u4f1a\u52a8$log$\u4e2a\u8282\u70b9\uff0c\u6211\u4eec\u53d1\u73b0\u53ea\u6709\u8fd9$\\log$\u4e2a\u8282\u70b9\u7684\u4e0a\u5347\u5e8f\u5217\u4f1a\u88ab\u4fee\u6539\u3002\n\n\u8981$O(1)$\u53bb\u91cd\u65b0\u6c42\u957f\u5ea6\u663e\u7136\u662f\u975e\u5e38\u96be\u7684\uff0c\u6211\u4eec\u6709\u6ca1\u6709\u4ec0\u4e48\u597d\u529e\u6cd5\u5462\uff1f\n\n\u6ce8\u610f\u5230\u5047\u8bbe\u5f53\u524d\u9700\u8981\u66f4\u65b0$x$\u8282\u70b9\u7684\u533a\u95f4\u957f\u5ea6\uff0c\u90a3\u4e48$ls(x)$\u548c$rs(x)$\u7684\u4fe1\u606f\u5fc5\u7136\u5df2\u7ecf\u6c42\u51fa\u3002\n\n\u8003\u8651$x$\u8282\u70b9\u7ba1\u8f96\u7684\u533a\u95f4$[l,r]$\u5185\u5de6\u533a\u95f4\u5fc5\u7136\u662f\u94a6\u5b9a\u8981\u9009\u5165\u7684\uff0c\u6240\u4ee5\u957f\u5ea6\u4f1a\u81ea\u5e26\u4e00\u4e2a$tr[ls(x)].len$\uff0c\u5982\u679c\u6211\u4eec\u80fd\u5feb\u901f\u6c42\u51fa\u53f3\u533a\u95f4\u5185\u6bd4$tr[ls(x)].mx$\u7684\u6700\u5927\u503c\u66f4\u5927\u7684\u70b9\u4e3a\u8d77\u70b9\u7684\u5355\u8c03\u589e\u5e8f\u5217\u957f\u5ea6\uff0c\u90a3\u4e48\u5c31\u5f88$nice$\u4e86\n\n\u4e8e\u662f\u6211\u4eec\u628a\u8fd9\u4e2a\u64cd\u4f5c**\u62bd\u8c61**\u6210\u4e3a\u4e00\u4e2a\u8be2\u95ee\uff0c\u90a3\u4e48\u73b0\u5728\u8981\u89e3\u51b3\u7684\u95ee\u9898\u662f\uff0c\u901a\u8fc7\u5df2\u77e5\u7684\u4fe1\u606f\uff0c\u6c42\u51fa\u533a\u95f4$[mid+1,r]$\u6bd4$tr[ls].mx$\u5927\u7684\u4e0a\u5347\u5e8f\u5217\u7684\u957f\u5ea6\u3002\n\n\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u9012\u5f52\u7684\u8be2\u95ee\uff0c\u5982\u679c\u4e00\u6bb5\u533a\u95f4\u7684\u8d77\u70b9\u6bd4\u8fd9\u4e2a\u503c(\u5f53\u524d\u8be2\u95ee\u503c)\u5927\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u76f4\u63a5\u8fd4\u56de\u8fd9\u4e2a\u533a\u95f4\u7684\u957f\u5ea6\u3002\n\n\u5426\u5219\u5982\u679c\u8fd9\u6bb5\u533a\u95f4\u7684\u6700\u5927\u503c\u4ecd\u7136\u6bd4\u5f53\u524d\u8be2\u95ee\u503c\u5927\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8fd4\u56de$0$\n\n\u5982\u679c\u4e0a\u8ff0\u4e24\u79cd\u90fd\u4e0d\u6ee1\u8db3\uff0c\u5c31\u9012\u5f52\u5904\u7406\u5de6\u53f3\u513f\u5b50\u3002\n\n\u4e8e\u662f\u4f60\u6253\u51fa\u4e86\u5982\u4e0b\u7684\u4ee3\u7801\uff1a\n\n```cpp\nint query( int x, int l, int r, double Max ) {\n    if( l == r ) return v[l] > Max ; \n    int len = 0, mid = ( l + r ) >> 1;\n    if( v[tr[x].fr] > Mx ) return tr[x].len ; \n    if( tr[x].mx <= Mx ) return 0 ; \n    return query( ls(x), l, mid, Max ) + query( rs(x), mid + 1, r, max( Max, tr[ls(x)].mx ) ) ; \n}\n```\n\n\u4f60\u53d1\u73b0\u4ee5\u8fd9\u4e2a\u8be2\u95ee\u6765\u5904\u7406\u957f\u5ea6\uff0c\u4e0d\u4ec5\u8dd1\u7684\u6162\u5f97\u98de\u8d77\uff0c\u8fd8$T$\u4e86\u3002\u3002\u3002\n\n\u4ed4\u7ec6\u601d\u8003\uff0c\u8fd9\u660e\u663e\u662f\u4e00\u4e2a\u4e0a\u754c\u4e3a$O(n)$\u7684\u51fd\u6570\uff0c\u6240\u4ee5\u5b83\u4f1a\u7406\u6240\u5f53\u7136\u7684\u8dd1\u7684\u6162\u3002\n\n\u6211\u4eec\u80fd\u4f18\u5316\u5417\uff1f\n\n**\u8fd9\u4e2a\u5f53\u4e2d\u660e\u663e\u6709\u4e00\u4e2a\u90e8\u5206\u9020\u6210\u4e86\u5b83\u5de8\u5927\u7684\u590d\u6742\u5ea6\uff1a**\n\n```cpp\nreturn query( ls(x), l, mid, Max ) + query( rs(x), mid + 1, r, max( Max, tr[ls(x)].mx ) ) ; \n```\n\n\u6211\u4eec\u8003\u8651\u4f18\u5316\u5b83\n\n\u53d1\u73b0\u5982\u679c\u5de6\u513f\u5b50\u533a\u95f4\u5185\u6700\u5927\u503c\u6bd4\u5f53\u524d\u6700\u5927\u503c\u5c0f\uff0c\u90a3\u4e48\u6211\u4eec\u5ffd\u7565\u5de6\u533a\u95f4\uff0c\u76f4\u63a5\u9012\u5f52\u5904\u7406\u53f3\u533a\u95f4\u3002\n\n\u5982\u679c\u5de6\u513f\u5b50\u533a\u95f4\u5185\u6700\u5927\u503c\u6bd4\u5f53\u524d\u6700\u5927\u503c\u5927\uff0c\u90a3\u4e48\u53f3\u513f\u5b50\u533a\u95f4\u957f\u5ea6\u6211\u4eec\u5b9e\u9645\u4e0a\u5df2\u7ecf\u6c42\u51fa\u6765\uff0c\u5373\u6574\u4e2a\u533a\u95f4\u7684\u957f\u5ea6(\u5f53\u524d\u5904\u7406\u5230)$-$\u5de6\u513f\u5b50\u533a\u95f4\u957f\u5ea6\u3002\n\n\u8fd9\u4e2a\u53ef\u4ee5\u901a\u8fc7\u81ea\u5df1\u753b\u56fe\u611f\u6027\u7406\u89e3\u3002\n\n\u4e8e\u662f\u4f60\u5c06\u539f\u6765\u7684```query```\u6539\u6210\u4e86\u8fd9\u4e2a\u6837\u5b50\uff1a\n\n```cpp\nint query( int x, int l, int r, double Max ) {\n\tif( l == r ) return v[l] > Max ; \n\tint mid = ( l + r ) >> 1;\n\tif( tr[ls(x)].mx <= Max ) return query( rs(x), mid + 1, r, Max ) ; \n\telse return query( ls(x), l, mid, Max ) + tr[x].len - tr[ls(x)].len ; \n}\n```\n\n\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u5c31\u505a\u5230\u4e86$O(\\log n)$\u4e86\n\n\u603b\u590d\u6742\u5ea6$O(n \\log^2 n)$\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define rep( i, s, t ) for( register int i = s; i <= t; ++ i )\n#define re register\n#define ls(x) x * 2\n#define rs(x) x * 2 + 1\n#define F(x) tr[x].fr\nint read() {\n\tchar cc = getchar(); int cn = 0, flus = 1;\n\twhile(cc < '0' || cc > '9') {  if( cc == '-' ) flus = -flus;  cc = getchar();  }\n\twhile(cc >= '0' && cc <= '9')  cn = cn * 10 + cc - '0', cc = getchar();\n\treturn cn * flus;\n}\nconst int N = 200000 + 5 ; \nint n, m, top ; \ndouble v[N] ; \nstruct Tree {\n\tdouble mx ; \n\tint fr, len ; \n} tr[N * 4];\nint query( int x, int l, int r, double Max ) {\n\tif( l == r ) return v[l] > Max ; \n\tint mid = ( l + r ) >> 1;\n\tif( tr[ls(x)].mx <= Max ) return query( rs(x), mid + 1, r, Max ) ; \n\telse return query( ls(x), l, mid, Max ) + tr[x].len - tr[ls(x)].len ; \n}\nvoid update( int wh, double w, int x, int l, int r ) {\n\tif( l == r ) {\n\t\ttr[x].mx = w, tr[x].fr = l, tr[x].len = 1 ; return ;\n\t}\n\tint mid = ( l + r ) >> 1 ;\n\tif( wh <= mid ) update( wh, w, ls(x), l, mid ) ;\n\telse update( wh, w, rs(x), mid + 1, r ) ; \n\ttr[x].len = tr[ls(x)].len + query( rs(x), mid + 1, r, tr[ls(x)].mx ); \n\ttr[x].mx = max( tr[ls(x)].mx, tr[rs(x)].mx ) ;\n}\nvoid build( int x, int l, int r ) {\n\ttr[x].fr = l ; if( l == 1 ) tr[x].len = 1 ;  \n\tif( l == r ) return ; \n\tint mid = ( l + r ) >> 1 ; \n\tbuild( ls(x), l, mid ), build( rs(x), mid + 1, r ) ;  \n}\nsigned main()\n{\n\tn = read(), m = read() ; \n\tint x ; build( 1, 1, n + 1 ) ;\n\trep( i, 1, m ) {\n\t\tx = read(), v[x + 1] = ( 1.0 * read() ) / ( 1.0 * x ) ; \n\t\tupdate( x + 1, v[x + 1], 1, 1, n + 1 ) ;\n\t\tprintf(\"%d\\n\", tr[1].len - 1 ) ; \n\t}\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1563456478,
        "uid": 30036,
        "name": "Soulist",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4198 \u3010\u697c\u623f\u91cd\u5efa\u3011"
    },
    {
        "content": "\u849f\u84bb\u6e23\u6e23\u79b9\u770b\u5230\u8fd9\u4e2a\u9898\u65f6\u5341\u5206\u4e0d\u60f3\u5199\u7ebf\u6bb5\u6811emmmm\n\n\u4e8e\u662f\u4e4e\u3002\u3002\u3002\u3002\u5206\u5757\uff01\uff01\uff01\n\n\u5206\u5757\u3002\u601d\u8def\u5c31\u662f\uff1a\u5982\u679c\u4e00\u4e2a\u697c\u623f\u80fd\u88ab\u770b\u89c1\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b83\u7684\u623f\u9876\u5230(0,0)\u8fde\u7ebf\u7684\u659c\u7387 \u6bd4\u524d\u9762\u7684\u90fd\u5927\u3002\u6211\u4eec\u66b4\u529b\u7ef4\u62a4\u6bcf\u4e2a\u5757\u5185\u659c\u7387\u7684\u6700\u957f\u4e0a\u5347\u5e8f\u5217\uff0c\u7136\u540e\u67e5\u8be2\u7684\u65f6\u5019\u4e8c\u5206\u627e\u5230\u5757\u5185\u7b2c\u4e00\u4e2a\u80fd\u770b\u5230\u7684\uff0c\u90a3\u4e48\u5b83\u4e4b\u540e\u7684\u6240\u6709\u6700\u957f\u4e0a\u5347\u5e8f\u5217\u91cc\u7684\u5143\u7d20\u5c31\u90fd\u80fd\u88ab\u770b\u5230\uff0c\u518d\u53bb\u641c\u4e0b\u4e00\u4e2a\u5757\u5c31\u597d\u4e86\u3002\n\n\n\u4e0b\u9762\u6211\u6765\u8bb2\u4e0b\u5177\u4f53\u8fc7\u7a0b\uff0c\u6211\u4eec\u8981\u6c42\u7684\u4e2a\u6570\uff0c\u5c31\u662f\u659c\u7387\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\uff0c\u5927\u5bb6\u601d\u8003\u4e00\u4e0b\u3002\u3002\u3002\u663e\u7136\u6210\u7acb\u3002\n\n\u6211\u4eec\u8bbea\uff0cb\u4ee5\u53ca\u4ed6\u4eec\u7684\u9ad8\u5ea6\u4e3ah[a],h[b],\u5982\u679ca\u4e0d\u4f1a\u88abb\u6321\u4f4f\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u63a8\u51fa\u8fd9\u6837\u4e00\u4e2a\u5f0f\u5b50\uff1ah[a]/a >= h[b]/b\uff0c\u4ea4\u53c9\u76f8\u4e58\u4e4b\u540e\u53ef\u5f97\uff1ah[a]*b >= h[b]*a\u3002\n\n\u5bf9\u4e8e\u539f\u70b9\u7684\u8bdd\u6211\u4eec\u53ea\u8981\u5224\u65adh[a]\u662f\u5426\u5927\u4e8e0\u5c31\u884c\u4e86\u3002\n\n\u4fee\u6539\uff1a\u7136\u540e\u6211\u4eec\u66b4\u529b\u66f4\u65b0\u5757\u5185\u5143\u7d20\u4fe1\u606f\uff0c\u6bcf\u6b21\u6e05\u96f6\uff0c\u91cd\u65b0\u7ef4\u62a4\u5757\u5185\u6700\u957f\u4e0a\u5347\u5e8f\u5217\u957f\u5ea6\u3002\n\n\u67e5\u8be2\uff1a\u6211\u4eec\u8bbelast\u4e3a\u4e0a\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u5757\u7684\u672b\u5c3e\u8282\u70b9\uff0c\u90a3\u4e48\u4ece\u7b2c\u4e00\u5757\u5f00\u59cb\u5230\u6700\u540e\u4e00\u5757\uff0c\u5728\u5757\u5185\u8fdb\u884c\u4e8c\u5206\u67e5\u627e\u51fa\u4e0elast\u76f8\u6bd4\u521a\u6ee1\u8db3\u6761\u4ef6\u7684\u70b9\uff0c\u90a3\u4e48\uff0c\u4ece\u8fd9\u4e2a\u70b9\u4e00\u76f4\u5230\u672b\u5c3e\u5747\u4e3a\u5408\u6cd5\u5e8f\u5217\uff0c\u90a3\u4e48ans=\u8fd9\u6bb5\u5e8f\u5217\u7684\u957f\u5ea6qwq\uff0c\u7136\u540e\u66f4\u65b0last\u4e3a\u672c\u5757\u7684\u672b\u5c3e\u3002\n\n\u6211\u4eec\u5728\u66b4\u529b\u641e\u5b9a\u6bcf\u4e2a\u5757\u7684\u9012\u589e\u6570\u5217\uff0c\u628a\u8fd9\u4e9b\u659c\u7387\u4ece\u5c0f\u5230\u5927\u585e\u5230\u4e00\u4e2a\u6808\u91cc\u8fb9\uff08\u65f6\u95f4\u590d\u6742\u5ea6O(n/b)\uff0cb\u4e3a\u5757\u7684\u5927\u5c0f\uff09\u3002\n\n\u7136\u540e\u67e5\u627e\u65f6\u4ece\u5934\u5f00\u59cb\uff0c\u5728\u6bcf\u4e2a\u5757\u5bf9\u5e94\u7684\u6808\u4e2d\u4e8c\u5206\u67e5\u627e\u7b2c\u4e00\u4e2a\u659c\u7387\u6bd4\u524d\u4e00\u4e2a\u5927\u7684\u4f4d\u7f6e\uff0c\u8fd9\u4e2a\u4f4d\u7f6e\u548c\u6808\u91cc\u9762\u540e\u8fb9\u7684\u4f4d\u7f6e\u90fd\u80fd\u88ab\u770b\u5230\uff08\u65f6\u95f4\u590d\u6742\u5ea6O(blog(n/b))\uff09\u3002\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n*(n/b + blog(n/b)))\u2248O(n*(n/b + blogn))\u3002\n\n\u8fd9\u6837\u4e00\u6765b=\u221a(n/logn)/2\u6709\u5947\u6548\u3002\u60f3\u77e5\u9053\u4e3a\u4ec0\u4e48\u4e48\uff1f\n\n\u901a\u8fc7\u6211\u5de8\u6c34\u65e0\u6bd4\u7684\u8ba1\u7b97\uff0c\u4ee5\u53ca\u4e00\u6b21\u6b21\u8bd5\u9519\u8bd5\u51fa\u7684\uff0c\u4e0d\u7136\u4f1atle\uff0c\u9664\u975e\u4f60\u5f00o2\uff0c\u5f3a\u70c8\u5efa\u8bae\u7528\u5feb\u8bfb\u3002\n\n\u4e0d\u7528o2\u4f18\u5316\u4ee3\u7801\u5982\u4e0bqwq\n\n```cpp\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define N 100005\n#define LL long long\nusing namespace std;;\nint n,m,b,h[N],p[N];\nstruct stack {\n    int s[N],top;\n}t[330];\nbool check(LL a,LL b) {\n    if(!b)\n        return h[a] > 0;\n    return (LL)(h[a] * b) > (LL)(h[b] * a);\n}\ninline int read() \n{\n    int w=0;\n    char ch;\n    while(ch<'0'||ch>'9')\n    {\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9')\n    {\n        w=(w<<3)+(w<<1)+ch-'0';\n        ch=getchar();\n    }\n    return w;\n}\nint main() {\n    n=read();\n    m=read();\n    b = sqrt(n * log(n) / 2);\n    for(register int i = 1;i <= n;i++) \n        p[i] = (i - 1) / b + 1;\n    while(m--) {\n        int x,ans = 0;\n        x=read();\n        h[x]=read();\n        register int l = (p[x] - 1) * b + 1,r = min(n,p[x] * b);\n        t[p[x]].top = 0;\n        for(register int i = l;i <= r;i++)\n            if(check(i,t[p[x]].s[t[p[x]].top]))\n                t[p[x]].s[++t[p[x]].top] = i;\n        for(register int i = 1,last = 0;i <= p[n];i++) {\n            register int q = 0;\n            l = 1,r = t[i].top;\n            while(l <= r) {\n                register int mid = (l + r) >> 1;\n                if(check(t[i].s[mid],last)){ \n                    q = mid;\n                    r = mid - 1;\n                }\n                else l = mid + 1;\n            }\n            if(q){\n                last = t[i].s[t[i].top];\n                ans += t[i].top - q + 1;\n            }\n        }\n        printf(\"%d\\n\",ans);\n    }\n}\n```",
        "postTime": 1550401540,
        "uid": 160811,
        "name": "\u4f18\u79c0\u7684\u6e23\u6e23\u79b9",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4198 \u3010\u697c\u623f\u91cd\u5efa\u3011"
    },
    {
        "content": "## \u9898\u76ee\u603b\u7ed3\n\n\u7ef4\u62a4\u4e00\u4e2a\u5e8f\u5217\uff0c\u5728\u7ebf\u5355\u70b9\u4fee\u6539\uff0c\u6c42\u51fa\u6bcf\u4e00\u65f6\u523b\u5404\u6bb5\u7684\u524d\u7f00\u6700\u5927\u503c\u6570\u76ee\uff1b\n\n## \u6570\u636e\u8303\u56f4\n\n\u5bf9\u4e8e\u6240\u6709\u7684\u6570\u636e1<=Xi<=N\uff0c1<=Yi<=10^9\n\nN,M<=100000\n\n## \u89e3\u9898\u601d\u8def\n\n\u4f7f\u7528\u7ebf\u6bb5\u6811\u52a8\u6001\u7ef4\u62a4\u6bcf\u4e2a\u533a\u95f4\u7684\u6700\u5927\u503c\u3001\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\uff1b\n\n### change\n```cpp\nvoid change(int l, int r, int x, int &q, double &k) {\n    if (l >= r) {\n        mx[x] = k;\n        cnt[x] = 1;\n        return;\n    }\n    gm;\n    if (q <= mid) change(l, mid, ls, q, k);\n    else change(mid + 1, r, rs, q, k);\n    mx[x] = max(mx[ls], mx[rs]);\n    cnt[x] = cnt[ls] + count(mid + 1, r, rs, mx[ls]);\n}\n```\n\u4e8c\u5206\u5230\u76ee\u6807\u70b9\uff0c\u4fee\u6539\u76ee\u6807\u70b9\u7684mx\uff1b\u5f88\u663e\u7136\u7684\uff0c\u6bcf\u4e2a\u5355\u70b9\u7684cnt\uff08\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\uff09\u90fd\u662f1\uff1b\n\n\u7136\u540e\u9012\u5f52\u56de\u6eaf\u5904\u7406\uff0c\u66f4\u65b0mx\uff1b\u6bcf\u4e2a\u533a\u95f4\u7684\u5de6\u533a\u95f4\u4e00\u5b9a\u4f1a\u4e3a\u7b54\u6848\u4ea7\u751f\u8d21\u732e\uff0c\u800c\u53f3\u533a\u95f4\u80fd\u4e3a\u7b54\u6848\u4ea7\u751f\u8d21\u732e\u7684\u70b9\u5fc5\u987b\u5927\u4e8e\u5de6\u533a\u95f4\u6700\u5927\u70b9\uff0c\u6240\u4ee5\u8c03\u7528count( )\uff0c\u7136\u540e\u66f4\u65b0cnt;\n\n### count\n\n\u7edf\u8ba1\u533a\u95f4[ l , r ]\u5185\u6700\u5c0f\u503c\u5927\u4e8ek\u7684\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\uff1b\n\n```cpp\nint count(int l, int r, int x, double &k) {\n    if (l >= r) return mx[x] > k; // \u82e5\u662f\u5355\u70b9\uff0c\u5219\u5982\u679c\u5f53\u524d\u70b9\u7684\u503c\u5927\u4e8ek\uff0c\u8fd4\u56de1\n    gm;\n    if (mx[ls] <= k) return count(mid + 1, r, rs, k);\n    // \u5982\u679c\u5de6\u533a\u95f4\u6700\u5927\u503c\u90fd\u5c0f\u4e8ek\uff0c\u90a3\u4e48\u5bf9\u7b54\u6848\u4ea7\u751f\u8d21\u732e\u7684\u53ea\u6709\u53f3\u533a\u95f4\n    else return cnt[x] - cnt[ls] + count(l, mid, ls, k);\n    // \u5426\u5219\uff0c\u5f53\u524d\u533a\u95f4\u7684\u53f3\u533a\u95f4\u80fd\u53d6\u7684\u6570\u91cf\uff08cnt[x] - cnt[ls]\uff09\uff08\u6ce8\u610f\u4e0d\u662fcnt[rs]\uff0c\u8981\u8003\u8651\u5de6\u533a\u95f4\u7684\u906e\u6321\uff09\u4e0d\u4f1a\u53d8\uff0c\u56e0\u4e3a\u672c\u6765\u88ab\u5de6\u533a\u95f4\u906e\u4f4f\u7684\u8fd8\u662f\u4f1a\u88ab\u906e\u4f4f\uff1b\u8fd9\u65f6\u9012\u5f52\u5904\u7406\u53f3\u533a\u95f4\n}\n```\n\n## \u6613\u9519\u8bef\u533a\n\n\u4fee\u6539\u65f6\u8bb0\u5f97\u662f\u4fee\u6539\u659c\u7387\n\n\u6ce8\u610fcount\u7edf\u8ba1\u7684\u65b9\u6cd5\uff1b\n\n## \u4ee3\u7801\u5c55\u793a\n\ncount\u4e3aO( log n )\u7684\u590d\u6742\u5ea6\uff0cchange\u9700\u8981\u8c03\u7528log\u6b21count\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define N 400005\n#define ll long long\n#define inf 0x3f3f3f3f\n#define ri register int\n#define il inline\n#define fi first\n#define se second\n#define mp make_pair\n#define pi pair<int,int>\n#define mem0(x) memset((x),0,sizeof(x))\n#define mem1(x) memset((x),0x3f,sizeof(x))\n#define gm int mid=(l+r)>>1\n#define ls (x<<1)\n#define rs (x<<1|1)\nint n, m;\nint rt;\ndouble mx[N];\nint cnt[N];\nint count(int l, int r, int x, double &k) {\n    if (l >= r) return mx[x] > k;\n    gm;\n    if (mx[ls] <= k) return count(mid + 1, r, rs, k);\n    else return cnt[x] - cnt[ls] + count(l, mid, ls, k);\n}\nvoid change(int l, int r, int x, int &q, double &k) {\n    if (l >= r) {\n        mx[x] = k;\n        cnt[x] = 1;\n        return;\n    }\n    gm;\n    if (q <= mid) change(l, mid, ls, q, k);\n    else change(mid + 1, r, rs, q, k);\n    mx[x] = max(mx[ls], mx[rs]);\n    cnt[x] = cnt[ls] + count(mid + 1, r, rs, mx[ls]);\n}\nint main() {\n    scanf(\"%d%d\", &n, &m);\n    rt = 1;\n    int x, y;\n    double t;\n    while (m--) {\n        scanf(\"%d%d\", &x, &y);\n        t = (double)y / x;\n        change(1,n,rt,x, t);\n        printf(\"%d\\n\", cnt[rt]);\n    }\n    return 0;\n}\n```",
        "postTime": 1526207646,
        "uid": 58302,
        "name": "i207M",
        "ccfLevel": 0,
        "title": "\u89e3\u9898\u62a5\u544a-P4198-BZOJ2957\u697c\u623f\u91cd\u5efa"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u7740\u5b9e\u662f\u4e00\u4e2a\u7ebf\u6bb5\u6811\u597d\u9898\u3002\n\n\u6309\u7167\u5218\u6c5d\u4f73\u7684\u89c2\u70b9\uff0c\u6211\u4eec\u5148\u4e0d\u8003\u8651\u590d\u6742\u5ea6\uff0c\u4ece\u6700\u8111\u6b8b\u7684\u505a\u6cd5\u5f00\u59cb\u60f3\n\n\u9996\u5148\u662f\u6bcf\u4fee\u6539\u4e00\u6b21\u5c31\u67e5\u8be2\u4e00\u6b21\uff0c\u590d\u6742\u5ea6O\uff08N*M\uff09\uff0c\u663e\u7136\u4e0d\u884c\u7684\u3002\n\n\u7136\u540e\u8111\u8865\u4e00\u4e0b\uff0c\u5f88\u5bb9\u6613\u60f3\u51fa\u7ebf\u6bb5\u6811+\u5c0f\u4f18\u5316\uff1a\u7ef4\u62a4\u6bcf\u4e2a\u533a\u95f4\u7684\u6700\u5927\u659c\u7387\uff0c\u5982\u679c\u533a\u95f4\u659c\u7387\u5c0f\u4e8e\u4e86\u524d\u9762\u7684\u6700\u5927\u659c\u7387\uff0c\u5c31\u53ef\u4ee5\u8df3\u8fc7\u8fd9\u4e2a\u533a\u95f4\u3002\n\n\u849f\u84bb\u4f5c\u8005\u8bd5\u4e86\u8fd9\u4e2a\u505a\u6cd5\uff0c50pts\u4f3c\u4e4e\u8fd8\u884c\uff0c\u6838\u5fc3\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\nint query(double foremax,int l,int r,int id){\n    if(l==r)return 1;\n    int m=(l+r)>>1,ans=0;\n    if(maxk[id<<1]>foremax){\n        ans+=query(foremax,l,m,id<<1);\n        foremax=maxk[id<<1];\n    }\n    if(maxk[id<<1|1]>foremax)\n        ans+=query(foremax,m+1,r,id<<1|1);\n    return ans;\n}\n```\n\n\u597d\u4e86\uff0c\u5f00\u59cb\u60f3\u66f4\u4f18\u7684\u7b97\u6cd5\u2014\u2014\u65e2\u7136\u6211\u4eec\u53ef\u4ee5\u7528max\u53bb\u5361\u533a\u95f4\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u518d\u7528min\u53bb\u5361\u4ed6\u5462\uff1f\uff1f\n\n\u4e8e\u662f\u518d\u5f15\u5165\u4e24\u4e2a\u6570\u7ec4\uff1amin\u4e0emaxl\u5206\u522b\u8868\u793a\u533a\u95f4\u6700\u5c0f\u503c\u548c\u533a\u95f4\u5355\u8c03\u589e\u5e8f\u5217\u957f\u5ea6\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u5728\u533a\u95f4\u6700\u5c0f\u503c\u5927\u4e8e\u524d\u9762\u7684\u6700\u5927\u503c\u65f6\uff0c\u76f4\u63a5\u8865\u4e0a\u8fd9\u4e2a\u533a\u95f4\u7684\u5e8f\u5217\u957f\u5ea6\u3002\u6838\u5fc3\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\nint get(int l,int r,int id,double foremax){\n    int m=(l+r)>>1,ans=0;\n    if(mink[id]>foremax)return maxl[id];\n    if(maxk[id<<1]>foremax){\n        ans+=get(l,m,id<<1,foremax);\n        foremax=maxk[id<<1];\n    }\n    if(maxk[id<<1|1]>foremax)\n        ans+=get(m+1,r,id<<1|1,foremax);\n    return ans;\n}\ninline void change(int x,int l,int r,int id,int k){\n    if(x==l&&l==r){\n        mink[id]=maxk[id]=(double)k/x;\n        maxl[id]=1;\n        return;\n    }\n    int m=(l+r)>>1;\n    if(x<=m)change(x,l,m,id<<1,k);\n    else change(x,m+1,r,id<<1|1,k);\n    maxk[id]=max(maxk[id<<1],maxk[id<<1|1]);\n    mink[id]=min(mink[id<<1],mink[id<<1|1]);\n    maxl[id]=maxl[id<<1];\n    if(maxk[id<<1|1]>maxk[id<<1])\n    maxl[id]+=get(m+1,r,id<<1|1,maxk[id<<1]);\n}\n```\n\u7136\u800c60pts\uff0c\u9178\u723d\u3002\n\u7ee7\u7eed\u60f3\u4f18\u5316\u3002\u7136\u540e\u2014\u2014\n\n\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u5982\u679c\u6211\u4eec\u7b97\u51fa\u4e86\u5de6\u533a\u95f4\u7684\u5355\u8c03\u9012\u589e\u957f\u5ea6\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u7528\u8fd9\u4e00\u5c42\u533a\u95f4\u5355\u8c03\u9012\u589e\u957f\u5ea6\u76f4\u63a5\u51cf\u53bb\u5de6\u533a\u95f4\u672a\u9009\u957f\u5ea6\u6765\u51fa\u89e3\u3002\n\u800c\u8981\u662f\u5de6\u533a\u95f4\u88abmax\u5361\u6389\u4e86\uff0c\u90a3\u6211\u4eec\u53ea\u9700\u8981\u76f8\u540c\u5b50\u95ee\u9898\u8f6c\u5316\uff0c\u76f4\u63a5\u67e5\u8be2\u53f3\u533a\u95f4\u5c31\u5b8c\u4e86\uff08\u60f3\u4e00\u60f3\u4e3a\u4ec0\u4e48via\u5218\u6c5d\u4f73\uff09\u3002\n\n\u4e8e\u662f.....\u5c31\u6ee1\u5206\u4e86\uff01\u6838\u5fc3\u4ee3\u7801\u5982\u4e0b\n```cpp\nint get(int l,int r,int id,double foremax){\n    int m=(l+r)>>1,ans=0;\n    if(mink[id]>foremax)return maxl[id];\n    if(maxk[id<<1]>foremax)\n        return maxl[id]+get(l,m,id<<1,foremax)-maxl[id<<1];\n    if(maxk[id<<1|1]>foremax)\n        return get(m+1,r,id<<1|1,foremax);\n}\ninline void change(int x,int l,int r,int id,int k){\n    if(x==l&&l==r){\n        mink[id]=maxk[id]=(double)k/x;\n        maxl[id]=1;\n        return;\n    }\n    int m=(l+r)>>1;\n    if(x<=m)change(x,l,m,id<<1,k);\n    else change(x,m+1,r,id<<1|1,k);\n    maxk[id]=max(maxk[id<<1],maxk[id<<1|1]);\n    mink[id]=min(mink[id<<1],mink[id<<1|1]);\n    maxl[id]=maxl[id<<1];\n    if(maxk[id<<1|1]>maxk[id<<1])\n    maxl[id]+=get(m+1,r,id<<1|1,maxk[id<<1]);\n}\n```\nemmmm\uff0c\u5982\u679c\u6709\u4ec0\u4e48\u9519\u8bef\u8bf7\u76f4\u63a5\u6307\u51fa\u6765\u54e6\uff1f",
        "postTime": 1557927262,
        "uid": 109396,
        "name": "Uniecho1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4198 \u3010\u697c\u623f\u91cd\u5efa\u3011"
    },
    {
        "content": "\u611f\u89c9\u8fd9\u79cd\u7ebf\u6bb5\u6811\u91cc\u5f3a\u884c\u4e8c\u6b21\u9012\u5f52\u6c42\u89e3\u633a\u5e38\u89c1\u7684\u2026\u2026\u6700\u8fd1\u9047\u5230\u597d\u591a~~\u8fd8\u662f\u4e0d\u4f1a~~\n\n\u8003\u8651\u5c06\u4e00\u4e2a\u533a\u95f4\u5206\u5de6\u53f3\u4e24\u533a\u95f4\u7684\u659c\u7387\u6700\u5927\u503c\u60c5\u51b5\u8ba8\u8bba\n\n\u5047\u8bbe$val_{[l,r]}$\u8868\u793a\u533a\u95f4$[l,r]$\u7684**\u5bf9\u81ea\u5df1**\u7684\u8d21\u732e\uff08$[l,r]$\u5916\u7684\u70b9\u65e0\u5f71\u54cd\uff09\n\n\u5982\u679c\u4e00\u4e2a\u533a\u95f4$[l,r]$\u5de6\u533a\u95f4$[l,mid]$\u6700\u5927\u503c\u4e3a\u533a\u95f4\u6700\u5927\u503c\uff0c$val_{l,r}$\u7684\u503c\u5c31\u4e3a$val_{l,mid}$\uff0c\u56e0\u4e3a\u53f3\u533a\u95f4$[mid+1,r]$\u90fd\u88ab\u6321\u4f4f\u4e86\n\n\u5982\u679c\u5de6\u533a\u95f4\u6700\u5927\u503c\u4e0d\u662f\u533a\u95f4\u6700\u5927\u503c\uff0c\u8bf4\u660e\u533a\u95f4\u6700\u5927\u503c\u5728\u53f3\u533a\u95f4\uff0c\u8003\u8651\u5c06\u53f3\u533a\u95f4\u9012\u5f52\u6c42\u89e3\n\n\u53ef\u4ee5\u53d1\u73b0\u5f71\u54cd\u53f3\u533a\u95f4\u7684\u8fd8\u662f\u5de6\u533a\u95f4\u7684\u6700\u5927\u503c\uff0c\u5982\u679c$max_{l,mid}\\geq max_{l_1,r_1},mid+1\\leq l_1\\leq r_1\\leq r$\uff0c$val_{l_1,r_1}$\u662f\u6ca1\u6709\u8d21\u732e\u7684\n\n\u5982\u679c$max_{l,mid}\\geq max_{l_1,mid_1}$\uff0c$val_{l_1,mid_1}$\u6ca1\u6709\u8d21\u732e\uff0c\u540c\u65f6\u8bf4\u660e$max_{l_1,r_1}$\u5b58\u5728\u4e8e$[mid_1+1,r_1]$\u4e2d\uff0c\u9012\u5f52\u6c42\u89e3$[mid_1+1,r_1]$\n\n\u5426\u5219\u4fee\u6539\u503c\u5bf9$val_{mid_1+1,r_1}$\u6ca1\u6709\u5f71\u54cd\uff0c\u76f4\u63a5\u9012\u5f52\u6c42\u89e3$[l_1,mid_1]$\u5e76\u52a0\u4e0a$val_{l_1,r_1}-val_{l_1,mid_1}$\n\n\u4e3a\u4ec0\u4e48\u4e0d\u662f$val_{mid_1+1,r_1}$\uff1f\n\n![](https://a-failure.github.io/img/\uff1f\uff1f\uff1f\uff1f\uff1f.jpg)\n\n$val_{l,r}$\u8868\u793a\u533a\u95f4$[l,r]$\u7684**\u5bf9\u81ea\u5df1**\u7684\u8d21\u732e\uff0c\u4e5f\u5c31\u662f\u5ffd\u7565\u4e86\u533a\u95f4\u5916\u7684\u5f71\u54cd\uff0c\u800c\u6211\u4eec\u8981\u6c42\u7684\u662f\u53d7$[l_1,mid_1]$\u5f71\u54cd\u7684$[mid_1+1,r_1]$\u8d21\u732e\uff0c\u6240\u4ee5\u7528$val_{l_1,r_1}-val_{l_1,mid_1}$\uff0cta\u4eec\u90fd\u53d7$[l_1,mid_1]$\u7684\u5f71\u54cd\n\n\u51b5\u4e14\u533a\u95f4\u8d21\u732e\u5728\u8fd9\u91cc\u4e0d\u6ee1\u8db3\u533a\u95f4\u76f8\u52a0\u6027\u554a~~\u4e0d\u7136\u4e3a\u4ec0\u4e48\u8981\u4e8c\u6b21\u9012\u5f52\u6c42\u89e3qaq~~\n\n### \u4ee3\u7801\n```\n# include<iostream>\n# include<cstring>\n# include<cstdio>\n# include<algorithm>\n# define tl (k<<1)\n# define tr (k<<1|1)\n# define mid (l+r>>1)\nusing namespace std;\nconst int MAX=4e5+5;\nstruct p{\n\tint x;\n\tdouble maxn;\n}s[MAX];\nint n,m;\nint read()\n{\n\tint x(0);\n\tchar ch=getchar();\n\tfor(;!isdigit(ch);ch=getchar());\n\tfor(;isdigit(ch);x=x*10+ch-48,ch=getchar());\n\treturn x;\n}\ndouble K(double x,double y)\n{\n\treturn y/x;\n}\nint GET_ANS(int l,int r,int k,double x)\n{\n\tif(l==r) return s[k].maxn>x;\n\tif(s[k].maxn<=x) return 0;\n\tif(s[tl].maxn<=x) return GET_ANS(mid+1,r,tr,x);\n\treturn s[k].x-s[tl].x+GET_ANS(l,mid,tl,x);\n}\nvoid pus(int l,int r,int k)\n{\n\ts[k].x=s[tl].x;\n\tif(s[tl].maxn>=s[tr].maxn) s[k].maxn=s[tl].maxn;\n\telse s[k].maxn=s[tr].maxn,s[k].x+=GET_ANS(mid+1,r,tr,s[tl].maxn);\n}\nvoid change(int l,int r,int k,int x,double dis)\n{\n\tif(l==r)\n\t{\n\t\ts[k].x=1;\n\t\treturn void(s[k].maxn=dis);\n\t}\n\tif(x<=mid) change(l,mid,tl,x,dis);\n\telse change(mid+1,r,tr,x,dis);\n\tpus(l,r,k);\n}\nint main()\n{\n\tn=read(),m=read();\n\tfor(int i=1,x;i<=m;++i)\n\t  x=read(),change(1,n,1,x,K(x,read())),printf(\"%d\\n\",s[1].x);\n\treturn 0;\n}\n```\n",
        "postTime": 1539918838,
        "uid": 49206,
        "name": "Dispwnl",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4198 \u3010\u697c\u623f\u91cd\u5efa\u3011"
    },
    {
        "content": "\uff08\u533a\u95f4\u6700\u5927\u53ef\u4fee\u6539\u4e0a\u5347\uff09\uff08\u7ebf\u6bb5\u6811\u505a\u6cd5\uff0c\u53ef\u4ee5\u5206\u5757\u4e71\u641e\uff09\n\n\u8fd9\u9053\u9898\u53ea\u662f\u8be2\u95ee1\u5230n\u533a\u95f4\uff0c\u5176\u5b9e\u53ef\u4ee5\u6539\u6210\u4efb\u610f\u533a\u95f4\u7684\u6700\u5927\u4e0a\u5347\u3002\n\n\u9996\u5148\u6ce8\u610f\u9898\u76ee\u662f\u8fde\u7ebf\uff0c\u56e0\u6b64\u4e0d\u662f\u9ad8\u5ea6\u4e0a\u5347\u662f\u659c\u7387\u4e0a\u5347\uff08y/x\uff09\uff0c\u4f46\u5728\u4e4b\u540e\u7684\u8bf4\u660e\u4e2d\u90fd\u4f1a\u8bf4\u659c\u7387\u4e3a\u9ad8\u5ea6\uff0c\u5927\u5bb6\u628a\u4ed6\u60f3\u8c61\u6210\u5728\u697c\u5e95\u5411\u4e0a\u4ef0\u671b\u770b\u5230\u591a\u5c11\u680b\u697c\u3002\n\n\u7136\u540e\u9020\u6811\uff0c\u7ef4\u62a4h\uff0c\u533a\u95f4\u5185\u6700\u5927\u7684\u9ad8\u5ea6\u7ef4\u62a4 s\uff0c\u533a\u95f4\u5185\u7684\u6700\u5927\u4e0a\u5347\u5b50\u5e8f\u5217\u3002\n\n\u6bcf\u6b21\u66f4\u65b0\u65f6\uff0c\u4e00\u8fb9\u7ef4\u62a4h\u548cs\uff0c\u6b64\u65f6\u53ef\u80fd\u9762\u4e34\u6c42s\u5982\u679c\u6c42\uff0c\u6b64\u65f6\u5c31\u8fdb\u5165\u8be2\u95ee\uff0c\u5176s\u4e3a\u5de6\u5b50\u6811\u7684s\u548c\u4ee3\u5165\u5de6\u5b50\u6811\u7684\u6700\u9ad8\u503c\u5230\u53f3\u5b50\u6811\u67e5\u8be2\u53f3\u5b50\u6811\u4e2d\u6bd4\u5de6\u5b50\u6811\u6700\u9ad8\u503c\u5927\u4e3a\u8d77\u70b9\u7684s\n\n\u8be2\u95ee\u65f6\u5982\u679c\u8be2\u95ee\u7684\u9ad8\u5ea6\u5927\u4e8e\u5de6\u5b50\u6811\u6700\u5927\uff0c\u8be2\u95ee\u53f3\u5b50\u6811\uff0c\u5426\u5219\u627e\u5de6\u5b50\u6811\u540e\u5c06\u5de6\u5b50\u6811\u7684\u6700\u5927\u9ad8\u5ea6\u4ee3\u5165\u53f3\u5b50\u6811\u6765\u67e5\u627e\u3002\uff08\u5982\u679c\u53f3\u5b50\u6811\u7684\u4e00\u4e9b\u7ed3\u70b9\u6bd4\u5de6\u5b50\u6811\u6700\u5927\u9ad8\u5ea6\u5c0f\u5219\u4e0d\u53ef\u80fd\u80fd\u770b\u5230\uff09\u6700\u540e\u6210\u529f\u7ef4\u62a4s\n\n\u7b54\u6848\u76f4\u63a5z[1].s\n    \n    \n\t#define maxn 100005\n\t#define midd ((z[p].b+z[p].a)>>1)\n\tstruct node{\n\tint a,b,s;\n\tdouble h;\n\t}z[maxn<<3];\n\n\tint n,m;\n\tvoid maketree(int p,int l,int r)\n\t{\n\tz[p].a=l; z[p].b=r;\n\tif(z[p].a==z[p].b)return;\n\tmaketree(p<<1,l,midd);\n\tmaketree(p<<1|1,midd+1,r);\n\t}\n\n\tint query(int p,double hh)\n\t{\n\tif(z[p].a==z[p].b){ return z[p].h>hh; }\n\t\tif(z[p<<1].h<=hh) return query(p<<1|1,hh);\n\t\telse\n\t\t{\n\t\t\treturn query(p<<1,hh)+z[p].s-z[p<<1].s;\n\t\t}\n\t}\n\n\tvoid update(int p,int x,double val)\n\t{\n\tif(z[p].a==z[p].b){ z[p].h=val; \t\tz[p].s=1; return;}\n\tif(x<=midd) update(p<<1,x,val);\n\telse update(p<<1|1,x,val);\n\tz[p].h=max(z[p<<1].h,z[p<<1|1].h);\n\tz[p].s=z[p<<1].s+query(p<<1|1,z[p<<1].h);\n\t}\n\n\tint main()\n\t{\n\tint i,x,y;\n\tscanf(\"%d%d\",&n,&m);\n\tmaketree(1,1,n);\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tupdate(1,x,(double)y/x);\n\t\tprintf(\"%d\\n\",z[1].s);\n\t}\n\t}",
        "postTime": 1518075312,
        "uid": 55343,
        "name": "Newuser",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4198 \u3010\u697c\u623f\u91cd\u5efa\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5148\u8f6c\u6362\u4e00\u4e0b\uff0c\u628a\u9ad8\u5ea6\u8f6c\u4e3a\u659c\u7387\uff0c\u90a3\u4e48\u9898\u76ee\u5c31\u8f6c\u6362\u6210\u4e86\u5e26\u4fee\u7684\u4ece\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u7684\u4e0a\u5347\u5b50\u5e8f\u5217\uff08\u5927\u96fe\uff09\u3002\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u7528\u7ebf\u6bb5\u6811\u89e3\u51b3\uff0c\u5173\u952e\u5c31\u662f\u5982\u4f55\u5408\u5e76\u4e24\u4e2a\u533a\u95f4\uff0c\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u8981\u77e5\u9053\u5de6\u533a\u95f4\u7684\u6700\u5927\u503c\uff0c\u7136\u540e\u5728\u53f3\u533a\u95f4\u5185\u627e\u5f00\u5934\u5927\u4e8e\u8fd9\u4e2a\u6700\u5927\u503c\u7684\u5b50\u5e8f\u5217\uff0c\u8fd9\u600e\u4e48\u505a\u5462\uff1f\u4e0d\u65ad\u627e\u6700\u5927\u503c\u5224\u65ad\u5373\u53ef\u3002\u90a3\u8fd9\u9053\u9898\u5c31\u89e3\u51b3\u4e86\u3002\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nstruct node\n{\n    int l,r,lc,rc,c;\n    double mx;\n}tr[210000];int trlen;\nvoid bt(int l,int r)\n{\n    trlen++;int now=trlen;\n    tr[now].l=l;tr[now].r=r;\n    tr[now].lc=tr[now].rc=-1;\n    tr[now].mx=0.0;tr[now].c=0;\n    if(l<r)\n    {\n        int mid=(l+r)/2;\n        tr[now].lc=trlen+1;bt(l,mid);\n        tr[now].rc=trlen+1;bt(mid+1,r);\n    }\n}\ninline int getsum(int now,double x)\n{\n\tif(tr[now].mx<=x)return 0;\n    if(tr[now].l==tr[now].r)return tr[now].c;\n    int lc=tr[now].lc,rc=tr[now].rc;\n    if(x>=tr[lc].mx)return getsum(rc,x);\n    else return getsum(lc,x)+tr[now].c-tr[lc].c;\n}\ninline void change(int now,int x,double k)\n{\n    if(tr[now].l==tr[now].r)\n    {\n        tr[now].mx=k;\n        tr[now].c=1;if(k==0.0)tr[now].c=0;\n        return ;\n    }\n    int lc=tr[now].lc,rc=tr[now].rc,mid=(tr[now].l+tr[now].r)/2;\n    if(x<=mid)change(lc,x,k);\n    else change(rc,x,k);\n    tr[now].mx=max(tr[lc].mx,tr[rc].mx);\n    if(tr[lc].c==0)tr[now].c=tr[rc].c;\n    else tr[now].c=tr[lc].c+getsum(rc,tr[lc].mx);\n}\nint main()\n{\n    int n,m;\n    scanf(\"%d%d\",&n,&m);\n    bt(1,n);\n    for(int i=1;i<=m;i++)\n    {\n        int x;double y;\n        scanf(\"%d%lf\",&x,&y);\n        change(1,x,(double)y/x);\n        printf(\"%d\\n\",tr[1].c);\n    }\n    return 0;\n}\n```",
        "postTime": 1524275575,
        "uid": 29342,
        "name": "galiqing",
        "ccfLevel": 7,
        "title": "P4198 \u697c\u623f\u91cd\u5efa"
    },
    {
        "content": "## \u9898\u610f\n\u6c42\u4ece0,0\u70b9\u4e3a\u8d77\u70b9\uff0c**\u659c\u7387**\u5355\u8c03\u4e0a\u5347\u7684\u5e8f\u5217\u6700\u5927\u957f\u5ea6\n\n\u8003\u8651\u7ef4\u62a4\u4e24\u4e2a\u4e1c\u897f:\n\u4e00\u4e2a\u533a\u95f4\u5185\u6700\u5927\u7684\u503c\uff08\u659c\u7387\n\u8fd9\u4e2a\u533a\u95f4\u5185\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\n\n\u7b54\u6848\u5c31\u662f1-n\u8fd9\u4e2a\u533a\u95f4\u5185\u7684\u4e25\u683c\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\n\n------------\n## \u600e\u4e48\u505a\n\n\u9898\u76ee\u8981\u6c42\u4fee\u6539m\u6b21\uff0c\u6bcf\u6b21\u4fee\u6539\u540e\u7ef4\u62a4\u6700\u5927\u503c\uff0c~~m,n\u7684\u8303\u56f4\u662f100000~~\n\u9996\u5148\u53ef\u4ee5\u60f3\u5230\u7ebf\u6bb5\u6811\u3002\n\n\u7ebf\u6bb5\u6811\u7684\u5177\u4f53\u505a\u6cd5\n------------\n\n\u4e0d\u9700\u8981lazy_tag\uff0c\u751a\u81f3\u4e5f\u4e0d\u9700\u8981bulid\u53ea\u8981\u8003\u8651\u5982\u4f55\u4fee\u6539\uff0c\u5982\u4f55\u5408\u5e76\uff08\u7ef4\u62a4\uff09\u533a\u95f4\u5c31\u597d\u4e86\n\u91cd\u70b9\u5728\u4e8epush_up\u6570\u7ec4\n\nlen[o]\u4e3a\u533a\u95f4\u957f\u5ea6\uff0cm[o]\u4e3a\u533a\u95f4\u6700\u5927\u659c\u7387 \u7528a[x]\u8bb0\u4e0b\u6bcf\u4e00\u4e2a\u70b9\u7684\u9ad8\u5ea6\u3002lo\u4e3a\u9012\u5f52\u65f6\u9700\u8981\u6ee1\u8db3\u6761\u4ef6\uff08\u5927\u4e8e\u8be5\u4e0a\u5347\u5e8f\u5217\u6700\u540e\u4e00\u4f4d\uff09\u7684\u659c\u7387\u6700\u5c0f\u503c  \nps:\u6ce8\u610fa\u548cm\u6570\u7ec4\u90fd\u8981\u7528double\n\n\u5047\u8bbe\u5f53\u524d\u8282\u70b9o\u7684\u4e24\u4e2a\u5b50\u533a\u95f4rs\u548cls\u90fd\u5df2\u7ecf\u7ef4\u62a4\u597d\u4e86 \u8003\u8651\u5982\u4f55\u5408\u5e76\n\u82e5\u5de6\u533a\u95f4\u7684\u6700\u5927\u503c\u4e0d\u5927\u4e8e\u5f53\u524d\u8981\u6c42\u7684\u6700\u5c0f\u503clo\uff0c\u90a3\u4e48\u53ea\u9700\u9012\u5f52\u5904\u7406\u53f3\u533a\u95f4\u3002\n\n\u53cd\u4e4b\uff0c\u5904\u7406\u5de6\u533a\u95f4 \u5f53\u524d\u7b54\u6848\u4e3a\uff08\u9012\u5f52\u8fd4\u56de\u7684\u503c\u52a0\u4e0alen[o]-len[ls]\uff09\n(\u4ece\u603b\u533a\u95f4\u91cc\u51cf\u53bb\u539f\u6765\u7684\u5de6\u533a\u95f4\u518d\u52a0\u4e0a\u65b0\u7684\u5de6\u533a\u95f4)\n\n\u6838\u5fc3\u4ee3\u7801\u5982\u4e0b\n```cpp\nint push_up(double lo,int o,int l,int r){\n\tif(m[o]<=lo) return 0;\n\tif(a[l]>lo) return len[o];\n\tif(l==r){\n\t\treturn a[l]>lo;\n\t}\n\tif(m[ls]<=lo) return push_up(lo,rs,mid+1,r);\n\telse return push_up(lo,ls,l,mid)+len[o]-len[ls];\n}\n```\n\n\n\u4ee5\u4e0b\u662f\u5168\u90e8\u4ee3\u7801\n\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\n#include<string>\n#define mid (l+r>>1)\n#define ls (o<<1)\n#define rs ((o<<1)|1) \nusing namespace std;\ninline int read(){\n\tint s=0;char x=getchar();int f=1;\n\twhile(!isdigit(x)){if(x=='-') f=-1;x=getchar();};\n\twhile(isdigit(x)){s=(s<<1)+(s<<3)+x-'0';x=getchar();};\n\treturn s*f;\n}\nconst int N=400010;\ndouble a[N];\ndouble m[N];//\u533a\u95f4\u5185\u6700\u5927\u7684\u659c\u7387 \nint len[N];//\u533a\u95f4\u957f\u5ea6 \nint push_up(double lo,int o,int l,int r){\n\tif(m[o]<=lo) return 0;//\u6700\u5927\u659c\u7387\u5c0f\u4e8e\u8981\u6c42\u7684\u6700\u5c0f\u659c\u7387 \u5bf9\u7b54\u6848\u8d21\u732e\u4e3a0 \n\tif(a[l]>lo) return len[o]; //\u6ee1\u8db3\u8981\u6c42\uff0c\u8d21\u732e\u4e3a\u5f53\u524d\u533a\u95f4\u5185\u4e0a\u5347\u5e8f\u5217\u957f\u5ea6 \n\tif(l==r) return a[l]>lo;//\u6ee1\u8db3\u8981\u6c42\u8d21\u732e\u4e3a1 \u5426\u5219\u4e3a0 \n\tif(m[ls]<=lo) return push_up(lo,rs,mid+1,r);\n\telse return push_up(lo,ls,l,mid)+len[o]-len[ls];\n}\nvoid xg(int o,int l,int r,int x,int y){\n\tif(l==r&&l==x){\n\t\tm[o]=(double)y/x;\n\t\tlen[o]=1;\n\t\treturn;\n\t}\n\tif(x<=mid) xg(ls,l,mid,x,y);\n\telse xg(rs,mid+1,r,x,y);\n\tm[o]=max(m[rs],m[ls]);\n\tlen[o]=len[ls]+push_up(m[ls],rs,mid+1,r);\n\t//\u5de6\u513f\u5b50\u533a\u95f4\u957f\u5ea6 \u52a0\u4e0a\u53f3\u513f\u5b50\u4e2d\u4e0a\u5347\u5b50\u5e8f\u5217\u7684\u957f\u5ea6 \n}\nint main(){\n\tint n=read(),m=read();\n\tint x,y;\n\twhile(m--){\n\t\tx=read();y=read();\n\t\ta[x]=(double)y/x;//\u6c42\u659c\u7387 \n\t\txg(1,1,n,x,y);\n\t\tcout<<len[1]<<endl;\n\t}\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1539999817,
        "uid": 50497,
        "name": "weird_coder",
        "ccfLevel": 0,
        "title": "p4198\u697c\u623f\u91cd\u5efa"
    },
    {
        "content": "[Link](https://www.luogu.org/problemnew/show/P4198)\n\n---------------------\n\n~~\u8fd9\u4e48\u597d\u7684\u5206\u5757\u9898\u4e3a\u4ec0\u4e48\u8981\u7528\u7ebf\u6bb5\u6811~~\n\n\u9898\u76ee\u5927\u610f\u5f88\u663e\u7136\uff0c\u5c31\u662f\u8981\u6c42\u52a8\u6001\u5730\u7ef4\u62a4\u4e00\u4e2a\u4ee5\u659c\u7387\u4e3a\u5173\u952e\u5b57\u7684\u6700\u957f\u4e25\u683c\u4e0a\u5347\u5b50\u5e8f\u5217\u3002\u8003\u8651\u76f4\u63a5\u7ef4\u62a4\uff0c\u90a3\u4e48\u5355\u6b21\u4fee\u6539O(n)\uff0c\u5355\u6b21\u67e5\u8be2O(1)\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6O(nm)\uff0c\u663e\u7136\u662f\u8fc7\u4e0d\u4e86\u7684\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u628a\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u7efc\u5408\u4e00\u4e0b\uff0c\u53d8\u6210\u4e86\u6211\u4eec\u6240\u719f\u77e5\u7684\u5206\u5757\u3002\uff08\u8bdd\u8bf4\u597d\u4e45\u6ca1\u5199\u8fc7\u5206\u5757\u4e86\uff09\n\n\uff08\u6211\u56e0\u4e3a\u6bd4\u8f83\u61d2\uff0c\u4e0d\u60f3\u8c03\u53c2\uff0c\u76f4\u63a5\u53d6\u7684$\\sqrt{n}$\u4f5c\u4e3a\u5757\u7684\u5927\u5c0f\uff09\n\n##\u4e24\u4e2a\u4e3b\u8981\u64cd\u4f5c\n\n###modify\n\n\u5bf9\u4e8e\u4fee\u6539\u64cd\u4f5c\uff0c\u53ea\u5f71\u54cd\u4e00\u4e2a\u5757\uff0c\u6bcf\u6b21\u4fee\u6539\u90fd\u66b4\u529b\u91cd\u6784\u4e00\u4e0b\uff0c\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u659c\u7387\u5e76\u6309\u5757\u5185\u659c\u7387\u6392\u5e8f\uff0c\u6700\u540e\u5b58\u5165\u4e00\u4e2avector\u4e2d\uff08\u5176\u5b9e\u5e76\u4e0d\u9700\u8981\u6392\u5e8f\uff0c\u56e0\u4e3a\u672c\u8eab\u63d2\u5165\u7684\u65f6\u5019\u5c31\u662f\u6309\u7167\u201c\u5355\u8c03\u9012\u589e\u2014\u2014\u5c0f\u4e86\u5c31\u8df3\u8fc7\uff0c\u5927\u4e86\u5c31\u63d2\u5165\u5e76\u66f4\u65b0\u659c\u7387\u6700\u5927\u503c\u201d\uff09\u5355\u6b21\u4fee\u6539\u65f6\u95f4\u590d\u6742\u5ea6O($\\sqrt{n}$)\n\n```cpp\ninline void modify(int x,int y){\n\tdouble maxx=0;//\u659c\u7387\u6700\u5927\u503c\n        num[x]=y;//\u8d4b\u503c\n\tc[pos[x]].clear();//\u66b4\u529b\u91cd\u6784\n\tfor(int i=(pos[x]-1)*s+1;i<=pos[x]*s&&i<=n;i++){\n\t\tif(!num[i]) continue;//\u5982\u679c\u5f53\u524d\u7684\u4f4d\u7f6e\u6ca1\u6709\u697c\u623f\u5c31\u8df3\u8fc7\n\t\tdouble ret=((double)num[i]/(1.0*i));//\u8ba1\u7b97\u659c\u7387\n\t\tif(maxx<ret) c[pos[x]].push_back(ret),maxx=ret;//\u63d2\u5165\u6570\u5217\uff0c\u5e76\u66f4\u65b0max\n\t}\n/*\tfor(vector<double>::iterator it=c[pos[x]].begin();it!=c[pos[x]].end();it++)\n\t\tprintf(\"%.3lf \",*it);\n\tprintf(\"\\n\");*/\n}\n```\n\n##query\n\n\u5bf9\u4e8e\u67e5\u8be2\u64cd\u4f5c\uff0c\u679a\u4e3e\u6bcf\u4e00\u4e2a\u5757,\u5728\u5757\u5185\u4e8c\u5206\u4e0a\u4e00\u4e2a\u5757\u7684\u659c\u7387\u6700\u5927\u503c\uff08\u5373\u5f53\u524d\u5757\u5185\u80fd\u770b\u5230\u7684\u697c\u623f\u7684\u659c\u7387\u6700\u5c0f\u503c\uff09\uff0c\u7d2f\u8ba1\u4e0a\u7b54\u6848\u3002\u5355\u6b21\u67e5\u8be2O($\\sqrt{n}$)\n\n```cpp\n\ninline int query_(int x,double val){\n\treturn c[x].end()-upper_bound(c[x].begin(),c[x].end(),val);//\u8fd4\u56de\u5757\u5185\u5927\u4e8eval\u7684\u6570\u7684\u4e2a\u6570\n}\n\ninline int query(){\n\tint ans=0;\n\tdouble maxx=(double)num[st]/st;//st\u8868\u793a\u7b2c\u4e00\u4e2a\u7684\u697c\u623f\u7684\u4f4d\u7f6e\n\tfor(int i=1;i<=pos[n];i++){\n\t\tans+=query_(i,maxx);//\u5728\u5757\u5185\u4e8c\u5206\n\t\tif(c[i].empty()) continue;//\u5f53\u524d\u5757\u6ca1\u6709\u697c\u623f\u5c31\u8df3\u8fc7\n\t\tdouble ret=(*(--c[i].end()));//\u5f53\u524d\u5757\u7684\u6700\u5927\u503c\uff08\u56e0\u4e3a\u5757\u5185\u662f\u6709\u5e8f\u7684\uff0c\u6240\u4ee5\u6700\u540e\u4e00\u4e2a\u6570\u5c31\u662f\u5f53\u524d\u5757\u7684\u6700\u5927\u503c\uff09\n\t\tif(maxx<ret) maxx=ret;//\u66f4\u65b0\u6700\u5927\u503c\n\t}\n\treturn ans+1;//\u7b2c\u4e00\u4e2a\u697c\u623f\u6ca1\u7b97\uff0c\u6240\u4ee5\u8981+1\n}\n```\n\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6 O(m$\\sqrt{n})$) \uff0c\u8fd8\u7b97\u662f\u633a\u4f18\u79c0\u7684\u5427\n\n```cpp\n#include<stdio.h>\n#include<math.h>\n#include<vector>\n#include<algorithm>\nusing namespace std;\n#define N 100007\n#define sqN 1007\n\ntemplate<class T>\ninline void read(T &x){\n\tx=0;char c=getchar();T flag=1;\n\twhile(c<'0'||c>'9'){if(c=='-')flag=-1;c=getchar();}\n\twhile(c>='0'&&c<='9'){x=(x<<1)+(x<<3)+c-48;c=getchar();}\n\tx*=flag;\n}\n\nvector<double> c[sqN];\nint s,n,m,pos[N],num[N],st;\n\ninline int min(int x,int y){return x<y? x:y;}\ninline int max(int x,int y){return x>y? x:y;}\ninline void modify(int x,int y){\n\tdouble maxx=0;num[x]=y;\n\tc[pos[x]].clear();\n\tfor(int i=(pos[x]-1)*s+1;i<=pos[x]*s&&i<=n;i++){\n\t\tif(!num[i]) continue;\n\t\tdouble ret=((double)num[i]/(1.0*i));\n\t\tif(maxx<ret) c[pos[x]].push_back(ret),maxx=ret;\n\t}\n/*\tfor(vector<double>::iterator it=c[pos[x]].begin();it!=c[pos[x]].end();it++)\n\t\tprintf(\"%.3lf \",*it);\n\tprintf(\"\\n\");*/\n}\ninline int query_(int x,double val){\n\treturn c[x].end()-upper_bound(c[x].begin(),c[x].end(),val);\n}\ninline int query(){\n\tint ans=0;\n\tdouble maxx=(double)num[st]/st;\n\tfor(int i=1;i<=pos[n];i++){\n\t\tans+=query_(i,maxx);\n\t\tif(c[i].empty()) continue;\n\t\tdouble ret=(*(--c[i].end()));\n\t\tif(maxx<ret) maxx=ret;\n\t}\n\treturn ans+1;\n}\nint main(){\n//\tfreopen(\"data.in\",\"r\",stdin);\n//\tfreopen(\"mine.out\",\"w\",stdout);\n\tread(n),read(m),s=(int)(sqrt(n)+0.5),st=n+1;\n\tfor(int i=1;i<=n;i++) pos[i]=(i-1)/s+1;\n\tint x,y;\n\twhile(m--){\n\t\tread(x);read(y);\n\t\tst=min(st,x);modify(x,y);\n\t\tprintf(\"%d\\n\",query());\n\t}\n}\n/*\n5 7\n4 6\n3 2\n1 19\n5 11\n2 17\n1 1\n1 1\n*/ \n```\n\n\u7136\u800c\u826f\uff08du\uff09\u5fc3\uff08liu\uff09\u7684\u5b66\u957f\u600e\u4e48\u53ef\u80fd\u5c31\u6b64\u653e\u7f62\u4f11\uff0c\u4ed6\u628a\u9898\u76ee\u6539\u6210\u4e86\u8fd9\u6837\uff1a\n\n    \u957f\u5ea6\u4e3an\u7684\u6570\u5217\uff0cm\u6b21\u64cd\u4f5c\uff1a\n    1.\u6c42[L,R]\u7684\u6bd4\u4e4b\u524d\u6240\u6709\u6570\u90fd\u5927\u7684\u6570\u5b57\u4e2a\u6570\n    2.\u5c06[L,R]\u533a\u95f4\u589e\u52a0\u6216\u533a\u95f4\u4fee\u6539\n    n,m\u226450000",
        "postTime": 1563932274,
        "uid": 83337,
        "name": "wwlw",
        "ccfLevel": 7,
        "title": "\u697c\u623f\u91cd\u5efa"
    },
    {
        "content": "\u9996\u5148\u660e\u786e\u95ee\u9898\uff0c\u5bf9\u4e8e\u6bcf\u680b\u697c\u623f\u7684\u659c\u7387K=H/X,\u95ee\u9898\u5c31\u662f\u95ee\u6709\u591a\u5c11\u4e2a\u697c\u623f\u7684K\u6bd4\u524d\u9762\u6240\u6709\u697c\u623f\u7684K\u90fd\u8981\u5927\u3002\n\n\u8fd9\u9898\u6811\u5957\u6811\u5f53\u7136\u53ef\u4ee5\uff0c\u4f46\u662f\u633a\u9ebb\u70e6\u7684\uff0c\u672c\u6e23\u89c9\u5f97\u6700\u7b80\u5355\u5c31\u662f\u5206\u5757\u2026\u2026\n\n\u5c06N\u4e2a\u697c\u623f\u5206\u6210T\u5757\uff0c\u4e0d\u65ad\u7ef4\u62a4\u6bcf\u4e2a\u5757\u5185\u697c\u623f\u7684\u53ef\u89c6\u5e8f\u5217\uff0c\u5982\u4e00\u4e2a\u5757\u5185\u697c\u623f\u7684\u9ad8\u5ea6\u5206\u522b\u4e3a(3 1 4 2 6 7)\u90a3\u4e48\u8fd9\u4e2a\u5757\u5185\u697c\u623f\u7684\u53ef\u89c6\u5e8f\u5217\u5c31\u662f\uff083 4 6 7\uff09\uff08\u6ce8\u610f\u4e0d\u540c\u7684\u5757\u5185\u662f\u4e0d\u5e72\u6270\u7684\uff0c\u5982\u7b2c\u4e00\u4e2a\u5757\u53ef\u89c6\u5e8f\u5217\u4e3a(3 4 6)\uff0c\u7b2c\u4e8c\u5757\u7684\u5e8f\u5217\u53ef\u4ee5\u662f(5 7 8)\uff09\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u4fee\u6539\uff0c\u6211\u4eec\u53ea\u9700\u5bf9\u6bcf\u4e2a\u5757\u5185\u7684\u697c\u623f\u66b4\u529b\u7ef4\u62a4\u53ef\u89c6\u5e8f\u5217\u5c31\u884c\u4e86\uff0cO(N/T)\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\uff0c\u6211\u4eec\u53ea\u9700\u4e00\u4e2a\u5757\u4e00\u4e2a\u5757\u770b\uff0c\u4e0d\u65ad\u7ef4\u62a4\u5230\u76ee\u524d\u4e3a\u6b62\u7684\u53ef\u89c6\u5e8f\u5217\u4e2dK\u7684\u6700\u5927\u503ckmax(\u4e0d\u5728\u53ef\u89c6\u5e8f\u5217\u5185\u7684\u697c\u623f\u7684K\u503c\u4e00\u5b9a\u4e0d\u5927)\uff0c\u90a3\u4e48\u5bf9\u4e8e\u67e5\u8be2\u6bcf\u4e2a\u5757\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u4e8c\u5206\u53ef\u89c6\u5e8f\u5217\u627e\u5230\u7b2c\u4e00\u4e2a\u5927\u4e8ekmax\u7684\u4f4d\u7f6e\uff0c\u82e5\u6ca1\u6709\u5219\u8fd9\u4e2a\u5757\u7684\u6240\u6709\u697c\u623f\u90fd\u4e0d\u53ef\u89c1\uff0c\u5982\u679c\u5b58\u5728\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4f4d\u7f6e\u540e\u7684\u6b64\u5757\u4e2d\u7684\u53ef\u89c6\u5e8f\u5217\u697c\u623f\u90fd\u80fd\u770b\u89c1\uff0c\u90a3\u4e48\u5c31\u66f4\u65b0\u7b54\u6848\u548ckmax\uff0c\u4e0d\u65ad\u5f80\u540e\u505a\n\n\u6ce8\u610f\uff1a\u6bd5\u7adf\u65f6\u95f4\u6bd4\u8f83\u7d27\uff0c\u6240\u4ee5\u5e38\u6570\u8fd8\u662f\u5c3d\u53ef\u80fd\u5199\u5c0f\u70b9\uff0c\u4e8c\u5206\u548cmax\u51fd\u6570\u8fd8\u662f\u81ea\u5df1\u5199\u597d\u4e9b\uff0c\u4e0d\u7136\u4f1a\u7206RP\u2026\u2026\n```cpp\n#include<cstdio>\n#include<cmath>\nconst int maxn=100005,sqrn=350;\nint h[maxn],v[sqrn][sqrn],c[sqrn],l[sqrn],r[sqrn],bel[maxn],n,m,block,cnt,x,y,ch;\nvoid read(int&x) {\n\tx=0,ch=getchar();\n\twhile(ch>'9'||ch<'0')ch=getchar();\n\twhile(ch>='0'&&ch<='9')x=x*10+ch-'0',ch=getchar();\n}\nbool vis(int x,int y) {\n\treturn (long long)h[x]*y<(long long)h[y]*x;\n}\nint bfind(int*a,int l,int r,int mx) {\n\tif(!mx)return l;\n\tif(!vis(mx,a[r]))return 0;\n\tint m=0,ans=0;\n\twhile(l<=r) {\n\t\tm=(l+r)>>1;\n\t\tif(vis(mx,a[m]))ans=m,r=m-1;\n\t\telse l=m+1;\n\t}\n\treturn ans;\n}\nvoid build(int x) {\n\tc[x]=0;\n\tint lst=0;\n\tfor(register int i=l[x]; i<=r[x]; ++i)if(h[i])if(!lst||vis(lst,i))lst=v[x][++c[x]]=i;\n}\nint query() {\n\tint tot=0,mx=0,pos;\n\tfor(register int i=1; i<=cnt; ++i)if(c[i]) {\n\t\t\tpos=bfind(v[i],1,c[i],mx);;\n\t\t\tif(pos)tot+=c[i]-pos+1,mx=v[i][c[i]];\n\t\t}\n\treturn tot;\n}\nint main() {\n\tread(n),read(m);\n\tblock=sqrt(n);\n\tcnt=n/block;\n\tif(n%block)++cnt;\n\tfor(register int i=1; i<=n; ++i)bel[i]=(i-1)/block+1;\n\tfor(register int i=1; i<=cnt; ++i)l[i]=(i-1)*block+1,r[i]=i*block;\n\tr[cnt]=n;\n\tfor(register int i=1; i<=m; ++i) {\n\t\tread(x),read(y);\n\t\th[x]=y;\n\t\tbuild(bel[x]);\n\t\tprintf(\"%d\\n\",query());\n\t}\n\treturn 0;\n}\n\n\n```\n",
        "postTime": 1555848775,
        "uid": 155661,
        "name": "\u5c71\u6c34\u4e00\u7a0b_",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P4198 \u3010\u697c\u623f\u91cd\u5efa\u3011"
    },
    {
        "content": "### \u9898\u76ee\u5927\u610f\uff1a\u6bcf\u6b21\u4fee\u6539\u4e00\u4e2a\u659c\u7387\uff0c\u6bcf\u6b21\u67e5\u8be2\u6709\u591a\u5c11\u4e2a\u659c\u7387\u662f\u5927\u4e8e\u6240\u6709\u524d\u9762\u8282\u70b9\u7684\u659c\u7387\u7684\n#### \u5047\u8bbe\u73b0\u5728\u5de6\u53f3\u513f\u5b50\u7b54\u6848\u90fd\u77e5\u9053\uff0c\u5982\u4f55\u5408\u5e76\u4e24\u4e2a\u513f\u5b50\u5f97\u5230\u5f53\u524d\u8282\u70b9\u7b54\u6848\uff1f\n##### \u5de6\u513f\u5b50\u7b54\u6848\u53ef\u4ee5\u76f4\u63a5\u52a0\u4e0a\u6765\uff0c\u53f3\u513f\u5b50\u7b54\u6848\u53ef\u80fd\u4f1a\u53d8\u5c0f\uff0c\u8ba8\u8bba\u53f3\u513f\u5b50\u7684\u513f\u5b50\u7684\u5b50\u6811max\uff0c\u53d1\u73b0\u53ea\u8981\u9012\u5f52\u4e00\u8fb9\u5373\u53ef**(\u770b\u4e0d\u61c2\u7684\u770b\u4e0b\u9762)**\n```cpp\nint update(int p,double h) {\n\tif(t[p].l==t[p].r)return t[p].mx>h;\n\tif(t[p*2].mx<h)return update(p*2+1,h);\n\treturn update(p*2,h)+t[p].v-t[p*2].v;\n}\nvoid change(int p,int x,double v) {\n\tif(t[p].l==t[p].r) {\n\t\tt[p].mx=v;\n\t\tt[p].v=1;\n\t\treturn;\n\t}\n\tint mid=(t[p].l+t[p].r)>>1;\n\tif(x<=mid)change(p*2,x,v);\n\telse change(p*2+1,x,v);\n\tpush_up(p);//\u66f4\u65b0MAX\n\tt[p].v=t[p*2].v+update(p*2+1,t[p*2].mx);\n}\n```\n### \u6bcf\u4e2a\u8282\u70b9\u6743\u503c\u4ee3\u8868\u82e5L\u4ee5\u5de6\u5168\u4e3a0\uff0cL-R\u7684\u7b54\u6848\n#### \u82e5\u5f53\u524d\u6700\u5927\u503c\u5927\u4e8e\u5de6\u5b50\u8282\u70b9\u6700\u5927\u503c\uff0c\u5de6\u5b50\u8282\u70b9\u5168\u4e0d\u9009\uff0c\u9012\u5f52\u53f3\u5b50\u8282\u70b9\n#### \u82e5\u5f53\u524d\u6700\u5927\u503c\u5c0f\u4e8e\u5de6\u5b50\u8282\u70b9\u6700\u5927\u503c\uff0c\u9012\u5f52\u5de6\u5b50\u8282\u70b9\uff0c\u53f3\u5b50\u8282\u70b9\u7b54\u6848\u4e3a\u5f53\u524d\u8282\u70b9\u6743\u503c\u51cf\u5de6\u5b50\u8282\u70b9\u6743\u503c\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node {\n\tint l,r,v;\n\tdouble mx;\n\tnode(){mx=0,v=0;}\n}t[400001];\nvoid build(int p,int l,int r) {\n\tt[p].l=l;\n\tt[p].r=r;\n\tif(l!=r) {\n\t\tint mid=(l+r)>>1;\n\t\tbuild(p*2,l,mid);\n\t\tbuild(p*2+1,mid+1,r);\n\t}\n}\nvoid push_up(int p) {\n\tt[p].mx=max(t[p*2].mx,t[p*2+1].mx);\n}\nint update(int p,double h) {\n\tif(t[p].l==t[p].r)return t[p].mx>h;\n\tif(t[p*2].mx<h)return update(p*2+1,h);\n\treturn update(p*2,h)+t[p].v-t[p*2].v;\n}\nvoid change(int p,int x,double v) {\n\tif(t[p].l==t[p].r) {\n\t\tt[p].mx=v;\n\t\tt[p].v=1;\n\t\treturn;\n\t}\n\tint mid=(t[p].l+t[p].r)>>1;\n\tif(x<=mid)change(p*2,x,v);\n\telse change(p*2+1,x,v);\n\tpush_up(p);\n\tt[p].v=t[p*2].v+update(p*2+1,t[p*2].mx);\n}\nint query() {\n\treturn t[1].v;\n}\nint n,m;\nint main() {\n\tios::sync_with_stdio(0);\n\tcin>>n>>m;\n\tbuild(1,1,n);\n\tint x,y;\n\twhile(m--) {\n\t\tcin>>x>>y;\n\t\tchange(1,x,y*1.0/x);\n\t\tcout<<query()<<endl;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1538126749,
        "uid": 70310,
        "name": "wuzhaoxin",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4198 \u3010\u697c\u623f\u91cd\u5efa\u3011"
    },
    {
        "content": "\u8fd9\u597d\u50cf\u4e5f\u53ef\u4ee5\u8bf4\u662f\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6700\u957f\u8fde\u7eed\u4e0a\u5347\u7684\u6a21\u677f\u9898\u3002\u3002\u3002\u6211\u4eec\u7528\u659c\u7387\u6765\u8868\u793a\u9ad8\u5ea6\uff0c\u7528\u4e00\u4e2a\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u67d0\u4e2a\u533a\u95f4\u5185\u7684\u9ad8\u5ea6\u6700\u5927\u503c\u548c\u6700\u957f\u8fde\u7eed\u4e0a\u5347\u3002\u4fee\u6539\u9ad8\u5ea6\u7684\u65f6\u5019\u53ea\u9700\u8981\u666e\u901a\u7684\u7ebf\u6bb5\u6811\u66f4\u65b0\u5c31\u597d\u4e86\uff0c\u4f46\u662f\u6211\u4eec\u9700\u8981\u66f4\u65b0\u6700\u957f\u7684\u957f\u5ea6\uff0c\u8003\u8651\u4e00\u4e2a\u533a\u95f4[l,r],\u5b83\u7684lc\u548crc\u7684\u4fe1\u606f\u90fd\u662f\u5df2\u77e5\u7684\uff0c\u90a3\u4e48\u5c31\u662f\u6c42rc\u8fd9\u4e2a\u533a\u95f4\u5185\u5927\u4e8eMax[lc]\u7684\u8fde\u7eed\u4e0a\u5347\u7684\u6570\u7684\u4e2a\u6570\u3002\n\u73b0\u5728\u6211\u4eec\u5f00\u59cb\u9012\u5f52\u4fee\u6539\uff0c\u8bb0h\u4e3aMax[lc]\u3002\n1\u3001\u82e5\u53f3\u533a\u95f4\u7684\u5de6\u5b50\u533a\u95f4\u6700\u5927\u503c\u5927\u4e8e\u7b49\u4e8eh,\u90a3\u4e48\u5b83\u7684\u53f3\u5b50\u533a\u95f4\u7684\u4e2a\u6570\u5c31\u53ef\u4ee5\u76f4\u63a5\u6c42\u51fa\u6765\uff0c\u7ee7\u7eed\u9012\u5f52lc\u7684\u5de6\u5b50\u533a\u95f4\u5373\u53ef\u3002\n2\u3001\u82e5\u53f3\u533a\u95f4\u7684\u5de6\u5b50\u533a\u95f4\u6700\u5927\u503c\u5c0f\u4e8eh\uff0c\u90a3\u4e48\u4ed6\u7684\u5de6\u5b50\u533a\u95f4\u7684\u8d21\u732e\u5fc5\u5b9a\u4e3a0\uff0c\u6240\u4ee5\u7ee7\u7eed\u9012\u5f52\u53f3\u5b50\u533a\u95f4\u5373\u53ef\u3002\n\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6$O(n*\\log^2n)$(\u6bd4\u6211\u7684\u5206\u5757\u4e0d\u77e5\u9053\u5feb\u4e86\u591a\u5c11\u3002\u3002\u3002)\n\n[\u4ee3\u7801\u5728\u6211\u7684\u535a\u5ba2\u91cc](https://blog.csdn.net/ylsoi/article/details/80085896)",
        "postTime": 1525257833,
        "uid": 20059,
        "name": "ylsoi",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4198 \u3010\u697c\u623f\u91cd\u5efa\u3011"
    },
    {
        "content": "### \u6d45\u8c08\u697c\u623f\u91cd\u5efa\u4e00\u9898\u7684\u5206\u5757\u4e71\u641e\u89e3\u6cd5(\u96fe\n\n> \u9898\u89e3\u533a\u600e\u4e48\u90fd\u662f\u6b63\u7ecf\u7684std\u554a...\u53ea\u4f1a\u66b4\u529b\u7684\u9009\u624b\u5c31\u5750\u7b49\u72060\u4e86????...\u4e0d\u884c\u554a,\u6211\u4eec\u4e0a\u4e2a\u5206\u5757\u4e71\u641e\u4e00\u4e0b\u8bd5\u8bd5?\u8fc7\u4e86!\n\n\u8865\u4e00\u4e2a**\u5206\u5757**~~\u4e71\u641e~~ \u7684\u9898\u89e3.  \n\n~~\u8fd9\u4e2a\u4e1c\u897f\u7684std\u611f\u89c9\u6d53\u70c8\u7684ddp\u5473\u554a...~~\n\n----\n\n\u9898\u610f:\n- \u7ed9\u5b9a\u5e8f\u5217$slope[1..n]$.  \n\n1. \u4fee\u6539$slope[x]=\\frac{y}{x}$\n2. \u67e5\u8be2:$count(pos\\cdot[\\forall i\\lt pos,slope[i]\\lt slope[pos])$ \u7b54\u6848\u4f1a\u662f\u4e00\u4e2a\u659c\u7387\u4e25\u683c\u589e\u7684\u5b50\u5e8f\u5217.\n\n\n\u5148\u8003\u8651\u66b4\u529b\n\n\u4fee\u6539\u76f4\u63a5\u505a,\u7136\u540e\u904d\u5386\u4e00\u4e0b$slope[1..n]$\u66f4\u65b0\u7b54\u6848.  \n\n\u6211\u4eec\u8003\u8651\u4fee\u6539\u64cd\u4f5c$upd(x,y)$\u751f\u6548\u540e\u7b54\u6848\u7684\u53d8\u5316. \n\n\u5982\u679c$slope(x)$\u5f88\u5927,$i\\lt x$\u90e8\u5206\u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u53ef\u4ee5\u5168\u90fd\u4fdd\u7559,\u90a3\u4e48\u8003\u8651\u540e\u9762\u7684\u90e8\u5206\u7684\u4e0a\u5347\u5b50\u5e8f\u5217 **\u6254\u6389\u4e00\u70b9\u524d\u7f00** \u4f7f\u5f97\u80fd\u591f\u548c$(x,y)$\u62fc\u63a5\u4e0a\u53bb.  \n\u5982\u679c$slope(x)$\u53d8\u5c0f,\u90a3\u4e48\u540e\u9762\u4f1a\u6709\u4e00\u90e8\u5206\u4e4b\u524d\u6ca1\u6709\u8d21\u732e\u800c\u73b0\u5728\u6709\u8d21\u732e(\u5f53\u7136\u8fd9\u4e2a\u90e8\u5206\u53ef\u80fd\u662f\u7a7a\u7684).  \n\n\u4ed4\u7ec6\u601d\u8003\u4e00\u4e0b,\u53d1\u73b0\u8fd9\u5e76\u4e0d\u53ef\u505a...\u81f3\u5c11\u5f88\u96be\u7b80\u5355\u5b9e\u73b0.\u8fd9\u5c31\u8ba9\u6211\u4eec\u770b\u5230.\u8fd9\u4e2a\u95ee\u9898\u9700\u8981\u7ef4\u62a4\u7684\u6570\u636e\u662f**\u65e0\u6cd5\u9ad8\u6548\u5408\u5e76**\u7684,\u8fd9\u542f\u53d1\u6211\u4eec\u4f7f\u7528\u5206\u5757,\u8ba9\u5f71\u54cd\u5c40\u90e8\u5316,\u7b49\u5230\u67e5\u8be2\u7684\u65f6\u5019\u518d\u6765\u5904\u7406\u4ee5\u5e73\u8861\u590d\u6742\u5ea6.  \n\n\u505a\u6cd5\u4e5f\u5c31\u6bd4\u8f83\u5bb9\u6613\u60f3\u5230\u4e86.\u5bf9\u5e8f\u5217\u5206\u5757,\u7ef4\u62a4**\u53ea\u8003\u8651\u5757\u5185\u5143\u7d20\u7684\u7b54\u6848(\u4e00\u4e2a\u5355\u8c03\u589e\u5b50\u5e8f\u5217)**,\u4fee\u6539\u64cd\u4f5c\u76f4\u63a5\u66b4\u529b\u91cd\u6784,\u8fd9\u90e8\u5206\u590d\u6742\u5ea6\u4e3a$O(S)$,\u5176\u4e2d$S$\u4e3a\u5757\u5927\u5c0f.  \n\u67e5\u8be2\u65f6,\u6211\u4eec\u9700\u8981\u8003\u8651\u6574\u5757\u524d\u7684\u6240\u6709\u5143\u7d20\u5bf9\u5757\u7684\u5f71\u54cd,\u663e\u7136\u6211\u4eec\u8981\u8bb0\u5f55\u4e4b\u524d\u7684\u6700\u5927\u659c\u7387..\u90a3\u4e48\u62fc\u63a5\u64cd\u4f5c\u5c31\u662f\u9700\u8981\u5728\u8fd9\u4e2a\u5757\u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u4e2d,\u627e\u5230\u4e00\u4e2a\u53ef\u4ee5\u548c\u4e4b\u524d\u7684\u6700\u5927\u659c\u7387\u62fc\u63a5\u7684\u4f4d\u7f6e,\u4fdd\u7559\u4e4b\u540e\u7684\u90e8\u5206.  \u8fd9\u90e8\u5206\u4f7f\u7528\u4e00\u4e2a\u4e8c\u5206\u5373\u53ef,\u590d\u6742\u5ea6\u4e3a$O(\\frac{n}{S}\\times log\\,S)$  .\n\n\u8fd9\u91cc\u9047\u5230\u4e86\u4fee\u6539\u4e0e\u67e5\u8be2\u7684\u590d\u6742\u5ea6\u4e0d\u5e73\u8861(\u5f53\u7136\u5e38\u6570\u4e5f\u4e0d\u5e73\u8861...),\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4e0a\u4e2a\u5747\u503c\u4e0d\u7b49\u5f0f\u770b\u770b\u5757\u5927\u5c0f\u600e\u4e48\u53d6\u6700\u4f18.\n\n~~\u8fd9\u91cc\u4fee\u6539\u548c\u67e5\u8be2\u6b21\u6570\u76f8\u7b49\u7684...\u6ca1\u5565\u597d\u641e\u7684.~~\n\u6211\u4eec\u4e0d\u5982\u5148\u5047\u8bbe\u5e8f\u5217\u5927\u5c0f\u548c\u67e5\u8be2\u6b21\u6570\u662f\u540c\u9636\u7684(\u8fd9\u91cc\u53ea\u662f\u627e\u6700\u4f18\u7684\u6e10\u8fdb\u7406\u8bba\u590d\u6742\u5ea6,\u5b9e\u9645\u4e0a\u8fd8\u8981\u8003\u8651\u4f17\u591a\u56e0\u7d20\u7684\u5f71\u54cd...\u6bd4\u8f83\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u76f4\u63a5\u9020\u968f\u673a\u6570\u636e\u6d4b\u8bd5\u51fa\u8f83\u597d\u7684\u5757\u5927\u5c0f..).\n\n\u603b\u590d\u6742\u5ea6\u4e3a$O(n\\cdot (S+\\frac{n}{S}\\cdot log\\,S))\\geq O(n\\sqrt{n\\cdot log\\,S})$...\u53d1\u73b0\u4e0d\u597d\u505a,\u4e8e\u662f\u628a$log\\,S$\u8fd1\u4f3c\u4e3a$log\\,n$,\u8fd9\u4e2a\u5f71\u54cd\u662f\u975e\u5e38\u5c0f\u7684...\u5f53\u7136\u4e3a\u4e86\u4e25\u8c28\u4e00\u70b9\u4f60\u5e94\u8be5\u6c42\u4e2a\u5bfc\u4ed4\u7ec6\u5206\u6790\u4e00\u4e0b\u6700\u5c0f\u503c\u548c\u6700\u4f18\u7684$S$.\n\n$O(n\\cdot (S+\\frac{n}{S}\\cdot log\\,n))\\geq O(n\\sqrt{n\\cdot log\\,n})$.\u5f53$S=\\frac{n}{S}log\\,n$\u65f6\u6700\u4f18,\u5373$S=\\sqrt{nlogn}$\n\n\u7136\u800c\u6211\u5077\u61d2\u76f4\u63a5\u53d6$S=\\sqrt n$\u4e862333...\t\n\n---\n\n\n\n\n\u4e0b\u9762\u4ee3\u7801...\u6709\u4e9b\u6ca1\u7528\u7684\u4e1c\u897f~~\u8c03\u8bd5\u5b8c\u4e86\u6ca1\u5220\u6389~~\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <ctime>\n#include <cmath>\n#include <cassert>\n#include <cstdio>\n#include <cctype>\nusing std::min;\nusing std::max;\nint read(){\n    int x=0;char c;\n    do{c=getchar();}while(!isdigit(c));\n    do{x=x*10+c-'0';c=getchar();}while(isdigit(c));\n    return x;\n}\nconst int N=130000+10;\nconst int M=800+10;\nconst double eps=1e-7;\nint n,m,bs,bcnt,bel[N];\nint L[M],R[M],size[M];\ndouble slope[N],seq[M][M];\nvoid rebuild(int blk){\n    size[blk]=0;\n    for(int i=L[blk];i<=R[blk];i++){\n        if(fabs(slope[i])<eps) continue;\n        if(size[blk]==0||seq[blk][size[blk]]<slope[i])\n            seq[blk][++size[blk]]=slope[i];\n    }\n}\ninline void upd(int x,int y){ double k=1.0*y/x; slope[x]=k; rebuild(bel[x]); }\nint solve(){\n    double now=0;\n    int ret=0;\n    for(int i=1;i<=bcnt;i++){\n        if(size[i]==0) continue;\n        int l=1,r=size[i],mid=0,ans=0;\n        while(l<=r){\n            mid=(l+r)>>1;\n            if(seq[i][mid]>now){\n                ans=mid;\n                r=mid-1;\n            }else l=mid+1;\n        }\n        if(ans) ret+=max(0,(size[i]-ans+1));\n        now=max(now,seq[i][size[i]]);\n    }\n    return ret;\n}\nint main(){\n    n=read();m=read();\n    bs=ceil(sqrt(n)); bcnt=n/bs+(n%bs>0);\n    for(int i=1;i<=n;i++) bel[i]=(i-1)/bs+1;\n    for(int i=1;i<=bcnt;i++){\n        L[i]=(i-1)*bs+1;\n        R[i]=i*bs;\n    }R[bcnt]=n;\n\n    int x,y;\n    while(m--){\n        x=read();y=read();\n        upd(x,y);\n        printf(\"%d\\n\",solve());\n    }\n    return 0;\n}\n\n```",
        "postTime": 1552304090,
        "uid": 15295,
        "name": "hehelego",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4198 \u3010\u697c\u623f\u91cd\u5efa\u3011"
    },
    {
        "content": "\t\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c \u4e0d\u96be\u60f3\u5230\u66b4\u529b\u76f4\u63a5\u662f\u4ece\u4f4d\u7f6e 1 \u5f00\u59cb\u7684\u4e0a\u5347\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u8003\u8651\u5982\u4f55\u5feb\u901f\u6c42\u89e3\n\n\t\u9996\u5148\u6709\u4e00\u4e2aSegment_Tree\u7684\u5199\u6cd5\uff0c \u7ef4\u62a4 \u533a\u95f4\u659c\u7387\u6700\u5927\u503c \u548c \u533a\u95f4\u80fd\u770b\u5230\u7684\u697c\u623f\u6570\u3002 \u82e5 MAX[lc] > MAX[rc] \u5219\u6b64\u53f3\u533a\u95f4\u4e0d\u4ea7\u751f\u8d21\u732e\uff0c\u5426\u5219\u66f4\u65b0\u53f3\u533a\u95f4\u4ea7\u751f\u7684\u8d21\u732e\uff0c \u5177\u4f53\u89c1\u4ee3\u7801\u3002\n\n\t\u6211\u4eec\u8fd8\u53ef\u4ee5\u60f3\u5230\u66b4\u529b\u5206\u5757\u5927\u6cd5\uff0c \u5bf9\u4e8e\u6bcf\u4e2a\u5757\u72b6\u6570\u7ec4\uff0c \u8003\u8651\u7ef4\u62a4\u533a\u95f4\u5185\u6240\u6709\u53ef\u4ee5\u88ab\u770b\u89c1\u7684\u697c\u623f\uff0c \u4e0d\u540c\u4e8eLIS\u7684\u662f\uff0c \u6211\u4eec\u7684\u773c\u775b\u662f\u4e0d\u80fd\u9009\u62e9\u6027\u5730\u900f\u8fc7\u4e00\u4e9b\u6211\u4eec\u4e0d\u60f3\u770b\u89c1\u7684\u697c\u623f\u7684\uff0c \u8fd9\u70b9\u8981\u6ce8\u610f\uff0c \u4f46\u5b9e\u9645\u4e0a\u4f7f\u95ee\u9898\u53d8\u7b80\u5355\u4e86\u3002\n\t\u5bf9\u4e8e\u6bcf\u6b21\u64cd\u4f5c\uff0c \u6211\u4eec\u53ef\u4ee5\u628a\u5f53\u524d\u4fee\u6539\u5757\u7684\u524d\u4e00\u4e2a\u5757\u7684\u6700\u5927\u503c\u548cans\u8bb0\u5f55\u4e0b\u6765\uff0c \u5411\u540e\u8fed\u4ee3\u66f4\u65b0\u3002\n   \u90fd\u662f\u5927\u4f6cylsoi\u6559\u6211\u7684\u2014\u2014\u2014\u2014\u2014\u2014\u771f\u7684\uff01\n\n```cpp\n#include<bits/stdc++.h>\n#define mem(a, b) memset(a, b, sizeof(a))\n#define For(i, j, k) for(register int i = (j); i <= (k); ++i)\n#define Forr(i, j, k) for(register int i = (j); i >= (k); --i)\nusing namespace std;\n\ntemplate <typename T>\ninline void read(T &x){\n\tT p = 1, c = getchar();\n\tx = 0;\n\twhile(!isdigit(c)){\n\t\tif(c == '-') p = -1;\n\t\tc = getchar();\n\t}\n\twhile(isdigit(c)){\n\t\tx = (x << 1) + (x << 3) + (c ^ 48);\n\t\tc = getchar();\n\t}\n\tx *= p;\n}\n\ntemplate<typename T> inline bool chkmin(T &a, T b) { return a > b ? a = b, 1 : 0; }\ntemplate<typename T> inline bool chkmax(T &a, T b) { return a < b ? a = b, 1 : 0; }\n\ninline void File(){\n#ifndef ONLINE_JUDGE\n\tfreopen(\"\u697c\u623f\u91cd\u5efa.in\", \"r\", stdin);\n\tfreopen(\"\u697c\u623f\u91cd\u5efa.out\", \"w\", stdout);\n#endif\n}\n\nconst int N = 1e5 + 10, M = 350;\nint n, m, ans, Ans[M];\nint belong[N], num[N], Num, Long;\ndouble Highest, Max[M];\n\nnamespace Segment_Tree{\n\t#define mid (l + r >> 1)\n\t#define lc rt << 1\n\t#define rc rt << 1 | 1\n\t#define lson lc, l, mid\n\t#define rson rc, mid + 1, r\n\t#define lf double \n\n\tlf MAX[N << 2]; int C[N << 2];\n\n\tvoid Build(int rt, int l, int r){\n\t\tif(l == r) return ;\n\t\tBuild(lson), Build(rson);\n\t}\n\t\n\tint Count(int rt, int l, int r, lf V){\n\t\tif(l == r) return (MAX[rt] > V);\n\t\tif(MAX[lc] <= V) return Count(rson, V);\n\t\treturn Count(lson, V) + C[rt] - C[lc] ;\n\t}\n\n\tvoid insert(int rt, int l, int r, int pos, lf H){\n\t\tif(l == r){\n\t\t\tMAX[rt] = H, C[rt] = 1;\n\t\t\treturn ;\n\t\t}\n\t\tif(pos <= mid) insert(lson, pos, H);\n\t\telse insert(rson, pos, H);\n\t\tMAX[rt] = max(MAX[lc], MAX[rc]);\n\t\tC[rt] = C[lc] + Count(rson, MAX[lc]);\n\t}\n\n}\n\ninline void Segment_TREE(){\n\tread(n), read(m);\n\tSegment_Tree::Build(1, 1, n);\n\twhile(m--){\n\t\tint x, y;\n\t\tread(x), read(y);\n\t\tSegment_Tree::insert(1, 1, n, x, 1.0 * y / x);\n\t\tprintf(\"%d\\n\", Segment_Tree::C[1]);\n\t}\n\n}\n\nstruct BLOCKS{\n\tint id[M], S[M], cnt, len;\n\tdouble beseen[M];\n\t\n\tinline void update(){\n\t\tdouble MAX = 0;\n\t\tcnt = 0;\n\t\tFor(i, 1, len) if(chkmax(MAX, (1.0 * S[i]) / (1.0 * id[i]))) beseen[++cnt] = MAX;\n\t}\n\t\n\tdouble Query(int ID, double H){\n\t\tint pos = upper_bound(beseen + 1, beseen + 1 + cnt, H) - beseen;\n\t\tif(pos == cnt + 1) return Max[ID] = H;\n\t\tans += cnt - pos + 1;\n\t\treturn Max[ID] = beseen[cnt];\n\t}\n\n}B[M];\n\n\ninline void BLOCK(){\n\tread(n), read(m);\n\tLong = sqrt(n), Num = (n - 1) / Long + 1;\n\tFor(i, 1, n){\n\t\tbelong[i] = (i - 1) / Long + 1;\n\t\tnum[i] = (i - 1) % Long + 1;\n\t\tB[belong[i]].id[++B[belong[i]].len] = i;\t\n\t}\n\t\n\twhile(m--){\n\t\tint x, y;\n\t\tread(x), read(y);\n\t\tB[belong[x]].S[num[x]] = y;\n\t\tB[belong[x]].update();\n\t\t\n        Highest = Max[belong[x] - 1], ans = Ans[belong[x] - 1];\n\t\tFor(i, belong[x], Num) Highest = B[i].Query(i, Highest), Ans[i] = ans;\n\t\tprintf(\"%d\\n\", ans);\n\t}\n\n}\n\nint main(){\n\tFile();\n\tSegment_TREE();\n\tBLOCK();\n\treturn 0;\n}\n```",
        "postTime": 1522941348,
        "uid": 23088,
        "name": "LSTete",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4198 \u3010\u697c\u623f\u91cd\u5efa\u3011"
    }
]