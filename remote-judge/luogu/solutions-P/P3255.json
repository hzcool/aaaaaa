[
    {
        "content": "[$My\\ blog$](https://ctz45562.github.io/2019/06/20/\u6d1b\u8c37-P3255-JLOI2013-\u5730\u5f62\u751f\u6210)\n\n[\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P3255)\n\n\u8fd9\u4e2a$DP$\u5f88\u6709\u610f\u601d\u3002\n\n\u7b2c\u4e00\u95ee\u5c31\u662f\u4e2a\u5957\u8def$DP$\uff0c\u6309\u9ad8\u5ea6\u964d\u5e8f\u6392\u5e8f,\u4f9d\u6b21\u628a\u5c71\u63d2\u8fdb\u53bb\u3002\u56e0\u4e3a\u9898\u76ee\u8981\u6c42\u7684\u662f**\u4e25\u683c\u5927\u4e8e**\uff0c\u6392\u5e8f\u65f6\u9ad8\u5ea6\u76f8\u540c\u7684\u6309\u5173\u952e\u503c\u964d\u5e8f\u6392\u5e8f\u5c31\u597d\u4e86\u3002\n\n\u7b2c\u4e8c\u95ee\u4e00\u5f00\u59cb\u60f3\u4e86\u4e2a$O(n)$\u7684\u5047\u505a\u6cd5\uff0c\u663e\u7136\u6570\u636e\u8303\u56f4\u662f\u8981$O(n^2)$\u7684\u3002\u3002\u3002\n\n~~\u597d\u96be\u554a\u4e0d\u4f1a\u4e86\u544a\u8f9e~~\n\n\u8fd8\u662f\u6392\u597d\u5e8f\uff0c\u6211\u4eec\u8003\u8651\u628a\u76f8\u540c\u9ad8\u5ea6\u7684\u5c71\u4e00\u5757\u63d2\u8fdb\u53bb\u3002\u5bf9\u4e8e\u6bcf\u4e00\u6bb5\u76f8\u540c\u9ad8\u5ea6\u7684\u533a\u95f4$[l,r]$\u8bbe$f(i,j)$\u4e3a**\u8fd9\u6bb5\u533a\u95f4**\u4e2d\u524d$i$\u5ea7\u5c71\uff0c\u63d2\u8fdb**\u6240\u6709\u5c71**\u4e2d\u524d$j$\u5ea7\u5c71\u7684\u524d\u9762\u7684\u65b9\u6848\u6570\u3002\n\n\u6bcf\u5ea7\u5c71\u8981\u4e48\u63d2\u5230\u7b2c$j$\u5ea7\u5c71\u524d\u9762\uff08$j\\le $\u5173\u952e\u503c\uff09\uff0c\u6709$f(i-1,j)$\u79cd\u65b9\u6848\uff1b\u8981\u4e48\u63d2\u5230\u524d$j-1$\u5ea7\u5c71\u524d\u9762\uff0c\u6709$f(i,j-1)$\u79cd\u65b9\u6848\u3002\n\n\u4e5f\u5c31\u662f$f(i,j)=f(i,j-1)+f(i-1,j)$\u3002\n\n\u56e0\u4e3a\u76f8\u540c\u9ad8\u5ea6\u7684\u5c71\u662f\u5355\u72ec\u8003\u8651\u7684\uff0c\u6839\u636e\u4e58\u6cd5\u539f\u7406\u7b54\u6848\u4e3a\u6240\u6709$f(r-l+1,min\\{l,H[r].cnt\\})$\u7684\u4e58\u79ef\u3002\n\n$f$\u8981\u6eda\u8d77\u6765\uff0c\u8981\u4e0d\u7136\u6e05\u7a7a\u592a\u6162\u3002\n\n``` cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n\n#define maxn 1005\n#define inf 0x3f3f3f3f\n\nconst int mod = 2011;\n\nusing namespace std;\n\ninline int read(){\n\tint x=0,y=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')y=1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9')x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n\treturn y?-x:x;\n}\nstruct hill{\n\tint h,cnt;\n\tbool operator < (const hill &x)const{\n\t\tif(h!=x.h)return h>x.h;\n\t\treturn cnt<x.cnt;\n\t}\n}H[maxn];\nint f[2][maxn];\nint main(){\n\tint n=read(),ans=1,sum1=0,sum2=0,p;\n\tfor(register int i=1;i<=n;++i)H[i].h=read(),H[i].cnt=read();\n\tsort(H+1,H+1+n);\n\tfor(register int i=2;i<=n;++i){\n\t\tif(H[i].h==H[i-1].h)++sum1;\n\t\telse sum2=i-1,sum1=0;\n\t\tans=1ll*ans*(min(H[i].cnt-1,sum2)+sum1+1)%mod;\n\t}\n\tprintf(\"%d \",ans);\n\tans=1;\n\tfor(register int i=1;i<=n;i=p+1){\n\t\tmemset(f,0,sizeof f);\n\t\tp=i+1;\n\t\twhile(p<=n&&H[p].h==H[i].h)++p;\n\t\t--p;\n\t\tfor(register int j=1;j<=i;++j)f[0][j]=1;\n\t\tfor(register int j=i;j<=p;++j)\n\t\t\tfor(register int k=1;k<=i;++k){\n\t\t\t\tf[j-i+1&1][k]=f[j-i+1&1][k-1];\n\t\t\t\tif(k<=H[j].cnt)(f[j-i+1&1][k]+=f[j-i&1][k])%=mod;\n\t\t\t}\n\t\tans=1ll*ans*f[p-i+1&1][min(i,H[p].cnt)]%mod;\n\t}\n\tprintf(\"%d\\n\",ans);\n}\n```\n\n",
        "postTime": 1561017862,
        "uid": 111762,
        "name": "_ctz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3255 \u3010[JLOI2013]\u5730\u5f62\u751f\u6210\u3011"
    },
    {
        "content": "\u529f\u592b\u4e0d\u8d1f\u6709\u5fc3\u4eba\uff0c\u7ecf\u538622\u6b21wa\u4e4b\u540e\u6211\u7ec8\u4e8eac\u4e86\n\n\u7ed9\u5b9a\u4e00\u4e9b\u5c71\uff0c\u6bcf\u5ea7\u5c71\u6709\u4e00\u4e2a\u9ad8\u5ea6\u548c\u4e00\u4e2a\u5173\u952e\u503c\uff0c\u73b0\u5728\u8981\u5c06\u8fd9\u4e9b\u5c71\u6392\u6210\u4e00\u4e2a\u5e8f\u5217\uff0c\u8981\u6c42\u6bcf\u5ea7\u5c71\u4e4b\u524d\u9ad8\u5ea6\u9ad8\u4e8e\u5b83\u7684\u5c71\u7684\u6570\u91cf\u4e0d\u80fd\u8d85\u8fc7\u5b83\u7684\u5173\u952e\u503c\n\n\u95ee\u9898\u4e00\uff1a\u6c42\u5408\u6cd5\u7684\u6807\u53f7\u5e8f\u5217\u6570\n\n\u95ee\u9898\u4e8c\u6c42\u7684\u662f\u9ad8\u5ea6\u5e8f\u5217\u6570\uff08\u6709\u91cd\u590d\u7684\u7b97\u4e00\u79cd\uff09\n\n\u9488\u5bf9\u95ee\u9898\u4e00\u6211\u4eec\u8003\u8651\uff0c\u56e0\u4e3a\u9ad8\u5ea6\u8f83\u5c0f\u7684\u5c71\u5bf9\u4e8e\u9ad8\u5ea6\u8f83\u5927\u7684\u5c71\u662f\u6ca1\u6709\u5f71\u54cd\u7684\n\n\u4e0d\u59a8\u6211\u4eec\u628a\u9ad8\u5ea6\u4ece\u5927\u5230\u5c0f\u6392\u5217\uff0c\u7136\u540e\u518d\u4f9d\u6b21\u5f80\u5e8f\u5217\u91cc\u63d2 \u540c\u65f6 \u6211\u4eec\u9ad8\u5ea6\u76f8\u540c\u65f6\u8fd8\u8981\u9488\u5bf9 \u5173\u952e\u5b57\u4ece\u5c0f\u5230\u5927\u6392\u5217\uff0c\u8fd9\u9898\u7684\u96be\u70b9\u5728\u4e8e\u6709\u76f8\u540c\u7684\u6211\u4eec\u4e0d\u59a8\u628a\u76f8\u540c\u9ad8\u5ea6\u7684\u6570\u636e\u6309\u5173\u952e\u503cx\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u8fd9\u6837\u518d\u63d2\u5165a[i]\u65f6\uff0c\u548c\u4ed6\u4e00\u6837\u9ad8\u7684\u70b9\u4e00\u5b9a\u63d2\u5728\u4ed6\u7684\u524d\u9762\uff0c\u4f46\u5e76\u4e0d\u6bd4\u5b83\u5927\u5426\u5219\u6211\u4eec\u505a\u4e0d\u4e86dp\u7684\n\n\u5047\u8bbe\u6211\u4eec\u65b0\u63d2\u5165\u4e00\u4e2a\u6570\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u4e00\u5b9a\u6bd4\u6211\u4eec\u524d\u9762\u7684\u6240\u6709\u6570\u90fd\u8981\u5c0f\u6216\u8005\u4e00\u6837\u5927\n\n\u8bbedata[i]\u7684\u5173\u952e\u503c\u4e3ax\uff0c\u5219a[i]\u53ef\u4ee5\u63d2\u5728\u524d1~x\u4e2a\u7a7a\u6863\uff0c\u6839\u636e\u4e58\u6cd5\u539f\u7406\uff0cans=ans\\*min(i,data[i].x)\u3002\u6b64\u5916\u8fd8\u6709\u4e4b\u524d\u5df2\u7ecf\u89e3\u51b3\u8fc7\u7684\u76f8\u540c\u60c5\u51b5\u5982\u4f55\u5904\u7406\uff0c\u56e0\u6b64\u662fans=ans\\*min(i,data[i].x+tmp),tmp\u8868\u793a\u5728i\u4e4b\u524d\uff0c\u6709\u591a\u5c11\u4e2a\u9ad8\u5ea6\u4e3aa[i]\u7684\u70b9\u3002\n\n\u7b2c\u4e8c\u95ee \uff1a\u66f4\u96be\u3002\n\n\u4e0d\u8fc7\u6211\u4eec\u4e00\u70b9\u4e00\u70b9\u5206\u6790\u6765\u505a\n\n\u4e3a\u4e86\u4fdd\u8bc1\u6ca1\u6709\u91cd\u590d\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9009\u62e9\u5982\u679c\u6709\u76f8\u540c\u9ad8\u5ea6\u5c31\u628a\u4ed6\u4eec\u62ff\u6765\u4e00\u8d77\u505a\n\n\u5728\u8fd9\u4e2a\u5b50\u95ee\u9898\u91cc\u6211\u4eec\u518d\u4f7f\u7528\u52a8\u6001\u89c4\u5212\n\n\u6bd4\u5982\u91cd\u590d\u7684\u7403\u6709n\u4e2a \u6211\u4eec\u524d\u9762\u5df2\u7ecf\u63d2\u5165\u4e86m-1\u4e2a\u7403 \u62e5\u6709m\u4e2a\u7a7a\u6321\u53ef\u4ee5\u63d2\n\n\u90a3\u4e48\u76f8\u5f53\u4e8e\u4e00\u4e2a\u5c0f\u5b66\u5965\u6570\u8ba1\u6570\u95ee\u9898\uff0c\u53ea\u4e0d\u8fc7\u66f4\u590d\u6742\uff0c\u9650\u5236\u66f4\u591a\n\n\u5173\u4e8e\u52a8\u6001\u89c4\u5212\u7684\u8f6c\u79fb\u65b9\u7a0b \u6211\u4eec\u8bbef[i][j]\u8868\u793a\u524di\u4e2a\u7a7a\u91cc\u63d2\u524dj\u4e2a\u7403\u7684\u65b9\u6848\u6570\n\nf[i][j]=\u2211[i\u22121][k](k\u22651&&k\u2264j)\n\nf[i][j]=f[i-1][j]+f[i-1][j-1]+f[i-1][j-2]+\u2026\u2026+f[i-1][1] \u00a0(1<=j<=data[i].x)\n\n\u8fd9\u4e2a\u91cc\u9762\u5206\u522b\u5c31\u4ee3\u8868\u7b2ci\u4e2a\u63d2\u5728\u7b2cJ\u4e2aj-1\u4e2aj-2\u4e2a\u4e2d\u7684\u5404\u79cd\u65b9\u6848\u6570 \u52a0\u8d77\u6765\u5c31\u662f\u7b2ci\u4e2a\u63d2\u5728\u524dj\u4e2a\u4e2d\u7684\u65b9\u6848\u6570\n\n\u00a0\n\u5316\u7b80o1\u8f6c\u79fb\n\nf[i][j]=f[i-1][j]+f[i][j-1]\n\n\u6700\u540e\u518d\u6839\u636e\u4e58\u6cd5\u539f\u7406\u5c31\u662f\u6211\u4eec\u7684\u7b54\u6848\u4e86\uff08\u540c\u7b2c\u4e00\u95ee\uff09\n\n\u00a0\nlast\u6570\u7ec4\u7528\u6765\u6c42\u6211\u4eec\u5f53\u524d\u9ad8\u5ea6\u8fd9\u4e2a\u6700\u957f\u5ef6\u4f38\u5230\u54ea\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#define mod 2011\n#define N 1100\n#define LL long long\nstruct node{\n    int key,h;\n}data[N];\ninline bool cmp (node a,node b){\n    if (a.h==b.h) return a.key<b.key;else return a.h>b.h;\n}\ninline int min(int x,int y){\n    return x<y?x:y;\n}\ninline int read(){\n    int x=0,f=1;char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9') x=x*10+ch-'0',ch=getchar();\n    return x*f;\n}\nint f[2][N],n,last[N];\nint main(){\n    freopen(\"3255.in\",\"r\",stdin);\n    n=read();\n    for (int i=1;i<=n;++i) data[i].h=read(),data[i].key=read();\n    //for (int i=1;i<=n;++i) printf(\"%d %d\\n\",data[i].h,data[i].key);\n    std::sort(data+1,data+1+n,cmp);\n    int tmp=0;int ans=1;\n    for (int i=1;i<=n;++i){\n        if(data[i].h==data[i-1].h) tmp++;else tmp=0;\n        ans=(LL)ans*min(data[i].key+tmp,i)%mod;\n    }\n    printf(\"%d \",ans);tmp=1;\n    //for(int i=1;i<=n;++i) printf(\"%d %d\\n\",data[i].h,data[i].key);\n    for (int i=1;i<=n;i=i+tmp,tmp=1) {\n        for (int j=i+1;j<=n;++j) if (data[j].h==data[j-1].h) tmp++;else break;\n        last[i]=tmp;\n    } \n//    for (int i=1;i<=n;++i) printf(\"%d \",last[i]);printf(\"\\n\");\n    ans=1;int p=0;\n    for (int i=1;i<=n;i=i+last[i]){\n        p=0;\n        for (int j=1;j<=data[i].key;++j) f[0][j]=1;<span class=\"hljs-comment\">//\u524d0\u4e2a\u7403\u653e\u5230\u4efb\u610f\u4e2a\u76d2\u5b50\u91cc\uff0c\u90fd\u53ea\u6709\u4e00\u79cd\u65b9\u6848 </span>\n      //  if (last[i]==1) continue;\n        for (int j=1;j<=last[i];++j){\n            for (int z=1;z<=i;++z){\n                f[p^1][z]=f[p^1][z-1];\n<span class=\"hljs-comment\">                //\u5982\u679c\u8fd9\u4e2a\u76d2\u5b50i\u4e0d\u80fd\u653e\uff0c\u56e0\u4e3akey[i]\u662f\u9012\u589e\u7684\uff0c\u6240\u4ee5i-1...1\u4e5f\u4e0d\u80fd\u653e\u8fdb\u8fd9\u4e2a\u76d2\u5b50 </span>\n\n                if (z<=data[i+j-1].key)f[p^1][z]=(f[p^1][z-1]+f[p][z])%mod  ;          \n            }p^=1;\n        }\n        ans=(LL)ans*f[p][i]%mod;\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n\u6b22\u8fce\u5149\u4e34\u849f\u84bb\u7684blog  ORZ (elijahqi.win)\n",
        "postTime": 1503417448,
        "uid": 5037,
        "name": "elijahqi",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3255 \u3010[JLOI2013]\u5730\u5f62\u751f\u6210\u3011"
    },
    {
        "content": "\n\u5148\u8003\u8651\u7b2c\u4e00\u4e2a\u95ee\u9898\uff08\u5148\u5047\u8bbe\u6ca1\u6709\u5c71\u9ad8\u5ea6\u76f8\u540c\uff09\uff1a\n\n\n\u6211\u4eec\u628a\u6240\u6709\u5c71\u6309\u9ad8\u5ea6\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u8bbe\u8fd9\u4e2a\u96c6\u5408\u4e3aS\uff0c\u8bbe\u4e00\u4e2a\u7a7a\u96c6\u5408\u4e3aV\u3002\n\n\n\u6211\u4eec\u628a\u5c71\u6309\u987a\u5e8f\u653e\u5165\u96c6\u5408V\u3002\n\n\n\u8003\u8651\u7b2ci\u5ea7\u5c71\u653e\u8fdb\u53bb\u7684\u65f6\u5019\u80fd\u653e\u7684\u4f4d\u7f6e\uff0c\u56e0\u4e3a\u73b0\u5728\u524d\u9762\u6709i - 1\u5ea7\u5c71\u6bd4\u5b83\u9ad8\uff0c\u518d\u52a0\u4e0a\u672c\u6765\u7684\u7b2ci\u4e2a\u4f4d\u7f6e\uff0c\u5b83\u4e00\u5171\u6709i\u4e2a\u4f4d\u7f6e\u53ef\u4ee5\u653e\u3002\u8fd9\u4e2a\u5c71\u7684\u5173\u952e\u503c\u5982\u679c\u4e3ak\uff0c\u5b83\u53ea\u80fd\u5728\u524dmin\uff08k\uff0ci\uff09\u4e2a\u4f4d\u7f6e\u91cc\u6311\u3002\n\n\n\u6240\u4ee5\u7b2ci\u4e2a\u5c71\u7684\u653e\u7684\u4f4d\u7f6e\u7684\u7ec4\u5408\u4e3aci = min\uff08k\uff0ci\uff09\u79cd\u3002ans = c1 \\* c2 \u2026\u2026 \\* cn\uff1b\n\n\n\u4f46\u662f\u6211\u4eec\u73b0\u5728\u6709\u5c71\u7684\u9ad8\u5ea6\u76f8\u540c\uff0c\u4e14\u5173\u952e\u503c\u4e0d\u540c\u3002\u4e24\u5ea7\u9ad8\u5ea6\u76f8\u540c\u7684\u5c71\u80fd\u653e\u7684\u6700\u9760\u540e\u7684\u4f4d\u7f6e\uff0c\u4e00\u5b9a\u662f\u5173\u952e\u503c\u5927\u7684\u90a3\u4e2a\u8d8a\u9760\u540e\u3002\u6240\u4ee5\u6211\u4eec\u5148\u6309\u9ad8\u5ea6\u4ece\u5927\u5230\u5c0f\uff0c\u7136\u540e\u9ad8\u5ea6\u76f8\u540c\u7684\u5173\u952e\u503c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u51faS\u96c6\u5408\u3002\n\n\n\u8bbe[x\uff0cy]\u8fd9\u6bb5\u533a\u95f4\u7684\u5c71\u9ad8\u5ea6\u76f8\u540c\u3002\u6240\u4ee5 ci = min\uff08x\uff0ck\uff09 + i - num\u3002\u56e0\u4e3a\u4e00\u5ea7\u5c71\u5728\u6ee1\u8db3\u5173\u952e\u503c\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u4e5f\u653e\u5728\u9ad8\u5ea6\u76f8\u540c\u7684\u5c71\u524d\u9762\u3002\n\n\n\u6240\u4ee5\u6700\u540e \u5f97\u51fa ans1 = c1 \\* c2 \u2026\u2026 \\* cn\uff1b\n\n\n\u7136\u540e\u518d\u770b\u7b2c\u4e8c\u4e2a\u95ee\u9898\uff0c\u4f1a\u4ea7\u751f\u91cd\u590d\u60c5\u51b5\u7684\u53ea\u6709\u9ad8\u5ea6\u76f8\u540c\u7684\u5c71\u653e\u4e00\u8d77\u7684\u60c5\u51b5\u3002\n\n\n\u6211\u4eec\u4f9d\u7136\u6392\u5e8f\u51faV\u96c6\u5408\u3002\u6309\u987a\u5e8f\u63d2\u5165\u5c71\u3002\n\n\n\u5b9a\u4e49dp\u72b6\u6001f[i][j]\uff0c\u8868\u793a\u9ad8\u5ea6\u76f8\u540c\u7684\u5c71\u91cc\u9762\u524di\u5ea7\uff0c\u653e\u5728\u524dj\u4e2a\u4f4d\u7f6e\u7684\u65b9\u6848\u6570\u3002\n\n\n\u56e0\u4e3a\u6211\u4eec\u662f\u63d2\u5165\u7684\u5c71\uff0c\u6bd4\u5982\u8bf4\u5728\u4e00\u5ea7\u9ad8\u5ea6\u4e3a3\u7684\u5c71\u540e\u9762\u518d\u63d2\u5165\u4e00\u5ea7\u9ad8\u5ea6\u4e3a3\u7684\u5c71\uff0c\u6b64\u65f6\u662f\u591a\u4e86\u4e00\u79cd\u65b9\u6848\uff0c\u662f\u4e0d\u4f1a\u91cd\u590d\u7684\u3002\n\n\n\u72b6\u6001\u4e5f\u662f\u5f88\u597d\u8f6c\u79fb\u8bbe\u533a\u95f4[x\uff0cy]\u5c71\u9ad8\u5ea6\u76f8\u540c\n\n\nf[i][j] = sum\uff08f[i - 1][k] \uff09\uff1bk <= min(data[i].d,x) - 1\uff1b\n\n\n\u56e0\u4e3a\u662f\u6309\u987a\u5e8f\u6765\u5237\u8868\u7684\u53ef\u4ee5\u7701\u6389\u4e00\u7ef4\u3002\n\n\n\u53c8\u56e0\u4e3af[i][j - 1] = sum\uff08f[i][j - 1]\uff09\uff1bf[i][j] = sum\uff08f[i - 1][k] \uff09\uff1bk <= min(data[i - 1].d,x) - 1\uff1b\u6240\u4ee5f[i][j] = f[i - 1][j] + f[i][j - 1]\n\n\n\u6700\u7ec8\u65b9\u7a0bdp[i] = dp[i - 1] + dp[i]\n\n\n\u6700\u540e\u628a\u6bcf\u4e00\u533a\u95f4[x\uff0cy]\u76f8\u540c\u7684\u5c71\u7684ci = dp[0] + dp[1] +\u2026\u2026dp[min(data[y].d,x) - 1]\u4e58\u8d77\u6765\u3002\n\n\n\nans2 = c1 \\* c2 \u2026\u2026 \\* cn\uff1b\n\n\u5c31\u53ef\u4ee5\u4e86\u3002\n\n         \n```cpp\n    # include <iostream>\n    # include <cstdio>\n    # include <cstring>\n    # include <algorithm>\n    using namespace std;\n    const int mod = 2011;\n    const int N = 1012;\n    int dp[N],h[N],n,ans1 = 1,ans2 = 1;\n    struct Mountain{\n        int h;\n        int d;\n    bool operator <(const Mountain & other)const{\n        if(h == other.h)return d < other.d;\n        return h > other.h;\n    }\n    }data[N];\n    void Init(){\n        memset(dp,0,sizeof dp);\n        dp[0] = 1;\n    }\n    void read(){\n        scanf(\"%d\",&n);\n        for(int i = 1;i <= n;i++){\n            scanf(\"%d %d\",&data[i].h,&data[i].d);\n        }\n        sort(data + 1,data + n + 1);\n        int num = 0;\n        for(int i = 1;i <= n;i++){\n            if(data[i].h != data[num].h)num = i;\n            (ans1 *= min(num,data[i].d) + i - num) %= mod;\n        }\n        printf(\"%d\",ans1);\n    }\n    void work(){\n        int pos;\n        for(int i = 1;i <= n;i++){\n            pos = i;\n            while(data[pos].h == data[i].h && pos <= n)pos++;\n            pos--;Init();\n            for(int j = i;j <= pos;j++){\n                for(int k = 1;k <= min(data[j].d,i) - 1;k++){\n                    (dp[k] = dp[k - 1] + dp[k]) %= mod;\n                }\n            }\n            int sum = 0;\n            for(int j = 0;j <= min(data[pos].d,i) - 1;j++)(sum += dp[j]) %= mod;\n            (ans2 *= sum) %= mod;\n            i = pos;\n        }\n        printf(\" %d\\n\",ans2);\n    }\n    int main()\n    {\n       read();\n       work();\n\n```",
        "postTime": 1515912498,
        "uid": 40959,
        "name": "heey",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3255 \u3010[JLOI2013]\u5730\u5f62\u751f\u6210\u3011"
    }
]