[
    {
        "content": "\n\n\u5bf9\u4e8e\u73c2\u6735\u8389\u6811\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u6211\u4eec\u8003\u8651\u7ef4\u62a4\u4e00\u4e2a\u6027\u8d28\uff1a\u8be5\u8282\u70b9\u7684\u4e0e\u76f8\u90bb\u7684\u8282\u70b9\u989c\u8272\u4e0d\u5141\u8bb8\u4e00\u6837\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fde\u7eed\u4e00\u6bb5\u989c\u8272\u5408\u5e76\u4e3a\u4e00\u4e2a\u8282\u70b9\u3002\n\n\u62ff\u6837\u4f8b\u6765\u6784\u9020\uff1a$AACBBABBBCCCBBB$\n\n\u6b64\u65f6\u5bf9\u5e94\u7684\u73c2\u6735\u8389\u6811\uff1a$A_{[1,2]},C_{[3,3]},B_{[4,5]},A_{[6,6]},B_{[7,9]},C_{[10,12]},B_{[13,15]}$\n\n\n\u6709\u4e86\u8fd9\u4e2a\u6027\u8d28\u90a3\u4e48\u67e5\u8be2\u65f6\u5019\u53ea\u9700\u8981\u4e8c\u5206\u627e\u5230 $L,R$ \u5206\u522b\u6240\u5728\u7684\u4f4d\u7f6e\u7684\u8fed\u4ee3\u5668\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u8fed\u4ee3\u5668\u5fc5\u987b\u76f8\u7b49\u624d\u80fd\u5f97\u5230\u8fde\u7eed\u76f8\u540c\u7684\u4e00\u6bb5\uff0c\u7136\u540e\u5206\u7c7b\u8ba8\u8bba\u4e00\u4e0b\u5c31\u884c\u4e86\u3002\n\n\u5bf9\u4e8e\u533a\u95f4\u8986\u76d6\uff0c\u4e5f\u8981\u5206\u7c7b\u8ba8\u8bba\uff0c\u9700\u8981\u8003\u8651\u8986\u76d6\u533a\u95f4\u8fb9\u754c\u4e0e\u8986\u76d6\u533a\u95f4\u8fb9\u754c\u6240\u5728\u7684\u73c2\u6735\u8389\u6811\u8282\u70b9\u4e2d\u7684\u533a\u95f4\u8fb9\u754c\u4f4d\u7f6e\u6765\u5206\u7c7b\uff0c\u4fdd\u8bc1\u6211\u4eec\u7ef4\u62a4\u7684\u6027\u8d28\u4e0d\u53d8\u3002\n\n\u4f8b\u5982\u5728\u4ee5\u4e0a\u7684\u4f8b\u5b50\u4e2d\uff0c\u628a $[$ $6,6$ $]$ \u533a\u95f4\u6539\u4e3a $B$\uff0c\u4fee\u6539\u4e4b\u540e\u7684\u73c2\u6735\u8389\u6811\u5e94\u8be5\u8981\u53d8\u6210\uff1a\n$A_{[1,2]},C_{[3,3]},B_{[4,9]},C_{[10,12]},B_{[13,15]}$\n\n\u9700\u8981\u6ce8\u610f\u7684\u7ec6\u8282\u5176\u5b9e\u633a\u591a\u7684\uff0c\u5982\u679c\u4ee3\u7801\u6709\u4ec0\u4e48\u95ee\u9898\u79c1\u4fe1\u6211\u3002(\u4fee\u6539\u4e86\u9519\u8bef\u7684\u6ce8\u91ca\n\n$ $\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n```cpp\nconstexpr auto Inf = 0X3F3F3F3F;\n#ifndef LOCAL\n\t#include <bits/stdc++.h>\n#endif\n\ntypedef long long LL;\nusing namespace std;\n\nnamespace IO {\n\tinline LL read() {\n\t\tLL o = 0, f = 1; char c = getchar();\n\t\twhile (c < '0' || c > '9') { if (c == '-') f = -1; c = getchar(); }\n\t\twhile (c > '/' && c < ':') { o = o * 10 + c - '0'; c = getchar(); }\n\t\treturn o * f;\n\t}\n\tinline char recd() {\n\t\tchar o; while ((o = getchar()) < 'A' || o > 'Z'); return o;\n\t}\n\tinline double reod() {\n\t\tdouble o = read(), f = 1; char c;\n\t\twhile ((c = getchar()) > '/' && c < ':') o += (c - '0') / (f *= 10);\n\t\treturn o;\n\t}\n}\nusing namespace IO;\n\nconst int SIZE = 2E5 + 7, Mod = (1E9 + 7, 998244353);\n\nstruct Chtholly {\n\tint L, R, w;\n\tChtholly(int L, int R = 0, int w = 0) : L(L), R(R), w(w) {};\n\tbool operator < (const Chtholly& Tmp) const {\n\t\treturn L < Tmp.L;\n\t}\n}; set<Chtholly> Set; int N;\n\nset<Chtholly>::iterator split(int pos) {                   \n\tauto Iter = prev(Set.upper_bound(Chtholly(pos)));\n\tif (Iter->L == pos) return Iter;\n\tint L = Iter->L, R = Iter->R, w = Iter->w;\n\tSet.erase(Iter); Set.insert(Chtholly(L, pos - 1, w));\n\treturn Set.insert(Chtholly(pos, R, w)).first;\n}\n\nvoid Nota(int L, int R, int w) {\n\tauto LIter = prev(Set.upper_bound(Chtholly(L)));\n\tauto RIter = prev(Set.upper_bound(Chtholly(R)));\n\n\t/* \u5bf9\u53f3\u8fb9\u989c\u8272\u76f8\u540c\u7684\u70b9\u5408\u5e76 */\n\tif (RIter != prev(Set.end()) && RIter->R == R && w == (RIter = next(RIter))->w) \n\t\tR = RIter->R, RIter = next(RIter);\n\telse if (RIter->w != w)\n\t\tRIter = split(R + 1), LIter = prev(Set.upper_bound(Chtholly(L)));\n\telse \n\t\tR = RIter->R, RIter = next(RIter);\n\n\t/* \u5bf9\u5de6\u8fb9\u989c\u8272\u76f8\u540c\u7684\u70b9\u5408\u5e76 */\n\tif (LIter != Set.begin() && LIter->L == L && w == (prev(LIter))->w)\n\t\tLIter = prev(LIter), L = LIter->L;\n\tif (LIter->w != w)\n\t\tLIter = split(L);\n\telse\n\t\tL = LIter->L;\n\n\t/* \u66ff\u6362\u6389 */\n\tSet.erase(LIter, RIter);\n\tSet.insert(Chtholly(L, R, w));\n}\n\nbool Seniorious(int L, int R) {     \n\tauto now = prev(Set.upper_bound(Chtholly(L)));\n\tif (now != prev(Set.upper_bound(Chtholly(R)))) return false;\n\tif (!(L != 1 && R != N)) return true;\n\n\t/* \u5206\u7c7b\u8ba8\u8bba\u5373\u53ef */\n\tif (L >  now->L && R <  now->R) return false;\n\tif (L == now->L && R != now->R) return prev(now)->w != now->w;\n\tif (R == now->R && L != now->L) return next(now)->w != now->w;\n\treturn prev(now)->w != next(now)->w;\n}\n\nint main() {\n\tN = read(); \n\tint L = 1, R = 1, pos = N; char w, prew = recd();\n\twhile (pos-- > 1) {\n\t\tw = recd(); if (w == prew) { R++; continue; }\n\t\tSet.insert(Chtholly(L, R, prew)); L = ++R; prew = w;\n\t} Set.insert(Chtholly(L, R, prew));\n\n\tint que = read(); char o;\n\twhile (que--) {\n\t\to = recd(), L = read(), R = read();\n\t\tif (o == 'A') Nota(L, R, recd());\n\t\telse puts(Seniorious(L, R) ? \"Yes\" : \"No\");\n\t}\n}\n```",
        "postTime": 1543115343,
        "uid": 110572,
        "name": "\u7720\u3164\u3164\u3164",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4979 \u3010\u77ff\u6d1e\uff1a\u574d\u584c\u3011"
    },
    {
        "content": "[${\\color{orange}\\text{\u6b22\u8fce\u62dc\u8bbf\u6211\u8fd9\u4e2a\u849f\u84bb\u7684\u535a\u5ba2}}$](https://www.luogu.org/blog/Wendigo/)\n\n[P4979 \u3010\u77ff\u6d1e\uff1a\u574d\u584c\u3011](https://www.luogu.org/problem/P4979)\n\n### \u6b64\u9898\u7b97\u6cd5:\u7ebf\u6bb5\u6811\n\n\u542c\u8bf4\u8981\u7528\u73c2\u6735\u8389\u6811\uff0c\u5361\u7ebf\u6bb5\u6811\uff0c\u662f\u5047\u7684\u3002\n\n\u5927\u81f4\u601d\u8def:(\u6a21\u677f\u578b\u7684\u7ebf\u6bb5\u6811)\n\n>1.$ $\u7ebf\u6bb5\u6811(\u63a8\u8350\u88c5\u6210\u7ed3\u6784\u4f53)\u7684$col[]$\u6570\u7ec4\u8868\u793a\u533a\u95f4\u7684\u989c\u8272\uff0c\u5982\u679c\u540c\u8272\uff0c\u5c31\u4e3a$1$\u3001$2$\u6216$3$\uff0c\u5426\u5219\uff0c\u5c31\u4e3a$-1$\u3002\u5176\u4e2d$mark[]$\u6570\u7ec4\u4e3a$lazytag$\u7528\u7684\u6807\u8bb0\u6570\u7ec4\u3002\n\n```cpp\nstruct hextree{\n\tint col[N<<2],mark[N<<2];\n\thextree(){memset(mark,-1,sizeof mark);}\n}\n```\n\n>2.$pushup()$\u51fd\u6570\u8981\u5224\u65ad\u5de6\u53f3\u5b50\u533a\u95f4\u662f\u5426\u540c\u8272\uff0c\u5982\u4e0b\u3002\n\n```cpp\nvoid pushup(rnt k){\n\tif(col[k<<1]==col[k<<1|1]){\n\t\tcol[k]=col[k<<1];\n\t} else col[k]=-1;\n}\n```\n\n>3.$pushdown()$\u51fd\u6570\u7528\u6765\u4e0b\u79fb\u6807\u8bb0\uff0c\u5982\u4e0b\u3002\n\n```cpp\nvoid pushdown(rnt k){\n\tif(mark[k]!=-1){\n\t\tcol[k<<1]=col[k<<1|1]=mark[k];\n\t\tmark[k<<1]=mark[k<<1|1]=mark[k];\n\t\tmark[k]=-1;\n\t}\n}\n```\n>4.\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\uff0c\u6309\u9898\u76ee\u5224\u65ad\u4e2d\u95f4\u662f\u5426\u540c\u8272\u5e76\u4e14\u5de6\u8fb9\u548c\u53f3\u8fb9\u662f\u5426\u5f02\u8272\u3002\n\n![4979.jpg](https://i.loli.net/2019/10/29/KPpfrajJDN35Y6C.jpg)\n\n\n## \u4ee5\u4e0b\u662f\u4ee3\u7801+\u6ce8\u91ca\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define rnt register int\nconst int N=5e5+10;\nint n,q;\nstring cyj;\nstruct hextree{  //\u7ebf\u6bb5\u6811\n\tint col[N<<2],mark[N<<2];\n\thextree(){memset(mark,-1,sizeof mark);}\n\tvoid pushup(rnt k){\n\t\tif(col[k<<1]==col[k<<1|1]){\n\t\t\tcol[k]=col[k<<1];\n\t\t} else col[k]=-1;\n\t} void pushdown(rnt k){\n\t\tif(mark[k]!=-1){\n\t\t\tcol[k<<1]=col[k<<1|1]=mark[k];\n\t\t\tmark[k<<1]=mark[k<<1|1]=mark[k];\n\t\t\tmark[k]=-1;\n\t\t}\n\t} void build(rnt l,rnt r,rnt k){\n\t\tif(l==r){\n\t\t\tcol[k]=cyj[l-1]-'A'+1; //\u53d61\u30012\u30013\n\t\t\treturn;\n\t\t} rnt mid=(l+r)>>1;\n\t\tbuild(l,mid,k<<1);\n\t\tbuild(mid+1,r,k<<1|1);\n\t\tpushup(k);\n\t} void fix(rnt x,rnt y,rnt z,rnt l,rnt r,rnt k){\n\t\tif(x>r||y<l) return;\n\t\tif(x<=l&&r<=y){\n\t\t\tcol[k]=mark[k]=z; //\u522b\u5fd8\u52a0pushdown\n\t\t\treturn;\n\t\t} pushdown(k);\n\t\trnt mid=(l+r)>>1;\n\t\tfix(x,y,z,l,mid,k<<1);\n\t\tfix(x,y,z,mid+1,r,k<<1|1);\n\t\tpushup(k); \n\t} int draw(rnt x,rnt y,rnt l,rnt r,rnt k){\n\t\t/*\n\t\t0\u8868\u793a\u6b64\u533a\u95f4\u5e76\u4e0d\u8be2\u95ee\u3002\n\t\t\u5982\u679c\u4e00\u4e2a\u5b50\u533a\u95f4\u4e0d\u8be2\u95ee\uff0c\u8fd4\u56de\u53e6\u4e00\u4e2a\u5b50\u533a\u95f4\u7684\u8fd4\u56de\u503c\n\t\t\u5982\u679c\u6709\u4e00\u4e2a\u533a\u95f4\u6df7\u8272\uff0c\u8fd4\u56de\u6df7\u8272\n\t\t\u5982\u679c\u4e24\u4e2a\u5b50\u533a\u95f4\u540c\u8272\uff0c\u8fd4\u56de\u6b64\u8272\n\t\t\u5426\u5219\uff0c\u8fd4\u56de\u6df7\u8272\n\t\t*/\n\t\tif(x>r||y<l) return 0; \n\t\tif(x<=l&&r<=y) return col[k];\n\t\tpushdown(k);\n\t\trnt mid=(l+r)>>1,L,R;\n\t\tL=draw(x,y,l,mid,k<<1); \n\t\tR=draw(x,y,mid+1,r,k<<1|1);\n\t\tif(L==0) return R;\n\t\tif(R==0) return L;\n\t\tif(L==-1||R==-1) return -1;\n\t\tif(L==R) return L;\n\t\treturn -1;\n\t}\n}tree;\nint main(){\n\tscanf(\"%d\",&n);\n\tcin>>cyj;\n\tscanf(\"%d\",&q);\n\ttree.build(1,n,1);\n\twhile(q--){\n\t\tint x,y;\n\t\tchar sign,op;\n\t\tscanf(\" %c \",&sign);\n\t\tif(sign=='A'){\n\t\t\tscanf(\"%d%d %c\",&x,&y,&op);\n//\t\t\tprintf(\"x=%d y=%d op=%c\\n\",x,y,op); \n\t\t\ttree.fix(x,y,op-'A'+1,1,n,1);\n\t\t} else {\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tint L=tree.draw(x-1,x-1,1,n,1),\n\t\t\tR=tree.draw(y+1,y+1,1,n,1);\n//\t\t\tprintf(\"L=%d R=%d\\n\",L,R);\n\t\t\t//\u5982\u679c\u533a\u95f4\u5de6\u8fb9\u6ca1\u77ff\uff0c\u53f3\u8fb9\u6ca1\u77ff\u6216\u5de6\u53f3\u8fb9\u4e0d\u540c\u77ff\n\t\t\t//\u5e76\u4e14\u4e2d\u95f4\u662f\u540c\u4e00\u79cd\u77ff\uff0c\u5c31\u7b26\u5408\u8981\u6c42\n\t\t\tif(tree.draw(x,y,1,n,1)!=-1\n\t\t\t&&(L!=R||!L||!R)) puts(\"Yes\");\n\t\t\telse puts(\"No\"); //\u770b\u6e05\u5927\u5c0f\u5199\n\t\t}\n\t} \n\treturn 0;\n}\n```\n\n\u8f93\u51fa\"NO\"\u548c\"YES\" WA\u4e864\u6b21\u3002\n\n\u8c22\u8c22\u5927\u5bb6! !\n\n",
        "postTime": 1572342957,
        "uid": 118365,
        "name": "George1123",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4979 \u3010\u77ff\u6d1e\uff1a\u574d\u584c\u3011"
    },
    {
        "content": "## \u6211\u4eec\u8981\u5145\u5206\u53d1\u626c\u4eba\u7c7b\u7684\u667a\u6167\n\n\u8bbeA\u4ee3\u88681\uff0cB\u4ee3\u8868500000*A+1\uff0cC\u4ee3\u8868500000*B+1\n\n\u90a3\u4e48\u4e00\u6bb5\u533a\u95f4\u90fd\u662f\u4e00\u6837\u7684\uff0c\u7b49\u4ef7\u4e8e\u5b83\u7684\u548c=A*\u957f\u5ea6\u6216B*\u957f\u5ea6\u6216C*\u957f\u5ea6\n\n\u8fd9\u6837500000*C\u4e5f\u662f\u4e0d\u4f1a\u7206long long\u7684\uff0c\u800c\u4e14\u5c31\u662f\u88f8\u7684\u533a\u95f4\u4fee\u6539\u67e5\u8be2\uff0c\u53ef\u4ee5\u8bf4\u662f\u975e\u5e38\u597d\u5199\u4e86\n\n\u8bdd\u4e0d\u591a\u8bf4\uff0c\u4e0a\u4ee3\u7801\n\n\u987a\u4fbf\u4e00\u63d0\uff0c\u7ebf\u6bb5\u6811\u4e0d\u7528\u975e\u5f97\u5f00\u56db\u500d\uff0c\u53ea\u8981\u5f002*\uff08\u5927\u4e8e\u7b49\u4e8en\u7684\u6700\u5c0f\u76842\u7684\u6b21\u65b9\uff09\u5373\u53ef\n```\n#include <cstdio>\n#include <iostream>\n#include <cstring>\nusing namespace std;\nchar s[500005];\nint n, l[1100005], r[1100005];\nlong long v[1100005], t[1100005];\nlong long trans(char c)\n{\n\tif(c == 'A') return 1;\n\tif(c == 'B') return 500001;\n\tif(c == 'C') return 250000500001;\n}\nvoid build(int nd)\n{\n\tif(l[nd] == r[nd])\n\t{\n\t\tv[nd] = trans(s[l[nd] - 1]);\n\t\treturn ;\n\t}\n\tl[2 * nd] = l[nd], r[2 * nd] = (l[nd] + r[nd]) / 2, l[2 * nd + 1] = r[2 * nd] + 1, r[2 * nd + 1] = r[nd];\n\tbuild(2 * nd); build(2 * nd + 1);\n\tv[nd] = v[2 * nd] + v[2 * nd + 1];\n}\nvoid pushdown(int nd)\n{\n\tif(t[nd] != -1)\n\t\tt[2 * nd] = t[2 * nd + 1] = t[nd], v[2 * nd] = t[nd] * (r[2 * nd] - l[2 * nd] + 1), v[2 * nd + 1] = t[nd] * (r[2 * nd + 1] - l[2 * nd + 1] + 1), t[nd] = -1;\n}\nvoid set(int nd, int p, int q, long long c)\n{\n\tif(p > r[nd] || q < l[nd]) return ;\n\tif(p <= l[nd] && q >= r[nd])\n\t{\n\t\tt[nd] = c;\n\t\tv[nd] = c * (r[nd] - l[nd] + 1);\n\t\treturn ;\n\t}\n\tpushdown(nd);\n\tset(2 * nd, p, q, c);\n\tset(2 * nd + 1, p, q, c);\n\tv[nd] = v[2 * nd] + v[2 * nd + 1];\n}\nlong long query(int nd, int p, int q)\n{\n\tif(p == 0) return -1;\n\tif(q == n + 1) return -2;\n\tif(p > r[nd] || q < l[nd]) return 0;\n\tif(p <= l[nd] && q >= r[nd]) return v[nd];\n\tpushdown(nd);\n\treturn query(2 * nd, p, q) + query(2 * nd + 1, p, q);\n}\nint main(int argc, char **argv)\n{\n\tint m, p, q, f, i;\n\tchar op[4], cc[4];\n\tlong long t0, t1, t2;\n\tscanf(\"%d%s\", &n, s);\n\tl[1] = 1, r[1] = n;\n\tmemset(t, -1, sizeof(t));\n\tbuild(1);\n\tscanf(\"%d\", &m);\n\tfor(i = 1; i <= m; i++)\n\t{\n\t\tscanf(\"%s%d%d\", op, &p, &q);\n\t\tif(op[0] == 'A')\n\t\t{\n\t\t\tscanf(\"%s\", cc);\n\t\t\tset(1, p, q, trans(cc[0]));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tf = 0; t1 = query(1, p, q), t0 = query(1, p - 1, p - 1), t2 = query(1, q + 1, q + 1);\n\t\t\tif((t1 == q - p + 1 || t1 == 500001 * (q - p + 1) || t1 == 250000500001 * (q - p + 1)) && t0 != t2) f = 1;\n\t\t\tprintf(\"%s\\n\", f ? \"Yes\" : \"No\");\t\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1553171874,
        "uid": 47140,
        "name": "\u65af\u8302",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4979 \u3010\u77ff\u6d1e\uff1a\u574d\u584c\u3011"
    },
    {
        "content": "\u8fd9\u9898\u6709\u4e24\u79cd\u505a\u6cd5\uff0c\u590d\u6742\u5ea6\u90fd\u53ef\u4ee5\u662f\u6b63\u786e\u7684\u3002\uff08\u5173\u4e8eODT\uff0c\u4ed6\u6d3b\u4e86\n\n\u9996\u5148,\u53ef\u4ee5\u7ebf\u6bb5\u6811\u6765\u505a\uff0c\u8fd9\u91cc\u8bb2\u4e00\u4e0b\u526a\u679d\u3002\n\n\u7b2c\u4e00\u4e2a\u5c31\u662fDPair\u7684\uff0c\u5982\u679c\u4e00\u4e2a\u533a\u95f4\u5168\u90e8\u4e3a\u4e00\u4e2a\u989c\u8272\uff0c\u8bf4\u660e\u5b83\u5b50\u533a\u95f4\u4e5f\u90fd\u4e3a\u6b64\u989c\u8272\uff0c\u5c31\u4e0d\u7528\u5212\u5206\u533a\u95f4\u4e86\u3002\n\n\u7136\u540e\u53ef\u4ee5\u5f00\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\uff0c\u6709\u6df7\u8272\u5c31\u628a\u5168\u90e8\u5206\u652f\u9000\u51fa\uff08\u5b9e\u6d4b\u6ca1\u6709\u4ec0\u4e48\u7528\uff09\n\n\u4e0b\u9762\u653e\u4e0a\u6211\u7684\u7ebf\u6bb5\u6811\u5361\u5e38\u4ee3\u7801\uff08\u6ca1\u6709\u53ef\u8bfb\u6027\uff0c\u4f46\u76ee\u524d\u6700\u4f18\u89e3\uff09\n```cpp\n// #pragma GCC optimize(2, \"Ofast\", \"inline\")\n// #pragma GCC optimize(\"Ofast,no-stack-protector,unroll-loops,fast-math\")\n// #pragma GCC target(\"sse,sse2,sse3,ssse3,sse4.1,sse4.2,avx,avx2,popcnt,tune=native\")\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n#define getcha() (SS == TT && (TT = (SS = BB) + fread(BB, 1, 1 << 15, stdin), SS == TT) ? EOF : *SS++)\n#define isint(a) ((a >= '0') && (a <= '9'))\n#define ischa(a) ((a >= 'A') && (a <= 'C'))\nchar BB[1 << 15], *SS = BB, *TT = BB;\ninline int read()\n{\n    int s = 0;\n    char ch = getcha();\n    while (!isint(ch))\n        ch = getcha();\n    while (isint(ch))\n        s = (s << 3) + (s << 1) + (ch ^ 48), ch = getcha();\n    return s;\n}\ninline char rad()\n{\n    char ch = getcha();\n    while (!ischa(ch))\n        ch = getcha();\n    return ch ^ 64;\n}\nint n, q;\nchar u[20005000];\nchar a[5000500];\n#define pushup(k)                                \\\n    if ((!u[k << 2]) && (!u[k << 2 | 2]))        \\\n    {                                            \\\n    }                                            \\\n    else if ((!u[k << 2]) || (!u[k << 2 | 2]))   \\\n    {                                            \\\n        u[k << 1] = (u[k << 2] | u[k << 2 | 2]); \\\n    }                                            \\\n    else if (u[k << 2] ^ u[k << 2 | 2])          \\\n    {                                            \\\n        u[k << 1] = 4;                           \\\n    }                                            \\\n    else                                         \\\n    {                                            \\\n        u[k << 1] = u[k << 2];                   \\\n    }\n#define pushdown(k)                                                   \\\n    if (u[k << 1 | 1])                                                \\\n    {                                                                 \\\n        u[k << 2] = u[k << 1 | 1], u[k << 2 | 1] = u[k << 1 | 1];     \\\n        u[k << 2 | 2] = u[k << 1 | 1], u[k << 2 | 3] = u[k << 1 | 1]; \\\n        u[k << 1 | 1] = 0;                                            \\\n    }\nvoid build(int k, int L, int R)\n{\n    if (L == R)\n    {\n        u[k << 1] = a[L];\n        return;\n    }\n    int mid = (L + R) >> 1;\n    build(k << 1, L, mid), build(k << 1 | 1, mid + 1, R);\n    pushup(k);\n    return;\n}\nvoid add(int k, int l, int r, int rl, int rr, int ee)\n{\n    if (rl <= l && rr >= r)\n    {\n        if ((!(u[k << 1] ^ ee)) && (!u[k << 1 | 1]))\n            return;\n        u[k << 1] = ee;\n        u[k << 1 | 1] = ee;\n        return;\n    }\n    pushdown(k);\n    int mid = (l + r) >> 1;\n    if (rl <= mid)\n    {\n        add(k << 1, l, mid, rl, rr, ee);\n    }\n    if (rr > mid)\n    {\n        add(k << 1 | 1, mid + 1, r, rl, rr, ee);\n    }\n    pushup(k);\n    return;\n}\nint trump;\nint query(int k, int l, int r, int rl, int rr)\n{\n    if (!(trump ^ 4))\n        return 4;\n    if (u[k << 1] ^ 4)\n        return u[k << 1];\n    if (rl <= l && rr >= r)\n    {\n        if (u[k << 1] ^ 4)\n            return u[k << 1];\n        else\n            return trump = 4;\n    }\n    pushdown(k);\n    int mid = (l + r) >> 1, ans = 4, tm;\n    if (rl <= mid)\n    {\n        tm = query(k << 1, l, mid, rl, rr);\n        ans = tm;\n        if (ans & 4)\n        {\n            return trump = 4;\n        }\n    }\n    if (rr > mid)\n    {\n        tm = query(k << 1 | 1, mid + 1, r, rl, rr);\n        if (ans & 4)\n        {\n            ans = tm;\n        }\n        else if (ans ^ tm)\n        {\n            ans = 4;\n            return trump = 4;\n        }\n    }\n    if (trump && (trump ^ ans))\n        return trump = 4;\n    else\n        trump = ans;\n    return ans;\n}\nint main()\n{\n    n = read();\n    for (register int i = 1; i <= n; ++i)\n    {\n        a[i] = rad();\n    }\n    q = read();\n    build(1, 1, n);\n    register int tmc;\n    for (register int i = 1, el, er, aa; i <= q; ++i)\n    {\n        tmc = rad();\n        el = read(), er = read();\n        if (tmc == 1)\n        {\n            tmc = rad();\n            add(1, 1, n, el, er, tmc);\n        }\n        else\n        {\n            if (!(el == 1 || er == n))\n            {\n                trump = 0;\n                aa = query(1, 1, n, el - 1, el - 1);\n                trump = 0;\n                aa = aa ^ query(1, 1, n, er + 1, er + 1);\n                if (!aa)\n                {\n                    puts(\"No\");\n                    continue;\n                }\n            }\n            trump = 0;\n            if (query(1, 1, n, el, er) & 4)\n            {\n                puts(\"No\");\n            }\n            else\n            {\n                puts(\"Yes\");\n            }\n        }\n    }\n    return 0;\n}\n```\n\u8fd9\u9053\u9898\u5e76\u6ca1\u6709\u5361\u6734\u7d20\u7684Chtholly\u6811\uff0c\u90a3\u4e48\u5982\u679c\u5361\u4e86\uff0c\u600e\u4e48\u4fdd\u8bc1\u590d\u6742\u5ea6\u5462\uff1f\n\u6211\u4eec\u4e00\u6837\u66b4\u529b(\u5355\u6b21\u6700\u591aO(n))\u5339\u914d\uff0c\u627e\u5230\u4e0d\u5339\u914d\u7684\u5c31\u9000\u51fa\uff0c\u4e4b\u540e**\u628a\u4e4b\u524d\u5339\u914d\u51fa\u7684\u76f8\u540c\u989c\u8272\u8282\u70b9\u5408\u5e76\u6210\u4e00\u4e2a**\u3002\n\n\u8fd9\u6837\u4e3a\u4ec0\u4e48\u5c31\u5bf9\u4e86\uff1f\n\n\u8003\u8651\u533a\u95f4\u8d4b\u503c\u3001\u8be2\u95ee\u6bcf\u6b21\u6700\u591a\u4f7f\u8282\u70b9\u6570\u589e\u52a02\uff0c\u521d\u59cb\u6700\u591an\uff0c\u6240\u4ee5\u7d2f\u79ef\u603b\u5171\u51fa\u73b0n\u96c6\u522b\u7684\u8282\u70b9\uff0c\u8bbe\u6bcf\u6b21\u66b4\u529b\u5339\u914d\u8fd0\u884c\u6b21\u6570\u4e3ax+2\uff0c\u5219\u51cf\u5c11\u4e86x\u4e2a\u8282\u70b9\uff0c\u6240\u4ee5\u66b4\u529b\u590d\u6742\u5ea6\u6700\u591a\u4e3aO\uff08n\uff09\u7ea7\u3002\n\u800cset\u7684lower_bound\u3001erase\u3001insert\u90fd\u662f\u6700\u591alog(n)\u7ea7\u7684\uff0c\u8fd0\u884cn\u6b21\uff0c\u603b\u590d\u6742\u5ea6\u4e3anlog(n)\uff0c\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\n\u4e0b\u9762\u4e3aChtholly\u6811\u4ee3\u7801\uff1a\n```cpp\n// #pragma GCC optimize(2, \"Ofast\", \"inline\")\n// #pragma GCC optimize(\"Ofast,no-stack-protector,unroll-loops,fast-math\")\n// #pragma GCC target(\"sse,sse2,sse3,ssse3,sse4.1,sse4.2,avx,avx2,popcnt,tune=native\")\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <set>\n#include <time.h>\n#include <chrono>\nusing namespace std::chrono;\n#define getcha() (SS == TT && (TT = (SS = BB) + fread(BB, 1, 1 << 15, stdin), SS == TT) ? EOF : *SS++)\n#define isint(a) ((a >= '0') && (a <= '9'))\n#define ischa(a) ((a >= 'A') && (a <= 'C'))\nchar BB[1 << 15], *SS = BB, *TT = BB;\ninline int read()\n{\n    int s = 0;\n    char ch = getcha();\n    while (!isint(ch))\n        ch = getcha();\n    while (isint(ch))\n        s = (s << 3) + (s << 1) + (ch ^ 48), ch = getcha();\n    return s;\n}\ninline char rad()\n{\n    char ch = getcha();\n    while (!ischa(ch))\n        ch = getcha();\n    return ch ^ 64;\n}\n#define IT set<node>::iterator\nusing namespace std;\nstruct node\n{\n    int l, r, v;\n    node(int L, int R = -1, int V = 0) : l(L), r(R), v(V) {}\n    bool operator<(const node &o) const\n    {\n        return l < o.l;\n    }\n};\nset<node> s;\nIT split(int pos)\n{\n    IT it = s.lower_bound(node(pos));\n    if (it != s.end() && it->l == pos)\n        return it;\n    --it;\n    int L = it->l, R = it->r;\n    int V = it->v;\n    s.erase(it);\n    s.insert(node(L, pos - 1, V));\n    return s.insert(node(pos, R, V)).first;\n}\nvoid tpval(int l, int r, int val)\n{\n    IT itr = split(r + 1), itl = split(l);\n    s.erase(itl, itr);\n    s.insert(node(l, r, val));\n}\nint n, q, ll, a, b;\nint main()\n{\n    n = read();\n    ll = 1;\n    b = a = rad();\n    high_resolution_clock::time_point t1 = high_resolution_clock::now();\n    for (register int i = 2; i <= n; ++i)\n    {\n        a = rad();\n        if (a ^ b)\n        {\n            s.insert(node(ll, i - 1, b));\n            ll = i;\n        }\n        b = a;\n    }\n    s.insert(node(ll, n, a));\n    s.insert(node(n + 1, n + 1, 4));\n    high_resolution_clock::time_point t2 = high_resolution_clock::now();\n    duration<double, std::milli> time_span = t2 - t1;\n    if (time_span.count() > 50)\n    {\n        printf(\"?\");\n    }\n    q = read();\n    register int tmc;\n    for (register int i = 1, el, er; i <= q; ++i)\n    {\n        tmc = rad();\n        el = read(), er = read();\n        if (tmc == 1)\n        {\n            tmc = rad();\n            tpval(el, er, tmc);\n        }\n        else\n        {\n            IT itr = split(er + 1), itl = split(el);\n            if (!(el == 1 || er == n))\n            {\n                --itl;\n                if (!(itl->v ^ itr->v))\n                {\n                    puts(\"No\");\n                    continue;\n                }\n                ++itl;\n            }\n            IT tm = itl;\n            for (; itl != itr; ++itl)\n            {\n                if (itl->v != tm->v)\n                {\n                    break;\n                }\n            }\n            if (itl != itr)\n            {\n                puts(\"No\");\n            }\n            else\n            {\n                puts(\"Yes\");\n            }\n            --itl;\n            if (tm != itl)\n            {\n                tmc = itl->v, el = tm->l, er = itl->r;\n                s.erase(tm, itl);\n                s.insert(node(el, er, tmc));\n            }\n        }\n    }\n    return 0;\n}\n```\n\uff08\u4f46\u662f\u6bd4\u7ebf\u6bb5\u6811\u6162\u4e86\u597d\u591a\uff0c\u4e0d\u5f00O2\u4f9d\u7136\u8fc7\u4e0d\u4e86\u3002\n\n\uff08\u6ca1\u529e\u6cd5\uff0cset\u592a\u6162\u4e86\n\n\u4e0b\u9762\u63d0\u4f9b\u4e00\u79cd\u628a\u6734\u7d20Chtholly\u6811\u5361\u6210n^2\u7684\u65b9\u6cd5\uff1a\n\n\u6784\u9020\n\nn\n\nABABAB\u2026\u2026ABA\n\nn\n\nA 1 1 B\n\nA 3 3 B\n\n\u2026\u2026\n\nA n n B\n\nB 1 n\n\nB 1 n\n\n\u2026\u2026\n\u8bf4\u53e5\u95f2\u8bdd\uff0c\u6211\u4e00\u5f00\u59cb\u542c\u8bf4ODT\u65f6\u771f\u7684\u4ee5\u4e3a\u4ed6\u80fd\u4ee3\u66ff\u4e00\u5207\u6570\u636e\u7ed3\u6784\uff0c\u5b66\u7684\u65f6\u5019\u624d\u53d1\u73b0\u8981\u533a\u95f4\u8d4b\u503c+\u6570\u636e\u7eaf\u968f\u673a/\u51fa\u9898\u4eba\u811a\u9020\u6570\u636e",
        "postTime": 1602900422,
        "uid": 55807,
        "name": "LJC00101",
        "ccfLevel": 0,
        "title": "P4979 \u77ff\u6d1e\uff1a\u574d\u584c\u9898\u89e3"
    },
    {
        "content": "**~~\u597d\u77ff\u5c31\u9009CYJ\u77ff\uff0c\u597d\u5403\u4e0d\u8d35\uff0c\u4e00\u65a4\u94c1\u7528\u4e00\u5e74~~**\n\n\u597d\u5427\uff0c\u4eba\u4eec\u90fd\u770b\u7684\u51fa\u6765\uff0c\u8fd9\u5c31\u662f\u4e00\u9053\u88f8\u7684**\u7ebf\u6bb5\u6811**\u554a\uff01([Viston](https://www.luogu.org/space/show?uid=107101)\u5927\u4f6c:\u8fd9\u4e48\u660e\u663e\u7684**\u533a\u95f4\u4fee\u6539\u67e5\u8be2\uff0c\u90fd\u770b\u7684\u51fa\u6765\u662f\u7ebf\u6bb5\u6811\u5427\u3002**)\n\n\u5b9e\u4e0d\u76f8\u7792\uff0c\u8fd9\u9898\u6bd4[P3373](https://www.luogu.org/problemnew/show/P3373)\u8fd8\u8981\u7b80\u5355\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5efa\u4e00\u4e2a\u7ebf\u6bb5\u6811\uff0c\u4fee\u6539\u67e5\u8be2\u5565\u7684\u5927\u5bb6\u90fd\u61c2\u4e86\u5566\u3002__\u53ef\u60dc\u672c\u9898\u6709\u4e00\u4e9b\u5c0f\u5361\u5e38\uff0c\u6240\u4ee5\u4f4d\u8fd0\u7b97\uff0c\u4e09\u76ee\u8fd0\u7b97\u7b26\uff0c\u5feb\u8bfb\u8fd9\u4e9b\u5fc5\u4e0d\u53ef\u5c11\u3002__\n\n\u6084\u6084\u544a\u8bc9\u4f60\u54e6\uff0c\u672c\u9898\u8fd8\u6709\u4e00\u4e2a\u5c0f\u5c0f\u7684\u4f18\u5316\u6280\u5de7\u3002\u7531\u4e8e\u5728\u4e00\u6bb5\u533a\u95f4\u5fc5\u987b\u90fd\u662f\u540c\u4e00\u79cd\u6750\u6599\u624d\u6ee1\u8db3\u8981\u6c42\uff0c\u6240\u4ee5\u5728\u5efa\u6811 or \u4fee\u6539\u7684\u65f6\u5019\uff0c\u53ea\u8981\u6811\u4e0a\u4e00\u6bb5\u533a\u95f4\u5185\u6709\u5176\u4ed6\u7684\u6750\u6599\uff0c\u53ef\u76f4\u63a5\u5c06\u8fd9\u4e2a\u8282\u70b9\u7684\u6240\u6709\u7236\u4eb2/\u7956\u5148\u5168\u90e8\u5224\u4e3afalse.\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define reg register\n#define ls (Node << 1)\n#define rs ((Node << 1) | 1)\n#define Ac puts(\"Yes\")\n#define Wa puts(\"No\")\n\nconst char FI[] = \"pr.in\";\nconst char FO[] = \"pr.out\";\nconst int MAXN = 500000;\n\nint tag[MAXN << 2];\nint T[MAXN << 2];\nchar s[MAXN + 1];\n\ninline void build(reg int Node, reg int L, reg int R) {\n    if(L == R) {\n        T[Node] = s[L] - 'A';\n        return ;\n    }\n    reg int mid = (L + R) >> 1;\n    build(ls, L, mid), build(rs, mid + 1, R);\n    T[Node] = T[ls] == T[rs] ? T[ls] : -1, tag[Node] = -1;\n}\n\ninline void pd(reg int Node) {\n    T[ls] = tag[ls] = T[rs] = tag[rs] = tag[Node], tag[Node] = -1;\n}\n\ninline void Change(reg int Node, reg int L, reg int R, reg int l, reg int r, reg int x) {\n    if(l <= L && R <= r) {\n        T[Node] = tag[Node] = x;\n        return ;\n    }\n    if(tag[Node] != -1) pd(Node);\n    reg int mid = (L + R) >> 1;\n    if(l <= mid) Change(ls, L, mid, l, r, x);\n    if(r > mid) Change(rs, mid + 1, R, l, r, x);\n    T[Node] = T[ls] == T[rs] ? T[ls] : -1;\n}\n\ninline int Query(reg int Node, reg int L, reg int R, reg int l, reg int r) {\n    if(l <= L && R <= r) return T[Node];\n    if(tag[Node] != -1) pd(Node);\n    reg int mid = (L + R) >> 1, t = -2, k = -2;\n    if(l <= mid) t = Query(ls, L, mid, l, r);\n    if(r > mid) k = Query(rs, mid + 1, R, l, r);\n    if(t == -2 || k == -2) return t == -2 ? k : t;\n    else return t == k ? t : -1;\n}\n\nint main() {\n    reg int n, m, l, r;\n    reg char opt, chg;\n    scanf(\"%d\\n%s\\n%d\\n\", &n, s + 1, &m);\n    build(1, 1, n);\n    while(m--) {\n        scanf(\"%c \", &opt);\n        if(opt == 'A') {\n            scanf(\"%d %d %c\\n\", &l, &r, &chg);\n            chg -= 'A';\n            Change(1, 1, n, l, r, chg);\n        }\n        else {\n            scanf(\"%d %d\\n\", &l, &r);\n            if(Query(1, 1, n, l, r) != -1 && (l == 1 || r == n || Query(1, 1, n, l - 1, l - 1) != Query(1, 1, n, r + 1, r + 1))) Ac;\n            else Wa;\n        }\n    }\n    return 0;\n}\n```\n",
        "postTime": 1540716308,
        "uid": 130244,
        "name": "\u6850\u95f4\u7eb1\u8def",
        "ccfLevel": 0,
        "title": "\u77ff\u6d1e\uff1a\u574d\u584c\u3010\u9898\u89e3\u3011"
    },
    {
        "content": "\u6807\u7a0b\u601d\u8def\u7684\u74f6\u9888\u5728\u4e8e\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u4e1c\u897f\u8f83\u590d\u6742\u3002\u4f46\u5373\u4f7f\u53ea\u4f1a\u7ef4\u62a4\u533a\u95f4\u548c\u4e4b\u7c7b\u7b80\u5355\u7684\u4fe1\u606f\uff0c\u8fd9\u9898\u4e5f\u80fd\u5f88\u7b80\u5355\u7684\u5199\u51fa\u6765\u3002\u8fd9\u91cc\u63d0\u4f9b\u4e24\u79cd\u7801\u91cf\u5c0f\u4e14\u57fa\u672c\u65e0\u601d\u7ef4\u96be\u5ea6\u7684\u89e3\u6cd5\uff0c\u5e76\u4e14\u5728\u6ca1\u6709\u5361\u5e38\u7684\u60c5\u51b5\u4e0b\u8dd1\u5f97\u5f88\u5feb\u3002\n\n\u7531\u4e8e\u53ea\u6709\u4e09\u79cd\u989c\u8272\uff0c\u6240\u4ee5\u4f1a\u60f3\u5230\u5c06\u4e00\u79cd\u989c\u8272\u66ff\u6362\u4e3a\u4e00\u4e2a\u6570\uff0c\u5229\u7528\u5b83\u4eec\u7684\u67d0\u4e9b\u6027\u8d28\uff0c\u4f7f\u7528\u7b80\u5355\u7684\u64cd\u4f5c\u8fdb\u884c\u5224\u5b9a\u3002\n\n### \u6cd51\uff1a\u5229\u7528\u533a\u95f4\u6309\u4f4d\u6216\u5224\u5b9a\n\n\u5c06 `A` , `B` , `C` \u5206\u522b\u5bf9\u5e94 $1,2,4$\uff0c\u7136\u540e\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u6309\u4f4d\u6216\uff0c\u5c06\u533a\u95f4\u989c\u8272\u7684\u4e2a\u6570\u5de7\u5999\u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236\u4f4d\uff0c\u4ece\u800c\u7528\u53ef\u4ee5\u5408\u5e76\u7684\u6309\u4f4d\u6216\u6765\u5b8c\u6210\u5224\u5b9a\u3002\n\n\u8fd9\u91cc\u4e09\u4e2a\u989c\u8272\u90fd\u53ea\u6709\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\uff0c\u4e14\u4e92\u4e0d\u76f8\u540c\uff0c\u6240\u4ee5**\u82e5\u533a\u95f4\u5185\u90e8\u53ea\u6709\u4e00\u79cd\u989c\u8272\uff0c\u90a3\u4e48\u8fd9\u4e2a\u533a\u95f4\u7684\u6309\u4f4d\u6216\u7ed3\u679c\u4e00\u5b9a\u53ea\u6709\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d**\u3002\u7528\u81ea\u5e26\u7684 `__builtin_popcount` \u53ef\u4ee5\u5b9e\u73b0\u3002\n\n\u533a\u95f4\u5185\u7684\u6309\u4f4d\u6216\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u7aef\u70b9\u66b4\u529b\u67e5\u8be2\u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define N 500010\n#define mid (l+r>>1)\nusing namespace std;\nint n,m;\nchar a[N],op;\nint s[N<<2],cov[N<<2];\nint x,y,val;\nvoid build(int k,int l,int r){\n\tif(l==r)return s[k]=1<<a[l]-'A',void();\n\tbuild(k<<1,l,mid),build(k<<1|1,mid+1,r);\n\ts[k]=s[k<<1]|s[k<<1|1];\n}\ninline void pd(int k,int l,int r){//\u6807\u8bb0\u4e0b\u4f20 \n\tif(cov[k])s[k<<1|1]=s[k<<1]=cov[k<<1]=cov[k<<1|1]=cov[k],cov[k]=0;\n}\nvoid upd(int k,int l,int r){//\u533a\u95f4\u8986\u76d6 \n\tif(l>y||r<x)return;\n\tif(l>=x&&r<=y)return s[k]=cov[k]=val,void();\n\tpd(k,l,r);\n\tupd(k<<1,l,mid),upd(k<<1|1,mid+1,r);\n\ts[k]=s[k<<1]|s[k<<1|1];\n}\nint Or(int k,int l,int r,int x,int y){//\u533a\u95f4\u6309\u4f4d\u6216 \n\tif(l>y||r<x)return 0;\n\tif(l>=x&&r<=y)return s[k];\n\tpd(k,l,r);\n\treturn Or(k<<1,l,mid,x,y)|Or(k<<1|1,mid+1,r,x,y);\n}\nsigned main(){\n\tscanf(\"%d%s%d\",&n,a+1,&m);\n\tbuild(1,1,n);\n\twhile(m--){\n\t\tscanf(\"\\n%c %d %d\",&op,&x,&y);\n\t\tif(op=='A')getchar(),val=1<<getchar()-'A',upd(1,1,n);\n\t\telse puts(__builtin_popcount(Or(1,1,n,x,y))==1&&Or(1,1,n,x-1,x-1)!=Or(1,1,n,y+1,y+1)?\"Yes\":\"No\");\n\t}\n    return 0;\n}\n```\n\n\n\n### \u6cd52\uff1a\u5229\u7528\u533a\u95f4\u6c42\u548c\u5224\u5b9a\n\n\u82e5\u521a\u5b66\u7ebf\u6bb5\u6811\uff0c\u4e0d\u4f1a\u7ef4\u62a4\u533a\u95f4\u6309\u4f4d\u6216\uff0c\u533a\u95f4\u6c42\u548c\u4e00\u6837\u53ef\u4ee5\u7ef4\u62a4\u3002\n\n\u5c06 `A` , `B` , `C` \u5206\u522b\u5bf9\u5e94 $x,y,z$ \u4e09\u4e2a\u6b63\u6574\u6570\uff0c\u5047\u8bbe\u5728\u533a\u95f4\u4e2d\u51fa\u73b0\u4e86 $a$ \u4e2a `A` , $b$ \u4e2a `B` , $c$ \u4e2a `C` \uff0c\u5219\u5b9e\u9645\u533a\u95f4\u548c\u4e3a $ax+by+cz$\u3002\u800c\u533a\u95f4\u4e2d\u7684\u6570\u5168\u90e8\u76f8\u7b49\u610f\u5473\u7740\u533a\u95f4\u548c\u53ea\u53ef\u80fd\u662f $x(a+b+c),y(a+b+c),z(a+b+c)$\uff0c\u6240\u4ee5\u6211\u4eec\u6784\u9020\u7684 $x,y,z$ \u9700\u8981\u6ee1\u8db3\uff1a**\u4e0d\u5b58\u5728\u4e00\u7ec4 $a,b,c$ \u6ee1\u8db3\u5176\u4e2d\u81f3\u5c11\u4e24\u4e2a\u4e0d\u4e3a $0$ \u4e14 $ax+by+cz$ \u7b49\u4e8e\u4e0a\u8ff0\u4e09\u4e2a\u4e4b\u4e00**\u3002\u4e0d\u59a8 $x<y<z$\u3002\n\n\u82e5\u6ee1\u8db3\uff0c\u5219\u4e0b\u9762\u4e09\u4e2a\u67ff\u5b50\u6ee1\u8db3\u81f3\u5c11\u4e00\u4e2a\uff1a\n\n$$ \\left\\{\n\\begin{aligned}\nax+by+cz=ax+bx+cx \\\\\nax+by+cz=ay+by+cy \\\\\nax+by+cz=az+bz+cz\n\\end{aligned}\n\\right.\n$$\n\n\u5316\u7b80\u5f97\uff1a\n\n$$ \\left\\{\n\\begin{aligned}\nb(y-x)+c(z-x)=0\\ \\ (1)\\\\\nc(z-y)=a(y-x) \\ \\ \\ \\ \\ (2)\\\\\n0=a(z-x)+b(z-y)\\ \\ (3)\n\\end{aligned}\n\\right.\n$$\n\n\u7531\u4e8e $x<y<z$\uff0c$(1)(3)$ \u5fc5\u7136\u4e0d\u6210\u7acb\u3002\u800c\u5bf9\u4e8e $(2)$\uff0c\u53ea\u9700\u8981\u6784\u9020 $z-y$ \u548c $y-x$ \u4e3a\u4e24\u4e2a\u8f83\u5927\u7684\u8d28\u6570\u4e14 $(z-y)(y-x)>N$ \u5373\u53ef\u3002\n\n\u8fd9\u91cc\u6211\u53d6\u7684\u662f $x=1,y=992,z=1989$\u3002\n\n\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u548c\uff0c\u533a\u95f4\u5185\u90e8\u6c42\u548c\u5e76\u5224\u65ad\u662f\u5426\u4e3a\u4e0a\u8ff0\u4e09\u4e2a\u4e4b\u4e00\uff0c\u5de6\u53f3\u7aef\u70b9\u66b4\u529b\u5224\u5b9a\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define N 500010\n#define mid (l+r>>1)\nusing namespace std;\nint n,m,v[3]={1,992,1989};//\u6784\u9020 \nchar a[N],op;\nint s[N<<2],cov[N<<2];\nint x,y,val;\nvoid build(int k,int l,int r){\n\tif(l==r)return s[k]=v[a[l]-'A'],void();\n\tbuild(k<<1,l,mid),build(k<<1|1,mid+1,r);\n\ts[k]=s[k<<1]+s[k<<1|1];\n}\ninline void pd(int k,int l,int r){//\u533a\u95f4 cover \u7684\u6807\u8bb0\u4e0b\u4f20 \n\tif(cov[k]){\n\t\ts[k<<1|1]=(r-mid)*cov[k];\n\t\ts[k<<1]=(mid-l+1)*cov[k];\n\t\tcov[k<<1]=cov[k<<1|1]=cov[k],cov[k]=0;\n\t}\n}\nvoid upd(int k,int l,int r){\n\tif(l>y||r<x)return;\n\tif(l>=x&&r<=y)return s[k]=(r-l+1)*val,cov[k]=val,void();\n\tpd(k,l,r);\n\tupd(k<<1,l,mid),upd(k<<1|1,mid+1,r);\n\ts[k]=s[k<<1]+s[k<<1|1];\n}\nint sum(int k,int l,int r,int x,int y){\n\tif(l>y||r<x)return 0;\n\tif(l>=x&&r<=y)return s[k];\n\tpd(k,l,r);\n\treturn sum(k<<1,l,mid,x,y)+sum(k<<1|1,mid+1,r,x,y);\n}\ninline int ok(int x,int l,int r){//\u533a\u95f4\u5185\u5224\u65ad \n\treturn x==r-l+1||x==992*(r-l+1)||x==1989*(r-l+1);\n}\nsigned main(){\n\tscanf(\"%d%s%d\",&n,a+1,&m);\n\tbuild(1,1,n);\n\twhile(m--){\n\t\tscanf(\"\\n%c %d %d\",&op,&x,&y);\n\t\tif(op=='A')getchar(),val=v[getchar()-'A'],upd(1,1,n);\n\t\telse puts(ok(sum(1,1,n,x,y),x,y)&&sum(1,1,n,x-1,x-1)!=sum(1,1,n,y+1,y+1)?\"Yes\":\"No\");\n\t}\n    return 0;\n}\n```\n\n\u9898\u5916\u8bdd\uff1a\u5982\u679c\u989c\u8272\u4e0d\u6b62\u4e09\u79cd\uff0c\u4e14\u9700\u8981\u6c42\u51fa\u533a\u95f4\u5185\u201c\u8fde\u7eed\u989c\u8272\u6bb5\u201d\u7684\u4e2a\u6570\uff0c\u5c31\u53d8\u6210\u4e86[\u8fd9\u9053\u9898](https://www.luogu.com.cn/problem/P2486)\u3002\n",
        "postTime": 1609940704,
        "uid": 78372,
        "name": "M4_SOPMODII_JR",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4979 \u3010\u77ff\u6d1e\uff1a\u574d\u584c\u3011"
    },
    {
        "content": "\n\u73c2\u6735\u8389\u6811\u662f\u5565\uff1f\u849f\u84bb\u4e0d\u61c2\n\n\u53cd\u6b63\u672c\u9898\u7528\u7ebf\u6bb5\u6811\u8bb0\u5f55\u989c\u8272\u662f\u53ef\u4ee5\u7684\uff0c\u800c\u4e14\u901f\u5ea6\u633a\u5feb\uff0c\u6211\u6ca1\u600e\u4e48\u5361\u5e38\uff0c\u628a\u6570\u7ec4\u5f00\u5927\u4e00\u70b9\u5c31\u8fc7\u4e86\n\n\u770b\u5230\u4f3c\u4e4e\u5c11\u6709\u9898\u89e3\u8bb0\u5f55\u533a\u95f4\u989c\u8272\uff0c\u6211\u6765\u8d21\u732e\u4e00\u53d1\u8be6\u7ec6\u7684\u8bb0\u5f55\u989c\u8272\u505a\u6cd5\n\n\u5bf9\u7ebf\u6bb5\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\u8bb0\u5f55\u989c\u8272\n\n1\u8868\u793aA\uff0c2\u8868\u793aB\uff0c3\u8868\u793aC\uff0c-1\u8868\u793a\u6742\u8272\n\n## 1.\u5efa\u6811\n\n#### \u590d\u6742\u5ea6O\uff08n\uff09\uff0c\u5f53\u5de6\u53f3\u8fb9\u754c\u91cd\u5408\u65f6\uff0c\u628a\u8be5\u70b9\u7684\u989c\u8272\u5bf9\u5e94\u7684\u8bbe\u4e3a\u6b64\u533a\u95f4\uff08\u5df2\u7ecf\u6536\u7f29\u4e3a\u4e00\u70b9\uff09\u7684\u989c\u8272\n\n## 2.\u4fe1\u606f\u7684\u5408\u5e76\n\n#### \u590d\u6742\u5ea6O(1)\n\n\u5982\u679c\u5de6\u53f3\u513f\u5b50\u540c\u8272\uff0c\u5219\u8be5\u70b9\u989c\u8272\u4e3a\u5de6\u53f3\u513f\u5b50\u7684\u989c\u8272\uff08\u56e0\u4e3a\u8fd9\u610f\u5473\u7740\u8fd9\u4e2a\u533a\u95f4\u90fd\u662f\u8fd9\u79cd\u989c\u8272\uff09\uff0c\u5426\u5219\u4e3a\u6742\u8272\n\n#### \u4e3a\u4ec0\u4e48\u4e0d\u7528\u5224\u65ad\u5de6\u53f3\u513f\u5b50\u6709\u6742\u8272\u7684\u60c5\u51b5\uff1f\n\n\u5047\u5982\u6709\u4e00\u4e2a\u662f\u6742\u8272\uff0c\u800c\u53e6\u4e00\u4e2a\u662f\u7eaf\u8272\uff0c\u90a3\u4e48\u4e24\u4e2a\u513f\u5b50\u80af\u5b9a\u4e0d\u540c\u8272\uff0c\u8be5\u70b9\u4e3a\u6742\u8272\n\n\u5047\u5982\u90fd\u662f\u6742\u8272\uff0c\u8be5\u70b9\u7684\u989c\u8272\u4e3a\u5de6\u53f3\u513f\u5b50\u7684\u989c\u8272\uff0c\u8fd8\u662f\u6742\u8272\n\n## 3.\u61d2\u6807\u8bb0\n\n#### \u4f20\u7edf\u7684\u533a\u95f4\u8bbe\u7f6e\n\n\u5bf9\u7ebf\u6bb5\u6811\u4e0a\u6bcf\u4e2a\u70b9\uff0c\u8bb0setc\u4e3a\u8be5\u70b9\u7684\u5bf9\u5e94\u533a\u95f4\u88ab\u4fee\u6539\u6210\u7684\u989c\u8272\uff0c-1\u4e3a\u65e0\u6807\u8bb0\n\n#### \u6ce8\u610f\uff0c\u7531\u4e8e\u4fee\u6539\u540e\u7684\u533a\u95f4\u53ea\u53ef\u80fd\u662f\u7eaf\u8272\uff0c\u6240\u4ee5\u8fd9\u91cc\u7684-1\u4e0d\u4f1a\u4e0e\u6742\u8272\u6df7\u6dc6\n\n#### \u4e5f\u6b63\u662f\u7531\u4e8e\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u76f4\u63a5\u628a\u5de6\u53f3\u513f\u5b50\u7684\u989c\u8272\u90fd\u8bbe\u4e3asetc\u5c31\u597d\u4e86\n\n#### \u6bcf\u6b21\u4fee\u6539\u548c\u67e5\u8be2\u524dpushdown\u6807\u8bb0\u5c31\u884c\n\n## 4.\u67e5\u8be2\n\n\u5148\u67e5\u5f85\u67e5\u533a\u95f4\u5de6\u53f3\u7684\u989c\u8272(\u4ee3\u7801\u4e2d\u7684ask\u51fd\u6570)\uff0c\u518d\u67e5\u533a\u95f4\u7684\u989c\u8272(query\u51fd\u6570)\n\n\u67e5\u8be2\u533a\u95f4\u989c\u8272\u65f6\uff0c\u628a\u5de6\u53f3\u7684\u5019\u9009\u7b54\u6848\u5408\u5e76\u5373\u53ef\n\n\u4ee3\u7801\u5982\u4e0b\uff0c\u5e76\u4e0d\u662f\u5f88\u957f\uff0c\u4e5f\u4e0d\u5bb9\u6613\u5199\u9519\uff08\u6211\u7528\u4e86\u4e00\u53d1\u6539\u9020\u8fc7\u7684\u5feb\u8bfb\uff0c\u5728\u8bfb\u547d\u4ee4\u65f6\u628a\u5b57\u6bcd\u4e5f\u8bfb\u6210\u6570\u5b57\uff09\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN=500005,IAKIOI=2333;\nint col[MAXN<<2],k,n;\nint setc[MAXN<<2];\nchar c[MAXN];\ninline void read(int& x)\n{\n    char c=getchar();\n    x=0;\n    while(c<'0'||c>'9')\n    {\n        if(c=='A')\n        {\n            x=1;\n            return ;\n        }\n        else if(c=='B')\n        {\n            x=2;\n            return ;\n        }\n        else if(c=='C')\n        {\n            x=3;\n            return ;\n        }\n        c=getchar();\n    }\n    while(c>='0'&&c<='9')\n    {\n        x=x*10+c-'0';\n        c=getchar();\n    }\n}\ninline void update(int o)\n{\n    if(col[o<<1]==col[o<<1|1])col[o]=col[o<<1];\n    else col[o]=-1;\n}\ninline void pushdown(int o)\n{\n    if(setc[o])\n    {\n        setc[o<<1]=setc[o<<1|1]=setc[o];\n        col[o<<1]=setc[o<<1];\n        col[o<<1|1]=setc[o<<1|1];\n        setc[o]=0;\n    }\n}\ninline void build(int o,int l,int r)\n{\n    if(l==r)\n    {\n        col[o]=c[l]-'A'+1;\n        return ;\t\n    }\n    int mid=(l+r)>>1;\n    build(o<<1,l,mid);\n    build(o<<1|1,mid+1,r);\n    update(o);\n}\ninline void change(int o,int l,int r,int ql,int qr,int x)\n{\n    if(ql<=l&&qr>=r)\n    {\n        setc[o]=col[o]=x;\n        return ;\n    }\n    int mid=(l+r)>>1;\n    pushdown(o);\n    if(ql<=mid)change(o<<1,l,mid,ql,qr,x);\n    if(qr>mid)change(o<<1|1,mid+1,r,ql,qr,x);\n    update(o);\n}\ninline int query(int o,int l,int r,int ql,int qr)\n{\n    int ans,ansl=IAKIOI,ansr=IAKIOI;\n    if(ql<=l&&qr>=r)\n    {\n        return col[o];\n    }\n    int mid=(l+r)>>1;\n    pushdown(o);\n    if(ql<=mid)ansl=query(o<<1,l,mid,ql,qr);\n    if(qr>mid)ansr=query(o<<1|1,mid+1,r,ql,qr);\n    if(ansl!=IAKIOI&&ansr!=IAKIOI)\n    {\n        if(ansl==ansr)ans=ansl;\n        else ans=-1;\n    }\n    else if(ansl!=IAKIOI)ans=ansl;\n    else if(ansr!=IAKIOI)ans=ansr;\n    return ans;\n}\ninline int ask(int o,int l,int r,int p)\n{\n    if(l==r)\n    {\n        return col[o];\n    }\n    int mid=(l+r)>>1;\n    pushdown(o);\n    if(p<=mid)return ask(o<<1,l,mid,p);\n    else return ask(o<<1|1,mid+1,r,p);\n}\nint main()\n{\n    read(n);\n    scanf(\"%s\",c+1);\n    read(k);\n    build(1,1,n);\n    memset(setc,0,sizeof(setc));\n    for(register int i=1;i<=k;i++)\n    {\n        int op;\n        read(op);\n        if(op==1)\n        {\n            int l,r,x;\n            read(l);\n            read(r);\n            read(x);\n            change(1,1,n,l,r,x);\n        }\n        else\n        {\n            int l,r;\n            read(l);\n            read(r);\n            int cl=-1,cr=-1;\n            if(l==1)cl=0;\n            else cl=ask(1,1,n,l-1);\n            if(r==n)cr=0;\n            else cr=ask(1,1,n,r+1);\n            if(cl==cr&&cl&&cr)printf(\"No\\n\");\n            else\n            {\n                int ans=query(1,1,n,l,r);\n                if(ans<0)printf(\"No\\n\");\n                else printf(\"Yes\\n\");\n            }\n        }\n    }\n}\n```",
        "postTime": 1551523371,
        "uid": 68207,
        "name": "CreeperLordVader",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4979 \u3010\u77ff\u6d1e\uff1a\u574d\u584c\u3011"
    },
    {
        "content": "\u7ebf\u6bb5\u6811\u8d85\u7ea7\u6c34\u9898\uff0c\u4e0d\u77e5\u9053\u4e3a\u5565\u662f\u7d2b\u7684\u3002\n\n\u5c06\u5b57\u6bcd `A,B,C` \u7528 `1,2,3` \u4ee3\u66ff\uff0c\u76f4\u63a5\u7ef4\u62a4 $ok_i$ \u8868\u793a\u533a\u95f4\u6bcf\u4e2a\u503c\u662f\u5426\u5168\u90e8\u76f8\u540c\u4ee5\u53ca\u90fd\u662f\u4ec0\u4e48\u503c\uff1a\n\n- $-1$\uff0c\u4ee3\u8868\u5f53\u524d\u533a\u95f4\u6bcf\u4e2a\u503c\u4e0d\u662f\u5168\u90e8\u76f8\u540c\n- $x(x \\in \\{1,\\,2,\\,3\\})$\uff0c\u8868\u793a\u5f53\u524d\u533a\u95f4\u7684\u503c\u5168\u90e8\u76f8\u540c\uff0c\u4e14\u90fd\u4e3a $x$\u3002\n\n\u4ee5\u53ca\u6bcf\u4e2a\u70b9\u5f53\u524d\u7684\u503c\u3002\u6bcf\u6b21\u5224\u65ad\u5c31\u6309\u7167\u9898\u76ee\u8981\u6c42\u5224\u65ad\u5c31\u597d\u4e86\u3002\n\npushup \u5f88\u597d\u7406\u89e3\uff1a\n\n```cpp\nvoid pushup(int id) {\n\tok[id] = (ok[ls] == ok[rs]) ? ok[ls] : -1;\n\t// \u5982\u679c\u90fd\u76f8\u540c\u5c31\u968f\u4fbf\u53d6\u4e00\u4e2a\n\t// \u5de6\u53f3\u533a\u95f4\u5185\u90fd\u76f8\u540c\uff0c\u4f46\u76f8\u540c\u7684\u503c\u4e0d\u540c\uff0c\u4e3a -1\n   // \u53ea\u8981\u6709\u4e00\u4e2a -1 \u5c31\u4e00\u5b9a\u662f -1\n}\n```\n\npushdown\uff1a\u56e0\u4e3a\u662f\u533a\u95f4\u66ff\u6362\uff0c\u76f4\u63a5\u66ff\u6362\u6210\u66f4\u6539\u7684\u503c\u5373\u53ef\u3002\n\n```cpp\nvoid pushdown(int id) {\n\tif(lz[id]) {\n\t\tok[ls] = ok[rs] = lz[ls] = lz[rs] = lz[id];\n\t\tlz[id] = 0;\n\t}\t\n}\n```\n\n\u533a\u95f4\u67e5\u8be2\u548c pushup \u7684\u601d\u60f3\u662f\u4e00\u6837\u7684\uff1a\n\n```cpp\nint query(int id, int l, int r, int x, int y) {\n\tif(x <= l && r <= y) return ok[id];\n\tpushdown(id);\n\tMid;\n\tint ret = -2;\n\tif(mid >= x) ret = query(ls, l, mid, x, y);\n\tif(ret == -1) return -1; // \u6709 -1\uff0c\u4e00\u5b9a\u662f -1\n\tif(mid < y) {\n\t\tif(ret == -2) ret = query(rs, mid + 1, r, x, y); // \u5de6\u533a\u95f4\u4e3a\u7a7a\uff0creturn \u53f3\u533a\u95f4\u7684\u7ed3\u679c\n\t\telse {\n\t\t\tint res = query(rs, mid + 1, r, x, y);\n\t\t\tif(res != ret) ret = -1; // \u4e0d\u76f8\u540c\u5219\u662f -1\n\t\t}\n\t}\n\treturn ret;\n}\n```\n\u5355\u70b9\u67e5\u8be2\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u533a\u95f4 $[l,\\,r]$ \u6ee1\u8db3 $l=r$ \u65f6\u4e00\u5b9a\u6ee1\u8db3 $ok_i \\not= -1$\uff0c\u6240\u4ee5\u76f4\u63a5\u4f7f\u7528 $ok$ \u6570\u7ec4\u67e5\u8be2\u5373\u53ef\u3002\n\nCode\uff1a\n\n```cpp\n#define ls id << 1\n#define rs id << 1 | 1\n#define Mid int mid = (l + r) >> 1\n\ndef(N, int, 5e5 + 5)\n\nint n;\nint ok[N << 2], lz[N << 2];\nchar s[N];\n\nil int get(const char &c) { return c - 'A' + 1; }\n\nvoid pushup(int id) {\n\tok[id] = (ok[ls] == ok[rs]) ? ok[ls] : -1;\n}\n\nvoid pushdown(int id) {\n\tif(lz[id]) {\n\t\tok[ls] = ok[rs] = lz[ls] = lz[rs] = lz[id];\n\t\tlz[id] = 0;\n\t}\t\n}\n\nvoid build(int id, int l, int r) {\n\tif(l == r) {\n\t\tok[id] = get(s[l]);\n\t\treturn ;\n\t}\n\tMid;\n\tbuild(ls, l, mid);\n\tbuild(rs, mid + 1, r);\n\tpushup(id);\n}\n\nvoid update(int id, int l, int r, int x, int y, int v) {\n\tif(x <= l && r <= y) {\n\t\tok[id] = lz[id] = v;\n\t\treturn ;\n\t}\n\tpushdown(id);\n\tMid;\n\tif(mid >= x) update(ls, l, mid, x, y, v);\n\tif(mid < y) update(rs, mid + 1, r, x, y, v);\n\tpushup(id);\n}\n\nint query(int id, int l, int r, int x, int y) {\n\tif(x <= l && r <= y) return ok[id];\n\tpushdown(id);\n\tMid;\n\tint ret = -2;\n\tif(mid >= x) ret = query(ls, l, mid, x, y);\n\tif(ret == -1) return -1;\n\tif(mid < y) {\n\t\tif(ret == -2) ret = query(rs, mid + 1, r, x, y);\n\t\telse {\n\t\t\tint res = query(rs, mid + 1, r, x, y);\n\t\t\tif(res != ret) ret = -1;\n\t\t}\n\t}\n\treturn ret;\n}\n\nint queryval(int id, int l, int r, int x) {\n\tif(l == r) return ok[id];\n\tpushdown(id);\n\tMid;\n\tif(mid >= x) return queryval(ls, l, mid, x);\n\telse return queryval(rs, mid + 1, r, x);\n}\n\nint main() {\n\tcin >> n;\n\tscanf(\"%s\", s + 1);\n\tbuild(1, 1, n);\n\tint q; cin >> q;\n\tW(q) {\n\t\tchar op;\n\t\tint l, r;\n\t\tscanf(\" %c%d%d\", &op, &l, &r);\n\t\tif(op == 'A') {\n\t\t\tchar v; scanf(\" %c\", &v);\n\t\t\tint vv = get(v);\n\t\t\tupdate(1, 1, n, l, r, vv);\n\t\t}\n\t\telse {\n\t\t\tif(query(1, 1, n, l, r) == -1) {\n\t\t\t\tputs(\"No\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(l == 1 || r == n) puts(\"Yes\");\n\t\t\telse {\n\t\t\t\tif(queryval(1, 1, n, l - 1) == queryval(1, 1, n, r + 1)) puts(\"No\");\n\t\t\t\telse puts(\"Yes\");\n\t\t\t}\n\t\t}\n\t}\n \treturn 0;\n}\n```\n",
        "postTime": 1623644746,
        "uid": 242543,
        "name": "BreezeEnder",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4979 \u77ff\u6d1e\uff1a\u574d\u584c"
    },
    {
        "content": "\u76ee\u524d\u6700\u4f18\u89e3\u8fc7\u6765\u8bb2\u4e00\u4e9b\u5176\u4ed6\u9898\u89e3\u91cc\u90fd\u6ca1\u6709\u7684\u4f18\u5316\u3002\n\n\u672c\u9898\u601d\u8def\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u7ebf\u6bb5\u6811\u4e0a\u533a\u95f4\u63a8\u5e73\u548c\u533a\u95f4\u67e5\u8be2\u7684\u64cd\u4f5c\uff0c\u8fd9\u4e2a\u5176\u4ed6\u9898\u89e3\u91cc\u8bb2\u7684\u5f88\u6e05\u695a\u4e86\u3002\n\n\u4f46\u5176\u5b9e\u53ef\u4ee5\u52a0\u4e00\u4e2a\u526a\u679d\u3002\n\n\u9996\u5148\u6211\u7684\u5199\u6cd5\u662f\u8fd9\u6837\u5b50\u7684\uff1a\u7ebf\u6bb5\u6811\u4e0a\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u7684\u6743\u503c\u8868\u793a\u5f53\u524d\u533a\u95f4 **\u5168\u90e8\u90fd\u4e3a** \u54ea\u79cd\u989c\u8272\uff0c\u82e5\u5f53\u524d\u533a\u95f4\u5185\u5b58\u5728\u5f02\u8272\u7684\u60c5\u51b5\u5219\u6743\u503c\u4e3a $-1$ \u3002\u8fd9\u4e2a\u7528 `pushup` \u51fd\u6570\u5f88\u597d\u7ef4\u62a4\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u526a\u679d\uff1a\u4f60\u5728\u67e5\u8be2\u7684\u65f6\u5019\u5982\u679c\u627e\u5230\u4e86\u4e00\u4e2a **\u6743\u503c\u4e0d\u4e3a-1** \u7684\u8282\u70b9\uff0c\u90a3\u4e48\u663e\u7136\u4f60\u518d\u5f80\u6df1\u641c\u4e5f\u5fc5\u7136\u4f1a\u641c\u5230\u76f8\u540c\u7684\u7b54\u6848\uff0c\u6b64\u65f6\u4f60\u5c31\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u7ed3\u679c\u4ee5\u8fbe\u5230\u526a\u679d\u7684\u6548\u679c\uff0c\u5177\u4f53\u5199\u6cd5\u4e3a\uff1a\n\n```cpp\nint query(int rt, int l, int r, int x, int y){\n        if(~dat[rt]) return dat[rt];//\u5c31\u662f\u8fd9\u4e00\u53e5\n        if(x <= l && r <= y) return dat[rt];\n        pushdown(rt);\n        int mid = (l + r) >> 1;\n        if(x <= mid && y > mid){\n            int ret1 = query(LSON, x, y);\n            int ret2 = query(RSON, x, y);\n            if(ret1 ^ ret2) return -1;\n            else return ret1;\n        }\n        if(x <= mid) return query(LSON, x, y);\n        if(y > mid) return query(RSON, x, y);\n    }\n```\n\n\u5b9e\u6d4b\u8dd1\u7684\u98de\u5feb\u3002\n\n\u7136\u540e\u5176\u4ed6\u7684\u6309\u7740\u4e00\u822c\u7684\u7ebf\u6bb5\u6811\u6765\u5199\u5373\u53ef\u3002",
        "postTime": 1602849389,
        "uid": 66511,
        "name": "DPair",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4979 \u3010\u77ff\u6d1e\uff1a\u574d\u584c\u3011"
    },
    {
        "content": "# [\u77ff\u6d1e\uff1a\u574d\u584c](https://www.luogu.com.cn/problem/P4979) \u9898\u89e3\n\n## \u5206\u6790\n\n\u9996\u5148\uff0c\u6211\u4eec\u8003\u8651\u4f7f\u7528\u7ebf\u6bb5\u6811\u3002\n\n\u6211\u4eec\u53d1\u73b0\n\n- \u5bf9\u4e8e\u64cd\u4f5c $1$\n\n    - `lazy_tag` \u4fee\u6539\u5c31\u597d\u4e86\n\n- \u5bf9\u4e8e\u64cd\u4f5c $2$\n\n    - \u770b\u8fd9\u4e00\u6bb5\u662f\u5426\u6240\u6709\u5b57\u7b26\u90fd\u76f8\u540c\n    - \u5982\u679c $l\\ne1 \\And r\\ne n$ \uff0c\u5355\u70b9\u67e5\u8be2\u7b2c $l-1$ \u548c $r+1$ \u8fd9 $2$ \u4e2a\u5b57\u7b26\u662f\u5426\u76f8\u540c\u5c31\u884c\u4e86\n\n### \u5982\u4f55\u770b\u4e00\u6bb5\u5185\u6240\u6709\u5b57\u7b26\u662f\u5426\u76f8\u540c\n\n\u8fd9\u4e2a\u4e1c\u897f\u786e\u5b9e\u6709\u70b9\u96be\uff0c\u6211\u7684\u505a\u6cd5\u662f\uff0c\u867d\u7136\u5b57\u7b26\u5f88\u591a\uff0c\u4f46\u6bcf\u4e2a\u5b57\u7b26\u90fd\u662f `A`\u3001`B`\u3001`C` \u4e2d\u7684\u4e00\u4e2a\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u770b\u8fd9\u6bb5\u5b57\u7b26\u662f\u5426\u5168\u662f `A`\u3001`B` \u6216 `C`\u3002\n\n### \u5f00\u59cb\u7ebf\u6bb5\u6811\n\n#### \u7ef4\u62a4\n\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u6211\u4eec\u53ef\u4ee5\u5f00\u59cb\u5199\u9898\u4e86\u3002\n\n\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u51e0\u4e2a\u503c\uff1a\n\n- `lazy` \u8fd9\u4e2a\u5e94\u8be5\u4e0d\u7528\u6211\u8bf4\u4e86\u5427\uff0c\u6709 $3$ \u4e2a\u503c\n    - $1$ \u8868\u793a `A`\n    - $2$ \u8868\u793a `B`\n    - $3$ \u8868\u793a `C`\n\n- `s[3]` \u8fd9\u4e2a\u5c31\u662f\u770b\u8fd9\u6bb5\u5b57\u7b26\u662f\u5426\u5168\u662f `A`\u3001`B` \u6216 `C`\u3002\n\n    - $s_1$ \u8868\u793a\u8fd9\u6bb5\u5b57\u7b26\u662f\u5426\u5168\u662f `A`\n    - $s_2$ \u8868\u793a\u8fd9\u6bb5\u5b57\u7b26\u662f\u5426\u5168\u662f `B`\n    - $s_3$ \u8868\u793a\u8fd9\u6bb5\u5b57\u7b26\u662f\u5426\u5168\u662f `C`\n\n#### pushup\n\n\u8fd9\u4e00\u6bb5\u533a\u95f4\u662f\u5426\u5168\u662f `A`\u3001`B` \u6216 `C`\uff0c\u4ec5\u5f53\u5de6\u513f\u5b50\u548c\u53f3\u513f\u5b50**\u90fd**\u5168\u662f `A`\u3001`B` \u6216 `C`\u3002\n\n```cpp\nfor(register int i=1;i<=3;i++)t[num].s[i]=(t[ls].s[i]&&t[rs].s[i]);\n```\n\n#### \u8fb9\u754c\u6761\u4ef6\n\n\u5bf9\u4e8e $l=r$ \u7684\u60c5\u51b5\uff0c$s_i$ \u7684\u503c\u662f\u5426\u4e3a $1$\uff0c\u4ec5\u5f53\u8fd9\u4e2a\u5b57\u7b26\u662f\u5426\u662f`A`\u3001`B`\u3001`C`\u3002\n\n#### pushup\n\n\u4fee\u6539\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\n\n```cpp\nvoid pushdown(int num){\n    if(t[num].lazy==1)down1(ls),down1(rs);\n    if(t[num].lazy==2)down2(ls),down2(rs);\n    if(t[num].lazy==3)down3(ls),down3(rs);\n    t[num].lazy=0;\n}\n```\n\n\u8bf4\u8bf4 $down_x$ \u600e\u4e48\u5199\n\n\u9996\u5148\u628a `lazy_tag` \u7684\u503c\u8d4b\u4e00\u4e0b\uff0c\u7136\u540e\uff0c\u5c06 $s_x$ \u8bbe\u4e3a $1$\uff0c\u5176\u4ed6\u90fd\u8bbe\u4e3a $0$\u3002\n\n```cpp\nvoid down1(int num){\n    t[num].lazy=1;\n    t[num].s[1]=1;\n    t[num].s[2]=0;\n    t[num].s[3]=0;\n}\nvoid down2(int num){\n    t[num].lazy=2;\n    t[num].s[1]=0;\n    t[num].s[2]=1;\n    t[num].s[3]=0;\n}\nvoid down3(int num){\n    t[num].lazy=3;\n    t[num].s[1]=0;\n    t[num].s[2]=0;\n    t[num].s[3]=1;\n}\n```\n\n#### \u4fee\u6539\n\n\u8fd9\u4e2a\u662f\u677f\u5b50\u8bf6\uff0c\u4e0d\u8bb2\u4e86\n\n```cpp\nvoid change(int num){\n    if(L<=t[num].l&&t[num].r<=R){\n        if(S==1)down1(num);\n        if(S==2)down2(num);\n        if(S==3)down3(num);\n        return;\n    }pushdown(num);\n    if(t[ls].r>=L)change(ls);\n    if(t[rs].l<=R)change(rs);\n    pushup(num);\n}\n```\n\n#### \u5355\u70b9\u67e5\u8be2\n\n\u8fd9\u4e2a\u662f\u677f\u5b50\u8bf6\uff0c\u4e0d\u8bb2\u4e86\n\n```cpp\nint query2(int num,int S){//S\u662f\u8981\u67e5\u8be2\u7684\u70b9\n    if(t[num].l==t[num].r){\n        for(int i=1;i<=3;i++)\n            if(t[num].s[i])return i;\n    }pushdown(num);\n    if(t[ls].r>=S)return query2(ls,S);\n    if(t[rs].l<=S)return query2(rs,S);\n}\n```\n\n#### \u533a\u95f4\u67e5\u8be2\n\n\u8fd9\u4e2a\u662f\u677f\u5b50\u8bf6\uff0c\u4e0d\u8bb2\u4e86\n\n```cpp\nbool query1(int num,int f){\n    if(L<=t[num].l&&t[num].r<=R)return t[num].s[f];\n    pushdown(num);\n    if(t[ls].r<L)return query1(rs,f);\n    if(t[rs].l>R)return query1(ls,f);\n    return (query1(ls,f)&&query1(rs,f));\n}\n```\n\n## \u4ee3\u7801\n\n```cpp\n// Problem : P4979 \u77ff\u6d1e\uff1a\u574d\u584c\n// Contest : Luogu\n// URL : https://www.luogu.com.cn/problem/P4979\n// Memory Limit : 250 MB\n// Time Limit : 1000 ms\n// Powered by CP Editor (https://github.com/cpeditor/cpeditor)\n\n#include <bits/stdc++.h>\n#define ls num<<1\n#define rs num<<1|1\nusing namespace std;\ntypedef long long ll;\ntemplate<typename T>inline void read(T &FF){\n\tT RR=1;FF=0;char CH=getchar();\n\tfor(;!isdigit(CH);CH=getchar())if(CH=='-')RR=-1;\n\tfor(;isdigit(CH);CH=getchar())FF=(FF<<1)+(FF<<3)+(CH^48);\n\tFF*=RR;\n}\nconst int MAXN=5e5+10;\nint a[MAXN],L,R,S,n;\nstruct Line_Tree{\n\tstruct Tree{\n\t\tint l,r,lazy;\n\t\tbool s[3];\n\t}t[MAXN<<2];\n\tvoid pushup(int num){\n\t\tfor(int i=1;i<=3;i++)t[num].s[i]=(t[ls].s[i]&&t[rs].s[i]);\n\t}\n\tvoid down1(int num){\n\t\tt[num].lazy=1;\n\t\tt[num].s[1]=1;\n\t\tt[num].s[2]=0;\n\t\tt[num].s[3]=0;\n\t}\n\tvoid down2(int num){\n\t\tt[num].lazy=2;\n\t\tt[num].s[1]=0;\n\t\tt[num].s[2]=1;\n\t\tt[num].s[3]=0;\n\t}\n\tvoid down3(int num){\n\t\tt[num].lazy=3;\n\t\tt[num].s[1]=0;\n\t\tt[num].s[2]=0;\n\t\tt[num].s[3]=1;\n\t}\n\tvoid pushdown(int num){\n\t\tif(t[num].lazy==1)down1(ls),down1(rs);\n\t\tif(t[num].lazy==2)down2(ls),down2(rs);\n\t\tif(t[num].lazy==3)down3(ls),down3(rs);\n\t\tt[num].lazy=0;\n\t}\n\tvoid build(int num,int l,int r){\n\t\tt[num].l=l;t[num].r=r;t[num].lazy=0;\n\t\tif(l==r){\n\t\t\tfor(int i=1;i<=3;i++)t[num].s[i]=(a[l]==i);\n\t\t\treturn;\n\t\t}int mid=(l+r)>>1;\n\t\tbuild(ls,l,mid);\n\t\tbuild(rs,mid+1,r);\n\t\tpushup(num);\n\t}\n\tvoid change(int num){\n\t\tif(L<=t[num].l&&t[num].r<=R){\n\t\t\tif(S==1)down1(num);\n\t\t\tif(S==2)down2(num);\n\t\t\tif(S==3)down3(num);\n\t\t\treturn;\n\t\t}pushdown(num);\n\t\tif(t[ls].r>=L)change(ls);\n\t\tif(t[rs].l<=R)change(rs);\n\t\tpushup(num);\n\t}\n\tbool query1(int num,int f){\n\t\tif(L<=t[num].l&&t[num].r<=R)return t[num].s[f];\n\t\tpushdown(num);\n\t\tif(t[ls].r<L)return query1(rs,f);\n\t\tif(t[rs].l>R)return query1(ls,f);\n\t\treturn (query1(ls,f)&&query1(rs,f));\n\t}\n\tint query2(int num,int S){\n\t\tif(t[num].l==t[num].r){\n\t\t\tfor(int i=1;i<=3;i++)\n\t\t\t\tif(t[num].s[i])return i;\n\t\t}pushdown(num);\n\t\tif(t[ls].r>=S)return query2(ls,S);\n\t\tif(t[rs].l<=S)return query2(rs,S);\n\t}\n}T;\nint init(){\n\tread(n);\n\tfor(int i=1;i<=n;i++){\n\t\tchar ch=getchar();\n\t\tfor(;ch!='A'&&ch!='B'&&ch!='C';ch=getchar());\n\t\ta[i]=ch-64;\n\t}T.build(1,1,n);\n\treturn 0;\n}\nint work2(){\n\tif(L==1||R==n){puts(\"Yes\");return 0;}\n\tif(T.query2(1,L-1)!=T.query2(1,R+1))puts(\"Yes\");\n\telse puts(\"No\");\n\treturn 0;\n}\nint work(){\n\tchar ch=getchar();for(;ch!='A'&&ch!='B';ch=getchar());\n\tif(ch=='A'){\n\t\tread(L);read(R);ch=getchar();for(;ch!='A'&&ch!='B'&&ch!='C';ch=getchar());S=ch-64;\n\t\tT.change(1);\n\t}else{\n\t\tread(L);read(R);\n\t\tfor(int i=1;i<=3;i++)\n\t\t\tif(T.query1(1,i)){work2();return 0;}\n\t\tputs(\"No\");\n\t}\n\treturn 0;\n}\nint main(){\n\tinit();\n\tint T;read(T);\n\twhile(T--){work();}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1591435616,
        "uid": 180242,
        "name": "orzdevinwang",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4979 \u3010\u77ff\u6d1e\uff1a\u574d\u584c\u3011"
    },
    {
        "content": "\u633a\u677f\u5b50\u7684\u3002\n\n\u9898\u610f\u7b80\u8ff0\uff1a\n\n\u4e00\u53ea\u5305\u542b A\uff0cB\uff0cC \u7684\u5b57\u7b26\u5e8f\u5217\uff0c\u4fe9\u64cd\u4f5c\uff1a\n\n1. \u533a\u95f4\u63a8\u5e73\n\n2. \u5224\u65ad\u533a\u95f4\u662f\u5426\u5168\u7b49\uff0c\u4e14 $a_{l-1}\\ne a_{r+1}$\uff08\u5f53\u7136\u5982\u679c $l=1$ \u6216\u8005 $r=n$ \u5c31\u4e0d\u7528\u5224\u65ad\u8fd9\u4e2a\u6761\u4ef6\uff09\u3002\n\n\u867d\u7136\u7ebf\u6bb5\u6811\u53ef\u4ee5\u76f4\u63a5\u7ef4\u62a4\uff0c\u4f46\u662f\u8fd8\u662f\u7528\u4e00\u79cd\u601d\u7ef4\u96be\u5ea6\u8f83\u5c0f\u7684\u65b9\u6cd5\u3002\n\n\u5148\u628a\u5e8f\u5217\u8f6c\u6362\uff0c\u5bf9\u4e8e\u4e09\u4e2a\u5b57\u6bcd\uff0c\u5206\u522b\u7528\u4e09\u4e2a\u6709\u8bc6\u522b\u5ea6\u7684\u5927\u6570\u5b57\u4ee3\u66ff\u3002\n\n\u5982\u679c\u6015\u88ab\u5361\u53ef\u4ee5\u7528\u968f\u673a\u6570\u3002\n\n\u7136\u540e\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u548c\uff0c\u533a\u95f4\u63a8\u5e73\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c $2$\uff0c\u4ee4 $ans=\\dfrac {\\sum_{i=l}^r a_i} {r-l+1}$\uff0c\u8bf4\u4eba\u8bdd\u5373\u533a\u95f4 $[l,r]$ \u7684\u5e73\u5747\u6570\uff08\u7ebf\u6bb5\u6811\u57fa\u672c\u64cd\u4f5c\uff09\u3002\u4e0d\u96be\u5f97\u77e5\u5982\u679c $ans$ \u662f\u4e09\u4e2a\u5b57\u6bcd\u5bf9\u5e94\u7684\u6570\u4e4b\u4e00\u90a3\u4e48\u5927\u6982\u7387\u6ee1\u8db3\u533a\u95f4\u5168\u7b49\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u6761\u4ef6\u76f4\u63a5\u5355\u70b9\u6c42\u503c\u5373\u53ef\u3002\n\n~~\u4e00\u5f00\u59cb\u61a8\u61a8\u5730\u7ef4\u62a4\u4e86\u5f02\u6216\u548c~~",
        "postTime": 1591180738,
        "uid": 203623,
        "name": "Ntokisq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4979 \u3010\u77ff\u6d1e\uff1a\u574d\u584c\u3011"
    },
    {
        "content": "\u4e3a\u4ec0\u4e48\u4e0d\u8bd5\u8bd5\u624b\u5199bitset\u5462QAQ\n\n\u5b58\u5728\u5b57\u7b26`x`\u5bf9\u5e94\u4e8c\u8fdb\u5236\u7b2c`x-'A'`\u4f4d\u4e3a1\n\n\u8fd9\u6837\u5c31\u662f\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6216\u4e86\n\n```cpp\n#include\"cstdio\"\n#include\"cstring\"\n#include\"iostream\"\n#include\"algorithm\"\nusing namespace std;\n\nconst int MAXN=1<<19;\nconst int siz=3;\n\nint n,m;\nchar ch[MAXN];\nint tag[MAXN<<1],tree[MAXN<<1];\n\nvoid build(int k,int l,int r)\n{\n\ttag[k]=-1;\n\tif(l==r){\n\t\ttree[k]=1<<(ch[l]-'A');\n\t\treturn;\n\t}int i=k<<1,mid=l+r>>1;\n\tbuild(i,l,mid);build(i|1,mid+1,r);\n\ttree[k]=tree[i]|tree[i|1];\n\treturn;\n}\n\nvoid po(int k,int l,int r)\n{\n\tif(l==r||tag[k]==-1) return;\n\tint i=k<<1;\n\ttree[i]=tree[i|1]=1<<tag[k];\n\ttag[i]=tag[i|1]=tag[k];\n\ttag[k]=-1;\n\treturn;\n}\n\nvoid cchg(int k,int l,int r,int le,int ri,int x)\n{\n\tpo(k,l,r);\n\tif(le<=l&&r<=ri){\n\t\ttree[k]=1<<x;\n\t\ttag[k]=x;\n\t\treturn;\n\t}int i=k<<1,mid=l+r>>1;\n\tif(le<=mid) cchg(i,l,mid,le,ri,x);\n\tif(mid<ri) cchg(i|1,mid+1,r,le,ri,x);\n\ttree[k]=tree[i]|tree[i|1];\n\treturn;\n}\n\nint cask(int k,int l,int r,int le,int ri)\n{\n\tpo(k,l,r);\n\tif(le<=l&&r<=ri) return tree[k];\n\tint ans=0;\n\tint i=k<<1,mid=l+r>>1;\n\tif(le<=mid) ans|=cask(i,l,mid,le,ri);\n\tif(mid<ri) ans|=cask(i|1,mid+1,r,le,ri);\n\treturn ans;\n}\n\nint count(int x)\n{\n\tint sum=0;\n\twhile(x) ++sum,x&=x-1;\n\treturn sum;\n}\n\nint main()\n{\n\tscanf(\"%d\",&n);\n\tscanf(\"%s\",ch+1);\n\tbuild(1,1,n);\n\tscanf(\"%d\",&m);\n\twhile(m--){\n\t\tchar p,c;int l,r;\n\t\tscanf(\"\\n%c%d%d\",&p,&l,&r);\n\t\tif(p=='A'){\n\t\t\tscanf(\"\\n%c\",&c);\n\t\t\tcchg(1,1,n,l,r,(int)c-'A');\n\t\t}else{\n\t\t\tif(l==1||r==n){\n\t\t\t\tint ct=cask(1,1,n,l,r);\n\t\t\t\tif(count(ct)==1) puts(\"Yes\");\n\t\t\t\telse puts(\"No\");\n\t\t\t}else{\n\t\t\t\tint ct=cask(1,1,n,l,r),tp1=cask(1,1,n,l-1,l-1),tp2=tp1|cask(1,1,n,r+1,r+1);\n\t\t\t\tif(count(ct)==1&&count(tp2)==2) puts(\"Yes\");\n\t\t\t\telse puts(\"No\");\n\t\t\t}\n\t\t}\n\t}return 0;\n}\n```",
        "postTime": 1543822156,
        "uid": 31293,
        "name": "Adove",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4979 \u3010\u77ff\u6d1e\uff1a\u574d\u584c\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u8fd9\u91cc\u63d0\u4f9b\u7684\u4ee3\u7801\u53ef\u80fd\u56e0\u4e3a\u8bc4\u6d4b\u673a\u6ce2\u52a8\u800c\u5bfc\u81f4\u65e0\u6cd5\u5728\u4e0d\u5f00 O2 \u4e0b\u901a\u8fc7\uff0c\u4f46\u662f\u5f00\u4e86 O2 \u540e\u4eb2\u6d4b\u4e0d\u4f1a\u51fa\u73b0\u95ee\u9898\u3002\n\n\u73b0\u5728\u6b65\u5165\u6b63\u9898\u3002\n\n\u5f88\u591a\u4eba\u7528\u4e86\u73c2\u6735\u8389\u6811\uff0c\u4f46\u662f\u8fd9\u9898\u6211\u7ed9\u5927\u5bb6\u5e26\u6765\u7ebf\u6bb5\u6811\u5957 `bitset` \u7684\u89e3\u6cd5\uff0c\u8fd9\u662f\u4ee5\u524d\u7684\u9898\u89e3\u6ca1\u6709\u7684\u3002\n\n\u4e8b\u5b9e\u4e0a\u5c31\u662f\u7ebf\u6bb5\u6811\u6bcf\u4e2a\u70b9\u5f00\u4e00\u4e2a `bitset` \u7ef4\u62a4\u8fd9\u4e2a\u533a\u95f4\u4e2d\u51fa\u73b0\u4e86\u54ea\u4e9b\u6570\uff0c\u90a3\u4e48\u663e\u7136\u5f53\u4e00\u4e2a\u533a\u95f4 $[l, r]$ \u6ee1\u8db3\u8981\u6c42\u5f53\u4e14\u4ec5\u5f53 $a_l, a_{l+1}, \\cdots, a_r$ \u7ef4\u62a4\u7684 `bitset` \u4e2d\u53ea\u6709\u4e00\u4e2a $1$\uff0c\u4e14 $a_{l-1}$ \u548c $a_{r+1}$ \u6570\u4e0d\u540c\u3002\n\n$a_l, a_{l+1}, \\cdots, a_r$ \u7ef4\u62a4\u7684 `bitset` \u5f88\u597d\u6c42\uff0c\u5176\u5b9e\u53ea\u9700\u628a\u6240\u6709\u533a\u95f4\u7684 `bitset` \u6309\u4f4d\u6216\u5373\u53ef\uff0c\u533a\u95f4\u8986\u76d6\u7684\u8bdd\u6bcf\u4e2a\u533a\u95f4\u6253\u4e00\u4e2a\u6807\u8bb0\u5373\u53ef\u3002\n\n\u4f46\u662f\u7531\u4e8e `bitset` \u5e38\u6570\u6709\u4e9b\u5927\uff0c\u9700\u8981\u52a0\u5404\u79cd\u5361\u5e38\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <bitset>\n#include <string>\nusing namespace std;\n\nconstexpr int N(5e5 + 5);\n\nint n, m;\nstring k;\n\ninline int read()\n{\n\tregister char ch(getchar());\n\tregister int x(0);\n\twhile (ch < '0' || ch > '9') ch = getchar();\n\twhile (ch >= '0' and ch <= '9')\n\t{\n\t\tx = (x << 1) + (x << 3) + (ch ^ 48);\n\t\tch = getchar();\n\t}\n\treturn x;\n}\n\nclass SegmentTree\n{\npublic:\n\tstruct Node\n\t{\n\t\tint l, r, tag;\n\t\tbitset<3> s;\n\t}tr[N << 2];\n\n#define push_up(u) \\\n\ttr[u].s = tr[u << 1].s | tr[u << 1 | 1].s; \\\n\n#define push_down(u) \\\n\tif (tr[u].tag != -1) \\\n\t{ \\\n\t\ttr[u << 1].tag = tr[u].tag; \\\n\t\ttr[u << 1].s.reset(); \\\n\t\ttr[u << 1].s[tr[u].tag] = 1; \\\n\t\ttr[u << 1 | 1].tag = tr[u].tag; \\\n\t\ttr[u << 1 | 1].s.reset(); \\\n\t\ttr[u << 1 | 1].s[tr[u].tag] = 1; \\\n\t\ttr[u].tag = -1; \\\n\t} \\\n\n\tvoid build(register int u, register int l, register int r)\n\t{\n\t\ttr[u] = { l, r, -1 };\n\t\t//tr[u].s.reset();\n\t\tif (l == r)\n\t\t{\n\t\t\ttr[u].s[k[r - 1] - 'A'] = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tregister int mid(l + r >> 1);\n\t\t\tbuild(u << 1, l, mid);\n\t\t\tbuild(u << 1 | 1, mid + 1, r);\n\t\t\tpush_up(u);\n\t\t}\n\t}\n\tvoid update(register int u, register int l, register int r, register int k)\n\t{\n\t\tif (tr[u].l >= l and tr[u].r <= r)\n\t\t{\n\t\t\ttr[u].tag = k;\n\t\t\ttr[u].s.reset();\n\t\t\ttr[u].s[k] = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpush_down(u);\n\t\t\tregister int mid(tr[u].l + tr[u].r >> 1);\n\t\t\tif (l <= mid) update(u << 1, l, r, k);\n\t\t\tif (r > mid) update(u << 1 | 1, l, r, k);\n\t\t\tpush_up(u);\n\t\t}\n\t}\n\tint query_node(register int u, register int x)\n\t{\n\t\tif (tr[u].l == x and tr[u].r == x)\n\t\t{\n\t\t\tif (tr[u].s[0]) return 0;\n\t\t\telse if (tr[u].s[1]) return 1;\n\t\t\treturn 2;\n\t\t}\n\t\tpush_down(u);\n\t\tregister int mid(tr[u].l + tr[u].r >> 1);\n\t\treturn (x <= mid ? query_node(u << 1, x) : query_node(u << 1 | 1, x));\n\t}\n\tbitset<3> query(register int u, register int l, register int r)\n\t{\n\t\tif (tr[u].l >= l and tr[u].r <= r) return tr[u].s;\n\t\tpush_down(u);\n\t\tbitset<3> res;\n\t\tres.reset();\n\t\tregister int mid(tr[u].l + tr[u].r >> 1);\n\t\tif (l <= mid) res = query(u << 1, l, r);\n\t\tif (r > mid) res |= query(u << 1 | 1, l, r);\n\t\treturn res;\n\t}\n};\n\nSegmentTree sg;\n\nint main()\n{\n\tn = read();\n\tcin >> k;\n\tsg.build(1, 1, n);\n\tm = read();\n\twhile (m--)\n\t{\n\t\tregister char c[2];\n\t\tscanf(\"%s\", &c[0]);\n\t\tif (*c == 'A')\n\t\t{\n\t\t\tregister int x(read()), y(read());\n\t\t\tregister char k[2];\n\t\t\tscanf(\"%s\", &k[0]);\n\t\t\tsg.update(1, x, y, *k - 'A');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tregister int x(read()), y(read());\n\t\t\tregister bitset<3> q(sg.query(1, x, y));\n\t\t\tif (q.count() > 1)\n\t\t\t{\n\t\t\t\tputs(\"No\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (x == 1 || y == n) puts(\"Yes\");\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (sg.query_node(1, x - 1) == sg.query_node(1, y + 1)) puts(\"No\");\n\t\t\t\t\telse puts(\"Yes\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n[AC \u8bb0\u5f55\t2.95s /  47.25MB /  2.81KB C++11](https://www.luogu.com.cn/record/71539199)\n\n[AC \u8bb0\u5f55  866ms /  47.27MB /  2.81KB C++11 O2](https://www.luogu.com.cn/record/71539536)\n\n\u4e0d\u5f00 O2\uff0c\u6700\u6162\u7684\u70b9 $997$ \u6beb\u79d2\u3002~~\u518d\u4e5f\u4e0d\u7528 `bitset` \u4e86\u3002~~",
        "postTime": 1647428456,
        "uid": 332914,
        "name": "happybob",
        "ccfLevel": 6,
        "title": "P4979 \u77ff\u6d1e\uff1a\u574d\u584c"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P4979)\n\n### \u9898\u76ee\u5927\u610f\n\n>\u7ed9\u5b9a\u4e00\u4e2a\u53ea\u6709\u4e09\u4e2a\u5b57\u7b26 \u306e \u5b57\u7b26\u4e32 $S$\uff0c\u4e24\u79cd\u64cd\u4f5c\uff1a\n\n>>\u533a\u95f4\u8986\u76d6\uff1b\n\n>>\u67e5\u8be2\u533a\u95f4 $[l, r]$ \u662f\u5426\u5408\u6cd5\uff0c\u5408\u6cd5\u7684\u6761\u4ef6\u4e3a\u8be5\u533a\u95f4\u53ea\u6709\u4e00\u79cd\u5b57\u7b26\u5e76\u4e14 $S_{l-1} \\ne S_{r+1}$\u3002\n\n\u56e0\u4e3a\u53ea\u6709\u4e09\u79cd\u5b57\u7b26\uff0c\u5224\u65ad\u6761\u4ef6\u4ec5\u4e3a\u533a\u95f4\u4e00\u81f4\u4ee5\u53ca\u5355\u70b9\u6bd4\u8f83\u3002\u6211\u4eec\u8003\u8651\u7528\u4e8c\u8fdb\u5236 $1,2,4$ \u5206\u522b\u8868\u793a\u8fd9\u4e09\u79cd\u5b57\u7b26\uff0c\u90a3\u4e48\u533a\u95f4\u4e00\u81f4\u7684\u5224\u65ad\u5c31\u53d8\u6210\u4e86\uff1a\n\n>\u533a\u95f4 $[l,r]$ \u7684\u5168\u4f53 [\u6216](https://baike.baidu.com/item/%E6%8C%89%E4%BD%8D%E6%88%96/548283?fr=aladdin) \u503c\u4e3a $1,2,4$ \u4e00\u79cd\uff0c\u90a3\u4e48\u6574\u4e2a\u533a\u95f4\u7684\u5b57\u7b26\u662f\u4e00\u81f4\u7684\u3002\n\n\u7136\u540e\u76f4\u63a5\u4e0a\u7ebf\u6bb5\u6811\u5c31 ok \u4e86\u3002\n\n### Code\uff1a\n\n```cpp\n#include <stdio.h>\n#include <algorithm>\n#include <string.h>\n#define N 500005\nusing namespace std;\ntypedef long long ll;\nconst int INF=0x3f3f3f3f;\ninline int read(){\n\tchar ch=getchar();int x=0, f=1;\n\twhile(ch<'0'||ch>'9'){if(ch=='-') f=-1; ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nint n, m;\nchar s[N];\nstruct Segment_Tree{\n\t#define ls k<<1\n\t#define rs k<<1|1\n\t#define mid (l+r>>1)\n\tshort tag[N*4], col[N*4];\n\tvoid pushdown(int k){\n\t\tif(!tag[k]) return ;\n\t\ttag[ls]=col[ls]=tag[rs]=col[rs]=tag[k];\n\t\ttag[k]=0;return ;\n\t}\n\tvoid pushup(int k){col[k]=col[ls]|col[rs];return ;}\n\tvoid add(int k, int l, int r, int x, int y, short c){\n\t\tif(x<=l&&r<=y){col[k]=tag[k]=c;return ;}pushdown(k);\n\t\tif(x<=mid) add(ls, l, mid, x, y, c);\n\t\tif(mid<y) add(rs, mid+1, r, x, y, c);\n\t\tpushup(k);\n\t}\n\tshort query(int k, int l, int r, int x, int y){\n\t\tif(x<1) return 0;if(y>n) return 8;\n\t\tif(x<=l&&r<=y) return col[k];short ret=0;pushdown(k);\n\t\tif(x<=mid) ret|=query(ls, l, mid, x, y);\n\t\tif(mid<y) ret|=query(rs, mid+1, r, x, y);\n\t\treturn ret;\n\t}\n\t#undef ls\n\t#undef rs\n\t#undef mid\n}Chtholly;\nbool u[80];\nsigned main(){\n\tu[1]=u[2]=u[4]=1;\n\tn=read();scanf(\"%s\", s+1);\n\tfor(int i=1, x; i<=n; i++)\n\t\tx=s[i]-'A', Chtholly.add(1, 1, n, i, i, (short)(1<<x));\n\tm=read();\n\tfor(int i=1; i<=m; i++){\n\t\tscanf(\"%s\", s+1);int x=read(), y=read();char op;\n\t\tif(s[1]=='A') \n\t\t\top=1<<(getchar()-'A'), Chtholly.add(1, 1, n, x, y, op);\n\t\telse \n\t\t\tprintf(\"%s\\n\", (u[Chtholly.query(1, 1, n, x, y)]&&(Chtholly.query(1, 1, n, x-1, x-1)!=Chtholly.query(1, 1, n, y+1, y+1)))?\"Yes\":\"No\");\n\t}\n\treturn 0;\n}\n\n```\n\n\u4e3a\u5565\u7a9d\u7684\u7ebf\u6bb5\u6811\u8fa3\u4e48\u6162 QaQ \u3002",
        "postTime": 1625279936,
        "uid": 341102,
        "name": "ReKoJ",
        "ccfLevel": 0,
        "title": "P4979 \u77ff\u6d1e\uff1a\u574d\u584c"
    },
    {
        "content": "## \u7b80\u8ff0\u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u4e32\u5e8f\u5217 $N$\uff0c$N$ \u7531 $A$ $B$ $C$ \u4e09\u4e2a\u5b57\u6bcd\u7ec4\u6210\u3002\u73b0\u5728\u6709\u4e24\u4e2a\u64cd\u4f5c\uff1a\n\n- $A$\uff1a\u533a\u95f4\u63a8\u5e73\u4e3a $A$ $B$ \u6216 $C$\n\n- $B$\uff1a\u67e5\u8be2\u533a\u95f4 $l$ $r$ \u662f\u5426\u5408\u6cd5\u3002 \u5408\u6cd5\u7684\u5b9a\u4e49\uff1a $N_l=N_{l+1}=N_{l+2}=\\dots =N_r$ \u4e14 $N_{l-1} \\neq N_{r+1}$ \u3002\n\n## \u601d\u8def\uff1a\n\n\u7528 $1$ $2$ $3$ \u5206\u522b\u4ee3\u66ff $A$ $B$ $C$\uff0c\u4e4b\u540e\u5c31\u662f\u7eaf\u7cb9\u7684\u7ebf\u6bb5\u6811\u6a21\u677f\u9898\u4e86\uff08\u57fa\u672c\u4e0a\uff1f\uff09\u3002\n\n\u6240\u4ee5\uff0c\u5bf9\u4e8e\u4e00\u5f00\u59cb\u7684\u5e8f\u5217\u8f93\u5165\uff0c\u5efa\u6811\u65f6\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c\uff1a\n```cpp\ntree[i].val=ch[l]-'A'+1;\n```\n\n\u540c\u65f6\u4e5f\u80fd\u5199\u51fa\u8bfb\u5165\u51fd\u6570\uff1a\n```cpp\ninline int read(){\n  char c=getchar();\n  while(!(c>='0'&&c<='9')){\n    if(c=='A'){\n      return 1;\n    }\n    else if(c=='B'){\n      return 2;\n    }\n    else if(c=='C'){\n      return 3;\n    }\n    c=getchar();\n  }\n}\n```\n\u90a3\u4e48\u7ebf\u6bb5\u6811\u7ef4\u62a4\u54ea\u4e24\u4e2a\u4fe1\u606f\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u80af\u5b9a\u8981\u7ef4\u62a4\u4e00\u4e2a\u61d2\u6807\u8bb0\uff08$lazy$\uff09\u548c\u6bcf\u4e2a\u8282\u70b9\u7684\u4fe1\u606f\uff08$val$\uff09\uff0c\u90a3\u4e48\u9664\u6b64\u4e4b\u5916\u8fd8\u9700\u54ea\u4e9b\u4fe1\u606f\uff1f\n\n\u6211\u4eec\u5148\u8003\u8651\u67e5\u8be2\uff0c\u67e5\u8be2\u4e24\u7aef\u524d\u540e\u65f6\uff0c\u80fd\u7528\u5355\u70b9\u67e5\u8be2\uff0c\u4f46\u662f\u4e2d\u95f4\u662f\u5426\u4e00\u81f4\u8fd8\u9700\u60f3\u4e00\u4e0b\u3002\u5176\u5b9e\uff0c\u53ef\u4ee5\u4f7f\u7528\u5b83\u7684 $val$ \u8868\u793a\u5b83\u7684\u989c\u8272\u3002\u5982\u679c\u5de6\u53f3\u513f\u5b50\u7684\u989c\u8272\u76f8\u540c\uff0c\u7528 $val$ \u50a8\u5b58\u5de6\u53f3\u513f\u5b50\u7684\u989c\u8272\uff0c\u5426\u5219\u5b58 `-1`\u3002\n\n```cpp\nvoid update(int i){\n  tree[i].val=(tree[lc].val==tree[rc].val)?tree[lc].val:-1;\n}\n```\n\u67e5\u8be2\u5c31\u662f\u5229\u7528\u4e86 $val$ \u7684\u6027\u8d28\uff0c\u5177\u4f53\u770b\u4ee3\u7801\u5b9e\u73b0\uff1a\n\n```cpp\nint query(int i,int L,int R,int p){\n  //\u5355\u70b9\u67e5\u8be2\n  if(L==R){\n    return tree[i].val;\n  }\n  push_down(i);\n  int mid=L+R>>1;\n  if(p<=mid){\n    return query(i*2,L,mid,p);\n  }\n  if(p>mid){\n    return query(i*2+1,mid+1,R,p);\n  }\n}\nint check(int i,int L,int R,int l,int r){\n  //\u533a\u95f4\u67e5\u8be2\n  int ans,pl=MAXN,pr=MAXN;\n  if(l<=L&&r>=R){\n    return tree[i].val;\n  }\n  push_down(i);\n  int mid=L+R>>1;\n  if(l<=mid){\n    pl=check(lc,L,mid,l,r);\n  }\n  if(r>mid){\n    pr=check(rc,mid+1,R,l,r);\n  }\n  if(pl==MAXN||pr==MAXN){\n    return (pl==MAXN)?pr:pl;\n  }\n  if(pl!=MAXN&&pr!=MAXN){\n    return (pl==pr)?pl:-1;\n  }\n}\n```\n\n\u6240\u4ee5\uff0c\u533a\u95f4\u63a8\u5e73\u5c31\u662f\u66f4\u6539\u4e86\u5b83\u7684\u4fe1\u606f\u548c\u61d2\u6807\u7b7e\u3002\n\n```cpp\n//\u63a8\u5e73\nvoid change(int i,int L,int R,int l,int r,int p){\n  if(l<=L&&r>=R){\n    tree[i].val=tree[i].lazy=p;\n    return;\n  }\n  int mid=L+R>>1;\n  push_down(i);\n  if(l<=mid){\n    change(lc,L,mid,l,r,p);\n  }\n  if(r>mid){\n    change(rc,mid+1,R,l,r,p);\n  }\n  update(i);\n}\n```\n\n\u90a3\u4e0b\u4f20\u6807\u7b7e\u5c31\u5f88\u597d\u7406\u89e3\u4e86\uff0c\u5de6\u53f3\u513f\u5b50\u7684\u4ef7\u503c\u548c\u61d2\u6807\u7b7e\u90fd\u662f\u7236\u8282\u70b9\u7684\u61d2\u6807\u7b7e\uff0c\u800c\u7236\u8282\u70b9\u7684\u61d2\u6807\u7b7e\u8bb0\u5f97\u6e05\u96f6\u3002\n\n```cpp\nvoid push_down(int i){\n  if(tree[i].lazy){\n    tree[lc].val=tree[rc].val=tree[lc].lazy=tree[rc].lazy=tree[i].lazy;\n    tree[i].lazy=0;\n  }\n}\n```\n\u6240\u4ee5\u4e3b\u51fd\u6570\u5e94\u8be5\u5f88\u597d\u7406\u89e3\uff0c\u4e5f\u80fd\u770b\u5230 `read()` \u51fd\u6570\u7684\u4f7f\u7528\uff1a\n\n```cpp\nint n,k;\nsigned main(){\n  scanf(\"%d\",&n);\n  scanf(\"%s\",ch+1);\n  build(1,1,n);\n  scanf(\"%d\",&k);\n  forr(i,1,k){\n    cout<<i<<'\\n';\n    int opt,l,r,x;\n    opt=read();\n    scanf(\"%d%d\",&l,&r);\n    switch(opt){\n      case 1:{\n        x=read();\n        change(1,1,n,l,r,x);\n        break;\n      }\n      case 2:{\n        int ql=-2,qr=-2;\n        ql=(l==1)?0:query(1,1,n,l-1);\n        qr=(r==n)?0:query(1,1,n,r+1);\n        int tot=check(1,1,n,l,r);\n        if((ql==qr&&ql&&qr)){\n          puts(\"No\");\n        }\n        else{\n          int ans=check(1,1,n,l,r);\n          if(ans<0){\n            puts(\"No\");\n          }\n          else puts(\"Yes\");\n        }\n        break;\n      }\n    }\n  }\n}\n```\n\n\u5b8c\u6574\u6e90\u4ee3\u7801\u7684\u94fe\u63a5 : [link](https://www.luogu.com.cn/blog/352464/xuan-zhuan-shou-xing-su-jin-2-ge) ~~\u540c\u65f6\u5ba3\u4f20\u9996\u884c\u7f29\u8fdb\u4e24\u683c~~\u3002",
        "postTime": 1623588226,
        "uid": 352464,
        "name": "JJA_",
        "ccfLevel": 0,
        "title": "[\u9898\u89e3]P4979 \u77ff\u6d1e:\u574d\u584c"
    },
    {
        "content": "## [P4979 \u77ff\u6d1e\uff1a\u574d\u584c](https://www.luogu.com.cn/problem/P4979)\n\n## \u9898\u76ee\u5927\u610f\uff1a\n\u4e00\u4e2a\u533a\u95f4\u6709\u82e5\u5e72\u989c\u8272\uff0c\u6709\u4e24\u4e2a\u64cd\u4f5c\uff1a\n\nA. \u5c06\u8be5\u533a\u95f4\u4ece `x` \u5230 `y` \u53d8\u6210 `k` \u8272\u3002\n\nB. \u8be2\u95ee\u533a\u95f4 `x` \u5230 `y` \u662f\u5426\u5408\u6cd5\u3002\n\n- \u5408\u6cd5\u5b9a\u4e49\u4e3a\u8be5\u533a\u95f4\u989c\u8272\u5747\u76f8\u540c\u4e14 `x-1` \u7684\u989c\u8272\u4e0e `y+1` \u7684\u989c\u8272\u4e0d\u76f8\u540c\u3002\u82e5 `x=1` \u6216 `y=N` \u65f6\u4e0d\u7528\u5224\u65ad\u540e\u8005\u3002\n\n## solution:\n\u533a\u95f4\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\uff0c\u6211\u4eec\u8003\u8651\u4f7f\u7528\u7ebf\u6bb5\u6811\u3002\n\n\u7ebf\u6bb5\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\u4fdd\u5b58\u5982\u4e0b\u4fe1\u606f\uff1a\n```cpp\nstruct shu{\n\tint l,  //\u533a\u95f4\u5de6\u7aef\u70b9\n\tr,    //\u533a\u95f4\u53f3\u7aef\u70b9\n\tse,    /\u533a\u95f4\u989c\u8272\uff0c\u82e5\u4e0d\u76f8\u540c\u4e3a-1\n\ttag;  //\u61d2\u6807\u8bb0\uff0c\u4ee3\u8868\u8981\u53d8\u6210\u7684\u989c\u8272\uff0c\u521d\u59cb\u4e3a-1\n}tr[N<<2];\n```\n\u989c\u8272\uff1a\u8fd9\u91cc\u6211\u5c06 `A` `B` `C` \u5206\u522b\u6620\u5c04\u6210\u4e09\u4e2a\u6570\u5b57 `1` `2` `3` \n\n\u533a\u95f4\u4fee\u6539\uff1a\u82e5 `x` `y` \u5305\u542b\u8bbf\u95ee\u5230\u7684\u533a\u95f4\uff0c\u5219\u5c06\u6b64\u533a\u95f4\u53d8\u6210\u8be5\u989c\u8272\uff0c\u5e76\u628a\u61d2\u6807\u8bb0\u8d4b\u503c\u3002\n\n\u533a\u95f4\u67e5\u8be2\uff1a\u82e5 `x` `y` \u5305\u542b\u8bbf\u95ee\u5230\u7684\u533a\u95f4\uff0c\u5219\u8fd4\u56de\u8be5\u989c\u8272\uff0c\u5426\u5219\u9012\u5f52\u8fdb\u5de6\u53f3\u5b50\u6811\uff0c\u5408\u5e76\u4fe1\u606f\uff1a\n\n1. \u82e5 \u8be2\u95ee\u533a\u95f4\u4e0d\u5305\u542b\u5de6\u533a\u95f4\uff0c\u8fd4\u56de\u53f3\u533a\u95f4\u7684\u989c\u8272\u3002\u540c\u7406\u4e0d\u5305\u542b\u53f3\u5219\u8fd4\u56de\u5de6\u3002\n2. \u5982\u679c\u5de6\u53f3\u533a\u95f4\u6709\u4e00\u4e2a\u662f\u6df7\u8272\u6216\u8005\u5de6\u53f3\u533a\u95f4\u989c\u8272\u4e0d\u540c\u8fd4\u56de `-1` \u3002\n3. \u5982\u679c\u5de6\u53f3\u533a\u95f4\u989c\u8272\u76f8\u540c\uff0c\u8fd4\u56de\u8be5\u989c\u8272\u3002\n\n\u522b\u5fd8\u4e86\u4ee5\u4e0a\u64cd\u4f5c\u90fd\u8981 `pushdown` \u5c06\u4fe1\u606f\u4f20\u4e0b\u53bb\u3002\n## \u63a5\u4e0b\u6765\u662f\u7ec6\u8282\u7684\u5904\u7406\uff1a\n\u5224\u65ad\u8981\u683c\u5916\u5c0f\u5fc3\u3002 $\\text{Yes}$ \u8981\u6ee1\u8db3\u4e24\u4e2a\u6761\u4ef6\uff1a\n1. \u533a\u95f4\u989c\u8272\u76f8\u540c\u3002\n2. `x==1` \u3001 `y==n` \u3001 `x-1` \u7684\u989c\u8272\u4e0e `y+1` \u989c\u8272\u4e0d\u540c\uff0c\u4e09\u8005\u6ee1\u8db3\u5176\u4e00\u3002\n\n\u5426\u5219\u662f $\\text{No}$ \u3002\n\nPS\uff1a\u6ce8\u610f **Yes**\u3001**No**\u7684\u5927\u5c0f\u5199\u3002\n\n\u770b\u5230\u8fd9\u7684\u540c\u5b66\uff0c\u53ef\u4ee5\u81ea\u5df1\u53bb\u5199\u4ee3\u7801\u4e86(~~tf\u53e3\u543b~~)\n\n[code](https://www.luogu.com.cn/paste/1ut3788r)\n### End\n## \u4f5c\u8005\u7684\u788e\u788e\u5ff5\uff1a\n\n\u6709\u7528\u7559\u8d5e(~~\u8a00\u7b80\u610f\u8d45~~)",
        "postTime": 1612322557,
        "uid": 297501,
        "name": "Th1nkS2",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P4979 \u3010\u77ff\u6d1e\uff1a\u574d\u584c\u3011"
    },
    {
        "content": "# \u5514\u59c6\n\n\u8fd9\u53ef\u771f\u662f\u9053\u6bd2\u7624\u9898\uff0c1k\u7684\u63d0\u4ea4\u5c45\u7136\u53ea\u670935\u4ebaac\uff01\u60ca\u609a\u3002\u3002\u3002\uff08\u6211\u624d\u4e0d\u4f1a\u544a\u8bc9\u4f60\u4eec\u8fd9\u9898\u6709\u5751\uff0c\u56e0\u4e3a\u6211\u81ea\u5df1\u5c31\u63d0\u4ea4\u4e86n\u591a\u904d\uff09\n\n------------\n- \u9996\u5148\uff0c\u8fd9\u9898\u660e\u663e\u662f\u9053\u7ebf\u6bb5\u6811\u3002\uff08\u5f53\u7136\u5404\u4f4d\u5927\u4f6c\u7684\u795e\u4ed9\u7b97\u6cd5\u81ea\u7136\u662f\u53ef\u4ee5\u7684\uff09\n- \u7136\u540e\u5728ans\uff08\u660e\u663e\u662f\u76f4\u63a5\u6539\u6a21\u677f\u7684\uff09\u91cc\u9762\uff0c\u5982\u679c\u90fd\u662f\u4e00\u79cd\u77ff\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u628a\u77ff\u7684\u79cd\u7c7b\u5b58\u4e0b\u6765\u3002\u5982\u679c\u4e0d\u4e00\u6837\u7684\u8bdd\u5c31\u5b58-1\u3002\n- \u8d4b\u503c\u7684\u65f6\u5019\u5c31\u76f4\u63a5\u6539\u5c31\u597d\u4e86\u3002QAQ\n- \u4e3b\u8981\u662fdown\u7684\u65f6\u5019\uff0c\u5982\u679c\u8fd9\u91cc\u7684tag\u662f-1\u7684\u8bdd\uff0c\u5c31\u4e0d\u8981\u518d\u5f80\u4e0b\u4f20\u4e86\uff0c\u4e0d\u7136\u6700\u540e\u4f1a\u5168\u53d8\u6210-1\u7684QAQ\n- \u67e5\u8be2\u7684\u8bdd\u5148\u5224\u65ad\u533a\u95f4\u91cc\u7684\u662f\u4e0d\u662f\u90fd\u76f8\u540c\uff0c\u7136\u540e\u518d\u770b\u524d\u540e\u662f\u5426\u76f8\u540c\u3002\u5f53x=1\u6216\u8005y=N\u65f6\u5c31\u53ef\u4ee5\u4e0d\u7528\u5224\u540e\u9762\u7684\u4e86\uff0c\u4f46\u533a\u95f4\u91cc\u8fd8\u662f\u8981\u5224\u7684\uff01\uff01\uff01~~\u6211\u8fd8\u662f\u8bf4\u51fa\u6765\u4e86\u554a\uff0c\u611f\u89c9\u81ea\u5df1\u88ab\u5751\u7684\u597d\u4e8f~~\n\n\u849f\u84bb\u4ee3\u7801\u5de8\u4e11\uff0c\u8bf7\u5927\u4f6c\u4eec\u89c1\u8c05\n```cpp\n// luogu-judger-enable-o2\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#define maxn 500010\nusing namespace std;\nint ans[4*maxn],tag[4*maxn],x[maxn];\nint n,k;\nint ls(int p){\n    return p*2;\n}\nint rs(int p){\n    return p*2+1;\n}\nvoid up(int p){\n     if ((ans[ls(p)]==ans[rs(p)])&&(ans[ls(p)]!=-1)) ans[p]=ans[ls(p)];else ans[p]=-1;\n}\nvoid down(int p){\n     tag[ls(p)]=tag[p];\n     tag[rs(p)]=tag[p];\n     ans[ls(p)]=tag[p];\n     ans[rs(p)]=tag[p];\n     tag[p]=-1;\n}\nvoid build(int p,int l,int r){\n     ans[p]=-1;tag[p]=-1;\n     if (l==r) {ans[p]=x[l];return;};\n     int mid=(l+r)/2;\n     build(p*2,l,mid);\n     build(p*2+1,mid+1,r);\n     up(p);\n}\nvoid fz(int p,int l,int r,int a,int b,char c){\n     if ((l>=a)&&(r<=b)){ans[p]=c;\n                         tag[p]=c;\n                         return;\n                         }\n     if (tag[p]!=-1)down(p);\n     int mid=(l+r)/2;\n     if (a<=mid) fz(ls(p),l,mid,a,b,c);\n     if (b>mid) fz(rs(p),mid+1,r,a,b,c);\n     up(p);\n}\nint search(int p,int l,int r,int a,int b){\n      if ((l>=a)&&(r<=b))return ans[p];\n      if (tag[p]!=-1) down(p);\n      int mid=(l+r)/2;\n      int x=-2,y=-2;\n      if (a<=mid) x=search(ls(p),l,mid,a,b);\n      if (b>mid) y=search(rs(p),mid+1,r,a,b);\n      if ((x==-2)||(y==-2)) return max(x,y);\n      else if((x==y)&&(x!=-1)) return x;\n      else return -1;\n}\nint main(){\n    //freopen(\"\u6d4b\u8bd5.in\",\"r\",stdin);\n    //freopen(\"\u6d4b\u8bd5my.out\",\"w\",stdout);\n    cin>>n;\n    getchar();getchar();\n    for(int i=1;i<=n;i++){\n            x[i]=getchar()-'A';\n    }\n    build(1,1,n);\n    cin>>k;\n    int a,b;\n    char c;\n    for(int i=1;i<=k;i++){\n            char ch;\n            cin>>ch;\n            if (ch=='A') {scanf(\"%d%d\",&a,&b);\n                          cin>>c;\n                          c-='A';\n                          fz(1,1,n,a,b,c);\n                          }\n            else {scanf(\"%d%d\",&a,&b);\n                  if((search(1,1,n,a,b)!=-1)&&(a==1||b==n||search(1,1,n,a-1,a-1)!=search(1,1,n,b+1,b+1))) printf(\"Yes\\n\");else printf(\"No\\n\");\n            }\n    }\n    return 0;\n}\n\n```\nps\uff1a\u8bb0\u5f97\u5438\u6c27\uff0c\u4e0d\u7136\u5361\u5e38\u3002\n\npps\uff1a\u8fd8\u6709\u4e00\u4e2a\u5751\uff0c\u6ce5\u840c\u4f1a\u5728\u6211\u4ee3\u7801\u91cc\u770b\u5230\u7684QAQ~~\u53cd\u6b63\u6211\u4ee3\u7801\u5199\u7684\u4e11\uff0c\u6ca1\u4eba\u770b\u5f97\u61c2~~",
        "postTime": 1542813967,
        "uid": 118273,
        "name": "\u543e\u738b\u7f8e\u5982\u753b",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4979 \u3010\u77ff\u6d1e\uff1a\u574d\u584c\u3011"
    },
    {
        "content": "\uff08\u5c0f\u58f0bb\uff09\u8fd9\u9898\u662f\u771f\u7684\u5751\uff0c\u5149\u505a\u8fd9\u9053\u9898\u5c31\u63d0\u4ea4\u4e8630+\u6b21\u2026\u2026  \n\u5728\u505a\u8fd9\u9898\u4e4b\u524d\u5148\u4ed4\u7ec6\u9605\u8bfb\u9898\u9762\u5e76\u7406\u89e3\u9898\u610f\uff08\u9898\u76ee\u770b\u4f3c\u7b80\u5355\u5374\u6697\u85cf\u9677\u9631\uff09\n\n\n------------\n## \u6b65\u5165\u6b63\u9898\n- \u770b\u5230\u662f\u533a\u95f4\u67e5\u8be2\u548c\u533a\u95f4\u4fee\u6539\u4e14\u603b\u957f\u5ea6\u4e0d\u53d8\uff0c\u663e\u7136\u8fd9\u9898\u6700\u597d\u7684\u89e3\u9898\u65b9\u6cd5\u662f\u7ebf\u6bb5\u6811\u4e86\n- \u7ebf\u6bb5\u6811\u4e0d\u4ec5\u53ef\u4ee5\u533a\u95f4\u52a0\uff0c\u533a\u95f4\u4e58\uff0c\u533a\u95f4\u6c42\u548c\uff0cRMQ\u7b49\uff0c\u8fd8\u53ef\u4ee5\u533a\u95f4\u4fee\u6539\u4e3a\u540c\u4e00\u503c\u548c\u67e5\u8be2\u533a\u95f4\u662f\u5426\u4e3a\u540c\u4e00\u503c\n- \u6211\u4eec\u53ea\u7528\u5bf9\u6807\u51c6\u7ebf\u6bb5\u6811\u8fdb\u884c\u5f88\u5c0f\u7684\u4fee\u6539\n - \u6bcf\u4e2a\u8282\u70b9\u7684data\u4fdd\u7559\u8be5\u8282\u70b9\u8bb0\u5f55\u7684\u533a\u95f4\u60c5\u51b5\uff0c\u5982\u679c\u662f\u7eaf\u8272\u5219\u4fdd\u7559\u989c\u8272\uff0c\u5982\u679c\u662f\u6742\u8272\u5219\u8bb0\u5f55\u4e0b\u8fd9\u4e2a\u533a\u95f4\u662f\u6742\u8272\uff08\u75280\u6216-1\u8868\u793a\uff09\n - \u90a3\u4e48\u6bcf\u4e2a\u53f6\u8282\u70b9\u7684\u503c\u4e3a\u8be5\u7aef\u70b9\u7684\u503c\uff0c\u5176\u4f59\u8282\u70b9\u7684\u503c\u770b\u5176\u5b50\u8282\u70b9\u7684\u503c\uff08\u76f8\u540c\u5219\u4f20\u9012\u5b50\u8282\u70b9\u7684\u503c\uff0c\u4e0d\u540c\u5219\u6807\u8bb0\u4e3a\u6742\u8272\uff0c\u5b50\u8282\u70b9\u4e2d\u53ea\u8981\u6709\u6742\u8272\u76f4\u63a5\u6807\u8bb0\u6742\u8272\uff09\n - \u67e5\u8be2\u7684\u65f6\u5019\u5c31\u8ddf\u6807\u51c6\u7ebf\u6bb5\u6811\u4e00\u6837\uff0c\u5c31\u662f\u5728\u9012\u5f52\u7684\u65f6\u5019\u5224\u65ad\u4e00\u4e0b\u662f\u5426\u6709\u6742\u8272\n - \u4fee\u6539\u5219\u6bd4\u6807\u51c6\u7ebf\u6bb5\u6811\u66f4\u7b80\u5355\uff0c\u56e0\u4e3a\u662f\u533a\u95f4\u5168\u90e8\u4fee\u6539\uff0c\u6240\u4ee5\u53ea\u8981\u8fd9\u4e2a\u533a\u95f4\u5b8c\u5168\u5305\u62ec\u5728\u76ee\u6807\u4fee\u6539\u533a\u95f4\u5185\uff0c\u5219\u76f4\u63a5\u4fee\u6539data\u548ctag\uff0c\u4e0b\u4f20tag\u7684\u65f6\u5019\u4e5f\u53ea\u7528\u76f4\u63a5\u4fee\u6539\u8282\u70b9\u7684data\u548ctag\n - \u6240\u4ee5\u6bcf\u6b21\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u67e5\u8be2\u4e0b\u533a\u95f4\u662f\u5426\u4e3a\u7eaf\u8272\u548c\u524d\u540e\u70b9\u662f\u5426\u76f8\u540c\uff0c\u4fee\u6539\u7684\u65f6\u5019\u4e4b\u95f4change\u5c31\u884c\u4e86\n \n \n----------\n## \u4ee3\u7801\u90e8\u5206\n```\n\u56e0\u4e3a\u8fd8\u6709\u5b57\u7b26\u5904\u7406\u548c\u5404\u79cd\u5e38\u6570\u4f18\u5316\uff08\u521d\u6b65\u5361\u5e38\u540e\u65f6\u95f4\u6392\u884crank5\uff09\uff0c\u4ee3\u7801\u7565\u663e\u5197\u957f\n```\n```\n#include<bits/stdc++.h>\nusing namespace std;\nstruct tree{\n\tint data,tag;\n\tint l,r;\n}a[500000*4];\nint k[500005],n;\nchar f[500005];\nvoid build(int p,int l,int r){\n\ta[p].l=l;a[p].r=r;a[p].tag=-1;\n\tif(l==r)\n\t  a[p].data=k[l];\n\telse {\n\t\tint mid=(l+r)>>1;\n\t\tbuild(p*2,l,mid);\n\t\tbuild(p*2+1,mid+1,r);\n\t\tif(a[p*2].data==a[p*2+1].data&&a[p*2].data!=0)\n\t\t  a[p].data=a[p*2].data;\n\t\telse a[p].data=0;\n\t}\n}\nvoid down(int p){\n\tif(a[p].l==a[p].r)return;\n\ta[p*2].data=a[p*2+1].data=a[p].tag;\n\ta[p*2].tag=a[p*2+1].tag=a[p].tag;\n\ta[p].tag=-1;\n}\nint ask(int p,int l,int r){\n\tif(a[p].l>=l&&a[p].r<=r)\n\t  return a[p].data;\n\tif(a[p].tag!=-1)down(p);\n\tint mid=(a[p].l+a[p].r)>>1;\n\tint left=-1,right=-1;\n\tif(mid>=l)left=ask(p*2,l,r);\n\tif(mid<r)right=ask(p*2+1,l,r);\n\tif(left==-1)return right;\n\tif(right==-1)return left;\n\tif(left==right)return left;\n\treturn 0; \n}\nvoid change(int p,int l,int r,int dat){\n\tif(a[p].l>=l&&a[p].r<=r){\n\t\ta[p].data=a[p].tag=dat;\n\t\treturn;\n\t}\n\tif(a[p].tag!=-1)\n\t  down(p);\n\tint mid=(a[p].l+a[p].r)>>1;\n\tif(mid>=l)change(p*2,l,r,dat);\n\tif(mid<r)change(p*2+1,l,r,dat);\n\tif(a[p*2].data==a[p*2+1].data&&a[p*2].data!=0)\n\t\t  a[p].data=a[p*2].data;\n\telse a[p].data=0;\n}\ninline int read(){\n\tint X=1,sum=0;char ch=getchar();\n\twhile(ch<'0'||ch>'9')X=(ch=='-'?-1:1),ch=getchar();\n\twhile(ch>='0'&&ch<='9')sum=sum*10+(int)ch-'0',ch=getchar();\n\treturn X*sum;\n}\nint main(){\n\tn=read();\n\tscanf(\"%s\",f);\n\tfor(int i=0;i<n;i++)\n\t  k[i+1]=(int)f[i]-'A'+1;\n\tbuild(1,1,n);\n\tchar t[5],v[5];\n\tint k,x,y,z;k=read();\n\tfor(int i=1;i<=k;i++){\n\t\tscanf(\"%s\",t);\n\t\tif(t[0]=='A')\n\t\t  {\n\t\t  \tx=read();y=read();\n\t\t  \tscanf(\"%s\",v);\n\t\t  \tz=v[0]-'A'+1;\n\t\t  \tchange(1,x,y,z);\n\t\t  }\n\t\telse{\n\t\t\tx=read();y=read();\n\t\t\tif(x==1&&y==n){\n\t\t\t\tputs(\"Yes\");\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(ask(1,x,y)){\n\t\t\t  if(x!=1&&y!=n&&ask(1,x-1,x-1)==ask(1,y+1,y+1)){\n\t\t\t  \tputs(\"No\");continue;\n\t\t\t  }\n\t\t\t  \tputs(\"Yes\");\n\t\t\t  \tcontinue;\n\t\t\t}\n\t\t\tputs(\"No\");\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1542603642,
        "uid": 119261,
        "name": "7KByte",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4979 \u3010\u77ff\u6d1e\uff1a\u574d\u584c\u3011"
    }
]