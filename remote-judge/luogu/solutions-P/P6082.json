[
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\u6709 $ n $ \u4e2a\u70b9\u6240\u7ec4\u6210\u7684\u6811\uff0c\u5176\u4e2d $1$ \u53f7\u70b9\u662f\u5176\u6839\uff0c\u6bcf\u4e2a\u70b9\u90fd\u6709\u4e00\u4e2a\u6743\u503c\uff08\u53ef\u4ee5\u4e3a\u8d1f\uff09\u548c\u89c4\u5b9a\u7684\u7ecf\u8fc7\u8be5\u70b9\u7684\u6b21\u6570\u8981\u6c42\uff0c\u6c42\u4ece $ 1 $ \u53f7\u70b9\u5f00\u59cb\u5411\u5176\u4ed6\u70b9\u8d70\uff0c\u56de\u5230 $ 1 $ \u70b9\u6240\u80fd\u83b7\u5f97\u7684\u6700\u5927\u4ef7\u503c\uff0c\u5e76\u6c42\u51fa\u53ef\u4ee5\u83b7\u5f97\u6536\u76ca\u6700\u5927\u503c\u7684\u65b9\u6848\u662f\u5426\u552f\u4e00\u3002\n\n\n## \u89e3\u51b3\u601d\u60f3\n\n\u6811\u5f62dp\u548c\u8d2a\u5fc3\n\n## \u9898\u76ee\u5206\u6790\n\n\u7531\u201c\u4efb\u610f\u4e24\u4e2a\u57ce\u9547\u4e4b\u95f4\u90fd\u53ea\u6709\u552f\u4e00\u7684\u53ef\u80fd\u7ecf\u8fc7\u5176\u5b83\u57ce\u9547\u7684\u8def\u7ebf\u201d\u53ef\u77e5\u8be5\u56fe\u662f\u4e2a\u6811\uff0c\u7531\u6b64\u6211\u4eec\u624d\u53ef\u4ee5\u8fdb\u884c\u63a5\u4e0b\u6765\u7684\u5206\u6790\u3002\n\n\u5bf9\u4e8e\u505c\u7559\u6b21\u6570\u8fd9\u4e00\u9650\u5236\uff0c\u5176\u5b9e\u662f\u9650\u5236\u8bbf\u95ee\u5b50\u6811\u7684\u6700\u5927\u4e2a\u6570\u3002\n\n\u5373\u82e5\u70b9 $i$ \u7684\u9650\u5236\u6b21\u6570\u8bb0\u4f5c $ c_i $ \u5219 $ i $ \u70b9\u6700\u591a\u53ef\u4ee5\u8bbf\u95ee $ c_i -1$ \u68f5\u5b50\u6811\u3002\n\n\u6ce8\u610f\uff0c\u56e0\u4e3a\u70b9 $ 1 $ \u6ca1\u6709\u9650\u5236\u6761\u4ef6\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u8d4b $ c_1 $  \u7684\u521d\u59cb\u503c\u8981\u628a\u5b83\u8bbe\u7f6e\u4e3a\u65e0\u7a77\u5927\u3002\n\n\u5173\u4e8e\u53d6\u5f97\u6700\u5927\u6536\u76ca\u7684\u65b9\u6848\u662f\u5426\u552f\u4e00\uff0c\u6709\u4ee5\u4e0b\u4e09\u79cd\u60c5\u51b5\u4f1a\u5bfc\u81f4\u6700\u5927\u503c\u60c5\u51b5\u4e0d\u552f\u4e00\uff1a\n\n1. \u67d0\u4e2a\u5b50\u6811\u7684\u503c\u4e3a $ 0 $ \uff0c\u663e\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u5c06\u5176\u7eb3\u5165\uff0c\u6216\u8005\u4e0d\u7eb3\u5165\uff0c\u5bf9\u6700\u5927\u503c\u65e0\u5f71\u54cd\u3002\n2. \u6700\u540e\u53ef\u4ee5\u4e00\u4e2a\u9009\u62e9\u7684\u5b50\u6811\u6743\u503c\u548c\u4e00\u4e2a\u672a\u9009\u62e9\u7684\u5b50\u6811\u6743\u503c\u4e00\u6837\u5927\u3002\n3. \u8fd9\u4e2a\u5b50\u6811\u7684\u5b50\u6811\u6709\u4ee5\u4e0a\u51e0\u79cd\u60c5\u51b5\u3002\n\n\u6211\u4eec\u8bbe $ f_i  $ \u8868\u793a\u7b2c $ i $ \u70b9\u6240\u80fd\u83b7\u5f97\u7684\u6700\u5927\u5229\u76ca\uff0c\u8bbe bool \u6570\u7ec4 $ vis_i  $ \u8868\u793a\u7b2c $ i $ \u70b9\u662f\u5426\u53ef\u4ee5\u6709\u591a\u79cd\u9009\u62e9\u3002\n\n\u5728\u9012\u5f52\u8fc7\u7a0b\u4e2d\uff0c\u8d2a\u5fc3\u5730\u60f3\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u9012\u5f52\u4e2d\u5bf9\u4e8e\u5b50\u6811\u7684\u6743\u503c\u6392\u5e8f\uff0c\u7136\u540e \u5982\u679c\u5b50\u6811\u6743\u503c\u5927\u4e8e $ 1 $ \u5e76\u4e14\u8fd8\u80fd\u9009\u62e9,\u90a3\u4e48\u8ba9 $ f_u\\leftarrow f_u+f_v $ \u3002\n\n\u9009\u62e9\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u51fa\u73b0 $ f_v =0$ \u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u8ba9 $ vis_u=1 $ \uff0c\u5e76\u4e14\u628a\u8fd9\u4e2a\u7ed3\u679c\u5f80\u4e0a\u4f20\u3002 \n\n\u9009\u62e9\u5b8c\u6210\u540e\uff0c\u7279\u5224\u7ed3\u675f\u9009\u62e9\u65f6\uff0c\u6709\u56e0\u4e3a\u6b21\u6570\u9650\u5236\u800c\u4e0d\u80fd\u9009\u4f46\u662f\u548c\u67d0\u4e2a\u5df2\u7ecf\u9009\u5165\u7684\u5b50\u6811\u7684\u5229\u76ca\u76f8\u540c\u7684\u5b50\u6811\uff0c\u5982\u679c\u6709\u7684\u8bdd\uff0c $ vis_u=1 $ \uff0c\u7ed3\u679c\u4e0a\u4f20\u3002 \n\n\n\n## AC\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst long long LLM=9223372036854775807;\nconst int IM=2147483647;\nconst int N=1000001;\ninline int read(){int x=0,y=1;char c=getchar();while(c<'0'||c>'9'){if(c=='-') y=-y;c=getchar();}while(c>='0'&&c<='9'){x=x*10+(c^'0');c=getchar();}return x*y;}\n\nint n,cnt,w[N],c[N],f[N],head[N],son[N];\nbool vis[N];\n\nstruct node{\n\tint v,nex;\n}t[N];\n\nbool cmp(int a,int b){return f[a]>f[b];}\n\nvoid add(int u,int v)\n{\n\tt[++cnt].v=v;\n\tt[cnt].nex=head[u];\n\thead[u]=cnt;\n}\n\nvoid dfs(int u,int fath)\n{\n\tf[u]=w[u];\n\tfor(int i=head[u];i;i=t[i].nex)\n\t{\n\t\tif(t[i].v==fath) continue;\n\t\tdfs(t[i].v,u);\n\t\tif(vis[t[i].v]) vis[u]=true;\n\t}\n\tint cnt=0,bj=1,jl;\n\tfor(int i=head[u];i;i=t[i].nex)\n\t{\n\t\tif(t[i].v==fath) continue;\n\t\tson[++cnt]=t[i].v;\n\t}\n\tsort(son+1,son+cnt+1,cmp);\n\tfor(int i=1;i<=min(c[u]-1,cnt);i++)\n\t{\n\t\tif(f[son[i]]<0)\n\t\t{\n\t\t\tbj=0;\n\t\t\tbreak;\n\t\t}\n\t\tif(f[son[i]]==0) vis[u]=true;\n\t\tf[u]+=f[son[i]];\n\t\tjl=i;\n\t}\n\tif(bj&&f[son[jl]]==f[son[jl+1]]&&jl<cnt) vis[u]=true;\n}\n\nsigned main()\n{\n\tn=read();\n\tfor(int i=1;i<n;i++) w[i+1]=read();\n\tfor(int i=1;i<n;i++) c[i+1]=read();\n\tc[1]=IM;\n\tfor(int i=1;i<n;i++)\n\t{\n\t\tint u=read(),v=read();\n\t\tadd(u,v);\n\t\tadd(v,u);\n\t}\n\tdfs(1,0);\n\tprintf(\"%d\\n\",f[1]);\n\tif(vis[1]) puts(\"solution is not unique\");\n\telse puts(\"solution is unique\");\n\treturn 0;\n}\n\n```",
        "postTime": 1673913491,
        "uid": 699852,
        "name": "bzzltl",
        "ccfLevel": 0,
        "title": "P6082 [JSOI2015]salesman \u9898\u89e3"
    },
    {
        "content": "## \u5206\u6790\n\u9898\u76ee\u4e2d\u7684\u4efb\u610f\u4e24\u4e2a\u57ce\u9547\u4e4b\u95f4\u90fd\u53ea\u6709\u552f\u4e00\u7684\u53ef\u80fd\u7ecf\u8fc7\u5176\u5b83\u57ce\u9547\u7684\u8def\u7ebf\u975e\u5e38\u91cd\u8981\uff0c\u8fd9\u5c31\u8bf4\u660e\u9898\u76ee\u4e2d\u7ed9\u51fa\u7684\u56fe\u4e00\u5b9a\u662f\u4e00\u68f5\u6811\n\n\u56e0\u6b64\uff0c\u8054\u7cfb\u6700\u8fd1\u5b66\u8fc7\u7684\u5185\u5bb9\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u6811\u5f62DP\u6c42\u89e3\n\n\u9898\u76ee\u4e2d\u7ed9\u51fa\u4e86\u505c\u7559\u6b21\u6570\u7684\u9650\u5236\uff0c\u8fd9\u5176\u5b9e\u5c31\u662f\u7ed9\u51fa\u4e86\u4f60\u6700\u591a\u80fd\u8bbf\u95ee\u591a\u5c11\u5b50\u6811\n\n\u6ce8\u610f\uff1a\u5728\u4e00\u4e2a\u8282\u70b9\u505c\u7559n\u6b21\u8bf4\u660e\u4f60\u53ef\u4ee5\u904d\u5386n-1\u68f5\u5b50\u6811\uff0c\u56e0\u4e3a\u4f60\u8fd8\u8981\u4ece\u5b50\u6811\u8fd4\u56de\u8fd9\u4e00\u4e2a\u8282\u70b9\uff0c\u6240\u4ee5\u5728\u8bfb\u5165\u65f6\u8981w--\uff08\u4e3a\u4e86\u65b9\u4fbf\uff0c\u540e\u6587\u7684\u505c\u7559\u6b21\u6570\u90fd\u662f\u6307--\u4e4b\u540e\u7684\uff09\n\n\u90a3\u4e48\u52a8\u6001\u8f6c\u79fb\u65b9\u7a0b\u662f\u4ec0\u4e48\u5462\uff1f\n\n\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u5728\u505c\u7559\u6b21\u6570\u9650\u5236\u5185\u9009\u62e9\u4ef7\u503c\u6700\u5927\u7684\u5b50\u6811\uff0c\u540c\u65f6\u5982\u679c\u4e00\u4e2a\u5b50\u6811\u7684\u4ef7\u503c\u4e3a\u8d1f\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u4e0d\u80fd\u9009\n![](https://cdn.luogu.com.cn/upload/image_hosting/cf9jk6qo.png)\n\n\u6bd4\u5982\u4e0a\u9762\u8fd9\u5e45\u56fe\uff0c\u5982\u679c\u5728\u7236\u4eb2\u8282\u70b9\u53ea\u80fd\u505c\u75591\u6b21\uff0c\u5219\u6211\u4eec\u8981\u9009\u62e9\u4ef7\u503c\u6700\u5927\u7684\u8282\u70b95\n\n\u5982\u679c\u505c\u75592\u6b21\uff0c\u6211\u4eec\u8981\u9009\u62e9\u4ef7\u503c\u6700\u5927\u7684\u4e24\u4e2a\u8282\u70b95\u30013\n\n\u5982\u679c\u505c\u75593\u6b21\u5462\uff0c\u6211\u4eec\u662f\u9009\u62e95\u30013\u3001-1\u5417\uff1f\u663e\u7136\u4e0d\u662f\uff0c\u56e0\u4e3a\u9009\u62e9-1\u8fd9\u4e2a\u70b9\u4f1a\u62c9\u4f4e\u4ef7\u503c\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u90095\u30013\u4e24\u4e2a\u70b9\u5c31\u53ef\u4ee5\n\n\u77e5\u9053\u4e86\u600e\u4e48\u9009\u62e9\u8282\u70b9\uff0c\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u4ec0\u4e48\u60c5\u51b5\u4f1a\u51fa\u73b0\u591a\u79cd\u9009\u62e9\n\n1\u3001\u65e2\u7136\u662f\u91cd\u590d\uff0c\u90a3\u4e48\u4e24\u4e2a\u8282\u70b9\u4ef7\u503c\u76f8\u540c\u7684\u60c5\u51b5\u4e00\u5b9a\u8981\u8003\u8651\u4e00\u4e0b\n![](https://cdn.luogu.com.cn/upload/image_hosting/k1oq68k8.png)\n\n\u6211\u4eec\u770b\u4e0a\u9762\u8fd9\u5e45\u56fe\n\n\u5982\u679c\u5728\u7236\u4eb2\u8282\u70b9\u53ea\u80fd\u505c\u75591\u6b21\uff0c\u5219\u6211\u4eec\u4f1a\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\u9009\u5de6\u8fb9\u76845\u6216\u8005\u53f3\u8fb9\u76845\n\n\u5982\u679c\u505c\u75592\u6b21\uff0c\u6211\u4eec\u53ea\u6709\u4e00\u79cd\u60c5\u51b5\uff1a\u4e24\u4e2a5\u90fd\u9009\n\n\u5982\u679c\u505c\u75593\u6b21\uff0c\u6211\u4eec\u4e5f\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\u9009\u4e0a2\u4e2a5\uff0c\u5de6\u8fb9\u76844\u548c\u53f3\u8fb9\u76844\u518d\u4efb\u9009\u4e00\u4e2a\n\n\u505c\u75594\u6b21\u5462\uff1f\u53c8\u53ea\u6709\u4e00\u79cd\u4e86\n\n\u6240\u4ee5\uff0c\u53ea\u6709\u5f53\u7236\u4eb2\u8282\u70b9\u5269\u4f59\u7684\u505c\u7559\u6b21\u6570\u4e3a1\uff0c\u800c\u4e14\u6b64\u65f6\u6700\u5927\u503c\u6709\u4e24\u4e2a\u53ca\u4ee5\u4e0a\u513f\u5b50\u8282\u70b9\uff0c\u90a3\u4e48\u5c31\u4f1a\u6709\u591a\u79cd\u60c5\u51b5\n\n2\u3001\u5b50\u8282\u70b9\u7684\u4ef7\u503c\u4e3a\u96f6\n\u8fd9\u79cd\u60c5\u51b5\u6bd4\u8f83\u7279\u6b8a\uff0c\u56e0\u4e3a\u65e0\u8bba\u4f60\u9009\u6ca1\u9009\u5230\u4ed6\uff0c\u4ef7\u503c\u90fd\u662f\u4e00\u6837\uff0c\u6240\u4ee5\u4f1a\u6709\u4e24\u79cd\u9009\u62e9\n\n\u4f46\u662f\u524d\u63d0\u662f\u4ef7\u503c\u4e3a0\u7684\u8282\u70b9\u5fc5\u987b\u524dk\u5927\u7684\u8282\u70b9\u4e4b\u5185\uff0c\u56e0\u4e3a\u5982\u679c\u4f60\u90fd\u904d\u5386\u4e0d\u5230\u4ed6\uff0c\u66f4\u8c08\u4e0d\u4e0a\u51b3\u7b56\u4e86\n\n\u8bb0\u5f55\u5b50\u8282\u70b9\u7684\u6700\u5927\u503c\u6211\u4eec\u7528\u4f18\u5148\u961f\u5217\u5c31\u53ef\u4ee5\n\n\u4ee3\u7801\n\u628a\u8fd9\u4e24\u79cd\u60c5\u51b5\u641e\u6e05\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u5199\u4ee3\u7801\u4e86\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<iostream>\n#include<cmath>\n#include<queue>\nusing namespace std;\nconst int maxn=2e5+5;\nstruct asd{\n    int from,to,next;\n}b[maxn];\nint tot=1,head[maxn];\nint da[maxn],cx[maxn];\nvoid ad(int aa,int bb){\n    b[tot].from=aa;\n    b[tot].to=bb;\n    b[tot].next=head[aa];\n    head[aa]=tot++;\n}//\u5efa\u8fb9\nint f[maxn];//\u8bb0\u5f55\u6700\u5927\u503c\nint jud;\nvoid dfs(int now,int fa){\n    priority_queue<int> q;//\u9ed8\u8ba4\u5927\u6839\u5806\n    for(int i=head[now];i!=-1;i=b[i].next){\n        int u=b[i].to;\n        if(u==fa) continue;\n        dfs(u,now);\n        q.push(f[u]);//\u904d\u5386\uff0c\u540c\u65f6\u5c06\u5b50\u8282\u70b9\u7684\u503cpop\u8fdb\u53bb\n    }\n    int cnt=0,jl=0x3f3f3f3f;\n    if(q.size()>=2){\n        int xx=q.top();\n        q.pop();\n        jl=q.top();\n        q.push(xx);\n    }\n    //cnt\u8bb0\u5f55\u6240\u9009\u5143\u7d20\u7684\u4e2a\u6570\uff0cjl\u8bb0\u5f55\u4e0a\u4e00\u6b21\u9009\u7684\u5143\u7d20\n    //\u8fd9\u9053\u9898\u6570\u636e\u5f88\u6c34\uff0c\u628ajl\u8d4b\u503c\u62100x3f3f3f3f\u90fd\u80fd\u8fc7\n    //\u4e0b\u9762\u662f\u9519\u8bef\u5199\u6cd5\n    /*\n    int cnt=0,jl=0x3f3f3f3f;\u6216\u8005jl=0;jl=\u4efb\u4f55\u6570\n    \u6ca1\u6709\u540e\u9762\u7684\u5224\u65ad\n    \u867d\u7136\u80fd\u8fc7\uff0c\u4f46\u662f\u4e0d\u5bf9\n    */\n    while(!q.empty()){\n        cnt++;\n        int xx=q.top();\n        if(xx==0 || (cx[now]==cnt && jl==xx)){\n            jud=1;\n        }//\u6709\u4e24\u79cd\u51b3\u7b56\u7684\u60c5\u51b5\n        if(xx<0 || cx[now]+1==cnt) break;//\u8d85\u8fc7\u505c\u7559\u6b21\u6570\n        f[now]+=xx;\n        jl=xx;\n        q.pop();//\u4e00\u5b9a\u8981pop\n    }\n    while(!q.empty()) q.pop();//pop\u4e0dpop\u90fd\u53ef\u4ee5\n}\nint main(){\n    memset(head,-1,sizeof(head));\n    int n;\n    scanf(\"%d\",&n);\n    for(int i=2;i<=n;i++){\n        scanf(\"%d\",&da[i]);\n    }\n    for(int i=2;i<=n;i++){\n        scanf(\"%d\",&cx[i]);\n        cx[i]--;//\u4e00\u5b9a\u8981--\n    }\n    cx[1]=0x3f3f3f3f;//1\u53f7\u8282\u70b9\u53ef\u4ee5\u505c\u7559\u65e0\u6570\u6b21\n    for(int i=2;i<=n;i++){\n        int aa,bb;\n        scanf(\"%d%d\",&aa,&bb);\n        ad(aa,bb);\n        ad(bb,aa);//\u5efa\u8fb9\n    }\n    for(int i=1;i<=n;i++){\n        f[i]=da[i];//\u7ed9\u6bcf\u4e00\u4e2a\u8282\u70b9\u521d\u59cb\u5316\u4ef7\u503c\n    }\n    dfs(1,0);//\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u904d\u5386\n    if(jud) printf(\"%d\\nsolution is not unique\\n\",f[1]);\n    //\u6709\u591a\u79cd\u60c5\u51b5\u4e5f\u8981\u8f93\u51fa\u503c\uff0c\u4e0d\u8981\u5fd8\u4e86\n    else printf(\"%d\\nsolution is unique\\n\",f[1]);\n    return 0;\n}\n```\n\n\u4ee3\u7801\u7684\u7ec6\u8282\u5728\u6ce8\u91ca\u91cc\n\u8fd9\u9053\u9898\u601d\u7ef4\u91cf\u4e0d\u5c0f\uff0c\u5927\u5bb6\u4e00\u5b9a\u8981\u8ba4\u771f\u601d\u8003",
        "postTime": 1586136736,
        "uid": 316322,
        "name": "hzoi_liuchang",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P6082 \u3010[JSOI2015]salesman\u3011"
    },
    {
        "content": "## \u5206\u6790\n\u8fd9\u9898\u4e00\u773c\u5e94\u8be5\u5c31\u80fd\u770b\u51fa\u6765\u662f\u6811\u5f62DP\uff0c\u9898\u76ee\u4e2d\u90fd\u591a\u6b21\u6697\u793a\u4e86\uff0c\u6240\u4ee5\u5148\u628a\u5b9a\u4e49\u641e\u51fa\u6765\uff0c\u6700\u5f00\u59cb\u6211\u8df3\u4e86\u4e00\u4e2a\u5751\u5c31\u662f\u628a\u72b6\u6001\u5b9a\u4e49\u6210\u4e86$DP[i][j]$\uff0c\u5373\u5728$i$\u53f7\u8282\u70b9\u505c\u7559$j$\u6b21\u7684\u6700\u5927\u6536\u76ca\uff0c\u7136\u540e\u60f3\u554a\u60f3\uff0c\u5c31\u6ca1\u6709\u7136\u540e\u4e86\u3002\u3002\u3002\u3002\u3002\n\n\u6a21\u62df\u51e0\u4e2a\u6837\u4f8b\u53d1\u73b0\u505c\u7559\u6b21\u6570\u6709\u4e00\u4e2a\u5f88\u7279\u6b8a\u7684\u6027\u8d28\uff0c\u5c31\u662f\u6700\u591a\u53ea\u80fd\u7ecf\u8fc7\u8be5\u70b9\u7684\u513f\u5b50\u505c\u7559\u6b21\u6570-1\u6b21\uff0c\u4e0d\u7136\u5c31\u56de\u4e0d\u4e86\u5bb6\u4e86\uff0c\u4f46\u597d\u50cf\u5bf9\u6211\u4eec\u8fd9\u4e2a\u8f6c\u79fb\u6ca1\u6709\u4ec0\u4e48\u5e2e\u52a9\uff0c\u56de\u53bb\u8bfb\u4e00\u904d\u9898\uff0c\u53d1\u73b0\u70b9\u6743\u53ef\u80fd\u4e3a\u8d1f\uff1f\n\n**\u8d1f\u7684\uff1f**\n\n\u90a3\u7b2c\u4e8c\u7ef4\u72b6\u6001\u5c31\u6ca1\u610f\u4e49\u4e86\uff0c\u6211\u8981\u662f\u90a3\u4e2a$Salesman$\uff0c\u80af\u5b9a\u5148\u53bb\u8d5a\u94b1\u591a\u7684\uff0c\u4e0d\u53bb\u4e8f\u672c\u7684\uff0c\u6240\u4ee5\u8fd9\u597d\u50cf\u76f4\u63a5\u7528\u4e00\u4e2a\u8d2a\u5fc3\u5c31\u53ef\u4ee5\u4e86\uff0c\u8bc1\u660e\u4e5f\u6bd4\u8f83\u597d\u8bc1\u5427\uff0c\u53bb\u4e00\u4e2a\u6743\u5927\u7684\u70b9\u80af\u5b9a\u6bd4\u53bb\u4e00\u4e2a\u6743\u5c0f\u7684\u70b9\u6536\u83b7\u5927\uff0c\u4e0d\u53bb\u8d1f\u6743\u70b9\u80af\u5b9a\u6bd4\u53bb\u6536\u83b7\u5927\uff0c\u6240\u4ee5\u6bcf\u6b21\u4ece\u5927\u5230\u5c0f\u53d6\u591f\u505c\u7559\u6b21\u6570\u51cf\u4e00\u6216\u628a\u6b63\u513f\u5b50\u53d6\u5b8c\u5373\u53ef\uff0c\u6240\u4ee5\u8f6c\u79fb\u65b9\u7a0b\u5c31\u662f$DP[u]=\\sum_{i=1}^s{DP[i]}$\u3002\n\n\u4e0b\u9762\u8003\u8651\u7b2c\u4e8c\u4e2a\u95ee\u9898\uff0c\u591a\u7ec4\u89e3\uff0c\u56e0\u4e3a\u8fd9\u662f\u4e2a\u6811\uff0c\u6240\u4ee5\u53ea\u6709\u4e24\u79cd\u60c5\u51b5\u6709\u591a\u7ec4\u89e3\uff0c\u4e00\u662f\u6709\u4e00\u4e2a\u5b50\u6811\u7684\u6743\u503c\u4e3a0\uff0c\u8fd9\u6837\u4e0d\u7ba1\u600e\u4e48\u8d70\u90fd\u53ef\u4ee5\uff0c\u53e6\u4e00\u4e2a\u662f\u6240\u9009\u7684\u6700\u540e\u4e00\u68f5\u5b50\u6811\u4e0e\u4e00\u68f5\u672a\u9009\u7684\u5b50\u6811\u6743\u503c\u4e00\u6837\uff0c\u8fd9\u6837\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u9009\u53e6\u5916\u4e00\u68f5\u5b50\u6811\u3002\u5173\u4e8e\u9009\u5b50\u6811\u7684\u8bdd\uff0c\u6211\u7528\u7684\u662f\u5806\uff0c\u8fd9\u4e2a\u5224\u65ad\u662f\u4e0d\u662f\u4e3a\u7a7a\u554a\u4ec0\u4e48\u7684\u6bd4\u8f83\u65b9\u4fbf\uff0c\u5f53\u7136\u7528$sort$\u4e5f\u884c\uff0c\u7136\u540e\u5c31\u662f\u4ee3\u7801\u5b9e\u73b0\u5566\uff0c\u5176\u5b9e\u60f3\u660e\u767d\u4e5f\u633a\u7b80\u5355\u3002\n```\n#include<iostream>\n#include<queue>\n#include<cstdio>\nusing namespace std;\nconst int N=1e5+10;\nstruct Edge{\n    int to,nxt;\n}e[N<<1];\nint Head[N],len;\nvoid Ins(int a,int b){\n    e[++len].to=b;e[len].nxt=Head[a];Head[a]=len;\n}\nstruct Node{\n    int val,idx;\n    Node(){val=idx=0;}\n    Node(int a,int b){val=a;idx=b;}\n    bool operator <(const Node&A)const{\n        return val<A.val;\n    }\n};\nint w[N],lim[N],g[N],dp[N];\ninline int read(){\n    int w=1,x=0;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){\n        if(ch=='-')w=-1;ch=getchar();\n    }\n    while(ch<='9'&&ch>='0'){\n        x=x*10+ch-'0';\n        ch=getchar();\n    }\n    return x*w;\n}\nvoid dfs(int u,int fa){\n    priority_queue<Node > q;\n    dp[u]=w[u];\n    for(int i=Head[u];i;i=e[i].nxt){\n        int v=e[i].to;\n        if(v==fa)continue;\n        dfs(v,u);\n        q.push(Node(dp[v],g[v]));\n    }\n    int tot=1,last;\n    while(++tot<=lim[u]&&!q.empty()){\n        Node now=q.top();q.pop();\n        if(now.val<0)break;\n        if(now.val==0){g[u]=1;break;}\n        dp[u]+=now.val;\n        g[u]|=now.idx;\n        last=now.val;\n    }\n    if(!q.empty())if(q.top().val==last)g[u]=1;\n}\nint main(){\n    int n=read();\n    lim[1]=N;\n    for(int i=2;i<=n;i++)\n        w[i]=read();\n    for(int i=2;i<=n;i++)\n        lim[i]=read();\n    for(int i=1;i<n;i++){\n        int a=read(),b=read();\n        Ins(a,b);Ins(b,a);\n    }\n    dfs(1,0);\n    cout<<dp[1]<<'\\n';\n    if(g[1])puts(\"solution is not unique\");\n    else puts(\"solution is unique\");\n    return 0;\n}\n```",
        "postTime": 1586851379,
        "uid": 305262,
        "name": "Su_Zipei",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6082"
    },
    {
        "content": "\u5bb9\u6613\u6ce8\u610f\u5230\u539f\u56fe\u662f\u68f5\u6811\u3002\n\n\u6211\u4eec\u8bbe $w_u$ \u8868\u793a \u5728 $u$ \u505c\u7559\u7684\u51c0\u6536\u76ca\uff0c $d_u$ \u8868\u793a\u80fd\u591f\u5728 $u$ \u505c\u7559\u7684\u6700\u5927\u6b21\u6570\uff0c $dp_u$ \u8868\u793a\u7ecf\u8fc7 $u$ \u53ca\u5176\u5b50\u6811\u7684\u6700\u5927\u6536\u76ca\uff0c\u5219\n\n$dp_u=w_u+u$ \u7684\u51e0\u4e2a\u513f\u5b50\u4e2d\u6536\u76ca\u6700\u5927\u7684\u4e14\u6536\u76ca\u975e\u8d1f\u7684\u524d $d_u-1$ \u4e2a\u7684\u6536\u76ca\u4e4b\u548c\n\n\u6211\u4eec\u8ba1\u7b97\u5b8c $u$ \u7684\u6240\u6709\u513f\u5b50\u7684\u7b54\u6848\u540e\u5c06\u513f\u5b50\u6309\u7167\u6536\u76ca\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u53d6\u524d\u9762\u4e0d\u8d85\u8fc7 $d_u-1$ \u4e2a\u975e\u8d1f\u7684\u5373\u53ef\u3002 \u8fd9\u6837\u5b8c\u6210\u4e86\u7b2c\u4e00\u95ee\u3002\n\n\u7b2c\u4e8c\u95ee\u7684\u591a\u89e3\u60c5\u51b5\u53ea\u6709\u4e24\u79cd\u53ef\u80fd:\n\n1. \u5b58\u5728\u4e00\u79cd\u6700\u4f18\u65b9\u6848\u4f7f\u5f97\u7ecf\u8fc7\u7684\u67d0\u4e2a\u70b9 $u$ \u6ee1\u8db3 $dp_u=0$ \u3002\n2. \u5b58\u5728\u4e00\u79cd\u6700\u4f18\u65b9\u6848\u4f7f\u5f97\u7ecf\u8fc7\u7684\u67d0\u4e2a\u70b9 $u$ \u5b58\u5728\u81f3\u5c11 $d_u$ \u4e2a\u513f\u5b50\uff0c \u4e14\u7b2c $d_u$ \u5927\u6536\u76ca\u975e\u8d1f\u7684\u513f\u5b50\u4e0d\u552f\u4e00\u3002\n\n\u6211\u4eec\u53ea\u9700\u8981\u5728 $dp$ \u7684\u8fc7\u7a0b\u4e2d\u987a\u4fbf\u8bb0\u5f55\u662f\u5426\u5b58\u5728\u8fd9\u4e24\u79cd\u60c5\u51b5\u5373\u53ef\u3002\n\n\u74f6\u9888\u5728\u7ed9\u513f\u5b50\u6392\u5e8f\uff0c \u603b\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$ \u3002\n\n\u4ee3\u7801:\n```cpp\n#include<bits/stdc++.h>\n#define Rep(i,a,b) for(register int i=(a);i<=(b);++i)\n#define Repe(i,a,b) for(register int i=(a);i>=(b);--i)\n#define rep(i,a,b) for(register int i=(a);i<(b);++i)\n#define pb push_back\ntypedef long long ll;\nusing namespace std;\n\nconst int MAXN = 1e5 + 7;\n\nstatic int w[MAXN], d[MAXN], n;\n\nvector <int> ed[MAXN];\n\ninline void init()\n{\n   cin >> n;\n\tRep(i, 2, n) cin >> w[i];\n\tRep(i, 2, n) cin >> d[i], -- d[i];\n\td[1] = n;\n\tstatic int u, v;\n\tRep(i, 1, n - 1) cin >>u >> v, ed[u].pb(v), ed[v].pb(u);\n}\n\nstatic ll dp[MAXN];\n\nstatic int nu[MAXN];\n\nstatic int sn[MAXN];\n\ninline bool cmp(int u, int v) {return dp[u] > dp[v];}\n\nvoid dfs(int u, int fa)\n{\n\tfor(int v : ed[u]) if(v ^ fa) dfs(v, u);\n\tint e = 0; dp[u] = w[u];\n\tfor(int v : ed[u]) if(v ^ fa) sn[++ e] = v;\n\tif(!e) return;\n\tsort(sn + 1, sn + e + 1, cmp);\n\tRep(i, 1, min(e, d[u]))\n\t{\n\t\tif(i[sn][dp] > 0) dp[u] += i[sn][dp], nu[u] |= i[sn][nu];\n\t\tif(i[sn][dp] == 0) nu[u] = 1;\n\t}\n\tif(d[u] < e && u[d][sn][dp] > 0 && (d[u] + 1)[sn][dp] == u[d][sn][dp])\n\t\tnu[u] = 1;\n}\n\ninline void solve()\n{\n\tdfs(1, 0);\n\tcout << dp[1] << endl;\n\tif(nu[1]) cout << \"solution is not unique\" << endl;\n\telse cout << \"solution is unique\" << endl;\n}\n\nint main()\n{\n\tinit();\n\tsolve();\n\treturn 0;\n}\n```",
        "postTime": 1581422230,
        "uid": 7035,
        "name": "Great_Influence",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6082 \u3010[JSOI2015]salesman\u3011"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P6082)\n\n## \u9898\u610f\u7b80\u8ff0\n\n\u4e00\u68f5\u6811\uff0c\u4ee5\u70b9 $1$ \u4e3a\u8d77\u70b9\u3002\u6bcf\u4e2a\u70b9\u90fd\u6709\u5411\u4e0b\u904d\u5386\u5b50\u6811\u7684\u6570\u91cf\u9650\u5236\u3002\u7ecf\u8fc7\u6bcf\u4e2a\u70b9\u83b7\u5f97\u6536\u76ca\u3002\u6c42\u6536\u76ca\u6700\u5927\u503c\uff0c\u4e14\u5bf9\u4e8e\u6b64\u6700\u5927\u503c\uff0c\u662f\u5426\u6709\u591a\u79cd\u904d\u5386\u65b9\u6848\u3002\n\n## \u9898\u76ee\u5206\u6790\n\n\u6811\u5f62 dp\u3002\u6a21\u578b\u76f8\u4f3c\u9898\u76ee\u8fd8\u6709 [P3574 [POI2014] FAR-FarmCraft](https://www.luogu.com.cn/problem/P3574)\u3002\n\n\u5b9a\u4e49 dp \u6570\u7ec4 $f_u$ \u8868\u793a\u4ee5\u70b9 $u$ \u4e3a\u6839\u7684\u5b50\u6811\u6536\u76ca\u6700\u5927\u503c\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a $u$\uff0c\u5c06\u5b50\u8282\u70b9 $i$ \u5b58\u8fdb\u4e00\u4e2a\u6570\u7ec4\uff0c\u6309 $f_i$ \u7684\u5927\u5c0f\u964d\u5e8f\u6392\u5e8f\u3002\u5728**\u4e0d\u8d85\u8fc7\u904d\u5386\u9650\u5236**\uff0c\u4e14 $f_i>0$ \u7684\u60c5\u51b5\u4e0b\uff0c\u4f9d\u6b21\u5c06 $f_i$ \u52a0\u5165 $f_u$\uff0c\u53ef\u4fdd\u8bc1\u7ed3\u679c\u6700\u5927\u3002\n\n\u7b2c\u4e8c\u4e2a\u95ee\u9898\u662f\u5982\u4f55\u5224\u5b9a $f_u$ \u7684\u89e3\u662f\u5426\u552f\u4e00\u3002\uff08**\u4e0b\u6587\u201c\u89e3\u201d\u901a\u6307\u904d\u5386\u65b9\u6848**\uff09\n\n**\u9ed8\u8ba4 $f_i$ \u5df2\u7ecf\u6709\u5e8f**\uff0c\u8bbe\u6309\u5927\u5c0f\u987a\u5e8f\u6700\u540e\u4e00\u4e2a\u52a0\u5165 $f_u$ \u7684\u70b9\u4e3a $i_1$\uff0c\u82e5\u5b58\u5728 $f_{i_1+1}=f_{i_1}$\uff0c\u5219 $i_1+1$ \u548c $i_1$ \u90fd\u662f\u53ef\u904d\u5386\u7684\u70b9\uff0c\u6240\u4ee5\u89e3\u4e0d\u552f\u4e00\u3002\n\n\u6216\u8005\u5b58\u5728 $f_i=0$\uff0c\u5219\u8fd9\u4e2a\u70b9\u53ef\u8d70\u53ef\u4e0d\u8d70\uff0c\u4f7f\u89e3\u4e0d\u552f\u4e00\u3002\n\n\u53c8\u6216\u8005\u52a0\u5165\u7b54\u6848\u7684 $f_i$ \u89e3\u4e0d\u552f\u4e00\uff0c\u5219 $f_u$ \u89e3\u4e0d\u552f\u4e00\u3002\n\n\u53ef\u4ee5\u5bf9 $f$ \u6570\u7ec4\u591a\u5f00\u4e00\u7ef4\uff0c``f[u][0]`` \u8bb0\u5f55\u7b54\u6848\uff0c``f[u][1]`` \u8bb0\u5f55\u89e3\u662f\u5426\u552f\u4e00\u3002\n\n## code\n\n```cpp\n#include <bits/stdc++.h>\n#define rei register int\n#define N 200010\nusing namespace std;\n\ntemplate <typename T> inline void read(T &x)\n{\n\tx = 0; T f = 1; char ch = getchar();\n\twhile (!isdigit(ch)) {if (ch == '-') f = -f; ch = getchar();}\n\twhile (isdigit(ch)) {x = x * 10 + ch - 48; ch = getchar();}\n\tx *= f;\n}\n\nint n, a[N], f[N][2], head[N], edge_cnt, w[N], que[N], tot;\nstruct edge {int nxt, v;} e[N << 1];\n\ninline void add_edge(int u, int v) {e[++edge_cnt].nxt = head[u]; head[u] = edge_cnt; e[edge_cnt].v = v;}\n\ninline bool cmp(const int &a, const int &b) {return f[a][0] > f[b][0];}\n\ninline void solve(int u, int fa)\n{\n\tfor (rei i = head[u]; i; i = e[i].nxt) {if (e[i].v == fa) continue; solve(e[i].v, u); if (!f[e[i].v][0]) f[u][1] = 1;} tot = 0;\n\tfor (rei i = head[u]; i; i = e[i].nxt) {if (e[i].v == fa) continue; if (f[e[i].v][0] > 0) que[++tot] = e[i].v;}\n\tsort(que + 1, que + 1 + tot, cmp); rei i = 1;\n\tfor (; i <= min(tot, w[u]); i++) f[u][0] += f[que[i]][0], f[u][1] |= f[que[i]][1];\n\tif (i <= tot && f[que[i - 1]][0] == f[que[i]][0]) f[u][1] = 1;\n\tf[u][0] += a[u];\n}\n\nint main()\n{\n\tread(n);\n\tfor (rei i = 2; i <= n; i++) read(a[i]);\n\tfor (rei i = 2; i <= n; i++) read(w[i]), w[i]--; w[1] = 1e9;\n\tfor (rei i = 1; i < n; i++) {int u, v; read(u); read(v); add_edge(u, v); add_edge(v, u);}\n\tsolve(1, 0);\n\tprintf(\"%d\\n\", f[1][0]);\n\tif (f[1][1]) printf(\"solution is not unique\");\n\telse printf(\"solution is unique\");\n\treturn 0;\n}\n```\n",
        "postTime": 1643206996,
        "uid": 200930,
        "name": "\u30d9\u72d0\u4ed9\u59d0\u59d0\u3054",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P6082\u3010[JSOI2015] salesman\u3011"
    },
    {
        "content": "\n## \u9898\u610f\n\n\u7ed9\u5b9a\u4e00\u68f5$n$\u4e2a\u70b9\u7684\u6811\uff0c\u6709\u70b9\u6743\uff0c\u4f60\u4ece$1$\u53f7\u70b9\u5f00\u59cb\u4e00\u6b21\u65c5\u884c\uff0c\u6700\u540e\u56de\u5230$1$\u53f7\u70b9\u3002\u6bcf\u5230\u8fbe\u4e00\u4e2a\u70b9\uff0c\u4f60\u5c31\u80fd\u83b7\u5f97\u7b49\u4e8e\u8be5\u70b9\u70b9\u6743\u7684\u6536\u76ca\uff0c \u4f46\u6bcf\u4e2a\u70b9\u90fd\u6709\u8fdb\u5165\u8be5\u70b9\u7684\u6b21\u6570\u9650\u5236\uff0c\u4e14\u6bcf\u4e2a\u70b9\u7684\u6536\u76ca\u53ea\u80fd\u83b7\u5f97\u4e00 \u6b21\uff0c\u6c42\u6700\u5927\u6536\u76ca\u3002\n\n## \u601d\u8def\n\n> \u6811\u5f62$\\texttt{DP}$ + \u4f18\u5148\u961f\u5217 \n\n\u6bd4\u8f83\u5bb9\u6613\u770b\u51fa\u6765\u8fd9\u662f\u4e00\u9053\u6811\u5f62$\\texttt{DP}$\u9898\n\n\u8981\u6ce8\u610f\u7684\u662f\u6700\u5927\u505c\u7559\u6b21\u6570\u4e3a`\u8f93\u5165\u6b21\u6570-1`\uff0c\u56e0\u4e3a\u8fd8\u8981\u4ece\u5b50\u6811\u8fd4\u56de\u5230\u8fd9\u4e00\u4e2a\u8282\u70b9\n\n\u7136\u540e\u4e0b\u9762\u8003\u8651\u600e\u4e48$\\texttt{DP}$\n\n\u6211\u4eec\u7528$f[i]$\u8868\u793a\u4ee5\u4ece$i$\u51fa\u53d1\uff0c\u8bbf\u95ee\u4ee5$i$\u4e3a\u6839\u7684\u5b50\u6811\uff0c\u5e76\u4e14\u6700\u540e\u80fd\u56de\u5230$i$\u7684\u6700\u5927\u6536\u76ca\n\n\u663e\u7136\u6211\u4eec\u8981\u9009\u8f83\u5927\u4e14\u975e\u8d1f\u7684\u6570\uff0c\u56e0\u4e3a\u53bb\u5927\u70b9\u6743\u7684\u8282\u70b9\u80af\u5b9a\u6bd4\u53bb\u5c0f\u70b9\u6743\u7684\u70b9\u6743\u66f4\u4f18\uff0c\u53bb\u975e\u8d1f\u70b9\u6743\u7684\u8282\u70b9\u80af\u5b9a\u6bd4\u53bb\u8d1f\u70b9\u6743\u7684\u8282\u70b9\u66f4\u4f18\uff0c\u800c\u4e14\u56e0\u4e3a\u4e00\u4e2a\u8282\u70b9\u53ef\u4ee5\u53bb\u591a\u6b21\u4e14\u53ea\u8bb0\u4e00\u6b21\u70b9\u6743\uff0c\u6240\u4ee5\u80af\u5b9a\u80fd\u591f\u7528\u5b8c\u6b21\u6570\uff0c\u56e0\u6b64\u6211\u4eec\u6bcf\u6b21\u5728\u5c0f\u4e8e\u7b49\u4e8e\u505c\u7559\u6b21\u6570\u7684\u524d\u63d0\u4e0b\u53d6\u5b8c\u6b63\u513f\u5b50\u5373\u53ef\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u6700\u5927\uff0c\u6240\u4ee5$f[i]$\u5c31\u7b49\u4e8e$i$\u6240\u6709\u6b63\u513f\u5b50\u7684\u70b9\u6743\u4e4b\u548c\uff08\u524d\u63d0\u662f\u5c0f\u4e8e\u7b49\u4e8e\u6700\u5927\u505c\u7559\u6b21\u6570\uff09\uff0c\u6700\u540e\u7684\u7b54\u6848\u5c31\u662f$f[1]$\n\n\u4e0b\u9762\u6765\u8003\u8651\u89e3\u662f\u5426\u552f\u4e00\u7684\u95ee\u9898\uff0c\u89e3\u4e0d\u552f\u4e00\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n1. $i$\u7684\u5b50\u6811\u4e2d\u6709\u6743\u503c\u4e3a$0$\u7684\u70b9\u3002\u56e0\u4e3a\u9009\u4e0d\u9009\u6743\u503c\u90fd\u4e0d\u53d8\uff0c\u6240\u4ee5\u53ef\u9009\u53ef\u4e0d\u9009\uff0c\u56e0\u6b64\u89e3\u5c31\u4e0d\u552f\u4e00\u4e86\n2. \u5982\u679c$i$\u5728\u904d\u5386\u8fc7\u7a0b\u4e2d\u5f53\u7236\u4eb2\u8282\u70b9\u5269\u4f59\u7684\u505c\u7559\u6b21\u6570\u4e3a$1$\u65f6\uff0c\u53ef\u9009\u7684\u6700\u5927\u503c\u6709\u4e24\u4e2a\u53ca\u4e24\u4e2a\u4ee5\u4e0a\u513f\u5b50\u8282\u70b9\uff0c\u5219\u89e3\u4e0d\u552f\u4e00\n\n\u6240\u4ee5\u5728\u8fc7\u7a0b\u4e2d\u5224\u65ad\u4e00\u4e0b\u5c31\u597d\u4e86\n\n## \u4ee3\u7801\n\n```cpp\n/*\nAuthor:loceaner\n*/\n#include <queue>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nconst int A = 5e5 + 11;\nconst int B = 1e6 + 11;\nconst int mod = 1e9 + 7;\nconst int inf = 0x3f3f3f3f;\n\ninline int read() {\n\tchar c = getchar(); int x = 0, f = 1;\n\tfor( ; !isdigit(c); c = getchar()) if(c == '-') f = -1;\n\tfor( ; isdigit(c); c = getchar()) x = x * 10 + (c ^ 48);\n\treturn x * f;\n}\n\nint n, cnt, head[A], ti[A], a[A], f[A], flag[A];\nstruct node { int to, nxt; } e[A];\n\ninline void add(int from, int to) {\n\te[++cnt].to = to;\n\te[cnt].nxt = head[from];\n\thead[from] = cnt;\n}\n\nstruct Node {\n\tint val, id;\n\tNode() { val = id = 0; }\n\tNode(int a, int b) { val = a; id = b; }\n\tbool operator < (const Node &A) const {\n\t\treturn val < A.val;\n\t}\n};\n\nvoid dfs(int x, int fa) {\n\tpriority_queue <Node> q;\n\tf[x] = a[x];\n\tfor (int i = head[x]; i; i = e[i].nxt) {\n\t\tint to = e[i].to;\n\t\tif (to == fa) continue;\n\t\tdfs(to, x);\n\t\tq.push(Node(f[to], flag[to]));\n\t}\n\tint vis = 0, last;\n\twhile (++vis <= ti[x] && !q.empty()) {\n\t\tNode tmp = q.top(); q.pop();\n\t\tif (tmp.val < 0) break;\n\t\tif (tmp.val == 0) { flag[x] = 1; break; }\n\t\tf[x] += tmp.val;\n\t\tflag[x] |= tmp.id;\n\t\tlast = tmp.val;\n\t}\n\tif (!q.empty()) \n\t\tif (q.top().val == last) flag[x] = 1;\n}\n\nint main() {\n\tn = read();\n\tti[1] = inf; //\u6839\u8282\u70b9\u53ef\u4ee5\u8bbf\u95ee\u65e0\u9650\u6b21 \n\tfor (int i = 2; i <= n; i++) a[i] = read();\n\tfor (int i = 2; i <= n; i++) ti[i] = read() - 1;\n\t//\u6700\u591a\u904d\u5386ti[i]-1\u6b21\u56e0\u4e3a\u8fd8\u8981\u4ece\u5b50\u6811\u56de\u5230\u8fd9\u4e2a\u8282\u70b9 \n\tfor (int i = 1, x, y; i < n; i++) {\n\t\tx = read(), y = read();\n\t\tadd(x, y), add(y, x);\n\t}\n\tdfs(1, 0);\n\tcout << f[1] << '\\n';\n\tif (flag[1]) cout << \"solution is not unique\\n\";\n\telse cout << \"solution is unique\\n\";\n\treturn 0;\n}\n```\n",
        "postTime": 1592304273,
        "uid": 198323,
        "name": "loceaner",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P6082 \u3010[JSOI2015]salesman\u3011"
    },
    {
        "content": "## \u9898\u76ee\n[\u539f\u5730\u5740](https://www.luogu.com.cn/problem/P6082)\n## \u89e3\u8bf4\n\u521a\u770b\u5b8c\u8fd9\u9053\u9898\u611f\u89c9\u8fd8\u662f\u633a\u4e71\u7684\uff0c~~\u53ef\u80fd\u90a3\u65f6\u5019\u8111\u5b50\u4e0d\u592a\u6e05\u9192\uff0c\u4e00\u5ea6\u89c9\u5f97\u81ea\u5df1\u53c8\u8981\u91cd\u62feTarjan\u4e86\u3002~~ \u5f53\u7136\u6700\u540e\u8fd8\u662f\u53d1\u89c9\u5e94\u8be5\u7528\u6811\u5f62DP\u3002\n\n\uff08\u4ee5\u4e0bdp[u]\u4ee3\u8868\u4ee5u\u4e3a\u6839\u7684\u5305\u62ec\u81ea\u5df1\u5728\u5185\u7684\u5b50\u6811\u7684\u6700\u5927\u5229\u6da6\uff0cbool g[u]\u8868\u793au\u53ca\u5176\u5b50\u6811\u7684\u65b9\u6848\u6570\u662f\u5426\u552f\u4e00\uff0c\u552f\u4e00\u5219\u4e3a0\uff0c\u5426\u5219\u4e3a1\uff0ct[u]\u4ee3\u8868u\u7684\u6b21\u6570\uff0cv[u]\u4ee3\u8868u\u7684\u4ef7\u503c\uff09\n\n\u8ba1\u7b97\u6700\u5927\u5229\u6da6\u786e\u5b9e\u633a\u7b80\u5355\u3002\u6709\u70b9\u50cf\u4e4b\u524d\u505a\u8fc7\u7684[\u7a7a\u8c03\u6559\u5ba4](https://www.luogu.com.cn/blog/DarthVictor/kai-pian-ci-the-start-yi-ji-vjudgehdu2242-kong-diao-jiao-shi)\uff0c\u4f46\u662f\u591a\u4e86\u6b21\u6570\u9650\u5236\u548c\u8d1f\u6570\uff0c\u4f46\u8fd9\u4e0d\u96be\u5904\u7406\u3002\u8ba1\u7b97u\u7684\u65f6\u5019\u56e0\u4e3a\u6bcf\u4e2a\u513f\u5b50\u5728\u8d70\u5b8c\u4e4b\u540e\u5fc5\u987b\u8fd4\u56deu\u6765\u56de\u5230\u6839\u8282\u70b9\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u80fd\u5bf9\u513f\u5b50\u7684dp\u503c\u8fdb\u884c\u6392\u5e8f\uff0c\u9009\u53d6\u524dt[u]-1\u4e2a\uff0c\u5e76\u4e14\u9047\u5230\u8d1f\u6570\u7acb\u5373\u505c\u6b62\u56e0\u4e3a\u63a5\u4e0b\u6765\u9009\u7684\u8d1f\u6570\u53ea\u80fd\u4f7f\u603b\u4ef7\u503c\u53d8\u5c0f\u3002\n\n\u90a3\u4e48\u600e\u4e48\u5904\u7406\u65b9\u6848\u662f\u5426\u552f\u4e00\u5462\uff1f\n\n\u6211\u4eec\u5f00\u4e00\u4e2abool\u6570\u7ec4g\u8868\u793au\u53ca\u5176\u5b50\u6811\u7684\u65b9\u6848\u6570\u662f\u5426\u552f\u4e00\u3002\u663e\u7136\uff0c\u53ea\u6709\u4ee5\u4e0b3\u79cd\u60c5\u51b5\u4e0b\u65b9\u6848\u6570\u4e0d\u552f\u4e00\uff1a\n\n\u67d0\u4e2a\u53d6\u5f97\u7684\u513f\u5b50dp\u503c\u4e3a0(\u9009\u4e0d\u9009\u90fd\u53ef\u4ee5)\n\n\u67d0\u4e2a\u53d6\u5f97\u7684\u513f\u5b50g\u503c\u4e3a1(\u5728\u8fd9\u9897\u5b50\u6811\u4e2d\u6709\u4e0d\u540c\u7684\u8def\u5f84)\n\n\u4e0b\u4e2a\u672a\u9009\u7684\u513f\u5b50\u548c\u6700\u540e\u9009\u62e9\u7684\u513f\u5b50f\u503c\u76f8\u540c(\u53ef\u4ee5\u66ff\u6362)~~\uff08\u6211\u5199\u7684\u65f6\u5019\u5ffd\u7565\u4e86\u8fd9\u4e00\u70b9\u4f46\u662f\u8fd8\u662fA\u4e86\uff0c\u5927\u7ea6\u662f\u6570\u636e\u592a\u5f31\u4e86\uff09~~\n\n\u90a3\u4e48\u5c31\u4ece\u6839\u5f00\u59cb\u9012\u5f52\u4e00\u904d\u5c31\u53ef\u4ee5\u4e86\u54e6\uff0c\u6700\u540e\u770bdp[1]\u548cg[1]\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\uff08\u90e8\u5206\u5b9e\u5728\u60f3\u4e0d\u4e0a\u6765\u7684\u505a\u6cd5\u53c2\u8003\u4e86DZN\u5927\u4f6c\u7684\uff0c\u8c22\u8c22\u5566~\uff09\n\n![](https://img2020.cnblogs.com/blog/1933812/202004/1933812-20200404194836708-426857835.jpg)\n## \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=100000+5,Inf=2147483647;\ninline int read(){\n   int s=0,w=1;\n   char ch=getchar();\n   while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\n   while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n   return s*w;\n}\nint n,head[maxn],tot,v[maxn],t[maxn],dp[maxn];\nbool g[maxn];\nstruct node{\n    int to,next;\n}e[2*maxn];\nvoid Add(int a,int b){\n    e[tot].to=b;\n    e[tot].next=head[a];\n    head[a]=tot;\n    tot++;\n}\nvoid dfs(int x,int fa){\n    priority_queue<pair<int,int> > q;//\u6309\u7167dp\u503c\u5927\u5c0f\u6392\u5e8f \n    for(int i=head[x];i;i=e[i].next){\n        int v=e[i].to;\n        if(v==fa) continue;\n        dfs(v,x);\n        q.push(make_pair(dp[v],v));\n    }\n    int num=0,sum=0,judge=0;\n    while(!q.empty()&&num<t[x]-1){\n        if(q.top().first<0) break;//\u51fa\u73b0\u62d6\u540e\u817f\u7684\u7acb\u5373\u505c\u6b62 \n        if(q.top().first==0){//\u67090\u8bf4\u660e\u65b9\u6848\u4e0d\u4e3a1\uff0c\n        //\u4e140\u540e\u9762\u8981\u4e48\u662f0\u8981\u4e48\u662f\u8d1f\u7684\uff0c\u90fd\u65e0\u6cd5\u505a\u8d21\u732e\uff0c\u76f4\u63a5\u9000 \n            judge=1;\n            break;\n        }\n        sum+=q.top().first;\n        if(g[q.top().second]==1) judge=1;\n        q.pop();\n        num++;\n    }\n    dp[x]=sum+v[x];\n    g[x]=judge;\n}\nint main(){\n    tot=1;\n    t[1]=Inf;//\u6ce8\u610f\u81ea\u5df1\u5bb6\u53ef\u4ee5\u8d70\u65e0\u6570\u6b21 \n    n=read();\n    for(int i=2;i<=n;i++) v[i]=read();\n    for(int i=2;i<=n;i++) t[i]=read();\n    for(int i=1;i<=n-1;i++){\n        int x,y;\n        x=read(); y=read();\n        Add(x,y);\n        Add(y,x);\n    }\n    dfs(1,0);\n    printf(\"%d\\n\",dp[1]);\n    if(g[1]) printf(\"solution is not unique\");\n    else printf(\"solution is unique\");\n    return 0;\n}\n```\n\u5e78\u751a\u81f3\u54c9\uff0c\u6b4c\u4ee5\u548f\u5fd7\u3002",
        "postTime": 1586001733,
        "uid": 239287,
        "name": "DarthVictor",
        "ccfLevel": 6,
        "title": "[bzoj4472][\u6811\u5f62DP] Salesman"
    }
]