[
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P1038)\n\n# \u9996\u5148\u5949\u4e0aAC\u4ee3\u7801\uff1a\n\n##### ~~\u6211\u77e5\u9053\u4f60\u4eec\u5c31\u662f\u6765\u770b\u8fd9\u4e2a\u7684\u54b3\u54b3~~\n\n```cpp\n#include<queue>\n#include<cstdio>\n#include<algorithm>\n#define N 102\n#define M N*N\nusing namespace std;\nqueue<int> q;\nstruct edge{\n\tint to,val,from,next;\n} e[M];\nstruct answ{\n\tint num,val;\n} ans[N];\nint h,i,m,n,t,u,v,w,x,c[N],hd[N];\nbool out[N],vis[N];\nint cnt=0,tot=0;\n bool cmp(answ aa,answ bb)\n {return aa.num<bb.num;}\n void build(int u,int v,int w)\n {\n \tcnt++;\n \te[cnt].to=v;\n \te[cnt].val=w;\n \te[cnt].from=u;\n \te[cnt].next=hd[u];\n \thd[u]=cnt;\n }\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(i=1;i<=n;++i)\n\t{\n\t\thd[i]=0;out[i]=false;\n\t\tscanf(\"%d%d\",&c[i],&x);\n\t\tif(c[i])\n\t\t {q.push(i);vis[i]=true;}\n\t\telse\n\t\t {c[i]-=x;vis[i]=false;}\n\t}\n\tfor(i=1;i<=m;++i)\n\t{\n\t\tscanf(\"%d%d%d\",&u,&v,&w);\n\t\tbuild(u,v,w);\n\t\tout[u]=true;\n\t}\n\twhile(!q.empty())\n\t{\n\t\th=q.front();q.pop();\n\t\tfor(i=hd[h];i;i=e[i].next)\n\t\t{\n\t\t\tif(c[e[i].from]<=0) continue;\n\t\t\tt=e[i].to;\n\t\t\tc[t]+=(e[i].val*c[h]);\n\t\t\tif(!vis[t])\n\t\t\t{\n\t\t\t\tq.push(t);\n\t\t\t\tvis[t]=true;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=1;i<=n;++i)\n\t if(c[i]&&!out[i])\n\t {\n\t \ttot++;\n\t \tans[tot].num=i;\n\t \tans[tot].val=c[i];\n\t }\n\tif(tot==0) {printf(\"NULL\");return 0;}\n\tsort(ans+1,ans+tot+1,cmp);\n\tfor(i=1;i<=tot;++i)\n\tprintf(\"%d %d\\n\",ans[i].num,ans[i].val);\n\treturn 0;\n}\n```\n\uff08\u5148\u522b\u6025\u7740\u6284\uff0c\u8fd9\u4efd\u4ee3\u7801\u6709\u5f88\u591a\u5197\u4f59\u90e8\u5206\uff0c\u4e0b\u9762\u6709\u66f4\u65b0\u7248\u4ee3\u7801\uff09\n\n\nOK\uff0c\u5207\u5165\u6b63\u9898\n\n~~\u5982\u679c\u4f60\u4e0d\u60f3\u542c\u6211bb\u60f3\u542c\u5e72\u8d27\u8bf7\u5230\u4e0b\u9762\u7684\u8bb2\u89e3\u533a~~\n\n\u5176\u5b9e\u8fd9\u9053\u9898\u4e3a\u4ec0\u4e48\u7528\u62d3\u6251\u548c\u5177\u4f53\u601d\u8def\u697c\u4e0a\u7684\u51e0\u4f4d\u5927\u4f6c\u5df2\u7ecf\u8bb2\u7684\u5f88\u6e05\u695a\u4e86\n\n~~\u6240\u4ee5\u8bf4\u6211\u8fd9\u7bc7\u9898\u89e3\u6beb\u65e0\u7528\u5904~~\n\n\u4e0d\u4e0d\u4e0d\uff0c\u4e00\u5b9a\u662f\u6709\u7528\u5904\u7684\n\n\u8fd9\u9053\u9898\u662f\u6211\u7ec3\u4e60\u62d3\u6251\u7684\u7b2c\u4e00\u9053\u9898\n\n\u672c\u6765\u60f3\u627e\u4e2a\u6807\u7a0b\u6bd4\u7740\u5b66\u4e60\u4e00\u4e0b\u7684\n\n\u4f46\u662f\u5927\u4f6c\u4eec\u7684\u7801\u98ce\u90fd\u597d\u6e05\u5947\u2026\u2026\n\n\u849f\u84bb\u6211\u76f4\u63a5\u770b\u4e0d\u61c2\u2026\u2026\n\n\u4e8e\u662f\u6211\u53d1\u8a93\u8981\u5199\u4e00\u4efd\u7b80\u5355\u6613\u61c2\u7684\u62d3\u6251\u4ee3\u7801\n\n\u8c03\u4e86\u4e00\u5929\u7ec8\u4e8e\u8c03\u51fa\u6765\u4e86\n\n![\u4e00\u70b9\u4e00\u70b9\u7684AC\u4e86](https://cdn.luogu.com.cn/upload/pic/57796.png)\n\n\n\u4e0d\u5f97\u4e0d\u8bf4\u5751\u70b9\u8fd8\u771f\u4e0d\u5c11\n\n\n# \u8bb2\u89e3\u533a\n\n\u4e0b\u9762\u5206\u51e0\u90e8\u5206\u518d\u8be6\u89e3\u4e00\u4e0b\u8fd9\u9053\u9898\n\n## 1.\u8bfb\u5165+\u5904\u7406\n\n```latex\n\u6ce8\u610f\uff0c\u56e0\u4e3a\u8fd9\u662f\u4e00\u4e2a\u62d3\u6251\u7684\u9898\n\u6240\u4ee5\u6211\u4eec\u62d3\u5c55\u70b9\u7684\u65f6\u5019\u8981\u501f\u52a9\u961f\u5217\n\u90a3\u5982\u4f55\u53d1\u6325\u961f\u5217\u7684\u7528\u5904\u5462\uff1f\n\n\u7531\u9898\u610f\uff0c\u53ea\u6709\u6700\u521d\u72b6\u6001\u4e3a1\u7684\u70b9\u624d\u4f1a\u5f80\u540e\u4f20\u9012\n\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u5728\u8bfb\u5165\u7684\u65f6\u5019\u5c31\u628a\u4e0a\u8ff0\u70b9push\u8fdb\u961f\u5217\u4e2d\n\n\u697c\u4e0a\u5927\u4f6c\u4e5f\u8bc1\u660e\u8fc7\u4e86\uff0c\u9608\u503cu\uff08\u6211\u7684\u4ee3\u7801\u4e2d\u662fx\uff09\u53ef\u4ee5\u4e00\u5f00\u59cb\u76f4\u63a5\u51cf\u6389\uff0c\u6211\u5c31\u4e0d\u518d\u8d58\u8ff0\u4e86\u3002\n```\n```\nscanf(\"%d%d\",&n,&m);\nfor(i=1;i<=n;++i)\n{\n\thd[i]=0;out[i]=false;\n\tscanf(\"%d%d\",&c[i],&x);\n\tif(c[i])\n\t {q.push(i);vis[i]=true;}\n\telse\n\t {c[i]-=x;vis[i]=false;}\n}\n```\n```latex\n\u6ce8\uff1ahd\u6570\u7ec4\u5373\u90bb\u63a5\u8868\u4e2d\u7684head\uff1bout\u8868\u793a\u8fd9\u4e2a\u70b9\u662f\u5426\u6709\u51fa\u8fb9\uff0c\u6ca1\u6709\u7684\u8bdd\u5c31\u662f\u6700\u540e\u4e00\u5c42\uff0c\u8fd9\u91cc\u540e\u9762\u4f1a\u7528\u5230\n\nvis\u6570\u7ec4\u8868\u793a\u70b9\u662f\u5426\u5165\u8fc7\u961f\uff0c\u9632\u6b62\u91cd\u590d\n```\n\n## 2.\u5efa\u56fe\uff08\u6709\u5411\u56fe\uff09\n\n```\nfor(i=1;i<=m;++i)\n{\n\tscanf(\"%d%d%d\",&u,&v,&w);\n\tbuild(u,v,w);\n\tout[u]=true;\n}\n```\nout\u6570\u7ec4\u4e0a\u9762\u63d0\u5230\u8fc7\u4e86\n\n\u8fd9\u4e2abuild\u591a\u4e86\u4e00\u70b9\u5c0f\u4e1c\u897f\n\n```\n void build(int u,int v,int w)\n {\n \tcnt++;\n \te[cnt].to=v;\n \te[cnt].val=w;\n \te[cnt].from=u;//\u6ca1\u9519\u5c31\u662f\u8fd9\u91cc\n \te[cnt].next=hd[u];\n \thd[u]=cnt;\n }\n```\nfrom\u662f\u5e72\u5565\u7528\u7684\u5462\uff1f\n\n\u6bcf\u4e2a\u70b9\uff08\u795e\u7ecf\uff09\u4f20\u9012\u4fe1\u606f\u7684\u65f6\u5019\uff0c\u6211\u4eec\u8981\u5224\u65ad\u8fd9\u6761\u8fb9\u7684\u8d77\u70b9\u662f\u5426\u80fd\u4f20\u9012\n\n\u4e8e\u662f\u6211\u7528\u4e86\u4e2afrom\u6765\u5b58\u8fd9\u4e2a\u8d77\u70b9\u7684\u72b6\u6001\n\nupd on 2020.02.02:from\u5176\u5b9e\u4e0d\u7528\u54d2\uff0c\u6211\u4eec\u5728\u961f\u5217\u4e2d\u53d6\u51fa\u7684front\u5c31\u662f\u6bcf\u6b21\u524d\u5411\u661f\u904d\u5386\u7684from\uff01\n\n## 3.\u62d3\u6251\u5904\u7406\uff08\u6838\u5fc3\u90e8\u5206\uff09\n```latex\n\u4e0a\u9762\u6211\u5df2\u7ecf\u8bf4\u8fc7\u4e86\uff0c\u7528\u961f\u5217\u6765\u7ef4\u62a4\u62d3\u6251\u5e8f\u5217\u3002\n\u8fd9\u4e2a\u5730\u65b9\u6211\u5199\u7684\u6bd4\u8f83\u660e\u767d\uff0c\u5177\u4f53\u6ce8\u91ca\u653e\u4ee3\u7801\u91cc\u4e86\uff0c\u5f80\u4e0b\u770b\u5427\n```\n```\nwhile(!q.empty())\n{\n\th=q.front();q.pop();\n\tfor(i=hd[h];i;i=e[i].next)\n\t{\n\t\tif(c[e[i].from]<=0) continue;\n      t=e[i].to;//t\u8bb0\u5f55\u8be5\u8fb9\u7ec8\u70b9\n\t\tc[t]+=(e[i].val*c[h]);//\u9898\u76ee\u91cc\u7684\u6c42\u548c\u516c\u5f0f\u5c31\u662f\u8fd9\u4e2a\u610f\u601d\uff0c\u7ec8\u70b9\u503c+=\u8d77\u70b9\u503c*\u8fb9\u6743\n\t\tif(!vis[t])\n\t\t{\n\t\t\tq.push(t);\n\t\t\tvis[t]=true;\n\t\t}\n\t}\n}\n```\n```latex\n\u5230\u8fd9\u91cc\u6709\u5927\u4f6c\u5df2\u7ecf\u770b\u51fa\u6765\u4e86\uff0c\u6211\u597d\u50cf\u6ca1\u7528\u201c\u5165\u5ea6\u201d\u8fd9\u4e2a\u6570\u7ec4\u6765\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\u554a\n\u6ca1\u9519\uff0c\u8fd9\u4e2a\u9898\u786e\u5b9e\u6ca1\u7528\u2026\u2026\n\u56e0\u4e3a\u6211\u4eec\u53ea\u9700\u8981\u7edf\u8ba1\u8f93\u51fa\u5c42\n\u4e5f\u5c31\u662f\u6ca1\u6709\u51fa\u8fb9\u7684\u70b9\n```\nupd on 2020.02.02\uff0c\u8fd9\u4e00\u90e8\u5206\u4e5f\u6709\u66f4\u65b0\uff0c\u5177\u4f53\u770b\u6700\u4e0b\u65b9\u65b0\u7248\u4ee3\u7801\n\n## 4.\u8bb0\u5f55\u7b54\u6848\n\n```\nfor(i=1;i<=n;i++)\n if(!out[i]&&c[i]>0)\n  {printf(\"%d %d\\n\",i,c[i]);flag=1;}\nif(!flag) {puts(\"NULL\");return 0;}\n\n\u6211\u7a81\u7136\u53d1\u73b0\uff0c\u6211\u5f53\u65f6\u597d\u83dc\u554a\u2026\u2026\n\u51e0\u4f4d\u5927\u4f6c\u7528\u7684\u4f18\u5148\u961f\u5217\uff0c\u6309\u7167\u7f16\u53f7\u91cd\u8f7d\u8fd0\u7b97\u7b26\u4e4b\u540e\u8f93\u51fa\n\u53d7\u542f\u53d1\u6211\u7528\u4e86\u7ed3\u6784\u4f53+\u6392\u5e8f\u8f93\u51fa\u7684\u6700\u540eans\uff0cbut in fact\u2026\u2026\u5b8c\u5168\u6ca1\u5fc5\u8981\u554a\u2026\u2026\n\u6211\u4eec\u53ea\u9700\u8981for\u5faa\u73af\u4ece\u5c0f\u5230\u5927\u627e\uff0c\u8d8a\u9760\u524d\u627e\u5230\u7684\u5408\u6cd5\u8f93\u51fa\u5c42\u5c31\u662f\u7f16\u53f7\u8d8a\u5c0f\u7684\u554a\u2026\u2026\u7b26\u5408\u9898\u610f\u3002\u76f4\u63a5\u8f93\u51fa\u5c31\u597d\u4e86\u2026\u2026\n```\n## 5.return 0;\u5b8c\u7ed3\u6492\u82b1\u2740\n```latex\n\u6700\u540e\u518dbb\u4e00\u53e5\n\u554a\u4e0d\u662f\n\u603b\u7ed3\u4e00\u4e0b\n1.\u5173\u4e8e\u62d3\u6251\u6392\u5e8f\u8f93\u5165\u7684\u65f6\u5019\u53ef\u4ee5\u5e72\u5f88\u591a\u4e8b\uff0c\u6bd4\u5982\u8bf4\u9884\u5904\u7406vis\uff0c\u5143\u7d20\u5165\u961f\u7b49\u7b49\uff0c\u8fd9\u9053\u9898\u8fd8\u76f4\u63a5\u51cf\u53bb\u4e86\u9608\u503c\n2.build\u7684\u65f6\u5019\u4e0d\u8981\u592a\u6b7b\u677f\u6253\u677f\u5b50\uff0c\u8fd9\u9053\u9898\u4e2d\u52a0\u4e00\u4e2afrom\u6709\u52a9\u4e8e\u540e\u7eed\u64cd\u4f5c\n3.\u62d3\u6251\u6392\u5e8f\u4e0d\u4e00\u5b9a\u90fd\u8981\u7528\u5165\u5ea6\u7684\uff0c\u67d0\u4e9b\u7279\u5b9a\u60c5\u51b5\u4e0b\u53ef\u4ee5\u7528\u4e00\u4e9b\u522b\u7684\u65b9\u6cd5\u5b9e\u73b0\u62d3\u6251\n4.\uff08\u8fd9\u597d\u50cf\u662f\u53e5\u5e9f\u8bdd\uff09\u5b58\u67d0\u4e9b\u4fe1\u606f\u7684\u65f6\u5019\u4e0d\u4e00\u5b9a\u8981\u7528\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\uff0c\u6570\u7ec4\u5927\u6cd5\u597d\uff01\n\n```\n\n\u770b\u5728\u6211\u5199\u4e86\u8fd9\u4e48\u591a~~\u800c\u4e14\u4ee3\u7801\u548c\u8fd9\u4e48\u597d\u61c2\u7684\u4efd\u4e0a~~\u6c42\u7ba1\u7406\u5927\u5927\u901a\u8fc7\u5427QAQ\n\n\u8865\u5145\uff1a\u697c\u4e0a\u51e0\u4f4d\u5927\u4f6c\u7684\u7a0b\u5e8f\u771f\u7684\u5f88\u96be\u61c2\uff08\u73b0\u5728\u6211\u662f\u4e8c\u697c\u4e86hhhh\uff09\uff0c\u4e5f\u6ca1\u6709\u8bb2\u89e3\u6838\u5fc3\u4ee3\u7801\uff0c\u5e0c\u671b\u7ba1\u7406\u5458\u80fd\u901a\u8fc7\u8fd9\u7bc7\u9898\u89e3\u8c22\u8c22\u5566\n\n\n\n------------\n\n\n------------\n\n\u5206\u5272\u7ebf\n\n------------\n\n------------\n\n## update on 2020.02.02.20:20 \uff08\u5343\u5e74\u96be\u9047\u7684\u5927\u56de\u6587\u65e5\u671f\uff09\n\n\u5f53\u65f6\u5199\u8fd9\u7bc7\u9898\u89e3\u7684\u65f6\u5019\u7b97\u662f\u521d\u5b66\u8005\uff0c\u5bf9\u56fe\u8bba\uff0c\u62d3\u6251\u7406\u89e3\u90fd\u4e0d\u662f\u5f88\u6df1\uff0c\u9898\u76ee\u4e2d\u4e00\u4e9b\u6982\u5ff5\u4e5f\u6ca1\u592a\u5f04\u660e\u767d\u3002\u4e00\u5e74\u4ee5\u540e\u7684\u73b0\u5728\uff0c\u901a\u8fc7\u8fd9\u4e00\u5e74\u7684\u78e8\u7ec3\uff0c\u4ee5\u53ca\u8bc4\u8bba\u533a\u5927\u4f6c\u4eec\u7684\u6307\u5bfc\uff0c\u66f4\u65b0\u4e00\u4efd\u65b0\u7684AC\u4ee3\u7801\uff0c\u66f4\u7b80\u6d01\u660e\u4e86\u3002\u601d\u8def\u548c\u4e0a\u9762\u8bb2\u89e3\u4e00\u6837\u3002\n\n\n~~\u6240\u4ee5\u6211\u4e0a\u9762\u8bf4\u4e86\u5417\uff0c\u4e0d\u8981\u6025\u7740\u6284\u4ee3\u7801\u561b\uff0c\u4e0b\u9762\u6709\u66f4\u77ed\u7684\u54b3\u54b3~~\n\n\u4e0b\u9762\u5949\u4e0aAC\u4ee3\u7801plus:\n\n```cpp\n#include<queue>\n#include<cstdio>\n#include<algorithm>\n#define N 101\nusing namespace std;\nstruct edge{\n\tint to,val,nxt;\n} e[N*N];\nstruct answer{\n\tint id,val;\n} ans[N];\nint h,i,m,n,t,u,v,w,U,c[N],hd[N],out[N],vis[N];\nqueue <int> q;\nint cnt=0,flag=0;\n inline bool cmp(answer aa,answer bb)\n  {return aa.id<bb.id;}\n inline void build(int u,int v,int w)\n {\n \tcnt++;\n \te[cnt].to=v;\n \te[cnt].val=w;\n \te[cnt].nxt=hd[u];\n \thd[u]=cnt;\n }\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tvis[i]=out[i]=0;\n\t\tscanf(\"%d%d\",&c[i],&U);\n\t\t//\u8fd9\u91cc\u4e0d\u53ef\u4ee5\u76f4\u63a5\u51cf\uff0c\u521d\u59cb\u5c42\u4e5f\u6709\u53ef\u80fd\u6709\u9608\u503c\uff0c\u4f46\u4e0d\u80fd\u51cf\u53bb.(\u9898\u76ee\u8981\u6c42)\n\t\tif(c[i]>0)\n\t\t {q.push(i);vis[i]=1;}//vis\u8868\u793a\u662f\u5426\u5df2\u5165\u8fc7\u961f\n\t\telse c[i]-=U;\n\t}\n\tfor(i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&u,&v,&w);\n\t\tbuild(u,v,w);\n\t\tout[u]=1;//out\u8868\u793a\u6709\u65e0\u51fa\u8fb9\uff0c\u7528\u4e8e\u6700\u540e\u627e\u8f93\u51fa\u5c42\n\t}\n\twhile(!q.empty())\n\t{\n\t\th=q.front();q.pop();\n\t\tif(c[h]<=0) continue;\n\t\tfor(i=hd[h];i;i=e[i].nxt)\n\t\t{\n\t\t\tt=e[i].to;\n\t\t\tc[t]+=e[i].val*c[h];\n\t\t\tif(!vis[t])\n\t\t\t{\n\t\t\t\tq.push(t);\n\t\t\t\tvis[t]=1;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=1;i<=n;i++)\n\t if(!out[i]&&c[i]>0)\n\t  {printf(\"%d %d\\n\",i,c[i]);flag=1;}\n\tif(!flag) {puts(\"NULL\");return 0;}\n\treturn 0;\n}\n```\n\u4fee\u6539\u7684\u5730\u65b9:\n\n1. \uff08\u4fee\u6539\u4e86\u4e00\u70b9\u70b9\u7801\u98ce\uff09\n2. \u62d3\u6251\u6392\u5e8f\u65f6\u628acontinue\u7684\u5224\u65ad\u653e\u5230\u4e86\u524d\u5411\u661f\u904d\u5386\u4e4b\u524d\uff0c\u7406\u8bba\u4e0a\u8bb2\uff08\u81f3\u5c11\u6211\u73b0\u5728\u662f\u8fd9\u4e48\u7406\u89e3\u7684\uff09\u66f4\u79d1\u5b66\u4e00\u70b9\n3. \u597d\u5427\u770b\u6765\u770b\u81ea\u5df1\u4e00\u5e74\u524d\u7684\u4ee3\u7801~~\u7ffb\u770b\u81ea\u5df1\u4e09\u5e74\u524d\u7684\u7a7a\u95f4\u4e00\u6837~~\u679c\u7136\u60ca\u559c\u4e0d\u65ad\uff0c\u6700\u540e\u6211\u4eec\u6210\u529f\u53c8\u7f29\u77ed\u4e86\u4e0d\u5c11\uff0c\u601d\u8def\u4e5f\u66f4\u6e05\u6670\u4e86\u4e00\u70b9\u3002\n4. \u6240\u4ee5\uff0c\u65e2\u7136\u6211\u53c8\u52a0\u5f3a\u4e86\u4e00\u4e0b\u9898\u89e3\uff0c\u4f55\u4e0d\n## \u89c9\u5f97\u6709\u5e2e\u52a9\u7684\u70b9\u4e2a\u8d5e\u7ed9\u4e2a\u652f\u6301\u518d\u8d70\u5457QwQ",
        "postTime": 1556698273,
        "uid": 183448,
        "name": "Lucaster_",
        "ccfLevel": 0,
        "title": "\u770b\u4e0d\u61c2\u697c\u4e0a\u5927\u4f6c\u7a0b\u5e8f\u7684\u6765\u770b\u8fd9~"
    },
    {
        "content": "- ####  \u8fd9\u9053\u9898\u5e76\u4e0d\u662f\u5f88\u96be\uff0c\u5c31\u662f\u7ec6(keng)\u8282(dian)\u6709\u70b9\u591a\n\n\n- \u5982\u679c\u4e00\u4e2a\u795e\u7ecf\u5143\u7684 $ C[i] <=0 $\uff0c\u90a3\u4ed6\u5c31\u4e0d\u4f1aexciting\uff0c\u4e0d\u4f1a\u7ee7\u7eed\u4f20\u9012\u3002\n\n\n- $C[i]$ \u6709\u53ef\u80fd\u662f\u8d1f\u6570\uff0c\u6240\u4ee5\u8f93\u51fa\u7684\u65f6\u5019\u8981\u5224\u65ad $C[i] >0$ \u800c\u4e0d\u662f $C[i]!=0$\u3002\n\n\n- $U[i]$ \u5176\u5b9e\u6ca1\u5fc5\u8981\u5b58\u50a8\u4e0b\u6765\uff0c\u8f93\u5165\u5c42\u7684 $U[i]$ \u5176\u5b9e\u6ca1\u4ec0\u4e48\u7528\u3002\u5177\u4f53\u770b\u4e0b\u9762\u7684\u5206\u6790\u3002\n\n\n- #### \u5206\u6790\u9898\u76ee\u4e2d\u7684\u516c\u5f0f\n\n\n- \u7531 $C[i]=\\sum\\limits_{(j,i)\\in E}{W_{(j,i)}}*C[j]-U[i]$ \u79fb\u9879\u53ef\u5f97\n\n-     $C[i]+U[i]=\\sum\\limits_{(j,i)\\in E}{W_{(j,i)}}*C[j]$\n\n-   $U[i]$\u662f\u8981\u8f93\u5165\u8fdb\u53bb\u7684\uff0c\u53ef\u4ee5\u89c6\u4e3a\u4e00\u4e2a\u5e38\u6570 $k$\n\n\n-  \u4e5f\u5c31\u662f\u8bf4$\\sum$ \u7b97\u51fa\u6765\u7684\u662f $C[i]+k$ \u7684\u503c\n\n\n-   \u60f3\u5f97\u5230$C[i]$ \u5c31\u8fdf\u65e9\u8981\u51cf\u53bb\u90a3\u4e2a\u5e38\u6570 $k$\n\n\n- \u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728\u8f93\u5165\u7684\u65f6\u5019\u5c31\u51cf\u53bb\u8fd9\u4e2a\u5e38\u6570\u4e0d\u5c31\u884c\u4e86\u5417\uff0c\u4f55\u5fc5\u8981\u5728\u540e\u9762\u51cf\u53bb\u5462\uff1fQAQ\n\n\n-   \u8f93\u5165\u5c42\u7684 $U$ \u662f\u6ca1\u7528\u7684\uff0c$U$ \u53ea\u5728\u516c\u5f0f\u91cc\u6709\u7528\uff0c\u8f93\u5165\u5c42\u7684 $C[i]$ \u53c8\u4e0d\u7528\u8ba1\u7b97\uff0c\u6240\u4ee5$U$ \u6ca1\u7528\u3002\n\n   \n- #### \u4e3a\u4ec0\u4e48\u8981\u7528\u62d3\u6251\u6392\u5e8f\n\n- \u518d\u770b\u4e0a\u9762\u7684\u516c\u5f0f\uff1a$C[i]+U[i]=\\sum\\limits_{(j,i)\\in E}{W_{(j,i)}}*C[j]$\n\n\n- \u53d1\u73b0\u8981\u60f3\u6c42\u51fa $C[i]$ \u5c31\u8981\u6c42\u51fa\u6240\u6709 $ C[j] (i,j\\in E)$ \u7684\u503c\u3002\n\n \n- \u4e3e\u4e2a\u6817\u5b50:\n\n\n![QQ\u6d4f\u89c8\u5668\u622a\u5c4f\u672a\u547d\u540d.png](https://i.loli.net/2017/08/21/599a8bd4bf68c.png)\n\n   \n-  \u5bf9\u4e8e\u4e0a\u9762\u8fd9\u4e2a\u56fe\uff0c\u60f3\u8981\u7b97\u51fa $ F$ \u7684 $C$ \u503c\uff0c\u5c31\u8981\u5148\u7b97\u51fa$D$ \u548c $E$ \u7684 $C$ \u503c\uff0c\u54c7\uff0c\u8fd9\u4e0d\u5c31\u662f\u8d64\u88f8\u88f8\u7684[\u62d3\u6251\u6392\u5e8f](https://www.baidu.com/s?ie=utf8&oe=utf8&wd=%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F&tn=98012088\\_5\\_dg&ch=1)\u5417\uff1fqwq\n\n\n- \u4ece\u4e0a\u9762\u90a3\u4e2a\u56fe\u8fd8\u53ef\u4ee5\u770b\u51fa\uff0c\u8f93\u5165\u5c42\u662f\u5165\u5ea6\u4e3a $0$ \u7684\u70b9\uff08$A\u3001B\u3001C$\uff09\uff0c\u8f93\u51fa\u5c42\u662f\u51fa\u5ea6\u4e3a $0$ \u7684\u70b9\uff08$F$\uff09\uff0c\u5982\u679c\u4f60\u7528\u7684\u662f\u90bb\u63a5\u8868\u5b58\u56fe\u4f60\u53ef\u4ee5\u53ea\u8bb0\u5f55\u5165\u5ea6\u4e0d\u8bb0\u5f55\u51fa\u5ea6\uff0c\u56e0\u4e3a\u4e00\u4e2a\u70b9 $u$ \u51fa\u5ea6\u4e3a $0$ \u76f8\u5f53\u4e8e $head[u]==0$ \uff0c\u6240\u4ee5\u8f93\u51fa\u7684\u65f6\u5019\u5224\u65ad\u6bcf\u4e2a\u70b9\u7684 $head$ \u548c $C$ \u5c31\u597d\u4e86\u3002\n\n \n---\n\u4ee3\u7801\u6700\u597d\u4e0d\u8981\u6284\u6211\u7684\u5440\uff0c\u6211\u8fd9\u4e2a\u62d3\u6251\u6392\u5e8f\u662f\u7528\u6808\u5b9e\u73b0\u7684\uff08\u9b3c\u77e5\u9053\u6211\u600e\u4e48YY\u51fa\u6765\u7684\uff09\uff0c\u8c8c\u4f3c\u522b\u4eba\u90fd\u662f\u7528\u7684\u961f\u5217\uff1f\n\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\n#define maxn 110\nstruct Edge {\n    int u,v,w,next;\n    Edge(int u=0,int v=0,int w=0,int next=0):\n        u(u),v(v),w(w),next(next) {}\n}edge[20010];\nint head[maxn],cnt;\nint C[maxn];\nint st[maxn],top;\nint indeg[maxn];//\u5165\u5ea6;\ninline int input() {\n    int x=0,a=1;char c=getchar();\n    for(;c<'0'||c>'9';c=getchar())\n        if(c=='-') a=-1;\n    for(;c>='0'&&c<='9';c=getchar())\n        x=x*10+c-'0';\n    return x*a;\n}\ninline void addedge(int u,int v,int w) {\n    edge[++cnt]=Edge(u,v,w,head[u]);\n    head[u]=cnt;\n    return;\n}\nvoid topo() {\n    while(top!=0) {\n        int u=st[top--];\n        if(C[u]<=0) {\n            for(int i=head[u];i;i=edge[i].next) {\n                int v=edge[i].v;\n                indeg[v]--;\n                if(indeg[v]==0) st[++top]=v;\n            }\n            continue;\n        }\n        for(int i=head[u];i;i=edge[i].next) {\n            int v=edge[i].v;\n            C[v]+=C[u]*edge[i].w;\n            indeg[v]--;\n            if(indeg[v]==0) st[++top]=v;\n        }\n    }\n    return;\n}\nint main() {\n    int n=input(),p=input();\n    for(int i=1,U;i<=n;i++) {\n        C[i]=input();\n        U=input();\n        if(C[i]!=0) st[++top]=i;\n        else C[i]-=U;\n    }\n    for(int i=1;i<=p;i++) {\n        int u=input(),v=input(),w=input();\n        addedge(u,v,w);\n        indeg[v]++;\n    }\n    topo();\n    bool flag=false;\n    for(int i=1;i<=n;i++)\n        if(!head[i]&&C[i]>0) {\n            printf(\"%d %d\\n\",i,C[i]);\n            flag=true;\n        }\n    if(flag==false) printf(\"NULL\");\n    return 0;\n}\n```\n\n\u6216\u8bb8\u6211\u5e94\u8be5\u5ba3\u4f20\u4e00\u4e0b\u81ea\u5df1\u7684[\u535a\u5ba2](https://git.oschina.net/xjjppm/CodeMaker)\uff1f\n",
        "postTime": 1503302310,
        "uid": 37700,
        "name": "zzlzk",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1038 \u3010\u795e\u7ecf\u7f51\u7edc\u3011"
    },
    {
        "content": "> \u5728\u5170\u5170\u7684\u6a21\u578b\u4e2d\uff0c\u795e\u7ecf\u7f51\u7edc\u5c31\u662f\u4e00\u5f20\u6709\u5411\u56fe\u3002\uff08\u8fd9\u4e2a\u7269\u7406\u6a21\u578b\u5efa\u7acb\u7684\u5f88\u68d2\u554a\u3002\uff09\n\n\u62d3\u6251\u6392\u5e8f~\n\n\u8fd9\u9898\u4e3a\u4ec0\u4e48\u7528toposort\u505a\u5462\uff1f  \n\u9996\u5148\u8fd9\u4e2a\u56fe\u662f\u4e00\u4e2aDAG\u3002\u3002\u8003\u8651DAG\u4e0a\u7684\u7b97\u6cd5  \n\u4ed6\u544a\u8bc9\u4f60\u4e86\u516c\u5f0f\u4e86\uff0c\u6240\u6709\u7684\u8282\u70b9\u7684\u6743\u503c\u662f\u4ece\u4ed6\u7684\u4e0a\u4e00\u4e2a\u8282\u70b9\u63a8\u8fc7\u6765\u7684\uff0c\u6240\u4ee5\u8fd9\u662fDAG\u4e0a\u7684\u9012\u63a8\u5173\u7cfb\uff0c\u6211\u4eec\u4e00\u822c\u7528\u62d3\u6251\u6392\u5e8f\u505a\u3002\n\n\u9996\u5148\uff0c\u8f93\u5165\u5c42\u7684U\u662f\u6ca1\u7528\u7684\uff08\u4f60\u53ef\u4ee5\u53d1\u73b0\u4ed6\u4eec\u7684U\u662f\u6c38\u8fdc\u662f0\uff09\uff08\u7136\u800c\u6211\u7279\u5224\u4e86\u4e00\u4e0b\uff0c\u53d8\u6210\u4e86-1\u56e0\u4e3a\u9898\u91cc\u9762\u6ca1\u597d\u50cf\u6ca1\u8bf4\u554aQAQ\uff09\uff0c\u800c\u4e2d\u95f4\u5c42\u548c\u8f93\u51fa\u5c42\u7684U\u53ef\u4ee5\u5728\u521d\u59cb\u76f4\u63a5\u51cf\u5230$C_i$\u4e2d\uff08\u7136\u800c\u6211\u6bd4\u8f83\u8bda\u5b9e\uff0c\u4e0b\u9762\u7684\u7a0b\u5e8f\u91cc\u6211\u6ca1\u6709\u4e00\u5f00\u59cb\u5c31\u51cf\uff09\n\n\u6211\u6ca1\u6709\u5f00\u4e00\u4e2a\u6808\u6216\u8005\u662f\u4e00\u4e2a\u961f\u5217\uff0c\u56e0\u4e3an\u6bd4\u8f83\u5c0f\uff0c\u6211\u76f4\u63a5\u66b4\u529b\u627e\u5165\u5ea6\u4e3a0\u7684\u8282\u70b9\u3002\u51fa\u5ea6\u4e0d\u9700\u8981\u66f4\u65b0\uff08\u56e0\u4e3a\u6700\u540e\u51fa\u5ea6\u662f\u4e3a\u4e86\u5224\u65ad\u8f93\u51fa\u5c42\u7684\uff09\n\n\u6ce8\u610f\u51e0\u4e2a\u5751\u70b9\uff1a\u53ea\u8f93\u51fa**\u5927\u4e8e0**\u7684**\u8f93\u51fa\u5c42**\uff08\u8981\u540c\u65f6\u6ee1\u8db3\u8fd9\u4e24\u4e2a\u6761\u4ef6\uff09\uff0c\u8f93\u51fa\u5c42\u7684\u5224\u5b9a\u53ef\u4ee5\u76f4\u63a5\u8bb0\u5f55\u51fa\u5ea6\uff0c\u51fa\u5ea6\u4e3a0\u7684\u4e00\u5b9a\u662f\u8f93\u51fa\u5c42\u3002\u5728NULL\u7684\u5224\u5b9a\u4e2d\uff0c\u6211\u4eec\u53ea\u5224\u5b9a**\u8f93\u51fa\u5c42**\u7684C\u662f\u5426\u5927\u4e8e0\u3002\u5982\u679c\u8f93\u51fa\u5c42\u7684C\u90fd$\\le$0\uff0c\u90a3\u4e48\u5c31\u8f93\u51faNULL\u3002\n\n\u8fd8\u6709\u5c31\u662f\u5982\u679c\u4e00\u4e2a\u795e\u7ecf\u5143\u7684\u72b6\u6001\u662f\u8d1f\u7684\uff0c\u90a3\u4e48\u4ed6\u4e0d\u4f1a\u5f80\u540e\u4f20\u9012\u795e\u7ecf\u4fe1\u53f7\u3002`//\uff08\u95f0\u7ecd\u7ec6\u80de\uff1f\uff09`\n\n\u4ee3\u7801\u89c1\u4e0b\n\n```cpp\n#include<iostream>\n#include<cstdio>\n\n#define _ 0\n\nusing namespace std;\n\nstruct edge\n{\n\tint v,w,ne;\n}a[5000];\n\nint n,p,tmp;\nint c[110],u[110],h[110],in[110],out[110];\nbool v[110];\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&p);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d%d\",&c[i],&u[i]);\n\t\tif(c[i]>0)u[i]=-1;\n\t}\n\tfor(int s,d,w,i=1;i<=p;i++)\n\t{\n\t\tscanf(\"%d%d%d\",&s,&d,&w);\n\t\ta[++tmp]=(edge){d,w,h[s]};\n\t\th[s]=tmp;\n\t\tin[d]++;\n\t\tout[s]++;\n\t}\n\tfor(int tmp=1;tmp<=n;tmp++)\n\t{\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tif(in[i]==0&&v[i]==0)\n\t\t\t{\n\t\t\t\tv[i]=1;\n\t\t\t\tif(u[i]!=-1)c[i]-=u[i];\n\t\t\t\tfor(int j=h[i];j>0;j=a[j].ne)\n\t\t\t\t{\n\t\t\t\t\tif(c[i]>0)\n\t\t\t\t\t{\n\t\t\t\t\t\tc[a[j].v]+=c[i]*a[j].w;\n\t\t\t\t\t}\n\t\t\t\t\tin[a[j].v]--;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tbool flag=0;\n\tfor(int tmp=1;tmp<=n;tmp++)\n\t{\n\t\tif(out[tmp]==0&&c[tmp]>0)flag=1;\n\t}\n\tif(flag)\n\t{\n\t\tfor(int tmp=1;tmp<=n;tmp++)\n\t\t{\n\t\t\tif(out[tmp]==0&&c[tmp]>0)\n\t\t\t{\n\t\t\t\tprintf(\"%d %d\\n\",tmp,c[tmp]);\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tprintf(\"NULL\");\n\t}\n\treturn ~~(0^_^0);\n}\n```\n",
        "postTime": 1532473250,
        "uid": 13091,
        "name": "ghj1222",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1038 \u3010\u795e\u7ecf\u7f51\u7edc\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6211\u5728\u53bb\u5e749\u6708\u5c31\u5f00\u59cb\u505a \u4e00\u76f4\u5230noip2017\u90fd\u6ca1\u80fdA   \n\u5f53\u65f6\u603b\u662f\u8bd5\u56fe\u5728\u539f\u6765\u7684\u4ee3\u7801\u91cc\u6311\u9519 \u4e00\u76f4\u90fd\u6ca1\u8c03\u8bd5\u51fa\u6765  \n\u8fc7\u51e0\u5929\u6e05\u660e\u8282\u7701\u9009 \u867d\u7136\u5df2\u7ecf\u9000\u5f79\u4e86\u8fd8\u662f\u51b3\u5b9a\u53bb\u51d1\u4e2a\u70ed\u95f9 \u6240\u4ee5\u8fd9\u51e0\u5929\u53c8\u56de\u5230\u673a\u623f\u5237\u5237\u6c34\u9898   \n\u4e8e\u662f\u53c8\u6765\u5c1d\u8bd5\u4e86\u4e00\u4e0b\u8fd9\u9053\u9898\u3002\u3002\u7ed3\u679c\u4e00\u4e0bA\u4e86\u3002\u3002\u5386\u65f67\u4e2a\u6708\u7ec8\u4e8e\u3002\u3002    \n\n \n    \n\u5927\u81f4\u7684\u601d\u8def\u4e0b\u9762\u7684\u5404\u4f4d\u5927\u4f6c\u90fd\u5df2\u7ecf\u8bb2\u5f97\u5f88\u6e05\u695a\u4e86\uff0c\u6211\u7528\u7684\u662f\u88f8\u62d3\u6251\u6392\u5e8f\uff0c\u88f8\u5efa\u56fe\uff0c\u76f4\u63a5\u8fc7\u4e86\u3002\u3002    \n\u8fd9\u9053\u9898\u5751\u70b9\u633a\u591a\u7684\uff0c\u4f46\u5b9e\u73b0\u8d77\u6765\u6bd4\u8f83\u5bb9\u6613\u3002    \n\u9996\u5148\u8f93\u5165\u65f6\u786e\u5b9a\u662f\u5426\u4e3a\u8f93\u5165\u5c42\uff0c\u76f4\u63a5\u4ecec\u3010i\u3011\u5224\u65ad\u5c31\u884c\u4e86\uff0c\u697c\u4e0b\u5927\u4f6c\u5f97\u51fau\u65e0\u7528\u7684\u7ed3\u8bba\uff0c\u6240\u4ee5\u975e\u8f93\u5165\u5c42\u53ef\u4ee5\u76f4\u63a5\u5728\u8fd9\u91cc\u51cf\u53bbu\u3002    \n\u7136\u540e\u5efa\u8fb9\u65f6\u7edf\u8ba1\u51fa\u5ea6\uff08\u6211\u8fd9\u91cc\u4e60\u60ef\u5199\u4e86\u4e2a\u5165\u5ea6\u6ca1\u7528\u4e0a\uff09    \n\u63a5\u4e0b\u6765\u62d3\u6251\u6392\u5e8f\u4e86\uff0c\u65e2\u7136\u4e00\u4e2a\u70b9\u7684c\u503c\u53ef\u80fd\u88ab\u591a\u6b21\u52a0\u4e0a\uff0c\u53c8\u6709\u8d1f\u6743\u503c\uff0c\u5224\u65adc>0\u518d\u8fdb\u961f\u663e\u7136\u4e0d\u73b0\u5b9e\u3002     \n\u6240\u4ee5\u6211\u4eec\u5e72\u8106\u76f4\u63a5\u5168\u90fd\u8fdb\u961f\uff0c\u51fa\u961f\u65f6\u5224\u65ad\u6743\u503c\u662f\u5426>0\uff0c\u662f\u5c31\u7ee7\u7eed\u904d\u5386\uff0c\u5426\u5219\u76f4\u63a5\u8df3\u8fc7\u3002     \n\u8fd9\u6837\u505a\u597d\u5904\u5c31\u662f\u65e0\u9700\u5728\u8d1f\u6743\u503c\u4e0a\u8d39\u529b\u5904\u7406\uff0c\u76f4\u63a5\u5c31\u53ef\u4ee5\u4f7f\u7528\u3002    \n\u8f93\u51fa\u6211\u6bd4\u8f83\u61d2\u3002\u3002\u4f18\u5148\u961f\u5217\u5f04\u4e86\u4e00\u4e0b      \n\u53e6\u5916\u6ce8\u610fnull\u522b\u5fd8\u5199\u4e86\u3002\u3002\u6211\u63d0\u4ea4\u7684\u65f6\u5019\u5c31\u5fd8\u4e86 80\u5206\n```\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<queue>\nusing namespace std;\nint n,p;\nstruct fuck\n{\n    int y;\n    int val;\n    int next;\n}a[30010];\nint c[110],u[110],in[110],out[110],cnt,head[30010];\nbool v[110];\nqueue <int> q;\nstruct gay\n{\n    int x;\n    friend bool operator < (gay a,gay b)\n    {\n        return a.x>b.x;\n    }\n}g;\npriority_queue <gay> print;\nvoid add(int x,int y,int val)\n{\n    cnt++;\n    a[cnt].y=y;\n    a[cnt].val=val;\n    a[cnt].next=head[x];\n    head[x]=cnt;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&p);\n    for (int i=1;i<=n;i++)\n    {\n        scanf(\"%d%d\",&c[i],&u[i]);\n        if (c[i]!=0) q.push(i),v[i]=1;\n        else c[i]-=u[i];\n    }\n    for (int i=1;i<=p;i++)\n    {\n        int x,y,val;\n        scanf(\"%d%d%d\",&x,&y,&val);\n        add(x,y,val);\n        in[y]++;\n        out[x]++;\n    }\n    while (!q.empty())\n    {\n        int x=q.front();\n        q.pop();\n        v[x]=0;\n        if (c[x]<0) continue;\n        for (int i=head[x];i;i=a[i].next)\n        {\n            int y=a[i].y;\n            if (v[y]==0)\n            {\n                c[y]+=a[i].val*c[x];\n                q.push(y),v[y]=1;\n            }\n            else\n            {\n                c[y]+=a[i].val*c[x];\n            }\n        }\n    }\n    for (int i=1;i<=n;i++)\n    {\n        if (out[i]==0&&c[i]>0)\n        {\n            gay gg;\n            gg.x=i;\n            print.push(gg);\n        }\n    }\n    if (print.empty())\n    {\n        printf(\"NULL\");\n        return 0;\n    }\n    while (!print.empty())\n    {\n        gay t=print.top();\n        print.pop();\n        printf(\"%d %d\\n\",t.x,c[t.x]);\n    }\n    return 0;\n}\n/*input:\n5 6\n1 0\n0 -1\n0 1\n0 0\n0 0\n1 2 -1\n1 3 1\n1 4 -1\n2 5 100\n3 5 1000\n4 5 10000\nout:\nNULL\n*/\n```",
        "postTime": 1522746192,
        "uid": 48628,
        "name": "faker121",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1038 \u3010\u795e\u7ecf\u7f51\u7edc\u3011"
    },
    {
        "content": "[\u65e5\u5e38\u5ba3\u4f20\u535a\u5ba2\u3002](http://teafrog26.lofter.com/)\n\n\u9898\u76ee\u5df2\u7ecf~~\u663e\u7136\u5730~~\u544a\u8bc9\u6211\u4eec\uff0c\u6211\u4eec\u9700\u8981\u4ece\u5165\u5ea6\u4e3a0\u7684\u70b9\u5f00\u59cb\u904d\u5386\uff0c\u76f4\u5230\u51fa\u5ea6\u4e3a0\u7684\u70b9\uff0c\u4ece\u8fd9\u91cc\u6211\u4eec\u5c31\u53ef\u4ee5~~\u663e\u7136\u5730~~\u770b\u51fa\u6765\u8fd9\u662f\u4e00\u4e2a\u62d3\u6251\u6392\u5e8f\u3002\n\n\u4f46\u9898\u76ee\u7684\u7ec6\u8282\u7ed9\u51fa**\u5728\u8f93\u5165\u5c42\u795e\u7ecf\u5143\u88ab\u6fc0\u53d1\u4e4b\u540e**\uff0c\u8bf4\u660e\u5982\u679c\u662f\u8f93\u5165\u5c42\uff0c\u90a3\u4e48u[i]\u4e3a1\u62160\u90fd\u6ca1\u6709\u5173\u7cfb\u3002\n\n## \u5b83\u4e00\u5b9a\u4f1a\u88ab\u6fc0\u6d3b\u3002\n\n\u4e8e\u662f\u6211\u4eec\u9700\u8981\u9884\u5904\u7406\u8fd9\u79cd\u60c5\u51b5\uff0c\u5e76\u9884\u5904\u7406\u51fa\u5ea6\u4e3a0\u7684\u70b9\u6765\u65b9\u4fbf\u8f93\u51fa\u3002\n\n\uff08\u7ed9\u4e88\u65b0\u4eba\uff09\u62d3\u6251\u6392\u5e8f\u53ef\u4ee5\u628a\u4e00\u4e2aDAG\uff08\u6709\u5411\u4e94\u73af\u56fe\uff09\u91cc\u6240\u6709\u7684\u70b9\u6392\u6210\u4e00\u4e2a\u7ebf\u6027\u5e8f\u5217\uff0c\u8fd9\u4e2a\u5e8f\u5217\u4fdd\u8bc1\u4e00\u6761\u8fb9\u7684from\u70b9\u5728to\u70b9\u4e4b\u524d\u8f93\u51fa\u3002\n\n\u6211\u7684\u4ee3\u7801\u957f\u5ea6\u53ea\u670950\u884c\uff0c\u7f16\u7a0b\u590d\u6742\u5ea6\u5e94\u8be5\u662f\u6bd4\u8f83\u4f4e\u7684\uff0c\u975e\u5e38\u53cb\u597dXD\n\n```cpp\n#include<cstdio>\n#include<queue>\n#define neko 110\n#define meko 10010\n#define f(i,a,b) for(register int i=a;i<=b;++i)\nstruct node\n{\n    int u,v,w,next;\n}e[meko];\nint c[neko],u[neko],head[neko],dgr[neko],dgp[neko],n,m,t;\nvoid add(int x,int y,int z)\n{\n    e[++t].u=x;\n    e[t].v=y;\n    e[t].w=z;\n    e[t].next=head[x];\n    head[x]=t;\n    ++dgr[y],++dgp[x];\n}\nvoid topsort()\n{\n    std::queue<int>q;int x,v;\n    f(i,1,n)if(!dgr[i])q.push(i);\n    while(!q.empty())\n    {\n        x=q.front();\n        q.pop();\n        for(register int i=head[x];i;i=e[i].next)\n        {\n            v=e[i].v;\n            --dgr[v];\n            if(c[x]>0)c[v]+=c[x]*e[i].w;\n            if(!dgr[v])q.push(v);\n        }\n    }\n}\nint main()\n{\n    int x,y,z;bool flag=0;\n    scanf(\"%d%d\",&n,&m);\n    f(i,1,n)\n    {\n        scanf(\"%d%d\",&c[i],&u[i]);\n        if(c[i]==0)c[i]-=u[i];\n    }\n    f(i,1,m)scanf(\"%d%d%d\",&x,&y,&z),add(x,y,z);\n    topsort();\n    f(i,1,n)if(c[i]>0&&dgp[i]==0)printf(\"%d %d\\n\",i,c[i]),flag=1;//dgp is about output\n    if(!flag)printf(\"NULL\\n\");return 0;\n}\n```",
        "postTime": 1508417317,
        "uid": 7020,
        "name": "teafrogsf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1038 \u3010\u795e\u7ecf\u7f51\u7edc\u3011"
    },
    {
        "content": "~~\u6211\u611f\u89c9\u6211\u7684\u601d\u8def\u5e76\u6ca1\u6709\u90a3\u4e48\u597d\uff0c\u4e0d\u8fc7\u9002\u5408\u521a\u5b66\u56fe\u8bba\u7684\u65b0\u624b\u3002~~\n# \u5206\u6790\n## 1.\u53d8\u91cf\n1.\u7ed3\u6784\u4f53vertex(\u9876\u70b9)\uff1a\u90bb\u63a5\u8868\u7684head,rhead\uff1b\u62d3\u6251\u6392\u5e8f\u7684ind(\u5165\u5ea6)\uff1b\u8fd8\u6709state(\u72b6\u6001),value(\u9608\u503c),depth(\u5c42\u6570)\u3002\n\n2.\u7ed3\u6784\u4f53edge(\u8fb9)\uff1au(\u8d77\u70b9),v(\u7ec8\u70b9),w(\u6743\u503c)\uff1b\u90bb\u63a5\u8868\u7684next\u3002\n\n3.dv\u548cldv\uff1adv[i][j]\u8868\u793a\u7b2ci\u5c42\u7684\u7b2cj\u4e2a\u70b9\u7f16\u53f7\u662f\u591a\u5c11\uff1bldv[i]\u8868\u793a\u7b2ci\u5c42\u6709\u591a\u5c11\u4e2a\u70b9\u3002\n## 2.\u51fd\u6570\n1.addEdge(u,v,w)\uff1a\u90bb\u63a5\u8868\u4e2d\u7684\u5efa\u8fb9\u3002\n\n2.readIn()\uff1a\u5c31\u662f\u8bfb\u5165\u3002\n\n3.toposort()\uff1a\u62d3\u6251\u6392\u5e8f\uff0c\u5177\u4f53\u53c2\u89c1\u540e\u9762\u4ee3\u7801\u3002\n\n4.Changestate()\uff1a\u6539\u53d8\u72b6\u6001\uff0c\u9700\u8981\u4e00\u5c42\u4e00\u5c42\u904d\u5386\u3002\n\n5.writeOut()\uff1a\u5c31\u662f\u8f93\u51fa\u3002\n## 3.\u5751\n\u672c\u9898\u4e2d\u5751\u8fd8\u633a\u591a\u3002\n\n1.\u53ea\u6709\u5f53\u67d0\u4e2a\u70b9\u5174\u594b\u65f6\u624d\u80fd\u5f80\u540e\u4f20\u9012\u4fe1\u53f7\u3002\n\n2.\u7b2c\u4e00\u5c42\u4e0d\u9700\u8981\u51cf\u53bb\u9608\u503c\u3002\n\n3.\u5982\u679c\u8f93\u51fa\u5c42\u6ca1\u6709\u5174\u594b\u7ec6\u80de\uff0c\u8981\u8f93\u51faNULL\u3002\n# \u4ee3\u7801\n~~\u6211\u8ba4\u4e3a\u6ca1\u591a\u5c11\u4eba\u559c\u6b22\u4e0a\u9762\u7684\u4e00\u901a\u5206\u6790\u5427~~\uff0c\u90a3\u4e48\uff0c\u4f60\u4eec\u559c\u6b22\u7684\u4ee3\u7801\u6765\u4e86\u2014\u2014\n```cpp\n#include<queue>\n#include<cstdio>\nusing namespace std;\nconst int MAXN=110;\nint n,m;\nint tot=0;//\u5efa\u8fb9\u8981\u7528\nint sdepth,dv[MAXN][MAXN],ldv[MAXN];//sdepth\u8868\u793a\u603b\u5c42\u6570\nqueue<int> q;\nstruct Vertex{\n\tint head,rhead;\n\tint ind;\n\tint state,value;\n\tint depth;\n}vt[MAXN];\nstruct Edge{\n\tint u,v,w;\n\tint next;\n}e[MAXN*MAXN];\nvoid addEdge(int u,int v,int w){//\u90bb\u63a5\u8868\u5efa\u8fb9\n\te[++tot].u=u,e[tot].v=v,e[tot].w=w;\n\te[vt[u].rhead].next=tot;\n\tif(!vt[u].head) vt[u].head=tot;\n\tvt[u].rhead=tot;\n\tvt[v].ind++;//\u52a0\u5165\u5ea6\n}\nvoid readIn(){//\u8bfb\u5165\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++) scanf(\"%d%d\",&vt[i].state,&vt[i].value);\n\twhile(m--){\n\t\tint aa,bb,cc;//\u778e\u8d77\u7684\u53d8\u91cf\u540d\n\t\tscanf(\"%d%d%d\",&aa,&bb,&cc);\n\t\taddEdge(aa,bb,cc);\n\t}\n}\nvoid toposort(){//\u62d3\u6251\u6392\u5e8f\n\tint u,v;\n\tfor(int i=1;i<=n;i++){\n\t\tif(vt[i].ind==0){//\u5982\u679c\u5165\u5ea6\u4e3a0\n\t\t\tvt[i].depth=1;//\u5728\u7b2c\u4e00\u5c42\n\t\t\tdv[1][ldv[1]++]=i;//\u7b2c\u4e00\u5c42\u52a0\u4e0a\n\t\t\tq.push(i);//\u8fdb\u5165\u961f\u5217\n\t\t}\n\t}\n\twhile(!q.empty()){//\u961f\u5217\u4e0d\u4e3a\u7a7a\n\t\tu=q.front();q.pop();\n\t\tfor(int k=vt[u].head;k;k=e[k].next){//\u90bb\u63a5\u8868\n\t\t\tv=e[k].v;\n\t\t\tvt[v].ind--;//\u51cf\u5165\u5ea6\n\t\t\tif(vt[v].ind==0){//\u540c\u4e0a\uff0c1\u6539\u4e3avt[v].depth\n\t\t\t\tvt[v].depth=vt[u].depth+1;\n\t\t\t\tdv[vt[v].depth][ldv[vt[v].depth]++]=v;\n\t\t\t\tq.push(v);\n\t\t\t}\n\t\t}\n\t}\n\tsdepth=vt[u].depth;//\u603b\u6df1\u5ea6\u5c31\u662f\u6700\u540e\u4e00\u4e2a\u70b9\u7684\u6df1\u5ea6\n}\nvoid Changestate(){//\u6539\u53d8\u72b6\u6001\n\tfor(int i=1;i<=sdepth;i++){//\u4e00\u5c42\u4e00\u5c42\u904d\u5386\n\t\tfor(int j=0;j<ldv[i];j++){\n\t\t\tint id=dv[i][j];//\u7f16\u53f7\n\t\t\tif(i>1) vt[id].state-=vt[id].value;//\u975e\u7b2c\u4e00\u5c42\u7684\u51cf\u53bb\u9608\u503c\n\t\t\tif(vt[id].state<=0) continue;//\u6ca1\u6709\u5174\u594b\n\t\t\tfor(int k=vt[id].head;k;k=e[k].next){//\u90bb\u63a5\u8868\u4fbf\u5229\n\t\t\t    int v=e[k].v;\n\t\t\t    vt[v].state+=e[k].w*vt[id].state;//\u516c\u5f0f\n\t\t    }\n\t\t}\n\t}\n}\nvoid writeOut(){//\u8f93\u51fa\n\tbool flag=1;//\u8bb0\u5f55\u662f\u5426\u6709\u8f93\u51fa\n\tfor(int i=0;i<ldv[sdepth];i++){\n\t\tint id=dv[sdepth][i];\n\t\tif(vt[id].state>0){//\u6ee1\u8db3\u6761\u4ef6\n\t\t\tprintf(\"%d %d\\n\",id,vt[id].state);\n\t\t\tflag=0;//\u6807\u8bb0\n\t\t}\n\t}\n\tif(flag) printf(\"NULL\");//\u6ca1\u6709\u8f93\u51fa\u5c31\u8f93\u51faNULL\n}\nint main(){\n\treadIn();\n\ttoposort();\n\tChangestate();\n\twriteOut();\n\treturn 0;//\u534e\u4e3d\u7ed3\u675f\n}\n```\n\u4e0d\u7ba1\u5199\u7684\u597d\u8fd8\u662f\u4e0d\u597d\uff0c\u6211\u6bd5\u7adf\u82b1\u4e86\u8fd9\u4e9b\u65f6\u95f4\u6765\u5199\u8fd9\u7bc7\u9898\u89e3\uff0c\u6240\u4ee5\u522b\u5fd8\u4e86\u70b9\u4e2a\u8d5e\uff01",
        "postTime": 1570364720,
        "uid": 130981,
        "name": "dingcx",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1038 \u3010\u795e\u7ecf\u7f51\u7edc\u3011"
    },
    {
        "content": "\u7b97\u6cd5\uff1a\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22&&\u62d3\u6251\u6392\u5e8f\n\n\u601d\u8def\uff1a\u56e0\u4e3a\u56fe\u662f\u4e00\u5c42\u4e00\u5c42\u7684\uff0c\u6240\u4ee5\u628a\u5165\u5ea6\u4e3a0\u7684\u70b9\u90fd\u5165\u961f\u5217\uff0c\u5224\u65ad\u72b6\u6001\u662f\u4e0d\u662f\u53ef\u4ee5\u4f20\u9012\u4fe1\u53f7\uff0c\u53ef\u4ee5\u4f20\u7684\u8bdd\u5c31\u6309\u516c\u5f0f\u4f20\u5230\u4e0b\u4e00\u4e2a\u518d\u628a\u88ab\u4f20\u7684\u5165\u961f\uff0c\u76f4\u5230\u4f20\u5230\u6700\u540e\u4e00\u5c42\u3002\u56e0\u4e3a\u4e0d\u4f1a\u4f20\u7ed9\u540c\u5c42\u7684\u548c\u4e0b\u5c42\u7684\u8282\u70b9\uff0c\u6240\u4ee5\u53ef\u4ee5\u6309\u987a\u5e8f\u4e00\u904d\u641c\u5c31\u8fc7\u4e86\u3002\n\n\u6ce8\u610f\uff1a\u8fd9\u9898\u9762\u4e0d\u77e5\u9053\u5751\u4e86\u591a\u5c11\u4eba\u3002\u7b2c\u4e00\u5c42\u4e0d\u7528\u51cf\u9619\u503c\uff0c\u6700\u540e\u4e00\u5c42\u4e0d\u80fd\u6e05\u6389\u4fe1\u53f7\u3002\n\n```cpp\n#include <iostream>\n#define maxn 110\nusing namespace std;\nint n,p;\nint c[110],u[110],rd[110],cd[110];\nint g[110][110];\nint q[2000010];\nint main()\n{\n\tcin>>n>>p;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>c[i]>>u[i];\n\t\tc[i]-=u[i];\n\t}\n\tfor(int i=1;i<=p;i++)\n\t{\n\t\tint s,t;\n\t\tcin>>s>>t;\n\t\tcin>>g[s][t];\n\t\trd[t]++;\n\t\tcd[s]++;\n\t}\n\tint head=0,tail=1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(rd[i]==0)\n\t\t{\n\t\t\tq[++tail]=i;\n\t\t\tc[i]+=u[i];\n\t\t}\n\t}\n\twhile(head<tail)\n\t{\n\t\thead++;\n\t\tif(c[q[head]]>0)\n\t\t{\n\t\t\tfor(int i=1;i<=n;i++)\n\t\t\t{\n\t\t\t\tif(g[q[head]][i]!=0)\n\t\t\t\t{\n\t\t\t\t\tc[i]+=g[q[head]][i]*c[q[head]];\n\t\t\t\t\tq[++tail]=i;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(cd[q[head]]!=0)\n\t\t\tc[q[head]]=0;\n\t\t}\n\t}\n\tint flag=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(c[i]>0)\n\t\t{\n\t\t\tflag=1;cout<<i<<\" \"<<c[i]<<endl;\n\t\t}\n\t}\n\tif(flag==0)\n\tcout<<\"NULL\"<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1545743735,
        "uid": 109182,
        "name": "MakotoTSK",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1038 \u3010\u795e\u7ecf\u7f51\u7edc\u3011"
    },
    {
        "content": "\u5148\u5410\u69fd\u4e00\u4e0b\u9898\u610f\u4e0d\u6e05\u3002\u3002\n\n\u7b2c\u4e00\u5c42\u4e0d\u9002\u7528\u516c\u5f0f\u597d\u6b79\u4e5f\u660e\u786e\u8bf4\u4e00\u4e0b\u5427\u3002\u3002\u7b2c3\u548c\u7b2c5\u4e2a\u70b9\u5361\u4e86\u5f88\u4e45\u5f88\u4e45\u554aqwq\n\n\u7136\u540e\u5199\u505a\u6cd5\uff0c\u65e2\u7136\u56fe\u662f\u5206\u5c42\u7684\uff0c\u663e\u7136\u53ef\u4ee5\u7528BFS\u904d\u5386\u6574\u5f20\u56fe\uff0c\u56e0\u4e3a\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u641c\u7d22\u4e00\u4e2a\u70b9\u65f6\uff0c\u5b83\u4e0a\u4e00\u5c42\u7684\u6240\u6709\u70b9\u5df2\u7ecf\u88ab\u5168\u90e8\u904d\u5386\uff0c\u8fd9\u4e2a\u70b9\u7684\u503c\u4e5f\u5c31\u4e0d\u4f1a\u518d\u6539\u53d8\u3002\u53ea\u8981\u4e00\u4e2a\u70b9\u7684C\u503c\u5728\u67d0\u6b21\u66f4\u65b0\u540e\u5927\u4e8e0\u5c31\u76f4\u63a5\u5165\u961f\n\n\u6bcf\u6b21\u626b\u63cf\u70b9\u7684\u65f6\u5019\u8981\u989d\u5916\u68c0\u67e5\u4e00\u4e0b\u8be5\u70b9\u7684C\u662f\u5426\u5927\u4e8e0\uff0c\u56e0\u4e3a\u53ef\u80fd\u5728\u5165\u961f\u4ee5\u540e\u6709\u67d0\u6b21\u66f4\u65b0\u5bfc\u81f4\u6539\u70b9\u7684C\u503c\u53d8\u4e3a\u5c0f\u4e8e0\n\n\u6700\u540e\u626b\u63cf\u6240\u6709\u7684\u70b9\u8bb0\u5f55\u7b54\u6848\uff0c\u6392\u5e8f\u4ee5\u540e\u8f93\u51fa\u3002\n\n\u5982\u679c\u53d1\u73b0\u7b54\u6848\u7684\u6570\u91cf\u7b49\u4e8e0\uff0c\u5c31\u8f93\u51faNULL\n\n```cpp\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#include<set>\n#define MAXN 100\nusing namespace std;\nint u[MAXN+10],c[MAXN+10];\nint cnt=0;\nstruct road{\n    int next,v,tv;\n}roads[MAXN\\*MAXN+10]; //\u90bb\u63a5\u8868\nint list[MAXN+10];\nint queue[MAXN\\*MAXN\\*MAXN+10];\nint ind[MAXN+10],outd[MAXN+10];\nbool flag[MAXN+10];\nint h=1,t=0,n,p;\nint ans[MAXN+10];\nvoid add(int u,int v,int w){\n    cnt++;\n    roads[cnt].v=w;\n    roads[cnt].tv=v;\n    roads[cnt].next=list[u];\n    list[u]=cnt;\n}\nint main(){\n    scanf(\"%d%d\",&n,&p);\n    memset(ind,0,sizeof(ind));\n    memset(outd,0,sizeof(outd));\n    memset(flag,0,sizeof(flag));\n    for (int i=1;i<=n;i++){\n        scanf(\"%d%d\",&c[i],&u[i]);\n        if (c[i]) u[i]=0; //\u9898\u76ee\u6700\u5927\u7684\u5751\u3002\u3002\u5982\u679cc\u7684\u521d\u59cb\u503c\u5927\u4e8e0\u4ee3\u8868\u8fd9\u4e2a\u70b9\u662f\u7b2c\u4e00\u5c42\uff0c\u7b2c\u4e00\u5c42\u7684u\u6ca1\u6709\u7528\u3002\u3002\n        c[i]-=u[i]; //\u76f4\u63a5\u9ed8\u8ba4\u4e3ac\u5c31\u662f-u\n    }\n    for (int i=1;i<=p;i++){\n        int x,y,w;\n        scanf(\"%d%d%d\",&x,&y,&w);\n        ind[y]++; //\u8ba1\u7b97\u5165\u5ea6\u548c\u51fa\u5ea6\n        outd[x]++;\n        add(x,y,w);\n    }\n    for (int i=1;i<=n;i++){ //\u5c06\u6240\u6709\u7b2c\u4e00\u5c42\u7684\u8282\u70b9\u5165\u961f\n        if (ind[i]==0&&(c[i]>0)){\n            t++;\n            queue[t]=i;\n        }\n    }\n    while (h<=t){ //\u90bb\u63a5\u8868\u904d\u5386\u6574\u5f20\u56fe\n        if (c[queue[h]]<0) { //\u91cd\u590d\u68c0\u67e5\u961f\u5217\u5143\u7d20\u6709\u6548\u6027\n            h++;\n            continue;\n        }\n        int w=list[queue[h]];\n        while (w){\n            c[roads[w].tv]+=roads[w].v\\*c[queue[h]]; //\u66f4\u65b0\u503c\n            if (c[roads[w].tv]>0&&!flag[roads[w].tv]){ //\u4e00\u65e6c\u5927\u4e8e0\u76f4\u63a5\u5165\u961f\n                t++;\n                queue[t]=roads[w].tv;\n                flag[roads[w].tv]=1;\n            }\n            w=roads[w].next;\n        }\n        h++;\n    }\n    int tot=0;\n    for (int i=1;i<=n;i++){ //\u7edf\u8ba1\u7b54\u6848\n        if (outd[i]==0&&c[i]>0){\n            tot++;ans[tot]=i;\n        }\n    }\n    sort(ans+1,ans+tot+1); //\u6392\u5e8f\u540e\u8f93\u51fa\n    for (int i=1;i<=tot;i++){\n        printf(\"%d %d\\n\",ans[i],c[ans[i]]);\n    }\n    if (tot==0) printf(\"NULL\");\n}",
        "postTime": 1508475499,
        "uid": 8876,
        "name": "hibiki",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1038 \u3010\u795e\u7ecf\u7f51\u7edc\u3011"
    },
    {
        "content": "**\u592a\u771f\u5b9e\u4e86\uff0c\u8fd9\u9053\u9898\u505a\u4e86\u6211\u4e00\u5e74**\n\n\u5176\u5b9e\u8fd9\u9053\u9898\u7684\u601d\u8def\u8fd8\u662f\u5f88\u7b80\u5355\u7684\uff0c\u76f8\u4fe1\u5404\u4f4d\u5927\u4f6c\u80af\u5b9a\u8f7b\u8f7b\u677e\u677e\u5c31\u628a\u8fd9\u9053\u9898\u7ed9\u5207\u4e86\n\n\u9996\u5148\u8fd9\u9053\u9898\u7b2c\u4e00\u773c\u770b\u4e0a\u53bb\u5c31\u5e94\u8be5\u80fd\u60f3\u5230\u7528\u7684\u662fBFS\u7684\u601d\u60f3\uff0c\u518d\u770b\u9898\u76ee\u4e2dC[i]\u7684\u8ba1\u7b97\u65b9\u5f0f\uff0c\u663e\u7136\u662f\u6709\u4f20\u9012\u6027\u7684\uff0c\u90a3\u4e48\u5c31\u80fd\u591f\u786e\u5b9a\u8981\u7528**\u62d3\u6251\u6392\u5e8f**\n\n\u5148\u8d34\u4ee3\u7801\u5728\u8bf4\u7ec6\u8282\u3002\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define R register int\n#define debug cout<<\"debug\"<<endl;\nusing namespace std;\nconst int N=105;\ninline int read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9') {if(ch=='-') f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') x=(x<<3)+(x<<1)+ch-'0',ch=getchar();\n\treturn x*f;\n} \nint tot,n,p,sum[N];\nint head[N],next[N<<1],to[N<<1],val[N<<1],U[N],C[N],chu[N],ru[N],Ru[N];\ninline void add(int x,int y,int z)\n{\n\tnext[++tot]=head[x];\n\thead[x]=tot;\n\tto[tot]=y;\n\tval[tot]=z;\n}\ninline void toposort()\n{\n\tqueue<int> q;\n\tfor(R i=1;i<=n;i++) if(ru[i]==0) q.push(i);\n\twhile(!q.empty())\n\t{\n\t\t//if(ru[i]!=\n\t\tint x=q.front();q.pop();\n\t\tif(Ru[x]>0)\n\t \t C[x]=sum[x]-U[x];\n\t\tfor(R i=head[x];i;i=next[i])\n\t\t{\n\t\t\tint t=to[i];\n\t\t\tif(C[x]>0)sum[t]+=val[i]*C[x];\n\t\t\tru[t]--;\n\t\t\tif(ru[t]==0) q.push(t);\n\t\t}\n\t}\n}\nint main()\n{\n\tn=read();p=read();\n\tfor(R i=1;i<=n;i++)\n\t{\n\t\tC[i]=read();\n\t\tU[i]=read();\n\t}\n\tfor(R i=1;i<=p;i++)\n\t{\n\t\tint x=read(),y=read(),z=read();\n\t\tadd(x,y,z);\n\t\tchu[x]++;\n\t\tru[y]++;\n\t\tRu[y]++;\n\t}\n\t//for(R i=1;i<=n;i++) cout<<\"\u51fa\u5ea6 \"<<chu[i]<<\" \"<<\"\u5165\u5ea6 \"<<ru[i]<<endl;\n\t//memcpy(Ru,ru,sizeof(ru));\n\t//for(R i=1;i<=n;i++) cout<<ru[i]<<' '<<Ru[i]<<endl;\n\ttoposort();\n\tbool flag=false;\n\tfor(R i=1;i<=n;i++)\n\t{\n\t\tif(chu[i]==0&&C[i]>0)\n\t\tprintf(\"%d %d\\n\",i,C[i]),flag=true;\n\t}\n\tif(!flag) cout<<\"NULL\";\n\treturn 0;\n}\n```\n\u53ef\u80fd\u5404\u4f4d\u5927\u4f6c\u4f1a\u89c9\u5f97\u6211\u7684\u6570\u7ec4\u5f00\u7684\u591a\u5f88\u9ebb\u70e6\u4f46\u662f\u6211\u89c9\u5f97\u8fd9\u6837\u7684\u5b9e\u73b0\u5e94\u8be5\u7b97\u5f97\u4e0a\u662f\u633a\u65b9\u4fbf\u7684\u4e86\n\n\u56e0\u4e3a\u8f93\u5165\u5c42\u7684C\u7684\u503c\uff0c\u4e5f\u5c31\u662f\u8282\u70b9\u7684\u72b6\u6001\u5728\u4e00\u5f00\u59cb\u5c31\u5df2\u7ecf\u7ed9\u51fa\uff0c\u5373**\u521d\u59cb\u72b6\u6001**\uff0c\u6240\u4ee5\u5728\u6267\u884ctopo\u7684\u8fc7\u7a0b\u4e2d\u4e0d\u53ef\u4ee5\u968f\u610f\u66f4\u65b0\u5b83\u4eec\u7684\u503c\u3002\u800c\u663e\u7136\uff0c\u5b83\u4eec\u7684\u5171\u540c\u7279\u70b9\u662f**\u5165\u5ea6\u4e3a0**\uff0c\u6240\u4ee5\u5c31\u9700\u8981\u5728\u66f4\u65b0C[i]\u4e4b\u524d\u8fdb\u884c\u5224\u5b9a\uff1ai\u7684\u5165\u5ea6\u662f\u5426\u5927\u4e8e0\uff0c\u5927\u4e8e0\u5219\u66f4\u65b0\u3002\u53ef\u662f\u5982\u679c\u6211\u4eec\u5355\u5355\u52a0\u5165\u8fd9\u4e2a\u5224\u5b9a\uff0c\u5c31\u4f1a\u5bfc\u81f4\u6bcf\u4e00\u4e2a\u70b9\u7684C\u90fd\u5f97\u4e0d\u5230\u66f4\u65b0\uff08\u663e\u800c\u6613\u89c1\uff09\uff0c\u90a3\u600e\u4e48\u529e\u5462\uff1f\n\n\u6211\u4eec\u53ef\u4ee5\u65b0\u5efa\u4e00\u4e2a\u6570\u7ec4\uff0c\u8bb0\u5f55\u6240\u6709\u70b9\u7684\u5165\u5ea6\uff0c**\u5e76\u4e14\u6c38\u8fdc\u4e0d\u8fdb\u884c\u66f4\u65b0**\uff0c\u8fd9\u6837\u7684\u8bdd\u4e0a\u8ff0\u95ee\u9898\u5c31\u5f97\u5230\u4e86\u89e3\u51b3\u3002\n\n\u7136\u540e\u5c31\u662f\u5f88\u5751\u7b2c\u4e00\u70b9\u3002\u3002\u6211\u660e\u660e\u4e00\u5f00\u59cb\u5c31\u6ce8\u610f\u5230\u4e86\uff0c\u4f46\u662f\u4e00\u76f4\u8ba4\u4e3a\u8fd9\u4e2a\u6761\u4ef6\u5bf9\u6700\u7ec8\u7b54\u6848\u6ca1\u6709\u5f71\u54cd\uff0c\u5bb3\u6211WA\u4e86\u540c\u4e00\u4e2a\u70b9\u65e0\u6570\u6b21\u3002\u3002\n\n\u5728\u66f4\u65b0\u6539\u8282\u70b9\u5bf9sum\u6570\u7ec4\u7684\u5f71\u54cd\u65f6\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u52a0\u4e0a\u4e00\u4e2a\u5224\u5b9a\uff1aC[i]\u662f\u5426\u5927\u4e8e\u96f6\uff0c\u56e0\u4e3a**\u53ea\u6709\u6d3b\u8dc3\u7684\u8282\u70b9\u624d\u4f1a\u5411\u540e\u4f20\u9012\u4fe1\u53f7**\u3002\n\n\u81f3\u6b64\u672c\u9898\u5b8c\u7f8e\u89e3\u51b3\uff0c\u4f46\u662f\u522b\u5fd8\u4e86\u65e0\u89e3\u8f93\u51fa\u7684NULL.",
        "postTime": 1574305964,
        "uid": 195044,
        "name": "2233\u9897GoldenEgg",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1038 \u3010\u795e\u7ecf\u7f51\u7edc\u3011"
    },
    {
        "content": "## \u4e2a\u4eba\u8ba4\u4e3a\u8fd9\u9898\u6570\u636e\u53ef\u52a0\u5f3a\n\n//\u5f53\u795e\u7ecf\u5143\u5904\u4e8e\u5174\u594b\u72b6\u6001\u65f6,\u4e0b\u4e00\u79d2\u5b83\u4f1a\u5411\u5176\u4ed6\u795e\u7ecf\u5143\u4f20\u9001\u4fe1\u53f7\n\n\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u5c0f\u4e8e0\uff0c\u5c31\u4e0d\u4f1a\u5411\u4e0b\u4f20\u503c\uff08\u50cf#3\uff09\n\n\u591a\u51fa\u51e0\u4e2a\u50cf#3\u8fd9\u6837\u7684\u70b9\u5e94\u8be5\u4f1a\u5361\u6b7b\u5f88\u591a\u4eba\u5427\n\n~~\u53cd\u6b63\u6211\u662f\u5165\u5751\u4e86\uff08\u9003\uff09~~\n\n\u5e9f\u8bdd\u4e0d\u591a\u8bf4\uff0c\u5f00\u8bb2\uff1a\n\n\u50cf\u8fd9\u79cd\u5b50\u5de5\u7a0b\u4e4b\u95f4\u5148\u540e\u5173\u7cfb\u975e\u5e38\u660e\u663e\u7684\u9898\u4e00\u822c\u90fd\u662f\u62d3\u6251\u6392\u5e8f\n\n\u62d3\u6251\u6392\u5e8f\u4fbf\u4e8e\u6211\u4eec\u5904\u7406\u6bcf\u4e00\u5c42\u5411\u4e0b\u7684\u7ed3\u679c\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint st[10001],head[10001],n,p,last[10001];\nint top,in_du[10001],out_du[10001],num_edge,c[10001],u[10001];\nstruct Edge\n{\n\tint next,to,d;\n}edge[10010];//\u70ed\u7231\u524d\u5411\u661f\u7684\u6211\ninline void add_edge(int from,int to,int dis)\n{\n\tedge[++num_edge].next=head[from];\n\tedge[num_edge].to=to;\n\tedge[num_edge].d=dis;\n\thead[from]=num_edge;\n}\nint main(){\n\tcin>>n>>p;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>c[i]>>u[i];\n\t\tif(c[i]>0) st[++top]=i;\n\t}\n\tfor(int i=1;i<=p;i++)\n\t{\n\t\tint x,y,d;\n\t\tcin>>x>>y>>d;\n\t\tadd_edge(x,y,d);\n\t\tin_du[y]++;\n\t\tout_du[x]++;//\u5224\u65ad\u662f\u5426\u4e3a\u8f93\u51fa\u5c42\n\t}\n\tint l=0;\n\twhile(top>0)\n\t{\n\t\tint x=st[top--];\n\t\tfor(int i=head[x];i;i=edge[i].next)\n\t\t{\n\t\t\tin_du[edge[i].to]--;\n\t\t\tif(c[x]>0) c[edge[i].to]+=edge[i].d*c[x];//\u907f\u514d#3\u8fd9\u6837\u7684\u5751\u70b9\n\t\t\tif(in_du[edge[i].to]==0)\n\t\t\t{\n\t\t\t\tst[++top]=edge[i].to;\n\t\t\t\tc[edge[i].to]-=u[edge[i].to];\n\t\t\t}\n\t\t}\n\t}\n\tbool bj=false;//\u5224\u65ad\u8f93\u51faNULL\n\tfor(int i=1;i<=n;i++)\n\t  if(out_du[i]==0&&c[i]>0) cout<<i<<' '<<c[i]<<endl,bj=true;\n\tif(bj==false) cout<<\"NULL\";\n}\n```",
        "postTime": 1533996040,
        "uid": 92496,
        "name": "\u6587\u6b66\u6b66\u667a\u969c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1038 \u3010\u795e\u7ecf\u7f51\u7edc\u3011"
    },
    {
        "content": "\u770b\u4e86\u8bb8\u591adalao\u9009\u62e9\u4e00\u5f00\u59cb\u90fd\u51cf\u6389\u9608\u503c\uff0c\u4e2a\u4eba\u611f\u89c9\u5904\u7406\u8d77\u6765\u6bd4\u8f83\u9ebb\u70e6\u3002\uff08\u5c1d\u8bd5\u7684\u65f6\u5019\u51fa\u5404\u79cd\u5404\u6837\u7684\u95ee\u9898\uff0c\u6bd4\u5982\u4e00\u4e2a\u795e\u7ecf\u5143\u6ca1\u6709\u5165\u8fb9\u4f46\u9608\u503c\u4e3a\u8d1f\uff0c\u5b83\u7684c\u503c\u7406\u5e94\u6ca1\u6709\u53d8\u5316\uff0c\u4f46\u5374\u4f1a\u53d8\u6210\u6b63\u7684\u8f93\u51fa\u3002\uff09\n\n\u56e0\u6b64\u65b0\u5f00\u4e00\u4e2a\u53d8\u91cf\u6765\u5b58\u6bcf\u4e2a\u795e\u7ecf\u5143\u662f\u5426\u51cf\u8fc7\u9608\u503c\uff0c\u5728\u6bcf\u6b21\u4f20\u8f93\u7684\u65f6\u5019\u8fdb\u884c\u5224\u65ad\u3002\n\n\u8003\u8651\u6bcf\u4e00\u4e2a\u795e\u7ecf\u5143\u53ea\u4f1a\u8fdb\u961f\u4e00\u6b21\uff0c\u56e0\u6b64\u7528\u4e00\u4e2abool\u6570\u7ec4\u6765\u5b58\u5165\u961f\u60c5\u51b5\uff0c\u907f\u514d\u53cd\u590d\u8fdb\u961f\u3002\n\n\u6700\u540e\uff0c\u53ef\u4ee5\u8003\u8651\u628a\u6bcf\u4e2a\u4f20\u8f93\u5b8c\u6bd5\u7684\u795e\u7ecf\u5143c\u503c\u90fd\u91cd\u7f6e\u4e3a0,\u4fbf\u4e8e\u8f93\u51fa\u3002\n\n\u4ee5\u4e0b\u9644AC\u4ee3\u7801\uff08\u7528\u5411\u91cf\u5199\u7684\uff0c\u5982\u6709\u95ee\u9898\u8bf7\u5404\u4f4ddalao\u6307\u6b63\uff09\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node{\n\tint to;\n\tint v;\n\tnode(int a,int b)\n\t{\n\t\tto=a;\n\t\tv=b;\n\t}\n};\nstruct S{\n\tint u;\n\tint num;\n\tint c;\n\tint pd;\n}s[105];\nvector<node>v[110];//\u7528\u5411\u91cf\u6765\u5b58\u56fe\nqueue<int>q;\nint n,a,b,C,p,sum=0;\nbool inque[105];\nint main()\n{\n\tcin>>n>>p;\n\tfor(int i=1;i<=n;i++)\n\t   {\n\t   \ts[i].num=i;\n\t   \tcin>>s[i].c>>s[i].u;\n\t  // \tif(s[i].c<=0) s[i].c-=s[i].u;\n      //    \u672c\u6765\u8003\u8651\u51cf\u6389\u9608\u503c\u7684\uff0c\u540e\u6765\u653e\u5f03\u4e86233333333\n\t   }\n\tfor(int i=1;i<=p;i++)\n\t{\n\t\tcin>>a>>b>>C;\n\t\tv[a].push_back(node(b,C));\n\t}\n\tfor(int i=1;i<=n;i++)\n\t   if(s[i].c>0) q.push(i);\n\twhile(!q.empty())\n\t{\n\t\tint x=q.front();\n\t\tq.pop();\n        //\u4e0b\u9762\u8fd9\u4e00\u6bb5\u6bd4\u8f83\u590d\u6742\uff0c\u56e0\u4e3a\u4e0d\u4f1a\u5199\u90bb\u63a5\u8868\uff08\u5927\u96fe\n\t\tfor(int i=0;i<v[s[x].num].size();i++)\n\t\t   {\n\t\t   s[v[s[x].num[i].to].c=s[v[s[x].num[i].to].c+v[s[x].num][i].v*s[x].c;\n\t\t   \tif(!s[v[s[x].num][i].to].pd) s[v[s[x].num][i].to].c-=s[v[s[x].num][i].to].u;\n\t\t\ts[v[s[x].num][i].to].pd=1;\n\t\t   \tif(s[v[s[x].num][i].to].c>0&&!inque[s[v[s[x].num][i].to].num])\n\t\t\t { \n\t\t\t   //s[v[s[x].num][i].to].c=s[v[s[x].num][i].to].c-s[v[s[x].num][i].to].u; \n\t\t\t   inque[s[v[s[x].num][i].to].num]=1;\n\t\t\t   q.push(v[s[x].num][i].to);\n\t\t\t }\n\t\t}\n\t\tif(!v[x].empty()) //\u6709\u51fa\u8fb9\uff0c\u8bf4\u660e\u4e0d\u662f\u8f93\u51fa\u5c42\n\t\t{\n\t\ts[x].c=0; //\u5c06\u4f20\u8f93\u5b8c\u6210\u7684\u795e\u7ecf\u5143\u91cd\u7f6e\u4e3a0\n\t\t}\t\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(s[i].c<=0) sum++;\n\t}\n\t\t//cout<<sum<<endl;\n       \n\tif(sum==n) cout<<\"NULL\"<<endl;\n\telse for(int i=1;i<=n;i++)\n\t{\n\t\tif(s[i].c>0)\n\t\t{\n\t\t\t\tcout<<s[i].num<<\" \"<<s[i].c<<endl;\n\t\t}\n\t}\n}\n\n```",
        "postTime": 1532569511,
        "uid": 89402,
        "name": "\u65e0\u8a00\u72ec\u4e0a\u673a\u623f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1038 \u3010\u795e\u7ecf\u7f51\u7edc\u3011"
    },
    {
        "content": "\u672c\u6765\u662f\u60f3\u5199[P1083 \u501f\u6559\u5ba4](https://www.luogu.org/problemnew/show/P1083) \u7684\uff0c\u7ed3\u679c\u9898\u53f7\u6253\u9519\u4e86 \u3002\u521a\u597d\u60f3\u6c34\u51e0\u9053\u56fe\u8bba\u7684\u9898\uff0c\u987a\u624bA\u4e86\u3002\n\u9898\u9762\u5373\u662f\u4e00\u4e2a\u7b80\u5316\u7248\u7684\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\uff1a\u7ed9\u51fa\u8f93\u5165\u5c42\u4ee5\u53ca\u5404\u795e\u7ecf\u5143\u53c2\u6570\uff0c\u6c42\u8f93\u51fa\u5c42\u72b6\u6001\u3002\n\n\u5206\u6790\u4e00\u4e0b\u3002\u7531\u9898\u610f\u53ef\u5f97\uff0c\u540c\u4e00\u5c42\u5185\u795e\u7ecf\u5143\u4e92\u4e0d\u5f71\u54cd\uff0c\u5e76\u4e14\u6bcf\u4e2a\u795e\u7ecf\u5143\u72b6\u6001\u53ea\u7531\u4e0a\u4e00\u5c42\u795e\u7ecf\u5143\u72b6\u6001\u4e0e\u8fb9\u6743\u5f71\u54cd\uff0c\u4e14\u53ea\u5f71\u54cd\u4e0b\u4e00\u5c42\u795e\u7ecf\u5143\u3002\n\n\u770b\u4e86\u4e00\u4e0b\u5176\u4ed6\u7684\u9898\u89e3\uff0c\u4f3c\u4e4e\uff08\u57fa\u672c\u4e0a\uff09\u90fd\u662f\u62d3\u6251\u6392\u5e8f+\u9012\u63a8\uff0c\u5b9e\u73b0\u8d77\u6765\u6709\u70b9\u9ebb\u70e6\uff08\u56e0\u4e3a\u6211\u6bd4\u8f83\u8822\uff0c\u62d3\u6251\u6392\u5e8f\u7ecf\u5e38\u6253\u7206\uff09\u3002\n\n\u5176\u5b9e\u53ef\u4ee5\u53cd\u5411\u5efa\u56fe\uff0c\u4ece\u6bcf\u4e2a\u8f93\u51fa\u5c42\u8282\u70b9\u5f00\u59cb\u8dd1\u4e00\u904d\u8bb0\u5fc6\u5316\u641c\u7d22\u5c31\u597d\u5566~\n\nAC\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct tEdge{int v,w,pre;}E[10001];int head[101],tot;\nvoid AddEdge(int u,int v,int w){E[++tot].v=v,E[tot].w=w,E[tot].pre=head[u],head[u]=tot;}\nint n,p,c[101],u[101],w[10001],cnt[101],vis[101];\nint DFS(int p){\n\tif(vis[p])return c[p];\n\tvis[p]=true;\n\tfor(int i=head[p];i;i=E[i].pre)\n\t\tc[p]+=DFS(E[i].v)*E[i].w;\n\tif(c[p]>0)return c[p];\n\telse return 0;\n}\nint main(){\n\tcin>>n>>p;\n\tfor(int i=1,u;i<=n;i++){\n\t\tcin>>c[i]>>u;\n\t\tif(!c[i])c[i]-=u;\n\t}\n\tfor(int i=1,u,v,w;i<=p;i++){\n\t\tcin>>u>>v>>w;\n\t\tAddEdge(v,u,w);\n\t\tcnt[u]++;\n\t}\n\tbool flag=false;\n\tfor(int i=1;i<=n;i++)\n\t\tif(cnt[i]==0)\n\t\t\tif(DFS(i)>0)cout<<i<<\" \"<<DFS(i)<<endl,flag=true;\n\tif(!flag)cout<<\"NULL\"<<endl;\n\treturn 0;\n}\n```\n\n\u6ce81\uff1a\u672c\u9898\u5751\u70b9\u8f83\u591a\u3002\n\n1.\u53ea\u8f93\u51fa\u975e0\u72b6\u6001\u7684\u8f93\u51fa\u5c42\u8282\u70b9\u3002\n\n2.\u5982\u679c\u6240\u6709\u8f93\u51fa\u5c42\u8282\u70b9\u72b6\u6001\u4e3a0\uff0c\u8f93\u51fa\u201cNULL\u201d\uff08\u5373\u6ca1\u6709\u5176\u4ed6\u8f93\u51fa\uff09\u3002\n\n3.\u8f93\u5165\u5c42\u72b6\u6001\u4e0d\u53d7\u9608\u503c\u5f71\u54cd\u3002\n\n\n\u6ce82\uff1a\u8c8c\u4f3c\u91cd\u65b0\u53d1\u660e\u4e86\u4e00\u904d\u62d3\u6251\u6392\u5e8f\u2026\u2026\u4e0d\u8fc7\u662f\u9012\u5f52\u5199\u6cd5\u7684\u3002",
        "postTime": 1540878142,
        "uid": 31952,
        "name": "\u5976\u6cb9\u9752\u8c46\u70e7\u9c7c",
        "ccfLevel": 0,
        "title": "P1038 \u795e\u7ecf\u7f51\u7edc"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.org/problem/P1038)\n\n# \u9898\u610f\u7406\u89e3/\u5206\u6790\n\n\u9996\u5148\u8bfb\u9898\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u5b83\u662f\u5206\u5c42\u7684\u56fe\uff0c\u6bcf\u4e00\u5c42\u53ea\u80fd\u7531\u4e0a\u4e00\u5c42\u6fc0\u6d3b\uff0c\u5411\u4e0b\u4e00\u5c42\u4f20\u9012\uff0c\u5e76\u4e14\u6bcf\u4e2a\u70b9\u53ef\u80fd\u88ab\u591a\u4e2a\u70b9\u66f4\u65b0\n\n~~\u6240\u4ee5\uff0cdfsgg~~\n\n\u90a3\u5c31\u8003\u8651bfs\uff08~~baidu~~ breadth first search\uff09\n\n\u6b63\u786e\u6027\u663e\u7136\uff0c\u56e0\u4e3a\u961f\u5217\u5148\u8fdb\u5148\u51fa\uff0c\u800c\u5148\u653e\u5165\u7684\u8282\u70b9\u5c42\u6570\u4e00\u5b9a$\\ge$\u540e\u653e\u5165\u7684\u8282\u70b9\u5c42\u6570\uff0c\u6240\u4ee5\u5f53\u4e00\u4e2a\u8282\u70b9\u88ab\u62ff\u51fa\u6765\u66f4\u65b0\u5176\u4ed6\u8282\u70b9\u65f6\uff0c\u4e00\u5b9a\u662f\u88ab\u66f4\u65b0\u5b8c\u4e86\u7684\uff0c\u4e5f\u5c31\u6b63\u786e\u4e86\u3002\n\n# \u6ce8\u610f\n- \u5bbd\u641c\u524d\u6240\u6709\u5165\u5ea6\u4e3a0\u7684\u70b9\u90fd\u8981\u52a0\u5165\u961f\u5217\n- \u5bbd\u641c\u65f6\u5224\u65adc\u662f\u5426$\\le$0\uff0c\u82e5\u6210\u7acb\u5219q.pop()\u7136\u540econtinue\n- \u8f93\u51fa\u65f6\u6ce8\u610f\u5224\u65ad\u662f\u5426\u6d3b\u8dc3\n- \u6ce8\u610fNULL\n- \u6ce8\u610f\u628a\u8f93\u51fa\u7684\u5e8f\u53f7\u5347\u5e8f\u6392\u5217\n\n# \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\nint mapp[101][101];\nint fi[101], en[101];\nint totf, tote;\nbool used[101];\nstruct hehe{\n\tint num;\n\tint c;\n\tint u;\n\tint in;\n\tint out;\n}a[101];\nsigned main()\n{\n\tint n, m;\n\tcin >> n >> m;\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tcin >> a[i].c >> a[i].u;\n\t\ta[i].num = i;\n\t\tif(!a[i].c) a[i].c -= a[i].u;\n\t}\n\tfor(int i = 1; i <= m; i++)\n\t{\n\t\tint x, y, w;\n\t\tcin >> x >> y >> w;\n\t\tmapp[x][y] = w;\n\t\ta[x].out++;\n\t\ta[y].in++;\n\t}\n\tfor(int i = 1;i <= n; i++)\n\t{\n\t\tif(!a[i].out) en[++tote] = i;\n\t\tif(!a[i].in) fi[++totf] = i;\n\t}\n\tqueue < int > q;\n\tfor(int i = 1; i <= totf; i++)\n\t{\n\t\tq.push(a[fi[i]].num);\n\t}\n\twhile(q.size())\n\t{\n\t\tint now = q.front();\n\t\tq.pop();\n\t\tif(a[now].c <= 0) continue;\n\t\tfor(int i = 1; i <= n; i++)\n\t\t{\n\t\t\tif(mapp[now][i])\n\t\t\t{\n\t\t\t\ta[i].c += mapp[now][i] * a[now].c;\n\t\t\t}\n\t\t\tif(!used[i])\n\t\t\t{\n\t\t\t\tq.push(a[i].num);\n\t\t\t\tused[i] = 1;\n\t\t\t}\n\t\t}\n\t\tif(a[now].out) a[now].c = 0;\n\t}\n\tbool f = 0;\n\tsort(en + 1, en + tote + 1);\n\tfor(int i = 1; i <= tote; i++)\n\t{\n\t\tif(a[en[i]].c > 0)\n\t\t{\n\t\t\tcout << en[i] << ' ' << a[en[i]].c << endl;\n\t\t\tf = 1;\n\t\t}\n\t}\n\tif(!f) cout << \"NULL\" << endl;\n\treturn 0;\n}\n\n```\n\u5b8c\u7ed3\u6492\u82b1~~~\n\n~~\uff08\u5f3a\u70c8\u8c34\u8d23\u51fa\u9898\u4eba\u7528\u811a\u9020\u6570\u636e\uff0c\u6211\u628a\u8f93\u51fa\u7684c\u6253\u6210u\u4e86\u8fd8\u670940\u5206\uff09~~",
        "postTime": 1570082277,
        "uid": 75954,
        "name": "AuCloud",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1038"
    },
    {
        "content": "## \u778e\u626f\u90e8\u5206\n\u5e76\u4e0d\u7406\u89e3\u4e3a\u4ec0\u4e48\u4f60\u4eec\u7684\u4ee3\u7801\u90fd\u8fd9\u4e48\u957f\u3002\u3002\u3002\u3002\u672c\u849f\u84bb\u4ece\u6ca1\u542c\u8bf4\u8fc7\u62d3\u6251\u6392\u5e8f\uff0c\u8fd9\u662f\u4e2a\u6211\u4eec\u6a21\u62df\u8d5b\u7684\u9898\uff08~~\u867d\u7136\u5f53\u65f6\u53ea\u5f97\u5230\u4e8640pts~~),\u8003\u8bd5\u540e\u89c9\u5f97\u81ea\u5df1\u4ee3\u7801\u5f88\u6ca1\u6bdb\u75c5\u554a\uff01\uff01\u7136\u540e\u4e0d\u670d\u6c14\u56de\u6765\u770b\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0\u4e24\u4e2a\u61a8\u6279\u9519\u8bef\uff0c\u6539\u4e86\u540e\u76f4\u63a5AC\uff08~~\u6539\u4ee3\u7801\u5f53\u65f6\u5468\u56f4\u540c\u5b66\u5728\u673a\u623f\u5f00Party\uff0c\u6761\u4ef6\u8270\u82e6\u7684AC~~\uff09\u3002\n\n\u9996\u5148\u5f53\u65f6\u62ff\u5230\u8fd9\u9053\u9898\u5c31\u662f\u8270\u96be\u7684\u8bfb\u9898\uff08\u7136\u800c\u8fd8\u662f\u6ca1\u8bfb\u61c2\uff0c\u5bfc\u81f4\u4e86\u4e0a\u9762\u7684\u4e24\u4e2a\u9519\u8bef\uff09\u3002\u8fd9\u9053\u9898\u4e5f\u8bb8\u662f\u6570\u636e\u6c34\uff0c\u6211\u6ca1\u6709\u600e\u4e48\u8d39\u8111\u7ec6\u80de\u5c31\u6539\u51fa\u6765\u4e86\uff0c\u4ee5\u4e0b\u8bf4\u6211\u7684\u601d\u8def\u3002\n## \u6b63\u6587\n\u9996\u5148\u5b58\u8fb9\uff0c\u5b58\u8fb9\u7684\u65f6\u5019\u8981\u8bb0\u5f97\u5f04\u4e00\u4e2abool\u6570\u7ec4\uff0c\u5c06\u6bcf\u6b21\u7684\u8d77\u70b9\u7684\u503c\u8bbe\u7f6e\u4e3atrue\u3002\u56e0\u4e3a\u53ea\u662f\u9700\u8981\u8f93\u51fa\u795e\u7ecf\u5143\u7684\u503c\uff0c\u4e5f\u5c31\u662f\u6ca1\u6709\u51fa\u8fb9\u7684\u795e\u7ecf\u5143\u7684\u503c\u3002\u7136\u540e\u6211\u5c31\u5f00\u59cb\u4e3b\u4f53\u7b97\u6cd5\uff0c\u679a\u4e3e\u6bcf\u4e2a\u70b9\uff0c\u7136\u540e\u679a\u4e3e\u6bcf\u4e2a\u7ec8\u70b9\u4e3a\u5f53\u524d\u679a\u4e3e\u7684\u70b9\u7684\u8fb9\uff08\u56e0\u4e3a\u6570\u636e\u8303\u56f4\u6bd4\u8f83\u5c0f\uff0c\u6211\u624d\u6709\u52c7\u6c14\u8fd9\u6837\u505a\uff09\u3002\u7136\u540e\u5224\u65ad\uff0c\u5982\u679c\u6b64\u8fb9\u8d77\u70b9\u7684c\u503c\u5927\u4e8e0\uff0c\u624d\u53ef\u4ee5\u4f20\u9012\uff08\u89c1\u9898\u76ee\uff09\uff0c\u7136\u540e\u8dd1\u516c\u5f0f\uff0c\u8fd9\u9898\u5c31\u505a\u5b8c\u4e86\u3002\n\n### PS\uff1a\u8f93\u51fa\u53ef\u80fd\u4e5f\u8981\u8d39\u70b9\u8111\u5b50\uff0c\u8fd9\u91cc\u5c31\u4e0d\u8bb2\u4e86\n\n## AC\u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<cmath>\n#define maxn 101\nusing namespace std;\nint c[maxn],u[maxn];\nint cnt,n,p;\nbool flag[maxn];\nstruct Edge{\n\tint from,to,worth;\n}e[maxn*4];\nint main()\n{\n\tscanf(\"%d%d\",&n,&p);\n\tfor(int i=1;i<=n;i++)\n\tscanf(\"%d%d\",&c[i],&u[i]);\n\tfor(int i=1;i<=p;i++)\n\t{\n\tscanf(\"%d%d%d\",&e[i].from,&e[i].to,&e[i].worth);\n\tflag[e[i].from]=true;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\tint sum=0;\n\tbool pan=false;\n\tfor(int bian=1;bian<=p;bian++)\n\tif(e[bian].to==i&&c[e[bian].from]>0)\n\t{\n\t\tpan=true;\n\t\tint j=e[bian].from;\n\t\tsum+=e[bian].worth*c[j];\n\t}\n\tif(pan)\n\tc[i]=sum-u[i];\n\t}\n\tbool pnl=false;\n\tfor(int i=1;i<=n;i++)\n\t{\n\tif(!flag[i]&&c[i]!=0)\n\tpnl=true;\n\t}\n\tif(!pnl)\n\t{\n\t\tprintf(\"NULL\\n\");\n\t\treturn 0;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(!flag[i]&&c[i]>0)\n\t\tprintf(\"%d %d\\n\",i,c[i]);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1566286304,
        "uid": 100899,
        "name": "\u5229\u5203\u968f\u4eba",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1038 \u3010\u795e\u7ecf\u7f51\u7edc\u3011"
    },
    {
        "content": "- \u53ef\u4ee5\u4ece\u4e00\u5f00\u59cb\u5c31\u628aUi\u51cf\u6389\uff0c\u867d\u7136\u6ca1\u4ec0\u4e48\u5dee\uff0c\u53ea\u662f\u524d\u9762\u51cf\u548c\u540e\u9762\u51cf\u7684\u533a\u522b\u800c\u5df2\u3002\n\n- \u4f46\u662f\u8981\u8bb0\u4f4f\uff0c\u4e0d\u80fd\u4fee\u6539\u8f93\u5165\u70b9\u7684Ci\uff01\uff01\uff01\n\n- \u7d2f\u52a0\u80fd\u91cf\u5c0f\u4e8e\u7b49\u4e8e0\u5c31\u90fd\u4ee50\u8bba\u5904\n\n- \u6ca1\u6709\u8f93\u51fa\u5c31\u8981\u8f93\u51faNULL\n\n\n------------\n\n\u672c\u849f\u84bb\u7684\u505a\u6cd5\u662f\u5148\u627e\u5230\u3010\u8f93\u5165\u70b9\u3011\uff0c\u5f80\u4e0a\u5c42\u5bfb\u627e\u3010\u80fd\u2642\u91cf\u3011\u6765\u6e90\u3002\n\n\u4e00\u5c42\u4e00\u5c42\u5f80\u4e0a\u627e\uff0c\u76f4\u5230\u627e\u5230\u3010\u8f93\u5165\u70b9\u3011\uff0c\u7136\u540e\u518d\u628a\u3010\u80fd\u2642\u91cf\u3011\u4f20\u9012\u4e0b\u6765\u3002\n\n\u5f53\u7136\uff0c\u7b97\u8fc7\u3010\u80fd\u2642\u91cf\u3011\u7684\u3010\u795e\u7ecf\u5143\u3011\u5c31\u6253\u4e2a\u6807\u8bb0\u3002\n\n------------\n\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\n\nint c[110],flag[110],ans[110],rudu[110];\n//  \u2191\u70b9\u7684\u503c \u2191\u6807\u8bb0   \u2191\u51fa\u5ea6   \u2191\u5165\u5ea6 \nstruct asd\n{\n    int back[10100],value[10100];\n    //  \u2191\u6307\u5411\u8fd9\u70b9\u7684\u70b9  \u2191\u8def\u5f84\u957f\u5ea6 \n}father[110];\n\nint back(int now)//\u5411\u4e0a\u627e\u70b9 \n{\n    if(rudu[now]==0||flag[now]==1)//\u662f\u8f93\u5165\u70b9\u6216\u5df2\u88ab\u8ba1\u7b97\u8fc7 \n    {\n        flag[now]=1;//\u6807\u8bb0\u8ba1\u7b97\u8fc7\u4e86 \n        if(c[now]<0)//\u4e0d\u6d3b\u8dc3\u5c31\u4e0d\u4f20\u503c\u4e86 \n        c[now]=0;\n        return c[now];\n    }\n\n    for(int i=1;i<=rudu[now];i++)//\u5411\u4e0a\u7684\u6bcf\u70b9 \n    {\n        //\u7d2f\u52a0 \n        c[now]+=back(father[now].back[i])*father[now].value[i];\n    }\n    if(c[now]<0)//\u7b97\u5b8c\u53d1\u73b0\u4e0d\u6d3b\u8dc3 \n    c[now]=0;\n\n    flag[now]=1;//\u6807\u8bb0\u8ba1\u7b97\u8fc7\u4e86  \n    return c[now];\n}\n\nint main()\n{\n    int n,p;\n    scanf(\"%d%d\",&n,&p);\n\n    for(int i=1;i<=n;i++)\n    {\n        int x;\n        scanf(\"%d%d\",&c[i],&x);\n        if(!c[i])//\u8f93\u5165\u70b9\u4e0d\u7528\u51cf\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01 \n        c[i]-=x;\n    }\n\n    for(int i=1;i<=p;i++)\n    {\n        int a,b,d;\n        scanf(\"%d%d%d\",&a,&b,&d); \n        ans[a]++;//\u51fa\u5ea6 \n        rudu[b]++;//\u5165\u5ea6 \n        father[ b ].back[rudu[b]]=a;//a\u70b9\u94fe\u63a5b\u70b9\uff0c\u8bb0\u5f55\u8fb9\u957fvalue \n        father[ b ].value[rudu[b]]=d;\n    }\n\n    int total=0;//\u6d3b\u8dc3\u8f93\u51fa\u70b9\u6570\u91cf \n    for(int i=1;i<=n;i++)\n    {\n        if(!ans[i])//\u5224\u65ad\u662f\u8f93\u51fa\u70b9 \n        {\n            c[i]=back(i);//\u5411\u4e0a\u627e\u6709\u5173\u7684\u70b9\u8ba1\u7b97c \n            if(c[i]>0)//\u4e0d\u6d3b\u8dc3\u4e0d\u8f93\u51fa\uff0c\u6d3b\u8dc3\u5c31\u8f93\u51fa \n            printf(\"%d %d\\n\",i,c[i]),total++;\n        }\n    }\n\n    if(!total)//\u6ca1\u7b54\u6848\u5c31\u8f93\u51faNULL \n    printf(\"NULL\");\n\n    return 0;\n}\n```",
        "postTime": 1525008742,
        "uid": 46702,
        "name": "AnChun999",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1038 \u3010\u795e\u7ecf\u7f51\u7edc\u3011"
    },
    {
        "content": "# \u62d3\u6251\u6392\u5e8f\uff08\u62d3\u6251\u5e8fdp\uff09\n>\t\u9047\u5230 `DAG` \u5c31\u8981\u60f3\u5230 `\u62d3\u6251dp` \u662f OIer \u5fc5\u987b\u638c\u63e1\u7684\u76f4\u89c9  \n>\t\u2014\u2014\u672c\u4eba\u673a\u623f\u67d0\u5927\u4f6c\n\n![](https://cdn.luogu.com.cn/upload/pic/58252.png)\n\n\u5176\u4e2d\u70b9 $1$\u3001$2$ \u4e3a\u4fe1\u606f\u5f62\u6210\u70b9\u3002  \n\u52a0\u4e0a\u4e00\u4e2a\u91cd\u8981\u6761\u4ef6\uff1a**\u795e\u7ecf\u5143\u95f4\u662f\u6ca1\u6709\u56de\u8def\u7684\u3002**  \n\u53d1\u73b0\u50cf\u4ec0\u4e48\uff1f\u2014\u2014 **DAG(AOE\u7f51)** \u554a\uff01  \n\u6240\u4ee5\u8ba9\u6211\u4eec\u6109\u5feb\u62d3\u6251\u3002\n### \u600e\u4e48\u62d3\u6251dp\uff1f\n\u53ef\u4ee5\u628a\u6bcf\u4e2a\u70b9\u7684\u72b6\u6001\u7684\u8ba1\u7b97\u516c\u5f0f\u8f6c\u5316\u4e3a\u4e0b\u5f0f\uff1a\uff08\u6ca1\u6709\u770b\u8ba1\u7b97\u7684\u5c0f\u670b\u53cb\u53ef\u4ee5\u56de\u53bb\u518d\u770b\u770b\uff09  \n\u6709\u4e00\u4e2a\u5df2\u786e\u5b9a\u72b6\u6001\u7684\u70b9 $j$ \uff0c\u5982\u679c\u6709\u4efb\u610f\u70b9 $i$ \u4e3a\u5176\u5b50\u4efb\u52a1\u70b9\uff0c\u5c31\u6709$C_i=\\sum\\limits_{\\{j|(j,i) \\in E\\}} W^i_j  C_j$\u3002  \n\u6240\u4ee5\u6bcf\u53bb\u6389\u4e00\u4e2a\u70b9\uff0c\u5c31\u5bf9\u5176\u6240\u6709\u76f8\u8fde\u7684\u70b9\u52a0\u4e0a $W^i_j  C_j$ \u5373\u53ef\u3002\n## \u9600\u503c\n**\u5bf9\u4e8e\u9600\u503c\u6211\u4eec\u77e5\u9053\uff1a**  \n\n1.  \u9600\u503c\u5bf9\u4e8e\u6bcf\u4e2a\u4fe1\u606f\u5f62\u6210\u8282\u70b9\u6ca1\u6709\u4ec0\u4e48\u7528\uff01\u56e0\u4e3a\u5f62\u6210\u8282\u70b9\u5df2\u7ecf\u786e\u5b9a\u4e86\u72b6\u6001\u3002    \n\n2.  \u522b\u770b\u539f\u6765\u9898\u76ee\u7684\u8ba1\u7b97\u516c\u5f0f\u6709\u6c42\u548c\u51fd\u6570\uff0c\u4f46 `ta` \u6ca1\u6709\u52a0\u62ec\u53f7\uff0c\u4e5f\u5c31\u662f\u8bf4\u6bcf\u4e2a\u8282\u70b9\u72b6\u6001\u7684\u9600\u503c\u53ea\u4f1a\u635f\u5931\u4e00\u6b21\uff08\u800c\u4e0d\u662f\u5165\u8fb9\u7684\u6761\u6570\uff09\u3002     \n\n**\u6240\u4ee5\u6211\u4eec\u5f97\u77e5\uff1a\u9600\u503c\u662f\u53ef\u4ee5\u9884\u5904\u7406\u7684\uff0c\u65b9\u5f0f\u89c1\u4ee3\u7801**  \n**\u6700\u540e\u8f93\u51fa\u7684\u65f6\u5019\u53ea\u9700\u8981\u628a\u8f93\u51fa\u5c42\u7684\u72b6\u6001\u8f93\u51fa\u5c31\u597d\u4e86\uff08\u8bb0\u5f97\u7279\u5224\uff09**\n# \u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n#define LL long long\n#define N 100010\nusing namespace std;\nint C[N],_in[N],n,m;\nstruct edge//\u94fe\u5f0f\u524d\u5411\u661f || updata 2020/12/3:\u90a3\u65f6\u672c\u4eba\u72ec\u7231\u6307\u9488\n{\n\tint to,price;\n\troad *next;\n\troad(){to=0;price=0;next=NULL;}\n}*A[N];\nqueue<int> W;\nvoid add(int a,int b,int c)//\u52a0\u5165\u4e00\u6761\u7531a\u5230b\u7684\u4ee3\u4ef7\u4e3ac\u7684\u8fb9\n{\n\tif(A[a]==NULL)//\u8bb0\u5f97\u7279\u5224\u554a\uff08\u56e0\u4e3a\u662f\u6307\u9488\uff09\n\t{\n\t\tA[a]=new(road);\n\t\tA[a]->to=b;\n\t\tA[a]->price=c;\n\t\treturn;\n\t}\n\tedge *p=new(road);\n\tp->price=c;\n\tp->to=b;\n\tp->next=A[a]->next;\n\tA[a]->next=p;\n}\nvoid C_up()//\u5904\u7406\u6240\u6709\u8282\u70b9\u7684\u72b6\u6001\uff08\u62d3\u6251\u5e8f\u4f20\u9012\u72b6\u6001\uff09\n{\n\twhile(!W.empty())\n\t{\n\t\tint a=W.front();\n\t\tfor(road *i=A[a];i!=NULL;i=i->next)\n\t\t{\n\t\t\t_in[i->to]--;//\u62d3\u6251\u7684\u57fa\u672c\u64cd\u4f5c\uff08\u5220\u70b9\u51cf\u5165\u5ea6\uff09\n\t\t\tC[i->to]+=(i->price)*C[a];//\u76f8\u8fde\u8282\u70b9\u4f20\u9012\u72b6\u6001\n\t\t\tif(_in[i->to]==0&&C[i->to]>0) W.push(i->to);\n\t\t\t//\u5982\u679c\u5df2\u7ecf\u5904\u4e8e\u4f20\u9012\u5c42\u4e14\u6709\u6b63\u72b6\u6001\n\t\t}\n\t\tW.pop();\n\t}\n}\nint main()\n{\n\tcin >> n >> m;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint a;\n\t\tcin >> C[i] >> a;\n\t\tif(C[i]>0) W.push(i);//\u9600\u503c\u5904\u7406\uff0c\u5982\u679c\u662f\u4fe1\u606f\u5f62\u6210\u5c42\uff0c\u5c31\u628a\u5b83\u538b\u5165\u961f\u5217\uff08\u540e\u9762\u518d\u96c6\u4e2d\u5904\u7406\uff09\n\t\telse C[i]-=a;//\u53cd\u6b63\u59cb\u7ec8\u90fd\u8981\u51cf\u53bb\uff0c\u4e0d\u5982\u5148\u51cf\u4e86\uff1f\u5728\u62d3\u6251\u91cc\u51cf\u591a\u9ebb\u70e6\n\t}\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint a,b,c;\n\t\tcin >> a >> b >> c;\n\t\tadd(a,b,c);//\u8be6\u60c5\u89c1\u4e0a\n\t\t_in[b]++;//\u8bb0\u5f97\u7edf\u8ba1\u5165\u5ea6\n\t}\n\tC_up();//\u5904\u7406\n\tbool flag=0;//\u8bb0\u5f55\u6709\u6ca1\u6709\u7b54\u6848\n\tfor(int i=1;i<=n;i++) \n\t\tif(A[i]==NULL) //\u6ca1\u6709\u51fa\u5ea6\u2014\u2014\u8f93\u51fa\u5c42\n\t\t\t{\n\t\t\t\tif(C[i]>0) //\u770b\u770b\u662f\u4e0d\u662f\u8d1f\u72b6\u6001\n\t\t\t\t{\n\t\t\t\t\tflag=1;\n\t\t\t\t\tcout << i << ' ' << C[i] << '\\n';//\u8f93\u51fa\u54af\n\t\t\t\t}\n\t\t\t}\n\tif(!flag) cout << \"NULL\";//\u6ca1\u6709\u4e00\u4e2a\u8f93\u51fa\u5c42\u6709\u4fe1\u53f7\n\treturn 0;\n}\n\n```\n$updata\\ 2020/12/3 :$ \u597d\u4e45\u4ee5\u524d\u7684\u9898\u89e3\u4e86\uff0c\u53ef\u80fd\u8bf4\u6cd5\u4e0d\u591f\u4e25\u8c28\uff0c\u4fee\u6539\u4e86\u4e00\u4e0b \n",
        "postTime": 1577596094,
        "uid": 172516,
        "name": "empty_zhm",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1038 \u3010\u795e\u7ecf\u7f51\u7edc\u3011"
    },
    {
        "content": "emmmmmm\u5927\u81f4\u770b\u4e86\u4e00\u4e0b\u5927\u5bb6\u7684\u9898\u89e3\uff0c\u4f3c\u4e4e\u90fd\u662f\u62d3\u6251\u6392\u5e8f\u3002emmmmm\u539f\u8c05\u6211\uff0c\u5728\u8fd9\u9053\u9898\u4e4b\u524d\u6211\u8fd8\u6ca1\u548b\u63a5\u89e6\u8fc7\u62d3\u6251\u6392\u5e8f\uff0c\u6240\u4ee5\u76f4\u63a5\u6309\u7167bfs\u6765\u505a\u7684\uff0c\u5176\u5b9e\u4ee3\u7801\u539f\u7406\u90fd\u5dee\u4e0d\u591a\u3002\n\nbfs\u7684\u8d77\u70b9\u663e\u7136\u662f\u8f93\u5165\u5c42\uff0c\u800c\u8f93\u5165\u5c42\u4e5f\u5f88\u597d\u5224\u65ad\u2014\u2014c > 0\u7684\u70b9\u5373\u4e3a\u8f93\u5165\u5c42\u3002\u6b63\u5982\u524d\u9762\u7684\u5927\u4f6c\u4eec\u63d0\u5230\u7684\uff0cu\u8fd9\u4e2a\u91cf\u662f\u6ca1\u5fc5\u8981\u5f00\u4e00\u4e2a\u6570\u7ec4\u7684\uff0c\u8f93\u5165\u65f6\u5982\u679c\u8fd9\u4e2a\u70b9c > 0\uff08\u5373\u4e3a\u8f93\u5165\u5c42\u7684\u70b9)\uff0c\u90a3\u4e48u\u76f4\u63a5\u6254\u6389\uff0c\u5426\u5219\u5c31\u76f4\u63a5\u4ee4c = c - u\u3002\n\n\u6bcf\u4e2a\u70b9\u6211\u4eec\u53ea\u60f3\u52a0\u5165\u961f\u5217\u4e00\u6b21\uff0c\u4e8e\u662f\u5f15\u5165inque[i]\u6765\u8868\u793a\u7b2c[i]\u70b9\u662f\u5426\u5df2\u7ecf\u52a0\u5165\u8fc7\u961f\u5217\u4e86\u3002\u5728bfs\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u7684c[i] > 0 \u5e76\u4e14 inque[i] == false,\u5c31\u628a\u5b83\u52a0\u5230\u961f\u5217\u5c3e\u3002\n\n\u5bf9\u4e8e\u8f93\u51fa\u5c42\u7684\u70b9\u5982\u4f55\u5224\u65ad\uff0c\u6211\u4eec\u5f15\u5165\u4e00\u4e2a\u91cf\"maxdep\"\u6765\u8868\u793a\u795e\u7ecf\u7f51\u7edc\u7684\u5c42\u6570\uff0c\u518d\u5f15\u5165\u4e00\u4e2a\u6570\u7ec4dep[i]\u8868\u793a\u7b2ci\u4e2a\u70b9\u6240\u5728\u7684\u5c42\u6570\uff0c\u663e\u7136dep[i]==maxdep\u7684\u70b9\u5373\u4e3a\u8f93\u51fa\u5c42\u7684\u70b9\u3002\n\nbfs\u5373\u53ef\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<iostream>\n#include<queue>\nusing namespace std;\nconst int MAXN = 105;\nqueue<int> q;\nint n, p, maxdep, cnt;\nint head[MAXN], c[MAXN], dep[MAXN];\nbool inque[MAXN];//inque[i]\u8868\u793a\u7b2c[i]\u4e2a\u70b9\u662f\u5426\u5df2\u7ecf\u52a0\u5165\u8fc7\u961f\u5217\u4e86 \n\nstruct Edge{\n\tint to, w, nxt;\n\tEdge(int a = 0, int b = 0, int c = 0):to(a),w(b),nxt(c){}\n}edge[MAXN * MAXN];\n\ninline void addedge(int u, int v, int w){\n\tedge[++cnt] = Edge(v, w, head[u]);\n\thead[u] = cnt;\n}\n\ninline void bfs(){\n\twhile(!q.empty()){\n\t\tint f = q.front();q.pop();\n\t\tfor(int i = head[f];i;i = edge[i].nxt){\n\t\t\tint to = edge[i].to;\n\t\t\tdep[to] = dep[f] + 1;\n\t\t\tmaxdep = max(maxdep, dep[to]);\n\t\t\tc[to] += c[f] * edge[i].w;\n\t\t\tif(c[to] > 0 && !inque[to]){\n\t\t\t\tinque[to] = true;\n\t\t\t\tq.push(to);\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main(){\n\tcin>>n>>p;\n\tfor(int i = 1, u;i <= n;i++){\n\t\tcin>>c[i]>>u;\n\t\tif(c[i]> 0)\n\t\t\tq.push(i), inque[i] = true;//\u538b\u8fdb\u8f93\u5165\u5c42\u7684\u70b9 \n\t\telse c[i] = c[i] - u;\n\t}\n\tfor(int i = 1, u, v, w;i <= p;i++){\n\t\tcin>>u>>v>>w;\n\t\taddedge(u, v ,w);\n\t}\n\tbfs();\n\tbool ok = false;\n\tfor(int i = 1;i <= n;i++)\n\t\tif(c[i] > 0 && dep[i] == maxdep){\n\t\t\tok = true;\n\t\t\tcout<<i<<\" \"<<c[i]<<endl;\n\t\t}\n\tif(!ok) cout<<\"NULL\";\n\treturn 0;\n}\n```\n",
        "postTime": 1576914573,
        "uid": 32310,
        "name": "LetMyself",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1038 \u3010\u795e\u7ecf\u7f51\u7edc\u3011"
    },
    {
        "content": "\u539f\u9898\u4f20\u9001\u95e8\uff1a[P1038 \u795e\u7ecf\u7f51\u7edc](https://www.luogu.org/problemnew/show/P1038)\n\n\u8fd9\u9053\u9898\u76ee~~\u663e\u7136\u662f\u62d3\u6251\u6392\u5e8f\u7684~~\u56fe\u8bba\uff0c\u4f46\u5728\u8fd9\u91cc\u7b14\u8005\u7ed9\u4e88\u5927\u5bb6\u4e00\u79cd\u8f83\u4e3a\u7279\u6b8a\u7684\u65b9\u6cd5\u3002\n\n\u9898\u76ee\u4e2d\u5df2\u7ecf\u7ed9\u51fa\u4e86\u6bcf\u4e00\u5c42\u7684\u795e\u7ecf\u5143\u7684\u4fe1\u606f\u53ea\u4f1a\u4f20\u7ed9\u4e0b\u4e00\u5c42\uff0c\u90a3\u4e48\u4e5f\u5c31\u8bf4\u660e\uff0c\u4e00\u5c42\u795e\u7ecf\u5143\u4e0d\u53ef\u80fd\u8d8a\u8fc7\u4e00\u5c42\u8fdb\u884c\u4f20\u9012\uff0c\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u9012\u5f52\u9884\u5904\u7406\u6765\u8fdb\u884c\u9012\u63a8\u66b4\u529b\u7684\u6c42\u89e3\u65b9\u6cd5\u3002\n\ndag\u6570\u7ec4\u8868\u793a\u7684\u662f\u6bcf\u4e00\u4e2a\u795e\u7ecf\u5143\uff0cdag[i].son\u6570\u7ec4\u662f\u8868\u793adag[i]\u7684\u4e0b\u4e00\u5c42\uff0cdag[i].w\u6570\u7ec4\u662f\u8868\u793a\u8fb9\u7684\u6570\u636e\u3002fa[i][j]=1\u8868\u793aj\u662fi\u7684\u4e0a\u4e00\u5c42\u53ef\u4f20\u9012\u8005,vis[i][j]=1\u8868\u793a\u7b2ci\u5c42\u5b58\u5728j\u53f7\u795e\u7ecf\u5143\u3002\u9884\u5904\u7406\u5c42\u6570vis\u6570\u7ec4\u548cfa\u6570\u7ec4\uff0c\u518d\u5faa\u73af\u795e\u7ecf\u5143\u5c42\u6570\uff0c\u6240\u5728\u5c42\u6570\u4e0e\u4e0a\u4e00\u5c42\u53ef\u4f20\u9012\u8282\u70b9\u7684\u8fb9\u66b4\u529b\u6c42\u89e3\u3002\n\n\u56e0\u4e3a\u6bcf\u4e2a\u795e\u7ecf\u5143\u53ea\u4f1a\u5728\u67d0\u4e00\u5c42\u51fa\u73b0\u4e00\u6b21\uff0c\u6240\u4ee5\u5373\u4fbf\u4e09\u5c42\u5faa\u73af\uff0c\u526a\u679d\u8fc7\u540e\u65f6\u95f4\u590d\u6742\u5ea6\u53ea\u6709O(n\u00b2)\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint maxdeep=1,n,p,c[101],u[101],a,b,vis[121][121],fa[121][121];\nstruct node{\n\tint son[121],w[121];\n}dag[121];\nvoid dfs(int num,int step){\n\tfor(register int i=1;i<=dag[num].son[0];++i){\n\t\tvis[step+1][dag[num].son[i]]=1;\n\t\tfa[dag[num].son[i]][num]=1;\n\t\tdfs(dag[num].son[i],step+1);\n\t}\n\tif(dag[num].son[0])maxdeep=max(maxdeep,step+1);\n}\nint main(){\n\tscanf(\"%d%d\",&n,&p);\n\tfor(register int i=1;i<=n;++i){\n\t\tscanf(\"%d%d\",&c[i],&u[i]);\n\t}\n\tfor(register int i=1;i<=p;++i){\n\t\tint x,y,z;\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tdag[x].son[++dag[x].son[0]]=y;\n\t\tdag[x].w[y]=z;\n\t}\n\tfor(register int i=1;i<=n;++i){\n\t\tif(c[i]>0){\n\t\t\tvis[1][i]=1;\n\t\t\tdfs(i,1);\n\t\t}\n\t}\n\tfor(register int i=2;i<=maxdeep;++i){\n\t\tfor(register int j=1;j<=n;++j){\n\t\t\tif(vis[i][j]){\n\t\t\t\tfor(register int k=1;k<=n;++k){\n\t\t\t\t\tif(fa[j][k]&&c[k]>0){\n\t\t\t\t\t\tc[j]=c[j]+dag[k].w[j]*c[k];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tc[j]-=u[j];\n\t\t\t}\n\t\t}\n\t}\n\tint cnt=0;\n\tfor(register int i=1;i<=n;++i){\n\t\tif(vis[maxdeep][i]&&c[i]>0){\n\t\t\tcnt++;\n\t\t\tprintf(\"%d %d\\n\",i,c[i]);\n\t\t}\n\t}\n\tif(!cnt)printf(\"NULL\\n\");\n\treturn 0;\n}\n```\n",
        "postTime": 1557841280,
        "uid": 85514,
        "name": "\u4e07\u4e07\u6ca1\u60f3\u5230",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1038 \u795e\u7ecf\u7f51\u7edc"
    },
    {
        "content": "/\\*\u4ec0\u4e48\uff0c\u62d3\u6251\u6392\u5e8f\uff1f\u4e0d\u5b58\u5728\u7684\n\n\u89c9\u5f97\u81ea\u5df1\u5199\u7684\u5bf9\u5c0f\u767d\u5e94\u8be5\u633a\u53cb\u597d\u7684\n\n\u5176\u5b9e\u81ea\u5df1\u5c31\u662f\u5c0f\u767d\n\n\u601d\u8def\u5176\u5b9e\u548cbfs\u5f88\u50cf\n\n\u90fd\u662f\u6309\u5c42\u6b21\u641c\u7d22\n\n\u9700\u8981\u7528\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u7b2ci\u4e2a\u70b9\u662f\u4e0d\u662f\u5728\u961f\u5217\u4e2d\n\n\u56e0\u4e3a\u6bcf\u4e2a\u70b9\u8981\u4fee\u6539\u591a\u6b21\\*/\n\n        \n    \n            \n```cpp\n#include<cstdio>\n#include<iostream>\n#include<queue>\n#include<cstring>\nusing namespace std;\nint map[101][101];//\u5b58\u56fe \nint c[101];//\u72b6\u6001 \nint u[101];//\u9608\u503c \nint r[101];//\u5165\u5ea6 \nint cc[101];//\u51fa\u5ea6 \nbool flag[101];//\u5224\u65ad \nint n,m;\nint q[100001];//\u624b\u5199\u961f\u5217 \n//c[i] = w[i][j] * c[j] - u[i].\nint main()\n{    freopen(\"123.txt\",\"r\",stdin);//\u9632\u6284\u88ad \n    memset(map,0,sizeof(map));\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)\n    {\n        cin>>c[i]>>u[i];\n        if(c[i]!=0)\n        u[i]=0;//////\u7279\u5224\u5f88\u91cd\u8981\u5440\uff0160\u5206\u548c100\u5206\u7684\u5dee\u522b\u4e5f\u662f\u770b\u4e86\u697c\u4e0b\u624d\u77e5\u9053 \n    }\n    for(int i=1;i<=m;i++)\n    {\n        int x,y,z;\n        cin>>x>>y>>z;\n        map[x][y]=z;\n        //cout<<x<<y<<map[x][y]<<endl;\n        r[y]++; \n        cc[x]++;\n    }\n    memset(flag,0,sizeof(flag));//\u521d\u59cb\u5316flag \n    int head=1;\n    int tail=1;\n    for(int i=1;i<=n;i++)\n    {\n        if(r[i]==0)\n        {    \n            q[tail]=i;\n            flag[i]=1;\n            tail++;\n```\n}//\u5165\u5ea6\u4e3a0\u7684\u70b9\u5c31\u662f\u8d77\u70b9\uff0c\u8d77\u70b9\u5165\u961f\n```cpp\n    }\n    //cout<<endl<<q[head]<<endl;\n    while(head<=tail)\n    {\n        for(int i=1;i<=n;i++)\n        {\n            if(map[q[head]][i]!=0)//\u6709\u8fb9\u76f8\u8fde \n            {\n                if(flag[i]==0)//\u6ca1\u6709\u5728\u961f\u5217\u91cc \n            {\n                q[tail]=i;//\u5165\u961f \n                //flag[i]=tail;\n                flag[i]=1;//\u6807\u8bb0 \n                if(c[q[head]]-u[q[head]]>=0)//\u5224\u65ad \n                c[i]+=map[q[head]][i]*(c[q[head]]-u[q[head]]);//\u5728\u8ba1\u7b97c[]\u7684\u65f6\u5019\u8981\u7b49\u5230\u8ba1\u7b97\u4ed6\u7684\u5b50\u8282\u70b9\u7684\u65f6\u5019\u518d\u51cf\u53bbu[i]\u907f\u514d\u91cd\u590d \n                //cout<<i<<' '<<c[i]<<endl;\n                tail++;\n                //flag[q[head]]=0;\n            }\n            else {//\u5982\u679c\u5df2\u7ecf\u5728\u961f\u91cc \n                if(c[q[head]]-u[q[head]]>=0)\n                c[i]+=(map[q[head]][i])*(c[q[head]]-u[q[head]]);\n            }\n        }    \n     } \n    head++;\n }   //bfs\u601d\u8def \n bool ff=0;\n     for(int i=1;i<=n;i++)\n     {\n         if(cc[i]==0&&c[i]-u[i]>0)//\u51fa\u5ea6\u4e3a0\u7684\u8fb9\u662f\u7ec8\u70b9 \n         cout<<i<<\" \"<<c[i]-u[i]<<endl,ff=1;//\u6807\u8bb0 \n     }\n  if(ff==0)cout<<\"NULL\";\n  return 0;\n//\u5b8c\u6210\uff01\uff01\n}\n```",
        "postTime": 1508035072,
        "uid": 27330,
        "name": "\u68ee\u6d77\u585e\u5c14",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1038 \u3010\u795e\u7ecf\u7f51\u7edc\u3011"
    },
    {
        "content": "/\\*\n\u5176\u5b9e\u6211\u6ca1\u6253\u7b97\u53d1\u9898\u89e3\u7684\uff0c\u4f46\u662f\u770b\u770b\u9898\u89e3\u91cc\u5404\u4f4ddalao\u7684\u9898\u89e3\u90fd\u592a\u957f\u4e86\u3002\n\n\u4e8e\u662f\u6211\u53d1\u73b0\u6211\u7684\u4ee3\u7801\u6bd4\u8f83\u7b80\u77ed\uff0c\u4e5f\u6ca1\u6709\u7528\u5230\u90a3\u4e48\u591a\u5199\u6cd5\u77e5\u8bc6\u70b9\uff0c\u6240\u4ee5\u53d1\u4e2a\u9898\u89e3\uff0c\u4f9b\u5927\u5bb6\u77a7\u77a7\n\n\\*/\n/\\*\n\u672c\u9898\u6ce8\u610f\uff1a\n\n1.\u6c42\u548c\u516c\u5f0f\u4e0d\u5305\u62ec\u51cf\u6389\u7684\u9600\u503c\n\n2.\u5982\u679c\u67d0\u70b9\u6709\u5165\u5ea6\uff0c\u5219\u4e0d\u51cf\u53bb\u9600\u503c\uff1b\u53ea\u6709Ci\u5927\u4e8e0\u65f6\u624d\u4f1a\u7ee7\u7eed\u8ba1\u7b97\n\n3.\u591a\u8bfb\u51e0\u904d\u9898\u518d\u505a\n\n\\*/\n\n\n                \n```cpp\n#include <iostream>\nusing namespace std;\nint INF=2333;\nint n,m,x,y,z,cnt1,cnt2;\nint W[110][110];\nint I[110],U[110];\nbool f[110],g[110]; \nint main()\n{\n    //\u6570\u636e\u8303\u56f4\u5f88\u5c0f\uff0c\u600e\u4e48\u5199\u90fd\u4f1a\u8fc7\u7684\u3002 \n    cin>>n>>m;\n    for(int i=1; i<=n; i++)\n        cin>>I[i]>>U[i];\n    for(int i=1; i<=n; i++)\n        for(int j=1; j<=n; j++)\n            W[i][j]=INF;//\u8fb9\u6743\u5168\u90e8\u521d\u59cb\u5316 \n    for(int i=1; i<=m; i++)\n    {\n        cin>>x>>y>>z;\n        W[x][y]=z;\n        f[x]=1;// \u6807\u8bb0 x\u6709\u51fa\u5ea6  \uff0c \u5728\u7b2c45--56\u884c \u4f1a\u7528\u5230\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u5224\u65ad\u8be5\u70b9\u662f\u5426\u9700\u8981\u8f93\u51fa\u3002 \n        g[y]=1;// \u6807\u8bb0 y\u6709\u5165\u5ea6  \uff0c \u5728\u7b2c37\u884c\u4f1a\u7528\u5230 \uff0c\u56e0\u4e3a\u6709\u5165\u5ea6\u7684\u70b9 \u9700\u8981\u51cf\u9600\u503c\u3002 \n    }\n    for(int i=1; i<=n; i++)\n        if(g[i]==1) \n            I[i]-=U[i]; \n    for(int i=1; i<=n; i++)\n        for(int j=1; j<=n; j++)\n            if(W[i][j]!=INF&&I[i]>0)\n                I[j]+=W[i][j]*I[i];       // 39--42\u884c\u4e3a\u6a21\u62df \u67e5\u627e \uff0c \u770b\u770b\u5e94\u8be5\u5c31\u80fd\u79d2\u61c2\n    //\u7b2c45--56\u884c\u4e3a \u5224\u65adNULL\u7684\u60c5\u51b5\uff0c\u5f88\u9ebb\u70e6\uff0c\u5e0c\u671b\u5404\u4f4d\u5927\u4f6c\u80fd\u60f3\u529e\u6cd5\u7b80\u5316\u4e00\u4e0b \n    for(int i=1; i<=n; i++)\n    {\n        if(f[i]==0)\n            cnt1++;\n        if(f[i]==0&&I[i]<=0)\n            cnt2++;\n    }\n    if(cnt1==cnt2)\n    {\n        cout<<\"NULL\";\n        return 0;\n    }\n    //\u975eNULL\u60c5\u51b5\u4e0b\u7684\u8f93\u51fa , \u5982 58--60\u884c \n    for(int i=1; i<=n ;i++)\n        if(f[i]==0&&I[i]>0)\n            cout<<i<<\" \"<<I[i]<<endl;\n    return 0;\n}\n```",
        "postTime": 1492172309,
        "uid": 19215,
        "name": "OIer991215",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1038 \u3010\u795e\u7ecf\u7f51\u7edc\u3011"
    },
    {
        "content": "\u6211\u6bd4\u8f83\u8822\u3002\u3002\u5c45\u7136\u6ca1\u60f3\u5230\u8fd9\u4e2a\u9898\u662f\u62d3\u6251\u6392\u5e8f \u4e0d\u8fc7\u53cd\u6b63\u8fd9\u9053\u9898\u5f88\u6c34 \u6211\u5c31\u76f4\u63a5\u6a21\u62df\u8fc7\u53bb\u5566\n\n\u8fd9\u4e2a\u9898\u6709\u51e0\u4e2a\u70b9\u9700\u8981\u6ce8\u610f\n\n1.\u5982\u679c\u662f\u8f93\u5165\u5c42\u7684\u70b9C\u4e0d\u8981\u51cf\u53bbU\n\n2.\u4e0d\u8981\u51cf\u53bb\u591a\u6b21U U\u53ea\u51cf\u4e00\u6b21\n\n3.\u8f93\u51fa\u5c42\u7684\u795e\u7ecf\u5143\u72b6\u6001\u5c0f\u4e8e\u7b49\u4e8e\u96f6\u5c31\u4e0d\u8981\u8f93\u51fa\u4e86\n\n```cpp\n\n#include <cstdio>\n#include <vector>\n#include <set>\n#include <queue>\n\nusing namespace std;\n\nstruct node {\n    int c,u;    \n    node() { }\n    node(int a,int b):c(a),u(b) { }\n};\n\nstruct edge {\n    int u,v,w;\n    edge() { }\n    edge(int a,int b,int c):u(a),v(b),w(c) { }\n};\n\nint n=0,p=0;\nnode a[101];\nvector<edge> e;\nvector<int> g[101];\nset<int> ans;\nbool vis[101],input[101];\n\nvoid bfs() {\n    for (int i=1;i<=n;++i)\n        vis[i]=input[i]=false;\n    queue<int> q;\n    for    (int i=1;i<=n;++i)\n        if (a[i].c!=0) {\n            q.push(i);\n            vis[i]=true;\n            input[i]=true;\n        }\n    while (!q.empty()) {\n        int cur=q.front();\n        q.pop();\n        if (!input[cur])\n            a[cur].c-=a[cur].u;\n        if (g[cur].size()==0 && a[cur].c>0)\n            ans.insert(cur);\n        else {\n            for (int i=0;i<g[cur].size();++i) {\n                edge ce=e[g[cur][i]];\n                if (!vis[ce.v]) {\n                    q.push(ce.v);\n                    vis[ce.v]=true;\n                }\n            }    \n            if (a[cur].c>0) {\n                for (int i=0;i<g[cur].size();++i) {\n                    edge ce=e[g[cur][i]];\n                    a[ce.v].c+=ce.w*a[cur].c;\n                }\n            }\n        }\n    }\n    if (!ans.size())\n        printf(\"NULL\\n\");\n    else\n        for (set<int>::iterator it=ans.begin();it!=ans.end();++it)\n            printf(\"%d %d\\n\",*it,a[*it].c);\n}\n\nint main(void) {\n    scanf(\"%d %d\",&n,&p);\n    for (int i=1;i<=n;++i) {\n        int c=0,u=0;\n        scanf(\"%d %d\",&c,&u);\n        a[i]=node(c,u);\n    }\n    for (int i=0;i<p;++i) {\n        int u=0,v=0,w=0;\n        scanf(\"%d %d %d\",&u,&v,&w);\n        e.push_back(edge(u,v,w));\n        g[u].push_back(e.size()-1);\n    }\n    bfs();\n    return 0;\n}\n\n\n```",
        "postTime": 1458800234,
        "uid": 13433,
        "name": "QwQ2000",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1038 \u3010\u795e\u7ecf\u7f51\u7edc\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5751\u771f\u7684\u7279\u522b\u591a\n\n# ****\u7528\u90bb\u63a5\u77e9\u9635\u7684\u8bf7\u6ce8\u610f\uff01\uff01\uff01****\n\n\u6709\u591a\u4e2a\u6570\u636e\u6709\u6743\u503c\u4e3a0\u7684\u8fb9\uff0c\u7528\u90bb\u63a5\u77e9\u9635\u7684\u8bdd\u521d\u59cb\u5316\u5efa\u8bae\u5c0f\u4e00\u70b9\n\n\u63a5\u4e0b\u6765\u662f\u601d\u8def\n\n\u8fd9\u9053\u9898\u662f\u62d3\u6251\u6392\u5e8f\uff0c\u800c\u4e3a\u4ec0\u4e48\u5462\uff1f\u5173\u952e\u5728\u4e8e\u8fd9\u4e2a\u5f0f\u5b50\n\nC \ni\n\u200b\t =\u2211 \n(j,i)\u2208E\n\u200b\t W \nji\n\u200b\t C \nj\n\u200b\t \u2212U \ni\n\u200b\t\n\n\u8fd9\u4e2a\u7684\u5927\u6982\u610f\u601d\u5c31\u662f\uff0c\u5982\u679cj\u901a\u5411i\u76f8\u8fde\uff0cci\u8981\u52a0\u4e0acj*w[i][j]\n\n\u6240\u4ee5\u8981\u5148\u5904\u7406\u51fa\u6240\u6709\u901a\u5411i\u7684\u70b9\n\n\u6240\u4ee5\u8981\u7528\u62d3\u6251\u6392\u5e8f\uff0c\u5177\u4f53\u539f\u56e0\u5148\u770b\u4ee3\u7801\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint c[105],u[105];\nint g[105][105];\nint dp[105];\nint rd[105];\nint cd[105];\nqueue<int>q;\nint main()\n{\n\tint n,p;\n\tscanf(\"%d%d\",&n,&p);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d%d\",&c[i],&u[i]);\n\t}\n\tfor(int i=1;i<=100;i++)//\u5148\u524d\u63d0\u5230\u7684\u6ce8\u610f\u4e8b\u9879\n\t{\n\t\tfor(int j=1;j<=100;j++)\n\t\t{\n\t\t\tg[i][j]=-1e6;\n\t\t}\n\t}\n\tfor(int i=1;i<=p;i++)\n\t{\n\t\tint x,y,z;\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tg[x][y]=z;\n\t\trd[y]++;//\u5165\u5ea6\n\t\tcd[x]++;//\u51fa\u5ea6\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(rd[i]==0)\n\t\t{\n\t\t\tq.push(i);\n\t\t}\n\t}\n\twhile(!q.empty())\n\t{\n\t\tint j=q.front();\n\t\tq.pop();\n\t\tif(c[j])\n\t\t{\n\t\t\tdp[j]=c[j];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint flag=0;\n\t\t\tfor(int i=1;i<=n;i++)\n\t\t\t{\n\t\t\t\tif(g[i][j]!=-1e6&&dp[i]>0)//\u6ce8\u610f\uff0c\u53ea\u6709\u5927\u4e8e0\u7684\u72b6\u6001\u624d\u4f1a\u4f20\u4fe1\u53f7\n\t\t\t\t{\n\t\t\t\t\tdp[j]+=(g[i][j]*dp[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdp[j]-=u[j];\n\t\t}\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tif(g[j][i]!=-1e6)\n\t\t\t{\n\t\t\t\trd[i]--;\n\t\t\t\tif(rd[i]==0)//\u8fd9\u5c31\u662f\u539f\u56e0\uff0c\u53ea\u6709\u4e0ei\u76f8\u8fde\u7684\u70b9\u5168\u5904\u7406\u8fc7\uff0c\u624d\u4f1a\u5904\u7406i\n\t\t\t\t{\n\t\t\t\t\tq.push(i);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tint flag=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(cd[i]==0&&dp[i]>0)\n\t\t{\n\t\t\tprintf(\"%d %d\\n\",i,dp[i]);\n\t\t\tflag=1;\n\t\t}\n\t}\n\tif(flag==0)\n\t{\n\t\tprintf(\"NULL\\n\");\n\t}\n\treturn 0;\n}\n\n```\n\n\u795d\u6211\u63d0\u9ad8rp++\n",
        "postTime": 1570287273,
        "uid": 89766,
        "name": "Mr_\u5b8f\u4f1f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1038 \u3010\u795e\u7ecf\u7f51\u7edc\u3011"
    },
    {
        "content": "------------\n\n**\u5206\u6790**\n------------\n\n\n------------\n\n**1. \u4e00\u4e2a\u795e\u7ecf\u8282\u70b9\u7684\u503c\u53ea\u53d7\u5b83\u7684\u7236\u8282\u70b9\u7684\u5f71\u54cd**\n\n**2. \u5165\u5ea6\u4e3a\u96f6\u4e3a\u8f93\u5165\u5c42\uff0c\u51fa\u5ea6\u4e3a\u96f6\u4e3a\u8f93\u51fa\u5c42**\n\n**3. \u66f4\u65b0\u5148\u540e\u987a\u5e8f\u4e0d\u5f71\u54cd\u70b9\u6743**\n\n------------\n**\u601d\u8def**\n------------\n\n\n------------\n**1.\u5f00\u5934\u5904\u7406-U[ i ]\u7684\u95ee\u9898**\n\n**2. \u627e\u5165\u5ea6\u4e3a\u96f6\u7684\u70b9\u5e76\u66f4\u65b0\u5176\u4ed6\u70b9**\n\n**3.\u4f7f\u7528\u53cc\u7aef\u961f\u5217\u7ef4\u62a4\u51fa\u5ea6\u4e3a\u96f6\u7684\u70b9\u5217**\n\n------------\n\n\n**\u4ee3\u7801**\n------------\n\n------------\n\n~~**\u8fd0\u884c\u65f6\u95f4\u53ef\u80fd\u7a0d\u6162**~~\n\n------------\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nconst int INF=0x7fffffff;\nint map[205][205]={0},rd[205]={0},cd[205],c[205]={0},u[205]={0};\nint n,m,num=0;\nint f[205],l[205],tf=0,tl=0;\nint main()\n{\n    int x,y,z,left,right;\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=n;j++)\n        {\n            map[i][j]=INF;\n        }\n    }\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d%d\",&c[i],&u[i]);\n        if(c[i]==0)c[i]-=u[i];\n    }\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d%d\",&x,&y,&z);\n        map[x][y]=z;\n        cd[x]++;\n        rd[y]++;\n    }\n    for(int i=1;i<=n;i++)\n    {\n        if(rd[i]==0)f[++tf]=i;//\u8f93\u5165\u5c42\n        if(cd[i]==0)l[++tl]=i;//\u8f93\u51fa\u5c42\n    }\n    left=1,right=tf;\n    while(left<=right)//\u53cc\u7aef\u961f\u5217\u7ef4\u62a4\n    {\n        x=f[left++];\n        if(c[x]<=0)//\u52ff\u5fd8\n        {\n            for(int i=n;i>=1;i--)\n            {\n                if(map[x][i]!=INF)\n                {\n                    rd[i]--;\n                    if(rd[i]==0)f[++right]=i;\n                }\n            }\n            continue;\n        }\n        for(int i=n;i>=1;i--)\n        {\n            if(map[x][i]!=INF)\n            {\n                c[i]+=map[x][i]*c[x];\n                rd[i]--;\n                if(rd[i]==0)f[++right]=i;\n            }\n        }\n    }\n    for(int i=1;i<=tl;i++)\n    {\n        if(c[l[i]]>0)num++,printf(\"%d %d\\n\",l[i],c[l[i]]);\n    }\n    if(num==0)printf(\"NULL\\n\");\n    return 0;\n}\n```\n\n\n------------\n",
        "postTime": 1548777643,
        "uid": 122599,
        "name": "\u3010\u5929\u671d\u3011MILK",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1038 \u3010\u795e\u7ecf\u7f51\u7edc\u3011"
    },
    {
        "content": "\u81ea\u521b\u7684\u5206\u5c42\u5165\u961f\u6cd5\u3002\u771f\u662f\u4e0d\u77e5\u9053\u600e\u4e48\u60f3\u7684\u3002\u3002\u3002\n\u8bfb\u5165\u65f6\u5c06\u72b6\u6001\u4e0d\u4e3a0\u7684\u70b9\u52a0\u5165\u961f\u5217\u3002\n\u6bcf\u6b21\u5728BFS\u66f4\u65b0u\u8282\u70b9\u6240\u8fde\u7684\u70b9v\u7684\u65f6\u5019\uff0c\u5c06v\u52a0\u5165\u4e00\u4e2a\u6570\u7ec4needinq\u987e\u540d\u601d\u4e49\u9700\u8981\u5c06\u4ed6\u653e\u5165\u961f\u5217\uff0c\u4e3a\u4f55\u4e0d\u76f4\u63a5\u653e\u5165\u961f\u5217\u5462\uff0c\u56e0\u4e3a\u53ef\u80fd\u8be5\u5c42\u8fd8\u6709\u5176\u4ed6\u8282\u70b9\u80fd\u66f4\u65b0v\u8282\u70b9\u3002\u5728\u961f\u5217\u4e3a\u7a7a\u4e5f\u5c31\u662f\u8be5\u5c42\u904d\u5386\u5b8c\u540e\u5c06needinq\u4e2d\u7684\u8282\u70b9\u653e\u5165\u961f\u5217\u3002\nokk\u4e86\n\u4e0a\u4ee3\u7801\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<queue>\n#include<vector>\n#define LL long long\n#include<algorithm>\nusing namespace std;\nint n,m,vis[110],needinq[110];\nstruct Edge{\n\tint to,l;\n};vector<Edge> E[110];\nstruct Node{\n\tint no,data,value;\n}N[110];\nqueue<Node> q;\nvoid BFS(){\n\twhile(1){\n\t\tNode x=q.front(); q.pop();\n\t\tfor(int i=0;i<E[x.no].size();i++){\n\t\t\tN[E[x.no][i].to].data+=E[x.no][i].l*x.data;\n\t\t\tneedinq[E[x.no][i].to]=1;\n\t\t}\n\t\tif(q.empty()) for(int i=1;i<=n;i++) if(needinq[i]&&N[i].data>0) q.push((Node){N[i].no,N[i].data,N[i].value});\n\t\tmemset(needinq,0,sizeof(needinq));\n\t\tif(q.empty()) return;\n\t}\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d%d\",&N[i].data,&N[i].value);\n\t\tN[i].no=i;\n\t\tif(N[i].data){q.push(N[i]); vis[i]=1;}\n\t\telse N[i].data-=N[i].value;\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tint u,v,w; scanf(\"%d%d%d\",&u,&v,&w);\n\t\tE[u].push_back((Edge){v,w}); \n\t}\n\tBFS();\n\tint flag=0;\n\tfor(int i=1;i<=n;i++){\n\t\tif(E[i].empty()&&N[i].data>0){\n\t\t\tprintf(\"%d %d\\n\",N[i].no,N[i].data);\n\t\t\tflag=1;\n\t\t}\n\t}\n\tif(!flag) printf(\"NULL\\n\");\n\treturn 0;\n} \n```",
        "postTime": 1539779332,
        "uid": 37585,
        "name": "liuxu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1038 \u3010\u795e\u7ecf\u7f51\u7edc\u3011"
    },
    {
        "content": "\u8fd9\u9898\u62d3\u6251\u52a0\u2026\u2026\u52a0\u5565\uff0c\u849f\u84bb\u4e0d\u61c2\uff0c\u5927\u6982\u5c31\u662f\u628a\u56fe\u8d70\u4e00\u904d\n\u5904\u7406\u5230\u4e00\u4e2a\u70b9u\u7684\u65f6\u5019\uff0c\u5047\u8bbe\u5b83\u6709\u4e00\u6761\u8fb9\u8fde\u5411\u70b9v\uff0c\u90a3\u4e48\u5c31\u628aCv\u52a0\u4e0aCu\u4e58\u8be5\u8fb9\u8fb9\u6743\uff0c\u62d3\u6251\u4fdd\u8bc1\u4e00\u4e2a\u70b9\u5728\u5904\u7406\u65f6\u5b83\u4e0a\u4e00\u5c42\u7684\u70b9\u5df2\u7ecf\u5168\u90e8\u5904\u7406\u5b8c\u6bd5\uff0c\u4e5f\u5c31\u662f\u516c\u5f0f\u4e2d\u7684\u6c42\u548c\u6b65\u9aa4\u5df2\u7ecf\u5b8c\u6210\n\u81f3\u4e8eU\uff0c\u56e0\u4e3a\u53ea\u662f\u4e00\u4e2a\u5e38\u6570\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u5728\u8f93\u5165Ci\u7684\u65f6\u5019\u76f4\u63a5\u5728Ci\u91cc\u9762\u51cf\u6389\u5c31\u597d\u4e86\uff0c\u6ce8\u610f\u8f93\u5165\u5c42\u4e0d\u7528\u51cf\u53bb\uff0c\u53ef\u4ee5\u901a\u8fc7Ci\u662f\u5426\u4e3a\u96f6\u6765\u5224\u65ad\u8fd9\u4e2a\u70b9\u662f\u4e0d\u662f\u8f93\u5165\u5c42\uff08\u6211\u4e4b\u524d\u60f3\u8fc7\u4f1a\u4e0d\u4f1a\u6709\u8f93\u5165\u5c42\u7684Ci\u503c\u4e3a\u96f6\u7684\u60c5\u51b5\uff0c\u56e0\u4e3a\u9898\u76ee\u6ca1\u6709\u8bf4\u8f93\u5165\u5c42\u5fc5\u7136\u975e\u96f6\uff0c\u7136\u800c\u5b9e\u8df5\u8bc1\u660e\u6570\u636e\u5e76\u6ca1\u6709\uff0c\u5982\u679c\u6709\u5f3a\u8feb\u75c7\u7684\u8bdd\u8fd8\u662f\u5b58\u4e00\u4e0bU\u6570\u7ec4\uff0c\u7136\u540e\u5f53\u5224\u65ad\u4e00\u4e2a\u70b9\u5165\u5ea6\u975e\u96f6\u7684\u65f6\u5019\u518d\u51cf\u53bb\uff09\n\u6309\u62d3\u6251\u540e\u7684\u987a\u5e8f\u8d70\u5b8c\u5168\u56fe\u540e\u518d\u5224\u65ad\u51fa\u5ea6\u4e3a0\u7684\u70b9\u7684\u72b6\u6001\uff0c\u5927\u4e8e0\u5c31\u8f93\u51fa\uff0c\u6309\u7167\u8f93\u5165\u987a\u5e8f\u626b\u4e00\u904d\u6570\u7ec4\u5c31\u53ef\u4ee5\u6ee1\u8db3\u9898\u76ee\u8981\u6c42\u7684\u6309\u7f16\u53f7\u987a\u5e8f\u8f93\u51fa\n\uff08\u82e5\u6709\u4e0d\u8db3\u8bf7\u5927\u4f6c\u6307\u6559\n\u4e0a\u4ee3\u7801\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\nusing namespace std;\nint n,p,tot,c[110],head[110],s[110],in[110],top,out[110],sum;\nstruct AA{\n\tint to,v,next;\n}edge[5500];\nvoid add(int a,int b,int k){\n\tedge[++tot].to=b;\n\tedge[tot].v=k;\n\tedge[tot].next=head[a];\n\thead[a]=tot;\n}\nvoid tuopu(){\n\tfor (int i=1;i<=n;i++){//\u5bfb\u627e\u5165\u5ea6\u4e3a0\u7684\u70b9\u653e\u8fdb\u6570\u7ec4 \n\t\tif (in[i]==0) s[++top]=i;//\u4e0a\u6587\u8bf4\u7684\u5f3a\u8feb\u75c7\u53ef\u4ee5\u5728\u8fd9\u4e2a\u5730\u65b9\u52a0\u4e2aelse \u51cf\u53bbU \n\t}\n\tfor (int i=1;i<=top;i++){\n\t\tint x=s[i];// \u4ece\u6570\u7ec4\u4e2d\u53d6\u70b9\uff0c\u65ad\u53bb\u8fd9\u4e2a\u70b9\u6240\u6709\u8fde\u51fa\u53bb\u7684\u8fb9\uff0c\u8fb9\u8fde\u8fc7\u53bb\u7684\u70b9\u7684\u5165\u5ea6\u51cf\u4e00 \n\t\tfor (int j=head[x];j;j=edge[j].next){ \n\t\t\tin[edge[j].to]--;\n\t\t\tif (in[edge[j].to]==0) s[++top]=edge[j].to;//\u5f53\u8be5\u70b9\u5165\u5ea6\u51cf\u4e3a0\uff0c\u8bf4\u660e\u524d\u9762\u8be5\u5904\u7406\u7684\u5df2\u7ecf\u5904\u7406\u4e86\uff0c\u8fd1\u961f\u5217 \n\t\t}\n\t}\n}\nint main(){\n\tint a,b,k;\n\tscanf(\"%d %d\",&n,&p);\n\tfor (int i=1;i<=n;i++){\n\t\tscanf(\"%d %d\",&c[i],&a);\n\t\tif (c[i]==0) c[i]-=a;\n\t} \n\tfor (int i=1;i<=p;i++){\n\t\tscanf(\"%d %d %d\",&a,&b,&k);\n\t\tadd(a,b,k);\n\t\tin[b]++;\n\t\tout[a]++;\n\t}\n\ttuopu();\n\tfor (int i=1;i<=top;i++){//\u6309\u62d3\u6251\u6392\u5e8f\u540e\u7684\u987a\u5e8f\u63a8\u4e00\u904d \n\t\tif (c[i]<=0) continue;\n\t\tfor (int j=head[i];j;j=edge[j].next){\n\t\t\tc[edge[j].to]+=edge[j].v*c[i];\n\t\t}\n\t}\n\tfor (int i=1;i<=n;i++){\n\t\tif (out[i]==0&&c[i]>0){\n\t\t\tprintf(\"%d %d\\n\",i,c[i]);\n\t\t\tsum++;\n\t\t}\n\t}\n\tif (sum==0) printf(\"NULL\");\n\treturn 0;\n}\n```",
        "postTime": 1524836575,
        "uid": 50337,
        "name": "jrxc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1038 \u3010\u795e\u7ecf\u7f51\u7edc\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u4e5f\u53ef\u4ee5\u7528\u961f\u5217\u6765\u505a\uff0c\u4f46\u6bd4\u8f83\u9ebb\u70e6\u3002\u3002\u3002\u3002\u6ca1\u529e\u6cd5\uff0c\u849f\u84bb\u4e00\u679a\u3002\n\n\u9996\u5148\uff0c\u5c06\u8d77\u70b9\uff08ci==1\u7684\u70b9\uff09\u653e\u5165\u961f\u5217\u4e4b\u4e2d\u3002\u5f53head< tail\u65f6\uff0c\n\n++head\uff0c\u5c06\u961f\u9996\u7684\u70b9\uff08team\u3010head\u3011\uff09\u5c55\u5f00\u53bb\u627e\u4ed6\u7684\u513f\u5b50\u8282\u70b9\u3002\n\n\u5982\u679c\u513f\u5b50\u8282\u70b9\u6ca1\u653e\u5165\u961f\u5217\u5219\u653e\u5165\u3002l\u4ee3\u8868\u672c\u5c42\u6700\u540e\u4e00\u4e2a\u70b9\u5728team\u3010\u3011\u4e2d\u7684\u5e8f\u53f7\uff0cl2\u7528\u4e8e\u8bb0\u5f55\u4fee\u6539\u524d\u7684l\uff0c\u4fbf\u4e8e\u8f93\u51fa\u3002\u5f53head==l\u65f6\uff0c\u5219\u8fd9\u4e00\u5c42\u7684\u8282\u70b9\u626b\u63cf\u6bd5\u3002\u6b64\u65f6l+1\u5230tail\u95f4\u7684\u8282\u70b9\u5373\u662f\u4e0b\u4e00\u5c42\u7684\u8282\u70b9\u3002\u5bf9\u4e0b\u4e00\u5c42\u7684\u8282\u70b9\u65bd\u884c\u51cfui\u3010\u3011\u64cd\u4f5c\uff0c\u5982\u679c\u51cf\u5b8c\u540e\u7684ci\u3010\u3011\u5927\u4e8e0\uff0c\u5219\u8fd9\u4e2a\u8282\u70b9\u5904\u4e8e\u5174\u594b\u72b6\u6001\uff0c\u53ef\u4ee5\u5411\u4e0b\u4f20\u9012\u3002\u82e5\u4e0d\u80fd\uff0c\u5219\u7528ex\u3010\u3011\uff08\u56e0\u4e3aexst\u3010\u3011\u5df2\u7ecf\u7528\u6765\u8bb0\u5f55\u522b\u7684\u4e86\u3002\u3002\u3002\uff09\u6253\u4e2a\u6807\u8bb0\u963b\u6b62\u7ee7\u7eed\u4e0b\u4f20\u3002\u5faa\u73af\u5b8c\u6210\u540e\uff0cl2+1\u5230l\uff08\u4e5f\u5c31\u662ftail\uff09\u4e4b\u95f4\u7684\u4fbf\u662f\u89e3\uff08\u6ce8\u610f\u53ea\u7528\u8f93\u51fa\u5927\u4e8e0\u7684\uff0c\u6240\u4ee5\u8f93\u51fa\u65f6\u52a0\u4e00\u4e2a\u5224\u5b9a\uff09\uff0c\u81f3\u4e8eco\u3010\u3011\uff0c\u53ea\u662f\u4e3a\u4e86\u6309\u987a\u5e8f\u8f93\u51fa\u7528\u7684\u3002\n\n\u89e3\u91ca\u5199\u5f97\u591f\u8be6\u7ec6\u5f97\u4e86\u5427\u3002\u3002\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#include<string>\n#include<queue>\nusing namespace std;\nint n,p,ta,ci[1000001],ui[1000001];\nint head,l2,tail,team[1000001],exist[100010];\nint ex[1000001],co[1000001],lx;\nstruct ac\n{\n    int t,s,next,head,w;\n}e[100001*4];\nvoid build(int x,int y,int z)\n{\n    e[++ta].t=y;\n    e[ta].w=z;\n    e[ta].s=x;\n    e[ta].next=e[x].head;\n    e[x].head=ta;\n```\n}//\u5efa\u56fe\u3002\n```cpp\nbool cmp(int a,int b)\n{\n    return a<b;\n}\nint main()\n{\n    cin>>n>>p;\n    for(int i=1;i<=n;++i)\n    {\n        cin>>ci[i]>>ui[i];\n    }\n    for(int i=1;i<=p;++i)\n    {\n        int a,b,c;\n        cin>>a>>b>>c;\n        build(a,b,c);\n    }\n    for(int i=1;i<=n;++i)\n    {\n        if(ci[i]!=0)\n        {\n            team[++tail]=i;\n        }\n```\n}//\u8d77\u70b9\u5165\u961f\u3002\nint l=tail;//\u6b64\u65f6l\u4e3a\u7b2c\u4e00\u5c42\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u5728team\u3010\u3011\u4e2d\u7684\u5e8f\u53f7\u3002\n\n        \n        \n```cpp\n    while(head<tail)\n    {\n        if(head==l)//\u5f53\u67d0\u4e00\u5c42\u5faa\u73af\u5b8c\u6bd5\u65f6\uff0c\u6267\u884c\u51cfui\u3010\u3011\u64cd\u4f5c\u3002\n        {\n            for(int i=l+1;i<=tail;++i)\n            {\n                ci[team[i]]=ci[team[i]]-ui[team[i]];\n                if(ci[team[i]]<=0)//\u5982\u679c\u7ec6\u80de\u4e0d\u5174\u594b\u5219\u6807\u8bb0\u3002\n                {\n                    ex[team[i]]=1;\n                }\n            }\n            l2=l;\n            l=tail;//\u66f4\u65b0l\uff0cl2.\n        }\n        head++; int u=team[head];\n       if(ex[u]!=1)//\u5982\u679c\u8282\u70b9\u5174\u594b\uff0c\u5219\u4fee\u6539\u4ed6\u7684\u5b50\u8282\u70b9\u3002\n        {\n            for(int i=e[u].head;i;i=e[i].next)\n            {\n                int go=e[i].t;\n                ci[go]+=ci[e[i].s]*e[i].w;\n                if(exist[go]!=1)\n                {    //\u5982\u679c\u5b50\u8282\u70b9\u672a\u5165\u961f\u5219\u5165\u961f\u3002\n                    exist[go]=1;\n                    team[++tail]=go;\n                }\n            }\n        }\n    }\n    for(int i=l2+1;i<=tail;++i)\n    {\n        co[++lx]=team[i];\n    }\n    sort(co+1,co+1+lx,cmp);//\u4ece\u4e0b\u5230\u5927\u8f93\u51fa\u3002\n    if((ci[co[lx]]==0&&ci[co[1]]==0)||tail<n)\n    {\n        cout<<\"NULL\";//\u5982\u679c\u9996\u5c3e\u90fd\u662f0\uff08\u56e0\u4e3asort\u8fc7\u4e86\uff0c\u6240\u4ee5\u5982\u679c\u9996\u5c3e\u90fd\u662f0\u5219\u5168\u662f0\uff09\u6216\u672a\u904d\u5386\u5230\u8f93\u51fa\u5c42\uff0c\u5219\u8f93\u51faNULL\u3002\n    }\n    else\n    {\n        for(int i=1;i<=lx;++i)\n        {\n            if(ci[co[i]]>0)\n            cout<<co[i]<<\" \"<<ci[co[i]]<<'\\n';\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1515832817,
        "uid": 37488,
        "name": "ghmgjf",
        "ccfLevel": 0,
        "title": "1038\u795e\u7ecf\u7f51\u7edc"
    },
    {
        "content": "\u6309\u7167\u62d3\u6251\u5e8f\u4e00\u4e2a\u4e00\u4e2a\u8ba1\u7b97\uff0c\u5f53\u8fdb\u5165\u67d0\u4e2a\u70b9i\u7684\u8fb9\u5168\u90e8\u7528\u5b8c\u65f6\u5c31\u51cf\u53bbUi\uff0c\u7136\u540e\u5224\u65adCi\uff0c\u5927\u4e8e0\u5219\u5165\u961f\u3002\n\n\n## \u6ce8\u610f\u51e0\u4e2a\u70b9\uff1a\n\n\n1. \u8f93\u5165\u5c42\u4e0d\u7528\u51cf\u53bbU\n\n2. \u6709\u8d1f\u8fb9\n\n3. \u6ca1\u6709\u5219\u8f93\u51faNULL\uff08\u56e0\u4e3a\u8fd9\u4e2awa\u4e86\u51e0\u6b21\n\n\n```cpp\n#include<cstdio>\n#include<queue>\n#include<vector>\nusing namespace std;\ntypedef long long ll;\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while(ch!='-'&&(ch>'9'||ch<'0')) ch=getchar();\n    if(ch=='-') f=-1,ch=getchar();\n    while(ch>='0'&&ch<='9') x=x*10+ch-'0',ch=getchar();\n    return x*f;\n}\n\nint n,P;\nconst int maxn=205;\nstruct edge{int v,w,p;}e[maxn*maxn];\nint tot,last[maxn];\nstruct node{\n    int c,u,ine,ote;\n    bool in,ot;\n}p[maxn];\n\ninline void insert(int u,int v,int w){\n    e[++tot]=(edge){v,w,last[u]};last[u]=tot;\n}\n\nint main(){\n    n=read(); P=read();\n    for(int i=1;i<=n;i++)\n        p[i].c=read(), p[i].u=read();\n    for(int i=1,u,v;i<=P;i++)\n        u=read(), v=read(), insert(u,v,read()),\n        p[u].ote++, p[v].ine++;\n    queue<int> q;\n    for(int i=1;i<=n;i++){\n        if(!p[i].ine) p[i].in=1, q.push(i);\n        if(!p[i].ote) p[i].ot=1;\n    }\n    while(!q.empty()){\n        int u=q.front(); q.pop();\n        for(int i=last[u],v;i;i=e[i].p){\n            v=e[i].v;\n            p[v].c+=e[i].w*p[u].c;\n            p[v].ine--;\n            if(!p[v].ine){\n                p[v].c-=p[v].u;\n                if(p[v].c>0)\n                    q.push(v);\n            }\n        }\n    }\n    bool flag=1; \n    for(int i=1;i<=n;i++)\n        if(p[i].ot&&p[i].c>0)\n            flag=0, printf(\"%d %d\\n\",i,p[i].c);\n    if(flag) printf(\"NULL\\n\");\n    return 0;\n}\n```",
        "postTime": 1508639773,
        "uid": 47344,
        "name": "Yorathgz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1038 \u3010\u795e\u7ecf\u7f51\u7edc\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u7740\u91cd\u8bb2\u4e00\u4e0b\u5ba1\u9898\u3002\n\n\u7b2c\u4e09\uff0c\u7b2c\u4e94\u4e2a\u70b9\u5361\u4e86\u5f88\u4e45\u3002\u3002\u3002\n\n\u4e00\u76f4\u4e0d\u77e5\u600e\u4e48\u56de\u4e8b\u3002\n\n\u540e\u6765\u53d1\u73b0\u9898\u76ee\u91cc\u6709\u4e00\u53e5\u8bdd\u53eb\u201c\u5728\u8f93\u5165\u5c42\u795e\u7ecf\u5143\u88ab\u6fc0\u53d1\u4e4b\u540e\u201d\n\n\u6240\u4ee5\u9898\u76ee\u4e2d\u7684ui\u5e76\u4e0d\u662f\u5b8c\u5168\u65e0\u7528\u7684\uff01\n\n\u9898\u76ee\u7684\u610f\u601d\u662f\uff0c\u7b2c\u4e00\u5c42\u795e\u7ecf\u5143\u7684ci\u662f\u94a6\u5b9a\u7684\uff0c\u4e0d\u7531\u516c\u5f0f\u8ba1\u7b97\uff1b\n\n\u5e76\u4e14\u5728\u5f00\u59cb\u65f6\u624b\u52a8\u6fc0\u6d3b\u6240\u6709\u8f93\u5165\u795e\u7ecf\u5143\uff01\n\n\u4f46\u662f\u4e3a\u4e86\u8fd9\u4e2a\u5f00\u4e2a\u6570\u7ec4\u4f3c\u4e4e\u4e0d\u503c~\n\n\u6240\u4ee5\u6211\u4eec\u5728\u8f93\u5165\u662f\u52a0\u4e00\u4e2a\u5224\u65ad\uff0c\u5982\u679cci\uff01=0\uff0c\u5219ui=0\uff1b\n\n*************************************************\n\n\u7136\u540e\u62d3\u6251\u6392\u4e2a\u5e8f\uff0c\u88f8\u505a\u5c31\u884c\u4e86\u3002\n\n\u4e0a\u4ee3\u7801~\n\n        \n```cpp\n#include<stdio.h>\n#include<queue>\nusing namespace std;\nint n;int p;\nqueue <int> q;int now;\nint c[10000];\nint map[10000][10000];//\u90bb\u63a5\u77e9\u9635\u5b58\u56fe\nbool wap[10000][10000];bool book[10000];\nint tp[10000];int cnt=0;\nint res[10000];int cot=0;\nconst int inf=9999999;\nint main()\n{\n    scanf(\"%d%d\",&n,&p);\n    for(int i=0;i<n;i++)//\u624b\u52a8memset\n    {\n        for(int j=0;j<n;j++)\n        {\n            map[i][j]=inf;\n        }\n    }\n    for(int i=0;i<n;i++)\n    {\n        int set;int u;\n        scanf(\"%d%d\",&set,&u);\n        if(set!=0)u=0;//\u7075\u9b42\u7279\u5224\uff0c40\u5206\u7684\u533a\u522b\n        c[i]=set-u;\n    }\n    for(int i=0;i<p;i++)\n    {\n        int u;int v;int val;\n        scanf(\"%d%d%d\",&u,&v,&val);\n        map[u-1][v-1]=val;wap[u-1][v-1]=true;//\u4ece\u96f6\u5f00\u59cb\u7684\u6570\u7ec4\n    }\n    for(int i=0;i<n;i++)//tuopu\u6392\u5e8f\n    {\n        q.push(i);\n    }   \n    while(!q.empty())\n    {\n        now=q.front();\n        for(int i=0;i<n;i++)\n        {\n            if(wap[i][now])goto skip;//goto\u8bed\u53e5\u5b9e\u73b0\u68c0\u6d4b\u5165\u8fb9\n        }\n        q.pop();\n        for(int i=0;i<n;i++)\n        {\n            wap[now][i]=false;\n        }\n        tp[cnt++]=now;continue;\n        skip:;\n        q.push(now);q.pop();\n    }\n    for(int i=0;i<n;i++)\n    {\n        if(c[tp[i]]<=0)continue;\n        for(int j=0;j<n;j++)\n        {\n            if(map[tp[i]][j]==inf)continue;\n            c[j]+=c[tp[i]]*map[tp[i]][j];    //\u5904\u7406\u6743\u503c    \n        }\n    }\n    for(int i=0;i<n;i++)\n    {\n        for(int j=0;j<n;j++)\n        {\n            if(map[i][j]!=inf)goto skipii;//\u627e\u51fa\u5ea6\u4e3a0\u7684\u70b9\n        }\n        res[cot++]=i;\n        skipii:;\n    }\n    bool flag=true;\n    for(int i=0;i<cot;i++)//\u8f93\u51fa\n    {\n        if(c[res[i]]<=0)continue;flag=false;\n        printf(\"%d %d\\n\",res[i]+1,c[res[i]]);\n    }\n    if(flag)\n    {\n        printf(\"NULL\");\n    }\n    return 0;//\u62dc\u62dc\u7a0b\u5e8f~\n}\n```",
        "postTime": 1506763683,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1038 \u3010\u795e\u7ecf\u7f51\u7edc\u3011"
    },
    {
        "content": "\u5b89\u5229\u4e00\u53d1\u81ea\u5df1\u7684\u535a\u5ba2\uff1a[http://www.cnblogs.com/OIerShawnZhou/](http://www.cnblogs.com/OIerShawnZhou/)\n\n\uff08\u6211\u5e73\u5e38\u5199\u7684\u9898\u89e3\u90fd\u4f1a\u5f80\u535a\u5ba2\u91cc\u53d1\uff0c\u6b22\u8fce\u5404\u4f4d\u5927\u4f6c\u524d\u6765\u62cd\u7816\uff09\n\n\\*\u4e0a\u4e00\u4e2a\u9898\u89e3\u6709\u9519\u522b\u5b57\uff0c\u5df2\u66f4\u6b63\n\n\u5176\u5b9e\u8fd9\u9053\u9898\u6bd4\u8f83\u96be\u770b\u7684\u662f\u90a3\u4e2a\u516c\u5f0f\uff0c\u6709\u540c\u5b66\u53ef\u80fd\u4e0a\u6765\u6ca1\u80fd\u770b\u660e\u767d\uff08\u5305\u62ec\u6211\u4e5f\u662f\n\nc[i] = w[i][j] \\* c[j] - u[i].\n\n\u5982\u679c\u662f\u90bb\u63a5\u8868\u5b58\u56fe\uff0c\u628aw[i][j]\u6362\u6210edge[i].dis\u5c31\u597d\u3002\n\n\u6ce8\u610f\u5230\u6bcf\u5c42\u795e\u7ecf\u5143\u53ea\u5411\u4e0b\u4e00\u5c42\u7684\u795e\u7ecf\u5143\u8f93\u51fa\u4fe1\u606f\uff0c\u53ea\u4ece\u4e0a\u4e00\u5c42\u795e\u7ecf\u5143\u63a5\u53d7\u4fe1\u606f\uff0c\u770b\u56fe\u4e5f\u80fd\u770b\u660e\u767d\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u663e\u7136\u7684DAG\uff0c\u90a3\u4e48\u53ef\u4ee5\u8003\u8651\u62d3\u6251\u6392\u5e8f\u3002\n\n\u5bf9\u4e8e\u90a3\u4e2au\u6570\u7ec4\uff0c\u8fd9\u4e2a\u73a9\u610f\u7528\u5904\u4e0d\u5927\uff0c\u800c\u4e14\u9664\u4e86\u516c\u5f0f\u4e5f\u4e0d\u53c2\u4e0e\u8ba1\u7b97\uff0c\u8f93\u5165\u540e\u53ef\u4ee5\u76f4\u63a5\u628a\u90a3\u4e2a\u6570\u51cf\u6389\u3002\n\n\u4f7f\u7528\u62d3\u6251\u6392\u5e8f\u7684\u539f\u56e0\u4e5f\u5f88\u7b80\u5355\uff0c\u5982\u679c\u4f60\u8981\u7b97\u4e00\u4e2ac[i]\uff0c\u4f60\u9700\u8981\u5148\u628a\u4e4b\u524d\u90a3\u4e2ac[j]\u7b97\u51fa\u6765\u3002\u9898\u76ee\u8981\u6211\u4eec\u7b97\u7ec8\u70b9\uff08\u51fa\u5ea6\u4e3a0\u7684\u70b9\uff09\u7684c\u503c\uff0c\u90a3\u4e48\u5c31\u5f97\u5148\u8ba1\u7b97\u4e0a\u4e00\u5c42\uff0c\u8981\u8ba1\u7b97\u4e0a\u4e00\u5c42\u8fd8\u5f97\u5148\u8ba1\u7b97\u4e0a\u4e00\u5c42\u7684\u4e0a\u4e00\u5c42\u2026\u2026\u6700\u7ec8\uff0c\u6211\u4eec\u5e94\u8be5\u4ece\u7b2c\u4e8c\u5c42\u4ece\u4e0a\u5f80\u4e0b\u5f00\u59cb\u8ba1\u7b97\uff08\u7b2c\u4e00\u5c42\u5df2\u7ecf\u7ed9\u51fa\uff09\u3002\u800c\u8fd9\u4e2a\u8ba1\u7b97\u7684\u5c42\u6b21\u6b63\u597d\u548c\u62d3\u6251\u6392\u5e8f\u65b9\u5f0f\u76f8\u5bf9\u5e94\uff0c\u6240\u4ee5\u8003\u8651\u4f7f\u7528\u62d3\u6251\u6392\u5e8f\u3002\n\n\u6211\u559c\u6b22\u7528\u90bb\u63a5\u8868\uff0c\u8bfb\u5165\u7684\u65f6\u5019\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u7684\u5165\u5ea6\u548c\u51fa\u5ea6\uff0c\u7136\u540e\u8dd1\u4e00\u6b21\u62d3\u6251\u6392\u5e8f\uff0c\u6392\u5e8f\u7684\u65f6\u5019\u5982\u679c\u51fa\u73b0\u4f20\u9012\u8fc7\u7a0b\u5219\u66f4\u65b0c[i]\uff0c\u76f4\u5230\u6392\u5e8f\u5b8c\u6bd5\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u6700\u540e\u9762\u4e00\u5c42\u7684c\u503c\u7b97\u51fa\u6765\u3002\n\n\u8f93\u51fa\u7684\u65f6\u5019\u5224\u65ad\uff0c\u9898\u76ee\u8981\u8f93\u51fac[i]>0\u7684\u7ec8\u70b9\uff0c\u7167\u505a\u5c31\u597d\u4e86\u3002\u8f93\u51fa\u7684\u65f6\u5019\u518d\u52a0\u4e00\u4e2a\u65e0\u8f93\u51fa\u6807\u8bb0\uff0c\u5224\u65ad\u662f\u4e0d\u662f\u8f93\u51faNULL\uff0c\u5c31\u597d\u4e86\u3002\n\n\u53c2\u8003\u4ee3\u7801:\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <queue>\n#define maxn 205\n#define INF 2147483647\n#define check cout << \"ok\" << endl;\nusing namespace std;\nstruct Edge{\n    int from,to,dis;\n};\nEdge edge[maxn];\nint head[maxn];\nint tot = 0;\nint du_in[maxn];\nint du_out[maxn];\nint n,p;\nint c[maxn],U[maxn];\nint from,to,dis;\nbool flag = false;\n\nvoid add_edge(int from,int to,int dis){\n    edge[++tot].from = head[from];\n    edge[tot].to = to;\n    edge[tot].dis = dis;\n    head[from] = tot;\n}\n\nvoid toposort(void){\n    queue<int> q;\n    for (int i=1;i<=n;i++)\n        if (du_in[i] == 0)\n            q.push(i);\n\n    while (!q.empty()){\n        int u = q.front();\n        q.pop();\n        if (c[u] <= 0){\n            for (int i = head[u];i!=0;i = edge[i].from){\n            int v = edge[i].to;\n            du_in[v]--;\n            if (du_in[v] = 0)\n                q.push(i);    \n            }    \n            continue;\n        }\n        for (int i=head[u];i!=0;i = edge[i].from){\n            int v = edge[i].to;\n            c[v] += c[u] * edge[i].dis;\n            du_in[v]--;\n            if (du_in[v] == 0)\n                q.push(v);\n        }\n\n    }\n\n}\n\nint main(){\n    cin >> n >> p;\n    for (int i=1;i<=n;i++)\n        cin >> c[i] >> U[i];\n    for (int i=1;i<=n;i++)\n        if (c[i] == 0)\n            c[i] -=U[i];\n\n    for (int i=1;i<=p;i++){\n        cin >> from >> to >> dis;\n        add_edge(from,to,dis);\n        du_in[to]++;\n        du_out[from]++;\n    }\n\n    toposort();\n\n    for(int i=1;i<=n;i++)\n        if(du_out[i]==0 && c[i]>0) {\n            cout << i << \" \" << c[i] << endl;\n            flag=true;\n        }\n    if(!flag) \n        cout << \"NULL\";\n    return 0;\n}\n```",
        "postTime": 1505842205,
        "uid": 20197,
        "name": "ShawnZhou",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1038 \u3010\u795e\u7ecf\u7f51\u7edc\u3011"
    },
    {
        "content": "\u7ec8\u4e8e\u8fc7\u4e86\u3002\u3002\n\n20->60->100\u7684\u6211\u5f88\u65e0\u5948\u3002\u3002\n\n\u9898\u4e0d\u592a\u96be\uff0c\u5c31\u662f\u62d3\u6251\u6392\u5e8f\uff0c\u4f46\u6709\u51e0\u70b9\u8981\u6ce8\u610f\uff1a\n\n1\uff0c\u5148\u628a\u516c\u5f0f\u770b\u61c2\u3002\u3002\u8fd9\u4e2a\u795e\uff08la\uff09\u5947\uff08ji\uff09\u516c\u5f0f\u5728\u6211\u7684\u7535\u8111\u4e0a\u663e\u793a\u7684\u6bd4\u8f83\u62bd\u8c61\u3002\u3002\u662f\u6211\u773c\u795e\u4e0d\u597d\u5417\u3002\u3002\n\n\u4e00\u4e2a\u70b9\u7684\u72b6\u6001=\u4e0e\u5b83\u76f8\u8fde\u7684\u70b9\uff08\u4e0a\u4e00\u5c42\uff09\u4e0e\u5b83\u76f8\u8fde\u7684\u8fb9\u7684\u6743\u503c\u548c\\*\u4e0e\u5b83\u76f8\u8fde\u7684\u70b9\u7684\u72b6\u6001-\u5b83\u7684u\uff1b\n\n2\uff0cu\u6ca1\u4ec0\u4e48\u7528\u3002\u3002\u5c31\u662f\u4e2a\u6570\uff0c\u6c42\u72b6\u6001\u65f6\u51cf\u6389\u5c31\u884c\u4e86\uff1b\n\n3\uff0c\u8bb0\u5f97\u5b58\u4e00\u4e0b\u51fa\u5ea6\uff0c\u51fa\u5ea6\u4e3a0\u7684\u70b9\u5f53\u7136\u5c31\u662f\u8f93\u51fa\u70b9\uff08\u6211\u5f00\u59cb\u8fd8\u7528\u4e00\u4e2a\u53d8\u91cf\u5b58\u5c42\uff0c\u8c01\u5728\u6700\u540e\u4e00\u5c42\u5c31\u8f93\u51fa\u3002\u3002\uff09\n\n\u7136\u540e\u5c31\u662f\u62d3\u6251\u6392\u5e8f\u4e86\n\n\u4ee3\u7801\uff1a\n\ninclude<iostream>\n\ninclude<cstring>\n\ndefine ll 0x7f\n\n```cpp\nusing namespace std;\nint n,p;\nint a[201][201];//\u90bb\u63a5\u77e9\u9635\nint du[201];//\u5165\u5ea6\nint c[201],u[201];\nint sum[201];\nint st[100001];//\u6808\nint du2[201];//\u51fa\u5ea6\nbool use[201];//\u5224\u65ad\u6b64\u70b9\u7528\u8fc7\u6ca1\u6709\nint main()\n{    \n    cin>>n>>p;\n    for(int i=1;i<=n;i++)\n      for(int j=1;j<=n;j++)\n        a[i][j]=ll;//\u521d\u59cb\u5316\n    for(int i=1;i<=n;i++)\n      cin>>c[i]>>u[i];\n    for(int i=1;i<=p;i++)\n      {\n          int x,y,w;\n          cin>>x>>y>>w;\n          a[x][y]=w;\n        du[y]++;\n        du2[x]++;\n      }\n    int top=0,num=0;\n    for(int i=1;i<=n;i++)\n      if(!du[i])\n      {\n          st[++top]=i;\n          use[i]=1;\n      }\n    while(num!=n)//\u62d3\u6251\u6392\u5e8f\n    {\n        for(int i=1;i<=n;i++)\n          if(!du[i]&&!use[i])\n          {\n              c[i]=sum[i]-u[i];\n              if(c[i]>0)\n              {\n                  st[++top]=i;\n                  use[i]=1;\n            }\n          }\n        for(int i=1;i<=n;i++)\n          if(a[st[top]][i]!=ll&&!use[i])\n          {\n              sum[i]+=a[st[top]][i]*c[st[top]];//\u516c\u5f0f\n              du[i]--;//\u5165\u5ea6--\n          }\n        top--;\n        num++;\n    }\n    int t=0;\n    for(int i=1;i<=n;i++)\n      if(!du2[i]&&c[i]>0)//\u8f93\u51fa\u51fa\u5ea6\u4e3a0&&\u6700\u540e\u72b6\u6001\u5927\u4e8e0\u7684\u70b9\n      {\n          cout<<i<<\" \"<<c[i]<<endl; \n          t++;\n      }\n    if(!t) cout<<\"NULL\";//\u6ca1\u6709\u5c31\u8f93\u51fanull\n    return 0;\n}\n```",
        "postTime": 1503746217,
        "uid": 49206,
        "name": "Dispwnl",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1038 \u3010\u795e\u7ecf\u7f51\u7edc\u3011"
    },
    {
        "content": "\u4f60\u4eec\u8bf4\u6570\u636e\u5751..\u53ef\u662f\u6211\u8fd9\u6837\u505a\u4e00\u904d\u5c31\u8fc7.\u4e0d\u77e5\u9053\u662f\u505a\u6cd5\u6b63\u786e\uff08\u90fd\u53d1\u9898\u89e3\u4e86\u80fd\u4e0d\u6b63\u786e\u561b\uff09\u8fd8\u662f....\u5176\u4ed6\u795e\n\n\u9a6c\u7684\uff1f\uff1f\uff1f\uff1f\uff1f\n\n\u505a\u6cd5\uff1a\u6211\u5148\u6b63\u7740\u5efa\u8fb9\uff0c\u7136\u540edfs\u6c42\u51fa\u6bcf\u4e00\u6b21\u6709\u54ea\u4e9b\u7ed3\u70b9\u3002\u7136\u540e\u6211\u518d\u53cd\u5411\u5efa\u8fb9\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u6c42\u6bcf\u4e00\u4e2a\u7ed3\u70b9\u7684\n\n\u8fdb\u884cdfs\u90a3\u6837\u5c31\u80fd\u6c42\u51fa\u6bcf\u4e2a\u7ed3\u70b9\u7684\u72b6\u6001\uff0c\u6700\u540e\u6211\u518d\u5c06\u8f93\u51fa\u7684\u7ed3\u70b9\u72b6\u6001\u8f93\u51fa\u5c31\u53ef\u4ee5\u5566\u3002\n\n\u4e0a\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#define N 101\nusing namespace std;\nint n,p,x,cc,y,zz,cnt,flag,zsumedge,fsumedge;\nint c[N],u[N],rd[N],cd[N],ceng[N],z[N][N],fa[N],zhead[N],fhead[N];\nstruct E1{\n    int x,y,z,nxt;\n    E1(int x=0,int y=0,int z=0,int nxt=0):\n        x(x),y(y),z(z),nxt(nxt){}\n}zedge[N<<1];\nstruct E2{\n    int x,y,z,nxt;\n    E2(int x=0,int y=0,int z=0,int nxt=0):\n        x(x),y(y),z(z),nxt(nxt){}\n}fedge[N<<1];\nvoid zadd(int x,int y,int z){\n    zedge[++zsumedge]=E1(x,y,z,zhead[x]);\n    zhead[x]=zsumedge;\n}\nvoid fadd(int x,int y,int z){\n    fedge[++fsumedge]=E2(x,y,z,fhead[x]);\n    fhead[x]=fsumedge;\n}\nvoid dfs(int k){\n    ceng[k]=ceng[fa[k]]+1;\n    z[ceng[k]][++z[ceng[k]][0]]=k;\n    cc=max(cc,ceng[k]);\n    for(int i=zhead[k];i;i=zedge[i].nxt){\n        int v=zedge[i].y;\n        if(fa[k]!=v){\n            fa[v]=k;\n            dfs(v);\n        }\n    }\n}\nint main(){\n    scanf(\"%d%d\",&n,&p);\n    for(int i=1;i<=n;i++){\n        scanf(\"%d%d\",&c[i],&u[i]);\n    }\n    for(int i=1;i<=p;i++){\n        scanf(\"%d%d%d\",&x,&y,&zz);\n        cd[x]++;rd[y]++;\n        zadd(x,y,zz);fadd(y,x,zz);\n    }\n    for(int i=1;i<=n;i++)\n    if(!rd[i])dfs(i);\n    for(int s=2;s<=cc;s++){\n        for(int i=1;i<=z[s][0];i++){\n        int v=z[s][i];cnt=0;\n        for(int j=fhead[v];j;j=fedge[j].nxt){\n            int vv=fedge[j].y;\n            if(c[vv]>0)cnt+=(fedge[j].z*c[vv]);\n        }\n        c[v]=cnt-u[v];\n        }\n    }\n    for(int i=1;i<=n;i++){\n        if(cd[i]==0&&c[i]>0){\n            flag=1;printf(\"%d %d\\n\",i,c[i]);\n        }\n    }\n    if(flag==0)printf(\"NULL\\n\");\n    return 0;\n}\n```",
        "postTime": 1502624885,
        "uid": 49431,
        "name": "xun\u85b0",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1038 \u3010\u795e\u7ecf\u7f51\u7edc\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7684\u96be\u5ea6\u4e00\u822c\uff0c\u4f46\u662f\u6d4b\u8bd5\u6570\u636e\u6211\u7ed9\u6253\u6ee1\u5206\uff01\uff01\u771f\u7684\u662f\u4ec0\u4e48\u5751\u6570\u636e\u90fd\u6709\n\n\u5148\u7b80\u5355\u8bf4\u4e00\u4e0b\u8fd9\u9053\u9898\u7684\u601d\u8def\n\n\u8bfb\u5165\u4e4b\u540e\u62d3\u6251\u6392\u5e8f\uff0c\u5728\u6392\u5e8f\u7684\u8fc7\u7a0b\u4e2d\u6309\u7167\u4ed6\u7ed9\u7684\u516c\u5f0f\u8fdb\u884c\u8ba1\u7b97\n\n\u8bf4\u4e00\u4e0b\u8fd9\u9053\u9898\u7684\u5751\u70b9\uff1a\n\n1.\u6700\u540e\u8f93\u51fa\u7ed3\u679c\u7684\u65f6\u5019\u53ea\u6709>0\u7684\u624d\u8f93\u51fa\n\n2.\u5165\u5ea6\u4e3a0\u7684\u70b9\u4e0d\u9700\u8981\u51cf\u9608\u503c\uff08\u4f1a\u5bfc\u81f4\u7b2c\u4e94\u4e2a\u6d4b\u8bd5\u70b9WA\uff09\n\n3.\u9608\u503c\u6700\u597d\u4e00\u5f00\u59cb\u5c31\u51cf\u53bb\n\n4.\u53ef\u4ee5\u901a\u8fc7\u8bb0\u5f55\u51fa\u5ea6\u6765\u5224\u65ad\u8f93\u51fa\u533a\n\n        \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<queue>\n#include<cstdlib>\nusing namespace std;\nvoid read(int & n)\n{\n    char c='+';int x=0;int flag=0;\n    while(c<'0'||c>'9')\n    {\n        c=getchar();\n        if(c=='-')\n        flag=1;\n    }\n    while(c>='0'&&c<='9')\n    x=x*10+(c-48),c=getchar();\n    flag==1?n=-x:n=x;\n}\nconst int MAXN=201;\nstruct node\n{\n    int u,v,w,nxt;\n}edge[MAXN*40];\nint head[MAXN];\nint num=1;\nint now[MAXN],yu[MAXN],rudu[MAXN],vis[MAXN],chudu[MAXN];\nint n,m;\nvoid add_edge(int x,int y,int z)\n{\n    edge[num].u=x;\n    edge[num].v=y;\n    edge[num].w=z;\n    edge[num].nxt=head[x];\n    head[x]=num++;\n}\nvoid Topsort()\n{\n    queue<int>q;\n    for(int i=1;i<=n;i++)\n    {\n        if(rudu[i]==0)\n            vis[i]=1,q.push(i);\n        else\n            now[i]-=yu[i];\n    }\n    while(q.size()!=0)\n    {\n        int p=q.front();\n        q.pop();\n        for(int i=head[p];i!=-1;i=edge[i].nxt)\n        {\n            rudu[edge[i].v]--;\n            if(rudu[edge[i].v]==0)\n            {\n                q.push(edge[i].v);\n                vis[edge[i].v]=1;\n            }\n            if(now[edge[i].u]>0)\n            now[edge[i].v]+=edge[i].w*now[edge[i].u];\n        }\n    }\n    for(int i=1;i<=n;i++)\n    {\n        if(chudu[i]==0&&now[i]!=0)\n        {\n            for(int i=1;i<=n;i++)\n            {\n                if(chudu[i]==0)\n                {\n                    if(now[i]>0)\n                    printf(\"%d %d\\n\",i,now[i]);\n                }\n            }\n            exit(0);\n        }\n    }\n    printf(\"NULL\");\n}\nint main()\n{\n    ///freopen(\"sjwl.in\",\"r\",stdin);\n    //freopen(\"sjwl.out\",\"w\",stdout);\n    read(n);read(m);\n    for(int i=1;i<=n;i++)\n        head[i]=-1;\n    for(int i=1;i<=n;i++)\n    {\n        read(now[i]);read(yu[i]);\n    }\n    for(int i=1;i<=m;i++)\n    {\n        int x,y,z;\n        read(x);read(y);read(z);\n        add_edge(x,y,z);\n        rudu[y]++;\n        chudu[x]++;\n    }\n    Topsort();\n    return 0;\n}\n```",
        "postTime": 1498124955,
        "uid": 36984,
        "name": "attack",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1038 \u3010\u795e\u7ecf\u7f51\u7edc\u3011"
    },
    {
        "content": "\u55ef\uff0c\u770b\u5b8c\u4e86\u8bf8\u591adalao\u7684\u4ee3\u7801\uff0c\u53d1\u73b0\u81ea\u5df1\u867d\u7136\u5199\u5f97\u957f\u800c\u4e11\uff0c\u4f46\u601d\u8def\u4e0d\u592a\u4e00\u6837\u3002\u59d1\u4e14\u628a\u4ee3\u7801\u53d1\u51fa\u6765\u3002\n\n\u8fd9\u9898\u5982\u4e0b\u9762dalao\u6240\u8a00\uff0c\u5751\u7684\u96be\u5ea6\u5927\u4e8e\u9898\u76ee\u3002\u5176\u4e2d\u6700\u5751\u7684\u662f\u3002\u3002\u3002\u8f93\u5165\u795e\u7ecf\u5143\u6709\u53ef\u80fd\u6210\u4e3a\u8f93\u51fa\u5c42\uff01\uff01\uff01\n\n\u5982\u679c\u4e0d\u52a0\u8fd9\u4e00\u6761\u5224\u65ad\uff0c80\u59a5\u59a5\u7684\uff1b\u8fd8\u6709\u5c31\u662f\u770b\u6e05\u9898\uff0cWij\u7684\u610f\u4e49\u4e0d\u592a\u5bb9\u6613\u7406\u89e3\u3002\n\n\u5176\u4ed6\u8bf8\u5982U\u5728sigma\u7b26\u53f7\u5916\u5566\uff0c\u72b6\u6001\u5c0f\u4e8e0\u4e0d\u8f93\u51fa\u4fe1\u53f7\u5566\u90fd\u6bd4\u8f83\u5bb9\u6613\u770b\u89c1\u4e86\u3002\n\n\u7136\u540e\u8c08\u8c08\u6211\u7684\u601d\u8def\u3002\n\n\u6211\u624d\u4e0d\u4f1a\u8bf4\u6211\u4e00\u5f00\u59cb\u770b\u9519\u9898\u60f3\u7528\u5e7f\u641c\u5462\n\n\u975e\u5e38\u66b4\u529b\u7684\u505a\u6cd5\uff0c\u9996\u5148\u5f53\u7136\u628a\u8f93\u5165\u5c42\u6254\u961f\u5217\uff0c\u5f80\u4e0b\u68c0\u67e5\uff0c\u5f00visited\u6570\u7ec4\u8bb0\u5f55\u67d0\u4e2a\u70b9\u72b6\u6001\u662f\u5426\u5df2\u7ecf\u7b97\u8fc7\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff0c\u82e5\u7b97\u8fc7\u76f4\u63a5\u7ee7\u7eed\u904d\u5386\uff0c\u6ca1\u7b97\u8fc7\u5f00\u59cb\u68c0\u67e5\u6240\u6709\u6709\u5411\u5b83\u7684\u8fb9\u7684\u795e\u7ecf\u5143\uff08\u5c31\u662f\u4fd7\u8bdd\u8bf4\u7684\u5b83\u7684\u7238\u7238\u4eec\uff09\u662f\u5426\u88ab\u7b97\u8fc7\u6216\u662f\u8f93\u5165\u5c42\u3002\u5982\u679c\u6ee1\u8db3\u6761\u4ef6\u81ea\u7136\u662f\u987a\u6c34\u63a8\u821f\u628a\u5b83\u7684\u72b6\u6001\u7b97\u51fa\u6765\u7136\u540e\u6807\u8bb0\u4e3a\u7b97\u8fc7\uff0c\u5426\u5219\u5c06|\u5e7f\u641c\u4e2d\u641c\u5230\u5b83\u7684\u90a3\u4e2a\u8282\u70b9|\uff08\u597d\u62d7\u53e3\uff09\u91cd\u65b0\u6254\u5165\u961f\u5217\u3002\u56e0\u4e3a\u6709\u8bb0\u5f55\u67d0\u70b9\u662f\u5426\u88ab\u7b97\u8fc7\uff0c\u56e0\u6b64\u8fd9\u79cd\u9b3c\u755c\u7684\u505a\u6cd5\u5e76\u4e0d\u4f1a\u803d\u8bef\u65f6\u95f4\u3002\u6700\u540e\u5728\u5982\u6b64\u6c34\u7684\u6570\u636e\u4e0b\uff0c\u8fd9\u79cd\u65b9\u6cd5\u987a\u5229\u901a\u8fc7\u54af\u3002\n\u4e0b\u9762\u7c98\u4e0a\u6211\u90a3\u5197\u957f\u4e14\u6781\u4e0d\u7f8e\u89c2\u7684\u4ee3\u7801\u4ec5\u4f9b\u53c2\u8003\u3002\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<queue>\n#include<vector>\nusing namespace std;\nstruct Neu\n{\n    int name;\n    int c;\n    int u;\n}ns[101];\nbool isvised[101] = {false};\nint ways[101][101];\nqueue<int> q;\nvector<int> inum[101];\nvector<int> onum[101];\nbool isout[101] = {false};\nbool isin[101] = {false};\nvoid work()\n{\n    while(!q.empty())\n    {\n        int a = q.front();\n        bool isok = true;\n        for(vector<int>::iterator ite = onum[a].begin() ; ite != onum[a].end() ; ite++)\n        {\n            if(isvised[*ite])\n                continue;\n            q.push(*ite);\n            int adi = 0;\n            bool ok = true;\n            for(vector<int>::iterator it = inum[*ite].begin() ; it != inum[*ite].end() ; it++)\n            {\n                if(!isvised[*it] && (!isout[*it]))\n                 ok = isok = false;\n            }\n            if(!ok)\n            {\n                ok = true;\n                continue;\n            }\n            for(vector<int>::iterator it = inum[*ite].begin() ; it != inum[*ite].end() ; it++)\n            {\n                if(ns[*it].c <= 0)\n                    continue;\n                else\n                {\n                    adi += ways[*it][*ite]*ns[*it].c;\n                }\n            }\n            ns[*ite].c = adi - ns[*ite].u;\n            isvised[*ite] = true;\n        }\n        if(isok)\n            q.pop();\n        else\n        {\n            q.pop();\n            q.push(a);\n        }\n    }\n}\nint main()\n{\n    int n , p;\n    cin>>n>>p;\n    for(int i = 1 ; i <= n ; i++)\n    {\n        int a , b;\n        cin>>a>>b;\n        if(a > 0)\n        {\n            q.push(i);\n            isout[i] = true;\n        }\n        ns[i].c = a;\n        ns[i].u = b;\n    }\n    for(int i = 0 ; i < p ; i++)\n    {\n        int a , b , c;\n        cin>>a>>b>>c;\n        ways[a][b] = c;\n        inum[b].push_back(a);\n        onum[a].push_back(b);\n    }\n    work();\n    vector<int> ans;\n    for(int i = 1 ; i <= n ; i++)\n    {\n        if((onum[i].empty() || (isout[i] && isvised[i])) && ns[i].c > 0)\n            ans.push_back(i);\n    }\n    if(ans.empty())\n    {\n        cout<<\"NULL\";\n        return 0;\n    }\n    for(vector<int>::iterator ite = ans.begin() ; ite!= ans.end() ; ite++)\n        cout<<*ite<<\" \"<<ns[*ite].c<<endl;\n    return 0;\n}\n```",
        "postTime": 1494849803,
        "uid": 25746,
        "name": "\u7406\u60f3\u6c14\u4f53",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1038 \u3010\u795e\u7ecf\u7f51\u7edc\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6211\u624d\u4e0d\u4f1a\u627f\u8ba4\u6211\u7528\u7684\u601d\u60f3\u5176\u5b9e\u662f**\u641c\u7d22**233\n\n\u5176\u5b9e\u4e0d\u9700\u8981\u4f7f\u7528\u6b63\u89c4\u7684\u6709\u5411\u56fe\u5b58\u50a8\u65b9\u6cd5\uff0c\u4e5f\u5c31\u662f\u90a3\u4e2at[i][j]=1\n\n\u53ef\u4ee5\u4f7f\u7528\u7ed3\u6784\u4f53\u5b58\u50a8\u4e00\u4e2a\u795e\u7ecf\u5143\u7684\u6240\u6709\u8f93\u5165\u548c\u8f93\u51fa\uff0c\u8f93\u51fa\u8fb9\u7edf\u8ba1\u662f0\u7684\u795e\u7ecf\u5143\u81ea\u7136\u662f\u8f93\u51fa\u5c42\uff0c\u8f93\u5165\u8fb9\u7edf\u8ba1\u662f0\u7684\u4e5f\u5c31\u662f\u8f93\u5165\u5c42\n\n\u968f\u540e\u626b\u63cf\u4e00\u904d\u6570\u7ec4\uff0c\u9047\u5230\u8f93\u51fa\u5c42\u795e\u7ecf\u5143\u5c31\u4e0a\u4e00\u53d1\u9012\u5f52\u641c\u7d22\uff0c\u5373\u9012\u5f52\u641c\u7d22\u5b83\u7684\u524d\u9a71\uff0c\u78b0\u5230\u72b6\u6001\u4e0d\u4e3a\u96f6\u6216\u5df2\u7ecf\u56de\u5230\u8f93\u5165\u5c42\u5c31\u8fd4\u56de\u5f53\u524d\u795e\u7ecf\u5143\u7684\u72b6\u6001\n\n\u6700\u540e\u7d2f\u52a0\n\n\u6709\u4e00\u4e2a\u5751\u70b9\u4e00\u5f00\u59cb\u5751\u4e86\u6211\u516d\u5341\u5206\uff0c\u90a3\u5c31\u662f\u5f53c[i]<0\u65f6\u6309c[i]=0\u6765\u7b97\n\n\u6700\u540e\u4e0a\u4ee3\u7801\n\n\n        \n```cpp\n#inlude<iostream>\n#inlude<cstdio>\nstruct data{\n    int h[105][2];\n    int t[105][2];\n    int tot,sum;\n    int u,k;\n    data(){tot=sum=0;}\n}f[105];\nint search(int i)\n{\n    if(f[i].k||f[i].tot==0)    return f[i].k;\n    int ans=0;\n    for(int j=1;j<=f[i].tot;++j)\n        ans+=(    search(f[i].h[j][0]) * f[i].h[j][1]    );\n    ans-=f[i].u;\n    if(ans<0)    ans=0;\n    return ans;\n}\nint main()\n{\n    int n,p;\n    scanf(\"%d%d\",&n,&p);\n    for(int i=1;i<=n;++i)\n        scanf(\"%d%d\",&f[i].k,&f[i].u);\n    int a,b,c;\n    for(int i=1;i<=p;++i)\n    {\n        scanf(\"%d%d%d\",&a,&b,&c);\n        f[b].h[++f[b].tot][0]=a;\n        //cout<<b<<\" \"<<f[b].tot<<endl;\n        f[b].h[f[b].tot][1]=c;\n        f[a].t[++f[a].sum][0]=b;\n        f[a].t[f[a].sum][1]=c;\n    }\n    bool flag=0;\n    for(int i=1;i<=n;++i)\n    {\n        if(f[i].sum==0)\n        {\n            f[i].k=search(i);\n            if(f[i].k)\n            {\n                cout<<i<<\" \"<<f[i].k<<endl;\n                flag=1;\n            }\n        }\n    }\n    if(!flag)\n        cout<<\"NULL\"<<endl;\n    //cout<<endl<<endl<<endl;\n    /*for(int i=1;i<=n;++i)\n        cout<<f[i].sum<<\" \"<<f[i].tot<<\" \"<<f[i].k<<endl;*/\n    return 0;\n}\n```\n\u7ec6\u5fc3\u7684\u540c\u5b66\u4f1a\u53d1\u73b0\u9632\u6284\u88ad\u7684\u4fee\u6539\n\u5c31\u8fd9\u6837\n",
        "postTime": 1491375687,
        "uid": 25815,
        "name": "\u5c01\u766b",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1038 \u3010\u795e\u7ecf\u7f51\u7edc\u3011"
    },
    {
        "content": "\u96be\u5f97\u78b0\u5230\u8fd9\u4e48\u5751\u7684\u9898\u76ee\uff0c\u6765\u51d1\u4e00\u53d1\u9898\u89e3\uff1a\n\n##\u5751\u70b9\uff1a\n\n\u5751\u4e00\uff1a\u03a3\u540e\u9762\u7684Ui\u7b97\u662f\u7b97\u5728\u03a3\u5916\u9762\u7684\uff0c\u5373\u9608\u503c\u53ea\u7528\u51cf\u4e00\u904d\uff0c\u5e0c\u671b\u4e0d\u4f1a\u6709\u5c0f\u4f19\u4f34\u8ddf\u6211\u4e00\u6837\u6570\u5b66\u4e0d\u597d\n\n\u5751\u4e8c\uff1a\u8f93\u5165\u5c42\u7684\u9608\u503c\u662f\u4e0d\u7528\u51cf\u7684\n\n\u5751\u4e09\uff1a**\u8f93\u5165\u5c42\u53ef\u80fd\u5c31\u662f\u8f93\u51fa\u5c42**\n\n\u5751\u56db\uff1a\u53ea\u6709\u5728**Ci>0**\u5373\u5174\u594b\u72b6\u6001\u4e0b\u624d\u4f1a\u5411\u4e0b\u4e00\u4e2a\u795e\u7ecf\u5143\u4f20\u9012\u4fe1\u53f7\n\n\u5751\u4e94\uff1a\u53ea\u7528\u8f93\u51fa**\u5927\u4e8e0**\u7684\u8f93\u51fa\u5c42\u795e\u7ecf\u5143\u72b6\u6001\uff0c**\u4ece\u5c0f\u5230\u5927\u8f93\u51fa**\uff0c\u5982\u679c\u90fd\u4e3a0\u8f93\u51fa**NULL**\n\n\n##\u601d\u8def\uff1a\n\n\u5176\u5b9e\u5751\u70b9\u51fa\u6765\u4e86\u4e4b\u540e\u8fd9\u9053\u9898\u5dee\u4e0d\u591a\u5c31\u505a\u5b8c\u4e86\u2026\u2026\u4e0d\u8fc7\u8fd8\u662f\u8bb2\u4e00\u8bb2\u5427\uff1a\n\n\u5c06\u8f93\u5165\u5c42\u7684\u70b9\u8fdb\u961f\u5217\uff0c\u7136\u540e\u64cd\u4f5c\u6240\u6709\u4e0e\u961f\u9996i\u76f8\u8fde\u7684\u70b9j\uff1a\n\n\u2460i\u5df2\u7ecf\u5904\u7406\u8fc7\u4e86--\u7edf\u8ba1vis i\\*w i,j\n\n\u2461i\u8fd8\u6ca1\u5904\u7406\u4e14\u4e0d\u5728\u961f\u5217\u4e2d\uff0c\u5c06i\u5165\u961f\n\n\u6700\u540e\u5904\u7406\u5b8c\u6240\u6709\u4e0e\u961f\u9996\u76f8\u8fde\u7684\u70b9\u540e\u518d\u5c06c[i]\u2190c[i]-u[i]**\u3010\u6b64\u5904\u9700\u8981\u7279\u5224\u8f93\u5165\u5c42\u3011**\n\n\u5982\u679c\u961f\u9996\u76f8\u8fde\u7684\u6240\u6709\u70b9\u90fd\u5904\u7406\u8fc7\uff0c\u8bf4\u660e\u8be5\u70b9\u5728\u8f93\u51fa\u5c42\uff0c\u6807\u8bb0\n\n\u6240\u6709\u70b9\u505a\u5b8c\u4e4b\u540e\u679a\u4e3e\u4e00\u904d\uff0c\u5c06\u6807\u8bb0\u4e86\u7684\u4e14c[i]>0\u7684\u70b9\u8f93\u51fa\n\n\n##\u4ee3\u7801\u5982\u4e0b(pascal):\n\n\n\n\n\n\n\n```cpp\nconst MAXN=205;MAXM=MAXN*MAXN;\nvar n,p,i,h,t,x,y,z:longint;flag:boolean;\n    c,u,he,q:Array[0..MAXN]of longint;\n    inq,vis,f:Array[0..MAXN]of boolean;//inq:\u5728\u961f\u5217\u4e2d;vis:\u5df2\u7ecf\u64cd\u4f5c\u8fc7;f:\u8f93\u51fa\u5c42\u6807\u8bb0\n    v,w,next:Array[0..MAXM]of longint; //\u9759\u6001\u94fe\u63a5\u8fb9\u96c6\u6570\u7ec4\u7684\u90bb\u63a5\u8868\nbegin\n    //\u8bfb\u5165\u90e8\u5206\n    readln(n,p);\n    for i:=1 to n do\n    begin\n        read(c[i],u[i]);\n        if c[i]>0 then                //\u8f93\u5165\u5c42\u7684\u70b9\n        begin\n            inc(t);q[t]:=i;           //\u5165\u961f\uff0c\u4e3a\u4e86\u5c06\u8f93\u5165\u5c42\u4e0e\u5176\u4ed6\u70b9\u5206\u5f00,inq\u6ca1\u6709\u8d4btrue\n        end;\n    end;\n    for i:=1 to p do\n    begin\n        read(x,y,z);                  \n        //\u7531\u4e8e\u8bfb\u5165\u6ca1\u6709\u8bf4\u6e05\u695a\u662f\u5426\u662f\u7ed9\u51fa\u7684\u662f\u5355\u5411\u8fb9,\u9632\u9519\u5c31\u5efa\u6210\u53cc\u5411\u8fb9\u4e86,\u4f46\u770b\u2193\u9898\u89e3\u597d\u50cf\u6709\u7528\u5355\u5411\u8fb9\n        v[2*i-1]:=y;w[2*i-1]:=z;next[2*i-1]:=he[x];he[x]:=2*i-1;\n        v[2*i]:=x;w[2*i]:=z;next[2*i]:=he[y];he[y]:=2*i;\n    end;\n    //\u64cd\u4f5c\u90e8\u5206\n    while h<>t do\n    begin\n        inc(h);\n        vis[q[h]]:=true;               //\u8be5\u70b9\u5df2\u64cd\u4f5c\n        flag:=false;\n        x:=he[q[h]];                   //\u679a\u4e3e\u6240\u6709\u4e0e\u8be5\u70b9\u6709\u5173\u7684\u8fb9\n        while x<>0 do\n        begin\n            if vis[v[x]] then          //v[x]\u662f\u90bb\u63a5\u7684\u70b9\n            begin\n                if c[v[x]]>0 then inc(c[q[h]],w[x]*c[v[x]])//\u6ce8\u610f\u8981\u5174\u594b\u624d\u80fd\u4f20\u9012\u54df\n            end\n            else begin\n                flag:=true;            //\u6709 \u6ca1\u6709\u64cd\u4f5c\u8fc7\u7684\u70b9,\u8bf4\u660e\u961f\u9996\u4e0d\u662f\u8f93\u51fa\u5c42\n                if not inq[v[x]] then\n                begin                  //\u5165\u961f\n                    inc(t);q[t]:=v[x];inq[v[x]]:=true;\n                end;\n            end;\n            x:=next[x];\n        end;\n        if inq[q[h]] then dec(c[q[h]],u[q[h]]);//\u9664\u4e86\u8f93\u5165\u5c42\u4e4b\u5916,\u6240\u6709\u5df2\u5165\u961f\u7684\u70b9inq\u4e3atrue\n        if not flag then f[q[h]]:=true;//\u8f93\u51fa\u5c42\u6807\u8bb0\n    end;\n    //\u8f93\u51fa\u90e8\u5206\n    flag:=false;\n    for i:=1 to n do\n        if f[i] and (c[i]>0) then\n        begin\n            writeln(i,' ',c[i]);\n            flag:=true;\n        end;\n    if not flag then writeln('NULL');\nend.\n\n```",
        "postTime": 1478953093,
        "uid": 8369,
        "name": "YZ\u4eae\u6676\u6676",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1038 \u3010\u795e\u7ecf\u7f51\u7edc\u3011"
    },
    {
        "content": "\u7531\u4e8e\u6b64\u9898\u6bcf\u4e00\u5c42\u4e2d\u7684\u795e\u7ecf\u5143\u4e0d\u4f1a\u4e92\u76f8\u5f71\u54cd\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u961f\u5217\u5b9e\u73b0\uff0c\u4fdd\u8bc1\u524d\u9762\u5c42\u7684\u795e\u7ecf\u5143\u5148\u8fdb\u961f\u3002\u8fd9\u6837\u5f53\u5904\u7406\u5230\u67d0\u4e2a\u7ed3\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u4fdd\u8bc1\u6b64\u65f6\u8be5\u7ed3\u70b9\u5df2\u7ecf\u66f4\u65b0\u5b8c\u6bd5\u3002\n\n\u9884\u5904\u7406\uff1a\u8f93\u5165\u5c42\u5c31\u76f4\u63a5\u5224\u65ad\uff0c \u5426\u5219\u5148\u51cf\u53bb\u9608\u503c\u3002\uff08\u4e0d\u5fc5\u5148\u5165\u961f\uff0c\u8fdf\u65e9\u4f1a\u88ab\u66f4\u65b0\u6389\uff09\n\n\u8fd8\u6709\u6ce8\u610f\u5ba1\u9898\uff1a\u5bf9\u5e8f\u53f7\u5347\u5e8f\u6392\u5e8f\uff01\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define INF 0x7f7f7f7f\nusing namespace std;\nint i,n,m,a,b;\nint c[101],u[101];\nint w[101][101];\nint size=0;\nint q[101],f=1,r=0,v;\nstruct rec\n{\n    int num, value; \n} ans[101];\nbool exist[101];\nint comp(rec a, rec b)\n{\n    return a.num<b.num;\n}\nint main()\n{\n    memset(w,INF,sizeof(w));\n    memset(exist,0,sizeof(0));\n    scanf(\"%d%d\",&n,&m);\n    for (i=1; i<=n; i++)\n    {\n      scanf(\"%d%d\",&c[i],&u[i]);\n      if (c[i]!=0) { q[++r]=i; exist[i]=1; }\n      else c[i]-=u[i];\n    }\n    for (i=1; i<=m; i++)\n    {\n        scanf(\"%d%d\",&a,&b);\n        scanf(\"%d\",&w[a][b]);\n    }\n    while (f<=r)\n    {\n        v=q[f++];\n        exist[v]=0;\n        if (c[v]<=0) continue;\n        for (i=1; i<=n; i++)\n          if (w[v][i]!=INF)\n          {\n              c[i]+=w[v][i]*c[v];\n              if (c[i]>0 && exist[i]==0) //i & v\n              {\n                  q[++r]=i;\n                  exist[i]=1;\n              }\n          }\n        bool flag=1;\n        for (i=1; i<=n; i++)\n          if (w[v][i]!=INF)\n          {\n              flag=0;\n              break;\n          }\n        if (flag)   \n        {\n            size++;\n            ans[size].num=v;\n            ans[size].value=c[v];\n        }\n    }  \n    if (size==0) printf(\"NULL\");\n    else \n    {\n      sort(ans+1,ans+size+1,comp);\n      for (i=1; i<=size; i++)\n        printf(\"%d %d\\n\",ans[i].num,ans[i].value);\n    }\n    return 0;\n}\n```",
        "postTime": 1473845079,
        "uid": 19884,
        "name": "\u7fe0\u7af9\u53f6\u98de",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1038 \u3010\u795e\u7ecf\u7f51\u7edc\u3011"
    },
    {
        "content": "\u8fd9\u4e00\u9898\u5751\u7684\u96be\u5ea6\u5927\u4e8e\u9898\u76ee\u672c\u8eab\u3002\n\n\u6839\u636e\u9898\u610f\uff0c\u6211\u4eec\u5c06\u56fe\u62d3\u6251\u6392\u5e8f\u540e\uff0c\u4ece\u6240\u6709\u7684\u8f93\u5165\u70b9\u5f00\u59cb\u5411\u4e2d\u95f4\u5c42\u7684\u70b9\u8f93\u9001\u4fe1\u606f\uff0c\u6ce8\u610f\u8f93\u5165\u70b9\u4e00\u5f00\u59cb\u4e0d\u7528\u51cf\u53bbU[i]\uff0c\u6240\u4ee5\u8981\u7279\u5224\u65ad\u662f\u5426\u4e3a\u8f93\u51fa\u70b9\u3002\n\n\u7136\u540e\u6211\u4eec\u6bcf\u6b21\u53bb\u9664topo\u5e8f\u4e2d\u7684\u4e00\u4e2a\u70b9\u5c31\u628a\u4ed6\u7684\u5174\u594b\u503c\u51cf\u53bbU[i],\u82e5\u5927\u4e8e0\u5c31\u7ee7\u7eed\u4f20\u9012\u3002\u4e00\u76f4\u9012\u63a8\u3002\n\n\u6700\u540e\u6211\u4eec\u5427\u6240\u6709\u51fa\u5ea6\u4e3a0\u7684\u70b9\u8f93\u51fa\u5373\u53ef\u3002\n\n\u6700\u540e\u4e00\u4e2a\u70b9\u975e\u5e38\u5751\uff0c\u5982\u679c\u6ca1\u6709\u8fb9\uff0c\u8f93\u5165\u70b9\u5c31\u4e0d\u5b58\u5728\uff0c\u76f4\u63a5\u8f93\u51fa\u4e0d\u7528\u51cf\u53bbU[i]\u3002\n\n---------------------------------------------------------------------------------------------------------------------------------------\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <cstdlib>\n#include <algorithm>\n#include <string>\n#include <vector>\n#include <queue>\n```\n-------------------------------------------------------------------------------------------------------------------------------------\nusing namespace std;\n\n-------------------------------------------------------------------------------------------------------------------------------------\n\nconst int maxn=100+20;\n\n-------------------------------------------------------------------------------------------------------------------------------------\n\nstruct edge{int to,w;};\n\n-------------------------------------------------------------------------------------------------------------------------------------\n\n```cpp\nint n,p,in[maxn],limit[maxn],ans[maxn],out[maxn];\nvector<edge>G[maxn];\nqueue<int>que;\nbool tool[maxn];\nqueue<int>topo;\n```\n--------------------------------------------------------------------------------------------------------------------------------------\n```cpp\nvoid read(int &n){\n    n=0;int f=1;\n    char ch=getchar();\n    while(ch<'0' || ch>'9'){\n        if(ch=='-') f=-1;\n        ch=getchar();\n    }\n    do{\n        n=n*10+ch-'0';\n        ch=getchar();\n    }while(ch>='0' && ch<='9');\n    n=n*f;\n    return;\n}\nvoid write(int n){\n    if(n<0){\n        putchar('-');\n        n=0-n;\n    }\n    if(n>=10) write(n/10);\n    putchar((n % 10)+'0');\n    return;\n}\nint main(){\n    memset(in,0,sizeof(in));\n    memset(out,0,sizeof(out));\n    memset(tool,false,sizeof(tool));\n    read(n);read(p);\n    for(int i=1;i<=n;i++){\n        read(ans[i]);read(limit[i]);\n    }\n    if(p==0){\n        for(int i=1;i<=n;i++){\n            if(ans[i]>0){\n                write(i);\n                putchar(' ');\n                write(ans[i]);\n                putchar('\\n');\n            }\n        }\n        return 0;\n    }\n    for(int i=1;i<=p;i++){\n        int u,v,w;\n        read(u);read(v);read(w);\n        edge e;e.to=v,e.w=w;\n        G[u].push_back(e);\n        in[v]++;\n        out[u]++;\n    }\n    for(int i=1;i<=n;i++){\n        if(in[i]==0){\n            que.push(i);\n            tool[i]=true;\n        }\n    }\n    while(!que.empty()){\n        int u=que.front();\n        que.pop();\n        topo.push(u);\n        for(int i=0;i<G[u].size();i++){\n            int v=G[u][i].to;\n            in[v]--;\n            if(in[v]==0){\n                que.push(v);\n            }\n        }\n    }\n    for(int i=1;i<=n;i++){\n        int u=topo.front();\n        topo.pop();\n        if(!tool[u])\n            ans[u]-=limit[u];\n        if(ans[u]>0)\n            for(int i=0;i<G[u].size();i++){\n                int v=G[u][i].to,w=G[u][i].w;\n                ans[v]+=w*ans[u];\n            }\n    }\n    bool flag=true;\n    for(int i=1;i<=n;i++){\n        if(out[i]==0){\n            if(ans[i]>0){\n                flag=false;\n                write(i);\n                putchar(' ');\n                write(ans[i]);\n                putchar('\\n');\n            }\n        }\n    }\n    if(flag){\n        printf(\"NULL\");\n    }\n    return 0;\n}\n```",
        "postTime": 1471102215,
        "uid": 8874,
        "name": "Kwork",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1038 \u3010\u795e\u7ecf\u7f51\u7edc\u3011"
    }
]