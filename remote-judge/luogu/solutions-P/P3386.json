[
    {
        "content": "- 2020/3/27 upd\uff1a\u51e0\u4e4e\u91cd\u5199\u4e86\u6574\u4efd\u9898\u89e3\uff0c\u53ea\u4fdd\u7559\u4e86\u539f\u9898\u89e3\u7684\u56fe\u793a\u90e8\u5206\u3002\u91cd\u5199\u4e86\u4e00\u4efd\u80fd\u770b\u7684\u4ee3\u7801\u3002\n\n## Task\n\n\u7ed9\u5b9a\u4e00\u5f20\u4e8c\u5206\u56fe\uff0c\u5176\u5de6\u90e8\u70b9\u96c6\u5927\u5c0f\u4e3a $n$\uff0c\u53f3\u90e8\u70b9\u96c6\u5927\u5c0f\u4e3a $m$\uff0c\u8bf7\u6c42\u51fa\u5176\u6700\u5927\u5339\u914d\u3002\n\n## Algorithm\n\n\u9996\u5148\u8bf4\u660e\u51e0\u4e2a\u6982\u5ff5\u3002\n\n- \u4e00\u5f20\u56fe $G$ \u662f**\u4e8c\u5206\u56fe**\u5f53\u4e14\u4ec5\u5f53 $G$ \u7684\u70b9\u96c6 $V$ \u53ef\u4ee5\u5206\u4e3a\u4e24\u4e2a\u70b9\u96c6 $V_0, V_1$\uff0c\u6ee1\u8db3 $V_0 \\cup V_1 = V$\uff0c$V_0 \\cap V_1 = \\emptyset$\uff0c\u4e14\u5bf9\u4e8e $G$ \u7684\u6bcf\u6761\u8fb9 $e$\uff0c\u5176\u4e24\u4e2a\u7aef\u70b9\u5206\u522b\u5c5e\u4e8e\u4e0d\u540c\u7684\u70b9\u96c6\u3002\n\n  \u7528\u81ea\u7136\u8bed\u8a00\u6765\u63cf\u8ff0\u5c31\u662f\uff0c\u4e00\u5f20\u56fe\u662f\u4e8c\u5206\u56fe\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b83\u7684\u70b9\u53ef\u4ee5\u88ab\u5206\u6210\u4e24\u90e8\u5206\uff0c\u800c\u8fd9\u5f20\u56fe\u4e0a\u7684\u6240\u6709\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\uff0c\u90fd\u5206\u5c5e\u4e0d\u540c\u7684\u90e8\u5206\u3002\n\n  \u6211\u4eec\u79f0\u8fd9\u4e24\u4e2a\u70b9\u96c6\uff0c\u4e00\u4e2a\u53eb\u5de6\u90e8\uff0c\u4e00\u4e2a\u53eb\u53f3\u90e8\u3002\u5de6\u90e8\u4e2d\u7684\u70b9\u53eb\u5de6\u90e8\u70b9\uff1b\u53f3\u90e8\u4e2d\u7684\u70b9\u53eb\u53f3\u90e8\u70b9\u3002\n\n- \u56fe $G$ \u7684\u4e00\u4e2a\u5339\u914d\u662f $G$ \u7684\u4e00\u4e2a\u8fb9\u96c6 $E_0$\uff0c\u6ee1\u8db3 $E_0$ \u4e2d\u7684\u6240\u6709\u8fb9\u90fd\u6ca1\u6709\u516c\u5171\u7aef\u70b9\u3002\n\n  \u7528\u81ea\u7136\u8bed\u8a00\u6765\u63cf\u8ff0\u5c31\u662f\uff0c\u4e00\u5f20\u56fe\u7684\u4e00\u4e2a\u5339\u914d\u662f\u4e00\u4e9b\u6ca1\u6709\u516c\u5171\u7aef\u70b9\u7684\u8fb9\u3002\n\n  \u53ef\u4ee5\u60f3\u8c61\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u4e8c\u5206\u56fe\u800c\u8a00\uff0c\u663e\u7136\u4e00\u4e2a\u5339\u914d\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5de6\u90e8\u70b9\uff0c\u8fde\u4e00\u6761\u8fb9\u5411\u4e00\u4e2a\u53f3\u90e8\u70b9\uff0c\u6216\u8005\u4e0d\u5411\u53f3\u90e8\u70b9\u8fde\u8fb9\u3002\u4f46\u662f\u6bcf\u4e2a\u5de6\u90e8\u70b9\u4e0d\u4f1a\u5bf9\u5e94\u4e24\u4e2a\u6216\u4ee5\u4e0a\u7684\u53f3\u90e8\u70b9\u3002\n\n\u5e38\u7528\u7684\u4e8c\u5206\u56fe\u5339\u914d\u7b97\u6cd5\u662f\u5308\u7259\u5229\u7b97\u6cd5\uff0c\u5176\u6b63\u786e\u6027\u57fa\u4e8e hall \u5b9a\u7406\uff0c\u672c\u8d28\u662f\u4e0d\u65ad\u5bfb\u627e\u589e\u5e7f\u8def\u6765\u6269\u5927\u5339\u914d\u6570\u3002\u4f46\u662f\u5176\u6b63\u786e\u6027\u8bc1\u660e\u6bd4\u8f83\u590d\u6742\uff0c\u5728\u6b64\u7565\u53bb\u3002\n\n\u5308\u7259\u5229\u7b97\u6cd5\u7684\u8fc7\u7a0b\u662f\uff0c\u679a\u4e3e\u6bcf\u4e00\u4e2a\u5de6\u90e8\u70b9 $u$ \uff0c\u7136\u540e\u679a\u4e3e\u8be5\u5de6\u90e8\u70b9\u8fde\u51fa\u7684\u8fb9\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u51fa\u70b9 $v$\uff0c\u5982\u679c\u5b83\u6ca1\u6709\u88ab\u5148\u524d\u7684\u5de6\u90e8\u70b9\u5339\u914d\uff0c\u90a3\u4e48\u76f4\u63a5\u5c06 $u$ \u5339\u914d $v$\uff0c\u5426\u5219\u5c1d\u8bd5\u8ba9 $v$ \u7684\u201c\u539f\u914d\u201d\u5de6\u90e8\u70b9\u53bb\u5339\u914d\u5176\u4ed6\u53f3\u90e8\u70b9\uff0c\u5982\u679c\u201c\u539f\u914d\u201d\u5339\u914d\u5230\u4e86\u5176\u4ed6\u70b9\uff0c\u90a3\u4e48\u5c06 $u$ \u5339\u914d $v$\uff0c\u5426\u5219 $u$ \u5931\u914d\u3002\n\n\u5c1d\u8bd5\u8ba9\u201c\u539f\u914d\u201d\u5bfb\u627e\u5176\u4ed6\u5339\u914d\u7684\u8fc7\u7a0b\u53ef\u4ee5\u9012\u5f52\u8fdb\u884c\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728\u4e00\u8f6e\u9012\u5f52\u4e2d\uff0c\u6bcf\u4e2a\u53f3\u90e8\u70b9\u53ea\u80fd\u88ab\u8bbf\u95ee\u4e00\u6b21\u3002\n\n\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n \\times e + m)$\uff0c\u5176\u4e2d $n$ \u662f\u5de6\u90e8\u70b9\u4e2a\u6570\uff0c$e$ \u662f\u56fe\u7684\u8fb9\u6570\uff0c$m$ \u662f\u53f3\u90e8\u70b9\u4e2a\u6570\u3002\n\n\u4e0d\u96be\u53d1\u73b0\u5176\u5b9e\u4ea4\u6362\u5de6\u53f3\u90e8\u70b9\u540e\u7684\u6700\u5927\u5339\u914d\u6570\u662f\u4e00\u6837\u7684\uff0c\u800c\u5bf9\u4e8e $m < n$\uff0c\u6709 $m \\times e + n < n \\times e + m$\u3002\u6240\u4ee5\u6709\u4e00\u4e2a\u5c0f trick \u662f\u5f53\u53f3\u90e8\u70b9\u7684\u4e2a\u6570\u6bd4\u5de6\u90e8\u70b9\u591a\u7684\u65f6\u5019\uff0c\u4ea4\u6362\u5de6\u53f3\u90e8\u80fd\u6709\u66f4\u9ad8\u7684\u6548\u7387\u3002\n\n\u4e0b\u9762\u662f**\u559c \u95fb \u4e50 \u89c1**\u7684\u7b97\u6cd5\u56fe\u793a\u3002\n\n![\u56fe\u4e00](https://cdn.luogu.com.cn/upload/pic/18673.png)\uff08\u56fe\u4e00\uff09\n\n\n\u5728\u56fe\u4e00\u4e2d\uff0c\u6bcf\u4e2a\u4eba\u7269\u4ee3\u8868\u4e00\u4e2a\u70b9\uff0c\u8fde\u7ebf\u4ee3\u8868\u53ef\u4ee5\u5904\u7684 cp\uff08\u5373\u53ef\u4ee5\u8fdb\u884c\u7684\u5339\u914d\uff09\u3002\n\n\u73b0\u5728\u8fdb\u884c\u7b2c\u4e00\u6b65\uff1a\n![\u56fe\u4e8c](https://cdn.luogu.com.cn/upload/pic/18674.png)\uff08\u56fe\u4e8c\uff09\n\n\n\u5728\u56fe\u4e8c\u4e2d\uff0c\u6211\u4eec\u4f18\u5148\u6ee1\u8db3\u5de6\u4fa7\u6807\u53f7\u5c0f\u7684\u70b9\uff08\u7537\u4e00\u9ec4\u5c11\u5929\uff09\u7684\u671f\u671b cp\uff0c\u4e8e\u662f\u6211\u4eec\u628a\u9ec4\u5c11\u548c\u5b89\u5eb7\u9c7c\uff08\u8299\u857e\u96c5\uff09\u8fde\u5728\u4e00\u8d77\uff0c\u5df2\u7ecf\u5339\u914d\u7684\u8fb9\u67d3\u6210\u84dd\u8272\u3002\n\n\u73b0\u5728\u8fdb\u884c\u7b2c\u4e8c\u6b65\uff1a\n![\u56fe\u4e09](https://cdn.luogu.com.cn/upload/pic/18675.png)\uff08\u56fe\u4e09\uff09\n\n\u5728\u56fe\u4e09\u4e2d\uff0c\u6211\u4eec\u6ee1\u8db3\u7537\u4e8c\u53f6\u4fee\u7684\u5339\u914d\uff0c\u975e\u5e38\u5c34\u5c2c\u7684\u662f\u53f6\u4fee\u4e5f\u559c\u6b22\u5b89\u5eb7\u9c7c\uff0c~~\u4e8e\u662f\u53f6\u4fee\u7eff\u4e86\u5c11\u5929~~\u989d\u4e0d\u5bf9\uff0c\u53cd\u6b63\u6211\u4eec\u628a\u53f6\u4fee\u548c\u5b89\u5eb7\u9c7c\u5339\u914d\u5728\u4e00\u8d77\uff0c\u5c11\u5929\u8868\u793a\u6ca1\u4e8b\u6211\u8fd8\u6709\u548c\u6cc9\u7eb1\u96fe\uff0c\u4e8e\u662f\u6211\u4eec\u628a\u5c11\u5929\u7684\u5339\u914d\u6539\u4e3a\u548c\u6cc9\u7eb1\u96fe\u3002\n\n\u73b0\u5728\u8fdb\u884c\u7b2c\u4e09\u6b65\uff1a\n![\u56fe\u56db](https://cdn.luogu.com.cn/upload/pic/18676.png)\uff08\u56fe\u56db\uff09\n\n\u5728\u56fe\u56db\u4e2d\uff0c\u5f20\u65b0\u6770\u8868\u793a\u5b89\u5eb7\u9c7c\u86ee\u597d\u770b\u7684\u554a\uff0c\u4e8e\u662f\u5f20\u65b0\u6770\u5339\u914d\u5230\u4e86\u5b89\u5eb7\u9c7c\uff0c\u800c\u53f6\u4fee\u5339\u914d\u5230\u4e86\u521d\u97f3\u3002\n\n\u518d\u6765\u770b\u7537\u56db \u5b59\u7fd4\uff08~~\u771f\u7684\u4e0d\u662f\u6211\u9488\u5bf9\u4ed6emmm~~\uff09\n\n\n\u5b59\u7fd4\u4e5f\u559c\u6b22\u5b89\u5eb7\u9c7c\uff08emm\u5b89\u5eb7\u9c7c\u600e\u4e48\u8fd9\u4e48\u53d7\u6b22\u8fce\uff09\u4ed6\u60f3\u8ba9\u5f20\u65b0\u6770\u6362\u4e00\u4e2a\u5339\u914d\uff0c\u4f46\u662f\u5f20\u65b0\u6770\u4e0d\u7b54\u5e94\uff1a\u6211\u7ed9\u4f60\u8ba9\u4e86\u6211\u5c31\u6ca1 cp \u4e86\u8bf6\uff0c\u6240\u4ee5\u4e0d\u7ed9\u3002\n\n\u4e8e\u662f\u5b59\u7fd4\u5931\u914d\u4e86\u3002\n\n\u4ee5\u4e0a\u5c31\u662f\u5308\u7259\u5229\u7b97\u6cd5\u7684\u8fc7\u7a0b\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u5308\u7259\u5229\u7b97\u6cd5\u5c31\u662f\u4e00\u4e2a~~\u7eff\u4e0e\u88ab\u7eff~~\u534f\u5546\u4e0e\u5339\u914d\u7684\u8fc7\u7a0b\u3002\n\n\u6240\u4ee5\u8fd9\u5f20\u56fe\u7684\u6700\u5927\u5339\u914d\u4e3a $3$\u3002\n\n\u89c2\u5bdf\u56fe\u53ef\u4ee5\u5f97\u51fa\uff1a\n\n1. \u5982\u679c\u540e\u6765\u7684\u548c\u4ee5\u524d\u7684\u53d1\u751f\u77db\u76fe\uff0c\u5219\u4ee5\u524d\u7684~~\u88ab\u7eff~~\u4f18\u5148\u9000\u8ba9\u3002\n2. \u5982\u679c\u4ee5\u524d\u7684\u9000\u8ba9\u4e4b\u540e\u6ca1\u6709cp\u53ef\u5904\uff0c\u5219\u4ee5\u524d\u7684\u62d2\u7edd\u9000\u8ba9\uff0c\u65b0\u6765\u7684\u53bb\u5bfb\u627e\u4e0b\u4e00\u4e2a\u5339\u914d\u3002\n3. \u5982\u679c\u65b0\u6765\u7684\u8c01\u4e5f\u5339\u914d\u4e0d\u4e0a\u4e86\uff0c\u90a3\u5c31\u8fd9\u4e48\u5355\u7740\u5427\u3002\n\n\u4ee5\u4e0a\uff0c\u5c31\u662f\u5308\u7259\u5229\u7b97\u6cd5\u7684\u5168\u90e8\u5185\u5bb9\n\n## Code\n\n```cpp\n#include <cstdio>\n#include <vector>\n\nconst int maxn = 1005;\n\nint n, m, t;\nint mch[maxn], vistime[maxn];\n\nstd::vector<int> e[maxn];\n\nbool dfs(const int u, const int tag);\n\nint main() {\n  scanf(\"%d %d %d\", &n, &m, &t);\n  for (int u, v; t; --t) {\n    scanf(\"%d %d\", &u, &v);\n    e[u].push_back(v);\n  }\n  int ans = 0;\n  for (int i = 1; i <= n; ++i) if (dfs(i, i)) {\n    ++ans;\n  }\n  printf(\"%d\\n\", ans);\n}\n\nbool dfs(const int u, const int tag) {\n  if (vistime[u] == tag) return false;\n  vistime[u] = tag;\n  for (auto v : e[u]) if ((mch[v] == 0) || dfs(mch[v], tag)) {\n    mch[v] = u;\n    return true;\n  }\n  return false;\n}\n```\n\n\u53e6\u5916\uff0c\u4e8c\u5206\u56fe\u5339\u914d\u53ef\u4ee5\u4f7f\u7528 dinic \u7b97\u6cd5\uff0c\u5c06\u590d\u6742\u5ea6\u964d\u4f4e\u81f3$O(n~\\sqrt e)$\u3002\u5177\u4f53\u7684\uff0c\u5efa\u7acb\u8d85\u7ea7\u6e90\u70b9\u548c\u8d85\u7ea7\u6c47\u70b9\uff0c\u6e90\u70b9\u5411\u5de6\u4fa7\u8fde\u8fb9\uff0c\u53f3\u4fa7\u5411\u6c47\u70b9\u8fde\u8fb9\u3002\u5de6\u53f3\u4e4b\u95f4\u8fde\u8fb9\u3002\u4e0a\u8ff0\u8fb9\u7684\u6d41\u91cf\u90fd\u662f $1$ \u3002\u7531\u4e8e $s$ \u5230\u70b9\u5de6\u4fa7\u4efb\u610f\u4e00\u70b9 $u$ \u7684\u6d41\u91cf\u662f$1$\uff0c\u6240\u4ee5 $u$ \u6700\u591a\u88ab\u9009\u62e9\u4e00\u6b21\u3002\u540c\u7406\u53f3\u8fb9\u7684\u70b9\u4e5f\u6700\u591a\u88ab\u9009\u62e9\u4e00\u6b21\u3002\u4e8e\u662f\u8fd9\u4e2a\u56fe\u7684\u7f51\u7edc\u6700\u5927\u6d41\u5373\u4e3a\u8be5\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\u3002",
        "postTime": 1525141420,
        "uid": 65363,
        "name": "\u4e00\u6276\u82cf\u4e00",
        "ccfLevel": 7,
        "title": "\u30102018\u4e94\u4e00\u6e05\u5317\u57f9\u8bad\u3011\u30102\u3011\u3010\u4e8c\u5206\u56fe\u4ee5\u53ca\u5308\u7259\u5229\u7b97\u6cd5\u3011"
    },
    {
        "content": "# \u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\uff1a\u5308\u7259\u5229\u7b97\u6cd5\n\n\u8bb2\u4e4b\u524d\u672c\u849f\u84bb\u5148\u666e\u53ca\u4e00\u4e2a\u91cd\u8981**\u4e13\u4e1a\u540d\u8bcd**\n## \u589e\u5e7f\u8def\u3002\n\n\u5982\u679c\u4f60\u4ed4\u7ec6\u8bfb\u8fc7\u5e76\u753b\u8fc7\u56fe\uff0c\u4e0d\u96be\u53d1\u73b0\u5982\u679c\u627e\u5230\u4e00\u6761\u589e\u5e7f\u8def\uff0c\u90a3\u4e48\u914d\u5bf9\u7684\u4e2a\u6570\u5c31\u4f1a\u52a01\u3002\n\u6240\u4ee5\u8bf4\uff0c\u589e\u5e7f\u8def\u7684\u672c\u8d28\u5176\u5b9e\u5c31\u662f\u4e00\u6761\u8def\u5f84\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\u90fd\u672a\u914d\u5bf9\u7684\u70b9\u7684\u8fb9\u3002\n\n\n\n------------\n\n## \u5308\u7259\u5229\u7b97\u6cd5\uff1a\n\n\u8fd9\u4e2a\u53eb\u5308\u7259\u5229\u7b97\u6cd5(Hungarian method)\u7684\u4e1c\u897f\u662f\u7531\u5308\u7259\u5229\u6570\u5b66\u5bb6Edmonds\u4e8e1965\u5e74\u63d0\u51fa\uff0c\u6240\u4ee5\u53eb**\u5308\u7259\u5229\u7b97\u6cd5**\u3002\u5308\u7259\u5229\u7b97\u6cd5\u662f\u4e8c\u5206\u56fe\u5339\u914d\u6700\u5e38\u89c1\u7684\u7b97\u6cd5\uff0c\u8be5\u7b97\u6cd5\u7684\u6838\u5fc3\u5c31\u662f\u5bfb\u627e\u589e\u5e7f\u8def\u5f84\uff0c\u5b83\u662f\u4e00\u79cd\u7528\u589e\u5e7f\u8def\u5f84\u6c42\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u7684\u7b97\u6cd5\u3002\n\n### \u590d\u6742\u5ea6\uff1a\n\u65f6\u95f4\u590d\u6742\u5ea6 : \u90bb\u63a5\u77e9\u9635\u6700\u574f\u4e3aO(n3)    \n\u90bb\u63a5\u8868\uff1a O(mn)  \n\u7a7a\u95f4\u590d\u6742\u5ea6 : \u90bb\u63a5\u77e9\u9635\uff1aO(n2)    \t   \n\u90bb\u63a5\u8868\uff1a O(n+m)\n\n## \u53e6\u4e00\u4e2a\u91cd\u8981\u6982\u5ff5\uff1a\u4e8c\u5206\u56fe\n\u4e8c\u5206\u56fe\u662f\u56fe\u8bba\u4e2d\u7684\u4e00\u79cd\u7279\u6b8a\u6a21\u578b\u3002 \u8bbeG=(V,E)\u662f\u4e00\u4e2a\u65e0\u5411\u56fe\uff0c\u5982\u679c\u9876\u70b9V\u53ef\u5206\u5272\u4e3a\u4e24\u4e2a\u4e92\u4e0d\u76f8\u4ea4\u7684\u5b50\u96c6(A,B)\uff0c\u5e76\u4e14\u56fe\u4e2d\u7684\u6bcf\u6761\u8fb9\uff08i\uff0cj\uff09\u6240\u5173\u8054\u7684\u4e24\u4e2a\u9876\u70b9i\u548cj\u5206\u522b\u5c5e\u4e8e\u8fd9\u4e24\u4e2a\u4e0d\u540c\u7684\u9876\u70b9\u96c6\uff0c\u5219\u79f0\u56feG\u4e3a\u4e00\u4e2a\u4e8c\u5206\u56fe\u3002  \n~~\u5b66\u8fc7\u9ad8\u4e2d\u6570\u5b66\u7684\u8bdd\u5e94\u8be5\u80fd\u770b\u61c2\u6211\u5728\u8bf4\u4ec0\u4e48\uff08\u9003~~\n\n\u7b80\u800c\u8a00\u4e4b\uff0c\u5c31\u662f\u9876\u70b9\u96c6V\u53ef\u5206\u5272\u4e3a\u4e24\u4e2a\u4e92\u4e0d\u76f8\u4ea4\u7684\u5b50\u96c6\uff0c\u5e76\u4e14\u56fe\u4e2d\u6bcf\u6761\u8fb9\u4f9d\u9644\u7684\u4e24\u4e2a\u9876\u70b9\u90fd\u5206\u5c5e\u4e8e\u8fd9\u4e24\u4e2a\u4e92\u4e0d\u76f8\u4ea4\u7684\u5b50\u96c6\uff0c\u4e24\u4e2a\u5b50\u96c6\u5185\u7684\u9876\u70b9\u4e0d\u76f8\u90bb\u3002\u6ee1\u8db3\u8fd9\u6837\u7684\u56fe\u5c31\u53eb\u4e8c\u5206\u56fe\u3002\n\n#### \u4f46\u6211\u4eec\u600e\u4e48\u5224\u65ad\u4e00\u4e2a\u56fe\u662f\u4e0d\u662f\u4e8c\u5206\u56fe\uff1f\uff1f\uff1f\n\u5176\u5b9e\u4e5f\u4e0d\u96be\uff0c\u7528\u7ea2\u84dd\u70b9\u7684\u65b9\u6cd5\u5c31\u884c\u3002\u9996\u5148\u8bb2\u4efb\u610f\u7684\u4e00\u4e2a\u9876\u70b9\u67d3\u6210\u7ea2\u8272\uff0c\u518d\u628a\u8fd9\u4e2a\u70b9\u76f8\u90bb\u7684\u9876\u70b9\u67d3\u6210\u84dd\u8272\uff0c\u5982\u679c\u6309\u7167\u8fd9\u79cd\u67d3\u8272\u65b9\u5f0f\u53ef\u4ee5\u5c06\u6240\u6709\u7684\u9876\u70b9\u5168\u90e8\u7740\u8272\uff0c\u5e76\u4e14\u76f8\u90bb\u7684\u9876\u70b9\u7684\u989c\u8272\u4e0d\u540c\uff0c\u90a3\u4e48\u8be5\u56fe\u5c31\u662f\u4e00\u4e2a\u4e8c\u5206\u56fe\u3002  \n##### \u8fd9\u91cc\u8d34\u4e00\u4e0b\u4ee3\u7801\n```cpp\n#define MAXV 1000//\u8fd9\u91cc\u5e94\u8be5\u6839\u636e\u9898\u76ee\u81ea\u5b9a\n\nvector<int> G[MAXV];  //\u56fe \nint V;                       //\u9876\u70b9\u6570 \nint color[MAXV];  //\u9876\u70b9\u7684\u989c\u8272 \uff081 or -1\uff09 \n\n\n//\u9876\u70b9v\uff0c\u989c\u8272c \nbool dfs(int v,int c){\n    color[v] = c;\n    //\u628a\u5f53\u524d\u9876\u70b9\u76f8\u90bb\u7684\u9876\u70b9\u626b\u4e00\u904d \n    for(int i = 0;i < G[v].size(); i++){\n        //\u5982\u679c\u76f8\u90bb\u9876\u70b9\u5df2\u7ecf\u88ab\u67d3\u6210\u540c\u8272\u4e86,\u8bf4\u660e\u4e0d\u662f\u4e8c\u5206\u56fe \n        if(color[G[v][i]] == c) return false;\n        //\u5982\u679c\u76f8\u90bb\u9876\u70b9\u6ca1\u6709\u88ab\u67d3\u8272,\u67d3\u6210-c,\u770b\u76f8\u90bb\u9876\u70b9\u662f\u5426\u6ee1\u8db3\u8981\u6c42 \n        if(color[G[v][i]] == 0 && !dfs(G[v][i],-c)) return false;\n    }\n    //\u5982\u679c\u90fd\u6ca1\u95ee\u9898\uff0c\u8bf4\u660e\u5f53\u524d\u9876\u70b9\u80fd\u8bbf\u95ee\u5230\u7684\u9876\u70b9\u53ef\u4ee5\u5f62\u6210\u4e8c\u5206\u56fe \n    return true;\n}\n\nvoid solve(){\n    //\u53ef\u80fd\u662f\u4e0d\u8fde\u901a\u56fe\uff0c\u6240\u4ee5\u6bcf\u4e2a\u9876\u70b9\u90fd\u8981dfs\u4e00\u6b21 \n    for(int i = 0;i < V; i++){\n        if(color[i] == 0){\n            //\u7b2c\u4e00\u4e2a\u70b9\u989c\u8272\u4e3a 1 \n            if(!dfs(i,1)){\n                cout << \"No\" << endl;\n                return;\n            }\n        }\n    }\n}\n```\n\n# \u8fd9\u624d\u662f\u6b63\u6587\uff01\uff01\uff01\n\u65e2\u7136\u4e0a\u9762\u672c\u849f\u84bb\u5df2\u7ecf\u4ecb\u7ecd\u5b8c\u4e86\u6709\u5173\u4e8c\u5206\u56fe\u7684\u77e5\u8bc6\uff0c**\u90a3\u4e0b\u9762\u8be5\u8bb2\u4e0b\u5308\u7259\u5229\u7b97\u6cd5\u4e86**\uff01\uff01\uff01\n\n\u6839\u636e\u4e0a\u6587\u7684\u63cf\u8ff0\uff0c\u65e2\u7136\u589e\u5e7f\u8def\u7684\u4f5c\u7528\u662f\u201c\u6539\u8fdb\u5339\u914d\u65b9\u6848\u201d\uff08\u5373\u589e\u52a0\u914d\u5bf9\u6570\uff09\uff0c\u90a3\u4e48\u5982\u679c\u6211\u4eec\u5df2\u7ecf\u627e\u5230\u4e86\u4e00\u79cd\u5339\u914d\u65b9\u6848\uff0c\u4e0d\u96be\u53d1\u73b0\u5982\u679c\u5728\u5f53\u524d\u5339\u914d\u65b9\u6848\u4e0b\u518d\u4e5f\u627e\u4e0d\u5230\u4efb\u4f55\u589e\u5e7f\u8def\u7684\u8bdd\uff0c\u90a3\u4e48\u5f53\u524d\u5339\u914d\u5c31\u662f\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\uff0c\u7b97\u6cd5\u5982\u4e0b\u3002\n\n1.\u9996\u5148\u4ece\u4efb\u610f\u7684\u4e00\u4e2a\u672a\u914d\u5bf9\u7684\u70b9u\u5f00\u59cb\uff0c\u4ece\u70b9u\u7684\u8fb9\u4e2d\u4efb\u610f\u9009\u4e00\u6761\u8fb9\uff08\u5047\u8bbe\u8fd9\u6761\u8fb9\u662f\u4eceu->v\uff09\u5f00\u59cb\u914d\u5bf9\u3002\u5982\u679c\u70b9v\u672a\u914d\u5bf9\uff0c\u5219\u914d\u5bf9\u6210\u529f\uff0c\u8fd9\u662f\u4fbf\u627e\u5230\u4e86\u4e00\u6761\u589e\u5e7f\u8def\u3002\u5982\u679c\u70b9v\u5df2\u7ecf\u88ab\u914d\u5bf9\uff0c\u5c31\u53bb\u5c1d\u8bd5\u201c\u8fde\u9501\u53cd\u5e94\u201d\uff0c\u5982\u679c\u8fd9\u65f6\u5c1d\u8bd5\u6210\u529f\uff0c\u5c31\u66f4\u65b0\u539f\u6765\u7684\u914d\u5bf9\u5173\u7cfb\u3002   \n\u6240\u4ee5\u8fd9\u91cc\u8981\u7528\u4e00\u4e2amatched[v] = u\u3002\u914d\u5bf9\u6210\u529f\u5c31\u5c06\u914d\u5bf9\u6570\u52a01,\u3002\n\n2.\u5982\u679c\u521a\u624d\u6240\u9009\u7684\u8fb9\u914d\u5bf9\u5931\u8d25\uff0c\u90a3\u5c31\u8981\u4ece\u70b9u\u7684\u8fb9\u4e2d\u91cd\u65b0\u9009\u4e00\u6761\u8fb9\u91cd\u65b0\u53bb\u8bd5\u3002\u76f4\u5230\u70b9u\n\u914d\u5bf9\u6210\u529f\uff0c\u6216\u5c1d\u8bd5\u8fc7\u70b9u\u7684\u6240\u6709\u8fb9\u4e3a\u6b62\u3002\n\n3.\u63a5\u4e0b\u6765\u5c31\u7ee7\u7eed\u5bf9\u5269\u4e0b\u7684\u672a\u914d\u5bf9\u8fc7\u7684\u70b9\u4e00\u4e00\u8fdb\u884c\u914d\u5bf9\uff0c\u76f4\u5230\u6240\u6709\u7684\u70b9\u90fd\u5df2\u7ecf\u5c1d\u8bd5\u5b8c\u6bd5\uff0c\u627e\u4e0d\u5230\u65b0\u7684\u589e\u5e7f\u8def\u4e3a\u6b62\u3002\n\n4.\u8f93\u51fa\u914d\u5bf9\u6570\u3002\n\n## CODE\uff1a\n```cpp\n//\u5982\u679c\u4f60\u5df2\u7ecf\u8bfb\u5b8c\u9898\uff0c\u8bf7\u81ea\u52a8\u4eceint main()\u5904\u5f00\u59cb\u9605\u8bfb \n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<iostream>\n\n#define N 2010\n\nusing namespace std;\n\nint n,m,e,ans;\nint vis[N][N];\nint ask[N],matched[N];\n\ninline bool found(int x){ //dfs\u627e\u589e\u5e7f\u8def \n    for (int i = 1 ; i <= m ; i++)\n      if (vis[x][i]){\n        if (ask[i]) \n\t\t\tcontinue;\n        ask[i] = 1;\n        if (!matched[i] || found(matched[i])) { \n\t\t\tmatched[i] = x ; \n\t\t\treturn true;\n\t\t}\n      }\n    return false;\n}\n\ninline void match(){\n    int cnt = 0;//cnt\u662f\u8ba1\u6570\u5668 \n    memset(matched,0,sizeof(matched));\n    for (int i = 1 ; i <= n ; i++){\n      memset(ask,0,sizeof(ask));\n      if (found(i)) \n\t  \tcnt++;\t//\u627e\u5230\u4e86\u5c31\u52a01 \n    }\n    ans = cnt;\n}\n//\u4ece\u8fd9\u91cc\u5411\u4e0b\u770b\u8d77 \nint main(){\n    scanf(\"%d%d%d\",&n,&m,&e);//\u7ed3\u70b9\u4e2a\u6570\u5206\u522b\u4e3an,m\uff0c\u8fb9\u6570\u4e3ae\n    for (int i = 1 ; i <= e ; i++){\n      int x,y;\n      scanf(\"%d%d\",&x,&y);\n      vis[x][y] = 1;\n    }\n    match();///\u5308\u7259\u5229\u7b97\u6cd5\uff0c\u89c1\u4e0a \n    printf(\"%d \\n\",ans);\n    return 0;\n}\n```\n~~\u5b8c\u7ed3\u6492\u82b1\uff08\u9003\uff01\uff01\uff01~~",
        "postTime": 1525073139,
        "uid": 54879,
        "name": "Law_Aias",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3386 \u3010\u3010\u6a21\u677f\u3011\u4e8c\u5206\u56fe\u5339\u914d\u3011"
    },
    {
        "content": "### \u4e8c\u5206\u56fe\u7684\u6982\u5ff5\n\n  \u4e8c\u5206\u56fe\u53c8\u79f0\u4f5c\u4e8c\u90e8\u56fe\uff0c\u662f\u56fe\u8bba\u4e2d\u7684\u4e00\u79cd\u7279\u6b8a\u6a21\u578b\u3002\u8bbeG=(V,E)\u662f\u4e00\u4e2a\u65e0\u5411\u56fe\uff0c\u5982\u679c\u9876\u70b9V\u53ef\u5206\u5272\u4e3a\u4e24\u4e2a\u4e92\u4e0d\u76f8\u4ea4\u7684\u5b50\u96c6(A,B)\uff0c\u5e76\u4e14\u56fe\u4e2d\u7684\u6bcf\u6761\u8fb9(i,j)\u6240\u5173\u8054\u7684\u4e24\u4e2a\u9876\u70b9i\u548cj\u5206\u522b\u5c5e\u4e8e\u8fd9\u4e24\u4e2a\u4e0d\u540c\u7684\u9876\u70b9\u96c6(i in A,j in B)\uff0c\u5219\u79f0\u56feG\u4e3a\u4e00\u4e2a\u4e8c\u5206\u56fe\u3002\uff08\u6e90\u81ea[\u767e\u5ea6-\u4e8c\u5206\u56fe](https://baike.baidu.com/item/%E4%BA%8C%E5%88%86%E5%9B%BE/9089095?fr=aladdin)\uff09\n\n  ![](https://gss1.bdstatic.com/-vo3dSag_xI4khGkpoWK1HF6hhy/baike/s%3D220/sign=0b584ad6a8773912c0268263c8188675/3c6d55fbb2fb43169079761121a4462309f7d373.jpg)\n\n  \u5982\u4e0a\u56fe\u5c31\u662f\u4e00\u4e2a\u6807\u51c6\u7684\u4e8c\u5206\u56fe\u3002\n\n### \u6700\u5927\u5339\u914d\u4e0e\u589e\u5e7f\u8def\u7684\u6982\u5ff5\n\n  \u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u5206\u56feG\uff0c\u5728G\u7684\u4e00\u4e2a\u5b50\u56feM\u4e2d\uff0cM\u7684\u8fb9\u96c6{E}\u4e2d\u7684\u4efb\u610f\u4e24\u6761\u8fb9\u90fd\u4e0d\u4f9d\u9644\u4e8e\u540c\u4e00\u4e2a\u9876\u70b9\uff0c\u5219\u79f0M\u662f\u4e00\u4e2a\u5339\u914d\u3002(\u6e90\u81ea[\u767e\u5ea6-\u4e8c\u5206\u56fe\u5339\u914d](https://baike.baidu.com/item/%E4%BA%8C%E5%88%86%E5%9B%BE%E5%8C%B9%E9%85%8D/9089174?fr=aladdin))\n\n  \u6700\u5927\u5339\u914d\u5373\u662f\u9009\u62e9\u5176\u4e2d\u8fb9\u6570\u6700\u5927\u7684\u5b50\u96c6\u7684\u56fe\u3002\n\n  \u5b8c\u5168\u5339\u914d\uff0c\u4e5f\u53eb\u505a\u5b8c\u5907\u5339\u914d\uff0c\u5373\u67d0\u4e2a\u5339\u914d\u4e2d\uff0c\u6bcf\u4e2a\u9876\u70b9\u90fd\u548c\u67d0\u6761\u8fb9\u76f8\u5173\u8054\u3002\n\n  \u597d\u7684\uff0c\u73b0\u5728\u4ecb\u7ecd\u5b8c\u4e00\u4e2a\u57fa\u672c\u6982\u5ff5\uff0c\u6211\u4eec\u5c31\u8981\u7740\u624b\u89e3\u51b3\u5982\u4f55\u6c42\u89e3\u6700\u5927\u5339\u914d\u7684\u95ee\u9898\u4e86\u3002\n\n  \u82e5\u8981\u627e\u51fa\u4e8c\u5206\u56fe\u4e2d\u7684\u6700\u5927\u5339\u914d\uff0c\u6700\u6734\u7d20\u7684\u65b9\u6cd5\u5c31\u662f\u627e\u51fa\u6240\u6709\u7684\u5339\u914d\u5e76\u4e00\u4e00\u6bd4\u8f83\uff0c\u4f46\u8fd9\u79cd\u65b9\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u8fb9\u6570\u7684\u6307\u6570\u7ea7\u7684\uff0c\u4e0d\u80fd\u6ee1\u8db3\u6570\u636e\u8303\u56f4\u8f83\u5927\u7684\u95ee\u9898\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u627e\u51fa\u4e00\u4e2a\u66f4\u4f18\u7684\u65b9\u6cd5\u6c42\u89e3\u3002\n\n  \u5728\u5bfb\u627e\u8fd9\u66f4\u4f18\u7684\u65b9\u6cd5\u524d\uff0c\u6211\u4eec\u9700\u8981\u5148\u4e86\u89e3\u589e\u5e7f\u8def\u7684\u6982\u5ff5\uff1a\u589e\u5e7f\u8def\uff0c\u4e5f\u79f0\u589e\u5e7f\u8f68\u6216\u4ea4\u9519\u8f68\u3002\u82e5P\u662f\u56feG\u4e2d\u4e00\u6761\u8fde\u901a\u4e24\u4e2a\u672a\u5339\u914d\u9876\u70b9\u7684\u8def\u5f84\uff0c\u5e76\u4e14\u5c5e\u4e8eM\u7684\u8fb9\u548c\u4e0d\u5c5e\u4e8eM\u7684\u8fb9(\u5373\u5df2\u5339\u914d\u548c\u5f85\u5339\u914d\u7684\u8fb9)\u5728P\u4e0a\u4ea4\u66ff\u51fa\u73b0\uff0c\u5219\u79f0P\u4e3a\u76f8\u5bf9\u4e8eM\u7684\u4e00\u6761\u589e\u5e7f\u8def\u5f84(\u4e3e\u4f8b\u6765\u8bf4\uff0c\u6709A\u3001B\u96c6\u5408\uff0c\u589e\u5e7f\u8def\u7531A\u4e2d\u4e00\u4e2a\u70b9\u901a\u5411B\u4e2d\u4e00\u4e2a\u70b9\uff0c\u518d\u7531B\u4e2d\u8fd9\u4e2a\u70b9\u901a\u5411A\u4e2d\u4e00\u4e2a\u70b9\u2026\u2026\u4ea4\u66ff\u8fdb\u884c)\u3002\uff08\u6e90\u81ea[\u767e\u5ea6-\u589e\u5e7f\u8def](https://baike.baidu.com/item/%E5%A2%9E%E5%B9%BF%E8%B7%AF/1332250?fr=aladdin)\uff09\n\n  \u7531\u589e\u5e7f\u8def\u7684\u5b9a\u4e49\u6211\u4eec\u53ef\u4ee5\u63a8\u51fa\u4e0b\u8ff0\u4e09\u4e2a\u7ed3\u8bba\uff1a\n\n1. P\u7684\u8def\u5f84\u957f\u5ea6\u5fc5\u5b9a\u4e3a\u5947\u6570\uff0c\u7b2c\u4e00\u6761\u8fb9\u548c\u6700\u540e\u4e00\u6761\u8fb9\u90fd\u4e0d\u5c5e\u4e8eM\u3002\n2. \u7ecf\u8fc7\u53d6\u53cd\u64cd\u4f5c\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u66f4\u5927\u7684\u5339\u914dM\u2019\uff0c\u8fb9\u6570\u4e3aM\u7684\u8fb9\u6570+1\u3002\n3. M\u4e3aG\u7684\u6700\u5927\u5339\u914d\u5f53\u4e14\u4ec5\u5f53\u4e0d\u5b58\u5728\u76f8\u5bf9\u4e8eM\u7684\u589e\u5e7f\u8def\u5f84\u3002\n\n  ![](https://cdn.luogu.com.cn/upload/pic/15251.png)\n\n  \u5982\u56fe\u4e3a\u4e00\u4e2a\u4e8c\u5206\u56fe\u589e\u5e7f\u8def\u96c6\u5408\u3002\n\n### \u5308\u7259\u5229\u7b97\u6cd5\n\n  \u5308\u7259\u5229\u7b97\u6cd5\u5c31\u662f\u7528\u589e\u5e7f\u8def\u6c42\u6700\u5927\u5339\u914d\u95ee\u9898(\u7531\u5308\u7259\u5229\u6570\u5b66\u5bb6Edmonds\u4e8e1965\u5e74\u63d0\u51fa)\n\n  \u7b97\u6cd5\u7684\u4e3b\u8981\u6b65\u9aa4\u4e3a\uff1a\n1. \u5c06M\u8bbe\u7f6e\u4e3a\u7a7a\uff1b\n2. \u627e\u51fa\u4e00\u6761\u589e\u5e7f\u8def\u5f84P\uff0c\u901a\u8fc7\u53d6\u53cd\u64cd\u4f5c\u83b7\u5f97\u66f4\u5927\u7684\u5339\u914dM\u2019\u4ee3\u66ffM\uff1b\n3. \u91cd\u590d2\u64cd\u4f5c\u76f4\u5230\u627e\u4e0d\u51fa\u589e\u5e7f\u8def\u5f84\u4e3a\u6b62\uff1b\n\n  ![](https://cdn.luogu.com.cn/upload/pic/15252.png)\n\n  \u5982\u4e0a\u56fe\uff0cA-a,a-B,B-b,b-D\u662f\u4e00\u4e2a\u589e\u5e7f\u8def\u96c6\u5408\u3002\n\n  \u90a3\u4e48\u5982\u679c\u5728\u6267\u884c2\u64cd\u4f5c\u65f6\u53d1\u73b0\u6709\u51b2\u7a81\u4e86\u600e\u4e48\u529e\uff1f\u7b97\u6cd5\u6240\u91c7\u53d6\u7684\u662f\u4e00\u79cd\u79f0\u4f5c\u201c\u534f\u5546\u201d\u7684\u624b\u6bb5\u3002\u5173\u4e8e\u201c\u534f\u5546\u201d\u8fd9\u4e00\u90e8\u5206\u7684\u8be6\u89e3\u53ef\u4ee5\u67e5\u770b[\u5308\u7259\u5229\u7b97\u6cd5](http://blog.csdn.net/dark_scope/article/details/8880547)\n\n\u4e0b\u9762\u7ed9\u51fa\u5308\u7259\u5229\u7b97\u6cd5([\u6d1b\u8c37P3386](https://www.luogu.org/problemnew/show/P3386))\u7684\u4ee3\u7801\n\n```cpp\n/****************\nKeep your dreams.\n\t by Darkness_\n****************/\n\n#include <set>\n#include <map>\n#include <cmath>\n#include <queue>\n#include <stack>\n#include <cstdio>\n#include <vector>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#define MAXN 1005\n#define INF 0X3F3F3F3F\n#define MOD 1000000007\n#define QWQ puts(\"QWQ\")\n\nint read(int &x) {\n\tx=0;\n\tint f=1;\n\tchar ch=getchar();\n\twhile (ch<'0'||ch>'9') {\n\t\tif (ch=='-')\n\t\t\tf=-f;\n\t\tif (ch==EOF)\n\t\t\treturn -1;\n\t\tch=getchar();\n\t}\n\twhile (ch>='0'&&ch<='9') {\n\t\tx=x*10+ch-48;\n\t\tch=getchar();\n\t}\n\tx*=f;\n\treturn 0;\n}\n\nint n,m,e,x,y,ans;\nint con_x[MAXN],con_y[MAXN];\nbool vis[MAXN],flag[MAXN][MAXN];\n\nbool dfs(int x) {\n\tfor (int y=1;y<=m;y++)\n\t\tif (flag[x][y]&&!vis[y]) {\n\t\t\tvis[y]=true;\n\t\t\tif (con_y[y]==-1||dfs(con_y[y])) {\n\t\t\t\tcon_x[x]=y;\n\t\t\t\tcon_y[y]=x;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\treturn false;\n}\n\nvoid Maxmatch() {\n\tmemset(con_x,-1,sizeof(con_x));\n\tmemset(con_y,-1,sizeof(con_y));\n\tfor (int i=1;i<=n;i++)\n\t\t//if (con_x[i]==-1)//\u6b64\u53e5\u5e94\u53bb\u9664\uff0c\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u4f1a\u9519\uff08\u9003\n\t\t{\n\t\t\tmemset(vis,false,sizeof(vis));\n\t\t\tans+=dfs(i);\n\t\t}\n}\n\nint main() {\n\tread(n);\n\tread(m);\n\tread(e);\n\tfor (int i=1;i<=e;i++) {\n\t\tread(x);\n\t\tread(y);\n\t\tif (x>=1&&y>=1&&x<=n&&y<=m)\n\t\t\tflag[x][y]=true;\n\t}\n\tMaxmatch();\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n\n```\n### \u4e8c\u5206\u56fe\u4e2d\u7684\u5176\u4ed6\u6027\u8d28\n  \u5173\u4e8e\u4e8c\u5206\u56fe\u4e2d\u5176\u4ed6\u7684\u6027\u8d28\u6709\uff1a\n1. \u4e8c\u5206\u56fe\u7684\u6700\u5c0f\u9876\u70b9\u8986\u76d6\n   \u6700\u5c0f\u9876\u70b9\u8986\u76d6\u8981\u6c42\u7528\u6700\u5c11\u7684\u70b9(U\u6216V\u4e2d\u90fd\u884c)\uff0c\u8ba9\u6bcf\u6761\u8fb9\u90fd\u81f3\u5c11\u548c\u5176\u4e2d\u4e00\u4e2a\u70b9\u5173\u8054\u3002\n   Knoig\u5b9a\u7406\uff1a\u4e8c\u5206\u56fe\u7684\u6700\u5c0f\u9876\u70b9\u8986\u76d6\u6570\u7b49\u4e8e\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\u6570\u3002\n2. DAG\u56fe\u7684\u6700\u5c0f\u8def\u5f84\u8986\u76d6\n   \u7528\u5c3d\u91cf\u5c11\u7684\u4e0d\u76f8\u4ea4\u7b80\u5355\u8def\u5f84\u8986\u76d6\u6709\u5411\u65e0\u73af\u56fe(DAG)G\u7684\u6240\u6709\u9876\u70b9\u3002\n   \u5f15\u7406\uff1aDAG\u56fe\u7684\u6700\u5c0f\u8def\u5f84\u8986\u76d6\u6570=\u8282\u70b9\u6570(n)-\u6700\u5927\u5339\u914d\u6570(m)\n3. \u4e8c\u5206\u56fe\u7684\u6700\u5927\u72ec\u7acb\u96c6\n   \u5728\uff2e\u4e2a\u70b9\u7684\u56feG\u4e2d\u9009\u51fam\u4e2a\u70b9\uff0c\u4f7f\u8fd9m\u4e2a\u70b9\u4e24\u4e24\u4e4b\u95f4\u6ca1\u6709\u8fb9\uff0e\u6c42m\u6700\u5927\u503c\u3002\n   \u5f15\u7406\uff1a\u4e8c\u5206\u56fe\u7684\u6700\u5927\u72ec\u7acb\u96c6\u6570 = \u8282\u70b9\u6570(n)\u2014\u6700\u5927\u5339\u914d\u6570(m)\n\n  \u5173\u4e8e\u4e8c\u5206\u56fe\u5308\u5229\u4e9a\u7b97\u6cd5\u7684\u4ecb\u7ecd\u5c31\u5230\u8fd9\u91cc\u544a\u4e00\u6bb5\u843d\u4e86\uff0c\u4f46\u5176\u5b9e\u66f4\u91cd\u8981\u7684\u662f\u5efa\u7acb\u6a21\u578b\uff0c\u800c\u8fd9\u5c31\u9700\u8981\u591a\u505a\u9898\u76ee\u6765\u627e\u5230\u611f\u89c9\u4e86\u3002\n\n\u795d\u5927\u5bb6Rp++\uff01\n\n--------\n\u5728HDU\u4e0a\u505a\u4e00\u9053\u4e8c\u5206\u56fe\u7684\u9898\u76ee\u65f6[here](http://acm.hdu.edu.cn/showproblem.php?pid=5943)\uff0c\u51fa\u73b0\u4e86\u83ab\u540d\u5947\u5999\u7684\u9519\u8bef\uff0c\u5728\u7ecf\u8fc7\u5bf9\u62cd\u4e4b\u540e\uff0c\u53d1\u73b0\u6b64\u6a21\u677f\u5bf9\u4e8e\u67d0\u4e00\u4e9b\u5947\u602a\u7684\u6570\u636e\u5b58\u5728\u4e00\u5b9a\u7684\u5dee\u9519\uff0cMaxmatch\u51fd\u6570\u4e2d\u7684\u4e00\u53e5\u8bed\u53e5\u5e94\u53bb\u9664\uff0c\u5177\u4f53\u5df2\u5728\u4ee3\u7801\u4e2d\u6ce8\u91ca\uff08\u987a\u4fbf\u6539\u4e86\u4e00\u4e0b\u4ee3\u7801\u683c\u5f0fhhhh\uff09\u3002\n\nP.S.:\u6211\u628a\u4e24\u79cd\u5199\u6cd5\u7684\u4e8c\u5206\u56fe\u5bf9\u62cd\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0\u6ca1\u6709\u4ec0\u4e48\u9519\u8bef\u3002\u4e0d\u77e5\u9053\u662f\u4e3a\u4ec0\u4e48\u2026\u2026\u75db\u82e6\u4e07\u5206\n\n\u4e0d\u8fc7\u4ee5\u540e\u8fd8\u662f\u53bb\u6389\u5427\u2026\u2026\u4e5f\u8bb8\u5c31\u6709\u4ec0\u4e48\u6bd2\u7624\u6570\u636e\u5462\u4e86\u2026\u2026\n",
        "postTime": 1520400270,
        "uid": 13186,
        "name": "Darkness_",
        "ccfLevel": 0,
        "title": "\u4e8c\u5206\u56fe"
    },
    {
        "content": "\u9996\u5148\u5462\u58f0\u660e\u4e00\u4e0b\uff0c\u672c\u5b9d\u5b9d\u53d1\u8fd9\u7bc7\u9898\u89e3\u53ea\u662f\u4e3a\u4e86\uff08goto a;\uff09\n\n\u4e2a\u4eba\u8fd8\u662f\u6bd4\u8f83\u559c\u6b22\u8dd1dinic\u66b4\u529b\u8dd1\u6700\u5927\u6d41\u3002\u3002\u3002\u7adf\u7136\u6bd4\u5308\u7259\u5229\u8fd8\u5feb\u3002\u3002\n\u5982\u679c\u8bf4\u4e0d\u61c2\u7f51\u7edc\u6d41\u7684~~\u849f\u84bb~~\u5927\u4f6c\u4eec\u3002\n\u53ef\u4ee5\u770b\u770b[\u8fd9\u4e2a](https://www.cnblogs.com/SYCstudio/p/7260613.html)\uff08\u53cd\u6b63\u6211\u5c31\u662f\u5728\u8fd9\u7bc7\u6587\u7ae0\u770b\u61c2\u7684\uff09\n\n\u597d\u5566\uff0c\u8a00\u5f52\u6b63\u4f20\u3002\n\na:\u672c\u5b9d\u5b9d\u60f3\u89e3\u91ca\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u8fd9\u9053\u9898\u53ef\u4ee5\u7528\u7f51\u7edc\u6d41\u6c34\u8fc7233....\n\u9996\u5148\u6211\u4eec\u770b\u770b\u4e8c\u5206\u56fe\u7684\u6982\u5ff5\u3002\u6807\u51c6\u6982\u5ff5\u662f\uff1a\n\n\u7b80\u5355\u7684\u8bf4\uff0c\u4e00\u4e2a\u56fe\u88ab\u5206\u6210\u4e86\u4e24\u90e8\u5206\uff0c\u76f8\u540c\u7684\u90e8\u5206\u6ca1\u6709\u8fb9\uff0c\u90a3\u8fd9\u4e2a\u56fe\u5c31\u662f\u4e8c\u5206\u56fe\uff0c\u4e8c\u5206\u56fe\u662f\u7279\u6b8a\u7684\u56fe\u3002\uff08\u6458\u81ea[\u8fd9\u91cc](http://blog.csdn.net/thundermrbird/article/details/52231639)\uff09\n\n\u5982\u679c\u4f60\u770b\u4e0d\u61c2\u7684\u8bdd\uff0c\u90a3\u4e48\u8bf7\u770b\u67d0\u5927\u4f6c\u7ed9\u5b9d\u5b9d\u8bb2\u7684\u65f6\u5019\u7684\u89e3\u91ca\uff1a\n~~\u4e00\u7fa4\u6c49\u5b50\u548c\u4e00\u7fa4\u59b9\u5b50\u5339\u914d\u3002\u6ca1\u6709\u57fa\u53cb\u4e5f\u6ca1\u767e\u5408\uff0c\u4e0d\u80fd\u5f00\u540e\u5bab\uff0c\u8fd9\u5c31\u662f\u4e8c\u5206\u56fe\u3002\u6700\u5927\u5339\u914d\u5c31\u662f\u6c42\u80fd\u7ec4\u6210\u7684CP\u6700\u591a\u591a\u5c11\u5bf9~~  \u53ef\u80fd\u9898\u89e3\u4e0d\u8fc7\u5c31\u662f\u56e0\u4e3a\u8fd9\u53e5\u8bdd233\uff08\u9003~\uff09\n\n\u7f51\u7edc\u6d41\u6700\u91cd\u8981\u7684\u662f\u8981\u5efa\u56fe\uff01\u5efa\u56fe\uff01\u5efa\u56fe\uff01\u90a3\u4e48\u770b\u770b\u8fd9\u9053\u9898\u600e\u4e48\u5efa\u56fe\u3002\n\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e\u5de6\u8fb9\u7684n\u4e2a\u70b9\u548c\u53f3\u8fb9\u7684m\u4e2a\u70b9\u3002\u5982\u679c\u8bf4\u6700\u597d\u7684\u60c5\u51b5\u4e0b\u3002\u5339\u914d\u7684~~\u4e2a~~\u5bf9\u6570\u662f$min(m,n)$\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5de6\u8fb9\u5c3d\u53ef\u80fd\u7684\u901a\u8fc7\u5df2\u6709\u7684\u8fb9\u6d41\u5230\u53f3\u534a\u90e8\u5206\u7edf\u8ba1\u4e00\u4e0b\u6d41\u5230\u53f3\u534a\u90e8\u5206\u7684\u5bb9\u91cf\u6700\u5927\u503c\u5c31\u662f\u7b54\u6848\u4e86\uff08\u5f53\u7136\u662f\u8981\u8fb9\u7684\u5bb9\u91cf\u90fd\u662f1\u7684\u65f6\u5019\u6700\u7b80\u5355\u4e86\uff09\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5c06\u6e90\u70b9S\u8bbe\u5728\u5de6\u534a\u90e8\u5206\u5de6\u8fb9\uff0c\u5411\u5de6\u8fb9\u6240\u6709\u7684\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a1\u7684\u8fb9\u3002\u6c47\u70b9T\u8bbe\u5728\u53f3\u534a\u90e8\u5206\u7684\u53f3\u8fb9\u3002\u4ece\u6240\u6709\u7684\u53f3\u534a\u90e8\u5206\u7684\u70b9\u8fde\u5411\u6c47\u70b9\u4e00\u6761\u5bb9\u91cf\u4e3a1\u7684\u8fb9\uff0c\u66b4\u529b\u8dd1\u4e00\u8fb9dicnic\u5c31\u597d\u5566\u3002\n\n\u6240\u4ee5\u5efa\u8fb9\u4ee3\u7801\uff1a\n```cpp\n    scanf(\"%d%d%d\",&n1,&m1,&e1);\n    n=n1+m1+2;//\u6e90\u70b9\u7f16\u53f7\u4e3a1\uff0c\u6c47\u70b9\u7f16\u53f7\u4e3a\u603b\u70b9\u6570+1\n    for(int i=1;i<=n1;i++)\n    {\n        add(1,i+1,1);//\u7a7a\u8fc7\u6e90\u70b9\uff0c\u6240\u4ee5i+1\uff0c\u8fd9\u91cc\u5728\u8fde\u63a5\u6e90\u70b9\u548c\u5de6\u90e8\u70b9\u3002\n        add(i+1,1,1);\n    }\n    for(int i=1;i<=e1;i++)\n    {\n    \tint u,v;//\u8fde\u5df2\u6709\u7684\u8fb9\n    \tscanf(\"%d%d\",&u,&v);\n    \tif(u<=n1&&v<=m1)\n    \tadd(u+1,v+n1+1,1),\n    \tadd(v+n1+1,u+1,1);\n    }\n    for(int i=1;i<=m1;i++)\n    {\n        add(i+n1+1,n,1);//\u8fde\u53f3\u90e8\u70b9\u548c\u6c47\u70b9\n        add(n,i+n1+1,1);\n    }\n```\n\u597d\u5566\u5b8c\u6574\u4ee3\u7801\u5949\u4e0a\uff1a\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint n,m;\nint cnt=2;\nint alist[6000001];\nstruct data{\n    int v;int next;int value;\n}edge[6000001];\nvoid add(int u,int v,int value)\n{\n    edge[cnt].v=v;\n    edge[cnt].value=value;\n    edge[cnt].next=alist[u];\n    alist[u]=cnt++;\n    return ;\n}\nint h[1000001];\nint q[1000001];\n//dicnic\u66b4\u529b\u53c2\u89c1\u4e0a\u9762\u63d0\u5230\u7684\u535a\u5ba2\u3002\nbool bfs()\n{\n    int x,next;\n    memset(h,-1,sizeof(h));\n    int head=0,tail=1;\n    q[head]=1;\n    h[1]=0;\n    while(head<tail)\n    {\n        x=q[head++];\n        next=alist[x];\n        while(next)\n        {\n            int v=edge[next].v;\n            int value=edge[next].value;\n            if(value&&h[v]<0)\n            {\n                q[tail++]=v;\n                h[v]=h[x]+1;\n            }\n            next=edge[next].next;\n        }\n    }\n//    for(int i=1;i<=n*m;i++) printf(\"h[%d]=%d\\n\",i,h[i]);\n    if(h[n]==-1) return false;\n    return true;\n}\nint ans;\nint dfs(int x,int y)\n{\n    if(x==n) return y;\n    int next=alist[x];\n    int w,used=0;\n    while(next)\n    {\n        int v=edge[next].v;\n        int value=edge[next].value;\n        if(value&&h[v]==h[x]+1)\n        {\n                w=y-used;\n                w=dfs(v,min(w,value));\n                edge[next].value-=w;\n                edge[next^1].value+=w;\n                used+=w;\n                if(used==y) return y;\n        }\n        next=edge[next].next;\n    }\n    if(!used) h[x]=-1;\n    return used;\n}\nvoid dinic()\n{\n    while(bfs()) ans+=dfs(1,0x7fffffff);\n}\nint n1,m1,e1;\nint main()\n{\n //   freopen(\"testdata.in\",\"r\",stdin);\n //\u7b2c\u4e00\u904d\u6ca1A\u5c31\u662f\u56e0\u4e3a\u5fd8\u4e86\u5220\u4e0a\u9762\u8fd9\u53e5\u8bdd\u3002\u3002\u3002\n    scanf(\"%d%d%d\",&n1,&m1,&e1);\n    n=n1+m1+2;\n    for(int i=1;i<=n1;i++)\n    {\n        add(1,i+1,1);\n        add(i+1,1,1);\n    }\n    for(int i=1;i<=e1;i++)\n    {\n    \tint u,v;\n    \tscanf(\"%d%d\",&u,&v);\n    \tif(u<=n1&&v<=m1)\n    \tadd(u+1,v+n1+1,1),\n    \tadd(v+n1+1,u+1,1);\n    }\n    for(int i=1;i<=m1;i++)\n    {\n        add(i+n1+1,n,1);\n        add(n,i+n1+1,1);\n    }\n    dinic();//\u66b4\u529b\u8dd1\u6700\u5927\u6d41\n    printf(\"%d\",ans);\n    return 0;//\u7a0b\u5e8f\u62dc\u62dc\n}\n```\n\u597d\u5566\u8fd9\u9053\u9898\u5c31\u5148\u8fd9\u6837\u3002\u5bf9\u4e8e\u8981\u5237\u7f51\u7edc\u6d41\u7684\u5927\u4f6c\u4eec\u8981\u662f\u60f3\u7ec3\u4e00\u7ec3\u600e\u4e48\u89c1\u56fe\u7684\u8bdd[P1402](https://www.luogu.org/problemnew/show/P1402)\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u62e9\u3002\n\u7136\u540e\u60f3\u6df1\u5165\u5b66\u4e60\u7684\u540c\u5b66\u53ef\u4ee5\u770b\u770b\u6700\u5c0f\u5272\u548c\u8f6c\u5bf9\u5076\u56fe\u3002\u4e4b\u540e\u505a\u4e00\u4e0b[P4001](https://www.luogu.org/problemnew/show/P4001)",
        "postTime": 1519376276,
        "uid": 57699,
        "name": "Arcturus1350",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3386 \u3010\u3010\u6a21\u677f\u3011\u4e8c\u5206\u56fe\u5339\u914d\u3011"
    },
    {
        "content": "\u6211\u4ed4\u7ec6\u6d4f\u89c8\u4e86\u4e00\u4e0b\u6240\u6709\u7684\u9898\u89e3\uff0c \u53d1\u73b0\u5176\u4e2d\u5927\u90e8\u5206\u4ee3\u7801\u5b9e\u5728\u662f\u592a\u5197\u4f59\u3002\u6253\u7b97\u4e0a\u4f20\u4e00\u4e0b\u81ea\u5df1\u7684\u9898\u89e3\uff0c\u611f\u89c9\u8bb2\u5f97\u5f88\u6e05\u6670\uff0c\u5e0c\u671b\u7ba1\u7406\u5458\u5927\u5927\u80fd\u591f\u7ed9\u8fc7\uff0c\u8c22\u8c22\uff01\uff01\uff01\n\n\n------------\n\u5982\u679c\u5728\u5f53\u524d\u5339\u914d\u65b9\u6848\u4e0b\u518d\u4e5f\u627e\u4e0d\u5230\u589e\u5e7f\u8def\uff0c\u90a3\u4e48\u5f53\u524d\u5339\u914d\u5c31\u662f\u6700\u5927\u5339\u914d\u4e86\u3002\n~~\u4ec0\u4e48\uff1f\u4e0d\u6e05\u695a\u4ec0\u4e48\u662f\u589e\u5e7f\u8def\uff1f\u81ea\u5df1\u767e\u5ea6\u5427\u3002~~\n\n**\u5308\u7259\u5229\u7b97\u6cd5\u6d41\u7a0b\uff1a**\n\n1.\u4ece\u4efb\u610f\u4e00\u4e2a\u6ca1\u6709\u88ab\u914d\u5bf9\u7684\u70b9x\u5f00\u59cb\uff0c\u4ece\u70b9x\u7684\u8fb9\u4e2d\u4efb\u610f\u9009\u4e00\u6761\u8fb9\u3002\u5982\u679c\u6b64\u65f6\u70b9i\u6ca1\u6709\u88ab\u914d\u5bf9\u90a3\u4e48\u914d\u5bf9\u6210\u529f\uff0c\u5219\u627e\u5230\u4e86\u4e00\u6761\u589e\u5e7f\u8def\u3002\u5982\u679c\u70b9i\u6b64\u65f6\u5df2\u7ecf\u88ab\u914d\u5bf9\u4e86\uff0c\u90a3\u4e48\u53ef\u4ee5\u5c1d\u8bd5\u5c06\u70b9i\u4e0e\u5176\u4ed6\u70b9\u914d\u5bf9\u3002\u5982\u679c\u5c1d\u8bd5\u6210\u529f\uff0c\u5219\u627e\u5230\u4e00\u6761\u589e\u5e7f\u8def\u3002\u8fd9\u91cc\u7528match[ ]\u6765\u8bb0\u5f55\u914d\u5bf9\u5173\u7cfb\uff0c \u5373match[i] = x\u3002 \u5e76\u4e14\u5c06\u914d\u5bf9\u6570+1\u3002 \u8fd9\u4e2a\u8fc7\u7a0b\u6211\u4eec\u7528dfs\u6765\u5b9e\u73b0\u3002\n\n2.\u5982\u679c\u914d\u5bf9\u5931\u8d25\uff0c\u5c31\u4ece\u70b9x\u7684\u8fb9\u4e2d\u91cd\u9009\u4e00\u6761\u8fb9\u5c1d\u8bd5\u3002\u76f4\u5230\u70b9x\u914d\u5bf9\u6210\u529f\u6216\u5c1d\u8bd5\u5b8cx\u6240\u6709\u7684\u8fb9\u3002\n\n3.\u63a5\u4e0b\u6765\u5bf9\u6ca1\u6709\u914d\u5bf9\u7684\u70b9\u4e00\u4e00\u8fdb\u884c\u914d\u5bf9\uff0c\u76f4\u5230\u6240\u6709\u7684\u70b9\u90fd\u5c1d\u8bd5\u5b8c\u6bd5\u627e\u4e0d\u5230\u65b0\u7684\u589e\u5e7f\u8def\u3002\n\n~~\u4e09\u6b65\u8d70\u4e86\u89e3\u4e00\u4e0b~~\n\n\u4e0b\u9762\u6765\u4e00\u6ce2\u4ee3\u7801\uff0c\u4ee3\u7801\u5f88\u77ed\uff0c\u53ea\u6709\u4e09\u5341\u884c\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define N 1001\nusing namespace std;\nint n, m, e, ans, match[N];\nbool a[N][N], vis[N];\nbool dfs(int x){\n\tfor (int i = 1; i <= m; i++)\n\t\tif (!vis[i] && a[x][i]){\n\t\t\tvis[i] = 1;\n\t\t\tif (!match[i] || dfs(match[i])){\n\t\t\t\tmatch[i] = x;\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\treturn 0;\n}\nint main(){\n\tcin >> n >> m >> e;\n\tfor (int i = 1; i <= e; i++){\n\t\tint u, v;\n\t\tscanf(\"%d%d\", &u, &v);\n\t\tif (v <= m) a[u][v] = 1;\n\t}\n\tfor (int i = 1; i <= n; i++){\n\t\tans += dfs(i);\n\t\tmemset(vis, 0, sizeof(vis));\n\t}\n\tcout << ans;\n\treturn 0;\n}\n```",
        "postTime": 1536046117,
        "uid": 25729,
        "name": "\u4e0d\u8bb8\u96f7\u540c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3386 \u3010\u3010\u6a21\u677f\u3011\u4e8c\u5206\u56fe\u5339\u914d"
    },
    {
        "content": "\u7ed9\u4e24\u79cd\u505a\u6cd5\uff1a\n\n1. \u5308\u7259\u5229\u7b97\u6cd5\n\n\u672c\u8d28\u4e0a\u662f\u8d2a\u5fc3\n\n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\n\nconst int N = 1e3;\nbool f[N][N];\nbool used[N];\nint match[N];\nint n,m,e;\n\nbool DFS(int pos)\n{\n    for(int i=1; i<=m; i++)\n    {\n        if(f[pos][i] && !used[i])\n        {\n            used[i] = true;\n            if(!match[i] || DFS(match[i])) //\u5982\u679c\u8fd9\u4e2a\u70b9i\u8fd8\u672a\u5339\u914d\u5219pos\u548c\u4ed6\u5339\u914d\uff0c\u5982\u679c\u8fd9\u4e2a\u70b9\u5df2\u7ecf\u5339\u914d\uff0c\u90a3\u4e48\u5982\u679c\u672c\u6765\u548c\u4ed6\u5339\u914d\u7684\u70b9match[i]\u8fd8\u80fd\u627e\u5230\u53e6\u4e00\u4e2a\u70b9\u5339\u914d\u5219pos\u628ai\u201c\u62a2\u201d\u8fc7\u6765\uff0c\u8ba9match[i]\u53bb\u5339\u914d\u53e6\u4e00\u4e2a\u70b9\uff0c\u5426\u5219\u5c31\u4e0d\u5e72\u6d89i\u548cmatch[i]\u5339\u914d\n            {\n                match[i] = pos;\n                return true;\n            }\n        }\n    }\n    return false; \n}\n\nint main()\n{\n    scanf(\"%d%d%d\",&n,&m,&e);\n    for(int i=1; i<=e; i++)\n    {\n        int x,y; scanf(\"%d%d\",&x,&y);\n        if(x<=n && y<=m) f[x][y] = true; \n    }\n    int ans = 0;\n    for(int i=1; i<=n; i++)\n    {\n        memset(used,false,sizeof(used)); //\u6ce8\u610f\u6b64\u5904\n        if(DFS(i)) ans++;\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```\n2.\u7f51\u7edc\u6700\u5927\u6d41\n\n\u5efa\u4e00\u4e2a\u70b9s\u7f16\u53f7\u4e3a1\u4e3a\u6e90\u70b9\uff0c\u5efa\u4e00\u4e2a\u70b9t\u7f16\u53f7\u4e3an+m+2\u4e3a\u6c47\u70b9\u3002\u7136\u540e\u8ba9A\u7c7b\u70b9\u5206\u522b\u7f16\u53f7\u4e3a2~n+1, B\u7c7b\u70b9\u5206\u522b\u7f16\u53f7\u4e3an+2~n+m+1\u3002\n\n\u7136\u540e\u5efa\u8fb9\uff1a\u628as\u548c\u6240\u6709A\u7c7b\u70b9\u90fd\u8fde\u8fb9\uff0cAB\u7c7b\u70b9\u4e4b\u95f4\u6839\u636e\u8f93\u5165\u8fde\u8fb9\uff0c\u6240\u6709B\u7c7b\u70b9\u548cT\u8fde\u8fb9\uff0c\u6bcf\u6761\u8fb9\u8fb9\u6743\u5747\u4e3a1.\n\n\u6700\u540e\u5728\u56fe\u4e0a\u8dd1\u7f51\u7edc\u6700\u5927\u6d41\u5373\u53ef\u3002\n\n```cpp\n#include<cstdio>\n#include<queue>\n#include<cstring>\nusing namespace std;\n\nconst int N = 2005;\nconst int M = 1002005;\nconst int INF = 0x7fffffff;\nstruct Edge\n{\n    int v,val,nxt,rev;\n};\nEdge e[M<<1];\nint fe[N];\nqueue<int> q;\nint dep[N];\nint n,m,s,t;\n\nbool bfs()\n{\n    while(!q.empty()) q.pop();\n    memset(dep,0,sizeof(dep));\n    q.push(s); dep[s] = 1;\n    while(!q.empty())\n    {\n        int c = q.front(); q.pop();\n        for(int i=fe[c]; i; i=e[i].nxt)\n        {\n            if(e[i].val>0 && !dep[e[i].v])\n            {\n                dep[e[i].v] = dep[c]+1;\n                q.push(e[i].v); \n            }\n        }\n    }\n    if(dep[t]) return true;\n    else return false;\n}\n\nint dfs(int pos,int cur)\n{\n    if(pos==t) return cur;\n    int rst = cur;\n    for(int i=fe[pos]; i; i=e[i].nxt)\n    {\n        if(dep[e[i].v]==dep[pos]+1 && e[i].val>0 && rst)\n        {\n            int flow = dfs(e[i].v,min(e[i].val,rst));\n            if(flow>0)\n            {\n                e[i].val -= flow;\n                rst -= flow;\n                e[e[i].rev].val += flow;\n            }\n        }\n    }\n    return cur-rst;\n}\n\nint dinic()\n{\n    int ans = 0;\n    while(bfs()) ans += dfs(s,INF);\n    return ans;\n}\n\nvoid addedge(int u,int v,int val,int rev)\n{\n    e[++m].v = v; e[m].val = val; e[m].rev = rev;\n    e[m].nxt = fe[u]; fe[u] = m;\n}\n\nint main()\n{\n    int n1,n2,m0; m = 0;\n    scanf(\"%d%d%d\",&n1,&n2,&m0);\n    n = n1+n2+2;\n    for(int i=1; i<=m0; i++)\n    {\n        int x,y;\n        scanf(\"%d%d\",&x,&y);\n        if(x<=n1 && y<=n2)\n        {\n            addedge(x+1,y+n1+1,1,m+2);\n            addedge(y+n1+1,x+1,0,m);\n        }\n    }\n    for(int i=1; i<=n1; i++)\n    {\n        addedge(1,i+1,1,m+2);\n        addedge(i+1,1,0,m);\n    }\n    for(int i=1; i<=n2; i++)\n    {\n        addedge(i+n1+1,n,1,m+2);\n        addedge(n,i+n1+1,0,m);\n    }\n    s = 1; t = n;\n    printf(\"%d\\n\",dinic()); \n    return 0;\n}\n```",
        "postTime": 1510576469,
        "uid": 23613,
        "name": "suncongbo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3386 \u3010\u3010\u6a21\u677f\u3011\u4e8c\u5206\u56fe\u5339\u914d\u3011"
    },
    {
        "content": "\u534a\u5e74\u591a\u524d\u89c9\u5f97\u8fd9\u9053\u9898\u5f88\u96be\uff0c\u73b0\u5728\u89c9\u5f97\u8fd8\u597d.\n\n \u4e00\u770b\u9898\u76ee\uff0c\n####  \u201c \u6a21\u677f \u201d \u4e24\u4e2a\u5927\u5b57\u6620\u5165\u6211\u7684\u773c\u5e18\uff0c\n\n~~\u8c01\u90fd\u77e5\u9053\u8fd9\u662f\u4e00\u4e2a\u4e8c\u5206\u56fe\u5339\u914d\u95ee\u9898~~\n\n\u672c\u6587\u6bd4\u8f83\u6d45\u663e\u6613\u61c2\uff08\u79c1\u4ee5\u4e3a\uff09\uff0c\u9002\u5408\u840c\u65b0\u770b\uff0c\u5927\u4f6c\u4eec\u53ef\u8df3\u8fc7\n\n\u89e3\u51b3\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u5927\u6982\u6709\u4e24\u79cd\u505a\u6cd5\uff0c\n \n  -  \u7f51\u7edc\u6d41\u7b97\u6cd5. \u5c31\u662f\u5728\u539f\u56fe\u7684\u57fa\u7840\u4e0a\u5efa\u4e00\u4e2a\u6e90\u70b9\uff0c\u518d\u5efa\u4e00\u4e2a\u6c47\u70b9\uff0c\u8dd1\u6700\u5927\u6d41\u5373\u53ef.\u4e0d\u8fc7\u672c\u9898 EK \u4f1a\u70b8\uff0c\u6240\u4ee5\u8981\u7528Dinic\uff0c\u4ecb\u4e8e\u672c\u6587\u4e3b\u8981\u4ecb\u7ecd\u5308\u7259\u5229\u7b97\u6cd5\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u53d9.\n  \n  -  \u5308\u7259\u5229\u7b97\u6cd5. \u524d\u65b9\u5185\u5bb9\u8f83\u591a\uff0c\u5927\u4f6c\u4eec\u53ef\u8df3\u8fc7.\n  \n  \n  \n\u4e00. \u4e8c\u5206\u56fe\u4ecb\u7ecd\n  \n\u4e8c\u5206\u56fe\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u65e0\u5411\u56fe\u3002\n  \n    \u2022 \u70b9\u96c6 V \u53ef\u4ee5\u62c6\u6210\u4e24\u90e8\u5206 V = V1 \u222a V2\u3002\n  \n    \u2022 V1 \u5185\u90e8\u6ca1\u6709\u8fb9\u3002\n  \n    \u2022 V2 \u5185\u90e8\u6ca1\u6709\u8fb9\u3002\n  \n    \u2022 \u6362\u53e5\u8bdd\u8bf4\uff0c\u6240\u6709\u7684\u8fb9\u90fd\u6a2a\u8de8 V1 \u548c V2\u3002\n\n\n\n\n\u4e8c. \u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\n\n    \u2022 \u5339\u914d\uff1a\u9009\u51fa\u56fe\u7684\u8fb9\u96c6 E \u7684\u4e00\u4e2a\u5b50\u96c6 F\uff0c\u4f7f V1 \u548c V2 \u4e2d\u7684\u6bcf\u4e2a\u70b9\n\u6700\u591a\u5173\u8054\u4e86 F \u4e2d\u7684\u4e00\u6761\u8fb9\u3002\n\n    \u2022 \u6700\u5927\u5339\u914d\uff1a\u9009\u51fa\u7684\u5b50\u96c6\u5305\u542b\u8fb9\u7684\u4e2a\u6570\u6700\u5927\u3002\n\n\n\n\n\u4e09. \u589e\u5e7f\u8def\u5b9a\u7406\n\n\u8bbe F \u662f\u4e00\u4e2a\u5339\u914d\u3002\n\n    \u2022 V1, V2 \u4e2d\u88ab F \u8986\u76d6\u5230\u7684\u70b9\u79f0\u4e3a\u9971\u548c\u70b9\uff0c\u672a\u8986\u76d6\u5230\u7684\u53eb\u975e\u9971\u548c\u70b9\u3002\n\n    \u2022 F \u4e2d\u7684\u8fb9\u79f0\u4e3a\u5339\u914d\u8fb9\uff0c\u5176\u5b83\u7684\u53eb\u975e\u5339\u914d\u8fb9\u3002\n\n    \u2022 \u4ea4\u9519\u8def\uff1a\u4ece\u975e\u9971\u548c\u70b9\u51fa\u53d1\uff0c\u4f9d\u6b21\u7ecf\u8fc7\u975e\u5339\u914d\u8fb9\u3001\u5339\u914d\u8fb9\u3001\u975e\u5339\u914d\u8fb9\u3001\u5339\u914d\u8fb9\u3001\u975e\u5339\u914d\u8fb9\u2026\u2026\n\n    \u2022 \u589e\u5e7f\u8def\uff1a\u4ece\u975e\u9971\u548c\u70b9\u51fa\u53d1\u6700\u540e\u8d70\u5230\u4e00\u4e2a\u975e\u9971\u548c\u70b9\u7684\u4ea4\u9519\u8def\u3002\n\n    \u2022 \u589e\u5e7f\u8def\u4e2d\u975e\u5339\u914d\u8fb9\u6bd4\u5339\u914d\u8fb9\u591a\u4e00\u6761\u3002\n\n    \u2022 \u5982\u679c\u56fe\u4e2d\u5b58\u5728\u589e\u5e7f\u8def\uff0c\u5219\u628a\u7ecf\u8fc7\u7684\u975e\u5339\u914d\u8fb9\u548c\u5339\u914d\u8fb9\u4e92\u6362\uff0c\u80fd\u5f97\u5230\u66f4\u5927\u7684\u5339\u914d F\u2032\u3002 \n\n    \u2022 \u5982\u679c F \u4e0d\u662f\u6700\u5927\u5339\u914d\uff0c\u5219\u5b58\u5728\u589e\u5e7f\u8def\u3002\n\n\n\n\n\u56db. \u589e\u5e7f\u8def\u7b97\u6cd5\n\n  1. \u4e00\u5f00\u59cb\uff0cF \u4e3a\u7a7a\u3002\n\n  2. \u6bcf\u6b21\u627e F \u7684\u589e\u5e7f\u8def\uff0c\u80fd\u627e\u5230\u5c31\u589e\u5e7f\u3002\n\n  3. \u627e\u4e0d\u5230\u589e\u5e7f\u8def\u65f6\uff0c\u7b97\u6cd5\u7ed3\u675f\u3002\n\n\n\n\n\u4e94. \u5308\u7259\u5229\u7b97\u6cd5\n\n  1. \u4e00\u5f00\u59cb\uff0cF \u4e3a\u7a7a\u3002\n\n  2. \u679a\u4e3e V1 \u4e2d\u7684\u70b9 x\uff0c\u627e\u4ee5 x \u4e3a\u8d77\u70b9\u7684\u589e\u5e7f\u8def\uff0c\u627e\u5230\u4e86\u5c31\u589e\u5e7f\u3002\n\n  3. V1 \u4e2d\u7684\u70b9\u90fd\u5c1d\u8bd5\u589e\u5e7f\u4e00\u6b21\u540e\uff0c\u7b97\u6cd5\u7ed3\u675f\u3002\n\n\u5b9a\u7406\uff1a\u5982\u679c\u5728\u67d0\u4e00\u65f6\u523b\uff0c\u627e\u4e0d\u5230\u4ee5 x \u4e3a\u8d77\u70b9\u7684\u589e\u5e7f\u8def\uff0c\u5219\u589e\u5e7f\u51e0\u8f6e\u4e4b\u540e\u4ecd\u4e0d\u4f1a\u627e\u5230\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(nm)\n\n\n\n\u8fd9\u662f\u6211\u5728\u4e00\u6b21\u57f9\u8bad\u4e2d\u8001\u5e08\u7684\u89c1\u89e3.\n\n\u5173\u4e8e\u8bc1\u660e\uff0c\u592a\u96be\uff0c\u849f\u84bb\u4e0d\u4f1a\u8bc1\uff0c\u5927\u4f6c\u4eec\u8bf7\u8c05\u89e3.\n\n\u4e0b\u9762\u8d34\u4ee3\u7801\uff08\u6211\u76f8\u4fe1\u5404\u4f4d\u5927\u4f6c\u4e5f\u4e0d\u9700\u8981\u4ee3\u7801\uff09\uff1a\n\n\n```\n#include<iostream>\n\nusing namespace std;\n\nconst int V=1000010;\nint N,M,E,ans;\nint edge[V],head[1010],nxt[V],tot;\nint dfn[2020],match[1010],x,y,ti;\n\nvoid add(int x,int y)//\u52a0\u8fb9\n{\n\tedge[++tot]=y;\n\tnxt[tot]=head[x];\n\thead[x]=tot;\n}\n\nint dfs(int x,int ti)//ti\u662f\u65f6\u95f4\u6233\n{\n\tfor(int i=head[x];i;i=nxt[i])\n\t{\n\t\tint j=edge[i];\n\t\tif(dfn[j]!=ti)//\u8fd9\u4e00\u8f6e\u8fd8\u6ca1\u6709\u904d\u5386\u5230\n\t\t{\n\t\t\tdfn[j]=ti;\n\t\t\tif(!match[j]||dfs(match[j],ti))//\u6ca1\u6709\u548cj\u70b9\u5339\u914d\u7684\u70b9\u6216\u8005\u662f\u627e\u5230\u4e86\u4e00\u6761\u53ef\u589e\u5e7f\u7684\u8def\u5f84\n\t\t\t{\n\t\t\t\tmatch[j]=i;//i,j\u5339\u914d\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t\t\t  \n\t}\n\treturn 0;\n}\n\nint main()\n{\n\tcin>>N>>M>>E;\n\tfor(int i=1;i<=E;i++)\n\t{\n\t\tcin>>x>>y;\n\t\tif(x>N||y>M)  continue;\n\t\tadd(x,y);\n\t}\n\t\n\tfor(int i=1;i<=N;i++)\n\t\tif(dfs(i,++ti))  ans++;//\u627e\u5230\u4e86\u4e00\u6761\u589e\u5e7f\u8def\n\t\t\n\tcout<<ans<<endl;\n\t\n\treturn 0;\n}\n```\n\u53bb\u6389\u7a7a\u884c\u540e40\u6765\u884c\uff0c\u4e5f\u662f\u6bd4\u8f83\u77ed\u7684\u4e86.\n\n\n[\u535a\u5ba2\u98df\u7528\u53e3\u611f\u66f4\u597d\u54df](https://www.luogu.org/blog/OnePunchManGO/)\n\n\u56e0\u4e3a\u6709\u4e00\u4e9b\u5c0f\u9519\u8bef\uff0c\u5bfc\u81f4\u5b9a\u7406\u9610\u8ff0\u7b26\u53f7\u90fd\u662f\uff1f\uff1f\uff1f\uff1f\uff0c\u66f4\u6539\u4e86\u4e00\u4e0b\uff0c\u5e0c\u671b\u7ba1\u7406\u5458\u7ed9\u8fc7\n\n\n  \n  ",
        "postTime": 1566558203,
        "uid": 126136,
        "name": "Plus_Ultra",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3386 \u3010\u3010\u6a21\u677f\u3011\u4e8c\u5206\u56fe\u5339\u914d\u3011"
    },
    {
        "content": "\u597d\u50cf\u6ca1\u6709\u770b\u5230\u5199Hopcroft-Carp\u7b97\u6cd5\u7684\uff0c\u90a3\u6211\u6765\u53d1\u4e00\u4e2a\u5427\u3001\u3001\n\n\u5308\u7259\u5229\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(NM)\u7684\u3002\u3002\u800cHopcroft-Carp\u7b97\u6cd5\u662fO(sqrt(N) \\* E ) \u7684\u3002\u3002\n\n\u7136\u540e\u5c31\u662f\u4e00\u4e2a\u6a21\u677f\u4e86\u3002\u3002\n\n```cpp\n/**************************\n* \u4e8c\u5206\u56fe\u5339\u914d(Hopcroft-Carp\u7b97\u6cd5)\n* \u590d\u6742\u5ea6 O (sqrt(n) * E) \n* \u90bb\u63a5\u8868\u5b58\u56fe \n* Nx \u4e3a\u5de6\u7aef\u7684\u7aef\u70b9\u6570,\u4f7f\u7528\u524d\u5148\u8d4b\u503c(\u70b9\u7f16\u53f7\u4ece 0 \u5f00\u59cb \n**************************/ \n#include<cstdio>\n#include<queue>\n#include<vector>\n#include<cstring>\n#include<algorithm>\n#define ri register int\nusing namespace std;\n#define gc getchar\ntemplate<class T>void read(T&x){\n    ri f=1,c;while(c=gc(),c<48||57<c)if(c=='-')f=-1;x=c^48;\n    while(c=gc(),47<c&&c<58)x=(x<<3)+(x<<1)+(c^48);x*=f;\n}\nconst int N = 3005, INF = 0x3f3f3f3f;\nvector<int> G[N];\nint Nx,Ny,k;\n\nint Mx[N],My[N];\nint dx[N],dy[N];\nint dis,u,v;\nbool used[N];\nbool searchP(){\n    queue<int> Q;\n    dis = INF;\n    memset(dx,-1,sizeof(dx));\n    memset(dy,-1,sizeof(dy));\n    for(int i = 0;i < Nx;++i)\n    if(Mx[i] == -1)    Q.push(i), dx[i] = 0;\n    while(!Q.empty()){\n        int u = Q.front();Q.pop();\n        if(dx[u] > dis) break;\n        int sz = G[u].size();\n        for(int i = 0;i < sz;++i){\n            int v = G[u][i];\n            if(dy[v] == -1) {\n                dy[v] = dx[u] + 1;\n                if(My[v] == -1) dis = dy[v];\n                else dx[My[v]] = dy[v] + 1, Q.push(My[v]);\n            }\n        }\n    }\n    return dis != INF;\n}\nbool DFS(int u){\n    int sz = G[u].size();\n    for(int i = 0;i < sz;++i){\n        int v = G[u][i];\n        if(!used[v] && dy[v] == dx[u] + 1){\n            used[v] = true;\n            if(My[v] != -1 && dy[v] == dis) continue;\n            if(My[v] == -1 || DFS(My[v])){\n                My[v] = u;\n                Mx[u] = v;\n                return true;\n            }\n        } \n    }\n    return false;\n}\nint MaxMatch(){\n    int res = 0;\n    memset(Mx,-1,sizeof(Mx));\n    memset(My,-1,sizeof(My));\n    while(searchP()){\n        memset(used,false,sizeof(used));\n        for(int i = 0;i < Nx;++i)\n        if(Mx[i] == -1 && DFS(i)) ++res;\n    }\n    return res;\n}\nint main(){\n    read(Nx);read(Ny);read(k);\n    while(k--){read(u);read(v);if(v<=Ny) G[u-1].push_back(v-1);}\n    printf(\"%d\\n\",MaxMatch());\n}\n```",
        "postTime": 1510015402,
        "uid": 48967,
        "name": "\u5948\u8299\u83b2",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3386 \u3010\u3010\u6a21\u677f\u3011\u4e8c\u5206\u56fe\u5339\u914d\u3011"
    },
    {
        "content": "[*\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c*](https://www.cnblogs.com/Lemir3/p/11113535.html#autoid-0-0-0)\n\n#\u4ec0\u4e48\u662f\u4e8c\u5206\u56fe?\n\n>\u4e8c\u5206\u56fe\u53c8\u79f0\u4f5c\u4e8c\u90e8\u56fe\uff0c\u662f\u56fe\u8bba\u4e2d\u7684\u4e00\u79cd\u7279\u6b8a\u6a21\u578b\u3002 \u8bbeG=(V,E)\u662f\u4e00\u4e2a\u65e0\u5411\u56fe\uff0c\u5982\u679c\u9876\u70b9V\u53ef\u5206\u5272\u4e3a\u4e24\u4e2a\u4e92\u4e0d\u76f8\u4ea4\u7684\u5b50\u96c6(A,B)\uff0c\u5e76\u4e14\u56fe\u4e2d\u7684\u6bcf\u6761\u8fb9\uff08i\uff0cj\uff09\u6240\u5173\u8054\u7684\u4e24\u4e2a\u9876\u70b9i\u548cj\u5206\u522b\u5c5e\u4e8e\u8fd9\u4e24\u4e2a\u4e0d\u540c\u7684\u9876\u70b9\u96c6(i in A,j in B)\uff0c\u5219\u79f0\u56feG\u4e3a\u4e00\u4e2a\u4e8c\u5206\u56fe\u3002------\u6458\u81ea\u767e\u5ea6\u767e\u79d1\n\n![\u914d\u56fe1](https://gss1.bdstatic.com/9vo3dSag_xI4khGkpoWK1HF6hhy/baike/w%3D268%3Bg%3D0/sign=dbf8c742e050352ab161220e6b789ccf/7a899e510fb30f24a3ac24f6c195d143ad4b0315.jpg)\n\n#\u600e\u6837\u5224\u5b9a\u4e8c\u5206\u56fe?\n\n*\u4ee5\u4e0b\u5185\u5bb9\u6458\u81ea\u300a\u7b97\u6cd5\u7ade\u8d5b\u8fdb\u9636\u6307\u5357\u300b*\n\n\u5b58\u5728\u5982\u4e0b\u5b9a\u7406:\n\n>\u4e00\u5f20\u65e0\u5411\u56fe\u662f\u4e8c\u5206\u56fe,\u5f53\u4e14\u4ec5\u5f53\u56fe\u4e2d\u4e0d\u5b58\u5728\u5947\u73af(\u957f\u5ea6\u4e3a\u5947\u6570\u7684\u73af).\n\n\u6839\u636e\u8be5\u5b9a\u7406,\u540c\u5fd7\u4eec\u53ef\u4ee5\u4ee5\u67d3\u8272\u6cd5\u8fdb\u884c\u4e8c\u5206\u56fe\u7684\u5224\u5b9a.\u4e3b\u4f53\u601d\u60f3\u4e3a:\u5c1d\u8bd5\u7528\u9ed1\u767d\u4e24\u79cd\u989c\u8272\u6807\u8bb0\u56fe\u4e2d\u7684\u7ed3\u70b9,\u5f53\u4e00\u4e2a\u7ed3\u70b9\u88ab\u6807\u8bb0\u540e,\u5b83\u7684\u6240\u6709\u76f8\u90bb\u7ed3\u70b9\u5e94\u8be5\u88ab\u6807\u8bb0\u4e0e\u5b83\u76f8\u53cd\u7684\u989c\u8272.\u82e5\u6807\u8bb0\u8fc7\u7a0b\u4e2d\u4ea7\u751f\u51b2\u7a81,\u5219\u8bf4\u660e\u56fe\u4e2d\u5b58\u5728\u5947\u73af.\u4e8c\u5206\u56fe\u67d3\u8272\u4e00\u822c\u57fa\u4e8eDFS\u5b9e\u73b0,\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(n+m)$,\u4f2a\u4ee3\u7801\u5982\u4e0b:\n\n```cpp\n\nvoid dfs(int x,int color)\n{\n    \u8d4b\u503cv[x] <-- color\n    \u5bf9\u4e8e\u4e0ex\u76f8\u8fde\u7684\u6bcf\u6761\u65e0\u5411\u8fb9(x,y)\n    if v[y]=0 then\n        dfs(y,3-color)\n    else if v[y]=color then\n        \u5224\u5b9a\u65e0\u5411\u56fe\u4e0d\u662f\u4e8c\u5206\u56fe,\u7b97\u6cd5\u7ed3\u675f\n}\n\n\u5728\u4e3b\u51fd\u6570\u4e2d\n    for i <-- 1 to n\n        if(v[i]=0)then dfs(i,1)\n    \u5224\u5b9a\u65e0\u5411\u56fe\u662f\u4e8c\u5206\u56fe\n\n```\n\n#\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\n\n*\u4ee5\u4e0b\u5b9a\u4e49\u6458\u81ea\u300a\u7b97\u6cd5\u7ade\u8d5b\u8fdb\u9636\u6307\u5357\u300b*\n\n\"\u4efb\u610f\u4e24\u6761\u8fb9\u6ca1\u6709\u516c\u5171\u7aef\u70b9\"\u7684\u8fb9\u7684\u96c6\u5408\u88ab\u79f0\u4e3a\u56fe\u7684\u4e00\u7ec4\u5339\u914d.\u5728\u4e8c\u5206\u56fe\u4e2d,\u5305\u542b\u8fb9\u6570\u6700\u591a\u7684\u4e00\u7ec4\u5339\u914d\u88ab\u79f0\u4e3a\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d.\n\n\u5bf9\u4e8e\u4efb\u610f\u4e00\u7ec4\u5339\u914d$S$($S$\u662f\u8fb9\u96c6),\u5c5e\u4e8e$S$\u7684\u8fb9\u88ab\u79f0\u4e3a\"\u5339\u914d\u8fb9\",\u4e0d\u5c5e\u4e8e$S$\u7684\u8fb9\u88ab\u79f0\u4e3a\"\u975e\u5339\u914d\u8fb9\".\u5339\u914d\u8fb9\u7684\u7aef\u70b9\u88ab\u79f0\u4e3a\"\u5339\u914d\u70b9\",\u5176\u4ed6\u7ed3\u70b9\u88ab\u79f0\u4e3a\"\u5339\u914d\u70b9\".\u5982\u679c\u4e8c\u5206\u56fe\u4e2d\u5b58\u5728\u4e00\u6761\u8fde\u63a5\u4e24\u4e2a\u975e\u5339\u914d\u70b9\u7684\u8def\u5f84$path$,\u4f7f\u5f97\u975e\u5339\u914d\u8fb9\u4e0e\u5339\u914d\u8fb9\u5728$path$\u4e0a\u4ea4\u9519\u51fa\u73b0,\u90a3\u4e48\u79f0$path$\u662f\u5339\u914d$S$\u7684\u589e\u5e7f\u8def,\u4e5f\u79f0\u4ea4\u9519\u8def.\n\n\u6709\u5982\u4e0b\u5b9a\u7406:\n\n>\u4e8c\u5206\u56fe\u7684\u4e00\u7ec4\u5339\u914d$S$\u662f\u6700\u5927\u5339\u914d,\u5f53\u4e14\u4ec5\u5f53\u56fe\u4e2d\u4e0d\u5b58\u5728$S$\u7684\u589e\u5e7f\u8def.\n\n\u914d\u56fe\u5982\u4e0b:\n\n![\u914d\u56fe2.png](https://i.loli.net/2019/07/01/5d1981bb0de1144262.png)\n\n![\u914d\u56fe3.png](https://i.loli.net/2019/07/01/5d1981c16f34e79126.png)\n\n![\u914d\u56fe4.png](https://i.loli.net/2019/07/01/5d1981c18400350800.png)\n\n\u5982\u56fe,\u56fe2,\u56fe3(\u8bf7\u4e0d\u8981\u8054\u60f3\u5230\u56fe\u6ce2\u8036\u592b\u8bbe\u8ba1\u5c40)\u4e2d\u7ea2\u8272\u7684\u8fb9\u5c31\u662f\u56fe1\u7684\u5339\u914d,\u56fe3\u4e2d\u7ea2\u8272\u7684\u8fb9\u4e3a\u56fe1\u7684\u6700\u5927\u5339\u914d.\n\n##\u5308\u7259\u5229\u7b97\u6cd5(\u589e\u5e7f\u8def\u7b97\u6cd5)\n\n\u5308\u7259\u5229\u7b97\u6cd5,\u53c8\u79f0\u589e\u5e7f\u8def\u7b97\u6cd5,\u7528\u4e8e\u8ba1\u7b97\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d.\n\n###\u5f15\u5165\n\n\u72ec\u7acb\u56e2\u6218\u58eb\u4eec\u8981\u53d1\u67aa,\u6bcf\u4e2a\u6218\u58eb\u90fd\u6709\u81ea\u5df1\u60f3\u8981\u7684\u67aa.\u5173\u7cfb\u5982\u4e0b:\n\n![\u914d\u56fe5.png](https://i.loli.net/2019/07/01/5d198eed1c5b339808.png)\n\n\u5f00\u59cb\u5206\u914d:\n\n![\u914d\u56fe6.png](https://i.loli.net/2019/07/01/5d198eedaa4fc86330.png)\n\n\u653f\u59d4\u60f3\u8981\u6377\u514b\u5f0f\u8f7b\u673a\u67aa,\u4e8e\u662f\u628a\u6377\u514b\u5f0f\u8f7b\u673a\u67aa\u5206\u7ed9\u4e86\u653f\u59d4.\n\n![\u914d\u56fe7.png](https://i.loli.net/2019/07/01/5d198eed9946118360.png)\n\n\u56e2\u957f\u8fd9\u65f6\u8bf4\u9053:\"\u597d\u4f60\u4ed6\u5a18\u7684\u8d75\u653f\u59d4,\u5f53\u51e0\u5929\u653f\u59d4\u8fd8\u8e6d\u9f3b\u5b50\u4e0a\u8138\u4e86\u662f\u5427?\u8001\u5b50\u5c31\u8981\u7528\u6377\u514b\u5f0f\u8f7b\u673a\u67aa.\"\n\n\u653f\u59d4\u60f3\u4e86\u60f3,\u53cd\u6b63\u54b1\u767e\u91cc\u8d75\u521a\u7528\u6c49\u9633\u9020\u4e5f\u987a\u624b,\u987a\u624b\u62ff\u6765\u4e86\u6c49\u9633\u9020,\u8f7b\u673a\u67aa\u7ed9\u4e86\u56e2\u957f.\n\n![\u914d\u56fe8.png](https://i.loli.net/2019/07/01/5d198eed46c0b65755.png)\n\n\u4f46\u662f\u548c\u5c1a\u4e5f\u60f3\u7528\u8fd9\u628a\u6c49\u9633\u9020,\u4e8e\u662f\u627e\u653f\u59d4\u5546\u91cf.\n\n\u653f\u59d4:\"\u5173\u5fc3\u5c0f\u540c\u5fd7\u662f\u54b1\u5f53\u653f\u59d4\u7684\u804c\u8d23,\u8981\u4e0d\u8fd9\u6837,\u8fd9\u628a\u6c49\u9633\u9020\u5c31\u62ff\u7ed9\u4f60\u7528,\u6211\u53bb\u627e\u56e2\u957f\u5546\u91cf\u7528\u8f7b\u673a\u67aa.\"\n\n\u56e2\u957f:\"\u600e\u4e48?\u53c8\u6253\u8001\u5b50\u7684\u8f7b\u673a\u67aa\u7684\u4e3b\u610f?\u6211\u770b\u4f60\u548c\u8001\u5b50\u8fd8\u6709\u51e0\u5929\u4ea4\u60c5,\u8f7b\u673a\u67aa\u7ed9\u4f60\u7528,\u884c\u4e86\u5427,\u8bfb\u4e66\u4eba\u8fd8\u771f\u4ed6\u5a18\u7684\u4e0d\u8bb2\u7406.\u8fd9\u51e0\u5929\u95f2\u7740\u6ca1\u4e8b,\u4e8c\u8425\u7684\u90a3\u53f0\u610f\u5927\u5229\u70ae,\u8001\u5b50\u62ff\u6765\u73a9\u51e0\u5929.\"\n\n\u4e8e\u662f\u56e2\u957f\u4ece\u4e8c\u8425\u62d6\u6765\u4e86\u610f\u5927\u5229\u70ae,\u653f\u59d4\u7528\u4e0a\u4e86\u8f7b\u673a\u67aa,\u548c\u5c1a\u62ff\u5230\u4e86\u6c49\u9633\u9020.\n\n![\u914d\u56fe9.png](https://i.loli.net/2019/07/01/5d198eed5b56786382.png)\n\n\u4e8c\u8425\u957f\u8fd9\u5c31\u4e0d\u4e50\u610f\u4e86,\u6211\u5802\u5802\u5f20\u5927~~\u55b5~~\u5f6a,\u597d\u4e0d\u5bb9\u6613\u7f34\u83b7\u7684\u610f\u5927\u5229\u70ae,\u54ea\u662f\u4e2a\u56e2\u957f\u968f\u968f\u4fbf\u4fbf\u5c31\u80fd\u62ff\u6765\u73a9\u7684?\n\n\u4e8e\u662f\u5f20\u5927~~\u55b5~~\u5f6a\u627e\u5230\u4e86\u56e2\u957f.\n\n\u56e2\u957f:\"\u53bb\u4f60\u4ed6\u5a18\u7684\u4e8c\u8425\u957f,\u8001\u5b50\u5b98\u6bd4\u4f60\u5927,\u7528\u4f60\u7684\u70ae\u600e\u4e48\u5566?\u8001\u5b50\u628a\u70ae\u7ed9\u4f60\u4e86\u8001\u5b50\u7528\u4ec0\u4e48\u6253\u4ed7?\u4f60\u8ba9\u90a3\u5c0f\u9b3c\u5b50\u81ea\u4e2a\u5f80\u6211\u5634\u91cc\u94bb?\u6211\u770b\u4f60\u6253\u4ed7\u5929\u5929\u6454\u5e3d\u5b50,\u90a3\u9876\u4e0a\u6b21\u53bb\u8fb9\u533a\u9886\u591a\u4e86\u4e00\u9876\u5e3d\u5b50,\u4f60\u7ed9\u8001\u5b50\u62ff\u53bb\u7528.\"\n\n\u4e8e\u662f\u5f20\u5927~~\u55b5~~\u5f6a\u5206\u5230\u4e86\u4e00\u9876\u5e3d\u5b50.\n\n###\u4e3b\u4f53\u601d\u60f3\n\n\u4e0a\u9762\u7684\u8fc7\u7a0b\u5c31\u662f\u4e00\u4e2a\u6807\u51c6\u7684\u5308\u7259\u5229\u7b97\u6cd5.\n\n\u5308\u7259\u5229\u7b97\u6cd5\u7684\u601d\u60f3\u5c31\u662f\u5bfb\u627e\u589e\u5e7f\u8def,\u628a\u589e\u5e7f\u8def\u4e0a\u7684\u5339\u914d\u72b6\u6001\u5168\u90e8\u53d6\u53cd,\u5f97\u5230\u4e00\u4e2a\u66f4\u5927\u7684\u5339\u914d.\n\n\u5177\u4f53\u6765\u8bf4\u7684\u8bdd,\u53ef\u4ee5\u4ee5\u4e0a\u9762\u7684\u7b2c\u4e8c\u5e45\u56fe\u4e3e\u4f8b.\n\n\"\u674e\u56e2\u957f --> \u6377\u514b\u5f0f\u8f7b\u673a\u67aa --> \u8d75\u653f\u59d4 --> \u6c49\u9633\u9020\",\u8fd9\u662f\u5339\u914d\"\u8d75\u653f\u59d4 --> \u6377\u514b\u5f0f\u8f7b\u673a\u67aa\"\u7684\u4e00\u6761\u589e\u5e7f\u8def,\u5176\u4e2d\"\u674e\u56e2\u957f\"\u548c\"\u6c49\u9633\u9020\"\u4e3a\u589e\u5e7f\u8def\u8fde\u63a5\u7684\u4e24\u4e2a\u975e\u5339\u914d\u70b9.\u540c\u5fd7\u4eec\u628a\u8fd9\u6761\u589e\u5e7f\u8def\u4e0a\u7684\u6240\u6709\u8fb9\u7684\u5339\u914d\u72b6\u6001\u53d6\u53cd,\u539f\u6765\u653f\u59d4\u62ff\u5230\u4e86\u8f7b\u673a\u67aa,\u53d6\u53cd\u4e4b\u540e\u53d8\u4e3a\u6ca1\u6709\u62ff\u5230,\u539f\u6765\u56e2\u957f\u6ca1\u6709\u62ff\u5230\u8f7b\u673a\u67aa,\u53d6\u53cd\u540e\u62ff\u5230\u4e86\u8f7b\u673a\u67aa,\u539f\u6765\u653f\u59d4\u6ca1\u6709\u62ff\u5230\u6c49\u9633\u9020,\u53d6\u53cd\u540e\u62ff\u5230\u4e86\u6c49\u9633\u9020.\n\n\u8fd9\u6837\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u66f4\u5927\u7684\u5339\u914d.\n\n\u6211\u4eec\u91cd\u590d\u7b2c\u4e8c\u6b65,\u76f4\u5230\u56fe\u4e2d\u4e0d\u5b58\u5728\u589e\u5e7f\u8def,\u5c31\u5f97\u5230\u4e86\u6700\u5927\u5339\u914d.\n\n\u56e0\u4e3a\u8be5\u7b97\u6cd5\u6700\u591a\u904d\u5386\u6574\u4e2a\u4e8c\u5206\u56fe\u4e00\u6b21,\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(nm)$.\n\n###\u5177\u4f53\u5b9e\u73b0\n\n1. \u8bbe$S$\u4e3a\u7a7a\u96c6,\u5373\u6240\u6709\u7684\u8fb9\u90fd\u662f\u975e\u5339\u914d\u8fb9.\n\n2. \u5bfb\u627e\u589e\u5e7f\u8def,\u628a\u8def\u5f84\u4e0a\u7684\u8fb9\u5168\u90e8\u53d6\u53cd,\u5f97\u5230\u4e00\u4e2a\u66f4\u5927\u7684\u5339\u914d$S`$\n\n3. \u91cd\u590d\u7b2c\u4e8c\u90e8,\u76f4\u5230\u56fe\u4e2d\u4e0d\u5b58\u5728\u589e\u5e7f\u8def.\n\n\u5173\u4e8e\u5177\u4f53\u600e\u4e48\u5bfb\u627e\u589e\u5e7f\u8def,\u600e\u4e48\u7ed9\u8def\u5f84\u53d6\u53cd,\u6211\u8bb2\u5728\u4ee3\u7801\u4e2d\u89e3\u91ca.\n\n[*\u6a21\u677f\u9898*](https://www.luogu.org/problemnew/show/P3386)\n\n**\u4ee3\u7801:**\n\n```cpp\n\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n\nusing namespace std;\n\nstruct edge\n{\n    int to,next;\n}e[1000010];\n\nint n,m,e_,size,ans;\nint head[10010],match[10010];\nbool flag[10010];\n\ninline void EdgeAdd(int,int);\ninline void Hungary();\ninline bool find(int);\n\nint main()\n{\n    memset(head,-1,sizeof(head));\n    scanf(\"%d%d%d\",&n,&m,&e_);\n    for(int _=1;_<=e_;_++)\n    {\n        int from,to;\n        scanf(\"%d%d\",&from,&to);\n        if(from>n||to>m||from>m||to>n)\n        {\n            continue;\n        }\n        EdgeAdd(from,to);\n    }\n    Hungary();\n    printf(\"%d\\n\",ans);\nreturn 0;\n}\n\ninline void EdgeAdd(int from,int to)\n{\n    e[++size].to=to;\n    e[size].next=head[from];\n    head[from]=size;\n}\n\ninline void Hungary()\n{\n    for(int _=1;_<=n;_++)//\u679a\u4e3e\u5de6\u96c6\u4e2d\u7684\u7ed3\u70b9\n    {\n        memset(flag,false,sizeof(flag));\n        if(find(_)==true)//\u5b58\u5728\u4e00\u6761\u589e\u5e7f\u8def\n        {\n            ans++;\n        }\n    }\n}\n\ninline bool find(int from)\n{\n    for(int _=head[from];_!=-1;_=e[_].next)//\u904d\u5386\u8be5\u7ed3\u70b9\u7684\u8def\u5f84\n    {\n        int to=e[_].to;\n        if(flag[to]==false)//flag\u6570\u7ec4\u9632\u6b62\u5f80\u56de\u8d70\n        {\n            flag[to]=true;\n            if(match[to]==0||find(match[to])==true)\n/*\u8fd9\u91cc\u6709\u4e24\u79cd\u60c5\u51b5,\u4e00\u79cd\u662f\u53f3\u96c6\u4e2d\u7684\u70b9\u6ca1\u6709\u88ab\u9009,\u90a3\u4e48\u5b83\u4eec\u4fe9\u6784\u6210\u957f\u5ea6\u4e3a1\u7684\u589e\u5e7f\u8def.\n\u53e6\u4e00\u79cd\u662f\u53f3\u96c6\u4e2d\u7684\u70b9\u5df2\u7ecf\u88ab\u9009\u4e86,\u4f46\u662f\u5f80\u4e0b\u9012\u5f52\u53ef\u4ee5\u53d1\u73b0\u9009\u5b83\u7684\u70b9\u53ef\u4ee5\u6709\u5176\u4ed6\u7684\u9009\u62e9,\u8fd9\u6837\u6784\u6210\u4e86\u4e00\u6761\u4e24\u7aef\u90fd\u662f\u975e\u5339\u914d\u70b9\u7684\u8def\u5f84,\u5373\u589e\u5e7f\u8def.\n*/\n            {\n                match[to]=from;//\u66f4\u6539\u5339\u914d\n                return true;\n            }\n        }\n    }\nreturn false;\n}\n\n```\n",
        "postTime": 1561959020,
        "uid": 54986,
        "name": "lemir3",
        "ccfLevel": 5,
        "title": "\u9ed1\u6d77\u9020\u8239\u5382\u4e8c\u5206\u56fe\u5339\u914d\u9879\u76ee\u8bd5\u9a8c\u987a\u5229\u8fdb\u884c"
    },
    {
        "content": "\u54b3\u54b3\u6211\u5341\u5206\u4e0d\u539a\u9053\u7684\u7528\u7f51\u7edc\u6d41\u8dd1\u4e86\u4e00\u4e0b\u4e8c\u5206\u56fe\u5339\u914d\n\n~~\u5e94\u8be5\u662fNOIP2017\u524d\u6700\u540e\u4e00\u6b21\u9898\u89e3\u4e86~~\n\n\u7f51\u7edc\u6700\u5927\u6d41\u7684\u6838\u5fc3\u5176\u5b9e\u662f\u5efa\u6a21\uff0c\u8fd9\u9053\u9898\u4e2d\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u4e00\u6761\u8fb9\u7684\u6d41\u91cf\u770b\u505a1\uff0c\u7136\u540e\u628a0\u70b9\u4f5c\u4e3a\u6e90\u70b9\uff0cn+m+1\u70b9\u4f5c\u4e3a\u6c47\u70b9\uff0c\u5927\u6982\u770b\u8d77\u6765\u5982\u4e0b\u56fe\u6240\u793a\n\n ![](https://cdn.luogu.com.cn/upload/pic/10676.png) \n\n\uff08\u7ea2\u8272\u7684\u8868\u793a\u65b0\u5efa\u7684\uff0c\u9ed1\u8272\u7684\u8868\u793a\u539f\u6765\u7684\u56fe\uff09\n\n\u7136\u540e\u6211\u4eec\u7528\u7f51\u7edc\u6700\u5927\u6d41\u8dd1\u4e00\u4e0b\uff0c\u6700\u7ec8\u6c47\u5165\u6c47\u70b9\u7684\u6d41\u91cf\u5176\u5b9e\u5c31\u662f\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\u3010\u53ef\u4ee5\u601d\u8003\u4e00\u4e0b\u54e6\uff0c\u7b54\u6848\u5728\u4ee3\u7801\u6700\u540e\u3011\n\n\n\n\n\n\n\n    \n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\n#define inf 2147483647\nusing namespace std;\nstruct Edge\n{\n    int to;\n    int s;\n    int last;\n}e[2001000];\nint dep[4100],in[4100],cnt;\nint s=0,t;\nvoid addedge(int x,int y,int z)\n{\n    e[++cnt].last=in[x];\n    e[cnt].s=z;\n    e[cnt].to=y;\n    in[x]=cnt;\n}\nbool bfs()\n{\n    memset(dep,0,sizeof(dep));\n    queue<int> que;\n    que.push(s);dep[s]=1;\n    while(!que.empty())\n    {\n        int u=que.front();que.pop();\n        for(int i=in[u];i>=0;i=e[i].last)\n        {\n            if(!dep[e[i].to]&&e[i].s>0)\n            {\n                dep[e[i].to]=dep[u]+1;\n                que.push(e[i].to);\n            }\n        }\n    }\n    if(dep[t])    return true;\n    else    return false;\n}\nint dfs(int now,int cur)\n{\n    if(now==t)    return cur;\n    for(int i=in[now];i>=0;i=e[i].last)\n    {\n        if(dep[e[i].to]==dep[now]+1&&e[i].s>0)\n        {\n            int flow=dfs(e[i].to,min(cur,e[i].s));\n            if(flow)\n            {\n                e[i].s-=flow;\n                if(i&1)    e[i+1].s+=flow;\n                else    e[i-1].s+=flow;\n                return flow;\n            }\n        }\n    }\n    return 0;\n}\nint main()\n{\n    int n,m,e,i,l,x,y,ans=0;\n    memset(in,-1,sizeof(in));\n    scanf(\"%d%d%d\",&n,&m,&e);t=n+m+1;\n    for(i=1;i<=n;i++){addedge(0,i,1);addedge(i,0,0);}\n    for(i=n+1;i<=n+m;i++){addedge(i,t,1);addedge(t,i,0);}\n    for(i=1;i<=e;i++)\n    {\n        scanf(\"%d%d\",&x,&y);if(x>n||y>m)    continue;\n        addedge(x,y+n,1);addedge(y+n,x,0);\n    }\n    while(bfs())\n    {\n        while(l=dfs(s,inf))\n            ans+=l;\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n\u3010ans\uff1a\u6bcf\u4e00\u6b21\u6709\u6d41\u91cf\u6c47\u5165\u5c31\u662f\u6210\u529f\u5339\u914d\u5566\u3011\n```",
        "postTime": 1510200421,
        "uid": 23145,
        "name": "hanyuwei",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3386 \u3010\u3010\u6a21\u677f\u3011\u4e8c\u5206\u56fe\u5339\u914d\u3011"
    },
    {
        "content": "# \u524d\u8a00\n\n**\u6765\u4e86\uff1f\u662f\u4e0d\u662f\u538c\u5026\u4e86\u5308\u7259\u5229\u548c\u7f51\u7edc\u6d41\uff1f\u4e0d\u5982\u7528\u4e00\u4e0b\u62df\u9635\u4ea4\uff1f\u5e26\u4f60\u8fdb\u5165\u4e00\u4e2aquan\u65b0\u7684\u4e16\u754c!**\n\n\u6682\u65f6\u4e0d\u7ed9\u51fa\u8bc1\u660e\uff0c\u4f60\u53ef\u4ee5\u6253\u8868\u8bc1\u660e\uff0c\u53ea\u7ed9\u51fa\u7ed3\u8bba\uff08\u8bc1\u660e\u5176\u5b9e\u53ef\u4ee5\u53c2\u80032018~~\u9e21~~\u8bad\u961f\u8bba\u6587\uff09\uff0c\u5982\u679c\u6211\u8fd8\u6ca1\u6709\u9000\u5f79\uff0c\u6211\u5c31\u4f1a\u8865\u5145\u5176\u4ed6\u5185\u5bb9\u4ee5\u53ca\u8bc1\u660e,\u53ef\u80fd\u6709\u5f88\u591a\u9519\u8bef\uff0c\u770b\u4e0d\u61c2\u7684\u5730\u65b9\u5dee\u4e0d\u591a\u5c31\u662f\u6211\u9519\u4e86\uff0c\u6b22\u8fce\u6307\u51fa\u3002\n\n\u5176\u5b9e\u4f60\u53ef\u4ee5\u6d4f\u89c8\u4e00\u4e0b\u524d\u9762\u7684\u5b9a\u4e49\uff0c\u76f4\u63a5\u8df3\u5230\u62df\u9635\u4ea4\uff0c\u4f46\u662f\u4e0d\u5efa\u8bae\uff0c\u56e0\u4e3a\u524d\u7f6e\u77e5\u8bc6\u770b\u770b\u603b\u662f\u6709\u597d\u5904\u7684\u3002\n\n# \u5c0f\u5b66\u751f\u90fd\u80fd\u770b\u61c2\u7684\u62df\u9635\u5165\u95e8\n\n## \u5b9a\u4e49\n\n\u7ed9\u51fa\u4e00\u4e2a\u4e8c\u5143\u7ec4$M$,\u8bb0\u505a$(S,I)$\uff0c\u53ef\u4ee5\u8bf4$M=(S,I)$,\u6211\u4eec\u628a\u7b2c\u4e00\u5143S\u53eb\u505a\u57fa\u7840\u96c6,\u4e3a\u4e00\u4e2a\u96c6\u5408\uff0c\u7b2c\u4e8c\u5143$I$\u53eb\u505a\u72ec\u7acb\u96c6\u7684\u96c6\u5408\uff0c\u4e5f\u662f\u4e00\u4e2a\u96c6\u5408\uff0c\u4f46\u662f\u5143\u7d20\u662fS\u7684\u5b50\u96c6\uff0c\u8fd9\u4e9b\u5143\u7d20\u88ab\u53eb\u505a\u72ec\u7acb\u96c6,\u6216\u8005\u8bf4$I\\subseteq 2^S$($2^S$\u53ebS\u7684\u5e42\u96c6\uff0c\u4e5f\u5c31\u662fS\u7684\u6240\u6709\u5b50\u96c6\u7ec4\u6210\u7684\u96c6\u5408)\uff0c\u6211\u4eec\u79f0\u8fd9\u4e2a\u4e8c\u5143\u7ec4\u53eb\u505a\u5b50\u96c6\u7cfb\u7edf\uff0c\u5982\u679c$I$\u6ee1\u8db3\u4e00\u4e0b\u4e24\u6761\u6027\u8d28\n\n1. \u9057\u4f20\u6027\uff1a\u5982\u679c$A\\in I,B\\subseteq A\\Rightarrow B\\in I$\n1. \u4ea4\u6362\u6027\uff08\u6216\u8005\u53eb\u505a\u6269\u5f20\u6027\uff09:\u5982\u679c$A,B\\in I,|A|<|B|,|B|$\u4e2d**\u5b58\u5728**\u4e00\u4e2a\u5143\u7d20$x$\uff0c\u6ee1\u8db3$A\\cup \\{x\\}\\in I$\n\n\u90a3\u4e48\u6211\u4eec\u628a\u8fd9\u6837\u7684\u4e00\u4e2a\u4e8c\u5143\u7ec4\u53eb\u505a\u62df\u9635\u3002\n\n## \u5e38\u89c1\u62df\u9635\n\n### \u5747\u5300\u62df\u9635\n\n\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u62df\u9635$M=(S,I)$,\u6ee1\u8db3$|S|=n$,$I=\\{x\\in 2^S:|x|\\leq k\\}$,\u6211\u4eec\u4e5f\u53ef\u4ee5\u628a\u8fd9\u6837\u7684\u62df\u9635\u8bb0\u505a$U_n^k$\u3002\n\n\u8bc1\u660e\u6839\u636e\u5b9a\u4e49\u663e\u7136\uff0c\u4f8b\u5982$S=\\{1,2,3,4\\}$,\u663e\u7136$|S|=4$,\u628a\u62df\u9635\u8bb0\u505a$U_4^2=\\{S,I\\}$,\u5bf9\u4e8e$I=\\{\\{\\varnothing\\},\\{1\\},\\{2\\},\\{3\\},\\{1,2\\},\\{1,3\\},\\{2,3\\}\\}$\n\n### \u56fe\u62df\u9635\n\n\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u62df\u9635$M=(S,I)$,\u5176\u4e2d$S$\u662f\u65e0\u5411\u56fe$G=(V,E)$\u7684\u8fb9\u96c6\uff0c$I$\u4e2d\u7684\u96c6\u5408\u8981\u6ee1\u8db3\u5728\u8fb9\u96c6\u56fe\u4e2d\u65e0\u73af\u3002\n\n\u5bb9\u6613\u53d1\u73b0\u5176\u5b9e$I$\u4e2d\u7684\u4e00\u4e2a\u96c6\u5408\uff0c\u5bf9\u5e94\u7684\u8fb9\uff0c\u5728$G$\u4e2d\u5c31\u662f\u4e00\u68f5\u751f\u6210\u68ee\u6797\uff0c\u8fd9\u4e0e\u540e\u9762\u7684\u6700\u5c0f\u751f\u6210\u6811\u7684\u7b97\u6cd5\u6b63\u786e\u6027\u6709\u5173\uff0c\u6ce8\u610f$G$\u4e3a\u6709\u5411\u56fe\u4e0d\u6210\u7acb\u3002\n\n### \u5339\u914d\u62df\u9635\n\n\u5b9a\u4e49:\u5bf9\u4e8e\u62df\u9635$M=(S,I)$,\u5176\u4e2d$S$\u662f\u56fe$G=(V,E)$\u7684\u70b9\u96c6\uff0c$I$\u4e2d\u7684\u96c6\u5408\u8981\u6ee1\u8db3\u56fe**\u5b58\u5728**\u4e00\u7ec4\u5339\u914d\u7684\u70b9\u96c6\u5305\u542b\u4ed6\u3002\n\n\u4e0d\u8981\u72ed\u4e49\u7684\u8ba4\u4e3a\u53ea\u6709\u4e8c\u5206\u56fe\u624d\u6709\u5339\u914d\uff0c\u4efb\u4f55\u56fe\u90fd\u6709\u5339\u914d\uff0c\u5b9a\u4e49\u4e00\u6837\uff0c\u53ea\u662f\u56fe\u7684\u7c7b\u578b\u53d8\u4e86\u3002\n\n## \u57fa\u548c\u73af\n\n### \u57fa\n\n\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u62df\u9635$M=(S,I)$,$I$\u4e2d\u6700\u5927\u7684\u72ec\u7acb\u96c6\uff0c\u6211\u4eec\u628a\u5979\u53eb\u505a\u57fa\uff0c\u5176\u5b9e\u5c31\u5bf9\u5e94\u56fe\u62df\u9635\u7684\u751f\u6210\u6811\uff0c\u5176\u5b9e\u62df\u9635\u63a8\u51fa\u7684\u6240\u6709\u6027\u8d28\uff0c\u90fd\u53ef\u4ee5\u5e94\u7528\u4e8e\u751f\u6210\u6811\u95ee\u9898\u4e0a\u3002\n\n\u6839\u636e\u751f\u6210\u6811\uff0c\u610f\u4f1a\u63a5\u4e0b\u6765\u7684\u51e0\u4e2a\u6027\u8d28\n\n1. \u4e00\u4e2a\u62df\u9635\u7684\u6240\u6709\u57fa\u5927\u5c0f\u76f8\u540c\u3002\n1. \u4efb\u610f\u4e24\u4e2a\u4e0d\u540c\u57fa$A,B$,\u5bf9\u4e8e\u4efb\u610f$y\\in A/B$\uff0c**\u5b58\u5728**$z\\in B/A$,\u6ee1\u8db3$A-\\{y\\}+\\{z\\}$\u8fd8\u662f\u57fa\uff0c\u8fd9\u4e2a\u5b9a\u7406\u662f\u6709\u540d\u5b57\u7684\uff0c\u6211\u4eec\u628a\u5b83\u53eb\u505a\u57fa\u4ea4\u6362\u5b9a\u7406\u3002\n1. \u4efb\u610f\u4e00\u4e2a\u57fa\uff0c\u52a0\u5165\u4efb\u4f55\u4e00\u4e2a\u4e0d\u5c5e\u4e8e\u5b83\u7684\u5143\u7d20\uff0c\u5f97\u5230\u7684\u96c6\u5408\u4e0d\u662f\u72ec\u7acb\u96c6\uff0c\u6839\u636e\u5b9a\u4e49\u663e\u7136\u3002\n1. \u6839\u636e\u62df\u9635\u6240\u6709\u7684\u57fa\uff0c\u5c31\u53ef\u4ee5\u751f\u6210\u6240\u6709\u7684\u72ec\u7acb\u96c6\u4e86\uff0c\u6839\u636e\u5b9a\u4e49\u6613\u77e5\u3002\n\n### \u73af\n\n\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u62df\u9635$M=(S,I)$,S\u4e2d\u6700\u5c0f\u7684\u975e\u72ec\u7acb\u96c6\uff08\u4e0d\u9700\u8981\u6211\u5b9a\u4e49\u5427\uff09\uff0c\u6211\u4eec\u628a\u5b83\u53eb\u505a\u73af\uff0c\u5176\u5b9e\u5bf9\u5e94\u56fe\u4e2d\u7684**\u7b80\u5355**\u73af\uff0c\u770b\u51e0\u4e2a\u6027\u8d28\n\n1. \u5bf9\u4e8e\u73af$X,Y$\uff0c\u5982\u679c$X\\subseteq Y$,\u5219\u6709$X=Y$\uff0c\u8fd9\u4e2a\u663e\u7136\u5427\u3002\n1. \u5bf9\u4e8e\u4e0d\u540c\u7684\u73af$X,Y$\uff0c\u5982\u679c**\u5b58\u5728**$e\\in X\\cap Y$,\u90a3\u4e48$X\\cup Y-\\{e\\}$\u4e5f\u5b58\u5728\u4e00\u4e2a\u73af\u3002\n1. $A$\u662f\u4e00\u4e2a\u57fa\uff0c\u90a3\u4e48\u5982\u679c\u5b58\u5728$e\\notin A$,\u5c31\u6709$A\\cup \\{e\\}$\u4e2d\u5b58\u5728\u4e00\u4e2a\u552f\u4e00\u7684\u73af\uff0c\u5176\u5b9e\u5c31\u662f\u57fa\u73af\u6811\u3002\n1. \u4e0d\u662f\u72ec\u7acb\u96c6\u7684\u96c6\u5408\u4e00\u5b9a\u5305\u542b\u4e00\u4e2a\u73af\n1. \u4efb\u4f55\u4e00\u4e2a\u72ec\u7acb\u96c6\uff0c\u90fd\u5b58\u5728\u4e00\u4e2a\u57fa\u5305\u542b\u5b83\n1. \u5982\u679c\u628a\u62df\u9635\u4e2d\u72ec\u7acb\u96c6\u7684\u5143\u7d20,\u53ea\u4fdd\u7559\u96c6\u5408\u5927\u5c0f\u5c0f\u4e8e\u7b49\u4e8e$k$\u7684\u96c6\u5408\uff0c\u90a3\u4e48\u8fd9\u8fd8\u662f\u4e00\u4e2a\u62df\u9635\u3002\n1. \u73af\u5220\u6389\u4efb\u4f55\u4e00\u4e2a\u4ed6\u5305\u542b\u7684\u5143\u7d20\uff0c\u90fd\u4f1a\u5f97\u5230\u4e00\u4e2a\u72ec\u7acb\u96c6\u3002\n\n## \u79e9\u51fd\u6570\n\n### \u5b9a\u4e49\n\n\u5bf9\u4e8e\u62df\u9635$M=(S,I)$\uff0c\u6211\u4eec\u628a\u51fd\u6570r\u53eb\u505a\u79e9\u51fd\u6570,\u5b9a\u4e49\u57df\u4e3a\u5305\u542b\u4e8e$S$\u7684\u96c6\u5408\uff0c\u4ed6\u6ee1\u8db3$r(U)=U$\u4e2d\u5305\u542b\u7684\u6700\u5927\u72ec\u7acb\u96c6\u5927\u5c0f\u3002\n\n\u5176\u5b9e\u8fd8\u5bf9\u5e94\u4e00\u4e2a\u6982\u5ff5\uff0c\u53eb\u505a\u62df\u9635\u7684\u79e9\uff0c\u5176\u5b9e\u5c31\u662f\u62df\u9635\u7684\u6700\u5927\u72ec\u7acb\u96c6\u5927\u5c0f\uff0c\u4e5f\u5c31\u662f\u62df\u9635\u57fa\u7684\u5927\u5c0f\u3002\n\n### \u6027\u8d28\n\n1. \u6709\u754c\u6027\uff1a$r(U)\\in[0,|U|]$\n1. \u5355\u8c03\u6027\uff1a$A\\subseteq B,$\u6709$r(A)\\leq r(B)$\uff0c\u6211\u4e5f\u628a\u5b83\u53eb\u505a\u5305\u542b\u9012\u589e\n1. \u6b21\u6a21\u6027\uff1a$r(A)+r(B)\\geq r(A\\cap B)+r(A\\cup B)$,\u8fd9\u4e2a\u8981\u9760\u8bb0\u4e86\n\n### \u7528\u9014\n\n\u5982\u679c\u5bf9\u4e8e\u4e00\u4e2a\u5b50\u96c6\u7cfb\u7edf$M=(S,I)$\uff0c\u5b9a\u4e49\u57df\u4e3a$S$\u7684\u5b50\u96c6\u7684\u4e00\u4e2a\u51fd\u6570$r$,$r(U)$\u4e3a\u5728$U$\u4e2d\u5305\u542b\u7684\u6700\u5927\u7684\u5728$I$\u4e2d\u7684\u96c6\u5408,\u8fd9\u4e2a\u51fd\u6570\u6ee1\u8db3\u79e9\u51fd\u6570\u7684\u4e09\u6761\u6027\u8d28\uff0c\u90a3\u4e48$M$\u4e3a\u62df\u9635\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u6210\u529f\u5730\u4ee3\u6570\u5316\u5730\u5b9a\u4e49\u4e86\u62df\u9635\u3002\n\n## \u62df\u9635\u4e0a\u7684\u6700\u4f18\u5316\u95ee\u9898\n\n\u8fd9\u4e2a\u662f\u4e00\u4e2a\u5927\u5bb6\u5f88\u5173\u6ce8\u7684\u70b9\uff0c\u7ecf\u5178\u95ee\u9898\u662f\u6c42\u4e00\u5f20\u65e0\u5411\u56fe\u7684\u6700\u5c0f\u751f\u6210\u6811\uff0c\u5bf9\u4e8e\u62df\u9635$M=(S,I)$,\u7ed9\u51fa$S$\u4e2d\u7684\u5143\u7d20$x$\u7684\u6743\u503c$w(x)$,\u6c42\u51fa$I$\u4e2d\u7684\u4e00\u4e2a\u72ec\u7acb\u96c6\uff0c\u6ee1\u8db3\u8fd9\u4e2a\u96c6\u5408\u7684\u5143\u7d20\u7684\u6743\u503c\u4e4b\u548c\u6700\u5927\uff0c\u6211\u4eec\u7ed9\u51fa\u5982\u4e0b\u7b97\u6cd5\u6d41\u7a0b\n\n1. \u6309\u7167$w$\u7684\u6743\u503c\u7ed9\u96c6\u5408\u7684\u5143\u7d20\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n2. \u4ece\u6743\u503c\u5927\u5230\u5c0f\u9009\u62e9\u5143\u7d20\uff0c\u9009\u5230\u5143\u7d20$x$\uff0c\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u786e\u5b9a\u7684\u8981\u9009\u7684\u72ec\u7acb\u96c6\u4e3a$A$,\u5982\u679c$A+\\{x\\}\\in I$\uff0c\u5219$x$\u52a0\u5165$I$\u3002\n\n\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u6700\u7ec8\u5f97\u5230\u4e00\u4e2a\u72ec\u7acb\u96c6$I$\uff0c\u5b83\u6709\u4ee5\u4e0b\u6027\u8d28\n\n1. \u4e00\u5b9a\u662f\u4e2a\u57fa\uff0c\u56fe\u62df\u9635\u4e2d\u5bf9\u5e94\u4e00\u68f5\u751f\u6210\u6811\n2. \u6743\u503c\u4e4b\u548c\u6700\u5927\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u6700\u5c0f\u751f\u6210\u6811\u5e38\u7528\u7684\u7ed3\u8bba\u6b63\u786e\u6765\u6e90\u4e4b\u4e00\n\n\u8fd9\u4e9b\u7684\u8bc1\u660e\u53ef\u4ee5\u4f7f\u7528\u6570\u5217\u6570\u5f52\uff0c\u4e0d\u8d58\u8bc9\u4e86\u3002\n\n## \u5bf9\u5076\u62df\u9635\n\n### \u5b9a\u4e49\n\n\u5bf9\u4e8e\u62df\u9635$M=(S,I),$\u5b9a\u4e49\u5979\u7684\u5bf9\u5076\u62df\u9635\u4e3a$M^*=(S,I^*)$,\u56e0\u4e3a\u6839\u636e\u4e00\u4e2a\u62df\u9635\u7684\u57fa\u5c31\u53ef\u4ee5\u5f97\u77e5\u5979\u7684\u72ec\u7acb\u96c6\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u5b9a\u4e49$I^*$,\u5bf9\u4e8e$M$\u4e2d\u7684\u4e00\u4e2a\u57fa$A$,$S/A$\u4e3a$I^*$\u7684\u4e00\u4e2a\u57fa\u3002\n\n### \u6027\u8d28\n\n1. \u5bf9\u5076\u62df\u9635\u8fd8\u662f\u4e2a\u62df\u9635\uff0c\u6ca1\u6709\u6ce8\u610f\u5230\u9700\u8981\u7ed9\u51fa\u8bc1\u660e\u5427\u3002\n1. \u79e9\u51fd\u6570$r^*(U)=|U|-r(S)+r(S/U)$\n\n## \u62df\u9635\u53d8\u6362\n\n### \u5220\u9664\n\n\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u62df\u9635$M=(S,I)$,\u5b9a\u4e49\u62df\u9635$M$\u5173\u4e8e\u96c6\u5408$Z$\u7684\u5220\u9664\u62df\u9635\u4e3a$M\\setminus Z=(S\\setminus Z,I\\setminus Z)$\uff0c\u5176\u4e2d$I\\setminus Z$\u4e3a$I$\u53ea\u4fdd\u7559\u5305\u542b\u5728$S\\setminus Z$\u7684\u72ec\u7acb\u96c6\uff0c$S\\setminus Z$\u5c31\u662f\u96c6\u5408\u8fd0\u7b97\u5f97\u5230\u7684\u96c6\u5408\uff0c\u6211\u53ef\u80fd\u5bf9\u4e8e\u96c6\u5408\u8fd0\u7b97\u7684\u5dee\u96c6\u8fd0\u7b97$\\setminus /$\u4e0d\u505a\u533a\u5206\uff0c\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u63a8\u5bfc\u662f\u4ec0\u4e48\u610f\u601d\uff0c\u800c\u62df\u9635\u4e2d\u5220\u9664\u7684\u8fd0\u7b97\u7b26\u53f7\u4e00\u5b9a\u552f\u4e00\uff0c\u63a5\u4e0b\u6765\u770b\u5c31\u660e\u767d\u4e86\u3002\n\n\u663e\u7136\u62df\u9635\u7684\u5220\u9664\uff0c\u8fd8\u662f\u4e00\u4e2a\u62df\u9635\uff0c\u5c31\u76f8\u5f53\u4e8e\u7f29\u5c0f\u4e86\u8fd9\u4e2a\u62df\u9635,\u79e9\u51fd\u6570\u9664\u4e86\u5b9a\u4e49\u57df\uff0c\u5176\u4ed6\u7684\u6ca1\u53d1\u751f\u6539\u53d8\u3002\n\n### \u6536\u7f29\n\n\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u62df\u9635$M=(S,I),$\u5b9a\u4e49\u62df\u9635$M$\u5173\u4e8e\u96c6\u5408$Z$\u7684\u6536\u7f29\u62df\u9635\u4e3a$M/Z=(M^*\\setminus Z)^*$\u3002\n\n\u8fd9\u662f\u4e00\u4e2a\u96be\u70b9\uff0c\u522b\u88ab\u5361\u4f4f\uff0c\u5b83\u7684\u5b9e\u9645\u542b\u4e49\u5c31\u662f\u5728$M$\u4e2d\u4f60\u9009\u4e86\u4e00\u4e2a\u72ec\u7acb\u96c6$A$\uff0c\u4f46\u662f\u5b83\u5f3a\u5236\u5305\u542b$Z$\u4e2d\u7684\u67d0\u4e00\u4e2a\u6700\u5927\u72ec\u7acb\u96c6$B$\uff0c$A$\u9664\u6389$B$\u7684\u90e8\u5206\u5c31\u662f$M/Z$\u7684\u72ec\u7acb\u96c6\uff0c\u4ece\u5b83\u7684\u79e9\u51fd\u6570\u53ef\u4ee5\u770b\u51fa\u6765$r'(U)=r(Z\\cup U)-r(Z)$($r$\u662f$M$\u7684\u79e9\u51fd\u6570,$r'$\u662f$M/Z$\u7684\u79e9\u51fd\u6570)\n\n### \u6781\u5c0f\u5143\n\n\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u62df\u9635$M$\uff0c\u5982\u679c\u5979\u8fdb\u884c\u4e86\u82e5\u5e72\u6b21\u5220\u9664\u6216\u8005\u6536\u7f29\u64cd\u4f5c\u7684\u5f97\u5230\u4e00\u4e2a\u62df\u9635$M'$\uff0c\u6211\u4eec\u628a$M'$\u53eb\u505a\u6781\u5c0f\u5143\u3002\n\n### ~~\u524d\u65b9\u9ad8\u80fd~~\n\n## \u62df\u9635\u7684\u4ea4\n\n~~\u4ecb\u7ecd\u4e86\u8fd9\u4e48\u591a\u524d\u7f6e\u77e5\u8bc6\uff0c\u7ec8\u4e8e\u5230\u8fbe\u6211\u4eec\u6700\u91cd\u8981\u7684\u90e8\u5206\u3002~~\n\n### \u95ed\u5408\u7b97\u5b50\n\n\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u62df\u9635$M=(S,I)$,$A$\u7684\u95ed\u5408\u7b97\u5b50\u4e3a\u4e00\u4e2a\u96c6\u5408$cl(A)\\subseteq S$,\u6ee1\u8db3\u5176\u4e2d\u4efb\u610f\u4e00\u4e2a\u5143\u7d20$x$,\u6709$r(A)=r(A\\cup \\{x\\})$\n\n\u8ba9\u6211\u4eec\u6839\u636e\u51e0\u4e2a\u6027\u8d28\u6765\u52a0\u6df1\u7406\u89e3\n\n1. \u5bf9\u4e8e\u4e24\u4e2a\u96c6\u5408$A,B\\subseteq S$,\u5982\u679c\u6709$A\\subseteq B$\uff0c\u6211\u4eec\u6709$cl(A)\\subseteq cl(B)$,\u4f60\u53ef\u4ee5\u5229\u7528\u79e9\u51fd\u6570\u7684\u6b21\u6a21\u6027\u7ed9\u51fa\u8bc1\u660e\u3002\n1. \u5bf9\u4e8e\u96c6\u5408$A\\subseteq S$,\u5982\u679c\u5b58\u5728\u4e00\u4e2a$x\\in cl(A)$\uff0c\u90a3\u4e48\u6211\u4eec\u6709$cl(A)=cl(A\\cup \\{x\\})$\n1. \u5bf9\u4e8e\u96c6\u5408$A\\subseteq S$,\u6211\u4eec\u6709$cl(A)=cl(cl(A))$\n1. \u5982\u679c\u96c6\u5408$A$\u662f\u57fa\uff0c\u90a3\u4e48\u6709$cl(A)=S$\uff0c\u5176\u5b9e\u8fd9\u8fd8\u5177\u6709\u5145\u8981\u6027\n1. \u5982\u679c\u96c6\u5408$A$\u662f\u73af\uff0c\u5bf9\u4e8e$A$\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u5143\u7d20$x$\u6765\u8bf4\uff0c\u6211\u4eec\u6709$x\\in cl(A-\\{x\\}),$\u4e5f\u5c31\u662f$cl(A)=cl(A-\\{x\\})$\n\n\u5176\u5b9e\u6839\u636e\u4ee5\u4e0a\u6027\u8d28\uff0c\u6211\u4eec\u4e0d\u96be\u603b\u7ed3\u51fa\uff0c$cl(A)$\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u6781\u5927\u96c6\u5408\uff0c\u6ee1\u8db3\u5b83\u5e76\u4e0a\u4efb\u4f55\u4e00\u4e2a\u4e0d\u5728\u5176\u4e2d\u7684\u5143\u7d20\uff0c\u90fd\u4f1a\u6539\u53d8\u5b83\u7684\u79e9\u51fd\u6570\u7684\u503c\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u96c6\u5408$A$\uff0c\u4ed6\u5e76\u4e0a\u4efb\u4f55\u4e00\u4e2a\u5176\u95ed\u5408\u7b97\u5b50\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20\uff0c\u90fd\u4e0d\u4f1a\u6539\u53d8\u5176\u95ed\u5408\u7b97\u5b50\u3002\n\n### \u5f3a\u57fa\u4ea4\u6362\u5b9a\u7406\n\n~~\u4e0e\u57fa\u4ea4\u6362\u5b9a\u7406\u4e0d\u540c\uff0c\u4ed6\u66f4\u5f3a\u4e86~~\n\n\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u4e24\u4e2a\u4e0d\u540c\u7684\u57fa$A,B$,\u5bf9\u4e8e**\u4efb\u610f**\u4e00\u4e2a\u5143\u7d20$x\\in A/B$,\u90fd**\u5b58\u5728**\u4e00\u4e2a\u5143\u7d20$y\\in B/A$\uff0c\u6ee1\u8db3$A-\\{x\\}+\\{y\\}$\u662f\u57fa\uff0c\u9664\u6b64\u4e4b\u5916\uff0c$B-\\{y\\}+\\{x\\}$\u4e5f\u662f\u57fa\u3002\n\n\u8fd9\u4e2a\u8bc1\u660e\u597d\u50cf\u5f88\u96be\uff0c\u6211\u770b\u4e86\u4e00\u4e2a\u5c0f\u65f6\u624d\u770b\u61c2\uff0c\u800c\u4e14\u8fd8\u6ca1\u6709\u638c\u63e1\uff0c\u5176\u5b9e\u8d8a\u5f80\u540e\u9762\u5b66\uff0c\u8bc1\u660e\u8d8a\u96be\u3002\n\n### \u62df\u9635\u4ea4\u5b9a\u4e49\n\n\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u62df\u9635$M_1=(S,I_1),M_2=(S,I_2)$\uff0c\u6ce8\u610f\u5979\u4eec\u7684\u57fa\u7840\u96c6\u76f8\u540c\uff0c\u4e5f\u5c31\u662f\u7b2c\u4e00\u5143\u76f8\u540c\uff0c\u5b9a\u4e49\u5979\u4eec\u7684\u62df\u9635\u4ea4\u4e3a\u4e00\u4e2a\u72ec\u7acb\u96c6$I$\u6ee1\u8db3$I\\in I_1\\cap I_2$\uff0c~~\u5176\u5b9e\u5b57\u9762\u610f\u601d\uff0c\u4e0d\u7528\u5e9f\u8bdd\u3002~~\n\n### \u6700\u5c0f\u6700\u5927\u5b9a\u7406\n\n\u5b9a\u7406\uff1a\u5bf9\u4e8e\u62df\u9635$M_1=(S,I_1),M_2=(S,I_2)$\uff0c\u79e9\u51fd\u6570\u5206\u522b\u4e3a$r_1,r_2$\uff0c\u6211\u4eec\u6709$\\max_{I\\in I_1\\cap I_2}|I|\\leq min_{U\\subseteq S}(r_1(U)+r_2(S/U))$\uff0c\u5f0f\u5b50\u5de6\u8fb9\u5373\u662f\u795e\u79d8\u7684\u6700\u5927\u62df\u9635\u4ea4,\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u6700\u5927\u62df\u9635\u4ea4\u7684\u4e0a\u754c\uff0c\u4e00\u822c\u6784\u9020\u9898\u4e2d\u5f97\u5230\u4e0a\u754c\uff0c\u5c31\u4e00\u5b9a\u53ef\u4ee5\u6784\u9020\u5230\uff0c\u5176\u5b9e\u5b9e\u9645\u60c5\u51b5\u662f\u53d6\u5230\u4e86\u7b49\u53f7\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u76f4\u63a5\u7528\u8fd9\u4e2a\u5b9a\u7406\uff0c\u6c42\u51fa\u6700\u5927\u62df\u9635\u4ea4\uff0c\u4f46\u53ef\u60dc\u7684\u662f\uff0c\u5b83\u662fnp\u7684\u3002\n\n~~\u5b81\u9759\u5212\u7834\uff0c\u66b4\u96e8\u5c06\u81f3~~\n\n### \u6700\u5927\u62df\u9635\u4ea4\u7684\u7b97\u6cd5\n\n\u5fc5\u4e0d\u53ef\u5c11\u7684\u5b9a\u4e49\uff1a\n\n\u5bf9\u4e8e\u4e00\u4e2a\u62df\u9635$M=(S,I)$,\u548c\u4e00\u4e2a\u72ec\u7acb\u96c6$A\\in I$,\u6211\u4eec\u5b9a\u4e49$M$\u4e2d\u5173\u4e8e$A$\u7684\u4ea4\u6362\u56fe\u4e3a$D_M(A)$,\u4ed6\u662f\u4e00\u4e2a**\u65e0\u5411**\u4e8c\u5206\u56fe\uff0c\u70b9\u4e3a\u96c6\u5408\u4e2d\u7684\u5143\u7d20\uff0c\u662f\u8fd9\u6837\u8fde\u8fb9\u7684\uff0c\u5bf9\u4e8e$A$\u7684\u4e00\u4e2a\u5143\u7d20$x$,\u548c$S/A$\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20$y$\uff0c\u4ed6\u4eec\u6709\u8fb9\uff0c\u5f53\u4e14\u4ec5\u5f53$A-\\{x\\}+\\{y\\}$\u662f\u72ec\u7acb\u96c6\u3002\n\n\u4e00\u4e9b\u8def\u4e0a\u53ef\u80fd\u7528\u5f97\u7740\u7684\u6027\u8d28\uff1a\n\n1. \u4ee4$A,B$\u4e3a\u62df\u9635$M$\u4e2d\u7684\u4e0d\u540c\u72ec\u7acb\u96c6\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4ea4\u6362\u56fe$D_M(A)$,$A/B$\u548c$B/A$**\u5b58\u5728**\u5b8c\u7f8e\u5339\u914d\u3002\n1. \u4ee4$A$\u662f\u62df\u9635$M$\u4e2d\u7684\u72ec\u7acb\u96c6\uff0c$B$\u662f\u4e00\u4e2a\u4e0e$A$\u4e0d\u540c\u7684\u96c6\u5408\uff0c\u5982\u679c\u5728\u4ea4\u6362\u56fe$D_M(A),A/B,B/A$\u6709**\u552f\u4e00**\u7684\u5b8c\u7f8e\u5339\u914d,\u90a3\u4e48$B$\u662f\u4e00\u4e2a\u72ec\u7acb\u96c6.\n\n\u8fdb\u4e00\u6b65\u5b9a\u4e49\uff1a\n\n\u5bf9\u4e8e\u62df\u9635$M_1=(S,I_1),M_2=(S,I_2)$\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u72ec\u7acb\u96c6$A$\uff0c\u6211\u4eec\u5b9a\u4e49$A$\u5173\u4e8e$M_1,M_2$\u7684\u4ea4\u6362\u56fe\u4e3a$D_{M_1,M_2}(A),$\u4ed6\u662f\u8fd9\u6837\u4e00\u5f20**\u6709\u5411**\u4e8c\u5206\u56fe\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u5143\u7d20$x\\in A$\uff0c\u4efb\u610f\u4e00\u4e2a\u5143\u7d20$y\\in S/A$\uff0c\u5982\u679c$A-\\{x\\}+\\{y\\}\\in I_1$,\u5219\u8fde\u6709\u5411\u8fb9$(x,y)$\uff0c\u5982\u679c$A-\\{x\\}+\\{y\\}\\in I_2$\uff0c\u5219\u8fde\u6709\u5411\u8fb9$(y,x)$\u3002\n\n\u7ec8\u4e8e\u5f00\u59cb\u4e86\u7684\u7b97\u6cd5\u6d41\u7a0b\n\n1. \u521d\u59cb\u5316\u72ec\u7acb\u96c6$A$\u4e3a\u7a7a\u96c6\uff0c\u627e\u51fa\u96c6\u5408$X_1=\\{x:x\\notin A,\\{x\\}+A\\in I_1\\}$,$X_2=\\{x:x\\notin A,\\{x\\}+A\\in I_2\\}$\u3002\n1. \u6309\u7167\u5b9a\u4e49\u5efa\u597d$D_{M_1,M_2}(A)$\uff0c\u627e\u51fa\u4e00\u6761\u4ece$X_1$\u5230$X_2$\u7684**\u6700\u77ed\u8def**,\u70b9\u96c6\u8bb0\u4e3a$P$,\u90a3\u4e48\u4ee4$A=A\\triangle P$($\\triangle$\u53eb\u505a\u96c6\u5408\u7684\u5bf9\u79f0\u5dee\uff0c$A\\triangle B=A\\cup B-A\\cap B$)\uff0c\u91cd\u590d\u6267\u884c\u6b65\u9aa42,\u5982\u679c\u6ca1\u627e\u5230\u5c31\u9000\u51fa\u7a0b\u5e8f\uff0c\u5f97\u5230\u7684$A$\u4e3a\u6240\u6c42\u3002\n3. \u9664\u6b64\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4ece\u6700\u540e\u7684\u56fe\u4e2d\u627e\u5230\u4e00\u4e2a\u96c6\u5408$U=\\{x:x\\notin X_1,X_2,x\\text{\u51fa\u53d1\u53ef\u4ee5\u5230\u8fbe}X_2\\},$\u8fd9\u5c31\u662f\u6700\u5927\u6700\u5c0f\u5b9a\u7406\uff0c\u53d6\u5230\u6700\u5c0f\u503c\u7684\u90a3\u4e2a\u96c6\u5408$U$\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(r^2n)$($n$\u662f\u96c6\u5408\u5927\u5c0f\uff0c$r$\u662f\u4e24\u4e2a\u62df\u9635\u7684\u79e9\u7684\u6700\u5927\u503c)\n\n### \u5173\u4e8e\u4e8c\u5206\u56fe\u5339\u914d\n\n\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u505a\uff0c\u8bbe\u62df\u9635$M_1=(S,I_1)$,\u5176\u4e2d$S$\u4e3a\u4e8c\u5206\u56fe\u7684\u8fb9\u96c6\uff0c$I_1$\u4e2d\u72ec\u7acb\u96c6\u8981\u6c42\u662f\uff0c\u8fd9\u4e9b\u8fb9\u4f7f\u5f97\u5de6\u90e8\u70b9\u5ea6\u6570\u5c0f\u4e8e\u7b49\u4e8e1,\u540c\u6837\u5730\u5b9a\u4e49\u62df\u9635$M_2=(S,I_2)$,$I_2$\u6ee1\u8db3\u53f3\u90e8\u70b9\u5ea6\u6570\u5c0f\u4e8e\u7b49\u4e8e1,\u8fd9\u6837\u6211\u4eec\u6c42\u62df\u9635$M_1,M_2$\u7684\u4ea4\uff0c\u5c31\u662f\u6211\u4eec\u6240\u8981\u7684\u6700\u5927\u5339\u914d\u3002\n\n\u8bdd\u5916\u97f3\uff1a\u5f53\u6211\u542c\u5230\u8fd9\u4e2a\u6d88\u606f\u7684\u65f6\u5019\uff0c\u6211\u9707\u60ca\u52a0\u7edd\u671b\u4e86\uff0c\u5c31\u662f\u6211\u5b66\u4e86\u8fd9\u4e48\u4e45\u7684\u62df\u9635\uff0c\u7ed3\u679c\u6c42\u4e8c\u5206\u56fe\u7adf\u7136\u662f$O(n^4)$\uff0c\u4f46\u662f\u6211\u60f3\uff0c\u8fd9\u5e76\u4e0d\u59a8\u788d\u6211\u4eec\u5bf9\u5979\u7684\u7814\u7a76\u548c\u559c\u7231\uff0c~~\u6bd5\u7adf\uff0c\u5979\u8fd8\u53ef\u4ee5\u89e3\u51b3\u4e0d\u5c11\u6bd2\u7624\u9898\u76ee~~,\u6211\u8ba4\u4e3aOI\u4e2d\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4f18\u52a3\u7684\u6bd4\u8f83\uff0c\u5b9e\u5728\u662f\u6709\u70b9\u592a\u529f\u5229\u5316\uff0c\u4f24\u4e86\u4e00\u4e9b\u4f18\u79c0\u7b97\u6cd5\u7684\u611f\u60c5\uff0c\u6211\u8ba4\u4e3a\u6211\u4eec\u4e0d\u80fd\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u8bc4\u5224\u7b97\u6cd5\u7684\u597d\u574f\u3002\n\n\u63a5\u4e0b\u6765\u7ed9\u51fa\u4ee3\u7801\u5b9e\u73b0\uff0c\u4f46\u662f\u5b83\u5728[uoj](http://uoj.ac/problem/78)\u4e0a\u53ef\u4ee5~~\u5361~~\u8fc7,**\u6211\u5f3a\u70c8\u5efa\u8baeluogu\u52a0\u5f31\u672c\u9898\u6570\u636e\uff0c\u653e\u62df\u9635\u4ea4\u8fc7\uff0c\u6211\u4eec\u8ffd\u6c42\u7684\u4e0d\u662f\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u800c\u662f\u8ffd\u6c42\u7b97\u6cd5\u7684\u7f8e\u4e3d**\uff0c~~\u53e6\u5916\u522b\u5728uoj\u4e0a\u628a\u6211hack\u4e86~~\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#define il inline\n#define ri register\n#define Size 2050\nusing namespace std;\nstruct edge{\n    int u,v;\n}E[Size*Size];\nstruct point{\n    int next,to;\n}ar[50000000];\nbool ma[Size*Size],L[Size],R[Size];\nint head[Size*Size],at,X[Size*Size],xt,T[Size*Size],\n    TL,TR,pre[Size*Size],dis[Size*Size],po[Size];\nil void read(int&),link(int,int);\nint main(){\n    int n,m,e;\n    read(n),read(m),read(e);\n    for(int i(1);i<=e;++i)\n\tread(E[i].u),read(E[i].v);\n    while(true){\n\tmemset(L,0,n+1<<2),memset(R,0,n+1<<2);\n\tmemset(dis,-1,e+1<<2),memset(pre,0,e+1<<2);\n\tmemset(head,xt=TL=TR=at=0,e+1<<2);\n\tfor(int i(1);i<=e;++i)\n\t    if(ma[i])L[E[i].u]=R[E[i].v]=1;\n\tfor(int i(1);i<=e;++i)\n\t    if(!L[E[i].u]&&!R[E[i].v])\n\t\tma[i]=L[E[i].u]=R[E[i].v]=1;\n\tfor(int i(1);i<=e;++i){if(ma[i])continue;\n\t    if(!L[E[i].u])dis[T[++TR]=i]=0;\n\t    if(!R[E[i].v])X[++xt]=i;\n\t}for(int i(1),j;i<=e;++i)\n\t    if(ma[i]){\n\t\tL[E[i].u]=R[E[i].v]=0;\n\t\tfor(j=1;j<=e;++j){\n\t\t    if(ma[j])continue;\n\t\t    if(!L[E[j].u])link(i,j);\n\t\t    if(!R[E[j].v])link(j,i);\n\t\t}L[E[i].u]=R[E[i].v]=1;\n\t    }\n\twhile(TL++<TR)\n\t    for(int i(head[T[TL]]);i;i=ar[i].next){\n\t\tif(~dis[ar[i].to])continue;\n\t\tdis[ar[i].to]=dis[T[TL]]+1;\n\t\tpre[ar[i].to]=T[TL],T[++TR]=ar[i].to;\n\t    }int des(0);\n\tfor(int i(1);i<=xt;++i)if(~dis[X[i]])if(!des||dis[X[i]]<dis[des])des=X[i];\n\tif(!des)break;while(des)(ma[des]^=1),des=pre[des];\n    }int ans(0);for(int i(1);i<=e;++i)if(ma[i])++ans,po[E[i].u]=E[i].v;\n    printf(\"%d\\n\",ans);for(int i(1);i<=n;++i)printf(\"%d \",po[i]);\n    return 0;\n}\nil void link(int u,int v){\n    ar[++at]={head[u],v},head[u]=at;\n}\nil void read(int&x){\n    x^=x;ri char c;while(c=getchar(),c<'0'||c>'9');\n    while(c>='0'&&c<='9')x=(x<<1)+(x<<3)+(c^48),c=getchar();\n}\n\n\n```\n\n~~\u62df\u9635\u57fa\u672c\u4e0a\u4f60\u8ba4\u8bc6\u4e86\uff0c\u63a5\u4e0b\u662f\u4e00\u4e9b\u6269\u5c55\u5185\u5bb9~~\n\n\u5915\u8f89\u6d12\u6ee1\u64cd\u573a,\u79cb\u5343\u4e0a\u88d9\u6446\u98d8\u98d8\uff0c\u8c46\u853b\u5e74\u534e\u7684\u62df\u9635,\u4e0e\u4f60\uff0c\u6545\u4e8b\u624d\u521a\u521a\u5f00\u59cb\u3002\n\n### \u5e26\u6743\u62df\u9635\u4ea4\n\n~~\u8fd9\u4e2a\u8bc1\u660e\u6211\u4e0d\u4f1a~~,\u5b9a\u4e49$w(x)$\u4e3a\u5143\u7d20x\u7684\u6743\u503c\uff0c\u6211\u4eec\u7b49\u4e8e\u6c42\u51fa\u62df\u9635$M_1,M_2$\u7684\u4ea4\uff0c\u4f7f\u5176\u5305\u542b\u7684\u6743\u503c\u4e4b\u548c\u6700\u5927\uff0c\u53ea\u9700\u8981\u7ed9\u6211\u4eec\u6c42\u62df\u9635\u4ea4\u505a\u4e00\u4e9b~~\u5c0f\u5c0f\u7684~~\u4fee\u6539\uff0c\u5728\u4e8c\u5206\u56fe\u4e0a\u8bbe\u7acb\u70b9\u6743$f(x)=\\begin{cases}w(x)x\\in A/S\\\\-w(x)x\\in A\\end{cases}$,$A$\u662f\u6240\u6c42\u62df\u9635\u4ea4,\u627e\u7684\u8def\u5f84$P$,\u7b2c\u4e00\u5173\u952e\u5b57\u662f\u8def\u5f84\u7684\u70b9\u6743\u6700\u5927\uff0c\u7136\u540e\u624d\u662f\u957f\u5ea6\u6700\u77ed\u3002\n\n# \u5c3e\u58f0\n\n~~\u54c8\u54c8\uff0c\u8fd8\u662f\u628a\u4f60\u9a97\u6765\u5b66\u4e60\u62df\u9635\u4e86~~,\u5176\u5b9e\u5b66\u8fd9\u4e2a\u4e1c\u897f\u662f\u4f1a\u9000\u5f79\u7684\uff0c\u5c24\u5176\u662f\u50cf\u6211\u73b0\u5728\u8fd9\u4e2a\u5883\u9047\uff0c\u6c34\u5e73\u4e0d\u9ad8\uff0c\u65f6\u95f4\u53c8\u4e0d\u591a\u4e86\uff0c\u4eba\u751f\u5dee\u4e0d\u591a\u5230\u4e86\u5c3d\u5934\uff0c\u4f46\u662f\u53c8\u548b\u7684\u4e86\uff0c\u5bd3\u5f62\u5b87\u5185\u590d\u51e0\u65f6\uff0c\u904f\u4e0d\u59d4\u5fc3\u4efb\u53bb\u7559?~~\u6211\u6ca1\u6709\u80cc\u9519\u5427~~\uff1f\u66b4\u96e8\u5c06\u81f3\uff0c\u66f4\u5c06\u7825\u783a\u524d\u884c\uff0c~~\u7b49\u7740\u6211\u9000\u5f79\u7684\u597d\u6d88\u606f\u5427~~\u3002",
        "postTime": 1575072044,
        "uid": 248179,
        "name": "yybakioi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3386 \u3010\u3010\u6a21\u677f\u3011\u4e8c\u5206\u56fe\u5339\u914d\u3011"
    },
    {
        "content": "\u4e8c\u5206\u56fe\u4ee5\u524d\u7528\u5308\u7259\u5229\u5199\u8fc7\uff0c\u5b66\u4e86\u7f51\u7edc\u6d41\u4e4b\u540e\u53d1\u73b0\u597d\u50cf\u6240\u6709\u4e8c\u5206\u56fe\u7684\u9898\u90fd\u53ef\u4ee5\u7528\u7f51\u7edc\u6d41\u5199\uff0c\u4e8e\u662f\u5c31\u6765\u5199\u4e00\u53d1\n\n\u6570\u636e\u8303\u56f4\u5b9e\u5728\u662f\u5751\uff0c\u53ea\u7ed9\u4e86n\u548cm\u7684\u8303\u56f4\uff0c\u6ca1\u7ed9e\u7684\u8303\u56f4\u3002\u7ed3\u679c\u6211BT\u7684\u8c03\u4e86\u4e00\u4e0b\u5348\uff0c\u540e\u9762\u4e0b\u8f7d\u6570\u636e\u624d\u77e5\u9053e\u5230\u4e861e6\u7684\u8303\u56f4\u3002\u6211\u524d\u5411\u661f\u5f00\u52301e7\u5c31\u8fc7\u4e86\n\n\u6ca1\u52a0\u4f18\u5316\u7684dinic\u5e38\u6570\u6bd4\u5308\u7259\u5229\u5927\u4e00\u4e9b\uff0c\u4f46\u662f\u52a0\u4e86\u4f18\u5316\u540e\u540a\u6253\u5308\u7259\u5229\u3002\u3002\n\n\u5176\u5b9e\u7528\u7f51\u7edc\u6d41\u5199\u4e8c\u5206\u56fe\u5c31\u662f\u865a\u62df\u4e00\u4e2as\u6e90\u70b9\uff0c\u865a\u62df\u4e00\u4e2at\u6c47\u70b9\uff0c\u628a\u6240\u6709\u5de6\u534a\u8fb9\u7684\u70b9\u7528\u6d41\u91cf\u4e3a1\u7684\u70b9\u8fde\u5230s\u70b9\uff0c\u628a\u53f3\u534a\u8fb9\u7684\u70b9\u7528\u6d41\u91cf\u4e3a1\u7684\u8fb9\u8fde\u5230t\u70b9\u4e0a\u3002\u7136\u540e\u518d\u8fde\u5de6\u534a\u8fb9\u548c\u53f3\u534a\u8fb9\u7684\u70b9\u3002\n\n\u4ee3\u7801\u5c31\u53d1\u4e00\u4e2a\u4e0d\u5e26\u4f18\u5316\u7684dinic\u5427\uff08\u5176\u5b9e\u662f\u6211\u4e0d\u4f1aISAP\uff09\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n#include<vector>\n#include<queue>\nusing namespace std;\nconst int maxn=1e7,inf=1e9;\nstruct edge{\n    int v,c,f,nxt;\n}e[maxn];\nint s,t,n,m,mm,cnt,h[maxn],lev[maxn];\nqueue<int> q;\nvoid add(int u,int v,int w);\nint maxflow(void);\nint bfs(void);\nint dfs(int x,int flow);\nint main(){\n    ios::sync_with_stdio(false);\n    cin>>n>>m>>mm;\n    s=0;t=n+m+1;\n    memset(h,-1,sizeof(h));\n    for(int i=1;i<=n;i++) add(s,i,1),add(i,s,0);\n    for(int i=n+1;i<=n+m;i++) add(i,t,1),add(t,i,0);\n    int u,v;\n    for(int i=1;i<=mm;i++){\n        cin>>u>>v;\n        if(v>m || u>n) continue;\n        add(u,v+n,1);add(v+n,u,0);\n    }\n    cout<<maxflow();\n    return 0;\n}\nvoid add(int x,int y,int z)\n{\n    e[cnt].nxt=h[x];\n    e[cnt].c=z;e[cnt].f=0;\n    e[cnt].v=y;\n    h[x]=cnt++;\n}\nint maxflow(void){\n    int ans=0;\n    while(bfs())\n        ans+=dfs(s,inf);\n    return ans;\n}\nint bfs(void){\n    memset(lev,0,sizeof(lev));\n    lev[s]=1;q.push(s);\n    while(!q.empty()){\n        int u=q.front();q.pop();\n        for(int i=h[u];i!=-1;i=e[i].nxt){\n            int v=e[i].v;\n            if(e[i].c>e[i].f && !lev[v]) lev[v]=lev[u]+1,q.push(v);\n        }\n    }\n    return lev[t];\n}\nint dfs(int x, int flow) {\n    int af = 0;\n    if (x == t) return flow;\n    for (int i = h[x]; i != -1; i = e[i].nxt) {\n        if (flow <= af) break;\n        int v = e[i].v;\n        if (lev[v] == lev[x] + 1) {\n            int maxf = dfs(v, min(e[i].c - e[i].f, flow - af));\n            e[i].f += maxf;\n            e[i ^ 1].f -= maxf;\n            af += maxf;\n        }\n    }\n    return af;\n}\n\n\n```cpp",
        "postTime": 1513002726,
        "uid": 30066,
        "name": "Jianuo_Zhu",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3386 \u3010\u3010\u6a21\u677f\u3011\u4e8c\u5206\u56fe\u5339\u914d\u3011"
    },
    {
        "content": "- **2020/5/4 upd\uff1a\u505a\u4e86\u4e00\u4e9b\u4fee\u6539\uff0c\u628a$vis$\u6570\u7ec4\u7684\u8be6\u7ec6\u7528\u6cd5\u5199\u4e86\u4e00\u4e0b\u3002**\n\n\u9898\u76ee\uff1a[\u4e8c\u5206\u56fe\u5339\u914d](https://www.luogu.org/problem/P3386)  \n\u4e8c\u5206\u56fe\u5339\u914d\uff0c\u5c31\u662f\u89e3\u51b3 \u4e00\u7fa4\u4eba\uff0c\u559c\u6b22\u4e00\u7c7b\u4e1c\u897f\uff0c\u7136\u540e\u6c42\u6700\u591a\u6ee1\u8db3\u80fd\u6ee1\u8db3\u591a\u5c11\u4eba\u7684\u95ee\u9898\u3002\u5f53\u7136\uff0c\u4e1c\u897f\u662f\u4e0d\u540c\u7684\uff0c\u4eba\u7684\u559c\u597d\u4e5f\u662f\u4e0d\u540c\u7684\u3002  \n\n\u8fd9\u91cc\u8bb2\u4e00\u4e0b\u5308\u7259\u5229\u7b97\u6cd5\u662f\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u3002\n\u9996\u5148\uff0c\u6211\u4eec\u753b\u4e86\u4e00\u4e2a\u56fe\uff1a  \n![](https://i.loli.net/2019/11/07/C5qebotKdRxYvZ4.png)  \n\u7136\u540e\uff0c\u6211\u4eec\u5bf9\u7b2c\u4e00\u4e2a\u4eba\u5339\u914d\uff0c\u4e5f\u5c31\u662f\u627e\u7b2c\u4e00\u4e2a\u4eba\u8981\u7684\u4e1c\u897f\uff0c\u7136\u540e\u5c31\u5f97\u5230\u4e86\u4e0b\u56fe\uff08\u7c89\u8272\u4ee3\u8868\u5339\u914d\u6210\u529f\uff0c\u4e5f\u5c31\u662f\u5de6\u8fb9\u7684\u4eba\u5f97\u5230\u4e86\u53f3\u8fb9\u7684\u4e1c\u897f\u3002\u8349\u7eff\u8272\u4ee3\u8868\u904d\u5386\u8fc7\u4f46\u672a\u6210\u529f\uff09  \n![](https://i.loli.net/2019/11/07/AnPUMuwEkOi6Im8.jpg)  \n\u7136\u540e\uff0c\u6211\u4eec\u8df3\u8fc7\u4e00\u5927\u5806\u5df2\u77e5\u7684\u64cd\u4f5c\uff0c\u5f97\u5230\u4e0b\u56fe\uff1a  \n![](https://i.loli.net/2019/11/07/7HPoM341QDZJFSw.jpg)  \n\u8fd9\u65f6\uff0c\u6211\u4eec\u53d1\u73b0\uff0c3\u53f7\u4eba\u4e5f\u60f3\u8981\u4e8c\u53f7\u7269\u54c1\uff0c\u4f46\u662f\u5df2\u7ecf\u88ab1\u53f7\u4eba\u62ff\u8d70\u4e86\u3002\u8fd9\u6539\u600e\u4e48\u529e\u529e\u5462\uff1f\u6211\u4eec\u53d1\u73b0\uff0c1\u53f7\u8fd8\u80fd\u62ff3\u53f7\u7269\u54c1\u3002\u4e8e\u662f\uff0c\u4eba1\u628a\u72692\u7ed9\u4e86\u4eba3\uff0c\u62ff\u4e86\u72693\u3002  \n![](https://i.loli.net/2019/11/07/WbXcajEq5Jhe9GD.jpg)  \n\u7136\u540e\uff0c \u5339\u914d4\u53f7\u3002\u8fd9\u65f6\u2026\u2026\u4eba2\u5360\u4e86\u72691\uff0c\u4f46\u4eba2\u4e0d\u80fd\u62ff\u522b\u7684\u4e1c\u897f\u4e86\u3002\u4e8e\u662f\u4e4e\uff0c\u4eba2\u62d2\u7edd\u59a5\u534f\uff0c~~\u4eba4\u88ab\u4eba2\u66b4\u6253\u4e86\u4e00\u987f~~\u800c\u4eba4\u5339\u914d\u4e0d\u4e86\u5176\u4ed6\u7684\uff0c\u56e0\u4e3a\u4ed6\u5bf9\u7269\u54c11\u60c5\u6709\u72ec\u949f\uff0c\u4e0d\u559c\u6b22\u522b\u7684\u4e1c\u897f\uff0cso\uff0c\u4ed6\u83ab\u5f97\u4e1c\u897f\u4e86QwQ\u3002\n\n\u73b0\u5728\uff0c\u6240\u6709\u7684\u4eba\u90fd\u5339\u914d\u5b8c\u4e86\uff0c\u80fd\u62ff\u5230\u4e1c\u897f\u7684\u6700\u591a\u6709\u4e09\u4e2a\u4eba\uff0c~~4\u53f7\u88ab\u629b\u5f03\u4e86\uff0c\u8fd8\u88ab\u66b4\u6253\u4e86\u4e00\u987f~~\uff0c\u6700\u5927\u5339\u914d\u6570\u4e5f\u5c31\u662f3\u3002  \n\n\u90a3\u4e48\uff0c\u5177\u4f53\u601d\u8def\u8bb2\u5b8c\u4e86\uff0c\u6539\u600e\u4e48\u5b9e\u73b0\u5462\uff1f  \n\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u9010\u4e2a\u679a\u4e3e\u4eba\uff0c$dfs(i)=1$\u8868\u793a\u5339\u914d\u6210\u529f\uff0c\u5426\u5219\u5931\u8d25\u3002\u7528$1$\u4e2a$chos$\u6570\u7ec4\uff0c$chos_i$\u8868\u793a\u7b2c$i$\u4e2a\u7269\u54c1\u88ab\u7b2c$chos_i$\u4e2a\u4eba\u62ff\u8d70\u4e86\uff0c$vis$\u6570\u7ec4\u7528\u6765\u5728\u5224\u65ad\u4e00\u4e2a\u4eba\u80fd\u5426\u62ff\u522b\u7684\u7269\u54c1\u65f6\u7528\u7684\u3002\u4e5f\u5c31\u662f\u505a\u4e2a\u6807\u8bb0\uff0c\u5982\u679c\u4e0d\u505a\u8fd9\u4e2a\u6807\u8bb0\uff0c\u90a3\u518d\u5224\u65ad\u8fd9\u4e2a\u4eba\u80fd\u5426\u62ff\u522b\u7684\u7269\u54c1\u65f6\u4ed6\u4e5f\u8bb8\u8fd8\u4f1a\u9009\u62e9\u8fd9\u4e2a\u7269\u54c1\u3002\uff08\u6240\u4ee5\uff0c\u6bcf\u6b21$dfs$\u90fd\u8981\u6e05\u7a7a$vis$\uff09$dfs$\u5185\u90e8\u5c31\u662f\u679a\u4e3e\u4ed6\u559c\u6b22\u7684\u6bcf\u4e00\u4e2a\u4e1c\u897f\uff0c\u5982\u679c\u8fd9\u4e2a\u4e1c\u897f\u6ca1\u4eba\u8981\u6216\u8981\u8fd9\u4e2a\u4e1c\u897f\u7684\u4eba\u53ef\u4ee5\u62ff\u522b\u7684\uff0c\u8fd9\u4e2a\u4e1c\u897f\u5c31\u5f52\u4ed6\u4e86\uff0c\u7136\u540e\u8fd4\u56de1\u3002\u5982\u679c\u904d\u5386\u5b8c\u6240\u6709\u4ed6\u60f3\u8981\u7684\u8fd8\u5f97\u4e0d\u5230\u4efb\u4f55\u4e1c\u897f\uff0c\u5c31\u8fd4\u56de0\u3002  \n**$vis$\u6570\u7ec4\u8981\u5728\u6bcf\u4e00\u6b21\u904d\u5386\u7684\u65f6\u5019\u6e05\u7a7a\u54e6**\n\n**\u4e0a\u4ee3\u7801\uff1a**\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,e,ans;//e\u662f\u8fb9\u6570\uff0cans\u662f\u7b54\u6848\nbool vis[100005];\nint chos[100005];\nstruct node\n{\n\tint tot;\n\tint dt[10000005],nxt[10000005];\n\tint hd[100005];\n\tvoid add(int x,int y)\n\t{\n\t\ttot++;\n\t\tnxt[tot]=hd[x];\n\t\thd[x]=tot;\n\t\tdt[tot]=y;\n\t\treturn ;\n\t}\n}g;//\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\nbool dfs(int x)\n{\n\tfor(int i=g.hd[x];i;i=g.nxt[i])//\u679a\u4e3e\u4ed6\u559c\u6b22\u7684\u6bcf\u4e00\u4e2a\u4e1c\u897f\n\t{\n\t\tif(vis[g.dt[i]]) continue;//\u88ab\u5224\u65ad\u8fc7\uff0c\u5c31\u76f4\u63a5\u4e0b\u4e00\u4e2a\u5faa\u73af\n\t\tvis[g.dt[i]]=1;//\u6807\u8bb0\uff0c\u5982\u679c\u4e0d\u6807\u8bb0\uff0c\u540e\u9762\u7684\u5224\u65addfs(chos[g.dt[i]])\u5c31\u6c38\u8fdc\u662f\u771f\u4e86\u3002\n\t\tif(!chos[g.dt[i]]||dfs(chos[g.dt[i]]))//\u5982\u679c\u5f53\u524d\u6ca1\u4eba\u8981\u8fd9\u4e2a\u4e1c\u897f\u6216\u8981\u8fd9\u4e2a\u4e1c\u897f\u7684\u4eba\u8fd8\u53ef\u4ee5\u62ff\u522b\u7684\uff0c\u90a3\u8fd9\u4e2a\u4e1c\u897f\u5c31\u662f\u4ed6\u7684\u4e86\n\t\t{\n\t\t\tchos[g.dt[i]]=x;//\u6807\u8bb0\u8fd9\u4e2a\u4e1c\u897f\u5f52\u4ed6\u4e86\n\t\t\treturn 1;//\u8fd4\u56detrue\u3002\n\t\t}\n\t}\n\treturn 0;//\u5230\u904d\u5386\u5b8c\u8fd8\u6ca1\u5f97\u5230\u4e1c\u897f\uff0c\u8fd4\u56defalse\n}\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&m,&e);\n\tfor(int i=1;i<=e;i++)\n\t{\n\t\tint u,v;\n\t\tscanf(\"%d%d\",&u,&v);\n\t\tif(u>n||v>m) continue;//\u9898\u76ee\u4e2d\u8bf4\u6709\u53ef\u80fd\u4f1a\u51fa\u73b0u>n\u548cv>m\u7684\u60c5\u51b5\n\t\tg.add(u,v);//\u8fde\u8fb9\n\t}\n\tfor(int i=1;i<=n;i++)//\u679a\u4e3e\u6bcf\u4e2a\u4eba\n\t{\n\t\tmemset(vis,0,sizeof(vis));//\u6e05\u7a7avis\n\t\tans+=dfs(i);//\u76f4\u63a5\u52a0\u5c31\u53ef\u4ee5\u4e86\uff0c\u56e0\u4e3abool\u4e2dtrue\u7684\u503c\u662f1\uff0cfalse\u7684\u503c\u662f0\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1573132408,
        "uid": 195331,
        "name": "Mine_King",
        "ccfLevel": 7,
        "title": "\u4e8c\u5206\u56fe\u5339\u914d"
    },
    {
        "content": "\u55ef\uff0c\u8fd9\u662f\u6a21\u677f\u9898\uff0c\u90a3\u4e48\uff0c\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u5148\u770b\u51e0\u4e2a\u540d\u8bcd\u3002\n\n**\u4e8c\u5206\u56fe**\n\n\u901a\u4fd7\u7684\u6765\u8bf4\uff0c\u5c31\u662f\u6240\u6709\u7684\u70b9\u80fd\u5206\u6210\u4e24\u4efd\uff0c\u6784\u6210\u4e24\u4e2a\u4e92\u4e0d\u76f8\u4ea4\u7684\u9876\u70b9\u96c6\u5408\uff0c\u6bcf\u6761\u8fb9\u8fde\u63a5\u8fd9\u4e24\u4e2a\u96c6\u5408\u91cc\u7684\u70b9\u3002\n\n**\u589e\u5e7f\u8def**\n\n\u5927\u6982\u6765\u8bf4\u5c31\u662f\u4e00\u6761\u8fde\u63a5\u4e24\u4e2a\u672a\u5339\u914d\u9876\u70b9\u7684\u8fb9\uff0c\u8fd9\u4e24\u9876\u70b9\u8fde\u8fb9\u540e\u5c31\u4e92\u76f8\u5339\u914d\u4e86\u3002\n\n---\n\n\u597d\u4e86\u597d\u4e86\uff0c\u6982(fei)\u5ff5(hua)\u8bb2\u5b8c\u4e86\uff0c\u5c31\u6765\u770b\u4e00\u770b\u7b97\u6cd5\u6b65\u9aa4\u5427\uff1a\n\n1. \u627e\u5230\u4e00\u4e2a\u9876\u70b9\uff0c\u679a\u4e3e\u5b83\u7684\u6bcf\u4e00\u6761\u8fb9\u3002\n\n2. \u82e5\u8be5\u6761\u8fb9\u8fde\u63a5\u7684\u53e6\u4e00\u9876\u70b9\u672a\u5339\u914d\uff0c\u76f4\u63a5\u4e0e\u8be5\u9876\u70b9\u8fde\u7ebf\uff0c\u5339\u914d\u6570+1\u3002\n\n3. \u82e5\u5bf9\u65b9\u5df2\u7ecf\u5339\u914d\uff0c\u5c1d\u8bd5\u8ba9\u90a3\u4e2a\u70b9\u5339\u914d\u7684\u70b9\u627e\u5176\u4ed6\u70b9\u8fde\u7ebf\u3002\u5982\u679c\u90a3\u4e2a\u70b9\u627e\u5230\u522b\u7684\u70b9\u8fde\u7ebf\u4e86\uff0c\u5c31\u7acb\u523b\u548c\u8fd9\u6761\u8fb9\u8fde\u63a5\u7684\u70b9\uff08\u6b64\u65f6\u5b83\u5df2\u7ecf\u88ab\u9057\u5f03\u4e86\uff09\u8fde\u7ebf\u3002\u5339\u914d\u6570+1.\n\n4. \u8fd8\u662f\u4e0d\u6210\u529f\u7684\u8bdd\uff08\u90a3\u4e2a\u70b9\u5339\u914d\u7684\u70b9\u627e\u4e0d\u5230\u522b\u7684\u70b9\u8fde\u7ebf\uff09\uff0c\u5c1d\u8bd5\u4e0b\u4e00\u6761\u8fb9\u3002\n\n5. \u5c06\u4e0a\u8ff0\u6b65\u9aa4\u8fd0\u7528\u5230\u6bcf\u4e00\u4e2a\u9876\u70b9\uff0c\u5373\u53ef\u5f97\u51fa\u6700\u5927\u5339\u914d\u3002\n\n\u8fd9\u4e2a\u8fc7\u7a0b\u6211\u4eec\u53ef\u4ee5\u9012\u5f52\u5b9e\u73b0\u3002\n\n\u8fd9\u4e2a\u6982\u5ff5\u6bd4\u8f83\u62bd\u8c61\uff0c\u6211\u4eec\u770b\u4e00\u7ec4\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/tlyorvuz.png)\n\n\u55ef\uff01\u4e00\u5f20\u6807\u51c6\u7684\u4e8c\u5206\u56fe\uff0c\u6211\u5206\u597d\u4e86AB\u7ec4\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/pfvynqvm.png)\n\n\u9996\u5148\u770bA\u7ec4\u7b2c\u4e00\u4e2a\u70b9\u7684\u7b2c\u4e00\u6761\u8fb9\uff0c\u53d1\u73b0\u5bf9\u65b9\u6ca1\u88ab\u5339\u914d\uff01\u90a3\u4e48\u76f4\u63a5\u5339\u914d\u3002\uff08\u53f3\u8fb9\u90a3\u4e2a\u6846\u662fmatch\u6570\u7ec4\uff0c\u8bb0\u5f55\u914d\u5bf9\u5173\u7cfb\u7684\uff09\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/kmw92cr6.png)\n\n\u770bA\u7ec42\uff0c\u53d1\u73b0\u5b83\u7684\u7b2c\u4e00\u6761\u8fb9\u8fde\u63a5\u7684\u70b9\u4e5f\u6ca1\u4eba\u5339\u914d\uff0c\u76f4\u63a5\u8bb0\u4e0a\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/eyqtcafy.png)\n\n\u5230\u4e86A\u7ec4\u4e09\uff0c\u8fd8\u662f\u6ca1\u95ee\u9898\uff0c\u4e00\u5207\u90fd\u633a\u987a\u5229\u7684\u54c8\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/7ptlhafq.png)\n\n\u8fd9\u4e0b\u51fa\u95ee\u9898\u4e86\uff01A\u7ec44\u7684\u7b2c\u4e00\u6761\u8fb9\u8fde\u7684B\u7ec41\u5df2\u7ecf\u548cA\u7ec41\u5339\u914d\u4e86\uff01\u80bf\u4e48\u529e\uff1f\u6839\u636e\u5148\u524d\u7684\u7b97\u6cd5\u6b65\u9aa4\uff0c\u6211\u4eec\u5e94\u8be5\u8ba9A\u7ec41\u627e\u522b\u4eba\u5339\u914d\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/2sllz8py.png)\n\n\u518d\u770bA\u7ec41\u7684\u7b2c\u4e8c\u6761\u8fb9\uff0c\u8fde\u63a5\u7684\u662fB\u7ec43\uff0c\u53d1\u73b0B\u7ec43\u4e5f\u88ab\u914d\u5bf9\u4e86\u3002\u6309\u7167\u7b97\u6cd5\u6b65\u9aa4\uff0c\u6211\u4eec\u5e94\u8be5\u8ba9A\u7ec43\u627e\u522b\u4eba\u3002\u4e0d\u8fc7A\u7ec43\u53ea\u80fd\u8fdeB\u7ec43\uff0c\u627e\u4e0d\u5230\u522b\u4eba\u3002\u6211\u4eec\u53ea\u597d\u770b\u4e0b\u4e00\u6761\u8fb9\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/zovzbapz.png)\n\n\u5230\u4e86A\u7ec41\u7684\u7b2c\u56db\u6761\u8fb9\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u8fde\u7684B\u7ec44\u6ca1\u548c\u522b\u4eba\u5339\u914d\uff01\u90a3\u5c31\u53ef\u4ee5\u76f4\u63a5\u8fde\u7ebf\u5566\uff01\n\n\u63a5\u4e0b\u6765\uff0c\u539f\u5148\u7684B\u7ec41\u5c31\u88ab\u9057\u5f03\u4e86\u3002\u800c\u8fd9\u4e00\u5207\u4e8b\u60c5\u7684\u8d77\u6e90\uff1aA\u7ec44\u5c31\u6109\u5feb\u5730\u548cB\u7ec41\u5339\u914d\u4e86\u3002\n\nemmmm\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7~~\u597d\u50cf\u6bd4\u8f83\u7b80\u5355\u54c8~~\n\n\u90a3\u4e48\u600e\u4e48\u5b58\u50a8\u4e8c\u5206\u56fe\u5462\uff1f\u4e8b\u5b9e\u4e0a\uff0c\u6211\u8fd9\u4e2a\u849f\u84bb\u53ea\u4f1a\u90bb\u63a5\u77e9\u9635\uff0c\u6240\u4ee5\uff0cA\u7ec4\u4eba\u5458\u6b63\u5e38\u5b58\u50a8\uff0cB\u7ec4\u6210\u5458\u7684\u4e0b\u6807\u76f4\u63a5\u6539\u4e3a$B_i+N_A (N_A)$\u662fA\u7ec4\u6210\u5458\u7684\u6570\u91cf\u3002\u867d\u7136\u7a7a\u95f4\u52a0\u4e86\u4e00\u5806\uff0c\u4f46\u662f\u8fc7\u5f97\u53bb\uff0c\u4e5f\u597d\u7406\u89e3\u554a\uff01\uff08\u4e3a\u81ea\u5df1\u627e\u501f\u53e3\uff09\n\n\u597d\u4e86\u597d\u4e86\uff0c\u4e0a\u4ee3\u7801\uff1a\n\n```c++\n#include<iostream>\n#include<stdio.h>\n#include<string.h>\nusing namespace std;\nbool e[2001][2001];//\u90bb\u63a5\u77e9\u9635\nint match[2001];//\u914d\u5bf9\u5173\u7cfb\u8bb0\u5f55\nbool visit[2001];//\u8bbf\u95ee\u6807\u8bb0\nint n,m,k;\nbool dfs(int v)//\u627e\u5230\u4eba\u5339\u914d\u5c31\u8fd4\u56detrue,\u5426\u5219false\n{\n    visit[v]=true; \n    for(int i=n+1;i<=m+n;i++)//\u679a\u4e3e\u6bcf\u4e2aB\u7ec4\u6210\u5458\uff08\u90bb\u63a5\u8868\u679a\u4e3e\u6bcf\u6761\u8fb9\uff09\uff0c\u770b\u4e4b\u95f4\u662f\u5426\u6709\u8fde\u7ebf\n    {\n        if(e[v][i]==1&visit[i]==false)\n        {\n            visit[i]=true;\n            if(match[i]==0||dfs(match[i]))//\u5bf9\u65b9\u6ca1\u548c\u522b\u4eba\u5339\u914d\u6216\u8005\u5bf9\u65b9\u5339\u914d\u7684\u4eba\u627e\u5230\u4e86\u522b\u4eba\n            { \n                match[v]=i;\n                match[i]=v;//\u8bb0\u5f55\u4e00\u4e0b\n                return true;//\u627e\u5230\u4e86\n            }\n        }\n    }\n    return false;//\u6240\u6709\u8fb9\u5747\u5df2\u5c1d\u8bd5\uff0c\u65e0\u529f\u800c\u8fd4\n}\nint main()\n{\n    scanf(\"%d%d%d\",&n,&m,&k);\n    memset(match,0,sizeof(match));\n    for(int i=1;i<=k;i++)\n    {\n        int a,b;\n        scanf(\"%d%d\",&a,&b);\n        if(a>n||b>m)//\u8fd9\u79cd\u5f02\u5e38\u6570\u636e\u76f4\u63a5\u8fc7\u6ee4\u6389\n            continue;\n        e[a][b+n]=e[b+n][a]=true;\n    }//\u8bfb\u5165\u90e8\u5206\n    int count=0;\n    for(int i=1;i<=n;i++)//\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u5c1d\u8bd5\u5339\u914d\n    {\n        for(int j=1;j<=n+m;j++)\n        {\n            visit[j]=false;//\u6e05\u9664\u4e0a\u6b21\u5339\u914d\u7684\u8bbf\u95ee\u6807\u8bb0\n        }\n        if(dfs(i))//\u627e\u5230\u4e86\n            ++count;//\u5339\u914d\u6570+1\n    }\n    printf(\"%d\",count);\n    //system(\"pause\");\n    return 0;\n}\n```\n\n\u672c\u6587\u5230\u8fd9\u91cc\u5c31\u7ed3\u675f\u4e86\uff0c\u5e0c\u671b\u80fd\u7ed9\u4f60\u5e26\u6765\u5e2e\u52a9\u3002",
        "postTime": 1578574379,
        "uid": 113968,
        "name": "USER113968",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3386 \u3010\u3010\u6a21\u677f\u3011\u4e8c\u5206\u56fe\u5339\u914d\u3011"
    },
    {
        "content": "## \u4e8c\u5206\u56fe\n\n### \u662f\u5565\n\n\u5c06\u4e00\u4e2a**\u65e0\u5411\u56fe**\u7684\u70b9\u5206\u4e3a\u4e24\u4e2a\u96c6\u5408\u4e14\u4e24\u4e2a\u70b9\u96c6\u4e2d\u7684\u70b9\u5728\u5404\u81ea\u96c6\u5408\u4e2d\u4e92\u4e0d\u76f8\u8fde\u5219\u79f0\u8fd9\u4e2a\u56fe\u4e3a\u4e8c\u5206\u56fe.\n\n### \u6027\u8d28\n\n\u4e00\u4e2a\u65e0\u5411\u56fe\u662f\u4e8c\u5206\u56fe,\u5f53\u4e14\u4ec5\u5f53\u5b83\u4e0d\u5305\u542b\u5947\u73af\n\n\u4e00\u4e2a\u65e0\u5411\u56fe\u662f\u4e8c\u5206\u56fe,\u5f53\u4e14\u4ec5\u5f53\u5b83\u53ef\u4ee5\u4e8c\u67d3\u8272\n\n### \u5224\u5b9a\n\n\u65e0\u5411\u56feK\u4e3a\u4e8c\u5206\u56fe\u7684\u5145\u5206\u5fc5\u8981\u6761\u4ef6\u662f\n\n1.K\u81f3\u5c11\u5305\u542b\u4e24\u4e2a\u70b9\n\n2.\u5176\u56de\u8def\u7684\u957f\u5ea6\u5747\u4e3a\u5076\u6570\n\n\u5b9e\u73b0\u4ee3\u7801\n\n\n\u4e8c\u67d3\u8272\u5224\u5b9a\u4e8c\u5206\u56fe\n\n\n```cpp\n\nbool paint(now, mark)\n{ \n\tif (color[now] == 0) \n\t\tcolor[now] = mark; \n\telse if (color[now] != mark) \n\t\treturn false;\n\tint k=head[now]; \n\twhile (k!=0){ \n\t\tif(paint(e[k], -mark)==false) \n\t\treturn false; k=next[k];   //\u5982\u51fa\u73b0\u51b2\u7a81\u5219\u8bf4\u660e\u8fd9\u4e0d\u662f\n\t} \n\treturn true; //\u6ca1\u6709\u51fa\u73b0\u51b2\u7a81\u8bf4\u660e\u6b64\u56fe\u662f\u4e8c\u5206\u56fe\n}\n\n```\n-----\n\n\u4e8c\u5206\u56fe\u7684\u5339\u914d\n\n* \u662f\u5565\n\n\u5bf9\u4e8e\u4e00\u4e2a\u4e8c\u5206\u56feK\u7684\u5b50\u56feT\n\n\u82e5T\u7684\u8fb9\u96c6E\u7684\u4efb\u610f\u4e24\u6761\u8fb9\u90fd\u4e0d\u8fde\u63a5\u540c\u4e00\u4e2a\u70b9,\u5219\u79f0T\u4e3aK\u7684\u4e00\u4e2a\u5339\u914d\n\n## \u5173\u4e8e\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\n\n* \u5308\u7259\u5229\u7b97\u6cd5\n\n\u9996\u5148\u4e86\u89e3\u4e00\u4e2a\u5b9a\u4e49:\u589e\u5e7f\u8def\n\n\u5b9a\u4e49:\n\u8bbeM\u662f\u4e8c\u5206\u56feG\u7684\u4e00\u4e2a\u5339\u914d,P\u662fG\u4e2d\u4e00\u4e2a\u8fde\u901a\u4e24\u4e2a\u672a\u5339\u914d\u70b9\u7684\u8def\u5f84,\u4e14\u5c5e\u4e8eM\u7684\u8fb9\u4e0e\u4e0d\u5c5e\u4e8eM\u7684\u8fb9\u4ea4\u66ff\u51fa\u73b0\uff0c\u5219\u79f0P\u4e3a\u76f8\u5bf9\u4e8eM\u7684\u4e00\u6761\u589e\u5e7f\u8def.\n\n\u7531\u589e\u5e7f\u8def\u7684\u5b9a\u4e49\u53ef\u4ee5\u63a8\u51fa\u4e0b\u8ff0\u4e09\u4e2a\u7ed3\u8bba \n\n1.\u589e\u5e7f\u8def\u7684\u8def\u5f84\u957f\u5ea6\u5fc5\u5b9a\u4e3a\u5947\u6570,**\u7b2c\u4e00\u6761\u8fb9\u548c\u6700\u540e\u4e00\u6761\u8fb9\u90fd\u672a\u88ab\u5339\u914d**.\n\n2.\u901a\u8fc7\u589e\u5e7f\u8def\u7684\u4ea4\u9519\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u66f4\u5927\u7684\u5339\u914d.\n\n3.\u5f53\u4e14\u4ec5\u5f53\u4e0d\u5b58\u5728\u589e\u5e7f\u8def\u662f\u5339\u914d\u6570\u6700\u5927.\n\n\n### \u5982\u4f55\u627e\uff1f(\u67d3\u8272\u6cd5)\n\n1.\u8bbe\u589e\u5e7f\u8defM\u4e3a\u7a7a\n\n2.\u627e\u51fa\u4e00\u6761\u589e\u5e7f\u8defP\u901a\u8fc7\u53d6\u53cd\u64cd\u4f5c\u83b7\u5f97\u66f4\u5927\u7684\u5339\u914d\u4ee3\u66ff\u539f\u5339\u914dM\n\n3.\u91cd\u590d2.\u7684\u64cd\u4f5c\u76f4\u5230\u627e\u4e0d\u51fa\u65b0\u7684\u589e\u5e7f\u8def\u4e3a\u6b62\n\n\u5982\u4f55\u8fdb\u884c2.\u7684\u64cd\u4f5c\uff1f\n\n~~\u597d\u50cf\u5c31\u53ea\u6709\u8fd9\u4e2a\u95ee\u9898\u6bd4\u8f83\u68d8\u624b~~\n\n\u679a\u4e3e\u4e00\u6761\u8def\u5f84\u7684\u8d77\u59cb\u70b9\n\n\u5224\u65ad\u6b64\u70b9\u662f\u5426\u4e3a\u521d\u59cb\u72b6\u6001\n\ndfs\u5c06\u4e0b\u4e00\u4e2a\u70b9\u8d4b\u4e3a !\u8fd9\u4e2a\u70b9\u7684\u989c\u8272\n\n\u6700\u540e\u4e00\u76f4\u627e\u5230\u627e\u4e0d\u5230\u589e\u5e7f\u8def\u4fbf\u8fd4\u56de\n\n---------\n\n\u5f00\u59cb\u6253\u589e\u5e7f\u8def\u90e8\u5206\n\n```cpp\n\nbool ap(int x){\n\tfor(int i=1;i<=m;i++){//\u626b\u63cf\u6bcf\u4e00\u4e2a\u70b9 \n\t\tif(g[x][i]&&!vis[i])//\u5982\u679cx,i\u4e4b\u95f4\u5b58\u5728\u4e00\u6761\u8fb9\u4e14i\u672a\u88ab\u8bbf\u95ee\u8fc7\n\t\tvis[i]=true; //\u5c06i\u70b9\u6807\u8bb0\u4e3a\u8fc7\n\t\tif(!match[i]||ap(match[i])){ //\u5982\u679c\u8fd9\u662f\u589e\u5e7f\u8def\u7684\u7ec8\u70b9\u6216\u8fd8\u80fd\u4ece\u8fd9\u4e2a\u70b9\u627e\u5230\u589e\u5e7f\u8def \n\t\t\tmatch[i]=x;  \n\t\t\treturn true;//\u80fd\u627e\u5230 \n\t\t} \n\t}\n\treturn false; //\u5982\u679c\u626b\u63cf\u4e86\u6bcf\u4e00\u4e2a\u70b9\u90fd\u65e0\u6cd5\u627e\u5230\u589e\u5e7f\u8def\u5c31\u8bf4\u660e\u627e\u4e0d\u5230\u589e\u5e7f\u8def\u4e86 \n} \n```\n\n\u5b8c\u6574\u4ee3\u7801:\n\n```cpp\n\n#include<bits/stdc++.h>\nusing namespace std;\nint ans=0;\nconst int maxn=1007;\nbool vis[maxn];\nint n,m;\nint e;\nbool g[maxn][maxn];\nint match[maxn];\nbool ap(int x){\n\tfor(int j=1;j<=m;++j){//\u626b\u63cf\u6bcf\u4e00\u4e2a\u70b9 \n\t\tif(g[x][j]&&!vis[j]){//\u5982\u679cx,j\u4e4b\u95f4\u5b58\u5728\u4e00\u6761\u8fb9\u4e14j\u672a\u88ab\u8bbf\u95ee\u8fc7\n\t\t\tvis[j]=true; //\u5c06j\u70b9\u6807\u8bb0\u4e3a\u8fc7\n\t\t\tif(!match[j]||ap(match[j])){ //\u5982\u679c\u8fd9\u662f\u589e\u5e7f\u8def\u7684\u4e2d\u70b9\u6216\u8fd8\u80fd\u4ece\u8fd9\u4e2a\u70b9\u627e\u5230\u589e\u5e7f\u8def \n\t\t\t\tmatch[j]=x;  //\u53d8\u53cd \n\t\t\t\treturn true;//\u8fd4\u56de\u80fd\u627e\u5230 \n\t\t\t} \n\t\t} \n\t}\n\treturn false; //\u5982\u679c\u626b\u63cf\u4e86\u6bcf\u4e00\u4e2a\u70b9\u90fd\u65e0\u6cd5\u627e\u5230\u589e\u5e7f\u8def\u5c31\u8bf4\u660e\u627e\u4e0d\u5230\u589e\u5e7f\u8def\u4e86 \n}\nvoid work()\n{\n\tfor(int i=1;i<=n;++i){ //\u679a\u4e3e\u589e\u5e7f\u8def\u8d77\u59cb\u70b9\n\t\tmemset(vis,0,sizeof(vis));\n\t\tif(ap(i)){\n\t\t\tans++;\n\t\t} \n\t}\n\treturn ;\n}\nint main()\n{\n\tcin>>n>>m>>e;\n\tfor(int i=1;i<=e;i++){\n\t\tint u,v;\n\t\tcin>>u>>v;\n\t\tg[u][v]=true; \n\t}\n\twork();\n\tcout<<ans;\n}\n\n```\n\n------\n\n### _end_\n",
        "postTime": 1558778070,
        "uid": 91729,
        "name": "XJack",
        "ccfLevel": 5,
        "title": "\u4e8c\u5206\u56fe\u4e0e\u5308\u7259\u5229"
    },
    {
        "content": "## \u89e3\u7b54\n\n\u57fa\u7840\u6a21\u677f\u9898\n\n---\n### \u4e8c\u5206\u56fe(\u901a\u4fd7\u89e3\u91ca)\uff1a\n\n\u7ed9\u4f60\u4e00\u4e2a\u56fe\uff0c\u5b83\u6070\u597d\u53ef\u4ee5\u5206\u6210\u4e24\u90e8\u5206\uff0c\u6bcf\u4e2a\u90e8\u5206\u5185\u90e8\u6ca1\u6709\u8fb9\u76f8\u8fde\uff0c\u800c\u8fd9\u4e24\u90e8\u5206\u6709\u8fb9\u76f8\u8fde\uff0c\u8fd9\u5c31\u662f\u4e8c\u5206\u56fe\uff0c\u5982\u56fe\u4f8b\uff1a\n\n![two\u5206\u56fe](https://cdn.luogu.com.cn/upload/pic/70574.png)\n\n\u8fd9\u5c31\u662f\u4e00\u4e2a\u6807\u51c6\u7684\u4e8c\u5206\u56fe\uff0c\u4e24\u4e2a\u7528\u9ec4\u8272\u6846\u6846\u8d77\u6765\u7684\u90e8\u5206\u4e2d\u7684\u70b9\u76f8\u4e92\u6ca1\u6709\u8fde\u7ebf\u3002\n\n---\n### \u5f15\u5b50\n\n\u60f3\u4e00\u4e0b\u5750\u677f\u51f3\u7684\u95ee\u9898\uff1a\n\n>\u6709$n$\u4e2a\u4eba\uff0c$m$\u4e2a\u677f\u51f3\uff0c\u6bcf\u4e2a\u4eba\u53ea\u80fd\u5750\u7ed9\u5b9a\u7684\u67d0\u4e9b\u677f\u51f3\uff0c\u90a3\u4e48\uff0c\u600e\u4e48\u8ba9\u6700\u591a\u7684\u4eba\u5750\u5728\u677f\u51f3\u4e0a\u5462\uff1f\n\n\u663e\u7136\u7684\u662f\uff0c\u4e00\u4e2a\u677f\u51f3\u4e0a\u53ea\u80fd\u6709$1$\u4e2a\u4eba\u3002\n\n\u90a3\u4e48\uff0c\u4e0d\u59a8\u628a\u4eba\u770b\u6210\u4e00\u4e2a\u96c6\u5408\uff08\u70b9\u96c6\uff09\uff0c\u677f\u51f3\u770b\u6210\u53e6\u4e00\u4e2a\u96c6\u5408\uff0c\u8fd9\u4e24\u4e2a\u96c6\u5408\u5185\u90e8\u662f\u663e\u7136\u4e0d\u4f1a\u76f8\u8fde\u7684\uff08\u6bd4\u5982\u4eba\u4e0d\u80fd\u5750\u5728\u4eba\u4e0a\uff0c\u677f\u51f3\u4e0d\u80fd\u5750\u5728\u677f\u51f3\u4e0a\uff09\u3002\n\n\u56e0\u6b64\u5f88\u5bb9\u6613\u5c31\u4f1a\u60f3\u5230\u7528\u4e8c\u5206\u56fe\u6765\u505a\u3002\n\n\u5bf9\u5e94\u5173\u7cfb\uff1a\u67d0\u4e2a\u4eba\u5750\u67d0\u4e2a\u5ea7\u4f4d \n\n\u4ee5\u4e0b\u662f\u6ca1\u6709\u4f18\u5316\u7684\u4f2a\u4ee3\u7801\n\n```cpp\nbool sit(a)://\u8ba9a\u53f7\u4eba\u6765\u62a2\u4f4d\u7f6e\n\n//\u628a\u540e\u9762\u770b\u5b8c\u770b\u8fd9\u4e2a\u5224\u65ad\n//\u8d76\u8d70\u7684\u4eba\u7f16\u53f7\u4e3a0\n//\u8981\u62a2\u4f4d\u7f6e\u7684\u4eba\u627e\u5230\u4f4d\u7f6e\nIF a==0\n    return true\nfor i=1 to n//\u679a\u4e3e\u6bcf\u4e2a\u677f\u51f3\n{\n    IF d[a][i]==true//\u5982\u679ca\u53f7\u4eba\u53ef\u4ee5\u5750\u5728i\u53f7\u677f\u51f3\n    {\n\n        //a\u53f7\u4eba\u5148\u8d76\u8d70i\u53f7\u677f\u51f3\u4e0a\u7684\u4eba\n        //\u6b64\u5904\u5982\u679ci\u53f7\u677f\u51f3\u672c\u6765\u5c31\u6ca1\u4eba\n        //\u8d76\u8d70\u7684\u4eba\u7684\u7f16\u53f7\u5c31\u662f\u9ed8\u8ba4\u76840\n        //\u73b0\u5728\u53ef\u4ee5\u56de\u53bb\u770b\u524d\u9762\u7684IF a==0\u4e86\n        //\u5f85\u539f\u6765\u7684\u4eba\u627e\u4e0d\u5230\u677f\u51f3\u518d\u8fd8\u56de\u53bb\n\n        t=seat[i]       //\u628a\u539f\u6765\u7684\u4eba\u5b58\u7740\u5907\u4efd\uff0c\u4ee5\u4fbf\u5f52\u8fd8\n        seat[i]=a       //\u6211\u62a2~\n        IF sit(t)==true //\u5982\u679c\u558a\u8d70\u7684\u4eba\u627e\u5230\u4e86\u4f4d\u7f6e\n            return true;\n        seat[i]=t;      //\u558a\u8d70\u7684\u4eba\u6ca1\u627e\u5230\u4f4d\u7f6e\uff0c\u53ea\u597d\u8fd8\u56de\u53bb\u4e86\n        \n    }\n}\nreturn false//a\u60b2\u50ac\u5730\u6ca1\u677f\u51f3\u5750\u4e86\uff08\u6cea\u76ee\uff09\n```\n\n\u628a\u4ee3\u7801\u5199\u51fa\u6765\uff0c\u4f60\u4f1a\u53d1\u73b0\u83ab\u540dT\u6389\uff08\u4e0d\u6392\u9664\u6570\u636e\u6c34\u7684\u60c5\u51b5\uff09\n\n---\n### \u5750\u677f\u51f3\u95ee\u9898\u7684\u4f18\u5316\n\n\u8fd9\u4e48\u6162\uff0c\u600e\u4e48\u884c\u5462!\n\n\u6211\u4eec\u53c8\u7ec6\u60f3\uff0c\u53d1\u73b0\u6bcf\u6b21\u8c03\u7528`sit()`\u51fd\u6570\u7684\u65f6\u5019\uff0c$a$\u90fd\u4f1a\u4ece\u5934\u5230\u5c3e\u5224\u65ad\u54ea\u4e2a\u5ea7\u4f4d\u80fd\u5750\uff0c\u54ea\u4e2a\u53c8\u4e0d\u80fd\u5750\uff0c\u8fd9\u6837\u5224\u65ad\u96be\u514d\u6709\u91cd\u590d\uff0c\u5bb3\u7684\u6211\u4eecT\u6389\n\n\u4e8e\u662f\uff0c\u81ea\u7136\u53ef\u4ee5\u60f3\u5230\u7528\u4e00\u4e2a$bool$\u4e8c\u7ef4\u6570\u7ec4`used`\u6765\u5b58\u50a8$a$\u662f\u5426\u627e\u8fc7\u8fd9\u4e2a\u70b9\uff0c$true$\u4e3a\u627e\u8fc7\uff0c$false$\u4e3a\u6ca1\u627e\u8fc7\u3002\n\n\u4f46\u5bf9\u4e8e\u5f88\u5927\u7684\u6570\u636e\uff0c\u5f00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u4f1a\u6d6a\u8d39\u7a7a\u95f4\u590d\u6742\u5ea6\uff0c\u6240\u4ee5\u6211\u4eec\u60f3\uff0c\u5f00\u4e2a\u4e00\u7ef4\u6570\u7ec4\u4e0d\u884c\u5417\uff1f\n\n\u6bcf\u6b21\u6211\u4eec\u90fd\u4f1a\u5c1d\u8bd5\u7ed9\u4e0d\u4e00\u6837\u7684$a$\u5b89\u5ea7\u4f4d\uff0c\u6bcf\u6b21\u90fd\u53ea\u9488\u5bf9$a$\u8fd9\u4e00\u4e2a\u4eba\u6765\u64cd\u4f5c\uff0c\u6240\u4ee5\u6570\u7ec4\u53ef\u4ee5\u7531\u4e8c\u7ef4\u964d\u5230\u4e00\u7ef4\uff0c\u6bcf\u6b21\u5728`main`\u4e2d\u8c03\u7528`sit()`\u7684\u65f6\u5019\u6e05\u7a7a\u5373\u53ef\uff08\u6ca1\u7406\u89e3\u53ef\u4ee5\u80cc\uff09\u3002\n\n\u56e0\u6b64\u6211\u4eec\u5f97\u51fa\u4ee5\u4e0b\u4f18\u5316\u7684\u4ee3\u7801\uff08\u8fd8\u662f\u4f2a\u4ee3\u7801\uff09\uff1a\n\n```cpp\nbool sit(a):\n\nIF a==0\n    return true\nfor i=1 to n\n{\n    IF d[a][i]==1 and used[i]==false\n    //a\u53f7\u4eba\u53ef\u4ee5\u5750\u5728i\u53f7\u5ea7\u4f4d\uff0c\u5e76\u4e14\u5f53\u524d\u5ea7\u4f4d\u6ca1\u5c1d\u8bd5\u8fc7\n    {\n        t=seat[i]\n        seat[i]=a\n        used[i]=true//\u6807\u8bb0\u5c1d\u8bd5\u8fc7\u8fd9\u4e2a\u5ea7\u4f4d\u4e86\n        IF sit(t)==true\n            return true;\n        seat[i]=t;\n    }\n}\nreturn false\n```\n\n\u8c03\u7528`sit()`\u51fd\u6570\u5c31\u8fd9\u6837\u5199\uff1a\n\n```cpp\nfor i=1 to n\n{\n    \u6e05\u7a7aused\n    IF sit(i)\n        ans++;\n}\n```\n\n\u8fd9\u6837$ans$\u5c31\u662f\u6211\u4eec\u8981\u7684\u6700\u5927\u5339\u914d\u6570\uff0c\u5982\u679c\u8981\u6c42\u5339\u914d\u65b9\u6cd5\uff0c\u6bcf\u6b21\u8bb0\u5f55`used`\u5c31\u597d\u4e86\u3002\n\n---\n\u597d\u4e86\u8fd9\u5c31\u662f\u5308\u7259\u5229\u7b97\u6cd5\n\n---\n### \u505a\u8fd9\u9053\u9898\u5427\n\n\u73b0\u5728\u53ef\u4ee5\u76f4\u63a5\u7ed9\u4ee3\u7801\u4e86\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdlib>\n#include<cstdio>\nusing namespace std;\n\nint n,m,edgenum,ans=0;\nbool dis[1010][1010]={false};//\u76f8\u5f53\u4e8ed\u6570\u7ec4\uff0c\u5c31\u662f\u90bb\u63a5\u77e9\u9635\nbool vis[1010]={true};       //\u76f8\u5f53\u4e8eused\u6570\u7ec4\nint seat[1010]={0};          //\u6807\u8bb0\u5ea7\u4f4d\u4e0a\u5750\u4e86\u54ea\u4e2a\u4eba\n\nbool sit(int);\n\nint main()\n{\n    cin>>n>>m>>edgenum;\n    for(int i=1;i<=edgenum;i++)\n    {\n        int u,v;\n        cin>>u>>v;\n        if(u>n || v>m)//\u6bd2\u7624\u6570\u636e\u76f4\u63a5\u7206\u7834\n            continue;\n        dis[u][v]=true;//\u6807\u8bb0u\u548cv\u6709\u8fde\u8fb9\n    }\n    for(int i=1;i<=n;i++)\n    {\n        memset(vis,true,sizeof(vis));//\u6bcf\u6b21\u6e05\u7a7a\n        if(sit(i))\n            ans++;\n    }\n    cout<<ans;\n    return 0;\n}\nbool sit(int a)//\u8fd9\u91cc\u53ef\u4ee5\u5bf9\u7167\u7740\u524d\u9762\u7684\u4f2a\u4ee3\u7801\u770b\n{\n    if(a==0)\n        return true;\n    for(int i=1;i<=n;i++)\n    {\n        if(dis[i][a] && vis[i])\n        {\n            int t=seat[i];\n            seat[i]=a;\n            vis[i]=false;\n            if(sit(t))\n                return true;\n            seat[i]=t;\n        }\n    }\n    return false;\n}\n```",
        "postTime": 1565316125,
        "uid": 64434,
        "name": "Xecades",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3386 \u3010\u3010\u6a21\u677f\u3011\u4e8c\u5206\u56fe\u5339\u914d\u3011"
    },
    {
        "content": "## \u5308\u7259\u5229\u7b97\u6cd5\n\n------------\nP3386 \u3010\u6a21\u677f\u3011\u4e8c\u5206\u56fe\u5339\u914d\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int maxn=1010,maxm=1000010;\nint a,b,e,id=0,pre[maxn];\nint head[maxn],next[maxm],E[maxm];//\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe\nbool v[maxn];\nvoid add(int s,int e){\n\tE[++id]=e;\n\tnext[id]=head[s];\n\thead[s]=id;\n}\nbool find(int dot){\n\tfor(int i=head[dot];i;i=next[i]){\n\t\tint y=E[i];\n\t\tif(v[y]){//v[i]\u4ee3\u8868\u5728\u672c\u6b21\u641c\u7d22\u4e2di\u70b9\u672a\u88ab\u626b\u8fc7\uff0c\u9632\u6b62\u9012\u5f52\u65f6\u56de\u5934\n\t\t\tv[y]=false;\n\t\t\tif(!pre[y]/*\u8be5\u70b9\u672a\u88ab\u9009\u8fc7*/ || find(pre[y])/*\u4ece\u8be5\u70b9\u51fa\u53d1\u53ef\u4ee5\u627e\u5230\u589e\u5e7f\u8def*/){\n\t\t\t\tpre[y]=dot;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t\t\n\t\t}\n\t}\n\treturn false;\n}\nint main(){\n\tscanf(\"%d %d %d\",&a,&b,&e);\n\tfor(int i=1;i<=e;i++){\n\t\tint x,y;\n\t\tscanf(\"%d %d\",&x,&y);\n\t\tif(x>a || y>b)continue;\n\t\tadd(x,y);\n\t}\n\tint ans=0;\n\tmemset(pre,0,sizeof(pre));\n\tfor(int i=1;i<=a;i++){\n\t\tmemset(v,true,sizeof(v));\n\t\tif(find(i))ans++;\n\t}\n\tcout<<ans;\n\treturn 0;\n} \n```\n~~\u653e\u6691\u5047\u540e\u5199\u7684\u7b2c\u4e00\u4e2a\u4e00\u4e2abug\u90fd\u6ca1\u6709\u7684\u4ee3\u7801\uff0c\u6211\u597d\u5174\u594b~~~\n\n\n------------\n### \u7406\u89e3\u5308\u7259\u5229\u7b97\u6cd5\u9700\u8981\u4ee5\u4e0b\u51e0\u4e2a\u80cc\u666f\u77e5\u8bc6\n- \u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u7684\u6982\u5ff5\uff1a\u53ef\u4ee5\u7b80\u5355\u7406\u89e3\u4e3a\u4e8c\u5206\u56fe\u4e2d\u6700\u591a\u80fd\u914d\u51fa\u51e0\u5bf9\n- \u5728\u4e00\u4e2a\u4e8c\u5206\u56fe\u4e2d\uff0c\u82e5\u4efb\u610f\u4e00\u6761\u8def\u5f84\u7684\u8d77\u70b9\u548c\u7ec8\u70b9\u4e3a\u672a\u5339\u914d\u70b9\uff0c\u5219\u8fd9\u6761\u8def\u4e0a\u7684\u5339\u914d\u5bf9\u6570\u53ef\u4ee5\u52a0\u4e00\uff0c\u8fd9\u6761\u8def\u5f84\u88ab\u79f0\u4e3a\u53ef\u589e\u5e7f\u8def\n\n\u95ee\u9898\u88ab\u8f6c\u5316\u4e3a\u4e86\u5bfb\u627e\u4e8c\u5206\u56fe\u4e2d\u7684\u53ef\u589e\u5e7f\u8def\\\n\u4e8e\u662f\u6211\u4eec\u4ece\u4e00\u4e2a\u70b9\u96c6\u4e2d\u7684\u6bcf\u4e00\u4e2a\u70b9\u51fa\u53d1\uff0c\u53ea\u8981\u627e\u5230\u53ef\u589e\u5e7f\u8def\uff0c\u5c31ans++",
        "postTime": 1562646137,
        "uid": 147861,
        "name": "LH0310",
        "ccfLevel": 4,
        "title": "\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d__\u5308\u7259\u5229\u7b97\u6cd5"
    },
    {
        "content": "\u8003\u524d\u53d1\u4e2a\u9898\u89e3\u6da8\u6da8RP\n\n\u611f\u8c22@nederland \u5de8\u4f6c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7f51\u7edc\u6700\u5927\u6d41+\u90bb\u63a5\u77e9\u9635\u7684\u89e3\u6cd5\uff0c\u6211\u5c31\u5728\u8fd9\u91cc\u63d0\u4e00\u4e0b\u5982\u4f55\u4f18\u5316\n\n\u539f\u89e3\u6cd5\uff1ahttps://www.luogu.org/recordnew/lists?uid=nederland&pid=P3386&status=14&sort=0\n\n\u53ef\u4ee5\u770b\u5230\uff0c\u9664\u7b2c\u4e00\u4e2aAC\u4ee5\u5916\uff0c\u5269\u4e0b\u6765\u7684T\u6b7b\u2026\u2026\n\n\u90a3\u4e48\uff0c\u5982\u4f55\u4f18\u5316\u5462\uff1f\n\n# 1. \u5feb\u8bfb+\u5feb\u8f93\uff01\n\n\u8fd9\u4e2a\u4e1c\u897f\uff0c\u5927\u5bb6\u90fd\u77e5\u9053\uff0c\u6211\u5c31\u4e0d\u89e3\u91ca\u4e86\n\n# 2. O(3)\n\n\u867d\u8bf4NOIP\u4e0d\u7ed9\u7528\uff0c\u7136\u800c\u5728\u6b64\u9898\u4e2d\u8fd8\u662f\u5f88\u6709\u7528\u7684\n\n# 3. register\n\n\u8fd9\u662f\u4e00\u4e2aC++\u4fdd\u7559\u5b57\uff0c\u7528\u6765\u5c06\u53d8\u91cf\u5b58\u5165\u5185\u5b58\uff0c\u52a0\u901f\u3002\n\n# 4. \u907f\u514d\u53d8\u91cf\u91cd\u590d\u5b9a\u4e49\n\n\u8fd9\u4e2a\u4e1c\u897f\u6709\u6548\u4f18\u5316\u65f6\u95f4\u3002\u6bd4\u65b9\u8bf4\u4e00\u4e2a1000000\u7684\u5faa\u73af\uff0c\u4f60\u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cf\uff0c\u5b9a\u4e491000000\u6b21\uff0c\u4e0dT\u90fd\u602a\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u867d\u7136\u4ecd\u7136\u9700\u8981\u8d4b\u503c\uff0c\u4f46\u51cf\u5c11\u4e86\u91cd\u590d\u5b9a\u4e49\u7684\u65f6\u95f4\u3002\n\n\u7528\u4e86\u8fd9\u4e9b\uff0c\u6b64\u9898\u5c31\u53ef\u4ee5A\u4e86\u554a\u2026\u2026\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#pragma GCC optimize(3)\n#define min(x,y) ((y)^(((x)^(y))&(-((x)<(y)))))\nbool vis[2005];\nint pred[2005],cap[2005][2005],flow[2005][2005],N,t;\ninline char nc(){\n  static char buf[100000],*p1=buf,*p2=buf;\n  return p1==p2&&(p2=(p1=buf)+fread(buf,1,100000,stdin),p1==p2)?EOF:*p1++;\n}\ntemplate <typename _Tp>\ninline void read(_Tp &x){\n    int f=1;x=0;char ch=nc();\n    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=nc();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=nc();}\n    x*=f;\n}\ninline void write(long long n){\n    if(n==0) return;\n    write(n/10);\n    putchar(n%10+'0');\n}//\u5feb\u8bfb+\u5feb\u8f93\u2026\u2026\u7136\u800cprintf\u6bd4\u5feb\u8f93\u8fd8\u5feb\uff08\u6211\u5199\u70b8\u4e86\uff1f\uff09\nint findpath(int u,int x){\n    if(u==t)return x;\n    vis[u]=true;\n    for(int v=0;v<N;v++){\n        if(!vis[v]){\n            int dt=cap[u][v]-flow[u][v];\n            if(dt>0){\n                pred[v]=u;\n                int r=findpath(v,min(x,dt));\n                if(r)return r;\n            }\n        }\n    }\n    return 0;\n}\nint main(){\n    register int n,m,s,e,r,v,i,u;//\u4f18\u53163\u30014\n    read(n),read(m),read(e);//\u4f18\u53161\n    s=0;t=n+m+1;N=n+m+2;\n    for(i=1;i<=n;i++)cap[s][i]=1;\n    for(i=1;i<=m;i++)cap[n+i][t]=1;\n    for(i=0;i<e;i++){\n        read(u),read(v);//\u4f18\u53161\n        if(u>n||v>m)continue;\n        cap[u][v+n]=1;\n    }\n    while(true){\n        for(i=0;i<N;i++)vis[i]=false;\n        r=findpath(s,999999999);\n        if(!r)break;\n        v=t;\n        while(v!=s){\n            u=pred[v];\n            flow[u][v]+=r;\n            flow[v][u]-=r;\n            v=u;\n        }\n    }\n    register int sum=0;\n    for(i=0;i<N;i++)sum+=flow[s][i];\n    printf(\"%d\",sum);\n    return 0;\n}\n```\n\n\u7531@nederland \u5de8\u4f6c\u7684\u4ee3\u7801\u4f18\u5316\u800c\u6765\n\n\u6c42\u8fc7\uff0c~~\u6211\u89c9\u5f97\u6211\u4ecb\u7ecd\u4e86\u9664\u5973\u88c5\u4e4b\u5916\u7684\u6240\u6709\u4f18\u5316\u4e86~~",
        "postTime": 1541770831,
        "uid": 39863,
        "name": "\u5f15\u9886\u5929\u4e0b",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P3386 \u3010\u3010\u6a21\u677f\u3011\u4e8c\u5206\u56fe\u5339\u914d\u3011"
    },
    {
        "content": "### \u53ef\u80fd\u662f\u7b2c\u4e00\u7bc7python\u9898\u89e3\n\u4e3a\u4e86\u67d0\u4e9b\u76ee\u7684\uff0c\u8ba1\u5212\u5199\u4e00\u4e2apython\u7684\u4e8c\u5206\u56fe\u5339\u914d\uff0c\u7136\u800cpython\u7684\u5e38\u6570\u6709\u70b9\u5927\uff1f\u603b\u4e4b\u6734\u7d20\u7684\u7248\u672c\u6050\u6015\u6ca1\u90a3\u4e48\u597d\u8fc7\u3002\n```python\nleft = dict()//\u5de6\u4fa7\u70b9\u7684\u76f8\u90bb\u8282\u70b9\ncount = 0//\u7b54\u6848\nlmatch,rmatch = dict(),dict()//\u8bb0\u5f55\u5339\u914d\u60c5\u51b5\nlused,rused = dict(),dict()//dfs\u904d\u5386\u6807\u8bb0\ndef dfs(c):\n    if lused[c] :return False\n    lused[c] = True\n    for i in left[c]:\n        if rused[i] : continue\n        rused[i] = True\n        if rmatch[i] != -1:\n            if dfs(rmatch[i]):\n                rmatch[i] = c\n                lmatch[c] = i\n                return True\n        else:\n            rmatch[i] = c\n            lmatch[c] = i\n            return True\n    return False\nn,m,e = map(int,input().split())//\u521d\u59cb\u5316\nfor i in range(n):left[i+1] = [];lmatch[i+1] = -1\nfor i in range(m):rmatch[i+1] = -1\nfor i in range(e)://\u89c1\u56fe\n    u,v = map(int,input().split())\n    if u>n or v>m :continue//\u7279\u5224\n    left[u].append(v)\nfor c in range(n):\n    for i in range(n):lused[i+1] = False\n    for i in range(m):rused[i+1] = False\n    count += dfs(c+1)\nprint(count)\n\n```\n\u7136\u800c\u8fc7\u4e0d\u4e86\u3002\n\n\u6700\u540e\u4e00\u4e2a\u5faa\u73af\u91cc\u7684\u4e24\u6b21\u5faa\u73af\u5f88\u8ba8\u538c\uff0c\u8ba9\u4eba\u4e0d\u5f00\u5fc3\uff0c\u4e8e\u662f\u5c31\u8981\u60f3\u529e\u6cd5\u53bb\u6389\u3002\u53ef\u4ee5\u5c06lused\u7684\u503c\u6539\u4e3a\u6574\u6570\uff0c\u6bcf\u6b21\u5faa\u73af\u6307\u5b9a\u4e00\u4e2a\u65b0\u503c\uff0c\u5982\u679clused\\[i\\] \u4e0d\u662f\u8fd9\u4e2a\u503c\uff0c\u5373\u5f53\u4f5cFalse\u5904\u7406\u3002\n\n\u4e8e\u662f13\u4e2a\u68c0\u67e5\u70b9\uff0c\u4e00\u5171\u5feb\u4e86350ms\u3002\u7136\u800c\u8fc7\u4e0d\u4e86\u3002\n\n~~\u4e8e\u662f\u7ee7\u7eed\u60f3\u529e\u6cd5\uff0c\u6bd4\u5982DFS\u65f6\uff0c\u4f18\u5148\u8fde\u6ca1\u914d\u5bf9\u7684\u70b9\uff0c\u7136\u540e\u6162\u4e86300ms\u3002~~\n\n\u4e8e\u662f\u8fd8\u5f97\u60f3\u529e\u6cd5\uff0c\u8003\u8651\u7b54\u6848\u7684\u4e0a\u754c\uff0c\u662fmin(n,m)\uff08\u663e\u7136\u6210\u7acb\uff09\u3002\u4e8e\u662f\u4e00\u65e6\u7b54\u6848\u8fbe\u5230\u4e0a\u754c\uff0c\u5c31\u6ca1\u5fc5\u8981\u5728\u505a\u4e0b\u53bb\u4e86\u3002\n\n\u4e8e\u662f\uff0c\u65f6\u95f4\u51cf\u534a\u3002\n\n\u9644\u4ee3\u7801\uff1a\n```python\n// luogu-judger-enable-o2\nleft = dict()\ntime = 0\ncount = 0\nlmatch,rmatch = dict(),dict()\nlused,rused = dict(),dict()\ndef dfs(c):\n    if lused[c] == time:return False\n    lused[c] = time\n    for i in left[c]:\n        if rused[i] == time: continue\n        rused[i] = time\n        if rmatch[i] != -1:\n            if dfs(rmatch[i]):\n                rmatch[i] = c\n                lmatch[c] = i\n                return True\n        else:\n            rmatch[i] = c\n            lmatch[c] = i\n            return True\n    return False\nn,m,e = map(int,input().split())\nfor i in range(n):left[i+1] = [];lmatch[i+1] = -1\nfor i in range(m):rmatch[i+1] = -1\nfor i in range(e):\n    u,v = map(int,input().split())\n    if u>n or v>m :continue\n    left[u].append(v)\nfor i in range(n):lused[i+1] = -1\nfor i in range(m):rused[i+1] = -1\nfor time in range(n):\n    count += dfs(time+1)\n    if time == min(n,m):break\nprint(count)\n```\n",
        "postTime": 1562902305,
        "uid": 125653,
        "name": "a4001234567",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3386 \u3010\u3010\u6a21\u677f\u3011\u4e8c\u5206\u56fe\u5339\u914d\u3011"
    },
    {
        "content": "\u54b3\u54b3\uff0c\u5176\u5b9e\u8fd9\u9053\u9898\u5462\u53ef\u4ee5\u770b\u6210\u7f51\u7edc\u6d41\u7684\u6700\u5927\u6d41\u95ee\u9898\n\n\u53ef\u4ee5\u770b\u6210u->v\u7684\u8fb9\u5c31\u662f\u5728\u56fe\u4e2du\u5230v\u8fde\u4e00\u6761\u6743\u4e3a1\u7684\u8fb9\n\n\u5c31\u662f\u6c42\u4ece\u6240\u6709u\u5230\u6240\u6709v\u7684\u6700\u5927\u6d41\u95ee\u9898\n\n\u5047\u8bbe\u6709\u4e00\u4e2a\u8d85\u7ea7\u6e90\u70b90\u53f7\uff0c\u548c\u4e00\u4e2a\u8d85\u7ea7\u6c47\u70b9n+m+1\u53f7\uff08\u5047\u8bbe\u6240\u6709u\u90fd\u662fu\u53f7\uff0cv\u90fd\u662fv+n\u53f7\uff09\n\n\u56e0\u4e3a\u4efb\u4f55\u4e00\u4e2a\u70b9\u90fd\u53ea\u80fd\u8fde\u4e00\u6761\u8fb9\uff0c\u6240\u4ee5\u4ece0\uff08\u5373\u6e90\u70b9\uff09\u5230\u6240\u6709u\u8fde\u4e00\u6761\u6743\u4e3a1\u7684\u8fb9\uff0c\u4ece\u6240\u6709v\u5230n+m+1\u53f7\uff08\u5373\u6c47\u70b9\uff09\u8fde\u4e00\u6761\u6743\u4e3a1\u8fb9\n\n\u6253\u4e00\u904d\u6700\u5927\u6d41\u5373\u53ef\n\n\u53ef\u4ee5\u5148\u53bbA\u4e00\u4e0b\u6700\u5927\u6d41\u95ee\u9898\u6a21\u7248\u9898 [\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P3376)\n\n\u4e8e\u662f\u4ee3\u7801\u7565\uff08\u4eb2\u6d4bdinic 291ms 8384kb \u8d85\u5feb \u63a8\u8350\uff09",
        "postTime": 1535115546,
        "uid": 66199,
        "name": "Bring",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P3386 \u3010\u3010\u6a21\u677f\u3011\u4e8c\u5206\u56fe\u5339\u914d\u3011"
    },
    {
        "content": "## \u4e8c\u5206\u56fe\u5339\u914d\n\n\u00b7\u56fe\u8bba\n\n### \u4e8c\u5206\u56fe\u6982\u5ff5:\n\u5206\u4e3a\u4e24\u8fb9\u7684\u70b9,\u540c\u8fb9\u7684\u70b9\u4e0d\u76f8\u8fde,\u53e6\u4e00\u8fb9\u7684\u70b9\u53ef\u4ee5\u76f8\u8fde,\u5982\u56fe:\n\n![](https://cdn.luogu.com.cn/upload/pic/21212.png)\n\u7ea2\u8272\u7684\u8fb9\u660e\u663e\u7834\u574f\u4e86\u4e8c\u5206\u56fe\u6027\u8d28\u3002\n\n### \u5339\u914d\u6982\u5ff5\n\u4e24\u4e24\u4e2a\u70b9\u8fdb\u884c\u5339\u914d,\u5339\u914d\u8fc7\u7684\u70b9\u4e0d\u518d\u51fa\u73b0,\u5982\u56fe:\n\n![](https://cdn.luogu.com.cn/upload/pic/21213.png)\n\n\u7ecf\u8fc7\u5339\u914d\u540e,\u70b9\u6e05\u9664,\u5176\u5b83\u7684\u7ee7\u7eed\u5339\u914d\u3002\n\n### \u6700\u5927\u5339\u914d\n\n\u4e00\u4e2a\u4e8c\u5206\u56fe\u4e2d,\u5339\u914d\u6700\u591a\u7684**\u70b9\u6570**\u4e3a\u8fd9\u4e2a\u4e8c\u5206\u56fe\u7684**\u6700\u5927\u5339\u914d\u6570**\u3002\u5982\u56fe:\n\n![](https://cdn.luogu.com.cn/upload/pic/21214.png)\n\n\u8fd9\u91cc\u8981\u6ce8\u610f,\u4e0d\u662f\u6240\u6709\u7684\u4e8c\u5206\u56fe\u90fd\u6709**\u6700\u5927\u5339\u914d\u6570\u91cf**=**\u70b9\u6570**\u7684\u60c5\u51b5\u3002\n\n### \u7b97\u6cd5\u4ecb\u7ecd\n\u603b\u7ed3\u4e24\u4e2a\u4e8c\u5206\u56fe\u505a\u6cd5\u3002\n\n### 1.\u5308\u7259\u5229\u7b97\u6cd5\n\u4e3b\u8981\u601d\u8def\u662f\u8d2a\u5fc3:\u6211\u4eec\u9700\u8981\u6ee1\u8db3\u540e\u6765\u7684\u70b9\u65f6,\u53ef\u80fd\u9700\u8981\u7834\u574f\u524d\u9762\u5df2\u7ecf\u5339\u914d\u7684\u70b9,\u7136\u540e\u8ba9\u524d\u9762\u7684\u70b9\u6362\u4e00\u4e2a\u5339\u914d\u5bf9\u8c61\u3002\n\n\u9898\u89e3:[BYVoid-\u5308\u7259\u5229\u7b97\u6cd5](https://www.byvoid.com/zhs/blog/hungary)\n\n### 2.\u7f51\u7edc\u6d41\n~~\u4e0d\u5f97\u4e0d\u8bf4,\u4e00\u5207\u56fe\u8bba\u7686\u7f51\u7edc\u6d41\u3002~~ \n\n _~~**(\u540a\u6253\u5308\u7259\u5229\u4e0d\u518d\u8bdd\u4e0b)**~~_ \n#### \u5165\u95e8\u7bc7:\n[\u7f51\u8def\u6d41\u7684\u6982\u5ff5\u548cEK,Dinic](https://www.luogu.org/blog/acking/solution-p3376)\n\n#### \u4e3a\u4ec0\u4e48\u9009\u62e9\u7f51\u7edc\u6d41?\n\u6211\u4eec\u628a\u6bcf\u4e00\u6761\u8fb9\u7684\u6d41\u91cf\u8bbe\u7f6e\u4e3a1(\u53cd\u5411\u8fb9\u4e3a0),\u5efa\u9020\u6e90\u70b9\u548c\u6c47\u70b9(\u4e60\u60ef\u662f\u6e90\u70b9source=1,\u6c47\u70b9sink=n+m+2),\u90a3\u4e48\u6d41\u5230\u4e86\u6c47\u70b9,\u6700\u5927\u6d41\u91cf\u5c31\u662f\u7f51\u7edc\u6d41\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/21215.png)\n\n\u4e3a\u4ec0\u4e48\u5462?\n\n\u901a\u4fd7\u4e00\u70b9\u6765\u8bf4:\u56e0\u4e3a\u6240\u6709\u6d41\u91cf\u90fd\u662f1,\u6240\u4ee5\u6bcf\u4e00\u4e2a\u8def\u5f84\u90fd\u6709\u53ef\u884c\u6027(\u5168\u90fd\u662f\u589e\u5e7f\u8def)\u3002\u4ece\u6e90\u70b9\u51fa\u53bb\u7684\u70b9(\u9664\u4e86\u8fd9\u4e2a\u70b9\u6ca1\u6709\u8fde\u8fb9)\u80af\u5b9a\u90fd\u4f1a\u51fa\u73b0\u589e\u5e7f\u8def,\u90a3\u4e48\u6d41\u5230\u53f3\u8fb9\u70b9\u7684,\u5c31\u662f\u5339\u914d\u6210\u529f(\u518d\u6d41\u5411\u6c47\u70b9)\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/21216.png)\n\n\u8fd9\u91cc\u7684**\u5efa\u6a21**\u9700\u8981\u7279\u522b\u6ce8\u610f\u3002\n\n#### ISAP\n[\u66f4\u5feb\u7684ISAP\u89e3\u6cd5](https://www.luogu.org/blog/acking/solution-p3376-2)\n\nISAP\u662f\u4e00\u79cd\u7f51\u7edc\u6d41\u7b97\u6cd5,\u4f1a\u6bd4Dinic\u5feb\u5f88\u591a,\u800c\u4e14\u5c11\u4e86\u521d\u59cb\u5316BFS,\u7a0b\u5e8f\u590d\u6742\u5ea6\u5c11\u4e86\u5f88\u591a,\u53c2\u8003\u5982\u4e0b\u3002\n\n### CODE\n```psacal\n//\u53ef\u80fd\u56e0\u4e3apascal\u6216\u8005\u662f\u521d\u59cb\u5316\u7684\u539f\u56e0,\u6709\u4e9b\u65f6\u5019\u88abDinic\u8d76\u8d85,\u4e0d\u8fc7\u65f6\u95f4\u590d\u6742\u5ea6\u8fd8\u662f\u5f88\u4e50\u89c2\u7684\u3002(\u53ef\u4ee5\u5f00O2)\n//\u5c11\u4e86\u5efa\u6a21\u548c\u6dfb\u8fb9,ISAP\u7684DFS\u53ea\u5360\u5f88\u5c11Byte\u3002\n//\u4ee5\u4e0b\u7a0b\u5e8f\u53ea\u662f\u4ecb\u7ecd\u5efa\u6a21\u90e8\u5206\n\nUses math;\n\nvar\n        value,reach:array[0..2010] of longint;\n        dis,gap,cnt,next:array[1..1010] of longint;\n        n,m,source,sink,tot,x,y,sum,i,k:longint;\n        maxflow:int64;\n\nprocedure add(x,y,sum:longint);\nbegin\n        inc(tot);\n        reach[tot]:=y;\n        inc(value[tot],sum);\n        next[tot]:=cnt[x];\n        cnt[x]:=tot;\nend;\n\nfunction Dfs(now,flow:longint):longint;\nvar\n        i,k,mindis,ret:longint;\nbegin\n        mindis:=n-1;\n        ret:=flow;\n        if now=sink then\n                exit(flow);\n\n        i:=cnt[now];\n        repeat\n                if value[i]>0 then\n                begin\n                        if dis[now]=dis[reach[i]]+1 then\n                        begin\n                                k:=Dfs(reach[i],min(ret,value[i]));\n                                dec(value[i],k);\n                                inc(value[i xor 1],k);\n                                dec(ret,k);\n                                if dis[source]>=n then\n                                        exit(flow-ret);\n                                if ret=0 then\n                                        break;\n                        end;\n                        mindis:=min(mindis,dis[reach[i]]);\n                end;\n                i:=next[i];\n        until i=-1;\n\n        if ret=flow then\n        begin\n                dec(gap[dis[now]]);\n                if gap[dis[now]]=0 then\n                        dis[source]:=n;\n                dis[now]:=mindis+1;\n                inc(gap[dis[now]]);\n        end;\n        exit(flow-ret);\nend;\n\nbegin\n        filldword(cnt,sizeof(cnt) div 4,maxlongint*2+1);\n        tot:=1;\n\n        read(n,m,k);\n        source:=1;\n        sink:=n+m+2;\n        for i:=1 to n do //\u6e90\u70b9\u5411\u5de6\u8fb9\u7684\u70b9\u6dfb\u8fb9\n        begin\n                add(source,i+1,1);\n                add(i+1,source,0); //\u6ce8\u610f:\u53cd\u5411\u8fb9\u4f9d\u7136\u662f0\n        end;\n        for i:=1 to k do //\u521b\u5efa\u4e8c\u5206\u56fe\n        begin\n                read(x,y);\n                if (x>n)or(y>m) then //Bug\n                        continue;\n                add(x+1,y+n+1,1);\n                add(y+n+1,x+1,0);\n        end;\n        for i:=1 to m do //\u53f3\u8fb9\u7684\u70b9\u5411\u6c47\u70b9\u6dfb\u8fb9\n        begin\n                add(i+n+1,sink,1);\n                add(sink,i+n+1,0);\n        end;\n\n        n:=n+m+2;\n\n        gap[source]:=n; //ISAP\u7f51\u7edc\u6d41\u90e8\u5206\n        while dis[source]<n do\n                inc(maxflow,Dfs(source,maxlongint));\n        writeln(maxflow);\nend.\n```\n\n",
        "postTime": 1529127200,
        "uid": 77760,
        "name": "arfa",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3386 \u3010\u3010\u6a21\u677f\u3011\u4e8c\u5206\u56fe\u5339\u914d\u3011"
    },
    {
        "content": "\u90a3\u5565\u4e00\u5f00\u59cb\u505a\u8fd9\u9053\u9898\u7684\u65f6\u5019\n\n\n\u6ca1\u6709\u60f3\u6cd5\u554a\n\n\n\u4e8e\u662f\n\n\u81ea\u5df1\u60f3\u4e86\u4e24\u4e2a\u665a\u4e0a\n\n\n\u60f3\u5230\u4e86\u4e00\u4e2a\u6709\u8da3\u53c8\u5947\u602a\u7684\u7b97\u6cd5\u3002\n\n\n\u4e8e\u662f\u6211\u5c31\u6253\u5f00\u4e86\u767e\u5ea6\n\n\n\u53d1\u73b0\u6211\u8fd9\u4e2a\u7b97\u6cd5\u7684\u601d\u8def\u597d\u50cf\u6ca1\u51fa\u73b0\u8fc7\uff01\n\n\n\u4e8e\u662f\u6211\u53c8\u7ffb\u5230\u4e86\u8fd9\u9053\u9898\u7684\u9898\u89e3\n\n\n\u53d1\u73b0\u4e86\u4e09\u79cd\u7b97\u6cd5\n\n\n\u770b\u5230\n\n\u5308\u7259\u5229\n\n\nHopcroft-Carp\n\n\n\u7f51\u7edc\u6d41\n\n\n\u524d\u4e24\u79cd\u6211\u4ed4\u7ec6\u5730\u7406\u89e3\u4e86\u4e0b\u3002\n\n\n\u8bf6\u53d1\u73b0\u597d\u50cf\u548c\u6211\u7684\u601d\u8def\u90fd\u4e0d\u4e00\u6837\n\n\n~~\u81f3\u4e8e\u7f51\u7edc\u6d41\u5c31\u6ca1\u770b\u61c2~~\n\n\n\u7136\u540e\u6211\u5728\u8fd9\u91cc\u8bf4\u4e00\u4e0b\u601d\u8def\u5427\n\n\n\u5982\u679c\u6709\u4ec0\u4e48\u9519\u8bef\u7684\u5730\u65b9\u8bf7\u6307\u51fa\n\n\n\u56e0\u4e3a\u771f\u7684\u662f\u81ea\u5df1\u60f3\u7684\u3002\n\n\n\u8fd9\u4e2a\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662fmax(n,m)^2\n\n\nn\u4e2a\u5de6\u8fb9\u7684\u70b9\uff0cm\u4e2a\u53f3\u8fb9\u7684\u70b9\uff0ce\u662f\u8fb9\u6570\n\n\n\u5982\u679c\u4f60\u4eec\u53d1\u73b0\u8fd9\u548c\u7f51\u7edc\u6d41\u7684\u601d\u8def\u4e00\u6837\u5c31\u522b\u770b\u4e86\u5427\n\n\n\u56e0\u4e3a\u6211\u4e0d\u4f1a\u7f51\u7edc\u6d41\n\n\n\u601d\u8def\uff1a\uff08\u5927\u6982\u662f\u8d2a\u5fc3\u4e86\u554a\n\n\n\u5982\u679c\u8bbelp[i]\u4ee3\u8868i\u70b9\u6709lp[i]\u4e2a\u53ef\u5339\u914d\u5bf9\u8c61\uff0ci\u70b9\u662f\u5de6\u8fb9\u7684\u70b9\n\n\nlg[j]\u8868\u793aj\u70b9\u6709lg[j]\u4e2a\u53ef\u5339\u914d\u5bf9\u8c61\uff0cj\u662f\u53f3\u8fb9\u7684\u70b9\n\n\n\u90a3\u4e48\n\n\u6211\u4eec\u5148\u627e\u4e00\u4e2a\u5de6\u8fb9\u7684\u70b9\n\n\n\u5b83\u7684\u53ef\u914d\u5bf9\u70b9\u662f\u6240\u6709\u5de6\u8fb9\u7684\u70b9\u91cc\u6700\u5c11\u7684\n\n\n\u8bbe\u5b83\u4e3ax\n\n\n\u518d\u627e\u4e2a\u53f3\u8fb9\u7684\u70b9\n\n\n\u8fd9\u4e2a\u53f3\u8fb9\u7684\u70b9\u8981\u6ee1\u8db3\u4e24\u4e2a\u6761\u4ef6\n\n\n\u4e00\u662f\u5b83\u4e00\u5b9a\u80fd\u4e0ex\u914d\u5bf9\n\n\n\u4e8c\u662f\u5b83\u662f\u53f3\u8fb9\u70b9\u4e2d\u6240\u6709\u80fd\u4e0ex\u914d\u5bf9\u7684\u70b9\u4e2d\u53ef\u914d\u5bf9\u7684\u70b9\u6700\u5c11\u7684\uff08\u5373\u82e5\u8bbe\u8fd9\u7684\u70b9\u4e3a\u70b9y\uff0c\u90a3\u4e48lg[y]\u4e00\u5b9a\u6700\u5c11\u7684\uff09\n\n\n\u90a3\u4e48\u5982\u679c\u8981\u6784\u6210\u6700\u5927\u5339\u914d\n\n\n\u8fde\u63a5x\uff0cy\u662f\u80af\u5b9a\u7684\n\n\n\uff08\u53ef\u7528\u6570\u5b66\u65b9\u6cd5\u8bc1\u660e\uff09\n\n\n\u4e0b\u9762\u4e3a\u4ee3\u7801\n\n\n\u601d\u8def\u6211\u8bb2\u6e05\u695a\u4e86\n\n\n\u5c31\u4e0d\u52a0\u6ce8\u91ca\u4e86\u554a\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nint m,n,e,lp[1005],ans,match1[1005],match2[1005],curr1,curr2,lg[1005];\nbool map[1005][1005],pd1[1005],pd2[1005];\nint main()\n{\n    cin>>n>>m>>e;\n    for(int i=1;i<=e;i++)\n    {\n        int x,y;cin>>x>>y;\n        if(x>n||y>m)\tcontinue;\n        map[x][y]=true;\n        lp[x]++;\n        lg[y]++;\n    }\n    int v=max(m,n);\n    for(int k=1;k<=v;k++)\n    {\n        int minn=2e7;\n        for(int i=1;i<=n;i++)\n        {\n            if(!pd1[i]&&match1[i]==0&&lp[i]<minn)\n            {\n                curr1=i;\n                minn=lp[i];\n            }\n        }\n        minn=2e7;\n        for(int i=1;i<=m;i++)\n        {\n            if(!pd2[i]&&map[curr1][i]&&match2[i]==0&&lg[i]<minn)\n            {\n                minn=lg[i];\n                curr2=i;\n            }\n        }\n        match1[curr1]=curr2;\n        match2[curr2]=curr1;\n        if(match2[curr2]&&match1[curr1])\n        {\n            ans++;\n            for(int i=1;i<=n;i++)\n            {\n                if(map[i][curr2])\n                    lp[i]--;\n            }\n            for(int i=1;i<=m;i++)\n            {\n                if(map[curr1][i])\n                    lg[i]--;\n            }\n        }\n        else\n        {\n            pd1[curr1]=true;\n            pd2[curr2]=true;\n        }\n        curr1=0;curr2=0;\n    }\n    cout<<ans;\n} \n```\n\u53e6\u5916\n\n\u5982\u679c\u5927\u5bb6\u89c9\u5f97\u8fd9\u4e2a\u7b97\u6cd5\u6709\u8bef\n\n\n\u53ef\u4ee5\u79c1\u6211\n",
        "postTime": 1517303451,
        "uid": 55537,
        "name": "Parabola",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3386 \u3010\u3010\u6a21\u677f\u3011\u4e8c\u5206\u56fe\u5339\u914d\u3011"
    },
    {
        "content": "P\u515a\u6c34\u4e00\u53d1\n\n\u6807\u51c6Hungary\u7b97\u6cd5\n\n```pascal\nvar\n match:array[0..1001]of longint; //\u5b50\u96c6B\u4e2d\u5143\u7d20\u662f\u5426\u88ab\u5339\u914d\n used:array[0..1001]of boolean; //\u5b50\u96c6B\u4e2d\u5143\u7d20\u6240\u5bf9\u5e94\u7684\u5b50\u96c6A\u5143\u7d20\n a:array[0..1001,0..1001]of boolean; //\u90bb\u63a5\u77e9\u9635\u5b58\u8fb9\n i,j,k,n,m,l,ans,t:longint;\n\nfunction found(x:longint):boolean;  //\u627e\u589e\u5e7f\u8def\nvar\n i,j:longint;\nbegin\n for i:=1 to m do\n  if (a[x,i])and(not used[i]) then\n   begin\n    used[i]:=TRUE;\n    if (match[i]=0)or(found(i)) then  //\u70b9i\u672a\u5339\u914d\uff0c\u6216\u8005\u5339\u914d\u4e86\u4f46\u662f\u80fd\u5f15\u51fa\u53e6\u4e00\u6761\u589e\u5e7f\u8def\u5f84\n     begin\n      match[i]:=x;\n      exit(TRUE);\n     end;\n   end;\n exit(FALSE);\nend;\n\nbegin\n readln(n,m,t);\n for i:=1 to n do\n  for j:=1 to m do\n   a[i,j]:=FALSE;\n for i:=1 to t do\n  begin\n   readln(j,k);\n   if (j>n)or(k>m) then continue; //\u5e94\u5bf9\u5751\u4eba\u7684\u6570\u636e\n   a[j,k]:=TRUE;\n  end;\n ans:=0;\n fillchar(match,sizeof(match),0);\n for i:=1 to n do\n  begin\n   fillchar(used,sizeof(used),FALSE);  //\u6bcf\u6b21\u90fd\u8981\u6e05\u96f6\n   if found(i) then ans:=ans+1;  //\u627e\u5230\u589e\u5e7f\u8def\u5f84\u5339\u914d\u6570\u52a01\n  end;\n writeln(ans);\nend.\n```\n\u4e00\u904d\u8fc7\n\n\u867d\u7136\u901f\u5ea6\u4e0d\u662f\u5f88\u5feb\n",
        "postTime": 1486692173,
        "uid": 22558,
        "name": "deluxurous",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3386 \u3010\u3010\u6a21\u677f\u3011\u4e8c\u5206\u56fe\u5339\u914d\u3011"
    },
    {
        "content": "## \u601d\u8def\uff1a\n\n\u9996\u5148\u4e8c\u5206\u56fe\u662f\u4e00\u4e2a\u6c42\u4e00\u5806\u4e1c\u897f\uff08\u4f8b\u5982\u72d7\uff09\uff0c\u559c\u6b22\u4e00\u4e9b\u4e1c\u897f\uff08\u4f8b\u5982\u8089\uff09\uff0c\u4f46\u662f\u4ed6\u4eec\u559c\u6b22\u7684\u8089\u4e0d\u540c\uff0c\u6c42\u6700\u5927\u9650\u5ea6\u80fd\u6ee1\u8db3\u591a\u5c11\u6761\u72d7\u7684\u95ee\u9898\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u753b\u4e00\u4e2a\u56fe\uff0c\u628a\u72d7\u653e\u5728\u4e00\u4fa7\uff0c\u628a\u8089\u653e\u5728\u4e00\u4fa7\u3002 \u5982\u679c\u7b2c$i$\u53ea\u72d7\uff0c \u559c\u6b22\u7b2c$j$\u4e2a\u8089\uff0c\u90a3\u4e48\uff0c\u5c31\u4ece$i$ --->$j$\u8fde\u4e00\u6761\u6709\u5411\u8fb9\u3002 \u7136\u540e\uff0c \u6211\u4eec\u7528\u8d2a\u5fc3\u7684\u601d\u60f3\u8fdb\u884cdfs\u3002 \u6211\u4eec\u5b9a\u4e49$choose$[$i$]\u8868\u793a\u7b2c$i$\u4e2a\u8089\u88ab\u7b2c$choose$[$i$]\u4e2a\u72d7\u83b7\u5f97\u3002 \u7136\u540e\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a$vis$\u6570\u7ec4\uff0c\u9632\u6b62\u6b7b\u5faa\u73af\u3002 \u6211\u4eec\u679a\u4e3e$1$ ~ $n$\uff0c$dfs$\u5224\u65ad\u7b2c$i$\u53ea\u72d7\u80fd\u5426\u5403\u5230\u8089\u3002 $dfs$\u4e2d\uff0c\u6211\u4eec\u679a\u4e3e$i$\u6240\u559c\u6b22\u7684\u8089\uff0c\u5982\u679c\u7b2c$j$\u4e2a\u8089\u6ca1\u6709\u88ab\u5403 $||$ \u5403\u8fd9\u4e2a\u8089\u7684\u72d7\u53ef\u4ee5\u5403\u522b\u7684\u8089\uff0c\u90a3\u4e48\u5c31$return$ $1$\uff08\u53ca\u5f53\u524d\u72d7\u53ef\u4ee5\u5403\u5230\u8089\uff09\uff0c\u5426\u5219$return$ $0$\u3002 \u5982\u679c$return$ $1$\uff0c\u5c31$ans++$\uff08\u53ca\u53ef\u4ee5\u5403\u5230\u81ea\u5df1\u559c\u6b22\u7684\u8089\u7684\u72d7\u7684\u6570\u91cf$++$\uff09\u3002 \u6ce8\u610f\uff1a\u6bcf\u6b21$dfs$\u90fd\u8981\u628a$vis$\u6e05\u7a7a\u3002 \u6700\u540e\u7b54\u6848\u5c31\u662f$ans$\u3002\n\n## \u5168\u6587 + \u4ee3\u7801\uff1a\n\nhttps://www.cnblogs.com/qqq1112/p/11620774.html",
        "postTime": 1570175062,
        "uid": 143681,
        "name": "Strong_Jelly",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3386 \u3010\u3010\u6a21\u677f\u3011\u4e8c\u5206\u56fe\u5339\u914d\u3011"
    },
    {
        "content": "# P3386 \u3010\u6a21\u677f\u3011\u4e8c\u5206\u56fe\u5339\u914d\n\n[\u539f\u9898\u5730\u5740](https://www.luogu.org/problemnew/show/P3386)\n\n[GitHub\u9898\u89e3](https://github.com/jerrykcode/luogu)\n\n\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\uff0c\u5308\u7259\u5229\u7b97\u6cd5\uff0c\u4f7f\u7528DFS\u548cBFS\u5b9e\u73b0\uff0c\u53c2\u8003https://www.renfei.org/blog/bipartite-matching.html\n\n(\u597d\u50cf\u9898\u89e3\u91cc\u8fd8\u6ca1\u6709BFS\u5b9e\u73b0\u7684\u5308\u7259\u5229\u7b97\u6cd5)\n\n\u5728main\u51fd\u6570\u91cc\uff0c\n\n```cpp\nHungarian * hungarian;\n```\n\n\u4e0b\u4e00\u884c\u4f7f\u7528\n\n```cpp\nhungarian = new DFS();\n```\n\n\u6216\u8005\n\n```cpp\nhungarian = new BFS();\n```\n\n\u6765\u5207\u6362\u7b97\u6cd5(Hungarian\u4e3a\u5b9a\u4e49\u7eaf\u865a\u51fd\u6570\u7684\u62bd\u8c61\u7c7b\uff0cDFS\u548cBFS\u4e3a\u5b50\u7c7b)\u3002\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <vector>\n#include <queue>\nusing namespace std;\n\ntypedef unsigned int Vertex;\n#define NO_VERTEX 0xffffffff\n\nclass Hungarian {\npublic:\n    /*\n    \u8fd4\u56de\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\n    @param graph \u56fe\uff0c\u53ea\u8bb0\u5f55\u5de6\u8fb9\u9876\u70b9\u5230\u53f3\u8fb9\u9876\u70b9\u7684\u8fb9\n    @param left_num \u5de6\u8fb9\u9876\u70b9\u6570\u91cf\uff0c\u5de6\u8fb9\u9876\u70b9\u7f16\u53f7 0 ~ left_num - 1\n    @param right_num  \u53f3\u8fb9\u9876\u70b9\u6570\u91cf\uff0c\u53f3\u8fb9\u9876\u70b9\u7f16\u53f7 0 ~ right_num - 1\n    @return size_t \u6700\u5927\u5339\u914d\u6570\u91cf\n    */\n    virtual size_t maxMatching(vector<Vertex> * graph, size_t left_num, size_t right_num) = 0;\n\n    virtual ~Hungarian() {\n    \n    }\n};\n\n//DFS\u5b9e\u73b0\nclass DFS : public Hungarian {\npublic:\n    virtual size_t maxMatching(vector<Vertex> * graph, size_t left_num, size_t right_num);\nprivate:\n    bool dfs(Vertex v);\n\n    vector<Vertex> * graph_;\n    Vertex * matching_;\n    bool * visited_;\n    size_t match_num_;\n};\n\nsize_t DFS::maxMatching(vector<Vertex>* graph, size_t left_num, size_t right_num) {\n    graph_ = graph;\n    matching_ = new Vertex[right_num]; //matching_\u662f\u53f3\u8fb9\u9876\u70b9\u5339\u914d\u7684\u5de6\u8fb9\u9876\u70b9\uff0c\u6570\u7ec4\u5927\u5c0f\u4e3aright_num\n    fill(matching_, matching_ + right_num, NO_VERTEX);\n    visited_ = new bool[right_num]; //visited_\u6807\u8bb0\u53f3\u8fb9\u9876\u70b9\n    match_num_ = 0;\n    for (size_t i = 0; i < left_num; i++) {\n        fill(visited_, visited_ + right_num, false);\n        if (dfs(i)) {\n            match_num_++;\n        }\n    }\n    free(matching_);\n    free(visited_);\n    return match_num_;\n}\n\nbool DFS::dfs(Vertex v) {\n    Vertex adj_v;\n    for (auto it = graph_[v].begin(); it != graph_[v].end(); it++) {\n        adj_v = *it;\n        if (!visited_[adj_v]) {\n            visited_[adj_v] = true;\n            if (matching_[adj_v] == NO_VERTEX || dfs(matching_[adj_v])) { //adj_v\u6ca1\u6709\u5339\u914d\u6216\u8005adj_v\u7684\u5339\u914d\u53ef\u4ee5\u627e\u5230\u5176\u4ed6\u5339\u914d\n                matching_[adj_v] = v;\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\n//BFS\u5b9e\u73b0\nclass BFS : public Hungarian {\npublic:\n    virtual size_t maxMatching(vector<Vertex> * graph, size_t left_num, size_t right_num);\nprivate:\n\n    Vertex * left_matching_;\n    Vertex * right_matching_;\n\n    queue<Vertex> vqueue_;\n    Vertex * pre_;\n    bool * visited_;\n};\n\nsize_t BFS::maxMatching(vector<Vertex>* graph, size_t left_num, size_t right_num) {\n    left_matching_ = new Vertex[left_num]; //\u5de6\u8fb9\u9876\u70b9\u5339\u914d\u7684\u9876\u70b9\n    fill(left_matching_, left_matching_ + left_num, NO_VERTEX);\n    right_matching_ = new Vertex[right_num]; //\u53f3\u8fb9\u9876\u70b9\u5339\u914d\u7684\u9876\u70b9\n    fill(right_matching_, right_matching_ + right_num, NO_VERTEX);\n    pre_ = new Vertex[left_num]; //BFS\u4e2d\u5de6\u8fb9\u9876\u70b9\u7684\u524d\u9a71\n    visited_ = new bool[right_num]; //\u53f3\u8fb9\u9876\u70b9\u662f\u5426\u8bbf\u95ee\u8fc7\n    size_t result = 0;\n    for (Vertex i = 0; i < left_num; i++) { //\u904d\u5386\u5de6\u8fb9\u9876\u70b9\n        fill(visited_, visited_ + right_num, false); //\u521d\u59cb\u5316\u53f3\u8fb9\u6240\u6709\u9876\u70b9\u6ca1\u6709\u8bbf\u95ee\u8fc7\t\t\n        vqueue_.push(i);\n        pre_[i] = NO_VERTEX; // i \u6ca1\u6709\u524d\u9a71\n        Vertex front_v, adj_v;\n        while (!vqueue_.empty()) {\n            front_v = vqueue_.front(); //\u51fa\u961f\u7684\u9876\u70b9\n            vqueue_.pop();\n            for (auto it = graph[front_v].begin(); it != graph[front_v].end(); it++) { //\u904d\u5386\u90bb\u63a5\u70b9\n                adj_v = *it; //\u90bb\u63a5\u70b9(\u53f3\u8fb9\u9876\u70b9)\n                if (!visited_[adj_v]) {\n                    visited_[adj_v] = true;\n                    if (right_matching_[adj_v] != NO_VERTEX) { //adj_v\u5df2\u7ecf\u5339\u914d\n                        vqueue_.push(right_matching_[adj_v]); //adj_v\u5339\u914d\u5230\u7684\u9876\u70b9(\u5de6\u8fb9)\u5165\u961f\n                        pre_[right_matching_[adj_v]] = front_v; //\u8bb0\u5f55\u524d\u9a71\uff0c\u5373\u82e5right_matching_[adj_v]\u53ef\u4ee5\u627e\u5230\u5176\u4ed6\u5339\u914d\uff0c\u5219front_v\u4e0eadj_v\u5339\u914d\n                    }\n                    else { //adj_v\u6ca1\u6709\u5339\u914d\n                        Vertex from = front_v, to = adj_v, tmp;\n                        while (from != NO_VERTEX) {\n                            tmp = left_matching_[from]; //from\u539f\u6765\u7684\u5339\u914d(\u53f3\u8fb9\u9876\u70b9)\n                            left_matching_[from] = to; //from \u4e0e to \u5339\u914d\n                            right_matching_[to] = from; //from \u4e0e to \u5339\u914d\n                            //from\u627e\u5230\u5339\u914d\uff0c\u5219pre_[from]\u4e0efrom\u539f\u6765\u7684\u5339\u914d\u5373tmp\u5339\u914d\uff0c\u66f4\u65b0from\u4e0eto\u8fdb\u5165\u4e0b\u6b21\u5faa\u73af,            \\\n                            \u82e5from\u4e4b\u524d\u5e76\u6ca1\u6709\u5339\u914d\uff0c\u5219pre_[from]\u4e3aNO_VERTEX\uff0c\u4e0b\u4e00\u6b21\u5faa\u73af\u5c31\u4f1a\u9000\u51fa\n                            from = pre_[from]; \n                            to = tmp;\n                        }\n                        while (!vqueue_.empty()) vqueue_.pop(); //\u6e05\u7a7a\u961f\u5217\n                        goto NEXT;\n                    } //else\n                } //if\n            } //for\n        } //while\n    NEXT:\n        if (left_matching_[i] != NO_VERTEX) result++;\n    } //for\n    free(left_matching_);\n    free(right_matching_);\n    free(pre_);\n    free(visited_);\n    return result;\n}\n\nint main() {\n    unsigned int n, m, e;\n    scanf(\"%u %u %u\", &n, &m, &e);\n    vector<Vertex> * graph = new vector<Vertex>[n];\n    Vertex u, v;\n    for (size_t i = 0; i < e; i++) {\n        scanf(\"%u %u\", &u, &v);\n        if (u > n || v > m) continue;\n        u--; v--;\n        graph[u].push_back(v);\n    }\n    Hungarian * hungarian;\n    //hungarian = new DFS();\n    hungarian = new BFS();\n    unsigned int max_matching = hungarian->maxMatching(graph, n, m);\n    printf(\"%u\", max_matching);\n    for (size_t i = 0; i < n; i++)\n        vector<Vertex>().swap(graph[i]);\n    delete hungarian;\n    return 0;\n}\n```\n\n\n",
        "postTime": 1560087381,
        "uid": 194439,
        "name": "rediserver",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3386 \u3010\u3010\u6a21\u677f\u3011\u4e8c\u5206\u56fe\u5339\u914d\u3011"
    },
    {
        "content": "### Link:[\u9898\u76ee](https://www.luogu.org/problemnew/show/P3386)\n\n---------------\n\n## \u9898\u76ee\u5927\u610f\n\n   \u6211\u4eec\u9700\u8981\u505a\u7684\uff0c\u5c31\u662f**\u627e\u5230\u4e00\u79cd\u8fde\u8fb9\u7684\u65b9\u5f0f\uff0c\u4f7f\u5f97\u4efb\u610f\u4e00\u4e2a\u70b9\u7684\u5ea6\u6700\u591a\u4e3a1\uff0c\u4e14\u8fb9\u6570\u6700\u5927\u3002**\n\n   \u7ed9\u51fa\u4e00\u7ec4\u6570\u636e\uff1a\n\n    input\uff1a                              output\uff1a \n    3 4 5                                 3\n    1 1\n    1 2\n    2 1\n    1 4\n    3 3                                 \n    \n  ![](https://img2018.cnblogs.com/blog/1604911/201902/1604911-20190219080733792-1141853232.jpg)\n  \n  \u6b64\u65f6\uff0c\u65b9\u6848\u5927\u81f4\u662f\u8fd9\u6837\u7684\uff08\u5f53\u7136\u8fd8\u6709\u5176\u4ed6\u9009\u6cd5\uff09\u3002\n\n   \u6211\u4eec\u662f\u5982\u4f55\u627e\u51fa\u8fd9\u79cd\u5339\u914d\u65b9\u5f0f\u7684\u5462\uff1f\u6b64\u65f6\uff0c\u5c31\u8981\u5f15\u5165**\u5308\u7259\u5229\u7b97\u6cd5**\u3002\n    \n## \u5308\u7259\u5229\u7b97\u6cd5\u6d41\u7a0b\n\n   1.\u9996\u5148\u679a\u4e3e\u4e00\u4e2a\u8282\u70b9\u7684\u6240\u6709\u8fb9\uff0c\u5982\u679c\u5f53\u524d\u8fb9\u5bf9\u5e94\u7684\u8282\u70b9\u4e0d\u5728\u5339\u914d\u5e8f\u5217\uff0c\u5219\u52a0\u5165\u5bf9\u5e94\u8282\u70b9\uff0c\u8fd4\u56de\u5339\u914d\u6210\u529f\u3002\n\n   2.\u5982\u679c\u5f53\u524d\u6ca1\u6709\u5339\u914d\u6210\u529f\uff0c\u4e14\u5bf9\u5e94\u70b9\u5728\u4e4b\u524d\u7684\u5339\u914d\u5e8f\u5217\uff08\u4e0d\u5728\u5f53\u524d\uff09\uff0c\u5219\u91cd\u65b0\u5339\u914d\u5bf9\u5e94\u70b9\uff0c\u6267\u884c1\u3002\n\n   3.\u6267\u884c\u5b8c1,2,\u5747\u672a\u5339\u914d\u6210\u529f\uff0c\u8fd4\u56de\u5931\u8d25\u3002\n\n   \u4e0b\u9762\u6211\u4eec\u6765\u6a21\u62df\u4e00\u4e0b\u6837\u4f8b\u6570\u636e\u3002\n\n   \u9996\u5148\u8fd9\u662f\u539f\u56fe\n   \n![](https://img2018.cnblogs.com/blog/1604911/201902/1604911-20190219081951192-1040424876.jpg)\n   \n   \u641c\u7d22\u5de6\u8fb9\u7b2c\u4e00\u4e2a\u8282\u70b9\uff0c\u627e\u5230\u4e00\u6761\u6ca1\u6709\u5339\u914d\u8fc7\u7684\u8fb9\uff0c\u52a0\u5165\u5339\u914d\u5e8f\u52171\u3002\n   \n![](https://img2018.cnblogs.com/blog/1604911/201902/1604911-20190219082308578-422619320.jpg)\n   \n   \u641c\u7d22\u7b2c\u4e8c\u4e2a\u8282\u70b9\uff0c\u627e\u5230\u4e00\u6761\u5339\u914d\u8fc7\u7684\u8fb9\uff0c\u4f46\u4e0d\u5728\u5339\u914d\u5e8f\u52172\uff0c\u91cd\u65b0\u641c\u7d22\u8282\u70b91...\uff0c\u6700\u540e\u8fd4\u56de\u6210\u529f\u3002\n   \n![](https://img2018.cnblogs.com/blog/1604911/201902/1604911-20190219082649420-1152454670.jpg)\n\n   \u641c\u7d22\u7b2c\u4e09\u4e2a\u8282\u70b9\uff0c\u627e\u5230\u53ef\u4ee5\u5339\u914d\u7684\u8fb9\uff0c\u8fd4\u56de\u6210\u529f\u3002\n   \n![](https://img2018.cnblogs.com/blog/1604911/201902/1604911-20190219082807082-363577090.jpg)\n\n   \u7b97\u6cd5\u7ed3\u675f\u3002\n   \n![](https://img2018.cnblogs.com/blog/1604911/201902/1604911-20190219083604383-923467025.jpg)\n\n\n\u6700\u540e\u9644\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<stdio.h>\n#define N 1007\nstruct E{\n    int next,to;\n}e[N*N];\nint cnt=0,head[N],n,m,num,timeq=0,dfn[N],match[N],ans=0;\ninline void read(int &x){\n    x=0;char c=getchar();\n    while(c<'0'||c>'9') c=getchar();\n    while(c>='0'&&c<='9'){x=x*10+c-48;c=getchar();}\n}\ninline void add(int id,int to){//\u524d\u5411\u661f\u5b58\u56fe \n    cnt++;\n    e[cnt].next=head[id];\n    e[cnt].to=to;\n    head[id]=cnt;\n}\ninline bool dfs(int u){//\u7b97\u6cd5\u6838\u5fc3 \n    for(int i=head[u];i;i=e[i].next){//\u904d\u5386 \n        int v=e[i].to;\n        if(dfn[v]==timeq) continue;//\u5982\u679c\u5df2\u5728\u5f53\u524d\u5339\u914d\u5e8f\u5217\uff0c\u5219\u76f4\u63a5\u8fd4\u56de \n        dfn[v]=timeq;//\u52a0\u5165\u5f53\u524d\u5339\u914d\u5e8f\u5217 \n        if(!match[v]||dfs(match[v])){//\u5982\u679c\u6ca1\u6709\u5339\u914d\u8fc7\uff0c\u6216\u8005\u91cd\u65b0\u641c\u7d22\u5bf9\u5e94\u70b9\u8fd4\u56de\u6210\u529f \n            match[v]=u;//\u5339\u914d \n            return true;//\u5339\u914d\u6210\u529f \n        }\n    }\n    return false;//\u5339\u914d\u5931\u8d25 \n}\nint main(){\n    read(n);read(m);read(num);\n    for(int i=1;i<=num;i++){\n        int x,y;\n        read(x);read(y);\n    //    if((x>n)||(y>m)) continue;\n        add(x,y);//\u5efa\u7acb\u5355\u5411\u8fb9\u5c31\u591f\u4e86\uff0c\u56e0\u4e3a\u4e0d\u4f1a\u4ece\u53f3\u8fb9\u7684\u8282\u70b9\u5f00\u59cb\u8bbf\u95ee \n    }\n    for(int i=1;i<=n;i++){\n        timeq++;//\u66f4\u65b0\u5e8f\u5217\u7f16\u53f7 \n        if(dfs(i)) ans++;//\u641c\u7d22\u5f53\u524d\u8282\u70b9 \n    }\n    printf(\"%d\",ans);\n}\n```",
        "postTime": 1550536751,
        "uid": 83337,
        "name": "wwlw",
        "ccfLevel": 7,
        "title": "[\u6a21\u677f]\u4e8c\u5206\u56fe\u5339\u914d"
    },
    {
        "content": "\u4e8c\u5206\u56fe\u5339\u914d\u7684\u5e38\u7528\u7b97\u6cd5\u6709\u5308\u7259\u5229\u7b97\u6cd5\u548cDinic\u7b97\u6cd5\uff0c\u8fd9\u91cc\u53ea\u8ba8\u8bba\u524d\u8005\u3002\n\n------------\n\n\u6240\u8c13\u4e8c\u5206\u56fe\uff0c\u5c31\u662f\u6307\u4e00\u7c7b\u80fd\u591f\u88ab\u5206\u6210\u4e24\u534a\u7684\u56fe\uff0c\u5176\u4e2d\u6bcf\u4e00\u534a\u7684\u70b9\u90fd\u6ca1\u6709\u4efb\u4f55\u8fb9\u8fde\u63a5\u3002\n\n\u800c\u4e8c\u5206\u56fe\u7684\u5339\u914d\uff0c\u5c31\u662f\u6307\u4e8c\u5206\u56fe\u7684\u4e00\u4e2a\u5b50\u56fe\u4e2d\u4efb\u610f\u4e24\u6761\u8fb9\u90fd\u6ca1\u6709\u516c\u5171\u70b9\u3002\uff08\u8fd9\u4e2a\u5b50\u56fe\u5c31\u662f\u4e00\u4e2a\u5339\u914d\uff09\n\n\u672c\u9898\u6c42\u7684\u662f\u6700\u5927\u5339\u914d\u6570\uff0c\u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u5339\u914d\u4e2d\u8fb9\u6570\u6700\u5927\u4e3a\u591a\u5c11\u3002\n\n------------\n\n\u5308\u7259\u5229\u7b97\u6cd5\u7684\u672c\u8d28\u662f\u8d2a\u5fc3\u3002\u6211\u4eec\u6bcf\u4e00\u6b21\u90fd\u627e\u4e00\u6761\u589e\u5e7f\u8def\uff0c\u7136\u540e\u518d\u53d6\u53cd\u5bfb\u627e\u6bd4\u5f53\u524d\u5339\u914d\u66f4\u5927\u7684\u5339\u914d\u3002\u6ca1\u6709\u589e\u5e7f\u8def\u5c31\u7ed3\u675f\u3002\n\n\u767e\u5ea6\u767e\u79d1\u662f\u8fd9\u6837\u5b9a\u4e49\u589e\u5e7f\u8def\u7684\uff1a\n\n```\n\u82e5P\u662f\u56feG\u4e2d\u4e00\u6761\u8fde\u901a\u4e24\u4e2a\u672a\u5339\u914d\u9876\u70b9\u7684\u8def\u5f84\uff0c\u5e76\u4e14\u5c5e\u4e8eM\u7684\u8fb9\u548c\u4e0d\u5c5e\u4e8eM\u7684\u8fb9(\u5373\u5df2\u5339\u914d\u548c\u5f85\u5339\u914d\u7684\u8fb9)\u5728P\u4e0a\u4ea4\u66ff\u51fa\u73b0\uff0c\u5219\u79f0P\u4e3a\u76f8\u5bf9\u4e8eM\u7684\u4e00\u6761\u589e\u5e7f\u8def\u5f84\uff08\u4e3e\u4f8b\u6765\u8bf4\uff0c\u6709A\u3001B\u96c6\u5408\uff0c\u589e\u5e7f\u8def\u7531A\u4e2d\u4e00\u4e2a\u70b9\u901a\u5411B\u4e2d\u4e00\u4e2a\u70b9\uff0c\u518d\u7531B\u4e2d\u8fd9\u4e2a\u70b9\u901a\u5411A\u4e2d\u4e00\u4e2a\u70b9\u2026\u2026\u4ea4\u66ff\u8fdb\u884c\uff09\u3002\n```\n\n![](https://gss3.bdstatic.com/7Po3dSag_xI4khGkpoWK1HF6hhy/baike/c0%3Dbaike80%2C5%2C5%2C80%2C26/sign=80eafc26dd00baa1ae214fe92679d277/63d0f703918fa0ec172d55c72a9759ee3c6ddb15.jpg)\n\n------------\n\n### \u5b9e\u73b0\n\n\u6211\u4eec\u4f7f\u7528DFS\u5b9e\u73b0\u5308\u7259\u5229\u7b97\u6cd5\u3002\n\n```cpp\ninline bool dfs(int u){\n    for(int v=1;v<=m;v++)\n        if(t[u][v]&&!vis[v]){\n            vis[v]=1;\n            if(cy[v]==-1||dfs(cy[v])){\n                cx[u]=v;cy[v]=u;\n                return 1;\n            }\n        }\n    return 0;\n}\n```\n\n\u8fd9\u6bb5\u4ee3\u7801\u5bfb\u627e\u4eceu\u51fa\u53d1\u7684\u589e\u5e7f\u8def\u3002\n\n\u9996\u5148\u6211\u4eec\u5148\u679a\u4e3e\u4e0eu\u6709\u8fde\u63a5\u7684\u6240\u6709\u8282\u70b9\u3002\n\n\u7136\u540e\u5982\u679c\u672a\u8bbf\u95ee\u5c31\u8fdb\u53bb\u901b\u4e00\u901b\u3002\n\n\u5982\u679c\u53d1\u73b0\u8fd9\u4e2a\u8282\u70b9\u8fd8\u6ca1\u6709\u88ab\u5339\u914d\u6216\u8005\u8bf4\u5b58\u5728\u4ece\u5b83\u51fa\u53d1\u7684\u589e\u5e7f\u8def\uff0c\u90a3\u5c31\u8df3\u8fdb\u53bb\u3002\u56de\u6eaf\u65f6\u8fd4\u56detrue\uff0c\u8868\u793a\u5b58\u5728\u4eceu\u51fa\u53d1\u7684\u589e\u5e7f\u8def\u3002\n\n\u5982\u679c\u901b\u4e86\u4e00\u5708\u4e00\u4e2a\u8282\u70b9\u90fd\u4e0d\u884c\uff0c\u90a3\u5c31\u8fd4\u56defalse\uff0c\u56e0\u4e3a\u6ca1\u6709\u4eceu\u51fa\u53d1\u7684\u589e\u5e7f\u8def\u3002\n\n```cpp\nfor(int i=0;i<=nx;i++) \n\tif(cx[i]==-1){ \n    \tmemset(visit,false,sizeof(visit)) ; \n        ans += dfs(i); \n    }\n```\n\n\u5728\u4e3b\u7a0b\u5e8f\u4e2d\u6211\u4eec\u8fc7\u4e00\u904d\u6240\u6709\u70b9\uff0c\u5982\u679c\u5f53\u524d\u672a\u5339\u914d\u5c31dfs\u4e00\u4e0b\uff0c\u7136\u540e\u6839\u636edfs\u8fd4\u56de\u503c\u66f4\u65b0\u7b54\u6848\u3002",
        "postTime": 1536059444,
        "uid": 38859,
        "name": "Nero_Claudius",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3386 \u3010\u3010\u6a21\u677f\u3011\u4e8c\u5206\u56fe\u5339\u914d\u3011"
    },
    {
        "content": "\u597d\u50cf\u6ca1\u6709\u4eba\u53d1Ford-Fulkerson\uff0c\u6211\u6765\u4e00\u53d1\uff0c\n\u8fd9\u9053\u9898\u548cP2756\u98de\u884c\u5458\u914d\u5bf9\u65b9\u6848\u95ee\u9898\u65b9\u6cd5\u4e00\u6837\uff0c\u7f51\u7edc\u6d41\u5927\u6cd5\u597d\u3002\n~~\uff08\u52ff\u55b7\uff09~~\n\n\n------------\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int inf=0x3f3f3f3f;\nconst int Max=3000;\nstruct node{\n\tint to,cap,rev;\n};\nvector<node> v[Max];\nbool used[Max];\nint n,m,e;\nvoid add_node(int a,int b,int c) //\u52a0\u8fb9\n{\n\tv[a].push_back((node){b,c,v[b].size()});\n\tv[b].push_back((node){a,0,v[a].size()-1});\n}\nint dfs(int s,int t,int f) //Ford\u2014Fulkerson\n{\n\tif(s==t) //\u6e90\u70b9\u548c\u6c47\u70b9\u76f8\u540c\uff0c\u6d41\u91cf\u65e0\u9650\n\t\treturn f;\n\tused[s]=true;\n\tfor(int i=0;i<v[s].size();++i)\n\t{\n\t\tnode &tmp=v[s][i]; //\u592a\u957f\u4e86\u3002\u3002\u3002\n\t\tif(used[tmp.to]==false&&tmp.cap>0)\n\t\t{\n\t\t\tint d=dfs(tmp.to,t,min(f,tmp.cap));\n\t\t\tif(d>0) //\u6dfb\u52a0\u53cd\u5411\u8fb9\n\t\t\t{\n\t\t\t\ttmp.cap-=d;\n\t\t\t\tv[tmp.to][tmp.rev].cap+=d;\n\t\t\t\treturn d;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\nint maxflow(int s,int t) //Ford-Fulkerson\u6c42\u7f51\u7edc\u6700\u5927\u6d41\n{\n\tint flow=0;\n\twhile(1)\n\t{\n\t\tmemset(used,false,sizeof(used));\n\t\tint f=dfs(s,t,inf);\n\t\tif(f==0)\n\t\t\treturn flow;\n\t\tflow+=f;\n\t}\n}\nint main()\n{\n\tcin>>n>>m>>e;\n\tfor(int i=1;i<=n;++i) //\u5efa\u56fe\n\t\tadd_node(0,i,1);\n\tfor(int i=n+1;i<=n+m;++i)\n\t\tadd_node(i,n+m+1,1);\n\tfor(int i=1;i<=e;++i)\n\t{\n\t\tint a,b;\n\t\tcin>>a>>b;\n\t\tif(a<=n&&b<=m) //\u6570\u636e\u6709\u6bd2\uff0c\u4e00\u5b9a\u8981\u52a0\u3002\n\t\t    add_node(a,n+b,1);//\u4e00\u5b9a\u8981\u52a0n\uff1b\n\t}\n\tcout<<maxflow(0,m+n+1)<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1532498384,
        "uid": 37881,
        "name": "yzhang",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3386 \u3010\u3010\u6a21\u677f\u3011\u4e8c\u5206\u56fe\u5339\u914d\u3011"
    },
    {
        "content": "//\u672c\u9898\u4e3a\u7b80\u5355\u7684\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u6a21\u677f\uff0c\u5308\u7259\u5229\u7b97\u6cd5\uff0c\u53ea\u641c\u7d22\u4e8c\u5206\u56fe\u53f3\u8fb9\u7684\u70b9\u5373\u53ef\uff1b\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<vector>\nusing namespace std;\nint n,m,e;\nvector<int>q[1006];//\u7528\u4e0d\u5b9a\u957f\u6570\u7ec4\u5b58\u50a8\u5de6\u8fb9\u7684\u5404\u70b9\u8ddf\u53f3\u8fb9\u7684\u76f8\u8fde\u7684\u70b9\nint sum=0;\nint vis[1005];\nint ma[1005];\nint dfs(int p)\n{\n    for(int i=0;i<q[p].size();i++)\n    {                                                  //\u626b\u63cf\u5f53\u524d\u70b9\u7684\u76f8\u8fde\u7684\u70b9\n        if(!vis[q[p][i]])\n        {\n            vis[q[p][i]]=1;\n            if(!ma[q[p][i]]||dfs(ma[q[p][i]]))\n            {\n                ma[q[p][i]]=p;                              //\u5308\u7259\u5229\u7b97\u6cd5\u66f4\u65b0\u914d\u5bf9\u72b6\u6001\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\nint main()\n{\n    cin>>n>>m>>e;\n    int x,y;\n    for(int i=1;i<=e;i++)\n    {\n        scanf(\"%d%d\",&x,&y);\n        if(x>n||y>m)\n        continue;//\u8df3\u8fc7\u90e8\u5206\u5047\u6570\u636e\uff0c\u5982\u679c\u4e0d\u8df3\u7684\u8bdd\u53ea\u80fd\u8dd1\u8fc76\u4e2a\u70b9\u597d\u50cf\u3002\n        q[x].push_back(y);\n    }\n    for(int i=1;i<=n;i++)\n    {\n        if(i>=2)\n        for(int j=0;j<q[i-1].size();j++)//\u6e05\u7a7avis\u6807\u8bb0\u6570\u7ec4\uff0c\u56e0\u4e3a\u6211\u7528vector\uff0c\u6240\u4ee5\u53ea\u6e05\u7a7a\u4e0a\u4e00\u4e2a\u70b9\u8fde\u8fc7\u7684\u53f3\u8fb9\u7684\u70b9\u5c31\u53ef\u4ee5\uff0c\n        vis[q[i-1][j]]=0;//\u907f\u514d\u6bcf\u4e00\u6b21\u90fd\u8981\u6e05\u7a7a\u6240\u6709\u70b9\u7684\u6807\u8bb0\n        if(dfs(i))//\u5982\u679c\u53ef\u4ee5\u627e\u5230\u589e\u5e7f\u8def\u7684\u8bdd\uff0c\u7ed3\u679c\u52a011\n        sum++;\n    }\n    cout<<sum;\n    return 0;\n}\n```",
        "postTime": 1509610430,
        "uid": 20437,
        "name": "StilllFantasy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3386 \u3010\u3010\u6a21\u677f\u3011\u4e8c\u5206\u56fe\u5339\u914d\u3011"
    },
    {
        "content": "\u7b97\u6cd5\uff1a\u5308\u7259\u5229\u7b97\u6cd5\u6c42\u4e8c\u5206\u56fe\u3002\n\n\u4e8c\u5206\u56fe\u4e2d\u7684\u8fb9\u53ea\u80fd\u8fde\u63a5\u4e0d\u540c\u4fa7\u7684\u70b9,\u540c\u4fa7\u7684\u70b9\u662f\u4e0d\u80fd\u4e92\u76f8\u8fde\u63a5\u7684,\u800c\u4e14\u5308\u7259\u5229\u7b97\u6cd5\u53ef\u4ee5\u641c\u7d22\u5176\u4e2d\u4e00\u8fb9,\n\n\u4f18\u5316\uff1a\u8bb0\u5f55\u4e00\u4e2a\u70b9\u8fde\u4e86\u51e0\u6761\u8fb9\uff0c\u907f\u514d\u4ece1\u641c\u5230m\n\n```cpp\nfor i:=1 to e do\n   begin\n    readln(u,v);\n    if (v>m) or (u>n) then continue;//\u8fc7\u6ee4\u6570\u636e\n    num[u]:=num[u]+1;//\u5b58u\u8fd9\u4e2a\u70b9\u8fde\u4e86\u51e0\u6761\u8fb9\n    a[u,num[u]]:=v;\n   end;\n```\n-----------------------------------------------------------------------------------------------------------\n\u6211\u5f00\u59cb\u4ee5\u4e3a\u8981\u4e24\u8fb9\u90fd\u641c\u7d22\uff0c\u4f46\u5176\u5b9e\u53ea\u7528\u641c\u7d22\u4e00\u8fb9\n\n\u6211\u4eec\u4ece\u5de6\u8fb9\u5f00\u59cb\u641c\uff0c\u5f53\u6211\u4eec\u641c\u5230\u53f3\u8fb9\u7684\u70b9\u65f6\uff0c\u82e5\u53f3\u8fb9\u7684\u70b9\u5df2\u88ab\u5339\u914d\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u641c\u7d22\u5b83\u5339\u914d\u7684\u90a3\u4e2a\u70b9\uff0c\u8fd9\u6837\u5c31\u56de\u5230\u4e86\u5de6\u8fb9\u3002\n\n\n------------------------------\u4ee3\u7801\u5982\u4e0b----------------------------------\n\n\n\n\n```cpp\nvar n,m,e,i,sum,v,u,qq,j:longint;\n    a:array[-2..1001,-2..1001] of longint;\n    link,num:array[-2..4002] of longint;//num\u8bb0\u5f55\u5de6\u8fb9\u6bcf\u4e00\u4e2a\u70b9\u8fde\u4e86\u51e0\u6761\u8fb9\uff0clink\u8bb0\u5f55\u5339\u914d\u8fb9\n    b:array[-2..10001] of boolean;//\u5224\u65ad\u662f\u8be5\u70b9\u662f\u5426\u7528\u8fc7\n  function find(k:longint):boolean;\n   var i,q:longint;\n    begin\n      for i:=1 to num[k] do\n       begin\n        qq:=a[k,i];\n       if b[qq]=false then\n        begin\n       b[qq]:=true;\n         if (link[qq]=0) or find(link[qq]) then\n        begin\n         link[qq]:=k;\n         exit(true);\n        end;\n        end;\n     end;\n    exit(false);\n    end;\n begin\n  readln(n,m,e);\n  for i:=1 to e do//\u5904\u7406\u6570\u636e\n   begin\n    readln(u,v);\n    if (v>m) or (u>n) then continue;\n    num[u]:=num[u]+1;\n    a[u,num[u]]:=v;\n   end;\n   sum:=0;\n  for i:=1 to n do//\u679a\u4e3e\uff0c\u8fd9\u91cc\u679a\u4e3e\u7684\u662f\u70b9\uff0c\u4f46\u8fdb\u5165find\u51fd\u6570\u540e\uff0c\u679a\u4e3e\u7684\u8fd8\u662f\u4ee5i\u70b9\u4e3a\u7aef\u70b9\u7684         \u8fb9\u3002\u5c31\u662f\u8981\u628ai\u70b9\u52a0\u5165\u589e\u5e7f\u8def\u4e2d\n   begin\n    for j:=1 to m do b[j]:=false;\n    if find(i) then sum:=sum+1;\n   end;\n write(sum);\nend.\n```\n----------------------------------------------------------------------------------------\n\u8017\u65f6427ms\n\n\u867d\u7136\u6bd4\u7f51\u7edc\u6d41\u6162\uff0c\u4f46\u8fd8\u662f\u53ef\u4ee5\u63a5\u53d7\n",
        "postTime": 1508684270,
        "uid": 11236,
        "name": "\u671dL\u5915",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3386 \u3010\u3010\u6a21\u677f\u3011\u4e8c\u5206\u56fe\u5339\u914d\u3011"
    },
    {
        "content": "\u8868\u793a\u5e76\u4e0d\u662f\u5f88\u61c2\u4e3a\u4f55\u5927\u4f6c\u4eec\u603b\u7231\u628avis\u5f04\u6210bool\uff0c\u96be\u9053memset\u4e0d\u8981\u65f6\u95f4\u5417\uff0c\u5206\u4eab\u4e00\u4e0b\u6211\u7684\uff0c\u5927\u4f53\u6ca1\u53d8\uff0c\u8fd8\u662f\u5308\u7259\u5229\uff0c\u4f46\u662f\u628avis\u6539\u6210int\u7c7b\uff0c\u907f\u5f00memset\u7684\u95ee\u9898\uff1a\n\n            \n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn=12306;\nint lnk[maxn],used[maxn];\nvector<int> divide[maxn];//\u9886\u63a5\u77e9\u9635\u597d\u5199\u554a\nint n,m,e,ans;\ninline int read() //\u5ffd\u7565\u6389\u8fd9\u4e2a\u5feb\u8bfb\n{\n    int x=0; char ch=getchar();\n    while(ch<'0'||ch>'9')ch=getchar();\n    while(ch>='0'&&ch<='9'){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();}\n    return x;\n}\nbool Find(int x,int f)\n{\n    for(int i=0;i<divide[x].size();i++)\n    {\n        int v=divide[x][i];\n        if(used[v]!=f)//\u5f53\u524d\u5339\u914d\u7684\u4e0d\u662ff\uff0c\u672c\u8f6e\u8fd8\u6ca1\u7528\u8fc7\n        {\n            used[v]=f;\n            if(lnk[v]==-1||Find(lnk[v],f))//\u53ef\u4ee5\u8ba9\u6b65\u6216\u540d\u82b1\u65e0\u4e3b\n            {\n                lnk[v]=x;//\u5339\u914d\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\nint main()\n{\n    n=read();m=read();e=read();\n    memset(lnk,-1,sizeof(lnk));\n    for(int i=1,a,b;i<=e;i++)\n    {\n        a=read();b=read();\n        if(b>m||a>n)  continue;\n        divide[a].push_back(b);\n    }\n    for(int i=1;i<=n;i++)\n    {\n        if(Find(i,i))//\u7701\u6389\u4e86memset\n          ans++;\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1506146455,
        "uid": 34332,
        "name": "KKarshilov",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3386 \u3010\u3010\u6a21\u677f\u3011\u4e8c\u5206\u56fe\u5339\u914d\u3011"
    },
    {
        "content": "\u4e8c\u5206\u56fe\u6211\u4ece\u4e0d\u6253\u5308\u7259\u5229= =\n\n\u5168\u90e8\u90fd\u662f\u6253\u7f51\u7edc\u6d41\uff0c\u6700\u8fd1\u5b66\u4e86\u4e0bISAP\uff0c\u867d\u8bf4\u5728\u7f51\u7edc\u6d41\u6a21\u677f\u8dd1\u7684\u98de\u5feb\uff0c\u4f46\u8fd9\u91cc\u597d\u50cf\u5e38\u6570\u5199\u7684\u6bd4\u8f83\u5927\uff0c11\u4e2a\u70b9\u8dd1\u4e86296ms\uff0c\u4e0d\u77e5\u9053\u697c\u4e0b\u8bf4\u768430ms\u662f\u600e\u4e48\u8dd1\u51fa\u6765\u7684\u3002\u6211\u770b\u8bc4\u6d4b\u8bb0\u5f55\u91cc\u6709\u4e2a\u5308\u7259\u5229\u7b97\u6cd5\u8dd1\u4e86244ms\uff0c\u6bd4\u6211\u8fd9\u8fd8\u5feb\u3010\u624b\u52a8\u6ed1\u7a3d\u3011\n\n\n\u5efa\u7acb\u4e00\u4e2a\u8d85\u6e90\u70b9\u4e0e\u8d85\u6c47\u70b9\uff0c\u7136\u540e\u5168\u90e8\u8fde\u4e0a\u5bb9\u91cf\u4e3a1\u7684\u8fb9\uff0c\u8dd1\u4e2a\u6700\u5927\u6d41\u5c31\u597d\u4e86\u3002\n\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<cstring>\nusing namespace std;\nconst int INF=0x3f3f3f3f;\nconst int M=50010;\nconst int N=1010;\nstruct Edge{\n    int to,next,cap;\n}e[M*40];\nint d[N*2],a[N*2],cur[N*2],num[N*2],fa[N*2];\nint n,m,E,S,T,EdgeCnt=0;\nqueue<int> Q;\nint read(){\n    int x=0,f=1;char ch=getchar();\n    while (ch<'0' || ch>'9'){if (ch=='-')f=-1;ch=getchar();}\n    while ('0'<=ch && ch<='9'){x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}\n    return x*f;\n}\nvoid addedge(int u,int v,int w){\n    int &p=EdgeCnt;\n    e[p].to=v;e[p].next=a[u];e[p].cap=w;\n    a[u]=p++;\n}\nvoid BFS(){\n    for (int i=1;i<=n+m+2;i++)d[i]=n+m+2;\n    Q.push(T);d[T]=0;\n    while (!Q.empty()){\n        int u=Q.front();Q.pop();\n        for (int p=a[u];p!=-1;p=e[p].next){\n            int v=e[p].to;\n            if (e[p^1].cap && d[v]>d[u]+1){\n                d[v]=d[u]+1;\n                Q.push(v);\n            }\n        }\n    }\n}\nint Augment(){\n    int u=T,f=INF;\n    while (u!=S){\n        u=fa[u];\n        f=min(f,e[cur[u]].cap);\n    }\n    u=T;\n    while (u!=S){\n        u=fa[u];\n        e[cur[u]].cap-=f;\n        e[cur[u]^1].cap+=f;\n    }\n    return f;\n}\nint MaxFlow(){\n    memset(num,0,sizeof(num));\n    BFS();\n    for (int i=1;i<=n+m+2;i++)num[d[i]]++,cur[i]=a[i];\n    int flow=0,u=S;\n    while (d[S]<n+m+2){\n        if (u==T){\n            flow+=Augment();\n            u=S;\n        }\n        bool done=false;\n        for (int p=cur[u];p!=-1;p=e[p].next){\n            int v=e[p].to;\n            if (e[p].cap && d[u]==d[v]+1){\n                fa[v]=u;\n                cur[u]=p;\n                done=true;\n                u=v;\n                break;\n            }\n        }\n        if (!done){\n            int m=n;\n            for (int p=a[u];p!=-1;p=e[p].next){\n                int v=e[p].to;\n                if (e[p].cap)m=min(m,d[v]);\n            }\n            if (--num[d[u]]==0)break;\n            num[d[u]=m+1]++;\n            cur[u]=a[u];\n            if (u!=S)u=fa[u];\n        }\n    }\n    return flow;\n}\nint main(){\n    n=read(),m=read(),E=read();\n    memset(a,0xff,sizeof(a));\n    for (int i=1;i<=E;i++){\n        int u,v;\n        u=read(),v=read();\n        if (u>n || v>m)continue;\n        v+=n;\n        addedge(u,v,1);\n        addedge(v,u,0);\n    }\n    S=n+m+1;T=n+m+2;\n    for (int i=1;i<=n;i++)addedge(S,i,1),addedge(i,S,0);\n    for (int i=1;i<=m;i++)addedge(i+n,T,1),addedge(T,i+n,0);\n    printf(\"%d\",MaxFlow());\n    return 0;\n}\n```",
        "postTime": 1503545564,
        "uid": 54916,
        "name": "I_AM_HelloWord",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3386 \u3010\u3010\u6a21\u677f\u3011\u4e8c\u5206\u56fe\u5339\u914d\u3011"
    },
    {
        "content": "\u4e8c\u5206\u56fe\u5339\u914d\u7528\u5308\u7259\u5229\u7b97\u6cd5\u6216\u8005\u7f51\u7edc\u6d41\u90fd\u53ef\u505a\uff08ps\uff1a\u80fd\u7528\u5308\u7259\u5229\u7b97\u6cd5\u505a\u7684\u90fd\u80fd\u7528\u7f51\u7edc\u6d41\u505a\uff09\uff0c\u4f46\u662f\u6548\u7387\u5dee\u522b\u8f83\u5927\u3002\n\n\u7f51\u7edc\u6d41\u53ef\u8fbe30ms\uff0c\u90bb\u63a5\u8868\u5308\u7259\u52291440ms\uff0c\u90bb\u63a5\u77e9\u9635\u5308\u7259\u52294036ms\u3002\n\n\u800c\u6211\u53ea\u662f\u4e00\u4e2a\u63d0\u9ad8\u7ec4\u7684\u849f\u84bb\uff0c\u6ca1\u5174\u8da3\u641e\u7701\u9009\u7ea7\u522b\u7684\u7f51\u7edc\u6d41\u3002\u3002\u3002\u5c31\u6765\u4e2a\u90bb\u63a5\u8868\u5308\u7259\u5229\u7b97\u6cd5\u5427\u3002\n\n\uff08\u5410\u69fd\uff1a\u4e3a\u4ec0\u4e48\u5927\u4f6c\u7684\u90bb\u63a5\u8868\u90fd\u6709STL\u548c\u6307\u9488\uff0c\u770b\u5f97\u597d\u96be\u53d7\u3002\u3002\u3002\uff09\n\n\u6ce8\u610f\u4e8b\u9879\uff1a\n\n1\u3001\u5b58\u70b9\u7684\u7ed3\u6784\u4f53\u7684\u7a7a\u95f4\u5c3d\u91cf\u5927\uff0c\u6211\u7684\u7a0b\u5e8f\u5f00\u5230\u4e86n\u00d7n\u00d75\u3002\uff08\u5f00n\u65f610\u4e2a\u70b9RE\u3002\u3002\u3002\uff09\n\n2\u3001\u8981\u53bb\u6389u>n\u548cv>m\u7684\u60c5\u51b5\u3002\uff08\u4f46\u90bb\u63a5\u77e9\u9635\u6ca1\u5fc5\u8981\uff09\n\n3\u3001\u7a0b\u5e8f\u6ce8\u91ca\u975e\u5e38\u91cd\u8981\uff0c\u6709\u52a9\u4e8e\u7406\u89e3\u5308\u7259\u5229\u7b97\u6cd5\u7cbe\u9ad3\uff0c\u5e0c\u671b\u5927\u5bb6\u4ed4\u7ec6\u9605\u8bfb\u3002\n\n4\u3001\u90bb\u63a5\u8868\u65e2\u7701\u65f6\u95f4\u53c8\u7701\u7a7a\u95f4\uff0c\u5efa\u8bae\u591a\u7528\u3002\n\n```cpp\n#include<iostream>\n#include<cmath>\n#include<cstring>\n#include<cstdio>\n#include<cstdlib>\n#include<algorithm>\n#define fp(i,a,b) for(int i=a;i<=b;i++)\n#define fq(i,a,b) for(int i=a;i>=b;i--)\n#define il inline\n#define re register\n#define ll long long \nusing namespace std;\nbool vis[4005]={};\nint n,m,k,ans=0,link[4005]={},head[4005]={},cnt=0;//vis\u7528\u6765\u6807\u8bb0   link\u8bb0\u5f55\u60c5\u4fa3\u5173\u7cfb  \nstruct Edge\n{\n    int to,next;\n}e[4000005];//e\u8bb0\u5f55\u6709\u597d\u611f\nil int gi()\n{\n   int x=0;\n   short int t=1;\n   char ch=getchar();\n  while((ch<'0'||ch>'9')&&ch!='-') ch=getchar();\n  if(ch=='-') t=-1,ch=getchar();\n  while(ch>='0'&&ch<='9') x=x*10+ch-48,ch=getchar();\n  return x*t;\n}\nil bool dfs(int u)//\u5308\u7259\u5229\u7b97\u6cd5\n{\n    for(int i=head[u];i;i=e[i].next)//\u626b\u63cf\u6bcf\u4e2a\u59b9\u5b50\uff0c\u8fd9\u91cc\u5df2\u4fdd\u8bc1\u6709\u597d\u611f\n    {\n        int v=e[i].to;\n        if(!vis[v])//if (\u5355\u8eab\uff09\n        {\n            vis[v]=1;  \n            if(!link[v]||dfs(link[v])) {link[v]=u;return 1;}//\u540d\u82b1\u65e0\u4e3b||\u8005\u80fd\u817e\u51fa\u4e2a\u4f4d\u7f6e\u6765\uff0c\u8fd9\u91cc\u4f7f\u7528\u9012\u5f52\n        }\n    }\n    return 0;\n}\nint main()\n{\n    n=gi();m=gi();k=gi();\n    fp(i,1,k)\n    {\n        int u=gi(),v=gi();\n        if(u>n||v>m) continue;//\u53bb\u6389\u65e0\u6548\u60c5\u51b5\n        e[++cnt]=(Edge){v,head[u]};head[u]=cnt;//\u6709\u597d\u611f\u5c31\u8fde\u6761\u8fb9\uff08\u6807\u51c6\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u50a8\uff09\n    }\n    fp(i,1,n)\n    {\n        memset(vis,0,sizeof(vis));\n        if(dfs(i)) ans++;//\u60c5\u4fa3\u914d\u6210\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n\n```",
        "postTime": 1503408242,
        "uid": 21534,
        "name": "ysner",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3386 \u3010\u3010\u6a21\u677f\u3011\u4e8c\u5206\u56fe\u5339\u914d\u3011"
    },
    {
        "content": "pascal\u7248\u7684\u5957\u7f51\u7edc\u6d41\uff08\u4f3c\u4e4e\u8fd9\u5c31\u662f\u5308\u7259\u5229\u7b97\u6cd5\uff1f\uff09\n\n\u8981\u6ce8\u610f\u6570\u636e\u975e\u5e38\u7684\u5751\u3002\u3002u,v\u90fd\u53ef\u80fd\u8d85\u51fan\u548cm\u7684\u8303\u56f4\uff0c\u8bb0\u5f97\u7279\u6b8a\u5904\u7406\u3002\n\n\u8981\u770b\u8fd9\u9053\u9898\u9898\u89e3\u7684\u4eba\u4f30\u8ba1\u90fd\u4f1a\u7f51\u7edc\u6d41\uff0c\u90a3\u7f51\u7edc\u6d41\u90e8\u5206\u5c31\u4e0d\u8bf4\u4e86\u3002\n\n\u9996\u5148\uff0c\u53ef\u4ee5\u628a\u6240\u6709\u7684\u8fb9\u770b\u6210\u662f\u6709\u5411\u7684\uff0c\u7531u\u6307\u5411v\u3002\u53ef\u4ee5\u5efa\u7acb\u4e00\u4e2a\u8d85\u7ea7\u6e90\u70b9\u548c\u4e00\u4e2a\u8d85\u7ea7\u6c47\u70b9\uff0c\u8d85\u7ea7\u6e90\u70b9\u6307\u5411\u6240\u6709\u7684u\uff0c\u6240\u6709\u7684v\u6307\u5411\u8d85\u7ea7\u6c47\u70b9\u3002\u8ba9\u6240\u6709\u7684\u8fb9\u7684\u6743\u503c\u90fd\u4e3a1\uff0c\u5219\u7531\u6700\u5927\u6d41\u7684\u6027\u8d28\u53ef\u77e5\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\u7b49\u4e8e\u8d85\u7ea7\u6e90\u70b9\u5230\u8d85\u7ea7\u6c47\u70b9\u7684\u6700\u5927\u6d41\n\n\u4e00\u5f00\u59cbRE\u4e86\u65e0\u6570\u6b21\u90fd\u662f\u56e0\u4e3a\u6570\u7ec4\u5f00\u5c0f\u4e86\u3002\u3002\u6700\u540e\u5faa\u73af\u961f\u5217+100W\u6570\u7ec4\u624dA\n\n```pascal\nType\n    road=record\n        toit,next,cap,rev:longint;\n    end;\nVar\n    n,m,e,u,v,i,j,cnt,s,t:longint;\n    roads:array[0..1000000] of road;\n    level,iter,list:array[0..1000000] of longint;\nFunction min(a,b:longint):longint;\n    begin\n        if a<b then exit(a);\n        exit(b);\n    end;\nProcedure add(u,v:longint);\n    begin\n        inc(cnt);\n        roads[cnt].toit:=v;\n        roads[cnt].next:=list[u];\n        roads[cnt].cap:=1;\n        list[u]:=cnt;\n        roads[cnt].rev:=cnt+1;\n        inc(cnt);\n        roads[cnt].toit:=u;\n        roads[cnt].next:=list[v];\n        roads[cnt].cap:=0;\n        list[v]:=cnt;\n        roads[cnt].rev:=cnt-1;\n    end;\nProcedure bfs(s:longint);\n    var\n        w,h,t,i:longint;\n        queue:array[0..2000000] of longint;\n    begin\n        for i:=1 to n+m+2 do\n            level[i]:=-1;\n        level[s]:=0;\n        h:=1;t:=1;\n        queue[1]:=s;\n        while h<=t do begin\n            w:=list[queue[h]];\n            while w<>0 do begin\n                if (roads[w].cap>0) and (level[roads[w].toit]<0) then begin\n                    level[roads[w].toit]:=level[queue[h]]+1;\n                    t:=t mod 1000007 +1;\n                    queue[t]:=roads[w].toit;\n                end;\n                w:=roads[w].next;\n            end;\n            h:=h mod 1000007 +1;\n        end;\n    end;\nFunction dfs(v,t,f:longint):longint;\n    var\n        w,d:longint;\n    begin\n        if v=t then exit(f);\n        iter[v]:=list[v];\n        w:=iter[v];\n        while w<>0 do begin\n            if (roads[w].cap>0) and (level[v]<level[roads[w].toit]) then begin\n                d:=dfs(roads[w].toit,t,min(f,roads[w].cap));\n                if d>0 then begin\n                    dec(roads[w].cap,d);\n                    inc(roads[roads[w].rev].cap,d);\n                    exit(d);\n                end;\n            end;\n            iter[v]:=roads[iter[v]].next;\n            w:=iter[v];\n        end;\n        exit(0);\n    end;\nFunction max_flow(s,t:longint):longint;\n    var\n        flow,f,i:longint;\n    begin\n        flow:=0;\n        f:=0;\n        while true do begin\n            bfs(s);\n            //for i:=1 to n+m+2 do\n            //write(level[t],' ');\n            //writeln(level[t]);\n            if level[t]<0 then exit(flow);\n            fillchar(iter,sizeof(iter),0);\n            f:=dfs(s,t,maxlongint);\n            while f>0 do begin\n                flow:=flow+f;\n                f:=dfs(s,t,maxlongint);\n            end;\n        end;\n        exit(0);\n    end;\nBegin\n    readln(n,m,e);\n    s:=n+m+1;\n    t:=s+1;\n    for i:=1 to n do begin\n        add(s,i);\n    end;\n    for i:=1 to m do\n        add(n+i,t);\n    for i:=1 to e do begin\n        readln(u,v);\n        if (v>m) or (u>n) or (v<=1) or (u<=1) then continue;\n        add(u,v+n);\n    end;\n    writeln(max_flow(s,t));\nEnd.\n```",
        "postTime": 1479342842,
        "uid": 8876,
        "name": "hibiki",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3386 \u3010\u3010\u6a21\u677f\u3011\u4e8c\u5206\u56fe\u5339\u914d\u3011"
    }
]