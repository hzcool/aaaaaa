[
    {
        "content": "~~\u6bd4\u8d5b\u521a\u7ed3\u675f\uff0c\u6211\u6765\u6c34\u4e00\u53d1\u9898\u89e3~~\n\n## \u66b4\u529b\u89e3\u6cd5\n\n\u8fd9\u4e2a\u66b4\u529b\u89e3\u6cd5\u8fd8\u662f\u86ee\u597d\u60f3\u7684\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\uff0c\u4ece\u5934\u5230\u5c3e\u641c\u4e00\u904d\uff0c\u627e\u5230\u5c31\u8f93\u51fa\u5e76 ```break``` \uff0c\u5982\u679c\u4e00\u76f4\u627e\u4e0d\u5230\u6700\u540e\u8f93\u51fa $-1$ \u3002\n\n\u7136\u800c\u8fd9\u4e2a\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(nm)$\uff0c\u663e\u7136\u8fc7\u4e0d\u4e86\u3002\uff08\u4ee3\u7801\u5c31\u4e0d\u8d34\u4e86\uff09\n\n## \u6b63\u89e3\n\n~~\u8fd9\u4e2a\u6b63\u89e3\u597d\u50cf\u4e5f\u633a\u597d\u60f3\u7684~~\n\n\u9898\u76ee\u8bf4\u5e8f\u5217**\u5355\u8c03\u4e0d\u51cf**\uff0c\u4e8e\u662f\u5f88\u5bb9\u6613\u5c31\u60f3\u5230**\u4e8c\u5206**\u3002\n\n\u7136\u800c\uff0c~~\u6211\u5f88\u61d2~~\uff0c\u663e\u7136\u4e0d\u4f1a\u5199\u4e8c\u5206\uff0c\u90a3\u5c31\u53ea\u80fd\u7528 ```STL``` \u81ea\u5e26\u7684\u4e8c\u5206\u51fd\u6570\u2014\u2014 ```upper_bound``` \u548c ```lower_bound```\u3002\n\n\u8fd9\u4e24\u4e2a\u51fd\u6570\u7684\u4f5c\u7528\u662f\u4e8c\u5206\u67e5\u627e\u4e00\u4e2a\u6570\u5728\u6570\u7ec4\u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\u533a\u522b\u662f ```upper``` \u8fd4\u56de\u7b2c\u4e00\u4e2a\u5927\u4e8e\u641c\u7d22\u6570\u7684\u4f4d\u7f6e\uff0c\u800c ```lower``` \u662f\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e\u7684\u6570\u7684\u4f4d\u7f6e\u3002\u663e\u7136\u8fd9\u9053\u9898\u7528\u7684\u662f ```lower```\u3002\n\n\u51fd\u6570\u7684\u7528\u6cd5\uff1a```lower_bound(a.begin(),a.end(),x)``` \u8fd4\u56de\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e $x$ \u7684\u6570\u7684\u5730\u5740\u3002\u800c\u7531\u4e8e\u662f\u5730\u5740\uff0c\u5728\u6700\u540e\u8981 $-a$\uff08\u4e5f\u5c31\u662f\u51cf\u53bb\u5730\u5740\uff09\u3002\n\n\u4f1a\u4e86\u8fd9\u4e2a\u51fd\u6570\uff0c\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u600e\u4e48\u5224\u65ad $-1$ \u7684\u60c5\u51b5\uff1f\n\n\u5176\u5b9e\u4e5f\u5f88\u7b80\u5355\u3002\u5982\u679c\u6ee1\u8db3\uff0c\u90a3\u4e48\u4e00\u5b9a\u6709 $x=a[ans]$\uff0c\u6240\u4ee5\u5982\u679c\u4e0d\u7b49\u90a3\u4e48\u8f93\u51fa $-1$ \u5c31\u884c\u4e86\u3002\n\n\u8bf4\u4e86\u8fd9\u4e48\u591a\uff0c\u4ee3\u7801\u4e5f\u5c31\u975e\u5e38\u597d\u5199\u4e86\u3002\n\n## \u4ee3\u7801\n\n\u4e0b\u9762\u662f\u5b8c\u6574 AC \u4ee3\u7801\u2014\u2014\n\n\uff08~~\u4e0d\u80fd\u53ea\u770b\u8fd9\u91cc\u554a~~\uff09\n\n```cpp\n#include<cstdio>\n#include<algorithm>//\u7528\u5230lower_bound\nusing namespace std;\nconst int MAXN=1e6+10;//\u6ce8\u610f\u8303\u56f4\nint read(){//\u5feb\u8bfb\n\tint x=0,f=1;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9'){\n\t\tif(c=='-') f=-1;\n\t\tc=getchar();\n\t}\n\twhile(c>='0'&&c<='9'){\n\t\tx=x*10+c-'0';\n\t\tc=getchar();\n\t}\n\treturn x*f;\n}\nint a[MAXN];\nint main(){\n\tint n=read(),m=read();//\u8bfb\u5165\n\tfor(int i=1;i<=n;i++) a[i]=read();\n\twhile(m--){\n\t\tint x=read();\n\t\tint ans=lower_bound(a+1,a+n+1,x)-a;//\u4e8c\u5206\u641c\uff0c\u6ce8\u610f-a\n\t\tif(x!=a[ans]) printf(\"-1 \");//\u6ca1\u6709\uff0c\u8f93\u51fa-1\n\t\telse printf(\"%d \",ans);//\u6709\uff0c\u8f93\u51faans\n\t}\n\treturn 0;//\u534e\u4e3d\u7ed3\u675f\n}\n```\n\u770b\u6211\u8fd9\u4e48\u665a\u8fd8\u53d1\u9898\u89e3\uff0c\u603b\u5f97\u70b9\u4e2a\u8d5e\u518d\u8d70\u5440~",
        "postTime": 1582726687,
        "uid": 130981,
        "name": "dingcx",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2249 \u3010\u3010\u6df1\u57fa13.\u4f8b1\u3011\u67e5\u627e\u3011"
    },
    {
        "content": "\u770b\u5927\u5bb6\u90fd\u7528STL\u6216bound\u505a\u3002\n\n\u6211\u5c31\u6765\u4e2a\u624b\u6253\u4e8c\u5206\u7684\u505a\u6cd5\u5427\u3002\n\n\u601d\u8def\u5f88\u7b80\u5355\uff0c\u8be6\u60c5\u770b\u6ce8\u91ca\u3002\n\n## code:\n\n```cpp\n#include<cstdio>\nusing namespace std;\n\nint n,m,q,a[1000005];\n\nint find(int x) //\u4e8c\u5206\u67e5\u627e \n{\n\tint l=1,r=n;\n\twhile (l<r)\n\t{\n\t\tint mid=l+(r-l)/2;\n\t\tif (a[mid]>=x) r=mid;\n\t\telse l=mid+1;\n\t}\n\t\n\tif (a[l]==x) return l; //\u627e\u90fd\u4e86\u5c31\u8f93\u51fa\u4ed6\u7684\u4f4d\u7f6e \n\telse return -1; // \u6ca1\u627e\u5230\u8f93\u51fa-1 \n}\n\nint main()\n{\n\tscanf(\"%d %d\",&n,&m); //\u8bfb\u5165 \n\t\n\tfor (int i=1 ; i<=n ; i++)\n\t    scanf(\"%d\",&a[i]); //\u8fd8\u662f\u8bfb\u5165 \n\t\n\tfor (int i=1 ; i<=m ; i++)\n\t{\n\t\tscanf(\"%d\",&q);\n\t\tint ans=find(q); //\u770b\u770b\u67e5\u627e\u7684\u7ed3\u679c \n\t\tprintf(\"%d \",ans); //\u8f93\u51fa \n\t}\n\t\n\treturn 0;\n}\n```\n\n\u590d\u6742\u5ea6 O(mlogn)\u3002\n\n**\u4e0d\u4f1a\u8d85\u65f6\u54e6**\u3002",
        "postTime": 1582760917,
        "uid": 228113,
        "name": "YellowEgg",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2249 \u3010\u3010\u6df1\u57fa13.\u4f8b1\u3011\u67e5\u627e\u3011"
    },
    {
        "content": "## \u672c\u849f\u84bb\u7b2c\u4e00\u6b21\u53d1\u9898\u89e3QWQ\u6c42\u8fc7\n**\u9996\u5148\u9898\u76ee\u610f\u601d\u662f\u7ed9\u4e00\u4e32\u5df2\u7ecf\u6392\u597d\u4e86\u7684\u6570\u5b57\u95ee\u4f60\u67d0\u4e2a\u6570\u5b57\u7684\u4f4d\u7f6e\u3002\\\n\u5982\u679c\u4ece1\u5230n\u626b\u4e00\u904d\u7684\u8bdd\u80af\u5b9a\u8d85\u65f6\u3002\\\n\u6240\u4ee5\u8fd9\u91cc\u7528\u4e86\u4e8c\u5206\u7684\u65b9\u6cd5\uff1a\n#### **\u9996\u5148\u627e\u5230\u8fd9\u4e32\u6570\u5b57\u4e2d\u95f4\u4f4d\u7f6e\u7684\u90a3\u4e2a\u6570\uff0c\u7136\u540e\u4e0e\u9700\u8981\u67e5\u8be2\u7684\u6570\u6bd4\u8f83\n#### \u5982\u679c\u8981\u67e5\u8be2\u7684\u6570\u5c0f\u4e8e\u4e2d\u95f4\u90a3\u4e2a\u6570\uff0c\u90a3\u4e48\u7b54\u6848\u80af\u5b9a\u5728\u5de6\u8fb9\n#### \u5982\u679c\u8981\u67e5\u8be2\u7684\u6570\u5927\u4e8e\u4e2d\u95f4\u90a3\u4e2a\u6570\uff0c\u90a3\u4e48\u7b54\u6848\u80af\u5b9a\u5728\u53f3\u8fb9\n#### \u5982\u679c\u7b49\u4e8e\u7684\u8bdd\u7ee7\u7eed\u5728\u5de6\u8fb9\u627e\uff0c\u56e0\u4e3a\u627e\u5230\u7684\u4f4d\u7f6e\u8fd8\u4e0d\u80fd\u786e\u5b9a\u662f\u7b2c\u4e00\u4e2a\u6570\n#### \u5982\u6b64\u91cd\u590d\uff0c\u76f4\u5230\u8981\u67e5\u8be2\u7684\u533a\u57df\u53d8\u4e3a1\u3002\n\n\u4ee5\u4e0b\u662fAC\u4ee3\u7801\uff1a\n------------\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<iostream>\nusing namespace std;\nint a[1000020];\nint findpos(int a[], int l, int r, int k)\n{\n\tif (l == r)\n\t{\n\t\tif (a[l] == k)\n\t\t\treturn l;\n\t\telse\n\t\t\treturn -1;/*\u6700\u540e\u4f4d\u7f6e\u7684\u6570\u4e0e\u5f85\u67e5\u8be2\u6570\u4e0d\u76f8\u7b49\uff0c\u8bf4\u660e\u6570\u5217\u91cc\u6ca1\u6709\u6b64\u6570*/\n\t}\n\tint mid = (l + r) / 2;\n\tif (k <= a[mid])\n\t\tfindpos(a, l, mid, k);/*\u5728\u5de6\u8fb9\u533a\u57df\u627e*/\n\telse\n\t\tfindpos(a, mid + 1, r, k);/*\u5728\u53f3\u8fb9\u533a\u57df\u627e*/\n}\nint main()\n{\n\tint n, m, k;\n\tcin >> n >> m;\n\tfor (int i = 1; i <= n; i++)\n\t\tscanf(\"%d\", &a[i]);\n\twhile (m--)\n\t{\n\t\tcin >> k;\n\t\tcout << findpos(a, 1, n, k) << \" \";\n\t}\n\treturn 0;\n}\n```\n\n",
        "postTime": 1582970842,
        "uid": 154389,
        "name": "Ged_Relay",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2249 \u3010\u3010\u6df1\u57fa13.\u4f8b1\u3011\u67e5\u627e\u3011"
    },
    {
        "content": "## STL\u5929\u4e0b\u7b2c\u4e00\n\u8fd9\u4e00\u9898\u7684\u610f\u601d\u5c31\u662f\u5728\u4e00\u4e2a\u6709\u5e8f\u7684\u5e8f\u5217\u4e2d\u67e5\u627e\u67d0\u4e2a\u6570\uff0c\u5e76\u8981\u6c42\u8f93\u51fa\u5176\u4e0b\u6807\u3002\u6309\u7167\u5e38\u89c4\u601d\u8def\uff0c\u5982\u679c\u6211\u4eec\u6bcf\u6b21\u679a\u4e3e\u5f53\u524d\u4e0b\u6807\u7684\u6570\u5e76\u4e0e\u8f93\u5165\u7684\u6570\u5bf9\u6bd4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(n)\u7684\uff0c\u8fd9\u4e2a\u590d\u6742\u5ea6\u5728\u6570\u636e\u91cf\u8f83\u5c0f\u7684\u65f6\u5019\u6216\u8bb8\u8fd8\u53ef\u4ee5\u63a5\u53d7\uff0c\u4f46\u662f\u5f53\u6570\u636e\u91cf\u7279\u522b\u5927\u7684\u65f6\u5019\u5462\uff1f\u6211\u4eec\u53ef\u80fd\u8fd0\u6c14\u597d\u7b2c\u4e00\u6570\u5c31\u679a\u4e3e\u5230\u4e86\u6b63\u786e\u7684\u7b54\u6848\uff0c\u4f46\u662f\u5982\u679c\u9898\u76ee~~\u6570\u636e\u5f3a~~\u5751\u6211\u4eec\u53ef\u80fd\u5c31\u8981\u679a\u4e3e\u5230\u6700\u540e\u4e00\u4f4d\u7b54\u6848\u4e86\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4e0d\u53ef\u4ee5\u8003\u8651\u6bcf\u6b21\u90fd\u4ece\u4e2d\u95f4\u627e\u5462\uff1f\u7b54\u6848\u662f\u53ef\u884c\u7684\uff01\u56e0\u4e3a\u5e8f\u5217\u662f\u6709\u5e8f\u7684\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u627e\u5230\u4e86\u4e00\u4e2a\u5927\u4e8e\u76ee\u6807\u6570\u636e\u7684\u503c\uff0c\u5c31\u53ef\u4ee5\u8ba4\u4e3a\u8fd9\u4e2a\u533a\u95f4\u7684\u6570\u90fd\u6bd4\u76ee\u6807\u5927\uff0c\u5373\u53ef\u820d\u53bb\u8fd9\u4e2a\u533a\u95f4\u3002\u8fd9\u5c31\u662f\u4e8c\u5206\u67e5\u627e\u3002\n\n~~\u8bf4\u4e86\u8fd9\u4e48\u591a\u53cd\u6b63\u4f60\u4eec\u4e5f\u90fd\u4f1a~~\n\n### \u7528\u5230\u7684\u51fd\u6570\n__lower_bound(start, end, target):\u4ece\u5728start\u5230end\u533a\u95f4\u5185\u67e5\u627etarget\uff0c\u5982\u679c\u627e\u5230\u4e86\uff0c\u8fd4\u56de\u4e00\u4e2a\u6307\u9488\uff0c\u5982\u679c\u6ca1\u627e\u5230\uff0c\u8fd4\u56de\u7b2c\u4e00\u4e2a\u6bd4\u5b83\u5927\u7684\u503c\u7684\u6307\u9488\u3002__\n```cpp\n#include <iostream>\n// \u8fb9\u957f\u6570\u7ec4\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u4e0d\u7528\u62c5\u5fc3\u6570\u636e\u88c5\u4e0d\u4e0b\u4e86\n#include <vector>\nusing namespace std;\nvector<int > vec;\nint main() {\n\tint n, m;\n\tint t;\n\tcin >> n >> m;\n\tint index;\n    // \u5411\u6570\u7ec4\u5c3e\u90e8\u653e\u5165\u6570\u636e\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u7279\u6027\uff0cvector\u4e5f\u53ef\u4ee5\u5f53\u6210stack\u7528\n\twhile(n--) cin >> t, vec.push_back(t);\n\twhile(m--) {\n\t\tcin >> t;\n        // \u5728\u5e8f\u5217\u91cc\u67e5\u627e\u76ee\u6807\u6570\u636e\n\t\tindex = lower_bound(vec.begin(), vec.end(), t) - vec.begin();\n        // \u5982\u679c\u76ee\u6807\u6570\u636e\u627e\u5230\u4e86\uff0c\u8f93\u51fa\u7b54\u6848\uff0c\u6ce8\u610f\u6211\u4eec\u7684\u6570\u7ec4\u4e0b\u6807\u662f\u4ece0\u5f00\u59cb\u7684\n\t\tif (t == vec[index]) cout << index + 1 << ' ';\n        // \u6ca1\u627e\u5230\u8bb0\u5f97\u8f93\u51fa-1\u54e6\n\t\telse cout << -1 << ' ';\n\t}\n\treturn 0;\n}\n```\n\u611f\u8c22\u4f60\u770b\u5b8c\u672c\u849f\u84bb\u7684\u9898\u89e3QWQ\n",
        "postTime": 1582725405,
        "uid": 277849,
        "name": "AveMarina",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2249 \u3010\u3010\u6df1\u57fa13.\u4f8b1\u3011\u67e5\u627e\u3011"
    },
    {
        "content": "\u4f5c\u4e3a\u4e00\u4e2a\u849f\u84bb\uff0c\u6211\u7684\u7b2c\u4e00\u60f3\u6cd5\u662f\uff1a\n\n### \u66b4\u529b\u89e3\u51b3\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8be2\u95ee\uff0c\u6700\u574f\u53ea\u8981\u626b\u4e00\u904d\u6574\u4e2a\u5e8f\u5217\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(nm)$\uff0c\u80af\u5b9a\u4e0d\u80fd\u8fc7\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint n,m;\nint a[1000001];\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(register int i(1);i<=n;++i)\n\t\tscanf(\"%d\",&a[i]);\n\tfor(register int i(1);i<=m;++i)\n\t{\n\t\tint k,ans=-1;\n\t\tscanf(\"%d\",&k);\n\t\tfor(register int j(1);j<=n;++j)\n\t\t\tif(a[j]==k)\n\t\t\t{\n\t\t\t\tans=j;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tprintf(\"%d \",ans);\n\t}\n    return 0;\n}\n\n```\n\u63a5\u4e0b\u6765\uff0c\u6211\u60f3\u5230\u4e86...\n\n### \u83ab\u961f\uff1f\uff01\n\n\uff08\u53ef\u80fd\u662f\u6211\u5237\u83ab\u961f\u5237\u7684\u592a\u591a\u4e86\u5427 orz\uff09\n\n\u8fd9\u4e2a\u770b\u8d77\u6765\u975e\u5e38\u50cf\u83ab\u961f\u7684\u4e00\u4e2a\u53d8\u5f62\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8be2\u95ee\u6253\u5305\u6210\u4e00\u4e2a\u7ed3\u6784\u4f53\u3002\n\n```cpp\nstruct query\n{\n\tint k;//\u8be2\u95ee\u7684\u5185\u5bb9\n\tint id;//\u8be2\u95ee\u7684\u7f16\u53f7\n};\nquery q[100005];\n```\n\u7136\u540e\uff0c\u6211\u4eec\u4ee5 k \u4e3a\u5173\u952e\u5b57\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\uff08\u6ce8\u610f\uff1a\u8fd9\u6b21\u4e0d\u7528\u5206\u5757\uff09\n\n```cpp\nbool cmp(query x,query y)\n{\n\treturn x.k<y.k;\n}\n```\n\u63a5\u4e0b\u6765\uff0c\u4eff\u7167\u83ab\u961f\u7684\u683c\u5f0f\uff0c\u521b\u5efa\u4e00\u4e2a l=1 \u7684\u6307\u9488\uff0c\u53ea\u9700\u8981\u4f7f\u7528 $O(n)$ \u7684\u65f6\u95f4\u5c31\u53ef\u4ee5\u626b\u63cf\u5b8c\u6240\u6709\u7684\u8be2\u95ee\u4e86\u3002\n\n```cpp\nfor(register int i(1);i<=m;++i)\n\t{\n\t\twhile(q[i].k>col[l] && l<=n) ++l;\n\t\tif(col[l]>q[i].k || l>n) ans[q[i].id]=-1;\n\t\telse ans[q[i].id]=l;\n\t}\n```\n\u63a5\u4e0b\u6765\u662f\u5b8c\u6574\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint n,m,l=1;\nint col[1000005];\nstruct query\n{\n\tint k;\n\tint id;\n};\nquery q[100005];\nint ans[100005];\n\nbool cmp(query x,query y)\n{\n\treturn x.k<y.k;\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(register int i(1);i<=n;++i)\n\t\tscanf(\"%d\",&col[i]);\n\tfor(register int i(1);i<=m;++i)\n\t{\n\t\tscanf(\"%d\",&q[i].k);\n\t\tq[i].id=i;\n\t}\n\tsort(q+1,q+1+m,cmp);\n\tfor(register int i(1);i<=m;++i)\n\t{\n\t\twhile(q[i].k>col[l] && l<=n) ++l;\n\t\tif(col[l]>q[i].k || l>n) ans[q[i].id]=-1;\n\t\telse ans[q[i].id]=l;\n\t}\n\tfor(register int i(1);i<=m;++i)\n\t\tprintf(\"%d \",ans[i]);\n    return 0;\n}\n\n```\n\u603b\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\uff08\u53ef\u80fd\u662f\u6211\u4e71\u5199\u7684\uff09\n\n$O(m\\log_2m+n)$\uff0c\u4e0d\u4f1a\u8d85\u65f6\u3002",
        "postTime": 1582769593,
        "uid": 148913,
        "name": "Graphcity",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2249 \u3010\u3010\u6df1\u57fa13.\u4f8b1\u3011\u67e5\u627e\u3011"
    },
    {
        "content": "###   \u7b2c\u4e00\u6b21\u53d1\u9898\u89e3\uff01\n## 1.\u5ba1\u9898\uff01\nn<1000000,m<100000,\u5982\u679c\u76f4\u63a5\u8f93\u5165\u518d\u627e\u4e00\u6b21\u80af\u5b9a\u4f1a\u8d85\u65f6\uff0c\u6240\u4ee5\u8981\u60f3\u4e00\u79cd\u66f4\u597d\u7684\u65b9\u6cd5\u3002\n## 2.STL\u5927\u6cd5\u597d\uff01\n\u6211\u4eec\u53ef\u4ee5\u5bf9\u6bcf\u4e00\u4e2a\u51fa\u73b0\u7684\u6570\u5b57\u5b58\u5b83\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u5341\u5206\u65b9\u4fbf\uff0c\u6548\u7387\u867d\u7136\u6709\u70b9\u4f4e\uff0c\u4f46\u8db3\u4ee5AC\u672c\u9898\u3002\n## 3.\u4e0a\u4ee3\u7801\uff01\n```\n#include<iostream>\n#include<map>\nusing namespace std;\nmap<int,int>a;\nint main()\n{\n\tint m,n,k,l=-1;\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)//\u8f93\u5165\u5e76\u8bb0\u5f55\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\n\t{\n\t\tcin>>k;\n\t\tif(l!=k){\n\t\t\ta[k]=i;\n\t\t\tl=k;\n\t\t}\n\t}\n\tfor(int i=0;i<m;i++)//\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8be2\u95ee\uff0c\u8f93\u51fa\u5b83\u7684\u4f4d\u7f6e\n\t{\n\t\tcin>>k;\n\t\tif(a.count(k))cout<<a[k]<<' ';//\u5982\u679c\u5b58\u5728\u5c31\u8f93\u51fa\n\t\telse cout<<-1<<' ';//\u5426\u5219\u8f93\u51fa-1\n\t}\n\treturn 0;\n}\n```\n\u5e0c\u671b\u7ba1\u7406\u5458\u5927\u5927\u901a\u8fc7\n",
        "postTime": 1582726939,
        "uid": 225755,
        "name": "LinkZelda",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2249 \u3010\u3010\u6df1\u57fa13.\u4f8b1\u3011\u67e5\u627e\u3011"
    },
    {
        "content": "\u5927\u5bb6\u7528\u7684\u5927\u6982\u90fd\u662fbound\u5427\uff0c\u63d0\u4f9b\u4e00\u4e2amap\u7684\u505a\u6cd5\u3002\n\n**\u6ce8\u610f\u5438\u6c27\uff01\uff01\uff01**\n\n\u9996\u5148\u8003\u8651\u7528\u6876\uff0c\u80af\u5b9aMLE\uff0c\u8003\u8651$n$\u5c0f\uff0c$q$\u5927\uff0c\u7528map\u592a\u5408\u9002\u4e86\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#include<map>\nusing namespace std;\nint n,m,a[1000010];\nmap<int,int> ma;\nint main(){\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>a[i];\n\t\tif(!ma[a[i]]){//\u5224\u65ad\uff0c\u53ea\u8bb0\u5f55\u7b2c\u4e00\u4e2a \n\t\t\tma[a[i]]=i;//\u8bb0\u5f55\u7f16\u53f7 \n\t\t}\n\t}\n\tfor(int i=1;i<=m;i++){\n\t\tint q;\n\t\tcin>>q;\n\t\tif(!ma[q]) cout<<-1<<\" \";//\u5982\u679c\u91cc\u9762\u6ca1\u6709\u8f93\u51fa-1 \n\t\telse cout<<ma[q]<<\" \";//\u5426\u5219\u8f93\u51fa\u7f16\u53f7 \n\t}\n\treturn 0;\n}\n```",
        "postTime": 1582730446,
        "uid": 247658,
        "name": "HsKr",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2249 \u3010\u3010\u6df1\u57fa13.\u4f8b1\u3011\u67e5\u627e\u3011"
    },
    {
        "content": "\u5206\u6790\u4e86\u4e00\u904d\u9898\u76ee\u540e\uff0c\u89c9\u5f97\u4e0d\u96be\uff0c\u5c31\u51c6\u5907\u7740\u624b\u505a\u4e86\u3002\n\n\u7136\u800c\uff0c\u8fd9\u65f6\u6211\u65e0\u610f\u95f4\u770b\u5230\u4e86\u8fd9\u9053\u5165\u95e8\u8d5b\u6a59\u9898\u7684 AC \u7387\uff1a\u4ec5\u6709**10.26%**\uff01\n\n\u6709\u56fe\u4e3a\u8bc1\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/yzij1umb.png)\n\n\u4e8e\u662f\uff0c\u6211\u53c8\u91cd\u65b0\u5206\u6790\u4e86\u4e00\u904d\u9898\u76ee\uff0c\u53d1\u73b0\u4e86\u8fd9\u9053\u9898\u7684\u96be\u70b9\uff1a\n\n\u4e0d\u80fd\u76f4\u63a5\u904d\u5386\u30101\uff0c$n$\u3011\u6574\u4e2a\u533a\u95f4\uff0c\u56e0\u4e3a\u65f6\u95f4\u590d\u6742\u5ea6\u592a\u9ad8\u4e86\uff0c\u4f1a\u8d85\u65f6\u3002\n\n\u901a\u8fc7\u540e\u6d4f\u89c8\u4e86\u4e00\u4e0b\u63d0\u4ea4\u8bb0\u5f55\uff0c\u679c\u7136\u5927\u90e8\u5206\u672a\u901a\u8fc7\u7684\u8bb0\u5f55\u90fd\u6709\u5927\u9762\u79ef\u7684 **TLE**\u3002\n\n\u4e8e\u662f\uff0c\u6211\u5f97\u51fa\u4e86\u6b63\u786e\u4e14\u7b26\u5408\u5165\u95e8\u7ea7\u522b\u7684\u89e3\u51b3\u7b56\u7565\uff1a**\u4e8c\u5206\u67e5\u627e**\n\n~~\u5f53\u7136\uff0cSTL\u5927\u6cd5\u4e5f\u662f\u6781\u597d\u7684~~\n\n\u90a3\u4e48\u4e3a\u4ec0\u4e48\u8981\u7528\u4e8c\u5206\u67e5\u627e\u5462\uff1f~~\u5f53\u7136\u662f\u770b\u6807\u7b7e\u4e86~~\n\n\u539f\u56e0\u6709\u4e24\u4e2a\uff1a\n\n1.\u6548\u7387\u6bd4\u8f83\u9ad8\uff0c**\u65f6\u95f4\u590d\u6742\u5ea6**\u4f4e\uff1b\n\n2.\u8fd9\u9053\u9898\u907f\u5f00\u4e86\u5176\u52a3\u52bf\uff1a\u9700\u8981\u67e5\u627e\u7684\u5e8f\u5217\u5fc5\u987b\u4e3a**\u6709\u5e8f\u5e8f\u5217**\uff1b\u800c\u672c\u9898\u4e2d\u7684\u5e8f\u5217\u6070\u597d**\u5355\u8c03\u4e0d\u51cf**\u3002\n\n\u5177\u4f53\u505a\u6cd5\u5df2\u5728 **code** \u4e2d\u6ce8\u91ca\u3002\n\n\u4e0b\u9762\u662f\u5b8c\u6574AC\u4ee3\u7801\uff08\u9644\u6ce8\u91ca\uff09\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint hsy,crz,part,first,size,last,sjx;\n\n\nint main()\n{\n    cin>>hsy>>crz; \n    int zzk[hsy+1],lbn[crz+1];\t\t\t//lbn \u6570\u7ec4\u4e3a\u8bb0\u5f55\u6bcf\u6b21\u8be2\u95ee\u7684\u6570\u7684\u6620\u5c04\u503c\uff1a\u82e5\u5b58\u5728\uff0c\u4e3a\u5e8f\u5217\u4e0b\u6807\u503c\uff1b\u82e5\u4e0d\u5b58\u5728\uff0c\u4e3a\u201c-1\u201d \n\t\n\tfor(int a=1;a<=hsy;a++)\n    {\n    \tcin>>zzk[a];\n\t}\n\t\n\tfor(int k=1;k<=crz;k++)\n    {\n    \tfirst=1;last=hsy;\n        cin>>sjx;\n        \n        while(first-last<0)\n    \t{\n    \t\tsize=last-first;\n        \tpart=first+size/2;\t\t\t//\u4e3a\u4e86\u4e0d\u6ea2\u51fa\uff0c\u987b\u6b64\u8bed\u53e5 \n        \t\n        \tif(sjx==zzk[part]) \n\t\t\t{\n                last=part;\t\t\t\t//\u82e5\u67e5\u627e\u5230\u8f93\u5165\u7684\u6570 sjx,\u5219\u7ee7\u7eed\u5728\u3010first,part\u3011\u7684\u533a\u95f4\u5185\u8fdb\u884c\u4e8c\u5206\u67e5\u627e\n            }\n\t\t\t \n\t\t\telse if(zzk[part]<sjx) \t\t//\u4e00\u822c\u4e8c\u5206\u67e5\u627e\u7684\u505a\u6cd5 \n\t\t\t{\n                first=part+1;\n            } \n            \n\t\t\telse \n\t\t\t{\n                last=part-1;\n            }\n    \t}\n\t\t\n\t\tif(sjx==zzk[last]) \n\t\t{\n\t\t\tlbn[k]=last;\t\t\t\t//\u5982\u679c\u67e5\u627e\u5230 sjx\uff0c\u5219 last \u7684\u503c\u5c31\u662f\u6b21\u6570\u5728\u539f\u6570\u5217\u4e2d\u7684\u4e0b\u6807\uff08\u5e8f\u5217\u4f4d\u7f6e\uff09 \n\t\t}\n    \telse \n\t\t{\n\t\t\tlbn[k]=-1;\t\n\t\t}  \n    }\n\n\tfor(int m=1;m<=crz;m++)\n\t{\n\t\tcout<<lbn[m]<<\" \";\n\t}\n\t\n    return 0;\n}\n```\n",
        "postTime": 1582883331,
        "uid": 241974,
        "name": "zoezoykit",
        "ccfLevel": 0,
        "title": "P2249 \u9898\u89e3  \u3010\u67e5\u627e\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u521a\u4e00\u770b\u6570\u636e\u8303\u56f4\uff0c\u5c31\u77e5\u9053\u4e00\u822c\u7684\u67e5\u627e\u80af\u5b9a\u4f1a\u7206\uff0c\u53ea\u80fd\u7528\u4e8c\u5206\uff0c\u4f46\u4e8c\u5206\u67e5\u627e\u4ee3\u7801\u592a\u8fc7\u5197\u957f\uff0c\u8bb0\u4e0d\u4f4f\u600e\u4e48\u529e\uff1f\uff08~~\u51c9\u62cc~~\uff09\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u5c31\u642c\u51faSTL\u538b\u7bb1\u5e95\u7684\u5b9d\u8d1d\u2014\u2014**lower_bound**\u3002\n\n\u9996\u5148\uff0c\u5148\u628a\u6240\u6709\u6570\u653e\u5230mulitset\u91cc\u9762\u53bb\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u6570\u7684\u7f16\u53f7\u7528\u4e00\u4e2amap\u6620\u5c04\u8fc7\u6765\uff0c\u65b9\u4fbf\u8f93\u51fa\u3002\u5728\u5904\u7406\u7684\u65f6\u5019\uff0c\u7528lower_bound\u6765\u5c06\u5927\u4e8e\u7b49\u4e8e\u5f53\u524d\u5f85\u67e5\u6570\u636e\u7684\u503c\u5b58\u5165it\uff0c\u5982\u679cit\u5927\u4e8e\u5f53\u524d\u5f85\u67e5\u6570\u636e\uff0c\u8bf4\u660e\u8fd9\u4e2a\u6570\u5728\u5e8f\u5217\u4e2d\u4e0d\u5b58\u5728\uff0c\u8f93\u51fa-1\uff0c\u5426\u5219\u8f93\u51fait\u6620\u5c04\u7684\u503c\u3002\n\n\u4e0a\u4ee3\u7801\uff1a\n```\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 1e6 + 50;\n#define IO ios::sync_with_stdio(false);cin.tie(0)   //\u7384\u5b66\u52a0\u901f\n\nint n, m, a[maxn];\nint main () {\n\tIO;\n\tcin >> n >> m;\n\tmultiset<int> ms;   //\u5b9a\u4e49mulitset\n\tmap<int, int> mp;  //\u5b9a\u4e49\u6620\u5c04\n\tfor(int i = 0;i < n; i++) {\n\t\tint k;\n\t\tcin >> k;\n\t\tms.insert(k);    //\u628a\u6570\u636e\u653e\u5230multiset\u91cc\n\t\tif(mp[k] == 0) mp[k] = i + 1;   //\u5b58\u4e00\u7ec4\u6620\u5c04\n\t}\n\twhile (m--) {\n\t\tint t;\n\t\tcin >> t;\n\t\tint it = *ms.lower_bound(t);   //lower_bound\u5927\u663e\u8eab\u624b\n\t\tif(it != t) cout << -1 << ' '; \n\t\telse cout << mp[it] << ' ';\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1582723129,
        "uid": 181750,
        "name": "\u6253\u8868\u5927\u849f\u84bb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2249 \u67e5\u627e"
    }
]