[
    {
        "content": "**\u524d\u8a00**\n\n------------\n\n\u5e0c\u671b\u4e25\u67e5\u672c\u9898\u6284\u9898\u89e3\u60c5\u51b5\uff0c\u5176\u4e2duid362162\u7684\u9898\u89e3\u751a\u81f3\u6ca1\u6709\u7ed9\u51fa\u5168\u90e8\u601d\u8def\uff0c\u800c\u4ed6\u7684AC\u4ee3\u7801\u4e0e\u6700\u4f18\u89e3\u540e\u6392\u7684\u51e0\u4f4d\u5b8c\u5168\u91cd\u590d\uff0c\u6216\u8005\u8bf4\uff0c\u4ed6\u6240\u8c13\u7684\u4f18\u5316\u662f\u901a\u8fc7\u6253\u8868\u8fc7\u9898\uff1f\n\n\u8017\u65f6 $4$ \u5929\uff0c\u7528\u65f6 $6$ \u5c0f\u65f6AC\uff0c\u8c28\u4ee5\u6b64\u8bb0\u5f55\u6211\u548c\u6211\u5c0f\u53f7\u83b7\u5f97\u7684\u4e24\u4e2a\u6700\u4f18\u89e3\u3002\n\n\u6211\u7684\u4ee3\u7801\u53ca\u7b54\u6848 [\u4e91\u76d8](http://222.180.160.110:6010/api/alien/download/7f617a53-9e02-46cf-7208-dd5c92f0ced5/Train)\uff0c\u51fa\u4e8e\u79c1\u5fc3\u6211\u4e0d\u4f1a\u628a\u6211\u7528\u4e00\u665a\u4e0a\u8c03\u51fa\u6765\u7684 $7-10$ \u4ee3\u7801\u7ed9\u51fa\uff0c\u4f46\u6d4b\u8bd5\u70b9\u601d\u8def\u53ca\u4ee3\u7801\u4f7f\u7528\u65b9\u6cd5\u4f1a\u5728\u6b63\u6587\u7ed9\u51fa\u3002\n\n# Case 1-7:\n\n\u6587\u4ef6\u5939\u4e2d\u7684 TrainRead-I \u7684\u6587\u4ef6\u53ef\u4ee5\u901a\u8fc7\u8f93\u5165\u6587\u4ef6\u5e76\u5c06\u5176\u53ef\u89c6\u5316\u5904\u7406\u3002\n\n\u800c TrainChange-I \u53ef\u4ee5\u5c06\u8f93\u5165\u6587\u4ef6\u5904\u7406\u6210\u7eaf\u6570\u5b57\u8f93\u5165\uff0c\u6bcf\u4e00\u4e2a TrainCode \u6587\u4ef6\u7684\u4f7f\u7528\u90fd\u9700\u8981\u5148\u8fd0\u884c\u5b83\u3002\n\n**Case 1-2:**\n\n\u6211\u4eec\u4e0d\u96be\u53d1\u73b0\uff0c\u6570\u636e\u975e\u5e38\u7684\u5c0f\uff0c\u4f53\u73b0\u5728\u9009\u62e9\u8df3\u8f6c\u64cd\u4f5c\u6b21\u6570\u6781\u5c0f\uff0c\u53ef\u4ee5\u6253 $O(2^n)$ \u7684\u66b4\u529bAC\u3002\n\n**Case 3:**\n\n\u8fd9\u4e2a\u70b9\u5176\u5b9e\u6709\u7740\u548c C1\uff0cC2 \u540c\u6837\u7684\u6027\u8d28\uff0c\u5373\u5b83\u53ef\u4ee5\u5206\u6210\u4e00\u6bb5\u4e00\u6bb5\u7684\uff0c\u6bcf\u4e00\u4e2a\u6bb5\u90fd\u4f1a\u8ba9\u4f60\u505a\u51e0\u4e2a\u9009\u62e9\u6539\u53d8\u4e00\u4e9b\u53d8\u91cf\uff0c\u800c\u6700\u540e\u7b54\u6848\u52a0\u4e0a\u53d8\u91cf\u7684\u7edd\u5bf9\u503c\u540e\u6240\u6709\u53d8\u91cf\u6e05\u96f6\u3002\u53d1\u73b0\u6bcf\u4e00\u4e2a\u6bb5\u5185\u7684\u9009\u62e9\u8df3\u8f6c\u6b21\u6570\u540c\u6837\u5f88\u5c0f\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u9488\u5bf9\u6bcf\u4e00\u4e2a\u6bb5\u7206\u641c\u5bfb\u627e\u6700\u5927\u503c\u5e76\u8f93\u51fa\u5373\u53ef\u3002\n\n**Case 4:**\n\n$m=2$\uff0c\u610f\u5473\u7740\u4ec5\u6709\u4e00\u4e2a\u53d8\u91cf\u9700\u8981\u8ba8\u8bba\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u8be5\u53d8\u91cf\u5728\u6574\u4e2a\u6570\u636e\u4e2d\u589e\u52a0\u7684\u6b21\u6570\u4ec5\u6709\u4e00\uff0c\u518d\u770b\u5c31\u53d1\u73b0\u8fd9\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u4e2a\u8f93\u51fa\u5e8f\u5217\u7684\u80cc\u5305\uff0c\u6570\u636e\u4e2d\u53ef\u4ee5\u5206\u6210\u5747\u5300\u7684\u6bb5\u6a21\u62df\u4e00\u4e2a\u7269\u54c1\uff0c\u4e0d\u96be\u5b9e\u73b0\u3002\n\n**Case 5-6:**\n\n\u6211\u4eec\u53ea\u662f\u7247\u9762\u7684\u770b C4\uff0c\u4f46\u662f C5\uff0cC6 \u5374\u53c8\u591a\u51fa\u4e86\u4e24\u4e2a\u95ee\u9898\uff0c\u7b2c\u4e00\u4e2a\u662f\u8df3\u8f6c\u4e0d\u518d\u5747\u5300\uff0c\u5982\u679c\u4e0d\u6ee1\u8db3\u6761\u4ef6\u53ef\u80fd\u4f1a\u8df3\u5230\u4efb\u610f\u5730\u65b9\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u901a\u8fc7\u66f4\u6539\u80cc\u5305\u5b9e\u73b0\u65b9\u6cd5\u505a\u5230\uff0c\u4f46\u6b64\u65f6\u53c8\u51fa\u73b0\u4e86\u4e00\u4e9b\u65e0\u610f\u4e49\u7684\u6761\u4ef6\u8df3\u8f6c\uff0c\u5b83\u4f7f\u5f97\u6570\u636e\u4e0d\u5747\u5300\uff0c\u53ef\u4ee5\u901a\u8fc7\u628a\u5206\u6bb5\u80cc\u5305\u6539\u6210\u5bf9\u6bcf\u4e00\u4e2a\u64cd\u4f5c\u8fdb\u884c\u7684\u80cc\u5305\u89e3\u51b3\uff0c\u4e0d\u8fc7\u8fd9\u771f\u7684\u5f88\u6162\u3002\n\n# Case 7-10\uff1a\n\n\u4e0a\u6b21\u8bb2\u5230\u6570\u636e\u4e2d\u4f1a\u51fa\u73b0\u65e0\u610f\u4e49\u8df3\u8f6c\uff0c\u800c\u653e\u5728\u672c\u6587\u6bb5\u7684\u6570\u636e\u4e0a\u76f4\u63a5\u5904\u7406\u5f88\u9ebb\u70e6\uff0c\u6240\u4ee5\u6211\u53c8\u6253\u4e86\u4e2a\u4ee3\u7801\u628a\u90a3\u4e9b\u65e0\u610f\u4e49\u8df3\u8f6c\u5904\u7406\u6389\u3002\n\nTrainChange-II \u5c31\u662f\u5728 TrainChange-I \u7684\u57fa\u7840\u4e0a\u53bb\u6389\u65e0\u610f\u4e49\u8df3\u8f6c\uff0c\u800cTrainRead-II \u5c31\u662f\u5c06\u6b64\u65f6\u7684\u6570\u636e\u53ef\u89c6\u5316\u5904\u7406\u3002\n\n\u5176\u5b9e\u8fd9\u56db\u4e2a\u6570\u636e\u5927\u4f53\u76f8\u540c\uff0c\u90a3\u4e48\u6211\u5c31\u5408\u5728\u4e00\u8d77\u8bb2\u3002\u8fd9\u56db\u4e2a\u70b9\u90fd\u6709\u7740 C6 \u7684\u7279\u5f81\uff0c\u4f46\u5176\u4e2d\u5176\u5b83\u7684\u53d8\u91cf\u660e\u663e\u589e\u52a0\uff0c\u800c\u5b83\u4eec\u7684\u5177\u4f53\u7ed3\u6784\u548c C3 \u5f88\u76f8\u4f3c\uff0c\u90a3\u4e48\u53ea\u9700\u8981\u5c06\u4e24\u4ee3\u7801\u7ed3\u5408\u5373\u53ef\uff0c\u4f46\u662f\u8981\u6ce8\u610f\u4e00\u70b9\uff0c\u5b83\u7684\u6570\u636e\u5728\u8fd9\u6b21\u5bcc\u6709\u53d8\u5316\uff0c\u6240\u4ee5\u4e0d\u80fd\u76f4\u63a5\u7167\u642c\u524d\u9762\u6570\u636e\u7684\u6027\u8d28\u6572\u4ee3\u7801\u3002\n\n**\u7ed3\u5c3e**\n\n------------\n\n\u5f88\u597d\u7684\u627e\u89c4\u5f8b\u7684\u7801\u529b\u9898\uff0c\u4e0b\u6b21\u4e0d\u8bb8\u518d\u51fa\u4e86\u3002",
        "postTime": 1637904556,
        "uid": 271260,
        "name": "PosVII",
        "ccfLevel": 7,
        "title": "P1335 [NOI2013] \u5c0fQ\u7684\u4fee\u70bc \u9898\u89e3"
    },
    {
        "content": "[\u6d1b\u8c37\u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P1335)\n\n\u4e00\u9053\u76f8\u5bf9\u6765\u8bf4\u96be\u5ea6\u8f83\u4f4e\u7684\u63d0\u7b54\u9898\u3002\n\n\u9996\u5148\u78b0\u5230\u63d0\u7b54\u9898\u6211\u4eec\u80af\u5b9a\u4e0d\u80fd\u601d\u8003\u4e00\u822c\u6027\u89e3\u6cd5\uff0c\u53ea\u80fd\u5c31\u4e8b\u8bba\u4e8b\uff0c\u5bf9\u7740\u5bf9\u5e94\u7684\u6570\u636e\u8bbe\u8ba1\u51fa\u76f8\u5e94\u7684\u7a0b\u5e8f\u3002\u7eb5\u89c2 10 \u7ec4\u6570\u636e\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e9b\u7684\u7ed3\u8bba\uff1a\n\n- \u5bf9\u4e8e\u6240\u6709\u8df3\u8f6c\u4e8b\u4ef6\uff0c\u90a3\u4e9b\u76ee\u6807\u4f4d\u7f6e $<$ \u5f53\u524d\u4f4d\u7f6e\u7684\u4e8b\u4ef6\uff0c\u90fd\u5f62\u5982 `i c 0 c 1 x 0`\uff0c\u4e5f\u5c31\u662f\u5982\u679c $0<1$ \u8df3\u8f6c\u5230 $x$\uff0c\u5426\u5219\u8df3\u8f6c\u5230 $0$\u200b\uff0c\u663e\u7136\u8fd9\u79cd\u4e8b\u4ef6\u53ea\u80fd\u9009\u62e9\u524d\u8005\uff0c\u4e5f\u5c31\u662f\u8bf4\u672c\u9898\u7684\u7ed3\u6784\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u6709\u9650\u72b6\u6001\u81ea\u52a8\u673a\uff0c\u4e0d\u4f1a\u6210\u73af\u3002\n- \u5728\u7b2c $2,3,7,8,9,10$ \u4e2d\u90fd\u51fa\u73b0\u4e86\u4e00\u4e2a\u7c7b\u4f3c\u7684\u7ed3\u6784\uff0c\u4e5f\u5c31\u662f\u4e00\u6bb5 `v 3 x1, v 4 x2, ..., v 12 x10` \u540e\u8ddf\u4e00\u5806\u5c06\u53d8\u91cf $v_3,v_4,\\cdots,v_{12}$ \u7d2f\u52a0\u5230 $v_1$ \u4e0a\u7684\u64cd\u4f5c\uff0c\u4e0d\u96be\u53d1\u73b0\u8fd9\u53ef\u4ee5\u89c6\u4f5c\uff0c\u6709\u82e5\u5e72\u4e2a\u5927\u793c\u5305\uff0c\u6bcf\u4e2a\u5927\u793c\u5305\u53ef\u4ee5\u9009\u62e9\u6216\u8005\u4e0d\u9009\u62e9\uff0c\u5982\u679c\u9009\u62e9\u5219\u9700\u8981\u5c06 $v_3,v_4,\\cdots,v_{12}$ \u90fd\u52a0\u4e0a\u4e00\u4e2a\u56fa\u5b9a\u7684\u503c\uff0c\u9694\u4e00\u6bb5\u65f6\u95f4\u4ee5\u540e\u4ee4\u7b54\u6848\u52a0\u4e0a $\\sum\\limits_{i=3}^{12}|v_i|$\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a A \u7ed3\u6784\u3002\n- \u5728\u7b2c $4,5,6,7,8,9,10$\u200b \u4e2d\u4e5f\u51fa\u73b0\u4e86\u4e00\u4e2a\u7c7b\u4f3c\u7684\u7ed3\u6784\uff0c\u4e5f\u5c31\u662f\u6240\u6709\u4e0e $v_2$\u200b \u6709\u5173\u7684\u64cd\u4f5c\uff0c\u7a0d\u52a0\u5206\u6790\u53ef\u4ee5\u53d1\u73b0\u8fd9\u662f\u4e00\u4e2a\u80cc\u5305\u6a21\u578b\uff0c\u53d8\u91cf $2$\u200b \u7684\u503c\u5c31\u662f\u5269\u4f59\u4f53\u79ef\uff0c\u5373\uff0c\u6709\u82e5\u5e72\u4e2a\u5927\u793c\u5305\uff0c\u6bcf\u4e2a\u5927\u793c\u5305\u6709\u4e24\u4e2a\u4e09\u4e2a\u5c5e\u6027 $to_i,v_i,w_i$\u200b\uff0c\u6bcf\u8fdb\u5165\u4e00\u4e2a\u793c\u5305\uff0c\u5982\u679c\u5269\u4f59\u4f53\u79ef $<v_i$\u200b \u5219\u76f4\u63a5\u8f6c\u5230 $to_i$\uff0c\u5426\u5219\u4f60\u53ef\u4ee5\u9009\u62e9\u5230 $i+1$\uff0c\u5e76\u82b1\u8d39 $w_i$ \u7684\u4f53\u79ef\u6216\u8005 $v_i$ \u7684\u4ef7\u503c\uff0c\u4e5f\u53ef\u4ee5\u9009\u62e9\u5230 $to_i$\u3002\u6211\u4eec\u79f0\u4e4b\u4e3a B \u7ed3\u6784\u3002\n\n\u505a\u51fa\u8fd9\u4e9b\u5c0f\u89c2\u5bdf\u540e\u672c\u9898\u5c31\u5bb9\u6613\u8bb8\u591a\u4e86\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e00\u7ec4\u6570\u636e\uff0c\u9009\u62e9\u64cd\u4f5c\u5f88\u5c11\uff0c\u76f4\u63a5\u7206\u641c\u5373\u53ef\u3002\u8fd9\u91cc\u76f4\u63a5\u7ed9\u51fa\u7b54\u6848\u3002\n\n```\n1\n1\n1\n1\n```\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u7ec4\u6570\u636e\uff0c\u662f\u4e00\u4e2a\u6709 25 \u4e2a\u5927\u793c\u5305\u7684 A \u7ed3\u6784\uff0c\u540c\u6837\u76f4\u63a5 $2^{25}$ \u66b4\u529b\u5373\u53ef\u3002\n\n```cpp\nconst int MAXN = 3.5e5;\nint n, m, pos[MAXN + 5][15];\nint val[15];\nstruct number {\n\tint opt, id;\n\tvoid read() {\n\t\tstatic char str[5]; scanf(\"%s%d\", str + 1, &id);\n\t\topt = (str[1] == 'v');\n\t}\n\tint operator () () {return (opt) ? val[id] : id;}\n};\nstruct qry {int opt, A, B; number C, D;} a[MAXN + 5];\nint main() {\n\tfreopen(\"train3.in\", \"r\", stdin);\n\tfreopen(\"train3.out\", \"w\", stdout);\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i = 1; i <= n; i++) {\n\t\tstatic char str[5]; scanf(\"%s\", str + 1);\n\t\tif (str[1] == 'v') {\n\t\t\tstatic char op[5]; scanf(\"%d%s\", &a[i].A, op + 1);\n\t\t\ta[i].B = (op[1] == '-'); // 0 for + and 1 for -\n\t\t\ta[i].C.read(); a[i].opt = 1;\n\t\t} else if (str[1] == 's') {\n\t\t\tscanf(\"%d%d\", &a[i].A, &a[i].B);\n\t\t\ta[i].opt = 2;\n\t\t} else {\n\t\t\ta[i].C.read(); a[i].D.read();\n\t\t\tscanf(\"%d%d\", &a[i].A, &a[i].B);\n\t\t\ta[i].opt = 3;\n\t\t}\n\t}\n\tvector<vector<int> > vec;\n\tfor (int i = 1; i <= n; ) {\n\t\tif (a[i].opt == 2) {\n\t\t\tvector<int> tmp;\n\t\t\tfor (int j = a[i].A; j < a[i].B; j++) tmp.pb(a[j].C());\n\t\t\tvec.pb(tmp); i = a[i].B;\n\t\t} else {\n\t\t\tll mx = -1; int msk = -1;\n\t\t\tfor (int j = 0; j < (1 << vec.size()); j++) {\n\t\t\t\tstatic ll ss[15]; fill0(ss);\n\t\t\t\tfor (int k = 0; k < vec.size(); k++) if (j >> k & 1) {\n\t\t\t\t\tfor (int l = 0; l < vec[k].size(); l++)\n\t\t\t\t\t\tss[l] += vec[k][l];\n\t\t\t\t}\n\t\t\t\tll sum = 0;\n\t\t\t\tfor (int k = 0; k < 10; k++) sum += abs(ss[k]);\n\t\t\t\tif (sum > mx) mx = sum, msk = j;\n\t\t\t}\n//\t\t\tprintf(\"! %lld %d %d\\n\", mx, msk, (int)vec.size());\n\t\t\tfor (int j = 0; j < vec.size(); j++) {\n\t\t\t\tif (msk >> j & 1) puts(\"1\");\n\t\t\t\telse puts(\"2\");\n\t\t\t}\n\t\t\tvec.clear();\n\t\t\ti += 50;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\u5bf9\u4e8e\u7b2c\u4e09\u7ec4\u6570\u636e\uff0c\u76f8\u5f53\u4e8e\u51e0\u767e\u4e2a A \u7c7b\u7ed3\u6784\uff0c\u6bcf\u4e2a A \u7c7b\u7ed3\u6784\u91cc\u6709\u5927\u6982 $10$ \u4e2a\u5927\u793c\u5305\uff0c\u5bf9\u6bcf\u4e2a A \u7c7b\u7ed3\u6784\u66b4\u529b\u6c42\u89e3\u52a0\u8d77\u6765\u5373\u53ef\u3002\n\n```cpp\nconst int MAXN = 3.5e5;\nint n, m, val[15];\nstruct number {\n\tint opt, id;\n\tvoid read() {\n\t\tstatic char str[5]; scanf(\"%s%d\", str + 1, &id);\n\t\topt = (str[1] == 'v');\n\t}\n\tint operator () () {return (opt) ? val[id] : id;}\n};\nstruct qry {int opt, A, B; number C, D;} a[MAXN + 5];\nint id[MAXN + 5], idcnt = 0, bel[MAXN + 5], nxt[MAXN + 5];\nll dp[2005][10005]; int to[2005][10005], cst[MAXN + 5], v[MAXN + 5];\nvector<int> vec;\nvoid work(int cur, int lft) {\n\tif (cur > idcnt) return;\n\tif (to[cur][lft]) vec.pb(1), work(cur + 1, lft - cst[cur + 1]);\n\telse {\n\t\tif (lft >= cst[cur + 1]) vec.pb(2);\n\t\twork(nxt[cur], lft);\n\t}\n}\nint main() {\n\tfreopen(\"train6.in\", \"r\", stdin);\n\tfreopen(\"train6.out\", \"w\", stdout);\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i = 1; i <= n; i++) {\n\t\tstatic char str[5]; scanf(\"%s\", str + 1);\n\t\tif (str[1] == 'v') {\n\t\t\tstatic char op[5]; scanf(\"%d%s\", &a[i].A, op + 1);\n\t\t\ta[i].B = (op[1] == '-'); // 0 for + and 1 for -\n\t\t\ta[i].C.read(); a[i].opt = 1;\n\t\t} else if (str[1] == 's') {\n\t\t\tscanf(\"%d%d\", &a[i].A, &a[i].B);\n\t\t\ta[i].opt = 2;\n\t\t} else {\n\t\t\ta[i].C.read(); a[i].D.read();\n\t\t\tscanf(\"%d%d\", &a[i].A, &a[i].B);\n\t\t\ta[i].opt = 3;\n\t\t}\n\t}\n\tfor (int i = 1; i <= n; i++) if (a[i].opt == 2) id[i] = ++idcnt;\n\tbel[n + 1] = idcnt + 1;\n//\tcerr << idcnt << endl;\n\tfor (int i = n; i; i--) bel[i] = ((a[i].opt == 2) ? id[i] : bel[i + 1]);\n\tfor (int i = 1; i <= n; i++) if (a[i].opt == 2) nxt[id[i]] = bel[a[i].B];\n\tfor (int i = 4; i <= n; i++) if (a[i].opt == 1) {\n\t\tif (a[i].A == 2) cst[bel[i]] = a[i].C();\n\t\telse v[bel[i]] = a[i].C();\n\t}\n\tfor (int i = idcnt; i; i--) for (int j = 0; j <= 10000; j++) {\n\t\tif (j < cst[i + 1]) dp[i][j] = dp[nxt[i]][j];\n\t\telse {\n\t\t\tif (dp[nxt[i]][j] < dp[i + 1][j - cst[i + 1]] + v[i + 1]) {\n\t\t\t\tdp[i][j] = dp[i + 1][j - cst[i + 1]] + v[i + 1];\n\t\t\t\tto[i][j] = 1;\n\t\t\t} else dp[i][j] = dp[nxt[i]][j];\n\t\t}\n\t}\n\tll mx = 0; int mxp = -1;\n\tfor (int i = 0; i <= 10000; i++) if (mx < dp[1][i]) mx = dp[1][i], mxp = i;\n\twork(1, mxp); cerr << mx << endl;\n\tfor (int x : vec) printf(\"%d\\n\", x);\n\treturn 0;\n}\n```\n\n\u5bf9\u4e8e\u7b2c\u56db\u3001\u4e94\u3001\u516d\u7ec4\u6570\u636e\uff0c\u76f8\u5f53\u4e8e\u4e00\u4e2a B \u7c7b\u7ed3\u6784\uff0c\u4ece\u540e\u5f80\u5de6\u80cc\u5305\u5373\u53ef\u3002\n\n```cpp\nconst int MAXN = 3.5e5;\nint n, m, val[15];\nstruct number {\n\tint opt, id;\n\tvoid read() {\n\t\tstatic char str[5]; scanf(\"%s%d\", str + 1, &id);\n\t\topt = (str[1] == 'v');\n\t}\n\tint operator () () {return (opt) ? val[id] : id;}\n};\nstruct qry {int opt, A, B; number C, D;} a[MAXN + 5];\nint id[MAXN + 5], idcnt = 0, bel[MAXN + 5], nxt[MAXN + 5];\nll dp[2005][10005]; int to[2005][10005], cst[MAXN + 5], v[MAXN + 5];\nvector<int> vec;\nvoid work(int cur, int lft) {\n\tif (cur > idcnt) return;\n\tif (to[cur][lft]) vec.pb(1), work(cur + 1, lft - cst[cur + 1]);\n\telse {\n\t\tif (lft >= cst[cur + 1]) vec.pb(2);\n\t\twork(nxt[cur], lft);\n\t}\n}\nint main() {\n\tfreopen(\"train6.in\", \"r\", stdin);\n\tfreopen(\"train6.out\", \"w\", stdout);\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i = 1; i <= n; i++) {\n\t\tstatic char str[5]; scanf(\"%s\", str + 1);\n\t\tif (str[1] == 'v') {\n\t\t\tstatic char op[5]; scanf(\"%d%s\", &a[i].A, op + 1);\n\t\t\ta[i].B = (op[1] == '-'); // 0 for + and 1 for -\n\t\t\ta[i].C.read(); a[i].opt = 1;\n\t\t} else if (str[1] == 's') {\n\t\t\tscanf(\"%d%d\", &a[i].A, &a[i].B);\n\t\t\ta[i].opt = 2;\n\t\t} else {\n\t\t\ta[i].C.read(); a[i].D.read();\n\t\t\tscanf(\"%d%d\", &a[i].A, &a[i].B);\n\t\t\ta[i].opt = 3;\n\t\t}\n\t}\n\tfor (int i = 1; i <= n; i++) if (a[i].opt == 2) id[i] = ++idcnt;\n\tbel[n + 1] = idcnt + 1;\n//\tcerr << idcnt << endl;\n\tfor (int i = n; i; i--) bel[i] = ((a[i].opt == 2) ? id[i] : bel[i + 1]);\n\tfor (int i = 1; i <= n; i++) if (a[i].opt == 2) nxt[id[i]] = bel[a[i].B];\n\tfor (int i = 4; i <= n; i++) if (a[i].opt == 1) {\n\t\tif (a[i].A == 2) cst[bel[i]] = a[i].C();\n\t\telse v[bel[i]] = a[i].C();\n\t}\n\tfor (int i = idcnt; i; i--) for (int j = 0; j <= 10000; j++) {\n\t\tif (j < cst[i + 1]) dp[i][j] = dp[nxt[i]][j];\n\t\telse {\n\t\t\tif (dp[nxt[i]][j] < dp[i + 1][j - cst[i + 1]] + v[i + 1]) {\n\t\t\t\tdp[i][j] = dp[i + 1][j - cst[i + 1]] + v[i + 1];\n\t\t\t\tto[i][j] = 1;\n\t\t\t} else dp[i][j] = dp[nxt[i]][j];\n\t\t}\n\t}\n\tll mx = 0; int mxp = -1;\n\tfor (int i = 0; i <= 10000; i++) if (mx < dp[1][i]) mx = dp[1][i], mxp = i;\n\twork(1, mxp); cerr << mx << endl;\n\tfor (int x : vec) printf(\"%d\\n\", x);\n\treturn 0;\n}\n```\n\n\u5bf9\u4e8e\u7b2c\u4e03\u3001\u516b\u3001\u4e5d\u3001\u5341\u7ec4\u6570\u636e\uff0c\u76f8\u5f53\u4e8e\u4e00\u4e2a B \u7c7b\u7ed3\u6784\uff0c\u4f46 B \u7c7b\u7ed3\u6784\u6bcf\u4e2a\u793c\u5305\u5185\u90e8\u53c8\u662f\u4e00\u4e2a A \u7c7b\u7ed3\u6784\uff0c\u540c\u6837\u9053\u7406\uff0c\u5148\u5bf9\u6bcf\u4e2a A \u7c7b\u7ed3\u6784\u8dd1\u4e00\u904d\u7b2c\u4e09\u7ec4\u6570\u636e\u7684\u6c42\u89e3\u65b9\u6cd5\u627e\u51fa\u5176\u4ee3\u4ef7\uff0c\u7136\u540e\u518d\u8dd1\u56db\u3001\u4e94\u3001\u516d\u5373\u53ef\u3002\n\n```cpp\nconst int MAXN = 3.6e5;\nint n, m, val[15];\nstruct number {\n\tint opt, id;\n\tvoid read() {\n\t\tstatic char str[5]; scanf(\"%s%d\", str + 1, &id);\n\t\topt = (str[1] == 'v');\n\t}\n\tint operator () () {return (opt) ? val[id] : id;}\n};\nstruct qry {int opt, A, B; number C, D;} a[MAXN + 5];\nint id[MAXN + 5], idcnt = 0, bel[MAXN + 5], nxt[MAXN + 5];\nll dp[2005][10005]; int to[2005][10005];\nll cst[MAXN + 5], v[MAXN + 5];\nvector<int> vec;\nbool flg[MAXN + 5];\nvector<vector<int> > tt[MAXN + 5];\nint mskv[MAXN + 5];\nvoid deal(int id) {\n\tfor (int i = 0; i < tt[id].size(); i++)\n\t\tvec.pb((mskv[id] >> i & 1) ? 1 : 2);\n}\nvoid work(int cur, int lft) {\n\tif (cur > idcnt) return;\n\tif (to[cur][lft]) vec.pb(1), deal(cur + 1), work(cur + 1, lft - cst[cur + 1]);\n\telse {\n\t\tif (lft >= cst[cur + 1]) vec.pb(2);\n\t\twork(nxt[cur], lft);\n\t}\n}\nint main() {\n\tfreopen(\"train10.in\", \"r\", stdin);\n\tfreopen(\"train10.out\", \"w\", stdout);\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i = 1; i <= n; i++) {\n\t\tstatic char str[5]; scanf(\"%s\", str + 1);\n\t\tif (str[1] == 'v') {\n\t\t\tstatic char op[5]; scanf(\"%d%s\", &a[i].A, op + 1);\n\t\t\ta[i].B = (op[1] == '-'); // 0 for + and 1 for -\n\t\t\ta[i].C.read(); a[i].opt = 1;\n\t\t} else if (str[1] == 's') {\n\t\t\tscanf(\"%d%d\", &a[i].A, &a[i].B);\n\t\t\ta[i].opt = 2;\n\t\t} else {\n\t\t\ta[i].C.read(); a[i].D.read();\n\t\t\tscanf(\"%d%d\", &a[i].A, &a[i].B);\n\t\t\ta[i].opt = 3;\n\t\t}\n\t}\n\tfor (int i = 1; i <= n; i++) if (a[i].opt == 2) {\n\t\tflg[i] = 1;\n\t\tfor (int j = 1; j <= 10; j++) flg[i] &= (a[i + j].opt == 1);\n\t} \n\tfor (int i = 1; i <= n; i++) if (a[i].opt == 2 && !flg[i]) id[i] = ++idcnt;\n\tbel[n + 1] = idcnt + 1;\n//\tfor (int i = 1; i <= n; i++) cerr << id[i] << endl;\n//\tcerr << idcnt << endl;\n\tfor (int i = n; i; i--) bel[i] = ((a[i].opt == 2 && !flg[i]) ? id[i] : bel[i + 1]);\n\tfor (int i = 1; i <= n; i++) if (a[i].opt == 2 && !flg[i]) nxt[id[i]] = bel[a[i].B];\n\tfor (int i = 1; i <= n; i++) if (a[i].opt == 2 && flg[i]) {\n\t\tvector<int> tmp;\n\t\tfor (int j = 1; j <= 10; j++) tmp.pb(a[i + j].C());\n\t\ttt[bel[i]].pb(tmp);\n\t}\n\tfor (int i = 4; i <= n; i++) if (a[i].opt == 1 && a[i].A == 2)\n\t\tcst[bel[i]] = a[i].C();\n\tfor (int i = 1; i <= idcnt + 1; i++) {\n\t\tll mx = -1; int msk = -1;\n\t\tfor (int j = 0; j < (1 << tt[i].size()); j++) {\n\t\t\tstatic ll vals[15]; fill0(vals);\n\t\t\tfor (int k = 0; k < tt[i].size(); k++) if (j >> k & 1)\n\t\t\t\tfor (int l = 0; l < 10; l++) vals[l] += tt[i][k][l];\n\t\t\tll ss = 0;\n\t\t\tfor (int l = 0; l < 10; l++) ss += abs(vals[l]);\n\t\t\tif (ss > mx) mx = ss, msk = j;\n\t\t}\n\t\tv[i] = mx; mskv[i] = msk;\n\t}\n\tfor (int i = 1; i <= idcnt; i++) cerr << v[i] << endl;\n\tfor (int i = idcnt; i; i--) for (int j = 0; j <= 1000; j++) {\n\t\tif (j < cst[i + 1]) dp[i][j] = dp[nxt[i]][j];\n\t\telse {\n\t\t\tif (dp[nxt[i]][j] < dp[i + 1][j - cst[i + 1]] + v[i + 1]) {\n\t\t\t\tdp[i][j] = dp[i + 1][j - cst[i + 1]] + v[i + 1];\n\t\t\t\tto[i][j] = 1;\n\t\t\t} else dp[i][j] = dp[nxt[i]][j];\n\t\t}\n\t}\n\tll mx = 0; int mxp = -1;\n\tfor (int i = 0; i <= 1000; i++) if (mx < dp[1][i]) mx = dp[1][i], mxp = i;\n\twork(1, mxp); cerr << mx << endl;\n\tfor (int x : vec) printf(\"%d\\n\", x);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1644247503,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1335 [NOI2013] \u5c0fQ\u7684\u4fee\u70bc"
    },
    {
        "content": "### Test 1\n\n\u6ca1\u6709\u9000\u56de\u53bb\u7684\u5faa\u73af\uff0c`\u9009\u62e9\u8df3\u8f6c\u6570`\u4e5f\u5f88\u5c11\uff0c\u76f4\u63a5\u66b4\u529b\u505a\u5c31\u884c\u3002\n\n### Test 2&3\n\n\u7b2c 2 \u4e2a\u70b9\u7684`\u9009\u62e9\u8df3\u8f6c`\u6570\u4e5f\u4e0d\u591a\uff0c\u540c\u6837\u53ef\u4ee5\u66b4\u529b\uff0c\u4f46\u7b2c 3 \u4e2a\u70b9\u5c31\u4e0d\u4e00\u6837\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u80fd\u4e0d\u80fd\u4f18\u5316\u3002\n\n\u89c2\u5bdf\u7b2c 3 \u4e2a\u70b9\u7684\u7ed3\u6784\uff0c\u53d1\u73b0\u6574\u4e2a\u4e8b\u4ef6\u5e8f\u5217\u53ef\u4ee5\u5212\u5206\u6210\u82e5\u5e72\u6bb5\uff0c\u6bcf\u6bb5\u53c8\u53ef\u4ee5\u5206\u6210\u79ef\u7d2f\u8d21\u732e\uff08\u4fee\u6539\u53d8\u91cf 3~12 \u7684\u503c\uff09\u548c\u7edf\u8ba1\u8d21\u732e\uff08\u6839\u636e\u53d8\u91cf 3~12 \u5404\u81ea\u7684\u503c\u4fee\u6539\u53d8\u91cf 1\uff0c\u540c\u65f6\u6e05\u7a7a\u53d8\u91cf 3~12\uff09\u4e24\u90e8\u5206\u3002\n\n\u663e\u7136\u5404\u6bb5\u4e4b\u95f4\u7684\u8d21\u732e\u4e92\u4e0d\u5f71\u54cd\uff0c\u540c\u65f6\u6bcf\u6bb5\u5404\u81ea\u7684`\u9009\u62e9\u8df3\u8f6c`\u6570\u53c8\u6bd4\u8f83\u5c0f\uff0c\u6240\u4ee5\u62c6\u5f00\u6765\u5206\u522b\u66b4\u529b\u5904\u7406\u5373\u53ef\u3002\n\n\uff08\u8fd9\u91cc\u8fd8\u6709\u4e2a\u6bd4\u8f83\u53e3\u80e1\u7684\u505a\u6cd5\uff1a\u89c2\u5bdf\u7edf\u8ba1\u8fc7\u7a0b\u7684\u90e8\u5206\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u5bf9\u6240\u6709\u7684\u53d8\u91cf 3~12\uff0c\u7ed9\u53d8\u91cf 1 \u52a0\u4e0a\u5176\u7684\u7edd\u5bf9\u503c\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u8fd9\u4e9b\u53d8\u91cf\u5728\u7edf\u8ba1\u8d21\u732e\u90e8\u5206\u65f6\u7684\u6b63\u8d1f\u60c5\u51b5\uff0c\u8fd9\u6837\u5bf9\u4e8e\u79ef\u7d2f\u8d21\u732e\u90e8\u5206\u7684\u6240\u6709\u4e8b\u4ef6\uff0c\u5176\u5bf9\u4e8e\u6700\u540e\u53d8\u91cf 1 \u7684\u8d21\u732e\u5c31\u662f\u786e\u5b9a\u7684\uff0c\u76f4\u63a5\u8d2a\u5fc3\u5373\u53ef\u3002\u8fd9\u6837\u4e0d\u9700\u8981\u8003\u8651`\u9009\u62e9\u8df3\u8f6c`\u6570\u7684\u5927\u5c0f\uff09\n\n### Test 4\n\n\u89c2\u5bdf\u6570\u636e\uff0c\u53d1\u73b0\u6574\u4e2a\u4e8b\u4ef6\u5e8f\u5217\u5f88\u6574\u9f50\uff0c\u53ef\u4ee5\u6bcf 6 \u4e2a\u5206\u4e3a\u4e00\u7ec4\uff08\u9664\u53bb\u7b2c 1 \u4e2a\u4e8b\u4ef6\uff09\u3002\n\n\u89c2\u5bdf\u6bcf\u7ec4\u4e8b\u4ef6\uff0c\u53d1\u73b0\u4e00\u7ec4\u4e8b\u4ef6\u76f8\u5f53\u4e8e\u4e00\u4e2a\u6709\u5927\u5c0f\u548c\u4ef7\u503c\u7684\u7269\u54c1\u3002\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e2a\u70b9\u76f8\u5f53\u4e8e\u4e00\u4e2a 01 \u80cc\u5305\u95ee\u9898\u3002\u800c\u7b2c 1 \u6b65\u76f8\u5f53\u4e8e\u8bbe\u7f6e\u80cc\u5305\u7684\u5bb9\u91cf\u3002\n\n\u76f4\u63a5\u80cc\u5305\u95ee\u9898\u6c42\u65b9\u6848\u5373\u53ef\u3002\u6ce8\u610f\u8f93\u51fa\u65f6\u5982\u679c\u5f53\u524d\u80cc\u5305\u5bb9\u91cf\u585e\u4e0d\u4e0b\u8fd9\u4e2a\u7269\u54c1\uff0c\u90a3\u4e48\u9700\u8981\u8df3\u8fc7\u4e0d\u8f93\u51fa\u8fd9\u4e2a\u7269\u54c1\u7684\u9009\u62e9\u3002\n\n### Test 5&6\n\n\u4e00\u4e0a\u6765\u770b\u7b2c 5 \u4e2a\u70b9\u5bb9\u6613\u770b\u9519\uff0c\u4ee5\u4e3a\u548c\u7b2c 4 \u4e2a\u4e00\u6837\u4e5f\u662f\u4e2a\u666e\u901a\u7684\u80cc\u5305\uff0c\u7136\u540e\u4f60\u4f1a\u53d1\u73b0\u63d0\u4ea4\u7684\u8fd4\u56de\u7ed3\u679c\u8fde\u683c\u5f0f\u90fd\u4e0d\u5bf9\u3002\n\n\u8ba4\u771f\u89c2\u5bdf\u4e00\u904d\uff0c\u5bb9\u6613\u53d1\u73b0\u7b2c\u4e00\u7ec4\u4e8b\u4ef6\u7684\u8df3\u8f6c\u4f4d\u7f6e\u662f\u6700\u672b\u5c3e\uff0c\u800c\u4e14\u539f\u6765\u7b2c\u4e00\u7ec4\u4e8b\u4ef6\u7684\u6700\u540e\u4e00\u4e2a\u4e8b\u4ef6\u8bed\u53e5\u4e0d\u89c1\u4e86\u3002\u800c\u5982\u679c\u7ffb\u5230\u6570\u636e\u70b9\u6700\u4e0b\u9762\uff0c\u53ef\u4ee5\u53d1\u73b0\u8fd9\u6700\u540e\u4e00\u4e2a\u4e8b\u4ef6\u51fa\u73b0\u5728\u6700\u540e\u3002\n\n\u5206\u6790\u4e00\u4e0b\u6b64\u65f6\u8df3\u8f6c\u4f4d\u7f6e\u7684\u610f\u4e49\uff0c\u53ef\u4ee5\u53d1\u73b0\u5982\u679c\u8fd9\u4e2a\u7269\u54c1\u6ca1\u6709\u88ab\u9009\u4e0a\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5176\u4ed6\u4e00\u8fde\u4e32\u7684\u7269\u54c1\u4e5f\u65e0\u6cd5\u88ab\u9009\u53d6\u3002\u4e0d\u59a8\u731c\u6d4b\u8fd9\u65f6\u7684\u95ee\u9898\u4ece 01 \u80cc\u5305\u53d8\u6210\u6811\u5f62\u80cc\u5305\u3002\n\n\u628a\u4e00\u7ec4\u4e8b\u4ef6\u7684\u524d 5 \u4e2a\u4e8b\u4ef6\u770b\u6210\u4e00\u4e2a\u5de6\u62ec\u53f7\uff0c\u6700\u540e 1 \u4e2a\u770b\u6210\u53f3\u62ec\u53f7\uff0c\u6839\u636e\u5d4c\u5957\u5173\u7cfb\u5efa\u7acb\u51fa\u6811\uff0c\u505a\u6811\u5f62\u80cc\u5305\u5373\u53ef\u3002\u7b2c 6 \u4e2a\u70b9\u540c\u7406\u3002\n\n\u56e0\u4e3a\u662f\u63d0\u7b54\uff0c\u6240\u4ee5\u5e76\u4e0d\u9700\u8981\u5f88\u4f18\u79c0\u7684\u590d\u6742\u5ea6\uff0c\u53ef\u4ee5\u76f4\u63a5\u5199 $O(nm^2)$\uff08$n$ \u4e3a\u7269\u54c1\u6570\uff0c$m$ \u4e3a\u80cc\u5305\u5927\u5c0f\uff09\u7684\u505a\u6cd5\u3002\u5b9e\u6d4b\u8fd9\u79cd\u505a\u6cd5\u5728\u6211\u7684\u7535\u8111\u4e0a\u8dd1\u7b2c 6 \u4e2a\u70b9\u53ea\u7528 3min\u3002\n\n### Test 7&8\n\n\u5bb9\u6613\u53d1\u73b0\u5176\u5b9e\u5c31\u662f\u7b2c 2 \u4e2a\u70b9\u548c\u7b2c 4 \u4e2a\u70b9\u7684\u7f1d\u5408\uff0c\u5148\u7528 2 \u7684\u65b9\u6cd5\u8ba1\u7b97\u7269\u54c1\u7684\u4ef7\u503c\u518d\u8fdb\u884c\u80cc\u5305\u3002\n\n\u628a\u4e24\u4efd\u4ee3\u7801\u5408\u5e76\u4e00\u4e0b\u5373\u53ef\u3002\n\n\uff08\u95f2\u8bdd\uff1a\u5176\u5b9e\u7b2c 1 \u4e2a\u70b9\u4e5f\u53ef\u4ee5\u770b\u6210\u8fd9\u79cd\u7ed3\u6784\uff09\n\n### Test 9&10\n\n~~\u6211\u751a\u81f3\u5b8c\u5168\u53ef\u4ee5\u731c\u5230\u8fd9\u4e2a\u70b9\u60f3\u8ba9\u6211\u5e72\u4ec0\u4e48\u3002~~\n\n\u663e\u7136\u5c31\u662f\u628a\u80cc\u5305\u6362\u6210\u6811\u5f62\u7684\uff0c\u6240\u4ee5\u76f4\u63a5\u5408\u5e76\u7b2c 2 \u4e2a\u70b9\u548c\u7b2c 5&6 \u4e2a\u70b9\u7684\u4ee3\u7801\u5373\u53ef\u3002\n\n[\u5168\u90e8\u4ee3\u7801\u3002](https://www.luogu.com.cn/paste/6ucjs3a0)",
        "postTime": 1644396605,
        "uid": 104581,
        "name": "kkk\u7684\u5c0f\u8214\u72d7",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1335 \u3010[NOI2013] \u5c0fQ\u7684\u4fee\u70bc\u3011"
    }
]