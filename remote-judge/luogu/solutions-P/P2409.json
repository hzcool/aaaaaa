[
    {
        "content": "\u89e3\u6cd51\n\n\u4ee4f[i][j]\u4e3a\u524di\u884c\uff0c\u603b\u548c\u4e3aj\u7684\u65b9\u6848\u6570\u3002\n\nf[i]\u53ef\u4ee5\u7531f[i-1]\u9012\u63a8\u5f97\u5230\u3002\u7531\u4e8e\u5f88\u96be\u8bf4\u660e\uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u4f8b\u5b50\u4ee3\u66ff\u8bf4\u660e\u3002\n\n```cpp\nj     1  2  3  4  5  6  7  8  9  10 11 12 13 14\nf[1]  1     1  1  1\n-----------------------------------------------\nf[1]\u5f80\u53f3\u79fb7\u683c              1     1  1  1\nf[1]\u5f80\u53f3\u79fb9\u683c                    1     1  1  1\nf[2]\u4e3a\u4e0a\u9762\u4e24\u884c\u52a0\u8d77\u6765       1     2  1  2  1  1\n```\n\u4f9d\u6b64\u7c7b\u63a8\u3002\n\n\u7531\u4e8e\u6700\u591a100\u76d2\uff0c\u6bcf\u4e2a\u6700\u5927100\uff0c\u6240\u4ee5j\u6700\u591a10000\u3002\n\n\u5f53\u7136\uff0c\u6211\u4eec\u6ca1\u6709\u5fc5\u8981\u8bbe\u7f6ef[100][100000]\u8fd9\u4e48\u5927\uff0c\u4f7f\u7528\u6eda\u52a8\u6570\u7ec4\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u7b97\u6cd5\u590d\u6742\u5ea6O(sum\\*n\\*m)\n\n\u53ef\u80fd\u6709\u70b9\u5927\u3002\u4f46\u662f\u8003\u8651\u5230\uff0c\u6700\u5927\u503c\u6bcf\u6b21\u6700\u591a\u589e\u52a0100\uff0c\u6240\u4ee5\u53ef\u4ee5\u505a\u5e38\u6570\u4f18\u5316\u3002\u5b9e\u9645\u4e0a\u5c31\u7b97\u4e0d\u7528\u4e5f\u53ef\u4ee5ac\u3002\n\n\n\u5982\u679c\u6570\u636e\u8303\u56f4\u662fk\u6bd4\u8f83\u5c0f\u800c\u6bcf\u4e2a\u6570\u5b57\u6bd4\u8f83\u5927\uff0c\u90a3\u4e48\u53ef\u4ee5\u7528\u5806\u7ef4\u62a4\u524dk\u4e2a\u6700\u5c0f\u548c\u3002\u5f97\u5230\u7684\u6559\u8bad\u662f\uff0c\u4e0d\u540c\u7684\u7b97\u6cd5\uff0c\u5e94\u7528\u5728\u4e0d\u540c\u7684\u6570\u636e\u8303\u56f4\u4e0a\u3002\n\n\nClaris\u63d0\u4f9b\u4e86\u4e00\u79cd\u4e8c\u5206sum\u503c\uff0c\u7136\u540e\u641c\u7d22\u526a\u679d\uff0c\u867d\u7136\u7384\u5b66\u590d\u6742\u5ea6\u4e0d\u8fc7\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8fd9\u9053\u9898\u3002\n",
        "postTime": 1477749815,
        "uid": 1,
        "name": "kkksc03",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2409 \u3010Y\u7684\u79ef\u6728\u3011"
    },
    {
        "content": "\u4e5f\u662fdp\u5566\u3002\n\nf[i][j]\u8868\u793a\u52a0\u5230\u7b2ci\u884c\uff0c\u603b\u548c\u4e3aj\u7684\u60c5\u51b5\uff0c\u6bcf\u4e00\u5c42\u90fd\u53ef\u4ee5\u5f53\u4f5c01\u80cc\u5305\u6765\u89e3\u51b3\u3002\n\n\u6838\u5fc3\u72b6\u6001\u8f6c\u79fb\u7684\u4ee3\u7801\u4e5f\u662f01\u80cc\u5305\u7684\u4ee3\u7801\u518d\u591a\u52a0\u4e00\u4e2afor\u5faa\u73af\u8868\u793a\u4ece\u7b2c1\u5c42\u5faa\u73af\u5230\u7b2cn\u5c42\u3002\n\n\u5176\u4f59\u521d\u59cb\u5316\u548c\u8f93\u51fa\u5c31\u90fd\u6bd4\u8f83\u7b80\u5355\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<iostream>\nusing namespace std;\nint n,m,s[101][101],f[101][10001],tot,maxm,summ;\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;++i){\n        scanf(\"%d\",&s[i][0]);\n        for(int j=1;j<=s[i][0];++j){\n            scanf(\"%d\",&s[i][j]);\n            maxm=max(maxm,s[i][j]);\n        }\n        summ+=maxm;\n    }\n    f[0][0]=1;\n    for(int i=1;i<=n;++i)\n        for(int j=1;j<=s[i][0];++j)\n            for(int k=summ;k>=s[i][j];--k)\n                if(f[i-1][k-s[i][j]])\n                    f[i][k]+=f[i-1][k-s[i][j]];\n    for(int i=1;i<=summ;++i)\n        if(f[n][i]){\n            tot++;\n            if(tot<=m){\n                printf(\"%d \",i);\n                f[n][i]--;\n            }\n            else\n                return 0;\n            i--;\n        }\n    return 0;\n}\n```",
        "postTime": 1504658969,
        "uid": 18207,
        "name": "\u6c5f\u5c7f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2409 \u3010Y\u7684\u79ef\u6728\u3011"
    },
    {
        "content": "\u5148\u7ed9\u6bcf\u4e2a\u5e8f\u5217\u6392\u5e8f\u3002\n\n\n\u53ef\u4ee5\u505an\u6b21\u4e24\u4e2a\u5e8f\u5217\u7684\u5408\u5e76\u3002\n\n\u6bcf\u6b21\u5408\u5e76\u5c31\u662f\u7528\u5806\uff0c\u8bb0\u5f55\u548c\u4e0e\u5728\u7b2c\u4e8c\u4e2a\u5e8f\u5217\u4e2d\u7684\u4f4d\u7f6e,\u6bcf\u6b21\u53d6\u5806\u5934\uff0c\u518d\u52a0\u5165\u4f4d\u7f6e+1\u7684\u9009\u62e9\u3002\n\n\uff08\u521d\u59cb\u662f\u7b2c\u4e00\u4e2a\u5e8f\u5217\u7684\u6bcf\u4e2a\u503c\u90fd\u9009\u62e9\u7b2c\u4e8c\u4e2a\u5e8f\u5217\u7684\u7b2c\u4e00\u4e2a\u503c\uff09\n\n\u65f6\u95f4n\\*k\\*logk\n\n\n\u7531\u4e8e\u6570\u636e\u8303\u56f4\u5c0f\uff0c\u8fd9\u6837\u5c31\u80fd\u8fc7\u4e86\uff0c\u4f46\u6211\u4e00\u76f4\u5728\u601d\u8003\u6709\u6ca1\u6709\u6574\u4f53\u7528\u5806\u6765\u8fbe\u5230klogk\u7684\u65b9\u6cd5\u3002\n\n\n\u5b9a\u4e49\u4e00\u4e2a\u70b9\u7684v\u503c\u662f\u5b83\u4e0e\u6240\u5728\u5e8f\u5217\u540e\u9762\u7684\u70b9\u7684\u503c\u7684\u5dee(\u5982\u679c\u662f\u5e8f\u5217\u5c3e\u53ef\u8ba4\u4e3a\u662f+oo)\u3002\n\n\u663e\u7136\uff0c\u521d\u59cb\u72b6\u6001\u5c31\u662f\u6240\u6709\u5e8f\u5217\u53d6\u5934\u5165\u5806\u3002\u5806\u662f\u4ee5v\u4e3a\u5173\u952e\u5b57\u7684\u6700\u5c0f\u5806\u3002\n\n\u7b2c\u4e00\u4e2a\u7b54\u6848\u662f\u5e8f\u5217\u5934\u548c\u3002\u4ee5\u6b64\u4e3a\u57fa\u7840\u503c\uff0c\u7b2c\u4e8c\u4e2a\u7b54\u6848\u662fbase+\u5806\u5934\u7684v\u3002\n\n\u7136\u540e\u5982\u4f55\u4ee5\u8fd9\u4e2a\u70b9\u6765\u66f4\u65b0\u72b6\u6001\u4f7f\u5f97\u4e0d\u91cd\u590d\u5462\uff1f\n\n\u4e00\u4e2a\u6734\u7d20\u7684\u60f3\u6cd5\u662f\uff0c\u5728\u539f\u5806\u4e2d\u5220\u6389\u5806\u5934\uff0c\u5efa\u4e00\u4e2a\u65b0\u5806\uff0c\u65b0\u5806\u5f3a\u5236\u9009\u62e9\u5f53\u524d\u70b9\uff0c\u4e5f\u5c31\u662f\u65b0\u5806\u57fa\u7840\u503c=\u539f\u5806\u57fa\u7840\u503c+\u5f53\u524d\u70b9\u7684v\uff0c\n\n\u5e76\u4e14\u5728\u65b0\u5806\u4e2d\u52a0\u5165\u5f53\u524d\u70b9\u7684\u540e\u7ee7\u8282\u70b9\u3002\n\n\u7136\u800c\u6211\u4eec\u7528\u4e00\u4e2a\u5927\u7684\u5806\u6765\u7ef4\u62a4\u6240\u6709\u5806\u7684(\u57fa\u7840\u503c+\u5806\u5934\u7684v)\u7684\u6700\u5c0f\u3002\n\n\u8003\u8651\u5230\u5176\u4ed6\u70b9\u6ca1\u6709\u6539\u53d8\uff0c\u6211\u4eec\u4f7f\u7528\u53ef\u6301\u8282\u5316\u5de6\u504f\u6811\u6765\u5b8c\u6210\u8fd9\u4e00\u64cd\u4f5c\uff0c\u5c31\u80fd\u8fbe\u5230 nlon+k(logk+logn)\u4e86\n\n//\u5efa\u521d\u59cb\u5806+k\\*(\u6bcf\u6b21\u5927\u5806+\u5c0f\u5806)\n\n(\u5176\u5b9e\u6211\u4e00\u5f00\u59cb\u60f3\u5230\u7684\u662f\u8f6c\u5316\u6210k\u77ed\u8def\uff0c\u4f46\u6211\u4e0d\u4f1a\u3002\u3002)\n\n```cpp\n#include<bits/stdc++.h>\n#include<ext/pb_ds/priority_queue.hpp>\nusing namespace std;\nusing namespace __gnu_pbds;\n\nint temp;\n#define swap(x,y) {temp=x;x=y;y=temp;}\n\n#define TOT 10002\n#define N 102\n#define M 5000000\n#define oo (1<<29)\n#define pr pair<int,int>\n//ans,id\nstruct xiao\n{\n    __inline__ __attribute((always_inline)) bool operator()(pr a,pr b)//\u5f3a\u5236inline\u7684\u65b9\u6cd5\n    {\n        return a.first>b.first;\n    }\n};\ntypedef __gnu_pbds::priority_queue<pr,xiao> heap;\n\nheap H;//\u5927\u5806\u76f4\u63a5\u7528pb_ds\u7684\nheap::point_iterator dy[TOT];\n\n\nint tot;\nint v[TOT];bool is_end[TOT];\nstruct node\n{\n    int l,r,dis;\n    int id;\n}T[M];int now;\nint h[TOT],now_h;\n\nvoid merge(int &X,int x,int y)\n{\n    if (v[T[x].id]>v[T[y].id]) swap(x,y)\n    if (!y) { X=x;return; }\n    \n    X=++now;\n    T[X].id=T[x].id;\n    \n    int &r=T[X].r;\n    merge(r,T[x].r,y);\n    if (T[r].dis>T[T[x].l].dis) { T[X].l=r;r=T[x].l; }\n    else T[X].l=T[x].l;\n    \n    T[X].dis=T[r].dis+1;\n}\n\nint main()\n{ freopen(\"1.in\",\"r\",stdin);freopen(\"1.out\",\"w\",stdout);\n  int n,k;\n  scanf(\"%d%d\",&n,&k);\n  \n  T[0].dis=-1;v[0]=oo;\n  \n  int m,i,ans=0,a[N];\n  while (n--)\n  {\n      scanf(\"%d\",&m);\n      for (i=1;i<=m;++i) scanf(\"%d\",a+i);\n      sort(a+1,a+m+1);\n      ans+=a[1];\n      if (m>1)\n      {\n          v[++tot]=a[2]-a[1];T[++now].id=tot;merge(h[1],h[1],now);\n        for (i=2;i<m;++i)  v[++tot]=a[i+1]-a[i]; \n        is_end[tot]=1;\n    }\n  }\n\n  \n  k-=1;printf(\"%d \",ans);\n  \n  pr I;\n  dy[1]=H.push(pr{ans+v[T[h[1]].id],1});\n  now_h=1;int id;\n  while (k--)\n  {\n      I=H.top();\n      ans=I.first;\n      printf(\"%d \",ans);\n      \n      i=I.second;\n      int &x=h[i];\n      id=T[x].id;\n      \n      merge(x,T[x].l,T[x].r);\n      if (!x) H.pop();\n      else H.modify(dy[i],pr{ans-v[id]+v[T[x].id],i});\n      \n      if (!is_end[id])\n    {\n        T[++now].id=id+1;\n        merge(h[++now_h],x,now);\n        dy[now_h]=H.push(pr{ans+v[T[h[now_h]].id],now_h});\n    }\n    else \n    if (x) \n    {\n        h[++now_h]=x;\n        dy[now_h]=H.push(pr{ans+v[T[h[now_h]].id],now_h});\n    }\n  }\n}\n```",
        "postTime": 1480213564,
        "uid": 9168,
        "name": "kczno1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2409 \u3010Y\u7684\u79ef\u6728\u3011"
    },
    {
        "content": "\u601d\u8def\uff1af[i,j]\u8bb0\u5f55\u6bcf\u4e00\u76d2\u79ef\u6728\uff0cf[i,0]\u4e3a\u7b2ci\u76d2\u79ef\u6728\u6570\u91cf\u3002\u5c06\u6bcf\u4e00\u76d2\u4ece\u5c0f\u5230\u5927\u6392\u5b8c\u5e8f\u540edp,max\u4e3a\u53ef\u4ee5\u53d6\u5230\u7684\u6700\u5927\u503c\u3002\n\n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\u8bbedg[i,j]\u4e3a\u524di\u76d2\u53d6\u5230j\u7684\u65b9\u6848\u6570,\u5982\u679c\u5f53\u524ddg[i-1,j]>0\n\n\u90a3\u4e48inc(dg[i,j+f[i,t]],dg[i-1,j]);(1<=i<=n;i-1<=j<=max;1<=t<=f[i,0])\n\n\u6700\u540ei\u4ece\u5c0f\u5230\u5927\u5faa\u73af\u8f93\u51fa\u524dk\u4e2adg[n,i]\u5373\u53ef\n\n\u6838\u5fc3\u4ee3\u7801\uff1a\n\n```cpp\nfor i:=1 to n do\n  for j:=i-1 to max do\n   if dg[i-1,j]>0 then\n    for t:=1 to f[i,0] do\n     inc(dg[i,j+f[i,t]],dg[i-1,j]);\n```\n\u5b8c\u6574\u4ee3\u7801\uff1a\n\n\u00b7\u00b7\u00b7\n\n```cpp\nvar f:array[0..100,0..100] of longint;\n    dg:array[0..100,0..10000] of longint;\n    a:array[0..100] of longint;\n    i,j,k,t,m,n,p,max:longint;\nprocedure sort(l,r,k: longint);\n      var\n         i,j,x,y: longint;\n      begin\n         i:=l;\n         j:=r;\n         x:=f[k,(l+r) div 2];\n         repeat\n           while f[k,i]<x do\n            inc(i);\n           while x<f[k,j] do\n            dec(j);\n           if not(i>j) then\n             begin\n                y:=f[k,i];\n                f[k,i]:=f[k,j];\n                f[k,j]:=y;\n                inc(i);\n                j:=j-1;\n             end;\n         until i>j;\n         if l<j then\n           sort(l,j,k);\n         if i<r then\n           sort(i,r,k);\n      end;\nbegin\n {assign(input,'233.in');\n reset(input);}\n readln(n,k);\n for i:=1 to n do\n  begin\n   read(f[i,0]);\n   for j:=1 to f[i,0] do begin read(f[i,j]); if f[i,j]>a[i] then a[i]:=f[i,j]; end;\n  end;\n dg[0,0]:=1;\n for i:=1 to n do begin sort(1,f[i,0],i); inc(max,a[i]); end;\n for i:=1 to n do\n  for j:=i-1 to max do\n   if dg[i-1,j]>0 then\n    for t:=1 to f[i,0] do\n     inc(dg[i,j+f[i,t]],dg[i-1,j]);\n t:=0; i:=0;\n while t<k do\n  begin\n   inc(i);\n   if dg[n,i]>0 then\n   begin\n    for j:=1 to dg[n,i] do begin write(i,' '); inc(t); if t=k then halt; end;\n   end;\n  end;\nend.\n\u00b7\u00b7\u00b7\n```",
        "postTime": 1477751083,
        "uid": 19049,
        "name": "Mogician",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2409 \u3010Y\u7684\u79ef\u6728\u3011"
    },
    {
        "content": "\u672c\u6765\u60f3\u505a\u5e38\u6570\u4f18\u5316\u7684\uff0c\u56e0\u4e3an\\*m\\*weight(max-min)\u7684\u590d\u6742\u5ea6\u5728\u53d8\u6001\u7684\u60c5\u51b5\u4e0b\u53ef\u80fd\u8fbe\u52301E\uff0c\u4f46\u5b9e\u9645\u4e0a\u6570\u636e\u6bd4\u8f83\u6c34\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u4e8e\u662f\u8fd9\u9053\u6708\u8d5b\u7684\u65f6\u5019AC\u6570\u5f88\u5c11\u7684\u9898\u76ee\u5c31\u53d8\u6c34\u9898\u4e86\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\n\ndp\u6570\u7ec4\u53ef\u4ee5\u8003\u8651\u6eda\u52a8\u3002\u601d\u8def\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u4e00\u4e2a\u52a0\u5f3a\u7248\u7684\u80cc\u5305\u3002\n\n\n\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <cstring>\n#include <cmath>\n#include <queue>\nusing namespace std;\nint n,k,m[101][101],f[101][10001],minn,maxn;\nint main()\n{\n    scanf(\"%d%d\",&n,&k);\n    for (int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&m[i][0]);\n        for (int j=1;j<=m[i][0];j++)\n            scanf(\"%d\",&m[i][j]);\n        sort(m[i]+1,m[i]+m[i][0]+1);//\u6392\u5e8f\u5b9e\u9645\u4e0a\u4e5f\u6ca1\u6709\u4ec0\u4e48\u5375\u7528\u561b\n    }\n    f[0][0]=1;\n    for (int i=1;i<=n;i++)\n    {\n        int maxt=-1,mint=10001;\n        for (int j=1;j<=m[i][0];j++)\n            for (int k=minn;k<=maxn;k++)//\u5f88\u7b80\u5355\u7684\u8303\u56f4\u9650\u5236\n                if(f[i-1][k])\n                {\n                    f[i][k+m[i][j]]+=f[i-1][k];\n                    if(k+m[i][j]<mint) mint=k+m[i][j];\n                    if(k+m[i][j]>maxt) maxt=k+m[i][j];\n                }\n        maxn=maxt;\n        minn=mint;\n    }\n    int cal=1;\n    for (int i=minn;i<=maxn;i++)\n        if(f[n][i]&&cal<=k)\n            for (int j=1;j<=f[n][i]&&cal<=k;j++,cal++)\n                printf(\"%d \",i);\n    return 0;\n}\n```",
        "postTime": 1477918962,
        "uid": 595,
        "name": "H15teve",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2409 \u3010Y\u7684\u79ef\u6728\u3011"
    },
    {
        "content": "dp?\u5f53\u7136\u53ea\u5f00\u4e00\u4e2adp[10001]\u5c31\u591f\u5566\uff01(\u53cd\u6b63\u548c\u4e5f\u4e0d\u8d85\u8fc710001)\n\u6211\u4eec\u662f\u53ef\u4ee5\u6c42\u51fa\u6700\u5c0f\u503c\u7684\uff08\u6392\u5e8f\uff09\uff0c\u90a3\u4e48\u518d\u8dd1\u4e00\u4e2a\u4e09\u91cdfor\n\u7b2c\u4e00\u91cd\u8dd1\u54ea\u4e00\u7ec4\n\u7b2c\u4e8c\u91cd\u8dd1\u603b\u6570\n\u7b2c\u4e09\u91cd\u8dd1\u54ea\u4e00\u7ec4\u7684\u54ea\u4e00\u4e2a\n\u8be6\u60c5\u53c2\u8003\u4ee3\u7801\u548c\u6ce8\u91ca\n```cpp\n\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\nint n,k;\nint dp[10001];\nint box[101];//\u5b58\u4e00\u4e0b\u5bf9\u5e94Box\u91cc\u6709\u591a\u5c11\u5757\u79ef\u6728\nint boxs[101][101];//\u62ff\u6765\u5b58\u6570\u7684\nint mine;\nint bp,adi;\nint main(){\n    scanf(\"%d%d\",&n,&k);\n    for(int w=1;w<=n;w++){\n        scanf(\"%d\",&box[w]);\n        for(int w2=1;w2<=box[w];w2++){\n            scanf(\"%d\",&boxs[w][w2]);\n        }\n        sort(boxs[w]+1,boxs[w]+1+box[w]);\n        mine+=boxs[w][1];//\u7d2f\u8ba1\u6700\u5c0f\u503c\n    }\n    dp[mine]=1;//\u53cd\u6b63\u6700\u5c0f\u503c\u8fd9\u91cc\u80af\u5b9a\u6709\u4e00\u4e2a\u4e86\n    for(int w=1;w<=n;w++){//\u8dd1\u7bb1\u5b50\n        for(int w2=10000;w2>=mine;w2--){\n            for(int w3=2;w3<=box[w];w3++){//\u8dd1\u5757\n            \tif(bp!=w2-boxs[w][w3]+boxs[w][1])adi=dp[w2-boxs[w][w3]+boxs[w][1]],bp=w2-boxs[w][w3]+boxs[w][1];//bp\u5b58\u7684\u662f\u4e0a\u4e00\u6b21\u88ab\u52a0\u7684\u4f4d\u7f6e\uff0c\u5982\u679c\u4e0d\u662f\u4e0a\u4e00\u6b21\u7684\u4f4d\u7f6e\u5219\u66f4\u65b0\u9700\u8981\u52a0\u4e0a\u7684\u6570\n            \t//\u8bd5\u60f3\u5047\u5982dp[3]=3,\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u4e09\u4e2a\u8fde\u7eed\u7684boxs[w][w3]\u662f\u4e09\u4e2a\u8fde\u7eed\u7684\u4e09\uff0c\u90a3\u4e48dp[6]\u5b9e\u9645\u4e0a\u662f3+3+3\u7684\n                if(w2-boxs[w][w3]>=0)dp[w2]+=adi;//\u52a0\u4e0a\u5c31\u597d\u4e86\uff0c\u989d\u5916\u5224\u65ad\u4e00\u4e0bw2-boxs\u4e0d\u8981\u5c0f\u4e8e\u96f6\n            }\n        }\n    }\n    while(k!=0){\n        for(int w=1;w<=10001;w++){\n            while(k!=0&&dp[w]!=0){\n                printf(\"%d \",w);\n                k--;//k\u4e0edp[w]\u540c\u51cf\u51cf\n                dp[w]--;\n            }\n        }\n    }\n}\n\n```",
        "postTime": 1530757202,
        "uid": 59630,
        "name": "NTG_Adiord",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2409 \u3010Y\u7684\u79ef\u6728\u3011"
    }
]