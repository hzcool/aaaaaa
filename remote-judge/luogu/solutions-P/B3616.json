[
    {
        "content": "\u8fd9\u7bc7\u6587\u7ae0\u5c06\u4ece\u96f6\u5f00\u59cb\u4ecb\u7ecd\u201c\u961f\u5217\u201d\u8fd9\u79cdSTL\u5bb9\u5668\u3002\n\n### \u961f\u5217\u662f\u4ec0\u4e48\uff1f\n\n\u961f\u5217\u53ef\u4ee5\u770b\u505a\u662f\u4e00\u4e2a\u5438\u7ba1\uff0c\u6bcf\u6b21\u5148\u8fdb\u5165\u961f\u5217\u7684\u5143\u7d20\u5148\u51fa\u53bb\u3002\n\n![](https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fpic3.zhimg.com%2Fv2-b11b1d57695879206767c79bbd4fd0de_180x120.jpg&refer=http%3A%2F%2Fpic3.zhimg.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1649074776&t=15b4904d40d55dc81f51a784ead165e3)\n\n### \u961f\u5217\u5982\u4f55\u5b9a\u4e49\uff1f\n\n\u5b9a\u4e49\u961f\u5217\u9700\u8981\u5934\u6587\u4ef6`#include<queue>`\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u5982\u679c\u8981\u5b9a\u4e49`int`\u7c7b\u578b\u7684\u961f\u5217\u7684\u8bdd\u90a3\u5c31\u8fd9\u4e48\u5199\uff1a\n\n`queue<int> q;`\n\n\u5982\u679c\u7c7b\u578b\u4e3a`char`\u90a3\u5c31\u662f\n\n`queue<char> q;`\n\n\u5176\u4f59\u540c\u7406\u3002\n\n### \u961f\u5217\u57fa\u672c\u64cd\u4f5c\n\n1. `q.push(x)`\uff1a\u5c06 $x$ \u5165\u961f\u3002\n\n2. `q.pop()`\uff1a\u5c06\u961f\u9996\u7684\u5143\u7d20\u51fa\u961f\u3002\n\n3. `q.front()`\uff1a\u8fd4\u56de\u961f\u9996\u7684\u503c\u3002\n\n4. `q.empty()`\uff1a\u5982\u679c\u961f\u5217\u4e3a\u7a7a\u5219\u8fd4\u56de $1$\uff0c\u5426\u5219\u8fd4\u56de $0$\u3002\n\n5. `q.size()`\uff1a\u8fd4\u56de\u961f\u5217\u5143\u7d20\u4e2a\u6570\u3002\n\n### \u672c\u9898\u4ee3\u7801\n\n\u8fd8\u662f\u4e0d\u7406\u89e3\u7684\u8bdd\u53ef\u4ee5\u770b\u4ee3\u7801~\n\n```cpp\n/*\nwork by:Tothetime_tolife\ntime:1s\nspace:128MB\n*/\n#include<bits/stdc++.h>\n#define int long long\n#define Tothetime_tolife using\n#define AK namespace\n#define IOI std\nTothetime_tolife AK IOI;\nint n;\nqueue<int> q;//\u5b9a\u4e49\u961f\u5217\nsigned main()\n{\n\t//;;;;;\n\tcin>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tint op;\n\t\tcin>>op;//\u6807\u8bc6\u7b26\n\t\tif(op==1){\n\t\t    int x;\n\t\t    cin>>x;\n\t\t\tq.push(x);//\u5165\u961f\n\t\t}\n\t\tif(op==2){\n\t\t\tif(q.empty()){//\u5224\u65ad\u5982\u679c\u4e3a\u7a7a\n\t\t\t\tcout<<\"ERR_CANNOT_POP\"<<endl;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tq.pop();//\u5f39\u51fa\n\t\t}\n\t\tif(op==3){\n\t\t\tif(q.empty()){//\u5224\u65ad\u5982\u679c\u4e3a\u7a7a\n\t\t\t\tcout<<\"ERR_CANNOT_QUERY\"<<endl;\n\t\t\t\tcontinue;//\u8fdb\u884c\u4e0b\u4e00\u6b21\u64cd\u4f5c\n\t\t\t}\n\t\t\tcout<<q.front()<<endl;//\u8f93\u51fa\u961f\u9996\n\t\t}\n\t\tif(op==4){\n\t\t\tcout<<q.size()<<endl;//\u8f93\u51fa\u961f\u5217\u5927\u5c0f\uff0c\u5143\u7d20\u4e2a\u6570\n\t\t}\n\t}\n\treturn 0;\n}\n//QwQ\n\n```",
        "postTime": 1646483455,
        "uid": 327444,
        "name": "Tothetime_tolife",
        "ccfLevel": 0,
        "title": "B3616\u9898\u89e3/\u961f\u5217\u5b66\u4e60\u7b14\u8bb0"
    },
    {
        "content": "# B3616 \u3010\u6a21\u677f\u3011\u961f\u5217 \u9898\u89e3\n\n\u9898\u610f\uff1a\u7ed9\u4f60\u4e00\u4e2a\u961f\u5217\uff0c\u8ba9\u4f60\u8fdb\u884c\u52a0\u5165\uff0c\u67e5\u8be2\u7b2c\u4e00\u4e2a\uff0c\u67e5\u8be2\u5927\u5c0f\uff0c\u5f39\u51fa\u56db\u4e2a\u64cd\u4f5c\uff0c\u4f60\u8981\u8f93\u51fa\u4e24\u4e2a\u67e5\u8be2\u64cd\u4f5c\u7684\u7b54\u6848\u3002\n\n### Algorithm 1\n\n\u4e0d\u4e86\u89e3\u961f\u5217\u7684\u540c\u5b66[\u6233\u8fd9\u91cc](http://c.biancheng.net/view/479.html)\n\n\u8fd0\u7528STL\u4e2d\u7684\u961f\u5217\uff0c\u5177\u4f53\u7ec6\u8282\u4f1a\u5728\u4ee3\u7801\u5185\u8be6\u89e3\uff1a\n\n```cpp\n#include<iostream>\n#include<string.h>\n#include<string>\n#include<unordered_map>\n#include<algorithm>\n#include<stdio.h>\n#include<queue>\nusing namespace std;\nint n, m, i, j, k;\nqueue<int> q;\nint main()\n{\n    cin >> n;\n    for (i = 1; i <= n; i++)\n    {\n        int op, x;\n        cin >> op;\n        if (op == 1) cin >> x, q.push(x);//\u52a0\u5165\n        else if (op == 2)\n        {\n            if (q.empty()) cout << \"ERR_CANNOT_POP\\n\";//\u8981\u5224\u65ad\u662f\u5426\u4e3a\u7a7a\uff0c\u5426\u5219RE\n            else q.pop();//\u5982\u679c\u4e0d\u4e3a\u7a7a\uff0c\u5f39\u51fa\n        }\n        else if (op == 3)\n        {\n            if (q.empty()) cout << \"ERR_CANNOT_QUERY\\n\";//\u540c\u4e0a\n            else cout << q.front() << endl;//\u8f93\u51fa\u7b2c\u4e00\u4e2a\n        }\n        else cout << q.size() << endl;//\u8f93\u51fa\u961f\u5217\u5927\u5c0f\n    }\n    return 0;//\u7ed3\u675f\n}\n```\n\n### Algorithm 2\n\n\u9664\u4e86STL\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u624b\u5199\u4e00\u4e2a\u961f\u5217\uff01\n\n\u601d\u8def\uff1a\n\n+ \u5b9a\u4e49\u5934\u548c\u5c3e\n+ \u52a0\u5165\u65f6\uff0c\u5934 $+1$ \uff0c\u5c3e\u4e0d\u52a8\n+ \u5220\u9664\u65f6\uff0c\u5c3e $+1$ \uff0c\u5934\u4e0d\u52a8\n+ \u67e5\u8be2\u5927\u5c0f\u65f6\uff0c\u8f93\u51fa\u5934 $-$ \u5c3e $+1$ \n+ \u67e5\u8be2\u7b2c\u4e00\u4e2a\u65f6\uff0c\u76f4\u63a5\u8f93\u51fa\u5934\u90e8\u3002\n\n\u4ee3\u7801\u5c31\u4e0d\u7ed9\u5927\u5bb6\u4e86\uff0c\u6709\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u81ea\u5df1\u8bd5\u7740\u5199\u4e00\u5199\u3002",
        "postTime": 1646477595,
        "uid": 509528,
        "name": "RE_Prince",
        "ccfLevel": 5,
        "title": "B3616 \u3010\u6a21\u677f\u3011\u961f\u5217"
    },
    {
        "content": "# B3616 \u9898\u89e3  \n\n\u9898\u76ee\u94fe\u63a5\uff1a[B3616 \u3010\u6a21\u677f\u3011\u961f\u5217](https://www.luogu.com.cn/problem/B3616)  \n\n\u5173\u4e8e\u961f\u5217\uff0c\u6709\u4e24\u79cd\u505a\u6cd5\uff1a  \n\n## 1.\u624b\u5199\u6a21\u62df  \n\n\u7528\u6570\u7ec4\u5b58\u50a8\u6570\u636e\uff0c\u7528\u4e24\u4e2a\u6307\u9488 $head$ \u548c $tail$ \u8868\u793a\u961f\u5217\u5934\u3001\u5c3e\u4f4d\u7f6e\uff0c\u63d2\u5165\u65f6 $head$ \u52a0 $1$ \u5e76\u5c06\u65b0\u6570\u636e\u5b58\u50a8\u5230\u5934\u90e8\uff0c\u5f39\u51fa\u65f6 $tail$ \u52a0 $1$\uff0c\u67e5\u8be2\u65f6\u76f4\u63a5\u67e5 $tail+1$ \u4f4d\u7f6e\u7684\u6570\u636e\uff0c$head-tail$ \u5c31\u662f\u961f\u5217\u957f\u5ea6\u3002  \n\n\u4ee3\u7801\uff1a  \n```cpp\n#include <cstdio>\n#define gc getchar()\n#define pc(c) putchar(c)\n#define N 10007\nint n;\nint op;\nint q[N],qh,qt;\nint read(){\n\tint t=0;\n\tchar c=gc;\n\twhile(c<'0'||c>'9') c=gc;\n\twhile(c>='0'&&c<='9') t=10*t+(c^48),c=gc;\n\treturn t;\n}\nvoid write(int x){\n\tif(x<10){\n\t\tpc(x|48);\n\t\treturn;\n\t}\n\twrite(x/10);\n\tpc((x%10)|48);\n}\nint main(){\n\t//freopen(\"B3616.out\",\"w\",stdout);\n\tn=read();\n\twhile(n--){\n\t\top=read();\n\t\tswitch(op){ \n\t\t\tcase 1:{\n\t\t\t\tq[++qh]=read();\n\t\t\t\tbreak; \n\t\t\t}\n\t\t\tcase 2:{\n\t\t\t\tif(qt+1>qh){\n\t\t\t\t\tputs(\"ERR_CANNOT_POP\");\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t++qt;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 3:{\n\t\t\t\tif(qt+1>qh){\n\t\t\t\t\tputs(\"ERR_CANNOT_QUERY\");\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\twrite(q[qt+1]);\n\t\t\t\t\tputs(\"\");\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 4:{\n\t\t\t\twrite(qh-qt);\n\t\t\t\tputs(\"\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} \n\t}\n\treturn 0;\n}\n\n```  \n\n## 2.STL \u505a\u6cd5  \n\nSTL \u662f C++ \u7684\u4e00\u5927\u7279\u8272\uff0c\u7279\u522b\u65b9\u4fbf\u3002  \nC++ STL \u81ea\u5e26\u4e00\u79cd `queue` \u7c7b\u578b\u3002\u4f7f\u7528\u65f6\u5148 `#include<queue>`\uff0c\u4e4b\u540e\u5c31\u53ef\u4ee5\u7528\u4e86\u3002  \n`queue` \u5728 `std` \u540d\u5b57\u7a7a\u95f4\u4e2d\uff0c\u9700\u8981\u5728\u524d\u9762\u52a0 `std::` \u6216\u8005\u4f7f\u7528 `using`\u3002  \n\n\u4f7f\u7528\u65b9\u6cd5\uff1a  \n- `queue<T> q` \u58f0\u660e\u4e00\u4e2a `T` \u7c7b\u578b\u7684\u961f\u5217 $q$  \n- `q.push(x)` \u5728\u961f\u5217\u4e2d\u63d2\u5165\u6570\u636e  \n- `q.pop()` \u5f39\u51fa\u961f\u5c3e  \n- `q.front()` \u67e5\u8be2\u961f\u5c3e\u5143\u7d20  \n- `q.size()` \u8fd4\u56de\u961f\u5217\u957f\u5ea6  \n- `q.empty()` \u5224\u65ad\u961f\u5217\u662f\u5426\u4e3a\u7a7a  \n\n\u4ee3\u7801\uff1a  \n```cpp\n#include <cstdio>\n#include <queue>\n#define gc getchar()\n#define pc(c) putchar(c)\n#define N 10007\nusing std::queue;\nint n;\nint op;\nqueue<int> q;\nint read(){\n\tint t=0;\n\tchar c=gc;\n\twhile(c<'0'||c>'9') c=gc;\n\twhile(c>='0'&&c<='9') t=10*t+(c^48),c=gc;\n\treturn t;\n}\nvoid write(int x){\n\tif(x<10){\n\t\tpc(x|48);\n\t\treturn;\n\t}\n\twrite(x/10);\n\tpc((x%10)|48);\n}\nint main(){\n\tn=read();\n\twhile(n--){\n\t\top=read();\n\t\tswitch(op){ \n\t\t\tcase 1:{\n\t\t\t\tq.push(read());\n\t\t\t\tbreak; \n\t\t\t}\n\t\t\tcase 2:{\n\t\t\t\tif(q.empty()){\n\t\t\t\t\tputs(\"ERR_CANNOT_POP\");\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tq.pop();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 3:{\n\t\t\t\tif(q.empty()){\n\t\t\t\t\tputs(\"ERR_CANNOT_QUERY\");\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\twrite(q.front());\n\t\t\t\t\tputs(\"\");\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 4:{\n\t\t\t\twrite(q.size());\n\t\t\t\tputs(\"\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} \n\t}\n\treturn 0;\n}\n```",
        "postTime": 1646478378,
        "uid": 237530,
        "name": "rzh123",
        "ccfLevel": 7,
        "title": "B3616 \u9898\u89e3"
    },
    {
        "content": "### \u9898\u610f&\u601d\u8def\uff1a\n\n\u666e\u901a\u961f\u5217\u677f\u5b50\u3002\n\n\u5982\u679c\u4f60\u60f3\u624b\u5199\u961f\u5217\uff0c\u6211\u4e0d\u62e6\u7740\u3002\u4f46\u662f STL \u6709\u5c01\u88c5\u7684\uff0c\u767d\u5ad6\u4e0d\u9999\u5417\uff1f\n\n#### \u65b0\u624b\u5411\u2014\u2014\u961f\u5217\u7b80\u4ecb\uff1a\n\n\u961f\u5217\uff0c\u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u4e00\u5217\u6570\u3002\u4f60\u53ef\u4ee5\u5c06\u6570\u6309\u7167\u987a\u5e8f\u52a0\u8fdb\u53bb\u548c\u62ff\u51fa\u6765\u3002\u53ea\u662f\u52a0\u8fdb\u53bb\u5fc5\u987b\u52a0\u5230\u961f\u5c3e\uff0c\u62ff\u51fa\u6765\u5fc5\u987b\u62ff\u51fa\u961f\u9996\u3002\u603b\u7ed3\u5c31\u662f\u5148\u8fdb\u5148\u51fa\u3002\n\n#### \u961f\u5217\u7528\u6cd5\uff1a\n\n\u7528\u6cd5\u9898\u9762\u91cc\u4e5f\u57fa\u672c\u8bf4\u6e05\u695a\u4e86\u3002\n\n\u9996\u5148\u5b9a\u4e49\u4e00\u4e2a\u961f\u5217\uff1a\n\n```cpp\nqueue<int>q;//int\u4ee3\u8868\u662f\u6574\u6570\u961f\u5217\n```\n\n\u64cd\u4f5c\uff1a\n\n```cpp\nq.push(x)\uff1b//\u4ece\u961f\u5c3e\u52a0\u5165\u4e00\u4e2a\u6570x\nq.pop();//\u5f39\u51fa\u961f\u9996\u5143\u7d20\nq.front();//\u8fd4\u56de\u961f\u9996\u5143\u7d20\nq.size();//\u8fd4\u56de\u961f\u5217\u957f\u5ea6\nq.empty();//\u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0c\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56defalse\n```\n\n#### \u9700\u8981\u6ce8\u610f\u7684\u70b9\uff1a\n\n\u5f39\u51fa\u548c\u8fd4\u56de\u961f\u9996\u4e4b\u524d\u90fd\u8981\u5148\u786e\u8ba4\u961f\u5217\u662f\u5426\u4e3a\u7a7a\uff0c\u5982\u679c\u4e3a\u7a7a\u5c31\u5f39\u51fa `ERROR` \u4fe1\u53f7\u3002\n\n```cpp\nif(q.empty())ERROR;\n```\n\n\u6240\u4ee5\u7a0b\u5e8f\u5c31\u5f88\u7b80\u5355\u4e86\u3002\n\n### \u7a0b\u5e8f\u5982\u4e0b\uff1a\n\n```cpp\n#include<cstdio>\n#include<queue> \nusing namespace std;\nint n,op,x;\nqueue<int>q; \nint main(){\n\tscanf(\"%d\",&n);\n\twhile(n--){\n\t\tscanf(\"%d\",&op);\n\t\tif(op==1){\n\t\t\tscanf(\"%d\",&x);\n\t\t\tq.push(x);\n\t\t}\n\t\telse if(op==2){\n\t\t\tif(q.empty())printf(\"ERR_CANNOT_POP\\n\");\n\t\t\telse q.pop();\n\t\t}\n\t\telse if(op==3){\n\t\t\tif(q.empty())printf(\"ERR_CANNOT_QUERY\\n\");\n\t\t\telse printf(\"%d\\n\",q.front());\n\t\t}\n\t\telse printf(\"%d\\n\",q.size());\n\t}\n\treturn 0;\n}\n```\n\n### THE END",
        "postTime": 1646479908,
        "uid": 299883,
        "name": "HYdroKomide",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 B3616"
    },
    {
        "content": "## B3616 \u3010\u6a21\u677f\u3011\u961f\u5217 \u9898\u89e3\n\n\u4e00\u9053\u961f\u5217\u6a21\u677f\u9898\u3002\n\n\u5148\u6765\u4ecb\u7ecd\u4e00\u4e0b\u961f\u5217 `queue` \u7684\u4f7f\u7528\uff1a\n\nSTL \u63d0\u4f9b\u4e86\u961f\u5217\uff0c\u5934\u6587\u4ef6\u662f `#include<queue>`\u3002\n\n\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u51fd\u6570\u6765\u64cd\u4f5c\u6b64\u961f\u5217\uff1a\n\n- `queue<int> q`\uff1a\u5efa\u7acb int \u7c7b\u578b\u7684\u961f\u5217 $q$;\n- `q.push(a)`\uff1a\u5c06 $a$ \u653e\u5165\u961f\u5217\u672b\u5c3e\uff1b\n- `q.pop()`\uff1a\u5c06\u961f\u9996\u5220\u9664\uff1b\n- `q.front()`\uff1a\u67e5\u8be2 $q$ \u7684\u961f\u9996\uff1b\n- `q.back()`\uff1a\u67e5\u8be2 $q$ \u7684\u961f\u5c3e\uff1b\n- `q.size()`\uff1a\u67e5\u8be2 $q$ \u5143\u7d20\u4e2a\u6570\uff1b\n- `q.empty()`\uff1a\u67e5\u8be2 $q$ \u662f\u5426\u4e3a\u7a7a\uff1b\n\n***\n\n**\u601d\u8def\uff1a**\n\n1.\u5b9a\u4e49\u4e00\u4e2a\u961f\u5217 $q$\uff0c\u7528\u6765\u5b58\u653e\u961f\u5217\uff1a\n\n```cpp\nqueue<int> q;\n```\n\n2.\u8bfb\u5165 $n$\uff0c\u7136\u540e\u5728\u5faa\u73af\u4e2d\u5b9a\u4e49\u64cd\u4f5c\u7b26 `cmd` \u5e76\u8bfb\u5165\u3002\n\n- \u5982\u679c `cmd` \u4e3a 1\uff0c\u8bfb\u5165\u6570 $x$\uff0c\u7136\u540e\u4f7f\u7528 `q.push(x)` \u5c06\u6570\u5b57 $x$ \u653e\u5165\u961f\u5217\u672b\u5c3e\uff1b\n\n-  \u5982\u679c `cmd` \u4e3a 2\uff1a\n   - \u5982\u679c\u961f\u5217\u4e0d\u4e3a\u7a7a\uff08`q.empty()==0`\uff09\uff0c\u90a3\u4e48\u4f7f\u7528 `q.pop()` \u5f39\u51fa\u961f\u9996\u3002\n    - \u5426\u5219\u8f93\u51fa \"ERR_CANNOT_POP\"\u3002\n    \n- \u5982\u679c `cmd` \u4e3a 3\uff1a\n    - \u5982\u679c\u961f\u5217\u4e0d\u4e3a\u7a7a\uff08`q.empty()==0`\uff09\uff0c\u90a3\u4e48\u7528 `q.front()` \u67e5\u627e\u961f\u5217\u9996\u4f4d\u5143\u7d20\u5e76\u8f93\u51fa\u3002\n    - \u5426\u5219\u8f93\u51fa \"ERR_CANNOT_QUERY\"\u3002\n    \n- \u5982\u679c `cmd` \u4e3a 4\uff0c\u4f7f\u7528 `q.size()` \u5f97\u5230\u961f\u5217\u957f\u5ea6\u5e76\u8f93\u51fa\u3002\n\n\u5b8c\u6574 code\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define fore(i,x,n) for(int i=x;i<=n;i++)\nconst int MAXX=1005;\nconst int mod=1;\nqueue<int> q;\nint n;\ninline int read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-') f=-1;ch=getchar();}\n\twhile(isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n\treturn x*f;\n}\ninline void write(int x){\n    if(x<0) putchar('-'),x=-x;\n    if(x>9) write(x/10);\n    putchar(x%10+'0');\n}\nsigned main(){\n#ifdef LOCAL\n    freopen(\"debug_data.in\",\"r\",stdin);\n    freopen(\"debug_data.out\",\"w\",stdout);\n#endif\n    n=read();\n    fore(i,1,n){\n        int cmd,x;\n        cmd=read();\n        if(cmd==1){\n            x=read();\n            q.push(x);\n        }\n        if(cmd==2){\n            if(q.empty()==0){\n                q.pop();\n                continue;\n            } else {\n                puts(\"ERR_CANNOT_POP\");\n            }\n        }\n        if(cmd==3){\n            if(q.empty()==0){\n                write(q.front()); puts(\"\");\n                continue;\n            } else {\n                puts(\"ERR_CANNOT_QUERY\");\n            }\n        }\n        if(cmd==4){\n            write(q.size()); puts(\"\");\n        }\n    }\n}\n```\n\n\n",
        "postTime": 1646471971,
        "uid": 408019,
        "name": "Shan_Creeper",
        "ccfLevel": 0,
        "title": "B3616 \u3010\u6a21\u677f\u3011\u961f\u5217 \u9898\u89e3"
    },
    {
        "content": "[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/B3616)\n\n## \u8bb2\u89e3\n\n\u8bfb\u5165\u4e00\u4e2a\u6570\u3002\n\n\u5206\u60c5\u51b5\uff08\u9898\u76ee\u7ed9\u51fa\uff09\u8fdb\u884c\u64cd\u4f5c\uff1a\n\n1. \u76f4\u63a5\u5c06\u5143\u7d20\u63d2\u5165\u961f\u5217\u3002\n2. \u82e5\u961f\u5217\u975e\u7a7a\u5c31\u5f39\u51fa\u961f\u9996\uff0c\u5426\u5219\u8f93\u51fa `ERR_CANNOT_POP`\u3002\n3. \u82e5\u961f\u5217\u975e\u7a7a\u5c31\u8f93\u51fa\u961f\u9996\u5143\u7d20\uff0c\u5426\u5219\u8f93\u51fa `ERR_CANNOT_QUERY`\u3002\n4. \u8f93\u51fa\u961f\u5217\u957f\u5ea6\u3002\n\n### code:\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n//\u961f\u5217 \nqueue<int>QS;\n\n//\u5feb\u8bfb \ninline int read(){\n    int a=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-') f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){a=(a<<3)+(a<<1)+(ch^48);ch=getchar();}\n\treturn a*f;\n}\n\nint main(){\n\tint n;\n\tn=read();\n\tfor(int i=1; i<=n; ++i) {\n\t\tint a;\n\t\ta=read();\n\t\tif(a==1) {\n\t\t\tQS.push(read());\n\t\t}\n\t\tif(a==2) {\n\t\t\tif(QS.empty()) cout<<\"ERR_CANNOT_POP\"<<endl;\n\t\t\telse          QS.pop();\n\t\t}\n\t\tif(a==3) {\n\t\t\tif(QS.empty()) cout<<\"ERR_CANNOT_QUERY\"<<endl;\n\t\t\telse          cout<<QS.front()<<endl;\n\t\t}\n\t\tif(a==4) {\n\t\t\tcout<<QS.size()<<endl;\n\t\t}\n\t}\n\treturn 0;//\u597d\u4e60\u60ef \n}\n```\n",
        "postTime": 1646485119,
        "uid": 559502,
        "name": "TsH_GD",
        "ccfLevel": 4,
        "title": "B3616"
    },
    {
        "content": "## Description\n\n\u5b9e\u73b0\u5173\u4e8e\u961f\u5217\u7684\u82e5\u5e72\u64cd\u4f5c\u3002\n\n## Solution\n\n\u770b\u5230\u5927\u4f6c\u4eec\u90fd\u7528\u7684\u662f STL \u91cc\u7684 ```queue```\uff0c\u8fd9\u91cc\u849f\u84bb\u7528\u7684\u662f\u624b\u5199\u961f\u5217\u3002\n\n\u5bf9\u4e8e\u624b\u5199\u961f\u5217\uff0c\u9700\u8981\u7ef4\u62a4\u4e24\u4e2a\u6307\u9488\uff1a\u5934\u6307\u9488\u548c\u5c3e\u6307\u9488\u3002\n\n1. \u5bf9\u4e8e\u63d2\u5165\u64cd\u4f5c\uff0c\u76f4\u63a5\u63d2\u5165\u5373\u53ef\u3002\n2. \u5bf9\u4e8e\u5f39\u51fa\u64cd\u4f5c\uff0c\u5224\u65ad ```head``` \u662f\u5426\u5c0f\u4e8e ```tail```\uff0c\u662f\u5c31\u5f39\u51fa\uff0c\u4e0d\u662f\u5c31\u62a5\u9519\u3002\n3. \u5bf9\u4e8e\u67e5\u8be2\u64cd\u4f5c\uff0c\u5224\u65ad ```head``` \u662f\u5426\u5c0f\u4e8e ```tail```\uff0c\u662f\u5c31\u8f93\u51fa ```que[head]```\uff0c\u4e0d\u662f\u5c31\u62a5\u9519\u3002\n4. \u5bf9\u4e8e\u67e5\u8be2\u961f\u5217\u957f\u5ea6\uff0c\u76f4\u63a5\u8f93\u51fa ```tail-head+1```\u3002\n\n## Code\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nint n,x,m;\nint que[10005],head=1,tail=0;\n\nint main(){\n\tcin>>n;\n\twhile(n--){\n\t\tcin>>x;\n\t\tswitch (x){\n\t\t\tcase 1:{\n\t\t\t\tcin>>m;\n\t\t\t\tque[++tail]=m;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 2:{\n\t\t\t\tif(head>tail) cout<<\"ERR_CANNOT_POP\"<<'\\n';\n\t\t\t\telse head++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 3:{\n\t\t\t\tif(head>tail) cout<<\"ERR_CANNOT_QUERY\"<<'\\n';\n\t\t\t\telse cout<<que[head]<<'\\n';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 4:{\n\t\t\t\tcout<<tail-head+1<<'\\n';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1646482551,
        "uid": 501865,
        "name": "TheSky233",
        "ccfLevel": 4,
        "title": "B3616 \u3010\u6a21\u677f\u3011\u961f\u5217 \u9898\u89e3"
    },
    {
        "content": "\u961f\u5217\uff0c\u662f\u4e00\u79cd\u9075\u5faa\u201c\u5148\u8fdb\u5148\u51fa\u201d\u7684\u7ebf\u578b\u6570\u636e\u7ed3\u6784\u3002\n\n\u6709\u5bf9\u961f\u5217\u4e0d\u4e86\u89e3\u7684\uff0c\u53ef\u4ee5\u53bb oi-wiki \u4e0a\u5b66\u4e60\uff1a<https://oi-wiki.org/ds/queue>\n\n\u800c C++ STL \u4e2d\u63d0\u4f9b\u4e86\u961f\u5217\u7684\u5bb9\u5668 `queue`\uff0c\u5c31\u4e0d\u9700\u8981\u624b\u5199\u961f\u5217\u4e86\u3002\n\n\u5e38\u89c1\u7684 `queue` \u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a\n\n- \u5b9a\u4e49\u961f\u5217\uff1a`queue<int> q;`\n- \u5165\u961f\uff1a`q.push()`\n- \u51fa\u961f\uff1a`q.pop`;\n- \u53d6\u961f\u5934\uff1a`q.front()`\uff1b\n- \u5224\u65ad\u961f\u5217\u662f\u5426\u4e3a\u7a7a\uff1a`q.empty()`\n- \u83b7\u53d6\u961f\u5217\u5143\u7d20\u4e2a\u6570\uff1a`q.size()`\n\n------\n\n\u56de\u5230\u672c\u9898\uff0cSTL \u7684\u961f\u5217\u4ecd\u7136\u53ef\u4ee5\u5e2e\u6211\u4eec\u65b9\u4fbf\u5730\u89e3\u51b3\u95ee\u9898\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c $1$\uff0c\u5165\u961f\u5373\u53ef\uff0c\u64cd\u4f5c\u4e3a `q.push()`\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c $2$\uff0c\uff1a\u5982\u679c\u961f\u5217\u4e0d\u7a7a\u5c31\u5c06\u961f\u9996\u5f39\u51fa\u961f\u5217\uff0c\u5426\u5219\u8f93\u51fa `ERR_CANNOT_POP`\u3002\u5f39\u51fa\u961f\u5217\u7684\u64cd\u4f5c\u4e3a `q.pop()`\uff0c\u5224\u65ad\u662f\u5426\u4e3a\u7a7a\u7684\u64cd\u4f5c\u4e3a `q.empty()`\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c $3$\uff0c\u961f\u5217\u4e0d\u7a7a\u5c31\u8f93\u51fa\u961f\u9996\u5143\u7d20\uff0c\u5426\u5219\u8f93\u51fa `ERR_CANNOT_QUERY`\u3002\u961f\u9996\u5143\u7d20\u7684\u83b7\u53d6\u65b9\u6cd5\u662f `q.front()`\u3002\n\n\u5bf9\u4e8e\u64cd\u4f5c $4$\uff0c\u8f93\u51fa\u961f\u5217\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u8fc7\u53bb\u4e2a\u6570\u7684\u64cd\u4f5c\u4e3a `q.size()`\u3002\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n# include <bits/stdc++.h>\nusing namespace std;\n\n\nqueue<int> q;\nint main()\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\tfor(int i = 1; i <= n; ++ i)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d\", &x);\n        \n\t\tif(x == 1)\n\t\t{\n\t\t\tscanf(\"%d\", &y);\n\t\t\tq.push(y);\n\t\t}\n        \n\t\tif(x == 2)\n\t\t{\n\t\t\tif(q.empty())\n                puts(\"ERR_CANNOT_POP\");\n\t\t\telse          \n                q.pop();\n\t\t}\n        \n\t\tif(x==3)\n\t\t{\n\t\t\tif(q.empty()) \n                puts(\"ERR_CANNOT_QUERY\");\n            else          \n                printf(\"%d\\n\", q.front());\n\t\t}\n        \n\t\tif(x==4)\n\t\t{\n\t\t\tprintf(\"%d\\n\", q.size());\n\t\t}\n\t}\n    \n\treturn 0;\n}\n\n```",
        "postTime": 1646481706,
        "uid": 393864,
        "name": "Elgo87",
        "ccfLevel": 5,
        "title": "B3616 \u3010\u6a21\u677f\u3011\u961f\u5217"
    }
]