[
    {
        "content": "\u8fd9\u4e2a\u9898\u7528\u7684\u662f\u5207\u6bd4\u96ea\u592b\u8ddd\u79bb\uff0c\u6211\u4eec\u77e5\u9053\u5728\u683c\u70b9\u56fe\u4e0a\uff0c\u5230\u4e00\u4e2a\u70b9\u5207\u6bd4\u96ea\u592b\u8ddd\u79bb\u76f8\u7b49\u7684\u70b9\u5f62\u6210\u4e86\u4e00\u4e2a\u77e9\u5f62\u7684\u73af\u3002\n\n\u770b\u6570\u636e\u8303\u56f4\uff0c$W\\times H\\leq 2.5\\times 10^6$ \u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u5f00\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u4fdd\u5b58\u4e0b\u6bcf\u4e00\u4e2a\u683c\u5b50\u7684\u7b54\u6848\u3002\n\n\u521a\u5f00\u59cb\u53ef\u80fd\u4f1a\u60f3\u626b\u63cf\u7ebf\uff0c\u4f46\u662f\u8fd9\u6837\u8fd8\u662f\u6bd4\u8f83\u9ebb\u70e6\uff0c\u6211\u4eec\u6362\u4e00\u79cd\u601d\u8def\uff0c\u5c1d\u8bd5\u9884\u5148\u6c42\u51fa\u6bcf\u4e2a\u70b9\u7684\u8f90\u5c04\u91cf\u7136\u540e\u76f4\u63a5\u4e8c\u7ef4\u524d\u7f00\u548c $O(1)$ \u56de\u7b54\u6bcf\u4e2a\u8be2\u95ee\u3002\u3002\n\n\u6211\u4eec\u90fd\u77e5\u9053\u4e8c\u7ef4\u5e73\u9762\u4e0a\u7684\u77e9\u5f62\u52a0\u7528\u5dee\u5206\u600e\u4e48\u505a\uff0c\u4f46\u8fd9\u4e2a\u9898\u4e0d\u6b62\u662f\u4e00\u4e2a\u77e9\u5f62\u52a0\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u6838\u7535\u7ad9\u7684\u8d21\u732e\uff0c\u53ef\u4ee5\u88ab\u63cf\u8ff0\u6210 $O(W)$ \u4e2a\u77e9\u5f62\u52a0\uff0c\u5927\u6982\u957f\u6210\u8fd9\u6837\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/mj31osl5.png)\n\n\u5982\u56fe\uff0c\u662f\u4e00\u4e2a\u5bf9\u5e94\u8f93\u5165\u4e3a `2 2 7 3` \u7684\u77e9\u5f62\u3002\u6211\u4eec\u4ee5\u5de6\u53f3\u65b9\u5411\u4e3a $x$ \u8f74\uff0c\u4e0a\u4e0b\u4e3a $y$ \u8f74\u4e14\u5de6\u4e0b\u89d2\u4e3a\u539f\u70b9\u3002\n\n\u8003\u8651\u6211\u4eec\u600e\u4e48\u6765\u8ba1\u7b97\u8fd9\u4e2a\u4e1c\u897f\uff1f\u6211\u4eec\u4e0d\u59a8\u5c1d\u8bd5\u753b\u51fa\u4e00\u4e2a\u66f4\u7b80\u5355\u7684\u4f8b\u5b50\u7684\u5dee\u5206\u6570\u7ec4\uff0c\u5bf9\u5e94\u7740\u6838\u7535\u7ad9 `3 3 6 2`\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/na7ux2c8.png)\n\n\u5de6\u4fa7\u662f\u5dee\u5206\u6570\u7ec4\uff0c\u53f3\u4fa7\u662f\u6700\u7ec8\u6bcf\u4e2a\u70b9\u7684\u8f90\u5c04\u503c\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u5dee\u5206\u6570\u7ec4\u53ef\u4ee5\u88ab\u63cf\u8ff0\u6210\u4e24\u6761\u659c\u7ebf\uff0c\u4e00\u6761\u65b9\u5411\u4e0e\u4e3b\u5bf9\u89d2\u7ebf\u76f8\u540c\uff0c\u53e6\u4e00\u6761\u65b9\u5411\u4e0e\u4e3b\u5bf9\u89d2\u7ebf\u5782\u76f4\u3002\n\n\u90a3\u6211\u4eec\u8003\u8651\uff0c\u505a\u4e00\u4e2a\u5dee\u5206\u6570\u7ec4\u7684\u5dee\u5206\uff0c\u5b58\u6210\u4e24\u4e2a\u6570\u7ec4\uff0c\u4e00\u4e2a\u6570\u7ec4\u5dee\u5206\u65b9\u5411\u662f\u5de6\u4e0b\u5230\u53f3\u4e0a\uff0c\u53e6\u4e00\u4e2a\u6570\u7ec4\u5dee\u5206\u65b9\u5411\u662f\u53f3\u4e0b\u5230\u5de6\u4e0a\uff0c\u6700\u540e\u5bf9\u8fd9\u4e24\u4e2a\u6570\u7ec4\u505a\u524d\u7f00\u548c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u5dee\u5206\u6570\u7ec4\u3002\u7136\u540e\u518d\u6b21\u524d\u7f00\u548c\u5c31\u80fd\u5f97\u5230\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u8f90\u5c04\u503c\uff0c\u518d\u6b21\u524d\u7f00\u548c\u5c31\u53ef\u4ee5\u76f4\u63a5\u4e8c\u4f4d\u524d\u7f00\u548c\u56de\u7b54\u8be2\u95ee\u4e86\u3002\n\n\u505a\u5230\u8fd9\u91cc\u6211\u4eec\u53ea\u80fd\u83b7\u5f97 $25$ \u5206\u3002\u56e0\u4e3a\u4e00\u4ef6\u975e\u5e38\u9ebb\u70e6\u7684\u4e8b\u60c5\uff1a\u6211\u4eec\u8981\u5904\u7406\u90a3\u4e9b\u8f90\u5c04\u8303\u56f4\u8d85\u51fa\u8fb9\u754c\u7684\u8d21\u732e\uff0c\u4f46\u8fd9\u91cc\u8fd8\u662f\u592a\u9ebb\u70e6\u4e86\uff0c\u5c31\u5148\u7528\u56fe\u793a\u8868\u793a\u4e00\u4e0b\u9700\u8981\u7279\u5224\u7684\u60c5\u51b5\uff0c\u8fd9\u91cc\u7528\u7ea2\u7ebf\u4ee3\u8868\u5047\u8bbe\u6ca1\u6709\u8fb9\u754c\u5dee\u5206\u6570\u7ec4\u503c\u7684\u4f4d\u7f6e\uff0c\u7eff\u7ebf\u8868\u793a\u6700\u7ec8\u5dee\u5206\u6570\u7ec4\u503c\u7684\u4f4d\u7f6e\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/sf09i9ep.png)\n\n\u6bcf\u4e00\u4e2a\u9ec4\u6846\u662f\u4e00\u79cd\u8981\u7279\u5224\u7684\u60c5\u51b5\u3002\u9ed1\u6846\u5c31\u662f $W,H$ \u9650\u5b9a\u51fa\u6765\u7684\u8303\u56f4\u3002\u6ce8\u610f\u5de6\u4fa7\u8303\u56f4\u5de6\u4e0b\u89d2\u6709\u4e2a\u7eff\u56e2\uff0c\u8fd9\u4e2a\u610f\u601d\u662f\u5728\u8303\u56f4\u5de6\u4e0b\u89d2\u533a\u57df\u5185\u6240\u6709\u8981\u52a0\u7684\u5dee\u5206\u6570\u7ec4\u8d21\u732e\u90fd\u4f1a\u88ab\u52a0\u5230\u5de6\u4e0b\u89d2\u8fd9\u4e2a\u70b9\u4e0a\uff0c\u4e5f\u662f\u7279\u5224\u4e00\u4e0b\u5c31\u597d\u3002\n\n\u5bf9\u4e8e\u8fd9\u4e2a\u6a2a\u7740\u7684\u548c\u7ad6\u7740\u7684\u8d21\u732e\u540c\u6837\u662f\u518d\u5f00\u4e00\u4e2a\u5dee\u5206\u6570\u7ec4\u8fdb\u884c\u77e9\u5f62\u52a0\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6700\u540e\u4e09\u4e2a\u5dee\u5206\u6570\u7ec4\u7684\u5dee\u5206\u6570\u7ec4\u5206\u522b\u505a\u5bf9\u5e94\u65b9\u5411\u7684\u524d\u7f00\u548c\u52a0\u8d77\u6765\u5c31\u80fd\u5f97\u5230\u5dee\u5206\u6570\u7ec4\u4e86\u3002\n\n\u5982\u679c\u89c9\u5f97\u4e0d\u592a\u597d\u60f3\u53ef\u4ee5\u60f3\u8c61\u4e00\u4e0b\u5dee\u5206\u6570\u7ec4\u6bcf\u4e2a\u70b9\u7684\u8d21\u732e\u533a\u95f4\u90fd\u662f\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u5de6\u4e0b\u89d2\uff0c\u5411\u53f3\u5411\u4e0a\u65e0\u9650\u5ef6\u4f38\u7684\u4e00\u4e2a\u77e9\u5f62\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u5224\u65ad\u54ea\u4e9b\u6709\u8d21\u732e\u54ea\u4e9b\u6ca1\u6709\u8d21\u732e\u4ee5\u53ca\u5177\u4f53\u8be5\u8d21\u732e\u5728\u4ec0\u4e48\u4f4d\u7f6e\u4e86\u3002\n\n#### \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n#define lint long long\nusing namespace std;\ninline int read(){\n\tchar c;int f=1,res=0;\n\twhile(c=getchar(),!isdigit(c))if(c=='-')f*=-1;\n\twhile(isdigit(c))res=res*10+c-'0',c=getchar();\n\treturn res*f;\n}\nconst int W=3e6+5,N=2e5+5;\nint w,h,n,q;bool flg;\nvector<lint> s[W];\nvector<int> d0[W],d1[W],dd[W];\ninline void adds(int x,int y,lint v){\n\tx=max(1,x);y=max(1,y);\n\tif(x<=w&&y<=h)s[x][y]+=v;\n}\ninline void ux(int l,int r,int y,lint v){\n\tif(l>r)return;\n\tdd[l][y]+=v;\n\tif(r<w)dd[r+1][y]-=v;\n\tif(y<h)dd[l][y+1]-=v;\n\tif(r<w&&y<h)dd[r+1][y+1]+=v;\n}\ninline void uy(int l,int r,int x,lint v){\n\tif(l>r)return;\n\tdd[x][l]+=v;\n\tif(x<w)dd[x+1][l]-=v;\n\tif(r<h)dd[x][r+1]-=v;\n\tif(x<w&&r<h)dd[x+1][r+1]+=v;\n}\ninline void add0(int x,int y,lint v){\n\tif(x>w||y>h)return;\n\tif(x>=1&&y>=1)\n\t\t{d0[x][y]+=v;return;}\n\tint d=max(1-x,1-y),nx=x+d,ny=y+d;\n\td0[nx][ny]+=v;\n\tif(nx==1){\n\t\tuy(max(1,y),ny-1,1,v);\n\t\tif(y<1)s[1][1]+=(1-y)*v;\n\t}else{\n\t\tux(max(1,x),nx-1,1,v);\n\t\tif(x<1)s[1][1]+=(1-x)*v;\n\t}\n}\ninline void add1(int x,int y,lint v){\n\tif(x-w>h-y||y>h)return;\n\tif(1<=x&&x<=w&&1<=y&&y<=h){\n\t\td1[x][y]+=v;\n\t\tint d=min(x-1,h-y),nx=x-d,ny=y+d;\n\t\tif(nx==1)uy(ny+1,h,1,v);\n\t\treturn;\n\t}int d=max(x-w,1-y),nx=x-d,ny=y+d;\n\tif(d<0){\n\t\tif(x<1&&y<=h)\n\t\t\tuy(y,h,1,v);\n\t}else{\n\t\td1[nx][ny]+=v;\n\t\tif(ny==1)ux(nx+1,min(w,x),1,v);\n\t\td=min(nx-1,h-ny);\n\t\tint nx2=nx-d,ny2=ny+d;\n\t\tif(nx2==1)uy(ny2+1,h,1,v);\n\t}\n}\ninline void calc(){\n\tint x=read(),y=read();\n\tif(flg)swap(x,y);\n\tlint a=read(),b=read();\n\tint d=a/b-1;\n\tadds(x-d-1,y-d-1,a%b);\n\tadds(x+d+2,y+d+2,a%b);\n\tadds(x-d-1,y+d+2,-a%b);\n\tadds(x+d+2,y-d-1,-a%b);\n\tadd0(x-d,y-d,b);\n\tadd0(x+d+2,y+d+2,-b);\n\tadd1(x+d+1,y-d,-b);\n\tadd1(x-d-1,y+d+2,b);\n}\ninline void build(){\n\tfor(int i=1;i<=w;++i)\n\t\tfor(int j=1;j<=h;++j){\n\t\t\td0[i][j]+=d0[i-1][j-1];\n\t\t\tdd[i][j]+=dd[i][j-1]+dd[i-1][j];\n\t\t\tdd[i][j]-=dd[i-1][j-1];\n\t\t}\n\tfor(int i=w-1;i>=1;--i)\n\t\tfor(int j=1;j<=h;++j)\n\t\t\td1[i][j]+=d1[i+1][j-1];\n\tfor(int i=1;i<=w;++i)\n\t\tfor(int j=1;j<=h;++j){\n\t\t\ts[i][j]+=dd[i][j]+d0[i][j]+d1[i][j];\n\t\t\ts[i][j]+=s[i][j-1]+s[i-1][j]-s[i-1][j-1];\n\t\t}\n\tfor(int i=1;i<=w;++i)\n\t\tfor(int j=1;j<=h;++j){\n\t\t\ts[i][j]+=s[i][j-1]+s[i-1][j];\n\t\t\ts[i][j]-=s[i-1][j-1];\n\t\t}\n}\ninline lint query(int x0,int y0,int x1,int y1){\n\t--x0;--y0;\n\treturn s[x1][y1]-s[x1][y0]-s[x0][y1]+s[x0][y0];\n}\nint main(){\n\tw=read();h=read();\n\tif(w>h)swap(w,h),flg=true;\n\tfor(int i=0;i<=w;++i){\n\t\ts[i].resize(h+1);dd[i].resize(h+1);\n\t\td0[i].resize(h+1);d1[i].resize(h+1);\n\t}n=read();\n\tfor(int i=1;i<=n;++i)calc();\n\tbuild();q=read();\n\twhile(q--){\n\t\tint x0=read(),y0=read();\n\t\tint x1=read(),y1=read();\n\t\tif(flg)swap(x0,y0),swap(x1,y1);\n\t\tlint t=(x1-x0+1)*(y1-y0+1);\n\t\tlint res=query(x0,y0,x1,y1),ans=res/t;\n\t\tif(res%t*2>=t)++ans;\n\t\tprintf(\"%lld\\n\",ans);\n\t}return 0;\n}\n```\n\n",
        "postTime": 1647937479,
        "uid": 206258,
        "name": "SDNetFriend",
        "ccfLevel": 7,
        "title": "P4800 [CEOI2015 Day2]\u6838\u80fd\u56fd\u5ea6 \u9898\u89e3"
    },
    {
        "content": "#### \u6838\u80fd\u56fd\u5ea6 \u9898\u89e3\n\n[\u597d\u4e0d\u5230\u54ea\u91cc\u53bb\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/Azazel/p/14369989.html)\n\n---\n\n#### \u9898\u610f\n\n> $~~~~$ \u7ed9\u51fa $W \\times H$ \u7684\u77e9\u5f62\uff0c$N$ \u4e2a\u4fee\u6539\uff0c\u6bcf\u4e2a\u4fee\u6539\u6709\u4f4d\u7f6e\u53ca\u53c2\u6570 $a,b$ \uff0c\u8868\u793a\u5bf9\u5176\u5468\u8fb9\u8ddd\u79bb\u5b83\u5207\u6bd4\u96ea\u592b\u8ddd\u79bb\u4e3a $d$ \u7684\u683c\u5b50\u7684\u6743\u503c\u589e\u52a0 $\\max(0,a-b\\times d)$ \u3002\u6700\u540e $Q$ \u7ec4\u8be2\u95ee\uff0c\u6bcf\u6b21\u6c42\u4e00\u4e2a\u5b50\u77e9\u9635\u7684\u548c\u3002\n\n#### \u9898\u89e3\n\n$~~~~$ ~~\u6211\u4e0d\u4f1a\u544a\u8bc9\u4f60\u6211\u505a\u8fd9\u9053\u9898\u505a\u4e86\u534a\u4e2a\u6708\u5e76\u4e14\u5b9e\u73b0\u8fd8\u501f\u52a9\u4e86\u9898\u89e3\u3002\uff08\u867d\u7136\u6709\u4e00\u5468\u5728\u671f\u672b\u8003\u8bd5\u3002~~\n\n#### Solution 1 \u66b4\u529b\n\n$~~~~$ \u6bcf\u6b21\u66b4\u529b\u4fee\u6539\u5176\u5f71\u54cd\u5230\u7684\u683c\u5b50\u7684\u6743\u503c\uff0c\u6bcf\u6b21\u67e5\u8be2\u66b4\u529b\u6c42\u5b50\u77e9\u9635\u7684\u548c\uff0c\u8fd9\u4e2a\u4e0d\u591a\u8bf4\u3002\n\n$~~~~$ \u671f\u671b\u5f97\u5206\uff1a\uff1f\uff1f\uff1f\n\n#### Solution 2 \u4e8c\u7ef4\u524d\u7f00\u548c\n\n$~~~~$ \u66b4\u529b\u4fee\u6539\u6743\u503c\u540e\u505a\u4e00\u904d\u4e8c\u7ef4\u524d\u7f00\u548c\uff0c\u6bcf\u6b21\u67e5\u8be2 $\\mathcal{O}(1)$ \u56de\u7b54\u3002\n\n$~~~~$ \u671f\u671b\u5f97\u5206\uff1a$\\texttt{25pts}$\n\n#### Solution 3 \u4e00\u7ef4\u5dee\u5206\n\n$~~~~$ \u89c2\u5bdf\u5230\u6709 $\\texttt{40pts}$ \u7ed9\u5728 $H=1$ \uff0c\u90a3\u4e48\u6b64\u65f6\u6574\u4e2a\u77e9\u5f62\u53ef\u4ee5\u88ab\u770b\u4f5c\u662f\u4e00\u6392\u6570\u3002\u8bbe\u67d0\u4e2a\u6a2a\u5750\u6807\u4e3a $x$ \u7684\u4fee\u6539\u80fd\u5f71\u54cd\u5230\u7684\u6700\u8fdc\u7684\u8ddd\u79bb $\\dfrac{a}{b}=d$  \uff0c\u90a3\u4e48\u5c31\u76f8\u5f53\u4e8e\u7ed9 $[x-d,x]$ \u52a0\u4e0a\u4e00\u4e2a\u9996\u9879\u4e3a $a \\bmod b$ \uff0c\u516c\u5dee\u4e3a $b$ \uff1b\u7ed9 $[x+1,x+d]$ \u52a0\u4e0a\u4e00\u4e2a\u9996\u9879\u4e3a $a-b$ \uff0c\u516c\u5dee\u4e3a $-b$ \u7684\u7b49\u5dee\u6570\u5217\u3002  \n\n$~~~~$ \u6b64\u65f6\u5957\u8def\u5730\u7ef4\u62a4\u8fd9\u4e2a\u6570\u5217\u7684\u5dee\u5206\u6570\u5217\uff0c\u90a3\u4e48\u9700\u8981\u652f\u6301\u533a\u95f4\u52a0\u6cd5\uff0c\u5355\u70b9\u4fee\u6539\uff0c\u4e14\u8be2\u95ee\u5728\u6240\u6709\u4fee\u6539\u4e4b\u540e\u3002\u56e0\u6b64\u7528\u5dee\u5206\u7ef4\u62a4\u5dee\u5206\u6570\u5217\uff0c\u8fd8\u539f\u540e\u518d\u7528\u4e00\u7ef4\u524d\u7f00\u548c\u56de\u7b54\u5373\u53ef\u3002\n\n$~~~~$ \u671f\u671b\u5f97\u5206\uff1a\u7ed3\u5408 Solution 2 \u53ef\u5f97 $\\texttt{50pts}$\uff08\u90e8\u5206\u5b50\u4efb\u52a1\u91cd\u5408\uff09\u3002\n\n#### Solution 3.5 \u534a\u4e2a\u6b63\u89e3\u7684\u4e8c\u7ef4\u5dee\u5206\n\n$~~~~$ \u4f60\u5df2\u7ecf\u60f3\u5230\u7528\u5dee\u5206\u7ef4\u62a4\u4e00\u7ef4\u5dee\u5206\u6570\u5217\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u6765\u968f\u4fbf\u4e3e\u4e2a\u4f8b\u5b50\u770b\u4e8c\u7ef4\u7684\u60c5\u51b5\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/794gdjl7.png)\n\n$~~~~$ \u8fd9\u662f\u4e00\u4e2a $a=7,b=2$ \u7684\u4f8b\u5b50\uff0c\uff08\u6ca1\u753b\u5168\uff0c\u4f46\u662f\u8fd9\u4e2a\u610f\u601d\u662f\u5bf9\u7684\uff09\u4e0d\u96be\u770b\u51fa\u5728\u5dee\u5206\u540e\u7684\u89c4\u5f8b\uff1a\n\n$~~~~\\bullet$ \u5de6\u4e0a\u548c\u53f3\u4e0b\u89d2\u4e3a $a \\bmod b$\uff0c\u53f3\u4e0a\u548c\u5de6\u4e0b\u89d2\u4e3a $- a \\bmod b$ \u3002  \n$~~~~\\bullet$ \u9664\u5f00\u56db\u89d2\uff0c\u4e3b\u5bf9\u89d2\u7ebf\u5168\u4e3a $b$ \uff0c\u526f\u5bf9\u89d2\u7ebf\u5168\u4e3a $-b$ \u3002\n\n$~~~~$ \u5f53\u7136\u76f4\u63a5\u6839\u636e\u5dee\u5206\u7684\u5f0f\u5b50\u4e5f\u80fd\u5f97\u5230\u8fd9\u4e2a\u89c4\u5f8b\uff0c\u8fd9\u91cc\u4e3a\u4e86\u76f4\u89c2\u5c31\u7528\u627e\u89c4\u5f8b\u4e86\u3002\n\n$~~~~$ \u90a3\u4e48\u6211\u4eec\u66b4\u529b ~~\uff08\u6307 O(1)\uff09~~ \u4fee\u6539\u56db\u89d2\uff0c\u7136\u540e\u5dee\u5206\u7ef4\u62a4\u5bf9\u89d2\u7ebf\u5373\u53ef\u3002\n\n$~~~~$ \u65f6\u95f4\u590d\u6742\u5ea6\uff1a$\\mathcal{O}(N+WH+Q)$ \u3002\n\n$~~~~$ \u671f\u671b\u5f97\u5206\uff1a\u7ed3\u5408 Solution 2 \u548c Solution 3 \u53ef\u5f97 $\\texttt{75pts}$ \u3002\n\n$~~~~$ \u8fd9\u91cc\u8d34\u4e00\u4e2a~~\u6211\u5199\u4e86\u4e09\u6b21\u624d\u5199\u51fa\u6765\u7684~~\u4ec5\u80fd\u5f97\u65b0\u589e\u7684 $\\texttt{25pts}$ \u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#define ll long long\nusing namespace std;\nconst ll MAXN=2500005;\nll n,m,k,q;\nstruct Array{ll mp[50000000];inline ll* operator [] (const ll& x){return mp+(x+(n+1)+1)*(3*m+1);}}Pre,Dia1,Dia2;//\u7528\u6307\u9488\u5f00\u6570\u7ec4\nint main() {\n\tscanf(\"%lld %lld %lld\",&n,&m,&k);\n\twhile(k--)\n\t{\n\t\tll x,y;ll a,b;\n\t\tscanf(\"%lld %lld %lld %lld\",&x,&y,&a,&b);\n\t\tll Up=a/b;\n\t\tif(x-Up>0) Pre[x-Up][y-Up]+=a%b;Pre[x+Up+1][y+Up+1]+=a%b;\n\t\tPre[x+Up+1][y-Up]-=a%b;Pre[x-Up][y+Up+1]-=a%b;\n\t\t\n\t\tDia1[x-Up+1][y-Up+1]+=b;Dia1[x+Up+1][y+Up+1]-=b;\n\t\tDia2[x+Up][y-Up+1]-=b;Dia2[x-Up][y+Up+1]+=b;\n\t}\n\tfor(ll j=1;j<=m;j++)\n\t{\n\t\tfor(ll i=1;i<=n;i++)\n\t\t{\n\t\t\tDia1[i][j]+=Dia1[i-1][j-1],Dia2[i][j]+=Dia2[i+1][j-1];\n\t\t\tPre[i][j]+=Dia1[i][j]+Dia2[i][j];\n\t\t\tPre[i][j]+=Pre[i-1][j]+Pre[i][j-1]-Pre[i-1][j-1];\n\t\t}\n\t}\n\tfor(ll j=1;j<=m;j++) for(ll i=1;i<=n;i++) Pre[i][j]+=Pre[i-1][j]+Pre[i][j-1]-Pre[i-1][j-1];\n\tll Q;scanf(\"%lld\",&Q);\n\twhile(Q--)\n\t{\n\t\tll X1,X2,Y1,Y2;\n\t\tscanf(\"%lld %lld %lld %lld\",&X1,&Y1,&X2,&Y2);\n\t\tll Siz=(Y2-Y1+1)*(X2-X1+1);\n\t\tprintf(\"%lld\\n\",(ll)((Pre[X2][Y2]-Pre[X1-1][Y2]-Pre[X2][Y1-1]+Pre[X1-1][Y1-1])*1.0/Siz+0.5));\n\t}\n\treturn 0;\n}\n```\n\n#### Solution 4 \u52a0\u4e86\u4ebf\u4e9b\u7ec6\u8282\u7684\u4e8c\u7ef4\u5dee\u5206\n\n$~~~~$ \u4e8b\u5b9e\u4e0a \uff0c\u4e0a\u9762\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u5bf9\u7684\uff0c\u4f46\u5b83\u5e76\u4e0d\u80fd\u5f97\u5168\u5206\u3002\u5982\u679c\u4f60\u4ed4\u7ec6\u89c2\u5bdf\u9898\u76ee\uff0c\u4f60\u4f1a\u770b\u5230\u8fd9\u6837\u4e00\u53e5\u8bdd\uff1a\n\n> $~~~~$ \u5982\u679c\u6838\u7535\u7ad9\u4f4d\u4e8e\u6838\u80fd\u56fd\u7684\u8fb9\u5883\u6216\u662f\u5728\u79bb\u8fb9\u5883\u7a0d\u8fd1\u7684\u4f4d\u7f6e\uff0c\u90a3\u4e48\u7206\u70b8\u53ef\u80fd\u4e5f\u4f1a\u5f71\u54cd\u5230\u6838\u80fd\u56fd\u4e4b\u5916\u7684\u65b9\u683c\u3002\u5f71\u54cd\u5230\u6838\u80fd\u56fd\u5916\u65b9\u683c\u7684\u7206\u70b8\u88ab\u79f0\u4f5c**\u754c\u9650**\u3002\n\n$~~~~$ \u800c\u4e0a\u9762 Solution3.5 \u65b0\u589e\u7684 $\\texttt{25pts}$ \u6765\u81ea**\u6ca1\u6709\u754c\u9650**\u7684\u5b50\u4efb\u52a1\u3002\u4ed4\u7ec6\u601d\u8003\u4e00\u4e0b\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u5982\u679c\u7206\u70b8\u5f71\u54cd\u5230\u7684\u683c\u5b50\u5728\u5f53\u524d\u77e9\u5f62\u7684**\u5de6\u3001\u5de6\u4e0a\u6216\u4e0a\u65b9**\u65f6\uff0c\u5dee\u5206\u6807\u8bb0\u4f1a\u5f71\u54cd\u5185\u90e8\u7684\u503c\uff0c\u4f46\u6211\u4eec\u7edf\u8ba1\u4e0d\u5230\u90a3\u90e8\u5206\u3002\n\n$~~~~$ \u800c\u4e14\u672c\u9898\u6211\u4eec\u65e0\u6cd5\u901a\u8fc7\u6269\u5927\u82e5\u5e72\u500d\u77e9\u5f62\u6765\u5f3a\u884c\u7edf\u8ba1\u90a3\u4e9b\u90e8\u5206\uff0c\u8003\u8651\u4e00\u4e2a\u6781\u7aef\u60c5\u51b5\uff1a$W=H=1$ \uff0c\u7136\u540e\u5728\u90a3\u4e2a\u683c\u5b50\u4e0a\u6709\u4e00\u4e2a $a=2^{63},b=1$ \u7684\u4fee\u6539\u3002\n\n$~~~~$ **\u4ee5\u4e0b\u6d89\u53ca\u5927\u91cf\u4ee3\u7801\u5b9e\u73b0\uff0c\u5176\u4e2d** $n$\uff0c$m$ **\u662f\u9898\u9762\u4e2d** $W$ **\u548c** $H$\n\n$~~~~$ \u90a3\u4e48\u6211\u4eec\u5206\u522b\u5bf9\u6bcf\u4e00\u79cd\u6807\u8bb0\u6765\u8003\u8651\u600e\u4e48\u5904\u7406\u51fa\u754c\u7684\u95ee\u9898\uff1a\n\n$~~~~$ \u5bf9\u4e8e\u56db\u89d2\u7684\u4fee\u6539\uff0c\u6211\u4eec\u5f3a\u884c\u79fb\u52a8\u5b83\u5230\u5bf9\u5e94\u7684\u7b2c\u4e00\u4e2a\u751f\u6548\u7684\u4f4d\u7f6e\u5373\u53ef\uff0c\u6362\u53e5\u8bdd\u8bf4\u5c31\u662f\u628a\u5c0f\u4e8e $1$ \u7684\u5750\u6807\u79fb\u52a8\u5230 $1$ \uff1a\n\n```cpp\nvoid Tag(ll X1,ll Y1,ll X2,ll Y2,ll V)\n{\n\tS[X1][Y1]+=V;S[X2+1][Y1]-=V;\n\tS[X1][Y2+1]-=V;S[X2+1][Y2+1]+=V;\n}\nTag(max(x-Up,1ll),max(y-Up,1ll),min(x+Up,n),min(y+Up,m),a%b-b);//\u8c03\u7528\uff0c\u6ce8\u610f\u540e\u9762\u5373\u4f7f\u5bf9\u7b54\u6848\u4e0d\u5f71\u54cd\u4e5f\u4e0d\u80fd\u4e0d\u53d6min\uff0c\u5426\u5219\u4f1aRE\u3002\n// \u6700\u540e\u5bf9\u4e8e\u56db\u89d2-b\uff0c\u5219\u6574\u4e2a\u5bf9\u89d2\u7ebf\u90fd+b\u5373\u53ef\n```\n\n$~~~~$ \u5bf9\u4e8e\u4e3b\u5bf9\u89d2\u7ebf\u7684\u4fee\u6539\uff0c\u6211\u4eec\u5c06\u5176\u8d85\u51fa\u90e8\u5206\u7684**\u548c**\u5168\u90e8\u79fb\u52a8\u5230\u7b2c\u4e00\u884c\u6216\u7b2c\u4e00\u5217\u5bf9\u5e94\u7684\u4f4d\u7f6e\uff0c\u8fd9\u4e2a\u9700\u8981\u5206\u7c7b\u8ba8\u8bba\u51e0\u79cd\u60c5\u51b5\u3002\n\n$~~~~$ \u5148\u5199\u4e00\u4e2a\u7ed9\u7b2c\u4e00\u884c/\u5217\u6253\u6807\u8bb0\u7684\u51fd\u6570\uff1a\n\n```cpp\\\nll A[MAXN],B[MAXN];//\u8bb0\u8d85\u51fa\u90e8\u5206\u7ed9 \u7b2c\u4e00\u884c \u548c \u7b2c\u4e00\u5217 \u6253\u7684\u6807\u8bb0 \nvoid Sign(ll *Arr,ll l,ll r,ll v) {Arr[l]+=v,Arr[r+1]-=v;} //\u4e00\u9636\u5dee\u5206\uff0c\u5bf9 [l,r] +v \uff0c\u8bb0\u5728\u7b2c\u4e00\u884c\u6216\u7b2c\u4e00\u5217 \n```\n\n$~~~~$ \u7136\u540e\u5bf9\u8d85\u51fa\u7684\u5de6\u4e0a\u89d2\u90e8\u5206\u8fdb\u884c\u5904\u7406\uff1a\n\n```cpp\nvoid TagLU(ll X1,ll Y1,ll X2,ll Y2,ll V)//[X1,Y1]\uff1a\u8d77\u59cb [X2,Y2]\uff1a\u6700\u540e\u4e00\u4e2a\u8d85\u51fa\u7684\u683c\u5b50\n{\n\tif(X1>X2)return;\n\tif(X2<=0&&Y2<=0) Sign(A,1,1,(X2-X1+1)*V); // Area 1\uff1a\u5168\u90e8\u5728\u5de6\u4e0a \n\telse if(X2<=0)//Area 2\uff1a\u5de6\n\t{\n\t\tif(Y1<=0) Sign(B,1,Y2,V),Sign(B,1,1,(1-Y1)*V);//\u6709\u4e00\u90e8\u5206\u5728\u5de6\u4e0a\n\t\telse Sign(B,Y1,Y2,V);//\u5168\u5728\u5de6\n\t}\n\telse if(Y2<=0)//Area 3\uff1a\u4e0a\n\t{\n\t\tif(X1<=0) Sign(A,1,X2,V),Sign(A,1,1,(1-X1)*V);//\u6709\u4e00\u90e8\u5206\u5728\u5de6\u4e0a\n\t\telse Sign(A,X1,X2,V);//\u5168\u5728\u4e0a\n\t}\n}\nTagLU(X-Up,Y-Up,X-min(min(X-1,Y-1),Up)-1,Y-min(min(X-1,Y-1),Up)-1,b);\n```\n\n$~~~~$ \u4ee5\u53ca\u6253\u8d77\u59cb\u548c\u7ed3\u675f\u7684\u6807\u8bb0\uff1a\n\n```cpp\nDia1[X-min(min(X-1,Y-1),Up)][Y-min(min(X-1,Y-1),Up)]+=b;\nDia1[X+1+min(Up,min(n-X-1,m-Y))+1][Y+1+min(Up,min(n-X,m-Y-1))+1]-=b;\n```\n\n$~~~~$ \u7136\u540e\u662f\u526f\u5bf9\u89d2\u7ebf\uff0c\u5927\u4f53\u540c\u4e0a\uff0c\u4f46\u6ce8\u610f\u5de6\u53f3\u90fd\u53ef\u80fd\u6709\u8d85\u51fa\u3002\n\n```cpp\nvoid TagRU(ll Y1,ll Y2,ll V){if(Y1>=Y2&&Y2<=m) Sign(B,Y2,min(Y1,m),-V);}\nvoid TagLD(ll X1,ll X2,ll V){if(X1<=X2&&X1<=n) Sign(A,X1,min(X2,n),-V);}\nvoid Tag(ll X,ll Y,ll a,ll b)\n{\n\tll Up=a/b;\n\tTagRU(Y+1+Up,Y+1+min(Up,min(X-1,m-Y-1))+1,b);\n\tTagLD(X+1+min(Up,min(n-X-1,Y-1))+1,X+1+Up,b);\n\tDia2[X-min(Up,min(X-1,m-Y-1))][Y+1+min(Up,min(X-1,m-Y-1))]-=b;\n\tDia2[X+1+min(Up,min(n-X-1,Y-1))+1][Y-min(Up,min(n-X-1,Y-1))-1]+=b;\n}\n```\n\n$~~~~$ \u6700\u540e\u628a\u5bf9\u89d2\u7ebf\u7684\u5dee\u5206\u6807\u8bb0\u8fd8\u539f\uff0c\u628a\u7b2c\u4e00\u884c\u548c\u7b2c\u4e00\u5217\u5f52\u5230\u4e00\u8d77\n\n```cpp\nfor(int i=1;i<=n;i++) for(int j=1;j<=m;j++) Dia1[i][j]+=Dia1[i-1][j-1],Dia2[i][j]+=Dia2[i-1][j+1];\nfor(int i=1;i<=n;i++) for(int j=1;j<=m;j++) Dia1[i][j]+=Dia2[i][j];\nfor(int i=1;i<=n;i++) Dia1[i][1]+=(A[i]+=A[i-1]);\nfor(int i=1;i<=m;i++) Dia1[1][i]+=(B[i]+=B[i-1]);\n```\n\n$~~~~$ \u7136\u540e\u5c31\u548c\u4e0a\u9762\u6ca1\u6709\u4efb\u4f55\u533a\u522b\u4e86\u3002~~\u8f7b\u677e\u800c\u53c8\u6109\u5feb\u3002~~\n\n$~~~~$ \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u540c Solution3.5\n\n$~~~~$ \u671f\u671b\u5f97\u5206\uff1a$\\texttt{100pts}$ \u3002\n\n$~~~~$ \u5b8c\u6574\u4ee3\u7801\u5c31\u4e0d\u8d34\u4e86\uff0c\u6574\u4f53\u5f88\u4e11\u3002\n\n",
        "postTime": 1612360406,
        "uid": 160701,
        "name": "Azaz\u0435l",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4800 \u3010[CEOI2015 Day2]\u6838\u80fd\u56fd\u5ea6\u3011"
    },
    {
        "content": "# \u66b4\u529b\u7b97\u6cd51\n\u6700\u66b4\u529b\u7684\u7b97\u6cd5\u4f60\u80fd\u60f3\u5230\u4ec0\u4e48\uff1f\u679a\u4e3e\uff01\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u6838\u7535\u7ad9\u7206\u70b8\u4e8b\u4ef6\uff0c\u679a\u4e3e\u5b83\u5468\u56f4\u7684\u65b9\u683c\u53d7\u5230\u7684\u5f71\u54cd\n\n\u76f4\u63a5\u679a\u4e3e\u6574\u4e2a\u56fd\u5ea6\u663e\u5f97\u592a\u66b4\u529b\u4e86\uff0c\u6211\u4eec\u80fd\u4e0d\u80fd\u7a0d\u7a0d\u4f18\u5316\u4e00\u4e0b\u5462\uff1f\n\n\u663e\u7136\u662f\u53ef\u4ee5\u7684\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u6bcf\u4e2a\u6838\u7535\u7ad9\u7206\u70b8\u4e8b\u4ef6\u6709\u4e00\u4e2a\u201c\u52bf\u529b\u8303\u56f4\u201d\n\n\u53ea\u6709\u5728\u8fd9\u4e2a\u65b9\u683c\u548c\u6838\u7535\u7ad9\u7684\u5207\u6bd4\u96ea\u592b\u8ddd\u79bb$\\leqslant\\frac{a}{b}$\u65f6\uff0c\u5b83\u624d\u4f1a\u53d7\u5f71\u54cd\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u679a\u4e3e\u8fd9\u4e2a\u6838\u7535\u7ad9\u7684\u52bf\u529b\u8303\u56f4\u5c31\u53ef\u4ee5\u4e86\n```cpp\n//\u5b98\u65b9\u7a0b\u5e8f\n#include <stdio.h>\n#include <stdlib.h>\n\n#define MAXWH 10000000\n#define MAXN 1000000\n#define MAXQ 1000000\n\ntypedef long long int huge;\n\nint w, h, n, q;\n\ntypedef struct NUCLEARIA\n{\n\thuge Info[MAXWH];\n\thuge& operator () (int x, int y) {return Info[(y * w) + x];}//\u5176\u5b9e\u5c31\u662f\u4e2a\u4e8c\u7ef4\u6570\u7ec4\n}\nNUCLEARIA;\n\ntypedef struct PLANT\n{\n\tint x;\n\tint y;\n\tint a;\n\tint b;\n}\nPLANT;\n\ntypedef struct QUERY\n{\n\tint x1;\n\tint y1;\n\tint x2;\n\tint y2;\n}\nQUERY;\n\nNUCLEARIA Nuclearia;\nPLANT Plant[MAXN];\nQUERY Query[MAXQ];\n\nint min(int a, int b)\n{\n\treturn (a < b) ? a : b;\n}\n\nint max(int a, int b)\n{\n\treturn (a > b) ? a : b;\n}\n\nint abs(int a)\n{\n\treturn (a < 0) ? -a : a;\n}\n\nint dist(int x1, int y1, int x2, int y2)\n{\n\treturn max(abs(x1 - x2), abs(y1 - y2));\n}\n\nvoid Print(huge sum, int area)//\u56db\u820d\u4e94\u5165\n{\n\thuge rsl = sum / area;\n\tif((sum % area) * 2 >= area)\n\t{\n\t\trsl++;\n\t}\n\t\n\tprintf(\"%lld\\n\", rsl);\n}\n\nint main()\n{\n\tscanf(\"%d%d\", &w, &h);\n\t\n\tscanf(\"%d\", &n);\n\tfor(int i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d%d%d%d\", &(Plant[i].x), &(Plant[i].y), &(Plant[i].a), &(Plant[i].b));\n\t\tPlant[i].x--;\n\t\tPlant[i].y--;\n\t}\n\t\n\tscanf(\"%d\", &q);\n\tfor(int i = 0; i < q; i++)\n\t{\n\t\tscanf(\"%d%d%d%d\", &(Query[i].x1), &(Query[i].y1), &(Query[i].x2), &(Query[i].y2));\n\t\tQuery[i].x1--;\n\t\tQuery[i].y1--;\n\t}\n\t\n\tfor(int i = 0; i < n; i++)\n\t{\n\t\tPLANT& P = Plant[i];\n\t\tint d = (P.a - 1) / P.b;\n\t\tint x1 = max(0, P.x - d);\n\t\tint y1 = max(0, P.y - d);\n\t\tint x2 = min(w, P.x + d + 1);\n\t\tint y2 = min(h, P.y + d + 1);\n\t\t//\u52bf\u529b\u8303\u56f4\n\t\tfor(int x = x1; x < x2; x++)\n\t\t{\n\t\t\tfor(int y = y1; y < y2; y++)\n\t\t\t{\n\t\t\t\tint d = dist(x, y, P.x, P.y);\n\t\t\t\tNuclearia(x, y) += P.a - (d * P.b);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor(int i = 0; i < q; i++)\n\t{\n\t\tQUERY& Q = Query[i];\n\t\thuge rsl = 0;\n\t\t\n\t\tfor(int x = Q.x1; x < Q.x2; x++)\n\t\t{\n\t\t\tfor(int y = Q.y1; y < Q.y2; y++)\n\t\t\t{\n\t\t\t\trsl += Nuclearia(x, y);\n\t\t\t}\n\t\t}\n\t\t\n\t\tPrint(rsl, (Q.x2 - Q.x1) * (Q.y2 - Q.y1));\n\t}\n\t\n\treturn 0;\n}\n```\n# \u66b4\u529b\u7b97\u6cd52\n\u6211\u4eec\u53d1\u73b0\u4e0a\u9762\u7684\u7b97\u6cd5\u5728\u8be2\u95ee\u6b21\u6570\u5f88\u591a\u65f6\u662f\u5f88\u8017\u65f6\u95f4\u7684\uff0c\u56e0\u4e3a\u6bcf\u6b21\u6211\u4eec\u90fd\u9700\u8981\u628a\u77e9\u5f62\u7684\u8f90\u5c04\u91cf\u52a0\u4e00\u904d\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u8be2\u95ee\u524d\u5148\u9884\u5904\u7406\u4e00\u4e0b\n\n\u5927\u5bb6\u5e94\u8be5\u77e5\u9053[\u6fc0\u5149\u70b8\u5f39](https://www.luogu.com.cn/problem/P2280)\u5427\uff1f\u6211\u4eec\u53ef\u4ee5\u501f\u7528\u4e00\u4e0b\u8fd9\u79cd\u77e9\u9635\u7684\u9884\u5904\u7406\u65b9\u6cd5\uff0c\u5c31\u662f\u8ba1\u7b97\u51fa\u5de6\u4e0a\u89d2\u5728$[1,1]$\u4e14\u5b83\u7684\u53f3\u4e0b\u89d2\u5728$[x,y]$\u7684\u77e9\u5f62\u7684\u603b\u8f90\u5c04\uff0c\u5047\u8bbe\u662f$Nuclearia(x,y)$\n\n\u6700\u7ec8\u7684\u7b54\u6848\u5c31\u662f$Nuclearia(x_{2j},y_{2j})-Nuclearia(x_{1j}-1,y_{2j})-Nuclearia(x_{2j},y_{1j}-1)+Nuclearia(x_{1j}-1,y_{1j}-1)$\n```cpp\n//\u5b98\u65b9\u7a0b\u5e8f\n#include <stdio.h>\n#include <stdlib.h>\n\n#define MAXWH 10000000\n#define MAXN 1000000\n#define MAXQ 1000000\n\ntypedef long long int huge;\n\nint w, h, n, q;\n\ntypedef struct NUCLEARIA\n{\n\thuge Info[MAXWH];\n\thuge& operator () (int x, int y) {return Info[(y * w) + x];}//\u5176\u5b9e\u5c31\u662f\u4e2a\u4e8c\u7ef4\u6570\u7ec4\n}\nNUCLEARIA;\n\ntypedef struct PLANT\n{\n\tint x;\n\tint y;\n\tint a;\n\tint b;\n}\nPLANT;\n\ntypedef struct QUERY\n{\n\tint x1;\n\tint y1;\n\tint x2;\n\tint y2;\n}\nQUERY;\n\nNUCLEARIA Nuclearia;\nPLANT Plant[MAXN];\nQUERY Query[MAXQ];\n\nint min(int a, int b)\n{\n\treturn (a < b) ? a : b;\n}\n\nint max(int a, int b)\n{\n\treturn (a > b) ? a : b;\n}\n\nint abs(int a)\n{\n\treturn (a < 0) ? -a : a;\n}\n\nint dist(int x1, int y1, int x2, int y2)\n{\n\treturn max(abs(x1 - x2), abs(y1 - y2));\n}\n\nvoid Summarize()//\u9884\u5904\u7406\n{\n\tfor(int x = 0; x < w; x++)\n\t{\n\t\tfor(int y = 0; y < h; y++)\n\t\t{\n\t\t\tif(x) Nuclearia(x, y) += Nuclearia(x - 1, y);\n\t\t\tif(y) Nuclearia(x, y) += Nuclearia(x, y - 1);\n\t\t\tif((x) && (y)) Nuclearia(x, y) -= Nuclearia(x - 1, y - 1);\n\t\t}\n\t}\n}\n\nvoid Print(huge sum, int area)//\u56db\u820d\u4e94\u5165\n{\n\thuge rsl = sum / area;\n\tif((sum % area) * 2 >= area)\n\t{\n\t\trsl++;\n\t}\n\t\n\tprintf(\"%lld\\n\", rsl);\n}\n\nint main()\n{\n\tscanf(\"%d%d\", &w, &h);\n\t\n\tscanf(\"%d\", &n);\n\tfor(int i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d%d%d%d\", &(Plant[i].x), &(Plant[i].y), &(Plant[i].a), &(Plant[i].b));\n\t\tPlant[i].x--;\n\t\tPlant[i].y--;\n\t}\n\t\n\tscanf(\"%d\", &q);\n\tfor(int i = 0; i < q; i++)\n\t{\n\t\tscanf(\"%d%d%d%d\", &(Query[i].x1), &(Query[i].y1), &(Query[i].x2), &(Query[i].y2));\n\t\tQuery[i].x1 -= 2;\n\t\tQuery[i].y1 -= 2;\n\t\tQuery[i].x2--;\n\t\tQuery[i].y2--;\n\t}\n\t\n\tfor(int i = 0; i < n; i++)\n\t{\n\t\tPLANT& P = Plant[i];\n\t\tint d = (P.a - 1) / P.b;\n\t\tint x1 = max(0, P.x - d);\n\t\tint y1 = max(0, P.y - d);\n\t\tint x2 = min(w, P.x + d + 1);\n\t\tint y2 = min(h, P.y + d + 1);\n\t\t//\u52bf\u529b\u8303\u56f4\n\t\tfor(int x = x1; x < x2; x++)\n\t\t{\n\t\t\tfor(int y = y1; y < y2; y++)\n\t\t\t{\n\t\t\t\tint d = dist(x, y, P.x, P.y);\n\t\t\t\tNuclearia(x, y) += P.a - (d * P.b);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tSummarize();\n\t\n\tfor(int i = 0; i < q; i++)\n\t{\n\t\tQUERY& Q = Query[i];\n\t\thuge rsl = Nuclearia(Q.x2, Q.y2);\n\t\tif(Q.x1 >= 0) rsl -= Nuclearia(Q.x1, Q.y2);\n\t\tif(Q.y1 >= 0) rsl -= Nuclearia(Q.x2, Q.y1);\n\t\tif((Q.x1 >= 0) && (Q.y1 >= 0)) rsl += Nuclearia(Q.x1, Q.y1);\n\t\t\n\t\tPrint(rsl, (Q.x2 - Q.x1) * (Q.y2 - Q.y1));\n\t}\n\t\n\treturn 0;\n}\n```\n# \u6b63\u89e3\n\u63a5\u7740\uff0c\u6211\u4eec\u5c1d\u8bd5\u5728\u8fdb\u4e00\u6b65\u7684\u4f18\u5316\n\n\u56de\u60f3\u4e00\u4e0b\u6211\u4eec\u5728\u5229\u7528\u6811\u72b6\u6570\u7ec4\u505a\u533a\u95f4\u4fee\u6539\u65f6\u7684\u65b9\u6cd5\uff1a\u628a\u533a\u95f4\u7684\u524d\u9762\u6807\u8bb0\u4e3a$+a$\uff0c\u6700\u540e\u9762\u6807\u8bb0\u4e3a$-a$\uff0c\u8fd9\u6837\uff0c\u5c31\u53ef\u4ee5\u8fdb\u884c\u533a\u95f4\u4fee\u6539\u4e86\n\n\u6211\u4eec\u53ef\u4ee5\u501f\u7528\u4e00\u4e0b\u8fd9\u4e2a\u601d\u8def\uff0c\u6765\u6807\u8bb0\u4e00\u6b21\u6838\u7535\u7ad9\u7206\u70b8\u4e8b\u4ef6\n\n\u9996\u5148\uff0c\u6211\u4eec\u5148\u627e\u51fa\u8fd9\u4e2a\u6838\u7535\u7ad9\u7206\u70b8\u4e8b\u4ef6\u7684\u201c\u52bf\u529b\u8303\u56f4\u201d\uff0c\u63a5\u7740\uff0c\u628a\u201c\u52bf\u529b\u8303\u56f4\u201d\u7684\u5de6\u4e0a\u89d2\u548c\u53f3\u4e0b\u89d2\u6807\u8bb0\u4e3a$+a\\% b$\uff0c\u628a\u5de6\u4e0b\u89d2\u548c\u53f3\u4e0a\u89d2\u6807\u8bb0\u4e3a$-a\\% b$\n\n\u7136\u540e\uff0c\u6211\u4eec\u5f00\u4e24\u4e2a\u6570\u7ec4\uff0c\u5728\u8fd9\u4e2a\u201c\u52bf\u529b\u8303\u56f4\u201d\u7684\u5bf9\u89d2\u7ebf\u4e0a\uff08\u4e24\u6761\u5bf9\u89d2\u7ebf\uff0c\u6240\u4ee5\u8981\u4e24\u4e2a\u6570\u7ec4\uff09\u5b58\u50a8$b$\u7684\u503c\uff0c\u4e3a\u4e86\u8282\u7701\u65f6\u95f4\uff0c\u6211\u4eec\u53ef\u4ee5\u53ea\u57284\u4e2a\u89d2\u4e0a\u6807\u8bb0\uff0c\u6700\u540e\u518d\u628a\u5bf9\u89d2\u7ebf\u4e0a\u7684\u6570\u5168\u90e8\u52a0\u51fa\u6765\n\n\u56e0\u4e3a\u6bcf\u4e2a\u6838\u7535\u7ad9\u7206\u70b8\u4e8b\u4ef6\u7684\u5f71\u54cd\u76f8\u7b49\u65b9\u683c\u7684\uff0c\u90fd\u4f1a\u56f4\u6210\u4e00\u4e2a\u6b63\u65b9\u5f62\uff08\u56e0\u4e3a\u53d6\u7684\u662f\u5207\u6bd4\u96ea\u592b\u8ddd\u79bb\uff09\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5728\u7edf\u8ba1\u65f6\uff0c\u53ea\u9700\u8981\u5148\u628a\u5bf9\u89d2\u7ebf\u4e0a\u7684\u6570\u590d\u5236\u5230$Nuclearia$\u6570\u7ec4\u4e2d\uff0c\u518d\u628a\u5de6\u8fb9\u7684\u548c\u4e0a\u9762\u7684\u6570\u76f8\u52a0\u518d\u51cf\u53bb\u5de6\u4e0a\u7684\u6570\u5c31\u53ef\u4ee5\u4e86\n\n\u770b\u8d77\u6765\u6709\u70b9\u62bd\u8c61\uff0c\u6211\u4eec\u53ef\u4ee5\u518d\u603b\u7ed3\u4e00\u4e0b\uff1a\n1. \u5bf9\u4e8e\u6bcf\u4e2a\u6838\u7535\u7ad9\u7206\u70b8\u4e8b\u4ef6\uff0c\u8ba1\u7b97\u51fa\u5b83\u7684\u201c\u52bf\u529b\u8303\u56f4\u201d\uff0c\u5de6\u4e0a\u89d2\u4e3a$(x1,y1)$\uff0c\u53f3\u4e0b\u89d2\u4e3a$(x2,y2)$\n2. \u6807\u8bb0\uff1a$Nuclearia(x1,y1) = Nuclearia(x2,y2) = a\\% b$\uff0c$Nuclearia(x1,y2) = Nuclearia(x2,y1) = a\\% b$\n3. \u4fee\u6539\u4e24\u6761\u5bf9\u89d2\u7ebf\u4e0a\u7684\u503c\uff08\u4e24\u6761\u5bf9\u89d2\u7ebf\u7684\u6570\u7ec4\u5206\u522b\u4e3a$PosDiag$\uff08\u4e3b\u5bf9\u89d2\u7ebf\uff09\u548c$NegDiag$\uff08\u6b21\u5bf9\u89d2\u7ebf\uff09\uff09\uff1a$PosDiag(x1+1,y1+1)=b,PosDiag(x2,y2)=-b,NegDiag(x1+1,y2-1)=-b,NegDiag(x2,y1)=b$\n4. \u679a\u4e3e\u6574\u4e2a\u56fd\u5ea6\u7684$PosDiag$\u548c$NegDiag$\uff0c$PosDiag(x,y)+=PosDiag(x-1,y-1),NegDiag(x,y)+=NegDiag(x-1,y+1)$\n5. \u679a\u4e3e\u6574\u4e2a\u56fd\u5ea6\u7684$Nuclearia$\uff0c$Nuclearia(x,y)+=PosDiag(x,y)+NegDiag(x,y)$\n6. \u91cd\u590d\u4e24\u6b21\uff1a\u679a\u4e3e\u6574\u4e2a\u56fd\u5ea6\u7684$Nuclearia$\uff0c$Nuclearia(x,y)+=Nuclearia(x-1,y)+Nuclearia(x,y-1)-Nuclearia(x-1,y-1)$\n\n\u8fd9\u5c31\u662f\u6574\u4e2a\u8fc7\u7a0b\u4e86\uff0c\u6700\u540e\u7684\u7b54\u6848\u8ba1\u7b97\u65b9\u6cd5\u548c\u4e0a\u9762\u4e00\u6837\n\n\u4f60\u4ee5\u4e3a\u8fd9\u5c31\u5b8c\u4e86\u5417\uff1f\n\n**\u4e0d\uff01\u6ca1\u5b8c\uff01**\n\n\u6ce8\u610f\u9898\u76ee\u7684\u6700\u540e\u4e00\u53e5\u8bdd\uff1a`\u5982\u679c\u6838\u7535\u7ad9\u4f4d\u4e8e\u6838\u80fd\u56fd\u7684\u8fb9\u5883\u6216\u662f\u5728\u79bb\u8fb9\u5883\u7a0d\u8fd1\u7684\u4f4d\u7f6e\uff0c\u90a3\u4e48\u7206\u70b8\u53ef\u80fd\u4e5f\u4f1a\u5f71\u54cd\u5230\u6838\u80fd\u56fd\u4e4b\u5916\u7684\u65b9\u683c\u3002\u5f71\u54cd\u5230\u6838\u80fd\u56fd\u5916\u65b9\u683c\u7684\u7206\u70b8\u88ab\u79f0\u4f5c\u754c\u9650`\n\n\u4e5f\u5c31\u662f\u8bf4$x1$\u548c$y1$\u6709\u53ef\u80fd$\\leqslant 0$\uff0c$x2$\u4e5f\u6709\u53ef\u80fd$>W$\uff0c$y2$\u4e5f\u6709\u53ef\u80fd$>H$\uff01\n\n\u5bf9\u4e8e\u8fd9\u4e2a\u7684\u5904\u7406\uff0c\u6211\u4eec\u9700\u8981\u518d\u5f00\u4e24\u4e2a\u6570\u7ec4$Col$\u548c$Row$\uff0c\u5b58\u50a8\u8d85\u51fa\u8fb9\u754c\u7684\u90e8\u5206\uff0c\u5177\u4f53\u7684\u5b9e\u73b0\u5c31\u770b\u7a0b\u5e8f\u5427\uff0c\u8fd9\u4e9b\u7ec6\u8282\u7684\u5904\u7406\uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u7ec6\u8bb2\u4e86\n```cpp\n//\u5b98\u65b9\u7a0b\u5e8f\n#include <stdio.h>\n#include <stdlib.h>\n\n#define MAXWH 10000000\n#define MAXN 1000000\n#define MAXQ 1000000\n\ntypedef long long int huge;\n\nint w, h, n, q;\n\ntypedef struct NUCLEARIA\n{\n\thuge Info[MAXWH];\n\thuge& operator () (int x, int y) {return Info[(y * w) + x];}\n}\nNUCLEARIA;\n\ntypedef struct PLANT\n{\n\tint x;\n\tint y;\n\tint a;\n\tint b;\n}\nPLANT;\n\ntypedef struct QUERY\n{\n\tint x1;\n\tint y1;\n\tint x2;\n\tint y2;\n}\nQUERY;\n\nNUCLEARIA Nuclearia, PosDiag, NegDiag;\nPLANT Plant[MAXN];\nQUERY Query[MAXQ];\nhuge Row[MAXWH];\nhuge Col[MAXWH];\n\nint max(int a, int b)\n{\n\treturn (a > b) ? a : b;\n}\n\nvoid UpdatePosDiag(int x1, int y1, int x2, int y2, int b)\n{\n\tif((x1 < 0) && (y1 < 0))\n\t{\n\t\tint m = -max(x1, y1);\n\t\tNuclearia(0, 0) += m * b;\n\t\tx1 += m;\n\t\ty1 += m;\n\t}\n\t\n\tif(x1 < 0)\n\t{\n\t\tint m = -x1;\n\t\tCol[y1] += b;\n\t\tCol[y1 + m] -= b;\n\t\tx1 += m;\n\t\ty1 += m;\n\t}\n\t\n\tif(y1 < 0)\n\t{\n\t\tint m = -y1;\n\t\tRow[x1] += b;\n\t\tRow[x1 + m] -= b;\n\t\tx1 += m;\n\t\ty1 += m;\n\t}\n\t\n\tPosDiag(x1, y1) += b;\n\t\n\tif((x2 + 1 < w) && (y2 + 1 < h)) PosDiag(x2 + 1, y2 + 1) -= b;\n}\n\nvoid UpdateNegDiag(int x1, int y1, int x2, int y2, int b)\n{\n\tif(y2 > h - 1)\n\t{\n\t\tint m = y2 - (h - 1);\n\t\tx1 += m;\n\t\ty2 -= m;\n\t}\n\t\n\tif(x1 < 0)\n\t{\n\t\tint m = -x1;\n\t\tCol[(y2 - m) + 1] -= b;\n\t\tif(y2 + 1 < h) Col[y2 + 1] += b;\n\t\tx1 += m;\n\t\ty2 -= m;\n\t}\n\t\n\tif((x1 < w) && (y2 >= 0)) NegDiag(x1, y2) -= b;\n\t\n\tif(x2 > w - 1)\n\t{\n\t\tint m = x2 - (w - 1);\n\t\tx2 -= m;\n\t\ty1 += m;\n\t}\n\t\n\tif(y1 < 0)\n\t{\n\t\tint m = -y1;\n\t\tRow[(x2 - m) + 1] -= b;\n\t\tif(x2 + 1 < w) Row[x2 + 1] += b;\n\t\tx2 -= m;\n\t\ty1 += m;\n\t}\n\t\n\tif((x2 + 1 >= 0) && (x2 + 1 < w) && (y1 - 1 >= 0) && (y1 - 1 < h)) NegDiag(x2 + 1, y1 - 1) += b;\n}\n\nvoid SummarizeDiags()\n{\n\tfor(int x = 0; x < w; x++)\n\t{\n\t\tfor(int y = 0; y < h; y++)\n\t\t{\n\t\t\tif((x) && (y)) PosDiag(x, y) += PosDiag(x - 1, y - 1);\n\t\t\tif((x) && (y != h - 1)) NegDiag(x, y) += NegDiag(x - 1, y + 1);\n\t\t}\n\t}\n}\n\nvoid AddDiags()\n{\n\tfor(int x = 0; x < w; x++)\n\t{\n\t\tfor(int y = 0; y < h; y++)\n\t\t{\n\t\t\tNuclearia(x, y) += PosDiag(x, y);\n\t\t\tNuclearia(x, y) += NegDiag(x, y);\n\t\t}\n\t}\n}\n\nvoid SummarizeLines()\n{\n\tfor(int x = 1; x < w; x++)\n\t{\n\t\tRow[x] += Row[x - 1];\n\t}\n\t\n\tfor(int y = 1; y < h; y++)\n\t{\n\t\tCol[y] += Col[y - 1];\n\t}\n}\n\nvoid AddLines()\n{\n\tfor(int x = 0; x < w; x++)\n\t{\n\t\tNuclearia(x, 0) += Row[x];\n\t}\n\t\n\tfor(int y = 0; y < h; y++)\n\t{\n\t\tNuclearia(0, y) += Col[y];\n\t}\n}\n\nvoid Summarize()\n{\n\tfor(int x = 0; x < w; x++)\n\t{\n\t\tfor(int y = 0; y < h; y++)\n\t\t{\n\t\t\tif(x) Nuclearia(x, y) += Nuclearia(x - 1, y);\n\t\t\tif(y) Nuclearia(x, y) += Nuclearia(x, y - 1);\n\t\t\tif((x) && (y)) Nuclearia(x, y) -= Nuclearia(x - 1, y - 1);\n\t\t}\n\t}\n}\n\nvoid Print(huge sum, int area)\n{\n\thuge rsl = sum / area;\n\tif((sum % area) * 2 >= area)\n\t{\n\t\trsl++;\n\t}\n\t\n\tprintf(\"%lld\\n\", rsl);\n}\n\nint main()\n{\n\tscanf(\"%d%d\", &w, &h);\n\t\n\tscanf(\"%d\", &n);\n\tfor(int i = 0; i < n; i++)\n\t{\n\t\tscanf(\"%d%d%d%d\", &(Plant[i].x), &(Plant[i].y), &(Plant[i].a), &(Plant[i].b));\n\t\tPlant[i].x--;\n\t\tPlant[i].y--;\n\t}\n\t\n\tscanf(\"%d\", &q);\n\tfor(int i = 0; i < q; i++)\n\t{\n\t\tscanf(\"%d%d%d%d\", &(Query[i].x1), &(Query[i].y1), &(Query[i].x2), &(Query[i].y2));\n\t\tQuery[i].x1 -= 2;\n\t\tQuery[i].y1 -= 2;\n\t\tQuery[i].x2--;\n\t\tQuery[i].y2--;\n\t}\n\t\n\tfor(int i = 0; i < n; i++)\n\t{\n\t\tPLANT& P = Plant[i];\n\t\tint d = (P.a - 1) / P.b;\n\t\tint x1 = P.x - d;\n\t\tint y1 = P.y - d;\n\t\tint x2 = P.x + d + 1;\n\t\tint y2 = P.y + d + 1;\n\t\tint r = P.a % P.b;\n\t\t\n\t\tif(r)\n\t\t{\n\t\t\tNuclearia(max(0, x1), max(0, y1)) += r;\n\t\t\tif(x2 < w) Nuclearia(x2, max(0, y1)) -= r;\n\t\t\tif(y2 < h) Nuclearia(max(0, x1), y2) -= r;\n\t\t\tif((x2 < w) && (y2 < h)) Nuclearia(x2, y2) += r;\n\t\t\t\n\t\t\tx1++;\n\t\t\ty1++;\n\t\t\tx2--;\n\t\t\ty2--;\n\t\t}\n\t\t\n\t\tif(P.a >= P.b)\n\t\t{\n\t\t\tUpdatePosDiag(x1, y1, x2, y2, P.b);\n\t\t\tUpdateNegDiag(x1, y1, x2, y2, P.b);\n\t\t}\n\t}\n\t\n\tSummarizeDiags();\n\tAddDiags();\n\tSummarizeLines();\n\tAddLines();\n\tSummarize();\n\tSummarize();\n\t\n\tfor(int i = 0; i < q; i++)\n\t{\n\t\tQUERY& Q = Query[i];\n\t\thuge rsl = Nuclearia(Q.x2, Q.y2);\n\t\tif(Q.x1 >= 0) rsl -= Nuclearia(Q.x1, Q.y2);\n\t\tif(Q.y1 >= 0) rsl -= Nuclearia(Q.x2, Q.y1);\n\t\tif((Q.x1 >= 0) && (Q.y1 >= 0)) rsl += Nuclearia(Q.x1, Q.y1);\n\t\t\n\t\tPrint(rsl, (Q.x2 - Q.x1) * (Q.y2 - Q.y1));\n\t}\n\t\n\treturn 0;\n}\n```",
        "postTime": 1594445705,
        "uid": 43373,
        "name": "jacky567",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4800 \u3010[CEOI2015 Day2]\u6838\u80fd\u56fd\u5ea6\u3011"
    },
    {
        "content": "\u8bbe $r = \\min(\\lfloor \\frac{a}{b} \\rfloor, \\max(x, w - x + 1, y, w - y + 1))$\uff0c\u5219\u6211\u4eec\u53ef\u4ee5\u5c06\u4e00\u6b21\u64cd\u4f5c\u63cf\u8ff0\u4e3a\uff1a\n\n- \u5c06\u4ee5 $(x, y)$ \u4e3a\u4e2d\u5fc3\u7684\u8fb9\u957f\u4e3a $2r + 1$ \u7684\u6b63\u65b9\u5f62\u52a0\u4e0a $a - br$\u3002\n- $\\forall 0 \\leq i < r$\uff0c\u5c06\u4ee5 $(x, y)$ \u4e3a\u4e2d\u5fc3\u7684\u8fb9\u957f\u4e3a $2i + 1$ \u7684\u6b63\u65b9\u5f62\u52a0\u4e0a $b$\u3002\n\n\u76f4\u63a5\u4e8c\u7ef4\u5dee\u5206\u66b4\u529b\u5b9e\u73b0\u662f $O(wh + n \\max(w, h) + q)$ \u7684\uff0c\u663e\u7136\u4e0d\u80fd\u901a\u8fc7\u3002\n\n\u6ce8\u610f\u5230\u5f53 $w, h$ \u8f83\u5c0f\u7684\u4e00\u4fa7\u6269\u5c55\u5b8c\u4e4b\u540e\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u4e00\u7ef4\u7684\u533a\u95f4\u52a0\u4e00\u6b21\u51fd\u6570\u95ee\u9898\uff0c\u4e8e\u662f\u8ba8\u8bba\u4e00\u4e0b $w, h$ \u5927\u5c0f\u5173\u7cfb\u5373\u53ef\u505a\u5230 $O(wh + n \\min(w, h) + q)$\u3002~~\u4f46 NKOJ \u4e0a\u8fc7\u4e0d\u53bb /fn~~\n\n\u6ce8\u610f\u5230\u5982\u679c\u6211\u4eec\u5c06\u5730\u56fe\u8fdb\u884c\u4e00\u4e9b\u6269\u5c55\u540e\uff0c\u66b4\u529b\u90e8\u5206\u5c31\u53d8\u6210\u4e86\u5bf9\u4e8c\u7ef4\u5dee\u5206\u6570\u7ec4\u7684\u659c\u7ebf\u52a0\uff0c\u4e8e\u662f\u518d\u5dee\u5206\u7ef4\u62a4\u4e24\u79cd\u659c\u7ebf\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(wh + n + q)$\u3002\n\n\u7ec6\u8282\u7a0d\u591a\uff0c\u5982\u679c\u50cf\u6211\u4e00\u6837\u5b9e\u73b0\u5f97\u4e0d\u7cbe\u7ec6\u53ef\u80fd\u8fd8\u9700\u8981\u5361\u7a7a\u95f4\uff0c\u53ef\u4ee5\u53c2\u8003\u4e00\u4e0b\u4ee3\u7801\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <stdio.h>\n#include <string.h>\n\nnamespace Fread {\n\tconst int BUFFER_SIZE = 1 << 25;\n\tchar buffer[BUFFER_SIZE + 7];\n\tchar *pstart = buffer, *pend = buffer;\n\t\n\tinline char getchar(){\n\t\tif (pstart < pend) return *pstart++;\n\t\tpstart = buffer;\n\t\tpend = buffer + fread(buffer, 1, BUFFER_SIZE, stdin);\n\t\treturn pstart == pend ? EOF : *pstart++;\n\t}\n\t\n\tinline int read(){\n\t\tint ans = 0;\n\t\tchar ch = getchar();\n\t\twhile (ch < '0' || ch > '9'){\n\t\t\tch = getchar();\n\t\t}\n\t\twhile (ch >= '0' && ch <= '9'){\n\t\t\tans = ans * 10 + (ch ^ 48);\n\t\t\tch = getchar();\n\t\t}\n\t\treturn ans;\n\t}\n}\n\ntypedef long long ll;\n\nint w, h, w2, h2, w_, h_;\nll sumk[2500007], sumb[2500007], sum_val[2500007];\nll *sum1[5000007], *sum2[5000007], *sum3[5000007], *sum4[5000007], *sum5[5000007];\n\ninline int min(int a, int b){\n\treturn a < b ? a : b;\n}\n\ninline void init(){\n\tfor (register int i = 0; i <= w2 + 1; i++){\n\t\tsum1[i] = new ll[h2 + 2];\n\t\tmemset(sum1[i], 0, sizeof(ll) * (h2 + 2));\n\t}\n\tfor (register int i = 1; i <= h_; i++){\n\t\tint size = min(h_ - i + 1, w_ + 1) + 1;\n\t\tsum2[i] = new ll[size];\n\t\tmemset(sum2[i], 0, sizeof(ll) * size);\n\t}\n\tfor (register int i = 1; i <= w_; i++){\n\t\tint size = min(w_ - i + 1, h_ + 1) + 1;\n\t\tsum3[i] = new ll[size];\n\t\tmemset(sum3[i], 0, sizeof(ll) * size);\n\t}\n\tfor (register int i = 1; i <= w_; i++){\n\t\tint size = min(i, h_ + 1) + 1;\n\t\tsum4[i] = new ll[size];\n\t\tmemset(sum4[i], 0, sizeof(ll) * size);\n\t}\n\tfor (register int i = 1; i <= h_; i++){\n\t\tsum5[i] = new ll[w_ + 2];\n\t\tmemset(sum5[i], 0, sizeof(ll) * (w_ + 2));\n\t}\n}\n\ninline int max(int a, int b){\n\treturn a > b ? a : b;\n}\n\ninline void add1(int l1, int l2, int r1, int r2, int k){\n\tl1 = max(l1 + w, 1);\n\tl2 = max(l2 + h, 1);\n\tr1 = min(r1, w) + w;\n\tr2 = min(r2, h) + h;\n\tsum1[l1][l2] += k;\n\tsum1[l1][r2 + 1] -= k;\n\tsum1[r1 + 1][l2] -= k;\n\tsum1[r1 + 1][r2 + 1] += k;\n}\n\ninline void add2(int x, int y, int r, int k){\n\tx += w;\n\ty += h;\n\tif (x <= y){\n\t\tsum2[y - x + 1][x - r + 1] += k;\n\t\tsum2[y - x + 1][x + r + 1] -= k;\n\t} else {\n\t\tsum3[x - y + 1][y - r + 1] += k;\n\t\tsum3[x - y + 1][y + r + 1] -= k;\n\t}\n}\n\ninline void add3(int x, int y, int r, int k){\n\tx += w;\n\ty += h;\n\tif (x + y - 1 <= w_){\n\t\tsum4[x + y - 1][y - r] += k;\n\t\tsum4[x + y - 1][y + r] -= k;\n\t} else {\n\t\tsum5[x + y - w_][x + r] += k;\n\t\tsum5[x + y - w_][x - r] -= k;\n\t}\n}\n\ninline void add4(int x, int y, int r, int k){\n\tif (r == 0) return;\n\tadd2(x, y, r, k);\n\tadd3(x, y + 1, r, -k);\n}\n\ninline void add5(int l, int r, int k, ll b){\n\tsumk[l] += k;\n\tsumk[r + 1] -= k;\n\tsumb[l] += b;\n\tsumb[r + 1] -= b;\n}\n\ninline void process(){\n\tfor (register int i = 1; i <= h_; i++){\n\t\tfor (register int j = 1, k = i; j <= w2 && k <= h2; j++, k++){\n\t\t\tsum2[i][j] += sum2[i][j - 1];\n\t\t\tsum1[j][k] += sum2[i][j];\n\t\t}\n\t}\n\tfor (register int i = 1; i <= w_; i++){\n\t\tfor (register int j = i, k = 1; j <= w2 && k <= h2; j++, k++){\n\t\t\tsum3[i][k] += sum3[i][k - 1];\n\t\t\tsum1[j][k] += sum3[i][k];\n\t\t}\n\t}\n\tfor (register int i = 1; i <= w_; i++){\n\t\tfor (register int j = i, k = 1; j >= 1 && k <= h2; j--, k++){\n\t\t\tsum4[i][k] += sum4[i][k - 1];\n\t\t\tif (j <= w2) sum1[j][k] += sum4[i][k];\n\t\t}\n\t}\n\tfor (register int i = 1; i <= h_; i++){\n\t\tfor (register int j = w_, k = i; j >= 1 && k <= h2; j--, k++){\n\t\t\tsum5[i][j] += sum5[i][j + 1];\n\t\t\tif (j <= w2) sum1[j][k] += sum5[i][j];\n\t\t}\n\t}\n\tfor (register int i = 1; i <= w2; i++){\n\t\tfor (register int j = 1; j <= h2; j++){\n\t\t\tsum1[i][j] += sum1[i][j - 1] + sum1[i - 1][j] - sum1[i - 1][j - 1];\n\t\t}\n\t}\n\tfor (register int i = 1; i <= w2; i++){\n\t\tfor (register int j = 1; j <= h2; j++){\n\t\t\tsum1[i][j] += sum1[i][j - 1] + sum1[i - 1][j] - sum1[i - 1][j - 1];\n\t\t}\n\t}\n}\n\ninline ll get_sum(int x1, int y1, int x2, int y2){\n\tx1 += w;\n\ty1 += h;\n\tx2 += w;\n\ty2 += h;\n\treturn sum1[x2][y2] - sum1[x1 - 1][y2] - sum1[x2][y1 - 1] + sum1[x1 - 1][y1 - 1];\n}\n\nint main(){\n\tint n, q;\n\tw = Fread::read();\n\th = Fread::read();\n\tn = Fread::read();\n\tw2 = w * 2;\n\th2 = h * 2;\n\tif (w <= h){\n\t\tw_ = w * 3;\n\t\th_ = h * 2 + w;\n\t\tinit();\n\t\tfor (register int i = 1; i <= n; i++){\n\t\t\tint x = Fread::read(), y = Fread::read(), a = Fread::read(), b = Fread::read(), r = min(a / b, h), thresold = max(x, w - x + 1);\n\t\t\tadd1(x - r, y - r, x + r, y + r, a - b * r);\n\t\t\tif (r < thresold){\n\t\t\t\tadd4(x, y, r, b);\n\t\t\t} else {\n\t\t\t\tint L = max(y - thresold, 0), R = min(y + thresold, h + 1);\n\t\t\t\tadd4(x, y, thresold, b);\n\t\t\t\tadd1(1, L + 1, w, R - 1, (ll)b * (r - thresold));\n\t\t\t\tadd5(max(y - r + 1, 1), L, b, (ll)b * (r - y));\n\t\t\t\tadd5(R, min(y + r - 1, h), -b, (ll)b * (r + y));\n\t\t\t}\n\t\t}\n\t\tprocess();\n\t\tfor (register int i = 1; i <= h; i++){\n\t\t\tsumk[i] += sumk[i - 1];\n\t\t\tsumb[i] += sumb[i - 1];\n\t\t}\n\t\tfor (register int i = 1; i <= h; i++){\n\t\t\tsum_val[i] = sum_val[i - 1] + (i * sumk[i] + sumb[i]);\n\t\t}\n\t\tq = Fread::read();\n\t\tfor (register int i = 1; i <= q; i++){\n\t\t\tint x1, y1, x2, y2, size;\n\t\t\tx1 = Fread::read();\n\t\t\ty1 = Fread::read();\n\t\t\tx2 = Fread::read();\n\t\t\ty2 = Fread::read();\n\t\t\tsize = (x2 - x1 + 1) * (y2 - y1 + 1);\n\t\t\tprintf(\"%lld\\n\", (get_sum(x1, y1, x2, y2) + (x2 - x1 + 1) * (sum_val[y2] - sum_val[y1 - 1]) + size / 2) / size);\n\t\t}\n\t} else {\n\t\tw_ = w * 2 + h;\n\t\th_ = h * 3;\n\t\tinit();\n\t\tfor (register int i = 1; i <= n; i++){\n\t\t\tint x = Fread::read(), y = Fread::read(), a = Fread::read(), b = Fread::read(), r = min(a / b, w), thresold = max(y, h - y + 1);\n\t\t\tadd1(x - r, y - r, x + r, y + r, a - b * r);\n\t\t\tif (r < thresold){\n\t\t\t\tadd4(x, y, r, b);\n\t\t\t} else {\n\t\t\t\tint L = max(x - thresold, 0), R = min(x + thresold, w + 1);\n\t\t\t\tadd4(x, y, thresold, b);\n\t\t\t\tadd1(L + 1, 1, R - 1, h, (ll)b * (r - thresold));\n\t\t\t\tadd5(max(x - r + 1, 1), L, b, (ll)b * (r - x));\n\t\t\t\tadd5(R, min(x + r - 1, w), -b, (ll)b * (r + x));\n\t\t\t}\n\t\t}\n\t\tprocess();\n\t\tfor (register int i = 1; i <= w; i++){\n\t\t\tsumk[i] += sumk[i - 1];\n\t\t\tsumb[i] += sumb[i - 1];\n\t\t}\n\t\tfor (register int i = 1; i <= w; i++){\n\t\t\tsum_val[i] = sum_val[i - 1] + (i * sumk[i] + sumb[i]);\n\t\t}\n\t\tq = Fread::read();\n\t\tfor (register int i = 1; i <= q; i++){\n\t\t\tint x1, y1, x2, y2, size;\n\t\t\tx1 = Fread::read();\n\t\t\ty1 = Fread::read();\n\t\t\tx2 = Fread::read();\n\t\t\ty2 = Fread::read();\n\t\t\tsize = (x2 - x1 + 1) * (y2 - y1 + 1);\n\t\t\tprintf(\"%lld\\n\", (get_sum(x1, y1, x2, y2) + (y2 - y1 + 1) * (sum_val[x2] - sum_val[x1 - 1]) + size / 2) / size);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1682475731,
        "uid": 201007,
        "name": "Leasier",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P4800 \u3010[CEOI2015 Day2] \u6838\u80fd\u56fd\u5ea6\u3011"
    }
]