[
    {
        "content": "\u597d\u50cf\u4e0d\u5c11\u9898\u89e3\u90fd\u6709\u4e9b\u53e4\u8001\u4e86\uff0c\u751a\u81f3\u8fd8\u6709\u8bef\u5bfc\u4eba\u7684\u9519\u8bef\u7684\u9898\u89e3\u5b58\u5728\uff08\u6df1\u53d7\u5176\u5bb3\uff09\n\n\u56e0\u6b64\u849f\u84bb\u5728\u8fd9\u91cc\u5199\u4e00\u7bc7\u65b0\u9898\u89e3\uff0c\u5e2e\u52a9\u548c\u6211\u4e00\u6837\u7684\u849f\u84bb\u7406\u89e3\u672c\u9898\u3002\n\n\n**Time\uff1a2018.11.3**\n    \n\u6211\u4f1a\u8bf4\u660e\u6811\u72b6\u6570\u7ec4\u4e0e\u5f52\u5e76\u6392\u5e8f\u4e24\u79cd\u89e3\u6cd5\uff0c\u7ebf\u6bb5\u6811\u89e3\u6cd5\u4e0e\u6811\u72b6\u6570\u7ec4\u7c7b\u4f3c\n\n---------------------\n\n\u2460 \u5f52\u5e76\u6392\u5e8f\u89e3\u6cd5\n\n\u9996\u5148\u4f60\u9700\u8981\u77e5\u9053\u4ec0\u4e48\u662f\u5f52\u5e76\u6392\u5e8f\u3002\u7136\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u60f3\uff1a\n\n\u5982\u679c\u6211\u4eec\u60f3\u8981\u5c06\u4e00\u4e2a\u5e8f\u5217\u6392\u6210\u4ece\u5c0f\u5230\u5927\u6709\u5e8f\u7684\uff0c\u90a3\u4e48\u6bcf\u6b21\u5212\u5206\u540e\u5408\u5e76\u65f6\u5de6\u53f3\u5b50\u533a\u95f4\u90fd\u662f\u4ece\u5c0f\u5230\u5927\u6392\u597d\u5e8f\u7684\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7edf\u8ba1\u53f3\u8fb9\u533a\u95f4\u6bcf\u4e00\u4e2a\u6570\u5206\u522b\u4f1a\u4e0e\u5de6\u8fb9\u533a\u95f4\u4ea7\u751f\u591a\u5c11\u9006\u5e8f\u5bf9\u5373\u53ef\u3002\n\n\u4e0d\u61c2\u7684\u8bdd\u770b\u6817\u5b50\uff1a\n\n```\n\n//\u5728\u67d0\u4e2a\u65f6\u5019\uff0c\u5de6\u533a\u95f4\uff1a  5 6 7  \u4e0b\u6807\u4e3ai\n//           \u53f3\u533a\u95f4\uff1a  1 2 9  \u4e0b\u6807\u4e3aj\n//          \n//\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u8fdb\u884c\u5408\u5e76\uff1a\n//step 1\uff1a\u7531\u4e8e 5>1\uff0c\u6240\u4ee5\u4ea7\u751f\u4e86\u9006\u5e8f\u5bf9\uff0c\u8fd9\u91cc\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u5de6\u533a\u95f4\u6240\u6709\u8fd8\u6ca1\u6709\u88ab\u5408\u5e76\u7684\u6570\u90fd\u6bd4 1 \u5927\uff0c\u6240\u4ee51\u4e0e\u5de6\u533a\u95f4\u6240\u6709\u5143\u7d20\u5171\u4ea7\u751f\u4e86 3 \u4e2a\u9006\u5e8f\u5bf9(\u5373tot_numleft-i+1\u5bf9)\uff0c\u7edf\u8ba1\u7b54\u6848\u5e76\u5408\u5e76 1 \n//step 2\uff1a\u7531\u4e8e 5>2\uff0c\u7531\u4e0a\u4ea7\u751f\u4e863\u5bf9\u9006\u5e8f\u5bf9\uff0c\u7edf\u8ba1\u7b54\u6848\u5e76\u5408\u5e76 2\n//step 3\uff1a\u7531\u4e8e 5<9, \u6ca1\u6709\u9006\u5e8f\u5bf9\u4ea7\u751f\uff0c\u53f3\u533a\u95f4\u4e0b\u6807 j++\n//step 4\uff1a\u7531\u4e8e 6<9, \u6ca1\u6709\u9006\u5e8f\u5bf9\u4ea7\u751f\uff0c\u53f3\u533a\u95f4\u4e0b\u6807 j++\n//step 5\uff1a\u7531\u4e8e 7<9, \u6ca1\u6709\u9006\u5e8f\u5bf9\u4ea7\u751f\uff0c\u53f3\u533a\u95f4\u4e0b\u6807 j++\n//step 6\uff1a\u7531\u4e8e\u53f3\u533a\u95f4\u5df2\u7ecf\u7ed3\u675f\uff0c\u6b63\u5e38\u6267\u884c\u5408\u5e76\u5de6\u533a\u95f4\u5269\u4f59\uff0c\u7ed3\u675f\n\n//PS\uff1a tot_numleft=3\uff0c\u5373\u5de6\u533a\u95f4\u603b\u5143\u7d20\u4e2a\u6570\n```\n\u770b\u61c2\u4e86\u5427(\u83ab\u540d\u81ea\u4fe1)\n\n\u7531\u4e8e\u5f52\u5e76\u6392\u5e8f\u6ca1\u6709\u4ec0\u4e48\u5751\uff0c\u6b63\u5e38\u6267\u884c\u5e76\u7edf\u8ba1\u5373\u53ef\uff0c\u6ce8\u610f **\u7b54\u6848\u4f1a\u7206 $int$ \uff01**\u6211\u4eec\u9700\u8981\u4f7f\u7528**$long$ $long$**\u5b58\uff0c\u5982\u679c\u4f7f\u7528 **$printf$** \u8f93\u51fa\uff0c\u90a3\u4e48\u53ef\u522b\u5fd8\u4e86\u7528**%$lld$** \uff01\n\n \u590d\u6742\u5ea6\u4e0e\u666e\u901a\u7684\u5f52\u5e76\u6392\u5e8f\u76f8\u540c\uff0c\u4e3a$O(Nlog_2N)$\n \n \u6548\u7387\uff1a**$1682ms/4.43MB$  ** (\u6570\u636e\u66f4\u65b0\u4e4b\u540e)\n \n**Code\uff1a**\n```\n#include<cstdio>\n#include<iostream>\nusing namespace std;\nint n,a[500010],c[500010];\nlong long ans;\n\nvoid msort(int b,int e)//\u5f52\u5e76\u6392\u5e8f\n{\n    if(b==e)  \n\t\treturn;\n    int mid=(b+e)/2,i=b,j=mid+1,k=b;\n    msort(b,mid),msort(mid+1,e);\n    while(i<=mid&&j<=e)\n    \tif(a[i]<=a[j])\n    \t\tc[k++]=a[i++];\n    \telse\n    \t\tc[k++]=a[j++],ans+=mid-i+1;//\u7edf\u8ba1\u7b54\u6848\n    while(i<=mid)\n    \tc[k++]=a[i++];\n    while(j<=e)\n    \tc[k++]=a[j++];\n    for(int l=b;l<=e;l++)\n    \ta[l]=c[l];\n} \n\nint main()\n{\n    scanf(\"%d\",&n); \n    for(int i=1;i<=n;i++)\n    \tscanf(\"%d\",&a[i]);\n    msort(1,n);\n    printf(\"%lld\",ans);\n    return 0;\n}\n\n```\n------\n\u2461\u6811\u72b6\u6570\u7ec4\u89e3\u6cd5\n\n\u6811\u72b6\u6570\u7ec4\u89e3\u6cd5\u5728\u8fd9\u9053\u9898\u6ca1\u6709\u5f52\u5e76\u5feb\uff0c\u539f\u56e0\u7b49\u4f1a\u8bf4\n\n$Q1:$ \u6211\u4eec\u9700\u8981\u77e5\u9053\uff0c\u600e\u4e48\u7edf\u8ba1\u7b2c $ i $ \u4e2a\u6570\u4f1a\u4e0e\u7b2c$1 $~ $i-1$\u4e2a\u6570\u6784\u6210\u591a\u5c11\u4e2a\u9006\u5e8f\u5bf9\u5462?\n\n$Ans1:$ \u8003\u8651\u6839\u636e\u503c\u6765\u5efa\u6811\u72b6\u6570\u7ec4 , \u521d\u59cb\u6811\u72b6\u6570\u7ec4\u4e3a\u5168 $0$\u3002\u73b0\u5728\u6309\u7167\u5e8f\u5217\u4ece\u5de6\u5230\u53f3\u5c06\u6570\u636e\u7684\u503c\u5bf9\u5e94\u7684\u4f4d\u7f6e\u7684\u6570\u52a0\u4e00\uff0c\u4ee3\u8868\u53c8\u6709\u4e00\u4e2a\u6570\u51fa\u73b0\u3002\u56e0\u6b64\uff0c\u5728\u5faa\u73af\u5230\u7b2c $i$ \u9879\u65f6\uff0c\u524d $i-1$ \u9879\u5df2\u7ecf\u52a0\u5165\u5230\u6811\u72b6\u6570\u7ec4\u5185\u4e86 , \u6811\u72b6\u6570\u7ec4\u5185\u6bd4 $a_i$ \u5927\u7684\u90fd\u4f1a\u4e0e$a_i$\u6784\u6210\u9006\u5e8f\u5bf9\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e00\u5b9a\u51fa\u73b0\u7684\u66f4\u65e9\uff0c\u6240\u4ee5\u4ea7\u751f\u7684\u9006\u5e8f\u5bf9\u6570\u91cf\u4e3a$i-query(a_i)$  \n\n\u6ce8$:query(a_i)$ \u4ee3\u8868\u5728\u6811\u72b6\u6570\u7ec4\u5185\u8be2\u95ee $1$ ~ $a_i$ \u9879\u7684\u524d\u7f00\u548c\n\n$Q2:$ \u6839\u636e $a_i$ \u6765\u5efa\u6811\u72b6\u6570\u7ec4\u7a7a\u95f4\u4e0d\u591f\u554a\uff1f\n\n$Ans2:$ \u786e\u5b9e\u4e0d\u591f\u3002\u4f46\u662f\u6211\u4eec\u9700\u8981\u7684\u53ea\u662f\u6570\u636e\u4e4b\u95f4\u7684\u76f8\u5bf9\u5927\u5c0f\uff0c\u53ea\u9700\u8981\u6ee1\u8db3\u5927\u4e8e\u6216\u5c0f\u4e8e\u672c\u8eab\uff0c\u4e0e\u5927\u591a\u5c11\u65e0\u5173\uff0c\u5177\u4f53\u6765\u8bf4\uff0c\u4e3e\u4e2a\u6817\u5b50\uff1a\n```\n//  1 2 10000\n//  1 2 3\n//\u4e0a\u9762\u4e24\u4e2a\u5e8f\u5217\u5728\u672c\u9898\u662f\u7b49\u6548\u7684\uff0c\u56e0\u4e3a\u65e0\u8bba\u7b2c\u4e09\u9879\u662f3\u8fd8\u662f10000\uff0c\u5b83\u90fd\u5927\u4e8e\u7b2c\u4e00\u9879\u548c\u7b2c\u4e8c\u9879\n```\n\u8fd9\u542f\u53d1\u6211\u4eec\u5bf9\u6570\u636e\u79bb\u6563\u5316\uff0c\u5148\u5c06\u6570\u636e\u6392\u5e8f\uff0c\u518d\u7528 $1$ ~ $n$ \u5206\u522b\u5bf9\u5e94 $n$ \u4e2a\u6570\u8868\u793a\u5b83\u4eec\u7684\u76f8\u5bf9\u5927\u5c0f\uff0c\u5bf9\u65b0\u7684\u5e8f\u5217\u5efa\u6811\u72b6\u6570\u7ec4\u7a7a\u95f4\u5c31\u591f\u4e86$(n\u22645\u00d710^5)$\n\n$Q3:$ \u76f8\u7b49\u7684\u5143\u7d20\u662f\u5426\u4f1a\u5bfc\u81f4\u6c42\u89e3\u9519\u8bef\uff1f\u6bcf\u4e00\u4e2a\u6570\uff08\u4e0d\u7ba1\u662f\u5426\u76f8\u7b49\uff09\u5bf9\u5e94\u7684\u65b0\u6570\u90fd\u4e0d\u540c\u8bf6\uff1f\n\n$Ans3:$ \u4e0d\u5904\u7406\u7684\u8bdd\u4f1a\u51fa\u9519\u7684\uff0c\u95ee\u9898\u7684\u5173\u952e\u5728\u4e8e\u662f\u5426\u6709\u4e0e $a_i$ \u76f8\u7b49\u7684\u5143\u7d20\u5728      $a_i$ \u524d\u88ab\u52a0\u5165\u4e14\u5176\u76f8\u5bf9\u5927\u5c0f\u6807\u8bb0\u66f4\u5927\u3002\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u5c31\u4f1a\u8bef\u5c06\u4e24\u4e2a\u76f8\u7b49\u7684\u6570\u5224\u4e3a\u9006\u5e8f\u5bf9\u3002\u600e\u4e48\u89e3\u51b3\u5462\uff0c\u53ea\u8981\u6240\u6709\u4e0e $a_i$ \u76f8\u7b49\u7684\u5143\u7d20\u4e2d\uff0c\u5148\u51fa\u73b0\u7684\u6807\u8bb0\u4e5f\u66f4\u5c0f\u5c31\u597d\u4e86(\u6211\u4eec\u53ea\u7edf\u8ba1\u76f8\u5bf9\u66f4\u5927\u7684)\u3002\u5177\u4f53\u53ea\u9700\u8981\u5728\u6392\u5e8f\u65f6\u5c06 $a_i$ \u4f5c\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u4e0b\u6807(\u7b2c\u51e0\u4e2a\u51fa\u73b0)\u4f5c\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u5373\u53ef\u3002\n\n\u5982\u679c\u7528\u7684\u4e0d\u662f\u8fd9\u4e2a\u65b9\u6cd5\u7684\u6811\u72b6\u6570\u7ec4\uff0c\u90a3\u4e48\u4f60 $WA$ \u4e5f\u591a\u534a\u662f\u4f60\u5fd8\u8bb0\u5904\u7406 $Q3$ \u4e2d\u63d0\u5230\u7684\u95ee\u9898\u4e86\uff0c\u5982\u679c $RE$ \uff0c\u591a\u534a\u662f\u7a7a\u95f4\u5f00\u5c0f\u4e86\u3002\n\n\u540c\u65f6\uff0c\u518d\u4e00\u6b21\uff0c\u6ce8\u610f **\u7b54\u6848\u4f1a\u7206 $int$ \uff01**\u6211\u4eec\u9700\u8981\u4f7f\u7528**$long$ $long$**\u5b58\uff0c\u5982\u679c\u4f7f\u7528 **$printf$** \u8f93\u51fa\uff0c\u90a3\u4e48\u53ef\u522b\u5fd8\u4e86\u7528**%$lld$** \uff01\n\n\u7531\u4e8e\u6211\u4eec\u4e0d\u4ec5\u8981\u6392\u5e8f\uff0c\u8fd8\u8981\u5efa\u6811\u72b6\u6570\u7ec4\u7edf\u8ba1\uff0c\u6240\u4ee5\uff0c\u867d\u7136\u4e24\u8005\u590d\u6742\u5ea6\u76f8\u540c\uff0c\u4f46\u662f\u6811\u72b6\u6570\u7ec4\u5728\u8fd9\u91cc\u4f1a\u6162\u4e00\u4e9b\u3002\n\n\u4e24\u79cd\u65b9\u6cd5\u90fd\u662f\u6709\u5fc5\u8981\u638c\u63e1\u7684\uff0c\u6570\u636e\u503c\u57df\u5c0f\u7684\u65f6\u5019\u6811\u72b6\u6570\u7ec4\u4f1a\u66f4\u5feb\uff0c\u4e24\u8005\u5747\u6709\u4f18\u70b9\u3002\n\n\u590d\u6742\u5ea6\u74f6\u9888\u5728\u6392\u5e8f\uff0c\u4e3a$O(Nlog_2N)$ \n\n\u6548\u7387$:2359ms/8.38MB$ (\u6570\u636e\u66f4\u65b0\u4e4b\u540e)\n\n**$Code:$**\n\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint tree[500010],ranks[500010],n;\nlong long ans; \nstruct point\n{\n    int num,val;\n}a[500010];\ninline bool cmp(point q,point w)\n{\n    if(q.val==w.val)\n        return q.num<w.num;\n    return q.val<w.val;\n}\ninline void insert(int p,int d)\n{\n    for(;p<=n;p+=p&-p)\n        tree[p]+=d; \n}\ninline int query(int p)\n{\n    int sum=0;\n    for(;p;p-=p&-p)\n        sum+=tree[p];\n    return sum;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n        scanf(\"%d\",&a[i].val),a[i].num=i;\n    sort(a+1,a+1+n,cmp);\n    for(int i=1;i<=n;i++)\n        ranks[a[i].num]=i;\n    for(int i=1;i<=n;i++)\n    {\n        insert(ranks[i],1);\n        ans+=i-query(ranks[i]);\n    }\n    printf(\"%lld\",ans);\n    return 0;\n} \n```\n\n\u5982\u679c\u54ea\u91cc\u51fa\u9505\u4e86\u8bf7\u544a\u77e5\u6211 $QWQ$ \n\n\u8fd8\u4e0d\u61c2\u53ef\u4ee5\u79c1\u6211",
        "postTime": 1541205460,
        "uid": 68975,
        "name": "\u5b66\u65e0\u6b62\u5883",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "# \u5f52\u5e76\u6392\u5e8f\n\n\u9996\u5148\u58f0\u660e\u4e00\u4e0b\uff1a\u8fd9\u9053\u9898\u7528\u5192\u6ce1\u6392\u5e8f\u662f\u4e0d\u80fd\u901a\u8fc7\u7684\uff0c\u9700\u8981\u7528\u5f52\u5e76\u6392\u5e8f\n\n\u6211\u4eec\u5148\u6765\u4ecb\u7ecd\u4e00\u4e0b**\u5f52\u5e76\u6392\u5e8f**\n\n## \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\n\n**O(n log n)**\n\n## \u7a7a\u95f4\u590d\u6742\u5ea6:\n\n**O(n)**\n\n## \u5b9a\u4e49\uff1a\n\n**\u5f52\u5e76\u6392\u5e8f\u662f\u5efa\u7acb\u5728\u5f52\u5e76\u64cd\u4f5c\u4e0a\u7684\u4e00\u79cd\u6709\u6548\u7684\u6392\u5e8f\u7b97\u6cd5,\u8be5\u7b97\u6cd5\u91c7\u7528\u7684\u662f\u5206\u6cbb\u6cd5\uff08\u4e8c\u5206\u6cd5\uff09\u3002**\n\n## \u7b97\u6cd5\u6d41\u7a0b\uff1a\n\n\u5148\u7ed9\u4e2a\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/59594.png)\n\n\u8bben\u4e3a\u5e8f\u5217\u5143\u7d20\u7684\u4e2a\u6570\uff0ca[i]\u4e3a\u5176\u4e2d\u7b2ci\u4e2a\u5143\u7d20\uff0cmsort\u4e3a\u5f52\u5e76\u6392\u5e8f\u7684\u51fd\u6570\u540d\uff0cb[i]\u4e3a\u4e24\u4e2a\u76f8\u90bb\u7684\u5b50\u5e8f\u5217\u5408\u5e76\u5b8c\u7684\u4e34\u65f6\u6709\u5e8f\u5e8f\u5217\n\n**1.\u5c06\u4e00\u4e2a\u5e8f\u5217\u8fdb\u884c\u4e8c\u5206\uff0c\u76f4\u5230\u5206\u89e3\u6210n\u4e2a\u5143\u7d20\uff08l == r\uff09**\n\n\u5982\u4ee3\u7801\uff1a\n\n```cpp\nint mid = (l + r) / 2;//\u53d6\u4e2d\u95f4 \nif(l == r)//\u82e5l == r\u4e86\uff0c\u5c31\u4ee3\u8868\u8fd9\u4e2a\u5b50\u5e8f\u5217\u5c31\u53ea\u52691\u4e2a\u5143\u7d20\u4e86\uff0c\u9700\u8981\u8fd4\u56de \n{\n\treturn;\n}\nelse\n{\n\tmsort(l, mid);//\u5206\u6210l\u548c\u4e2d\u95f4\u4e00\u6bb5\uff0c\u4e2d\u95f4 + 1\u548cr\u4e00\u6bb5\uff08\u4e8c\u5206\uff09 \n\tmsort(mid + 1, r);\n}\n```\n\n**2.\u5c06\u5df2\u6709\u5e8f\u7684\u5b50\u5e8f\u5217\u5408\u5e76\uff08\u4e8c\u5206\u5230\u6700\u540e\u7684\u65f6\u5019\uff0c\u4e00\u4e2a\u5143\u7d20\u4e00\u5b9a\u662f\u6709\u5e8f\u7684\uff09\uff0c\u5f97\u5230\u5b8c\u5168\u6709\u5e8f\u7684\u5e8f\u5217**\n\n\u5982\u4ee3\u7801\uff1a\n\n```cpp\nint i = l;//i\u4ecel\u5f00\u59cb\uff0c\u5230mid\uff0c\u56e0\u4e3a\u73b0\u5728\u6392\u5e8f\u7684\u662fl ~ r\u7684\u533a\u95f4\u4e14\u8981\u4e8c\u5206\u5408\u5e76 \nint j = mid + 1;//j\u4ecemid + 1\u5f00\u59cb\uff0c\u5230r\u539f\u56e0\u540c\u4e0a\nint t = l;//\u6570\u7ec4b\u7684\u4e0b\u6807\uff0c\u6570\u7ec4b\u5b58\u7684\u662fl ~ r\u533a\u95f4\u6392\u5b8c\u5e8f\u7684\u503c \nwhile(i <= mid && j <= r)//\u540c\u4e0ai\uff0cj\u7684\u89e3\u91ca \n{\n\tif(a[i] > a[j])//\u5982\u679c\u524d\u9762\u7684\u5143\u7d20\u6bd4\u540e\u9762\u5927(l ~ mid\u4e2d\u7684\u5143\u7d20 > mid + 1 ~ r\u4e2d\u7684\u5143\u7d20)(\u9006\u5e8f\u5bf9\u51fa\u73b0!!!) \n\t{ \n\t\tans += mid - i + 1;//\u7531\u4e8el ~ mid\u548cmid + 1 ~ r\u90fd\u662f\u6709\u5e8f\u5e8f\u5217\u6240\u4ee5\u4e00\u65e6l ~ mid\u4e2d\u7684\u5143\u7d20 > mid + 1 ~ r\u4e2d\u7684\u5143\u7d20\u800c\u53c8\u56e0\u4e3a\u7b2ci\u4e2a\u5143\u7d20 < i + 1 ~ mid\u90a3\u4e48i + 1 ~ mid\u7684\u5143\u7d20\u90fd > \u7b2cj\u4e2a\u5143\u7d20\u3002\u6240\u4ee5+\u7684\u5143\u7d20\u4e2a\u6570\u5c31\u662fi ~ mid\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u53camid - i + 1(\u5f52\u5e76\u6392\u5e8f\u91cc\u6ca1\u6709\u8fd9\u53e5\u8bdd\uff0c\u6c42\u9006\u5e8f\u5bf9\u91cc\u6709) \n\t\tb[t++] = a[j];//\u7b2cj\u4e2a\u5143\u7d20\u6bd4i ~ mid\u7684\u5143\u7d20\u90fd\u5c0f\uff0c\u90a3\u4e48\u7b2cj\u4e2a\u5143\u7d20\u662f\u76ee\u524d\u6700\u5c0f\u7684\u4e86\uff0c\u5c31\u653e\u8fdbb\u6570\u7ec4\u91cc \n\t\t++j;//\u4e0b\u4e00\u4e2a\u5143\u7d20(mid + 1 ~ r\u7684\u5143\u7d20\u5c0f\uff0c\u6240\u4ee5\u52a0\u7b2cj\u4e2a\u5143\u7d20) \n\t}\n\telse\n\t{\n\t\tb[t++] = a[i];//i\u5c0f\uff0c\u5b58a[i] \n\t\t++i;//\u540c\u7406 \n\t}\n}\nwhile(i <= mid)//\u628a\u5269\u7684\u5143\u7d20(\u56e0\u4e3a\u8f83\u5927\u6240\u4ee5\u5728\u4e0a\u9762\u6ca1\u9009) \n{\n\tb[t++] = a[i];//\u5b58\u8fdb\u53bb \n\t++i; \n}\nwhile(j <= r)//\u540c\u7406 \n{\n\tb[t++] = a[j];\n\t++j;\n}\n```\n\n**\u5c06\u5df2\u6709\u5e8f\u7684b\u6570\u7ec4\u8d4b\u503c\u5230a\u6570\u7ec4\uff08\u539f\u6570\u7ec4\uff09\u91cc**\n\n\u5982\u4ee3\u7801\uff1a\n\n```cpp\nfor(register int i = l; i <= r; ++i)//\u628a\u6709\u5e8f\u5e8f\u5217b\u8d4b\u503c\u5230a\u91cc \n{\n\ta[i] = b[i];\n}\n```\n\n## \u624b\u52a8\u6a21\u62df\u4e00\u4e0b\u6837\u4f8b\uff08\u4ee5\u4fbf\u66f4\u597d\u7684\u7406\u89e3\u7b97\u6cd5\uff09\uff1a\n\n\u4e8c\u5206\u65f6\uff0c\u5947\u6570\u65f6\u9ed8\u8ba4\u53d6\u5de6\u8fb9n / 2 + 1,\u53f3\u8fb9\u53d6n / 2\u4e86\uff08~~\u4e3a\u4e86\u65b9\u4fbf~~\uff09\n\n**\u4e8c\u5206\u65f6\u7684\u56fe\uff1a**\n\n![](https://cdn.luogu.com.cn/upload/pic/59663.png)\n\n\u90a3\u4e48\u6211\u4eec\u5f00\u59cb\u5408\u5e76\uff08\u770b\u7740\u56fe\u5408\u5e76\u5427\uff0c\u5e76\u4e14**\u53ea\u80fd\u540c\u4e00\u5c42\u5408\u5e76\uff0c\u5e76\u5411\u4e0a\u4f20\u9012**,\u6211\u628a\u540e\u9762\u4e24\u4e2awhile\u5faa\u73af\u5728\u5408\u5e76\u4e2d\u7701\u53bb\u4e86\uff09\n\n1.\u7b2c\u56db\u5c425\u548c4\u5408\u5e76\uff1ai = l = 1\uff1bmid = (l + r) / 2 = 1\uff1br = 2\uff1bj = mid + 1 = 2\uff1b5 > 4\uff1b\u9006\u5e8f\u5bf9\u6570\u91cf + mid - i + 1 = 1\uff1bb\u6570\u7ec4\uff1a4 5 0 0 0 0\uff1b j + 1 > r; \u9000\u51fa\uff1ba\u6570\u7ec4\uff1a4 5 2 6 3 1;\n\n![](https://cdn.luogu.com.cn/upload/pic/59694.png)\n\n2.\u7b2c\u56db\u5c426\u548c3\u5408\u5e76\uff1ai = l = 4\uff1bmid = (l + r) / 2 = 4\uff1br = 5\uff1bj = mid + 1 = 5; 6 > 3\uff1b\u9006\u5e8f\u5bf9\u6570\u91cf + mid - i + 1 = 2\uff1bb\u6570\u7ec4\uff1a4 5 0 3 6 0\uff1bj + 1 > r; \u9000\u51fa\uff1ba\u6570\u7ec4\uff1a4 5 2 3 6 1\uff1b\n\n![](https://cdn.luogu.com.cn/upload/pic/59696.png)\n\n3.\u7b2c\u4e09\u5c424, 5\u548c2\u5408\u5e76\uff1a i = l = 1\uff1bmid = (l + r) / 2 = 2\uff1br = 3\uff1bj = mid + 1 = 2\uff1b4  > 2; \u9006\u5e8f\u5bf9\u6570\u91cf + mid - i + 1 = 4\uff1bb\u6570\u7ec4\uff1a2 4 5 3 6 0\uff1bj + 1 > r\uff1b\u9000\u51fa\uff1ba\u6570\u7ec4\uff1a2 4 5 3 6 1\uff1b\n\n![](https://cdn.luogu.com.cn/upload/pic/59712.png)\n\n4.\u7b2c\u4e09\u5c423, 6\u548c1\u5408\u5e76\uff1ai = l = 4\uff1bmid = (l + r) / 2 = 5\uff1br = 6\uff1bj = mid + 1 = 6\uff1b3 > 1\uff1b\u9006\u5e8f\u5bf9\u6570\u91cf + mid - i + 1 = 6\uff1bb\u6570\u7ec4\uff1a2 4 5 1 3 6\uff1bj + 1 > r\uff1b\u9000\u51fa\uff1ba\u6570\u7ec4\uff1a2 4 5 1 3 6\uff1b\n\n![](https://cdn.luogu.com.cn/upload/pic/59713.png)\n\n5.\u7b2c\u4e8c\u5c422, 4\uff0c5\u548c1, 3\uff0c6\u5408\u5e76\uff1ai = l = 1\uff1bmid = (l + r) / 2 = 3\uff1br = 6\uff1bj = mid + 1 = 4\uff1b2 > 1\uff1b \u9006\u5e8f\u5bf9\u6570\u91cf + mid - i + 1 = 9\uff1bb\n\u6570\u7ec4\uff1a1 2 4 5 3 6\uff1bj + 1\uff1b2 < 3\uff1bb\u6570\u7ec4\uff1a1 2 4 5 3 6\uff1bi + 1\uff1b4 > 3\uff1b\u9006\u5e8f\u5bf9\u6570\u91cf + mid - i + 1 = 11\uff1bb\u6570\u7ec4\uff1a1 2 3 4 5 6\uff1bj + 1\uff1b4 < 6\uff1bb\u6570\u7ec4\uff1a1 2 3 4 5 6\uff1bi + 1\uff1b5 < 6\uff1bb\u6570\u7ec4\uff1a1 2 3 4 5 6\uff1bi + 1 > mid\uff1b\u9000\u51fa\uff1b a\u6570\u7ec4\uff1a1 2 3 4 5 6\uff08\u6709\u5e8f\uff09\n\n![](https://cdn.luogu.com.cn/upload/pic/59720.png)\n\n\u6240\u4ee5\uff0c\u8f93\u51fa\u6837\u4f8b\u5c31\u662f11\n\ncode\uff1a\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint n, a[5000001], b[5000001];\nlong long ans;\ninline void msort(int l, int r)//\u5f52\u5e76\u6392\u5e8f\n{\n\tint mid = (l + r) / 2;//\u53d6\u4e2d\u95f4 \n\tif(l == r)//\u82e5l == r\u4e86\uff0c\u5c31\u4ee3\u8868\u8fd9\u4e2a\u5b50\u5e8f\u5217\u5c31\u53ea\u52691\u4e2a\u5143\u7d20\u4e86\uff0c\u9700\u8981\u8fd4\u56de \n\t{\n\t\treturn;\n\t}\n\telse\n\t{\n\t\tmsort(l, mid);//\u5206\u6210l\u548c\u4e2d\u95f4\u4e00\u6bb5\uff0c\u4e2d\u95f4 + 1\u548cr\u4e00\u6bb5\uff08\u4e8c\u5206\uff09 \n\t\tmsort(mid + 1, r);\n\t}\n\tint i = l;//i\u4ecel\u5f00\u59cb\uff0c\u5230mid\uff0c\u56e0\u4e3a\u73b0\u5728\u6392\u5e8f\u7684\u662fl ~ r\u7684\u533a\u95f4\u4e14\u8981\u4e8c\u5206\u5408\u5e76 \n\tint j = mid + 1;//j\u4ecemid + 1\u5f00\u59cb\uff0c\u5230r\u539f\u56e0\u540c\u4e0a\n\tint t = l;//\u6570\u7ec4b\u7684\u4e0b\u6807\uff0c\u6570\u7ec4b\u5b58\u7684\u662fl ~ r\u533a\u95f4\u6392\u5b8c\u5e8f\u7684\u503c \n\twhile(i <= mid && j <= r)//\u540c\u4e0ai\uff0cj\u7684\u89e3\u91ca \n\t{\n\t\tif(a[i] > a[j])//\u5982\u679c\u524d\u9762\u7684\u5143\u7d20\u6bd4\u540e\u9762\u5927(l ~ mid\u4e2d\u7684\u5143\u7d20 > mid + 1 ~ r\u4e2d\u7684\u5143\u7d20)(\u9006\u5e8f\u5bf9\u51fa\u73b0!!!) \n\t\t{ \n\t\t\tans += mid - i + 1;//\u7531\u4e8el ~ mid\u548cmid + 1 ~ r\u90fd\u662f\u6709\u5e8f\u5e8f\u5217\u6240\u4ee5\u4e00\u65e6l ~ mid\u4e2d\u7684\u5143\u7d20 > mid + 1 ~ r\u4e2d\u7684\u5143\u7d20\u800c\u53c8\u56e0\u4e3a\u7b2ci\u4e2a\u5143\u7d20 < i + 1 ~ mid\u90a3\u4e48i + 1 ~ mid\u7684\u5143\u7d20\u90fd > \u7b2cj\u4e2a\u5143\u7d20\u3002\u6240\u4ee5+\u7684\u5143\u7d20\u4e2a\u6570\u5c31\u662fi ~ mid\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u53camid - i + 1(\u5f52\u5e76\u6392\u5e8f\u91cc\u6ca1\u6709\u8fd9\u53e5\u8bdd\uff0c\u6c42\u9006\u5e8f\u5bf9\u91cc\u6709) \n\t\t\tb[t++] = a[j];//\u7b2cj\u4e2a\u5143\u7d20\u6bd4i ~ mid\u7684\u5143\u7d20\u90fd\u5c0f\uff0c\u90a3\u4e48\u7b2cj\u4e2a\u5143\u7d20\u662f\u76ee\u524d\u6700\u5c0f\u7684\u4e86\uff0c\u5c31\u653e\u8fdbb\u6570\u7ec4\u91cc \n\t\t\t++j;//\u4e0b\u4e00\u4e2a\u5143\u7d20(mid + 1 ~ r\u7684\u5143\u7d20\u5c0f\uff0c\u6240\u4ee5\u52a0\u7b2cj\u4e2a\u5143\u7d20) \n\t\t}\n\t\telse\n\t\t{\n\t\t\tb[t++] = a[i];//i\u5c0f\uff0c\u5b58a[i] \n\t\t\t++i;//\u540c\u7406 \n\t\t}\n\t}\n\twhile(i <= mid)//\u628a\u5269\u7684\u5143\u7d20(\u56e0\u4e3a\u8f83\u5927\u6240\u4ee5\u5728\u4e0a\u9762\u6ca1\u9009) \n\t{\n\t\tb[t++] = a[i];//\u5b58\u8fdb\u53bb \n\t\t++i; \n\t}\n\twhile(j <= r)//\u540c\u7406 \n\t{\n\t\tb[t++] = a[j];\n\t\t++j;\n\t}\n\tfor(register int i = l; i <= r; ++i)//\u628a\u6709\u5e8f\u5e8f\u5217b\u8d4b\u503c\u5230a\u91cc \n\t{\n\t\ta[i] = b[i];\n\t}\n\treturn;\n}\nint main()\n{\n\tscanf(\"%d\", &n);\n\tfor(register int i = 1; i <= n; ++i)\n\t{\n\t\tscanf(\"%d\", &a[i]);\n\t}\n\tmsort(1, n);//\u4e00\u5f00\u59cb\u5e8f\u5217\u662f1 ~ n \n\tprintf(\"%lld\", ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1558964723,
        "uid": 143681,
        "name": "Strong_Jelly",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "## \u524d\u8a00\uff1a\n\u636e\u8bf4\u6570\u636e\u88abchen_zhe_julao\u52a0\u5f3a\u4e86\uff0c\u90a3\u6211\u4e5f\u5c31\u9b54\u6539\u4e00\u756a~~\uff08\u597d\u50cf\u518d\u4e0d\u6539\u8981\u88ab\u55b7\u6b7b\u7684\u6837\u5b50qaq\uff09~~\n\n\u8fd9\u4e2a\u9898\u662f\u673a\u623f\u91cc\u4e00\u4f4d\u5c0f\u4f19\u4f34\u95ee\u6211\u6211\u624d\u505a\u7684\uff0c\u849f\u84bb\u7684\u6211\u521a\u5f00\u59cb\u5c45\u7136\u60f3\u8981\u53cc\u91cd\u5faa\u73af\uff08\u7c7b\u4f3c\u4e8e\u5192\u6ce1\u6392\u5e8f\u7684\u65b9\u6cd5\uff09\u6765\u505a\uff0c\u770b\u5b8c\u6570\u636e\u8303\u56f4\u4e4b\u540e\u5c31\u653e\u5f03\u4e86\uff1b\n\n\u7136\u540e\u60f3\u5230\u4e86\u9006\u5e8f\u5bf9\u662f\u4f7f\u7528\u5f52\u5e76\u6392\u5e8f\u6765\u505a\u7684\uff0c\u6240\u4ee5\u5c31\u81ea\u5df1\u624b\u7801\u4e86\u4e00\u4e2a\u5f52\u5e76\u6392\u5e8f\uff1b\uff1b\u53ef\u80fd\u6709\u7684\u5c0f\u4f19\u4f34\u8fd8\u4e0d\u77e5\u9053\u5f52\u5e76\u6392\u5e8f\u7684\u601d\u60f3\uff0c\u6240\u4ee5\u770b\u4e86\u4e00\u665a\u4e0a\u5f52\u5e76\u6392\u5e8f\u7684\u849f\u84bb\u2014\u2014\u6211\uff0c\u5c31\u6765\u7ed9\u5c0f\u4f19\u4f34\u4eec\u4ecb\u7ecd\u4e00\u4e0b\uff1a\n\n## \u5f52\u5e76\u6392\u5e8f\n\n$nlog(n)$\u7684\u7a33\u5b9a\u7b97\u6cd5\uff08\u53ef\u7528\u4e8e\u6c42\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\uff09\n\n### \u5e94\u7528\u65b9\u6cd5\n\n\u4e8c\u5206\uff08\u6240\u4ee5\u53c8\u53eb\u4e8c\u8def\u5f52\u5e76+\u9012\u5f52\uff1b\n\n### \u4e3a\u4ec0\u4e48\u4f7f\u7528\u9012\u5f52\uff1f\n\n**answer**\uff1a\u8981\u4f7f\u7528\u5f52\u5e76\u6392\u5e8f\u9996\u5148\u5c31\u8981\u5c06\u6570\u636e\u5206\u89e3\uff0c\u4e00\u76f4\u5206\u89e3\u5230\u6bcf\u4e00\u4e2a\u5355\u4f4d\uff0c\u7136\u540e\u5c31\u662f\u8fdb\u884c\u5408\u5e76\u4e86\uff1b\n\n### \u5982\u4f55\u5408\u5e76\uff1f\n\n**answer**\uff1a\u6bd4\u8f83$a_i$\u548c$a_j$\u7684\u5927\u5c0f\uff08\u5176\u4e2d$a_i$\u5c5e\u4e8e\u5de6\u533a\u95f4\uff0c$a_j$\u5c5e\u4e8e\u53f3\u533a\u95f4\uff0c\u5176\u5b9e\u5c31\u662f\u5c06\u5de6\u53f3\u533a\u95f4\u5408\u5e76\u3001\u5e76\u6392\u5e8f\uff09\uff0c\u82e5$a_i<a_j$,\u5219\u5c06$a_i$\u590d\u5236\u5230$r_k$\u4e2d\uff0c\u7136\u540e\u5c06$i$\u548c$k$\u90fd\u52a0$1$\uff0c\u5426\u5219\u5c06$a_j$\u590d\u5236\u5230$r_k$\u4e2d\uff0c\u5c06$j$,$k$\u52a0$1$\uff0c\u6700\u540e\u518d\u5c06$r_k$\u79fb\u52a8\u5230$a_i$\u4e2d\uff0c\u7136\u540e\u7ee7\u7eed\u5408\u5e76\uff1b\n\n## \u6c42\u9006\u5e8f\u5bf9\uff1f\n\n**answer**\uff1a\n\n\u6bd4\u5982\u5c06\u4e0b\u9762\u4e24\u4e2a\u533a\u95f4\u6392\u5e8f\n\n$\\qquad$ $a_i$ $\\quad$ $mid=4$ $\\quad$ $a_j$\n\n$\\quad$ $3\\,4\\,7\\,9$ $\\qquad$ $\\qquad$ $1\\,5\\,8\\,10$\n\n**\u9996\u5148\u5c06\u53f3\u533a\u95f4\u7684 $1$ \u53d6\u51fa\uff0c\u653e\u5230$r_k$\u4e2d\uff0c\u6b64\u65f6 $1$ \u662f\u6bd4\u6bcf\u4e2a$a_i$\u4e2d\u7684\u5143\u7d20\u90fd\u5c0f\uff0c\u4e5f\u5c31\u662f\u8bf4\u6b64\u65f6i\u7684\u6307\u9488\u6307\u5411$a_1$\u7684\u4f4d\u7f6e\uff0c\u6b64\u523b\u5f97\u5230\u7684\u9006\u5e8f\u5bf9\u7684\u6570\u91cf\u4e3a $4$ \uff1b $r_k= 1$ ;**\n\n**\u7136\u540e\u518d\u5c06$a_i$\u548c$a_j$\u6bd4\u8f83\uff08\u76f4\u5230$a_i<a_j$\uff09\uff0c$a_i<a_j$ \u5c06$a_i$\u7684\u5143\u7d20\u653e\u5230$r_k$\u4e2d\uff1b $r_k= 1\\,3\\,4$;**\n\n**\u73b0\u5728$a_j>a_i$, $i$ \u6307\u5411$a_3$\u7684\u4f4d\u7f6e\uff0c\u5c06 $5$ \u653e\u5230$r_k$\u4e2d\uff0c\u5f97\u5230\u7684\u9006\u5e8f\u5bf9\u6570\u91cf\u4e3a $2$ \uff1b $r_k= 1\\,3\\,4\\,5$**\n\n**\u4ee5\u6b64\u7c7b\u63a8\uff0c\u76f4\u5230\u8fdb\u884c\u5b8c\u5f52\u5e76\u6392\u5e8f\uff0c\u6bcf\u6b21\u5408\u5e76\u90fd\u4f1a\u6c42\u51fa\u9006\u5e8f\u5bf9\u7684\u6570\u76ee\uff0c\u5373$mid-i+1$,\u6700\u540e\u6bcf\u6b21\u5c06$ans$\u52a0\u4e0a$mid-i+1$\u5373\u53ef\u5f97\u5230\u6700\u540e\u7684\u7b54\u6848\uff1b**\n\n```cpp\n#include<cstdio>\n#define ll long long \nusing namespace std;\nconst int maxn=5e5+5;\n//\u4e0b\u9762\u5c31\u662f \u5f52\u5e76\u6392\u5e8f\u6c42\u9006\u5e8f\u5bf9 \u7684\u8fc7\u7a0b==\nint a[maxn],r[maxn],n;\nll ans=0;//ans\u4f5c\u4e3a\u5168\u5c40\u53d8\u91cf\uff0c\u8bb0\u5f55\u9006\u5e8f\u5bf9\u7684\u6570\u91cf\uff1b \nvoid msort(int s,int t){\n\tif(s==t) return ;\n\tint mid=s+t>>1;\n\tmsort(s,mid),msort(mid+1,t);//\u2192\u2192\u2192\u2192\u2192\u2192\u2192\u9012\u5f52\u7684\u4f53\u73b0\n\tint i=s,j=mid+1,k=s;\n\twhile(i<=mid&&j<=t)\n\t\tif(a[i]<=a[j]) r[k++]=a[i++];//\u5148\u8d4b\u503c\u518d+1 \n\t\telse r[k++]=a[j++],ans+=(ll)mid-i+1;//\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e0a\u9762\u7684\u6570\u5b66\u5f52\u7eb3\u5427qaq\uff1b\n\twhile(i<=mid) r[k]=a[i],k++,i++;\n\twhile(j<=t) r[k]=a[j],k++,j++;\n\tfor(int i=s;i<=t;i++) a[i]=r[i];//\u590d\u5236\u56dea\u6570\u7ec4\u4e2d \n}\ninline int read(){//\u5feb\u8bfb\n\tchar ch=getchar();\n\tint x=0,f=1;\n\twhile(ch<'0'||ch>'9'){if(ch=='-') f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') x=x*10+(ch^48),ch=getchar();\n\treturn x*f;\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++) a[i]=read();\n\tmsort(1,n);//\u4ece1\u5230n\u5c06a\u6570\u7ec4\u6392\u5e8f;\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1510144406,
        "uid": 49618,
        "name": "Rising_Date",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u597d\u50cf\u5927\u90e8\u5206\u4eba\u90fd\u662f\u5229\u7528\u5f52\u5e76\u6392\u5e8f\u505a\u7684\n\n\n\u90a3\u4e48\u6211\u8bb2\u4e00\u4e0b\u6811\u72b6\u6570\u7ec4\u7684\u9006\u5e8f\u5bf9\u5427\n\n\n------------\n\n\n\u6b63\u5e38\u7684\u66b4\u529b\u601d\u8def\u6211\u5c31\u4e0d\u8bb2\u4e86\n\n\n\u53e6\u7c7b\u7684\u66b4\u529b\u601d\u8def\uff0820\u5206\uff09\uff1a\u6876\u6392\u601d\u60f3\uff0c\u6bcf\u62ff\u5230\u4e00\u4e2a\u503c\u653e\u5165\u6876\u4e2d\uff0c\u7edf\u8ba1\u6240\u6709\u5927\u4e8e\u8fd9\u4e2a\u6570\u7684\u6570\u91cf\uff0c\u7136\u540e\u7d2f\u52a0\n\n\n\u4f18\u5316\uff1a\u79bb\u6563\u5316\uff0c\u56e0\u4e3an<=40000\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u5b58\u90a3\u4e2a\u6570\u5728\u6570\u7ec4\u4e2d\u662f\u7b2c\u51e0\u5927\u5c31\u597d\u4e86\u3002\uff08\u7136\u800c\u5e76\u6ca1\u6709\u4ec0\u4e48\u7528\uff09\u79bb\u6563\u4ee3\u7801\u7247\u6bb5:\n\n```cpp\nbool cmp1(const int &x,const int &y)\n{\n    return b[x]>b[y];  //\u5bf9\u7f16\u53f7\u8fdb\u884c\u6392\u5e8f\n}\nint main()\n{\n    int ans=0;\n    scanf(\"%d\",&n);\n    for(register int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&b[i]);  //\u8bfb\u5165\n        a[i]=i;//\u987a\u4fbf\u521d\u59cb\u5316\u4e00\u4e0b\n    }\n      sort(a+1,a+n+1,cmp1);  //\u6392\u5e8f\n    //\u8fd9\u91cc\u7565\u8fc7\u63a5\u4e0b\u6765\u7684\u90e8\u5206\uff0ca[]\u5c31\u662f\u6211\u4eec\u8981\u7528\u7684\"\u7b2c\u51e0\u5927\"\u6570\u7ec4\n}\n```\n\n------------\n\n\n\u6b63\u89e3\uff08100\u5206 56ms 2MB\uff09\uff1a\u6811\u72b6\u6570\u7ec4\n\n\n\u7531\u66b4\u529b\u601d\u8def2\uff0c\u6211\u4eec\u53d1\u73b0\u9700\u8981\u4e0d\u65ad\u7684\u6c42\u548c\u548c\u4fee\u6539\uff0c\u6240\u4ee5\u5f15\u51fa\u6811\u72b6\u6570\u7ec4\uff0c\u5efa\u8bae\u5927\u5bb6\u5728\u624b\u4e0a\u6a21\u62df\u4e00\u904d\n\n\n\u5982\u6837\u4f8b\uff1a\n\n\u8bbeb[]\u4e3a\u8bfb\u5165\u7684\u6570\u7ec4\uff0ca[]\u4e3a\u8981\u79bb\u6563\u5316\u540e\u7684\u6570\u7ec4\uff0cC[]\u4e3a\u6811\u72b6\u6570\u7ec4\uff0cA[]\u4e3a\u6811\u72b6\u6570\u7ec4\u5bf9\u5e94\u5bf9\u6570\u7ec4\uff08\u88ab\u6c42\u548c\u7684\u6570\u7ec4\uff09\uff0csum(x)\u4e3a\u6c42$\\sum_{i=1}^{x}A_i$\uff08\u524dA\u6570\u7ec4\u4e2d\u524dx\u4e2a\u7684\u548c\uff09\n\n\n6\n\n5 4 2 6 3 1\n\n\n1)\u8fdb\u884c\u79bb\u6563\u5316\u64cd\u4f5c\uff0c\u5904\u7406\u6570\u636e\uff08\u8fd9\u91cc\u50a8\u5b58\u7684\u662f\u5728\u6570\u7ec4\u4e2d\u662f\u7b2c\u51e0\u5927\u7684\uff09\uff1aa[]={2,3,5,1,4,6}\n\n\n2)\u7136\u540e\u52a0\u5165 $a_1=2$ ans=0\uff0c\u76ee\u524d\u6570\u7ec4\u4e2d\u5c0f\u4e8ea1\u7684\u5168\u90e8\u53ef\u4ee5\u548ca1\u7ec4\u6210\u9006\u5e8f\u5bf9\n\n\n![](https://cdn.luogu.com.cn/upload/pic/13500.png)\n\n3)\u52a0\u5165 $a_2=3$ ans=1 \u540c\u4e0a\n\n\n![](https://cdn.luogu.com.cn/upload/pic/13501.png)\n\n4)\u52a0\u5165 $a_3=5$ ans=3\n\n\n![](https://cdn.luogu.com.cn/upload/pic/13502.png)\n\n5)\u52a0\u5165 $a_4=1$ ans=3\n\n\n![](https://cdn.luogu.com.cn/upload/pic/13503.png)\n\n6)\u52a0\u5165 $a_5=4$ ans=6\n\n\n![](https://cdn.luogu.com.cn/upload/pic/13504.png)\n\n6)\u52a0\u5165 $a_6=6$ ans=11\n\n\n![](https://cdn.luogu.com.cn/upload/pic/13505.png)\n\n8)\u8f93\u51faans\n\n\n------------\n\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<algorithm>\n#include<cstdio>\nusing namespace std;\nint n,m,c[40005]={0},a[40005]={0},b[40005]={0};  //\u5b9a\u4e49\u6570\u7ec4\uff0cb[]\u4e3a\u8bfb\u5165\u7684\u6570\u7ec4\uff0ca[]\u4e3a\u8981\u79bb\u6563\u5316\u540e\u7684\u6570\u7ec4\uff0cC[]\u4e3a\u6811\u72b6\u6570\u7ec4\ninline void Add(register int x)  //\u6811\u72b6\u6570\u7ec4\u52a0\u5165\n{\n    for(;x<=n;x+=(x&-x))\n        c[x]++;  //\u56e0\u4e3a\u8fd9\u91cc\u53ea\u9700\u89811\uff0c\u6240\u4ee5\u6211\u5c31\u5199\u51fac[x]++\u4e86\n}\ninline int Sum(register int x)  //\u6811\u72b6\u6570\u7ec4\u6c42\u548c\uff0c\u540c\u4e0a\u9762\u7684sum(x)\n{\n    register int s=0;  //\u8ba1\u6570\u7684\u53d8\u91cf\n    for(;x>0;x-=(x&-x))  //\u7d2f\u8ba1\n        s+=c[x];\n    return s;  //\u8fd4\u56de\u7ed3\u679c\n}\nbool cmp1(const int &x,const int &y)  //\u79bb\u6563\u5316\u9700\u8981\u7528\u7684\uff0c\u4e0a\u9762\u6709\u8bb2\n{\n    return b[x]>b[y];\n}\nint main()\n{\n    int ans=0;  //ans\u4e3a\u6700\u540e\u7684\u7ed3\u679c\n    scanf(\"%d\",&n);  //\u8bfb\u5165n\n    for(register int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&b[i]);  //\u8bfb\u5165\n        a[i]=i;  //\u987a\u4fbf\u521d\u59cb\u5316\u4e00\u4e0ba\u6570\u7ec4\n    }\n    sort(a+1,a+n+1,cmp1);  //\u7ed9a\u6570\u7ec4\u6392\u5e8f\uff0c\u8fbe\u5230\u6700\u7ec8\u7684\u6548\u679c\n    for(register int i=1;i<=n;i++)\n    {\n        Add(a[i]);  //\u4f9d\u6b21\u52a0\u5165\u6811\u72b6\u6570\u7ec4\n        ans+=Sum(a[i]-1);  //\u8ba1\u7b97\u7ed3\u679c\u5e76\u7d2f\u8ba1\n    }\n    printf(\"%d\",ans);  //\u8f93\u51faans\n    return 0;  //\u8fd4\u56de\n}\n\n```",
        "postTime": 1516768180,
        "uid": 34238,
        "name": "zhylj",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "#### \u8bf7\u5bf9\u6bcf\u4e00\u4e2a\u4f60\u6240\u5b66\u7684\u77e5\u8bc6\u4fdd\u6301\u4e00\u79cd\u5c0a\u656c\u7684\u6001\u5ea6\uff0c\u5343\u4e07\u4e0d\u8981\u8bf4\u4e00\u4e2a\u4e1c\u897f\u7b80\u5355\uff0c\u662f\u77e5\u8bc6\u603b\u4f1a\u6709\u4ed6\u72ec\u7279\u7684\u4ef7\u503c\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u6211\u8981\u575a\u6301\u5199\u535a\u5ba2\u7684\u4e00\u4e2a\u539f\u56e0\uff01\uff01\uff01\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P1908)\n\n\u4e0d\u5f97\u4e0d\u8bf4\u4eca\u5929\u665a\u4e0a\u542c\u4e86\u4e00\u4e0b\u5927\u4f6c\u8bb2\u89e3\u7684\u9006\u5e8f\u5bf9\uff0c\u786e\u5b9e\u611f\u89c9\u8fd9\u4e2a\u4e1c\u897f\u975e\u5e38\u7684\u795e\u5947\uff0c\u56e0\u4e3a\u6211\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u5f52\u5e76\u6392\u5e8f\u90a3\u4e48\u7b80\u5355\u7684\u4e1c\u897f\uff0c\u5b9e\u9645\u4e0a\u80cc\u540e\u8fd8\u5927\u6709\u5b66\u95ee\uff0c\u867d\u7136\u672c\u4eba\u5e76\u6ca1\u6709\u5b66\u4f1a\u8fd9\u9053\u9898\u7684\u57fa\u672c\u89e3\u51b3\u65b9\u5f0f\uff0c\u4f46\u662f\u8ddf\u7740\u5927\u4f6c\u6df7\u603b\u8fd8\u662f\u4f1a\u5b66\u5230\u4e00\u4e9b\u4e1c\u897f\u7684\uff0c\u90a3\u4e48\u4eca\u5929\u6211\u5c31\u6765\u4e3a\u5927\u5bb6\u4ecb\u7ecd\u4e00\u4e0b**\u79bb\u6563\u5316\u4e0e\u52a8\u6001\u5f00\u70b9**\n\n\u5728\u5f00\u59cb\u4e4b\u524d\u8fd8\u662f\u5148\u5141\u8bb8\u6211\u5148\u4ecb\u7ecd\u4e00\u4e0b\u8fd9\u9053\u9898\u5927\u81f4\u7684\u89e3\u9898\u601d\u8def\uff0c\u65b9\u4fbf\u5f15\u5165\u6211\u4eec\u4eca\u5929\u7684\u4e3b\u9898\u3002\n\n\u9996\u5148\u6734\u7d20\u7b97\u6cd5\u662f\u8fd9\u6837\u7684\uff0c\u6211\u4eec\u5148\u4ece\u7b2c\u4e00\u4e2a\u6570\u5f00\u59cb\u4e00\u76f4\u5230\u6700\u540e\u4e00\u4e2a\u6570\uff0c\u7136\u540e\u6bcf\u6b21\u5faa\u73af\u5b83\u524d\u9762\u7684\u6570\uff0c\u7136\u540e\u53d1\u73b0\u6bd4\u5b83\u5927\u7684\u5c31\u8bb0\u5f55\u4e0b\u6765\uff08cnt++\uff09\uff0c\u7136\u540e\u6211\u4eec\u5c31\u4f1a\u53d1\u73b0\u4f1a\u975e\u5e38\u7684\u7206\u70b8\uff0c\u56e0\u4e3a\u8fd9\u6837\u5b50\u7684\u8bdd\uff0c\u590d\u6742\u5ea6O(n^2)\uff0c40000^2\u2026\u2026\u6211\u4e0d\u5728\u591a\u8bf4\u4e86\u3002\n\n\u4e0b\u9762\u8bf4\u4e00\u8bf4**\u6bd4\u8f83**\u6b63\u5e38\u7684\u505a\u6cd5\uff0c\u76f8\u4fe1\u5927\u5bb6\u90fd\u5b66\u8fc7\u6876\u6392\u5e8f\u5427\uff01\u8fd9\u9053\u9898\u6bd4\u8f83\u6b63\u5e38\u7684\u505a\u6cd5\u662f\u8fd9\u6837\u7684\uff0c\u6211\u4eec\u8fb9\u8bfb\u8fb9\u5904\u7406\uff0c\u4e0d\u5bf9\u4e0d\u5bf9\uff0c\u5e94\u8be5\u662f\u6211\u4eec\u5148\u505a\u597d\u4e86**\u6392\u5e8f**\u540e\u518d\u6765\u8fdb\u884c\u4e00\u4e2a\u4e00\u4e2a\u5904\u7406\uff0c\u9996\u5148\u6211\u4eec\u641e\u4e00\u4e2a**\u7ebf\u6bb5\u6811**\uff0c\u7136\u540e\u6811\u4e2d\u653e\u7684\u5168\u90e8\u90fd\u662f\u6876\uff0c\u662f\u7684\uff0c\u4f60\u6ca1\u6709\u770b\u9519\uff0c\u5c31\u662f\u6876\uff0c\u7edf\u8ba1\u8fd9\u4e2a\u6570\u4ee5\u6765\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\uff0c\u90a3\u4e48\u4f60\u53ef\u80fd\u5c31\u4f1a\u6709\u6240\u611f\u89c9\u4e86\uff0c\u8fd9\u9053\u9898\u4e0d\u5c31\u662f\uff0c\u6bcf\u6b21\u8fdb\u884c\u4e00\u6b21\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u6c42\u548c\u7684\u7ebf\u6bb5\u6811\u5417?\u5bf9\u7684\uff0c\u4f60\u80fd\u60f3\u5230\u8fd9\u4e00\u70b9\uff0c\u6211\u5fe0\u5fc3\u795d\u8d3a\u4f60\uff01\u7684\u786e\u662f\u8fd9\u6837\uff0c\u6211\u4eec\u6bcf\u4e00\u6b21\u52a0\u5165\u4e00\u4e2a\u6570\uff0c\u7136\u540e\u5bf9\u4ed6**\u540e**\u9762\u533a\u95f4\u8fdb\u884c\u6c42\u503c\uff0c\u5c31\u6c42\u5230\u5b83\u7684\u9006\u5e8f\u5bf9\u4e86\u3002\u5bf9\u5bf9\u5bf9\uff0c\u4f46\u662f\u4f60\u5982\u679c\u80fd\u591f\u60f3\u5230\u535a\u4e3b\u60f3\u5230\u8fd9\u4e2a\u65b9\u6cd5\u7684\u4e00\u5b9a\u662f\u4e00\u4e2aSB\uff0c\u90a3\u4e48\u4f60\u5c31\u66f4\u5389\u5bb3\u4e86\u3002\u6570\u636e\u8303\u56f4\u4e0d\u662f1e9\u5417\uff01\uff01\uff01\u6211\u9760\uff0c1e9\u4e2a\u6876\uff0c\u76f4\u63a5\u6811\u90fd\u5f00\u70b8\uff01\u5bf9\u554a\u5bf9\u554a\uff0c\u6240\u4ee5\u8fd9\u4e2a\u65f6\u5019\uff0c**\u79bb\u6563\u5316\u5927\u6cd5\u8981\u51fa\u573a\u4e86\u3002**\n\n### \u79bb\u6563\u5316\uff08\u674e\u4e09\u82b1\uff09\n\n\u5c0f\u84dd\u5c45\u7136\u53ef\u4ee5\u628a\u79bb\u6563\u5316\u8bfb\u6210\u90a3\u4e2a\uff0c\u6211\u89c9\u5f97\u5b83\u975e\u5e38\u7684\u5389\u5bb3\uff01\uff01\uff01\uff01\uff01\n\n\u8bdd\u4e0d\u591a\u8bf4\uff0c\u5f00\u59cb\u6211\u4eec\u7684\u79bb\u6563\u5316\u5427\uff01\u5176\u5b9e\u5927\u5bb6\u5b8c\u5168\u6ca1\u6709\u5fc5\u8981\u53bb\u770b\u7f51\u4e0a\u90a3\u4e9b\u4e1c\u897f\uff0c\u7279\u522b\u662f\u767e\u5ea6\u767e\u79d1\uff0c\u7b80\u76f4\u6709\u6bd2\uff0c\u6211\u4eec\u73b0\u5728\u8fd8\u7528\u4e0d\u5230\u90a3\u4e48\u725b\u903c\u7684\u79bb\u6563\u5316\uff0c\u6240\u4ee5\u8fd9\u91cc\u4ecb\u7ecd\u7684\u79bb\u6563\u5316\u662f\u975e\u5e38\u7b80\u5355\u7684\u4e00\u79cd\u3002\n\n\u6240\u8c13\u79bb\u6563\u5316\uff0c\u5c31\u662f\u8bf4\u4f60\u53d1\u73b0\u4e86\u8fd9\u4e2a\u9006\u5e8f\u5bf9\u8fd9\u9053\u9898\u554a\uff0c\u975e\u5e38\u7684\u8ba8\u538c\uff0c\u6570\u636e\u8fd9\u4e48\u5927\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4e0d\u53ef\u4ee5\u9002\u5f53\u7684\u628a\u6570\u636e\u8303\u56f4\u7f29\u5c0f\u4e00\u70b9\u5462\uff1f\u5176\u5b9e\u662f\u53ef\u4ee5\u7684\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u9006\u5e8f\u5bf9\u8fd9\u9053\u9898\u6709\u4e00\u4e2a\u7279\u70b9\uff0c\u5c31\u662f\u6bd4\u5982\u8bf4\u6570\u636e2 1\u8fd8\u662f\u6570\u636e 203903123 1\u5b83\u90fd\u662f\u4e00\u4e2a\u9006\u5e8f\u5bf9\uff0c\u524d\u9762\u7684\u6570\u90fd\u662f\u6bd41\u5927\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u7528\u7ba1\u4ed6\u6bd41\u5927\u591a\u5c11\uff0c\u53ea\u8981\u6bd41\u5927\u5c31\u53ef\u4ee5\u4e86\uff0c\u4f46\u662f\u4e3a\u6211\u4eec\u53ef\u4ee5\u660e\u663e\u611f\u89c9\u5230\u6211\u4eec\u8981\u5bf9\u540e\u9762\u7684\u6570\u636e\u5904\u7406\u4e00\u4e0b\uff0c\u5426\u5219\u5c31\u8981\u5f00\u7206\u6811\uff0c\u5728\u8fd9\u91cc\u6211\u4eec\u53ea\u9700\u8981\u628a\u5b83\u5904\u7406\u62102\u5c31\u53ef\u4ee5\u8fbe\u5230\u76f8\u540c\u7684\u6548\u679c\u3002\n\n\u4e3e\u4f8b\u4e00\u4e0b\uff1a\n\n    2 33423434 437834 25345 373 35  //\u5c31\u53ef\u4ee5\u88ab\u6362\u6210\n    1    6       5      4    3   2   //\u6548\u679c\u4e00\u6837\n\n\u4f46\u662f\u4f60\u53ef\u80fd\u4f1a\u8bf4\u54ce\u5466\uff0c\u6211\u8fd8\u6392\u4e2a\u5e8f\uff0c\u7f16\u4e2a\u53f7\uff0c\u90a3\u4e2a\u65f6\u5019\u6211\u600e\u4e48\u77e5\u9053\u539f\u6765\u5b83\u662f\u4ec0\u4e48\u6837\u5b50\u7684\u554a\uff1f\n\n\u7ed3\u6784\u4f53\u5927\u6cd5\u597d\uff01\uff01\uff01\n\n\u79bb\u6563\u5316\u57fa\u672c\u64cd\u4f5c\u5982\u4e0b\uff1a\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nstruct sd{\n\tint val,loc;//val\u662f\u503c loc\u662f\u5f53\u524d\u70b9\u7684\u4f4d\u7f6e \n}x[100005]; \nbool cmp(sd a,sd b)\n{\n\tif(a.val<b.val)\n\treturn true;\n}\nint discretization[100005];//\u8fd9\u5355\u8bcd\u771f\u591f\u957f \nint main()\n{\n\tstd::ios::sync_with_stdio(false);\n\tint n;\n\tcin>>n;\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tcin>>x[i].val;\n\t\tx[i].loc=i;\n\t}\n\tsort(x+1,x+n+1,cmp);\n\tint cnt=0; \n\tx[0].val=891881292;//important!\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tif(x[i-1].val==x[i].val)discretization[x[i].loc]=cnt;\n\t\telse \n\t\t{\n\t\t\tcnt++;\n\t\t\tdiscretization[x[i].loc]=cnt;\n\t\t}\n\t} \n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tcout<<discretization[i]<<\" \";\n\t}\n\treturn 0;\n} \n```\n\u6253important\u7684\u5730\u65b9\u4e00\u5b9a\u8981\u6ce8\u610f\uff0c\u5426\u5219\u5c31\u8981\u51fa\u4e8b\u60c5\uff01\uff01\uff01\u4f60\u60f3\u4e00\u60f3\uff0c\u5982\u679c\u6211\u4eec\u5462\u7b2c\u4e00\u4e2a\u6570\u4e3a0\u90a3\u4e48\u90a3\u4e2acnt\u6807\u8bb0\u5c31\u4e0d\u4f1a++\u4e86\uff01\uff01\uff01\uff0c\u6050\u6016\uff01\uff01\uff01???\n\n\u6240\u4ee5\u8bf4\u6211\u4eec\u79bb\u6563\u5316\u90e8\u5206\u5c31\u8bb2\u5b8c\u4e86\uff0c\u76f8\u4fe1\u8fd9\u9053\u9898\u4f60\u4e5f\u5e94\u8be5\u53ef\u4ee5A\u4e86\u3002\n\n\u6807\u7a0b\u4ee3\u7801\uff1a\n\n```\n#include<bits/stdc++.h>\n#define ls(k) a[k].ch[0]\n#define rs(k) a[k].ch[1]\nusing namespace std;\nstruct node { \n\tint l,r,cnt,ch[2];\n};node a[510000];\nint cnt=1;\nstruct num { \n\tint val;\n\tint loc;\n\tbool operator < (const num &a) const { \n\t\treturn val<a.val;\n\t} \n};\nnum lisanhua[51000];\nint yingshe[51000];\nint n;\nvoid init() { \n\tint cnt=0;\n\tcin>>n;\n\tfor(int i=1;i<=n;++i) { \n\t\tcin>>lisanhua[i].val;\n\t\tlisanhua[i].loc=i;\n\t} \n\tsort(lisanhua+1,lisanhua+n+1);\n\tlisanhua[0].val=19260817;\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tif(lisanhua[i].val!=lisanhua[i-1].val) yingshe[lisanhua[i].loc]=cnt+1,++cnt;\n\t\telse yingshe[lisanhua[i].loc]=cnt;\n\t}\n} \n\nvoid update(int k) { \n\ta[k].cnt=a[ls(k)].cnt+a[rs(k)].cnt;\n} \n\nvoid build(int k,int l,int r) { \n\ta[k].l=l;a[k].r=r;\n\tif(l==r) return;\n\tint mid=l+r;mid/=2;\n\tls(k)=cnt+1,++cnt,build(cnt,l,mid);\n\trs(k)=cnt+1,++cnt,build(cnt,mid+1,r);\n} \n\nvoid ins(int k,int val) { \n\tif(a[k].l==a[k].r&&a[k].l==val) { \n\t\ta[k].cnt++;\n\t\treturn;\n\t} \n\tint mid=a[k].l+a[k].r;mid/=2;\n\tif(val<=mid) ins(ls(k),val);\n\telse ins(rs(k),val);\n\tupdate(k);\n} \n\nint query(int k,int l,int r) { \n\tif(a[k].l==l&&a[k].r==r) { \n\t\treturn a[k].cnt;\n\t} \n\tint mid=a[k].l+a[k].r;mid/=2;\n\tif(r<=mid) return query(ls(k),l,r);\n\telse if(l>mid) return query(rs(k),l,r);\n\telse return query(ls(k),l,mid)+query(rs(k),mid+1,r);\n} \n\nvoid prit(int k) { \n\tprintf(\"%d %d %d %d %d %d\\n\",k,ls(k),rs(k),a[k].l,a[k].r,a[k].cnt);\n\tif(ls(k)!=0) prit(ls(k));\n\tif(rs(k)!=0) prit(rs(k));\n} \n\nint main() { \n\tbuild(1,0,51000);\n\tinit();\n\tlong long ans=0;\n\tfor(int i=1;i<=n;++i) { \n\t\tins(1,yingshe[i]);\n\t\tans+=query(1,yingshe[i]+1,n+1);\n\t} \n\tcout<<ans;\n\treturn 0;\n} \n```\n#### \u6280\u5de7\uff1a\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u4e86\u5148\u5efa\u6811\uff08\u7a7a\u6811\uff09\u7136\u540e\u5728modify\u7684\u7684\u5199\u6cd5\uff0c\u5e0c\u671b\u5927\u5bb6\u80fd\u591f\u7406\u89e3\u4e00\u4e0b\uff01\n\n\u597d\u4e86\uff0c\u5c31\u8fd9\u6837\u4e86\uff0c\u4f46\u662f\u5982\u679c\u54ea\u4e00\u5929\u4f60\u5c31\u662f\u8bf4\uff0c\u54ce\u5440\u8fd9\u4e2a\u79bb\u6563\u5316\u5199\u7740\u592a\u8ba9\u6211\u70e6\u607c\u4e86\uff0c\u90a3\u4e48\u6709\u6ca1\u6709\u53e6\u5916\u4e00\u79cd\u5199\u6cd5\u5462\uff1f\u5f88\u660e\u663e\u662f\u6709\u7684\uff0c\u90a3\u4e48\u5c31\u662f\u6211\u4eec\u7684**\u52a8\u6001\u5f00\u70b9**\u4e86\uff0c\u8fd9\u6837\u5b50\u5199\u6709\u4e00\u4e2a\u597d\u5904\uff0c\u5c31\u662f\u6211\u4eec\u4e0d\u7528\u5199Buildtree\u5566\uff01\u662f\u4e0d\u662f\u542c\u8d77\u6765\u5f88\u723d\u5462\uff1f\u6211\u4eec\u6bcf\u6b21\u5728push\u7684\u65f6\u5019\u5c31\u987a\u4fbf\u628a\u5b83\u7684\u513f\u5b50\u5973\u513f\u90fd\u5efa\u4e86\uff0c\u5177\u4f53\u8fc7\u7a0b\u4e0d\u5728\u8d58\u8ff0\uff0c\u8fd9\u91cc\u5c31\u8d34\u4e00\u6bb5\u52a8\u6001\u5f00\u70b9\u5efa\u6811\u7684\u4ee3\u7801\u8fc7\u7a0b\uff0c\u5176\u5b9e\u5927\u5bb6\u53ea\u8981\u8ba4\u771f\u7684\u628a\u4ee3\u7801\u770b\u61c2\u4e86\uff0c\u90a3\u4e48\u4f60\u5c31\u5df2\u7ecf\u638c\u63e1\u5230\u4e86\u52a8\u6001\u5f00\u70b9\u5efa\u6811\u7684\u7cbe\u9ad3\u4e86\uff08**\u7528\u4e86\u52a8\u6001\u5f00\u70b9\u5c31\u53ef\u4ee5\u4e0d\u7528\u79bb\u6563\u5316\u4e86\u54df\uff01\uff01**\uff09\uff01\uff01\uff01\uff01\uff01\uff01\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```\nvoid modify(int k,int val)\n{\n\tif(node[k].l==node[k].r&&node[k].l==val)\n\t{\n\t\tnode[k].cnt++;\n\t\treturn;\n\t}\n\tint mid=node[k].l+node[k].r;mid/=2;\n\tif(node[k].son[0]==0)\n\t{\n\t\tcnt++;\n\t\tnode[k].son[0]=cnt;\n\t\tnode[cnt].l=node[k].l;node[cnt].r=mid;\n\t}\n\tif(node[k].son[1]==0)\n\t{\n\t\tcnt++;\n\t\tnode[k].son[1]=cnt;\n\t\tnode[cnt].l=mid+1;node[cnt].r=node[k].r;\n\t}\n\tif(val>mid)\n\t{\n\t\tmodify(node[k].son[1],val);\n\t}\n\telse\n\t{\n\t\tmodify(node[k].son[0],val);\n\t}\n\tupdate(k);\n}\n\n```\n\u8fd9\u53ea\u662f\u5f81\u7a0b\u7684\u5f00\u59cb\uff0c\u7ebf\u6bb5\u6811\u7684\u7cbe\u9ad3\u8fdc\u8fdc\u4e0d\u6b62\u8fd9\u4e9b\uff01\uff01\uff01\n\n\u6807\u7a0b\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=100000;\nstruct sd{\n\tint son[2];\n\tlong long l,r,cnt;\n}node[N];\nint n;\nint cnt=1;\nlong long ans;\nvoid update(int k)\n{\n\tnode[k].cnt=node[node[k].son[0]].cnt+node[node[k].son[1]].cnt;\n}\nvoid modify(int k,int val)\n{\n\tif(node[k].l==node[k].r&&node[k].l==val)\n\t{\n\t\tnode[k].cnt++;\n\t\treturn;\n\t}\n\tint mid=node[k].l+node[k].r;mid/=2;\n\tif(node[k].son[0]==0)\n\t{\n\t\tcnt++;\n\t\tnode[k].son[0]=cnt;\n\t\tnode[cnt].l=node[k].l;node[cnt].r=mid;\n\t}\n\tif(node[k].son[1]==0)\n\t{\n\t\tcnt++;\n\t\tnode[k].son[1]=cnt;\n\t\tnode[cnt].l=mid+1;node[cnt].r=node[k].r;\n\t}\n\tif(val>mid)\n\t{\n\t\tmodify(node[k].son[1],val);\n\t}\n\telse\n\t{\n\t\tmodify(node[k].son[0],val);\n\t}\n\tupdate(k);\n}\nlong long query(int k,int ql,int qr)\n{\n\tif(k==0) return 0;//very very important\uff01\uff01\uff01\n\tif(node[k].l==ql&&node[k].r==qr)\n\t{\n\t\treturn node[k].cnt;\n\t}\n\telse\n\t{\n\t\tint mid=(node[k].l+node[k].r)/2;\n\t\tif(qr<=mid) return query(node[k].son[0],ql,qr);\n\t\telse if(ql>mid) return query(node[k].son[1],ql,qr);\n\t\telse\n\t\t{\n\t\t\treturn query(node[k].son[0],ql,mid)+query(node[k].son[1],mid+1,qr);\n\t\t}\n\t}\n}\nint main()\n{\n\tstd::ios::sync_with_stdio(false);\n\tnode[1].l=1; node[1].r=1e9+7;\n\tint n,sth;\n\tcin>>n;\n\tans=0;\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tcin>>sth;\n\t\tmodify(1,sth);\n\t\tans+=query(1,sth+1,1e9+7);\n\t}\n\tcout<<ans<<endl;\n}\n```\n\n**\u5173\u4e8e\u52a8\u6001\u5f00\u70b9\u7684\u6ce8\u610f\u4e8b\u9879\uff0c\u6211\u540e\u9762\u5728\u5199\u5427\uff01\uff01\uff01**\n\n\u4e8e\u662f\u6211\u5c65\u884c\u4e86\u8bfa\u8a00\uff0c\u4e0b\u9762\u5c31\u662f\u52a8\u6001\u5f00\u70b9\u6700\u4e3a\u91cd\u8981\u7684\u4e00\u4e2a\u6ce8\u610f\u4e8b\u9879\uff01\uff01\n\n\u5927\u5bb6\u8ba4\u771f\u7684\u9605\u8bfb\u4e00\u4e0b\u4ee3\u7801\uff0c\u53ef\u4ee5\u53d1\u73b0\u6211\u5728\u4ee3\u7801\u4e2d\u52a0\u5165\u4e86\u4e00\u4e2avery very important \u7684\u6807\u8bb0\uff0c\u8fd9\u91cc\u4e00\u5b9a\u8981\u5199\u8fd9\u53e5\u8bdd\uff0c\u4e3a\u4ec0\u4e48\u5462\uff1f\u56e0\u4e3a\u6211\u4eec\u52a8\u6001\u5f00\u70b9\uff0c\u5f00\u5230\u53f6\u8282\u70b9\u7684\u65f6\u5019\u4e00\u5b9a\u4f1a\u9047\u5230\u4e00\u79cd\u60c5\u51b5\uff0c\u5c31\u662f\u53f6\u8282\u70b9\u5e76\u6ca1\u6709\u513f\u5b50\uff0c\u90a3\u4e48\u4ed6\u7684\u513f\u5b50\u7f16\u53f7\u5c31\u662f0\uff0c\u6240\u4ee5\u5728\u4e0b\u4e00\u6b21\u9012\u5f52\u4e2d\u5c31\u4f1a\u9012\u5f52\u52300\u53f7\u8282\u70b9\uff0c\u7136\u540e0\u53f7\u4ec0\u4e48\u53c2\u6570\u90fd\u662f0\uff0c\u4e8e\u662f\u7a0b\u5e8f\u5f00\u59cb\u539f\u5730\u8f6c\u5708\uff0c\u7136\u540e\u5c31\u7206\u70b8\u4e86\uff01\uff01\uff01\uff01\u5176\u5b9e\u8fd9\u9053\u9898\u5199\u4e0d\u5199\u90fd\u53ef\u4ee5\uff0c\u4f46\u662f\u8fd9\u91cc\u53ea\u662f\u505a\u4e00\u4e2a\u5c0f\u5c0f\u7684\u63d0\u9192\uff01\uff01\uff01\n\n\u8fd9\u53ea\u662f\u5f81\u7a0b\u7684\u5f00\u59cb\uff0c\u7ebf\u6bb5\u6811\u7684\u7cbe\u9ad3\u8fdc\u8fdc\u4e0d\u6b62\u8fd9\u4e9b\uff01\uff01\uff01\nBy njc",
        "postTime": 1521819595,
        "uid": 57884,
        "name": "Mudrob\u00f8t",
        "ccfLevel": 0,
        "title": "\u4ece\u9006\u5e8f\u5bf9\u5f00\u59cb\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7"
    },
    {
        "content": "### \u7531\u4e8e\u672c\u4eba\u592a\u5f31\u4e86\uff0c\u60f3\u4e0d\u5230\u6b63\u89e3\uff0c\u4e8e\u662f\u53ea\u80fd\u7528\u7ebf\u6bb5\u6811\u66b4\u529bQWQ\n### \u9644\u4e0a\u672c\u849f\u84bb\u4e09\u5927\u7279\u70b9\uff08\u96fe\uff09\uff1a\n- ### \u5199\u6700\u957f\u7684\u4ee3\u7801\n- ### \u8dd1\u6700\u957f\u7684\u65f6\u95f4\n- ### \u5360\u6700\u5927\u7684\u5185\u5b58\n\n\u597d\u4e86\u56de\u5f52\u6b63\u9898\uff0c\u4ece\u9898\u610f\u6765\u8bf4\uff0c\u5c31\u662f\u8ba1\u7b97\u5728\u539f\u5e8f\u5217\u4e2d\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570\u7684\u9760\u53f3\u4fa7\u4e14\u5c0f\u4e8e\u5b83\u7684\u6570\u7684\u4e2a\u6570\u4e4b\u548c\uff08\u8bb0\u5f97\u5f00long long\uff09\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u5c06\u539f\u5e8f\u5217\u6392\u5e8f\uff0c\u6bcf\u6b21\u9009\u53d6\u6700\u5c0f\u503c\u53ca\u5176\u4e0b\u6807\uff0c\u5c06\u7ebf\u6bb5\u6811\u4e2d0\u5230\u4e0b\u6807\u51cf1\uff0c\u7684\u533a\u95f4\u52a01\u3002\u5e76\u5c06\u7b54\u6848\u52a0\u4e0a\u7ebf\u6bb5\u6811\u4e2d\u4e0b\u6807\u6240\u4ee3\u8868\u7684\u503c\u3002\n\n\u5bf9\u4e8e\u6837\u4f8b\u8fdb\u884c\u6b64\u64cd\u4f5c\u5982\u56fe\uff1a\n\n![\u6709\u70b9\u4e11QWQ](http://chuantu.xyz/t6/710/1578374430x3703728804.png)\n\n### \u597d\u4e86\u4e0b\u9762\uff0c\u8d34\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define maxn 500005\nusing namespace std;\nint n;\nlong long ans;//\u7b54\u6848\u8981\u5f00long long \n\nstruct mm\n{\n\tint zhi;//\u6570\u503c \n\tint xu;//\u4e0b\u6807 \n}a[maxn];\n\nstruct node\n{\n\tint sum;\n\tint add;//lazy\u6807\u8bb0 \n}tree[(maxn<<2)];//\u4f17\u6240\u5468\u77e5\uff0c\u7ebf\u6bb5\u6811\u8981\u5f00\u56db\u500d \n\ninline int qr()//\u5feb\u8bfb \n{\n\tint x=0,w=1;char a=0;\n\twhile(a<'0'||a>'9'){if(a=='-')w=-1;a=getchar();}\n\twhile(a>='0'&&a<='9'){x=(x<<3)+(x<<1)+(a^48);a=getchar();}\n\treturn x*w;\n}\n\ninline void pushdown(int node,int start,int end)//lazy\u4e0b\u79fb \n{\n\tint mid=(start+end)>>1;\n\tint left_node=(node<<1);\n\tint right_node=(node<<1)+1;\n\ttree[left_node].sum = ( tree[left_node].sum + tree[node].add*(mid-start+1) );\n\ttree[right_node].sum = ( tree[right_node].sum + tree[node].add*(end-mid) );\n\ttree[left_node].add =  ( tree[left_node].add + tree[node].add );\n\ttree[right_node].add = ( tree[right_node].add + tree[node].add );\n\ttree[node].add=0;\n}\n\ninline void add_tree(int node,int start,int end,int left,int right,int k)//\u533a\u95f4\u52a0\u4e00 \n{\n\tif( start > right || end < left )\n\t\treturn ;\n\tif( start>=left && end<=right )\n\t{\n\t\ttree[node].sum = (tree[node].sum + k * (end - start + 1) ) ;\n\t\ttree[node].add = (tree[node].add + k);\n\t\treturn ;\n\t}\n\tpushdown( node , start , end);\n\tint mid=(start+end)>>1;\n\tint left_node=(node<<1);\n\tint right_node=(node<<1)+1;\n\tadd_tree( left_node , start , mid , left , right , k);\n\tadd_tree( right_node , mid+1 , end , left , right , k);\n\ttree[node].sum = (tree[left_node].sum + tree[right_node].sum);\n}\n\ninline int ask_tree(int node,int start,int end,int k)//\u5355\u70b9\u67e5\u8be2 \n{\n\tif( start==end )\n\t\treturn tree[node].sum;\n\tpushdown( node , start , end);\n\tint mid=(start+end)>>1;\n\tint left_node=(node<<1);\n\tint right_node=(node<<1)+1;\n\tif(k<=mid)\n\t\treturn ask_tree( left_node , start , mid , k );\n\telse\n\t\treturn  ask_tree( right_node , mid+1 , end , k );\n}\n\ninline void ins_sort(int start,int end)//\u63d2\u5165\u6392\u5e8f \n{\n\tint j;\n\tfor(int i=start+1;i<=end;++i)\n\t{\n\t\ta[0].zhi=a[i].zhi;\n\t\ta[0].xu=a[i].xu;\n\t\tfor(j=i-1;a[j].zhi>a[0].zhi;--j)\n\t\t{\n\t\t\ta[j+1].zhi=a[j].zhi;\n\t\t\ta[j+1].xu=a[j].xu;\n\t\t}\n\t\ta[j+1].xu=a[0].xu;\n\t\ta[j+1].zhi=a[0].zhi;\n\t}\n}\n\nvoid quick_sort(int start,int end)//\u5feb\u901f\u6392\u5e8f \n{\n\tif(end-start<=8)\n\t\tins_sort(start,end);\n\telse\n\t{\n\t\tint low=start,high=end;\n\t\tint temp;\n\t\tint check=a[ (low+high)/2 ].zhi;\n\t\twhile(low<=high)\n\t\t{\n\t\t\twhile(a[low].zhi<check&&low<=high)\n\t\t\t\tlow++;\n\t\t\twhile(a[high].zhi>check&&low<=high)\n\t\t\t\thigh--;\n\t\t\tif(low<=high)\n\t\t\t{\n\t\t\t\tint change=a[low].zhi;\n\t\t\t\tint change1=a[low].xu;\n\t\t\t\ta[low].zhi=a[high].zhi;\n\t\t\t\ta[low].xu=a[high].xu;\n\t\t\t\ta[high].zhi=change;\n\t\t\t\ta[high].xu=change1;\n\t\t\t\tlow++;\n\t\t\t\thigh--;\n\t\t\t}\n\t\t}\n\t\tif(high>start)\n\t\t\tquick_sort(start,high);\n\t\tif(low<end)\n\t\t\tquick_sort(low,end);\n\t}\n}\n\nint main()\n{\n\tn=qr();\n\tfor(register int i=1;i<=n;i++)//\u8bfb\u5165 \n\t\ta[i].zhi=qr(),a[i].xu=i;\n\tquick_sort(1,n);;\n\tfor(register int i=1;i<=n;i++)//\u5de5\u4f5c\u90e8\u5206 \n\t{\n\t\tif(a[i].zhi==a[i+1].zhi)//\u5982\u679c\u6709\u91cd\u590d\u7684\u6570\u5148\u7b97ans\u518d\u533a\u95f4\u52a0 1\n\t\t{\n\t\t\tint u=i;\n\t\t\twhile(a[i].zhi==a[i+1].zhi)\n\t\t\t{\n\t\t\t\tans += ask_tree(1,1,n,a[i].xu);\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tans += ask_tree(1,1,n,a[i].xu);\n\t\t\ti=u;\n\t\t\tif(a[i].zhi==a[i+1].zhi)\n\t\t\t{\n\t\t\t\twhile(a[i].zhi==a[i+1].zhi)\n\t\t\t\t{\n\t\t\t\t\tadd_tree(1,1,n,1,a[i].xu-1,1);\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\tadd_tree(1,1,n,1,a[i].xu-1,1);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tans += ask_tree(1,1,n,a[i].xu);\n\t\t\tadd_tree(1,1,n,1,a[i].xu-1,1);\n\t\t}\n\t}\n\tprintf(\"%lld\\n\",ans);//\u8f93\u51fa\u7b54\u6848 \n\treturn 0;\n}\n\n\n\n\n```\n### \u6700\u540e\u8d34\u4e0a\u8dd1\u5f97\u5de8\u6162\u7684\u7ed3\u679c\uff1a\n![\u4e0d\u5f00O2](http://chuantu.xyz/t6/710/1578374504x3703728804.png)\n![\u5f00Ofast](http://chuantu.xyz/t6/710/1578374529x3703728804.png)\n\n## \u597d\u4e86\uff0c\u4f60\u4e0d\u6253\u7b97\u70b9\u4e2a\u8d5e\u518d\u8d70\u5417\uff1f\uff1forz\n\n\n",
        "postTime": 1578374576,
        "uid": 242234,
        "name": "\u4e58\u6e58\u53bb",
        "ccfLevel": 6,
        "title": "\u672c\u849f\u84bb\u7684\u7b2c\u516b\u7bc7\u9898\u89e3"
    },
    {
        "content": "**\u79bb\u6563\u5316\u4e00\u4e0b**\n\n**\u6309\u4ef7\u503c\u4ece\u5927\u5230\u5c0f\u6392\u5e8f**\n\n**\u6392\u5b8c\u5e8f\u4e4b\u540e\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4**\n\n**\u6bcf\u6b21\u628a\u8fd9\u4e2a\u6570\u7684\u4f4d\u7f6e\u52a0\u5165\u5230\u6811\u72b6\u6570\u7ec4\u4e2d**\n\n**\u56e0\u4e3a\u662f\u6392\u5b8c\u5e8f\u4e4b\u540e\uff0c\u6240\u4ee5\u4e4b\u524d\u52a0\u5165\u7684\u4e00\u5b9a\u6bd4\u540e\u52a0\u5165\u7684\u5927**\n\n**\u7136\u540e\u5728\u67e5\u8be2\u5f53\u524d\u8fd9\u4e2a\u6570\u524d\u9762\u4f4d\u7f6e\u7684\u6570\uff08\u662f\u524d\u9762\u4f4d\u7f6e\u7684\u6570\uff0c\u8981\u5f53\u524d\u8fd9\u4e2a\u6570\u51cf1\uff09**\n\n**\u5c31\u662f\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u4e86**\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define maxn 50000\nusing namespace std;\nstruct node\n{\n    int val,num;\n}a[maxn];\nint n;\nint c[maxn];\nint add(int x,int k)\n{\n    for(int i=x;i<=n;i+=i&(-i)) c[i]+=k;\n}\nint query(int x)\n{\n    int sum=0;\n    for(int i=x;i>0;i-=i&(-i)) sum+=c[i];\n    return sum;\n}\nint cmp(node x,node y)\n{\n    return x.val>y.val;\n}\nint ans;\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;i++) scanf(\"%d\",&a[i].val),a[i].num=i;\n    sort(a+1,a+n+1,cmp);\n    for(int i=1;i<=n;i++)\n    {\n        add(a[i].num,1);\n        ans+=query(a[i].num-1);\n    }\n    cout<<ans<<endl;\n}\n\n```",
        "postTime": 1508810306,
        "uid": 18441,
        "name": "Drug__Lover",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "## $PS:$\u8fd9\u4e2a\u6811\u72b6\u6570\u7ec4\u8ddf\u697c\u4e0a\u4e0d\u4e00\u6837\n\n## \u597d\u4e0d\u5bb9\u6613\u5b66\u4f1a\u4e86\u6811\u72b6\u6570\u7ec4\u9006\u5e8f\u5bf9\u2026\u2026\u4e0d\u8fc7\u56e0\u4e3a\u79bb\u6563\u5316\u5199\u70b8\u4e86\u8c03\u8bd5\u4e86\u534a\u5929\u2026\u2026\n\n### \u4e8b\u5b9e\u4e0a\uff0c\u4f60\u4f1a\u53d1\u73b0\u8fd9\u7bc7\u9898\u89e3\u8ddf\u4e4b\u524d\u597d\u591a$DALAO$\u7684\u6811\u72b6\u6570\u7ec4\u6c42\u9006\u5e8f\u5bf9\u5e76\u4e0d\u4e00\u6837\u2026\u2026\u4e2a\u4eba\u611f\u89c9\u8fd9\u79cd\u65b9\u6cd5\u66f4\u63a5\u8fd1\u4e8e\u6811\u72b6\u6570\u7ec4\u7684\u201c\u6570\u4f4d\u6574\u5408\u201d\u7684\u601d\u60f3$qwq$\n\n\u9996\u5148\u5bf9\u4e8e\u9006\u5e8f\u5bf9\uff0c\u6211\u4eec\u53ef\u4ee5\u5982\u6b64\u601d\u8003\u8fd9\u4e2a\u95ee\u9898\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u6570\u7684\u9006\u5e8f\u5bf9\uff0c\u5728\u4e00\u4e2a\u6570\u5217\u4e2d\u7684\u6570\u91cf\u90fd\u662f\u4e00\u5b9a\u7684\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u6570\u5217$a$\u7684\u6bcf\u4e00\u4e2a$a_i$,\u53ef\u4ee5\u4e0e$a_1$~$a_{i-1}$\u5339\u914d\u51fa$k_i$\u4e2a\u9006\u5e8f\u5bf9\uff0c\u90a3\u4e48\n## $ans$=$\\Sigma_{1}^{n}k_i$\u3002\n\n\u4ee5\u4e0a\u5e94\u8be5\u4e0d\u96be\u7406\u89e3\u2026\u2026\u56e0\u4e3a\u6bcf\u591a\u8bfb\u5165\u4e00\u4e2a\u6570\uff0c\u5c31\u4f1a\u591a\u548c\u4e4b\u524d\u7684\u6570\u636e\u65b0\u7684\u9006\u5e8f\u5bf9\u2026\u2026\u7528\u6570\u5b66\u516c\u5f0f\u8868\u793a\u53ea\u662f\u4e3a\u4e86\u5411\u5927\u4f6c\u9760\u62e2\u554a$QWQ$.\n\n\u90a3\u4e48\u5176\u5b9e\uff0c\u6211\u4eec\u7528\u6811\u72b6\u6570\u7ec4\u8bb0\u5f55\u5728\u7b2c$i$\u4e2a\u6570\u4e4b\u524d\u6309\u6709\u51e0\u4e2a\u6570\u6bd4\u5b83\u5c0f\u6216\u7b49\u4e8e\u4ed6\uff0c\u5373$a_i$ $<=$ $a_j$\u4e14$i<=j$\u90a3\u4e48\u6211\u4eec\u5c31\u8981\u5220\u9664\u8fd9\u4e9b\u6570\u3002\u5373\u7528$i-sum(value[i])$\u5373\u53ef\u3002\n\n\u8bf6\uff0c\u8fd9\u4e2a\u5730\u65b9\u7c7b\u4f3c\u6876\u6876\u6876\u7684\u601d\u60f3\uff0c\u7528$0$\u6216\u8005$1$\u8bb0\u5f55\u6bd4$a[i]$\u5c0f\u7684\u6570\u5728$a[i]$\u6709\u6ca1\u6709\u8f93\u5165\u5373\u53ef\u3002\n\n\u554a\uff0c\u4e4b\u540e\u56e0\u4e3a\u6811\u72b6\u6570\u7ec4\u7684\u5c40\u9650\u6027\u592a\u5927\u4e86\uff0c\u6240\u4ee5\u8fd9\u4e2a\u5730\u65b9\u8981\u79bb\u6563\u5316\u4e00\u4e0b$qwq$\u3002\n\n\u79bb\u6563\u5316\u2026\u2026\u5f53\u7136\u5c31\u662f\u6392\u4e2a\u5e8f\uff0c\u7136\u540e\u518d\u91cd\u65b0\u8986\u76d6\u56de\u53bb\u5566$qwq$\u3002\n\n\u8bf6\uff0c\u597d\u50cf\u8fd9\u4e2a\u9898\u7684\u65f6\u95f4\u74f6\u9888\u4ece\u627e\u9006\u5e8f\u5bf9\u53d8\u6210\u4e86$sort$\uff1f\uff1f\uff1f\n\n\u4f46\u53cd\u6b63\u90fd\u662f$O(nlogn)$/\u6ed1\u7a3d\u3002\n\n$emmmm$\u8d34\u4ee3\u7801\n\n```cpp\nstruct tree{\n\tint num,tre;\n}t[50001];\nint answer[50001],now[50001],change[50001];\nint n,ans=0;\ninline int lowbit(int i) {\n    return i&(-i);\n}\ninline void insert(int i,int x)\n{\n    while(i<=n)answer[i]+=x,i+=lowbit(i);\n}\ninline bool cmp(tree a,tree b){\n\treturn a.tre<b.tre; \n}\ninline int sum(int num){\n\tint res=0;\n\tfor(;num;num-=lowbit(num))\n\tres+=answer[num];\n\treturn res;\n}\nint main()\n{\n\tmemset(t,0,sizeof(t));\n\tcin>>n;\n\tfor(int i=1;i<=n;i++){ \n\t\tcin>>t[i].tre;\n\t\tt[i].num=i;\n\t} \n    sort(t+1,t+n+1,cmp);\n\tfor(int i=1;i<=n;i++){\n\t\tchange[t[i].num]=i;\n\t}\n    //\u4e0a\u9762\u4e24\u4e2afor\u90fd\u7528\u6765\u8f93\u5165+\u79bb\u6563\u5316\n\tfor(int i=1;i<=n;i++){\n\t\tinsert(change[i],1);\n\t\tans+=i-sum(change[i]);\n\t}\n\t//for(int i=1;i<=n;i++)cout<<answer[i]<<endl;\n\tcout<<ans;\n}\n```\n\n",
        "postTime": 1523281656,
        "uid": 28313,
        "name": "\u768e\u6708\u534a\u6d12\u82b1",
        "ccfLevel": 7,
        "title": "\u6811\u72b6\u6570\u7ec4\u6c42\u9006\u5e8f\u5bf9"
    },
    {
        "content": "## \u5206\u6790\n\n**\u9996\u5148\u662f\u66b4\u529b\uff0c\u5148\u679a\u4e3e i\uff0c\u518d\u679a\u4e3e j\uff08j > i\uff09\uff0c\u5982\u679c ai > aj\uff0c\u7b54\u6848\u5c31\u52a0\u4e00\uff0c\u5f88\u663e\u7136\uff0c\u8fd9\u6837\u505a\u662fn^{2} \u590d\u6742\u5ea6\uff0c\u80af\u5b9a\u4f1a\u8d85\u65f6**\n\n**\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u4e0b\u5206\u6cbb+\u5f52\u5e76\u6392\u5e8f\u6c42\u9006\u5e8f\u5bf9\u7684\u65b9\u6cd5**\n\n![](https://img-blog.csdn.net/20180729230313444?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZvcmV2ZXJfZHJlYW1z/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n\n**\u82e5\u6211\u4eec\u8981\u6c42\u6570\u5217 A \u4e2d\u7684\u9006\u5e8f\u5bf9\u4e2a\u6570\uff0c\u4e0d\u59a8\u628a\u5b83\u5206\u6210\u4e24\u534a\uff0c\u6570\u5217 A \u4e2d\u7684\u9006\u5e8f\u5bf9\uff08i\uff0cj\uff09\u5fc5\u7136\u662f\u4e0b\u9762\u4e09\u79cd\u60c5\u51b5\u4e4b\u4e00\uff1a**\n1. **i\uff0cj \u90fd\u5c5e\u4e8e\u6570\u5217 B**\n\n2. **i\uff0cj \u90fd\u5c5e\u4e8e\u6570\u5217 C**\n\n3. **i \u5c5e\u4e8e\u6570\u5217 B\uff0cj \u5c5e\u4e8e\u6570\u5217 C**\n\n![](https://img-blog.csdn.net/20180729230724371?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ZvcmV2ZXJfZHJlYW1z/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n\n**\u5bf9\u4e8e\uff081\uff09\uff0c\uff082\uff09\u90fd\u5f88\u597d\u505a\uff0c\u76f4\u63a5\u9012\u5f52\u4e0b\u53bb\u5c31\u884c\u4e86\uff0c\u9ebb\u70e6\u4e00\u70b9\u7684\u662f\uff083\uff09**\n\n**\u89e3\u51b3\uff083\uff09\u5927\u4f53\u7684\u601d\u8def\u5c31\u662f\u679a\u4e3e C \u4e2d\u7684\u6bcf\u4e00\u4e2a\u6570\uff0c\u7136\u540e\u5728 B \u4e2d\u627e\u5927\u4e8e\u5b83\u7684\u6570\uff0c\u7136\u540e\u7d2f\u52a0\u8fdb\u7b54\u6848\u5c31\u884c\u4e86**\n\n**\u4e0d\u8fc7\u76f4\u63a5\u679a\u4e3e\u7684\u8bdd\uff0c\u65f6\u95f4\u53ef\u80fd\u4f1a\u70b8\u6389\uff0c\u6211\u4eec\u8981\u60f3\u529e\u6cd5\u4f18\u5316**\n\n**\u7531\u4e8e\u5206\u6cbb\u7684\u65f6\u5019\u662f\u7528\u7684\u9012\u5f52\uff0c\u5728\u9012\u5f52\u56de\u6765\u7684\u65f6\u5019\uff0c\u6211\u4eec\u90fd\u505a\u4e00\u6b21\u5f52\u5e76\u6392\u5e8f\uff0c\u4fdd\u8bc1 B\uff0cC \u90fd\u662f\u6709\u5e8f\u7684**\n\n**\u8fd8\u662f\u6309\u7167\u4e0a\u9762\u66b4\u529b\u7684\u90a3\u79cd\u601d\u8def\u6c42\u9006\u5e8f\u5bf9\uff0c\u4e0d\u8fc7\u7531\u4e8e\u6b64\u65f6 B\uff0cC \u662f\u6709\u5e8f\u7684\uff0c\u590d\u6742\u5ea6\u5c31\u4ece\u539f\u6765n\u00b2\u964d\u5230\u4e86n\u00a0**\n\n**\u8fd9\u6837\u7684\u8bdd\uff0c\u5206\u6cbb\u7684\u590d\u6742\u5ea6\u662fO\uff08log n\uff09\uff0c\u5f52\u5e76\u6392\u5e8f\u7684\u590d\u6742\u5ea6\u662fO\uff08n\uff09\uff0c\u603b\u590d\u6742\u5ea6\u5c31\u662fO\uff08n * log n\uff09**\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define N 500005\nusing namespace std;\nint a[N],b[N],c[N];\nlong long merge(int l,int r,int mid)\n{\n\tlong long ans=0;\n\tint i,b1=0,c1=0,b2=1,c2=1;\n\tfor(i=l;i<=mid;++i)  b[++b1]=a[i];\n\tfor(i=mid+1;i<=r;++i)  c[++c1]=a[i];\n\tfor(i=l;i<=r;++i)\n\t{\n\t\tif(b1>=b2&&(c1+1==c2||b[b2]<=c[c2]))\n\t\t  a[i]=b[b2++];\n\t\telse\n\t\t{\n\t\t\ta[i]=c[c2++];\n\t\t\tans+=b1-b2+1;\n\t\t}\n\t}\n\treturn ans;\n}\nlong long solve(int l,int r)\n{\n\tif(l==r)  return 0;\n\tint mid=(l+r)>>1;\n\tlong long ans=0;\n\tans+=solve(l,mid);\n\tans+=solve(mid+1,r);\n\tans+=merge(l,r,mid);\n\treturn ans;\n}\nint main()\n{\n\tint n,i;\n\tlong long ans;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;++i)\n\t  \tscanf(\"%d\",&a[i]);\n\tans=solve(1,n);\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1542508019,
        "uid": 98954,
        "name": "\u4e0d\u5b58\u5728\u4e4b\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "[Blog](https://www.cnblogs.com/cj-chd)  \n#### \u8bf7\u7ba1\u7406\u5458\u91cd\u65b0\u5ba1\u6838\uff0c\u522b\u7684\u6811\u72b6\u6570\u7ec4\u89e3\u6cd5\u5728\u6570\u636e\u66f4\u65b0\u540e\u53ef\u80fd\u5b58\u5728\u4e00\u4e9b\u95ee\u9898\uff0c\u5177\u4f53\u89c1\u4e0b\u6587\u3002\n#### \u6570\u636e\u66f4\u65b0\u540e\uff0c\u4ee5\u524d\u7684\u8bb8\u591a\u9898\u89e3\u90fd\u88abhack\uff0c\u539f\u56e0\u5c31\u662f\u52a0\u5165\u4e86\u5b58\u5728\u76f8\u540c\u5143\u7d20\u7684\u6570\u636e\uff01  \n\u57fa\u672c\u7684\u539f\u7406\u6ca1\u6709\u53d8\uff0c\u5176\u4ed6\u5927\u4f6c\u90fd\u5df2\u7ecf\u8bb2\u5f97\u5f88\u660e\u767d\u4e86  \n\u4f46\u662f\u5728\u5904\u7406\u76f8\u540c\u5143\u7d20\u7684\u65f6\u5019\u9700\u8981\u4f7f\u7528$stable\\,sort()$  \n\u4e14$cmp$\u51fd\u6570\u9700\u8981\u4fee\u6539\uff0c\u56e0\u4e3a\u5143\u7d20\u503c\u76f8\u540c\u6784\u4e0d\u6210\u9006\u5e8f\u5bf9\uff0c\u6240\u4ee5\u5728\u5224\u65ad\u65f6\u8981\u52a0\u4e0a\u7b49\u53f7  \n\u4ee3\u7801\uff1a\n```\n#include<cstdio>\n#include<algorithm>\n#define R register\n#define I inline\n#define L long long\nusing namespace std;\nconst int S=500010;\nchar buf[S],*p1,*p2;\nI char getc(){return p1==p2&&(p2=(p1=buf)+fread(buf,1,S,stdin),p1==p2)?EOF:*p1++;}\nI int read(){\n\tR int f=0,b=1;\tR char c=getc();\n\twhile((c<48||c>57)&&c!=45) c=getc();\n\tif(c==45) b=0,c=getc();\n\twhile(c>47&&c<58) f=(f<<3)+(f<<1)+(c^48),c=getc();\n\treturn b?f:~f+1;\n}\nint a[S],b[S],c[S],n;\tL s;\nI int max(int x,int y){return x>y?x:y;}\nI int cmp(const int &x,const int &y){return b[x]>=b[y];}//\u6ce8\u610f\u7b49\u53f7\nI void mdf(int x){while(x<=n) ++c[x],x+=x&-x;}\nI void qry(int x){while(x) s+=1ll*c[x],x^=x&-x;}\nint main(){\n\tR int i;\tn=read();\n\tfor(i=1;i<=n;++i) b[i]=read(),a[i]=i;\n\tstable_sort(a+1,a+1+n,cmp);//\u6ce8\u610fstable_sort()\n\tfor(i=1;i<=n;++i) mdf(a[i]),qry(a[i]-1);\n\tprintf(\"%lld\",s);\n\treturn 0;\n}\n```",
        "postTime": 1539871493,
        "uid": 91933,
        "name": "newbiechd",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u5148\u4ecb\u7ecd\u4e00\u4e0b\u79bb\u6563\u5316\n\u6876\u6392\u5927\u5bb6\u5e94\u8be5\u77e5\u9053\uff0c\u5c31\u662f\u5f00\u4e00\u4e2a\u6570\u7ec4\uff08\u4e0b\u6807\u4e3a\u6570\u503c\uff0c\u8bb0\u5f55\u4e86\u8be5\u6570\u503c\u7684\u51fa\u73b0\u6b21\u6570\uff09\u7136\u540e\u904d\u5386\u8fc7\u53bb\u5982\u679c\u51fa\u73b0\u6b21\u6570\u4e0d\u4e3a\u96f6\uff0c\u90a3\u5c31\u8f93\u51fa\u8fd9\u4e9b\u6570\u5b57\uff0c\u7406\u8bba\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u4ee5\u8fbe\u5230O(N)\u4f46\u662f\u7531\u4e8e\u5185\u5b58\u9650\u5236\uff0c\u4e0d\u80fd\u5f00\u5f88\u5927\u7684\u6570\u7ec4\u3002\n#### \u7136\u800c \u5982\u679c\u67d0\u4e2a\u6570\u5217\u4e2d\u7684\u6570\u5b57\u4e0d\u8981\u6c42\u5927\u5c0f\u786e\u5b9a\uff0c\u53ea\u8981\u6c42\u8fd9\u4e9b\u6570\u5b57\u6709\u76f8\u5bf9\u7684\u5927\u5c0f\u5c31\u591f\u4e86\u7684\u8bdd\uff0c**\u79bb\u6563\u5316**\u5c31\u6709\u4e86\u7528\u6b66\u4e4b\u5730\n\u4e3e\u4e2a\u4f8b\u5b50\uff1a\u6570\u5217\n```\n3 8 7 5 2000000000000000\n```\n\u6211\u4eec\u53d1\u73b0\u6709\u51e0\u4e2a\u6570\u4e4b\u95f4\u5dee\u8ddd\u5f88\u5927\uff0c\u4f46\u662f\u6211\u4eec\u7528\u4e0d\u5230\u6570\u503c\u7684\u5927\u5c0f\uff0c\u53ea\u8981\u6c42\u76f8\u5bf9\u5927\u5c0f\uff0c\u90a3\u600e\u4e48\u529e\u5462\uff1f\n\u89c2\u5bdf\u4e0b\u9762\u7684\u6570\u5217\uff1a\n```\n1 4 3 2 5\n```\n\u771f\u5de7\uff0c\u8fd9\u4e2a\u6570\u5217\u548c\u4e0a\u9762\u7684\u6570\u5217\u5404\u4e2a\u6570\u5b57\u4e4b\u95f4\u7684\u76f8\u5bf9\u5927\u5c0f\u662f\u4e00\u6837\u7684\u5e76\u4e14\uff0c\u8ba9\u5f88\u5927\u7684\u6570\u636e\u7f29\u5c0f\u4e86\uff0c\u8fd9\u6837\u79bb\u6563\u5316\u4e86\u4e4b\u540e\u5c31\u53ef\u4ee5\u5904\u7406\u4e00\u4e9b\u539f\u672c\u5904\u7406\u4e0d\u4e86\u7684\u95ee\u9898\n\n\u79bb\u6563\u5316\u6bd4\u8f83OK\u7684\u590d\u6742\u5ea6\u662fO(NlogN)\nSTL\u5927\u6cd5\u597d\uff0c\u4ee3\u7801\u89c1\u4e0b\uff1a\n```cpp\n\tfor(int i=1;i<=n;++i)\n\t\ta[i]=read(),b[i]=a[i];//\u8bfb\u5165\u6570\u7ec4a\uff0cb\u6570\u7ec4\u8bb0\u5f55\u4e0b\uff0c\u7b49\u4f1a\u513f\u7528\uff08read\u662f\u8bfb\u5165\u4f18\u5316\uff09\n\tsort(b+1,b+n+1);//\u6392\u5e8fb\u6570\u7ec4\uff0c\u907f\u514da\u6570\u7ec4\u987a\u5e8f\u6253\u4e71\n\tint len=unique(b+1,b+n+1)-b-1;//unique:STL\u81ea\u5e26\u51fd\u6570\uff0c\u53bb\u91cd\u5e76\u8fd4\u56de\u53bb\u91cd\u540e\u6570\u7ec4\u7684\u957f\u5ea6+1\uff08\u6240\u4ee5\u8fd9\u91cc\u540e\u9762\u8981-1\uff09\n\t//\uff08\u539f\u7406\u4e0a\u6765\u8bb2\u4e0d\u662f\u8fd9\u6837\uff0c\u4f46\u8fd9\u6837\u7406\u89e3\u65b9\u4fbf\uff09\n\tfor(int i=1;i<=n;++i){\n\t\tint pos=lower_bound(b+1,b+n+1,a[i])-b;//STL\u81ea\u5e26\u51fd\u6570\uff0c\u8fd4\u56deb(\u6709\u5e8f\u6570\u7ec4)\u4e2d\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8ea[i]\u7684\u4f4d\u7f6e\n\t\ta[i]=pos;//\u6539\u53d8\u8fd9\u4e2a\u503c\u4e3a\u627e\u5230\u7684\u4f4d\u7f6e\n\t} \n\n```\n\n\n\n## \u4ecb\u7ecd\u4e00\u79cd\u795e\u5947\u7684\u7b97\u6cd5\uff1a\n# \u6743\u503c\u7ebf\u6bb5\u6811\n\n**\u987e\u540d\u601d\u4e49\uff0c\u8be5\u7ebf\u6bb5\u6811\u4e2d\u5b58\u50a8\u7684\u5e76\u4e0d\u662f\u666e\u901a\u7ebf\u6bb5\u6811\u8bb0\u5f55\u7684\u7ebf\u6bb5\u7aef\u70b9\uff0c\u800c\u662f \u7c7b\u4f3c\u4e00\u4e2a\u6876\u4e00\u6837\u7684\u4e1c\u897f**\n\n\u6700\u7b80\u5355\u7684\u4f8b\u5b50\uff1a[\u6c42\u9006\u5e8f\u5bf9](https://www.luogu.org/problemnew/show/P1908)\n\u8be5\u9898\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u505a\uff0c\u53ef\u4ee5\u7528\u5f52\u5e76\u6392\u5e8f\u601d\u60f3\u505a\uff0c\u53ef\u4ee5\u7528splay\u505a......\n\u4e0d\u8fc7\uff0c\u65e2\u7136\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u7528\uff0c\u4e5f\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u505a\n####\u3010\u601d\u8def\u3011\n>\u5148\u5efa\u4e00\u68f5\u5f88\u5927\u7684\u7ebf\u6bb5\u6811\uff0c\u7136\u540e\u7528\u6743\u503c\u4e3a\u4e0b\u6807\u5efa\u6811\uff0c\u6bcf\u4e00\u6b21\u8bfb\u5230\u4e00\u4e2a\u6570\uff0c\u5c31\u627e\u6bd4\u8fd9\u4e2a\u6570\u5927\u7684\u4e2a\u6570\uff0c\u627e\u5230\u4e86\u4e4b\u540e\u52a0\u5230ans\u91cc\uff0c\u63a5\u7740\u66f4\u65b0\u7ebf\u6bb5\u6811\uff08\u8fd9\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570+1\uff09\n PS\uff1a\u8fd9\u9898\u8981\u52a0\u79bb\u6563\u5316\uff0c\u5426\u5219\u2026\u2026\u4f60\u61c2\u7684\n \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cctype>\n#include<algorithm>\n#define lson i << 1\n#define rson i << 1 | 1\n#define M 40005\nusing namespace std;\n\ninline int read(){\n\tchar chr=getchar();\n\tint f=1,ans=0;\n\twhile(!isdigit(chr)) {if(chr=='-') f=-1;chr=getchar();}\n\twhile(isdigit(chr))  {ans=ans*10;ans+=chr-'0';chr=getchar();}\n\treturn ans*f;\n\n}\nint n;\nstruct Node{\n\tint l,r,v;\n}t[M<<2];\nint a[M],b[M];\nvoid kai(){\n\tfreopen(\"test1.txt\",\"r\",stdin);\n}\n\nvoid push_up(int i){\n\tt[i].v=t[lson].v+t[rson].v;\n}//\u5411\u4e0a\u66f4\u65b0\n\nvoid build(int i,int l,int r){//\u5efa\u6811\n\tt[i].l=l;\tt[i].r=r;\tt[i].v=0;\n\tif(l==r){\n\t\treturn;\n\t}\n\tint mid=t[i].l+t[i].r>>1;\n\tbuild(i<<1,l,mid);\n\tbuild(i<<1|1,mid+1,r);\n}\n\nvoid updata(int i,int x){\n\tif(t[i].l==t[i].r){\n\t\t++t[i].v;//\u8fd9\u4e2a\u6570\u5b57\u51fa\u73b0\u7684\u6b21\u6570+1\n\t\treturn;\n\t}\n\tint mid=t[i].l+t[i].r>>1;\n\tif(x<=mid) updata(lson,x);\n\telse       updata(rson,x);\n\tpush_up(i);\n}//\u66f4\u65b0\u8282\u70b9\n\nint query(int i,int l,int r){\n\tif(l<=t[i].l&&t[i].r<=r) return t[i].v;\n\tint mid=t[i].l+t[i].r>>1;\n\tint x=0;\n\tif(l<=mid) x+=query(lson,l,r);\n\tif(mid<r)  x+=query(rson,l,r);\n\treturn x;\n}//\u8be2\u95ee\n\nint main(){\n//\tkai();\n\tn=read();\n\tint ans=0;\n\tbuild(1,1,M);\n\tfor(int i=1;i<=n;++i)\n\t\ta[i]=read(),b[i]=a[i];\n\tsort(b+1,b+n+1);\n\tint len=unique(b+1,b+n+1)-b-1;\n\tfor(int i=1;i<=n;++i){\n\t\tint pos=lower_bound(b+1,b+n+1,a[i])-b;\n\t\ta[i]=pos;\n\t} //\u79bb\u6563\u5316\n\tfor(int i=1;i<=n;++i){\n\t\tint x=a[i];\n\t\tans+=query(1,x+1,M);//\u627e\u6bd4\u8fd9\u4e2a\u6570\u5927\u7684\u6570\u7684\u51fa\u73b0\u7684\u603b\u6b21\u6570\n\t\tupdata(1,x);//\u8fd9\u4e2a\u6570\u51fa\u73b0\u6b21\u6570+1\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n\n```",
        "postTime": 1534576794,
        "uid": 9287,
        "name": "LevenKoko",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "# \u5f52\u5e76\u6392\u5e8f\n\u6ca1\u6709\u4ec0\u4e48\u601d\u60f3\u96be\u5ea6\uff0c\u5176\u4ed6\u9898\u89e3\u5df2\u7ecf\u5199\u8fc7\u4e86\u3002\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#define LL long long\nusing namespace std;\nconst int _ = 5 * 1e5 + 10;\nint A[_];\nint tmp[_];\nLL ans = 0;\nvoid work(int l, int r)\n{\n\tint m = (l + r) >> 1;\n\tif(l == r)return;\n\twork(l, m), work(m + 1, r);\n\tfor(int i = l, j = m + 1,k = l;k <= r;k++)\n\t{\n\t\tif(i <= m && (j > r || A[i] <= A[j]))\n\t\t\ttmp[k] = A[i++], ans += (j - m - 1);\n\t\telse\n\t\t\ttmp[k] = A[j++];\n\t}\n\tfor(register int i = l;i <= r;i++)\n\t\tA[i] = tmp[i];\n}\nint main()\n{\n\tint n;\n\tscanf(\"%d\", &n);\n\tfor( register int i = 1;i <= n;i++)\n\t\tscanf(\"%d\", A + i);\n\twork(1, n);\n\tprintf(\"%lld\", ans);\n\treturn 0;\n}\n```\n\n# \u6811\u72b6\u6570\u7ec4\n\u601d\u8003\u4e00\u4e0b\u9006\u5e8f\u5bf9\u7684\u5b9a\u4e49\uff1a\n\n$$A_i > A_j (i < j)$$\n\n\u8003\u8651\u6309\u987a\u5e8f\u904d\u5386\u5e8f\u5217$A$\uff0c\u5047\u8bbe\u5f53\u524d\u904d\u5386\u5230$A_j$\u6b64\u65f6\u6240\u6709\u7684$A_i$\u5728\u524d\u9762\u5df2\u7ecf\u904d\u5386\u8fc7\u4e86\uff0c\u8fd9\u6837\u5c31\u6ee1\u8db3\u4e86\u4e00\u4e2a\u6761\u4ef6\uff08$i < j$\uff09\u3002\n\n\u8fd9\u6837\u5bf9\u4e8e\u4e00\u4e2a\u5f53\u524d\u5e8f\u5217\u7684\u5143\u7d20$A_j$\uff0c\u548c$A_j$\u6784\u6210\u9006\u5e8f\u5bf9\u7684\u5c31\u662f\u4e4b\u524d\u5df2\u7ecf\u904d\u5386\u8fc7\u7684\u6240\u6709\u5143\u7d20\u4e2d\u5927\u4e8e$A_j$\u7684\u5143\u7d20\u4e2a\u6570\u3002\u8fd9\u6837\u5c31\u6ee1\u8db3\u4e86\u7b2c\u4e8c\u4e2a\u6761\u4ef6\uff08$A_i < A_j$\uff09\n\n\u7b80\u5355\u8bf4\uff0c\u5176\u5b9e\u4e0d\u4e00\u5b9a\u975e\u8981\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\uff0c\u53ea\u8981\u652f\u6301\u533a\u95f4\u67e5\u8be2\u6216\u8005\u6700\u503c\u67e5\u8be2\n\n$$A_i > A_j (i < j)$$\n\n\u5176\u5b9e\u679a\u4e3e\u987a\u5e8f\uff0c\u5c31\u4fdd\u8bc1\u4e86\u6bcf\u6b21\u8ba1\u7b97\u7684\u65f6\u5019\u6ee1\u8db3\u4e86$i < j$\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u6240\u6709\u5df2\u7ecf\u5904\u7406\u7684$A_i$\u4e2d\u8fdb\u884c\u9009\u62e9\u7b26\u5408\u7b2c\u4e8c\u4e2a\u6761\u4ef6\u7684$A_i > A_j$\u5373\u53ef\u3002\n\n\u6211\u4eec\u628a\u6570\u636e\u6392\u5e8f\uff0c\u5e76\u4e14\u8fdb\u884c\u79bb\u6563\u5316\uff0c\u653e\u5165\u6811\u72b6\u6570\u7ec4\uff0c\u6211\u6bd4\u8f83\u4e60\u60ef\u6392\u5e8f\u7684\u65f6\u5019\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u3002\n\n\n\u6bd4\u5982:\n\n\u6e90\u6570\u636e\u662f\uff1a\n\n`21 41 241 415 2141 31 3 2`\n\n\u79bb\u6563\u5316\u540e\u5bf9\u5e94\u4e3a\uff1a\n\n`6   4  3   2    1   5 7 8 `\uff081\u662f\u6700\u5927\u7684\uff09\n\n\u6309\u987a\u5e8f\u79bb\u6563\u5316\u540e\u653e\u5165\u6811\u72b6\u6570\u7ec4\u540e\u5c31\u662f\n\n![exp](https://i.loli.net/2019/10/24/vO7Pw1kXubQhpxs.png)\n\n\u73b0\u5728\u6309\u7167\u539f\u6570\u7ec4\u4e2d\u7684\u987a\u5e8f\u8fdb\u884c\u5904\u7406\uff1a\n\u5904\u7406\u5206\u4e24\u6b65\uff1a\n\n - \u6807\u8bb0\u672c\u6570\u636e\u5df2\u7ecf\u51fa\u73b0\n - \u7edf\u8ba1\u8fd9\u4e2a\u5143\u7d20\u5f62\u6210\u7684\u9006\u5e8f\u5bf9\u6570\u91cf\n\n\u4ee3\u7801\u4f53\u73b0\u4e3a:\n```cpp\n    change(A[i]\u5728\u6811\u72b6\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e, +1);\n    ans += query(A[i]\u5728\u6811\u72b6\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e);//\u67e5\u8be2\u6811\u72b6\u6570\u7ec4\u4e2d[1, A[i]\u5728\u6811\u72b6\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e )\u7684\u548c\u3002\n```\n`ans += query(A[i]\u5728\u6811\u72b6\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e);`\n\n\u67e5\u8be2\u6811\u72b6\u6570\u7ec4\u4e2d[1, A[i]\u5728\u6811\u72b6\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e )\u7684\u548c\u3002\n\n\u56e0\u4e3a\u533a\u95f4[1, A[i]\u5728\u6811\u72b6\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e )\u5c31\u662f\u4fdd\u5b58\u7740\u90a3\u4e9b\u5df2\u7ecf\u5904\u7406\u8fc7\u7684\u4e14\u5c0f\u4e8e$A[i]$\u7684\u6570\u636e\u4e2a\u6570\uff0c\u8fd9\u4e9b\u90fd\u80fd\u5f62\u6210\u9006\u5e8f\u5bf9\uff0c\u8fd9\u6bb5\u533a\u95f4\u4e2d\u4e3a$1$\u5c31\u662f\u5df2\u7ecf\u88ab\u5904\u7406\u7684\u4e86\uff0c \u6240\u4ee5\u8fd9\u6bb5\u533a\u95f4\u7684\u603b\u548c\u5c31\u662f\u80fd\u548cA[i]\u5f62\u6210\u7684\u9006\u5e8f\u5bf9\u6570\u91cf\u3002\n\n\u4ee3\u7801\u5c31\u662f:\n```cpp\n/*!\n * Copyright(c) 2019 Shu_Yu_Mo\n * MIT Licensed\n * Luogu: https://www.luogu.org/space/show?uid=44615\n * Github: https://github.com/oldsuold/\n * Gitee: https://gitee.com/Shu_Yu_Mo/\n * These words were created by an amazing tool written by Shu_Yu_Mo.\n */\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<cstring>\n#include<iostream>\n#include<cmath>\n#include<vector>\n#include<queue>\n#include<algorithm>\n#define inf 0x7fffffff\n#define _R register\n#define int long long\nusing namespace std;\nconst int _ = 5e5 + 1000;\ninline int read()\n{\n    char c = getchar(); int sign = 1; int x = 0;\n    while(c > '9' || c < '0') { if(c=='-')sign = -1; c = getchar(); }\n    while(c <= '9' && c >= '0') { x *= 10; x += c - '0'; c = getchar(); }\n    return x * sign;\n}\nstruct Node{\n\tint Val;\n\tint where;\n\tbool operator < (const Node & A) const{\n\t\tif(Val == A.Val)\n\t\t\treturn where > A.where;\n\t\treturn Val > A.Val;\n\t}\n}A[_];\nint n;\nint C[_];\nint R[_];\nint lowbit(int x) { return x & -x; }\nint query(int x)\n{\n\tint ans = 0;\n\tfor(;x >= 1;x -= lowbit(x))\n\t\tans += C[x];\n\treturn ans;\n}\nvoid change(int x, int val)\n{\n\tfor(;x <= n;x += lowbit(x))\n\t\tC[x] += val;\n}\nsigned main()\n{\n\tn = read();\n\tfor(_R int i = 1;i <= n;i++) {\n\t\tA[i].Val = read();\n\t\tA[i].where = i;\n\t}\n\tsort(A + 1, A + 1 + n);\n\tfor(_R int i = 1;i <= n;i++) {\n\t\tR[A[i].where] = i;\n\t}\n\tint ans = 0;\n\tfor(_R int i = 1;i <= n;i++) {\n\t\tchange(R[i], 1);\n\t\tans += query(R[i] - 1);\n\t}\n\tprintf(\"%lld\", ans);\n\t\n\treturn 0;\n}\n```",
        "postTime": 1571923811,
        "uid": 44615,
        "name": "ShuYuMo",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "# P1908 \u9006\u5e8f\u5bf9 \u9898\u89e3\n\n## \u601d\u8def\n\n\u6bd4\u8f83\u6c42\u5f97\u9006\u5e8f\u5bf9\u5bf9\u6570\n\n### \u601d\u8def 1 \uff1a\u9010\u4e00\u5c1d\u8bd5\n\n```cpp\n#include<cstdio>\nusing namespace std;\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);//\u8f93\u5165n\u7684\u503c\uff0cscanf\u6bd4cin\u5feb\u3002\n    int a[n+1];\n    long int sum=0;//\u8bbe\u7f6e\u603b\u6570\u4e3a0\uff0csum\u503c\u6709\u53ef\u80fd\u5f88\u5927\uff0c\u56e0\u6b64\u7528long int\u7c7b\u578b\u3002\n    int i,j;//\u8bbe\u7f6e\u4e24\u4e2a\u6307\u9488\u8fdb\u884c\u9010\u4e00\u5c1d\u8bd5\u3002\n    for(i=1;i<=n;i++)\n    {\n    \tscanf(\"%d\",&a[i]);//\u8bfb\u5165\u3002\n    }\n    for(i=1;i<n;i++)\n    {\n        for(j=i;j<=n;j++)\n        {\n            if(a[i]>a[j])\n            {\n                sum++;\n            }\n        }\n    }\n    printf(\"%d\",sum);//\u8f93\u51fa\u603b\u548c\u3002\n    return 0;\n}\n```\n\u8fd9\u79cd\u65b9\u6cd5\u7b80\u5355\u6613\u61c2\uff0c\u5bb9\u6613\u6267\u884c\u3002\n\n\u73b0\u5728\u6765\u5206\u6790\u8fd9\u79cd\u65b9\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u597d\u7a7a\u95f4\u590d\u6742\u5ea6\u3002\n\u65f6\u95f4\u590d\u6742\u5ea6O(1+n+n*(n+1)/2)\uff0c\u5373\u4e3aO(N^2)\u3002\n\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3an+4\u4e2aint\u578b\u53d8\u91cf\u548c1\u4e2along int\u578b\u53d8\u91cf\uff0c\u5171\u5360\u752822+4n\u4e2a\u5b57\u8282\u3002\n\n\u73b0\u5728\u770b\u65f6\u7a7a\u9650\u5236\uff1a\u65f6\u95f41000ms\uff0c\u7a7a\u95f4128m\u3002\n128m=134217728\u5b57\u8282\uff0cn\u7684\u6700\u5927\u503c\u4e3a33554426\uff0c\u6ee1\u8db3\u9898\u76ee\u8981\u6c42\u3002\n\n\u6211\u4eec\u901a\u5e38\u8ba4\u4e3a\u8ba1\u7b97\u673a\u6bcf\u79d2\u949f\u5927\u7ea6\u8fd0\u884c1000000000\u6b21\u3002\u5f53n=500000\u662f\uff0c\u8fd0\u7b97\u6b21\u6570\u4e3a125000750001\u6b21\uff0c\u8fdc\u5927\u4e8e\u89c4\u5b9a\u65f6\u95f4\u3002\n\n\u6240\u4ee5\u6b64\u601d\u8def\u867d\u7136\u7b80\u5355\uff0c\u4f46\u56e0\u4e3a\u8017\u65f6\u8fc7\u957f\u6240\u4ee5\u4e0d\u80fd\u4f7f\u7528\u3002\n\n### \u601d\u8def 2 \uff1a\u5f52\u5e76\u6392\u5e8f \u6b63\u89e3\n\n#### 1. \u5206\u6cbb\u601d\u60f3\u4ecb\u7ecd\n\n\u5206\u6cbb\uff0c\u5b57\u9762\u4e0a\u7684\u89e3\u91ca\u662f\u201c\u5206\u800c\u6cbb\u4e4b\u201d\uff0c\u5c31\u662f\u628a\u4e00\u4e2a\u590d\u6742\u7684\u95ee\u9898\u5206\u6210\u4e24\u4e2a\u6216\u66f4\u591a\u7684\u76f8\u540c\u6216\u76f8\u4f3c\u7684\u5b50\u95ee\u9898\uff0c\u518d\u628a\u5b50\u95ee\u9898\u5206\u6210\u66f4\u5c0f\u7684\u5b50\u95ee\u9898\u2026\u2026\u76f4\u5230\u6700\u540e\u5b50\u95ee\u9898\u53ef\u4ee5\u7b80\u5355\u7684\u76f4\u63a5\u6c42\u89e3\uff0c\u539f\u95ee\u9898\u7684\u89e3\u5373\u5b50\u95ee\u9898\u7684\u89e3\u7684\u5408\u5e76\u3002\n\n\u5728\u6c42\u89e3\u4e00\u4e2a\u8f93\u5165\u89c4\u6a21\u4e3an\uff0c\u800cn\u7684\u53d6\u503c\u53c8\u5f88\u5927\u7684\u95ee\u9898\u65f6\uff0c\u76f4\u63a5\u6c42\u89e3\u5f80\u5f80\u975e\u5e38\u56f0\u96be\u3002\u8fd9\u65f6\uff0c\u53ef\u4ee5\u5148\u5206\u6790\u95ee\u9898\u672c\u8eab\u6240\u5177\u6709\u7684\u67d0\u4e9b\u7279\u6027\uff0c\u7136\u540e\u4ece\u8fd9\u4e9b\u7279\u6027\u51fa\u53d1\uff0c\u9009\u62e9\u67d0\u4e9b\u9002\u5f53\u7684\u8bbe\u8ba1\u7b56\u7565\u6765\u6c42\u89e3\u3002\u8fd9\u79cd\u65b9\u6cd5\uff0c\u5c31\u662f\u6240\u8c13\u7684\u5206\u6cbb\u6cd5\u3002\n\n\u91c7\u7528\u5206\u6cbb\u6cd5\u89e3\u51b3\u7684\u95ee\u9898\u4e00\u822c\u5177\u6709\u7684\u7279\u5f81\u5982\u4e0b\uff1a\n1. \u95ee\u9898\u7684\u89c4\u6a21\u7f29\u5c0f\u5230\u4e00\u5b9a\u7684\u89c4\u6a21\u5c31\u53ef\u4ee5\u8f83\u5bb9\u6613\u5730\u89e3\u51b3\u3002\n2. \u95ee\u9898\u53ef\u4ee5\u5206\u89e3\u4e3a\u82e5\u5e72\u4e2a\u89c4\u6a21\u8f83\u5c0f\u7684\u6a21\u5f0f\u76f8\u540c\u7684\u5b50\u95ee\u9898\uff0c\u5373\u8be5\u95ee\u9898\u5177\u6709\u6700\u4f18\u5b50\u7ed3\u6784\u6027\u8d28\u3002\n3. \u5408\u5e76\u95ee\u9898\u5206\u89e3\u51fa\u7684\u5b50\u95ee\u9898\u7684\u89e3\u53ef\u4ee5\u5f97\u5230\u95ee\u9898\u7684\u89e3\u3002\n4. \u95ee\u9898\u6240\u5206\u89e3\u51fa\u7684\u5404\u4e2a\u5b50\u95ee\u9898\u4e4b\u95f4\u662f\u72ec\u7acb\u7684\uff0c\u5373\u5b50\u95ee\u9898\u4e4b\u95f4\u4e0d\u5b58\u5728\u516c\u5171\u7684\u5b50\u95ee\u9898\u3002\n\n\u8bbe\u8ba1\u6b65\u9aa4\n\n1. \u5212\u5206\u6b65\uff1a\u628a\u8f93\u5165\u7684\u95ee\u9898\u5212\u5206\u4e3ak\u4e2a\u5b50\u95ee\u9898\uff0c\u5e76\u5c3d\u91cf\u4f7f\u8fd9k\u4e2a\u5b50\u95ee\u9898\u7684\u89c4\u6a21\u5927\u81f4\u76f8\u540c\u3002\n2. \u6cbb\u7406\u6b65\uff1a\u5f53\u95ee\u9898\u7684\u89c4\u6a21\u5927\u4e8e\u67d0\u4e2a\u9884\u5b9a\u7684\u9608\u503cn0\u65f6\uff0c\u6cbb\u7406\u6b65\u7531k\u4e2a\u9012\u5f52\u8c03\u7528\u7ec4\u6210\u3002\n3. \u7ec4\u5408\u6b65\uff1a\u7ec4\u5408\u6b65\u628a\u5404\u4e2a\u5b50\u95ee\u9898\u7684\u89e3\u7ec4\u5408\u8d77\u6765\uff0c\u5b83\u5bf9\u5206\u6cbb\u7b97\u6cd5\u7684\u5b9e\u9645\u6027\u80fd\u81f3\u5173\u91cd\u8981\uff0c\u7b97\u6cd5\u7684\u6709\u6548\u6027\u5f88\u5927\u5730\u4f9d\u8d56\u4e8e\u7ec4\u5408\u6b65\u7684\u5b9e\u73b0\u3002\n\n\u5206\u6cbb\u6cd5\u7684\u5173\u952e\u662f\u7b97\u6cd5\u7684\u7ec4\u5408\u6b65\u3002\u7a76\u7adf\u5e94\u8be5\u600e\u6837\u5408\u5e76\uff0c\u76ee\u524d\u6ca1\u6709\u7edf\u4e00\u7684\u6a21\u5f0f\uff0c\u56e0\u6b64\u9700\u8981\u5bf9\u5177\u4f53\u95ee\u9898\u8fdb\u884c\u5177\u4f53\u5206\u6790\uff0c\u4ee5\u5f97\u51fa\u6bd4\u8f83\u597d\u7684\u5408\u5e76\u7b97\u6cd5\u3002\n\n\u2014\u2014\u2014\u2014\u6458\u81ea\u201c\u767e\u5ea6\u767e\u79d1\u201d\n\n\u60f3\u5fc5\u901a\u8fc7\u4e0a\u9762\u7684\u4ecb\u7ecd\uff0c\u5927\u5bb6\u5bf9\u5206\u6cbb\u601d\u60f3\u5df2\u7ecf\u6709\u6240\u4e86\u89e3\u3002\u4f46\u5982\u4f55\u5b9e\u73b0\u5462\uff1f\n\n#### 2. \u5b9e\u73b0\u601d\u8def\uff1a\n1. \u5212\u5206\n2. \u5408\u5e76\uff08\u7528\u9012\u5f52\u5b9e\u73b0\uff09\n\n```cpp\nvoid partition(int a,int b,...)\n{\n    //\u521d\u59cb\u5316\u3002\n    partition(c,d,...);\n    partition(e,f,...);//\u5206\n    //\u6cbb\uff08\u5408\u5e76\u64cd\u4f5c\u4ee3\u7801\uff09\n    return;\n}\n```\n\n#### 3. \u5f52\u5e76\u64cd\u4f5c\u5b9a\u4e49\u53ca\u539f\u7406\n\n\u5f52\u5e76\u64cd\u4f5c\u6307\u7684\u662f**\u5c06\u4e24\u4e2a\u987a\u5e8f\u5e8f\u5217\u5408\u5e76\u6210\u4e00\u4e2a\u987a\u5e8f\u5e8f\u5217\u7684\u65b9\u6cd5\u3002**\n\n\u5de5\u4f5c\u539f\u7406\uff1a\uff08\u5408\u5e76\u6210\u7531\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u6570\u5217\uff09\n\n\u7b2c\u4e00\u6b65\uff1a\u7533\u8bf7\u7a7a\u95f4\uff0c\u4f7f\u5176\u5927\u5c0f\u4e3a\u4e24\u4e2a\u5df2\u7ecf\u6392\u5e8f\u5e8f\u5217\u4e4b\u548c\uff0c\u8be5\u7a7a\u95f4\u7528\u6765\u5b58\u653e\u5408\u5e76\u540e\u7684\u5e8f\u5217\n\n\u7b2c\u4e8c\u6b65\uff1a\u8bbe\u5b9a\u4e24\u4e2a\u6307\u9488\uff08i\u548cj\uff09\uff0c\u6700\u521d\u4f4d\u7f6e\u5206\u522b\u4e3a\u4e24\u4e2a\u5df2\u7ecf\u6392\u5e8f\u5e8f\u5217\u7684\u8d77\u59cb\u4f4d\u7f6e\n\n\u7b2c\u4e09\u6b65\uff1a\u6bd4\u8f83\u4e24\u4e2a\u6307\u9488\u6240\u6307\u5411\u7684\u5143\u7d20\uff0c\u9009\u62e9\u76f8\u5bf9\u5c0f\u7684\u5143\u7d20\u653e\u5165\u5230\u5408\u5e76\u7a7a\u95f4\uff0c\u5e76\u79fb\u52a8\u6307\u9488\u5230\u4e0b\u4e00\u4f4d\u7f6e\n\n\u91cd\u590d\u6b65\u9aa43\u76f4\u5230\u67d0\u4e00\u6307\u9488\u8d85\u51fa\u5e8f\u5217\u5c3e\n\n\u5c06\u53e6\u4e00\u5e8f\u5217\u5269\u4e0b\u7684\u6240\u6709\u5143\u7d20\u76f4\u63a5\u590d\u5236\u5230\u5408\u5e76\u5e8f\u5217\u5c3e\n\n#### 4. \u5f52\u5e76\u64cd\u4f5c\u5b9e\u73b0\n\n```cpp\nvoid merge(int l,int r)\n{\n    int m=(l+r)/2;//\u5bfb\u627e\u4e2d\u95f4\u503c\uff08\u770b\u4f5c\u4e24\u7ec4\u6570\u636e\u5408\u5e76\u4e3a\u4e00\u4e2a\u6570\u7ec4\uff09\n    int i=l,j=m+1,k=l;\n    while(i<=m && j<=r)\n    {\n    \tif(a[i]>a[j])\n        {\n            b[k]=a[j];\n            k++;\n            j++;\n            }\n        else\n        {\n            b[k]=a[i];\n            k++;\n            i++;\n        }\n    }//\u5bfb\u627e\u6700\u5c0f\u503c\u3002\n    while(i<=m)\n    {\n        b[k]=a[i];\n        k++;\n        i++;\n    }\n    while(j<=r)\n    {\n\t\tb[k]=a[j];\n\t\tk++;\n\t\tj++;\n    }//\u4f59\u4e0b\u7684\u653e\u5165\u6570\u7ec4\u3002\n    for(i=l;i<=r;i++)\n    {\n    \ta[i]=b[i];\n    }//\u8fd8\u539f\u56dea\u6570\u7ec4\u4e2d\u3002\n}\n```\n#### 5. \u5f52\u5e76\u6392\u5e8f\u5b9e\u73b0\n\n\u8981\u5bf9\u4e00\u4e32\u65e0\u5e8f\u6570\u636e\u8fdb\u884c**\u5206**\u7684\u64cd\u4f5c\uff0c\u7ecf\u8fc7\u82e5\u5e72\u6b21\u5206\u540e\u4f1a\u53d8\u6210\u4e00\u4e2a\u4e2a\u5355\u4e2a\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u770b\u6210\u662f**\u6709\u5e8f**\u7684\uff0c\u518d\u5229\u7528\u5f52\u5e76\u64cd\u4f5c**\u5408\u5e76**\u3002\n\n\u5206\uff1a\u9012\u5f52\n\n\u5408\u5e76\uff1a\u5f52\u5e76\u64cd\u4f5c\n\n\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\n\n```cpp\nvoid mergesort(int l,int r)\n{\n    if(l==r)\n    {\n        return;\n    }//\u5224\u65ad\u662f\u5426\u5206\u81f3\u6700\u5c0f\n    int m=(l+r)/2;//\u4e2d\u95f4\u6570\n    merge(l,m);\n    merge(m+1,r);//\u9012\u5f52\u601d\u60f3\n    int i=l,j=m+1,k=l;//\u6307\u9488\n    while(i<=m && j<=r)\n    {\n        if(a[i]>a[j])\n        {\n            b[k]=a[j];\n            k++;\n            j++;\n        }\n        else\n        {\n            b[k]=a[i];\n            k++;\n            i++;\n        }\n    }\n    while(i<=m)\n    {\n        b[k]=a[i];\n        k++;\n        i++;\n    }\n    while(j<=r)\n    {\n        b[k]=a[j];\n        k++;\n        j++;\n    }\n    for(i=l;i<=r;i++)\n    {\n        a[i]=b[i];\n    }//\u5f52\u5e76\u64cd\u4f5c\n}\n```\n#### 6. \u6c42\u89e3\u9006\u5e8f\u5bf9\n\n\u5728\u5f52\u5e76\u6392\u5e8f\u65f6\uff0c\u82e5\u53d1\u73b0\u6709\u524d\u9762\u7684\u6570\uff08a[i]\uff09\u5927\u4e8e\u540e\u9762\u7684\u6570\uff08a[j]\uff09\u65f6,\u53d1\u73b0\u9006\u5e8f\u5bf9\u3002\u6b64\u65f6a[l]~a[m]\u4e3a\u6709\u5e8f\u6570\u5217\uff0c\u5219a[i]~a[m]\u8fd9\u4e00\u6bb5\u7684\u6570\u90fd\u6ee1\u8db3a[k]>a[j]\uff08k=i~m\uff09\u3002\u6b64\u65f6\u6709\uff08m-i+1\uff09\u4e2a\u9006\u5e8f\u5bf9\u3002\u5219\u5728\u9047\u5230\u8fd9\u79cd\u60c5\u51b5\u65f6\u5c06\u7ed3\u679c\u52a0\u4e0a\uff08m-i+1\uff09\u4e2a\u5373\u53ef\u3002\n\n\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include<cstdio>\n#define MAXN 500005//\u8bbe\u7f6e\u6700\u5927\u7684n\u7684\u503c\u3002\nint n,a[MAXN],b[MAXN];//\u5b9a\u4e49\u56fa\u5b9a\u6570\u7ec4\u548c\u7528\u4e8e\u6392\u5e8f\u7684\u4e34\u65f6\u6570\u7ec4\u3002\nlong int ans=0;//ans\u8f83\u5927\u3002\nvoid merge(int l,int r)\n{\n    if(l==r)\n    {\n        return;\n    }\n    int m=(l+r)/2;\n    merge(l,m);\n    merge(m+1,r);//\u9012\u5f52\u8fc7\u7a0b\u3002\n    int i=l,j=m+1,k=l;\n    while(i<=m && j<=r)\n    {\n        if(a[i]>a[j])\n        {\n            b[k]=a[j];\n            k++;\n            j++;\n            ans+=(m-i+1);//\u9006\u5e8f\u5bf9\u6838\u5fc3\u8bed\u53e5\u3002\n        }\n        else\n        {\n            b[k]=a[i];\n            k++;\n            i++;\n        }\n    }\n    while(i<=m)\n    {\n        b[k]=a[i];\n        k++;\n        i++;\n    }\n    while(j<=r)\n    {\n        b[k]=a[j];\n        k++;\n        j++;\n    }\n    for(i=l;i<=r;i++)\n    {\n        a[i]=b[i];\n    }\n}\nint main()\n{\n    scanf(\"%d\",&n);//\u8bfb\u5165n\u3002\n    int i;\n    for(i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);//\u8bfb\u5165\u6570\u5217\u3002\n    }\n    merge(1,n);//\u5f52\u5e76\u6392\u5e8f\u3002\n    printf(\"%ld\",ans);\n    return 0;\n}\n```\n\u6b64\u9898\u89e3\u6bd5\u3002\n\n\u63d0\u4ea4\u4fe1\u606f\uff1a\n\u8bc4\u6d4b\u72b6\u6001  Accepted  100\n\n\u7528\u65f6: 1672ms / \u5185\u5b58: 4668KB\n\n#### \u63a8\u8350\u9898\u76ee\n\nP1116 \u8f66\u53a2\u91cd\u7ec4\n\nP1774 \u6700\u63a5\u8fd1\u795e\u7684\u4eba_NOI\u5bfc\u520a2010\u63d0\u9ad8\uff0802\uff09\n\n\u8fd9\u4e24\u9898\u4e5f\u662f\u7528\u540c\u6837\u7684\u65b9\u6cd5\uff0c\u53ea\u662f\u63cf\u8ff0\u4e0d\u540c\uff0c\u53ef\u4ee5\u8bad\u7ec3\u3002",
        "postTime": 1553339127,
        "uid": 158626,
        "name": "lzcjoe",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u79bb\u6563\u5316\u591a\u9ebb\u70e6\u554a\uff0c\u8fd8\u4e0d\u5982\u52a8\u6001\u5f00\u70b9  \n\u4ee3\u7801\u89e3\u91ca\u5728\u6ce8\u91ca\u91ccQAQ\n```cpp\n//\u601d\u8def\uff1a\u8fd0\u7528\u6743\u503c\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u4ece\u540e\u5f80\u524d\u626b\u6bcf\u6b21\u52a0\u4e0a\u6bd4\u81ea\u5df1\u5c0f\u7684\u4e14\u7f16\u53f7\u9760\u540e\u7684\u70b9\u7684\u4e2a\u6570\u7684\u8d21\u732e\uff08\u7531\u4e8e\u4ece\u540e\u5f80\u524d\u626b\u53ef\u4ee5\u65e0\u89c6\u7f16\u53f7\uff09\n\u7a7a\u95f4&\u65f6\u95f4\uff1anlogn\n#include <bits/stdc++.h>\nusing namespace std;\nint sum[7000009];//\u5f53\u524d\u533a\u95f4\u7684\u70b9\u7684\u4e2a\u6570\u548c\nint lson[7000009],rson[7000009],bh=1;//\u5de6\u513f\u5b50\uff0c\u53f3\u513f\u5b50\uff0c\u5f53\u524d\u70b9\u7684\u4e2a\u6570\nlong long ans;\nint num[500009];\nint n;\nlong long query(long long now,long long k,long long l,long long r)\n{\n\tif(now==0) return 0;//\u5982\u679c\u5f53\u524d\u70b9\u4e0d\u5b58\u5728\uff0c\u5373\u5f53\u524d\u533a\u95f4\u5185\u6ca1\u6709\u70b9\u5b58\u5728\n\tif(l==r) return sum[now];//\u7279\u5224\n\tif(l>=r) return 0;//\u7279\u5224\n\tif(k<=(l+r)>>1) return query(lson[now],k,l,(l+r)>>1);//\u7ee7\u7eed\u5411\u5de6\n\telse return sum[lson[now]]+query(rson[now],k,((l+r)>>1)+1,r);//\u5411\u53f3\u7684\u540c\u65f6\u5c06\u5de6\u8fb9\u7684\u8d21\u732e\u52a0\u4e0a\u53bb\n} \nvoid add(long long now,long long k,long long l,long long r)\n{\n\tif(l==r) sum[now]++;//\u7279\u5224\n\tif(l>=r) return;//\u7279\u5224\n\tif(k<=((l+r)>>1)) \n\t{\n\t\tif(!lson[now]) lson[now]=++bh;//\u5982\u679c\u6ca1\u6709\u5de6\u513f\u5b50\uff0c\u90a3\u5c31\u9020\u4e00\u4e2a\n\t\tadd(lson[now],k,l,(l+r)>>1);\t\n\t}\n\telse\n\t{\n\t\tif(!rson[now]) rson[now]=++bh;//\u5982\u679c\u6ca1\u6709\u53f3\u513f\u5b50\u4e5f\u9020\u4e00\u4e2a\n\t\tadd(rson[now],k,((l+r)>>1)+1,r);\n\t}\n\tsum[now]=sum[lson[now]]+sum[rson[now]];//\u66f4\u65b0\u8d21\u732e\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(long long i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&num[i]);\n\t}\n\tfor(long long i=n;i>=1;i--)\n\t{\n\t\tans+=query(1,num[i]-1,1,1000000000);\n\t\tadd(1,num[i],1,1000000000);\n\t}\n\tprintf(\"%lld\",ans);\n    return 0;\n}\n```\n\u6700\u540e\u795d\u5927\u5bb6NOIP2018RP++\uff08\u5982\u679c\u7ba1\u7406\u5458\u80fd\u591f\u5728\u590d\u8d5b\u524d\u5ba1\u6838\u5b8c\u7684\u8bdd\uff09",
        "postTime": 1541488333,
        "uid": 26199,
        "name": "wenjing233",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "# \u6743\u503c\u7ebf\u6bb5\u6811+\u79bb\u6563\u5316\n\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u79cd\u6c42\u9006\u5e8f\u5bf9\u7684\u65b9\u6cd5\uff1a\u4f7f\u7528\u6743\u503c\u7ebf\u6bb5\u6811\u548c\u79bb\u6563\u5316\u3002\n~~\uff08\u6211\u4e0d\u4f1a\u5f52\u5e76\u6392\u5e8f\uff09~~\n\n#### \u9996\u5148\u4ecb\u7ecd\u6743\u503c\u7ebf\u6bb5\u6811\u3002\n\u6743\u503c\u7ebf\u6bb5\u6811\u7684\u524d\u7f6e\u6280\u80fd\uff1a[\u7ebf\u6bb5\u6811](https://www.cnblogs.com/TheRoadToTheGold/p/6254255.html)\n\n\u5728\u770b\u672c\u9898\u7684\u6743\u503c\u7ebf\u6bb5\u6811\u4e4b\u524d\uff0c\u5982\u679c\u8fd8\u4e0d\u4f1a\u7ebf\u6bb5\u6811\u7684\u540c\u5b66\u4eec\u8bf7\u770b\u4e0a\u9762\u535a\u5ba22333~~\uff08\u535a\u5ba2\u662f\u7f51\u4e0a\u627e\u7684\uff09~~\n\n\u6211\u4eec\u63a5\u4e0b\u6765\u4ecb\u7ecd\u6743\u503c\u7ebf\u6bb5\u6811\u3002\u76f8\u4fe1\u5927\u5bb6\u90fd\u5f88\u719f\u6089\u6876\u6392\u5e8f\u3002**\u6876\u6392\u5e8f\u7684\u601d\u60f3\u5c31\u662f\u7528\u4e00\u4e2a\u6570\u7ec4\u6765\u8bb0\u5f55\u5f85\u6392\u5e8f\u7684\u6bcf\u4e00\u4e2a\u6570\u5b57\u7684\u51fa\u73b0\u6b21\u6570**\uff0c\u7136\u540e\u6309\u987a\u5e8f\u548c\u51fa\u73b0\u6b21\u6570\u5c06\u5b83\u4eec\u8f93\u51fa\u3002\u800c\u6743\u503c\u7ebf\u6bb5\u6811\u505a\u7684\u5176\u5b9e\u548c\u6876\u6392\u5e8f\u5f88\u76f8\u4f3c\u3002\u6743\u503c\u7ebf\u6bb5\u6811\u7ef4\u62a4\u7684\u5e8f\u5217\u76f8\u5f53\u4e8e\u4e00\u4e2a\u6876\u6392\u5e8f\u7684\u6240\u7528\u7684\u5e8f\u5217a[i]\uff0c\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u6570\u5b57\u7684\u51fa\u73b0\u6b21\u6570\u3002\u4f8b\u5982\uff0ca[3]\u8bb0\u5f553\u7684\u51fa\u73b0\u6b21\u6570\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6c42\u51fa\u5927\u5c0f\u5728\u533a\u95f4[l,r]\u4e4b\u95f4\u7684\u6570\u4e00\u5171\u51fa\u73b0\u7684\u6b21\u6570\u4e86\u3002\u5b83\u5c31\u662fa[i]\u7684\u533a\u95f4\u548c\uff0c\u800c\u8fd9\u662f\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u6765\u5904\u7406\u7684\u3002\n\n#### \u7136\u540e\u6211\u4eec\u6765\u8bf4\u4e00\u8bf4\u79bb\u6563\u5316\u3002\n\u6211\u4eec\u5148\u770b\u8fd9\u9053\u9898\u7684\u6570\u636e\u8303\u56f4qvq\n\n# 1e9!!!!!\n\u76f4\u63a5\u8bb0\u5f55\u6bcf\u4e2a\u6570\u5b57\u7684\u51fa\u73b0\u6b21\u6570\u4e00\u5b9a\u4f1a\u5bfc\u81f4\u7a7a\u95f4\u7206\u70b8\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u9700\u8981\u7528\u5230\u79bb\u6563\u5316\u3002\u79bb\u6563\u5316\u5c31\u662f\u5728\u4e0d\u6539\u53d8\u6570\u636e\u5927\u5c0f\u5173\u7cfb\u7684\u524d\u63d0\u4e0b\uff0c\u7f29\u5c0f\u6570\u636e\u8303\u56f4\uff0c\u4ee5\u8fbe\u5230\u8282\u7ea6\u65f6\u95f4\u548c\u7a7a\u95f4\u7684\u76ee\u7684\u3002\u5982\u4f55\u79bb\u6563\u5316\uff1f\u8bf7\u5148\u770b\u4e00\u7ec4\u4f8b\u5b50\u3002\n```cpp\n19284564156 15120 10200 752999\n```\n\u8fd9\u7ec4\u6570\u636e\u53ef\u4ee5\u88ab\u79bb\u6563\u5316\u6210\u8fd9\u4e2a\u6837\u5b50\uff1a\n```cpp\n4 2 1 3\n```\n\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u5e76\u6ca1\u6709\u6539\u53d8\u6570\u5b57\u95f4\u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u4f46\u6211\u4eec\u628a\u6570\u636e\u7684\u8303\u56f4\u7f29\u5c0f\u4e86\u5f88\u591a\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u6743\u503c\u7ebf\u6bb5\u6811\u6765\u5904\u7406~~\u800c\u4e0d\u4f1a\u7206\u7a7a\u95f4~~\u4e86qvq\u3002\n\u5177\u4f53\u7684\u79bb\u6563\u5316\u64cd\u4f5c\u662f\u5f00\u4e00\u4e2a\u8f85\u52a9\u6570\u7ec4\uff0c\u5c06\u5176sort\u4e00\u904d\uff0c\u7136\u540e\u7528unique\u53bb\u91cd\uff08STL\u5927\u6cd5\u597d\uff09\uff0c\u518d\u5728\u539f\u6570\u7ec4\u4e2d\u6539\u53d8\u6570\u7684\u5927\u5c0f\u3002\u5904\u7406\u597d\u4e4b\u540e\u5c31\u53ef\u4ee5\u6109\u5feb\u5730\u4e0a\u7ebf\u6bb5\u6811\u5566\uff01\n\n#### \u672c\u9898\u7684\u601d\u8def\n\u5176\u5b9e\u5f88\u7b80\u5355\u3002\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u67e5\u8be2\u5927\u5c0f\u5728[l,r]\u4e4b\u95f4\u7684\u6570\u51fa\u73b0\u7684\u6b21\u6570\u3002\u6211\u4eec\u5148\u5efa\u4e00\u9897\u5de8\u5927\uff08bushi\uff09\u7684\u7a7a\u7ebf\u6bb5\u6811\uff0c\u7ef4\u62a4\u533a\u95f4[1,1e5]\u3002\u904d\u5386\u7ed9\u51fa\u7684\u6570\u7ec4\uff0c\u7528ans\u8bb0\u5f55\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\uff0c\u6bcf\u6b21\u9047\u5230\u4e00\u4e2a\u6570\uff0c\u5c31\u7edf\u8ba1\u76ee\u524d\u7ebf\u6bb5\u6811\u4e2d\u6bd4\u8fd9\u4e2a\u6570\u5927\u7684\u6570\u5b57\u4e2a\u6570\uff0c\u7136\u540e\u66f4\u65b0ans\uff0c\u518d\u628a\u8fd9\u4e2a\u6570\u63d2\u5230\u7ebf\u6bb5\u6811\u91cc\u3002\n\n\u4e0a\u4ee3\u7801\uff1a\n\uff08\u8bb0\u5f97\u5f00long long\uff0c\u4e0d\u7136\u53ea\u670950\u5206qwq\uff09\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#define maxn 500050\n#define ll long long\nusing namespace std;\n\nint n;\nll a[maxn],b[maxn];\nint sum[maxn<<2];\nll ans=0;\n\ninline ll read()\n{\n\tll f=1,x=0;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9')\n\t{\n\t\tif(ch=='-')f=-1;\n\t\tch=getchar();\n\t} \n\twhile(ch>='0'&&ch<='9')\n\t{\n\t\tx=x*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn f*x;\n}\n\nvoid build(int k,int l,int r)\n{\n\tsum[k]=0;\n\tif(l==r)return;\n\tint mid=(l+r)>>1;\n\tbuild(k<<1,l,mid);\n\tbuild(k<<1|1,mid+1,r);\n}\n\nvoid update(int k,int l,int r,int x)\n{\n\tif(l==r)\n\t{\n\t\tsum[k]++;\n\t\treturn;\n\t}\n\tint mid=(l+r)>>1;\n\tif(x<=mid)update(k<<1,l,mid,x);\n\telse update(k<<1|1,mid+1,r,x);\n\tsum[k]=sum[k<<1]+sum[k<<1|1];\n}\n\nint query(int k,int l,int r,int x,int y)\n{\n\tif(x<=l&&y>=r)\n\t{\n\t\treturn sum[k];\n\t}\n\tint mid=(l+r)>>1;\n\tint res=0;\n\tif(x<=mid)res+=query(k<<1,l,mid,x,y);\n\tif(y>mid)res+=query(k<<1|1,mid+1,r,x,y);\n\treturn res;\n}\n\nsigned int main()\n{\n\tbuild(1,1,maxn);\n\tn=read();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\ta[i]=b[i]=read();\n\t}\n\tsort(b+1,b+1+n);\n\tint len=unique(b+1,b+n+1)-b-1;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint pos=lower_bound(b+1,b+n+1,a[i])-b;\n\t\ta[i]=pos;\n\t}//\u79bb\u6563\u5316\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint x=a[i];\n\t\tans+=query(1,1,maxn,x+1,maxn);\n\t\tupdate(1,1,maxn,x);\n\t} \n\tprintf(\"%lld\",ans);\n\t\n\treturn 0;\n}\n```",
        "postTime": 1541417602,
        "uid": 116592,
        "name": "Black_Gzombie",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u672c\u849f\u84bb\u53d1\u73b0\u6b64\u989880%\u7684\u9898\u89e3\u90fd\u56e0\u6570\u636e\u52a0\u5f3a\u800c\u5931\u6548\u4e86\uff01\uff01\uff01\n\n\u6240\u4ee5\u8bf4\n\n## \u6b64\u9898\u5927\u90e8\u5206\u9898\u89e3\u5bf9\u65b0\u624b\u6781\u5ea6\u4e0d\u53cb\u597d\n# \u79bb\u6563\u5316\u8981\u5224\u91cd\uff01\uff01\uff01\n\uff08\u6811\u72b6\u6570\u7ec4\u90e8\u5206\u5c31\u4e0d\u8bb2\u4e86\uff0c\u5176\u4ed6\u9898\u89e3\u90fd\u5f88\u6e05\u695a\uff0c\u800c\u4e14\u4e0d\u4f1a\u6811\u72b6\u6570\u7ec4\u7684\u4eba\u4e5f\u4e0d\u4f1a\u6765\u5237\u8fd9\u9053\u9898\uff09 \u518d\u6b21\u91cd\u70b9\u5f3a\u8c03\uff1a\u6b64\u9898\u79bb\u6563\u5316\u8981\u5224\u91cd\n~~~cpp\n#include<bits/stdc++.h>\n#include<algorithm>\n#define  ll long long\nusing namespace std;\nstruct xx\n{\n    ll w,nun;\n};\nll n,tree[600005],sum=0,c[600005];\nxx a[600005];\ninline ll cmp(xx aa,xx bb)\n{\n    return aa.w>bb.w;//\u521d\u6b65\u79bb\u6563\u5316\uff08\u672a\u5224\u91cd\uff09\n}\ninline ll lowbit(ll x)\n{\n    return x&-x;\n}\ninline void add(ll x,ll y)\n{\n    while(x<=n)\n    {\n        tree[x]+=y;\n        x+=lowbit(x);\n    }\n}\ninline ll findd(ll x)\n{\n    ll ans=0;\n    while(x>0)\n    {\n        ans+=tree[x];\n        x-=lowbit(x);\n    }\n    return ans;\n}\nint main()\n{\n    scanf(\"%lld\",&n);\n    for(register ll i=1;i<=n;i++)\n      {\n          scanf(\"%lld\",&a[i].w);\n          a[i].nun=i;\n      }\n    sort(a+1,a+n+1,cmp);\n    for(register ll i=1;i<=n;i++)\n    {\n        if(a[i].w!=a[i-1].w||i==1) \n          c[a[i].nun]=i;\n        else c[a[i].nun]=c[a[i-1].nun];\n\n        //\u6b64\u5904\u5c31\u662f\u5224\u91cd\u64cd\u4f5c\uff01\uff01\uff01\n        //\u628a\u91cd\u590d\u7684\u6570\u5b57\u6807\u8bb0\u7f6e\u6210\u76f8\u540c\uff01\uff01\uff01\n        //\u975e\u5e38\u91cd\u8981\uff01\u4e0d\u52a0\u5c31\u53ea\u670935\u5206\uff01\uff01\n    }\n    for(register ll i=1;i<=n;i++)\n    {\n        sum+=findd(c[i]-1);\n        add(c[i],1);\n    }\n    printf(\"%lld\\n\",sum);\n    return 0;\n}\n~~~",
        "postTime": 1540386632,
        "uid": 28190,
        "name": "\u4f1a\u6253\u6c99\u5305\u7684\u732b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1908"
    },
    {
        "content": "\u6211\u5199\u8fd9\u7bc7\u9898\u89e3\uff0c\u53ea\u662f\u4e3a\u4e86\u8ba9\u5927\u5bb6\u660e\u767d\uff0c\u5f52\u5e76\u6392\u5e8f\u6c42\u9006\u5e8f\u5bf9\u7684\u539f\u7406\u3002  \n\u5f52\u5e76\u6392\u5e8f\u4e0d\u7528\u591a\u8bf4\uff0c\u7f6e\u9876\u5927\u4f6c\u90fd\u8bb2\u8fc7\u4e86\uff0c\u6211\u6765\u8bb2\u4e00\u4e0b\u539f\u7406\u3002\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u56fe\uff0c\u6211\u4eec\u5047\u8bbe\u5de6\u8fb9\u7684\u6570\u7ec4\u548c\u53f3\u8fb9\u7684\u6570\u7ec4\u90fd\u662f\u6709\u5e8f\u7684\uff08\u6392\u5b8c\u5e8f\u4e86\uff09\uff0c\u4ed6\u4eec\u662f\u4e00\u4e2a\u66f4\u5927\u7684\u6570\u7ec4\u7684\u524d\u534a\u6bb5\u548c\u540e\u534a\u6bb5\n\n\n![](https://cdn.luogu.com.cn/upload/pic/73919.png)\n\n\u6211\u4eec\u5c065\u4e0e6\u8fdb\u884c\u6bd4\u8f83\uff0c6\u6bd45\u5927\uff0c\u597d\uff0c\u653e\u5165r\u4e2d\uff0c\u800c\u4e146\u6bd45\u5927\uff0c\u90a3\u4e48\u4e5f\u5c31\u662f\u8bf46\u6bd45\u4e4b\u540e\u7684\u6240\u6709\u5143\u7d20\u90fd\u8981\u5927\uff0c\u6240\u4ee5ans+=mid+1-s\n\u4e4b\u540e\u91cd\u590d\u6b64\u64cd\u4f5c\uff0c\u7b54\u6848\u4e5f\u5c31\u51fa\u6765\u5566\n\n\u4ec0\u4e48\uff1f\u6ca1\u6709\u56fe\u4e86\uff1f~~\u5176\u5b9e\u6709\uff0c\u4f46\u662f\u53ea\u6709\u806a\u660e\u4eba\u624d\u770b\u5f97\u5230~~\n\u597d\u5427\u5c31\u662f\u61d2\u5f97\u8d34\u4e86\uff0c\u4e0d\u8fc7\u5927\u5bb6\u80af\u5b9a\u5df2\u7ecf\u61c2\u4e86\u5427\n\n\n## code\n```cpp\n#include<iostream>\nusing namespace std;\nint a[500009],r[500009];\nlong long ans;\nvoid msort(int s,int t){\n\tif(s==t)return;\n\tint mid=(s+t)/2;\n\tmsort(s,mid);\n\tmsort(mid+1,t);\n\tint i=s,j=mid+1,k=s;\n\twhile(i<=mid&&j<=t){\n\t\tif(a[i]<=a[j]){\n\t\t   r[k]=a[i];\n\t\t   i++;\n\t\t   k++;\n\t\t}else{\n\t\t\tr[k]=a[j];\n\t\t\tj++;\n\t\t\tk++;\n\t\t\tans+=mid-i+1;\n\t\t}\n\t}\n\twhile(i<=mid){\n\t\tr[k]=a[i];\n\t\tk++;\n\t\ti++;\n\t}\n\twhile(j<=t){\n\t\tr[k]=a[j];\n\t\tk++;\n\t\tj++;\n\t}\n\tfor(int i=s;i<=t;i++){\n\t\ta[i]=r[i];\n\t}\n}\nint main(){\n\tint n;\n\tcin>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>a[i];\n\t}\n\tmsort(1,n);\n//\tfor(int i=1;i<=n;i++){\n//\t\tcout<<a[i]<<\" \";\n//\t}\n\tcout<<ans;\n\treturn 0;\n}\n```\n",
        "postTime": 1566439145,
        "uid": 39604,
        "name": "\u8840\u8272\u5fc3\u9b54",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "# \u5f53\u8fd9\u9053\u9898\u88abchen_zhe\u52a0\u5f3a\u540e\u3002\u6ca1\u9519\uff01\u5c31\u6210\u4e86\u6811\u72b6\u6570\u7ec4\u79bb\u6563\u5316\u6a21\u677f\u9898\uff01\uff01\uff01\n### PS\uff1a\u867d\u7136\u5df2\u7ecf50\u591a\u7bc7\u4e86\u4f46\u6211\u8ba4\u4e3a\u90a3\u4e9bdalao\u7684\u6811\u72b6\u6570\u7ec4\u5df2\u7ecf\u5931\u53bb\u4e86getSum Update \u7684\u7cbe\u9ad3\u3002\u3002\u840c\u65b0\u61c2\u4e0d\u4e86\u554a\n``` cpp\n\n#include<cstdio> \n#include<iostream> \n#include<cstring> \n#include<algorithm>\nusing namespace std; \n#define maxn 1111111 \n//typedef long long ll; \nstruct node\n{\n\tint val,pos;\n} a[maxn]; int b[maxn]; int n;\nint cmp(node a,node b)\n{\n\tif(a.val!=b.val)//\u503c\u4e0d\u540c\u6309\u6570\u503c\u5347\u5e8f\u6392\n\treturn a.val<b.val;\n\treturn a.pos<b.pos;//\u503c\u76f8\u540c\u5219\u6309\u4f4d\u7f6e\u5347\u5e8f\u6392\n}\nint getsum(int x)//\u6c42\u524d\u7f00\u548c\n{\n\tint sum=0; while(x>0)\n\t{\n\t\tsum+=b[x]; x-=x&-x;\n\t}\n\treturn sum;\n}\nvoid update(int x,int v)//\u5355\u70b9\u66f4\u65b0\n{\n\twhile(x<=maxn)\n\t{\n\t\tb[x]+=v; x+=x&-x;\n\t}\n}\nint main()\n{\n\t//while(scanf(\"%d\",&n)!=EOF)\n\t//{\n\t\tscanf(\"%d\",&n);\n\t\tmemset(b,0,sizeof(b));//\u521d\u59cb\u5316\n\t\tfor(int i=0;i<n;i++)\n\t\t{\n\t \t\tscanf(\"%d\",&a[i].val);\n\t\t\ta[i].pos=i+1;//\u8bb0\u5f55\u6bcf\u4e2a\u503c\u7684\u4f4d\u7f6e\n\t\t}\n\t\tsort(a,a+n,cmp);//\u6392\u5e8f\n\t\tlong long ans=0;\n\t\tfor(int i=n-1;i>=0;i--)//\u5012\u7740\u63d2\u70b9\n\t\t{\n\t\t\tans+=getsum(a[i].pos);\n\t\t\tupdate(a[i].pos,1);\n\t\t}\n\t\t//printf(\"%d\\n\",ans);\n\t\tcout<<ans;\n\t//}\n\treturn 0;\n}\n\n\n\n\n\n\n```\n\n",
        "postTime": 1543654364,
        "uid": 104458,
        "name": "\u6211\u5f88\u8fa3ji\u770b\u5934\u50cf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "### \u5148\u770b\u4e00\u9053\u4f8b\u9898\n[\u9006\u5e8f\u5bf9](https://www.luogu.org/problem/P1908 \"\u9006\u5e8f\u5bf9\")\n\u8fd9\u5c31\u5f88\u663e\u7136 \u867d\u7136\u4e00\u5f00\u59cb\u53ea\u4f1a\u5f52\u5e76\u6392\u5e8f\u6c42\n### \u6811\u72b6\u6570\u7ec4\u600e\u4e48\u6c42\u9006\u5e8f\u5bf9\u5462\uff1f\n\u770b\u4e00\u7ec4\u4f8b\u5b50\u540e\u4f60\u4e00\u5b9a\u5c31\u660e\u767d\u4e86\n![file](http://101.200.56.58/wp-content/uploads/2019/10/image-1571974157217.png)\n##### \u540e\u7f00\u548c\u7684\u8bdd \u5c31\u7b49\u4e8e\u603b\u548c\u51cf\u53bb\u524d\u7f00\u548c\n### \u5173\u4e8e\u79bb\u6563\u5316\u7684\u95ee\u9898\n\u6211\u4eec\u518d\u6765\u770b\u4e00\u7ec4\u4f8b\u5b50\n![file](http://101.200.56.58/wp-content/uploads/2019/10/image-1571974334007.png)\n\u975e\u5e38\u663e\u7136 \u4e0a\u9762\u7684\u9006\u5e8f\u5bf9\u6570\u548c\u4e0b\u9762\u7684\u76f8\u7b49\n### code\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#pragma GCC optimize(3)\n#define int long long \nint c[600100];\nint data[600100];\nint lowbit(int i) {return i&(-i);}\t\nint n,ans=0,maxi=0;\nstruct zz\n{\n\tint i,data;\n}d[500010];\nvoid insert(int i,int ci)\n{\n\tfor(;i<=n;i+=lowbit(i))\n\t{\n\t\tc[i]+=ci;\n\t}\n}\nint query(int i)\n{\n\tint sum=0;\n\tfor(;i>=1;i-=lowbit(i))\n\t{\n\t\tsum+=c[i];\n\t}\n\treturn sum;\n}\nbool cmp(zz a,zz b)\n{\n\tif(a.data==b.data)\n\t\treturn a.i<b.i; \n\treturn a.data<b.data;\n}\nsigned main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>d[i].data;\n\t\td[i].i=i;\n\t}\n\tsort(d+1,d+n+1,cmp);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tinsert(d[i].i,1);\n\t\tans+=i-query(d[i].i);\n\t}\n\tcout<<ans;\n} \n```",
        "postTime": 1571974429,
        "uid": 58064,
        "name": "COUPDETAT",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "```\n/*\n\t\u8c8c\u4f3c\u662f\u9898\u89e3\u91cc\u552f\u4e00\u7684\u4e00\u7bc7\u7ebf\u6bb5\u6811\u9898\u89e3\u3002\n\t\u672c\u6765\u662f\u8981\u505a\u52a8\u6001\u9006\u5e8f\u5bf9\u7684\uff0c\u4f46\u662f\u6211\u4e0d\u4f1acdq\u5206\u6cbb\uff0c\u6811\u72b6\u6570\u7ec4\u548c\u5206\u5757\u4e0d\u719f\u6089\uff0c\u6240\u4ee5\u60f3\u5199\u7ebf\u6bb5\u6811\u5957\u7ebf\u6bb5\u6811\u3002\n\t\u7136\u540e\u5c31\u5148\u6765\u7528\u7ebf\u6bb5\u6811\u505a\u4e00\u4e0b\u4e0d\u52a8\u6001\u7684\u3002\n\t5\u500d\u7a7a\u95f4\u6d88\u8017\uff0c\u8981sort\u4e24\u8fb9\uff0c\u6bd4\u8f83\u6162\uff0c\u8dd1\u4e86\u8fd1300ms \n\t\n\t\u8981\u79bb\u6563\u5316 \n\t\u6307\u9488+\u52a8\u6001\u5f00\u70b9\n*/\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n\nconst int N=4e4+5;\n\nint n,a,ans;\nstruct Num\n{\n\tint num,id;\n}num[N],aha[N];\nstruct Node\n{\n\tNode *lson,*rson;\n\tint sum;\n}node[N<<2];\n\ntypedef Node* Tree;\nTree now_node,root,null;\n\nbool cmp1(Num a,Num b)\n{\n\treturn a.num<b.num;\n}\n\nbool cmp2(Num a,Num b)\n{\n\treturn a.id<b.id;\n}\n\nvoid init()\n{\n\tnode->lson=node->rson=node;\n\tnow_node=null=root=node;\n}\n\nint read()\n{\n\tchar c=getchar();int num=0,f=1;\n\tfor(;!isdigit(c);c=getchar());\n\tfor(;isdigit(c);c=getchar())\n\t\tnum=num*10+c-'0';\n\treturn num;\n}\n\nTree newNode()\n{\n\t++now_node;\n\tnow_node->lson=now_node->rson=null;\n\treturn now_node;\n}\n\nint query(Tree &root,int l,int r,int L,int R)\n{\n\tif(root==null)\n\t\treturn 0;\n\tif(L<=l&&r<=R)\n\t\treturn root->sum;\n\tint mid=l+r>>1;\n\tint ret=0;\n\tif(L<=mid)\n\t\tret+=query(root->lson,l,mid,L,R);\n\tif(mid<R)\n\t\tret+=query(root->rson,mid+1,r,L,R);\n\treturn ret;\n}\n\nvoid modify(Tree &root,int l,int r,int pos)\n{\n\tif(root==null)\n\t\troot=newNode();\n\tif(l==r)\n\t{\n\t\troot->sum=1;\n\t\treturn;\n\t}\n\tint mid=l+r>>1;\n\tif(pos<=mid)\n\t\tmodify(root->lson,l,mid,pos);\n\telse\n\t\tmodify(root->rson,mid+1,r,pos);\n\troot->sum=root->lson->sum+root->rson->sum;\n}\n\nint main()\n{\n\t//freopen(\"testdata.in\",\"r\",stdin);\n\tinit();\n\tn=read();\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tnum[i].num=read();\n\t\tnum[i].id=i;\n\t\taha[i].id=i;\n\t}\n\tsort(num+1,num+n+1,cmp1);\n\tfor(int i=1;i<=n;++i)\t//\u79bb\u6563\u5316\uff0c\u6309\u5927\u5c0f\u7f16\u65b0\u7684\u7f16\u53f7 \n\t\taha[num[i].id].num=i;\n\tsort(aha+1,aha+n+1,cmp2);\t//\u6309\u8f93\u5165\u987a\u5e8f\u6392\u5e8f\uff0c\u8fd8\u539f\u539f\u5e8f\u5217 \n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tans+=query(root,1,n,aha[i].num,n);\t//\u67e5\u627e\u5728\u5b83\u4e4b\u524d\u7684\u6bd4\u5b83\u5927\u7684\u6570 \n\t\tmodify(root,1,n,aha[i].num);\t//\u6807\u8bb0\u4e00\u4e0b\u8fd9\u4e2a\u6570\u5df2\u7ecf\u51fa\u73b0 \n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1519378677,
        "uid": 39886,
        "name": "Drifterming",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "## \u3010\u6811\u72b6\u6570\u7ec4\u3011\u9006\u5e8f\u5bf9\n#### [\u9898\u76ee](https://www.luogu.com.cn/problem/P1908)\n\n### **\u9898\u76ee\u89e3\u6790**\n \u9006\u5e8f\u5bf9\u53ef\u4ee5\u7528\u5f52\u5e76\u6392\u5e8f\u548c\u6811\u72b6\u6570\u7ec4\uff1a\n \n\u5f52\u5e76\u6392\u5e8f\u5c31\u4e0d\u7528\u8bb2\u4e86\uff0c\u6211\u4eec\u6765\u8bb2\u8bb2**\u6811\u72b6\u6570\u7ec4**\n### **\u7b97\u6cd5\u7b80\u4ecb**\uff1a\n#### **\u6811\u72b6\u6570\u7ec4**\uff1a\n \u6811\u72b6\u6570\u7ec4(Binary Indexed Tree(B.I.T), Fenwick Tree)\u662f\u4e00\u4e2a\u67e5\u8be2\u548c\u4fee\u6539\u590d\u6742\u5ea6\u90fd\u4e3a$\\log{n}$\u7684\u6570\u636e\u7ed3\u6784\u3002\u4e3b\u8981\u7528\u4e8e\u67e5\u8be2\u4efb\u610f\u4e24\u4f4d\u4e4b\u95f4\u7684\u6240\u6709\u5143\u7d20\u4e4b\u548c\uff0c\u4f46\u662f\u6bcf\u6b21\u53ea\u80fd\u4fee\u6539\u4e00\u4e2a\u5143\u7d20\u7684\u503c\uff1b\u7ecf\u8fc7\u7b80\u5355\u4fee\u6539\u53ef\u4ee5\u5728$\\log{n}$\u7684\u590d\u6742\u5ea6\u4e0b\u8fdb\u884c\u8303\u56f4\u4fee\u6539\u3002\n\n\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\uff08\u7b97\u6cd5\uff09\u5e76\u6ca1\u6709C++\u548cJava\u7684\u5e93\u652f\u6301\uff0c\u9700\u8981\u81ea\u5df1\u624b\u52a8\u5b9e\u73b0\u3002\u5728Competitive Programming\u7684\u7ade\u8d5b\u4e2d\u88ab\u5e7f\u6cdb\u7684\u4f7f\u7528\u3002\u6811\u72b6\u6570\u7ec4\u548c\u7ebf\u6bb5\u6811\u5f88\u50cf\u3002\n#### \u5982\u4e0b\u56fe\uff0c\u5c31\u662f\u4e00\u79cd\u6811\u72b6\u6570\u7ec4\uff1a\n ![](https://gss3.bdstatic.com/7Po3dSag_xI4khGkpoWK1HF6hhy/baike/c0%3Dbaike92%2C5%2C5%2C92%2C30/sign=a565892f4790f60310bd9415587bd87e/0dd7912397dda14482d369acbfb7d0a20df486d1.jpg)\n##### \u5047\u8bbe\u6570\u7ec4$a_1 a_2 \\ldots a_n$\uff0c\u90a3\u4e48\u67e5\u8be2$a_1$ $+$ $ \\ldots$ $+$ $a_n$\u7684\u65f6\u95f4\u662f$\\log_2{n}$\u7ea7\u522b\u7684\uff0c\u800c\u4e14\u662f\u4e00\u4e2a\u5728\u7ebf\u7684\u6570\u636e\u7ed3\u6784\uff0c\u652f\u6301\u968f\u65f6\u4fee\u6539\u67d0\u4e2a\u5143\u7d20\u7684\u503c\uff0c\u590d\u6742\u5ea6\u4e5f\u4e3a$\\log_2{n}$\u7ea7\u522b\u3002\n##### \u6765\u89c2\u5bdf\u8fd9\u4e2a\u56fe\uff1a\n \u4ee4\u8fd9\u68f5\u6811\u7684\u7ed3\u70b9\u7f16\u53f7\u4e3a$C_1$,$C_2$ $\\ldots$ $C_n$\u3002\u4ee4\u6bcf\u4e2a\u7ed3\u70b9\u7684\u503c\u4e3a\u8fd9\u68f5\u6811\u7684\u503c\u7684\u603b\u548c\uff0c\u90a3\u4e48\u5bb9\u6613\u53d1\u73b0\uff1a\n##### $C_1 = A_1$\n##### $C_2 = A_1 + A_2$\n##### $C_3 = A_3$\n##### $C_4 = A_1 + A_2 + A_3 +A_4$\n##### $\\ldots$\n##### $C_{16} = A_1 + A_2 + A_3 + A_4 + A_5 + A_6 + A_7 + A_8 + A_9 + A_{10} + A_{11} + A_{12} + A_{13} + A_{14} + A_{15} + A_{16}$\n##### \u8fd9\u91cc\u6709\u4e00\u4e2a\u6709\u8da3\u7684\u6027\u8d28\uff1a\n#### \u8bbe\u8282\u70b9\u7f16\u53f7\u4e3a$x$\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8282\u70b9\u7ba1\u8f96\u7684\u533a\u95f4\u4e3a$2^k$\uff08\u5176\u4e2d$k$\u4e3a$x$\u4e8c\u8fdb\u5236\u672b\u5c3e0\u7684\u4e2a\u6570\uff09\u4e2a\u5143\u7d20\u3002\u56e0\u4e3a\u8fd9\u4e2a\u533a\u95f4\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5fc5\u7136\u4e3a$A_x$\uff0c\n \u6240\u4ee5\u5f88\u660e\u663e\uff1a$C_n$ $=$ $A_($n$ $\u2013$ $2^k$ $+$ $1$)$  $+$ $\\ldots$ $+$ $A_n$\n##### \u7b97\u8fd9\u4e2a$2^k$\u6709\u4e00\u4e2a\u5feb\u6377\u7684\u529e\u6cd5\uff0c\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u5982\u4e0b\u5373\u53ef\uff1a\n```cpp\nint lowbit(int x){\nreturn x&-x;\n}\n```\n### **\u4ee3\u7801\u5b9e\u73b0**:\n```cpp\n#include<cstdio>\n#include<algorithm> \nusing namespace std;\nint n,m,a[500039],x,y,z,s[500039],fs[500039];\nlong long ans,f[500039],tot;\ninline void read(int &x) {\n\tx=0;char s=getchar();int fs=1;\n\twhile(s<'0'||s>'9') {\n    if(s=='-')fs=-1;\n    s=getchar();\n    }\n\twhile(s>='0'&&s<='9') x=(x<<3)+(x<<1)+(s^48),s=getchar();\n\tx*=fs;\n}\ninline void get(int x,int z){\n\twhile(x<=n)f[x]+=z,x+=x&-x;\n    }\ninline long long find(int x){\n\ttot=0;\n\twhile(x)tot+=f[x],x-=x&-x;\n\treturn tot;\n}\ninline bool cmp(int x,int y){return a[x]<a[y];}\nint main(){system(\"title \\\"\u3010\u6811\u72b6\u6570\u7ec4\u3011\u9006\u5e8f\u5bf9\\\"\");\n\tregister int i;\n\tread(n);\n\tfor(i=1;i<=n;i++)read(a[i]),s[i]=i;\n\tsort(s+1,s+n+1,cmp);\n\tfs[s[1]]=1;\n\tfor(i=2;i<=n;i++){\n\t\tif(a[s[i]]==a[s[i-1]]) fs[s[i]]=fs[s[i-1]];\n\t\telse fs[s[i]]=i;\n\t}\n\tfor(i=1;i<=n;i++){\n\t\tans+=find(n)-find(fs[i]);\n\t\tget(fs[i],1);\n\t}\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1576843529,
        "uid": 170603,
        "name": "chaichunyang",
        "ccfLevel": 5,
        "title": "P1908\u9898\u89e3"
    },
    {
        "content": "\u5f53\u65f6\u4ee5\u524d\u7528\u7684\u662f\u5f52\u5e76\u6392\u5e8f\u505a\u7684\uff0c\u4eca\u5929\u5b66\u4e86\u7ebf\u6bb5\u6811\uff0c\u4e8e\u662f\u5c31\u6709\u4e86\u63a5\u4e0b\u6765\u7684\u6545\u4e8b\u3002\u3002\u3002\n\n\u8be6\u89e3\u89c1\u4ee3\u7801\uff1a\n\n**\u5f52\u5e76\u6392\u5e8f**\uff1a\n\n```c\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\nusing namespace std;\nint a[500005], b[500005], n;\nlong long ans;\n\nvoid msort(int l, int r)\n{\n\tint mid = (l + r) >> 1;\n\tif (l >= r)\treturn;\n\tmsort(l, mid); msort(mid + 1, r);\n\t\n\tint i = l, j = mid + 1, k = 0;\n\t\n\twhile(i <= mid && j <= r)\n\t\tif (a[i] > a[j]){\n\t\t\t\n\t\t\tans += mid - i + 1;\n\t\t\t\n\t\t\tb[k++] = a[j++];\n\t\t\t\n\t\t}else\tb[k++] = a[i++];\n\t\t\n\twhile (i <= mid)\tb[k++] = a[i++];\n\twhile (j <= r)\tb[k++] = a[j++];\n\tfor (i = 0; i < k; i++)\ta[l + i] = b[i];\n}\n\nint main()\n{\n\tcin >> n;\n\tfor (int i = 1; i<=n; i++)\tscanf(\"%d\", &a[i]);\n\tmsort(1, n);\n\tcout << ans;\n\treturn 0;\n}\n```\n\n\u524d\u9762\u7684\u90fd\u662f\u6a21\u677f\uff0c\u5173\u952e\u8fd8\u662f\u8981\u4f1a\u79bb\u6563\u5316\u3002\n\n\u79bb\u6563\u5316\uff1a\u76ee\u7684\u662f\u4e3a\u4e86\u51cf\u5c11\u7a7a\u95f4\u590d\u6742\u5ea6\u3002\n\n~~\u4ee4\u4eba\u7a92\u606f\u7684\u79bb\u6563\u5316~~\n\n**\u7ebf\u6bb5\u6811**\uff1a\n\n```c\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<cmath>\n#include<set>\n#include<cstring>\nusing namespace std;\n//head\n//\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(nlogn)\n//\u5b8f\u5b9a\u4e49--->\u5199\u8d77\u6765\u66f4\u65b9\u4fbf\n#define lsn l,mid,rt<<1\n#define rsn mid+1,r,rt<<1|1\nconst int N = 500000;\nint a[N+10], v[N+10], tree[(N<<2)+200];             //\u7ebf\u6bb5\u6811\u7684\u6570\u7ec4\u5927\u5c0f\u5f004\u500d\u5de6\u53f3\nint n, m;\ninline int readInt() {\n    static int n, ch;\n    n = 0, ch = getchar();\n    while (!isdigit(ch)) ch = getchar();\n    while (isdigit(ch)) n = n * 10 + ch - '0', ch = getchar();\n    return n;\n}\n//\u67e5\u8be2\u64cd\u4f5c\nint query(int l, int r, int rt, int L, int R){\n    if(l >= L && r <= R) return tree[rt];\n    if(r < L || l > R) return 0;\n    if(l ==  r) return tree[rt];\n    int mid = (l + r) >> 1;\n    int ans = 0;\n    if(L <= mid) ans += query(lsn, L, R);\n    if(R > mid) ans += query(rsn, L, R);\n    return ans;\n}\n//\u4fee\u6539\u64cd\u4f5c\nvoid add(int l, int r, int rt, int pos){\n    if(l == r){\n        tree[rt]++;\n        return;\n    }\n    int mid = (l + r) >> 1;\n    if(mid >= pos) add(lsn, pos);\n    else add(rsn, pos);\n    tree[rt] = tree[rt<<1] + tree[rt<<1|1];         //\u5c06\u6807\u8bb0\u5f80\u4e0a\u6253\n    return;\n}\nint main(){\n    n = readInt();\n    long long ans = 0;\n    for(int i = 1; i <= n; ++i){\n        scanf(\"%d\", a+i);           //\u56e0\u4e3aa[i]\u7684\u8303\u56f4\u662f1e9\u7684\uff0c\u6240\u4ee5\u9700\u8981\u8fdb\u884c\u79bb\u6563\u5316\u64cd\u4f5c\n        v[i] = a[i];\n    }\n    sort(v+1, v+1+n);                //\u6392\u5e8f\n    m = unique(v+1, v+1+n) - v - 1;  //\u53bb\u91cd\uff0cunique\u7684\u8fd4\u56de\u503c\u662f\u53bb\u91cd\u540e\u7684\u5c3e\u5730\u5740\uff08\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u540e\u4e00\u4e2a\u5143\u7d20\uff09\n    for(int i = 1; i <= n; ++i){\n        int k = lower_bound(v+1, v+1+m, a[i]) - v;  //lower_bound\uff08\uff09\u662f\u5185\u7f6e\u7684\u4e8c\u5206\u67e5\u627e\u51fd\u6570\uff0c\u8fd4\u56de\u503c\u662f\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8ea[i]\u7684\u6570\u7684\u5730\u5740\n        int cnt = query(1, N, 1, 1, k); //\u67e5\u8be2\u5728\u63d2\u5165\u6392\u540d\u7b2ck\u4e2a\u6570\u4e4b\u524d\uff0c\u6392\u540d\u7b2c1\u5230\u7b2ck\u7684\u6570\u603b\u5171\u6709\u591a\u5c11\u4e2a\n        ans += (i - 1 - cnt);           //\u8ba1\u7b97\u51fa\u524d\u9762\u5df2\u7ecf\u63d2\u5165\u7ebf\u6bb5\u6811\u7684\u6570\u4e2d\u6709\u591a\u5c11\u4e2a\u6392\u540d\u5728\u7b2ck\u4e4b\u540e\u7684\n        add(1, N, 1, k);                //\u5411\u7ebf\u6bb5\u6811\u4e2d\u63d2\u5165\u7b2ck\u4e2a\u6570\n    }\n    printf(\"%lld\\n\", ans);\n    return 0;\n}\n```",
        "postTime": 1541235863,
        "uid": 114633,
        "name": "\u8d1e\u767d\u5468\u9038\u6c11",
        "ccfLevel": 0,
        "title": "P1908 \u9006\u5e8f\u5bf9"
    },
    {
        "content": "\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u79cd\u66f4\u5feb\u7684\u79bb\u6563\u5316\u7684\u65b9\u6cd5\u2014\u2014\u4e8c\u5206\n\n\u7528\u5230algorithm\u91cc\u7684lower_bound\uff0c\u60f3\u5fc5\u5927\u5bb6\u90fd\u633a\u719f\u6089\u7684\u5427\uff1f\u7528lower_bound\u67e5\u627ea[i]\u7684\u4f4d\u7f6e\u66f4\u5feb\u3002\n\n\u6211\u4eec\u8fd8\u7528\u5230\u7684iostream\u91cc\u7684unique\u53bb\u91cd\u51fd\u6570\uff0c\u4e5f\u53ef\u4ee5\u51cf\u5c11\u65f6\u95f4\u3002\n\n\u6211\u4eec\u5c06f[i]\u6392\u5e8f\uff0c\u90a3\u4e48\u7b2c\u4e00\u6b21\u51fa\u73b0\u5728f\u4e2d\u7684a[i]\u5c31\u662fa[i]\u5728\u6570\u7ec4\u91cc\u7684\u201c\u7b2c\u51e0\u5927\u201d\uff0c\u540e\u9762\u4f9d\u6b21\u63d2\u5165a[i]\uff0c\u6811\u72b6\u6570\u7ec4\u7684sum(a[i])\u5c31\u662f\u5c0f\u4e8e\u7b49\u4e8ea[i]\u7684\u6570\u7684\u4e2a\u6570\uff0c\u90a3\u4e48i-sum(a[i])\u5c31\u662f\u6bd4a[i]\u5927\u7684\u4e2a\u6570\u4e86\u3002\n```\n#include <algorithm>\n#include <iostream>\n#include <cstdio>\n\nint n,len,a[500001],f[500001],s[500001]; //a\u662f\u539f\u6570\u7ec4\uff0c\u4e5f\u662f\u79bb\u6563\u5316\u540e\u7684\u6570\u7ec4\uff0cf\u662f\u6392\u597d\u5e8f\u7684\u6570\u7ec4\uff0cs\u662f\u6811\u72b6\u6570\u7ec4\nlong long ans;\n\nint lowbit(int x){       //\u8fd4\u56de(x)2\u4e2d\u53f3\u5230\u5de6\u7b2c\u4e00\u4e2a1\u8868\u793a\u7684\u6570\n    return x&-x;\n}\n\nvoid add(int x,int k){   //\u4fee\u6539\u6811\u72b6\u6570\u7ec4\n    while(x<=n){\n        s[x]+=k;\n        x+=lowbit(x);\n    }\n}\n\nint sum(int x){         //\u8fd4\u56de\u524dx\u4e2a\u6570\u7684\u548c\n    int tot=0;\n    while(x>0){\n        tot+=s[x];\n        x-=lowbit(x);\n    }\n    return tot;\n}\n\nint main(void){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;++i){\n    \tscanf(\"%d\",&a[i]);\n    \tf[i]=a[i];\n    }\n    std::sort(f+1,f+n+1);   //\u6392\u5e8f\n    len=std::unique(f+1,f+n+1)-f;   //\u53bb\u91cd\n    for(int i=1;i<=n;++i){\n        int pos=std::lower_bound(f+1,f+len+1,a[i])-f;  //a[i]\u5728f\u4e2d\u7684\u4f4d\u7f6e\n        a[i]=pos;\n    }\n    for(int i=1;i<=n;++i){\n        add(a[i],1);         //\u5c06a[i]\u7684\u4e2a\u6570+1\n        ans+=i-sum(a[i]);    //ans\u52a0\u4e0a\u6bd4a[i]\u5927\u7684\u6570\u7684\u4e2a\u6570\n    }\n    printf(\"%lld\",ans);\n}\n```",
        "postTime": 1537774589,
        "uid": 48148,
        "name": "gzh01",
        "ccfLevel": 0,
        "title": "\u3010\u6d1b\u8c37 P1908\u3011\u9006\u5e8f\u5bf9\uff08\u6811\u72b6\u6570\u7ec4\uff09"
    },
    {
        "content": "# \u4f5c\u6b7b\u5927\u6cd5\u597d\u2026\u2026\uff08\u591a\u79cd\u505a\u6cd5\uff09\n\n\u672c\u849f\u84bb\u53d1\u73b0\uff1a\u7531\u4e8e\u6570\u636e\u88ab\u66f4\u65b0\u8fc7\uff0c\u5f88\u591a\u9898\u89e3\u7684\u4ee3\u7801\u8981\u4e48WA\u8981\u4e48TLE\u8981\u4e48MLE\uff0c\u5728\u8fd9\u91cc\u5c06\u5404\u4e2a\u505a\u6cd5\u505a\u4e2a\u6574\u5408\u3002\n\n## \u663e\u7136\u7684\u505a\u6cd5\u2014\u2014\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811(50\u5206,MLE/RE)\n\u76f8\u4fe1\u770b\u8fc7\u5176\u4ed6\u9898\u89e3\u7684\u540c\u5b66\u90fd\u77e5\u9053\u4e86\u6709\u4e00\u79cd\u505a\u6cd5\u53eb\u7ebf\u6bb5\u6811\u3002\n\n\u6211\u6765\u7ed9\u5927\u5bb6\u6f14\u793a\u4e00\u4e0b\uff1a\u8fd9\u5c31\u662f\u4e0d\u79bb\u6563\u5316\u7684\u4e0b\u573a\uff08\u867d\u7136\u79bb\u6563\u5316\u4e86\u4e5f\u5927\u6982\u7387\u4f1aTLE\u2026\u2026\n```\n#include <cstdio>\nusing namespace std;\nconst int maxn=500010,inf=1e9+1;\nint n,a[maxn],tot=0,i,b[maxn],c[maxn],tmp[2][maxn];\nlong long ans=0;\nstruct node{\n\tint v;\n\tnode *ls,*rs;\n\tnode *init(){\n\t\tv=0;\n\t\tls=rs=NULL;\n\t\treturn this;\n\t}\n};\nstruct DynamicSegmentTree{\n\tnode t[maxn*10];\n\tint tot,ll,rr;\n\tvoid init(int L,int R){\n\t\tt[tot=0].init();\n\t\tll=L,rr=R;\n\t}\n\tnode* modify(int x,int k,node *p,int l,int r){\n\t\tif(!p) p=t+(++tot);\n\t\tp->v++;\n\t\tif(l==r) return p;\n\t\tint m=(l+r)>>1;\n\t\tif(x<=m) p->ls=modify(x,k,p->ls,l,m);\n\t\telse p->rs=modify(x,k,p->rs,m+1,r);\n\t\treturn p;\n\t}\n\tint query(int L,int R,node *p,int l,int r){\n\t\tif(!p) return 0;\n\t\tif(L<=l&&r<=R) return p->v;\n\t\tint m=(l+r)>>1,res=0;\n\t\tif(L<=m) res+=query(L,R,p->ls,l,m);\n\t\tif(R>m) res+=query(L,R,p->rs,m+1,r);\n\t\treturn res;\n\t}\n}T;\nint main(){\n\tscanf(\"%d\",&n);\n\tT.init(0,inf);\n\tfor(i=0;i<n;i++)\n\t\tscanf(\"%d\",a+i);\n\n\tfor(i=0;i<n;i++){\n\t\tT.modify(a[i],1,T.t,T.ll,T.rr);\n\t\tans+=T.query(a[i]+1,inf,T.t,T.ll,T.rr);\n\t}\n\n\tprintf(\"%lld\\n\",ans);\n}\n```\n\n## \u7b2c\u4e8c\u663e\u7136\u7684\u505a\u6cd5\u2014\u2014trie(AC,7936ms)\n\u4f60\u53ef\u80fd\u5f88\u7591\u60d1\uff1atrie\u5230\u5e95\u662f\u600e\u4e48\u8dd1\u8fdb\u6765\u7684\uff1f\n\n\u56e0\u4e3a\u6211\u61d2\u5f97\u5199\u79bb\u6563\u5316\u4e86\uff0c\u800c\u4e14\u76f4\u63a5\u7528\u6811\u72b6\u6570\u7ec4\u80af\u5b9a\u4f1aMLE/RE\uff0c\u6240\u4ee5\u5199\u4e00\u4e2a\u7528trie\u5b9e\u73b0\u7684\u6811\u72b6\u6570\u7ec4\u5c31\u53ef\u4ee5\u54af\u3002\uff08\u6700\u540e\u5361\u7740\u65f6\u9650\u8fc7\u4e86\u2026\u2026\n```\n#include <cstdio>\nconst int maxn=2e7,inf=1e9+10;\nint n,a;\nlong long ans=0;\nstruct trieBIT{\n\tint t[maxn],s[maxn][2],res,i,u,tot;\n\ttrieBIT(){tot=1;}\n\tinline int son(int u,bool n,bool w=0){\n\t\treturn s[u][n]||w?s[u][n]:s[u][n]=++tot;\n\t}\n\tint query(int x){\n\t\tfor(res=0,u=1,i=1<<31;x&&u;x^=x&i,i>>=1)\n\t\t\tres+=t[u=son(u,x&i,1)];\n\t\treturn res;\n\t}\n\tvoid add(int x,int k=1){\n\t\tfor(u=1,i=1<<31;x;x^=x&i,i>>=1){\n\t\t\tif(!(x&i)) t[son(u,1)]+=k;\n\t\t\tu=son(u,x&i);\n\t\t}\n\t\tt[u]+=k;\n\t}\n}t;\nint main(){\n\tscanf(\"%d\",&n);\n\twhile(n--){\n\t\tscanf(\"%d\",&a);\n\t\tt.add(inf-a);\n\t\tans+=t.query(inf-a-1);\n\t}\n\tprintf(\"%lld\",ans);\n}\n```\n## \u6b63\u5e38\u7684\u505a\u6cd5\u2014\u2014\u79bb\u6563\u5316+\u6811\u72b6\u6570\u7ec4(\u6b63\u89e3,2846ms)\n\u968f\u4fbf\u653e\u4e0b\u4ee3\u7801\uff0c\u76f8\u4fe1\u90fd\u80fd\u770b\u61c2\u2026\u2026\uff08\u8bd5\u8fc7\u7528map\u79bb\u6563\u5316\uff0c\u597d\u50cfTLE\u4e86\uff09\n```\n#include <cstdio>\n#include <map>\n#include <algorithm>\nusing namespace std;\nconst int maxn=500010,inf=1e9+1;\nint n,a[maxn],tot=0,i,b[maxn],c[maxn],tmp[2][maxn];\n//a[]\u5b58\u6570\u5b57 b[]\u5b58\u6392\u5e8f\u540e\u9006\u5e8f c[]\u5b58\u79bb\u6563\u5316\u540e\u6570\u7ec4\nlong long ans=0;\nstruct BIT{\n\tint t[maxn];\n\tinline int lb(int x){return x&(-x);}\n\tinline void add(int x){for(;x<=n;x+=lb(x)) t[x]++;}\n\tinline int sum(int x){int res=0;for(;x;x-=lb(x)) res+=t[x];return res;}\n}t;\nint cmp(int x,int y){\n\treturn a[x]>a[y];\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(i=0;i<n;i++){\n\t\tscanf(\"%d\",a+i);\n\t\tb[i]=i;\n\t}\n\tsort(b,b+n,cmp);\n\tfor(i=0;i<n;i++){\n\t\tif(i&&a[b[i]]==a[b[i-1]]) c[b[i]]=c[b[i-1]];\n\t\telse c[b[i]]=++tot;\n\t}\n\tfor(i=0;i<n;i++){\n\t\tt.add(c[i]);\n\t\tans+=t.sum(c[i]-1);\n\t}\n\tprintf(\"%lld\\n\",ans);\n}\n```\n\n## \u5e38\u89c1\u7684\u505a\u6cd5\u2014\u2014\u5f52\u5e76\u6392\u5e8f(AC,1375ms)\n\u5c31\u662f\u5f52\u5e76\u7684\u65f6\u5019\u6ce8\u610f\u8981\u5199\u5c0f\u4e8e\u7b49\u4e8e\u53f7\uff08\u56e0\u4e3a\u53ef\u80fd\u6709\u76f8\u7b49\u7684\u6570\uff09\uff0c\u5176\u4ed6\u7684\u6ca1\u6709\u4ec0\u4e48\u4e86\u3002\n```\n#include <cstdio>\nconst int maxn=500010;\nint n,i,a[maxn],tmp[2][maxn];\nlong long ans=0;\nvoid mergesort(int l,int r,int k){\n\tif(l==r){\n\t\ttmp[k][l]=a[l];\n\t\treturn;\n\t}\n\tint m=(l+r)>>1,*t1=tmp[k],*t2=tmp[k^1];\n\tmergesort(l,m,k^1);\n\tmergesort(m+1,r,k^1);\n\tfor(int i=l,s=l,t=m+1;i<=r;i++){\n\t\tif(t>r||(s<=m&&t2[s]<=t2[t]))\n\t\t\tt1[i]=t2[s++];\n\t\telse{\n\t\t\tans+=m+1-s;\n\t\t\tt1[i]=t2[t++];\n\t\t}\n\t}\n}\nint main(){\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++)\n        scanf(\"%d\",a+i);\n    mergesort(0,n-1,0);\n    printf(\"%lld\\n\",ans);\n}\n```",
        "postTime": 1535512241,
        "uid": 73915,
        "name": "frank3215",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u697c\u4e0b\u5927\u4f6c\u90fd\u7528\u7684\u662f\u6811\u72b6\u6570\u7ec4\u548c\u5f52\u5e76\uff0c\u6211\u5c31\u8bb2\u4e00\u8bb2\u7ebf\u6bb5\u6811\u5427\uff01  \n\u8fd9\u9053\u9898\uff0c\u697c\u4e0b\u5927\u4f6c\u4eec\u90fd\u8bb2\u4e86\u5176\u5b9e\u5c31\u662f\u6c42\u9006\u5e8f\u5bf9\u3002\u800c\u9006\u5e8f\u5bf9\u5c31\u662f\u6c42\u6bcf\u4e00\u4e2a\u6570\u524d\u9762\u6709\u591a\u5c11\u4e2a\u6bd4\u5b83\u5927\uff0c\u5219\u8003\u8651\u6743\u503c\u7ebf\u6bb5\u6811\u3002  \n\u4ec0\u4e48\u662f\u6743\u503c\u7ebf\u6bb5\u6811\uff1f \u5c31\u662f\u4ee5\u6570\u7684\u5927\u5c0f\u4f5c\u533a\u95f4\u7684\u7ebf\u6bb5\u6811\u3002  \n\u7136\u800c\uff0c\u6b64\u9898\u6570\u636e\u8303\u56f4\u592a\u5927\uff0c\u6240\u4ee5\u9700\u8981\u4e00\u4e2a\u5c0f\u5c0f\u7684\u9884\u5904\u7406\u64cd\u4f5c\uff1a  \n\u4f8b\uff1a2 8 0 3 2\uff0c\u6211\u4eec\u53ef\u4ee5\u6392\u4e2a\u5e8f\uff08\u8981\u4fdd\u7559\u539f\u7248\uff09\uff1a0 2 2 3 8  \n\u53bb\u91cd\uff1a0 2 3 8\uff0c\u7f16\u53f7\u4e3a\uff1a1\uff0c2\uff0c3\uff0c4\u3002\u518d\u5bf9\u5e94\u56de\u53bb\uff1a2 4 1 3 2  \n(\u8981\u5f00\u4e2a\u7ed3\u6784\u4f53\uff0c\u8bb0\u5f55\u539f\u4f4d\u7f6e\uff09  \n\u4e00\u7cfb\u5217~~\u9a9a~~\u64cd\u4f5c\u5f97\uff1a 1<=A[i]<=n  \n\u597d\u4e86\uff0c\u73b0\u5728\u53ef\u4ee5\u6784\u9020\u4e86\u3002\uff08\u503c\u90fd\u4e3a0\uff09  \n\n---\n\u67e5\u8be2\u9006\u5e8f\u5bf9\uff0c\u5148\u4ece\u524d\u5411\u540e\u4f9d\u6b21\u67e5\u8be2\uff0c\u8bb0\u5f55\u603b\u548c\uff0c\u67e5\u8be2\u540e\u52a0\u5165\u7ebf\u6bb5\u6811\u5e76\u56de\u6eaf\n\n\u732e\u4e0a\u4e11\u964b\u7684\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\ninline int rd()\n{\n\tint x=0,flag=1;\n\tchar ch=getchar();\n\twhile((ch<'0' || ch>'9') && ch!='-') ch=getchar();\n\tif(ch=='-') flag=-1,ch=getchar();\n\twhile(ch>='0' && ch<='9') x=x*10+ch-'0',ch=getchar();\n\treturn x*flag;\n}\ninline LL rdl()\n{\n\tLL x=0,flag=1;\n\tchar ch=getchar();\n\twhile((ch<'0' || ch>'9') && ch!='-') ch=getchar();\n\tif(ch=='-') flag=-1,ch=getchar();\n\twhile(ch>='0' && ch<='9') x=x*10+ch-'0',ch=getchar();\n\treturn x*flag;\n}//\u8bfb\u5165\u4f18\u5316\nconst int N=5e5+50;\nconst int TR=N<<2;\nstruct tree{\n\tint l,r,k;\n}t[TR];\ninline int ls(int x)//\u5de6\u513f\u5b50\n{\n\treturn x<<1;\n}\ninline int rs(int x)//\u53f3\u513f\u5b50\n{\n\treturn x<<1|1;\n}\nstruct no{\n\tint x,i;\n}cop[N];\nbool comp(no x,no y)\n{\n\treturn x.x<y.x;\n}\ninline void build(int now,int l,int r)//\u5efa\u6811\n{\n\tt[now].l=l;\n\tt[now].r=r;\n\tt[now].k=0;\n\tif(l==r)\n\t\treturn ;\n\tint mid=(l+r)>>1;\n\tbuild(ls(now),l,mid);\n\tbuild(rs(now),mid+1,r);\n\treturn ;\n}\ninline void up(int now)//\u56de\u6eaf\n{\n\tt[now].k=t[rs(now)].k+t[ls(now)].k;\n}\ninline LL src(int now,int x)//\u641c\u7d22\n{\n\tint l=t[now].l,r=t[now].r;\n\tLL sum=0;\n\tint mid=(l+r)>>1;\n\tif(l==r)\n\t\treturn (LL)t[now].k;\n\tif(x<=mid) sum+=(LL)t[rs(now)].k+src(ls(now),x);//\u82e5\u5728\u5de6\u513f\u5b50\u4e2d\uff0c\u53f3\u513f\u5b50\u4e00\u5b9a\u6bd4\u5b83\u5927\n\telse sum+=src(rs(now),x);//\u641c\u7d22\u53f3\u513f\u5b50\n\treturn sum;\n}\ninline void upate(int now,int x)//\u52a0\u5165\n{\n\tint l=t[now].l,r=t[now].r;\n\tint mid=(l+r)>>1;\n\tif(l==r)\n\t{\n\t\tt[now].k++;//\u7edf\u8ba1\u4e2a\u6570\n\t\treturn ;\n\t}\n\tif(x<=mid) upate(ls(now),x);\n\telse upate(rs(now),x);\n\tup(now);\n}\nint n;\nLL a[N],k[N],tot=0,ans=0;//\u5f00long long\u9632\u7206\nint main()\n{\n\tn=rd();\n\tfor(int i=1;i<=n;i++) a[i]=rdl(),cop[i].x=a[i],cop[i].i=i;\n\tsort(cop+1,cop+n+1,comp);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(cop[i].x!=cop[i-1].x || i==1)\n\t\t\tk[++tot]=cop[i].x;\n\t\ta[cop[i].i]=tot;\n\t}//\u9884\u5904\u7406\n\tbuild(1,1,n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tans+=src(1,a[i]+1);//\u5927\u4e8ea\u7684\u4e2a\u6570=\u5927\u4e8e\u7b49\u4e8ea+1\u7684\u4e2a\u6570\n\t\tupate(1,a[i]);//\u66f4\u65b0\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n[\u5e7f\u544a\uff08advertisement\uff09](https://www.luogu.org/blog/STC-hjh/)",
        "postTime": 1531026608,
        "uid": 103990,
        "name": "asd_a",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u9996\u5148\u8fd9\u4e2a\u9898\u5982\u679c\u7528\u53cc\u91cd\u5faa\u73af\uff0c\u590d\u6742\u5ea6\u4e3aO(n^2),\u80af\u5b9a\u4f1a\u8d85\u65f6\uff1b\n\n\u73b0\u5728\u8003\u8651\u4e00\u4e0b\uff0c\u662f\u5426\u53ef\u4ee5\u5c06\u5e8f\u5217\u5206\u6bb5\uff0c\u5229\u7528\u5408\u5e76\u6392\u5e8f\u601d\u60f3\uff1b\n\n\u5148\u5206\u6bb5\u6b65\u957f\u4e3a1\uff0c\u7136\u540e\u4f7f\u5e8f\u5217\u6709\u5e8f\uff0c\u8ba1\u7b97\u6bcf\u4e00\u7ec4\u5e8f\u5217\u7684\u9006\u5e8f\u5bf9\u6570\u76ee\uff0c\u7136\u540e\u6b65\u957f2\u30014\u3001\u76f4\u5230\u6b65\u957f\u7b49\u4e8e\u6574\u4e2a\u5e8f\u5217\n\n\u6bcf\u4e00\u7ec4\u5e8f\u5217a[i]a[j]\uff0c\u5982\u679ca[i] < a[j]\u90a3\u4e48\u4e0d\u662f\u9006\u5e8f\u5bf9\uff0c\u76f4\u63a5\u5c06a[j]\u590d\u5236\u5230\u65b0\u6570\u7ec4\u91cc\uff0c\u5982\u679ca[i]>a[j]\u90a3\u4e48a[i]\u8fd9\u4e00\u6bb5\u540e\u9762\u6240\u6709\u6570\u636e\u90fd\u5927\u4e8ea[j],sum\u76f4\u63a5\u52a0mid-i+1\u5373\u53ef(\u56e0\u4e3a\u5e8f\u5217\u4e4b\u4ece\u6b65\u957f\u9012\u589e\u5c06\u6bcf\u4e00\u7ec4\u5e8f\u5217\u5185\u90e8\u5df2\u7ecf\u6392\u597d\u5e8f\u4e86)\uff0c\u6700\u540e\u6ce8\u610f\u5c06\u65b0\u6570\u7ec4\u91cc\u9762\u6570\u636e\u590d\u5236\u5230a\u6570\u7ec4\u76f8\u5e94\u7684\u4f4d\u7f6e\u4e2d\n\n\u5178\u578b\u7684\u4e8c\u5206\n\n\n\n```cpp\n#include  <iostream>\nusing namespace std;\n#define maxn 40001\nint a[maxn],temp[maxn];\nint sum=0,n;\nint MergePass(int left,int mid,int right)\n{\n    int k=0,i=left,j=mid+1;///\u5c06ij\u5206\u522b\u56fa\u5b9a\u5230a\u6570\u7ec4\u4e2d\u7684\u76f8\u5e94\u4f4d\u7f6e\n    while(i<=mid && j<=right)\n    {\n        if(a[i]<a[j])///\u4e0d\u662f\u9006\u5e8f\u961f\u4e0d\u9700\u8981\u8fdb\u884c\u8003\u8651\n            temp[k++] = a[i++];\n        else\n        {\n            temp[k++] = a[j++];\n            sum += (mid-i+1);///\u5982\u679ca[i]>a[j]\u90a3\u4e48a[i]\u540e\u9762\u7684\u5143\u7d20\u90fd\u5927\u4e8ea[j],a[i]\u540e\u9762\u7684\u5143\u7d20\u6709mid-i+1\u4e2a\n        }\n    }\n    ///\u5269\u4f59\u90e8\u5206\u52a0\u8fdb\u53bb\n    while(i<=mid)\n        temp[k++] = a[i++];\n    while(j<=right)\n        temp[k++] = a[j++];\n    for(int i=0;i<k;i++)\n        a[left+i] = temp[i];///\u6700\u540e\u5c06\u8fd9\u6bb5\u6539\u52a8\u7684\u6570\u636e\u4ecd\u7136\u653e\u5728a\u6570\u7ec4\u4e2d\n}\nvoid MergeSort(int left,int right)\n{\n    if(left<right)\n    {\n        int mid = (left+right)/2;\n        ///\u5148\u5206\u6bb5\u4e8c\u5206\n        MergeSort(left,mid);\n        MergeSort(mid+1,right);\n        ///\u5206\u597d\u4e86\u8fdb\u884c\u6392\u5e8f\n        MergePass(left,mid,right);\n    }\n}\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;i++)\n        cin>>a[i];\n    MergeSort(1,n);\n    cout<<sum<<endl;\n    return 0;\n}\n\n```",
        "postTime": 1514983928,
        "uid": 64698,
        "name": "List",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u5176\u5b9e\u6b64\u9898\u4e5f\u53ef\u4ee5\u7528splay\u505a.....\n\n\u987a\u5e8f\u8bfb\u5165\u6570\u636e\uff0c\u9006\u5e8f\u63d2\u5165\uff0c\u540c\u65f6ans\u52a0\u4e0a\u5b83\u73b0\u5728\u7684\u6392\u540d\n\n\u90a3\u4e48\u6700\u540e\u7684\u7b54\u6848\u5c31\u662fans-n\n\n\u7f3a\u70b9\u662f\u5e73\u8861\u6811\u7684\u5e38\u6570\u7565\u5927\n\n\u4f18\u70b9\u662f\u6301\u4e45\u5316\u4e4b\u540e\u53ef\u4ee5\u6c42\u52a8\u6001\u9006\u5e8f\u5bf9\n\n\u9644\u4e0a\u4ee3\u7801~~\u53ef\u4ee5\u5f53\u505asplay\u7684\u677f\u5b50~~\n\n```cpp\n#include<cstdio>\n#include<cctype>\n#define re register int\n#define il inline\nusing namespace std;\nvoid fre(){\n    freopen(\".in\",\"r\",stdin);\n    freopen(\".out\",\"w\",stdout);\n}\n\nil void read(int &x){\n    int f=1;x=0;char c=getchar();\n    while(!isdigit(c)){\n        if(c=='-')f=-1;\n        c=getchar();\n    }\n    while(isdigit(c)){\n        x=(x<<3)+(x<<1)+c-'0';\n        c=getchar();\n    }\n    x*=f;\n}\nconst int N=1e6+29;\nint son[N][2],f[N],cnt[N],siz[N],key[N];\nint sz,root;\nstruct Balanced_Binary_Tree{\n    il void clear(int x){\n        son[x][1]=son[x][0]=f[x]=cnt[x]=siz[x]=key[x]=0;\n    }\n    il void update(int x){\n        if(x){\n            siz[x]=cnt[x];\n            if(son[x][0])siz[x]+=siz[son[x][0]];\n            if(son[x][1])siz[x]+=siz[son[x][1]]; \n        }\n    }\n    il bool get(int x){\n        return son[f[x]][1]==x; \n    }\n    il void rotate(int x){\n        int old=f[x],oldf=f[old],which=get(x);\n        son[old][which]=son[x][which^1];f[son[old][which]]=old;\n        son[x][which^1]=old;f[old]=x;\n        f[x]=oldf;\n        if(oldf){\n            son[oldf][son[oldf][1]==old]=x;\n        }\n        update(old);update(x);\n    }\n    il void splay(int x,int tar){\n        for(re fa;(fa=f[x])!=tar;rotate(x)){\n            if(f[fa]!=tar)\n                rotate((get(x)==get(fa))?fa:x);\n        }\n        if(!tar)root=x;\n        update(x);\n    }\n    il void insert(int x){\n        if(root==0){\n            sz++;son[sz][0]=son[sz][1]=f[sz]=0;cnt[sz]=siz[sz]=1;root=sz;key[sz]=x;return;\n        }\n        int now=root,fa=0;\n        while(1){\n            if(key[now]==x){\n                cnt[now]++;\n                update(now);\n                update(fa);\n                splay(now,0);\n                return;\n            }\n            fa=now;\n            now=son[now][key[now]<x];\n            if(now==0){\n                sz++;\n                son[sz][0]=son[sz][1]=0;\n                f[sz]=fa;\n                cnt[sz]=siz[sz]=1;\n                key[sz]=x;\n                son[fa][key[fa]<x]=sz;\n                update(fa);\n                splay(sz,0);\n                return;\n            }\n        }\n    }\n    il int find(int x){\n        int now=root,res=0;\n        while(1){\n            if(key[now]>x)\n                now=son[now][0];\n            else{\n                res+=(son[now][0]?siz[son[now][0]]:0);\n                if(x==key[now]){\n                    splay(now,0);\n                    return res+1; \n                }\n                res+=cnt[now];\n                now=son[now][1];\n            }\n        }\n    } \n    il int find_kth(int x){\n        int now=root;\n        while(1){\n            if(son[now][0]&&siz[son[now][0]]>=x)\n                now=son[now][0];\n            else{\n                int tmp=(son[now][0]?siz[son[now][0]]:0)+cnt[now];\n                if(x<=tmp)return key[now];\n                x-=tmp;\n                now=son[now][1];\n            }\n        }\n    }\n    il int pre(){\n        int now=son[root][0];\n        while(son[now][1])now=son[now][1];\n        return now;\n    }\n    il int nxt(){\n        int now=son[root][1];\n        while(son[now][0])now=son[now][0];\n        return now;\n    }\n    il void Delete(int x){\n        int wherever=find(x);\n        if(cnt[root]>1){\n            cnt[root]--;\n            update(root);\n            return;\n        }\n        if(!son[root][0]&&!son[root][1]){\n            clear(root);\n            root=0;\n            return;\n        }\n        if(!son[root][0]){\n            int oldroot=root;\n            root=son[oldroot][1];\n            f[root]=0;\n            clear(oldroot);\n            return;\n        }\n        if(!son[root][1]){\n            int oldroot=root;\n            root=son[oldroot][0];\n            f[root]=0;\n            clear(oldroot);\n            return;\n        }\n        int lbig=pre(),oldroot=root;\n        splay(lbig,0);\n        son[root][1]=son[oldroot][1];\n        f[son[oldroot][1]]=root;\n        clear(oldroot);\n        update(root);\n    }\n}T;\nint t,cmd,k,ans=0;\nint a[400029];\nint main(){\n    read(t);\n    for(re i=1;i<=t;i++)read(a[i]);\n    for(re i=t;i>=1;i--){\n        T.insert(a[i]);\n        ans+=T.find(a[i]);\n    }\n    printf(\"%d\\n\",ans-t);\n    return 0;\n}\n\n\n```",
        "postTime": 1509782687,
        "uid": 59877,
        "name": "Makise_Kurisu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "```cpp\n\n//2015.10.7 10:58\n/*\u5173\u4e8e\u79bb\u6563\u5316 \n\u89e3\u91ca\u4e3a\u4ec0\u4e48\u8981\u6709\u79bb\u6563\u7684\u8fd9\u4e48\u4e00\u4e2a\u8fc7\u7a0b\uff1f\n\u521a\u5f00\u59cb\u4ee5\u4e3a999.999.999\u8fd9\u4e48\u4e00\u4e2a\u6570\u5b57\uff0c\u5bf9\u4e8eint\u5b58\u50a8\u7c7b\u578b\u6765\u8bf4\u662f\u8db3\u591f\u4e86\u3002\n\u8fd8\u6709\u53ea\u6709500000\u4e2a\u6570\u5b57\uff0c\u4f55\u5fc5\u8981\u79bb\u6563\u5316\u5462\uff1f\n\u521a\u5f00\u59cb\u4e00\u76f4\u60f3\u4e0d\u901a\uff0c\u540e\u6765\u660e\u767d\u4e86\uff0c\u540e\u9762\u5728\u8fd0\u7528\u6811\u72b6\u6570\u7ec4\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\n\u7528\u5230\u7684\u6811\u72b6\u6570\u7ec4C[i]\u662f\u5efa\u7acb\u5728\u4e00\u4e2a\u6709\u70b9\u50cf\u4f4d\u5b58\u50a8\u7684\u6570\u7ec4\u7684\u57fa\u7840\u4e4b\u4e0a\u7684\uff0c\n\u4e0d\u662f\u5355\u7eaf\u7684\u5efa\u7acb\u5728\u8f93\u5165\u6570\u7ec4\u4e4b\u4e0a\u3002\n\u6bd4\u5982\u8f93\u5165\u4e00\u4e2a9 1 0 5 4\uff0c\u90a3\u4e48C[i]\u6811\u72b6\u6570\u7ec4\u7684\u5efa\u7acb\u662f\u5728\uff0c\n\u4e0b\u6807 0 1 2 3 4 5 6 7 8 9\n\u6570\u7ec4 1 1 0 0 1 1 0 0 0 1\n\u73b0\u5728\u7531\u4e8e999999999\u8fd9\u4e2a\u6570\u5b57\u76f8\u5bf9\u4e8e500000\u8fd9\u4e2a\u6570\u5b57\u6765\u8bf4\u662f\u5f88\u5927\u7684\uff0c\n\u6240\u4ee5\u5982\u679c\u7528\u6570\u7ec4\u4f4d\u5b58\u50a8\u7684\u8bdd\uff0c\u90a3\u4e48\u9700\u8981999999999\u7684\u7a7a\u95f4\u6765\u5b58\u50a8\u8f93\u5165\u7684\u6570\u636e\u3002\n\u8fd9\u6837\u662f\u5f88\u6d6a\u8d39\u7a7a\u95f4\u7684\uff0c\u9898\u76ee\u4e5f\u662f\u4e0d\u5141\u8bb8\u7684\uff0c\u6240\u4ee5\u8fd9\u91cc\u60f3\u901a\u8fc7\u79bb\u6563\u5316\u64cd\u4f5c\uff0c\n\u4f7f\u5f97\u79bb\u6563\u5316\u7684\u7ed3\u679c\u53ef\u4ee5\u66f4\u52a0\u7684\u5bc6\u96c6\u3002\n*/ \n/*\n\u6d1b\u8c371908 \u9006\u5e8f\u5bf9\n\u672c\u9898\u5730\u5740\uff1a http://www.luogu.org/problem/show?pid=1908\n\n\u9898\u76ee\u63cf\u8ff0\n\u732b\u732bTOM\u548c\u5c0f\u8001\u9f20JERRY\u6700\u8fd1\u53c8\u8f83\u91cf\u4e0a\u4e86\uff0c\u4f46\u662f\u6bd5\u7adf\u90fd\u662f\u6210\u5e74\u4eba\uff0c\u4ed6\u4eec\u5df2\u7ecf\u4e0d\u559c\u6b22\u518d\u73a9\u90a3\u79cd\u4f60\u8ffd\u6211\u8d76\u7684\u6e38\u620f\uff0c\u73b0\u5728\u4ed6\u4eec\u559c\u6b22\u73a9\u7edf\u8ba1\u3002\u6700\u8fd1\uff0cTOM\u8001\u732b\u67e5\u9605\u5230\u4e00\u4e2a\u4eba\u7c7b\u79f0\u4e4b\u4e3a\u201c\u9006\u5e8f\u5bf9\u201d\u7684\u4e1c\u897f\uff0c\u8fd9\u4e1c\u897f\u662f\u8fd9\u6837\u5b9a\u4e49\u7684\uff1a\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u4e00\u6bb5\u6b63\u6574\u6570\u5e8f\u5217\uff0c\u9006\u5e8f\u5bf9\u5c31\u662f\u5e8f\u5217\u4e2dai>aj\u4e14i<j\u7684\u6709\u5e8f\u5bf9\u3002\u77e5\u9053\u8fd9\u6982\u5ff5\u540e\uff0c\u4ed6\u4eec\u5c31\u6bd4\u8d5b\u8c01\u5148\u7b97\u51fa\u7ed9\u5b9a\u7684\u4e00\u6bb5\u6b63\u6574\u6570\u5e8f\u5217\u4e2d\u9006\u5e8f\u5bf9\u7684\u6570\u76ee\u3002\n\u8f93\u5165\u8f93\u51fa\u683c\u5f0f\n\u8f93\u5165\u683c\u5f0f\uff1a\n\u7b2c\u4e00\u884c\uff0c\u4e00\u4e2a\u6570n\uff0c\u8868\u793a\u5e8f\u5217\u4e2d\u6709n\u4e2a\u6570\u3002\n\u7b2c\u4e8c\u884cn\u4e2a\u6570\uff0c\u8868\u793a\u7ed9\u5b9a\u7684\u5e8f\u5217\u3002\n\n\u8f93\u51fa\u683c\u5f0f\uff1a\n\u7ed9\u5b9a\u5e8f\u5217\u4e2d\u9006\u5e8f\u5bf9\u7684\u6570\u76ee\u3002\n\n\u8f93\u5165\u8f93\u51fa\u6837\u4f8b\n\u8f93\u5165\u6837\u4f8b#1\uff1a\n6\n5 4 2 6 3 1\n\u8f93\u51fa\u6837\u4f8b#1\uff1a\n11\n\u8bf4\u660e\n\u5bf9\u4e8e50%\u7684\u6570\u636e\uff0cn\u22642500\n\u5bf9\u4e8e100%\u7684\u6570\u636e\uff0cn\u226440000\n*/\n\n/*\n \u79bb\u6563\u4e4b\u540e\uff0c\u600e\u4e48\u4f7f\u7528\u79bb\u6563\u540e\u7684\u7ed3\u679c\u6570\u7ec4\u6765\u8fdb\u884c\u6811\u72b6\u6570\u7ec4\u64cd\u4f5c\uff0c\u8ba1\u7b97\u51fa\u9006\u5e8f\u6570\uff1f\n\u5982\u679c\u6570\u636e\u4e0d\u662f\u5f88\u5927\uff0c \u53ef\u4ee5\u4e00\u4e2a\u4e2a\u63d2\u5165\u5230\u6811\u72b6\u6570\u7ec4\u4e2d\uff0c\n\u6bcf\u63d2\u5165\u4e00\u4e2a\u6570\uff0c \u7edf\u8ba1\u6bd4\u4ed6\u5c0f\u7684\u6570\u7684\u4e2a\u6570\uff0c\n\u5bf9\u5e94\u7684\u9006\u5e8f\u4e3a i- getsum( hash[i] ),\n\u5176\u4e2d i \u4e3a\u5f53\u524d\u5df2\u7ecf\u63d2\u5165\u7684\u6570\u7684\u4e2a\u6570\uff0c\ngetsum( hash[i] \uff09\u4e3a\u6bd4 hash[i] \u5c0f\u7684\u6570\u7684\u4e2a\u6570,\ni- sum( hash[i] ) \u5373\u6bd4 hash[i] \u5927\u7684\u4e2a\u6570\uff0c \u5373\u9006\u5e8f\u7684\u4e2a\u6570\n*/ \n\n#include <algorithm>\n#include <cstdio>\n#include <iostream>\nusing namespace std;\nint hash[50010],tree[50010],N;\nstruct Node{\n    int value;\n    int site;\n}num[50010];\nbool cmp(Node a ,Node b)\n{\n    return a.value<b.value;\n}\n\nint lowbit(int x)\n{\n    return x&(-x);\n}\n\nvoid updata(int site,int value)\n{\n    int i;\n    for(int i=site;i<=N;i+=lowbit(i))\n        tree[i]+=value;\n    return ;\n}\n\nint getsum(int x)\n{\n    int temp=0;\n    for(int i=x;i>=1;i-=lowbit(i))\n        temp+=tree[i];\n    return temp;    \n}\n\nint main()\n{\n    scanf(\"%d\",&N);\n    for(int i=1;i<=N;i++)\n    {\n        scanf(\"%d\",&num[i].value);\n        num[i].site=i;\n    }\n    sort(num+1,num+N+1,cmp);\n    for(int i=1;i<=N;i++)\n        hash[num[i].site]=i;\n    //\u79bb\u6563\u5316\u7ed3\u675f\n    long long ans=0;\n    for(int i=1;i<=N;i++)\n    {\n        updata(hash[i],1);\n        ans+=i-getsum(hash[i]);\n    }\n    printf(\"%d\",ans);\n    \n     return 0;\n      \n}\n\n\n\n```",
        "postTime": 1444187000,
        "uid": 896,
        "name": "SiTer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u597d\u50cf\u5404\u4f4d\u5927\u4f6c\u90fd\u5728\u8bf4\u5404\u79cd\u79bb\u6563+\u6811\u72b6\u6570\u7ec4\u7684\u9898\u89e3\u554a\n\n~~\uff08\u6211\u8fd9\u53ea\u4e0d\u61c2\u79bb\u6563\u5316\u7684\u849f\u84bb\u5f88\u96be\u582a\u554a\uff0c\u6811\u72b6\u6570\u7ec4\u61c2\u4e86\u4f46\u662f\u4e0d\u4f1a\u79bb\u6563\u5316\u545c\u545c\u545c\uff09~~\n\n\u6240\u4ee5\u60f3\u5199\u4e00\u4e2a\u5c0f\u5c0f\u7684\u79bb\u6563\u5316\u7684\u4e00\u70b9\u8ba4\u8bc6\uff08\u5df2\u7ecf\u61c2\u4e86\u7684\u5927\u4f6c\u7ed5\u884c\u8c22\u8c22\uff09\n\nPS:\u672c\u4eba\u5341\u5206\u83dc\uff0c\u5404\u4f4d\u5927\u4f6c\u8f7b\u55b7\uff0c\u6709\u4ec0\u4e48\u95ee\u9898\u9ebb\u70e6\u79c1\u4fe1\uff0c\u6211\u4f1a\u7b2c\u4e00\u65f6\u95f4\u6539\u6b63\u7684\u3002\n\nPS2:\u611f\u8c22[@\u5b66\u65e0\u6b62\u5883](https://www.luogu.org/space/show?uid=68975)\u5927\u4f6c\u63d0\u4f9b\u7684\u601d\u8def\n\n## 1.\u79bb\u6563\u5316\u5b9a\u4e49\n\n\u79bb\u6563\u5316\uff0c\u628a\u65e0\u9650\u7a7a\u95f4\u4e2d\u6709\u9650\u7684\u4e2a\u4f53\u6620\u5c04\u5230\u6709\u9650\u7684\u7a7a\u95f4\u4e2d\u53bb\uff0c\u4ee5\u6b64\u63d0\u9ad8\u7b97\u6cd5\u7684\u65f6\u7a7a\u6548\u7387\u3002\uff08by\u767e\u5ea6\u7f51\u79d1\uff09\n\n~~\u5bf9\u4e8e\u6211\u8fd9\u79cd\u849f\u84bb\u6839\u672c\u770b\u4e0d\u61c2\u554a\uff01\uff01\uff01~~\n\n\u4e3e\u4e2a\u6817\u5b50\uff1a\n\n\u4f60\u6709\u4e00\u4e2a10^3\u4e2a\u6570\u636e\uff0c\u6570\u636e\u5927\u5c0f\u572810^12\u4e4b\u5185\uff0c\u5982\u679c\u76f4\u63a5\u5f00\u4e00\u4e2a10^12\u7684\u6570\u7ec4\u5c31\u80af\u5b9a\u4f1a\u8d85\uff0c\u800c\u5f00\u4e00\u4e2a10^3\u7684long long\u6570\u7ec4\u5c31\u4e0d\u4f1a\u8d85\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5148\u628a\u6570\u636e\u5b58\u5728\u4e00\u4e2a**\u7ed3\u6784\u4f53\u6570\u7ec4**\u91cc\u9762\uff0c\u5bf9\u6570\u636e\u6392\u5e8f\u540e\u518d\u5c06\u7ed3\u6784\u4f53\u6570\u7ec4\u4e2d\u7684\u6570\u636e**\u4f4d\u7f6e**\u8f6c\u5b58\u5230\u53e6\u4e00\u4e2a\u6570\u7ec4\u4e0a\u5c31\u5b8c\u5168\u53ef\u4ee5\u907f\u514dMLE\n\n##### Q:\u90a3\u6837\u6570\u636e\u4e0d\u5c31\u65e0\u6548\u4e86\u5417\uff1f\uff1f\uff1f\n\n##### A:\u662f\u7684\uff0c\u79bb\u6563\u5316\u4f1a\u4f7f\u8bfb\u5165\u7684\u5b9e\u9645\u5143\u7d20\u65e0\u6548\uff0c\u8fd9\u5c31\u5f15\u51fa\u4e86\u6211\u4eec\u7684\u4e0b\u4e00\u4e2a\u95ee\u9898\n\n## 2.\u79bb\u6563\u5316\u9002\u7528\u8303\u56f4\n\n\u7531\u4e8e\u6570\u636e\u79bb\u6563\u5316\u4e0d\u4f1a\u5b58\u50a8\u8bfb\u5165\u7684\u6570\u636e\uff0c\u6240\u4ee5\u9700\u8981\u4fdd\u8bc1:\u9898\u76ee\u53ea**\u9700\u8981\u5404\u5143\u7d20\u4e4b\u95f4\u7684\u5927\u5c0f\u5173\u7cfb\u800c\u4e0e\u5143\u7d20\u5177\u4f53\u5927\u5c0f\u65e0\u5173**\n\n\u800c\u9006\u5e8f\u5bf9\u6070\u597d\u6ee1\u8db3\u8fd9\u79cd\u5173\u7cfb\n\n\u6bd4\u5982:22000 111265 1000\n\n\u7136\u800c\u6211\u4eec\u6839\u672c\u4e0d\u9700\u8981\u77e5\u9053\u8fd9\u4e9b\u5143\u7d20\u7684\u5b9e\u9645\u5927\u5c0f\uff0c\u53ea\u9700\u8981\u77e5\u9053\u5143\u7d20\u4e4b\u95f4\u5927\u5c0f\u5173\u7cfb\u5c31\u597d\n\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u4e0a\u9762\u90a3\u7ec4\u6570\u636e\u7b49\u4ef7\u4e8e 2 3 1\n\n\u6545:\u9006\u5e8f\u5bf9\u5b8c\u5168\u53ef\u4ee5\u4f7f\u7528\u79bb\u6563\u5316(\u81f3\u4e8e\u600e\u4e48\u79bb\u6563\uff0c\u8c8c\u4f3c\u65b9\u6cd5\u5f88\u591a\uff0c\u8fd9\u91cc\u5c31\u4ecb\u7ecd\u4e00\u79cd\u6211\u770b\u61c2\u4e86\u7684)\n\n## 3.\u79bb\u6563\u5316\n```cpp\nint b[500010];\nstruct in{\n  int shu;\n  int weizhi;\n}dian[500010];\nbool cmp(in a , in b){\n  if(a.shu == b.shu)  return a.weizhi < b.weizhi;\n  return a.shu < b.shu;\n}\nfor(int i = 1 ; i <= n ; i ++) {\n\t  cin >> dian[i].shu;\n\t  dian[i].weizhi = i;\n\t}\n\tsort(dian + 1 , dian + 1 + n , cmp);\n\tfor(int i = 1 ; i <= n ; i ++){\n\t  b[dian[i].weizhi] = i;\n\t}\n```\n\n\u54b1\u4eec\u4e00\u6b65\u4e00\u6b65\u6765\u770b\uff0cshu\u53d8\u91cf\u91cc\u9762\u5b58\u7684\u5c31\u662f\u5b9e\u9645\u5143\u7d20\u5927\u5c0f\uff0cweizhi\u5c31\u662f\u5143\u7d20\u6240\u5728\u7684\u4f4d\u7f6e,b\u91cc\u9762\u5c31\u662f\u79bb\u6563\u540e\u7684\u6570\u636e\u5566~\n~~(\u6ca1\u9519\u6211\u5c31\u662f\u559c\u6b22\u7528\u62fc\u97f3)~~\n\n\u5982\u679c\u4e24\u4e2a\u5143\u7d20\u7684\u5b9e\u9645\u5927\u5c0f\u76f8\u540c\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u5c06\u4ed6\u4eec\u6309\u7167\u4f4d\u7f6e\u6392\u5e8f(\u4fdd\u8bc1\u5373\u4f7f\u79bb\u6563\u4e5f\u4e0d\u81f3\u4e8e\u79bb\u7684\u8fc7\u6563)\uff0c\u5426\u5219\u5c31\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n\n\u7136\u540e\u5c31\u662f\u50cf\u4e0a\u9762\u90a3\u7ec4\u6570\u636e\u4e00\u6837\uff0c\u53ea\u9700\u8981\u5b58\u50a8\u6392\u5e8f\u540e\u7684\u4f4d\u7f6e\u5c31\u597d\u5566~\n\n\u81f3\u4e8e\u548c\u6811\u72b6\u6570\u7ec4\u7ed3\u5408\u4e4b\u7c7b\u7684\uff0c\u5404\u4f4d\u5927\u4f6c\u5df2\u7ecf\u8bb2\u5f97\u5f88\u6e05\u695a\u5566\uff0c\u6211\u5c31\u4e0d\u518d\u591a\u8bf4\u5566\n\n## 4.\u5b8c\u6574\u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 5e5 + 10;\nint b[maxn] , n , tree[maxn];\nstruct in{\n\tint shu;\n\tint weizhi;\n}dian[maxn];\nint lowbit(int x){\n\treturn x & -x;\n}\nint query(int x){\n\tint ans = 0;\n\tfor(;x;x -= lowbit(x)){\n\t\tans += tree[x];\n\t}\n\treturn ans;\n}\nvoid add(int x){\n\tint ans = 0;\n\tfor(;x <= n; x += lowbit(x)){\n\t\ttree[x] += 1;\n\t}\n}\nint read(){\n\tchar x = getchar();\n\tint ans = 0;\n\tfor(;x < '0' || x >'9' ; x = getchar());\n\tfor(;x >= '0' && x <= '9' ; x = getchar()){\n\t\tans *= 10;\n\t\tans += (x - '0');\n\t}\n\treturn ans;\n}\nbool cmp(in a , in b){\n\tif(a.shu == b.shu)  return a.weizhi < b.weizhi;\n\treturn a.shu < b.shu;\n}\nint main(){\n\tn = read();\n\tfor(int i = 1 ; i <= n ; i ++) {\n\t\tdian[i].shu = read();\n\t\tdian[i].weizhi = i;\n\t}\n\tsort(dian + 1 , dian + 1 + n , cmp);\n\tfor(int i = 1 ; i <= n ; i ++){\n\t\tb[dian[i].weizhi] = i;\n\t}\n\tlong long ans = 0;\n\tfor(int i = 1 ; i <= n ; i ++){\n\t\tadd(b[i]);\n\t\tans += i - query(b[i]);\n\t}\n\tcout << ans;\n\treturn 0;\n}\n```\n\n\u518d\u6b21\u611f\u8c22[@\u5b66\u65e0\u6b62\u5883](https://www.luogu.org/space/show?uid=68975)\u5927\u4f6c\uff0c\u5927\u4f6c%%%\n\n\u7ed9\u81ea\u5df1\u7684[\u535a\u5ba2](https://www.luogu.org/blog/weiyi/solution-p1908)\u6253\u4e2a\u5e7f\u544a",
        "postTime": 1571998280,
        "uid": 218629,
        "name": "weiyi",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u672c\u4eba\u624d\u5f00\u59cb\u5b66c++\uff0c\u6709\u9519\u8bef\u8fd8\u8bf7\u5404\u4f4d\u5927\u4f6c\u6307\u51fa\u6765\uff0c\u8c22\u8c22\uff01\n\n\u6211\u5199\u8fd9\u7bc7\u9898\u89e3\u4e3b\u8981\u662f\u5bf9\u4e8e\u4e00\u4e9b\u5927\u4f6c\u7684\u5c0f\u9519\u8bef\u7684\u4e00\u4e9b\u5b8c\u5584\uff0c\u6216\u8bb8\u4e5f\u53ef\u4e3a\u4f60\u63d0\u4f9b\u4e00\u4e2a\u5c0f\u5c0f\u7684\u521b\u65b0\u3002\n\n\u6b64\u9898\u7684\u601d\u8def\u5462\uff0c\u8fd8\u6bd4\u8f83\u597d\u60f3\uff0c\u6bd4\u5982\u5982\u4e0b\uff1a\n\n```\n  \u6570\uff1a5 1 3 2 4\n\u5e8f\u53f7\uff1a1 2 3 4 5 \n```\n\n\u9006\u5e8f\u5bf9\u7684\u6761\u4ef6\u662f\u4ec0\u4e48\u5462\uff1f\u662f\n```\nai>aj&&i<j\n```\n\n\u90a3\u4e48\u53ef\u4ee5\u5efa\u7acb\u4e00\u4e2a a[] \uff0c\u6765\u5b58\u50a8\u5f53\u524d\u7b2c i \u4e2a\u6570\u7684\u524d\u9762\u6709\u90a3\u4e9b\u6570\u51fa\u73b0\u4e86\uff0c\u90a3\u4e48 i \u524d\u9762\u88ab\u63d2\u5165\u7684\u6570**\u5df2\u7ecf\u6ee1\u8db3\u5e8f\u53f7\u5c0f\u4e8ei**,\u6545\u53ea\u8981\u518d\u6ee1\u8db3 i \u524d\u9762\u7684\u6570\u6bd4 i \u5927\u5373\u53ef\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u6811\u72b6\u6570\u7ec4\u3002\n```\n//\u5bf9\u4e8e\u4efb\u610f\u5e8f\u5217\uff0c\u4f60\u53ef\u5df2\u5982\u4e0b\u6c42\u548c\uff0c\u8bc1\u660e\u53ef\u4ee5\u81ea\u884c\u641c\u7d22\n\nint c[100000];//\u6570\u7ec4 \n\ninline void updata(int i,int v){ while(i<=n) c[i]+=v,i+=i&(-i);}//c[i]\u7684\u6539\u53d8\u503c\u503c\u4e3a1\n                                            int getsum(int i){\n\tint s=0;\n\twhile(i) s+=c[i],i-=i&(-i);\n\treturn s;\n}//\u6c42\u548c \n```\n\n\u4f46\u662f\u5982\u679c\u662f 1 100000 200000 \u53c8\u8be5\u5982\u4f55\u5462\uff1f\u5176\u5b9e\u5b83\u4e0e 1 2 3 \u662f\u76f8\u540c\u7684\u3002\u8fd9\u4fbf\u662f\u6240\u8c13\u7684\u79bb\u6563\u5316\uff0c\u5f53\u7136\uff0c\u79bb\u6563\u5316\u8fd8\u5305\u542b\u53bb\u91cd\u3002\n\n\u6211\u5c06\u5927\u5c0f\u6309 \u5927--->\u5c0f \u6392\u5e8f\uff0c\u5e76\u5224\u65ad\u6b64\u70b9\u524d\u6709\u591a\u5c11\u70b9\u7684\u5e8f\u53f7\u5c0f\u4e8e\u5b83\uff0c\u8fd9\u4fbf\u662f\u6b64\u70b9\u7684\u9006\u5e8f\u5bf9\uff0c\u4e8e\u662f\u4f60\u4fbf\u53ef\u4ee5\u5199\u51fa\uff1a\n\n35\u5206\n\n```\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\n\nconst ll MAX=1e6+5;\n\nstruct node{\n\tll num;//\u7f16\u53f7 \n\tll v;//\u6743\u503c \n}f[MAX];\n\nll n;//n\u4e2a\u6570 \nll ans;//\u9006\u5e8f\u5bf9\u4e2a\u6570 \nll c[MAX];//\u6811\u72b6\u6570\u7ec4 \n\nint getsum(int i){\n\tint s=0;\n\twhile(i) s+=c[i],i-=i&(-i);\n\treturn s;\n}//\u6c42\u548c \n\ninline void updata(int i){ while(i<=n) c[i]++,i+=i&(-i);}//c[i]\u7684\u6539\u53d8\u503c\u503c\u4e3a1\n\ninline bool cmp(node x,node y){ \n\treturn x.v>y.v;\n}\n\ninline ll read(){\n\tint x=0,f=1; char c=getchar();\n\twhile(c<'0'||c>'9'){ if(c=='-') f=-1; c=getchar();}\n\twhile(c>='0'&&c<='9'){ x=(x<<1)+(x<<3)+(c^48); c=getchar();}\n\treturn x*f;\n}\n\nint main(){\n\t\n\tn=read();\n\tfor(register ll i=1;i<=n;i++) f[i].v=read(),f[i].num=i;\n\n\tsort(f+1,f+n+1,cmp);//\u6392\u5e8f(\u6309\u6743\u503c\u5927-->\u5c0f)\n\t\n\tfor(register ll i=1;i<=n;i++){\n\t\tupdata(f[i].num);\n\t\tans+=getsum(f[i].num-1);//\u6211\u7684\u9006\u5e8f\u5bf9\u6709\u54ea\u4e9b \n\t}\n\t\n\tprintf(\"%lld\",ans);\n\t\n\treturn 0;\n}\n\n```\n\n\u90a3\u4e3a\u4f55\u4e0d\u662f\u6ee1\u5206\u5462\uff1f\n\n\n\u8fd9\u662f\u56e0\u4e3a\u5bf9\u4e8e\uff1a\n\n```\n  \u6570\uff1a8 8\n\u5e8f\u53f7\uff1a1 2 \n```\n\n\n\u800c\u8a00\uff0c\u540e\u9762\u7684 8 \u4f1a\u56e0\u4e3a\u524d\u9762\u6709\u4e00\u4e2a\u5e8f\u53f7\u4e3a1\u7684\u6570\u800c\u4ea7\u751f\u9006\u5e8f\u5bf9\uff0c\u90a3\u8be5\u5982\u4f55\u907f\u514d\u5462\uff1f\u8981\u53bb\u91cd\u4e48\uff1f\n\n\u5176\u5b9e\u4e0d\u7528\uff0c\u5bf9\u4e8e\u503c\u76f8\u540c\u7684\u6570\uff0c\u628a\u5e8f\u53f7\u5927\u7684\u653e\u524d\u9762\u5373\u53ef\uff0c\u5373\u6539\u52a8 cmp \u51fd\u6570\u4e3a\n```\ninline bool cmp(node x,node y){ \n\tif(x.v==y.v) return x.num>y.num;\n\treturn x.v>y.v;\n}\n```\n\u5373\u53ef\u3002\n\nAC\u4ee3\u7801\n```\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\n\nconst ll MAX=1e6+5;\n\nstruct node{\n\tll num;//\u7f16\u53f7 \n\tll v;//\u6743\u503c \n}f[MAX];\n\nll n;//n\u4e2a\u6570 \nll ans;//\u9006\u5e8f\u5bf9\u4e2a\u6570 \nll c[MAX];//\u6811\u72b6\u6570\u7ec4 \n\nint getsum(int i){\n\tint s=0;\n\twhile(i) s+=c[i],i-=i&(-i);\n\treturn s;\n}//\u6c42\u548c \n\ninline void updata(int i){ while(i<=n) c[i]++,i+=i&(-i);}//c[i]\u7684\u6539\u53d8\u503c\u503c\u4e3a1\n\ninline bool cmp(node x,node y){ \n\tif(x.v==y.v) return x.num>y.num;\n\treturn x.v>y.v;\n}\n\ninline ll read(){\n\tint x=0,f=1; char c=getchar();\n\twhile(c<'0'||c>'9'){ if(c=='-') f=-1; c=getchar();}\n\twhile(c>='0'&&c<='9'){ x=(x<<1)+(x<<3)+(c^48); c=getchar();}\n\treturn x*f;\n}\n\nint main(){\n\t\n\tn=read();\n\tfor(register ll i=1;i<=n;i++) f[i].v=read(),f[i].num=i;\n\n\tsort(f+1,f+n+1,cmp);//\u6392\u5e8f(\u6309\u6743\u503c\u5927-->\u5c0f)\n\t\n\tfor(register ll i=1;i<=n;i++){\n\t\tupdata(f[i].num);\n\t\tans+=getsum(f[i].num-1);//\u6211\u7684\u9006\u5e8f\u5bf9\u6709\u54ea\u4e9b \n\t}\n\t\n\tprintf(\"%lld\",ans);\n\t\n\treturn 0;\n}\n```\n\n",
        "postTime": 1564207122,
        "uid": 172872,
        "name": "\u5723\u5802\u4e4b\u5730",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u6b64\u5904\u662f\u6811\u72b6\u6570\u7ec4\u7b80\u5355\u9898\u89e3\n\n\u6838\u5fc3\u539f\u7406\uff1a\u628a\u6811\u72b6\u6570\u7ec4\u5f53\u6210\u6876\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u6811\u5feb\u901f\u627e\u51fa\u4e4b\u540e\u6709\u591a\u5c11\u4e2a\u6570\uff08\u5373\uff1a\u5f53\u524d\u6570\u7684\u603b\u6570 - \u8fd9\u4e2a\u6570\u4e4b\u524d\u7684\u6570\u4e2a\u6570\uff09\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint n,a[50001],p[50001],tree[100001],ans;\n//\u8fd9\u91cc\u662f\u6811\u72b6\u6570\u7ec4\u6a21\u677f\u90e8\u5206\ninline void add(int i,int x){\n    while(i<=n){\n        tree[i]+=x;\n        i+=i&-i;\n    }\n}\ninline int quary(int i){\n    int s=0;\n    while(i){\n        s+=tree[i];\n        i-=i&-i;\n    }\n    return s;\n}\ninline bool cmp(int x,int y){\n    return a[x]<a[y];\n} //\u79bb\u6563\u5316\u4e00\u822c\u5199\u6cd5\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++){\n        scanf(\"%d\",&a[i]);\n        p[i]=i;\n    } \n    sort(p+1,p+1+n,cmp);\n    for(int i=1;i<=n;i++)\n        a[p[i]]=i;\n    for(int i=1;i<=n;i++){\n        ans+=i-1-quary(a[i]);    //\u5f53\u524d\u6811\u72b6\u6570\u7ec4\u4e2d\u6709i-1\u4e2a\uff0cquary(a[i])\u524d\u7f00\u548c\u67e5\u51faa[i]\u524d\u7684\u4e2a\u6570\n        add(a[i],1);                    //\u503c\u4e3aa[i]\u7684\u6570\u53c8\u589e\u52a0\u4e86\u4e00\u4e2a\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n\n```",
        "postTime": 1503216718,
        "uid": 13052,
        "name": "iostream",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u79bb\u6563\u5316+\u6811\u72b6\u6570\u7ec4\uff1b\n\n\nps\uff1a\u7ebf\u9762\u63d0\u5230\u7684\u6570\u7ec4\u662f\u5728\u4ee3\u7801\u4e2d\u51fa\u73b0\u7684\u6570\u7ec4\uff1b\n\n\n\u5bf9\u4e8e\u521a\u5f00\u59cb\u4e86\u89e3\u6811\u72b6\u6570\u7ec4\u7684\u540c\u5b66\uff0c\u8fd9\u662f\u4e00\u9053\u4e0d\u9519\u7684\u7ec3\u624b\u9898\uff1b\n\n\n\u601d\u8def\uff1a\u6c42\u9006\u5e8f\u5bf9\uff0c\u90a3\u6211\u4eec\u53ef\u4ee5\u8f6c\u6362\u6c42\u5728\u4f4d\u7f6e i \u4e4b\u524d\u7684\u6570\uff0c\u4e14\u6bd4 i \u8981\u5c0f\u7684\u6570\u7684\u4e2a\u6570\uff0c\u7528\u6570\u7ec4t[ ]\u6765\u8bb0\u5f55\uff0c\u6700\u540e\u7528ans\u5c06\u6240\u6709\u7684t[ ]\u52a0\u8d77\u6765\u5c31\u662f\u7ed3\u679c\uff1b\n\n\n\u90a3\u8be5\u600e\u6837\u6c42t[ ]\u5462\uff1f\n\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u5148\u5c06\u8f93\u5165\u7684\u539f\u5148\u7684\u6570\u5b57\u8bb0\u5f55\u4e0b\u6765\uff0c\u5e76\u5c06\u4e4b\u79bb\u6563\u5316\uff1b\n\n\n\u518d\u6c42\u51fa\u6570\u7ec4a[ ]\uff0c\u5176\u8bb0\u5f55\u7684\u662f\u539f\u5148\u7684\u5728\u6574\u4e2a\u8f93\u5165\u6570\u4e2d\u7684\u5927\u5c0f\uff1b\n\n\n\u6700\u540e\u7528\u6811\u72b6\u6570\u7ec4\u6765\u6c42\u51fat[ ];\n\n\n\u5982\u6709\u4e0d\u61c2\uff0c\u53ef\u4ee5\u770b\u4e00\u4e0b\u4ee3\u7801\uff1b\n\n```cpp\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\ninline int read()\n{\n    int x=0,f=1;char ch=getchar();\n    while(ch<'0'||ch>'9'){if(ch=='-') f=-1;ch=getchar();}\n    while(ch>='0' && ch<='9'){x+=x*10+ch-'0';ch=getchar();}\n    return x*f; \n```\n}//\u5feb\u8bfb\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u7740\u6837\u5199\uff1b\n```cpp\nconst int maxn=40000+10;\nint n,a[maxn],t[maxn],c[maxn];\nstruct Node\n{\n    int val;\n    int pos;\n}q[maxn];\nbool cmp(Node a,Node b)\n{\n    return a.val>b.val;//\u6309\u4ece\u5927\u5230\u5c0f\u7684\u987a\u5e8f\u6392\uff1b \n}\nvoid update(int k)\n{\n    while(k<=n){c[k]+=1;k+=k&-k;}\n}\nint get(int k)\n{\n    int sum=0;\n    while(k>=1){sum+=c[k];k-=k&-k;}\n    return sum;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int x,i=1;i<=n;i++) q[i]=(Node){read(),i};\n    sort(q+1,q+n+1,cmp);\n    for(int i=1;i<=n;i++)//\u79bb\u6563\u5316\u64cd\u4f5c\uff1b \n    {\n        if(q[i].val!=q[i-1].val || i==1) a[q[i].pos]=i;//a[]\u8bb0\u5f55\u5176\u5728\u8f93\u5165\u4e2d\u7684\u5927\u5c0f\uff1b \n        else a[q[i].pos]=a[q[i-1].pos];//\u5982\u679c\u6709\u76f8\u540c\u7684\u6570\u5b57 \uff1b \n    }\n    for(int i=1;i<=n;i++)\n    {\n        t[i]=get(a[i]-1);\n        //\u6c42\u6bd4a[i]\u518d\u8f93\u5165\u6570\u4e2d\u7684\u5c0f\u4e14\u5728i\u4f4d\u7f6e\u7684\u540e\u9762\uff1b\n        //a[i]-1\u662f\u4e3a\u4e86\u9664\u53bb\u672c\u8eab\uff1b    \n        update(a[i]);\n        //\u5c06\u6811\u72b6\u6570\u7ec4\u66f4\u65b0\uff0c\u56e0\u4e3a\u67e5\u8be2\u8fc7\u4e86\uff0c\u5982\u679c\u540e\u9762\u7684\u8282\u70b9\u6bd4\u5176\u5c0f\u4f1a\u7528\u5230\uff1b \n    }\n    int ans=0;\n    for(int i=1;i<=n;i++) ans+=t[i];//\u7d2f\u52a0\u7b54\u6848\uff1b \n    printf(\"%d\",ans);\n}\n```",
        "postTime": 1503213388,
        "uid": 25361,
        "name": "\u4e3f\u738b\u8005\u4e4b\u8def",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u8fd9\u9898\u5f88\u6c34\uff0c \u5f52\u5e76\u6392\u5e8f\u5305\u8fc7\uff0c\u57fa\u672c\u6ca1\u95ee\u9898\u3002\n\n\u4ee5\u4e0b\u4e3aPascal \u4ee3\u7801\u3002\n\n\n\n```cpp\nvar\n  i,j,n,m,ans:longint;//ans\u8bb0\u5f55\u9006\u5e8f\u5bf9\u6570\u3002\n  a,b:array[1..40000] of longint;\nfunction gb(l,r:longint):longint;\nvar  \n  i,j,k,m:longint;\nbegin\n  if(l=r) then exit;//\u4e00\u4e2a\u6570\u8fd8\u6392\u4ec0\u4e48\u5e8f\u3002\n  m:=(l+r) div 2;//\u53d6\u4e2d\u95f4\u3002\n  gb(l,m); gb(m+1,r);//\u5de6\u53f3\u6392\u597d\u5e8f\u3002\n  i:=l; j:=m+1;\n  for k:=l to r do//\u5408\u5e76\u8fc7\u7a0b\u3002\n  begin\n    if(j>r) then begin b[k]:=a[i]; inc(i); end//j>r\u8bf4\u660e\u53f3\u4fa7\u5168\u6392\u597d\u4e86\u3002\n    else\n      if(i>m) then begin b[k]:=a[j]; inc(j); end//\u540c\u7406\u3002\n      else\n      if(a[i]>a[j]) then//\u9009\u62e9\u5c0f\u7684\u90a3\u4e2a\u5f80\u524d\u6392\u3002\n      begin\n        b[k]:=a[j]; inc(j);\n        ans:=ans+m-i+1;//\u6ee1\u8db3\u9006\u5e8f\u5bf9\u6761\u4ef6\uff0c\u5de6\u4fa7\u6240\u6709\u672a\u6392\u5e8f\u7684\u6570\u90fd\u5f62\u6210\u9006\u5e8f\u5bf9\u3002\n      end\n      else\n        begin\n          b[k]:=a[i]; inc(i);//\u540c\u7406\u3002\n        end;\n  end;\n  for k:=l to r do a[k]:=b[k];//\u628ab\u6570\u7ec4\u8d4b\u7ed9a\u6570\u7ec4\u3002\nend;\nbegin\n  readln(n);\n  for i:=1 to n do read(a[i]);\n  gb(1,n);//\u5f00\u59cb\u5f52\u5e76\u3002\n  writeln(ans);//\u8f93\u51fa\u2026\u2026\u3002\nend.\n```",
        "postTime": 1500102126,
        "uid": 31928,
        "name": "\u6731\u5b50\u6657",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "###### ~~\u8fd9\u4e2a\u9898\u597d\u50cf\u5df2\u7ecf\u6709\u5f88\u591a\u9898\u89e3\u4e86~~\n###### \u8fd9\u7bc7\u9898\u89e3\u4e3b\u8981\u7ed9\u6b63\u5728\u5b66\u7684\u5206\u6cbb\u7684\u540c\u80de\u4eec\u8bb2\u4e00\u4e0b\u5f52\u5e76\u6392\u5e8f\n\u75af\u72c2\u89e3\u91ca\n------------\n\u603b\u4f53\u601d\u60f3\uff1a\u8be5\u7b97\u6cd5\u91c7\u7528\u5206\u6cbb\u6cd5\uff0c\u5c06\u5df2\u6709\u5e8f\u7684\u5b50\u5e8f\u5217\u5408\u5e76\uff0c\u5f97\u5230\u5b8c\u5168\u6709\u5e8f\u7684\u5e8f\u5217\u3002\u5373\u5148\u4f7f\u6bcf\u4e2a\u5b50\u5e8f\u5217\u6709\u5e8f\uff0c\u518d\u4f7f\u5b50\u5e8f\u5217\u6bb5\u95f4\u6709\u5e8f\u3002\uff08\u9012\u5f52\u8fc7\u7a0b\uff09\n###### ~~\u4ec0\u4e48\u9b3c\uff1f\uff1f\u5b8c\u5168\u542c\u4e0d\u61c2\uff1f\uff1f~~\n\u8fd9\u91cc\u8be6\u7ec6\u8bb2\u89e3\u4e00\u4e0b\uff0c\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u6837\u4f8b\u662f\u5982\u4f55\u5f52\u5e76\u6392\u5e8f\u7684:\n\n\u6837\u4f8b\uff1a 5 4 2 6 3 1\uff0c\u7528\u4e00\u4e2aa\u6570\u7ec4\u8868\u793aa[1,2,3,4,5,6]\uff1b\n\n\u9996\u5148\uff1a\u9012\u5f52\u641c\u7d221~6\uff0c\u7136\u540e\u8fdb\u884c\u4e8c\u5206\uff08\u5206\u6cbb\uff09\uff0c\u5c06\u533a\u95f41~6\u9012\u5f52\u5206\u89e3\u62101~3\u548c4~6\uff0cmid=\uff081+6\uff09/2=3\uff1b(mid\u5411\u4e0b\u53d6\u6574)  \n\n\u7ee7\u7eed\uff1a\u9012\u5f52\u641c\u7d221~3\uff0c\u5206\u89e3\u4e3a1~2\u548c3~3\uff0c\u7136\u540e\u5c061~3\u5206\u89e3\u4e3a1~1\uff0c2~2\uff0c\u56e0\u4e3al=r\u7ed3\u675f\u51fd\u6570\uff1b  \n\n\u56de\u52301~2\uff1amid=(1+2)/2=1\uff0c\u5b9a\u4e49\u6570\u7ec4rr\u8868\u793a\u6392\u5e8f\u540e\u7684\u6570\uff0c\u8fdb\u884c\u9006\u5e8f\u5bf9\u7684\u6bd4\u8f83\u3002\n\n\u8fc7\u7a0b\uff1a\u5b9a\u4e49i=l,j=mid+1,k=l(i,j\u7528\u4e8e\u5b58\u50a8\u6b63\u5728\u6bd4\u8f83\u7684\u6307\u9488\uff0ck\u7528\u4e8e\u5b58\u50a8\u6392\u5e8f\u540e\u7684\u6570\u7684\u6307\u9488)\n\n###### ~~\u89e3\u91ca\u770b\u4e0d\u61c2\uff1f\u7ee7\u7eed\u5f80\u4e0b\u770b~~\n\u6b64\u65f6i=1,j=2,k=1;\n\n\u8fdb\u884c\u5faa\u73af\uff0c\u53ea\u8981i\u5c0f\u4e8e\u7b49\u4e8emid\u5e76\u4e14j\u5c0f\u4e8e\u7b49\u4e8er\u5c31\u8fdb\u884c\u9006\u5e8f\u5bf9\u7684\u6bd4\u8f83\uff1b\n\n\u6bd4\u8f83a[i]\u548ca[j]\uff0c\u4e5f\u5c31\u662f5\u548c4\uff0c\u7531\u4e8e5\u5927\u4e8e4\uff0c\u6ee1\u8db3\u9006\u5e8f\u5bf9\u7684\u8981\u6c42\uff0c\u90a3\u4e48\u4ee4rr[k]=a[j]\uff0c\u5373rr[1]=a[2]=4\uff0c\u4e4b\u540e\uff0cj\u548ck\u81ea\u52a01\uff0c\u9006\u5e8f\u5bf9\u7684\u6570\u91cf\u52a01\uff1b\u7531\u4e8ej\u6b64\u65f6\u5df2\u7ecf\u5927\u4e8er\uff0c\u7ed3\u675f\u5faa\u73af\u3002\n\n\u4f46\u662f\u6b64\u65f6i\u4f9d\u7136\u662f\u5c0f\u4e8e\u7b49\u4e8er\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u5bf9a[i]\u7ee7\u7eed\u8d4b\u503c\uff0c\u5373\u4ee4rr[k]=a[i]\u5e76\u8ba9k\u548ci\u81ea\u52a0\u76f4\u5230i\u5927\u4e8emid\uff0c\u5177\u4f53\u7684\u5c31\u662f\u4ee4rr[2]=a[1]=5\uff1b\n\n\u6700\u540e\uff0c\u5c06a\u7684\u503c\u5168\u90e8\u6362\u4e3arr\uff0c\u7ed3\u675f\u51fd\u6570;\n\n\u4e0d\u96be\u53d1\u73b0\u5728\u8fdb\u884c\u4e86\u4e00\u6ce2\u53d8\u6362\u4e4b\u540e\uff0c\u8fd9\u4e2a\u5b50\u533a\u95f4\u5df2\u7ecf\u53d8\u4e3a\u4e86\u6709\u5e8f\u7684\uff0c\u6b64\u65f6\u6211\u4eec\u7684a\u6570\u7ec4\u4e3a\n\n4 5 2 6 3 1\n\n\u7ee7\u7eed\u8fdb\u884c\uff1a\u7531\u4e8e3~3\u4e2dl=r\uff0c\u76f4\u63a5\u7ed3\u675f\n\n\u63a5\u4e0b\u6765\u8fdb\u884c1~3\u7684\u9006\u5e8f\u5bf9\u67e5\u627e\uff08\u5408\u5e761~2\u548c3~3\uff09,mid=(1+2)/2=2\n\n\u6bd4\u8f83a[i]\u548ca[j],\u5373a[1]\u548ca[3]\uff0c\u6ee1\u8db3\u9006\u5e8f\u5bf9\u7684\u8981\u6c42\uff0crr[k]=a[j],\u5373rr[1]=a[3],j\u548ck\u81ea\u52a0\uff1b\n\n#### \u4f46\u662f\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53d1\u73b0\uff0c\u7531\u4e8el~mid\u8fd9\u4e2a\u533a\u95f4\u4e5f\u5c31\u662f1~2\u5728\u4e4b\u524d\u5df2\u7ecf\u662f\u6709\u5e8f\u7684\u4e86\uff0c\u4e5f\u5c31\u662f\u524d\u9762\u7684\u603b\u6bd4\u540e\u9762\u7684\u5c0f\uff0c\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u524d\u9762\u7684i\u5df2\u7ecf\u4e0ej\u4ea7\u751f\u4e86\u4e00\u4e2a\u9006\u5e8f\u5bf9\uff0c\u90a3\u4e48\u4ecei\u5f00\u59cb\u5230mid\u90fd\u53ef\u4ee5\u4e0e\u73b0\u5728\u7684j\u4ea7\u751f\u9006\u5e8f\u5bf9\uff0c\u6240\u4ee5\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u4e0d\u5e94\u8be5\u53ea\u52a01\uff0c\u800c\u662f\u52a0\u4e0amid-i+1\u3002\n\n#### \u90a3\u4e48\u4f1a\u4ea7\u751f\u91cd\u590d\u5417\uff1f\u5e76\u4e0d\u4f1a\u3002\u56e0\u4e3a\u6bcf\u4e00\u6b21\u6211\u4eec\u5728\u5224\u65ad\u662f\u9006\u5e8f\u5bf9\u540e\u4f1a\u5c06j\u81ea\u52a0\uff0c\u540e\u9762\u7684i\u5e76\u6ca1\u6709\u673a\u4f1a\u548c\u524d\u9762\u7684j\u8fdb\u884c\u6bd4\u8f83\u4e86\n\n\u6240\u4ee5\u7ee7\u7eed\uff0c\u73b0\u5728\u9006\u5e8f\u5bf9\u5df2\u7ecf\u67093\u4e2a\u4e86\uff0c\u7531\u4e8ej\u5df2\u7ecf\u5927\u4e8er\uff0c\u7ed3\u675f\u5faa\u73af\u3002\n\n\u540c\u4e0a\uff0c\u6211\u4eec\u4ee4\u73b0\u5728\u7684rr[k]=a[i];\u5373rr[2]=a[1]=4\uff1b\u7ee7\u7eed\u540c\u4e0a\uff0c\u6211\u4eec\u5c06a\u5168\u90e8\u6362\u4e3arr\uff0c\u73b0\u5728\u7684a\u6570\u7ec4\u4e3a:\n\n2 4 5 6 3 1\n\n###### \uff08~~\u6211\u4eec\u7684\u7535\u8111\u539f\u6765\u505a\u4e86\u8fd9\u4e48\u591a\u4e8b\u60c5~~\uff09\n\n\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u7ee7\u7eed\u52064~6\uff0c\u5206\u4e3a4~5\u548c6~6\uff0c\u540c\u4e0a\uff0c\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u4f1a\u53d8\u4e3a6\uff0ca\u6570\u7ec4\u4f1a\u53d8\u4e3a\uff1a\n\n2 4 5 1 3 6\n\n\u6700\u540e\uff0c\u6211\u4eec\u4f1a\u5408\u5e761~3\u548c4~6\uff0c\u4e5f\u5c31\u662f\u8fdb\u884c1~6\u7684\u9006\u5e8f\u5bf9\u67e5\u627e\uff08i=1,j=4,mid=3\uff09\n\n\u7531\u4e8ea[i]\u5927\u4e8ea[j]\uff0c\u5373a[1]\u5927\u4e8ea[4]\uff0c\u5219\u4ee4rr[k]=a[j],k\u548cj\u518d\u81ea\u52a0\uff0c\u7531\u4e8e\u4ea7\u751f\u4e863-1+1\u4e2a\u9006\u5e8f\u5bf9\uff0c\u9006\u5e8f\u5bf9\u7684\u4e2a\u6570\u52a03\uff0c\u73b0\u5728\u6709\u4e869\u4e2a\u9006\u5e8f\u5bf9;\n\n\u7ee7\u7eed\u6bd4\u8f83\uff0c\u7531\u4e8ea[i]\u73b0\u5728\u5c0f\u4e8ea[j]\uff0c\u5373a[1]\u5c0f\u4e8ea[5]\uff0c\u4ee4rr[k]=a[i],i\u548ck\u81ea\u52a0\uff0c\u9006\u5e8f\u5bf9\u4e2a\u6570\u4e0d\u53d8\uff1b\n\n\u518d\u7ee7\u7eed\u6bd4\u8f83\uff0c\u7531\u4e8ea[i]\u53c8\u4e00\u6b21\u5927\u4e8ea[j]\uff0c\u4e5f\u5c31\u662fa[2]\u5927\u4e8ea[5],\u4ee4rr[k]=a[j],k\u548cj\u81ea\u52a0\uff0c\u9006\u5e8f\u5bf9\u4e2a\u6570\u589e\u52a03-2+1\u4e2a\uff0c\u4e5f\u5c31\u662f2\u4e2a\uff0c\u73b0\u5728\u4e00\u5171\u670911\u4e2a\u9006\u5e8f\u5bf9\uff1b\n\n\u7ee7\u7eed\u6bd4\u8f83\uff0ca[i]\u5c0f\u4e8ea[j]\uff0c\u5373a[2]\u5c0f\u4e8ea[6]\uff0crr[k]=a[i]\uff1b\n\n\u518d\u6bd4\u8f83\uff0ca[i]\u5c0f\u4e8ea[j]\uff0c\u5373a[3]\u5c0f\u4e8ea[6]\uff0crr[k]=a[i]\uff1b\n\n\u7531\u4e8e\u73b0\u5728i\u8d8a\u754c\uff0c\u505c\u6b62\u5faa\u73af\uff1b\n\n\u4f46\u662fj\u8fd8\u5c0f\u4e8e\u7b49\u4e8er\uff0c\u4ee4rr[k]=a[j]\u5e76\u81ea\u52a0\u5c31\u597d\u4e86\uff1b\n\n\u5728\u8fdb\u884c\u4e86\u6700\u540e\u4e00\u6ce2\u5408\u5e76\u4e4b\u540e\uff0c\u6211\u4eec\u7684a\u6570\u7ec4\u53d8\u4e3a\u4e86\n\n1 2 3 4 5 6\n\n\u4ee5\u53ca\u9006\u5e8f\u5bf9\u6570\u91cf\u53d8\u4e3a\u4e8611\uff1b\n\n###### \u3000\uff08~~\u7686\u5927\u6b22\u559c\u4e86\u5462~~\uff09\n\n\u6700\u540e\u6211\u4eec\u53ea\u9700\u8981\u8f93\u51fa11\u5c31\u597d\u4e86\u3002\n\n#### \u8fd8\u6709\u4e00\u4e2a\u5730\u65b9\u9700\u8981\u89e3\u91ca\uff0c\u4e3a\u4ec0\u4e48\u6bcf\u4e00\u6b21\u6bd4\u8f83\u4e4b\u540e\u5982\u679ca[i]\u5927\u4e8ea[j]\uff0cj\u5c31\u9700\u8981\u81ea\u52a0\uff0c\u53cd\u4e4bi\u5c31\u9700\u8981\u81ea\u52a0\u5462\u3002\u7b54\u6848\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u7531\u4e8e\u6211\u4eec\u7684\u5b50\u533a\u95f4\u662f\u6709\u5e8f\u7684\uff0c\u524d\u9762\u7684\u603b\u6bd4\u540e\u9762\u7684\u7684\u5c0f\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728i\u6216\u8005j\u81ea\u52a0\u4e4b\u540e\uff0c\u53c8\u4f1a\u6709\u5f62\u6210\u9006\u5e8f\u5bf9\u7684\u53ef\u80fd\u3002\n\n\uff08\u5b8c\uff09\n\n\u611f\u8c22\u5927\u5bb6\u770b\u5230\u73b0\u5728\uff0c\u63a5\u4e0b\u6765\u662f\u4ee3\u7801\uff1a\uff09\n------------\n```cpp\n#include<iostream>\nusing namespace std;\nint a[500005],rr[500005],n;//\u770b\u61c2\u524d\u9762\uff0c\u4ee3\u7801\u4e0d\u9700\u8981\u89e3\u91ca\nlong long ans=0; \nvoid gb(int l,int r)\n{\n    if(l==r)return ;\n    int mid=(l+r)/2;\n    gb(l,mid);\n\tgb(mid+1,r);\n    int i=l,j=mid+1,k=l;\n    while(i<=mid&&j<=r)\n    {\n    \tif(a[i]<=a[j])rr[k++]=a[i++];\n\t\telse \n\t\t{\n\t\t\trr[k++]=a[j++];\n\t\t\tans+=(long long)mid-i+1;\n\t\t}\n\t}\n    while(i<=mid)rr[k++]=a[i++];\n    while(j<=r)rr[k++]=a[j++];\n    for(int i=l;i<=r;i++)a[i]=rr[i];\n}\nint main()\n{\n\tcin>>n;\n    for(int i=1;i<=n;i++)cin>>a[i];\n    gb(1,n);\n    cout<<ans;\n    return 0;\n}\n```\n\n\n------------\n\uff08\u672c\u9898\u89e3\u5171125\u884c\uff09",
        "postTime": 1564626884,
        "uid": 224927,
        "name": "lei_yu",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "~~\u6211\u5c31\u662f\u6765\u641e\u4e8b\u60c5\u7684~~\n\n\u6b64\u9898\u7684\u6807\u51c6\u65b9\u6cd5\u4e4b\u4e00\u662f\u5f52\u5e76\u6392\u5e8f\uff0c\u672c\u849f\u84bb\u8fd9\u56de\u4e5f\u7528\u7684\u662f\u5f52\u5e76\u6392\u5e8f\uff0c\u7136\u800c\u5e76\u4e0d\u662f\u4f20\u7edf\u7684\u59ff\u52bf\u3002\u3002\u3002\n\n\u4f20\u7edf\u505a\u6cd5\u4e2d\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u53f3\u8fb9\u5e8f\u5217\u7684\u6570\uff0c\u8ba1\u7b97\u5de6\u8fb9\u5e8f\u5217\u4e2d\u7684\u6570\u4e0e\u5176\u6784\u6210\u7684\u9006\u5e8f\u5bf9\u7684\u6570\u91cf\uff0c\u5e76\u7d2f\u52a0\uff0c\u5f97\u5230\u7ed3\u679c\u3002\n\n\u4f46\u662f\u672c\u849f\u84bb\u5728\u5b66\u4e60\u4e86\u8fd9\u79cd\u505a\u6cd5\u4e4b\u540e\uff0c\u7a81\u7136\u8111\u6d1e\u4e86\u4e00\u4e0b\uff1a\n\n\u6211\u4eec\u80fd\u4e0d\u80fd\u53cd\u8fc7\u6765\u505a\uff0c\u5373\u5bf9\u4e8e\u6bcf\u4e2a\u5de6\u8fb9\u5e8f\u5217\u7684\u6570\uff0c\u8ba1\u7b97\u53f3\u8fb9\u5e8f\u5217\u4e2d\u7684\u6570\u4e0e\u5176\u6784\u6210\u7684\u9006\u5e8f\u5bf9\u7684\u6570\u91cf\uff0c\u5e76\u7d2f\u52a0\uff0c\u5f97\u5230\u7ed3\u679c\u5462\uff1f\n\n\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8fd9\u79cd\u59ff\u52bf\u662f\u53ef\u884c\u7684\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u7ec6\u8282\u8bf7\u89c1\u4ee3\u7801\u53ca\u6ce8\u91ca\u3002\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<cmath>\n#include<ctime>\n#include<cstdlib>\n\n#include<stack>\n#include<queue>\n#include<vector>\n#include<string>\n#include<algorithm>\n#include<map>\n#include<set>\n\n#define ri register int\n#define ll long long\n#define INF 2147483647\n\nusing namespace std;\n\ninline void read(int &x){  //\u8bfb\u5165\u4f18\u5316 \n    x=0;\n    char t=getchar();\n    bool f=0;\n    \n    while(t<'0' || t>'9'){\n        if(x=='-')f=1;\n        t=getchar();\n    }\n    \n    while(t>='0' && t<='9'){\n        x=(x<<3)+(x<<1)+t-'0';\n        t=getchar();\n    }\n    \n    if(f)x=-x;\n}\n\nvoid msort(int,int);\n\nint a[500005],b[500005];  //\u539f\u6570\u7ec4\u548c\u8f85\u52a9\u6570\u7ec4 \nint n;\nll ans=0;\n\nint main(){\n    read(n);\n    for(ri i=1;i<=n;i++)read(a[i]);\n    msort(1,n);\n    printf(\"%lld\\n\",ans);\n    \n    return 0;\n}\n\nvoid msort(int l,int r){\n    if(l==r)return;\n    int mid=(l+r)>>1;\n    msort(l,mid);\n    msort(mid+1,r);\n    \n    int p1=l,p2=mid+1,ph=l;\n    \n    while(p1<=mid && p2<=r){\n        if(a[p1]<=a[p2]){\n            b[ph]=a[p1];\n            p1++;\n            ans+=p2-1-mid;\n            //\u5bf9\u4e8e\u67d0\u4e2aa[p1]\uff0c\u5f53p2\u4e0d\u65ad\u589e\u52a0\u65f6\uff0c\u65e0\u6cd5\u5f97\u5230\u5176\u5bf9\u5e94\u7684\u7ed3\u679c\n\t\t\t//\u5f53p2\u589e\u52a0\u81f3a[p1]<=a[p2]\u65f6\uff0c\u53ef\u5f97\u5230\u6b64a[p1]\u5bf9\u5e94\u7684\u7ed3\u679c\n\t\t\t//a[p1]\u5bf9\u5e94\u7684\u9006\u5e8f\u5bf9\u6570\u91cf\uff0c\u5373\u4e3a\u53f3\u8fb9\u5e8f\u5217\u4e2d\uff0ca[p2]\u524d\u9762\u7684\u6570\u5b57\u7684\u6570\u91cf\uff08\u4e0d\u5305\u62eca[p2]\uff09 \n        }\n        else{\n            b[ph]=a[p2];\n            p2++;\n            //\u4f20\u7edf\u505a\u6cd5\u4e2d\uff0c\u5e94\u5728\u6b64\u5904\u66f4\u65b0ans\n\t\t\t//\u800c\u5728\u672c\u59ff\u52bf\u4e2d\uff0c\u5728\u8fd9\u91cc\u66f4\u65b0\u662f\u9519\u7684\n\t\t\t//\u539f\u56e0\uff1a1.\u4f1a\u5c06\u5de6\u8fb9\u5e8f\u5217\u4e2d\u7684\u6570\u5b57\u5bf9\u5e94\u7684\u7ed3\u679c\u91cd\u590d\u8ba1\u7b97\n\t\t\t//2.\u8003\u8651p2\u4e00\u76f4\u589e\u52a0\u800cp1\u4e0d\u53d8\u7684\u60c5\u51b5\n\t\t\t//\u6b64\u65f6a[p1]\u5bf9\u5e94\u7684\u7ed3\u679c\u4e2d\uff0c\u53ea\u6709\u6700\u540e\u4e00\u4e2a\u662f\u6b63\u786e\u7684\uff0c\u5176\u4f59\u7684\u5747\u9519\u8bef \n        }\n        ph++;\n    }\n    \n    while(p1<=mid){\n        b[ph]=a[p1];\n        p1++;\n        ph++;\n        ans+=r-mid;\n        //\u5982\u679c\u5de6\u8fb9\u5e8f\u5217\u6709\u5269\u4f59\n\t\t//\u5219\u5269\u4e0b\u7684\u6bcf\u4e00\u4e2a\u6570\uff0c\u90fd\u6bd4\u53f3\u8fb9\u5e8f\u5217\u4e2d\u7684\u6240\u6709\u6570\u5927\n\t\t//\u6545\u5de6\u8fb9\u5e8f\u5217\u5269\u4f59\u7684\u6bcf\u4e00\u4e2a\u6570\uff0c\u5176\u5bf9\u5e94\u7684\u9006\u5e8f\u5bf9\u6570\u91cf\u90fd\u4e3a\u53f3\u8fb9\u5e8f\u5217\u4e2d\u6570\u5b57\u7684\u603b\u6570 \n    }\n    \n    while(p2<=r){\n        b[ph]=a[p2];\n        p2++;\n        ph++;\n        //\u6b64\u79cd\u60c5\u51b5\u5bf9\u7b54\u6848\u65e0\u8d21\u732e \n    }\n    \n    for(ri i=l;i<=r;i++)a[i]=b[i];\n}\n```\n",
        "postTime": 1562056595,
        "uid": 22630,
        "name": "Running_Coder",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "#### \u5728\u89e3\u9898\u4e4b\u524d\uff0c\u5148\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u770b\u672c\u9898\u4f1a\u7528\u5230\u800c\u840c\u65b0\u53ef\u80fd\u4e0d\u61c2\u7684\u51e0\u4e2a\u4e8b\u9879\uff1a\n\n\u672c\u9898\u5927\u610f\uff1a\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u65e0\u5e8f\u6570\u7ec4\uff0c\u6c42\u51fa\u7ecf\u8fc7\u6700\u5c11\u591a\u5c11\u6b21\u76f8\u90bb\u5143\u7d20\u7684\u4ea4\u6362\u4e4b\u540e\uff0c\u53ef\u4ee5\u4f7f\u6570\u7ec4\u4ece\u5c0f\u5230\u5927\u6709\u5e8f\n\n\u5bf9\u4e8e\u9006\u5e8f\u5bf9\u7684\u89e3\u91ca\uff1a\u4e24\u4e2a\u6570\uff08a, b\uff09\u7684\u6392\u5217\uff0c\u82e5\u6ee1\u8db3a > b\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e00\u4e2a\u9006\u5e8f\u5bf9\n\n\u5f52\u5e76\u6392\u5e8f\u7684\u601d\u60f3\uff1a\u5148\u628a\u6bcf\u4e2a\u6570\u770b\u6210\u4e00\u6bb5\uff0c\u7136\u540e\u4e24\u4e24\u5408\u5e76\u6210\u4e00\u4e2a\u8f83\u5927\u7684\u6709\u5e8f\u6570\u7ec4\uff0c\u518d\u628a\u8f83\u5927\u7684\u4e24\u4e24\u5408\u5e76\uff0c\u76f4\u5230\u6700\u540e\u6210\u4e3a\u4e00\u4e2a\u6709\u5e8f\u6570\u7ec4\n\n\u5f52\u5e76\u6392\u5e8f\u590d\u6742\u5ea6\uff1a$ O(nlogn) $\n\n#### \u63a5\u4e0b\u6765\u5c31\u662f\u6211\u4eec\u89e3\u9898\u7684\u6b65\u9aa4\u4e86:\n\n\u6839\u636e\u6392\u5e8f\u7b97\u6cd5\uff0c\u6211\u4eec\u77e5\u9053\u5982\u679c\u76f8\u90bb\u7684\u4e24\u4e2a\u5143\u7d20\u6ee1\u8db3\u524d\u4e00\u4e2a\u5927\u4e8e\u540e\u4e00\u4e2a\u4fbf\u4f1a\u4ea4\u6362\u4e00\u6b21\uff0c\u7531\u4e8e\u9898\u76ee\u8981\u6c42\u6392\u5e8f\u540e\u662f\u5355\u8c03\u9012\u589e\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u9053\u9898\u770b\u505a\u6c42\u539f\u6570\u7ec4\u9006\u5e8f\u5bf9\u7684\u6570\u91cf\n\n\u4e3e\u4e00\u4e2a\u5f52\u5e76\u6392\u5e8f\u7684\u4f8b\u5b50\uff1a\n\n\u5047\u8bbe\u521d\u59cb\u6570\u7ec4\u4e3a4 2 1 3\n\n\u5148\u628a\u6bcf\u4e00\u4e2a\u6570\u5355\u72ec\u5206\u6210\u4e00\u7ec4\uff0c\u5373(4) (2) (1) (3)\n\n\u63a5\u7740\u4e24\u4e24\u5408\u5e76\uff0c\u5373(2 4) (1 3)\n\n\u6700\u540e\u5408\u6210\u4e00\u4e2a\u6709\u5e8f\u7684\u6570\u7ec4\uff0c\u5373(1 2 3 4)\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u5728\u6392\u5e8f\u8fc7\u7a0b\u4e2d\uff0c\u82e5\u67d0\u4e2a\u6570\u5411\u524d\u79fb\u52a8\u4e86N\u4f4d\uff0c\u5219\u5fc5\u5b9a\u5b58\u5728N\u4e2a\u9006\u5e8f\u6570,\u5982\u4e0a\u9762\u4f8b\u5b50\u4e2d\uff0c\u6570\u5b571\u7531\u539f\u5148\u7684\u7b2c\u4e09\u4f4d\u79fb\u5230\u4e86\u7b2c\u4e00\u4f4d\uff0c\u524d\u79fb\u4e86\u4e24\u4f4d\uff0c\u5219\u5b58\u5728(2 1)\u548c(4 1)\u4e24\u4e2a\u9006\u5e8f\n\n\u800c\u6839\u636e\u9898\u610f\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u5f52\u5e76\u6392\u5e8f\u7684\u8fc7\u7a0b\u4e2d\u628a\u8fd9\u4e2a\u6570\u8bb0\u4e0b\u6765\u5373\u53ef\n\n\u63a5\u4e0b\u6765\u4e0a\u4e00\u4e0b\u4ee3\u7801\n\n\u987a\u4fbf\u5b89\u5229\u4e00\u6ce2\u81ea\u5df1\u7684io\u6a21\u677f\uff1a\u81ea\u6d4b\u7ed3\u679c\uff1a\u4e0d\u52a0io\u4f18\u5316\u8dd1\u4e861108ms\uff0c\u52a0\u4e86\u4f18\u5316\u540e\u4ec5\u8dd1\u4e86797ms\uff08\u770b\u8fd1\u671f\u5927\u591a\u6570\u7684\u63d0\u4ea4\u90fd\u662f1200ms+ \uff0c\u5feb\u4e00\u70b9\u7684\u4e5f\u90fd\u662f1000ms+\uff0c797ms\u5e94\u8be5\u7b97\u662f\u6bd4\u8f83\u5feb\u7684\uff09\n\nio\u6a21\u677f\u8be6\u89e3\u94fe\u63a5\uff1ahttps://twi.blog.luogu.org/duliu-io \n\n```cpp\n#include<cstdio>\nusing namespace std;\n#define ll long long\n\nnamespace io {  //io\u6a21\u677f\u8be6\u89c1\u4e2a\u4eba\u535a\u5ba2\n#define gc() (iS == iT ? (iT = (iS = ibuff) + fread(ibuff, 1, SIZ, stdin), (iS == iT ? EOF : *iS++)) : *iS++)\n    const int SIZ = 1 << 21 | 1;\n    char *iS, *iT, ibuff[SIZ], obuff[SIZ], *oS = obuff, *oT = oS + SIZ - 1, fu[110], c;\n    int fr;\n    inline void out() {\n        fwrite(obuff, 1, oS - obuff, stdout);\n        oS = obuff;\n    }\n    template<class Type>\n    inline void read(Type &x) {\n        x = 0;\n        Type y = 1;\n        for (c = gc(); (c > '9' || c < '0') && c != '-'; c = gc());\n        c == '-' ? y = -1 : x = (c & 15);\n        for (c = gc(); c >= '0' && c <= '9'; c = gc())\n            x = x * 10 + (c & 15);\n        x *= y;\n    }\n    template<class Type>\n    inline void print(Type x, char text = '\\n') {\n        if (x < 0)\n            *oS++ = '-', x *= -1;\n        if (x == 0)\n            *oS++ = '0';\n        while (x)\n            fu[++fr] = x % 10 + '0', x /= 10;\n        while (fr)\n            *oS++ = fu[fr--];\n        *oS++ = text;\n        out();\n    }\n}\nusing namespace io;  //\u4ee5\u4e0a\u4e3a\u7384(du)\u5b66(liu)\u4f18(ka)\u5316(chang)\n\nll ans[500010], mem[500010], anss;\nint n;\n\nvoid merge(int lo, int mid, int hi) {\n    int i = lo, e = mid + 1, k = lo;\n    while (i <= mid && e <= hi) {\n        if (ans[i] <= ans[e])\n            mem[k++] = ans[i++];\n        else\n            anss += e - k, mem[k++] = ans[e++]; //\u6c42\u9006\u5e8f\u5bf9\u548c\n    }\n    while (i <= mid)\n        mem[k++] = ans[i++];\n    while (e <= hi)\n        mem[k++] = ans[e++];\n    for (i = lo; i <= hi; ++i)\n        ans[i] = mem[i];\n}\n\nvoid merge_sort(int x, int y) {\n    if (x < y) {\n        int mid = (x + y) / 2;\n        merge_sort(x, mid);\n        merge_sort(mid + 1, y);\n        merge(x, mid, y);\n    }\n}\n\nint main() {\n    read(n);\n    for (register int i = 0; i < n; ++i)\n        read(ans[i]);\n    merge_sort(0, n - 1);\n    print(anss);\n    return 0;\n}\n```\n\n\u6211\u4eec\u7684\u4fe1\u6761\u5c31\u662f\uff0c\u7528\u6700\u77ed\u7684\u7801\u957f\uff0c\u5199\u51fa\u8dd1\u7684\u6700\u5feb\u7684\u4ee3\u7801\uff08\u4e0d\u7b97io\u4f18\u5316\u672c\u4eba\u4ee3\u7801\u7801\u957f\u4ec5\u4e3a0.8kb\uff0c\u5728\u9898\u89e3\u4e2d\u4e5f\u7b97\u662f\u6bd4\u8f83\u77ed\u7684\u4ee3\u7801\u4e86\uff09\n\n\u7801\u98ce\u8be1\u5f02\u8bf7\u4e0d\u8981\u5728\u610fQAQ\n\n\u8fd9\u9053\u9898\u5c31\u5230\u8fd9\u91cc\uff0c\u8ba9\u6211\u4eec\u4e0b\u4e00\u9053\u9898\u89c1\uff08\u53d1\u51fa\u5495\u5495\u5495\u7684\u58f0\u97f3\uff09",
        "postTime": 1540214792,
        "uid": 59082,
        "name": "\u6743\u5fa1\u5929\u4e0b",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011P1908 -\u5f52\u5e76\u6392\u5e8f\u6c42\u9006\u5e8f\u5bf9\u548c"
    },
    {
        "content": "~~\u597d\u50cf\u7528\u7ebf\u6bb5\u6811\u7684\u4eba\u5f88\u5c11\uff0c\u90a3\u4e48\u672c\u849f\u84bb\u5c31\u6765\u4e00\u53d1\u5427~~\ndalao\u52ff\u55b7\n\n\u9996\u5148\uff0c\u6211\u4eec\u8981\u660e\u767d\u8fd9\u9053\u9898\u7684\u601d\u8def\uff1a\n\n\u6211\u4eec\u5f00\u4e00\u4e2atree\u6570\u7ec4\uff0c\u6765\u8bb0\u5f55input[i]\u51fa\u73b0\u591a\u5c11\u6b21\n\n\u6bcf\u5f53\u4f60\u8f93\u5165\u5e8f\u5217\u91cc\u7684i\u65f6\uff0c\u5c31\u5c06tree[i]++;\n\n\u5e76\u4e14\u8fd9\u4e2a\u6570\u7684\u9006\u5e8f\u5bf9\u5c31\u662ftree\uff08\u4e3a\u4ec0\u4e48\u8981\u53eb\u8fd9\u4e2a\u540d\u5b57\uff1f\uff09\u6570\u7ec4\u91cc\u9762i\u540e\u9762\u7684\u6240\u6709\u503c\u4e4b\u548c\u3002\n\n\u4e3e\u4e2a\u6817\u5b50\n\n\u8f93\u5165\u4e3a\uff1a5 4 2 6 3 1\n\n\u5f535\u8f93\u5165\uff0ctree\u6570\u7ec4\uff1a\n\n0 0 0 0 1 0\n\n5\u7684\u540e\u9762\u7684\u548c\u4e3a0\n\n\u8f93\u51654\n\n0 0 0 1 1 0\n\n4\u7684\u540e\u9762\uff0c5\u6709\u4e00\u4e2atree[5]\u76841,\u6240\u4ee5\u4ee54\u4e3a\u7ed3\u675f\u7684\u9006\u5e8f\u5bf9\u67091\u4e2a\n\n\u8f93\u51652\n\n0 1 0 1 1 0\n\n2\u7684\u540e\u9762\u6709tree[4],tree[5]\uff0c\u9006\u5e8f\u5bf9\u6570+2\uff0c\u4e00\u5171\u67093\u4e2a\n\n\u8f93\u51656\n\n0 1 0 1 1 1\n\n6\u540e\u9762\u5565\u90fd\u6ca1\u6709\uff0c\u8fd8\u662f\u4e00\u5171\u67093\u4e2a\n\n\u8f93\u51653\n\n0 1 1 1 1 1 \n\n3\u540e\u9762\u67094,5,6 \u603b\u6570+3\uff0c\u4e00\u5171\u67096\u4e2a\n\n\u8f93\u51651\n\n1 1 1 1 1\n\n1\u540e\u9762\u67092 3 4 5 5\uff0c+5\uff0c\u4e00\u5171\u670911\u4e2a\n\n\u5b8c\u7f8e\uff01\uff01\uff01\uff01\uff01\uff01\n\n\u7b49\u4f1a\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\n\n\u4f60\u786e\u5b9a\u8fd9\u6837\u4e0d\u4f1a\u8d85\u65f6\u5417\uff1f\uff1f\n\n\u662f\u7684\uff0c\u4f1a\u8d85\u65f6\uff01\uff01\uff01\n\n\u4f46\u662f\uff0c\u6b63\u56e0\u4e3a\u8fd9\u7247\u662f\u9898\u89e3\uff0c\u6240\u4ee5\u80af\u5b9a\u6709\u529e\u6cd5\u4e0d\u8d85\u65f6\uff01\n\n\u8fd8\u8bb0\u5f97\u90a3\u4e2a\u8e4a\u8df7\u7684tree\u6570\u7ec4\u540d\u5417\uff1f\n\n\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u9700\u8981\u7528\u7ebf\u6bb5\u6811\u4f18\u5316\n\n\u4e0d\u4f1a\u7684\u540c\u5b66\u8bf7\u770b\u7ebf\u6bb5\u6811\u8be6\u89e3(\u5355\u70b9\u4fee\u6539\u548c\u533a\u95f4\u67e5\u8be2\u90e8\u5206\uff09\uff1a\n\n[\u7ebf\u6bb5\u6811\u8be6\u8be6\u8be6\u8be6\u89e3](https://www.luogu.org/blog/TJor/xian-duan-shu-yu-shu-zhuang-shuo-zu)\n\n\u5f53\u4e00\u4e2a\u503c\u52a01\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5355\u70b9\u4fee\u6539\uff0c\u5c06tree[input[i]]\u52a0\u4e0a1\n\n\u5bf9\u4e8einput[i]\u7684\u9006\u5e8f\u5bf9\u6570\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5bf9input[i]~m(m\u4e3a\u8f93\u5165\u4e2d\u6700\u5927\u6570)\u8fd9\u4e2a\u533a\u95f4\u6c42\u548c\u5c31\u597d\u4e86\u3002\n\n\u5f88\u7b80\u5355\u7684\u4fee\u6539\uff0c\u8be6\u7ec6\u770b\u4ee3\u7801\u6ce8\u91ca\uff1a\n\n```\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\nusing namespace std;\nint read(int x)//\u8f93\u5165\u51fd\u6570 \n{\n    x=0;\n    char ch=getchar();\n    int f=1;\n    for(;!isdigit(ch);ch=getchar())\n        if(ch=='-')\n            f=-1;\n    for(;isdigit(ch);ch=getchar())\n        x=x*10+ch-'0';\n    return x*=f;\n}\nint n;\nint m;\nint a;\nint input[10000010];\nint ans=0;\nstruct node\t//\u7ebf\u6bb5\u6811\u7684\u7ed3\u6784\u4f53 \n{\n    int left,right;\n    int data;\n    node()\n    {\n        data=0;\n    }\n}tree[10000010];\nvoid build(int index,int left,int right)//\u5efa\u6811\uff08\u94fe\u63a5\u535a\u5ba2\u4e2d\u63d0\u5230\uff09 \n{\n    tree[index].left=left;\n    tree[index].right=right;\n    if(tree[index].left==tree[index].right)\n        return ;\n    int mid=(left+right)>>1;\n    build(index<<1,left,mid);\n    build(index<<1|1,mid+1,right);\n    return ;\n}\nvoid add(int index,int dis)//\u5355\u70b9\u4fee\u6539\uff0c\u4f7ftree[input[i]]++ \n{\n    tree[index].data++;\n    if(tree[index].left==tree[index].right)\n        return ;\n    int mid=(tree[index].left+tree[index].right)>>1;\n    if(dis<=mid)\n        add(index<<1,dis);\n    else\n        add(index<<1|1,dis);\n    return ;\n}\nint search(int index,int left,int right)//\u533a\u95f4\u6c42\u548c \n{\n    if(tree[index].left>=left && tree[index].right<=right)\n        return tree[index].data;\n    int mid=(tree[index].left+tree[index].right)>>1;\n    if(left<=mid && right>mid)//dalao YSF\u5f0fde\u67e5\u8be2\u65b9\u6cd5\uff08\u6211\u7684\u4e0d\u662f\u8fd9\u6837\uff09 \n        return search(index<<1,left,right)+search(index<<1|1,left,right);\n    else if(left<=mid)\n        return search(index<<1,left,right);\n    else\n        return search(index<<1|1,left,right);\n}\nint main()\n{\n    n=read(n);\n    for(int i=1;i<=n;i++)\n    {\n    \tinput[i]=read(input[i]);\n        m=max(m,input[i]);\n    }\n    build(1,1,m);\n    for(int i=1;i<=n;i++)\n    {\n        add(1,input[i]);\n        if(input[i]!=m)//\u6ce8\u610f\u7ec6\u8282\u5904\u7406\uff0c\u6ca1\u6709\u4f1a\u70b8\uff01\uff01\uff01 \n            ans+=search(1,input[i]+1,m);\n    }\n    cout<<ans;\n}\n\n\n```\n\n\u4ee5\u4e0a\u5c31\u662f\u4ee3\u7801\uff0c\u8fd9\u79cd\u72ec\u7279\u7684\u89e3\u6cd5\u9002\u5408\u51b2\u51fb\u63d0\u9ad8\u7ec4\u4e00\u7b49\u5956\u7684\u4eba\u505a\u54e6\uff01\uff01\uff01",
        "postTime": 1521022961,
        "uid": 39942,
        "name": "TJor",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "**\u56e0\u4e3a\u4e4b\u524d\u770b\u4ed6\u4eec\u5199\u7684\u90fd\u662f\u4e8c\u8def\u5f52\u5e76\uff0c\u6240\u4ee5\u6211\u5199\u4e00\u4e2a\u4e0d\u540c\u7684\uff0c\u6811\u72b6\u6570\u7ec4\u6c42\u89e3\u9006\u5e8f\u5bf9\u3002**\n\n\u6811\u72b6\u6570\u7ec4\u662f\u53ef\u4ee5\u5feb\u901f\u6c42\u51fa\u524di\u4e2a\u7684\u548c\uff0c\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u5b9a\u4e49f[i]\u8868\u793a\u5b83\u524d\u9762\u6709\u591a\u5c11\u4e2a\u6bd4\u5b83\u5927\u7684\u6570\u3002\u5b9a\u4e49\u5b8c\uff0c\u5c31\u60f3\u5230\u4e86\u6392\u5e8f\uff0c\u4ece\u5927\u5230\u5c0f\u653ea[i]\uff0c\u5728a[i]\u521d\u59cb\u6240\u5728\u7684\u4f4d\u7f6e\u4e0a\u653e\u4e2a1\u4e0a\u53bb\uff0c\u7136\u540e\u6bcf\u6b21\u53d6\u51fa\u7684\u5c31\u662f\u524d\u9762\u6bd4a[i]\u5927\u7684\u6570\u7684\u4e2a\u6570\u3002\n\n\u4e0d\u61c2\u770b\u4ee3\u7801\n\n```CPP\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint n,f[40005],ans;\nstruct xcw{\n    int x,id;\n    bool operator <(const xcw b)const{return x>b.x||x==b.x&&id>b.id;}\n}a[40005];\nint read(){//\u8bfb\u5165\n    int ret=0;bool f=1;char ch=getchar();\n    for(;ch<'0'||'9'<ch;ch=getchar()) f^=!(ch^'-');\n    for(;ch>='0'&&ch<='9';ch=getchar()) ret=(ret<<3)+(ret<<1)+ch-48;\n    return f?ret:-ret;\n}\nvoid put(int p,int x){for(;p<=n;p+=p&-p) f[p]+=x;}//\u6811\u72b6\u6570\u7ec4\uff0c\u5728p\u4f4d\u7f6e\u4e0a\u52a0\u4e2ax\u3002\nint get(int p){int sum=0;for(;p;p-=p&-p) sum+=f[p];return sum;}//\u6811\u72b6\u6570\u7ec4\uff0c\u53d6p\u4e4b\u524d\u7684\u52a0\u548c\uff08\u5305\u62ecp\uff09\nint main(){\n    n=read();\n    for(int i=1;i<=n;i++) a[i]=(xcw){read(),i};\n    sort(a+1,a+1+n);\n    for(int i=1;i<=n;i++){\n        ans+=get(a[i].id);\n        put(a[i].id,1);\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1513927099,
        "uid": 36297,
        "name": "Golden_Winter",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\n\n\u8fd9\u662f\u4e00\u9053\u7ecf\u5178\u7684\u5f52\u5e76\uff0c\u5b83\u5df2\u7ecf\u7ecf\u5178\u5230\u8ba9\u5218\u6c5d\u4f73\u90fd\u628a\u5b83\u9009\u505a\u5f52\u5e76\u7684\u4f8b\u9898\u4e86\u3002\u3002\u3002\u3002\u3002\u3002\u3002\n\n\u597d\u5427\uff0c\u4e0b\u9762\u662f\u849f\u84bb\u7684\u4e00\u4e9b\u601d\u8003\u8fc7\u7a0b\u3002\u3002\u3002\u3002\u3002\n\n\u8fd9\u9053\u9898\u63cf\u8ff0\u7684\u610f\u601d\u662f\uff1a\u5982\u679c\u67d0\u4e2a\u6570\uff0c\u5b83\u7684\u503c\u6bd4\u5728\u540c\u5217\u4e4b\u4e2d\u6392\u5e8f\u66f4\u4e3a\u9760\u524d\u7684\u6570\u5927\uff0c\u90a3\u4e48\u5c31\u79f0\u4e3a\u4e00\u4e2a\u9006\u5e8f\u5bf9\u3002\n\n\u5f88\u591a\u4eba\u4e00\u4e0a\u6765\u5c31\u4f1a\u60f3\u5230\u9012\u5f52\uff0c\u5728\u4e0b\u4e5f\u662f\uff0c\n\n\u4f46\u7ecf\u5386\u4e86\u65e0\u6570\u6b21\u88ab\u84dd\u5149\u95ea\u7206\u5c4f\u5e55\u4e4b\u540e\uff0c\u6211\u51b3\u5b9a\u5206\u6790\u4e00\u4e0b\u539f\u56e0\u3002\n\n\u9012\u5f52\u7684\u95ee\u9898\u5728\u4e8e\uff0c\u8981\u8fdb\u884c\u591a\u6b21\u6392\u5e8f\uff0c\u90a3\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u8e6d\u8e6d\u5f80\u4e0a\u6da8\uff0c\u6276\u6447\u76f4\u4e0a\u4e5d\u4e07\u91cc\uff0c\u5373\u4f7f\u52a0\u4e86\u5feb\u8bfb\uff0c\u53ea\u7528\u5feb\u6392\u4e5f\u4e0d\u884c\u3002\n\n\u6240\u4ee5\uff0c\u5728\u5bf9\u5218\u6c5d\u4f73\u6df1\u5165\u4e86\u89e3\u4e00\u756a\u540e\uff0cget\u65b0\u6280\u80fd\uff0c\u5f52\u5e76\uff01\n\n\u8fd9\u79cd\u6392\u5e8f\u7684\u57fa\u672c\u601d\u60f3\u662f\uff0c\u5c06\u6240\u6709\u7684\u6570\u636e\u5c3d\u53ef\u80fd\u5e73\u5747\u7684\u5206\u4e3a\u4e24\u961f\uff0c\u5404\u81ea\u6392\u5e8f\uff0c\u7136\u540e\u518d\u521b\u5efa\u4e00\u4e2a\u65b0\u961f\uff0c\u4e4b\u540e\u6bcf\u6b21\u5bf9\u4e24\u4e2a\u961f\u5217\u961f\u9996\u7684\u5143\u7d20\u6bd4\u8f83\n\n\u8c01\u5c0f\u5c31\u5c06\u8c01\u5b58\u8fdb\u65b0\u961f\uff0c\u56e0\u4e3a\u8fd9\u6837\u7684\u8bdd\uff0c\u4e0d\u7ba1\u662f\u54ea\u4e00\u4e2a\u6570\u636e\uff0c\u90fd\u59cb\u7ec8\u662f\u7d27\u63a5\u7740\u4e0a\u4e00\u4e2a\u7684\u6700\u5c0f\u503c\uff0c\u8fd9\u6837\u5c31\u80fd\u5bf9\u5927\u91cf\u7684\u6570\u636e\u8fdb\u884c\u5feb\u901f\u6392\u5e8f\u4e86\uff0c\u89e3\u51b3\u4e86\u8fd9\u4e00\u70b9\uff0c\u81ea\u7136\u4e5f\u5c31\u89e3\u51b3\u4e86\u8fd9\u4e2a\u9898\u7684\u5927\u90e8\u5206\u95ee\u9898\u3002\n\n\u9644\u4ee3\u7801\u5982\u4e0b\uff1a\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint da,n,a[40001],jishuqi[40001];\ninline int read (){\n    int misaka=0,mikoto=1;\n    char c=getchar();\n    while(c<'0' || c>'9'){\n        if(c=='-')\n            mikoto=-1;\n        c=getchar();\n    }\n    while(c>='0' && c<='9'){\n        misaka=misaka*10+(int)(c-'0');\n        c=getchar();\n    }\n    return misaka*mikoto;\n}\nvoid guipai(int l,int r){\n    if(l==r)\n    return;\n    int mid=((l+r)/2);\n    int len=(r-l+1);\n    guipai(l,mid);\n    guipai(mid+1,r);\n    int len1=mid-l+1;\n    int len2=len-len1;\n    int t1[len1+1];\n    int t2[len2+1];\n    for(int i=1;i<=len1;i++)\n        t1[i]=a[l+i-1];\n    for(int i=1;i<=len2;i++)\n        t2[i]=a[mid+i];\n    int i=1,j=1,k=0;\n    while((i<=len1)&&(j<=len2)){\n        if(t1[i]<=t2[j]){\n            a[l+k]=t1[i];\n            k++;\n            i++;\n        }\n        else{\n            a[l+k]=t2[j];\n            k++;\n            j++;\n            da=da+(mid-(l+i-1)+1);\n        }\n    }\n    while(i<=len1){\n        a[l+k]=t1[i];\n        i++;\n        k++;\n    }\n    while(j<=len2){\n        a[l+k]=t2[j];\n        j++;\n        k++;\n    }\n}\nint main(){\n    n=read();\n    for(int i=1;i<=n;i++)\n        a[i]=read();\n       guipai(1,n);\n    //for(int i=1;i<=n;i++)cout<<a[i]<<\" \";\n    //cout<<endl;\n    cout<<da<<endl;\n    return 0;\n}\n```",
        "postTime": 1508819745,
        "uid": 36589,
        "name": "TheUltimateLaw",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u9006\u5e8f\u5bf9\u6807\u51c6\u6c42\u6cd5\uff0c\n\n\u5373\u5f52\u5e76\u6392\u5e8f\u65f6\u5982\u679c\u53d1\u73b0\u4e86\u540e\u8fb9\u7684\u5c0f\u4e8e\u524d\u8fb9\u7684\uff0c\u5c31\u53ef\u4ee5\u8ba4\u5b9a\u524d\u9762\u7684\u6570\u662f\u8fd9\u4e2a\u6570\u7684\u9006\u5e8f\u3002\n\n\u8be6\u7ec6\u89c1\u4ee3\u7801\u3002\n\n\n```cpp\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nint cnt=0;\nint n;\nint a[100010];\nint b[100010];\nvoid erfen(int l,int r)//\u5f52\u5e76\u6392\u5e8f\n{\n    if(l==r)return;\n    int mid=(l+r)>>1;\n    erfen(l,mid);\n    erfen(mid+1,r);\n    int o=l;\n    int p=mid+1;\n    int z=l-1;\n    while(o<=mid&&p<=r)\n    {\n        if(a[o]<=a[p])\n        {\n            b[++z]=a[o];\n            o++;\n        }\n        else\n        {\n            b[++z]=a[p];\n            p++;\n            cnt+=mid-o+1;   //\u4e3b\u8981\u5728\u8fd9\u4e00\u6b65\uff0c\u91cd\u5728\u7406\u89e3\u3002\n        }\n    }\n    while(o<=mid)\n    {\n        b[++z]=a[o++];\n    }\n    while(p<=r)\n    {\n        b[++z]=a[p++];\n    }\n    for(int s=l;s<=r;s++)\n    a[s]=b[s];\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&a[i]);\n    }\n    erfen(1,n);\n    cout<<cnt;\n    return 0;\n}\n```",
        "postTime": 1507261485,
        "uid": 56715,
        "name": "s66104444",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u6765\u4e00\u6ce2\u6811\u72b6\u6570\u7ec4\n\nai,aj\u662f\u9006\u5e8f\u5bf9\uff0c\u6ee1\u8db3\u4e24\u4e2a\u6761\u4ef6\n\n1\u3001i<j\n\n2\u3001ai>aj\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u5148\u6ee1\u8db3\u6761\u4ef62\n\n\u4e5f\u5c31\u662f\u6765\u53d1\u5feb\u6392\uff0c\u4ece\u5927\u5230\u5c0f\n\n\u7136\u540e\u5c31\u7528\u6811\u72b6\u6570\u7ec4\n\n\u600e\u4e48\u7528\uff1f\n\n\u5148\u6c42\u548c\uff0c\u6c42\u548c\u6c42\u7684\u662f\u4f4d\u7f6e\u5728\u81ea\u5df1\u524d\u9762\u7684\u6ee1\u8db3\u6761\u4ef6\u7684\u603b\u6570\n\n\u518d\u6539\u53d8\uff0c\u4e3a\u4ec0\u4e48\u5148\u6c42\u548c\u5728\u6539\u53d8\uff1f\n\n\u56e0\u4e3a\u6539\u53d8\u4e5f\u4f1a\u6539\u81ea\u5df1\n\n\u6539\u53d8\u4f4d\u7f6e\u5728\u81ea\u5df1\u540e\u9762\u7684\uff0c\u4e0d\u7ba1\u5927\u5c0f\n\n\u8bf4\u4e86\u4e00\u5927\u5806\u4e5f\u63a9\u76d6\u4e0d\u4e86\u6c34\u9898\u7684\u4e8b\u5b9e\n\n\n\n\n\n\n\n\n\n\n```cpp\nvar\n    a,b,c:array[0..1000000] of longint;\n    n,i,ans:longint;\nfunction lowbit(x:longint):longint;\nbegin\n    exit(x and -x);\nend;\nprocedure change(x:longint);\nbegin\n    while x<=n do\n        begin\n            inc(c[x]);\n            inc(x,lowbit(x));\n        end;\nend;\nfunction getsum(x:longint):longint;\nbegin\n    getsum:=0;\n    while x>0 do\n        begin\n            inc(getsum,c[x]);\n            dec(x,lowbit(x));\n        end;\nend;\nprocedure sort(l,r: longint);\n      var\n         i,j,x,y: longint;\n      begin\n         i:=l;\n         j:=r;\n         x:=a[(l+r) div 2];\n         repeat\n           while a[i]>x do\n            inc(i);\n           while x>a[j] do\n            dec(j);\n           if not(i>j) then\n             begin\n                y:=a[i];\n                a[i]:=a[j];\n                a[j]:=y;\n                y:=b[i];\n                b[i]:=b[j];\n                b[j]:=y;\n                inc(i);\n                j:=j-1;\n             end;\n         until i>j;\n         if l<j then\n           sort(l,j);\n         if i<r then\n           sort(i,r);\n      end;\nbegin\n    readln(n);\n    for i:=1 to n do\n        begin\n            read(a[i]);\n            b[i]:=i;\n        end;\n    sort(1,n); \n    for i:=1 to n do\n        begin\n            inc(ans,getsum(b[i]));\n            change(b[i]);\n        end;\n    writeln(ans);\nend.\n\n```",
        "postTime": 1506939425,
        "uid": 51719,
        "name": "ModestCoder_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u770b\u4e86\u8fd9\u4e48\u591a\u9898\u89e3\u7528\u7684\u90fd\u662fCDQ\u548c\u7ebf\u6bb5\u6811\u548c\u6811\u72b6\u6570\u7ec4\uff0c\u90a3\u4e48\u6211\u5c31\u653e\u4e00\u4e2aTreap\n\n\u4f7f\u7528Treap\u7684\u4f18\u70b9\u662f\u4e0d\u7528\u62c5\u5fc3\u6570\u636e\u662f\u5426\u4f1a\u51fa\u73b0\u8d1f\u6570\u4ee5\u53ca\u6570\u5217\u4e2d\u6bcf\u4e2a\u6570\u5b57\u7684\u5927\u5c0f\u3002\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <ctime>\nusing namespace std;\n\ninline char getc(void) { \n    static char buf[1 << 18], *fs, *ft;\n    return (fs == ft && (ft = (fs = buf) + fread(buf, 1, 1 << 18, stdin)), fs == ft) ? EOF : *fs++;\n}\n\ninline int read(void) { \n    int res = 0;\n    char tmp = getc(), f = 1;\n    while(!isgraph(tmp)) tmp = getc();\n    if(tmp == '-') f = -1, tmp = getc();\n    while(isdigit(tmp))\n        res = ((res + (res << 2)) << 1) + (tmp ^ 0x30),\n        tmp = getc();\n    return res * f;\n}\n\n#define SIZ(x) ((x)?(x)->siz : 0)\n#define UP(x) ((x)->siz = SIZ((x)->ls) + SIZ((x)->rs) + (x)->cnt)\n\nstruct NODE{ \n    int val, fix;\n    int cnt, siz;\n    NODE *ls, *rs;\n\n    NODE(int v) { \n        val = v, fix = rand();\n        ls = rs = NULL;\n        siz = cnt = 1;\n    }\n};\n\ninline void Left(NODE *&k2);\ninline void Right(NODE *&k2);\nvoid Insert(NODE *&node, int x);\ninline int Query(int x);\n\nNODE *root;\nint N, s, ret = 0;\n\nint main() { \n    srand(time(NULL));\n    N = read();\n    for(int i = 1; i <= N; ++i) { \n        s = read();\n        ret += Query(s);\n        Insert(root, s);\n    }\n    printf(\"%d\", ret);\n    return 0;\n}\n\ninline void Left(NODE *&k2) { \n    NODE *k1 = k2->rs;\n    k2->rs = k1->ls;\n    k1->ls = k2;\n    UP(k2); UP(k1);\n    k2 = k1;\n}\n\ninline void Right(NODE *&k2) { \n    NODE *k1 = k2->ls;\n    k2->ls = k1->rs;\n    k1->rs = k2;\n    UP(k2); UP(k1);\n    k2 = k1;\n}\n\nvoid Insert(NODE *&node, int x) { \n    if(!node) node = new NODE(x);\n    else if(x < node->val) { \n        Insert(node->ls, x);\n        if(node->ls->fix < node->fix) Right(node);\n        else ++node->siz;\n    } else if(node->val < x) { \n        Insert(node->rs, x);\n        if(node->rs->fix < node->fix) Left(node);\n        else ++node->siz;\n    } else ++node->cnt, ++node->siz;\n}\n\ninline int Query(int x) { \n    int ret = 0;\n    NODE *node = root;\n    while(node && node->val ^ x)\n        if(node->val < x) node = node->rs;\n        else { \n            ret += SIZ(node->rs) + node->cnt;\n            node = node->ls;\n        }\n    if(node && node->val == x) return ret + SIZ(node->rs);\n    else return ret;\n}\n```\n\u5b9e\u9645\u4e0a\u8fd9\u9053\u9898\u7528\u7ebf\u6bb5\u6811\u505a\u7684\u8bdd\u6211\u89c9\u5f97\u7528\u52a8\u6001\u5f00\u70b9\u6743\u503c\u7ebf\u6bb5\u6811\u4e3a\u4f73\uff0c\u56e0\u4e3a\u8fd9\u6837\u65f6\u95f4\u548c\u7a7a\u95f4\u7684\u590d\u6742\u5ea6\u5c31\u6709\u4fdd\u8bc1\u4e86\u3002\u3002\n",
        "postTime": 1506516541,
        "uid": 24932,
        "name": "wanzzhehe",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u7528\u6811\u72b6\u6570\u7ec4\u5199\u7684\u3002\n\n\u5148\u8fdb\u884c\u79bb\u6563\u5316\u3002\n\na[i]\u8868\u793a\u539f\u5e8f\u5217\uff0cd[i]\u8868\u793aa[j]=i\u7684j\u7684\u6570\u91cf\uff0cc[i]\u8868\u793aa[1]~a[i-1]\u4e2d\u7684\u6700\u5927\u503c\u3002b[i]\u662f\u6811\u72b6\u6570\u7ec4\uff0c\u7ef4\u62a4d[i-lowbit(i)+1]~d[i]\u7684\u548c\u3002\u65e2\u7136\u6709\u4e86b\u6570\u7ec4\uff0cd\u6570\u7ec4\u5c31\u6ca1\u6709\u4ec0\u4e48\u7528\u4e86\uff0c\u53ef\u4ee5\u4e0d\u5199\u3002\n\n\u6c42\u51fac[i]\u3002\n\n\u5c06i\u4ece1~n\u8fdb\u884c\u4e00\u6b21\u5faa\u73af\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2ai\uff0cans+=d[j] (a[i]+1\u2264j\u2264c[i]),d[a[i]]++.\u8fd9\u4e00\u6b65\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u3002\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n#include <string>\nusing namespace std;\nint n,a[40001],b[40001],d[40001],c[40001];\nbool cmp(int x,int y){\n    return a[x]<a[y];\n}\nvoid add(int p){\n    for (int i=p;i<=n;i+=i&-i) ++b[i];\n}\nint find(int p){//\u6c42\u51fad[1]~d[p]\u7684\u548c\n    int ans=0;\n    for (int i=p;i;i-=i&-i) ans+=b[i];\n    return ans;\n}\nvoid read(int& x){\n    x=0;\n    int y=1;\n    char ch=getchar();\n    while (ch<'0'||ch>'9'){\n        if (ch=='-') y=-1;\n        ch=getchar();\n    }\n    while (ch>='0'&&ch<='9'){\n        x=x*10+ch-'0';\n        ch=getchar();\n    }\n    x=x*y;\n}\nint main(){\n    int i,j,ans=0,t;\n    read(n);\n    for (i=1;i<=n;++i){\n        read(a[i]);\n        d[i]=i;\n    }\n    sort(d+1,d+n+1,cmp);//\u79bb\u6563\u5316\n    for (i=1;i<=n;++i){\n        a[d[i]]=i;\n    }\n    for (i=2;i<=n;++i){\n        if (c[i-1]>a[i-1]) c[i]=c[i-1];\n        else c[i]=a[i-1];\n    }\n    for (i=1;i<=n;++i){\n        if (a[i]+1<=c[i]) ans+=find(c[i])-find(a[i]);\n        add(a[i]);//d[a[i]++\n    }\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1502608259,
        "uid": 17123,
        "name": "\u6df1\u6d77\u9c7c\u7684\u773c\u6cea",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u6b64\u9898\u6570\u636e\u548c\u9898\u76ee\u90fd\u8f83\u6c34\uff0c\u53ef\u4ee5\u91c7\u7528**\u5f52\u5e76\u6392\u5e8f**\n\n\u4e5f\u53ef\u4ee5\u91c7\u7528**\u6811\u72b6\u6570\u7ec4**\uff0c\u9898\u89e3\u91cc\u9762\u5f52\u5e76\u7684\u8f83\u591a\uff0c\u6211\u5c31\u4ecb\u7ecd\u4e00\u4e0b**\u6811\u72b6\u6570\u7ec4**\uff1b\n\n\u9996\u5148\u6211\u4eec\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u5c31\u5e94\u8be5\u8003\u8651\u7a7a\u95f4\u7684\u95ee\u9898\uff0c\u8fd9\u4e2a\u9898\u6570\u636en\u300a=40000\uff1b\u6bcf\u4e2a\u6570\u5b57\u7684\u503c\u53ef\u80fd\u8f83\u5927\uff0c\u4e0d\u80fd\u76f4\u63a5\u5f00\u503c\u90a3\u4e48\u5927\u7684\u7a7a\u95f4\uff0c\u56e0\u4e3a\u53ea\u9700\u6bd4\u8f83\u5927\u5c0f\uff0c\u5c31\u53ef\u4ee5\u7528\u5230\u79bb\u6563\u5316\u3002\n\n\u800c\u6211\u4eec\u8981\u77e5\u9053\u7684\u662f\u9006\u5e8f\u5bf9\uff0c\u4ece\u524d\u9762\u987a\u5e8f\u67e5\u627e\u540e\u9762\u7684\u60c5\u51b5\u5e76\u4e0d\u662f\u5f88\u5bb9\u6613\u5f04\u6e05\u695a\uff0c\u6240\u4ee5\u60f3\u5230\u9006\u5e8f\u52a0\u5165\u548c\u67e5\u8be2\uff0c\u6bcf\u52a0\u5165\u4e00\u4e2a\u6570\uff0c\u5b83\u53ca\u5b83\u540e\u9762\u7684\u60c5\u51b5\u4fbf\u5df2\u7ecf\u786e\u5b9a\u3002\n\n```cpp\n#include<algorithm>\n#include<cstdio>\n#include<iostream>\n#include<cmath>\nusing namespace std;\nlong long ans;//\u6700\u540e\u7684\u6570\u76ee\u53ef\u80fd\u6bd4\u8f83\u5927\uff0c\u6240\u4ee5long long\nint n;\nint lowbit(int x)\n{\n    return x&(-x);\n}\nstruct data{\n    int x,site;\n}wqr[100010];//wqr \u6211\u7684\u540d\u5b57\u7f29\u5199\uff0c\u5b58\u521d\u59cb\u503c\u548c\u5f00\u59cb\u7684\u89d2\u6807\u3002\nint s[100010];//\u5b58\u6bcf\u4e2a\u4f4d\u7f6e\u4e0a**\u5df2\u6709**\u7684\u6570\u7684\u4e2a\u6570\uff1b\nint a[100010];//\u5b58\u79bb\u6563\u540e\u7684\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u503c\uff1b\nint comp(const data a,const data b)\n{\n    return a.x<b.x;\n}\nvoid add(int x)\n{\n    while(x<=n)\n    {\n        s[x]++;\n        x+=lowbit(x);\n    } \n}\nvoid find(int x)\n{\n    while(x>0)\n    {\n        ans+=s[x];\n        x-=lowbit(x);\n    }\n}\nint main()\n{\n    freopen(\"inversions.in\",\"r\",stdin);\n    freopen(\"inversions.out\",\"w\",stdout);\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n        {\n            scanf(\"%d\",&wqr[i].x);\n            wqr[i].site=i;\n        }\n    sort(wqr+1,wqr+n+1,comp);//\u6392\u5e8f\uff0c\u4fbf\u4e8e\u79bb\u6563\n    int e=0;\n    for(int i=1;i<=n;i++)\n      {\n          if(wqr[i].x!=wqr[i-1].x)\n           e++;\n           a[wqr[i].site]=e;\n      }\n      //\u79bb\u6563\u5b8c\u6210\n    for(int i=n;i>=1;i--)\n    {\n        add(a[i]);\n        find(a[i]-1);//\u9006\u5e8f\u64cd\u4f5c\n    }\n    cout<<ans;//\u5b8c\u6210\n    fclose(stdin);\n    fclose(stdout);\n    return 0; \n}\n```",
        "postTime": 1496736168,
        "uid": 22287,
        "name": "Friendly",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u6211\u7684\u540c\u5b66\u5e2e\u6211\u8bb2\u4e86\u4e00\u4e0b\uff0c\u6211\u624d\u53d1\u73b0\u6811\u72b6\u6570\u7ec4\u53ef\u4ee5\u8fd9\u4e48\u7528\u3002\u3002\u3002\u6211\u6628\u5929\u8fd8\u4ee5\u4e3a\u5b83\u53ea\u4f1a\u6c42\u533a\u95f4\u548c\u6216\u8005\u533a\u95f4\u79ef\u6765\u7740\u3002\u3002\u3002\u3002\u3002\n\n\u8fd9\u9898\u4e0d\u7528\u6811\u72b6\u6570\u7ec4\u7684n^2\u7b97\u6cd5\u662f\u8fd9\u6837\u7684\n\n\u9996\u5148\u6211\u4eec\u628a\u5e8f\u5217\u5b58\u8fdbq\u6570\u7ec4\u91cc\uff0c\u518d\u5f00\u4e00\u4e2a\u6570\u7ec4c\uff0c\u7136\u540e\u5012\u7740\u626b\u63cf\u4e00\u904d\u6570\u7ec4\n\n\u5bf9\u4e8eq[i]\uff0c\u6211\u4eec\u4ece1~i\u6a2a\u626b\u4e00\u904dc\u6570\u7ec4\n\n\u5982\u679cc[j]\u4e3a\u771f\uff0c\u8bf4\u660e  j \u8fd9\u4e2a\u503c\u6bd4 i \u8fd9\u4e2a\u503c\u5148\u88ab\u626b\u5230\uff0c\u5373\u539f\u5e8f\u5217q\u4e2d\uff0c j \u5728 i \u540e\u9762\n\n\u800c\u4e14\u6211\u4eec\u662f\u4ece1~i\u626b\u7684c\u6570\u7ec4 \u6240\u4ee5\u6bcb\u5eb8\u7f6e\u7591\u7684j\u7684\u503c\u6bd4i\u5c0f\n\n\u54c8\u54c8\u6ee1\u8db3\u9006\u5e8f\u5bf9\u6761\u4ef6 \u4e8e\u662fans+=c[j]\n\n\u5b8c\u6210\u4e4b\u540ec[i]++\n\n\u6700\u540e\u8f93\u51faans\n\n\u7136\u540e\u540c\u5b66\u8bb2\u8fc7\u4e4b\u540e\u6211\u53d1\u73b0\u8fd9\u4e1c\u897f\u662f\u80fd\u7528\u6811\u72b6\u6570\u7ec4\u4f18\u5316\u7684\n\n\u5177\u4f53\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n#include<cstdio>\n#include<cctype>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\ntemplate <typename T>\nT read(){\n    T num=0,f=1;\n    char ch=getchar();\n    while(!isdigit(ch)){\n        if(ch=='-')    f=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch)){\n        num=num*10+ch-'0';\n        ch=getchar();\n    }\n    return num*f;\n}\n#define read()    read<long long>()\nint tree[50000];\nstruct file{\n    int id;\n    int data;\n}q[56000];\nlong long ans=0;\nint n;\nvoid add(int k,int num){\n    while(k<=n){\n        tree[k]+=num;\n        k+=k&(-k);\n    }\n}\n\nvoid find(int k){\n    int i=k;\n    while(k){\n        ans+=tree[k];\n        k-=k&(-k);\n    }\n    add(i,1);\n}\nbool cmp1(file a,file b){\n    return a.data<b.data;\n}\n\nbool cmp2(file a,file b){\n    return a.id<b.id;\n}\n\nint main(){\n    n=read();\n    for(int i=1;i<=n;++i){\n        q[i].data=read();\n        q[i].id=i;\n    }\n    sort(q+1,q+n+1,cmp1);\n    int dt=1;\n    for(int i=1;i<=n;++i){\n        if(q[i].data==q[i-1].data){\n            q[i].data=q[i-1].data;\n        }\n        else q[i].data=dt++;\n    }\n    sort(q+1,q+n+1,cmp2);\n    for(int i=n;i>=1;--i){\n        find(q[i].data);\n    }\n    printf(\"%lld\",ans);\n    return 0;\n}\n```cpp\n\u611f\u8c22\u6211\u7684\u540c\u5b66%%%% @wz3\u900d\u745e\n\n\u6700\u540e\u53ee\u5631\u4e00\u904d  \u6211\u7684\u8bfb\u5165\u4f18\u5316\u53ef\u80fd\u4f1a\u51fa\u95ee\u9898\uff0c\u5207\u8bb0\u4e0d\u8981\u968f\u4fbf\u7528\uff0c\u5728\u7ebf\u6bb5\u6811\u6a21\u677f\u91cc\u597d\u50cf\u51fa\u5c94\u5b50\u4e86\u5168wa\n\nok\u5dee\u4e0d\u591a\u5c31\u8fd9\u6837\n",
        "postTime": 1493107558,
        "uid": 25815,
        "name": "\u5c01\u766b",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u7528\u7ebf\u6bb5\u6811\u5199\u4e86\u4e00\u4e0b\u3002\u3002\u3002\n\n\u6ce8\u91ca\u5728\u4ee3\u7801\u91cc\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint n,tree[160005];\nstruct dopo{//\u53ef\u7231\u7684\u7ed3\u6784\u4f53*1 \n    int x;\n    int y;\n    int type;\n}a[40005];\nbool cmp1(dopo x,dopo y) {return(x.x<y.x);}\nbool cmp2(dopo x,dopo y) {return(x.type<y.type);}\nvoid add(int type,int l,int r,int w){//\u5730\u5740\uff0c\u533a\u95f4\u5de6\u7aef\uff0c\u533a\u95f4\u53f3\u7aef\uff0c\u8981\u52a0\u7684\u503c \n    tree[type]++;//tree[type]\u5b58\u8be5\u533a\u95f4\u5185\u6570\u636e\u4e2a\u6570 \n    if(l==r) return;//\u82e5\u8be5\u533a\u95f4\u53ea\u6709\u5355\u5143\u7d20\uff0c\u8fd4\u56de \n    int mid=(l+r)/2;//\u53d6\u4e2d\u00b7 \n    if(w<=mid) return add(type*2,l,mid,w);//\u4e8c\u53c9\u6811\u5de6\u513f\u5b50\u5de6\u8fb9\u662f2n \n    else if(w>mid) return add(type*2+1,mid+1,r,w);//\u53f3\u513f\u5b50 2n+1\n}\nint find(int type,int l,int r,int fl,int fr){//\u627e\u6b64\u6570\u4e4b\u524d\u6709\u591a\u5c11\u6bd4\u4ed6\u5c0f\u7684 &&\u5206\u60c5\u51b5\u8ba8\u8bba\u533a\u95f4 \n    if((l==fl)&&(r==fr)) return tree[type];\n    int mid=(l+r)/2;\n    if(fr<=mid) return find(type*2,l,mid,fl,fr);\n    else if(fl>mid) return find(type*2+1,mid+1,r,fl,fr);\n    else  return(find(type*2,l,mid,fl,mid)+find(type*2+1,mid+1,r,mid+1,fr));\n}\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++){\n        scanf(\"%d\",&a[i].x);//\u5148\u5728x\u4e2d\u5b58\u6570\u636e\uff1b \n        a[i].type=i;//type\u5b58\u5730\u5740 \n    }\n    sort(a+1,a+n+1,cmp1);//\u7b2c\u4e00\u904dsort\uff0c\u4ee5x\u503c\u5927\u5c0f\u5347\u5e8f\u6392\u5217 \n    int e=0,sum=0;//e\u662f\u6620\u5c04\u7684\u6807\u5fd7 \n    for(int i=1;i<=n;i++){//\u6570\u636e\u8303\u56f4\u592a\u5927\uff0c\u8ba9\u6211\u4eec\u6765\u4e00\u6ce2\u79bb\u6563\u5316 \n        if(a[i].x!=a[i-1].x) e++;//\u56e0\u4e3a\u5df2\u7ecf\u6392\u597d\u4e86\u5e8f \uff0c\u76f8\u540c\u7684\u6570\u636e\u4f1a\u76f4\u63a5\u6328\u7740 \n        a[i].y=e;//\u5728\u8fd9\u4ee5\u540ea[i].x\u5c31\u4e0d\u7528\u767b\u573a\u4e86\uff0c\u76f4\u63a5\u7528\u5176\u6620\u5c04a[i].y \n    }\n    sort(a+1,a+1+n,cmp2);//\u4ee5type\u5347\u5e8f\u6392\uff0c\u7531\u4e8etype\u662f\u539f\u6570\u7ec4\u7684\u4e0b\u6807\uff0c\u8fd9\u4e00\u6b65\u76f8\u5f53\u4e8e\u8fd8\u539f\u521a\u5f00\u59cb\u7684\u8f93\u5165\u987a\u5e8f \n    for(int i=1;i<=n;i++){\n        add(1,1,n,a[i].y);//add\u662f\u5f80\u7ebf\u6bb5\u6811\u4e2d\u52a0\u8fb9 \n        sum=sum+i-find(1,1,n,1,a[i].y);//sum+\u5df2\u8bfb\u5165\u6570\u636e-\u4e0d\u5408\u8981\u6c42\u7684 \n    }\n    printf(\"%d\",sum);//OK!!!dopo\u849f\u84bb\uff01\uff01\uff01 \n    return 0;\n} \ndopo\u849f\u84bb\n\n```",
        "postTime": 1479296847,
        "uid": 27176,
        "name": "wsyzz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u5f52\u5e76\u2026\u2026\u6392\u5e8f\u2026\u2026\n\n\u65b9\u6cd5\u4e00\uff1a\n\n```cpp\n#include <iostream>\nusing namespace std;\nint n,a[40001],temp[40001],ans=0;\nvoid sort(int i,int j)\n{\n    if(i==j){return;}\n    int mid=(i+j)/2;\n    sort(i,mid);sort(mid+1,j);\n    int l=i,r=mid+1,k=i;\n    for(;k<=j;k++)\n    {\n        if(l>mid){temp[k]=a[r],r++;}\n        else\n        {\n            if(r>j){temp[k]=a[l],l++;}\n            else\n            {\n                if(a[l]<=a[r]){temp[k]=a[l],l++;}//\u603b\u4e4b\u8fd9\u4e9b\u57fa\u672c\u5c31\u662f\u8d34\u5230temp\u6570\u7ec4\u91cc\n                else{temp[k]=a[r],r++,ans=ans+mid-l+1;}//\u6c42\u9006\u5e8f\u5bf9\u6570\u7684\u5173\u952e\u8bed\u53e5\n            }\n        }\n    }\n    for(k=i;k<=j;k++){a[k]=temp[k];}//\u8f6c\u79fb\u56dea\u6570\u7ec4\n}\nint main()//\u8fd9\u91cc\u5f88\u660e\u663e\uff0c\u6ca1\u4ec0\u4e48\u9700\u8981\u89e3\u91ca\u7684\u2026\u2026\n{\n    cin>>n;\n    for(int i=0;i<n;i++){cin>>a[i];}\n    sort(0,n-1);\n    cout<<ans;\n    return 0;\n}\n```\n\u65b9\u6cd5\u4e8c\uff1a\u66b4\u529b\n\u53ea\u80fd\u5728\u66fe\u7ecf\u7684\u6d1b\u8c372\u8fc7\u4e86\uff0c\u6574\u6574\u8dd1\u4e866s\u2026\u2026\n\n\u636e\u6709\u6548\u6570\u636e\uff0c\u8d85\u65f6\u7684\u70b9\u666e\u904d\u7528\u4e86300+s\u2026\u2026\n",
        "postTime": 1476367859,
        "uid": 14378,
        "name": "doby",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "//\u8fd9\u9898\u539f\u7406\u4e3a\u5f52\u5e76\u6392\u5e8f\uff0c\u53ea\u8981\u5728\u6392\u7684\u65f6\u5019\u505a\u4e00\u4e9b\u6539\u52a8\u3002\n\n\n\n\n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n```cpp\n#include<cstdio>\nusing namespace std;\n#define MAXN 40010\nint a[MAXN];\nint f[MAXN];//a\u662f\u5f85\u6392\u5e8f\u6570\u7ec4\uff0cr\u662f\u4e34\u65f6\u5b58\u653e\u6570\u7ec4\u3002 \nint p=0;\nvoid merge_sort(int l,int r)//\u5f52\u5e76\u6392\u5e8f \n{\n    int k,i,j,m;\n    if(l==r) return;//\u82e5\u53ea\u6709\u4e00\u4e2a\u6570\u636e\uff0c\u4e0d\u7528\u6392\u3002 \n    m=(l+r)/2;//\u53d6\u533a\u95f4\u4e2d\u70b9 \n    merge_sort(l,m);//\u4e8c\u5206\u5de6\u533a\u95f4 \n    merge_sort(m+1,r);//\u4e8c\u5206\u53f3\u533a\u95f4 \n    i=l;\n    k=l;\n    j=m+1;\n    //\u8fdb\u884c\u4e00\u6b21\u5f52\u5e76\u6392\u5e8f \n    while(i<=m&&j<=r)//\u4e24\u4e2a\u5b50\u5e8f\u5217\u4ece\u5c0f\u5230\u5927\u5408\u5e76\uff0c\u76f4\u5230\u6709\u4e00\u5217\u7ed3\u675f\u3002 \n    {\n        if(a[i]>a[j])\n        {\n        p+=m-i+1;//\uff01\uff01\uff01\u9006\u5e8f\u5bf9\u7684\u5173\u952e\uff0c\u82e5a[i]>a[j]\uff0c\n        //\u5219\u5de6\u533a\u95f4\u4efb\u4f55\u4e00\u4e2a\u5143\u7d20\u90fd\u5927\u4e8ea[j],\u4ea7\u751f\u9006\u5e8f\u5bf9\u4e2a\u6570\u76f8\u5f53\u4e8e\u5de6\u533a\u95f4\u5143\u7d20\u4e2a\u6570\u3002 \n        f[k]=a[j];\n        k++;j++;    \n        }\n        else\n        {\n            f[k]=a[i];\n            k++;i++;\n        }\n    }\n    while(i<=m) {f[k]=a[i];k++;i++;}\n    while(j<=r) {f[k]=a[j];k++;j++;}//\u628a\u5269\u4f59\u5143\u7d20\u63a5\u5165\u3002 \n    for(int w=l;w<=r;w++) a[w]=f[w];//\u628a\u6392\u5e8f\u597d\u7684\u5143\u7d20\u8fd8\u56dea\u6570\u7ec4\u3002 \n}\nint main()\n{\n    int n;\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    scanf(\"%d\",&a[i]);\n    merge_sort(1,n);//\u8fdb\u884c\u6392\u5e8f \n    printf(\"%d\",p);//\u8f93\u51fa\u9006\u5e8f\u5bf9\u4e2a\u6570\u3002 \n    return 0;\n}\n```",
        "postTime": 1475668289,
        "uid": 21673,
        "name": "Sor4",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u5c31\u662f\u4e00\u4e2a\u5f52\u6392\uff0c\u7a0d\u52a0\u4fee\u6539[delete]\uff08\u5c31\u662f\u52a0\u4e00\u6761\u8bed\u53e5\uff09[/delete]\u5c31\u80fd\u641e\u5b9a\u4e86\u3002\n\n\u6570\u636e\u8303\u56f4\u6709\u6bd2\uff01\n\n\u4e0a\u9762\u5199\u7740\uff1a\u5bf9\u4e8e100%\u7684\u6570\u636e\uff0c\u5747 <= 10000\uff0c\u7136\u540e\u6211\u5c31\u5f00\u4e86Size\u662f10001\u7684\u6570\u7ec4\uff0c20\u5206==\n\n\u8fd9\u6b21\u8ba9\u6211\u771f\u6b63\u660e\u767d\u4e86\u201c\u6570\u7ec4\u5f00\u5927\u70b9\u4e0d\u82b1\u94b1\uff0c\u5f00\u5c0f\u4e86\u4f1a\u6293\u72c2\u201d\u8fd9\u53e5\u8bdd\u7684\u771f\u8c1b@\\_@\n\n\u66b4\u529b\u641c\u7d22O(n^2)\u4f1a\u8d85\u65f6\uff08\u7b2c\u4e00\u6b21\u6211\u5c31\u7528\u7684\u66b4\u641c\uff0c\u7ed3\u679c20\u5206\uff09\n\n\u8fd8\u662f\u5f97\u7528\u5f52\u6392\u554a\uff01\n\n\n[delete]\u9644\u4e0aAC\u4ee3\u7801\uff1a[/delete]\n\n\n```cpp\n\n#include <stdio.h>\n#define Size 1000001\n\nint A[Size],T[Size],cnt = 0;\n\nvoid Merge\\_Sort(int x,int y){       //\u5f52\u5e76\u6392\u5e8f\n    if(y-x > 1){\n        int m = x+(y-x)/2,p,q,i;    \n        p = x,q = m,i = x;    //p\u662f\u5de6\u8fb9\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\uff0cq\u662f\u53f3\u8fb9\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u4e0b\u6807\n        Merge\\_Sort(x,m);\n        Merge\\_Sort(m,y);\n        while(p < m || q < y){\n            if(q >= y || (p < m&&A[p] <= A[q])) T[i++] = A[p++];    //\u91cd\u8981!\n            else T[i++] = A[q++],cnt += m-p; \n        }\n        for(i = x; i < y; i++) A[i] = T[i];\n    } \n}\n\nint main(){\n    int n,i;\n    scanf(\"%d\",&n);\n    for(i = 0; i < n; i++) scanf(\"%d\",&A[i]);\n    Merge\\_Sort(0,n);\n    printf(\"%d\\n\",cnt); \n    \n    return 0; \n}",
        "postTime": 1463222124,
        "uid": 17170,
        "name": "Deny_\u5c0f\u7530",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u521a\u597d\u80fd\u5957\u7528\u5f52\u5e76\u6392\u5e8f\uff0c\u5728\u6bd4\u8f83\u5927\u5c0f\u90a3\u91cc\u52a8\u52a8\u624b\u811a\u5c31\u597d\u3002\n\n\u5982\u6570\u7ec44 5 2\uff0cp=1,r=3,mid=(1+3)/2=2.\n\n\u5219\u5de6\u5b50\u6570\u7ec4\u4e3a4 5,\u53f3\u5b50\u6570\u7ec4\u4e3a2.\n\n2\u5148\u653e\u5230\u539f\u6570\u7ec4\u4e2d\uff0c\u653e\u7684\u65f6\u5019\u5de6\u5b50\u6570\u7ec4\u5269\u4f59\u957f\u5ea6\u4e3a2,\u5219\u9006\u5e8f\u5bf9\u6570\u91cf+2\u3002\n\n```cpp\n#include<stdio.h>\n#include<string.h>\n#define MAX 2100000000\nint i,j,k,ans=0,n,A[40010]={0};\nvoid merge(int p,int mid,int r)//\u6309\u5347\u5e8f\u5f52\u5e76\u6392\u5e8f \n{ //\u5f52\u5e76\n    int ll=mid-p+1;//\u5de6\u6570\u7ec4\u5927\u5c0f \n    int lr=r-mid;//\u53f3\u6570\u7ec4\u5927\u5c0f\n    int L[20010],R[20010];\n    for(i=1;i<=ll;i++) L[i]=A[p+i-1]; L[i]=MAX;//\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5f04\u6210\u6700\u5927\u503c \n    for(i=1;i<=lr;i++) R[i]=A[mid+i]; R[i]=MAX;//\u4ee5\u4fbf\u5c06\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u6392\u597d\u5e8f\u3002 \n    for(i=1,j=1,k=p;k<=r;k++) \n    {\n        if(L[i]<=R[j])//\u65e0\u9006\u5e8f\u5bf9\n            A[k]=L[i++];    \n        else //\u6709\u9006\u5e8f\u5bf9\n        {\n            ans+=ll-i+1;//\u9006\u5e8f\u5bf9\u6570\u91cf \n            A[k]=R[j++];    \n        } \n    } \n    return ;\n}\nvoid merge_sort(int p,int r)\n{//\u6392\u5e8f \n    if(p<r)//\u5143\u7d20>1 \n    {\n        int mid=(p+r)/2;\n        merge_sort(p,mid);\n        merge_sort(mid+1,r);\n        merge(p,mid,r);\n    }\n    return;\n}\nint main(void)\n{\n    scanf(\"%d\",&n);\n    for(i=1;i<=n;i++)\n        scanf(\"%d\",&A[i]);\n    merge_sort(1,n);\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1437223408,
        "uid": 4693,
        "name": "CoolTeam",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u5176\u5b9e\uff0c\u6211\u4eec\u53ef\u4ee5\u5e94\u7528\u4e8c\u8def\u5f52\u5e76\u6392\u5e8f\u7684\u6027\u8d28\uff0c\u7ed9\u51fa nlogn \u7b97\u6cd5\u3002\n\n```delphi\nvar  \n  i,n,t:longint;  \n  a:array[0..100000] of longint;     \n  h:array[0..100000] of longint;  \nprocedure merge(l,r:longint);  \nvar i,mid,left,right:longint;  \nbegin  \n   if l>=r then exit;  \n   mid:=(l+r)>>1;  \n   merge(l,mid); merge(mid+1,r);   //\u4e8c\u5206\u5de6\u533a\u95f4 \u4e8c\u5206\u53f3\u533a\u95f4\n   left:=l; right:=mid+1;  \n   for i:=l to r do begin  \n       if (left<=mid)and((a[left]<=a[right])or(right>r)) then begin  \n           h[i]:=a[left];  \n           left:=left+1;  \n       end  \n       else begin  \n           h[i]:=a[right];  \n           right:=right+1;  \n           t:=t+(mid-left+1);  //\u7edf\u8ba1\n       end;  \n   end;  //\u533a\u95f4\u5f52\u5e76\n   for i:=l to r do a[i]:=h[i];  \nend;  \nbegin  \n  readln(n);  \n  for i:=1 to n do read(a[i]);  \n  merge(1,n);  \n  writeln(t);  //\u6b64\u65f6a\u6570\u7ec4\u4e5f\u662f\u6709\u5e8f\u7684\nend.  \n```\n\u5728\u6b64\u901f\u5ea6\u4e0a\u4e0e\u6811\u72b6\u6570\u7ec4\u76f8\u5dee\u65e0\u51e0\uff1f\u3002\u3002\n",
        "postTime": 1383406624,
        "uid": 69,
        "name": "usqwedf",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u672c\u9898\u4e00\u5f00\u59cb\u6211\u662f\u4f7f\u7528\u66b4\u641c\uff0c\u7ed3\u679c\u503c\u5f97\u4e86\u53ef\u601c\u768420\u5206\u3002\u7136\u540e\u6211\u51b3\u5b9a\u5148\u5feb\u6392\u4e00\u8fb9\u518d\u8bf4\u3002\u7ed3\u679c\u4e00\u8fb9\u5feb\u6392\u4e0b\u6765\uff0c\u6211\u77ac\u95f4\u9192\u609f\u4e86\u3002\u6211\u4eec\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u4e4b\u540e\uff0c\u4e00\u5b9a\u662f\u8fd9\u6837\u5199\u7684\uff08b\u8868\u793a\u539f\u6765\u5728\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\uff09\n\n```delphi\nfor i:=2 to n do\n  for j:=1 to i-1 do\n    if b[j]<b[i] then inc(ans);\n```\n\u867d\u7136\u8fd9\u8fd8\u662fN\u65b9\u7684\uff0c\u4f46\u522b\u7740\u6025\uff0c\u8fd9\u5df2\u7ecf\u5341\u5206\u63a5\u8fd1\u6b63\u786e\u7b54\u6848\u4e86\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u6bcf\u4e00\u6b21i\u90fd\u662f\u6c421~b[i]\u4e2d\u90a3\u4e9b\u5728\u5b83\u7684\u524d\u9762\uff0c\u76f8\u5f53\u4e8e\u5728\u5b83\u524d\u9762\u7684\u503c\u4e3a1\uff0c\u540e\u9762\u7684\u503c\u4e3a0\uff0c\u5faa\u73af\u4e4b\u540e\u503c\u6709\u53d8\u4e3a\u4e861\uff0c\u4e8e\u662f\u5199\u51fa\u6765\u662f\u8fd9\u6837\u5b50\u7684:\n\n```delphi\nfor i:=2 to n do\n   begin\n     for j:=1 to b[i] do inc(ans,c[j]);\n     c[b[i]]:=1;\n   end;\n```\n\u6211\u4eec\u53d1\u73b0\u4e86\u4ec0\u4e48\uff1f\u5bf9\uff0c\u53ea\u6709\u52a0\u4e00\u548c\u6c42\u548c\u4e24\u79cd\u64cd\u4f5c\uff0c\u4e8e\u662f~~~~\u6811\u72b6\u6570\u7ec4\uff01\uff01\uff01\n\n\n\u8be6\u89c1\u6807\u7a0b\uff1a\n\n```delphi\nvar\n  a,b,c:array[0..100000] of longint;\n  i,n,ans:longint;\nprocedure qsort(r,l:longint);\nvar\n  i,j,t,mid:longint;\nbegin\n  i:=r; j:=l;\n  mid:=a[random(j-i+1)+i];\n  repeat\n    while a[i]>mid do inc(i);\n    while a[j]<mid do dec(j);\n    if i<=j then\n      begin\n        t:=a[i]; a[i]:=a[j]; a[j]:=t;\n        t:=b[i]; b[i]:=b[j]; b[j]:=t;\n        inc(i); dec(j);\n      end;\n  until i>j;\n  if i<l then qsort(i,l);\n  if r<j then qsort(r,j);\nend;\nfunction lowbit(x:longint):longint;\nbegin\n  exit(x and -x);\nend;//\u6c42x\u7684lowbit\nfunction getsum(x:longint):longint;\nvar\n  t:longint;\nbegin\n  t:=0;\n  while x>0 do\n    begin\n      inc(t,c[x]);\n      x:=x-lowbit(x);\n    end;\n  exit(t);\nend;//\u6c42\u548c\nprocedure insert(x:longint);\nbegin\n  while x<=n do\n    begin\n      inc(c[x]);//\u7531\u4e8e\u53ea\u6709\u52a0\u4e00\uff0c\u6240\u4ee5\u8fd9\u6837\u5b50\u5373\u53ef\n      x:=x+lowbit(x);\n    end;\nend;//\u63d2\u5165\u64cd\u4f5c\nbegin\n  randomize;\n  readln(n);\n  for i:=1 to n do\n    begin\n      read(a[i]);\n      b[i]:=i;\n    end;\n  qsort(1,n);//\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n  insert(b[1]);\n  for i:=2 to n do\n    begin\n      inc(ans,getsum(b[i]));//\u7d2f\u52a0\u6c42\u548c\n      insert(b[i]);//\u52a01\n    end;\n  writeln(ans);\nend.\n```",
        "postTime": 1383393510,
        "uid": 734,
        "name": "lych",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u5c3d\u7ba1\u90fd\u662f\u5f52\u5e76\u6392\u5e8f\uff0c\n\n\u8fd9\u4e2a\u7a0b\u5e8f\u53ea\u6709\u4e24\u4e2a\u5faa\u73af\uff0c\n\n\u4f18\u5316\u540e\u8fd0\u884c\u6548\u7387\u6709\u7565\u5fae\u7684\u63d0\u9ad8\uff1a1125ms\uff0c\n\n**\uff08\u867d\u7136\u65f6\u95f4\u590d\u6742\u5ea6\u8fd8\u662fnlog(n)\uff09**\n\n\u4e0d\u8fc7\u53ef\u8bfb\u6027\u5f88\u5dee\uff0c\n\n\u5c3d\u7ba1\u6570\u636e\u52a0\u5f3a\u540e\u6ca1\u6709\u5feb\u901f\u8f93\u5165\u4f9d\u7136\u80fdAC\uff0c\n\n\u6240\u4ee5\u8bb0\u4f4f\uff1a\n\n\u8bf7\u4e0d\u8981\u56e0\u4e3a\u4e00\u70b9\u70b9\u7684\u6548\u7387\u800c\u4f7f\u5f97\u4ee3\u7801\u53d8\u5f97\u96be\u4ee5\u7ef4\u62a4\u3002\n\n~~\uff08\u5176\u5b9e\u88abchen_zhe_julao\u52a0\u5f3a\u540e\u7684\u6570\u636e\u4e5f\u4e0d\u662f\u90a3\u4e48\u96be\u561b\uff09~~\n\n```c\n#include<stdio.h>\nlong long temp[500001],s1ac_8j[500002];\n//\u9996\u5148\uff0c \u8fd9\u4e48\u5927\u7684\u8f93\u5165\u6570\u636e\u600e\u4e48\u80fd\u4e0d\u5b9a\u4e49\u5927\u7684\u6570\u7ec4\u5462\u5bf9\u5427\nbool _=false;\n/*main\u53c2\u6570\u521d\u59cb\u5316\u6761\u4ef6\uff0c\n\u5982\u679c\u4f60\u7684\u7f16\u8bd1\u5668\u4f1a\u628a\u6240\u6709\u53c2\u6570\u90fd\u521d\u59cb\u5316\u4e3a\u96f6\u90a3\u4e48\u5c31\u4e0d\u9700\u8981\u8fd9\u6761\u8bed\u53e5*/\nlong long sort(long long *a,const int i,const int j,long long temp[],long long ans=0)\n{//\u5f52\u5e76\u6392\u5e8f\u7684\u539f\u7406\u6b63\u597d\u62ff\u6765\u6c42\u9006\u5e8f\u5bf9\n    if(i==j)return ans;\n\t//\u8fb9\u754c\u6761\u4ef6\n    int l,n,r,m;\n\t   \n\tfor(\tans=sort(a,i,(r=(m=((l=n=i)+j)/2)+1)-1,temp,ans)\n \t\t\t\t,ans=sort(a,r,j,temp,ans);\n    \t    /*\u9012\u5f52\u5c06\u6570\u636e\u5206\u89e3*/\n            n<=j||(a+=i,n-=i,temp+=i,0);\n            /*\u5982\u679c\u4e0d\u7b26\u5408n<=j\u624d\u4f1a\u6267\u884c\u540e\u9762\u7684\uff0c\u4e0d\u8fc7\u8fd9\u6761\u8bed\u53e5\n              \u56e0\u4e3a\u9017\u53f7\u8868\u8fbe\u5f0f\u6240\u4ee5\u4f9d\u7136\u8fd4\u56de\u7684\u662fn<=j\u7684\u6bd4\u8f83\u7ed3\u679c\n    \t      \u8fd9\u8fd8\u662f\u901a\u8fc7||\u548c&&\u7684\u666e\u904d\u7279\u6027\u6765\u5b9e\u73b0\u7684\u5feb\u901fif\u8bed\u53e5*/\n            (l<=m||(n[temp]=r++[a],0))\n        \t\t&&(r<=j||(temp[n]=l++[a],0))\n        \t    &&(a[l]>a[r]||(temp[n]=l++[a],0))\n        \t    &&(n[temp]=(ans+=m-l+1,r++)[a]),n++\n            /*\u56e0\u4e3a\u53ef\u80fd\u6709\u76f8\u7b49\u7684\u6570,\u6240\u4ee5\u6ce8\u610f\u8981\u5199\u5c0f\u4e8e\u7b49\u4e8e\u53f7*/\n            /*\u56e0\u4e3a\u7f16\u8bd1\u65f6\u7684\u2018\u8d2a\u5fc3\u6cd5\u2019\u548cC\u8bed\u8a00\u6570\u7ec4\u504f\u79fb\n              \u91cf\u662f\u901a\u8fc7\u6307\u9488\u5904\u7406\u7684\u8fd9\u4e2a\u7279\u6027,r++[a]\u7b49\n              \u540c\u4e8ea[r++]\u8fd9\u4e00\u70b9\u5e94\u8be5\u90fd\u77e5\u9053\u5427\uff0c\n              \u4e0d\u8fc7\u8fd9\u6837\u504f\u79fb\u91cf\u4f5c\u4e3a\u5de6\u503c\u5728\u4e00\u822c\u60c5\u51b5\u4e0b\n              \u901f\u5ea6\u4f1a\u6709\u5341\u5206\u7ec6\u5fae\u7684\u52a0\u5feb(\u8fd9\u4e00\u70b9\u8bf7\u4e0d\u8981\u5b66\u4e60\u6211)*/\n      );\n\t//\u6709\u6ca1\u6709\u53d1\u73b0\u4e0a\u9762\u8fd9\u53ea\u662f\u4e00\u6761for\u5faa\u73af\u8bed\u53e5\uff0c\u53ea\u4e0d\u8fc7\u6211\u7a0d\u5fae\u6392\u7248\u4e86\u4e00\u4e0b\n    \n\twhile(--n+1)*a++=*temp++;\n    /*\u5c06temp\u6570\u7ec4\u90e8\u5206\u8d4b\u503c\u7ed9a\u6570\u7ec4,\n    \u5176\u5b9e\u4e5f\u53ef\u4ee5\u628a\u8fd9\u6761\u8bed\u53e5\u653e\u8fdbfor\u5faa\u73af\u91cc\uff0c\n    \u4e0d\u8fc7\u56e0\u4e3a\u6bd4\u8f83\u6240\u4ee5\u5355\u72ec\u653e\u51fa\u6765\u901f\u5ea6\u4f1a\u66f4\u5feb*/\n\treturn ans;\n}\nint main(int argv,char**argc)\n{\n\treturn !_?(_=!_,main(0,argc)):(scanf(\"%lld\"\n\t,&argv[s1ac_8j]),(argv!=0[s1ac_8j]?main(\n\targv+1,argc):(printf(\"%lld\",sort(1+s1ac_8j\n\t,0,0[s1ac_8j]-1,temp)),0)));\n\t/*main\u9012\u5f52\u5b9e\u73b0\u8fde\u7eed\u8f93\u5165,\n      \u4f9d\u7136\u662f\u4e00\u6761\u8bed\u53e5,\n      \u5982\u679c\u4f60\u611f\u5174\u8da3\u4f60\u53ef\u4ee5\u6765\u5206\u6790\u8fd9\u6761\u8bed\u53e5\u7684\u610f\u601d\n      \u63d0\u793a\uff1as1ac_8j[0]\u5b58\u50a8\u7684\u662f\u6570\u7ec4\u5927\u5c0f*/\n}\n```\n",
        "postTime": 1548035265,
        "uid": 123324,
        "name": "jx2014wzd",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "**\u8fd9\u662f\u6570\u636e\u52a0\u5f3a\u540e\u7684\u4e00\u7bc7\u6811\u72b6\u6570\u7ec4\u7684\u9898\u89e3**\n\n\u9996\u5148\uff0c\u589e\u5f3a\u540e\u6570\u636e\u4e2d\u6709\u91cd\u590d\u5143\u7d20\n\n\u6240\u4ee5\uff0c\u5728\u6309\u4ef7\u503c\u6392\u5e8f\u65f6\u8fd8\u5e94\u5224\u65ad\u4ef7\u503c\u76f8\u540c\u7684\u5143\u7d20\u987a\u5e8f\u5982\u4f55\n\n\u5982\u4e0b\n```cpp\nbool cmp(pair<int,int> a,pair<int,int> b){\n    if(a.first!=b.first)    \n    \treturn a.first>b.first;\n    return a.second>b.second;\n}\n//pair\u7684first\u5b58\u4ef7\u503c\uff0csecond\u5b58\u4f4d\u7f6e\n```\n\n\u8fd8\u6709\u6ce8\u610f\u5f00long long\n\n\u6700\u540e\u8d34\u4e0a\u5b8c\u6574\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint N;\npair<int,int> a[5000100];\nlong long ans=0;\nint tree[5000100];\nbool cmp(pair<int,int> a,pair<int,int> b){\n    if(a.first!=b.first)    return a.first>b.first;\n    return a.second>b.second;\n}\nlong long lowbit(int k){\n    return k & -k;\n}\nvoid add(int x){\n    while(x<=N){\n        tree[x]++;\n        x+=lowbit(x);\n    }\n}\nlong long query(int x){\n    long long t=0;\n    while(x){\n        t+=tree[x];\n        x-=lowbit(x);\n    }\n    return t;\n}\nint main(){\n    cin>>N;\n    for(int i=1;i<=N;i++){\n        scanf(\"%d\",&a[i].first);\n        a[i].second=i;\n    }\n    sort(a+1,a+1+N,cmp);\n    for(int i=1;i<=N;i++){\n        add(a[i].second);\n        ans+=query(a[i].second-1);\n    }\n    cout<<ans<<endl;\n}\n```\n\n",
        "postTime": 1538750686,
        "uid": 63536,
        "name": "54DAHAOREN",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "## \u8fd9\u65f6\u5019\u600e\u4e48\u80fd\u5c11\u4e86SBT\u5462\n\nSBT\uff08Size Balanced Tree\uff09\u5e73\u8861\u6811\u7684\u4e00\u79cd\uff0c\u7531\u9648\u542f\u5cf0\u53d1\u660e\uff0c\u636e\u4f5c\u8005\u5439\u5618\uff0c\u5b83\u662f\u201c\u76ee\u524d\u4e3a\u6b62\u901f\u5ea6\u6700\u5feb\u7684\u9ad8\u7ea7\u4e8c\u53c9\u641c\u7d22\u6811\u201d\uff0c\u5b83\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u5b9e\u73b0\u52a8\u6001\u987a\u5e8f\u7edf\u8ba1\u4e2d\u7684select\u548crank\u64cd\u4f5c\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u6709\u4e86\u4e2a\u4f18\u79c0\u7684\u6570\u636e\u7ed3\u6784\u6765\u52a8\u6001\u8ba1\u7b97\u67d0\u4e2a\u6570\u4e4b\u524d\u6709\u591a\u5c11\u4e2a\u6570\u5927\u4e8e\u5b83\n\n\u7b54\u6848\u5c31\u662f\u5b83\u4eec\u7684\u548c...\n\n\u6bd4\u7ebf\u6bb5\u6811\u548c\u6811\u72b6\u6570\u7ec4\u5c11\u4e86\u79bb\u6563\u5316\uff0c\u601d\u7ef4\u96be\u5ea6\u4f4e\uff0c\u80cc\u6a21\u677f\u5c31\u597d\uff1b\u6bd4Splay\u597d\u5199\uff0c\u8fd8\u5feb\uff0c\u800c\u4e14\u4e0d\u4f1a\u9000\u5316\u6210\u94fe\u3002\u60f3\u5b66\u4e60\u7684\u5404\u4f4d\u770b\u5b98\u53ef\u4ee5\u767e\u5ea6\u4e00\u4e0b\u67e5\u627e\u8d44\u6599\n```\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<cstdlib>\n#define N 50010\nusing namespace std;\nclass SBT {\n\tint root, cnt;\n\tint data[N], sz[N], ch[N][2];\n\tinline void rotate(int &x, int dir) {//dir0\u4e3a\u5de6\u65cb1\u4e3a\u53f3\u65cb\uff0c\u53ef\u4ee5\u5206\u5f00\u6765\u5199\uff0c\u4e2a\u4eba\u559c\u6b22\u5408\u5e76\u5199\uff0c\u65b9\u4fbf\uff0c\u4f46\u662f\u5c0f\u5fc3\u628a\u81ea\u5df1\u641e\u7cca\u6d82\n\t\tint t = ch[x][dir ^ 1];\n\t\tch[x][dir ^ 1] = ch[t][dir];\n\t\tch[t][dir] = x;\n\t\tsz[t] = sz[x];\n\t\tsz[x] = sz[ch[x][0]] + sz[ch[x][1]] + 1;\n\t\tx = t;\n\t}\n\tinline void maintain(int &x) {//SBT\u6700\u5173\u952e\u7684\u7ef4\u62a4\u5e73\u8861\u7684\u64cd\u4f5c\uff0c\u51714\u79cd\u60c5\u51b5\uff0c\u4e24\u4e24\u5bf9\u79f0\uff0c\u5177\u4f53\u5de6\u8f6c\u5ea6\u5a18\n\t\tfor (int i = 0; i < 2; i++) {\n\t\t\tif (sz[ch[ch[x][i]][i]] > sz[ch[x][i ^ 1]]) {\n\t\t\t\trotate(x, i ^ 1);\n\t\t\t\tmaintain(ch[x][i ^ 1]);\n\t\t\t\tmaintain(x);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (sz[ch[ch[x][i]][i ^ 1]] > sz[ch[x][i ^ 1]]) {\n\t\t\t\trotate(ch[x][i], i);\n\t\t\t\trotate(x, i ^ 1);\n\t\t\t\tmaintain(ch[x][0]);\n\t\t\t\tmaintain(ch[x][1]);\n\t\t\t\tmaintain(x);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvoid insert(int &x, int k) {//\u63d2\u5165\n\t\tif (!x) {\n\t\t\tdata[++cnt] = k;\n\t\t\tsz[cnt] = 1;\n\t\t\tx = cnt;\n\t\t}\n\t\telse {\n\t\t\tsz[x]++;\n\t\t\tinsert(ch[x][data[x] >= k], k);\n\t\t\tmaintain(x);\n\t\t}\n\t}\n\tint order_of_key(int x, int k) {//\u67e5\u8be2\u6392\u540d\n\t\tif (!x) return 0;\n\t\tif (data[x] <= k) return order_of_key(ch[x][0], k);\n\t\telse return 1 + sz[ch[x][0]] + order_of_key(ch[x][1], k);\n\t}\npublic:\n\tSBT() {\n\t\troot = cnt = 0;\n\t\tmemset(data, 0, sizeof(data));\n\t\tmemset(sz, 0, sizeof(sz));\n\t\tmemset(ch, 0, sizeof(ch));\n\t}\n\tinline void insert(int k) { insert(root, k); }//\u987a\u624b\u7684\u5c01\u88c52333\n\tinline int order_of_key(int k) { return order_of_key(root, k); }\n};\nSBT sbt;\nint n, ans;\nint main() {\n\tscanf(\"%d\", &n);\n\tfor (int i = 1; i <= n; i++) {\n\t\tint x; scanf(\"%d\", &x);\n\t\tans += sbt.order_of_key(x);\n\t\tsbt.insert(x);\n\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1532617697,
        "uid": 28642,
        "name": "C2H6O",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "> ## \u6d45\u8c08\u9006\u5e8f\u5bf9\u505a\u6cd5\n\n\u7531\u4e8e\u6700\u8fd1\u8003\u8bd5\u89e6\u53ca\u5230\u4e86\u9006\u5e8f\u5bf9,\u6240\u4ee5\u8fd9\u91cc\u6765\u8bb2\u4e00\u4e0b\u8fd9\u4e2a\u6700\u7b80\u5355\u7684\u505a\u6cd5\u3002\n\n> ### \u6743\u503c\u7ebf\u6bb5\u6811\u505a\u6cd5\n\n\u6211\u4eec\u77e5\u9053\u9006\u5e8f\u5bf9\u5b9a\u4e49: $a[i]>a[j]$ \u4e14 $i<j$,\u6240\u4ee5\u6734\u7d20\u53d1\u65b9\u6cd5\u5c31\u5f88\u5bb9\u6613\u60f3\u5230\u3002\n\n$ for\\ i:=1\\ to\\ n\\ do $\n\n$ \\ \\ \\ \\ \\ for\\ j:=i+1\\ to\\ n\\ do $\n\n$ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ Operate;$\n\n\u7136\u540e\u6211\u4eec\u8bd5\u7740\u628a$O(n^2)$\u6539\u4e3a$O(n\\ log\\ n)$,\u6211\u4eec\u53ef\u4ee5\u628a$j$\u8fd9\u4e2a\u5faa\u73af\u5220\u6389,\u7528\u66f4\u4f2a\u7684\u4ee3\u7801\u8868\u793a\n\n$ for\\ i:=1\\ to\\ n\\ do $ \n\n$ \\ \\ \\ \\ \\ i$\u524d\u9762\u7684\u6bd4\u5b83\u5c0f\u7684\u6570\n\n$ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ Operate;$\n\n\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u60f3\u5230\u524d\u9762\u7684\u6570\u8fdb\u884c\u5b58\u50a8\u7136\u540e\u76f4\u63a5\u67e5\u8be2\u7684\u65b9\u6cd5,\u7136\u540e\u53c8\u53ef\u4ee5\u60f3\u5230\u795e\u5947\u7684**\u6743\u503c\u7ebf\u6bb5\u6811**,\u56e0\u4e3a\u8fd9\u6837\u5b50\u53ef\u4ee5\u4fdd\u6301**\u53f6\u5b50\u8282\u70b9\u5355\u8c03**,\u4f46\u662f\u9700\u8981\u79bb\u6563\u5316\u3002\n\n> ### \u67e5\u8be2\u64cd\u4f5c\n\n\u6211\u4eec\u628a\u90a3\u4e9b\u5df2\u7ecf\u5b58\u50a8\u7684\u70b9\u6309\u7167**\u666e\u901a\u7ebf\u6bb5\u6811**\u533a\u95f4\u67e5\u8be2\u51fa\u6765\u5c31\u53ef\u4ee5\u4e86\u3002\u5982\u56fe:\n\n![4.png](https://cdn.luogu.com.cn/upload/pic/24313.png)\n\n\u84dd\u8272\u7684\u90e8\u5206\u80af\u5b9a\u5c31\u662f\u6bd4$3$\u5c0f\u4e14\u7b26\u5408$i<j$(\u56e0\u4e3a\u6211\u662f\u5012\u53d9\u63d2\u5165\u7684)\u3002\n\n> ### \u63d2\u5165(\u4fee\u6539)\u64cd\u4f5c\n\n\u4fee\u6539\u64cd\u4f5c\u5c31\u975e\u5e38\u7b80\u5355,\u76f4\u63a5\u5728\u7279\u5b9a\u4f4d\u7f6e\u628a\u6570\u653e\u8fdb\u53bb\u3002\u8981\u6ce8\u610f$tree[k]:=tree[k*2]+tree[k*2+1]$\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/24316.png)\n\n> ## $Code$\n\n```pascal\n\nvar\n    n,find,ans:int64;\n    i:longint;\n    num,place,numm:array[-1..110000] of int64;\n    tree:array[-1..440000] of int64;\n\nprocedure Query(l,r,k:longint);\nvar\n    mid:longint;\nbegin\n    if (1<=l)and(r<=num[i]) then\n    begin\n        inc(find,tree[k]);\n        exit;\n    end;\n    mid:=(l+r) div 2;\n    if 1<=mid then\n        Query(l,mid,k*2);\n    if num[i]>mid then\n        Query(mid+1,r,k*2+1);\nend;\n\nprocedure Change(l,r,k:longint);\nvar\n    mid:longint;\nbegin\n    if l=r then\n    begin\n        inc(tree[k]);\n        exit;\n    end;\n    mid:=(l+r) div 2;\n    if num[i]<=mid then\n        Change(l,mid,k*2)\n    else\n        Change(mid+1,r,k*2+1);\n    tree[k]:=tree[k*2]+tree[k*2+1];\nend;\n\nprocedure Sort(l,r:longint);\nvar\n    s,t:int64;\n    i,j:longint; \nbegin\n    i:=l; j:=r; s:=num[(l+r) div 2];\n    repeat\n        while num[i]<s do i:=i+1;\n        while num[j]>s do j:=j-1;\n        if i<=j then\n        begin\n            t:=num[i]; num[i]:=num[j]; num[j]:=t;\n            t:=place[i]; place[i]:=place[j]; place[j]:=t;\n            inc(i); dec(j);\n         end;\n    until i>=j;\n    if i<r then  Sort(i,r);\n    if j>l then  Sort(l,j);\nend;\n\nbegin\n    read(n);\n    for i:=1 to n do\n    begin\n        read(num[i]);\n        place[i]:=i;\n    end;\n    Sort(1,n);\n    for i:=1 to n do\n        numm[place[i]]:=i;\n    num:=numm;\n\n    i:=n;\n    Change(1,n,1);\n    for i:=n-1 downto 1 do\n    begin\n        find:=0;\n        Query(1,n,1);\n        inc(ans,find);\n        Change(1,n,1);\n    end;\n    writeln(ans);\nend.\n```\n",
        "postTime": 1531998279,
        "uid": 77760,
        "name": "arfa",
        "ccfLevel": 0,
        "title": "\u6d45\u8c08\u9006\u5e8f\u5bf9\u505a\u6cd5"
    },
    {
        "content": "#### \u4eca\u5929\u6211\u4eec\u6765\u8bb2\u4e00\u8bb2\u9006\u5e8f\u5bf9\u7684\u53e6\u5916\u4e00\u79cd\u5b9e\u73b0\n#### \u6811\u72b6\u6570\u7ec4&Splay\n\n\u5176\u5b9e\u9006\u5e8f\u5bf9\u4e0d\u4ec5\u4ec5\u662f\u53ef\u4ee5\u7528\n\n1\u3001\u79bb\u6563\u5316+\u6743\u503c\u7ebf\u6bb5\u6811\n\n2\u3001\u52a8\u6001\u5f00\u70b9+\u6743\u503c\u7ebf\u6bb5\u6811\n\n\u5982\u679c\u60a8\u8fd8\u6ca1\u6709\u770b\u5230\u8fd9\u4e24\u4e2a\u89e3\u6cd5\uff0c\u4e0d\u8981\u7740\u6025\uff0c\u4e0b\u9762\u662f\u94fe\u63a5\uff1a[\u4ece\u9006\u5e8f\u5bf9\u5f00\u59cb](https://mudrobot.blog.luogu.org/zong-ni-xu-dui-kai-shi-post)\n\n#### (\u611f\u8c22Mudrobot\u7684\u9f0e\u529b\u652f\u6301)\n\n\u8fd9\u9053\u9898\u5df2\u7ecf\u88ab\u6211\u6de1\u5fd8\u4e00\u5468\u4e86\uff0c\u53ef\u662f\u4ed6\u7684\u7075\u9b42\u6211\u4e00\u76f4\u6ca1\u6709\u5fd8\u8bb0\uff0c\u76f4\u5230\u6628\u5929\uff0c\u6709\u4e00\u4e2a\u540c\u5b66\u63d0\u9192\u6211\u8fd9\u9053\u9898\u80fd\u4e0d\u80fd\u7528\u6811\u72b6\u6570\u7ec4\u505a\uff0c\u6211\u4e00\u4e0b\u5b50\u5c31\u60ca\u9192\u4e86\uff0c\u6211\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u5e94\u8be5\u662f\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u70b9\u5b50\uff0c\u56e0\u4e3a\u6811\u72b6\u6570\u7ec4\u672c\u6765\u5c31\u8981\u6bd4\u7ebf\u6bb5\u6811\u5feb\u5e76\u4e14\u7a7a\u95f4\u6bd4\u7ebf\u6bb5\u6811\u5c0f\uff0c\u6700\u91cd\u8981\u7684\u662f\uff0c\u8fd9\u73a9\u610f\u513f\u8fd8\u975e\u5e38\u7684\u597d\u5199\uff0c\u6240\u4ee5\u4eca\u5929\u65e9\u4e0a\u6211\u6210\u529f\u7684\u7528\u6811\u72b6\u6570\u7ec4AC\u4e86\u8fd9\u9053\u9898\uff0c\u7ed3\u679c\u975e\u5e38\u7406\u60f3\u4e0b\u9762\u4e0a\u51e0\u5f20\u56fe\uff1a\n\n\u4e0b\u9762\u662f\u7ebf\u6bb5\u6811\u8dd1\u51fa\u7684\u7ed3\u679c\uff1a\n\n![\u8fd9\u91cc\u5199\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdn.net/20180404170722594?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwMDc5OTMz/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n\n\u4e0b\u9762\u662f\u6811\u72b6\u6570\u7ec4\u8dd1\u51fa\u7684\u7ed3\u679c\uff1a\n\n![\u8fd9\u91cc\u5199\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdn.net/20180404170800875?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwMDc5OTMz/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n\n\u6ca1\u6709\u5b66\u8fc7\u6811\u72b6\u6570\u7ec4\u5417\uff1f\u6233\u8fd9\u91cc\u261e[\u6811\u72b6\u6570\u7ec4](https://mudrobot.blog.luogu.org/shu-zhuang-shuo-zu-hou-xu-geng-xin-post)\n\n\u5927\u5bb6\u53ea\u8981\u8ba4\u771f\u5b66\u4e60\u4e86\u4ee5\u540e\u5e76\u4e14\u8ba4\u771f\u770b\u4e86\u524d\u9762\u94fe\u63a5\u535a\u5ba2\u7684\u79bb\u6563\u5316\u7684\u64cd\u4f5c\u90a3\u4e48\u6211\u76f8\u4fe1\u8fd9\u9053\u9898\u5f88\u5feb\u5c31\u53ef\u4ee5\u8111\u8865\u51fa\u6765\uff01\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\uff08\u5f88\u77ed\u7684\uff01\uff01\uff01\uff09\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=40005;\nstruct sd{\n    int loc,val;\n}a[N];\nint n;\nint maxx=0;\nint x[N],o[N],ans=0;\nint lowbit(int a){return a&-a;}\nvoid modify(int num)\n{\n    while(num<=maxx)\n    {\n        o[num]+=1;\n        num+=lowbit(num);\n    }\n}\nint query(int num)\n{\n    int an=0;\n    while(num)\n    {\n        an+=o[num];num-=lowbit(num);\n    }\n    return an;\n}\nbool cmp(sd a,sd b){\n    if(a.val<b.val)\n    return true;\n    return false;\n}\nvoid lisanhua(int n)\n{\n    for(int i=1;i<=n;++i){\n        cin>>a[i].val;\n        a[i].loc=i;\n    }\n    sort(a+1,a+1+n,cmp);\n    int cnt=1;\n    for(int i=1;i<=n;++i){\n        if(i==1||a[i].val==a[i-1].val)\n            x[a[i].loc]=cnt;\n        else{\n            cnt++;\n            x[a[i].loc]=cnt;\n        }\n    }\n}\nint main()\n{\n    std::ios::sync_with_stdio(false);cin>>n;\n    lisanhua(n);\n    for(int i=1;i<=n;++i) if(maxx<x[i]) maxx=x[i];\n    memset(o,0,sizeof(o));\n    for(int i=1;i<=n;++i){\n        modify(maxx+1-x[i]);\n        ans+=query(maxx-x[i]);\n    }\n    cout<<ans;\n    return 0;\n}\n```\n\n\u597d\u4e86\u7b2c\u4e00\u79cd\u7b97\u6cd5\u8bb2\u5b8c\u4e86\uff0c\u4e0b\u9762\u6211\u4eec\u6765\u8bb2\u4e00\u8bb2\u4e07\u80fd\u89e3\u6cd5Splay(\u4f38\u5c55\u6811)\n\n\u8fd8\u662f\u4e00\u6837\u7684\u8282\u594f\uff0c\u4e0d\u4f1aSplay\u7684\u6233\u8fd9\u91cc\u261e[Splay\u8be6\u89e3](https://mudrobot.blog.luogu.org/splay-yang-xie)\n\n\u601d\u8def\u5f88\u7b80\u5355\uff0c\u56e0\u4e3a\u6211\u4eec\u6bcf\u4e00\u6b21\u63d2\u5165\u4e00\u4e2a\u70b9\u6211\u4eec\u5c31\u5bf9\u4ed6\u8fdb\u884c\u65cb\u8f6c\u64cd\u4f5c\uff0c\u65cb\u8f6c\u5230\u6839\u8282\u70b9\uff0c\u7136\u540e\u67e5\u53f3\u5b50\u6811\u5927\u5c0f\u5c31\u53ef\u4ee5\u4e86\u3002\u662f\u4e0d\u662f\u5f88\u7b80\u5355\uff0c\u4f46\u4ee3\u7801\u5c31\u6bd4\u7ebf\u6bb5\u6811\u96be\u5199\u592a\u591a\u4e86\uff0c\u4f46\u662f\u8fd8\u662f\u6bd4\u7ebf\u6bb5\u6811\u5feb\uff0c\u5185\u5b58\u4e5f\u6bd4\u7ebf\u6bb5\u6811\u5c0f\uff01\uff01\uff01\n\n\u4e0a\u56fe\uff1a\n\n![\u8fd9\u91cc\u5199\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdn.net/20180404171708193?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwMDc5OTMz/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```\n    #include<bits/stdc++.h>\n    using namespace std;\n    struct sd\n    {\n        int value;//\u5f53\u524d\u8282\u70b9\u6240\u50a8\u5b58\u7684\u503c \n        int son[2];//\u5de6\u53f3\u513f\u5b50 \n        int delta; //\u6682\u65f6\u6ca1\u7528\n        int father;//\u81ea\u5df1\u7684\u7238\u7238 \n        int below;//\u81ea\u5df1\u4e0b\u9762\u6811\u7684\u5927\u5c0f \n    }tree[1000005];\n    int root;//\u6839 \n    int cnt;//\u4e0b\u6807\u5206\u914d \n    int dir;//\u65cb\u8f6c\u65b9\u5411 0\u662f\u5de6\u8fb9 1\u662f\u53f3\u8fb9 \n    inline void maintain(int now)//\u7ef4\u62a4 \u66f4\u65b0\u5de6\u53f3\u5b50\u6811\u7684\u5927\u5c0f\uff08\u8fd9\u9053\u9898\u4e2d\u53ef\u4ee5\u4e0d\u5199\uff09\n    {\n        tree[now].below=1;\n        if(tree[now].son[0])tree[now].below+=tree[tree[now].son[0]].below;\n        if(tree[now].son[1])tree[now].below+=tree[tree[now].son[1]].below;\n    }\n    inline int get(int now)//\u786e\u5b9a\u65cb\u8f6c\u65b9\u5411 \n    {\n        if(tree[tree[now].father].son[0]==now)return 0;\n        return 1;\n    }\n    //---------------------------------------------------------------------- \n    void rotate(int now)//\u65cb\u8f6c \u9700\u8981\u91cd\u70b9\u7406\u89e3 \n    {\n        dir=get(now);\n        int fa=tree[now].father,gra=tree[fa].father;\n        tree[fa].son[dir]=tree[now].son[dir^1];\n        tree[tree[now].son[dir^1]].father=fa;\n        if(gra)tree[gra].son[get(fa)]=now;\n        tree[now].father=gra;\n        tree[fa].father=now;\n        tree[now].son[dir^1]=fa;\n        maintain(fa);\n        maintain(now);\n    }\n    //---------------------------------------------------------------------- \n    inline void splay(int now)\n    {\n        int gra,fat;//\u5b9a\u4e49now\u7684\u7956\u7236\u548c\u7238\u7238 \n        int opt1,opt2;//\u5b9a\u4e49\u4e24\u6b21\u65cb\u8f6c\u65b9\u5411 \n        while(tree[now].father)//\u5982\u679cnow\u8fd8\u6709\u81ea\u5df1\u7684\u7238\u7238\uff0c\u5373now\u8fd8\u6ca1\u6709\u65cb\u8f6c\u5230\u6839\u8282\u70b9\u3002\u7ee7\u7eed\uff01 \n        {\n            fat=tree[now].father;gra=tree[fat].father;\n            if(gra!=0)//\u5982\u679c\u6709\u7956\u7236\uff0c\u5373\u8981\u8fdb\u884c\u53cc\u65cb\uff01 \n            {\n                opt1=get(now);opt2=get(fat);\n                if(opt1==opt2){rotate(fat),rotate(now);}\n                else{rotate(now),rotate(now);}\n            }\n            else\n            rotate(now);\n        }\n        root=now;//\u66f4\u65b0\u6839\u8282\u70b9 \n    }\n    void insertit(int now,int val,int pre)\n    {\n        if(!now)//\u5982\u679cnow\u4e3a\u96f6\uff08\u96f6\u662f\u5047\u7684\uff0c\u5176\u4f59\u662f\u771f\u7684\uff09\u8bf4\u660e\u4ed6\u6ca1\u6709\uff08\u5de6\u53f3\uff09\u513f\u5b50\uff0c\u5c31\u63d2\u5165\uff0c\u5e76\u4e14\u8fdb\u884c\u6839\u8282\u70b9\u65cb\u8f6c\n        {\n            cnt++;\n            tree[cnt].father=pre;\n            tree[cnt].value=val;\n            tree[cnt].below=1;\n            if(tree[pre].value>val)tree[pre].son [0]=cnt;\n            else tree[pre].son[1]=cnt;\n            splay(cnt);\n        }\n        else//\u5982\u679cnow\u4e0d\u662f\u96f6 \n        {\n            if(tree[now].value>val)insertit(tree[now].son[0],val,now);\n            else insertit(tree[now].son[1],val,now);\n        }\n    }\n    inline void in(int &x)//\u5feb\u8bfb \n    {\n        bool fu=false;\n        x=0;char c=getchar();\n        while(!isdigit(c))\n            {\n            if(c=='-')\n            {\n                fu=true;\n            }\n            c=getchar();}\n        while(isdigit(c)){x*=10,x+=c-48;c=getchar();}\n        if(fu)x*=-1;\n    }\n    int main()\n    {\n    \tint ans=0;\n        long long tot=0;\n        int num,prev,sucv;\n        in(num);\n        int a;\n        while(num--)\n        {\n            in(a);\n            insertit(root,a,root);//\u8bfb\u5165\uff08\u4ece\u5f53\u524d\u6839\u5411\u4e0b\u6254\u6570\uff09 \n            ans+=tree[root].below-tree[tree[root].son[0]].below-1;//-1\u5f88\u91cd\u8981 \n        }\n        printf(\"%d\",ans);//\u8fd4\u56de\u603b\u548c \n        return 0;\n}\n```",
        "postTime": 1522855648,
        "uid": 86250,
        "name": "Tony_Ni",
        "ccfLevel": 0,
        "title": "\u4ece\u9006\u5e8f\u5bf9\u53d1\u5c55"
    },
    {
        "content": "-     \u5f52\u5e76\u6392\u5e8f\u7684\u9012\u5f52\u7b97\u6cd5\u7b80\u660e\u6613\u61c2\uff0c\u4f46\u6bd5\u7adf\u8981\u591a\u6b21\u9012\u5f52\u8c03\u7528\uff0c\u9700\u8981\u989d\u5916\u7684\u9012\u5f52\u6808\u7a7a\u95f4\uff0c\u6548\u7387\u4e0d\u5982\u975e\u9012\u5f52\u7b97\u6cd5\u9ad8\u3002\n\n-     \u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\u7b97\u6cd5\u601d\u8def\uff1a\u5206\u522b\u7528L1\u548cL2\u8868\u793a\u5408\u5e76\u524d\u540e\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u5176\u4e2d\u5408\u5e76\u540e\u5e8f\u5217\u7684\u957f\u5ea6\u662f\u5408\u5e76\u524d\u7684\u4e24\u500d\u3002\n\n-     \u521d\u59cb\u6761\u4ef6L1=1\uff0c\u4e4b\u540e\u6bcf\u6267\u884c\u4e00\u6b21\u5408\u5e76\u64cd\u4f5c\uff0cL1\u589e\u500d\uff08L1=L2\uff09\u3002\n\n-     \u5916\u90e8 for \u5faa\u73af\u7684\u5faa\u73af\u4f53\u6bcf\u6267\u884c\u4e00\u6b21\uff0c\u90fd\u4f7f L1 \u548c L2 \u52a0\u500d\u3002\u5185\u90e8\u7684for\u5faa\u73af\u6267\u884c\u5e8f\u5217\u7684\u5408\u5e76\u5de5\u4f5c\uff0c\u5b83\u7684\u5faa\u73af\u4f53\u6bcf\u6267\u884c\u4e00\u6b21\uff0ci \u90fd\u5411\u524d\u79fb\u52a8 L2 \u4e2a\u4f4d\u7f6e\uff0c\u5408\u5e76\u76f8\u90bb\u7684\u4e24\u4e2a\u7b49\u91cf\u5e8f\u5217\uff0c\u76f4\u5230\u5269\u4f59\u5143\u7d20\u7684\u6570\u91cf\u5c0f\u4e8eL2\u3002\u82e5\u5269\u4e0b\u7684\u5143\u7d20\u6570\u91cf\u4ecb\u4e8eL1\u548cL2\u4e4b\u95f4\uff0c\u8bf4\u660e\u8fd9\u662f\u4e24\u4e2a\u6570\u91cf\u4e0d\u7b49\u7684\u5e8f\u5217\uff0c\u5bf9\u4ed6\u4eec\u8fdb\u884c\u5408\u5e76\u64cd\u4f5c\uff1b\u82e5\u5269\u4e0b\u7684\u5143\u7d20\u6570\u91cf\u4e0d\u591a\u4e8eL1\uff0c\u8bf4\u660e\u8fd9\u4e9b\u5143\u7d20\u5c5e\u4e8e\u540c\u4e00\u4e2a\u5df2\u6392\u5e8f\u7684\u5e8f\u5217\uff0c\u65e0\u9700\u5408\u5e76\u3002\n\n-     \u5408\u5e76\u51fd\u6570\u91c7\u7528\u4e86\u5148\u590d\u5236\u518d\u5408\u5e76\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u4f7f\u4ee3\u7801\u66f4\u7b80\u6d01\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\n\n\n\n    \n    \n    \n    \n        \n            \n    \n    \n    \n```cpp\n    #include<iostream>\n    using namespace std;\n    const int MAX = 40001;\n    int A[MAX], TA[MAX];\n    int sum = 0;\n    int ReverseNum_2(int n); //\u5f52\u5e76\u6392\u5e8f\u6c42\u9006\u5e8f\u5bf9  \n    void MergeSort_2(int low, int high);//\u5f52\u5e76\u6392\u5e8f\u7b97\u6cd5\uff08\u975e\u9012\u5f52\uff09 \n    void Merge_2(int low, int mid, int high);//\u5148\u590d\u5236\u518d\u5408\u5e76\uff0c\u53ef\u4ee5\u4f7f\u4ee3\u7801\u66f4\u7b80\u6d01 \n    int main() \n    {\n        int n;\n        cin >> n;\n        for (int i=0; i<n; i++)\n        {\n            cin >> A[i];\n        }\n        cout << ReverseNum_2(n);\n        return 0;\n    }\n    int ReverseNum_2(int n)\n    {\n        MergeSort_2(0, n-1);\n        return sum;\n    }\n    void MergeSort_2(int low, int high)\n    {\n        int i, L1, L2=1, n=high-low+1;\n        for (L1=L2; L2<=n; L1=L2)\n        {\n            L2 = L1 * 2;\n            for (i=0; i+L2<=n; i+=L2)\n            {\n                Merge_2(i, i+L1-1, i+L2-1);\n            }\n            if (i+L1 < n)\n                Merge_2(i, i+L1-1, n-1);\n        }\n    }\n    void Merge_2(int low, int mid, int high)\n    {\n        int i, j, k;\n        //\u5c06A[low..mid]\u4e2d\u5143\u7d20\u987a\u5e8f\u590d\u5236\u5230tempA[low..mid]\n        for (i=low; i<=mid; i++) \n        {\n            TA[i] = A[i];\n        }\n        //\u5c06A[mid+1..hig]\u4e2d\u5143\u7d20\u9006\u5e8f\u5e8f\u590d\u5236\u5230tempA[mid+1..hig]\n        for (i=mid+1,j=high; i<=high; i++,j--) \n        {\n            TA[i] = A[j];\n        }\n        //\u5c06TA[]\u4e2d\u5143\u7d20\u6309\u975e\u9012\u51cf\u5e8f\u5f52\u5e76\u5165A[] \n        for (k=i=low,j=high; k<=high; )//\u53ea\u9700\u5224\u65adk\u662f\u5426\u8d8a\u754c\uff08\u4e5f\u53ef\u5224\u65adi<=j\uff09 \n        {\n            if (TA[i] <= TA[j])\n            {\n                A[k++] = TA[i++];\n            }    \n            else\n            {\n                A[k++] = TA[j--];\n                sum += mid - i + 1;//\u7edf\u8ba1\u9006\u5e8f\u5bf9\u6570\u91cf \n            }\n        }\n    }\n\n```",
        "postTime": 1515568513,
        "uid": 19993,
        "name": "\u5de7\u82e5\u62d9",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u6765\u4e00\u4e2a\u603b\u6c47\u5427\n\n\u65b9\u6cd51\uff1a\u5192\u6ce1 \u65f6\u95f4O(N^2) \u94c1\u5b9aTLE\n\n\u65b9\u6cd52\uff1a\u5f52\u5e76\u6392\u5e8f \u65f6\u95f4O(Nlog2N) \u4e00\u5f00\u59cb\u5b66\u7684\u6c42\u9006\u5e8f\u5bf9\u7b97\u6cd5\n\n\u65b9\u6cd53\uff1a\u6811\u72b6\u6570\u7ec4\n\n\u5148\u79bb\u6563\u5316\uff0c\u4e4b\u540e\u5177\u4f53\u770b\u4ee3\u7801\uff0c\u697c\u4e0b\u90fd\u8bb2\u5f97\u5f88\u6e05\u695a\u4e86\n\ncode:\n\n\n\n    \n    \n\n```cpp\n    const int maxn=100005\n    int n;\n    int a[maxn],c[maxn],p[maxn];\n    inline void update(int pos,int x)\n    {\n        while(pos<=n)\n        {\n            c[pos]+=x;\n            pos+=pos&-pos;\n        }\n    }\n    inline int getsum(int pos)\n    {\n        int sum=0;\n        while(pos>0)\n        {\n            sum+=c[pos];\n            pos-=pos&-pos;\n        }\n        return sum;\n    }\n    inline int cmp(int x,int y)\n    {\n        return a[x]<a[y];\n    }\n    int main()\n    {\n        scanf(\"%d\",&n);\n        int s=0;\n        for(register int i=1;i<=n;++i)\n        {\n            scanf(\"%d\",&a[i]);\n            p[i]=i;\n        }\n        sort(p+1,p+1+n,cmp);\n        for(int i=1;i<=n;i++)\n            a[p[i]]=i;\n        for(int i=1;i<=n;i++)\n        {\n            update(a[i],1);\n            s+=i-getsum(a[i]);\n        }\n        cout<<s;\n        return 0;\n    }\n```\n\u65b9\u6cd54\uff1a\u6743\u503c\u7ebf\u6bb5\u6811\n\u5927\u4f53\u601d\u8def\u548c\u6811\u72b6\u6570\u7ec4\u6bd4\u8f83\u50cf\uff0c\u7ebf\u6bb5\u6811\u7684\u4e0b\u6807\u53d8\u6210\u4e86\u6743\u503c\u800c\u4e0d\u518d\u662f\u6570\uff0c\u4f46\u56e0\u4e3a\u5e38\u6570\u8dd1\u5f97\u6bd4\u6811\u72b6\u6570\u7ec4\u6162\uff0c\u53c8\u6bd4\u5f52\u5e76\u8981\u5feb\u3002\u4f46\u8fd9\u4e2a\u4e1c\u897f\u4f1a\u7528\u8fd8\u662f\u5f88NB\u7684\uff0c\u5f88\u591a\u95ee\u9898\u90fd\u53ef\u4ee5\u7528\u5230\n\ncode:\n\n    \n    \n    \n    \n    \n    \n```cpp\n    const int maxn = 40010;\n    struct Node{\n        int l,r;\n        int tot;\n    }tree[maxn<<2];\n    struct lk\n    {\n        int val,num;\n    }a[maxn];\n    void build(int l,int r,int o)\n    {\n        tree[o].l=l;\n        tree[o].r=r;\n        if(tree[o].l==tree[o].r) return ;\n        int mid=(tree[o].l+tree[o].r)>>1;\n        build(l,mid,o<<1);\n        build(mid+1,r,o<<1|1);\n    }\n    void push_up(int o)\n    {\n        tree[o].tot=tree[o<<1].tot+tree[o<<1|1].tot;\n    }\n    void update(int o,int x)\n    {\n        if(tree[o].l==x && tree[o].l==tree[o].r)\n        {\n            tree[o].tot++;\n            return ;\n        }\n        int mid=(tree[o].l+tree[o].r)>>1;\n        if(x<=mid) update(o<<1,x);\n        if(x>mid) update(o<<1|1,x);\n        push_up(o);\n    }\n    long long getans(int o,int l,int r)\n    {\n        if(tree[o].l>r || tree[o].r<l) return 0;\n        if(tree[o].l==l && tree[o].r==r) return tree[o].tot;\n        int mid=(tree[o].l+tree[o].r)>>1;\n        if(r<=mid) return getans(o<<1,l,r);\n        if(l>mid) return getans(o<<1|1,l,r);\n        return getans(o<<1,l,mid)+getans(o<<1|1,mid+1,r);\n    }\n    inline int cmp(lk x,lk y)\n    {\n        return x.val<y.val;\n    }\n    int main()\n    {\n        int n;\n        scanf(\"%d\",&n);\n        build(1,maxn,1);\n        for(int i=1;i<=n;i++) scanf(\"%d\",&a[i].val),a[i].num=i;\n        sort(a+1,a+n+1,cmp);\n        int ans=0;\n        for(int i=1;i<=n;i++)\n        {\n            ans+=getans(1,(a[i].num+1),n+1);\n            update(1,(a[i].num));\n        }\n        printf(\"%d\",ans);\n        return 0;\n}\n```",
        "postTime": 1515304982,
        "uid": 27030,
        "name": "ustze",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u6211\u7528\u7684\u662f\u5f52\u5e76\u6392\u5e8f\u6c42\u9006\u5e8f\u5bf9\uff08\u9762\u5bf9\u4e00\u7fa4\u7528\u6811\u72b6\u6570\u7ec4\u7684\u5927\u4f6c\u840c\u65b0\u8868\u793a\u745f\u745f\u53d1\u6296\uff09\n\n\u5f52\u5e76\u6392\u5e8f\u5176\u5b9e\u662f\u6709\u5206\u6cbb\u601d\u60f3\u7684\uff0c\u9996\u5148\u628a\u8981\u6392\u5e8f\u7684\u6570\u7ec4\u4e00\u5206\u4e3a\u4e8c\uff0c\u7136\u540e\u518d\u5206\uff0c\u518d\u5206\uff0c\u518d\u518d\u518d\u518d\u5206\u5206\u5206\u5206\uff0c\u5206\u5230\u6709\u82e5\u5e72\u4e2a\u53ea\u6709\u4e00\u4e2a\u6570\u7684\u5c0f\u6570\u7ec4\u4e3a\u6b62\uff0c\u7136\u540e\u6309\u7167\u4e24\u4e2a\u5c0f\u6570\u7ec4\u7684\u6570\u636e\u5927\u5c0f\u7ed9\u6392\u6210\u5927\u6570\u7ec4\uff0c\u6700\u540e\u6392\u5e8f\u6210\u529f\u3002\u5176\u4e2d\u5b9a\u4e49\u4e24\u4e2a\u6307\u9488i\u548cj\uff0ci\u4ece\u524d\u534a\u8fb9\u5f00\u59cb\u627e\uff0cj\u4ece\u540e\u534a\u8fb9\u5f00\u59cb\u627e\uff0c\u7136\u540e\u6309\u7167\u5927\u5c0f\u53bb\u5e76\u3002\u6c42\u9006\u5e8f\u5bf9\u7684\u8fc7\u7a0b\u5c31\u5728\u6392\u5e8f\u7684\u8fc7\u7a0b\u5185\uff0c\u5728\u5408\u5e76\u7684\u65f6\u5019\u5982\u679c\u53d1\u73b0\u524d\u9762\u7684\u6570\u5b57\u5927\u4e8e\u540e\u9762\u7684\u6570\u5b57\uff0c\u90a3\u4e48\u5c31\u53d1\u73b0\u4e86\u9006\u5e8f\u5bf9\u3002\n\n...\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <string>\n#include <cmath>\n#include <algorithm>\n#include <cstdlib>\n#include <set>\n#include <map>\n#include <vector>\n#include <queue>\nusing namespace std;\nint a[1000010],b[1000010];\nint ans=0;\nint n;\nvoid merge(int s,int t)//\u5f52\u5e76\u6392\u5e8f\u51fd\u6570 \u3002 \n{\n    if(s==t)return;//\u5206\u4e0d\u4e86\u5c31\u522b\u5f3a\u884c\u5206\u4e86 \u3002 \n    int mid=s+t>>1;//\u5176\u5b9e\u5c31\u662f\u9664\u4ee52\u7684\u610f\u601d\uff0c\u542c\u8bf4\u4f4d\u8fd0\u7b97\u6bd4\u8f83\u5feb\u5c31\u7528\u4e86\u3002 \n    merge(s,mid);//\u8fd8\u6ca1\u5206\u5b8c\uff0c\u7ee7\u7eed\u5206\uff0c\u8fd9\u91cc\u6709\u4e00\u70b9\u50cf\u4e8c\u5206\u7684\u6837\u5b50\u3002 \n    merge(mid+1,t);    \n    int i=s,j=mid+1;//\u4e24\u4e2a\u6307\u9488\u4ece\u4e24\u4e2a\u6570\u96c6\u7684\u7b2c\u4e00\u4e2a\u5f00\u59cb\u6307\uff08\u867d\u7136\u8fd9\u91cc\u6ca1\u7528\u6307\u9488\uff0c\u4f46\u662f\u548c\u6307\u9488\u5f02\u66f2\u540c\u5de5\uff09\u3002 \n    int p=s-1;//\u8bb0\u5f55\u6392\u597d\u7684\u6570 \u3002 \n    while(i<=mid&&j<=t)//\u6307\u9488\u4e0d\u80fd\u8d85\u51fa\u8303\u56f4\u54e6\uff08i\u4e00\u76f4\u5728\u524d\u4e00\u534a\uff0cj\u5728\u540e\u4e00\u534a\uff09 \n    {\n        if(a[i]<=a[j])//\u8fd9\u91cc\u662f\u6309\u7167\u4ece\u5c0f\u5230\u5927\u6392\uff08\u56e0\u4e3a\u8981\u6c42\u9006\u5e8f\u5bf9\uff09\uff0c\u6240\u4ee5\u662f\u5c0f\u4e8e\u7b49\u4e8e\u3002 \n        {\n            b[++p]=a[i];//\u628a\u8fd9\u4e2a\u6570\u653e\u5230\u5927\u96c6\u5408\u91cc\u9762\uff08\u5f52\u5e76\u4e2d\u7684\u5e76\uff09\u3002 \n            i++;//\u8fd9\u4e2a\u6570\u6392\u5b8c\u4e86\uff0c\u53bb\u770b\u4e0b\u4e00\u4e2a\u6570\u3002 \n        }\n        else\n        {\n            b[++p]=a[j];//\u5982\u679c\u540e\u4e00\u534a\u7684\u8fd9\u4e2a\u6570\u6bd4\u524d\u4e00\u534a\u7684\u6570\u5927\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u5148\u8fdb\u5927\u96c6\u5408\u3002 \n            j++;\n            ans+=mid+1-i;//\u6c42\u9006\u5e8f\u5bf9\u3002 \n        }\n    }\n    while(j<=t)//\u5982\u679c\u4e00\u534a\u7684\u6570\u5df2\u7ecf\u6392\u5b8c\u4e86\uff0c\u5269\u4e0b\u7684\u6570\u53ea\u8981\u4e56\u4e56\u8ddf\u4e0a\u5c31\u597d\u4e86\u3002 \n    {\n        b[++p]=a[j];\n        j++;\n    }\n    while(i<=mid)\n    {\n        b[++p]=a[i];\n        i++; \n    }\n    for(int i=s;i<=t;i++)//\u6bcf\u6b21\u6392\u5b8c\u8bb0\u5f97\u66f4\u65b0\u3002 \n    a[i]=b[i];    \n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    scanf(\"%d\",&a[i]);\n    merge(1,n);\n    /*for(int i=1;i<=n;i++)\n    cout<<b[i]<<\" \";\n    cout<<endl;\n```\n\u8fd9\u4e00\u90e8\u5206\u662f\u8f93\u51fa\u6392\u5e8f\u7ed3\u679c\u7684\uff0c\u5728\u8fd9\u91cc\u53ea\u8981\u6c42\u6c42\u9006\u5e8f\u5bf9\uff0c\u6240\u4ee5\u5c31\u4e0d\u8981\u8fd9\u4e00\u5757\u4e86\\*/\n    printf(\"%d\",ans);\n\n    return 0;\n\n}\n...",
        "postTime": 1504001130,
        "uid": 47345,
        "name": "H2O3",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "###**\u6700\u8fd1\u5728\u7ec3\u4e60\u6811\u72b6\u6570\u7ec4\uff0c\u6240\u4ee5\u5c31\u4e0d\u8bf4\u5feb(gui)\u6392(bing)\u7684\u65b9\u6cd5\u4e86**\n\n\u5148\u5bf9\u8bfb\u5165\u7684\u6570\u5217\u8fdb\u884c\u4e00\u6b21\u79bb\u6563\u5316\u64cd\u4f5c\uff0c\u63a5\u4e0b\u6765\u6811\u72b6\u6570\u7ec4\u7684\u64cd\u4f5c\u4f1a\u65b9\u4fbf\u4e9b\u3002\n\n\u7136\u540e\u5c31\u662f\u6811\u72b6\u6570\u7ec4\u7684\u5e38\u89c4\u64cd\u4f5c\u4e86\n\n\u4e0d\u591abb\uff0c\n\n\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\nvar\n  num,a,b,c:array[0..40001]of longint;\n  n,i,j:longint;\n  ans:int64;\nprocedure kp(l,r:longint);\nvar\n  i,j,mid:longint;\n  begin\n    i:=l;\n    j:=r;\n    mid:=a[(l+r) >> 1];\n    repeat\n      while a[i]<mid do inc(i);\n      while a[j]>mid do dec(j);\n      if i<=j then \n        begin\n          a[0]:=a[i];a[i]:=a[j];a[j]:=a[0];\n          num[0]:=num[i];num[i]:=num[j];num[j]:=num[0];\n          inc(i);\n          dec(j);\n        end;\n    until i>j;\n    if i<r then kp(i,r);\n    if l<j then kp(l,j);\n  end;\nfunction lowbit(x:longint):longint;\nbegin\n  exit(x and (-x));\nend;\nprocedure add(x:longint);//\u63d2\u5165\nbegin\n  while x<=n do \n    begin\n      inc(c[x]);\n      x:=x+lowbit(x);\n    end;\nend;\nfunction sum(x:longint):longint;//\u6c42\u548c\nbegin\n  sum:=0;\n  while x>0 do \n    begin\n      inc(sum,c[x]);\n      x:=x-lowbit(x);\n    end;\nend;\nbegin \n  readln(n);\n  for i:=1 to n do \n    begin\n      read(a[i]);\n      num[i]:=i;\n    end;\n  b:=a;\n  kp(1,n);\n  j:=0;\n  a[0]:=-1;\n  for i:=1 to n do\n    if a[i]<>a[i-1] then \n      begin\n        inc(j);\n        b[num[i]]:=j;\n      end\n      else b[num[i]]:=j;//\u79bb\u6563\u5316\n  for i:=n downto 1 do //\u6ce8\u610f\u662fdownto\uff0c\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u8fd9\u6837\uff0c\u8bf7\u81ea\u5df1\u9886\u4f1a\n    begin\n      inc(ans,sum(b[i]));\n      add(b[i]);\n    end;//\u6811\u72b6\u6570\u7ec4\u7684\u5e38\u89c4\u64cd\u4f5c\n  write(ans);\nend.\n```",
        "postTime": 1502514551,
        "uid": 25355,
        "name": "\u590f\u8272\u796d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "~~**P\u515a\u7684\u798f\u5229\u5566**~~\n### \u770b\u5230\u697c\u4e0b\u7684dalao\u4eec\u7684\u6811\u72b6\u6570\u7ec4\u3002\u5b9e\u6d4b\u8c8c\u4f3c\u8fc7\u4e0d\u4e86\u53ea\u670930\u3002\u3002\u3002\u8ba9\u6211\u8fd9\u4e2a\u849f\u84bb\u6765\u4e00\u53d1\u6ee1\u5206\u7684\u6811\u72b6\u6570\u7ec4\u3002\n#### \u5f52\u5e76\u5176\u5b83\u7684dalao\u4eec\u5df2\u7ecf\u8bb2\u7684\u5f88\u6e05\u695a\u4e86\uff0c\u6211\u5c31\u4e0d\u518d\u8d58\u8ff0\u4e86\u3002\n## \u63a5\u4e0b\u6765\u6b65\u5165\u6b63\u9898\u5566\n\u65b9\u4fbf\u8d77\u89c1\uff0c\u6211\u4eec\u8bbef[x]\u4e3ax\u8fd9\u4e2a\u6570\u51fa\u73b0\u8fc7\u591a\u5c11\u6b21\u4e86\u3002\n\n\u7136\u540e\u6211\u4eec**\u5012\u5e8f**\u626b\u4e00\u904d\u3002\uff08\u6b63\u5e8f\u626b\u7684\u8bdd\u5c31\u662f\u627ei<j\u4e14ai<aj\u7684\u6570\u91cf\uff09\u63a5\u4e0b\u6765\u662f\u6a21\u62df\u8fc7\u7a0b\n\n\u56e0\u4e3a\u6700\u540e\u4e00\u4e2a\u6570\u662fan\uff0c\u6240\u4ee5\u5148\u628a\u7b54\u6848\u52a0\u4e0af[1]+f[2]+f[3]+\u2026\u2026+f[an -1]\uff0c\n\u7136\u540ef[an]\u7684\u503c+1\n\n\u5012\u6570\u7b2c\u4e8c\u4e2a\u6570\u662fa(n-1)\uff0c\u6240\u4ee5\u5148\u628a\u7b54\u6848\u52a0\u4e0af[1]+f[2]+f[3]+\u2026\u2026+f[a(n-1)-1]\uff0c\n\u7136\u540ef[a(n-1)]\u7684\u503c+1\n\n\u4ee5\u6b64\u7c7b\u63a8\u3002\u3002\u3002\u3002\n\n\u7136\u540e\u90a3\u4e2a\u524d\u7f00\u548c\u7528\u6811\u72b6\u6570\u7ec4\u4f18\u5316\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\n\n\u4e3e\u4e2a\u5c0f\u6817\u5b50\uff1a\n\n\u6bd4\u5982\u8bf4999 99 9999\u8fd9\u4e09\u4e2a\u6570\n\n\u901a\u8fc7\u79bb\u6563\u5316\u4e4b\u540e\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u770b\u4f5c2 1 3\n\n\u5148\u626b\u52303\uff0cf[3]+1,ans=0;\n\n\u7136\u540e\u626b1\uff0cf[1]+1,ans=0\n\n\u7136\u540e\u626b\u52302,f[2]+1,ans\u52a0\u4e0af[1]\u7684\u503c\u4e5f\u5c31\u662fans=1\n\n#### ~~\u7136\u540e\u5c31\u5927\u529f\u544a\u6210\u4e86\u5566~~\n\nPS\uff1a\n\u7531\u4e8e\u8fd9\u4e2a\u6570\u636e\u8c8c\u4f3c\u6709\u70b9\u6bd2\u7624\uff0c\u540c\u7ea7[dalao](https://www.luogu.org/space/show?uid=29575)\u544a\u8bc9\u6211\u4f1a\u6709\u91cd\u590d\u7684\u6570\u3002\u3002\u3002~~\u8c8c\u4f3c\u697c\u4e0b\u7684dalao\u4eec\u90fd\u88ab\u8fd9\u4e2a\u5361\u4e86\u3002~~\n\n\u79bb\u6563\u5316\u5904\u7406\u91cd\u590d\u7684\u6570\u5927\u5bb6\u5e94\u8be5\u90fd\u4f1a\u3002\u6bd5\u7adf\u6253\u6811\u72b6\u6570\u7ec4\u7684\u90fd\u662f\u5de8\u4f6c\u5566~~(\u6211\u592a\u83dc\u4e86)~~\n\n~~\u5904\u7406\u91cd\u590d\u7684\u6570~~(\u5de8\u4f6c\u8bf7\u65e0\u89c6)\n```\n  sort(1,n); //\u5148\u6309\u539f\u6570\u7ec4\u5927\u5c0f\u6392\u5e8f\n  for i:=1 to n do\n   if a[i]<>a[i-1] then\n    c[i]:=c[i-1]+1\n   else\n    c[i]:=c[i-1];\n  a:=c;\n  ssort(1,n); //\u518d\u6309\u4e0b\u6807\u6392\u5e8f\uff0c\u6765\u81eap\u515a\u7684\u6de1\u6de1\u7684\u5fe7\u4f24\n```\n\u8d34\u4e00\u4e2a\u4e11\u964b\u7684\u4ee3\u7801%%%[dalao](https://www.luogu.org/space/show?uid=29575)\n```\nvar n,i:longint;\n    ans:int64;\n    a,b,c,s:array[0..1000001] of int64;\nprocedure sort(l,r:int64);\u3000\u3000//\u5feb\u6392\u5566\u3002\u3002\u3002\nvar i,j,x,t:int64;\nbegin\n  i:=l;j:=r;x:=a[(l+r) div 2];\n  repeat\n   while a[i]<x do\n    inc(i);\n   while x<a[j] do\n    dec(j);\n   if i<=j then\n    begin\n     t:=a[i];a[i]:=a[j];a[j]:=t;\n     t:=b[i];b[i]:=b[j];b[j]:=t;\n     inc(i);dec(j);\n    end;\n  until i>j;\n  if l<j then\n   sort(l,j);\n  if i<r then\n   sort(i,r);\nend;\nprocedure ssort(l,r:int64);\u3000//\u5feb\u6392\u5566\u3002\u3002\u3002\nvar i,j,x,t:int64;\nbegin\n  i:=l;j:=r;x:=b[(l+r) div 2];\n  repeat\n   while b[i]<x do\n    inc(i);\n   while x<b[j] do\n    dec(j);\n   if i<=j then\n    begin\n     t:=a[i];a[i]:=a[j];a[j]:=t;\n     t:=b[i];b[i]:=b[j];b[j]:=t;\n     inc(i);dec(j);\n    end;\n  until i>j;\n  if l<j then\n   ssort(l,j);\n  if i<r then\n   ssort(i,r);\nend;\nfunction lowbit(x:int64):int64;\u3000//\u6811\u72b6\u6570\u7ec4\u57fa\u672c\u64cd\u4f5c\u5566\nbegin\n  exit(x and -x);\nend;\nprocedure add(x,k:int64);\u3000//\u6811\u72b6\u6570\u7ec4\u57fa\u672c\u64cd\u4f5c\u5566\nbegin\n  while x<=n do\n   begin\n    s[x]:=s[x]+k;\n    x:=x+lowbit(x);\n   end;\nend;\nfunction ss(x:int64):int64;\u3000//\u6811\u72b6\u6570\u7ec4\u57fa\u672c\u64cd\u4f5c\u5566\nvar now:int64;\nbegin\n  now:=0;\n  while x>0 do\n   begin\n    now:=now+s[x];\n    x:=x-lowbit(x);\n   end;\n  exit(now);\nend;\nbegin\n  read(n);\n  for i:=1 to n do\n   begin\n    read(a[i]);\n    b[i]:=i;\n   end;\n  sort(1,n);\n  for i:=1 to n do\n   if a[i]<>a[i-1] then\n    c[i]:=c[i-1]+1\n   else\n    c[i]:=c[i-1];\n  a:=c;\n  ssort(1,n);\n  for i:=n downto 1 do\u3000//\u5f00\u59cb\u7edf\u8ba1\u7b54\u6848\u5566\n   begin\n    add(a[i],1);\n    ans:=ans+ss(a[i]-1);\n   end;\n  writeln(ans);\nend.\n```\n\u6700\u540e\u518d%%%[dalao](https://www.luogu.org/space/show?uid=29575)\uff0c\u611f\u8c22dalao\u7684\u5e2e\u52a9\u4e0e\u542f\u53d1",
        "postTime": 1536588817,
        "uid": 22913,
        "name": "Dawn_Chase",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u5218\u6c5d\u4f73\u7d2b\u4e66\u4e0a\u7684\u65b9\u6cd5\uff1a\n\n\n```cpp\n/*\nProblem: \u6d1b\u8c37 P1908 \u9006\u5e8f\u5bf9\nLanguage: C++\nWriter: Colin\nAbout: \u5206\u6cbb\u3001\u5f52\u5e76\u6392\u5e8f\n*/\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <string>\n#include <algorithm>\n\nusing namespace std;\n\n#define ll long long\n\nint ans = 0;\nvoid merge_sort(int *a, int x, int y, int *t)\n{\n    if (y - x > 1)\n    {\n        //\u5206\u6cbb\u4e09\u6b65\u6cd5\uff1a\n        //\u4e00\u3001\u5212\u5206\n        int mid = x + (y - x) / 2;\n        int p = x,\n            q = mid,\n            i = x;\n        //\u4e8c\u3001\u9012\u5f52\u6c42\u89e3\n        merge_sort(a, x, mid, t);\n        merge_sort(a, mid, y, t);\n        //\u4e09\u3001\u5408\u5e76\n        while (p < mid || q < y)\n        {\n            if (q >= y || p < mid && a[p] <= a[q])\n                t[i++] = a[p++];\n            else\n            {\n                t[i++] = a[q++];\n                /*\u7edf\u8ba1\u5de6\u8fb9\u5927\u4e8e\u53f3\u8fb9\u7684\uff1a\n                \u5728\u533a\u95f4[x, mid)\u4e2d\uff0c\u5171\u6709\u5143\u7d20(mid - x)\u4e2a\uff0c\u5176\u4e2d\u8fdb\u5165\u4e0a\u4e2a\u6761\u4ef6\u7684\u662f(p - x)\u4e2a\n                \u76f8\u51cf\u5f97\u5230(mid - p)\u4e2a\n                */\n                ans += (mid - p);\n            }\n        }\n\n        for (i = x; i < y; i++)\n            a[i] = t[i];\n    }\n}\n\nint main()\n{\n    int a[100000] = { 0 },\n        t[100000] = { 0 };\n    int n;\n    cin >> n;\n    for (int i = 1; i <= n; i++)\n        cin >> a[i];\n\n    merge_sort(a, 1, n + 1, t);\n\n    cout << ans << endl;\n\n    return 0;\n}\n```",
        "postTime": 1500632515,
        "uid": 23886,
        "name": "enjoycolin",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    },
    {
        "content": "\u4e8c\u5206\u3002\u3002\u3002\n\n\u6b64\u9898\u5c24\u4e3a\u7b80\u5355\u3002\u4e0d\u591a\u8bf4\uff0c\u81ea\u5df1\u770b\u7a0b\u5e8f\u3002\u3002\u3002\u3002\u3002\u3002\n\n\n\n```cpp\n============================================================\nconst\n        maxn=100000;\nvar\n        a,b:array[1..maxn] of longint;\n        n,i:longint;\n        ans:int64;\nfunction count(l,r:longint):longint;\nvar\n        m,i,j,k:longint;\nbegin\n        if l=r then exit;\n        m:=(l+r) shr 1;\n        count(l,m);count(m+1,r);  //\u505a\u5de6\u53f3\n        i:=l;j:=m+1;k:=l-1;//I \u5934\u6307\u9488 j \u5c3e\u6307\u9488\n        while (i<=m)and(j<=r) do//\u82e5\u5728\u8303\u56f4\u5185\n        begin\n                while (a[i]<=a[j])and(i<=m) do\n                begin\n                        inc(k);\n                        b[k]:=a[i];\n                        if j<=r then inc(ans,j-m-1);//\u7d2f\u52a0\n                        inc(i);\n                end;\n                while (a[i]>a[j])and(j<=r) do\n                begin\n                        inc(k);\n                        b[k]:=a[j];\n                        inc(j);\n                end;\n        end;\n        while i<=m do\n        begin\n                inc(k);\n                b[k]:=a[i];\n                inc(ans,j-m-1);\n                inc(i);\n        end;\n        for i:=l to j-1 do a[i]:=b[i];\nend;\nbegin\n        readln(n);\n        for i:=1 to n do read(a[i]);//\u8bfb\u5165\n        count(1,n);//\u4e8c\u5206\n        writeln(ans);\nend.\n========================================================\n```",
        "postTime": 1478168061,
        "uid": 24997,
        "name": "cenbinbin",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1908 \u3010\u9006\u5e8f\u5bf9\u3011"
    }
]