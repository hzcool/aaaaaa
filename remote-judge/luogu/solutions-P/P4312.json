[
    {
        "content": "~~\u7ed9\u51faq\u4e2a\u64cd\u4f5c\uff0c\u8981\u6c42\u5728\u7ebf\u5904\u7406\u6240\u6709\u64cd\u4f5c~~\n\nemm....\u5f3a\u5236\u5728\u7ebf\u548b\u505a\u554a\uff0c\u7a9d\u4e0d\u4f1aLCT\u548b\u529e\u554aqwq\n\n\u7136\u800c\u597d\u50cf\u5e76\u6ca1\u6709\u5f3a\u5236\u5728\u7ebf\uff1f\uff1f\n\n\u6240\u4ee5\u79bb\u7ebf\u5efa\u6811\uff0c\u7528\u6811\u5256\u5957\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\n\nLink\u64cd\u4f5c\u548b\u529e\uff1f\n\n\u76f4\u63a5\u5e76\u67e5\u96c6\u5c31\u597d\u4e86~~\u53cd\u6b63\u6ca1\u6709Cut\u64cd\u4f5c\u6ce5\u840c\u7528\u4ec0\u4e48LCT~~qwq\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(nlog_{2}^{2}n)$ \u6bd4LCT\u6162\u4e00\u4e2a $log$\n\n\u7136\u800c\u7531\u4e8e\u6811\u5256\u548c\u6811\u72b6\u6570\u7ec4\u7684\u6781\u5c0f\u5e38\u6570\uff0c\u8fd9\u4efd\u4ee3\u7801\u8dd1\u5f97\u98de\u5feb\uff0c\u7a33\u7a33\u7684\u62ff\u5230\u4e86Rank1\n\n\u4ee3\u7801\uff1a(\u6bd4LCT\u597d\u5199\u591a\u4e86qwq)\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=30001;\nchar s[9];\nstruct E{int u,nxt;}e[N*2];  //  \u65e0\u5411\u8fb9*2\nint num,fa[N],siz[N],dep[N],ord[N],son[N],top[N];\nint n,a[N],f[N],t[N],p[N],z[N*10],x[N*10],y[N*10];\nint find(int x){return f[x]==x?x:f[x]=find(f[x]);}  //  \u5e76\u67e5\u96c6\ninline void add(int x,int y){e[++num]=(E){y,p[x]},p[x]=num;}\ninline void upd(int x,int y){for(int i=x;i<=n;i+=i&-i) t[i]+=y;}\ninline int sum(int x){int s=0;for(int i=x;i;i-=i&-i) s+=t[i];return s;}  //  \u6811\u72b6\u6570\u7ec4\nvoid dfs1(int s){\n    int sz=0;\n    siz[s]=1;\n    for(int i=p[s];i;i=e[i].nxt){\n        if(e[i].u==fa[s]) continue;\n        int u=e[i].u;\n        fa[u]=s,dep[u]=dep[s]+1,dfs1(u),siz[s]+=siz[u];\n        if(siz[u]>sz) sz=siz[u],son[s]=u;\n    }\n}\nvoid dfs2(int s){\n    ord[s]=++num;\n    top[s]=son[fa[s]]!=s?s:top[fa[s]];\n    if(son[s]) dfs2(son[s]);\n    for(int i=p[s];i;i=e[i].nxt)\n        if(e[i].u!=son[s]&&e[i].u!=fa[s]) dfs2(e[i].u);\n}\nint main(){\n    int m;\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++) scanf(\"%d\",&a[i]),f[i]=i;\n    scanf(\"%d\",&m);\n    for(int i=1;i<=m;i++){\n        scanf(\"%s%d%d\",s,&x[i],&y[i]),z[i]=s[0]=='p'?1:s[0]=='e'?2:0;\n        if(z[i]==2&&find(x[i])!=find(y[i])) z[i]=4;\n        if(!z[i]&&find(x[i])!=find(y[i]))\n            add(x[i],y[i]),add(y[i],x[i]),f[f[x[i]]]=f[y[i]],z[i]=3;  //  \u79bb\u7ebf\u5efa\u56fe\n    }\n    num=0;\n    for(int i=1;i<=n;i++) if(!fa[i]) dfs1(i);\n    for(int i=1;i<=n;i++){if(!ord[i]) dfs2(i);upd(ord[i],a[i]);}  //  \u6811\u5256\u9884\u5904\u7406\n    for(int i=1;i<=m;i++) if(!z[i]) printf(\"no\\n\");\n    else if(z[i]==3) printf(\"yes\\n\");\n    else if(z[i]==4) printf(\"impossible\\n\");\n    else if(z[i]==1) upd(ord[x[i]],y[i]-sum(ord[x[i]])+sum(ord[x[i]]-1));  //  \u628a x \u53d8\u4e3a y \u76f8\u5f53\u4e8e\u52a0 y-x\n    else{\n        int X=x[i],Y=y[i],s=0;\n        while(top[X]!=top[Y]){\n            if(dep[top[X]]<dep[top[Y]]) swap(X,Y);\n            s+=sum(ord[X])-sum(ord[top[X]]-1),X=fa[top[X]];\n        }\n        if(ord[X]>ord[Y]) swap(X,Y);\n        printf(\"%d\\n\",s+sum(ord[Y])-sum(ord[X]-1));\n    }\n    return 0;\n}\n```",
        "postTime": 1536017609,
        "uid": 100018,
        "name": "\u304b\u306a\u3067",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4312 \u3010[COCI 2009] OTOCI / \u6781\u5730\u65c5\u884c\u793e\u3011"
    },
    {
        "content": "$LCT\\text{}$\u771f\u597d\u7528$qwq$\n\n\u5148\u8bf4\u8bf4\u600e\u4e48\u7528$LCT$\u5224\u65ad\u8fde\u901a\u6027\u5427\n\n\u5176\u5b9e\u76f4\u63a5$findroot(x)==findroot(y)$\u5c31\u597d\u4e86\n\n\u7136\u540e\u8fd9\u9053\u9898\u5c31\u5f88\u677f\u5b50\u4e86$qwq$\n\n\u5176\u5b9e\u5927\u5bb6\u6709\u5174\u8da3\u53ef\u4ee5\u53bb\u6c34\u4e00\u4e0b$[SDOI2008]$\u6d1e\u7a74\u52d8\u6d4b,$LCT$\u5224\u8fde\u901a\u6027\u88f8\u9898\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nstruct node{\n\tint son[2],fa,sum,tag;\n}g[1000000];\nint a[1000000],n,m,sta[1000000];\ninline int read(){\n\tregister int x=0,f=1;char ch=getchar();\n\twhile (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n\twhile (isdigit(ch)){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();}\n\treturn x*f;\n}\ninline void pushup(int rt){\n\tg[rt].sum=g[g[rt].son[0]].sum+g[g[rt].son[1]].sum+a[rt];\n}\ninline void reverse(int rt){\n\tswap(g[rt].son[1],g[rt].son[0]);\n\tg[rt].tag^=1;\n}\ninline void pushdown(int rt){\n\tif (g[rt].tag){\n\t\tif (g[rt].son[0]) reverse(g[rt].son[0]);\n\t\tif (g[rt].son[1]) reverse(g[rt].son[1]);\n\t\tg[rt].tag=0;\n\t}\n}\ninline bool isrt(int rt){\n\treturn (g[g[rt].fa].son[1]!=rt&&g[g[rt].fa].son[0]!=rt);\n}\ninline bool wtson(int rt){\n\tif (g[g[rt].fa].son[0]==rt) return 0; return 1;\n}\ninline void connect(int rt,int fa,int wht){\n\tif (rt) g[rt].fa=fa;g[fa].son[wht]=rt;\n}\ninline void rotate(int rt){\n\tregister int fa=g[rt].fa,fafa=g[fa].fa,wht=wtson(rt),whtfa=wtson(fa),son=g[rt].son[1^wht];\n\tconnect(son,fa,wht);g[rt].fa=fafa;\n\tif (fafa&&!isrt(fa)) g[fafa].son[whtfa]=rt;\n\tconnect(fa,rt,1^wht);pushup(fa);\n}\ninline void splay(int rt){\n\tregister int top=1;sta[top]=rt;\n\tfor (register int i=rt;!isrt(i);i=g[i].fa) sta[++top]=g[i].fa;\n\tfor (register int i=top;i>=1;i--) pushdown(sta[i]);\n\twhile (!isrt(rt)){\n\t\tregister int fa=g[rt].fa;\n\t\tif (isrt(fa)) rotate(rt);\n\t\telse if (wtson(fa)==wtson(rt)) rotate(fa),rotate(rt);\n\t\telse rotate(rt),rotate(rt);\n\t}\t\n\tpushup(rt);\n}\ninline void access(int rt){\n\tfor (register int fa=0;rt;rt=g[fa=rt].fa){\n\t\tsplay(rt);g[rt].son[1]=fa;pushup(rt);\n\t}\n}\ninline void makert(int rt){\n\taccess(rt);splay(rt);reverse(rt);\n}\ninline int findrt(int rt){\n\taccess(rt);splay(rt);\n\twhile (g[rt].son[0]){\n\t\tpushdown(rt);rt=g[rt].son[0];\n\t}\n\treturn rt;\n}\ninline void split(int x,int y){\n\tmakert(x);access(y);splay(y);\n}\ninline void link(int x,int y){\n\tmakert(x);\n\tif (findrt(x)!=findrt(y)) g[x].fa=y;\n}\ninline bool iscnt(int x,int y){\n\treturn (findrt(x)==findrt(y));//\u5224\u8fde\u901a\u6027\n}\ninline int query(int x,int y){\n    split(x,y);return g[y].sum;\n}\ninline void change(int rt,int w){\n    splay(rt);a[rt]=w;pushup(rt);\n}\nint main(){\n\tn=read();\n\tfor (register int i=1;i<=n;i++){\n\t\ta[i]=read();\n\t}\n\tm=read();\n\twhile (m--){\n\t\tchar czx[112];register int x,y;\n\t\tscanf(\"%s\",czx);x=read();y=read();\n\t\tswitch (czx[0]){\n\t\t\tcase 'b':{\n\t\t\t\tbool xj=iscnt(x,y);\n\t\t\t\tif (xj) printf(\"no\\n\");\n\t\t\t\telse{printf(\"yes\\n\");link(x,y);}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'p':{change(x,y);break;}\n\t\t\tcase 'e':{\n\t\t\t\tbool xj=iscnt(x,y);\n\t\t\t\tif (!xj) printf(\"impossible\\n\");\n\t\t\t\telse{printf(\"%d\\n\",query(x,y));}break;\n\t\t\t}\n\t\t}\n\t}\n}\n```",
        "postTime": 1542275848,
        "uid": 20309,
        "name": "Fading",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4312 \u3010[COCI 2009] OTOCI / \u6781\u5730\u65c5\u884c\u793e\u3011"
    },
    {
        "content": "  \u535a\u5ba2\u7a7a\u7a7a\u7684\u597d\u65e0\u804a\u554a=-=\u6c34\u4e00\u6ce2\u9898\u89e3\n  \n  \u8fd9\u9898\u5f88\u660e\u663e\u662fLCT,\u4f46Splay\u533a\u95f4\u7ffb\u8f6c\u90fd\u4e0d\u4f1a\u7684\u6211\u600e\u4e48\u53ef\u80fd\u4f1aLCT\u5462...\u4e8e\u662f\u6211\u5e76\u6ca1\u6709\u8003\u8651\u5728\u7ebf,\u800c\u662f\u8003\u8651\u79bb\u7ebf\u505a\u6811\u5256,\u597d\u5728\u672c\u9898\u8054\u901a\u7684\u4e24\u70b9\u53ea\u6709\u4e00\u6761\u8def\u5f84,\u591a\u5efa\u8fd8\u4e0d\u884c,\u7f8e\u54c9\u7f8e\u54c9...\n  \n  \u6811\u5256\u5f53\u7136\u662f\u8981\u9884\u5904\u7406\u7684\u4e86,\u90a3\u6211\u4eec\u5c31\u5f97\u8fde\u68f5\u6811\u51fa\u6765,\u6240\u4ee5\u9996\u5148\u9884\u5904\u7406\u6240\u6709bridge\u64cd\u4f5c(\u6ce8:\u8fd9\u64cd\u4f5c\u8981\u7528\u5230\u5e76\u67e5\u96c6),\u7136\u540e\u5b58\u4e00\u4e0b\u6240\u6709\u8bfb\u5165\u7684\u6570\u636e,\u800c\u4e14\u6b64\u65f6\u4e0d\u80fd\u8f93\u51fabridge\u64cd\u4f5c\u7684yes\u548cno,\u56e0\u4e3a\u53e6\u5916\u4e24\u79cd\u8be2\u95ee\u53ef\u80fd\u5939\u5728\u4e2d\u95f4...\n  \n  \u9884\u5904\u7406\u5b8c\u4e86,\u4e24\u4e2adfs\u5efa\u51fa\u6765..\u6ce8\u610f\u672c\u9898\u6ca1\u6709\u4fdd\u8bc1\u8fde\u8d77\u6765\u662f\u4e00\u9897\u6811,\u53ef\u80fd\u662f\u8bb8\u591a\u8054\u901a\u5757,\u8fd9\u4e2a\u662f\u4eceP4858\u7684\u9898\u89e3\u90a3\u5f97\u6765\u76842333,\u6240\u4ee5\u6bcf\u4e2a\u8054\u901a\u5757\u5f04\u4e00\u6b21\u4e24\u4e2adfs\n  \n  \u5f04\u5b8c\u4ee5\u540e\u5c31\u53ef\u4ee5\u76f4\u63a5\u4e71\u641e\u4e86\u561b,\u8f6c\u5728\u7ebf\u5904\u7406\u95ee\u9898,\u5e76\u67e5\u96c6\u5224\u65ad\u8054\u901a,\u7136\u540e\u66f4\u6539\u548c\u67e5\u8be2\u90fd\u662f\u88f8\u7684\u6811\u5256,\u4e8e\u662f\u5c31\u5f88\u6109\u5feb\u5730\u8fc7\u4e86\n  \n  rank1\u7684167ms\u600e\u4e48\u8dd1\u51fa\u6765\u7684\u8d85\u4f69\u670d...\u4e0b\u653e\u4ee3\u7801(\u7801\u98ce\u8fd8\u662f\u53ef\u4ee5\u7684\u5427..)\n\n```cpp\n#include <algorithm>\n#include <cstdio>\n#define ten(a) ((a << (1 << 1 | 1)) + (a << 1))\n#define asc ((1 << 1 | 1) << (1 << (1 << 1)))\nusing namespace std;\nconst int MAXN = 30010;\nconst int MAXM = 300010;\nstruct edge {\n    int next,to;\n} e[MAXN << 1];\nstruct input {\n    char mode;\n    int x,y;\n} r[MAXM];\nint tr[MAXN << 3], first[MAXN], vis[MAXN], s[MAXN], v[MAXN], n, tot, size;\nint fa[MAXN], son[MAXN], dep[MAXN], siz[MAXN], top[MAXN], id[MAXN], oid[MAXN];\nint f(int p) {return p == s[p] ? p : s[p] = f(s[p]);}\ninline int re()\n{\n    char q = getchar();\n    int x = 0;\n    while (q < '0' || q > '9') q = getchar();\n    while ('0' <= q && q <= '9') x = ten(x) + q - asc, q = getchar();\n    return x;\n}\ninline char rd()\n{\n    char q = getchar();\n    while (q < 'a' || q > 'z') q = getchar();\n    return q;\n}\nvoid add(int x, int y)\n{\n    e[++tot].next = first[x];\n    e[tot].to = y;\n    first[x] = tot;\n}\nvoid dfs1(int p)\n{\n    ++siz[p];\n    dep[p] = dep[fa[p]] + 1;\n    for (int a = first[p], b = e[a].to ; a ; a = e[a].next, b = e[a].to)\n        if (b == fa[p]) continue; else {\n            fa[b] = p;\n            dfs1(b);\n            siz[p] += siz[b];\n            if (siz[b] > siz[son[p]]) son[p] = b;\n        }\n}\nvoid dfs2(int p, int f)\n{\n    top[p] = f;\n    id[p] = ++tot;\n    oid[tot] = p;\n    if (!son[p]) return;\n    dfs2(son[p],f);\n    for (int a = first[p], b = e[a].to ; a ; a = e[a].next, b = e[a].to)\n        if (b != son[p] && b != fa[p]) dfs2(b,b);\n}\nint build(int l, int r, int len)\n{\n    if (l == r) return tr[len] = v[oid[l]];\n    int mid = (l + r) >> 1;\n    tr[len] = build(l, mid, len << 1);\n    tr[len] += build(++mid, r, len << 1 | 1);\n    return tr[len];\n}\nint get(int l,int r,int len,int i,int j)\n{\n    if (i <= l && r <= j) return tr[len];\n    int mid = (l + r) >> 1,ans = 0;\n    if (i <= mid) ans += get(l, mid, len << 1, i, j);\n    if (mid < j) ans += get(++mid, r, len << 1 | 1, i, j);\n    return ans;\n}\nint out(int i,int j)\n{\n    int ans = 0;\n    while (top[i] != top[j])\n    {\n        if (dep[top[i]] < dep[top[j]]) swap(i, j);\n        ans += get(1, n, 1, id[top[i]], id[i]);\n        i = fa[top[i]];\n    }\n    if (dep[i] > dep[j]) swap(i, j);\n    return ans + get(1, n, 1, id[i], id[j]);\n}\nint update(int l,int r,int len,int i,int w)\n{\n    if (l == r) {\n        tr[len] = w;\n        return tr[len];\n    }\n    int mid = (l + r) >> 1;\n    if (i <= mid) update(l, mid, len << 1, i, w);\n    else update(++mid, r, len << 1 | 1, i, w);\n    tr[len] = tr[len << 1] + tr[len << 1 | 1];\n    return tr[len];\n}\nint main()\n{\n    int m, i, j;\n    n = re(); for (int a = 1 ; a <= n ; ++ a)\n    v[a] = re(), s[a] = a;\n    m = re();\n    while (m--) {\n        char q = rd();\n        i = re(),j = re();\n        if (q == 'b') {\n            int x = f(i);\n            int y = f(j);\n            if (x != y)\n            add(i,j),add(j,i),s[y] = x;\n        }\n        r[++size].mode = q;\n        r[size].x = i;\n        r[size].y = j;\n    }\n    tot = 0;\n    for (int a = 1,b = f(a) ; a <= n ; ++ a,b = f(a))\n        if (vis[b] & 1) continue;\n        else ++vis[b],dfs1(a),dfs2(a,a);\n    build(1,n,1);\n    for (int a = 1 ; a <= n ; ++ a) s[a] = a;\n    for (int a = 1 ; a <= size ; ++ a) {\n        i = r[a].x;\n        j = r[a].y;\n        if (r[a].mode == 'b') {\n            int x = f(i);\n            int y = f(j);\n            if (x != y) s[y] = x,printf(\"yes\\n\");\n            else printf(\"no\\n\");\n            continue;\n        } else if (r[a].mode == 'e') {\n            int x = f(i);\n            int y = f(j);\n            if (x != y) printf(\"impossible\\n\");\n            else printf(\"%d\\n\",out(i, j));\n        } else update(1, n, 1, id[i], j);\n    }\n    return 0;\n}\n```",
        "postTime": 1536934741,
        "uid": 72408,
        "name": "\u840c\u7530\u85b0\u5b50",
        "ccfLevel": 0,
        "title": "Luogu P4312 [COCI 2009] OTOCI / \u6781\u5730\u65c5\u884c\u793e"
    },
    {
        "content": "\u9898\u76ee\u5728\u8fd9\uff1a[\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P4312)\u3002\n\n\u633a\u88f8\u7684\u4e00\u9053LCT\u9898\u76ee\u3002\n\n+ bridge \u64cd\u4f5c\uff1a\u5148 check \u5224\u65ad\u8fde\u901a\u6027\uff0c\u518d\u8fdb\u884c link \u64cd\u4f5c\u3002\n\n+ penguins \u64cd\u4f5c\uff1a\u5148\u628a\u70b9 $x$ splaying \u5230\u6700\u9876\u4e0a\uff0c\u518d\u5bf9\u5b83\u8fdb\u884c\u4fee\u6539\u3002\u628a\u70b9 $x$ splaying \u662f\u56e0\u4e3a\u8981\u6d88\u9664\u5176\u4ed6\u8282\u70b9\u7684\u5f71\u54cd\u3002\u5982\u679c\u76f4\u63a5\u4fee\u6539\u7684\u8bdd\uff0c\u90a3\u4e48\u6240\u6709\u5728 $x$ \u4e0a\u9762\u7684\u8282\u70b9\u90fd\u8981\u8fdb\u884c\u4fee\u6539\u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u9ebb\u70e6\u7684\u4e8b\u60c5\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u628a\u5b83 splaying\uff0c\u90a3\u4e48\u5b83\u9876\u4e0a\u5c31\u6ca1\u6709\u8981\u8fdb\u884c\u4fee\u6539\u7684\u8282\u70b9\u4e86\u3002\n\n+ excursion \u64cd\u4f5c\uff1a\u5148 check \u5224\u65ad\u8fde\u901a\u6027\uff0c\u518d split \u628a $x$ \u5230 $y$ \u7684\u94fe\u62c9\u51fa\u6765\uff0c\u518d\u5bf9 $y$ \u67e5\u8be2\u6743\u503c\u548c\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230 $x$ \u5230 $y$ \u7684\u6743\u503c\u548c\u3002\n\n\u5982\u679c\u60f3\u8981\u8bd5\u8bd5\u5224\u65ad\u8fde\u901a\u6027\u7684\u9898\u76ee\u53ef\u4ee5\u53bb\u770b\u770b[\u8fd9\u9898](https://www.luogu.com.cn/problem/P2147)\u8fd8\u6709[\u8fd9\u9898](https://www.luogu.com.cn/problem/P3950)\u3002\n\n\u653e\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstring>\nusing namespace std;\nconst int N=1e6+10;\nstruct splay{\n\tint fa,son[2];\n\tint val;\n\tint sum;\n\tint rev;\n};\nsplay spl[N];\nstring s;\ninline bool check_root(int pos){\n\treturn spl[spl[pos].fa].son[0]!=pos&&spl[spl[pos].fa].son[1]!=pos;\n}\ninline int relation(int pos,int fa){\n\treturn spl[fa].son[1]==pos;\n}\ninline void connect(int pos,int fa,int son){\n\tspl[fa].son[son]=pos;\n\tspl[pos].fa=fa;\n}\ninline void pushup(int pos){\n\tint lson=spl[pos].son[0],rson=spl[pos].son[1];\n\tspl[pos].sum=spl[lson].sum+spl[rson].sum+spl[pos].val;\n}\ninline void pushdown(int pos){\n\tif(!spl[pos].rev)\n\t\treturn ;\n\tswap(spl[pos].son[0],spl[pos].son[1]);\n\tspl[spl[pos].son[0]].rev^=1;\n\tspl[spl[pos].son[1]].rev^=1;\n\tspl[pos].rev=0;\n}\ninline void pushall(int pos){\n\tif(!check_root(pos))\n\t\tpushall(spl[pos].fa);\n\tpushdown(pos);\n}\nvoid rotate(int pos){\n\tint fa=spl[pos].fa,gf=spl[fa].fa;\n\tint t1=relation(pos,fa),t2=relation(fa,gf);\n\tconnect(spl[pos].son[t1^1],fa,t1);\n\tconnect(fa,pos,t1^1);\n\tspl[pos].fa=gf;\n\tif(spl[gf].son[t2]==fa)\n\t\tspl[gf].son[t2]=pos;\n\tpushup(fa);\n\tpushup(pos);\n}\nvoid splaying(int pos){\n\tpushall(pos);\n\twhile(!check_root(pos)){\n\t\tint fa=spl[pos].fa,gf=spl[fa].fa;\n\t\tif(!check_root(fa))\n\t\t\trelation(pos,fa)^relation(fa,gf)?rotate(pos):rotate(fa);\n\t\trotate(pos);\n\t}\n}\nvoid access(int pos){\n\tint son=0;\n\twhile(pos){\n\t\tsplaying(pos);\n\t\tspl[pos].son[1]=son;\n\t\tpushup(pos);\n\t\tson=pos;\n\t\tpos=spl[pos].fa;\n\t}\n}\nvoid make_root(int pos){\n\taccess(pos);\n\tsplaying(pos);\n\tspl[pos].rev^=1;\n}\nint find_root(int pos){\n\taccess(pos);\n\tsplaying(pos);\n\tpushdown(pos);\n\twhile(spl[pos].son[0]){\n\t\tpos=spl[pos].son[0];\n\t\tpushdown(pos);\n\t}\n\tsplaying(pos);\n\treturn pos;\n}\nvoid link(int x,int y){\n\tmake_root(x);\n\tspl[x].fa=y;\n}\nvoid split(int x,int y){\n\tmake_root(x);\n\taccess(y);\n\tsplaying(y);\n}//\u628a\u4ecex\u5230y\u7684\u8def\u5f84\u5206\u79bb\u51fa\u6765\nbool check(int x,int y){\n\treturn find_root(x)==find_root(y);\n}//\u5224\u65ad\u8fde\u901a\u6027\nint main(){\n\tint n;\n\tcin>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>spl[i].val;\n\t\tspl[i].sum=spl[i].val;\n\t}\n\tint m;\n\tcin>>m;\n\tint x,y;\n\tfor(int i=1;i<=m;i++){\n\t\tcin>>s>>x>>y;\n\t\tswitch(s[0]){\n\t\t\tcase 'b':\n\t\t\t\tif(check(x,y))\n\t\t\t\t\tcout<<\"no\\n\";\n\t\t\t\telse{\n\t\t\t\t\tcout<<\"yes\\n\";\n\t\t\t\t\tlink(x,y);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'e':\n\t\t\t\tif(!check(x,y))\n\t\t\t\t\tcout<<\"impossible\\n\";\n\t\t\t\telse{\n\t\t\t\t\tsplit(x,y);\n\t\t\t\t\tcout<<spl[y].sum<<'\\n';\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'p':\n\t\t\t\tsplaying(x);\n\t\t\t\tspl[x].sum=spl[x].sum-spl[x].val+y;\n\t\t\t\tspl[x].val=y;\n\t\t\t\t//sum\u548cval\u90fd\u8981\u66f4\u65b0\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n```",
        "postTime": 1608288621,
        "uid": 204705,
        "name": "KiDDOwithTopTree",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4312 \u3010[COI2009] OTOCI\u3011"
    },
    {
        "content": "[\u9898\u76ee\u63cf\u8ff0](https://www.luogu.com.cn/problem/P4312)\n\n\u601d\u8def\n```\n\uff081\uff09\u6309\u7167\u8fde\u8fb9\u7684\u987a\u5e8f\uff0c\u628a\u6709\u7528\u7684\u8fb9\u8fde\u8d77\u6765\uff0c\u4ea7\u751f\u68ee\u6797\uff08\u5f88\u591a\u68f5\u6811\uff09\n\uff082\uff09\u628a\u5f88\u591a\u68f5\u6570\u7684dfs\u5e8f\u653e\u5165\u5230\u4e00\u68f5\u7ebf\u6bb5\u6811\u4e0a\u53bb\uff08\u591a\u68f5\u6811\u4e4b\u95f4\u4e0d\u4f1a\u6709\u5f71\u54cd\uff09\n\uff083\uff09\u518d\u6309\u7167\u9898\u76ee\u7684\u64cd\u4f5c\u987a\u5e8f\uff0c\u5728\u7ebf\u6bb5\u4e0a\u5904\u7406\u4e00\u8fb9\uff08\u7ed3\u5408dfs\u5e8f\uff09\n\n```\n\n```\n\u5173\u4e8e\u4e0a\u8ff0dfs\u5e8f\n\n\u7ed9\u5b9a\u4e00\u68f5n\u4e2a\u8282\u70b9\u7684\u6811\uff0c\u521d\u59cb\u6bcf\u4e2a\u8282\u70b9\u7684\u6743\u503c\u4e3a0\uff0c\u6709m\u4e2a\u64cd\u4f5c\uff1a\n\n1\uff1a\u8282\u70b9X\u7684\u6743\u503c\u52a0\u4e0a\u4e00\u4e2a\u6570w\n\n2\uff1a \u67e5\u8be2\u8282\u70b9X\u5230\u8282\u70b9Y\u7684\u8def\u5f84\u4e0a\u6743\u503c\u4e4b\u548c.\n\n\u5bf9\u4e8e\u6bcf\u4e2a2\u64cd\u4f5c\uff0c\u8f93\u51fa\u76f8\u5e94\u7684\u7ed3\u679c\u3002\n\n\u89e3\u6cd5\n\n\u4e0a\u8ff0\u9898\u76ee\u5373\u5bf9\u67d0\u4e2a\u70b9X\u6743\u503c\u52a0\u4e0a\u4e00\u4e2a\u6570W, \u67e5\u8be2X\u5230Y\u8def\u5f84\u4e0a\u6240\u6709\u70b9\u6743\u4e4b\u548c\n\n\u8fd9\u4e2a\u95ee\u9898\u8f6c\u5316\u4e3a\n\nX\u5230\u6839\u8282\u70b9\u7684\u548c + Y\u5230\u6839\u8282\u70b9\u7684\u548c \u2013 LCA(x, y)\u5230\u6839\u8282\u70b9\u7684\u548c \u2013 fa(LCA(x,y)) \u5230\u6839\u8282\u70b9\u7684\u548c\n\n\u66f4\u65b0\u67d0\u4e2a\u70b9x\u7684\u6743\u503c\u65f6,\u53ea\u4f1a\u5bf9\u5b83\u7684\u5b50\u6811\u4ea7\u751f\u5f71\u54cd,\u5bf9x\u7684\u5b50\u6811\u7684\u6bcf\u4e2a\u70b9\u5230\u6839\u7684\u8ddd\u79bb\u90fd\u52a0\u4e86W.\n\n\u90a3\u4e48\u6211\u4eec\u7528\u5dee\u5206\u524d\u7f00\u548c,\u66f4\u65b0\u4e00\u4e2a\u5b50\u6811\u7684\u6743\u503c.\u7ed9L[x]\u52a0\u4e0aW,\u7ed9R[x]+1\u51cf\u53bbW,\u90a3\u4e48sum(1~L[k])\u5c31\u662fk\u5230\u6839\u7684\u8def\u5f84\u70b9\u6743\u548c.\n\n```\n\n\u540c\u7406 \u53ea\u8981\u5148\u79bb\u7ebf\u6389\u5728\u76f4\u63a5\u6c42\u5c31\u53ef\u4ee5\u4e86\n\n\u7528\u5230 dfs\u5e8f \u7ebf\u6bb5\u6811 LCA \n\n```\n#include<bits/stdc++.h>\n#define ll long long\n#define ls p<<1\n#define rs p<<1|1\n#define pb push_back\nusing namespace std;\nconst ll  M=3e5+5;\nll n,m;\nll A[M];\nll vis[M];\nll fath[M];\nll fa[M][22],dep[M];\nll L[M],tot,R[M];\nvector <ll> E[M];\nll getfa(ll x) {\n    return x==fath[x]?x:fath[x]=getfa(fath[x]); \n}\nstruct qu{\n    ll q,x,y,re;\n}q[M];\nvoid dfs(ll x,ll f) {\n    vis[x]=1;\n    L[x]=++tot;\n    fa[x][0]=f;\n    dep[x]=dep[f]+1;\n    for(ll i=0;i<E[x].size();i++) {\n        ll y=E[x][i];\n        if(y==f) continue;\n        dfs(y,x);\n    }\n    R[x]=tot;\n}\nstruct seg{\n    struct node{\n        ll L,R;\n        ll sum,add;\n    }tree[M<<2];\n    void Up(ll p) {\n        tree[p].sum=tree[ls].sum+tree[rs].sum;\n    }\n    void down(ll p) {\n        ll &t=tree[p].add;\n        tree[ls].add+=t;\n        tree[ls].sum+=(tree[ls].R-tree[ls].L+1)*t;\n        tree[rs].add+=t;\n        tree[rs].sum+=(tree[rs].R-tree[rs].L+1)*t;\n        t=0;\n    }\n    void build(ll L,ll R,ll p) {\n        tree[p].L=L,tree[p].R=R;tree[p].sum=0;tree[p].add=0;\n        if(L==R) return;    \n        ll mid=L+R>>1;\n        build(L,mid,ls);build(mid+1,R,rs);\n        Up(p);\n    }\n    void Update(ll L,ll R,ll w,ll p) {\n        if(tree[p].L==L&&R==tree[p].R) {\n            tree[p].sum+=w*(R-L+1);\n            tree[p].add+=w;\n            return;\n        }\n        down(p);\n        ll mid=tree[p].L+tree[p].R>>1;\n        if(R<=mid) Update(L,R,w,ls);\n        else if(L>mid) Update(L,R,w,rs);\n        else Update(L,mid,w,ls),Update(mid+1,R,w,rs);\n        Up(p);\n    }\n    ll query(ll x,ll p) {\n        if(tree[p].L==tree[p].R) {\n            return tree[p].sum;\n        }\n        down(p);\n        ll mid=tree[p].L+tree[p].R>>1;\n        if(x<=mid) return query(x,ls);\n        else return query(x,rs);\n    }\n}t;\nvoid Up(ll &x,ll step) {\n    for(ll i=0;i<21;i++) \n        if(step&(1<<i)) x=fa[x][i];\n}\nll LCA(ll a,ll b) {\n    if(dep[a]>dep[b]) swap(a,b);\n    Up(b,dep[b]-dep[a]);\n    if(a==b) return a;\n    for(ll i=20;i>=0;i--) \n        if(fa[a][i]!=fa[b][i]) {\n            a=fa[a][i];\n            b=fa[b][i];\n        }\n    return fa[a][0];\n}\nint main() {\n    scanf(\"%lld\",&n);\n    for(ll i=1;i<=n;i++) scanf(\"%lld\",&A[i]);\n    for(ll i=1;i<=n;i++) fath[i]=i;\n    scanf(\"%lld\",&m); \n    char s[15];\n    ll x,y;\n    for(ll i=1;i<=m;i++)  {\n        scanf(\"%s%lld%lld\",s,&x,&y);\n        q[i].x=x;\n        q[i].y=y;\n        if(s[0]=='b') {\n            q[i].q=1;\n            ll xf=getfa(x),yf=getfa(y);\n            if(xf!=yf) {\n                q[i].re=1;\n                E[x].push_back(y);\n                E[y].push_back(x);\n                fath[xf]=yf;\n            } else q[i].re=0;\n        } else if(s[0]=='p') q[i].q=2;\n        else {\n            q[i].q=3;\n            ll xf=getfa(x);\n            ll yf=getfa(y);\n            if(xf!=yf) q[i].re=0;\n            else q[i].re=1;\n        }\n    }\n    for(ll i=1;i<=n;i++) if(!vis[i]) dfs(i,0);\n    for(ll j=1;j<=20;j++) \n        for(ll i=1;i<=n;i++) \n            fa[i][j]=fa[fa[i][j-1]][j-1];\n    t.build(1,n,1);\n    for(ll i=1;i<=n;i++) t.Update(L[i],R[i],A[i],1);\n    for(ll i=1;i<=m;i++) {\n        ll x=q[i].x,y=q[i].y;\n        if(q[i].q==1) {\n            if(q[i].re==1) puts(\"yes\");\n            else puts(\"no\");\n        }else if(q[i].q==2) {\n            t.Update(L[x],R[x],y-A[x],1);\n            A[x]=y;\n        } else {\n            if(!q[i].re) {\n                puts(\"impossible\");\n                continue;\n            }\n            ll c=LCA(x,y);\n            ll d=fa[c][0];\n            ll ans=t.query(L[x],1)+t.query(L[y],1)-t.query(L[c],1);\n            if(d) ans-=t.query(L[d],1);\n            printf(\"%lld\\n\",ans);\n        }\n    }\n    return 0;\n}\n```\n",
        "postTime": 1585231407,
        "uid": 251809,
        "name": "wick",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P4312 \u3010[COCI 2009] OTOCI / \u6781\u5730\u65c5\u884c\u793e\u3011"
    },
    {
        "content": "LCT \u677f\u5b50\u9898\n\n\u9898\u76ee\u4e2d\u8be2\u95ee\u64cd\u4f5c\u5305\u62ec\u8be2\u95ee\u4e24\u4e2a\u70b9\u662f\u5426\u8054\u901a\uff0c\u8be2\u95ee\u4e24\u70b9\u95f4\u8def\u5f84\u7684\u6743\u503c\u548c\u3002  \n\u9700\u8981\u652f\u6301\u52a0\u8fb9\uff0c\u5355\u70b9\u4fee\u6539\u64cd\u4f5c\u3002\n\n\u5bf9\u4e8ebridge\u64cd\u4f5c\uff0c\u5148\u5229\u7528find\u64cd\u4f5c\u5224\u65ad\u4e00\u4e0b\u8fde\u901a\u6027\uff0c\u4e0d\u540c\u7684\u8bddlink\u4e24\u4e2a\u70b9\u3002\n\npenguins\u64cd\u4f5c\u9700\u8981\u4fee\u6539\u70b9\u6743\uff0c\u628a\u8fd9\u4e2a\u70b9\u65cb\u8f6c\u5230\u6811\u6839\u76f4\u63a5\u8fdb\u884c\u4fee\u6539\u5e76pushup\u4fe1\u606f\u3002\n\nexcursion\u64cd\u4f5c\u5148\u5224\u65ad\u8054\u901a\u6027\uff0c\u5982\u679c\u8054\u901a\u5219\u8f93\u51fa\u8def\u5f84\u4e0a\u70b9\u6743\u4e4b\u548c\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\ninline int read()\n{\n\tint x=0;int f=1;char ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-')f=-1;ch=getchar();}\n\twhile(isdigit(ch)){x=x*10+ch-'0';ch=getchar();}\n\treturn x*f;\n}\n\nconst int MAXN=300005;\nint dat[MAXN],s[MAXN],st[MAXN];\nint rev[MAXN],fa[MAXN],ch[MAXN][2];\nint n,q;\n\ninline void pushup(int x)\n\t{s[x]=s[ch[x][0]]+s[ch[x][1]]+dat[x];}\n\ninline bool notroot(int x)\n\t{return ch[fa[x]][0]==x||ch[fa[x]][1]==x;}\n\ninline void rotate(int x)\n{\n\tint y=fa[x],z=fa[y];\n\tint k=ch[y][1]==x,w=ch[x][k^1];\n\tif(notroot(y)) ch[z][ch[z][1]==y]=x;\n\tch[x][k^1]=y; ch[y][k]=w;\n\tif(w) fa[w]=y;\n\tfa[y]=x,fa[x]=z;\n\tpushup(y);\n}\n\ninline void pushr(int x)\n\t{swap(ch[x][0],ch[x][1]),rev[x]^=1;}\n\ninline void pushdown(int x)\n{\n\tif(!rev[x]) return;\n\tif(ch[x][0]) pushr(ch[x][0]);\n\tif(ch[x][1]) pushr(ch[x][1]);\n\trev[x]=0;\n}\n\ninline void splay(int x)\n{\n\tint y=x,z=0; st[++z]=y;\n\twhile(notroot(y)) st[++z]=y=fa[y];\n\twhile(z) pushdown(st[z--]);\n\twhile(notroot(x))\n\t{\n\t\ty=fa[x],z=fa[y];\n\t\tif(notroot(y))\n\t\t\trotate((ch[z][1]==y)==(ch[y][1]==x)?y:x);\n\t\trotate(x);\n\t}\n\tpushup(x);\n}\n\ninline void access(int x)\n{\n\tfor(int y=0;x;x=fa[x])\n\t{\n\t\tsplay(x); ch[x][1]=y;\n\t\tpushup(x); y=x;\n\t}\n}\n\ninline void makeroot(int x)\n\t{access(x),splay(x),pushr(x);}\n\ninline void split(int x,int y)\n\t{makeroot(x),access(y),splay(y);}\n\ninline void link(int x,int y)\n\t{split(x,y),fa[x]=y;}\n\ninline int find(int x)\n{\n\taccess(x); splay(x);\n\twhile(ch[x][0]) x=ch[x][0];\n\treturn x;\n}\n\ninline int query(int x,int y)\n\t{split(x,y); return s[y];}\n\nint main(int argc, char const *argv[])\n{\n\tn=read();\n\tfor(int i = 1; i <= n; ++i) \n\t\tdat[i]=read();\n\tq=read();\n\tstring opt;int x,y;\n\twhile(q--)\n\t{\n\t\tcin>>opt; x=read(); y=read();\n\t\tif(opt==\"excursion\")\n\t\t{\n\t\t\tif(find(x)==find(y)) \n\t\t\t\tprintf(\"%d\\n\",query(x,y));\n\t\t\telse puts(\"impossible\");\n\t\t}\n\t\tif(opt==\"bridge\")\n\t\t{\n\t\t\tif(find(x)==find(y)) puts(\"no\");\n\t\t\telse puts(\"yes\"),link(x,y);\n\t\t\t \n\t\t}\n\t\tif(opt==\"penguins\") splay(x),dat[x]=y;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1573715166,
        "uid": 107735,
        "name": "shiroi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4312 \u3010[COCI 2009] OTOCI / \u6781\u5730\u65c5\u884c\u793e\u3011"
    },
    {
        "content": "\u521a\u5b66\u4f1a\u7684LCT\n\n\u6211\u771f\u662f\u83dc\u6b7b\u4e86\uff0c$findroot$\u53c8\u5fd8\u8bb0\u4e0b\u4f20\u6807\u8bb0\u4e86\n\n\u8d76\u5feb\u6765\u6c34\u4e00\u53d1\u9898\u89e3\n\n\u5982\u679c\u5b66\u8fc7LCT\u7684\u5e94\u8be5\u9898\u76ee\u90fd\u4e0d\u7528\u5206\u6790\u4e86\u5427\n\n\uff08\u5b9e\u9645\u4e0a\u5982\u679c\u53ea\u6709\u52a0\u8fb9\u6216\u53ea\u6709\u5220\u8fb9\u662f\u53ef\u4ee5\u79bb\u7ebf\u6811\u5256/\u542f\u53d1\u5f0f\u5408\u5e76\u7684\uff09\n\n\u6709\u4e00\u70b9\u6ce8\u610f\u4e00\u4e0b\u5c31\u662f\u6bcf\u6b21\u67e5\u8be2\u64cd\u4f5c\u65f6\u9700\u8981\u9884\u5224\u4e00\u4e0b\u8fde\u901a\u6027\n\n\u5c31\u50cf\u5e76\u67e5\u96c6\u90a3\u6837\u5224\u65ad\u4ee3\u8868\u5143(\u5373\u6811\u6839\uff09\u5373\u53ef\n\n$findroot(x)==findroot(y)$\n\n\u7136\u540elink\u91cc\u5c31\u4e0d\u9700\u8981\u7279\u5224\u4e86\n\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#define N 50000\nusing namespace std;\ninline int read(){\n\tint x;scanf(\"%d\",&x);return x;\n}\nint val[N],fa[N],ch[N][2],rev[N],a[N],s[N];\ninline void update(int x){\n\tval[x] =val[ch[x][0]] +val[ch[x][1]] +a[x];\n}\ninline void down(int x){\n\tif(!rev[x]) return ;\n\tswap(ch[x][0],ch[x][1]);\n\trev[ch[x][0]] ^=1;\n\trev[ch[x][1]] ^=1;\n\trev[x] =0;\n}\ninline bool isroot(int x){\n\treturn (ch[fa[x]][0]!=x && ch[fa[x]][1]!=x);\n}\ninline void rotate(int x){\n\tint y =fa[x],z =fa[y],f =(ch[y][1]==x),w =ch[x][!f];\n\tch[y][f] =w;\tfa[w] =y;\n\tif(!isroot(y))\tch[z][ch[z][1]==y] =x;\n\tfa[x] =z;\n\tch[x][!f] =y;\tfa[y] =x;\n\tupdate(x);\tupdate(y);\n}\ninline void splay(int x){\n\tint top =0,u =x;\n\twhile(!isroot(u))\ts[++top] =u,u =fa[u];\ts[++top] =u;\n\twhile(top)\tdown(s[top--]);\n\twhile(!isroot(x)){\n\t\tint y =fa[x];\n\t\tif(!isroot(y))\trotate((ch[y][0]==x)^(ch[fa[y]][0]==y) ? x : y);\n\t\trotate(x);\n\t}\tupdate(x);\n}\ninline void access(int x){\n\tfor(int y =0;x;x =fa[y=x])\tsplay(x),ch[x][1] =y,update(x);\n}\ninline void makeroot(int x){\n\taccess(x);\tsplay(x);\trev[x] ^=1;\n}\ninline void split(int x,int y){\n\tmakeroot(x);\taccess(y);\tsplay(y);\n}\ninline int findroot(int x){\n\taccess(x);\tsplay(x);\n\twhile(ch[x][0])\tdown(x),x =ch[x][0];\n\treturn x;\n}\ninline bool is_connected(int x,int y){\n//\tprintf(\"finded %d %d\\n\",findroot(x),findroot(y));\n\treturn (findroot(x)==findroot(y));\n}\ninline void link(int x,int y){\n\tmakeroot(x);\tfa[x] =y;\n}\nint main(){\n\tint n =read();\n\tfor(int i=1;i<=n;++i)\ta[i] =read();\n\tint T =read();\n\twhile(T--){\n\t\tchar op[15];\tscanf(\"%s\",op);\n\t\tint x =read(),y =read();\n\t\tif(op[0]=='p')\tsplay(x),a[x] =y;\n\t\telse if(op[0]=='b'){\n\t\t\tif(is_connected(x,y))\tputs(\"no\");\n\t\t\telse puts(\"yes\"),link(x,y);\n\t\t}\n\t\telse{\n\t\t\tif(!is_connected(x,y))\tputs(\"impossible\");\n\t\t\telse split(x,y),printf(\"%d\\n\",val[y]);\n\t\t}\n\t}\n}\n```\n",
        "postTime": 1566824301,
        "uid": 104000,
        "name": "Kisaragi_77",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4312 \u3010[COCI 2009] OTOCI / \u6781\u5730\u65c5\u884c\u793e\u3011"
    },
    {
        "content": "# \u9898\u76ee\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[\u70b9\u8fd9\u91cc](https://www.luogu.org/problem/P4312)\u770b\u9898\u76ee\u3002\n# \u5206\u6790\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u50cf\u8fd9\u79cd\u4e0d\u5f3a\u5236\u5728\u7ebf\u7684\u9898\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u8003\u8651\u4e00\u4e0b\u79bb\u7ebf\u4e71\u641e\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u600e\u4e48\u641e\u5462\uff1f\u7531\u9898\u6211\u4eec\u77e5\u9053\u8fd9\u4e2a\u56fe\u6700\u7ec8\u4f1a\u5f62\u6210\u68ee\u6797\uff08\u4e00\u68f5\u6811\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u79bb\u7ebf\u4e4b\u540e\u6811\u5256\u4e86\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7136\u540e\u91cd\u65b0\u5904\u7406\u6240\u6709\u64cd\u4f5c\uff0c\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u8fde\u901a\u6027\uff0c\u7528\u6811\u5256\u7684\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u8def\u5f84\u4e0a\u7684\u6743\u503c\u548c\u3002  \n# \u4ee3\u7801\n```cpp\n#include <cmath>\n#include <cstdio>\n\nconst int MAXN = 30005, MAXQ = 300005, MAXLOG = 20;\n\ntemplate<typename _T>\nvoid read( _T &x )\n{\n    x = 0;char s = getchar();int f = 1;\n    while( s > '9' || s < '0' ){if( s == '-' ) f = -1; s = getchar();}\n    while( s >= '0' && s <= '9' ){x = ( x << 3 ) + ( x << 1 ) + ( s - '0' ), s = getchar();}\n    x *= f;\n}\n\ntemplate<typename _T>\nvoid write( _T x )\n{\n    if( x < 0 ){ putchar( '-' ); x = ( ~ x ) + 1; }\n    if( 9 < x ){ write( x / 10 ); }\n    putchar( x % 10 + '0' );\n}\n\nstruct UFS\n{\n\tint fa[MAXN];\n\tvoid makeSet( const int Siz ){ for( int i = 1 ; i <= Siz ; i ++ ) fa[i] = i; }\n\tint findSet( const int u ){ return fa[u] ^ u ? ( fa[u] = findSet( fa[u] ) ) : fa[u]; }\n\tbool unionSet( const int u, const int v )\n\t{\n\t\tint r1 = findSet( u ), r2 = findSet( v );\n\t\tif( r1 == r2 ) return false;\n\t\tfa[r1] = r2;\n\t\treturn true;\n\t}\n}real;\n\nstruct edge\n{\n\tint to, nxt;\n}Graph[MAXN * 2];\n\nstruct quest\n{\n\tint type, u, v;\n}q[MAXQ];\n\nstruct segmentTreeNode\n{\n\tint l, r;\n\tint s;\n}segTree[MAXN << 2];\n\nint f[MAXN][MAXLOG];\nint W[MAXN];\nint LTail[MAXN], seq[MAXN];\nint heavy[MAXN], siz[MAXN], beIn[MAXN], LPos[MAXN], dep[MAXN];\nint head[MAXN];\nint N, Q, cnt, ID, tot, lg2;\n\nvoid addEdge( const int from, const int to )\n{\n\tcnt ++;\n\tGraph[cnt].to = to;\n\tGraph[cnt].nxt = head[from];\n\thead[from] = cnt;\n}\n\nvoid DFS1( const int u, const int fa )\n{\n\tf[u][0] = fa;\n\tdep[u] = dep[fa] + 1;\n\tint v;\n\theavy[u] = -1;\n\tsiz[u] = 1;\n\tfor( int i = head[u] ; i ; i = Graph[i].nxt )\n\t{\n\t\tv = Graph[i].to;\n\t\tif( v ^ fa )\n\t\t{\n\t\t\tDFS1( v, u );\n\t\t\tsiz[u] += siz[v];\n\t\t\tif( heavy[u] == -1 || siz[heavy[u]] < siz[v] ) heavy[u] = v;\n\t\t}\n\t}\n}\n\nvoid DFS2( const int u, const int fa )\n{\n\tint v;\n\tLPos[u] = ++ID;\n\tseq[ID] = u;\n\tif ( ~ heavy[u] )\n\t{\n\t\tDFS2( heavy[u], u );\n\t\tbeIn[u] = beIn[heavy[u]];\n\t}\n\telse beIn[u] = ++tot;\n\tLTail[beIn[u]] = u;\n\tfor( int i = head[u] ; i ; i = Graph[i].nxt )\n\t{\n\t\tv = Graph[i].to;\n\t\tif( v ^ fa && v ^ heavy[u] ) DFS2( v, u );\n\t}\n}\n\nvoid init()\n{\n\tfor( int j = 1 ; j <= lg2 ; j ++ )\n\t\tfor( int i = 1 ; i <= N ; i ++ )\n\t\t\tf[i][j] = f[f[i][j - 1]][j - 1];\n}\n\nvoid balance( int &u, const int steps )\n{\n\tfor( int i = 0 ; ( 1 << i ) <= steps ; i ++ )\n\t\tif( steps & ( 1 << i ) )\n\t\t\tu = f[u][i];\n}\n\nint LCA( int u, int v )\n{\n\tif( dep[u] > dep[v] ) balance( u, dep[u] - dep[v] );\n\tif( dep[v] > dep[u] ) balance( v, dep[v] - dep[u] );\n\tif( u == v ) return u;\n\tfor( int i = lg2 ; ~ i ; i -- )\n\t\tif( f[u][i] ^ f[v][i] )\n\t\t\tu = f[u][i], v = f[v][i];\n\treturn f[u][0];\n}\n\nvoid upt( const int now )\n{\n\tsegTree[now].s = segTree[now << 1].s + segTree[now << 1 | 1].s;\n}\n\nvoid build( const int now, const int left, const int right )\n{\n\tsegTree[now].l = left, segTree[now].r = right;\n\tif( left == right )\n\t{\n\t\tsegTree[now].s = W[seq[left]];\n\t\treturn;\n\t}\n\tbuild( now << 1, left, ( left + right ) >> 1 );\n\tbuild( now << 1 | 1, ( ( left + right ) >> 1 ) + 1, right );\n\tupt( now );\n}\n\nvoid update( const int now, const int val, const int indx )\n{\n\tif( indx < segTree[now].l || segTree[now].r < indx ) return;\n\tif( indx <= segTree[now].l && segTree[now].r <= indx )\n\t{\n\t\tsegTree[now].s = val;\n\t\treturn;\n\t}\n\tif( segTree[now].l == segTree[now].r ) return;\n\tupdate( now << 1, val, indx );\n\tupdate( now << 1 | 1, val, indx );\n\tupt( now );\n}\n\nint query( const int now, const int segL, const int segR )\n{\n\tif( segR < segTree[now].l || segTree[now].r < segL ) return 0;\n\tif( segL <= segTree[now].l && segTree[now].r <= segR ) return segTree[now].s;\n\treturn query( now << 1, segL, segR ) + query( now << 1 | 1, segL, segR );\n}\n\nvoid change( const int indx, const int val )\n{\n\tupdate( 1, val, LPos[indx] );\n}\n\nint ask( int u, int v )\n{\n\tint lca = LCA( u, v ), res = 0;\n\twhile( beIn[u] ^ beIn[lca] )\n\t{\n\t\tres += query( 1, LPos[LTail[beIn[u]]], LPos[u] );\n\t\tu = f[LTail[beIn[u]]][0];\n\t}\n\tres += query( 1, LPos[lca], LPos[u] );\n\twhile( beIn[v] ^ beIn[lca] )\n\t{\n\t\tres += query( 1, LPos[LTail[beIn[v]]], LPos[v] );\n\t\tv = f[LTail[beIn[v]]][0];\n\t}\n\tres += query( 1, LPos[lca], LPos[v] );\n\tres -= query( 1, LPos[lca], LPos[lca] );\n\treturn res;\n}\n\nint main()\n{\n\tchar op[20];\n\tread( N );\n\tlg2 = log2( N );\n\tfor( int i = 1 ; i <= N ; i ++ ) read( W[i] );\n\tread( Q );\n\treal.makeSet( N );\n\tfor( int i = 1 ; i <= Q ; i ++ )\n\t{\n\t\tscanf( \"%s\", op );\n\t\tread( q[i].u ), read( q[i].v );\n\t\tif( op[0] == 'b' )\n\t\t{\n\t\t\tq[i].type = 1;\n\t\t\tif( real.unionSet( q[i].u, q[i].v ) )\n\t\t\t{\n\t\t\t\taddEdge( q[i].u, q[i].v );\n\t\t\t\taddEdge( q[i].v, q[i].u );\n\t\t\t}\n\t\t}\n\t\tif( op[0] == 'p' ) q[i].type = 2;\n\t\tif( op[0] == 'e' ) q[i].type = 3;\n\t}\n\tfor( int i = 1 ; i <= N ; i ++ )\n\t{\n\t\tif( ! dep[i] )\n\t\t{\n\t\t\tDFS1( i, 0 );\n\t\t\tDFS2( i, 0 );\n\t\t}\n\t}\n\tinit();\n\tbuild( 1, 1, N );\n\treal.makeSet( N );\n\tfor( int i = 1 ; i <= Q ; i ++ )\n\t{\n\t\tif( q[i].type == 1 )\n\t\t{\n\t\t\tif( real.unionSet( q[i].u, q[i].v ) ) puts( \"yes\" );\n\t\t\telse puts( \"no\" );\n\t\t}\n\t\tif( q[i].type == 2 ) change( q[i].u, q[i].v );\n\t\tif( q[i].type == 3 )\n\t\t{\n\t\t\tif( real.findSet( q[i].u ) == real.findSet( q[i].v ) ) write( ask( q[i].u, q[i].v ) ), putchar( '\\n' );\n\t\t\telse puts( \"impossible\" );\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1566777103,
        "uid": 123809,
        "name": "crashed",
        "ccfLevel": 0,
        "title": "[LG P4312][COCI 2009] OTOCI / \u6781\u5730\u65c5\u884c\u793e"
    },
    {
        "content": "\u539f\u9898\u4f20\u9001\u95e8[>Here<](https://www.luogu.org/problemnew/show/P4312)\n\nLCT\u88f8\u9898\uff0c\u7ef4\u62a4\u4e00\u4e0b\u6bcf\u4e2a\u70b9\u5b50\u6811\u6743\u503c\uff0c\u6309\u7167\u9898\u610f\u6a21\u62df\u5373\u53ef\u3002\n\n\u6ce8\u610fpenguin\u7684\u65f6\u5019\u8981\u5148\u5c06\u70b9access\uff0csplay\u540e\u518d\u4fee\u6539\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include <cstdio>\n\nint fa[300001],ch[300001][2],v[300001],tot[300001],n,q,A,B,tem;\nbool lazy[300001];\nchar cha[101];\nbool son(int x){return ch[fa[x]][1]==x;}\nbool isroot(int x){return ch[fa[x]][0]!=x&&ch[fa[x]][1]!=x;}\nvoid pushup(int x){tot[x]=tot[ch[x][0]]+tot[ch[x][1]]+v[x];}\nvoid spread(int x){\n    if(!lazy[x])return;\n    tem=ch[x][0];\n    ch[x][0]=ch[x][1];\n    ch[x][1]=tem;\n    lazy[ch[x][0]]^=1;\n    lazy[ch[x][1]]^=1;\n    lazy[x]=0;\n}\nvoid Rotate(int x){\n    if(!x||!fa[x]||isroot(x))return;\n    int faz=fa[x],fazz=fa[faz],g=son(x);\n    fa[x]=fazz;\n    if(!isroot(faz))ch[fazz][son(faz)]=x;\n    fa[ch[x][!g]]=faz;\n    ch[faz][g]=ch[x][!g];\n    fa[faz]=x;\n    ch[x][!g]=faz;\n    pushup(faz);\n    pushup(x);\n}\nvoid clean(int x){\n    if(!isroot(x))clean(fa[x]);\n    spread(x);\n}\nvoid splay(int node){\n    clean(node);\n    while(!isroot(node)){\n        if(!isroot(fa[node]))\n            if(son(fa[node])^son(node))Rotate(node);\n            else Rotate(fa[node]);\n        Rotate(node);\n    }\n    pushup(node);\n}\nvoid access(int x){\n    for(int y=0;x;y=x,x=fa[x])\n        splay(x),ch[x][1]=y,pushup(x);\n}\nvoid mroot(int x){\n    access(x);\n    splay(x);\n    lazy[x]^=1;\n}\nvoid split(int x,int y){\n    mroot(x);\n    access(y);\n    splay(y);\n}\nvoid link(int x,int y){\n    mroot(x);\n    fa[x]=y;\n}\nint find(int x){\n    access(x);\n    splay(x);\n    while(ch[x][0])x=ch[x][0];\n    return x;\n}\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)scanf(\"%d\",v+i),tot[i]=v[i];\n    scanf(\"%d\",&q);\n    for(int i=1;i<=q;i++){\n        scanf(\"%s%d%d\",cha,&A,&B);\n        if(cha[0]=='b'){\n            if(find(A)==find(B))puts(\"no\");\n            else{\n                puts(\"yes\");\n                link(A,B);\n            }\n        }\n        else if(cha[0]=='p')access(A),splay(A),v[A]=B,pushup(A);\n        else if(cha[0]=='e'){\n            if(find(A)!=find(B)){\n                puts(\"impossible\");\n                continue;\n            }\n            split(A,B);\n            printf(\"%d\\n\",tot[B]);\n        }\n    }\n}\n```",
        "postTime": 1533622006,
        "uid": 30903,
        "name": "Isonan",
        "ccfLevel": 0,
        "title": "luoguP4312 [COCI 2009] OTOCI"
    },
    {
        "content": "LCT\u88f8\u9898\u3002\u76f4\u63a5\u7528LCT\u7ef4\u62a4\u5373\u53ef\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#include<ext/pb_ds/assoc_container.hpp>\n#define Rep(i,a,b) for(register int i=(a),i##end=(b);i<=i##end;++i)\n#define Repe(i,a,b) for(register int i=(a),i##end=(b);i>=i##end;--i)\n#define For(i,a,b) for(i=(a),i<=(b);++i)\n#define Forward(i,a,b) for(i=(a),i>=(b);--i)\ntemplate<typename T>inline void read(T &x)\n{\n\tT f=1;x=0;char c;\n\tfor(c=getchar();!isdigit(c);c=getchar())if(c=='-')f=-1;\n\tfor(;isdigit(c);c=getchar())x=x*10+(c^48);\n\tx*=f;\n}\nusing namespace std;\nvoid file()\n{\n#ifndef ONLINE_JUDGE\n\tfreopen(\"water.in\",\"r\",stdin);\n\tfreopen(\"water.out\",\"w\",stdout);\n#endif\n}\nconst int MAXN=33333;\nnamespace LCT\n{\n\tstatic int son[MAXN][2],fa[MAXN],w[MAXN],cnt[MAXN],rev[MAXN];\n\n\tinline bool isroot(int x){return son[fa[x]][0]!=x&&son[fa[x]][1]!=x;}\n\t\n\tinline bool isl(int x){return x^son[fa[x]][0];}\n\n\tinline void refresh(int x){cnt[x]=cnt[son[x][0]]+cnt[son[x][1]]+w[x];}\n\n\tinline void rotate(int x)\n\t{\n\t\tstatic int f,ff,k;f=fa[x];ff=fa[f];k=isl(x);\n\t\tfa[x]=ff;if(!isroot(f))son[ff][isl(f)]=x;\n\t\tson[fa[son[x][k^1]]=f][k]=son[x][k^1];\n\t\tson[fa[f]=x][k^1]=f;\n\t\trefresh(f);refresh(x);\n\t}\n\t\n\tinline void pushdown(int x)\n\t{\n\t\tif(rev[x])\n\t\t{\n\t\t\tswap(son[x][0],son[x][1]);\n\t\t\trev[son[x][0]]^=1;rev[son[x][1]]^=1;\n\t\t\trev[x]=0;\n\t\t}\n\t}\n\n\tstatic int sta[MAXN],tp;\n\tinline void splay(int x)\n\t{\n\t\tsta[tp=1]=x;\n\t\tfor(register int t=x;!isroot(t);t=fa[t])sta[++tp]=fa[t];\n\t\twhile(tp)pushdown(sta[tp--]);\n\t\tfor(register int f=fa[x];!isroot(x);rotate(x),f=fa[x])\n\t\t\tif(!isroot(f))rotate(isl(f)^isl(x)?f:x);\n\t}\n\n\tinline void access(int x)\n\t{\n\t\tstatic int t;\n\t\tfor(t=0;x;t=x,x=fa[x])//cerr<<x<<' '<<t<<' '<<fa[x]<<endl,\n\t\t\tsplay(x),son[x][1]=t,refresh(x);\n\t}\n\n\tinline void makeroot(int x)\n\t{access(x);splay(x);rev[x]^=1;}\n\n\tinline void link(int x,int y)\n\t{makeroot(x);fa[x]=y;}\n\n\tinline int find(int x)\n\t{\n\t\taccess(x);splay(x);\n\t\twhile(son[x][0])x=son[x][0];\n\t\treturn x;\n\t}\n\n\tinline int cal(int x,int y)\n\t{makeroot(x);access(y);splay(y);return cnt[y];}\n}\nusing namespace LCT;\nstatic int n,q;\ninline void init()\n{\n\tread(n);Rep(i,1,n)read(w[i]),cnt[i]=w[i];\n}\ninline void solve()\n{\n\tread(q);\n\tstatic char opt[20];\n\tstatic int x,y;\n\tRep(i,1,q)\n\t{\n\t\tscanf(\"%s\",opt);read(x);read(y);\n\t\tswitch(opt[0])\n\t\t{\n\t\t\tcase 'b':\n\t\t\t{\n\t\t\t\tif(find(x)==find(y))printf(\"no\\n\");\n\t\t\t\t else printf(\"yes\\n\"),link(x,y);\n\t\t\t\t break;\n\t\t\t}\n\t\t\tcase 'p':access(x);splay(x);w[x]=y;refresh(x);break;\n\t\t\tcase 'e':\n\t\t\t{\n\t\t\t\tif(find(x)^find(y))printf(\"impossible\\n\");\n\t\t\t\telse printf(\"%d\\n\",cal(x,y));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tfile();\n\tinit();\n\tsolve();\n\treturn 0;\n}\n```",
        "postTime": 1520859859,
        "uid": 7035,
        "name": "Great_Influence",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4312 \u3010OTOCI\u3011"
    }
]