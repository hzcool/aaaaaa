[
    {
        "content": "\u4ee5\u4e0b\u590d\u6742\u5ea6\u5206\u6790\u4e2d\uff0c\u5747\u8ba4\u4e3a $n,k,m$ \u540c\u9636\u3002\n\n\u9898\u76ee\u4e2d\u7ed9\u51fa\u7684\u300c\u6070\u597d $m$ \u4e2a\u5b9d\u7269\u300d\u7684\u6761\u4ef6\u6709\u70b9\u96be\u5904\u7406\uff0c\u5148\u8003\u8651\u4e00\u4e2a\u7b80\u5316\u7684\u95ee\u9898\uff1a\u6c42 $2\\times n$ \u7684\u7f51\u683c\u4e2d\u653e\u7f6e $k$ \u4e2a\u969c\u788d\u7269\uff0c\u4f7f\u5f97\u6700\u5de6\u4fa7\u548c\u6700\u53f3\u4fa7\u8fde\u901a\u7684\u65b9\u6848\u6570\u3002\n\n\u8bbe $a_{n,k}$ \u4e3a\u653e\u7f6e $k$ \u4e2a\u969c\u788d\u7269\uff0c\u4e14\u6700\u53f3\u4fa7\u4e24\u683c\u4e0d\u653e\u969c\u788d\uff0c\u4f7f\u5f97\u6700\u5de6\u4fa7\u548c\u6700\u53f3\u4fa7\u8fde\u901a\u7684\u65b9\u6848\u6570\uff1b\u7c7b\u4f3c\u5730\u8bbe $b_{n,k}$\uff0c\u8981\u6c42\u6700\u53f3\u4fa7\u653e\u4e00\u4e2a\u969c\u788d\u3002\n\n\u6211\u4eec\u5f88\u5feb\u5c31\u80fd\u5f97\u5230\u9012\u63a8\u5f0f\uff08\u6ce8\u610f $a_{0,0}=1$\uff09\uff1a\n\n$$a_{n,k}=a_{n-1,k}+b_{n-1,k}$$\n$$b_{n,k}=2a_{n-1,k-1}+b_{n-1,k-1}$$\n\n\u73b0\u5728\u6765\u8003\u8651\u539f\u95ee\u9898\uff0c\u679a\u4e3e\u548c\u5de6\u8fb9\u8fde\u901a\u7684\u5757\u7684\u6700\u53f3\u7aef\u5728\u54ea\uff0c\u8981\u6ce8\u610f\u7684\u662f\u548c\u5de6\u8fb9\u8fde\u901a\u7684\u5757\u88ab\u622a\u65ad\u65f6\uff0c\u4f1a\u6709\u4e09\u79cd\u60c5\u51b5\uff1a\n![](https://cdn.luogu.com.cn/upload/image_hosting/p8oq9h7s.png)\n\n\u5bf9\u4e8e\u60c5\u51b5 A\uff0c\u622a\u65ad\u8fde\u901a\u5757\u9700\u8981 $2$ \u4e2a\u969c\u788d\uff0c\u53f3\u4fa7\u8fd8\u6709 $2\\times(n-i-1)$ \u4e2a\u683c\u5b50\uff0c\u53ef\u4ee5\u968f\u4fbf\u653e\u4e0a $k-(2i-m)-2$ \u4e2a\u969c\u788d\uff1b\u800c B\u3001C \u4e24\u79cd\u60c5\u51b5\u662f\u7b49\u4ef7\u7684\uff0c\u53ef\u4ee5\u7c7b\u6bd4\u60c5\u51b5 A \u6765\u63a8\u51fa\u7b54\u6848\u4e3a\uff1a\n\n$$[k=2n-m](a_{n,k}+b_{n,k})+\\sum_{i=0}^{n-1}a_{i,2i-m}\\binom{2(n-i-1)}{k-2i+m-2}+b_{i,2i-m}\\binom{2(n-i)-1}{k-2i+m-1}$$\n\u90a3\u4e2a\u5355\u72ec\u7684\u9879\u662f\u56e0\u4e3a\u5730\u56fe\u7684\u8fb9\u754c\u4e5f\u662f\u969c\u788d\uff0c\u4e0d\u9700\u8981\u653e\u989d\u5916\u7684\u969c\u788d\u6765\u622a\u65ad\u3002\n\n\u5f53\u7136\u6211\u4eec\u4e0d\u6ee1\u8db3\u4e8e $\\Theta(n^2)$ \u9012\u63a8\u8ba1\u7b97 $a_{i,2i-m}$\uff0c\u6ce8\u610f\u5230\u6c42\u548c\u5f0f\u4e2d\u5b9e\u9645\u53ea\u7528\u5230\u4e86 $\\Theta(m)$ \u4e2a $a$ \u7684\u503c\uff0c\u800c\u4e14\u90fd\u662f\u5728\u4e00\u6761\u659c\u7ebf\u4e0a\u7684\u3002\u4e3a\u4e86\u627e\u51fa\u53ef\u80fd\u7684\u4f18\u5316\u7b97\u6cd5\uff0c\u6211\u4eec\u5c1d\u8bd5\u5bf9 $m\\geq 2$ \u5217\u51fa\u6240\u6709 $a_{i,2i-m}$ \u975e\u96f6\u9879\u7684\u503c\uff0c\u518d\u628a\u6bcf\u884c\u7ffb\u8f6c\u4e00\u4e0b\uff0c\u5f97\u5230\u4e86\u8fd9\u6837\u4e00\u4e2a\u4e09\u89d2\u5f62\uff1a\n\n\n```\n1 \n2\n2 1\n2 4\n2 8 1\n2 12 6\n2 16 18 1\n2 20 38 8\n2 24 66 32 1\n```\n\u8bbe\u5176\u4e2d\u7b2c $m$ \u884c\uff08\u4ece $0$ \u5f00\u59cb\u8ba1\uff09\u7684\u751f\u6210\u51fd\u6570\u4e3a $F_m(x)$\uff0c\u5c06\u539f\u59cb\u9012\u63a8\u5f0f\u5316\u7b80\u4e3a $a_{n,k}=a_{n-2,k-1}+a_{n-1,k-1}+a_{n-1,k}$\uff0c\u6620\u5c04\u5230\u8fd9\u4e2a\u4e09\u89d2\u5f62\u4e0a\u5c31\u662f $F_m(x)=F_{m-1}(x)+xF_{m-2}(x)+xF_{m-3}(x)$\u3002\n\n\u5982\u679c\u8bbe\u5176\u4e2d\u7b2c $k$ \u5217\uff08\u4ece $1$ \u5f00\u59cb\u8ba1\uff09\u7684\u751f\u6210\u51fd\u6570\u4e3a $C_k(x)$\uff0c\u5c31\u6709\uff1a\n$$C_k(x)=xC_k(x)+(x^2+x^3)C_{k-1}(x)=x^2\\frac{1+x}{1-x}C_{k-1}(x)$$\n$$C_k(x) = x^{-2}\\left( x^2\\frac{1+x}{1-x}\\right)^k$$\n\n\u4f7f\u7528[\u7ecf\u5178\u65b9\u6cd5](https://www.luogu.com.cn/blog/NaCly-Fish-blog/a-classical-problem)\uff0c\u8bbe\n$$g(x) = x \\sqrt{\\frac{1+x}{1-x}}$$\n$h(x)=g^{\\langle -1 \\rangle}(x)$\uff0c\u5219\uff1a\n$$[x^m]\\left( x^2 \\frac{1+x}{1-x}\\right)^k=[x^m]g(x)^{2k}=[x^{m-2k}]h'(x)\\left( \\frac{x}{h(x)}\\right)^{m+1}$$\n\n\u4f7f\u7528 FFT \u5c31\u53ef\u4ee5\u505a\u5230 $\\Theta(n \\log n)$\uff0c\u7136\u800c $h(x)$ \u662f\u4ee3\u6570\u5e42\u7ea7\u6570\uff0c\u8fd9\u6837\u4e00\u884c\u7684\u7cfb\u6570\u663e\u7136\u662f\u5fae\u5206\u6709\u9650\u7684\u3002\u4f7f\u7528 ODE \u81ea\u52a8\u673a\uff0c\u6216\u76f4\u63a5\u7b97\u524d\u51e0\u9879\u540e\u66b4\u529b\u9ad8\u65af\u6d88\u5143\u6765\u5f97\u5230\u6574\u5f0f\u9012\u63a8\u5f0f\uff0c\u90fd\u662f\u53ef\u884c\u7684\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\Theta(n)$\u3002\n\n \n\n\u7ec6\u8282\u5de8\u5927\u591a\uff0c\u8fd8\u662f\u6765\u8d34\u4e00\u4efd std\uff0c\u4f7f\u7528\u7684\u662f\u9ad8\u65af\u6d88\u5143\u6cd5\u3002   \n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#define N 3000003\n#define ll long long\n#define reg register\n#define p 998244353\nusing namespace std;\n\nstruct Z{\n    int v;\n    inline Z(const int _v=0):v(_v){}\n};\n\ninline Z operator + (const Z& lhs,const Z& rhs){ return lhs.v+rhs.v<p ? lhs.v+rhs.v : lhs.v+rhs.v-p; }\ninline Z operator - (const Z& lhs,const Z& rhs){ return lhs.v<rhs.v ? lhs.v-rhs.v+p : lhs.v-rhs.v; }\ninline Z operator - (const Z& x){ return x.v?p-x:0; }\ninline Z operator * (const Z& lhs,const Z& rhs){ return (ll)lhs.v*rhs.v%p; }\ninline Z& operator += (Z& lhs,const Z& rhs){ lhs.v = lhs.v+rhs.v<p ? lhs.v+rhs.v : lhs.v+rhs.v-p; return lhs; }\ninline Z& operator -= (Z& lhs,const Z& rhs){ lhs.v = lhs.v<rhs.v ? lhs.v-rhs.v+p : lhs.v-rhs.v; return lhs; }\ninline Z& operator *= (Z& lhs,const Z& rhs){ lhs.v = (ll)lhs.v*rhs.v%p; return lhs; }\ninline bool operator ! (const Z& x){ return x.v==0; }\n\nstruct poly{\n    Z a[8];\n    int t;\n    inline Z operator [] (const int& x) const{ return a[x]; }\n    inline Z& operator [] (const int& x){ return a[x]; }\n\n    inline Z eval(const int& x){\n        Z res = a[t];\n        for(reg int i=t-1;~i;--i) res = a[i]+res*x;\n        return res;\n    }\n}P[8];\n\ninline Z power(Z a,int t){\n    Z res = 1;\n    while(t){\n        if(t&1) res *= a;\n        a *= a;\n        t >>= 1;\n    }\n    return res;\n}\n\n\nZ fac[N<<1],ifac[N<<1];\n\nvoid init(int n){\n    fac[0] = fac[1] = ifac[0] = ifac[1] = 1;\n    for(reg int i=2;i<=n;++i) fac[i] = fac[i-1]*i;\n    ifac[n] = power(fac[n],p-2);\n    for(reg int i=n-1;i;--i) ifac[i] = ifac[i+1]*(i+1);\n}\n\ninline Z binom(int n,int m){\n    if(n<m||m<0) return 0;\n    return fac[n]*ifac[m]*ifac[n-m];\n}\n\nint ms,K;\n\nvoid get_formula(Z *F,int n,int deg){\n    ++n;\n    int B = (n+2)/(deg+2),C = B*(deg+1),R = n-B+1,c = 0;\n    Z mat[103][103],tmp[103];\n    for(reg int i=0;i!=R;++i)\n    for(reg int j=0;j!=B;++j){\n        Z x = F[i+j];\n        for(reg int k=0;k<=deg;++k){\n            mat[i][j*(deg+1)+k] = x;\n            x *= i+j;\n        }\n    }\n    for(reg int i=0;i!=C;++i){\n        int pt = -1;\n        for(reg int j=c;j!=R;++j){\n            if(!mat[j][i]) continue;\n            pt = j;\n            break;\n        }\n        if(pt==-1) break;\n        for(reg int j=0;j!=C;++j) swap(mat[pt][j],mat[c][j]);\n        Z w = power(mat[c][c],p-2);\n        for(reg int j=i;j!=C;++j) mat[c][j] *= w;\n        for(reg int j=c+1;j!=R;++j){\n            if(!mat[j][i]) continue;\n            Z t = mat[j][i];\n            for(reg int k=i;k!=C;++k) mat[j][k] -= mat[i][k]*t;\n        }\n        ++c;\n    }\n    for(reg int i=c-1;~i;--i){\n        if(!mat[i][c]) continue;\n        for(reg int j=i-1;~j;--j) mat[j][c] -= mat[i][c]*mat[j][i];\n    }\n    int od = c/(deg+1);\n    P[0][c%(deg+1)] = 1;\n    for(reg int i=c-1;~i;--i) P[od-i/(deg+1)][i%(deg+1)] = -mat[i][c];\n    for(reg int i=0;i<=od;++i){\n        for(reg int j=0;j<=deg;++j) tmp[j] = 0;\n        for(reg int k=0;k<=deg;++k){\n            Z S = 1;\n            for(reg int j=k;j<=deg;++j){\n                tmp[k] += P[i][j]*S;\n                S *= power(j+1-k,p-2)*(p-i)*(j+1);\n            }\n        }\n        for(reg int j=0;j<=deg;++j) P[i][j] = tmp[j];\n    }\n    ms = od,K = deg;\n}\n\ninline Z query(int n,int k){ \n    Z res = 0;\n    for(int i=0;i<=k;++i) res += binom(n,k-i)*binom(n+i-1,i);\n    return res;\n}\n\ninline void get_row(int m,Z *r){\n    static Z suf[N],ea[N];\n    int len = m>>1;\n    bool flag = len>19;\n    for(int i=0;i<=min(len,19);++i) r[i] = query(len-i+1,m-2*(len-i));\n    if(!flag) return;\n    get_formula(r,19,5);\n    suf[len] = Z(1);\n    for(int i=len-1;i>=20;--i){\n        ea[i] = P[0].eval(i);\n        suf[i] = suf[i+1]*ea[i];\n    }\n    Z Inv = power(suf[20],p-2),pre = Z(1);\n    for(int i=20;i<len;++i){\n        Z tmp = -(P[1].eval(i)*r[i-1]+P[2].eval(i)*r[i-2]);\n        r[i] = tmp*Inv*suf[i+1]*pre;\n        pre *= ea[i];\n    }\n    r[len] = m==0?1:2;\n}\n\nint n,k,m,lf,lg;\nZ f[N],g[N];\nZ ans;\n\nint main(){\n    P[0].t = P[1].t = P[2].t = 5;\n    scanf(\"%d%d%d\",&n,&k,&m);\n    init(n<<1);\n    get_row(m-2,f),get_row(m-1,g);\n    lf = m>>1,lg = m&1?(m>>1)+1:m>>1;\n    for(int i=lg;i<m;++i) ans += f[i-lg]*binom((n-i-1)<<1,k-2*i+m-2);\n    get_row(m-3,f);\n    for(int i=0;i<lg;++i) g[i] += f[i];\n    if(!(m&1)){\n        ++lg;\n        g[lg-1] = 2;\n        for(int i=lg-2;i>0;--i) g[i] = g[i-1];\n        g[0] = 0;\n        for(int i=lg-1;i<=m;++i) ans += g[i-lg+1]*binom(2*(n-i)-1,k-2*i+m-1);\n    }else\n        for(int i=lg;i<=m;++i) ans += g[i-lg]*binom(2*(n-i)-1,k-2*i+m-1);\n    if(k==(n<<1)-m) ans += query(n-k+1,k);\n    printf(\"%d\",ans.v);\n    return 0; \n}\n```",
        "postTime": 1665015161,
        "uid": 115864,
        "name": "NaCly_Fish",
        "ccfLevel": 6,
        "title": "P8559 \u5bfb\u5b9d\uff08Treasure\uff09"
    }
]