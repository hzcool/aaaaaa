[
    {
        "content": "\u8d5b\u65f6\u60f3\u4e86\u60f3\u611f\u89c9\u6ca1\u5565\u601d\u8def\uff0c\u7ed3\u679c\u6700\u540e\u5199\u4e86\u4e00\u4e2a\u9ebb\u70e6\u7684\u505a\u6cd5\u3002  \n\n\u9996\u5148\u628a\u4e0b\u98de\u673a\u4e4b\u540e\u7684\u7b49\u5f85\u65f6\u95f4\u7b97\u5230\u8fb9\u6743\u4e0a\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u666e\u901a\u7684\u6700\u77ed\u8def\u4e86\u3002  \n\u53d1\u73b0\u8d1f\u8fb9\u6743\u6700\u77ed\u8def\u672c\u8eab\u6ca1\u5565\u597d\u6027\u8d28\uff0c\u6240\u4ee5\u8003\u8651\u51fa\u53d1\u548c\u5230\u8fbe\u65f6\u95f4\u56fa\u5b9a\u8fd9\u4e00\u70b9\u3002  \n\n\u5957\u8def\u62c6\u70b9\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u53ef\u80fd\u7684\u5230\u8fbe / \u51fa\u53d1\u65f6\u95f4\u662f\u6709\u9650\u7684\uff0c\u6211\u4eec\u5c31\u62c6\u51fa\u6765\u82e5\u5e72\u4e2a\u70b9\u3002  \n\u663e\u7136\uff0c\u53ef\u4ee5\u5728\u4e00\u4e2a\u673a\u573a\u91cc\u7b49\u7740\uff0c\u6240\u4ee5\u4e00\u4e2a\u673a\u573a\u62c6\u51fa\u6765\u7684\u70b9\u6309\u65f6\u95f4\u987a\u5e8f\u8fde\u4e00\u4e2a\u94fe\u3002  \n\u81f3\u4e8e\u822a\u73ed\uff0c\u5c31\u5728\u76f8\u5e94\u7684\u65f6\u95f4\u70b9\u4e4b\u95f4\u8fde\u8fb9\u3002  \n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u628a\u6700\u77ed\u8def\u95ee\u9898\u8f6c\u5316\u6210\u4e86\u8fde\u901a\u6027\u95ee\u9898\u3002\u8dd1\u4e00\u904d BFS \u5373\u53ef\u3002  \n\n\u7531\u4e8e\u8fb9\u6570\u662f $O(n)$ \u7ea7\u522b\u7684\uff0c\u6240\u4ee5\u6700\u540e\u51fa\u6765\u7684\u603b\u70b9\u6570\u4e5f\u662f $O(n)$ \u7684\u3002  \n\u7531\u4e8e\u9700\u8981\u6309\u65f6\u95f4\u6392\u5e8f\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6 $O(n\\log n)$\u3002  \n\u5f53\u7136\uff0c\u53ef\u4ee5\u628a\u6240\u6709\u70b9\u653e\u5728\u4e00\u8d77\u57fa\u6570\u6392\u5e8f\uff0c\u5e76\u4e14\u7528\u5355\u8c03\u6307\u9488\u4ee3\u66ff\u4e8c\u5206\u67e5\u627e\u6765\u505a\u5230\u7ebf\u6027\u3002~~\u5b9e\u73b0\u5c31\u7b97\u4e86\u3002~~  \n\n\u653e\u4e0a\u849f\u84bb\u7684\u8d5b\u65f6\u4ee3\u7801\u3002  \n\n```cpp\n#include <algorithm>\n#include <stdio.h>\n#include <vector>\nusing namespace std;\n#define sz 200005\nstruct site\n{\n\tint st, stim, ed, etim;\n};\nsite dld[sz];\nint n, m, top;\nint wei[sz];\nbool vis[sz << 1 | 1];\nvector<int> tim[sz], ber[sz], fsl[sz << 1 | 1];\nint read();\nint haf(int, int);\nvoid dfs(int);\nint main()\n{\n\tint x, y;\n\tn = read(); m = read();\n\tfor (int i = 1; i <= m; ++i)\n\t{\n\t\tdld[i].st = read();\n\t\tdld[i].stim = read();\n\t\tdld[i].ed = read();\n\t\tdld[i].etim = read();\n\t}\n\tfor (int i = 1; i <= n; ++i)\n\t\twei[i] = read();\n\tfor (int i = 1; i <= m; ++i)\n\t{\n\t\ttim[dld[i].st].emplace_back(dld[i].stim);\n\t\ttim[dld[i].ed].emplace_back(dld[i].etim + wei[dld[i].ed]);\n\t}\n\tfor (int i = 1; i <= n; ++i)\n\t\tif (tim[i].size())\n\t\t{\n\t\t\tsort(tim[i].begin(), tim[i].end());\n\t\t\tx = 0;\n\t\t\tfor (int j = 1; j < tim[i].size(); ++j)\n\t\t\t\tif (tim[i][j] != tim[i][x])\n\t\t\t\t\ttim[i][++x] = tim[i][j];\n\t\t\ttim[i].resize(x + 1);\n\t\t\tfor (int j = 0; j <= x; ++j)\n\t\t\t\tber[i].emplace_back(++top);\n\t\t\tfor (int j = 1; j <= x; ++j)\n\t\t\t\tfsl[ber[i][j - 1]].emplace_back(ber[i][j]);\n\t\t}\n\tfor (int i = 1; i <= m; ++i)\n\t{\n\t\tx = haf(dld[i].st, dld[i].stim);\n\t\ty = haf(dld[i].ed, dld[i].etim + wei[dld[i].ed]);\n\t\tfsl[x].emplace_back(y);\n\t}\n\tif (ber[1].size())\n\t\tdfs(1);\n\tputs(\"0\");\n\tfor (int i = 2; i <= n; ++i)\n\t{\n\t\tx = 1;\n\t\tfor (int j = 0; j < ber[i].size(); ++j)\n\t\t\tif (vis[ber[i][j]])\n\t\t\t{\n\t\t\t\tprintf (\"%d\\n\", tim[i][j] - wei[i]);\n\t\t\t\tx = 0; break;\n\t\t\t}\n\t\tif (x)\n\t\t\tputs(\"-1\");\n\t}\n\treturn 0;\n}\n\nint read()\n{\n\tint x = 0;\n\tchar c = getchar();\n\twhile (c < '0') c = getchar();\n\tdo {\n\t\tx = x * 10 + (c & 15);\n\t\tc = getchar();\n\t}while (c >= '0');\n\treturn x;\n}\n\nint haf(int a, int b)\n{\n\tint lf = 0, rt = tim[a].size(), mid;\n\twhile (rt > lf + 1)\n\t{\n\t\tmid = lf + rt >> 1;\n\t\tif (tim[a][mid] <= b)\n\t\t\tlf = mid;\n\t\telse\n\t\t\trt = mid;\n\t}\n\treturn ber[a][lf];\n}\n\nvoid dfs(int a)\n{\n\tvis[a] = true;\n\tfor (int i : fsl[a])\n\t\tif (!vis[i])\n\t\t\tdfs(i);\n}\n\n```\n",
        "postTime": 1677713059,
        "uid": 663405,
        "name": "H_Kaguya",
        "ccfLevel": 0,
        "title": "USACO23FEB S T3 \u9898\u89e3"
    },
    {
        "content": "\u94f6\u7ec4\u91cc\u6700\u7b80\u5355\u7684\u5c31\u662f T3 \u4e86\uff0c\u4e00\u773c\u79d2\u6389\u4e86\u8fd9\u9053\u9898\u3002\n\n\u6709\u4e00\u4e2a\u663e\u7136\u7684\u7ed3\u8bba\uff0c\u4efb\u610f\u4e00\u4e2a\u822a\u73ed\u4e0d\u53ef\u80fd\u5750\u4e24\u6b21\uff0c\u56e0\u4e3a\u5b83\u7684\u5230\u8fbe\u65f6\u95f4\u662f\u76f8\u540c\u7684\u3002\n\n\u6240\u4ee5\u8fd9\u9898\u53ef\u4ee5\u4e00\u904d dfs \u89e3\u51b3\u3002\n\n\u4e0b\u9762\u662f\u5177\u4f53\u8fc7\u7a0b\uff08\u5176\u5b9e\u662f\u4f2a\u4ee3\u7801\uff09\uff1a\n\n\u9996\u5148 dfs \u9700\u8981\u8bb0\u5f55\u5f53\u524d\u7684\u65f6\u95f4\u4ee5\u53ca\u5728\u54ea\u4e2a\u673a\u573a\u3002\n\n\u6807\u8bb0\u5f53\u524d\u98de\u673a\u5750\u8fc7\u4e86\uff0c\u518d\u5750\u5c31\u6ca1\u6709\u4efb\u4f55\u610f\u4e49\u4e86\uff0c\u7136\u540e\u66f4\u65b0\u7b54\u6848\u3002\n\n\u904d\u5386\u6240\u6709\u5b83\u80fd\u591f\u5750\u7684\u98de\u673a\uff0c\u5982\u679c\u8fd9\u4e2a\u98de\u673a\u8fd8\u6ca1\u6709\u88ab\u5750\u8fc7\uff0c\u90a3\u5c31\u5750\u3002\n\n\u522b\u5fd8\u4e86 dis \u6570\u7ec4\u7684\u521d\u59cb\u503c\u3002\n\n\u53e6\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u5730\u65b9\u9700\u8981\u4f18\u5316\u3002\u5047\u5982\u6bcf\u6b21\u904d\u5386\u5b83\u80fd\u5750\u5230\u7684\u98de\u673a\uff0c\u524d\u9762\u7684\u90fd\u662f\u5750\u8fc7\u7684\u4e86\uff0c\u5c31\u4f1a\u767d\u767d\u6d6a\u8d39\u5f88\u591a\u65f6\u95f4\u590d\u6742\u5ea6\u5bfc\u81f4 TLE\u3002\n\n\u6211\u662f\u7528 ``vector`` \u5b58\u50a8\u7684\uff0c\u628a\u6bcf\u4e2a\u70b9\u51fa\u53d1\u7684\u98de\u673a\u6309\u7167\u65f6\u95f4\u6392\u5e8f\u3002\u8fd9\u6837\uff0c\u6bcf\u6b21\u80fd\u5750\u7684\u98de\u673a\u5c31\u4e00\u5b9a\u662f\u8fde\u7eed\u4e00\u5757\u3002\n\n\u7136\u540e\u6211\u8bb0\u5f55\u4e0b $n$ \u4e2a\u6570\u5b57\uff0c\u5206\u522b\u4ee3\u8868\u4ece $i$ \u53f7\u70b9\u51fa\u53d1\u7684\u98de\u673a\u7b2c\u4e00\u4e2a\u6ca1\u505a\u8fc7\u7684\u662f\u51e0\u53f7\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u6109\u5feb\u7684 AC \u4e86\u3002\n\ntalk is cheap, show me the code\uff1a\n\n\u6781\u9650 $39$ \u884c\u4ee3\u7801\uff1a\n\n```cpp\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint n, m, c;\nint e[200005], f[200005], dis[200005];\nstruct Plane {int r, d, s;} t;\nbool cmp (Plane p1, Plane p2) {return p1.r < p2.r;}\nvector <Plane> v[200005];\nvoid dfs (int x, int ti) {\n\tfor (int i = f[x]; i >= 0; i --) {\n\t\tt = v[x][i];\n\t\tif (ti > t.r) break;\n\t\telse if (i == 0) f[x] = -1;\n\t\tdis[t.d] = min (dis[t.d], t.s);\n\t\tf[x] = i - 1;\n\t\tdfs (t.d, t.s + e[t.d]);\n\t}\n}\nint main () {\n\tfor (int i = 1; i <= 200000; i ++) dis[i] = 1000000001;\n\tscanf (\"%d%d\", &n, &m);\n\tfor (int i = 1; i <= m; i ++) {\n\t\tscanf (\"%d%d%d%d\", &c, &t.r, &t.d, &t.s);\n\t\tv[c].push_back (t);\n\t}\n\tfor (int i = 1; i <= n; i ++) {\n\t\tscanf (\"%d\", &e[i]);\n\t\tf[i] = v[i].size () - 1;\n\t\tsort (v[i].begin (), v[i].end (), cmp);\n\t}\n\tdis[1] = 0;\n\tdfs (1, 0);\n\tfor (int i = 1; i <= n; i ++) {\n\t\tif (dis[i] >= 1000000001) cout << -1 << \"\\n\";\n\t\telse cout << dis[i] << \"\\n\";\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1678797908,
        "uid": 637796,
        "name": "Xy_top",
        "ccfLevel": 0,
        "title": "P9126 \u9898\u89e3"
    },
    {
        "content": "### \u601d\u8def\n\u9996\u5148\uff0c\u8fd9\u9053\u9898\u76ee\u662f\u4e00\u4e2a\u6bd4\u8f83\u660e\u663e\u7684\u56fe\u8bba\u6700\u77ed\u8def\uff0c\u4f46\u662f\u7531\u4e8e\u65f6\u95f4\u53ef\u4ee5\u4ece\u540e\u5f80\u524d\uff0c\u60f3\u76f4\u63a5\u8dd1\u6700\u77ed\u8def\u800c\u4e0d\u7528\u7384\u5b66\u65b9\u6cd5\u7684\u8bdd\u2014\u2014\u8fea\u6770\u65af\u7279\u62c9\u6015\u53ea\u6709\u6014\u6014\u5730\u671b\u7740\u7684\u4efd\u4e86\u3002\u5f53\u7136\uff0c\u662f\u5426\u6709\u7384\u5b66\u65b9\u6cd5\u6211\u5c31\u4e0d\u5f97\u800c\u77e5\u4e86\u3002\n\n#### SPFA \u7684 LLL \u4f18\u5316\n\n\u201c\u71d5\u5b50\u53bb\u4e86\uff0c\u6709\u518d\u6765\u7684\u65f6\u5019\uff1b\u6768\u67f3\u67af\u4e86\uff0c\u6709\u518d\u9752\u7684\u65f6\u5019\uff1b\u6843\u82b1\u8c22\u4e86\uff0c\u6709\u518d\u5f00\u7684\u65f6\u5019\u3002\u201d\u806a\u660e\u7684\uff0c\u4f60\u544a\u8bc9\u6211\uff0cSPFA \u6b7b\u4e86\u5c31\u6ca1\u6709\u518d\u6d3b\u7684\u65f6\u5019\u5417\uff1f\n\n\u975e\u7136\u4e5f\u3002\n\n\u6211\u4eec\u76f4\u63a5\u6309\u7167\u9898\u76ee\u7684\u8fb9\u4f5c\u4e3a\u56fe\u4e0a\u7684\u8fb9\uff0c\u8dd1 SPFA \u7b97\u6cd5\u3002\u6ce8\u610f\u4e00\u5f00\u59cb\u6211\u4eec\u5bf9\u4e00\u4e2a\u70b9\u8fde\u51fa\u53bb\u7684\u6240\u6709\u8fb9\u6392\u5e8f\uff0c\u90a3\u4e48\u8fd9\u6837\u5bf9\u4e8e SPFA \u4e2d\u679a\u4e3e\u8fb9\u7684\u65f6\u5019\u53d1\u73b0\u8fb9\u88ab\u5206\u4e3a\u4e24\u7c7b\uff0c\u521a\u597d\u662f\u4e24\u6bb5\u2014\u2014\u4e00\u6bb5\u662f\u8d77\u59cb\u65f6\u95f4\u592a\u65e9\u5bfc\u81f4\u65e0\u6cd5\u4e58\u5750\u7684\uff0c\u4f4d\u4e8e\u5176\u540e\u9762\u7684\u4e00\u6bb5\u662f\u80fd\u53bb\u62d3\u5c55\u5176\u5b83\u70b9\u7684\u8fb9\u3002\n\n\u90a3\u4e48\u6211\u4eec\u6bcf\u6b21\u7ef4\u62a4\u5206\u9694\u70b9\u7684\u4f4d\u7f6e\u5373\u53ef\u3002\n\n~~\u201c\u6211\u63a9\u9762\u53f9\u606f\uff0c\u4f46\u662f\u65b0\u6765\u7684\u65e5\u5b50\u7684\u5f71\u513f\u53c8\u5f00\u59cb\u5728\u53f9\u606f\u91cc\u95ea\u8fc7\u4e86\u201d~~\n\n\u6211\u63a9\u9762\u53f9\u606f\uff0c\u4f46\u662f\u5f3a\u5927\u7684 SPFA \u65e9\u5df2\u5728\u53f9\u606f\u91cc\u8dd1\u8fc7\u4e86\u3002\n\n\u6b64\u505a\u6cd5\u7684\u4ee3\u7801\u662f\u901a\u8fc7\u4e86\uff0c\u4f46\u662f\u6211\u5c31\u4e0d\u7ed9\u4e86\u3002\n\n#### \u8bb0\u5fc6\u5316 SPFA\n\n\u8fd9\u53ea\u80fd\u5e94\u5bf9\u6709\u7279\u6b8a\u6027\u8d28\u7684\u9898\u76ee\u3002\n\n\u8fd9\u4e2a\u505a\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u6709\u4fdd\u8bc1\uff0c\u4ee3\u7801\u53c8\u5f02\u5e38\u77ed\u3002\n\n\u9996\u5148\u8fd8\u662f\u5bf9\u8fb9\u6392\u5e8f\uff0c\u8fd8\u662f\u8dd1 SPFA \u6700\u77ed\u8def\u3002\u6539\u52a8\u7684\u53ea\u662f\u6211\u4eec\u628a\u6bcf\u6b21\u62d3\u5c55\u51fa\u53bb\u8fc7\u7684\u8fb9\u90fd\u5220\u6389\u3002\u6bd5\u7adf\u6bcf\u6761\u8fb9\u53ea\u53ef\u80fd\u5728\u7b2c\u4e00\u6b21\u904d\u5386\u5230\u65f6\u66f4\u65b0\u5176\u5b83\u70b9\uff0c\u4ece\u7b2c\u4e8c\u6b21\u5f00\u59cb\u5fc5\u5b9a\u4e0d\u4f1a\u66f4\u65b0\u6210\u529f\u3002\n\n\n```cpp\n#include <bits/stdc++.h>\n#define L(i, a, b) for(register int i = a; i <= b; i++)\n#define R(i, a, b) for(register int i = a; i >= b; i--)\nusing namespace std;\nconst int N = 2e5 + 10;\nstruct Edge{\n\tint v, s, t;\n\tfriend bool operator < (Edge a, Edge b){\n\t\treturn a.s == b.s? a.v < b.v : a.s < b.s;\n\t}\n};\nint n, m, a[N], dis[N], vis[N], id[N];\nqueue<int> q; vector<Edge> g[N];\nvoid Spfa(){\n\tL(i, 2, n) dis[i] = 2e9;\n\tvis[1] = 1, q.push(1);\n\twhile(!q.empty()){\n\t\tint u = q.front(); q.pop();\n\t\tint tm = (u == 1? 0 : dis[u] + a[u]);\n\t\twhile(id[u] && g[u][id[u] - 1].s >= tm) id[u]--;\n\t\tvis[u] = 0;\n\t\tL(i, id[u], (int)g[u].size() - 1){\n\t\t\tint v = g[u][i].v, t = g[u][i].t;\n\t\t\tif(t < dis[v]){\n\t\t\t\tdis[v] = t;\n\t\t\t\tif(!vis[v]) vis[v] = 1, q.push(v);\n\t\t\t}\n\t\t}\n\t\twhile(g[u].size() > id[u]) g[u].pop_back(); id[u] = g[u].size();\n\t}\n}\nint main(){\n\tscanf(\"%d%d\", &n, &m);\n\tL(i, 1, m){\n\t\tint u, v, s, t;\n\t\tscanf(\"%d%d%d%d\", &u, &s, &v, &t);\n\t\tg[u].push_back({v, s, t});\n\t}\n\tL(i, 1, n){\n\t\tscanf(\"%d\", &a[i]);\n\t\tsort(g[i].begin(), g[i].end()), id[i] = g[i].size();\n\t}\n\tSpfa();\n\tL(i, 1, n){\n\t\tif(dis[i] == 2e9) printf(\"-1\\n\");\n\t\telse printf(\"%d\\n\", dis[i]);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1678246736,
        "uid": 341946,
        "name": "zac2010",
        "ccfLevel": 7,
        "title": "[USACO23FEB] Moo Route II S \u9898\u89e3"
    },
    {
        "content": "\u6ce8\u610f\u5230\u822a\u73ed\u53ea\u6709 $m$ \u4e2a\uff0c\u4e5f\u5c31\u662f\u8bf4\u6700\u591a\u51fa\u73b0 $m$ \u79cd\u4e0d\u540c\u7684\u5230\u8fbe\u65f6\u95f4\uff0c\u6240\u4ee5\u51fa\u73b0\u4e00\u4e2a\u66f4\u65b0\u4e86\u7684\u8ddd\u79bb\u5c31\u628a\u5b83\u585e\u56de\u53bb\u66f4\u65b0\u5176\u5b83\u70b9\uff08spfa\uff09 \u662f $O(m^2)$ \u7684\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u7531\u4e8e\u4e0d\u7ba1\u4ee5\u4ec0\u4e48\u65f6\u95f4\u7ecf\u8fc7\u4e00\u6761\u8fb9\uff0c\u51fa\u6765\u7684\u65f6\u95f4\u90fd\u662f\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u8d70\u8fc7\u7684\u8fb9\u5c31\u6ca1\u5fc5\u8981\u518d\u8d70\u4e00\u6b21\uff0c\u8003\u8651\u5bf9\u6bcf\u4e2a\u70b9\u7684\u51fa\u8fb9\u6309\u7167 $r$ \u964d\u5e8f\u6392\u5e8f\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u5f88\u65b9\u4fbf\u8df3\u8fc7\u8d70\u8fc7\u7684\u8fb9\u4e86\uff0c\u56e0\u4e3a\u65e2\u7136\u8ddd\u79bb\u5927\u7684\u65f6\u5019\u80fd\u8fc7\u53bb\uff0c\u5c0f\u7684\u65f6\u5019\u4e5f\u80fd\u8fc7\u53bb\u3002\n\n```cpp\n#include <bits/stdc++.h>\ntypedef long long ll;\ntypedef unsigned long long ull;\nusing namespace std;\nconst int N = 2e5 + 5, inf = 2e9 + 7;\nstruct edge {\n    int v, in, out;\n    edge(int _v = 0, int _in = 0, int _out = 0) {\n        v = _v, in = _in, out = _out;\n    }\n    bool operator < (const edge &o) const {\n        return (in ^ o.in) ? (in > o.in) : (out < o.out);\n    }\n};\nvector<edge> g[N];\nint n, m, a[N], dis[N], cur[N];\nbool inq[N];\ninline void spfa() { // optimized bellman ford\n    for (int i = 1; i <= n; i++)\n        dis[i] = inf;\n    dis[1] = 0, inq[1] = true;\n    queue<int> q;\n    q.push(1);\n    while (!q.empty()) {\n        int u = q.front();\n        inq[u] = false;\n        q.pop();\n        for (int _ = cur[u]; _ < g[u].size(); _++) {\n            int v = g[u][_].v, in = g[u][_].in, out = g[u][_].out;\n            cur[u] = _;\n            if (in < dis[u] + a[u])\n                break;\n            if (out < dis[v]) {\n                dis[v] = out;\n                if (!inq[v]) {\n                    q.push(v);\n                    inq[v] = true;\n                }\n            }\n        }\n    }\n}\nsigned main() {\n    cin.tie(nullptr)->sync_with_stdio(false);\n    cin >> n >> m;\n    for (int i = 1; i <= m; i++) {\n        int c, r, d, s;\n        cin >> c >> r >> d >> s;\n        g[c].emplace_back(edge(d, r, s));\n    }\n    for (int i = 1; i <= n; i++)\n        cin >> a[i];\n    a[1] = 0;\n    for (int i = 1; i <= n; i++)\n        sort(g[i].begin(), g[i].end());\n    spfa();\n    for (int i = 1; i <= n; i++)\n        if (dis[i] != inf)\n            cout << dis[i] << '\\n';\n        else\n            cout << \"-1\\n\";\n    return 0;\n}\n```",
        "postTime": 1678149707,
        "uid": 434929,
        "name": "Usada_Pekora",
        "ccfLevel": 7,
        "title": "P9126 spfa"
    },
    {
        "content": "**\u9898\u610f**\n\n\u6709 $M$ \u6761\u6709\u5411\u822a\u73ed\u8fde\u63a5 $N$ \u4e2a\u673a\u573a\u3002\u4e00\u6761\u822a\u73ed $(c,r,d,s)$ \u4ee3\u8868\u5b83\u80fd\u8ba9\u4f60\u5728 $r$ \u65f6\u95f4\u4ece $c$ \u673a\u573a\u5f00\u59cb\uff0c\u5728 $s$ \u65f6\u95f4\u5230\u8fbe $d$ \u673a\u573a\u3002\u6ce8\u610f\uff01\u6b64\u5904\u53ef\u80fd $c=d$\uff0c\u9898\u76ee\u7ffb\u8bd1\u6709\u8bef\u3002\u5f53\u4f60**\u4e58\u5750\u822a\u73ed**\u5230\u8fbe $i$ \u673a\u573a\u65f6\uff0c\u4f60\u9700\u8981\u7b49\u5f85\u81f3\u5c11 $a_i$ \u65f6\u95f4\u4e4b\u540e\u8f6c\u673a\u3002\u4f60\u5728 $0$ \u65f6\u95f4\u4ece $1$ \u673a\u573a\u5f00\u59cb\u3002\u95ee\u5bf9\u4e8e $i \\in [1,N]$\uff0c\u4f60\u6700\u65e9\u4ec0\u4e48\u65f6\u5019\u8e0f\u5165 $i$ \u673a\u573a\u3002\n\n$N,M \\le 2 \\times 10^5,0 \\le a_i \\le 10^9$\u3002\n\n**\u5206\u6790**\n\n\u5927\u591a\u6570\u9898\u89e3\u90fd\u662f\u7528\u7684\u6700\u77ed\u8def\u554a...\u600e\u4e48\u6211\u5c31\u6ca1\u60f3\u5230\u6700\u77ed\u8def\u600e\u4e48\u5efa\u6a21...\n\n~~\u6240\u4ee5\u6211\u5199\u4e86\u4e2a\u590d\u6742\u5ea6\u66f4\u4f18\u7684\u7b97\u6cd5~~\n\n\u4e00\u4e2a\u91cd\u8981\u7684\u6027\u8d28\uff1a\u6bcf\u4e2a\u822a\u73ed\u662f\u4e0d\u4f1a\u88ab\u91cd\u590d\u4e58\u5750\u7684\u3002\u56e0\u4e3a\uff0c\u4e0d\u7ba1\u4f60\u5728\u4ec0\u4e48\u524d\u63d0\u4e0b\u4e58\u5750\u4e86\u67d0\u4e2a\u822a\u73ed\uff0c\u8fd9\u4e2a\u822a\u73ed\u5bf9\u4f60\u9020\u6210\u7684\u5f71\u54cd\u662f\u5b8c\u5168\u76f8\u540c\u7684\u3002\n\n\u8fd9\u8ba9 $O(M)$ \u7684 dfs \u5b9e\u73b0\u6210\u4e3a\u53ef\u80fd\u3002\n\n\u4ece $1$ \u70b9\u5f00\u59cb dfs\u3002\u679a\u4e3e\u6240\u6709\u79bb\u6e2f\u822a\u73ed\uff0c\u82e5\u8be5\u822a\u73ed\u672a\u88ab\u4e58\u5750\u4e14\u65f6\u95f4\u5408\u6cd5\uff0c\u5219\u4e58\u5750\uff0c\u5e76\u66f4\u65b0\u822a\u73ed\u7ec8\u70b9\u7684\u7b54\u6848\uff1b\u5426\u5219\u4e0d\u4e58\u5750\u3002\n\n\u8fd9\u6837\u505a\u662f $O(NM)$ \u7684\uff0c\u8003\u8651\u526a\u679d\u3002\n\n\u5c06\u4e00\u4e2a\u673a\u573a\u51fa\u53d1\u7684\u822a\u73ed\u6309 $r$ **\u964d\u5e8f** \u6392\u5e8f\u3002\u679a\u4e3e\u51fa\u53d1\u822a\u73ed\u65f6\uff0c\u5982\u679c\u5f53\u524d\u679a\u4e3e\u5230\u7684\u822a\u73ed\u5df2\u7ecf\u51fa\u53d1\u7684\u592a\u65e9\u4e86\uff0c\u5c31 `break` \u6389\u3002\n\n\u4f9d\u65e7\u662f $O(NM)$\u3002\n\n\u56e0\u4e3a\uff0c\u6211\u4eec\u4f1a\u591a\u6b21\u8bbf\u95ee\u4e00\u4e2a\u673a\u573a\uff0c\u6bcf\u6b21\u90fd\u8981\u679a\u4e3e\u5b83\u7684\u5927\u591a\u6570\u51fa\u8fb9\uff08\u5176\u4e2d\u7edd\u5927\u591a\u6570\u679a\u4e3e\u90fd\u662f\u91cd\u590d\u7684\uff09\u3002\u8003\u8651\u5b58\u50a8 $ind_i$ \u4ee3\u8868 $i$ \u70b9\u4e0a\u4e00\u6b21\u679a\u4e3e\u5230\u4e86\u54ea\u91cc\uff0c\u4e0b\u6b21\u4ece\u8fd9\u91cc\u5f00\u59cb\u679a\u4e3e\u3002\u8fd9\u6837\u6bcf\u6761\u8fb9\u53ea\u4f1a\u7ecf\u8fc7 $1$ \u6b21\u679a\u4e3e\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O(M)$\uff08\u6216\u8005\u8bf4 $O(N+M)$\uff09\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN=2e5+5;\nint dis[MAXN],a[MAXN];\nint N,M;\nbool vis[MAXN];\nint ind[MAXN];\nstruct Airline\n{\n\tint c,r,d,s;\n}air[MAXN];\nvector<int>vec[MAXN];\nbool cmp(int i,int j)\n{\n\treturn air[i].r>air[j].r;\n}\nvoid dfs(int u,int tim)\n{\n\tfor(int i=ind[u];i<vec[u].size();i++)\n\t{\n\t\tint id=vec[u][i];\n\t\tAirline nxt=air[id];\n\t\tif(nxt.r<tim) break;\n\t\tif(vis[id]) continue;\n\t\tdis[nxt.d]=min(dis[nxt.d],nxt.s);\n\t\tvis[id]=1;\n\t\tind[u]++;\n\t\tdfs(nxt.d,nxt.s+a[nxt.d]);\n\t}\n\treturn;\n}\nint main()\n{\n    scanf(\"%d %d\",&N,&M);\n    for(int i=1;i<=M;i++)\n    {\n\t\tint c,r,d,s;\n\t\tscanf(\"%d %d %d %d\",&c,&r,&d,&s);\n\t\tair[i]={c,r,d,s};\n\t\tvec[c].push_back(i);\n\t}\n\tfor(int i=1;i<=N;i++)\n\t{\n\t\tdis[i]=1e9+1;\n\t\tscanf(\"%d\",&a[i]);\n\t\tsort(vec[i].begin(),vec[i].end(),cmp);\n\t\tind[i]=0;\n\t}\n\tdis[1]=0;\n\tdfs(1,0);\n\tfor(int i=1;i<=N;i++) printf(\"%d\\n\",dis[i]==1e9+1?-1:dis[i]);\n    return 0;\n}\n```\n",
        "postTime": 1680428220,
        "uid": 378706,
        "name": "MoyunAllgorithm",
        "ccfLevel": 0,
        "title": "[USACO23FEB] Moo Route \u2161 S"
    }
]