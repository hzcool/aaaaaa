[
    {
        "content": "\u9898\u76ee\u5730\u5740\uff1a[P5302 [GXOI/GZOI2019]\u7279\u6280\u98de\u884c](https://www.luogu.org/problemnew/show/P5302)\n\n\u8fd9\u91cc\u662f\u5b98\u65b9\u9898\u89e3\uff08by lydrainbowcat\uff09\n\n### \u9898\u610f\n\n\u7ed9 $10^5$ \u6761\u76f4\u7ebf\uff0c\u7ed9 $x = st$ \u548c $x = ed$ \u4e24\u4e2a\u4f4d\u7f6e\n\n\u5728\u4e24\u6761\u76f4\u7ebf $l1,l2$ \u4ea4\u70b9\uff0c\u53ef\u4ee5\u4ea4\u6362 $l1,l2$ \u63a5\u4e0b\u6765\u7684\u90e8\u5206\uff08\u53d8\u6210\u4e24\u6761\u6298\u7ebf\uff09\n\n\u4ea4\u6362\u6216\u4e0d\u4ea4\u6362\u5206\u522b\u53ef\u4ee5\u83b7\u5f97\u56fa\u5b9a\u7684\u5206\u6570 $a$ \u548c $b$\n\n\u53e6\u5916\u6709 $10^5$ \u4e2a\u89c2\u6d4b\u70b9\u53ef\u4ee5\u89c2\u6d4b\u5230\u4e00\u5b9a\u8303\u56f4\u5185\u60c5\u51b5\uff08\u66fc\u54c8\u987f\u8ddd\u79bb\uff09\uff0c\u5728\u89c2\u6d4b\u8303\u56f4\u5185\u7684\u70b9\u989d\u5916\u8ba1\u5206 $c$\n\n\u8981\u6c42\u6700\u540e\u5728 $x = st$ \u5904\u548c $x = ed$ \u5904\uff0c\u76f4\u7ebf\u4fdd\u6301\u76f8\u540c\u7684\u987a\u5e8f\n\n\u95ee\u5982\u4f55\u4ea4\u6362\u53ef\u4ee5\u83b7\u5f97\u6700\u9ad8\u7684\u5f97\u5206\u3002\u4fdd\u8bc1\u4ea4\u70b9\u5c0f\u4e8e\u7b49\u4e8e $5*10^5$ \u4e2a\n\n### \u89e3\u6cd5\n\n\u8fd9\u5176\u5b9e\u662f\u4e24\u4e2a\u9898\u7684\u62fc\u63a5\n\n\u9996\u5148\uff0c\u82e5 $a>b$ \uff0c\u8bf4\u660e\u4ea4\u6362\u8d8a\u591a\u8d8a\u597d\u3002\u5b9e\u9645\u4e0a\u6240\u6709\u4ea4\u70b9\u90fd\u53ef\u4ee5\u4ea4\u6362\uff0c\u56e0\u4e3a\u4ea4\u70b9\u4e2a\u6570\u6070\u597d\u662f\u9006\u5e8f\u5bf9\u6570\uff0c\u6240\u6709\u9006\u5e8f\u5bf9\u90fd\u4ea4\u6362\u4e00\u4e0b\u6700\u540e\u6b63\u597d\u53d8\u6210\u6b63\u5e8f\n\n\u82e5 $a<b$ \uff0c\u4ea4\u6362\u6b21\u6570\u4e3a $n - $ \u7f6e\u6362\u6570\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u7f6e\u6362\u4e4b\u95f4\u7684\u4e92\u76f8\u72ec\u7acb\u7684\uff0c\u53ef\u4ee5\u4e0d\u53c2\u4e0e\u4ea4\u6362\u3002\u6bcf\u4e2a\u7f6e\u6362\u5185\u90e8\u5176\u5b9e\u90fd\u7b49\u4ef7\u4e8e\u4e00\u4e2a\u73af\uff085-1-2-3-4\u8fd9\u6837\u7684\uff09\uff0c\u4ea4\u6362\u6b21\u6570\u4e3a $len-1$ \uff0c\u6545\u603b\u6b21\u6570\u4e3a $\\sum\\ (len - 1) = n - $ \u7f6e\u6362\u6570\u3002\n\n\u6240\u6709\u4ea4\u70b9\u53ef\u4ee5\u7528\u7c7b\u4f3c\u4e8e\u6392\u5e8f\u7684\u65b9\u6cd5 $O(n)$ \u9884\u5904\u7406\uff0c\u5750\u6807\u8f6c $45$ \u5ea6\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u82e5\u5e72\u4e2a\u70b9\uff08\u4e8b\u4ef6\uff09\uff0c\u8fd8\u6709\u82e5\u5e72\u4e2a\u6b63\u65b9\u5f62\uff08\u62c6\u6210\u4e24\u4e2a\u4e8b\u4ef6\uff09\u7684\u626b\u63cf\u7ebf\u95ee\u9898\n\n\u626b\u63cf\u7ebf + \u6811\u72b6\u6570\u7ec4\u5373\u53ef\n\n```cpp\n#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#define MAX_NR 100010\nconst long double eps = 1e-9;\nint N, A, B, C, ST_X, ED_X, M;\n\nstruct Point {\n\tlong double x, y;\n\tPoint() = default;\n\tPoint(int x_, int y_) :\n\t\tx(x_), y(y_) {}\n\tPoint(long double x_, long double y_) :\n\t\tx(x_), y(y_) {}\n} point[MAX_NR * 2];\n\nstruct Event {\n\tlong double x;\n\tint y0, y1, op;\n\tEvent() = default;\n\tEvent(int x_, int y0_, int y1_, int op_) :\n\t\tx(x_), y0(y0_), y1(y1_), op(op_) {}\n\tEvent(long double x_, int y_) :\n\t\tx(x_), y0(y_), y1(y_), op(0) {}\n\tinline bool operator < (const Event &a) const {\n\t\tif (fabs(x - a.x) > eps) {\n\t\t\treturn x < a.x;\n\t\t} else if (op != a.op) {\n\t\t\treturn op > a.op;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n};\n\nstd::vector<Point> inter;\n\ninline Point get_intersection(Point a, Point b, Point c, Point d) {\n\tlong double a1 = b.y - a.y;\n\tlong double b1 = a.x - b.x;\n\tlong double c1 = a1 * a.x + b1 * a.y;\n\n\tlong double a2 = d.y - c.y;\n\tlong double b2 = c.x - d.x;\n\tlong double c2 = a2 * c.x + b2 * c.y;\n\n\tlong double determinant = a1 * b2 - a2 * b1;\n\n\tif (determinant == 0) {\n\t\treturn { -1, -1 };\n\t} else {\n\t\tlong double x = (b2*c1 - b1 * c2) / determinant;\n\t\tlong double y = (a1*c2 - a2 * c1) / determinant;\n\t\treturn { x, y };\n\t}\n}\n\nnamespace BIT {\n\n\tint N;\n\tint b[MAX_NR * 20];\n\n\tvoid init(int n) {\n\t\tN = n;\n\t\tmemset(b, 0, sizeof(b));\n\t}\n\n\tint query(int x) {\n\t\tint res = 0;\n\t\tfor (int i = x; i > 0; i -= i & (-i)) {\n\t\t\tres += b[i];\n\t\t}\n\t\treturn res;\n\t}\n\n\tvoid update(int x, int v) {\n\t\tfor (int i = x; i <= N; i += i & (-i)) {\n\t\t\tb[i] += v;\n\t\t}\n\t}\n}\n\nbool cmp(int i,int j) {\n\treturn point[N + i].y < point[N + j].y;\n}\n\nint main() {\n\tscanf(\"%d%d%d%d%d%d\", &N, &A, &B, &C, &ST_X, &ED_X);\n\tfor (int i = 0, x, y; i < N * 2; ++i) {\n\t\tscanf(\"%d\", &y);\n\t\tx = (i < N ? ST_X : ED_X);\n\t\tpoint[i] = { x, y };\n\t}\n\n\tstd::vector<int> p(N), rank(N), a(N), v(N);\n\tfor (int i = 0; i < N; ++i) {\n\t\ta[i] = rank[i] = i;\n\t\tv[i] = 0;\n\t}\n\n\tstd::sort(rank.begin(), rank.end(), cmp);\n\n\tfor (int i = 0; i < N; ++i) {\n\t\tp[rank[i]] = i;\n\t}\n\n\tint nr_cross = N;\n\tfor (int i = 0; i < N; ++i) {\n\t\tif (v[i]) continue;\n\t\tnr_cross--;\n\t\tint x = p[i];\n\t\twhile (x != i) {\n\t\t\tv[x] = 1;\n\t\t\tx = p[x];\n\t\t}\n\t}\n\n\tfor (int i = 0; i < N; ++i) {\n\t\tfor (int j = i; ; ++j) {\n\t\t\tif (i == p[j]) {\n\t\t\t\tint aj = a[j];\n\t\t\t\tfor (int k = j - 1; k >= i; --k) {\n\t\t\t\t\tPoint cur = get_intersection(\n\t\t\t\t\t                point[a[k]], point[a[k] + N],\n\t\t\t\t\t                point[aj], point[aj + N]);\n\t\t\t\t\tinter.push_back(Point(cur.x + cur.y, cur.x - cur.y));\n\t\t\t\t\tstd::swap(p[k], p[k + 1]);\n\t\t\t\t\ta[k + 1] = a[k];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tscanf(\"%d\", &M);\n\tstd::vector<long double> Y(M * 2 + inter.size());\n\tstd::vector<Event> events(M * 2 + inter.size());\n\tfor (int i = 0, x, y, r; i < M; ++i) {\n\t\tscanf(\"%d%d%d\", &x, &y, &r);\n\t\tint x_ = x, y_ = y;\n\t\tx = x + y, y = x_ - y_;\n\t\tevents[i] = { x - r, y - r, y + r, 1 };\n\t\tevents[i + M] = { x + r, y - r, y + r, -1 };\n\t\tY[i] = y - r;\n\t\tY[i + M] = y + r;\n\t}\n\tfor (int i = 0; i < inter.size(); ++i) {\n\t\tY[2 * M + i] = inter[i].y;\n\t}\n\tstd::sort(Y.begin(), Y.end());\n\t// Y.resize(std::unique(Y.begin(), Y.end()) - Y.begin());\n\tint pos = 0;\n\tfor (int i = 0; i < Y.size(); i++)\n\t\tif (i == 0 || fabs(Y[i] - Y[i - 1]) > eps) Y[pos++] = Y[i];\n\tY.resize(pos);\n\tfor (int i = 0; i < 2 * M; ++i) {\n\t\tevents[i].y0 = std::lower_bound(Y.begin(), Y.end(), events[i].y0) - Y.begin() + 1;\n\t\tevents[i].y1 = std::lower_bound(Y.begin(), Y.end(), events[i].y1) - Y.begin() + 1;\n\t}\n\tfor (int i = 0; i < inter.size(); ++i) {\n\t\tint y = std::lower_bound(Y.begin(), Y.end(), inter[i].y) - Y.begin() + 1;\n\t\tevents[2 * M + i] = { inter[i].x, y };\n\t}\n\tstd::sort(events.begin(), events.end());\n\n\tint nr_observed = 0;\n\tBIT::init(2 * Y.size());\n\tfor (int i = 0; i < events.size(); i++) {\n\t\tEvent e = events[i];\n\t\tif (e.op) {\n\t\t\tBIT::update(e.y0, e.op);\n\t\t\tBIT::update(e.y1 + 1, -e.op);\n\t\t} else {\n\t\t\tnr_observed += BIT::query(e.y0) > 0;\n\t\t}\n\t}\n\n\tint nr_inv = inter.size();\n\tint score_observed = nr_observed * C;\n\tint max_score = A * nr_inv;\n\tint min_score = A * nr_cross + B * (nr_inv - nr_cross);\n\tif (A < B) {\n\t\tstd::swap(min_score, max_score);\n\t}\n\tstd::cout << min_score + score_observed << ' ' << max_score + score_observed << std::endl;\n\treturn 0;\n}\n```",
        "postTime": 1555436019,
        "uid": 100544,
        "name": "xht",
        "ccfLevel": 9,
        "title": "P5302 [GXOI/GZOI2019]\u7279\u6280\u98de\u884c"
    },
    {
        "content": "\u8fd9\u9053\u9898\u663e\u7136\u662f\u7531\u4e09\u4e2a\u90e8\u5206\u7ec4\u6210\u7684\uff1a\n1. \u627e\u5230\u6240\u6709\u7684\u76f4\u7ebf\u4ea4\u70b9\n2. \u7edf\u8ba1\u6bcf\u4e00\u4e2a\u70b9\u662f\u5426\u88ab\u77e9\u5f62\u8986\u76d6\n3. \u51b3\u5b9a\u3010\u64e6\u8eab\u800c\u8fc7\u3011\u7279\u6280\u7684\u6700\u591a\u6b21\u6570\n\n\u9996\u5148\u662f\u90e8\u5206\u4e00\uff0c\u5bb9\u6613\u89c2\u5bdf\u5230$y_{x,1}$\u6570\u7ec4\u7684\u6bcf\u4e00\u4e2a\u9006\u5e8f\u5bf9\u5bf9\u5e94\u4e00\u4e2a\u4ea4\u70b9\u3002\u6240\u4ee5\u53ea\u8981CDQ\u6216\u8005set\u6c42\u51fa\u6240\u6709\u7684\u9006\u5e8f\u5bf9\uff0c\u7136\u540e\u5199\u4e00\u4e2a\u76f4\u7ebf\u6c42\u4ea4\u70b9\u5373\u53ef\u3002\u76f4\u63a5\u4e0a\u8ba1\u7b97\u51e0\u4f55\u677f\u5b50\u5373\u53ef\u3002\u7531\u4e8e\u6b64\u9898\u4e2d\u7684\u659c\u7387\u4e0d\u4f1a\u662f$\\infty$\uff0c\u6240\u4ee5\u4e5f\u53ef\u4ee5\u89e3\u6790\u66b4\u529b\u3002\n\n\u7136\u540e\u662f\u90e8\u5206\u4e8c\uff0c\u8fd9\u91cc\u4e0d\u9700\u8981kd-tree\u6216\u8005\u6811\u5957\u6811\u3002\u53ef\u4ee5\u5148\u628a\u5750\u6807\u7cfb\u8f6c$45\\degree$\uff0c\u5373$(x,y)\\rightarrow(x+y,y-x)$\uff0c\u7136\u540e\u5c31\u53d8\u6210\u4e86\u77e9\u5f62\u52a0\u5355\u70b9\u6c42\u548c\u3002\u53ef\u4ee5\u5dee\u5206\uff0c\u5c31\u53d8\u6210\u4e86\u5355\u70b9\u52a0\u77e9\u5f62\u6c42\u548c\u3002\u4e8e\u662f\u53ef\u4ee5\u79bb\u7ebf+\u626b\u63cf\u7ebf\uff0c\u7528\u4e00\u4e2a\u7ebf\u6bb5\u6811\u6216BIT\u7ef4\u62a4\u5373\u53ef\u3002\u6b64\u5904\u8981\u6ce8\u610f\u5b9e\u6570\u5750\u6807\u7684\u7cbe\u5ea6\u8bef\u5dee\u3002\n\n\u6700\u540e\u662f\u90e8\u5206\u4e09\uff0c\u9996\u5148\u53ef\u4ee5\u6ce8\u610f\u5230\uff0c\u6bcf\u6b21\u4e24\u6761\u822a\u7ebf\u76f8\u4ea4\u5c31\u76f8\u5f53\u4e8e\u4ea4\u6362\u4e00\u4e2a\u6392\u5217\u4e2d\u7684\u76f8\u90bb\u4e24\u4e2a\u6570\u3002\u6240\u4ee5\u53ef\u4ee5\u628a\u6240\u6709\u4ea4\u70b9\u6309\u7167\u4ece\u5de6\u5f80\u53f3\u987a\u5e8f\u5199\u6210\u4e00\u4e2a\u5e8f\u5217\uff0c\u6bd4\u5982$[(1,2),(2,3),(3,4),(2,3),(1,2)]$\u3002\u6211\u9996\u5148\u60f3\u5230\u7684\u662f\u4e00\u4e2a\u5047\u7b97\u6cd5\uff0c\u628a\u6bcf\u4e2a\u6570\u5bf9\u7684\u7b2c\u4e00\u6b21\u51fa\u73b0\u5f53\u6210\u5de6\u62ec\u53f7\uff0c\u7b2c\u4e8c\u6b21\u5f53\u6210\u53f3\u62ec\u53f7\uff0c\u6bd4\u5982\u521a\u624d\u7684\u5e8f\u5217\u5c31\u5199\u6210`([{])`\u3002\u7136\u540e\u6d88\u53bb\u5c3d\u91cf\u591a\u6784\u6210\u5408\u6cd5\u62ec\u53f7\u5e8f\u5217\u7684\u62ec\u53f7\u5bf9\u3002\u53ef\u60dc\u8fd9\u6837\u505a\u662f\u6709\u53cd\u4f8b\u7684\uff0c\u6bd4\u5982\u4e0b\u9762\u7684\u56fe\u3002\n\n![](https://i.loli.net/2019/04/16/5cb59c77e5272.png\n)\n\n\u4ea4\u70b9\u5e8f\u5217\u662f$[(1,2),(2,3),(3,4),(1,2),(4,5),(2,3),(1,2),(3,4),(2,3)]$\uff0c\u7136\u800c\u6700\u4f18\u89e3\u662f\u6d88\u53bb$[(1,2),(2,3),(1,2),(2,3),(1,2),(2,3)]$\u3002\n\n\u5c31\u5728\u624b\u5de5\u6a21\u62df\u8fd9\u4e2a\u53cd\u4f8b\u7684\u65f6\u5019\uff0c\u6211\u53d1\u73b0\u4e86\u4e00\u4e9b\u89c4\u5f8b\uff1a\u8c8c\u4f3c**\u5de6\u4fa7\u6700\u4e0a\u65b9\u7684\u70b9\u548c\u53f3\u4fa7\u6700\u4e0a\u65b9\u7684\u70b9\u4e4b\u95f4\u7684\u6298\u7ebf\u6700\u591a\u53ea\u4f1a\u6709\u4e24\u6bb5**\u3002\u4e8e\u662f\u6211\u53ef\u4ee5\u628a\u8fd9\u4e24\u6bb5\u6d88\u53bb\uff0c\u628a\u5269\u4e0b\u7684\u534a\u6bb5\u6298\u7ebf\u5f3a\u884c\u63b0\u76f4\u3002\u6bd4\u5982\u4e0a\u9762\u7684\u56fe\u7b2c\u4e00\u6b21\u6d88\u53bb\u4e4b\u540e\u662f\u8fd9\u6837\u7684\n![](https://i.loli.net/2019/04/16/5cb59ec1d392e.png)\n\n\u6bcf\u6b21\u63b0\u76f4\u4e00\u6bb5\u6298\u7ebf\u65f6\uff0c\u3010\u5bf9\u5411\u4ea4\u6362\u3011\u7684\u6b21\u6570\u52a01\u3002\u7136\u540e\u4f3c\u4e4e\u8d2a\u5fc3\u7684\u9012\u5f52\u4e0b\u53bb\u505a\u5c31\u662f\u5bf9\u7684\u4e86\u3002**\u672c\u4eba\u65e0\u6cd5\u8bc1\u660e\u5176\u6b63\u786e\u6027\u3002**\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define eps 1e-12\nusing namespace std;\nusing ll=long long;\nconst int maxn=1<<20;\nstruct point{double x,y;};\npoint operator-(point a,point b){return{a.x-b.x,a.y-b.y};}\npoint operator+(point a,point b){return{a.x+b.x,a.y+b.y};}\npoint operator*(double a,point b){return {b.x*a,b.y*a};}\ndouble operator*(point a,point b){return a.x*b.y-a.y*b.x;}\npoint jd(point a,point b,point c,point d){\n\treturn a+((c-a)*(d-c))/((b-a)*(d-c))*(b-a);\n}\nstruct segTree{\n\tint a[1<<24],L[1<<24],R[1<<24],tot,rt;\n\tvoid ins(int x,int v,int&p,int tl=-2e8,int tr=2e8){\n\t\tif(!p)p=++tot;\n\t\tif(tl==tr){a[p]+=v;return;}\n\t\tint mid=tl+tr>>1;\n\t\tif(x<=mid)ins(x,v,L[p],tl,mid);else ins(x,v,R[p],mid+1,tr);\n\t\ta[p]=a[L[p]]+a[R[p]];\n\t}\n\tint qry(int l,int r,int p=1,int tl=-2e8,int tr=2e8){\n\t\tif(l<=tl&&tr<=r)return a[p];\n\t\tint mid=tl+tr>>1,re=0;\n\t\tif(l<=mid)re=qry(l,r,L[p],tl,mid);\n\t\tif(r>mid)re+=qry(l,r,R[p],mid+1,tr);\n\t\treturn re;\n\t}\n}tr;\nint n,A,B,C,x0,x1,k,Y0[maxn],m,rnk[maxn],sa[maxn];\nll ans;\nstruct st{int v,id;}a[maxn],b[maxn];\nstruct ev{double x,y;int tp,vl;};vector<ev> e;\nvoid cdq(int l,int r){\n\tif(l==r)return;\n\tint mid=l+r>>1; cdq(l,mid),cdq(mid+1,r);\n\tint i=l,j=mid+1,k=0;\n\twhile(i<=mid||j<=r)\n\t\tif(j>r||i<=mid&&a[i].v<a[j].v){\n\t\t\tfor(int t=mid+1;t<j;t++,m++){\n\t\t\t\tpoint p=jd({x0,Y0[a[i].id]},{x1,a[i].v},\n\t\t\t\t{x0,Y0[a[t].id]},{x1,a[t].v});\n\t\t\t\te.push_back({p.x+p.y,p.y-p.x,1,0});\n\t\t\t}\n\t\t\tb[++k]=a[i++];\n\t\t}else b[++k]=a[j++];\n\tcopy(b+1,b+1+k,a+l);\n}\nint main(){\n\tscanf(\"%d%d%d%d%d%d\",&n,&A,&B,&C,&x0,&x1);\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",Y0+i),sa[i]=i;\n\tfor(int i=1,x;i<=n;i++)scanf(\"%d\",&x),a[i]={x,i};\n\tsort(sa+1,sa+1+n,[](int x,int y){return a[x].v<a[y].v;});\n\tfor(int i=1;i<=n;i++)rnk[sa[i]]=i;\n\tscanf(\"%d\",&k);\n\twhile(k--){\n\t\tint p,q,r;scanf(\"%d%d%d\",&p,&q,&r);\n\t\te.insert(e.end(),{\n\t\t\t{p+q-r-eps,q-r-p,0,1},{p+q-r-eps,q+r-p,0,-1},\n\t\t\t{p+q+r+eps,q-r-p,0,-1},{p+q+r+eps,q+r-p,0,1}});\n\t}\n\tcdq(1,n);\n\tsort(e.begin(),e.end(),[](ev a,ev b){return a.x<b.x;});\n\tfor(ev&x:e)if(!x.tp)tr.ins(x.y,x.vl,tr.rt);else\n\t\tif(tr.qry(-2e8,floor(x.y-eps)))ans+=C;\n\t//\u6b64\u5904\u5fc5\u987b\u8981floor\uff0c\u56e0\u4e3a\u628adouble\u8f6c\u6210int\u9ed8\u8ba4\u662f\u5411\u96f6\u53d6\u6574\n\tll x=1ll*m*A+ans;int cnt=0;\n\tfor(int i=1;i<=n;i++){\n\t\tint p=rnk[i],q=sa[i];\n\t\tif(p!=i){\n\t\t\tsa[p]=q,rnk[q]=p;\n\t\t\tcnt++;\n\t\t}\n\t}\n\tll y=1ll*cnt*A+1ll*(m-cnt)*B+ans;\n\tprintf(\"%lld %lld\\n\",min(x,y),max(x,y));\n\treturn 0;\n}\n```",
        "postTime": 1555406875,
        "uid": 30093,
        "name": "cosmicAC",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5302 \u3010[GXOI/GZOI2019]\u7279\u6280\u98de\u884c\u3011"
    },
    {
        "content": "## Preface\n\n\u7f1d\u5408\u9898\u523a\u6fc0\u3002\n\n\u597d\u6b38\uff0c[\u9ec4\u9898 \u9006\u5e8f\u5bf9](https://www.luogu.com.cn/problem/P1908) $+$ [\u84dd\u9898\u3010\u6a21\u677f\u3011\u626b\u63cf\u7ebf](https://www.luogu.com.cn/problem/P5490) $=$ \u672c\u9ed1\u9898\u3002\n\n## Analysis\n\n\u53d1\u73b0 \u7279\u6280\u98de\u884c\u7684\u5f97\u5206 \u548c \u5609\u5bbe\u89c2\u6d4b\u7684\u5f97\u5206 \u53ef\u4ee5\u5206\u5f00\u7b97\u3002\n\n### \u7279\u6280\u98de\u884c\u5f97\u5206\n\n\u8fd9\u90e8\u5206\u7684\u5f97\u5206\u4e0d\u662f\u56fa\u5b9a\u7684\u3002\n\n\u6211\u4eec\u5148\u7b97\u51fa\u4ea4\u53c9\u70b9\u4e2a\u6570\uff08\u9006\u5e8f\u5bf9\u601d\u60f3\uff09\u3002\n\n#### \u300c\u5bf9\u5411\u4ea4\u6362\u300d\u6700\u591a\n\n\u5373\u6240\u6709\u4ea4\u53c9\u70b9\u90fd\u662f\u300c\u5bf9\u5411\u4ea4\u6362\u300d\u3002\n\n#### \u300c\u5bf9\u5411\u4ea4\u6362\u300d\u6700\u5c11\n\n\u5c06\u98de\u884c\u5458\u6309\u8d77\u70b9\u9ad8\u5ea6\u6392\u5e8f\uff0c\u4ed6\u4eec\u7ec8\u70b9\u9ad8\u5ea6 rank \u7684\u6392\u5217\u8bbe\u4e3a $p_1,p_2,\\dots,p_n$\u3002\n\n\u8bbe $cy$ \u4e3a $\\{p\\}$ \u7f6e\u6362\u73af\u7684\u4e2a\u6570\u3002\n\n\u300c\u5bf9\u5411\u4ea4\u6362\u300d\u6700\u5c11 $n-cy$ \u4e2a\u3002\u56e0\u4e3a\u624b\u73a9\u4e00\u4e0b\u53d1\u73b0\u6bcf\u4e00\u4e2a\u7f6e\u6362\u73af\uff08\u8bbe\u4e2a\u6570\u4e3a $len$\uff09\u81f3\u5c11\u8981 $len-1$ \u6b21\u300c\u5bf9\u5411\u4ea4\u6362\u300d\u3002\u8bc1\u660e\u4e0d\u96be\u3002\n\n### \u5609\u5bbe\u89c2\u6d4b\u5f97\u5206\n\n\u8fd9\u90e8\u5206\u7684\u5f97\u5206\u662f\u56fa\u5b9a\u7684\u3002\n\n\u53d1\u73b0\u5609\u5bbe\u89c2\u6d4b\u8303\u56f4\u5c31\u662f\u4e00\u4e2a\u659c $45^{\\circ}$ \u7684\u6b63\u65b9\u5f62\uff0c\u6211\u4eec\u7528\u77e9\u9635\u4e58\u6cd5\u5c06\u5750\u6807\u7cfb\u65cb\u8f6c $45^{\\circ}$\uff0c\u5c31\u662f\u6a21\u677f\u626b\u63cf\u7ebf\u4e86\u3002\n\n\u626b\u63cf\u7ebf\u751a\u81f3\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u3002\n\n## Code\n\n\uff08\u4e11\u6b7b\uff0c\u4f46\u662f\u8fd8\u662f\u8d34\u4e86\uff09\n\n```cpp\n//Said no more counting dollars. We'll be counting stars.\n#include<bits/stdc++.h>\nusing namespace std;\n#define IOS ios::sync_with_stdio(0);cin.tie(0);cout.tie(0)\n#define fir first\n#define sec second\n#define mkp make_pair\n#define pb emplace_back\n#define mem(x,y) memset(x,y,sizeof(x))\n#define For(i,j,k) for(int i=j;i<=k;i++)\n#define Rof(i,j,k) for(int i=j;i>=k;i--)\n#define Fe(x,y) for(int x=head[y];x;x=e[x].nxt)\n#define ckmx(a,b) a=max(a,b)\n#define ckmn(a,b) a=min(a,b)\n#define fin(s) freopen(s,\"r\",stdin)\n#define fout(s) freopen(s,\"w\",stdout)\n#define file(s) fin(s\".in\");fout(s\".out\")\n#define cerr cerr<<'_'\n#define debug cerr<<\"Passed line #\"<<__LINE__<<endl\ntemplate<typename T>T ov(T x){cerr<<\"Value: \"<<x<<endl;return x;}\n#define int long long\n#define N 100003\n#define M 500010\n#define db double\n#define Pos pair<db,db>\n#define low (x&(-x))\n//P5302 [GXOI/GZOI2019]????\nconst db inf=1e16;\nconst db eps=1e-6;\nconst db sq2=(db)1.4142135623730950488016887242097;\nconst db cs=sq2/2;\nconst db sn=-cs;\nint n,m,q,A,B,C,a1,a2,ans;\ndb S,T;\npair<int,int> a[N],b[N];\nint c[N],d[N];\nnamespace scl{\n\tPos ext=mkp(inf,-inf);\n\tvector<Pos> inter;\n\tvector<pair<Pos,db> > obs;\n\tvector<pair<pair<db,bool>,Pos> > line;\n\tdb v[M];\n\tint tot=0;\n\tint c[M];\n\tvoid add(int x,int y){\n\t\twhile(x<=tot){\n\t\t\tc[x]+=y;\n\t\t\tx+=low;\n\t\t}\n\t}\n\tint que(int x){\n\t\tint res=0;\n\t\twhile(x){\n\t\t\tres+=c[x];\n\t\t\tx-=low;\n\t\t}\n\t\treturn res;\n\t}\n\tvoid init(){\n\t\text=mkp(inf,-inf);\n\t\tfor(auto &i:inter){\n\t\t\tPos j=i;\n\t\t\ti.fir=j.fir*cs-j.sec*sn;\n\t\t\ti.sec=j.fir*sn+j.sec*cs;\n\t\t\tckmn(ext.fir,i.fir);\n\t\t\tckmx(ext.sec,i.fir);\n\t\t}\n\t\tfor(auto &i:obs){\n\t\t\tPos j=i.fir;\n\t\t\ti.fir.fir=j.fir*cs-j.sec*sn;\n\t\t\ti.fir.sec=j.fir*sn+j.sec*cs;\n\t\t\ti.sec*=sq2/2;\n\t\t\ti.sec+=eps;\n\t\t}\n\t\tdb l,r; \n\t\tfor(auto i:obs){\n\t\t\tl=i.fir.fir-i.sec;r=i.fir.fir+i.sec;\n\t\t\tif(r<ext.fir-eps || l>ext.sec+eps) continue;\n\t\t\tline.pb(mkp(mkp(i.fir.sec-i.sec,1),mkp(l,r)));\n\t\t\tline.pb(mkp(mkp(i.fir.sec+i.sec,0),mkp(l,r)));\n\t\t}\n//\t\tcerr<<\"s_inter:\"<<endl; for(auto i:inter) cerr<<i.fir<<\" \"<<i.sec<<endl;\n//\t\tcerr<<\"s_obs:\"<<endl; for(auto i:obs) cerr<<i.fir.fir<<\" \"<<i.fir.sec<<\" \"<<i.sec<<endl;\n//\t\tcerr<<\"Line:\"<<endl; for(auto i:line) cerr<<i.fir.fir<<\" \"<<i.fir.sec<<\" \"<<i.sec.fir<<\" \"<<i.sec.sec<<endl;\n\t}\n\tvoid lisan(){\n\t\tfor(auto i:inter) v[++tot]=i.fir;\n\t\tsort(v+1,v+1+tot);\n\t\ttot=unique(v+1,v+1+tot)-v-1;\n//\t\tcerr<<\"%%% \";For(i,1,tot) cerr<<v[i]<<\" \"; cerr<<endl;\n\t\tfor(auto &i:inter) i.fir=lower_bound(v+1,v+1+tot,i.fir)-v;\n\t\tfor(auto &i:line){\n\t\t\ti.sec.fir=lower_bound(v+1,v+1+tot,i.sec.fir)-v;\n\t\t\ti.sec.sec=upper_bound(v+1,v+1+tot,i.sec.sec)-v-1;\n\t\t}\n\t}\n\tbool cmp(Pos x,Pos y){return x.sec<y.sec;}\n\tint work(){\n\t\tint res=0;\n\t\tinit();\n\t\tlisan();\n\t\tsort(inter.begin(),inter.end(),cmp);\n\t\tsort(line.begin(),line.end());\n//\t\tcerr<<\"s_l_inter:\"<<endl; for(auto i:inter) cerr<<i.fir<<\" \"<<i.sec<<endl;\n//\t\tcerr<<\"l_Line:\"<<endl; for(auto i:line) cerr<<i.fir.fir<<\" \"<<i.fir.sec<<\" \"<<i.sec.fir<<\" \"<<i.sec.sec<<endl;\n\t\tauto pos=line.begin();\n\t\ttot++;\n//\t\tcerr<<\"work\"<<endl;\n\t\tfor(auto i:inter){\n\t\t\twhile(pos!=line.end() && pos->fir.fir<i.sec){\n\t\t\t\tadd(pos->sec.fir,(pos->fir.sec?1:-1));\n\t\t\t\tadd(pos->sec.sec+1,(pos->fir.sec?-1:1));\n\t\t\t\tpos=next(pos);\n\t\t\t}\n\t\t\tassert(que(i.fir)>=0);\n//\t\t\tcerr<<i.fir<<\" \"<<i.sec<<\" \"<<que(i.fir)<<endl;\n\t\t\tif(que(i.fir)>0) res++;\n\t\t}\n\t\treturn res;\n\t}\n}\nint e[N];\nbool v[N]; \ninline Pos ckpos(int x,int y){\n\tPos xx=a[x],yy=a[y];\n\tdouble res=(yy.fir-xx.fir)*(T-S)/((xx.sec-xx.fir)-(yy.sec-yy.fir))+S;\n\treturn mkp(res,xx.fir+(xx.sec-xx.fir)/(T-S)*(res-S));\n}\ninline int ms(int l,int r){\n\tif(l>=r) return 0;\n\tint mid=(l+r)>>1,res=ms(l,mid)+ms(mid+1,r),tl=l,tr=mid+1,tot=l;\n\twhile(tl<=mid || tr<=r){\n\t\tif(tr>r || (tl<=mid && c[tl]<c[tr])){\n\t\t\tres+=tr-mid-1;\n\t\t\tFor(i,mid+1,tr-1) scl::inter.pb(ckpos(c[tl],c[i]));\n\t\t\td[tot++]=c[tl++]; \n\t\t}else{\n\t\t\td[tot++]=c[tr++];\n\t\t}\n\t}\n\tFor(i,l,r) c[i]=d[i];\n//\tcerr<<l<<\" \"<<r<<\":\"<<res<<endl;\n\treturn res;\n}\ninline int out(int x){return x*A+(m-x)*B;}\ninline void see(int x){\n\tv[x]=1;\n\tif(!v[e[x]]) see(e[x]);\n}\nsigned main(){IOS;\n\tcin>>n>>A>>B>>C>>S>>T;\n\tFor(i,1,n) cin>>a[i].fir;\n\tFor(i,1,n) cin>>a[i].sec;\n\t//a1\n\tsort(a+1,a+1+n);\n\tFor(i,1,n) b[i]=mkp(a[i].sec,i);\n\tsort(b+1,b+1+n);\n\tFor(i,1,n) e[i]=c[i]=b[i].sec;\n//\tcerr<<fixed<<setprecision(3);\n//\tcerr<<\"c: \"; For(i,1,n) cerr<<c[i]<<\" \"; cerr<<endl;\n\ta1=ms(1,n);\n\tm=scl::inter.size();\n//\tcerr<<\"a1:\"<<a1<<endl;\n//\tcerr<<\"inter \"<<m<<\":\"<<endl;for(auto i:(scl::inter)) cerr<<i.fir<<\" \"<<i.sec<<endl;\n\t//a2\n\ta2=n;\n\tFor(i,1,n) if(!v[i]){see(i);a2--;}\n//\tcerr<<\"a2:\"<<a2<<endl;\n\t//ans\n\tcin>>q;\n\tscl::obs.resize(q);\n\tfor(auto &i:(scl::obs)) cin>>i.fir.fir>>i.fir.sec>>i.sec;\n\tans=scl::work();\n\ta1=out(a1);a2=out(a2);\n\tcout<<min(a1,a2)+ans*C<<\" \"<<max(a1,a2)+ans*C<<endl;\nreturn 0;}\n```",
        "postTime": 1649947002,
        "uid": 101868,
        "name": "I_am_Accepted",
        "ccfLevel": 0,
        "title": "P5302 [GXOI/GZOI2019]\u7279\u6280\u98de\u884c"
    },
    {
        "content": "# \u9898\u76ee\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[\u70b9\u8fd9\u91cc](https://www.luogu.com.cn/problem/P5302)\u770b\u9898\u76ee\u3002  \n# \u5206\u6790\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7531\u4e8e\u4ea4\u53c9\u70b9\u7684\u4f4d\u7f6e\uff0c\u4ea4\u53c9\u70b9\u9009\u62e9\u7279\u6280\u548c\u5609\u5bbe\u7684$bonus$\u662f\u4e92\u76f8\u72ec\u7acb\u7684\uff0c\u6240\u4ee5\u8bf4\u8fd9\u9053\u9898\u5176\u5b9e\u662f\u4e09\u4e2a\u95ee\u9898\u5f3a\u884c\u51d1\u6210\u7684\u3002\u4e00\u90e8\u5206\u662f\u8ba1\u7b97\u4ea4\u53c9\u70b9\u6570\u91cf\u548c\u4f4d\u7f6e\uff0c\u4e00\u90e8\u5206\u662f\u7ed9\u6bcf\u4e00\u4e2a\u4ea4\u53c9\u70b9\u9009\u62e9\u7279\u6280\uff0c\u8fd8\u4e00\u90e8\u5206\u662f\u4e8c\u7ef4\u6570\u70b9\u3001\u8ba1\u7b97$bonus$\u7684\u95ee\u9898\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7b2c\u4e00\u6b65\uff0c\u6211\u4eec\u9700\u8981\u6c42\u51fa\u6765\u4ea4\u53c9\u70b9\u7684\u6570\u91cf\u548c\u5750\u6807\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u7531\u4e8e$x_{st}$\u7684\u4f4d\u7f6e\u4e0a\u7684$y_0$\u5750\u6807\u90fd\u5df2\u7ecf\u6392\u597d\u5e8f\u4e86\uff0c\u4e00\u4e2a\u4ea4\u70b9\u5b9e\u9645\u4e0a\u5c31\u5bf9\u5e94\u7740$y_1$\u5750\u6807\u7684\u4e00\u4e2a\u9006\u5e8f\u5bf9\u3002\u6240\u4ee5\u7edf\u8ba1\u6570\u91cf\u5c31\u53d8\u6210\u4e86\u5e38\u89c4\u7684\u95ee\u9898\u3002\u8ba1\u7b97\u4f4d\u7f6e\u4e5f\u5f88\u7b80\u5355\u3002\u7528\u4e00\u4e2a$set$\u7ef4\u62a4\u5f53\u524d\u4f4d\u7f6e\u4e4b\u524d\u7684$y_1$\uff0c\u6bcf\u6b21$lower\\_bound$\u4e00\u4e0b\uff0c\u627e\u5230$set$\u91cc\u9762$y_1$\u6bd4\u81ea\u5df1\u7684$y_1$\u5927\u7684\u90a3\u4e9b\u98de\u884c\u8def\u7ebf\uff0c\u4e5f\u5c31\u662f\u4f1a\u4e0e\u81ea\u5df1\u51fa\u73b0\u4ea4\u70b9\u7684\u90a3\u4e9b\u8def\u7ebf\uff0c\u4e8e\u662f\u4fbf\u53ef\u4ee5\u8ba1\u7b97\u4ea4\u70b9\u3002\u4f60\u53ef\u4ee5\u9009\u62e9\u7528\u659c\u7387\u6cd5\u6216\u8005\u5411\u91cf\u6cd5\u3002\u63a8\u8350\u4f7f\u7528\u659c\u7387\uff0c\u64cd\u4f5c\u7b80\u5355\uff0c\u5e76\u4e14\u8fd9\u91cc$x_{st}<x_{ed}$\uff0c\u6240\u4ee5\u659c\u7387\u6cd5\u4e0d\u4f1a\u51fa\u95ee\u9898\u3002\u8fd9\u4e00\u90e8\u5206\u7684\u65f6\u95f4\u4e3a$O(n\\log_2n)$  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7b2c\u4e8c\u6b65\uff0c\u7ed9\u6bcf\u4e00\u4e2a\u4ea4\u53c9\u70b9\u9009\u62e9\u7279\u6280\u3002\u8bbe\u7279\u6280\u7684\u603b\u8d21\u732e\u4e3a$W$\uff0c\u9009\u62e9\u4e86$x$\u4e2a\u4ea4\u70b9\u8fdb\u884c\u3010\u5bf9\u5411\u4ea4\u6362\u3011\u7684\u7279\u6280\uff0c\u603b\u5171\u6709$t$\u4e2a\u4ea4\u70b9\uff0c\u90a3\u4e48\u53ef\u4ee5\u5217\u51fa$W$\u4e0e$x$\u7684\u51fd\u6570\u5173\u7cfb\u5f0f\u4e3a\uff1a  \n$$W=ax+b(t-x)=(a-b)x+bt$$  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u6682\u65f6\u4e0d\u8003\u8651\u5b9a\u4e49\u57df\u7684\u95ee\u9898\u3002\u53ef\u4ee5\u53d1\u73b0\uff0c$W$\u548c$x$\u662f\u4e00\u6b21\u51fd\u6570\u7684\u5173\u7cfb\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651$x$\u53ef\u53d6\u5230\u7684\u6700\u503c\uff0c\u4e5f\u5c31\u5bf9\u5e94\u4e86$W$\u53ef\u53d6\u5230\u7684\u6700\u503c\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7b2c\u4e00\uff0c\u663e\u7136$x\\le t$\u3002\u5e76\u4e14$x=t$\u7684\u53d6\u503c\u662f\u5408\u6cd5\u7684\u3002\u6709\u4e24\u79cd\u7406\u89e3\u65b9\u5f0f\uff0c\u4e00\u79cd\u53ef\u4ee5\u7406\u89e3\u4e3a\uff0c\u9006\u5e8f\u5bf9\u90fd\u88ab\u4ea4\u6362\u5b8c\u4e86\uff0c\u81ea\u7136\u5c31\u662f\u6709\u5e8f\u7684\uff1b\u53e6\u4e00\u79cd\uff0c\u7531\u4e8e\u4e00\u6b21\u3010\u5bf9\u5411\u4ea4\u6362\u3011\u7684\u7279\u6280\u4e0d\u4f1a\u6539\u53d8\u4e24\u67b6\u98de\u673a\u7684\u4e0a\u4e0b\u5173\u7cfb\uff0c\u6700\u5f00\u59cb\u662f\u6709\u5e8f\u7684\uff0c\u6700\u540e\u81ea\u7136\u8fd8\u662f\u6709\u5e8f\u7684\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\uff08\u8fd9\u4e00\u90e8\u5206\u7684\u7406\u89e3\u501f\u9274\u81ea[\u6d1b\u6c34\u00b7\u9526\u8863\u536b\u7684\u535a\u5ba2](https://www.luogu.com.cn/blog/Vsinger/solution-p5302)\uff0c\u611f\u8c22\uff09  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7b2c\u4e8c\uff0c\u8003\u8651$x$\u7684\u6700\u5c0f\u53d6\u503c\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u5176\u5b9e\u6bcf\u4e00\u67b6\u98de\u673a\u7684\u6700\u7ec8\u4f4d\u7f6e\u90fd\u662f\u786e\u5b9a\u7684\u3002\u8bbe\u7b2c$i$\u67b6\u98de\u673a\u7684\u6700\u7ec8\u4f4d\u7f6e\u4e0a\u539f\u672c\u7684\u822a\u7ebf\u5bf9\u5e94\u7740$tar_{i}$\u53f7\u98de\u673a\uff08\u6bd4\u5982\uff0c\u9898\u76ee\u4e2d\u7684\u4f8b\u5b50\uff0c$tar_1=2$\uff09\u3002\u6211\u4eec\u8bbe\u8ba1\u4e00\u4e2a\u56fe\uff0c\u6bcf\u4e2a\u8282\u70b9\u4ee3\u8868\u4e00\u67b6\u98de\u673a\u3002\u8282\u70b9$i$\u8fde\u51fa\u53bb\u4e00\u6761\u6307\u5411\u8282\u70b9$tar_i$\u7684\u8fb9\uff0c\u8868\u793a\u6700\u7ec8\u8981\u548c\u5b83\u6362\u4f4d\u7f6e\u3002\u4e0d\u96be\u53d1\u73b0\uff0c\u6700\u540e\u8fd9\u4e2a\u56fe\u4f1a\u53d8\u6210\u591a\u4e2a\u73af\u3002\u5728\u4e00\u4e2a\u957f\u5ea6\u4e3a$k$\u7684\u73af\u4e2d\uff0c\u8981\u60f3\u5c06\u5b83\u53d8\u6210\u5408\u6cd5\u7684\u987a\u5e8f\uff0c\u81f3\u5c11\u9700\u8981\u8fdb\u884c$k-1$\u6b21\u4ea4\u6362\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6700\u5f00\u59cb\u6700\u5c11\u4ea4\u6362\u6b21\u6570\u4e3a$n$\uff0c\u51fa\u73b0\u4e00\u4e2a\u73af\uff0c\u6700\u5c11\u4ea4\u6362\u7684\u6b21\u6570\u5c31\u53ef\u4ee5\u5c11$1$\u3002\u6240\u4ee5$x$\u7684\u6700\u5c0f\u53d6\u503c\u4e3a$n-\\text{\u73af\u6570}$\u3002\u8fd9\u4e00\u90e8\u5206\u7684\u65f6\u95f4\u4e3a$O(n)$\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7b2c\u4e09\u6b65\uff0c\u8ba1\u7b97\u6bcf\u4e00\u4e2a\u5609\u5bbe\u7684$bonus$\u3002\u8fd9\u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u4e8c\u7ef4\u6570\u70b9\u7684\u95ee\u9898\uff0c\u6211\u4eec\u7528\u626b\u63cf\u7ebf\u89e3\u51b3\u3002\u9996\u5148\u628a\u5750\u6807\u8f74\u65cb\u8f6c$45^\\circ$\uff0c\u518d\u653e\u5927$\\sqrt 2$\u500d\u3002\u8fd9\u6837\u64cd\u4f5c\u4e4b\u540e\u7b54\u6848\u663e\u7136\u4e0d\u4f1a\u6539\u53d8\u3002\u8fd9\u662f\u539f\u6765\u5750\u6807\u8f74\u4e0a\u70b9$(x,y)$\uff0c\u5728\u65b0\u7684\u5750\u6807\u8f74\u4e2d\u4f4d\u7f6e\u5c31\u53d8\u6210\u4e86$(x+y,y-x)$\u3002\u7136\u540e\u5bf9\u4e8e\u6a2a\u5750\u6807\u79bb\u6563\u5316\u4e4b\u540e\u7528$BIT$\u7ef4\u62a4\uff0c\u7eb5\u5750\u6807\u7528\u6765\u6392\u5e8f\u3002\u5bf9\u4e8e\u4e00\u4e2a\u6b63\u65b9\u5f62\uff0c\u5c06\u5b83\u62c6\u5206\u6210\u4e24\u4e2a\u64cd\u4f5c\uff0c\u4e0b\u8fb9\u754c\u770b\u4f5c\u5411$BIT$\u4e2d\u63d2\u5165\u4e00\u6761\u8fb9\uff0c\u4e0a\u8fb9\u754c\u770b\u4f5c\u5220\u9664\u4e00\u6761\u8fb9\u3002\u4e00\u4e2a\u70b9\u5c31\u662f\u4e00\u4e2a\u67e5\u8be2\uff0c\u5373\u67e5\u8be2$BIT$\u91cc\u9762\u6709\u6ca1\u6709\u7ebf\u6bb5\u8986\u76d6\u5230\u5b83\u3002\u65f6\u95f4\u662f$O((n+4k)\\log_2(n+4k))$\uff08\u4e3b\u8981\u662f\u79bb\u6563\u5316\u6700\u82b1\u65f6\u95f4\uff09\u3002 \n# \u4ee3\u7801\n```cpp\n#include <set>\n#include <cstdio>\n#include <utility>\n#include <algorithm>\nusing namespace std;\n\ntypedef pair<int, int> ele;\ntypedef pair<double, double> coord;\n\nconst int MAXN = 1e5 + 5, MAXK = 1e5 + 5, MAXJ = 5e5 + 5;\n\ntemplate<typename _T>\nvoid read( _T &x )\n{\n\tx = 0; char s = getchar();int f = 1;\n\twhile( s < '0' || '9' < s ) { f = 1; if( s == '-' ) f = -1; s = getchar(); }\n\twhile( '0' <= s && s <= '9' ) { x = ( x << 3 ) + ( x << 1 ) + ( s - '0' ), s = getchar(); }\n\tx *= f;\n}\n\ntemplate<typename _T>\nvoid write( _T x )\n{\n\tif( x < 0 ) { putchar( '-' ), x = -x; }\n\tif( 9 < x ) { write( x / 10 ); }\n\tputchar( x % 10 + '0' );\n}\n\ntemplate<typename _T>\n_T MAX( const _T a, const _T b )\n{\n   \treturn a > b ? a : b;\n}\n\ntemplate<typename _T>\n_T MIN( const _T a, const _T b )\n{\n\treturn a < b ? a : b;\n}\n\nstruct oper\n{\n\tdouble y;\n\tint type, a, b;\n\tbool operator < ( const oper & other ) const \n\t{ return y == other.y ? ( type == other.type ? a < other.a : type < other.type ) : y < other.y; }\n}os[MAXJ + MAXK * 2];\n\nstruct node\n{\n\tdouble a; int indx, side;\n\tnode(){} node( const double A, const int I, const int S ) { a = A, indx = I, side = S; }\n\tbool operator < ( const node & other ) const { return a < other.a; }\n};\n\nset<ele> s;\n\nnode disc[MAXJ + MAXK * 4];\ncoord junc[MAXJ];\n\nint BIT[MAXJ + MAXK * 2];\nint p[MAXK], q[MAXK], r[MAXK];\nint sty[MAXN], edy[MAXN], tar[MAXN];\nint N, K, A, B, C, siz, stX, edX, cnt;\nbool visited[MAXN];\n\nint lowbit( const int x ) { return x & ( -x ); }\nvoid upt( const int x, const int v ) { for( int i = x ; i <= siz ; i += lowbit( i ) ) BIT[i] += v; }\nint getSum( const int x ) { int ret = 0; for( int i = x ; i ; i -= lowbit( i ) ) ret += BIT[i]; return ret; }\nvoid update( const int l, const int rr, const int v ) { upt( l, v ), upt( rr + 1, -v ); }\nint query( const int l, const int rr ) { return getSum( rr ) - getSum( l - 1 ); } \n\ncoord junct( const int a, const int b )\n{\n\tdouble k1 = 1.0 * ( edy[a] - sty[a] ) / ( edX - stX ), b1 = sty[a] - k1 * stX;\n\tdouble k2 = 1.0 * ( edy[b] - sty[b] ) / ( edX - stX ), b2 = sty[b] - k2 * stX;\n\tdouble xx = ( b2 - b1 ) / ( k1 - k2 );\n\treturn coord( xx, k1 * xx + b1 );\n}\n\nvoid DFS( const int u )\n{\n\tif( visited[u] ) return ;\n\tvisited[u] = true, DFS( tar[u] );\n}\n\nint main()\n{\n\tint rmn, rmx, ra, rb;\n\tread( N ), read( A ), read( B ), read( C ), read( stX ), read( edX );\n\tfor( int i = 1 ; i <= N ; i ++ ) read( sty[i] );\n\tfor( int i = 1 ; i <= N ; i ++ ) read( edy[i] );\n\tread( K );\n\tfor( int i = 1 ; i <= K ; i ++ ) read( p[i] ), read( q[i] ), read( r[i] );\n\tfor( int i = 1 ; i <= N ; i ++ )\n\t{\n\t\tset<ele> :: iterator it = s.lower_bound( ele( edy[i], i ) );\n\t\tfor( ; it != s.end() ; it ++ ) \n\t\t\tjunc[++ cnt] = junct( it->second, i );\n\t\ts.insert( ele( edy[i], i ) );\n\t}\n\tra = cnt * A;\n\tint indx = 0, tot = 0;\n\tfor( set<ele> :: iterator it = s.begin() ; it != s.end() ; it ++ ) tar[++ indx] = it->second;\n\tfor( int i = 1 ; i <= N ; i ++ ) if( ! visited[i] ) DFS( i ), tot ++;\n\trb = ( N - tot ) * A + ( cnt - N + tot ) * B, tot = 0;\n\trmn = MIN( ra, rb ), rmx = MAX( ra, rb );\n\tfor( int i = 1 ; i <= cnt ; i ++ ) \n\t{\n\t\tdisc[++ tot] = node( junc[i].first + junc[i].second, i, 0 );\n\t\tos[i].type = 1, os[i].y = junc[i].second - junc[i].first;\n\t}\n\tfor( int i = 1, cur ; i <= K ; i ++ )\n\t{\n\t\tcur = ( i << 1 ) + cnt - 1;\n\t\tdisc[++ tot] = node( p[i] + q[i] - r[i], cur, 0 ); // (p[i], q[i] - r[i])\n\t\tdisc[++ tot] = node( p[i] + r[i] + q[i], cur, 1 ); // ( p[i] + r[i], q[i] )\n\t\tos[cur].type = 0, os[cur].y = q[i] - r[i] - p[i];\n\t\tcur = ( i << 1 ) + cnt;\n\t\tdisc[++ tot] = node( p[i] - r[i] + q[i], cur, 0 ); // ( p[i] - r[i], q[i] )\n\t\tdisc[++ tot] = node( p[i] + q[i] + r[i], cur, 1 ); // ( p[i], q[i] + r[i] )\n\t\tos[cur].type = 2, os[cur].y = q[i] + r[i] - p[i];\n\t}\n\tint all = ( K << 1 ) + cnt, rest = 0;\n\tstd :: sort( disc + 1, disc + 1 + tot );\n\tdisc[0].a = -0x3f3f3f3f;\n\tfor( int i = 1 ; i <= tot ; i ++ )\n\t{\n\t\tif( disc[i].a != disc[i - 1].a ) siz ++;\n\t\t( disc[i].side ? os[disc[i].indx].b : os[disc[i].indx].a ) = siz;\n\t}\n\tstd :: sort( os + 1, os + 1 + all );\n\tfor( int i = 1 ; i <= all ; i ++ )\n\t{\n\t\tif( os[i].type == 0 ) update( os[i].a, os[i].b, 1 );\n\t\telse if( os[i].type == 1 ) \n\t\t{\n\t\t\tint val = getSum( os[i].a );\n\t\t\trest += bool( val ) * C;\n\t\t}\n\t\telse if( os[i].type == 2 ) update( os[i].a, os[i].b, -1 );\n\t}\n\twrite( rmn + rest ), putchar( ' ' ), write( rmx + rest ), putchar( '\\n' );\n\treturn 0;\n}\n```",
        "postTime": 1576474536,
        "uid": 123809,
        "name": "crashed",
        "ccfLevel": 0,
        "title": "[GXOI/GZOI2019]\u7279\u6280\u98de\u884c"
    },
    {
        "content": "# Mentality\n\n\u8003\u573a\u4e0a\u6253\u7684\u5168\u662f\u9ebb\u70e6\u7684\u7b97\u6cd5 .jpg \u3002\n\n$step1:$\n\n\u9996\u5148\u53d1\u73b0\uff0c\u7531\u4e8e\u4ea4\u70b9\u6570\u4e0d\u591a\uff0c\u663e\u7136\u5148\u6c42\u4ea4\u70b9\u3002\u5bf9\u4e8e\u4e24\u6761\u7ebf\u6bb5\uff0c\u5b83\u4eec\u76f8\u4ea4\u5f53\u4e14\u4ec5\u5f53\u5de6\u7aef\u70b9\u7eb5\u5750\u6807\u7684\u5927\u5c0f\u5173\u7cfb\u548c\u53f3\u7aef\u70b9\u76f8\u53cd\u3002\n\n\u7531\u4e8e\u9898\u76ee\u6309\u7167\u5de6\u7aef\u70b9\u7eb5\u5750\u6807\u5355\u8c03\u9012\u589e\u7ed9\u51fa\uff0c\u76f4\u63a5\u7528\u4e00\u4e2a $set$ \u7ef4\u62a4\u5df2\u7ed9\u51fa\u7684\u53f3\u7aef\u70b9\u7eb5\u5750\u6807\u96c6\u5408\uff0c\u5bf9\u4e8e\u65b0\u7ebf\u6bb5\u66b4\u529b\u626b\u4e00\u904d $set$ \u4e2d\u7684\u7ebf\u6bb5\uff0c\u770b\u662f\u5426\u76f8\u4ea4\u3002\n\n\u6c42\u4ea4\u70b9\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u5229\u7528\u659c\u7387\u5c31\u597d\u4e86\u3002\n\n\u5948\u4f55\u6211\u9009\u62e9\u4e86\u53c9\u79ef $(???)$\uff0c\u6211\u4e5f\u89c9\u5f97\u81ea\u5df1\u633a\u8ff7\u7684\u3002\n\n$step2:$\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u5609\u5bbe\uff0c\u76f4\u63a5\u5c06\u5609\u5bbe\u548c\u4ea4\u70b9\u5750\u6807\u8f6c\u6362\u6210\u5207\u6bd4\u96ea\u592b\u610f\u4e49\u4e0b\u7684\u5750\u6807\uff0c\u4e8c\u7ef4\u6570\u70b9\u5373\u53ef\u3002\n\n\u8fd9\u91cc\u4f7f\u7528\u626b\u63cf\u7ebf\u4e8c\u7ef4\u6570\u70b9\u3002\n\n$step3:$\n\n\u63a5\u4e0b\u6765\u5269\u4e0b\u7684\u662f\u7ffb\u6298\u64cd\u4f5c\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u7531\u4e8e $a,b$ \u6709\u660e\u786e\u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u6240\u4ee5\u4e24\u4e2a\u6781\u7aef\u7b54\u6848\u80af\u5b9a\u662f\u5c3d\u91cf\u591a\u9009 $a$ \u548c\u5c3d\u91cf\u5c11\u9009 $a$ \u3002\n\n\u5bf9\u4e8e\u5c3d\u91cf\u591a\u9009 $a$ \uff0c\u4e5f\u5c31\u662f\u7ffb\u6298\u64cd\u4f5c\uff0c\u6211\u4eec\u53d1\u73b0\u5176\u5b9e\u53ef\u4ee5\u6240\u6709\u64cd\u4f5c\u5168\u90e8\u7ffb\u6298\uff0c\u6700\u540e\u5230\u53f3\u8fb9\u4e4b\u540e\uff0c\u4e00\u5b9a\u4f1a\u662f\u6709\u5e8f\u7684\u3002\n\n\u8fd9\u4e2a\u6709\u4e24\u79cd\u7406\u89e3\u65b9\u5f0f\uff1a\n\n\u4e00\u3001\u4ea4\u70b9\u6570\u7b49\u4ef7\u4e8e\u9006\u5e8f\u5bf9\u6570\uff0c\u4e00\u6b21\u7ffb\u6298\u5c31\u76f8\u5f53\u4e8e\u626d\u56de\u53bb\u4e86\u4e00\u5bf9\u9006\u5e8f\u5bf9\uff0c\u5f53\u6211\u4eec\u5c06\u6240\u6709\u9006\u5e8f\u5bf9\u90fd\u626d\u56de\u53bb\u4e4b\u540e\uff0c\u5e8f\u5217\u4e0d\u5b58\u5728\u9006\u5e8f\u5bf9\uff0c\u5373\u7ed3\u679c\u6709\u5e8f\u3002\n\n\u4e8c\u3001\u9898\u9762\u4e2d\u6709\u63d0\u5230\uff1a\u4e00\u6b21\u7ffb\u6298\u64cd\u4f5c\u4f1a\u4f7f\u4e24\u67b6\u98de\u673a\u4ecd\u4fdd\u6301\u76f8\u5bf9\u4f4d\u7f6e\u4e0d\u53d8\u3002\u90a3\u4e48\u6211\u4eec\u6bcf\u6b21\u90fd\u8fdb\u884c\u7ffb\u6298\uff0c\u59cb\u7ec8\u4e0d\u4f1a\u6709\u4efb\u610f\u4e24\u67b6\u98de\u673a\u4ea4\u6362\u4f4d\u7f6e\uff0c\u6240\u4ee5\u6700\u540e\u7ed3\u679c\u6709\u5e8f\u3002\n\n\u5bf9\u4e8e\u5c3d\u91cf\u5c11\u9009 $a$ \uff0c\u6211\u4eec\u5c06\u6bcf\u4e2a\u98de\u673a $i$ \u548c\u5b83\u7684\u76ee\u7684\u5730 $p_i$ \u76f8\u8fde\uff0c\u5c31\u4f1a\u5f97\u5230\u4e00\u5f20\u53ea\u5b58\u5728\u7b80\u5355\u73af\u7684\u56fe\u3002\n\n\u4e0d\u96be\u53d1\u73b0\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u73af\uff0c\u8bbe\u5176\u4e2d\u5143\u7d20\u5206\u522b\u4e3a $a_1\\sim a_n$ \u5b83\u7684\u5f62\u5f0f\u5982\u4e0b\uff1a\n\n$\\forall_{i=1}^{n-1}p_{a_i}=a_{i+1}$\n\n$p_{a_n}=a_1$\n\n\u7531\u4e8e\u4ea4\u6362\u5143\u7d20\u4ec5\u9488\u5bf9\u9006\u5e8f\u5bf9\uff0c\u6240\u4ee5\u8981\u5c06\u73af\u6574\u4f53\u4f4d\u79fb\u4e00\u4f4d\u6700\u5c11\u4e5f\u5c31\u9700\u8981\u73af\u957f\u51cf\u4e00\u7684\u6b21\u6570\u3002\n\n\u6240\u4ee5 $a$ \u7684\u6700\u5c11\u9009\u62e9\u6b21\u6570\u4e3a\u6240\u6709\u73af\u7684\u73af\u957f\u51cf\u4e00\u4e4b\u548c\u3002\n\n\u6ca1\u4e86\u3002\n\n# Code\n\n\u8003\u573a\u7684\u65f6\u5019\u8111\u5b50\u6bd4\u8f83\u4e71\uff0c\u4ee3\u7801\u4e5f\u5c31\u6253\u5f97\u957f\u4e86\u3002\u6211\u4e5f\u4e0d\u77e5\u9053\u6211\u4e3a\u4ec0\u4e48\u7801\u51fa\u4e86 $5k$\n\n```cpp\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <iostream>\n#include <set>\nusing namespace std;\n#define LL long long\n#define go(x, i, v) for (int i = hd[x], v = to[i]; i; v = to[i = nx[i]])\n#define inline __inline__ __attribute__((always_inline))\ninline LL read() {\n  LL x = 0, w = 1;\n  char ch = getchar();\n  while (!isdigit(ch)) {\n    if (ch == '-') w = -1;\n    ch = getchar();\n  }\n  while (isdigit(ch)) {\n    x = (x << 3) + (x << 1) + ch - '0';\n    ch = getchar();\n  }\n  return x * w;\n}\nconst int Max_n = 1e5 + 5;\nint n, a, b, c, K, ans;\nint cnt, cc;\nLL Ans1, Ans2;\ndouble xs, xe, ys[Max_n], ye[Max_n];\nstruct dots {\n  double x, y;\n} k[Max_n * 5];\nstruct xl {\n  double x, y;\n  double operator*(const xl &b) { return x * b.y - b.x * y; }\n};\nset<pair<double, double> > s;\nset<pair<double, double> >::iterator it;\ninline bool cmp(dots a, dots b) { return a.x == b.x ? a.y < b.y : a.x < b.x; }\ninline void part1() {\n  n = read(), a = read(), b = read(), c = read(), xs = read(), xe = read();\n  for (int i = 1; i <= n; i++) ys[i] = read();\n  double D = xe - xs;\n  for (int i = 1; i <= n; i++) {\n    ye[i] = read();\n    it = s.end();\n    if (s.size()) it--;\n    while ((*it).first > ye[i] && it != s.begin()) {\n      cnt++;\n      xl d1 = (xl){-D, ys[i] - (*it).first}, d2 = (xl){0, ye[i] - (*it).first};\n      double S1 = abs(d1 * d2);\n      d1 = (xl){D, ye[i] - (*it).second}, d2 = (xl){0, ys[i] - (*it).second};\n      double S2 = abs(d1 * d2);\n      double K = S2 / (S1 + S2), D1 = (*it).first - (*it).second;\n      k[cnt].x = xs + D * K, k[cnt].y = (*it).second + K * D1;\n      it--;\n    }\n    if (it == s.begin())\n      if ((*it).first > ye[i]) {\n        cnt++;\n        xl d1 = (xl){-D, ys[i] - (*it).first},\n           d2 = (xl){0, ye[i] - (*it).first};\n        double S1 = abs(d1 * d2);\n        d1 = (xl){D, ye[i] - (*it).second}, d2 = (xl){0, ys[i] - (*it).second};\n        double S2 = abs(d1 * d2);\n        double K = S2 / (S1 + S2), D1 = (*it).first - (*it).second;\n        k[cnt].x = xs + D * K, k[cnt].y = (*it).second + K * D1;\n      }\n    s.insert(make_pair(ye[i], ys[i]));\n  }\n  for (int i = 1; i <= cnt; i++) {\n    double X = k[i].x, Y = k[i].y;\n    k[i].x = X + Y, k[i].y = X - Y;\n  }\n  sort(k + 1, k + cnt + 1, cmp);\n}\ndouble z[Max_n << 4];\nint C[Max_n << 3];\nint cntr, hd[Max_n], nx[Max_n << 1], to[Max_n << 1];\nstruct que {\n  double pos;\n  double l, r, L, R;\n  int id, t;\n} q[Max_n << 3];\nstruct person {\n  double x, y, r;\n} p[Max_n];\ninline bool cmp2(que a, que b) {\n  return a.pos == b.pos ? a.t < b.t : a.pos < b.pos;\n}\ninline void add(int k, int x) {\n  for (int i = k; i <= cc; i += i & -i) C[i] += x;\n}\ninline int query(int k) {\n  int ans = 0;\n  for (int i = k; i; i -= i & -i) ans += C[i];\n  return ans;\n}\ninline void part2() {\n  K = read();\n  for (int i = 1; i <= K; i++) {\n    p[i].x = read(), p[i].y = read(), p[i].r = read();\n    double X = p[i].x, Y = p[i].y;\n    p[i].x = X + Y, p[i].y = X - Y;\n  }\n  int Cnt = 0;\n  for (int i = 1; i <= K; i++) {\n    Cnt++;\n    q[Cnt].l = p[i].x - p[i].r, q[Cnt].r = p[i].x + p[i].r;\n    q[Cnt].L = p[i].y - p[i].r, q[Cnt].R = p[i].y + p[i].r;\n    q[Cnt].t = 1, q[Cnt + 1] = q[Cnt], q[Cnt + 1].t = 3;\n    q[Cnt].pos = q[Cnt].l, q[++Cnt].pos = q[Cnt].r;\n    z[++cc] = q[Cnt].L, z[++cc] = q[Cnt].R;\n    q[Cnt].id = q[Cnt - 1].id = i;\n  }\n  for (int i = 1; i <= cnt; i++) {\n    Cnt++, q[Cnt].pos = k[i].x, q[Cnt].l = k[i].y, q[Cnt].t = 2;\n    z[++cc] = q[Cnt].l;\n  }\n  sort(q + 1, q + Cnt + 1, cmp2);\n  sort(z + 1, z + cc + 1);\n  for (int i = 1; i <= Cnt; i++) {\n    if (q[i].t == 1) {\n      int x = lower_bound(z + 1, z + cc + 1, q[i].R) - z;\n      int y = lower_bound(z + 1, z + cc + 1, q[i].L) - z;\n      add(y, 1), add(x + 1, -1);\n    }\n    if (q[i].t == 3) {\n      int x = lower_bound(z + 1, z + cc + 1, q[i].R) - z;\n      int y = lower_bound(z + 1, z + cc + 1, q[i].L) - z;\n      add(y, -1), add(x + 1, 1);\n    }\n    if (q[i].t == 2) {\n      int x = lower_bound(z + 1, z + cc + 1, q[i].l) - z;\n      if (query(x)) ans++;\n    }\n  }\n  Ans1 += 1ll * ans * c, Ans2 += 1ll * ans * c;\n  Ans1 += 1ll * a * cnt;\n}\nint num[Max_n], P[Max_n];\nint top, tim, dfn[Max_n], low[Max_n], vis[Max_n], stk[Max_n];\nint size[Max_n], bel[Max_n], cir;\nbool cmp3(int a, int b) { return ye[a] < ye[b]; }\nvoid addr(int u, int v) {\n  cntr++;\n  nx[cntr] = hd[u], to[cntr] = v;\n  hd[u] = cntr;\n}\nvoid dfs(int x) {\n  stk[++top] = x, dfn[x] = low[x] = ++tim, vis[x] = 1;\n  go(x, i, v) if (!vis[v]) dfs(v), low[x] = min(low[x], low[v]);\n  else if (vis[v] == 1) low[x] = min(low[x], dfn[v]);\n  if (dfn[x] == low[x]) {\n    cir++;\n    while (stk[top] != x)\n      bel[stk[top]] = cir, size[cir]++, vis[stk[top--]] = -1;\n    top--, bel[x] = cir, size[cir]++;\n  }\n}\nvoid part3() {\n  for (int i = 1; i <= n; i++) num[i] = i;\n  sort(num + 1, num + n + 1, cmp3);\n  for (int i = 1; i <= n; i++) addr(num[i], i), addr(i, num[i]);\n  for (int i = 1; i <= n; i++)\n    if (!dfn[i]) dfs(i);\n  int tot = 0;\n  for (int i = 1; i <= cir; i++) tot += size[i] - 1;\n  Ans2 += 1ll * tot * a + 1ll * (cnt - tot) * b;\n}\nint main() {\n#ifndef ONLINE_JUDGE\n  freopen(\"trick.in\", \"r\", stdin);\n  freopen(\"trick.out\", \"w\", stdout);\n#endif\n  part1();\n  part2();\n  part3();\n  if (Ans1 > Ans2) swap(Ans1, Ans2);\n  cout << Ans1 << \" \" << Ans2;\n}\n```\n",
        "postTime": 1569506924,
        "uid": 39954,
        "name": "\u6d1b\u6c34\u00b7\u9526\u4f9d\u536b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5302 \u3010[GXOI/GZOI2019]\u7279\u6280\u98de\u884c\u3011"
    }
]