[
    {
        "content": "\u663e\u7136\u8fd9\u9053\u9898\u662f\u8981\u6c42\u4e09\u7ef4\u51f8\u5305\u7684\u8868\u9762\u79ef\uff0c\u5e38\u7528\u7684\u65b9\u6cd5\u662f\u5377\u5305\u88f9\u6cd5\u548c\u589e\u91cf\u6cd5\uff0c~~\u6211\u90fd\u4e0d\u4f1a~~\u3002\u6b64\u9898\u6570\u636e\u8303\u56f4\u8f83\u5c0f\uff0c\u53ef\u4ee5\u76f4\u63a5\u66b4\u529b$O(n^4)$\u6c34\u8fc7\u3002\u7cbe\u901a\u8ba1\u7b97\u51e0\u4f55\u7684\u5927\u4f6c\u53ef\u4ee5\u4ecb\u7ecd\u4e00\u4e0b\u5377\u5305\u88f9\u6cd5\u548c\u589e\u91cf\u6cd5\u3002\n\n$O(n^3)$\u679a\u4e3e\u70b9\u96c6\u4e2d\u7684\u4e09\u4e2a\u70b9\uff0c\u518d\u7528$O(n)$\u626b\u4e00\u904d\u5176\u4ed6\u70b9\uff0c\u5982\u679c\u5176\u4ed6\u70b9\u90fd\u5728\u8fd9\u4e09\u4e2a\u70b9\u5f62\u6210\u7684\u9762\u7684\u540c\u4e00\u4fa7\uff0c\u90a3\u4e48\u8fd9\u4e2a\u9762\u5c31\u5728\u51f8\u5305\u4e0a\u3002\n\n\u90a3\u4e48\u5982\u4f55\u5224\u65ad\u70b9$P$\u5728\u9762$ABC$\u7684\u54ea\u4e00\u4fa7\u5462\uff1f\u53ea\u8981\u6c42\u51fa\u9762$ABC$\u7684\u4e00\u4e2a\u6cd5\u5411\u91cf\uff08\u53c9\u79ef\u5373\u53ef\uff09\uff0c\u518d\u7528\u70b9\u79ef\u7b97\u4e00\u4e0b$\\vec{AP}$\u4e0e\u6cd5\u5411\u91cf\u7684\u5939\u89d2\u4f59\u5f26\u503c\u5373\u53ef\u3002\u4f59\u5f26\u4e3a\u6b63\u7684\u70b9\u5728\u4e00\u4fa7\uff0c\u4f59\u5f26\u4e3a\u8d1f\u7684\u5728\u53e6\u4e00\u4fa7\u3002\n\n\u4f46\u662f\u53ea\u8fd9\u4e48\u505a\u4f1aWA\u7684\u5f88\u60e8\uff0c\u56e0\u4e3a\u4f1a\u6709\u56db\u70b9\u5171\u9762\u7684\u60c5\u51b5\u5b58\u5728\u3002\u4f60\u9700\u8981\u8ba9\u70b9\u6296\u4e00\u6296\u6765\u907f\u514d\u5171\u9762\u7684\u51fa\u73b0\u3002\n\n\u7136\u540e\uff0c\u89c1\u8bc1\u66b4\u529b\u7684\u5947\u8ff9\u5427\uff1a\n\n```\n#include<cstdio>\n#include<cmath>\n#include<cstdlib> \n#define EPS 1e-10\n//\u8bbeEPS\u4e3a1e-9\u65f6\u7206\u7cbe\u5ea6\u53ea\u5f97\u4e8675\u5206\uff0c\u53ef\u80fd\u662f\u8138\u9ed1\nstruct Point\n{\n\tdouble x,y,z;\n}point[105];\nint n;\n\ntypedef Point Vector;\n\ndouble rand01()\n{\n\treturn rand()/(double)RAND_MAX;\n}\n\ndouble randeps()\n{\n\treturn (rand01()-0.5)*EPS;\n}\n\nVector add_noise(Vector p)\n{\n\treturn (Vector){p.x+randeps(),p.y+randeps(),p.z+randeps()};\n}//\u751f\u6210\u4e00\u4e2a\u4e00\u5b9aEPS\u5185\u7684\u6296\u52a8\n\nVector operator - (Vector a,Vector b)\n{\n\treturn (Vector){a.x-b.x,a.y-b.y,a.z-b.z};\n}//\u51cf\u6cd5\n\ndouble mod(Vector a)\n{\n\treturn sqrt(a.x*a.x+a.y*a.y+a.z*a.z);\n}//\u6a21\u957f\n\ndouble Dot(Vector a,Vector b)\n{\n\treturn a.x*b.x+a.y*b.y+a.z*b.z;\n}//\u70b9\u79ef\uff0c\u4e5f\u5c31\u662f\u6570\u91cf\u79ef\n\nVector Cross(Vector a,Vector b)\n{\n\treturn (Vector){a.y*b.z-a.z*b.y,a.z*b.x-a.x*b.z,a.x*b.y-a.y*b.x};\n}//\u53c9\u79ef\uff0c\u4e5f\u5c31\u662f\u5411\u91cf\u79ef\n\ndouble area(Vector a,Vector b)\n{\n\treturn 0.5*mod(Cross(a,b));\n}//\u9762\u79ef\uff0c\u53c9\u79ef\u6a21\u957f\u7684\u4e00\u534a\n\nbool check(int p1,int p2,int p3)\n{\n\tdouble head=0,now;\n\tVector normal=Cross(point[p1]-point[p2],point[p2]-point[p3]);//\u5c06\u53c9\u79ef\u4f5c\u4e3a\u6cd5\u5411\u91cf\n\tfor(int i=0;i<n;++i)\n\t{\n\t\tif(i!=p1&&i!=p2&&i!=p3)\n\t\t{\n\t\t\tif((now=Dot(point[i]-point[p1],normal))*head<0)\n\t\t\t{//\u70b9\u79ef\u4e0e\u4f59\u5f26\u503c\u4e00\u5b9a\u540c\u53f7\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\thead=now;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\nint main()\n{\n\tscanf(\"%d\",&n);\n\tdouble res=0;\n\tfor(int i=0;i<n;++i)\n\t{\n\t\tscanf(\"%lf %lf %lf\",&point[i].x,&point[i].y,&point[i].z);\n\t\tpoint[i]=add_noise(point[i]);//\u8ba9\u70b9\u6296\u52a8\u4e00\u4e0b\n\t}\n\tfor(int i=0;i<n;++i)\n\t{\n\t\tfor(int j=i+1;j<n;++j)\n\t\t{\n\t\t\tfor(int k=j+1;k<n;++k)\n\t\t\t{\n\t\t\t\tif(check(i,j,k))\n\t\t\t\t{//\u6240\u6709\u7684\u70b9\u90fd\u5728\u4e00\u4fa7\n\t\t\t\t\tres+=area(point[i]-point[j],point[j]-point[k]);//\u5c31\u52a0\u4e0a\u8fd9\u4e2a\u9762\u7684\u9762\u79ef\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%.6lf\",res);\n\treturn 0;\n}\n```",
        "postTime": 1528887865,
        "uid": 53374,
        "name": "SuperJvRuo",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2287 \u3010[HNOI2004]\u6700\u4f73\u5305\u88f9\u3011"
    },
    {
        "content": "## \u9898\u76ee\u610f\u601d\n\n\u7ed9\u51fa\u7acb\u4f53\u7684$n$\u4e2a\u70b9\uff0c\u6c42\u4e09\u7ef4\u51f8\u5305\u7684\u9762\u79ef\n\n## \u5206\u6790\n\n\u88f8\u7684\u4e09\u7ef4\u51f8\u5305\u677f\u5b50\uff0c\u4e0d\u4f1a\u5de6\u8f6c\u6a21\u677f\u533a\u3002\n\n\n```cpp\n#include <bits/stdc++.h>\nconst double eps = 1e-19;\nusing namespace std;\nint n, i, j, k, c0, c1;\ndouble now, ans;\nstruct P {\n    double x, y, z;\n} a[110], tmp;\ndouble len(const P& a) { return sqrt(a.x * a.x + a.y * a.y + a.z * a.z); }\nP operator+(const P& a, const P& b) { return (P){ a.x + b.x, a.y + b.y, a.z + b.z }; }\nP operator-(const P& a, const P& b) { return (P){ a.x - b.x, a.y - b.y, a.z - b.z }; }\nP operator&(const P& a, const P& b) { return (P){ a.y * b.z - a.z * b.y, a.z * b.x - a.x * b.z, a.x * b.y - a.y * b.x }; }\ndouble operator|(const P& a, const P& b) { return a.x * b.x + a.y * b.y + a.z * b.z; }\nbool operator!=(const P& a, const P& b) { return a.x != b.x || a.y != b.y || a.z != b.z; }\nbool check(int i, int j, int k) {\n    tmp = (a[j] - a[i]) & (a[k] - a[i]);\n    c0 = c1 = 0;\n    for (int l = 1; l <= n; l++)\n        if (l != i && l != j && l != k) {\n            now = tmp | (a[l] - a[i]);\n            if (now > 0)\n                c1++;\n            if (now < 0)\n                c0++;\n            if (c0 > 0 && c1 > 0)\n                return 0;\n        }\n    return 1;\n}\nint main() {\n    for (scanf(\"%d\", &n), i = 1; i <= n; i++)\n        scanf(\"%lf%lf%lf\", &a[i].x, &a[i].y, &a[i].z),\n            a[i] = a[i] + (P){ rand() * eps, rand() * eps, rand() * eps };\n    for (i = 1; i <= n; i++)\n        for (j = i + 1; j <= n; j++)\n            for (k = j + 1; k <= n; k++)\n                if (check(i, j, k))\n                    ans += len((a[k] - a[i]) & (a[j] - a[i]));\n    return !printf(\"%lf\\n\", ans * 0.5);\n}\n```",
        "postTime": 1555249548,
        "uid": 118317,
        "name": "nofall",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2287 \u3010[HNOI2004]\u6700\u4f73\u5305\u88f9\u3011"
    }
]