[
    {
        "content": "\u5728\u535a\u5ba2\u56ed\u98df\u7528\u66f4\u4f73\uff1a[https://www.cnblogs.com/PinkRabbit/p/12238880.html](https://www.cnblogs.com/PinkRabbit/p/12238880.html)\u3002\n\n### \u9898\u610f\u7b80\u8ff0\uff1a\n\n\u7ed9\u5b9a\u4e00\u4e2a $n$ \u4e2a\u70b9\uff0c$m$ \u6761\u8fb9\u7684\u7b80\u5355\u6709\u5411\u65e0\u73af\u56fe\uff08DAG\uff09\uff0c\u6c42\u51fa\u5b83\u7684\u6700\u957f\u53cd\u94fe\uff0c\u5e76\u6784\u9020\u65b9\u6848\u3002\n\n\u6700\u957f\u53cd\u94fe\uff1a\u4e00\u5f20\u6709\u5411\u65e0\u73af\u56fe\u7684\u6700\u957f\u53cd\u94fe\u4e3a\u4e00\u4e2a\u96c6\u5408 $S \\subseteq V$\uff0c\u6ee1\u8db3\u5bf9\u4e8e $S$ \u4e2d\u7684\u4efb\u610f\u4e24\u4e2a\u4e0d\u540c\u7684\u70b9 $u, v \\in S$\uff08$u \\ne v$\uff09\uff0c$u$ \u4e0d\u80fd\u5230\u8fbe $v$\uff0c$v$ \u4e5f\u4e0d\u80fd\u5230\u8fbe $u$\uff0c\u4e14 $S$ \u7684\u5927\u5c0f\u5c3d\u91cf\u5927\u3002\n\n### \u9898\u89e3\uff1a\n\n\u6839\u636e Dilworth \u5b9a\u7406\uff0c\u4e00\u4e2a DAG \u4e2d\u6700\u957f\u53cd\u94fe\u7684\u5927\u5c0f\uff0c\u7b49\u4e8e\u5176\u4e2d\u6700\u5c0f\u53ef\u91cd\u94fe\u8986\u76d6\u5927\u5c0f\u3002\n\n\u6700\u5c0f\u53ef\u91cd\u94fe\u8986\u76d6\uff1a\u5728 DAG \u4e2d\u9009\u51fa\u82e5\u5e72\u6761\u94fe\uff0c\u7ecf\u8fc7\u6bcf\u4e2a\u70b9\u81f3\u5c11\u4e00\u6b21\uff0c\u4e00\u4e2a\u70b9\u53ef\u88ab\u4e00\u6761\u94fe\u7ecf\u8fc7\u591a\u6b21\uff0c\u4e14\u94fe\u6570\u5c3d\u91cf\u5c11\u3002\n\n\u5176\u5b9e Dilworth \u5b9a\u7406\u63cf\u8ff0\u7684\u662f\uff1a\u4e00\u4e2a\u504f\u5e8f\u96c6\u4e2d\u7684\u6700\u957f\u53cd\u94fe\u5927\u5c0f\uff0c\u7b49\u4e8e\u5176\u4e2d\u6700\u5c0f**\u4e0d\u53ef\u91cd**\u94fe\u8986\u76d6\u5927\u5c0f\u3002  \n\u4f46\u662f\u56e0\u4e3a\u6c42\u51fa DAG \u7684\u4f20\u9012\u95ed\u5305\u540e\uff0cDAG \u4e5f\u53ef\u4ee5\u8868\u793a\u6210\u504f\u5e8f\u96c6\u7684\u5f62\u5f0f\uff0c\u6240\u4ee5\u76f8\u5f53\u4e8e\u53ef\u91cd\u94fe\u8986\u76d6\u3002\n\n\u603b\u4e4b\u5148\u6c42\u51fa DAG \u7684\u4f20\u9012\u95ed\u5305\uff0c\u7136\u540e\u6c42\u5f62\u6210\u7684\u504f\u5e8f\u96c6\u4e0a\u7684\u6700\u5c0f\u4e0d\u53ef\u91cd\u94fe\u8986\u76d6\u3002\n\n\u90a3\u4e48\uff0c\u6700\u5c0f\u4e0d\u53ef\u91cd\u94fe\u8986\u76d6\u5e94\u8be5\u600e\u4e48\u6c42\u5462\uff1f\n\n\u8003\u8651\u4ece\u6bcf\u4e2a\u70b9\u81ea\u6210\u4e00\u6761\u94fe\u7684\u5f62\u6001\u51fa\u53d1\uff0c\u6b64\u65f6\u6070\u597d\u6709 $n$ \u6761\u94fe\u3002  \n\u53ef\u4ee5\u53d1\u73b0\u6700\u7ec8\u7b54\u6848\u4e00\u5b9a\u662f\u5408\u5e76\uff08\u9996\u5c3e\u76f8\u63a5\uff09\u82e5\u5e72\u6761\u94fe\u5f62\u6210\u7684\u3002\u8003\u8651\u91cd\u65b0\u63cf\u8ff0\u8fd9\u4e2a\u8fc7\u7a0b\uff1a  \n\u5bf9\u4e8e\u4e00\u4e2a\u70b9\uff0c\u5b83\u5728\u6700\u7ec8\u7684\u94fe\u4e0a\uff0c\u4e00\u5b9a\u53ea\u6709\u6700\u591a\u4e00\u4e2a\u524d\u9a71\uff0c\u548c\u6700\u591a\u4e00\u4e2a\u540e\u7ee7\u3002  \n\u6211\u4eec\u8003\u8651\u628a\u6bcf\u4e2a\u70b9\u62c6\u6210\u5165\u70b9\u548c\u51fa\u70b9\uff0c\u90a3\u4e48\u5165\u70b9\u548c\u51fa\u70b9\u5e94\u8be5\u53ea\u80fd\u5339\u914d\u4e0a\u6700\u591a\u4e00\u4e2a\u70b9\uff08\u8868\u793a\u524d\u9a71\u6216\u8005\u540e\u7ee7\uff09\u3002\n\n\u8fd9\u4f3c\u4e4e\u662f\u4e8c\u5206\u56fe\u5339\u914d\u7684\u5f62\u5f0f\uff0c\u5177\u4f53\u5730\uff0c\u6211\u4eec\u8003\u8651\uff1a  \n\u628a\u4e00\u4e2a\u70b9 $x$ \u62c6\u6210\u4e24\u4e2a\u70b9\uff1a$x_{out}$ \u548c $x_{in}$\uff0c\u8868\u793a\u51fa\u70b9\u548c\u5165\u70b9\u3002  \n\u5bf9\u4e8e\u4e00\u6761\u8fb9 $x \\to y$\uff0c\u8fde\u63a5 $x_{out}$ \u4e0e $y_{in}$\uff0c\u8868\u793a\u539f\u56fe\u4e2d $x$ \u7684\u51fa\u8fb9\u6307\u5411 $y$\uff08\u8fd9\u6761\u8fb9\u662f $y$ \u7684\u5165\u8fb9\uff09\u3002  \n\u90a3\u4e48\u6700\u7ec8\u5f62\u6210\u4e86\u4e00\u4e2a\u4e8c\u5206\u56fe\uff0c\u5de6\u4fa7\u662f\u6240\u6709 $x_{out}$\uff0c\u53f3\u4fa7\u662f\u6240\u6709 $x_{in}$\u3002\u800c\u4e14\u6240\u6709\u8fb9\u90fd\u662f\u8fde\u63a5\u5de6\u4fa7\u7684\u70b9\u548c\u53f3\u4fa7\u7684\u70b9\u7684\u3002\n\n\u5728\u8fd9\u4e2a\u4e8c\u5206\u56fe $G = \\langle \\langle V_{out}, V_{in} \\rangle , E' \\rangle$ \u4e0a\u505a\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\uff1a  \n\u6bcf\u4e00\u4e2a\u5339\u914d\u8fb9 $x_{out} \\leftrightarrow y_{in}$ \u90fd\u53ef\u4ee5\u8fd8\u539f\u539f\u56fe\u4e2d\u94fe\u7684\u4e00\u6761\u8fb9 $x \\to y$\u3002  \n\u6bcf\u5339\u914d $1$ \u6761\u8fb9\uff0c\u94fe\u7684\u4e2a\u6570\u5c31\u51cf\u5c11 $1$\uff0c\u5219\u6709\u6700\u5c0f\u94fe\u8986\u76d6\u7684\u5927\u5c0f\u7b49\u4e8e $n$ \u51cf\u53bb\u6700\u5927\u5339\u914d\u7684\u5927\u5c0f\u3002\n\n\u7ee7\u7eed\u8003\u8651\u5982\u4f55\u4ece\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u4e2d\uff0c\u6784\u9020\u51fa\u6700\u957f\u53cd\u94fe\u3002\u4ee5\u4e0b\u90e8\u5206\u53c2\u8003\u4e86 [r_64 \u7684\u9898\u89e3](http://r-64.blog.uoj.ac/blog/623)\u3002\n\n\u6211\u4eec\u9996\u5148\u9700\u8981\u6784\u9020\u4e8c\u5206\u56fe\u6700\u5927\u72ec\u7acb\u96c6\uff0c\u8fd9\u90e8\u5206\u53c2\u8003\u4e86[\u300c\u56fe\u7684\u6700\u5927\u5339\u914d\u7b97\u6cd5\u300d](https://www.cnblogs.com/jianglangcaijin/p/6035945.html)\u8fd9\u7bc7\u535a\u5ba2\uff1a\n\n\u8003\u8651\u4e0b\u56fe\uff0c\u53ef\u4ee5\u6c42\u51fa\u5b83\u7684\u5176\u4e2d\u4e00\u79cd\u6700\u5927\u5339\u914d\u4e3a $\\{ \\langle 2, D \\rangle, \\langle 3, E \\rangle, \\langle 4, A \\rangle, \\langle 5, C \\rangle \\}$\uff0c\u8bbe\u6700\u5927\u5339\u914d\u5927\u5c0f\u4e3a $m$\uff0c\u8fd9\u91cc $m = 4$\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/e63s88i4.png)\n\n\u4ece\u53f3\u4fa7\u7684\u975e\u5339\u914d\u70b9\uff08\u8fd9\u91cc\u4e3a $B$\uff0c\u53ef\u80fd\u6709\u591a\u4e2a\uff09\u5f00\u59cb DFS\uff0c\u53f3\u4fa7\u7684\u70b9\u53ea\u80fd\u8d70**\u975e\u5339\u914d\u8fb9**\u5411\u5de6\u8bbf\u95ee\uff0c\u5de6\u4fa7\u7684\u70b9\u53ea\u80fd\u8d70**\u5339\u914d\u8fb9**\u5411\u53f3\u8bbf\u95ee\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/izomyfkm.png)\n\n\u53ef\u4ee5\u53d1\u73b0 DFS \u5230\u4e86 $3, 5, B, C, E$ \u8fd9\u4e9b\u70b9\u3002\n\n\u6211\u4eec\u53d6\u5de6\u4fa7\u88ab DFS \u5230\u7684\u70b9\uff0c\u4ee5\u53ca\u53f3\u4fa7\u6ca1\u88ab DFS \u5230\u7684\u70b9\uff0c\u4e5f\u5c31\u662f $3, 5, A, D$ \u8fd9\u4e9b\u70b9\uff0c\u8bb0\u505a\u96c6\u5408 $S$\uff0c\u53ef\u4ee5\u8bc1\u660e $S$ \u662f\u4e00\u4e2a\u6700\u5c0f\u70b9\u8986\u76d6\u3002  \n**\u6700\u5c0f\u70b9\u8986\u76d6**\uff1a\u9009\u53d6\u6700\u5c11\u7684\u70b9\uff0c\u8986\u76d6\u6bcf\u6761\u8fb9\uff0c\u4e5f\u5c31\u662f\u8bf4\u6bcf\u6761\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u81f3\u5c11\u6709\u4e00\u4e2a\u88ab\u9009\u4e2d\u4e86\u3002\n\n**\u8bc1\u660e\uff1a**\n\n1. \u9996\u5148\u6709\uff1a\u6700\u5c0f\u70b9\u8986\u76d6\u7b49\u4e8e\u6700\u5927\u5339\u914d\u3002\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e $|S| = m$\u3002  \n\u8fd9\u662f\u56e0\u4e3a\uff1a\u53f3\u4fa7\u7684\u975e\u5339\u914d\u70b9\u4e00\u5b9a\u90fd\u88ab DFS \u5230\u4e86\uff0c\u6240\u4ee5\u5728\u53f3\u4fa7\u9009\u53d6\u7684\u5fc5\u7136\u662f\u5339\u914d\u70b9\u3002\u5982\u679c\u4e00\u4e2a\u53f3\u4fa7\u7684\u5339\u914d\u70b9\u6ca1\u88ab\u9009\u53d6\uff0c\u5373\u5b83\u88ab DFS \u5230\u4e86\uff0c\u800c\u8fd9\u53ea\u6709\u53ef\u80fd\u662f\u56e0\u4e3a\u5b83\u5728\u5de6\u4fa7\u5339\u914d\u5230\u7684\u70b9\u88ab DFS \u5230\u4e86\uff0c\u90a3\u4e48\u5de6\u4fa7\u5339\u914d\u5230\u7684\u70b9\u5c31\u4f1a\u88ab\u9009\u4e0a\u3002\u5373\u662f\uff1a**\u6bcf\u6761\u5339\u914d\u8fb9\u7684\u4e24\u7aef\u70b9\u6070\u597d\u4f1a\u88ab\u9009\u4e00\u4e2a**\u3002\u800c\u5de6\u4fa7\u7684\u975e\u5339\u914d\u70b9\u4e00\u5b9a\u4e0d\u4f1a\u88ab DFS \u5230\uff0c\u8fd9\u662f\u56e0\u4e3a\u5982\u679c\u88ab DFS \u5230\u4e86\uff0c\u5fc5\u7136\u4f1a\u5f62\u6210\u4e00\u6761**\u4ea4\u9519\u8def**\uff08\u5308\u7259\u5229\u7b97\u6cd5\u4e2d\u7684\uff09\uff0c\u4e0d\u6ee1\u8db3\u6700\u5927\u5339\u914d\u7684\u6761\u4ef6\u3002\u6240\u4ee5\u6709\u4e14\u4ec5\u6709\u5339\u914d\u8fb9\u7684\u7aef\u70b9\u4f1a\u88ab\u9009\u4e0a\uff0c\u800c\u4e14\u6bcf\u6761\u5339\u914d\u8fb9\u7684\u4e24\u7aef\u70b9\u6070\u597d\u88ab\u9009\u4e00\u4e2a\uff0c\u6240\u4ee5 $\\boldsymbol{|S| = m}$\u3002\n\n2. $S$ \u53ef\u4ee5\u8986\u76d6\u6240\u6709\u7684\u8fb9\u3002  \n\u6211\u4eec\u628a\u8fb9\u6309\u7167\u5de6\u53f3\u7aef\u70b9\u662f\u5426\u88ab DFS \u5230\uff0c\u5206\u6210 $2 \\times 2 = 4$ \u7c7b\u3002\u90a3\u4e48\u5982\u679c\u51fa\u73b0\u4e86\u5de6\u7aef\u70b9\u6ca1\u88ab DFS \u5230\uff0c\u4f46\u662f\u53f3\u7aef\u70b9\u88ab DFS \u5230\u4e86\u7684\u8fb9\uff0c\u5b83\u624d\u4e0d\u4f1a\u88ab\u8986\u76d6\u3002\u7136\u800c\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u8fd9\u662f\u56e0\u4e3a\u5bf9\u4e8e\u4e00\u4e2a\u53f3\u4fa7\u88ab DFS \u5230\u7684\u70b9\uff0c\u4e0e\u5b83\u76f8\u8fde\u7684\u5de6\u4fa7\u7684\u70b9\u4e00\u5b9a\u90fd\u88ab DFS \u5230\u4e86\u3002\n\n\u7136\u540e\u6709\u6700\u5927\u72ec\u7acb\u96c6\u7b49\u4e8e\u6700\u5c0f\u70b9\u8986\u76d6\u7684\u8865\u96c6\u3002\u4e5f\u5c31\u662f\u53ea\u8981\u9009\u51fa\u5de6\u4fa7\u6ca1\u88ab DFS \u5230\u7684\u70b9\u548c\u53f3\u4fa7\u88ab DFS \u5230\u7684\u70b9\u5c31\u884c\u4e86\u3002  \n\u5728\u4e0a\u56fe\u4e2d\u5c31\u662f $1, 2, 4, B, C, E$ \u8fd9 $6$ \u4e2a\u70b9\u3002\n\n\u56de\u5230 DAG \u7684\u60c5\u51b5\uff08\u6ce8\u610f\u5230\u6211\u4eec\u4e3e\u7684\u4f8b\u5b50\u5e76\u4e0d\u662f DAG \u5bfc\u51fa\u7684\u4e8c\u5206\u56fe\uff0c\u6240\u4ee5\u8fd9\u4e2a\u4f8b\u5b50\u4e0d\u80fd\u7528\u6765\u89e3\u91ca\u6700\u957f\u53cd\u94fe\uff09\uff1a\n\n\u4ee4\u6700\u5927\u72ec\u7acb\u96c6\u4e3a $I$\uff0c\u8003\u8651\u9009\u51fa\u6240\u6709 $x_{out}$ \u548c $x_{in}$ \u90fd\u5c5e\u4e8e $I$ \u7684\u70b9\uff0c\u8bb0\u505a\u96c6\u5408 $A$\uff0c\u5b83\u4eec\u6784\u6210\u4e00\u4e2a\u6700\u957f\u53cd\u94fe\u3002\n\n**\u8bc1\u660e\uff1a**  \n\u9996\u5148\u6709 $|I| = 2n - |S| = 2n - m$\uff0c\u800c $|I| - |A|$ \u53ef\u4ee5\u770b\u4f5c\u662f\u6ee1\u8db3\u300c$x_{out}$ \u6216 $x_{in}$ \u5c5e\u4e8e $I$\u300d\u7684 $x$ \u7684\u4e2a\u6570\uff0c\u663e\u7136\u8fd9\u6837\u7684 $x$ \u4e0d\u4f1a\u8d85\u8fc7 $n$ \u4e2a\uff0c\u6240\u4ee5 $|I| - |A| \\le n$\uff0c\u6240\u4ee5 $|A| \\ge |I| - n = n - m$\u3002  \n\u4f46\u662f $A$ \u518d\u5927\uff0c\u4e5f\u4e0d\u80fd\u5927\u8fc7 $n - m$\uff0c\u6240\u4ee5 $|A| = n - m$\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u6700\u957f\u53cd\u94fe\u3002\n\n**\u603b\u7ed3\uff1a**\u53ea\u8981\u9009\u51fa $x_{out}$ \u6ca1\u88ab DFS \u5230\uff0c\u4e14 $x_{in}$ \u88ab DFS \u5230\u4e86\u7684\u70b9\uff0c\u8fd9\u4e9b\u70b9\u5c31\u7ec4\u6210\u4e00\u4e2a\u6700\u957f\u53cd\u94fe\u3002\n\n\u7136\u540e\u662f\u7b2c\u4e09\u95ee\uff0c\u8fd9\u53ea\u8981\u9ed8\u8ba4\u8be5\u70b9\u88ab\u9009\u4e2d\uff0c\u4e5f\u5c31\u662f\u5220\u9664\u8fd9\u4e2a\u70b9\u548c\u4e0e\u5176\u6709\u504f\u5e8f\u5173\u7cfb\u7684\u6240\u6709\u70b9\u540e\uff0c\u518d\u6c42\u4e00\u6b21\u6700\u957f\u53cd\u94fe\uff0c\u5982\u679c\u6700\u957f\u53cd\u94fe\u7684\u5927\u5c0f\u53ea\u51cf\u5c0f\u4e86 $1$\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u5c31\u80fd\u5728\u6700\u957f\u53cd\u94fe\u4e2d\uff0c\u5426\u5219\u4e0d\u80fd\u3002\n\n\u4e0b\u9762\u662f\u4ee3\u7801\uff0c\u590d\u6742\u5ea6\u4e3a $\\mathcal O (n^{3.5})$\uff1a\n\n```cpp\n#include <cstdio>\n#include <algorithm>\n#include <bitset>\n\nnamespace Dinic {\n\tconst int Inf = 0x3f3f3f3f;\n\tconst int MN = 205, MM = 5155;\n\t\n\tint N, S, T;\n\tint h[MN], iter[MN], nxt[MM * 2], to[MM * 2], w[MM * 2], tot;\n\t\n\tinline void Init(int _N) {\n\t\tN = _N, tot = 1;\n\t\tfor (int i = 1; i <= N; ++i) h[i] = 0;\n\t}\n\tinline void SetST(int _S, int _T) { S = _S, T = _T; }\n\t\n\tinline void ins(int u, int v, int x) { nxt[++tot] = h[u], to[tot] = v, w[tot] = x, h[u] = tot; }\n\tinline void insw(int u, int v, int w1 = Inf, int w2 = 0) {\n\t\tif (!u) u = S; if (!v) v = T;\n\t\tins(u, v, w1), ins(v, u, w2);\n\t}\n\t\n\tint lv[MN], que[MN], l, r;\n\t\n\tinline bool Lvl() {\n\t\tfor (int i = 1; i <= N; ++i) lv[i] = 0;\n\t\tlv[S] = 1;\n\t\tque[l = r = 1] = S;\n\t\twhile (l <= r) {\n\t\t\tint u = que[l++];\n\t\t\tfor (int i = h[u]; i; i = nxt[i])\n\t\t\t\tif (w[i] && !lv[to[i]]) {\n\t\t\t\t\tlv[to[i]] = lv[u] + 1;\n\t\t\t\t\tque[++r] = to[i];\n\t\t\t\t}\n\t\t}\n\t\treturn lv[T] != 0;\n\t}\n\t\n\tint Flow(int u, int f) {\n\t\tif (u == T) return f;\n\t\tint d = 0, s = 0;\n\t\tfor (int &i = iter[u]; i; i = nxt[i])\n\t\t\tif (w[i] && lv[to[i]] == lv[u] + 1) {\n\t\t\t\td = Flow(to[i], std::min(f, w[i]));\n\t\t\t\tf -= d, s += d;\n\t\t\t\tw[i] -= d, w[i ^ 1] += d;\n\t\t\t\tif (!f) break;\n\t\t\t}\n\t\treturn s;\n\t}\n\t\n\tinline int DoDinic() {\n\t\tint Ans = 0;\n\t\twhile (Lvl()) {\n\t\t\tfor (int i = 1; i <= N; ++i) iter[i] = h[i];\n\t\t\tAns += Flow(S, Inf);\n\t\t}\n\t\treturn Ans;\n\t}\n}\nusing Dinic::Init;\nusing Dinic::SetST;\nusing Dinic::insw;\nusing Dinic::DoDinic;\nusing Dinic::h;\nusing Dinic::nxt;\nusing Dinic::to;\nusing Dinic::w;\n\nconst int MN = 105;\n\nint N, M, Ans;\nstd::bitset<101> g[MN];\n\nint match[MN], tagl[MN], tagr[MN];\nvoid DFS(int u) {\n\ttagr[u] = 1;\n\tfor (int i = 1; i <= N; ++i)\n\t\tif (g[i][u] && !tagl[i])\n\t\t\ttagl[i] = 1, DFS(match[i]);\n}\n\nint main() {\n\tscanf(\"%d%d\", &N, &M);\n\tfor (int i = 1; i <= M; ++i) {\n\t\tint x, y;\n\t\tscanf(\"%d%d\", &x, &y);\n\t\tg[x][y] = 1;\n\t}\n\tfor (int k = 1; k <= N; ++k)\n\t\tfor (int i = 1; i <= N; ++i)\n\t\t\tif (g[i][k]) g[i] |= g[k];\n\tInit(N + N + 2), SetST(N + N + 1, N + N + 2);\n\tfor (int i = 1; i <= N; ++i)\n\t\tinsw(0, i, 1), insw(N + i, 0, 1);\n\tfor (int i = 1; i <= N; ++i)\n\t\tfor (int j = 1; j <= N; ++j)\n\t\t\tif (g[i][j]) insw(i, N + j, 1);\n\tAns = N - DoDinic();\n\tprintf(\"%d\\n\", Ans);\n\tfor (int i = 1; i <= N; ++i) if (!w[4 * i - 2]) {\n\t\tfor (int j = h[i]; j; j = nxt[j])\n\t\t\tif (!w[j]) { match[i] = to[j] - N; break; }\n\t}\n\tfor (int i = 1; i <= N; ++i) if (w[4 * i]) DFS(i);\n\tfor (int i = 1; i <= N; ++i) printf(\"%d\", !tagl[i] && tagr[i]);\n\tputs(\"\");\n\tfor (int u = 1; u <= N; ++u) {\n\t\tstatic int del[MN]; int cnt = 0;\n\t\tfor (int i = 1; i <= N; ++i) del[i] = i == u || g[i][u] || g[u][i];\n\t\tInit(N + N + 2), SetST(N + N + 1, N + N + 2);\n\t\tfor (int i = 1; i <= N; ++i) if (!del[i])\n\t\t\tinsw(0, i, 1), insw(N + i, 0, 1), ++cnt;\n\t\tfor (int i = 1; i <= N; ++i) if (!del[i])\n\t\t\tfor (int j = 1; j <= N; ++j) if (!del[j])\n\t\t\t\tif (g[i][j]) insw(i, N + j, 1);\n\t\tprintf(\"%d\", cnt - DoDinic() == Ans - 1);\n\t} puts(\"\");\n\treturn 0;\n}\n```",
        "postTime": 1580221003,
        "uid": 10703,
        "name": "\u5c0f\u7c89\u5154",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4298 \u3010[CTSC2008]\u796d\u7940\u3011"
    },
    {
        "content": "\u8bdd\u8bf4\u7b2c\u4e8c\u95ee\u8fd8\u6709\u53e6\u5916\u4e00\u79cd\u6c42\u6cd5...\u6bd4\u8d77\u6211\u5f53\u524d\u770b\u5230\u7684\u8fd9\u4e9b\u9898\u89e3\u7684\u65b9\u6cd5\u90fd\u8981\u66f4\u597d\u63cf\u8ff0\u548c\u8bc1\u660e\uff0c\u5e76\u4e14\u7b80\u5355\u6539\u6539\u5c31\u80fd\u7b97\u51fa\u65b9\u6848\u6570...\u5177\u4f53\u53ef\u4ee5\u770b\u4e0b\u9762\u3002\n\n\u5176\u4ed6\u4e24\u95ee\u7684\u65b9\u6cd5\u5df2\u7ecf\u88ab\u8bb2\u8fc7\u5f88\u591a\u6b21\u4e86...\u90a3\u6211\u5bf9\u4e8e\u8fd9\u90e8\u5206\u5c31\u53ea\u5c1d\u8bd5\u7ed9\u51fa\u4e00\u4e2a\u903b\u8f91\u8f83\u4e3a\u6e05\u6670\u7684\u56de\u7b54\uff08\u5c3d\u6211\u6240\u80fd\u7684\u89c4\u8303\u5316\u6784\u9020\u95ee\u9898...\uff09\uff0c\u5e0c\u671b\u80fd\u7406\u7406\u8bfb\u8005\u7684\u601d\u8defQWQ\n\n~~\uff08\u6211\u7684\u9898\u89e3\u80af\u5b9a\u662f\u6ca1\u4eba\u70b9\u8d5e\u7684\u6240\u4ee5\u770b\u5230\u8fd9\u7684\u80af\u5b9a\u662f\u7ffb\u5230\u6700\u5e95\u7aef\u7684\uff08\u66b4\u8bba\uff09~~\n\n~~\uff08\u600e\u4e48\u6700\u8fd1\u8001\u662f\u559c\u6b22\u6253\u7701\u7565\u53f7...\uff09~~\n\n## Question 1.\n\n\u9898\u76ee\u8981\u6c42\u6211\u4eec\u6c42\u4e00\u4e2a $\\text{DAG}$ \u7684\u6700\u5927\u72ec\u7acb\u70b9\u96c6\u3002\u5982\u679c\u6211\u4eec\u628a $a$ \u80fd\u591f\u5230\u8fbe $b$ \u62bd\u8c61\u6210\u4e00\u4e2a\u504f\u5e8f\u5173\u7cfb\u7684\u8bdd\uff0c\u5c31\u53ef\u4ee5\u628a\u8981\u6c42\u8f6c\u5316\u4e3a\u6c42\u504f\u5e8f\u96c6\u7684\u6700\u5927\u53cd\u94fe\u3002\u6839\u636e $\\text{Dilworth}$ \u5b9a\u7406\uff0c\u8fd9\u5b9e\u9645\u4e0a\u5c31\u662f\u8981\u6c42\u6211\u4eec\u6c42\u6700\u5c11\u94fe\u5212\u5206\uff0c\u800c\u8fd9\u5bf9\u5e94\u5230 $\\text{DAG}$ \u4e0a\u5c31\u662f\u6c42\u6700\u5c11**\u53ef\u91cd**\u94fe\u8986\u76d6\u3002\n\n\u4f46\u4e00\u822c\u6765\u8bf4\u76f4\u63a5\u6c42\u53ef\u91cd\u94fe\u8986\u76d6\u662f\u4e0d\u90a3\u4e48\u597d\u6c42\u7684...\uff08~~\u5176\u5b9e\u8fd9\u662f\u4e00\u4e2a\u6839\u636e \"\u7ed3\u679c\" \u5f97\u51fa\u7684\u7ed3\u8bbaQAQ~~\uff09\u5148\u8003\u8651\u600e\u4e48\u628a\u95ee\u9898\u8f6c\u5316\u4e3a\u4e0d\u53ef\u91cd\u94fe\u8986\u76d6\u3002\n\n\u53d1\u73b0\u5f53\u6211\u4eec\u5c06\u95ee\u9898\u62bd\u8c61\u5230\u504f\u5e8f\u96c6\u65f6\uff0c\u5bf9\u4e8e\u8be5\u504f\u5e8f\u96c6\u7684\u5173\u7cfb\u5168\u96c6 $R$ \u5b9e\u9645\u4e0a\u65e0\u6cd5\u548c $\\text{DAG}$ \u7684\u8fb9\u96c6 $E$ **\u4e00\u4e00\u5bf9\u5e94**\u3002\uff08\u4f8b\u5982\u6709 $E=\\{(a, b), (b, c)\\}$\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6709 $R=\\{(a, b), (b, c), (a, c)\\}$\uff09\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u8981\u5df2\u77e5 $E$ \u800c\u6c42\u51fa $R$\uff08\u6216\u8005\u8bf4 \"\u8865\u5168\" $E$\uff09\uff0c\u8fd9\u4e5f\u53ef\u4ee5\u53eb\u505a**\u6c42\u4f20\u9012\u95ed\u5305**\u3002\u5177\u4f53\u64cd\u4f5c\u53ef\u4ee5\u53d1\u73b0\u5168\u96c6 $R$ \u5bf9\u4e8e $\\text{DAG}$ \u7684\u610f\u4e49\u5c31\u662f\u6240\u6709\u53ef\u4ee5\u5355\u5411\u5230\u8fbe\u7684\u70b9\u5bf9\uff0c\u8fd9\u53ef\u4ee5\u7528 $\\text{Floyd}$ \u7b97\u6cd5 $O(n^3)$ \u5730\u6c42\u51fa\u5b83\uff1a\n\n```cpp\n/*map \u50a8\u5b58\u521d\u59cb\u56fe\u4fe1\u606f\uff08\u662f\u5426\u6709\u8fb9\uff09*/\nfor(int k =1; k <= n; ++k)\n\tfor(int i =1; i <= n; ++i)\n\t\tfor(int j =1; j <= n; ++j)\n\t\t\tif(map[i][k] && map[k][j]) map[i][j] =1;\n```\n\n\u63a5\u4e0b\u6765\u53ea\u9700\u6c42\u51fa $\\text{DAG}$ \u7684\u6700\u5c0f\u4e0d\u53ef\u91cd\u94fe\u8986\u76d6\u6570\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u6211\u4eec\u6839\u636e\uff08\u6c42\u95ed\u5305\u540e\u7684\uff09\u539f\u56fe\u6784\u9020\u4e00\u4e2a\u4e8c\u5206\u56fe\uff1a\u5c06\u6bcf\u4e2a\u70b9 \"\u5206\u88c2\" \u6210\u4e24\u4e2a\u70b9 $x, x'$\uff0c\u82e5\u6709\u4e00\u6761\u8fb9 $(x, y)$\uff0c\u6211\u4eec\u5c06\u5b83\u91cd\u8fde\u63a5\u4e3a $(x, y')$\uff1a\n\n\uff08\u547d\u540d\u6709\u70b9\u4e0d\u4e00\u6837...\uff09\n\n![1](https://cdn.luogu.com.cn/upload/image_hosting/ifpg4b1o.png)\n\n\u800c\u4e0d\u53ef\u91cd\u94fe\u8986\u76d6\u5b9e\u9645\u4e0a\u5c31\u662f\u628a\u539f\u56fe\u5212\u5206\u4e3a\u4e00\u6761\u6761**\u94fe\uff08\u56fe\u610f\u4e49\u4e0b\uff09**\uff0c\u53ef\u4ee5\u60f3\u8c61\u4e3a\uff1a\u4e00\u4e2a $n$ \u4e2a\u70b9\u7684 $\\text{DAG}$ \u4e00\u5f00\u59cb\u6709 $n$ \u6761\u94fe\uff08\u4e00\u4e2a\u70b9\u4e3a\u4e00\u6761\uff09\uff1b\u6211\u4eec\u4e00\u6761\u6761\uff0c\u5e76\u5c3d\u53ef\u80fd\u591a\u5730\u9009\u8fb9\u4f7f\u5269\u4e0b\u7684\u94fe\u6570\u76ee\u5c3d\u91cf\u5c11\uff0c\u540c\u65f6\u8981\u6c42\u4e00\u4e2a\u70b9**\u6700\u591a\u6709\u4e00\u6761\u51fa\u8fb9\u4e00\u6761\u5165\u8fb9**\uff08\u6ee1\u8db3\u94fe\u8981\u6c42\uff09\u3002\u8fd9\u5b9e\u9645\u4e0a\u5c31\u548c\u6c42\u8f6c\u5316\u7684\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\u7684\u610f\u4e49\u4e00\u81f4\uff1a\u5bf9\u5e94\u539f\u56fe\u540c\u4e00\u7f16\u53f7\u7684\u70b9\u6700\u591a\u88ab\u5339\u914d\u4e24\u6b21\uff0c\u5e76\u5c3d\u53ef\u80fd\u591a\u5730\u9009\u8fb9\u3002\n\n\u6bcf\u5339\u914d\u4e00\u6761\u8fb9\uff0c\u5c31\u76f8\u5f53\u5728\u539f\u56fe\u53d6\u4e00\u6761\u8fb9\uff0c\u5c31\u80fd\u4f7f\u94fe\u6570\u76ee\u51cf\u5c11\u4e00\uff1b\u4e8e\u662f\u7b54\u6848\uff08\u6700\u5c0f\u4e0d\u53ef\u91cd\u94fe\u8986\u76d6\u6570\uff09\u5c31\u7b49\u4e8e $\\text{\u539f\u56fe\u70b9\u6570\u76ee} - \\text{\u6700\u5927\u5339\u914d\u6570}$\u3002\n\n## Question 3.\n######  _\u7531\u4e8e\u95ee\u9898\u4e8c\u9700\u8981\u95ee\u9898\u4e09\u7684\u7b54\u6848\uff0c\u5c31\u5148\u8bb2\u95ee\u9898\u4e09\u4e86\u3002_ \n\n\u6211\u4eec\u8003\u8651\u539f\u56fe\uff08\u5df2\u6c42\u95ed\u5305\uff09\u4e2d\u4e00\u4e2a\u70b9\u5bf9\u4e8e\u72ec\u7acb\u96c6\u5212\u5206\u7684\u72b6\u6001\u3002\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n1. \u8fd9\u4e2a\u70b9\u548c\u6240\u6709\u548c\u8fd9\u4e2a\u70b9\u6709\u5173\u7cfb\u7684\u70b9\u7ec4\u6210\u7684\u70b9\u96c6\u662f\u539f\u56fe\u7684\u4e00\u6761\u94fe\uff08**\u504f\u5e8f\u96c6\u610f\u4e49\u4e0b**\uff09\u3002\n2. \u8fd9\u4e2a\u70b9\u548c\u6240\u6709\u548c\u8fd9\u4e2a\u70b9\u6709\u5173\u7cfb\u7684\u70b9\u7ec4\u6210\u7684\u70b9\u96c6\u65e2\u4e0d\u662f\u539f\u56fe\u7684\u4e00\u6761\u94fe\uff0c\u4e5f\u4e0d\u662f\u539f\u56fe\u7684\u4e00\u6761\u53cd\u94fe\u3002\n\n\uff08\u4e3a\u4e86\u770b\u7740\u6e05\u695a\uff0c\u4e0b\u56fe**\u6ca1\u6709\u628a\u95ed\u5305\u7684** \"\u8fb9\" \u52a0\u4e0a\u53bb\uff09\n\n![2](https://cdn.luogu.com.cn/upload/image_hosting/uls4aqz1.png)\n\n\u5bf9\u4e8e `\u60c5\u51b51`\uff0c\u65e0\u8bba\u5982\u4f55\u6211\u4eec\u53ea\u80fd\u5728\u8fd9\u6761\u94fe\u4e2d\u9009\u4e00\u4e2a\u70b9\uff0c\u56e0\u6b64\u8fd9\u4e2a\u70b9\u662f\u53ef\u9009\u7684\uff08**\u6700\u4f18**\uff09\uff0c\u4e14\u5220\u53bb\u8be5\u70b9\u96c6\u663e\u7136\u4f1a\u4f7f\u7b54\u6848\u51cf\u5c11\u4e00\uff1b\u5bf9\u4e8e `\u60c5\u51b52`\uff0c\u6211\u4eec\u662f\u6709\u53ef\u80fd\u5c06\u8fd9\u4e2a\u70b9\u96c6\u5212\u5206\u4e3a\u591a\u6761\u94fe\uff08\"\u591a\u4e2a\" `\u60c5\u51b51`\uff09\uff0c\u56e0\u6b64\u9009\u8fd9\u4e2a\u70b9**\u4e0d\u662f\u6700\u4f18**\u7684\uff0c\u4e14\u5220\u53bb\u4e2a\u70b9\u96c6\u4f7f\u7b54\u6848\u7684\u51cf\u91cf\u663e\u7136\u5927\u4e8e\u4e00\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u679a\u4e3e\u5220\u53bb\u70b9\u96c6\uff0c\u91cd\u65b0\u6c42\u7b54\u6848\uff0c\u5e76\u6bd4\u8f83\u65b0\u7b54\u6848\u4e0e\u539f\u59cb\u7b54\u6848\u7684\u5dee\u503c\u6765\u786e\u5b9a\u67d0\u4e2a\u70b9\u662f\u5426\u53ef\u9009\u3002\n\n## Question 2.\n\n\u56de\u60f3\u4e00\u4e0b\u6211\u4eec\u5728 $\\text{Question 3}$ \u63d0\u5230\u7684\u60c5\u51b5\u4e00\uff1a\n\n>\u5bf9\u4e8e `\u60c5\u51b51`\uff0c\u65e0\u8bba\u5982\u4f55\u6211\u4eec\u53ea\u80fd\u5728\u8fd9\u6761\u94fe\u4e2d\u9009\u4e00\u4e2a\u70b9\u3002\n\n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5c06\u4e00\u4e2a\u53ef\u9009\u70b9\u7684\u6240\u6709\u548c\u5b83\u6709\u5173\u7cfb\u7684**\u53ef\u9009\u70b9**\u67d3\u8272\uff0c\u8fd9\u4e9b\u540c\u4e00\u989c\u8272\u7684\u53ef\u9009\u70b9\u6211\u4eec\u81f3\u591a\u53ea\u80fd\u9009\u4e00\u4e2a\u3002\u5bf9\u4e8e\u6bcf\u79cd\u989c\u8272\uff0c\u6211\u4eec\u53ea\u8981\u968f\u4fbf\u9009\u4e00\u4e2a\u70b9\uff08\u6bd4\u5982\u7b2c\u4e00\u4e2a\u627e\u5230\u7684\uff09\u5c31\u53ef\u4ee5\u7ec4\u6210\u4e00\u79cd\u53ef\u884c\u7684\u65b9\u6848\u4e86\u3002\u540c\u65f6\u7531\u4e8e\u8fd9\u79cd\u505a\u6cd5\u6c42\u51fa\u4e86\u6bcf\u4e2a\u53ef\u9009\u70b9\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u6c42\u51fa**\u6240\u6709\u53ef\u884c\u7684\u6700\u5927\u72ec\u7acb\u96c6\u65b9\u6848\u6570\u76ee**\u3002\n\n## CODE\n\n```cpp\n#include <cstdio>\n#include <cstring>\n\nconst int MAXN =110, MAXM =1010;\n\n/*------------------------------Map------------------------------*/\n\nint n, m;\nbool map[MAXN][MAXN];\nbool vis[MAXN], isdel[MAXN];\nint lk[MAXN];\n\nbool match(int x){/*\u6211\u6bd4\u8f83\u83dc QAQ\uff0c\u7528\u7684\u662f\u5308\u7259\u5229\u6c42\u6cd5*/\n\tif(x == 0) return 1;\n\tfor(int y =1; y <= n; ++y) if(map[x][y] && !vis[y]){\n\t\tif(isdel[y]) continue;\n\t\tvis[y] =1;\n\t\tif(!lk[y] || match(lk[y])){\n\t\t\tlk[y] =x;\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn 0;\n}\n\nint col[MAXN];\nbool able[MAXN], chose[MAXN];\n\n/*------------------------------Main------------------------------*/\n\ninline int read(){\n\tint x =0; char c =getchar();\n\twhile(c < '0' || c > '9') c =getchar();\n\twhile(c >= '0' && c <= '9') x = (x<<3) + (x<<1) + (48^c), c =getchar();\n\treturn x;\n}\n\nint main(){\n\tn =read(), m =read();\n\tfor(int i =1; i <= m; ++i){\n\t\tint x =read(), y =read();\n\t\tmap[x][y] =1;\n\t}\n\t/*Floyd*/\n\tfor(int k =1; k <= n; ++k) for(int i =1; i <= n; ++i) for(int j =1; j <= n; ++j)\n\t\tif(map[i][k] && map[k][j]) map[i][j] =1;\n\tint cntm =0;\n\tfor(int i =1; i <= n; ++i){\n\t\tmemset(vis, 0, sizeof(vis));\n\t\tif(match(i)) ++cntm;\n\t}\n\tprintf(\"%d\\n\", n-cntm);/*\u539f\u56fe\u70b9\u6570\u76ee - \u6700\u5927\u5339\u914d\u6570*/\n\tfor(int rt =1; rt <= n; ++rt){\n\t\tmemset(isdel, 0, sizeof(isdel)), memset(lk, 0, sizeof(lk));\n\t\tint cntm2 =0, nn =n;\n\t\tfor(int i =1; i <= n; ++i) if(map[i][rt] || map[rt][i] || i == rt) isdel[i] =1, --nn;\n\t\tfor(int i =1; i <= n; ++i){\n\t\t\tif(isdel[i]) continue;\n\t\t\tmemset(vis, 0, sizeof(vis));\n\t\t\tif(match(i)) ++cntm2;\n\t\t}\n\t\table[rt] =(nn-cntm2 == (n-cntm)-1);/*\u662f\u60c5\u51b5\u4e00*/\n\t}\n\tint COL =0;\n\tfor(int i =1; i <= n; ++i) if(able[i] && !col[i]){\n\t\t++COL;\n\t\tchose[i] =1;/*\u9009\u7b2c\u4e00\u4e2a\u78b0\u5230\u7684*/\n\t\t/*\u8fd9\u91cc\u67d3\u8272\u6bd4\u8f83\u968f\u610f...\u53cd\u6b63\u67d3\u4e86\u4e0d\u53ef\u9009\u70b9\u4e5f\u6ca1\u5f71\u54cd*/\n\t\tfor(int j =1; j <= n; ++j) if(map[j][i] || map[i][j] || j == i) col[j] =COL;\n\t}\n\tfor(int i =1; i <= n; ++i) if(chose[i]) putchar('1'); else putchar('0');\n\tputchar('\\n');\n\tfor(int i =1; i <= n; ++i) if(able[i]) putchar('1'); else putchar('0');\n}\n```\n\n\n## Question 2*.\n\n\u8fd9\u91cc\u518d\u8bb2\u4e0b\u5176\u4ed6\u9898\u89e3\u91cc\u7684\u505a\u6cd5\u3002\n\n\u5148\u6c42\u51fa\uff08\u8f6c\u5316\u540e\u7684\uff09\u4e8c\u5206\u56fe\u7684\u4efb\u610f\u4e00\u7ec4\u6700\u5927\u5339\u914d\u3002\u6211\u4eec $\\text{dfs}$ \u5de6\u8fb9\u6240\u6709\u672a\u5339\u914d\u7684\u70b9\uff0c\u6bcf\u6b21 $\\text{dfs}$ \u4ece\u5de6\u5f80\u53f3\u53ea\u8d70\u672a\u5339\u914d\u8fb9\uff0c\u4ece\u53f3\u5f80\u5de6\u5219\u53ea\u8d70\u5339\u914d\u8fb9\uff08\u6ce8\u610f\u6700\u540e\u7684\u641c\u7d22\u6811\u53ef\u80fd\u4e0d\u6b62\u662f\u4e00\u6761\u94fe\uff0c\u4e5f\u53ef\u80fd**\u662f\u4e00\u68f5\u6811**\u3002\u4e5f\u5c31\u662f\u8bf4\u8981 $\\text{dfs}$ \u5f53\u524d\u53ef\u627e\u5230\u7684**\u6240\u6709**\u672a\u5339\u914d\u8fb9\uff09\u3002\n\n\u4e8c\u5206\u56fe\u7684\u4e00\u79cd\u6700\u5c0f\u70b9\u8986\u76d6\u5c31\u662f**\u5de6\u4fa7\u7684\u672a\u8bbf\u95ee\u70b9\u52a0\u4e0a\u53f3\u4fa7\u7684\u5df2\u8bbf\u95ee\u70b9**\uff1b\u4e8c\u5206\u56fe\u7684\u4e00\u79cd\u6700\u5927\u72ec\u7acb\u96c6\u5c31\u662f\u8fd9\u4e9b\u70b9\u7684\u8865\u96c6\uff08\u5bf9\u4e8e\u4e8c\u5206\u56fe\u6240\u6709\u70b9\u5168\u96c6\uff09\uff1b\u800c\u539f\u56fe\u7684\u4e00\u79cd\u6700\u5927\u72ec\u7acb\u96c6\u5c31\u662f\u7531\u6240\u6709\u5176\u7f16\u53f7\u5bf9\u5e94\u7684\u4e8c\u5206\u56fe**\u5de6\u4fa7\u70b9\u548c\u53f3\u4fa7\u70b9\u90fd\u5728\u4e8c\u5206\u56fe\u6700\u5927\u72ec\u7acb\u96c6\u4e2d**\u7684\u70b9\u7ec4\u6210\uff08\u6216\u8005\u8bf4\u7531\u6240\u6709\u5176\u7f16\u53f7\u5bf9\u5e94\u7684\u4e8c\u5206\u56fe**\u5de6\u4fa7\u70b9\u5df2\u8bbf\u95ee\u4e14\u53f3\u4fa7\u70b9\u672a\u8bbf\u95ee**\u7684\u70b9\u7ec4\u6210\uff09\u3002\n\n\uff08\u4e0a\u9762\u7684\u8bdd\u90fd\u6709\u70b9\u7ed5...\u5efa\u8bae\u591a\u8bfb\u51e0\u6b21\uff09\n\n\u73b0\u5728\u5148\u6765\u8bc1\u660e**\u4e3a\u4ec0\u4e48\u8fd9\u79cd\u5212\u5206\u662f\u4e8c\u5206\u56fe\u7684\u4e00\u79cd\u6700\u5c0f\u70b9\u8986\u76d6**\u3002\n\n\u9996\u5148\u663e\u7136\u6700\u5c0f\u70b9\u8986\u76d6\u6570\u52a0\u6700\u5927\u72ec\u7acb\u96c6\u6570 **\u6216** \u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\u6570\u52a0\u6700\u5c0f\u94fe\u5212\u5206\u6570\uff08\u60f3\u60f3 $\\text{Question 1}$\uff09\u7b49\u4e8e\u70b9\u6570\uff0c\u800c\u6839\u636e $\\text{Dilworth}$ \u5b9a\u7406\u6709\u6700\u5927\u72ec\u7acb\u96c6\u6570\u7b49\u4e8e\u6700\u5c0f\u94fe\u5212\u5206\u6570\uff0c\u56e0\u6b64\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\u6570\u7b49\u4e8e\u6700\u5c0f\u70b9\u8986\u76d6\u6570\u3002\n\n\u800c\u4e14\u6211\u4eec\u6709\uff1a\n\n1. \u8be5\u5212\u5206\u5728\u6570\u503c\u4e0a\u7b49\u4e8e\u6700\u5927\u5339\u914d\u3002\u56e0\u4e3a\u6240\u6709\u5339\u914d\u8fb9\u7684\u7aef\u70b9\u8981\u4e48\u540c\u65f6\u88ab\u8bbf\u95ee\u8fc7\uff0c\u8981\u4e48\u90fd\u6ca1\u88ab\u8bbf\u95ee\u8fc7\uff08\u5bf9\u4e8e\u5de6\u8fb9\u7684\u672a\u5339\u914d\u70b9\uff0c\u6211\u4eec\u7684\u65b9\u6cd5**\u4fdd\u8bc1\u88ab\u8bbf\u95ee\u8fc7**\uff0c\u5b83\u4eec**\u4e0d\u4f1a\u88ab\u8ba1\u5165\u7b54\u6848**\uff09\u3002\n\n2. \u8be5\u5212\u5206\u53ef\u4ee5\u8986\u76d6\u6240\u6709\u7684\u8fb9\u3002**\u5982\u679c**\u8fd9\u662f\u4e00\u6761\u5339\u914d\u8fb9\uff0c\u7531\u4e8e\u5339\u914d\u8fb9\u7684\u4e24\u7aef\u88ab\u8bbf\u95ee\u7684\u72b6\u6001\u662f**\u4e00\u6837\u7684**\uff0c\u56e0\u6b64\u8fd9\u6761\u8fb9\u4fdd\u8bc1\u88ab\u8986\u76d6\uff1b**\u5982\u679c**\u8fd9\u662f\u4e00\u6761\u672a\u5339\u914d\u8fb9\uff0c**\u82e5**\u5176\u5de6\u7aef\u70b9\u672a\u88ab\u5339\u914d\uff0c\u90a3\u4e48\u5b83\u53f3\u7aef\u70b9\u4e00\u5b9a\u4f1a\u88ab\u8bbf\u95ee\uff1b**\u82e5**\u5176\u53f3\u7aef\u70b9\u672a\u88ab\u5339\u914d\uff0c\u90a3\u4e48**\u5bf9\u4e8e**\u5176\u5de6\u7aef\u70b9\uff08\u5df2\u548c\u5176\u4ed6\u53f3\u7aef\u70b9\u5339\u914d\uff09\u672a\u88ab\u8bbf\u95ee\uff08\u6b64\u65f6\u53f3\u7aef\u70b9\u4e5f\u4e0d\u4f1a\u88ab\u8bbf\u95ee\uff09\uff0c\u8fd9\u6761\u8fb9\u4f1a\u88ab\u5de6\u7aef\u70b9\u8986\u76d6\uff1b**\u5bf9\u4e8e**\u5176\u5de6\u7aef\u70b9\u88ab\u8bbf\u95ee\uff0c\u53f3\u7aef\u70b9\u4e5f\u4e00\u5b9a\u88ab\u8bbf\u95ee\uff0c\u8fd9\u6761\u8fb9\u4f1a\u88ab\u53f3\u7aef\u70b9\u8986\u76d6\u3002\n\n\u56e0\u6b64\u53ef\u4ee5\u8bf4\u8fd9\u79cd\u5212\u5206\u5c31\u662f\u4e8c\u5206\u56fe\u7684\u4e00\u79cd\u6700\u5c0f\u70b9\u8986\u76d6\u3002\n\n\uff08\u6b64\u6bb5\u8bc1\u660e\u53c2\u8003\u4e86 [zsy](https://www.cnblogs.com/zhoushuyu) \u7684 [\u8bc1\u660e](https://cdn.luogu.com.cn/upload/image_hosting/0ivksiuh.png)\uff0c\u611f\u8c22\uff09\n\n\u63a5\u7740\u6211\u4eec\u518d\u8003\u8651**\u4e3a\u4ec0\u4e48\u5176\u7f16\u53f7\u5bf9\u5e94\u7684\u5de6\u4fa7\u70b9\u548c\u53f3\u4fa7\u70b9\u90fd\u5728\u4e8c\u5206\u56fe\u6700\u5927\u72ec\u7acb\u96c6\u4e2d\u7684\u70b9\u96c6\u5c31\u662f\u539f\u56fe\u7684\u4e00\u79cd\u6700\u5927\u72ec\u7acb\u96c6\u5212\u5206**\u3002~~\uff08\u597d\u957f...\uff09~~\n\n\uff08\u7b26\u53f7 $|.|$ \u8868\u793a\u4e00\u4e2a\u96c6\u5408\u7684\u5143\u7d20\u6570\uff09\n\n\u8bbe\u4e8c\u5206\u56fe\u6700\u5c0f\u70b9\u8986\u76d6 $S$\uff0c\u6700\u5927\u72ec\u7acb\u96c6 $I$\uff0c\u518d\u8bbe $A$ \u7531\u6240\u6709\u7f16\u53f7\u5bf9\u5e94\u7684\u4e8c\u5206\u56fe\u5de6\u53f3\u70b9\u90fd\u5728 $I$ \u4e2d\u7684\u539f\u56fe\u70b9\uff08\u6216\u4e8c\u5206\u56fe\u70b9\uff0c\u8fd9\u91cc\u4e0d\u592a\u4e25\u8c28~~\u611f\u6027~~\u7406\u89e3\u4e0b...\uff09\u7ec4\u6210\uff08\u6211\u4eec\u8981\u8bc1\u5b83\u662f\u539f\u56fe\u7684\u4e00\u79cd\u6700\u5927\u72ec\u7acb\u96c6\u5212\u5206 ~\uff09\u3002\u6700\u540e\u8bbe\u539f\u56fe\u70b9\u6570 $n$\u3002\n\n\u9996\u5148\u6709 $|I|=2n-|S|$\uff0c\u8fd9\u5f88\u663e\u7136\u3002\n\n\u800c$|I|-|A|$ \u53ef\u4ee5\u770b\u505a\u662f\u6ee1\u8db3\u300c\u7f16\u53f7\u5bf9\u5e94\u7684\u4e8c\u5206\u56fe\u5de6\u7aef\u70b9**\u6216**\u53f3\u7aef\u70b9**\u4e4b\u4e00** $\\in I$\u300d\u7684\u70b9\u6570\u76ee\uff0c\u663e\u7136\u8fd9\u6837\u7684\u70b9\u6700\u591a\u4e0d\u4f1a\u8d85\u8fc7 $n$ \u4e2a\uff0c\u6240\u4ee5\u6709 $|I|-|A|\\leqslant n$\uff0c\u5373 $|A|\\geqslant n-|S|$\u3002\n\n\u663e\u7136\u539f\u56fe\u7684\u72ec\u7acb\u96c6\u6700\u5927\u4e5f\u5c31\u662f $n-|S|$\u3002\u540c\u65f6\u7531\u4e8e $A$ \u662f\u4e8c\u5206\u56fe\u6700\u5927\u72ec\u7acb\u96c6\u7684\u5b50\u96c6\uff0c\u4e5f\u53ef\u4ee5\u77e5\u9053 $A$ \u4e0d\u8bba\u5728\u4e8c\u5206\u56fe**\u8fd8\u662f\u539f\u56fe**\u90fd\u662f\u4e00\u4e2a\u72ec\u7acb\u96c6\u3002\u6240\u4ee5 $A$ \u5c31\u662f\u539f\u56fe\u7684\u4e00\u79cd\u6700\u5927\u72ec\u7acb\u96c6\u5212\u5206\u3002\n\n\uff08\u6b64\u6bb5\u8bc1\u660e\u53c2\u8003\u4e86 [\u5c0f\u7c89\u5154](https://www.luogu.com.cn/user/10703) \u7684 [\u8bc1\u660e](https://www.luogu.com.cn/blog/PinkRabbit/solution-p4298)\u540e\u6bb5\uff0c\u611f\u8c22\uff09\n\n---\n#### \u53e6\uff1a\n\n\u5173\u4e8e\u8fd9\u79cd~~\u6781\u5176\u9ebb\u70e6~~\u7684\u6784\u9020\u65b9\u5f0f\uff0c\u6700\u521d\u7684\u6765\u6e90\u5e94\u8be5\u662f\u7531 D\u00e9nes K\u0151nig \u8bc1\u660e\u7684 [$\\text{K\u0151nig}$ \u5b9a\u7406](https://en.wikipedia.org/wiki/K%C5%91nig%27s_theorem_(graph_theory))\uff08\u6216[\u767e\u5ea6\u767e\u79d1](https://baike.baidu.com/item/%E6%9F%AF%E5%B0%BC%E5%B8%8C%E5%AE%9A%E7%90%86/19584092#viewPageContent)\uff0c\u4f46\u8bf4\u5b9e\u8bdd\u6ca1\u7ef4\u57fa\u51c6\u786e\uff09\u7684[\u8bc1\u660e\u65b9\u5f0f](https://en.wikipedia.org/wiki/K%C5%91nig%27s_theorem_(graph_theory)#Proof)\u3002\n\n\u9996\u5148\uff0c\u8fd9\u4e2a\u5b9a\u7406\u8868\u660e\u4e86 **\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\u6570\u7b49\u4e8e\u5176\u6700\u5c0f\u70b9\u8986\u76d6\u6570** \uff1b\u7136\u540e\uff0c\u5176\u8bc1\u660e\u65b9\u5f0f**\u5b9e\u9645\u4e0a\u5c31\u662f**\u6211\u4eec\u7a0b\u5e8f\u5b9e\u73b0\u7684\u6c42\u4e8c\u5206\u56fe\u6700\u5c0f\u70b9\u8986\u76d6\u65b9\u6848\u7684\u65b9\u6cd5\u3002\n\n\uff08\u81f3\u4e8e\u4ed6\u600e\u4e48\u60f3\u5230\u7684\u6211\u4e5f\u4e0d\u77e5\u9053...~~%%%~~ \u4f46\u8fd9\u91cc\u5f97\u8bf4\u660e\u4e0b $\\text{Dilworth}$ \u5b9a\u7406\u662f\u5728\u8fd9\u4e2a\u8bc1\u660e**\u540e**\u7ea6 $\\text{20}$ \u5e74\u624d\u88ab\u8bc1\u51fa\u6765\u7684\uff09\n\n\uff08\u67e5\u8bc1\u8def\u7ebf\uff1a[\u5c0f\u7c89\u5154\u9898\u89e3](https://www.luogu.com.cn/blog/PinkRabbit/solution-p4298) -> [r_64\u9898\u89e3](http://r-64.blog.uoj.ac/blog/623) -> [stackoverflow](https://stackoverflow.com/questions/23858530/how-can-i-get-the-antichain-elements-in-spoj-divrel) -> [\u7ef4\u57fa](https://en.wikipedia.org/wiki/K%C5%91nig%27s_theorem_(graph_theory))\uff09\n\n## CODE*\n\n```cpp\n#include <cstdio>\n#include <cstring>\n\nconst int MAXN =110, MAXM =1010;\n\n/*------------------------------Map------------------------------*/\n\nint n, m;\nbool map[MAXN][MAXN];\nbool vis[MAXN], isdel[MAXN];\nint lk[MAXN];\n\nbool match(int x){/*\u8fd8\u662f\u5308\u7259\u5229 QWQ*/\n\tif(x == 0) return 1;\n\tfor(int y =1; y <= n; ++y) if(map[x][y] && !vis[y]){\n\t\tif(isdel[y]) continue;\n\t\tvis[y] =1;\n\t\tif(!lk[y] || match(lk[y])){\n\t\t\tlk[y] =x;\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn 0;\n}\n\nbool flg[2][MAXN]/*1\u662f x\uff08\u5de6\uff09\uff0c0\u662f y\uff1b\u8868\u793a\u662f\u5426\u8bbf\u95ee*/, xused[MAXN]/*\u5de6\u7aef\u70b9\u662f\u5426\u5339\u914d*/;\n\nvoid dfs(int u){\n\tflg[1][u] =1;\n\tfor(int y =1; y <= n; ++y) if(map[u][y] && lk[y] != u && !flg[0][y]/*\u641c\u8fc7\u7684\u518d\u641c\u4e5f\u6ca1\u610f\u4e49...\u5176\u5b9e\u8fd9\u4e2a\u6761\u4ef6\u968f\u4fbf\u5566*/){\n\t\tflg[0][y] =1;\n\t\tif(lk[y] != 0) dfs(lk[y]);\n\t}\n}\n\n/*------------------------------Main------------------------------*/\n\ninline int read(){\n\tint x =0; char c =getchar();\n\twhile(c < '0' || c > '9') c =getchar();\n\twhile(c >= '0' && c <= '9') x = (x<<3) + (x<<1) + (48^c), c =getchar();\n\treturn x;\n}\n\nint main(){\n\tn =read(), m =read();\n\tfor(int i =1; i <= m; ++i){\n\t\tint x =read(), y =read();\n\t\tmap[x][y] =1;\n\t}\n\tfor(int k =1; k <= n; ++k) for(int i =1; i <= n; ++i) for(int j =1; j <= n; ++j)\n\t\tif(map[i][k] && map[k][j]) map[i][j] =1;\n\tint cntm =0;\n\tfor(int i =1; i <= n; ++i){\n\t\tmemset(vis, 0, sizeof(vis));\n\t\tif(match(i)) ++cntm;\n\t}\n\tprintf(\"%d\\n\", n-cntm);\n\t\n\t/*\u8fd9\u91cc\u5f00\u59cb\u5904\u7406\u7b2c\u4e8c\u95ee*/\n\tfor(int i =1; i <= n; ++i) xused[lk[i]] =1;\n\tfor(int i =1; i <= n; ++i) if(!xused[i]) dfs(i);\n\t/*\u4e0b\u9762\u5224\u65ad\u6309\u9898\u89e3\u4e2d\u7684\u5b9a\u4e49*/\n\tfor(int i =1; i <= n; ++i) if(!flg[1][i] || flg[0][i]) putchar('0'); else putchar('1');\n\t/*\u53c8\u53ef\u4ee5\u5199\u4f5c\uff1aif(!(flg[1][i] && !flg[0][i])) putchar('1'); else putchar('0');*/\n\t\n\tputchar('\\n');\n\tfor(int rt =1; rt <= n; ++rt){\n\t\tmemset(isdel, 0, sizeof(isdel)), memset(lk, 0, sizeof(lk));\n\t\tint cntm2 =0, nn =n;\n\t\tfor(int i =1; i <= n; ++i) if(map[i][rt] || map[rt][i] || i == rt) isdel[i] =1, --nn;\n\t\tfor(int i =1; i <= n; ++i){\n\t\t\tif(isdel[i]) continue;\n\t\t\tmemset(vis, 0, sizeof(vis));\n\t\t\tif(match(i)) ++cntm2;\n\t\t}\n\t\tprintf(\"%d\", (nn-cntm2 == (n-cntm)-1));\n\t}\n}\n```\n\n\u8bdd\u8bf4 $\\text{Question 2}$ \u4e24\u79cd\u65b9\u6cd5\u7684\u590d\u6742\u5ea6**\u90fd\u53ef\u4ee5\u662f** $O(n+m)$ \uff08$m$ \u57fa\u4e8e**\u6c42\u4f20\u9012\u95ed\u5305\u540e**\u7684\u5173\u7cfb\u6570\uff09\u7684QWQ\n\n---\n\n\u80fd\u770b\u5230\u540e\u9762\u8fd9\u4e00\u5c0f\u6bb5\u5b57\u7684\u80af\u5b9a\u662f\uff08~~\u5927\u6982\uff1f~~\uff09\u8ba4\u771f\u770b\u5b8c\u5168\u7bc7\u4e86QWQ\u3002\u867d\u7136\u5728\u5f00\u5934\u8bf4\u4e86\u8981\u5c3d\u91cf \"\u89c4\u8303\u5316\u6784\u9020\u95ee\u9898\"\uff0c\u4f46\u7531\u4e8e\u89e3\u6790\u592a\u957f\u5bfc\u81f4\u6211\u5199\u7740\u5199\u7740\u5c31\u4e0d\u8bbe\u7b26\u53f7\u5168\u6587\u5b57\u4e86QAQ\uff08\u4e8e\u662f\u5c31\u80fd\u770b\u5230\u4e00\u4e9b\u6781\u957f\u7684\u547d\u9898...\uff09\uff0c~~\u73b0\u5728\u5199\u5b8c\u770b\u7bc7\u5e45\u592a\u5927\u5c31\u61d2\u5f97\u6539\u4e86\uff08bushi~~\u3002\u4e0d\u8fc7\u6211\u8fd8\u662f\u5c3d\u91cf\u8ba9\u6587\u5b57\u8868\u8fbe\u7684\u610f\u601d**\u51c6\u786e**\u6ca1\u6709\u5f02\u8bae\u4e86\uff0c\u5982\u679c\u54ea\u6bb5\u770b\u4e0d\u61c2\u591a\u8bfb\u51e0\u6b21\u4e00\u5b9a\u80fd\u7406\u89e3www\uff08\u6211\u53ef\u662f\u628a\u81ea\u5df1\u601d\u8003\u65f6\u9047\u5230\u7684\u5751\u70b9\u90fd\u4e8b\u65e0\u5de8**\u7ec6**\u5730\u5199\u8fdb\u53bb\u60f9\uff09\u3002\n\n~~\uff08\u867d\u7136\u4ee3\u7801\u633a\u597d\u5199\uff0c\u4f46\u8fd9\u9898\u7684\u601d\u8def\u53ef\u771f\u662f\u6bd2\u7624...\uff08~~",
        "postTime": 1591190297,
        "uid": 105254,
        "name": "Piwry",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4298 \u3010[CTSC2008]\u796d\u7940\u3011"
    },
    {
        "content": "\u5f3a\u52bf\u63a8\u9500[$blog$](https://blog.csdn.net/zxyoi_dreamer/article/details/83017459)\n\n\u672c\u6765\u5404\u5927$OJ$\u4e0a\u8fd9\u9053\u9898\u4e0d\u9700\u8981\u8f93\u51fa\u65b9\u6848\u7684\u3002~~\u867d\u7136\u8bf4\u539f\u9898\u9700\u8981~~ \n\n\u7136\u540e\u6d1b\u8c37\u4e0a\u7684$dalao$\u679c\u65ad\u7684\u7ed9\u51fa\u4e86$SPJ$\u3002\u3002\u3002\n\n\u4e8e\u662f\u5c31\u8dd1\u53bb\u5b66\u4e60\u4e86\u4e00\u4e0b\u600e\u4e48\u8f93\u51fa\u65b9\u6848\u3002\n\n\u663e\u7136\u7b2c\u4e00\u4e2a\u65b9\u6848\u5c31\u662f\u8981\u6c42\u6211\u4eec\u6784\u9020\u4e00\u4e2a\u6700\u5927\u72ec\u7acb\u96c6\u3002\n\u663e\u7136\u8003\u8651\u505a\u6700\u5c0f\u70b9\u8986\u76d6\uff0c\u5373\u6700\u5927\u72ec\u7acb\u96c6\u7684\u8865\u96c6\u3002\n\n\u6211\u4eec\u8fd9\u6837\u505a\uff1a\u5148\u627e\u4e00\u4e2a\u6700\u5927\u5339\u914d\uff0c\u7136\u540e\u4ece\u5de6\u8fb9\u70b9\u96c6\u4e2d\u6bcf\u4e00\u4e2a\u6ca1\u6709\u88ab\u5339\u914d\u5230\u7684\u70b9\u505a\u5047\u7684\u589e\u5e7f\uff0c\u4e00\u8def\u6807\u8bb0\u589e\u5e7f\u5230\u7684\u70b9\u3002\u6700\u540e\u5de6\u8fb9\u6ca1\u6709\u6807\u8bb0\u8fc7\u7684\u6216\u53f3\u8fb9\u6807\u8bb0\u8fc7\u7684\u5c31\u662f\u6700\u5c0f\u70b9\u8986\u76d6\u3002\u53d6\u53cd\u5c31\u662f\u6700\u5927\u72ec\u7acb\u96c6\u3002\n\n\u800c\u7b2c\u4e8c\u4e2a\u95ee\u8981\u6c42\u54ea\u4e9b\u70b9\u80fd\u591f\u51fa\u73b0\u5728\u6700\u5927\u72ec\u7acb\u96c6\u91cc\u9762\u3002\n\n\u5176\u5b9e\u8fd9\u4e2a\u505a\u6cd5\u6709\u70b9\u5de7\u5999\uff0c\n\u679a\u4e3e\u6211\u4eec\u8981\u8003\u8651\u7684\u70b9\uff0c\u5220\u53bb\u5b83\u4ee5\u53ca\u5b83\u7684\u524d\u9a71\u540e\u7ee7\uff0c\u5c31\u662f\u5b83\u80fd\u5230\u548c\u80fd\u5230\u5b83\u7684\u70b9\u3002\n\u7136\u540e\u518d\u6c42\u4e00\u6b21\u6700\u957f\u53cd\u94fe\u3002\n\n\u5982\u679c\u8bf4\u8fd9\u6837\u6c42\u51fa\u6765\u7684\u6700\u957f\u53cd\u94fe\u6bd4\u539f\u6765\u7684\u5c0f1\uff0c\u90a3\u4e48\u9009\u4e86\u4ed6\u5c31\u53ef\u4ee5\u66ff\u6362\u6389\u539f\u6765\u7684\u6700\u957f\u53cd\u94fe\u4e2d\u7684\u4e00\u4e2a\u70b9\uff08\u53ef\u80fd\u672c\u6765\u5c31\u662f\u5b83\u81ea\u5df1\uff09\u800c\u4fdd\u6301\u6700\u957f\u53cd\u94fe\u7684\u6027\u8d28\uff0c\u5b83\u5c31\u80fd\u591f\u51fa\u73b0\u5728\u6700\u957f\u53cd\u94fe\u4e2d\u3002\n\n\u5c31\u76f8\u5f53\u4e8e\u662f\u6211\u4eec\u5148\u5728\u4e00\u6761\u53cd\u94fe\u4e2d\u9009\u62e9\u4e86\u8fd9\u4e2a\u70b9\uff0c\u6211\u4eec\u5c31\u4e0d\u80fd\u9009\u62e9\u5b83\u7684\u76f8\u90bb\u70b9\uff0c\u7136\u800c\u5982\u679c\u8fd9\u6837\u6c42\u51fa\u6765\u5269\u4f59\u70b9\u96c6\u7684\u6700\u957f\u53cd\u94fe\u53ea\u6bd4\u539f\u6765\u5c11$1$\uff0c\u90a3\u4e48\u52a0\u4e0a\u8fd9\u4e2a\u70b9\u5c31\u80fd\u591f\u5f62\u6210\u6211\u4eec\u5df2\u7ecf\u6c42\u51fa\u7684\u6700\u957f\u53cd\u94fe\u3002\n\n\u7531\u4e8e\u6211\u5b66\u4e60\u7684\u662f yler%%%\u7684\u9898\u89e3\uff0c\u6240\u4ee5\u4ee3\u7801\u4e0d\u53ef\u907f\u514d\u5c31\u6709\u70b9\u5b66\uff08\u501f\uff09\u4e60\uff08\u9274\uff09\u4e86\u4ed6\u7684\u4e00\u4e9b\u5199\u6cd5\uff0c\u987a\u4fbf\u6539\u4e86\u4e00\u4e0b\u6211\u6548\u7387\u4e0d\u9ad8\u7684\u5308\u7259\u5229\u3002\n\n---\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define re register\n#define gc getchar\n#define pc putchar\n#define cs const\n\ninline int getint(){\n\tre int num;\n\tre char c;\n\twhile(!isdigit(c=gc()));num=c^48;\n\twhile(isdigit(c=gc()))num=(num<<1)+(num<<3)+(c^48);\n\treturn num;\n}\n\ncs int N=105;\nint n;\nbool g[N][N],to[N];\nint match[N],idx;\nint vis[N];\nbool ban[N],s[N],t[N];\n\ninline bool find(int u){\n\tif(ban[u])return false;\n\tfor(int re v=1;v<=n;++v){\n\t\tif((vis[v]^idx)&&g[u][v]&&!ban[v]){\n\t\t\tvis[v]=idx;\n\t\t\tif(!match[v]||find(match[v])){\n\t\t\t\tto[u]=true,match[v]=u;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\ninline void dfs(int u){\n\tif(s[u])return ;\n\ts[u]=true;\n\tfor(int re v=1;v<=n;++v){\n\t\tif(g[u][v]&&!t[v])t[v]=true,dfs(match[v]);\n\t}\n}\n\nint m;\nsigned main(){\n\tn=getint(),m=getint();\n\tfor(int re i=1;i<=m;++i){\n\t\tint u=getint(),v=getint();\n\t\tg[u][v]=1;\n\t}\n\t\n\tfor(int re k=1;k<=n;++k)\n\tfor(int re i=1;i<=n;++i)\n\tfor(int re j=1;j<=n;++j)\n\tg[i][j]=g[i][j]||(g[i][k]&&g[k][j]);\n\t\n\tint ans=n;\n\tfor(int re i=1;i<=n;++i){\n\t\t++idx;\n\t\tif(find(i))--ans;\n\t}\n\tprintf(\"%d\\n\",ans);\n\t\n\tfor(int re i=1;i<=n;++i)if(!to[i])dfs(i);\n\tfor(int re i=1;i<=n;++i)printf(\"%d\",s[i]&&!t[i]);\n\tpc('\\n');\n\t\n\tfor(int re k=1;k<=n;++k){\n\t\tmemset(match,0,sizeof match);\n\t\tmemset(to,0,sizeof to);\n\t\tmemset(ban,0,sizeof ban);\n\t\tint tmp=0;\n\t\t\n\t\tfor(int re i=1;i<=n;++i)\n\t\tif(g[i][k]||g[k][i]||i==k)ban[i]=true;\n\t\telse ++tmp;\n\t\t\n\t\tfor(int re i=1;i<=n;++i){\n\t\t\t++idx;\n\t\t\tif(find(i))--tmp;\n\t\t}\n\t\tprintf(\"%d\",tmp==ans-1);\n\t\t\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1539257394,
        "uid": 46382,
        "name": "_meaningless_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4298 \u3010[CTSC2008]\u796d\u7940\u3011"
    },
    {
        "content": "# \u5047\u7684\u9898\u89e3\n## \u524d\u9762\u7684\u8bdd\n\n\u8fd9\u9053\u9898\u663e\u7136\u5c31\u662f\u6700\u957f\u53cd\u94fe\n\n\u6839\u636e $Dilworth$ \u5b9a\u7406\uff1a\u6700\u5c0f\u94fe\u8986\u76d6\u6570 = \u6700\u957f\u53cd\u94fe\u957f\u5ea6\n\n\u7136\u540e\u4f20\u9012\u95ed\u5305\u8dd1\u5339\u914d\u5373\u53ef\n\n\u4ea4\u4e86\u4e00\u4e0b\uff0c$WA$ \u4e86\n\n$QAQ$\n\n\u672c\u6765\u5404\u79cd $OJ$ \u4e0a\u90fd\u662f\u53ea\u8981\u6c42\u6700\u957f\u53cd\u94fe\uff0c\u4e0d\u9700\u8981\u6784\u9020\u65b9\u6848\n\n~~\u867d\u7136\u539f\u9898\u8981\u6784\u9020~~\n\n\u7136\u540e\u4e00\u540d\u540c\u5fd7\u5199\u4e86\u4e2a $SPJ$\uff0c \u7136\u540e\u5c31\u8981\u8f93\u51fa\u65b9\u6848\u4e86\n\n~~\u8868\u793a\u5207\u4e0d\u6389\u5f88\u96be\u53d7~~\n\n## Sol\n\n\u5148\u653e\u4e24\u4e2a\u535a\u5ba2:\n\n[r_64](http://r-64.blog.uoj.ac/blog/623)\n\n[\u67d0\u795e\u4ed9](https://blog.csdn.net/yeziqing10/article/details/50651560)\n\n\u9996\u5148\u5efa\u56fe\u540e\u53d1\u73b0\u6700\u5927\u72ec\u7acb\u96c6\u548c\u6700\u5c0f\u70b9\u8986\u76d6\u4e92\u4e3a\u8865\u96c6\n\n\u800c\u8fd9\u4e2a\u56fe\u4e2d\u7684\u6700\u5927\u72ec\u7acb\u96c6\u5c31\u662f\u6700\u957f\u53cd\u94fe~~\u53ef\u80fd\uff0c\u731c\u7684...~~(\u56e0\u4e3a\u4e24\u4e24\u4e0d\u53ef\u5230\u8fbe)\n\n\u7136\u540e\u53ea\u8981\u77e5\u9053\u600e\u4e48\u6784\u9020\u6700\u5c0f\u70b9\u8986\u76d6\u5c31\u597d\u4e86\n\n### \u7b2c\u4e00\u6b65\n\n\u5bf9\u4e8e\u4e00\u4e2a\u4e8c\u5206\u56fe\uff0c\u8fd9\u6837\u6765\u505a\uff1a\n\n> \u5148\u6700\u5927\u5339\u914d\n\n> \u6bcf\u6b21\u4ece\u5de6\u8fb9\u627e\u5230\u4e00\u4e2a\u672a\u5339\u914d\u70b9\u589e\u5e7f(\u5047\u7684\u589e\u5e7f\uff0c\u663e\u7136\u589e\u5e7f\u4e0d\u4e86\uff0c\u56e0\u4e3a\u5df2\u7ecf\u662f\u6700\u5927\u5339\u914d)\n\n> \u7136\u540e\u6807\u8bb0\u7ecf\u8fc7\u7684\u70b9\n\n\u6700\u540e\u5de6\u8fb9\u6ca1\u6709\u6807\u8bb0\u8fc7\u7684\u70b9\u548c\u53f3\u8fb9\u6807\u8bb0\u8fc7\u7684\u70b9\u5c31\u662f\u6700\u5c0f\u70b9\u8986\u76d6\n\n\u4f2a\u8bc1\uff1a\u56e0\u4e3a\u4e00\u6761\u5047\u7684\u589e\u5e7f\u8def\u4e00\u5b9a\u662f\u5de6\u8fb9\u7684\u70b9\u4f5c\u4e3a\u5f00\u5934\u548c\u7ed3\u5c3e\u7684\uff0c\u6240\u4ee5\u9009\u53f3\u8fb9\u7684\u5c31\u80fd\u8986\u76d6\u8fd9\u4e2a\u5047\u7684\u589e\u5e7f\u8def\n\n\u53bb\u6389\u8fd9\u4e9b\u70b9\u5c31\u662f\u8981\u627e\u7684\u6700\u957f\u53cd\u94fe\n\n### \u7b2c\u4e8c\u6b65\n\n\u627e\u5230\u6240\u6709\u53ef\u4ee5\u51fa\u73b0\u5728\u6700\u957f\u53cd\u94fe\u4e0a\u7684\u70b9\n\n\u679a\u4e3e\u6bcf\u4e2a\u70b9\uff0c\u5220\u6389\u5b83\u4ee5\u53ca\u53ef\u4ee5\u5230\u8fbe\u5b83\u548c\u5b83\u53ef\u4ee5\u5230\u8fbe\u7684\u70b9(\u90bb\u5c45)\n\n\u518d\u6c42\u6700\u957f\u53cd\u94fe\uff0c\u5982\u679c\u5927\u5c0f\u51cf\u5c0f\u4e86 $1$\uff0c\u8fd9\u4e2a\u70b9\u5c31\u662f\u53ef\u4ee5\u7684(\u663e\u7136\u9009\u8fd9\u4e2a\u70b9\u4e0d\u4f1a\u548c\u5f53\u524d\u7684\u96c6\u5408\u51b2\u7a81)\n\n### \u4ee3\u7801\n\n```cpp\n\n# include <bits/stdc++.h>\n# define IL inline\n# define RG register\n# define Fill(a, b) memset(a, b, sizeof(a))\nusing namespace std;\ntypedef long long ll;\n\nIL int Input(){\n    RG char c = getchar(); RG int x = 0, z = 1;\n    for(; c < '0' || c > '9'; c = getchar()) z = c == '-' ? -1 : 1;\n    for(; c >= '0' && c <= '9'; c = getchar()) x = (x << 1) + (x << 3) + (c ^ 48);\n    return x * z;\n}\n\nconst int maxn(205);\nconst int maxm(1005);\n\nint n, m, ans, match[maxn], to[maxn], vis[maxn], idx, f[maxn][maxn], g[maxn][maxn];\nint ban[maxn], s[maxn], t[maxn];\n\nIL int Dfs(RG int u){\n\tif(ban[u]) return 0;\n    for(RG int i = 1; i <= n; ++i)\n        if(f[u][i] && vis[i] != idx && !ban[i]){\n            vis[i] = idx;\n            if(!match[i] || Dfs(match[i])){\n                to[u] = i, match[i] = u;\n                return 1;\n            }\n        }\n    return 0;\n}\n\nIL void Calc(RG int u){\n    if(s[u]) return;\n    s[u] = 1;\n    for(RG int i = 1; i <= n; ++i)\n        if(f[u][i] && !t[i]) t[i] = 1, Calc(match[i]);\n}\n\nint main(RG int argc, RG char* argv[]){\n    n = Input(), m = Input();\n    for(RG int i = 1; i <= m; ++i) g[Input()][Input()] = 1;\n    for(RG int i = 1; i <= n; ++i)\n        for(RG int j = 1; j <= n; ++j)\n            for(RG int k = 1; k <= n; ++k) g[j][k] |= g[j][i] & g[i][k];\n\tmemcpy(f, g, sizeof(f)), ans = n;\n    for(RG int i = 1; i <= n; ++i) ++idx, ans -= Dfs(i);\n    printf(\"%d\\n\", ans);\n    for(RG int i = 1; i <= n; ++i) if(!to[i]) Calc(i);\n    for(RG int i = 1; i <= n; ++i) printf(\"%d\", s[i] && !t[i]);\n\tputs(\"\");\n\tfor(RG int nw = 1; nw <= n; ++nw){\n\t\tfor(RG int i = 1; i <= n; ++i) match[i] = to[i] = 0;\n\t\tRG int ret = 0, nn = 0;\n\t\tFill(f, 0), Fill(ban, 0);\n\t\tfor(RG int i = 1; i <= n; ++i)\n\t\t\tif(g[i][nw] || g[nw][i] || i == nw) ban[i] = 1;\n\t\t\telse ++nn;\n\t\tret = nn;\n\t\tfor(RG int i = 1; i <= n; ++i)\n\t\t\tfor(RG int j = 1; j <= n; ++j)\n\t\t\t\tif(!ban[i] && !ban[j]) f[i][j] = g[i][j];\n\t\tfor(RG int i = 1; i <= n; ++i) if(!ban[i]) ++idx, ret -= Dfs(i);\n\t\tprintf(\"%d\", ret == ans - 1);\n\t}\n    return 0;\n}\n\n```\n",
        "postTime": 1533101705,
        "uid": 47640,
        "name": "Cyhlnj",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4298 \u3010[CTSC2008]\u796d\u7940\u3011"
    },
    {
        "content": "\u524d\u7f6e\u77e5\u8bc6: \u79f0\u6709\u5411\u56fe $G = (V, E)$ \u7684\u5b50\u56fe $H \\subset G$ \u662f**\u95ed\u5408\u5b50\u56fe**, \u5982\u679c $\\forall (u, v) \\in E, (u \\in H \\Rightarrow v \\in H)$. \u73b0\u6bcf\u4e00\u70b9 $u$ \u6709\u4e00\u6574\u6570\u70b9\u6743 $w_u$, \u4e14\u5b50\u56fe\u7684\u6743\u503c\u4e3a\u5b50\u56fe\u4e2d\u6240\u6709\u70b9\u6743\u4e4b\u548c, \u6c42\u8be5\u65e0\u73af\u56fe\u7684**\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe**, \u53ef\u4ee5\u7528\u7f51\u7edc\u6d41\u89e3\u51b3. \r\n\r\n\u7b2c\u4e00\u95ee\u53ef\u4ee5\u8f6c\u5316\u4e3a\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u95ee\u9898. \u5728\u65b0\u56fe\u4e2d\u5c06\u70b9 $u$ \u62c6\u4e3a $u_1, u_2$, **\u70b9\u6743**\u5206\u522b\u4e3a $-1$ \u548c $1$, \u540c\u65f6\u8fde\u8fb9 $(u_1, u_2)$. \u5bf9\u539f\u56fe\u4e2d\u7684\u4e00\u6761\u6709\u5411\u8fb9 $(u, v)$, \u5728\u65b0\u56fe\u4e2d\u8fde\u8fb9 $(u_2, v_1)$. \u5bf9\u65b0\u56fe\u6c42\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe, \u5373\u4e3a\u7b2c\u4e00\u95ee\u7684\u7b54\u6848.\r\n\r\n\u8bbe\u65b0\u56fe\u662f $G$, $H \\subset G$ \u662f $G$ \u7684\u4e00\u4e2a\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe. \u90a3\u4e48\u8fd9\u5f20\u56fe\u5bf9\u5e94\u7684\u65b9\u6848\u4e2d, \u70b9 $u$ \u53ef\u4ee5\u4f5c\u4e3a\u796d\u7940\u70b9\u5f53\u4e14\u4ec5\u5f53 $u_1 \\notin H \\land u_2 \\in H$.\r\n\r\n\u5bf9\u7b2c\u4e8c\u95ee, \u76f8\u5f53\u4e8e\u6784\u9020\u51fa\u4e00\u4e2a\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe. \u5728\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe\u95ee\u9898\u4e2d, \u4e00\u4e2a\u6700\u5927\u6743\u95ed\u5408\u5b50\u56fe $H \\subset G$ \u53ef\u4ee5\u552f\u4e00\u5bf9\u5e94\u6240\u6784\u56fe\u7684\u4e00\u4e2a\u6700\u5c0f\u5272 $(S, T)$,  \u5176\u4e2d $u \\in H \\Leftrightarrow u \\in T \\land (\\forall (v, u) \\in E, v \\in S)$. \u636e\u6b64\u53ef\u4ee5\u5148\u6784\u9020\u51fa\u6700\u5c0f\u5272, \u518d\u6784\u9020\u65b9\u6848.\r\n\r\n\u7b2c\u4e09\u95ee\u76f8\u5f53\u4e8e\u5bf9\u6bcf\u4e2a $u$, \u5224\u65ad\u662f\u5426\u5b58\u5728\u6700\u5c0f\u5272 $(S, T)$, \u4f7f\u5f97 $u_1 \\in S \\land u_2 \\in T$. \u6ce8\u610f\u5230\u5272 $(S, T)$ \u662f\u6700\u5c0f\u5272\u5f53\u4e14\u4ec5\u5f53\u5728\u6b8b\u91cf\u7f51\u7edc\u4e2d, $S$ \u662f\u95ed\u5408\u5b50\u56fe, \u5373 $\\forall (u, v) \\in \\text{\u6b8b\u91cf\u7f51\u7edc}, (u \\in S \\Rightarrow v \\in S)$. \u4ee4 $f(u, v)$ \u8868\u793a\u6b8b\u91cf\u7f51\u7edc\u4e2d\u662f\u5426\u5b58\u5728 $u$ \u5230 $v$ \u7684\u8def\u5f84. \u90a3\u4e48\u5b58\u5728\u6700\u5c0f\u5272 $(S, T)$, \u4f7f\u5f97 $u_1 \\in S \\land u_2 \\in T$ \u7684\u7b49\u4ef7\u6761\u4ef6\u662f $\\lnot f(s, u_2) \\land \\lnot f(u_1, u_2) \\land \\lnot f(u_1, t)$, \u5176\u4e2d $s$ \u548c $t$ \u662f\u7f51\u7edc\u4e2d\u7684\u6e90\u6c47\u70b9.\r\n\r\n\u672c\u505a\u6cd5\u53ea\u9700\u8dd1\u4e00\u904d\u7f51\u7edc\u6d41, \u7531\u4e8e\u8fb9\u6743\u5747\u4e3a $1$ \u6216 $+\\infty$, \u590d\u6742\u5ea6\u4e3a $\\mathcal O(m \\sqrt n + n \\times (n+m)) = \\mathcal O(nm)$.\r\n\r\n\u4e0b\u9762\u662f\u4f7f\u7528\u4e86 [AtCoder Library](https://github.com/atcoder/ac-library) \u7684\u53c2\u8003\u4ee3\u7801.\r\n\r\n```cpp\r\n#include <cstdio>\r\n#include <vector>\r\n#include <atcoder/maxflow>\r\nconst int INF = 0x3F3F3F3F;\r\n\r\nsigned main() {\r\n\tint n, m;\r\n\tscanf(\"%d%d\", &n, &m);\r\n\tatcoder::mf_graph<int> mf(n * 2 + 2);\r\n\tint S = 2 * n, T = S + 1;\r\n\r\n\tfor (int i = 0; i < m; ++i) {\r\n\t\tint u, v;\r\n\t\tscanf(\"%d%d\", &u, &v);\r\n\t\t--u; --v;\r\n\t\tmf.add_edge(u + n, v, INF);\r\n\t}\r\n\r\n\tfor (int i = 0; i < n; ++i) {\r\n\t\tmf.add_edge(S, i + n, 1);\r\n\t\tmf.add_edge(i, T, 1);\r\n\t\tmf.add_edge(i, i + n, INF);\r\n\t}\r\n\r\n\tprintf(\"%d\\n\", n - mf.flow(S, T));\r\n\tauto min_cut = mf.min_cut(S);\r\n\tfor (int i = 0; i < n; ++i)\r\n\t\tputchar(!min_cut[i] && min_cut[i + n] ? '1' : '0');\r\n\tputs(\"\");\r\n\r\n\tstd::vector<std::vector<int> > e(2 * n + 2);\r\n\tfor (auto o : mf.edges()) {\r\n\t\tif (o.cap != o.flow)\r\n\t\t\te[o.from].push_back(o.to);\r\n\t\tif (o.flow)\r\n\t\t\te[o.to].push_back(o.from);\r\n\t}\r\n\tstd::vector<std::vector<int> > reach(2 * n + 2, std::vector<int>(2 * n + 2));\r\n\r\n\tfor (int i = 0; i < 2 * n + 2; ++i) {\r\n\t\tstd::queue<int> q;\r\n\t\tq.push(i);\r\n\t\treach[i][i] = true;\r\n\t\tfor (; !q.empty(); q.pop())\r\n\t\t\tfor (auto to : e[q.front()])\r\n\t\t\t\tif (!reach[i][to]) {\r\n\t\t\t\t\treach[i][to] = true;\r\n\t\t\t\t\tq.push(to);\r\n\t\t\t\t}\r\n\t}\r\n\r\n\tfor (int i = 0; i < n; ++i)\r\n\t\tputchar(!reach[i + n][T] && !reach[i + n][i] && !reach[S][i] ? '1' : '0');\r\n\tputs(\"\");\r\n\treturn 0;\r\n}\r\n```",
        "postTime": 1668783588,
        "uid": 346119,
        "name": "_\u9c7c\u975e\u4ed9_",
        "ccfLevel": 7,
        "title": "P4298 Solution"
    },
    {
        "content": "\u7b80\u5316\u9898\u610f\uff1a\u7ed9\u4e00\u5f20 DAG\uff0c\u8981\u6c42\u9009\u51fa\u4e00\u4e2a\u6700\u5927\u5b50\u96c6\uff0c\u4f7f\u5b50\u96c6\u4e2d\u5143\u7d20\u4e24\u4e24\u4e0d\u80fd\u5230\u8fbe\u3002\n\n\n------------\n\n\n\u9898\u76ee\u8981\u6c42\u7684\u662f DAG \u4e2d\u6700\u957f\u53cd\u94fe\u6570\u3002\n\n\u6839\u636e Dilworth \u5b9a\u7406\uff1a\u6700\u5c0f\u94fe\u8986\u76d6\u6570 = \u6700\u957f\u53cd\u94fe\u957f\u5ea6\n\n\u6211\u4eec\u5c31\u5c06\u5176\u8f6c\u6362\u4e3a\u6c42\u6700\u5c0f\u94fe\u8986\u76d6\u6570\u3002\n\n\u6211\u4eec\u518d\u5c06\u56fe\u8f6c\u6362\uff0c\u7528 Floyd \u5904\u7406\u56fe\u7684\u8fde\u901a\u6027\uff0c\u82e5\u8fde\u901a\u5219\u4e3a $1$\u3002\u518d\u6839\u636e\u8fd9\u4e2a\u8fdb\u884c\u8fde\u8fb9\u3002\n\n\u8fd9\u6837\u6700\u5c0f\u94fe\u8986\u76d6\u5c31\u8f6c\u6362\u4e3a\u6700\u5c0f\u8def\u5f84\u8986\u76d6\u3002\u8fd9\u662f\u4e00\u4e2a\u7f51\u7edc\u6d41\u89e3\u51b3\u7684\u7ecf\u5178\u95ee\u9898\u3002\n\n\u5177\u4f53\u7684\u6211\u4eec\u53ef\u4ee5\u62c6\u70b9\uff0c\u7136\u540e\u6c42\u6700\u5927\u80fd\u63a5\u524d\u540e\u7684\u6570\u91cf\uff0c\u7528 n \u51cf\u53bb\u8fd9\u4e2a\u5c31\u662f\u7b54\u6848\u3002\n\n\n\n\n------------\n\n\n\u7136\u540e\u6211\u4eec\u5148\u89e3\u51b3\u95ee\u9898 3\n\n\u5224\u65ad\u4e00\u4e2a\u70b9\u80fd\u5426\u662f\u6700\u957f\u53cd\u94fe\u4e0a\u7684\u70b9\uff1a\u6211\u4eec\u53ef\u4ee5\u5220\u53bb\u8fd9\u4e2a\u70b9\uff0c\u4ee5\u53ca\u4ed6\u80fd\u8fde\u51fa\u53bb\u7684\u70b9\u548c\u80fd\u8fde\u5230\u4ed6\u7684\u70b9\u3002\u5982\u679c\u5728\u8fd9\u4e2a\u56fe\u4e0a\u8dd1\u6700\u957f\u53cd\u94fe\u6570\u7684\u5f97\u5230\u7684\u7b54\u6848\u6bd4\u539f\u7b54\u6848\u5c11 $1$ \u5219\u8bf4\u660e\u662f\u3002\u66b4\u529b\u5224\u65ad\u6bcf\u4e2a\u70b9\u5c31\u53ef\u4ee5\u4e86\u3002 \n\n\n------------\n\n\n\u7136\u540e\u5c31\u662f\u6784\u9020\u4e00\u7ec4\u65b9\u6848\u3002\n\n\u8fd9\u4e2a\u53ef\u4ee5\u5bf9\u4e8e\u80fd\u6210\u4e3a\u6700\u957f\u53cd\u94fe\u4e0a\u7684\u70b9\uff0c\u6211\u4eec\u8fdb\u884c\u67d3\u8272\uff0c\u5728\u6bcf\u79cd\u989c\u8272\u4e2d\u968f\u4fbf\u9009\u4e00\u4e2a\u70b9\u5c31\u53ef\u4ee5\u3002\n\n\u5177\u4f53\u7684\uff0c\u6211\u4eec\u968f\u4fbf\u9009\u4e00\u4e2a\u672a\u67d3\u8272\u7684\u70b9\uff0c\u5bf9\u5176\u67d3\u8272\uff0c\u7136\u540e\u5bf9\u5176\u80fd\u5230\u8fbe\u7684\u70b9\u548c\u80fd\u5230\u8fbe\u5176\u7684\u70b9\u67d3\u4e0a\u76f8\u540c\u989c\u8272\u3002\u91cd\u590d\u4e0a\u8ff0\u64cd\u4f5c\uff0c\u6211\u4eec\u968f\u4fbf\u9009\u51fa\u7684\u70b9\u5c31\u662f\u4e00\u7ec4\u6784\u9020\u3002\n\n\n------------\n\u603b\u590d\u6742\u5ea6 $O(n^3 \\sqrt n)$ \n\n\n\n------------\n\u4ee3\u7801\u5982\u4e0b\n\n```cpp\n// Problem: P4298 [CTSC2008]\u796d\u7940\n// Contest: Luogu\n// URL: https://www.luogu.com.cn/problem/P4298\n// Memory Limit: 125 MB\n// Time Limit: 1000 ms\n// 2022-02-11 14:27:27\n// Author : louhao088\n// \n\n#include<bits/stdc++.h>\nusing namespace std;\n//static char buf[1000000],*p1=buf,*p2=buf;\n//#define getchar() p1==p2&&(p2=(p1=buf)+fread(buf,1,1000000,stdin),p1==p2)?EOF:*p1++\n#define pi pair<int,int>\n#define mp make_pair\n#define fi first\n#define se second\n#define pb push_back\n#define ls (rt<<1)\n#define rs (rt<<1|1)\n#define mid (l+r>>1)\n#define lowbit (x&-x)\nconst int maxn=205,M=34005,inf=1e9;\ninline int read()\n{\n\tchar ch=getchar();bool f=0;int x=0;\n\tfor(;!isdigit(ch);ch=getchar())if(ch=='-')f=1;\n\tfor(;isdigit(ch);ch=getchar())x=(x<<1)+(x<<3)+(ch^48);\n\tif(f==1)x=-x;return x;\n}\ninline void print(int x)\n{\n    static int a[55];int top=0;\n    if(x<0) putchar('-'),x=-x;\n    do{a[top++]=x%10,x/=10;}while(x);\n    while(top) putchar(a[--top]+48);\n}\nint n,m,f[maxn][maxn],F[maxn],flag[maxn],col[maxn],ans,x,y,b[maxn],o;\nstruct dinic\n{\n\tint head[maxn],cnt,to[maxn*maxn],w[maxn*maxn],nex[maxn*maxn],s,t,dis[maxn],cur[maxn],maxflow;\n\tvoid add(int x,int y,int z){\n\tto[++cnt]=y,w[cnt]=z,nex[cnt]=head[x],head[x]=cnt;\n\tto[++cnt]=x,w[cnt]=0,nex[cnt]=head[y],head[y]=cnt;}\n\tvoid clear(){memset(head,0,sizeof head);cnt=1;memset(cur,0,sizeof cur);maxflow=0;}\n\tbool bfs()\n\t{\n\t\tmemset(dis,-1,sizeof dis);\n\t\tqueue<int>q;while(!q.empty())q.pop();\n\t\tq.push(s);cur[s]=head[s];dis[s]=0;\n\t\twhile(!q.empty())\n\t\t{\n\t\t\tint x=q.front();q.pop();\n\t\t\tfor(int i=head[x];i;i=nex[i])\n\t\t\t{\n\t\t\t\tif(w[i]&&dis[to[i]]==-1)\n\t\t\t\t{\n\t\t\t\t\tq.push(to[i]);dis[to[i]]=dis[x]+1;\n\t\t\t\t\tcur[to[i]]=head[to[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn dis[t]!=-1;\n\t}\n\tint dfs(int x,int flow)\n\t{\n\t\tif(x==t)return flow;\n\t\tint sum=0;\n\t\tfor(int i=cur[x];i&&flow;i=nex[i])\n\t\t{\n\t\t\tcur[x]=i;\n\t\t\tif(w[i]&&dis[x]+1==dis[to[i]])\n\t\t\t{\n\t\t\t\tint k=dfs(to[i],min(flow,w[i]));\n\t\t\t\tw[i]-=k,w[i^1]+=k;flow-=k;sum+=k;\n\t\t\t}\n\t\t}return sum;\n\t}\n\tvoid work()\n\t{\n\t\ts=2*n+1,t=2*n+2;\n\t\twhile(bfs())maxflow+=dfs(s,inf);\n\t}\n\t\n}G;\nvoid add(int x)\n{\n\tG.clear();int s=2*n+1,t=2*n+2;o=n;\n\tfor(int i=1;i<=n;i++)\n\t\tif(f[i][x]||f[x][i]||i==x)b[i]=1,o--;\n\t\telse b[i]=0;\n\tfor(int i=1;i<=n;i++)\n\t\tif(!b[i])G.add(s,i,1),G.add(i+n,t,1);\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tif(!b[i]&&!b[j]&&f[i][j]&&i!=j)\n\t\t\t\tG.add(i,j+n,1);\n}\nsigned main()\n{\n\t//freopen(\".in\",\"r\",stdin);\n\t//freopen(\".out\",\"w\",stdout);\n\tn=read(),m=read();\n\tfor(int i=1;i<=m;i++)x=read(),y=read(),f[x][y]=1;\n\tfor(int k=1;k<=n;k++)\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\tf[i][j]|=f[i][k]&f[k][j];\n\tadd(0);G.work();\n\tans=n-G.maxflow;cout<<ans<<endl;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tG.clear();add(i);G.work();\n\t\tif(o-G.maxflow==ans-1)F[i]=1;\n\t}\n\tint tot=0;\n\tfor(int i=1;i<=n;i++)\n\t\tif(F[i]&&!col[i])\n\t\t{\n\t\t\tflag[i]=1;col[i]=++tot;\n\t\t\tfor(int j=1;j<=n;j++)if(f[i][j]||f[j][i])col[j]=tot;\n\t\t}\n\tfor(int i=1;i<=n;i++)cout<<flag[i];cout<<endl;\n\tfor(int i=1;i<=n;i++)cout<<F[i];\n \treturn 0;\n}\n\n\n```\n\n\n",
        "postTime": 1644563402,
        "uid": 343748,
        "name": "louhao088",
        "ccfLevel": 9,
        "title": "\u9898\u89e3P4298 [CTSC2008]\u796d\u7940"
    },
    {
        "content": "\u554a\uff0c\u6ca1\u6709spj\uff0c\u4e0d\u7528\u8f93\u51fa\u540e\u9762\u90a3\u4e9b\u7684\uff0c\u53ea\u8981\u8f93\u51fa\u6700\u5927\u503c\u5c31\u53ef\u4ee5\u4e86~\uff08\u767d\u767dWA\u4e86\u4e24\u6b21\u2026\u2026~~\u5fc3\u75bc\u5730\u6478\u4e86\u6478\u81ea\u5df1~~\uff09\n\n\u8fd9\u9053\u9898\u5176\u5b9e\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u677f\u5b50\u9898\u5566\uff0c\u6c42\u6700\u957f\u53cd\u94fe\u957f\u5ea6\u88f8\u9898\u3002\n\n\u89e3\u91ca\u4e00\u4e0b\u65b0\u540d\u8bcd~\n\n\u5728**\u6709\u5411\u65e0\u73af\u56fe**\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\uff1a\n\n\u94fe\uff1a\u56fe\u4e0a\u4e00\u4e9b\u70b9\u7684\u96c6\u5408\uff0c\u5bf9\u4e8e\u94fe\u4e0a\u4efb\u610f\u4e24\u4e2a\u70b9x\u3001y\uff0c\u6ee1\u8db3x\u80fd\u5230\u8fbey\u6216\u8005y\u80fd\u5230\u8fbex\u3002\n\n\u53cd\u94fe\uff1a\u56fe\u4e0a\u4e00\u4e9b\u70b9\u7684\u7684\u96c6\u5408\uff0c\u5bf9\u4e8e\u53cd\u94fe\u4e0a\u4efb\u610f\u4e24\u4e2a\u70b9x\u3001y\uff0c\u6ee1\u8db3x\u4e0d\u80fd\u5230\u8fbey\u5e76\u4e14y\u4e0d\u80fd\u5230\u8fbex\u3002\n\n\u6240\u4ee5\u5c31\u662f\u5f88\u663e\u7136\u7684\u6c42\u6700\u957f\u53cd\u94fe\u957f\u5ea6\u4e86~\n\n\u6709\u4ee5\u4e0b\u5b9a\u7406\uff1a\n\n**\u6700\u957f\u53cd\u94fe\u957f\u5ea6=\u6700\u5c0f\u94fe\u8986\u76d6**\uff08\u9009\u53d6\u6700\u5c11\u7684\u94fe\u8986\u76d6\u6240\u6709\u7684\u70b9\uff09->\u8bc1\u660e\u8be6\u89c1[\u6700\u957f\u53cd\u94fe\u4e0e\u6700\u5c0f\u94fe\u8986\u76d6](http://vfleaking.blog.163.com/blog/static/1748076342012918105514527/)\n\n\u4ee5\u53ca\u5176\u5bf9\u5076\u5b9a\u7406\uff1a**\u6700\u957f\u94fe\u957f\u5ea6=\u6700\u5c0f\u53cd\u94fe\u8986\u76d6**\n\n\u6240\u4ee5\u5c31\u53c8\u8f6c\u5316\u6210\u4e86\u6c42\u6700\u5c0f\u8def\u5f84\uff08\u94fe\uff09\u8986\u76d6\u4e86\uff0c\u6765\u770b\u600e\u4e48\u6c42\uff1a\n\n\u9009\u62e9\u5efa\u4e00\u4e2a\u4e8c\u5206\u56fe\uff0c\u4e24\u8fb9\u5404\u6709n\u4e2a\u70b9\uff0c\u539f\u6765\u7684\u70b9node\u5206\u522b\u5bf9\u5e94\u4e24\u4e2a\u56fe\u4e2d\u7684node1\u3001node2\u3002\u5982\u679c\u539f\u56fe\u4e2d\u5b58\u5728\u8fb9 x->y\uff0c\u90a3\u4e48\u5c31\u5728\u4e8c\u5206\u56fe\u4e0a\u5efa\u7acb\u8fb9 x1->y2\u3002\n\n\u8dd1\u4e00\u904d\u5308\u7259\u5229\uff0c\u5219\u6709 **\u539f\u56fe\u6700\u5c0f\u8def\u5f84\u8986\u76d6=\u539f\u70b9\u6570n-\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d**\n\n\uff08\u5f53\u7136\u4e5f\u53ef\u4ee5\u7528\u7f51\u7edc\u6d41\uff0c\u5219\u6709 \u539f\u56fe\u6700\u5c0f\u8def\u5f84\u8986\u76d6=\u539f\u70b9\u6570n-\u6700\u5927\u6d41\uff09\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\u8003\u8651\u6bcf\u5728\u4e8c\u5206\u56fe\u4e0a\u8fde\u4e00\u6761\u8fb9\uff0c\u5c31\u76f8\u5f53\u4e8e\u5c06\u4e24\u6761\u8def\u5f84\u8fde\u6210\u4e00\u6761\uff0c\u90a3\u4e48\u6700\u5c0f\u94fe\u8986\u76d6\u6570\u5c31\u51cf\u5c11\u4e861\uff08\u5c11\u7528\u4e00\u6761\u94fe\u8986\u76d6\u6240\u6709\u70b9\u4e86\uff09\u3002\u6211\u4eec\u5c06\u4e00\u4e2a\u70b9\u62c6\u6210\u4e24\u4e2a\uff0c\u8dd1\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\uff0c\u907f\u514d\u4e86\u8def\u5f84\u76f8\u4ea4\u7684\u95ee\u9898\uff0c\u4fdd\u8bc1\u6240\u9009\u51fa\u6765\u7684\u6bcf\u4e00\u6761\u4e00\u5b9a\u4e3a\u4e00\u6761\u94fe\u3002\n\n\u89e3\u51b3\u4e86\u4ee5\u4e0a\u8fd9\u4e9b\uff0c\u5bf9\u4e8e\u600e\u4e48\u6c42\u8fb9 x->y\uff0c\u53ea\u7528\u7b80\u5355\u5730\u8dd1\u4e00\u904dflyod\u5c31\u53ef\u4ee5\u5f97\u51fax\u662f\u5426\u80fd\u5230\u8fbey\u4e86\u3002\n\n\u603b\u7ed3\u4e00\u4e0b\uff0c\u672c\u9898\u7b97\u6cd5\uff1aFloyd\u4f20\u9012\u95ed\u5305+\u6700\u957f\u53cd\u94fe\uff08\u4e8c\u5206\u56fe\u5339\u914d/\u7f51\u7edc\u6700\u5927\u6d41\uff09\n\n\u4ee5\u4e0b\u4f7f\u7528\u4e8c\u5206\u56fe\u5339\u914d\u7684\u4ee3\u7801\uff08\u7f51\u7edc\u6d41\u7c7b\u4f3c\uff09\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXN=200*2+10;\nint n,m,cnt,ans,G[210][210],Head[MAXN],vis[MAXN],fa[MAXN];\n\nint read()\n{\n    int x=0;\n    char ch=getchar();\n    while(ch<'0'||ch>'9') ch=getchar();\n    while(ch>='0'&&ch<='9') x=x*10+ch-'0',ch=getchar();\n    return x;\n}\n\nstruct edge\n{\n    int to,next;\n}E[40010];\n\nvoid add(int u,int v)\n{\n    cnt++;\n    E[cnt].to=v;\n    E[cnt].next=Head[u];\n    Head[u]=cnt;\n}\n\nvoid floyd()\n{\n    for(int k=1;k<=n;k++)\n        for(int i=1;i<=n;i++)\n            for(int j=1;j<=n;j++)\n                G[i][j]|=(G[i][k]&G[k][j]);\n}\n\nvoid build()\n{\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=n;j++)\n            if(G[i][j]) add(i,n+j),add(n+j,i);\n}\n\nbool Path(int u,int tim)\n{\n    for(int i=Head[u];i;i=E[i].next)\n    {\n        int v=E[i].to;\n        if(vis[v]==tim) continue;\n        vis[v]=tim;//\u65f6\u95f4\u6233->\u4e0d\u7528\u6bcf\u6b21\u90fd\u5199memset\u4e86\n        if(fa[v]==-1||Path(fa[v],tim)) \n        {\n            fa[v]=u;\n            return true;\n        }\n    }\n    return false;\n}\n\nvoid Hungary()\n{\n    memset(fa,-1,sizeof(fa));\n    ans=0;\n    for(int i=1;i<=n;i++)\n        if(Path(i,i)) ans++;\n}\n\nint main()\n{\n    n=read(),m=read();\n    for(int i=1;i<=m;i++)\n    {\n        int u=read(),v=read();\n        G[u][v]=1;\n    }\n    floyd();\n    build();\n    Hungary();\n    printf(\"%d\\n\",n-ans);//\u88ab\u5403\u6389\u7684spj \n    return 0;\n}\n```\n",
        "postTime": 1523027334,
        "uid": 60563,
        "name": "LittleDino",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4298 \u3010[CTSC2008]\u796d\u7940\u3011"
    },
    {
        "content": "## \u9898\u76ee\u5927\u610f\n\u7ed9\u5b9a\u4e00\u5f20 $n$ \u4e2a\u8282\u70b9 $m$ \u6761\u8fb9\u7684\u6709\u5411\u65e0\u73af\u56fe DAG\uff0c\u6c42\u51fa\u8fd9\u5f20\u56fe\u7684\u6700\u5927\u72ec\u7acb\u96c6\u7684\u5927\u5c0f\uff0c\u5e76\u6784\u9020\u51fa\u4e00\u7ec4\u53ef\u884c\u89e3\uff0c\u7136\u540e\u518d\u6c42\u51fa\u6700\u5927\u72ec\u7acb\u96c6\u7684\u53ef\u884c\u70b9\u3002\n\n$n\\le 100, m\\le 10^3$\u3002\n\n## \u5927\u4f53\u601d\u8def\n### \u524d\u7f6e\u4e00\uff1a$\\text{DAG}$ \u6700\u5c0f\u8def\u5f84\u70b9\u8986\u76d6\u3002\n> \u7ed9\u51fa\u4e00\u5f20 DAG\uff0c\u6c42\u51fa\u6700\u5c11\u7684**\u4e0d\u76f8\u4ea4**\u8def\u5f84\u6761\u6570\u4f7f\u5f97\u6240\u9009\u8def\u5f84\u8986\u76d6\u6240\u6709\u70b9\u3002\n\n\u8003\u8651\u62c6\u70b9\uff0c\u5c06\u539f\u56fe\u4e2d\u7684\u70b9 $x$ \u62c6\u6210\u4e24\u4e2a\u70b9 $x, x'$\uff0c\u5206\u522b\u4e3a\u51fa\u70b9\u548c\u5165\u70b9\u3002\u5bf9\u4e8e\u4e00\u6761\u8fb9 $(x, y)\\in E$, \u5728\u65b0\u56fe $G'$ \u4e2d\u8fde\u63a5 $(x, y')$\u3002\u53ef\u4ee5\u8bc1\u660e\uff0c\u8fd9\u6837\u4e00\u5f20\u56fe $G'$ \u662f\u4e00\u5f20\u4e8c\u5206\u56fe\u3002\n\n\u8003\u8651\u6700\u52a3\u60c5\u51b5\uff0c\u5373\u6bcf\u4e2a\u70b9\u5355\u72ec\u4f5c\u4e3a\u4e00\u6761\u8def\u5f84\uff0c\u8fd9\u6837\u4e00\u5171\u9700\u8981 $n$ \u6761\u8def\u5f84\u8986\u76d6\u3002\u7136\u540e\uff0c\u6211\u4eec\u5bf9\u4e8c\u5206\u56fe $G'$ \u6c42\u6700\u5927\u5339\u914d $\\mathbf M$\u3002\u6bcf\u4e00\u7ec4\u5339\u914d\u76f8\u5f53\u4e8e\u5c06\u4e24\u6761\u8def\u5f84\u5408\u5e76\uff0c\u56e0\u6b64\u603b\u7684\u8def\u5f84\u6570 $-1$\u3002\u7531\u6b64\u53ef\u5f97\uff0c\u7b54\u6848\u4e3a $n-|\\mathbf M|$\u3002\n\n### \u524d\u7f6e\u4e8c\uff1a$\\text{DAG}$ \u6700\u5c0f\u53ef\u91cd\u590d\u8def\u5f84\u70b9\u8986\u76d6\u3002\n> \u7ed9\u51fa\u4e00\u5f20 DAG\uff0c\u6c42\u51fa\u6700\u5c11\u7684**\u8282\u70b9\u53ef\u76f8\u4ea4**\u8def\u5f84\u6761\u6570\u4f7f\u5f97\u6240\u9009\u8def\u5f84\u8986\u76d6\u6240\u6709\u70b9\u3002\n\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ulfypqed.png)\n\n\u8003\u8651\u5982\u4e0a\u56fe\u6240\u793a\u7684\u4e24\u6761\u76f8\u4ea4\u8def\u5f84 $x\\to p\\to y$\uff0c$u\\to p\\to v$\u3002\u663e\u7136\u70b9 $p$ \u53ef\u4ee5\u88ab\u8fd9\u4e24\u6761\u8def\u5f84\u4e2d\u7684\u4efb\u610f\u4e00\u6761\u8986\u76d6\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 $x, y$\uff0c$u, v$ \u4e4b\u95f4\u8fde\u8fb9\uff0c\u8fd9\u6837\u5bf9\u4e8e\u4efb\u610f\u4ea4\u70b9\uff0c\u539f\u5148\u7684\u201c\u53ef\u76f8\u4ea4\u201d\u8f6c\u6362\u6210\u4e86\u201c\u4e0d\u76f8\u4ea4\u201d\uff0c\u56de\u5230\u524d\u7f6e\u4e00\u7684\u505a\u6cd5\u3002\n\n\u5177\u4f53\u5730\uff0c\u6211\u4eec\u5148\u5bf9\u6574\u5f20\u56fe\u505a\u4e00\u6b21 $\\text{Floyd}$ \u4f20\u9012\u95ed\u5305\uff0c\u5e76\u7528 $\\text{bitset}$ \u4f18\u5316\uff0c\u7136\u540e\u5bf9\u4efb\u610f\u53ef\u8fbe\u4e24\u70b9 $u, v$ \u6309\u7167\u62c6\u70b9\u65b9\u5f0f\u8fde\u8fb9\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $O\\left(\\frac{n^3}{\\omega}\\right)$\u3002\n\n\u5176\u672c\u8d28\u4e3a\uff1a\u4e00\u4e2a\u4f20\u9012\u95ed\u5305\u540e\u7684 DAG \u5bf9\u5e94\u4e00\u4e2a\u504f\u5e8f\u96c6 $\\mathbf A$\uff0c\u5373 $E=\\{(x, y)\\ |\\ x,y\\in \\mathbf A,x\\preceq y \\}$\u3002\n\n### \u524d\u7f6e\u4e09\uff1a$\\text{Dilworth}$ \u5b9a\u7406\u3002\n\u5b9a\u4e49\u6b63\u94fe\u8868\u793a\u4e00\u4e2a\u8282\u70b9\u5e8f\u5217 $\\{u_i\\}$\uff0c\u5176\u4e2d $u_i\\preceq u_{i+1}$\uff1b\u53cd\u94fe\u8868\u793a\u4e00\u4e2a\u8282\u70b9**\u96c6\u5408** $\\{u_i\\}$ \u4f7f\u5f97\u96c6\u5408\u4e2d\u4efb\u610f\u4e24\u70b9\u6ca1\u6709\u504f\u5e8f\u5173\u7cfb\u3002\u90a3\u4e48\u6709\u4e24\u4e2a\u5bf9\u5076\u5b9a\u7406\uff1a\n\n1. \u6700\u5927\u6b63\u94fe\u7684\u5927\u5c0f $L_1$ \u7b49\u4e8e\u53cd\u94fe\u7684\u6700\u5c0f\u5212\u5206\u6570 $M_1$\uff1b\n2. \u6700\u5927\u53cd\u94fe\u7684\u5927\u5c0f $L_2$ \u7b49\u4e8e\u6b63\u94fe\u7684\u6700\u5c0f\u5212\u5206\u6570 $M_2$\u3002\n\n\u5bf9\u4e8e\u5b9a\u7406\u4e00\uff0c\u56e0\u4e3a\u6b63\u94fe\u4e0a\u4efb\u610f\u4e24\u4e2a\u5143\u7d20\u90fd\u4e0d\u5c5e\u4e8e\u540c\u4e00\u4e2a\u53cd\u94fe\uff0c\u56e0\u6b64 $L_1\\le M_1$\uff1b\u53c8\uff0c\u6211\u4eec\u53ef\u4ee5\u6309\u9ad8\u5ea6\u6784\u9020\u5212\u5206\u4f7f\u5f97\u53cd\u94fe\u5212\u5206\u6570 $M_1=L_1$\u3002\u5bf9\u4e8e\u5b9a\u7406\u4e8c\uff0c\u540c\u6837\u53ef\u5f97 $L_2\\le M_2$\uff1b\u53c8\uff0c\u5229\u7528\u6570\u5b66\u5f52\u7eb3\u6cd5\uff0c\u5bf9\u504f\u5e8f\u96c6\u7684\u6781\u5927\u5143\u8fdb\u884c\u5206\u7c7b\u8ba8\u8bba\uff0c\u53ef\u4ee5\u6784\u9020\u51fa\u4e00\u7ec4 $M_2=L_2$\u3002\n\n\u7531\u4e8e DAG \u56fe\u4f20\u9012\u95ed\u5305\u540e\u5bf9\u5e94\u4e00\u4e2a\u504f\u5e8f\u96c6\uff0cDilworth \u5b9a\u7406\u4e8c\u5728 DAG \u4e0a\u6709\uff1a**\u6700\u5927\u72ec\u7acb\u96c6\u7684\u70b9\u6570\u7b49\u4e8e\u53ef\u91cd\u53e0\u8def\u5f84\u7684\u6700\u5c0f\u5212\u5206\u6570**\uff0c\u5373\u6700\u5c0f\u53ef\u91cd\u53e0\u8def\u5f84\u8986\u76d6\u3002\n\n### \u524d\u7f6e\u56db\uff1a\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u65f6\u95f4\u590d\u6742\u5ea6\n\u53c2\u8003 2015 \u5e74\u9648\u80e4\u4f2f\u7684\u8bba\u6587\u300a\u6d45\u8c08\u56fe\u7684\u5339\u914d\u7b97\u6cd5\u53ca\u5176\u5e94\u7528\u300b\u3002\n\n>\u4f7f\u7528 Dinic \u7b97\u6cd5\u53ef\u4ee5\u5728 $O(m\\sqrt n)$ \u590d\u6742\u5ea6\u5185\u6c42\u51fa\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u3002\n\n\u7531\u4e8e\u4e8c\u5206\u56fe\u6bcf\u6761\u8fb9\u7684\u8fb9\u6743\u90fd\u662f $1$\uff0c\u56e0\u6b64 bfs \u5206\u5c42\u4e0e dfs \u591a\u8def\u589e\u5e7f\u7684\u590d\u6742\u5ea6\u5747\u4e3a $O(m)$\u3002\u5bf9\u4e8e\u524d $\\sqrt n$ \u8f6e\uff0c\u590d\u6742\u5ea6\u4e3a $O(m\\sqrt n)$\u3002\u5728 $\\sqrt n$ \u8f6e\u540e\uff0c\u5229\u7528\u53cd\u8bc1\u6cd5\u53ef\u4ee5\u8bc1\u660e\u6cbf\u6700\u77ed\u8def\u589e\u5e7f\u4e0d\u4f1a\u4ea7\u751f\u66f4\u77ed\u7684\u8def\uff0c\u800c Dinic \u4e00\u8f6e\u5b8c\u6bd5\u610f\u5473\u7740\u6240\u6709\u540c\u4e00\u957f\u5ea6\u7684\u589e\u5e7f\u8def\u90fd\u5df2\u7ecf\u589e\u5e7f\u5b8c\uff0c\u56e0\u6b64 Dinic \u7b97\u6cd5\u6bcf\u4e00\u6b21\u91cd\u5efa\u5206\u5c42\u56fe\u540e\uff0c$s\u2192t$ \u7684\u6700\u77ed\u589e\u5e7f\u8def\u8ddd\u79bb\u662f\u4e25\u683c\u9012\u589e\u7684\uff0c\u90a3\u4e48\u6b64\u65f6\u4efb\u610f\u4e00\u6761\u589e\u5e7f\u8def\u7684\u957f\u5ea6\u4e0d\u5c0f\u4e8e $\\sqrt n$\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u8003\u8651\u6700\u5927\u5339\u914d $M$ \u4e0e\u5f53\u524d\u5339\u914d $P$ \u7684\u5bf9\u79f0\u5dee $M\u2295P$\uff0c\u5176\u4e2d\u4e00\u5b9a\u662f\u7531\u82e5\u5e72\u6761\u4e92\u4e0d\u76f8\u4ea4\u7684\u4ea4\u66ff\u73af/\u94fe\u6784\u6210\u589e\u5e7f\u8def\uff0c\u957f\u5ea6 $\u2265\\sqrt n$\u3002\u7531\u4e8e\u603b\u70b9\u6570 $<n$\uff0c\u6b64\u65f6\u8fd9\u6837\u7684\u94fe\u7684\u6570\u91cf $\u2264\\sqrt n$\uff0c\u56e0\u6b64\u8fd8\u5269 $O(\\sqrt n)$ \u6761\u589e\u5e7f\u8def\uff0c\u6700\u591a\u518d\u8fdb\u884c $\\sqrt n$ \u8f6e\uff0c\u603b\u590d\u6742\u5ea6 $O(m\\sqrt n)$\u3002\n\n_________________\n\n\u56de\u5230\u672c\u9898\u3002\u53c8\u524d\u7f6e\u4e09\u4e2d\u7684\u5b9a\u7406\u63a8\u8bba\uff0c\u53ef\u4ee5\u5f88\u5feb\u6c42\u51fa\u7b2c\u4e00\u95ee\u3002\n\n### \u6784\u9020\u53ef\u884c\u89e3\n\u5728 $\\text{Konig}$ \u5b9a\u7406\u7684\u8bc1\u660e\u4e2d\uff0c\u6709\u4ee5\u4e0b\u6784\u9020\u65b9\u6cd5\uff1a\u4ece\u53f3\u90e8\u6bcf\u4e2a\u975e\u5339\u914d\u70b9\u51fa\u53d1\u6267\u884c dfs \u5bfb\u627e\u201c\u589e\u5e7f\u8def\u201d\uff08\u5373\u975e\u5339\u914d\u8fb9-\u5339\u914d\u8fb9\u4ea4\u66ff\uff09\uff0c\u7136\u540e\u6807\u8bb0\u8bbf\u95ee\u8fc7\u7684\u8282\u70b9\uff0c\u6b64\u65f6\u5de6\u90e8\u8bbf\u95ee\u8fc7\u7684\u8282\u70b9\u548c\u53f3\u90e8\u672a\u8bbf\u95ee\u8fc7\u7684\u8282\u70b9\u5c31\u662f\u4e00\u7ec4\u4e8c\u5206\u56fe\u6700\u5c0f\u70b9\u8986\u76d6\u3002\n\n\u56e0\u4e3a\u72ec\u7acb\u96c6\u662f\u70b9\u8986\u76d6\u7684\u8865\u96c6\uff0c\u6240\u4ee5\u53d6**\u5de6\u90e8\u672a\u8bbf\u95ee\u8fc7\u7684\u8282\u70b9\u548c\u53f3\u90e8\u8bbf\u95ee\u8fc7\u7684\u8282\u70b9**\u6784\u6210\u6700\u5927\u72ec\u7acb\u96c6\u3002\u5bf9\u4e8e\u51fa\u70b9\u548c\u5165\u70b9\u90fd\u5c5e\u4e8e\u6700\u5927\u72ec\u7acb\u96c6\u7684\u539f\u56fe\u8282\u70b9 $x$\uff0c\u5c31\u662f\u6211\u4eec\u6784\u9020\u51fa\u7684\u89e3\u3002\n\n\u5bf9\u4e8e\u975e\u5339\u914d\u70b9\u548c\u5339\u914d\u70b9\u7684\u5224\u65ad\uff0c\u53ef\u4ee5\u6839\u636e\u8be5\u70b9\u4e0e $s, t$ \u7684\u8fde\u8fb9\u662f\u5426\u6ee1\u6d41\u3002\u540c\u7406\uff0c\u5bfb\u627e\u4e00\u4e2a\u5de6\u90e8\u5339\u914d\u70b9\u7684\u5339\u914d\u5bf9\u8c61\uff0c\u53ea\u9700\u8981\u770b\u54ea\u6761\u8fb9\u6ee1\u6d41\u5373\u53ef\u3002\n\n### \u6c42\u51fa\u6240\u6709\u53ef\u884c\u70b9\n\u600e\u6837\u7684\u70b9\u5c5e\u4e8e\u53ef\u884c\u70b9\u5462\uff1f\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/9j8l8bl4.png)\n\n\u5bf9\u4e0a\u56fe\u7247\u9762\u5730\u6982\u62ec\u53ef\u4ee5\u53d1\u73b0\uff0c\u4e24\u53c9\u4e0a\u90fd\u662f\u53ef\u884c\u70b9\uff0c\u4e0b\u9762\u5730\u201c\u5e72\u8def\u201d\u8282\u70b9\u90fd\u662f\u4e0d\u53ef\u884c\u70b9\uff0c\u539f\u56e0\u662f\u4e0b\u9762\u7684\u8282\u70b9\u4e0e\u4e24\u53c9\u8282\u70b9\u5747\u6709\u504f\u5e8f\u5173\u7cfb\u3002\u63a8\u5e7f\u53ef\u4ee5\u5f97\u5230\u4ee5\u4e0b\u7b97\u6cd5\uff1a\n\n1. \u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9 $u$\uff0c\u5220\u9664\u6240\u6709\u4e0e\u5176\u6709\u504f\u5e8f\u5173\u7cfb\u7684\u8282\u70b9\uff08\u5305\u62ec\u672c\u8eab\uff0c$u$ \u7684\u53ef\u8fbe\u70b9\u548c\u53ef\u8fbe $u$ \u7684\u70b9\uff09\u3002\n\n2. \u5c06\u5269\u4e0b\u7684\u70b9\u5efa\u56fe\uff0c\u8bb0\u5f55\u5269\u4f59\u8282\u70b9\u6570\u91cf $nV$\uff0c\u5e76\u6c42\u51fa\u6700\u5927\u72ec\u7acb\u96c6\u7684\u5927\u5c0f $M'$\u3002\n\n3. \u8bb0 $ans$ \u4e3a\u7b2c\u4e00\u95ee\u7b54\u6848\u3002\u5982\u679c $nV-M'=ans-1$\uff0c\u5373\u70b9 $u$ \u7684\u5220\u53bb\u53ea\u4f1a\u5f71\u54cd\u4e00\u4e2a\u8282\u70b9\u4e0d\u80fd\u6210\u4e3a\u6700\u5927\u72ec\u7acb\u96c6\u4e2d\u7684\u70b9\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8282\u70b9\u5c31\u53ef\u4ee5\u770b\u4f5c $u$\uff0c\u8bf4\u660e $u$ \u662f\u53ef\u884c\u70b9\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u74f6\u9888\u5728\u4e8e\u7b2c\u4e09\u95ee\u3002\u679a\u4e3e\u6240\u6709\u8282\u70b9\uff0c\u6bcf\u6b21\u9700\u8981\u6c42\u6700\u5927\u72ec\u7acb\u96c6\u3002\u7531\u4e8e\u603b\u8fb9\u6570 $O(n^2)$\uff0c\u4f7f\u7528 Dinic \u6c42\u5339\u914d\u7684\u590d\u6742\u5ea6\u4e3a $O(n^2\\sqrt n)$\uff0c$n$ \u6b21\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n^3\\sqrt n)$\u3002\u6ce8\u610f\u5efa\u7acb\u6570\u7ec4\u65f6\u8fb9\u6570\u662f $n^2$ \u7ea7\u522b\u800c\u4e0d\u662f $m$\u3002\n\n## \u5b8c\u6574\u4ee3\u7801\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <queue>\n#include <bitset>\nusing namespace std;\n#define rep(ii,aa,bb) for(re int ii = aa; ii <= bb; ii++)\n#define Rep(ii,aa,bb) for(re int ii = aa; ii >= bb; ii--)\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\ntypedef pair<int, int> PII;\nconst int N = 205, M = 30005, inf = 1 << 30;\nnamespace IO_ReadWrite {\n\t#define re register\n\t#define gg (p1 == p2 && (p2 = (p1 = _buf) + fread(_buf, 1, 1<<21, stdin), p1 == p2) ? EOF :*p1++)\n\tchar _buf[1<<21], *p1 = _buf, *p2 = _buf;\n\ttemplate <typename T>\n\tinline void read(T &x){\n\t\tx = 0; re T f=1; re char c = gg;\n\t\twhile(c > 57 || c < 48){if(c == '-') f = -1;c = gg;}\n\t\twhile(c >= 48 &&c <= 57){x = (x<<1) + (x<<3) + (c^48);c = gg;}\n\t\tx *= f;return;\n\t}\n\tinline void ReadChar(char &c){\n\t\tc = gg;\n\t\twhile(!isalpha(c)) c = gg;\n\t}\n\ttemplate <typename T>\n\tinline void write(T x){\n\t\tif(x < 0) putchar('-'), x = -x;\n\t\tif(x > 9) write(x/10);\n\t\tputchar('0' + x % 10);\n\t}\n\ttemplate <typename T>\n\tinline void writeln(T x){write(x); putchar('\\n');}\n}\nusing namespace IO_ReadWrite;\nint n, m, s, t, hd[N], ver[M], nxt[M], cap[M], tot = 1, ans;\ninline void add(int u, int v, int c) {\n\tver[++tot] = v; nxt[tot] = hd[u]; cap[tot] = c; hd[u] = tot;\n}\nint d[N], cur[N];\ninline bool bfs() {\n\tqueue <int> q;\n\tmemset(d, -1, sizeof d);\n\td[s] = 1; cur[s] = hd[s]; q.push(s);\n\twhile(!q.empty()) {\n\t\tint u = q.front(); q.pop();\n\t\tfor(int i = hd[u]; i; i = nxt[i]) {\n\t\t\tint v = ver[i];\n\t\t\tif(cap[i] && d[v] == -1) {\n\t\t\t\td[v] = d[u] + 1;\n\t\t\t\tcur[v] = hd[v];\n\t\t\t\tq.push(v);\n\t\t\t\tif(v == t) return 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\ninline int dfs(int u, int limit) {\n\tif(u == t || !limit) return limit;\n\tint flow = 0;\n\tfor(int &i = cur[u]; i && flow < limit; i = nxt[i]) {\n\t\tint v = ver[i];\n\t\tif(d[v] == d[u] + 1 && cap[i]) {\n\t\t\tint f = dfs(v, min(cap[i], limit - flow));\n\t\t\tif(!f) d[v] = -1;\n\t\t\tcap[i] -= f; cap[i ^ 1] += f; flow += f;\n\t\t}\n\t}\n\treturn flow;\n}\ninline int Dinic() {\n\tint maxflow = 0, flow = 0;\n\twhile(bfs())\n\t\twhile(flow = dfs(s, inf)) maxflow += flow;\n\treturn maxflow;\n}\nbitset <N> f[N];\nint idL[N], idR[N], id[N], match[N];\nbool vL[N], vR[N];\ninline void dfs_match(int u) { // \u8d70\u4ea4\u66ff\u94fe\u6807\u8bb0\u70b9\n\tvR[u] = 1;\n\trep(v, 1, n) \n\t\tif(f[v][u] && !vL[v]) \n\t\t\tvL[v] = 1, dfs_match(match[v]);\n}\nbool del[N];\nint main () {\n\tread(n); read(m);\n\ts = 2 * n + 1, t = 2 * n + 2;\n\trep(i, 1, m) {\n\t\tint u, v;\n\t\tread(u); read(v);\n\t\tf[u][v] = 1;\n\t}\n\trep(k, 1, n)\n\t\trep(i, 1, n) if(f[i][k])\n\t\t\tf[i] |= f[k];\n\trep(u, 1, n) {\n\t\tidL[u] = u;\n\t\tidR[u] = u + n;\n\t}\n\trep(u, 1, n) {\n\t\tadd(s, idL[u], 1), id[u] = tot, add(idL[u], s, 0);\n\t\tadd(idR[u], t, 1), add(t, idR[u], 0);\n\t}\n\trep(u, 1, n)\n\t\trep(v, 1, n)\n\t\t\tif(f[u][v]) {\n\t\t\t\tadd(idL[u], idR[v], 1);\n\t\t\t\tadd(idR[v], idL[u], 0);\n\t\t\t}\n\twriteln(ans = (n - Dinic())); // 1\n\t\n\trep(u, 1, n) if(!cap[id[u]]) {\n\t\tfor(int i = hd[u]; i; i = nxt[i]) {\n\t\t\tint v = ver[i];\n\t\t\tif(!cap[i]) { // \u6ee1\u6d41\u8bf4\u660e\u5339\u914d\n\t\t\t\tmatch[u] = v - n;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\trep(i, 1, n) if(cap[i * 4]) dfs_match(i); // \u975e\u5339\u914d\u70b9\n\trep(i, 1, n) write((!vL[i] && vR[i]));\n\tputchar('\\n');// 2\n\t\n\trep(u, 1, n) {\n\t\tmemset(hd, 0, sizeof hd);\n\t\ttot = 1;\n\t\tint nV = 0; // \u8bb0\u5f55\u5269\u4f59\u70b9\u6570\n\t\trep(v, 1, n) del[v] = (u == v || f[u][v] || f[v][u]); // \u5220\u53bb\u6709\u504f\u5e8f\u5173\u7cfb\u7684\u8282\u70b9\n\t\trep(u, 1, n) if(!del[u]) {\n\t\t\t++nV;\n\t\t\tadd(s, idL[u], 1), add(idL[u], s, 0);\n\t\t\tadd(idR[u], t, 1), add(t, idR[u], 0);\n\t\t}\n\t\trep(u, 1, n) if(!del[u])\n\t\t\trep(v, 1, n) \n\t\t\t\tif(!del[v] && f[u][v]) {\n\t\t\t\t\tadd(idL[u], idR[v], 1);\n\t\t\t\t\tadd(idR[v], idL[u], 0);\n\t\t\t\t} // \u8fde\u8fb9\n\t\twrite((nV - Dinic()) == ans - 1);\n\t}//3\n\t\n\treturn 0;\n}\n```\n\n## \u540e\u8bb0\n1. \u672c\u9898\u4e09\u95ee\u7ed3\u5408\uff0c\u65e2\u8981\u7528 Dilworth \u5b9a\u7406\u6c42\u6700\u5927\u72ec\u7acb\u96c6\uff0c\u53c8\u8981\u6784\u9020\u51fa\u4e00\u7ec4\u89e3\uff0c\u5e76\u6c42\u51fa\u53ef\u884c\u89e3\uff0c**\u611f\u89c9\u73c2\u4ee5\u8bc4\u9ed1**\u3002\n\n2. \u622a\u6b62\u81f3 $2022$ \u5e74 $2$ \u6708 $19$ \u65e5\u7684\u6700\u4f18\u89e3\u796d\u3002\n\n3. \u6765\u81ea 30s \u540e\u7684 update\uff1a\u6f0f\u4e86\u4e2a\u7a7a\u683c\u3002",
        "postTime": 1645243868,
        "uid": 279197,
        "name": "Mars_Dingdang",
        "ccfLevel": 6,
        "title": "P4298 \u796d\u7940"
    },
    {
        "content": "\u9996\u5148\u9898\u610f\u8ba9\u6211\u4eec\u6c42\u7684\u5c31\u662f\u4e00\u4e2a DAG \u7684\u6700\u957f\u53cd\u94fe\uff0c\u5373\u5728\u56fe\u4e2d\u9009\u51fa\u4e00\u4e2a\u70b9\u96c6\uff0c\u4f7f\u5f97\u5b83\u4eec\u4e4b\u95f4\u4e24\u4e24\u4e0d\u53ef\u8fbe\u3002\n\n\u7531 Dilworth \u5b9a\u7406\u53ef\u77e5\uff0cDAG \u7684\u6700\u957f\u53cd\u94fe $=$ \u6700\u5c0f\u53ef\u91cd\u94fe\u8986\u76d6\u3002\n\n\u5173\u4e8e Dilworth \u5b9a\u7406\u7684\u5177\u4f53\u5185\u5bb9\u53ef\u4ee5\u770b\u6211\u7684[\u8fd9\u7bc7\u535a\u5ba2](https://www.luogu.com.cn/blog/61120/dilworth-proof)\u3002\n\n\u6700\u5c0f\u53ef\u91cd\u94fe\u8986\u76d6\u53c8\u7b49\u4e8e\u4f20\u9012\u95ed\u5305\u4e0a\u7684\u6700\u5c0f\u4e0d\u53ef\u91cd\u94fe\u8986\u76d6\u3002\n\n\u6700\u5c0f\u4e0d\u53ef\u91cd\u94fe\u8986\u76d6\u662f\u4e2a\u7ecf\u5178\u95ee\u9898\uff0c\u53ef\u4ee5\u8f6c\u5316\u4e3a\u62c6\u70b9\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\u3002\n\n\u6c42\u51fa\u56fe\u7684\u4f20\u9012\u95ed\u5305\u7136\u540e\u8dd1\u4e2a\u5308\u7259\u5229\u5373\u53ef\u6c42\u51fa\u7b2c\u4e00\u95ee\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n^3)$\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u95ee\uff0c\u53ef\u4ee5\u76f4\u63a5\u5957\u7528\u4e0a\u9762\u90a3\u7bc7\u535a\u5ba2\u4e2d\u7684\u8c03\u6574\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u5229\u7528\u7b2c\u4e09\u95ee\u7684\u7b54\u6848\u6c42\u89e3\u3002\n\n\u5148\u6765\u8003\u8651\u4e00\u4e0b\u7b2c\u4e09\u95ee\u600e\u4e48\u6c42\uff0c\u8003\u8651\u5f3a\u5236\u4e00\u4e2a\u70b9\u9009\u5165\u53cd\u94fe\uff0c\u5728\u56fe\u4e2d\u5220\u53bb\u8fd9\u4e2a\u70b9\u548c\u5b83\u80fd\u5230\u8fbe\u548c\u88ab\u5230\u8fbe\u7684\u70b9\u540e\uff0c\u518d\u6c42\u4e00\u904d\u7b54\u6848\uff0c\u5982\u679c\u6b64\u65f6\u7b54\u6848\u6bd4\u7b2c\u4e00\u95ee\u5c0f $1$\uff0c\u8bf4\u660e\u8fd9\u4e2a\u70b9\u53ef\u4ee5\u9009\u5165\u7b54\u6848\u3002\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal O(n^4)$\u3002\n\n\u6c42\u51fa\u7b2c\u4e09\u95ee\u540e\uff0c\u7b2c\u4e8c\u95ee\u5c31\u5f88\u597d\u529e\u4e86\uff0c\u76f4\u63a5\u6bcf\u6b21\u4ece\u7b2c\u4e09\u95ee\u7684\u70b9\u96c6\u4e2d\u9009\u51fa\u4e00\u4e2a\u70b9\uff0c\u5220\u53bb\u70b9\u96c6\u4e2d\u4e0e\u5b83\u6709\u53ef\u8fbe\u5173\u7cfb\u7684\u70b9\uff0c\u76f4\u5230\u70b9\u96c6\u4e3a\u7a7a\u5373\u53ef\u3002\u6b63\u786e\u6027\u53ef\u4ee5\u8003\u8651\u6c42\u7b2c\u4e09\u95ee\u7684\u8fc7\u7a0b\uff0c\u663e\u7136\u662f\u5bf9\u7684\u3002\n\n$\\texttt{Code Below}$\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int N=105;\n\nll read(){static ll x;scanf(\"%lld\",&x);return x;}\nvoid write(ll x){printf(\"%lld\",x);}\nvoid print(ll x,char c='\\n'){write(x),putchar(c);}\n\nbool is[N];\nbitset<N>e[N];\nint x[N],y[N],n,m;\nbool dfs(int now)\n{\n\tif (is[now]||x[now]<0) return 0;\n\tis[now]=1;\n\tfor (int i=1;i<=n;i++)\n\tif (e[now][i]&&~x[i])\n\tif (!y[i]||dfs(y[i]))\n\t{\n\t\tx[now]=i,y[i]=now;\n\t\treturn 1;\n\t}\n\treturn 0;\n}\nbool can[N];\n\nsigned main()\n{\n\tn=read(),m=read();\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tint u=read(),v=read();\n\t\te[u].set(v);\n\t}\n\tfor (int k=1;k<=n;k++)\n\tfor (int i=1;i<=n;i++)\n\tif (e[i][k]) e[i]|=e[k];\n\tint ans=n;\n\tfor (int i=1;i<=n;i++) memset(is,0,sizeof(is)),ans-=dfs(i);\n\tprint(ans);\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tmemset(x,0,sizeof(x));\n\t\tmemset(y,0,sizeof(y));\n\t\tint tot=n;\n\t\tfor (int j=1;j<=n;j++) if (i==j||e[i][j]||e[j][i]) x[j]=-1,tot--;\n\t\tfor (int j=1;j<=n;j++) memset(is,0,sizeof(is)),tot-=dfs(j);\n\t\tcan[i]=tot==ans-1;\n\t}\n\tmemcpy(is,can,sizeof(is));\n\tfor (int i=1;i<=n;i++) if (is[i])\n\tfor (int j=1;j<=n;j++) if (e[i][j]||e[j][i]) is[j]=0;\n\tfor (int i=1;i<=n;i++) putchar(is[i]+'0');;puts(\"\");\n\tfor (int i=1;i<=n;i++) putchar(can[i]+'0');;puts(\"\");\n\t\n\treturn 0;\n}\n```",
        "postTime": 1644377418,
        "uid": 61120,
        "name": "QwQcOrZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4298 \u3010CTSC2008 \u796d\u7940\u3011"
    },
    {
        "content": "\u9898\u76ee\u8981\u6c42\u7684\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u504f\u5e8f\u5173\u7cfb\u7684**\u6700\u957f\u53cd\u94fe**\uff0c\u901a\u8fc7 Dilworth \u5b9a\u7406\u53ef\u4ee5\u53d1\u73b0\u5c31\u662f DAG \u7684**\u6700\u5c0f\u53ef\u91cd\u590d\u8def\u5f84\u70b9\u8986\u76d6**\u3002\n\n\u6700\u5c0f\u53ef\u91cd\u590d\u8def\u5f84\u70b9\u8986\u76d6\u53c8\u53ef\u4ee5\u901a\u8fc7 $\\mathcal O(n^3)$ \u7684\u4f20\u9012\u95ed\u5305\u8f6c\u5316\u4e3a**\u6700\u5c0f\u8def\u5f84\u70b9\u8986\u76d6**\u3002\n\n\u53c8 DAG \u7684\u6700\u5c0f\u8def\u5f84\u70b9\u8986\u76d6\u5305\u542b\u7684\u8def\u5f84\u6761\u6570 $= n -$ \u5176**\u62c6\u70b9\u4e8c\u5206\u56fe**\u7684\u6700\u5927\u5339\u914d\u6570\u3002\n\n\u4f7f\u7528**\u5308\u7259\u5229\u7b97\u6cd5**\u5373\u53ef\u5728 $\\mathcal O(n^3)$ \u7684\u65f6\u95f4\u6c42\u51fa\u7b54\u6848\u3002\n\n\u63a5\u4e0b\u6765\u7684\u95ee\u9898\u662f\u5982\u4f55\u6784\u9020\u65b9\u6848\u3002\n\n\u6211\u4eec\u5148\u6c42\u51fa\u4f20\u9012\u95ed\u5305\u540e\u7684\u56fe\u7684\u6700\u5c0f\u8def\u5f84\u70b9\u8986\u76d6\u5305\u542b\u7684\u8def\u5f84\u96c6\u5408 $path$\uff1a\n\n1. \u8bbe\u5728\u62c6\u70b9\u4e8c\u5206\u56fe\u4e2d\u5de6\u90e8\u70b9 $x$ \u5bf9\u5e94\u7684\u53f3\u90e8\u70b9\u4e3a $x^{\\prime}$\uff0c\u82e5 $x,y$ \u5339\u914d\u5219\u6709 $f_x = y, f_y = x$\u3002\n2. \u4f9d\u6b21\u8003\u8651\u5de6\u90e8\u7684\u6bcf\u4e00\u4e2a\u975e\u5339\u914d\u70b9 $x_0$\u3002\n3. \u4ece $x_0$ \u51fa\u53d1\uff0c\u6bcf\u6b21\u4ece $x$ \u8d70\u5230 $f_{x^{\\prime}}$\uff0c\u76f4\u81f3\u5230\u8fbe\u4e00\u4e2a\u5de6\u90e8\u70b9 $y_0$\uff0c\u6ee1\u8db3 $y_0^{\\prime}$ \u662f\u975e\u5339\u914d\u70b9\u3002\n4. \u90a3\u4e48\u7ecf\u8fc7\u7684\u6240\u6709\u70b9\u6784\u6210\u4e00\u6761\u4ee5 $y_0$ \u4e3a\u8d77\u70b9 $x_0$ \u4e3a\u7ec8\u70b9\u7684\u8def\u5f84\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u8981\u4ece $path$ \u7684\u6bcf\u6761\u8def\u5f84\u4e0a\u9009\u51fa\u4e00\u4e2a\u70b9\u6784\u6210\u539f\u56fe\u7684\u6700\u957f\u53cd\u94fe\uff1a\n\n1. \u5c06\u6240\u6709\u7684\u7ec8\u70b9 $x_0$ \u653e\u5230\u4e00\u8d77\u6784\u6210\u4e00\u4e2a\u96c6\u5408 $E$\u3002\n2. \u6c42\u51fa\u4ece $E$ \u4e2d\u7684\u6240\u6709\u8282\u70b9\u51fa\u53d1\uff0c\u8d70\u4e00\u6761\u8fb9\uff0c\u5230\u8fbe\u7684\u6240\u6709\u8282\u70b9 $next(E)$\u3002\n3. \u6839\u636e\u4f20\u9012\u95ed\u5305\u7684\u6027\u8d28\uff0c\u82e5 $E$ \u4e0e $next(E)$ \u6ca1\u6709\u4ea4\uff0c\u90a3\u4e48 $E$ \u5373\u4e3a\u6240\u6c42\u3002\n4. \u5426\u5219\u8003\u8651 $E \\cap next(E)$ \u7684\u6240\u6709\u8282\u70b9 $e$\uff0c\u6cbf\u7740 $e$ \u6240\u5728\u7684\u8def\u5f84\u53cd\u7740\u8d70\uff0c\u76f4\u5230\u4e00\u4e2a\u8282\u70b9 $e^{\\prime} \\notin next(E)$\uff0c\u5728 $E$ \u4e2d\u5c06 $e$ \u66ff\u6362\u4e3a $e^{\\prime}$\u3002\n5. \u56de\u5230\u7b2c $3$ \u6b65\u3002",
        "postTime": 1580052058,
        "uid": 100544,
        "name": "xht",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4298 \u3010[CTSC2008]\u796d\u7940\u3011"
    },
    {
        "content": "[\u5e7f\u544a](https://www.cnblogs.com/hbxblog/p/11271140.html)\n### \u9898\u76ee\u94fe\u63a5\n\n[\u6233\u6211](https://www.luogu.org/problem/P4298)\n\n### $Solution$\n\n#### \u7b2c\u4e00\u95ee\n\n\u8fd9\u9053\u9898\u8981\u77e5\u9053\u4e00\u4e2a\u53eb\u505a$Dilworth$\u7684\u5b9a\u7406\n\n\u6700\u957f\u53cd\u94fe$=$\u6700\u5c0f\u94fe\u8986\u76d6\n\n\u8bc1\u660e([$from\\ r\\_64$](http://r-64.blog.uoj.ac/blog/623)):  \n\n![](https://s2.ax1x.com/2019/07/30/eJ9ypF.png)\n\n\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u6c42\u4e00\u4e2a\u6700\u5c0f\u94fe\u8986\u76d6\u5373\u53ef\n\n\u8fd9\u4e2a\u5f88\u597d\u6c42\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u62c6\u70b9\uff0c\u62c6\u6210$(x,x')$,$s->x$\u6d41\u91cf\u4e3a$1$,$x'->t$,\u6d41\u91cf\u4e3a$1$\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u76f8\u8fde\u901a\u7684\u8fb9$(x,y)$,\u5c06$x->y'$\u6d41\u91cf\u4e3a$1$\n\n\u6700\u540e\u7528$n-Dinic()$\u5373\u53ef\n\n\u4f46\u662f\u6ce8\u610f\u4e0d\u80fd\u6839\u636e\u8f93\u5165\u7684\u8fb9\u8fde\u8fb9\uff0c\u9700\u8981\u7528\u4f20\u9012\u95ed\u5305\u5224\u4e00\u4e0b\u8fde\u901a\u6027\uff0c\u56e0\u4e3a\u5982\u4e0b\u56fe\u8fd9\u79cd\u60c5\u51b5\uff0c\u5c31\u4e0d\u5bf9\n\n![](https://s2.ax1x.com/2019/07/30/eJi8fK.png)\n\n\u8fd9\u6837\u5b50\u5982\u679c\u76f4\u63a5\u8fde\u8fb9\u8dd1\u51fa\u6765\u7684\u7ed3\u679c\u662f$3$\u4f46\u662f\u5b9e\u9645\u4e0a\u5e94\u8be5\u662f$2$\n\n\u672c\u6765\u5e94\u8be5\u662f\u6ca1\u6709\u540e\u9762\u4e24\u95ee\u7684,\u4f46\u662f\u56e0\u4e3a\u6709\u4e86$spj$\u5bfc\u81f4\u540e\u9762\u4e24\u95ee\u53c8\u51fa\u6765\u4e86\n\n#### \u7b2c\u4e8c\u95ee\n\n\u5b83\u8981\u6c42\u4e00\u4e2a\u6700\u957f\u53cd\u94fe\uff0c\u4e5f\u5c31\u662f\u6c42\u4e00\u4e2a\u6700\u5927\u72ec\u7acb\u96c6\n\n![](https://s2.ax1x.com/2019/07/30/eJF1Bj.png)\n\n[$from\\ zsy$](https://www.cnblogs.com/zhoushuyu)\n\n#### \u7b2c\u4e09\u95ee\n\n\u6211\u4eec\u5220\u6389\u4e00\u4e2a\u70b9\u548c\u4e0e\u4ed6\u76f8\u5173\u7684\u70b9\u4e0e\u8fb9\uff0c\u518d\u6c42\u4e00\u6b21\u6700\u957f\u53cd\u94fe\uff0c\u5982\u679c\u7b54\u6848\u51cf\u5c11\u4e86$1$\u5219\u8fd9\u4e2a\u53ef\u80fd\u5728\u6700\u957f\u53cd\u94fe\u4e2d\u5426\u5219\u4e0d\u53ef\u80fd,\u5177\u4f53\u89c1\u4ee3\u7801\n\n### $Code$\n\n``` cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int inf=1e9;\ntypedef long long ll;\nint read(){\n    int x=0,f=1;char c=getchar();\n    while(c<'0'||c>'9') f=(c=='-')?-1:1,c=getchar();\n    while(c>='0'&&c<='9') x=x*10+c-'0',c=getchar();\n    return x*f;\n}\nstruct node{\n    int to,next,v;\n}a[2000001];\nint head[1000001],cnt=1,tot,ans,n,m,s,t,x,y,z,dep[1000001],f[1001][1001],vis[1001],bj[1001];\nvoid add(int x,int y,int c){\n    a[++cnt].to=y,a[cnt].next=head[x],a[cnt].v=c,head[x]=cnt;\n    a[++cnt].to=x,a[cnt].next=head[y],a[cnt].v=0,head[y]=cnt;\n}\nqueue<int> q;\nint bfs(){\n    memset(dep,0,sizeof(dep));\n    q.push(s);\n    dep[s]=1;\n    while(!q.empty()){\n        int now=q.front();\n        q.pop();\n        for(int i=head[now];i;i=a[i].next){\n            int v=a[i].to;\n            if(!dep[v]&&a[i].v>0)\n                dep[v]=dep[now]+1,q.push(v);\n        }\n    }\n    if(dep[t])\n        return 1;\n    return 0;\n}\nint dfs(int k,int list){\n    if(k==t||!list)\n        return list;\n    for(int i=head[k];i;i=a[i].next){\n        int v=a[i].to;\n        if(dep[v]==dep[k]+1&&a[i].v>0){\n            int p=dfs(v,min(list,a[i].v));\n            if(p){\n                a[i].v-=p;\n\t\t\t\ta[i^1].v+=p;\n                return p;\n            }\n        }\n    }\n    return dep[k]=0;\n}\nint Dinic(){\n    int ans=0,k;\n    while(bfs())\n        while((k=dfs(s,inf)))\n            ans+=k;\n    return ans;\n}\nvoid floyd(){\n\tfor(int k=1;k<=n;k++)\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\tf[i][j]=max(f[i][j],f[i][k]&f[k][j]);\n}\nvoid dfs1(int x){\n\tif(!vis[x]&&x<=n) return ;\n\tif(vis[x]&&x>n) return ;\n\tif(x<=n){\n\t\tvis[x]=0;\n\t\tfor(int i=head[x];i;i=a[i].next)\n\t\t\tif(a[i].v)\n\t\t\t\tdfs1(a[i].to);\n\t}\n\telse {\n\t\tvis[x]=1;\n\t\tfor(int i=head[x];i;i=a[i].next)\n\t\t\t if(!a[i^1].v)\n\t\t\t\t dfs1(a[i].to);\n\t}\n}\nint main(){\n    n=read(),m=read(),s=0,t=2*n+1;\n    for(int i=1;i<=m;i++)\n        x=read(),y=read(),f[x][y]=1;\n\tfor(int i=1;i<=n;i++)\n\t\tadd(s,i,1),bj[i]=cnt-1,add(i+n,t,1),f[i][i]=1,vis[i]=1;\n\tfloyd();\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tif(i!=j&&f[i][j])\n\t\t\t\tadd(i,j+n,1);\n    printf(\"%d\\n\",ans=(n-Dinic()));\n\tfor(int i=1;i<=n;i++)\n\t\tif(a[bj[i]].v)\n\t\t\tdfs1(i);\n\tfor(int i=1;i<=n;i++)\n\t\tprintf(\"%d\",(vis[i]|vis[i+n])^1);\n\tcout<<endl;\n\tfor(int k=1;k<=n;k++){\n\t\tmemset(head,0,sizeof(head)),cnt=1,tot=0;\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tif(i!=k&&!f[i][k]&&!f[k][i])\n\t\t\t\tadd(s,i,1),add(i+n,t,1),tot++;\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\tif(i!=j&&f[i][j]&&i!=k)\n\t\t\t\t\tadd(i,j+n,1);\n\t\tprintf(\"%d\",ans-1==tot-Dinic());\n\t}\n}\n```\n",
        "postTime": 1564485688,
        "uid": 19805,
        "name": "\u64a4\u4e91",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4298 \u3010[CTSC2008]\u796d\u7940\u3011"
    },
    {
        "content": "## Tag\n\n\u6700\u5927\u5339\u914d\uff0c$\\text{Dilworth}$ \u5b9a\u7406\u3002\n\n## Preface\n\n\u8054\u8d5b\u524d\u4e86\u641e\u4e00\u4e0b\u56fe\u8bba\u3002\n\n## Description\n\n\u7ed9\u5b9a\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe $G=(V,E)$\uff0c\u6c42\u5176\u6700\u5927\u72ec\u7acb\u96c6\uff0c\u5e76\u6784\u9020\u65b9\u6848\u3002\n\n$\\texttt{data range:} |V|\\leq 100, |E|\\leq 1000$.\n\n## Solution\n\n### Question1\n\n\u6700\u5927\u72ec\u7acb\u96c6\u4e5f\u5c31\u662f\u5bf9\u4e8e\u6240\u6709 $S\\subseteq V$\uff0c\u6c42\u51fa\u4e00\u4e2a $S$ \u4f7f\u5f97 $|S|$ \u6700\u5927\uff0c\u5e76\u4e14\u5173\u4e8e $S$ \u4e2d\u7684\u6240\u6709\u70b9\uff0c\u4e0d\u4f1a\u6709\u4e00\u4e2a\u70b9\u53ef\u4ee5\u5230\u8fbe\u53e6\u4e00\u4e2a\u70b9\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u8fd9\u4e2a\u95ee\u9898\u7684\u8865\u95ee\u9898\uff0c\u4e5f\u5c31\u662f**\u6700\u5c0f\u53ef\u91cd\u94fe\u8986\u76d6**\uff0c\u4ee4\u8fd9\u4e9b\u94fe\u7684\u9876\u70b9\u7684\u70b9\u96c6\u4e3a $T$\u3002\n\n\u6700\u5c0f\u53ef\u91cd\u94fe\u8986\u76d6\u4e5f\u5c31\u662f\u5728\u8fd9\u4e2a\u56fe\u4e2d\uff0c\u9009\u53d6\u82e5\u5e72\u6761\u94fe\uff0c\u4f7f\u5f97\u8fd9\u4e9b\u94fe\u6240\u5305\u542b\u7684\u70b9\u96c6\u7684\u4ea4\u4e3a\u5168\u96c6 $V$\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u95ee\u9898\u6211\u4eec\u6709\u5f88\u5bb9\u6613\u89e3\u51b3\u7684\u65b9\u6cd5\uff0c\u9996\u5148\u901a\u8fc7\u504f\u5e8f\u5173\u7cfb\u7684\u4f20\u9012\u6027\u5c06\u6700\u5c0f\u53ef\u91cd\u94fe\u8986\u76d6\u53d8\u6210**\u6700\u5c0f\u94fe\u8986\u76d6**\u3002\n\n\u6539\u53d8\u4e3a\u6700\u5c0f\u94fe\u8986\u76d6\u5f88\u7b80\u5355\uff0c\u76f4\u63a5\u901a\u8fc7 floyd \u7b97\u6cd5\u6c42\u51fa\u5168\u504f\u5e8f\u5173\u7cfb\u5c31\u53ef\u4ee5\u4e86\uff0c\u7136\u540e\u7b54\u6848\u5c31\u662f\u6c42\u89e3[\u6700\u5c0f\u8def\u5f84\u8986\u76d6\u95ee\u9898](https://www.luogu.com.cn/problem/P2764)\u4e4b\u540e\u7528\u5168\u96c6 $V$ \u7684\u5927\u5c0f\u51cf\u53bb\u70b9\u96c6 $T$ \u7684\u5927\u5c0f\u3002\n\n\u81ea\u6b64\u7b2c\u4e00\u95ee\u505a\u5b8c\u4e86\uff0c\u4ee3\u7801\u4e2d\u7528\u7684\u662f\u4e8c\u5206\u56fe\u5b9e\u73b0\u7684\uff08\u4e3b\u8981\u662f\u77ed\u7684\u4e00\u7b14\u7684\u540c\u65f6\u8fd8\u80fd\u5f88\u5bb9\u6613\u7684\u5b9e\u73b0\u540e\u9762\u7684\u95ee\u9898\uff09\u3002\n\n### Question2\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u6784\u9020\u65b9\u6848\u4e86\uff0c\u8003\u8651\u6700\u5c0f\u8def\u5f84\u8986\u76d6\u4e2d\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u76f4\u63a5\u627e\u5230\u4e00\u4e2a\u70b9\uff0c\u7136\u540e\u627e\u5230\u8fd9\u4e2a\u70b9\u7684\u94fe\u7684\u9876\u7aef\uff0c\u7136\u540e\u8f93\u51fa\u9876\u7aef\u5373\u53ef\u3002\n\n### Question3\n\n\u5bf9\u4e8e\u7b2c\u4e09\u95ee\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u5f88\u6709\u610f\u601d\u7684\u89e3\u51b3\u65b9\u6cd5\uff0c\u540c\u65f6\u8fd9\u4e2a\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u89e3\u51b3\u7b2c\u4e8c\u95ee\u3002\n\n\u8003\u8651\u4e00\u4e2a\u70b9\u5728\u4e8c\u5206\u56fe\u4e2d\u662f\u5426\u88ab\u5339\u914d\uff0c\u5982\u679c\u6ca1\u6709\u88ab\u5339\u914d\u90a3\u4e48\u5c31\u662f\u4e0d\u5728\u5176\u4e2d\u7684\u3002\uff08\uff1f\uff09\n\n\u8fd9\u663e\u7136\u662f\u9519\u8bef\u7684\uff0c\u6bd4\u5982\u8be5\u70b9\u5728\u4e24\u4e2a\u94fe\u7684**\u4ea4\u70b9\u5904**\uff0c\u53ef\u80fd\u9009\u53d6\u4e86\u8be5\u70b9\u4e4b\u540e\u5c31\u4f1a\u4f7f\u65b9\u6848\u6570\u51cf\u5c11\uff0c\u6240\u4ee5\u4e0d\u80fd\u9009\u62e9\u3002\n\n\u90a3\u4e48\u6211\u4eec\u57fa\u4e8e\u8fd9\u79cd\u7279\u6b8a\u60c5\u51b5\u8003\u8651\u5c06\u4e8e\u8fd9\u70b9\u76f8\u5173\u7684\u6240\u6709\u70b9\u90fd\u5220\u6389\uff0c\u5982\u679c\u5220\u5b8c\u4e4b\u540e\u5269\u4e0b\u7684\u70b9\u80fd\u5f62\u6210\u7684**\u6700\u5c0f\u94fe\u8986\u76d6\u6570\u91cf\u4e3a\u539f\u7b54\u6848\u51cf\u4e00**\u7684\u8bdd\uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u5c31\u662f\u53ef\u4ee5\u88ab\u9009\u53d6\u7684\uff0c\u5426\u5219\u5c31\u662f\u4e0d\u80fd\u88ab\u9009\u53d6\u7684\u3002\n\n\u7136\u540e\u5982\u679c\u6211\u4eec\u77e5\u9053\u4e86\u7b2c\u4e09\u95ee\u7684\u7ed3\u679c\u4e0e\u6784\u9020\u65b9\u6cd5\u7684\u8bdd\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u51fa\u5982\u679c\u8fd9\u4e2a\u70b9\u5982\u679c\u53ef\u4ee5\u9009\u62e9\u7684\u8bdd\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u7b2c\u4e8c\u95ee\u4e2d\u9009\u62e9\u8fd9\u4e2a\u70b9\uff0c\u7136\u540e\u5c06\u4e0e\u8fd9\u4e2a\u70b9\u6709\u5173\u7684\u6240\u6709\u70b9\u90fd\u5220\u6389\uff0c\u8fd9\u5c31\u662f\u7b2c\u4e09\u95ee\u7684**\u9006\u6784\u9020**\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\u7528\u7684\u662f\u8fd9\u4e00\u79cd\u6784\u9020\u65b9\u6cd5\u3002\n\n## Code\n\n```cpp\nconst int N = 1e2 + 1;\n\nint g[N][N], mch[N];\nint vis[N], n, m;\nbool kil[N], ans2[N], ans1[N];\nvector<int> e[N];\n\nbool xyl(const int u, const int now) {\n    if(vis[u] == now) return false;\n    vis[u] = now;\n    for(int v : e[u]) {\n        if(kil[v]) continue;\n        if(!mch[v]) return mch[v] = u, true;\n        if(xyl(mch[v], now)) return mch[v] = u, true;\n    }\n    return false;\n}\n\ninline void input() {\n    n = rd, m = rd;\n    for(int i = 1, u, v; i <= m; i++) {\n        u = rd, v = rd;\n        g[u][v] = true;\n    }\n    for(int i = 1; i <= n; i++) g[i][i] = true;\n    return ;\n}\n\ninline void init() {\n    FOR(k, 1, n) FOR(i, 1, n) FOR(j, 1, n) \n        g[i][j] = g[i][j] | (g[i][k] && g[k][j]);\n    FOR(i, 1, n) FOR(j, 1, n) {\n        if(i == j) continue;\n        if(g[i][j]) e[i].push_back(j);\n    }\n    return ;\n}\n\ninline void work() {\n    int ans = 0;\n    FOR(i, 1, n) if(xyl(i, i)) ans++;\n    cout << n - ans << '\\n';//question 1\n    \n    FOR(i, 1, n) {\n        int tem = n, tmp = 0;\n        FOR(j, 1, n) kil[j] = false, vis[j] = 0, mch[j] = 0;\n        FOR(j, 1, n) if(g[i][j] || g[j][i] || i == j) kil[j] = true, tem--;\n        FOR(j, 1, n) {\n            if(kil[j]) continue;\n            if(xyl(j, j)) tmp++;\n        }\n        ans2[i] = (n - ans == tem - tmp + 1);\n    }//question 3\n    \n    FOR(i, 1, n) kil[i] = false;\n    FOR(i, 1, n) if(ans2[i] && !kil[i]) {\n        ans1[i] = true;\n        FOR(j, 1, n) if(g[i][j] || g[j][i] || i == j) kil[j] = true;\n    }//question 2\n    \n    FOR(i, 1, n) cout << ans1[i];\n    cout << '\\n';\n    FOR(i, 1, n) cout << ans2[i];\n    return ;\n}\n\ninline void solve() {\n    input();\n    init();\n    work();\n    return ;\n}\n```",
        "postTime": 1634300867,
        "uid": 366935,
        "name": "KAMIYA_KINA",
        "ccfLevel": 7,
        "title": "P4298 [CTSC2008]\u796d\u7940 \u9898\u89e3"
    },
    {
        "content": "\u9898\u76ee\u94fe\u63a5\uff1a[P4298](https://www.luogu.com.cn/problem/P4298)\n\n\u9898\u610f\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002\n\n### \u7b80\u5355\u6765\u8bb2\u53ef\u4ee5\u5206\u6210\u4e09\u4e2a\u95ee\u9898\n\n1.\u5728 DAG \u4e2d\u6c42\u6700\u5927\u70b9\u96c6\u5927\u5c0f\uff0c\u4f7f\u5f97\u70b9\u96c6\u4e2d\u7684\u70b9\u4e24\u4e24\u4e0d\u53ef\u8fbe\uff0c\u53ef\u4ee5\u53eb\u4f5c\u6700\u5927\u70b9\u72ec\u7acb\u96c6\u6216\u8005\u6700\u957f\u53cd\u94fe\n\n2.\u6784\u9020\u51fa\u4e00\u79cd 1 \u95ee\u9898\u7684\u65b9\u6848\n\n3.\u6c42\u51fa\u6240\u6709\u53ef\u80fd\u88ab\u5305\u542b\u5728\u96c6\u5408\u5185\u7684\u70b9\n\n#### \u95ee\u98981\n\n\u7531 Dilworth \u5b9a\u7406\u53ef\u77e5\uff0c\u6700\u957f\u53cd\u94fe=\u6700\u5c0f\u94fe\u8986\u76d6\uff0c\u8fd9\u91cc\u6700\u5c0f\u94fe\u8986\u76d6\u53ef\u4ee5\u770b\u4f5c\u53ef\u4ee5\u9009\u91cd\u590d\u70b9\u7684\u6700\u5c0f\u94fe\u8986\u76d6\n\n\u5177\u4f53\u8bc1\u660e\u6bd4\u8f83\u590d\u6742\uff0c\u8fd9\u91cc\u8c08\u8c08\u6211\u81ea\u5df1\u7684\u7406\u89e3\uff0c\u53ef\u4ee5\u91c7\u7528\u53cd\u8bc1\u6cd5\uff0c\u8bc1\u660e\u5982\u679c\u4e0d\u662f\u6700\u5c0f\u94fe\u8986\u76d6\u7b54\u6848\u5c06\u4e0d\u5408\u6cd5\n\n\u9996\u5148\u53ef\u4ee5\u770b\u51fa\uff0c\u6700\u7ec8\u7684\u65b9\u6848\u4f1a\u662f\u5728\u6bcf\u6761\u94fe\u4e2d\u9009\u62e9\u4e00\u4e2a\u70b9\u6784\u6210\u65b9\u6848\uff0c\u5982\u4f55\u4fdd\u8bc1\u7684\u6b63\u786e\u6027\u5462\n\n1.\u4e0d\u80fd\u5728\u4e00\u6761\u94fe\u4e2d\u9009\u4e24\u4e2a\u70b9\n\n\u4e00\u6761\u94fe\u4e2d\u7684\u4e24\u4e2a\u70b9\u4e00\u5b9a\u5177\u6709\u53ef\u8fbe\u5173\u7cfb\uff0c\u4e0d\u5408\u6cd5\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/lby7c5th.png)\n\n\u5982\u6b64\u79cd\u60c5\u51b5\u6253\u7eff\u53c9\u7684\u4e24\u4e2a\u70b9\u4e0d\u53ef\u4ee5\u540c\u65f6\u9009\n\n2.\u4e0d\u80fd\u4e0d\u662f\u6700\u5c0f\u94fe\u8986\u76d6\n\n\u5982\u679c\u4e0d\u662f\u6700\u5c0f\u94fe\u8986\u76d6\uff0c\u5219\u56fe\u4e2d\u4e00\u5b9a\u5b58\u5728\u4e24\u6761\u94fe\u53ef\u4ee5\u9996\u5c3e\u76f8\u63a5\u62fc\u6210\u4e00\u6761\u94fe\uff0c\u8fd9\u65f6\u5728\u4e24\u6761\u94fe\u4e2d\u7684\u70b9\u5c31\u4f1a\u51b2\u7a81\uff0c\u6545\u4e5f\u4e0d\u4f1a\u6210\u4e3a\u7b54\u6848\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/gurjxscq.png)\n\n\u5982\u6b64\u79cd\u60c5\u51b5\u5982\u679c\u7528\u84dd\u8fb9\u628a\u4e24\u6761\u94fe\u62fc\u8d77\u6765\uff0c\u4e24\u4e2a\u9009\u4e2d\u7684\u70b9\u5c31\u4f1a\u4e0d\u5408\u6cd5\n\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u6211\u4eec\u5c06\u95ee\u9898\u8f6c\u53d8\u6210\u4e86\u6c42 DAG \u7684\u6700\u5c0f\u94fe\u8986\u76d6\u95ee\u9898\n\n\u56e0\u4e3a\u53ef\u4ee5\u8d70\u91cd\u70b9\uff0c\u53ef\u4ee5\u7528 Floyd \u4f20\u9012\u95ed\u5305\uff0c\u628a\u6240\u6709\u53ef\u4ee5\u5230\u8fbe\u7684\u70b9\u8fde\u8fb9\uff0c\u5982\u679c\u8d70\u4e86\u91cd\u70b9\u5c31\u53ef\u4ee5\u76f8\u5f53\u4e8e\u8df3\u8fc7\u8d70\u8fc7\u7684\u70b9\n\n\u8fd9\u6837\u4e00\u6765\u53c8\u8f6c\u5316\u6210\u4e86\u6c42 DAG \u7684\u6700\u5c0f\u8def\u5f84\u8986\u76d6\u95ee\u9898\n\n\u6700\u5c0f\u8def\u5f84\u8986\u76d6\u95ee\u9898\u600e\u4e48\u89e3\u5462\n\n\u8003\u8651\u628a\u6bcf\u4e2a\u70b9\u62c6\u70b9\uff0c\u4f7f\u4e4b\u6210\u4e3a\u4e8c\u5206\u56fe\uff0c\u8fd9\u91cc\u91c7\u7528 Dinic \u89e3\u51b3\u95ee\u9898\n\n\u5bf9\u4e8e\u539f\u56fe\u4e0a\u7684\u8fb9 $u\\to v$ \uff0c\u7531\u539f\u56fe $u$ \u70b9\u7684\u51fa\u70b9\u8fde\u5411\u539f\u56fe $v$ \u7684\u5165\u70b9\uff0c\u8dd1\u7f51\u7edc\u6d41\uff0c\u6bcf\u4e2a\u70b9\u7684\u5165\u70b9\u4ece $s$ \u8fde\u4e00\u6761\u6d41\u91cf\u4e3a 1 \u7684\u8fb9\uff0c\u51fa\u70b9\u5411 $t$ \u8fde\u4e00\u6761\u6d41\u91cf\u4e3a\u4ec0\u4e48 1 \u7684\u8fb9\n\n\u539f\u56fe\u8fb9\u5bf9\u5e94\u7684\u8fb9\u6709\u6d41\u91cf\u8bf4\u660e\u539f\u56fe\u4e0a\u8fd9\u4e24\u4e2a\u70b9\u88ab\u8fde\u4e86\u8d77\u6765\uff0c\u5c31\u53ef\u4ee5\u88ab\u7406\u89e3\u662f\u4e24\u6761\u8def\u5f84\u88ab\u5408\u5e76\uff0c\u8fd9\u6837\u8def\u5f84\u603b\u6570 -1\n\n\u8d77\u521d\u6ca1\u5408\u5e76\u65f6\u8def\u5f84\u603b\u6570\u662f $n$ \uff0c\u4e5f\u5c31\u662f\u8bf4\n\nDAG\u6700\u5c0f\u8def\u5f84\u8986\u76d6 $=$ \u603b\u70b9\u6570 $-$ \u5bf9\u5e94\u4e8c\u5206\u56fe\u7684\u6700\u5927\u6d41\n\n\u81f3\u6b64\u95ee\u9898 1 \u5df2\u7ecf\u88ab\u6211\u4eec\u89e3\u51b3\n\n#### \u95ee\u98983\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u627e\u5230\u53ef\u80fd\u6210\u4e3a\u7b54\u6848\u7684\u70b9\uff0c\u7136\u540e\u518d\u4ece\u91cc\u9762\u6784\u9020\u65b9\u6848\n\n\u4ec0\u4e48\u6837\u7684\u70b9\u53ef\u80fd\u6210\u4e3a\u7b54\u6848\uff1f\n\n\u5982\u679c\u4e00\u4e2a\u70b9\uff0c\u5220\u53bb\u81ea\u8eab\uff0c\u5e76\u4e14\u5220\u53bb\u539f\u56fe\u4e0a\u548c\u5b83\u6709\u8fb9\u7684\u6240\u6709\u70b9\uff0c\u89e3\u51b3\u95ee\u9898 1 \uff0c\u5982\u679c\u7b54\u6848\u53ea\u51cf\u5c11\u4e86 1 \uff0c\u90a3\u4e48\u8fd9\u4e2a\u70b9\u5c31\u6709\u53ef\u80fd\u6210\u4e3a\u7b54\u6848\n\n\u7b54\u6848\u53ea\u51cf\u5c11\u4e00\u610f\u601d\u662f\u5f53\u524d\u70b9\u53ea\u5bf9\u4e00\u6761\u94fe\u6709\u5f71\u54cd\uff0c\u4e0d\u5b58\u5728\u5f53\u524d\u70b9\u5904\u5728\u4e24\u6761\u6216\u8005\u591a\u6761\u94fe\u4ea4\u70b9\u5904\u7684\u60c5\u51b5\n\n#### \u95ee\u98982\n\n\u95ee\u9898 3 \u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u7b5b\u9009\u51fa\u4e86\u6240\u6709\u53ea\u4f1a\u5f71\u54cd\u4e00\u6761\u94fe\u7684\u70b9\uff0c\u90a3\u4e48\u65e2\u7136\u6211\u4eec\u8981\u4ece\u6bcf\u6761\u94fe\u4e2d\u9009\u4e00\u4e2a\uff0c\u6211\u4eec\u5c31\u679a\u4e3e\uff0c\u6bcf\u5230\u4e00\u4e2a\u53ef\u80fd\u6210\u4e3a\u7b54\u6848\u7684\u70b9\uff0c\u5c31\u628a\u5b83\u52a0\u5230\u7b54\u6848\u91cc\uff0c\u5e76\u4e14\u6807\u8bb0\u4e0b\u5b83\u6240\u5728\u7684\u94fe\u4ee5\u540e\u4e0d\u80fd\u518d\u9009\u70b9\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u6210\u529f\u89e3\u51b3\u4e86\u4e09\u4e2a\u95ee\u9898\n\n### \u8d34\u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <algorithm>\n#include <queue>\n#define rint register int\n#define lint long long\n#define ldouble long double\nusing namespace std;\ninline int read(){\n\tchar c;int res=0,f=1;\n\twhile(c=getchar(),!isdigit(c))if(c=='-')f*=-1;\n\twhile(isdigit(c))res=res*10+c-'0',c=getchar();\n\treturn f*res;\n}\nconst int N=1e3+5,INF=1e9;\nint hed[N<<3],nxt[N<<3],ver[N<<3],f[N<<3],hf[N<<3],cnt=1;\ninline void inst(int u,int v,int _f){\n\tver[++cnt]=v;\n\tnxt[cnt]=hed[u];\n\thed[u]=cnt;\n\tf[cnt]=hf[cnt]=_f;//hf\u7528\u6765\u5b58\u521d\u59cb\u7684\u6d41\u91cf\uff0c\u7528\u4e8e\u6062\u590d \n\tver[++cnt]=u;\n\tnxt[cnt]=hed[v];\n\thed[v]=cnt;\n\tf[cnt]=hf[cnt]=0;\n}\nint n,m,s,t,ans0;\nbool ex[N],g[N][N],flg[N];\nint ans1[N],ans2[N];\nint res,dep[N];\ninline bool BFS(){\n\tmemset(dep,0,sizeof dep);\n\tdep[s]=1;\n\tqueue<int> que;\n\tque.push(s);\n\twhile(!que.empty()){\n\t\tint u=que.front();\n\t\tque.pop();\n\t\tfor(rint i=hed[u];i;i=nxt[i]){\n\t\t\tint v=ver[i];\n\t\t\tif(!f[i]||!ex[v]||dep[v])continue;\n\t\t\tdep[v]=dep[u]+1;\n\t\t\tque.push(v);\n\t\t}\n\t}\n\tif(!dep[t])return false;\n\telse return true;\n}\nint DFS(int u,int incf){\n\tint out=0;\n\tfor(rint i=hed[u];i;i=nxt[i]){\n\t\tint v=ver[i];\n\t\tif(!f[i]||!ex[v]||dep[v]!=dep[u]+1)continue;\n\t\tint upd=DFS(v,min(incf,f[i]));\n\t\tf[i]-=upd;\n\t\tf[i^1]+=upd;\n\t\tout+=upd;\n\t\tincf-=upd;\n\t}\n\tif(u==t)return incf;\n\telse return out;\n}\ninline int Dinic(){//Dinic\u8dd1\u4e8c\u5206\u56fe \n\tres=0;\n\twhile(BFS())\n\t\tres+=DFS(s,INF);\n\treturn res;\n}\ninline int cg(int u,bool tp){\n\tint sum=1;\n\tex[u<<1]=ex[u<<1|1]=tp;\n\tfor(rint i=1;i<=n;++i)\n\t\tif(g[u][i]||g[i][u]){\n\t\t\tex[i<<1]=ex[i<<1|1]=tp;\n\t\t\t++sum;\n\t\t}\n\treturn sum;\n}\nint main(){\n\tn=read();\n\tm=read();\n\tfor(rint i=1;i<=m;++i){\n\t\tint u,v;\n\t\tu=read();\n\t\tv=read();\n\t\tg[u][v]=true;\n\t}\n\tfor(rint k=1;k<=n;++k)//Floyd\u4f20\u9012\u95ed\u5305 \n\t\tfor(rint a=1;a<=n;++a)\n\t\t\tfor(rint b=1;b<=n;++b)\n\t\t\t\tif(g[a][k]&&g[k][b])\n\t\t\t\t\tg[a][b]=true;\t\t\t\n\ts=1;\n\tt=(n+1)<<1;\n\tex[s]=ex[t]=true;//ex->exist \u6807\u8bb0\u5f53\u524d\u70b9\u662f\u5426\u6ca1\u6709\u88ab\u5220\u9664 \n\tfor(rint i=1;i<=n;++i){\n\t\tex[i<<1]=ex[i<<1|1]=true;//i<<1\u662f\u5165\u70b9 i<<1|1\u662f\u51fa\u70b9 \n\t\tfor(rint j=1;j<=n;++j)\n\t\t\tif(g[i][j])\n\t\t\t\tinst(j<<1,i<<1|1,1);//\u8fde\u8fb9 \n\t\tinst(s,i<<1,1);\n\t\tinst(i<<1|1,t,1);\n\t}\n\tans0=Dinic();\n\tprintf(\"%d\\n\",n-ans0);\n\tfor(rint i=1;i<=n;++i){\n\t\tmemcpy(f,hf,sizeof f);//\u628a\u56fe\u6062\u590d\u5230\u539f\u72b6\u6001 \n\t\tint _n=n-cg(i,false);//cg\u7528\u6765\u5220\u70b9\u6216\u8005\u6062\u590d\u70b9\uff0c\u8fd4\u56de\u5220\u6389\u7684\u70b9\u6570 \n\t\tif(n-ans0==_n-Dinic()+1)//\u5982\u679c\u65b0\u7684\u7b54\u6848\u53ea\u6bd4\u539f\u7b54\u6848\u5c0f1 \n\t\t\tans2[i]=1;\n\t\tcg(i,true);\n\t}\n\tfor(rint i=1;i<=n;++i)\n\t\tif(!flg[i]&&ans2[i]){//\u5f53\u524d\u70b9\u6ca1\u6709\u88ab\u6807\u8bb0\u5e76\u4e14\u53ef\u80fd\u6210\u4e3a\u7b54\u6848 \n\t\t\tans1[i]=1;\n\t\t\tflg[i]=true;\n\t\t\tfor(rint j=1;j<=n;++j)\n\t\t\t\tif(g[i][j]||g[j][i])//\u6807\u8bb0\u6240\u5728\u94fe \n\t\t\t\t\tflg[j]=true;\n\t\t}\n\tfor(rint i=1;i<=n;++i)\n\t\tprintf(\"%d\",ans1[i]);\n\tprintf(\"\\n\");\n\tfor(rint i=1;i<=n;++i)\n\t\tprintf(\"%d\",ans2[i]);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1629385525,
        "uid": 206258,
        "name": "SDNetFriend",
        "ccfLevel": 7,
        "title": "P4298\u9898\u89e3"
    },
    {
        "content": "## \u4e24\u4e2a\u505a\u6cd5\n\n### 1.\u4e8c\u5206\u56fe\u5f0f\n\n\u6211\u89c9\u5f97\u5e94\u8be5\u8bc4\u9ed1 \u771f\u7684\n\n\u8fd9\u4e2a\u601d\u8def\u8f6c\u6362\u633a\u795e\u5947\u7684\n\n\u8fd9\u91cc\u4e0d\u4f1a\u591a\u8bb2 \u9898\u89e3\u7406\u8bba\u8fc7\u7a0b\u7c89\u5154\u8bf4\u5f97\u5f88\u8be6\u7ec6 \u4ee3\u7801Cyhlnj\u6bd4\u8f83\u597d\u770b \u601d\u8defzxyoi\u8f83\u6e05\u6670\n\n\u6211\u53ea\u8bb2\u4e00\u4e0b\u4ee3\u7801\u4e2d\u6bd4\u8f83\u5bb9\u6613\u770b\u4e0d\u61c2\u7684\u5730\u65b9\n\n\u5148floyd\u4f20\u9012\u95ed\u5305\u4e00\u4e0b\u5f97\u5230\u6bcf\u4e2a\u70b9\u80fd\u5230\u7684\u70b9\u96c6\n\n\u7b2c\u4e00\u95ee Dilworth\u5b9a\u7406 \u6700\u957f\u53cd\u94fe=\u6700\u5c0f\u94fe\u8986\u76d6\n\n\u7b2c\u4e8c\u95ee \u6700\u957f\u53cd\u94fe=\u6700\u5927\u72ec\u7acb\u96c6=n-\u6700\u5c0f\u8986\u76d6\u70b9\u96c6=\u6700\u5927\u5339\u914d\n\n\u8fd9\u4e2a\u53ef\u4ee5\u770b\u7c89\u5154+ [\u4e8c\u5206\u56fe\u7684\u6700\u5c0f\u9876\u70b9\u8986\u76d6 \u6700\u5927\u72ec\u7acb\u96c6 \u6700\u5927\u56e2](https://www.cnblogs.com/jianglangcaijin/p/6035945.html)\n\n\u9762\u5bf9\u75be\u98ce\u5427 \u6ca1\u5b66\u8fc7\u8fd9\u4e2a\u53ef\u80fd\u8981\u534ah+\n\n\u7b2c\u4e09\u95ee \u53bb\u6389\u5f53\u524d\u70b9i\u4e0e\u5176**\u80fd\u5230\u8fbe**\u4e0e**\u80fd\u88ab\u5230\u8fbe**\u7684\u70b9\u5224\u65ad\u4e00\u4e0b\u5269\u4e0b\u7684\u56fe\u7684\u6700\u957f\u53cd\u94fe\u662f\u5426\u7b49\u4e8e\u539f\u56fe\u6700\u957f\u53cd\u94fe-1\n\ncode:\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint match[110],to[110]; //\u524d\u9a71 \u540e\u7ee7\nbool s[110],t[110]; //\u51fa \u5165\nbool mp[110][110]; //\u5168\u56fe\nbool e[110][110]; //\u5269\u4f59\u56fe\nint ban[110]; //\u5220\u7684\u70b9\nint vis[110]; //\u8be5\u8f6e\u589e\u5e7f\u5230\u8fbe\u8fc7\u7684\u70b9\nint n,m,ind,ans; //n m \u8f6e\u6570 \u7b54\u6848\nbool find(int u){\n\tif(ban[u]) return 0;\n\tfor(int i=1;i<=n;i++)\n\tif(e[u][i]&&ban[i]==0&&vis[i]!=ind){\n\t\tvis[i]=ind;\n\t\tif(match[i]==0||find(match[i])){\n\t\t\tmatch[i]=u;\n\t\t\tto[u]=i;\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\nvoid dfs(int u){ //\u6a21\u62df\u627e\u6700\u5c0f\u8986\u76d6\u70b9\u96c6\u8fc7\u7a0b\n\tif(s[u]) return;\n\ts[u]=true;\n\tfor(int i=1;i<=n;i++)\n\tif(e[u][i]&&t[i]==0){\n\t\tt[i]=true;\n\t\tdfs(match[i]);\n\t}\n}\nint main(){\n\tint x,y;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tmp[x][y]=true; //\u5355\u5411\u8fb9\n\t}\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=n;j++)\n\tfor(int k=1;k<=n;k++)\n\tmp[j][k]|=mp[j][i]&mp[i][k]; //\n\tfor(int i=1;i<=n;i++)\n\tfor(int j=1;j<=n;j++)\n\te[i][j]=mp[i][j]; ans=n;\n\tfor(ind=1;ind<=n;ind++) \n\tans-=find(ind);\n\tprintf(\"%d\\n\",ans);\n\tfor(int i=1;i<=n;i++)\n\tif(to[i]==0) dfs(i);\n\tfor(int i=1;i<=n;i++)\n\tprintf(\"%d\",s[i]&&!t[i]);//\u8fd9\u91cc\u5df2\u7ecf\u53d6\u53cd \u539f\u6765\u6c42\u6700\u5c0f\u70b9\u96c6\u8986\u76d6\u65f6\u662f!s[i]||t[i] \u5373\u5de6\u7aef\u6807\u8bb0\u8fc7\u7684\u70b9\u4e0e\u53f3\u7aef\u672a\u6807\u8bb0\u7684\u70b9\n\tprintf(\"\\n\");\n\tint can=0,sum=0;\n\tfor(int i=1;i<=n;i++){\n\t\tmemset(e,0,sizeof(e));\n\t\tmemset(to,0,sizeof(to));\n\t\tmemset(ban,0,sizeof(ban));\n\t\tmemset(match,0,sizeof(match));\n\t\tint res=0;\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(mp[j][i]||mp[i][j]||i==j) ban[j]=1; //\u53ef\u8fbe\u4e0e\u53ef\u88ab\u8fbe\u7edf\u7edf\u5220\u6389\n\t\t\telse res++;\n\t\t}\n\t\tfor(int j=1;j<=n;j++)\n\t\tfor(int k=1;k<=n;k++)\n\t\tif(ban[j]==0&&ban[k]==0) \n\t\te[j][k]=mp[j][k]; //\u5220\u6389\u540e\u7684\u56fe\n\t\tfor(int j=1;j<=n;j++) \n\t\tif(ban[j]==0){\n\t\t\tind++;\n\t\t\tres-=find(j);\n\t\t}\n\t\tprintf(\"%d\",res==ans-1); //res+1=ans\n\t}\n}\n```\n\n---\n### 2.\u7f51\u7edc\u6d41\n\u5947\u5999\u7684\u65b9\u6cd5\u589e\u52a0\u4e86\uff01\n\n\u62c6\u4e2a\u70b9 $X_{out}$\u8fde$Y_{in}$ S\u8fde$X_{out}$ $Y_{in}$\u8fdeT \u6d41\u91cf\u5168\u4e3a1 ans=n-maxflow!\n\n\u4ee3\u7801\u5eb7\u5eb7[\u8fd9\u4e2a](https://www.cnblogs.com/GXZlegend/p/6476115.html)\n\n\u5176\u5b9e\u8ddf\u6700\u5c0f\u5272\u6ca1\u5173\u7cfb\u2467 \u4e3a\u4ec0\u4e48\u8bf4\u6700\u5c0f\u5272\n\n\u8fd9\u73a9\u610f\u4e2d\u95f4\u7684\u8fb9\u6d41\u91cf\u4e3a1 \u6700\u5c0f\u5272\u4e5f\u662f\u795e\u5947\n\n\u867d\u7136\u5bf9\u4e8e\u8fd9\u4e2a\u9898\u56e0\u4e3am>=n\u53ef\u4ee5\n\n\u4f46\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u6700\u5c0f\u94fe\u8986\u76d6\u7684\u8fc7\u7a0b:\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/c5v7t197.png)\n\n\u770b\u7740\u8fd9\u4e2a\u56fe \u4f60\u53d1\u73b0\u4e86\u4ec0\u4e48 \n\n~~\u6ca1\u9519 \u4f60\u4ec0\u4e48\u4e5f\u53d1\u73b0\u4e0d\u4e86~~\n\n\u6211\u4eec\u7814\u7a76\u6d41\u91cf\u7a76\u7adf\u4f1a\u5bf9\u56fe\u4ea7\u751f\u4ec0\u4e48\u5f71\u54cd\n\n\u53ef\u4ee5\u770b\u51fa \u6211\u4eec$X_{out}$\u4e0e$Y_{in}$\u7684\u8fb9\u6d411\u4e2a\u5355\u4f4d(\u5c31\u6ee1\u4e86) \u76f8\u5f53\u4e8e\u539f\u56feX\u6d41\u6c34\u5230Y \u5373\u6807\u8bb0Y\u4e3a\u4e0d\u53ef\u7528\n\n\u800c\u6bcf\u4e2a$X_{out}$\u53ea\u6709\u4e00\u4e2a\u6d41\u662f\u9650\u5236\u5b83\u7684\u6700\u5c0f\u94fe\u8986\u76d6 \u53ea\u80fd\u6d41\u4e00\u4e2a\u513f\u5b50\u5373\u4e00\u6761\u94fe\n\n\u5f88\u5bb9\u6613\u53d1\u73b0 \u6211\u4eec\u8fd9\u6837\u505a\u4f1a\u5bfc\u81f4\u9664\u4e86\u6bcf\u4e2a\u94fe\u5934\u6ca1\u6709\u6d41 \u5176\u4ed6\u70b9\u90fd\u6709\u6d41\n\n\u5f53\u6211\u4eec\u505a\u5230\u6700\u5927\u6d41\u65f6 \u5b8c\u6210\u4e86\u94fe\u5934\u6700\u5c11 \u5373\u6700\u5c0f\u94fe\u8986\u76d6 \u90a3\u4e48ans=n-maxflow\n\n\u6ce8\u610f\u8fd9\u91cc\u662f\u6700\u957f\u53cd\u94fe=\u6700\u5c0f\u94fe\u8986\u76d6 \u8fd9\u91cc\u6c42\u7684\u662f\u94fe\u8986\u76d6\u7684\u94fe\u5934\u800c\u975e\u6700\u957f\u53cd\u94fe\u65b9\u6848\n\n\u7b2c\u4e09\u95ee\u8fd8\u662f\u90a3\u6837 \u73b0\u5728\u5c31\u6c42\u4e00\u4e2a\u7b2c\u4e8c\u95ee\n\n---\n### \u5947\u5999up!\n\u8fd8\u6709\u4e00\u79cd\u7b2c\u4e8c\u95ee\u7684\u5199\u6cd5\n\n\u8fd9\u662f\u67d0csp500+ \u7701\u961f\u9884\u5b9asyh\u9760\u76f4\u89c9\u60f3\u51fa\u6765\u7684\u5947\u5999\u505a\u6cd5\n\n\u6211\u4eec\u5148\u5904\u7406\u7b2c\u4e09\u95ee \u518d\u505a\u7b2c\u4e8c\u95ee\n\n\u73b0\u5728\u6211\u4eec\u77e5\u9053\u4e86\u54ea\u4e9b\u70b9\u53ef\u7528\u4f5c\u796d\u575b\u4e86\n\n\u6211\u4eec\u66b4\u529b\u627e\u5230\u7b2c\u4e00\u4e2a\u53ef\u7528\u70b9 \u7136\u540e\u5220\u6389\u5b83\u80fd\u8fbe\u5230\u548c\u80fd\u88ab\u8fbe\u5230\u7684\u70b9 \u52a0\u5165\u65b9\u6848\n\n\u7136\u540e\u518d\u627e\u4e0b\u4e00\u4e2a\u53ef\u7528\u70b9 \u91cd\u590d\u64cd\u4f5c\n\n\u76f4\u5230\u6ca1\u6709(\n\n\u8fd9\u5c31\u662f\u65b9\u6848\uff01\n\n\u4e0b\u9762\u662f\u6211\u7684\u8bc1\u660e:\n![](https://cdn.luogu.com.cn/upload/image_hosting/actibzpq.png)\n\n\u5047\u8bbe\u6700\u957f\u53cd\u94fe\u70b9\u6570\u4e3a3 \u7b2c\u4e00\u4e2a\u9009\u5230\u7684\u53ef\u7528\u70b9\u4e3aa \u90a3\u4e48\u5fc5\u6709\u4e00\u7ec4\u7b54\u6848a,b,c\n\n\u5728\u5220\u6389a\u4e0e\u5176\u80fd\u8fbe\u5230\u548c\u80fd\u88ab\u8fbe\u5230\u7684\u70b9\u540e \u82e5\u4e0b\u4e00\u4e2a\u9009\u7684\u53ef\u7528\u70b9\u4e0d\u662fb \u5047\u8bbe\u4e3ad\n\n\u90a3\u4e48d\u5fc5\u5728b\u6216c\u7684\u8986\u76d6\u533a\u57df\u5185 \n\n1. \u82e5d\u5728b\u5185 \u5e94\u6709b->d \u56e0\u4e3ac\u6d41\u4e0d\u5230b \u90a3\u4e48 d->b \u51fa\u73b0\u73af \u4e0d\u53ef\u80fd\n\n2. \u82e5d\u5728c\u5185 \u5e94\u6709c->d \u82e5d->b \u5219c->b \u90a3\u4e48b\u4e0d\u53ef\u5728\u6b64\u65b9\u6848\u5185 \u77db\u76fe\n\n\u4e5f\u5c31\u662f\u8bf4 \u5bf9\u4e8e\u4e00\u4e2a\u5df2\u786e\u5b9a\u7684\u796d\u575b \u6211\u4eec\u53ea\u6709\u4e00\u79cd\u65b9\u6848\u4e0e\u5b83\u5339\u914d \u5373\u4e0a\u8ff0\u505a\u6cd5\u6b63\u786e\n\n\u8fd9\u6837\u610f\u5473\u7740\u65b9\u6848\u4e92\u4e0d\u76f8\u4ea4 \u53ef\u7528\u70b9\u603b\u6570\u4e3ak*ans k\u4e3a\u65b9\u6848\u6570 ans\u4e3a\u6700\u957f\u53cd\u94fe\u5927\u5c0f\n\n\u7531\u8fd9\u4e2a\u6027\u8d28\u4e5f\u8bb8\u53ef\u4ee5\u51fa\u4e00\u4e0b\u5947\u602a\u7684\u9898\uff1f\n\n\u8bf4\u771f\u7684\u8fd9\u4e2a\u8fc7\u7a0b\u5f88\u50cf\u7b2c\u4e09\u95ee \u53ea\u662f\u9700\u8981\u9884\u77e5\u53ef\u7528\u70b9\n\ncode: \u6765\u81ea@suyiheng\n```cpp\n//\u524d\u9762\u4e0e2\u4e00\u6837 \u7701\u7565\n\tfor(int i=1; i<=n; i++)k[i]=check(i);\n\tfor(int i=1; i<=n; i++) {\n\t\tb[i]=k[i];\n\t\tfor(int j=1; j<i; j++) {\n\t\t\tif(f[i][j]&&b[j]) {\n\t\t\t\tb[i]=0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(f[j][i]&&b[j]) {\n\t\t\t\tb[i]=0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1; i<=n; i++) {\n\t\tif(b[i])printf(\"1\");\n\t\telse printf(\"0\");\n\t}\n\tprintf(\"\\n\");\n\tfor(int i=1; i<=n; i++) {\n\t\tif(k[i])printf(\"1\");\n\t\telse printf(\"0\");\n\t}\n\tprintf(\"\\n\");\n```\n\n\u8fd9\u4e2a\u4e5f\u53ef\u4ee5\u66ff\u6362\u4e8c\u5206\u56fe\u7684\u7b2c\u4e8c\u95ee\u5566\n\n\u8fd9\u6837\u505a\u6cd5\u5c31\u4eb2\u6c11\u591a\u4e86~",
        "postTime": 1591970709,
        "uid": 90869,
        "name": "tylon2006",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4298 \u3010[CTSC2008]\u796d\u7940\u3011"
    }
]