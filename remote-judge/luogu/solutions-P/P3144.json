[
    {
        "content": "\u611f\u89c9\u697c\u4e0a\u7528\u5e76\u67e5\u96c6\u7684\u9898\u89e3\u6ce8\u91ca\u592a\u5c11\uff0c\u770b\u8d77\u6765\u597d\u5403\u529b\uff0c\u8d81\u81ea\u5df1\u660e\u767d\u7ed9\u5927\u5bb6\u8bb2\u8bb2\u81ea\u5df1\u7684\u5e76\u67e5\u96c6\u505a\u6cd5...\n\n\u9996\u5148\u8bfb\u5165\u76f8\u8fde\u7684\u70b9\uff0c\u4f46\u8fd9\u91cc\u4e0d\u80fd\u76f4\u63a5\u5408\u5e76\u5efa\u7acb\u5e76\u67e5\u96c6\uff0c\u56e0\u4e3a\u5e76\u67e5\u96c6\u6ca1\u6709Ctrl+Z\u64cd\u4f5c(\u5c31\u662f\u65e0\u6cd5\u5206\u79bb\u4e24\u4e2a\u5df2\u7ecf\u5408\u5e76\u7684\u96c6\u5408)\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u5148\u5b58\u8d77\u6765\uff0c\u7b49\u6240\u6709\u7684\u8be2\u95ee\u90fd\u8bfb\u5165\u4e4b\u540e\uff0c\u5012\u7740\u8fdb\u884c\u64cd\u4f5c\u3002\n\n\u6211\u4eec\u8003\u8651\u600e\u6837\u5012\u7740\u64cd\u4f5c\uff1a\n\n\u9996\u5148\uff0c\u8bfb\u5165\u6570\u636e\uff0c\u628a\u6240\u6709\u7684\u6570\u636e\u90fd\u5b58\u8d77\u6765\uff0c\u5176\u4e2dx[i],y[i]\u8868\u793a\u7b2ci\u6b21\u8bfb\u5165\u7684\u5173\u7cfb\uff0corder[i]\u8868\u793a\u7b2ci\u6b21\u8bfb\u5165\u7684\u6570\u662f\u591a\u5c11\uff0css[i]\u8868\u793ai\u662f\u5426\u5728\u5e76\u67e5\u96c6\u91cc\u9762\uff0c\u5982\u679c\u5b58\u5728\uff0c\u5219\u4e3a0\uff0c\u4e0d\u5b58\u5728\u5219\u4e3a1\u3002\n\n\u4e4b\u540e\uff0c\u628a\u6240\u6709\u6ca1\u6709\u53bb\u6389\u7684\u70b9\u4e4b\u95f4\u7684\u5173\u7cfb\u90fd\u52a0\u5230\u5e76\u67e5\u96c6\u91cc\u9762\uff0c\u4f46\u662f\u5728\u8fd9\u4e2a\u9898\u770b\u6765\uff0c\u5e94\u8be5tan90\uff0c\u56e0\u4e3a\u8bfb\u5165\u8282\u70b9\u4e2a\u6570N\u4e4b\u540e\uff0c\u5c31\u8fdb\u884c\u4e86N\u6b21\u5173\u95ed\u64cd\u4f5c\uff0c\u4f46\u662f\u4e3a\u4e86\u4ee3\u7801\u7684\u666e\u9002\u6027\uff0c\u6211\u4fdd\u7559\u4e86\u8fd9\u90e8\u5206\u4ee3\u7801\u3002\uff08\u5176\u5b9e\u662f\u5f00\u59cb\u6ca1\u6ce8\u610f\uff0c\u4e00\u4e9b\u9898\u89e3\u624d\u53d1\u73b0\u8fd9\u91cc\u53ef\u4ee5\u5220\u6389...\uff09\n\n\u63a5\u7740\uff0c\u5012\u7740\u5904\u7406\u8bfb\u5165\u7684\u8be2\u95ee\u3002\u4ece\u7b2ci=n\u6b21\u5f00\u59cb\uff0c\u628a\u4e0e\u70b9order[i]\u6709\u5173\u7684\u8fb9\u8bfb\u5165\uff0c\u5408\u5e76\u5e76\u67e5\u96c6\uff0c\u4e4b\u540e\u5728\u628a\u548c\u8be5\u70b9\u6709\u5173\u7684\u6240\u6709\u7684\u53ef\u52a0\u5165\u7684\u8fb9\u90fd\u52a0\u5165\u5e76\u67e5\u96c6\u4ee5\u540e\uff0c\u5224\u65ad\u5e76\u67e5\u96c6\u4e2d\u96c6\u5408\u7684\u4e2a\u6570\uff0c\u5e76\u8bb0\u5f55\u5728ans[i]\u4e2d\uff0c\u7136\u540ei--\uff0c\u91cd\u590d\u4ee5\u4e0a\u6b65\u9aa4\u3002\n\n\u6700\u540e\uff0c\u4ece1\u5f00\u59cb\u5230n-1\uff0c\u5224\u65adans\u662f\u5426\u4e3a1\uff0c\u5982\u679c\u4e3a1\uff0c\u8bf4\u660e\u6240\u6709\u7684\u70b9\u90fd\u662f\u8054\u901a\u7684\uff0c\u8f93\u51faYES\uff0c\u5426\u5219\u8f93\u51faNO\uff0c\u7b2cn\u6b21\u8be2\u95ee\u7684\u65f6\u5019\uff0c\u6240\u6709\u7684\u70b9\u90fd\u5df2\u7ecf\u4ece\u5e76\u67e5\u96c6\u5220\u9664\uff0c\u56e0\u6b64\u4e00\u5b9a\u662f\u8054\u901a\u7684\uff0c\u8f93\u51faYES\u3002\n\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint n,m,g[3001],x[3001],y[3001],order[3001],ss[3001],ans[3001],w;\n//x[i],y[i]\u8868\u793a\u7b2ci\u6b21\u8bfb\u5165\u7684\u5173\u7cfb\uff0corder[i]\u8868\u793a\u7b2ci\u6b21\u8bfb\u5165\u7684\u6570\u662f\u591a\u5c11\uff0css[i]\u8868\u793ai\u662f\u5426\u5728\u5e76\u67e5\u96c6\u91cc\u9762\uff0c\u5982\u679c\u5b58\u5728\uff0c\u5219\u4e3a0\uff0c\u4e0d\u5b58\u5728\u5219\u4e3a1\n//g[i]\u5b58\u50a8\u5e76\u67e5\u96c6\uff0cans[i]\u5b58\u50a8\u7b2ci\u6b21\u8be2\u95ee\u65f6\u5e76\u67e5\u96c6\u4e2d\u6709\u591a\u5c11\u4e2a\u96c6\u5408\u3002\nint find(int u)\n{\n    if(g[u]!=u)g[u]=find(g[u]);\n    return g[u];\n}\nvoid merg(int u,int v)\n{\n    u=find(u);\n    v=find(v);\n    if(u==v)return;\n    g[u]=v;\n}\nint main()\n{\n    memset(ss,0,sizeof(ss));\n    scanf(\"%d%d\",&n,&m);\n    for(int j=1;j<=n;j++)g[j]=j;\n    for(int i=1;i<=m;i++)\n        scanf(\"%d%d\",&x[i],&y[i]);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&w);\n        order[i]=w;\n        ss[w]=1;\n    }\n```\n/\\*\n//\u5982\u679c\u9898\u76ee\u4e2d\u5173\u95ed\u519c\u573a\u7684\u4e2a\u6570\u5c0f\u4e8eN\u7684\u65f6\u5019\u8981\u52a0\u4e0a\u8fd9\u6bb5\u4ee3\u7801\n\n    for(int i=1;i<=m;i++)\n\n        if(ss[x[i]]==0&&ss[y[i]]==0)\n\n            merg(x[i],y[i]);\n\n\\*/\n```cpp\n    for(int i=n;i>0;i--)\n    {\n        ss[order[i]]=0;\n        for(int j=1;j<=m;j++)\n            if(ss[x[j]]==0&&ss[y[j]]==0)\n                merg(x[j],y[j]);\n        ans[n]=0;\n        for(int j=1;j<=n;j++)\n            if(find(j)==j&&ss[j]==0)\n                ans[i]++;\n    }\n    for(int i=1;i<=n-1;i++)\n        if(ans[i]==1)printf(\"YES\\n\");\n        else printf(\"NO\\n\");\n    printf(\"YES\");\n    return 0;\n}\n```",
        "postTime": 1505885493,
        "uid": 39740,
        "name": "sdxjzsq",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3144 \u3010[USACO16OPEN]\u5173\u95ed\u519c\u573aClosing the Farm_Silver\u3011"
    },
    {
        "content": "\u9898\u9762\u4e2d\u8bf4\uff0c**FJ\u611f\u5174\u8da3\u4e8e\u5173\u95ed\u6bcf\u4e2a\u8c37\u4ed3\u540e\uff0c\u519c\u573a\u7684\u8054\u901a\u72b6\u51b5**\u3002\u663e\u7136\uff0c\u5982\u679c\u6bcf\u6b21\u5173\u95ed\u8c37\u4ed3\u540e\u5c31\u53bb\u904d\u5386\u6574\u4e2a\u56fe\uff0c\u4f1a\u6bd4\u8f83\u8017\u65f6\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u7528**\u5e76\u67e5\u96c6**\u8bd5\u4e00\u8bd5\u3002\n\n\u6211\u4eec\u77e5\u9053\uff0c**\u5982\u679c\u4e24\u4e2a\u8c37\u4ed3\u4e4b\u95f4\u6709\u53cc\u5411\u9053\u8def\u8fde\u63a5\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba4\u4e3a\u8fd9\u4e24\u4e2a\u8c37\u4ed3\u662f\u8fde\u901a\u7684\u3002** \u4e8e\u662f\uff0c\u6211\u4eec\u53ef\u4ee5**\u628a\u6bcf\u6761\u53cc\u5411\u9053\u8def\u8fde\u63a5\u7684\u4e24\u4e2a\u8c37\u4ed3\u6240\u5728\u96c6\u5408\u5408\u5e76\uff0c\u8868\u793a\u8fd9\u4e24\u4e2a\u8c37\u4ed3\u8fde\u901a\u7684\u3002** \u8fd9\u6837\u64cd\u4f5c\u540e\uff0c**\u5982\u679c\u6240\u6709\u5f00\u542f\u7684\u8c37\u4ed3\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u4e2d\uff08\u5373\u6709\u7740\u76f8\u540c\u7684\u4ee3\u8868\u5143\u7d20\uff09\uff0c\u90a3\u4e48\u8fd9\u4e2a\u519c\u573a\u5c31\u662f\u201c\u5168\u8fde\u901a\u7684\u201d\u3002**\n\n\u4f46\u662f\uff0c\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u95ee\u9898\uff1a**\u5982\u679c\u5728\u5f00\u59cb\u65f6\u6839\u636e\u8c37\u4ed3\u4e4b\u95f4\u7684\u53cc\u5411\u9053\u8def\u5408\u5e76\u5b8c\u6210\u540e\uff0c\u5173\u95ed\u8c37\u4ed3\u7684\u64cd\u4f5c\u5b9e\u73b0\u5c06\u5341\u5206\u56f0\u96be**\u3002\n\n\u8fd9\u4e2a\u65f6\u5019\uff0c\u6b63\u7740\u60f3\u4e0d\u884c\uff0c\u5c31\u5012\u8fc7\u6765\u8bd5\u8bd5\u2014\u2014**\u8ba9\u8c37\u4ed3\u4e00\u95f4\u4e00\u95f4\u5730\u201c\u5f00\u542f\u201d\uff0c\u5224\u65ad\u8fde\u901a\u60c5\u51b5\uff0c\u628a\u5224\u65ad\u7ed3\u679c\u9006\u5e8f\u8f93\u51fa\u3002**\n\n\u663e\u7136\uff0c\u5012\u8fc7\u6765\u505a\u8fd9\u9898\u4f1a\u5bb9\u6613\u5b9e\u73b0\u5f88\u591a\u3002\u90a3\u4e48\uff0c\u6211\u4eec\u5f52\u7eb3\u4e00\u4e0b\u7a0b\u5e8f\u7684\u5b9e\u73b0\u6b65\u9aa4\u3002\n\n1. \u8bfb\u5165\u6570\u636e\u5e76\u521d\u59cb\u5316\n2. \u6309\u7167\u8c37\u4ed3\u5173\u95ed\u7684\u987a\u5e8f\u9006\u5e8f\u64cd\u4f5c\n3. **\u628a\u5f53\u524d\u8981\u201c\u5f00\u542f\u201d\u7684\u8c37\u4ed3\u7684\u6240\u6709\u9053\u8def\u201c\u5f00\u542f\u201d\u2014\u2014\u5408\u5e76\u9053\u8def\u8fde\u63a5\u7684\u4e24\u4e2a\u8c37\u4ed3\u6240\u5728\u96c6\u5408**\n4. **\u5224\u65ad\u6240\u6709\u5df2\u7ecf\u5f00\u542f\u7684\u8c37\u4ed3\u662f\u5426\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u4e2d**\uff0c\u5b58\u50a8\u5224\u65ad\u7ed3\u679c\n5. \u8f93\u51fa\u5224\u65ad\u7ed3\u679c\n\n\u4e0b\u9762\u662fAC\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<vector>\nusing namespace std;\n  \nint f[3003];  //\u5b58\u50a8\u6bcf\u4e2a\u5143\u7d20\u6240\u5728\u96c6\u5408\u4ee3\u8868\u5143\u7d20\nint fd(int x){  //\u5e76\u67e5\u96c6\u7684\u67e5\u627e\u51fd\u6570\n    return x==f[x]?x:f[x]=fd(f[x]);\n}\n//\u5e76\u67e5\u96c6\n  \nvector<int>ck;  \n//\u5b58\u50a8\u5df2\u7ecf\u5f00\u653e\u7684\u8c37\u4ed3\uff0c\u65b9\u4fbf\u68c0\u67e5\u519c\u573a\u662f\u5426\u4e3a\u5168\u8fde\u901a\n  \nint main(){\n    int n,m;\n    cin>>n>>m;  //\u8bfb\u5165n\u548cm\n    vector<int>road[n+1];\n  //road[i]\u5b58\u50a8\u8fde\u63a5\u4e86\u8c37\u4ed3i\u7684\u6240\u6709\u8def\u5f84\n    for(int u,v,i=0;i<m;i++){\n        cin>>u>>v;\n        road[u].push_back(v);\n        road[v].push_back(u);\n    }  //\u8bfb\u5165\u6bcf\u6761\u53cc\u5411\u9053\u8def\u5e76\u5b58\u50a8\n    bool p[n+1],open[n+1];\n  //p[i]\u4ee3\u8868\u5173\u95ed\u7b2ci\u4e2a\u8c37\u4ed3\u524d\u519c\u573a\u662f\u5426\u5168\u8fde\u901a\n  //open[i]\u4ee3\u8868\u7b2ci\u4e2a\u8c37\u4ed3\u662f\u5426\u5f00\u653e\uff0c\u4fbf\u4e8e\u5408\u5e76\u64cd\u4f5c\n    int close[n+1];\n  //close[i]\u4ee3\u8868\u7b2ci\u6b21\u64cd\u4f5c\u65f6\u5173\u6389\u7684\u8c37\u4ed3\u7f16\u53f7\n    for(int i=1;i<=n;i++)\n        cin>>close[i];  //\u8bfb\u5165\u6bcf\u6b21\u5173\u6389\u7684\u8c37\u4ed3\u7f16\u53f7\n    memset(open,false,sizeof(open));\n  //\u521d\u59cb\u5316open[]\uff0c\u9006\u63a8\uff0c\u6240\u6709\u8c37\u4ed3\u90fd\u662f\u5173\u95ed\u7684\n    memset(p,true,sizeof(p));\n  //\u521d\u59cb\u5316p[]\uff0c\u5047\u8bbe\u6bcf\u6b21\u64cd\u4f5c\u540e\u519c\u573a\u90fd\u662f\u5168\u8fde\u901a\u7684\n  \n  //\u4ee5\u4e0a\u4e3a\u521d\u59cb\u5316\u548c\u6570\u636e\u8bfb\u5165\n  \n    for(int u,i=n;i;i--){\n        u=f[close[i]]=close[i];  //\u521d\u59cb\u5316\u5bf9\u5e94\u96c6\u5408\n        open[close[i]]=true;  //\u6807\u8bb0\u8c37\u4ed3\u5f00\u653e\n        ck.push_back(close[i]);  //\u52a0\u5165\u68c0\u67e5\u5bf9\u8c61\n        if(i==n) continue;\n  //\u7b2cn\u6b21\u64cd\u4f5c\u524d\u53ea\u6709\u4e00\u4e2a\u8c37\u4ed3\u5f00\u653e\uff0c\u6240\u4ee5\u519c\u573a\u4e00\u5b9a\u662f\u5168\u8fde\u901a\u7684\n        for(int v,j=0;j<road[close[i]].size();j++){\n            //\u5408\u5e76\u8be5\u8c37\u4ed3\u6709\u8fde\u63a5\u7684\u6240\u6709\u9053\u8def\u4e0a\u7684\u8c37\u4ed3\n            if(open[road[close[i]][j]]){\n           //\u5224\u65ad\u5728\u9053\u8def\u4e0a\u7684\u8c37\u4ed3\u662f\u5426\u6709\u5f00\u653e\n                v=fd(road[close[i]][j]);\n            //\u6709\u5f00\u653e\u5219\u5224\u65ad\u662f\u5426\u8fde\u901a\n                if(v!=u) //\u5982\u679c\u6ca1\u6709\u8fde\u901a\u5219\u5408\u5e76\u6240\u5728\u96c6\u5408\n                    f[v]=u;\n            }\n        }\n        //\u5f00\u653e\u8c37\u4ed3\u5e76\u5408\u5e76\u5f00\u653e\u7684\u9053\u8def\u6240\u8fde\u63a5\u7684\u8c37\u4ed3\n                                                    \n        u=fd(ck[0]);\n        for(int j=1;j<ck.size();j++){\n            if(u!=fd(ck[j])){\n                p[i]=false;\n                break;\n            }\n        }\n  \t\t//\u68c0\u67e5\u5df2\u5f00\u653e\u7684\u8c37\u4ed3\u662f\u5426\u5168\u8fde\u901a\n  \t\t//\u5373\u68c0\u67e5\u5b83\u4eec\u662f\u5426\u662f\u4e00\u4e2a\u76f8\u540c\u7684\u4ee3\u8868\u5143\u7d20\n  \n    }\n  \n  //\u4ee5\u4e0a\u662f\u5f00\u653e\u8c37\u4ed3\u5224\u65ad\u64cd\u4f5c\uff0c\u4ee5\u4e0b\u5c31\u662f\u8f93\u51fa\n  \n    for(int i=1;i<=n;i++)\n        if(p[i]) cout<<\"YES\"<<endl;\n        else cout<<\"NO\"<<endl;\n    return 0; \n} \n```\n",
        "postTime": 1563024367,
        "uid": 57421,
        "name": "fls233666",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3144 \u3010[USACO16OPEN]\u5173\u95ed\u519c\u573aClosing the Farm_Silver\u3011"
    },
    {
        "content": "### Part0.\u9898\u5916\u8bdd\n\n\u4e8b\u5b9e\u4e0a\u8fd9\u9898\u7684Gold\u662f$N <= 300000 , M <= 300000$\u7684\u3002\n\n\u7136\u540e\u4f60\u4eec\u90a3\u79cd$n^2$\u4e71\u6c34\u4e8b\u5b9e\u4e0a\u662f\u8fc7\u4e0d\u4e86\u7684\n\n\u8fd9\u91cc\u8bb2\u4e0b$O(N \\log N + M)$\n\n### Part1.\u601d\u8def\n\n\u53ea\u8981\u5976\u725b\u9898\u4f60\u65e5\u7684\u591f\u591a\uff0c\u8fd9\u9898\u5c31\u662f\u4e2a\u5957\u8def\u9898\u3002\n\n\u5148\u4e0a\u4e00\u53e5\u8bdd\n\n> \u667a\u5546\u4e0d\u591f\uff0c\u6570\u636e\u7ed3\u6784\u6765\u51d1\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u6211\u4eec\u8981\u5173\u95ed\u5b83\uff0c\u7136\u540e\u65ad\u5f00\u6240\u6709\u4e0e\u5b83\u76f8\u8fde\u7684\u8fb9\uff0c\u5e76\u4e14\u628a\u5b83\u6807\u8bb0\u4e3a\u5df2\u5220\u9664\uff0c\u63a5\u7740\u6309\u7167\u9898\u76ee\u5224\u65ad\u5c31\u597d\u4e86\u3002\n\n\u65ad\u8fb9\uff0clct\uff1f\n\n\u5f53\u7136\u53ef\u4ee5\uff0c\u4f46\u662f\u6ca1\u5fc5\u8981\u3002\n\n\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u79cd\u6ca1\u6709\u5f3a\u5236\u5728\u7ebf\u7684\u65ad\u8fb9\u4f3c\u4e4e\u90fd\u53ef\u4ee5\u5e76\u67e5\u96c6\u641e\u3002\n\n\u4f60\u79bb\u7ebf\uff0c\u7136\u540e\u5012\u7740\u52a0\u8fb9\uff0c\u6700\u540e\u5012\u7740\u56de\u7b54\u8be2\u95ee\u5c31\u597d\u4e86\u3002\n\n\u4e3b\u8981\u662f\u5bf9\u4e8e\u8fd9\u4e2a\u9898\u76ee\uff0c\u4f60\u9700\u8981$O(1)$\u5224\u65ad\u4e00\u5f20\u56fe\u662f\u5426\u8054\u901a\u3002\n\n\u8fd9\u5728\u5e76\u67e5\u96c6\u5982\u679c\u4f60\u679a\u4e3e\u6bcf\u4e2a\u70b9\u7b97\u8054\u901a\u5757\u4e2a\u6570\u7684\u8bdd\u4f1a\u8d85\u65f6\n\n\u4e0d\u5982\u76f4\u63a5\u7ef4\u62a4\u4e2asize\uff0c\u7136\u540e\u5224\u65ad\u4e0b\u662f\u5426\u4e3a\u56fe\u4e2d\u70b9\u6570\u5c31\u597d\u4e86\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<unordered_set>\nusing namespace std;\n\nconst int N = 300000 + 5;\nvector <int> G[N];\nunordered_set <int> s;\n\nint n , m , q[N] , f[N] , sz[N];\nbool ans[N];\nint find(int u) {return u != f[u] ? f[u] = find(f[u]) : u;}\nvoid link(int u , int v) {\n\tint t1 = find(u) , t2 = find(v);\n\tif(t1 == t2) return ;\n\tif(sz[t2] < sz[t1]) swap(t1 , t2);\n\tf[t1] = t2; sz[t2] += sz[t1];\n}\n\nint main() {\n\tfreopen(\"closing.in\" , \"r\" , stdin); freopen(\"closing.out\" , \"w\" , stdout);\n\tscanf(\"%d %d\" , &n , &m);\n\tfor(int i = 1 ; i <= n ; ++i) sz[f[i] = i] = 1;\n\tfor(int i = 1 , u , v ; i <= m ; ++i) {\n\t\tscanf(\"%d %d\" , &u , &v);\n\t\tG[u].push_back(v); G[v].push_back(u);\n\t}\n\tfor(int i = 1 ; i <= n ; ++i) scanf(\"%d\" , q + i);\n\tfor(int i = n ; i >= 1 ; --i) {\n\t\tint u = q[i]; s.insert(u);\n\t\tfor(int k = 0 ; k < G[u].size() ; ++k)\n\t\t\tif(s.count(G[u][k])) link(G[u][k] , u);\n\t\tint rt = find(*s.begin());\n\t\tans[i] = sz[rt] == s.size();\n\t}\n\tfor(int i = 1 ; i <= n ; ++i) printf(\"%s\\n\" , ans[i] ? \"YES\" : \"NO\");\n}\n```\n",
        "postTime": 1555058266,
        "uid": 55537,
        "name": "Parabola",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3144 \u3010[USACO16OPEN]\u5173\u95ed\u519c\u573aClosing the Farm_Silver\u3011"
    },
    {
        "content": "\u8bf4\u6765\u60ed\u6127\uff0c\u8fd9\u9053\u9898\u6211\u61f5\u4e86\u597d\u51e0\u5929\uff0c\u6700\u540e\u8fd8\u662f\u5728\u8001\u5e08\u7684\u63d0\u793a\u4e0b\u624d\u6709\u6240\u601d\u8def\uff0c\u6240\u4ee5\u849f\u84bb\u8fd8\u662f\u60f3\u53d1\u4e0a\u6765\u5e2e\u4e00\u4e0b\u5927\u5bb6\n\n\u9996\u5148\uff0c\u8fd9\u662f\u4e00\u9053\u5e76\u67e5\u96c6\uff0c\u4e0d\u8fc7\u5fc5\u987b\u5012\u7740\u505a\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u6240\u6709\u8fb9\u5148\u8bfb\u8fdb\u6765\uff0c\u5012\u7740\u505a\uff0c\u5c06\u62c6\u8fb9\u8fc7\u7a0b\u53d8\u4e3a\u5408\u5e76\u8fc7\u7a0b\uff0c\u6700\u540e\u5012\u7740\u8f93\u51fa\u7b54\u6848\n\n\u7b2c\u4e00\u6b65\uff0c\u6211\u4eec\u5148\u7528\u7ed3\u6784\u4f53\u628a\u6bcf\u4e00\u6761\u8fb9\u5b58\u7740\uff0c\u6309\u4f18\u5148\u5ea6\u5347\u5e8f\u6392\u5217\uff08\u4f18\u5148\u5ea6\u5373\u4e3a\u7b2c\u51e0\u4e2a\u62c6\u9664\uff09\uff0c\u8bbe\u7f6e\u53d8\u91cfnum\uff0c\u4e3a\u8fde\u63a5\u7684\u4e24\u8fb9\u8f83\u65e9\u62c6\u9664\u7684\u4f18\u5148\u5ea6\uff08\u8d8a\u65e9\u62c6\u9664\u7684\uff0c\u8d8a\u665a\u624d\u80fd\u5408\u5e76\uff09\u3002\u4e4b\u540e\u5012\u7740\u904d\u5386\u6570\u7ec4\uff0c\u5373\u4e3a\u8fb9\u7684\u5408\u5e76\u987a\u5e8f\n\n\u7b2c\u4e8c\u6b65\uff0c\u6211\u4eec\u53ef\u4ee5\u7528k\u8868\u793a\u5f53\u524d\u6709\u591a\u5c11\u4e2a\u96c6\u5408\uff08\u5305\u62ec\u6ca1\u6709\u88ab\u8fde\u8fb9\u7684\uff09\uff0c\u6bcf\u8fde\u4e00\u6761\u8fb9\uff0ck--\uff08\u5373\u4e3a\u5c11\u4e86\u4e00\u4e2a\u96c6\u5408\uff09\uff0c\u5982\u679c\u5408\u5e76\u7b2ci\u6761\u8fb9\u540ek=i\uff08\u6ce8\u610f\uff0ci\u662f\u5012\u7740\u5faa\u73af\u7684\uff09\uff0c\u8bf4\u660e\u519c\u573a\u8fde\u901a\uff0c\u5426\u5219\u4e0d\u8fde\u901a\u3002\u8bb0\u5f55\u7b54\u6848\n\n\u7b2c\u4e09\u6b65\uff0c\u5012\u7740\u8f93\u51fa\u5408\u5e76\u8fc7\u7a0b\u7684\u7b54\u6848\uff0c\u5373\u4e3a\u62c6\u9664\u65f6\u7684\u8fde\u901a\u60c5\u51b5\n\n\u6211\u8bed\u6587\u4e0d\u592a\u597d\uff0c\u4e0d\u8fc7\u8fd8\u662f\u5e0c\u671b\u5927\u5bb6\u80fd\u770b\u61c2\u4e0a\u9762\u7684\u8bdd\uff0c\u5982\u679c\u6709\u4ec0\u4e48\u7ec6\u8282\u4e0d\u660e\u767d\uff0c\u53ef\u4ee5\u770b\u6ce8\u89e3\n\n\u4e0a\u4ee3\u7801\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<map>\n#include<vector>\n#define a(i,a,b) for(int i=a;i<=b;i++)\n#define b(i,a,b) for(int i=a;i>=b;i--)\nusing namespace std;\nstruct ab{\n    int from,to,num;\n    //\u8fb9\u7684\u4e24\u4e2a\u70b9\u548c\u4f18\u5148\u5ea6\n};\nconst int N=200050;\nab a[N];\nint f[N],h[N],t[N],s[N];\nbool ans[N];\nint p=0,q;\nint n,m;\nint k;\nint ff(int x)\n{\n    if(f[x]==x) return x;\n    return f[x]=ff(f[x]);\n}\nvoid unite(int x,int y)\n{\n    x=ff(x),y=ff(y);\n    if(x==y) return;\n    k--;\n    //\u6bcf\u8fde\u63a5\u4e00\u6761\u8fb9\uff0c\u96c6\u5408\u6570\u91cf\u51cf\u5c111\n    if(h[x]<h[y])\n    f[x]=y;\n    else if(h[x]>h[y])\n    f[y]=x;\n    else\n    f[y]=x,h[x]++;\n    return;\n    //h\u7528\u4e8e\u6309\u79e9\u5408\u5e76\uff0c\u53ef\u4ee5\u5ffd\u7565\n}\nbool same(int x,int y)\n{\n    if(ff(x)==ff(y)) return true;\n    return false;\n}\nbool cmp(ab x,ab y)\n{\n    return x.num<y.num;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    k=n;\n    a(i,0,m-1)\n    scanf(\"%d%d\",&a[i].from,&a[i].to);\n    a(i,1,n)\n    {\n        int x;\n        scanf(\"%d\",&x);\n        t[x]=i;\n        s[i]=x;\n    }\n    //t\u4e3a\u6bcf\u4e2a\u70b9\u7684\u4f18\u5148\u5ea6\n    a(i,1,n)\n    f[i]=i,h[i]=1;\n    a(i,0,m-1)\n    a[i].num=min(t[a[i].from],t[a[i].to]);\n    //\u5c06\u6bcf\u4e00\u6761\u8fb9\u7684\u4f18\u5148\u5ea6\u8bbe\u4e3a\u4e24\u70b9\u8f83\u5c0f\u7684\u4f18\u5148\u5ea6\n    sort(a,a+m,cmp);\n    q=m-1;\n    //\u56e0\u4e3a\u62c6\u5206\u4f18\u5148\u5ea6\u4ece\u5c0f\u5230\u5927\uff0c\u5408\u5e76\u65f6\u9700\u8981\u5012\u53d9\n    b(i,n,1)\n    {\n        while(a[q].num>=i)\n        {\n            unite(a[q].from,a[q].to);\n            q--;\n            //\u5012\u53d9\u679a\u4e3e\u4f18\u5148\u5ea6\uff0c\u4f9d\u6b21\u5408\u5e76\u6bcf\u4e00\u6761\u8fb9\n        }\n        if(k==i) ans[p]=1;\n        else ans[p]=0;\n        p++;\n        //\u8bb0\u5f55\u7b54\u6848\n    }\n    b(i,p-1,0)\n    if(ans[i])\n    printf(\"YES\\n\");\n    else\n    printf(\"NO\\n\");\n    //\u5012\u5e8f\u8f93\u51fa\n    return 0;\n}\n```",
        "postTime": 1527767330,
        "uid": 41781,
        "name": "bztMinamoto",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3144 \u3010[USACO16OPEN]\u5173\u95ed\u519c\u573aClosing the Farm_Silver\u3011"
    },
    {
        "content": "\u770b\u5230\u697c\u4e0a\u6709\u4e86\u704c\u6c34\u5224\u8054\u901a\uff0c\u6211\u5c31\u5199\u4e00\u4e2a\u5e76\u67e5\u96c6\u597d\u4e86\u3002\n\n\u53ef\u4ee5\u5012\u7740\u52a0\u5165\u8fb9\uff0c\u7136\u540e\u6bcf\u6b21\u66b4\u529b\u7684\u53bb\u627e\u6839\u7684\u4e2a\u6570\uff0c\u5982\u679c\u5927\u4e8e1\u5c31\u662fNO\n\n\u50a8\u5b58\u8d77\u6765\u5012\u5e8f\u8f93\u51fa\u3002\n\n------\u5b8c\u7ed3\uff0c\u6492\u82b1-----\n\n\u00b7\u00b7\u00b7\n```cpp\n#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint can[3001],n;\nint fa[3001];\nint ans[3001],a[3001];\nint h[3001],ne[6001],to[6001],fr[6001],en=0;\ninline void add(int a,int b)\n{ne[en]=h[a];to[en]=b;fr[en]=a;h[a]=en++;}\ninline int gf(int k)\n{\n    if (fa[k]==k) return k;\n    else return fa[k]=gf(fa[k]);\n}\nint main()\n{\n    memset(h,-1,sizeof h);\n    int n,m;\n    scanf(\"%d%d\",&n,&m);\n    for (int i=1;i<=m;++i)\n    {\n        int a,b;\n        scanf(\"%d%d\",&a,&b);\n        add(a,b);\n        add(b,a);\n    }\n    for (int i=1;i<=n;++i) scanf(\"%d\",&a[i]),fa[i]=i;\n    for (int i=n;i>=1;--i)\n    {\n        can[a[i]]=1;\n        for (int j=h[a[i]];j>=0;j=ne[j])\n        {\n            if (can[fr[j]]&&can[to[j]])\n            {\n                int l=fr[j],r=to[j];\n                int fl=gf(l),fr=gf(r);\n                if (fl!=fr) fa[fl]=fr;\n            }\n        }\n        int cnt=0;\n        for (int j=1;j<=n;++j)\n            if (can[j]&&fa[j]==j) cnt++;\n        if (cnt==1) ans[i]=1;\n    }\n    printf(\"YES\\n\");\n    for (int i=2;i<=n;++i) if (ans[i]) printf(\"YES\\n\");\n    else printf(\"NO\\n\");\n}\n\u00b7\u00b7\u00b7\n```",
        "postTime": 1475079243,
        "uid": 23943,
        "name": "Orion_Rigel",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3144 \u3010[USACO16OPEN]\u5173\u95ed\u519c\u573aClosing the Farm_Silver\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u5e76\u67e5\u96c6\u88f8\u9898\u554a\u3002~~\u4e0d\u8fc7\u6211\u7adf\u7136\u6539\u4e86\u534a\u4e2a\u5c0f\u65f6\u3002~~\n\n1. \u6211\u4eec\u6765\u60f3\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u662f\u5e76\u67e5\u96c6\u3002\n\n\u5e76\u67e5\u96c6\u662f\u7528\u6765\u5e72\u561b\u7684\uff1f\u65e0\u975e\u662f\u5408\u5e76&\u67e5\u8be2\u554a\u3002\n\n\u8fd9\u9898\u8981\u6c42\u7684\u5c31\u662f\u6c42\u4ed6\u662f\u4e0d\u662f\u8054\u901a\u7684\uff0c\u4e5f\u5c31\u662f\u6c42\u4ed6\u4eec\u662f\u5426\u62e5\u6709\u516c\u5171\u7684\u7956\u5148\n\n\u6240\u4ee5\u6211\u4eec\u7528\u5e76\u67e5\u96c6\u5b9e\u73b0\n\n2. code\n\n-  \u5b9a\u4e49\u53d8\u91cf\uff1a\u6211\u4eec\u5b9a\u4e49```pre[i]```\u4e3a```i```\u7684\u7956\u5148\uff0c\u4e00\u5f00\u59cb\u56e0\u4e3a\u5e76\u6ca1\u6709\u8054\u901a\uff0c\u6240\u4ee5\u6211\u4eec\u8ba4\u4e3a\u6bcf\u4e2a\u4eba\u7684\u7956\u5148\u662f\u4ed6\u81ea\u5df1\uff1b```f[i]```\u8868\u793a\u7b2c```i```\u4e2a\u65f6\u95f4\u5173\u95ed\u7684\u519c\u573a\uff1b\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\u6570\u7ec4```a[i]```\uff0c```a[i].x```\u548c```a[i].y```\u4ee3\u8868\u8f93\u5165\u65f6\u7b2c```i```\u7ec4\u65f6\u628a\u4e24\u4e2a\u519c\u573a\u8fde\u5728\u4e00\u8d77\n\n```\nint n, m, pre[100001], f[100001], s[100001], t[100001];\n\nstruct node {//\u7ed3\u6784\u4f53\n    int x;\n    int y;\n} a[100001];\n\n```\n\n- \u5e76\u67e5\u96c6\u521d\u59cb\u5316\u51fd\u6570init()\uff1a\u521a\u521a\u8bb2\u8fc7\uff0c\u4e00\u5f00\u59cb\u6bcf\u4e00\u4e2a\u4eba\u90fd\u662f\u81ea\u5df1\u7684\u7956\u5148\n\n```\nvoid init() {\n    for (int i = 1; i <= n; i++) {//\u679a\u4e3e\u4ecei ~ n\n        pre[i] = i;//\u521d\u59cb\u5316\uff0c\u6bcf\u4e2a\u4eba\u90fd\u662f\u81ea\u5df1\u7684\u7956\u5148\n    }\n}\n```\n- \u5e76\u67e5\u96c6\u627e\u7956\u5148\u51fd\u6570getf()\uff1a\u6211\u4eec\u53ef\u4ee5\u628a\u7956\u5148\u7406\u89e3\u4e3a\u6811\u7684\u6839\u8282\u70b9\uff0c\u4ed6\u7684\u5b50\u8282\u70b9\u5c31\u662f\u4ed6\u7684\u4e0b\u5c5e\uff0c\u56fe\u7247\u5927\u6982\u662f\u8fd9\u6837\u7684\uff1a\n\n![\u5c4f\u5e55\u5feb\u7167 2020-02-17 16.59.26.png](https://i.loli.net/2020/02/17/WZn4bANrgM9xpzB.png)\n\n\u5176\u4e2d\uff0c1\u4e3a2\u30013\u7684\u7956\u5148\uff0c\u6240\u4ee5```pre[2] = 1```\u3001```pre[2] = 1```\uff0c\u63a5\u4e0b\u6765\u4ee5\u6b64\u7c7b\u63a8......\n\n\u6240\u4ee5\u6211\u4eec\u5f97\u51fa\u6765\u4e86\u6211\u4eec\u641c\u6700\u5927\u7956\u5148\u7684\u65b9\u6cd5\uff1a\u5047\u8bbe\u6211\u4eec\u8981\u641c7\u7684\u7956\u5148\uff0c\u6211\u4eec\u5148\u53ef\u4ee5\u770b\u5230```pre[7] = 4```\uff0c\u4e8e\u662f\u6211\u4eec\u6539\u6210\u627e4\u7684\u7956\u5148\uff0c\u53c8\u770b\u5230```pre[4] = 2```\uff0c\u6240\u4ee5\u6211\u4eec\u53bb\u627e2\u7684\u7956\u5148\uff0c2\u7684\u7956\u5148\u662f1\uff0c1\u7684\u7956\u5148\u662f1\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u627e\u5230\u4e86\n\n\u63a8\u7406\u6210\u4ee3\u7801\u5927\u6982\u8fd9\u6837\uff1a\n\n```\nint getf(int root) {\n    if (pre[root] == root) return root;//\u5982\u679c\u627e\u5230\n    else return getf(pre[root]);//\u5426\u5219\u627e\u7956\u5148\u7684\u7956\u5148\n}\n```\n\n\u4f46\u662f\uff01\u53ef\u80fd\u6709\u4e00\u4e9b~~\u6bd2\u7624~~\u6570\u636e\u4ed6\u957f\u8fd9\u6837\uff1a\n\n![\u5c4f\u5e55\u5feb\u7167 2020-02-17 17.05.36.png](https://i.loli.net/2020/02/17/PH15fDEsCu2oOYv.png)\n\n\u4e5f\u5c31\u662f\u4e00\u4e2a\u7ebf\u5f62\u7684\u6811\uff0c\u8fd9\u6837\u67e5\u627e\u8d77\u6765\u65f6\u95f4\u4f1a\u6210\u4e3a\u4e00\u4e2a\u95ee\u9898\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\uff1a\u6bcf\u6b21\u641c\u7956\u5148\u7684\u65f6\u5019\u628a\u4ed6\u53d8\u6210\u548c\u4ed6\u7956\u5148\u5728\u540c\u4e00\u6df1\u5ea6\u7684\u5c42\u9762\u4e0a\uff0c\u8fd9\u5c31\u662f\u8def\u5f84\u538b\u7f29\uff0c\u4e0a\u9762\u7684\u56fe\u8def\u5f84\u538b\u7f29\u4e4b\u540e\u5927\u6982\u957f\u8fd9\u6837\uff1a\n![\u5c4f\u5e55\u5feb\u7167 2020-02-17 17.07.58.png](https://i.loli.net/2020/02/17/9HgKpwnsjIG5MVP.png)\n\n\u8def\u5f84\u538b\u7f29\u7248\u672c\u7684\u4ee3\u7801\uff1a\n\n```\nint getf(int root) {\n    if (pre[root] == root) return root;\n    else return pre[root] = getf(pre[root]);//\u8def\u5f84\u538b\u7f29\n}\n```\n\n\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u91cc\u8def\u5f84\u538b\u7f29\u53ea\u52a0\u4e86\u4e00\u70b9\n\n- merge(x, y)\u5408\u5e76\u51fd\u6570\uff1a\u6211\u4eec\u53ef\u4ee5\u67e5\u627e```x```\u548c```y```\u7684\u7956\u5148\uff0c\u5982\u679c\u662f\u4e00\u4e2a\u4eba\uff0c\u8bf4\u660e\u4e24\u4e2a\u519c\u573a\u5df2\u7ecf\u5408\u5e76\uff0c\u5426\u5219\u8bf4\u660e\u6ca1\u6709\u5408\u5e76\uff0c\u9700\u8981\u5408\u5e76\n\n```\nvoid merge(int root1, int root2) {\n    root1 = getf(root1);\n    root2 = getf(root2);\n    //\u627e\u5230\u4e24\u4e2a\u4eba\u7684\u7956\u5148\n    if (root1 != root2) {//\u5982\u679c\u7956\u5148\u4e0d\u662f\u4e00\u4e2a\u4eba\n        pre[root2] = root1;//\u53e6\u4e00\u4e2a\u4eba\u7684\u7956\u5148\u8981\u53d8\u6210\u8fd9\u4e2a\u4eba\u7684\u5b50\u8282\u70b9\n    }\n}\n```\n\n- merged(x, y)\u5224\u65ad\u662f\u5426\u5408\u5e76\u51fd\u6570\uff1a\u6211\u4eec\u540c\u6837\u67e5\u627e```x```\u548c```y```\u7684\u7956\u5148\uff0c\u5982\u679c\u662f\u4e00\u4e2a\u4eba\u8fd4\u56detrue\uff0c\u4e0d\u662f\u8fd4\u56defalse\n\n```\nbool merged(int root1, int root2) {\n    if (getf(root1) != getf(root2)) {\n        return false;\n    } else {\n        return true;\n    }\n}\n```\n\n- \u6240\u4ee5\u6211\u4eec\u7684\u5927\u4f53\u4ee3\u7801\u5c31\u51fa\u6765\u4e86\uff1a\n\n```\n#include <iostream>\nusing namespace std;\n\nint n, m, pre[100001], f[100001], s[100001], t[100001];\n\nstruct node {\n    int x;\n    int y;\n} a[100001];\n\nvoid init() {\n    for (int i = 1; i <= n; i++) {\n        pre[i] = i;\n    }\n}\n\nint getf(int root) {\n    if (pre[root] == root) return root;\n    else return pre[root] = getf(pre[root]);\n}\n\nvoid merge(int root1, int root2) {\n    root1 = getf(root1);\n    root2 = getf(root2);\n    if (root1 != root2) {\n        pre[root2] = root1;\n    }\n}\n\nbool merged(int root1, int root2) {\n    if (getf(root1) != getf(root2)) {\n        return false;\n    } else {\n        return true;\n    }\n}\n\nint main() {\n    cin >> n >> m;\n    for (int i = 1; i <= m; i++) cin >> a[i].x >> a[i].y;\n    init();\n    for (int i = 1; i <= n; i++) {\n        cin >> f[i];\n        s[f[i]] = 1;\n    }\n    for (int i = n; i >= 1; i--) {\n        s[f[i]] = 0;\n        for (int j = 1; j <= m; j++) {\n            if (!s[a[j].x] && !s[a[j].y]) {\n                merge(a[j].x, a[j].y);\n            }\n        }\n        t[i] = 0;\n        for (int j = 1; j <= n; j++) {\n            if (getf(j) == j && !s[j]) {\n                t[i]++;\n            }\n        }\n    }\n    for (int i = 1; i <= n; i++) {\n        if (t[i] == 1) cout << \"YES\\n\";\n        else cout << \"NO\\n\";\n    }\n    return 0;\n}\n```",
        "postTime": 1581930902,
        "uid": 306573,
        "name": "Ender32k",
        "ccfLevel": 0,
        "title": "P3144 [USACO16OPEN]\u5173\u95ed\u519c\u573aClosing the Farm_Silver"
    },
    {
        "content": "\u4e00\u9047\u5230\u8fd9\u79cd\u8fde\u901a\u6027\u7684\u95ee\u9898\uff0c\u9996\u5148\u60f3\u5230\u7684\u662f\u5e76\u67e5\u96c6\u6765\u89e3\u51b3\n\u8fd9\u91cc\u8981\u6ce8\u610f\u4e00\u53e5\u8bdd\uff1a\n\n> \uff08\u8fd9\u91cc\u7684\u201c\u65f6\u95f4\u201d\u6307\u5728\u6bcf\u4e00\u6b21\u5173\u95ed\u8c37\u4ed3\u4e4b\u524d\u7684\u65f6\u95f4\uff09\n\n\u6211\u7528\u7684\u4e5f\u662f\u6700\u7b80\u5355\u7684\u65b9\u6cd5\uff0c\u6309\u7167\u5173\u95ed\u7684\u7ed3\u70b9\uff0c\u6bcf\u4e00\u6b21\u90fd\u8fdb\u884c\u5408\u5e76\u5b50\u6811\u5e76\u67e5\u96c6\u7684\u64cd\u4f5c\uff0c\u53ea\u628a\u5df2\u7ecf\u5173\u95ed\u7684\u76f8\u8fde\u7684\u8def\u4e0d\u8981\u8fde\u5728\u4e00\u8d77\u5c31\u884c\u4e86\u3002\n\n\u7136\u540e\u518d\u6309\u7167\u6811\u4e2a\u6570\u7684\u6027\u8d28\n\n\u5373**\u6839\u8282\u70b9\u53ea\u6709\u4e00\u4e2a\u7684\u8bdd\u5c31\u53ea\u6709\u4e00\u68f5\u6811\uff0c\u6709\u4e24\u4e2a\u4ee5\u4e0a\u5c31\u8bf4\u660e\u6ca1\u6709\u5168\u90e8\u8fde\u901a\u8fd8\u662f\u6709\u4e24\u4e2a\u5373\u4e24\u4e2a\u4ee5\u4e0a\u7684\u70b9\u6ca1\u6709\u8fde\u901a**\n\n\u8f93\u5165YES\u6216\u8005NO\u5373\u53ef\n\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include <cstdio>\n#include <iostream>\nusing namespace std;\nint a[10001][3],fa[10001],n,m,ans,b[10001],w[10001];\nint find(int x)\n{\n\tif (x==fa[x])\n\treturn x;\n\tfa[x]=find(fa[x]);\n\treturn fa[x];\n} //\u5e76\u67e5\u96c6\u8def\u5f84\u538b\u7f29\nvoid he(int x,int y)\n{\n\tint x1=find(x),x2=find(y);\n\tif (x1!=x2)\n\t{\n\t\tfa[x2]=x1;\n\t}\n}//\u5e76\u67e5\u96c6\u5408\u5e76\u64cd\u4f5c\nvoid sc() \n{\n\tfor (int i=1;i<=n;i++)\n\tfa[i]=i;\n\treturn ;\n}\nint pd()\n{\n\tint k=0;\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tif (b[i]==1)  //\u56e0\u4e3a\u5df2\u7ecf\u5173\u95ed\u7684\u7ed3\u70b9\u4e0d\u7b97\u5728\u6700\u540e\u5224\u65ad\u5269\u4e0b\u7ed3\u70b9\u7684\u8054\u901a\u95ee\u9898\u4e0a\uff0c\u6240\u4ee5\u8981\u628a\u4ed6\u4eec\u7ed9\u5ffd\u7565\n\t\tcontinue;\n\t\tif (fa[i]==i)\n\t\tk++;\n\t}\n\tif (k>=2)\n\treturn 0;\n\telse\n\treturn 1;\n}  //\u5224\u65ad\u662f\u5426\u4e3a\u6bcf\u4e2a\u8282\u70b9\u90fd\u8fde\u901a\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor (int i=1;i<=m;i++)\n\t{\n\t   int x,y;\n\t   scanf(\"%d%d\",&a[i][0],&a[i][1]);\n\t   \the(a[i][0],a[i][0]);\n}\nint k=0;\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tif (fa[i]==i)\n\t\tk++;\n\t}\n\tif (k>=2)\n\tans=1; //\u6bcf\u4e00\u6b21\u8f93\u51fa\u7684\u662f\u5728\u5173\u95ed\u5f53\u524d\u8fd9\u4e2a\u70b9\u4e4b\u524d\u7684\u8fde\u901a\u60c5\u51b5\uff0c\u6240\u4ee5\u8981\u5148\u5224\u65ad\u4e00\u5f00\u59cb\u6709\u6ca1\u6709\u5168\u90e8\u8fde\u901a\n\tfor (int i=1;i<=n;i++)\n\t{\n\t\tif (ans==1 && i==1)\n\t\t{\t\n\t\tprintf(\"NO\\n\");\n\t\tcontinue;\n\t}\n\t\tscanf(\"%d\",&w[i]);\n\t\tb[w[i-1]]=1;  //\u6807\u8bb0\u70b9\u5df2\u7ecf\u5173\u95ed\n\t\tsc();\n\t\tfor (int j=1;j<=m;j++)\n\t\t{\n\t\t\tif (b[a[j][0]]==0 && b[a[j][1]]==0)  //\u6807\u8bb0\u5173\u95ed\u7684\u70b9\u4e0e\u5176\u6709\u4efb\u4f55\u5173\u7cfb\u7684\u8def\u90fd\u5df2\u7ecf\u5931\u6548\u4e86\uff0c\u4e0d\u80fd\u518d\u5408\u5e76\u4ed6\u4eec\n\t\t\the(a[j][0],a[j][1]);\n\t\t}\n\t\tif (pd())\n\t\tprintf(\"YES\\n\");\n\t\telse\n\t\tprintf(\"NO\\n\"); \n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1565187351,
        "uid": 24812,
        "name": "Sakura_Peng",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3144 \u3010[USACO16OPEN]\u5173\u95ed\u519c\u573aClosing the Farm_Silver\u3011"
    },
    {
        "content": "#### \u9898\u76ee\u5927\u610f\n\u7ed9\u4f60n\u4e2a\u70b9\u548cm\u6761\u8fb9\uff0c\u4f9d\u6b21\u5220\u53bb\u4e00\u4e2a\u70b9\uff0c\u6c42\u6bcf\u79cd\u72b6\u6001\u4e0b\u662f\u5426\u8fde\u901a\u3002\n#### \u9898\u76ee\u89e3\u6790\n\u672c\u9898\u521a\u5f00\u59cb\u8fd8\u4ee5\u4e3a\u662f~~\u7528\u66b4\u529b\u505a\u6cd5~~\uff0c\u4f46\u4e00\u770b\u6570\u636e\u8303\u56f4\u5c31\u4e0d\u6de1\u5b9a\u4e86\u3002\u4e0d\u8fc7\u5404\u4f4d\u4e5f\u53ef\u4ee5\u770b\u4e00\u770b[\u5f31\u5316\u7248](https://begin.lydsy.com/JudgeOnline/problem.php?id=5972)\n\u90a3\u4e48\u6b64\u9898\u7684\u6b63\u89e3\u5e94\u8be5\u662f**\u5e76\u67e5\u96c6**\uff1a\n\u4f46\u600e\u4e48\u7528\u5462\uff1f\u8fd9\u91cc\u8981\u7528\u4e00\u4e2a\u5c0f\u6280\u5de7\uff1a\u5148\u628a\u4f9d\u6b21\u5220\u53bb\u7684\u70b9\u5168\u90e8\u8bfb\u8fdb\u6765\uff0c\u7136\u540e\u5012\u8fc7\u6765\u505a\u3002\n\u5b9a\u4e49\u4e00\u4e2a**sum**\uff0c\u7528\u6765\u5224\u65ad\u5f53\u524d\u8fde\u901a\u5feb\u7684\u4e2a\u6570\uff0c\u82e5\u4e2a\u6570\u4e3a1\uff0c\u5219\u5168\u90e8\u8fde\u901a\u3002\n\u6bcf\u8bfb\u5165\u4e00\u4e2a\u70b9**i**\uff0c\u5c31\u5148\u628asum++\uff0c\u7136\u540e\u641c\u7d22\u6240\u6709\u4e0e**i**\u76f8\u8fde\u7684\u70b9\uff0c\u82e5\u8be5\u70b9\u5df2\u7ecf\u51fa\u73b0\uff0c\u4e14\u6ca1\u6709\u4e0e**i**\u70b9\u8fde\u901a\uff0c\u5219\u53ef\u4ee5\u505a\u4e00\u6b21\u8fde\u901a\uff0c\u5e76\u628asum-1\u3002\n#### \u7a0b\u5e8f\u5b9e\u73b0\n```javascript\n#include<bits/stdc++.h>\nusing namespace std;\nbool flag[200010],ans[200010];\nint n,m,tot,pre[400010],now[200010],ch[400010],f[200010],x,y,sum,kk[200010],k;\ninline void sb(int x,int y){pre[++tot]=now[x];now[x]=tot;ch[tot]=y;}\nint fa(int num)\n{\n    int nu=num,nm;\n    while(num!=f[num])\n        num=f[num];\n    while(nu!=f[nu])\n        nm=nu,nu=f[nu],f[nm]=num;//\u5c06\u6811\u538b\u5f97\u6241\u5e73\uff0c\u8282\u7701\u65f6\u95f4\u3002\n    return num;\n}//\u5408\u5e76\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n        f[i]=i;\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d\",&x,&y);\n        sb(x,y),sb(y,x);\n    }\n    for(int i=1;i<=n;i++)\n        scanf(\"%d\",&kk[i]);\n    for(int i=n;i>=1;i--)\n    {\n        sum++;\n        k=kk[i];\n        flag[k]=true; \n        for(int j=now[k];j;j=pre[j])\n            if(flag[ch[j]]&&fa(ch[j])!=fa(k))\n                f[fa(ch[j])]=f[fa(k)],sum--;\n        if(sum==1)\n            ans[i]=1;\n    }\n    for(int i=1; i<=n; i++)\n        if(ans[i]==1)printf(\"YES\\n\");\n        else printf(\"NO\\n\");\n    return 0;\n}\n```",
        "postTime": 1551490819,
        "uid": 85284,
        "name": "\u98ce\u6f47\u6f47\u516e",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3144 \u3010[USACO16OPEN]\u5173\u95ed\u519c\u573aClosing the Farm_Silver\u3011"
    },
    {
        "content": "\u603b\u4f53\u601d\u8def\u7c7b\u4f3c\u4e8e\u697c\u4e0a\u7684\u697c\u4e0a\uff0c\u7528\u5e76\u67e5\u96c6\u5012\u7740\u505a\uff0c\u4f46\u662f\u3002\u3002\u3002dalao\u5b58\u50a8\u56fe\u7684\u65b9\u6cd5\u6ca1\u770b\u592a\u61c2\uff0c\u4e8e\u662f\u7528vector\u6765\u505a\uff0c\u53ef\u80fd\u4f1a\u7b80\u5355\u4e00\u70b9\u3002\n\uff08\u6bd4\u8f83\u9002\u5408\u5148\u770b\u697c\u4e0a\u7684\u697c\u4e0a\u7684dalao\u7684\u9898\u89e3\uff0c\u89e3\u91ca\u6bd4\u8f83\u8be6\u7ec6\uff09\n```\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<algorithm> \nusing namespace std;\n\nconst int maxn=200005;\nint mm[maxn]; \nbool open[maxn]; \nbool ans[maxn]; \nvector<int> g[maxn];//\u7528\u6765\u5b58\u50a8\u4e24\u4e2a\u6751\u5e84\u4e4b\u95f4\u7684\u5173\u7cfb\nint p=1;\nint s[maxn]; \nint fa[maxn];\n\n\nint find(int x){//\u627e\u7238\u7238\n    if(x==fa[x]) return x;\n    return fa[x]=find(fa[x]);\n} \n\nvoid Union(int a,int b){//\u5408\u5e76\n    int af=find(a),bf=find(b);\n    if(af==bf) return;\n    fa[af]=bf;\n    s[bf]+=s[af];\n    return;\n}\n\nint u,v;\nint n,m;\nint main(){\n\n    cin>>n>>m;\n\n    for(int i=0;i<m;i++)\n        cin>>u>>v,g[v].push_back(u),g[u].push_back(v);//\u5b58\u5165\u8282\u70b9\u5173\u7cfb\n    for(int i=1;i<=n;i++)\n        cin>>mm[i], s[i]=1,fa[i]=i; \n        \n    for(int i=n;i>=1;i--){ \n        int x=mm[i];\n        open[x]=1;\n        for(int j=0;j<=g[x].size()-1;j++)\n            if(open[g[x][j]]) Union(g[x][j],x); \n            \n        if(s[x]==n-i+1) ans[i]=1; \n        else ans[i]=0;\n    }\n    for(int i=1;i<=n;i++)\n        cout<<(ans[i]?\"YES\":\"NO\")<<endl; \n    return 0;\n}\n```",
        "postTime": 1526993050,
        "uid": 9287,
        "name": "LevenKoko",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3144 \u3010[USACO16OPEN]\u5173\u95ed\u519c\u573aClosing the Farm_Silver\u3011"
    },
    {
        "content": "\u5927\u4f6c\u4eec\u90fd\u662f\u7528\u4e00\u4e9b\u5f88\u9ad8\u7ea7\u7684\u65b9\u6cd5\u554a\u2026\u2026\n\n\u672c\u849f\u84bb\u8111\u56de\u8def\u592a\u77ed\uff0c\u4e0d\u4f1a\u50cf\u5176\u4ed6\u5927\u4f6c\u4e00\u6837\u7528\u5012\u63a8\u7684\u65b9\u6cd5\uff0c\u5c31\u4e0a\u4e00\u4e2a\u6bd4\u8f83\u66b4\u529b\u7684\u65b9\u6cd5\u5427\u2026\u2026\n\n## \u601d\u8def\uff1a\n\u5927\u5bb6\u5e94\u8be5\u90fd\u770b\u51fa\u6765\u4e86\uff0c\u5982\u4f55\u5224\u65ad\u6574\u4e2a\u519c\u573a\u8054\u901a\u5462\uff1f  \n\u6b63\u89e3\u5c31\u662f\u5e76\u67e5\u96c6\u3002  \n\u628a\u6574\u4e2a\u56fe\u904d\u5386\u4e00\u904d\uff0c\u6709\u8fb9\u76f8\u8fde\u7684\u70b9\u5408\u5e76\u5230\u4e00\u4e2a\u96c6\u5408\u91cc\uff0c\u6700\u540e\u770b\u5269\u4e0b\u7684\u96c6\u5408\u6570\uff0c\u5982\u679c\u53ea\u67091\u4e2a\u96c6\u5408\u90a3\u4e48\u5c31\u662f\u8054\u901a\u7684\uff0c\u8f93\u51faYES\u3002\u5982\u679c\u591a\u4e8e1\u4e2a\u96c6\u5408\u90a3\u4e48\u5c31\u662f\u4e0d\u8fde\u901a\u7684\uff0c\u8f93\u51faNO\u3002  \n\u63a5\u4e0b\u6765\u95ee\u9898\u6765\u4e86\uff1a  \n\u9898\u76ee\u4e2d\u5c06\u70b9\u5220\u6389\u4e4b\u540e\u518d\u5224\u65ad\u662f\u5426\u8054\u901a\uff0c\u5e94\u8be5\u5c06\u6b64\u70b9\u6240\u5728\u7684\u96c6\u5408\u5206\u5272\u62102\u4e2a\uff0c\u7136\u540e\u518d\u505a\u5e76\u67e5\u96c6\u5224\u65ad\u662f\u5426\u8054\u901a\u3002  \n\u7136\u800c\uff0c\u5e76\u67e5\u96c6\u5e76\u6ca1\u6709\u6211\u4eec\u60f3\u8c61\u7684\u90a3\u4e48\u9ad8\u7ea7\uff0c\u4ed6\u5e76\u4e0d\u652f\u6301\u5206\u5272\u96c6\u5408\u7684\u64cd\u4f5c\uff0c\u90a3\u4e48\u600e\u4e48\u89e3\u51b3\u9898\u76ee\u4e2d\u7684\u5220\u70b9\u95ee\u9898\u5462\uff1f  \n\u8fd9\u65f6\u5019\uff0c\u67d0\u4e9b\u5927\u4f6c\u53ef\u80fd\u60f3\u5230\u7684\u5f88\u597d\u7684\u65b9\u6cd5\uff1a\u5012\u63a8\u3002\u610f\u601d\u5927\u6982\u662f\u628a\u5e76\u67e5\u96c6\u5012\u7740\u505a\u4e00\u904d\uff0c\u4ece\u4e00\u5f00\u59cb\u6ca1\u6709\u70b9\uff0c\u4e00\u76f4\u6dfb\u52a0\u8282\u70b9\uff0c\u76f4\u5230\u6240\u6709\u70b9\u90fd\u88ab\u52a0\u5165\u56fe\u4e2d\uff0c\u8fd9\u6837\u53ef\u4ee5\u7701\u53bb\u9898\u76ee\u4e2d\u6700\u4e3a\u68d8\u624b\u7684\u5220\u70b9\u95ee\u9898\u3002  \n**\u7136\u9e45\u6211\u662f\u4e2a\u849f\u84bb\uff0c\u4e00\u5f00\u59cb\u5e76\u6ca1\u6709\u60f3\u51fa\u6765\u5012\u63a8\u8fd9\u79cd\u65b9\u6cd5\uff0c\u4e8e\u662f\u8111\u56de\u8def\u662f\u76f4\u7684\u7684\u672c\u849f\u84bb\u5199\u4e86\u4e2a\u6b63\u7740\u63a8\u7684\u65b9\u6cd5**  \n\u5982\u4f55\u64cd\u4f5c\u5462\uff1f  \n\u65e2\u7136\u9898\u76ee\u4e2d\u7684\u5220\u70b9\u64cd\u4f5c\u8981\u6c42\u6211\u4eec\u5206\u5272\u5e76\u67e5\u96c6\uff0c\u90a3\u4e48\u6211\u4eec\u6bcf\u5220\u6389\u4e00\u4e2a\u70b9\u5e72\u8106\u91cd\u65b0\u505a\u4e00\u904d\u5e76\u67e5\u96c6\uff0c\u5e76\u5728\u505a\u5e76\u67e5\u96c6\u7684\u65f6\u5019\u65e0\u89c6\u5df2\u7ecf\u5220\u6389\u7684\u70b9\uff0c\u6700\u540e\u7167\u6837\u4e5f\u80fd\u5f97\u51fa\u6b63\u786e\u7b54\u6848\u3002~~\u5c3d\u7ba1\u65f6\u95f4\u590d\u6742\u5ea6\u6bd4\u5927\u4f6c\u7684\u5012\u63a8\u65b9\u6cd5\u5927\u597d\u591a\uff0c\u7136\u9e45\u4e00\u770b\u8fd9\u9898\u6570\u636e\u53ea\u67093000\uff0c\u679c\u65ad\u7528\u66b4\u529b\u6c34~~\n\n### \u4e0b\u9762\u4e0a\u4ee3\u7801\uff0c\u91cc\u9762\u6709\u8be6\u7ec6\u6ce8\u91ca\uff08~~\u66b4\u529b\u4ed6\u4e0d\u9999\u5417~~\uff09\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<map>\nusing namespace std;\nint n,m;\nint father[100001];//\u5e76\u67e5\u96c6\nint f,t;\nint sum,nn;//sum\u8868\u793a\u5f53\u524d\u8fd8\u5269\u591a\u5c11\u4e2a\u96c6\u5408\uff0cnn\u8868\u793a\u5f53\u524d\u6700\u591a\u8fd8\u6709\u591a\u5c11\u4e2a\u96c6\u5408\nint close[100001];//close[i]\u8868\u793ai\u8fd9\u4e2a\u70b9\u662f\u5426\u5df2\u88ab\u5220\u6389\uff0c1\u4e3a\u662f\uff0c0\u4e3a\u5426\nint cnt=0;\nstruct node{\n\tint from;\n\tint to;\n}edge[50001];//\u5b58\u8fb9\nint kingeight(int x)//\u5176\u5b9e\u662f\u67e5\u627e\u7956\u5148\uff0c\u56e0\u4e3a\u6211\u4eec\u73ed\u6709\u4e2a\u4eba\u5916\u53f7kingeight,\u6240\u4ee5\u6211\u628afind\u6539\u6210\u4e86kingeight\uff08\u610f\u601d\u8bf7\u81ea\u884c\u7406\u89e3\uff09\n{\n\tif(father[x]!=x){father[x]=kingeight(father[x]);return father[x];}\n\telse return x;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);//\u8bfb\u5165\u4e0d\u89e3\u91ca\n\tsum=n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfather[i]=i;\n\t}//\u5e76\u67e5\u96c6\u521d\u59cb\u5316\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tscanf(\"%d%d\",&f,&t);\n\t\tedge[++cnt].from=f;\n\t\tedge[cnt].to=t;\n\t\tedge[++cnt].from=t;\n\t\tedge[cnt].to=f;//\u5b58\u8fb9\u4e0d\u89e3\u91ca\n\t\tint r1=kingeight(father[f]);//\u5e76\u67e5\u96c6\n\t\tint r2=kingeight(father[t]);\n\t\tif(r1!=r2){//\u5982\u679c\u6709\u8fb9\u76f8\u8fde\u4e14\u96c6\u5408\u4e0d\u540c\uff0c\u90a3\u4e48\u5408\u5e76\u4ed6\u4eec\u7684\u96c6\u5408\n\t\t\tsum--;\n\t\t\tfather[r2]=father[r1];\n\t\t}\n\t}\n\tif(sum==1)printf(\"YES\\n\");//\u5982\u679c\u53ea\u52691\u4e2a\u96c6\u5408\uff0c\u90a3\u4e48\u6574\u4e2a\u56fe\u662f\u8054\u901a\u7684\n\telse printf(\"NO\\n\");\n\tnn=n-1;//\u6709\u4e00\u4e2a\u70b9\u5df2\u7ecf\u88ab\u5220\u6389\u4e86\uff0c\u6240\u4ee5\u6700\u5927\u96c6\u5408\u6570--\n\tscanf(\"%d\",&f);\n\tclose[f]=1;\n\tfor(int j=1;j<=n;j++){\n\t\tfather[j]=j;\n\t}\n\tfor(int i=2;i<=n;i++)\n\t{\t\n\t\tsum=nn--;\n\t\tfor(int j=1;j<=cnt;j++) //\u66b4\u529b\u626b\u8fb9\uff0c\u91cd\u65b0\u505a\u4e00\u904d\u5e76\u67e5\u96c6\n\t\t{\n\t\t\tif(close[edge[j].from]||close[edge[j].to])continue;//\u8df3\u8fc7\u5df2\u7ecf\u88ab\u5220\u6389\u7684\u70b9\n\t\t\tint r1=kingeight(edge[j].from);//\u5e76\u67e5\u96c6\n\t\t\tint r2=kingeight(edge[j].to);\n\t\t\tif(r1!=r2){\u5982\u679c\u6709\u8fb9\u76f8\u8fde\u4e14\u96c6\u5408\u4e0d\u540c\uff0c\u90a3\u4e48\u5408\u5e76\n\t\t\t\tfather[r2]=father[r1];\n\t\t\t\tsum--;\n\t\t\t}\n\t\t}\n\t\tif(sum==1)printf(\"YES\\n\");//\u540c\u4e0a\n\t\telse printf(\"NO\\n\");\n\t\tscanf(\"%d\",&f);\n\t\tclose[f]=1;\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tfather[j]=j;\n\t\t}//\u6e05\u7a7a\u5e76\u67e5\u96c6\uff0c\u51c6\u5907\u4e0b\u4e00\u6b21\u66b4\u529b\n\t}\n\treturn 0;\n}\n```\n**The end.**",
        "postTime": 1575638195,
        "uid": 83345,
        "name": "Scarlet_Lightning",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3144 \u3010[USACO16OPEN]\u5173\u95ed\u519c\u573aClosing the Farm_Silver\u3011"
    },
    {
        "content": "\u8fd9\u9898\u4e00\u5f00\u59cb\u60f3\u5230\u76f4\u63a5\u66b4\u529b\uff0c\u5148\u5efa\u4e00\u4e2a\u5e76\u67e5\u96c6\uff0c\u518d\u8fdb\u884c\u64cd\u4f5c\uff0c\u4f46\u662f\u4e07\u4e07\u6ca1\u6709\u60f3\u5230\u9898\u76ee\u5c45\u7136\u8ba9\u6211\u4eec\u62c6\u8fb9\uff0c\u800c\u5e76\u67e5\u96c6\u53c8\u4e0d\u652f\u6301\u62c6\u8fb9\u64cd\u4f5c\u3002\u3002\n\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u6362\u4e00\u4e2a\u601d\u8def\u3002\n\n\u8003\u8651\u8fd9\u4e00\u4e2a\u56fe\u4e2d\u4e00\u5f00\u59cb\u6ca1\u6709\u5c0f\u9547\uff0c\u6211\u4eec\u518d\u5c06\u8981\u5220\u9664\u7684\u5c0f\u9547\u4e00\u4e2a\u4e2a\u5012\u7740\u52a0\u8fdb\u6765\uff0c\u518d\u5224\u65ad\u56fe\u662f\u5426\u8054\u901a\u3002\n\n\u6bd4\u5982\u9898\u76ee\u4e2d\u5173\u95ed\u987a\u5e8f\u4e3a\uff1a3 4 1 2\n\n\u90a3\u4e48\u6211\u4eec\u52a0\u5c0f\u9547\u7684\u987a\u5e8f\u5c31\u662f\uff1a2 1 4 3 \n\n\u8fd9\u6837\u5c31\u5f88\u597d\u7684\u89e3\u51b3\u4e86\u5e76\u67e5\u96c6\u4e0d\u80fd\u652f\u6301\u62c6\u8fb9\u64cd\u4f5c\u7684\u7f3a\u70b9\u3002\n\n\u63a5\u4e0b\u6765\u5c31\u53ea\u8981\u8003\u8651\u5728\u52a0\u70b9\u65f6\u5982\u4f55\u5224\u65ad\u4e0e\u5176\u4ed6\u70b9\u662f\u5426\u8054\u901a\uff0c\u8fd9\u70b9\u53ef\u4ee5\u7528\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u5b58\u5173\u7cfb\uff08\u8fd9\u9898\u6570\u636e\u5c0f\uff0c\u53ea\u67093000\uff09\uff0c\u6216\u8005\u7528\u90bb\u63a5\u8868\u5b58\u3002\n\n\u6700\u540e\u5c31\u662f\u5224\u65ad\u6574\u4e2a\u56fe\u662f\u5426\u8054\u901a\uff0c\u8fd9\u70b9\u6211\u4eec\u9700\u8981\u627e\u5230\u7b2c\u4e00\u4e2a\u5df2\u7ecf\u52a0\u8fdb\u53bb\u7684\u5c0f\u9547\uff0c\u518d\u4e0e\u5176\u4ed6\u52a0\u8fdb\u6765\u7684\u5c0f\u9547\u505a\u4e00\u6b21\u5224\u65ad\uff0c\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u5728\u52a0\u4e0a\u4f18\u5316\u4e86\u7684\u5e76\u67e5\u96c6\uff0c\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n^2\u00d7k),\u8fd9\u91cc\u7684k\u662f\u4e00\u4e2a\u5c0f\u5c0f\u7684\u5e76\u67e5\u96c6\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002(\u5f53\u7136\u7528\u90bb\u63a5\u8868\u53ef\u80fd\u6709O(n))\n\n\u653e\u4ee3\u7801\uff1a\n```pascal\nvar n,m,i,x,y,x1,y1,j,t:longint; flag:boolean;\na,c,f:array[0..100001] of longint;\ne,d:array[0..100001] of boolean;\nb:array[0..3001,0..3001] of longint;\nfunction find(x:longint):longint;\nbegin\nif f[x]=x then exit(x);\nf[x]:=find(f[x]);\nexit(f[x]);\nend;                      //\u4f18\u5316\u4e86\u7684\u5e76\u67e5\u96c6\uff0c\u4e0d\u89e3\u91ca\n\nbegin\nreadln(n,m);\nfor i:=1 to n do f[i]:=i;      //\u9ed8\u8ba4\u7956\u5148\u662f\u4ed6\u81ea\u5df1\nfor i:=1 to m do\n  begin\n  readln(x,y);\n  inc(a[x]); b[x,a[x]]:=y;\n  inc(a[y]); b[y,a[y]]:=x;       //\u4e8c\u7ef4\u6570\u7ec4\u4fdd\u5b58\u5173\u7cfb\n  end;\nfor i:=1 to n do readln(c[i]);\nfor i:=n downto 1 do                  //\u5012\u7740\u52a0\u5165\n  begin\n  d[c[i]]:=true;                 //\u52a0\u5165\u8fd9\u4e00\u4e2a\u5c0f\u9547\n  flag:=true;                    //\u9ed8\u8ba4\u8054\u901a\n  for j:=1 to a[c[i]] do         \n    if d[b[c[i],j]] then         \n                 //\u5982\u679c\u6709\u5173\u7cfb\u5e76\u4e14\u5df2\u7ecf\u52a0\u5165\uff0c\u90a3\u4e48\u5c31\u8fde\u8fb9\n      begin\n      x1:=find(b[c[i],j]); y1:=find(c[i]);   //\u627e\u7956\u5148\n      if x1<>y1 then f[x1]:=y1;         //\u8fde\u8fb9\n      end; \n  t:=1; while not d[t] do inc(t);     //\u627e\u7b2c\u4e00\u4e2a\u52a0\u5165\u7684\u5c0f\u9547\n  for j:=t+1 to n do\n    if (find(j)<>find(t))and(d[j]) then \n      flag:=false;         //\u5982\u679c\u6709\u4e00\u4e2a\u4e0d\u8fde\u901a\uff0c\u5c31\u53d8\u4e3afalse\n  e[i]:=flag; \n  end;\nfor i:=1 to n do            //\u4e0a\u9762\u5012\u7740\uff0c\u4e0b\u8fb9\u5c31\u987a\u7740\n  if e[i] then writeln('YES') else writeln('NO');\nend.\n```\n\n\n",
        "postTime": 1568344948,
        "uid": 70917,
        "name": "\u76ae\u5361\u4e18\u6700\u840c",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P3144 \u3010[USACO16OPEN]\u5173\u95ed\u519c\u573aClosing the Farm_Silver\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u697c\u4e0a\u7684\u601d\u8def\u786e\u5b9e\u5d29\u6e83\uff0cspfa\u5bf9\u4e8e\u8fd9\u4e2a\u9898\u5b8c\u5168\u6ca1\u6709\u4efb\u4f55\u7528\u5904\uff0c\u53ea\u662f\u63d0\u4f9b\u4e00\u79cd\u601d\u8def\u7f62\u4e86\uff0c\u8fd9\u4e2a\u9898\u6ca1\u7ed9\u4f60\u8fb9\u6743\n\n###\u6ca1\u7ed9\u4f60\u8fb9\u6743###\n\n\u6240\u4ee5\u538b\u6839\u5c31\u4e0d\u9700\u8981\u8dd1\u6700\u77ed\u8def\uff0c\u5982\u679c\u70b9\u6570\u8db3\u591f\u591a\uff0c\u56fe\u8db3\u591f\u7a20\u5bc6\uff0c\u90a3\u4e48\u8fd9\u4e48\u591a\u904dspfa\u7b49\u7740T\u5c31\u53ef\u4ee5\u4e86\uff0c\u5b9e\u9645\u4e0a\u8fd9\u4e2a\u9898\u76f4\u63a5bfs\u66b4\u529b\u904d\u5386\u6574\u5f20\u56fe\u5c31\u53ef\u4ee5\u4e86\uff0c\u5f53\u7136\u662f\u5bf9\u4e8e\u8fd9\u4e2a\u9898\u7684\u6570\u636e\u800c\u8a00\u3002\u6211\u4eec\u6d4b\u8bd5\u7684\u65f6\u5019\u7684\u6570\u636e\uff0c\u8c8c\u4f3c200000\uff0c\u5bfc\u81f4bfs\u4e5f\u4f1aT\u98de6\u4e2a\u70b9\uff0c\u6240\u4ee5\u8fd9\u4e2a\u9898\u6700\u597d\u7684\u89e3\u6cd5\u8c8c\u4f3c\u662f\u5e76\u67e5\u96c6\u3002\u7136\u800c\u8fd9\u4e2a\u9898\u4e00\u4f1a\u5173\u95ed\u8fd9\u4e2a\u70b9\u4e00\u4f1a\u5173\u95ed\u90a3\u4e2a\u70b9\u770b\u7740\u597d\u96be\u53d7\u3002\u3002\u90a3\u4e48\u5c31\u5148\u8bfb\u5165\u6240\u6709\u70b9\uff0c\u7136\u540e\u53cd\u5411\u5faa\u73af\uff0c\u4e00\u4e2a\u4e00\u4e2a\u5f80\u91cc\u52a0\uff0c\u8bb0\u5f55\u4e0b\u6765\uff0c\u6700\u540e\u518d\u987a\u5e8f\u8f93\u51fa\u5c31\u53ef\u4ee5\u4e86\uff0c\u697c\u4e0b\u8c8c\u4f3c\u4e5f\u5df2\u7ecf\u6709\u8fc7\u5e76\u67e5\u96c6\u4e86\uff0c\u53ea\u662f\u53ef\u80fd\u4e0d\u662f\u7279\u522b\u4e25\u8c28\uff08\u6bd5\u7adf\u8fd9\u4e2a\u9898\u5b8c\u5168\u7528\u4e0d\u7740\u8fd9\u4e48\u505a\uff0c\u76f4\u63a5\u66b4\u529b\u6253\u8d77\u6765\u66f4\u8212\u670d\uff09\u3002\u6211\u5c31\u6302\u4e0a200000\u7248\u672c\u7684\u5427\u3002\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint n,m,p[200010],a[400010],nxt[400010],father[400010],now,q[200010],tot;\nbool ans[200010],ext[200010];\nvoid add(int x,int y){\n    tot++;a[tot]=y;nxt[tot]=p[x];p[x]=tot;\n}\nint find(int x){\n    if (father[x]==x) return x;\n    father[x]=find(father[x]);\n    return father[x];\n}\nint main()\n{\n//    freopen(\"closing.in\",\"r\",stdin);\n//    freopen(\"closing.out\",\"w\",stdout);\n    scanf(\"%d%d\",&n,&m);\n    for (int i=1;i<=m;i++){\n        int x,y;scanf(\"%d%d\",&x,&y);\n        add(x,y);add(y,x);\n    }\n    for (int i=1;i<=n;i++){\n        scanf(\"%d\",&q[i]);father[i]=i;\n    }\n    now=0;\n    for (int i=n;i>=1;i--){\n        ++now;ext[q[i]]=true;\n        for (int j=p[q[i]];j!=0;j=nxt[j])\n          if (ext[a[j]]==true){\n                int r1,r2;\n                r1=find(q[i]);r2=find(a[j]);\n                if (r1!=r2){\n                     --now;father[r1]=r2;\n              }\n          }\n        if (now==1) ans[i]=true;\n    }\n    for (int i=1;i<=n;i++)\n      if (ans[i]==true) printf(\"YES\\n\");\n      else printf(\"NO\\n\");\n    return 0;\n}\n```",
        "postTime": 1514199240,
        "uid": 49223,
        "name": "Victorique",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3144 \u3010[USACO16OPEN]\u5173\u95ed\u519c\u573aClosing the Farm_Silver\u3011"
    },
    {
        "content": "\u53bb\u6389\u67d0\u4e2a\u70b9\u8fde\u7684\u8fb9\u518d\u5224\u65ad\u8fde\u901a\u6027\uff0c\u592a\u9ebb\u70e6\u3002\u8003\u8651\u5c06\u64cd\u4f5c\u5e8f\u5217\u53cd\u8fc7\u6765\uff0c\u53d8\u6210\u52a0\u5165\u67d0\u4e2a\u70b9\u548c\u70b9\u6240\u8fde\u7684\u8fb9\uff0c\u518d\u6765\u5224\u65ad\u8fde\u901a\u6027\u3002\n\n\u56e0\u4e3a\u65e0\u8bba\u6b63\u7740\u6216\u662f\u53cd\u8fc7\u6765\u64cd\u4f5c\uff0c\u540c\u4e00\u4e2a\u65f6\u523b\u6309\u7167\u8fd9\u79cd\u64cd\u4f5c\u65b9\u6cd5\uff0c\u5f97\u5230\u7684\u56fe\u662f\u76f8\u540c\u7684\uff0c\u56e0\u6b64\u8fde\u901a\u6027\u4e5f\u662f\u76f8\u540c\u7684\u3002\u79bb\u7ebf\u5904\u7406\uff0c\u5230\u65f6\u5019\u5c06\u7b54\u6848\u5e8f\u5217\u53cd\u8fc7\u6765\u8f93\u51fa\u5373\u53ef\u3002\n\n\u5982\u4f55\u65b9\u4fbf\u7684\u5224\u65ad\u76ee\u524d\u5f00\u542f\u7684\u70b9\u662f\u5426\u5168\u8fde\u901a\uff1f\u57fa\u672c\u64cd\u4f5c\u4f7f\u7528\u5e76\u67e5\u96c6\u3002\n\n\u5047\u8bbe\u76ee\u524d\u5df2\u7ecf\u6709\u4e00\u4e9b\u70b9\u5f00\u542f\u4e86\u3002\u7136\u540e\u52a0\u5165\u4e00\u4e2a\u5f00\u542f\u7684\u70b9\u3002\u6211\u4eec\u4f1a\u679a\u4e3e\u4e0e\u8be5\u70b9\u76f8\u8fde\u7684\u8fb9\u3002\u82e5\u8fb9\u7684\u53e6\u4e00\u7aef\u7684\u70b9\u4e5f\u5df2\u7ecf\u5f00\u542f\uff0c\u6211\u4eec\u5e94\u8be5\u5c06\u4e24\u70b9\u6240\u5c5e\u7684\u96c6\u5408\u5408\u5e76\u5728\u4e00\u8d77\uff0c\u5426\u5219\u5ffd\u7565\u8be5\u8fb9\u3002\u663e\u7136\u5982\u679c\u76ee\u524d\u4e3a\u6b62\u56fe\u662f\u5168\u8fde\u901a\u7684\uff0c\u8fd9\u4e2a\u5408\u5e76\u7684\u96c6\u5408\u7684\u5927\u5c0f\u5e94\u8be5\u7b49\u4e8e\u76ee\u524d\u5df2\u7ecf\u5f00\u542f\u7684\u70b9\u7684\u4e2a\u6570\uff0c\u5426\u5219\u5c31\u4e0d\u662f\u5168\u8fde\u901a\u3002\n\n\u4e8e\u662f\u6bcf\u6b21\u52a0\u5165\u65b0\u5f00\u542f\u7684\u70b9\uff0c\u6211\u4eec\u90fd\u5c06\u5176\u5b83\u76f8\u90bb\u7684\u96c6\u5408\u5408\u5e76\u5230\u65b0\u52a0\u5165\u7684\u70b9\u4e0a\uff0c\u7ef4\u62a4\u4e00\u4e0b\u6bcf\u4e2a\u96c6\u5408\u7684\u5927\u5c0f\u5373\u53ef\u3002\n\n\u7ec6\u8282\u89c1\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n/* \u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe */\nconst int N=3010,M=6010;\nint h[N],to[M],nexp[M],p=1;\ninline void ins(int a,int b){\n    nexp[p]=h[a],h[a]=p,to[p]=b,p++;\n}\n\n/* \u5e76\u67e5\u96c6 */\nint fa[N];\ninline int Find(int x){\n    if(!fa[x]) return x;\n    return fa[x]=Find(fa[x]);\n} \nint siz[N]; // \u5e76\u67e5\u96c6\u5927\u5c0f\ninline bool Union(int a,int b){\n    int af=Find(a),bf=Find(b);\n    if(af==bf) return false;\n    fa[af]=bf;\n    siz[bf]+=siz[af];\n    return true;\n}\n\nint con[N]; // \u64cd\u4f5c\u5e8f\u5217\nbool opend[N]; // \u6807\u8bb0\u70b9\u662f\u5426\u5df2\u7ecf\u5f00\u542f\nbool ans[N]; // \u7b54\u6848\u5e8f\u5217\n\nint main(){\n    ios::sync_with_stdio(false);\n    int n,m;\n    cin>>n>>m;\n    int u,v;\n    for(int i=0;i<m;i++)\n        cin>>u>>v,ins(u,v),ins(v,u);\n    for(int i=1;i<=n;i++)\n        cin>>con[i], siz[i]=1; // \u8f93\u5165\u64cd\u4f5c\u5e8f\u5217\uff0c\u521d\u59cb\u5316\u5e76\u67e5\u96c6\u5927\u5c0f\n    for(int i=n;i>=1;i--){ // \u5012\u5e8f\u5904\u7406\u64cd\u4f5c\u5e8f\u5217\n        int &x=con[i];\n        opend[x]=1;\n        for(int u=h[x];u;u=nexp[u])\n            if(opend[to[u]]) Union(to[u],x); // \u679a\u4e3e\u76f8\u90bb\u7684\u8fb9\uff0c\u5982\u679c\u53e6\u4e00\u4e2a\u70b9\u5f00\u542f\u5219\u5408\u5e76\n        if(siz[x]==n-i+1) ans[i]=1; // \u5982\u679c\u5e76\u67e5\u96c6\u7684\u5927\u5c0f\u662f\u73b0\u5728\u5df2\u7ecf\u5f00\u542f\u4e86\u7684\u70b9\u7684\u4e2a\u6570\u5219\u5168\u8fde\u901a\n        else ans[i]=0;\n    }\n    for(int i=1;i<=n;i++)\n        cout<<(ans[i]?\"YES\":\"NO\")<<endl; // \u6b63\u5e8f\u8f93\u51fa\u7b54\u6848\u5e8f\u5217\n    return 0;\n}\n```",
        "postTime": 1510141076,
        "uid": 5554,
        "name": "Sino_E",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3144 \u3010[USACO16OPEN]\u5173\u95ed\u519c\u573aClosing the Farm_Silver\u3011"
    },
    {
        "content": "\u697c\u4e0a\u5e76\u67e5\u96c6\u66b4\u529b\u627e\u8fde\u901a\u5757\u4e2a\u6570 \u5176\u5b9e\u53ef\u4ee5\u66f4\u5feb\u5730\u8ba1\u7b97\n\n\u52a0\u5165\u4e00\u4e2a\u8ba1\u6570\u5668 \u5f00\u59cb\u7684\u65f6\u5019\u8ba1\u6570\u4e3a0 \u6bcf\u6b21\u52a0\u5165\u4e00\u4e2a\u8282\u70b9\u540e \u8ba1\u6570\u5668\u52a0\u4e00 \u7136\u540e\u5f00\u59cb\u679a\u4e3e\u8fb9 \u5408\u5e76\n\n\u6bcf\u6b21\u6210\u529f\u5408\u5e76\u540e\u8ba1\u6570\u5668\u51cf\u4e00\uff08\u8fde\u901a\u5757\u51cf\u5c11\uff09\n\n\u5982\u679c\u5f53\u524d\u7684\u8ba1\u6570\u5668\u4e3a1\u7684\u8bdd\u5c31\u662f\u8054\u901a\u7684 \u4e0d\u7528\u6bcf\u6b21\u66b4\u529b\u641c\n\n\u5176\u4ed6\u7684\u5c31\u662f\u5e76\u67e5\u96c6\u7684\u57fa\u672c\u64cd\u4f5c \u6ce8\u610f\u6700\u540e\u5012\u5e8f\u8f93\u51fa\uff08\u7136\u800c\u53ea\u6709\u6211\u624d\u4f1asb\u5730\u6b63\u7740\u8f93\u51fa\u2026\u2026\uff09\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint n,m,next[6010],head[6010],point[6010],sum,open[6010],a[6010],step[6010],k,p,c,d;\nint ans[6010];\nint up(int x)\n{\n    if(a[x]!=x)\n    a[x]=up(a[x]);\n    return a[x];\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d\",&c,&d);\n        sum++;\n        next[sum]=head[c];\n        head[c]=sum;\n        point[sum]=d;\n        sum++;\n        next[sum]=head[d];\n        head[d]=sum;\n        point[sum]=c;\n    }\n    k=0;\n    for(int i=n;i>=1;i--)\n    {\n        a[i]=i;\n        scanf(\"%d\",&step[i]);\n    }\n    for(int i=1;i<=n;i++)\n    {\n        k++;\n        open[step[i]]=1;\n        p=head[step[i]];\n        while(p)\n        {\n            if(open[point[p]])\n            {\n                int ax=up(point[p]);\n                int ay=up(step[i]);\n                if(ax!=ay)\n                {\n                    a[ax]=ay;\n                    k--;\n                }\n            }\n            p=next[p];\n        }\n        ans[i]=k;\n    }\n    for(int i=n;i>=1;i--)\n    {\n        if(ans[i]==1)\n        printf(\"YES\\n\");\n        else\n        printf(\"NO\\n\");\n    }\n}\n```",
        "postTime": 1479278336,
        "uid": 17828,
        "name": "revenger",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3144 \u3010[USACO16OPEN]\u5173\u95ed\u519c\u573aClosing the Farm_Silver\u3011"
    },
    {
        "content": "\u6211\u7528\u7684\u662f\u704c\u6c34\u5224\u8054\u901a\uff08\u4e5f\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6 \u53cd\u5411\u8003\u8651 \u4ece\u6700\u540e\u4e00\u4e2a\u52a0\u70b9\u548c\u8fb9\uff09\n\n\u704c\u6c34\u7684\u8bdd\u76f4\u63a5\u5220\u5c31\u53ef\u4ee5\u4e86 3000\u7684\u89c4\u6a21 \u8fb9\u6211\u7528\u7684\u662f\u90bb\u63a5\u8868\u5b58 \u7136\u540e\u4e00\u4e2a\u4e2a\u5220\u70b9\u5220\u8fb9 \u6bcf\u6b21\u5224\u65ad\u4e00\u4e0b\u56fe\u662f\u5426\u8054\u901a \uff08\u4e00\u5f00\u59cb\u8fd8\u8981\u5224\u4e00\u6b21\u6574\u4e2a\u56fe\u7684\u8054\u901a\u60c5\u51b5\uff09 \u7136\u540e\u6211\u7528\u7684\u662f\u5bbd\u641c\u704c\u6c34 \u5e94\u8be5\u5feb\u4e00\u4e9b\u5427\n\n```cpp\nvar n,m,i,j,x,y,k:longint;\n    f:array[0..3000]of boolean;\n    a:array[0..3000,0..3000]of longint;\nfunction check(v:longint):boolean;\nvar i,j,s,x,y,l,r,sum:longint;\n    vis:array[0..3000]of boolean;\n    q:array[0..3000]of longint;\nbegin\nfillchar(vis,sizeof(vis),0);\nfor i:=1 to n do if not f[i] then begin s:=i; break; end;\nfillchar(q,sizeof(q),0);\nl:=1;r:=1;q[1]:=s;vis[s]:=true;sum:=1;\nwhile l<=r do\n      begin\n      x:=q[l];\n      for i:=1 to a[x][0] do\n            begin\n            y:=a[x][i];\n            if (not vis[y])and(not f[y]) then\n               begin\n               vis[y]:=true;inc(sum);\n               inc(r);q[r]:=y;\n               end;\n            end;\n      if sum=v then break;\n      inc(l);\n      end;\nif sum=v then exit(true)\n   else exit(false);\nend;\nbegin\nread(n,m);\nfor i:=1 to m do\n    begin\n    read(x,y);\n    inc(a[x][0]);a[x][a[x][0]]:=y;\n    inc(a[y][0]);a[y][a[y][0]]:=x;\n    end;\nif check(n) then writeln('YES')\n   else writeln('NO');\nfor i:=1 to n-1 do\n    begin\n    read(k);\n    f[k]:=true;\n    if check(n-i) then writeln('YES')\n       else writeln('NO');\n    end;\nread(k);\nend.\n```",
        "postTime": 1473172829,
        "uid": 19722,
        "name": "fy0123",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3144 \u3010[USACO16OPEN]\u5173\u95ed\u519c\u573aClosing the Farm_Silver\u3011"
    }
]