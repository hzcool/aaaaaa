[
    {
        "content": "dijkstra\u7684\u88f8\u9898\u5427\u3002  \n\u6b63\u7740\u8d70\u8fc7\u53bb\u7684\u65f6\u5019\u7528\u4e00\u4fbfdijkstra\u3002  \n\u8fd4\u56de\u65f6\u5c31\u5efa\u4e2a\u8fd4\u56fe\u8dd1\u4e00\u904ddijkstra\u3002  \n\u53cd\u56fe\u53ef\u4ee5\u628a\u6240\u6709\u7ed3\u70b9\u7684\u7f16\u53f7$+n$\u5efa\u5728\u539f\u56fe\u7684\u4f53\u7cfb\u4e2d\u3002  \n```cpp\n#include <cstdio>\n#include <cstring>\n#include <queue>\n#define ll long long\n\nusing namespace std;\n\nconst int maxn = 1234, maxm = 123456;\nll inf = 9000000000000000;\nint head[maxn << 1], ver[maxm << 1], wei[maxm << 1], nex[maxm << 1], tot, n;\nvoid addedge(int u, int v, int w) {\n    ver[tot] = v; wei[tot] = w; nex[tot] = head[u]; head[u] = tot++;\n}\n\nstruct nodeq {\n    int x;\n    ll dis;\n    nodeq(int X, ll DIS) :  x(X), dis(DIS) {}\n    bool operator > (const nodeq& o) const { return dis > o.dis; }\n};\npriority_queue< nodeq, vector<nodeq>, greater<nodeq> > q;\nll dis[maxn << 1];\nvoid dij(int s) {\n    for(int i = 1; i <= n << 1; ++i) dis[i] = inf;\n    dis[s] = 0;\n    q.push(nodeq(s, 0));\n    while(!q.empty()) {\n        nodeq cur = q.top(); q.pop();\n        if(dis[cur.x] < cur.dis) continue;\n        for(int i = head[cur.x]; ~i; i = nex[i]) {\n            if(dis[ver[i]] > cur.dis + wei[i]) {\n                dis[ver[i]] = cur.dis + wei[i];\n                q.push(nodeq(ver[i], dis[ver[i]]));\n            }\n        }\n    }\n}\n\nint main() {\n    memset(head, -1, sizeof(head));\n    int m, u, v, w;\n    ll ans = 0;\n    scanf(\"%d %d\", &n, &m);\n    for(int i = 1; i <= m; ++i) {\n        scanf(\"%d %d %d\", &u, &v, &w);\n        addedge(u, v, w);\n        addedge(v + n, u + n, w);\n    }\n    dij(1);\n    for(int i = 2; i <= n; ++i) ans += dis[i];\n    dij(1 + n);\n    for(int i = 2 + n; i <= n << 1; ++i) ans += dis[i];\n    printf(\"%lld\\n\", ans);\n    return 0;\n}\n\n```\n",
        "postTime": 1579329317,
        "uid": 88735,
        "name": "\u5bd2\u9e3d\u513f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1629 \u3010\u90ae\u9012\u5458\u9001\u4fe1\u3011"
    },
    {
        "content": "# $N^3$\u8fc7\u4e07\uff0c\u7206\u8e29\u6807\u7b97\n# $Floyed AC$\n# \u849f\u84bb\u7684\u798f\u97f3\n\n------------\n**\u770b\u5230\u9898\u89e3\u91cc\u6ca1\u6709\u7528$Floyed$ $AC$\u7684\uff0c\u6211\u5c31\u6765\u51d1\u4e2a\u70ed\u95f9\u3002**\n\n**\u8fd9\u9898\u662f\u59a5\u59a5\u7684\u6700\u77ed\u8def\uff0c\u53ef\u662f\u672c\u849f\u84bb\u4e0d\u4f1a\u6253$dijkstra$\u5806\u4f18\u5316\uff0c\u4e5f\u4e0d\u4f1a\u6253\u67d0\u5df2\u6b7b\u7b97\u6cd5\uff0c\u53ea\u597d\u7528$Floyed$+\u6307\u4ee4\u96c6\u4f18\u5316\u6c34\u6389\u8fd9\u9053\u9898\uff0c\u6c42\u5de8\u4f6c\u8f7b\u55b7\u3002\uff08\u9003**\n\n**\u4ee3\u7801\u5982\u4e0b\uff1a**\n```cpp\n// luogu-judger-enable-o2\n// C++11\n#pragma GCC optimize(\"Ofast,no-stack-protector,unroll-loops,fast-math\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4.1,sse4.2,avx,avx2,popcnt,tune=native\")\n#include <immintrin.h>\n#include <emmintrin.h>\n#include <bits/stdc++.h>\n#define ri register int\nusing namespace std;\ninline int read(){\n    int x=0,f=1;char ch=getchar();\n    while(!isdigit(ch)){if(ch=='-')f=-1;ch=getchar();}\n    while(isdigit(ch)){x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}\n    return x*f;\n}\nint n,m,dis[1005][1005];\nint main(){\n    memset(dis,0x3f,sizeof(dis));\n    n=read();m=read();\n    for(ri i=1,x,y,z;i<=m;++i){\n        x=read();y=read();z=read();\n        dis[x][y]=min(dis[x][y],z);\n    }\n    for(ri k=1;k<=n;++k)\n        for(ri i=1;i<=n;++i)\n            for(ri j=1;j<=n;++j)\n                dis[i][j]=min(dis[i][k]+dis[k][j],dis[i][j]);\n    int ans=0;\n    for(ri i=2;i<=n;++i)\n        ans+=(dis[i][1]+dis[1][i]);\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1564896412,
        "uid": 62246,
        "name": "Del_Your_Heart",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1629 \u3010\u90ae\u9012\u5458\u9001\u4fe1\u3011"
    },
    {
        "content": "\u5e9f\u8bdd\u4e0d\u8bf4\uff0c\u76f4\u63a5\u5207\u6b63\u9898\uff1a\n\n\u9996\u5148\uff0c\u53ea\u770b\u90ae\u9012\u5458\u51fa\u53d1\u53bb\u9001\u4fe1\u7684\u8fc7\u7a0b\uff0c\u4f1a\u53d1\u73b0\u8fd9\u662f\u5355\u6e90\u6700\u77ed\u8def\u5f84\u3002\n\n\u4f46\u662f\uff0c\u8fd9\u9053\u9898\u8fdc\u8fdc\u6ca1\u6709\u8fd9\u4e48\u7b80\u5355\u3002\n\n\u518d\u770b\u90ae\u9012\u5458\u56de\u6765\uff0c\u4f1a\u53d1\u73b0\u8fd9\u53d8\u6210\u4e86\u591a\u6e90\u5355\u7ec8\u70b9\u7684\u6700\u77ed\u8def\u5f84\u3002\n\n\u8fd9\u65f6\uff0c\u5c0f\u4f19\u4f34\u4eec\u5c31\u8981\u60f3\u4e86\uff1a\u7528\u591a\u6e90\u6700\u77ed\u8def\u5f84\u5427\uff01\n\n\u606d\u559c\u4f60\uff0c\u4f60\u53ef\u4ee5\u62ff\u523040\u5206\u3002\n\n\u7531\u4e8e\u591a\u6e90\u6700\u77ed\u8def\u5f84\u7684\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u8f83\u5927\uff0c\u7528\u5728\u8fd9\u91cc\u663e\u7136\u592a\u6162\u4e86\u3002\n\n\u6240\u4ee5\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u8981\u5f00\u8111\u6d1e\u4e86\uff1a\n\n1.\u672c\u9898\u4e3a\u5e26\u6743\u6709\u5411\u56fe\uff1b\n\n2.\u53bb\u7684\u65f6\u5019\u662f\u4e00\u5230\u591a\uff0c\u56de\u6765\u7684\u65f6\u5019\u662f\u591a\u5230\u4e00\uff1b\n\n3.\u6240\u4ee5\u56de\u6765\u7684\u65f6\u5019\u5982\u679c\u4e5f\u662f\u4e00\u5230\u591a\u5c31\u5b8c\u7f8e\u4e86\u3002\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u5c31\u6709\u4e86\u4e00\u4e2a\u5173\u952e\u6027\u7684\u7a81\u7834\u70b9\uff1a\u628a\u90bb\u63a5\u77e9\u9635\u5012\u8fc7\u6765\uff01\n\n\u4e0b\u9762\u5173\u5634\u653e\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint a[1005][1005],d[1005],i,j;\nconst int INF=1e9;\nvoid chushi(int n)//\u90bb\u63a5\u77e9\u9635\u521d\u59cb\u5316\n{\n    for(i=1;i<=n;i++)\n    {\n        for(j=1;j<=n;j++)\n        {\n            if(i!=j)\n            a[i][j]=INF;//\u6c42\u6700\u77ed\u8981\u521d\u59cb\u5316\u4e3a\u65e0\u9650\u5927\n        }\n    }\n}\nvoid dij(int n)//\u5355\u6e90\u6700\u77ed\u8def\u5f84\n{\n    bool f[1005]={0};\n    f[1]=1;\n    int v;\n    for(i=1;i<n;i++)\n    {\n        int min=INF;\n        for(j=1;j<=n;j++)\n        {\n            if(!f[j]&&min>d[j])//\u627e\u672a\u6807\u8bb0\u4e2d\u6700\u5c0f\u7684\n            {\n                min=d[j];\n                v=j;\n            }\n        }\n        f[v]=1;//\u6807\u8bb0\n        for(j=1;j<=n;j++)\n        {\n            if(!f[j]&&a[v][j]+d[v]<d[j])//\u66f4\u65b0\u8def\u5f84\u957f\u5ea6\n            {\n                d[j]=a[v][j]+d[v];\n            }\n        }\n    }\n}\nvoid over(int n)//\u7ffb\u8f6c\n{\n    for(i=1;i<=n;i++)\n    {\n        for(j=i+1;j<=n;j++)//\u83dc\u9e1f\u7ea7\u77e5\u8bc6\u4e0d\u89e3\u91ca\n        {\n            int t=0;\n            t=a[i][j];\n            a[i][j]=a[j][i];\n            a[j][i]=t;\n        }\n    }\n}\nint main()\n{\n    int n,m,x,y,z;\n    cin>>n>>m;\n    chushi(n);\n    for(i=1;i<=m;i++)\n    {\n        cin>>x>>y>>z;\n        a[x][y]=min(a[x][y],z);//\u907f\u5751\uff1a\u9632\u6b62\u540c\u4e00\u6761\u8def\u591a\u6b21\u8f93\u5165\uff01\n    }\n    for(i=1;i<=n;i++)\n    {\n        d[i]=a[1][i];//\u8def\u5f84\u957f\u5ea6\u521d\u59cb\u5316\n    }\n    dij(n);\n    int ans;\n    for(i=1;i<=n;i++)\n    {\n        ans+=d[i];\n    }\n    over(n);//\u7ffb\u8f6c\n    for(i=1;i<=n;i++)//\u8def\u5f84\u957f\u5ea6\u521d\u59cb\u5316\n    {\n        d[i]=a[1][i];\n    }\n    dij(n);\n    for(i=1;i<=n;i++)\n    {\n        ans+=d[i];//\u6c42\u548c\n    }\n    cout<<ans<<endl;//\u534e\u4e3d\u5730\u8f93\u51fa\n    return 0;\n}\n```",
        "postTime": 1545037054,
        "uid": 86388,
        "name": "renyanhao",
        "ccfLevel": 0,
        "title": "P1629\u90ae\u9012\u5458\u9001\u4fe1 \u9898\u89e3"
    },
    {
        "content": "P1629 \u90ae\u9012\u5458\u9001\u4fe1\u9898\u89e3\u62a5\u544a\n\n\u5206\u6790\uff1a\u8fd9\u662f\u4e00\u9053\u6700\u77ed\u8def\u95ee\u9898\uff0c\u6211\u4eec\u9996\u5148\u60f3\u5230\u4e86floyd\uff0cdijkstra\uff0cbellman-ford\uff08spfa\uff09\u7b97\u6cd5\uff0c\u4f46\u662f\u8fd9\u9053\u9898n<=1000\u4e14\u8def\u5f84\u8ddd\u79bb\u7686\u4e3a\u6b63\u6574\u6570\uff0c\u6240\u4ee5\u7528dijkstra\u6216bellman\uff0c\u8fd9\u9898\u6211\u7528\u4e86bellman\u3002\n\n\u4f46\u662f\u6211\u4eec\u53c8\u770b\u5230\uff0c\u8fd9\u662f\u6709\u5411\u56fe\uff0c\u800c\u4e14\u90ae\u9012\u5458\u9001\u5b8c\u8d27\u7269\u4e4b\u540e\u8fd8\u8981\u8fd4\u56de\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u4ece\u4e00\u5230\u591a\u8dd1\u5b8c\u6700\u77ed\u8def\u540e\u8fd8\u8981\u4ece\u591a\u5230\u4e00\u8dd1\u56de\u6765\uff0c\u4ece\u4e00\u5230\u591a\u5f88\u5bb9\u6613\uff0c\u4f46\u662f\u4ece\u591a\u5230\u4e00\u600e\u4e48\u529e\u5462\uff1f\n\n\u8fd9\u65f6\u5019\u6211\u4eec\u60f3\uff1a\n#### \u5047\u8bbe\u8981\u95ee\u4ecex\u52301\u7684\u6700\u77ed\u8def\uff0c\u4e3ax->a->b->c->1,\u4e5f\u5c31\u662f\u8bf4x->a,a->b,b->c,c->1\u90fd\u6709\u8def\u53ef\u8d70\uff0c\u90a3\u4e48\u6211\u4eec\u60f3\u60f3\uff0c\u4ecex\u5f00\u59cbx->a,a->b,b->c,c->1\u7684\u6700\u77ed\u8def\u4e0d\u5c31\u662f\u4ece1\u5f00\u59cb1->c,c->b,b->a,a->x\u7684\u6700\u77ed\u8def\u5417\uff1f\u4e8e\u662f\u8fd9\u65f6\uff0c\u6211\u4eec\u628ax->a,a->b,b->c,c->1\u8fd94\u6761\u8def\u5f84\u53d8\u4e3a1->c,c->b,b->a,a->x\uff0c\u7136\u540e\u4ece1\u5f00\u59cb\u8dd1\u6700\u77ed\u8def\uff0c\u800c\u5b83\u4eec\u7684\u6700\u77ed\u8def\u662f\u4e00\u6837\u7684\u3002\n\n\u6211\u4eec\u628a\u8fd9\u6837\u4ece\u591a\u5230\u4e00\u7684\u6700\u77ed\u8def\u53d8\u5f0f\u7684\u8def\u5f84\u53cd\u8f6c\u64cd\u4f5c\u79f0\u4f5c\u201c**\u53cd\u5411\u5efa\u8fb9**\u201d\u3002\n\n\u5176\u4ed6\u6ce8\u91ca\u653e\u5230\u4ee3\u7801\u91cc\uff0c\u8fd8\u6709\u4e00\u70b9\uff0c\u6211\u7528\u7684bellman\u6ca1\u52a0\u961f\u5217\u4f18\u5316.\n\n\u8017\u65f6/\u5185\u5b581809ms,\u00a01936KB\n\nCode:\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int INF=99999999;//\u5b9a\u4e49\u6700\u5927\u503c\u3002\u6ce8\u610f\u4e0d\u8981\u8bbe0x7fffffff, \u52a0\u7684\u65f6\u5019\u4f1a\u7206int \nint n,m;\nint u[100005],v[100005],w[100005];//\u5f00\u597d\u6570\u7ec4\uff0c\u522bRE\u4e86 \nint dis[1005];\nvoid init(){//\u521d\u59cb\u5316 \n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)scanf(\"%d%d%d\",&u[i],&v[i],&w[i]);// u\u8d77\uff0cv\u7ec8\uff0cw\u957f\u5ea6 \n}\nvoid over(){//\u8fd9\u662f\u4e00\u4e2a\u53cd\u5411\u5efa\u8fb9\u7684\u51fd\u6570\uff0c\u628a\u8d77\u70b9\u548c\u7ec8\u70b9\u4e92\u6362 \uff0c\u597d\u8ba9\u90ae\u9012\u5458\u8fd4\u56de\u65f6\u4ece\u591a\u5230\u4e00\u8dd1\u6700\u77ed\u8def \n\tfor(int i=1;i<=m;i++){\n\t\tswap(u[i],v[i]);\n\t}\n} \nvoid ford(){//\u6807\u51c6bellman-ford\u6a21\u677f \n\tfor(int i=1;i<=n;i++)dis[i]=INF;\n\tdis[1]=0;\n\tfor(int k=1;k<=n-1;k++){\n\t\tfor(int i=1;i<=m;i++){\n\t\t\tif(dis[v[i]]>dis[u[i]]+w[i]){\n\t\t\t\tdis[v[i]]=dis[u[i]]+w[i];\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tinit();\n\tint ans=0;\n\tford();//\u8dd1\u6700\u77ed\u8def \n\tfor(int i=1;i<=n;i++)ans+=dis[i];//\u4ece\u4e00\u5230\u591a \n\tover();//\u53cd\u8f6c\uff0c\u53cd\u5411\u5efa\u8fb9 \n\tford();//\u8dd1\u6700\u77ed\u8def \n\tfor(int i=1;i<=n;i++)ans+=dis[i];//\u4ece\u591a\u5230\u4e00 \n\tprintf(\"%d\\n\",ans);\n\treturn 0;//\u5b8c\u7ed3\u6492\u82b1\n}\n//\u4ee3\u7801\u751a\u77edqwq \n",
        "postTime": 1559889811,
        "uid": 108758,
        "name": "crzyz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1629 \u3010\u90ae\u9012\u5458\u9001\u4fe1\u3011"
    },
    {
        "content": "\u6211\u8fd9\u4e2a\u849f\u84bb\u7b2c\u4e00\u773c\u770b\u5230\u8fd9\u4e2a\u9898\n\u54c7\uff01\u6211\u53ea\u8981\u5f001\u6b21SPFA\u5c31\u80fdA\u4e86\uff0c\u8fd9\u9898\u771f\u6c34\uff01\n\n****\u5f53\u6211\u770b\u9898\u76ee\u65f6:\u54c7\uff01\u6bcf\u6b21\u53ea\u80fd\u5e261\u4e2a\u4fe1\u4ef6\uff0c\u8981\u56de\u53bb\u62ff\uff01\u4e5f\u5c31n\u6b21SPFA\u5427\uff01\n\n\u8fd9\u65f6\u6211\u770b\u5230\u4e86\u6570\u636e\u8303\u56f4\uff0cN\u6b21SPFA\u4e00\u5b9a\u70b8\n\n\u4e8e\u662f\u6211\u60f3\u5230\u4e86\u4e00\u4e2a\u597d\u65b9\u6cd5\uff0c\u75281\u6b21SPFA\u627e\u5404\u4e2a\u70b9\u5230\u70b91\u7684\u6700\u77ed\u8def\n\n\u7136\u540e\u5f00\u4e00\u4e2a\u53cd\u5411\u56fe\uff0c\u518d\u7528SPFA\u641c\u4e00\u4e0b\u70b91\u5230\u53cd\u5411\u56fe\u5404\u4e2a\u70b9\u7684\u6700\u77ed\u8def\n\n\u8fd9\u65f6\u6211\u4eec\u53d1\u73b0\u53cd\u5411\u56fe\u4e2d\u70b91\u5230\u5404\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u5c31\u662f\u666e\u901a\u56fe\u4e2d\u5404\u4e2a\u70b9\u5230\u70b91\u7684\u6700\u77ed\u8def\uff01\uff01\uff01\n\n\u8bdd\u4e0d\u591a\u8bf4\u4e0a\u4ee3\u7801\n\n```\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934\u6587\u4ef6\nusing namespace std;\nint n,m,q[1001*1001][2],e[1001][1001][2],head,tail,x,y,z,vis[1001],vis1[1001],ans;\n//q\u4ee3\u8868\u961f\u5217\uff0cVIS\u4ee3\u8868\u70b91\u5230\u5404\u4e2a\u70b9\u7684\u6700\u77ed\u8def\uff0cVIS1\u7684\u4f5c\u7528\u540e\u9762\u4f60\u4f1a\u77e5\u9053\nint main()\n{\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tvis[i]=2147483647;\n\t\t\te[i][j][0]=e[i][j][1]=2147483647;//\u795e\u5947\u7684\u521d\u59cb\u5316\n\t\t}\n\t}\n\tvis[1]=0;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcin>>x>>y>>z;\n\t\te[x][y][0]=min(e[x][y][0],z);//\u666e\u901a\u56fe\n\t\te[y][x][1]=min(e[y][x][1],z);//\u53cd\u5411\u56fe\n\t}\n\thead=1;tail=1;q[head][0]=1;q[head][1]=0;//\u521d\u59cb\u5316\u961f\u5217\n\twhile(head<=tail)\n\t{\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tif(e[q[head][0]][i][0]==2147483647) continue;\n\t\t\tint ns=q[head][1]+e[q[head][0]][i][0];\n            //ns\u7528\u6765\u66f4\u65b0\u8def\u5f84\u957f\n\t\t\tif(ns>vis[i]) continue;\n\t\t\ttail++;q[tail][0]=i;q[tail][1]=ns;\n\t\t\tvis[i]=ns;\n\t\t}\n\t\thead++;\n\t}\n\tfor(int i=2;i<=n;i++)\n\t{\n\t\tvis1[i]=vis[i];//\u6211\u4eec\u628a\u4e4b\u524d\u7b97\u597d\u7684vis\u7684\u503c\u8d4b\u7ed9vis1\n    \t//\u4e0d\u8981\u95ee\u6211\u4e3a\u4ec0\u4e48\u8fd9\u6837\uff0c\u6211\u53ea\u662f\u4e00\u4e2a\u5c0f\u849f\u84bb\n\t\tvis[i]=2147483647;\n\t}\n\thead=tail=1;q[head][0]=1;q[head][1]=0;\n\twhile(head<=tail)\n\t{\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t\tif(e[q[head][0]][i][1]==2147483647) continue;\n\t\t\tint nns=q[head][1]+e[q[head][0]][i][1];\n\t\t\tif(nns>vis[i]) continue;\n\t\t\ttail++;q[tail][0]=i;q[tail][1]=nns;\n\t\t\tvis[i]=nns;\n\t\t}\n\t\thead++;\n\t}//\u539f\u7406\u540c\u4e0a\u4e0d\u591a\u89e3\u91ca\n\tfor(int i=2;i<=n;i++) ans=ans+vis[i]+vis1[i];\n    //\u5f97\u51fa\u70b91\u5230\u5404\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u548c\u5404\u4e2a\u70b9\u5230\u70b91\u7684\u6700\u77ed\u8def\u7684\u548c\n\tcout<<ans;//\u5b8c\u7f8e\u8f93\u51fa\n}\n```",
        "postTime": 1534567117,
        "uid": 39129,
        "name": "WSQTCL",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1629 \u3010\u90ae\u9012\u5458\u9001\u4fe1\u3011"
    },
    {
        "content": "\u8fd9\u662f\u6211\u4eec\u6628\u5929\u8003\u8bd5\u7684\u9898\u76ee\uff0c\u6211\u9996\u5148\u6572\u4e86\u4e00\u4e2a**Dijkstra**\uff0c\u7136\u540e\u6572\u4e86\u4e00\u4e2aFloyed\uff0c\u7136\u540e\u6bd4\u8f83\u65f6\u95f4\uff0cFloyed\u786e\u5b9e\u8981\u5feb\n\n\u4f46\u662f\uff01\n\n\u6211\u62ff\u4e86\u524d\u51e0\u6b21\u8003\u8bd5\u7684\u56fe\u8bba\u9898\u6570\u636e\u6765\u6d4b\uff0c\u53d1\u73b0\u4e8b\u60c5\u5e76\u4e0d\u53ea\u6709\u8fd9\u4e48\u7b80\u5355\n\nFloyed\u603b\u662f\u6bd4Dijkstra\u8dd1\u51fa\u6765\u7684\u8981\u5927\uff0c\u6211\u5c31\u5f88\u7eb3\u95f7\u4e86\n\n\u7ed3\u8bba\uff1a**\u7528Floyed\uff08\u4e5f\u5c31\u662f\u90bb\u63a5\u77e9\u9635\u5b58\u56fe\uff09\u4e00\u5b9a\u8981\u5224\u91cd\u8fb9\uff0c\u91cd\u8fb9\uff0c\u91cd\u8fb9**\n\n###Floyed \u5224\u91cd\u8fb9 \u2014\u201440\u5206\n\n```cpp\ninline void Floyed()\n{\n    for (int k=1;k<=n;k++)\n    {\n        for (int i=1;i<=n;i++)\n        {\n            if (dist[i][k]<INF)\n                for (int j=1;j<=n;j++)\n                    if (dist[i][j]>dist[i][k]+dist[k][j])\n                        dist[i][j]=dist[i][k]+dist[k][j];\n        }\n    }\n    for (int i=2;i<=n;i++)\n        tot=tot+dist[1][i]+dist[i][1];\n    printf(\"%d\\n\",tot);\n}\n###Dijkstra\u2014\u2014\u672a\u77e5\uff08\u6ca1\u6709\u6d4b\uff09\ninline void Dijkstra(int Modric)\n{\n    priority_queue<HeapNode> Q;\n    for (int i=1;i<=n;i++) dis[i]=INF;\n    dis[Modric]=0;\n    memset(exist,0,sizeof(exist));\n    Q.push((HeapNode){0,Modric});\n    while (!Q.empty())\n    {\n        HeapNode x=Q.top();Q.pop();\n        int u=x.u;\n        if (exist[u]) continue;\n        exist[u]=true;\n        for (int i=head[u];i;i=edge[i].next)\n        {\n            int temp=edge[i].to;\n            if (dis[temp]>dis[u]+edge[i].v)\n            {\n                dis[temp]=dis[u]+edge[i].v;\n                Q.push((HeapNode){dis[temp],temp});\n            }\n        }\n    }\n}\n```\n###SPFA\u2014\u201470\u5206 \u4ee3\u7801\u5c31\u4e0d\u8d34\u4e86\n**\u6b63\u89e3**\n\n**\u6c42\u5176\u4ed6\u70b9\u5230\u6e90\u70b9\u7684\u8ddd\u79bb\u4e0d\u9700\u8981\u679a\u4e3e\u5176\u4ed6\u70b9\u8dd1\u6700\u77ed\u8def\uff0c\u5efa\u53cd\u5411\u8fb9\u5c31\u53ef\u4ee5\u4e86\u2026**\n\n\u5728\u666e\u901a\u7684Dijkstra\u52a0\u4e0a\u4e2a\u201cf\u201d\n\n    \n```cpp\ninline void add(int x,int y,int v)\n{\n    edge[++cnt].to=y;\n    edge[cnt].v=v;\n    edge[cnt].next=head[x];\n    head[x]=cnt;\n    fedge[cnt].to=x;\n    fedge[cnt].v=v;\n    fedge[cnt].next=fhead[y];\n    fhead[y]=cnt;\n}\n```\n\u53d8\u91cf\u4e5f\u662f\n```cpp\nint dis[maxn],n,m,ans;\nbool exist[maxn];\nint fdis[maxn];\nbool fexist[maxn];\n```\n\u7136\u540e\u8dd1\u4e24\u904dDijkstra\u2014\u2014AC\n    \n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<algorithm>\n#include<cmath>\n#include<cstring>\n#define INF (1<<30)-1\n#define maxn 200010\n#include<queue>\nusing namespace std;\ninline int read()\n{    \n     int x=0; char ch=getchar();\n     while (ch<'0' || ch>'9') ch=getchar();\n     while (ch>='0' && ch<='9'){ x=x*10+ch-'0'; ch=getchar(); }\n     return x;\n}   \nstruct HeapNode\n{\n    int d,u;\n    bool operator<(const HeapNode & rhs) const\n    {\n        return d>rhs.d;\n    }\n};\nstruct node\n{\n    int to,next,v;\n}edge[1000000+10],fedge[1000010];\nint cnt,head[maxn],fhead[maxn];\ninline void add(int x,int y,int v)\n{\n    edge[++cnt].to=y;\n    edge[cnt].v=v;\n    edge[cnt].next=head[x];\n    head[x]=cnt;\n    fedge[cnt].to=x;\n    fedge[cnt].v=v;\n    fedge[cnt].next=fhead[y];\n    fhead[y]=cnt;\n}\nint dis[maxn],n,m,ans;\nbool exist[maxn];\nint fdis[maxn];\nbool fexist[maxn];\ninline void Dijkstra()\n{\n    priority_queue<HeapNode> Q;\n    for (int i=1;i<=n;i++) dis[i]=INF;\n    dis[1]=0;\n    memset(exist,0,sizeof(exist));\n    Q.push((HeapNode){0,1});\n    while (!Q.empty())\n    {\n        HeapNode x=Q.top();Q.pop();\n        int u=x.u;\n        if (exist[u]) continue;\n        exist[u]=true;\n        for (int i=head[u];i;i=edge[i].next)\n        {\n            int temp=edge[i].to;\n            if (dis[temp]>dis[u]+edge[i].v)\n            {\n                dis[temp]=dis[u]+edge[i].v;\n                Q.push((HeapNode){dis[temp],temp});\n            }\n        }\n    }\n}\ninline void FDijkstra()\n{\n    priority_queue<HeapNode> Q;\n    for (int i=1;i<=n;i++) fdis[i]=INF;\n    fdis[1]=0;\n    memset(fexist,0,sizeof(fexist));\n    Q.push((HeapNode){0,1});\n    while (!Q.empty())\n    {\n        HeapNode x=Q.top();Q.pop();\n        int u=x.u;\n        if (fexist[u]) continue;\n        fexist[u]=true;\n        for (int i=fhead[u];i;i=fedge[i].next)\n        {\n            int temp=fedge[i].to;\n            if (fdis[temp]>fdis[u]+fedge[i].v)\n            {\n                fdis[temp]=fdis[u]+fedge[i].v;\n                Q.push((HeapNode){fdis[temp],temp});\n            }\n        }\n    }\n}\nint main()\n{\n    freopen(\"post.in\",\"r\",stdin);\n    freopen(\"post.out\",\"w\",stdout);\n    int x,y,v;\n    n=read();m=read();\n    for (int i=1;i<=m;i++)\n    {\n        x=read(),y=read(),v=read();\n        add(x,y,v);\n    }\n    Dijkstra();FDijkstra();\n    for (int i=2;i<=n;i++)\n        ans=ans+dis[i]+fdis[i];\n    printf(\"%d\\n\",ans);\n}\n```",
        "postTime": 1508210625,
        "uid": 28571,
        "name": "\u83ab\u5fb7\u91cc\u5947",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1629 \u3010\u90ae\u9012\u5458\u9001\u4fe1\u3011"
    },
    {
        "content": "\u7b80\u5355\u7684\u6700\u77ed\u8def\u95ee\u9898\uff0c\u6b64\u9898n<=1000,m<=100000,\u5efa\u8bae\u4f7f\u7528dijkstra\u6216SPFA\u3002**\u9053\u7406\u6211\u90fd\u61c2\uff0c\u53ef\u662f\u6211\u5c31\u662f\u8981\u7528Floyd\uff01**\n\nFloyd\u5438\u6c27\u4e4b\u540e\u662f\u53ef\u4ee5\u5361\u8fc7\u53bb\u7684\uff0c\n```\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nlong long f[1001][1001];\nint main()\n{\n    long long i,n,m,u,v,w,j,k,ans=0;\n    scanf(\"%lld%lld\",&n,&m); \n    for(i=1;i<=n;i++)\n    for(j=1;j<=n;j++)\n    f[i][j]=0x7fffffff;\n    for(i=1;i<=m;i++)\n    {\n        scanf(\"%lld%lld%lld\",&u,&v,&w);\n        f[u][v]=min(f[u][v],w);\n    }\n    for(k=1;k<=n;k++)\n    for(i=1;i<=n;i++)\n    for(j=1;j<=n;j++)\n    if(f[i][j]>f[i][k]+f[k][j])\n    f[i][j]=f[i][k]+f[k][j];//Floyd\u6838\u5fc3\u8bed\u53e5 \n    for(i=2;i<=n;i++)\n    ans+=f[1][i]+f[i][1];// \u8ba1\u7b97\u603b\u957f\u5ea6\uff0c\u6bcf\u6b21\u53ea\u80fd\u5e26\u4e00\u4ef6\uff0c\u5373\u4e3a 1\u5230i\u8ddd\u79bb\u52a0\u4e0ai\u52301\u8ddd\u79bb \n    printf(\"%lld\",ans);\n    return 0;\n}\n```\n\n\u849f\u84bb\u7684\u7b2c\u4e8c\u7bc7\u9898\u89e3\uff0c\u6c42\u901a\u8fc7\u3002",
        "postTime": 1576908507,
        "uid": 239859,
        "name": "\u83dc\u9e21gyf",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P1629 \u3010\u90ae\u9012\u5458\u9001\u4fe1\u3011"
    },
    {
        "content": "##  ~~\u8bba\u5982\u4f55\u501f\u52a9\u6d1b\u8c37\u795e\u673a\u8fc7O\uff08n3\uff09QWQ~~\n#### \u672c\u6765\u6211\u770b\u4e86\u770b\u9898\uff0c\u60f3\u7528Floyd-Warshall\u7b97\u6cd5\uff0c\u53d1\u73b0n\u5230\u4e861000\uff0c\u663e\u7136Floyd\u662f\u8fc7\u4e0d\u4e86\u7684\uff08\u96fe\uff09\u3002\u4e8e\u662f\u8001\u8001\u5b9e\u5b9e\u5730\u5199\u4e86Dijkstra\u3002\n\n#### \u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0cDijkstra\u600e\u4e48\u5199\u5462\u3002\u9898\u7684\u5927\u610f\u662f\uff1a\u6c42\u70b91\u5230\u5176\u4f59\u6240\u6709\u70b9\u7684\u6700\u77ed\u8def\uff0c\u53ca\u5176\u4f59\u6240\u6709\u70b9\u5230\u70b91\u7684\u6700\u77ed\u8def\uff0c\u4e4b\u540e\u6c42\u548c\u5c31\u884c\u4e86\u3002\n\n#### \u663e\u7136\uff1a\u6c42\u70b91\u5230\u5176\u4f59\u6240\u6709\u70b9\u7684\u6700\u77ed\u8def\u5f88\u7b80\u5355\uff0c\u5c31\u662fDijkstra\u7684\u677f\u5b50\u3002\u90a3\u4e48\u6240\u6709\u70b9\u5230\u70b91\u7684\u6700\u77ed\u8def\u600e\u4e48\u6c42\u5462\uff1f\u4e8e\u662f\uff0c\u6211\u6709\u4e86\u4e00\u4e2a\u5927\u80c6\u7684\u60f3\u6cd5\uff08emmmm\uff09\u53d6\u53cd\u5411\u56fe\uff0c\u518d\u7528Dijkstra\u7684\u677f\u5b50\u6c42\u51fa\u53cd\u5411\u56fe\u4e2d\u70b91\u5230\u5176\u4f59\u6240\u6709\u70b9\u7684\u6700\u77ed\u8def\u3002\u4e4b\u540e\u6c42\u548c\u5c31\u884c\u4e86\u3002\n\n### \u4e0b\u9762\u8d34\u4e0aDijkstra\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<memory.h>\n#include<algorithm>\n#define maxn 99999999\n#define r register\nusing namespace std;\nint arr1[1001][1001];\nint arr2[1001][1001];\nbool book1[1001],book2[1001];\nint p1[1001],p2[1001];\nint n,m;\nint st,ed,val;\nlong long ans;\n\ninline int minx(int a,int b)\n{\n\treturn a>b?b:a;\n}\n\ninline int qr()\n{\n\tchar a=0;int x=0,w=1;\n\twhile(a<'0'||a>'9'){if(a=='-')w=-1;a=getchar();}\n\twhile(a>='0'&&a<='9'){x=(x<<3)+(x<<1)+(a^48);a=getchar();}\n\treturn x*w;\n}\nint main()\n{\n\tn=qr();\n\tm=qr();\n\tfor(r int i=1;i<=n;i++)\n\t{\n\t\tfor(r int j=1;j<=n;j++)\n\t\t{\n\t\t\tarr1[i][j]=maxn;\n\t\t\tarr2[i][j]=maxn;\n\t\t}\n\t\tarr1[i][i]=0;\n\t\tarr2[i][i]=0;\n\t}\n\tfor(r int i=1;i<=m;i++)\n\t{\n\t\tst=qr();\n\t\ted=qr();\n\t\tval=qr();\n\t\tarr1[st][ed]=minx(arr1[st][ed],val);\n\t\tarr2[ed][st]=minx(arr2[ed][st],val);\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tp1[i]=arr1[1][i];\n\t\tp2[i]=arr2[1][i];\n\t}\n\tbook1[1]=true;\n\tbook2[1]=true;\n\tfor(r int i=2;i<=n;i++)\n\t{\n\t\tint min=maxn+2;\n\t\tint minn=0;\n\t\tfor(r int j=2;j<=n;j++)\n\t\t{\n\t\t\tif(p1[j]<min&&book1[j]==false)\n\t\t\t{\n\t\t\t\tmin=p1[j];\n\t\t\t\tminn=j;\n\t\t\t}\n\t\t}\n\t\tbook1[minn]=true;\n\t\tfor(r int j=1;j<=n;j++)\n\t\t{\n\t\t\tif(p1[j]>(p1[minn]+arr1[minn][j])&&book1[j]==0)\n\t\t\t\tp1[j]=p1[minn]+arr1[minn][j];\n\t\t}\n\t}\n\tfor(r int i=2;i<=n;i++)\n\t{\n\t\tint min=maxn+2;\n\t\tint minn=0;\n\t\tfor(r int j=2;j<=n;j++)\n\t\t{\n\t\t\tif(p2[j]<min&&book2[j]==false)\n\t\t\t{\n\t\t\t\tmin=p2[j];\n\t\t\t\tminn=j;\n\t\t\t}\n\t\t}\n\t\tbook2[minn]=true;\n\t\tfor(r int j=1;j<=n;j++)\n\t\t{\n\t\t\tif(p2[j]>(p2[minn]+arr2[minn][j])&&book2[j]==0)\n\t\t\t\tp2[j]=p2[minn]+arr2[minn][j];\n\t\t}\n\t}\n\t/*cout<<endl;\n\tfor(r int i=2;i<=n;i++)\n\t\tprintf(\"%d \",p1[i]);\n\tcout<<\"\\n\";\n\tfor(r int i=2;i<=n;i++)\n\t\tprintf(\"%d \",p2[i]);*/\n\tfor(r int i=2;i<=n;i++)\n\t\tans+=p1[i]+p2[i];\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```\n#### \u4e4b\u540e\uff0c\u6211\u53c8\u6709\u4e86\u4e00\u4e2a\u5927\u80c6\u7684\u60f3\u6cd5\uff0c\u5361\u5e38!\n\n#### \u4e8e\u662f\uff0c\u7ecf\u5386\u4e86\u4e00\u7cfb\u5217\u5e38\u6570\u4f18\u5316\u6211\u7ec8\u4e8e\u5728Ofast\u7684\u5e2e\u52a9\u4e0b\u5361\u8fc7\u4e86O3\u3002\n\n### \u53ef\u559c\u53ef\u8d3a\uff0c\u53ef\u559c\u53ef\u8d3a\uff01\n\n### \u4e0b\u9762\u8d34\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<memory.h>\n#include<algorithm>\n#define maxn 1e8\n#define r register\n#pragma GCC optimize(\"Ofast\")\nusing namespace std;\nint arr[1001][1001];\nint n,m;\nint st,ed,val;\nint ans;\n\ninline int min(int a,int b)\n{\n\treturn a>b?b:a;\n}\n\ninline int qr()\n{\n\tchar a=0;int x=0,w=1;\n\twhile(a<'0'||a>'9'){if(a=='-')w=-1;a=getchar();}\n\twhile(a>='0'&&a<='9'){x=(x<<3)+(x<<1)+(a^48);a=getchar();}\n\treturn x*w;\n}\n\nint main()\n{\n\tn=qr();\n\tm=qr();\n\tfor(r int i=1;i<=n;i++)\n\t{\n\t\tfor(r int j=1;j<=n;j++)\n\t\t\tarr[i][j]=maxn;\n\t\tarr[i][i]=0;\n\t}\n\tfor(r int i=1;i<=m;i++)\n\t{\n\t\tst=qr();\n\t\ted=qr();\n\t\tval=qr();\n\t\tarr[st][ed]=min(arr[st][ed],val);\n\t}\n\tfor(r int k=1;k<=n;k++)\n   \t\tfor(r int i=1;i<=n;i++)\n   \t\t\tfor(r int j=1;j<=n;j++)\n    \t\t\tif(arr[i][j]>arr[i][k]+arr[k][j])\n    \t\t\t\tarr[i][j]=arr[i][k]+arr[k][j];\n\tfor(int i=2;i<=n;i++)\n\t\tans+=arr[1][i]+arr[i][1];\n\tprintf(\"%d\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1577670191,
        "uid": 242234,
        "name": "\u4e58\u6e58\u53bb",
        "ccfLevel": 6,
        "title": "\u849f\u84bb\u7684\u7b2c\u4e03\u7bc7\u9898\u89e3"
    },
    {
        "content": "[](https://www.luogu.org/problemnew/show/P1629)\u4f20\u9001\u95e8\n\n\u601d\u8def\uff1a\u6b63\u53cd\u5404\u5efa\u4e00\u6b21\u8fb9\uff0c\u8dd1\u4e24\u904dspfa\u3002\u4e24\u6b21\u6c42\u51fa\u7684\u5230\u8fbe\u5bf9\u5e94\u70b9\u7684\u6700\u77ed\u8def\u76f8\u52a0\u5373\u4e3a\u6700\u7ec8\u7b54\u6848\n\n\u96be\u5ea6\uff1a\u666e\u53ca/\u63d0\u9ad8-\n\n```cpp\n#include<algorithm>\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#include<queue>\n#define M 100001\n#define maxn 999999\nusing namespace std;\nqueue<int> q;\nint n,m,tot,tat;\nint u,v,w[M];\nint dis1[M],dis2[M],vis[M];\nint to1[M],net1[M],head1[M];\nint to2[M],net2[M],head2[M];\nvoid add1(int u,int v,int z) {\n    to1[++tot]=v; net1[tot]=head1[u]; head1[u]=tot; w[tot]=z;\n}\nvoid add2(int u,int v,int z) {\n    to2[++tat]=v; net2[tat]=head2[u]; head2[u]=tat; w[tat]=z;\n}\nvoid spfa1(int x) {\n    for(int i=1; i<=n; i++) {\n        dis1[i]=maxn;\n        vis[i]=0;\n    }\n    dis1[x]=0,vis[x]=1,q.push(x);\n    while(!q.empty()) {\n        int y=q.front(); q.pop(); vis[y]=0;\n        for(int i=head1[y]; i; i=net1[i]) {\n            int t=to1[i];\n            if(dis1[t]>dis1[y]+w[i]) {\n                dis1[t]=dis1[y]+w[i];\n                if(!vis[t]) vis[t]=1,q.push(t);\n            }\n        }\n    }\n}\nvoid spfa2(int x) {\n    for(int i=1; i<=n; i++) {\n        dis2[i]=maxn;\n        vis[i]=0;\n    }\n    dis2[x]=0,vis[x]=1,q.push(x);\n    while(!q.empty()) {\n        int y=q.front(); q.pop(); vis[y]=0;\n        for(int i=head2[y]; i; i=net2[i]) {\n            int t=to2[i];\n            if(dis2[t]>dis2[y]+w[i]) {\n                dis2[t]=dis2[y]+w[i];\n                if(!vis[t]) vis[t]=1,q.push(t);\n            }\n        }\n    }\n}\nint main() {\n    int a=0,b=0;\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1; i<=m; i++) {\n        scanf(\"%d%d%d\",&u,&v,&w[i]);\n        add1(u,v,w[i]);\n        add2(v,u,w[i]);\n    }\n    spfa1(1);\n    memset(vis,0,sizeof(vis));\n    spfa2(1);\n    for(int i=1; i<=n; i++) {\n        a+=dis1[i];\n        b+=dis2[i];\n    }\n    printf(\"%d\",a+b);\n    return 0;\n}\n```",
        "postTime": 1523693609,
        "uid": 63053,
        "name": "ThatXX",
        "ccfLevel": 0,
        "title": "P1629 \u90ae\u9012\u5458\u9001\u4fe1"
    },
    {
        "content": "Dij+heap\n\n\n\u6211\u7b2c\u4e00\u904d\u8fc7\u8fd9\u9053\u9898\u5176\u5b9e\u662f\u8dd1\u4e86n\u904dDij+heap \uff08Floyd\u5c45\u7136WA0\u5206\uff09\n\n\n~~\u6c27\u6c14\u4f18\u5316\u7b80\u76f4\u662f\u4f5c\u5f0a\u795e\u5668\u554a~~\n\n\n\u524d\u9762\u5199\u9898\u89e3\u7684\u8001\u54e5\u65e0\u8bba\u662f\u7528\u7684spfa\u8fd8\u662fDij\uff0c\u90fd\u662f\u5199\u4e86\u4e24\u904d\u51fd\u6570\uff0c\u8fd9\u6837\u7684\u505a\u6cd5\u5728\u7ade\u8d5b\u4e2d\u5176\u5b9e\u5e76\u4e0d\u503c\u5f97\u63a8\u5d07\u3002\n\n\n- \u5982\u679c\u6700\u7ec8\u7ed3\u679c\u6709\u9519\u8bef\uff0c\u90a3\u4e48\u53cc\u4efd\u7684\u8c03\u8bd5\uff0c\u4f1a\u6781\u5927\u63d0\u9ad8\u8c03\u8bd5\u7684\u96be\u5ea6\uff0c\u6d6a\u8d39\u5f88\u591a\u7684\u65f6\u95f4\n\n\n- \u5bf9\u4e8e\u67d0\u4e9b\u60c5\u51b5\u53ca\u5176\u590d\u6742\u7684\u9898\u76ee\uff0c\u5de8\u5927\u7684\u4ee3\u7801\u91cf\u65e0\u7591\u5bf9\u4e8e\u9009\u624b\u662f\u4e00\u79cd\u5de8\u5927\u7684\u6298\u78e8\uff0c\u589e\u52a0\u4e86\u4ee3\u7801\u51fa\u9519\u7684\u53ef\u80fd\u6027\n\n\n- \u4f5c\u4e3a\u672a\u6765\u7535\u5b50\u5434\u514b\u961f\u4f0d\u7684\u5176\u4e2d\u4e00\u5458\uff0c\u5197\u957f\u53c8\u4e0d\u6613\u4fee\u6539\u7684\u4ee3\u7801\u53ef\u662f\u5f88\u4e0d\u9002\u5408\u7ecf\u5e38\u9700\u8981\u4fee\u6539\u7684\u5de5\u4f5c\u7684\n\n\n### \u6240\u4ee5\u6211\u4eec\u8981\u5728\u4e0d\u5f71\u54cd\u53ef\u8bfb\u6027\u7684\u60c5\u51b5\u4e0b\uff0c\u5c3d\u91cf\u51cf\u5c11\u5197\u4f59\u51fd\u6570\u7684\u6570\u91cf\u221a\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=1e3+10,maxm=1e5+10;\nint n,m;\nstruct edge{int u,v,w;};\nstruct Node{\n    int u,d;\n    bool operator < (Node tmp) const {\n        return d>tmp.d;\n    }\n};\n\npriority_queue<Node>q;\n//\u6bcf\u6b21Dij\u5fc5\u7136\u4fdd\u8bc1\u6700\u540e\u961f\u5217\u4e3a\u7a7a\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u4e00\u4e2a \nvector<int>tow[maxn],bac[maxn];\nedge tow_E[maxm],bac_E[maxm];\nint tow_dis[maxn],bac_dis[maxn];\nbool tow_vis[maxn],bac_vis[maxn];\n//\u53cc\u500dDij+heap\u7684\u5fc5\u5907\u6570\u7ec4 \nvoid add_E(int u,int v,int w,int cnt,bool if_rev){\n    //if_rev\u8868\u793a\u662f\u5426\u662f\u9006\u5411\u8fb9\uff0ctrue\u5219\u9006\u5411\u52a0\u8fb9 \n    if(if_rev){\n        bac_E[cnt]=(edge){u,v,w};\n        bac[u].push_back(cnt);\n        return;\n    }\n    tow_E[cnt]=(edge){u,v,w};\n    tow[u].push_back(cnt);\n}\nvoid readin(){\n    cin>>n>>m;\n    int from,to,cost;\n    for(int i(1);i<=m;++i){\n        scanf(\"%d%d%d\",&from,&to,&cost);\n        add_E(from,to,cost,i,false);\n        add_E(to,from,cost,i,true);\n    }\n}\nvoid Dijkstra(int *dis,vector<int> *road,bool *vis,edge *E,int St){\n    //\u7528\u6570\u7ec4\u6307\u9488\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\uff0c\u5b9e\u73b0\u4e86\u540c\u4e00\u51fd\u6570\u7684\u4e0d\u540c\u4f7f\u7528\u5bf9\u8c61 \n    fill(dis+1,dis+n+1,0x3f3f3f3f);\n    fill(vis+1,vis+n+1,false);dis[St]=0;\n    q.push((Node){St,0});\n    while(!q.empty()){\n        Node x=q.top();q.pop();\n        if(vis[x.u]) continue;\n        vis[x.u]=true;\n        for(int i(0);i<road[x.u].size();++i){\n            edge e=E[road[x.u][i]];\n            if(dis[e.v]>dis[e.u]+e.w){\n                dis[e.v]=dis[e.u]+e.w;\n                q.push((Node){e.v,dis[e.v]});\n            }\n        }\n    }\n}\nint main(){\n    readin();\n    Dijkstra(tow_dis,tow,tow_vis,tow_E,1);\n    Dijkstra(bac_dis,bac,bac_vis,bac_E,1);\n    int ans=0;\n    for(int i(2);i<=n;++i) ans+=tow_dis[i]+bac_dis[i];\n    cout<<ans;\n    return 0;\n}\n\n```",
        "postTime": 1516544052,
        "uid": 38283,
        "name": "Dog_Two",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1629 \u3010\u90ae\u9012\u5458\u9001\u4fe1\u3011"
    },
    {
        "content": "\u770b\u5b8c\u9898\u610f\u7684\u6211\n\n\u76f4\u63a5\u4ece\u6a21\u677f\u4e0a\u590d\u5236\u4e0b\u6765\u6539\u4e863~~0~~\u5206\u949f\n\n\u4e8e\u662f\u5c31AC\u4e86\n\n\u770b\u4e00\u773c\u5176\u4ed6\u9898\u89e3\n\n\uff1f\uff1f\uff1f\uff1f\uff1f\uff1f\uff1f\uff1f\uff1f\uff1f\uff1f\n\n\u4e00\u5806\u5927\u4f6c\u53cd\u5411\u5efa\u56fe\n\n\u603b\u5171\u5c31\u8dd1\u4e24\u6b21 \n\n\u6253\u66b4\u529b\u7684\u849f\u84bb\u9ed8\u9ed8%\u4e86\u4e00\u6ce2\n\n\u6709\u7684\u9898\u89e3\u8bf4n*nlogn\u4f1a\u8d85\u65f6\n\n\u4f46\u597d\u50cf\u6570\u636e\u592a\u6c34 ~~n<=1000~~\n\n\u4e8e\u662f\u5c31\u51b3\u5b9a\u4e0d\u518d\u9ebb\u70e6\u7684\u6539\u4ee3\u7801\u4e86\n\n\u8fd9\u4e2a\u9898\u89e3\u7ed9\u90a3\u4e9b\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\u8981\u53cd\u5411\u5efa\u56fe\u7684OIER\u4e00\u4e2a\u53c2\u8003\n\n\u663e\u7136\u7528Dijkstra ~~SPFA\u5df2\u7ecf\u6b7b\u4e86~~\n\n\u4e4b\u540e\u5916\u9762\u5957\u4e00\u4e2a\u5faa\u73af\n\n\u6ce8\u610f\u662f\u5355\u5411\u7684\n\n\u6bcf\u4e00\u6b21\u8dd1\u7684\u65f6\u5019\u6e05\u96f6\u7684\u6700\u5927\u503c\u7684\u90fd\u522b\u5fd8\u4e86\n\n\u6700\u540e\u8d34\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nvector <int> d[1005];\nvector <int> e[1005];\nlong long dis[1005];\nbool vis[1005];\nint n,m;\npriority_queue<pair<int,int> > q;\nvoid dj(int s)\n{\n    int temp,y,z;\n    memset(vis,0,sizeof(vis));\n    memset(dis,0x3f,sizeof(dis));\n    dis[s]=0;\n    q.push(make_pair(0,s));\n    while(!q.empty())\n    {\n        temp=q.top().second;\n        q.pop();\n        if(vis[temp]) continue;\n        vis[temp]=1;\n        for(int i=0;i<d[temp].size();i++)\n        {\n            y=d[temp][i]; z=e[temp][i];\n            if(dis[y]>dis[temp]+z)\n            {\n                dis[y]=dis[temp]+z;\n                q.push(make_pair(-dis[y],y));\n            }\n        } \n    }\n}\nint main() {\n    int x,y,z,ans=0;\n    cin>>n>>m;\n    for(int i=1;i<=m;i++)\n    {\n        cin>>x>>y>>z;\n        d[x].push_back(y);\n        e[x].push_back(z);\n    }\n    dj(1);\n    for(int i=1;i<=n;i++) ans+=dis[i];\n    for(int i=2;i<=n;i++) \n    {\n    \tdj(i);\n    \tans+=dis[1];\n\t}\n    cout<<ans<<endl;\n    return 0;\n}\n```\nDijkstra \u90fd\u4e0d\u4f1aspell\u7684\u6211 \u6342\u8138",
        "postTime": 1558259178,
        "uid": 100114,
        "name": "hater",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1629 \u3010\u90ae\u9012\u5458\u9001\u4fe1\u3011"
    },
    {
        "content": "## \u4e24\u904ddijstra\n\n~~\u5176\u5b9e\u601d\u8def\u8ddf\u697c\u4e0a\u5199\u6b64\u7b97\u6cd5\u7684dalao\u5dee\u4e0d\u591a\uff0c~~ \u5c31\u4e00\u70b9\u70b9\u7ec6\u8282\u4e0d\u592a\u540c\u53edQwQ\n\n\u8fd9\u4e2a\u9898\u6bd4\u8f83\u597d\u7684\u65b9\u6cd5\u5c31\u662f\u8dd1\u4e24\u904d\u6700\u77ed\u8def\u5e94\u8be5\u6ca1\u6709\u95ee\u9898\uff0c\u56e0\u4e3a\u8fb9\u662f\u5355\u5411\u7684\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u52a0\u8fb9\u7684\u65f6\u5019\u6b63\u53cd\u52a0\u8fb9\u5c31\u662f\u4e86\u3002\n\n\u6211\u4e00\u822c\u9047\u5230\u8fd9\u79cd\u9898\u65f6\u5c31\u76f4\u63a5\u628a\u51fd\u6570\u4ee3\u7801\u590d\u5236\u4e00\u904d\uff0c\u4e00\u4e2adij1\u4e00\u4e2adij2\u5c31\u7b97\u4e86\uff0c\u4f46\u662f\u6211\u7a81\u7136\u60f3\u5230\u4e86\u4e00\u79cd\u4f18\u96c5\u4e00\u70b9\u7684\u65b9\u5f0f\uff0c\n\u5982\u4e0b\n\n```cpp\n#include<iostream>\n#include<stdio.h>\n#include<queue>\n#include<string.h>\n#define M 210000\n#define N 1100\nusing namespace std;\nint n,m;\nint first[3][N],to[3][N],nex[3][M],v[3][M],tot=0,f[N][3],dis[N][3];\nvoid add(int u,int x,int y,int z)\n{\n\ttot++;\n\tnex[u][tot]=first[u][x];\n\tfirst[u][x]=tot;\n\tto[u][tot]=y;\n\tv[u][tot]=z;\n}\nvoid dij(int u,int s)\n{\n\tdis[s][u]=0;\t\n\tpriority_queue<pair<int,int> >q;\n\tq.push(make_pair(0,s));\n\twhile(!q.empty())\n\t{\n\t\tint x=q.top().second;\n\t\tq.pop();\n\t\tif(f[x][u])continue;\t\t\n\t\tf[x][u]=1;\n\t\tfor(int i=first[u][x];i;i=nex[u][i])\n\t\t{\n\t\t\tint y=to[u][i];\n\t\t\tif(dis[y][u]>dis[x][u]+v[u][i])\n\t\t\t{\n\t\t\t\tdis[y][u]=dis[x][u]+v[u][i];\n\t\t\t\tq.push(make_pair(-dis[y][u],y));\n\t\t\t}\n\t\t}\n\t}\t\n} \nint main()\n{\n\tmemset(dis,0x2f,sizeof(dis));\n\tint x,y,z;\n\tcin>>n>>m;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcin>>x>>y>>z;\n\t\tadd(1,x,y,z);\n\t\tadd(2,y,x,z);\n\t}\t\n\tint ans=0;\n\tdij(1,1);\t\n\tdij(2,1);\n\tfor(int i=1;i<=n;i++)\n\t\tans+=dis[i][1]+dis[i][2];\n\tcout<<ans;\n\treturn 0;\n} \n```\n\u8fd9\u6837\u53ea\u8981\u628a\u6570\u7ec4\u5f00\u6210\u4e8c\u7ef4\u5c31\u597d\u4e86\uff0c\u5206\u522b\u8868\u793a\u4e0d\u540c\u7684\u72b6\u6001\uff0c\u5927\u6982\u5bf9\u4e00\u4e9b\u9700\u8981\u8dd1\u5f88\u591a\u904d\u6700\u77ed\u8def\u7684\u9898\u66f4\u5b9e\u7528\u4e00\u4e9b\u3002\n\n\u5e0c\u671b\u5bf9\u5927\u5bb6\u6709\u5e2e\u52a9QwQ~",
        "postTime": 1572507175,
        "uid": 184363,
        "name": "S_Gloria",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 P1629 \u3010\u90ae\u9012\u5458\u9001\u4fe1\u3011"
    },
    {
        "content": "\u521a\u5f00\u59cb\u771f\u7684\u5f88\u60f3floyd\uff0c\u4f46\u7684\u786eTLE.\n\n\u540e\u6765\u60f3\u5230\uff0c\u53ef\u4ee5\u89c1\u4e00\u4e2a\u53cd\u5411\u56fe\uff0c\u505a\u4e24\u6b21DIJKSTRA\uff01\n\n\u89e3\u91ca\u4e00\u4e0b\u53cd\u5411\u56fe\u4e3a\u4ec0\u4e48\u6709\u6548\uff1a\n\t\n\u7528\u53cd\u5411\u56fe\u627e\u5230\u4e00\u6761\u4ecea\u5230b\u7684\u9053\u8def\u540e\uff0c\u82e5\u7ffb\u56de\u539f\u56fe\uff0c\u5219\u8def\u7ebf\u4f1a\u53d8\u6210b\u5230a\u3002\u4e0d\u7406\u89e3\u7684\u53ef\u4ee5\u753b\u753b\u56fe\u3002\n\n\u8d34\u4e0a\u666e\u53ca\u7ec4\u72060\u8005\u7684\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m;\nint u[100005],v[100005],w[100005],next[100005],first[1005],dis[1005];//\u539f\u56fe\u7528 \nint u2[100005],v2[100005],next2[100005],first2[1005],back[1005];//\u53cd\u5411\u56fe\u7528 \nbool vis[1005]; \nvoid init1(){\n\tmemset(vis,false,sizeof(vis));\n\tmemset(dis,0x7f,sizeof(dis));\n\tdis[1]=0;\n}\nvoid init2(){\n\tmemset(vis,false,sizeof(vis));\n\tmemset(back,0x7f,sizeof(back));\n\tback[1]=0;\n}\nvoid dijk1(){\n\tint p=1,Min;\n\tfor(int i=1;i<n;i++){\n\t\tvis[p]=true;\n\t\tMin=2147483600;\n\t\tfor(int j=first[p];j!=-1;j=next[j])\n\t\t\tdis[v[j]]=min(dis[v[j]],dis[p]+w[j]);\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(!vis[j]&&dis[j]<Min){\n\t\t\t\tp=j;\n\t\t\t\tMin=dis[j];\n\t\t\t}\n\t\t}\n\t}\n}\n//\u53cd\u5411\u56fe DIJKSTRA \nvoid dijk2(){\n\tint p=1,Min;\n\tfor(int i=1;i<n;i++){\n\t\tvis[p]=true;\n\t\tMin=2147483600;\n\t\tfor(int j=first2[p];j!=-1;j=next2[j])\n\t\t\tback[v2[j]]=min(back[v2[j]],back[p]+w[j]);\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(!vis[j]&&back[j]<Min){\n\t\t\t\tp=j;\n\t\t\t\tMin=back[j];\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tmemset(first,-1,sizeof(first));\n\tmemset(first2,-1,sizeof(first2));\n\tcin>>n>>m;\n\t//\u7531\u4e8eM<N^2,\u6240\u4ee5\u53ef\u4ee5\u7528\u90bb\u63a5\u8868 \n\tfor(int i=1;i<=m;i++){\n\t\tcin>>u[i]>>v[i]>>w[i];\n\t\tnext[i]=first[u[i]];\n\t\tfirst[u[i]]=i;\n\t\t//**\u6784\u9020\u53cd\u5411\u56fe** \n\t\tu2[i]=v[i];\n\t\tv2[i]=u[i];\n\t\tnext2[i]=first2[u2[i]];\n\t\tfirst2[u2[i]]=i;\n\t}\n\tinit1();\n\tdijk1();\n\tinit2();\n\tdijk2();\n\tlong long s=0;\n\tfor(int i=2;i<=n;i++)\n\t\ts+=dis[i]+back[i];// \u6bcf\u4e2a\u70b9\u53bb\u7684\u548c\u56de\u7684\u52a0\u8d77\u6765\uff0c\u5f97\u5230\u7b54\u6848 \n\tcout<<s<<endl;\n\treturn 0;\n}\n```\n\n\u6700\u77ed\u8def\u4e5f\u53ef\u4ee5\u7528SPFA\uff0c\u666e\u901aFord\u4e0d\u77e5\u9053\u80fd\u4e0d\u80fd\u538b\u4f4f\u65f6\u95f4\u3002",
        "postTime": 1548944036,
        "uid": 104292,
        "name": "YellowBean_Elsa",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1629 \u3010\u90ae\u9012\u5458\u9001\u4fe1\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u795e\u5947\u7684\u9898\u76ee\n\n\u5148\u4ecb\u7ecd\u4e00\u4e0b\u548c\u8fd9\u9053\u9898\u610f\u601d\u76f8\u4f3c\u7684[\u6c34\u9898](https://www.luogu.org/problemnew/show/P1821)\n\u6570\u636e\u592a\u6c34\n\n\u7136\u800c\u8fd9\u9053\u9898\u6570\u636e~~\u8fc7\u4e8e~~\u5f3a\u5927\uff0c\u8fd9\u79cd\u505a\u6cd5\u8fc7\u4e0d\u4e86\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<queue>\nusing namespace std;\nstruct stu\n{\n\tint next;\n\tint to;\n\tint w;\n}t[100001];\nint dis[1001],head[1001],tot,n,m,T,cows[1001];\nbool visit[1001];\nqueue<int>q;\nvoid add(int x,int y,int z)\n{\n\tt[++tot].next=head[x];\n\tt[tot].to=y;\n\tt[tot].w=z;\n\thead[x]=tot;//\u6709\u5411\u56fe \n//\tt[++tot].next=head[y];\n//\tt[tot].to=x;\n//\tt[tot].w=z;\n//\thead[y]=tot;//\u65e0\u5411\u56fe \n}\nvoid SPFA(int s)\n{\n\tmemset(dis,127,sizeof(dis));\n\tdis[s]=0;\n\tvisit[s]=1;\n\tq.push(s);\n\twhile(!q.empty())\n\t{\n\t\tint x=q.front();\n\t\tq.pop();\n\t\tvisit[x]=0;\n\t\tfor(int i=head[x];i;i=t[i].next)\n\t\t{\n\t\t\tint y=t[i].to;\n\t\t\tif(dis[y]>dis[x]+t[i].w)\n\t\t\t{\n\t\t\t    dis[y]=dis[x]+t[i].w;\n\t\t\t    if(!visit[y])\n\t\t\t    {\n\t\t\t    \tvisit[y]=1;\n\t\t\t    \tq.push(y);\n\t\t\t    }\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d%d\",&n,&m,&T);\n\tint x,y,z,maxx=-0x7fffffff;\n\tfor(int i=0;i<m;++i)\n\t{\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tadd(x,y,z);\n\t}\n\tSPFA(T);\n\tfor(int i=1;i<=n;++i)\n\t    cows[i]+=dis[i];\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tSPFA(i);\n\t\tmaxx=maxx>cows[i]+dis[T]?maxx:cows[i]+dis[T];\n\t}\n\tprintf(\"%d\",maxx);\n\treturn 0;\n}\n```\n\n\u4fdd\u8bc1TLE\u3002\n\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u601d\u8003\u66f4\u9ad8\u6548\u7684\u7b97\u6cd5\uff1a\n\n\u56e0\u4e3a\u8fd9\u662f\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u5148\u770b\u4e00\u4e0b\u5982\u679c\u662f\u65e0\u5411\u56fe\uff0c\u600e\u4e48\u505a\uff1f\n\n\u663e\u7136\uff0cAns=\u6700\u77ed\u8def\u957f\u5ea6*2\uff08\u80fd\u8fd9\u4e48\u8fc7\u53bb\uff0c\u5c31\u80fd\u8fd9\u4e48\u56de\u6765\uff09\n\n\u90a3\u4e48\u6211\u4eec\u60f3\u4e00\u60f3\uff0c\u6709\u5411\u56fe\u662f\u4e0d\u662f\u4e5f\u53ef\u4ee5\u7c7b\u4f3c\u7684\u505a\uff1f\n\n\u56e0\u4e3a\u5982\u679c\u80fd\u4ece\u67d0\u4e2a\u70b9i\u5230j\uff0c\u90a3\u4e48\u4e00\u5b9a\u80fd\u56de\u53bb\uff0c\u6240\u4ee5\uff1a\n\n**\u5148\u8dd1\u4e00\u904d\u6b63\u7740\u7684SPFA\uff08\u6216dijkstra\uff09\uff0c\u518d\u53cd\u7740\u56de\u6765**\n\n\u89e3\u91ca\uff1a\u5982\u679c\u6709\u4e00\u6761\u8defi->j\uff0c\u6ca1\u6709j->i\uff0c\u90a3\u4e48\u4ed6\u5c31\u8981\u8d70\u53e6\u4e00\u6761\u8def\uff08\u5176\u4ed6\u4e2d\u8f6c\u70b9\uff09\n      \u5982\u679c\u90fd\u6709\uff0c\u540c\u65e0\u5411\u56fe\u5904\u7406\uff08*2\uff09\n      \n**Code\uff1a**\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<queue>\nusing namespace std;\nstruct stu\n{\n\tint next;\n\tint to;\n\tint w;\n}t[100001],T[100001];\nint dis[1001],head1[1001],head2[1001],tot1,tot2,n,m;\nbool visit[1001];\nqueue<int>q;\nvoid add1(int x,int y,int z)\n{\n\tt[++tot1].next=head1[x];\n\tt[tot1].to=y;\n\tt[tot1].w=z;\n\thead1[x]=tot1;//\u6709\u5411\u56fe \n//\tt[++tot].next=head[y];\n//\tt[tot].to=x;\n//\tt[tot].w=z;\n//\thead[y]=tot;//\u65e0\u5411\u56fe \n}\nvoid add2(int x,int y,int z)\n{\n\tT[++tot2].next=head2[x];\n\tT[tot2].to=y;\n\tT[tot2].w=z;\n\thead2[x]=tot2;//\u6709\u5411\u56fe \n//\tt[++tot].next=head[y];\n//\tt[tot].to=x;\n//\tt[tot].w=z;\n//\thead[y]=tot;//\u65e0\u5411\u56fe \n}\nvoid SPFA1(int s)\n{\n\tmemset(dis,127,sizeof(dis));\n\tdis[s]=0;\n\tvisit[s]=1;\n\tq.push(s);\n\twhile(!q.empty())\n\t{\n\t\tint x=q.front();\n\t\tq.pop();\n\t\tvisit[x]=0;\n\t\tfor(int i=head1[x];i;i=t[i].next)\n\t\t{\n\t\t\tint y=t[i].to;\n\t\t\tif(dis[y]>dis[x]+t[i].w)\n\t\t\t{\n\t\t\t    dis[y]=dis[x]+t[i].w;\n\t\t\t    if(!visit[y])\n\t\t\t    {\n\t\t\t    \tvisit[y]=1;\n\t\t\t    \tq.push(y);\n\t\t\t    }\n\t\t\t}\n\t\t}\n\t}\n}\nvoid SPFA2(int s)\n{\n\tmemset(dis,127,sizeof(dis));\n\tdis[s]=0;\n\tvisit[s]=1;\n\tq.push(s);\n\twhile(!q.empty())\n\t{\n\t\tint x=q.front();\n\t\tq.pop();\n\t\tvisit[x]=0;\n\t\tfor(int i=head2[x];i;i=T[i].next)\n\t\t{\n\t\t\tint y=T[i].to;\n\t\t\tif(dis[y]>dis[x]+T[i].w)\n\t\t\t{\n\t\t\t    dis[y]=dis[x]+T[i].w;\n\t\t\t    if(!visit[y])\n\t\t\t    {\n\t\t\t    \tvisit[y]=1;\n\t\t\t    \tq.push(y);\n\t\t\t    }\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tint x,y,z,ans=0;\n\tfor(int i=0;i<m;++i)\n\t{\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tadd1(x,y,z);\n\t\tadd2(y,x,z);\n\t}\n\tSPFA1(1);\n\tfor(int i=2;i<=n;++i)\n\t    ans+=dis[i];\n\tmemset(visit,0,sizeof(visit));\n\tSPFA2(1);\n\tfor(int i=2;i<=n;++i)\n\t    ans+=dis[i];\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1545532981,
        "uid": 68011,
        "name": "\u53e4\u660e\u5730_ypc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1629 \u3010\u90ae\u9012\u5458\u9001\u4fe1\u3011"
    },
    {
        "content": "\u8fd9\u91cc\u5148\u8bf4\u4e2a\u9898\u5916\u8bdd\u2014\u2014\n\n\u6b63\u5982\u6211\u5728\u6b64\u9898\u8ba8\u8bba\u533a\u91cc\u53d1\u7684\u4e00\u4e2a\u5e16\u5b50\u6240\u8bf4\uff0c\u8fd9\u4e2a\u9898\u76ee\u548c[P1342 \u8bf7\u67ec](https://www.luogu.org/problem/P1342)\u662f\u4e00\u6837\u7684\uff0c\u4f46\u662f\u9700\u8981\u5f00\u5927\u6570\u7ec4\uff0c\u5e76\u5c06\u7b54\u6848\u5f00$long~long$\u3002\n\n---\n\n\u597d\u4e86\u4e0d\u591a\u8bf4\u6b63\u5f0f\u8fdb\u5165\u9898\u89e3\u3002\n\n\u5176\u5b9e\u697c\u4e0a\u7684\u5de8\u4f6c\u4eec\u90fd\u5df2\u7ecf\u8bb2\u5f97\u5f88\u6e05\u695a\u4e86\uff0c\u5c31\u662f\u4ece1\u5230\u5404\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u548c\u5404\u4e2a\u70b9\u52301\u7684\u6700\u77ed\u8def\u7684\u6743\u503c\u548c\u52a0\u8d77\u6765\u5c31\u884c\u4e86\u3002\n\n\u8fd9\u91cc\u7ed9\u5927\u5bb6\u5b89\u5229\u4e00\u4e0b\u5806\u4f18\u5316+$Dijkstra$\u7684\u4ee3\u7801\uff08\u5176\u5b9e\u4e0d\u7528\u52a0$int$~~\u5176\u5b9e\u6211\u662f\u5148\u505a\u4e861342\u518d\u590d\u5236\u7c98\u8d34\u8fc7\u8fd9\u9898\u7684233~~\uff09\uff1a\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <string>\n#include <algorithm>\n#include <queue>\n#define ll long long\nusing namespace std;\n\nll n, m, u, v, w, h1[2000007], h2[2000007], cnt1, cnt2, dis[2000007], vis[2000007];\nstruct edge {\n\tll v, to, nxt;\n}e1[2000007], e2[2000007];\npriority_queue<pair<ll, ll> > q;\n\ninline ll read() {\n\tll f = 1ll, x = 0ll;\n\tchar c = getchar();\n\twhile(c < '0' || c > '9') {\n\t\tif(c == '-')\tf = -1;\n\t\tc = getchar();\n\t}\n\twhile(c >= '0' && c <= '9') {\n\t\tx = x * 10 + c - '0';\n\t\tc = getchar();\n\t}\n\treturn x * f;\n}\nvoid a_e(ll u, ll v, ll w) {\n\te1[++cnt1] = (edge){w, v, h1[u]}; h1[u] = cnt1;\n\te2[++cnt2] = (edge){w, u, h2[v]}; h2[v] = cnt2;\n}\nll dj() {\n\tll ans = 0;\n\tmemset(dis, 0x3f, sizeof(dis));\n\tdis[1] = 0;\n\tq.push(make_pair(0ll, 1ll));\n\twhile(!q.empty()) {\n\t\tll x = q.top().second;\n\t\tq.pop();\n\t\tif(vis[x])\tcontinue;\n\t\tvis[x] = 1;\n\t\tfor(ll i = h1[x]; i; i = e1[i].nxt) {\n\t\t\tll y = e1[i].to, z = e1[i].v;\n\t\t\tif(dis[y] > dis[x] + z) {\n\t\t\t\tdis[y] = dis[x] + z;\n\t\t\t\tq.push(make_pair(-dis[y], y));\n\t\t\t}\n\t\t}\n\t}\n\tfor(ll i = 2; i <= n; ++i) {\n//\t\tprintf(\"1 to %d's distance is %d.\\n\", i, dis[i]);\n\t\tans += dis[i];\n\t}\n\twhile(!q.empty())\tq.pop();\n\tmemset(dis, 0x3f, sizeof(dis));\n\tmemset(vis, 0, sizeof(vis));\n\tdis[1] = 0;\n\tq.push(make_pair(0ll, 1ll));\n\twhile(!q.empty()) {\n\t\tll x = q.top().second;\n\t\tq.pop();\n\t\tif(vis[x])\tcontinue;\n\t\tvis[x] = 1;\n\t\tfor(ll i = h2[x]; i; i = e2[i].nxt) {\n\t\t\tll y = e2[i].to, z = e2[i].v;\n\t\t\tif(dis[y] > dis[x] + z) {\n\t\t\t\tdis[y] = dis[x] + z;\n\t\t\t\tq.push(make_pair(-dis[y], y));\n\t\t\t}\n\t\t}\n\t}\n\tfor(ll i = 2; i <= n; ++i) {\n//\t\tprintf(\"%d to 1's distance is %d.\\n\", i, dis[i]);\n\t\tans += dis[i];\n\t}\n\treturn ans;\n}\n\nint main() {\n\tn = read(), m = read();\n\tfor(ll i = 1; i <= m; ++i) {\n\t\tu = read(), v = read(), w = read();\n\t\ta_e(u, v, w);\n\t}\n\tprintf(\"%lld\", dj());\n\treturn 0;\n}\n```\n\n\u4e0d\u5148\u70b9\u4e2a\u8d5e\u518d\u8d70\u561b\uff1fqwq",
        "postTime": 1573030768,
        "uid": 112917,
        "name": "Eason_AC",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1629 \u3010\u90ae\u9012\u5458\u9001\u4fe1\u3011"
    },
    {
        "content": "# \u3010\u4e24\u79cd\u65b9\u6cd5\u3011\n\n## \u3010SPFA\u3011\nSPFA     \n### \u3010\u6ce8\u610f\u6ce8\u610f\u3011\n\u8fd9\u662f\u5355\u5411\u8def\u5355\u5411\u8def\u5355\u5411\u8def\uff01\uff01\uff01    \n\u91cd\u8981\u7684\u4e8b\u60c5\u8bf4\u4e09\u904d\uff01\uff01\uff01    \n\uff08\u9898\u76ee\u4e2d\u6ca1\u70b9\u51fa\u8fd9\u70b9\u4f46\u662f\u6211\u7684\u5168WA\u7ecf\u5386\u8ba9\u6211\u6df1\u523b\u7684\u8ba4\u8bc6\u5230\u4e86\u8fd9\u4e00\u70b9\uff09    \n### \u3010\u601d\u8def\u3011\n\u53bb\u548c\u6765\u8fd9\u662f\u4e24\u4e2a\u5b8c\u5168\u76f8\u53cd\u7684\u4e1c\u897f    \nSPFA\u8dd1\u4e00\u4e2a\u65b9\u5411\u662f\u5f88\u8f7b\u677e\u7684    \n\u7136\u540e\u53e6\u4e00\u4e2a\u65b9\u5411\u5c31\u5f88\u96be\u529e\u4e86    \n\u8be5\u600e\u4e48\u529e\u5462\uff1f    \nn\u904dSPFA\uff1f    \n\u4e0d\u592a\u53ef\u80fd\u8fd9\u5c31\u662f\u4e00\u9053\u9ec4\u9898    \n\u5bf9\u4e86\uff01\u53ef\u4ee5\u53cd\u5411\u5efa\u56fe\uff01    \n\u5c06\u65b9\u5411\u53cd\u8fc7\u6765\u5efa\u51fa\u6765\u7684\u56fe\u5c31\u662f\u5b8c\u5168\u76f8\u53cd\u7684    \n\u67d0\u4e2a\u70b9\u5230x\u7684\u8ddd\u79bb\u6070\u597d\u5c31\u662f\u56de\u5bb6\u7684\u6700\u77ed\u8ddd\u79bb    \n\u8fd9\u6837\u548c\u6b63\u5411\u5efa\u56fe\u4e00\u7ed3\u5408    \n\u5c31\u80fd\u6c42\u51fa\u53bb\u548c\u56de\u7684\u6700\u77ed\u8def\u5f84\u4e86    \n\u7136\u540e\u6c42\u548c\u5c31\u53ef\u4ee5\u4e86     \n### \u3010\u5b8c\u6574\u4ee3\u7801\u3011\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<cstring>\nusing namespace std;\nconst int Max = 100005;\nstruct node\n{\n\tint y;\n\tint ne;\n\tint z;\n}a1[Max << 1],a2[Max << 1];\nint n,m,x;\nconst int M = 1002;\nint head1[M],head2[M];\nint sum = 0;\nvoid add1(int x,int y,int z)\n{\n\ta1[++ sum].y = y;\n\ta1[sum].z = z;\n\ta1[sum].ne = head1[x];\n\thead1[x] = sum;\n}\nvoid add2(int x,int y,int z)\n{\n\ta2[++ sum].y = y;\n\ta2[sum].z = z;\n\ta2[sum].ne = head2[x];\n\thead2[x] = sum;\n}\n\nint d1[M],d2[M];\nbool use[M];\nvoid SPFA1()\n{\n\tmemset(use,false,sizeof(use));\n\tqueue<int>q;\n\tfor(register int i = 1;i <= n;++ i)\n\t\td1[i] = 999999;\n\td1[x] = 0;\n\tq.push(x);\n\twhile(!q.empty())\n\t{\n\t\tint qwq = q.front();\n\t\tq.pop();use[qwq] = false;\n\t\tfor(register int i = head1[qwq];i != 0;i = a1[i].ne)\n\t\t{\n\t\t\tint awa = a1[i].y;\n\t\t\tif(d1[awa] > d1[qwq] + a1[i].z)\n\t\t\t{\n\t\t\t\td1[awa] = d1[qwq] + a1[i].z;\n\t\t\t\tif(use[awa] == false)\n\t\t\t\t{\n\t\t\t\t\tuse[awa] = true;\n\t\t\t\t\tq.push(awa);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nvoid SPFA2()\n{\n\tmemset(use,false,sizeof(use));\n\tqueue<int>q;\n\tfor(register int i = 1;i <= n;++ i)\n\t\td2[i] = 999999;\n\td2[x] = 0;\n\tq.push(x);\n\twhile(!q.empty())\n\t{\n\t\tint qwq = q.front();\n\t\tq.pop();use[qwq] = false;\n\t\tfor(register int i = head2[qwq];i != 0;i = a2[i].ne)\n\t\t{\n\t\t\tint awa = a2[i].y;\n\t\t\tif(d2[awa] > d2[qwq] + a2[i].z)\n\t\t\t{\n\t\t\t\td2[awa] = d2[qwq] + a2[i].z;\n\t\t\t\tif(use[awa] == false)\n\t\t\t\t{\n\t\t\t\t\tuse[awa] = true;\n\t\t\t\t\tq.push(awa);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tx = 1;\n\tint xx,yy,zz;\n\tfor(register int i = 1;i <= m;++ i)\n\t{\n\t\tscanf(\"%d%d%d\",&xx,&yy,&zz);\n\t\tadd1(xx,yy,zz);\n\t\tadd2(yy,xx,zz);\n\t}\n\tSPFA1();\n\tSPFA2();\n\tint MM = 0;\n\tfor(register int i = 1;i <= n;++ i)\n\t\tMM = MM + d1[i] + d2[i];\n\tcout << MM << endl;\n\treturn 0;\n}\n```\n## \u3010dijkstra\u3011\ndijkstra + \u5806\u4f18\u5316     \n### \u3010\u8bf4\u5728\u524d\u9762\u7684\u8bdd\u3011 \n~~\u901a\u8fc7\u8fd9\u9053\u9898\u53d1\u73b0\u6211\u771f\u662f\u4e2a\u53ef\u7231\u7684\u5b69\u5b50~~    \n\u7528dijkstra\u505a\u7684\u65f6\u5019    \n\u5f00\u5f00\u5fc3\u5fc3\u6253\u4e00\u4e2a\u53cd\u5411\u5efa\u56fe    \n\u8f7b\u8f7b\u677e\u677e\u63d0\u4ea4\u4e0a\u53bb   \n\u7136\u540e\u62ff\u4e8670\u5206\u2026\u2026    \n\u5806\u4f18\u5316\u4e4b\u540e\u7684\u590d\u6742\u5ea6\u662fO((N+M)logN)\u5b8c\u5168\u4e0d\u4f1a\u8d85\u65f6     \n\u7136\u540e\u6211\u5c31\u5f00\u59cb\u601d\u8003\u5404\u79cd\u53ef\u80fd\u51fa\u73b0\u7684\u7384\u5b66\u95ee\u9898   \n\u6700\u540e\u7126\u707c\u4e86\u4e00\u4e2a\u5c0f\u65f6   \n\u7ec8\u4e8e\u53d1\u73b0\u662f\u6570\u7ec4\u5f00\u5c0f\u4e86\u2026\u2026    \n\u9b3c\u77e5\u9053\u4e3a\u4ec0\u4e48\u6570\u7ec4\u5f00\u5c0f\u4f1a\u8d85\u65f6\u2026\u2026\n### \u3010\u6838\u5fc3\u601d\u8def\u3011\n\u6709\u53bb\u6709\u56de   \n\u5982\u679c\u53ea\u662f\u53bb\u7684\u8bdd\u5355\u6e90\u6700\u77ed\u8def\u5f84\u5c31\u53ef\u4ee5\u8f7b\u8f7b\u677e\u677e\u89e3\u51b3\u6389    \n\u4f46\u662f\u6765\u56de\u7684\u8bdd   \n\u9996\u5148\u60f3\u5230\u7684\u662f\u591a\u6e90\u6700\u77ed\u8def\u5f84    \n\u4f46\u662f\u597d\u50cf\u8dd1\u4e0d\u8fc7\u53bb    \n\u8fd9\u5c31\u7528\u5230\u4e86\u548c\u4e0a\u9762SPFA\u4e00\u6837\u7684\u601d\u8def\u4e86   \n\u5c31\u662f\u53cd\u5411\u5efa\u56fe    \n\u8fd9\u6837\u53ea\u9700\u8981\u4e24\u904ddijkstra\u5c31\u53ef\u4ee5\u89e3\u51b3\u6389    \n\u6700\u540e\u518d\u6c42\u4e2a\u548c\u5c31\u6ca1\u6709\u95ee\u9898\u4e86     \n### \u3010\u5b8c\u6574\u4ee3\u7801\u3011\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\nusing namespace std;\nconst int Max = 100004;\nconst int M = 1003;\nstruct point\n{\n\tint w;\n\tint x;\n\tbool operator < (const point & xx)const\n\t{\n\t\treturn xx.w < w;\n\t}\n};\nint n,m;\nstruct node\n{\n\tint y,ne;\n\tint z;\n}a1[Max << 1],a2[Max << 1];\nint sum1 = 0,sum2 = 0;\nint head1[M],head2[M];\n\ninline int read()\n{    \n     int x=0; char ch=getchar();\n     while (ch<'0' || ch>'9') ch=getchar();\n     while (ch>='0' && ch<='9'){ x=x*10+ch-'0'; ch=getchar(); }\n     return x;\n}   \n\nvoid add1(int x,int y,int z)\n{\n\ta1[++ sum1].y = y;\n\ta1[sum1].z = z;\n\ta1[sum1].ne = head1[x];\n\thead1[x] = sum1;\n}\nvoid add2(int x,int y,int z)\n{\n\ta2[++ sum2].y = y;\n\ta2[sum2].z = z;\n\ta2[sum2].ne = head2[x];\n\thead2[x] = sum2;\n}\nint dis1[M],dis2[M];\nbool use1[M],use2[M];\npriority_queue<point>q;\nvoid dj1()\n{\n\tfor(register int i = 2;i <= n;++ i)\n\t\tdis1[i] = 999999;\n\tdis1[1] = 0;\n\tq.push((point){0,1});\n\twhile(!q.empty())\n\t{\n\t\tpoint qwq = q.top();\n\t\tq.pop();\n\t\tint x = qwq.x;\n\t\tif(use1[x] == true)\n\t\t\tcontinue;\n\t\tuse1[x] = true;\n\t\tfor(register int i = head1[x];i != 0;i = a1[i].ne)\n\t\t{\n\t\t\tint awa = a1[i].y;\n\t\t\tif(dis1[awa] > dis1[x] + a1[i].z)\n\t\t\t{\n\t\t\t\tdis1[awa] = dis1[x] + a1[i].z;\n\t\t\t\tif(use1[awa] == false)\n\t\t\t\t\tq.push((point){dis1[awa],awa});\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid dj2()\n{\n\tfor(register int i = 2;i <= n;++ i)\n\t\tdis2[i] = 999999;\n\tdis2[1] = 0;\n\tq.push((point){0,1});\n\twhile(!q.empty())\n\t{\n\t\tpoint qwq = q.top();\n\t\tq.pop();\n\t\tint x = qwq.x;\n\t\tif(use2[x] == true)\n\t\t\tcontinue;\n\t\tuse2[x] = true;\n\t\tfor(register int i = head2[x];i != 0;i = a2[i].ne)\n\t\t{\n\t\t\tint awa = a2[i].y;\n\t\t\tif(dis2[awa] > dis2[x] + a2[i].z)\n\t\t\t{\n\t\t\t\tdis2[awa] = dis2[x] + a2[i].z;\n\t\t\t\tif(use2[awa] == false)\n\t\t\t\t\tq.push((point){dis2[awa],awa});\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main()\n{\n\tn = read();m = read(); \n\tint x,y,z;\n\tfor(register int i = 1;i <= m;++ i)\n\t{\n\t\tx = read();y = read();z = read();\n\t\tadd1(x,y,z);add2(y,x,z);\n\t}\n\tdj1();\n\tdj2();\n\tint ans = 0;\n\tfor(register int i = 2;i <= n;++ i)\n\t\tans += dis1[i] + dis2[i];\n\tcout << ans << endl;\n\treturn 0;\n}\n```",
        "postTime": 1571301816,
        "uid": 186489,
        "name": "EarthGiao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1629 \u3010\u90ae\u9012\u5458\u9001\u4fe1\u3011"
    },
    {
        "content": "\u914d\u5408\u535a\u5ba2\u98df\u7528\u5473\u9053\u66f4\u4f73\uff1ahttp://littleseven.top/?p=290\n\n\u8fd9\u9053\u9898\u53ef\u4ee5\u8bf4\u5f88\u5751\u4e86\uff0c\u5751\u70b9\u5c31\u5728\u4e8e**\u6709\u5411\u56fe**\uff01\uff01\uff01\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u6309\u7167\u9898\u4e2d\u63cf\u8ff0\u6211\u4eec\u9700\u8981\u4ece\u8d77\u59cb\u70b9\u5148\u5230\u67d0\u4e2a\u70b9\uff0c\u5728\u4ece\u67d0\u4e2a\u70b9\u56de\u5230\u8d77\u59cb\u70b9\uff0c\u53cd\u590d\u5faa\u73af\u3002\u4f46\u662f\u7531\u4e8e\u662f\u6709\u5411\u56fe\uff0c\u6240\u4ee5**\u53bb\u7684\u65f6\u5019\u7684\u6700\u77ed\u8def\u4e0d\u4e00\u5b9a\u5c31\u662f\u56de\u6765\u65f6\u5019\u7684\u6700\u77ed\u8def**\uff0c\u7531\u4e8e\u5982\u679c\u6c42n\u4e2a\u70b9\u7684\u6700\u77ed\u8def\uff0c\u6216\u8005\u591a\u6e90\u5355\u70b9\u6700\u77ed\u8def\uff0c\u65f6\u95f4\u4e0a\u662f\u627f\u53d7\u4e0d\u4e86\u7684\uff0c\u6240\u4ee5\u8fd9\u4e2a\u95ee\u9898\u6210\u4e3a\u6574\u4e2a\u9898\u7684\u96be\u70b9\u6240\u5728\uff0c\u90a3\u4e48\u600e\u4e48\u5904\u7406\uff1f\uff1f\uff1f\n\n\u5927\u81f4\u7684\u601d\u8def\u662f\u8fd9\u6837\uff0c\u628a\u6211\u4eec\u4ece\u8d77\u70b9\uff08\u90ae\u5c40\uff09\u5f00\u59cb\u7684\u4e00\u8fb9\u6700\u77ed\u8def\u5b9a\u4e3a\u6b63\u5411\uff0c\u90a3\u4e48\u6211\u4eec\u56de\u6765\u5c31\u76f8\u5f53\u4e8e\u4e00\u6b21\u53cd\u5411\u6c42\u6700\u77ed\u8def\u3002\n\n\u6309\u7167\u6211\u4eec\u6b63\u5e38\u60f3\u6cd5\u662f\u4eceN\u4e2a\u70b9\u5411\u8d77\u59cb\u70b9\u90fd\u8dd1\u4e00\u904d\u6700\u77ed\u8def\uff08\u662f\u4e0d\u662f\u60f3\u8d77\u4e86Floyd\uff09\uff0c\u90a3\u4e48\u52a0\u5165\u6211\u4eec\u53cd\u5411\u5efa\u56fe\uff0c\u8fd9\u5c31\u53d8\u6210\u4e86\u4ece\u8d77\u59cb\u70b9\u5411N\u4e2a\u91cd\u70b9\u8dd1\u6700\u77ed\u8def\uff0c\u5c31\u53c8\u53d8\u6210\u4e86\u53e6\u5916\u4e00\u7ec4\u5355\u6e90\u6700\u77ed\u8def\uff0c\u5728\u65f6\u95f4\u4e0a\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u3002\n\n\u56e0\u4e3a\u534a\u6b7b\u4e0d\u6d3b\u7684SPFA\u7b97\u6cd5\u548c\u5b83\uff08\u5728\u4e0d\u7a33\u5b9a\u65b9\u9762\uff09~~\u6781\u4e3a\u4f18\u79c0~~\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u4e2a\u4eba\u653e\u5f03\u4e86\u8fd9\u4e2a\u7b97\u6cd5\uff0c\u6240\u4ee5\u6ca1\u6709\u5199SPFA\u7684\u9898\u89e3\uff08\u4ece\u9898\u76ee\u4e2dM\u7684\u6570\u636e\u8303\u56f4\u5c31\u653e\u5f03\u4e86\uff09\uff0c\u6b63\u5e38\u4f7f\u7528**\u5806\u4f18\u5316Dijkstra**\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n\n## AC\u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = 1010;\nconst int M = 100100;\n\nint n, m, ans, vis[N], dis[N], fvis[N], fdis[N];\nint tot, to[M], nex[M], val[M], head[N];\nint ftot, fto[M], fnex[M], fval[M], fhead[N];\n\nvoid add(int x, int y, int z)\n{\n\tto[ ++ tot] = y;\n\tval[tot] = z;\n\tnex[tot] = head[x];\n\thead[x] = tot;\n\tfto[ ++ ftot] = x;\n\tfval[ftot] = z;\n\tfnex[ftot] = fhead[y];\n\tfhead[y] = ftot;\n}\npriority_queue < pair<int, int> > q;\nvoid dijkstra(int s)\n{\n\tmemset(dis, 0x3f, sizeof dis);\n\tmemset(vis, 0, sizeof vis);\n\tdis[s] = 0;\n\tq.push(make_pair(0, s));\n\twhile(!q.empty())\n\t{\n\t\tint x = q.top().second;\n\t\tq.pop();\n\t\tif (vis[x])\n\t\t\tcontinue ;\n\t\tvis[x] = 1;\n\t\tfor (int i = head[x]; i; i = nex[i])\n\t\t{\n\t\t\tif (dis[to[i]] > dis[x] + val[i])\n\t\t\t{\n\t\t\t\tdis[to[i]] = dis[x] + val[i];\n\t\t\t\tq.push(make_pair(-dis[to[i]], to[i]));\n\t\t\t}\n\t\t}\n\t}\n}\nvoid fdijkstra(int s)\n{\n\tmemset(fdis, 0x3f, sizeof fdis);\n\tmemset(fvis, 0, sizeof fvis);\n\tfdis[s] = 0;\n\tq.push(make_pair(0, s));\n\twhile(!q.empty())\n\t{\n\t\tint x = q.top().second;\n\t\tq.pop();\n\t\tif (fvis[x])\n\t\t\tcontinue ;\n\t\tfvis[x] = 1;\n\t\tfor (int i = fhead[x]; i; i= fnex[i])\n\t\t{\n\t\t\tif (fdis[fto[i]] > fdis[x] + fval[i])\n\t\t\t{\n\t\t\t\tfdis[fto[i]] = fdis[x] + fval[i];\n\t\t\t\tq.push(make_pair(-fdis[fto[i]], fto[i]));\n\t\t\t}\n\t\t}\n\t}\n} \nint main()\n{\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i = 1; i <= m; i ++ )\n\t{\n\t\tint x, y, z;\n\t\tscanf(\"%d%d%d\", &x, &y, &z);\n\t\tadd(x, y, z);\n\t}\n\tdijkstra(1);\n\tfdijkstra(1);\n\tfor (int i = 2; i <= n; i ++ )\n\t{\n\t\tans += dis[i] + fdis[i];\n\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1566475295,
        "uid": 144702,
        "name": "littleseven",
        "ccfLevel": 3,
        "title": "\u9898\u89e3 P1629 \u3010\u90ae\u9012\u5458\u9001\u4fe1\u3011"
    },
    {
        "content": "P1629 \u90ae\u9012\u5458\u9001\u4fe1\u9898\u89e3\u62a5\u544a\n\n\u5206\u6790\uff1a\u8fd9\u662f\u4e00\u9053~~\u6c27\u6c14\u4f18\u5316\u7684\u6c34\u9898~~\u6700\u77ed\u8def\u95ee\u9898\uff0c\u6211\u4eec\u9996\u5148\u60f3\u5230\u4e86floyd\uff0cdijkstra\uff0cbellman-ford\uff08~~spfa\u5df2\u6b7b~~\uff09\u7b97\u6cd5\uff0c\u4f46\u662f\u8fd9\u9053\u9898n<=1000\u4e14\u8def\u5f84\u8ddd\u79bb\u7686\u4e3a\u6b63\u6574\u6570\uff0c\u6240\u4ee5\u7528dijkstra\u6216bellman\uff0c\u8fd9\u9898\u6211\u7528\u4e86bellman\u3002\n\n\u4f46\u662f\u6211\u4eec\u53c8\u770b\u5230\uff0c\u8fd9\u662f\u6709\u5411\u56fe\uff0c\u800c\u4e14\u90ae\u9012\u5458\u9001\u5b8c\u8d27\u7269\u4e4b\u540e\u8fd8\u8981\u8fd4\u56de\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u4ece\u4e00\u5230\u591a\u8dd1\u5b8c\u6700\u77ed\u8def\u540e\u8fd8\u8981\u4ece\u591a\u5230\u4e00\u8dd1\u56de\u6765\uff0c\u4ece\u4e00\u5230\u591a\u5f88\u5bb9\u6613\uff0c\u4f46\u662f\u4ece\u591a\u5230\u4e00\u600e\u4e48\u529e\u5462\uff1f\n\n\u8fd9\u65f6\u5019\u6211\u4eec\u60f3\uff1a\n#### \u5047\u8bbe\u8981\u95ee\u4ecex\u52301\u7684\u6700\u77ed\u8def\uff0c\u4e3ax->a->b->c->1,\u4e5f\u5c31\u662f\u8bf4x->a,a->b,b->c,c->1\u90fd\u6709\u8def\u53ef\u8d70\uff0c\u90a3\u4e48\u6211\u4eec\u60f3\u60f3\uff0c\u4ecex\u5f00\u59cbx->a,a->b,b->c,c->1\u7684\u6700\u77ed\u8def\u4e0d\u5c31\u662f\u4ece1\u5f00\u59cb1->c,c->b,b->a,a->x\u7684\u6700\u77ed\u8def\u5417\uff1f\u4e8e\u662f\u8fd9\u65f6\uff0c\u6211\u4eec\u628ax->a,a->b,b->c,c->1\u8fd94\u6761\u8def\u5f84\u53d8\u4e3a1->c,c->b,b->a,a->x\uff0c\u7136\u540e\u4ece1\u5f00\u59cb\u8dd1\u6700\u77ed\u8def\uff0c\u800c\u5b83\u4eec\u7684\u6700\u77ed\u8def\u662f\u4e00\u6837\u7684\u3002\n\n\u6211\u4eec\u628a\u8fd9\u6837\u4ece\u591a\u5230\u4e00\u7684\u6700\u77ed\u8def\u53d8\u5f0f\u7684\u8def\u5f84\u53cd\u8f6c\u64cd\u4f5c\u79f0\u4f5c\u201c**\u53cd\u5411\u5efa\u8fb9**\u201d\u3002\n\n\u5176\u4ed6\u6ce8\u91ca\u653e\u5230\u4ee3\u7801\u91cc\uff0c\u8fd8\u6709\u4e00\u70b9\uff0c\u6211\u7528\u7684bellman\u6ca1\u52a0\u961f\u5217\u4f18\u5316.\n\n\u8017\u65f6/\u5185\u5b581809ms,\u00a01936KB\n\nCode:\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int INF=99999999;//\u5b9a\u4e49\u6700\u5927\u503c\u3002\u6ce8\u610f\u4e0d\u8981\u8bbe0x7fffffff, \u52a0\u7684\u65f6\u5019\u4f1a\u7206int \nint n,m;\nint u[100005],v[100005],w[100005];//\u5f00\u597d\u6570\u7ec4\uff0c\u522bRE\u4e86 \nint dis[1005];\nvoid init(){//\u521d\u59cb\u5316 \n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++)scanf(\"%d%d%d\",&u[i],&v[i],&w[i]);// u\u8d77\uff0cv\u7ec8\uff0cw\u957f\u5ea6 \n}\nvoid over(){//\u8fd9\u662f\u4e00\u4e2a\u53cd\u5411\u5efa\u8fb9\u7684\u51fd\u6570\uff0c\u628a\u8d77\u70b9\u548c\u7ec8\u70b9\u4e92\u6362 \uff0c\u597d\u8ba9\u90ae\u9012\u5458\u8fd4\u56de\u65f6\u4ece\u591a\u5230\u4e00\u8dd1\u6700\u77ed\u8def \n\tfor(int i=1;i<=m;i++){\n\t\tswap(u[i],v[i]);\n\t}\n} \nvoid ford(){//\u6807\u51c6bellman-ford\u6a21\u677f \n\tfor(int i=1;i<=n;i++)dis[i]=INF;\n\tdis[1]=0;\n\tfor(int k=1;k<=n-1;k++){\n\t\tfor(int i=1;i<=m;i++){\n\t\t\tif(dis[v[i]]>dis[u[i]]+w[i]){\n\t\t\t\tdis[v[i]]=dis[u[i]]+w[i];\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tinit();\n\tint ans=0;\n\tford();//\u8dd1\u6700\u77ed\u8def \n\tfor(int i=1;i<=n;i++)ans+=dis[i];//\u4ece\u4e00\u5230\u591a \n\tover();//\u53cd\u8f6c\uff0c\u53cd\u5411\u5efa\u8fb9 \n\tford();//\u8dd1\u6700\u77ed\u8def \n\tfor(int i=1;i<=n;i++)ans+=dis[i];//\u4ece\u591a\u5230\u4e00 \n\tprintf(\"%d\\n\",ans);\n\treturn 0;//\u5b8c\u7ed3\u6492\u82b1\n}\n//\u4ee3\u7801\u751a\u77edqwq \n```\n\u671b\u8fc7\u5ba1",
        "postTime": 1559890010,
        "uid": 108758,
        "name": "crzyz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1629 \u3010\u90ae\u9012\u5458\u9001\u4fe1\u3011"
    },
    {
        "content": "## dijkstra+\u5806\u4f18\u5316\n\u9898\u89e3\u91cc\u9762\u90fd\u662fspfa\uff0c\u8981\u4e0d\u7136\u5c31\u662f\u5355\u7eaf\u7684dijkstra\uff0c\u90a3\u6211\u6765\u4e00\u4e2adijkstra+\u5806\u4f18\u5316\u4e86\uff0c\u601d\u60f3\u548c\u4ed6\u4eec\u4e00\u6837\u5efa\u4e24\u6b21\u8fb9\u52a0\u4e24\u6b21\u641c\u7d22\n\n \u53ef\u4ee5\u63a8\u8350\u51e0\u9053\u5176\u4ed6\u7684\u7c7b\u4f3c\u7684\u9898\uff08~~\u4e09\u500d\u7ecf\u9a8c~~\uff09\n \n [\u8bf7\u67ec(\u8303\u56f4\u5bbd\u4e86\u70b9)](https://www.luogu.org/problemnew/show/P1342)\n \n [\u94f6\u725b\u6d3e\u5bf9\uff08\u7b97\u6700\u957f\u7684\u4e00\u6b21\u6765\u56de~~\u4e24\u6b21\u6700\u77ed\u8def\u76f8\u52a0\u5c31\u53ef\u4ee5\u4e86~~\uff09](https://www.luogu.org/problemnew/show/P1821)\n\ncode\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\n#include<cstdlib>\nusing namespace std;\nconst int mx=200010;\ntypedef pair<int,int> pii;\npriority_queue<pii,vector<pii>,greater<pii> > q;\nstruct edge{\n    int v,next,val;\n}eg[mx*2];\nedge eg1[mx];\nint head[mx],top;\nint head1[mx],top1;\nint dis[mx],inque[mx];\nint dis1[mx],inque1[mx];\nvoid addedge(int u,int v,int val){\n    eg[++top].v=v;\n    eg[top].val=val;\n    eg[top].next=head[u];\n    head[u]=top;\n}\nvoid addedge1(int u,int v,int val){\n    eg1[++top1].v=v;\n    eg1[top1].val=val;\n    eg1[top1].next=head1[u];\n    head1[u]=top1;\n}\nint n,m;\nvoid dji(int st){\n    q.push(make_pair(dis[st],st));\n    int u,dist;\n    while(!q.empty()){\n        pii poi=q.top();q.pop();\n        u=poi.second;\n        if(!inque[u]){\n            inque[u]=1;\n            for(int i=head[u];i;i=eg[i].next){\n                dist=dis[u]+eg[i].val;\n                if(dist<dis[eg[i].v]){\n                dis[eg[i].v]=dist;\n                q.push(make_pair(dis[eg[i].v],eg[i].v));\n            }\n            }\n        }\n    }\n}\nvoid dji1(int st){\n    q.push(make_pair(dis1[st],st));\n    int u,dist;\n    while(!q.empty()){\n        pii poi=q.top();q.pop();\n        u=poi.second;\n        if(!inque1[u]){\n            inque1[u]=1;\n            for(int i=head1[u];i;i=eg1[i].next){\n                dist=dis1[u]+eg1[i].val;\n                if(dist<dis1[eg1[i].v]){\n                dis1[eg1[i].v]=dist;\n                q.push(make_pair(dis1[eg1[i].v],eg1[i].v));\n            }\n            }\n        }\n    }\n}\nlong long ans=0;\nint main(){\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1,u,v,val;i<=m;i++){\n        scanf(\"%d%d%d\",&u,&v,&val);\n        addedge(u,v,val);\n        addedge1(v,u,val);\n    }\n    memset(dis,0x7f,sizeof(dis));\n    dis[1]=0;\n    dji(1);\n    ans=0;\n    for(int i=2;i<=n;i++){\n        ans+=dis[i];\n    }\n    memset(dis1,0x7f,sizeof(dis1));\n    dis1[1]=0;\n    dji1(1);\n    for(int i=2;i<=n;i++){\n        ans+=dis1[i];\n    }\n    printf(\"%lld\",ans);\n    return 0;\n}\n```",
        "postTime": 1541648246,
        "uid": 52530,
        "name": "\u74dc\u76ae\u5c11\u5e74",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1629 \u3010\u90ae\u9012\u5458\u9001\u4fe1\u3011"
    },
    {
        "content": "~~\u8d77\u521d\u770b\u5230\u8fd9\u4e2a\u9898\uff0c\u611f\u89c9\u662f\u72b6\u538bDP\uff1f~~\n\n\u540e\u6765\u53d1\u73b0\u8fd9\u53e5\u8bdd\uff1a\n\n**\u8fd9\u4e2a\u90ae\u9012\u5458\u6bcf\u6b21\u53ea\u80fd\u5e26\u4e00\u6837\u4e1c\u897f\u3002**\n\n\u4e8e\u662f\u8fd9\u4e2a\u9898\u53ef\u4ee5\u8fd9\u4e48\u60f3\uff1a**\u6c42\u51fa\u90ae\u5c40\u5230\u6bcf\u4e2a\u5ba2\u6237\u7684\u5bb6\u7684\u6700\u77ed\u8def\uff0c\u518d\u6c42\u51fa\u6bcf\u4e2a\u5ba2\u6237\u7684\u5bb6\u5230\u90ae\u5c40\u7684\u6700\u77ed\u8def\uff0c\u5c06\u5b83\u4eec\u6c42\u548c\u5c31\u53ef\u4ee5\u3002**\n\n\u5bf9\u4e8e\u201c\u6c42\u51fa\u90ae\u5c40\u5230\u6bcf\u4e2a\u5ba2\u6237\u7684\u5bb6\u7684\u6700\u77ed\u8def\u201d\uff0c\u8dd1\u4e00\u6b21spfa\u5373\u53ef\uff1b\u4f46\u662f\uff0c\u5bf9\u4e8e\u201c\u6c42\u51fa\u6bcf\u4e2a\u5ba2\u6237\u7684\u5bb6\u5230\u90ae\u5c40\u7684\u6700\u77ed\u8def\u201d\uff0c\u6570\u636e\u89c4\u6a21\u662fn <= 1000\uff0c\u8dd1n\u6b21spfa\u4f3c\u4e4e\u65f6\u95f4\u4e0a\u6709\u538b\u529b\u3002\u4e8b\u5b9e\u8bc1\u660e\u6211\u4eec\u4e5f\u4e0d\u9700\u8981\u8dd1n\u6b21spfa\uff0c\u56e0\u4e3a\u53ea\u9700\u8981\u5efa\u7acb\u539f\u56fe\u7684\u53cd\u56fe\uff0c\u8dd1\u4e00\u904dspfa\u5c31\u80fd\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u53e6\u5916Floyd\u662f\u4f1a\u8d85\u65f6\u7684\uff0c\u56e0\u4e3aFloyd\u662f\u88f8\u7684O(n\u00b3)\u7b97\u6cd5\uff0c\u8d85\u65f6\u80af\u5b9a\u96be\u514d\u3002\n\n\u4e0b\u9762\u8d34\u51fa\u4ee3\u7801\uff08~~\u6307\u9488\u515a\u798f\u5229\uff0c\u4f46\u662f\u6709\u70b9\u5de5\u7a0b\u4ee3\u7801\u7684\u611f\u89c9~~\uff09\uff1a\n```cpp\n#include <cstdio>\n#include <cctype>\n\ntemplate <typename T>\nclass vector {\t\t\t//\u4e0d\u5b9a\u957f\u6570\u7ec4\uff0c\u7528\u4e8e\u5b58\u8fb9\n\tprivate:\n\t\t\n\t\tvirtual void shrink() {\t//\u7f29\u5bb9\n\t\t\tif(_cap < (_size << 2) || _cap <= MIN_items) return;\t//\u4ee51/4\u4e3a\u754c\n\t\t\t\n\t\t\tT* olditems = items;\n\t\t\titems = new T[_cap >>= 1];\t//\u5bb9\u91cf\u51cf\u534a\u4f7f\u5f97vector\u7684push_back()\u5206\u644aO(1)\n\t\t\tfor(register int __I(0); __I < _size; ++__I) {\n\t\t\t\titems[__I] = olditems[__I];\n\t\t\t}\n\t\t\t\n\t\t\tdelete[] olditems;\n\t\t}\n\n\t\tvirtual void expand() {\t//\u6269\u5bb9\n\t\t\tif(_cap > _size) return;\t//\u9664\u975e\u6ee1\u4e86\uff0c\u4e0d\u7136\u4e0d\u6269\u5bb9\n\t\t\t\n\t\t\tT* olditems = items;\n\t\t\titems = new T[_cap <<= 1];\t//\u5bb9\u91cf\u500d\u589e\u4f7f\u5f97vector\u7684push_back()\u5206\u644aO(1)\n\t\t\tfor(register int __I(0); __I < _size; ++__I) {\n\t\t\t\titems[__I] = olditems[__I];\n\t\t\t}\n\t\t\t\n\t\t\tdelete[] olditems;\n\t\t}\n\n\tprotected:\n\n\t\tT* items;\n\t\tint _size;\n\t\tint _cap;\n\t\tstatic const int MIN_items = 8;\n\n\tpublic:\n\n\t\tvector() : _size(0) {\n\t\t\titems = new T[_cap = MIN_items];\n\t\t}\n\t\t\n\t\tvector(const T* arrt, int const& __len) {\n\t\t\t_size = _cap = __len;\n\t\t\titems = new T[_cap];\n\t\t\tfor(register int __I(0); __I < _cap; ++__I) {\n\t\t\t\titems[__I] = arrt[__I];\n\t\t\t}\n\t\t}\n\t\t\n\t\tvector(vector<T> const& vec) {\n\t\t\t_size = vec._size;\n\t\t\titems = new T[_cap = vec._cap];\n\t\t\tfor(register int __I(0); __I < _size; ++__I) {\n\t\t\t\titems[__I] = vec.items[__I];\n\t\t\t}\n\t\t}\n\t\t\n\t\t~vector() {\n\t\t\tdelete[] items;\n\t\t}\n\t\t\n\t\tT& operator[](int const rank) {\n\t\t\treturn items[rank];\n\t\t}\n\t\t\n\t\tvector<T>& operator=(vector<T> const& vec) {\n\t\t\t_size = vec._size;\n\t\t\titems = new T[_cap = vec._cap];\n\t\t\tfor(register int __I(0); __I < _size; ++__I) {\n\t\t\t\titems[__I] = vec.items[__I];\n\t\t\t}\n\t\t\treturn *this;\n\t\t}\n\t\t\n\t\tvoid push_back(T const& v) {\n\t\t\titems[_size++] = v;\n\t\t\texpand();\n\t\t}\n\t\t\n\t\tT pop_back() {\n\t\t\tT __ret = items[--_size];\n\t\t\tshrink();\n\t\t\treturn __ret;\n\t\t}\n\t\t\n\t\tvirtual int size() {\n\t\t\treturn _size;\n\t\t}\n\t\t\n\t\tvirtual bool empty() {\n\t\t\treturn !_size;\n\t\t}\n\t\t\n\t\tvirtual void clear() {\n\t\t\t_size = 0;\n\t\t\tdelete[] items;\n\t\t\titems = new T[_cap = MIN_items];\n\t\t}\n\t\t\n\t\tT* begin() {\n\t\t\treturn items;\n\t\t}\n\t\t\n\t\tT* end() {\n\t\t\treturn (items + _size);\n\t\t}\n\t\t\n\t\tvoid swap(vector& __vct) {\n\t\t\tT* olditems = this->items;\n\t\t\tthis->items = __vct.items;\n\t\t\t__vct.items = olditems;\n\t\t\t\n\t\t\tint old_size = this->_size;\n\t\t\tthis->_size = __vct._size;\n\t\t\t__vct._size = old_size;\n\t\t\t\n\t\t\tint old_cap = this->_cap;\n\t\t\tthis->_cap = __vct._cap;\n\t\t\t__vct._cap = old_cap;\n\t\t}\n};\n\n#define real_size (_size - ex_sz)\t//\u961f\u5217\u5143\u7d20\u771f\u5b9e\u6570\u91cf\ntemplate <typename T>\nclass queue : private vector<T> {\t//\u961f\u5217\uff0c\u53ef\u4ee5\u7528\u7ee7\u627fvector\u5b9e\u73b0\uff0c\u7528\u4e8e\u8dd1spfa\n\t\tusing vector<T>::_size;\n\t\tusing vector<T>::_cap;\n\t\tusing vector<T>::items;\n\t\tusing vector<T>::MIN_items;\t//\u4f7f\u7528\u7c7bvector\u7684\u6210\u5458\uff0c\u7b80\u5316\u4ee3\u7801\n\t\t\n\tprivate:\n\t\t\n\t\tint ex_sz;\t\t\t\t\t//\u961f\u9996\u7a7a\u4f59\u5143\u7d20\u6570\u91cf\n\t\t\n\t\tvoid shrink() {\n\t\t\tif(_cap < (real_size << 2) || _cap <= MIN_items) return;\n\t\t\tT* olditems = items;\n\t\t\titems = new T[_cap >>= 1];\n\t\t\tfor(register int __I(ex_sz); __I < _size; ++__I) {\n\t\t\t\titems[__I - ex_sz] = olditems[__I];\n\t\t\t}\n\t\t\tdelete[] olditems;\n\t\t\t_size -= ex_sz;\n\t\t\tex_sz = 0;\n\t\t}\n\t\t\n\t\tvoid expand() {\n\t\t\tif(_cap > _size) return;\n\t\t\tT* olditems = items;\n\t\t\titems = new T[_cap <<= 1];\n\t\t\tfor(register int __I(ex_sz); __I < _size; ++__I) {\n\t\t\t\titems[__I - ex_sz] = olditems[__I];\n\t\t\t}\n\t\t\tdelete[] olditems;\n\t\t\t_size -= ex_sz;\n\t\t\tex_sz = 0;\n\t\t}\n\t\t\n\tpublic:\n\t\t\n\t\tqueue() : ex_sz(0) {}\n\t\tqueue(queue const& que) : ex_sz(0) {\n\t\t\t_size = que._size - que.ex_sz;\n\t\t\tdelete[] items;\n\t\t\titems = new T[_cap = que._cap];\n\t\t\tfor(register int __I(que.ex_sz); __I < _size; ++__I) {\n\t\t\t\titems[__I - que.ex_sz] = que.items[__I];\n\t\t\t}\n\t\t}\n\t\t\n\t\tvoid push(T v) {\n\t\t\titems[_size++] = v;\n\t\t\texpand();\n\t\t}\n\t\t\n\t\tT pop() {\n\t\t\tT __ret = items[ex_sz++];\n\t\t\tshrink();\n\t\t\treturn __ret;\n\t\t}\n\t\t\n\t\tT& front() {\n\t\t\treturn items[ex_sz];\n\t\t}\n\t\t\n\t\tint size() {\n\t\t\treturn real_size;\n\t\t}\n\t\t\n\t\tbool empty() {\n\t\t\treturn !real_size;\n\t\t}\n\t\t\n\t\tvoid clear() {\n\t\t\t_size = 0;\n\t\t\tex_sz = 0;\n\t\t\tdelete[] items;\n\t\t\titems = new T[_cap = MIN_items];\n\t\t}\n};\n#undef real_size\n\nstruct Node {\n\tvector<Node*> Edges[2];\t//\u6b63\u3001\u53cd\u8fb9\n\tvector<int> Pathl[2];\t//\u6b63\u3001\u53cd\u8fb9\u957f\n\tint len[2];\t\t\t\t//Node[i]\u7684\u6700\u77ed\u8def\u7ebf\u957f\uff08\u4ece\u90ae\u5c40\u6765\u3001\u5230\u90ae\u5c40\u53bb\uff09\n\tbool in_Q;\t\t\t\t//spfa\u4e2d\u662f\u5426\u5df2\u7ecf\u5728\u961f\u5217\u4e2d\n\t\n\tNode() : in_Q(false) {\n\t\tlen[0] = len[1] = 0x3f3f3f3f;\n\t}\n};\nNode* nodes;\n\nint n, m;\nint u, v, w;\n\ntypedef int TARGET;\t\t\t\t//\u76ee\u6807\u65b9\u5411\nconst TARGET Post_Office = 1;\t//\u671d\u5411\u90ae\u5c40\uff0c\u53cd\u8fb9\nconst TARGET Client_Home = 0;\t//\u671d\u5411\u5ba2\u6237\uff0c\u6b63\u8fb9\n\nint spfa(TARGET tar) {\n\tnodes[0].len[tar] = 0;\n\tqueue<Node*> Que;\n\tQue.push(nodes);\n\tNode* ptn;\n\twhile(!Que.empty()) {\n\t\tptn = Que.pop();\n\t\tptn->in_Q = false;\n\t\tfor(register int __I(0);__I < ptn->Edges[tar].size();++__I) if(ptn->Edges[tar][__I]->len[tar] > ptn->len[tar] + ptn->Pathl[tar][__I]) {\n\t\t\tptn->Edges[tar][__I]->len[tar] = ptn->len[tar] + ptn->Pathl[tar][__I];\t//\u677e\u5f1b\n\t\t\tif(!(ptn->Edges[tar][__I]->in_Q)) {\n            \tptn->Edges[tar][__I]->in_Q = true;\n\t\t\t\tQue.push(ptn->Edges[tar][__I]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tint ans(0);\n\tfor(register int __I(0);__I < n;++__I) {\n\t\tans += nodes[__I].len[tar];\n\t}\n\t\n\treturn ans;\n}\n\n#define gc getchar()\ninline\n\tint readint() {\t\t//\u8bfb\u5165\u4f18\u5316\n\tregister int ret(0);\n\tregister char c;\n\twhile(isspace(c = gc));\n\twhile(isdigit(c)) {\n\t\tret = (ret << 3) + (ret << 1) + (c ^ 0x30);\n\t\tc = gc;\n\t}\n\treturn ret;\n}\n#define ri readint()\n\nint main() {\n\tn = ri;\n\tm = ri;\n\tnodes = new Node[n];\n\tfor(register int i(0);i < m;++i) {\t//\u8bfb\u56fe\n\t\tu = ri - 1;\n\t\tv = ri - 1;\n\t\tw = ri;\n\t\tnodes[u].Edges[Client_Home].push_back(nodes + v);\n\t\tnodes[u].Pathl[Client_Home].push_back(w);\t\t\t//\u6b63\u8fb9\n\t\tnodes[v].Edges[Post_Office].push_back(nodes + u);\n\t\tnodes[v].Pathl[Post_Office].push_back(w);\t\t\t//\u53cd\u8fb9\n\t}\n\t\n\tprintf(\"%d\\n\", spfa(Client_Home) + spfa(Post_Office));\t//\u6b63+\u53cd=\u7ed3\u679c\n\n\treturn 0;\n}\n\n```\n\u6ca1\u6709\u7528\u5230STL\uff0c\u4e8e\u662f\u4ee3\u7801\u5361\u8fdb\u4e86\u6700\u4f18\u89e3\u7684\u7b2c\u5341\u9875\uff08\u6ca1\u5f00O2\uff01\uff09\uff0c\u8fd8\u662f\u6bd4\u8f83\u5feb\u7684\u3002\n\n\u5982\u679c\u6709\u5176\u4ed6\u53ef\u4ee5\u4f18\u5316\u7684\u5730\u65b9\uff0c\u6216\u662f\u4ee3\u7801\u6709\u6240\u4e0d\u8db3\uff0c\u6b22\u8fce\u8bc4\u8bba\u6307\u6b63\uff01",
        "postTime": 1533962258,
        "uid": 29277,
        "name": "\u5317\u6781\u9e45",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1629 \u3010\u90ae\u9012\u5458\u9001\u4fe1\u3011"
    },
    {
        "content": "1.\u6700\u7b80\u5355\u7684\u505a\u6cd5\uff1a\u7528n^3\u590d\u6742\u5ea6\u7684floyd\u7b97\u6cd5\u8fdb\u884c\u5904\u7406\uff0c\u4f46\u662f\u80af\u5b9a\u4f1a\u8d85\u65f6\n\n2.\u8003\u8651\u8fdb\u884c\u4f18\u5316\u3002\u5229\u7528Heap\u4f18\u5316\u7684Dijkstra\u7b97\u6cd5\u5904\u7406n\u6b21\uff0c\u590d\u6742\u5ea6\u4e3an\\*nlogn\uff0c\u8fd8\u662f\u592a\u5927\n\n3.\u56e0\u4e3a\u8981\u6c42\u51fa\u5176\u4ed6\u70b9\u5230\u7b2c\u4e00\u4e2a\u70b9\u7684\u8ddd\u79bb\uff0c\u53ef\u4ee5\u4f5c\u51fa\u9006\u56fe\uff0c\u7136\u540e\u4ee5\u7b2c\u4e00\u4e2a\u70b9\u4e3a\u8d77\u70b9\uff0c\u5728\u9006\u56fe\u4e0a\u7528Dijkstra\u7b97\u6cd5\u8fdb\u884c\u5904\u7406\u3002\u8fd9\u6837\u505a\u7684\u590d\u6742\u5ea6\u4e3an\\*logn\n\n```cpp\n\n#include<cstdio>\n#include<cstring>\n#include<vector>\n#include<queue>\nusing namespace std;\nconst int maxn=1005,INF=0x3f3f3f3f;\ntypedef pair<int,int> pii;\ntypedef int node[maxn];\nstruct Edge{\n    int to,dist;\n};\ntypedef vector<Edge> vE[maxn];\nvE G,H;\nbool vis[maxn];\nnode d1,dis;\npriority_queue<pii,vector<pii>,greater<pii> >q;//\u5229\u7528stl\u81ea\u5e26\u4f18\u5148\u961f\u5217\u6a21\u62df\u5806\nint read()//\u8bfb\u5165\u4f18\u5316\n{\n    int x=0;\n    char ch=getchar();\n    while(ch<'0'||ch>'9')ch=getchar();\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x;\n}\nvoid dijkstra(node &d,int s,vE& G)//dijkstra\n{\n    int i,u;\n    memset(vis,0,sizeof(vis));\n    memset(d,0x3f,sizeof(d));\n    q.push(make_pair(0,s));\n    d[s]=0;\n    while(!q.empty())\n    {\n        u=q.top().second;\n        q.pop();\n        if(vis[u])continue;\n        vis[u]=1;\n        for(i=0;i<G[u].size();i++)\n        {\n            Edge &e=G[u][i];\n            if(d[e.to]>d[u]+e.dist)\n            {\n                d[e.to]=d[u]+e.dist;\n                q.push(make_pair(d[e.to],e.to));\n            }\n        }\n    }\n}\nint main()\n{\n    int n,m,i,x,y,z,sum=0;\n    n=read();\n    m=read();\n    for(i=0;i<m;i++)\n    {\n        x=read();\n        y=read();\n        z=read();\n        G[x].push_back((Edge){y,z});\n        H[y].push_back((Edge){x,z}); //\u6784\u5efa\u9006\u56fe\n    }\n    dijkstra(d1,1,G);\n    dijkstra(dis,1,H);//\u5206\u522b\u8fdb\u884c\u5904\u7406\n    for(i=1;i<=n;i++)\n        sum+=d1[i]+dis[i];\n    printf(\"%d\",sum);\n    return 0;\n}\n\n```",
        "postTime": 1446549104,
        "uid": 977,
        "name": "sfd158",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1629 \u3010\u90ae\u9012\u5458\u9001\u4fe1\u3011"
    },
    {
        "content": "# \u5927\u6c34\u9898\n### \u968f\u4fbf\u8dd1\u8dd1dijkstra\u6216\u8005SPFA\uff08\u6211\u7231SPFA\uff0cSPFA\u6ca1\u6709\u6b7b\uff09\u4e0d\u5c31\u884c\u4e86\n## \u53ef\u662f\u67d0\u540c\u5b66\u504f\u8981\u8dd1floyd\n## His CODE\n```c\n#include<cstdio>\nusing namespace std;\nlong long f[1001][1001];\nint main()\n{\n    long long i,n,m,u,v,w,j,k,ans=0;\n    scanf(\"%lld%lld\",&n,&m); \n    for(i=1;i<=n;i++)\n    for(j=1;j<=n;j++)\n    f[i][j]=0x7fffffff;\n    for(i=1;i<=m;i++)\n    {\n        scanf(\"%lld%lld%lld\",&u,&v,&w);\n        f[u][v]=min(f[u][v],w);\n    }\n    for(k=1;k<=n;k++)\n    for(i=1;i<=n;i++)\n    for(j=1;j<=n;j++)\n    if(f[i][j]>f[i][k]+f[k][j])\n    f[i][j]=f[i][k]+f[k][j];\n    for(i=2;i<=n;i++)\n    ans+=f[1][i]+f[i][1];\n    printf(\"%lld\",ans);\n    return 0;//\u7a0b\u5e8f\u7684\u7ed3\u675f\uff0c\u4e16\u754c\u7684\u6d88\u901d\n}\n```\n\u5373\u4f7f\u52a0\u4e0a\u4e86\u8f93\u5165\u8f93\u51fa\u4e5f\u4f9d\u65e7\u77ed\u5c0f\u7cbe\u608d\uff0c\u7801\u98ce\u5e72\u51c0\u5229\u7d22\u2026\u2026\n\n### BUT\uff01\n### \u53ea\u6709\u56db\u5341\u5206\uff0c\u516d\u4e2a\u70b9TLE\uff01\uff01\uff01\n\u5728\u8fd9\u91cc\uff0c\u672c\u4eba\u8877\u5fc3\u5e0c\u671b\u5404\u4f4d\u4e0d\u8981\u91cd\u8e48\u8986\u8f99\n\n## \u90a3\u4e48\uff0c\u6211\u4eec\u7785\u7785dijkstra\n\u4e0d\u4f1a\u7684\u540c\u5b66\u8bf7\u79fb\u6b65\u6a21\u677f\uff1aP4779\n\n[](https://www.luogu.com.cn/problemnew/solution/P4779)\n### CODE\n```\n#include<cstdio>\n#include<cstring>\n#include<queue>\nusing namespace std;\nconst int N=1001;\nconst int M=100001;//\u522b\u95ee\u6211\u4e3a\u4ec0\u4e48\u7528const int\uff0c\u5176\u5b9e\u6ca1\u5565\u7528\nint n,m,s,t,d[N];\nint edge,e[M],b[M],w[M],fir[N];\nint x[M],y[M],z[M];\nvoid add(int x,int y,int z)\n{\n    e[++edge]=y;\n    w[edge]=z;\n    b[edge]=fir[x];\n    fir[x]=edge;\n}\nstruct node\n{\n    int i,dis;\n};\nbool operator<(node a,node b)\n{\n    return a.dis>b.dis;\n}\npriority_queue<node>q;//\u4f18\u5148\u961f\u5217\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d%d\",&x[i],&y[i],&z[i]);//\u8f93\u5165\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\n        add(x[i],y[i],z[i]);//\u5c31\u76f8\u5f53\u4e8e\u662f\u521b\u5efa\u5730\u56fe\n    }\n    memset(d,127,sizeof(d));\n    //\u5f00\u59cb\u8dd1\u961f\u5217\u4f18\u5316\u6a21\u677f\n    q.push((node){1,0});\n    d[1]=0;\n    while(!q.empty())\n    {\n        node t=q.top();\n        q.pop();\n        if(d[t.i]!=t.dis)\n            continue;\n        for(int k=fir[t.i];k;k=b[k])\n        {\n            if(t.dis+w[k]<d[e[k]])\n            {\n                d[e[k]]=t.dis+w[k];\n                q.push((node){e[k],d[e[k]]});\n            }\n        }\n    }\n    int ans=0;\n    for(int i=2;i<=n;i++)\n\tans+=d[i];\n    edge=0;\n    while(!q.empty())\n\tq.pop();\n    memset(d,127,sizeof(d));//\u6570\u7ec4\u6e05\u7a7a\n    memset(e,0,sizeof(e));\n    memset(w,0,sizeof(w));\n    memset(b,0,sizeof(b));\n    memset(fir,0,sizeof(fir));\n    for(int i=1;i<=m;i++)\n    add(y[i],x[i],z[i]);\n    q.push((node){1,0});\n    d[1]=0;\n    while(!q.empty())//\u961f\u5217\u4e0d\u4e3a\u7a7a\n    {\n        node t=q.top();\n        q.pop();\n        if(d[t.i]!=t.dis)\n        continue;\n        for(int k=fir[t.i];k;k=b[k])\n        {\n            if(t.dis+w[k]<d[e[k]])\n            {\n                d[e[k]]=t.dis+w[k];\n                q.push((node){e[k],d[e[k]]});\n            }\n        }\n    }\n    for(int i=2;i<=n;i++)\n\tans+=d[i];\n    printf(\"%d\\n\",ans);//\u8f93\u51fa\u7ed3\u679c\n    return 0;//\u7a0b\u5e8f\u7684\u7ed3\u675f\uff0c\u4e16\u754c\u7684\u6d88\u901d\n}\n```\n\u90a3\u4e48\u8fd9\u5c31\u975e\u5e38\u7b80\u5355\u4e86\n\n## \u63a5\u4e0b\u6765\n### \u9686\u91cd\u63a8\u51faSPFA\uff01\nSPFA\u6ca1\u6709\u6b7b\uff0c\u6211\u7231SPFA\uff0cSPFA\u4f7f\u6211\u5feb\u4e50\n\n\u4e0d\u63a5\u53d7\u4efb\u4f55\u53cd\u9a73\uff0cSPFA\u6700\u5f3a\n```\n#include<cstdio>\n#include<cstring>\n#include<queue>\nusing namespace std;\nint n,m,map[1001][1001];//map\u6570\u7ec4\u7528\u6765\u5efa\u56fe \nint &fir(int i,int j)\n{return map[i][j];}\nint &sec(int i,int j)\n{return map[j][i];}\nint minw[1001];\nbool vis[1001];\nlong long ans;\ninline void spfa(int&(*a)(int,int)){//SPFA\u6a21\u677f\u554a\uff01 \n    memset(minw,0x3f3f3f3f,sizeof(minw));\n    memset(vis,false,sizeof(vis));\n    queue<int>q;\n    minw[1]=0;\n    q.push(1);\n    vis[1]=true;\n    while(!q.empty())//\u961f\u5217\u4e0d\u4e3a\u7a7a \n\t{\n    int v=q.front();q.pop();\n    vis[v]=false;\n    for(int i=1;i<=n;i++)\n    if(a(v,i))\n    if(minw[i]>minw[v]+a(v,i))\n\t{\n        minw[i]=minw[v]+a(v,i);\n        if(!vis[i])\n\t\t{\n              q.push(i);\n              vis[i]=true;\n        }\n    }\n\t}\n    for(int i=1;i<=n;i++)\n\tans+=minw[i];\n}\ninline int read()//inline\u4e0d\u52a0\u4e5f\u53ef\u4ee5\uff0c\u4f46\u662f\u540d\u4e49\u4e0a\u5e94\u8be5\u662f\u8981\u5feb\u90a3\u4e48\u4e00\u4e22\u4e22\u7684 \n{\n       int x=0;char ch=getchar();\n       while(ch>'9'||ch<'0')\n\t   ch=getchar();\n       do\n\t   {\n\t   x=x*10+ch-48;\n\t   ch=getchar();\n\t   } \n\t   while(ch>='0'&&ch<='9');\n       return x;\n}\nint main(){\n    n=read();\n\tm=read();\n    memset(map,0x3f3f3f3f,sizeof(map));\n    for(int i=1;i<=m;i++)\n\t{\n    \tint v=read(),u=read(),w=read();\n    \tmap[v][u]=min(map[v][u],w);\n    }\n    for(int i=1;i<=n;i++)\n\tmap[i][i]=0;\n    spfa(fir);//\u5199\u597d\u4e86\u6a21\u677f\uff0cSPFA\u8dd1\u4e00\u8dd1 \n    spfa(sec);\n    printf(\"%lld\\n\",ans);//\u8f7b\u677e\u53c8\u6109\u5feb \n    return 0;//\u7a0b\u5e8f\u7684\u7ed3\u675f\uff0c\u4e16\u754c\u7684\u6d88\u901d\n}\n```\n\u770b\uff0cSPFA\u591a\u5feb\n\n### \u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c\u6709\u8fd9\u4e48\u591a\u6b63\u89e3\uff0c\u4e3a\u4ec0\u4e48\u8981\u4e0d\u542c\u8001\u4eba\u8a00\uff0c\u8dd1floyd\u5462\uff1f\n## \u56e0\u4e3a\u4ee3\u7801\u590d\u6742\u5ea6\u4f4e\uff01\n## \u672c\u4eba\u8877\u5fc3\u5e0c\u671b\u5404\u4f4d\u80fd\u5728\u8dd1Floyd\u4e4b\u524d\u7785\u7785\u6570\u636e\u5927\u5c0f\u548c\u65f6\u95f4\u9650\u5236",
        "postTime": 1577019170,
        "uid": 224579,
        "name": "FXY\u662f\u849f\u84bb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1629 \u3010\u90ae\u9012\u5458\u9001\u4fe1\u3011"
    },
    {
        "content": "\u540c[P1821](https://www.luogu.org/problemnew/show/P1821)\u4e00\u6837\u7684\u601d\u8def  \n\u56e0\u4e3a\u6709\u5411\u56fe\uff0c\u53ea\u8981\u53cd\u5411\u5efa\u8fb9\u5373\u53ef   \n\u5bf9\u4e8e\u65e0\u5411\u8fb9\uff0c\u76f4\u63a5d[u]+d[v]\u5373\u53ef \n\u5982[P2984](https://www.luogu.org/problemnew/show/P2984)  \n\u4e0a\u4ee3\u7801  \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<cstring>\n#define N 1010\n#define M 100010 \nusing namespace std;\nint n,m,head[N],rhead[N],tot,rtot,d1[N],d2[N],ans,s;\nbool vis[N];\nstruct Edge{\n\tint v,next,val;\n}edge[M],redge[M];\ninline int read(){\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-f;ch=getchar();\n\t}while(ch>='0'&&ch<='9'){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();\n\t}return  x*f;\n}\ninline void add1(int x,int y,int z){edge[++tot].v=y;edge[tot].val=z;edge[tot].next=head[x];head[x]=tot;}\ninline void add2(int x,int y,int z){redge[++rtot].v=y;redge[rtot].val=z;redge[rtot].next=rhead[x];rhead[x]=rtot;}\nvoid dijk(int x){\n\tpriority_queue<pair<int,int> >q;\n\tmemset(d1,0x3f,sizeof(d1));\n\tq.push(make_pair(0,x));d1[x]=0;\n\twhile(q.size()){\n\t\tint u=q.top().second;q.pop();\n\t\tif(vis[u])continue;\n\t\tvis[u]=1;\n\t\tfor(int i=head[u];i;i=edge[i].next){\n\t\t\tint v=edge[i].v,z=edge[i].val;\n\t\t\tif(d1[v]>d1[u]+z){\n\t\t\t\td1[v]=d1[u]+z;\n\t\t\t\tq.push(make_pair(-d1[v],v));\n\t\t\t}\n\t\t}\n\t}\n}\nvoid spfa(int x){\n\tqueue<int>q;\n\tmemset(d2,0x3f,sizeof(d2));\n\tmemset(vis,0,sizeof(vis));\n\tq.push(x);vis[x]=1;d2[x]=0;\n\twhile(q.size()){\n\t\tint u=q.front();q.pop();vis[u]=0;\n\t\tfor(int i=rhead[u];i;i=redge[i].next){\n\t\t\tint v=redge[i].v,z=redge[i].val;\n\t\t\tif(d2[v]>d2[u]+z){\n\t\t\t\td2[v]=d2[u]+z;\n\t\t\t\tif(!vis[v])q.push(v),vis[v]=1; \n\t\t\t} \n\t\t}\n\t}\n\t\n}\nint main()\n{\n\tn=read(),m=read();\n\tfor(int i=1;i<=m;i++){\n\t\tint x=read(),y=read(),z=read();\n\t\tadd1(x,y,z);add2(y,x,z); \n\t} \n\tdijk(1);\n\tspfa(1);\n\tfor(int i=1;i<=n;i++)\n\t\tans+=d1[i]+d2[i];\n\tprintf(\"%d\\n\",ans); \n\treturn 0;\n}\n\n```\n",
        "postTime": 1555063726,
        "uid": 88733,
        "name": "Zekrom",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1629 \u3010\u90ae\u9012\u5458\u9001\u4fe1\u3011"
    },
    {
        "content": "# P1629 \u90ae\u9012\u5458\u9001\u4fe1\n\n[\u539f\u9898\u5730\u5740](https://www.luogu.org/problemnew/show/P1629)\n\n[GitHub\u9898\u89e3](https://github.com/jerrykcode/luogu)\n\n## \u9898\u76ee\u63cf\u8ff0\n\n\u6709\u4e00\u4e2a\u90ae\u9012\u5458\u8981\u9001\u4e1c\u897f\uff0c\u90ae\u5c40\u5728\u8282\u70b91.\u4ed6\u603b\u5171\u8981\u9001N-1\u6837\u4e1c\u897f\uff0c\u5176\u76ee\u7684\u5730\u5206\u522b\u662f2~N\u3002\u7531\u4e8e\u8fd9\u4e2a\u57ce\u5e02\u7684\u4ea4\u901a\u6bd4\u8f83\u7e41\u5fd9\uff0c\u56e0\u6b64\u6240\u6709\u7684\u9053\u8def\u90fd\u662f\u5355\u884c\u7684\uff0c\u5171\u6709M\u6761\u9053\u8def\uff0c\u901a\u8fc7\u6bcf\u6761\u9053\u8def\u9700\u8981\u4e00\u5b9a\u7684\u65f6\u95f4\u3002\u8fd9\u4e2a\u90ae\u9012\u5458\u6bcf\u6b21\u53ea\u80fd\u5e26\u4e00\u6837\u4e1c\u897f\u3002\u6c42\u9001\u5b8c\u8fd9N-1\u6837\u4e1c\u897f\u5e76\u4e14\u6700\u7ec8\u56de\u5230\u90ae\u5c40\u6700\u5c11\u9700\u8981\u591a\u5c11\u65f6\u95f4\u3002\n\n## \u8f93\u5165\u8f93\u51fa\u683c\u5f0f\n\n### \u8f93\u5165\u683c\u5f0f\uff1a\n\n\u7b2c\u4e00\u884c\u5305\u62ec\u4e24\u4e2a\u6574\u6570N\u548cM\u3002\u7b2c2\u5230\u7b2cM+1\u884c\uff0c\u6bcf\u884c\u4e09\u4e2a\u6570\u5b57U\u3001V\u3001W\uff0c\u8868\u793a\u4eceA\u5230B\u6709\u4e00\u6761\u9700\u8981W\u65f6\u95f4\u7684\u9053\u8def\u3002 \u6ee1\u8db31<=U,V<=N,1<=W<=10000,\u8f93\u5165\u4fdd\u8bc1\u4efb\u610f\u4e24\u70b9\u90fd\u80fd\u4e92\u76f8\u5230\u8fbe\u3002\n\n\u3010\u6570\u636e\u89c4\u6a21\u3011\n\n* \u5bf9\u4e8e30%\u7684\u6570\u636e\uff0c\u67091<=N<=200;\n\n* \u5bf9\u4e8e100%\u7684\u6570\u636e\uff0c\u67091<=N<=1000,1<=M<=100000\u3002\n\n### \u8f93\u51fa\u683c\u5f0f\uff1a\n\n\u8f93\u51fa\u4ec5\u4e00\u884c\uff0c\u5305\u542b\u4e00\u4e2a\u6574\u6570\uff0c\u4e3a\u6700\u5c11\u9700\u8981\u7684\u65f6\u95f4\u3002\n\n## \u8f93\u5165\u8f93\u51fa\u6837\u4f8b\n\n### \u8f93\u5165\u6837\u4f8b#1\uff1a \n\n> 5 10  \n> 2 3 5  \n> 1 5 5  \n> 3 5 6  \n> 1 2 8  \n> 1 3 8  \n> 5 3 4  \n> 4 1 8  \n> 4 5 3  \n> 3 5 6  \n> 5 4 2  \n\n### \u8f93\u51fa\u6837\u4f8b#1\uff1a \n\n> 83  \n\n\n## \u601d\u8def\n\n\u5806\u4f18\u5316dijkstra\uff0c\u8ba1\u7b97\u6e90\u5230\u6bcf\u4e00\u4e2a\u9876\u70b9\u6700\u77ed\u8def\u5f84\u4e4b\u548c\u3002\u7136\u540e\u5bf9\u539f\u56fe\u7684\u53cd\u5411\u56fe\u8fdb\u884c\u4e00\u6b21dijkstra\uff0c\u8ba1\u7b97\u53cd\u5411\u56fe\u4e2d\u6e90\u5230\u6bcf\u4e2a\u9876\u70b9\u7684\u6700\u77ed\u8def\u5f84\u4e4b\u548c\u3002`\u53cd\u5411\u56fe\u4e2d\u6e90\u5230\u9876\u70b9\u7684\u6700\u77ed\u8def\u5f84\u5373\u539f\u56fe\u4e2d\u9876\u70b9\u5230\u6e90\u7684\u6700\u77ed\u8def\u5f84`\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <iostream>\n#include <vector>\n#include <queue>\nusing namespace std;\n\n#define NO_VALUE -1\n\ntypedef long long LL;\n\n//\u90bb\u63a5\u70b9\u7ed3\u6784\u4f53\nstruct AdjNode {\n\tint v; //\u90bb\u63a5\u9876\u70b9\n\tint weight; //\u90bb\u63a5\u8fb9\u6743\u91cd\n\tAdjNode(int v, int weight) : v(v), weight(weight) {}\n};\n\n//\u8ba1\u7b97\u6700\u77ed\u8def\u5f84\u548c\u7684\u7c7b\nclass Dijkstra {\npublic:\n\tDijkstra() {}\n\t~Dijkstra() {}\n\n\t/* \u8fd4\u56de\u4ece0\u5230\u6240\u6709\u9876\u70b9\u6700\u77ed\u8def\u5f84\u4e4b\u548c\u3002*/\n\tLL dijkstra(vector<AdjNode>* graph, int n);\nprivate:\n\t//\u4f18\u5148\u961f\u5217\u4f7f\u7528\u7684\u7ed3\u6784\u4f53\n\tstruct Node {\n\t\tint v;\n\t\tint dist;\n\t\tNode(int v, int dist) : v(v), dist(dist) {}\n\t};\n\n\tstruct cmp {\n\t\tbool operator() (Node& a, Node& b) {\n\t\t\treturn a.dist > b.dist;\n\t\t}\n\t};\n\n\t//\u7c7b\u53d8\u91cf\n\tint *dist_;\n\tbool *collected_;\n};\n\nLL Dijkstra::dijkstra(vector<AdjNode>* graph, int n) {\n\tLL result = 0;\n\tdist_ = new int[n];\n\tfill(dist_, dist_ + n, NO_VALUE);\n\tcollected_ = new bool[n];\n\tfill(collected_, collected_ + n, false);\n\tint src = 0;\n\tdist_[src] = 0;\n\tpriority_queue<Node, vector<Node>, cmp> q;\n\tq.push(Node(src, dist_[src]));\n\twhile (!q.empty()) {\n\t\tint minV = q.top().v;\n\t\tq.pop();\n\t\tif (collected_[minV]) continue;\n\t\tcollected_[minV] = true;\n\t\tresult += dist_[minV]; //minV\u7684\u6700\u77ed\u8def\u5f84\u5df2\u786e\u5b9a\uff0c\u52a0\u5230result\u4e2d\n\t\tfor (vector<AdjNode>::iterator it = graph[minV].begin(); it != graph[minV].end(); it++) {\n\t\t\tint adjVertex = it->v;\n\t\t\tint adjWeight = it->weight;\n\t\t\tif (!collected_[adjVertex])\n\t\t\t\tif (dist_[minV] + adjWeight < dist_[adjVertex] || dist_[adjVertex] == NO_VALUE) {\n\t\t\t\t\tdist_[adjVertex] = dist_[minV] + adjWeight;\n\t\t\t\t\tq.push(Node(adjVertex, dist_[adjVertex]));\n\t\t\t\t}\n\t\t}\n\t}\n\tfree(dist_);\n\tfree(collected_);\n\treturn result;\n}\n\nvoid clearGraph(vector<AdjNode> *graph, int n) {\n\tfor (int i = 0; i < n; i++)\n\t\tvector<AdjNode>().swap(graph[i]);\n}\n\nint main() {\n\tint n, m;\n\tscanf(\"%d %d\", &n, &m);\n\tvector<AdjNode> *graph = new vector<AdjNode>[n];\n\tint a, b, dist;\n\tfor (int i = 0; i < m; i++) {\n\t\tscanf(\"%d %d %d\", &a, &b, &dist);\n\t\ta--; b--;\n\t\tgraph[a].push_back(AdjNode(b, dist));\n\t}\n\tDijkstra dijkstra;\n\tLL result = dijkstra.dijkstra(graph, n);\n\t//\u5bf9\u53cd\u5411\u56fe\u8fdb\u884cdijkstra\n\tvector<AdjNode> *inverseGraph = new vector<AdjNode>[n];\n\tfor (int v = 0; v < n; v++) \n\t\tfor (vector<AdjNode>::iterator it = graph[v].begin(); it != graph[v].end(); it++) {\n\t\t\tinverseGraph[it->v].push_back(AdjNode(v, it->weight));\n\t\t}\n\tclearGraph(graph, n);\n\tresult += dijkstra.dijkstra(inverseGraph, n);\n\tclearGraph(inverseGraph, n);\n\tprintf(\"%d\\n\", result);\n}\n```",
        "postTime": 1553157616,
        "uid": 194439,
        "name": "rediserver",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1629 \u3010\u90ae\u9012\u5458\u9001\u4fe1\u3011"
    },
    {
        "content": "#\u7b80\u5355\u6613\u61c2\u7684pascal\u7684dijkstra\u7b97\u6cd5\n\n\u9898\u76ee\u76f8\u5f53\u4e8e\u6c421\u5230\u5176\u5b83\u70b9\u7684\u6700\u77ed\u8def\u4e0e\u5176\u5b83\u70b9\u52301\u7684\u6700\u77ed\u8def\u4e4b\u548c\uff0c\u53ea\u9700\u8981\u7528dijkstra\u6c421\u5230\u5176\u5b83\u70b9\u7684\u6700\u77ed\u8def\uff0c\u518d\u5c06\u6bcf\u6761\u8fb9\u53cd\u5411\u518d\u6c42\u4e00\u6b211\u5230\u5176\u5b83\u70b9\u7684\u6700\u77ed\u8def\u3002\n\n##\u8981\u6ce8\u610f\u4e24\u70b9\u4e4b\u95f4\u53ef\u80fd\u6709\u4e24\u6761\u4e0d\u4e00\u6837\u957f\u7684\u8def\uff0c\u8bfb\u5165\u65f6\u8981\u628a\u6700\u77ed\u7684\u53d6\u8fc7\u6765\n\n```cpp\nvar zheng,fan:array[1..1000,1..1000] of longint;//\u6b63\u53cd\u4e24\u5f20\u56fe\n    minz,minf:array[1..1000] of longint;\n    fz,ff:array[1..1000] of boolean;\n    i,j,k,t,m,n,p,a,b,c,y:longint;\nfunction min(a,b:longint):longint;\nbegin\n if a>b then exit(b);\n exit(a);\nend;\nbegin\n assign(input,'233.in');\n reset(input);\n assign(output,'2333.out');\n rewrite(output);//\u5173\u8054\u6587\u4ef6\uff0c\u8c03\u8bd5\u65f6\u6bd4\u8f83\u65b9\u4fbf\n readln(n,m);\n fillchar(zheng,sizeof(zheng),127);\n fillchar(fan,sizeof(fan),127);\n fillchar(minz,sizeof(minz),127);\n fillchar(minf,sizeof(minf),127);//\u521d\u59cb\u5316\n for i:=1 to m do begin readln(a,b,c); zheng[a,b]:=min(zheng[a,b],c); fan[b,a]:=min(fan[b,a],c); end;//\u8bfb\u5165\u65f6\u6ce8\u610f\u5224\u65ad\n for i:=2 to n do begin minz[i]:=min(zheng[1,i],minz[i]); minf[i]:=min(fan[1,i],minf[i]); end;//\u521d\u59cb\u5316\n for i:=2 to n do\n  begin\n   k:=maxlongint;\n   for j:=2 to n do if (minz[j]<k)and(not fz[j]) then begin k:=minz[j]; y:=j; end;\n   fz[y]:=true;\n   for j:=2 to n do if (not fz[j])and(zheng[y,j]+k<minz[j]) then minz[j]:=zheng[y,j]+minz[y];\n  end;//\u5bf9\u6b63\u56fe\u8fdb\u884cdijkstra\u7b97\u6cd5\n for i:=2 to n do\n  begin\n   k:=maxlongint;\n   for j:=2 to n do if (minf[j]<k)and(not ff[j]) then begin k:=minf[j]; y:=j; end;\n   ff[y]:=true;\n   for j:=2 to n do if (not ff[j])and(fan[y,j]+k<minf[j]) then minf[j]:=fan[y,j]+minf[y];\n  end;//\u5bf9\u53cd\u56fe\u8fdb\u884cdijkstra\u7b97\u6cd5\n for i:=2 to n do inc(t,minz[i]+minf[i]);//\u7d2f\u52a0\u7b54\u6848\n writeln(t);\n close(output);\nend.\n```",
        "postTime": 1484971593,
        "uid": 19049,
        "name": "Mogician",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1629 \u3010\u90ae\u9012\u5458\u9001\u4fe1\u3011"
    },
    {
        "content": "\u56e0\u4e3a\u6b64\u56fe\u662f\u6709\u5411\u8fb9\n\n\u6240\u4ee5\u53ea\u9700\u4ece\u8d77\u70b9\u8dd1\u4e00\u904d\u5230\u4e2a\u70b9\u7684\u6700\u77ed\u8def\u52a0\u8d77\u6765\u4e4b\u540e\n\n\u5efa\u7acb\u53cd\u5411\u8fb9\n\n\u518d\u4ece\u8d77\u70b9\u8dd1\u4e00\u904d\u5230\u5404\u4e2a\u70b9\u7684\u6700\u77ed\u8def\uff0c\u8868\u793a\u8dd1\u5230\u5404\u4e2a\u70b9\u4e4b\u540e\u518d\u8dd1\u56de\u6765\u7684\u6700\u77ed\u8def\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<string>\nusing namespace std;\nint minn[500001],vis[500001],team[500001],head[500001];\nstruct m\n{\n    int next,to,cost;\n}e[500001];\nint num,u,sum;\nvoid add(int from,int to,int dis)\n{\n    e[++num].next=head[from];\n    e[num].to=to;\n    e[num].cost=dis;\n    head[from]=num;\n}\nvoid spfa(int s)\n{\n    memset(team,0,sizeof(team));\n    memset(vis,0,sizeof(vis));\n    memset(minn,0x7f,sizeof(minn));\n    int h=0,t=1;\n    team[1]=s;\n    vis[s]=1;\n    minn[s]=0;\n    while(h<t)\n    {\n        h++;\n        u=team[h];\n        vis[u]=0;\n        for(int i=head[u];i!=0;i=e[i].next)\n        {\n            int to=e[i].to;\n            if(minn[u]+e[i].cost<minn[to])\n            {\n                minn[to]=minn[u]+e[i].cost;\n                if(vis[to]==0)\n                {\n                    vis[to]=1;\n                    t++;\n                    team[t]=to;\n                }\n            }\n        }\n    }\n}\nint main()\n{\n    int n,m;\n    int x[100001],y[100001],z[100001];\n    cin>>n>>m;\n    for(int i=1;i<=m;i++)\n    {\n        cin>>x[i]>>y[i]>>z[i];\n        add(x[i],y[i],z[i]);\n    }\n    spfa(1);\n    for(int i=2;i<=n;i++) sum=sum+minn[i];\n    memset(e,0,sizeof(e));\n    memset(head,0,sizeof(head));\n    for(int i=1;i<=m;i++)\n    {\n        add(y[i],x[i],z[i]);\n    }\n    for(int i=2;i<=n;i++)\n    {\n        spfa(1);\n        sum=sum+minn[i];\n    }\n    cout<<sum<<endl;\n    return 0;\n}\n```",
        "postTime": 1479354250,
        "uid": 18441,
        "name": "Drug__Lover",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1629 \u3010\u90ae\u9012\u5458\u9001\u4fe1\u3011"
    },
    {
        "content": "\u633a\u7b80\u5355\u7684SPFA\u3002\n\n\u7531\u4e8e\u6bcf\u4e00\u6b21\u53ea\u80fd\u5e26\u4e00\u4ef6\u7269\u54c1\uff0c\u6240\u4ee5\u90ae\u9012\u5458\u9700\u8981\u4ece1\u8d70\u5230\u5404\u70b9\u8fd4\u56de1\u518d\u51fa\u53d1\n\n\u5c31\u662f1\u5230\u5404\u70b9\u6700\u77ed\u8def\u52a0\u4e0a\u5404\u70b9\u5230\u4e00\u6700\u77ed\u8def\n\n\u524d\u8005\u4e00\u904dSPFA\u3002\n\n\u540e\u8005\u76f8\u5f53\u4e8e\u4ece1\u9006\u5411\u8d70\u5230\u6240\u6709\u70b9\uff0c\u6240\u4ee5\u628a\u8fb9\u53cd\u5411\u7136\u540e\u518d\u4e00\u6b21SPFA\n\nAC\uff01\n        \n    \n```cpp\n#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <string>\n#include <cstring>\n#include <algorithm>\n#include <cstdlib>\n#include <queue>\nusing namespace std;\nint n,m,ans;\nstruct edge\n{\n    int to,l;\n}d1[1001][1001];\nint x[100001],y[100001],z[100001];\nint len[1001];\nvoid spfa()\n{\n    bool inque[1001];\n    int u,v;\n    queue<int>q;\n    q.push(1);inque[1]=1;\n    int d[1001];\n    memset(d,127,sizeof(d));\n    memset(inque,0,sizeof(inque));\n    d[1]=0;\n    while(!q.empty())\n    {\n        u=q.front();q.pop();inque[u]=0;\n        for(int i=1;i<=len[u];i++)\n        {\n            v=d1[u][i].to;\n            if(d1[u][i].l+d[u]<d[v])\n            {\n                d[v]=d1[u][i].l+d[u];\n                if(!inque[v])\n                {\n                    q.push(v);\n                    inque[v]=1;\n                }\n            }\n        }\n    }\n    for(int i=2;i<=n;i++)\n    ans+=d[i];\n}\nint main()\n{\n    //freopen(\"post.in\",\"r\",stdin);\n    //freopen(\"post.out\",\"w\",stdout);\n    scanf(\"%d%d\",&n,&m);\n    edge tmp;\n    for(int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d%d\",&x[i],&y[i],&z[i]);\n        d1[x[i]][++len[x[i]]].to=y[i];\n        d1[x[i]][len[x[i]]].l=z[i];\n    }\n    spfa();\n    memset(d1,0,sizeof(d1));\n    memset(len,0,sizeof(len));\n    for(int i=1;i<=m;i++)\n    {\n        d1[y[i]][++len[y[i]]].to=x[i];\n        d1[y[i]][len[y[i]]].l=z[i];\n    }\n    spfa();\n    printf(\"%d\",ans);\n}\n```",
        "postTime": 1479206737,
        "uid": 2491,
        "name": "\u8bd7\u4e43",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1629 \u3010\u90ae\u9012\u5458\u9001\u4fe1\u3011"
    },
    {
        "content": "pascal\u7248\u2014\u2014spfa\u7b97\u6cd5\n\n\u5e94\u4e3a\u53ea\u80fd\u5e26\u4e00\u4ef6\u7269\u54c1\uff0c\u6545\u6bcf\u6b21\u4ece1\u6751\u51fa\u53d1\uff0c\u5230i\uff081<=i<=n\uff09\u6751\u53bb\uff1b\n\n\u76f8\u5f53\u4e8e\u4ece1\u6751\u5230\u6240\u6709\u6751\u6700\u77ed\u8def\u52a0\u6240\u6709\u6751\uff08\u96641\u6751\uff09\u52301\u6751\u6700\u77ed\u8def\uff1b\n\n\u8f93\u5165\u4e3a//a b c\uff1b\u8868\u793a\uff08a->b\uff0c\u8ddd\u79bb\u4e3ac\uff09\uff1b\n\n\u5176\u5b9e\u53ef\u4ee5\u7528spfa\u7b97\u6cd5\u6c42\u5b8c1\u5230n\u7684\u6700\u77ed\u8def\u65f6\uff1b\n\n\u5c06\u6240\u6709\u70b9\u4ea4\u6362//\u5982\uff1aa b c->b a c;(\u7531\u6b64\u518d\u6c42\u4e00\u904dspfa\uff0c\u5373\u4e3a\u5404\u70b9\u52301\u6751\u7684\u6700\u77ed\u8def\uff09\uff08\u8bb0\u5f97\u5206\u4e24\u4e2a\u6570\u7ec4\u4fdd\u5b58\uff09\uff1b\n\n```cpp\nvar a:array[1..100000,1..3] of longint;//(\u540c\u4e0b\uff09\uff1b\n    next:array[1..100000] of longint;//\uff08\u540c\u4e0b\uff09\uff1b\n    last:array[1..1000] of longint;///\uff08\u540c\u4e0a\uff0c\u4e00\u8d77\u4e3a\u8fb9\u96c6\u6570\u7ec4\uff09\uff1b\n    go,back:array[1..1000] of longint;//\u5206\u4e24\u4e2a\u6570\u7ec4\u5b58\u6700\u77ed\u8def\uff1b\n    dl:array[1..200000] of longint;//spfa\u961f\u5217\uff08\u4f60\u5f00\u5faa\u73af\u961f\u5217\uff0c\u6211\u4e5f\u6ca1\u610f\u89c1\uff09\uff1b\n    f:array[1..1000] of boolean;//\u5165\u961f\u5224\u91cd\uff1b\n    n,m,j,k,l,i,b,c,ds,dw:longint;\n    ans:int64;\nprocedure exchange(t:longint);//\u70b9\u4ea4\u6362\uff1b\n      var i,j,k:longint;\nbegin\n  i:=a[t,1];\n  a[t,1]:=a[t,2];\n  a[t,2]:=i;\n  next[t]:=last[a[t,1]];\n  last[a[t,1]]:=t;\nend;\nfunction relax1(i:longint):boolean;//spfa\u677e\u5f1b;\n     var j,k,l:longint;\nbegin\n  if (a[i,3]<>0)and(go[a[i,1]]+a[i,3]<go[a[i,2]]) then\n  begin\n    go[a[i,2]]:=go[a[i,1]]+a[i,3];\n    exit(true);\n  end;\n  exit(false);\nend;\nfunction relax2(i:longint):boolean;//\uff08\u540c\u4e0a\uff09\uff1b\n     var j,k,l:longint;\nbegin\n  if (a[i,3]<>0)and(back[a[i,1]]+a[i,3]<back[a[i,2]]) then\n  begin\n    back[a[i,2]]:=back[a[i,1]]+a[i,3];\n    exit(true);\n  end;\n  exit(false);\nend;\nbegin\n      readln(n,m);\n      for i:=1 to m do\n      begin\n       readln(a[i,1],a[i,2],a[i,3]);\n       next[i]:=last[a[i,1]];\n       last[a[i,1]]:=i;\n      end;\n      ds:=0;\n      dw:=1;\n      dl[1]:=1;\n      f[1]:=true;\n      fillchar(go,sizeof(go),127);\n      go[1]:=0;\n      repeat\n        inc(ds);\n        l:=dl[ds];\n        k:=last[l];\n        f[l]:=false;\n        while k<>0 do\n        begin\n          if relax1(k)and(f[a[k,2]]=false) then\n             begin\n                inc(dw);dl[dw]:=a[k,2];\n                f[a[k,2]]:=true;\n             end;\n          k:=next[k];\n        end;\n      until ds>=dw;\n      fillchar(next,sizeof(next),0);\n      fillchar(last,sizeof(last),0);\n      fillchar(back,sizeof(back),127);\n      fillchar(f,sizeof(f),false);\n      for i:=1 to m do exchange(i);\n      ds:=0;\n      dw:=1;\n      dl[1]:=1;\n      f[1]:=true;\n      back[1]:=0;\n      repeat\n        inc(ds);\n        l:=dl[ds];\n        k:=last[l];\n        f[l]:=false;\n        while k<>0 do\n        begin\n          if relax2(k)and(f[a[k,2]]=false) then\n             begin\n                inc(dw);dl[dw]:=a[k,2];\n                f[a[k,2]]:=true;\n             end;\n          k:=next[k];\n        end;\n      until ds>=dw;\n      for i:=1 to n do ans:=ans+go[i]+back[i];\n      writeln(ans);\nend.\n```",
        "postTime": 1471080263,
        "uid": 13479,
        "name": "\u667a\u4e4b\u661f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1629 \u3010\u90ae\u9012\u5458\u9001\u4fe1\u3011"
    }
]