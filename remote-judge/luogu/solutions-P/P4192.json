[
    {
        "content": "## \u5206\u6790\n\u8f6c\u5316\u4e00\u4e0b\u9898\u610f\n\n\u533a\u95f4\u52a0\u7b49\u5dee\u6570\u5217\uff0c\u67e5\u8be2\u533a\u95f4\u6700\u5927\u503c\n\n\u5982\u679c\u662f\u5355\u70b9\u67e5\u8be2\u7684\u8bdd\uff0c\u53ef\u4ee5\u5728\u7ebf\u6bb5\u6811\u4e0a\u6253\u4e00\u4e2a\u6807\u8bb0\uff0c\u8fb9\u67e5\u8be2\u8fb9\u4e0b\u653e\n\n\u4f46\u662f\u533a\u95f4\u67e5\u8be2\u7684\u8bdd\u9700\u8981\u6574\u68f5\u6811\u4e0b\u653e\u6807\u8bb0\uff0c\u590d\u6742\u5ea6\u592a\u9ad8\n\n\u8003\u8651\u4e07\u80fd\u7684\u5206\u5757\u505a\u6cd5\n\n\u56e0\u4e3a\u7b49\u5dee\u6570\u5217\u52a0\u7b49\u5dee\u6570\u5217\u8fd8\u662f\u8fd8\u662f\u4e00\u4e2a\u7b49\u5dee\u6570\u5217\n\n\u6240\u4ee5\u5bf9\u6bcf\u4e00\u4e2a\u5757\u7ef4\u62a4\u7b49\u5dee\u6570\u5217\u7684\u9996\u9879 $beg$ \u4ee5\u53ca\u516c\u5dee $d$\n\n\u8fd9\u6837\uff0c\u4e00\u4e2a\u5757\u5185\u6240\u6709\u70b9\u7684\u503c\u90fd\u53ef\u4ee5\u5199\u6210\u4e0e\u4e0b\u6807\u76f8\u5173\u7684\u4e00\u6b21\u51fd\u6570\u7684\u5f62\u5f0f\n\n\u5373 $ans[i]=i \\times d+sum[i]$\n\n$sum[i]=ans[i]-i \\times d$\n\n\u5176\u4e2d $sum[i]$ \u4e3a\u4e0a\u4e00\u6b21\u91cd\u6784\u540e $i$ \u5904\u524d\u7f00\u548c\u7684\u503c\n\n\u5bf9\u4e8e\u6574\u4e2a\u5757\u7684\u9996\u9879\uff0c\u6211\u4eec\u5148\u4e0d\u53bb\u8003\u8651\uff0c\u6700\u540e\u628a\u5b83\u52a0\u4e0a\u5373\u53ef\n\n\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u4e0b\u6807 $i$ \u770b\u6210\u6a2a\u5750\u6807\uff0c\u628a $sum[i]$ \u770b\u6210\u7eb5\u5750\u6807\uff0c\u628a $-d$ \u770b\u6210\u659c\u7387\n\n\u5982\u679c\u662f\u5bf9\u6574\u4e2a\u5757\u8fdb\u884c\u4fee\u6539\uff0c\u90a3\u4e48\u6a2a\u7eb5\u5750\u6807\u90fd\u662f\u4e0d\u53d8\u7684\n\n\u53d8\u5316\u7684\u53ea\u662f\u659c\u7387 \n\n\u56e0\u6b64\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u4e0a\u51f8\u58f3\n\n\u5728\u4e0a\u51f8\u58f3\u4e2d\u4e8c\u5206\u67e5\u627e\u4f7f\u622a\u8ddd $ans[i]$ \u6700\u5927\u7684\u70b9\n\n\u5982\u679c\u662f\u5bf9\u5757\u7684\u4e00\u90e8\u5206\u8fdb\u884c\u4fee\u6539\u6216\u67e5\u8be2\uff0c\u6211\u4eec\u5c31\u628a\u8fd9\u4e2a\u5757\u8fdb\u884c\u66b4\u529b\u91cd\u6784\uff0c\u91cd\u65b0\u5efa\u4e00\u4e2a\u51f8\u5305\n\n\u5982\u679c\u5757\u957f\u662f $\\sqrt{n}$ \u7684\u8bdd\n\n\u590d\u6742\u5ea6\u5c31\u662f $m\\sqrt{n}log\\sqrt{n}$\n## \u4ee3\u7801\n``` cpp\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n#include<vector>\n#define rg register\ninline int read(){\n\trg int x=0,fh=1;\n\trg char ch=getchar();\n\twhile(ch<'0' || ch>'9'){\n\t\tif(ch=='-') fh=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0' && ch<='9'){\n\t\tx=(x<<1)+(x<<3)+(ch^48);\n\t\tch=getchar();\n\t}\n\treturn x*fh;\n}\nconst int maxn=1e5+5;\ntypedef double db;\nconst db eps=1e-18;\nstruct Node{\n\tint x;\n\tlong long y;\n\tNode(){}\n\tNode(rg int aa,rg long long bb){\n\t\tx=aa,y=bb;\n\t}\n\tfriend bool operator < (const Node& A,const Node& B){\n\t\tif(A.x==B.x) return A.y<B.y;\n\t\telse return A.x<B.x;\n\t}\n};\nint shuyu[maxn],blo,n,m,l[maxn],r[maxn],tp,tail;\nstd::vector<Node> ans[maxn];\nNode sta[maxn],que[maxn];\nlong long beg[maxn],sum[maxn],d[maxn];\ninline double xl(rg Node aa,rg Node bb){\n\tif(std::fabs((double)bb.x-(double)aa.x)<eps){\n\t\tif(std::fabs((double)bb.y-(double)aa.y)<eps) return 0;\n\t\telse if(bb.y>aa.y) return 1e18;\n\t\telse return -1e18;\n\t}\n\treturn ((double)bb.y-(double)aa.y)/((double)bb.x-(double)aa.x);\n}\nvoid build(rg int id){\n\tif(d[id]){\n\t\tfor(rg int i=l[id];i<=r[id];i++) sum[i]+=1LL*d[id]*(i-l[id]+1);\n\t\td[id]=0;\n\t}\n\tif(beg[id]){\n\t\tfor(rg int i=l[id];i<=r[id];i++) sum[i]+=beg[id];\n\t\tbeg[id]=0;\n\t}\n\ttp=tail=0;\n\tans[id].clear();\n\tfor(rg int i=l[id];i<=r[id];i++) sta[++tp]=Node(i-l[id]+1,sum[i]);\n\tstd::sort(sta+1,sta+tp+1);\n\tfor(rg int i=1;i<=tp;i++){\n\t\twhile(tail>1 && xl(que[tail],sta[i])>=xl(que[tail-1],que[tail])) tail--;\n\t\tque[++tail]=sta[i];\n\t}\n\tfor(rg int i=1;i<=tail;i++) ans[id].push_back(que[i]);\n}\nvoid xg(rg int nl,rg int nr,rg int val){\n\tfor(rg int i=nl;i<=std::min(r[shuyu[nl]],nr);i++){\n\t\tsum[i]+=1LL*val*(i-nl+1);\t\n\t}\n\tfor(rg int i=nr+1;i<=r[shuyu[nr]];i++){\n\t\tsum[i]+=1LL*val*(nr-nl+1);\n\t}\n\tfor(rg int i=shuyu[nr]+1;i<=shuyu[n];i++){\n\t\tbeg[i]+=1LL*val*(nr-nl+1);\n\t}\n\tbuild(shuyu[nl]);\n\tif(shuyu[nl]==shuyu[nr]) return;\n\tfor(rg int i=l[shuyu[nr]];i<=nr;i++){\n\t\tsum[i]+=1LL*val*(i-nl+1);\n\t}\n\tbuild(shuyu[nr]);\n\tfor(rg int i=shuyu[nl]+1;i<=shuyu[nr]-1;i++){\n\t\tbeg[i]+=1LL*(l[i]-nl)*val;\n\t\td[i]+=val;\n\t}\n}\nlong long qjcx(rg int id){\n\trg int nl=1,nr=ans[id].size(),mids;\n\trg double nans=-1.0*d[id];\n\twhile(nl<nr){\n\t\tmids=(nl+nr)>>1;\n\t\tif(xl(ans[id][mids-1],ans[id][mids])<=nans) nr=mids;\n\t\telse nl=mids+1;\n\t}\n\tnl--;\n\treturn (long long)ans[id][nl].y+(long long)d[id]*ans[id][nl].x+(long long)beg[id];\n}\nlong long cx(rg int nl,rg int nr){\n\tbuild(shuyu[nl]);\n\trg long long nans=-0x3f3f3f3f3f3f3f3f;\n\tfor(rg int i=nl;i<=std::min(r[shuyu[nl]],nr);i++) nans=std::max(nans,sum[i]);\n\tif(shuyu[nl]==shuyu[nr]) return nans;\n\tbuild(shuyu[nr]);\n\tfor(rg int i=l[shuyu[nr]];i<=nr;i++) nans=std::max(nans,sum[i]);\n\tfor(rg int i=shuyu[nl]+1;i<=shuyu[nr]-1;i++){\n\t\tnans=std::max(nans,qjcx(i));\n\t}\n\treturn nans;\n}\nint main(){\n\tmemset(l,0x3f,sizeof(l));\n\tn=read();\n\tblo=sqrt(n);\n\tfor(rg int i=1;i<=n;i++) shuyu[i]=(i-1)/blo+1;\n\tfor(rg int i=1;i<=n;i++) sum[i]=read();\n\tfor(rg int i=1;i<=n;i++) sum[i]+=sum[i-1];\n\tfor(rg int i=1;i<=n;i++){\n\t\tl[shuyu[i]]=std::min(l[shuyu[i]],i);\n\t\tr[shuyu[i]]=std::max(r[shuyu[i]],i);\n\t}\n\tfor(rg int i=1;i<=shuyu[n];i++) build(i);\n\tm=read();\n\trg int aa,bb,cc,dd;\n\tfor(rg int i=1;i<=m;i++){\n\t\taa=read(),bb=read(),cc=read();\n\t\tif(aa==0){\n\t\t\tdd=read();\n\t\t\txg(bb,cc,dd);\n\t\t} else {\n\t\t\tprintf(\"%lld\\n\",cx(bb,cc));\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1609739985,
        "uid": 316322,
        "name": "hzoi_liuchang",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4192 \u3010\u65c5\u884c\u89c4\u5212\u3011"
    },
    {
        "content": "\u96be\u5f97\u9047\u89c1\u4e00\u9053\u6ca1\u770b\u9898\u89e3AC\u7684\u9898\uff0c\u53c8\u6070\u597d\u6ca1\u6709\u9898\u89e3\uff0c\u8d76\u7d27\u81ea\u5df1\u5199\u4e00\u4e2a\u7eaa\u5ff5\u4e00\u4e0b\u3002\u524d\u7f6e\u77e5\u8bc6\uff1a\u5206\u5757\u3001\u534a\u5e73\u9762\u4ea4\u3002\u4e0d\u4f1a\u7684\u540c\u5b66\u53ef\u4ee5\u81ea\u884c\u67e5\u627e\u8d44\u6599\u3002  \n\u4e00\u53e5\u8bdd\u9898\u610f\uff1a\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a$n$\u7684\u5e8f\u5217\u548c$m$\u4e2a\u64cd\u4f5c\uff0c\u5206\u522b\u662f\u533a\u95f4\u52a0\u6cd5\u548c\u67e5\u8be2\u533a\u95f4\u5185\u6700\u5927\u524d\u7f00\u548c\u3002\u6570\u636e\u8303\u56f4$1e5$\u3002  \n\u5982\u679c\u662f\u5355\u70b9\u4fee\u6539\uff0c\u76f4\u63a5\u7ebf\u6bb5\u6811\u5373\u53ef\u5bf9\u4ed8\u3002\u4f46\u662f\u5bf9\u4e8e\u533a\u95f4\u4fee\u6539\uff0c\u7ebf\u6bb5\u6811\u5c31\u65e0\u6cd5\u80dc\u4efb\u4e86\u3002\u751a\u81f3\u8fd9\u9053\u9898\u672a\u5fc5\u6709$nlogn$\u7ea7\u7684\u7b97\u6cd5\u3002  \n\u4e8e\u662f\u6211\u4eec\u8003\u8651\u5206\u5757\u3002\u663e\u7136\uff0c\u6211\u4eec\u53ea\u8981\u6709\u529e\u6cd5\u5904\u7406\u5168\u5c40\u52a0\u6cd5\uff0c\u5c31\u53ef\u4ee5\u8f7b\u677e\u8bbe\u8ba1\u4e00\u4e2a\u6839\u53f7\u7ea7\u7684\u5206\u5757\u7b97\u6cd5\u3002\u4ee4$S_{i}$\u8868\u793a\u521d\u59cb\u65f6\u7b2c$i$\u4e2a\u4f4d\u7f6e\u7684\u524d\u7f00\u548c\u3002\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5728\u5168\u5c40\u52a0x\u7684\u60c5\u51b5\u4e0b\uff0c\u7b2c$i$\u4e2a\u4f4d\u7f6e\u7684\u524d\u7f00\u548c\u4e3a$ix+S_{i}$\uff0c\u662f\u4e00\u4e2a\u4e00\u6b21\u51fd\u6570\u3002\u4e8e\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u534a\u5e73\u9762\u4ea4\u7ef4\u62a4\u4e00\u4e2a\u51f8\u58f3\uff0c\u67e5\u8be2\u65f6\u76f4\u63a5\u5728\u51f8\u58f3\u4e0a\u4e8c\u5206\u5c31\u53ef\u4ee5\u4e86\u3002\u7531\u4e8e$i$\u5355\u8c03\u9012\u589e\uff0c\u6211\u4eec\u53ea\u8981\u628a\u8fd9\u4e9b\u76f4\u7ebf\u4f9d\u6b21\u52a0\u5165\u5355\u8c03\u6808\u5373\u53ef\u3002  \n\u6709\u4e86\u4e0a\u9762\u7684\u601d\u8def\uff0c\u5bf9\u4e8e\u672c\u9898\u8981\u6c42\u7684\u533a\u95f4\u52a0\u6cd5\uff0c\u6211\u4eec\u4e5f\u5f88\u5bb9\u6613\u89e3\u51b3\u4e86\u3002\u7528\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u503c\uff0c\u5e76\u4e14\u628a\u5e8f\u5217\u5206\u6210\u6839\u53f7\u4e2a\u5757\uff0c\u6bcf\u4e2a\u5757\u5185\u5bf9\u4e8e\u672c\u5757\u5185\u7684\u6570\u636e\u6309\u7167\u4e0a\u4e00\u6bb5\u7684\u65b9\u6cd5\u7ef4\u62a4\u4e00\u4e2a\u51f8\u58f3\u3002\u67e5\u8be2\u65f6\u53ea\u8981\u52a0\u4e0a\u524d\u9762\u5757\u7684\u524d\u7f00\u548c\u5c31\u662f\u672c\u533a\u95f4\u7684\u7b54\u6848\u3002\u4e0d\u5b8c\u6574\u7684\u5757\u76f4\u63a5\u66b4\u529b\u626b\u4e00\u904d\u6811\u72b6\u6570\u7ec4\u3002  \n\u5bf9\u4e8e\u4fee\u6539\u64cd\u4f5c\uff0c\u5b8c\u6574\u7684\u5757\u6253\u4e00\u4e2a\u6807\u8bb0\u8868\u793a\u5f53\u524d\u52a0\u4e86\u591a\u5c11\uff0c\u4e0d\u5b8c\u6574\u7684\u5757\u76f4\u63a5\u67e5\u8be2\u6811\u72b6\u6570\u7ec4\u91cd\u5efa\u5e76\u4e14\u628a\u6807\u8bb0\u6e05\u96f6\u3002  \n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a  \n\u4fee\u6539\uff1a\u6574\u5757$O(1)$,\u4e0d\u5b8c\u6574\u7684\u5757$O(\\sqrt{n}logn)$  \n\u67e5\u8be2\uff1a\u6574\u5757\u548c\u4e0d\u5b8c\u6574\u7684\u5757\u90fd\u662f$O(\\sqrt{n}logn)$  \n\u6240\u4ee5\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f$O(m\\sqrt{n}logn)$\u3002~~\u6ca1\u60f3\u5230\u5f00\u4e86O2\u6700\u5927\u7684\u70b9\u4e5f\u624d\u7528\u4e86\u4e0d\u5230\u4e00\u79d2~~  \n\u5176\u5b9e\u8fd9\u4e00\u9053\u9898\u53ef\u4ee5\u770b\u4f5c\u8457\u540d\u7684[ P4680 [Ynoi2018]\u672b\u65e5\u65f6\u5728\u505a\u4ec0\u4e48?\u6709\u6ca1\u6709\u7a7a?\u53ef\u4ee5\u6765\u62ef\u6551\u5417?](https://www.luogu.org/problemnew/show/P4680)\u7684\u5927\u5e45\u524a\u5f31\u7248\u3002  \n\u4e0b\u9762\u662f\u4ee3\u7801\uff0c\u5bf9\u4e86\uff0c\u8bb0\u5f97\u5f00long long\u548c\u6ce8\u610f\u56db\u820d\u4e94\u5165\n```\n#include <cstdlib>\n#include <iostream>\n#include <cstdio>\n#include <math.h>\n#include <cstring>\n#include <time.h>\n#include <utility>\n\n#pragma warning(disable:4996)\n#define INF 200000000000005//2 * 10^9\n#define lowbit(a) ((a)&-(a))\ninline long long max(long long a, long long b)\n{\n    return a > b ? a : b;\n}\ninline long long min(long long a, long long b)\n{\n    return a < b ? a : b;\n}\n\nconst long long MAXN = 100005;\nconst long long B = 300;\n\nstruct line {\n    double k;\n    double b;\n    line(double K = 0, double B = 0)\n    {\n        k = K;\n        b = B;\n    }\n    double calc(double x)\n    {\n        return k*x + b;\n    }\n    double inter(line t)\n    {\n        return (t.b - b) / (k - t.k);\n    }\n};\n\nstruct BLOCK {\n    line q[B];\n    long long l, r;\n    void clear()\n    {\n        l = r = 0;\n    }\n    void init(long long *a, int L, int R)\n    {\n        clear();\n        for (int i = L + 1; i <= R; i++)\n            a[i] += a[i - 1];\n        for (int i = L; i <= R; i++)\n        {\n            line t(i - L + 1, a[i]);\n            while (r - l > 1 && q[r - 2].inter(q[r - 1]) > t.inter(q[r - 2]))\n                r--;\n            q[r++] = t;\n        }\n    }\n    double query(long long k)\n    {\n        if (q[0].inter(q[1]) > k)\n            return q[0].calc(k);\n        if (q[r - 2].inter(q[r - 1]) < k)\n            return q[r - 1].calc(k);\n\n        long long a = l, b = r - 2;\n        while (b - a > 1)\n        {\n            int mid = (a + b) / 2;\n            if (q[mid].inter(q[mid + 1]) > k)\n                b = mid;\n            else\n                a = mid;\n        }\n        return q[b].calc(k);\n    }\n};\n\nstruct tree {\nprivate:\n    long long e[MAXN];\n    void update(long long id, long long k)\n    {\n        while (id < MAXN)\n        {\n            e[id] += k;\n            id += lowbit(id);\n        }\n    }\npublic:\n    void update(long long l, long long r, long long k)\n    {\n        update(l, k);\n        update(r + 1, -k);\n    }\n    long long query(long long id)\n    {\n        long long ans = 0;\n        while (id > 0)\n        {\n            ans += e[id];\n            id -= lowbit(id);\n        }\n        return ans;\n    }\n};\n\nlong long N, M;\ntree T;\nlong long a[MAXN], b[MAXN];\nlong long L[500], R[500], add[500], sum[500], cnt;\nBLOCK block[500];\n\nvoid init()\n{\n    scanf(\"%lld\", &N);\n    for (cnt = 1; ; cnt++)\n    {\n        L[cnt] = R[cnt - 1] + 1;\n        R[cnt] = R[cnt - 1] + B;\n        if (R[cnt] > N)\n            R[cnt] = N;\n        for (long long i = L[cnt]; i <= R[cnt]; i++)\n            b[i] = cnt;\n        if (R[cnt] == N)\n            break;\n    }\n\n    for (long long i = 1; i <= N; i++)\n    {\n        scanf(\"%lld\", a + i);\n        sum[b[i]] += a[i];\n        T.update(i, i, a[i]);\n    }\n    scanf(\"%lld\", &M);\n\n    for (long long i = 1; i <= cnt; i++)\n    {\n        block[i].init(a, L[i], R[i]);\n        sum[i] += sum[i - 1];\n    }\n}\n\nvoid update(long long l, long long r, long long k)\n{\n    T.update(l, r, k);\n    for (long long i = b[l]; i <= cnt; i++)\n        sum[i] += (min(R[i], r) - l + 1)*k;\n    for (long long i = b[l] + 1; i < b[r]; i++)\n        add[i] += k;\n\n    for (long long i = L[b[l]]; i <= R[b[l]]; i++)\n        a[i] = T.query(i);\n    add[b[l]] = 0;\n    block[b[l]].init(a, L[b[l]], R[b[l]]);\n\n    if (b[l] == b[r])\n        return;\n\n    for (long long i = L[b[r]]; i <= R[b[r]]; i++)\n        a[i] = T.query(i);\n    add[b[r]] = 0;\n    block[b[r]].init(a, L[b[r]], R[b[r]]);\n}\n\nlong long F(double x)\n{\n    return (long long)(x > 0 ? x + 0.5 : x - 0.5);\n}\n\nlong long query(long long l, long long r)\n{\n    long long ans = -INF, t;\n    long long i;\n\n    for (i = b[l] + 1; i < b[r]; i++)\n        ans = (long long)max(ans, F(block[i].query(add[i]) + sum[i - 1]));\n    t = 0;\n    for (i = L[b[l]]; i <= min(R[b[l]], r); i++)\n    {\n        t += T.query(i);\n        if (i >= l)\n            ans = (long long)max(ans, t + sum[b[l] - 1]);\n    }\n\n    if (b[l] == b[r])\n        return ans;\n\n    t = 0;\n    for (i = L[b[r]]; i <= r; i++)\n    {\n        t += T.query(i);\n        ans = (long long)max(ans, t + sum[b[r] - 1]);\n    }\n\n    return ans;\n}\n\nint main()\n{\n    long long i;\n    long long op, x, y, k;\n\n    init();\n\n    for (i = 0; i < M; i++)\n    {\n        scanf(\"%lld %lld %lld\", &op, &x, &y);\n        if (op)\n            printf(\"%lld\\n\", query(x, y));\n        else\n        {\n            scanf(\"%lld\", &k);\n            update(x, y, k);\n        }\n    }\n\n//\tsystem(\"pause\");\n    return 0;\n}\n```",
        "postTime": 1539706815,
        "uid": 64366,
        "name": "ddwqwq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4192 \u3010\u65c5\u884c\u89c4\u5212\u3011"
    },
    {
        "content": "\u6587\u7ae0\u540c\u65f6\u53d1\u8868\u4e8e\u6211\u7684CSDN\u4e0a\uff1a[\u4f20\u9001\u95e8](https://blog.csdn.net/g21glf/article/details/86629448)\n\n\u5e38\u6570\u5de8\u5927\u8b66\u544aqwq\u3002\n\n\u8fd9\u9053\u9898\u5176\u5b9e\u9898\u610f\u5f88\u7b80\u5355\uff0c\u7ef4\u62a4\u4e00\u4e2a\u5e8f\u5217\uff0c\u652f\u6301\u533a\u95f4\u52a0\uff0c\u533a\u95f4\u67e5\u8be2\u6700\u5927\u524d\u7f00\u548c\u3002\n\n\u56e0\u4e3a\u662f\u67e5\u8be2\u524d\u7f00\u548c\u6240\u4ee5\u76f4\u63a5\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4\u548c\uff0c\u533a\u95f4\u52a0\u5c31\u53d8\u6210\u4e86\u533a\u95f4\u52a0\u9996\u9879\u4e3ak\u3001\u516c\u5dee\u4e3ak\u7684\u7b49\u5dee\u6570\u5217\u3002\n\n\u56e0\u4e3a\u4e00\u4e2a\u7b49\u5dee\u6570\u5217+\u4e00\u4e2a\u7b49\u5dee\u6570\u5217\u8fd8\u662f\u4e00\u4e2a\u7b49\u5dee\u6570\u5217\uff0c\u6240\u4ee5\u8fd9\u6837\u505a\u662f\u6b63\u786e\u7684\u3002\n\n\u6240\u4ee5\u5c31\u6709\u4e24\u4e2a\u9009\u62e9\uff1a\u7ebf\u6bb5\u6811\u548c\u5206\u5757\uff0c\u4f46\u8003\u8651\u5230\u7ebf\u6bb5\u6811\u6700\u540e\u5408\u5e76\u6548\u7387\u4f4e\u4e0b\uff0c\u6240\u4ee5\u9009\u5206\u5757\uff08\u7ed3\u679c\u4e0d\u77e5\u9053\u4e3a\u5565\u6211\u7684\u5199\u6cd5\u5e38\u6570\u8d3c\u5927\uff09\n\n\u6240\u4ee5\u5c31\u5f003\u4e2a\u6570\u7ec4\uff0c\u5206\u522b\u7ef4\u62a4\u6bcf\u4e2a\u5757\u7684\u7b49\u5dee\u6570\u5217\u9996\u9879\u3001\u516c\u5dee\u4ee5\u53ca\u4e00\u4e2aadd\u6807\u8bb0\u3002\n\n\u533a\u95f4\u52a0\u7684\u65f6\u5019\u9047\u4e0a\u6574\u5757\u76f4\u63a5\u52a0\u5728\u9996\u9879\u548c\u516c\u5dee\u4e0a\uff0c\u67e5\u8be2\u65f6\u76f4\u63a5\u8fd4\u56de\uff08\u5f53\u524d\u503c+\u5757\u9996\u9879+\u516c\u5dee*\uff08\u5f53\u524d\u4f4d\u7f6e-\u5757\u5de6\u7aef\u4f4d\u7f6e\uff09+add\uff09\u5373\u53ef\u3002\n\n\u90a3\u4e48\u600e\u4e48\u67e5\u8be2\u4e00\u4e2a\u6574\u5757\u7684\u524d\u7f00\u548c\u6700\u5927\u503c\uff1f\n\n\u5982\u679c\u5c06\u533a\u95f4\u5185\u6240\u6709\u70b9\u653e\u5728\u5e73\u9762\u4e0a\uff0c\u5750\u6807\u4e3a\uff08\u4e0b\u6807\uff0c\u524d\u7f00\u548c\uff09\uff0c\u90a3\u4e48\u53ef\u4ee5\u53d1\u73b0\uff0c\u6700\u5927\u7684\u524d\u7f00\u548c\u6240\u5bf9\u5e94\u7684\u70b9\u4e00\u5b9a\u662f\u5728\u51f8\u5305\u4e0a\u4e14\u4e00\u5b9a\u662f\u6700\u9ad8\u70b9\uff0c\u53ef\u4ee5\u76f4\u63a5\u4e8c\u5206\u3002\n\n\u6240\u4ee5\u76f4\u63a5\u5bf9\u6bcf\u4e2a\u5757\u66b4\u529b\u7ef4\u62a4\u5176\u51f8\u5305\u3002\n\n\u7136\u540e\u5c31\u662f\u4e00\u4e9b\u5c0f\u7ec6\u8282\u3002\n\n\u6ce8\u610f\u6bcf\u6b21update\u5b8c\u540e\u8981\u5728belong[y]+1~num\u7684\u5757\u7684add\u6570\u7ec4\u6253\u6807\u8bb0\uff0c\u56e0\u4e3a\u524d\u9762\u7684\u533a\u95f4\u52a0\u5bf9\u524d\u7f00\u548c\u6709(y-x+1)*k\u7684\u5f71\u54cd\u3002\n\n\u540c\u65f6\uff0c\u8981\u5728\u5c06y+1~r[belong[y]]\u66f4\u65b0\u5b8c\u540e\u518d\u7ef4\u62a4\u51f8\u5305\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nconst int MAXN=1e5+10;\nconst int MAXM=350;\nconst LL INF=1e18;\n\nint n,q;\nLL a[MAXN];\nint num,siz;\nint belong[MAXN],l[MAXM],r[MAXM];\nLL sx[MAXM],gc[MAXM],add[MAXM];\nint sta[MAXM],top;\nint cov[MAXM][MAXM];\nint cnt[MAXM];\n\nLL Read(){\n\tLL i=0,f=1;\n\tchar c;\n\tfor(c=getchar();(c>'9'||c<'0')&&c!='-';c=getchar());\n\tif(c=='-')\n\t  f=-1,c=getchar();\n\tfor(;c>='0'&&c<='9';c=getchar())\n\t  i=(i<<3)+(i<<1)+c-'0';\n\treturn i*f;\n}\n\ndouble xl(int x,int y){                //\u6c42\u659c\u7387 \n\treturn (double)((a[x]-a[y])/(x-y));\n}\n\nvoid build(int x){                     //\u66b4\u529b\u7ef4\u62a4\u51f8\u5305 \n\ttop=0;\n\tsta[++top]=l[x];\n\tfor(int i=l[x]+1;i<=r[x];++i){\n\t\twhile(top>=2&&xl(sta[top-1],sta[top])<xl(sta[top-1],i))\n\t\t  top--;\n\t\tsta[++top]=i;\n\t}\n\tsta[0]=0,sta[top+1]=n+1;           //\u5c06\u51f8\u5305\u4e2d\u7684\u70b9\u8bb0\u5f55\u4e0b\uff0c\u4e8c\u5206\u7528 \n\tcnt[x]=top;\n\tfor(int i=0;i<=top+1;++i)\n\t  cov[x][i]=sta[i];\n}\n\nvoid fk(){                            //\u5206\u5757 \n\tsiz=sqrt(n);\n\tnum=n/siz;\n\tif(n%siz)\n\t  num++;\n\tfor(int i=1;i<=n;++i)\n\t  belong[i]=(i-1)/siz+1;\n\tfor(int i=1;i<num;++i){\n\t\tl[i]=(i-1)*siz+1;\n\t\tr[i]=i*siz;\n\t}\n\tl[num]=r[num-1]+1;\n\tr[num]=n;\n\tfor(int i=1;i<=num;++i){\n\t\tbuild(i);                     //\u5c06\u6bcf\u4e2a\u5757\u7684\u51f8\u5305\u6c42\u51fa\u6765 \n\t}\n}\n\nvoid push_now(LL x){\n\tLL t=sx[x];\n\tfor(int i=l[x];i<=r[x];++i){\n\t\ta[i]+=t;\n\t\tt+=gc[x];\n\t\ta[i]+=add[x];\n\t}\n\tsx[x]=gc[x]=add[x]=0;\n}\n\nvoid update(int x,int y,LL k){\n\tLL sum;\n\tif(belong[x]==belong[y]){         //\u5c5e\u4e8e\u540c\u4e00\u4e2a\u5757 \n\t\tpush_now(belong[x]);          //\u5148\u628a\u6807\u8bb0\u4e0b\u653e \n\t\tsum=k;\n\t\tfor(int i=x;i<=y;++i){\n\t\t\ta[i]+=sum,sum+=k;         //\u66b4\u529b\u52a0\u7b49\u5dee\u6570\u5217 \n\t\t}\n\t\tsum=k*(y-x+1);\n\t\tfor(int i=y+1;i<=r[belong[y]];++i)//\u5148\u5c06\u5f53\u524d\u5757\u66f4\u65b0\u5b8c \n\t\t  a[i]+=sum;\n\t\tbuild(belong[x]);\n\t\tfor(int i=belong[x]+1;i<=num;++i)//\u8bb0\u5f97\u6253\u6807\u8bb0 \n\t\t  add[i]+=sum;\n\t\treturn ;\n\t}\n\tsum=k*(l[belong[x]+1]-x+1);\n\tfor(int i=belong[x]+1;i<belong[y];++i){//\u6574\u5757\u6253\u6807\u8bb0 \n\t\tsx[i]+=sum,gc[i]+=k;\n\t\tsum+=siz*k;\n\t}\n\tpush_now(belong[x]);\n\tsum=k;\n\tfor(int i=x;i<=r[belong[x]];++i){\n\t\ta[i]+=sum;\n\t\tsum+=k;\n\t}\n\tbuild(belong[x]);\n\tpush_now(belong[y]);\n\tsum=k*(l[belong[y]]-x+1);\n\tfor(int i=l[belong[y]];i<=y;++i){\n\t\ta[i]+=sum;\n\t\tsum+=k;\n\t}\n\tsum=k*(y-x+1);\n\tfor(int i=y+1;i<=r[belong[y]];++i)\n\t  a[i]+=sum;\n\tbuild(belong[y]);\n\tfor(int i=belong[y]+1;i<=num;++i)\n\t  add[i]+=sum;\n}\n\nLL calc(int x){\n\tif(x==0||x==n+1)\n\t  return -INF;\n\treturn a[x]+sx[belong[x]]+gc[belong[x]]*(x-l[belong[x]])+add[belong[x]];\n}\n\nLL query(int x){\n\tint head=1,tail=cnt[x],mid;\n\twhile(head<=tail){                //\u4e8c\u5206 \n\t\tmid=head+tail>>1;\n\t\tLL a1=calc(cov[x][mid-1]),a2=calc(cov[x][mid]),a3=calc(cov[x][mid+1]);\n\t\tif(a1<a2&&a2<a3)\n\t\t  head=mid+1;\n\t\telse{\n\t\t\tif(a1>a2&&a2>a3)\n\t\t\t  tail=mid-1;\n\t\t\telse\n\t\t\t  return a2;\n\t\t}\n\t}\n}\n\nint main(){\n\tn=Read();\n\tfor(int i=1;i<=n;++i){\n\t\ta[i]=Read();\n\t\ta[i]+=a[i-1];\n\t}\n\ta[0]=a[n+1]=-INF;\n\tfk();\n\tq=Read();\n\twhile(q--){\n\t\tint cz=Read(),x=Read(),y=Read();\n\t\tif(cz==0){\n\t\t\tLL k=Read();\n\t\t  \tupdate(x,y,k);\n\t\t}\n\t\telse{\n\t\t\tLL ans=-INF;\n\t\t\tif(belong[x]==belong[y]){\n\t\t\t\tfor(int i=x;i<=y;++i)\n\t\t\t\t  ans=max(ans,calc(i));\n\t\t\t\tcout<<ans<<'\\n';\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfor(int i=belong[x]+1;i<belong[y];++i)\n\t\t\t  ans=max(ans,query(i));\n\t\t\tfor(int i=x;i<=r[belong[x]];++i)\n\t\t\t  ans=max(ans,calc(i));\n\t\t\tfor(int i=l[belong[y]];i<=y;++i)\n\t\t\t  ans=max(ans,calc(i));\n\t\t\tcout<<ans<<'\\n';\n\t\t}\n\t}\n}\n```",
        "postTime": 1548320466,
        "uid": 31639,
        "name": "Thosaka_Forest",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4192 \u3010\u65c5\u884c\u89c4\u5212\u3011"
    }
]