[
    {
        "content": "## \u5199\u5728\u524d\u9762\n\n\u672c\u7740\u5b66\u4e60\u4e3b\u5e2d\u6811\u7684\u76ee\u7684\u627e\u5230\u4e86\u8fd9\u9053\u9898\uff0c\u672c\u6765\u4ee5\u4e3a\u9ed1\u9898\u6807\u7740\u4e3b\u5e2d\u6811\u7684 tag \u8574\u542b\u4e86\u4e3b\u5e2d\u6811\u7684\u4ec0\u4e48\u9ad8\u6df1\u5957\u8def\uff0c\u7ed3\u679c\u6ca1\u60f3\u5230\u8fd9\u9053\u9898\u96be\u5728\u4e86\u601d\u7ef4\u548c\u4ee3\u7801\u4e0a\u3002\u5199\u4e00\u7bc7\u9898\u89e3\u52a0\u6df1\u7406\u89e3\uff0c\u540c\u65f6\u8865\u4e00\u4e2a\u4e3b\u5e2d\u6811\u7684\u4ee3\u7801\uff0c\u8fd9\u6837\u9898\u89e3\u533a\u5c31\u6709\u79bb\u7ebf\u548c\u5728\u7ebf\u4e24\u79cd\u505a\u6cd5\u4e86\u3002\n\n\u601d\u8def\u548c\u4ee3\u7801\u4e00\u90e8\u5206\u53c2\u8003\u4e86\u4ed6\u4eba\u9898\u89e3\u3002\n\n## \u5206\u6790\n\n\u5176\u5b9e\u4e00\u770b\u5230\u8fd9\u9898\uff0c\u6709\u4e00\u79cd\u601d\u8def\u662f\u8003\u8651\u500d\u589e\u3002\u6211\u4eec\u5c1d\u8bd5\u7528\u500d\u589e\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u8d70\u7279\u5b9a\u6b65\u6570\u80fd\u5230\u8fbe\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u5904\u7406\u8be2\u95ee\u3002\u4e0d\u8fc7\u7ecf\u8fc7\u601d\u8003\u53d1\u73b0\u8fd9\u4e9b\u70b9\u6765\u56de\u6765\u53bb\u7684\u5e76\u4e0d\u5177\u5907\u8fde\u8fb9\u548c\u8f6c\u79fb\u7684\u597d\u6027\u8d28\uff0c\u6240\u4ee5\u8fd9\u4e2a\u601d\u8def\u6211\u4eec\u5148\u653e\u5f03\u3002\n\n\u4f46\u662f\u901a\u8fc7\u521a\u624d\u7684\u601d\u8def\u7ed9\u4e86\u6211\u4eec\u4e00\u4e2a\u542f\u53d1\uff1a**\u64cd\u4f5c\u53ef\u80fd\u6709\u5468\u671f\u6027**\u3002\u90a3\u6211\u4eec\u5c31\u6765\u5c1d\u8bd5\u6784\u9020\u8fd9\u4e2a\u5468\u671f\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u975e\u6839\u8282\u70b9\uff0c\u5b83\u7684\u6fc0\u5149\u53ef\u4ee5\u6307\u5411\u5b83\u7684\u7236\u4eb2\u548c\u513f\u5b50\u3002\u6839\u636e\u7ecf\u9a8c\uff0c\u6bd4\u8f83\u7279\u6b8a\u7684\u4e00\u5b9a**\u8ddf\u7236\u4eb2\u6709\u5173**\uff0c\u56e0\u4e3a\u513f\u5b50\u6ca1\u6709\u666e\u9002\u6027\uff0c\u6709\u53ef\u80fd\u5f88\u591a\uff0c\u4e5f\u53ef\u80fd\u6ca1\u6709\uff0c\u4f46\u662f\u7236\u4eb2\u53ea\u6709\u4e00\u4e2a\u3002\n\n\u4e0e\u7236\u4eb2\u6709\u5173\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8ba9\u8fd9\u4e2a\u8282\u70b9\u7684\u6fc0\u5149\u6307\u793a\u5668**\u4e00\u5f00\u59cb\u5c31\u6307\u5411\u81ea\u5df1\u7684\u7236\u4eb2**\u3002\u7136\u540e\u6211\u4eec\u53d1\u73b0\u4e86\u5f88\u597d\u7684\u6027\u8d28\uff1a\n\n-\t\u8fd9\u4e2a\u8282\u70b9\u4ece\u7956\u5148\u5230\u7b2c\u4e00\u6b21\u8bbf\u95ee\u8be5\u8282\u70b9\uff0c\u6fc0\u5149\u6307\u793a\u5668\u4f1a\u987a\u65f6\u9488\u8f6c\u5230\u7b2c\u4e00\u4e2a\u513f\u5b50\uff0c\u7136\u540e\u904d\u5386\u8fd9\u4e2a\u513f\u5b50\uff08**\u4e0d\u7ba1\u8fd9\u4e2a\u5b50\u6811\u5185\u6bcf\u4e2a\u8282\u70b9\u7684\u6fc0\u5149\u6307\u793a\u5668\u72b6\u6001\u5982\u4f55\uff0c\u6700\u7ec8\u90fd\u4f1a\u4ece\u5b50\u6811\u4e2d\u9000\u51fa**\uff0c*\u56e0\u4e3a\u65e0\u8bba\u6fc0\u5149\u6307\u793a\u5668\u8f6c\u591a\u5c11\u90fd\u4f1a\u6709\u4e00\u6b21\u6307\u5411\u7236\u4eb2\uff0c\u5c31\u4f1a\u56de\u9000* \uff09\uff0c\u4e4b\u540e\u56de\u5230\u8be5\u8282\u70b9\uff0c\u518d\u904d\u5386\u7b2c\u4e8c\u4e2a\u513f\u5b50\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u987a\u65f6\u9488\u8f6c\u4e00\u5708\uff0c**\u5c06\u6240\u6709\u513f\u5b50\u904d\u5386\u4e00\u904d\u540e**\u6fc0\u5149\u6307\u793a\u5668\u5c06\u518d\u6b21\u6307\u5411\u7236\u4eb2\uff0c\u56de\u9000\u3002\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u5982\u679c\u6bcf\u4e2a\u975e\u6839\u8282\u70b9\u90fd\u6307\u5411\u5b83\u7684\u7236\u4eb2\uff08\u8fd9\u662f\u6211\u4eec**\u94a6\u5b9a\u7684\u6761\u4ef6**\uff0c\u6839\u8282\u70b9\u4e0d\u7528\u7ba1\uff09\uff0c\u90a3\u4e48\u6211\u4eec\u4ece\u6839\u51fa\u53d1\u53ef\u4ee5\u5b8c\u6574\u904d\u5386\u4e00\u6574\u68f5\u6811\u3002\n\n\u5206\u6790\u53d1\u73b0\uff0c\u6bcf\u6761\u8fb9\u53ea\u4f1a\u4e0b\u884c\u4e0a\u884c\u5404\u4e00\u6b21\uff0c\u6240\u4ee5\u6700\u540e\u6211\u4eec\u7684\u8bbf\u95ee\u5e8f\u5217\u957f\u5ea6\u662f $2n-2$\uff0c\u53c8\u7531\u4e8e\u6fc0\u5149\u6307\u793a\u5668\u987a\u65f6\u9488\u65cb\u8f6c\u7684\u6027\u8d28\uff0c\u6bcf\u6b21\u904d\u5386\u7684\u987a\u5e8f\u662f\u4e00\u5b9a\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a**\u5468\u671f\u5e8f\u5217**\u3002\n\n------------\n\n\u4e00\u4e2a\u4f18\u79c0\u7684\u5e8f\u5217\u88ab\u6784\u9020\u5b8c\u4e86\uff0c\u7136\u800c\u4e00\u5f00\u59cb\u6bcf\u4e2a\u8282\u70b9\u6fc0\u5149\u6307\u793a\u5668\u7684\u72b6\u6001\u53ef\u4e0d\u4fdd\u8bc1\u6307\u5411\u7236\u4eb2\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u601d\u8003\u662f\u4e0d\u662f\u4efb\u610f\u72b6\u6001\u7684\u6811\u6700\u7ec8\u90fd\u4f1a\u6307\u5411\u6211\u4eec\u8fd9\u4e2a\u6700\u7ec8\u5faa\u73af\u5e8f\u5217\u3002\n\n\u5728\u4e0a\u4e00\u56de\u5408\u6211\u4eec\u77e5\u9053\u4e86\u4e00\u4e2a\u975e\u6839\u8282\u70b9\u7684\u6fc0\u5149\u6307\u793a\u5668\u6700\u7ec8\u4e00\u5b9a\u6709\u4e00\u6b21\u4f1a\u6307\u5411\u5b83\u7684\u7236\u4eb2\uff0c\u4ece\u800c\u56de\u9000\u3002\u8fdb\u800c\u6211\u4eec\u5047\u8bbe\u8fd9\u4e2a\u8282\u70b9\u7684\u7956\u5148\u8282\u70b9\u5df2\u7ecf\u6ee1\u8db3\u4e86 \u7b2c\u4e00\u6b21\u8bbf\u95ee\u90fd\u6307\u5411\u5176\u7236\u4eb2 \u7684\u6761\u4ef6\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8282\u70b9\u518d\u6307\u5411\u5176\u7236\u4eb2\u540e\u56de\u9000\uff0c\u4e5f\u5c31\u662f\u8bf4**\u4e0b\u4e00\u6b21\u904d\u5386\u5b83\u4e5f\u6210\u4e3a\u4e86\u7b26\u5408\u6761\u4ef6\u7684\u4e00\u90e8\u5206**\u3002\n\n\u8fdb\u800c\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u4e00\u79cd\u6269\u5c55\u65b9\u5f0f\uff1a**\u6bcf\u6b21\u628a\u65b0\u7684\u7b26\u5408\u6761\u4ef6\u7684\u8282\u70b9\u4f5c\u4e3a\u4e0b\u4e00\u6b21\u6269\u5c55\u7684\u8d77\u70b9**\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u4fdd\u8bc1\u4e86\u6bcf\u6b21\u4e00\u5c42\u5c42\u6269\u5c55\uff0c\u4e0d\u4f1a\u6709\u9057\u6f0f\uff0c\u6700\u540e\u4f7f\u6574\u68f5\u6811\u7b26\u5408\u6211\u4eec\u521a\u624d\u6784\u9020\u7684\u6837\u5b50\uff0c\u8fdb\u5165\u5468\u671f\u5faa\u73af\u3002\n\n\u800c\u4e14\u53c8\u56e0\u4e3a\u9898\u76ee\u4e2d\u987a\u65f6\u9488\u65cb\u8f6c\u8fd9\u4e2a\u6027\u8d28\uff0c\u6bcf\u6b21\u6269\u5c55\u540e\u7684\u8bbf\u95ee\u5e8f\u5217**\u4e00\u5b9a\u662f\u6700\u7ec8\u5468\u671f\u5e8f\u5217\u7684\u5b50\u5e8f\u5217**\u3002\u56e0\u4e3a\u6bcf\u4e2a\u513f\u5b50\u7684\u76f8\u5bf9\u904d\u5386\u987a\u5e8f\u4e0d\u4f1a\u6539\u53d8\u3002\n\n\u6765\u770b\u770b\u590d\u6742\u5ea6\u662f\u5426\u53ef\u4ee5\u63a5\u53d7\u3002\u6bcf\u6b21\u6269\u5c55\u5fc5\u7136\u6709\u81f3\u5c11\u4e00\u4e2a\u8282\u70b9\u901a\u8fc7\u65cb\u8f6c\u6ee1\u8db3\u4e86\u6761\u4ef6\uff0c\u56e0\u800c\u6700\u7ec8\u603b\u7684\u6269\u5c55\u6b21\u6570\u4e0d\u4f1a\u8d85\u8fc7 $n$ \u6b21\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u7684\u8bbf\u95ee\u5e8f\u5217\u4e0d\u4f1a\u6709\u591a\u4e8e $n$ \u4e2a\u5b50\u7248\u672c\u5c31\u4f1a\u5230\u8fbe\u6700\u7ec8\u7248\u672c\uff0c\u8fdb\u5165\u5faa\u73af\u3002\n\n\u540c\u6837\u7684\uff0c\u7ecf\u7531\u601d\u8003\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u4e00\u822c\u904d\u5386\u65b9\u5f0f\u5176\u5b9e\u7c7b\u4f3c\u4e0b\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/25uro43i.png)\n\n\u904d\u5386\u4e00\u6b21\u53d8\u6210\u7b26\u5408\u8981\u6c42\uff0c\u4e0b\u6b21\u518d\u628a\u5269\u4e0b\u7684\u672a\u904d\u5386\u7684\u513f\u5b50\u904d\u5386\u5b8c\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u65b9\u6cd5\u4f7f\u8fd9\u4e2a\u8282\u70b9\u7684\u6bcf\u4e2a\u513f\u5b50\u53ea\u904d\u5386\u4e00\u6b21\uff0c\u8fdb\u800c\u4fdd\u8bc1\u4e86\u904d\u5386\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f $O(n)$ \u7ea7\u522b\u3002\u540c\u65f6\u6211\u4eec\u5bf9\u8bbf\u95ee\u5e8f\u5217\u7684\u4fee\u6539\u6b21\u6570\u4e5f\u56e0\u6b64\u63a7\u5236\u5728\u4e86 $O(n)$ \u7ea7\u522b\u3002\n\n## \u5b9e\u73b0\n\n\u601d\u8def\u5927\u62b5\u660e\u786e\u4e86\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u770b\u770b\u5b9e\u73b0\u6709\u54ea\u4e9b\u56f0\u96be\u3002\n\n\u56e0\u4e3a\u4e00\u5f00\u59cb\u6bcf\u6b21\u7684\u8be2\u95ee\u5e8f\u5217\u90fd\u662f\u6700\u7ec8\u5468\u671f\u5e8f\u5217\u7684\u5b50\u5e8f\u5217\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4e00\u5f00\u59cb\u5148\u628a\u8fd9\u4e2a\u5468\u671f\u5e8f\u5217\u6c42\u51fa\u6765\u3002\u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u6309\u7167\u987a\u65f6\u9488\u987a\u5e8f\u5b58\u56fe\uff08\u4e3a\u4e86\u65b9\u4fbf\u6211\u4eec\u4f7f\u7528 ```vector```\uff0c\u6bd5\u7adf\u65f6\u9650 8s \u5b8c\u5168\u4e0d\u865a\uff09\uff0c\u5148\u627e\u5230\u6307\u5411\u7236\u4eb2\u8282\u70b9\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u5047\u5b9a\u73b0\u5728\u4e00\u5f00\u59cb\u5c31\u6307\u5411\u7236\u8282\u70b9\uff0c\u90a3\u4e48\u4ece\u7236\u8282\u70b9\u5176\u5411\u53f3\u5faa\u73af\u904d\u5386\u76f4\u5230\u518d\u6b21\u904d\u5386\u5230\u7236\u8282\u70b9\u5373\u53ef\u3002\u6ce8\u610f\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9\u6bcf\u6b21\u904d\u5386\u4e00\u4e2a\u513f\u5b50\u90fd\u4f1a\u518d\u8bbf\u95ee\u4e00\u6b21\u8be5\u8282\u70b9\uff0c\u8bbf\u95ee\u5e8f\u5217\u8981\u52a0\u5165\u4e00\u4e2a\u8be5\u8282\u70b9\u3002\n\n\n------------\n\n\n\u63a5\u4e0b\u6765\u662f\u96be\u70b9\u3002\u5982\u4f55\u628a\u5947\u5f62\u602a\u72b6\u7684\u6811\u6269\u5c55\u6210\u6700\u7ec8\u5f62\u6001\uff1f\u6211\u4eec\u901a\u8fc7\u6837\u4f8b\u6765\u6d45\u6790\u4e00\u4e0b\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/120gklhm.png)\n\n\u4e0a\u56fe\u662f\u63cf\u7ed8\u4e86\u6811\uff0c\u4ee5\u53ca\u6211\u4eec\u7684\u5e8f\u5217\uff0c\u62ec\u53f7\u8868\u793a\u8d77\u70b9\uff0c\u4e0d\u5728\u5e8f\u5217\u4e2d\u3002\n\n\u6bd4\u5982\uff0c\u7b2c\u4e00\u6b21\u6269\u5c55\uff0c$2$ \u53f7\u70b9\u5728\u5230\u8fbe\u540e\u5c31\u6307\u5411\u5176\u7236\u4eb2\uff0c\u56de\u9000\uff0c\u4f46\u662f\u53ef\u4ee5\u4f5c\u4e3a\u4e0b\u4e00\u6b21\u6269\u5c55\u7684\u70b9\u3002**\u6ce8\u610f\u6b64\u65f6\u5bf9\u5e8f\u5217\u7684\u66f4\u6539\u662f\u5728\u6700\u540e\u589e\u52a0\u4e86\u4e00\u4e2a** $2$\u3002\u8fd9\u91cc\u53ef\u4ee5\u8fd9\u4e48\u7406\u89e3\uff1a$2$ \u6709\u513f\u5b50\u6ca1\u904d\u5386\uff0c\u4f46\u4fdd\u8bc1**\u5df2\u7ecf\u904d\u5386\u8fc7\u7684\u513f\u5b50\u662f\u539f\u904d\u5386\u987a\u5e8f\u7684\u540e\u7f00**\uff0c\u6240\u4ee5\u4e3a\u4e86\u8fd8\u539f\u5e8f\u5217\uff0c\u9006\u65f6\u9488\u53cd\u7740\u6765\u6240\u4ee5**\u5012\u5e8f\u8fd8\u539f $2$ \u7684\u4f4d\u7f6e**\u3002\u5bf9\u4e8e $4$ \u540c\u7406\uff0c\u5927\u5bb6\u53ef\u4ee5\u81ea\u884c\u6a21\u62df\u3002\n\n\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4e00\u5f00\u59cb\u5904\u7406\u6700\u7ec8\u5e8f\u5217\u65f6\u5c31\u8bb0\u4e0b\u6bcf\u4e2a\u70b9\u5728\u6700\u7ec8\u8bbf\u95ee\u5e8f\u5217\u4e2d\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u5728\u6269\u5c55\u65f6\u5012\u5e8f\u8fd8\u539f\u5373\u53ef\u3002\n\n\n\n------------\n\n\n\u7136\u540e\u5bf9\u4e8e\u6bcf\u6b21\u6269\u5c55\uff0c\u53ea\u4f1a\u5728\u539f\u5148\u5e8f\u5217\u4e0a\u518d\u8fd8\u539f\u4e00\u90e8\u5206\uff0c\u4ecd\u7136\u6709\u4e00\u90e8\u5206\u4e0d\u53d8\uff0c\u8fd9\u5c31\u8ba9\u6211\u4eec\u60f3\u5230\u4e86\u6bcf\u6b21\u6269\u5c55\u53ea\u8bb0\u5f55\u4e0e\u539f\u5148\u7248\u672c\u4e0d\u540c\u4e4b\u5904\uff0c\u8fdb\u800c\u60f3\u5230\u4e86\u5bf9\u8fd9\u4e2a\u5e8f\u5217**\u8fdb\u884c\u53ef\u6301\u4e45\u5316**\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7ef4\u62a4\u4e00\u4e2a\u8be5\u5e8f\u5217\u957f\u5ea6\u7684\u4e3b\u5e2d\u6811\uff0c\u6bcf\u6b21\u66f4\u6539\u5c31\u6539\u4e00\u70b9\u5c31\u884c\uff0c\u53c8\u56e0\u4e3a\u6211\u4eec\u901a\u8fc7\u65b9\u6cd5\u4fdd\u8bc1\u4e86\u4e0d\u4f1a\u91cd\u590d\u904d\u5386\u4efb\u4f55\u8282\u70b9\uff0c\u6240\u4ee5\u6269\u5c55\u7684\u65f6\u7a7a\u590d\u6742\u5ea6\u90fd\u662f $O(n\\log n)$\u3002\n\n------------\n\n\u5bf9\u4e8e\u6700\u540e\u7684\u8be2\u95ee\uff0c\u9996\u5148\u660e\u786e\u6bcf\u6b21\u6269\u5c55\u8fd8\u662f\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u7684\uff0c\u6240\u4ee5\u867d\u7136\u6bcf\u6b21\u6269\u5c55\u76f8\u5bf9\u4e8e\u524d\u4e00\u6b21\u8bbf\u95ee\u5e8f\u5217\u7684\u53d8\u5316\u4e0d\u591a\uff0c\u4f46\u662f\u8be2\u95ee\u65f6\u6574\u4e2a\u8bbf\u95ee\u5e8f\u5217\u90fd\u8981\u8d70\u4e00\u904d\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u6240\u6709\u53ef\u80fd\u7684\u8bbf\u95ee\u5e8f\u5217\u957f\u5ea6\u8bb0\u4e0b\u6765\u5e76\u524d\u7f00\u548c\u5904\u7406\uff0c\u7528\u7684\u65f6\u5019\u4e8c\u5206\u627e\u5230\u8fd9\u4e2a\u5e8f\u5217\u5728\u4e3b\u5e2d\u6811\u4e0a\u67e5\u8be2\u5373\u53ef\uff0c\u8fd9\u6837\u5c31\u662f\u7ecf\u5178\u7b2c $k$ \u5927\u95ee\u9898\u3002\u5982\u679c\u8bf4 $k$ \u5f88\u5927\uff0c\u4ee5\u81f3\u4e8e\u5df2\u7ecf\u6269\u5c55\u5230\u4e86\u6700\u7ec8\u7684\u5468\u671f\u5e8f\u5217\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u53d6\u6a21\u8fd0\u7b97\u505a\u5230 $O(1)$ \u67e5\u8be2\u4e86\u3002\n\n\u7136\u540e\u5c31\u6ca1\u5565\u8981\u5631\u5490\u7684\u4e86\uff0c\u5177\u4f53\u5b9e\u73b0\u770b\u4ee3\u7801\uff0c\u6ce8\u610f\u6bcf\u4e2a\u53d8\u91cf\u7684\u542b\u4e49\uff0c\u6709\u4e00\u4e9b\u5b9e\u73b0\u6211\u4f1a\u5199\u5728\u6ce8\u91ca\u91cc\u3002\n\n## \u4ee3\u7801\n\n\u4eba\u50bb\u5e38\u6570\u5927\uff0c\u4e5f\u53ef\u80fd\u662f\u56e0\u4e3a\u4e3b\u5e2d\u6811\u7a7a\u95f4\u5360\u7684\u5927\u6240\u4ee5\u8dd1\u5f97\u6162\uff0c\u4e0d\u8fc7\u7406\u8bba\u590d\u6742\u5ea6\u771f\u7684\u662f $O(n\\log n)$\u2026\u2026\n\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#include <vector>\n#include <queue>\n\n#define mid ((l + r) >> 1)\n\nusing namespace std;\ntypedef long long ll;\nconst int maxn = 800005;\n\nstruct Node{\n    int ls, rs;\n    int cnt;//\u8bb0\u5f55[l,r]\u533a\u95f4\u91cc\u5df2\u7ecf\u8fd8\u539f\u4e86\u591a\u5c11\u5143\u7d20\n}tr[(maxn * 2) * (4 + 20)];//\u4e3b\u5e2d\u6811\uff0c\u6ce8\u610f\u6700\u7ec8\u5e8f\u5217\u7684\u957f\u5ea6\u662f 2n-2\uff0c\u6240\u4ee5\u76f8\u5e94\u7684\u4e5f\u8981\u6269\u500d\nint root[maxn << 1], idx;\n/* \u5b58\u56fe\u6570\u7ec4\uff1b\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u5728\u5e8f\u5217\u4e2d\u7684\u6240\u6709\u4f4d\u7f6e\uff08\u5012\u5e8f\u8fd8\u539f\uff09\uff1b\u4e0b\u4e00\u6b21\u9700\u8981\u6269\u5c55\u7684\u70b9 */\nvector<int> to[maxn], pos[maxn], ne;\nint n, Q, m;//m\u8bb0\u5f55\u7684\u662f\u6269\u5c55\u4e86\u591a\u5c11\u7248\u672c\nint seq[maxn << 1], len;//\u6700\u7ec8\u5e8f\u5217\nint fa[maxn], ind[maxn];//\u8bb0\u5f55\u7236\u4eb2\uff1b\u8bb0\u5f55\u7ec8\u6b62\u4f4d\u7f6e\uff08\u5e94\u8be5\u505c\u5728\u54ea\uff09\nint now[maxn], tot;//\u8bb0\u5f55\u73b0\u5728\u904d\u5386\u5230\u54ea\u4e2a\u4f4d\u7f6e\uff1b\nll sum[maxn];//\u6bcf\u4e2a\u7248\u672c\u6709\u591a\u5c11\u6b65\u7684\u524d\u7f00\u548c\nqueue<int> q;\n\n/* \u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811 */\nint build(int l, int r){\n    int p = ++ idx;\n    if (l == r){\n        return p;\n    }\n    tr[p].ls = build(l, mid), tr[p].rs = build(mid + 1, r);\n    return p;\n}\n\nint insert(int p, int l, int r, int x){//\u8fd8\u539fx\u4f4d\u7f6e\n    int q = ++ idx;\n    tr[q] = tr[p];\n    if (l == r){\n        tr[q].cnt = 1;\n        return q;\n    }\n    if (x <= mid) tr[q].ls = insert(tr[p].ls, l, mid, x);\n    else tr[q].rs = insert(tr[p].rs, mid + 1, r, x);\n    tr[q].cnt = tr[tr[q].ls].cnt + tr[tr[q].rs].cnt;\n    return q;\n}\n\nint query(int p, int l, int r, int k){//Kth problem\n    if (l == r){\n        return l;\n    }\n    int cnt = tr[tr[p].ls].cnt;\n    if (cnt >= k) return query(tr[p].ls, l, mid, k);\n    else return query(tr[p].rs, mid + 1, r, k - cnt);\n}\n\n/* \u6269\u5c55\u6574\u68f5\u6811 */\nvoid init(int u, int _fa){//\u5148\u627e\u5230\u6bcf\u4e2a\u8282\u70b9\u7684\u7236\u4eb2\n    fa[u] = _fa;\n    for (int i = 0; i < to[u].size(); i ++){\n        int v = to[u][i];\n        if (v == fa[u]){\n            ind[u] = i;//\u8bb0\u5f55\u6700\u7ec8\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c\u4e5f\u5e94\u8be5\u662f\u65cb\u8f6c\u4e00\u5708\u7684\u7ec8\u70b9\n            continue;\n        }\n        init(v, u);\n    }\n}\n\nvoid get(int u){//\u5f97\u5230\u6700\u7ec8\u5e8f\u5217\n    /* u > 1 \u662f\u56e0\u4e3a\u7b2c\u4e00\u6b21\u6839\u4f5c\u4e3a\u8d77\u70b9\u4e0d\u7b97\u5728\u8bbf\u95ee\u5e8f\u5217\u4e2d */\n    if (u > 1) seq[++ len] = u, pos[u].push_back(len);\n    int i = ind[u];\n    while (true){\n        i ++, i %= to[u].size();\n        int v = to[u][i];\n        if (i == ind[u] && u > 1) break;//\u975e\u6839\u8282\u70b9\uff0c\u6307\u5411\u7236\u4eb2\u4e00\u5b9a\u8981\u56de\u9000\u4e86\n        get(v);\n        seq[++ len] = u, pos[u].push_back(len);\n        if (i == ind[u] && u == 1) break;//\u6839\u8282\u70b9\uff0c\u5b83\u6ca1\u6709\u7236\u4eb2\uff0c\u6240\u4ee5\u8bf4\u9000\u51fa\u6761\u4ef6\u662f\u518d\u6b21\u6307\u5411\u8d77\u70b9\n    }\n}\n\nvoid dfs(int u, int t){\n    now[u] ++, now[u] %= to[u].size();//\u8bbf\u95ee\u4e00\u6b21\u5c31\u8981\u8f6c\u4e00\u6b21\n    if (u != t){//\u4e0a\u4e00\u6b21\u5728t\u505c\u6b62\uff0c\u8fd9\u4e00\u6b21\u4ecet\u6269\u5c55\uff0c\u6240\u4ee5\u8fd9\u4e00\u6b21t\u4e0d\u7b97\u5728\u5e8f\u5217\u4e2d\n        root[m] = insert(root[m], 1, len, *pos[u].rbegin());\n        pos[u].pop_back();\n    }\n    if (now[u] == ind[u] && u != t){//\u6307\u5411\u7236\u8282\u70b9\uff0c\u4e0b\u4e00\u8f6e\u53ef\u5b8c\u6574\u6269\u5c55\u5b50\u6811\n        ne.push_back(u);\n        return;\n    }\n    int i = now[u] - 1;\n    int back_up = now[u];//\u5907\u4efd\n    while (true){\n        i ++, i %= to[u].size(), now[u] = i;\n        int v = to[u][i];\n        if (i == ind[u] && u > 1) break;\n        dfs(v, t);\n        root[m] = insert(root[m], 1, len, *pos[u].rbegin());\n        pos[u].pop_back();\n        if (i == ind[u] && u == 1) break;\n    }\n    ind[u] = back_up;\n    /* \u6ce8\u610find[]\u7684\u5b9e\u9645\u610f\u4e49\uff1a\n        \u5373\u4e3a\u4e00\u6b21\u904d\u5386\u7684\u7ec8\u70b9\uff08\u4e0d\u5305\u62ec\u8be5\u70b9\uff09\u3002ind[]\u672c\u6765\u8bb0\u5f55\u7684\u662f\u7236\u4eb2\u7684\u4f4d\u7f6e\uff0c\u6b64\u5904\u5df2\u7ecf\u8f6c\u4e00\u5708\u5728\u7236\u8282\u70b9\u4f4d\u7f6e\u505c\u6b62\uff0c\n        \u90a3\u4e48\u4e0b\u4e00\u6b21\u5c31\u662f\u6269\u5c55\u8fd9\u4e2a\u70b9\u4e86\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u590d\u6742\u5ea6\uff0c\u5373\u4e4b\u540e\u4e0d\u4f1a\u91cd\u590d\u904d\u5386\u4ee5\u524d\u7684\u5b50\u6811\uff0c\u7531\u4e8e\u662f\u540c\u4e00\u65b9\u5411\uff08\u987a\u65f6\u9488\uff09\uff0c\n        \u6240\u4ee5\u8fd9\u4e00\u6b21\u7684\u8d77\u70b9\u5c31\u662f\u4e0b\u4e00\u6b21\u7684\u7ec8\u70b9\uff0cind[]\u6539\u53d8\u4e3a\u539f\u6765\u7684\u8d77\u70b9\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u521a\u624d\u7684\u5907\u4efd */\n    if (!pos[u].empty()) ne.push_back(u);//\u8fd8\u6ca1\u5b8c\uff0c\u4e0b\u4e00\u8f6e\u8fd8\u8981\u4ece\u6b64\u6269\u5c55\n    return;\n}\n\nint main(){\n    ios::sync_with_stdio(false);\n    cin.tie(0), cout.tie(0);\n\n    cin >> n >> Q;\n    for (int u = 1, k, v; u <= n; u ++){\n        cin >> k;\n        while (k --){\n            cin >> v;\n            to[u].push_back(v);\n        }\n    }\n\n    init(1, 0), get(1);\n    q.push(1), root[0] = build(1, len);\n    while (!q.empty()){//\u7c7b\u4f3c\u4e8e\u4e00\u4e2aBFS\u91cc\u9762\u5957\u4e86DFS\n        /* \u7ee7\u627f\u4e0a\u4e00\u4e2a\u7248\u672c\uff0c\u7136\u540e\u8fd9\u4e2a\u6269\u5c55\u91cc\u7684\u6240\u6709\u4fee\u6539\u90fd\u5bf9\u81ea\u8eab\u8fdb\u884c\uff0c\u56e0\u4e3a\u67e5\u8be2\u65f6\u672c\u6b21\u6269\u5c55\u662f\u4e00\u4e2a\u6574\u4f53 */\n        m ++, root[m] = root[m - 1];\n\n        while (!q.empty()){\n            int u = q.front();\n            q.pop();\n            dfs(u, u);\n        }\n        for (vector<int>::iterator it = ne.begin(); it != ne.end(); it ++){\n            q.push(*it);//\u628a\u4e0b\u4e00\u8f6e\u53ef\u6269\u5c55\u7684\u70b9\u5165\u961f\n        }\n        ne.clear();\n        sum[m] = sum[m - 1] + tr[root[m]].cnt;\n        if (tr[root[m]].cnt == len) break;\n    }\n\n    ll k;\n    while (Q --){\n        cin >> k;\n        int t = lower_bound(sum + 1, sum + m + 1, k) - sum;//\u627e\u5230\u67e5\u8be2\u4f4d\u7f6e\n        k -= sum[t - 1];//\u51cf\u53bb\u524d\u9762\u7684\u8d21\u732e\n        if (t < m){\n            cout << seq[query(root[t], 1, len, k)] << endl;\n        }\n        else{//\u8fdb\u5165\u6700\u7ec8\u7684\u5faa\u73af\n            k %= len;\n            if (k == 0) k = len;\n            cout << seq[k] << endl;\n        }\n    }\n\n    return 0;\n}\n```\n\n## \u603b\u7ed3\n\n\u6784\u9020\u5faa\u73af\uff0c\u5c1d\u8bd5\u5bfc\u5411\u5faa\u73af\uff0c\u4ee5\u53ca\u6ce8\u610f\u5e94\u7528\u987a\u65f6\u9488\u65cb\u8f6c\u7684\u6027\u8d28\u3002\u662f\u9053\u5f88\u597d\u7684\u601d\u7ef4\u9898\u3002\u4e0d\u8fc7\u5199\u5b8c\u9898\u89e3\u53d1\u73b0\u4e5f\u4e0d\u662f\u90a3\u4e48\u96be\u7406\u89e3\uff0c\u6211\u4e5f\u662f\u80fd\u5f04\u61c2\u9ed1\u9898\u7684\u4eba\u4e86hhhhh",
        "postTime": 1672065426,
        "uid": 528114,
        "name": "jjsnam",
        "ccfLevel": 6,
        "title": "P7830\u9898\u89e3"
    },
    {
        "content": "\u4e0d\u9700\u8981\u4efb\u4f55 log \u6570\u636e\u7ed3\u6784\u7684\u505a\u6cd5\u3002\n\n\u9996\u5148\u8003\u8651\u4e00\u4e2a\u66b4\u529b\u7ed3\u8bba\uff1a\u6211\u4eec\u8d70\u6709\u9650\u6b21\u4e4b\u540e\uff08\u5b9e\u9645\u4e0a\u662f $O(n^2)$\uff0c\u6781\u9650\u60c5\u51b5\u662f\u90fd\u6307\u5411\u5b50\u8282\u70b9\u7684\u94fe\uff09\uff0c\u4e00\u5b9a\u4f1a\u8fbe\u6210\u4ee5\u4e0b\u7684\u5c40\u9762\uff1a\u6240\u6709\u8282\u70b9\uff08\u9664\u4e86\u8ddf\u8282\u70b9\uff09\u90fd\u6307\u5411\u7236\u4eb2\u3002\u7136\u540e\u5c31\u4f1a\u6839\u636e\u6b27\u62c9\u6e38\u8d70\u5e8f\u8fdb\u884c\u5faa\u73af\u4e86\u3002\u6240\u4ee5\u73b0\u5728\u7684\u91cd\u70b9\u662f\u8981\u5904\u7406\u51fa\u5728\u5faa\u73af\u4e4b\u524d\u7684\u60c5\u51b5\u3002\n\n\u6ce8\u610f\uff0c\u5728\u8fd9\u4e2a\u6b27\u62c9\u6e38\u8d70\u5e8f\u4e2d\uff0c\u6211\u4eec\u6bcf\u4e2a\u8282\u70b9\u7684\u513f\u5b50\u987a\u5e8f\uff0c\u5e94\u8be5\u662f\u5728\u539f\u51fa\u8fb9\u987a\u5e8f\u4e2d\uff0c\u4ece\u7236\u8282\u70b9\u4e4b\u540e\u7684\u90a3\u4e2a\u513f\u5b50\u5f00\u59cb\uff0c\u7236\u8282\u70b9\u4e4b\u524d\u7684\u90a3\u4e2a\u513f\u5b50\u7ed3\u675f\uff0c\u5f62\u6210\u7684\u4e00\u4e2a\u987a\u5e8f\u3002\n\n\u6211\u4eec\u628a\u5176\u6700\u7ec8\u7ed3\u679c\u7684\u6b27\u62c9\u6e38\u8d70\u5e8f\u7ed9\u6c42\u51fa\u6765\u3002\u5982\u679c\u6211\u4eec\u5728\u67d0\u4e00\u65f6\u523b\u201d\u89e3\u51b3\u201c\u4e86\u4e00\u4e2a\u6811\u4e0a\u8282\u70b9\uff0c\u90a3\u4e48\u5728\u4e4b\u540e\u7684\u65f6\u523b\uff0c\u9047\u5230\u8fd9\u4e2a\u70b9\u5c31\u76f4\u63a5\u6309\u7167\u6b27\u62c9\u6e38\u8d70\u5e8f\u4e0a\u7684\u5f80\u540e\u8d70\u5c31\u884c\u4e86\u3002\u6240\u4ee5\u5bf9\u4e8e\u6b27\u62c9\u5e8f\u4e0a\u7684\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u6211\u4eec\u53ef\u4ee5\u6253\u4e00\u4e2a\u6807\u8bb0\u3002\u800c\u5f53\u6211\u4eec\u5bf9\u4e8e $u$\uff0c\u5b83\u8d70\u51fa\u4e86\u81ea\u5df1\u7684\u5b50\u6811\uff0c\u90a3\u4e48\u6b64\u65f6\u5b83\u4e00\u5b9a\u4f1a\u6307\u5411\u81ea\u5df1\u7684\u7236\u8282\u70b9\uff0c\u4e8e\u662f\u81ea\u5df1\u5c31\u88ab\u89e3\u51b3\u4e86\uff0c\u628a\u81ea\u5df1\u5728\u6b27\u62c9\u5e8f\u4e0a\u51fa\u73b0\u7684\u4f4d\u7f6e\u7684\u6807\u8bb0\u5168\u90e8\u5220\u6389\u3002\n\n\u6211\u4eec\u5047\u8bbe\u6211\u4eec\u73b0\u5728\u5728\u6b27\u62c9\u5e8f\u7684\u6ca1\u6709\u6807\u8bb0\u7684 $x$ \u4e0a\uff0c\u90a3\u4e48\u6211\u4eec\u4f1a\u4e00\u8def\u8d70\u5230\u7b2c\u4e00\u4e2a\u6709\u6807\u8bb0\u7684\u4f4d\u7f6e $y$\u3002\u6b64\u65f6 $y$ \u4e00\u5b9a\u8fd8\u6ca1\u6709\u88ab\u7ecf\u8fc7\uff08\u56e0\u4e3a\u5982\u679c\u4e00\u4e2a\u70b9\u6709\u6807\u8bb0\u90a3\u4e48\u5b50\u6811\u5185\u7684\u70b9\u4e5f\u5fc5\u7136\u6709\u6807\u8bb0\uff0c\u6240\u4ee5 $x$ \u5728 $y$ \u5b50\u6811\u5916\uff0c\u6240\u4ee5\u5982\u679c\u4ee5\u524d\u7ecf\u8fc7\u8fc7 $y$ \u90a3\u4e48\u5c31\u4e00\u5b9a\u8d70\u51fa\u8fc7 $y$ \u7684\u5b50\u6811\uff0c\u4e0e\u5176\u672a\u88ab\u89e3\u51b3\u77db\u76fe\uff09\u3002\u6240\u4ee5\u6b64\u65f6\u6211\u4eec\u5c31\u53ef\u4ee5\u8df3\u5230 $y$ \u7684\u5728\u539f\u6811\u4e0a\u7684\u7b2c\u4e8c\u4e2a\u51fa\u8fb9\u5904\uff0c\u7136\u540e\u7ee7\u7eed\u5f80\u4e0b\u8d70\uff08\u56e0\u4e3a\u4f1a\u76f4\u63a5\u8f6c\u5230\u7b2c\u4e8c\u4e2a\u5b69\u5b50\uff09\u3002\u5176\u5b9e\u5728\u6b64\u65f6\uff0c\u6211\u4eec\u5c31\u5df2\u7ecf\u53ef\u4ee5\u628a $y$ \u7684\u8282\u70b9\u89e3\u51b3\u4e86\u3002\u56e0\u4e3a\u4ece\u6b64\u4e4b\u540e\uff0c\u5b83\u7684\u904d\u5386\u987a\u5e8f\u5c31\u548c\u6211\u4eec\u6700\u7ec8\u7684\u6b27\u62c9\u6e38\u8d70\u5e8f\u76f8\u540c\u4e86\u3002\n\n\u6240\u4ee5\u6211\u4eec\u7684\u64cd\u4f5c\u5c31\u662f\uff1a\u5bf9\u4e8e $x$\uff0c\u6211\u4eec\u5148\u5220\u9664 $x$ \u7684\u6240\u6709\u6807\u8bb0\uff0c\u8df3\u5230 $x$ \u5728\u539f\u6811\u4e0a\u7684\u7b2c\u4e8c\u4e2a\u51fa\u8fb9\u5904\uff08\u5373\u6b27\u62c9\u5e8f\u4e0a\u90a3\u4e2a\u70b9\u5728 $x$ \u4e4b\u540e\u7684\u6700\u8fd1\u51fa\u73b0\u7684\u4f4d\u7f6e\uff09\u3002\u7136\u540e\u5f53 $x$ \u4e0a\u6ca1\u6709\u6807\u8bb0\uff08\u5373\u5176\u539f\u6765\u7684\u7b2c\u4e8c\u4e2a\u513f\u5b50\u4e3a\u81ea\u5df1\u7684\u7236\u8282\u70b9\uff0c\u6216\u8005\u81ea\u5df1\u662f\u53f6\u8282\u70b9\uff09\uff0c\u5c31\u987a\u5e8f\u8d70\u5230\u4e0b\u4e00\u4e2a\u6807\u8bb0\u5904\u3002\u7ef4\u62a4\u6bcf\u4e2a\u8282\u70b9\u4e4b\u540e\u7684\u7b2c\u4e00\u4e2a\u6807\u8bb0\uff0c\u8fd9\u53ef\u4ee5\u76f4\u63a5\u4e0a\u4e00\u4e2a\u5e76\u67e5\u96c6\u3002\u800c\u6211\u4eec\u540c\u65f6\u4e5f\u7ef4\u62a4\u65f6\u95f4\u3002\u8d70\u5230\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u65f6\u95f4\u533a\u95f4 $[l,r]$ \u53ef\u80fd\u4f1a\u56ca\u62ec\u4e00\u4e9b\u95ee\u8be2\uff0c\u800c\u8fd9\u6bb5\u65f6\u95f4\u5185\u8d70\u7684\u662f\u4e00\u6bb5\u8fde\u7eed\u7684\u6b27\u62c9\u5e8f\uff0c\u6211\u4eec\u628a\u8fd9\u4e9b\u95ee\u8be2\u7ed9\u5904\u7406\u6389\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6\u6b63\u786e\uff0c\u56e0\u4e3a\u6211\u4eec\u6bcf\u6b21\u904d\u5386\u5230\u6807\u8bb0\u8282\u70b9\u5c31\u4f1a\u5220\u9664\u4e00\u4e9b\u6807\u8bb0\uff0c\u800c\u4e24\u6b21\u6807\u8bb0\u8bbf\u95ee\u4e4b\u95f4\u6700\u591a\u6709\u4e00\u6b21\u975e\u6807\u8bb0\u8bbf\u95ee\u3002\n\n\u8981\u5bf9\u95ee\u8be2\u6392\u5e8f\u6240\u4ee5\u5f97\u52c9\u4e3a\u5176\u96be\u5730\u5e26\u4e2a log\u3002\n\n\u590d\u6742\u5ea6 $O(n\\alpha(n)+q\\log q)$\u3002\n\n---\n\nUpdate\uff1a\"\u4f60\u53ef\u4ee5\u57fa\u6392\u7684\"\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u505a\u5230 $O(n\\alpha(n)+q)$\u3002\n\n```cpp\nconst int N=1.6e6+9;\n\nint n,Q,nxt[N],fa[N],dfn[N],tick,deg[N],tot,hd[N],lst[N],fst[N],ans[N],tag[N];\npii q[N];\nvi pos[N],t[N];\nstruct edge {int to,nxt;} e[N];\n\nint find(int x) {return nxt[x]==x?x:nxt[x]=find(nxt[x]);}\nint dis(int x,int y) {\n    if(x<y) return y-x;\n    else return tick-x+y;\n}\nvoid del(int x) {nxt[x]=find(x%tick+1); tag[x]=0;}\nvoid dfs1(int u) {for(int v:t[u]) if(v!=fa[u]) fa[v]=u, dfs1(v);}\nint calc(int x,int y) {\n    x+=y, x%=tick; if(x==0) x=tick;\n    return dfn[x];\n}\nvoid dfs2(int u) {\n    dfn[++tick]=u; pos[u].eb(tick); fst[u]=tick;\n    for(int i=hd[u];i;i=e[i].nxt) {\n        dfs2(e[i].to);\n        dfn[++tick]=u; pos[u].eb(tick);\n    }\n}\nvoid work(int p,int time,int qt) {\n    int u=dfn[p];\n    if(tag[p]) {\n        for(int x:pos[u]) del(x);\n        while(qt<=Q&&q[qt].fi==time) ans[q[qt].se]=u, qt++;\n        if(t[u].size()==1) work(t[u][0],time+1,qt);\n        else work(t[u][1],time+1,qt);\n    } else {\n        int np=find(p);\n        if(!tag[np]) {\n            while(qt<=Q) ans[q[qt].se]=calc(p,q[qt].fi-time), qt++;\n            return;\n        }\n        int nt=time+dis(p,np);\n        while(qt<=Q&&q[qt].fi<nt) ans[q[qt].se]=calc(p,q[qt].fi-time), qt++;\n        work(np,nt,qt);\n    }\n}\n\nsigned main() {\n    n=read(), Q=read();\n    rep(i,1,n) {\n        deg[i]=read();\n        rep(j,1,deg[i]) t[i].eb(read());\n    }\n    dfs1(1);\n    rep(i,1,n) {\n        int pos=0;\n        if(i!=1) {while(t[i][pos]!=fa[i]) pos++;}\n        pos=(pos+1)%deg[i], hd[i]=tot+1;\n        rep(j,1,deg[i]) {\n            if(t[i][pos]==fa[i]) break;\n            e[++tot]=(edge){t[i][pos],tot+1};\n            pos=(pos+1)%deg[i];\n        }\n        if(hd[i]>tot) hd[i]=0;\n        else e[tot].nxt=0;\n    }\n    dfs2(1); tick--;\n    per(i,tick,1) {\n        int u=dfn[i]; lst[u]=i;\n        if(fst[u]==i) {\n            for(int &x:t[u]) {\n                if(!lst[x]) x=fst[x];\n                else x=lst[x];\n            }\n        }\n    }\n    rep(i,1,Q) q[i].fi=read(), q[i].se=i;\n    sort(q+1,q+Q+1);\n    rep(i,1,tick) nxt[i]=i, tag[i]=1;\n    work(1,0,1);\n    rep(i,1,Q) printf(\"%lld\\n\",ans[i]);\n    return 0;\n}\n```",
        "postTime": 1675239116,
        "uid": 180652,
        "name": "_lgswdn",
        "ccfLevel": 0,
        "title": "CCO2021 Through Another Maze Darkly"
    },
    {
        "content": "\u9996\u5148\u8003\u8651\u5047\u8bbe\u6574\u68f5\u6811\u4e00\u5f00\u59cb\u7684\u6307\u5411\u5168\u90fd\u662f\u81ea\u5df1\u7684\u7236\u8282\u70b9 \uff08 $1$ \u53f7\u70b9\u968f\u4fbf\u6307\u5411\u54ea\u4e2a\u5b50\u8282\u70b9\u90fd\u884c\uff0c\u4e0d\u59a8\u8bbe\u4e3a\u662f\u7b2c\u4e00\u4e2a \uff09\u4f1a\u600e\u4e48\u6837\uff1a\n\n\u90a3\u4e48\u6309\u7167\u9898\u76ee\u7684\u610f\u601d\uff0c\u6211\u4eec\u5c06\u4f1a\u4ece $1$ \u8282\u70b9\u5f00\u59cb\uff0c\u6309\u7167\u67d0\u79cd\u987a\u5e8f\u8bbf\u95ee\u81ea\u5df1\u7684\u5b50\u8282\u70b9\u7136\u540e\u53c8\u4f1a\u56de\u5230 $1$ \u53f7\u70b9\u5e76\u4e14\u6240\u6709\u6307\u9488\u4ecd\u7136\u6307\u5411\u81ea\u5df1\u7684\u7236\u8282\u70b9\u3002\n\n\u7136\u540e\u5c31\u4f1a\u5f62\u6210\u4e00\u4e2a\u5faa\u73af\u8282\uff0c\u5e76\u4e14\u6bcf\u4e00\u4e2a\u5faa\u73af\u8282\u5c06\u4f1a\u662f\u957f\u5ea6\u4e3a $2n - 2$ \u7684\u4e00\u4e2a\u5e8f\u5217\u3002\n\n\u9884\u5148\u6309\u7167\u4e0a\u9762\u63d0\u5230\u7684\u987a\u5e8f\u904d\u5386\u5148\u5f97\u5230\u8fd9\u4e2a\u5e8f\u5217\uff0c\u8bbe\u4e3a\u5e8f\u5217 $b$\u3002\n\n\u4f46\u662f\u4e00\u5f00\u59cb\u6574\u68f5\u6811\u7684\u72b6\u6001\u80af\u5b9a\u4e0d\u4f1a\u8fd9\u4e48\u4f18\u7f8e\uff0c\u4e0d\u8fc7\u53ef\u4ee5\u53d1\u73b0\uff0c\u7ecf\u8fc7 $k$ \u6b21\u4e4b\u540e\u6574\u4e2a\u5e8f\u5217\u4e00\u5b9a\u4f1a\u53d8\u6210\u4e0a\u8ff0\u7684\u6837\u5b50\u3002\u53ef\u662f\u8fd9\u4e2a $k$ \u662f\u975e\u5e38\u5927\u7684\uff0c\u4e0d\u80fd\u76f4\u63a5\u6a21\u62df\u3002\n\n\u8003\u8651\u7ef4\u62a4\uff1a\n\n\u6211\u4eec\u73b0\u5728\u5047\u8bbe\u5f97\u5230\u4e86\u4e00\u4e2a\u4ee5 $1$ \u4e3a\u6839\u7684\u8054\u901a\u5757\uff08\u4e00\u5f00\u59cb\u53ea\u4f1a\u6709 $1$ \u8fd9\u4e2a\u8282\u70b9\uff09\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/nizp13mc.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u7136\u540e\u4f1a\u5f97\u5230\u4e00\u4e2a\u904d\u5386\u8fd9\u4e9b\u70b9\u7684\u987a\u5e8f $a$\uff0c\u8fd9\u4e2a $a$ \u5e8f\u5217\u4e00\u5b9a\u662f $b$ \u5e8f\u5217\u7684\u4e00\u4e2a\u5b50\u5e8f\u5217\uff0c\u8fd9\u4e9b\u5df2\u7ecf\u5728\u6b64\u8054\u901a\u5757\u4e2d\u7684\u70b9\u7684\u904d\u5386\u7684\u76f8\u5bf9\u987a\u5e8f\u80af\u5b9a\u662f\u4e0d\u4f1a\u53d8\u7684\u3002\n\n\u63a5\u4e0b\u6765**\u5047\u60f3**\u53c8\u4ece $1$ \u51fa\u53d1\u7136\u540e\u904d\u5386\uff0c\u5230\u8fbe\u76ee\u524d\u7684\u8054\u901a\u5757\u7684\u4e00\u4e2a\u6df1\u5ea6\u6700\u6df1\u8282\u70b9 $v$ \u7684\u65f6\u5019\u6211\u4eec\u80af\u5b9a\u4f1a\u6269\u5c55\u8fd9\u4e2a\u8054\u901a\u5757\uff0c\u6b64\u523b\u5bf9\u5e94\u7684\u904d\u5386\u5e8f\u5217 $a$ \u4e5f\u4f1a\u6539\u53d8\uff0c\u4e5f\u5c31\u662f\u904d\u5386\u5e8f\u5217\u4f1a\u5728\u67d0\u4e2a\u4f4d\u7f6e\u540e\u9762\u63d2\u5165\u4e00\u6bb5\u533a\u95f4\u3002\n\n\u8003\u8651\u5f00\u4e00\u4e2a\u957f\u5ea6\u4e3a $2n - 2$ \u7684\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u5176\u4e2d $[l,l]$ \u8fd9\u4e2a\u53f6\u5b50\u8282\u70b9\u4e5f\u5c31\u8868\u793a $b$ \u5e8f\u5217\u4e2d\u7b2c $l$ \u4e2a\u4f4d\u7f6e\u662f\u5426\u5df2\u7ecf\u51fa\u73b0\u4e86\u3002\n\n\u5148\u628a\u6240\u6709\u88ab\u904d\u5386\u5230\u7684\u65b0\u7684\u70b9\uff08\u9664\u4e86\u65b0\u7684\u8054\u901a\u5757\u7684\u5e95\u90e8\u8282\u70b9\uff09\u5728 $b$ \u5e8f\u5217\u4e2d\u6240\u6709\u5bf9\u5e94\u7684\u4f4d\u7f6e\u5168\u90fd\u6807\u4e3a $1$\uff0c\u65b0\u7684\u8054\u901a\u5757\u7684\u5e95\u90e8\u8282\u70b9\u9700\u8981\u5728\u4e0b\u6b21\u624d\u628a\u5176\u6240\u6709\u4f4d\u7f6e\u6807\u4e3a $1$\uff0c\u9996\u6b21\u904d\u5386\u5230\u7684\u65f6\u5019\u5c31\u5148\u628a\u5b83\u5728 $b$ \u5e8f\u5217\u4e2d\u51fa\u73b0\u7684\u6700\u540e\u7684\u4e00\u4e2a\u4f4d\u7f6e\u6807\u8bb0\u4e3a $1$\uff0c\u4ee5\u53d1\u73b0\u6bcf\u4e2a\u8282\u70b9\u6700\u591a\u4f1a\u88ab\u63d2\u5165\u5176\u5ea6\u6570\u6b21\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u662f $O(n \\log n)$ \u7684\u3002\n\n\u7528\u8fd9\u4e2a\u7ebf\u6bb5\u6811\u6765\u7ef4\u62a4\u6211\u4eec\u7684\u904d\u5386\u5e8f\u5217 $a$ \uff0c\u7136\u540e\u6211\u4eec\u628a\u8be2\u95ee\u79bb\u7ebf\u6309\u7167 $k$ \u6392\u5e8f\u540e\u4f1a\u6392\u6210\u8fd9\u4e2a\u6837\u5b50\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/033z8bct.png)\n\n\u7136\u540e\u6211\u4eec\u6bcf\u6b21\u4fee\u6539\u5b8c\u4e86\u5e8f\u5217 $a$ \u540e\u90fd\u7528\u5e8f\u5217 $a$ \u53bb\u8986\u76d6\u8fd9\u4e2a\u8be2\u95ee\u70b9\u5373\u53ef\uff08\u4e5f\u5c31\u662f\u50cf\u8fd9\u6837\u94fa\u6392\uff09\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/nyyqzau8.png)\n\n\u8fd9\u6837\u94fa\u6392\u5c31\u4ee3\u8868\u6bcf\u6b21\u56de\u5230 $1$ \u540e\u53c8\u4f1a\u8fdb\u884c\u4e0b\u4e00\u8f6e\u62d3\u5c55\uff0c\u4e8e\u662f\u8fd9\u6837\u7684\u94fa\u6392\u662f\u5177\u6709\u5176\u5b9e\u9645\u610f\u4e49\u7684\u3002\n\n\u5bf9\u4e8e\u7279\u522b\u5927\u7684 $k$ \u5c31\u662f\u6709\u4e86\u5bf9\u5e94\u7684\u5faa\u73af\u8282\u4e86\uff0c\u5c31\u7279\u6b8a\u8003\u8651\u5373\u53ef\u3002\n\nps.\u8fd9\u4e2a\u9898\u89e3\u7684\u8bb2\u89e3\u672a\u5fc5\u4f1a\u5f88\u6e05\u695a\uff0c\u5982\u679c\u6709\u7ec6\u8282\u4e0d\u5230\u4f4d\u8bf7\u8054\u7cfb\u5199\u9898\u89e3\u7684\u4eba\uff1a`MuYC`\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O((n + m) \\log n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a$O(n)$\n\n#### Code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 8e5 + 50;\ntypedef long long LL;\ninline LL read() {\n\tLL x = 0, flag = 1;\n\tchar ch = getchar();\n\tfor( ; ch > '9' || ch < '0' ; ch = getchar()) if(ch == '-') flag = -1;\n\tfor( ; ch >= '0' && ch <= '9' ; ch = getchar()) x = x * 10 + ch - '0';\n\treturn x * flag;\n}\nint n, q, pos[MAXN], Ans[MAXN], Z[MAXN];\nint dfs[MAXN << 1], cnt = 0, Now[MAXN], F[MAXN]; \nvector <int> E[MAXN], ID[MAXN];\nqueue <int> D, New;\nstruct Ques {\n\tint id; LL k;\n} Q[MAXN];\nstruct SegmentTree {\n\tint l, r, siz;\n} T[MAXN << 3];\nbool cmp(Ques a, Ques b) { return a.k < b.k; }\nvoid build(int x, int l, int r) {\n\tT[x].l = l, T[x].r = r;\n\tint mid = (l + r) >> 1;\n\tif(l == r) return ;\n\tbuild(x << 1, l, mid), build(x << 1 | 1, mid + 1, r);\n}\nvoid change(int x, int pos) {\n\tint mid = (T[x].l + T[x].r) >> 1;\n\tif(T[x].l == T[x].r) { T[x].siz = 1; return ;}\n\tif(pos <= mid) change(x << 1, pos);\n\telse change(x << 1 | 1, pos);\n\tT[x].siz = T[x << 1].siz + T[x << 1 | 1].siz;\n}\nint GetKth(int x, int k) {\n\tint siz = T[x << 1].siz;\n\tif(T[x].l == T[x].r) return dfs[T[x].l];\n\tif(siz >= k) return GetKth(x << 1, k);\n\telse return GetKth(x << 1 | 1, k - siz);\n}\nvoid GetTheEndArray(int x) {\n\tif(x != 1) dfs[++ cnt] = x, ID[x].push_back(cnt);\n\tfor(int i = pos[x] + 1 ; ; i ++) {\n\t\ti %= E[x].size();\n\t\tif(i == pos[x] && x != 1) break;\n\t\tGetTheEndArray(E[x][i]), dfs[++ cnt] = x, ID[x].push_back(cnt), Z[x] = ID[x].size() - 1;\n\t\tif(i == pos[x] && x == 1) break;\n\t}\n}\nvoid GetFa(int x, int from) {\n\tF[x] = from;\n\tfor(int i = 0 ; i < E[x].size() ; i ++) {\n\t\tint to = E[x][i];\n\t\tif(to == from) { pos[x] = i; continue; }\n\t\tGetFa(to, x);\n\t}\n}\nvoid DFS(int x, int Rt) {\n\tNow[x] ++, Now[x] %= E[x].size();\n\tif(x != Rt) change(1, ID[x][Z[x]]), Z[x] --;\n\tif(Now[x] == pos[x] && x != Rt) { New.push(x); return ; }\n\tint fs = Now[x];\n\tfor(int i = Now[x] ;  ; i ++) {\n\t\ti %= E[x].size(), Now[x] = i;\n\t\tif(i == pos[x] && x != 1) break;\n\t\tDFS(E[x][i], Rt), change(1, ID[x][Z[x]]), Z[x] --;\n\t\tif(i == pos[x] && x == 1) break;\n\t}\n\tpos[x] = fs;\n\tif(Z[x] != -1) New.push(x);\n\treturn ;\n}\nvoid GetTheAnsAndPutIt() {\n\tint now = 1; LL lst = 0; D.push(1);\n\twhile(!D.empty()) {\n\t\twhile(!D.empty()) {\n\t\t\tint st = D.front(); \n\t\t\tD.pop(), DFS(st, st);\n\t\t}\n\t\twhile(!New.empty()) D.push(New.front()), New.pop();\n\t\twhile(Q[now].k - lst <= 1ll * T[1].siz && now <= q) {\n\t\t\tAns[Q[now].id] = GetKth(1, Q[now].k - lst);\n\t\t\tnow ++;\n\t\t}\n\t\tlst += T[1].siz;\n\t}\n\twhile(now <= q) {\n\t\tint id = Q[now].id; LL k = (Q[now].k - lst) % cnt;\n\t\tif(!k) k = cnt;\n\t\tAns[id] = dfs[k], now ++;\n\t}\n\tfor(int i = 1 ; i <= q ; i ++) printf(\"%d\\n\", Ans[i]);\n}\nint main() {\n\tn = read(), q = read();\n\tfor(int i = 1 ; i <= n ; i ++) {\n\t\tint K = read();\n\t\twhile(K --) E[i].push_back(read());\n\t}\n\tGetFa(1, 0), pos[1] = 0;\n\tfor(int i = 1 ; i <= q ; i ++) Q[i].id = i, Q[i].k = read();\n\tsort(Q + 1, Q + 1 + q, cmp); build(1, 1, 2 * n);\n\tGetTheEndArray(1); GetTheAnsAndPutIt();\n\treturn 0;\n}\n```",
        "postTime": 1632916085,
        "uid": 67817,
        "name": "MuYC",
        "ccfLevel": 6,
        "title": "P7830 [CCO2021] Through Another Maze Darkly \u9898\u89e3"
    },
    {
        "content": "nb\u7684\u6811\u4e0a\u601d\u7ef4DS\u9898\u3002\n\n\u5982\u679c\u6211\u4eec\u628a\u6bcf\u4e2a\u6307\u9488\u7684\u7684\u6307\u5411\u96c6\u5408\u4f5c\u4e3a\u72b6\u6001\uff0c\u7531\u4e8e\u72b6\u6001\u96c6\u5408\u662f\u6709\u9650\u7684\uff0c\u5e76\u4e14\u76f8\u540c\u7684\u521d\u59cb\u72b6\u6001\u5219\u7ed3\u675f\u4f4d\u7f6e\u76f8\u540c\uff0c\u6240\u4ee5\u6700\u540e\u4e00\u5b9a\u4f1a\u5faa\u73af\u3002\u4f46\u662f\u5e76\u4e0d\u4e00\u5b9a\u662f\u7eaf\u5faa\u73af\u3002\n\n\u7531\u4e8e\u8fd9\u662f\u4e00\u9897\u6811\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u7279\u6b8a\u6027\u8d28\u3002\u5982\u679c\u662f\u4e00\u4e2a\u83ca\u82b1\u56fe\uff0c\u663e\u7136\u5c31\u662f\u4e00\u4e2a\u6392\u5217\u4e0d\u65ad\u5faa\u73af\u3002\u5982\u679c\u662f\u94fe\uff0c\u624b\u7b97\u4e00\u4e0b\u53d1\u73b0\u5c31\u662f\u4ece\u70b9 $1$ \u5f00\u59cb\uff0c\u4e0d\u65ad\u6765\u56de\u5411\u4e24\u8fb9\u6269\u5c55\u3002\u6bcf\u6b21\u6269\u5c55\u591a\u5c11\u53d6\u51b3\u4e8e\u6307\u9488\u7684\u6307\u5411\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5b9a\u4e49 $f_i$ \u8868\u793a\u8282\u70b9 $i$ \u7684\u91cd\u6807\u53f7\uff0c\u6309\u4e00\u4e0b\u65b9\u5f0f\u6807\u53f7\u3002\n\n\u5bf9\u4e8e\u5f53\u524d\u70b9 $i$ \uff0c\u5b83\u7236\u4eb2\u524d\u9762\u51fa\u73b0\u7684\u5b50\u8282\u70b9\u6807\u53f7\u4e3a\u5b83\u7684\u6807\u53f7\uff0c\u540e\u9762\u51fa\u73b0\u7684\u6807\u53f7\u8981$+1$\u3002\n\n\u7136\u540e\u6211\u4eec\u518d\u6c42\u6574\u4e2a\u6811\u7684 DFS \u5e8f\uff0c\u6ce8\u610f DFS \u5e8f\u662f\u552f\u4e00\u7684\uff0c\u6bcf\u6b21\u6211\u4eec\u4ece\u7236\u8282\u70b9\u987a\u65f6\u9488\u7684\u4e0b\u4e00\u4e2a\u5b50\u8282\u70b9\u5f00\u59cb\u3002\n\n\u8fd9\u6837\u6807\u53f7\uff0c\u6211\u4eec\u5c31\u6784\u9020\u51fa\u4e86\u6574\u4e2a\u8def\u5f84\u3002\u6211\u4eec\u6309\u4ee5\u4e0b\u65b9\u5f0f\u8fd8\u539f\u8def\u5f84\u3002\n\n\u5b9a\u4e49 $s_i$ \u8868\u793a\u6807\u53f7 $\\le i$ \u7684\u70b9\u5728 DFS \u5e8f\u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e\u8fde\u8d77\u6765\uff0c\u90a3\u4e48\u539f\u8def\u5f84\u5c31\u662f $s_1s_2\\cdots$\u3002\n\n\u6240\u4ee5\u4ece $s_n$ \u5f00\u59cb\u5c31\u4e00\u76f4\u4ee5 $s_n$ \u5faa\u73af\uff0c\u5bf9\u4e8e\u524d\u9762\u7684\u53ef\u4ee5\u76f4\u63a5\u53ef\u6301\u4e45\u5316\u7ebf\u6bb5\u6811\u7ef4\u62a4 $s_i$\uff0c\u4e8c\u5206\u540e\u518d\u5728\u7ebf\u6bb5\u6811\u4e0a\u4e8c\u5206\u53ef\u4ee5\u505a\u5230\u65f6\u7a7a\u590d\u6742\u5ea6 $\\mathcal{O}(N\\log N)$\u3002\u4e8b\u5b9e\u4e0a\u53ef\u4ee5\u5bf9\u8be2\u95ee\u79bb\u7ebf\uff0c\u53ef\u4ee5\u5c06\u7a7a\u95f4\u4f18\u5316\u5230\u7ebf\u6027\uff0c\u4f46\u662f\u672c\u9898\u6709\u4e00\u4e2aG\u6240\u4ee5\u65e0\u6240\u8c13\u3002\n\n\u53e6\u5916\u8fd9\u9053\u9898\u7684\u96be\u5ea6\u771f\u7684\u53ea\u6709\u7d2b\u5417\uff08",
        "postTime": 1630073432,
        "uid": 119261,
        "name": "7KByte",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011[CCO2021] Through Another Maze Darkly"
    }
]