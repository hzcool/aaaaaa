[
    {
        "content": " \u849f\u84bb\u7b2c\u4e00\u7bc7\u9898\u89e3\u3002\u3002\u3002\n \u8fd9\u9053\u9898\uff0c\u6839\u636e\u9898\u610f\uff0c\u6b64\u4eba\u4f1a\u548c\u6240\u6709\u597d\u611f\u5ea6\u4e3a\u6b63\u6570\u7684\u4eba\u7ed3\u4ea4\u3002\u8bbe\u6709n\u4eba\u597d\u611f\u5ea6\u4e3a\u6b63\u6570\uff0c\u800c\u6b64\u4eba\u5fd8\u8bb0\u597d\u53cb\u7684\u65b9\u5f0f\u4e3a\u540e\u8fdb\u5148\u51fa\uff0c\u7b26\u5408\u6808\u7684\u7279\u70b9\uff0c\u6240\u4ee5\u65b9\u5f0f\u6570\u4e3a\u7b2cn\u4e2a\u5361\u5854\u5170\u6570$\\frac{C_{2n}^n}{n+1}$.\n \n\u7531\u4e8ep\u4e0d\u4e00\u5b9a\u662f\u8d28\u6570\uff0c\u6240\u4ee5Lucas\u5b9a\u7406\u4e0d\u80fd\u7528\uff0c\u6211\u4eec\u7edf\u8ba1\u5404\u4e2a\u7d20\u56e0\u5b50\u5728\u5361\u5854\u5170\u6570\u4e2d\u51fa\u73b0\u7684\u5e42\u6b21\u3002\u6ce8\u610f\u5230\uff1a\u5728n\uff01\u4e2d\uff0c\u7d20\u56e0\u5b50p\u5e42\u6b21\u4e3a$\\sum_{i=1}^{+\\infty}{[\\frac{n}{p^i}]}$.\n \n ```cpp\n \n #include<set>////////\n #include<map>////////\n #include<cmath>//////\n #include<ctime>//////\n #include<queue>//////\n #include<stack>//////\n #include<cctype>///// \n #include<cstdio>/////\n #include<vector>/////\n #include<string>/////\n #include<cstring>////\n #include<sstream>////\n #include<iostream>///\n #include<algorithm>//\nusing namespace std;//\n#define rep(a,b,c) for(int a=b;a<=c;a++)\n#define ul unsigned long long\n#define ll long long\nconst ll maxn=2001000;\nbool vis[2001010];//\u662f\u5426\u662f\u8d28\u6570\nvector<ll> p;//\u6240\u6709\u7684\u8d28\u6570\nvoid init(){//\u7b5b\u8d28\u6570\n    ll n=maxn;\n    memset(vis,1,sizeof(vis));\n    vis[1]=0;\n    vis[2]=1;\n    p.push_back(2); \n    for(int i=4;i<=n;i+=2) vis[i]=0;\n    for(ll i=3;i*i<=n;i+=2){\n        if(vis[i]){\n        \t\n            for(ll j=i*i;j<=n;j+=i) vis[j]=0;\n        }\n    }\n    for(int i=3;i<=maxn;i+=2){\n    \tif(vis[i]) p.push_back(i); \n\t}\n\tp.push_back(maxn); //\u9632\u6b62\u540e\u9762\u8fc7\u7a0b\u4e2d\u6570\u7ec4\u8d8a\u754c\uff08\u53cd\u6b63\u6700\u540e2n\u662f\u5c0f\u4e8e\u8fd9\u4e2a\u201c\u8d28\u6570\u201d\u7684\uff0c\u65e0\u5f71\u54cd\uff09\n}\nint alpha[maxn]={0};//katalan\u6570\u4e2d\u5404\u8d28\u6570\u7684\u5e42\u6b21\nvoid add_alpha_fact(int n){//\u9636\u4e58\u7d20\u56e0\u5b50\u52a0\u6210\n\tfor(int i=0;p[i]<=n;i++){\n\t\tint res=n;\n\t\twhile(res>0){\n\t\t\tres/=p[i];\n\t\t\talpha[i]+=res;\n\t\t}\n\t}\n}\nvoid sub_twice_alpha_fact(int n){//\u9636\u4e58\u7d20\u56e0\u5b50\u53cc\u500d\u51cf\u5c11\n\tfor(int i=0;p[i]<=n;i++){\n\t\tint res=n;\n\t\twhile(res>0){\n\t\t\tres/=p[i];\n\t\t\talpha[i]-=(res+res);\n\t\t}\n\t}\n}\nvoid sub_alpha(int n){//\u5355\u4e2a\u6570\u7d20\u56e0\u5b50\u51cf\u5c11\n\tfor(int i=0;p[i]<=n;i++){\n\t\twhile(n%p[i]==0){\n\t\t\tn/=p[i];\n\t\t\talpha[i]--;\n\t\t}\n\t}\n}\nvoid katalan(int n){\n\tadd_alpha_fact(2*n);//\u5206\u5b502n\u7684\u9636\u4e58\n\tsub_twice_alpha_fact(n);//\u5206\u6bcdn\u9636\u4e58\u5e73\u65b9\n\tsub_alpha(n+1);//\u5206\u6bcdn+1\n}\nint main(){\n\tinit();\n\tint cnt,cur,n=0;\n\tll ha;\n\tcin>>cnt>>ha;\n\twhile(cnt--){\n\t\tscanf(\"%d\",&cur);\n\t\tif(cur>0) n++;\n\t}//\u7edf\u8ba1\u597d\u611f\u5ea6\u4e3a\u6b63\u6570\u7684\u4eba\u6570\n\tif(n==0){\n\t\tcout<<\"TerriblePlace\";\n\t\treturn 0;\n\t}\n\tkatalan(n);\n\tll ans=1;\n\trep(i,0,p.size() -1){\n\t\twhile(alpha[i]--){\n\t\t\tans=(ans*p[i])%ha;\n\t\t}\n\t}//\u4e58\u8d77\u6765\n\tcout<<ans;\n\treturn 0;\n}\n\n```",
        "postTime": 1531474931,
        "uid": 81745,
        "name": "nitrobenzene",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4741 \u3010[Wind Festival]Finding RhFe\u3011"
    }
]