[
    {
        "content": "\u672c\u9898\u53ef\u4ee5\u91c7\u7528\u53cc\u5411BFS\uff0c~~\u522b\u540d\u5927\u6a21\u62df\u3002~~\n\n\u539f\u56e0\u662f\u672c\u9898\u7684\u53cd\u5411\u641c\u7d22\u65b9\u5f0f\u4e0e\u6b63\u5411\u76f8\u540c\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b58\u5728\u53cd\u5411\u641c\u7d22\u7684\u65b9\u5f0f\u3002\n\n`cqbzljsqwq` \u5927\u5de8\u4f6c\u7684\u53cc\u5411BFS\u5f3a\u608d\u7684\u516b\u7ef4\u6570\u7ec4\u72b6\u6001\u672c\u849f\u84bb\u5b66\u4e0d\u6765QwQ\n\n\u849f\u84bb\u7684\u5f53\u524d\u72b6\u6001\u5c31\u662f\u4e00\u4e2a\u516d\u4f4d\u6570\uff0c\u76f4\u63a5\u6254\u5230\u4e0b\u6807\u91cc\u9762\u6807\u8bb0\u3002\n\n\u90a3\u4e48\u5f88\u660e\u663e\uff0c\u7528\u516d\u4f4d\u6570\u6bd4\u7528\u5b57\u7b26\u4e32\u505a\u72b6\u6001\u5feb\u4e86\u65e0\u6570\u500d\uff0c\u540c\u65f6\u4e5f\u4f1a\u9ebb\u70e6\u65e0\u6570\u500d\u3002\n\n\u6bd4\u5982\uff0c\u672c\u4eba\u7a0b\u5e8f\u4e00\u76f4\u5f88\u6162\u7684\u539f\u56e0\u662f\uff1a\u6709\u8d85\u8fc7\u4e24\u5c0f\u65f6\u7684\u65f6\u95f4\u4e00\u76f4\u8ba4\u4e3a\u5b58\u516d\u4f4d\u6570\u7684\u4e0b\u6807\u5e94\u8be5\u5f00`1e7`\u7684\u6570\u7ec4\uff0c\uff08$10^7-999999=9000001$\uff09\u5bfc\u81f4`memset`\u76f4\u63a5\u7206\u70b8\u3002\n\n\u8bbe\u8ba1\u72b6\u6001\uff1a\n\n```cpp\nstruct node{\n    int now;//\u5f53\u524d\u7684\u516d\u4f4d\u6570\u5bc6\u7801\n    int stp;//\u5f53\u524d\u6240\u7528\u6b65\u6570\n    int pos;//\u5f53\u524d\u5149\u6807\u6240\u5728\u4f4d\u7f6e\n    bool flag;//\u641c\u7d22\u65b9\u5411\uff0c0\u8868\u793a\u6b63\u5411\uff0c1\u8868\u793a\u53cd\u5411\n}\n```\n\n`left/right`\u64cd\u4f5c\u597d\u8bf4\uff0c\u76f4\u63a5\u6539\u53d8`pos`\u7684\u503c\u5c31\u884c\u4e86\u3002\n\n\u4f46`up/down`\u548c`swap0/swap1`\u662f\u8981\u6539\u53d8`now`\u7684\u67d0\u51e0\u4f4d\u4e0a\u7684\u503c\uff0c\u5f88\u9ebb\u70e6\u3002\n\n\u6211\u4eec\u5148\u5b58\u50a8\u4e00\u4e2a\u6570\u4ece\u5de6\u5411\u53f3\u6bcf\u4e00\u4f4d\u5bf9\u5e94\u7684\u5355\u4f4d\uff1a\n\n```cpp\nconst int ws[]={1000000,100000,10000,1000,100,10,1};\n//\u9632RE\uff0c\u7b2c0\u4f4d\u4e5f\u8981\u5b58\n```\n\n\u5047\u8bbe\u6211\u4eec\u8981\u5c06`num`\u5728`pos`\u4e0a\u7684\u503c\u66f4\u6539\u4e3a`x`\uff0c\u600e\u4e48\u64cd\u4f5c\u5462\uff1f\n\n\u6211\u4eec\u5c06`num`\u62c6\u6210`1~(pos-1)`\uff0c`pos`\u548c`(pos+1)~6`\u4e09\u90e8\u5206\u3002\n\n\u7b2c\u4e00\u90e8\u5206\u548c\u7b2c\u4e09\u90e8\u5206\u4e0d\u53d8\uff0c\u5c06\u7b2c\u4e8c\u90e8\u5206\u4fee\u6539\u4e3a`x*ws[pos]`\u5c31\u884c\u4e86\u3002\n\n`1~(pos-1)`\u7684\u83b7\u53d6\u65b9\u5f0f\uff1a\u5229\u7528C++\u6574\u9664\u7684\u7279\u6027\uff0c`num/ws[pos-1]*ws[pos-1]`\u5c31\u53ef\u4ee5\u5f97\u5230\u4e86\u3002\n\n`(pos+1)~6`\u7684\u83b7\u53d6\u65b9\u5f0f\uff1a`num%ws[pos]`\u5c31\u53ef\u4ee5\u5f97\u5230`pos`\u4e4b\u540e\u4f4d\u6570\u7684\u503c\u3002\n\n\u7531\u6b64\u5f97\u51fa\u4e0a\u4e0b\u64cd\u4f5c\u7684\u4ee3\u7801\uff1a\n\n```cpp\n//up or down,\u83b7\u53d6num\u7684pos\u4f4d\u589e\u52a0chg\u7684\u7ed3\u679c\ninline int UpOrDown(int num,int pos,int chg){\n    int t=num/ws[pos]%10+chg;\n    //\u83b7\u53d6num\u7684pos\u4f4d\u53d8\u5316\u540e\u7684\u7ed3\u679c\uff0c\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u8fd9\u6837\u53d8\u5316\n    if(t>=0&&t<=9)\n        return num/ws[pos-1]*ws[pos-1]+t*ws[pos]+num%ws[pos];\n    return num;\n}\n```\n\n\u4ee5\u53ca`swap`\u64cd\u4f5c\uff1a\n\n```cpp\n//swap0 or swap1,\u83b7\u53d6num\u7684pos\u4f4d\u4e0echg\u4f4d\u4ea4\u6362\u7684\u7ed3\u679c\ninline int Swap(int num,int pos,int chg){\n    int bg=num/ws[pos]%10;//\u8bb0\u5f55pos\u4f4d\u672c\u6765\u7684\u6570\u503c\n    int ed=num/ws[chg]%10;//\u8bb0\u5f55chg\u4f4d\u672c\u6765\u7684\u6570\u503c\n    if(bg==ed)return num;\n    num=num/ws[pos-1]*ws[pos-1]+ed*ws[pos]+num%ws[pos];//pos\u53d8\u4e3aed\n    num=num/ws[chg-1]*ws[chg-1]+bg*ws[chg]+num%ws[chg];//chg\u53d8\u4e3abg\n    return num;\n}\n```\n\n\u7136\u540e\u662f\u8c03\u5230\u5410\u7684\u53cc\u5411BFS\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\u540c\u65f6\u6807\u8bb0\u8d70\u6ca1\u8d70\u8fc7\u4e0e\u6240\u7528\u6b65\u6570\uff0c\u6211\u4eec\u4e8b\u5148\u5c06`vis`\u6570\u7ec4\u7f6e\u4e3a`-1`\u3002\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```cpp\n/*\n(twbfs==\u5927\u6a21\u62df)==true\n*/\n#include<queue>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nshort vis[1000000][7][2];\nstruct node{\n    int now;\n    int stp,pos;\n    //pos: \u5f53\u524d\u5149\u6807\u4f4d\u7f6e\n    bool flag;\n}S,B,f,tmp;\nqueue<node>q;\nconst int ws[]={1000000,100000,10000,1000,100,10,1};\ninline int UpOrDown(int num,int pos,int chg){\n    int t=num/ws[pos]%10+chg;\n    if(t>=0&&t<=9)\n        return num/ws[pos-1]*ws[pos-1]+t*ws[pos]+num%ws[pos];\n    return num;\n}\ninline int Swap(int num,int pos,int chg){\n    int bg=num/ws[pos]%10;\n    int ed=num/ws[chg]%10;\n    if(bg==ed)return num;\n    num=num/ws[pos-1]*ws[pos-1]+ed*ws[pos]+num%ws[pos];\n    num=num/ws[chg-1]*ws[chg-1]+bg*ws[chg]+num%ws[chg];\n    return num;\n}\nint TWBFS(void){\n    //TIANWEN BFS(bushi)\n    while(!q.empty()){\n        tmp=f=q.front();\n        tmp.stp++;\n        q.pop();\n        if(~vis[f.now][f.pos][!f.flag])\n            return f.stp+vis[f.now][f.pos][!f.flag];\n        //\u5c06\u5149\u6807\u5de6\u79fb\u4e00\u4f4d\n        if(f.pos>1){\n            tmp.pos=f.pos-1;\n            if(vis[tmp.now][tmp.pos][tmp.flag]==-1){\n                vis[tmp.now][tmp.pos][tmp.flag]=tmp.stp;\n                q.push(tmp);\n            }\n        }\n        //\u5c06\u5149\u6807\u53f3\u79fb\u4e00\u4f4d\n        if(f.pos<6){\n            tmp.pos=f.pos+1;\n            if(vis[tmp.now][tmp.pos][tmp.flag]==-1){\n                vis[tmp.now][tmp.pos][tmp.flag]=tmp.stp;\n                q.push(tmp);\n            }\n        }\n        //\u8bb0\u5f97\u628a\u5149\u6807\u79fb\u56de\u6765\uff0c\u4e0d\u8981\u50cf\u672c\u849f\u84bb\u4e00\u6837\u50bb\u50bb\u8e29\u5751\n        tmp.pos=f.pos;\n        //\u5c06\u5149\u6807\u6240\u5728\u4f4d\u7f6e\u7684\u6570\u503c\u589e\u52a01\n    \ttmp.now=UpOrDown(f.now,f.pos,1);\n        if(vis[tmp.now][tmp.pos][tmp.flag]==-1){\n            vis[tmp.now][tmp.pos][tmp.flag]=tmp.stp;\n            q.push(tmp);\n        }\n        //\u5c06\u5149\u6807\u6240\u5728\u4f4d\u7f6e\u7684\u6570\u503c\u51cf\u5c111\n    \ttmp.now=UpOrDown(f.now,f.pos,-1);\n        if(vis[tmp.now][tmp.pos][tmp.flag]==-1){\n            vis[tmp.now][tmp.pos][tmp.flag]=tmp.stp;\n            q.push(tmp);\n        }\n        //swap0\n        if(f.pos!=1){\n            tmp.now=Swap(f.now,f.pos,1);\n            if(vis[tmp.now][tmp.pos][tmp.flag]==-1){\n                vis[tmp.now][tmp.pos][tmp.flag]=tmp.stp;\n                q.push(tmp);\n            }\n        }\n        //swap1\n    \tif(f.now!=6){\n            tmp.now=Swap(f.now,f.pos,6);\n            if(vis[tmp.now][tmp.pos][tmp.flag]==-1){\n                vis[tmp.now][tmp.pos][tmp.flag]=tmp.stp;\n                q.push(tmp);\n            }\n        }\n    }\n    return 114514;\n}\nint main(){\n    scanf(\"%d%d\",&S.now,&B.now);\n    memset(vis,-1,sizeof(vis));\n    S.pos=1;\n    q.push(S);\n    B.flag=1;\n    vis[S.now][1][0]=0;\n    //\u6700\u7ec8\u5bc6\u7801\u7684\u5149\u6807\u5728\u6bcf\u4e00\u4f4d\u90fd\u6709\u53ef\u80fd\u51fa\u73b0\n    for(int i=1;i<=6;++i){\n        B.pos=i;\n        vis[B.now][i][1]=0;\n        q.push(B);\n    }\n    printf(\"%d\\n\",TWBFS());\n    return 0;\n}\n```\n\n**end.**\n\n",
        "postTime": 1613363100,
        "uid": 245052,
        "name": "ollll62",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1949 \u3010[NOI2001] \u806a\u660e\u7684\u6253\u5b57\u5458\u3011"
    },
    {
        "content": "\u76f4\u63a5\u5e7f\u641c\uff0c\u54c8\u5e0c\u5224\u91cd\u5373\u53ef\u3002\n\n\u6211\u7528\u4e86\u4e00\u4e2a\u6570\u5217\u6765\u8868\u793a\u5f53\u524d\u7684\u5bc6\u7801\uff0c\u6240\u4ee5\u4fee\u6539\u6709\u4e00\u4e9b\u5957\u8def\uff0c\u770b\u4ee3\u7801\u5427\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<climits>\n#include<cstring>\n#include<iomanip>\n#include<queue>\nusing namespace std;\nstruct node{int num;int gb;int dep;}u,v;\nqueue<node>q1;\nbool vis[1000000][7];//\u5224\u91cd\nint shi[8]={0,100000,10000,1000,100,10,1};//\u7b2ci\u4f4d\u5bc6\u7801\u7684\u5b9e\u9645\u4f4d\u7f6e\uff0c\u5982\u56e0\u4e3a123456\u4e2d\u76841\u662f\u5728\u5341\u4e07\u4f4d\u4e0a\u6240\u4ee5\u662f\u5341\u4e07\nint main()\n{\n    int i,j,mb,kl1,kl2;\n    scanf(\"%d%d\",&u.num,&mb);\n    if(mb==u.num){printf(\"0\");return 0;}//\u7279\u5224\u4e0d\u7528\u6539\u52a8\u7684\u65b9\u6cd5\n    u.gb=1;u.dep=0;q1.push(u);\n    while(!q1.empty()){\n        u=q1.front();q1.pop();\n        kl2=(u.num/shi[u.gb])%10;//\u63d0\u53d6\u5149\u6807\u4f4d\u7f6e\u7684\u6570\u5b57\n        if(u.gb!=1){\n            v=u;v.dep++;v.gb=u.gb-1;\n            if(!vis[v.num][v.gb]){vis[v.num][v.gb]=1;q1.push(v);}//\u5de6\u79fb\u5149\u6807\n            v=u;v.dep++;\n            kl1=v.num/shi[1];//\u4ea4\u6362\u5149\u6807\u5904\u548c\u7b2c1\u4f4d\u7684\u6570\u5b57\n            v.num=v.num-kl1*shi[1]+kl2*shi[1]-kl2*shi[v.gb]+kl1*shi[v.gb];\n            if(v.num==mb){printf(\"%d\",v.dep);return 0;}\n            if(!vis[v.num][v.gb]){vis[v.num][v.gb]=1;q1.push(v);}\n        }\n        if(u.gb!=6){\n            v=u;v.dep++;v.gb=v.gb+1;\n            if(!vis[v.num][v.gb]){vis[v.num][v.gb]=1;q1.push(v);}//\u53f3\u79fb\u5149\u6807\n            v=u;v.dep++;\n            kl1=v.num%10;\n            v.num=v.num-kl1+kl2-kl2*shi[v.gb]+kl1*shi[v.gb];//\u4ea4\u6362\u5149\u6807\u5904\u548c\u7b2c6\u4e2a\u6570\u5b57\n            if(v.num==mb){printf(\"%d\",v.dep);return 0;}\n            if(!vis[v.num][v.gb]){vis[v.num][v.gb]=1;q1.push(v);}\n        }\n        if(kl2!=0){\n            v=u;v.dep++;//\u5f53\u524d\u6570\u5b57--\n            v.num=v.num-shi[v.gb];\n            if(v.num==mb){printf(\"%d\",v.dep);return 0;}\n            if(!vis[v.num][v.gb]){vis[v.num][v.gb]=1;q1.push(v);}\n        }\n        if(kl2!=9){\n            v=u;v.dep++;//\u5f53\u524d\u6570\u5b57++\n            v.num=v.num+shi[v.gb];\n            if(v.num==mb){printf(\"%d\",v.dep);return 0;}\n            if(!vis[v.num][v.gb]){vis[v.num][v.gb]=1;q1.push(v);}\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1495256718,
        "uid": 20604,
        "name": "litble",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1949 \u3010\u806a\u660e\u7684\u6253\u5b57\u5458_NOI\u5bfc\u520a2011\u63d0\u9ad8\uff0810\uff09\u3011"
    },
    {
        "content": "## **\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22 bfs\uff01**\n\u5229\u7528STL\u961f\u5217\uff0c\u6570\u7ec4\u5224\u91cd\u5373\u53ef\n```cpp\n#include<iostream>\n#include<queue>//\u5934\u6587\u4ef6\n#define break_prt() f=true,ans=node1.step //\u5b8f\u5b9a\u4e49\uff0c\u6210\u529f\u5e76\u7ed3\u675f\n#define makeflag_push() flag[node1.num][node1.line]=true,Q.push(node1)//\u5236\u6807\u8bb0\u5e76\u628a\u65b0\u70b9\u8fdb\u961f\nusing namespace std;\nstruct node{\n\t int num,line,step;\n\t //\u5bc6\u7801\uff0c\u5149\u6807\u4f4d\u7f6e\uff0c\u6b65\u6570\n}now,node1;\nqueue<node>Q;//STL\u961f\u5217\nbool flag[1000001][7],f;//\u5224\u91cd\u6570\u7ec4\uff0c\u662f\u5426\u6210\u529f\u6807\u8bb0\nint sum,num,s,e,cost[8],ans;\nvoid swap_left()//\u64cd\u4f5c1 swap0\n{\n\t node1=(node){now.num,now.line-1,now.step+1};\n\t if(!flag[node1.num][node1.line])makeflag_push();\n\t node1=(node){now.num,now.line,now.step+1};\n\t sum=node1.num/cost[1];\n\t node1.num=node1.num-sum*cost[1]+num*cost[1]-num*cost[node1.line]+sum*cost[node1.line];\n\t if(node1.num==e)break_prt();\n\t if(!flag[node1.num][node1.line])makeflag_push();\n}\nvoid swap_right()//\u64cd\u4f5c2 swap1\n{\n\t node1=(node){now.num,now.line+1,now.step+1};\n\t if(!flag[node1.num][node1.line])makeflag_push();\n\t node1=(node){now.num,now.line,now.step+1};\n\t sum=node1.num%10;\n\t node1.num=node1.num-sum+num-num*cost[node1.line]+sum*cost[node1.line];\n\t if(node1.num==e)break_prt();\n\t if(!flag[node1.num][node1.line])makeflag_push();\n}\nvoid up()//\u64cd\u4f5c3 up\n{\n\t node1=(node){now.num+cost[node1.line],now.line,now.step+1};\n\t if(node1.num==e)break_prt();\n\t if(!flag[node1.num][node1.line])makeflag_push();\n}\nvoid down()//\u64cd\u4f5c4 down\n{\n\t node1=(node){now.num-cost[node1.line],now.line,now.step+1};\n\t if(node1.num==e)break_prt();\n\t if(!flag[node1.num][node1.line])makeflag_push();\n}\nint main()\n{\n\t cost[1]=100000;\n\t for(int i=2;i<=8;i++)\n\t\t  cost[i]=cost[i-1]/10;\n\t cin>>s>>e;\n\t if(s==e)//\u7279\u5224\u7b2c\u4e8c\u4e2a\u6d4b\u8bd5\u70b9\n\t {\n\t\t  cout<<0;\n\t\t  return 0;\n\t }\n\t Q.push((node){s,1,0});//\u539f\u59cb\u5bc6\u7801\n\t while(!Q.empty())\n\t {\n\t\t  if(f)break;\n\t\t  now=Q.front();//\u53d6\u76ee\u524d\u961f\u9996\u5143\u7d20\n\t\t  Q.pop();\n\t\t  num=(now.num/cost[now.line])%10;\n\t\t  if(now.line!=1)swap_left();//\u5982\u679c\u5149\u6807\u4e0d\u5728\u5f55\u5165\u533a\u76841\u53f7\u4f4d\u7f6e\uff0c\u5219\u5c1d\u8bd5\u64cd\u4f5c1\n\t\t  if(now.line!=6)swap_right();//\u5982\u679c\u5149\u6807\u4e0d\u5728\u5f55\u5165\u533a\u76846\u53f7\u4f4d\u7f6e\uff0c\u5219\u5c1d\u8bd5\u64cd\u4f5c2\n\t\t  if(num!=9)up();//\u5982\u679c\u5149\u6807\u6240\u5728\u4f4d\u7f6e\u7684\u6570\u5b57\u4e0d\u4e3a9\uff0c\u5c1d\u8bd5\u64cd\u4f5c3\n\t\t  if(num!=0)down();//\u5982\u679c\u5149\u6807\u6240\u5728\u4f4d\u7f6e\u7684\u6570\u5b57\u4e0d\u4e3a0\uff0c\u5c1d\u8bd5\u64cd\u4f5c4\n    }\n\tcout<<ans;\n    return 0;\n}\n```\n",
        "postTime": 1569057304,
        "uid": 138979,
        "name": "\u9093\u5e03\u5229\u591a6",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1949 \u3010\u806a\u660e\u7684\u6253\u5b57\u5458_NOI\u5bfc\u520a2011\u63d0\u9ad8\uff0810\uff09\u3011"
    },
    {
        "content": "\u54b3\u54b3...\u8fd9\u5c06\u6210\u4e3a\u6211\u7b2c\u4e00\u4e2a\u8ba4\u771f\u5199\u7684\u9898\u89e3\u3002\u4e4b\u524d\u4e0a\u4f20\u4e86\u5f88\u591a\u6c34\u9898\u89e3\u771f\u7684\u5bf9\u4e0d\u4f4f\u4e86\u3002\u56e0\u4e3a\u6211\u5f3a\u8feb\u75c7\u60f3\u8981\u6309\u6211\u8fc7\u9898\u7684\u987a\u5e8f\u5199\u9898\u89e3\uff0c\u4f46\u662f\u524d\u9762\u7684\u9898\u771f\u7684\u597d\u6ca1\u5199\u5934\u554a\uff01\n\n\u597d\u4e86\u56de\u5f52\u6b63\u9898\u3002\n\n\u8fd9\u9053\u9898\uff0c\u56e0\u4e3a\u6211\u4eec\u8981\u6a21\u62df\u6253\u5b57\u5458\u7684\u52a8\u4f5c\uff0c\u4e3a\u4e86\u6e05\u6670\u53ef\u8fa8\uff0c\u6211\u9009\u62e9\u6bcf\u79cd\u64cd\u4f5c\u5199\u4e00\u4e2a\u5c0f\u51fd\u6570\uff08~~\u7d2f\u8d58~~\uff09\u3002\u6a21\u62df\u64cd\u4f5c\u5e94\u8be5\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u3002\n\n\u597d\uff0c\u5224\u91cd\u65b9\u9762\uff0c\u6211\u9009\u62e9\u5c06\n### **\u5bc6\u7801\u6392\u5217\u52a0\u4e0a\u4e00\u4f4d\u5149\u6807\u4f4d\u7f6e**\n\u4f5c\u4e3a\u7f16\u53f7\uff0c\u7a7a\u95f4\u4e0d\u4f1a\u8d85\u7684\uff0c\u5ba2\u5b98\u653e\u5fc3\u98df\u7528~\n\n\u600e\u4e48\u8bf4\u5462\uff0c\u5c31\u7b97\u662f\u8fd9\u6837\uff0c\u56e0\u4e3a\u6211\u7528\u7684\u5faa\u73af\u961f\u5217\uff0c\u53c8\u5f88low\u5730\u5f00\u4e86\u7ed3\u6784\u4f53\uff0c\u6240\u4ee5\u5f53\u6570\u636e\u5927\u4e86\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u6574\u4e2a\u961f\u5217\u90fd\u76f4\u63a5\u653e\u4e0d\u4e0b\u6211\u7684\u6570\u4e86\uff0c\u59a5\u59a5\u5730\u5c31\u4f1aWA\uff0c\u800c\u6211\u53c8\u6ca1\u529e\u6cd5\u628a\u961f\u5217\u518d\u5f00\u5927\u4e00\u70b9\u3002\n\n\u563f\u54df\u597d\u6c14\u54df\u3002\n\n\u6240\u4ee5\u540e\u6765\u5c31\u6709\u4e86\u6211\u7684\u4e00\u4e2aMax\u548cMin\u7684\u4f18\u5316\u3002\u5176\u5b9e\u6211\u62ff\u5230\u8fd9\u9053\u9898\u5f00\u59cb\u5199\u7684\u65f6\u5019\u5c31\u60f3\u7528\u8fd9\u4e2a\u4f18\u5316\u7684\u3002\u4f46\u662f\u5f53\u65f6\u9ad8\u4e86\u4e9b\u4e4c\u9f99\uff0c\u88ab\u6211\u653e\u5f03\u4e86\u3002\u8fd9\u4e9b\u518d\u8bf4\u3002Max\u548cMin\u62ff\u6765\u5e72\u561b\u5462\uff1f\u5f88\u7b80\u5355\uff0c\n\n### **\u8bb0\u5f55\u4e00\u4e0b\u76ee\u6807\u72b6\u6001\u4e2d\u51fa\u73b0\u8fc7\u7684\u6700\u5927\u6570\u548c\u6700\u5c0f\u6570**\n\n\u56e0\u4e3a\u6211\u4eec\u53ea\u60f3\u8981\u5f97\u5230\u67d0\u4e00\u4e2a\u8303\u56f4\u7684\u6570\uff0c\u6240\u4ee5\u5f53\u67d0\u4e00\u6b65\u64cd\u4f5c\u4f7f\u5f97\u6211\u4eec\u5f97\u5230\u4e00\u4e2a\u72b6\u6001\uff0c\u5176\u4e2d\u7684\u6570**\u8d85\u51fa\u4e86\u8be5\u8303\u56f4**\uff0c\u90a3\u4e48\u8be5\u6b65\u9aa4\u5373\u4e3a**\u591a\u4f59\u7684\u6b65\u9aa4**\uff0c\u4e4b\u540e\u5fc5\u987b\u8fd8\u5f97\u628a\u5b83**\u52a0/\u51cf\u56de\u6765**\uff0c\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5**\u6392\u9664**\u8fd9\u4e9b\u6b65\u9aa4\u3002\u5b9e\u73b0\u4e0a\uff0c\u6211\u4fbf\u5f15\u5165\u4e86Max\u503c\u548cMin\u503c\uff08\u6ce8\u610f\u5927\u5199\u9632\u6b62\u51b2\u7a81\uff09\uff0c\u4ee5\u8bb0\u5f55\u76ee\u6807\u72b6\u6001\u7684\u6700\u5927\u6700\u5c0f\u6570\uff0c\u5e76\u5728\u505aup\u548cdown\u65f6\u4e0e\u5c06\u4ea7\u751f\u7684\u6570\u6bd4\u8f83\uff0c\u5b9e\u73b0\u526a\u679d\u3002\n\n\u4e0a\u4ee3\u7801\u5427~\n\n```\n#include<iostream>\n#include<string.h>\nusing namespace std;\n\nstruct EVA\n{\t\t\t\t\t\t\t\t//a[]\u5b58\u72b6\u6001\uff0cdep\u5b58\u5230\u73b0\u5728\u6709\u51e0\u6b65\u64cd\u4f5c\uff1b\n    int a[7],dep,gb,pai;\t\t//gb\u5b58\u5149\u6807\u4f4d\u7f6e\uff0cpai\u662f\u6392\u5217\u72b6\u6001\uff1b\n    char last;\t\t\t\t //\u4e0a\u4e00\u6b65\u662f\u4ec0\u4e48\u64cd\u4f5c\uff1f\n};\n\nEVA pw[1999999],temp;\t\t//pw=password\uff0c\u5b58\u72b6\u6001\uff1b\nint gl,head,tail,rs;\t\t//gl=goal\uff0c\u76ee\u6807\u7684\u7f16\u53f7\uff1b\nint Max,Min;\t\t\t   //Max\u548cMin\u5373\u6211\u7684\u4e00\u4e2a\u526a\u679d\u3002\u8bb0\u5f97\u5927\u5199\u9632\u6b62\u51b2\u7a81\uff1b\nbool v[9999999],flag=0;   //\u9b54\u7406\u6c99\u4ece\u88d9\u5e95\u638f\u51fa\u4e86\u53c8\u9ed1\u53c8\u5927\u7684v\u6570\u7ec4\u6765\u5224\u91cd\uff01\uff01\n\nvoid swap0()\n{\n    if(pw[head].gb==1)\treturn;\t\t//\u57fa\u7840\u526a\u679d\uff1b\n    pw[tail]=pw[head];\n    int p=pw[tail].a[1];\n    pw[tail].a[1]=pw[tail].a[pw[tail].gb];\n    pw[tail].a[pw[tail].gb]=p;\n    pw[tail].dep++;\n    pw[tail].last='0';\n    int pai=0;\n    for(int i=1;i<=6;i++)\tpai=pai*10+pw[tail].a[i];\n    if(pai==gl)\n    {\n        rs=pw[tail].dep;\n        flag=1;\n    }\n    pw[tail].pai=pai*10+pw[tail].gb;\n    if(v[pw[tail].pai]!=1) tail++;\n    if(tail>1999990)\n    \ttail=0;\n    return;\n}\n\nvoid swap1()\n{\n    if(pw[head].gb==6)\treturn;\t\t//\u57fa\u7840\u526a\u679d*2\uff1b\n    pw[tail]=pw[head];\n    int p=pw[tail].a[6];\n    pw[tail].a[6]=pw[tail].a[pw[tail].gb];\n    pw[tail].a[pw[tail].gb]=p;\n    pw[tail].dep++;\n    pw[tail].last='1';\n    int pai=0;\n    for(int i=1;i<=6;i++)\tpai=pai*10+pw[tail].a[i];\n    if(pai==gl)\n    {\n        rs=pw[tail].dep;\n        flag=1;\n    }\n    pw[tail].pai=pai*10+pw[tail].gb;\n    if(v[pw[tail].pai]!=1) tail++;\n    if(tail>1999990)\n    \ttail=0;\n    return;\n}\n\nvoid up()\n{\n    if(pw[head].a[pw[head].gb]==9||pw[head].a[pw[head].gb]+1>Max)\treturn;\t\t//Max\u7684\u4f5c\u7528~\n    pw[tail]=pw[head];\n    pw[tail].a[pw[tail].gb]++;\n    pw[tail].dep++;\n    pw[tail].last='u';\n    int pai=0;\n    for(int i=1;i<=6;i++)\tpai=pai*10+pw[tail].a[i];\n    if(pai==gl)\n    {\n        rs=pw[tail].dep;\n        flag=1;\n    }\n    pw[tail].pai=pai*10+pw[tail].gb;\t\n    if(v[pw[tail].pai]!=1) tail++;\n    if(tail>1999990)\n    \ttail=0;\n    return;\n}\n\nvoid down()\n{\n    if(pw[head].a[pw[head].gb]==0||pw[head].a[pw[head].gb]-1<Min)\treturn;\t\t//Min\u7684\u4f5c\u7528~\n    pw[tail]=pw[head];\n    pw[tail].a[pw[tail].gb]--;\n    pw[tail].dep++;\n    pw[tail].last='d';\n    int pai=0;\n    for(int i=1;i<=6;i++)\tpai=pai*10+pw[tail].a[i];\n    if(pai==gl)\n    {\n        rs=pw[tail].dep;\n        flag=1;\n    }\n    pw[tail].pai=pai*10+pw[tail].gb;\n    if(v[pw[tail].pai]!=1) tail++;\n    if(tail>1999990)\n    \ttail=0;\n    return;\n}\n\nvoid left()\n{\n    if(pw[head].gb==1)\treturn;\n    pw[tail]=pw[head];\n    pw[tail].gb--;\n    pw[tail].dep++;\n    pw[tail].last='l';\n    pw[tail].pai-=1;\n    if(v[pw[tail].pai]!=1) tail++;\n    if(tail>1999990)\n    \ttail=0;\n    return;\n}\n\nvoid right()\n{\n    if(pw[head].gb==6)\treturn;\n    pw[tail]=pw[head];\n    pw[tail].gb++;\n    pw[tail].dep++;\n    pw[tail].last='r';\n    pw[tail].pai+=1;\n    if(v[pw[tail].pai]!=1) tail++;\n    if(tail>1999990)\n    \ttail=0;\n    return;\n}\n\nint main()\n{\n    Max=0;Min=99;\n    char xx;\n    for(int i=1;i<=6;i++)\n    {\n        cin>>xx;\n        pw[0].a[i]=int(xx)-'0';\n        if(Max<pw[0].a[i])\tMax=pw[0].a[i];\n        if(Min>pw[0].a[i])\tMin=pw[0].a[i];\n    }\n    pw[0].gb=1;\n    pw[0].last='N';\t\t//\u603b\u5f97\u8ba9\u5b83\u88c5\u70b9\u4ec0\u4e48\u624d\u80fd\u5f00\u59cb\u5427\uff1f\n    pw[0].dep=0;\n    gl=0;\n    for(int i=1;i<=6;i++)\n    {\n        cin>>xx;\n        temp.a[i]=int(xx)-'0';\n        if(Max<temp.a[i])\tMax=temp.a[i];\t\t//\u5b58Max\uff1b\n        if(Min>temp.a[i])\tMin=temp.a[i];\t\t//\u5b58Min\uff1b\n        gl=gl*10+temp.a[i];\t\t//\u5b58\u76ee\u6807\u72b6\u6001\uff1b\n    }\n    head=0;tail=1;\n    int pai=0;\n    for(int i=1;i<=6;i++)\tpai=pai*10+pw[head].a[i];\n    if(pai==gl)\n    {\n        rs=pw[head].dep;\n        flag=1;\n    }\n    pw[head].pai=pai*10+1;\n    while(head!=tail)\n    {\n    \tif(head>1999990)\n            head=0;\n        if(flag==1)\tbreak;\n        if(v[pw[head].pai]==1)\n        {\n            head++;\n            continue;\n        }\n        else\n        {\n            v[pw[head].pai]=1;\n            if(pw[head].last!='0')\tswap0();\t\t//\u8fd9\u4e9bif\u90fd\u662f\u57fa\u7840\u526a\u679d\uff1b\n            if(pw[head].last!='1')\tswap1();\n            if(pw[head].last!='d')\tup();\n            if(pw[head].last!='u')\tdown();\n            if(pw[head].last!='r')\tleft();\n            if(pw[head].last!='l')\tright();\n            if(flag==1)\tbreak;\n        }\n        head++;\n    }\n    cout<<rs;\n    return 0;\n}\n```\n\nemm\uff0c\u5e94\u8be5\u5c31\u662f\u8fd9\u4e9b\u4e86\u5427\uff01\u5176\u5b9e\u6211\u77e5\u9053\u6211\u8fd9\u4e9b\u5c0f\u4f0e\u4fe9\u65e9\u5c31\u88ab\u5927\u4f6c\u4eec\u770b\u7a7f\u7528\u70c2\u4e86\uff0c\u4f46\u662f\u8fd9\u4e9b\u90fd\u662f\u6211\u81ea\u5df1\u60f3\u51fa\u6765\u7684\u8fd8\u662f\u633a\u8f9b\u82e6\u7684\u3002\u597d\u5427\u8fd9\u9898\u5c31\u5230\u8fd9\u91cc\u5427\uff0c\u6536\u5de5\u5566\uff01\uff08~~\u6bd5\u7adf\u770b\u770b\u6709\u6ca1\u6709\u65b0\u95fb\u53ef\u505a\u624d\u662f\u9e26\u5929\u72d7\u7684\u6b63\u4e8b~~\uff09",
        "postTime": 1517748028,
        "uid": 44321,
        "name": "\u6e05\u6b63\u7f8e\u8bb0\u8005",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1949 \u3010\u806a\u660e\u7684\u6253\u5b57\u5458_NOI\u5bfc\u520a2011\u63d0\u9ad8\uff0810\uff09\u3011"
    },
    {
        "content": "\n## \u601d\u8def\n\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22 ( **BFS** )\n\n## \u5fc3\u8def\u5386\u7a0b\n\u8fd9\u4e2a\u9898\uff0c\u641e\u4e86\u6211\u5927\u69822\u4e2a\u5c0f\u65f6\uff08\u6211\u662f\u771f\u7684\u83dc\uff09\uff0c\u7ed9\u5927\u5bb6\u770b\u4e00\u5f20\u6211\u4ea4\u9898\u7684\u622a\u56fe\u5427\u3002  \n\n![](https://cdn.luogu.com.cn/upload/image_hosting/wul09etp.png?x-oss-process=image/resize,m_lfit,h_170,w_225)\n\n\u5168\u7a0b\u7684\u5fc3\u8def\u7acb\u573a\u5927\u6982\u5c31\u662f\n\n> \u8fd9\u4e0d\u5e94\u8be5\u5440\uff0c\u8fd9\u600e\u4e48\u4f1a\u5462\u3002\n\n> \u8fd9\u4e0d\u6b63\u5e38\u554a\uff0c\u8fd9\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u5e94\u8be5\u5440\u3002\n\n> \u600e\u4e48\u4f1a\u9519\u5462\uff0c\u600e\u4e48\u4f1a\u5462\uff1f\n\n\u6211\u7684\u5fc3\u60c5\u4ece\u6109\u60a6\u53d8\u6210\u4e86\u4e0d\u6109\u60a6\uff0c\u7136\u540e\u5fc3\u6001\u5f00\u59cb\u7206\u70b8\u3002\n\n## \u51e0\u4e2a\u63d0\u4ea4\u65b9\u6848\n### map + \u5b57\u7b26\u4e32\n\u6211\u7528\u5b57\u7b26\u4e32\u53bb\u5b58\u50a8\u6bcf\u4e00\u4e2a\u7b54\u6848\u7684\u60c5\u51b5\uff0c\u7136\u540e\u7528 map \u53bb\u5b58\u662f\u5426\u904d\u5386\u5230\u4e86\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n~~~cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<cstring>\n#include<map>\n#include<set>\nusing namespace std;\nconst int redu = 1e7;\nmap<string,bool>book;\nmap<string,bool>ans;\ninline string solve(string x,int w) {\n\tstring ret = x;\n\tint pos = ret[0] - '0';\n\tswitch(w){\n\t\tcase 1:swap(ret[1],ret[pos]);break;\n\t\tcase 2:swap(ret[6],ret[pos]);break;\n\t\tcase 3:ret[pos] += (ret[pos] != '9');break;\n\t\tcase 4:ret[pos] -= (ret[pos] != '0');break;\n\t\tcase 5:ret[0] -= (ret[0] != '1');break;\n\t\tcase 6:ret[0] += (ret[0] != '6');break;\n\t}\n\treturn ret;\n}\nstring a,b;\nint main() {\n\tcin >> a >> b;\n\ta = \"1\" + a;\n\tbook[a] = true;\n\tfor(int i = 1; i <= 6; i++) {\n\t\tchar tem = i + '0';\n\t\tans[tem + b] = true;\n\t}\n\tif(ans[a] == true) {\n\t\tcout << 0 << endl;\n\t\treturn 0;\n\t}\n\tqueue<pair<string,int> >Q;\n\tQ.push(make_pair(a,0));\n\twhile(!Q.empty()) {\n\t\tpair<string,int> u = Q.front();Q.pop();\n\t\tfor(int i = 1; i<= 6; i++) {\n\t\t\tstring tem = solve(u.first,i);\n\t\t\tif(book[tem] == true) continue;\n\t\t\telse if(ans[tem] == true) {\n\t\t\t\tcout << u.second + 1;\n\t\t\t\treturn 0;\n\t\t\t} else {\n\t\t\t\tbook[tem] = true;\n\t\t\t\tQ.push(make_pair(tem,u.second+1));\t\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n} \n~~~\n\u5f97\u5206\uff1a\u4e0d\u600e\u4e48\u6837\u3002\n\n### bool\u6570\u7ec4\u5b58\u8bb0\u5f55 + map\u5b58\u7b54\u6848 + stoi + to_string \u7684\u5b58\u50a8\u65b9\u5f0f\n\u7b2c\u4e8c\u6b21\u6211\u7528\u4e86 `c++11` \u4e2d\u5c31\u6709\u7684\u4e24\u4e2a\u51fd\u6570\uff0c\u5206\u522b\u662f `stoi` \uff0c\u8868\u793a `string` \u7c7b\u578b\u8f6c\u5316\u4e3a `int` \u7c7b\u578b\uff0c`to_string` \u8868\u793a\u4efb\u610f\u7c7b\u578b\u8f6c\u5316\u4e3a `string` \u7c7b\u578b\u3002\n\n~~\u8fd8\u86ee\u597d\u7528\u7684~~\u3002\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n~~~cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<cstring>\n#include<map>\n#include<set>\n#include<cctype>\nusing namespace std;\nconst int redu = 1e7;\nbool book[redu * 7];\nmap<int,bool>ans;\ninline int solve(int x,int w) {\n\tstring ret = to_string(x);\n\tint pos = ret[0] - '0';\n\tswitch(w){\n\t\tcase 1:swap(ret[1],ret[pos]);break;\n\t\tcase 2:swap(ret[6],ret[pos]);break;\n\t\tcase 3:ret[pos] += (ret[pos] != '9');break;\n\t\tcase 6:ret[pos] -= (ret[pos] != '0');break;\n\t\tcase 5:ret[0] -= (ret[0] != '1');break;\n\t\tcase 4:ret[0] += (ret[0] != '6');break;\n\t}\n\treturn stoi(ret);\n}\nstring a,b;\nint main() {\n\tcin >> a >> b;\n\ta = \"1\" + a;\n\tbook[stoi(a)] = true;\n\tfor(int i = 1; i <= 6; i++) {\n\t\tchar tem = i + '0';\n\t\tint d = stoi(tem + b);\n\t\tans[d] = true;\n\t}\n\tif(ans[stoi(a)]){\n\t\tcout << 0;\n\t\treturn 0;\n\t}\n\tqueue<pair<int,int> >Q;\n\tQ.push(make_pair(stoi(a),0));\n\twhile(!Q.empty()) {\n\t\tpair<int,int> u = Q.front();Q.pop();\n\t\tfor(int i = 1; i<= 6; i++) {\n\t\t\tint tem = solve(u.first,i);\n\t\t\tif(book[tem] == true) continue;\n\t\t\telse if(ans[tem] == true) {\n\t\t\t\tcout << u.second + 1;\n\t\t\t\treturn 0;\n\t\t\t} else {\n\t\t\t\tbook[tem] = true;\n\t\t\t\tQ.push(make_pair(tem,u.second+1));\t\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n} \n~~~\n\n\u7ed3\u679c\uff1a\u4e5f\u4e0d\u600e\u4e48\u6837\u3002\n\n\u4ece\u8fd9\u4e2a\u65f6\u5019\u5f00\u59cb\u6211\u7684\u5185\u5fc3\u5df2\u7ecf\u5f00\u59cb\u5954\u817e\u7f8a\u9a7c\u4e86\uff0c\u4f46\u662f\u6211\u672c\u7740\u4e00\u5b9a\u8981 ac \u7684\u6c14\u52bf\uff0c\u5c06\u5b57\u7b26\u4e32\u64cd\u4f5c\u53d8\u6210 `int` \u64cd\u4f5c\u3002\n\n\u4e8e\u662f\u5c31\u6709\u4e86\u4e0b\u9762\u7684\u4ee3\u7801\uff1a\n~~~cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<cstring>\n#include<map>\n#include<set>\n#include<cctype>\n#include<cmath>\nusing namespace std;\nconst int redu = 1e6;\nbool book[redu * 7];\nmap<int,bool>ans;\ninline int solve(int x,int w) {\n\tint ret = x;\n\tint pos = ret / redu;\n\t\n\tif(w == 1){int a = (ret / (redu / 10) ) % 10,b = (int)(ret / (redu / pow(10,pos))) % 10;ret -= a * (redu / 10) + (b * (redu / pow(10,pos)));ret += b * (redu / 10) + (a * (redu / pow(10,pos)));}\n\telse if(w == 2){int a = ret % 10,b = (int)(ret / (redu / pow(10,pos))) % 10;ret -= a + (b * (redu / pow(10,pos)));ret += b + (a * (redu / pow(10,pos)));}\n\telse if(w == 3){int a = (int)(ret / (redu / pow(10,pos))) % 10;if(a != 9)ret += redu / pow(10,pos);}\n\telse if(w == 4){int a = (int)(ret / (redu / pow(10,pos))) % 10;if(a != 0)ret -= redu / pow(10,pos);}\n\telse if(w == 5){if(pos != 1)ret -= redu;}\n\telse if(w == 6){if(pos != 6)ret += redu;}\n\t\n\treturn ret;\n}\nint a,b;\nint main() {\n\tcin >> a >> b;\n\ta += redu;\n\tbook[a] = true;\n\tfor(int i = 1; i <= 6; i++) {\n\t\tans[b + redu * i] = true;\n\t}\n\tif(ans[a]){\n\t\tcout << 0;\n\t\treturn 0;\n\t}\n\tqueue<pair<int,int> >Q;\n\tQ.push(make_pair(a,0));\n\twhile(!Q.empty()) {\n\t\tpair<int,int> u = Q.front();Q.pop();\n\t\tfor(int i = 1; i<= 6; i++) {\n\t\t\tint tem = solve(u.first,i);\n\t\t\tif(book[tem] == true) continue;\n\t\t\telse if(ans[tem] == true) {\n\t\t\t\tcout << u.second + 1;\n\t\t\t\treturn 0;\n\t\t\t} else {\n\t\t\t\tbook[tem] = true;\n\t\t\t\tQ.push(make_pair(tem,u.second+1));\t\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n} \n~~~\n\n\u672c\u4ee5\u4e3a\u52aa\u529b\u53ef\u4ee5\u53d8\u6210 ac \uff0c\u4f46\u662f\u73b0\u5b9e\u544a\u8bc9\u6211\u4e0d\u884c\u3002\n\n\u5f97\u5206\uff1a36 pts\n### \u5168\u90e8\u7528bool\u6570\u7ec4\u5b58\u72b6\u6001\n\u4e8e\u662f\u82e6\u601d\u51a5\u60f3\u4e4b\u540e\uff0c\u6211\u5c06 ans \u7684\u8bb0\u5f55\u4ece map \u53d8\u6210\u4e86 bool\uff0c\u7136\u540e\u6211\u5c31 a \u4e86\uff1f\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n~~~cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<cstring>\n#include<map>\n#include<set>\n#include<cctype>\n#include<cmath>\nusing namespace std;\nconst int redu = 1e6;\nconst int lis[]={1000000,100000,10000,1000,100,10,1};\nbool book[redu * 7];\nbool ans[redu * 7];\ninline int solve(int x,int w) {\n\tint ret = x;\n\tint pos = ret / redu;\n\tif(w == 1){int a = (ret / lis[1] ) % 10,b = (ret / lis[pos]) % 10;ret -= a * lis[1] + b * lis[pos];ret += b * lis[1] + a * lis[pos];}\n\telse if(w == 2){int a = ret % 10,b = (ret / lis[pos]) % 10;ret -= a + (b * lis[pos]);ret += b + (a * lis[pos]);}\n\telse if(w == 3){int a = (int)(ret / lis[pos]) % 10;if(a != 9)ret += lis[pos];}\n\telse if(w == 4){int a = (int)(ret / lis[pos]) % 10;if(a != 0)ret -= lis[pos];}\n\telse if(w == 5){if(pos != 1)ret -= redu;}\n\telse if(w == 6){if(pos != 6)ret += redu;}\n\treturn ret;\n}\nint a,b;\nint main() {\n\tcin >> a >> b;\n\ta += redu;\n\tbook[a] = true;\n\tfor(int i = 1; i <= 6; i++) {\n\t\tans[b + redu * i] = true;\n\t}\n\tif(ans[a]){\n\t\tcout << 0;\n\t\treturn 0;\n\t}\n\tqueue<pair<int,int> >Q;\n\tQ.push(make_pair(a,0));\n\twhile(!Q.empty()) {\n\t\tpair<int,int> u = Q.front();Q.pop();\n\t\tfor(int i = 1; i<= 6; i++) {\n\t\t\tint tem = solve(u.first,i);\n\t\t\tif(book[tem] == true) continue;\n\t\t\telse if(ans[tem] == true) {\n\t\t\t\tcout << u.second + 1;\n\t\t\t\treturn 0;\n\t\t\t} else {\n\t\t\t\tbook[tem] = true;\n\t\t\t\tQ.push(make_pair(tem,u.second+1));\t\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n} \n~~~\n\n## \u7ed3\u8bed\n\u5e0c\u671b\u5927\u5bb6\u4ee5\u540e\u80fd\u5c11\u7528 stl \u5c31\u5c11\u7528 stl \uff0c\u8fd9\u73a9\u610f\u5bb9\u6613\u4e0a\u763e\u3002",
        "postTime": 1612522902,
        "uid": 366935,
        "name": "KAMIYA_KINA",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1949 \u3010[NOI2001] \u806a\u660e\u7684\u6253\u5b57\u5458\u3011"
    },
    {
        "content": "\u521a\u5f00\u59cb\u505a\u7684\u65f6\u5019\u624d\u7528\u666e\u901a\u7684\u5bbd\u641c\uff0c\u4ec5\u4ec5\u52a0\u4e86\u4e00\u4e2a\u5224\u91cd\u7684\u4f18\u5316\uff0c\u7ecf\u8fc7\u4e00\u4e9b\u5217\u7ec6\u8282\u6539\u6b63\u540e\uff0c\n\n\u679c\u65ad\u8d85\u65f6\u3002\u3002\u3002\n\n\u540e\u6765\uff0c\u60f3\u51fa\u4e00\u79cd\u4e86\u7ecf\u8fc7\u5927\u5e45\u5ea6\u4f18\u5316\u8fc7\u7684bfs\uff0c\u5148\u6a21\u62df\u51fa\u6240\u6709\u7684\u72b6\u6001\n\n\uff08\u8fd9\u4e2a\u72b6\u6001\u53ea\u5305\u62ec\u6bcf\u4e00\u4f4d\u7684\u4f4d\u7f6e\uff0c\u4e0d\u7ba1\u5927\u5c0f\uff09\uff0c\u56e0\u6b64\uff0c\u6bcf\u4e2a\u72b6\u6001\u9700\u8981\u8bb0\u5f55\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u5750\u6807\uff08s\u6570\u7ec4)\uff0c\n\n\u7ecf\u8fc7\u4e86\u54ea\u4e9b\u4f4d\u7f6e\uff08size\uff09\uff0c\u5f53\u524d\u4f4d\u7f6e\uff08cur\uff09\uff0c\u5230\u8fbe\u6b64\u72b6\u6001\u9700\u8981\u7684\u6b65\u6570\uff08sum\uff09\n\n\u5176\u4e2d\uff0cs\u6570\u7ec4\u53ea\u9700\u8981\u5c06012345\u8fd9\u4e9b\u4ee3\u8868\u4e0b\u6807\u7684\u6570\u8fdb\u884c\u53d8\u6362\uff0csize\u670910\u79cd\u60c5\u51b5\uff0c\u5bf9\u5e94\u4e8esign\u6570\u7ec4\u7684\u9884\n\n\u5904\u7406\u4e2d\u7684\u6570\uff0c\u8fd9\u4e2a\u9700\u8981\u4ed4\u7ec6\u53bb\u4f53\u4f1a\u4e0e\u9a8c\u7b97\uff0c\u6211\u5f53\u521d\u5c31\u662f\u60f3\u4e86\u5f88\u4e45\u3002\n\n\u7136\u540e\u5c31\u662f\u5229\u7528\u961f\u5217\u548cvis\u5224\u91cd\u901a\u8fc7\u90a3\u56db\u79cd\u53ea\u6539\u53d8\u4e0b\u6807\u7684\u65b9\u5f0f\u8f6c\u6362\u72b6\u6001\uff0c\u7528ans\u8bb0\u4e0b\u53ef\u884c\u72b6\u6001\u3002\n\n\u63a5\u4e0b\u6765\uff0c\u5728main\u51fd\u6570\u4e2d\uff0c\u5c06\u6bcf\u4e00\u79cd\u72b6\u6001\u8f6c\u53d8\u6210\u5b9e\u6570\u4e0e\u6700\u7ec8\u76ee\u7684\u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u6bcf\u4e00\u4f4d\u90fd\u76f8\u7b49\u6216\u8005\u7ecf\u8fc7\u8be5\u4e0b\u6807\n\n\u5219\u662f\u53ef\u884c\u65b9\u6848\uff0c\u5229\u7528ans[i][7]\u548cabs[b[j]-a[ans[i][j]]]\u6c42\u51fastep\u7684\u5927\u5c0f\uff0c\u5e76\u8fdb\u884c\u6bd4\u8f83\uff0c\u628a\u6700\u5c0f\u503c\u7ed9min\uff0c\n\n\u6700\u540e\u8f93\u51famin\u5c31\u884c\u4e86\u3002\n\n\u6709\u4e9b\u4eba\u8ba4\u4e3a\u4e0d\u9700\u8981\u8003\u8651\u5de6\u79fb\u7684\u60c5\u51b5\uff0c\u8fd9\u79cd\u60f3\u6cd5\u6709\u95ee\u9898\uff0c000159 \u548c 000519 \u5c31\u662f\u4e00\u7279\u4f8b\uff0c\u8fd9\u91cc\u5df2\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff01\uff01\uff01\n\n\n```cpp\n#include <cstdio>\n#include <string>\n#include <queue>\n#include <cstdlib>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nbool vis[6][6][6][6][6][6][6][10]={0};\nstruct node\n{\n    int s[6];\n    int size,num,cur;\n};\nint total=0,ans[9000][8];\nvoid bfs()\n{\n    node now;\n    for (int i=0;i<6;i++)\n        now.s[i]=i;\n    now.size=0;now.cur=0;now.num=0;\n    vis[now.s[0]][now.s[1]][now.s[2]][now.s[3]][now.s[4]][now.s[5]][now.cur][now.size]=1;\n    queue<node>que;\n    que.push(now);\n    while(!que.empty())\n    {\n        now=que.front();\n        que.pop();\n        for (int i=0;i<6;i++)\n            ans[total][i]=now.s[i];\n        ans[total][6]=now.size;\n        ans[total][7]=now.num;\n        total++;\n        now.num++;\n        if (now.cur>0)//\u63620\uff0c\u5de6\u79fb \n        {\n            swap(now.s[0],now.s[now.cur]);\n            if (!vis[now.s[0]][now.s[1]][now.s[2]][now.s[3]][now.s[4]][now.s[5]][now.cur][now.size])\n            {\n                vis[now.s[0]][now.s[1]][now.s[2]][now.s[3]][now.s[4]][now.s[5]][now.cur][now.size]=1;\n                que.push(now);\n            }\n            swap(now.s[0],now.s[now.cur]);\n            now.cur--;\n            if (!vis[now.s[0]][now.s[1]][now.s[2]][now.s[3]][now.s[4]][now.s[5]][now.cur][now.size])\n            {\n                vis[now.s[0]][now.s[1]][now.s[2]][now.s[3]][now.s[4]][now.s[5]][now.cur][now.size]=1;\n                que.push(now);\n            }\n            now.cur++;\n        }\n        if (now.cur<5)//\u63625\uff0c\u53f3\u79fb\n        {\n            int length=now.size;\n            now.cur++;\n            if (now.cur>now.size||(now.cur>now.size-6 && now.size>5))\n            {\n                if (now.size==9) \n                    now.size=5;\n                else\n                    now.size++;\n            }\n            if (!vis[now.s[0]][now.s[1]][now.s[2]][now.s[3]][now.s[4]][now.s[5]][now.cur][now.size])\n            {\n                vis[now.s[0]][now.s[1]][now.s[2]][now.s[3]][now.s[4]][now.s[5]][now.cur][now.size]=1;\n                que.push(now);\n            }\n            now.cur--;\n            now.size=length;\n            if (now.size<4) now.size+=6;\n            swap(now.s[now.cur],now.s[5]);\n            if (!vis[now.s[0]][now.s[1]][now.s[2]][now.s[3]][now.s[4]][now.s[5]][now.cur][now.size])\n            {\n                vis[now.s[0]][now.s[1]][now.s[2]][now.s[3]][now.s[4]][now.s[5]][now.cur][now.size]=1;\n                que.push(now);\n            }\n        } \n    }\n}\nmain()\n{\n    int a[6],b[6],step;\n    int min=0x3f3f3f3f;\n    string s1,s2;\n    bfs();\n    cin>>s1>>s2;\n    for (int i=0;i<6;i++)\n    {\n        a[i]=s1[i]-'0';\n        b[i]=s2[i]-'0';\n    }\nint sign[10][6]={{1,0,0,0,0,0},  \n                 {1,1,0,0,0,0},  \n                 {1,1,1,0,0,0},  \n                 {1,1,1,1,0,0},  \n                 {1,1,1,1,1,0},  \n                 {1,1,1,1,1,1},  \n                 {1,0,0,0,0,1},  \n                 {1,1,0,0,0,1},  \n                 {1,1,1,0,0,1},  \n                 {1,1,1,1,0,1}  \n                 }; \n    for (int i=0;i<total;i++)\n    {\n        step=ans[i][7];\n        int j;\n        for (j=0;j<6;j++)  \n            if (b[j]!=a[ans[i][j]]&&!sign[ans[i][6]][j]) \n                break;  \n            else \n                step+=abs(b[j]-a[ans[i][j]]); \n        if ((min>step)&&j==6)  \n            min=step;\n    }\n    printf(\"%d\",min);\n}\n```",
        "postTime": 1478955900,
        "uid": 17689,
        "name": "\u8fdc\u822a\u4e4b\u66f2",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1949 \u3010\u806a\u660e\u7684\u6253\u5b57\u5458_NOI\u5bfc\u520a2011\u63d0\u9ad8\uff0810\uff09\u3011"
    },
    {
        "content": "\u8001\u5e08\u8bf4\u8fd9\u9053\u9898\u76f4\u63a5\u641c\u4f1aTLE\u7684\uff0c\u6211\u5192\u7740\u98ce\u9669\u8bd5\u4e86\u8bd5\uff0c\u5c45\u7136A\u4e86(\u5176\u5b9e\u662f\u6709\u4f18\u5316\u5566)\n\n\u4f18\u5316\u4e0d\u4f1a\u592a\u96be\uff0c\u8bf7\u653e\u5fc3\u98df\u7528\uff0c~~\u53ea\u662f\u6570\u4f4d\u7684\u8f6c\u6362\u53ef\u80fd\u6709\u4f1a\u6655\u7729\u6548\u679c~~\n\n\u4e3b\u8981\u601d\u8def:\u7528int\u578b\u5b58\u50a8\u72b6\u6001\uff0c\u72b6\u6001\u6709\u5bc6\u7801\u503c\u548c\u5149\u6807\u4f4d\u7f6e\u4e24\u4e2a\u53c2\u6570\uff0c\u518d\u7528bool\u6570\u7ec4\u5224\u91cd\n\n\u7f3a\u70b9\uff1a\u6570\u4f4d\u4ea4\u6362\u7684\u4ee3\u7801\u5199\u5f97\u6211\u8981\u70b8\uff0c~~\u7528\u6570\u7ec4\u7684\u8bdd\u76f4\u63a5swap\u5c31\u5b8c\u4e8b\u4e86~~\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nstruct node{\n\tint num,line,step;\n};\nbool c[1000000][7];\nqueue<node> q;\nint a,b;\nint main(){\n\tcin>>a>>b;\n\tnode dw;\n\tdw.num=a;\n\tdw.line=1;\n\tdw.step=0;\n\tq.push(dw);\n\tc[dw.num][dw.line]=1;\n\twhile (!q.empty()){\n\t\tnode d=q.front();\n\t\tq.pop();\n\t\tif (d.num==b){\n\t\t\tcout<<d.step;\n\t\t\treturn 0;\n\t\t}\n\t\td.step++;\n\t\tnode r;\n\t\tif (d.line>1){\n\t\t\tr=d;\n\t\t\tr.line--;//\u5149\u6807\u5de6\u62c9\n\t\t\tif (!c[r.num][r.line]){\n\t\t\t\tq.push(r);\n\t\t\t\tc[r.num][r.line]=1;\n\t\t\t}\n\t\t\tr.line++;\n\t\t\tint gao=r.num/100000;\n\t\t\tint wei=1;\n\t\t\tfor (int i=1;i<=6-r.line;i++)\n\t\t\t\twei*=10;\n\t\t\tint di=r.num/wei%10;\n\t\t\tr.num%=100000;\n\t\t\tr.num+=100000*di;\n\t\t\tr.num=r.num-di*wei+gao*wei;//1\u548c\u5f53\u524d\u4f4d\u4ea4\u6362\n\t\t\tif (!c[r.num][r.line]){\n\t\t\t\tq.push(r);\n\t\t\t\tc[r.num][r.line]=1;\n\t\t\t}\n\t\t}\n\t\tif (d.line<6){\n\t\t\tr=d;\n\t\t\tr.line++;//\u5149\u6807\u53f3\u62c9\n\t\t\tif (!c[r.num][r.line]){\n\t\t\t\tq.push(r);\n\t\t\t\tc[r.num][r.line]=1;\n\t\t\t}\n\t\t\tr.line--;\n\t\t\tint di=r.num%10;\n\t\t\tint wei=1;\n\t\t\tfor (int i=1;i<=6-r.line;i++)\n\t\t\t\twei*=10;\n\t\t\tint gao=r.num/wei%10;\n\t\t\tr.num=r.num-di+gao;\n\t\t\tr.num=r.num-gao*wei+di*wei;//6\u548c\u5f53\u524d\u4f4d\u4ea4\u6362\n\t\t\tif (!c[r.num][r.line]){\n\t\t\t\tq.push(r);\n\t\t\t\tc[r.num][r.line]=1;\n\t\t\t}\n\t\t}\n\t\tr=d;\n\t\tint wei=1;\n\t\tfor (int i=1;i<=6-r.line;i++)\n\t\t\twei*=10;\n\t\tif (r.num/wei%10<9){\n\t\t\tr.num+=wei;//\u5f53\u524d\u4f4d\u52a01\n\t\t\tif (!c[r.num][r.line]){\n\t\t\t\tq.push(r);\n\t\t\t\tc[r.num][r.line]=1;\n\t\t\t}\n\t\t\tr.num-=wei;\n\t\t}\n\t\tif (r.num/wei%10>0){\n\t\t\tr.num-=wei;//\u5f53\u524d\u4f4d\u51cf1\n\t\t\tif (!c[r.num][r.line]){\n\t\t\t\tq.push(r);\n\t\t\t\tc[r.num][r.line]=1;\n\t\t\t}\n\t\t\tr.num+=wei;\n\t\t}\n\t}\n} \n```\n\n\u5199\u8fd9\u79cd\u4ee3\u7801\u7684\u611f\u89c9\u8ddf\u5728\u753b\u51e0\u6761\u8f85\u52a9\u7ebf\u540e\u627e\u5168\u7b49\u4e09\u89d2\u5f62\u7684\u611f\u89c9\u662f\u4e00\u6837\u7684",
        "postTime": 1584194211,
        "uid": 94018,
        "name": "\u52a8\u6001WA",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1949 \u3010[NOI2001]\u806a\u660e\u7684\u6253\u5b57\u5458\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u662f\u771f\u7684\u6076\u5fc3\u3002\u4ea4\u4e867\u904d\u624d\u8fc7\u3002 \n\n\u9996\u5148\uff0c\u62ff\u5230\u8fd9\u4e2a\u9898\uff0c\u4e00\u770b\u5c31\u662fbfs,\u4f46\u666e\u901a\u7684bfs\u4f1a\u8d85\u65f6\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u5c31\u6765\u4e71\u641e\u4e00\u4e0b\uff0c\u7528\u53cc\u5411bfs+8\u7ef4\u6570\u7ec4\u66b4\u529b\u5224\u91cd\u3002\n\n\u76f4\u63a5\u4e0a\u4ee3\u7801\uff0c\u4ee3\u7801\u91cc\u6709\u6ce8\u91ca\u3002\n\n```cpp\n#include <queue>\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint vis[2][10][10][10][10][10][10][6], ans;\nstruct node {\n    char mima[7];//\u7528\u5b57\u7b26\u6570\u7ec4\u8bb0\u5f55\u5bc6\u7801 \n    int bs;//\u6b65\u6570  \n    bool f;//\u8bb0\u5f55\u6b63\u5411\u72b6\u6001\u8fd8\u662f\u53cd\u5411\u72b6\u6001\uff0c0\u4e3a\u6b63\u5411\uff0c1\u4e3a\u53cd\u5411 \n    int gb;//\u8bb0\u5f55\u5149\u6807\u4f4d\u7f6e \n};\n//pd\u51fd\u6570\uff0c\u5224\u65ad\u76f8\u53cd\u72b6\u6001\u4e2d\u662f\u5426\u7531\u6b64\u72b6\u6001 \nbool pd(node l) {\n    int a = l.mima[0] - 48, b = l.mima[1] - 48, c = l.mima[2] - 48, d = l.mima[3] - 48, e = l.mima[4] - 48,\n        f = l.mima[5] - 48;\n    if (vis[!l.f][a][b][c][d][e][f][l.gb - 1])\n        return 1;\n    return 0;\n}\n//pd1\u51fd\u6570\uff0c\u5224\u91cd\u51fd\u6570 \nbool pd1(node l) {\n    int a = l.mima[0] - 48, b = l.mima[1] - 48, c = l.mima[2] - 48, d = l.mima[3] - 48, e = l.mima[4] - 48,\n        f = l.mima[5] - 48;\n    if (vis[l.f][a][b][c][d][e][f][l.gb - 1])\n        return 1;\n    return 0;\n}\n//Pd\u51fd\u6570\uff0c\u8fd4\u56de\u76f8\u53cd\u72b6\u6001\u7684\u6b65\u6570 \nint Pd(node l) {\n    int a = l.mima[0] - 48, b = l.mima[1] - 48, c = l.mima[2] - 48, d = l.mima[3] - 48, e = l.mima[4] - 48,\n        f = l.mima[5] - 48;\n    return vis[!l.f][a][b][c][d][e][f][l.gb - 1];\n}\n//jl\u51fd\u6570 \uff0c\u8bb0\u5f55\u8fd9\u4e2a\u72b6\u6001\u7684\u6b65\u6570 \nvoid jl(node l) {\n    int a = l.mima[0] - 48, b = l.mima[1] - 48, c = l.mima[2] - 48, d = l.mima[3] - 48, e = l.mima[4] - 48,\n        f = l.mima[5] - 48;\n    vis[l.f][a][b][c][d][e][f][l.gb - 1] = l.bs;\n}\n//check\u51fd\u6570\uff0c\u4f60\u5c31\u5f53\u5b83\u662f\u4e2a\u9884\u4f30\u51fd\u6570\u5c31\u597d\u4e86\u3002 \nvoid check(node x, node y) { \n\t//\u6700\u574f\u60c5\u51b5\u5c31\u662f\u79fb\u52a85\u6b21\u5149\u6807\uff0c\u76f4\u63a5\u52a0\u51cf\u3002 \n    int a = x.mima[0] - 48, b = x.mima[1] - 48, c = x.mima[2] - 48, d = x.mima[3] - 48, e = x.mima[4] - 48,\n        f = x.mima[5] - 48;\n    int A = y.mima[0] - 48, B = y.mima[1] - 48, C = y.mima[2] - 48, D = y.mima[3] - 48, E = y.mima[4] - 48,\n        F = y.mima[5] - 48;\n    ans = abs(a - A) + abs(b - B) + abs(c - C) + abs(d - D) + abs(e - E) + abs(f - F) + 5;\n}\nqueue<node> que;\nint BFS(node a, node b) {\n    a.gb = 1, a.f = 0, b.f = 1, b.bs = 0, a.bs = 0;\n    que.push(a);\n    jl(a);\n    for (int i = 1; i <= 6; i++) {\n    \t//\u6700\u7ec8\u72b6\u6001\uff0c6\u4e2a\u5149\u6807\u4f4d\u7f6e\u3002 \n        b.gb = i;\n        jl(b);\n        que.push(b);\n    }\n    while (!que.empty()) {\n        node h = que.front();\n        que.pop();\n        //\u56e0\u4e3a\u662f\u53cc\u5411bfs\uff0c\u6240\u4ee5\u6bcf\u4e2a\u72b6\u6001\u7684\u6b65\u6570\u90fd\u5c0f\u4e8e\u7b49\u4e8eans/2\uff1b \n        if (h.bs > ans / 2)\n            continue;\n        //\u5982\u679c\u5df2\u7ecf\u5728\u76f8\u53cd\u72b6\u6001\u4e2d\u51fa\u73b0\u6b64\u72b6\u6001\u3002 \n        if (pd(h)) {\n        \t//\u76f4\u63a5\u8fd4\u56de\u6b63\u5411\u72b6\u6001\u7684\u6b65\u6570+\u53cd\u5411\u72b6\u6001\u7684\u6b65\u6570 \n            return Pd(h) + h.bs;\n        }\n        //6\u79cd\u65b9\u5411\u5206\u522b\u641c\n\t\t//\u4f46\u8bf7\u6ce8\u610f\uff0c\u4e0d\u8981\u7528for(int i=1;i<=6;i++)\u62536\u79cd\u60c5\u51b5\uff0c\u8981\u5206\u5f00\u6253\uff0c\u5426\u5219\u4f1aTLE......\uff0c\u771f\u7384\u5b66\uff01\n        //swap0 \n        node k = h;\n        k.bs += 1;\n        swap(k.mima[0], k.mima[k.gb - 1]);\n        if (!pd1(k)) {\n            jl(k);\n            que.push(k);\n        }\n        if (pd(k)) {\n            return Pd(k) + k.bs;\n        }\n        //swap1\n        k = h;\n        k.bs += 1;\n        swap(k.mima[5], k.mima[k.gb - 1]);\n        if (!pd1(k)) {\n            jl(k);\n            que.push(k);\n        }\n        if (pd(k)) {\n            return Pd(k) + k.bs;\n        }\n        //up\n        k = h;\n        k.bs += 1;\n        int G = k.mima[k.gb - 1] - 48;\n        if (G != 9)\n            G++;\n        k.mima[k.gb - 1] = G + 48;\n        if (!pd1(k)) {\n            jl(k);\n            que.push(k);\n        }\n        if (pd(k)) {\n            return Pd(k) + k.bs;\n        }\n        //down\n        k = h;\n        k.bs += 1;\n        int g = k.mima[k.gb - 1] - 48;\n        if (g != 0)\n            g--;\n        k.mima[k.gb - 1] = g + 48;\n        if (!pd1(k)) {\n            jl(k);\n            que.push(k);\n        }\n        if (pd(k)) {\n            return Pd(k) + k.bs;\n        }\n        //left\n        k = h;\n        k.bs += 1;\n        if (k.gb > 1)\n            k.gb--;\n        if (!pd1(k)) {\n            jl(k);\n            que.push(k);\n        }\n        if (pd(k)) {\n            return Pd(k) + k.bs;\n        }\n        //right\n        k = h;\n        k.bs += 1;\n        if (k.gb < 6)\n            k.gb++;\n        if (!pd1(k)) {\n            jl(k);\n            que.push(k);\n        }\n        if (pd(k)) {\n            return Pd(k) + k.bs;\n        }\n    }\n}\nint main() {\n    node a, b;\n    scanf(\"%s\", &a.mima);\n    scanf(\"%s\", &b.mima);\n    int flag = 0;\n    for (int i = 0; i <= 5; i++) {\n        if (a.mima[i] != b.mima[i]) {\n            flag = 1;\n            break;\n        }\n    }\n    //\u9884\u5904\u74060\u6b65\u7684\u60c5\u51b5\uff0c\u5426\u5219\u4f1aWA\u3002 \n    if (flag == 0) {\n        printf(\"0\");\n        return 0;\n    }\n    check(a, b);//\u9884\u5904\u7406 \n    printf(\"%d\", BFS(a, b));\n    return 0;\n}\n\u6700\u540e\u63d0\u9192\u4e00\u4e0b,\u8981\u5f00O2\u4f18\u5316\u54e6\uff01\u4e0d\u7136\u4f60\u4f1a\u88ab\u8bc4\u6d4b\u673a\u5361\u6b7b\u7684......\n```\n~~~~\u6ed1\u7a3d~~~~\n\n",
        "postTime": 1558233771,
        "uid": 154560,
        "name": "Silver187",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1949 \u3010\u806a\u660e\u7684\u6253\u5b57\u5458_NOI\u5bfc\u520a2011\u63d0\u9ad8\uff0810\uff09\u3011"
    },
    {
        "content": "### \u9898\u76ee\u63cf\u8ff0\n\u963f\u5170\u662f\u67d0\u673a\u5bc6\u90e8\u95e8\u7684\u6253\u5b57\u5458\uff0c\u5979\u73b0\u5728\u63a5\u5230\u4e00\u4e2a\u4efb\u52a1\uff1a\u9700\u8981\u5728\u4e00\u5929\u4e4b\u5185\u8f93\u5165\u51e0\u767e\u4e2a\u957f\u5ea6\u56fa\u5b9a\u4e3a6\u7684\u5bc6\u7801\u3002\u5f53\u7136\uff0c\u5979\u5e0c\u671b\u8f93\u5165\u7684\u8fc7\u7a0b\u4e2d\u6572\u51fb\u952e\u76d8\u7684\u603b\u6b21\u6570\u8d8a\u5c11\u8d8a\u597d\u3002\n\n\u4e0d\u5e78\u7684\u662f\uff0c\u51fa\u4e8e\u4fdd\u5bc6\u7684\u9700\u8981\uff0c\u8be5\u90e8\u95e8\u7528\u4e8e\u8f93\u5165\u5bc6\u7801\u7684\u952e\u76d8\u662f\u7279\u6b8a\u8bbe\u8ba1\u7684\uff0c\u952e\u76d8\u4e0a\u6ca1\u6709\u6570\u5b57\u952e\uff0c\u800c\u53ea\u6709\u4ee5\u4e0b\u516d\u4e2a\u952e\uff1aswap0,swap1,up,down,left,right\u3002\u4e3a\u4e86\u8bf4\u660e\u8fd96\u4e2a\u952e\u7684\u4f5c\u7528\uff0c\u6211\u4eec\u5148\u5b9a\u4e49\u5f55\u5165\u533a\u76846\u4e2a\u4f4d\u7f6e\u7684\u7f16\u53f7\uff0c\u4ece\u5de6\u81f3\u53f3\u4f9d\u6b21\u4e3a1,2,3,4,5,6\u3002\u4e0b\u9762\u5217\u51fa\u6bcf\u4e2a\u952e\u7684\u4f5c\u7528\uff1a\n\nswap0\uff1a\u6309swap0\uff0c\u5149\u6807\u4f4d\u7f6e\u4e0d\u53d8\uff0c\u5c06\u5149\u6807\u6240\u5728\u7684\u4f4d\u7f6e\u7684\u6570\u5b57\u4e0e\u5f55\u5165\u533a\u76841\u53f7\u4f4d\u7f6e\u7684\u6570\u5b57(\u5de6\u8d77\u7b2c\u4e00\u4e2a\u6570\u5b57)\u4ea4\u6362\u3002\u5982\u679c\u5149\u6807\u5df2\u7ecf\u5904\u5728\u5f55\u5165\u533a\u76841\u53f7\u4f4d\u7f6e\uff0c\u5219\u6309swap0\u952e\u4e4b\u540e\u5f55\u5165\u533a\u7684\u6570\u5b57\u4e0d\u53d8\u3002\n\nswap1\uff1a\u6309swap1\uff0c\u5149\u6807\u4f4d\u7f6e\u4e0d\u53d8\uff0c\u5c06\u5149\u6807\u6240\u5728\u4f4d\u7f6e\u7684\u6570\u5b57\u4e0e\u5f55\u5165\u533a\u76846\u53f7\u4f4d\u7f6e\u7684\u6570\u5b57\uff08\u5de6\u8d77\u7b2c\u516d\u4e2a\u6570\u5b57\uff09\u4ea4\u6362\u3002\u5982\u679c\u5149\u6807\u5df2\u7ecf\u5904\u5728\u5f55\u5165\u533a\u76846\u53f7\u4f4d\u7f6e\uff0c\u5219\u6309swap1\u952e\u4e4b\u540e\u5f55\u5165\u533a\u7684\u6570\u5b57\u4e0d\u53d8\u3002\n\nup\uff1a\u6309up\uff0c\u5149\u6807\u4f4d\u7f6e\u4e0d\u53d8\uff0c\u8bb2\u5149\u6807\u6240\u5728\u4f4d\u7f6e\u7684\u6570\u5b57\u52a01\uff08\u9664\u975e\u8be5\u6570\u5b57\u662f9\uff09\u3002\u4f8b\u5982\uff0c\u5982\u679c\u5149\u6807\u6240\u5728\u4f4d\u7f6e\u7684\u6570\u5b57\u4e3a2\uff0c\u6309up\u4e4b\u540e\uff0c\u8be5\u5904\u7684\u6570\u5b57\u53d8\u4e3a3\uff1b\u5982\u679c\u5149\u6807\u6240\u5728\u4f4d\u7f6e\u7684\u6570\u5b57\u4e3a9\uff0c\u6309up\u4e4b\u540e\uff0c\u8be5\u5904\u7684\u6570\u5b57\u4e0d\u53d8\uff0c\u5149\u6807\u4f4d\u7f6e\u4e5f\u4e0d\u53d8\uff1b\n\ndown\uff1a\u6309down\uff0c\u5149\u6807\u4f4d\u7f6e\u4e0d\u53d8\uff0c\u8bb2\u5149\u6807\u6240\u5728\u4f4d\u7f6e\u7684\u6570\u5b57\u51cf1\uff08\u9664\u975e\u8be5\u6570\u5b57\u662f0\uff09\u3002\u5982\u679c\u5149\u6807\u6240\u5728\u4f4d\u7f6e\u7684\u6570\u5b57\u4e3a0\uff0c\u6309down\u4e4b\u540e\uff0c\u8be5\u5904\u7684\u6570\u5b57\u4e0d\u53d8\uff0c\u5149\u6807\u4f4d\u7f6e\u4e5f\u4e0d\u53d8\uff1b\n\nleft\uff1a\u6309left\uff0c\u5149\u6807\u5de6\u79fb\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5982\u679c\u5149\u6807\u5df2\u5728\u5f55\u5165\u533a\u76841\u53f7\u4f4d\u7f6e\uff08\u5de6\u8d77\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\uff09\u4e0a\uff0c\u5219\u5149\u6807\u4e0d\u52a8\uff1b\n\nright\uff1a\u6309right\uff0c\u5149\u6807\u53f3\u79fb\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5982\u679c\u5149\u6807\u5df2\u5728\u5f55\u5165\u533a\u76846\u53f7\u4f4d\u7f6e\uff08\u5de6\u8d77\u7b2c\u516d\u4e2a\u4f4d\u7f6e\uff09\u4e0a\uff0c\u5219\u5149\u6807\u4e0d\u52a8\uff1b\n\n\u5f53\u7136\uff0c\u4e3a\u4e86\u4f7f\u8fd9\u6837\u7684\u952e\u76d8\u53d1\u6325\u4f5c\u7528\uff0c\u6bcf\u6b21\u5f55\u5165\u5bc6\u7801\u4e4b\u524d\uff0c\u5f55\u5165\u533a\u603b\u4f1a\u968f\u673a\u51fa\u73b0\u4e00\u4e2a\u957f\u5ea6\u4e3a6\u7684\u521d\u59cb\u5bc6\u7801\uff0c\u800c\u4e14\u5149\u6807\u4f1a\u56fa\u5b9a\u51fa\u73b0\u57281\u53f7\u4f4d\u7f6e\u4e0a\u3002\u5f53\u5de7\u5999\u7684\u4f7f\u7528\u4e0a\u8ff0\u516d\u4e2a\u7279\u6b8a\u952e\u4e4b\u540e\uff0c\u53ef\u4ee5\u5f97\u5230\u76ee\u6807\u5bc6\u7801\uff0c\u8fd9\u65f6\u5149\u6807\u5141\u8bb8\u505c\u7559\u5728\u4efb\u4f55\u4e00\u4e2a\u4f4d\u7f6e\u3002\n\n\u73b0\u5728\uff0c\u963f\u5170\u9700\u8981\u4f60\u7684\u5e2e\u52a9\uff0c\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u6c42\u51fa\u5f55\u5165\u4e00\u4e2a\u5bc6\u7801\u9700\u8981\u7684\u6700\u5c11\u7684\u51fb\u952e\u6b21\u6570\u3002\n\n### \u8f93\u5165\u8f93\u51fa\u683c\u5f0f\n#### \u8f93\u5165\u683c\u5f0f\uff1a\n\u4ec5\u4e00\u884c\uff0c\u542b\u6709\u4e24\u4e2a\u957f\u5ea6\u4e3a6\u7684\u6570\uff0c\u524d\u8005\u4e3a\u521d\u59cb\u5bc6\u7801\uff0c\u540e\u8005\u4e3a\u76ee\u6807\u5bc6\u7801\uff0c\u4e24\u4e2a\u5bc6\u7801\u4e4b\u95f4\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\u3002\n\n#### \u8f93\u51fa\u683c\u5f0f\uff1a\n\u4ec5\u4e00\u884c\uff0c\u542b\u6709\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u4e3a\u6700\u5c11\u9700\u8981\u7684\u51fb\u952e\u6b21\u6570\u3002\n\n### \u8f93\u5165\u8f93\u51fa\u6837\u4f8b\n#### \u8f93\u5165\u6837\u4f8b#1\uff1a\n\t123456 654321\n#### \u8f93\u51fa\u6837\u4f8b#1\uff1a\n\t11\n    \n### \u4e3b\u8981\u601d\u8def\uff1aBFS + \u5faa\u73af\u961f\u5217\n\n\u8fd9\u4e2a\u9898\u7684\u6570\u53ea\u67096\u4f4d\uff0c\u6211\u4eec\u76f4\u63a5\u5f53\u516d\u4f4d\u6570\u5b58\u4e0d\u5c31\u597d\u4e86\n\n\u9996\u5148\u4e0d\u80fd\u5199DFS\uff0c\u660e\u663e\u8fd9\u9898BFS\u8981\u6bd4DFS\u66f4\u4f18\uff08DFS\u4e0d\u5c31\u9000\u5316\u6210\u4e86\u7a77\u4e3e\u5417\uff08\u5927\u96fe\uff09\uff09\n\nswap0\uff0cswap1\uff0cup\uff0cdown\u64cd\u4f5c\uff0c\u76f4\u63a5\u6a21\u62df\u5c31\u597d\uff0cleft\u548cright\u5c31\u66f4\u597d\u529e\u4e86\uff0c\u76f4\u63a5\u66f4\u65b0\u5149\u6807\u5de6\u53f3\u5c31\u597d\u3002\n\n### code#1:36\u5206\uff08\u80af\u5b9aTLE\u4e86\uff09\n\n~~\u798f\u5229\uff1a\u81ea\u5e26\u91ce\u751fdebug\u4ee3\u7801~~\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<queue>\nusing namespace std;\n#define go(i,j,n,k) for(int i=j;i<=n;i+=k)\n#define fo(i,j,n,k) for(int i=j;i>=n;i-=k)\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while(ch>'9'||ch<'0'){if(ch=='-')f=-f;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\ninline void fre() {\n    freopen(\".in\", \"r\", stdin);\n    freopen(\".out\", \"w\", stdout);\n}\nint st, ed;\nint vis[1000100][7]; // \u5224\u91cd\u6570\u7ec4\n\ninline int swap0(int x, int now) {\n    int res = 1;\n    now = 6 - now + 1;\n    go(i, 1, now - 1, 1) res *= 10;\n    int xx = (x / res) % 10;\n    int yy = (x / 100000);\n    int ans = x;\n    ans -= xx * res;\n    ans -= yy * 100000;\n    ans += xx * 100000;\n    ans += yy * res;\n    return ans;\n}\ninline int swap1(int x, int now) {\n    int res = 1;\n    now = 6 - now + 1;\n    go(i, 1, now - 1, 1) res *= 10;\n    int xx = (x / res) % 10;\n    int yy = x % 10;\n    int ans = x;\n    ans -= xx * res;\n    ans -= yy;\n    ans += xx;\n    ans += yy * res;\n    return ans;\n}\ninline int up(int x, int now) {\n    int res = 1;\n    now = 6 - now + 1;\n    go(i, 1, now - 1, 1) res *= 10;\n    int ju = (x / res) % 10;\n    if(ju == 9) return x;\n    return x + res;\n}\ninline int down(int x, int now) {\n    int res = 1;\n    now = 6 - now + 1;\n    go(i, 1, now - 1, 1) res *= 10;\n    int ju = (x / res) % 10;\n    if(ju == 0) return x;\n    return x - res;\n}\n// \u56db\u79cd\u64cd\u4f5c\ninline void debug() {\n    puts(\"debug\u6a21\u5f0f\uff1a\");\n    puts(\"1.swap0  2.swap1\");\n    puts(\"3.up     4.down\");\n    int s = read(), st = read(), now = read();\n    if(s == 1) {\n        cout << swap0(st, now) << \"\\n\";\n    } else if(s == 2) {\n        cout << swap1(st, now) << \"\\n\";\n    } else if(s == 3) {\n        cout << up(st, now) << \"\\n\";\n    } else if(s == 4) {\n        cout << down(st, now) << \"\\n\";\n    }\n}\n\nstruct node{\n    int x, now, dep;\n    node(int _x = 0, int _now = 0, int _dep = 0) : x(_x), now(_now), dep(_dep) {}\n    node() : node(0, 0, 0) {}\n};\nqueue<node> q;\ninline int bfs(int st, int ed) {\n    q.push(node(st, 1, 0));\n    while(!q.empty()) {\n        node get = q.front(); q.pop();\n        int oo, x = get.x, now = get.now, deep = get.dep;\n        vis[x][now] = 1;\n        if(x == ed)\n            return deep;\n        oo = swap0(x, now);\n        if(!vis[oo][now]) q.push(node(oo, now, deep + 1));\n        oo = swap1(x, now);\n        if(!vis[oo][now]) q.push(node(oo, now, deep + 1));\n        oo = up(x, now);\n        if(!vis[oo][now]) q.push(node(oo, now, deep + 1));\n        oo = down(x, now);\n        if(!vis[oo][now]) q.push(node(oo, now, deep + 1));\n        if(now > 1 && !vis[x][now - 1]) q.push(node(x, now - 1, deep + 1)); // \u6ce8\u610f\u8fd9\u91cc\u7684\u7279\u5224\uff01now\u4e0d\u80fd\u8d8a\u754c\uff01\n        if(now < 6 && !vis[x][now + 1]) q.push(node(x, now + 1, deep + 1)); // \u6ce8\u610f\u8fd9\u91cc\u7684\u7279\u5224\uff01now\u4e0d\u80fd\u8d8a\u754c\uff01\n    }\n}\n\nint main(){\n    //fre();\n    // while(1) \n    //\tdebug();\n    st = read(), ed = read();\n    if(st == ed) {\n        cout << \"0\\n\";\n        return 0;\n    }\n    cout << bfs(st, ed) << \"\\n\";\n    return 0;\n}\n```\n\n\u4e3a\u4ec0\u4e48\u4f1aTLE\uff1f\n\n\u9996\u5148\uff0c\u5c3d\u7ba1\u6211\u4eec\u5728\u5165\u961f\u4e4b\u524d\u5c31\u5df2\u7ecf\u5224\u91cd\u4e86\uff0c\u4f46\u662f\u8fd9\u4e2a\u4ee3\u7801\u4f1a\u91cd\u590d\u63d2\u4e00\u6837\u7684\u70b9\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5728\u4ece\u961f\u5217\u4e2d\u53d6\u51fa\u65f6\u6765\u518d\u6b21\u5224\u91cd\u3002\n\n\u800c\u4e14\uff0c\u4f17\u6240\u5468\u77e5\uff0c\u6709\u79cd\u8bf4\u6cd5\u8bf4STL\u5f88\u6162\uff0c\u6240\u4ee5\u6211\u597d\u5947\u7684\u81ea\u5df1\u624b\u5199\u4e86\u4e2a\u961f\u5217\u3002\n\n### code#2:72\u5206\uff08\u8fd9\u6b21WA\u4e86\uff09\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n#define go(i,j,n,k) for(int i=j;i<=n;i+=k)\n#define fo(i,j,n,k) for(int i=j;i>=n;i-=k)\n#define mn 10000100\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while(ch>'9'||ch<'0'){if(ch=='-')f=-f;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\ninline void fre() {\n    freopen(\".in\", \"r\", stdin);\n    freopen(\".out\", \"w\", stdout);\n}\nint st, ed;\nbool vis[1000100][7]; // \u5224\u91cd\u6570\u7ec4 \nint ans = inf;\nint ress[7] = {0, 1, 10, 100, 1000, 10000, 100000};\n\ninline int swap0(int x, int now) {\n    now = 6 - now + 1;\n    int res = ress[now];\n    int xx = (x / res) % 10;\n    int yy = (x / 100000);\n    int ans = x;\n    ans -= xx * res;\n    ans -= yy * 100000;\n    ans += xx * 100000;\n    ans += yy * res;\n    return ans;\n}\ninline int swap1(int x, int now) {\n    now = 6 - now + 1;\n    int res = ress[now];\n    int xx = (x / res) % 10;\n    int yy = x % 10;\n    int ans = x;\n    ans -= xx * res;\n    ans -= yy;\n    ans += xx;\n    ans += yy * res;\n    return ans;\n}\ninline int up(int x, int now) {\n    now = 6 - now + 1;\n    int res = ress[now];\n    int ju = (x / res) % 10;\n    if(ju == 9) return x;\n    return x + res;\n}\ninline int down(int x, int now) {\n    now = 6 - now + 1;\n    int res = ress[now];\n    int ju = (x / res) % 10;\n    if(ju == 0) return x;\n    return x - res;\n}\n\ninline void debug() {\n    puts(\"debug\u6a21\u5f0f\uff1a\");\n    puts(\"1.swap0  2.swap1\");\n    puts(\"3.up     4.down\");\n    int s = read(), st = read(), now = read();\n    if(s == 1) {\n        cout << swap0(st, now) << \"\\n\";\n    } else if(s == 2) {\n        cout << swap1(st, now) << \"\\n\";\n    } else if(s == 3) {\n        cout << up(st, now) << \"\\n\";\n    } else if(s == 4) {\n        cout << down(st, now) << \"\\n\";\n    }\n}\n// \u624b\u5199\u961f\u5217\u54e6QwQ\nint X[mn], Now[mn], dep[mn], head = 1, tail = 0;\nint x, now, oo, deep;\ninline int bfs(int st, int ed) {\n    ++tail, X[tail] = st, Now[tail] = 1, dep[tail] = 0;\n    while(head <= tail) {\n        x = X[head], now = Now[head], deep = dep[head]; head++;\n        // cout << x << \" \" << now << \" \" << deep << \"\\n\";\n        if(vis[x][now]) continue; // \u8c03\u7528\u524d\u518d\u6b21\u5224\u91cd\n        vis[x][now] = 1;\n        if(x == ed) return deep;\n        oo = swap0(x, now);\n        if(!vis[oo][now]) ++tail, X[tail] = oo, Now[tail] = now, dep[tail] = deep + 1;\n        oo = swap1(x, now);\n        if(!vis[oo][now]) ++tail, X[tail] = oo, Now[tail] = now, dep[tail] = deep + 1;\n        oo = up(x, now);\n        if(!vis[oo][now]) ++tail, X[tail] = oo, Now[tail] = now, dep[tail] = deep + 1;\n        oo = down(x, now);\n        if(!vis[oo][now]) ++tail, X[tail] = oo, Now[tail] = now, dep[tail] = deep + 1;\n        if(now > 1 && !vis[x][now - 1]) ++tail, X[tail] = x, Now[tail] = now - 1, dep[tail] = deep + 1;\n        if(now < 6 && !vis[x][now + 1]) ++tail, X[tail] = x, Now[tail] = now + 1, dep[tail] = deep + 1;\n    }\n    return deep + 1;\n}\nint main(){\n    st = read(), ed = read();\n    if(st == ed) {\n        cout << \"0\\n\";\n        return 0;\n    }\n    cout << bfs(st, ed) << \"\\n\";\n    return 0;\n}\n```\n\n~~\u600e\u4e48\u8fd8\u4e0dAC~~\n\n\u6211\u4eec\u53ef\u4ee5\u8bd5\u7740\u628a\u6570\u7ec4\u5f00\u5927\u70b9\uff0c\u54a6\uff1f\u591a\u4e869\u5206\uff1f\n\n\u597d\u50cf\u662f\u6570\u7ec4\u5927\u5c0f\uff1f\uff1f\u4f46\u662f\u6211\u7684\u7a7a\u95f4\u5df2\u7ecf\u5f00\u5230\u6700\u5927\u4e86\u554a\n\n\u8fd9\u4e2a\u65f6\u5019\u5c31\u53ef\u4ee5\u7528\u5faa\u73af\u961f\u5217\u5361\u7a7a\u95f4\u4e86\n\n\u5177\u4f53\u5199\u6cd5\u770b\u4ee3\u7801\n\n### code#3:100\u5206\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n#define go(i,j,n,k) for(int i=j;i<=n;i+=k)\n#define fo(i,j,n,k) for(int i=j;i>=n;i-=k)\n#define mn 10000100\ninline ll read(){\n    ll x=0,f=1;char ch=getchar();\n    while(ch>'9'||ch<'0'){if(ch=='-')f=-f;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\n    return x*f;\n}\ninline void fre() {\n    freopen(\".in\", \"r\", stdin);\n    freopen(\".out\", \"w\", stdout);\n}\nint st, ed;\nbool vis[1000100][7]; // \u5224\u91cd\u6570\u7ec4 \nint ress[7] = {0, 1, 10, 100, 1000, 10000, 100000};\nint res, xx, yy, ans, ju;\ninline int swap0(int x, int now) {\n    now = 6 - now + 1;\n    res = ress[now];\n    xx = (x / res) % 10;\n    yy = (x / 100000);\n    ans = x;\n    ans -= xx * res;\n    ans -= yy * 100000;\n    ans += xx * 100000;\n    ans += yy * res;\n    return ans;\n}\ninline int swap1(int x, int now) {\n    now = 6 - now + 1;\n    res = ress[now];\n    xx = (x / res) % 10;\n    yy = x % 10;\n    ans = x;\n    ans -= xx * res;\n    ans -= yy;\n    ans += xx;\n    ans += yy * res;\n    return ans;\n}\ninline int up(int x, int now) {\n    now = 6 - now + 1;\n    res = ress[now];\n    ju = (x / res) % 10;\n    if(ju == 9) return x;\n    return x + res;\n}\ninline int down(int x, int now) {\n    now = 6 - now + 1;\n    res = ress[now];\n    ju = (x / res) % 10;\n    if(ju == 0) return x;\n    return x - res;\n}\n\ninline void debug() {\n    puts(\"debug\u6a21\u5f0f\uff1a\");\n    puts(\"1.swap0  2.swap1\");\n    puts(\"3.up     4.down\");\n    int s = read(), st = read(), now = read();\n    if(s == 1) {\n        cout << swap0(st, now) << \"\\n\";\n    } else if(s == 2) {\n        cout << swap1(st, now) << \"\\n\";\n    } else if(s == 3) {\n        cout << up(st, now) << \"\\n\";\n    } else if(s == 4) {\n        cout << down(st, now) << \"\\n\";\n    }\n}\n\nint X[mn], Now[mn], dep[mn], head = 0, tail = 0;\nint x, now, oo, deep;\ninline int bfs(int st, int ed) {\n    ++tail, X[tail] = st, Now[tail] = 1, dep[tail] = 0;\n    while(head != tail) { // \u8fd9\u91cc\u5c31\u4e0d\u80fd\u662fhead <= tail\u4e86\n        ++head;\n        if(head > 10000000) head = 0; // \u8bb0\u5f97\u5faa\u73af\n        x = X[head], now = Now[head], deep = dep[head]; \n        // cout << x << \" \" << now << \" \" << deep << \"\\n\";\n        if(x == ed) return deep;\n        if(vis[x][now]) continue;\n        vis[x][now] = 1;\n        oo = swap0(x, now);\n        if(!vis[oo][now]) {   // \u90fd\u8981\u5faa\u73af\u7684QAQ\n            if(++tail > 10000000) tail = 0;\n            X[tail] = oo, Now[tail] = now, dep[tail] = deep + 1;\n        }\n        oo = swap1(x, now);\n        if(!vis[oo][now]) {\n            if(++tail > 10000000) tail = 0;\n            X[tail] = oo, Now[tail] = now, dep[tail] = deep + 1;\n        }\n        oo = up(x, now);\n        if(!vis[oo][now]) {\n            if(++tail > 10000000) tail = 0;\n            X[tail] = oo, Now[tail] = now, dep[tail] = deep + 1;\n        }\n        oo = down(x, now);\n        if(!vis[oo][now]) {\n            if(++tail > 10000000) tail = 0;\n            X[tail] = oo, Now[tail] = now, dep[tail] = deep + 1;\n        }\n        if(now > 1 && !vis[x][now - 1]) {\n            if(++tail > 10000000) tail = 0; \n            X[tail] = x, Now[tail] = now - 1, dep[tail] = deep + 1;\n        }\n        if(now < 6 && !vis[x][now + 1]) {\n            if(++tail > 10000000) tail = 0; \n            X[tail] = x, Now[tail] = now + 1, dep[tail] = deep + 1;\n        }\n    }\n    return deep + 1;\n}\n\nint main(){\n    st = read(), ed = read();\n    if(st == ed) {\n        cout << \"0\\n\";\n        return 0;\n    }\n    cout << bfs(st, ed) << \"\\n\";\n    return 0;\n}\n\n```\n\n#### \u5e0c\u671b\u53ef\u4ee5\u5e2e\u5230\u88ab\u5361\u7a7a\u95f4\u7684\u540c\u5b66",
        "postTime": 1541259497,
        "uid": 71168,
        "name": "yizimi\u8fdc\u6b23",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1949 \u3010\u806a\u660e\u7684\u6253\u5b57\u5458_NOI\u5bfc\u520a2011\u63d0\u9ad8\uff0810\uff09\u3011"
    },
    {
        "content": "\u6ca1\u6709\u624b\u6253\u7684\u961f\u5217\u548c\u54c8\u5e0c\uff0c\u90a3\u6211\u5c31\u6765\u53d1\u4e00\u6ce2\n\n\n\u72b6\u6001:\u5149\u6807+\u5b57\u7b26\u72b6\u6001\uff1b\u4f4d\u6570\u6b63\u597d7\u4f4d\u53ef\u4ee5\u5b58\u8fc7\uff0810^7==>9.5MB\uff09\uff1b\u7528\u4e8e\u5224\u91cd\uff1b\n\n\n\u6a21\u62df\u641c\u7d22\u8fc7\u7a0b+\u54c8\u5e0c\u5224\u5145\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nbool vis[10000000];int ans,p[7];\nstruct node{int ans,tot;long long int pre;}team[7000010];\nint main()\n{\n//    freopen(\"Clever.in\",\"r\",stdin);\n    //freopen(\"Clever.out\",\"w\",stdout);\n    scanf(\"%d%d\",&team[1].ans,&ans);\n    if(team[1].ans==ans){cout<<0;return 0;}\n    int head=0,top=1;vis[team[1].ans+p[6]]=true; \n    team[1].tot=1;p[0]=1;p[1]=10;p[2]=100;\n    p[3]=1000;p[4]=10000;p[5]=100000;p[6]=1000000;\n    while(head!=top)\n    {\n        head++;\n        for(int i=1;i<=6;i++)\n        {\n            int xx=team[head].ans,tot=team[head].tot,wei1=(xx/p[6-tot])%10;\n            if(i==1&&tot!=6)\n            {\n                int wei2=xx%10;\n                xx=xx-wei1*p[6-tot]-wei2+wei2*p[6-tot]+wei1;\n                if(vis[xx+p[6]*tot]==true) continue;\n                vis[xx+p[6]*tot]=true;team[++top].ans=xx;\n                team[top].pre=team[head].pre+1;team[top].tot=tot;\n                if(xx==ans){cout<<team[top].pre;return 0;}\n            }\n            else if(i==2&&tot!=1)\n            {\n                int wei2=xx/p[5];\n                xx=xx-wei1*p[6-tot]-wei2*p[5]+wei1*p[5]+wei2*p[6-tot];\n                if(vis[xx+p[6]*tot]==true) continue;\n                vis[xx+p[6]*tot]=true;team[++top].ans=xx;\n                team[top].pre=team[head].pre+1;team[top].tot=tot;\n                if(xx==ans){cout<<team[top].pre;return 0;}\n            }\n            else if(i==3&&wei1!=9)\n            {\n                xx=xx+p[6-tot];\n                if(vis[xx+p[6]*tot]==true) continue;\n                vis[xx+p[6]*tot]=true;team[++top].ans=xx;\n                team[top].pre=team[head].pre+1;team[top].tot=tot;\n                if(xx==ans){cout<<team[top].pre;return 0;}\n            }\n            else if(i==4&&wei1!=0)//0\u4e0d\u53ef\u4ee5\u5199\u62101\uff0c\u8003\u8bd5\u5751\u4e86\u621150\u5206\n            {\n                xx=xx-p[6-tot];\n                if(vis[xx+p[6]*tot]==true) continue;\n                vis[xx+p[6]*tot]=true;team[++top].ans=xx;\n                team[top].pre=team[head].pre+1;team[top].tot=tot;\n                if(xx==ans){cout<<team[top].pre;return 0;}\n            }\n            else if(i==5&&tot!=1)\n            {\n                if(vis[xx+p[6]*(tot-1)]==true) continue;\n                team[++top]=team[head];team[top].pre++;\n                team[top].tot--;vis[xx+p[6]*team[top].tot]=true;//*//\n                if(xx==ans){cout<<team[top].pre;return 0;}\n            }\n            else if(i==6&&tot!=6)\n            {\n                if(vis[xx+p[6]*(tot+1)]==true) continue;\n                team[++top]=team[head];team[top].pre++;\n                team[top].tot++;vis[xx+p[6]*team[top].tot]=true;//*//\n                if(xx==ans){cout<<team[top].pre;return 0;}\n            }\n        }\n    }\n}\n```",
        "postTime": 1508590693,
        "uid": 44618,
        "name": "\u5c11\u5e74\u5982\u65af",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1949 \u3010\u806a\u660e\u7684\u6253\u5b57\u5458_NOI\u5bfc\u520a2011\u63d0\u9ad8\uff0810\uff09\u3011"
    }
]