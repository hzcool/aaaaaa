[
    {
        "content": "\u7f51\u7edc\u6d41dinic\u7b97\u6cd5\uff0c0ms\u8fc7\n\n**\u5efa\u56fe\u662f\u5173\u952e\uff01\uff01\uff01\u5efa\u56fe\u662f\u5173\u952e\uff01\uff01\uff01\u5efa\u56fe\u662f\u5173\u952e\uff01\uff01\uff01**\n\n\u8d85\u7ea7\u6e90\u70b9S\u4e0e1~m\u8fde\u6d41\u91cf\u4e3a1\u7684\u8fb9\uff0cm+1~n\u4e0e\u8d85\u7ea7\u6c47\u70b9T\u8fde\u6d41\u91cf\u4e3a1\u7684\u8fb9\uff0c\u6240\u7ed9\u7684\u8fb9\uff0c\u8fde\u6d41\u91cf\u4e3a0x3f3f3f3f\n\n\u76f4\u63a5dinic\uff0c\u5224\u65ad\u8fb9\u662f\u5426\u6709\u6d41\u91cf\uff0c\u5373\u5224\u65ad\u53cd\u5411\u8fb9\u7684\u6743\u503c\u662f\u5426\u4e0d\u4e3a0\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n\n\n\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#define N 100010\nusing namespace std;\nint n,m,S,T,tmp1,tmp2,tot;\nint en=1,head[N],h[N],q[N],ans1[N],ans2[N];\nstruct Edge{\n    int to,next,v;\n}e[N];\nbool b[N];\ninline void insert(int u,int v,int f)\n{\n    e[++en].to=v;e[en].v=f;e[en].next=head[u];head[u]=en;\n    e[++en].to=u;e[en].v=0;e[en].next=head[v];head[v]=en;\n}\ninline bool bfs()\n{\n    int f=0,t=0;\n    memset(h,-1,sizeof(h));\n    q[t++]=S;h[S]=0;\n    while(f<t)\n    {\n        int now=q[f++];\n        for(int i=head[now];i;i=e[i].next)\n        {\n            int v=e[i].to;\n            if(h[v]==-1&&e[i].v)\n            {\n                h[v]=h[now]+1;\n                q[t++]=v;\n            }\n        }\n    }\n    if(h[T]!=-1)return 1;\n    return 0;\n}\ninline int dfs(int x,int f)\n{\n    if(x==T)return f;\n    int w,used=0;\n    for(int i=head[x];i;i=e[i].next)\n    {\n        int v=e[i].to;\n        if(h[v]==h[x]+1&&e[i].v)\n        {\n            w=dfs(v,min(f-used,e[i].v));\n            e[i].v-=w;\n            e[i^1].v+=w;\n            used+=w;\n            if(used==f)return f;\n        }\n    }\n    if(!used)h[x]=-1;\n    return used;\n}\nvoid dinic()\n{\n    while(bfs())\n        tot+=dfs(S,0x3f3f3f3f);\n}\nint main()\n{\n    scanf(\"%d %d\",&m,&n);\n    S=0,T=n+1;\n    scanf(\"%d %d\",&tmp1,&tmp2);\n    do\n    {\n        insert(tmp1,tmp2,0x3f3f3f3f);\n        scanf(\"%d %d\",&tmp1,&tmp2);\n    }while(tmp1!=-1&&tmp2!=-1);\n    for(int i=1;i<=m;i++)insert(S,i,1);\n    for(int i=m+1;i<=n;i++)insert(i,T,1);\n    dinic();\n    if(tot==0)\n    {\n        puts(\"No Solution!\");\n        return 0;\n    }\n    printf(\"%d\\n\",tot);\n    for(int i=2;i<=en;i=i+2)\n    {\n        if(e[i].to!=S&&e[i^1].to!=S)\n        if(e[i].to!=T&&e[i^1].to!=T)\n        if(e[i^1].v!=0)\n        {\n            printf(\"%d %d\\n\",e[i^1].to,e[i].to);\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1501576430,
        "uid": 19182,
        "name": "Johnson_sky",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2756 \u3010\u98de\u884c\u5458\u914d\u5bf9\u65b9\u6848\u95ee\u9898\u3011"
    },
    {
        "content": "\u5308\u7259\u5229\u7b97\u6cd5\u81ea\u5e26\u5339\u914d\u65b9\u6848\n\n~~\u732e\u7ed9\u6240\u6709\u5308\u7259\u5229\u7b97\u6cd5\u515a~~\n\n```c\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<cstdlib>\n#include<string>\n#include<queue>\n#include<map>\n#include<stack>\n#include<list>\n#include<set>\n#include<deque>\n#include<vector>\n#include<ctime>\n#define ll long long\n#define inf 0x7fffffff\n#define N 500008\n#define IL inline\n#define D double\n#define U unsigned\n#define R register\nusing namespace std;\ntemplate<typename T>void read(T &a)\n{\n    T x=0,f=1;char ch=getchar();\n    while(!isdigit(ch))\n    {\n        if(ch=='-')f=0;ch=getchar();\n    }\n    while(isdigit(ch))\n    {\n        x=(x<<1)+(x<<3)+ch-'0';ch=getchar();\n    }\n    a=f?x:-x;\n}\n/*-------------OI\u4f7f\u6211\u5feb\u4e50---------------------*/\nll n,m,ans;\nll to[N];\nstruct node{\n    ll to,nex;\n}e[N];\nll x,y,tot;\nll head[N];\nbool vis[N];\nvoid add(ll a,ll b)\n{\n    e[++tot].to=b;\n    e[tot].nex=head[a];\n    head[a]=tot;\n}\nbool find(ll x)\n{\n    ll xx;\n    for(ll i=head[x];i;i=e[i].nex)\n    {\n        xx=e[i].to;\n        if(!vis[xx])\n        {\n            vis[xx]=1;\n            if(!to[xx]||find(to[xx]))\n            {\n                to[xx]=x;\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\nint main()\n{\n    read(n);read(m);\n    read(x);read(y);\n    while(x!=-1&&y!=-1)\n    {\n        if(x<=n&&y<=m) add(x,y);\n        read(x);read(y);\n    }\n    for(ll i=1;i<=n;i++)\n    {\n        memset(vis,0,sizeof(vis));\n        if(find(i)) ans++;\n    }\n    cout<<ans<<endl;\n    for(ll i=n+1;i<=m;i++)\n    {\n        if(to[i]) cout<<to[i]<<\" \"<<i<<endl;\n    }\n    return 0;\n}\n```\n\n\u6700\u540e\u5bf9\u5e94\u8f93\u51fa\u5373\u53ef",
        "postTime": 1534212529,
        "uid": 87931,
        "name": "tcswuzb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2756 \u3010\u98de\u884c\u5458\u914d\u5bf9\u65b9\u6848\u95ee\u9898\u3011"
    },
    {
        "content": "\u770b\u4e86\u8fd9\u4e48\u591a\u9898\u89e3\uff0c\u4f3c\u4e4e\u6ca1\u6709\u624b\u628a\u624b\u6559\u4f60\u5199\u7f51\u7edc\u6d41\u7684\u9898\u89e3\n\n//\u5bf9\u4e8e\u4e00\u9053\u65b0\u624b\u5411\u7684\u9898\u4e0d\u5e94\u8be5\u662f\u6559\u5982\u4f55\u5199\u677f\u5b50\u5417\n\n\u5c31\u7740\u8fd9\u9053\u9898\u6559\u4e00\u4e0b\u677f\u5b50\u5199\u6cd5\u597d\u4e86\n\n\u9996\u5148dinic\u662f\u4e00\u4e2a\u8d2a\u5fc3\u7684\u601d\u60f3\u5728\u91cc\u9762\uff0c\u6211\u4eec\u6bcf\u6b21\u627e\u6e90\u70b9\u5230\u8d77\u70b9\u7684\u4e00\u6761\u6700\u77ed\u8def\u5f84\n\n\uff08\u6307\u7684\u662f\u7ecf\u8fc7\u8fb9\u6570\u6700\u5c0f\uff09\uff0c\uff08\u540c\u65f6\u6211\u4eec\u8ba4\u4e3a\u8fb9\u6743\u4e3a0\u7684\u8fb9\u4e0d\u5b58\u5728\uff09\n\n\u7136\u540e\u8def\u5f84\u4e0a\u7684\u6d41\u91cf\u9650\u5236\u7edf\u4e00\u51cf\u53bb\u8fd9\u6761\u8def\u5f84\u4e2d\u8fb9\u6743\u7684\u6700\u5c0f\u503c\u5373\u53ef\n\n\u53d1\u73b0\u8fd9\u4e2a\u8d2a\u5fc3\u601d\u60f3\u662f\u6709\u95ee\u9898\u7684\uff0c\u5b9e\u9645\u4e0a\u8fd9\u6837\u4f1a\u963b\u585e\u5f88\u591a\u201c\u91cd\u8981\u201d\u7684\u8fb9\n\n\u5bfc\u81f4\u8d2a\u5fc3\u7b97\u6cd5\u5931\u6548\n\n\u4f46\u662f\u5982\u679c\u53ef\u4ee5\u56de\u64a4\u4e4b\u524d\u7684\u9009\u62e9\uff0c\u5373\u8ba9\u4e00\u6761\u8fb9\u5c11\u6d41\u4e00\u70b9\uff0c\n\n\u90a3\u4e48\u8d2a\u5fc3\u5728\u8fd9\u4e2a\u610f\u4e49\u4e0a\u662f\u6210\u7acb\u7684\n\n\u8fd9\u91cc\u6d89\u53ca\u5230\u53cd\u5411\u8fb9\u6982\u5ff5\u7684\u5e94\u7528\uff0c\u5bf9\u6bcf\u4e00\u6761\u8fb9\u6765\u8bb2\uff0c\n\n\u5982\u679c\u5b83\u5411\u524d\u6d41\u4e86X\uff0c\u90a3\u4e48\u5982\u679c\u5b83\u540c\u65f6\u5411\u540e\u6d41Y\n\n\u7b49\u6548\u4e8e\u5411\u524d\u6d41X-Y\uff0c\u901a\u8fc7\u8fd9\u6837\u7684\u65b9\u5f0f\uff0c\u5373\u8ba9\u4e00\u6761\u8fb9\u56de\u6d41\n\n\u6211\u4eec\u5c31\u53ef\u4ee5\u56de\u64a4\u4e4b\u524d\u7684\u9009\u62e9\u4e86\n\n\u5f53\u7136\u5b9e\u9645\u4e0a\u6211\u4eec\u5bf9\u4e8e\u6bcf\u6761\u8fb9\u914d\u7f6e\u4e00\u6761\u53cd\u5411\u8fb9\u6765\u8d77\u5230\u8fd9\u4e2a\u53cd\u6d41\u7684\u6548\u679c\n\n\u53cd\u5411\u8fb9\u521d\u59cb\u6743\u503c\u4e3a0\uff0c\u5982\u679c\u53cd\u5411\u8fb9\u5bf9\u5e94\u7684\u6b63\u5411\u8fb9\u51cf\u53bb\u6d41\u91cf\uff0c\u90a3\u4e48\u6b63\u5411\u8fb9\u7684\u6d41\u91cf\u6700\u591a\n\n\u53cd\u6d41\u6b63\u5411\u8fb9\u73b0\u5728\u7684\u6d41\u91cf\uff0c\u6240\u4ee5\u6b63\u5411\u8fb9\u51cf\u591a\u5c11\u53cd\u5411\u8fb9\u52a0\u591a\u5c11\n\n\u90a3\u4e48\u6211\u4eec\u7528\u4e00\u4e2adfs\u5c31\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u627e\u51fa\u6700\u5c0f\u503c\n\n\u7136\u800c\u4e0d\u662f\u6700\u77ed\u8def\u554a\n\n\u6240\u4ee5\u6211\u4eec\u7528bfs\u9884\u5904\u7406\u4e00\u904d\u6df1\u5ea6\uff0c\u6bcf\u6b21\u53ea\u8d70\u6df1\u5ea6\u5dee\u4e3a1\u7684\u70b9\n\n\u5982\u679c\u53d1\u73b0d\u4e0d\u52a8\u4e86\u6709\u4e24\u79cd\u60c5\u51b5\n\n1.\u771f\u7684\u6ca1\u6709\u8def\u4e86\n\n2.\u4f60\u7684\u6df1\u5ea6\u56fe\u8fc7\u671f\u4e86\uff0c\u56e0\u4e3a\u4f60\u4fee\u6539\u4e86\u8fd9\u5f20\u56fe\n\n\u6240\u4ee5\u66f4\u65b0\u4e00\u904d\u6df1\u5ea6\u56fe\uff0c\u91cd\u65b0bfs\uff0c\u5982\u679c\u6b64\u65f6\u53d1\u73b0\u4ece\u6e90\u70b9\u5df2\u65e0\u6cd5\u5230\u8fbe\u8d77\u70b9\u5c31\u7ed3\u675f\u7b97\u6cd5\n\n//\u4e0b\u9762\u662f\u5b9e\u73b0\u7ec6\u8282\n\n1.\u53cd\u5411\u8fb9\u600e\u4e48\u641e\uff1f\n\n\u7b54\uff1a\u56de\u60f3\u90bb\u63a5\u8868\u5de5\u4f5c\u7684\u8fc7\u7a0b\uff0c\u53d1\u73b0\u8fde\u7eedadd\u4e24\u6761\u8fb9\u7684\u65f6\u5019\u8fd9\u4e24\u6761\u8fb9\u7684\u7f16\u53f7\u662f\u76f8\u90bb\u7684\n\n\u6240\u4ee5\u7528\u3010\u5f02\u6216\u4e0a1\u3011(\u30fb\u2200\u30fb(\u30fb\u2200\u30fb(\u30fb\u2200\u30fb\\*)\u8fd9\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u65b9\u4fbf\u7684\u627e\u51fa\u4e00\u6761\u8fb9\u5bf9\u5e94\u7684\n\n\u53cd\u5411\u8fb9\u7f16\u53f7\n\n2.dfs\u600e\u4e48\u5199\uff1f\n\ndfs\u4e24\u4e2a\u53c2\u6570\uff0c\u5f53\u524d\u70b9\u548c\u5f53\u524d\u8def\u5f84\u4e2d\u7684\u6700\u5c0f\u503c\uff0c\u6bcf\u6b21\u5411\u4e0bd\u7684\u65f6\u5019\u6700\u5c0f\u503c\u548c\u51fa\u8fb9\u53d6min\n\n\u56de\u6eaf\u7684\u65f6\u5019\u4fee\u6539\u53cd\u5411\u8fb9\u6743\u503c\u548c\u6b63\u5411\u8fb9\u6743\u503c\n\n//\u4ee5\u4e0a\u662f\u677f\u5b50\u6559\u7a0b\n\n\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u5b83\u88ab\u79f0\u4e3a**\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d**\uff0c\u53ef\u4ee5\u5efa\u6a21\u8dd1\u6700\u5927\u6d41\n\n\u5efa\u56fe\u505a\u6cd5\u4e3a s\u5411\u6bcf\u4e00\u4e2a\u5916\u7c4d\u98de\u884c\u5458\u8fde\u9650\u5236\u4e3a1\u7684\u8fb9\n\n\u6bcf\u4e00\u4e2a\u5916\u7c4d\u98de\u884c\u5458\u5411\u53ef\u4ee5\u5339\u914d\u7684\u82f1\u7c4d\u98de\u884c\u5458\u8fde\u9650\u5236\u4e3a1\u7684\u8fb9\n\n\u6bcf\u4e00\u4e2a\u82f1\u7c4d\u98de\u884c\u5458\u5411t\u8fde\u4e00\u4e2a\u9650\u5236\u4e3a1\u7684\u8fb9\n\n\u8dd1\u6700\u5927\u6d41\u5373\u53ef\uff0c\u539f\u56fe\u4e2d\u6bcf\u4e00\u4e2a\u6709\u6d41\u91cf\u7684\u8fb9\u5bf9\u5e94\u4e00\u4e2a\u5339\u914d\n\n\u5229\u7528\u8fd9\u70b9\u53ef\u4ee5\u8f93\u51fa\u65b9\u6848\n\n\u5728dfs\u7684\u65f6\u5019\u6bcf\u6b21\u7ef4\u62a4\u5230\u5e95\u54ea\u4e00\u6761\u8fb9\u88ab\u542f\u7528\u5373\u53ef\n\n\u4e0a\u4ee3\u7801~\n\n```cpp\n    #include<cstdio>\n    #include<algorithm>\n    #include<queue>\n    using namespace std;\n    struct data\n    {\n        int v;int nxt;int val;\n    }edge[30010];int alist[110];int cnt=1;\n    inline void add(int u,int v,int val)\n    {\n        edge[++cnt].v=v;edge[cnt].val=val;\n        edge[cnt].nxt=alist[u];alist[u]=cnt;\n        return;\n    }\n    int dep[110];bool book[110];\n    int n;int m;int res;\n    int matcha[110];//\u7ef4\u62a4\u5bf9\u5e94\u5173\u7cfb\n    int matchb[110];\n    int s;int t;queue<int> q;\n    int dfs(int x,int lim)//dfs\u627e\u589e\u5e7f\u8def\n    {\n        if(x==t)return lim;\n        int nxt=alist[x];\n        while(nxt)\n        {\n            int v=edge[nxt].v;\n            int val=edge[nxt].val;\n            if(dep[v]==dep[x]+1&&val!=0)\n            {\n                int delta=dfs(v,min(val,lim));//\u9012\u5f52\u6c42\u6700\u5c0f\u503c\n                if(delta!=0)\n                {\n                    edge[nxt].val-=delta;\n                    edge[nxt^1].val+=delta;//\u5f02\u6216\u4fee\u6539\u53cd\u5411\u8fb9\n                    if(x!=s&&v!=t)//\u7ef4\u62a4\u5bf9\u5e94\u5173\u7cfb\n                    {\n                        matcha[x]=v;\n                        matchb[v]=x;\n                    }\n                    return delta;\n                }\n            }\n            nxt=edge[nxt].nxt;\n        }\n        return 0;\n    }\n    void bfs()//bfs\u5904\u7406\u6df1\u5ea6\n    {\n        for(int i=1;i<=n+2;i++)\n        book[i]=false;\n        dep[s]=1;book[s]=true;\n        q.push(s);\n        while(!q.empty())\n        {\n            int now=q.front();q.pop();\n            int nxt=alist[now];\n            while(nxt)\n            {\n                int v=edge[nxt].v;\n                int val=edge[nxt].val;\n                if(val!=0&&book[v]==false)\n                {\n                    dep[v]=dep[now]+1;\n                    book[v]=true;\n                    q.push(v);\n                }\n                nxt=edge[nxt].nxt;\n            }\n        }\n        return;\n    }\n    int main()\n    {\n        scanf(\"%d%d\",&m,&n);\n        s=n+1;t=n+2;\n        while(1)//\u5efa\u56fe\n        {\n            int u;int v;\n            scanf(\"%d%d\",&u,&v);\n            if(u==-1&&v==-1)break;\n            add(u,v,1);add(v,u,0);//\u6ce8\u610f\u4e00\u5b9a\u8981\u8fde\u7eed\u585e\u8fdb\u53bb\n        }\n        for(int i=1;i<=m;i++)\n        {\n            add(s,i,1);add(i,s,0);\n        }\n        for(int i=m+1;i<=n;i++)\n        {\n            add(i,t,1);add(t,i,0);\n        }\n        bfs();//\u5904\u7406\u6df1\u5ea6\n        while(book[t])//\u5f53\u8fd8\u6709\u8def\u5f84\u65f6\n        {\n            while(1)\n            {\n                int p=dfs(s,0x3f3f3f3f);\n                if(p==0)break;else res+=p;//\u6bcf\u6b21dfs\u5931\u8d25\u540e\u66f4\u65b0\u6df1\u5ea6\u56fe\n            }bfs();\n        }\n        printf(\"%d\\n\",res);//\u8f93\u51fa\u7b54\u6848\n        for(int i=1;i<=m;i++)//\u8f93\u51fa\u65b9\u6848\n        {\n            if(i==matchb[matcha[i]])\n            {\n                printf(\"%d %d\\n\",i,matcha[i]);\n            }\n            else if(i==matcha[matchb[i]])\n            {\n                printf(\"%d %d\\n\",i,matchb[i]);\n            }\n        }return 0;//\u62dc\u62dc\u7a0b\u5e8f~\n}\n```",
        "postTime": 1514377002,
        "uid": 56384,
        "name": "shadowice1984",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2756 \u3010\u98de\u884c\u5458\u914d\u5bf9\u65b9\u6848\u95ee\u9898\u3011"
    },
    {
        "content": "[$$\\Large\\texttt{My Blog}$$](https://hydingsy.github.io/)\n\n---\n\n## Description\n\n> \u9898\u76ee\u94fe\u63a5\uff1a[Luogu 2756](https://www.luogu.org/problemnew/show/P2756)\n\n\u82f1\u56fd\u7687\u5bb6\u7a7a\u519b\u4ece\u6ca6\u9677\u56fd\u5f81\u52df\u4e86\u5927\u91cf\u5916\u7c4d\u98de\u884c\u5458\u3002\u7531\u7687\u5bb6\u7a7a\u519b\u6d3e\u51fa\u7684\u6bcf\u4e00\u67b6\u98de\u673a\u90fd\u9700\u8981\u914d\u5907\u5728\u822a\u884c\u6280\u80fd\u548c\u8bed\u8a00\u4e0a\u80fd\u4e92\u76f8\u914d\u5408\u7684 $2$ \u540d\u98de\u884c\u5458\uff0c\u5176\u4e2d $1$ \u540d\u662f\u82f1\u56fd\u98de\u884c\u5458\uff0c\u53e6 $1$ \u540d\u662f\u5916\u7c4d\u98de\u884c\u5458\u3002\u5728\u4f17\u591a\u7684\u98de\u884c\u5458\u4e2d\uff0c\u6bcf\u4e00\u540d\u5916\u7c4d\u98de\u884c\u5458\u90fd\u53ef\u4ee5\u4e0e\u5176\u4ed6\u82e5\u5e72\u540d\u82f1\u56fd\u98de\u884c\u5458\u5f88\u597d\u5730\u914d\u5408\u3002\u7687\u5bb6\u7a7a\u519b\u5171\u6709 $n$ \u540d\u98de\u884c\u5458\uff0c\u5176\u4e2d $m$ \u540d\u4e3a\u5916\u7c4d\u98de\u884c\u5458\u3002\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u5916\u7c4d\u98de\u884c\u5458\u4e0e\u82f1\u56fd\u98de\u884c\u5458\u7684\u914d\u5408\u60c5\u51b5\uff0c\u8bd5\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\u627e\u51fa\u6700\u4f73\u98de\u884c\u5458\u914d\u5bf9\u65b9\u6848\uff0c\u4f7f\u7687\u5bb6\u7a7a\u519b\u4e00\u6b21\u80fd\u6d3e\u51fa\u6700\u591a\u7684\u98de\u673a\u3002\n\n\u6570\u636e\u8303\u56f4\uff1a$1\\le m\\le m<100$\n\n------\n\n## Solution\n\n\u7531\u4e8e\u6bcf\u4e2a\u98de\u884c\u5458\u53ea\u80fd\u88ab\u9009\u62e9\u4e00\u6b21\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u60f3\u5230**\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d**\uff0c\u663e\u7136\u53ef\u4ee5\u7528**\u5308\u7259\u5229\u7b97\u6cd5**\u6216**\u7f51\u7edc\u6d41**\u89e3\u51b3\u3002\n\n\u5bf9\u4e8e\u8f93\u51fa\u65b9\u6848\uff0c\u5308\u7259\u5229\u7b97\u6cd5\u53ef\u4ee5\u76f4\u63a5\u5229\u7528\u5339\u914d\u6570\u7ec4\uff0c\u800c\u7f51\u7edc\u6d41\u53ef\u4ee5\u5224\u65ad\u6b63\u5411\u8fb9\u662f\u5426\u6709\u6d41\u91cf\uff08\u5373\u53cd\u5411\u8fb9\u7684\u6b8b\u91cf\u662f\u5426\u4e0d\u4e3a $0$\uff09\u3002\n\n**\u65f6\u95f4\u590d\u6742\u5ea6**\uff1a$O(n^2\\sqrt n)$\uff08\u4e8c\u5206\u56fe $\\texttt{Dinic}$\uff09\n\n------\n\n## Code\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <queue>\n\nconst int N=205,M=2e4+5;\nint n,m,tot=1,lnk[N],ter[M],nxt[M],val[M],dep[N],cnr[N];\n\nvoid add(int u,int v,int w) {\n    ter[++tot]=v,nxt[tot]=lnk[u],lnk[u]=tot,val[tot]=w;\n}\nvoid addedge(int u,int v,int w) {\n    add(u,v,w),add(v,u,0);\n}\nint bfs(int s,int t) {\n    memset(dep,0,sizeof(dep));\n    memcpy(cnr,lnk,sizeof(lnk));\n    std::queue<int> q;\n    q.push(s),dep[s]=1;\n    while(!q.empty()) {\n        int u=q.front(); q.pop();\n        for(int i=lnk[u];i;i=nxt[i]) {\n            int v=ter[i];\n            if(val[i]&&!dep[v]) dep[v]=dep[u]+1,q.push(v);\n        }\n    }\n    return dep[t];\n}\nint dfs(int u,int t,int flow) {\n    if(u==t) return flow;\n    int ret=0;\n    for(int i=cnr[u];i&&ret<flow;i=nxt[i]) {\n        cnr[u]=i;\n        int v=ter[i];\n        if(val[i]&&dep[v]==dep[u]+1) {\n            int x=dfs(v,t,std::min(val[i],flow-ret));\n            if(x) val[i]-=x,val[i^1]+=x,ret+=x;\n        }\n    }\n    if(ret<flow) dep[u]=-1;\n    return ret;\n}\nint dinic(int s,int t) {\n    int ans=0;\n    while(bfs(s,t)) {\n        int x;\n        while((x=dfs(s,t,1<<30))) ans+=x;\n    }\n    return ans;\n}\nint main() {\n    scanf(\"%d%d\",&n,&m);\n    int u,v;\n    while(scanf(\"%d%d\",&u,&v)&&~u&&~v) addedge(u,v,1);\n    int s=0,t=n+m+1;\n    for(int i=1;i<=n;++i) addedge(s,i,1);\n    for(int i=n+1;i<=m;++i) addedge(i,t,1);\n    int ans=dinic(s,t);\n    if(!ans) return puts(\"No Solution!\");\n    printf(\"%d\\n\",ans);\n    for(int u=1;u<=n;++u) {\n        for(int i=lnk[u];i;i=nxt[i]) {\n            int v=ter[i];\n            if(v!=s&&val[i]==0&&val[i^1]==1) printf(\"%d %d\\n\",u,v);\n        }\n    }\n    return 0;\n}\n```\n\n",
        "postTime": 1545534602,
        "uid": 49725,
        "name": "Siyuan",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2756 \u3010\u98de\u884c\u5458\u914d\u5bf9\u65b9\u6848\u95ee\u9898\u3011"
    },
    {
        "content": "CSP2019\u7206\u96f6\u7684\u840c\u65b0\u5207\u6389\u7684\u7b2c\u4e00\u9053\u7f51\u7edc\u6d4124\u9898\uff08\u96fe\uff09\n\n## \u9898\u76ee\u5206\u6790\n\n\u7f51\u7edc\u6d4124\u9898\u4e2d\u6700\u7b80\u5355\u4e00\u9898\n\n\u4e00\u770b\u9898\u76ee\u5c31\u77e5\u9053\u662f\u677f\u5b50\n\n~~\u5176\u4ed6\u5de8\u4f6c\u90fd\u5728\u8bf4\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u7136\u800c\u8fd9\u9898\u4f3c\u4e4eEK\u5f88\u8f7b\u677eAC~~\n\n\u5efa\u4e00\u4e2a\u6e90\u70b9 $s$ \u548c\u4e00\u4e2a\u6c47\u70b9 $t$\n\n$s$ \u5230\u6bcf\u4e00\u4e2a\u5916\u7c4d\u98de\u884c\u5458\u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $1$ \u7684\u8fb9\n\n\u6bcf\u4e00\u4e2a\u82f1\u56fd\u98de\u884c\u5458\u5230 $t$ \u8fde\u4e00\u6761\u6d41\u91cf\u4e3a $1$ \u7684\u8fb9\n\n\u5728\u6309\u9898\u76ee\u6570\u636e\u5728\u82f1\u56fd\u98de\u884c\u5458\u548c\u5916\u7c4d\u98de\u884c\u5458\u4e4b\u95f4\u8fde\u8fb9\n\n\u7136\u540e\u8dd1\u4e00\u904dEK\uff0c\u679a\u4e3e\u6bcf\u6761\u53cd\u5411\u8fb9\uff0c\u5982\u679c\u6d41\u91cf\u5927\u4e8e\u96f6\u5c31\u8f93\u51fa\n\nCode($30$ms/$804$KB)\n\n```cpp\n#include <cstdio>\n#include <queue>\n#include <cstring>\nusing namespace std;\nconst int MAXN = 102;\nconst int INF = 2147483647;\nint n, m, s, t, maxflow;\nint g[MAXN][MAXN];\nint pre[MAXN];\nbool vis[MAXN];\ninline int bfs(int s,int t) {//BFS\u627e\u589e\u5e7f\u8def\n\tmemset(pre, -1, sizeof(pre));\n\tmemset(vis, 0, sizeof(vis));\n\tqueue <int> q; \n\tvis[s] = 1;\n\tq.push(s);\n\twhile(!q.empty()) {\n\t\tint u = q.front();\n\t\tq.pop();\n\t\tfor(register int i = 0; i <= m + 1; ++i) {\n\t\t\tif(!vis[i] && g[u][i] > 0) {\n\t\t\t\tvis[i] = 1;\n\t\t\t\tpre[i] = u;\n\t\t\t\tif(i == t) return true;\n\t\t\t\tq.push(i);\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\ninline int EK(int s,int t) {//EK\u7f51\u7edc\u6700\u5927\u6d41\n\tint u,v,d,maxflow = 0;\n\twhile(bfs(s,t)) {\n\t\tmaxflow ++;//\u8fd9\u9898\u6d41\u91cf\u4e00\u5b9a\u662f1\uff0c\u4e0d\u7528\u518d\u53bb\u987a\u7740\u589e\u5e7f\u8def\u627e\u4e00\u904d\n\t\tv = t;\n\t\twhile(s != v) {\n\t\t\tu = pre[v];\n        //\u6b63\u5411\u8fb9\u51cf\u6d41\uff0c\u53cd\u5411\u8fb9\u52a0\u6d41\n\t\t\tg[u][v] --;\n\t\t\tg[v][u] ++;\n\t\t\tv = u;\n\t\t} \n\t}\n\treturn maxflow;\n}\nsigned main() {\n\tscanf(\"%d%d\",&n,&m);\n\ts = 0, t = m + 1;\n\tfor(register int i = 1; i <= m; ++i) i <= n ? g[s][i]++ : g[i][t] ++;//\u6e90\u70b9\u5230\u5916\u7c4d\u98de\u884c\u5458\u8fde\u8fb9\uff0c\u82f1\u56fd\u98de\u884c\u5458\u5230\u6c47\u70b9\u8fde\u8fb9\n\tint u,v;\n\tscanf(\"%d%d\",&u,&v);\n\twhile(u != -1) {\n\t\tg[u][v] = 1;\n\t\tscanf(\"%d%d\",&u,&v);\n\t}//\u98de\u884c\u5458\u95f4\u8fde\u8fb9\n\tmaxflow = EK(s,t);//EK\n\tif(!maxflow) printf(\"No Solution!\\n\");\n\telse printf(\"%d\\n\", maxflow);\n\tfor(register int i = 1; i <= n; ++i)//\u679a\u4e3e\u53cd\u5411\u8fb9\n\t\tfor(register int j = n + 1; j <= m; ++j)\n\t\t\tif(g[j][i] > 0) printf(\"%d %d\\n\", i, j);\n\treturn 0;\n}\n```",
        "postTime": 1575730317,
        "uid": 149815,
        "name": "Isprime",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2756 \u3010\u98de\u884c\u5458\u914d\u5bf9\u65b9\u6848\u95ee\u9898\u3011"
    },
    {
        "content": "#\u6765\u81ea\u7f51\u7edc\n\n\u3010\u95ee\u9898\u5206\u6790\u3011\n\n\n\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u95ee\u9898\u3002\n\n\n\u3010\u5efa\u6a21\u65b9\u6cd5\u3011\n\n\n\u5728\u4e8c\u5206\u56fe\u7684\u57fa\u7840\u4e0a\u589e\u52a0\u6e90S\u548c\u6c47T\u3002\n\n1. S\u5411X\u96c6\u5408\u4e2d\u6bcf\u4e2a\u9876\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a1\u7684\u6709\u5411\u8fb9\u3002\n\n2. Y\u96c6\u5408\u4e2d\u6bcf\u4e2a\u9876\u70b9\u5411T\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a1\u7684\u6709\u5411\u8fb9\u3002\n\n3. XY\u96c6\u5408\u4e4b\u95f4\u7684\u8fb9\u90fd\u8bbe\u4e3a\u4eceA\u96c6\u5408\u4e2d\u7684\u70b9\u5230B\u96c6\u5408\u4e4b\u4e2d\u7684\u70b9\uff0c\u5bb9\u91cf\u4e3a1\u7684\u6709\u5411\u8fb9\u3002\n\n\n\u6c42\u7f51\u7edc\u6700\u5927\u6d41\uff0c\u6d41\u91cf\u5c31\u662f\u5339\u914d\u6570\uff0c\u6240\u6709\u6ee1\u6d41\u8fb9\u662f\u4e00\u7ec4\u53ef\u884c\u89e3\u3002\n\n\n\u3010\u5efa\u6a21\u5206\u6790\u3011\n\n\n\u57fa\u672c\u7684\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528\u5308\u7259\u5229\u7b97\u6cd5\u6216Hopcroft\\_Karp\u7b97\u6cd5\u89e3\u51b3\uff0c\u66f4\u4e00\u822c\u7684\u65b9\u6cd5\u662f\u7f51\u7edc\u6700\u5927\u6d41\u3002\n",
        "postTime": 1458383656,
        "uid": 5846,
        "name": "yyy2015c01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2756 \u3010\u98de\u884c\u5458\u914d\u5bf9\u65b9\u6848\u95ee\u9898\u3011"
    },
    {
        "content": "### \u524d\u8a00\uff1a\n\u8d64\u88f8\u88f8\u7684\u6700\u5927\u5339\u914d\n\u5308\u7259\u5229\u4e5f\u53ef\u4ee5\u8fc7\u5427\n\u4e0d\u8fc7\u6bd5\u7adf\u662f\u7f51\u7edc\u6d4124\u9898\n\u7528\u7f51\u7edc\u6d41\u6bd4\u8f83\u5408\u9002\n\n\u770b\u5927\u4f6c\u90fd\u662f\u7528Dinic\u8fc7\u7684\n\n\u672c\u849f\u84bb\u5c31\u653e\u4e00\u4e2a(Ford-Fulkerson)\u57fa\u7840\u7b97\u6cd5\n\n### \u89e3\u9898\u601d\u8def\uff1a\n\u9996\u5148\u5efa\u4e00\u4e2a\u6e90\u70b9\u548c\u4e00\u4e2a\u6c47\u70b9\uff0c**\u6e90\u70b9\u4e0e\u5916\u7c4d\u98de\u884c\u5458\u95f4\u5efa\u7acb\u4e00\u6761\u6709\u5411\u8fb9(\u5916\u7c4d\u98de\u884c\u5458\u65b9\u5411)\uff0c\u6c47\u70b9\u4e0e\u82f1\u7c4d\u98de\u884c\u5458\u5efa\u7acb\u4e00\u6761\u6709\u5411\u8fb9(\u82f1\u7c4d\u98de\u884c\u5458\u65b9\u5411)**\u3002\n\n\u6240\u6709\u8fb9\u7684\u5bb9\u91cf\u4e3a1\uff0c\u4e5f\u5c31\u662f\u8bf4\u6d41\u91cf\u6700\u591a\u4e3a1\u3002\n\n\u7136\u540e\u6c42\u6700\u5927\u6d41\u3002\n\n**\u8fd8\u6709\uff0c\u6ce8\u610f\u4e00\u4e0b\uff0c\u6211\u7684n\u548cm\u662f\u53cd\u7740\u8bfb(\u4e60\u60ef\u4e86)**\n\n### \u6e90\u7a0b\u5e8f\uff1a\n```cpp\n#include<cstdio>\n#include<iostream> \nusing namespace std;\nint sum,b[102],f[102][102];\nint a[102][102],u[102],v[102],ans,n,m,x,y;\nbool find(int k)//\u627e\u589e\u5e7f\u8def\n{\n\tif (k==m+1) return 1;\n    //\u5982\u679c\u5df2\u7ecf\u627e\u5230\u5c31\u9000\u51fa(\u5e9f\u8bdd)\n\tfor (int i=0;i<=m+1;i++)\n\t  if (b[i]==-1&&((f[k][i]==0&&a[k][i])||f[i][k])) \n      //b[i]==-1\u8bf4\u660e\u6ca1\u4eba\u4e0e\u4ed6\u5339\u914d\n      //f[k][i]==0\u4e5f\u5c31\u662f\u8bf4\u53ef\u4ee5\u4e0e\u4ed6\u5339\u914d\n      //a[k][i]\u662f\u5339\u914d\u524d\u63d0\uff0c\u8981\u80fd\u914d\u5bf9\u624d\u53ef\u4ee5\"\u5408\u4f5c\"\n\t  //f[i][k]\u662f\u9006\u5411\u8fb9\uff0c\u5982\u679c\u662f\u9006\u5411\u8fb9\u800c\u4e14\u5df2\u7ecf\u53cd\u5411\"\u6d41\"\u4e86\n      //\u5c31\u53ef\u4ee5\u5408\u4f5c\n      {\n\t  \t b[i]=k;\n         //\u8bb0\u5f55\u524d\u9a71\n\t  \t if (find(i)) return 1;\n         //\u9012\u5f52\u5224\u65ad\u662f\u5426\u662f\u589e\u5e7f\u8def\n\t  }\n\treturn 0;\n}\nvoid update()//\u66f4\u65b0\n{\n\tint l=m+1;//\u4ece\u540e\u5f80\u524d\u53bb\u8fb9\n\twhile (l)\n\t{\n\t\tif (a[b[l]][l]) f[b[l]][l]++;\n        //\u6d41\u91cf+1\n\t\tif (a[l][b[l]]) f[l][b[l]]--;\n        //\u6b63\u5411\u6d41\u548c\u9006\u5411\u6d41\u62b5\u6d88\n\t\tl=b[l];\n        //\u7ee7\u7eed\u5f80\u524d\u641c\n\t}\n\tans++;\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor (int i=1;i<=n;i++)\n\t a[0][i]=1;\n    //\u6e90\u70b9\u8fde\u5916\u7c4d\u98de\u884c\u5458\n\tfor (int j=n+1;j<=m+1;j++)\n\t a[j][m+1]=1;\n    //\u82f1\u7c4d\u98de\u884c\u5458\u8fde\u6c47\u70b9\n\twhile (x!=-1&&y!=-1)\n\t scanf(\"%d%d\",&x,&y),a[x][y]=1;\n    //\u8bfb\u5165\uff0c\u5efa\u56fe(\u8fb9)\n\tfor (int i=0;i<=m+1;i++) b[i]=-1;\n\tb[0]=0;\n    //\u521d\u59cb\u5316\n\twhile (find(0))//\u627e\u589e\u5e7f\u8def\n\t{\n\t\tupdate();\n\t\tfor (int i=1;i<=m+1;i++) b[i]=-1;\n\t}\n\tif (!ans) \n    \uff5b\n    \tputs(\"No Solution!\");\n      \treturn 0;\n     }//\u5982\u679c\u6ca1\u6709(\u5176\u5b9e\u4e0d\u6253\u4e5fAC\uff0c\u53ea\u662f\u6253\u4e86\u4e25\u8c28\u4e00\u4e9b)\u5c31\u8f93\u51faNo Solution!\n\tprintf(\"%d\\n\",ans);\n    //\u8f93\u51fa\u5339\u914d\u603b\u6570\n    for (int i=1;i<=n;i++)\n    {\n        for (int j=n+1;j<=m;j++)\n            if (f[i][j]) {printf(\"%d %d\\n\",i,j);break;}\n        //\u679a\u4e3e\u627e\u6bcf\u4e00\u5bf9\u5339\u914d\u7684\u98de\u884c\u5458\n    }\n}\n```\n\u6211\u5f88\u8ba4\u771f\u4e86  ",
        "postTime": 1529496020,
        "uid": 52999,
        "name": "BEqueN",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2756 \u3010\u98de\u884c\u5458\u914d\u5bf9\u65b9\u6848\u95ee\u9898\u3011"
    },
    {
        "content": "\u4e00\u770b\u6807\u7b7e\uff0c\u5e94\u8be5\u5c31\u77e5\u9053\u8fd9\u9898\u662f\u4ec0\u4e48\u9898\u4e86\u5427\u3002\u3002\u3002\n\n\u4e00\u770b\u8fd9\u9898\uff0c\u4e0d\u662f\u6c42\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u5417\uff0c~~\u4e0d\u77e5\u9053\u4e8c\u5206\u56fe\u7684\u8bf7\u51fa\u95e8\u5de6\u8f6c\u5ea6\u5a18~~\uff0c\u9274\u4e8e\u8fd9\u9898\u662f\u7f51\u7edc\u6d4124\u9898\u4e4b\u4e00\uff0c\u6211\u4eec\u5c31\u8dd1\u6700\u5927\u6d41\u5427.\n\n\n\u5c31\u662f\u5728\u539f\u56fe\u4e0a\u5efa\u4e00\u4e2a\u6e90\u70b9\uff0c\u518d\u5efa\u4e00\u4e2a\u6c47\u70b9\uff0c\u8dd1\u6700\u5927\u6d41\u5373\u53ef.\n\u5173\u4e8e\u7f51\u7edc\u6d41\u4e3a\u4ec0\u4e48\u80fd\u6c42\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\uff0c\u53ef\u4ee5\u53bb\u522b\u7684\u535a\u5ba2\u4e0a\u4e0a\u770b\uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u8d58\u53d9.\n\n\n\u770b\u5404\u4f4d\u5927\u4f6c\u90fd\u7528\u7684DINIC\u548c\u5308\u7259\u5229\uff0c\u849f\u84bb\u4e0d\u4f1a\u7528\uff0c\u6240\u4ee5\u53ea\u597d\u8001\u8001\u5b9e\u5b9e\u7684\u8dd1EK\u4e86...\n\n\u4e0b\u9762\u662f\u4ee3\u7801\uff08\u6211\u76f8\u4fe1\u5404\u4f4d\u5927\u4f6c\u4e5f\u4e0d\u9700\u8981\u4ee3\u7801\uff09\uff1a\n\n```\n#include<iostream>\n#include<cstring>\n#include<cstdlib>\n#include<queue>\n\nusing namespace std;\n\nint N,M,S,T;\nqueue<int> q;\nstruct node\n{\n\tint v,edge;\n}pre[100100];\nint inque[10010];\nlong long ans;\nint edge[200020],nxt[200020],head[200020],w[200020],tot=1;//tot\u5fc5\u987b\u4ece\u5947\u6570\u5f00\u59cb\uff01\uff01\uff01\uff0c\u56e0\u4e3a\u6709\u6291\u6216\u64cd\u4f5c \nint u,v,pi[20020]; \n\nvoid clear(node a[])\n{\n\tfor(int i=0;i<=100000;i++)\n\ta[i].v=a[i].edge=-1;\n}\n\nvoid add(int x,int y,int z)//\u52a0\u8fb9\n{\n\tedge[++tot]=y;\n\tnxt[tot]=head[x];\n\thead[x]=tot;\n\tw[tot]=z;\n}\n\nint BFS()//\u627e\u589e\u5e7f\u8def\n{\n\tclear(pre);//\u521d\u59cb\u5316\n\twhile(q.size())  q.pop();\n\tmemset(inque,0,sizeof(inque));\n\tq.push(S);\n\tinque[S]=1;//\u52a0\u5165\u6e90\u70b9\n\twhile(q.size())\n\t{\n\t\tint x=q.front();q.pop();\n\t\tfor(int i=head[x];i;i=nxt[i])//\u6269\u5c55\n\t\t{\n\t\t\tint j=edge[i];\n\t\t\tif(w[i]&&!inque[j])//\u6ca1\u6709\u5165\u6808\u4e14\u6d41\u91cf\u4e0d\u4e3a0\n\t\t\t{\n\t\t\t\tpre[j].v=x;\n\t\t\t\tpre[j].edge=i;\n\t\t\t\tif(j==T)  return 1;//\u627e\u5230\u4e86\uff0c\u8fd4\u56de\n\t\t\t\tq.push(j);inque[j]=1;\t\t\t\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;//\u6ca1\u6709\u589e\u5e7f\u8def\n}\n\nint EK()\n{\n\twhile(BFS())//\u627e\u5230\u4e86\u4e00\u6761\u589e\u5e7f\u8def\n\t{\n\t\tfor(int i=T;i!=S;i=pre[i].v)//\u904d\u5386\u8fd9\u6761\u589e\u5e7f\u8def\n\t\t{\n\t\t\tint j=pre[i].edge;\n\t\t\tpi[pre[i].v]=i;//\u8bb0\u5f55\u5339\u914d\u70b9\u5bf9\n\t\t\tw[j]-=1;\n\t\t\tw[j^1]+=1;\n\t\t}\n\t\tans+=1;\n\t}\n\tif(ans==0)//\u5b8c\u5168\u6ca1\u6709\u5339\u914d\u7684\u60c5\u51b5\n\t{\n\t\tcout<<\"No Solution!\"<<endl;\n\t\texit(0);\n\t}\n\treturn ans;\n}\n\nint main()\n{\n\tcin>>M>>N;S=1926,T=1817;//\u6211\u4e00\u76f4\u8bfbN,M\uff0c\u8c03\u4e86\u597d\u957f\u65f6\u95f4\u3002\u3002\u3002\n\tfor(int i=1;i<=N;i++)//\u8fd9\u91cc\u4e3a\u4e86\u4e0d\u8d77\u51b2\u7a81\uff0ci+N\u8868\u793a\u82f1\u519b\uff0c\u5f53\u7136i+M\u4e5f\u884c\n\t\tadd(i+N,T,1),add(T,i+N,0);//\u4f7f\u82f1\u519b\u548c\u6c47\u70b9\u76f8\u8fde\n\tfor(int i=1;i<=M;i++)\n   \t  add(i,S,0),add(S,i,1);//\u4f7f\u5916\u7c4d\u519b\u548c\u6e90\u70b9\u76f8\u8fde\n\twhile(1)\n\t{\n\t\tcin>>u>>v;\n\t\tif(u==-1&&v==-1)  break;\n\t\tadd(u,v+N,1);add(v+N,u,0);\n\t}\n\t\n\tcout<<EK()<<endl;\n\tfor(int i=1;i<=N;i++) \n\t  \tif(pi[i]) \n\t\tcout<<i<<\" \"<<pi[i]-N<<endl;//\u8f93\u51fa\n\t\n\treturn 0;\n}\n```\n",
        "postTime": 1566549264,
        "uid": 126136,
        "name": "Plus_Ultra",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2756 \u3010\u98de\u884c\u5458\u914d\u5bf9\u65b9\u6848\u95ee\u9898\u3011"
    },
    {
        "content": "# \u7f51\u7edc\u6d4124\u9898---\u98de\u884c\u5154\u914d\u5bf9\u65b9\u6848\u95ee\u9898\n\n\u9898\u610f:[\u81ea\u5df1\u5eb7](https://www.luogu.org/problem/P2756)\n\n## \u89e3\u6cd5\u4e00:\u6c42\u7f51\u7edc\u6700\u5927\u6d41\n\u5bf9\u4e8em\u53ea\u5916\u7c4d\u98de\u884c\u5154 \u548c n\u53ea\u5624\u7c4d\u98de\u884c\u5154   \n\u6211\u4eec\u5148\u628a\u5916\u7c4d\u98de\u884c\u5154 \u62f4\u5728\u4e00\u6839\u6869\u5b500\u4e0a \u518d\u628a\u5624\u7c4d\u98de\u884c\u5154\u62f4\u5728\u67f1\u5b50n+1\u4e0a     \n\u8fd9\u4e2a\u65f6\u5019 \u6211\u4eec\u5728\u628a\u6bcf\u5bf9\u5154\u5154\u7528\u7ef3\u5b50\u8fde\u4e0a                  \n\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u6839\u636e\u4ed6\u4eec\u7684\u8fde\u63a5\u6027\u6765\u627e\u5230\u4e00\u79cd\u80fd **\u4f7f\u8fde\u5728\u4e00\u8d77\u7684\u5154\u5154\u6700\u591a** \u7684\u65b9\u6cd5!\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7f51\u7edc\u6700\u5927\u6d41\u7b97\u6cd5\u6765\u6a21\u62df\u7528\u7ef3\u5b50\u6813\u5154\u5154 \u627e\u5154\u5154\u7684\u8fc7\u7a0b\n\n31ms/760.00KB/1.88KB C++11   \n**\u4ee3\u7801\u9171 OVO\u2193**\n```cpp\n//P2756 \u98de\u884c\u5458\u914d\u5bf9\u65b9\u6848\u95ee\u9898\n//dinic\u6c42\u89e3\u7f51\u7edc\u6700\u5927\u6d41 \u65e0\u5f53\u524d\u5f27\u4f18\u5316\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define N 101\n#define M 10002\n#define inf 0x7f7f7f\n#define v to[i]\n\nint n,m,s,t,dep[N],cnt=0,cur[M];\nint head[M],to[M],from[M],nex[M],w[M],ecnt;\n\nvoid ae(int x,int y,int z){\n    from[ecnt]=x;\n    to[ecnt]=y;\n    w[ecnt]=z;\n    nex[ecnt]=head[x];\n    head[x]=ecnt++;//\u56e0\u4e3a\u8d85\u7ea7\u6e90\u70b9\u662f0 \u6240\u4ee5\u4f1a\u5b580\u7684\u4fe1\u606f \u6240\u4ee5ecnt\u8981\u540e++\n}\n\nbool bfs(){\n    queue<int> q;\n    memset(dep,-1,sizeof(dep));\n    memcpy(cur,head,sizeof(cur));\n    dep[s]=1;\n    q.push(s);\n    while(!q.empty()){\n        int u=q.front();\n        q.pop();\n        for(int i=head[u];i!=-1;i=nex[i]){//\u8fd9\u91cc\u7684i\u4e5f\u662f\u76f8\u540c\u7684\u9053\u7406!\n            if(dep[v]==-1 and w[i]>0){\n                dep[v]=dep[u]+1;\n                q.push(v);\n            }\n        }\n    }\n    return dep[t]!=-1;\n}\n\nint dfs(int u,int low){\n    if(u==t) return low;\n    int ret=low;\n    for(int i=head[u];i!=-1;i=nex[i]){\n        if(dep[v]==dep[u]+1 and w[i]>0){\n            int flow=dfs(v,min(ret,w[i]));\n            if(flow>0){\n                w[i] -= flow;\n                w[i^1] += flow;\n            }\n            ret-=flow;\n            if(!ret)\n                break;\n        }\n    }\n    return low-ret;\n}\n\nint dinic(){\n    int tmp=0;\n    while(bfs()){\n        tmp+=dfs(s,inf);\n    }\n    return tmp;\n}\n\nint main(){\n    memset(head,-1,sizeof(head));\n    scanf(\"%d%d\",&m,&n);\n    s=0,t=n+1;\n    for(int i=1;i<=m;i++){\n        ae(s,i,1);\n        ae(i,s,0);\n    }\n    for(int i=m+1;i<=n;i++){\n        ae(i,t,1);\n        ae(t,i,0);\n    }\n    int t1,t2;\n    while(1){\n        scanf(\"%d%d\",&t1,&t2);\n        if(t1==-1&&t2==-1) break;\n        ae(t1,t2,1);\n        ae(t2,t1,0);\n    }\n    int ans=dinic();\n    if(ans==0){\n        printf(\"No Solution!\");\n        return 0;\n    }\n    printf(\"%d\\n\",ans);\n    for(int i=0;i<=ecnt;i++){\n        if(from[i]>=1 && from[i]<=m)\n            if(to[i]>m && to[i]<=n)\n                if(w[i]==0)\n                    printf(\"%d %d\\n\",from[i],to[i]);\n    }\n    return 0;\n}\n```\n\n## \u89e3\u6cd5\u4e8c\n\u6211\u4eec\u53ef\u80fd\u4f1a\u89c9\u5f97\u8981\u81ea\u5df1\u6765\u4eba\u529b\u914d\u5bf9\u5154\u5154\u592a\u7d2f\u4e86(~~\u6c57!\u5c31\u662f\u61d2~~           \n\u6240\u4ee5! \u6211\u4eec\u8ba9\u5154\u5154\u4eec\u81ea\u5df1\u53bb\u627e\u4e0e\u81ea\u5df1\u914d\u5bf9\u7684 \u5c31\u884c\u5566                 \n\u6211\u4eec\u53ef\u4ee5\u7528\u5308\u7259\u5229\u7b97\u6cd5\u6765\u5b9e\u73b0\u8fd9\u4e00\u8fc7\u7a0b                  \n\u6211\u4eec\u8ba9\u5de6\u8fb9\u7684\u5154\u5154(u)\u53bb\u627e\u53f3\u8fb9\u4e0e\u5b83\u5339\u914d\u5408\u6cd5\u7684\u5154\u5154(v)           (\u5373\u76f8\u8fde\u7684\u4e24\u53ea\u5154\u5154   \n\u7136\u540e \u8ba9 \u4e0e\u5b83(u)\u5339\u914d\u5408\u6cd5\u7684\u5154\u5154(v) \u7ee7\u7eed \u5411\u5de6\u627e\u6709\u6ca1\u6709\u4e0e\u5176(v)\u5408\u6cd5\u7684\u5154\u5154(x)   \n\u5982\u679c\u6709 \u5c31\u8ba9(u)\u548c(v)\u5728\u4e00\u8d77~  \n\u53ea\u8981\u6211\u4eec\u4e00\u76f4\u91cd\u590dm\u6b21(\u5de6\u8fb9\u5154\u5154\u7684\u6570\u91cf)\u5c31\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\u4e86\n\n(33ms/824.00KB/1.30KB C++11)   \n**\u4ee3\u7801\u9171 OVO\u2193**\n```cpp\n//\u4f7f\u7528\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d--\u5308\u7259\u5229\u7b97\u6cd5\n//P2756 \u98de\u884c\u5458\u914d\u5bf9\u65b9\u6848\u95ee\u9898\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define N 101\n#define M 10002\n#define inf 0x7f7f7f\n#define v to[i]\n\nint n,m,s,t,vis[N],match[N];\nint pair1[N],pair2[N];\nint head[M<<1],to[M<<1],from[M<<1],nex[M<<1],w[M<<1],ecnt;\n\nvoid ae(int x,int y){\n    ecnt++;\n    from[ecnt]=x;\n    to[ecnt]=y;\n    nex[ecnt]=head[x];\n    head[x]=ecnt;\n}\n\nbool dfs(int u){\n    for(int i=head[u];i;i=nex[i]){\n        if(!vis[v]){\n            vis[v]=1;\n            if(!match[v] or dfs(match[v])){\n                //\u2191\u5982\u679cv\u6ca1\u6709\u88ab\u5339\u914d \u6216 v\u5f53\u524d\u5339\u914d\u7684\u70b9(v\u7684\u4e0b\u4e00\u4e2a\u70b9)\u6709\u5176\u4ed6\u70b9\u4e0e\u4e4b\u5339\u914d\n                match[v]=u;//\u8fd9\u6837\u5c31\u53ef\u4ee5u\u5c31\u53ef\u4ee5\u548cv\u5339\u914d\u5566qwq\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nint hungary(int tmp){\n    int cnt=0;\n    for(int i=1;i<=tmp;i++){\n        memset(vis,0,sizeof(vis));\n        if(dfs(i))\n            cnt++;\n    }\n    return cnt;\n}\n\nint main(){\n    scanf(\"%d%d\",&m,&n);//m\u5de6 n\u53f3 \n    int t1,t2;\n    while(1){\n        scanf(\"%d%d\",&t1,&t2);\n        if(t1==-1 and t2==-1) \n            break;\n        ae(t1,t2);//\u5308\u7259\u5229\u5efa\u5355\u5411\u56fe\n    }\n    int ans=-1;\n    ans=hungary(m);//\u4ece\u5de6\u5411\u53f3\u627e \n    if(ans==-1){\n        printf(\"No Solution!\\n\");\n        return 0;\n    }\n    printf(\"%d\\n\",ans);\n    for(int i=1;i<=n;i++){\n        if(match[i])//\u53ea\u8981\u4e0d\u662f0 \u5c31\u8bf4\u660e\u6709\u4e0e\u4e4b\u5339\u914d\u7684\u70b9\n            printf(\"%d %d\\n\",match[i],i);\n    }\n    return 0;\n}\n```",
        "postTime": 1572517219,
        "uid": 58751,
        "name": "VanillaYuzume",
        "ccfLevel": 0,
        "title": "\u98de\u884c\u5154\u914d\u5bf9\u65b9\u6848\u95ee\u9898"
    },
    {
        "content": "\u9898\u76ee\u540d\u79f0\uff1a\u98de\u884c\u5458\u914d\u5bf9\u65b9\u6848\u95ee\u9898\n\n\u6765\u6e90\uff1a\u7f51\u7edc\u6d4124\u9898\n# \u94fe\u63a5\n## \u535a\u5ba2\u94fe\u63a5\n- [\u535a\u5ba2\u56ed](https://www.cnblogs.com/Alvin-Tree/p/11593308.html)\n- [CSDN](https://blog.csdn.net/weixin_43890363/article/details/101448496)\n- [\u6d1b\u8c37\u535a\u5ba2](https://www.luogu.org/blog/131abc155-7341-6424/solution-p2756)\n- [\u6d1b\u8c37\u9898\u89e3](https://www.luogu.org/problemnew/solution/P2756)\n\n## \u9898\u76ee\u94fe\u63a5\n- LibreOJ(6000) [\u9898\u76ee](https://loj.ac/problem/6000) [\u63d0\u4ea4](https://loj.ac/problem/6000#submit_code) [\u72b6\u6001](https://loj.ac/submissions?problem_id=6000) [\u8ba8\u8bba](https://loj.ac/discussion/problem/6000)\n- \u6d1b\u8c37(P2756) [\u9898\u76ee](https://www.luogu.org/problem/P2756) [\u63d0\u4ea4](https://www.luogu.org/problem/P2756#submit) [\u72b6\u6001](https://www.luogu.org/record/list?pid=P2756) [\u8ba8\u8bba](https://www.luogu.org/discuss/lists?forumname=P2756)\n\n# \u9898\u76ee\u5927\u610f\n\u6709$n$\u4e2a\u82f1\u56fd\u7a7a\u519b\u548c$m$\u4e2a\u5916\u7c4d\u7a7a\u519b\uff0c\u4e00\u67b6\u98de\u673a\u9700\u8981\u4e00\u5bf9\u4e92\u76f8\u914d\u5408\u7684\u82f1\u56fd\u7a7a\u519b\u548c\u5916\u7c4d\u7a7a\u519b\u914d\u5408\u3002\u7ed9\u51fa\u914d\u5408\u60c5\u51b5\uff0c\u6c42\u51fa\u6700\u591a\u80fd\u53d1\u52a8\u591a\u5c11\u98de\u673a\u3002\n# \u63d0\u793a\n\u6ce8\u610f\u9898\u76ee\u6765\u6e90\uff01\n# \u9898\u89e3\n\u8fd9\u662f\u4e00\u9053\u6700\u5927\u6d41\u88f8\u9898\u3002\n\n\u4ece\u539f\u70b9\u5f00\u59cb\uff0c\u5411\u6bcf\u4e2a\u5916\u7c4d\u98de\u884c\u5458\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a$1$\u3002\uff08\u56e0\u4e3a\u6bcf\u4e2a\u5916\u7c4d\u98de\u884c\u5458\u53ea\u80fd\u88ab\u6307\u6d3e\u4e00\u6b21\uff09\n\n\u5982\u679c\u5916\u7c4d\u98de\u884c\u5458$i$\u4e0e\u82f1\u56fd\u98de\u884c\u5458$j$\u914d\u5408\uff0c\u90a3\u4e48\u5c31\u4ece$i$\u5411$j$\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a$1$\u3002\uff08\u6bcf\u4e2a\u5916\u7c4d\u98de\u884c\u5458\u4e0e\u6bcf\u4e2a\u82f1\u56fd\u98de\u884c\u5458\u6700\u591a\u914d\u5408\u4e00\u6b21\uff09\n\n\u4ece\u6bcf\u4e2a\u82f1\u56fd\u98de\u884c\u5458\u5411\u6c47\u70b9\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a$1$\u3002\uff08\u4e00\u5bf9\u98de\u884c\u5458\u76f8\u4e92\u914d\u5408\u53ea\u80fd\u53d1\u52a8\u4e00\u67b6\u98de\u673a\uff09\n\n\u62ff\u6837\u4f8b\u8bf4\u8bdd\uff0c\u5982\u56fe\u6240\u793a\n![\u300a\u98de\u884c\u5458\u914d\u5bf9\u65b9\u6848\u95ee\u9898\u300b\u7f51\u7edc\u56fe](https://cdn.luogu.com.cn/upload/image_hosting/nlrcjsyc.png)\n\u5176\u4e2d$F$\u8868\u793a\u5916\u7c4d\u98de\u884c\u5458\uff0c$E$\u8868\u793a\u82f1\u56fd\u98de\u884c\u5458\u3002\n\n\u7136\u540e\u8dd1\u4e00\u904d$Dinic$\u5c31\u5f97\u5230\u7b54\u6848\u4e86\u3002\n```cpp\n//C++\n#include<bits/locale_facets.h>\n#include<stdio.h>\n#include<memory.h>\n#include<queue>\n#define downt(i,n) for(int i=n;i;i=back[i])\n#define forto(name,i,d,u) for(name i=d;i<=u;i++)\n#define foruntil(name,i,d,u) for(name i=d;i<u;i++)\nconst int nm=201;\ninline void output(long long o); \ninline long long input();\ntemplate<int nn,int mm,typename name>struct network{\n#define nnn (nn+3)\n#define mmmm (mm<<2)+2\n\tint s,t,tot,nnnn,last[nnn],level[nnn],to[mmmm],arc[mmmm],back[mmmm];\n\tname c[mmmm];\n\tstd::queue<int>q;\n\tnetwork(){nnnn=nnn<<2,INIT();}\n#undef nnn\n#undef mmmm\n\tvoid INIT(){tot=1,memset(last,0,nnnn);}\n\tvoid add(int f,int t,name cap){to[++tot]=t,c[tot]=cap,back[tot]=last[f],last[f]=tot;}\n\tvoid insert(int f,int t,name cap){\n\t\tif(cap){\n\t\t\tif(cap<0)std::swap(f,t),cap=-cap;\n\t\t\tadd(f,t,cap),add(t,f,0);\n\t\t}\n\t}bool climb(){\n\t\tmemset(level,0,nnnn),q.push(s),level[s]=0;\n\t\tfor(int p,too;!q.empty();q.pop()){\n\t\t\tp=q.front(),level[p]++;\n\t\t\tdownt(i,last[p])\n\t\t\tif(c[i]&&!level[too=to[i]])level[too]=level[p],q.push(too);\n\t\t}return level[t];\n\t}name augment(int p,name m){\n\t\tif(p==t)return m;\n\t\tname sum=0,flow;\n\t\tint d=level[p]+1;\n        for(;arc[p];arc[p]=back[arc[p]])\n\t\tif(level[to[arc[p]]]==d&&c[arc[p]]){\n\t\t\tsum+=(flow=augment(to[arc[p]],std::min(c[arc[p]],(name)(m-sum)))),c[arc[p]]-=flow,c[arc[p]^1]+=flow;\n\t\t\tif(sum==m)return m;\n\t\t}return sum;\n\t}name Dinic(name inf){\n\t\tname maximum=0;\n\t\twhile(climb()){\n\t\t\tforuntil(int,i,s,t)arc[i]=last[i];\n\t\t\tmaximum+=augment(s,inf);\n\t\t}return maximum;\n\t}\n\tvoid new1(short m){\n\t\tshort n=input(),a,b;\n\t\ts=0,t=n+m+1;\n\t\tforto(short,i,1,m)insert(0,i,1);\n\t\tforto(short,i,m+1,m+n)insert(i,t,1);\n\t\twhile(true){\n\t\t\tif((a=input())==-1)break;\n\t\t\tinsert(a,input(),1);\n\t\t}output(Dinic(100)),putchar('\\n');\n\t\tforto(short,i,1,m)\n\t\tfor(short j=last[i];back[j];j=back[j])\n\t\tif(!c[j])output(i),putchar(' '),output(to[j]),putchar('\\n');\n\t}\n};network<200,40000,short>pilot;\nint main(){\n\tpilot.new1(input());\n\treturn 0;\n}inline void output(long long o){\n\tif(o<0)putchar('-'),o=-o;\n\tif(o>=10)output(o/10);\n\tputchar(o%10^'0');\n}inline long long input(){\n\tbool minus=false;\n\tchar now=getchar();\n\tlong long i=0;\n\tfor(;!isdigit(now);now=getchar())\n\tif(now=='-')minus=!minus;\n\tfor(;isdigit(now);now=getchar())i=(i<<3)+(i<<1)+(now^'0');\n\treturn minus?-i:i;\n}\n```\n# \u9898\u96c6\n- [\u7f51\u7edc\u6d4124\u9898](https://blog.csdn.net/weixin_43890363/article/details/101509320)\n\n\u5e0c\u671b\u8fd9\u4e9b\u5916\u7c4d\u98de\u884c\u5458\u91cc\u80fd\u6709\u4e2d\u56fd\u98de\u884c\u5458\u3002\n\n\u8fd8\u662f\u4e2d\u56fd\u98de\u884c\u5458\u5f3a\u3002",
        "postTime": 1569492373,
        "uid": 151425,
        "name": "\u5343\u5e74\u77e5\u4e4e_\u5929\u624d",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2756 \u3010\u98de\u884c\u5458\u914d\u5bf9\u65b9\u6848\u95ee\u9898\u3011"
    },
    {
        "content": "\u770b\u4e86\u4e00\u4e0b\u4e0b\u9762\u7684\u9898\u89e3\uff0c\u8fd8\u662fdinic\u7f51\u7edc\u6d41\u5c45\u591a\uff0c\u5308\u7259\u5229\u7684\u9898\u89e3\u4e5f\u6ca1\u6709\u5f88\u8be6\u7ec6\u7684\u6ce8\u91ca\uff0c\u8fd9\u91cc\u8865\u5145\u4e00\u4e0b\uff0c\u5e0c\u671b\u5bf9\u5927\u5bb6\u5b66\u4e60\u5308\u7259\u5229\u7b97\u6cd5\u6709\u5e2e\u52a9\u3002\n\n\u5308\u7259\u5229\u7b97\u6cd5\u7684\u4ecb\u7ecd\u767e\u5ea6\u4e0a\u90fd\u6709\u5f88\u8be6\u7ec6\u7684\uff0c\u5f88\u591a\u535a\u5ba2\u90fd\u5199\u7684\u975e\u5e38\u7684\u597d\uff0c\u6211\u4e2a\u4eba\u5c31\u662f\u8fd9\u4e48\u5b66\u8d77\u6765\u7684\u3002\n\n\u4e0d\u8fc7\u6700\u597d\u81ea\u5df1\u5148\u6253\u4e00\u904d\uff0c\u7136\u540e\u677f\u5b50\u8981\u770b\u3002\u6211\u51ed\u7740\u81ea\u5df1\u7684\u7406\u89e3\u6253\u4e86\uff0c\u4f46\u662f\u5f88\u591a\u7ec6\u8282\u5904\u7406\u90fd\u6ca1\u6ce8\u610f\u5230\uff0c\u800c\u4e14\u4ee3\u7801\u5f88\u4e11\u3002\n\n\u4e0d\u8fc7\u653e\u5fc3\uff0c\u6b64ac\u4ee3\u7801\u662f\u7ecf\u8fc7\u6539\u826f\u7684\u3002\n\n\u5177\u4f53\u6ce8\u91ca\u770b\u4ee3\u7801\u3002\u5047\u88c5\u4f60\u5df2\u7ecf\u6709\u5308\u7259\u5229\u7b97\u6cd5\u7684\u57fa\u7840\u3002\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cctype>\n#include<cstring>\n#define N (201)\n#define M (10001)\nusing namespace std;\nint n, m, x, y, tot, k;\nint head[N], nxt[M], a[M], con[N];//\u524d\u4e09\u4e2a\u4e3a\u90bb\u63a5\u8868\u7684\u6570\u7ec4\uff0ccon\u4e3a\u5339\u914d\u7684\u6570\u7ec4\nbool vis[N];//vis\u8868\u793a\u8fd9\u4e2a\u70b9\u5728\u8fd9\u6b21\u641c\u7d22\u4e2d\u662f\u5426\u88ab\u8d70\u8fc7\u4e86\ntemplate <typename T> void read(T &t){\n    bool fl = true;\n    t = 0;\n    char p = getchar();\n    while(!isdigit(p)){\n        if (p == '-') fl = false;\n         p = getchar();\n    }\n    do{\n        t = t * 10 + p - 48;\n        p = getchar();\n    }while (isdigit(p));\n    if (!fl) t = -t;\n} //\u5feb\u8bfb\nvoid add(int x, int y){\n    a[++k] = y; nxt[k] = head[x]; head[x] = k;\n```\n}//\u5b58\u56fe\nbool DFS(int x){//\u8868\u793a\u6211\u7ed9\u7b2cx\u53f7\u70b9\u627e\u4e00\u4e2a\u5339\u914d\uff0creturn\u7684bool\u8868\u793a\u80fd\u5426\u627e\u5230\u5339\u914d\n\n```cpp\n    for (int p = head[x]; p; p = nxt[p]){\n        if (!vis[a[p]]){\n            vis[a[p]] = 1;//\u5982\u679c\u6709\u4e00\u4e2a\u70b9\u6ca1\u6709\u88ab\u9009\uff0c\u76f4\u63a5\u9009\u6389\n            if (!con[a[p]]||DFS(con[a[p]])) {//or \u7684\u524d\u4e00\u534a\u5c31\u662f\u6ca1\u6709\u914d\u5bf9\u8fc7\uff0c\u540e\u4e00\u534a\u8868\u793a\u6211\u53ef\u4ee5\u7ed9\u5979\u539f\u5148\u7684\u5339\u914d\u9009\u4e00\u4e2a\u540e\u7ee7\n                con[a[p]] = x;//\u8bb0\u5f55\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\nint main(){\n    read(n); read(m);\n    read(x); read(y);\n    while (!(x == -1 && y == -1)){\n        add(x, y);\n        read(x); read(y);\n```\n}//\u6309\u9898\u610f\u8bfb\u5165\n```cpp\n    for (int i = 1; i <= n; i++){\n        memset(vis, 0, sizeof(vis));\n        tot += DFS(i);//\u5982\u679c\u53ef\u4ee5\u627e\u5230\uff0cbool\u4f1a\u8fd4\u56de1\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u7b54\u6848\u52a0\u4e0a\u53bb\u3002\n    } \n    printf(\"%d\\n\", tot);\n    if (tot == 0) printf(\"No Solution!\");\n    else for (int i = n+1; i <= m; i++) if (con[i]) printf(\"%d %d\\n\", con[i], i);//\u65b9\u6848\u8f93\u51fa\n    return 0;\n} \n\u521a\u5b66\u63d0\u9ad8\u7ec4\uff0c\u5bf9\u8fd9\u4e9b\u7b97\u6cd5\u6ca1\u6709\u5f88\u597d\u7684\u7406\u89e3\uff0c\u53ea\u662f\u7ed9\u5927\u5bb6\u63d0\u4f9b\u4e00\u4e2a\u53c2\u8003\uff0c\u4e5f\u5e0c\u671b\u8fd9\u7bc7\u9898\u89e3\u80fd\u591f\u5e2e\u5230\u5927\u5bb6\n```",
        "postTime": 1503401045,
        "uid": 15232,
        "name": "Michael_Li",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2756 \u3010\u98de\u884c\u5458\u914d\u5bf9\u65b9\u6848\u95ee\u9898\u3011"
    },
    {
        "content": "\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u95ee\u9898\u3002\u6a21\u677f\u9898\u3002\u6240\u4ee5\u6211\u5c31\u8bf4\u4e00\u4e0b\u8fd9\u4e2a\u6a21\u677f\u3002\n\u9898\u76ee\u4e2d\u4e00\u8fb9\u662f\u82f1\u56fd\u98de\u884c\u5458\uff0c\u4e00\u8fb9\u662f\u5916\u7c4d\u98de\u884c\u5458\u3002\u5982\u679c\u67d0\u4e2a\u82f1\u56fd\u98de\u884c\u5458\u548c\u67d0\u4e2a\u5916\u7c4d\u98de\u884c\u5458\u6709\u5339\u914d\u7684\u610f\u613f\u5c31\u7ed9\u4ed6\u4fe9\u8fde\u4e00\u6761\u8fb9\u3002\u7136\u540e\u5c31\u5f00\u59cb\u5339\u914d\u3002\u9898\u76ee\u8981\u6c42\uff1a\u6700\u591a\u6709\u591a\u5c11\u67b6\u98de\u673a\u53ef\u4ee5\u6d3e\u51fa\u3002\u5176\u5b9e\u5c31\u662f\u5728\u6c42\u6700\u5927\u8fb9\u5339\u914d\u3002\n```c\n#include<stdio.h>\n#include<iostream>\n#include<vector>\n#include<algorithm>\n#define MAXN  205\ntypedef  long long  LL;\nusing namespace std;\n\nvector<int> G[MAXN];\nbool vis[MAXN];\nint vv[MAXN];\nint Left[MAXN];\nint n,m;\n\nbool match(int u)  //\u5bf9\u6bcf\u4e00\u4e2a\u82f1\u56fd\u98de\u884c\u5458\u627e\u961f\u53cb\n{\n    for(int i=0;i<G[u].size();i++)   //\u679a\u4e3e\u6bcf\u4e00\u4e2a\u961f\u53cb\uff08\u5c31\u662f\u548c\u81ea\u5df1\u6709\u5339\u914d\u610f\u613f\uff0c\u8fde\u8fb9\u7684\uff09\n    {\n        int v=G[u][i];             //\u5916\u7c4d\u961f\u53cb\n        if(vis[v])                 //\u672c\u8f6e\u6b21\u6ca1\u6709\u5339\u914d\u8fc7\u8fd9\u4e2a\u961f\u53cb\uff08\u4e3a\u4e86\u9632\u6b62\u51fa\u73b0\u6b7b\u5faa\u73af\uff0c\u65e0\u9650\u6b21\u9012\u5f52\uff09\n            continue;\n        vis[v]=true;               //\u8fd9\u6b21\u5df2\u8fd1\u8bbf\u95ee\n        if(!vv[v]||match(vv[v]))   //\u8fd9\u4e2a\u5916\u7c4d\u98de\u884c\u5458\u6ca1\u6709\u82f1\u56fd\u7c4d\u961f\u53cb\u6216\u8005\u4ed6\u7684\u82f1\u56fd\u7c4d\u961f\u53cb\u53ef\u4ee5\u9009\u62e9\u5176\u4ed6\u7684\u5916\u56fd\u7c4d\u7136\u540e\u53ef\u4ee5\u628a\u8fd9\u4e2a\u5916\u56fd\u7c4d\u8ba9\u7ed9\u4ed6\n        {\n            vv[v]=u;              //\u5916\u7c4d\u98de\u884c\u5458\u7684\u961f\u53cb\n            Left[u]=v;            //\u82f1\u56fd\u98de\u884c\u5458\u7684\u961f\u53cb\n            return true;          //\u5339\u914d\u6210\u529f\uff0c\u8fd4\u56detrue\n        }\n    }\n    return false;                   //\u5339\u914d\u5931\u8d25\uff0c\u8fd4\u56defalse\n}\n\nint KM()\n{\n    memset(vv,0,sizeof(vv));\n    memset(Left,0,sizeof(Left));\n    int sum=0;\n    for(int i=1;i<=n;i++)\n    {\n        memset(vis,false,sizeof(vis));  //\u6bcf\u8f6e\u6b21\u5bf9\u5916\u7c4d\u98de\u884c\u5458\u521d\u59cb\u5316\uff0c\u9632\u6b62\u6b7b\u5faa\u73af\n        if(match(i))                   //\u7ed9\u6bcf\u4e2a\u82f1\u56fd\u98de\u884c\u5458\u505a\u5339\u914d\n            sum++;\n    }\n    return sum;                         //\u8fd4\u56de\u5339\u914d\u7ed3\u679c\n}\n\nint main()\n{\n    scanf(\"%d %d\",&m,&n);\n    int u,v;\n    while(scanf(\"%d %d\",&u,&v))\n    {\n        if(u==-1&&v==-1)\n            break;\n        G[u].push_back(v);   //\u548cu\u5339\u914d\u7684\u70b9\u6709v\n    }\n    int ans=KM();\n    if(ans==0)\n    {\n        printf(\"No Solution\\n\");\n        return 0;\n    }\n    printf(\"%d\\n\",ans);\n    for(int i=1;i<=n;i++)\n    {\n        if(Left[i])\n            printf(\"%d %d\\n\",i,Left[i]);\n    }\n    return 0;\n}\n\n```\n",
        "postTime": 1569458941,
        "uid": 210155,
        "name": "abandentsky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2756 \u3010\u98de\u884c\u5458\u914d\u5bf9\u65b9\u6848\u95ee\u9898\u3011"
    },
    {
        "content": "### \u98de\u884c\u5458\u914d\u5bf9\u65b9\u6848\u95ee\u9898\n\u8003\u8651\u6bcf\u4e00\u4e2a\u98de\u884c\u5458\uff0c\u6700\u591a\u4ec5\u53ef\u4ee5\u9a7e\u9a76\u4e00\u67b6\u98de\u673a\uff0c\u4e00\u961f\u5173\u7cfb\u4e5f\u4ec5\u80fd\u4f7f\u7528\u4e00\u6b21\uff0c\u6240\u4ee5\n\n\u5bf9\u4e8e\u5916\u7c4d\u98de\u884c\u5458$i:s\\xrightarrow{1} i$\n\n\u5bf9\u4e8e\u82f1\u56fd\u98de\u884c\u5458$j:j\\xrightarrow{1} t$\n\n\u5bf9\u4e8e\u4e00\u7ec4\u5173\u7cfb$i,j:i\\xrightarrow{1} j$\n\n\u4ece $s$ \u5230 $t$ \u8dd1\u6700\u5927\u6d41\u8bb0\u5f55\u8def\u5f84\u5373\u53ef\n\n\u7528 $after$ \u6570\u7ec4\u8bb0\u5f55\u4e00\u4e2a\u70b9\u7684\u540e\u7ee7\n\n\uff08\u56e0\u4e3a\u9898\u91cc\u8f93\u5165\u7684$i$\u4e0e$j$\u4e00\u5b9a\u4e0d\u76f8\u7b49\uff0c\u6240\u4ee5\u8bf4\u4e5f\u53ef\u4ee5\u5f53\u6210\u4e8c\u5206\u56fe\u8dd1\u6700\u5927\u5339\u914d\uff0c\u5bf9\u4e8e\u98de\u884c\u5458\u8bb0\u5f55\u5339\u914d\u70b9\u5373\u53ef\uff09\n\n$\\mathcal{Code}:$\n```cpp\n#include<queue>\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n#define N 100010\n#define int long long\n#define debug cout<<__LINE__<<\" \"<<__FUNCTION__<<\"\\n\"\ninline int read(){\n\tint x=0,y=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')y=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}\n\treturn x*y;\n}\nint n,m,s,t,dep[N];\nint head[N],tot=1,front,used[N];\nint ans;\nint after[N];\nstruct Node{\n    int nxt,to,dis;\n}edge[N<<2];\ninline void add(int x,int y,int z){\n    edge[++tot].nxt=head[x];\n    edge[tot].to=y;\n    edge[tot].dis=z;\n    head[x]=tot;\n}\nqueue<int> q;\ninline int bfs(){\n\tregister int i;\n\tfor(i=0;i<=n+1;i++) dep[i]=-1, used[i]=head[i];\n\tdep[s]=0;\n\tq.push(s);\n\twhile(!q.empty()){\n\t\tfront=q.front();q.pop();\n//\t\tcout<<front<<\" \";debug;\n\t\tfor(i=head[front];i;i=edge[i].nxt){\n\t\t\tif(edge[i].dis&&dep[edge[i].to]==-1){\n\t\t\t\tdep[edge[i].to]=dep[front]+1;q.push(edge[i].to);\n\t\t\t}\n\t\t}\n\t}\n//\tdebug;\n\treturn dep[t]!=-1;\n}\nint dfs(int now,int limit){\n\tif(!limit||now==t) return limit;\n\tint flow=0;\n\tfor(int &i=used[now],pro;i;i=edge[i].nxt){\n\t\tif(dep[edge[i].to]==dep[now]+1&&edge[i].dis){\n\t\t\tpro=dfs(edge[i].to,min(limit,edge[i].dis));\n\t\t\tif(!pro) continue;\n\t\t\tedge[i].dis-=pro;\n\t\t\tedge[i^1].dis+=pro;\n\t\t\tflow+=pro;\n\t\t\tlimit-=pro;\n\t\t\tafter[now]=edge[i].to;//\u8bb0\u5f55\u8def\u5f84\n\t\t\tif(!limit) return flow;\n\t\t}\n\t}\n//\tcout<<flow<<\" \";debug;\n//\tsystem(\"pause\");\n\treturn flow;\n}\ninline void Dinic(){\n\twhile(bfs()){ans+=(dfs(s,10000000001LL));}\n}\nsigned main(){\n//\tfreopen(\"a.in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\tm=read();n=read();\n\ts=0;t=n+1;\n\tfor(int i=1;i<=m;i++) add(s,i,1),add(i,s,0);\n\tfor(int i=m+1;i<=n;i++) add(i,t,1),add(t,i,0);\n\tint x=read(),y=read();\n\twhile(x!=-1&&y!=-1){\n\t\tadd(x,y,1);add(y,x,0);\n\t\tx=read();y=read();\n\t}\n\tDinic();\n\tif(ans==0){//\u65e0\u89e3\u60c5\u51b5\n\t\tputs(\"No Solution!\");return 0;\n\t}\n\tcout<<ans<<\"\\n\";\n\tfor(int i=1;i<=m;i++){\n\t\tif(after[i]){\n\t\t\tcout<<i<<\" \"<<after[i]<<\"\\n\";\n\t\t}\n\t}\n//\tfclose(stdin);\n//\tfclose(stdout);\n\treturn 0;\n}\n\n```",
        "postTime": 1564057267,
        "uid": 123081,
        "name": "zh_dou",
        "ccfLevel": 7,
        "title": "[\u9898\u89e3]P2756|\u98de\u884c\u5458\u914d\u5bf9\u65b9\u6848\u95ee\u9898"
    },
    {
        "content": "## ISAP\u4e8c\u5206\u56fe\u5339\u914d\n\n\u770b\u5230\u4e8c\u5206\u56fe\u5339\u914d\u76f4\u63a5\u4e0a$ISAP$\uff0c\u540a\u6253\u5308\u7259\u5229\n\n### \u524d\u7f6e\u77e5\u8bc6\uff1aISAP\u6700\u5927\u6d41\u7b97\u6cd5\n\n\u6309\u7167\u60ef\u4f8b\u653e\u5b66\u957f\u535a\u5ba2 **[\u4f20\u9001\u95e8](https://www.cnblogs.com/ubospica/p/9974285.html)**\n\n### \u5efa\u56fe\n\n(1) \u4ee5$0$\u4e3a\u8d85\u7ea7\u6e90\u70b9\uff0c$n + 1$\u4e3a\u8d85\u7ea7\u6c47\u70b9\uff0c\u4ece$0$\u5411$1$\u5230$m$\u7684\u6240\u6709\u70b9\u5efa\u7acb\u5bb9\u91cf\u4e3a$1$\u7684\u8fb9\uff0c\u4ece$m + 1$\u5230$n$\u7684\u6240\u6709\u70b9\u5411$n + 1$\u5efa\u7acb\u5bb9\u91cf\u4e3a$1$\u7684\u8fb9\n\n(2) \u5bf9\u4e8e\u6bcf\u4e00\u5bf9\u5339\u914d$match_{i,j}$\uff0c\u4ece$i$\u5230$j$\u5efa\u7acb\u5bb9\u91cf\u4e3a$1$\u7684\u8fb9\n\n### \u4ee3\u7801\n\n\u6b63\u5e38$ISAP$\u4ece\u8d85\u7ea7\u6e90\u70b9\u5230\u8d85\u7ea7\u6c47\u70b9\u8dd1\u6700\u5927\u6d41\uff0c\u52a0\u5f53\u524d\u5f27\u4f18\u5316\u76f4\u63a5\u8d77\u98de\n\n***\u4ee3\u7801\u5982\u4e0b\uff08\u4e60\u60ef\u6027$O3$\uff09***\n\n\u666e\u901a\u7248\n\n```cpp\n\n#pragma GCC optimize(3)\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <queue>\n\nusing std::queue;\n\nconst int MAXN = 105;\nconst int INF = 0x3f3f3f3f;\n\nstruct Edge{\n    int to, val;\n    Edge *next, *ops;\n    Edge(int to, int val, Edge *next):to(to), val(val), next(next){}\n};\n\nEdge *head[MAXN];\n\nint n, m;\n\nvoid AddEdge(int from, int to, int val) {\n    head[from] = new Edge(to, val, head[from]);\n    head[to] = new Edge(from, 0, head[to]);\n    head[from]->ops = head[to]; head[to]->ops = head[from];\n}\n\nnamespace ISAP{\n    int s, t, maxflow;\n    int dep[MAXN], gap[MAXN];\n    \n    void Bfs() {\n        memset(dep, -1, sizeof(dep));\n        memset(gap, 0, sizeof(gap));\n        dep[t] = 0; gap[dep[t]]++;\n        queue<int> q; q.push(t);\n        while (!q.empty()){\n            int u = q.front(); q.pop();\n            for (Edge *e = head[u]; e; e = e->next) {\n                int v = e->to;\n                if (dep[v] != -1) continue;\n                dep[v] = dep[u] + 1;\n                gap[dep[v]]++;\n                q.push(v);\n            }\n        }\n    }\n\n    int Dfs(int u, int flow) {\n        if (u == t) {\n            maxflow += flow;\n            return flow;\n        }\n        int used = 0;\n        for (Edge *e = head[u]; e; e = e->next) {\n            int v = e->to;\n            if (e->val && dep[v] == dep[u] - 1) {\n                int mi = Dfs(v, std::min(e->val, flow - used));\n                if (mi) {\n                    used += mi;\n                    e->val -= mi;\n                    e->ops->val += mi;\n                    if (used == flow) return used;\n                }\n            }\n        }\n        gap[dep[u]]--;\n        if (gap[dep[u]] == 0) dep[s] = n + 3;\n        dep[u]++;\n        gap[dep[u]]++;\n        return used;\n    }\n\n    void Work() {\n        maxflow = 0;\n        Bfs();\n        while (dep[s] < n + 2) Dfs(s, INF);\n    }\n\n    void Print() {\n        if (maxflow == 0) {\n            puts(\"No Solution!\");\n            return;\n        }\n        printf(\"%d\\n\", maxflow);\n        for (int i = 1; i <= m; i++) {\n            for (Edge *e = head[i]; e; e = e->next) {\n                int v = e->to;\n                if (v > m && v <= n && e->val == 0) printf(\"%d %d\\n\", i, v);\n            }\n        }\n    }\n}\n\nint main() {\n    scanf(\"%d %d\", &m, &n);\n    ISAP::s = 0; ISAP::t = n + 1;\n    memset(head, 0, sizeof(head));\n    for (int i = 1; i <= m; i++) {\n        AddEdge(0, i, 1);\n    }\n    for (int i = m + 1; i <= n; i++) {\n        AddEdge(i, n + 1, 1);\n    }\n    int x, y;\n    while (scanf(\"%d %d\", &x, &y), x != -1 && y != -1) {\n        AddEdge(x, y, 1);\n    }\n    ISAP::Work();\n    ISAP::Print();\n    return 0;\n}\n/*\n5 10\n1 7\n1 8\n2 6\n2 9\n2 10\n3 7\n3 8\n4 7\n4 8\n5 10\n-1 -1\n*/\n\n```\n\n\u4f18\u5316\u7248\n\n```cpp\n#pragma GCC optimize(3)\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <queue>\n\nusing std::queue;\n\nconst int MAXN = 105;\nconst int INF = 0x3f3f3f3f;\n\nstruct Edge{\n    int to, val;\n    Edge *next, *ops;\n    Edge(int to, int val, Edge *next):to(to), val(val), next(next){}\n};\n\nEdge *head[MAXN];\n\nint n, m;\n\nvoid AddEdge(int from, int to, int val) {\n    head[from] = new Edge(to, val, head[from]);\n    head[to] = new Edge(from, 0, head[to]);\n    head[from]->ops = head[to]; head[to]->ops = head[from];\n}\n\nnamespace ISAP{\n    int s, t, maxflow;\n    int dep[MAXN], gap[MAXN];\n    Edge *cur[MAXN];\n    void Bfs() {\n        memset(dep, -1, sizeof(dep));\n        memset(gap, 0, sizeof(gap));\n        dep[t] = 0; gap[dep[t]]++;\n        queue<int> q; q.push(t);\n        while (!q.empty()){\n            int u = q.front(); q.pop();\n            for (Edge *e = head[u]; e; e = e->next) {\n                int v = e->to;\n                if (dep[v] != -1) continue;\n                dep[v] = dep[u] + 1;\n                gap[dep[v]]++;\n                q.push(v);\n            }\n        }\n    }\n\n    int Dfs(int u, int flow) {\n        if (u == t) {\n            maxflow += flow;\n            return flow;\n        }\n        int used = 0;\n        for (Edge *&e = cur[u]; e; e = e->next) {\n            int v = e->to;\n            if (e->val && dep[v] == dep[u] - 1) {\n                int mi = Dfs(v, std::min(e->val, flow - used));\n                if (mi) {\n                    used += mi;\n                    e->val -= mi;\n                    e->ops->val += mi;\n                    if (used == flow) return used;\n                }\n            }\n        }\n        gap[dep[u]]--;\n        cur[u] = head[u];\n        if (gap[dep[u]] == 0) dep[s] = n + 3;\n        dep[u]++;\n        gap[dep[u]]++;\n        return used;\n    }\n\n    void Work() {\n        for (int i = 0; i <= n; i++) cur[i] = head[i];\n        maxflow = 0;\n        Bfs();\n        while (dep[s] < n + 2) Dfs(s, INF);\n    }\n\n    void Print() {\n        if (maxflow == 0) {\n            puts(\"No Solution!\");\n            return;\n        }\n        printf(\"%d\\n\", maxflow);\n        for (int i = 1; i <= m; i++) {\n            for (Edge *e = head[i]; e; e = e->next) {\n                int v = e->to;\n                if (v > m && v <= n && e->val == 0) printf(\"%d %d\\n\", i, v);\n            }\n        }\n    }\n}\n\nint main() {\n    scanf(\"%d %d\", &m, &n);\n    ISAP::s = 0; ISAP::t = n + 1;\n    memset(head, 0, sizeof(head));\n    for (int i = 1; i <= m; i++) {\n        AddEdge(0, i, 1);\n    }\n    for (int i = m + 1; i <= n; i++) {\n        AddEdge(i, n + 1, 1);\n    }\n    int x, y;\n    while (scanf(\"%d %d\", &x, &y), x != -1 && y != -1) {\n        AddEdge(x, y, 1);\n    }\n    ISAP::Work();\n    ISAP::Print();\n    return 0;\n}\n/*\n5 10\n1 7\n1 8\n2 6\n2 9\n2 10\n3 7\n3 8\n4 7\n4 8\n5 10\n-1 -1\n*/\n```",
        "postTime": 1549619063,
        "uid": 126376,
        "name": "Irelia\u10e6",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2756 \u3010\u98de\u884c\u5458\u914d\u5bf9\u65b9\u6848\u95ee\u9898\u3011"
    },
    {
        "content": "\u7b80\u5355\u7684\u4e8c\u5206\u56fe\u5339\u914d , \u6ce8\u610f\u5230\u8981\u8f93\u51fa\u88ab\u9009\u7684\u70b9 , \u6240\u4ee5\u6211\u4eec\u770b\u4f60\u7684\u6b63\u5411\u8fb9\u6709\u6ca1\u6709\u88ab\u7559\u7a7a\u5c31\u597d\u4e86\u3002\n\n\u94fe\u5f0f\u524d\u5411\u661f\u8981\u8bb0\u5f55 $from_i$ \u548c $reach_i$\u3002\n\n\u663e\u7136\u8981\u5efa\u7acb\u8d85\u6e90\u8d85\u6c47\u3002\u8dd1\u7684\u662f\u6bd4\u8f83\u4f18\u8d8a\u7684 $ISAP$\u3002\n\n```pascal\n// luogu-judger-enable-o2\nUses math;\n\nvar\n    value,reach,from,next:array[-1..10000] of longint;\n    gap,dis,cnt:array[-1..10000] of longint;\n    i,l,r,n,m,source,sink,tot,nn,ans:longint;\n    maxflow:int64;\n\nprocedure add(l,r,sum:longint);\nbegin\n    inc(tot);\n    from[tot]:=l;\n    reach[tot]:=r;\n    value[tot]:=sum;\n    next[tot]:=cnt[l];\n    cnt[l]:=tot;\nend;\n\nfunction Dfs(now,flow:longint):longint;\nvar i,k,mindis,ret:longint;\nbegin\n    mindis:=n-1; ret:=flow;\n    if now=sink then exit(flow);\n    i:=cnt[now];\n    while i<>-1 do\n    begin\n        if value[i]>0 then\n        begin\n            if dis[now]=dis[reach[i]]+1 then\n            begin\n                k:=Dfs(reach[i],min(ret,value[i]));\n                dec(value[i],k); inc(value[i xor 1],k);\n                dec(ret,k);\n                if dis[source]>=n then exit(flow-ret);\n                if ret=0 then break;\n            end;\n            mindis:=min(mindis,dis[reach[i]]);\n        end;\n        i:=next[i];\n    end;\n    if ret=flow then\n    begin\n        dec(gap[dis[now]]);\n        if gap[dis[now]]=0 then dis[source]:=n;\n        dis[now]:=mindis+1;\n        inc(gap[dis[now]]);\n    end;\n    exit(flow-ret);\nend;\n\nbegin\n    filldword(cnt,sizeof(cnt) div 4,maxlongint*2+1); tot:=1;\n    read(n,m); source:=1; sink:=n+m+2; nn:=n;\n\n    for i:=1 to n do begin add(source,i+1,1); add(i+1,source,0); end;\n    read(l,r);\n    while l<>-1 do begin add(l+1,r+n+1,1); add(r+n+1,l+1,0); read(l,r); end;\n    for i:=1 to m do begin add(i+n+1,sink,1); add(sink,i+n+1,0); end;\n    n:=n+m+2;\n\n    gap[source]:=n;\n    while dis[source]<n do inc(maxflow,Dfs(source,maxlongint div 84));\n    for i:=1 to tot do if (from[i]<>source)and(reach[i]<>sink)and(i mod 2=0)and(value[i]=0) then inc(ans);\n    writeln(ans);\n    for i:=1 to tot do if (from[i]<>source)and(reach[i]<>sink)and(i mod 2=0)and(value[i]=0) then writeln(from[i]-1,' ',reach[i]-nn-1);\nend.\n```",
        "postTime": 1540814849,
        "uid": 77760,
        "name": "arfa",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2756 \u3010\u98de\u884c\u5458\u914d\u5bf9\u65b9\u6848\u95ee\u9898\u3011"
    },
    {
        "content": "\u4e00\u9053\u4e8c\u5206\u56fe\u88f8\u9898\u3002\u5173\u4e8e\u7f51\u7edc\u6d41\u89e3\u4e8c\u5206\u56fe\uff0c\u4e0d\u61c2\u7684\u53ef\u4ee5\u770b\u6211\u7684\u8fd9\u9898\u89e3\uff1a[\u4e8c\u5206\u56fe](https://www.luogu.org/blog/jianuo/solution-p3386 \"\u4e8c\u5206\u56fe\")\n\n\u8fd9\u9053\u9898\u552f\u4e00\u7684\u96be\u70b9\u5c31\u662f\u8f93\u51fa\u65b9\u6848\u3002\u4f46\u5176\u5b9e\u4ed4\u7ec6\u60f3\u4e00\u60f3\u4e5f\u4e0d\u96be\u3002\n\n\u5f53\u4e00\u4e2a\u70b9\u5f80\u540e\u589e\u5e7f\u4e861\u7684\u6d41\u91cf\u65f6\uff0c\u5982\u679c\u8fd9\u4e2a\u70b9\u5728\u5de6\u534a\u8fb9\uff0c\u5c31\u628a\u4ed6\u7684\u914d\u5bf9\u70b9\u6539\u4e3a\u6b63\u5728\u589e\u5e7f\u7684\u4e0b\u4e00\u4e2a\u70b9\uff08\u4e0d\u597d\u76f4\u63a5\u89e3\u91ca\uff0c\u770b\u4ee3\u7801\u5427\uff09\n\n\u4ee3\u7801:\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n#include<vector>\n#include<queue>\nusing namespace std;\nconst int maxn=1e7,inf=1e9;\nstruct edge{\n    int v,c,f,nxt;\n}e[maxn];\nint s,t,n,m,mm,cnt,h[maxn],lev[maxn],match[maxn];\nqueue<int> q;\nvoid add(int u,int v,int w);\nint maxflow(void);\nint bfs(void);\nint dfs(int x,int flow);\nint main(){\n    ios::sync_with_stdio(false);\n    cin>>n>>m;\n    s=0;t=n+m+1;\n    memset(h,-1,sizeof(h));\n    for(int i=1;i<=n;i++) add(s,i,1),add(i,s,0);\n    for(int i=n+1;i<=n+m;i++) add(i,t,1),add(t,i,0);\n    int u,v;\n    while(true){\n        cin>>u>>v;\n        if(v==-1 || u==-1) break;\n        add(u,v,1);add(v,u,0);\n    }\n    int ans=maxflow();\n    if(ans==0) cout<<\"No solution!\";\n    else cout<<ans<<endl;\n    for(int i=1;i<=n;i++) if(match[i]!=0)cout<<i<<\" \"<<match[i]<<endl;\n    //system(\"pause\");\n    return 0;\n}\nvoid add(int x,int y,int z)\n{\n    e[cnt].nxt=h[x];\n    e[cnt].c=z;e[cnt].f=0;\n    e[cnt].v=y;\n    h[x]=cnt++;\n}\nint maxflow(void){\n    int ans=0;\n    while(bfs())\n        ans+=dfs(s,inf);\n    return ans;\n}\nint bfs(void){\n    memset(lev,0,sizeof(lev));\n    lev[s]=1;q.push(s);\n    while(!q.empty()){\n        int u=q.front();q.pop();\n        for(int i=h[u];i!=-1;i=e[i].nxt){\n            int v=e[i].v;\n            if(e[i].c>e[i].f && !lev[v]) lev[v]=lev[u]+1,q.push(v);\n        }\n    }\n    return lev[t];\n}\nint dfs(int x, int flow) {\n    int af = 0;\n    if (x == t) return flow;\n    for (int i = h[x]; i != -1; i = e[i].nxt) {\n        if (flow <= af) break;\n        int v = e[i].v;\n        if (lev[v] == lev[x] + 1) {\n            int maxf = dfs(v, min(e[i].c - e[i].f, flow - af));\n            if(maxf!=0) {\n                if(x<=n&&x!=s) match[x]=v;//\u5c31\u662f\u8fd9\u91cc\uff0c\u628ax\u7684\u914d\u5bf9\u70b9\u6539\u4e3av\uff0c\u4ed4\u7ec6\u60f3\u60f3\u4e3a\u4ec0\u4e48\u3002\n            }\n            e[i].f += maxf;\n            e[i ^ 1].f -= maxf;\n            af += maxf;\n        }\n    }\n    return af;\n}\n\n```",
        "postTime": 1513609270,
        "uid": 30066,
        "name": "Jianuo_Zhu",
        "ccfLevel": 6,
        "title": "\u7f51\u7edc\u6d4124\u9898\u7b2c\u4e00\u9898-\u98de\u884c\u5458\u914d\u5bf9\u65b9\u6848\u95ee\u9898"
    },
    {
        "content": "**\u7528\u7684\u662f\u6700\u5927\u6d41\u7684EK\u7b97\u6cd5\u3002\u5c060\u70b9\u548c\u6bcf\u4e00\u4e2a\u70b9\u548cn+m+1\u7684\u70b9\u76f8\u8fde\uff0c\u6bcf\u4e2a\u70b9\u7684\u5bb9\u91cf\u90fd\u4e3a1\uff0c\u6c42\u51fa\u7684\u6700\u5927\u6d41\u5c31\u662f\u7b54\u6848\u3002**\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<vector>\n#include<queue>\n#define mm(a) memset(a,0,sizeof(a))\nusing namespace std;\nbool d[100001];\n\nstruct edge\n{\n    int from,to,cap,flow;\n    edge(int u,int v,int c,int f):from(u),to(v),cap(c),flow(f) {}\n};\n\nint n,m,r,a[100001],p[100001],en[100001],st[100001],f[100001];\nvector<edge> edges;\nvector<int> g[100001];\n\nvoid init(int n)\n{\n    for(int i=0;i<n;i++) g[i].clear();\n    edges.clear();\n}\n\nvoid add(int from,int to,int cap)\n{\n    edges.push_back(edge(from,to,cap,0));\n    edges.push_back(edge(to,from,0,0));\n    int m=edges.size();\n    g[from].push_back(m-2);\n    g[to].push_back(m-1);\n}\n\nint maxflow(int s,int t)\n{\n    int flow=0;\n    for(;;)\n    {\n        mm(a);\n        queue<int> q;\n        q.push(s);\n        a[s]=1;\n        while(!q.empty())\n        {\n            int x=q.front(); q.pop();\n            for(int i=0;i<g[x].size();i++)\n            {\n                edge& e= edges[g[x][i]]; \n                if(!a[e.to] && e.cap>e.flow)\n                {\n                    p[e.to]=g[x][i];\n                    a[e.to]=min(a[x],e.cap-e.flow);\n                    q.push(e.to);\n                }\n            }\n            if(a[t]) break;\n        }\n        if(!a[t]) break;\n        int sum=0,last;\n        for(int i=t;i!=s;i=edges[p[i]].from)\n        {\n            edges[p[i]].flow+=a[t];\n            edges[p[i]^1].flow-=a[t];\n            if(i!=t && i!=s) \n            {\n                sum++;\n                if((sum&1)==0) f[i]=last; else last=i;\n            }\n        }\n        flow+=a[t];\n    }\n    return flow;\n}\n\nint main()\n{\n    int b,c;\n    scanf(\"%d%d%d%d\",&m,&n,&b,&c);\n    r=m+n+1;\n    init(r);\n    for(;;)\n    {\n        if(c==-1 && b==-1) break;\n        if(!d[b]) \n        {\n            add(0,b,1);\n            d[b]=1;\n        }\n        add(b,c,1);\n        if(!f[c])\n        {\n            add(c,r,1);\n            f[c]=1;\n        }\n        scanf(\"%d%d\",&b,&c);\n    }\n    mm(f);\n    int t=maxflow(0,r);\n    if(t!=0) \n    {\n        printf(\"%d\\n\",t);\n        for(int i=1;i<=m;i++) \n        if(f[i]) printf(\"%d %d\\n\",i,f[i]);\n    }\n    else printf(\"No Solution!\");\n    return 0;\n}\n```",
        "postTime": 1493085991,
        "uid": 34110,
        "name": "pluszero",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2756 \u3010\u98de\u884c\u5458\u914d\u5bf9\u65b9\u6848\u95ee\u9898\u3011"
    },
    {
        "content": "\u9996\u5148\u6839\u636e\u6807\u7b7e\uff0c\u6211\u4eec\u53ef\u4ee5\u505a\u4e00\u4e2a\u521d\u6b65\u5224\u65ad\uff1a\n## \u8fd9\u662f\u4e00\u9053\u7f51\u7edc\u6d41\n\u5bf9\u6211\u6765\u8bf4\uff0c\u7f51\u7edc\u6d41\u57fa\u7840\u9898\u6700\u559c\u6b22\u5199dinic\uff08\u53ef\u80fd\u4e0d\u662f\u8fd9\u4e48\u62fc\u7684\uff09  \n### \u4e0b\u9762\u542c\u6211\u6162\u6162\u9053\u6765  \n\u9996\u5148\u8fd9\u9053\u9898\u76f8\u5f53\u4e8e\u5c31\u662f\u8981\u8ba9\u6211\u4eec\u505a\u4e00\u4e2a\u5047\u7684\u6e90\u70b9\u548c\u4e00\u4e2a\u5047\u7684\u6c47\u70b9  \n\u5176\u6b21\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u589e\u5e7f\u8def\u8dd1\u4e00\u904ddinic\u7684\u6a21\u677f  \n\u81f3\u4e8e\u8f93\u51fa\u561b\uff0c\u56e0\u4e3a\u6709special judge\uff0c\u6240\u4ee5\u6211\u4eec\u5176\u5b9e\u53ef\u4ee5\u76f4\u63a5\u904d\u5386\u6240\u6709\u7684\u975e\u8d77\u70b9\u548c\u7ec8\u70b9\u7684\u70b9\uff0c\u5c06\u5176\u4e0e\u5bf9\u5e94\u70b9\u8f93\u51fa\u5c31\u53ef\u4ee5\uff1a\uff09  \n# \u4e0b\u9762\u9644\u4e0aAC\u4ee3\u7801\uff1a \n\n```cpp\n#include<bits/stdc++.h>\n#define int long long\n#define MK 100010\nusing namespace std;\nint n,m;\nint S,T;\nint dep[MK];\nint ans;\nint tot = 0;\n\nstruct node\n{\n\tint next,to,v;\n}e[MK*2];\n\nint ei = 1,h[MK];\n\nvoid add(int x,int y,int v)\n{\n\tei++;\n\te[ei].to = y;\n\te[ei].v = v;\n\te[ei].next = h[x];\n\th[x] = ei;\n}\n\nint bfs()\n{\n\tqueue<int>qu;\n\tmemset(dep,0,sizeof(dep));\n\tdep[S] = 1;\n\tqu.push(S);\n\twhile(!qu.empty())\n\t{\n\t\tint f1 = qu.front();\n\t\tqu.pop();\n\t\tfor(int i=h[f1];i;i=e[i].next)\n\t\t{\n\t\t\tint to = e[i].to;\n\t\t\tif(dep[to]!=0 || e[i].v==0)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tqu.push(to);\n\t\t\tdep[to] = dep[f1]+1;\n\t\t}\n\t}\n\treturn dep[T]!=0;\n}\n\nint dfs(int from,int maxflow)\n{\n\tif(from==T)\n\t{\n\t\treturn maxflow;\n\t}\n\tint flow = 0;\n\tfor(int i=h[from];i;i=e[i].next)\n\t{\n\t\tint to = e[i].to;\n\t\tif(dep[to]!=dep[from]+1 || e[i].v==0)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tint rst = dfs(to,min(maxflow-flow,e[i].v));\n\t\tif(rst==0)\n\t\t{\n\t\t\tdep[to] = 0;\n\t\t}\n\t\te[i].v -= rst;\n\t\te[i^1].v += rst;\n\t\tflow += rst;\n\t\tif(flow==maxflow)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn flow;\n}\n\nvoid dinic()\n{\n\twhile(bfs())\n\t{\n\t\tans += dfs(S,LLONG_MAX);\n\t}\n}\n\nsigned main()\n{\n\tscanf(\"%lld%lld\",&n,&m);\n\twhile(1)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%lld%lld\",&x,&y);\n\t\tif(x==-1 && y==-1)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\tadd(x,y,1);\n\t\tadd(y,x,0);\n\t}\n\tS = 1000;\n\tT = 1001;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tadd(S,i,1);\n\t\tadd(i,S,0);\n\t}\n\tfor(int i=n+1;i<=m;i++)\n\t{\n\t\tadd(i,T,1);\n\t\tadd(T,i,0);\n\t}\n\tdinic();\n\tif(ans==0)\n\t{\n\t\tprintf(\"No Solution\\n\");\n\t\treturn 0;\n\t}else\n\t{\n\t\tprintf(\"%lld\\n\",ans);\n\t\tfor(int i=2;i<=ei;i=i+2)\n\t\t{\n\t\t\tif(e[i].to!=S && e[i].to!=T && e[i^1].to!=S && e[i^1].to!=T && e[i^1].v!=0)\n\t\t\t{\n\t\t\t\tprintf(\"%lld %lld\\n\",e[i].to,e[i^1].to);\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n# \u849f\u84bb\u60f3\u6cd5\uff0c\u5927\u4f6c\u6307\u6559\uff01",
        "postTime": 1565010099,
        "uid": 90646,
        "name": "Xie_BR",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2756 \u3010\u98de\u884c\u5458\u914d\u5bf9\u65b9\u6848\u95ee\u9898\u3011"
    },
    {
        "content": "\u83ab\u540d\u5176\u5999\u7684\u5c31\u8fc7\u4e86\u3002\u3002\u3002\n\n\u7f51\u7edc\u6d41\u4e8c\u5341\u56db\u9898\u4e4b\u4e00\uff0c\u5176\u5b9e\u8ddf\u4e8c\u5206\u56fe\u5339\u914d\u6a21\u677f\u6ca1\u6709\u4ec0\u4e48\u533a\u522b\uff0c\u591a\u4e86\u4e00\u4e2a\u8def\u5f84\u8bb0\u5f55\u7f62\u4e86\n\n\n\n------------\n\u6211\u4eec\u5148\u4ece\u4e8c\u5206\u56fe\u5339\u914d\u5f00\u59cb\u8bb2\u8d77\uff08\u6ca1\u5565\u597d\u8bb2\u7684\uff09\n\n\u5308\u7259\u5229\u7b97\u6cd5\uff0c\u901a\u8fc7\u627e\u4e00\u6761\u589e\u5e7f\u8def\u6765\u8fed\u4ee3\u6c42\u51fa\u6700\u5927\u5339\u914d\uff0c\u4f46\u53ef\u80fd\u8fde\u6a21\u677f\u9898\u90fd\u8fc7\u4e0d\u4e86\uff08\u8fd9\u91cc\u6709\u60e8\u75db\u7684\u6559\u8bad\uff09\n\n\u6240\u4ee5\u6211\u4eec\u8981\u7528Dinic\u8dd1\u7f51\u7edc\u6d41\uff0c\u5efa\u7acb\u8d85\u7ea7\u6e90\u70b9\u548c\u8d85\u7ea7\u6c47\u70b9\u7ed9x\u90e8\u5206\u4e0e\u8d85\u7ea7\u6e90\u70b9\u8fde\u4e00\u6761\u8fb9\uff0cy\u90e8\u5206\u4e0e\u8d85\u7ea7\u6c47\u70b9\u8fde\u4e00\u6761\u8fb9\uff0c\u4e2d\u95f4\u7684\u8fb9\u6d41\u91cf\u8bbe\u4e3a\u4e00\u5373\u53ef\u8dd1\u6700\u5927\u6d41\uff0c\u7b54\u6848\u5373\u4e3a\u6240\u6c42\u3002\n\n~~\u8bc1\u660e\u5417\uff1f\uff1f\uff1f\u81ea\u5df1\u60f3\u60f3\uff0c\u5f88\u7b80\u5355\u7684~~\n\n```cpp\n\tscanf(\"%d %d\",&m,&n);\n\twhile (1)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d %d\",&x,&y);\n\t\tif (x==-1)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\tadd(x,y,1);\n\t\tadd(y,x,0);\n\t}\n\ts=0;\n\tt=n+1;\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tadd(s,i,1);\n\t\tadd(i,s,0);\n\t}\n\tfor (int i=m+1;i<=n;i++)\n\t{\n\t\tadd(i,t,1);\n\t\tadd(t,i,0);\n\t}\n\tdinic();\n\tif (!ans)\n\t{\n\t\tprintf(\"No Solution!\");\n\t}\n\telse\n\t{\n\t\tprintf(\"%d\\n\",ans);\n\t\tfor (int i=m+1;i<=n;i++)\n\t\t{\n\t\t\tif (!pre[i])\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tprintf(\"%d %d\\n\",i,pre[i]);\n\t\t}\n\t}\n```\n\u800c\u8def\u5f84\u8bb0\u5f55\u4e5f\u5f88\u7b80\u5355\uff0c\u6bcf\u6b21\u627e\u5230\u4e00\u6761\u589e\u5e7f\u8def\u65f6\uff0c\u6539\u53d8y\u90e8\u7684pre\u6570\u7ec4\u5373\u53ef\uff0c\u56e0\u4e3a\u4e00\u4e2ay\u90e8\u7684\u70b9\u6700\u591a\u5bf9\u5e94\u4e00\u4e2ax\u90e8\u7684\u70b9\uff0c\u6240\u4ee5\u6700\u540e\u66f4\u65b0\u51fa\u6765\u7684\u7236\u4eb2\u5fc5\u5b9a\u6ee1\u8db3\u6700\u4f18\u89e3\u3002\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n#include<cstdlib>\n#include<time.h>\n#include<queue>\n#define M 2010000\n#define inf 99999999\nusing namespace std;\nqueue <int> q;\nint cnt,head[M],s,t,m,n,ans,flag,dep[M],pre[M];\nstruct edge{\n\tint to,from,next,val,num,re;\n}e[M];\nvoid clear(queue<int>& q) {\n    queue<int> empty;\n    swap(empty, q);\n}\ninline void add(int u,int v,int w)\n{\n\te[++cnt].next=head[u];\n\te[cnt].to=v;\n\te[cnt].from=u;\n\te[cnt].val=w;\n\te[cnt].num=cnt;\n\tif (cnt%2==1)\n\t{\n\t\te[cnt].re=cnt+1;\n\t}\n\telse\n\t{\n\t\te[cnt].re=cnt-1;\n\t}\n\thead[u]=cnt;\n}\nint bfs()\n{\n\tmemset(dep,-1,sizeof(dep));\n\tdep[s]=0;\n\tq.push(s);\n\twhile (!q.empty())\n\t{\n\t\tint h=q.front();\n\t\tq.pop();\n\t\tfor (int i=head[h];i;i=e[i].next)\n\t\t{\n\t\t\tif (dep[e[i].to]==-1&&e[i].val>0)\n\t\t\t{\n\t\t\t\tdep[e[i].to]=dep[h]+1;\n\t\t\t\tq.push(e[i].to);\n\t\t\t}\n\t\t}\n\t}\n\tif (dep[t]!=-1)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\nint dfs(int u,int limit)\n{\n\tif (limit==0||u==t)\n\t{\n\t\treturn limit;\n\t}\n\tint flow=0;int f=0;\n\tfor (int i=head[u];i;i=e[i].next)\n\t{\n\t\tif (dep[u]+1==dep[e[i].to])\n\t\t{\n\t\t\tf=dfs(e[i].to,min(limit,e[i].val));\n\t\t\tif (!f)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tpre[e[i].to]=u;\n\t\t\tflow+=f;\n\t\t\tlimit-=f;\n\t\t\te[i].val-=f;\n\t\t\te[e[i].re].val+=f;\n\t\t\tif (limit<=0)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn flow;\n}\nvoid dinic()\n{\n\twhile (bfs())\n\t{\n\t\tans+=dfs(s,inf);\n\t}\n}\nint main()\n{\n\tscanf(\"%d %d\",&m,&n);\n\twhile (1)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d %d\",&x,&y);\n\t\tif (x==-1)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\tadd(x,y,1);\n\t\tadd(y,x,0);\n\t}\n\ts=0;\n\tt=n+1;\n\tfor (int i=1;i<=m;i++)\n\t{\n\t\tadd(s,i,1);\n\t\tadd(i,s,0);\n\t}\n\tfor (int i=m+1;i<=n;i++)\n\t{\n\t\tadd(i,t,1);\n\t\tadd(t,i,0);\n\t}\n\tdinic();\n\tif (!ans)\n\t{\n\t\tprintf(\"No Solution!\");\n\t}\n\telse\n\t{\n\t\tprintf(\"%d\\n\",ans);\n\t\tfor (int i=m+1;i<=n;i++)\n\t\t{\n\t\t\tif (!pre[i])\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tprintf(\"%d %d\\n\",i,pre[i]);\n\t\t}\n\t}\n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1563093717,
        "uid": 78290,
        "name": "Polaris_Dane",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2756 \u3010\u98de\u884c\u5458\u914d\u5bf9\u65b9\u6848\u95ee\u9898\u3011"
    },
    {
        "content": "\n\u5f88\u7b80\u5355\u7684\u7f51\u7edc\u6d41\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u82f1\u56fd\u98de\u884c\u5458\uff0c\u4ece\u6e90\u70b9\u5411\u5b83\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a$1$\u7684\u8fb9\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u5916\u56fd\u98de\u884c\u5458\uff0c\u4ece\u5b83\u5411\u6c47\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a$1$\u7684\u8fb9\n\n\u5bf9\u4e8e\u6bcf\u4e00\u5bf9\u53ef\u4ee5\u914d\u5bf9\u7684\u82f1\u56fd/\u5916\u56fd\u98de\u884c\u5458\uff0c\u4ece\u82f1\u56fd\u98de\u884c\u5458\u5411\u5916\u56fd\u98de\u884c\u5458\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a$1$\u7684\u8fb9\n\n\u7136\u540e\u8dd1dinic\u6a21\u677f\u5373\u53ef\n\n```cpp\n#include <bits/stdc++.h>\n\n#define R register\n#define ll long long\n#define cmax(a, b) ((a < b) ? b : a)\n#define cmin(a, b) ((a < b) ? a : b)\n#define sum(a, b, mod) ((a + b) % mod)\n\nconst int MaxN = 2e4 + 10;\nconst int MaxM = 5e5 + 10;\nconst int inf = (1 << 30);\n\nstruct edge\n{\n    int to, next, cap;\n};\n\nedge e[MaxM];\nint n, m, s = 20000, t = 20001, cnt = 1, ans;\nint head[MaxN], dep[MaxN], cur[MaxN], a[MaxN];\n\ninline void add(int u, int v, int c)\n{\n    ++cnt;\n    e[cnt].to = v;\n    e[cnt].next = head[u];\n    e[cnt].cap = c;\n    head[u] = cnt;\n}\n\ninline void add_edge(int u, int v, int c) { add(u, v, c), add(v, u, 0); }\n\ninline int read()\n{\n    int x = 0;\n    char ch = getchar();\n    while (ch > '9' || ch < '0')\n        ch = getchar();\n    while (ch <= '9' && ch >= '0')\n        x = (x << 1) + (x << 3) + (ch ^ 48), ch = getchar();\n    return x;\n}\n\ninline int bfs()\n{\n    memset(dep, 0, sizeof(dep));\n    memcpy(cur, head, sizeof(head));\n    std::queue<int> q;\n    dep[s] = 1;\n    q.push(s);\n    while (!q.empty())\n    {\n        int u = q.front();\n        q.pop();\n        for (int i = head[u]; i; i = e[i].next)\n        {\n            int v = e[i].to, c = e[i].cap;\n            if (dep[v] || !c)\n                continue;\n            dep[v] = dep[u] + 1;\n            q.push(v);\n        }\n    }\n    return dep[t];\n}\n\ninline int dinic(int u, int flow)\n{\n    if (u == t)\n        return flow;\n    int rest = flow;\n    for (int i = cur[u]; i && (flow - rest < flow); i = e[i].next)\n    {\n        int v = e[i].to, c = e[i].cap;\n        if (dep[v] != dep[u] + 1 || !c)\n            continue;\n        int k = dinic(v, cmin(rest, c));\n        if (!k)\n            dep[v] = dep[u] + 1;\n        else\n        {\n            e[i].cap -= k;\n            e[i ^ 1].cap += k;\n            rest -= k;\n        }\n    }\n    if (flow - rest < flow)\n        dep[u] = -1;\n    return flow - rest;\n}\n\nint main()\n{\n    n = read(), m = read();\n    int u, v;\n    for (int i = 1; i <= m; i++)\n        add_edge(s, i, 1);\n    for (int i = m + 1; i <= n; i++)\n        add_edge(i, t, 1);\n    while (scanf(\"%d%d\", &u, &v) == 2)\n        add_edge(u, v, 1);\n    int now = 0;\n    while (bfs())\n        while ((now = dinic(s, inf)))\n            ans += now;\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```\n\n",
        "postTime": 1559312682,
        "uid": 61966,
        "name": "little_sun",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2756 \u3010\u98de\u884c\u5458\u914d\u5bf9\u65b9\u6848\u95ee\u9898\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\u6709 $m$ \u4e2a\u5916\u7c4d\u98de\u884c\u5458\uff0c$(n-m)$\u4e2a\u82f1\u56fd\u98de\u884c\u5458\uff0c\u5176\u4e2d\uff0c\u6bcf\u4e00\u540d\u5916\u7c4d\u98de\u884c\u5458\u90fd\u53ef\u4ee5\u4e0e\u5176\u4ed6\u82e5\u5e72\u540d\u82f1\u56fd\u98de\u884c\u5458\u5f88\u597d\u5730\u914d\u5408\u3002\u628a\u5916\u7c4d\u98de\u884c\u5458\u548c\u82f1\u56fd\u98de\u884c\u5458\u4e24\u4e24\u7ec4\u5408\uff0c\u5141\u8bb8\u98de\u884c\u5458\u4e0d\u5339\u914d\uff0c\u6c42\u6700\u591a\u80fd\u5f88\u597d\u5730\u7ec4\u5408\u591a\u5c11\u5bf9\u98de\u884c\u5458\u3002\n\n\u5f88\u88f8\u7684\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u95ee\u9898\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528\u5308\u7259\u5229\u7b97\u6cd5~~\u6216\u8005\u5e26\u82b1\u6811(\u4e27\u5fc3\u75c5\u72c2)~~\u6c42\u51fa\u7ed3\u679c\u3002\n\u4f46\u662f\u65e2\u7136\u662f\u7f51\u7edc\u6d41 $24$ \u9898\u5c31\u597d\u597d\u7528\u7f51\u7edc\u6d41\u505a\u561b\u3002\n\n\u6784\u56fe\u65b9\u5f0f\uff1a\n1. \u9644\u52a0\u6e90\u6c47 $S$ \u548c $T$ \n2. \u8fde\u8fb9 $(S,i)$ \u6d41\u91cf\u4e3a $1$ $(1\\leqslant i\\leqslant m)$\n3. \u8fde\u8fb9 $(i,T)$ \u6d41\u91cf\u4e3a $1$ $(1\\leqslant i\\leqslant n-m)$\n4. \u5bf9\u4e8e\u539f\u56fe\u4e2d\u7684\u6bcf\u6761 $(i,j)$ \u9644\u52a0\u6d41\u91cf\u4e3a $1$ \n\n\u7136\u540e\u6700\u5927\u6d41\u5c31\u662f\u6700\u5927\u5339\u914d\u3002\u4e3a\u4ec0\u4e48\uff1f\n\n\u6211\u4eec\u77e5\u9053\uff0c\u5308\u7259\u5229\u7b97\u6cd5\u7684\u672c\u8d28\u5c31\u662f\u4e0d\u65ad\u5730\u5bfb\u627e\u589e\u5e7f\u8def\uff0c\u5f53\u627e\u4e0d\u5230\u589e\u5e7f\u8def\u7684\u65f6\u5019\uff0c\u5f53\u524d\u589e\u5e7f\u8def\u6570\u91cf\u5c31\u662f\u7b54\u6848\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u56fe\u4e0d\u518d\u8054\u901a\u7684\u65f6\u5019\uff0c\u5c31\u5f97\u5230\u4e86\u7b54\u6848\u3002\u90a3\u6709\u6ca1\u6709\u4ec0\u4e48\u65b9\u6cd5\u53ef\u4ee5\u76f4\u63a5\u628a\u56fe\u5206\u6210\u4e24\u534a\uff0c\u5e76\u4e14\u5c3d\u91cf\u591a\u7684\u5339\u914d\uff1f\n\n**\u6700\u5c0f\u5272**\u3002\u6211\u4eec\u77e5\u9053\uff0c\u4efb\u4f55\u6d41\u7684\u6d41\u91cf\u90fd\u65e0\u6cd5\u8d85\u8fc7\u6700\u5c0f\u5272\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6700\u591a\u53ea\u80fd\u6d41\u6700\u5c0f\u5272\u7684\u6d41\uff0c\u4e5f\u5c31\u662f\u7b54\u6848\u3002\n\n\u7136\u540e\u6839\u636e\u6700\u5927\u6d41\u6700\u5c0f\u5272\u5b9a\u7406\u6c42\u4e00\u904d\u6700\u5927\u6d41\u5373\u53ef\u3002\n\n\u5308\u7259\u5229\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f$\u0398(me)$\uff0c\u5176\u4e2d $e$ \u662f\u8fb9\u6570\u3002\n\n\u4e0d\u8981\u770b$Dinic$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$\u0398(n^2e)$\uff0c\u5bf9\u4e8e\u4e8c\u5206\u56fe\u8fd9\u6837\u7684\u56fe\uff0c\u5b83\u8868\u73b0\u5f97\u5f02\u5e38\u4f18\u79c0\uff1a\u590d\u6742\u5ea6\u6bd4\u5308\u7259\u5229\u8fd8\u4f4e\uff0c\u53ea\u6709$\u0398(\\sqrt{n}\\ e)$\n\n\u8fd9\u91cc\u7528\u4e86\u4e00\u79cd\u6298\u4e2d\u7684\u7b97\u6cd5\uff1a$ISap$\u3002\u5176\u5b9e\u8fd9\u4e2a\u7b97\u6cd5\u6ca1\u6709\u540d\u5b57\uff0c\u4f5c\u8005\u79f0\u5b83\u662f\u4e00\u79cd\u201c\u6539\u8fdb\u7684$Sap$\u201d ($Improve\\ \\ Sap$)\uff0c\u5b83\u5bf9\u4e8e\u4e8c\u5206\u56fe\u7684\u8868\u73b0\u6ca1\u6709$Dinic$ \u597d\uff0c\u4f46\u5bf9\u4e8e\u9664\u4e86\u4e8c\u5206\u56fe\u4ee5\u5916\u7684\u56fe\uff0c\u5b83\u7684\u8868\u73b0\u5341\u5206\u4f18\u5f02\u3002\u5177\u4f53\u601d\u60f3\u662f\u6bcf\u6b21\u589e\u5e7f\u5b8c\u6bd5\u540e\u901a\u8fc7\u9644\u8fd1\u7684\u70b9\u7684\u4e3e\u4f8b\u4fee\u6539\u5230\u6c47\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u800c\u4e0d\u662f\u8fdb\u884c\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3002\n\n\u4e0b\u9762\u7684\u4ee3\u7801\u7528\u94fe\u5f0f\u5411\u524d\u661f\u5b58\u8fb9\uff0c\u5bf9\u4e8e\u6570\u636e\u8f83\u5c0f\u7684\u65f6\u5019\u56de\u66f4\u5feb\uff0c$Isap$\u52a0\u4e86\u4e24\u4e2a\u4f18\u5316\uff0c$Gap$ \u548c\u5f53\u524d\u5f27\uff0c\u7528\u7684\u662f\u8fed\u4ee3\u800c\u4e0d\u662f\u9012\u5f52\u3002\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nstruct Edge{\n    int from,to,flow,next;\n};\nclass ISAP {\n\tstatic const int maxm=20010;\n\tstatic const int maxn=210;\n\tstatic const int INF=0x7f7f7f7f;\n    int n,s,t,len;\n    bool vis[maxn];\n    int dis[maxn];\n    int cur[maxn];\n    int p[maxn];\n    int num[maxn];\n    inline bool rev_bfs(void){\n        memset(vis,0,sizeof(vis));\n        queue<int> q;\n        q.push(t);\n        dis[t]=0;\n        vis[t]=1;\n        while(!q.empty()){\n            int x=q.front();\n            q.pop();\n            for(register int i=head[x];i;i=edges[i].next){\n                Edge &e=edges[i^1];\n                if(!vis[e.from]&&e.flow>0){\n                    vis[e.from]=1;\n                    dis[e.from]=dis[x]+1;\n                    q.push(e.from);\n                }\n            }\n        }\n        return vis[s];\n    }\n    //\u589e\u5e7f\n    inline int augment(){\n        int x=t,mx=INF;\n        while(x!=s){\n            Edge &e=edges[p[x]];\n            mx=min(mx,e.flow);\n            x=e.from;\n        }\n        x=t;\n        while(x!=s){\n            edges[p[x]].flow-=mx;\n            edges[p[x]^1].flow+=mx;\n            x=edges[p[x]].from;\n        }\n        return mx;\n    }\npublic:\n\tint head[maxn];\n\tEdge edges[maxm<<1];\n    inline void clear(){\n        memset(head,0,sizeof(head));\n        len=1;\n    }\n    inline ISAP(void){\n        memset(head,0,sizeof(head));\n        len=1;\n    }\n    inline void ins(int from,int to,int flow,int rev=0){\n        edges[++len]=((Edge){from,to,flow,head[from]});\n        head[from]=len;\n        edges[++len]=((Edge){to,from,rev,head[to]});\n        head[to]=len;\n    }\n    inline int max_flow(int s,int t,int n){\n        this->s=s,this->t=t,this->n=n;\n        int flow=0;\n        rev_bfs();\n        memset(num,0,sizeof(num));\n        for(int i=0; i<n; i++)\n            num[dis[i]]++;\n        int x=s;\n        memcpy(cur,head,sizeof(cur));\n        while(dis[s]<n){\n        \t\n            if(x==t){\n                flow+=augment();\n                x=s;\n            }\n            bool tf=false;\n            //\u5f53\u524d\u5f27\u4f18\u5316\n            for(register int &i=cur[x];i;i=edges[i].next){\n                Edge &e=edges[i];\n                if(e.flow>0&&dis[x]==dis[e.to]+1){\n                    tf=true;\n                    p[e.to]=i;\n                    x=e.to;\n                    break;\n                }\n            }\n            \n            if(!tf){\n                int m=n-1;\n                for(register int i=head[x];i;i=edges[i].next){\n                    Edge &e=edges[i];\n                    if(e.flow>0)\n                        m=min(m,dis[e.to]);\n                }\n                //Gap\u4f18\u5316\n                if(--num[dis[x]]==0)\n                    break;\n                num[dis[x]=m+1]++;\n                cur[x]=head[x];\n                if(x!=s)\n                    x=edges[p[x]].from;\n            }\n        }\n        return flow;\n    }\n}solve;\n//\u795e\u7ea7\u201c\u8bfb\u5165\u4f18\u5316\u201d\ninline char nc() {\n    static char buf[1000000],*p1=buf,*p2=buf;\n    return p1==p2&&(p2=(p1=buf)+fread(buf,1,1000000,stdin),p1==p2)?EOF:*p1++;\n}\ninline int read(int &sum) {\n    char ch=nc();\n    sum=0;\n    while(!(ch>='0'&&ch<='9'))\n        ch=nc();\n    while(ch>='0'&&ch<='9')\n        sum=(sum<<3)+(sum<<1)+(ch-48),ch=nc();\n    return sum;\n}\nint n,m;\nint main(void)\n{\n\tsolve.clear();\n\tscanf(\"%d%d\",&m,&n);\n\tint s=n+1,t=n+2,x,y;\n\tfor(int i=1;i<=m;i++)\n\t\tsolve.ins(s,i,1);\n\tfor(int i=m+1;i<=n;i++)\n\t\tsolve.ins(i,t,1);\n\twhile((~scanf(\"%d%d\",&x,&y))&&x!=-1&&y!=-1)\n\t\tsolve.ins(x,y,1);\n\tprintf(\"%d\\n\",solve.max_flow(s,t,n+3));\n\tfor(int i=1;i<=m;i++)\n\t\tfor(int j=solve.head[i];j;j=solve.edges[j].next)\n\t\t\tif(solve.edges[j].to!=s&&solve.edges[j].to!=t&&solve.edges[j].flow==0)\n\t\t\t\tprintf(\"%d %d\\n\",i,solve.edges[j].to);\n\treturn 0;\n}\n```",
        "postTime": 1521893249,
        "uid": 29372,
        "name": "glassy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2756 \u3010\u98de\u884c\u5458\u914d\u5bf9\u65b9\u6848\u95ee\u9898\u3011"
    },
    {
        "content": "# **\u88f8\u9898**\n# **[\u8be6\u89e3\u5728\u6b64](http://www.cnblogs.com/Misser-X/p/8639280.html)**\n\u9644\u4e0a\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<stdio.h>\n#include<string.h>\nusing namespace std;\nint m;\nint n;\nint x,y;\nint ans;\nint match[210];                                  //\u8bb0\u5f55\u5206\u914d\u76ee\u6807 \nint put[110][3];                                 //\u8f93\u51fa \nbool book[210];                                  //\u8bb0\u5f55\u526a\u679d \nbool way[210][210];                              //\u8bb0\u5f55\u65e0\u5411\u56fe\u7684\u8fb9 \ninline int read()                                //\u5feb\u901f\u8bfb\u5165 \n{\n\tint sign=1,num=0;\n\tchar ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-')sign=-1;ch=getchar();}\n\twhile(isdigit(ch)){num=num*10+(ch-'0');ch=getchar();}\n\treturn sign*num;\n}\nvoid init()                                      //\u8bfb\u5165\u51fd\u6570 \n{\n\tm=read();\n\tn=read();\n\twhile(x!=-1&&y!=-1)\n\t{\n\t\tx=read();                                //\u65e0\u5411\u8fb9\u5b58\u4e24\u6b21 \n\t\ty=read();\n\t\tway[x][y]=true;\n\t\tway[y][x]=true;\n\t}\n}\nbool dfs(int x)\n{\n\tfor(int y=m+n;y>0;--y)\n\t{\n\t\tif(way[x][y]&&book[y]==false)            //\u679a\u4e3e\u70b9x\u7684\u8fb9 \n\t\t{\n\t\t\tbook[y]=true;                        //\u8bb0\u5f55\u70b9y\u5df2\u88ab\u67e5\u627e\uff08\u5e76\u975e\u5206\u914d\uff09 \n\t\t\tif(match[y]==0||dfs(match[y]))       //\u82e5y\u6ca1\u6709\u88ab\u5206\u914d\u6216\u4e0ey\u5206\u914d\u7684\u4eba\u8fd8\u6709\"\u9000\"\u7684\u4f59\u5730 \n\t\t\t{\n\t\t\t\tmatch[x]=y;                      //\u50a8\u5b58\u5206\u914d\u76ee\u6807 \n\t\t\t\tmatch[y]=x;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nint main()                                       //\u770b\u4ee3\u7801\u5efa\u8bae\u4ecemian\u51fd\u6570\u770b\u8d77 \n{\n\tinit();\n\tfor(int i=1;i<=m+n;++i)                      //\u679a\u4e3e\u70b9 \n\t{\n\t\tmemset(book,false,sizeof(book));\n\t\tdfs(i);\n\t}\n\tfor(int i=1;i<=m+n;++i)\n\t\tif(match[i]!=0&&match[match[i]]!=0)       //\u9632\u6b62\u91cd\u590d\u8f93\u51fa \n\t\t{\n\t\t\tput[++ans][1]=i;\n\t\t\tput[ans][2]=match[i];\n\t\t\tmatch[match[i]]=0;\n\t\t}\n\tif(ans==0)                                   //\u7279\u5224 \n\t{\n\t\tputs(\"No Solution!\");\n\t\treturn 0;\n\t}\n\tprintf(\"%d\",ans); \n\tfor(int i=1;i<=ans;++i)\n\t\tprintf(\"\\n%d %d\",put[i][1],put[i][2]);\n}\n```",
        "postTime": 1521877400,
        "uid": 67841,
        "name": "yqkkkkk",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2756 \u3010\u98de\u884c\u5458\u914d\u5bf9\u65b9\u6848\u95ee\u9898\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u53ef\u80fd\u8bb8\u591a\u4eba\u770b\u5230\u76f4\u63a5\u7528\u5308\u7259\u5229\u7b97\u6cd5\u4e86\uff0c\u4f46\u662f\u84bb\u9e21\u7684\u6211\u4e0d\u4f1a\uff0c\u521a\u5f00\u59cb\u5f88\u65e0\u5948\uff0c\u60f3\u4e86\u5f88\u4e45\uff0c\u7a81\u7136\u60f3\u5230\uff0c\u5982\u679c\u52a0\u4e00\u4e2a\u8d77\u70b9\u548c\u4e00\u4e2a\u7ec8\u70b9\uff0c\u7136\u540e\u8fd9\u9053\u9898\u5c31\u53ef\u4ee5\u53d8\u6210\u4e00\u4e2a\u56fe\u4e86\uff0c\u663e\u7136\u5c31\u53ef\u4ee5\u7528\u6700\u5927\u6d41\u6765\u505a\uff0c\u8be6\u7ec6\u89c1\u4ee3\u7801.\n\n\n```cpp\n#include<iostream>\n#include<queue>//\u7528\u961f\u5217\u6765\u4f18\u5316\uff0c\u6bd4\u6570\u7ec4\u7b80\u5355\u4e00\u4e9b\uff0c\u867d\u7136\u4e5f\u6ca1\u7b80\u5355\u591a\u5c11\uff0c\u4e2a\u4eba\u7231\u597d\u3002\n#include<cstring>\nusing namespace std;\nconst int maxn=10000;\nqueue<int> q;\nstruct node{\n    int u,v,c,next;\n}a[maxn];//\u7ed3\u6784\u4f53\u65b9\u4fbf\nint first[maxn];//\u7528\u4e8e\u94fe\u8868\nint vis[maxn];//\u5224\u65ad\nint cur[maxn];//\u4f18\u5316\u7528\u7684\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u8981\nint m,n;\nint dis[maxn];\nint s,t;\nint e=0;\nint tot=0;\n//int k;\nvoid add(int u,int v,int w)//\u94fe\u8868\u4e0d\u89e3\u91ca\n{\n    a[e].u=u;\n    a[e].v=v;\n    a[e].c=w;\n    a[e].next=first[u];\n    first[u]=e;\n    e++;\n}\nvoid read()//\u8bfb\u5165\n{\n    cin>>m>>n;\n    s=0;//\u5b9a\u4e49\u7684\u8d77\u70b9\n    t=n+1;//\u5b9a\u4e49\u7684\u7ec8\u70b9\n        for(int i=1;i<=m;i++)\n    {\n        add(s,i,1);\n        add(i,s,0);//\u6b8b\u91cf\u56fe\uff0c\u6700\u5927\u6d41\u7279\u70b9\n    }\n    while(1)\n    {\n        int u,v;\n        cin>>u>>v;\n        if(u==-1&&v==-1)\n        break;\n        add(u,v,1);\n        add(v,u,0);\n    }\n    for(int i=m+1;i<=n;i++)\n    {\n        add(i,t,1);\n        add(t,i,0);\n    }\n}\nint bfs()//\u5224\u65ad\u4f18\u5316\n{\n    memset(dis,0,sizeof(dis));\n    memset(vis,0,sizeof(vis));\n    q.push(s);\n    vis[s]=1;\n    while(!q.empty())\n    {\n        int u=q.front();\n        q.pop();\n        for(int i=first[u];i!=-1;i=a[i].next)\n        {\n            int v=a[i].v;\n            int c=a[i].c;\n            if(!vis[v]&&c>0)\n            {\n                dis[v]=dis[u]+1;\n                q.push(v);\n                vis[v]=1;\n            }\n        }\n    }\n    return vis[t];\n}\nint dfs(int u,int flow)//\u6838\u5fc3\uff0c\n{\n    if(u==t||flow==0) return flow;\n    int sum=0;\n    for(int &i=cur[u];i!=-1;i=a[i].next)\n    {\n        int v=a[i].v;\n        int &c=a[i].c;\n        if(c>0&&dis[v]==dis[u]+1)\n        {\n            int f=dfs(v,min(c,flow-sum));\n            a[i].c-=f;\n            a[i^1].c+=f;\n            sum+=f;\n            if(sum==flow) return sum;\n        }\n    }\n    return sum;\n}\nvoid work()\n{\n    while(bfs())\n    {\n        for(int i=s;i<=t;i++)\n        {\n            cur[i]=first[i];//\u6b64\u5904\u7eaf\u4f18\u5316\uff0c\u5c31\u4e0d\u89e3\u91ca\u4e86\uff0c\u6709\u70b9\u7ed5\uff0c\u53ef\u4ee5\u80cc\u4f4f\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u8981\uff0c\u4f46\u6211\u4e0d\u77e5\u9053\u4f1a\u4e0d\u4f1a\u8d85\u65f6\uff0c\u8fd9\u9053\u9898\u5e94\u8be5\u4e0d\u4f1a\u3002\n        }\n        tot+=dfs(s,1e9);\n    }\n}\nvoid solve()\n{\n    cout<<tot<<endl;\n    for(int i=0;i<=e;i=i+2)//\u8bb0\u4f4f\uff0c\u4e00\u5b9a\u8981\u52a02\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u56fe\u4e24\u4e2a\u70b9\u6709\u4e24\u6761\u7ebf\uff0c\u52a01\u4f1a\u51fa\u4e8b\u3002\n   {\n         if(a[i].v!=s&&a[i^1].v!=s)\n         if(a[i].v!=t&&a[i^1].v!=t)\n         if( a[i^1].c>0)\n         {\n             cout<<a[i^1].v<<\" \"<<a[i].v<<endl;\n     }\n   }\n}\nint main()\n{\n    memset(a,-1,sizeof(a));\n    memset(first,-1,sizeof(first));\n    read();\n    work();\n    solve();\n    return  0;\n}\n```",
        "postTime": 1512724649,
        "uid": 49335,
        "name": "LoveHX",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2756 \u3010\u98de\u884c\u5458\u914d\u5bf9\u65b9\u6848\u95ee\u9898\u3011"
    },
    {
        "content": "\u5308\u7259\u5229\u7b97\u6cd5\u7684\u597d\u9898\n\n\u76f4\u63a5\u5308\u7259\u5229\u505a\u5c31\u884c\u4e86\n\n\u800c\u5308\u7259\u5229\u7b97\u6cd5\u4e2d\u662f\u6709\u4e00\u4e2a\u6570\u7ec4\u76f4\u63a5\u5b58\u50a8\u642d\u914d\u65b9\u6848\u7684\n\n\u56e0\u6b64\u53ea\u8981\u6c42\u51fa\u4e86\u6700\u5927\u7684\u5339\u914d\u6570\n\n\u76f4\u63a5\u8f93\u51famatch\u5373\u53ef\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n#define MAX 200\n#define MAXL 200*200\nstruct Line\n{\n      int v,next;\n}e[MAXL];\nint h[MAX],cnt=0;\nint sum=0;\nint match[MAX];\nint n,m,u,v;\nbool vis[MAX];\ninline void Add(int u,int v)\n{\n       e[cnt]=(Line){v,h[u]};\n       h[u]=cnt++;\n}\nbool DFS(int u)\n{\n        for(int i=h[u];i!=-1;i=e[i].next)\n        {\n                int v=e[i].v;\n                if(!vis[v])\n                {\n                       vis[v]=true;\n                       if(!match[v]||DFS(match[v]))\n                       {\n                                  match[v]=u;\n                                  return true;\n                       }\n                }\n        }\n        return false;\n}\nint main()\n{\n    memset(h,-1,sizeof(h));\n    cin>>n>>m;\n    while(true)\n    {\n          cin>>u>>v;\n          if(u==-1)break;\n          Add(u,v);\n    }\n    for(int i=1;i<=n;++i)\n    {\n           memset(vis,0,sizeof(vis));\n           if(DFS(i))++sum;\n    }\n    cout<<sum<<endl;\n    for(int i=n+1;i<=m;++i)\n    {\n            if(match[i])\n            {\n                   cout<<match[i]<<' '<<i<<endl;\n            }\n    }\n    return 0;\n}\n\n```",
        "postTime": 1499689332,
        "uid": 21283,
        "name": "yybyyb",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2756 \u3010\u98de\u884c\u5458\u914d\u5bf9\u65b9\u6848\u95ee\u9898\u3011"
    },
    {
        "content": "\u4f55\u8c13\u6700\u5927\u6d41\uff1f\u9996\u5148\u5b83\u5fc5\u987b\u662f\u4e00\u4e2a\u53ef\u884c\u6d41\uff1b\u5176\u6b21\uff0c\u5b83\u7684\u6d41\u91cf\u5fc5\u987b\u8fbe\u5230\u6700\u5927\u3002\u8fd9\u6837\u7684\u6d41\u5c31\u79f0\u4e3a\u6700\u5927\u6d41\u3002\u8b6c\u5982\u5bf9\u56fe5-1\u800c\u8a00\uff0c\u5b83\u7684\u6700\u5927\u6d41\u5982\u4e0b\uff1a\n\n\u4e0b\u9762\u63a2\u8ba8\u5982\u4f55\u6c42\u5f97\u6700\u5927\u6d41\u3002\n\n\u5728\u5b9a\u4e49\u201c\u53ef\u6539\u8fdb\u8def\u201d\u6982\u5ff5\u65f6\uff0c\u63d0\u5230\u53ef\u4ee5\u901a\u8fc7\u4e00\u5b9a\u89c4\u5219\u4fee\u6539\u201c\u53ef\u6539\u8fdb\u8def\u201d\u4e0a\u5f27\u7684\u6d41\u91cf\uff0c\u53ef\u4ee5\u4f7f\u5f97\u603b\u6d41\u91cf\u653e\u5927\u3002\u4e0b\u9762\u6211\u4eec\u5c31\u5177\u4f53\u770b\u4e00\u770b\u662f\u4ec0\u4e48\u201c\u89c4\u5219\u201d\u3002\n\n\u5bf9\u53ef\u6539\u8fdb\u8defP\u4e0a\u7684\u5f27<vi, vj>\uff0c\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\uff1a\n\n\u7b2c\u4e00\u79cd\u60c5\u51b5\uff1a<vi, vj>\u2208P+\uff0c\u53ef\u4ee5\u4ee4fij\u589e\u52a0\u4e00\u4e2a\u5e38\u6570delta\u3002\u5fc5\u987b\u6ee1\u8db3fij + delta \u2264 cij\uff0c\u5373delta \u2264 cij \u2013 fij\u3002\n\n\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff1a<vi, vj>\u2208P-\uff0c\u53ef\u4ee5\u4ee4fij\u51cf\u5c11\u4e00\u4e2a\u5e38\u6570delta\u3002\u5fc5\u987b\u6ee1\u8db3fij - delta \u2265 0\uff0c\u5373delta \u2264 fij\n\n\u6839\u636e\u4ee5\u4e0a\u5206\u6790\u53ef\u4ee5\u5f97\u51fadelta\u7684\u8ba1\u7b97\u516c\u5f0f\uff1a\n\n\u56e0\u4e3aP+\u7684\u6bcf\u6761\u5f27\u90fd\u662f\u975e\u9971\u548c\u5f27\uff0cP-\u7684\u6bcf\u6761\u5f27\u90fd\u662f\u975e\u96f6\u6d41\u5f27\uff0c\u6240\u4ee5delta > 0\u3002\n\n\u5bb9\u6613\u8bc1\u660e\uff0c\u6309\u7167\u5982\u6b64\u89c4\u5219\u4fee\u6b63\u6d41\u91cf\uff0c\u65e2\u53ef\u4ee5\u4f7f\u6240\u6709\u4e2d\u95f4\u70b9\u90fd\u6ee1\u8db3\u201c\u6d41\u91cf\u5b88\u6052\u201d\uff08\u5373\u8f93\u5165\u91cf\u7b49\u4e8e\u8f93\u51fa\u91cf\uff09\uff0c\u53c8\u53ef\u4ee5\u4f7f\u5f97\u603b\u7684\u6d41\u91cf\u6709\u6240\u589e\u52a0\uff08\u56e0\u4e3adelta > 0\uff09\u3002\n\n\u56e0\u6b64\u6211\u4eec\u5bf9\u4e8e\u4efb\u610f\u7684\u53ef\u884c\u6d41f\uff0c\u53ea\u8981\u5728f\u4e2d\u80fd\u627e\u5230\u53ef\u6539\u8fdb\u8def\uff0c\u90a3\u4e48\u5fc5\u7136\u53ef\u4ee5\u5c06f\u6539\u9020\u6210\u4e3a\u6d41\u91cf\u66f4\u5927\u7684\u4e00\u4e2a\u53ef\u884c\u6d41\u3002\u6211\u4eec\u8981\u6c42\u7684\u662f\u6700\u5927\u6d41\uff0c\u73b0\u5728\u7684\u95ee\u9898\u662f\uff1a\u5018\u82e5\u5728f\u4e2d\u627e\u4e0d\u5230\u53ef\u6539\u8fdb\u8def\uff0c\u662f\u4e0d\u662ff\u5c31\u4e00\u5b9a\u662f\u6700\u5927\u6d41\u5462\uff1f\n\n\u7b54\u6848\u662f\u80af\u5b9a\u7684\u3002\u4e0b\u9762\u6211\u4eec\u7ed9\u51fa\u8bc1\u660e\u3002\n\n\u5b9a\u74061 \u53ef\u884c\u6d41f\u662f\u6700\u5927\u6d41\u7684\u5145\u5206\u5fc5\u8981\u6761\u4ef6\u662f\uff1af\u4e2d\u4e0d\u5b58\u5728\u53ef\u6539\u8fdb\u8def\u3002\n\n\u8bc1\u660e\uff1a\n\n\u9996\u5148\u8bc1\u660e\u5fc5\u8981\u6027\uff1a\u5df2\u77e5\u6700\u5927\u6d41f\uff0c\u6c42\u8bc1f\u4e2d\u4e0d\u5b58\u5728\u53ef\u6539\u8fdb\u8def\u3002\n\n\u82e5\u6700\u5927\u6d41f\u4e2d\u5b58\u5728\u53ef\u6539\u8fdb\u8defP\uff0c\u90a3\u4e48\u53ef\u4ee5\u6839\u636e\u4e00\u5b9a\u89c4\u5219\uff08\u8be6\u89c1\u4e0a\u6587\uff09\u4fee\u6539P\u4e2d\u5f27\u7684\u6d41\u91cf\u3002\u53ef\u4ee5\u5c06f\u7684\u6d41\u91cf\u653e\u5927\uff0c\u8fd9\u4e0ef\u662f\u6700\u5927\u6d41\u77db\u76fe\u3002\u6545\u5fc5\u8981\u6027\u5f97\u8bc1\u3002\n\n\u518d\u8bc1\u660e\u5145\u5206\u6027\uff1a\u5df2\u77e5\u6d41f\uff0c\u5e76\u4e14f\u4e2d\u4e0d\u5b58\u5728\u53ef\u6539\u8fdb\u8def\uff0c\u6c42\u8bc1f\u662f\u6700\u5927\u6d41\u3002\n\n\u6211\u4eec\u5b9a\u4e49\u9876\u70b9\u96c6\u5408U, W\u5982\u4e0b\uff1a\n\n\uff08a\uff09 S\u2208U\uff0c\n\n\uff08b\uff09 \u82e5x\u2208U\uff0c\u4e14fxy<cxy\uff0c\u5219y\u2208U;\n\n\u82e5x\u2208U\uff0c\u4e14fyx>0\uff0c\u5219y\u2208U\u3002\n\n\uff08\u8fd9\u5b9e\u9645\u4e0a\u5c31\u662f\u53ef\u6539\u8fdb\u8def\u7684\u6784\u9020\u89c4\u5219\uff09\n\n\uff08c\uff09 W = V \\ U\u3002\n\n\u7531\u4e8ef\u4e2d\u4e0d\u5b58\u5728\u53ef\u6539\u8fdb\u8def\uff0c\u6240\u4ee5T\u2208W\uff1b\u53c8S\u2208U\uff0c\u6240\u4ee5U\u3001W\u662f\u4e00\u4e2a\u5272\u5207\uff08U, W\uff09\u3002\n\n\u6309\u7167U\u7684\u5b9a\u4e49\uff0c\u82e5x\u2208U\uff0cy\u2208W\uff0c\u5219fxy = cxy\u3002\u82e5x\u2208W\uff0cy\u2208U\uff0c\u5219fxy = 0\u3002\n\n\u6240\u4ee5\uff0c\n\n\u53c8\u56e0 v(f)\u2264C(U,W)\n\n\u6240\u4ee5f\u662f\u6700\u5927\u6d41\u3002\u5f97\u8bc1\u3002\n\n\u6839\u636e\u5145\u5206\u6027\u8bc1\u660e\u4e2d\u7684\u6709\u5173\u7ed3\u8bba\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u53e6\u5916\u4e00\u6761\u91cd\u8981\u5b9a\u7406\uff1a\n\n\u6700\u5927\u6d41\u6700\u5c0f\u5272\u5b9a\u7406\uff1a\u6700\u5927\u6d41\u7b49\u4e8e\u6700\u5c0f\u5272\uff0c\u5373max V(f) = min C(U, W)\u3002\n\n\u81f3\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u8f7b\u677e\u8bbe\u8ba1\u51fa\u6c42\u6700\u5927\u6d41\u7684\u7b97\u6cd5\uff1a\n\nstep 1. \u4ee4\u6240\u6709\u5f27\u7684\u6d41\u91cf\u4e3a0\uff0c\u4ece\u800c\u6784\u9020\u4e00\u4e2a\u6d41\u91cf\u4e3a0\u7684\u53ef\u884c\u6d41f\uff08\u79f0\u4f5c\u96f6\u6d41\uff09\u3002\n\nstep 2. \u82e5f\u4e2d\u627e\u4e0d\u5230\u53ef\u6539\u8fdb\u8def\u5219\u8f6cstep 5\uff1b\u5426\u5219\u627e\u5230\u4efb\u610f\u4e00\u6761\u53ef\u6539\u8fdb\u8defP\u3002\n\nstep 3. \u6839\u636eP\u6c42delta\u3002\n\nstep 4. \u4ee5delta\u4e3a\u6539\u8fdb\u91cf\uff0c\u66f4\u65b0\u53ef\u884c\u6d41f\u3002\u8f6cstep 2\u3002\n\nstep 5. \u7b97\u6cd5\u7ed3\u675f\u3002\u6b64\u65f6\u7684f\u5373\u4e3a\u6700\u5927\u6d41\u3002\n\n\u5bf9\u4e8e\u6b64\u9898\uff0c\u6211\u4eec\u53ea\u9700\u6dfb\u52a0\u4e00\u4e2a\u8d85\u7ea7\u6e90\u70b9\u548c\u4e00\u4e2a\u8d85\u7ea7\u6c47\u70b9\uff0c\u5e76\u5c06\u8fd9\u4e24\u4e2a\u70b9\u5206\u522b\u8fde\u5411\u98de\u884c\u5458\u548c\u5916\u7c4d\u98de\u884c\u5458\u7684\u70b9\uff0c\u8fde\u8fb9\u7684\u5bb9\u91cf\u7f6e\u4e3a1\n\n\u98de\u884c\u5458\u548c\u5916\u7c4d\u98de\u884c\u5458\u4e2d\u7684\u8fde\u8fb9\u7684\u5bb9\u91cf\u7f6e\u4e3a\u5927\u4e8e1\u7684\u4efb\u4f55\u6570\u5c31\u53ef\u4ee5\u7528\u6700\u5927\u6d41\u505a\u4e86\u3002\n\n\n```cpp\ntype\n  node=record toit,cap,rev,next:longint; end;\nvar\n  road:array[0..1000000]of node;\n  level,iter,list:array[-50..1000000] of longint;\n  n,m,s,t,i,u,v,w,cnt,x,y,j:longint;\nfunction min(a,b:longint):longint;\nbegin\n  if a<b then exit(a) else exit(b);\nend;\nprocedure add(u,v,w:longint);\nbegin\n  inc(cnt);\n  road[cnt].toit:=v;road[cnt].next:=list[u];road[cnt].cap:=w;\n  list[u]:=cnt; road[cnt].rev:=cnt+1;\n  inc(cnt);\n  road[cnt].toit:=u;road[cnt].next:=list[v];road[cnt].cap:=0;\n  list[v]:=cnt; road[cnt].rev:=cnt-1;\nend;\nprocedure bfs(s:longint);\nvar w,h,t:longint;\n  queue:array[0..1000000]of longint;\nbegin\n  fillchar(level,sizeof(level),255);\n  level[s]:=0;\n  h:=1; t:=1; queue[1]:=s;\n  while h<=t do\n  begin\n    w:=list[queue[h]];\n    while w<>0 do\n    begin\n      if (road[w].cap>0)and(level[road[w].toit]<0) then\n      begin\n        level[road[w].toit]:=level[queue[h]]+1;\n        inc(t);\n        queue[t]:=road[w].toit;\n      end;\n      w:=road[w].next;\n    end;\n    inc(h);\n  end;\nend;\nfunction dfs(v,t,f:longint):longint;\nvar w,d:longint;\nbegin\n  if v=t then exit(f);\n  iter[v]:=list[v];\n  w:=iter[v];\n  while w<>0 do\n  begin\n    if (road[w].cap>0)and(level[road[w].toit]>level[v]) then\n    begin\n      d:=dfs(road[w].toit,t,min(f,road[w].cap));\n      if d>0 then\n      begin\n        dec(road[w].cap,d);\n        inc(road[road[w].rev].cap,d);\n        exit(d);\n      end;\n    end;\n    iter[v]:=road[iter[v]].next;\n    w:=road[w].next;\n  end;\n  exit(0);\nend;\nfunction max_flow(s,t:longint):longint;\nvar flow,f:longint;\nbegin\n  flow:=0; f:=0;\n  while true do\n  begin\n    bfs(s);\n    if level[t]<0 then exit(flow);\n    fillchar(iter,sizeof(iter),0);\n    f:=dfs(s,t,maxlongint);\n    while f<>0 do\n    begin\n      flow:=flow+f;\n      f:=dfs(s,t,maxlongint);\n    end;\n  end;\n  exit(0);\nend;\nbegin\n  readln(m,n);\n  readln(x,y);\n  while (x<>-1)and(y<>-1) do\n  begin\n    add(x,y,50000);\n    readln(x,y);\n  end;\n  s:=m+n+50; t:=s+1;\n  for i:=1 to m do add(s,i,1);\n  for i:=1 to n do add(i+m,t,1);\n  writeln(max_flow(s,t));\n  for i:=1 to m  do\n  begin\n    j:=list[i];\n    while j<>0 do\n    begin\n      if (road[j].cap<50000)and(road[j].toit<>t)and(road[j].toit<>s)\n      then begin writeln(i,' ',road[j].toit); break; end;\n      j:=road[j].next;\n    end;\n  end;\nend.\n\n```",
        "postTime": 1494816212,
        "uid": 34910,
        "name": "\u91cd\u56de\u5dc5\u5cf0\uff01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2756 \u3010\u98de\u884c\u5458\u914d\u5bf9\u65b9\u6848\u95ee\u9898\u3011"
    },
    {
        "content": "# \u98de\u884c\u5458\u914d\u5bf9\u65b9\u6848\u95ee\u9898\n\n[P2756](https://www.luogu.com.cn/problem/P2756)\n\n### \u7b80\u5355\u7684\u7f51\u7edc\u6d41\u6a21\u578b\u2014\u2014\u4e8c\u5206\u56fe\u5339\u914d\u6700\u5927\u5339\u914d\uff0c\u589e\u52a0\u8d85\u7ea7\u6e90\u70b9\u548c\u8d85\u7ea7\u6c47\u70b9\u540e\u6c42\u6700\u5927\u6d41\n\n# \u6d41\u7a0b\n- #### \u5b9a\u4e00\u4e2a\u6e90\u70b9s\uff0c \u6c47\u70b9t\n- #### \u5c06s\u548c\u5916\u7c4d\u98de\u884c\u5458\u7f16\u53f7\u8fde\u4e00\u6761\u8fb9\n- #### \u5c06\u82f1\u56fd\u98de\u884c\u5458\u7f16\u53f7\u548ct\u8fde\u4e00\u6761\u8fb9\n- #### \u627e\u7f51\u7edc\u6700\u5927\u6d41\uff08\u8fd9\u91cc\u7528\u4e86EK\uff09\n- #### \u6bcf\u6b21\u627e\u5230\u589e\u5e7f\u8def\uff0c\u5c31\u66f4\u65b0\u76f8\u5e94\u7684\u98de\u884c\u5458\uff0c\u6700\u540e\u8f93\u51fa\u5373\u53ef\uff08\u601d\u8003\u4e3a\u4ec0\u4e48\uff09\n\n# code\n```cpp\n//\u589e\u52a0\u8d85\u7ea7\u6e90\u70b9\u548c\u8d85\u7ea7\u6c47\u70b9\u540e\u6c42\u6700\u5927\u6d41 \n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int MAXN = 105;\nconst int MAXM = 105;\n\nint n, m, s, t, x, y;\n\nint head[MAXN], nxt[MAXN * MAXN], v[MAXN * MAXN], w[MAXN * MAXN], cnt = 1;\nvoid add(int x, int y, int z) {\n\tnxt[++cnt] = head[x]; head[x] = cnt; v[cnt] = y; w[cnt] = z;\n\tnxt[++cnt] = head[y]; head[y] = cnt; v[cnt] = x; w[cnt] = 0;\n}\n\nint maxflow;\nint pre[MAXN], used[MAXN];\nint suc[MAXN];//\u8bb0\u5f55\u914d\u5bf9\u7684\u98de\u884c\u5458 \n\nbool bfs() {\n\tmemset(pre, 0, sizeof(pre));\n\tmemset(used, 0, sizeof(used));\n\tqueue<int> q;\n\tq.push(s);\n\twhile(!q.empty()) {\n\t\tint u = q.front(); q.pop();\n\t\tfor (int i = head[u]; i ; i = nxt[i]) {\n\t\t\tif(w[i]) {\n\t\t\t\tint _v = v[i];\n\t\t\t\tif(used[_v]) continue;\n\t\t\t\tq.push(_v);\n\t\t\t\tused[_v] = 1;\n\t\t\t\tpre[_v] = i;\n\t\t\t\tif(_v == t) return 1;\n\t\t\t} \n\t\t}\n\t}\n\t\n\treturn 0;\n}\n\nint main() {\n\t\n\tscanf(\"%d %d\", &m, &n);\n\ts = n + 1, t = n + 2;\n\tfor (int i = 1; i <= m; i++) add(s, i, 1);\n\tfor (int i = m + 1; i <= n; i++) add(i, t, 1);\n\twhile(scanf(\"%d %d\", &x, &y)) {\n\t\tif(x == -1 && y == -1) break;\n\t\tadd(x, y, 1);\n\t} \n\twhile(bfs()) {\n\t\tint tmp = t; int minx = 1 << 30;\n\t\t\n\t\twhile(tmp != s) {\n\t\t\tint i = pre[tmp];\n\t\t\tminx = min(w[i], minx);\n\t\t\tif(tmp != t && tmp > m) suc[tmp] = v[i ^ 1];\n\t\t\ttmp = v[i ^ 1]; \n\t\t}\n\n\t\ttmp = t; maxflow += minx;\n\t\n\t\twhile(tmp != s) {\n\t\t\tint i = pre[tmp];\n\t\t\tw[i] -= minx;\n\t\t\tw[i ^ 1] += minx;\n\t\t\ttmp = v[i ^ 1];\n\t\t}\n\t\t\t\n\t}\n\t\n\tif(maxflow == 0) printf(\"No Solution!\\n\");\n\telse {\n\t\tprintf(\"%d\\n\", maxflow);\n\t\tfor (int i = m + 1; i <= n; i++) {\n\t\t\tif(suc[i]) {\n\t\t\t\tprintf(\"%d %d\\n\", suc[i], i);\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\treturn 0;\n}\n```\n",
        "postTime": 1575184340,
        "uid": 105364,
        "name": "gzhffIThh",
        "ccfLevel": 5,
        "title": "\u7f51\u7edc\u6d4124\u9898-\u98de\u884c\u5458\u914d\u5bf9\u65b9\u6848\u95ee\u9898"
    },
    {
        "content": "## [\u5308\u7259\u5229\u7b97\u6cd5]\n\u6211\u5728\u7f51\u7edc\u6d4124\u9898\u91cc\u53d1\u4e2a\u4e8c\u5206\u56fe\u5339\u914d\u9898\u89e3\u6709\u70b9\u4e0d\u8981\u8138\u54c8\n\n~~\u4f46\u662f\u7f51\u7edc\u7624\u662f\u5565~~\n\n\u5308\u7259\u5229\u7b97\u6cd5\u6c42\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\uff0c~~\u56e0\u4e3a\u6570\u636e\u6c34~~\u6240\u4ee5\u5efa\u4e86\u53cc\u5411\u8fb9\uff0c\u8ba9\u540em+n\u5730\u8dd1\u4e86\u4e00\u904d\uff0c\u628a\u82f1\u56fd\u519b\u961f\u7684\u7f16\u53f7\u51cf\u53bbm\u5c31\u884c\u4e86\n\n$lst[i]$\u8868\u793a$i$\u6700\u540e\u5339\u914d\u5230\u7684\u70b9\uff0c\u56e0\u4e3a\u5efa\u7684\u662f\u53cc\u5411\u8fb9\uff0c\u6240\u4ee5\u8f93\u51fa\u5339\u914d\u6570\u65f6\u8981\u9664\u4ee5\u4e8c\uff1b\n\n\u5173\u4e8e\u65b9\u6848\u7684\u8f93\u51fa\uff0c\u76f4\u63a5\u5224\u4e00\u4e0b$lst[i]$\u4e0d\u7b49\u4e8e\u96f6\u4e14$lst[i]$\u548c$i$\u5747\u672a\u5339\u914d\u8fc7\u5c31\u8f93\u51fa\u5c31\u597d\u5566\n## [\u4ee3\u7801]\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\n#include<iostream>\nusing namespace std;\nint head[100100],vis[333],lst[333],n,cnt,m,f[1001];\nstruct edg\n{\n\tint u,v,nxt;\n}e[100100];\nvoid add(int u,int v)\n{\n\te[++cnt].nxt=head[u];\n\te[cnt].v=v;\n\te[cnt].u=u;\n\thead[u]=cnt;\n}\nbool Mx(int u)\n{\n\tfor(int i=head[u];i;i=e[i].nxt)\n\t{\n\t\tint v=e[i].v;\n\t\tif(vis[v])continue;\n\t\tvis[v]=1;\n\t\tif(!lst[v]||Mx(lst[v]))\n\t\t{\n\t\t\tlst[v]=u;\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn 0;\n}//\u5308\u7259\u5229\u7b97\u6cd5\nint main()\n{\n\tscanf(\"%d%d\",&m,&n);\n\twhile(1)\n\t{\n\t\tint uu,vv;\n\t\tscanf(\"%d%d\",&uu,&vv);\n\t\tif(uu==-1&&vv==-1)break;\n\t\tadd(uu,vv+m);\n\t\tadd(vv+m,uu);\n\t}\n\tint ans=0;\n\tfor(int i=1;i<=m+n;i++)\n\t{\n\t\tmemset(vis,0,sizeof(vis));\n\t\tans+=Mx(i);\n\t}//\u7edf\u8ba1\u5339\u914d\u6570\n\tprintf(\"%d\\n\",ans/2);//\u8bb0\u5f97\u9664\u4ee5\u4e8c\n\tfor(int i=1;i<=m+n;i++)\n\t{\n\t\tif(lst[i]&&!f[i]&&!f[lst[i]])printf(\"%d %d\\n\",i,lst[i]-m),f[i]=1,f[lst[i]]=1;\n\t}//\u8f93\u51fa\u65b9\u6848\n}\n```",
        "postTime": 1571651082,
        "uid": 93292,
        "name": "\u79bb\u5b50\u952eIonic_Bond",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P2756 \u3010\u98de\u884c\u5458\u914d\u5bf9\u65b9\u6848\u95ee\u9898\u3011"
    },
    {
        "content": "[\u7f51\u7edc\u6d4124\u9898\u5927\u7efc\u5408](https://www.luogu.org/blog/foreverlasting/wang-lao-liu-24-ti-tai-zeng-ge)\n\n\u8fd9\u5e94\u8be5\u662f\u4e00\u9053\u6bd4\u8f83\u7b80\u5355\u7684\u7f51\u7edc\u6d41\u4e86\uff08\u5176\u5b9e\u662f\u4e8c\u5206\u56fe\u5566\uff09\n\n\u9996\u5148S\u5411\u4e00\u4e2a\u7cfb\u5217\u7684\u98de\u884c\u5458\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a1\u7684\u8fb9\uff0c\u53e6\u4e00\u4e2a\u7cfb\u5217\u7684\u98de\u884c\u5458\u5411T\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a1\u7684\u8fb9\uff0c\u4e24\u4e2a\u7cfb\u5217\u95f4\u7684\u98de\u884c\u5458\u4e92\u76f8\u8fde\u5bb9\u91cf\u4e3ainf\u7684\u8fb9\uff0c\u8dd1\u4e2a\u6700\u5927\u6d41\u5c31\u597d\u4e86\u3002\n\n\u7136\u540e\u8bc1\u660e\u6b63\u786e\u6027\u3002\n\n\u6bcf\u4e00\u4e2a\u98de\u884c\u5458\u53ea\u80fd\u4e0e\u4e00\u4e2a\u642d\u914d\uff0c\u8fd9\u662f\u5bb9\u91cf\u4e3a1\u7684\u9650\u5b9a\u3002\u5176\u4ed6\u968f\u610f\u642d\u914d\uff0c\u8fd9\u662f\u5bb9\u91cf\u4e3ainf\u7684\u9650\u5b9a\u3002\u6240\u4ee5\u662f\u6b63\u786e\u7684\u3002\n\n\u627e\u98de\u884c\u5458\u76f4\u63a5\u627e\u53cd\u5411\u8fb9\u7684\u6d41\u91cf\u5c31\u884c\u4e86\u3002\n\ncode\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define res register int\n#define LL long long\n#define inf 0x3f3f3f3f\ninline int read() {\n    int s=0,w=1;\n    char ch=getchar();\n    while(ch<'0'||ch>'9') {\n        if(ch=='-')w=-1;\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9')s=s*10+ch-'0',ch=getchar();\n    return s*w;\n}\ninline void write(res w) {\n    if(w<0)putchar('-'),w=-w;\n    if(w>9)write(w/10);\n    putchar(w%10+'0');\n}\nconst int N=1e6+10;\nstruct mdzz {\n    int next,to,val;\n} edge[N];\nint s,t,cnt,n,m,head[N],deep[N],cur[N];\ninline void init() {\n    cnt=-1;\n    memset(head,-1,sizeof(head));\n}\ninline void add(res u,res v,res w) {\n    edge[++cnt].to=v;\n    edge[cnt].next=head[u];\n    edge[cnt].val=w;\n    head[u]=cnt;\n}\ninline int bfs() {\n    memset(deep,0,sizeof(deep));\n    queue<int> q;\n    while(!q.empty())q.pop();\n    deep[s]=1;\n    q.push(s);\n    while(!q.empty()) {\n        res u=q.front();\n        q.pop();\n        for(res i=head[u]; ~i; i=edge[i].next)\n            if(deep[edge[i].to]==0&&edge[i].val>0)\n                deep[edge[i].to]=deep[u]+1,q.push(edge[i].to);\n    }\n    if(deep[t])return 1;\n    return 0;\n}\ninline int dfs(res u,res flow) {\n    if(u==t)return flow;\n    for(res& i=cur[u]; ~i; i=edge[i].next) {\n        if(deep[edge[i].to]==deep[u]+1&&edge[i].val) {\n            res f=dfs(edge[i].to,min(flow,edge[i].val));\n            if(f>0) {\n                edge[i].val-=f;\n                edge[i^1].val+=f;\n                return f;\n            }\n        }\n    }\n    return 0;\n}\ninline int dinic() {\n    res ans=0;\n    while(bfs()) {\n        for(res i=s; i<=t; i++)cur[i]=head[i];\n        while(int f=dfs(s,inf))ans+=f;\n    }\n    return ans;\n}\nint x,y,ans;\nint main(){\n    m=read(),n=read();\n    init();\n    s=0,t=n+1;\n    for(res i=1;i<=m;i++)add(s,i,1),add(i,s,0);\n    for(res i=m+1;i<=n;i++)add(i,t,1),add(t,i,0);\n    while(scanf(\"%d%d\",&x,&y)==2&&x!=-1&&y!=-1)add(x,y,1),add(y,x,0);\n\tans=dinic();\n\tif(!ans) puts(\"No answer\");\n    else{\n        write(ans),puts(\"\");\n        for(res i=1;i<=m;i++)\n            for(res ed=head[i];~ed;ed=edge[ed].next) \n                if(edge[ed].val==0&&edge[ed^1].val==1&&i!=s&&i!=t&&edge[ed].to!=s&&edge[ed].to!=t) printf(\"%d %d\\n\",i,edge[ed].to);\n    }\n    return 0;\n}\n```",
        "postTime": 1530617709,
        "uid": 32878,
        "name": "foreverlasting",
        "ccfLevel": 7,
        "title": "\u3010\u7f51\u7edc\u6d4124\u9898\u3011\u98de\u884c\u5458\u914d\u5bf9\u65b9\u6848\u95ee\u9898"
    },
    {
        "content": "\u4e00\u4e2a\u5308\u7259\u5229\u7b97\u6cd5\u7684\u88f8\u9898\uff0c\u4f46\u662f\u6709\u4e00\u4e9b\u5730\u65b9\u9700\u8981\u6ce8\u610f\u4e00\u4e0b\n\n##\u63a8\u8350\u4f7f\u7528\u524d\u5411\u661f\uff0c\u6bd4\u4e8c\u7ef4\u6570\u7ec4\u5feb\uff08edge\u548cadd\u90a3\u91cc\uff09\n\n#\u6709\u7684\u9898\u89e3\u54b1\u4e5f\u4e0d\u77e5\u9053\u548bAC\u7684\uff0c\u53cd\u6b63\u662f\u6837\u4f8b\u90fd\u4e0d\u8fc7\uff0c\u4e3a\u4ec0\u4e48\uff1f\u5927\u4f53\u7b54\u6848\u4e0d\u9519\uff0c\u53ef\u987a\u5e8f\u98a0\u5012\uff0c\u90a3\u600e\u4e48\u529e\uff1f\u518d\u52a0\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u52a0\u4e00\u904d\u5feb\u6392\uff0c\u628a\u5c0f\u53f7\u9760\u524d\n\n###\u524d\u9762\u7684\u5927\u4f6c\u4eec\u90fd\u8bf4\u7684\u5f88\u6e05\u695a\u4e86\uff0c\u6211\u53ea\u70b9\u4e00\u4e0b\u53ef\u80fd\u4f1a\u56f0\u6270\u5927\u5bb6\u7684\u5730\u65b9\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#define maxn 2200000\nusing namespace std;\nint n,qr,head[maxn],ans,link[maxn],vis[maxn],m,rq;\nstruct EDGE\n{\n    int next;\n    int to;\n}edge[maxn];\nvoid add(int from,int to)\n{\n    edge[++qr].next=head[from];\n    edge[qr].to=to;\n    head[from]=qr;\n}\nint hungary(int x)\n{\n    for(int i=head[x];i!=-1;i=edge[i].next)\n     {\n         int v=edge[i].to;\n         if(!vis[v])\n          {\n              vis[v]=1;\n              if(!link[v]||hungary(link[v]))\n               {\n                   link[v]=x;\n                   return 1;\n               }\n          }\n     }\n    return 0;\n}\nstruct A\n{\n    int a,b;\n}an[maxn];\nint cmp(A aaa,A bbb)\n{\n    return aaa.a<bbb.a;\n}\nint main()\n{\n    memset(head,-1,sizeof(head));\n    scanf(\"%d%d\",&n,&m);\n    while(1)\n     {\n         int a,b;\n         scanf(\"%d%d\",&a,&b);\n         if(a==-1&&b==-1) break;\n         add(a,b);\n     }\n    for(int i=1;i<=n;i++)\n     {\n         memset(vis,0,sizeof(vis));\n         if(hungary(i))\n          ans++;\n     }\n    printf(\"%d\\n\",ans);\n    for(int i=n+1;i<=m;i++) \n     {\n         if(link[i])\n          {\n              an[++rq].a=link[i];\n              an[rq].b=i;\n          }\n     }\n    sort(an+1,an+rq+1,cmp);\n    for(int i=1;i<=rq;i++)\n     printf(\"%d %d\\n\",an[i].a,an[i].b);\n    return 0;\n}\n```",
        "postTime": 1508919620,
        "uid": 49851,
        "name": "\u777f\u5c7f\u9752\u886b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2756 \u3010\u98de\u884c\u5458\u914d\u5bf9\u65b9\u6848\u95ee\u9898\u3011"
    },
    {
        "content": "\u8c03\u4e86\u534a\u5929\uff0c\u6700\u540e\u53d1\u73b0\u662f\u8bfb\u4f18\u6253\u9519\u4e86= =\uff0c\u7ed3\u679c\u8fd8\u8fc7\u4e86\u4e00\u4e2a\u70b9= =\n\n\n\u597d\u5427\uff0c\u53c8\u662f\u4e00\u9053\u88f8\u7684\u4e8c\u5206\u56fe\u5339\u914d\uff0c\u6211\u8fd8\u662f\u4e0d\u559c\u6b22\u6253\u5308\u7259\u5229\uff0c\u6240\u4ee5\u6709\u5f04\u4e86\u4e2a\u7f51\u7edc\u6d41ISAP\uff0c\u8fd9\u4e2a\u6a21\u677f\u4eca\u513f\u6253\u4e864\u904d\u4e86\uff0c\u611f\u89c9\u90fd\u80fd\u80cc\u4e86\uff0c\u9898\u89e3\u4e5f\u5199\u4e864\u4e2a\u4e86\uff0c\u6211\u76f4\u63a5\u653e\u90a3\u51e0\u9053\u9898\u7684\u9898\u89e3\u5427\uff1a\n\n\n\u7b80\u5355\u7684\u4ecb\u7ecd\u4e00\u4e0bISAP\u5427\uff0c\u5176\u5b9eISAP\u5c31\u662f\u5c06Dinic\u7684bfs\u4e00\u6b21\u6027\u4fee\u6539\u5c42\u6b21\u56fe\u6539\u4e3a\u56de\u6eaf\u65f6\u5c31\u4fee\u6539\uff0c\u867d\u7136\u7406\u8bba\u590d\u6742\u5ea6\u4ecd\u7136\u662fO(v^2\\*e)\uff0c\u7b49\u4e8edinic\uff0c\u4f46\u5b9e\u9645\u6548\u679c\u4e0a\u9762\u4e5f\u7ed9\u51fa\u4e86\u3002\n\n\n\u52a0\u5165\u4e24\u4e2a\u6570\u7ec4\uff0cnum\u4e0efa\uff0c\n\n\nfa\u8bb0\u5f55\u589e\u5e7f\u8def\u6bcf\u4e2a\u8282\u70b9\u7684\u524d\u9a71\u3002\n\n\nnum\u8bb0\u5f55\u5230\u6c47\u70b9\u7684\u8ddd\u79bb\u4e2a\u6570\uff0c\u4fbf\u4e8e\u8fdb\u884cgap\u4f18\u5316\u2014\u2014\u5c31\u662f\u5982\u679c\u5b58\u5728\u4e00\u4e2ai<n\u4f7f\u5f97num[i]\u4e3a0\u5219\u8bf4\u660e\u6e90\u70b9\u4e0e\u6c47\u70b9\u5df2\u7ecf\u4e0d\u8fde\u901a\u7684\u4e86\uff0c\u7acb\u523b\u4e2d\u65ad\u641c\u7d22\u3002\n\n\n\u7136\u540e\u4e5f\u5c31\u6ca1\u5565\u4e86\uff0c\u5c31\u7c7b\u4f3c\u4e00\u4e2a\u975e\u9012\u5f52\u5f0f\u7684Dinic\uff0c\u5b9e\u73b0\u65f6\u6709\u4e9b\u7ec6\u8282\u8981\u6ce8\u610f\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\u770b\u770b\u7a0b\u5e8f\u5e94\u8be5\u80fd\u7406\u89e3\u3002\n\n\n\u5176\u5b9e\u7f51\u7edc\u6d41\u7b97\u6cd5\u5927\u591a\u6570\u662f\u4e0d\u9700\u8981\u8fc7\u4e8e\u6df1\u5165\u7406\u89e3\u7684\uff0c\u6a21\u677f\u8bb0\u4f4f\u5c31\u597d\u4e86\u3002\n\n\n\u53c2\u8003\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<queue>\n#include<cstring>\nusing namespace std;\nconst int INF=0x3f3f3f3f;\nconst int N=20100;\nint d[N],a[N],num[N],cur[N],fa[N];\nint n,m,S,T,EdgeCnt=0;\nstruct Edge{\n    int to,cap,next;\n}e[N*2];\nqueue<int> Q;\nint read(){//\u65e2\u7136\u90fd\u4e3a\u4e86\u65f6\u95f4\u5feb\uff0c\u5199ISAP\u4e86\uff0c\u5e72\u8106\u5199\u4e2a\u8bfb\u4f18\u7684\n    int x=0,f=1;char ch=getchar();\n    while (ch<'0' || ch>'9'){if (ch=='-')f=-1;ch=getchar();}\n    while ('0'<=ch && ch<='9'){x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}\n    return x*f;\n}\nvoid addedge(int u,int v,int w){\n    int &p=EdgeCnt;\n    e[p].to=v;e[p].cap=w;e[p].next=a[u];\n    a[u]=p++;\n}\nvoid BFS(){\n    for (int i=1;i<=n;i++)d[i]=n;\n    Q.push(T);d[T]=0;\n    while (!Q.empty()){\n        int u=Q.front();Q.pop();\n        for (int p=a[u];p!=-1;p=e[p].next){\n            int v=e[p].to;\n            if (e[p^1].cap && d[v]>d[u]+1){//\u6ce8\u610f\uff0c\u8fd9\u91cc\u662f\u4ece\u6c47\u70b9\u5f00\u59cb\u5012\u7740bfs\u7684\uff0c\u6240\u4ee5\u5f53\u524d\u7684\u8fb9\u662f\u53cd\u5411\u5f27\uff0c\u5fc5\u987b\u8981p^1\u5207\u6362\u5230\u6b63\u5411\u8fb9\n                d[v]=d[u]+1;\n                Q.push(v);\n            }\n        }\n    }\n}\nint Augment(){\n    int u=T,f=INF;\n    while (u!=S){\n        u=fa[u];\n        f=min(f,e[cur[u]].cap);\n    }\n    u=T;\n    while (u!=S){\n        u=fa[u];\n        e[cur[u]].cap-=f;\n        e[cur[u]^1].cap+=f;\n    }\n    return f;\n```\n}//\u589e\u5e7f\uff0c\u5c31\u4e0d\u7528\u89e3\u91ca\u4e86\u5427\uff1f\n```cpp\nint MaxFlow(){\n    n+=2;\n    memset(num,0,sizeof(num));\n    BFS();//\u9884\u5904\u7406\u7b2c\u4e00\u6b21\u7684\u8ddd\u79bb\u6807\u53f7\n    for (int i=1;i<=n;i++)num[d[i]]++,cur[i]=a[i];\n    int u=S,flow=0;\n    while (d[S]<n){//\u65e2\u7136\u90fd\u4e3a\u4e86\u65f6\u95f4\u5feb\uff0c\u5199ISAP\u4e86\uff0c\u5e72\u8106\u5199\u6210\u975e\u9012\u5f52\u7684\n        if (u==T){\n            flow+=Augment();\n            u=S;//\u8d70\u5230\u6c47\u70b9\u4e86\uff0c\u589e\u5e7f\uff0c\u5728\u56de\u5230\u6e90\u70b9\n        }\n        bool done=false;//\u662f\u5426\u524d\u8fdb\u7684\u6807\u5fd7\n        for (int p=cur[u];p!=-1;p=e[p].next){\n            int v=e[p].to;\n            if (e[p].cap && d[u]==d[v]+1){\n                done=true;fa[v]=u;cur[u]=p;u=v;//cur\u4e0efa\u7c7b\u4f3c\u9012\u5f52\u65f6\u7684\u6808\u4fdd\u5b58\u5f53\u524d\u9009\u62e9\u4e86\u90a3\u6761\u8fb9\uff0c\u56de\u6eaf\u65f6\u5c31\u4e0d\u4f1a\u8d70\u91cd\u590d\u7684\u8def\uff0c\u524d\u8fdb\n                break;\n            }\n        }\n        if (!done){//\u56de\u6eaf\n            int m=n-1;\n            for (int p=a[u];p!=-1;p=e[p].next){\n                int v=e[p].to;\n                if (e[p].cap)m=min(m,d[v]);\n            }\n            if (--num[d[u]]==0)break;//gap\u4f18\u5316\n            num[d[u]=m+1]++;//\u91cd\u7f6e\u8ddd\u79bb\u6807\u53f7\n            cur[u]=a[u];\n            if (u!=S)u=fa[u];\n        }\n    }\n    return flow;\n}\nint main(){\n    m=read(),n=read();\n    memset(a,0xff,sizeof(a));\n    int u=read(),v=read();\n    while (u+v>0){\n        addedge(u,v,1);\n        addedge(v,u,0);\n        u=read(),v=read();\n    }\n    S=n+1;T=n+2;\n    for (int i=1;i<=m;i++)addedge(S,i,1),addedge(i,S,0);\n    for (int i=m+1;i<=n;i++)addedge(i,T,1),addedge(T,i,0);//\u5efa\u56fe\uff0c\u4e0d\u89e3\u91ca\n    printf(\"%d\\n\",MaxFlow());\n    for (int u=1;u<=m;u++){\n        for (int p=a[u];p!=-1;p=e[p].next){\n            int v=e[p].to;\n            if (!e[p].cap && v<=n-2)printf(\"%d %d\\n\",u,v);\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1503569499,
        "uid": 54916,
        "name": "I_AM_HelloWord",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2756 \u3010\u98de\u884c\u5458\u914d\u5bf9\u65b9\u6848\u95ee\u9898\u3011"
    },
    {
        "content": "\u5176\u5b9e\u4e5f\u53ef\u4ee5\u7528\u7f51\u7edc\u6d41\u505a\uff0c\u4f46\u662f\u7f51\u7edc\u6d41\u8981\u6bd4\u5308\u7259\u5229\u7b97\u6cd5\u6162\u4e0a\u8bb8\u591a\uff0c\u4f46\u5982\u679c\u6bcf\u4e24\u4e2a\u5339\u914d\u7684\u98de\u884c\u5458\u6709\u6743\u503c\u7684\u8bddKM\u7b97\u6cd5\u5c31\u5f88\u96be\u5199\u4e86\n\n```cpp\n#include<bits/stdc++.h>\n#define INF 536870912\nusing namespace std;\nint m,n,s,t;\nint matrix[250][250],dis[250],cur[250];//\u90bb\u63a5\u77e9\u9635\nnamespace Dinic{//Dinic\u7684\u6807\u51c6\u5957\u8def+\u4f18\u5316\uff0c\u7528\u90bb\u63a5\u77e9\u9635\u5199\u66f4\u6e05\u723d\u3002\u5176\u4e2dmatrix\u6570\u7ec4\u7684\u529f\u80fd\u5f88\u5f3a\u5927\uff0c\u53ef\u4ee5\u68c0\u67e5\u8fde\u8fb9\uff0c\u50a8\u5b58\u6b8b\u91cf\u7f51\u7edc\uff0c\u6b63\u5411\u8fb9\u53cd\u5411\u8fb9\u901a\u5403\uff0c\u514d\u521d\u59cb\u5316......\uff08\u8d76\u7d27\u62e5\u6709\u5427\uff08\u6ed1\u7a3d\uff09\uff09\n    inline bool BFS(){\n        queue<int> mession;\n        memset(dis,-1,sizeof(dis));\n        mession.push(s);\n        dis[s]=0;\n        int now;\n        while(!mession.empty()){\n            now=mession.front(),mession.pop();\n            for(int i=s;i<=t;i++){\n                if(dis[i]<0&&matrix[now][i]>0){//\u5982\u679c\u8fd9\u4e2a\u70b9\u6ca1\u6709\u88ab\u8ba1\u7b97\u8fc7\u5206\u5c42\u4e14\u5b58\u5728\u8fd9\u6761\u8fde\u8fb9\u4e14\u6b8b\u91cf>)\n                    dis[i]=dis[now]+1;\n                    mession.push(i);\n                }\n            }\n        }\n        if(dis[t]>0) return true;\n        return false;//\u8fd9\u4e2a\u65f6\u5019\u5230\u7ec8\u70b9\u5df2\u7ecf\u6ca1\u6709\u53ef\u589e\u5e7f\u7684\u6d41\u91cf\u4e86\n    }\n    inline int DFS(int depth,int f){\n        if(depth==t||f==0) return f;//\u4e0d\u77e5\u540d\u7684\u4f18\u5316\uff0c\u5374\u5f88\u6709\u7528\n        for(int &i=cur[depth];i<=t;i++){//\u5f53\u524d\u5f27\u4f18\u5316\n            int ns=0;\n            if(matrix[depth][i]>0&&dis[i]==dis[depth]+1&&(ns=DFS(i,min(f,matrix[depth][i])))){//\u5982\u679c\u8fde\u8fb9\u4e14\u6b8b\u91cf>0\u4e14\u6ee1\u8db3\u5c42\u6570\u8981\u6c42\u4e14\u53ef\u4ee5\u589e\u5e7f\n                matrix[depth][i]-=ns;//\u589e\u5e7f\n                matrix[i][depth]+=ns;\n                return ns;\n            }\n        }\n        return 0;\n    }\n    inline int dinic(){\n        int ans=0,ns;\n        while(BFS()){\n            memset(cur,s,sizeof(cur));\n            while((ns=DFS(s,INF))&&(ans+=ns));\n        }\n        return ans;\n    }\n}\nnamespace IN{\n    inline int read(){\n        int num=0;\n        char c;\n        while(isspace(c=getchar()));\n        if(c=='-') return -1;//\u5224\u65ad\u7ed3\u675f\uff08\u8fd9\u4e2a\u8bfb\u5165\u4f18\u5316\u5f88\u7075\u6d3b\uff09\n        while((num=num*10+c-48)&&isdigit(c=getchar()));\n        return num;\n    }\n    inline void init(){\n        m=read(),n=read(),s=0,t=m+n+1;\n        int x,y;\n        while((x=read())!=-1&&(y=read())){\n            matrix[x][y]=INF;//\u5141\u8bb8\u672c\u5730\u98de\u884c\u5458\u5230\u5916\u7c4d\u98de\u884c\u5458\u7684\u8fde\u8fb9\uff08\u53d6INF\u662f\u4e3a\u4e86\u4fdd\u8bc1\u6d41\u91cf\u6d41\u901a\uff09\uff0c\u540c\u65f6\u68c0\u6d4b\u662f\u5426\u6709\u6d41\u91cf\u8fde\u5411\u4e24\u98de\u884c\u5458\n            matrix[s][x]=matrix[y][t]=1;//\u5efa\u7acb\u6bcf\u4e00\u672c\u5730\u98de\u884c\u5458\u5230\u8d85\u7ea7\u6e90\u70b9\u548c\u5916\u7c4d\u98de\u884c\u5458\u5230\u8d85\u7ea7\u6c47\u70b9\uff0c\u5bb9\u91cf\u4e3a1\uff08\u53ef\u4ee5\u7406\u89e3\u6210\u6bcf\u4e00\u4e2a\u4eba\u53ea\u80fd\u4e0e\u4e00\u4eba\u914d\u5bf9\uff09\n        }\n    }\n}\nint main(){\n    IN::init();\n    printf(\"%d\\n\",Dinic::dinic());\n    for(int i=1;i<=n;i++)\n        for(int j=1;j<=m;j++)\n            if(matrix[i][j])//\u5982\u679c\u9006\u5411\u8fb9\u6709\u6d41\u91cf\u5219\u4e24\u70b9\u8fde\u8fb9\n                printf(\"%d %d\\n\",j,i);\n    return 0;\n}\n\n```",
        "postTime": 1500603222,
        "uid": 43464,
        "name": "Creeper_LKF",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2756 \u3010\u98de\u884c\u5458\u914d\u5bf9\u65b9\u6848\u95ee\u9898\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u7528\u5308\u7259\u5229\u7b97\u6cd5\u76f4\u63a5\u6c34\u6389\u7684\uff1b\n\n\u6bd5\u7adf\u5308\u7259\u5229\u672c\u6765\u5c31\u662f\u8bb0\u5f55\u65b9\u6848\u7684\uff1b\n\n\u4f46\u662f\u4f60\u7528\u7f51\u7edc\u6d41\u8fd9\u4e2a\u5c31\u4e0d\u7b80\u5355\u4e86\uff1b\n\n\u53e6\u5916\u5308\u7259\u5229\u53ef\u4ee5\u5148\u6a21\u7248\u9898\uff1b\n\n\u7136\u540e\u8fd9\u4e00\u9898\u597d\u50cf\u6ca1\u6709No Solution!\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=105;\nstruct cs{int to,nxt;}a[N*N*5];\nbool vi[N];\nint head[N],ll;\nint link[N];\nint m,n,ans,x,y;\nbool dfs(int x){\n    for(int k=head[x];k;k=a[k].nxt)\n        if(!vi[a[k].to]){\n            vi[a[k].to]=1;\n            if(!link[a[k].to]||dfs(link[a[k].to])){\n                link[a[k].to]=x;return 1;\n            }\n        }return 0;\n}\nint main()\n{\n    scanf(\"%d%d\",&m,&n);\n    for(scanf(\"%d%d\",&x,&y);x!=-1;scanf(\"%d%d\",&x,&y)){\n        a[++ll].to=y;\n        a[ll].nxt=head[x];\n        head[x]=ll;\n    }\n    for(int i=1;i<=m;i++){\n        memset(vi,0,sizeof vi);\n        if(dfs(i))ans++;\n    }\n    if(!ans){printf(\"No Solution!\");return 0;}\n    printf(\"%d\\n\",ans);\n    for(int i=m+1;i<=n;i++)\n        if(link[i])printf(\"%d %d\\n\",link[i],i);\n}\n\n```",
        "postTime": 1495509506,
        "uid": 7442,
        "name": "\u5de8\u578b\u65b9\u5757",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2756 \u3010\u98de\u884c\u5458\u914d\u5bf9\u65b9\u6848\u95ee\u9898\u3011"
    },
    {
        "content": "\u601d\u8def\u548c\u697c\u4e3b\u4eec\u662f\u4e00\u6837\u7684\uff0c\u8fd9\u9053\u9898\u7f51\u7edc\u6d41\u53ef\u4ee5\uff0c\u4f46\u662f\u6211\u7528\u7684\u662f\u4e8c\u5206\u56fe\uff08\u5199\u8d77\u6765\u7b80\u5355\u4e00\u70b9\uff09\n\n\u7136\u540e\u770b\u5230\u6ca1\u6709C++\u4ee3\u7801\u5c31\u76f4\u63a5\u4e0a\u4e86\uff0c\u7b97\u6cd5\u5c31\u4e0d\u591a\u8bf4\u4e86\u3002\n\n\u4e00\u4e0b\u662fAC\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<cstdlib>\nusing namespace std;\nint n,m;\nint head[10001],size;\nstruct node\n{\n    int  next,to;\n}edge[10001];\nvoid putin(int from,int to)\n{\n    size++;\n    edge[size].next=head[from];\n    edge[size].to=to;\n    head[from]=size;\n}\nint match[10001];\nbool vis[10001];\nbool dfs(int root)\n{\n    int i;\n    for(i=head[root];i!=-1;i=edge[i].next)\n    {\n        int y=edge[i].to;\n        if(vis[y]==0)\n        {\n            vis[y]=1;\n            if(match[y]==0||dfs(match[y]))\n            {\n                match[y]=root;\n                match[root]=y;\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\nint main()\n{\n    int i,j,from,to;\n    scanf(\"%d%d\",&n,&m);\n    memset(head,-1,sizeof(head));\n    while(1)\n    {\n        scanf(\"%d%d\",&from,&to);\n        if(from==-1)break;\n        putin(from,to);\n    }\n    int ans=0;\n    for(i=1;i<=m;i++)\n    {\n        if(match[i]==0)\n        {\n            memset(vis,0,sizeof(vis));\n            if(dfs(i))ans++;\n        }\n    }\n    printf(\"%d\\n\",ans);\n    for(i=1;i<=n;i++)\n    if(match[i])printf(\"%d %d\\n\",i,match[i]);\n    return 0;\n}\n```",
        "postTime": 1491285085,
        "uid": 36357,
        "name": "kakakaka",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2756 \u3010\u98de\u884c\u5458\u914d\u5bf9\u65b9\u6848\u95ee\u9898\u3011"
    },
    {
        "content": "P\u515a\u6c34\u4e00\u53d1\n\n##\u8d64\u88f8\u88f8\u7684\u4e8c\u5206\u56fe\u5339\u914d\u6a21\u677f\u9898\n\n##\u8d64\u88f8\u88f8\u7684\u7f51\u7edc\u6d41&\u5308\u7259\u5229\n\n\u6211\u5728\u8fd9\u91cc\u7528\u7684\u662f**\u9965\u997f**\u7b97\u6cd5\uff08\u81ea\u5df1\u53d6\u7684\u540d\u5b57\uff0c\u56e0\u4e3ahungary\u548chungry\u597d\u70b9\u50cf\uff09\n\n\u5c31\u591a\u5efa\u4e00\u4e2a\u6570\u7ec4\u7ef4\u62a4\u5916\u7c4d\u98de\u884c\u5458\u4e0e\u82f1\u56fd\u98de\u884c\u5458\u7684\u5339\u914d\u72b6\u51b5\u5c31\u884c\u4e86\n\n\u4ee3\u7801\uff1a\n\n``` Pascal\nvar\n matchA,matchB:array[0..201]of longint;\n used:array[0..201]of boolean;\n a:array[0..201,0..201]of boolean;\n i,j,k,n,m,l,ans:longint;\n\nfunction found(x:longint):boolean;\nvar\n i:longint;\nbegin\n for i:=1 to n do\n  if (a[x,i])and(not used[i]) then\n   begin\n    used[i]:=TRUE;\n    if (matchA[i]=0)or(found(matchA[i])) then\n     begin\n      matchA[i]:=x;\n      matchB[x]:=i;\n      exit(TRUE);\n     end;\n   end;\n exit(FALSE);\nend;\n\nbegin\n readln(m,n);\n readln(i,j);\n while (i<>-1)and(j<>-1) do\n  begin\n   a[i,j-m]:=TRUE;\n   readln(i,j);\n  end;\n fillchar(matchA,sizeof(matchA),0);\n fillchar(matchB,sizeof(matchB),0);\n ans:=0;\n for i:=1 to m do\n  begin\n   fillchar(used,sizeof(used),FALSE);\n   if found(i) then ans:=ans+1;\n  end;\n writeln(ans);\n for i:=1 to m do\n  if matchB[i]<>0 then writeln(i,' ',matchB[i]+m);\nend.\n```\n\u4e00\u904d\u6c34\u8fc7 10ms / 8.25MB \u6beb\u65e0\u538b\u529b\n",
        "postTime": 1486706436,
        "uid": 22558,
        "name": "deluxurous",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2756 \u3010\u98de\u884c\u5458\u914d\u5bf9\u65b9\u6848\u95ee\u9898\u3011"
    }
]