[
    {
        "content": "\u4e3a\u4e86\u9632\u6b62\u4e0b\u4e00\u4e2a\u770b\u5230\u8fd9\u9053\u51b7\u95e8\u9898\u7136\u540e\u4e0d\u4f1a\u505a\u4e14\u4e0d\u77e5\u9053\u5982\u4f55\u662f\u597d\u7684\u4eba\uff0c\u4e3a\u8fd9\u9898\u5199\u4e00\u7bc7\u9898\u89e3\u3002\n\n\u6211\u4eec\u4e0d\u59a8\u628a Wilco \u62bd\u8c61\u6210\u65f6\u95f4\uff0c\u610f\u601d\u5c31\u662f\u6bcf\u6b21\u5728 $i$ \u62ff\u7cd6\u679c\u9700\u8981\u6ee1\u8db3\u5f53\u524d\u65f6\u95f4 $\\le 2\\times(i-1)$\u3002\n\n\u663e\u7136\u62ff\u7cd6\u679c\u7684\u987a\u5e8f\u4e00\u5b9a\u662f\u4ece\u5de6\u5f80\u53f3\u7684\uff0c\u56e0\u4e3a\u5982\u679c\u5148\u62ff\u53f3\u8fb9\u518d\u62ff\u5de6\u8fb9\u53ef\u884c\uff0c\u90a3\u4e48\u53cd\u8fc7\u6765\u4e00\u5b9a\u4e5f\u53ef\u884c\u3002\u76f8\u5f53\u4e8e\u6574\u6761\u8def\u5f84\u6709\u4e00\u6761\u5411\u53f3\u7684\u8f6e\u5ed3\u3002\u610f\u5473\u7740\u6211\u4eec\u8981\u8d70\u5230 $i$ \u9996\u5148\u9700\u8981 $i-1$ \u7684\u65f6\u95f4\uff0c\u90a3\u4e48\u5269\u4e0b\u7684 $i-1$ \u7684\u65f6\u95f4\u5c31\u662f\u4e3a\u4e86\u7cd6\u679c\u82b1\u8d39\u7684\u989d\u5916\u65f6\u95f4\u3002\u6211\u4eec\u8003\u8651\u53bb\u7ef4\u62a4\u8fd9\u4e2a\u989d\u5916\u65f6\u95f4\u3002\n\n\u4e00\u4e2a\u96be\u70b9\u5728\u4e8e\u6211\u4eec\u4e0d\u77e5\u9053\u6bcf\u4e2a\u7cd6\u679c\u62ff\u5b8c\u540e\u662f\u8d70\u5230\u5de6\u8fb9\u7684\u6e38\u4e50\u573a\u8fd8\u662f\u53f3\u8fb9\u7684\u6e38\u4e50\u573a\u3002\u4e0d\u59a8\u6309\u7167\u6e38\u4e50\u573a\u5206\u4e3a\u82e5\u5e72\u6bb5\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u6bb5\uff0c\u6211\u4eec\u53d1\u73b0\u53ef\u4ee5\u4e0d\u82b1\u4efb\u4f55\u989d\u5916\u4ee3\u4ef7\u5730\u62ff\u8d70\u4e00\u4e2a\u7cd6\u679c\uff0c\u4e5f\u5c31\u662f\u4ece\u6e38\u4e50\u573a $l$ \u8d70\u5230\u7cd6\u679c\u5e97 $i$\uff0c\u7136\u540e\u518d\u8d70\u5230\u6e38\u4e50\u573a $r$\u3002\n\n\u4ee5\u8fd9\u4e2a\u767d\u5ad6\u7684\u7cd6\u679c\u4e3a\u5206\u754c\u70b9\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7cd6\u679c\u5de6\u8fb9\u7684\u6240\u6709\u7cd6\u679c\u90fd\u4f1a\u56de\u6536\u5230 $l$\uff0c\u8fd9\u4e2a\u53f3\u8fb9\u7684\u6240\u6709\u7cd6\u679c\u90fd\u4f1a\u56de\u6536\u5230 $r$\u3002\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ea\u9700\u8981\u786e\u5b9a\u8fd9\u4e2a\u767d\u5ad6\u7684\u7cd6\u679c\u5728\u54ea\uff0c\u5c31\u80fd\u786e\u5b9a\u6bcf\u4e2a\u7cd6\u679c\u7684\u8d21\u732e\u3002\n\n\u8003\u8651\u8ba1\u7b97\u6bcf\u4e2a\u7cd6\u679c\u7684\u8d21\u732e\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/gd55gezo.png)\n\n$mid$ \u4e3a\u767d\u5ad6\u7684\u7cd6\u679c\uff0c\u4ece\u5de6\u5f80\u53f3\u7684\u987a\u5e8f\u5206\u522b\u4e3a $i,mid,j,k$\u3002\u8bbe\u5f53\u524d\u989d\u5916\u8d21\u732e\u4e3a $now$\u3002\n\n\u5bf9\u4e8e $i$\uff0c\u663e\u7136\u4e00\u6b21\u7cd6\u679c\u7684\u8d21\u732e\u5c31\u662f $2\\times(i-l)$\uff0c\u800c\u4e14\u662f\u53ea\u8981\u5f53\u524d\u7684\u989d\u5916\u8d21\u732e\uff08\u4e0d\u8003\u8651\u8fd9\u4e2a\u7cd6\u679c\u7684\u8d21\u732e\uff09\u4e5f\u5c31\u662f $now\\le i-1$ \u5c31\u80fd\u62ff\u4e00\u6b21\u7cd6\u679c\u3002\n\n\u6bd4\u8f83\u590d\u6742\u7684\u662f\u53f3\u8fb9 $j$ \u548c $k$ \u7684\u60c5\u51b5\u3002\u6211\u4eec\u6cbf\u865a\u7ebf\u5207\u5f00\uff0c\u53d1\u73b0\u5bf9\u4e8e $j$ \u5de6\u8fb9\u7684\u8def\u5f84\u53bb\u6389\uff0c\u5bf9\u4e8e $j$ \u591a\u7684\u8d21\u732e\u662f $2\\times(r-j)$\u3002\u53ea\u4e0d\u8fc7\u8fd9\u4e2a\u662f\u5728\u62ff\u7cd6\u679c\u4e4b\u524d\u8d21\u732e\u7684\uff0c\u4e5f\u5c31\u662f\u8981\u6c42 $now+2\\times(r-j)\\le j-1$ \u624d\u80fd\u62ff\u5230\u8fd9\u4e2a\u7cd6\u679c\u3002\u800c\u770b\u4e0a\u53bb\u6211\u4eec\u662f\u9884\u652f\u4e86\u4e00\u6bb5 $r-mid$ \u4e0a\u7684 $r-j$\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u4e0b\u9762\u8fd8\u6709\u4e00\u6bb5 $r-j$\uff0c\u6240\u4ee5 $j$ \u7684\u8d21\u732e\u5728\u540e\u9762\u5bf9\u4e8e $k$ \u6765\u8bb2\u4f9d\u7136\u662f $2\\times (r-j)$\u3002\n\n\u5f52\u7eb3\u4e00\u4e0b\u5c31\u662f\u65e0\u8bba\u54ea\u8fb9\u4e00\u4e2a\u7cd6\u679c\u7684\u8d21\u732e\u90fd\u662f $2\\times \\min(i-l,r-i)$\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u4e2d\u95f4\u7684\u7cd6\u679c\uff0c\u6211\u4eec\u76f4\u63a5\u53d6 $\\min(i-l,r-i)$ \u6700\u5927\u7684\u7cd6\u679c\u5373\u53ef\u3002\u56e0\u4e3a\u5bf9\u4e8e\u4efb\u610f\u6700\u4f18\u7684\u65b9\u6848\uff0c\u6211\u4eec\u628a\u767d\u5ad6\u7684\u7cd6\u679c\u8c03\u6574\u4e3a\u5f53\u524d\u7cd6\u679c\u4e00\u5b9a\u4e0d\u52a3\u3002\n\n\u90a3\u4e48\u62ff\u4e2a\u5806\u7ef4\u62a4\u4e00\u4e0b\u524d\u9762\u6240\u6709\u7684\u8d21\u732e\uff0c\u7136\u540e\u8dd1\u4e00\u4e2a\u5e26\u53cd\u6094\u7684\u8d2a\u5fc3\u5373\u53ef\u3002\u4e0d\u8fc7\u8fd9\u4e2a\u53cd\u6094\u8d2a\u5fc3\u6bd4\u8f83\u76f4\u89c2\u3002\n\n```cpp\n#include<cstdio>\n#include<queue>\nusing namespace std;\ntypedef long long LL;\nconst int N=5e5+5;\nconst int INF=0x3f3f3f3f;\nint n,a[N];\nint pre[N],suf[N];\nint dis[N];\ninline int Read(){\n\tchar ch;\n\tint f=1;\n\twhile((ch=getchar())<'0'||ch>'9')\n\t\tif(ch=='-') f=-1;\n\tint x=ch^48;\n\twhile((ch=getchar())>='0'&&ch<='9')\n\t\tx=(x<<3)+(x<<1)+(ch^48);\n\treturn x*f;\n}\ninline void print(LL x){\n\tif(x>=10) print(x/10);\n\tputchar(x%10+48);\n\treturn ;\n}\ninline void Print(LL x,char ch='\\n'){\n\tif(x<0){\n\t\tputchar('-');\n\t\tprint(-x);\n\t}\n\telse print(x);\n\tputchar(ch);\n\treturn ;\n}\ninline int Max(int x,int y){\n\treturn x>y?x:y;\n}\ninline int Min(int x,int y){\n\treturn x<y?x:y;\n}\ninline void Cmax(int&x,int y){\n\tif(y>x) x=y;\n\treturn ;\n}\ninline void Cmin(int&x,int y){\n\tif(y<x) x=y;\n\treturn ;\n}\ninline void Init(){\n\tn=Read();\n\tfor(int i=1;i<=n;i++)\n\t\ta[i]=Read();\n\ta[0]=a[n+1]=-1;\n\tpre[0]=0;\n\tfor(int i=1;i<=n;i++)\n\t\tif(a[i]==-1) pre[i]=i;\n\t\telse pre[i]=pre[i-1];\n\tsuf[n+1]=n+1;\n\tfor(int i=n;i;i--)\n\t\tif(a[i]==-1) suf[i]=i;\n\t\telse suf[i]=suf[i+1];\n\tfor(int i=1;i<=n;i++){\n\t\tdis[i]=INF;\n\t\tif(pre[i]) Cmin(dis[i],i-pre[i]);\n\t\tif(suf[i]!=n+1) Cmin(dis[i],suf[i]-i);\n\t}\n\treturn ;\n}\npriority_queue<int>que;\nint mx;\nLL ans;\nLL now;\ninline void Solve(){\n\tfor(int p=0,q;p<=n;p=q){\n\t\tq=p+1;\n\t\twhile(a[q]!=-1) q++;\n\t\tint mid=0;\n\t\tfor(int i=p+1;i<=q-1;i++){\n\t\t\tif(a[i]==0) continue ;\n\t\t\tif(dis[i]>dis[mid]) mid=i;\n\t\t}\n\t\tif(!mid) continue ;\n\t\tmx++;\n\t\ta[mid]--;\n\t\tfor(int i=p+1;i<=mid;i++){\n\t\t\tif(!a[i]) continue ;\n\t\t\tfor(int j=1;j<=a[i];j++){\n\t\t\t\tif(now<=i-1&&now+2*dis[i]<=mid-1){\n\t\t\t\t\tmx++;\n\t\t\t\t\tnow+=2*dis[i];\n\t\t\t\t\tque.push(2*dis[i]);\n\t\t\t\t}\n\t\t\t\telse if(que.size()&&que.top()>2*dis[i]){\n\t\t\t\t\tnow-=que.top();\n\t\t\t\t\tque.pop();\n\t\t\t\t\tnow+=2*dis[i];\n\t\t\t\t\tque.push(2*dis[i]);\n\t\t\t\t}\n\t\t\t\telse break ;\n\t\t\t}\n\t\t}\n\t\tfor(int i=mid+1;i<=q-1;i++){\n\t\t\tif(!a[i]) continue ;\n\t\t\tfor(int j=1;j<=a[i];j++){\n\t\t\t\tif(now+2*dis[i]<=i-1){\n\t\t\t\t\tmx++;\n\t\t\t\t\tnow+=2*dis[i];\n\t\t\t\t\tque.push(2*dis[i]);\n\t\t\t\t}\n\t\t\t\telse if(que.size()&&que.top()>2*dis[i]){\n\t\t\t\t\tnow-=que.top();\n\t\t\t\t\tque.pop();\n\t\t\t\t\tnow+=2*dis[i];\n\t\t\t\t\tque.push(2*dis[i]);\n\t\t\t\t}\n\t\t\t\telse break ;\n\t\t\t}\n\t\t}\n\t\ta[mid]++;\n\t}\n\tans=-mx;\n\tfor(int i=1;i<=n;i++)\n\t\tif(a[i]!=-1) ans+=a[i];\n\treturn Print(ans);\n}\n#include<ctime>\nint main(){\n\t//#define LOCAL\n\t#ifdef LOCAL\n\tint st=clock();\n\t#endif\n\tInit();\n\tSolve();\n\t#ifdef LOCAL\n\tint en=clock();\n\tprintf(\"cost %d ms\\n\",en-st);\n\t#endif\n\treturn 0;\n}\n```",
        "postTime": 1684896506,
        "uid": 115936,
        "name": "\u6cf7\u6cfd\u4e09\u6708",
        "ccfLevel": 0,
        "title": "P8175"
    },
    {
        "content": "\u597d\u9898\u3002\u4f46\u6ca1\u6709\u5f88\u591a\u7ed3\u8bba\uff0c\u53cd\u800c\u662f\u5f88\u591a\u6280\u5de7\u7ecf\u9a8c\u6027\u7684\u4e1c\u897f\uff0c\u66b4\u529b `dp` \u6050\u6015\u548c\u6b63\u89e3\u6ca1\u6709\u592a\u591a\u7684\u7ed3\u8bba\u5dee\u5f02\u3002\n\n\u6211\u4eec\u5047\u5b9a\u5728\u8d1f\u65e0\u7a77\u548c\u6b63\u65e0\u7a77\u5904\u5404\u6709\u4e00\u4e2a\u7a7a\u5730\u3002\n\n\u6539\u53d8\u4e00\u4e0b\u9650\u5236\uff0c\u6539\u6210\u6bcf\u4e2a\u5546\u5e97\u53ea\u80fd\u5728\u4e0d\u665a\u4e8e\u67d0\u4e2a\u65f6\u95f4\u70b9\u7684\u65f6\u523b\u4e70\u7cd6\u3002\n\n\u8003\u8651\u4e00\u4e2a\u8fde\u7eed\u5546\u5e97\u6bb5\u3002\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6709\u7cd6\u7684\u5546\u5e97\u5148\u7b97\u51fa\u91cc\u5b83\u6700\u8fd1\u7684\u7a7a\u5730\u3002\n\n\u8003\u8651\u5728\u5546\u5e97\u4e70\u7cd6\u4f1a\u5728\u54ea\u91cc\u5378\u8d27\u3002\u5982\u679c\u5728\u6700\u8fd1\u7a7a\u5730\u5728\u5de6\u8fb9\u7684\u5546\u5e97\u4e70\u7cd6\u5c31\u4f1a\u53cd\u590d\u6298\u8fd4\u4e70\u7cd6\u653e\u7cd6\u3002\n\n\u6211\u4eec\u5728\u67d0\u4e00\u6b21\u9886\u4e86\u7cd6\u4e4b\u540e\uff0c\u53ef\u4ee5\u4e0d\u518d\u6298\u8fd4\u53bb\u5de6\u8fb9\u7684\u7a7a\u5730\uff0c\u76f8\u53cd\u5730\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u53bb\u53f3\u8fb9\u7684\u7a7a\u5730\u653e\u7cd6\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u5f97\u6211\u4eec\u5b58\u5728\u4e00\u6b21\u4e70\u7cd6\u53d1\u7cd6\u662f\u4e0d\u4f1a\u82b1\u8d39\u4efb\u4f55\u989d\u5916\u8d21\u732e\u5f97\u5230\u7684\u3002\u4e8e\u662f\u6211\u4eec\u60f3\u8981\u8fd9\u6837\u7684\u4e00\u6b21\u4e70\u53d1\u7cd6\u80fd\u591f\u66ff\u6362\u6389\u4e00\u4e2a\u82b1\u8d39\u65f6\u95f4\u6700\u591a\u7684\u4e70\u53d1\u7cd6\uff0c\u5373\u6211\u4eec\u9700\u8981\u786e\u5b9a\u8fd9\u4e2a\u7cd6\u8be5\u5728\u54ea\u91cc\u4e70\u3002\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u5bf9\u4e8e\u6700\u8fd1\u6e38\u4e50\u573a\u662f\u5de6\u8fb9\u7684\u5546\u5e97\uff0c\u6211\u4eec\u5904\u7406\u6389\u4e00\u5757\u7cd6\u76f8\u5f53\u4e8e\u662f\u82b1\u8d39\u4ece\u5546\u5e97\u5230\u5de6\u8fb9\u7a7a\u5730\u4e00\u6b21\u5f80\u8fd4\u7684\u65f6\u95f4\u3002\u5bf9\u4e8e\u6700\u8fd1\u7a7a\u5730\u662f\u53f3\u8fb9\u7684\u5546\u5e97\uff0c\u6211\u4eec\u5904\u7406\u6389\u4e00\u5757\u7cd6\u76f8\u5f53\u4e8e\u662f\u4ece\u53f3\u8fb9\u7a7a\u5730\u5230\u5546\u5e97\u4e00\u6b21\u5f80\u8fd4\u82b1\u8d39\u7684\u65f6\u95f4\u3002\n\n\u7531\u6b64\u53d1\u73b0\uff0c\u90a3\u4e2a\u767d\u5ad6\u7684\u7cd6\u5e94\u8be5\u4ece\u79bb\u6700\u8fd1\u7a7a\u5730\u6700\u8fdc\u7684\u90a3\u4e2a\u5546\u5e97\u53bb\u62ff\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u8003\u8651\u4ece\u6bcf\u4e2a\u5546\u5e97\u4e70\u591a\u5c11\u4e2a\u7cd6\u3002\u8fd9\u91cc\u8003\u8651\u53cd\u6094\u8d2a\u5fc3\u3002\n\n\u8003\u8651\u6211\u4eec\u5230\u8fbe\u6bcf\u4e2a\u5546\u5e97\u65f6\uff0c\u6700\u591a\u53ef\u4ee5\u6709\u591a\u5c11\u65f6\u95f4\u7528\u4e8e\u989d\u5916\u7684\u5f80\u8fd4\u82b1\u8d39\u7684\u65f6\u95f4\u3002\u6211\u4eec\u5148\u5047\u5b9a\u4e0d\u65ad\u5f80\u8fd4\u628a\u5546\u5e97\u4e70\u7a7a\u3002\u7136\u540e\u6bcf\u6b21\u5220\u9664\u5f80\u8fd4\u4e00\u6b21\u82b1\u8d39\u65f6\u95f4\u6700\u591a\u7684\u7cd6\u76f4\u5230\u5728\u9650\u5236\u4e4b\u5185\u3002\n\n\u8fd9\u91cc\u8981\u6ce8\u610f\u4e00\u4e9b\u5b9e\u73b0\u4e0a\u7684\u7ec6\u8282\u3002\u5c31\u662f\u8bf4\u5c31\u7b97\u9f9f\u5154\u540c\u65f6\u5230\u8fbe\u5546\u5e97\uff0c\u5154\u8fd8\u662f\u80fd\u4e70\u7cd6\uff0c\u5b9e\u73b0\u4e0a\u9700\u8981\u52a0\u4e0a\u4e00\u4e9b\u989d\u5916\u8d39\u7528\u4f7f\u5f97\u5b83\u80fd\u591f\u6210\u529f\u4e70\u4e86\u4e00\u4e9b\u7cd6\u3002\n\n```cpp\n#include <bits/stdc++.h>\n#define pii pair <int , int>\n#define pll pair <LL , LL>\n#define mp make_pair\n#define fs first\n#define sc second\nusing namespace std;\ntypedef long long LL;\ntypedef unsigned long long ULL;\n\n//const int Mxdt=100000;\n//static char buf[Mxdt],*p1=buf,*p2=buf;\n//#define getchar() p1==p2&&(p2=(p1=buf)+fread(buf,1,Mxdt,stdin),p1==p2)?EOF:*p1++;\n\ntemplate <typename T>\nvoid read(T &x) {\n\tT f=1;x=0;char s=getchar();\n\twhile(s<'0'||s>'9') {if(s=='-') f=-1;s=getchar();}\n\twhile(s>='0'&&s<='9') {x=(x<<3)+(x<<1)+(s^'0');s=getchar();}\n\tx *= f;\n}\n\ntemplate <typename T>\nvoid write(T x , char s='\\n') {\n\tif(!x) {putchar('0');putchar(s);return;}\n\tif(x<0) {putchar('-');x=-x;}\n\tT t = 0 , tmp[25] = {};\n\twhile(x) tmp[t ++] = x % 10 , x /= 10;\n\twhile(t -- > 0) putchar(tmp[t] + '0');\n\tputchar(s);\n}\n\nconst int MAXN = 5e5 + 5;\nconst int inf = 1e9;\n\nint pos[MAXN] , n;\nLL A[MAXN];\n\ninline int Abs(int x) {\n    return x < 0?-x:x;\n}\n\nint main() {\n//    freopen(\"2-1.in\" , \"r\" , stdin);\n//    freopen(\"tortoise.out\" , \"w\" , stdout);\n\n    read(n);\n    LL Sum = 0;\n    for (int i = 1; i <= n; ++i) read(A[i]) , Sum += max(0ll , A[i]);\n\n    int las = -inf;\n\n    for (int i = 1; i <= n; ++i) {\n        if(A[i] == -1) las = i;\n        else pos[i] = i - las; \n    }\n    if(las == -inf) {\n        LL ans = 0;\n        for (int i = 1; i <= n; ++i) ans += A[i];\n        write(ans - 1);\n        return 0;\n    }\n\n    las = inf;\n    for (int i = n; i >= 1; --i) {\n        if(A[i] == -1) las = i;\n        else if(las - i < pos[i]) pos[i] = las - i;\n    }\n    \n    LL ans = 0 , Tot = 0;\n    priority_queue <pll , vector <pll> , less <pll> > Q;\n\t\n\tfor (int i = 1; i <= n; ++i) if(A[i] != -1) {\n\t\tint j = i;\n\t\twhile(j < n && A[j + 1] != -1) j ++;\n\t\t\n\t\tint p = -1 , mx = -1;\n\t\tfor (int k = i; k <= j; ++k) if(A[k] > 0 && pos[k] > mx) {\n\t\t\tmx = pos[k];\n\t\t\tp = k;\n\t\t}\n\t\t\n\t\tif(p != -1) A[p] -- , ans ++;\n\t\t\n\t\tfor (int k = i; k <= j; ++k) {\n\t\t\tint lim = (k - 1) / 2 + (k >= p ? 0 : pos[k]);\n\t\t\t\n\t\t\tif(A[k]) Q.push(mp(pos[k] , A[k])) , ans += A[k] , Tot += A[k] * pos[k];\n\t\t\t\n\t\t\twhile(Tot > lim) {\n\t\t\t\t\n\t\t\t\tpll cur = Q.top();Q.pop();\n\t\t\t\tLL tmp = min(cur.sc , (Tot - lim + cur.fs - 1) / cur.fs);\n\t\t\t\tTot -= tmp * cur.fs;ans -= tmp;\n\t\t\t\tcur.sc -= tmp;\n\t\t\t\t\n\t\t\t\tif(cur.sc) Q.push(cur);\n\t\t\t}\n\t\t}\n\t\t\n\t\ti = j;\n\t}\n\t\n\twrite(Sum - ans);\n\t\n    return 0;\n}\n```",
        "postTime": 1685023285,
        "uid": 171554,
        "name": "Reanap",
        "ccfLevel": 9,
        "title": "Tortoise"
    }
]