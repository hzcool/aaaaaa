[
    {
        "content": "## \u9898\u89e3\n\n### \u9898\u610f\uff1a\u7ed9\u4f60\u4e00\u4e2a\u521d\u59cb\u68cb\u76d8\uff0c\u8981\u6c42\u7528\u6700\u5c11\u7684\u6b65\u6570\u79fb\u52a8\u9a6c\u8fbe\u5230\u5982\u4e0a\u56fe\u7684\u76ee\u6807\u72b6\u6001\uff08\u8981\u6c42\u68cb\u76d8\u4e2d\u7684\u9a6c\u53ea\u80fd\u8d70\u201c\u65e5\u201d\uff09\u3002\n\n\u4f20\u9001\u95e8\uff1a[\u900f\u5f7b](https://www.cnblogs.com/ZAGER/p/9768170.html)\n\n\u54b1\u4eec\u5148\u629b\u5f00$IDA^*$\uff0c\u5148\u5982\u4f55\u4f18\u5316\u7206\u641c\uff1b\n\n\u8fd9\u91cc\u7684\u9a6c\u548c\u8c61\u68cb\u91cc\u7684\u9a6c\u8d70\u6cd5\u76f8\u540c\uff0c\u4f46\u9898\u76ee\u4e2d\u8981\u6c42\u8ba9\u9a6c\u8d70\uff0c\u4f46\u662f\u8981\u662f\u9a6c\u7684\u8bdd\uff0c\u641c\u7d22\u5206\u652f\u6bd4\u8f83\u591a\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u8003\u8651\u8ba9\u7a7a\u683c\u8d70\uff08\u5f88\u663e\u7136\u5427\uff09\u3002\n\n### \u4e0b\u9762\u6b65\u5165\u6b63\u9898\uff1a\n\n$IDA^*$\u5c31\u662f\u5e26\u6709\u8fed\u4ee3\u52a0\u6df1\u548c\u4f30\u4ef7\u51fd\u6570\u4f18\u5316\u7684\u641c\u7d22\u3002\n\n\u53ef\u80fd\u67d0\u4e9b\u4eba\u5bf9\u4ee5\u4e0a\u4e24\u4e2a\u540d\u8bcd\u5f88\u964c\u751f\uff0c\u4e0b\u9762\u4e00\u4e9b\u524d\u7f6e\u77e5\u8bc6\u53ef\u80fd\u4f1a\u5e26\u4f60\u900f\u5f7b\u4e00\u4e0b\u3002\n\n### \u524d\u7f6e\u77e5\u8bc61\uff1a\u8fed\u4ee3\u52a0\u6df1\n\n#### \u5b9a\u4e49\uff1a\n\n\u6bcf\u6b21\u9650\u5b9a\u4e00\u4e2a$maxdep$\u6700\u5927\u6df1\u5ea6\uff0c\u4f7f\u641c\u7d22\u6811\u7684\u6df1\u5ea6\u4e0d\u8d85\u8fc7$maxdep$\u3002\n\n```cpp\n\tfor(R int maxdep=1;maxdep<=\u9898\u76ee\u4e2d\u7ed9\u7684\u6700\u5927\u6b65\u6570;maxdep++){\n\t\tdfs(0,maxdep);//0\u4e3a\u51fa\u5165\u51fd\u6570\u4e2d\u5f53\u524d\u6b65\u6570\uff0cmaxdep\u4e3a\u4f20\u5165\u7684\u6700\u5927\u6df1\u5ea6\u3002\n\t\tif(success)break;//\u5982\u679c\u641c\u7d22\u6210\u529f\u5219\u4f1a\u5728dfs\u51fd\u6570\u4e2d\u5c06success\u8d4b\u503c\u4e3a1\u3002\n\t}\n```\n\n#### \u4f7f\u7528\u8303\u56f4:\n\n1.\u5728\u6709\u4e00\u5b9a\u7684\u9650\u5236\u6761\u4ef6\u65f6\u4f7f\u7528\uff08\u4f8b\u5982\u672c\u9898\u4e2d\u201c\u5982\u679c\u80fd\u5728$15$\u6b65\u4ee5\u5185\uff08\u5305\u62ec$15$\u6b65\uff09\u5230\u8fbe\u76ee\u6807\u72b6\u6001\uff0c\u5219\u8f93\u51fa\u6b65\u6570\uff0c\u5426\u5219\u8f93\u51fa$-1$\u3002\u201c\uff09\u3002\n\n2.\u9898\u76ee\u4e2d\u8bf4\u8f93\u51fa\u6240\u4ee5\u89e3\u4e2d\u7684\u4efb\u4f55\u4e00\u7ec4\u89e3\u3002\n\n#### \u4e3a\u4ec0\u4e48\u80fd\u591f\u964d\u4f4e\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\n\n\u6211\u4eec\u53ef\u80fd\u4f1a\u5728\u4e00\u4e2a\u6ca1\u6709\u89e3\uff08\u6216\u89e3\u5f88\u6df1\u7684\u5730\u65b9\u65e0\u9650\u9012\u5f52\u7136\u800c\u9898\u76ee\u4e2d\u8981\u6c42\u8f93\u51fa\u4efb\u4f55\u7684\u4e00\u7ec4\u89e3\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u9650\u5236\u4e00\u4e2a\u6df1\u5ea6\uff0c\u8ba9\u5b83\u53bb\u904d\u5386\u66f4\u591a\u7684\u5206\u652f\uff0c\u53bb\u66f4\u5e7f\u6cdb\u5730\u6c42\u89e3\uff0c(\u5176\u5b9e\u548c$BFS$\u6709\u5f02\u66f2\u540c\u5de5\u4e4b\u5999)\u3002\n\n### \u524d\u7f6e\u77e5\u8bc62\uff1a\u4f30\u4ef7\u51fd\u6570\n\n#### \u5b9a\u4e49\uff1a\n\n$f(n)=g(n)+h(n)$\n\n\u5176\u4e2d$f(n)$\u662f\u8282\u70b9\u7684\u4f30\u4ef7\u51fd\u6570\uff0c$g(n)$\u662f\u73b0\u5728\u7684\u5b9e\u9645\u6b65\u6570\uff0c$h(n)$\u662f\u5bf9\u672a\u6765\u6b65\u6570\u7684\u6700\u5b8c\u7f8e\u4f30\u4ef7\uff08\u201c\u5b8c\u7f8e\u201d\u7684\u610f\u601d\u662f\u53ef\u80fd\u4f60\u73b0\u5b9e\u4e0d\u53ef\u80fd\u5b9e\u73b0\uff0c\u4f46\u4f60\u8fd8\u8981\u62ff\u6700\u4f18\u7684\u6b65\u6570\u53bb\u628a$h(n)$\u7b97\u51fa\u6765\uff0c\u53ef\u80fd\u4e0d\u592a\u597d\u53e3\u80e1\uff0c\u53ef\u4ee5\u53c2\u8003\u4e0b\u9762\u7684\u5b9e\u4f8b\uff09\u3002\n\n#### \u5e94\u7528\uff1a\n\n```cpp\n    void dfs(int dep,int maxdep){\n        if(evaluate()+dep>maxdep)return;\n        //evaluate\u51fd\u6570\u4e3a\u5bf9\u672a\u6765\u4f30\u4ef7\u7684\u51fd\u6570\uff0c\u82e5\u672a\u6765\u4f30\u4ef7\u52a0\u5b9e\u9645\u6b65\u6570>\u8fed\u4ee3\u52a0\u6df1\u7684\u6df1\u5ea6\u5219return\u3002\n        if(!evaluate){\n            success=1;\n            printf(\"%d\\n\",dep);\n            return;\n        }\n        ......\n    }\n```\n\n### \u524d\u7f6e\u77e5\u8bc63\uff1a$A^*$\u548c$IDA^*$\u7684\u533a\u522b\n\n$A^*$\u662f\u7528\u4e8e\u5bf9$BFS$\u7684\u4f18\u5316\uff1b\n\n$IDA^*$\u662f\u5bf9\u7ed3\u5408\u8fed\u4ee3\u52a0\u6df1\u7684$DFS$ \u7684\u4f18\u5316\u3002\n\n\u672c\u8d28\u4e0a\u53ea\u662f\u5728$BFS$\u548c$DFS$\u4e0a\u52a0\u4e0a\u4e86\u4e00\u4e2a\u4f30\u4ef7\u51fd\u6570\u3002\n\n\u4f55\u65f6\u4f7f\u7528\u56e0\u9898\u800c\u5b9a\uff1a\n\n$A^*$\uff08[[SCOI2007]k\u77ed\u8def](https://www.luogu.org/problemnew/show/P4467)\uff09;$IDA^*$\uff08[[SCOI2005]\u9a91\u58eb\u7cbe\u795e](https://www.luogu.org/problemnew/show/P2324)\u548c[UVA11212 Editing a Book](https://www.luogu.org/problemnew/show/UVA11212)\uff09\u3002\n\n\u524d\u7f6e\u77e5\u8bc6\u6bd5\uff01\uff01\uff01\n\n\u73b0\u5728\u5c31\u662f\u8981\u60f3\u4e00\u4e2a\u6bd4\u8f83\u597d\u7684\u4f30\u4ef7\u51fd\u6570\uff08\u82e5\u4f30\u4ef7\u51fd\u6570\u4e0d\u597d\u7684\u8bdd\uff0c\u4f18\u5316\u6548\u7387\u5c31\u5e76\u4e0d\u9ad8\uff0c\u4f8b\u5982\u82e5\u4f30\u4ef7\u51fd\u6570\u4e00\u76f4\u4e3a0\uff0c\u90a3\u5c31\u662f\u7206\u641c\uff09\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u60f3\u4e00\u4e0b\uff0c\u6bcf\u6b21\u7a7a\u767d\u683c\u5b50\u548c\u9ed1\u767d\u68cb\u5b50\u4ea4\u6362\uff0c\u6700\u4f18\u7684\u60c5\u51b5\u5c31\u662f\u6bcf\u6b21\u90fd\u628a\u9ed1\u767d\u68cb\u5b50\u79fb\u52a8\u5230\u76ee\u6807\u683c\u5b50\u3002\n\n\u90a3\u4e48\u4f60\u7684\u4f30\u4ef7\u51fd\u6570\u5c31\u51fa\u6765\u4e86\uff1a\n\n```cpp\n    const int goal[7][7]={\n        {0,0,0,0,0,0},\n        {0,1,1,1,1,1},\n        {0,0,1,1,1,1},\n        {0,0,0,2,1,1},\n        {0,0,0,0,0,1},\n        {0,0,0,0,0,0}\n    };    \n    inline int evaluate(){\n        R int cnt=0;\n        for(R int i=1;i<=5;i++)\n            for(R int j=1;j<=5;j++)\n                if(mp[i][j]!=goal[i][j])cnt++;\n        return cnt;\n    }\n```\n\n\u4e0b\u9762\u5c31\u662f\u7206\u641c\u4e86\uff1a\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\n#include<cctype>\n#define ll long long\n#define R register\nusing namespace std;\ntemplate<typename T>inline void read(T &a){\n    char c=getchar();T x=0,f=1;\n    while(!isdigit(c)){if(c=='-')f=-1;c=getchar();}\n    while(isdigit(c)){x=(x<<1)+(x<<3)+c-'0';c=getchar();}\n    a=f*x;\n}\nint n,m,t,mp[7][7],stx,sty,success;\nchar ch;\nconst int dx[]={0,1,1,-1,-1,2,2,-2,-2};\nconst int dy[]={0,2,-2,2,-2,1,-1,1,-1};\nconst int goal[7][7]={\n    {0,0,0,0,0,0},\n    {0,1,1,1,1,1},\n    {0,0,1,1,1,1},\n    {0,0,0,2,1,1},\n    {0,0,0,0,0,1},\n    {0,0,0,0,0,0}\n};\ninline int evaluate(){\n    R int cnt=0;\n    for(R int i=1;i<=5;i++)\n        for(R int j=1;j<=5;j++)\n            if(mp[i][j]!=goal[i][j])cnt++;\n    return cnt;\n}\ninline int safe(R int x,R int y){\n    if(x<1||x>5||y<1||y>5)return 0;\n    return 1;\n}\ninline void A_star(R int dep,R int x,R int y,R int maxdep){\n    if(dep==maxdep){\n        if(!evaluate())success=1;\n        return;\n    }\n    for(R int i=1;i<=8;i++){\n        R int xx=x+dx[i];\n        R int yy=y+dy[i];\n        if(!safe(xx,yy))continue;\n        swap(mp[x][y],mp[xx][yy]);\n        int eva=evaluate();\n        if(eva+dep<=maxdep)\n            A_star(dep+1,xx,yy,maxdep);\n        swap(mp[x][y],mp[xx][yy]);//\u56de\u6eaf\n    }\n}\nint main(){\n    read(t);\n    while(t--){\n        success=0;\n        for(R int i=1;i<=5;i++){\n            for(R int j=1;j<=5;j++){\n                cin>>ch;\n                if(ch=='*')mp[i][j]=2,stx=i,sty=j;//\u8bb0\u5f55\u8d77\u70b9\u5373\u4e3a\u7a7a\u767d\u683c\u5b50\n                else mp[i][j]=ch-'0';\n            }\n        }\n        if(!evaluate()){printf(\"0\\n\");continue;}\n        for(R int maxdep=1;maxdep<=15;maxdep++){\n            A_star(0,stx,sty,maxdep);\n            if(success){printf(\"%d\\n\",maxdep);goto ZAGER;}\n        }\n        printf(\"-1\\n\");\n        ZAGER:;\n    }\n    return 0;\n}\n```\n",
        "postTime": 1538867088,
        "uid": 87967,
        "name": "ZAGER",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2324 \u3010[SCOI2005]\u9a91\u58eb\u7cbe\u795e\u3011"
    },
    {
        "content": "\u672c\u4eba\u73b0\u5728\u4ee50ms\u7a33\u5c45rank1\uff0c\u666e\u901a\u7684\u8fed\u4ee3\u52a0\u6df1\uff0c\u52a0\u4e86\u5e38\u6570\u4f18\u5316\uff0c\u539f\u6765\u4ee3\u7801\u5728\u6bcf\u5c42\u90fd\u7528\u4e00\u4e2a5\\*5\u7684\u5faa\u73af\u67e5\u6709\u591a\u5c11\u4e2a\u4e0d\u540c\uff0c8ms\uff1b\n\n\u663e\u7136\uff0c\u5982\u679c\u679a\u4e3e\u9a91\u58eb\u5206\u5e03\uff0c\u72b6\u6001\u5de8\u591a\uff0c\u4e14\u4e0d\u597d\u5224\u65ad\u7a7a\u683c\u5728\u54ea\uff0c\u6240\u4ee5\u6362\u4e2a\u601d\u8def\uff0c\u4e0d\u79fb\u9a91\u58eb\uff0c\u79fb\u7a7a\u683c\n\n\u8fed\u4ee3\u52a0\u6df1\u5c31\u662f\u6bcf\u6b21\u9650\u5236\u641c\u7d22\u6df1\u5ea6\uff0c\u5341\u5206\u5e7f\u641c\n\n\u4f46\u662f\uff0c\u4ed4\u7ec6\u60f3\u60f3\uff0c\u53ea\u6709\u56db\u79cd\u60c5\u51b5\uff1a\n\n1.\u539f\u6765\u9a91\u58eb\u5f52\u4f4d\u4e86\uff0c\u6539\u5b8c\u6ca1\u5f52\u4f4d\n\n2.\u539f\u6765\u9a91\u58eb\u6ca1\u5f52\u4f4d\uff0c\u6539\u5b8c\u5f52\u4f4d\u4e86\n\n3.\u539f\u6765\u7a7a\u4f4d\u6ca1\u5f52\u4f4d\uff0c\u6539\u5b8c\u5f52\u4f4d\u4e86\n\n4.\u539f\u6765\u7a7a\u4f4d\u5f52\u4f4d\u4e86\uff0c\u6539\u5b8c\u6ca1\u5f52\u4f4d\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#define f(i,a,b)  for(i=a;i<=b;++i)\nusing namespace std;\nint a[6][6];\nint b[6][6]={{},\n            {0,1,1,1,1,1},\n            {0,0,1,1,1,1},\n            {0,0,0,-1,1,1},\n            {0,0,0,0,0,1},\n            {0,0,0,0,0,0}};//\u6253\u4e2a\u8868\u65b9\u4fbf\u4e4b\u540e\u5224\u65ad\uff1b\nint dx[8]={-2,-2,-1,1,-1,1,2,2};\nint dy[8]={-1,1,2, 2,-2,-2,-1,1};//\u987a\u5e8f\u5f88\u91cd\u8981\uff0c\u7b49\u4e0b\u53ef\u4ee5\u77e5\u9053\uff1b\nint mxd;//maxdeep\u6700\u5927\u6df1\u5ea6\nint check(int k,int x,int y,int sum,int la)\n{\n //   printf(\"%d\\n\",sum);\n    if(k+sum>mxd)return 0;//\u5982\u679c\u8d85\u8fc7\u9650\u5236\uff0c\u76f4\u63a5\u8fd4\u56de0\n    if(sum==0)return 1;//\u5168\u90e8\u5f52\u4f4d\uff0c\u8fd4\u56de1\n    int i,xx,yy,p;\n    bool fl=0,fll=0;\n    f(i,0,7)\n    {\n        if(i!=(7-la))//\u5c31\u662f\u8fd9\u91cc\uff0c7-la\u5c31\u662f\u4e0a\u4e00\u6b21\u79fb\u52a8\u7684\u53cd\u65b9\u5411\uff0c\u9632\u6b62\u79fb\u56de\u53bb\u5bfc\u81f4\u6b7b\u9012\u5f52\n        {\n            xx=x+dx[i];yy=y+dy[i];\n            p=sum;//sum\u662f\u5f53\u524d\u672a\u5f52\u4f4d\u6570\uff0c\u7528p\u5b58\u51fa\u6765\u65b9\u4fbf\u4fee\u6539\n            if(xx<=5&&xx>0&&yy<=5&&yy>0)\n            {\n                if(a[xx][yy]==b[xx][yy]&&a[xx][yy]!=b[x][y])++p;\n                if(a[xx][yy]!=b[xx][yy]&&a[xx][yy]==b[x][y])--p;\n                if(b[xx][yy]==-1)--p;\n                if(b[x][y]==-1)++p;//\u56db\u79cd\u60c5\u51b5\u5224\u65ad\n                a[xx][yy]^=a[x][y],a[x][y]^=a[xx][yy],a[xx][yy]^=a[x][y];\n                fl=check(k+1,xx,yy,p,i);//\u4e0d\u80fd\u76f4\u63a5\u8fd4\u56decheck\u7684\u503c\uff0c\u53ea\u67091\u624d\u8fd4\u56de\uff1b\n                if(fl)return 1;\n                a[xx][yy]^=a[x][y],a[x][y]^=a[xx][yy],a[xx][yy]^=a[x][y];\n            }\n        }\n    }\n    return 0;//\u90fd\u4e0d\u884c\uff0c\u8fd4\u56de0\uff1b\n}\nint main()\n{\n    int i,j,t;\n    char k;\n    scanf(\"%d\",&t);\n    while(t)\n    {\n        int mn=0,x,y;\n        f(i,1,5)\n        f(j,1,5)\n        {\n            cin>>k;\n            if(k=='*')\n            {\n                a[i][j]=-1;\n                x=i;y=j;\n            }\n            else a[i][j]=k-'0';\n            if(a[i][j]!=b[i][j])mn++;//mn\u662f\u6df1\u5ea6\u6700\u4f4e\u7684\uff0c\u6709\u4e00\u4e2a\u4e0d\u540c\u5c31\u52a01\uff0c\u56e0\u4e3a\u5f52\u4f4d\u8fd9\u4e2a\u81f3\u5c111\u6b21\u64cd\u4f5c\n        }\n        bool fl=0;\n       // printf(\"%d\\n\",mn);\n        f(i,mn,16)\n        {\n            mxd=i;\n            if(check(0,x,y,mn,-1))\n            {\n                printf(\"%d\\n\",i-1),fl=1;break;\n            }\n        }\n        if(!fl)\n        printf(\"-1\\n\");\n        t--;\n    }\n    return 0;\n}\n```",
        "postTime": 1508940806,
        "uid": 7019,
        "name": "\u300e\u3000\u300f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2324 \u3010[SCOI2005]\u9a91\u58eb\u7cbe\u795e\u3011"
    },
    {
        "content": "## Solution\n\n+ \u989d\uff0c\u5f53\u6211\u770b\u5230\u5927\u4f6c\u4eec\u90fd\u7528\u7684\u4ec0\u4e48\u8fed\u4ee3\u52a0\u6df1\u554a\uff0c\u53cc\u5411\u5e7f\u641c\u554a\uff0c\u4ec0\u4e48\u7684\uff0c\u5176\u5b9e\u672c\u9898\u662f\u4e00\u9053\u975e\u5e38\u597d\u7684A*\u5165\u95e8\u9898\uff0c\u849f\u84bb\u6211\u6765\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\u8fd9\u9898\u542f\u53d1\u5f0f\u641c\u7d22\u7684\u505a\u6cd5\u3002\n\n+ \u4f55\u4e3a\u4f30\u4ef7\u51fd\u6570\uff1f\n```\nif(d+l>16) return ;\n```\n\u8fd9\u4e00\u53e5\u8bdd\u770b\u8d77\u6765\u5f88\u7b80\u5355\u5bf9\u5427\u3002\u5b83\u7684\u542b\u4e49\u76f8\u4fe1\u5404\u4f4d\u5de8\u4f6c\u90fd\u8bb2\u8fc7\u4e86\uff0c\u4e5f\u5c31\u662f\u5df2\u7ecf\u79fb\u52a8\u7684\u6b65\u6570\u548c\u5b8c\u6210\u6700\u7ec8\u72b6\u6001\u6700\u5c11\u9700\u8981\u79fb\u52a8\u7684\u6b65\u6570\u3002\u4e5f\u76f8\u4fe1\u5404\u4f4d\u5927\u795e\u4e00\u773c\u5c31\u80fd\u770b\u660e\u767d\u5b83\u7684\u539f\u7406\u3002\u5224\u65ad\u5b83\u7684\u65b9\u6cd5\u5341\u5206\u7b80\u5355\u7c97\u66b4\uff0c\u76f4\u63a5\u62ff\u5f53\u524d\u72b6\u6001\u4e0e\u6700\u7ec8\u72b6\u6001\u6bd4\u8f83\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u662f16\u800c\u4e0d\u662f15\uff0c\u8fd9\u4e2a\u662f\u56e0\u4e3a\u6211\u628a\u7a7a\u4f4d\u4e5f\u8ba1\u5165\u4e86\u72b6\u6001\uff0c\u800c\u5728\u6700\u540e\u4e00\u6b65\u65f6\uff0c\u6211\u53ef\u4ee5\u4e00\u6b21\u6027\u6062\u590d\u4e24\u4e2a\u72b6\u6001\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u9a91\u58eb\u5f52\u4f4d\uff0c\u5e76\u4e14\u7a7a\u683c\u4e5f\u79fb\u52a8\u5230\u4e86\u4e2d\u95f4\u3002\n\n+ \u53e6\u5916\u5462\uff0c\u4e5f\u4e0d\u7b97\u526a\u679d\uff0c\u53ea\u80fd\u7b97\u662f\u4e00\u4e2a\u5c0f\u4f18\u5316\uff0c\u5728\u679a\u4e3e\u65b9\u5411\u65f6\uff0c\u6211\u628a\u4e92\u4e3a\u76f8\u53cd\u6570\u7684\u4e24\u7ec4\u6570\u503c\u653e\u5728\u4e00\u7ef4\u6570\u7ec4\u7684\u4e24\u7aef\uff0c\u5c31\u6709\n```\n-2, -2, -1, -1, 1, 1, 2, 2\n-1 , 1, -2,  2,-2, 2,-1, 1 \n```\n\u8fd9\u6837\u6709\u4ec0\u4e48\u7528\u5462\uff1f\u5728\u5faa\u73af\u4e0e\u9012\u5f52\u65f6\uff0c\u53ef\u4ee5\u7b80\u5355\u5730\u5229\u7528\u4e0b\u6807\u52a0\u548c\u7684\u6570\u503c\u8fdb\u884c\u5224\u65ad\uff0c\u9632\u6b62\u8df3\u5230\u4e00\u4e2a\u5730\u65b9\u518d\u8df3\u56de\u53bb\uff0c\u51cf\u5c11\u679a\u4e3e\u91cf\u3002\n\n+ \u867d\u8bf4\u8fd9\u9898\u53ea\u7528\u5230\u4e86\u4e0a\u9762\u63d0\u5230\u7684\u8fd9\u4e24\u70b9\uff0c\u4f46\u4f30\u4ef7\u51fd\u6570\u5df2\u7ecf\u662f\u4e00\u4e2a\u6781\u5f3a\u7684\u4f18\u5316\u4e86\uff0c\u80fd\u591f\u526a\u6389\u5927\u91cf\u5197\u4f59\u7684\u72b6\u6001\uff0c\u8fd9\u4e5f\u5c31\u662f\u542f\u53d1\u5f0f\u641c\u7d22\u7684\u7075\u9b42\u6240\u5728\u3002\n\n### Code\n\n```\n#include<cstdio>\n#include<iostream> \n#include<cstring>\n#define INF 536870912\nusing namespace std;\nchar map[6][6];\nchar check[6][6]={\n\t'0','0','0','0','0','0',\n\t'0','1','1','1','1','1',\n\t'0','0','1','1','1','1',\n\t'0','0','0','*','1','1',\n\t'0','0','0','0','0','1',\n\t'0','0','0','0','0','0',\n};\nint xm[9]={0,-2,-2,-1,-1,1,1,2,2};\nint ym[9]={0,-1,1,-2,2,-2,2,-1,1};\nint ans;\ninline void swap(char &p1,char &p2){\n\tchar mid=p1; p1=p2; p2=mid;\n}\ninline int dif(){\n\tint ret=0;\n\tfor(int i=1;i<=5;i++){\n\t\tfor(int j=1;j<=5;j++){\n\t\t\tif(map[i][j]!=check[i][j]) ret++;\n\t\t}\n\t}\n\treturn ret;\n}\ninline void dfs(int x,int y,int d,int f){\n\tint l=dif();\n\tif(d+l>16) return ;\n\tif(d>=ans) return ;\n\tif(l==0){\n\t\tans=d; return ;\n\t}\n\tfor(int i=1;i<=8;i++){\n\t\tif((x+xm[i]<1)||(x+xm[i]>5)) continue;\n\t\tif((y+ym[i]<1)||(y+ym[i]>5)) continue;\n\t\tif(f+i!=9){\n\t\t\tswap(map[y+ym[i]][x+xm[i]],map[y][x]);\n\t\t\tdfs(x+xm[i],y+ym[i],d+1,i);\n\t\t\tswap(map[y+ym[i]][x+xm[i]],map[y][x]);\n\t\t}\n\t}\n}\ninline void init(){\n\tint x,y;\n\tfor(int i=1;i<=5;i++) cin>>map[i]+1;\n\tfor(int i=1;i<=5;i++){\n\t\tfor(int j=1;j<=5;j++){\n\t\t\tif(map[i][j]=='*') { x=j; y=i; }\n\t\t}\n\t}\n\tans=25;\n\tdfs(x,y,0,0);\n\tprintf(\"%d\\n\",ans==25?-1:ans);\n}\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\twhile(t--) init();\n\treturn 0;\n}\n```",
        "postTime": 1527074390,
        "uid": 83253,
        "name": "Luan_233",
        "ccfLevel": 0,
        "title": "P2324 [SCOI2005]\u9a91\u58eb\u7cbe\u795e \u9898\u89e3by Luan"
    },
    {
        "content": "\u8fed\u4ee3\u52a0\u6df1\u7684A*\u7b97\u6cd5\n\n\u6240\u8c13\u8fed\u4ee3\u52a0\u6df1\u5c31\u662f\u6bcf\u6b21**\u9650\u5236\u641c\u7d22\u6df1\u5ea6**\uff0c\n\u8fd9\u6837\u53ef\u4ee5\u5728\u6574\u4e2a\u641c\u7d22\u6811\u6df1\u5ea6\u5f88\u5927\u800c\u7b54\u6848\u6df1\u5ea6\u53c8\u5f88\u5c0f\u7684\u60c5\u51b5\u4e0b\u5927\u5927\u63d0\u9ad8\u6548\u7387\n\n\u56e0\u4e3a\u6700\u5927\u6b65\u6570\u4e0d\u8d85\u8fc715\uff0c\n\u6240\u4ee5\u76f4\u63a5\u679a\u4e3e1\u523015\u4f5c\u4e3a\u6700\u5927\u6b65\u6570\u8fdb\u884c**\u8fed\u4ee3\u52a0\u6df1\u641c\u7d22**\u5224\u65ad\n\n\u5728\u8fd9\u91cc\u6211\u4eec\u7684**A*\u4f30\u4ef7\u51fd\u6570**\u8bbe\u7f6e\u4e3a\n\n**\u5f53\u524d\u72b6\u6001\u8fd8\u6709\u591a\u5c11\u4e2a\u4f4d\u7f6e\u4e0e\u76ee\u6807\u72b6\u6001\u4e0d\u5bf9\u5e94**\n\n\u82e5**\u5f53\u524d\u6b65\u6570+\u4f30\u4ef7\u51fd\u6570\u503c>\u679a\u4e3e\u7684\u6700\u5927\u6b65\u6570**\n\u5219\u76f4\u63a5\u8fd4\u56de\n\n\u5f53\u7136\u8fd9\u53ea\u662f\u57fa\u672c\u601d\u8def\uff0c\u641c\u7d22\u8fd8\u53ef\u4ee5\u6709\u5f88\u5927\u4f18\u5316\n\n\u6211\u4eec\u5728\u641c\u7d22\u4e2d\u518d\u52a0\u5165**\u6700\u4f18\u6027\u526a\u679d**\uff0c\n\u663e\u7136\u5f53\u524d\u679a\u4e3e\u4e0b\u4e00\u4e2a\u72b6\u6001\u65f6\u5982\u679c**\u56de\u5230\u4e0a\u4e00\u4e2a\u72b6\u6001\u80af\u5b9a\u4e0d\u662f\u6700\u4f18**\uff0c\n\u6240\u4ee5\u6211\u4eec\u5728\u679a\u4e3e\u4e0b\u4e00\u72b6\u6001\u65f6\u52a0\u5165\u5bf9\u8fd9\u79cd\u60c5\u51b5\u7684\u5224\u65ad\n\n\u5c06\u72b6\u6001\u6570\u7ec4\u5bf9\u79f0\u6392\u5217\u4f1a\u5f88\u65b9\u4fbf\u8fdb\u884c\u8fd9\u4e00\u64cd\u4f5c\n```\nint nxtx[]={1,1,2,2,-2,-2,-1,-1};\nint nxty[]={2,-2,1,-1,1,-1,2,-2};\n```\n********************************\n\n```\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<queue>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\n\nint read()\n{\n    int f=1,x=0;\n    char ss=getchar();\n    while(ss<'0'||ss>'9'){if(ss=='-')f=-1;ss=getchar();}\n    while(ss>='0'&&ss<='9'){x=x*10+ss-'0';ss=getchar();}\n    return f*x;\n}\n\nint n;\nint ans[6][6]=\n{{0,0,0,0,0,0},\n {0,1,1,1,1,1},\n {0,0,1,1,1,1},\n {0,0,0,2,1,1},\n {0,0,0,0,0,1},\n {0,0,0,0,0,0}};\nint nxtx[]={1,1,2,2,-2,-2,-1,-1};\nint nxty[]={2,-2,1,-1,1,-1,2,-2};\nint a[10][10],k;\nint judge;\n\nint check()\n{\n    for(int i=1;i<=5;++i)\n    for(int j=1;j<=5;++j)\n    if(ans[i][j]!=a[i][j])return 0;\n    return 1;\n}\n\nint test(int step)\n{\n    int cnt=0;\n    for(int i=1;i<=5;++i)\n    for(int j=1;j<=5;++j)\n    if(ans[i][j]!=a[i][j]){ if(++cnt+step>k) return 0;}\n    return 1;\n}\n\nvoid A_star(int step,int x,int y,int pre)//pre\u8bb0\u5f55\u4e0a\u4e00\u6b65\u600e\u4e48\u5230\u5f53\u524d\u72b6\u6001\n{\n    if(step==k){ if(check())judge=1; return;}\n    if(judge) return;\n    for(int i=0;i<8;++i)\n    {\n        int nx=x+nxtx[i],ny=y+nxty[i];\n        if(nx<1||nx>5||ny<1||ny>5||i+pre==7) continue;//\u52a0\u5165\u4e86\u4e0a\u8ff0\u7684\u6700\u4f18\u6027\u526a\u679d\n        swap(a[x][y],a[nx][ny]);\n        if(test(step)&&!judge) A_star(step+1,nx,ny,i);//A*\u4f30\u4ef7\u518d\u5411\u4e0b\u641c\u7d22\n        swap(a[x][y],a[nx][ny]);\n    }\n}\n\nint main()\n{\n    n=read();\n    while(n--)\n    {\n        int x,y; judge=0;\n        for(int i=1;i<=5;++i)\n        {\n            char ss[7]; scanf(\"%s\",&ss);\n            for(int j=0;j<5;++j)\n            if(ss[j]=='*') a[i][j+1]=2,x=i,y=j+1;\n            else a[i][j+1]=ss[j]-'0';\n        }\n        for(k=1;k<=15;++k)\n        {\n            A_star(0,x,y,-1);\n            if(judge) { printf(\"%d\\n\",k); break;}\n        }\n        if(!judge)printf(\"-1\\n\");\n    }\n    return 0;\n}\n//niiick\n```",
        "postTime": 1530181011,
        "uid": 60885,
        "name": "niiick",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2324 \u3010[SCOI2005]\u9a91\u58eb\u7cbe\u795e\u3011"
    },
    {
        "content": "\u770bdalao\u90fd\u7528\u7684\u662f`ID-DFS`\u3001`IDA*`\u6216\u8005`A*`\uff0c\u8fd9\u91cc\u8d34\u4e00\u7bc7\u53cc\u5411`ID-DFS`\u7684\u9898\u89e3\u3002\n\n\u849f\u84bb\u9996\u5148\u7528\u7684\u662f\u5355\u5411`ID-DFS`\uff0c\u7136\u540e\u6beb\u65e0\u60ac\u5ff5\u5730T\u98de\uff0c\u53ea\u62ff\u4e86\u5341\u5206\u3002\u7136\u540e\u53d1\u73b0\u6837\u4f8b\u7684\u7b2c\u4e00\u4e2a\u90e8\u5206\uff08`7`\uff09\u8dd1\u5f97\u98de\u5feb\uff0c\u7b2c\u4e8c\u4e2a\u90e8\u5206\uff08`-1`\uff09\u6162\u5230\u6211\u4ee5\u4e3a\u6b7b\u5faa\u73af\u4e86\u3002\u8bd5\u7740\u8f93\u51faID-DFS\u7684\u5c42\u7ea7\uff0c\u53d1\u73b0`1-7`\u8fd9\u51e0\u5c42\u51e0\u4e4e\u77ac\u95f4\u8dd1\u5b8c\uff0c\u7136\u540e\u4ece`9`\u5f00\u59cb\u8d8a\u6765\u8d8a\u6162\uff0c`14`\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u8981\u4e24\u79d2\u4e86\u3002\n\n\u53cc\u5411`ID-DFS`\u7684\u7406\u5ff5\u548c\u53cc\u5411`BFS`\u5dee\u4e0d\u591a\uff0c\u90fd\u662f\u901a\u8fc7\u53cc\u5411\u641c\u7d22\u6765\u51cf\u5c11\u641c\u7d22\u6811\u7684\u5927\u5c0f\u3002\u53cc\u5411`ID-DFS`\u5c31\u662f\u4e24\u4e2a\u65b9\u5411\u4ea4\u66ff`ID-DFS`\uff0c\u6bcf\u4e2a\u65b9\u5411`8`\u5c42\uff0c\u672b\u4e00\u5c42\u5728`map`\u91cc\u8bb0\u5f55\u4e00\u4e0b\uff0c\u76f8\u9047\u65f6\u5c31\u5f97\u5230\u4e86\u7b54\u6848\u3002\n\n\u6700\u540e\u56e0\u4e3a\u9a9a\u64cd\u4f5c\u6bd4\u8f83\u591a\uff0c\u6413\u4e86\u4e00\u4e2a\u5c0f\u65f6\uff0c\u8dd1\u4e862.5s\u591a\uff0c\u7136\u540e\u6211\u770b\u7740\u522b\u4eba`1KB 500ms`\u7684`IDA*`\u4ee3\u7801\u601d\u8003\u4eba\u751f\u3002\n\n\u9644AC\u4ee3\u7801\uff1a\n\n```cpp\n#include <map>\n#include <cstdio>\nusing namespace std;\n\nchar gc()\n{\n\tchar c;\n\twhile((c=getchar())!='0' && c!='1' && c!='*')\n\t{\n\t\t;\n\t}\n\treturn c;\n}\n\nint gox[] = {1,2,-2,-1,-1,-2,2,1};\nint goy[] = {2,1,1,2,-2,-1,-1,-2};\n\nint csed[6][6] = {{},{0,1,1,1,1,1},{0,0,1,1,1,1},{0,0,0,0,1,1},{0,0,0,0,0,1},{0,0,0,0,0,0}};\n\nmap<int,int> edmmp;\nmap<int,int> bgmmp;\n\nint bg[6][6];\nint ed[6][6];\n\ntemplate<typename T> int bcode(T board) //\u9a9a\u64cd\u4f5c\uff0c\u56e0\u4e3a\u53d1\u73b0\u7528\u4e0d\u4e86int[][]\u548cint**\u4ee5\u53caint(*)[6]\uff0c\u4e8e\u662f\u5e72\u8106\u5f03\u7597\n{\n\tint res = 0;\n\tfor(int i=1; i<=5; ++i)\n\t{\n\t\tfor(int j=1; j<=5; ++j)\n\t\t{\n\t\t\tres <<= 1;\n\t\t\tres += board[i][j];\n\t\t}\n\t}\n\treturn res;\n}\n\ninline int lcode(int x,int y)\n{\n\treturn (x-1)*5+y-1;\n}\n\ntemplate<typename T> bool cregis(int wx,int wy,T board,map<int,int>& cmmp,map<int,int>& rmmp)\n{\n\tint chk = cmmp[bcode(board)];\n\t\n\tif(chk&(1<<lcode(wx,wy)))\n\t{\n\t\treturn true;\n\t}\n\t\n\tint& x = rmmp[bcode(board)];\n\t\n\tif(x)\n\t{\n\t\tx |= 1<<lcode(wx,wy);\n\t}\n\telse\n\t{\n\t\tx = 1<<lcode(wx,wy);\n\t}\n\t\n\treturn false;\n}\n\ntemplate<typename T> bool id_dfs(int life,int wx,int wy,T board,map<int,int>& cmmp,map<int,int>& rmmp)\n{\n\tif(!life)\n\t{\n\t\treturn cregis(wx,wy,board,cmmp,rmmp);\n\t}\n\tfor(int i=0; i<8; ++i)\n\t{\n\t\tint nxtwx = wx+gox[i];\n\t\tint nxtwy = wy+goy[i];\n\t\t\n\t\tif(nxtwx>0&&nxtwx<=5&&nxtwy>0&&nxtwy<=5)\n\t\t{\t\n\t\t\tswap(board[wx][wy],board[nxtwx][nxtwy]);\n\t\t\tif(id_dfs(life-1,nxtwx,nxtwy,board,cmmp,rmmp)) return true;\n\t\t\tswap(board[wx][wy],board[nxtwx][nxtwy]);\n\t\t}\n\t}\n\treturn false;\n}\n\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\tfor(int kkk=1; kkk<=t; ++kkk)\n\t{\n\t\tbgmmp.clear(); //\u8bb0\u5f97\u521d\u59cb\u5316\n\t\tedmmp.clear();\n\t\tfor(int i=1; i<=5; ++i)\n\t\t{\n\t\t\tfor(int j=1; j<=5; ++j)\n\t\t\t{\n\t\t\t\ted[i][j] = csed[i][j];\n\t\t\t}\n\t\t}\n\t\t\n\t\tint bwx,bwy;\n\t\tfor(int i=1; i<=5; ++i)\n\t\t{\n\t\t\tfor(int j=1; j<=5; ++j)\n\t\t\t{\n\t\t\t\tbg[i][j] = gc();\n\t\t\t\tif(bg[i][j]=='*')\n\t\t\t\t{\n\t\t\t\t\tbwx = i;\n\t\t\t\t\tbwy = j;\n\t\t\t\t\tbg[i][j] = 0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbg[i][j] ^= '0';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tid_dfs(0,3,3,ed,bgmmp,edmmp);\n\t\tif(id_dfs(0,bwx,bwy,bg,edmmp,bgmmp)) //\u7279\u5224\n\t\t{\n\t\t\tprintf(\"0\\n\");\n\t\t\tgoto ed;\n\t\t}\n\t\tfor(int i=1; i<=15; ++i)\n\t\t{\n\t\t\tif(i&1) //\u4ea4\u66ff\u8fdb\u884c\n\t\t\t{\n\t\t\t\tif(id_dfs((i+1)>>1,3,3,ed,bgmmp,edmmp))\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%d\\n\",i);\n\t\t\t\t\tgoto ed;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif(id_dfs(i>>1,bwx,bwy,bg,edmmp,bgmmp))\n\t\t\t\t{\n\t\t\t\t\tprintf(\"%d\\n\",i);\n\t\t\t\t\tgoto ed;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tprintf(\"-1\\n\");\n\t\t\n\t\ted:;\n\t}\n}\n```",
        "postTime": 1569140969,
        "uid": 49458,
        "name": "\u6728\u6728\uff01",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2324 \u3010[SCOI2005]\u9a91\u58eb\u7cbe\u795e\u3011"
    },
    {
        "content": "\u5177\u4f53\u600e\u4e48\u505a\u697c\u4e0a\u5927\u4f6c\u4eec\u8bf4\u7684\u5f88\u6e05\u695aorz\uff0c\u4e0d\u8fc7\u672c\u849f\u84bb\u6709\u4e00\u4e2a\u5c0f\u5c0f\u7684\u64cd\u4f5c\u2190\u2190\u3002\u3002\n\n\u672c\u849f\u84bb\u7279\u522b\u559c\u6b22\u4f4d\u8fd0\u7b97\uff0c\u6240\u4ee5\u5f53\u6211\u770b\u5230\u68cb\u76d8\u53ea\u67095\\*5\u7684\u65f6\u5019\uff0c\u6211\u9a6c\u4e0a\u5199\u4e86\u4e2a\u7ed3\u6784\u4f53\uff1a\n```cpp\nclass state\n\n{\npublic:\n\tint map, x, y;\n};\n\n```\n\u5176\u4e2dmap\u5728\u4e8c\u8fdb\u5236\u4e0b\u662f\u538b\u7f29\u540e\u7684\u68cb\u76d8\uff0c1\u8868\u793a\u9ed1\u9a91\u58eb\uff0c0\u8868\u793a\u767d\u9a91\u58eb\u3002x,y\u5373\u7a7a\u4f4d\u7f6e\u7684\u5750\u6807\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff1a\n\u5bf9\u4e8e\u6837\u4f8b\uff1a\n10110\n01*11\n10111\n01001\n00000\n\n\u538b\u7f29\u5230map\u91cc\n1011001*11101110100100000\n\n\u2018*\u2019\u53ef\u4ee5\u662f0\u62161\uff0c\u56e0\u4e3a\u6211\u4eec\u7684x\uff0cy\u5df2\u7ecf\u6307\u51fa\u5b83\u662f\u7a7a\u4f4d\u7f6e\u4e86\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u503c\u662f0\u8fd8\u662f1\u662f\u65e0\u610f\u4e49\u7684\u3002\n\n\u8fd9\u4e48\u538b\u7f29\u6709\u4ec0\u4e48\u7528\u5462\uff1femmm\uff0c\u65b9\u4fbf\u6bd4\u8f83\uff0c\u65b9\u4fbf\u8d4b\u503c\uff0c\u66f4\u91cd\u8981\u7684\u662f\u5b83\u770b\u4e0a\u53bb\u5f88\u5febOvO\n\n\n\u5f53\u7136\u4e86\uff0c\u8fd8\u8981\u6709\u4e00\u4e2a\u914d\u5957\u7684\u5b8f\u3002\n\n```cpp\n#define ITP(x, y) ((x) * 5 + (y))\n```\n\u8fd9\u4e2a\u5b8f\u7528\u6765\u5c06\u68cb\u76d8\u4e0a\u7684\u5750\u6807(x,y)\u8f6c\u6362\u4e3amap\u5728\u4e8c\u8fdb\u5236\u4e0b\u7684\u4f4d\u6570\u3002\n\n\n\n\u90a3\u4e48\u6211\u4eec\u600e\u4e48\u5224\u65ad\u5f53\u524d\u72b6\u6001now\u662f\u5426\u662f\u6700\u7ec8\u72b6\u6001\u5462?\n\nnow\u4e3a\u5f53\u524d\u72b6\u6001\uff0cdest\u4e3a\u9884\u5904\u7406\u7684\u6700\u7ec8\u72b6\u6001\n```cpp\nif (now.x == dest.x && now.y == dest.y)//\u9996\u5148\u5b83\u4eec\u7a7a\u4f4d\u7f6e\u8981\u76f8\u7b49\n{\n\tif(now.map == dest.map || (now.map ^ (1 << ITP(now.x, now.y))) == dest.map)//\u5982\u679c\u4e24\u4e2amap\u76f4\u63a5\u76f8\u7b49\uff0c\u6216\u8005\u662f\u5728\u7a7a\u4f4d\u7f6e\u53d6\u53cd\u540e\u76f8\u7b49\uff08\u56e0\u4e3a\u7a7a\u4f4d\u7f6e\u76840\uff0c1\u88ab\u8ba4\u4e3a\u662f\u7b49\u6548\u7684\uff09\uff0c\u5219\u72b6\u6001\u662f\u76f8\u7b49\u7684\n\t\treturn 0;//\u72b6\u6001\u76f8\u7b49\uff0c\u4f30\u4ef7\u51fd\u6570\u8fd4\u56de0\n}\n```\n\n\u57fa\u4e8e\u7c7b\u4f3c\u7684\u60f3\u6cd5\uff0c\u6211\u7684\u4f30\u4ef7\u51fd\u6570\u6574\u4e2a\u4e5f\u5199\u7684\u76f8\u5f53\u6734\u7d20(\u4e5f\u8bb8\u7c97\u7cd9\u8d34\u5207\uff09\uff08\u5f53\u7136\u4e5f\u4e0d\u5feb\uff0c\u5f00\u4e86O2\u8fd8\u8981500ms\uff09\uff0c\u4e0d\u8fc7AC\u8fd8\u662f\u6ca1\u95ee\u9898\u7684\u3002\n\n```cpp\nint need(state& now)\n{\n\tif (now.x == dest.x && now.y == dest.y)\n\t{\n\t\tif(now.map == dest.map || (now.map ^ (1 << ITP(now.x, now.y))) == dest.map)\n\t\t\treturn 0;\n\t}\n\tint ret(0);\n\tint x(now.map ^ dest.map);//\u53d6\u5f02\u6216\u7684\u7ed3\u679c\u5c31\u662f\u4e0d\u5728\u81ea\u5df1\u8be5\u5728\u7684\u4f4d\u7f6e\u4e0a\u7684\u9a91\u58eb\u4e3a1\uff08\u9664\u4e86\u7a7a\u4f4d\u7f6e\u76840\uff0c1\u4e0d\u786e\u5b9a\uff0c\u8fd9\u70b9\u6bd4\u8f83\u7c97\u7cd9\uff09\n\tif (x & (1 << ITP(now.x, now.y)))//\u5982\u679c\u56e0\u4e3a\u7a7a\u4f4d\u7f6e\u5bfc\u81f4ret\u591a\u4e861\uff0c\u5e94\u8be5\u51cf\u53bb\uff0c\u56e0\u4e3a\u6211\u4eec\u662f\u4e50\u89c2\u7684\u2026\u2026\u4f30\u4ef7\u51fd\u6570\uff0c\u800c\u7a7a\u4f4d\u7f6e\u662f\u53ef\u4ee5\u901a\u8fc7\u79fb\u52a8\u4e00\u4e2a\u9a91\u58eb\u7684\u540c\u65f6\u6539\u53d8\u7684\n\t{\n\t\tret = -1;\n\t}\n\twhile (x)\n\t{\n\t\tif (x & 1) ++ret;\n\t\tx >>= 1;\n\t}\n\tif (ret == 0) return 1;//\u8fd9\u4e2a\u2026\u2026\u7c97\u7cd9\u7684\u5904\u7406\uff0c\u56e0\u4e3a\u4e24\u4e2a\u72b6\u6001\u4e0d\u53ef\u80fd\u76f8\u7b49\u7684\uff08\u5df2\u7ecf\u5224\u65ad\u8fc7\u4e86\uff09\uff0c\u600e\u4e48\u53ef\u80fdret==0\u2026\u2026\u5f53\u7136\u8981\u8fd4\u56de1\u5566- -\n\treturn ret;\n}\n```\n\n\u63a5\u4e0b\u6765\u5c31\u662f\u5168\u90e8\u4ee3\u7801\u4e86T.T\uff0c\u9664\u4e86\u4e0a\u9762\u7684\u64cd\u4f5c\u6ca1\u6709\u4ec0\u4e48\u503c\u5f97\u8bf4\u7684\u5730\u65b9\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n\n#define ITP(x, y) ((x) * 5 + (y))\n\nclass state\n{\npublic:\n\tstate() : map(0) {}\n\tstate(const state& s) : map(s.map), x(s.x), y(s.y) {}\n\tint map;\n\tint x, y;\n};\n\nint t;\n\ninline void readchar(char& c)\n{\n\tc = getchar();\n\twhile (c != '0' && c != '1' && c != '*') c = getchar();\n}\n\nstate dest, now;\n\nvoid init_dest()\n{\n\tdest.x = dest.y = 2;\n\tfor (int i(0); i != 2; ++i)\n\t{\n\t\tfor (int j(i); j != 5; ++j)\n\t\t{\n\t\t\tdest.map |= 1 << ITP(i, j);\n\t\t}\n\t}\n\tfor (int i(2); i != 4; ++i)\n\t{\n\t\tfor (int j(i + 1); j != 5; ++j)\n\t\t{\n\t\t\tdest.map |= 1 << ITP(i, j);\n\t\t}\n\t}\n}\n\nint ans;\n\nint need(state& now)\n{\n\tif (now.x == dest.x && now.y == dest.y)\n\t{\n\t\tif(now.map == dest.map || (now.map ^ (1 << ITP(now.x, now.y))) == dest.map)\n\t\t\treturn 0;\n\t}\n\tint ret(0);\n\tint x(now.map ^ dest.map);\n\tif (x & (1 << ITP(now.x, now.y)))\n\t{\n\t\tret = -1;\n\t}\n\tif (x & (1 << ITP(dest.x, dest.y))) --ret;\n\twhile (x)\n\t{\n\t\tif (x & 1) ++ret;\n\t\tx >>= 1;\n\t}\n\tif (ret == 0) return 1;\n\treturn ret;\n}\n\nconst int mx[8] = {1, 1, -1, -1, 2, 2, -2, -2};\nconst int my[8] = {2, -2, 2, -2, 1, -1, 1, -1};\n\nbool dfs(int dep, state& now, int max_dep)\n{\n\tif (dep + need(now)  > max_dep)\n\t{\n\t\treturn false;\n\t}\n\tif (dep == max_dep)\n\t{\n\t\treturn true;\n\t}\n\tfor (int i(0); i != 8; ++i)\n\t{\n\t\tint nowx(now.x + mx[i]), nowy(now.y + my[i]);\n\t\tif (nowx < 0 || nowy < 0 || nowx > 4 || nowy > 4) continue;\n\t\tstate next(now);\n\t\tif (bool(next.map & (1 << ITP(nowx, nowy))) != bool(next.map & (1 << ITP(next.x, next.y))))\n\t\t{\n\t\t\tnext.map ^= (1 << ITP(next.x, next.y));\n\t\t}\n\t\tnext.x = nowx;\n\t\tnext.y = nowy;\n\t\tif (dfs(dep + 1, next, max_dep)) return true;\n\t}\n\treturn false;\n}\n\nint main()\n{\n\tinit_dest();\n\tscanf(\"%d\", &t);\n\tfor (int i(0); i != t; ++i)\n\t{\n\t\tnow.map = 0;\n\t\tfor (int i(0); i != 5; ++i)\n\t\t{\n\t\t\tfor (int j(0); j != 5; ++j)\n\t\t\t{\n\t\t\t\tchar c;\n\t\t\t\treadchar(c);\n\t\t\t\tswitch (c)\n\t\t\t\t{\n\t\t\t\tcase '0':\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\tcase '1':\n\t\t\t\t\tnow.map |= 1 << ITP(i, j);\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\tcase '*':\n\t\t\t\t\tnow.x = i;\n\t\t\t\t\tnow.y = j;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tbool bFind(false);\n\t\tfor (int i(0); i <= 15; ++i)\n\t\t{\n\t\t\tif (dfs(0, now, i))\n\t\t\t{\n\t\t\t\tprintf(\"%d\\n\", i);\n\t\t\t\tbFind = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!bFind) printf(\"-1\\n\");\n\t}\n\treturn 0;\n}\n```\n\n/////////////////////////5.23\u66f4\u65b0\uff08\u52a0\u7279\u6280\uff09\n\norz\u672c\u849f\u84bb\u5e26\u7740\u65e0O2 60ms\uff0c\u5f00O2 0ms\u7684\u9898\u89e3\u56de\u6765\u4e86\u2026\u2026\u5f53\u7136\uff0c\u8fd8\u6709\u66f4\u9a9a\u7684\u4f4d\u64cd\u4f5c\u548c\u53cc\u5411\u5e7f\u641c\u3002\n\n\u8fd9\u9053\u9898\u7684\u6570\u636e\u5341\u5206\u5fae\u5999orz\u3002\n\n\u6211\u4eec\u5148\u628a\u68cb\u76d8\u538b\u7f29\u6210\u4e00\u4e2aint\uff0c\u5982\u4e4b\u524d\u6240\u8bb2\u3002\n\n\u4f8b\u5b50\u5c31\u662f\u521d\u59cb\u72b6\u6001\uff1a\n\n11111\n\n01111\n\n00011\n\n00001\n\n00000\n\n\u538b\u7f29\u62100000010000110001111011111B\uff08\u202d33000480D\u202c\uff09\n\n\u4f46\u8fd9\u6b21\u5f3a\u5236\u89c4\u5b9a\uff1a\u7a7a\u4f4d\u7f6e\u7684\u4f4d\u5fc5\u987b\u4e3a0\n\n\u7136\u540e\u6211\u4eec\u53d1\u73b0\uff0c\u5750\u6807x,y\u7684\u8303\u56f4\u662f0-4\uff0c\u6b63\u597d3\uff08\\*2\uff09\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u2026\u2026\n\n\u4e8e\u662f\uff0c\u68cb\u76d8\u4f4d\u6570+\u5750\u6807\u4f4d\u6570 == 25 + 6 == 31\uff0c\u6b63\u597d\u538b\u5728\u4e86int\u7684\u8d1f\u6570\u4f4d\u524d\u2026\u2026\n\n\u4e8e\u662f\u6211\u4eec\u628a\u521d\u59cb\u72b6\u6001\u538b\u7f29\u4e3a0100100000010000110001111011111B\uff08604529631D\u202c\uff09\n\n\u5176\u4e2d\u6700\u524d\u97626\u4f4d\u8868\u793a\u4e86x\uff0cy\uff0c\u5404\u5360\u4e09\u4f4d\u3002\n\n\u518d\u5199\u4e00\u4e2a\u51fd\u6570SetXY\u6765\u5e2e\u6211\u4eec\u8bbe\u7f6ex\uff0cy\u503c\uff1a\n\n```cpp\ninline void SetXY(int& state, int x, int y)\n{\n    state &= 33554431;\n    state |= x << 25;\n    state |= y << 28;\n}\n```\n\n\u540e\u9762\u4e24\u53e5\u8fd8\u597d\u7406\u89e3\u7684\u3002\n\n\u4f46\u7b2c\u4e00\u53e5\u51fa\u73b0\u4e86\u4e00\u4e2a\u9b54\u6570\uff1a33554431\u3002\u6211\u4eec\u5c06\u5b83\u7684\u4e8c\u8fdb\u5236\u5199\u51fa\u6765\uff1a\n\n\u202d1111111111111111111111111\u202cB\uff08\u522b\u6570\u4e86\uff0c\u4e8c\u5341\u4e94\u4e2a1\uff09\n\n\u6240\u4ee5\u4efb\u4f55\u6570\u5b57\u5bf9\u8fd9\u4e2a\u6570\u53d6\u4e0e\u540e\u53ea\u5269\u4e0b\u524d25\u4f4d\u4e86\uff0c\u5373\u4e4b\u524d\u538b\u7f29\u7684map\u3002\n\n\u518d\u5199\u4e00\u4e2a\u51fd\u6570\u53d6\u51fax\uff0cy\uff1a\n\n```cpp\ninline void GetXY(int& state, int& x, int& y)\n{\n    x = (state >> 25) & 7;\n    y = (state >> 28) & 7;\n}\n```\n\n\u53f3\u79fb25\u548c28\u4f4d\u5927\u5bb6\u90fd\u61c2\u5427\u2026\u2026\u628ax\uff0cy\u7684\u90a3\u4e09\u4f4d\u79fb\u5230\u6700\u524d\u9762\n\n\u5176\u4e2d\u53c8\u51fa\u73b0\u4e86\u4e00\u4e2a\u9b54\u65707\uff0c\u5b83\u7684\u4e8c\u8fdb\u5236\u662f111B\uff0c\u5373\u53d6\u6700\u540e3\u4e2a\u3002\n\n\u597d\u4e86\uff0c\u5173\u4e8e\u72b6\u6001\u7684\u8bf4\u660e\u5b8c\u4e86\u3002\n\n\u7136\u540e\u5199\u4e00\u4e2ahash\u8868\u6765\u5e2e\u52a9\u53cc\u5411\u5e7f\u641c\u5224\u65ad\u662f\u5426\u51fa\u73b0\u91cd\u590d\uff1a\n\n```cpp\nmy_std::unordered_map final, exist;\n```\n\nemm\uff0c\u8fd9\u6837\u5c31\u5f88\u597d\u5566\uff01\u8ba9\u6211\u4eec\u53cc\u5411\u5e7f\u641c\u5427\uff01\u3010\u8bfb\u8005\uff1a\u8fd9\u4e2aunordered_map\u4ec0\u4e48\u9b3c\u3011\n\n\u5173\u4e8e\u8fd9\u4e2aunordered_map\uff0c\u5b9a\u4e49\u5728\u4e0b\u9762\uff1a\n\n```cpp\nnamespace my_std\n{\n\tclass unordered_map\n\t{\n\tprotected:\n\t\tclass item//\u94fe\u8868\u7684\u5355\u4e2a\u5143\u7d20\u2014\u2014hash\u51b2\u7a81\u91c7\u7528\u6302\u94fe\u5904\u7406\n\t\t{\n\t\tpublic:\n\t\t\titem() : next(0) {}\n\t\t\tint key, val;//\u952e\uff0c\u503c\n\t\t\titem*next;\n\t\t};\n\t\t\n\tpublic:\n\t\tunordered_map()//\u521d\u59cb\u5316\u5934\u6307\u9488\u4e3a0\n\t\t{\n\t\t\tfor (int i(0); i != MAX_HASH; ++i) head[i] = 0;\n\t\t}\n\t\t\n\t\titem *newitem()\n\t\t{\n\t\t\treturn &memory[next++];//\u5185\u5b58\u7ba1\u7406\u3002\u53ef\u80fd\u6bd4new\u5feb\u2026\u2026\u800c\u4e14\u4e0d\u7528\u56de\u6536\u5185\u5b58\uff08\u4e0b\u6587\u4f1a\u63d0\u5230\uff09\n\t\t}\n\t\t\n\t\tbool exist(int a) const//\u5224\u65ad\u662f\u5426\u5b58\u5728\u952e\u4e3aa\u7684\u5143\u7d20\n\t\t{\n\t\t\tint x(hash(a));\n\t\t\tif (head[x] == 0)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\titem* now(head[x]);\n\t\t\twhile (now)\n\t\t\t{\n\t\t\t\tif (now->key == a) return true;\n\t\t\t\tnow = now->next;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tint& operator[](int a)//\u627e\u5230\u952e\u4e3aa\u7684\u5143\u7d20\u5e76\u8fd4\u56de\u5176\u503c\u7684\u5f15\u7528\n\t\t{\n\t\t\tint x(hash(a));\n\t\t\tif (head[x] == 0)\n\t\t\t{\n\t\t\t\thead[x] = newitem();\n\t\t\t\thead[x]->key = a;\n\t\t\t\thead[x]->val = 0;\n\t\t\t\treturn head[x]->val;\n\t\t\t}\n\t\t\titem *now(head[x]), *front;\n\t\t\twhile (now)\n\t\t\t{\n\t\t\t\tif (now->key == a) return now->val;\n\t\t\t\tfront = now;\n\t\t\t\tnow = now->next;\n\t\t\t}\n\t\t\tfront->next = newitem();\n\t\t\tfront->next->key = a;\n\t\t\tfront->next->val = 0;\n\t\t\treturn front->next->val;\n\t\t}\n\t\t\n\t\tvoid clear()//\u6e05\u7a7ahash\u8868\n\t\t{\n\t\t\tfor (int i(0); i != MAX_HASH; ++i)\n\t\t\t{\n\t\t\t\thead[i] = 0;\n\t\t\t}\n\t\t\tnext = 0;//\u6ce8\u610f\uff0c\u5982\u679c\u91c7\u7528new\u521b\u5efa\u5143\u7d20\uff0c\u8fd8\u5e94\u8be5\u904d\u5386hash\u8868delete\u6240\u6709\u5143\u7d20\u4ee5\u907f\u514d\u5185\u5b58\u6cc4\u6f0f\n\t\t\t//\u5f53\u7136\uff0c\u5982\u679c\u91c7\u7528\u5185\u5b58\u6c60\u7684\u505a\u6cd5\uff0c\u91cd\u7f6enext\u5c31\u597d\u4e86\n\t\t}\n\t\t\n\tprotected:\n\t\t\n\t\tint hash(int x) const { return x % MAX_HASH; }\n\t\t\n\t\titem *head[MAX_HASH];\n\t\titem memory[MAX_HASH];\n\t\tint next;//next\u662f\u4e0b\u4e00\u4e2a\u53ef\u7528\u7684\u3001\u672a\u5fc5\u4e3a\u7a7a\u7684item\n\t};\n}\n```\n\n\u597d\u4e86\uff0c\u7136\u540e\u5c31\u8be5\u53cc\u5411\u5e7f\u641c\u4e86\u3002\uff08\u5176\u5b9e\u5bf9\u4e8edest\u7684\u5e7f\u641c\u53ef\u4ee5\u6253\u8868\u2026\u2026\u800c\u4e14\u6253\u51fa\u6765\u7684\u8868\u8fd8\u90fd\u662fint\uff0c\u975e\u5e38\u5b8c\u7f8e\uff09\n\n\u53cc\u5411\u5e7f\u641c\u561b\uff0c\u7528hash\u8868exist\u4ee3\u66ff\u539f\u6765\u6211\u4eec\u5e38\u7528\u7684bool\u8bbf\u95ee\u6807\u8bb0\uff0c\u5e76\u4e14\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u7684\u641c\u7d22\u6df1\u5ea6\uff08\u5373\u9700\u8981\u8d70\u51e0\u6b65\u5230\u8fbe\uff09\u5982\u679c\u641c\u5230\u67d0\u4e2a\u70b9\u51fa\u73b0\u5728\u4e86final\u4e2d\uff08\u5373\u5bf9\u9762\u5e7f\u641c\u8fc7\u6765\u7684\u72b6\u6001\uff09\uff0c\u90a3\u4e48\u7acb\u5373\u8fd4\u56de\u4e24\u4e2a\u5143\u7d20\u641c\u7d22\u6df1\u5ea6\u4e4b\u548c\n\n\u4ee3\u7801\u5b9e\u73b0\u561b\u2026\u2026\u770b\u4e0b\u9762\u7684\u5168\u90e8\u4ee3\u7801\u597d\u4e86\u2190\u2190\uff08\u672c\u849f\u84bb\u53c8\u5f00\u59cb\u61d2\u4e86\uff09\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n\n#include <queue>\n\n\n#define ITP(x, y) ((x) * 5 + (y))\n\n#define MAX_HASH 42333\n\nnamespace my_std\n{\n\tclass unordered_map\n\t{\n\tprotected:\n\t\tclass item\n\t\t{\n\t\tpublic:\n\t\t\titem() : next(0) {}\n\t\t\tint key, val;\n\t\t\titem*next;\n\t\t};\n\t\t\n\tpublic:\n\t\tunordered_map()\n\t\t{\n\t\t\tfor (int i(0); i != MAX_HASH; ++i) head[i] = 0;\n\t\t}\n\t\t\n\t\titem *newitem()\n\t\t{\n\t\t\treturn &memory[next++];\n\t\t}\n\t\t\n\t\tbool exist(int a) const\n\t\t{\n\t\t\tint x(hash(a));\n\t\t\tif (head[x] == 0)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\titem* now(head[x]);\n\t\t\twhile (now)\n\t\t\t{\n\t\t\t\tif (now->key == a) return true;\n\t\t\t\tnow = now->next;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tint& operator[](int a)\n\t\t{\n\t\t\tint x(hash(a));\n\t\t\tif (head[x] == 0)\n\t\t\t{\n\t\t\t\thead[x] = newitem();\n\t\t\t\thead[x]->key = a;\n\t\t\t\thead[x]->val = 0;\n\t\t\t\treturn head[x]->val;\n\t\t\t}\n\t\t\titem *now(head[x]), *front;\n\t\t\twhile (now)\n\t\t\t{\n\t\t\t\tif (now->key == a) return now->val;\n\t\t\t\tfront = now;\n\t\t\t\tnow = now->next;\n\t\t\t}\n\t\t\tfront->next = newitem();\n\t\t\tfront->next->key = a;\n\t\t\tfront->next->val = 0;\n\t\t\treturn front->next->val;\n\t\t}\n\t\t\n\t\tvoid clear()\n\t\t{\n\t\t\tfor (int i(0); i != MAX_HASH; ++i)\n\t\t\t{\n\t\t\t\thead[i] = 0;\n\t\t\t}\n\t\t\tnext = 0;\n\t\t}\n\t\t\n\tprotected:\n\t\t\n\t\tint hash(int x) const { return x % MAX_HASH; }\n\t\t\n\t\titem *head[MAX_HASH];\n\t\titem memory[MAX_HASH];\n\t\tint next;\n\t};\n}\n\nmy_std::unordered_map final, exist;\n\n\n\n\nint t;\n\ninline void readchar(char& c)\n{\n    c = getchar();\n    while (c != '0' && c != '1' && c != '*') c = getchar();\n}\n\nint dest(604529631), now;\n\ninline void SetXY(int& state, int x, int y)\n{\n    state &= 33554431;\n    state |= x << 25;\n    state |= y << 28;\n}\n\ninline void GetXY(int& state, int& x, int& y)\n{\n    x = (state >> 25) & 7;\n    y = (state >> 28) & 7;\n}\n\n\nconst int mx[8] = { 1, 1, -1, -1, 2, 2, -2, -2 };\nconst int my[8] = { 2, -2, 2, -2, 1, -1, 1, -1 };\n\nvoid init_dest()\n{\n    final[dest] = 0;\n    std::queue<int> que, dep;\n    que.push(dest);\n    dep.push(0);\n    while (!que.empty())\n    {\n        int now(que.front());\n        int depth(dep.front());\n        que.pop();\n        dep.pop();\n        if (depth == 9)\n        {\n            continue;\n        }\n        int nowx, nowy;\n        GetXY(now, nowx, nowy);\n        for (int i(0); i != 8; ++i)\n        {\n            int nx(nowx + mx[i]), ny(nowy + my[i]);\n            if (nx < 0 || ny < 0 || nx > 4 || ny > 4) continue;\n            int next(now);\n            if (next & (1<<ITP(nx, ny)))\n            {\n                next ^= (1 << ITP(nowx, nowy)) | (1 << ITP(nx, ny));\n            }\n            SetXY(next, nx, ny);\n            if (!final.exist(next))\n            {\n                final[next] = depth + 1;\n                que.push(next);\n                dep.push(depth + 1);\n            }\n            else\n            {\n                next = next + 1 - 1;\n            }\n        }\n    }\n}\n\nint ans;\n\nint bfs()\n{\n    exist.clear();\n    exist[now] = 0;\n    std::queue<int> que, dep;\n    que.push(now);\n    dep.push(0);\n    while (!que.empty())\n    {\n        int now(que.front());\n        int depth(dep.front());\n        que.pop();\n        dep.pop();\n        if (final.exist(now))\n        {\n            return depth + final[now];\n        }\n        if (depth == 6) continue;\n        int nowx, nowy;\n        GetXY(now, nowx, nowy);\n        for (int i(0); i != 8; ++i)\n        {\n            int nx(nowx + mx[i]), ny(nowy + my[i]);\n            if (nx < 0 || ny < 0 || nx > 4 || ny > 4) continue;\n            int next(now);\n            if (next & (1 << ITP(nx, ny)))\n            {\n                next ^= (1 << ITP(nowx, nowy)) | (1 << ITP(nx, ny));\n            }\n            if (next & (1 << ITP(nx, ny))) next ^= (1 << ITP(nx, ny));\n            SetXY(next, nx, ny);\n            if (!exist.exist(next))\n            {\n                exist[next] = depth;\n                que.push(next);\n                dep.push(depth + 1);\n            }\n        }\n    }\n    return -1;\n}\n\nint main()\n{\n    init_dest();\n    scanf(\"%d\", &t);\n    for (int i(0); i != t; ++i)\n    {\n        now = 0;\n        for (int i(0); i != 5; ++i)\n        {\n            for (int j(0); j != 5; ++j)\n            {\n                char c;\n                readchar(c);\n                switch (c)\n                {\n                case '0':\n                    break;\n\n                case '1':\n                    now |= 1 << ITP(i, j);\n                    break;\n\n                case '*':\n                    SetXY(now, i, j);\n                    break;\n                }\n            }\n        }\n        printf(\"%d\\n\", bfs());\n    }\n    return 0;\n}\n```\n\n\n",
        "postTime": 1526751887,
        "uid": 33173,
        "name": "_J_C_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2324 \u3010[SCOI2005]\u9a91\u58eb\u7cbe\u795e\u3011"
    },
    {
        "content": "\u9898\u89e3\u91cc\u7684bfs\u597d\u50cf\u5927\u591a\u90fd\u662f\u53cc\u5411\u641c\u7684\uff0c\u5176\u5b9e\u5355\u5411\u641c\u4e5f\u53ef\u4ee5\n\n\u8fd9\u9053\u9898\u5c31\u662f\u4e00\u4e2aA*\n\n\u6211\u628a\u8fd9\u4e2a\u56fe\uff0c\u8ddf\u7a7a\u683c\u7684\u6a2a\u7eb5\u5750\u6807\u538b\u6210\u4e00\u4e2astring\uff0c\u653e\u5728\u7ed3\u6784\u4f53\u91cc\uff0c\u6bcf\u6b21\u5224\u65ad\u4e00\u4e0b\u662f\u4e0d\u662f\u5230\u4e86\u76ee\u6807\u72b6\u6001\uff0c\u7136\u540e\u7528\u4e00\u4e2amap\u8bb0\u5f55\u4e00\u4e0b\u662f\u5426\u8dd1\u8fc7\uff0c\u4f30\u4ef7\u51fd\u6570\u5c31\u662f\u5224\u65ad\u76ee\u524d\u72b6\u6001\u4e0e\u76ee\u6807\u72b6\u6001\u7684\u4e0d\u540c\u7684\u70b9\u7684\u4e2a\u6570\uff0c\u5982\u679c\u8fd9\u4e2a\u5dee\u8ddd\u52a0\u4e0a\u76ee\u524d\u6b65\u6570\u8d85\u8fc7\u4e8615\u6b65\uff0c\u5c31\u8bf4\u660e\u4e00\u5b9a\u8dd1\u4e0d\u5230\u4e86\u3002\n\n\u653e\u4ee3\u7801\uff1a\n\n```cpp\n\n#include <bits/stdc++.h>\nusing namespace std;\nmap<string,int>s;\nint mp[6][6],b[6][6],ans[6][6];\nstring goal;\nint dx[9]={0,1,1,2,2,-1,-1,-2,-2};\nint dy[9]={0,2,-2,1,-1,2,-2,1,-1};\nstring get_char(int x){\n\tif(x==0){\n\t\treturn \"0\";\n\t}\n\tif(x==1){\n\t\treturn \"1\";\n\t}\n\tif(x==2){\n\t\treturn \"2\";\n\t}\n\tif(x==3){\n\t\treturn \"3\";\n\t}\n\tif(x==4){\n\t\treturn \"4\";\n\t}\n\tif(x==5){\n\t\treturn \"5\";\n\t}\n}\nstring lock(int a[6][6],int x,int y){\n\tstring res;\n\tfor(int i=1;i<=5;i++){\n\t\tfor(int j=1;j<=5;j++){\n\t\t\tres+=get_char(a[i][j]);\n\t\t}\n\t} \n\tres+=get_char(x);\n\tres+=get_char(y);\n\treturn res;\n}\nint get(string res,int step){\n\tint cnt=0;\n\tfor(int i=1;i<=5;i++){\n\t\tfor(int j=1;j<=5;j++){\n\t\t\tans[i][j]=res[(i-1)*5+j-1]-'0';\n\t\t\tif(ans[i][j]!=b[i][j]){\n\t\t\t\tcnt++;\n\t\t\t}\n\t\t}\n\t}\n\tif(cnt+step>15){\n\t\treturn 0;\n\t}\n\telse{\n\t\treturn 1;\n\t}\n}\nstruct road{\n\tint step,x,y;\n\tstring sub;\n};\nvoid bfs(string fir,int x,int y){\n\tqueue<road>q;\n\troad st;\n\tst.step=0;\n\tst.x=x;\n\tst.y=y;\n\tst.sub=fir;\n\tq.push(st);\n\tint cnt=0;\n\twhile(!q.empty()){\n\t\troad now=q.front();\n\t\tq.pop();\n\t\tif(now.step>15){\n\t\t\tprintf(\"-1\\n\");\n\t\t\treturn ;\n\t\t}\n\t\tif(now.sub==goal){\n\t\t\tprintf(\"%d\\n\",now.step);\n\t\t\treturn ;\n\t\t}\n\t\tif(get(now.sub,now.step)==0) continue;\n\t\tfor(int i=1;i<=8;i++){\n\t\t\tint nowx=now.x+dx[i];\n\t\t\tint nowy=now.y+dy[i];\n\t\t\tif(nowx<1||nowx>5||nowy<1||nowy>5){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tint kkk[6][6];\n\t\t\tfor(int i=1;i<=5;i++){\n\t\t\t\tfor(int j=1;j<=5;j++){\n\t\t\t\t\tkkk[i][j]=ans[i][j];\n\t\t\t\t}\n\t\t\t}\n\t\t\tswap(kkk[now.x][now.y],kkk[nowx][nowy]);\n\t\t\troad node;\n\t\t\tnode.step=now.step+1,node.x=nowx,node.y=nowy;\n\t\t\tnode.sub=lock(kkk,nowx,nowy);\n\t\t\tif(!s[node.sub]){\n\t\t\t\ts[node.sub]=1;\n\t\t\t\tq.push(node);\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"-1\\n\");\n}\nint main(){\n\tint t;\n\tscanf(\"%d\",&t);\n\tb[1][1]=1,b[1][2]=1,b[1][3]=1,b[1][4]=1,b[1][5]=1;\n\tb[2][1]=0,b[2][2]=1,b[2][3]=1,b[2][4]=1,b[2][5]=1;\n\tb[3][1]=0,b[3][2]=0,b[3][3]=0,b[3][4]=1,b[3][5]=1;\n\tb[4][1]=0,b[4][2]=0,b[4][3]=0,b[4][4]=0,b[4][5]=1;\n\tb[5][1]=0,b[5][2]=0,b[5][3]=0,b[5][4]=0,b[5][5]=0;\n\tgoal=lock(b,3,3);\n\twhile(t--){\n\t\ts.clear();\n\t\tint sx,sy;\n\t\tfor(int i=1;i<=5;i++){\n\t\t\tstring a;\n\t\t\tcin>>a;\n\t\t\tfor(int j=0;j<a.size();j++){\n\t\t\t\tif(a[j]=='0'){\n\t\t\t\t\tmp[i][j+1]=0;\n\t\t\t\t}\n\t\t\t\telse if(a[j]=='1'){\n\t\t\t\t\tmp[i][j+1]=1;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tmp[i][j+1]=0;\n\t\t\t\t\tsx=i;\n\t\t\t\t\tsy=j+1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tstring fir=lock(mp,sx,sy);\n\t\tbfs(fir,sx,sy);\n\t}\n\treturn 0;\n}\n",
        "postTime": 1573372727,
        "uid": 231141,
        "name": "\u6df1\u5df7\u5c11\u5e74\u4e0e\u732b",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2324 \u3010[SCOI2005]\u9a91\u58eb\u7cbe\u795e\u3011"
    },
    {
        "content": "\u770b\u5230\u5927\u5bb6\u90fd\u7528 $A*$, $IDA*$,\u672c\u849f\u84bb\u6df1\u6df1\u611f\u53d7\u5230\u4e86\u81ea\u5df1\u7684\u5f31\u5c0fQAQ\n\n\u5176\u5b9e\u8fd9\u9053\u9898\u53ef\u4ee5\u7528$BFS$\u505a\uff0c\u4f46\u662f\u4e0d\u662f\u505a$15$\u6b65\u5185\u7684$BFS$\uff0c\u800c\u662f\u505a$7-8$\u6b65\u7684$BFS$\n\n\u90a3\u7b54\u6848\u4e0d\u662f\u9519\u7684\u561b\uff1f\n\n\u6211\u4eec\u4ece\u8d77\u59cb\u72b6\u6001\u505a\u4e00\u6b21$BFS$\uff0c\u518d\u4ece\u7ed3\u675f\u72b6\u6001\u505a\u4e00\u4e2a$BFS$\uff0c\u7ecf\u8fc7\u6211\u4eec\u7684\u8ba1\u7b97~~\u6253\u8868~~\uff0c\u6211\u4eec\u53d1\u73b0\u7a0b\u5e8f\u8ba1\u7b97$8$\u6b65\u4ee5\u5185\u7684\u7ed3\u679c\u975e\u5e38\u5feb\uff0c\u6240\u4ee5\u6211\u4eec\u505a\u4e24\u6b21$BFS$\u4e4b\u540e\uff0c\u770b\u4e24\u6b21\u7ed3\u679c\u5e8f\u5217\u7684\u4ea4\u96c6\u662f\u5426\u4e3a\u7a7a\uff0c\u82e5\u4e3a\u7a7a\uff0c\u5219\u8bf4\u660e\u65e0\u89e3\uff0c\u5426\u5219\u6709\u89e3\n\n\u4e5f\u5c31\u662f\u53cc\u5411$BFS$\uff0c\u611f\u89c9\u6709\u70b9\u50cf$Meet\\ in\\ Middle$\u7684\u601d\u60f3\n\n\u5229\u7528\u4e86\u628a\u5730\u56fe\u8f6c\u6362\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u7528$map$\u5b58\u50a8\u7684\u505a\u6cd5\n\n```\n//Copyright (c) 2019 by xiao_mmqueF. All Rights Reserved.\n#include<bits/stdc++.h>\n#define inl inline\n#define reg register\n#define INF 0x3f3f3f3f\nusing namespace std;\ninl int read(){ int x=0,f=0; char ch=0; while(!isdigit(ch))f|=(ch=='-'),ch=getchar(); while(isdigit(ch))(x*=10)+=(ch^48),ch=getchar(); return f?-x:x; }\ninl void Ot(reg int x) { if(x<0)putchar('-'),x=-x; if(x>=10)Ot(x/10); putchar(x%10+'0'); }\ninl void Print(reg int x,char til='\\n'){Ot(x);putchar(til);}\ninl int Max(reg int x,reg int y){return x>y?x:y;}\ninl int Min(reg int x,reg int y){return x<y?x:y;}\ninl int Abs(reg int x){return x<0?-x:x;} \nstruct Node{\n\tint x, y;\n\tstring s;\n};\nmap<string, int> mp;\nint mv[8][2]={{1,2},{1,-2},{-1,2},{-1,-2},{2,1},{2,-1},{-2,1},{-2,-1}};\nstring aim=\"111110111100*110000100000\";//\u76ee\u6807\u72b6\u6001\nbool bfs(int x, int y, string s) {\n\tqueue<Node> que;\n\tque.push((Node){x, y, s});\n\tmp[s]=1;\n\twhile (!que.empty()) {\n\t\tNode h=que.front();\n\t\tque.pop();\n\t\tif (mp[h.s]==8) break;//8\u6b65\u5c31\u505c\n\t\tif (h.s==aim) {\n\t\t\tPrint(mp[h.s]-1);//8\u6b65\u5185\u5f97\u5230\u4e86\u7b54\u6848\n\t\t\treturn true;\n\t\t}\n\t\tfor (int i=0; i<8; i++) {\n\t\t\tint xx=h.x+mv[i][0], yy=h.y+mv[i][1];\n\t\t\tif (xx<1 || xx>5 || yy<1 || yy>5) continue;\n\t\t\tstring tmp=h.s;\n\t\t\tint tmp1=(h.x-1)*5+h.y, tmp2=(xx-1)*5+yy;\n\t\t\tchar tmp_c=tmp[tmp1-1];\n\t\t\ttmp[tmp1-1]=tmp[tmp2-1];\n\t\t\ttmp[tmp2-1]=tmp_c;\n\t\t\tif (mp[tmp]==0) {\n\t\t\t\tmp[tmp]=mp[h.s]+1;\n\t\t\t\tque.push((Node){xx, yy, tmp});\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\nvoid bfss(int x, int y, string s) {\n\tqueue<Node> que;\n\tmap<string, int> mpS;\n\tmp[s]=1;\n\tque.push((Node){x, y, s});\n    mpS[s]=true;\n\twhile (!que.empty()) {\n\t\tNode h=que.front();\n\t\tque.pop();\n\t\tif (mp[h.s]==9) {//\u6b65\u6570\u52309\u4e86\uff0c\u8bf4\u660e\u603b\u5171\u8d85\u8fc7\u4e8615\u6b65\n\t\t\tPrint(-1);//\u8fd4\u56de\u65e0\u89e3\n\t\t\treturn ;\n\t\t}\n\t\tfor (int i=0; i<8; i++) {\n\t\t\tint xx=h.x+mv[i][0], yy=h.y+mv[i][1];\n\t\t\tif (xx<1 || xx>5 || yy<1 || yy>5) continue;\n\t\t\tstring tmp=h.s;\n\t\t\tint tmp1=(h.x-1)*5+h.y, tmp2=(xx-1)*5+yy;\n\t\t\tchar tmp_c=tmp[tmp1-1];\n\t\t\ttmp[tmp1-1]=tmp[tmp2-1];\n\t\t\ttmp[tmp2-1]=tmp_c;\n\t\t\tif (mp[tmp]!=0 && !mpS[tmp]) {//\u5982\u679c\u4e0e\u7b2c\u4e00\u6b21\u6709\u4ea4\u96c6\n\t\t\t\tcout << mp[tmp]-1+mp[h.s] << endl;\n\t\t\t\treturn ;\n\t\t\t}\n\t\t\tif (!mpS[tmp]) {\n\t\t\t\tmp[tmp]=mp[h.s]+1;\n\t\t\t\tque.push((Node){xx, yy, tmp});\n\t\t\t\tmpS[tmp]=true;\n\t\t\t}\n\t\t}\n\t}\n}\n \nint main() {\n\tfor(reg int T=read();T;T--) {\n\t\tmp.clear();\n\t\tstring tmp, s=\"\";\n\t\tint x, y;\n\t\tfor (int i=1; i<=5; i++) {\n\t\t\tcin>>tmp;\n\t\t\tfor (int j=0; j<5; j++)\n\t\t\t\tif (tmp[j]=='*') \n\t\t\t\t\tx=i, y=j+1;\n\t\t\ts+=tmp;//\u5c06\u5f00\u59cb\u72b6\u6001\u4f5c\u4e3a\u5b57\u7b26\u4e32\u5b58\u50a8\n\t\t}\n\t\tif (!bfs(x, y, s)) bfss(3, 3, aim);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1570410076,
        "uid": 58399,
        "name": "\u72f8\u72f8\u517b\u7684\u654f\u654f",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2324 \u3010[SCOI2005]\u9a91\u58eb\u7cbe\u795e\u3011"
    },
    {
        "content": "### $IDA^*$ \u5b66\u4e60\u7b14\u8bb0\n\n[\u5177\u4f53\u7684\u9884\u59ff\u52bf](https://www.cnblogs.com/ZAGER/p/9768170.html)\n\n~~\u5176\u5b9e\u6211\u4e5f\u662f\u73b0\u5b66\u73b0\u5356\uff0c\u5c31\u662f\u89c9\u5f97\u672c\u4eba\u667a\u5546\u592a\u4f4e\uff0c\u53c2\u8003\u4e86\u633a\u591a\u8d44\u6599\u624d\u7406\u89e3 IDA* \uff0c\u60f3\u5e2e\u52a9\u5176\u4ed6\u50cf\u6211\u4e00\u6837\u7684\u83dc\u9e21\uff08\u867d\u7136\u6211\u8fd9\u4e48\u83dc\u7684\u53ef\u80fd\u4e0d\u591a\uff09\u4ee5\u53ca\u4ee5\u540e\u81ea\u5df1\u590d\u4e60\u7528\uff0c\u628a\u62bd\u8c61\u7684 IDA* \u548c\u672c\u9898\u5177\u4f53\u7684\u7ed3\u5408\u8d77\u6765\uff0c\u81ea\u4ee5\u4e3a\u53ef\u80fd\u66f4\u597d\u7406\u89e3\u4e00\u70b9qwq~~\n\n\u6211\u4eec\u7528$g(n)$\u8868\u793a\u8282\u70b9\u7684\u5b9e\u9645\u6b65\u6570\uff0c\u5c31\u662f\u5df2\u7ecf\u641c\u4e86\u51e0\u6b65\u3002\n\n$h(n)$\u8868\u793a\u8282\u70b9\u7684\u201c\u5495\u4ef7\u51fd\u6570\u201d\uff0c\u987e\u540d\u601d\u4e49\uff0c\u5495\u7b97\u5927\u6982\uff08\u4ece\u5f53\u524d\u8282\u70b9\u5230\u7ec8\u70b9\uff09\u8fd8\u8981\u641c\u51e0\u6b65\uff0c **\u5e76\u4e14\u4fdd\u8bc1\u5b9e\u9645\u4ee3\u4ef7\u4e0d\u4f1a\u6bd4$h(n)$\u66f4\u5c0f\u3002** \u5728\u672c\u9898\u4e2d\u7684\u4f53\u73b0\u4e3a\u5f53\u524d\u72b6\u6001\u4e0e\u6700\u7ec8\u72b6\u6001\u6709\u591a\u5c11\u4e2a\u4e0d\u7b26\u7684\u3002\uff08\u5bf9\u4e86\uff0c\u8fd9\u662f[\u6811\u5256\u59d0\u59d0](https://www.luogu.org/user/124721)\u544a\u8bc9\u7a9d\u7684\uff0c\u5728\u6b64\u9e23\u8c22qwq\n\n\u7136\u540e\u4ee4\n\n$$f(n)=g(n)+h(n)$$\n\n\u90a3\u4e48\u672c\u9898\u7684\u4f18\u5316\u5c31\u51fa\u6765\u4e86\uff0c$f(n)$\u663e\u7136\u662f$\u226415$\u7684\uff0c\u7136\u540e\u641c\u5c31\u597d\u5566\uff01\n\n(\u5176\u5b9e\u4ee3\u7801\u4e0d\u7528\u770b\u7684qwq\uff0c\u61c2\u4e86\u601d\u8def\u5c31\u76f4\u63a5\u641c\u5c31\u597d\u5566~\n\n**Code**\n\n```cpp\n\n#include<iostream>\n#include<cstdio>\n\nusing namespace std;\n\nconst int inf = 1e9;\nint T,ans;\nchar map[5][5],fin[5][5]=\n{\n\t{'1','1','1','1','1'},\n\t{'0','1','1','1','1'},\n\t{'0','0','*','1','1'},\n\t{'0','0','0','0','1'},\n\t{'0','0','0','0','0'}\n};\n\nint sx,sy;\nint dx[8]={1,1,-1,-1,2,2,-2,-2};\nint dy[8]={2,-2,2,-2,1,-1,1,-1};\n\nint f()\n{\n\tint cnt=0;\n\tfor(int i=0;i<5;++i)\n\t\tfor(int j=0;j<5;++j)\n\t\t\tif(map[i][j]!=fin[i][j])\n\t\t\t\t++cnt;\n\treturn cnt;\n}\n\nvoid init()\n{\n\tstring s[5];\n\tfor(int i=0;i<5;++i) cin>>s[i];\n\tfor(int i=0;i<5;++i)\n\t{\n\t\tfor(int j=0;j<5;++j)\n\t\t{\n\t\t\tmap[i][j]=s[i][j];\n\t\t\tif(map[i][j]=='*') {sx=j;sy=i;}\n\t\t}\n\t}\n}\n\nvoid dfs(int x,int y,int fx,int fy,int g)\n// (x,y) means the node where I am now, and g means the distance I have gone \n{\n\tint h=f();//F=g+h (not f()!!! \n\tif(h+g>16) return;//Bao Xian QwQ \n\tif(g>=ans) return;\n\tif(h==0) {ans=g;return;}\n\tfor(int i=0;i<8;++i)\n\t{\n\t\tint nx=x+dx[i],ny=y+dy[i];\n\t\tif(nx<0||ny<0||nx>4||ny>4) continue;\n\t\tif(nx==fx&&ny==fy) continue;//can't go back \n\t\tswap(map[nx][ny],map[x][y]);\n\t\tdfs(nx,ny,x,y,g+1);\n\t\tswap(map[nx][ny],map[x][y]);\n\t}\n}\n\nint main()\n{\n\tscanf(\"%d\",&T);\n\twhile(T--)\n\t{\n\t\tinit();\n\t\tans=inf;\n\t\tdfs(sy,sx,0,0,0);\n\t\tif(ans==inf) printf(\"-1\\n\");\n\t\telse printf(\"%d\\n\",ans);\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1573131567,
        "uid": 55032,
        "name": "wyhwyh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2324 \u3010[SCOI2005]\u9a91\u58eb\u7cbe\u795e\u3011"
    },
    {
        "content": "/\\*\n\u8fed\u4ee3\u52a0\u6df1dfs\u7ecf\u5178\u9898\uff01\n\n\u8bb0\u5f55\u76ee\u6807\u72b6\u6001\uff0c\u7136\u540e\u4ece\u8d77\u59cb\u72b6\u6001\u641c\u7d22\u3002\n\n\u7206\u641c\u53ef\u80fd\u8d85\u65f6\uff0c\u8981\u52a0\u526a\u679d\n\n\\*/\n\n\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#define limit 15\nusing namespace std;\nint T,ans=20,flag;\nint xx[9]={0,-2,-2,-1,-1,1,1,2,2};\nint yy[9]={0,-1,1,-2,2,2,-2,1,-1};\nint s[10][7],get[10][10];\nint target[10][10];\nchar si;\nvoid get_t()//\u8bb0\u5f55\u76ee\u6807\u72b6\u6001 \n{\n    target[1][1]=1;target[1][2]=1;target[1][3]=1;target[1][4]=1;target[1][5]=1;\n    target[2][1]=0;target[2][2]=1;target[2][3]=1;target[2][4]=1;target[2][5]=1;\n    target[3][1]=0;target[3][2]=0;target[3][3]=2;target[3][4]=1;target[3][5]=1;\n    target[4][1]=0;target[4][2]=0;target[4][3]=0;target[4][4]=0;target[4][5]=1;\n    target[5][1]=0;target[5][2]=0;target[5][3]=0;target[5][4]=0;target[5][5]=0;\n}\nint Judge()//\u8ba1\u7b97\u5f53\u524d\u72b6\u6001\u4e0e\u76ee\u6807\u72b6\u6001\u81f3\u5c11\u8fd8\u6709\u591a\u5c11\u6b65 \n{\n    int ret=0;\n    for(int i=1;i<=5;i++)\n      for(int j=1;j<=5;j++)\n      {\n          if(s[i][j]!=target[i][j])\n            ret++;\n      }\n    return ret;\n}\nvoid DFS(int now,int x,int y,int sum)\n{\n    if(flag) return;\n    int c=Judge();\n    if(now==sum)\n    {\n        if(c==0)\n          flag=1,ans=sum;\n    }\n    if(now-1+c>sum) return;//\u6700\u4f18\u6027\u526a\u679d\uff1a\u5f53\u524d\u7684\u6b65\u6570+\u5dee\u5f02>\u9650\u5236\u6b65\u6570 \n    for(int i=1;i<=8;i++)\n    {\n        int nx=x+xx[i];\n        int ny=y+yy[i];\n        if(nx>0&&nx<=5&&ny>0&&ny<=5)\n        {\n            swap(s[x][y],s[nx][ny]);\n            DFS(now+1,nx,ny,sum);\n            swap(s[x][y],s[nx][ny]);\n        }\n    }\n}\nint main()\n{\n    scanf(\"%d\",&T);\n    get_t();\n    while(T--)\n    {\n        int x,y;\n        for(int i=1;i<=5;i++)\n          for(int j=1;j<=5;j++)\n          {\n              cin>>si;\n              if(si=='*'){x=i;y=j;get[i][j]=2;}    \n            else get[i][j]=si-'0';\n          }\n        for(int k=0;k<=limit;k++)//\u8fed\u4ee3\u52a0\u6df1\u9650\u5236\u6b65\u6570 \n        {\n            flag=0;ans=20;\n            for(int i=1;i<=5;i++)\n              for(int j=1;j<=5;j++)\n                s[i][j]=get[i][j];\n            DFS(0,x,y,k);\n            if(ans==k) break;\n        }\n        if(ans<=15)printf(\"%d\\n\",ans);\n        else printf(\"-1\\n\");\n    }\n    return 0;\n}\n```",
        "postTime": 1481443896,
        "uid": 20833,
        "name": "\u5b89\u597d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2324 \u3010[SCOI2005]\u9a91\u58eb\u7cbe\u795e\u3011"
    },
    {
        "content": "why IDA*???\n\nwhy A*???\n\n~~\u6ca1\u60f3\u5230\u5427~~\uff0c\u5176\u5b9e\u4e00\u4e2a\u53cc\u7aefbfs~~\u52a0O2~~\u5c31\u591f\u7528\u3002\u3002\n\n\u9996\u5148\u8003\u8651\u7206\u641c\u3002\u8fd9\u65f6\u590d\u6742\u5ea6\u4e3a$\\Theta(8^{16})=\\Theta(2.8\\times 10^{14})$\uff0c\u663e\u7136\u592a~\u6162\u4e86\u3002\n\n\u53d1\u73b0$\\Theta(8^8)$\u5361\u5e38\u53ef\u4ee5\u6ee1\u8db3\u8981\u6c42\uff0c\u6240\u4ee5\u8003\u8651\u53cc\u7aefBFS\u3002\n\n\u53cc\u7aefBFS\u662f\u4ece\u8d77\u59cb\u72b6\u6001\uff08\u5373\u6837\u4f8b\u7ed9\u51fa\u7684\u72b6\u6001\uff09\u548c\u7ec8\u6b62\u72b6\u6001\uff08\u5373\u76ee\u6807\u68cb\u76d8\uff09\u4e24\u4e2a\u72b6\u6001\u5f00\u59cbBFS\uff0c\u5982\u679c\u5728\u4e2d\u95f4\u76f8\u9047\u5c31\u6ca1\u6709\u5fc5\u8981BFS\u4e86\uff0c\u53ef\u4ee5\u76f4\u63a5\u8f93\u51fa\u3002\n\n\u4e0b\u9762\u662f\u53cc\u7aefBFS\u7684\u793a\u610f\u56fe\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/5ievjbuj.png)\n\n\u53ef\u4ee5\u770b\u51fa\uff0c\u4f7f\u7528\u53cc\u7aefBFS\u53ef\u4ee5\u5c06\u6307\u6570\u7f29\u5c0f\u4e00\u534a\u3002\u6bd4\u5982\u8fd9\u9053\u9898\uff0c\u4e00\u6b65\u6269\u5c558\u4e2a\u72b6\u6001\uff08\u8003\u8651\u8ba9\u7a7a\u683c\u6309\u7167\u9a6c\u7684\u89c4\u5219\u8d70\uff09\uff0c\u6700\u591a\u6269\u5c5516\u6b65\uff0c\u590d\u6742\u5ea6\u5373$\\Theta(8^8)=\\Theta(1.6\\times 10^7)$\u3002\n\n\u53cc\u7aefBFS\u67092\u79cd\u5b9e\u73b0\uff1a1\uff0c\u5c06\u8d77\u70b9\u548c\u7ec8\u70b9\u653e\u8fdb\u540c\u4e00\u4e2a\u961f\u5217\u4e2d\u6269\u5c55\uff1b2\uff0c\u5c06\u8d77\u70b9\u548c\u7ec8\u70b9\u5206\u522b\u653e\u8fdb\u4e00\u4e2a\u961f\u5217\uff0c\u6bcf\u6b21\u4ece\u4e00\u4e2a\u961f\u5217\u4e2d\u53d6\u51fa\u961f\u5934\u6269\u5c55\u3002\u8fd9\u91cc\u91c7\u7528\u7b2c2\u79cd\u5b9e\u73b0\u3002\n\n\u8981\u6ce8\u610f\u51e0\u4e2a\u7ec6\u8282\uff1a1\uff0c\u68cb\u76d8\u75283\u8fdb\u5236\u6570\u8f6c\u6362\u4e3along long\uff0c\u5e76\u7528map\u8bb0\u5f55\u8ddd\u79bb\uff1b2\uff0c\u8f93\u51fa\u7b54\u6848\u65f6\u5224\u65ad\u7b54\u6848\u662f\u5426\u5927\u4e8e15\uff0c\u5982\u679c\u662f\u5219\u8f93\u51fa-1\uff1b3\uff0c\u72b6\u6001\u7684\u8ddd\u79bb\u8981\u523016\u800c\u4e0d\u662f8\u62169\u518d\u8f93\u51fa-1\uff1b4\uff0c\u6ce8\u610f\u961f\u5217\u5224\u7a7a\n\n\u7136\u540e\u5c31\u770b\u4ee3\u7801\u5427~\n\n```cpp\n#include <iostream>\n#include <cmath>\n#include <cstring>\n#include <cstdio>\n#include <queue>\n#include <map>\nusing namespace std;\n\nconst int Next[8][2] = {{1, 2}, {2, 1}, {1, -2}, {2, -1}, {-1, 2}, {-2, 1}, {-1, -2}, {-2, -1}};\nstruct Board {\n\tint a[6][6], ex, ey, stp;\n};\nBoard st, ed;\nqueue <Board> qst, qed;\n\nlong long Board2Int(Board b) {\n\tlong long k = 1, sum = 0;\n\tfor (int i = 1;i <= 5;i++) {\n\t\tfor (int j = 1;j <= 5;j++) {\n\t\t\tsum += b.a[i][j] * k;\n\t\t\tk *= 3;\n\t\t}\n\t}\n\treturn sum;\n}\n\nBoard Int2Board(long long x) {\n\tBoard b;\n\tfor (int i = 1;i <= 5;i++) {\n\t\tfor (int j = 1;j <= 5;j++) {\n\t\t\tb.a[i][j] = x % 3;\n\t\t\tx /= 3;\n\t\t}\n\t}\n\treturn b;\n}\n\nvoid Read() {\n\tstring s;\n\tfor (int i = 1;i <= 5;i++) {\n\t\tcin >> s;\n\t\tfor (int j = 0;j < 5;j++) {\n\t\t\tif (s[j] == '*') {\n\t\t\t\tst.a[i][j + 1] = 2;\n\t\t\t\tst.ex = i;\n\t\t\t\tst.ey = j + 1;\n\t\t\t} else st.a[i][j + 1] = s[j] - 48;\n\t\t}\n\t}\n\tst.stp = 1;\n}\n\nvoid Prefix() {\n\ted.a[1][1] = 1; ed.a[1][2] = 1; ed.a[1][3] = 1; ed.a[1][4] = 1; ed.a[1][5] = 1;\n\ted.a[2][1] = 0; ed.a[2][2] = 1; ed.a[2][3] = 1; ed.a[2][4] = 1; ed.a[2][5] = 1;\n\ted.a[3][1] = 0; ed.a[3][2] = 0; ed.a[3][3] = 2; ed.a[3][4] = 1; ed.a[3][5] = 1;\n\ted.a[4][1] = 0; ed.a[4][2] = 0; ed.a[4][3] = 0; ed.a[4][4] = 0; ed.a[4][5] = 1;\n\ted.a[5][1] = 0; ed.a[5][2] = 0; ed.a[5][3] = 0; ed.a[5][4] = 0; ed.a[5][5] = 0;\n\ted.ex = ed.ey = 3;\n\ted.stp = 1;\n\tqst.push(st); qed.push(ed);\n}\n\nvoid Solve() {\n\tmap <long long, int> dis1;\n\tmap <long long, int> dis2;\n\tdis1[Board2Int(st)] = 1; dis2[Board2Int(ed)] = 1;\n\twhile (!qst.empty() || !qed.empty()) {\n\t\tif (!qst.empty()) {\n\t\t\tBoard cur = qst.front();\n\t\t\tqst.pop();\n\t\t\tif (cur.stp >= 16) break;\n\t\t\tfor (int i = 0;i < 8;i++) {\n\t\t\t\tint tx = cur.ex + Next[i][0], ty = cur.ey + Next[i][1];\n\t\t\t\tif (tx < 1 || tx > 5 || ty < 1 || ty > 5) continue;\n\t\t\t\tBoard tmp = cur;\n\t\t\t\tswap(tmp.a[tx][ty], tmp.a[tmp.ex][tmp.ey]);\n\t\t\t\ttmp.ex = tx; tmp.ey = ty;\n\t\t\t\ttmp.stp = cur.stp + 1;\n\t\t\t\tlong long x = Board2Int(tmp);\n\t\t\t\tif (dis1[x]) continue;\n\t\t\t\tif (dis2[x]) {\n\t\t\t\t\tif (tmp.stp + dis2[x] - 2 > 15) printf(\"-1\\n\");\n\t\t\t\t\telse printf(\"%d\\n\", tmp.stp + dis2[x] - 2);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tdis1[x] = tmp.stp;\n\t\t\t\tqst.push(tmp);\n\t\t\t}\n\t\t}\n\t\tif (!qed.empty()) {\n\t\t\tBoard cur = qed.front();\n\t\t\tqed.pop();\n\t\t\tif (cur.stp >= 16) break;\n\t\t\tfor (int i = 0;i < 8;i++) {\n\t\t\t\tint tx = cur.ex + Next[i][0], ty = cur.ey + Next[i][1];\n\t\t\t\tif (tx < 1 || tx > 5 || ty < 1 || ty > 5) continue;\n\t\t\t\tBoard tmp = cur;\n\t\t\t\tswap(tmp.a[tx][ty], tmp.a[tmp.ex][tmp.ey]);\n\t\t\t\ttmp.ex = tx; tmp.ey = ty;\n\t\t\t\ttmp.stp = cur.stp + 1;\n\t\t\t\tlong long x = Board2Int(tmp);\n\t\t\t\tif (dis2[x]) continue;\n\t\t\t\tif (dis1[x]) {\n\t\t\t\t\tif (tmp.stp + dis1[x] - 2 > 15) printf(\"-1\\n\");\n\t\t\t\t\telse printf(\"%d\\n\", tmp.stp + dis1[x] - 2);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tdis2[x] = tmp.stp;\n\t\t\t\tqed.push(tmp);\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"-1\\n\");\n}\n\nint main() {\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile (t--) {\n\t\tRead();\n\t\tPrefix();\n\t\tSolve();\n\t\twhile (!qst.empty()) qst.pop();\n\t\twhile (!qed.empty()) qed.pop();\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1578793973,
        "uid": 61088,
        "name": "Solystic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2324 \u3010[SCOI2005]\u9a91\u58eb\u7cbe\u795e\u3011"
    },
    {
        "content": "## Description\n\n\u5728\u4e00\u4e2a $5 \\times 5$ \u7684\u68cb\u76d8\u4e0a\u6709\u767d\u8272\u548c\u9ed1\u8272\u7684\u9a91\u58eb\u5404 $12$ \u4e2a\uff0c\u4ee5\u53ca\u4e00\u4e2a\u7a7a\u4f4d\uff08\u6bcf\u4e2a\u9a91\u58eb\u90fd\u53ef\u4ee5\u79fb\u52a8\u5230\u548c\u5b83\u6a2a\u5750\u6807\u76f8\u5dee $2$\uff0c\u7eb5\u5750\u6807\u76f8\u5dee $1$ \u6216\u6a2a\u5750\u6807\u76f8\u5dee $1$\uff0c\u7eb5\u5750\u6807\u76f8\u5dee $2$ \u7684\u7a7a\u4f4d\u4e0a\uff09\u3002\u7ed9\u5b9a\u521d\u59cb\u68cb\u76d8\uff0c\u6c42\u51fa\u81f3\u5c11\u79fb\u52a8\u591a\u5c11\u6b21\u80fd\u5f97\u5230\u76ee\u6807\u68cb\u76d8\uff08\u5982\u4e0b\u56fe\uff09\u3002\u5982\u679c $15$ \u6b65\u4ee5\u5185\u4e0d\u80fd\u5f97\u5230\uff0c\u8f93\u51fa $-1$ \u3002\n\n![E5zvdO.png](https://s2.ax1x.com/2019/05/14/E5zvdO.png)\n\n## Solution\n\n$\\rm IDA^*$ \u7ecf\u5178\u9898\u3002\n\n\u4e0d\u7ba1\u662f $\\rm A^*$ \u8fd8\u662f $\\rm IDA^*$\uff0c\u6700\u91cd\u8981\u7684\u5c31\u662f **\u4f30\u4ef7\u51fd\u6570**\uff0c\u5b9a\u4e49\u4e3a\uff1a\n\n$$f(n) = g(n) + h(n)$$\n\n\u5176\u4e2d $f(n)$ \u662f\u8282\u70b9 $n$ \u7684\u4f30\u4ef7\u51fd\u6570\uff0c$g(n)$ \u662f\u5f53\u524d\u7684\u5b9e\u9645\u6b65\u6570\uff0c$h(n)$ \u662f\u5bf9\u672a\u6765\u6b65\u6570\u7684\u6700\u5b8c\u7f8e\u4f30\u4ef7\u3002\n\n\u4e3a\u4ec0\u4e48\u662f\u8fd9\u6837\u5462\uff1f\n\n\u5047\u8bbe\u4f60\u89c9\u5f97\u5230 $n$ \u8fd9\u4e2a\u72b6\u6001\u9700\u8981 $f(n)$ \u6b65\uff0c\u4f60\u5230\u5f53\u524d\u72b6\u6001\u5df2\u7ecf\u82b1\u4e86 $g(n)$ \u6b65\uff0c\u73b0\u5728\u4f60\u60f3\u4ece\u5f53\u524d\u72b6\u6001\u5230 $n$ \u8fd9\u4e2a\u72b6\u6001\uff0c\u5728\u8fd0\u6c14\u6700\u597d\u7684\u60c5\u51b5\u4e0b\u8fd8\u9700\u8981 $h(n)$ \u6b65\u3002\u82e5 $g(n) + h(n) > f(n)$\uff0c\u5219\u663e\u7136\u5f53\u524d\u72b6\u6001\u4e0d\u80fd\u518d $f(n)$ \u6b65\u4e4b\u5185\u5230\u8fbe $n$ \u8fd9\u4e2a\u72b6\u6001\u3002\n\n\u5982\u679c\u8981\u8ba9\u6240\u6709\u9a6c\u5f52\u4f4d\uff0c\u72b6\u6001\u6570\u4f1a\u975e\u5e38\u591a\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u79fb\u52a8\u7a7a\u4f4d\uff0c\u5373\u8ba9\u7a7a\u4f4d\u4e0e\u9a6c\u4ea4\u6362\u4f4d\u7f6e\uff0c\u76f4\u5230\u5f53\u524d\u72b6\u6001\u4e0e\u76ee\u6807\u72b6\u6001\u76f8\u540c\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u8fd9\u9053\u9898\u6709\u8981\u6c42 $15$ \u6b65\u4e4b\u5185\u5b8c\u6210\uff0c\u6240\u4ee5\u53ef\u4ee5 **\u8fed\u4ee3\u52a0\u6df1**\uff0c\u5373\u89c4\u5b9a\u6700\u5927\u6df1\u5ea6\uff0c\u8d85\u8fc7\u8fd9\u4e2a\u6df1\u5ea6\u5c31\u76f4\u63a5\u9000\u51fa\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e2a\u6700\u5927\u6df1\u5ea6\u4f5c\u4e3a $f(n)$ \u3002\n\n\u672c\u9898\u4e2d\u7684 **\u6700\u5b8c\u7f8e\u4f30\u4ef7**\uff1a\n\n```cpp\nconst int goal[MAXN + 1][MAXN + 1] = { //\u76ee\u6807\u77e9\u9635 \n{ 0, 0, 0, 0, 0, 0 }, \n{ 0, 1, 1, 1, 1, 1 }, \n{ 0, 0, 1, 1, 1, 1 }, \n{ 0, 0, 0, -1, 1, 1 }, \n{ 0, 0, 0, 0, 0, 1 }, \n{ 0, 0, 0, 0, 0, 0 } \n};\n\ninline int h() {//\u6700\u5b8c\u7f8e\u4f30\u4ef7\n    int cnt = 0;\n    for (int i = 1; i <= 5; ++i)\n        for (int j = 1; j <= 5; ++j)\n            cnt += a[i][j] != goal[i][j];\n    //\u6211\u4eec\u7edf\u8ba1\u4e86\u5f53\u524d\u72b6\u6001\u4e0e\u76ee\u6807\u72b6\u6001\u4e0d\u540c\u7684\u4f4d\u7f6e\u4e2a\u6570\u4e3a cnt\uff0c\n    //\u4f46\u662f\u6211\u4eec\u5b9e\u9645\u8981\u7edf\u8ba1\u7684\u662f\u4e0d\u5728\u81ea\u5df1\u4f4d\u7f6e\u4e0a\u7684\u9a6c\u7684\u4e2a\u6570\uff0c\n    //\u8fd9\u91cc\u6211\u4eec\u628a\u7a7a\u4f4d\u4e5f\u7b97\u4e86\u8fdb\u53bb\uff0c\u82e5\u6240\u6709\u9a6c\u90fd\u5728\u81ea\u5df1\u4f4d\u7f6e\u4e0a\uff0c\n    //\u5219\u6b64\u65f6\u7a7a\u4f4d\u4e5f\u4e00\u5b9a\u5728\u81ea\u5df1\u7684\u4f4d\u7f6e\u4e0a\uff0c\u7531\u6b64\u53ef\u5f97\uff0c\n    //\u7a7a\u4f4d\u5bf9\u7ed3\u679c\u6ca1\u6709\u5f71\u54cd\uff0c\u6240\u4ee5\u6700\u540e cnt \u8981 -1 \n    return cnt - 1;\n}\n```\n\n\u5bf9\u4e8e\u4e00\u5339\u4e0d\u5728\u81ea\u5df1\u4f4d\u7f6e\u4e0a\u7684\u9a6c\uff0c\u5728\u6700\u4f18\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4e00\u6b21\u79fb\u52a8\u5c31\u80fd\u4f7f\u8fd9\u5339\u9a6c\u5f52\u4f4d\u3002\u5047\u8bbe\u6bcf\u4e00\u5339\u8fd9\u6837\u7684\u9a6c\u90fd\u9700\u8981\u79fb\u52a8\u4e00\u6b21\uff0c\u6240\u4ee5\u6211\u4eec\u7edf\u8ba1\u8fd9\u6837\u7684\u9a6c\u7684\u4e2a\u6570\u5373\u53ef\u3002\n\n\u8fd8\u6709\u4e00\u4e2a\u526a\u679d\uff0c\u5c31\u662f\u8bb0\u5f55\u4e0a\u4e00\u6b65\u662f\u7a7a\u683c\u5728\u54ea\u4e2a\u4f4d\u7f6e\uff0c\u4e0b\u4e00\u6b65\u518d\u8df3\u56de\u4e0a\u4e00\u6b65\u7684\u4f4d\u7f6e\u663e\u7136\u4e0d\u4f18\uff0c\u8fd9\u6837\u53ef\u4ee5\u5c11\u6389\u5f88\u591a\u65e0\u7528\u9012\u5f52\u3002\n\n## Code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\n\ntemplate <class T>\ninline void read(T &x) {\n    x = 0;\n    char c = getchar();\n    bool f = 0;\n    for (; !isdigit(c); c = getchar()) f ^= c == '-';\n    for (; isdigit(c); c = getchar()) x = x * 10 + (c ^ 48);\n    x = f ? -x : x;\n}\n\ninline void readChar(char &c) {\n    for (c = getchar(); c != '0' && c != '1' && c != '*'; c = getchar());\n}\n\ntemplate <class T>\ninline void write(T x) {\n    if (x < 0) {\n        putchar('-');\n        x = -x;\n    }\n    T y = 1;\n    int len = 1;\n    for (; y <= x / 10; y *= 10) ++len;\n    for (; len; --len, x %= y, y /= 10) putchar(x / y + 48);\n}\n\nconst int MAXN = 5;\nconst int dx[8] = { -2, -1, 2, 1, 2, 1, -1, -2 };\nconst int dy[8] = { 1, 2, 1, 2, -1, -2, -2, -1 };\nconst int goal[MAXN + 1][MAXN + 1] = { //\u76ee\u6807\u77e9\u9635\uff0c\u7a7a\u4f4d\u6807\u8bb0\u4e3a -1 \n{ 0, 0, 0, 0, 0, 0 }, \n{ 0, 1, 1, 1, 1, 1 }, \n{ 0, 0, 1, 1, 1, 1 }, \n{ 0, 0, 0, -1, 1, 1 }, \n{ 0, 0, 0, 0, 0, 1 }, \n{ 0, 0, 0, 0, 0, 0 } \n};\nint t, sx, sy, a[MAXN + 5][MAXN + 5];\nbool sol;\n\ninline int h() {//\u6700\u5b8c\u7f8e\u4f30\u4ef7\n    int cnt = 0;\n    for (int i = 1; i <= 5; ++i)\n        for (int j = 1; j <= 5; ++j)\n            cnt += a[i][j] != goal[i][j];\n    //\u6211\u4eec\u7edf\u8ba1\u4e86\u5f53\u524d\u72b6\u6001\u4e0e\u76ee\u6807\u72b6\u6001\u4e0d\u540c\u7684\u4f4d\u7f6e\u4e2a\u6570\u4e3a cnt\uff0c\n    //\u4f46\u662f\u6211\u4eec\u5b9e\u9645\u8981\u7edf\u8ba1\u7684\u662f\u4e0d\u5728\u81ea\u5df1\u4f4d\u7f6e\u4e0a\u7684\u9a6c\u7684\u4e2a\u6570\uff0c\n    //\u8fd9\u91cc\u6211\u4eec\u628a\u7a7a\u4f4d\u4e5f\u7b97\u4e86\u8fdb\u53bb\uff0c\u82e5\u6240\u6709\u9a6c\u90fd\u5728\u81ea\u5df1\u4f4d\u7f6e\u4e0a\uff0c\n    //\u5219\u6b64\u65f6\u7a7a\u4f4d\u4e5f\u4e00\u5b9a\u5728\u81ea\u5df1\u7684\u4f4d\u7f6e\u4e0a\uff0c\u7531\u6b64\u53ef\u5f97\uff0c\n    //\u7a7a\u4f4d\u5bf9\u7ed3\u679c\u6ca1\u6709\u5f71\u54cd\uff0c\u6240\u4ee5\u6700\u540e cnt \u8981 -1 \n    return cnt - 1;\n}\n\nvoid dfs(int x, int y, int g, int f, int prex, int prey) {\n    if (sol || x < 1 || x > 5 || y < 1 || y > 5 || g + h() > f) return;\n    if (h() == -1) {//\u82e5\u6700\u5b8c\u7f8e\u4f30\u4ef7\u4e3a -1\uff0c\u8bf4\u660e\u5f53\u524d\u72b6\u6001\u4e0e\u76ee\u6807\u72b6\u6001\u91cd\u5408 \n        sol = 1;//\u6807\u8bb0\u4e3a\u6709\u89e3 \n        return;\n    }\n    for (int i = 0; i < 8; ++i) {\n        int tx = x + dx[i], ty = y + dy[i];\n        if (tx == prex && ty == prey) continue;//\u4fdd\u8bc1\u4e0b\u4e00\u6b65\u4e0d\u4e0e\u4e0a\u4e00\u6b65\u76f8\u540c \n        swap(a[x][y], a[tx][ty]);//\u7a7a\u683c\u4e0e\u9a6c\u4ea4\u6362\u4f4d\u7f6e \n        dfs(tx, ty, g + 1, f, x, y);//\u7ee7\u7eed\u641c\uff0c\u5f53\u524d\u6b65\u6570 +1 \n        swap(a[x][y], a[tx][ty]);//\u56de\u6eaf \n    }\n}\n\nint main() {\n    for (read(t); t; --t) {\n        for (int i = 1; i <= 5; ++i)\n            for (int j = 1; j <= 5; ++j) {\n                char c;\n                readChar(c);\n                if (c == '*') {\n                    sx = i, sy = j;//\u7a7a\u4f4d\u4f4d\u7f6e \n                    a[i][j] = -1;//\u6807\u8bb0\u4e3a -1 \n                } else a[i][j] = c ^ 48;//\u5b57\u7b26\u8f6c\u6210\u6570\u5b57 \n            }\n        int ans = -1;\n        for (int i = 0; i <= 15; ++i) {//\u8fed\u4ee3\u52a0\u6df1\uff08\u89c4\u5b9a\u6df1\u5ea6\u641c\u7d22\uff09 \n            sol = 0;\n            dfs(sx, sy, 0, i, 0, 0);\n            if (sol) {\n                ans = i;//\u6df1\u5ea6\u4e3a i \u65f6\u6709\u89e3\n                break;\n            }\n        }\n        write(ans);\n        putchar('\\n');\n    }\n    return 0;\n}\n```\n",
        "postTime": 1557798310,
        "uid": 32139,
        "name": "Heartlessly",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2324 \u3010[SCOI2005]\u9a91\u58eb\u7cbe\u795e\u3011"
    },
    {
        "content": "\u76ee\u524d\u672c\u4eba\u4ee53ms\u4ee3\u7801rank1\u3002\n\n\u5f88\u663e\u7136\uff0c\u8fd9\u9898\u72b6\u6001\u6570\u6709\u4e00\u5927\u5806\uff0c\u4e0d\u597d\u7684\u8bdd\u67093^25\u79cd\uff0c\u6700\u5c11\u4e5f\u670925\\*2^24\u79cd\uff0c\u8fdc\u8fdc\u8d85\u8fc7\u4e86bool\u6216\u8005int\u4e0b\u6807\u7684\u6700\u5927\u503c\u3002\n\n\u4e8e\u662f\u4e0d\u80fd\u8bb0\u5f55\u72b6\u6001\uff0c\u4e8e\u662f\u5c31\u4e0d\u80fd\u5e7f\u641c\uff0c\u53ea\u80fd\u6df1\u641c\u3002\n\n\u770b\u5230\u6700\u5927\u6b65\u6570\u6709\u9650\u5236\uff0c\u4e8e\u662f\u679c\u65ad\u4e0aIDA\\*\u3002\n\n~~                     \u5206                  \u5272                   \u7ebf                ~~\n\n\u4ee5\u4e0b\u5185\u5bb9dalao\u52ff(bi)\u62a5(ao)\n\nIDA\\*\u4e2d\uff0cID\u662f\u6307\u8fed\u4ee3\u52a0\u6df1\uff0cA\\*\u662f\u5bf9\u5176\u7684\u4e00\u4e2a\u4f18\u5316\u3002\n\n\u8fed\u4ee3\u52a0\u6df1\u662f\u5bf9\u6df1\u641c\u7684\u4e00\u4e2a\u4f18\u5316\u3002\n\n\u6df1\u641c\u7ecf\u8fc7\u7684\u8282\u70b9\uff08\u72b6\u6001\uff09\u53ef\u4ee5\u7528\u4e00\u9897\u6811\u6765\u8868\u793a\u3002\n\n\u5047\u8bbe\u6211\u4eec\u7684\u641c\u7d22\u6811\u6700\u5927\u6df1\u5ea6\u5f88\u6df1\uff0c\u4f46\u662f\u7b54\u6848\u7684\u6df1\u5ea6\u5f88\u6d45\uff0c\u90a3\u4e48\u6709\u65f6\u5019\u5c31\u4f1a\u505a\u5f88\u591a\u65e0\u7528\u529f\u3002\n\n ![](https://cdn.luogu.com.cn/upload/pic/6795.png) \n\n\u800cID\u641c\u7d22\u662f\u8fd9\u4e48\u505a\u7684\uff1a\u6bcf\u6b21\u627e\u4e00\u4e2a\u6df1\u5ea6\u9608\u503c\uff0c\u5982\u679c\u5f53\u524d\u8282\u70b9\u7684\u6df1\u5ea6\u5927\u4e8e\u6240\u8bbe\u7684\u9608\u503c\uff0c\u5c31\u9000\u51fa\uff0c\u5982\u679c\u5728\u8fd9\u4e2a\u9608\u503c\u4e0b\u627e\u4e0d\u5230\u89e3\uff0c\u5c31\u52a0\u5927\u9608\u503c\uff0c\u76f4\u5230\u627e\u5230\u53ef\u884c\u89e3\u3002\u8fd9\u65f6\u7684\u53ef\u884c\u89e3\u4e5f\u4e00\u5b9a\u5c31\u662f\u6700\u4f18\u89e3\u3002\n\n\u4f2a\u4ee3\u7801\uff1a\n\n```cpp\nvoid dfs(int maxlen,int cur){\n    if (\u627e\u5230\u89e3) flag=true,return;\u2460\n    if (cur>maxlen+1||\u91cd\u590d\u51fa\u73b0) return;\u2461\n    for (\u679a\u4e3e\u4e0b\u4e00\u6b65\u53ef\u884c\u72b6\u6001){\n        \u66f4\u6539\u72b6\u6001;\n        dfs(maxlen,cur+1);\n        if (flag) return;\n        \u6062\u590d\u72b6\u6001;\n    }\n}\n```\n\u2460\u2461\u7684\u7ec6\u8282\u53ca\u5148\u540e\u6839\u636e\u4e2a\u4eba\u5199\u6cd5\u53ca\u9898\u76ee\u5206\u6790\u3002\n\n\u8fd9\u6837\u7684\u590d\u6742\u5ea6\uff1a\u7b2ci\u5c42\u7684\u72b6\u6001\u6570\u4e00\u822c\u6765\u8bf4\u5927\u4e8e\u7b49\u4e8e1\u5230i-1\u4e2a\u5c42\u7684\u72b6\u6001\u6570\u4e4b\u548c\uff0c\u56e0\u6b64\u5982\u679c\u548cBFS\u4e00\u6837\u5224\u91cd\u7684\u8bdd\u65f6\u95f4\u590d\u6742\u5ea6\u4e0e\u666e\u901aBFS\u65e0\u5f02\uff0c\u5e38\u6570\u6216\u8bb8\u7a0d\u5927\uff0c\u4f46(\u5982\u679c\u65e0\u6cd5\u5224\u91cd)\u4f1a\u8282\u7ea6\u4e86\u4e00\u5927\u5806\u7a7a\u95f4\u590d\u6742\u5ea6\u3002\n\nIDA\\*\uff1a\u9488\u5bf9ID\uff0c\u5982\u679c\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u5f53\u524d\u8fd9\u4e2a\u72b6\u6001\u65e0\u8bba\u5982\u4f55\u4e5f\u65e0\u6cd5\u5728\u9608\u503c\u5185\u8f6c\u79fb\u51fa\u89e3\uff0c\u90a3\u4e48\u5c31\u4e0d\u5fc5\u518d\u5f80\u4e0b\u641c\u7d22\u4e86\u3002\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u6709\u6548\u7684\u526a\u679d\u3002\u7b49\u4ef7\u4e8e\u628a\u4e0a\u9762DFS\u4e2dcur>maxlen+1\u53d8\u6210cur+h()>maxlen+1\uff0c\u5176\u4e2dh()\u8fd4\u56de\u5f53\u524d\u72b6\u6001\u8f6c\u79fb\u5230\u89e3\u7684\u4f30\u8ba1\u6b65\u6570\uff0c\u53eb\u4f30\u4ef7\u51fd\u6570\u3002\n\n\u663e\u7136\uff0ch()\u53ef\u4ee5\u628a\u7b54\u6848\u4f30\u4f18\uff0c\u5927\u4e0d\u4e86\u526a\u679d\u5c11\u4e00\u70b9\uff0c\u4f46\u4f30\u52a3\u5c31\u4f1a\u5bfc\u81f4\u9519\u8bef\u3002\n\n~~                     \u5206                  \u5272                   \u7ebf                ~~\n\n\u5bf9\u672c\u9898\uff0c\u4e00\u4e2a~~\u663e\u800c\u6613\u89c1\u7684~~\u4f30\u4ef7\u51fd\u6570\u5c31\u662f\u8fd4\u56de\u4e0d\u5728\u81ea\u5df1\u5730\u76d8\u4e0a\u7684\u9a91\u58eb\u6570\u3002\n\n\u4f46\u8fd9\u53ef\u4ee5\u4f18\u5316\uff0c\u5373\u8fd4\u56de\u5404\u4e2a\u4e0d\u5728\u81ea\u5df1\u5730\u76d8\u4e0a\u7684\u9a91\u58eb\u8df3\u56de\u5730\u76d8\u6700\u5c11\u9700\u8981\u51e0\u6b65\u7684\u548c\u3002\n\n\u7136\u540e\u6211\u4eec\u5c31\u53d1\u73b0\u8fd9\u4e1c\u897f\u4e0d\u9700\u8981\u6bcf\u6b21\u90fd\u7edf\u8ba1\uff0c\u53ea\u8981\u5f00\u4e00\u4e2a\u53d8\u91cf\uff0c\u5728\u66f4\u6539\u72b6\u6001\uff08\u53ca\u6062\u590d\u72b6\u6001\uff09\u65f6\u7ef4\u62a4\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u518d\u7136\u540e\uff0c\u4e0d\u8981\u7528STL\uff0c\u51fd\u6570\u7528inline\uff0c\u4ea4\u6362\u7528^=\uff0c\u5f00O2\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\uff08\u4ee3\u7801\u4e0d\u4f46\u4e11\uff0c\u8fd8\u6709\u5f88\u591a\u4e0d\u9700\u8981\u7684\u4e1c\u897f\uff0c\u8bf7\u7565\u8fc7\uff09\n\n\n\n\n\n```cpp\n#if 0\n#include<iostream>\n#include<cstdio>\n#include<string>\n#include<cstring>\n#include<algorithm>\n#include<stdlib.h>\n#include<time.h>\n#include<map>\n#include<queue>\n#include<set>\n#include<utility>\n#else\n#include<bits/stdc++.h>\n#endif\n#if 0\n#include<cmath>\n#endif\n#define REP(x,l,r) for (int x=(l);x<=(r);++x)\n#define RREP(x,r,l) for (int x=(r);x>=(l);--x)\n#define fr(x) freopen(x,\"r\",stdin)\n#define fw(x) freopen(x,\"w\",stdout)\n#define mem(a) memset(a,0,sizeof(a))\n#define memax(a) memset(a,127,sizeof(a))\n#define memid(a) memset(a,63,sizeof(a))\n#define dbg(x) cout<<#x<<\" = \"<<(x)<<endl\n#define tpn typename\n#define fi first\n#define se second\n#define moIOIAK return\n#define xxxm9987dalao 0\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef double db;\ntypedef long double ldb;\nusing namespace std;\ntemplate <tpn A> inline void Swap(A &x,A &y){\n    x^=y,y^=x,x^=y;\n}\ntemplate <tpn A> inline A Max(A &x, A &y) {\n    return x > y ? x : y;\n}\ntemplate <tpn A> inline A Min(A &x, A &y) {\n    return x < y ? x : y;\n}\ntemplate <tpn A> inline void read(A &x){\n    char c;\n    A neg=1;\n    do{\n        c=getchar();\n        if (c=='-') neg=-1;\n    }while (c<'0'||c>'9');\n    x=0;\n    do{\n        x=x*10+c-48;\n        c=getchar();\n    }while (c>='0'&&c<='9');\n    x*=neg;\n}\ninline bool pos(int a){\n    return a>0;\n}\ninline bool neg(int a){\n    return a<0;\n}\ntemplate <tpn A,tpn B> inline void read(A &x,B &y){read(x);read(y);}\ntemplate <tpn A,tpn B,tpn C> inline void read(A &x,B &y,C &z){read(x);read(y);read(z);}\ntemplate <tpn A,tpn B,tpn C,tpn D> inline void read(A &x,B &y,C &z,D &dd){read(x);read(y);read(z);read(dd);}\nconst int w[5][5]={{1,1,1,2,2},{0,1,1,1,1},{0,0,1,1,1},{0,0,0,0,1},{0,0,0,0,0}};//0\nconst int b[5][5]={{0,0,0,0,0},{1,0,0,0,0},{1,1,1,0,0},{1,1,1,1,0},{2,2,1,1,1}};//1\nint ma[5][5];\nint T,dif,sx,sy;//dif\u662f\u7528\u6765\u526a\u679d\u7684\uff08\u4f30\u4ef7\u51fd\u6570\uff1f\uff09\nchar s[5][6];\nbool flag;\n##inline void dfs(int,int,int);\n#inline void push(int nsx,int nsy,int maxlen,int cur,int way,int law){//last way\n    if (nsx<0||nsx>4||nsy<0||nsy>4||way==law) return;\n    int ydif=dif;\n    if (pos(ma[nsx][nsy])) dif+=b[sx][sy]-b[nsx][nsy];\n    else dif+=w[sx][sy]-w[nsx][nsy];\n    int ysx=sx,ysy=sy;\n    Swap(ma[sx][sy],ma[nsx][nsy]);\n    sx=nsx,sy=nsy;\n    dfs(maxlen,cur+1,way);\n    sx=ysx,sy=ysy;\n    Swap(ma[sx][sy],ma[nsx][nsy]);\n    dif=ydif;\n}\ninline void dfs(int maxlen,int cur,int way){\n    if (!dif){\n        flag=1;\n        return;\n    }\n    if (cur+dif>maxlen+1) return;\n    push(sx+2,sy+1,maxlen,cur,1,9-way);\n    if (flag) return;\n    push(sx+1,sy+2,maxlen,cur,2,9-way);\n    if (flag) return;\n    push(sx-1,sy+2,maxlen,cur,3,9-way);\n    if (flag) return;\n    push(sx-2,sy+1,maxlen,cur,4,9-way);\n    if (flag) return;\n    push(sx-2,sy-1,maxlen,cur,8,9-way);\n    if (flag) return;\n    push(sx-1,sy-2,maxlen,cur,7,9-way);\n    if (flag) return;\n    push(sx+1,sy-2,maxlen,cur,6,9-way);\n    if (flag) return;\n    push(sx+2,sy-1,maxlen,cur,5,9-way);\n    if (flag) return;\n}\n###int main(){\n    read(T);\n    int numT=T;\n    while (T--){\n        REP(i,0,4) scanf(\"%s\",s[i]);\n        REP(i,0,4)\n          REP(j,0,4){\n              if (s[i][j]=='1') ma[i][j]=1;\n              else if (s[i][j]=='0') ma[i][j]=-1;\n              else ma[i][j]=0,sx=i,sy=j;\n              if (pos(ma[i][j])) dif+=b[i][j];\n              if (neg(ma[i][j])) dif+=w[i][j];\n          }\n        if (!dif){\n            printf(\"0\\n\");\n            continue;\n        }\n        int tot=0;\n        while (!flag&&tot<15){\n            tot++;\n            dfs(tot,1,0);\n        }\n        if (flag) printf(\"%d\\n\",tot);\n        else printf(\"-1\\n\");\n        flag=dif=0;\n    }\n    moIOIAK xxxm9987dalao;\n}\n```",
        "postTime": 1502025596,
        "uid": 13940,
        "name": "pupuvovovovovo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2324 \u3010[SCOI2005]\u9a91\u58eb\u7cbe\u795e\u3011"
    },
    {
        "content": "\u8fd9\u9898\u6ca1\u5199A\\*\uff0c\u7ed3\u679c\u83ab\u540d\u5176\u5999\u768417ms\u8fc7\u4e86......\n\n\u5927\u6982\u662f\u51b0\u7816\u592a\u5feb\u7684\u7f18\u6545\u5427......\n\n\u6211\u5199\u4e86\u7eafDFS\uff0c\u6ce8\u610f\u51e0\u4e2a\u7ec6\u8282\n\n1.\u7528\u4e00\u4e2a\u53d8\u91cfy\u5b58\u50a8\u5f53\u524d\u8fd8\u6709\u51e0\u4e2a\u9a91\u58eb\u6ca1\u6709\u5230\u8fbe\u5e94\u5230\u8fbe\u7684\u5730\u65b9\uff0c\u5f53y=0\u65f6\u8f93\u51fa\n\n2.\u663e\u7136\u6bcf\u6b21\u79fb\u52a8\u6700\u591a\u53ea\u4f1a\u6709\u4e00\u4e2a\u9a91\u58eb\u5230\u8fbe\u76ee\u7684\u5730\uff0c\u6240\u4ee5\u5f53x+y>15\u65f6\u53ef\u4ee5\u76f4\u63a5return\uff1b\n\n\u4e3a\u9632\u6b62DFS\u8fdb\u884c\u4e0d\u9700\u8981\u7684\u64cd\u4f5c\uff0c\u53ef\u4ee5\u7528\u8fed\u4ee3\u52a0\u6df1\u6765\u8fdb\u884c\u4f18\u5316\n\n\u6211\u7528\u4e86last\u8fdb\u884c\u4f18\u5316\uff0c\u9632\u6b62\u4e24\u6b21\u64cd\u4f5c\u8fd4\u56de\u539f\u5904\n\n    \n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std; \nchar c[6][6];\nstring mb[6];\nbool judge(int x,int y)\n{\n    if(x<1||x>5)return false;\n    if(y<1||y>5)return false;\n    return true;    \n}\nvoid print()//\u8c03\u8bd5\u7528\uff0c\u53ef\u65e0\u89c6\n{\n    for(int i=1;i<=5;i++)\n    {\n        for(int j=1;j<=5;j++)cout<<c[i][j];\n        cout<<endl;\n    }\n    cout<<endl;\n}\nvoid swap(char &c1,char &c2)\n{\n    char c3=c1;c1=c2;c2=c3;\n}\nint i,j,k,m,n,ans;\nvoid trys(int x,int y,int px,int py,int last)//x\u662f\u5f53\u524d\u641c\u7d22\u5c42\u6570\uff0cy\u662f\u5269\u4f59\u591a\u5c11\u9a91\u58eb\u672a\u5230\u8fbe,pxpy\u662f*\u7684\u4f4d\u7f6e,last\u662f\u4e0a\u5c42\u641c\u7d22\u64cd\u4f5c\n{\n    if(x+y>j)return;//\u526a\u679d\n    if(ans>0)return;//\u51fa\u89e3\u540e\u4e0d\u5fc5\u7ee7\u7eed\u641c\u7d22\n    if(y==0)\n    {\n        ans=x;//print();\n        return;\n    }\n    if(judge(px+2,py+1)&&last!=4)\n    {\n        int yy=y+(c[px+2][py+1]==mb[px+2][py+1]);\n        yy-=(c[px+2][py+1]==mb[px][py]);\n        swap(c[px+2][py+1],c[px][py]);\n        trys(x+1,yy,px+2,py+1,1);\n        swap(c[px+2][py+1],c[px][py]);\n    }\n    if(judge(px+2,py-1)&&last!=3)\n    {\n        int yy=y+(c[px+2][py-1]==mb[px+2][py-1]);\n        yy-=(c[px+2][py-1]==mb[px][py]);\n        swap(c[px+2][py-1],c[px][py]);\n        trys(x+1,yy,px+2,py-1,2);\n        swap(c[px+2][py-1],c[px][py]);\n    }\n    if(judge(px-2,py+1)&&last!=2)\n    {\n        int yy=y+(c[px-2][py+1]==mb[px-2][py+1]);\n        yy-=(c[px-2][py+1]==mb[px][py]);\n        swap(c[px-2][py+1],c[px][py]);\n        trys(x+1,yy,px-2,py+1,3);\n        swap(c[px-2][py+1],c[px][py]);\n    }\n    if(judge(px-2,py-1)&&last!=1)\n    {\n        int yy=y+(c[px-2][py-1]==mb[px-2][py-1]);\n        yy-=(c[px-2][py-1]==mb[px][py]);\n        swap(c[px-2][py-1],c[px][py]);\n        trys(x+1,yy,px-2,py-1,4);\n        swap(c[px-2][py-1],c[px][py]);\n    }\n    if(judge(px+1,py+2)&&last!=8)\n    {\n        int yy=y+(c[px+1][py+2]==mb[px+1][py+2]);\n        yy-=(c[px+1][py+2]==mb[px][py]);\n        swap(c[px+1][py+2],c[px][py]);\n        trys(x+1,yy,px+1,py+2,5);\n        swap(c[px+1][py+2],c[px][py]);\n    }\n    if(judge(px+1,py-2)&&last!=7)\n    {\n        int yy=y+(c[px+1][py-2]==mb[px+1][py-2]);\n        yy-=(c[px+1][py-2]==mb[px][py]);\n        swap(c[px+1][py-2],c[px][py]);\n        trys(x+1,yy,px+1,py-2,6);\n        swap(c[px+1][py-2],c[px][py]);\n    }\n    if(judge(px-1,py+2)&&last!=6)\n    {\n        int yy=y+(c[px-1][py+2]==mb[px-1][py+2]);\n        yy-=(c[px-1][py+2]==mb[px][py]);\n        swap(c[px-1][py+2],c[px][py]);\n        trys(x+1,yy,px-1,py+2,7);\n        swap(c[px-1][py+2],c[px][py]);\n    }\n    if(judge(px-1,py-2)&&last!=5)\n    {\n        int yy=y+(c[px-1][py-2]==mb[px-1][py-2]);\n        yy-=(c[px-1][py-2]==mb[px][py]);\n        swap(c[px-1][py-2],c[px][py]);\n        trys(x+1,yy,px-1,py-2,8);\n        swap(c[px-1][py-2],c[px][py]);\n    }\n}\nint main()\n{\n    mb[1]=\"011111\";\n    mb[2]=\"001111\";\n    mb[3]=\"000*11\";\n    mb[4]=\"000001\";\n    mb[5]=\"000000\";\n    //mb\u662f\u76ee\u6807\u72b6\u6001\n    int t;scanf(\"%d\",&t);\n    while(t--)\n    {\n        k=0;\n        for(i=1;i<=5;i++)\n        for(j=1;j<=5;j++)\n        cin>>c[i][j];\n        for(i=1;i<=5;i++)\n        for(j=1;j<=5;j++)\n        if(c[i][j]!=mb[i][j]&&c[i][j]!='*')k++;//k\u662f\u6709\u591a\u5c11\u9a91\u58eb\u4e0d\u5728\u76ee\u7684\u5730\n        int px,py;\n        for(i=1;i<=5;i++)\n        for(j=1;j<=5;j++)\n        if(c[i][j]=='*')px=i,py=j;\n        ans=0;\n        for(j=k;j<=15&&ans==0;j++)//\u8fed\u4ee3\u52a0\u6df1\n        trys(0,k,px,py,0);\n        if(ans>0)\n        printf(\"%d\\n\",ans);\n        else \n        printf(\"%d\\n\",-1);\n    }\n}\n```",
        "postTime": 1501920476,
        "uid": 6063,
        "name": "NephrenRuq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2324 \u3010[SCOI2005]\u9a91\u58eb\u7cbe\u795e\u3011"
    },
    {
        "content": "# \u53d1\u4e00\u7bc7\u7b80\u5355\u7684\u542f\u53d1\u5f0f\u5e7f\u641c\u9898\u89e3\u9020\u798f\u4eba\u7c7b\n~~\u4e3b\u8981\u662f\u61d2\u5f97\u5199\u8fed\u4ee3\u52a0\u6df1\u548c\u53cc\u5411\u5e7f\u641c~~\n\n \u9996\u5148\u8bf4\u4e00\u4e0b\u542f\u53d1\u5f0f\u5e7f\u641c\n \t\n \t\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u4f18\u5148\u961f\u5217\uff0c\u6bcf\u6b21\u5f39\u51fa\u5f53\u524d\u6b65\u6570+\u4f30\u4ef7\u503c\u6700\u5c0f\u7684\u70b9\n    \n    \u7136\u540e\u6bcf\u6b21\u5bf9\u8fd9\u4e2a\u70b9\u8fdb\u884c\u6269\u5c55\uff0c\u6ce8\u610f\u7684\u662f\u9700\u8981\u8fdb\u884c\u65b9\u5411\u5224\u91cd\uff0c\u4e0d\u80fd\u8d70\u56de\u5b83\u7684\u4e0a\u4e00\u4e2a\u72b6\u6001\uff08\u5177\u4f53\u65b9\u6cd5\u5728\u7a0b\u5e8f\u91cc\uff09\n    \n    \u6700\u540e\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u4e0e\u6807\u51c6\u72b6\u6001\u4e00\u81f4\uff0c\u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u8f93\u51fa\u5b83\u7684\u6b65\u6570\n    \n \t\u4f46\u662f\u5982\u679c\u5b83\u7684\u6b65\u6570+\u4f30\u4ef7\u503c\u5df2\u7ecf\u8d85\u8fc7\u4e8615\uff0c\u6211\u4eec\u5c31\u8f93\u51fa-1\n    \n    \u4e2a\u4eba\u8ba4\u4e3a\u6bd4\u8fed\u4ee3\u52a0\u6df1\u597d\u7406\u89e3\uff0c\u4f46\u662f\u6bd4\u8f83\u6162\n    \n```cpp\n//Copyright \u00a9\ufe0f 2017-2019 Yuyi Inc. All rights reserved. Writer: TimMc Luogu P2324 Solution\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <iostream>\n#include <queue>\nusing namespace std;\n\nconst int standard[6][6] = { //\u6807\u51c6\n\t{0, 0, 0, 0, 0, 0},\n\t{0, 1, 1, 1, 1, 1},\n\t{0, 0, 1, 1, 1, 1},\n\t{0, 0, 0, 2, 1, 1},\n\t{0, 0, 0, 0, 0, 1},\n\t{0, 0, 0, 0, 0, 0},\n};\nconst int delta[8][2] = {{2, 1}, {-2, -1}, {1, 2}, {-1, -2}, {2, -1}, {-2, 1}, {1, -2}, {-1, 2}};\n//\u516b\u5411\u504f\u79fb\u6570\u7ec4\uff0c\u7279\u522b\u5730\u628a\u4e24\u4e2a\u76f8\u53cd\u7684\u65b9\u5411\u5199\u5728\u4e34\u8fd1\u7684\u4f4d\u7f6e\u4e0a\uff0c\u8fd9\u6837\u6bcf\u4e2a\u65b9\u5411\u76f8\u53cd\u7684\u65b9\u5411\u5c31\u662f\u5b83\u7684\u7f16\u53f7^1\u3002\u4f8b\u5982(0,1),(4,5)\nint T;\nstruct Node{\n\tint d, h, dir, zx, zy, num[6][6]; //d\u4ee3\u8868\u6b65\u6570\uff0ch\u4ee3\u8868\u4f30\u4ef7\u503c\uff0cdir\u4ee3\u8868\u4e0a\u4e00\u65b9\u5411\uff0czx\u3001zy\u4ee3\u8868\u7a7a\u7684\u5750\u6807\u3002num\u4ee3\u8868\u5f53\u524d\u72b6\u6001\n\tNode() {\n\t\td = h = 0;\n\t\tdir = -1; //\u521d\u59cb\u7684\u6ca1\u6709\u4e0a\u4e00\u65b9\u5411\n\t}\n\tbool operator < (const Node &x) const {\n\t\treturn d + h > x.d + x.h; //\u91cd\u5b9a\u4e49\u8fd0\u7b97\u7b26\u4f7f\u5f97\u4f18\u5148\u961f\u5217\u6bcf\u6b21\u5f39\u51fad+h\u6700\u5c0f\u7684\n\t}\n};\n\nint judge(Node &x) { //\u4f30\u4ef7\u51fd\u6570\n\tint ret = 0;\n\tfor (int i = 1; i <= 5; i++)\n\t\tfor (int j = 1; j <= 5; j++)\n\t\t\tif (x.num[i][j] != standard[i][j]) ret++; //\u8ba1\u7b97\u6807\u51c6\u548c\u73b0\u5728\u5dee\u4e86\u591a\u5c11\n\treturn ret;\n}\n\nbool ok(int x, int y) {\n\tif (x < 1 || y < 1 || x > 5 || y > 5) return 0; //\u5224\u65ad\u4e00\u4e2a\u5750\u6807(x,y)\u662f\u5426\u8d8a\u754c\n\treturn 1;\n}\n\nint main()\n{\n\tfreopen(\"luogu.in\", \"r\", stdin);\n\tfreopen(\"luogu.out\", \"w\", stdout);\n\n\tcin >> T;\n\twhile (T--) {\n\t\tNode st;\n\t\tpriority_queue <Node> q; //\u6ce8\u610f\u5728\u6bcf\u7ec4\u6570\u636e\u6674\u7a7a\u4f18\u5148\u961f\u5217\n\t\tfor (int i = 1; i <= 5; i++)\n\t\t\tfor (int j = 1; j <= 5; j++) {\n\t\t\t\tchar c;\n\t\t\t\tcin >> c;\n\t\t\t\tif (c == '0') st.num[i][j] = 0; //0\u4ee3\u8868\u767d\uff0c1\u4ee3\u8868\u9ed1\uff0c2\u4ee3\u8868\u7a7a\u4f4d\n\t\t\t\telse if (c == '1') st.num[i][j] = 1;\n\t\t\t\telse if (c == '*') {\n\t\t\t\t\tst.num[i][j] = 2;\n\t\t\t\t\tst.zx = i;\n\t\t\t\t\tst.zy = j;\n\t\t\t\t}\n\t\t\t}\n\t\tq.push(st);\n\t\twhile (!q.empty()) {\n\t\t\tNode now = q.top();\n\t\t\tq.pop();\n\t\t\t\n\t\t\tif (now.d > 15) { //\u6bcf\u6b21\u5f39\u51fa\u7684\u4e00\u5b9a\u662fd+h\u6700\u5c0f\u7684\uff0c\u65e2\u7136\u4ed6\u7684d\u90fd\u8d85\u8fc715\u4e86\uff0c\u90a3\u4ed6\u540e\u8fb9\u7684\u4e00\u5b9a\u4e5f\u8d85\u8fc715\u4e86\uff0c\u6240\u4ee5\u76f4\u63a5\u5224\u65ad-1\n\t\t\t\tcout << -1 << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (!judge(now)) { //judge\u4e5f\u53ef\u5f53\u505a\u5224\u65ad\u4e24\u4e2a\u72b6\u6001\u662f\u5426\u76f8\u7b49\u7684\u51fd\u6570\n\t\t\t\tcout << now.d << endl;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tfor (int i = 0; i < 8; i++) {\n\t\t\t\tif (i == now.dir) continue; //\u4e0d\u80fd\u8d70\u4e0a\u4e00\u65b9\u5411\n\t\t\t\tNode tmp = now;\n\t\t\t\ttmp.zx += delta[i][0], tmp.zy += delta[i][1]; //\u504f\u79fb\n\t\t\t\tif (ok(tmp.zx, tmp.zy)) { //\u5224\u65ad\u8d8a\u754c\n\t\t\t\t\ttmp.d++;\n\t\t\t\t\ttmp.dir = i ^ 1; //\u8bb0\u5f55\u4e0a\u4e00\u65b9\u5411\n\t\t\t\t\tswap(tmp.num[now.zx][now.zy], tmp.num[tmp.zx][tmp.zy]); //\u8d70\u7a7a\u4f4d\u800c\u975e\u8d70\u9a6c\n\t\t\t\t\ttmp.h = judge(tmp); //\u8ba1\u7b97\u4f30\u4ef7\u503c\n\t\t\t\t\tq.push(tmp); //\u5165\u961f\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\n \t",
        "postTime": 1572697963,
        "uid": 97434,
        "name": "TimWYZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2324 \u3010[SCOI2005]\u9a91\u58eb\u7cbe\u795e\u3011"
    },
    {
        "content": "### \u524d\u8a00\uff1a\n##### \u53cc\u5411$bfs$\uff0c\u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u4ece\u4e24\u5934\u4e00\u8d77\u641c\u7d22\u7684$bfs$\uff0c  \n##### \u9700\u8981\u540c\u65f6\u77e5\u9053\u521d\u59cb\u72b6\u6001\u548c\u7ec8\u6b62\u72b6\u6001\uff08\u5f53\u7136\u4e5f\u53ef\u4ee5\u4f7f\u7528$AStar$\u7b97\u6cd5\uff09\uff0c \n##### \u53ef\u4ee5\u51cf\u5c11\u4e00\u534a\u7684\u641c\u7d22\u6df1\u5ea6\uff0c\u4f7f\u65f6\u95f4\u590d\u6742\u5ea6\u5927\u5927\u964d\u4f4e\uff0c\n##### \u672c\u9898\u5c31\u662f\u5178\u578b\uff0c\u7ec8\u6b62\u72b6\u6001\u4e00\u5b9a\uff0c\u7ed9\u51fa\u521d\u59cb\u72b6\u6001\u627e\u51fa\u6700\u5c0f\u7684\u79fb\u52a8\u6b21\u6570\n\n### \u601d\u8def\uff1a\n\u5c06\u8bfb\u5165\u7684\u77e9\u9635\u8f6c\u5316\u4e3a\u5b57\u7b26\u4e32\uff0c\u5229\u7528$map$\u8fdb\u884c\u5224\u91cd\uff08\u6709$25$\u4f4d\uff09\uff0c\u8fdb\u884c\u53cc\u5411$bfs$,\u5982\u679c\u9047\u5230\u4ece\u53e6\u4e00\u7aef\u641c\u7d22\u800c\u6765\u7684\u60c5\u51b5\u5df2\u7ecf\u6ee1\u8db3\uff0c\u76f4\u63a5\u8f93\u51fa\u5373\u53ef\uff0c\u5f53\u641c\u7d22\u6df1\u5ea6$>=8$\u65f6\u4e0d\u518d\u7ee7\u7eed\u653e\u5165\u961f\u5217\uff08$15$\u6b65\u4ee5\u5185\uff09\uff0c\u5982\u679c\u65e0\u89e3\uff08$>15$\uff09\u8f93\u51fa$-1$\n\n\n### \u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint dx[]={-1,1,-1,1,-2,2,2,-2},dy[]={-2,2,2,-2,-1,1,-1,1};\nstruct node\n{\n\tstring x;\n\tint id,steps;\n\tnode()\n\t{\n\t}\n\tnode(string _x,int _id,int _steps)\n\t{\n\t\tx=_x,id=_id,steps=_steps; \n\t}\n};//x\u4e3a\u8f6c\u5316\u7684\u5b57\u7b26\u4e32\uff0cid\u8868\u793a\u4ece\u540e\u5f80\u524d\u6216\u4ece\u524d\u5f80\u540e\u641c,steps\u8868\u793a\u79fb\u52a8\u6b21\u6570\nmap<string,int> mp1,mp2;//\u5229\u7528map\u8fdb\u884c\u5224\u91cd\nqueue<node> q;\nint main()\n{\n\tint t;\n\tcin>>t;\n\tstring to=\"1111101111002110000100000\",st;//\u8f6c\u5316\u4e3a\u5b57\u7b26\u4e32\u5904\u7406\n\twhile(t--)\n\t{\t\n\t\tbool flag=1;\n\t\tst.clear();\n\t\twhile(!q.empty()) q.pop();\n\t\tmp1.clear(),mp2.clear();//\u6e05\u7a7a\u5148\u524d\u7684\u72b6\u6001\n\t\tfor (int i=1;i<=5;i++)\n\t\t{\n\t\t\tfor (int j=1;j<=5;j++)\n\t\t\t{\n\t\t\t\tchar x;\n\t\t\t\tdo\n\t\t\t\t{\n\t\t\t\t\tx=getchar();\n\t\t\t\t\t//cout<<x;\n\t\t\t\t}\n\t\t\t\twhile(x!='*'&&!isdigit(x));\n\t\t\t\tif (x=='*') st+='2';\n\t\t\t\telse st+=x;\n\t\t\t}\n\t\t}\n\t\tq.push(node(st,0,0));\n\t\tq.push(node(to,1,0));\n\t\twhile(!q.empty())\n\t\t{\n\t\t\tnode u=q.front();\n\t\t\tq.pop();\n\t\t\tif (u.id==1)\n\t\t\t{\n\t\t\t\tif (mp1[u.x]!=0) continue;//\u5df2\u7ecf\u641c\u7d22\u8fc7\uff0c\u4e0d\u662f\u6700\u4f18\u89e3\n\t\t\t\tmp1[u.x]=u.steps;//\u66f4\u65b0\n\t\t\t\tif (mp2[u.x]!=0||u.x==st)//\u5982\u679c\u53e6\u4e00\u7aef\u641c\u5230\u8fc7\uff0c\u8f93\u51fa\u7b54\u6848\n\t\t\t\t{\n\t\t\t\t\tflag=0;\n\t\t\t\t\t//cout<<mp2[u.x]<<' '<<mp1[u.x]<<endl;\n\t\t\t\t\tif (mp2[u.x]+mp1[u.x]>15)\n\t\t\t\t\t{\n\t\t\t\t\t\tputs(\"-1\");\n\t\t\t\t\t\tbreak;//\u6b21\u6570>15\uff0c\u8f93\u51fa-1\n\t\t\t\t\t}\n\t\t\t\t\tprintf(\"%d\\n\",mp2[u.x]+mp1[u.x]);//\u6b21\u6570<=15\uff0c\u8f93\u51fa\u7b54\u6848\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (mp2[u.x]!=0) continue;\n\t\t\t\tmp2[u.x]=u.steps;\n\t\t\t\tif (mp1[u.x]!=0||u.x==to)\n\t\t\t\t{\n\t\t\t\t\tflag=0;\n\t\t\t\t\t//cout<<mp2[u.x]<<' '<<mp1[u.x]<<endl;\n\t\t\t\t\tif (mp2[u.x]+mp1[u.x]>15)\n\t\t\t\t\t{\n\t\t\t\t\t\tputs(\"-1\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tprintf(\"%d\\n\",mp2[u.x]+mp1[u.x]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}//\u6ce8\u610f\u7279\u5224\u4e00\u6b65\u5230\u4f4d\u7684\u60c5\u51b5\uff0c\u5426\u5219\u4f1a\u8f93\u51fa3\uff08\u5f00\u59cb\u65f6map\u4e0d\u4f1a\u88ab\u66f4\u65b0\uff09\n\t\t\tint posx,posy;\n\t\t\tfor (int i=0;i<25;i++)\n\t\t\t{\n\t\t\t\tif (u.x[i]=='2')\n\t\t\t\t{\n\t\t\t\t\tposx=i/5+1;\n\t\t\t\t\tposy=i%5+1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}//\u627e\u5230\u7a7a\u683c\u5728\u5b57\u7b26\u4e32\u4e2d\u7684\u4f4d\u7f6e\n\t\t\tif (u.steps>=8) continue;//\u6df1\u5ea6\u8fbe\u52308\uff0c\u5f97\u5230\u7b54\u6848\u4e00\u5b9a>15\n\t\t\tu.steps++;\n\t\t\tfor (int i=0;i<8;i++)\n\t\t\t{\n\t\t\t\tint tox=posx+dx[i],toy=posy+dy[i];\n\t\t\t\tif(tox<1||tox>5||toy<1||toy>5) continue;\n\t\t\t\tswap(u.x[(tox-1)*5+toy-1],u.x[(posx-1)*5+posy-1]);\n           //\u79fb\u52a8\u68cb\u5b50\uff0c\u653e\u5165\u961f\u5c3e\n\t\t\t\tq.push(u);\n\t\t\t\tswap(u.x[(tox-1)*5+toy-1],u.x[(posx-1)*5+posy-1]);\n\t\t\t}\n\t\t}\n\t\tif (flag) puts(\"-1\");//\u65e0\u89e3\uff0c\u8f93\u51fa\u7b54\u6848\n\t}\n\treturn 0;\n}\n```\n### \u7ed3\u8bed\uff1a\n1.\u53cc\u5411$bfs$\u7c7b\u4f3c\u6298\u534a\u679a\u4e3e\uff0c\u53ef\u4ee5\u51cf\u5c11\u4e00\u534a\u7684\u641c\u7d22\u6df1\u5ea6\uff0c\u4f46\u5fc5\u987b\u5728\u77e5\u9053\u7ec8\u6b62\u72b6\u6001\u7684\u524d\u63d0\u4e0b\u624d\u53ef\u4f7f\u7528\uff0c\u4f46\u4e0d\u5931\u4e3a$AStar$\u4ee5\u5916\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5\n\n\n2.\u63a8\u8350\u9898\u76ee\uff1a[P1379 \u516b\u6570\u7801\u96be\u9898](https://www.luogu.org/problem/P1379)",
        "postTime": 1571747813,
        "uid": 32879,
        "name": "k1saki",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2324 \u3010[SCOI2005]\u9a91\u58eb\u7cbe\u795e\u3011"
    },
    {
        "content": "\u4e00\u9053\u5f88\u597d\u7684\u7ec3\u4e60\u641c\u7d22\u7684\u9898\u76ee\n\n\u53ef\u4ee5\u7528\u5230A*\u548c\u8fed\u4ee3\u52a0\u6df1\u7684\u641c\u7d22\u7b97\u6cd5\u3002\u53d1\u73b0\u7528\u4e86A_star\u540e\u7684\u4ee3\u7801\uff0c\u8fd0\u884c\u6548\u7387\u786e\u5b9e\u4f18\u5316\u4e86\u5f88\u591a\n\n\u89e3\u91ca\u90fd\u5728\u4ee3\u7801\u4e2d\u3002\n```\n//\u4e00\u9053\u5f88\u597d\u7684A*\u7684\u6a21\u677f\u9898\uff1a\u9a91\u58eb\u7cbe\u795e\n\n//\u6240\u8c13\u7684\u4f30\u4ef7\u51fd\u6570\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u79cd\u6700\u574f\u6216\u6700\u4f18\u7684\u60c5\u51b5\u3002\n//\u4e5f\u5c31\u662f\u5728\u5f53\u524d\u641c\u7d22\u7684\u57fa\u7840\u4e0a\uff0c\u5982\u679c\u5f53\u524d\u7684\u7b54\u6848\u52a0\u4e0a\u6700\u597d\u7684\u60c5\u51b5\n//\u90fd\u8fbe\u4e0d\u5230\u8981\u6c42\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u8df3\u8fc7\u3002\n//\u5176\u5b9e\u6211\u89c9\u5f97\u4f30\u4ef7\u51fd\u6570\u4e5f\u53ef\u4ee5\u770b\u505a\u526a\u679d\u7684\u4e00\u79cd \n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\ninline int read()//\u5feb\u901f\u8bfb\u5165\n{\n\tint x=0;\n\tint f=1;\n\tchar ch=getchar();\n\twhile(ch<'0' || ch>'9')\n\t{\n\t\tif(ch=='-')\n\t\tf=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0' && ch<='9')\n\t{\n\t\tx=x*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn x*f;\n}\nint mp[15][15];\nint flag=0;\nint stx;\nint sty;\nint dx[]={0,1,1,-1,-1,2,2,-2,-2};\nint dy[]={0,2,-2,2,-2,1,-1,1,-1};\nint goal[7][7]={//\u5c06\u6211\u4eec\u7684\u76ee\u6807\u72b6\u6001\u901a\u8fc7\u8fbe\u6807\u7684\u65b9\u5f0f\u6253\u51fa\u6765\u3002 \n    {0,0,0,0,0,0},\n    {0,1,1,1,1,1},\n    {0,0,1,1,1,1},\n    {0,0,0,2,1,1},\n    {0,0,0,0,0,1},\n    {0,0,0,0,0,0}\n}; \nint evaluate()\n{\n\tint cnt=0;\n\tfor(int i=1;i<=5;i++)\n\t{\n\t\tfor(int j=1;j<=5;j++)\n\t\t{\n\t\t\tif(mp[i][j]!=goal[i][j])\n\t\t\tcnt++;\n\t\t}\n\t} \n\treturn cnt;//\u4f30\u4ef7\u51fd\u6570\uff0c\u4e5f\u5c31\u76f8\u5f53\u4e8e\u662f\u6700\u574f\u60c5\u51b5\u4e86\u3002 \n}\nvoid A_star(int dep,int x,int y,int maxdep)\n{\n\tif(dep==maxdep)\n\t{\n\t\tif(!evaluate())\n\t\t{\n\t\t\tflag=1;\t\t\t\n\t\t}\n\t\treturn;\n\t}\n\tfor(int i=1;i<=8;i++)\n\t{\n\t\tint nowx=x+dx[i];\n\t\tint nowy=y+dy[i];\n\t\tif(nowx<=0 || nowy>5 || nowy<=0 || nowx>5)\n\t\tcontinue;//\u5224\u65ad\u8fb9\u754c \n\t\tswap(mp[x][y],mp[nowx][nowy]);//\u8fd9\u91cc\u76f4\u63a5\u7528swap\u4ea4\u6362\u64cd\u4f5c\uff0c\u53c8\u5feb\u53c8\u65b9\u4fbf \n\t\tif(dep+evaluate()<=maxdep)\n\t\t{\n\t\t\tA_star(dep+1,nowx,nowy,maxdep);\n\t\t}\n\t\tswap(mp[x][y],mp[nowx][nowy]);//\u56de\u6eaf\u64cd\u4f5c\u3002\n\t\t//\u8fd9\u6837\u80fd\u4fdd\u8bc1\u6240\u6709\u7684\u72b6\u6001\u90fd\u80fd\u67e5\u8be2\u5230 \n\t}\n}\nint main()\n{\n\tint T;\n\tT=read();\n\twhile(T--)\n\t{\n\t\tflag=0;\n\t\tfor(int i=1;i<=5;i++)\n\t\t{\n\t\t\tfor(int j=1;j<=5;j++)\n\t\t\t{\n\t\t\t\tchar ch;\n\t\t\t\tcin>>ch;\n\t\t\t\tif(ch=='*')\n\t\t\t\t{\n\t\t\t\t\tmp[i][j]=2;\n\t\t\t    \tstx=i;\n\t\t\t    \tsty=j;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\tmp[i][j]=ch-'0';\n\t\t\t}//\u628a\u5b57\u7b26\u8f6c\u6210\u6570\u5b57\uff0c\u540c\u65f6\u8bb0\u5f55\u8d77\u70b9\u7684\u5750\u6807 \n\t\t}\n\t\tif(!evaluate())\n\t\t{\n\t\t\tprintf(\"0\\n\");//\u7279\u5224 \n\t\t\tcontinue;//\u5982\u679c\u4e00\u5f00\u59cb\u5c31\u641c\u7d22\u6b63\u786e\uff0c\u90a3\u4e48\u76f4\u63a5\u8f93\u51fa\u7b54\u6848 \n\t\t}\n\t\tfor(int i=1;i<=15;i++)\n\t\t{//\u8fd9\u91cc\u6709\u53ef\u80fd\u662f\u4e2a\u8fed\u4ee3\u52a0\u6df1\u7684\u8fc7\u7a0b\uff0c\u5c31\u662f\u5728\u5224\u65ad\u5f53\u524d\u6df1\u5ea6\u662f\u5426\u53ef\u884c\n\t\t//\u4ece\u800c\u63d0\u9ad8\u4e86\u4ee3\u7801\u7684\u8fd0\u884c\u901f\u7387 \n\t\t//\u771f\u662f\u4e2a\u597d\u65b9\u6cd5 \n\t\t\tA_star(0,stx,sty,i);//\u6309\u7167\u6700\u5927\u7684\u6df1\u5ea6\u9650\u5236\u5c31\u641c\u7d22\u4e00\u4e0b \n\t\t\tif(flag==1)//\u5982\u679c\u641c\u7d22\u6210\u529f\u5c31\u8f93\u51fa\u7b54\u6848\u3002 \n\t\t\t{\n\t\t\t\tprintf(\"%d\\n\",i);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(flag==0)//\u641c\u7d22\u4e0d\u6210\u529f\u5c31\u8f93\u51fa-1\uff1b \n\t\tprintf(\"-1\\n\");\n\t}\n\treturn 0;\n} \n```\n",
        "postTime": 1571407859,
        "uid": 114514,
        "name": "zzr8178541919",
        "ccfLevel": 7,
        "title": "\u9a91\u58eb\u7cbe\u795e"
    },
    {
        "content": "### IDDFS \u8fed\u4ee3\u52a0\u6df1\u641c\u7d22 !!\n\n\u8c8c\u4f3c\u9898\u89e3\u533a\u6ca1\u4eba\u8fd9\u4e48\u5199\uff1f\u5927\u5bb6\u90fd\u662fA\\*,IDA\\*,\u53cc\u5411BFS\u5565\u7684\uff0c\u597d\u50cf\u8fd8\u6709\u4e00\u4f4d\u5927\u4f6c\u7528\u4e86\u4e8c\u8fdb\u5236\uff1f\uff01\n\norz, orz, orz, orz \u2026\u2026\n\n\u8fdb\u5165\u6b63\u9898\n\n### IDDFS\u662f\u795e\u9a6c\uff1f\n\n\u5728DFS\u7684\u57fa\u7840\u4e0a\u9650\u5236\u4e86\u641c\u7d22\u6811\u7684\u6df1\u5ea6\uff0c\u4fdd\u8bc1\u7b2c\u4e00\u6b21\u641c\u5230\u7684\u5373\u4e3a\u6700\u4f18\u89e3\uff0c\u662fDFS\u4e0eBFS\u7684\u6298\u4e2d,\u4e00\u822c\u7528\u4e8eDFS\u8d85\u65f6\uff0cBFS\u8d85\u7a7a\u95f4\u7684\u60c5\u51b5\u4e0b\uff0c\u4fdd\u8bc1\u641c\u7d22\u6811\u6700\u6d45\n\n\u5927\u6982\u957f\u8fd9\u6837\uff1a\n\n```cpp\nvoid iddfs(int u, int d)\n{\n    if (d < 0) //\u5230\u8fbe\u6307\u5b9a\u6df1\u5ea6\n        return;\n    work(u);\n    for (u, v) in edges //\u679a\u4e3e\u6bcf\u6761\u8fb9\n        dfs(v, d - 1);\n}\nmain():\nfor(int d = 1; d <= MAX_DEPTH; d++)// MAX_DEPTH\u9650\u5236\u641c\u7d22\u6811\u6df1\u5ea6\n    iddfs(root, d);\n```\n\u8fd9\u91cc\u4f1a\u6d89\u53ca\u5230\u91cd\u590d\u641c\u7d22\u7684\u95ee\u9898\uff0c\u4e0d\u8fc7\u8282\u70b9\u6570\u4e00\u822c\u662f\u6307\u6570\u7ea7\u522b\u589e\u52a0\u7684\uff0c\u6240\u4ee5\u91cd\u590d\u641c\u7d22\u5bf9\u65f6\u95f4\u5f71\u54cd\u5e76\u4e0d\u662f\u5f88\u5927\n\n### \u672c\u9898\n\n\u4f7f\u7528IDDFS\u9650\u5236\u6df1\u5ea6\u641c\u7d22\uff0c\u5982\u679c\u5728\u5f53\u524d\u6df1\u5ea6\u65b9\u6848\u53ef\u884c\uff0c\u5c31\u8df3\u51fa\u8f93\u51fa\u7b54\u6848\n\n\u526a\u679d\uff1a\u5f53\u524d\u5c40\u9762\u4e0e\u76ee\u6807\u76f8\u5dee\u68cb\u5b50\u6570\u2265\u5269\u4f59\u6b65+1 \u65f6\u526a\u679d\uff08\u7c7b\u4f3c\u4e8eA\\*\u7684h()\uff09\n\n\u7ed3\u70b9\u5b9a\u4e49\u4e3a`*`\u6240\u5728\u4f4d\u7f6e\u7684\u5750\u6807\uff0c\u4f7f\u7528\u589e\u91cf\u6570\u7ec4\u679a\u4e3e\uff0c\u56e0\u4e3a`\u9a6c\u8df3\u5230\u7a7a\u767d\u4f4d\u7f6e\u4e0a`\u65e0\u5f02\u4e8e`\u7a7a\u767d\u4f4d\u7f6e\u79fb\u5230\u9a6c\u7684\u4f4d\u7f6e\u4e0a`\n\n\u6b63\u786e\u6027\u663e\u7136\uff0c\u5438\u6c27\u540e484ms AC\n\n### Code\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst char goal[10][10] = { // \u76ee\u6807\n    {},\n    { ' ', '1', '1', '1', '1', '1' },\n    { ' ', '0', '1', '1', '1', '1' },\n    { ' ', '0', '0', '*', '1', '1' },\n    { ' ', '0', '0', '0', '0', '1' },\n    { ' ', '0', '0', '0', '0', '0' } \n};\nconst int dx[8] = { 1, 1, 2, 2, -1, -1, -2, -2 }; //\u589e\u91cf\u6570\u7ec4\nconst int dy[8] = { 2, -2, 1, -1, 2, -2, 1, -1 };\nchar now[10][10], bx, by; // now\u4e3a\u5f53\u524d\u5c40\u9762\uff0cbx\uff0cby\u4e3a\u521d\u59cb\u65f6\u7a7a\u767d\u4f4d\u7f6e\u7684\u6a2a\u7eb5\u5750\u6807\nbool ok;\ninline int need() // \u5224\u65ad\u5f53\u524d\u5c40\u9762\u548c\u76ee\u6807\u5c40\u9762\u7684\u5dee\u8ddd \n{\n    int res = 0;\n    for (int i = 1; i <= 5; i++)\n        for (int j = 1; j <= 5; j++)\n            if (now[i][j] != goal[i][j])\n                res++;\n    return res;\n}\ninline void iddfs(int p, int q, int d) // IDDFS\n{\n    if (d <= 0) // \u5230\u8fbe\n\t{\n        if (!need()) // \u627e\u5230\u7b54\u6848\n            ok = true; // \u6807\u8bb0\n        return;\n    }\n    for (int i = 0; i < 8; i++)  // \u589e\u91cf\u679a\u4e3e\n\t{\n        int tx = p + dx[i];\n        int ty = q + dy[i];\n        if (tx >= 1 && tx <= 5 && ty >= 1 && ty <= 5) // \u5728\u5730\u56fe\u4e2d \n\t\t{\n            swap(now[tx][ty], now[p][q]);\n            if (need() <= d + 1) // \u526a\u679d\n                iddfs(tx, ty, d - 1);\n            swap(now[tx][ty], now[p][q]); // \u56de\u6eaf\n        }\n    }\n}\nint main() \n{\n    int T;\n    scanf(\"%d\", &T);\n    while (T--) \n\t{\n        for (int i = 1; i <= 5; i++) \n\t\t{\n            scanf(\"%s\", now[i] + 1);\n            for (int j = 1; j <= 5; j++) \n\t\t\t{\n                if (now[i][j] == '*') // \u627e\u521d\u59cb\u65f6\u7684\u7a7a\u767d\u4f4d\u7f6e\n\t\t\t\t{\n                    bx = i;\n                    by = j;\n                    break;\n                }\n            }\n        }\n        ok = false;\n        for (int maxd = 0; maxd <= 15; maxd++) \n\t\t{\n            iddfs(bx, by, maxd);\n            if (ok) \n\t\t\t{\n                printf(\"%d\\n\", maxd);\n                break;\n            }\n        }\n        if (!ok)\n            puts(\"-1\");\n    }\n    return 0;\n}\n```",
        "postTime": 1557492380,
        "uid": 51971,
        "name": "syksykCCC",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2324 \u3010[SCOI2005]\u9a91\u58eb\u7cbe\u795e\u3011"
    },
    {
        "content": "\u4f7f\u7528\u5806\u4f18\u5316\u7684a_star\u6765\u505a\u8fd9\u9053\u9898\n\n\u6bcf\u6b21\u5c06f=g+h\u6700\u5c0f\u7684\u70b9\u8fdb\u884c\u62d3\u5c55\uff0c\u80fd\u4f18\u5148\u627e\u5230\u53ef\u80fd\u7684\u6700\u77ed\u6b65\u6570Min\uff0c\u7136\u540e\u7528\u66f4\u65b0\u7684Min\u6765\u9650\u5236\u641c\u7d22\u8303\u56f4\uff0c\u80fd\u8282\u7701\u4e00\u5b9a\u65f6\u95f4\n\n\u8fd9\u91ccg\u662f\u5df2\u8d70\u8fc7\u7684\u8def\u7a0b\uff0ch\u662f\u8fd8\u6ca1\u6709\u5f52\u4f4d\u7684\u68cb\u5b50\u6570\u3002\u7531\u4e8e\u6700\u540e\u4e00\u6b65\u80fd\u4e00\u6b21\u5f52\u4f4d\u4e24\u4e2a\u68cb\u5b50\uff08\u68cb\u5b50\u52a0\u7a7a\u683c\uff09\uff0c\u6240\u4ee5\u8981f<=Min+1\n\n\u7ed9\u51fa\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<iostream>\n#include<queue>\n#include<string>\nusing namespace std;\n\nstruct pos\n{\n\tint x, y;\n\tpos operator+(pos& a)\n\t{\n\t\tpos t;\n\t\tt.x = x + a.x;\n\t\tt.y = y + a.y;\n\t\treturn t;\n\t}\n};\nint map[5][5];\nint Min = 16;  //\u6700\u5c11\u6b65\u6570\u521d\u59cb\u5316\u4e3a16\u6b65\npos space;  //\u7a7a\u683c\u7684\u4f4d\u7f6e\nint Count;  //\u4e0d\u7b26\u5408\u4f4d\u7f6e\u7684\u4e2a\u6570\nint des[5][5] =\n{\n\t{1,1,1,1,1},\n\t{0,1,1,1,1},\n\t{0,0,-1,1,1},\n\t{0,0,0,0,1},\n\t{0,0,0,0,0}\n};\n\npos p[8] =\n{\n\t{-2,1},{-2,-1},\n\t{2,1},{2,-1},\n\t{1,-2},{1,2},\n\t{-1,2},{-1,-2}\n};\n\nstruct node\n{\n\tpos p;  //\u8be5\u70b9\u7684\u4f4d\u7f6e\n\tint g;  //\u5df2\u8d70\u7684\u6b65\u6570\n\tint h;  //\u8fd8\u6709\u51e0\u4e2a\u70b9\u6ca1\u6709\u5f52\u4f4d\uff0c\u5373\u9884\u4f30\u8fd8\u8981\u8d70\u7684\u6b65\u6570\n\tbool operator<(node a) const\n\t{\n\t\tif (g + h == a.g + a.h)\n\t\t{\n\t\t\treturn g < a.g;\n\t\t}\n\t\treturn g + h > a.g + a.h;\n\t}\n};\n\nint a_star(int g,int h,pos pp)  //\u5f53\u524d\u6b65\u6570\uff0c\u9884\u4f30\u6b65\u6570\u548c\u7a7a\u683c\u4f4d\u7f6e\n{\n\tif (h == 0)  //\u5168\u90e8\u5f52\u4f4d\n\t{\n\t\treturn Min = g;\n\t}\n\tint flag = -1;  //-1\u8868\u793a\u62d3\u5c55\u5931\u8d25\n\tpriority_queue<node> q;\n\tnode n, t;\n\tn.g = g;\n\tn.h = h;\n\tn.p = pp;\n\tfor (int i = 0; i < 8; i++)  //\u516b\u4e2a\u65b9\u5411\u62d3\u5c55\n\t{\n\t\tt.p = n.p + p[i];\n\t\tif (t.p.x < 0 || t.p.x>4 || t.p.y < 0 || t.p.y>4)  //\u8d85\u51fa\u5730\u56fe\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tint add = 0;  //\u79fb\u52a8\u540e\u4e0d\u5f52\u4f4d\u68cb\u5b50\u7684\u53d8\u5316\u6570\n\t\tif (map[n.p.x][n.p.y] == des[n.p.x][n.p.y])  //\u7a7a\u683c\u70b9\u539f\u6765\u662f\u4e0d\u662f\u5f52\u4f4d\u4e86\n\t\t{\n\t\t\tadd++;\n\t\t}\n\t\tif (map[t.p.x][t.p.y] == des[t.p.x][t.p.y])  //\u79fb\u52a8\u5230\u7684\u70b9\u539f\u6765\u662f\u4e0d\u662f\u5f52\u4f4d\u4e86\n\t\t{\n\t\t\tadd++;\n\t\t}\n\t\tif (map[n.p.x][n.p.y] == des[t.p.x][t.p.y])  //\u7a7a\u683c\u70b9\u73b0\u5728\u662f\u4e0d\u662f\u5f52\u4f4d\u4e86\n\t\t{\n\t\t\tadd--;\n\t\t}\n\t\tif (map[t.p.x][t.p.y] == des[n.p.x][n.p.y])  //\u79fb\u52a8\u5230\u7684\u70b9\u73b0\u5728\u662f\u4e0d\u662f\u5f52\u4f4d\u4e86\n\t\t{\n\t\t\tadd--;\n\t\t}\n\t\tif (n.g + 1 + n.h + add >= Min + 1)  \n\t\t\t//\u9884\u4f30\u8d85\u51fa\u6700\u77ed\u6b65\u6570\uff0c\u662f\u91cd\u8981\u7684\u526a\u679d\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tt.g = n.g + 1;\n\t\tt.h = n.h + add;\n\t\tq.push(t);  //\u6ee1\u8db3\u6761\u4ef6\u7684\u79fb\u52a8\u5165\u5806\n\t}\n\twhile (!q.empty())  //\u5806\u4e0d\u7a7a\n\t{\n\t\tn = q.top(), q.pop();  //\u53d6\u51fa\u5934\u7ed3\u70b9\u8fdb\u884c\u62d3\u5c55\n\t\tif (n.g + n.h <= Min && n.g < Min)  //\u5df2\u8d70\u8fc7\u7684\u6b65\u6570\u6bd4\u6700\u5c11\u6b65\u6570\u5c11\n\t\t{\n\t\t\tswap(map[pp.x][pp.y], map[n.p.x][n.p.y]);  //\u6539\u53d8\u5730\u56fe\n\t\t\tif (a_star(n.g, n.h, n.p) != -1)  //\u62d3\u5c55\u6210\u529f\n\t\t\t{\n\t\t\t\tflag = 0;\n\t\t\t}\n\t\t\tswap(map[n.p.x][n.p.y], map[pp.x][pp.y]);  //\u6539\u56de\u5730\u56fe\n\t\t}\n\t}\n\treturn flag;\n}\n\nint main()\n{\n\tint T;\n\tcin >> T;\n\tstring s;\n\twhile (T > 0)\n\t{\n\t\tCount = 0;\n\t\tfor (int i = 0; i < 5; i++)\n\t\t{\n\t\t\tcin >> s;\n\t\t\tfor (int j = 0; j < 5; j++)\n\t\t\t{\n\t\t\t\tif (s[j] == '*')\n\t\t\t\t{\n\t\t\t\t\tmap[i][j] = -1;\n\t\t\t\t\tspace.x = i, space.y = j;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tmap[i][j] = s[j] - '0';\n\t\t\t\t}\n\t\t\t\tif (map[i][j] != des[i][j])  //\u627e\u5230\u4e0d\u5339\u914d\u68cb\u5b50\u7684\u4e2a\u6570\n\t\t\t\t{\n\t\t\t\t\tCount++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (Count == 0)\n\t\t{\n\t\t\tcout << 0 << endl;\n\t\t}\n\t\telse if (Count > 16)\n\t\t{\n\t\t\tcout << -1 << endl;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint t = a_star(0, Count, space);\n\t\t\tif (t == -1)\n\t\t\t{\n\t\t\t\tcout << -1 << endl;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcout << Min << endl;\n\t\t\t}\n\t\t\tMin = 16;  //\u91cd\u7f6e\u6700\u77ed\u6b65\u6570\n\t\t}\n\t\tT--;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1540373320,
        "uid": 103829,
        "name": "MrBlack",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2324 \u3010[SCOI2005]\u9a91\u58eb\u7cbe\u795e\u3011"
    },
    {
        "content": "\u4e00\u9053A\\*\u7b97\u6cd5\u9898\n\n\u5927\u4f53\u5c31\u4e0d\u591a\u8bf4\u4e86\n\n\u4e0d\u8fc7\uff0c\u6211\u8fd9\u91cc\u6709\u4e00\u4e9b\u4f18\u5316\n\n\u6bd4\u5982\u6700\u5f00\u59cb\u7684\u76ee\u6807\u6570\u7ec4\n\n```cpp\nvoid clears()\n{\n    int i,j;\n    for (i=1; i<=5; ++i)\n    {\n        for (j=1; j<=5; ++j)\n        {\n            if ((j-i>=0 && i<=3) || (j-i>0 && i>3))\n              getr[i][j]=1;\n             else \n              getr[i][j]=0; \n            //printf(\"%d\",getr[i][j]);   \n        }\n        //cout<<endl;\n    }\n    getr[3][3]=2;\n}\n```\n\u6709\u4e86\u8fd9\u6837\u7684\u8fc7\u7a0b\uff0c\u5c31\u4e0d\u7528\u518d\u6253\u8868\u4e86\n\u518d\u8005\uff0c\u5982\u679c\u6bcf\u6b21\u6362map\u6570\u7ec4\uff0c\u53ef\u4ee5\u5c11\u5f00\u4e00\u4e2a\u6570\u7ec4\uff0c\u8282\u7701\u7a7a\u95f4\n\n>\u4e0a\u4ee3\u7801\uff0c\u601d\u8def\u5176\u4e2d\uff1a\n    \n                 \n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\nusing namespace std;\nint map[6][6];\nint getr[6][6]; \u76ee\u6807\nint dx[8]={1,2,2,1,-1,-2,-2,-1};\nint dy[8]={-2,-1,1,2,2,1,-1,-2};\nint T,ans;\nint lit=15;\nbool bz;  \u4f18\u5316\u7528\u7684\nvoid clears()  \u5f00\u59cb\u7684\n{\n    int i,j;\n    for (i=1; i<=5; ++i)\n    {\n        for (j=1; j<=5; ++j)\n        {\n            if ((j-i>=0 && i<=3) || (j-i>0 && i>3))\n              getr[i][j]=1;\n             else \n              getr[i][j]=0; \n            //printf(\"%d\",getr[i][j]);   \n        }\n        //cout<<endl;\n    }\n    getr[3][3]=2;\n}\nint Aj() \u542f\u53d1\u5173\u952e\n{\n    int cnt=0;\n    int i,j;\n    for (i=1; i<=5; ++i)\n    {\n        for (j=1; j<=5; ++j)\n        {\n            if (getr[i][j]!=map[i][j])\n            {\n                cnt++;\n            }\n        }\n    }\n    return cnt; //\u8ba1\u7b97\u6709\u591a\u5c11\u4e2a\u4e0e\u76ee\u6807\u4e0d\u540c\u7684\u70b9\uff0c\u6c34A* \u6ca1\u6709\u8ddd\u79bb\u597d\uff0cbut \n}\nvoid dfs(int q, int xn, int yn, int lim)\n{\n    if (bz) return; //bz!=0\n    int t=Aj(); //A* judge\n    //cout<<t;\n    if (q==lim)\n    {\n        if (t==0) //\u5b8c\u5168\u91cd\u5408\n        {\n            ans=lim;\n            bz=true;\n            return;\n        } \n    }\n    if (q-1+t>lim) return; //cut off\n    int i;\n    for (i=0; i<8; ++i)\n    {\n        int a,b;\n        a=xn+dx[i];\n        b=yn+dy[i];\n        if (a>0 && b>0 && a<6 && b<6)\n        {\n            int right; \u770b\u540d\u5b57\n            right=map[a][b]; map[a][b]=map[xn][yn]; map[xn][yn]=right; //change\n            dfs(q+1,a,b,lim);\n            right=map[a][b]; map[a][b]=map[xn][yn]; map[xn][yn]=right; \n        }\n    }\n}\nvoid slove()\n{\n    memset(map,-1,sizeof(map));\n    int i,j;\n    int x,y;\n    char ch;\n    for (i=1; i<=5; ++i)\n    {\n        for (j=1; j<=5; ++j)\n        {\n            //scanf(\"%c\",&ch);\n            cin>>ch;\n            if (ch!='*')\n                map[i][j]=ch-'0';\n              else \n              {\n                  x=i;y=j; //record\n                map[i][j]=2; \n              }\n            //cout<<map[i][j];    \n        }\n    }\n    if (!Aj()) \n    {\n        printf(\"0\\n\"); return;  \u5982\u679c\u91cd\u5408\uff0c\u76f4\u63a5\u8f93\u51fa\n    }\n    int k;\n    //cout<<\"dfs\";\n    for (k=1; k<=lit; ++k)\n    {\n        bz=false; ans=18; //if ans>15 !\n        //for (i=1; i<=5; ++i)\n        dfs(0,x,y,k);\n        if (ans==k) break; //find out answer\n    }\n    if (ans<=lit)  //\u5f88\u91cd\u8981\uff0c\u907f\u514d\u65e0\u89e3\uff0c\u6211\u5c31\u9519\u8fc7\u4e00\u6b21\u4e86\u554a\uff01 \n        printf(\"%d\\n\",ans);\n      else \n        printf(\"-1\\n\"); \n}\nint main()\n{\n    int i;\n    clears();\n    scanf(\"%d\",&T);\n    for (i=1; i<=T; ++i)\n    {\n        slove();\n    }\n}\n```",
        "postTime": 1492225990,
        "uid": 22841,
        "name": "Right",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2324 \u3010[SCOI2005]\u9a91\u58eb\u7cbe\u795e\u3011"
    },
    {
        "content": "\u5927\u5bb6\u90fd\u662f\u5199\u7684\u8fed\u4ee3\u52a0\u6df1\u7684A\\*\u7b97\u6cd5\uff0c\u597d\u5389\u5bb3\u554a\u3002\u3002\u3002\n\n\u5e76\u6ca1\u6709\u60f3\u5230\uff21\\*, \u56e0\u4e3a\u53ea\u6709\uff11\uff15\u6b65\uff0c\u53c8\u6709\u76ee\u6807\u72b6\u6001\u548c\u521d\u59cb\u72b6\u6001\uff0c\u6240\u4ee5\u60f3\u5230\u53cc\u5411\uff22\uff26\uff33\uff0c\n\n\u6bd4\u5404\u4f4d\u5927\u795e\u7684\uff21\\*\u5e94\u8be5\u6162\u4e00\u4e9b\uff0c\u4f46\u662f\u53ef\u4ee5\u8fc7\u3002\n\n\u4e0b\u9762\u662f\u53cc\u5411\uff22\uff26\uff33\u7684\u4ee3\u7801\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n        \n            \n\n\n\n\n\n        \n\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<iostream>\n#include<algorithm>\n#include<map>\n#include<queue>\nusing namespace std;\n#define LL long long\n#define pb push_back\n#define Set(a, v) memset(a, v, sizeof(a))\n#define For(i, a, b) for(int i = (a); i <= (int)(b); i++)\n#define Forr(i, a, b) for(int i = (a); i >= (int)(b); i--)\n#define MAXN 6\n#define MAXZT (2000000+5)\n#define INF 0x3f3f3f3f\nstruct node{\n    char m[MAXN][MAXN];\n    node(int op = 0){\n        Set(m, 0);\n        if(!op) return;\n        int cnt = 5;\n        For(i, 1, 5){\n            For(j, 0, cnt-1) m[i][5-j] = 1;\n            cnt--;\n            if(cnt == 3) cnt--;\n        }\n        m[3][3] = -1;\n    }\n    bool operator <(const node &rhs)const{\n        For(i, 1, 5) For(j, 1, 5)\n            if(m[i][j] != rhs.m[i][j]) return m[i][j] < rhs.m[i][j];\n        return false;\n    }\n};\nint mn;\nmap<node, int> ms;\nchar r[MAXN];\nbool fin;\nint vis[2][MAXZT], fx[8][2] = {{-2, -1}, {-1, -2}, {1, -2}, {2, -1}, {2, 1}, {1, 2}, {-1, 2}, {-2, 1}};\nnode end(0);\nvoid init(){\n    fin = false;\n    Set(vis, 0);\n    ms.clear(); mn = 0;\n}\nint ID(node tmp){\n    if(!ms.count(tmp)) ms[tmp] = ++mn;\n    return ms[tmp];\n}\nbool check(int x, int y){\n    if(x <= 0 || y <= 0 || x > 5 || y > 5) return false;\n    return true;\n}\ninline void bfs(node st, bool g){\n    queue<node> q;\n    queue<int> D;\n    q.push(st); D.push(0);\n    vis[g][ID(st)] = true;\n    int ans = INF;\n    while(!q.empty()){\n        node now = q.front(); q.pop();\n        int num = ID(now), dep = D.front(); D.pop();\n        if(!g && num == ID(end)){\n            fin = true; printf(\"%d\\n\", dep);\n            return;\n        }\n        if(g && vis[0][num]) ans = min(ans, vis[0][num]+dep);\n        int ex, ey, nex, ney, nnum;\n        For(i, 1, 5) For(j, 1, 5)\n            if(now.m[i][j] == -1){ex = i; ey = j; break;}\n        node next = now;\n        For(i, 0, 7){\n            nex = ex+fx[i][0], ney = ey+fx[i][1];\n            if(!check(nex, ney)) continue;\n            swap(next.m[nex][ney], next.m[ex][ey]);\n            nnum = ID(next);\n            if(vis[g][nnum]){\n                swap(next.m[nex][ney], next.m[ex][ey]);\n                continue;\n            }\n            vis[g][nnum] = g? true: dep+1;\n            if(dep < 8){\n                q.push(next); D.push(dep+1);\n            }\n            swap(next.m[nex][ney], next.m[ex][ey]);\n        }\n    }\n    if(!g) return;\n    if(ans > 15) printf(\"-1\\n\");\n    else printf(\"%d\\n\", ans);\n}\nint main(){\n    int T;\n    scanf(\"%d\", &T);\n    while(T--){\n        init();\n        node begin(1);\n        For(i, 1, 5){\n            scanf(\"%s\", r+1);\n            For(j, 1, 5)\n                if(r[j] != '*') end.m[i][j] = r[j]-'0';\n                else end.m[i][j] = -1;\n        }\n        fin = false;\n        bfs(begin, 0);\n        if(fin) continue;\n        bfs(end, 1);\n    }\n    return 0;\n}\n```",
        "postTime": 1480823390,
        "uid": 8925,
        "name": "miaowey",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P2324 \u3010[SCOI2005]\u9a91\u58eb\u7cbe\u795e\u3011"
    },
    {
        "content": "A\\*\u8fed\u4ee3\u52a0\u6df1\u641c\u7d22\u5165\u95e8\u9898\n\n\u679a\u4e3e\u6b65\u6570\u8fdb\u884c\u6df1\u641c\uff0c\u6bcf\u6b21\u6839\u636e\u5df2\u8d70\u6b65\u6570\u548c\u5f53\u524d\u68cb\u76d8\u4e0e\u6807\u51c6\u68cb\u76d8\u5dee\u5f02\u68cb\u5b50\u4e2a\u6570\u6765\u8fdb\u884c\u526a\u679d\uff1aif(\u5df2\u8d70\u6b65\u6570+\u5dee\u5f02\u4e2a\u6570>\u76ee\u6807\u6b65\u6570\uff09return;\n\n\u65f6\u95f4\u590d\u6742\u5ea6O\uff082^\u6b65\u6570\\*T\uff09\uff1b\n\n\u00b7\u00b7\u00b7\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cmath>\nusing namespace std;\nconst int sttd[5][5]={{2,2,2,2,2},{1,2,2,2,2},{1,1,0,2,2},{1,1,1,1,2},{1,1,1,1,1}};\nconst int dx[]={-2,-1,1,2,2,1,-1,-2};\nconst int dy[]={1,2,2,1,-1,-2,-2,-1};\nint T,ans=16,mx;\nint mp[7][7],mp2[7][7];\nbool b=true;\ninline int pd(){//\u627e\u51fa\u5dee\u5f02\u4e2a\u6570\n    int cnt=0;\n    for(int i=1;i<=5;i++){\n        for(int j=1;j<=5;j++){\n            if(mp[i][j]!=sttd[i-1][j-1])cnt++;\n        }\n    }\n    return cnt;\n}\ninline bool can(int x,int y){//\u5224\u65ad\u79fb\u52a8\u53ef\u884c\u6027\n    if(x>=1&&x<=5&&y>=1&&y<=5)return true;\n    return false;\n}\nvoid dfs(int x,int cx,int cy){//\u8fed\u4ee3\u52a0\u6df1\u641c\u7d22\n    if(x>mx)return;\n    int bs=pd();\n    if(bs==0){\n        ans=min(ans,x);\n        b=false;\n        return;\n    };\n    if(!b)return;\n    if(bs+x-1>mx)return;\n    int a1,b1;\n    for(int i=0;i<=7;i++){\n        a1=cx+dx[i];\n        b1=cy+dy[i];\n        if(can(a1,b1)){\n            swap(mp[a1][b1],mp[cx][cy]);\n            dfs(x+1,a1,b1);\n            swap(mp[a1][b1],mp[cx][cy]);\n        }\n    }\n}\nint main(){\n    scanf(\"%d\",&T);\n    while(T--){\n        memset(mp,-1,sizeof(mp));\n        b=true;\n        ans=16;        \n        for(int i=1;i<=5;i++){\n            char ch[10];scanf(\"%s\",ch);\n            for(int j=1;j<=5;j++){\n                if(ch[j-1]=='*')mp2[i][j]=0;\n                else mp2[i][j]=(ch[j-1]-'0'+1);\n            }\n        }\n        int a,b;\n        for(int i=1;i<=5;i++){\n            for(int j=1;j<=5;j++){\n                if(mp2[i][j]==0){\n                    a=i;\n                    b=j;\n                    break;\n                }\n            }\n        }\n        for(mx=1;mx<=15;mx++){\n            for(int i=1;i<=5;i++){\n                for(int j=1;j<=5;j++){\n                    mp[i][j]=mp2[i][j];\n                }\n            }\n            dfs(0,a,b);\n            if(ans==mx)break;\n            if(!b)break;\n        }\n        if(ans==16){\n            printf(\"-1\\n\");\n        }else printf(\"%d\\n\",ans);    \n    }\n}\n\u00b7\u00b7\u00b7\n```",
        "postTime": 1473126491,
        "uid": 19241,
        "name": "infinityedge",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2324 \u3010[SCOI2005]\u9a91\u58eb\u7cbe\u795e\u3011"
    },
    {
        "content": "\n\u8fd9\u9898\u662f\u4e00\u9053\u6bd4\u8f83\u597d\u7684$A*$\u7684\u6a21\u677f\u9898\uff0c$A*$\u5bf9dfs\u7684\u4f18\u5316\u4e00\u822c\u53eb$IDA*$\u3002\n\n\u9996\u5148\uff0c$A*$\u6709\u4e00\u4e2a\u5b9a\u4e49\u5f0f\u53eb\u505a\uff1a\n\n$f(n)=g(n)+h(n)$\n\n$f(n)$\u5373\u4e3a\u4e00\u70b9\u7684\u4f30\u4ef7\u51fd\u6570\uff0c$g(n)$\u662f\u8fd9\u4e00\u70b9\u5b9e\u9645\u6240\u7528\u7684\u6b65\u6570\uff08\u4ef7\u503c\uff09\uff0c$h(n)$\u662f\u5bf9\u672a\u6765\u7684\u6240\u9700\u6b65\u6570\uff08\u4ee3\u4ef7\uff09\u7684\u5b8c\u7f8e\u9884\u6d4b\uff08\u63a5\u8fd1\u5b8c\u7f8e\uff09\u3002\n\n\u901a\u8fc7\u8fd9\u4e2a\u5b9a\u4e49\u5f0f\uff0c\u53ea\u8981\u6709h(n)\uff0c\u6bcf\u6b21\u90fd\u53ef\u4ee5\u7b97\u51fa\u4e00\u4e2a\u70b9\u7684\u4f30\u4ef7\uff0c$A*$\u7b97\u6cd5\u5c31\u662f\u901a\u8fc7\u9650\u5236\u4f30\u4ef7\uff0c\u4f7f\u5f97\u5728\u641c\u7d22\u7684\u65f6\u5019\u4e0d\u8981\u5728\u65e0\u610f\u4e49\u7684\u9053\u8def\u4e0a\u6d6a\u8d39\u65f6\u95f4\u3002\u5373\uff0c\u6bcf\u6b21\u9650\u5236\u6bcf\u4e2a\u70b9\u7684\u4f30\u4ef7$maxdep$\uff0c\u4e00\u65e6\u4f30\u4ef7\u8d85\u8fc7\uff0c\u5c31\u505c\u6b62\u641c\u7d22\u3002\n\n\u6839\u636e\u5b9a\u4e49\u5f0f\uff0c$h(n)$\u4e00\u5b9a\u8981$<=$\u5b9e\u9645\u7684\u6240\u9700\u6b65\u6570\u3002\n\n![\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0](https://img-blog.csdnimg.cn/20191228090428540.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MDE5NDY4,size_16,color_FFFFFF,t_70)\n\u50cf\u8fd9\u5f20\u56fe\uff0c\u5982\u679c$h(A)$\u4f30\u5927\u4e86\u7684\u8bdd\uff0c$f(A)$\u4e5f\u4f1a\u76f8\u5e94\u53d8\u5927\uff0c\u8fd9\u6837$f(A)$\u6709\u53ef\u80fd\u4f1a\u88abmaxdep\u7ed9\u53bb\u6389\uff0c\u4ece\u800c\u627e\u4e0d\u5230\u6b63\u786e\u7b54\u6848\u3002\n\n\u6240\u4ee5\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u7b54\u6848\u7684\u6b63\u786e\u6027\uff0c$h(A)$\u4e00\u5b9a\u8981\u5728$<=$\u5b9e\u9645\u7684\u6240\u9700\u6b65\u6570\u7684\u524d\u63d0\u4e0b\u5c3d\u91cf\u7684\u5927\uff0c\u4e5f\u5c31\u662f\u5c3d\u91cf\u4f30\u5f97\u51c6\u3002\n\n\u90a3\u56de\u5230\u8fd9\u9898\uff0c\u9898\u76ee\u8981\u6c42\u572815\u6b65\u4ee5\u5185\u5b8c\u6210\u624d\u8f93\u51fa\u6b65\u6570\uff0c\u5426\u5219-1\uff0c\u6240\u4ee5\u53ef\u4ee5\u5c06maxdep\u4ece0\u523015\u679a\u4e3e\uff0c\u4e00\u65e6\u6210\u529f\u627e\u5230\uff0c\u90a3\u5c31\u662f\u7b54\u6848\uff08\u6700\u5c11\u6b65\u6570\uff09\u3002\n\n\u800c\u6700\u4f18\u7684\u5c31\u662f\u6bcf\u4e00\u6b21\u90fd\u5c06\u4e0d\u5728\u76f8\u5e94\u4f4d\u7f6e\u4e0a\u7684\u68cb\u5b50\u79fb\u5230\u76f8\u5e94\u7684\u4f4d\u7f6e\u4e0a\uff0c\u6240\u4ee5$h(A)$\u53ef\u4ee5\u662f\u4e0d\u5339\u914d\u7684\u68cb\u5b50\u6570\uff0c\u56e0\u4e3a\u6bcf\u6b21\u6700\u591a\u8fd8\u539f\u4e00\u4e2a\uff0c\u6240\u4ee5$h(A)$\u4e00\u5b9a\u662f$<=$\u5b9e\u9645\u7684\u6240\u9700\u6b65\u6570\uff0c\u6b63\u786e\u6027\u5f97\u5230\u4fdd\u8bc1\u3002\n\n$h(A)$\uff1a\n\n```cpp\nint value()\n{\n\tint ans=0;\n\tfor(int i=0;i<5;i++)\n\t{\n\t\tfor(int j=0;j<5;j++)\n\t\t{\n\t\t\tif(standard[i][j]!=tu[i][j])\n\t\t\t{\n\t\t\t\tans++;\n\t\t\t}\n\t\t}\n\t}\n\treturn ans;\n}\n```\n\n\u7136\u540e\u5c31\u662f\u65f6\u95f4\u7684\u526a\u679d\uff0c\u9898\u76ee\u8981\u7684\u662f\u6700\u5c11\u6b65\u6570\uff0c\u6240\u4ee5\u80af\u5b9a\u4e0d\u80fd\u505a\u56de\u5934\u8def\uff0c\u8fd8\u6709\u5c31\u662f\u6ca1\u6709\u627e\u5230\u5b8c\u6210\u7684\u8def\u5f84\uff0c\u6ee1\u8db3\u8fd9\u4e24\u70b9\uff0c\u52a0\u4e0amaxdep\u7684\u9650\u5236\uff0c\u624d\u80fd\u7ee7\u7eed\u5f80\u4e0b\u641c\u3002\n\n\u5176\u4ed6\u5c31\u662f\u4e00\u4e2a\u66b4\u529b\u641c\u7d22\u4e86\uff0c\u6ca1\u4ec0\u4e48\u597d\u8bb2\u7684\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint standard[5][5]={{1,1,1,1,1},{0,1,1,1,1},{0,0,-1,1,1},{0,0,0,0,1},{0,0,0,0,0}},tu[5][5],f[8][2]={{-2,-1},{-2,1},{1,2},{1,-2},{-1,2},{-1,-2},{2,-1},{2,1}},is,t,xx,yy;\nchar ch;\nint value()//\u4f30\u4ef7\u51fd\u6570\n{\n\tint ans=0;\n\tfor(int i=0;i<5;i++)\n\t{\n\t\tfor(int j=0;j<5;j++)\n\t\t{\n\t\t\tif(standard[i][j]!=tu[i][j])\n\t\t\t{\n\t\t\t\tans++;\n\t\t\t}\n\t\t}\n\t}\n\treturn ans;\n}\nvoid dfs(int dep,int x,int y,int maxdep,int lastway)//\u76f4\u63a5\u641c\n{\n\tif(dep==maxdep)\n\t{\n\t\tif(!value())\n\t\t{\n\t\t\tis=1;\n\t\t}\n\t\treturn;\n\t}\n\tfor(int i=0;i<8;i++)\n\t{\n\t\tint xx=x+f[i][0];\n\t\tint yy=y+f[i][1];\n\t\tif(xx<0||xx>4||yy<0||yy>4||7-i==lastway)//\u4e0d\u8d70\u51fa\u683c\uff0c\u4e0d\u8d70\u56de\u5934\u8def\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tswap(tu[x][y],tu[xx][yy]);\n\t\tif(dep+value()<=maxdep&&!is)//\u4f30\u4ef7\u51fd\u6570\u7684\u9650\u5236\n\t\t{\n\t\t\tdfs(dep+1,xx,yy,maxdep,i);\n\t\t}\n\t\tswap(tu[x][y],tu[xx][yy]);\n\t}\n}\nint main()\n{\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tis=0;\n\t\tfor(int i=0;i<5;i++)\n\t\t{\n\t\t\tfor(int j=0;j<5;j++)\n\t\t\t{\n\t\t\t\tcin>>ch;\n\t\t\t\tif(ch=='*')\n\t\t\t\t{\n\t\t\t\t\ttu[i][j]=-1;\n\t\t\t\t\txx=i;\n\t\t\t\t\tyy=j;\n\t\t\t\t}else{\n\t\t\t\t\ttu[i][j]=ch-'0';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(!value())\n\t\t{\n\t\t\tputs(\"0\");\n\t\t\treturn 0;\n\t\t}\n\t\tfor(int i=1;i<=15;i++)//A*\n\t\t{\n\t\t\tdfs(0,xx,yy,i,9);\n\t\t\tif(is)\n\t\t\t{\n\t\t\t\tprintf(\"%d\\n\",i);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!is)//\u6ca1\u6709\n\t\t{\n\t\t\tputs(\"-1\");\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\n\n\n",
        "postTime": 1577497219,
        "uid": 103334,
        "name": "Honor\u8a89",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2324 \u3010[SCOI2005]\u9a91\u58eb\u7cbe\u795e\u3011"
    },
    {
        "content": "\u6211\u4eec\u5148\u8003\u8651\u6700\u7eaf\u7cb9\u7684\u66b4\u529b\uff0c\u4e5f\u5c31\u662f\u66b4\u529b\u679a\u4e3e\u6bcf\u6b21\u7a7a\u683c\u8c03\u5230\u54ea\u91cc\uff0c\u5e76\u7ee7\u7eed\u9012\u5f52\u6c42\u89e3\u3002\n\n\u7136\u540e\u53d1\u73b0 $O(8^{15}\\times5\\times5)$ \u7684\u590d\u6742\u5ea6\u9650\u5236\u4e86\u6211\u4eec\u7684\u60f3\u8c61\u3002~~\u540c\u5b66\u5199\u4e86\u4e00\u53d1\u597d\u50cf10\u5206~~\n\n\u7136\u540e\u65e2\u7136\u627e\u4e0d\u5230\u5176\u5b83\u7684\u592a\u597d\u7684\u65b0\u7b97\u6cd5 ~~\u6211\u6ca1\u8bf4\u526a\u679d\u4e0d\u80fd\u8fc7~~\uff0c\u6211\u4eec\u5c31\u8003\u8651\u5982\u4f55\u4f18\u5316\u66b4\u529b\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u8003\u8651\u7528$IDA^*$\uff08\u542f\u53d1\u5f0f\u8fed\u4ee3\u52a0\u6df1\uff09\u6765\u4f18\u5316\u8fd9\u4e2a\u66b4\u529b\u3002\n\n\u5b83\u5e94\u8be5\u662f $A^*$ \u7684\u8fdb\u9636\u7248\u3002\n\n1. \u6211\u4eec\u5bf9\u4e8e\u73b0\u5728\u9012\u5f52\u5230\u7684\u68cb\u76d8\u7684\u67d0\u79cd\u72b6\u6001\uff0c\u8ba1\u7b97\u5b83\u7684\u4f30\u4ef7\u51fd\u6570 $value()$\uff0c\u4e5f\u5c31\u662f**\u4ece\u5f53\u524d\u68cb\u76d8\u72b6\u6001\u53d8\u4e3a\u76ee\u6807\u68cb\u76d8\u72b6\u6001\u7684\u4f30\u8ba1\u6b65\u6570**\u3002\n\n\t\u5f53\u7136\uff0c\u5982\u679c\u4f60\u8981\u4fdd\u8bc1\u627e\u5230\u6700\u4f18\u89e3\uff0c**\u8fd9\u4e2a $value()$ \u5fc5\u987b\u5c0f\u4e8e\u7b49\u4e8e\u771f\u5b9e\u7684\u6b65\u6570**\uff0c\u4e5f\u5c31\u662f\u8bf4\uff1a\u5982\u679c\u4f60\u7684\u4f30\u4ef7\u51fd\u6570\u8fd4\u56de\u503c\u4e3a$val$\uff0c\u90a3\u4e48\u4f60\u8981\u4fdd\u8bc1\u4ece\u5f53\u524d\u68cb\u76d8\u72b6\u6001\u53d8\u4e3a\u76ee\u6807\u68cb\u76d8\u72b6\u6001\u7684\u771f\u5b9e\u6700\u4f18\u6b65\u6570\u81f3\u5c11\u4e3a $val$\u3002\n\n\t\u800c\u4e14\uff0c\u4f60**\u8fd9\u4e2a\u4f30\u4ef7\u51fd\u6570 $value()$ \u5728\u4e0a\u9762\u7684\u6761\u4ef6\u4e0b\uff0c\u8fd8\u8981\u5c3d\u91cf\u5927**\uff0c\u56e0\u4e3a\u5982\u679c\u4f30\u4ef7\u51fd\u6570\u592a\u5c0f\uff0c\u90a3\u5c31\u548c\u6734\u7d20\u7684\u66b4\u529b\u5dee\u4e0d\u591a\u3002\n\n\t\u6240\u4ee5\uff0c\u5bf9\u4e8e\u672c\u9898\u7684\u4f30\u4ef7\u51fd\u6570 $value()$\uff0c\u6211\u4eec\u4f30\u8ba1\u6700\u4f18\u89e3\u662f\u4ec0\u4e48\u3002\u90a3\u4e48\u663e\u7136\uff0c\u5982\u679c\u5f53\u524d\u68cb\u76d8\u73b0\u5728\u6709 $x$ \u4e2a\u767d\u68cb\u4e0d\u5728\u767d\u68cb\u7684\u4f4d\u7f6e\u4e0a\uff0c\u6709 $y$ \u4e2a\u9ed1\u68cb\u4e0d\u5728\u9ed1\u68cb\u7684\u4f4d\u7f6e\u4e0a\uff0c\u7531\u4e8e\u6211\u4eec\u6bcf\u6b21\u64cd\u4f5c\u662f\u4ea4\u6362\u7a7a\u683c\u548c\u67d0\u4e2a\u68cb\u5b50\uff0c\u6240\u4ee5\u81f3\u5c11\u9700\u8981 $x+y$ \u6b65\u624d\u80fd\u53d8\u4e3a\u76ee\u6807\u68cb\u76d8\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u4f30\u4ef7\u51fd\u6570\u7684\u8fd4\u56de\u503c\u8bbe\u4e3a $x+y$ \u3002\u4f46\u663e\u7136\uff0c\u7531\u4e8e\u7a7a\u683c\u80fd\u8df3\u8dc3\u7684\u4f4d\u7f6e\u6709\u9650\u5236\uff0c\u771f\u5b9e\u7684\u6700\u4f18\u89e3\u53ef\u80fd\u4f1a\u5927\u4e8e\u6211\u4eec\u4f30\u8ba1\u7684\u8fd9\u4e2a\u6700\u4f18\u89e3\u3002\n\n\t\u4e0d\u77e5\u9053\u6709\u6ca1\u6709\u66f4\u597d\u7684\u4f30\u4ef7\u51fd\u6570\uff0c~~\u4f46\u662f\u8fd9\u79cd\u65b9\u6cd5\u80fd\u8fc7\u6211\u5c31\u61d2\u5f97\u60f3\u4e86~~\n\n2. \u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5bf9\u539f\u6765\u7684\u66b4\u529b\u9650\u5236\u6700\u5927\u9012\u5f52\u6b65\u6570 $maxdep$ \uff0c\u90a3\u4e48**\u5f53\u4f60\u7684\u6b65\u6570\u8d85\u8fc7\u4e86 $maxdep$ \u6216\u8005\u4f60\u5f53\u524d\u7684\u6b65\u6570\u52a0\u4e0a\u4f30\u4ef7\u51fd\u6570 $value()$ \u7684\u4f30\u4ef7\u6b65\u6570\u8d85\u8fc7\u4e86 $maxdep$\uff0c\u6211\u4eec\u5c31$return$\uff08\u56e0\u4e3a\u4f30\u4ef7\u6b65\u6570\u80af\u5b9a\u5c0f\u4e8e\u7b49\u4e8e\u771f\u5b9e\u6b65\u6570\uff09\u3002**\n\n\t\u7136\u540e\u6211\u4eec\u4ece $1$ \u5230 $15$ \u679a\u4e3e $maxdep$\uff0c\u6bcf\u6b21\u8fdb\u884c\u9012\u5f52\u3002\n\n\t\u4e3a\u4ec0\u4e48\u80fd\u66f4\u5feb\uff1f\u56e0\u4e3a\u53ef\u80fd\u7684\u786e\u6709\u4e00\u79cd\u65b9\u6cd5\u80fd\u5728$14$\u6b65\u53d8\u4e3a\u76ee\u6807\u68cb\u76d8\uff0c\u4f46\u8fd8\u6709\u4e00\u79cd\u65b9\u6cd5$2$\u6b65\u5c31\u53ef\u4ee5\u53d8\u4e3a\u76ee\u6807\u68cb\u76d8\u4e86\u3002\u800c\u7531\u4e8e\u66b4\u529b\u65f6\u904d\u5386\u987a\u5e8f\u7684\u539f\u56e0\uff0c\u6211\u4eec\u53ef\u80fd\u5f88\u665a\u624d\u4f1a\u904d\u5386\u5230$2$\u6b65\u7684\u65b9\u6848\u3002\u6240\u4ee5\u6211\u4eec\u8003\u8651\u679a\u4e3e\u6700\u5927\u6b65\u6570\uff0c\u8fdb\u884c\u4f18\u5316\u3002\n\n\u6240\u4ee5\u6700\u540e\u7684\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\nint t,stx,sty,a[5][5],ans[5][5]={{1,1,1,1,1},{0,1,1,1,1},{0,0,2,1,1},{0,0,0,0,1},{0,0,0,0,0}};\nint fx[]={-2,-1,1,2,2,1,-1,-2},fy[]={1,2,2,1,-1,-2,-2,-1};\n\nint value()//\u4f30\u4ef7\u51fd\u6570\n{\n\tint cnt=0;\n\tfor(int i=0;i<5;i++)\n\t\tfor(int j=0;j<5;j++)\n\t\t\tif(a[i][j]!=ans[i][j])\n\t\t\t\tcnt++;\n\treturn cnt;\n}\n\nbool Astar(int dep,int x,int y,int maxdep)\n{\n\tif(dep==maxdep)\n\t{\n\t\tif(!value()) return true;\n\t\treturn false;\n\t}\n\tfor(int i=0;i<8;i++)\n\t{\n\t\tint xx=x+fx[i],yy=y+fy[i];\n\t\tif(xx<0||xx>4||yy<0||yy>4) continue;\n\t\tswap(a[x][y],a[xx][yy]);\n\t\tint val=value();\n\t\tif(dep+val<=maxdep)\n\t\t\tif(Astar(dep+1,xx,yy,maxdep))//\u5982\u679c\u627e\u5230\u65b9\u6848\u5c31\u76f4\u63a5\u8fd4\u56de\uff0c\u8fd9\u6837\u4f1a\u7701\u53bb\u4e00\u4e9b\u65f6\u95f4\n\t\t\t\treturn true;\n\t\tswap(a[x][y],a[xx][yy]);\n\t}\n\treturn false;\n}\n\nint main()\n{\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tfor(int i=0;i<5;i++)\n\t\t{\n\t\t\tfor(int j=0;j<5;j++)\n\t\t\t{\n\t\t\t\tchar ch=getchar();\n\t\t\t\twhile(ch!='0'&&ch!='1'&&ch!='*')ch=getchar();\n\t\t\t\tif(ch=='*')\n\t\t\t\t{\n\t\t\t\t\ta[i][j]=2;\n\t\t\t\t\tstx=i,sty=j;\n\t\t\t\t}\n\t\t\t\telse a[i][j]=ch-'0';\n\t\t\t}\n\t\t}\n\t\tfor(int maxdep=0;maxdep<=15;maxdep++)//\u679a\u4e3emaxdep\n\t\t{\n\t\t\tif(Astar(0,stx,sty,maxdep))\n\t\t\t{\n\t\t\t\tprintf(\"%d\\n\",maxdep);\n\t\t\t\tgoto end;\n\t\t\t}\n\t\t}\n\t\tputs(\"-1\");\n\t\tend:;\n\t}\n\treturn 0;\n}\n```\n\n\u6700\u540e\u6765\u81ea\u849f\u84bb\u7684\u4e00\u4e2a\u5c0f\u5c0f\u7684\u60f3\u6cd5\uff08\u7591\u95ee\uff09\uff1a\n\n\u65e2\u7136 $maxdep=3$ \u7684\u60c5\u51b5\u6211\u4eec\u5728 $maxdep=4$ \u7684\u65f6\u5019\u90fd\u4f1a\u904d\u5386\u5230\uff0c\u4f46\u662f\u6211\u4eec\u5728 $maxdep=3$ \u7684\u65f6\u5019\u53c8\u904d\u5386\u8fc7\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4e0d\u53ef\u4ee5\u901a\u8fc7\u67d0\u79cd\u65b9\u5f0f\u526a\u6389\u8fd9\u4e9b\u90e8\u5206\u5462\uff1f\uff08\u5176\u5b9e\u4e5f\u4f18\u5316\u4e0d\u4e86\u591a\u5c11\uff0c\u9876\u591a\u628a\u539f\u6765\u7684 $O(k)$ \u4f18\u5316\u6210\u4e86 $O(\\frac{k}{25})$\uff0c$k$ \u662f\u591a\u5c11\u6211\u4e5f\u4e0d\u77e5\u9053\uff0c\u6bd5\u7adf $A^*$\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u672c\u6765\u5c31\u5f88\u7384\u5b66\uff09",
        "postTime": 1577496014,
        "uid": 118318,
        "name": "ez_lcw",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2324 \u3010[SCOI2005]\u9a91\u58eb\u7cbe\u795e\u3011"
    },
    {
        "content": "## \u9898\u89e3\u597d\u591a~~IDA*~~\uff0c\u4f5c\u4e3a**\u849f\u84bb**\uff0c\u6211\u6765\u4e2a\u6700\u6734\u7d20\u7684\u53cc\u5411BFS\u3002\n\n#### \u9996\u5148\u8981\u8bf4\u7684\u80af\u5b9a\u662f\u72b6\u6001\uff0c\u90a3\u4e48\u72b6\u6001\u8be5\u600e\u4e48\u8868\u793a\u5462\uff1f\uff1f\u4f5c\u4e3a**\u849f\u84bb**\u6211\u9009\u62e9\u7528char\u6570\u7ec4\u3002\u5f88\u660e\u663e\u72b6\u6001\u5f88\u96be\u8f6c\u79fb\u4e86!!\u8fd9\u65f6\u5019\u80af\u5b9a\u8981\u7528\u5230Hash\u4e86\u3002\n\u5148\u653e\u4e0bHash\u7684\u7f16\u7801\u548c\u89e3\u7801\u3002\n```cpp\nlong long inhash()\n{\n\tlong long ans=0;\n\tfor(int i=1;i<=5;i++)\n\tfor(int j=1;j<=5;j++)\n\t{\n\t\tif(b[i][j]=='1')ans+=pow(3,j+(i-1)*5);\n\t\tif(b[i][j]=='*')ans+=2*pow(3,j+(i-1)*5);\n\t}\n\treturn ans;\n } \n```\n```cpp\nvoid outhash(long long k,int &x,int &y)\n {\n \tk/=3;\n \tfor(int i=1;i<=5;i++)\n\tfor(int j=1;j<=5;j++) \n \t{\n\t    long long u=k%3;\n \t\tif(u==0)a[i][j]='0';\n \t\tif(u==1)a[i][j]='1';\n \t\tif(u==2)\n\t\t {\n\t\t a[i][j]='*';\n\t\t x=i;y=j;\t\n\t\t }\n\t\tk/=3;\n\t }\n\t return;\n }\n```\n\u663e\u800c\u6613\u89c1\uff0c\u8fd9\u662f\u4e00\u4e2a\u5f88\u9002\u5408\u6211\u8fd9\u79cd**\u849f\u84bb**\u7684\u5199\u6cd5\uff0c\u7f16\u7801\u76f4\u63a5\u8f6c3\u8fdb\u5236\uff0c\u89e3\u7801\u540c\u7406\uff0c\u4f7f\u7528\u5feb\u901f\u5e42\uff08pow\u51fd\u6570\u662f\u5feb\u901f\u5e42\uff0c\u4e0d\u662f\u5e93\u4e2d\u7684pow\uff08\uff09\uff09\u4e0d\u6253\u8868\u7684\u786e\u662f\u4e00\u79cd\u5f88\u4e0d\u660e\u667a\u7684\u505a\u6cd5\uff0c\u4f46\u662f\u8fd9\u6837\u5199\u4ee3\u7801\u4f1a\u7b80\u5355\u70b9\uff08\u5c31\u662f\u61d2\uff09\u3002\n```cpp\nlong long pow(ll a,ll b)\n{\n\tif(b==0)return 1;\n\tif(b==1)return a;\n\tll c=pow(a,b/2);\n\tif(b%2==0)return c*c;\n\telse return c*c*a; \n}\n```\n\u5feb\u901f\u5e42\uff0c\u56e0\u4e3alonglong\u4e0d\u4f1a\u7206\uff0c\u4e0d%\u3002\n\n**\u7136\u540e\u8bf4\u4e0b\u5168\u5c40\u53d8\u91cf\u7684\u5b9a\u4e49**\n```cpp\nlong long rrrrr=3509192766;\nchar a[6][6],b[6][6];\nconst int dx[]={-2,-2,-1,-1,1,1,2,2};\nconst int dy[]={1,-1,2,-2,2,-2,1,-1};\nqueue<long long>q[2];\nint ans,n,rx=0; \nint dis[2][inf],v[2][inf];//inf\u5df2\u5b8f\u5b9a\u4e49,\u57cb\u4e2a\u4f0f\u7b14\u3002\n```\nrrrrr\u662f\u76ee\u6807\u68cb\u76d8\u7684hash\u503c\uff1bchar a[][],b[][]\u4e24\u4e2a\u6570\u7ec4\u6765\u6682\u65f6\u50a8\u5b58\u72b6\u6001\uff1bdx[],dy[]\u679a\u4e3e\u9a6c\u7684\u79fb\u52a8\u65b9\u5f0f\uff1b\u5f00\u4e24\u4e2a\u961f\u5217q[2]\u7528\u6765\u5b58\u50a8\u72b6\u6001\uff1bdis[2][]\u7528\u6765\u5b58\u50a8hash\u5bf9\u5e94\u7684\u8ddd\u79bb\uff0cvis[2][]\u7528\u6765\u5b58\u50a8\u641c\u7d22\u60c5\u51b5\uff1bans\u7528\u6765\u8bb0\u5f55\u7ed3\u679c\u7684\u6b65\u6570\uff0crx\u6765\u5224\u5b9a15\u6b65\u7684\u4e0a\u754c\uff0cn\u6ca1\u4ec0\u4e48\u53ef\u8bf4\u7684\u3002\n\n\u56e0\u4e3a\u591a\u7ec4\u6570\u636e\u540c\u65f6\u5224\u5b9a\u6240\u4ee5\u6211\u4eec\u8981\u5148\u521d\u59cb\u5316\u4e00\u4e0b\u3002\uff08\u5927\u6982\u5c31\u662f\u8fd9\u4e2a\u6837\u5b50\uff09\n```cpp\n        while(q[1].size())q[1].pop();\n\twhile(q[0].size())q[0].pop();\n\tmemset(a,0,sizeof(a));\n\tmemset(b,0,sizeof(b));\n\tmemset(v,0,sizeof(v));\n\tmemset(dis,0,sizeof(dis));\n```\n\u7136\u540ea[][],b[][]\u4e4b\u524d\u662f\u8981\u590d\u5236\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5199\u4e00\u4e2acopy\u51fd\u6570\uff08\u4f5c\u4e3a\u4e00\u4e2a**\u849f\u84bb**\u7684\u505a\u6cd5\uff09\n```\n void copy()\n {\n \tfor(int i=1;i<=5;i++)\n\tfor(int j=1;j<=5;j++)\n\tb[i][j]=a[i][j]; \n }\n```\n#### \u6700\u540e\u5c31\u662fBFS\u4e86\u3002\n\u5148\u770b\u4e0b\u62d3\u5c55\u961f\u5217\u7684\u51fd\u6570\u3002\n```cpp\nint expand(int k)\n {\n \trx++;\n \tint t,i,j,x,y,tx,ty,d;\n \tmemset(b,0,sizeof(b));\n \tlong long mm=q[k].front();q[k].pop();\n \touthash(mm,x,y);\n \td=dis[k][mm%inf];\n \tfor(int i=0;i<=8;i++)\n \t{\n \t\ttx=x+dx[i];ty=y+dy[i];\n \t\tif(tx<1||ty<1||tx>5||ty>5)continue;\n \t\tcopy();\n \t\tswap(b[x][y],b[tx][ty]);\n \t\tlong long m=inhash();\n\t\t if(v[k][m%inf]){\n\t\t \tswap(b[x][y],b[tx][ty]);\n\t\t \tcontinue;\n\t\t } \n\t\t v[k][m%inf]=1;\n\t\t q[k].push(m);\n\t\t dis[k][m%inf]=d+1;\n\t\t if(v[1-k][m%inf])\n\t\t {\n\t\t \tans=dis[k][m%inf]+dis[1-k][m%inf];\n\t\t \treturn 1;\n\t\t }\n\t }\n\t return 0;\n }\n```\n\u5176\u5b9e\u548c\u5355\u5411\u7684BFS\u6ca1\u4ec0\u4e48\u533a\u522b\uff0c\u5c31\u662f\u591a\u4e86\u5224\u5b9a\u53e6\u4e00\u4e2a\u65b9\u5411\u662f\u5426\u904d\u5386\u8fc7\u8fd9\u4e00\u6b65(if(v[1-k][m%inf]))\u3002\n\n\u7136\u540e\u662fBFS\u51fd\u6570\n```cpp\nvoid BFS()\n {\n \tlong long r=inhash();\n \tif(r==rrrrr){ans=-1;return;}\n \tv[0][r%inf]=1;\n \tv[1][rrrrr%inf]=1;\n \twhile(q[1].size()&&q[0].size()&&rx<15)\n \t{\n \t\tif(q[0].size()<q[1].size())if(expand(0))return;\n \t\tif(q[0].size()>=q[1].size())if(expand(1))return;\n\t }\n\t return; \n }\n```\n\u5148\u7279\u5224\u4e00\u4e0b\uff0c\u7136\u540e\u5bf9**\u961f\u5217\u5143\u7d20\u5c11**\u7684\u8fdb\u884c\u62d3\u5c55\u3002\n\n## **\u6700\u540e\u653e\u4e0b\u4ee3\u7801**\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<queue>\n#define ll long long\n#define inf (\u81ea\u5df1\u53d6) \nusing namespace std;\nlong long pow(ll a,ll b)\nvoid init()\n{\n\twhile(q[1].size())q[1].pop();\n\twhile(q[0].size())q[0].pop();\n\tmemset(a,0,sizeof(a));\n\tmemset(b,0,sizeof(b));\n\tmemset(v,0,sizeof(v));\n\tmemset(dis,0,sizeof(dis));\n\tfor(int i=1;i<=5;i++)\n\tfor(int j=1;j<=5;j++)\n\tcin>>b[i][j];\n}\nlong long inhash()\n void outhash(long long k,int &x,int &y)\n void copy()\n int expand(int k)\n void BFS()\nint main()\n{\n\tios::sync_with_stdio(false);\n\tcin>>n;\n\twhile(n--)\n\t{\n\t\tinit();\n\t\tans=-1;\n\t\tq[0].push(inhash());\n\t\tq[1].push(rrrrr);\n\t\tBFS();\n\t\tcout<<ans<<endl;\n\t}\n\treturn 0;\n}\n```\n\u51fd\u6570\u7684\u4ee3\u7801\u524d\u9762\u5df2\u7ed9\u51fa\uff0c\u8fd9\u91cc\u5c31\u4e0d\u8d58\u8ff0\u4e86\u3002\n\n#### ~~\u4f46\u662f\u8bf7\u6ce8\u610finf\u662f\u8981\u81ea\u5df1\u53d6\u7684,\u8fd9\u4e5f\u5c31\u662f\u57cb\u4e0b\u7684\u4f0f\u7b14\u3002~~\n~~1.inf\u4e0d\u80fd\u53d6\u592a\u5927\uff0c\u4e0d\u7136\u4f1aMLE\uff1b                         2.inf\u8981\u53d6**\u7279\u6b8a**\u7684\u503c\uff0c\u4e0d\u7136\u4f1ahash\u51b2\u7a81\uff0c\u7136\u540eWA\uff1b\n3.inf\u80af\u5b9a\u4e0d\u662f\u4f1a\u5f88\u5bb9\u6613\u627e\u5230\u7684\uff0c\u8fd9\u65f6\u5019\u53ef\u4ee5\u9009\u62e9\u4e00\u4e9b\u907f\u514dhash\u51b2\u7a81\u7684\u65b9\u6cd5\uff0c\u6bd4\u5982\u53cchash\uff0c\u6216\u8005\u6302\u94fe\u3002~~\n\n\u4f5c\u4e3a\u4e00\u4e2a\u849f\u84bb\u5199\u9898\u89e3\u4e0d\u6613\uff0c\u6c42\u901a\u8fc7\u3002\u795d\u5927\u5bb6\u56fd\u5e86\u5047\u671fRP++\u3002",
        "postTime": 1569940582,
        "uid": 158869,
        "name": "\u76e7\u92c5",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2324 \u3010[SCOI2005]\u9a91\u58eb\u7cbe\u795e\u3011"
    },
    {
        "content": "\n\u70b9\u5f00\u9898\u89e3,\u53d1\u73b0\u91cc\u9762\u975e\u5e38\u70ed\u95f9!\u53cc\u5411\u5e7f\u641c\u4ee5\u53caA* IDE* \u7684\u89e3\u6cd5\u90fd\u88ab\u63d0\u5230\u4e86.\n\n>\u542f\u53d1\u5f0f\u641c\u7d22\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u6b65\u9aa4\u5c31\u662f\u4f30\u503c\u5224\u65ad,\u8fd9\u9053\u9898\u91cc,5x5\u7684\u68cb\u76d8\u683c\u4e0d\u5927,\u5224\u65ad\u4e00\u904d\u4e5f\u5c31\u6bd4\u8f8325\u6b21,\u6240\u4ee5\u5f88\u591a\u9898\u89e3\u4e5f\u5c31\u4e0d\u5b58\u50a8\u4f30\u503c\u7ed3\u679c,\u76f4\u63a5\u51cf\u679d+\u7206\u641c\u5c31\u53ef\u4ee5\u4e86.\n\n\u4e0d\u8fc7\u6211\u60f3\u8bd5\u8bd5\u4f18\u5316\u4e00\u4e0b,\u628a\u4f30\u503c\u7ed3\u679c\u4fdd\u5b58\u8d77\u6765,\u8fd9\u6837\u4ee5\u540e\u5982\u679c\u9047\u5230\u4f30\u503c\u8fd0\u7b97\u91cf\u6bd4\u8f83\u5927,\u5fc5\u987b\u5b58\u50a8\u4f30\u503c\u7684\u9898,\u5c31\u53ef\u4ee5\u76f4\u63a5\u62ff\u6765\u7528\u4e86, \u4f18\u5316\u5b8c\u540e\u5728\u6d1b\u8c37\u7684\u6d4b\u8bd5\u70b9\u65f6\u95f4\u6d4b\u8bd5,\u65f6\u95f4\u4e5f\u4ece1.60s\u964d\u5230\u4e86439ms,\u5341\u5206\u5f00\u5fc3,\u4e8e\u662f\u5c31\u6709\u4e86\u8fd9\u4e2a\u603b\u7ed3.\n\n\n\u4e0b\u9762\u5c31\u662f\u8fd9\u9053\u9898\u89e3\u9898\u8fc7\u7a0b\u7684\u8be6\u7ec6\u8bb0\u5f55:\n#### \u62bd\u8c61\u6210\u6811\n\u56fd\u9645\u8c61\u68cb\u91cc\u9a6c\u53ea\u80fd\u8d70\u516b\u79cd\u65b9\u5411,\u6240\u4ee5\u4efb\u4f55\u4e00\u4e2a\u683c\u5b50\u51fa\u73b0\u53d8\u5316\u7684\u6b65\u4f10\u53ea\u53ef\u80fd\u67098\u79cd.\n\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u6570\u7ec4\u4fdd\u5b58\u8fd9\u516b\u79cd\u53ef\u80fd\u4e0bx\u548cy\u5750\u6807\u53d1\u751f\u7684\u53d8\u5316,\n```c++\n//\u5b58\u50a8\u9a91\u58eb\u76848\u4e2a\u79fb\u52a8\u4f4d\u7f6e\nint dir[8][2] = { {-2,-1},{-2,1},{-1,-2},{-1,2},{1,-2},{1,2},{2,-1},{2,1} };\n...\n//\u6c42\u89e3\u4e0b\u4e00\u6b65\u7684\u5750\u6807\nint xb = xa + dir[i][0];\nint yb = ya + dir[i][1];\n```\n\n\u6bcf\u8d70\u4e00\u6b65\u90fd\u662f\u57fa\u4e8e\u4e0a\u4e00\u6b65\u7684\u503c\u5f97\u5230\u7684,\u8fd9\u5b58\u5728\u4e00\u4e2a\u9012\u63a8\u5173\u7cfb,\u800c\u5982\u679c\u8d70\u5b8c\u53d1\u73b0\u4e0d\u662f\u81ea\u5df1\u60f3\u8981\u7684,\u5c31\u8981\u56de\u5f52;\u770b\u5230\u9012\u5f52,\u5c31\u53ef\u4ee5\u60f3\u5230\u6811\u8fd9\u79cd\u6570\u636e\u7ed3\u6784,\u6bcf\u4e00\u6b65\u8d70\u5b8c\u6709\u516b\u4e2a\u53ef\u80fd\u7684\u65b9\u5411,\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u516b\u53c9\u6811\u6765\u6a21\u62df.\n\n\u6811\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\u6709\u5f88\u591a\u79cd\u5b58\u50a8\u65b9\u5f0f,\u6bd4\u8f83\u6807\u51c6\u7684\u6709\u987a\u5e8f\u7ed3\u6784\u7684\u53cc\u4eb2\u8868\u793a\u6cd5,\u5b69\u5b50\u8868\u793a\u6cd5,\u53cc\u4eb2\u5b69\u5b50\u8868\u793a\u6cd5\u4ee5\u53ca\u5404\u79cd\u94fe\u5f0f\u7ed3\u6784.\u5404\u79cd\u8bb2\u6570\u636e\u7ed3\u6784\u7684\u4e66\u91cc\u90fd\u4f1a\u8bb2\u5230,\u7ed9\u51fa\u6bd4\u8f83\u6807\u51c6\u7684\u5199\u6cd5.\u4f46\u662f\u5177\u4f53\u4f7f\u7528\u7684\u65f6\u5019\u4e00\u822c\u662f\u5f88\u968f\u5fc3\u6240\u6b32\u7684,\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u9700\u8981\u6539\u9020.\n\n\u56e0\u4e3a\u987a\u5e8f\u7ed3\u6784\u7684\u968f\u673a\u5b58\u53d6\u6bd4\u8f83\u65b9\u4fbf,\u6240\u4ee5\u9009\u62e9\u4e86\u987a\u5e8f\u5b58\u50a8,\u53c8\u56e0\u4e3a\u4e8b\u524d\u4e0d\u77e5\u9053\u5f00\u8f9f\u591a\u5c11\u4e2a\u7ed3\u70b9,\u6240\u4ee5\u91c7\u7528\u4e86STL\u91cc\u9762vector\u6765\u5b9e\u73b0\u52a8\u6001\u6570\u7ec4\u7684\u521b\u5efa,\u5b58\u591a\u5c11\u7528\u591a\u5c11.\u867d\u7136vector\u6709\u4e0d\u5c11\u9700\u8981\u6ce8\u610f\u7684\u5c0f\u5751,\u4f46\u6ce8\u610f\u907f\u514d\u4e00\u4e0b,\u7528\u8d77\u6765\u8fd8\u662f\u5f88\u65b9\u4fbf\u7684.\n```c++\n//\u8f85\u52a9\u7528\u7684\u516b\u53c9\u6811\n//\u7ed3\u70b9\u7ed3\u6784\u4f53\ntypedef struct CHNode{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int m;//\u7ed3\u70b9\u5728vector\u91cc\u9762\u7684\u4e0b\u6807\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int eva;//\u5b69\u5b50\u7ed3\u70b9\u7684\u4f30\u503c;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int st;//\u72b6\u6001\u7801\n}CHNode;\n\ntypedef struct OTNode\n{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int fm;//\u7236\u7ed3\u70b9\u5728vector\u91cc\u7684\u4e0b\u6807\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int xt, yt;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0CHNode child[8];//8\u4e2a\u5b69\u5b50\u7ed3\u70b9\n}OTNode;\n\n\n//vector\u4e0b\u6807\u6307\u9488,\u4ece1\u5f00\u59cb,0\u5b58\u6839\u7ed3\u70b9,xy\u503c\u662f\u7a7a\u683c\u7684\u8d77\u59cb\u5904\n//\u6bcf\u6b21push,pnode\u5c31\u52a01;\nint pnode = 1;\n//\u5b58\u50a8\u7ed3\u70b9\u7684\u6570\u7ec4,vector\u53d8\u957f\u6570\u7ec4,\u7528\u591a\u5c11\u5f00\u591a\u5c11\nvector<OTNode> v;\n```\n\n#### \u53ea\u79fb\u52a8\u767d\u683c\u5b50\n\n\u6811\u5df2\u7ecf\u6709\u5566!\u4f46\u662f\u5148\u79fb\u52a8\u54ea\u4e2a\u9a6c\u5462?24\u5339\u9a6c,\u60f3\u60f3\u5c31\u4f7f\u4eba\u5934\u5927,\u4f46\u662f\u5982\u679c\u6487\u5f00\u9898\u76ee\u7684\u8bf1\u5bfc,\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e2a\u68cb\u76d8\u53ea\u6709\u4e00\u4e2a\u767d\u8272\u7a7a\u683c!\u662f\u4e0d\u662f\u7acb\u523b\u5c31\u8ba9\u4eba\u60f3\u8d77\u5c0f\u65f6\u5019\u73a9\u7684\u8fd9\u79cd\u73a9\u5177~~\n\n\n\n\u6ed1\u52a8\u62fc\u56fe!\n\u6211\u5c0f\u65f6\u4faf\u8d85\u7ea7\u7231\u73a9\u7684,\u5927\u5bb6\u90fd\u73a9\u624b\u673a\u6e38\u620f\u4ee5\u540e\u5c31\u6ca1\u6709\u5728\u5356\u4e86(\u7cdf\u7cd5\u66b4\u9732\u5e74\u9f84\u4e86).\n\u6ed1\u52a8\u62fc\u56fe\u4e0e\u8fd9\u76d8\u68cb\u7684\u533a\u522b\u662f,\u6ed1\u52a8\u62fc\u56fe\u91cc\u7684\u683c\u5b50\u6bcf\u6b21\u6700\u591a\u53ea\u6709\u56db\u4e2a\u65b9\u5411\u53ef\u4ee5\u9009\u62e9,\u6240\u4ee5\u5982\u679c\u6a21\u62df\u7684\u8bdd\u8981\u7528\u56db\u53c9\u6811,\u4f46\u662f\u68cb\u76d8\u7684\u7a7a\u683c\u6bcf\u6b21\u6709\u516b\u4e2a\u65b9\u5411\u53ef\u4ee5\u9009\u62e9.\n\n\n```c++\n//\u7a7a\u683c\u548c\u5b83\u8981\u79fb\u52a8\u8fc7\u53bb\u7684\u5730\u65b9\u7684\u9a6c\u4ea4\u6362,\n//\u548c\u9a6c\u79fb\u52a8\u5411\u5b83\u53ef\u4ee5\u79fb\u52a8\u5230\u7684\u7a7a\u683c,\u662f\u7b49\u4ef7\u7684\nswap(mp[xa][ya], mp[xb][yb]);\n```\n\n#### \u542f\u53d1\u5f0f\u641c\u7d22\n\u867d\u7136\u95ee\u9898\u51cf\u5316\u4e86\u4e0d\u5c11,\u4f46\u662f\u8ba1\u7b97\u91cf\u8fd8\u662f\u5f88\u5927\u554a.\n\u6bcf\u6b65\u67098\u79cd\u53ef\u80fd,\u60f3\u8981\u6a21\u62df\u6240\u6709\u53ef\u80fd\u6027,15\u6b65\u5c31\u662f8\u4e5815\u6b21,\u867d\u7136\u8ba1\u7b97\u673a\u4e0d\u77e5\u75b2\u5026\u4f46\u4e5f\u4e0d\u80fd\u8fd9\u6837\u6b3a\u8d1f\u5b83!\u6211\u4eec\u8981\u60f3\u529e\u6cd5\u5e2e\u5b83\u51cf\u51cf\u8d1f.\n\n\u5f53\u5f53\u5f53~!\u542f\u53d1\u5f0f\u641c\u7d22\u95ea\u4eae\u767b\u573a~!\n\n\u6bcf\u4e00\u6b65\u90fd\u6709\u5f85\u63a2\u5bfb\u7684\u516b\u4e2a\u65b9\u5411,\u6bcf\u4e2a\u7ed3\u70b9\u90fd\u6709\u5f85\u5904\u7406\u76848\u4e2a\u7ed3\u70b9,\u516b\u4e2a\u70b9\u4e2d\u7684\u6bcf\u4e2a\u70b9\u8fd8\u80fd\u884d\u751f\u51fa\u66f4\u591a\u7684\u70b9..\n\u8fd9\u4e9b\u5f85\u63a2\u5bfb\u6216\u5f85\u5904\u7406\u7684\u6211\u4eec\u4e0d\u4e00\u5b9a\u8981\u9a6c\u4e0a\u8d70\u8fc7\u53bb,\u800c\u662f\u5728\u51fa\u53d1\u524d\u5bf9\u5b83\u505a\u4e00\u4e2a\u9884\u4f30.\u770b\u5b83\u503c\u4e0d\u503c\u5f97\u6211\u4eec\u8d70\u8fc7\u53bb,\u5982\u679c\u4e0d\u503c\u5f97\u5c31\u628a\u722a\u5b50\u5c0f\u5fc3\u7684\u4f38\u56de\u6765.\n\n\u901a\u5e38\u7684\u8861\u91cf\u65b9\u5f0f\u662f:\n```\nF=G+H\n```\nG\u662f\u4ece\u8d77\u70b9\u6cbf\u7740\u4ea7\u751f\u7684\u8def\u5f84,\u79fb\u52a8\u5230\u5f85\u8bc4\u4f30\u70b9\u7684\u79fb\u52a8\u8017\u8d39\nH\u662f\u4ece\u5f85\u8bc4\u4f30\u70b9\u79fb\u52a8\u5230\u76ee\u6807\u7ed3\u679c\u7684\u9884\u4f30\u8017\u8d39.(\u8fd9\u91cc\u5c31\u6bd4\u8f83\u8ff7\u4e86,\u56e0\u4e3a\u6211\u4eec\u4e0d\u53ef\u80fd\u672a\u535c\u5148\u77e5,\u77e5\u9053\u5f85\u8bc4\u4f30\u70b9\u5230\u76ee\u6807\u7ed3\u679c\u4e4b\u95f4\u7684\u8ddd\u79bb,\u53ea\u80fd\u6839\u636e\u5df2\u6709\u7684\u4fe1\u606f\u8fdb\u884c\u63a8\u6d4b,\u8fd9\u4e5f\u8bb8\u5c31\u662f\u542f\u53d1\u5f0f\u4e3a\u4ec0\u4e48\u88ab\u79f0\u4e3a\u542f\u53d1\u5f0f\u7684\u539f\u56e0\u5427~!)\n\n\u8fd9\u91cc\u4e0e\u76ee\u6807\u7ed3\u679c\u7684\u8017\u8d39\u662f\u4ee5\u591a\u5c11\u683c\u68cb\u5b50\u8fd8\u6ca1\u5f52\u4f4d\u6765\u8861\u91cf\u7684.\n```c++\n//\u4f30\u7b97\u51fd\u6570\nint evaluate() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0int cnt = 0;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0for (int i = 1; i <= 5; i++) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0for (int j = 1; j <= 5; j++)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (mp[i][j] != goal[i][j])cnt++;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return cnt;//\u8fd4\u56de\u6709\u591a\u5c11\u683c\u68cb\u5b50\u8fd8\u6ca1\u5f52\u4f4d\n}\n```\n\u9898\u76ee\u89c4\u5b9a\u4e86\u6700\u591a\u8d7015\u6b65,\u7a7a\u683c\u6bcf\u79fb\u52a8\u4e00\u6b21,\u53ea\u4f1a\u6539\u53d8\u4e00\u4e2a\u9a6c\u7684\u4f4d\u7f6e,\u6240\u4ee5\u5982\u679c\u8d70\u4e86n\u6b65,\u8fd8\u670915-n\u4ee5\u4e0a\u4e2a\u9a6c\u8fd8\u6ca1\u6709\u5f52\u4f4d,\u90a3\u7a7a\u683c\u518d\u600e\u4e48\u7528\u529b\u79fb\u52a8\u90fd\u4e0d\u53ef\u80fd\u5f52\u4f4d\u4e86,\u6240\u4ee5\u5c31\u6709\u5982\u4e0b\u51cf\u679d:\n```c++\n//\u4f30\u503c\n\u00a0eva = evaluate();\n...\nif (eva + dp > 15) {\n    v[node].child[i].st = 0;\n    \u00a0swap(mp[xa][ya], mp[xb][yb]);\n    \u00a0continue;\n\u00a0\u00a0}\n```\n\u8fd9\u6837,\u4e00\u5927\u6279\u7ed3\u70b9\u5c31\u88ab\u62c9\u8fd1\u9ed1\u540d\u5355,\u8282\u7701\u4e86\u8ba1\u7b97\u673a\u7684\u65f6\u95f4.\n\n\n>\u901a\u5e38\u7684\u542f\u53d1\u5f0f\u641c\u7d22\u5176\u5b9e\u662f\u4f1a\u628aF,G,H\u90fd\u8bb0\u5f55\u5728\u7ed3\u70b9\u91cc\u7684,\u518d\u4f7f\u7528\u4f18\u5148\u961f\u5217\u6309\u7167\u4f18\u5148\u987a\u5e8f\u8fdb\u884c\u904d\u5386.\u800c\u8fd9\u91cc\u6839\u636e\u6d1b\u8c37\u5176\u5b83\u5927\u4f6c\u7684\u667a\u6167\u76f4\u63a5\u7528\u4e86\u8fed\u4ee3\u52a0\u6df1,\u800c\u4e0d\u662f\u4f18\u5148\u961f\u5217.\u6ca1\u6709\u4e25\u683c\u6309\u7167\u542f\u53d1\u5f0f\u641c\u7d22\u6765\u505a,(\u4f46\u662f\u4f60\u53ef\u4ee5\u8bd5\u4e00\u4e0b,\u7136\u540e\u544a\u8bc9\u6211\u7528\u4f18\u5148\u961f\u5217\u6765\u505a\u8bc4\u4f30\u7684\u65f6\u95f4\u7ed3\u679c\u4f1a\u662f\u600e\u6837\u7684,\u62b1\u4f4f\u5927\u817f!)\n\n\u8fed\u4ee3\u52a0\u6df1\u90e8\u5206\u7684\u4ee3\u7801:\n```c++\n//\u4ece\u7a7a\u683c\u5904\u671d\u516b\u4e2a\u65b9\u5411\u5c55\u5f00\u641c\u7d22,\u4ece1-15\u7684\u6df1\u5ea6\u8fed\u4ee3\u52a0\u6df1\nfor (int maxdp = 1; maxdp <= 15 && !flag; maxdp++) \n{\n    A_star(0, 0, maxdp);\n    \u00a0if (success)\n     {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cout << maxdp << endl;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0flag = 1;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n}\nif (!success) {\n    \u00a0cout << \"-1\" << endl;\n\u00a0}\n```\n\n#### \u51cf\u679d\n\u9664\u4e86\u4ece\u542f\u53d1\u5f0f\u641c\u7d22\u8fc1\u79fb\u6765\u7684\u51cf\u679d,\u8d85\u8fc7\u8fb9\u754c,\u6216\u8005\u5c5e\u4e8e\u56de\u5934\u8def\u7684\u60c5\u51b5,\u90fd\u662f\u53ef\u4ee5\u51cf\u679d,\u62c9\u8fdb\u9ed1\u540d\u5355,\u4e0d\u518d\u904d\u5386\u7684.\u8fd9\u6837\u8ba1\u7b97\u673a\u53c8\u5c11\u4e86\u5f88\u591a\u8d1f\u62c5,\n```c++\n//\u5224\u65ad\u8fb9\u754c\n\u00a0if (xb < 1 || xb>5 || yb < 1 || yb>5) {\n    \u00a0//\u8d8a\u754c\u7684\u60c5\u51b5\n    \u00a0v[node].child[i].st = 0;\n    \u00a0swap(mp[xa][ya], mp[xb][yb]);\n    continue;\n\u00a0\u00a0}\n//--------------------------------------------------\n\u00a0\u00a0//\u5224\u65ad\u662f\u5426\u56de\u5934\u8def\n\u00a0if (fn != -1 && v[fn].xt == xb && v[fn].yt == yb) {\n//\u8d70\u4e86\u56de\u5934\u8def\n    v[node].child[i].st = 0;\n    \u00a0swap(mp[xa][ya], mp[xb][yb]);\n    continue;\n}\n```\n\u56e0\u4e3a\u4f7f\u7528\u4f30\u4ef7\u51fd\u6570\u524d\u662f\u76f4\u63a5\u628a\u7a7a\u683c\u548c\u8981\u8d70\u7684\u4e0b\u4e00\u6b65\u4f4d\u7f6e\u4ea4\u6362\u4e86,\u6240\u4ee5continue\u9000\u51fa\u524d\u4e5f\u8981\u628a\u7a7a\u683c\u8fd8\u539f\u56de\u6765,\u4e0d\u80fd\u7834\u574f\u73b0\u573a\u5bfc\u81f4\u4e0b\u6b21\u904d\u5386\u5230\u8fd9\u6ca1\u6cd5\u73a9~\n\n### vector\u7684\u5185\u5b58\u6e05\u7406\u95ee\u9898\n\u5176\u5b9e\u4ee3\u7801\u8bf4\u5230\u8fd9\u5c31\u5df2\u7ecf\u5dee\u4e0d\u591a\u4e86,\u6700\u540e\u8981\u6ce8\u610f\u7684\u4e00\u4e2a\u95ee\u9898\u5c31\u662fvector\u7684clear()\u51fd\u6570\u53ea\u4f1a\u7f6e\u7a7avector\u7684size,\u5e76\u4e0d\u4f1a\u7f6e\u7a7avector\u6240\u5360\u7684\u5185\u5b58,\u6d4b\u8bd5\u4e00\u4e0b\u7684\u8bdd,\u53ef\u4ee5\u770b\u5230capacity\u662f\u4e0d\u4f1a\u88ab\u6e05\u96f6\u7684!\n\n\u8fd9\u79cd\u505a\u9898\u7684\u5c0f\u7a0b\u5e8f\u65e0\u6240\u8c13,\u4e0d\u8fc7\u5982\u679c\u5728\u9879\u76ee\u5f00\u53d1\u91cc,\u4e00\u5b9a\u8981\u8bb0\u5f97\u7528swap\u628avector\u7684capacity\u4e5f\u5f52\u96f6.\n```c++\n//\u5bf9vector\u7684\u5185\u5b58\u8fdb\u884c\u91ca\u653e\nvector<OTNode>().swap(v);\n```\n\n\u7136\u540e\u4e0b\u9762\u5c31\u662f\u5b8c\u6574\u7684\u4ee3\u7801\u4e86:\n```cpp\n//#pragma warning(disable:4996)\n# include<iostream>\n//# include<queue>\n# include<string>\n# include<cstring>\n# include<cctype>//isdigit()\u51fd\u6570\u7528\u5230\n# include<vector>\n# include<iterator>\nusing namespace std;\n\n\ntypedef struct CHNode{\n\tint m;\n\tint eva;\n\tint st;\n}CHNode;\n\ntypedef struct OTNode\n{\n\tint fm;\n\tint xt, yt;\n\tCHNode child[8];\n}OTNode;\nvector<OTNode> v;\n\nbool success, flag;\n\nconst char goal[7][7] = {\n\t{'0','0','0','0','0','0'},\n\t{'0','1','1','1','1','1'},\n\t{'0','0','1','1','1','1'},\n\t{'0','0','0','*','1','1'},\n\t{'0','0','0','0','0','1'},\n\t{'0','0','0','0','0','0'}\n};\nchar mp[7][7];\nint dir[8][2] = { {-2,-1},{-2,1},{-1,-2},{-1,2},{1,-2},{1,2},{2,-1},{2,1} };\n\nint evaluate() {\n\tint cnt = 0;\n\tfor (int i = 1; i <= 5; i++) {\n\t\tfor (int j = 1; j <= 5; j++)\n\t\t\tif (mp[i][j] != goal[i][j])cnt++;\n\t}\n\treturn cnt;\n}\n\n\nvoid cnode(int node,int xb, int yb) {\n\tOTNode tp;\n\ttp.xt = xb;\n\ttp.yt = yb;\n\ttp.fm = node;\n\tfor (int i = 0; i < 8; i++) {\n\t\ttp.child[i].st = -1;\n\t}\n\tv.push_back(tp);\n}\n/*\nst=-1 \u65e2\u6ca1\u6709\u5224\u65ad\u8fb9\u754c\u548c\u56de\u5934\u8def, \u4e5f\u6ca1\u6709\u5224\u65ad\u4f30\u503c\u7684\nst=-2 \u5224\u65ad\u8fc7\u8fb9\u754c\u548c\u56de\u5934\u8def,  \u4f30\u8fc7\u503c\u7684\nst=1 \u8fbe\u5230\u7ee7\u7eed\u641c\u7d22\u6761\u4ef6\u7684\nst=0 \u5df2\u7ecf\u8d8a\u754c,15\u6b65\u5185\u4e0d\u80fd\u5339\u914d,\u6216\u8005\u8d70\u56de\u5934\u8def\u88ab\u526a\u6389\u7684\n*/\n\nvoid A_star(int dp, int node, int maxdp)\n{\n\tif (dp >= maxdp)return;\n\tint xa = v[node].xt;\n\tint ya = v[node].yt;\n\tfor (int i = 0; i < 8; i++) {\n\t\tint cn = v[node].child[i].st;\n\t\tint fn = v[node].fm;\n\t\tint eva = 0;\n\t\tif (cn == 0) continue;\n\t\tint xb = xa + dir[i][0];\n\t\tint yb = ya + dir[i][1];\n\t\tswap(mp[xa][ya], mp[xb][yb]);\n\t\tif (cn < 0)\n\t\t{\n\t\t\tif (cn == -2) {\n\t\t\t\teva = v[node].child[i].eva;\n\t\t\t}\n\t\t\tif (cn == -1) {\n\t\t\t\tif (xb < 1 || xb>5 || yb < 1 || yb>5) {\n\t\t\t\t\tv[node].child[i].st = 0;\n\t\t\t\t\tswap(mp[xa][ya], mp[xb][yb]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (fn != -1 && v[fn].xt == xb && v[fn].yt == yb) {\n\t\t\t\t\tv[node].child[i].st = 0;\n\t\t\t\t\tswap(mp[xa][ya], mp[xb][yb]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\teva = evaluate();\n\t\t\t\tif (!eva) { success = 1; return; }\n\t\t\t\tif (eva + dp > 15) {\n\t\t\t\t\tv[node].child[i].st = 0;\n\t\t\t\t\tswap(mp[xa][ya], mp[xb][yb]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tv[node].child[i].eva=eva;\n\t\t\t\tv[node].child[i].st = -2;\n\t\t\t\t\n\t\t\t}\n\t\t\tif (eva + dp <= maxdp) {\n\t\t\t\t//\u7ee7\u7eed\u641c\u7d22\u524d\u5148\u5f62\u6210\u65b0\u7ed3\u70b9\n\t\t\t\tcnode(node, xb, yb);\n\t\t\t\tv[node].child[i].m = pnode;\n\t\t\t\tv[node].child[i].st = 1;\n\t\t\t\tpnode++;\n\n\n\t\t\t\tA_star(dp + 1, pnode - 1, maxdp);\n\t\t\t}\n\t\t}\n\t\tif (cn == 1) {\n\t\t\tint cm = v[node].child[i].m;\n\n\t\t\tA_star(dp + 1, cm, maxdp);\n\t\t}\n\t\tswap(mp[xa][ya], mp[xb][yb]);\n\t}\n}\n\n\n\nvoid init() {\n\n\tfor (int i = 1; i <= 5; i++)cin >> (mp[i] + 1);\n\tOTNode temp;\n\tfor (int i = 1; i <= 5; i++)\n\t{\n\t\tfor (int j = 1; j <= 5; j++)\n\t\t{\n\t\t\tif (mp[i][j] == '*') { temp.xt = i; temp.yt = j; }\n\t\t}\n\t}\n\tfor (int i = 0; i < 8; i++) {\n\t\ttemp.child[i].st = -1;\n\t}\n\ttemp.fm = -1;\n\tv.push_back(temp);\n}\n\nint main()\n{\n\tint n;\n\tcin >> n;\n\twhile (n--) {\n\t\tinit();\n\t\tif (!evaluate()) {\n\t\t\tcout << \"0\" << endl;\n\t\t\tcontinue;\n\t\t}\n\t\tfor (int maxdp = 1; maxdp <= 15 && !flag; maxdp++) {\n\t\t\tA_star(0, 0, maxdp);\n\t\t\tif (success) {\n\t\t\t\tcout << maxdp << endl;\n\t\t\t\tflag = 1;\n\t\t\t}\n\t\t}\n\n\t\tif (!success) {\n\t\t\tcout << \"-1\" << endl;\n\t\t}\n\t\tv.clear();//\u8bb0\u5f97\u6e05\u7a7a\u53d8\u957f\u6570\u7ec4\n\n\t\tpnode = 1;\n\t\tsuccess = 0;\n\t\tflag = 0;\n\n\t}\n\tvector<OTNode>().swap(v);\n\n\t//system(\"pause\");\n\treturn 0;//\u8fd4\u56de0\n}\n```\n",
        "postTime": 1567572818,
        "uid": 172267,
        "name": "xmdzz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2324 \u3010[SCOI2005]\u9a91\u58eb\u7cbe\u795e\u3011"
    },
    {
        "content": "# \u9898\u76ee\n[\u9a91\u58eb\u7cbe\u795e](https://www.luogu.org/problemnew/show/P2324)\n# \u9898\u89e3\uff08IDDFS\uff09\n\u4e00\u770b\u8fd9\u4e2a\u9898\uff0c\u60f3\u4e0d\u51fa\u4ec0\u4e48\u795e\u5947\u7684\u65b9\u6cd5\uff0c\u518d\u60f3\u4e00\u4e0b\uff0c\u76f4\u63a5\u641c\u7d22\u5427\n\n\u641c\u7d22\u7684\u987a\u5e8f\u5f88\u663e\u7136\uff0c\u4ece\u7a7a\u5730\u5f00\u59cb\uff0c\u5f80\u516b\u4e2a\u65b9\u5411\u8fdb\u884c\u641c\u7d22\uff0c\u5982\u679c\u67d0\u4e00\u6b21\u7684\u64cd\u4f5c\u80fd\u5f97\u5230\u76ee\u6807\u77e9\u9635\uff0c\u5c31\u53ef\u4ee5\u9000\u51fa\u4e86\n\n\u56e0\u4e3a\u9898\u76ee\u9650\u5236\u4e86\u6700\u591a$15$\u6b65\uff0c\u5c31\u5f88\u660e\u663e\u662f`IDDFS`\u4e86\uff0c\u4f46\u5982\u679c\u53ea\u662f\u9650\u5236\u4e00\u4e2a\u4e0a\u9650\u6df1\u5ea6\u8fd8\u4e0d\u591f\uff0c\u4ecd\u7136\u4f1a\u8d85\u65f6\n\u6b64\u65f6\u6211\u4eec\u5c31\u9700\u8981\u7528\u5230**\u4e50\u89c2\u4f30\u8ba1\u51fd\u6570**\u4e86\uff0c\u6bcf\u4e00\u9053\u9898\u7684\u4e50\u89c2\u4f30\u8ba1\u51fd\u6570\u662f\u4e0d\u540c\u7684\uff0c\u9488\u5bf9\u8fd9\u9053\u9898\uff0c\u5982\u679c\u5728\u5f53\u524d\u72b6\u6001\u4e0b\u8981\u8fd8\u539f\u5230\u76ee\u6807\u77e9\u9635\uff0c\u6700\u7406\u60f3\u7684\u72b6\u6001\u5c31\u662f\u6bcf\u7528\u4e00\u6b65\u5c31\u53ef\u4ee5\u8ba9\u8fd9\u4e2a\u68cb\u5b50\u5230\u4f4d\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u7edf\u8ba1\u5f53\u524d\u77e9\u9635\u548c\u76ee\u6807\u77e9\u9635\u4e0d\u540c\u7684\u5143\u7d20\u4e2a\u6570\u6765\u4f5c\u4e3a\u4e50\u89c2\u4f30\u8ba1\u51fd\u6570\u5c31\u53ef\u4ee5\u4e86\n# \u4ee3\u7801\uff08IDDFS\uff09\n```cpp\n#include <cstdio>\n#include <cstring>\n\ntemplate <class T>\nT read() {\n    T x = 0; T f = 1; char s = getchar();\n    while(s < '0' || s > '9') {if(s == '-') f = -1; s = getchar();}\n    while(s >= '0' && s <= '9') {x = (x << 3) + (x << 1) + s - 48; s = getchar();}\n    return x * f;\n}\n\ntemplate <typename T>\nvoid wri(T x) {\n    if(x < 0) {x = -x; putchar('-');}\n    if(x / 10) wri(x / 10);\n    putchar(x % 10 + 48);\n}\n\ntemplate <typename T>\nvoid write(T x, char s) {\n    wri(x);\n    putchar(s);\n}\n\nint n, sx, sy;\nint dir[8][2] = {{1, 2}, {1, -2}, {-1, 2}, {-1, -2}, {2, 1}, {2, -1}, {-2, 1}, {-2, -1}};\nchar a[10][10], s[10][10] = {{'0', '0', '0', '0', '0', '0'}, {'0', '1', '1', '1', '1', '1'}, {'0', '0', '1', '1', '1', '1'}, {'0', '0', '0', '*', '1', '1'}, {'0', '0', '0', '0', '0', '1'}, {'0', '0', '0', '0', '0', '0'}};\t//s\u4e3a\u76ee\u6807\u77e9\u9635\nbool f;\n\nint check() {\t//\u4e50\u89c2\u4f30\u8ba1\u51fd\u6570\n    int ret = 0;\n    for(int i = 1;i <= 5;i ++)\n        for(int j = 1;j <= 5;j ++)\n            if(a[i][j] != s[i][j])\n                ret ++;\n    return ret;\n}\n\nbool inside(int x, int y) {\n    if(x < 1 || x > 5 || y < 1 || y > 5) return 0;\n    return 1;\n}\n\nvoid IDDFS(int nowDepth, int maxDepth, int x, int y) {\n    if(nowDepth > maxDepth) return ;\n    if(check() == 0) {f = 1; return ;}\t//\u5982\u679c\u5df2\u7ecf\u5f97\u5230\u76ee\u6807\u77e9\u9635\n    for(int i = 0;i <= 7;i ++) {\n        int tx = x + dir[i][0];\n        int ty = y + dir[i][1];\n        if(! inside(tx, ty)) continue;\n        a[x][y] = a[tx][ty], a[tx][ty] = '*';\n        if(nowDepth + check() <= maxDepth)\t//\u5982\u679c\u5f53\u524d\u7684\u6df1\u5ea6\u52a0\u4e0a\u6700\u4e50\u89c2\u7684\u60c5\u51b5\u90fd\u4f1a\u8d85\u8fc7\u9650\u5236\u6df1\u5ea6\u5219\u9000\u51fa\uff0c\u5426\u5219\u8fdb\u884c\u4e0b\u4e00\u5c42\u641c\u7d22\n            IDDFS(nowDepth + 1, maxDepth, tx, ty);\n        a[tx][ty] = a[x][y], a[x][y] = '*';\n        if(f) return ;\n    }\n}\n\nint main() {\n    scanf(\"%d\", &n);\n    while(n --) {\n        f = 0;\n        for(int i = 1;i <= 5;i ++) {\n            scanf(\"\\n\");\n            for(int j = 1;j <= 5;j ++)\n                scanf(\"%c\", &a[i][j]);\n        }\n        for(int i = 1;i <= 5;i ++)\n            for(int j = 1;j <= 5;j ++)\n                if(a[i][j] == '*')\n                    sx = i, sy = j;\n        for(int i = 0;i <= 15;i ++) {\n            IDDFS(0, i, sx, sy);\n            if(f) {\n                write(i, '\\n');\n                break;\n            }\n        }\n        if(! f)\n            puts(\"-1\");\n    }\n    return 0;\n}\n```\n# \u9898\u89e3\uff08\u53cc\u5411BFS\uff09\n\u6b63\u5411\u8d77\u70b9\u4e3a\u8d77\u59cb\u68cb\u76d8\uff0c\u53cd\u5411\u8d77\u70b9\u4e3a\u76ee\u6807\u68cb\u76d8\uff0c\u8fd9\u79cd\u65b9\u6cd5\u7684\u96be\u70b9\u5c31\u662f\u5224\u91cd\uff0c\u5982\u4f55\u786e\u5b9a\u5f53\u524d\u72b6\u6001\u662f\u5426\u88ab\u8bbf\u95ee\u8fc7\n\n\u7531\u4e8e\u9898\u76ee\u9664\u7a7a\u683c\u5916\u53ea\u6709\u4e24\u79cd\u68cb\u5b50\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u770b\u4f5c\u662f\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u8fdb\u884c\u7f16\u53f7\uff08\u9664\u53bb\u7a7a\u683c\u7684\u4f4d\u7f6e\uff09\uff0c\u7136\u540e\u7b97\u51fa\u5176\u5341\u8fdb\u5236\u7684\u503c\n\u4f46\u8fd9\u6837\u662f\u4f1a\u51fa\u73b0\u91cd\u590d\u60c5\u51b5\u7684\uff0c\u4f8b\u5982\u8fd9\u6837\u4e24\u4e2a\u68cb\u76d8\uff08*\u53f7\u75282\u4ee3\u66ff\uff09\uff1a\n$\\begin{bmatrix} 12111 \\\\ 11111\\\\ 11100\\\\ 00000\\\\ 00000\\end{bmatrix}$\u548c$\\begin{bmatrix}11211\\\\ 11111\\\\ 11100\\\\ 00000\\\\ 00000\\end{bmatrix}$\n\n\u56e0\u4e3a\u6211\u4eec\u7f16\u53f7\u662f\u4e0d\u7b97$2$\u7684\uff0c\u6240\u4ee5\u8fd9\u6837\u7b97\u51fa\u6765\u7684\u4e24\u4e2a\u6570\u5c31\u4f1a\u76f8\u540c\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u53e6\u5916\u5f00\u4e00\u7ef4\u6570\u7ec4\u6765\u8bb0\u5f55\u4e8c\u7684\u7f16\u53f7\n# \u4ee3\u7801\uff08\u53cc\u5411BFS\uff09\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <queue>\n#include <map>\nusing namespace std;\n\ntemplate <class T>\nT read() {\n    T x = 0; T f = 1; char s = getchar();\n    while(s < '0' || s > '9') {if(s == '-') f = -1; s = getchar();}\n    while(s >= '0' && s <= '9') {x = (x << 3) + (x << 1) + s - 48; s = getchar();}\n    return x * f;\n}\n\ntemplate <typename T>\nvoid wri(T x) {\n    if(x < 0) {x = -x; putchar('-');}\n    if(x / 10) wri(x / 10);\n    putchar(x % 10 + 48);\n}\n\ntemplate <typename T>\nvoid write(T x, char s) {\n    wri(x);\n    putchar(s);\n}\n\ntemplate <typename T>\nT Max(T x, T y) {return x > y ? x : y;}\n\ntemplate <typename T>\nT Min(T x, T y) {return x < y ? x : y;}\n\ntemplate <typename T>\nT Fabs(T x) {return x < 0 ? -x : x;}\n\ntemplate <typename T>\nvoid Swap(T &x, T &y) {T t = x; x = y, y = t;}\n\nstruct node {\n    int f, idxx, idxy;\n    int p[10][10];\n};\nnode start, goal;\n\nqueue <node> que;\n\nmap <int, bool> vis[2][30];\nmap <int, int> step[2][30];\n\nint n;\nint dir[8][2] = {{2, 1}, {2, -1}, {-2, 1}, {-2, -1}, {1, 2}, {1, -2}, {-1, 2}, {-1, -2}};\nchar s;\n\nint qkpow(int x, int y) {\n    int ret = 1;\n    while(y) {\n        if(y & 1)\n            ret = ret * x;\n        x = x * x;\n        y >>= 1;\n    }\n    return ret;\n}\n\nint getIdx(node x) {\t//\u6c42\u51fa\u7a7a\u683c\u7684\u4f4d\u7f6e\n    for(int i = 1;i <= 5;i ++)\n        for(int j = 1;j <= 5;j ++)\n            if(x.p[i][j] == 2)\n                return (i - 1) * 5 + j;\n    return 0;\n}\n\nint getHash(node x) {\t//\u5224\u91cdhash\n    int ret = 0, sum = 0;\n    for(int i = 1;i <= 5;i ++)\n        for(int j = 1;j <= 5;j ++) {\n            if(x.p[i][j] != 2) sum ++;\n            if(x.p[i][j] == 1) ret += qkpow(2, sum);\n        }\n    return ret;\n}\n\nbool inside(int x, int y) {\n    if(x < 1 || x > 5 || y < 1 || y > 5) return 0;\n    return 1;\n}\n\nint DWBFS() {\t//\u53cc\u5411BFS\n    que.push(start);\n    que.push(goal);\n    int idx1 = getIdx(start), idx2 = getIdx(goal);\n    int sum1 = getHash(start), sum2 = getHash(goal);\n    vis[start.f][idx1][sum1] = vis[goal.f][idx2][sum2] = 1;\n    while(! que.empty()) {\n        node t = que.front();\n        que.pop();\n        idx1 = getIdx(t);\n        sum1 = getHash(t);\n        if(vis[! t.f][idx1][sum1])\n            return step[t.f][idx1][sum1] + step[! t.f][idx1][sum1] <= 15 ? step[t.f][idx1][sum1] + step[! t.f][idx1][sum1] : -1;\n        for(int i = 0;i <= 7;i ++) {\n            node tmp = t;\n            tmp.idxx += dir[i][0];\n            tmp.idxy += dir[i][1];\n            if(! inside(tmp.idxx, tmp.idxy)) continue;\n            Swap(tmp.p[tmp.idxx][tmp.idxy], tmp.p[t.idxx][t.idxy]);\n            idx2 = getIdx(tmp);\n            sum2 = getHash(tmp);\n            if(! vis[tmp.f][idx2][sum2]) {\n                vis[tmp.f][idx2][sum2] = 1;\n                step[tmp.f][idx2][sum2] = step[t.f][idx1][sum1] + 1;\n                if(step[tmp.f][idx2][sum2] < 8)\n                    que.push(tmp);\n            }\n        }\n    }\n    return -1;\n}\n\nint main() {\n    goal.p[1][1] = goal.p[1][2] = goal.p[1][3] = goal.p[1][4] = goal.p[1][5] = goal.p[2][2] = goal.p[2][3] = goal.p[2][4] = goal.p[2][5] = goal.p[3][4] = goal.p[3][5] = goal.p[4][5] = 1, goal.p[3][3] = 2;\n    goal.f = 0, goal.idxx = 3, goal.idxy = 3;\n    scanf(\"%d\", &n);\n    while(n --) {\n        while(! que.empty()) que.pop();\n        for(int i = 0;i <= 1;i ++)\n            for(int j = 1;j <= 25;j ++)\n                vis[i][j].clear(), step[i][j].clear();\n        for(int i = 1;i <= 5;i ++) {\n            s = getchar();\n            for(int j = 1;j <= 5;j ++) {\n                s = getchar();\n                if(s == '*') {start.p[i][j] = 2, start.idxx = i, start.idxy = j;}\n                else start.p[i][j] = s - 48;\n            }\n        }\n        start.f = 1;\n        write(DWBFS(), '\\n');\n    }\n    return 0;\n}\n\n```",
        "postTime": 1563961711,
        "uid": 105150,
        "name": "PI_AC",
        "ccfLevel": 0,
        "title": "[IDDFS][\u53cc\u5411BFS] \u9a91\u58eb\u7cbe\u795e"
    },
    {
        "content": "\u4f18\u53161\u00b7 \u6bcf\u6b21\u8ba1\u7b97\u5f53\u524d\u72b6\u6001\u4e0e\u76ee\u6807\u72b6\u6001\u6709\u591a\u5c11\u4e2a\u70b9\u4e0d\u540c\uff08\u8bb0\u4e3ah\uff09\uff0c\u90a3\u4e48\u5982\u679c\uff08\u5df2\u8d70\u6b65\u6570t +h\uff09\u6bd415\u5927\u5f88\u591a\uff0c\u5c31\u526a\u6389\u8fd9\u79cd\u72b6\u6001\uff0c\u4f46\u4e00\u5b9a\u4e0d\u80fd\u5224\u65adt+h\uff1f<=15,\u56e0\u4e3a\u6709\u53ef\u80fd\u4e00\u6b65\u4f7f\u4e24\u4e2a\u70b9\u5f52\u4f4d\u3002\n\n------------\n\u4f18\u53162\u00b7 \u5728\u5e38\u91cf\u6570\u7ec4\u4e2d\u4f7f\u76f8\u53cd\u7684\u4e24\u6b65\u7684i\u52a0\u8d77\u6765=7\uff1b\u8fd9\u6837\u5c31\u53ef\u4ee5\u65b9\u4fbf\u5f97\u5224\u65ad\u8fd9\u4e00\u6b21\u662f\u4e0d\u662f\u91cd\u590d\u4e86\uff1b\n\n\u4f18\u53163\u00b7 ~~~~~~~\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int d[5][5]={1,1,1,1,1,\n                   0,1,1,1,1,\n\t\t\t\t   0,0,2,1,1,\n\t\t\t\t   0,0,0,0,1,\n\t\t\t\t   0,0,0,0,0},\n      dx[8]={1,1,2,2,-2,-2,-1,-1},\n      dy[8]={-2,2,-1,1,-1,1,-2,2};\nint i,j,k,n,m,t,a[6][6],h,x,y,ans;\nchar c[5];\nvoid dfs(int dep,int h,int x,int y,int la)\n{\n  if(!h&&dep<=15) {\n  \tans=min(ans,dep);\n  \texit;\n  }\n        int tx,ty,th;\n        for(int i=0;i<8;i++)\n        if(i+la!=7)\n        {\n        tx=dx[i]+x;\n\t\tty=dy[i]+y;\n\t\tif(tx>=0&&ty>=0&&tx<5&&ty<5)\n\t\t  {\n\t\t  \tth=h; int j1=0,j2=0;\n\t\t  \tif(a[x][y]^d[x][y]) j1=1;\n\t\t  \tif(a[tx][ty]^d[tx][ty]) j2=1;\n\t\t    swap(a[tx][ty],a[x][y]);\t\t    \n\t\t\tif(!(a[tx][ty]^d[tx][ty])) \n\t\t      {\n\t\t      \tif(j2) th--;\n\t\t\t  } else if(!j2) th++;\n\t\t\tif(!(a[x][y]^d[x][y])) \n\t\t\t  {\n\t\t\t  \tif(j1) th--;\n\t\t\t  } else if(!j1) th++;\n\t\t  \tif(dep+1+th<=17)\n\t\t  \t  dfs(dep+1,th,tx,ty,i);\n\t\t  \t  swap(a[tx][ty],a[x][y]);\n\t      }\n\t}\n\t  }\nint main()\n{\n\tscanf(\"%d\\n\",&t);\n\twhile(t)\n\t{\n\t\tans=2000000000;\n\t\th=0;\n\t    for(i=0;i<5;i++)\t\n\t\t {\t\t\t\t\t\t\t   \n\t\t   scanf(\"%s\",c);\n\t\tfor(j=0;j<5;j++)\n\t\t{\n\t\t   if(c[j]=='0') a[i][j]=0;\n\t\t     else if(c[j]=='1') a[i][j]=1;\n\t\t       else{\n\t\t\t    a[i][j]=2;\n\t\t\t    x=i;y=j;\n\t\t\t}\n\t\t\n\t\t       if(a[i][j]^d[i][j]) h++;\n\t\t   }\n  \t     }\n  \t     dfs(0,h,x,y,-1);\n  \t     if(ans==2000000000)\n  \t       ans=-1;\n  \t       printf(\"%d\\n\",ans);  \t      \n\t\tt--;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1518070839,
        "uid": 31898,
        "name": "\u738b\u73e9030115",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2324 \u3010[SCOI2005]\u9a91\u58eb\u7cbe\u795e\u3011"
    },
    {
        "content": "\u6211\u770b\u524d\u9762\u7684dalao\u4eec\u5199\u7684IDA* \u597d\u590d\u6742\u554a\uff0c\u6211\u60f3\uff0c\u65e2\u7136\u6211\u8fd8\u6ca1\u6709\u53d1\u8fc7IDA* \u7684\u9898\u89e3\uff0c\u90a3\u6211\u5c31\u6c34\u4e00\u7bc7\u5427\u3002\n\n### \u5206\u6790\u9898\u76ee\n\n\u770b\u5230\u8fd9\u9053\u9898\uff0c\u4f60\u7684\u5fc3\u91cc\u662f\u4e0d\u662f\u4e00\u4e0b\u5c31\u6d6e\u73b0\u51fa\u4e86\u90a3\u516b\u4e2a\u6ed1\u5757\u3002\n\n\u5176\u5b9e\u8fd9\u90fd\u662f\u4e00\u9053\u9898\u5566\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u662f\u52a0\u5f3a\u7248\u3002\n\n\u4ed6\u4eec\u7684\u5171\u540c\u70b9\u5c31\u662f\u5728\u8d70\u4e00\u5b9a\u6b65\u6570\u540e\u6700\u540e\u7684\u72b6\u6001\u4e00\u5b9a\u76f8\u540c\u3002\n\n\u95ed\u4e0a\u773c\u775b\u60f3\u60f3\u2014\u2014\u76f8\u540c\u7684\u7ed3\u5c40\uff0c\u4e00\u5b9a\u7684\u6b65\u6570.....\n\n\u90a3\u8fd9\u65f6\u6211\u4eec\u5c31\u60f3\u5230\u4e86IDA* \u8fa3\uff01\n\n~~\u5176\u5b9e\u6211\u662f\u770b\u4e86\u7b97\u6cd5\u6807\u7b7e\u624d\u77e5\u9053\u7684\u4f46\u8fd9\u4e0d\u91cd\u8981~~\n\n### IDA* \u7b97\u6cd5\n\n\u600e\u4e48\u8bf4\u5462\uff0c\u4f5c\u8005\u5176\u5b9e\u662f\u4e2a\u5c0f\u849f\u84bb\uff0c\u53ea\u4f1a\u501f\u7740\u677f\u5b50\u6253IDA* \u7684\u9898\u3002\n\n\u6240\u4ee5\u8fd9\u91cc\u5c31\u4e0d\u8bb2A* \u7b97\u6cd5\u4e86\uff0c\u5177\u4f53\u53ef\u4ee5\u767e\u5ea6\u4e00\u4e0b\u3002\n\n\u800c\u6211\u4eec\u4eca\u5929\u8981\u8bb2\u7684IDA* \u662fA* \u7684\u6539\u8fdb\u7248\uff0c\u4e3b\u8981\u9002\u7528\u4e8e\u8981\u8ba1\u7b97\u6b65\u6570\u7684\u9898\u76ee\u3002IDA* \u4e0eA* \u7684\u533a\u522b\u4fbf\u5728\u4e8e\u628aA* \u7684bfs\u7b97\u6cd5\u6539\u4e3adfs\u7b97\u6cd5,\u7136\u540e\u5728\u4e3b\u51fd\u6570\u91cc\u9762\u679a\u4e3edfs\u6df1\u5ea6,\u4e5f\u5c31\u662f\u9898\u76ee\u4e2d\u7684\u6b65\u6570\u3002\n\n\u800cIDA* \u4f18\u5316dfs\u7684\u65b9\u6cd5\u662f\u4ec0\u4e48\u5462\uff1f\n\n\u6ca1\u9519\uff01\u5c31\u662f\u5224\u65ad\u53ef\u884c\u6027\uff08\u9ad8\u7ea7\u53ef\u884c\u6027\u526a\u679d\uff09\n\n### IDA* \u7684\u53ef\u884c\u6027\u526a\u679d\n\n\u6309\u8fd9\u9053\u9898\u6765\u8bf4\uff0c\u6211\u4eec\u8981\u5224\u65ad\u7684\u5c31\u662f\u6211\u4eec\u5728\u5df2\u77e5\u7684\u6b65\u6570\u5185\u80fd\u4e0d\u80fd\u8fbe\u5230\u6211\u4eec\u7684\u76ee\u6807\u3002\n\n\u6211\u4eec\u628a\u6240\u6709\u70b9\u5224\u65ad\u4e00\u904d\uff0c\u5728\u6bcf\u6b21\u64cd\u4f5c\u4e4b\u540e\uff0c\u6ca1\u6709\u5230\u6307\u5b9a\u4f4d\u7f6e\u7684\u68cb\u5b50\u4e00\u5b9a\u8981\u5c0f\u4e8e\u5269\u4e0b\u7684\u6b65\u6570\uff0c\u4e0d\u7136\u7684\u8bdd\uff0c\u5269\u4f59\u7684\u6b65\u6570\u662f\u4e00\u5b9a\u4e0d\u8db3\u4ee5\u5b8c\u6210\u9a91\u58eb\u7684\u5f52\u4f4d\u7684\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff1a\n\n```\n11011\n011*1\n01111\n00000\n00100\n```\n\u6211\u4eec\u968f\u673a\u751f\u6210\u4e00\u4e2a\u68cb\u76d8\uff0c\u53ef\u4ee5\u770b\u5230\uff0c\u5b83\u4e0e\u6700\u7ec8\u7684\u68cb\u76d8\uff08\u5982\u4e0b\uff09\n\n```\n11111\n01111\n00*11\n00001\n00000\n```\n\u4e0d\u4e00\u6837\u7684\u67096\u4e2a\u70b9\n\n```\n//o\u8868\u793a\u76f8\u540c x\u8868\u793a\u4e0d\u540c\n\nooxoo\noooxo\noxxoo\noooox\nooxoo\n```\n\u6240\u4ee5\uff0c\u8981\u590d\u539f\u8fd9\u4e2a\u68cb\u76d8\uff0c\u5728\u5ffd\u7565\u9a91\u58eb\u7684\u8d70\u68cb\u89c4\u5219\u7684\u60c5\u51b5\u4e0b\uff0c\u4e5f\u9700\u89816\u6b65\u3002\n\n\u8fdb\u800c\u6211\u4eec\u5c31\u53ef\u4ee5\u77e5\u9053\uff0c\u5728\u6bcf\u4e00\u6b21\u64cd\u4f5c\u540e\uff0c\u6211\u4eec\u5224\u5b9a\u4e00\u4e0b\u8fd9\u4e00\u6b65\u8d70\u540e\u6211\u4eec\u8fd8\u6709\u6ca1\u6709\u53ef\u80fd\u5728\u4e3b\u51fd\u6570\u4e2d\u89c4\u5b9a\u7684\u6b65\u6570\u590d\u539f\u3002\n\n\u5224\u5b9a\u65b9\u5f0f\uff1a\n\n```cpp\nint test(int step)//step\u4ee3\u8868\u5df2\u7ecf\u8d70\u8fc7\u7684\u6b65\u6570\n{\n\tint pd=0;//pd\u4ee3\u8868\u6709\u51e0\u4e2a\u70b9\u4e0d\u4e00\u6837\n\tfor(int i=1;i<=5;i++)\n\tfor(int j=1;j<=5;j++)\n\tif(a[i][j]!=ans[i][j])//\u5982\u679c\u8fd9\u4e2a\u70b9\u4e0d\u540c\n\tif(++pd+step>k)//pd\u6bcf\u6b21\u52a0\u4e00\uff0ck\u662f\u89c4\u5b9a\u6b65\u6570\uff0c\u5982\u679c\u4e0d\u540c\u7684\u70b9\u7684\u603b\u6570+\u5df2\u8d70\u6b65\u6570>\u89c4\u5b9a\u6b65\u6570\uff0c\u90a3\u4e00\u5b9a\u5b8c\u4e0d\u6210\u4e86\u3002\n\treturn 0;//\u4e0d\u5408\u6cd5\n\treturn 1;//\u5408\u6cd5\n}\n```\n### dfs\u7684\u65b9\u5f0f\uff08\u6700\u91cd\u8981\u7684\u603b\u8981\u653e\u5230\u6700\u540e\uff09\n\n\u56e0\u4e3aIDA* \u662fA* \u7684\u6539\u8fdb\u7248\uff0c\u6240\u4ee5\u5176\u5b9e\u5c31\u662f\u5728dfs\u7684\u51fd\u6570\u4e2d\u653e\u4e0abfs\u7684\u4ee3\u7801\uff0c\u4f46\u653e\u5728\u51fd\u6570\u4e2d\u6709\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u597d\u5904\u90a3\u5c31\u662f\u6211\u4eec\u53ef\u4ee5\u8f7b\u677e\u5730\u5728\u4efb\u610f\u7684\u51e0\u6b21\u64cd\u4f5c\u4e4b\u95f4~~\u53cd\u590d\u6a2a\u8df3~~\u3002\u800c\u4e14\uff0cbfs\u662f\u6ca1\u6709\u6240\u8c13\u526a\u679d\u7684\uff0c\u4f18\u5316\u7684\u65b9\u6cd5\u4e5f\u975e\u5e38\u96be\u7406\u89e3\uff08\u81f3\u5c11\u672c\u849f\u84bb\u662f\u8fd9\u4e48\u60f3\u7684\uff09\n\n\u6240\u4ee5\u5f53\u4f60\u770b\u5230\u4e0b\u9762\u7684\u4ee3\u7801\u65f6\uff0c\u4f60\u53ef\u80fd\u4f1a\u8df3\u8d77\u6765\uff1a\u201c\u8fd9\u4e0d\u5c31\u662fbfs\u5417\uff01\u201d\u8bf7\u6309\u637a\u4f4f\u8fd9\u79cd\u51b2\u52a8\uff0c\u4e0d\u7136\u53ef\u80fd\u4f1a\u5413\u5230\u65c1\u8fb9\u9893\u5e9f\u7684\u540c\u5b66\u3002\n\n```cpp\nint check()\n{\n\tfor(int i=1;i<=5;i++)\n\tfor(int j=1;j<=5;j++)\n\tif(a[i][j]!=ans[i][j])\n\treturn 0;\n\treturn 1;\n}\nvoid Astar(int step,int x,int y,int pre)//step\u6307\u8d70\u5230\u54ea\u4e00\u6b65\u4e86\uff0cx\u3001y\u6307\u7684\u7a7a\u4f4d\u7684\u5750\u6807\uff0cpre\u6307\u7684\u4e0a\u4e00\u6b65\u7684\u64cd\u4f5c\u662f\u54ea\u4e00\u79cd\n{\n\tif(step==k)//\u5df2\u7ecf\u8d70\u4e86\u89c4\u5b9a\u6b65\u6570\n\t{\n\t\tif(check())//\u5982\u679c\u73b0\u5728\u68cb\u76d8\u5df2\u7ecf\u590d\u539f\n\t\t{\n\t\t\tvv=1;//\u8868\u793a\u627e\u5230\u4e86\n\t\t\treturn;\n\t\t}\n\t}\n\tfor(int i=0;i<8;i++)\n\t{\n\t\tint tx=x+ne[i][0];//\u4e0b\u4e00\u6b65\u7684\u5750\u6807\n\t\tint ty=y+ne[i][1];\n\t\tif(tx<1||tx>5||ty<1||ty>5||pre+i==7)//\u4e00\u4e2a\u51e0\u4e4e\u6240\u6709bfs\u90fd\u6709\u7684\u4e1c\u897f\uff08\u6700\u540e\u4e00\u4e2a\u7684\u4f5c\u7528\u662f\u9632\u6b62\u8d70\u4e0a\u4e00\u4e2a\u64cd\u4f5cps\uff1a\u8fd9\u4e2a\u53ef\u4ee5\u4f53\u73b0\u5728\u5b9a\u4e49ne\u6570\u7ec4\u7684\u65f6\u5019\uff09\n\t\tcontinue;\n\t\tswap(a[x][y],a[tx][ty]);//\u64cd\u4f5c\n\t\tif(test(step)&&!vv)\n\t\t{\n\t\t\tAstar(step+1,tx,ty,i);//\u8d70\u4e0b\u4e00\u6b65\n\t\t}\n\t\tswap(a[x][y],a[tx][ty]);//\u56de\u6eaf\n\t}\n\treturn;\n}\n```\n\u7136\u540e\u4fbf\u662f\u4e3b\u51fd\u6570\n\n### \u4e3b\u51fd\u6570\n\n\u6211\u61d2\u5f97\u8bb2\n\n## AC\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint k;\nchar ch[10];\nint a[10][10],x,y,t=0,vv;\nint ans[6][6]={{0,0,0,0,0,0},{0,1,1,1,1,1},{0,0,1,1,1,1},{0,0,0,2,1,1},{0,0,0,0,0,1},{0,0,0,0,0,0}};//\u590d\u539f\u540e\u7684\u68cb\u76d8\nint ne[8][2]={{1,2},{1,-2},{2,1},{-2,1},{2,-1},{-2,-1},{-1,2},{-1,-2}};//\u516b\u79cd\u8d70\u6cd5\nmap<int,int> mapa;\nmap<int,int>::iterator iter;\nint check()\n{\n\tfor(int i=1;i<=5;i++)\n\tfor(int j=1;j<=5;j++)\n\tif(a[i][j]!=ans[i][j])\n\treturn 0;\n\treturn 1;\n}\nint test(int step)//step\u4ee3\u8868\u5df2\u7ecf\u8d70\u8fc7\u7684\u6b65\u6570\n{\n\tint pd=0;//pd\u4ee3\u8868\u6709\u51e0\u4e2a\u70b9\u4e0d\u4e00\u6837\n\tfor(int i=1;i<=5;i++)\n\tfor(int j=1;j<=5;j++)\n\tif(a[i][j]!=ans[i][j])//\u5982\u679c\u8fd9\u4e2a\u70b9\u4e0d\u540c\n\tif(++pd+step>k)//pd\u6bcf\u6b21\u52a0\u4e00\uff0ck\u662f\u89c4\u5b9a\u6b65\u6570\uff0c\u5982\u679c\u4e0d\u540c\u7684\u70b9\u7684\u603b\u6570+\u5df2\u8d70\u6b65\u6570>\u89c4\u5b9a\u6b65\u6570\uff0c\u90a3\u4e00\u5b9a\u5b8c\u4e0d\u6210\u4e86\u3002\n\treturn 0;//\u4e0d\u5408\u6cd5\n\treturn 1;//\u5408\u6cd5\n}\nvoid Astar(int step,int x,int y,int pre)//step\u6307\u8d70\u5230\u54ea\u4e00\u6b65\u4e86\uff0cx\u3001y\u6307\u7684\u7a7a\u4f4d\u7684\u5750\u6807\uff0cpre\u6307\u7684\u4e0a\u4e00\u6b65\u7684\u64cd\u4f5c\u662f\u54ea\u4e00\u79cd\n{\n\tif(step==k)//\u5df2\u7ecf\u8d70\u4e86\u89c4\u5b9a\u6b65\u6570\n\t{\n\t\tif(check())//\u5982\u679c\u73b0\u5728\u68cb\u76d8\u5df2\u7ecf\u590d\u539f\n\t\t{\n\t\t\tvv=1;//\u8868\u793a\u627e\u5230\u4e86\n\t\t\treturn;\n\t\t}\n\t}\n\tfor(int i=0;i<8;i++)\n\t{\n\t\tint tx=x+ne[i][0];//\u4e0b\u4e00\u6b65\u7684\u5750\u6807\n\t\tint ty=y+ne[i][1];\n\t\tif(tx<1||tx>5||ty<1||ty>5||pre+i==7)//\u4e00\u4e2a\u51e0\u4e4e\u6240\u6709bfs\u90fd\u6709\u7684\u4e1c\u897f\uff08\u6700\u540e\u4e00\u4e2a\u7684\u4f5c\u7528\u662f\u9632\u6b62\u8d70\u4e0a\u4e00\u4e2a\u64cd\u4f5cps\uff1a\u8fd9\u4e2a\u53ef\u4ee5\u4f53\u73b0\u5728\u5b9a\u4e49ne\u6570\u7ec4\u7684\u65f6\u5019\uff09\n\t\tcontinue;\n\t\tswap(a[x][y],a[tx][ty]);//\u64cd\u4f5c\n\t\tif(test(step)&&!vv)\n\t\t{\n\t\t\tAstar(step+1,tx,ty,i);//\u8d70\u4e0b\u4e00\u6b65\n\t\t}\n\t\tswap(a[x][y],a[tx][ty]);//\u56de\u6eaf\n\t}\n\treturn;\n}\nint main()\n{\n\tint t;\n\tscanf(\"%d\",&t);\n\tfor(int l=1;l<=t;l++)\n\t{\n\t\tk=0;\n\t\tvv=0;\n\t\tfor(int i=1;i<=5;i++)\n\t\t{\n\t\t\tscanf(\"%s\",ch+1);\n\t\t\tfor(int j=1;j<=5;j++)\n\t\t\t{\n\t\t\t\ta[i][j]=ch[j]-'0';\n\t\t\t\tif(ch[j]=='*')//\u5982\u679c\u662f\u7a7a\u4f4d\u8bb0\u5f55\u4e3a2\n\t\t\t\tx=i,y=j,a[i][j]=2;\n\t\t\t}\n\t\t}\n\t\tif(check())//\u5224\u65ad\u7279\u6b8a\u60c5\u51b5->\u4e0d\u7528\u590d\u539f\n\t\t{\n\t\t\tprintf(\"0\\n\");\n\t\t\tbreak;\n\t\t}\n\t\twhile(++k)//\u89c4\u5b9a\u8d70k\u6b65\n\t\t{\n\t\t\tAstar(0,x,y,-1);\n\t\t\tif(k>15)//\u8d85\u8fc715\u6b65\n\t\t\t{\n\t\t\t\tprintf(\"-1\\n\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(vv)\n\t\t\t{\n\t\t\t\tprintf(\"%d\\n\",k);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n```\n\u4e0d\u8981\u76f4\u63a5\u6284\uff0c\u4ee3\u7801\u91cc\u9762\u6709\u5751\uff0c\u4e13\u95e8\u85cf\u7684\uff08\u6211\u81ea\u5df1\u90fd\u4e0d\u4fe1\uff09\n\n# \u4f60\u5df2\u7ecf\u88ab\u8b66\u544a\u8fc7\u4e86\n\n$\\textsf{\\color{#8B6914}\\small{\u6284\u4e86\u6211\u4ee3\u7801\u7684\u4f60 }\\color{white}\\scriptsize{\\colorbox{#8B6914}{ \u4f5c\u5f0a\u8005 }}}$",
        "postTime": 1566813601,
        "uid": 116375,
        "name": "mdzzzzzzzzzz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2324 \u3010[SCOI2005]\u9a91\u58eb\u7cbe\u795e\u3011"
    }
]