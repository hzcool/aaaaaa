[
    {
        "content": "\u3010\u9898\u610f\u7b80\u8ff0\u3011\n\n\u7ed9\u51fa\u4e24\u4e2a\u6570$a,b$\uff0c\u6c42\u51fa$[a,b]$\u4e2d\u5404\u4f4d\u6570\u5b57\u4e4b\u548c\u80fd\u6574\u9664\u539f\u6570\u7684\u6570\u7684\u4e2a\u6570\u3002\n\n\u3010\u5206\u6790\u3011\n\n\u663e\u7136\u8fd9\u5c31\u662f\u6570\u4f4ddp\u5440\n\n\u6211\u4eec\u7528\u8bb0\u641c\u7684\u6a21\u677f\u8fdb\u884c\u6570\u4f4ddp\n\n\u4e0d\u4e86\u89e3\u8bb0\u641c\u6846\u67b6\u4e0b\u7684\u6570\u4f4ddp\u7684\u8bdd\u6233[\u8fd9\u91cc](https://www.luogu.org/blog/virus2017/shuweidp)\n\n\u597d\u4e86\u6211\u4eec\u5f00\u59cb\u672c\u9898\n\n\u8fd9\u4e2a\u95ee\u9898\u7684\u8bb0\u641c\u8fc7\u7a0b\u5f88\u7b80\u5355\uff1a\n\n1. \u8bb0\u5f55$pos,sum$(\u6570\u5b57\u5404\u4f4d\u4e0a\u7684\u6570\u7684\u548c),$st$(\u539f\u6570),limit\n1. \u8f6c\u79fb\uff1a$dfs ( pos+1, sum+i , st*10+i , i==res\\&\\&limit )$\n1. \u7ed3\u675f\u8fd4\u56de\uff1a\u641c\u5b8c\u4e4b\u540e\u5982\u679c$st\\%sum=0$\u5c31\u8fd4\u56de1\u5426\u5219\u8fd4\u56de0\n\n\u8fd9\u6837\u641c\u7d22\u6846\u67b6\u5b8c\u6210\n\n\u73b0\u5728\u5173\u952e\u7684\u95ee\u9898\u662f\uff1a\u600e\u6837\u8bb0\u5f55dp\u72b6\u6001\uff1f\n\n\u8fd9\u91cc$st$\u53ef\u8fbe\u5230$\\text{1e18}$\u663e\u7136\u662f\u4e0d\u80fd\u4f5c\u4e3adp\u8f6c\u79fb\u7684\u4e0b\u6807\u76f4\u63a5\u8bb0\u5f55\u7684\n\n\u6240\u4ee5\u6211\u4eec\u8003\u8651**\u53d6\u6a21**\n\n\u6211\u4eec\u6700\u7406\u60f3\u7684\u6a21\u6570\u5f53\u7136\u662f\u628a\u6bcf\u6b21**\u641c\u5230\u6700\u540e\u5f97\u5230\u7684\u6570\u5b57\u5404\u4e2a\u4f4d\u6570\u4e4b\u548c**\n\n\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d$sum$\u662f\u53d1\u751f\u53d8\u5316\u7684\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u5e94\u8be5\u4ee5**\u4e00\u4e2a\u5b9a\u503c**\u4f5c\u4e3a\u6a21\u6570\n\n\u90a3\u597d\uff0c\u6211\u4eec\u867d\u7136\u4e0d\u77e5\u9053\u6700\u540e\u5404\u4f4d\u4e4b\u548c\u7684\u7ed3\u679c\uff0c\u6211\u4eec**\u679a\u4e3e**\u603b\u53ef\u4ee5\u5427\n\n\u6211\u4eec\u53ea\u9700\u8981**\u679a\u4e3e\u6240\u6709\u7684\u5404\u4f4d\u6570\u5b57\u4e4b\u548c**\u4f5c\u4e3a\u6a21\u6570\n\n\u6700\u540e\u5224\u65ad$sum$\u548c\u679a\u4e3e\u7684$mod$\u76f8\u7b49\u5e76\u4e14$st\\%sum=0$\u7684\u6570\u5c31\u662f\u7b26\u5408\u9898\u610f\u7684\u7b54\u6848\n\n\u4e0a\u4ee3\u7801\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nll l,r,dp[20][200][200];\nint len,a[20],mod;\nll dfs(int pos,int sum,ll st,int limit)\n{\n\tif(pos>len&&sum==0) return 0;\n\tif(pos>len) return st==0&&sum==mod?1:0;\n\tif(!limit&&dp[pos][sum][st]!=-1) return dp[pos][sum][st];\n\tll ret=0;\n\tint res=limit?a[len-pos+1]:9;\n\tfor(int i=0;i<=res;i++)\n\t\tret+=dfs(pos+1,sum+i,(10ll*st+i)%mod,i==res&&limit);\n\treturn limit?ret:dp[pos][sum][st]=ret;\n}\nll part(ll x)\n{\n\tlen=0;\n\twhile(x) a[++len]=x%10,x/=10;\n\tll ret=0;\n\tfor(mod=1;mod<=9*len;mod++)//\u679a\u4e3e\u6a21\u6570\uff08\u5c31\u662f\u5404\u4f4d\u6570\u4e4b\u548c\uff09\n\t{\n\t\tmemset(dp,-1,sizeof dp);\n\t    ret+=dfs(1,0,0,1);\n\t}\n\treturn ret;\n}\nint main()\n{\n    scanf(\"%lld%lld\",&l,&r);\n    printf(\"%lld\\n\",part(r)-part(l-1));\n\treturn 0;\n}\n\n```",
        "postTime": 1540216233,
        "uid": 74896,
        "name": "Mathison",
        "ccfLevel": 0,
        "title": "P4127 \u540c\u7c7b\u5206\u5e03\u3010\u6570\u4f4ddp\u3011"
    },
    {
        "content": "\u770b\u8d77\u6765\u9898\u89e3\u90fd\u662f\u7528\u8bb0\u5fc6\u5316\u6df1\u641c\u505a\u7684\uff0c\u672c\u849f\u84bb\u5728\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e2a\u9012\u63a8\u7684\u5b9e\u73b0\u3002\u672c\u8d28\u662f\u4e00\u6837\u7684\uff0c\u4e0d\u8fc7\u4e00\u4e2a\u5927\u4f6c\u544a\u8bc9\u6211\u8bb0\u5fc6\u5316\u6df1\u641c\u7684\u5e38\u6570\u6bd4\u9012\u63a8\u59273-4\u500d\u5de6\u53f3\u3002\u7136\u800c\u6211\u5b9e\u5728\u662f\u592a\u83dc\u4e86\uff0c\u6211\u5199\u7684\u9012\u63a8\u5e76\u6ca1\u6709\u6bd4\u5404\u4f4d\u7684\u6df1\u641c\u5feb\u5230\u54ea\u53bb\u3002\n\n\u72b6\u6001\u57fa\u672c\u4e0a\u8ddf\u524d\u9762\u8bf4\u7684\u57fa\u672c\u4e00\u6837\uff0c\u679a\u4e3e\u6570\u4f4d\u548c sum\uff0cf[i][s][m][0/1] \u524di\u4f4d\uff0c\u548c\u4e3as\uff0c\u8fd9\u4e2a\u6570%sum=m\uff0c0\u8868\u793a\u6ca1\u5361\u4e0a\u754c\uff0c1\u8868\u793a\u5361\u4e86\u4e0a\u754c\u3002\n\n\u5199\u6570\u4f4ddp\u7684\u65f6\u5019\uff0c\u6211\u4e60\u60ef\u8003\u8651\u4ece\u5f53\u524d\u72b6\u6001\u8fdb\u884c\u62d3\u5c55\uff0c\u4e5f\u5c31\u662f\u6240\u8c13\u7684\u5237\u8868\u3002\u4ee3\u7801\u5982\u4e0b\u3002\n\n```cpp\n// C++11\n#include <cctype>\n#include <cstdio>\n#include <climits>\n#include <algorithm>\n#include <cstring>\n\ntemplate <typename T> inline void read(T& t) {\n    int f = 0, c = getchar(); t = 0;\n    while (!isdigit(c)) f |= c == '-', c = getchar();\n    while (isdigit(c)) t = t * 10 + c - 48, c = getchar();\n    if (f) t = -t;\n}\ntemplate <typename T, typename... Args>\ninline void read(T& t, Args&... args) {\n    read(t); read(args...);\n}\n\n#define rep(I, A, B) for (int I = (A); I <= (B); ++I)\n#define rrep(I, A, B) for (int I = (A); I >= (B); --I)\n\n// \u679a\u4e3e\u6570\u4f4d\u548c sum\n// f[i][s][m][c] \u524di\u4f4d\uff0c\u548c\u4e3as\uff0c\u8fd9\u4e2a\u6570%sum=m\uff0cc\u8868\u793a\u5361\u6ca1\u5361\u4e0a\u754c\u3002\nlong long f[20][200][200][2];\nint bit[20];\nlong long a, b;\n\ninline long long solve(long long N) {\n    int n = 0;\t// \u8fd9\u4e2an\u662fN\u7684\u4f4d\u6570\n    // \u5148\u5206\u89e3N\u7684\u6bcf\u4e00\u4f4d\n    while (N) bit[++n] = N % 10, N /= 10;\n    std::reverse(bit + 1, bit + n + 1);\n    long long ans = 0;\n    // \u679a\u4e3e\u8fd9\u4e2a\u6570\u7684\u6570\u4f4d\u4e4b\u548c\n    for (int sum = 1; sum <= n * 9; ++sum) {\n        memset(f, 0, sizeof(f));\n        f[0][0][0][1] = 1;\n        rep(i, 0, n - 1) rep(s, 0, sum) rep(m, 0, sum - 1) rep(c, 0, 1) {\n            long long res = f[i][s][m][c];\n            if (!res) continue;\n            // \u5982\u679c\u73b0\u5728\u5361\u7740\u4e0a\u754c\u4e86\uff0c\u90a3\u4e48\u4e0b\u4e00\u4f4d\u5c31\u4e0d\u80fd\u8d85\u8fc7\u539f\u6570\u5bf9\u5e94\u7684\u90a3\u4e00\u4f4d\u3002\u5982\u679c\u6ca1\u5361\u5c31\u53ef\u4ee5\u4ece0\u52309\u679a\u4e3e\n            rep(k, 0, (c ? bit[i + 1] : 9)) {\n                if (s + k > sum)\n                    break;\n                else\n                    f[i + 1][s + k][(m * 10 + k) % sum][c & (k == bit[i + 1])] += res;\n            }\n        }\n        ans += f[n][sum][0][0] + f[n][sum][0][1];\n    }\n    return ans;\n}\n\nint main() {\n    read(a, b);\n    printf(\"%lld\\n\", solve(b) - solve(a - 1));\n    return 0;\n}\n```\n\n\u4e2a\u4eba\u8ba4\u4e3a\u8fd9\u79cd\u9012\u63a8\u7684\u5199\u6cd5\u6bd4\u6df1\u641c\u7684\u8981\u597d\u7406\u89e3\u3002\uff08\u5176\u5b9e\u662f\u6211\u641c\u7d22\u7684\u6c34\u5e73\u592a\u83dc\u4e86\u3002\uff09",
        "postTime": 1532620712,
        "uid": 72071,
        "name": "GKxx",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4127 \u3010[AHOI2009]\u540c\u7c7b\u5206\u5e03\u3011"
    },
    {
        "content": "## \u6807\u51c6\u6570\u4f4dDP\n\n\u91c7\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u7684\u65b9\u5f0f\uff0c\u5927\u9898\u601d\u8def\u5176\u4ed6\u7684\u5927\u4f6c\u5df2\u7ecf\u8bb2\u5f97\u6bd4\u8f83\u6e05\u6670\u4e86\uff0c\u6211\u8fd9\u91cc\u63d0\u4f9b\u4e24\u4e2a\u5c0f\u4f18\u5316\u3002\n\n\u5c31\u662f\u5f00\u4e00\u4e2a\u6570\u7ec4$f[len,sum,rem]$\u8868\u793a\u8fd8\u6709len\u4f4d\u6570\u5b57\u8fd8\u6ca1\u6709\u786e\u5b9a\uff0c\u5f53\u524d\u6240\u6709\u6570\u4f4d\u548c\u4e3a$sum$\uff0c\u6a21\u5404\u6570\u4f4d\u548c\u7684\u4f59\u6570\u662f$rem$\u3002\n\n\u6ce8\u610f\u8fd9\u91cc\u7684\u6a21\u7684\u5404\u6570\u4f4d\u4e4b\u548c\u662f\u6574\u4e2a\u6570\u786e\u5b9a\u4e4b\u540e\u7684\u5404\u6570\u4f4d\u548c\uff0c\u8fd9\u4e2a\u503c\u9700\u8981\u5728\u6700\u5916\u5c42\u679a\u4e3e\uff0c\u7136\u540e\u518d$dfs$\u3002\n\n\u53e6\u5916\u5c31\u662f\u9700\u8981\u989d\u5916\u6ce8\u610f$limit$\uff0c\u8868\u793a\u5f53\u524d\u72b6\u6001\u679a\u4e3e\u51fa\u6765\u7684\u6570\u662f\u5426\u4e0e\u4e0a\u9650\u4e00\u6837\u3002\n\n\u672c\u9898\u65f6\u9650\u7ef0\u7ef0\u6709\u4f59 ~~\u5373\u4f7f\u65f6\u9650\u672a\u6539\u62103s~~\n\n\u5199\u8bb0\u5fc6\u5316\u7684\u4eba\u53ea\u8981\u50cf\u6df1\u641c\u4e00\u6837\u52a0\u51e0\u4e2a\u526a\u679d\u5c31\u884c\u4e86\uff1a\n\n1. \u5224\u65ad\u4e00\u4e0b\u672a\u586b\u7684\u6570\u90fd\u662f9\u80fd\u5426\u5230\u8fbe\u6570\u5b57\u548c\uff0c\u4e0d\u80fd\u5c31return 0\n\n1. \u5728\u679a\u4e3e\u672c\u4f4d\u586b\u7684\u6570i\u65f6\uff0c\u4fdd\u8bc1sum+i<=mod\uff0c\u5426\u5219\u4e4b\u540e\u7684\u4e00\u5b9a\u4e0d\u7b26\u5408\u60c5\u51b5\n\n\u8fd9\u4e24\u4e2a\u5c0f\u4f18\u5316\u4f7f\u6211\u7684\u7a0b\u5e8f\u65f6\u95f4\u4e3a\u539f\u6765\u76841/5\u5de6\u53f3\n\n\u603b\u65f6\u95f4888ms\uff0c[\u8bc4\u6d4b\u8bb0\u5f55](https://www.luogu.com.cn/record/31659525)\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\uff08\u7565\u6709\u538b\u884c\uff0c\u4e0d\u559c\u52ff\u55b7\uff09\n\n```cpp\n#include<bits/stdc++.h>\n#define rint register int\nusing namespace std;\ntypedef long long ll;\nll n,m,f[19][163][163];//\u957f\u5ea6,\u5404\u4f4d\u6570\u5b57\u548c,\u4f59\u6570 \nint s[20],mod;\ninline ll dfs(int len,int sum,int rem,int limit) {\n\tif(sum+9*len<mod) return 0;\n\tif(!limit&&f[len][sum][rem]!=-1) return f[len][sum][rem];\n\tif(!len) return sum==mod&&rem==0;\n\trint maxn=limit?s[len]:9;\n\tregister ll res=0;\n\tfor(rint i=0;i<=maxn&&i+sum<=mod;i++) \n\t\tres+=dfs(len-1,sum+i,(rem*10+i)%mod,limit&(i==s[len]));\n\tif(!limit) f[len][sum][rem]=res;\n\treturn res;\n} \ninline ll calc(ll x) {\n\trint len=0;\n\twhile(x) s[++len]=x%10,x/=10;\n\tregister ll ans=0;\n\tfor(mod=1;mod<=len*9;mod++) {\n\t\tmemset(f,0xff,sizeof f);\n\t\tans+=dfs(len,0,0,1);\n\t}\n\treturn ans;\n}\nint main() {\n//\tfreopen(\"a.in\",\"r\",stdin);\n\tscanf(\"%lld%lld\",&n,&m);\n\tprintf(\"%lld\",calc(m)-calc(n-1));\n    return 0;\n}\n```\n\u6700\u540e\u9644\u4e0a\u4e00\u7ec4\u5927\u6570\u636e(\u4e5f\u5c31\u662f\u6700\u5927\u8303\u56f4)\uff1a\n\n1 1000000000000000000\n\n29410615796612778\n\n\u5f53\u7136\u7528\u9012\u63a8\u5e94\u8be5\u8dd1\u7684\u66f4\u5feb\uff0c\u4e0d\u8fc7\u8bb0\u5fc6\u5316\u8fd8\u662f\u5f88\u597d\u5199\u7684\u3002\n\n\u5e0c\u671b\u80fd\u5e2e\u5230\u5927\u5bb6\u3002\n",
        "postTime": 1584008736,
        "uid": 121563,
        "name": "\u5149\u660e\u6b63\u5927",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4127 \u3010[AHOI2009]\u540c\u7c7b\u5206\u5e03\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u7bc7\u6709\u4e9b\u8d56\u76ae\u7684\u9898\u89e3\n\n\uff08\u5982\u679c\u4e0d\u8d56\u76ae\u7684\u8bdd\uff0cbzoj\u4e0a\u4e5f\u662f\u80fd\u5361\u8fc7\u53bb\u7684\uff09\n\n\u9996\u5148\u7531\u4e8e\u6211\u8fd9\u4e2a\u975e\u5e38$sb$\u7684\u65b9\u6cd5\u590d\u6742\u5ea6\u9ad8\u8fbe$O(171^4)$\uff0c\u6240\u4ee5\u9762\u5bf9\u6781\u9650\u7684$1e18$\u7684\u6570\u636e\u5b9e\u5728\u662f\u5361\u6b7b\u4e86\n\n\u4f46\u662f\u8fd9\u4e2a\u65f6\u5019\u53ef\u4ee5\u9a97\u4e00\u4e0b\n\n\u4e00\u822c\u6765\u8bf4\u80af\u5b9a\u4f1a\u6709\u4e00\u4e2a\u70b9\u7684\u6570\u636e\u5230\u8fbe\u4e86$1e18$\uff0c\u6240\u4ee5\u6211\u4eec\u5148\u5c06$1$\u5230$1e18$\u4e4b\u95f4\u7684\u7b54\u6848\u7b97\u51fa\u6765\uff0c\u8fd9\u6837\u518d\u53bb\u7b97\u53e6\u4e00\u4e2a\u5de6\u8fb9\u754c\u7684\u8bdd\u81f3\u5c11\u53ef\u4ee5\u8282\u7701\u4e00\u534a\u7684\u5e38\u6570\uff0c\u5c31\u7b97\u5de6\u8fb9\u754c\u4e0d\u662f\u5f88\u5c0f\u4e5f\u6709\u53ef\u80fd\u8fd8\u7b97\u70b9\u5e0c\u671b\n\n\u5982\u679c\u5de6\u8fb9\u754c\u7279\u522b\u5c0f\u7684\u8bdd\uff0c\u53ef\u80fd\u5c31\u80fd\u5e78\u8fd0\u7684\u5361\u8fc7\u53bb\n\n\u8fd9\u9053\u9898\u7684\u5de6\u8fb9\u754c\u5c31\u975e\u5e38\u5c0f\u554a\uff0c\u6211\u4f30\u8ba1\u4e0d\u8d85\u8fc7$1e6$\n\n\u4e8e\u662f\u5c31\u5361\u8fc7\u53bb\u4e86\n\n\u518d\u6765\u770b\u770b\u6211\u8fd9\u4e2a\u975e\u5e38$sb$\u7684dp\uff0c\u6211\u89c9\u5f97\u53ef\u80fd\u6ca1\u6709\u4eba\u8fd9\u4e48\u5199\n\n\u6211\u4eec\u8bbe$dp[i][j][s][k]$**\u8868\u793a\u4e00\u4e2a\u6570\u586b\u5230\u4e86$i$\u4f4d\uff0c\u6700\u9ad8\u4f4d\u586b\u7684\u662f$j$\uff0c\u6570\u4f4d\u548c\u662f$s$**\uff0c\u4e14**\u8fd9\u4e9b\u6570\u4e2d\u5bf9\u4e8e\u67d0\u4e00\u4e2a\u6570\u53d6\u6a21\u5f97$k$\u7684\u6570\u7684\u4e2a\u6570**\n\n\u81f3\u4e8e\u8fd9\u4e2a\u67d0\u4e00\u4e2a\u6570\u662f\u4ec0\u4e48\uff0c\u6211\u4eec\u5f53\u7136\u662f\u8981\u6700\u5916\u9762\u5957\u4e0a\u4e00\u4e2a\u679a\u4e3e\u6570\u4f4d\u548c\u4e86\n\n\u90a3\u4e48\u7b54\u6848\u5f88\u7b80\u5355\u554a\uff0c\u5982\u679c\u6211\u4eec\u5f53\u524d\u679a\u4e3e\u7684\u6570\u4f4d\u548c\u662f$x$\u7684\u8bdd\uff0c\u7b54\u6848\u80af\u5b9a\u5c31\u8ddf$dp[][][x][0]$\u6709\u5173\u7cfb\u4e86\n\n\u90a3\u4e48\u8fd9\u4e2a\u65b9\u7a0b\u600e\u4e48\u8f6c\u79fb\u5462\n\n\u663e\u7136\u6709\n\n$$dp[i+1][p][j+p][(p*10^i+k)\\%x]=\\sum_{t=0}^9dp[i][t][j][k]$$\n\n$t$\u8868\u793a\u4e0a\u4e00\u4f4d\u586b\u7684\u6570\uff0c$i$\u662f\u4f4d\u6570\uff0c$p$\u662f\u8fd9\u4e00\u4f4d\u586b\u7684\u6570\uff0c$j$\u662f\u6570\u4f4d\u548c\uff0c$k$\u662f\u5bf9\u5f53\u524d\u679a\u4e3e\u7684\u6570\u4f4d\u548c\u53d6\u6a21\u4e4b\u540e\u7684\u503c\uff0c$x$\u8868\u793a\u5f53\u524d\u679a\u4e3e\u7684\u6570\u4f4d\u548c\n\n\u540c\u65f6\u6211\u4eec\u53d1\u73b0\u597d\u50cf\u76f4\u63a5\u53bb\u679a\u4e3e$t$\u6709\u4e9b\u5962\u4f88\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u628a$\\sum_{t=0}^9dp[i][t][j][k]$\u7b97\u597d\uff0c\u4e8e\u662f\u6211\u7528$dp[i][10][j][t]$\u6765\u5b58\u4e0b\u6765$\\sum_{t=0}^9dp[i][t][j][k]$\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4f18\u5316\u8f6c\u79fb\u4e86\n\n\u4e4b\u540e\u5c31\u662f\u6570\u4f4d$dp$\u7684\u5957\u8def\u5361\u4e0a\u754c\u4e86\uff0c\u5927\u6982\u5c31\u662f\u6ce8\u610f\u4e00\u4e0b\u5361\u4e0a\u754c\u7684\u65f6\u5019\u5b58\u4e00\u4e0b\u524d\u9762\u7684\u6570\u4f4d\u548c\n\n\u590d\u6742\u5ea6\u5927\u6982\u662f$O((log_{10}n*9)^4)$\uff0c\u786e\u5b9e\u8fd9\u662f\u4e00\u4e2a\u5f88\u5783\u573e\u7684\u590d\u6742\u5ea6\n\n\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#define re register\n#define maxn 172\n#define LL long long\n#define max(a,b) ((a)>(b)?(a):(b))\n#define min(a,b) ((a)<(b)?(a):(b))\nLL dp[20][11][maxn][maxn];\nLL L,R;\nLL ans;\nint num[2],a[20][2];\nLL base[20];\nLL mod;\ninline LL qm(LL x) {return x>=mod?x-mod:x;}//\u4f18\u5316\u4e00\u4e0b\u53d6\u6a21\ninline void spilt(LL x,int pd)\n{\n    num[pd]=0;\n    while(x) a[++num[pd]][pd]=x%10,x/=10;\n}//\u5206\u89e3\u6570\u4f4d\ninline void work(int x,int Len)\n{\n    mod=x;\n    memset(dp,0,sizeof(dp));\n    for(re int i=0;i<=9;++i)\n        dp[1][i][i][qm(i)]+=1,dp[1][10][i][qm(i)]+=1;\n    for(re int i=1;i<Len;++i)//\u679a\u4e3e\u957f\u5ea6\n        for(re int j=0;j<=min(x,i*9);++j)//\u679a\u4e3e\u6570\u4f4d\u548c\n            for(re int k=0;k<x;++k)//\u679a\u4e3e\u5bf9\u5f53\u524d\u679a\u4e3e\u7684\u6570\u4f4d\u548cx\u53d6\u6a21\u540e\u7684\u503c\n                {\n                    if(!dp[i][10][j][k]) continue;\n                    for(re int p=0;p<=9;++p)\n                        dp[i+1][p][j+p][(p*base[i]+k)%x]+=dp[i][10][j][k],dp[i+1][10][j+p][(p*base[i]+k)%x]+=dp[i][10][j][k];\n                }\n}\ninline LL slove(int pd,int x)\n{\n    LL tot=0;\n    for(re int i=1;i<num[pd];++i)\n        tot+=dp[i][10][x][0]-dp[i][0][x][0];//\u7edf\u8ba1\u6240\u6709\u4f4d\u6570\u5c0f\u4e8e\u7ed9\u5b9a\u6570\u7684\uff0c\u6ce8\u610f\u9996\u4f4d\u4e0d\u80fd\u586b0\n    for(re int i=1;i<a[num[pd]][pd];++i)\n        tot+=dp[num[pd]][i][x][0];//\u7edf\u8ba1\u6240\u6709\u4f4d\u6570\u548c\u7ed9\u5b9a\u6570\u76f8\u540c\u7684\uff0c\u4f46\u662f\u6700\u9ad8\u4f4d\u5c0f\u4e8e\u7ed9\u5b9a\u6570\u7684\n    LL now=a[num[pd]][pd],cnt=now;\n    //now\u8868\u793a\u524d\u9762\u6240\u6709\u7684\u6570\u4f4d\u548c\uff0ccnt\u8868\u793a\u524d\u9762\u7684\u6570\u7684\u503c\u662f\u591a\u5c11\n    //\uff08\u6bd4\u5982\u8bf412345,\u5361\u5230\u4e09\u8fd9\u4e00\u4f4d\u4e0a\uff0cnow=1+2=3\uff0ccnt=1*10+2*1=12\uff09\n    if(x-now<0) return tot;\n    for(re int i=num[pd]-1;i;--i)//\u5f53\u524d\u4e0d\u540c\u7684\u90a3\u4e00\u4f4d,[i+1,num]\u4e0ex\u5b8c\u5168\u76f8\u540c \n    {\n        LL t=qm(x-cnt*base[i]%x);//\u6839\u636e\u7b97\u51fa\u540e\u9762\u7684\u6570\u4f4d\u6240\u9700\u8981\u7684\u4f59\u6570\u662f\u591a\u5c11\n        for(re int j=0;j<a[i][pd];j++)\n            tot+=dp[i][j][x-now][t];\n        //\u5f53\u524d\u7b2ci\u4f4d\u53ef\u4ee5\u586b\u7684\u6570\u5fc5\u987b\u8981\u5c0f\u4e8e\u7ed9\u5b9a\u6570\u5f53\u524d\u7684\u8fd9\u4e00\u4f4d\uff0c\u8fd9\u91cc\u5c31\u6309\u7167dp\u7684\u65b9\u5f0f\u6765\u7edf\u8ba1\u7b54\u6848\n        now+=a[i][pd];\n        cnt=cnt*10+a[i][pd];\n        cnt=qm(cnt);\n        if(x-now<0) break;\n    }\n    return tot;\n}\nint main()\n{\n    scanf(\"%lld%lld\",&L,&R);\n    spilt(L,0),spilt(R+1,1);\n    base[0]=1;\n    for(re int i=1;i<=18;++i) base[i]=base[i-1]*10;\n    if(R==1000000000000000000) \n    {\n    \tans+=29410615796612778;\n    \tfor(re int i=1;i<=num[0]*9;++i)\n        \twork(i,num[0]),ans-=slove(0,i);\n        printf(\"%lld\\n\",ans);\n    \treturn 0;\n\t}//\u53bb\u6389\u8fd9\u4e2aif\u5728bzoj\u4e0a\u4e5f\u80fd\u5361\u8fc7\u53bb\n    for(re int i=1;i<=num[1]*9;++i)//\u679a\u4e3e\u6570\u4f4d\u548c\n        work(i,num[1]),ans+=slove(1,i)-slove(0,i);\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1537658508,
        "uid": 35178,
        "name": "asuldb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4127 \u3010[AHOI2009]\u540c\u7c7b\u5206\u5e03\u3011"
    },
    {
        "content": "## \u601d\u8def\n\n\u4e00\u53e5\u8bdd\u9898\u610f\uff1a\u7ed9\u51fa\u4e24\u4e2a\u6570$a$,$b$\uff0c\u6c42\u51fa$[a,b]$ $[a,b]$\u4e2d\u5404\u4f4d\u6570\u5b57\u4e4b\u548c\u80fd\u6574\u9664\u539f\u6570\u7684\u6570\u7684\u4e2a\u6570\u3002\n\n\u5f88\u660e\u663e\u5c31\u662f\u6570\u4f4dDP\u554a\uff08~~\u53ef\u6211\u8fd8\u662f\u4e0d\u4f1aQAQ~~\uff09\uff0c\u90a3\u6211\u4eec\u600e\u4e48\u529e\u5462\uff1f\n\n\u6211\u5148\u7528$dp_{i,j}$\u6765\u8bb0\u5fc6\u5316\u524d$i$\u4f4d\u6570\u5b57\u4e4b\u548c\u4e3a$j$\u7684\u65b9\u6848\u603b\u6570,\u53ef\u662f\u4e0d\u96be\u53d1\u73b0\uff0c\u8fd9\u6837\u505a\u662f\u4e0d\u6ee1\u8db3\u6b63\u786e\u6027\u7684\uff0c\u6bd4\u5982$415...$\u548c$541...$\uff0c\u5b83\u4eec\u7684\u6570\u5b57\u4e4b\u548c\u76f8\u540c\uff0c\u4e5f\u641c\u5230\u4e86\u76f8\u540c\u7684\u4f4d\u7f6e\uff0c\u4f46\u5b83\u4eec\u7684\u7b54\u6848\u663e\u7136\u662f\u4e0d\u5171\u4eab\u7684\uff0c\u6240\u4ee5\u8fd9\u6837\u505a\u4e0d\u53ef\u884c\u3002\n\n\u7ecf\u8fc7\u4ed4\u7ec6\u601d\u8003\uff08~~\u9898\u89e3\u5927\u6cd5\u543c\u554a~~\uff09\uff0c\u5982\u679c\u4f4e\u7ef4\u4e0d\u80fd\u89e3\u51b3\u95ee\u9898\uff0c\u90a3\u6211\u4eec\u5c31\u901a\u8fc7\u589e\u52a0\u7ef4\u5ea6\u6765\u964d\u4f4e\u6211\u4eec\u601d\u8003\u7684\u96be\u5ea6\uff1a\n\n\u6211\u4eec\u53ef\u4ee5\u63d0\u524d\u679a\u4e3e\u51fa\u5b83\u7684\u6570\u5b57\u4e4b\u548c\u662f\u591a\u5c11\uff0c\u7136\u540e\u641c\u7d22\u7684\u65f6\u5019\u76f4\u63a5\u5bf9\u8fd9\u4e2a\u6570\u53d6\u6a21\uff0c\u5230\u6700\u540e\u770b\u4e00\u4e0b\u6a21\u6570\u662f\u4e0d\u662f$0$\u5e76\u4e14\u6570\u5b57\u4e4b\u548c\u7b49\u4e0d\u7b49\u4e8e\u6211\u4eec\u679a\u4e3e\u7684\u6570\u5c31\u53ef\u4ee5\u4e86\uff0c\u8bb0\u5fc6\u5316\u65f6\u6211\u4eec\u7528$dp_{i,j,k}$\u8868\u793a\u641c\u5230\u7b2c$i$\u4f4d\uff0c\u5f53\u524d\u7684\u6a21\u6570\u662f$j$,\u6211\u4eec\u679a\u4e3e\u7684\u6570\u5b57\u4e4b\u548c\u662f$k$\u7684\u7b54\u6848\u6570\u5373\u53ef\u3002\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#define MAXN 2147483647\n#define ll long long\n\nusing namespace std;\nint len,T;\nll a,b;\nint s[1010];\nll dp[20][200][200];\nll dfs(int p,int st,int sum,int limit)\n//p\u4ee3\u8868\u641c\u5230\u4e86\u7b2c\u51e0\u4f4d\uff0csum\u8868\u793a\u5f53\u524d\u6570\u7684\u5404\u4f4d\u6570\u5b57\u4e4b\u548c\uff0cst\u8868\u793a\u5f53\u524d\u6570\u5bf9\u5f53\u524dsum\u53d6\u6a21\u7684\u7ed3\u679c \n{\n\tif(p>len){\n\t\treturn (st==0&&sum==T) ? 1 : 0;\n\t} \n\tif(dp[p][sum][st]!=-1&&!limit) return dp[p][sum][st];\n\tint res;\n\tll ret=0;\n\tif(limit) res=s[len-p+1];\n\telse res=9;\n\tfor(int i=0;i<=res;i++)\n\t\tret+=dfs(p+1,(st*10+i)%T,sum+i,limit&&(i==res));\n\tif(!limit) dp[p][sum][st]=ret;\n\treturn ret;\n}\nll solve(ll x)\n{\n\tlen=0;\n\twhile(x)\n\t{\n\t\ts[++len]=x%10;\n\t\tx/=10;\n\t}\n\tll ans=0;\n\tfor(T=1;T<=len*9;T++)\n\t{\n\t\tmemset(dp,-1,sizeof dp);\n\t\tans+=dfs(1,0,0,1);\n\t}\n\treturn ans;\n}\nint main()\n{\n\tscanf(\"%lld%lld\",&a,&b);\n\tprintf(\"%lld\\n\",solve(b)-solve(a-1));\n\treturn 0;\n}\n```",
        "postTime": 1540213637,
        "uid": 75010,
        "name": "lwz2002",
        "ccfLevel": 0,
        "title": "[AHOI2009]\u540c\u7c7b\u5206\u5e03"
    },
    {
        "content": "# \u6570\u4f4dDP|\u8bb0\u5fc6\u5316\u641c\u7d22\n\n~~\u542c\u9694\u58c1\u5de8\u4f6c\u8bf4DP\u548c\u8bb0\u641c\u53ef\u4ee5\u4e92\u76f8\u8f6c\u6362~~\n\n\u663e\u7136\u8fd9\u4e2a\u9898\u662f\u53ef\u4ee5\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u8fc7\u7684\uff0c\u90a3\u6211\u4eec\u5e94\u4f20\u54ea\u51e0\u4e2a\u53c2\u6570\uff1f\n\n\u9996\u5148\u5c31\u662f\u8bb0\u641c\u6700\u57fa\u672c\u7684\u4f4d\u7f6e\u6807\u8bb0\u3002\n\n\u7136\u540e\u5c31\u662f\u679a\u4e3e\u7684\u6570\u5b57\u5404\u4f4d\u4e4b\u548c\uff0c\u4ee5\u53ca\u53d6\u6a21\u4e4b\u540e\u7684\u4f59\u6570\uff08\u5224\u65ad\u80fd\u5426\u6574\u9664\u67d0\u4e2a\u6570\uff09\u3002\n\n\u6700\u540e\u5c31\u662f\u5224\u8fb9\u754c\u7684\u53c2\u6570\u3002\n\n\u5f53\u6211\u4eec\u641c\u5230\u6700\u540e\u4e00\u4f4d\u65f6\u5982\u679c\u4f59\u6570\u4e3a0\uff0c\u5e76\u4e14\u5404\u4f4d\u4e4b\u548c=mod\uff0c\u90a3\u5c31\u76f4\u63a5\u8fd4\u56de1\uff0c\u5426\u5219\u8fd4\u56de\u96f6\u3002\n\n\u663e\u7136\u6211\u4eec\u628a\u8fd9\u51e0\u4e2a\u6570\u88c5\u8fdb\u6570\u7ec4\u91cc\uff0c\u662f\u5f00\u4e0d\u4e0b\u7684\u3002\n\nlong long \u4e3a8\u5b57\u8282 $8\\times 20\\times 200\\times 200\\times 200 \\div1024 \\div1024 =1220.703125 MB$\n\n\u6240\u4ee5\u6211\u4eec\u8003\u8651\u679a\u4e3e\u6a21\u6570\uff08\u5404\u4f4d\u4e4b\u548c\uff09mod\uff0c\u5c31\u8981\u6c42n\u6570\u5b57\u5404\u4f4d\u4e4b\u548c=mod\uff0cn%mod=0,\u3002\n\n\u56e0\u4e3a\u6bcf\u4e2a\u4f4d\u4e0a\u6700\u5927\u662f9\uff0c\u6240\u4ee5\u6211\u4eec\u4ece1\u679a\u4e3e\u5230len$\\times$9.\u8fd9\u6837\u6211\u4eec\u5c31\u5c06\u6240\u6709\u60c5\u51b5\uff08\u6570\u5b57\u5404\u4f4d\u4e4b\u548c\uff09\u90fd\u8003\u8651\u4e86\u8fdb\u53bb\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u7701\u6389\u4e86DP\u6570\u7ec4\u4e2d\u6a21\u6570\u90a3\u4e00\u7ef4\uff0c\u59a5\u59a5\u7684\u80fd\u5f00\u4e0b\u3002(\u3003'\u25bd'\u3003)\n\n\u6211\u4eec\u5c06\u76f8\u540c\u7684\u72b6\u6001\u7528\u6570\u7ec4\u8bb0\u5f55\uff0c\u8fd9\u6837\u5728\u4e0b\u4e00\u6b21\u641c\u5230\u8be5\u72b6\u6001\u65f6\u5c31\u80fd\u76f4\u63a5\u8c03\u7528\u5566~~\n\n\u7136\u540e\u5206\u4eab\u51e0\u4e2a\u5361\u5e38\u6280\u5de7\u3002\n\n\u4eca\u5929\u505a\u4e86\u4e00\u9053\u548c\u8fd9\u4e2a\u9898\u7c7b\u4f3c\u7684~~\u6bd2\u7624\u5361\u5e38~~\u9898\uff0c\u4ee3\u7801\u5341\u51e0\u5206\u949f\uff0c\u5361\u5e38\u5361\u4e86\u4e24\u5c0f\u65f6QAQ\uff0c~~\u83ab\u975e\u771f\u7684\u662f\u4eba\u4e11\u5e38\u6570\u5927\u3002~~\n\n\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u526a\u679d\uff0c\u82e5sum\uff08\u6570\u5b57\u5404\u4f4d\u4e4b\u548c>mod\uff09\uff0c\u76f4\u63a5return 0\uff0c\u56e0\u4e3a\u6211\u4eec\u8d8a\u5f80\u540e\uff0csum\u53ea\u4f1a\u8d8a\u6765\u8d8a\u5927\uff0c\u4e0d\u53ef\u80fd\u7b49\u4e8emod\u3002\n\n\u7136\u540e\u5c31\u662f\u6e05\u7a7aDP\u6570\u7ec4\u65f6\u5c06memset\u6539\u4e3afor\u5faa\u73af\uff0c\u6211\u4eec\u53ea\u7528\u5c06\u6211\u4eec\u4e0a\u4e00\u6b21\u7528\u5230\u7684\u6570\u7ec4\u6e05\u7a7a\uff081~\u679a\u4e3e\u7684mod\uff09\u5c31\u53ef\u4ee5\u4e86\uff08\u5b9e\u6d4b\u8dd1\u7684\u98de\u5feb\uff09\n\n\u518d\u7136\u540e\u5c31\u662f\u641c\u7d22\uff0c\u6b63\u5e38\u60c5\u51b5\u4e0b\u6211\u4eec\u662f\u8fd9\u6837\u5199\u7684\uff1a\n\n```cpp\ncin>>a>>b;cout<<calc(b)-calc(a-1);\n```\n\u4f46\u662f\u6211\u4eec\u5ffd\u89c6\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u90a3\u5c31\u662f\u76f8\u540c\u7684mod\u6211\u4eec\u5e94\u8be5\u53ea\u8bb0\u641c\u4e00\u6b21\uff0c\u4f46\u56e0\u4e3a\u6211\u4eec\u5206\u5f00\u6765\u8ba1\u7b97\uff0c\u6240\u4ee5\u5c31\u7b97\u4e86\u4e24\u6b21\uff0c\u5e38\u6570\u5de8\u5927>_<\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u5728\u8ba1\u7b97b\u7684\u7b54\u6848\u7684\u540c\u65f6\u987a\u4fbf\u51cf\u53bba\u7684\u7b54\u6848\u5c31\u884c\u4e86\uff0c\u8fd9\u6837\u6211\u4eec\u6bcf\u4e2amod\u53ea\u7528\u5230\u4e86\u4e00\u904d\u3002\n\n\u6700\u540e\u5c31\u662f\u4e00\u4e9b\u57fa\u672c\u7684\u5361\u5e38\u64cd\u4f5c\u5566~~\n\n\u5361\u5e38\u7ed3\u679c\uff1a$7.58s \\rightarrow 3.11s $\n\n\u8fd8\u6709\u5982\u679c\u8ba9\u6c42C\u8fdb\u5236\u4e0b\u7684\u7b54\u6848\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5c06\u4ee3\u7801\u4e2d\u768410\u6539\u4e3aC\u5c31\u53ef\u4ee5\u4e86\n\n\u6700\u540e\u732e\u4e0a\u6211~~\u4e11\u964b~~\u7684\u4ee3\u7801\n\n```cpp\n#include<cstdio>\n#include<iostream>\nusing namespace std;\nbool ok;\nint len,cnt,w[21],ww[71],mod;\nlong long b,a,dp[21][205][205];\ninline long long read()\n{\n\tchar ch;long long x=0,f=1;\n\twhile(!isdigit(ch=getchar()))\n\t{\n\t\t(ch=='-')&&(f=-f);\n\t}\n\twhile(isdigit(ch))\n\t{\n\t    x=(x<<1)+(x<<3)+(ch^48);\n\t    ch=getchar();\n    }\n    return x*f;\n} \ninline void write(long long x)\n{\n     if(x<0) putchar('-'),x=-x;\n     if(x>9) write(x/10);\n     putchar(x%10+'0');\n}\nlong long dfs(int l,int sum,int m,int g)\n{\n\tif(sum>mod)return 0; \n\tif(l==0)\n\t\treturn (m==0&&sum==mod);\n\tregister int end=g?w[l]:9;\n\tif(!g&&dp[l][sum][m]!=-1)return dp[l][sum][m];\n\tregister long long ans=0;\n\tfor(register int i=0;i<=end;++i)\n\t\tans+=dfs(l-1,sum+i,(m*10+i)%mod,g&&(i==end));\n\tif(!g)dp[l][sum][m]=ans;\n\treturn ans;\n}\nlong long dfs1(int l,int sum,int m,int g)\n{\n\tif(sum>mod)return 0; \n\tif(l==0)\n\t\treturn (m==0&&sum==mod);\n\tregister int end=g?ww[l]:9;\n\tif(!g&&dp[l][sum][m]!=-1)return dp[l][sum][m];\n\tregister long long ans=0;\n\tfor(register int i=0;i<=end;++i)\n\t\tans+=dfs1(l-1,sum+i,(m*10+i)%mod,g&&(i==end));\n\tif(!g)dp[l][sum][m]=ans;\n\treturn ans;\n}\ninline long long c1(long long x)\n{\n\tif(!ok)\n\t{\n\t\tcnt=0;\n\t\twhile(x)\n\t\t{\n\t\t\tww[++cnt]=x%10;\n\t\t\tx/=10;\n\t\t}\n\t\tok=1;\n\t}\n\treturn dfs1(cnt,0,0,1);\n}\ninline long long c(long long x)\n{\n\tint i,j,k;\n\tlen=0;\n\twhile(x)\n\t{\n\t\tw[++len]=x%10;\n\t\tx/=10;\n\t}\n\tregister long long ans=0;\n\tfor(mod=1;mod<=len*9;++mod)\n\t{\n\t\tfor(i=0;i<=len;++i)\n\t\tfor(j=0;j<=mod;++j)\n\t\tfor(k=0;k<=mod;++k)\n\t\tdp[i][j][k]=-1;\n\t\tans+=dfs(len,0,0,1);\n\t\tans-=c1(a-1);\n\t}\n\treturn ans;\n}\nint main()\n{\n\ta=read(),b=read();\n\twrite(c(b));\n\treturn 0;\n}\n```\n",
        "postTime": 1565778969,
        "uid": 153843,
        "name": "wljss",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4127 \u3010[AHOI2009]\u540c\u7c7b\u5206\u5e03\u3011"
    },
    {
        "content": "\u5e2e\u6211\u540c\u684c\u8c03\u4e86\u4e24\u4e2a\u5c0f\u65f6\uff0c\u51c6\u786e\u6765\u8bf4\u662f\u5728\u5361\u5e38\uff0c\u4e8e\u662f\n\n\u6700\u540e\u662f\u6211\u6765\u53d1\u9898\u89e3\uff1f\n\n\u597d\u5427\u8fa3\u4e48\u6211\u4eec\u6765\u770b\u9898\n\n\u4e00\u770b\uff0c\u88f8\u7684\u6570\u4f4dDP\u6b38\n\n\u90a3\u5c31\u5f88\u81ea\u7136\u7684\u8bbe\u72b6\u6001: f[i][j][k] \u8868\u793a\n\n\u7b2ci\u4f4d\uff0c\u5b83\u7684\u5f53\u524d\u6570\u5b57\u548c\u662fj\uff0c\u53d6\u6a21\u7ed3\u679c\u662fk\u7684\u503c\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u8f6c\u79fb......\n\n\u7b49\u7b49\uff0c\u6a21\u6570\u5462\uff1f\nemmm~~\n\n\u597d\u5427\u90a3\u5c31\u679a\u4e3e\u4e00\u4e0b\u6a21\u6570\uff08\u56e0\u4e3a\u5b83\u6700\u5927\u624d9 * 18\uff0cok\u7684\uff09\n\n\u7136\u800c\u4e0b\u9762\u6709\u4e00\u4e9b\u9a9a\u64cd\u4f5c\uff0c\u8003\u8bd5\u65f6\u8001\u5e08\u6781\u5176\u6076\u5fc3\u7684\u5361\u65f6\u9650\n\n\u8fd9\u5c31\u662f\u6211\u4e3a\u5565\u5e2e\u6211\u540c\u684c\u8c03\u4e86\u4fe9\u5c0f\u65f6\n\n\u6240\u4ee5\u4ee3\u7801\u5982\u4e0b\uff1a\n\n## code\n\n```cpp\n#include<bits/stdc++.h>\n#define R register\n\nusing namespace std;\ntypedef long long LL;\nLL l,r,f[100][405][405];\nint tot,cnt,num[100],MOD,kk[100];\n\ninline LL read()\n{\n\tR LL x=0,f=1;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9'){x = x*10+c-'0';c = getchar();}\n\treturn x*f;\n}\n\n//\u8bb0\u5fc6\u5316\u641c\u7d22\u6a21\u677f\nLL dfs(int i,int sum,int mod,bool limit)\n{\n\tif(i == 0) return (mod == 0 && sum == MOD);\n\tif(!limit && f[i][sum][mod] != -1) return f[i][sum][mod];\n\tint up = (limit ? num[i] : 9);\n\tLL ans = 0;\n\tfor(R int j = 0;j <= up;++ j){\n\t\tR int k = (mod * 10 + j) % MOD;\n\t\tans += dfs(i - 1,sum + j,k,limit && (j == up));\n\t}\n\tif(!limit) f[i][sum][mod] = ans;\n\treturn ans;\n}\n\nLL dfs1(int i,int sum,int mod,bool limit)//\u7531\u4e8e\u62c6\u5206\u7684\u7ed3\u679c\u4e0d\u540c\uff0c\u9700\u8981\u7b2c\u4e8c\u4e2adfs \n{\n\tif(i == 0) return (mod == 0 && sum == MOD);\n\tif(!limit && f[i][sum][mod] != -1) return f[i][sum][mod];\n\tint up = (limit ? kk[i] : 9);//\u4e0e\u7b2c\u4e00\u4e2adfs\u7684\u552f\u4e00\u4e0d\u540c\uff0cup \n\tLL ans = 0;\n\tfor(R int j = 0;j <= up;++ j){\n\t\tR int k = (mod * 10 + j) % MOD;\n\t\tans += dfs1(i - 1,sum + j,k,limit && (j == up));\n\t}\n\tif(!limit) f[i][sum][mod] = ans;\n\treturn ans;\n}\n\ninline LL solve(LL x,LL y)\n{\n\tR LL res = 0;\n\twhile(x) num[++cnt] = x % 10,x /= 10;\n\twhile(y) kk[++tot] = y % 10,y /= 10;//\u4e24\u6b21\u62c6\u5206\uff0c\u7701\u65f6\u95f4 \n\tfor(MOD = 1;MOD <= cnt * 9;++ MOD){\n\t\tfor(R int i = 0;i <= cnt;++ i)\n\t\tfor(R int j = 0;j <= MOD;++ j)\n\t\tfor(R int k = 0;k <= MOD;++ k)\n\t\t\tf[i][j][k] = -1;//\u4e0d\u6562\u7528\u4e00\u4e2amemset \n\t\tres += dfs(cnt,0,0,1);\n\t\tres -= dfs1(tot,0,0,1);//\u540c\u65f6\u8ba1\u7b97\u5de6\u7aef\u70b9\uff0c\u7701\u65f6\u95f4 \n\t}\n\treturn res;\n}\n\nsigned main()\n{\n//\tfreopen(\"B.in\",\"r\",stdin);\n//\tfreopen(\"B.out\",\"w\",stdout);\n\tl = read();\n\tr = read();\n\tprintf(\"%lld\",solve(r,l - 1));//\u4e00\u4e2asolve,\u7701\u65f6\u95f4 \n\tfclose(stdin);\n\tfclose(stdout);\n\treturn 0;\n}\n```\n\n\u603b\u4e4b\u5c31\u8fd9\u6837\u5728\u8bc4\u6d4b\u673a\u4e0a1.7s\u8fc7\u4e86\n\n\u7136\u800c\u6211\u770b\u5230\u8fd9\u91cc\u6709560ms\u7684dalao\uff1f\u679c\u7136\u6211\u8fd8\u662f\u849f\u84bb\n\n\u5fc3\u90fd\u788e\u4e86\n\n\u597d\u5427\uff0c\u672c\u849f\u84bb\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\u5230\u6b64\u7ed3\u675f\n\n\u6b22\u8fce\u5404\u4f4d\u65a7\u6b63",
        "postTime": 1568106335,
        "uid": 160654,
        "name": "\u707c\u773c\u7684\u590f\u5a1c",
        "ccfLevel": 4,
        "title": "\u7b2c\u4e00\u7bc7\u9898\u89e3"
    },
    {
        "content": "### [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P4127)\n\n## \u7b80\u8ff0\u9898\u610f\n\n- \u5bf9\u4e8e $[l,r]$ \u6c42\u5176\u4e2d\u80fd\u7528\u81ea\u5df1\u6570\u4f4d\u548c\u6574\u9664\u7684\u6570\u7684\u4e2a\u6570\u3002\n\n## \u6570\u4f4dDP\n\n\u6211\u4eec\u5c06\u6ee1\u8db3\u6761\u4ef6\u7684\u8f6c\u6362\u4e3a\u603b\u6570\u51cf\u53bb\u4e0d\u6ee1\u8db3\u6761\u4ef6\u7684\u4e2a\u6570\u3002\n\n\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230**\u6570\u4f4dDP**\u3002\n\n$[l,r]$ \u7684\u7ed3\u679c\u53ef\u8868\u793a\u4e3a $[1,r]-[1,l-1]$ \u7684\u7ed3\u679c\u3002\n\n\u4f46\u6211\u4eec\u53d1\u73b0\u76f4\u63a5\u505a\u4e0d\u592a\u65b9\u4fbf\u3002\n\n\u5bf9\u4e8e\u6570\u4f4d\u548c\uff0c\u6211\u4eec\u4e0d\u65b9\u4fbf\u8fdb\u884c\u5904\u7406\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u6570\u4f4d\u548c\u3002\n\n\u5bf9\u4e8e\u6bcf\u6b21\u679a\u4e3e\u7684\u8fdb\u884c\u8ba1\u7b97\u3002\n\n\u5b9a\u4e49 $f_{p,d,s,v}$ \u4e3a\u75289\u8fd8\u662f\u4f59\u4e0b\u9996\u4f4d\uff0c$d$ \u4f4d\u6570\uff0c\u6570\u4f4d\u548c\u5269\u4e0b $s$\uff0c\u6a21\u6570\u4f4d\u548c\u4f59 $v$\u3002\n\n\u53ef\u5f97\u9012\u63a8\u65b9\u7a0b\u3002\n\n```cpp\nfor(ll i=max(0LL,s-(d-1)*9LL);i<=min((p)?9LL:a[d],s);i++) sum+=dp(p|(i<a[d]),d-1,s-i,(v*10+i)%mod);\n```\n\n\u4e0d\u65ad\u9012\u5f52\uff0c\u5373\u53ef\u5f97\u51fa\u7b54\u6848\u3002\n\n\u5bf9\u7801\u529b\u6709\u8981\u6c42\uff0c\u4e0d\u8981\u51fa\u7ec6\u8282\u9519\u8bef\u3002\n\n\u8bbe $len$ \u4e3a $r$ \u7684\u4f4d\u6570\u3002\n\n\u590d\u6742\u5ea6 $O(len^4)$\u3002\n\n\u7531\u4e8e\u5176\u6709\u5de8\u5927\u7684\u5e38\u6570\uff0c\u65f6\u9650\u653e\u57282s\u3002\uff08\u867d\u7136\u6807\u7a0b1s\u8dd1\u5f97\u8fc7\uff09\n\n\u5927\u7ea6\u52a0\u4e0a\u5e38\u6570\u540e\u662f $O(10^8)$ \u6570\u91cf\u7ea7\u3002\n\n\u4f60\u53ef\u4ee5\u624b\u5207\u8fd9\u9898\u4e86\u3002/cy\n\n```cpp\n/*\n***\n\u8fd8\u8981\u7ee7\u7eed\u52aa\u529b\n\u6210\u4e3a\u4e00\u540d\u70e4\u5495\u5b66\u5bb6\u54e6\n***\n*/\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst ll N=200;\nll a[25],vis[2][25][N][N],f[2][25][N][N],l,r,mod,tot,cnt; \ntemplate <typename T> void rd(T &x){\n\tll fl=1;x=0;char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') fl=-fl;\n\tfor(;isdigit(c);c=getchar()) x=(x<<3)+(x<<1)+c-'0';\n\tx*=fl;\n}\nvoid wr(ll x){\n\tif(x<0) x=-x,putchar('-');\n\tif(x<10) putchar(x+'0');\n\tif(x>9) wr(x/10),putchar(x%10+'0');\n}\nll dp(ll p,ll d,ll s,ll v){\n\tif(!d)return !s&&!v;\n\tif(vis[p][d][s][v]==tot)return f[p][d][s][v];\n\tvis[p][d][s][v]=tot;\n\tll sum=0;\n\tfor(ll i=max(0LL,s-(d-1)*9LL);i<=min((p)?9LL:a[d],s);i++) sum+=dp(p|(i<a[d]),d-1,s-i,(v*10+i)%mod);\n\treturn f[p][d][s][v]=sum;\n}\nll solve(ll x){\n\tll sum=0;cnt=0;\n\tfor(cnt=0;x;x/=10) a[++cnt]=x%10;\n\tfor(mod=1;mod<=cnt*9;mod++) tot++,sum+=dp(0,cnt,mod,0);\n\treturn sum;\n}\nint main(){\n//\tfreopen(\"count5.in\",\"r\",stdin);\n//\tfreopen(\"count5.out\",\"w\",stdout);\n\trd(l);rd(r);\n\twr(r-l+1-solve(r)+solve(l-1));puts(\"\");\n\treturn 0;\n}\n```\n\n",
        "postTime": 1596282917,
        "uid": 83999,
        "name": "Demoe",
        "ccfLevel": 7,
        "title": "[AHOI2009]\u540c\u7c7b\u5206\u5e03\u9898\u89e3 \u6570\u4f4dDP"
    },
    {
        "content": "\u8bb0\u5fc6\u5316\u641c\u7d22\u5927\u5bb6\u4e00\u5b9a\u5f88\u6e05\u695a\uff0c\u4e5f\u80fd\u591f\u5341\u5206\u7b80\u5355\u7684\u901a\u8fc7\u8fd9\u9053\u9898\n\n\u4f46\u662f\u5199\u8bb0\u5fc6\u5316\u641c\u7d22\u7684\u540c\u5fd7\u4e00\u5b9a\u5f88\u96be\u901a\u8fc7BZOJ3003\u6708\u4e4b\u8c1c\u3002\n\n\u53ef\u4ee5\u8bf4\u662f\u8fd9\u9053\u9898\u7684\u62d3\u5c55\u5427\u3002\n\n\u5728\u8fd9\u91cc\uff0c\u5bf9\u4e8e\u8fd9\u9053\u9898\u53ef\u4ee5\u91c7\u7528\u79bb\u7ebf\u7684\u65b9\u6cd5\uff0c\u5148\u5c06\u6240\u6709\u7684\u8be2\u95ee\u8bfb\u5165\u3002\n\n\u5728\u679a\u4e3e\u6a21\u6570\u7684\u65f6\u5019\uff0c\u5bf9\u6240\u6709\u7684\u6570\u90fd\u505a\u4e00\u904d\u6570\u4f4dDP\u3002\n\n\u7531\u4e8e\u6a21\u6570\u4e0d\u4f1a\u8d85\u8fc7\u4e24\u767e\uff0c\u52a0\u4e0a\u8bb0\u5fc6\u5316\u641c\u7d22\u76f8\u5f53\u4e8e\u4e00\u6b21DP\uff0c\u4e00\u5171\u4e0d\u4f1a\u505a\u8d85\u8fc7\u4e24\u767e\u6b21\u7684\u8bb0\u5fc6\u5316\u641c\u7d22\u3002f\u6570\u7ec4\u4e5f\u53ea\u9700\u8981\u91cd\u65b0memset\u4e0d\u5230\u4e24\u767e\u6b21\u5373\u53ef\u3002\n\n\u56e0\u6b64\u603b\u6548\u7387\u6211\u4eec\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u3002\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u505a\u5230\u88c5\u5907\u7ecf\u9a8c\u6f0f~~~\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n\n#define int long long\n\nusing namespace std;\n\nint n = 0, P, m;\nint num[10000], a[30], f[22][411][411], ans[10000];\n\n//sum1\u8868\u793a\u5404\u4f4d\u6570\u5b57\u4e4b\u548c\n//sum2\u8868\u793a\u6570\u5b57\u5bf9P\u53d6\u6a21\u7684\u548c \nint dp(int x,int sum1,int sum2,int isMin)\n{\n\tif (x == 0) return sum1 == P and sum2 == 0;\n\tif (sum1 + x * 9 < P) return 0;\n\tif (!isMin and ~f[x][sum1][sum2]) return f[x][sum1][sum2];\n\tint Max = isMin ? a[x] : 9, cnt = 0;\n\tfor (int i=0;i<=Max;++i)\n\t    cnt += dp(x-1,sum1+i,(sum2*10+i)%P,isMin&&i==a[x]);\n\tif (!isMin) f[x][sum1][sum2] = cnt;\n\treturn cnt;\n}\n\nint Solve(int x)\n{\n\tm = 0;\n\twhile (x > 0) {\n\t\ta[++m] = x % 10;\n\t\tx /= 10;\n\t}\n\tif (m * 9 < P) return 0;\n\treturn dp(m,0,0,1);\n}\n\nsigned main(void)\n{\n\tfreopen(\"mystery.in\",\"r\",stdin);\n\tfreopen(\"mystery.out\",\"w\",stdout);\n\tint t1, t2;\n\twhile (cin>>t1>>t2) \n\t\tnum[++n] = t1-1, num[++n] = t2;\n\tfor (P=1;P<=20*9;++P)\n\t{\n\t\tmemset(f,-1,sizeof f);\n\t    for (int i=1;i<=n;++i) ans[i] += Solve(num[i]);\n\t}\n\tfor (int i=1;i<=n;i+=2) \n\t    printf(\"%lld\\n\", ans[i+1]-ans[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1567427035,
        "uid": 33243,
        "name": "\u5c0f\u5468\u732a\u732a",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4127 \u3010[AHOI2009]\u540c\u7c7b\u5206\u5e03\u3011"
    },
    {
        "content": "### \u9898\u89e3\uff1a\n\n1. \u8fd9\u9053\u9898\u65f6\u6211\u5728 qbxt \u8003\u8bd5\u65f6\u8001\u5e08\u51fa\u7684\u9898\u7684\u5f31\u5316\u7248.\u90a3\u9053\u9898\u7684\u7248\u672c\u662f\u52a0\u4e0a\u591a\u79cd\u8fdb\u5236\uff08\u8c8c\u4f3c\u5dee\u4e0d\u591a\uff09.\u5f53\u65f6\u4e0d\u4f1a\uff0c\u6253\u4e86\u4e2a\u66b4\u529b\uff0c\u73b0\u5728\u9047\u5230\u4e86\u8fd9\u9053\u9898\uff0c\u6709\u70b9\u540e\u6094\u5237\u7684\u9898\u592a\u5c11\u4e86.\n\n2. \u524d\u8a00\uff1a \n\n- \u6570\u4f4dDP\u662f\u4e0e\u6570\u5b57\u76f8\u5173\u7684\u4e00\u7c7b\u8ba1\u6570\u95ee\u9898.\u8fd9\u7c7b\u95ee\u9898\u901a\u5e38\u90fd\u662f\u7ed9\u4f60\u51e0\u4e2a\u9650\u5236\u548c\u5bfb\u627e\u8303\u56f4\uff0c\u6c42\u6ee1\u8db3\u9650\u5236\u7684\u6570\u7684\u4e2a\u6570\u6709\u591a\u5c11.\n\n- \u9762\u5bf9\u8fd9\u7c7b\u95ee\u9898\uff0c\u6211\u4eec\u9996\u5148\u60f3\u5230\u7206\u641c.\u4e0d\u7528\u60f3\uff0c\u80af\u5b9a\u7206\u70b8.\u4e8e\u662f\u4e4e\u6211\u4eec\u6765\u8003\u8651\u4f18\u5316\u65b9\u6cd5.\u5f88\u5bb9\u6613\u53ef\u4ee5\u60f3\u5230\uff1a\u8bb0\u5fc6\u5316\u641c\u7d22\uff01\n\n- \u4e0d\u8fc7\u5e76\u6ca1\u6709\u90a3\u4e48\u7b80\u5355.\u6709\u8bf8\u591a\u9650\u5236\uff0c\u6bd4\u5982\u8bf4\u641c\u7d22\u4e0d\u80fd\u8d85\u8fc7\u7ed9\u5b9a\u533a\u95f4\u7684\u8303\u56f4\uff0c\u4e0d\u80fd\u6709\u524d\u5bfc0\u7b49\u7b49\uff0c\u8fd9\u65f6\u6211\u4eec\u5c31\u9700\u8981\u4ed4\u7ec6\u8003\u8651\u4e86.\n\n- \u6211\u4eec\u5c1d\u8bd5\u5728\u8bb0\u5fc6\u5316\u641c\u7d22\u4e2d\u8bb0\u5f55\u8fd9\u4e9b\u9650\u5236\uff0c\u8003\u8651\u5982\u4f55\u8f6c\u79fb\u5373\u53ef.\uff08\u5c3d\u53ef\u80fd\u628a\u72b6\u6001\u90fd\u8bb0\u5f55\u4e0b\u6765\uff09\n\n3. \u53ef\u4ee5\u53d1\u73b0\uff0c\u50cf\u8fd9\u7c7b\u8ba1\u6570\u578b\u95ee\u9898\uff0c\u90fd\u662f\u53ef\u4ee5\u5957\u6a21\u677f\u7684.\u6211\u4eec\u5148\u6765\u5206\u6790\u4e00\u4e0b\u6a21\u677f.\n\n- [\u535a\u5ba2\u98df\u7528\u53e3\u611f\u66f4\u597d\u54df](https://www.luogu.org/blogAdmin/article/edit/167531)\n\n```\nint DFS(int len,int limit,int lead,int ...\u5404\u79cd\u9650\u5236)//len\u8868\u793a\u586b\u6570\u5230\u4e86\u7b2c\u51e0\u4f4d,limit\u8868\u793a\u6709\u65e0\u4e0a\u754c\u9650\u5236,lead\u8868\u793a\u6709\u65e0\u524d\u5bfc0 \n{\n    if(len==0)return 1;//\u8fb9\u754c\u6761\u4ef6 \n    if(!limit&&!lead&&dp[len][...]!=-1)//\u5982\u679c\u641c\u8fc7\u5e76\u4e14\u6ca1\u6709\u4e0a\u754c\u9650\u5236\u548c\u524d\u5bfc0,\u8fd9\u4e00\u4f4d\u53ef\u4ee5\u968f\u4fbf\u586b \n    return dp[len][...];//\u8bb0\u5fc6\u5316\u641c\u7d22 \n    int maxx=limit?num[len]:9;//\u5982\u679c\u524d\u4e00\u4f4d\u6709\u9650\u5236\uff08\u586b\u5230\u4e86\u6700\u9ad8\u4f4d\uff09\u90a3\u4e48\u8fd9\u4e00\u4f4d\u4e0d\u80fd\u8d85\u8fc7num\u8fd9\u4e00\u4f4d\u7684\u5927\u5c0f\uff0c\u5426\u52190~9\u968f\u4fbf\u53d6 \n    int res=0; \n    for(int i=0;i<=maxx;i++)\n    {\n        if(...)//\u9650\u5236\u6761\u4ef6 \n        res+=DFS(len-1,limit&&(i==maxx),lead&&!i,...);//\u5982\u679c\u672c\u4f4d\u5df2\u7ecf\u679a\u4e3e\u5230\u4e0a\u754c\u5c31\u628a\u4e0a\u754c\u5f80\u540e\u4f20,\u4e0a\u4e00\u4f4d\u6709\u524d\u5bfc0\u800c\u4e14\u8fd9\u4e00\u4f4d\u662f0\uff0c\u90a3\u4e48\u4e0b\u4e00\u4f4d\u6709\u524d\u5bfc0 \n    } \n    if(!limit&&!lead)dp[len][...]=res;//\u56e0\u4e3a\u5982\u679c\u679a\u4e3e\u5230\u4e0a\u9650\u5219\u7b54\u6848\u5e76\u4e0d\u662f\u8fd9\u4e00\u4f4d\u4e0a\u6240\u6709\u7684\u548c\uff0c\u6240\u4ee5\u5c31\u4e0d\u66f4\u65b0\n\t//\u7740\u91cd\u5206\u6790\u8fd9\u4e00\u53e5\u8bdd\uff1a\u5f53\u6709\u524d\u5bfc0\u6216\u6709\u4e0a\u754c\u9650\u5236\u65f6,\u4e0b\u4e00\u4f4d\u6709\u4e0d\u80fd\u586b\u7684\u6570\uff0c\u800cdp\u6570\u7ec4\u8bb0\u5f55\u7684\u662f\u4e0b\u4e00\u4f4d\u80fd\u586b0~9\u7684\u6570\uff0c\u6240\u4ee5\u4e0d\u66f4\u65b0. \n    return res; \n}\n\nint solve(int x)\n{\n    int len=0;//\u4f4d\u6570 \n    while(x)//\u8fd9\u91cc\u662f\u9884\u5904\u7406\u51fa\u6bcf\u4e00\u4f4d\u6570\u7684\u4e0a\u754c \n    {\n        num[++len]=x%10;\n        x=x/10;\n    }\n    return DFS(len,1,1,...);//\u6709\u524d\u5bfc0\u548c\u4e0a\u754c\u9650\u5236 \n} \nint main()\n{\n    cin>>a>>b;\n    cout<<solve(b)-solve(a-1)<<endl;//\u53ef\u4ee5\u5148\u6c421~b\u4e2d\u6ee1\u8db3\u9650\u5236\u7684\u4e2a\u6570\uff0c\u518d\u6c421~a-1\u4e2d\u6ee1\u8db3\u9650\u5236\u7684\u6570\u7684\u4e2a\u6570\uff0c\u76f8\u51cf\u5373\u53ef \n} \n```\n\n4. \u5177\u4f53\u89e3\u6cd5\uff1a\n\n- \u6709\u4e86\u6a21\u677f\u4e4b\u540e\uff0c\u5c31\u4e0d\u614c\u4e86.\u5269\u4e0b\u5904\u7406\u4e00\u4e0b\u5c0f\u95ee\u9898\uff0c\u5957\u6a21\u677f\u5373\u53ef.\n\n- \u9996\u5148\u9650\u5236\u6761\u4ef6\u548c\u6570\u5b57\u548c\u662f\u6709\u5173\u7cfb\u7684\uff0c\u540c\u65f6\u8fd8\u53ef\u4ee5\u6ce8\u610f\u5230\u4e00\u4e2a\u6570\u7684\u6570\u5b57\u548c\u662f\u5f88\u5c0f\u7684\uff0c\u90a3\u4e48\u5c31\u542f\u53d1\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u8fd9\u4e2a\u6570\u5b57\u548c sum \u662f\u591a\u5c11\uff0c\u7136\u540e\u8003\u8651\u6709\u591a\u5c11\u6570\uff0c\u5b83\u7684\u6570\u4f4d\u548c\u662f sum\uff0c\u4e14\u8fd9\u4e2a\u6570\u5bf9 sum \u53d6\u6a21\u4e3a 0\uff0c\u4e5f\u5c31\u662f\u8fd9\u4e2a\u6570\u7684 sum \u7684\u500d\u6570.\n\n- \u6309\u7167\u6570\u4f4d dp \u7684\u4e00\u822c\u5957\u8def\uff0c\u6211\u4eec\u5c31\u8bbe dp[i][sum][mod] \u8868\u793a\u5230\u4e86\u7b2c i\u4f4d\uff0c\u4e4b\u524d\u7684\u6570\u4f4d\u548c\u662f sum\uff0c\u6570\u5b57\u5bf9\u679a\u4e3e\u7684\u548c\u53d6\u6a21\u662f mod\uff0c\u8003\u8651\u679a\u4e3e\u8fd9\u4f4d\u662f\u591a\u5c11\uff0c\u4e00\u76f4\u5230\u8fb9\u754c\u5373\u53ef.\n\n- \u4e0b\u9762\u5957\u6a21\u677f\u5c31\u53ef\u4ee5\u5566\uff01\uff01\uff01\n\n5. \u4e0b\u9762\u4e0a\u4ee3\u7801\uff08\u6211\u77e5\u9053\u5404\u4f4d\u5927\u4f6c\u4e5f\u4e0d\u9700\u8981\u4ee3\u7801\uff09\uff1a\n\n```\n#include<iostream>\n#include<cstring>\n\n#define LL long long\n\nusing namespace std;\n\nLL dp[20][200][200],a,b,num[20],lent,Sum,ans;\n\nLL DFS(int len,int sum,int mod,int limit)//\u5206\u522b\u4ee3\u8868\u4f4d\u6570,\u5f53\u524d\u586b\u4e86\u7684\u6570\u5b57\u4e4b\u548c,\u6570\u5b57\u5bf9\u679a\u4e3e\u7684\u548c\u53d6\u6a21\u662fmod,\u6709\u6ca1\u6709\u4e0a\u754c\u9650\u5236 \n{\n\tif(!len)  return sum==Sum&&!mod?1:0;//\u8fb9\u754c\u60c5\u51b5\uff1a\u679a\u4e3e\u5b8c\u6bcf\u4e00\u4f4d\uff0c\u5e76\u4e14sum\u7b49\u4e8e\u5f53\u524d\u679a\u4e3e\u7684\u6570\u5b57\u548c\uff0c\u6a21\u6570\u662f0\uff0c\u5373\u7b26\u5408\u8981\u6c42 \n\tif(dp[len][sum][mod]!=-1&&!limit)  return dp[len][sum][mod];\n\tLL res=0,maxx=limit?num[len]:9;//\u4e0a\u754c \n\tfor(int i=0;i<=maxx;i++)\n\tres+=DFS(len-1,sum+i,(mod*10+i)%Sum,limit&&(i==maxx));//DFS\u4e0b\u4e00\u4f4d\u7684\u60c5\u51b5 \n\treturn limit?res:dp[len][sum][mod]=res;//\u6709\u9650\u5236\u5c31\u4e0d\u66f4\u65b0\uff0c\u5426\u5219\u66f4\u65b0 \n}\n\nLL solve(LL x)\n{\n\tlent=ans=0;\n\twhile(x)//\u5904\u7406\u51fa\u4e0a\u754c \n\t{\n\t\tnum[++lent]=x%10;\n\t\tx/=10;\n\t}\n\tfor(Sum=1;Sum<=lent*9;Sum++)//\u679a\u4e3e\u6570\u5b57\u548c \n\tmemset(dp,-1,sizeof(dp)),ans+=DFS(lent,0,0,1);//\u6ce8\u610f\u8fd9\u91cc\u8981\u6e05\u96f6 \n\treturn ans;\n}\n\nint main()\n{\n\tcin>>a>>b;\n\tcout<<solve(b)-solve(a-1)<<endl;//\u533a\u95f4\u7b26\u5408\u8981\u6c42\u7684\u6570\u7684\u4e2a\u6570 \n\t\t\n\treturn 0;\n} \n```\n\n\u53bb\u6389\u7a7a\u884c\u540e30\u6765\u884c\uff0c\u4e5f\u662f\u6bd4\u8f83\u77ed\u7684\u4e86.\n\n### [Plus Ultra!!!](https://www.luogu.org/blog/OnePunchManGO/)\n",
        "postTime": 1567828289,
        "uid": 126136,
        "name": "Plus_Ultra",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4127 \u3010\u540c\u7c7b\u5206\u5e03\u3011"
    },
    {
        "content": "# \u9898\u76ee\u5927\u610f\uff1a\n\n\u7ed9\u51fa\u4e24\u4e2a\u6570 $a,b$\uff0c\u6c42\u51fa $[a,b]$ \u4e2d\u5404\u4f4d\u6570\u5b57\u4e4b\u548c\u80fd\u6574\u9664\u539f\u6570\u7684\u6570\u7684\u4e2a\u6570\u3002\n\n# \u6b63\u6587\uff1a\n\n\u5728\u533a\u95f4\u5185\u7684\u8ba1\u6570\u5185\u95ee\u9898\uff0c\u8003\u8651\u5230\u4f7f\u7528 \u6570\u4f4dDP\u3002\n\n\u6293\u4f4f\u9898\u76ee\u5927\u610f\u4e2d\u7684\u5173\u952e\u8bcd\uff1a\n\n> \u6c42\u51fa $[a,b]$ \u4e2d\u5404\u4f4d\u6570\u5b57**\u4e4b\u548c**\u80fd**\u6574\u9664**\u539f\u6570\u7684\u6570\u7684\u4e2a\u6570\u3002\n\n\u4e00\u822c\u6570\u4f4dDP\u7684\u72b6\u6001\u7684\u9690\u85cf\u5728\u9898\u76ee\u4e2d\uff0c\u56e0\u6b64\u5f97\u51fa\u52a8\u6001\u89c4\u5212\u7684\u72b6\u6001 $f_{len,sum,mod,pos}$ \u8868\u793a\u5f53\u7b2c $len$ \u4f4d\u5404\u4f4d\u6570\u5b57\u4e4b\u548c\u4e3a $sum$ \u9664\u539f\u6570\u7684\u4f59\u662f $mod$ \u4e14\u6709\u6ca1\u6709\u78b0\u9876\u65f6\u7684\u4e2a\u6570\u3002\u5f97\u5230\u4e86\u72b6\u6001\u63a5\u4e0b\u6765\u5c31\u53ea\u662f\u7b80\u5355\u7684\u677f\u5b50\u4e86\u3002\n\n# \u4ee3\u7801\uff1a\n\n```cpp\n\nll dfs(ll len, ll sum, ll x, bool pos)\n{\n\tif(sum + 9 * len < mod) return 0;\n\tif(!len) return sum == mod && x == 0;\n\tif((~f[len][sum][x][pos])&& !pos)\n\t\treturn f[len][sum][x][pos];\n\tint m = pos ? a[len]: 9;\n\tll ans = 0;\n\tfor (int i = 0; i <= m && i + sum <= mod; i++)\n\t{\n\t\tans += dfs(len - 1, sum + i, (10ll * x + i) % mod, i == a[len] && pos);\n\t}\n\tif(!pos) f[len][sum][x][pos] = ans;\n\treturn ans;\n\t\n} \n\nll solve(ll n)\n{\n\tmemset(a, 0, sizeof(a));\n\tll x = n;\n\tll len = 0;\n\tfor (; x; x /= 10)a[++len] = x % 10;\n\tll ans = 0;\n\tfor (mod = 1; mod <= len * 9; mod ++)\n\t{\n\t\tmemset(f, -1, sizeof(f));\n\t\tans += dfs(len, 0, 0, 1);\n\t}\n\treturn ans;\n}\n```",
        "postTime": 1595126963,
        "uid": 80695,
        "name": "Jayun",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4127 \u3010[AHOI2009]\u540c\u7c7b\u5206\u5e03\u3011"
    },
    {
        "content": "## \u9898\u89e3\n### \u6d45\u8c08\u6570\u4f4ddp\n\u6628\u5929\u901a\u8fc7\u7f51\u8bfe\u590d\u4e60\u4e86\u4e00\u4e0b\u6570\u4f4d$dp$\uff0c\u7136\u540e\u6765\u505a\u51e0\u9053\u6570\u4f4d$dp$ \u7684\u9898\u6765\u7ec3\u7ec3\u624b\u3002\n\n\u7ecf\u5178\u7684\u6570\u4f4d$dp$ \u662f\u8981\u6c42**\u7edf\u8ba1\u7b26\u5408\u9650\u5236\u7684\u6570\u5b57\u7684\u4e2a\u6570**\u3002\n\n\u4e00\u822c\u7684\u5f62\u5f0f\u662f\uff1a\u6c42\u533a\u95f4 $[ n , m ]$ \u6ee1\u8db3\u9650\u5236 $f ( 1 )$ \u3001$f ( 2 )$ \u3001$f ( 3 )$ \u7b49\u7b49\u7684\u6570\u5b57\u7684\u6570\u91cf\u662f\u591a\u5c11\u3002**\u6761\u4ef6 $f ( i )$  \u4e00\u822c\u4e0e\u6570\u7684\u5927\u5c0f\u65e0\u5173\uff0c\u800c\u4e0e\u6570\u7684\u7ec4\u6210\u6709\u5173\u3002**\n\n\u5584\u7528\u4e0d\u540c\u8fdb\u5236\u6765\u5904\u7406\uff0c\u4e00\u822c\u95ee\u9898\u90fd\u662f\u5341\u8fdb\u5236\u548c\u4e8c\u8fdb\u5236\u7684\u6570\u4f4d$dp$\u3002\n\n\u6570\u4f4d$dp$ \u7684\u90e8\u5206\u4e00\u822c\u90fd\u662f\u5f88\u5957\u8def\u7684\uff0c\u4f46\u662f\u6709\u4e9b\u9898\u76ee\u5728\u6570\u4f4d$dp$ \u5916\u9762\u5957\u4e86\u4e00\u4e2a\u534e\u4e3d\u7684\u5916\u8863\uff0c\u6709\u65f6\u6211\u4eec\u96be\u4ee5\u770b\u51fa\u6765\u3002\n\n\u6570\u4f4d$dp$ \u4e00\u822c\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u6765\u5b9e\u73b0\u3002\n\n**\u6570\u4f4d$dp$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e0e\u4f4d\u6570\u6709\u5173\u3002** \n\n### \u56de\u5230\u672c\u9898 \n\u4e00\u4e2a\u5f88\u81ea\u7136\u7684\u60f3\u6cd5\u662f\u5728\u641c\u7d22\u8fc7\u7a0b\u4e2d\u7ef4\u62a4\u5f53\u524d\u5df2\u7ecf\u9009\u7684\u6570\u7684\u5927\u5c0f\u548c\u5404\u4e2a\u4f4d\u7684\u6570\u5b57\u4e4b\u548c\uff0c\u5f53\u679a\u4e3e\u5b8c\u6240\u6709\u4f4d\u4e4b\u540e\u5224\u65ad\u6a21\u6570\u662f\u5426\u4e3a $0$ \u5373\u53ef\uff1b\n\n\u60f3\u6cd5\u56fa\u7136\u4e0d\u9519\uff0c\u4f46\u662f\u6570\u5b9e\u5728\u592a\u5927\uff0c\u6ca1\u6cd5\u8bb0\u5fc6\u5316\uff0c\u4f1a\u8d85\u65f6\uff0c\u4e0d\u53ef\u53d6\uff01\n\n**\u8003\u8651\u5230\u6211\u4eec\u5176\u5b9e\u5e76\u4e0d\u5173\u5fc3\u8fd9\u4e2a\u6570\u672c\u8eab\u662f\u51e0\uff0c\u53ea\u9700\u5173\u5fc3\u8fd9\u4e2a\u6570\u6a21\u5404\u4e2a\u4f4d\u7684\u6570\u5b57\u4e4b\u548c\u662f\u51e0\uff0c\u800c\u6a21\u6570 ( \u5404\u4e2a\u4f4d\u7684\u6570\u5b57\u4e4b\u548c ) \u662f\u5c0f\u4e8e $9*18$ \u7684\uff0c\u6240\u4ee5\u4f59\u6570\u4e5f\u662f\u5c0f\u4e8e $9*18$ \u7684\uff0c\u53ef\u884c\u3002**\n\n\u4f46\u662f\u5728\u9009\u6570\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6a21\u6570\u4e5f\u662f\u53d8\u5316\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u65e0\u6cd5\u7ef4\u62a4\u4f59\u6570\u7684\u5927\u5c0f\uff0c\u600e\u4e48\u529e\u5462\uff1f\n\n**\u6211\u4eec\u8ba9\u6a21\u6570\u4e0d\u53d8\uff01**\n\n**\u6211\u4eec\u53ef\u4ee5\u53bb\u679a\u4e3e $[ 1 , x ]$ \u8303\u56f4\u5185\u7684\u6240\u6709\u6570\u7684\u6700\u5927\u7684\u5404\u4e2a\u4f4d\u7684\u6570\u5b57\u4e4b\u548c\u662f\u51e0\uff0c\u7b49\u5230\u9009\u5b8c\u6240\u6709\u4f4d\u4e4b\u540e\uff0c\u518d\u5224\u65ad\u4f60\u9009\u5b8c\u7684\u6570\u7684\u5404\u4e2a\u4f4d\u7684\u6570\u5b57\u4e4b\u548c\u4e0e\u4f60\u4e00\u5f00\u59cb\u679a\u4e3e\u7684\u662f\u5426\u76f8\u540c\u5373\u53ef\uff0c\u4e0d\u76f8\u540c\u5373\u4e0d\u5408\u6cd5\u72b6\u6001\uff1b**\n\n### \u526a\u679d\n\u60f3\u51fa\u6b63\u89e3\u7684\u4f60\u5f00\u5f00\u5fc3\u5fc3\u5730\u628a\u4ee3\u7801\u4ea4\u4e0a\u53bb\uff0c\u7136\u540e$TLE$\u4e86......\n\n\u8003\u8651\u600e\u4e48\u526a\u679d\uff0c\u8bb0\u5fc6\u5316\u6211\u4eec\u90fd\u52a0\u4e0a\u4e86\uff0c\u770b\u6765\u53ea\u80fd\u5728**\u5404\u4e2a\u4f4d\u7684\u6570\u5b57\u4e4b\u548c**\u4e0a\u9762\u52a8\u70b9\u624b\u811a\u4e86$qwq$\u3002\n\n\u8003\u8651\u5230\u5224\u65ad\u4e00\u4e2a\u72b6\u6001\u5408\u6cd5\u7684\u524d\u63d0\u662f**\u4f60\u9009\u51fa\u7684\u5404\u4e2a\u4f4d\u7684\u6570\u5b57\u4e4b\u548c\u8981\u7b49\u4e8e\u4f60\u4e00\u5f00\u59cb\u679a\u4e3e\u7684\u90a3\u4e2a\u6570**\uff0c\u7531\u6b64\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u4e24\u4e2a\u53ef\u884c\u6027\u526a\u679d\uff1a\n\n**\u2460. \u5982\u679c\u5f53\u524d\u4f60\u9009\u7684\u5404\u4e2a\u4f4d\u7684\u6570\u5b57\u4e4b\u548c $sum$ \u5df2\u7ecf\u5927\u4e8e\u4e86\u4f60\u4e00\u5f00\u59cb\u679a\u4e3e\u7684\u90a3\u4e2a\u6570\uff0c\u90a3\u4e48\u4e4b\u540e\u7684\u72b6\u6001\u4e00\u5b9a\u662f\u4e0d\u5408\u6cd5\u7684\uff0c\u76f4\u63a5\u8fd4\u56de $0$ \u5373\u53ef\uff1b**\n\n**\u2461. \u5982\u679c\u4f60\u5269\u4e0b\u7684\u6240\u6709\u4f4d\u90fd\u9009\u4e86 $9$\uff0c\u4f46\u662f\u52a0\u8d77\u6765\u7684 $sum$ \u8fd8\u662f\u6bd4\u4f60\u4e00\u5f00\u59cb\u679a\u4e3e\u7684\u90a3\u4e2a\u6570\u5c0f\uff0c\u90a3\u4e48\u4e4b\u548c\u518d\u600e\u4e48\u9009\u90fd\u662f\u4e0d\u5408\u6cd5\u7684\uff0c\u76f4\u63a5\u8fd4\u56de $0$ \u5373\u53ef\uff1b**\n\n$Code$\uff1a\n```\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nlong long l,r;\nint c[100];\nlong long dp[100][200][200];\nlong long dfs(int k,int Mod,int mod,int sum,bool limit)  //\u5f53\u524d\u6b63\u5728\u9009\u7b2ck\u4f4d,\u6a21\u6570\u662fMod,\u4f59\u6570\u662fmod,\u9009\u7684\u6240\u6709\u4f4d\u7684\u6570\u5b57\u4e4b\u548c\u4e3asum,\u662f\u5426\u9876\u4e0a\u754c \n{\n\tif(sum>Mod||sum+9*(k+1)<Mod) return 0;               //\u5982\u679c\u5f53\u524d\u9009\u7684\u5404\u4e2a\u6570\u7684\u6570\u5b57\u4e4b\u548c\u5df2\u7ecf\u5927\u4e8eMod\u4e86,\u6216\u8005\u4e4b\u540e\u7684\u4f4d\u6570\u90fd\u90099\u8fd8\u662f\u5c0f\u4e8eMod,\u90a3\u4e48\u4e0d\u7528\u641c\u4e86,\u80af\u5b9a\u662f\u4e0d\u5408\u6cd5\u7684 \n\tif(k<0)                                              //\u679a\u4e3e\u5b8c\u6240\u6709\u4f4d\u6570\u4e86 \n\t{\n\t\tif(sum==Mod&&mod==0) return 1;                   //\u5fc5\u987b\u8981\u4fdd\u8bc1\u4f60\u9009\u7684\u5404\u4e2a\u4f4d\u7684\u6570\u5b57\u4e4b\u548c\u7b49\u4e8eMod,\u4e14\u4f59\u6570mod==0\u624d\u662f\u7b26\u5408\u8981\u6c42\u7684\u72b6\u6001 \n\t\treturn 0;\n\t}\n\tif(!limit&&dp[k][mod][sum]!=-1) return dp[k][mod][sum]; //\u8bb0\u5fc6\u5316 \n\tint up=9;\n\tif(limit) up=c[k];                                   //up\u662f\u5f53\u524d\u4f4d\u6240\u80fd\u586b\u7684\u6700\u5927\u6570\u5b57 \n\tlong long ans=0;\n\tfor(int i=0;i<=up;i++)\n\t{\n\t\tans+=dfs(k-1,Mod,(mod*10+i)%Mod,sum+i,limit&&i==up);//\u8f6c\u79fb\u5230\u4e0b\u4e00\u4f4d \n\t}\n\tif(!limit) dp[k][mod][sum]=ans;                      \n\treturn ans;\n}\nlong long solve(long long x)                             //\u6c42[1,x]\u5185\u7b26\u5408\u6761\u4ef6\u7684\u6570\u7684\u4e2a\u6570 \n{\n\tmemset(c,0,sizeof(c));\n\tint len=0;\n\twhile(x)                                             //\u5c06x\u4e00\u4f4d\u4e00\u4f4d\u5730\u62c6\u5f00 \n\t{\n\t\tc[len++]=x%10;\n\t\tx/=10;\n\t}\n\tlong long ans=0;\n\tfor(int i=1;i<=9*len;i++)                            //\u679a\u4e3e\u6240\u6709\u6570\u7684\u5404\u4f4d\u6570\u5b57\u4e4b\u548c,\u6700\u5927\u662f9*len \n\t{\n\t\tmemset(dp,-1,sizeof(dp));                        //\u6ce8\u610f\u6bcf\u6b21\u641c\u7d22\u524d\u90fd\u8981memset \n\t\tans+=dfs(len-1,i,0,0,1);                         //\u73b0\u5728\u5728\u679a\u4e3e\u7b2clen-1\u4f4d,\u6a21\u6570\u662fi,\u4f59\u6570\u662f0,\u9009\u7684\u5404\u4e2a\u4f4d\u7684\u6570\u5b57\u4e4b\u548c\u4e3a0,\u9876\u4e0a\u754c \n\t} \n\treturn ans; \n}\nint main()\n{\n\tscanf(\"%lld %lld\",&l,&r);\n\tprintf(\"%lld\\n\",solve(r)-solve(l-1));                //\u524d\u7f00\u548c\u7684\u601d\u60f3 \n\treturn 0;\n}\n```\n\n### \u603b\u7ed3\n$10$ \u8fdb\u5236\u6570\u4f4d$dp$ \u7684\u57fa\u672c\u6700\u7b80\u5355\u7684\u5f62\u5f0f\u3002\n\n\u8bb0\u5fc6\u5316\u641c\u7d22\u5904\u7406\u6570\u4f4d$dp$ \u7684\u4ee3\u7801\u5b9e\u73b0\uff0c\u6570\u4f4d$dp$ \u4e00\u822c\u90fd\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u6765\u505a\u3002\n\n\u8003\u5bdf\u601d\u7ef4\u7684\u6570\u4f4d$dp$ \u5f80\u5f80\u4f1a\u548c\u5176\u4ed6\u5982\u679a\u4e3e\u7b97\u6cd5\u7ed3\u5408\uff0c\u6216\u4f5c\u4e3a\u539f\u95ee\u9898\u7684\u5b50\u95ee\u9898\u3002\n\n\u9664\u4e86\u5341\u8fdb\u5236\uff0c\u4e8c\u8fdb\u5236\u7684\u6570\u4f4d$dp$ \u4e5f\u662f\u5e38\u89c1\u7684\uff0c\u6b64\u5916 $K$ \u8fdb\u5236\u7684\u4e5f\u662f\u53ef\u4ee5\u7684\u3002\n",
        "postTime": 1593244203,
        "uid": 177070,
        "name": "\u6697\u3056\u4e4b\u6b87",
        "ccfLevel": 6,
        "title": "\u9898\u89e3P4127 [AHOI2009]\u540c\u7c7b\u5206\u5e03"
    },
    {
        "content": "####  ~~\u6e05\u5317\u5b66\u5802\u7684\u8003\u8bd5\u9898~~\u7684\u5f31\u5316\u7248\u3002\n###### \u63d0\u4f9b\u4e00\u79cd\u65b0\u7684\u4f18\u5316\u65b9\u5f0f\n\n\u6211\u505a\u7684\u9898 \u662f\u5728C\u8fdb\u5236\u4e0b \u7684 \u4e2a\u6570 \u5176\u5b9e \u548c\u5341\u8fdb\u5236\u4e00\u6837\uff0c\u53ea\u662f\u628a %10\uff0c/10\n\u6539\u4e3a %c\uff0c/c \u5176\u5b83\u7684 \u7167\u642c\u3002\u3002\n\u5728\u8fd9\u91cc\u6211\u8bb2\u4e00\u79cd \u65b0\u7684\u4f18\u5316\u65b9\u5f0f\u53ef\u4ee5\u4f18\u5316\u4e00\u534a\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\n\n#### \u8be6\u7ec6\u7684\u7ec6\u8282\u5982\u4e0b\uff1a\n######  1.\u522b\u7528 memset \u4f60\u7528\u4e86 \u4ec0\u4e48 dp\u6570\u7ec4 \u6e05\u9664\u4ec0\u4e48dp\u6570\u7ec4\n######  2.\u5728\u4e00\u679a\u4e3e\u7279\u5b9a\u7684\u6570\u5b57\u548c\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5 \u6c42\u51fa\uff0c\u4e24\u4e2a\u8fb9\u754c\u5728\u8be5\u6761\u4ef6\u4e0b\u7684\u503c\uff0c\u4e0d\u7528\u679a\u4e3e\u4e00\u6b21\u6e05\u9664\u4e00\u6b21\uff0c\u679a\u4e3e\u4e00\u6b21\u6e05\u9664\u4e00\u6b21\u3002\n######  3.\u4e0d\u5f00 longlong \u6b7b\u5168\u5bb6\u3002\n######  4.\u548c\u672c\u9898\u65e0\u5173\u7684\u3002\u3002 \u82e5\u662fN\u8fdb\u5236\u7684\u60c5\u51b5\u4e0b\uff0c\u6570\u7ec4\u5e94\u9002\u5ea6\u7684\u589e\u5927\u3002\n---------------------------------------------RP\u5b88\u6052------------------------------------------------\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\nusing namespace std;\nlong long dp[70][401][401],g[70],a,b,c,MOD,gg[70];\nlong long dfs(int len,int sum,int mod,int limt)\n{\n    if(len<=0&&mod==0&&sum==MOD)// \u5982\u679c \u7b26\u5408\u6761\u4ef6 \u5c31 \u8fd4\u56de 1 \n    return 1;\n    if(len<=0)// \u4e0d\u7b26\u5408 \u6761\u4ef6 \u8fd4\u56de 0 \n    return 0;\n    int top=limt?g[len]:(c-1);// limt==1 \u4e3a\u64e6\u8fb9\uff0climt==0 \u4e3a\u4e0d\u64e6\u8fb9 \n    if(!limt&&dp[len][sum][mod]!=-1)return dp[len][sum][mod];// \u8bb0\u5fc6\u5316\u641c\u7d22\u7684\u6838\u5fc3\u3002\u3002\u6ce8\u610f\u521d\u503c \u4e3a-1 \u907f\u514d\u91cd\u590d \u641c\u5bfb\u3001 \n    long long res=0;\n    for(int i=0;i<=top;++i)\n    res+=dfs(len-1,sum+i,(mod*c+i)%MOD,limt&&top==i);// \u7edf\u8ba1\u7b54\u6848\u3001 \n    if(!limt)\n    dp[len][sum][mod]=res;//\u8d4b\u503c\u3001 \n\treturn res;\n}\nlong long dfs1(int len,int sum,int mod,int limt)//\u540cdfs \u53ea\u662f \u628a\u6570\u7ec4 \u6539\u4e86\u3002 \n{\n    if(len<=0&&mod==0&&sum==MOD)\n    return 1;\n    if(len<=0)\n    return 0;\n    int top=limt?gg[len]:(c-1);\n    if(!limt&&dp[len][sum][mod]!=-1)return dp[len][sum][mod];\n    long long res=0;\n    for(int i=0;i<=top;++i)\n    res+=dfs1(len-1,sum+i,(mod*c+i)%MOD,limt&&top==i);\n    if(!limt)\n    dp[len][sum][mod]=res;\n\treturn res;\n}\nlong long solve1(long long nn)\n{\n    int cnt=0;\n    while(nn)\n\t{\n    \tgg[++cnt]=nn%c;\n\t\tnn/=c;\n\t}  \n    return dfs1(cnt,0,0,1);\n}\nlong long solve(long long n)\n{\n    int len=0;\n    while(n)\n\t{\n    \tg[++len]=n%c;\n\t\tn/=c;\n\t}\n    long long res=0;\n    for(MOD=1;MOD<=len*(c-1);MOD++)\n    {\n    \tfor(int i=0;i<=len;i++)//\u7528\u4e86\u4ec0\u4e48 \u6e05\u4ec0\u4e48\u3002 \n    \tfor(int j=0;j<=MOD;j++)\n    \tfor(int k=0;k<=MOD;k++)\n    \tdp[i][j][k]=-1; \n    \tres+=dfs(len,0,0,1);\n    \tres-=solve1(a-1);\n    \t\n\t}\n    return res;\n}\nint main()\n{\n\tfreopen(\"B.in\",\"r\",stdin);\n\tfreopen(\"B.out\",\"w\",stdout);\n\tc=10;\n    scanf(\"%lld%lld\",&a,&b);\n    printf(\"%lld\",solve(b));\n    fclose(stdin);\n    fclose(stdout);\n    return 0;\n}\n```\n",
        "postTime": 1565836499,
        "uid": 128852,
        "name": "\u751f\u800c\u4e3a\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4127 \u3010[AHOI2009]\u540c\u7c7b\u5206\u5e03\u3011"
    },
    {
        "content": "\u5148\u679a\u4e3e\u786e\u5b9a\u6570\u5b57\u4f4d\u603b\u548c\uff0c\u56fa\u5b9a\u603b\u548c\u5c31\u662f\u88f8\u9898\u4e86\n\n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\ntypedef long long ll;\nll a,b;\ninline void init(){\n\tscanf(\"%lld%lld\",&a,&b);\n}\nconst int N=20;\nint num[N],len;\nll dp[N][9*N][9*N];\nll dfs(int pos,int p,int s1,int s2,bool flag){\n\tif (!pos) return (s2==0&&s1==p);\n\tif (s1>p||s1+pos*9<p) return 0;\n\tif ((~dp[pos][s1][s2])&&(!flag)) return dp[pos][s1][s2];\n\tll ans=0; int lim=9;\n\tif (flag) lim=num[pos];\n\tfor (int i=0;i<=lim;i++){\n\t\tans+=dfs(pos-1,p,s1+i,(s2*10+i)%p,flag&&(i==lim));\n\t}\n\tif (!flag) dp[pos][s1][s2]=ans;\n\treturn ans;\n}\ninline ll sol(ll A){\n\tlen=0;\n\tfor (;A;A/=10) num[++len]=A%10;\n\tif (!len) return 0ll;\n\tll ans=0;\n\tfor (int i=1;i<=len*9;i++){\n\t\tmemset(dp,-1,sizeof(dp));\n\t\tans+=dfs(len,i,0,0,1);\n\t}\n\treturn ans;\n}\ninline void solve(){\n\tprintf(\"%lld\\n\",sol(b)-sol(a-1));\n}\nint main(){\n\tinit();\n\tsolve();\n\treturn 0;\n}\n```",
        "postTime": 1531984663,
        "uid": 34444,
        "name": "\u5927\u83dc\u9e21fks",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4127 \u3010[AHOI2009]\u540c\u7c7b\u5206\u5e03\u3011"
    }
]