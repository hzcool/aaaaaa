[
    {
        "content": "### \u6ce8\uff1a\u8fd9\u539f\u672c\u662f\u4e00\u7bc7\u65e5\u62a5\uff0c\u4f46\u7531\u4e8e\u6ca1\u901a\u8fc7\u4e00\u6012\u4e4b\u4e0b\u4ea4\u6210\u9898\u89e3\uff08\u5927\u96fe\n\n\n\n# 0.\u524d\u8a00\uff1a\n\n\u672c\u7bc7\u6587\u7ae0\uff0c\u662f\u4e00\u4f4d OI \u9009\u624b\u65e0\u79c1\u7684\u9988\u8d60\u3002\u4e24\u9053\u51f8\u5305\u4f8b\u9898\uff0c\u4e94\u79cd\u51f8\u5305\u7b97\u6cd5\uff0c\u6db5\u76d6\u4e86\u5e73\u9762\u51f8\u5305\u4ece\u5165\u95e8\u5230\u8fdb\u9636\u7684\u5927\u90e8\u5206\u5957\u8def\u3002\u4f5c\u8005\u76f8\u4fe1\uff0c\u8fd9\u7bc7\u6f02\u4eae\u7684\u535a\u5ba2\uff0c\u53ef\u4ee5\u7ed9\u62fc\u640f\u4e8e OI \u7684\u9010\u68a6\u4e4b\u8def\u4e0a\u7684\u4f60\uff0c\u63d0\u4f9b\u4e00\u4e2a\u6709\u529b\u7684\u63f4\u52a9\u3002\n\n## \u7279\u522b\u9e23\u8c22\uff1a\n\n- \u753b\u56fe\uff1a\u4e3b\u8981\u63d0\u4f9b\u6bd4\u8f83\u7ec6\u7684\u8fde\u7ebf\n\n- \u753b\u56fe3D\uff1a\u4e3b\u8981\u63d0\u4f9b\u63cf\u70b9\u53ca\u6587\u672c\u6846\n\n\u675c\u7edd\u7f51\u4e0a\u641c\u56fe\uff0c\u56fe\u7247\u7eaf\u624b\u753b~~\u7d2f\u6b7b\u6211\u4e86~~\n\n\n# 1.\u5f15\u5165\uff1a\n\u5047\u8bbe\u4e00\u4e2a\u64cd\u573a\u4e0a\u6709\u4e00\u4e9b\u5c0f\u670b\u53cb\uff0c\u4e0b\u9762\u662f\u822a\u62cd\u89c6\u89d2\uff1a\n![](https://i.loli.net/2019/08/15/XBc1gIyiFqrpbfG.png)\n\n\u73b0\u5728\u4ed6\u4eec\u8981\u56f4\u4e00\u4e2a\u7403\u573a\u505a\u6e38\u620f\u3002\n\n\u56e0\u4e3a\u8001\u5e08\u6bd4\u8f83\u61d2\uff0c\u6240\u4ee5\u5c31\u53ea\u80fd\u9ebb\u70e6\u4e00\u4e9b\u5c0f\u670b\u53cb\u4e86\uff08\u4ed6\u4eec\u81ea\u5df1\u6491\u7740\u7ef3\u5b50\u9632\u6b62\u7403\u6eda\u51fa\u53bb\uff09\n\n\n\u800c\u5c0f\u670b\u53cb\u53c8\u4e0d\u52a8\u8111\u5b50\u3002\u6240\u4ee5\u5c31\u53ea\u80fd\u9ebb\u70e6\u4f60\u6765\u51fa\u4e3b\u610f\u4e86\u3002\n\n\u663e\u7136\uff0c\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u8fd9\u6837\uff1a\n\n![](https://i.loli.net/2019/08/15/QnFIRfp9AkaLE4X.png)\n\n\u5148\u628a\u4e00\u5708\u5927\u7ef3\u5b50\u653e\u5728\u5916\u9762\uff0c\u7136\u540e\u5f80\u91cc\u7f29\uff0c\u76f4\u5230\uff1a\n\n![](https://i.loli.net/2019/08/15/2P5nKDeSzZpXyxB.png)\n\n\u6700\u5916\u5708\u7684\u5c0f\u670b\u53cb\u6491\u8d77\u4e86\u7ef3\u5b50\u3002\n\n\u6b64\u65f6\u9ed1\u7ebf\u56f4\u6210\u7684\u591a\u8fb9\u5f62\u7684\u9876\u70b9\u5c31\u662f\u6700\u5916\u5708\u5c0f\u670b\u53cb\u6240\u5728\u7684\u4f4d\u7f6e\u3002\n\n### \u7531\u6b64\uff0c**\u6211\u4eec\u5c31\u5b9a\u4e49\u9ed1\u7ebf\u56f4\u6210\u7684\u56fe\u5f62\u4e3a\u4e00\u4e2a\u5e73\u9762\u51f8\u5305**\n\n\u90a3\u4e48\uff0c\u6362\u4e00\u79cd\u5b9a\u4e49\u65b9\u5f0f\uff0c\u6211\u4eec\u5c31\u5b9a\u4e49\uff1a\n\n**\u5e73\u9762\u51f8\u5305\u662f\u6307\u8986\u76d6\u5e73\u9762\u4e0an\u4e2a\u70b9\u7684\u6700\u5c0f\u7684\u51f8\u591a\u8fb9\u5f62\u3002**\n\n\u5f53\u7136\uff0c\u6211\u4eec\u53d1\u73b0\u5728\u7a0b\u5e8f\u4e2d\u5374\u65e0\u6cd5\u6a21\u62df\u6b64\u8fc7\u7a0b\uff0c\u4e8e\u662f\u6709\u4e86\u4e0b\u6587\u7684\u8bde\u751f\u3002\n\n# 2\u3001\u659c\u7387\u903c\u8fd1\u6cd5\n\n**\u5176\u5b9e\u8fd9\u4e5f\u662f\u4e00\u79cd\u5bb9\u6613\u60f3\u5230\u7684\u7b97\u6cd5\uff0c\u4f46\u662f\u5e76\u4e0d\u5e38\u7528\uff08\u4ee3\u7801\u590d\u6742\u5ea6\u9ad8\uff09\uff0c\u6211\u4eec\u7a0d\u4f5c\u4e86\u89e3**\n\n\n\n\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e2a\u601d\u8def\u5177\u4f53\u5316\uff1a\n\n![](https://i.loli.net/2019/08/15/9DukMvbVAZ5XglE.png)\n\n![](https://i.loli.net/2019/08/15/Bb7wdgMAnvFOfQU.png)\n\n\uff08k\u662f\u659c\u7387\uff09\n\n- (1)\u9996\u5148\u5728\u6240\u6709\u70b9\u4e2d\u627e\u51fa\u4e00\u4e2ay\u503c\u6700\u5c0f\u7684\u70b9\uff0c\u8bb0\u4e3a$P_1$\n- (2)\u4ece$P_1$\u51fa\u53d1\uff0c\u521a\u5f00\u59cbk=0\uff0c\u5373\u4e3a\u6c34\u5e73\u72b6\u6001\u3002\u7136\u540e\u6309\u7167\u4e0a\u56fe\u7684\u793a\u610f\u6cbf\u9006\u65f6\u9488\u65b9\u5411\u5bfb\u627e\u3002\u5373\u5f00\u59cb\u5728$k>0$\u4e14$(x_2>x1,y_2>y_1)$\u4e2d\u627ek\u6700\u5c0f\u7684\u70b9$P_2$\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\n\n\nQ:\u5982\u679c\u8fc7\u7a0b\u4e2d\u6709\u591a\u4e2a\u70b9\u7b26\u5408\u8981\u6c42\u600e\u4e48\u529e\uff1f\n\nA:\u90a3\u4e48\u5c31\u53d6\u8ddd\u79bb$P_1$\u6700\u8fdc\u7684\u70b9\uff0c\u56e0\u4e3a\u8fd9\u6837\u80fd\u4fdd\u8bc1\u5212\u5b9a\u7684\u8303\u56f4\u6700\u5927\u3002\n\n\n- \uff083\uff09\u4ece$P_2$\u51fa\u53d1\uff0c\u7528\uff082\uff09\u7684\u65b9\u6cd5\u627e$P_3$\n\n- (4)\u6700\u540e\u76f4\u5230$P_m=P_1$\u4e3a\u6b62\uff08\u5df2\u5f62\u6210\u51f8\u5305\uff09\u3002\n\nQ:\u4e3a\u4ec0\u4e48\u8981\u521a\u5f00\u59cb\u627ey\u503c\u6700\u5c0f\u7684\u70b9\uff1f\n\nA:\u7ed3\u5408\u521a\u5f00\u59cb\u7684\u5c0f\u670b\u53cb\u62c9\u7ef3\u5b50\u53ef\u77e5\uff0c\u6211\u4eec\u5728\u4e0b\u9762\u7684\u7ef3\u5b50\u4e00\u5b9a\u4f1a\u88aby\u503c\u6700\u5c0f\u7684\u5c0f\u670b\u53cb\u6321\u4f4f\uff0c\u5373\u4ed6\u4e00\u5b9a\u5728\u51f8\u5305\u4e0a\uff0c\u4e8e\u662f\u5c31\u4ee5\u4ed6\u4e3a\u57fa\u51c6\u6765\u64cd\u4f5c\u3002\n\n\nQ:\u4e07\u4e00\u6700\u540e\u6ca1\u6709\u4e00\u4e2a$P_m$\u4f7f\u5f97$P_m=P_1$\u5462\uff1f\n\nA:\u6613\u8bc1\u5fc5\u6709\uff0c\u5e73\u9762\u51f8\u5305\u603b\u662f\u5b58\u5728\u7684\u3002\n\n\n**\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(nm)** \n\nn\u4e3a\u6240\u6709\u5c0f\u670b\u53cb\u7684\u6570\u91cf\uff0cm\u4e3a\u820d\u5df1\u4e3a\u4eba\u7684\u5c0f\u670b\u53cb\u7684\u6570\u91cf\u3002\n\n\n\u8bf4\u5230\u8fd9\u91cc\u5927\u5bb6\u90fd\u660e\u767d\u4e86\uff0c\u4e00\u4f46\u51f8\u5305\u4e0a\u7684\u4e24\u4e2a\u70b9\u7684\u659c\u7387\u8d8b\u4e8e\u65e0\u7a77\u5927\uff0c\u90a3\u4e48\u5c31\u65e0\u6cd5\u89e3\u51b3\u4e86\u3002\n\n\u4e8e\u662f~~\u7a9d\u7684\u65e5\u62a5\u53c8\u80fd\u8fdb\u884c\u4e0b\u53bb\u4e86~~\u6709\u4eba\u5c31\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u65b9\u6cd5\u3002\n\n# 3\u3001Jarvis\u7b97\u6cd5\n\n\u8fd9\u5176\u5b9e\u662f\u4e00\u79cd\u6570\u5b66\u6784\u9020\u6cd5\n\n\u6211\u4eec\u8fd8\u662f\u628a\u90a3\u7fa4\u5c0f\u670b\u53cb~~\u9a97~~\u8058\u8fc7\u6765\uff1a\n\n![](https://i.loli.net/2019/08/15/XBc1gIyiFqrpbfG.png)\n\n\u6211\u4eec\u8003\u8651\u8ba9\u4e00\u4e2a\u5c0f\u670b\u53cb\u624b\u91cc\u62ff\u7740\u4e00\u6839\u68d2\u5b50\uff1a\n\n![](https://i.loli.net/2019/08/15/2Yabz8PtJ3TC9Xf.png)\n\n\n\u4ece\u5916\u5f80\u91cc\u65cb\u8f6c\u3002\n\n\n\u7136\u540e\u4f1a~~\u6482\u5012~~\u78b0\u5230\u53e6\u4e00\u4e2a\u5c0f\u670b\u53cb\uff1a\n\n![](https://i.loli.net/2019/08/15/rtSldAhkbTmU8gD.png)\n\n\u7136\u540e\u6211\u4eec\u8ba9\u88ab\u68d2\u5b50\u78b0\u5230\u7684\u5c0f\u670b\u53cb\u518d\u53d6\u4e00\u6839\u68d2\u5b50~~\u7ee7\u7eed\u6253\u4eba~~\uff0c\u91cd\u590d\u4ee5\u4e0a\u64cd\u4f5c\u3002\n\n![](https://i.loli.net/2019/08/16/jXep1bG3nYdsTQv.png)\n\n\u5c31\u662f\u8fd9\u6837\u3002\n\n\u4f46\u5982\u679c\u9047\u5230\u4ee5\u4e0b\u60c5\u51b5\uff1a\n\n![](https://i.loli.net/2019/08/16/u7hSdUOgAriNQL3.png)\n\n\u6709\u7684\u5c0f\u670b\u53cb\u5728\u65cb\u8f6c\u68cd\u5b50\u65f6\u540c\u65f6\u78b0\u5230\u4e86\u591a\u4e8e\u4e00\u4e2a\u70b9\uff08\u5373\u4e09\u70b9\u5171\u7ebf\uff09\uff0c\u90a3\u4e48\u663e\u7136\u6211\u4eec\u9700\u8981\u9009\u62e9\u6700\u8fdc\u7684\u70b9\u3002\n\n\u4e0d\u96be\u8bc1\u660e\uff0c\u8fd9\u6837\u4e0b\u6765\u4e5f\u53ef\u4ee5\u56f4\u6210\u4e00\u4e2a\u5e73\u9762\u51f8\u5305\u3002\n\n**\u4ee5\u4e0a\u662f\u5b9a\u5411\u7684\u60f3\u8c61\uff0c\u90a3\u4e48\u4e0b\u9762\u5c31\u6765\u4e25\u8c28\u7684\u8bf4\u660e\u4e00\u4e0b**\n\n\u63cf\u8ff0\u5982\u4e0b\uff1a\n\n![](https://i.loli.net/2019/08/15/6O4tPXh2kYHUBcp.png)\n\n\n\n- \u9996\u5148\u627e\u5230\u4e00\u6761\u76f4\u7ebf$l$\u8fc7\u5176\u4e2d\u4e00\u70b9A\uff0c\u4f7f\u5f97\u6240\u6709\u5176\u4ed6\u7684\u70b9\u90fd\u5728$l$\u7684\u540c\u4e00\u4fa7\u3002\n\n\u8fd9\u79cd\u76f4\u7ebf\u663e\u7136\u4e00\u5b9a\u80fd\u627e\u5230\u3002\n\n\u7531\u6b64\u4e5f\u6613\u8bc1A\u4e00\u5b9a\u4e3a\u51f8\u5305\u4e0a\u4e00\u70b9\u3002\n\n- \u8ba9\u76f4\u7ebf$l$\u4ee5A\u4e3a\u8f74\u70b9\u6cbf\u987a\u65f6\u9488\u6216\u9006\u65f6\u9488\u65b9\u5411\u65cb\u8f6c\uff0c\u76f4\u5230\u62a1\u5230\u9664A\u4ee5\u5916\u7684\u4e00\u70b9B\n\n\u522b\u5fd8\u4e86\u4e0a\u9762\u90a3\u4e2a~~\u5f62\u8c61\u7684~~\u8bb2\u8ff0\uff0c\u5728\u9047\u5230\u591a\u4e8e\u4e00\u4e2a\u70b9\u65f6\u8981\u53d6\u6700\u8fdc\u7684\u3002\n\n- \u91cd\u590d\u4ee5\u4e0a\u64cd\u4f5c\uff0c\u76f4\u5230l\u78b0\u5230A\u70b9\u3002\n\n\n\u5728\u8fc7\u7a0b\u4e2d~~\u53d7\u4f24~~\u88ab\u78b0\u5230\u7684\u70b9\u5c31\u6784\u6210\u4e86\u5e73\u9762\u51f8\u5305\u7684\u9876\u70b9\u5e8f\u5217\u3002\n\n\n**\u5728\u6b64\u8fc7\u7a0b\u4e2d\uff0c\u867d\u7136\u6211\u4eec\u53d1\u73b0\u4e0a\u8ff0\u8fc7\u7a0b\u4ecd\u7136\u4e0d\u592a\u597d\u5b9e\u73b0\uff0c\u4f46\u662f\u6211\u4eec\u8fd8\u662f\u53ef\u4ee5\u901a\u8fc7\u4e00\u7cfb\u5217\u7684\u7384\u5b66\u8f6c\u6362\u5f97\u5230**\n\n\u6211\u4eec\u8003\u8651\u5230B\u70b9\u662f\u6700\u5148\u78b0\u5230\u7684\uff0c\u90a3\u4e48\u65b0\u7684\u76f4\u7ebf$l'$\u5fc5\u7136\u5728A\u548c\u9664B\u53ca\u81ea\u8eab\u4ee5\u5916\u5176\u4ed6\u70b9\u7684\u8fde\u7ebf\u4e2d\u4e0e$l$\u7684\u5939\u89d2\u6700\u5c0f\n\n![](https://i.loli.net/2019/08/15/2clsNh7ZWP3EyCe.png)\n\n\u5373\u7d2b\u2220\u6bd4\u7ea2\u2220\u5927\n\n\u90a3\u4e48\u5728\u4e0b\u56fe\u4e2d\uff1a\n![](https://i.loli.net/2019/08/15/Z61zwH5beDI9fmE.png)\n\n\n$if(\\vec {AP}\\times \\vec {AP_i})z>0$\n\n\u5219$\\vec {AP}$\u5230$\\vec {AP_i}$\u7684\u65cb\u8f6c\u4e3a\u9006\u65f6\u9488\u65cb\u8f6c\u3002\n\n\u663e\u7136\uff0c$\\vec {AP_i}$\u4e0el\u7684\u5939\u89d2\u6bd4$\\vec {AP}$\u7684\u66f4\u63a5\u8fd1\u3002\u4e3a\u66f4\u597d\u7684\u7b54\u6848\u3002\n\n$else$\n\n$if(\\vec {AP}\\times \\vec {AP_i})z=0$\n\n\u90a3\u8bf4\u660eA\uff0cP\uff0c$P_i$\u4e09\u70b9\u5171\u7ebf\uff0c\u81ea\u7136\u53d6\u6700\u8fdc\u7684\u3002\n\n\n\u6211\u4eec\u6309\u8fd9\u4e2a\u987a\u5e8f\u626b\u63cf\u6240\u6709\u7684\u70b9\uff0c\u5c31\u80fd\u627e\u5230\u8fd9\u4e2a\u51f8\u5305\u4e0a\u7684\u4e00\u6761\u8fb9\u3002\n\n\u663e\u800c\u6613\u89c1\uff1a\u6b64\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(nm)$\uff0c\u5373\u6bcf\u6b21\u626bn\u4e2a\u70b9\uff0c\u4e00\u5171m\u6b21\u53ef\u6784\u6210\u51f8\u5305\u3002\n\n\u4f46\u662f\u3002\u3002\u3002\u8fd9\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6\u8fd8\u662f\u4f1a\u51c9\u3002\u3002\u3002\n\n\u5047\u8bbe\u5c31\u662f[\u8fd9\u9053\u9898](https://www.luogu.org/problem/P2742),\u90a3\u4e48\u6211\u4eec\u89c2\u5bdf\u5230$n\\leq 10000$,\u8fd9\u662f\u4e00\u9053\u5e73\u9762\u51f8\u5305\u7684\u6a21\u677f\u9898\uff0c\u4f46\u662f\u5982\u679c\u6570\u636e\u6784\u9020\u5230m=n\u751a\u81f3\u548cn\u76f8\u5dee\u4e0d\u5927\u7684\u60c5\u51b5\uff0c\u90a3\u5c31\u4f1a\u8f7b\u800c\u6613\u4e3e\u7684\u8d85\u65f6\u3002\n\n\u53ef\u89c1\uff0c\u6b64\u7b97\u6cd5\u4ec5\u4ec5\u9002\u7528\u4e8e\u968f\u673a\u70b9\u96c6\uff0c\u5bf9\u4e8e\u523b\u610f\u6784\u9020\u7684\u6570\u636e\u5c31\u4f1a\u88ab\u5361\u6210$O(n^2)$\n\n\u800c\u6bd2\u7624\u7684OI\u600e\u4e48\u4f1a\u4e0d\u5361\u5462\uff1f\n\n**\u8fde\u6a21\u677f\u9898\u90fd\u8fc7\u4e0d\u4e86\uff0c\u770b\u6765\u8fd9\u4e2a\u7b97\u6cd5\u8fd8\u662f\u5f97\u4f18\u5316\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u662f\u5f97\u7528\u4fdd\u9669\u7684\u7b97\u6cd5\uff0c\u4e8e\u662f**\n\n# 4\u3001Graham\u7b97\u6cd5\n\n\u672c\u8d28\uff1a\n\n> Graham\u626b\u63cf\u7b97\u6cd5\u7ef4\u62a4\u4e00\u4e2a**\u51f8\u58f3** \u901a\u8fc7\u4e0d\u65ad\u5728**\u51f8\u58f3**\u4e2d\u52a0\u5165\u65b0\u7684\u70b9\u548c\u53bb\u9664\u5f71\u54cd\u51f8\u6027\u7684\u70b9 \u6700\u540e\u5f62\u6210**\u51f8\u5305**\n\n**\u81f3\u4e8e\u51f8\u58f3\uff1a** \u5c31\u662f\u51f8\u5305\u7684\u4e00\u90e8\u5206\n\n\u7b97\u6cd5\u4e3b\u8981\u7531\u4e24\u90e8\u5206\u6784\u6210\uff1a\n\n- \u6392\u5e8f\n\n- \u626b\u63cf\n\n## \uff081\uff09\u6392\u5e8f\n\n\u6211\u4eec\u7684Graham\u7b97\u6cd5\u7684\u7b2c\u4e00\u6b65\u5c31\u662f\u5bf9\u70b9\u96c6\u8fdb\u884c\u6392\u5e8f\uff0c\u8fd9\u6837\u80fd\u4fdd\u8bc1\u5176\u6709\u5e8f\u6027\uff0c\u4ece\u800c\u5728\u540e\u7eed\u7684\u5904\u7406\u4e2d\u8fbe\u5230\u66f4\u9ad8\u6548\u7684\u6548\u679c\uff0c\u8fd9\u4e5f\u662fGraham\u7b97\u6cd5\u66f4\u4f18\u7684\u539f\u56e0\u3002\n\n\u5f00\u59cb\u64cd\u4f5c\uff1a\n\n- \u6211\u4eec\u8fd8\u662f\u9009\u62e9\u4e00\u4e2ay\u503c\u6700\u5c0f\uff08\u5982\u6709\u76f8\u540c\u9009x\u6700\u5c0f\uff09\u7684\u70b9\uff0c\u8bb0\u4e3a$P_1$\n\n- \u5269\u4e0b\u7684\u70b9\u96c6\u4e2d\u6309\u7167\u6781\u89d2\u7684\u5927\u5c0f\u9006\u65f6\u9488\u6392\u5e8f\uff0c\u7136\u540e\u7f16\u53f7\u4e3a$P_2$~$P_m$\n\n![](https://i.loli.net/2019/08/15/HDJxANk8IqrWcE1.png)\n\n~~\u8fbe\u6210\u6210\u5c31\uff1a\u79cd\u8349\u8fbe\u4eba~~\n\n\n**\u53e6\u5916\u518d\u4ecb\u7ecd\u4e00\u4e2a\u6c42\u6781\u89d2\u7684\u9ed1\u79d1\u6280\uff1aatan2(a[i].y,a[i].x)**\n\n- \u6211\u4eec\u6309\u7167\u6392\u5e8f\u7ed3\u675f\u65f6\u7684\u987a\u5e8f\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u4f9d\u6b21\u8fde\u7ebf\uff0c\u8fd9\u91cc\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u6808\u6765\u5b58\u50a8\uff0c\u6bcf\u6b21\u5165\u6808\uff0c\u5982\u679c\u5373\u5c06\u5165\u6808\u7684\u5143\u7d20\u4e0e\u6808\u9876\u4e24\u4e2a\u5143\u7d20\u6240\u6784\u6210\u4e86\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u51f9\u58f3\u7684\u4e1c\u897f\uff0c\u90a3\u4e48\u663e\u7136\u5904\u4e8e\u9876\u70b9\u7684\u90a3\u4e2a\u70b9\u4e00\u5b9a\u4e0d\u5728\u8fd9\u4e2a\u70b9\u96c6\u7684\u51f8\u5305\u4e0a\uff0c\u800c\u4ed6\u6b63\u597d\u5728\u6808\u9876\uff0c\u6240\u4ee5\u628a\u5b83\u5f39\u51fa\u6808\uff0c\u65b0\u70b9\u5165\u6808\u3002\n\n\n\u4f46\u662f\uff0c\u65b0\u6765\u7684\u70b9\u6709\u53ef\u80fd\u65e2\u8e22\u8d70\u4e86\u6808\u9876\uff0c\u518d\u8fde\u63a5\u65b0\u7684\u6808\u9876\u5143\u7d20\u540e\u5374\u53d1\u73b0\u4ecd\u7136\u53ef\u4ee5\u8e22\u51fa\uff0c\u6b64\u65f6\u5c31\u4e0d\u80fd\u5fd8\u8bb0\u5224\u65ad\u3002\n\n**\u600e\u4e48\u6837\uff0c\u611f\u89c9\u8fd9\u4e2a\u7b97\u6cd5\u5982\u4f55\uff1f**\n\n\u5982\u679c\u60a8\u4e0d\u60f3\u7ea0\u7f20\u4e8e\u7e41\u6742\u7684\u6587\u5b57\u63cf\u8ff0\uff0c\u90a3\u4e48\u4e0b\u9762\u5c31\u6709\u7cbe\u7f8e\u56fe\u7247\u89e3\u8bf4\u732e\u4e0a\u3002\n\n\uff08ps:\u4e0b\u5217\u89e3\u8bf4\u4e2d\u53f3\u8f6c\u5de6\u8f6c\u7b49\u662f\u6307\u4ee5\u4e0a\u4e00\u6761\u8fde\u7ebf\u4e3a\u94c5\u5782\u7ebf\uff0c\u65b0\u7684\u8fde\u7ebf\u504f\u79fb\u7684\u65b9\u4f4d\uff09\n\n---\n\n\u521a\u5f00\u59cb\uff0c\u6211\u4eec\u7684\u70b9\u96c6\u662f\u8fd9\u6837\u7684\uff1a\n\n![](https://i.loli.net/2019/08/15/Bb7wdgMAnvFOfQU.png)\n\n\n\u5176\u4e2dp1\u4e3a\u8d77\u59cb\u70b9\n\n---\n\n\u7136\u540ep2\u51c6\u5907\u5165\u6808\uff0c\u7531\u4e8e\u6808\u4e2d\u5143\u7d20\u8fc7\u5c11\uff0c\u6240\u4ee5\u68c0\u9a8c\u5408\u683c\uff0c\u53ef\u76f4\u63a5\u8fdb\u5165\u3002\n![](https://i.loli.net/2019/08/15/yr3DfaXxniphWeV.png)\n\n----\n\n\u4e4b\u540e\u56e0\u4e3ap3\u4ecd\u4e3a\u5411\u5de6\u8f6c\uff0c\u7b26\u5408\u51f8\u5305\u6761\u4ef6\uff0c\u6240\u4ee5\u6682\u65f6\u5148\u8ba9\u5b83\u8fdb\u53bb\n![](https://i.loli.net/2019/08/15/gClxn32NtVzSmdh.png)\n\n---\n\np4\u51fa\u73b0\u4e86\u53f3\u8f6c\u73b0\u8c61\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u628a\u9876\u70b9p3\u820d\u53bb\uff0c\u5728\u68c0\u67e5p2\u7684\u6027\u8d28\uff0c\u5408\u683c\n\n\u4e8e\u662fp3\u51fa\u6808\uff0cp4\u5165\u6808\n\n![](https://i.loli.net/2019/08/15/oxuORKXyEe9mZJr.png)\n\n---\n\np5\u4e00\u5207\u6b63\u5e38\uff0c\u5165\u6808\u3002\n\n\n![](https://i.loli.net/2019/08/15/RklQONoGefSZWtp.png)\n\n----\n\np6\u8fd9\u91cc\u5c31\u8981\u590d\u6742\u4e00\u4e9b\n\n- \u9996\u5148\u4ed6\u5f80\u53f3\u8f6c\uff0c\u4e8e\u662f\u5c06p5\u5f39\u51fa\n\n![](https://i.loli.net/2019/08/15/l1UNp8JOwdzsXjr.png)\n\n\n\n- \u53c8\u53d1\u73b0\u4ed6\u76f8\u5bf9\u4e8e$P_2P_4$\u5411\u53f3\u8f6c\uff0c\u4e8e\u662f\u5c06p4\u5f39\u51fa\n![](https://i.loli.net/2019/08/15/Fb1oxSCfUPQAH72.png)\n\n\u4e4b\u540ep6\u8fdb\u6808\u3002\n\n\n----\n\np7\u4e00\u5207\u6b63\u5e38\uff08\u5de6\u8f6c\uff09\uff0c\u5165\u6808\n\n![](https://i.loli.net/2019/08/15/NgsRaDyeihFAZIU.png)\n\n----\n\np8\u4e00\u5207\u6b63\u5e38\uff08\u5de6\u8f6c\uff09\uff0c\u5165\u6808\n\n![](https://i.loli.net/2019/08/15/1jTXsYq5vgApoWE.png)\n\n---\n\n\n\u6240\u4ee5\u8bf4\u6700\u540e\u5c31\u8fde\u5230\u4e86\u8d77\u70b9p1\u3002\n![](https://i.loli.net/2019/08/15/JOCRuSFGBYeLTEc.png)\n\n\n\n\u7531\u6b64\uff0c\u6211\u4eec\u7684Graham\u7b97\u6cd5\u7684\u5168\u8fc7\u7a0b\u5c31\u7ed3\u675f\u4e86\u3002\n\n\u51f8\u5305\u5f62\u6210\uff08\u5373\u7eff\u7ebf\u6240\u56f4\u7684\u591a\u8fb9\u5f62\uff09\n\n\n\u626b\u63cf\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n)$\n\n\u4f46\u662f\u663e\u7136\u4e0d\u53ef\u80fd\u505a\u5230\u8fd9\u4e48\u4f18\u79c0.\n\n\u4e8e\u662f\u8fd8\u6709\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(nlogn)$\n\n\n\u5408\u8d77\u6765\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(nlogn)$\n\n\n**\u53ef\u89c1\uff0c\u6211\u4eec\u5728\u6392\u5e8f\u7684\u5e2e\u52a9\u4e0b\u7701\u53bb\u4e86\u4e00\u4e9b\u76f2\u76ee\u7684\u626b\u63cf\uff0c\u867d\u7136\u6392\u5e8f\u4f5c\u4e3a\u4e00\u4e2a\u9884\u5904\u7406\u65f6\u95f4\u590d\u6742\u5ea6\u5360\u636e\u4e86\u603b\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u4f46\u76f8\u6bd4\u524d\u4e00\u4e2a\u7b97\u6cd5\u8fd8\u662f\u66f4\u4e3a\u4f18\u79c0**\n\n\n\u73b0\u5728\u6211\u4eec\u5230\u6a21\u677f\u9898\u4e0a\u6765\u3002\n\n[P2742 \u3010\u6a21\u677f\u3011\u4e8c\u7ef4\u51f8\u5305 / [USACO5.1]\u5708\u5976\u725bFencing the Cows](https://www.luogu.org/problem/P2742)\n\n\n### \u9898\u610f\u7b80\u53d9\uff1a\n\n\u6c42\u4e00\u4e2a\u70b9\u96c6\u51f8\u5305\u7684\u8fb9\u957f\u548c\u3002\n\n### \u5206\u6790\uff1a\n\u5e73\u9762\u51f8\u5305\u6a21\u677f\u9898\uff0c\u6ce8\u610f\u6d6e\u70b9\u6570\u4e4b\u7c7b\u7684\u522b\u5f04\u4e22\u7cbe\u5ea6\u5c31\u884c\uff0c\u5176\u4ed6\u76f4\u63a5\u5957\u6a21\u677f,\u4ee3\u7801\u91cc\u6709\u6ce8\u91ca\uff0c\u6211\u7528\u7684\u662f\u624b\u5199\u6808\uff0c\uff08\u8fd9\u6837\u80fd\u5feb\u4e00\u4e9b\uff1f\n\n### code\uff1a\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cmath>\nusing namespace std;\nint n;\nstruct ben\n{\n    double x,y;\n}p[10005],s[10005];\ndouble check(ben a1,ben a2,ben b1,ben b2)//\u68c0\u67e5\u53c9\u79ef\u662f\u5426\u5927\u4e8e0\uff0c\u5982\u679c\u662fa\u5c31\u9006\u65f6\u9488\u8f6c\u5230b \n{\n    return (a2.x-a1.x)*(b2.y-b1.y)-(b2.x-b1.x)*(a2.y-a1.y);\n}\ndouble d(ben p1,ben p2)//\u4e24\u70b9\u95f4\u8ddd\u79bb\u3002\u3002\u3002 \n{\n    return sqrt((p2.y-p1.y)*(p2.y-p1.y)+(p2.x-p1.x)*(p2.x-p1.x));\n}\nbool cmp(ben p1,ben p2)//\u6392\u5e8f\u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u522b\u5199\u9519\u4e86\uff0c\u8981\u4e0d\u7136\u529f\u4e8f\u4e00\u7bd1 \n{\n    double tmp=check(p[1],p1,p[1],p2);\n    if(tmp>0) \n\t\treturn 1;\n    if(tmp==0&&d(p[0],p1)<d(p[0],p2)) \n\t\treturn 1;\n    return 0;\n}\nint main()\n{\n\t\n    scanf(\"%d\",&n);\n    double mid;\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%lf%lf\",&p[i].x,&p[i].y);\n        if(i!=1&&p[i].y<p[1].y)//\u8fd9\u662f\u662f\u53bb\u91cd \n        {\n            mid=p[1].y;p[1].y=p[i].y;p[i].y=mid;\n            mid=p[1].x;p[1].x=p[i].x;p[i].x=mid;\n        }\n    } \n    sort(p+2,p+1+n,cmp);//\u7cfb\u7edf\u5feb\u6392 \n    s[1]=p[1];//\u6700\u4f4e\u70b9\u4e00\u5b9a\u5728\u51f8\u5305\u91cc \n    int cnt=1;\n    for(int i=2;i<=n;i++)\n    {\n        while(cnt>1&&check(s[cnt-1],s[cnt],s[cnt],p[i])<=0) //\u5224\u65ad\u524d\u9762\u7684\u4f1a\u4e0d\u4f1a\u88ab\u8e22\u8d70\uff0c\u5982\u679c\u88ab\u8e22\u8d70\u90a3\u4e48\u51fa\u6808\n\t\t\tcnt--;\n        cnt++;\n        s[cnt]=p[i];\n    }\n    s[cnt+1]=p[1];//\u6700\u540e\u4e00\u4e2a\u70b9\u56de\u5230\u51f8\u5305\u8d77\u70b9\n    double ans=0; \n    for(int i=1;i<=cnt;i++) \n\t\tans+=d(s[i],s[i+1]);//\u7136\u540es\u91cc\u5b58\u597d\u4e86\u51f8\u5305\u5e8f\u5217\uff0c\u53ea\u9700\u8981\u628a\u4e24\u4e24\u8ddd\u79bb\u7d2f\u52a0\u5c31\u884c\n    printf(\"%.2lf\\n\",ans);\n    return 0;\n}\n```\n\n# 4\u3001\u4f8b\u9898\uff1a\n## \u4fe1\u7528\u5361\u51f8\u5305\n\n[P3829 [SHOI2012]\u4fe1\u7528\u5361\u51f8\u5305](https://www.luogu.org/problem/P3829)\n\n\u662f\u4e00\u9053\u4e0a\u6d77\u7684\u7701\u9009\u9898\uff0c\u4e0d\u8fc7\u5e76\u4e0d\u96be\u3002\n\n### \u9898\u610f\u7b80\u53d9\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/6549.png)\n\n\u7ed9\u4f60\u4e00\u5806\u5982\u4e0a\u56fe\u6240\u793a\u7684\u5361\u7247\uff0c\u6c42\u5176\u51f8\u5305\u5468\u957f\uff08\u51f8\u5305\u53ef\u4ee5\u5305\u542b\u5706\u5f27\uff09\n\n### \u5206\u6790\uff1a\n\u6211\u4eec\u53ef\u4ee5\u5148\u6765\u8003\u8651$r=0$\u7684\u60c5\u51b5\u3002\n\n\u53d1\u73b0$r=0$\u5373\u4e3a\u4fe1\u7528\u5361\u4e3a\u77e9\u5f62\uff0c\u4e8e\u662f\u5c31\u6309\u7167\u6b63\u5e38\u7684\u601d\u8def\u5c06\u70b9\u5217\u51fa\u8dd1Graham\u7b97\u6cd5\u5373\u53ef\u3002\n\n---\n\n\u7136\u540e\u5f00\u59cb\u60f3\u6b63\u89e3\n\n\n\u56e0\u4e3a\u6837\u4f8b\u4e09\u662f\u6700\u666e\u904d\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u7814\u7a76\u4e00\u4e0b\uff1a\n\n![](https://i.loli.net/2019/08/15/kVngAqUotbxI4RY.png)\n\n\u9996\u5148\u5e26\u6709\u5706\u5f27\u7684\u51f8\u5305\u4e0d\u597d\u5904\u7406\u5462\u3002\n\n\n\u4e8e\u662f\u6211\u4eec\u628a\u6bcf\u4e00\u4e2a\u88ab\u78e8\u5706\u7684\u9876\u89d2\u5f80\u5706\u5fc3\u91cc\u770b\uff0c\u518d\u91cd\u65b0\u6784\u9020\u51f8\u5305\uff0c\u7136\u540e\u53d1\u73b0\u9ed1\u8272\u5185\u5708\u4e0e\u7eff\u84dd\u5916\u5708\u6709\u91cd\u53e0\u90e8\u5206\u3002\n\n\u518d\u5206\u89e3\u4e00\u4e0b\uff0c\u5982\u7ea2\u7b14\u3002\n\n**\u53d1\u73b0\u6070\u597d\u591a\u51fa4\u4e2a$\\frac{1}{4}$\u5706\u5f27\uff0c\u4e5f\u5c31\u662f\u4e00\u4e2a\u5706**\n\n\u518d\u9a8c\u8bc1\u51e0\u4e2a\u53d1\u73b0\u4e5f\u662f\u5bf9\u7684\u3002\n\n\u4e8e\u662f\u8fd9\u4e2a\u95ee\u9898\u5c31\u8f6c\u6362\u4e3a\u88f8\u7684\u51f8\u5305\u6a21\u677f\u4e86\u3002\n\n#### \u8fd9\u79cd\u9898\u76ee\u91cc\u9762\u90fd\u544a\u8bc9\u51f8\u5305\u4e86\uff0c\u5173\u952e\u5728\u4e8e\u600e\u4e48\u8f6c\u6362\uff0c\u4e0d\u7136\u751f\u642c\u786c\u5957\uff0c\u5f88\u96be\u5f97\u5206\n\n# 5\u3001Andrew\u7b97\u6cd5\n\uff08\u8bc4\u8bba\u533a\u91cc\u4e00\u4e2a\u5927\u8fde\u63d0\u51fa\u4e86\u8fd9\u4e2a\u8865\u5145\uff0c\u4e8e\u662f\u6dfb\u52a0\u4e00\u4e0bQAQ\uff09\n\n\n\n### \u4e3b\u4f53\u601d\u8def\uff1a\n\n- \u6309\u7167x\u4f18\u5148\u7684\u987a\u5e8f\u6392\u5e8f\uff08\u5750\u6807\u4ece\u5c0f\u5230\u5927\uff09\n\n- \u4ece\u7b2c\u4e00\u4e2a\u70b9\u5f00\u59cb\u904d\u5386\uff0c\u5982\u679c\u4e0b\u4e00\u4e2a\u70b9\u5728\u6808\u9876\u7684\u4e24\u4e2a\u5143\u7d20\u6240\u8fde\u6210\u76f4\u7ebf\u7684\u5de6\u8fb9\uff0c\u90a3\u4e48\u5c31\u5165\u6808\uff1b\n\n\n- \u5426\u5219\u5982\u679c\u5728\u53f3\u8fb9\uff0c\u8bf4\u660e\u51f8\u5305\u6709\u66f4\u4f18\u7684\u65b9\u6848\uff0c\u4e0a\u6b21\u7684\u70b9\u51fa\u6808\uff0c\u5e76\u76f4\u5230\u65b0\u70b9\u5728\u6808\u9876\u4e24\u4e2a\u70b9\u6240\u5728\u7684\u76f4\u7ebf\u7684\u5de6\u8fb9\u4e3a\u6b62\n\n\u663e\u7136\u6587\u5b57\u89e3\u91ca\u4ecd\u7136\u662f\u67af\u71e5\u7684\uff0c\u90a3\u4e48\u4e0b\u9762\u8fd8\u662f\u624b\u52a8\u7ed8\u56fe\u611f\u53d7\u4e00\u4e0b~~\u6211\u7684\u5988\u5440\u7d2f\u6b7b\u6211\u4e86~~\n\n---\n\n\u4ee5\u4e0b\u5c31\u662f\u4e24\u79cd\u7b97\u6cd5\u7684\u6392\u5e8f\u4e0d\u540c\n\n![](https://i.loli.net/2019/08/15/HDJxANk8IqrWcE1.png)\n\n\u6211\u6765\u5206\u5272\u4e00\u4e0b--------------------------------------------------------------------------------------------------------\n\n![](https://i.loli.net/2019/08/16/oH6QD9cOjePRLKJ.png)\n\n\u53ef\u4ee5\u770b\u51fa\u4e24\u79cd\u7b97\u6cd5\u7684\u6392\u5e8f\u4e0d\u540c\uff0cAndrew\u7b97\u6cd5\u6392\u5e8f\u66f4\u7b80\u5355\uff0c\u6309x\uff0cy\u5750\u6807\u6392\u5e8f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u66f4\u4f4e\uff08\u4e00\u822c\u7684\u5750\u6807\u7cfb\u4e2d\u6392\u5e8f\u65b9\u6cd5\uff09\u3002\n\n---\n\n\u7b2c\u4e00\u6b65\uff1a\u5c06\u524d\u4e24\u4e2a\u70b9\u5165\u6808\n\n- \u9996\u5148p1\u4e00\u5b9a\u662f\u5728\u51f8\u5305\u9876\u70b9\u4e0a\u7684\u3002\n\n- p2\u53ef\u80fd\u5728\uff0c\u4e5f\u53ef\u80fd\u4e0d\u5728\uff0c\u7b49\u7740\u4e4b\u540e\u5224\u65ad\n\n~~\u4e3a\u4e86\u6211\u4e5f\u4e0d\u77e5\u9053\u4ec0\u4e48\u539f\u56e0\u6211\u628a\u9ed1\u7684\u5750\u6807\u8f74\u7ed9\u53bb\u6389\u4e86~~\n\n![](https://i.loli.net/2019/08/16/JzgruwljLCMxPtA.png)\n\n---\n\np3\u504f\u5de6\uff0c\u5165\u6808\n\n![](https://i.loli.net/2019/08/16/NqEmBoKMD8wueH4.png)\n\n---\n\np4\u548cp3\u8fde\u7ebf\uff0c\u53d1\u73b0\u504f\u53f3\uff0c\u4e8e\u662fp3\u51fa\u6808\uff0c\u68c0\u67e5p2\u6b63\u5e38\uff0c\u4e8e\u662fp4\u518d\u5165\u6808\n\n![](https://i.loli.net/2019/08/16/GhHVMy2pEK8t5rN.png)\n\n--- \n\n\u548c\u4e0a\u9762\u7684\u540c\u7406\uff1b\n\n\u4e8e\u662fp4\u51fa\u6808\uff0cp5\u5165\u6808\n\n\n![](https://i.loli.net/2019/08/16/c9JulEn4TbiZGN8.png)\n\n---\n\np5\u51fa\u6808\uff0cp6\u51fa\u6808\n\n![](https://i.loli.net/2019/08/16/xIA8hEbmp4MJsd7.png)\n\n\n---\n\np6\u51fa\u6808\uff0cp7\u5165\u6808\n![](https://i.loli.net/2019/08/16/uvSw4FJCeVzc1HY.png)\n\n---\n\n\np8\u4e00\u9a6c\u5e73\u5ddd\u7684\u5165\u6808\n![](https://i.loli.net/2019/08/16/yxEReiQUKjoP5C2.png)\n\n\n---\n\n### \u7136\u540e\u6211\u4eec\u60ca\u8bb6\u7684\u53d1\u73b0\uff1a\n\u51f8\u5305\u660e\u660e\u8fd8\u7a7a\u4e00\u534a\u5c31\u5230\u5934\u4e86\u3002\n\n![](https://i.loli.net/2019/08/16/yPMRhSHg1VCZzbk.jpg)\n\n**\u7136\u9e45\u8fd9\u5176\u5b9e\u662f\u5728\u610f\u6599\u4e4b\u4e2d\u7684**\n\n\u6211\u4eec\u8fd9\u79cd\u7b97\u6cd5\u5fc5\u7136\u4f1a\u53ea\u7b97\u51fa\u4e00\u534a\u7684\u51f8\u5305\u3002\n\n- \u5982\u679c\u4f60\u6309\u7167\u672c\u6587\u7684\u65b9\u6cd5\u884c\u52a8\uff0c\u90a3\u5c31\u662f\u4e00\u4e2a\u4e0b\u51f8\u5305\n\n\u7136\u540e\u4e0a\u51f8\u5305\u6211\u60f3\u4f60\u5df2\u7ecf\u77e5\u9053\u600e\u4e48\u5904\u7406\u4e86\n\n### \u90a3\u4e0b\u9762\u5c31\u63ed\u6653\u7b54\u6848\uff1a\n\n\u6211\u4eec\u518d\u4ece\u6392\u5e8f\u672b\u5c3e\u7684\u70b9\uff08\u4e5f\u5c31\u662fp8\uff09\u51fa\u53d1\uff0c\u6309\u7167\u4e00\u6a21\u4e00\u6837\u7684\u65b9\u5f0f\u518d\u5f80\u524d\u904d\u5386\u5c31\u884c\u3002\n\n\u5982\u56fe\u3002\n\n\u4ece8~1\u8d70\u3002\n\n\u5f53\u7136\u8d70\u8fc7\u7684\u8282\u70b9\u5c31\u6ca1\u6709\u5fc5\u8981\u518d\u8d70\u4e86\uff08\u9664\u4e86p1\uff09\n\n- \u5148\u8d70\u5230p6\n\n![](https://i.loli.net/2019/08/16/pHo8XGwLM6lY9yE.png)\n\n---\n\n\u518d\u5230p5\uff0c\u53d1\u73b0\u6211\u4eec\u53ef\u4ee5\u628ap6\u7ed9\u8e22\u6389\u4e86\u3002\n\n- p6\u51fa\u6808\uff0cp5\u5165\u6808\n\n\n\n![](https://i.loli.net/2019/08/16/6zBI7FOjU1sGZyd.png)\n\n\n---\n\n\u7136\u540ep5\u5230p4\n\n- \u8fd9\u91cc\u53ef\u80fd\u753b\u7684\u4e0d\u662f\u5f88\u6e05\u695a\uff0c\u5176\u5b9e\u662f\u4e0d\u5171\u7ebf\u7684\n\n- \u5982\u679c\u5171\u7ebf\u4e5f\u597d\u5904\u7406\uff0c\u76f4\u63a5\u53d6\u6700\u957f\u7684\u54c7\n![](https://i.loli.net/2019/08/16/wZnWSoljaF569e4.png)\n\n---\n\n\u51fa\u73b0\u4e86p3\uff01\uff01\uff01\n\n- \u4ed6\u9996\u5148\u628ap4\u7ed9\u8bf7\u51fa\u53bb\u4e86\n\n\n![](https://i.loli.net/2019/08/16/YrJa9lRGnFT7ket.png)\n\n---\n\n- \u7136\u540e\u53c8\u628ap5\u7ed9\u8bf7\u51fa\u53bb\u4e86\n![](https://i.loli.net/2019/08/16/PVdyC6vqItiljFO.png)\n\n\n\u603b\u7ed3\uff1ap4\uff0cp5\u51fa\u6808\uff0cp3\u5165\u6808\n\n---\n\n\u6700\u540ep3\u8fde\u5230p1\uff0c\u753b\u4e0a\u4e86\u4e00\u4e2a\u5706\u6ee1\u7684~~\u53e5\u53f7~~\u51f8\u5305\n![](https://i.loli.net/2019/08/16/y56l1aYXexzUNFi.png)\n\n\n### \u4ee5\u4e0a\u5c31\u662fAndrew\u7b97\u6cd5\u5168\u8fc7\u7a0bQAQ\n\n\u626b\u63cf\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n)$\uff08\u5df2\u8fc7\u6ee4\u5e38\u6570\uff09\n\n\n\u6392\u5e8f\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(nlogn)$\n\n#### \u603b\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(nlogn)$\n\n\n\n## code:\n\n```cpp\ndouble Cross(vec A, vec B)\n{\n    return A.x*B.y-A.y*B.x; //A->B\u5de6\u8f6c\u4e3a\u6b63 \n}\ndouble Side(vec a, vec b, vec p) //\u6b21\u6808\u9876\u5143\u7d20a\uff0c\u6808\u9876\u5143\u7d20b\uff0c\u65b0\u589e\u70b9p \n{\n    vec A=vec(b.x-a.x,b.y-a.y); //\u5411\u91cfab\n    vec B=vec(p.x-a.x,p.y-a.y); //\u5411\u91cfap\n    return Cross(A,B);\n}\nint Andrew(int top)\n{\n    sort(p+1,p+n+1);\n    if(n<3) \n\t{\n        printf(\"-1\\n\");\n        return;\n    }\n    st[0]=p[1],st[1]=p[2];\n    top=1;\n    for (int i=3;i<=n;i++)//\u4ecep1\u5f00\u59cb\u7684\u4e0b\u51f8\u5305 \n\t{\n        while(top&&Side(st[top-1],st[top],p[i])<=0)\n            top--;\n        st[++top]=p[i];\n    }\n    st[++top]=p[n-1];\n    for(int i=n-2;i>=1;i--)//\u4ecepn\u5f00\u59cb\u7684\u4e0a\u51f8\u5305 \n\t{\n        while(top&&Side(st[top-1],st[top],p[i])<=0)\n            top--;\n        st[++top]=p[i];\n    }\n    return top;\n}\n```\n\n# 6\u3001\u540e\u8bb0\uff1a\n\n\u4e0d\u7ba1\u600e\u6837\uff0c\u8fd9\u4e00\u7bc7\u65e5\u62a5\u5c45\u7136\u5199\u5b8c\u4e86\uff0c\u867d\u7136\u8fd9\u79cd\u7b97\u6cd5\u8003\u5bdf\u5728noip\u4e2d\u4e0d\u5e38\u89c1\uff0c\u4f46\u6700\u8fd1\u98ce\u4e91\u53d8\u5e7b\uff0c\u8c01\u77e5\u9053\u4ee5\u540e\u4f1a\u51fa\u4ec0\u4e48\u9898\uff0c\u4f46\u73b0\u5728\u628a\u6574\u4e2a\u7b97\u6cd5\u7684\u5404\u79cd\u53d8\u5f62\u90fd\u63a8\u5f97\u660e\u660e\u767d\u767d\u8fd8\u4e0d\u5982\u590d\u4e60\u597d\u4e4b\u524d\u7684\u7b97\u6cd5\uff0c\u6240\u4ee5\u6211\u4eec\u5230\u76ee\u524d\u628a\u6a21\u677f\u638c\u63e1\uff0c\u907f\u514d\u8003\u8bd5\u51fa\u677f\u5b50\u65f6\u5374\u624b\u8db3\u65e0\u63aa\u7684\u60c5\u51b5\u53d1\u751f\u5c31\u884c\u3002\n\n\n- \u914d\u56fe\u5341\u5206\u4e0d\u6613\uff0c\u8bb2\u89e3\u52aa\u529b\u8be6\u7ec6\uff0c\u671b\u60a8\u4e0d\u541d\u8d50\u8d5e",
        "postTime": 1565832083,
        "uid": 45475,
        "name": "ShineEternal",
        "ccfLevel": 0,
        "title": "\u6570\u8bba\u5c0f\u767d\u90fd\u80fd\u770b\u61c2\u7684\u5e73\u9762\u51f8\u5305\u8be6\u89e3"
    },
    {
        "content": "\u5982\u679c\u4f60\u662f\u5927\u725b\uff0c\u8bf7\u79fb\u6b65\u4e0b\u65b9\u5176\u4ed6\u9898\u89e3orz\u672c\u9898\u89e3\u5199\u7ed9\u5bf9\u51f8\u5305\u6000\u6709\u6050\u60e7\u7684\u5c0f\u840c\u65b0\u4eec\u3010\u65e0\u6b67\u89c6\u610f\u3011\u3002get\u5230\u51f8\u5305\u7684\u751f\u6210\u8fc7\u7a0b\u540e\uff0c\u51f8\u5305\u5e94\u8be5\u8fd8\u662f\u5f88\u597d\u7406\u89e3\u7684\u3002\n\n\u51f8\u5305\u662f\u5565\uff1f\u5c31\u662f\u7ed9\u4f60\u4e00\u5806\u70b9\uff0c\u7136\u540e\u7528\u4e00\u6839\u6709\u5f39\u6027\u7684\u6a61\u76ae\u7b4b\u5305\u4f4f\u6240\u6709\u7684\u70b9\uff0c\u8fd9\u4e2a\u6a61\u76ae\u7b4b\u5c31\u662f\u4e00\u4e2a\u51f8\u5305\u3002\u5982\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/26590.png)\n\n\n------------\n\u5982\u4f55\u6c42\u51f8\u5305\uff1f\u6211\u4eec\u5148\u5c06\u70b9\u6309\u7167X-Y\u6392\u5e8f\uff08x\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0cy\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\uff09\n\n![](https://cdn.luogu.com.cn/upload/pic/26592.png)\n\nABCDEFG\n\n\u540c\u65f6\u6211\u4eec\u641e\u4e00\u4e2a\u6808\uff0c\u8bb0\u5f55\u5728\u51f8\u5305\u4e2d\u7684\u70b9\u3002\u6211\u4eec\u7684\u601d\u8def\u662f\uff0c\u6c42\u51fa\u51f8\u5305\u7684\u4e0b\u534a\u90e8\uff08AEG\uff09\uff0c\u6c42\u51fa\u51f8\u5305\u7684\u4e0a\u534a\u90e8\uff08GFBA\uff09\uff0c\u7136\u540e\u5408\u5728\u4e00\u8d77\u5c31\u662f\u51f8\u5305\u4e86\u3002\n\n\u6211\u4eec\u5148\u641e\u4e0b\u534a\u90e8\u5206\uff0c\u9996\u5148\u6309\u7167\u521a\u521a\u7684\u6392\u5e8f\u628aA\u548cB\u641e\u8fdb\u6808\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u9047\u5230\u4e86\u70b9C\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/26596.png)\n\n\u7531\u4e8e\u6211\u4eec\u6b63\u5728\u6c42\u51f8\u5305\u7684\u4e0b\u534a\u90e8\u5206\uff0c\u6211\u4eec\u5e0c\u671b\u8fd9\u4e0b\u534a\u90e8\u5206\u8d8a\u5f80\u4e0b\u8d8a\u597d\uff0c\u53cd\u6620\u5728\u56fe\u4e0a\uff0c\u4e5f\u5c31\u662f\uff0c\u659c\u7387\u8d8a\u5c0f\u8d8a\u597d\u3002AC\u7684\u659c\u7387\u5c0f\u4e8eAB\uff0c\u6240\u4ee5\u628aB\u8e22\u51fa\u8fd9\u4e2a\u6808\uff0c\u8ba9C\u5165\u6808\u3002\n\n\u6b64\u65f6\u6808\u4e2d\u6709A,C\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/26599.png)\n\n\u4e0b\u4e00\u4e2a\u70b9\u662fD\uff0ckAD>kAC\uff0c\u56e0\u6b64AD\u5e76\u4e0d\u80fd\u66f4\u65b0AC\uff0cC\u4e0d\u8e22\u51fa\u6808\uff0cD\u5165\u6808\u3002\n\n\u6b64\u65f6\u6808\u4e2d\u662fA,C,D\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/26600.png)\n\n\u4e0b\u4e00\u4e2a\u70b9\u662fE\uff0c\u56e0\u4e3akCE<kCD\uff0c\u6240\u4ee5E\u76f8\u8f83\u4e8eD\u66f4\u4f18\uff0c\u628aD\u8e22\u51fa\u3002\n\n\u6b64\u65f6\u6808\u4e2d\u662fA,C\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/26602.png)\n\n\u6211\u4eec\u53c8\u53d1\u73b0kAE<kAC\uff0cE\u4e5f\u6bd4C\u66f4\u4f18\uff0c\u56e0\u6b64\u628aC\u8e22\u51fa\u3002\n\n\u6808\u91cc\u53ea\u5269\u4e0bA,E\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/26603.png)\n\n\u540c\u4e0a\uff0ckAF>kAE\uff0cF\u5e76\u4e0d\u6bd4E\u4f18\uff0c\u56e0\u6b64E\u4e0d\u51fa\u6808\uff0cF\u5165\u6808\u3002\n\n\u6b64\u65f6\u6808\u4e2d\u662fA,E,F\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/26605.png)\n\n\u4e0b\u4e00\u4e2a\u70b9\u662fG\uff0ckEG<kEF\uff0c\u6240\u4ee5\u628aF\u8e22\u51fa\u6808\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/26607.png)\n\n\u4e0d\u8fc7\uff0ckAG>kAE\uff0cG\u5e76\u4e0dE\u66f4\u4f18\uff0c\u56e0\u6b64E\u4e0d\u51fa\u6808\uff0cG\u5165\u6808\u3002\n\n\u6b64\u65f6\u6808\u4e2d\uff1aA,E,G\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/26610.png)\n\n\u81f3\u6b64\uff0c\u51f8\u5305\u4e0b\u534a\u90e8\u5206\u5df2\u7ecf\u751f\u6210\u5b8c\u6bd5\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e2a\u6808\u6ee1\u8db3\u6808\u4e2d\u76f8\u90bb\u4e24\u70b9\u7684\u659c\u7387\u9012\u589e\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u51f8\u5305\u4e0b\u534a\u90e8\u5206\u7684\u5f62\u72b6\u561b\uff08\u659c\u7387\u4ece\u5f88\u5c0f\u6162\u6162\u53d8\u5927\uff09\n\n\u53ef\u4ee5\u5982\u6cd5\u70ae\u5236\u751f\u6210\u51f8\u5305\u7684\u4e0a\u534a\u90e8\u5206\u3002\n\n\u603b\u7ed3\u4e00\u4e0b\u6574\u4e2a\u8fc7\u7a0b\uff1a\n\n\u5148\u628a\u6240\u6709\u70b9\u6309\u7167X-Y\u6392\u5e8f\u3002\u3010\u8fd9\u4fdd\u8bc1\u4e86\u751f\u6210\u7684\u65f6\u5019\uff0c\u6700\u5de6\u4e0b\u89d2\u7684\u70b9\u548c\u6700\u53f3\u4e0a\u89d2\u7684\u70b9\u90fd\u5728\u6808\u4e2d\n\n```\ninline int cmp(node a,node b){\n\treturn a.x!=b.x?a.x<b.x:a.y<b.y;\n}\n\nsort(a+1,a+1+n,cmp);\n```\n\n\u6c42\u51f8\u5305\u4e0b\u534a\u90e8\u5206\u3002\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u6bcf\u4e2a\u70b9\uff0c\u5c06\u8fd9\u4e2a\u70b9\u5165\u6808\u3002\n\n```\nfsb(i,1,n){\n\ts[++size]=a[i];\n```\n\n\u5982\u679c\u6808\u7684\u5927\u5c0f\u5927\u4e8e\u7b49\u4e8e3\uff0c\u5219\u6bd4\u8f83\u8fd9\u4e2a\u70b9\u548c\u4e0a\u4e00\u4e2a\u70b9\u4e0e\u4e0a\u4e0a\u4e2a\u70b9\u8fde\u7ebf\u7684\u659c\u7387\uff0c\u770b\u80fd\u5426\u66f4\u65b0\u4e0a\u4e00\u4e2a\u70b9\uff0c\u5982\u679c\u53ef\u4ee5\u66f4\u65b0\u5219\u66ff\u6362\u4e4b\u3002\u76f4\u5230\u4e0d\u80fd\u66ff\u6362\uff0c\u6216\u8005\u6808\u4e2d\u53ea\u67092\u4e2a\u70b9\u3002\n\n```cpp\n\twhile (size>=3&&getk(s[size-2],s[size])<getk(s[size-2],s[size-1])){s[size-1]=s[size];size--;};\n}\n```\n\n\u7edf\u8ba1\u51f8\u5305\u4e0b\u534a\u90e8\u5206\u7ebf\u6bb5\u957f\u7684\u548c\n\n```cpp\nfsb(i,1,size-1)ans+=dis(s[i],s[i+1]);\n```\n\n\u6c42\u51f8\u5305\u4e0a\u534a\u90e8\u5206\u3002\u540c\u7406\u3002\n\n```cpp\nsize=0;\nfbs(i,n,1){\n\ts[++size]=a[i];\n\twhile (size>=3&&getk(s[size-2],s[size])<getk(s[size-2],s[size-1])){s[size-1]=s[size];size--;};\n}\nfsb(i,1,size-1)ans+=dis(s[i],s[i+1]);\n```\n//\u53ef\u4ee5\u601d\u8003\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u9664\u4e86\u679a\u4e3e\u987a\u5e8f\u5916\uff0c\u5176\u4ed6\u90fd\u4e0d\u53d8\uff0c\u6bd4\u5982\uff0c\u4e3a\u4ec0\u4e48\u4e24\u4e2agetk\u95f4\u7684\u4e5f\u662f<\u53f7\u3002\u3010\u4ece\u4f55\u65f6\u66f4\u65b0\u7684\u89d2\u5ea6\u601d\u8003\u3002\n\n\u7136\u540e\u4f60\u5c31\u5b66\u4f1a\u4e86\u51f8\u5305qwq",
        "postTime": 1533368393,
        "uid": 17655,
        "name": "Sagittarius",
        "ccfLevel": 0,
        "title": "\u51f8\u5305\u5b66\u4e60\u7b14\u8bb0|P2742 \u3010\u6a21\u677f\u3011\u4e8c\u7ef4\u51f8\u5305 / [USACO5.1]\u5708\u5976\u725bFencing the Cows\u9898\u89e3"
    },
    {
        "content": "\u4e00\u9053\u51f8\u5305\u7684\u6a21\u677f\u9898\n\n\u76f4\u63a5\u7528\u626b\u63cf\u6cd5\u5c31\u53ef\u4ee5\n\n\u4f46\u662f\u627e\u6700\u4e0b\u9762\u7684\u70b9\u7684\u65f6\u5019\u4e0d\u80fd\u7528\u5feb\u6392\uff0c\u56e0\u4e3a\u4f1a\u8d85\u65f64\u4e2a\u70b9\n\n\u4f46\u662f\u5728\u6bcf\u6b21\u8f93\u5165\u7684\u65f6\u5019\u5224\u65ad\u4e00\u4e0b\u5c31\u53ef\u4ee5\u4e86\n\n\u4ee3\u7801\u7ec6\u8282\u4e5f\u52a0\u4e86\u6ce8\u91ca\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cmath>\nusing namespace std;\nstruct node{\n    double x,y;\n}p[10005],s[10005];\nint n;\ndouble ans,mid;\ndouble CJ(node a1,node a2,node b1,node b2)\n{\n    return (a2.x-a1.x)*(b2.y-b1.y)-(b2.x-b1.x)*(a2.y-a1.y);\n}//\u53c9\u79ef\u5927\u4e8e0\uff0c\u5219a\u5de6\u8f6c\u540e\u5230b \ndouble dis(node p1,node p2)\n{\n    return sqrt( (double)(p2.y-p1.y)*(p2.y-p1.y)*1.0+(double)(p2.x-p1.x)*(p2.x-p1.x)*1.0 );\n}//\u4e24\u70b9\u8ddd\u79bb\u516c\u5f0f \nbool cmp(node p1,node p2)\n{\n    double tmp=CJ(p[1],p1,p[1],p2);\n    if(tmp>0) return 1;\n    if(tmp==0 && dis(p[0],p1)<dis(p[0],p2)) return 1;\n    return 0;\n}//\u6309\u7167\u5939\u89d2\u7684\u5927\u5c0f\u6392\u5e8f \nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;++i)\n    {\n        scanf(\"%lf%lf\",&p[i].x,&p[i].y);\n        if(i!=1&&p[i].y<p[1].y)\n        {\n            mid=p[1].y;p[1].y=p[i].y;p[i].y=mid;\n            mid=p[1].x;p[1].x=p[i].x;p[i].x=mid;\n        }\n    } \n    //init \n    \n    sort(p+2,p+1+n,cmp);//\u6309\u7167\u5939\u89d2\u5927\u5c0f \n    s[1]=p[1];\n    int tot=1;//\u56e0\u4e3a\u6700\u4f4e\u70b9\u4e00\u5b9a\u5728\u51f8\u5305\u5185 \n    for(int i=2;i<=n;i++)\n    {\n        while(tot>1&&CJ(s[tot-1],s[tot],s[tot],p[i])<=0) tot--;\n        tot++;\n        s[tot]=p[i];\n    }\n    s[tot+1]=p[1];\n    for(int i=1;i<=tot;i++) ans+=dis(s[i],s[i+1]);\n    printf(\"%.2lf\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1507546376,
        "uid": 33963,
        "name": "\u6a80\u9ece\u6597\u00b7\u795e",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2742 \u3010[USACO5.1]\u5708\u5976\u725bFencing the Cows\u3011"
    },
    {
        "content": "# P2742 \u3010\u6a21\u677f\u3011\u4e8c\u7ef4\u51f8\u5305 / [USACO5.1]\u5708\u5976\u725bFencing the Cows\n## \u9898\u76ee\u63cf\u8ff0 \n\u5728\u4e8c\u7ef4\u5750\u6807\u7cfb\u4e0a\u6709 $n$ \u4e2a\u70b9\uff0c\u73b0\u77e5\u5b83\u4eec\u7684\u5750\u6807\uff0c\u8bd5\u6c42\u51fa\u7528\u7ebf\u6bb5\u628a\u6240\u6709\u7684\u70b9\u56f4\u4f4f\u9700\u8981\u7684\u6700\u77ed\u957f\u5ea6\uff0c\u5373\u4e8c\u7ef4\u51f8\u5305\u7684\u5468\u957f\u3002\n## \u5206\u6790\n\u5176\u5b9e\u7167\u767e\u5ea6\u8bf4\uff0c\u89e3\u51b3\u4e8c\u7ef4\u51f8\u5305\u6709\u4e94\u79cd\u7b97\u6cd5\uff0c\u4f46\u8fd8\u662fGraham\u7b97\u6cd5\u6700\u4e3a\u5b9e\u7528\uff08\u867d\u7136\u7b97\u6cd5\u590d\u6742\u5ea6\u4e0d\u662f\u6700\u4f4e\u7684\uff0c$O(nlogn)$\u800c\u5df2)\uff0c\u5bf9\u4ed8\u5927\u591a\u6570\u95ee\u9898\u90fd\u53ef\u4ee5\u89e3\u51b3\u3002\n## \u89e3\u51b3\n\u9700\u638c\u63e1\u7684\u51e0\u4e2a\u77e5\u8bc6\uff1a  \n$1$ . \u53c9\u79ef\u7684\u6027\u8d28\uff1a\u4ee5 $\\vec{a}$ \u548c $\\vec{b}$ \u4e3a\u8fb9\u7684\u5e73\u884c\u56db\u8fb9\u5f62\u7684\u9762\u79ef\u3002  \n$~~~~~~~~~~~~~~~\\vec{a}\\times \\vec{b}=x_1\\times y_2-x_2\\times y_1$  \n$~~~~~~~~~~~~~~~\\vec{a}\\times \\vec{b}<0(\\ \\vec{b}$ \u5728 $\\vec{a}$\u5de6\u4e0a\u65b9$)$  \n$~~~~~~~~~~~~~~~\\vec{a}\\times \\vec{b}>0(\\ $\u76f8\u53cd $ )$  \n\u7531\u8fd9\u4e2a\u6027\u8d28\u53ef\u5f97\uff1a  \n\u6709\u4e09\u70b9\uff0c\u4e00\u672a\u77e5 $A$ \u4e8c\u5df2\u77e5 $B$, $C$ \uff0c\u82e5 $A$ \u4e0e $B$ , $C$\u53c9\u4e58\u90fd\u5c0f\u4e8e $0$ , \u5c31\u53ef\u4ee5\u77e5\u9053\u4e09\u8005\u7684\u57fa\u672c\u4f4d\u7f6e\u5173\u7cfb\u3002\u4ee5\u6b64\u4e3a\u4f8b\uff0c\u6211\u4eec\u53ef\u4ee5\u5224\u65ad\u5f97\u5230\u6bcf\u4e09\u4e2a\u70b9\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u77e5\u9053\u662f\u4e0a\u51f8\u5305\u8fd8\u662f\u4e0b\u51f8\u5305\uff0c\u548c\u6781\u89d2\u5927\u5c0f\uff0c\u901a\u8fc7\u8fd9\u6765\u6784\u5efa\u51f8\u5305(\u4e5f\u53ef\u4ee5\u901a\u8fc7\u659c\u7387\u6765\u5224\u65ad\uff0c\u53cd\u6b63\u659c\u7387\u597d\u5199\u4e00\u4e9b\uff0c\u6211\u4f7f\u7528\u7684\u662f\u659c\u7387\uff09\u3002  \n$2$ . \u6211\u4eec\u5c06\u70b9\u6392\u4e2a\u5e8f\uff0c\u4ee5\u70b9\u7684\u7eb5\u5750\u6807\u4e3a\u6392\u5e8f\u57fa\u51c6\uff0c\u627e\u5230\u56fe\u6700\u4e0b\u65b9\u7684\u70b9\uff0c\u4e00\u5b9a\u662f\u51f8\u5305\u4e0a\u7684\u4e00\u4e2a\u70b9\u3002\u7136\u540e\u4ee5\u5b83\u4e3a\u8d77\u70b9\uff0c\u79bb\u4ed6\u6700\u8fd1\u7684\u70b9\u4e3a$2$\u53f7\u70b9\uff08\u52a0\u5165\u6808\u4e2d\uff09\uff0c\u5c31\u7528\u8fd9\u6765\u6162\u6162\u6784\u5efa\u51f8\u5305\u3002  \n$3$ . \u6211\u4eec\u628a\u6574\u4e2a\u51f8\u5305\u5206\u6210\u4e0a\u51f8\u5305\uff08\u4e0b\u964d\uff09\u548c\u4e0b\u51f8\u5305\uff08\u4e0a\u5347\uff09\uff0c\u7136\u540e\u52a0\u6808\uff0c\u5982\u679c\u9012\u589e\u4e14\u6781\u89d2\u8f83\u5c0f\uff0c\u6211\u4eec\u5c31\u628a\u8fd9\u52a0\u5165\u6808\u4e2d\uff0c\u800c\u540e\u6765\u8bc1\u660e\u4e0d\u662f\u51f8\u5305\u4e0a\u7684\u8282\u70b9\u5c31\u5f39\u51fa\u6808\u3002\u56e0\u4e3a\u6211\u4eec\u662f\u5206\u6210\u4e24\u90e8\u5206\u8ba1\u7b97\uff0c\u5c31\u5206\u522b\u7edf\u8ba1\u4e00\u4e0b\u7ebf\u6bb5\u957f\uff0c\u6700\u540e\u52a0\u5728\u4e00\u8d77\u5373\u53ef\uff08\u8fd9\u9898\u4e0d\u5efa\u8bae\u4f7f\u7528\u7cfb\u7edf\u6808\uff0c\u56e0\u4e3a\u5f88\u5751\uff0c\u81ea\u5df1\u8bd5\u8bd5\u5c31\u77e5\u9053\uff09\u3002  \n\u6211\u4eec\u56fe\u89e3\u5f00\u59cb\uff08\u5176\u5b9e\u6587\u5b57\u5df2\u7ecf\u8bf4\u7684\u5f88\u660e\u767d\uff09\uff1a\n![](http://a2.qpic.cn/psb?/80c76f18-4372-4a40-bc51-07add1310ee4/fm4gPM80FfxHNYKhIQqRgcZvvF6nAS9YrMZFoyomW8o!/b/dDEBAAAAAAAA&ek=1&kp=1&pt=0&bo=oQLQAQAAAAADF0A!&tl=1&vuin=1245752462&tm=1532257200&sce=60-4-3&rf=viewer_4)\n![](http://m.qpic.cn/psb?/80c76f18-4372-4a40-bc51-07add1310ee4/qXx1U7K9wBe5KZJIs89gcSwH2Ds7s8pIDDWGSu1nYCk!/b/dFkAAAAAAAAA&bo=mwL8AQAAAAADF1Y!&rf=viewer_4)\n![](http://m.qpic.cn/psb?/80c76f18-4372-4a40-bc51-07add1310ee4/vJOVlSJMaSpvr6w*lh0Dcx3VcGB8HEu3o51oDsEbBvg!/b/dC8BAAAAAAAA&bo=mwLzAQAAAAADF1k!&rf=viewer_4)\n![](http://m.qpic.cn/psb?/80c76f18-4372-4a40-bc51-07add1310ee4/yPUuiZvsd08SP3GcFncL2LPSE1yye4TwXwc21TtBPmg!/b/dDABAAAAAAAA&bo=nALzAQAAAAADF14!&rf=viewer_4)\n![](http://m.qpic.cn/psb?/80c76f18-4372-4a40-bc51-07add1310ee4/nGrPfrsGg3gmTCcaP1uiF1B1ryuM2sBKjWB06VB1XE0!/b/dC4BAAAAAAAA&bo=bALmAQAAAAADF7s!&rf=viewer_4)\n![](http://m.qpic.cn/psb?/80c76f18-4372-4a40-bc51-07add1310ee4/5XKcfp3oHd8orwnZHtIob6DgIyUZc8R3wyy9NGqJSlg!/b/dDABAAAAAAAA&bo=ZgLyAQAAAAADF6U!&rf=viewer_4)\n\u4e0a\u4ee3\u7801\uff08\u5982\u6709\u96f7\u540c\uff0c\u5c31\u5f53\u662f\u6211\u6284\u7684\uff09\n```cpp\nstruct node{double x,y;}point[N];\nint n,top=2,st[N];//top->\u6808\u9876\uff0cst->\u8bb0\u5f55\u51f8\u5305\u4e0a\u70b9\u7684\u6808\u3002\ndouble ans,data_x,data_y;\ninline double power(double x){return x*x;}\ninline double dis(int a,int b){return sqrt(power(point[a].x-point[b].x)+power(point[a].y-point[b].y));}//\u4e24\u70b9\u95f4\u8ddd\u79bb\u3002\ninline bool judge(int a,int b,int c)\n{\n    return (point[a].y-point[b].y)*(point[b].x-point[c].x)>(point[a].x-point[b].x)*(point[b].y-point[c].y);//\u7b97\u659c\u7387\uff0c\u4e58\u5728\u4e00\u8d77\u907f\u514d\u6389\u7cbe\u3002\n}\ninline bool cmp(node a,node b){return (a.y==b.y)?(a.x<b.x):(a.y<b.y);}//\u7eb5\u5750\u6807\u5c0f\u7684\u5728\u524d\uff0c\u82e5\u76f8\u7b49\uff0c\u5c31\u53d6\u6a2a\u5750\u6807\u5c0f\u7684\u3002\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%lf%lf\",&point[i].x,&point[i].y);\n    }\n    sort(point+1,point+n+1,cmp);\n    st[1]=1,st[2]=2;//\u524d\u4e24\u70b9\u5df2\u7ecf\u786e\u5b9a\uff0c\u5165\u6808\u3002\n    for(int i=3;i<=n;i++)//\u679a\u4e3e\u5176\u4ed6\u7684\u8282\u70b9\u4ece3\u5f00\u59cb\u3002\n    {\n        while(top>1&&!judge(i,st[top],st[top-1]))top--;//\u540e\u8005\u659c\u7387\uff08\u6781\u89d2\uff09\u5c0f\u3002\n        st[++top]=i;//\u91cd\u65b0\u5165\u6808\u3002\n    }\n    for(int i=1;i<=top-1;i++)ans+=dis(st[i],st[i+1]);\n    top=2;\n    memset(st,0,sizeof(st));//\u6700\u597dmemset\u4e00\u4e0b\uff0c\u6709\u53ef\u80fd\u51fa\u95ee\u9898\u3002\n    st[1]=1,st[2]=2;\n    for(int i=3;i<=n;i++)\n    {\n        while(top>1&&judge(i,st[top],st[top-1]))top--;//\u628a\uff01\u53bb\u6389\u5c31\u53ef\u4ee5\u4e86\u3002\n        st[++top]=i;\n    }\n    for(int i=1;i<=top-1;i++)ans+=dis(st[i],st[i+1]);//\u540e\u4e00\u8fb9\u57fa\u672c\u4e00\u6837\u3002\n    printf(\"%.2lf\",ans);\n    return 0;\n}\n```\n## \u603b\u7ed3\n$1$ . \u6253\u5b8c\u9898\u89e3\u540e\uff0c\u611f\u89c9\u8fd8\u662f\u6709\u7684\u8bf4\u7684\u4e0d\u6e05\u695a\uff08\u5c31\u50cf\u6211\u770b\u522b\u4eba\u7684\u9898\u89e3\u65f6\u4e00\u6837\uff09\uff0c\u73b0\u5728\u62ff\u51fa\u53c2\u8003\u8d44\u6599\uff0c\u4e0d\u61c2\u7684\u8bdd\uff0c\u5927\u5bb6\u53ef\u4ee5\u770b\u4e00\u4e0b[\u767e\u5ea6\u767e\u79d1\uff1a\u51f8\u5305](https://baike.baidu.com/item/%E5%87%B8%E5%8C%85/179150?fr=aladdin)\u548c[\u6570\u5b66\uff1a\u51f8\u5305\u7b97\u6cd5\u8be6\u89e3](https://www.cnblogs.com/aiguona/p/7232243.html)\u3002  \n$2$ . \u6253\u5b8c\u8fd9\u9898\u53ef\u4ee5\u770b\u4e00\u770b\u6708\u8d5b\u7684 $E$ \u9898 ( \u6709\u96be\u5ea6 \uff09\uff0c[P4756 Added Sequence](https://www.luogu.org/problemnew/show/P4756)\u3002",
        "postTime": 1532259175,
        "uid": 60089,
        "name": "Trinity",
        "ccfLevel": 0,
        "title": "P2742 \u3010\u6a21\u677f\u3011\u4e8c\u7ef4\u51f8\u5305 by HydraNazis"
    },
    {
        "content": "## [\u539f\u6587\u5730\u5740](https://www.cnblogs.com/bcoier/p/10519725.html)\n\n\u4eba\u751f\u7b2c\u4e00\u9053\u8ba1\u7b97\u51e0\u4f55\u9898\uff1f \u7559\u4f5c\u7eaa\u5ff5$QAQ$\n\n\u51f8\u5305\u662f\u4ec0\u4e48\uff1f\u4e0b\u56fe\u5c31\u662f\u4e00\u4e2a~~\u571f~~\u5305\n![](https://cdn.luogu.com.cn/upload/pic/53802.png)\n\n\u6211\u4eec\u600e\u4e48\u6c42\u51fa\u51f8\u5305\u5462\n\n\u6211\u4eec\u5148\u628a\u51f8\u5305\u5206\u6210\u4e0a\u4e0b\u4e24\u4e2a\u90e8\u5206\n\n![](https://cdn.luogu.com.cn/upload/pic/53804.png)\n\n\u5982\u56fe\uff0c\u7ea2\u8272\u90e8\u5206\u79f0\u4e3a\u4e0a\u534a\u90e8\u5206\uff0c\u9ed1\u8272\u90e8\u5206\u6210\u4e3a\u4e0b\u534a\u90e8\u5206\n\n\u7136\u540e\u6309\u7167x\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0cy\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\n\n\u4e8e\u662f\u7b2c\u4e00\u4e2a\u5c31\u4f1a\u627e\u5230\u6700\u5de6\u8fb9\u7684\u4e00\u4e2a\u6700\u4e0b\u9762\u7684\u70b9\uff0c\u7b2c\u4e8c\u4e2a\u5c31\u4f1a\u627e\u5230\u6700\u53f3\u8fb9\u7684\u4e00\u4e2a\u6700\u4e0a\u9762\u7684\u70b9\n\n\u6211\u4eec\u4ee5\u8fd9\u4e24\u4e2a\u70b9\u4e3a\u5206\u754c\u7ebf\uff0c\u5206\u51fa\u4e0a\u4e0b\u4e24\u4e2a\u51f8\u5305\u5206\u522b\u6c42\u51fa\u5468\u957f\n\n\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a\u6808\uff0c\u6808\u4e2d\u7684\u5143\u7d20\u5373\u4e3a\u4e0a\uff08\u4e0b\uff09\u51f8\u5305\u6240\u6709\u5143\u7d20\n\n\u5bf9\u4e8e\u4e0b\u534a\u90e8\u5206\uff0c\u6211\u4eec\u663e\u7136\u8981\u8ba9\u659c\u7387\u5c3d\u53ef\u80fd\u5730\u5c0f\n\n\u6211\u4eec\u5148\u628a\u524d\u4e24\u4e2a\u70b9\uff08\u5206\u522b\u4e3aAB\uff09\u5165\u6808\uff0c\u62d3\u5c55\u5230\u7b2c\u4e09\u4e2a\u70b9\uff08C\uff09\uff0c\u82e5$K_{AC}<K_{AB}$\u5219\u628aC\u8fdb\u6808\uff0c\u5426\u5219\u5c06B\u5f39\u51fa\u5e76\u5c06C\u8fdb\u6808\uff0c\u4e0d\u65ad\u5f39\u51fa\u76f4\u5230$K_{AC}>K_{AB}$\n\n\u800c\u5bf9\u4e8e\u4e0a\u534a\u90e8\u5206\uff0c\u6211\u4eec\u662f\u8981\u8ba9\u659c\u7387\u5c3d\u53ef\u80fd\u5927\n\n\u540c\u7406\uff0c\u6211\u4eec\u5148\u628a\u540e\u4e24\u4e2a\u70b9\uff08\u5206\u522b\u4e3aFE\uff09\u5165\u6808\uff0c\u62d3\u5c55\u5230\u7b2c\u4e09\u4e2a\u70b9\uff08D\uff09\uff0c\u82e5$K_{FD}<K_{ED}$\u5219\u628aD\u8fdb\u6808\uff0c\u5426\u5219\u5c06E\u5f39\u51fa\u5e76\u5c06D\u8fdb\u6808\uff0c\u4e0d\u65ad\u5f39\u51fa\u76f4\u5230$K_{FD}>K_{ED}$\n\n\u4e8e\u662f\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u4e0a\u4e0b\u4e24\u4e2a\u51f8\u5305\u7684\u6240\u6709\u70b9\uff0c\u518d\u7528\u8ddd\u79bb\u516c\u5f0f\u7b97\u5c31\u53ef\u4ee5\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6$O(N)$\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define il inline\n#define re register\n#define D double\n#define inf 123456789\nil int read()\n{\n    re int x = 0, f = 1; re char c = getchar();\n    while(c < '0' || c > '9') { if(c == '-') f = -1; c = getchar();}\n    while(c >= '0' && c <= '9') x = x * 10 + c - 48, c = getchar();\n    return x * f;\n}\n#define rep(i, s, t) for(re int i = s; i <= t; ++ i)\n#define drep(i, s, t) for(re int i = t; i >= s; -- i)\n#define Next(i, u) for(re int i = head[u]; i; i = e[i].next)\n#define mem(k, p) memset(k, p, sizeof(k))\n#define maxn 10005\nstruct node{D x, y;}e[maxn];\nint n, st[maxn], top;\nD ans;\n//il D ff(int x){return x * x;}\n#define ff(x) (x) * (x)\nil bool cmp(node a, node b){return a.x == b.x ? a.y < b.y : a.x < b.x;}\nil D dis(int x, int y){return sqrt(ff(e[x].x - e[y].x) + ff(e[x].y - e[y].y));}\nil D getk(int x, int y){return e[x].x == e[y].x ? inf : (e[x].y - e[y].y) / (e[x].x - e[y].x);}//\u6ce8\u610f\u8fd9\u91cc\u4e00\u5b9a\u8981\u5224\u65ad\u4e24\u4e2ax\u76f8\u7b49\u7684\u60c5\u51b5\nint main()\n{\n\tn = read();\n\trep(i, 1, n) scanf(\"%lf%lf\", &e[i].x, &e[i].y);\n\tsort(e + 1, e + n + 1, cmp);\n\trep(i, 1, n)\n\t{\n\t\tst[++ top] = i;\n\t\twhile(top > 2 && getk(st[top], st[top - 2]) < getk(st[top - 1], st[top - 2])) \n\t\t\tst[top - 1] = st[top], -- top;\n\t}\n\trep(i, 1, top - 1) ans += dis(st[i], st[i + 1]);\n\ttop = 0;\n\tdrep(i, 1, n)\n\t{\n\t\tst[++ top] = i;\n\t\twhile(top > 2 && getk(st[top], st[top - 2]) < getk(st[top - 1], st[top - 2])) \n\t\t\tst[top - 1] = st[top], -- top;\n\t}\n\trep(i, 1, top - 1) ans += dis(st[i], st[i + 1]);\n\tprintf(\"%.2lf\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1552309625,
        "uid": 57014,
        "name": "Nemlit",
        "ccfLevel": 9,
        "title": "\u3010\u6a21\u677f\u3011\u4e8c\u7ef4\u51f8\u5305"
    },
    {
        "content": "> \u51f8\u591a\u8fb9\u5f62\u662f\u4e00\u4e2a\u5185\u90e8\u4e3a\u51f8\u96c6\u7684\u7b80\u5355\u591a\u8fb9\u5f62\u3002\u51f8\u591a\u8fb9\u5f62\uff08Convex Polygon\uff09\u6307\u5982\u679c\u628a\u4e00\u4e2a\u591a\u8fb9\u5f62\u7684\u6240\u6709\u8fb9\u4e2d\uff0c\u4efb\u610f\u4e00\u6761\u8fb9\u5411\u4e24\u65b9\u65e0\u9650\u5ef6\u957f\u6210\u4e3a\u4e00\u76f4\u7ebf\u65f6\uff0c\u5176\u4ed6\u5404\u8fb9\u90fd\u5728\u6b64\u76f4\u7ebf\u7684\u540c\u65c1\uff0c\u90a3\u4e48\u8fd9\u4e2a\u591a\u8fb9\u5f62\u5c31\u53eb\u505a\u51f8\u591a\u8fb9\u5f62   \u2014\u2014\u767e\u5ea6\u767e\u79d1\n\n\u51f8\u5305\u5f62\u8c61\u5730\u6765\u8bf4\u5c31\u662f\u4ee5\u7ed9\u5b9a\u7684\u70b9\u4e3a\u9876\u70b9\uff0c\u5185\u90e8\u80fd\u591f\u5305\u62ec\u6240\u6709\u70b9\u7684\u51f8\u591a\u8fb9\u5f62\u3002\n\nAndrew\u7b97\u6cd5\u524d\u7f6e\u829d\u58eb\uff1a**\u8ba1\u7b97\u51e0\u4f55\u5411\u91cf\u77e5\u8bc6\uff0c~~\u5404\u79cd\u5c0f\u5b66\u4e8c\u5e74\u7ea7\u51e0\u4f55\u77e5\u8bc6~~**\n\n\u6211\u4eec\u90fd\u77e5\u9053\u5411\u91cf\u70b9\u79ef\u3001\u5411\u91cf\u53c9\u79ef\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/7wjbphdg.png)\n\n\u5982\u4e0a\uff0c $\\vec v \\cdot \\vec w=\\mid \\vec v\\mid\\mid \\vec w\\mid\\cos(\\theta),\\ \\vec v \\times \\vec w=\\mid \\vec v\\mid\\mid \\vec w\\mid\\sin(\\theta)$ \n\n\u5176\u4e2d $\\theta$ \u4e3a\u4e24\u4e2a\u5411\u91cf\u7684\u5939\u89d2\uff0c\u4e0d\u96be\u8bc1\u660e\u70b9\u79ef\u7b49\u4e8e $\\vec v_x\\times \\vec w_x+\\vec v_y\\times \\vec w_y$ \uff0c\u53c9\u79ef\u7b49\u4e8e $\\vec v_x\\times \\vec w_y-\\vec v_y\\times \\vec w_x$ \uff08\u5c06\u5411\u91cf\u7684\u957f\u5ea6\u7528\u5c0f\u5b66\u4e8c\u5e74\u7ea7\u7684\u52fe\u80a1\u5b9a\u7406\u6c42\u51fa\uff0c\u4ee3\u5165\u4e24\u89d2\u548c\u6b63\u5f26\u548c\u4f59\u5f26\u516c\u5f0f\u5c31\u884c\u4e86qwq\uff09\u3002\n\n\u5411\u91cf\u7684\u52a0\u51cf\u8bf7\u81ea\u884c\u770b\u56fe\u7406\u89e3\uff08\uff08\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/9vhtr3tg.png)\n\n```cpp\nVector operator + (Vector A, Vector B) { return Vector(A.x + B.x, A.y + B.y); }// \u5411\u91cf\u52a0\u6cd5\nVector operator - (Point A, Point B) { return Vector(A.x - B.x, A.y - B.y); }// \u5411\u91cf\u51cf\u6cd5\nVector operator * (Vector A, double p) { return Vector(A.x * p, A.y * p); }// \u5411\u91cf\u4e58\u6570\nVector operator / (Vector A, double p) { return Vector(A.x / p, A.y / p); }// \u5411\u91cf\u9664\u6570\ndouble dot(Vector A, Vector B) { return A.x * B.x + A.y * B.y; }// \u5411\u91cf\u70b9\u79ef\ndouble cross(Vector A, Vector B) { return A.x * B.y - A.y * B.x; }// \u5411\u91cf\u53c9\u79ef\n```\n\n\u7136\u540e\u524d\u7f6e\u77e5\u8bc6\u5c31\u662f\u8fd9\u6837\u4e86\u3002\n\nAndrew\u7b97\u6cd5\u7684\u57fa\u672c\u601d\u60f3\u662f\uff0c\u5c06\u6240\u6709\u70b9**\u4ee5 $x$ \u5750\u6807\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u4ee5 $y$ \u5750\u6807\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f**\uff0c\u5c06\u6574\u4e2a\u51f8\u5305\u5206\u6210\u4e0a\u51f8\u5305\u548c\u4e0b\u51f8\u5305\uff0c\u5206\u522b\u6c42\u89e3\u3002\n\n\u6c42\u4e0b\u51f8\u5305\u7684\u8fc7\u7a0b\u4e2d\uff0c\u628a $p_1$ \u548c $p_2$ \u653e\u5230\u51f8\u5305\u4e2d\uff0c\u4ece $p_3$ \u5f00\u59cb\uff0c\u5f53\u65b0\u7684\u70b9\u5728\u51f8\u5305\u201c\u524d\u8fdb\u201d\u65b9\u5411\u7684\u5de6\u8fb9\u7684\u65f6\u5019\u7ee7\u7eed\uff0c\u5426\u5219\u4f9d\u6b21\u5220\u9664\u6700\u8fd1\u52a0\u5165\u51f8\u5305\u7684\u70b9\uff0c\u76f4\u5230\u65b0\u7684\u70b9\u5728\u5de6\u8fb9\uff0c\u6b64\u65f6\u6211\u4eec\u6c42\u5b8c\u4e86\u4e0b\u51f8\u5305\u3002\n\n\u5982\u4e0b\u56fe\uff0c\u5230 $p_{17}$ \u8fd9\u4e2a\u70b9\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53d1\u73b0\u4e0b\u4e00\u4e2a\u70b9\u5728\u5b83**\u524d\u8fdb\u65b9\u5411**\u7684\u53f3\u4fa7\uff0c\u6240\u4ee5\u4f9d\u6b21\u5220\u9664\u524d\u9762\u7684\u70b9\uff0c\u76f4\u5230\u4e00\u4e2a\u70b9\u524d\u8fdb\u65b9\u5411\u7684\u53f3\u8fb9\u662f $p_{20}$ \n\n![](https://cdn.luogu.com.cn/upload/image_hosting/za9fuw5o.png)\n\n\u5224\u65ad\u662f\u5426\u5728\u524d\u8fdb\u65b9\u5411\u5de6\u8fb9\u53ef\u4ee5\u7528\u5411\u91cf\u4f5c\u5dee\u7684\u53c9\u79ef\u8ba1\u7b97\u3002\n\n\u6c42\u4e0a\u51f8\u5305\u7684\u8fc7\u7a0b\u51e0\u4e4e\u4e00\u6837\u3002\n\n```cpp\n// \u8fd4\u56de\u9876\u70b9\u6570\uff0cp \u662f\u70b9\u96c6\uff0cPoly \u662f\u51f8\u5305\nbool operator < (const Point A, const Point B) { return A.x < B.x || (sgn(A.x - B.x) == 0 && A.y < B.y); }// \u6309\u7167\u524d\u9762\u7684\u89c4\u5219\u6392\u5e8f\nint convexhull(Point *p, int n, Point *Poly) {\n    sort(p, p + n);// \u6392\u5e8f\n    int m = 0;// \u9876\u70b9\u4e2a\u6570\n    // \u6c42\u4e0b\u51f8\u5305\n    for (int i = 0; i < n; i++) {\n        while (m > 1 && cross(Poly[m - 1] - Poly[m - 2], p[i] - Poly[m - 2]) <= 0) m--;// \u5f53\u9876\u70b9\u6570\u5927\u4e8e1\u7684\u65f6\u5019\uff0c\u4f9d\u6b21\u5220\u9664\u6709\u5728\u524d\u8fdb\u65b9\u5411\u53f3\u8fb9\u7684\u70b9\u7684\u70b9\n        Poly[m++] = p[i];// \u52a0\u5165\u51f8\u5305\n    }\n    // \u6c42\u4e0a\u51f8\u5305\n    int k = m;\n    for (int i = n - 2; i >= 0; i--) {\n        while (m > k && cross(Poly[m - 1] - Poly[m - 2], p[i] - Poly[m - 2]) <= 0) m--;\n        Poly[m++] = p[i];\n    }\n    if (n > 1) m--;\n    return m;\n}\n```\n\n\u6574\u4e2aAndrew\u7b97\u6cd5\u7684\u4ee3\u7801\u5c31\u51fa\u6765\u4e86\uff1a\n\n```cpp\nnamespace polygons {\n    const double eps = 1e-8;// \u4e3a\u4e86\u89e3\u51b3\u7cbe\u5ea6\u95ee\u9898\u5f15\u8fdb\u7684\u4e09\u6001\u51fd\u6570\n    int sgn(double x) {\n        if (fabs(x) < eps) {\n            return 0;\n        }\n        return (x < 0) ? -1 : 1;\n    }\n    struct Point {// \u70b9\u7684\u7ed3\u6784\u4f53\n        double x, y;\n        Point(double x = 0.0, double y = 0.0) : x(x), y(y) {}\n    };\n    typedef Point Vector;// \u5411\u91cf\u7684\u7ed3\u6784\u4f53\uff0c\u4ee5\u4e0b\u5411\u91cf\u5404\u79cd\u8fd0\u7b97\n    Vector operator + (Vector A, Vector B) { return Vector(A.x + B.x, A.y + B.y); }\n    Vector operator - (Point A, Point B) { return Vector(A.x - B.x, A.y - B.y); }\n    Vector operator * (Vector A, double p) { return Vector(A.x * p, A.y * p); }\n    Vector operator / (Vector A, double p) { return Vector(A.x / p, A.y / p); }\n    bool operator < (const Point A, const Point B) { return A.x < B.x || (sgn(A.x - B.x) == 0 && A.y < B.y); }\n    bool operator == (const Point A, const Point B) { return sgn(A.x - B.x) == 0 && sgn(A.y - B.y) == 0; }\n    double dot(Vector A, Vector B) { return A.x * B.x + A.y * B.y; }\n    double cross(Vector A, Vector B) { return A.x * B.y - A.y * B.x; }\n    int convexhull(Point *p, int n, Point *Poly) {// \u6c42\u51f8\u5305\n        sort(p + 1, p + n + 1);\n        int m = 0;\n        for (int i = 1; i <= n; i++) {\n            while (m > 1 && cross(Poly[m] - Poly[m - 1], p[i] - Poly[m - 1]) <= 0) m--;\n            Poly[++m] = p[i];\n        }\n        int k = m;\n        for (int i = n - 1; i >= 1; i--) {\n            while (m > k && cross(Poly[m] - Poly[m - 1], p[i] - Poly[m - 1]) <= 0) m--;\n            Poly[++m] = p[i];\n        }\n        if (n > 1) m--;\n        return m;\n    }\n}\n```",
        "postTime": 1624071493,
        "uid": 306573,
        "name": "Ender32k",
        "ccfLevel": 0,
        "title": "P2742 Fencing the Cows \u9898\u89e3"
    },
    {
        "content": "\u89e3\u51b3\u51f8\u5305\uff0c\u663e\u7136 Andrew \u662f\u975e\u5e38\u4f18\u79c0\u7684\u7b97\u6cd5\uff0c\u800c\u6211\u53d1\u73b0\u51e0\u4e4e\u5927\u90e8\u5206\u4eba\u90fd\u5199\u7684\u662f\u6781\u89d2\u6392\u5e8f\uff0c\u6781\u89d2\u6392\u5e8f\u6cd5\u867d\u7136\u597d\u50cf\u4ee3\u7801\u7b80\u5355\u4e86\u4e00\u70b9\uff0c\u4f46\u662f\u5b9e\u73b0\u8fc7\u7a0b\u7528\u4e86\u795e\u5947\u7684 ```atan2``` \u7b49\u7b49\u5904\u7406\uff0c\u53cd\u800c\u4e0d\u5982\u6309\u5750\u6807\u6392\u5e8f\u66f4\u76f4\u89c2\u800c\u6613\u4e8e\u7406\u89e3\u3002\n\n**\u800c\u9898\u89e3\u4e2d\u5e76\u6ca1\u6709\u627e\u5230\u4e00\u4e2a\u5199\u7684\u6e05\u6670\u660e\u4e86\u7684\u6309\u5750\u6807\u6392\u5e8f\u7684\u5199\u6cd5\uff0c\u56e0\u6b64\uff0c\u5199\u4e00\u7bc7\u9898\u89e3\u6765\u8865\u5145\u8fd9\u4e2a\u6f0f\u6d1e\u3002**\n\n\u8bc1\u660e\u7565\uff0c\u4e0d\u4f1a\u7684\u5c0f\u4f19\u4f34\u53ef\u4ee5\u53bb\u641c Andrew \u7b97\u6cd5\u3002\n\n\u6211\u4eec\u6309\u7167\u6a2a\u5750\u6807$x$\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c**\u5982\u679c $x$ \u76f8\u7b49\u6309\u7167\u7eb5\u5750\u6807 $y$ \u4ece\u5c0f\u5230\u5927\u6392\u5e8f**\uff0c\u8fd9\u6b65\u5176\u5b9e\u5f88\u5173\u952e\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\uff0c\u5982\u679c\u5230\u4e86\u4e0b\u51f8\u58f3\u7684\u6700\u540e\u51e0\u4e2a\u70b9\uff0c\u800c\u5b83\u4eec\u7eb5\u5750\u6807\u76f8\u7b49\uff0c\u90a3\u4e48\u5982\u679c\u4e0d\u662f\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u7684$y$\u7684\u8bdd\uff0c\u5c31\u4e0d\u80fd\u4f9d\u6b21\u8fde\u8d77\u6765\u4ece\u4f4e\u5230\u9ad8\u4e0a\u53bb\u4e86\uff0c\u800c\u4f1a\u5220\u6389\u4e00\u4e9b\u70b9\uff0c\u663e\u7136\u9519\u8bef\u3002\n\n\u7136\u540e\u6b63\u7740\u4e00\u904d\u627e\u4e00\u4e2a\u4e0b\u51f8\u58f3\uff0c\u53cd\u7740\u518d\u6765\u4e00\u904d\u627e\u4e00\u4e2a\u4e0a\u51f8\u58f3\uff0c\u5408\u8d77\u6765\u5c31\u662f\u4e00\u4e2a\u51f8\u5305\u3002\n\n\u627e\u7684\u65f6\u5019\uff0c\u6bcf\u6b21\u9009\u62e9\u5c06\u628a\u5f53\u524d\u70b9\u8fdb\u6808\uff0c\u800c\u6ee1\u8db3\u51f8\u58f3\u9700\u8981\u5c06\u4e4b\u524d\u7684\u70b9\u51fa\u6808\uff0c\u8fd9\u91cc\u7528\u5411\u91cf\u53c9\u4e58\u53ef\u4ee5\u5f88\u7b80\u5355\u7684\u5224\u65ad\u51fa\u5f53\u524d\u70b9\u662f\u5426\u65b9\u5411\u6b63\u786e\uff0c\u4e0d\u6b63\u786e\u7684\u8bdd\u51fa\u6808\u4e4b\u524d\u7684\u70b9\uff0c\u6362\u70b9\u7ee7\u7eed\u5224\u65ad\u65b9\u5411\u3002\n\n\uff08\u6ce8\u610f\u51fa\u6808\u4e0d\u80fd\u628a\u7b2c\u4e00\u4e2a\u70b9\u4e5f\u51fa\u53bb\u4e86\u3002\uff09\n\n\u7136\u540e\u5c31\u6ca1\u5565\u4e86\uff0c\u5199\u51e0\u4e2a\u51fd\u6570\u5206\u522b\u7528\u6765\u7b97\u5411\u91cf\uff0c\u7b97\u53c9\u4e58\uff0c\u7b97\u8ddd\u79bb\uff0c\u7136\u540e\u53bb\u627e\uff0c\u627e\u5230\u628a\u8ddd\u79bb\u4e00\u52a0\u5c31 OK \u4e86\u3002\n\ncode:\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=100010;\nstruct point{\n\tdouble x,y;\n}p[maxn]; \ninline point getvec(point a, point b){//\u6211\u4eec\u82f1\u8bed\u90fd\u5f88\u68d2\uff0c\u6240\u4ee5\u6211\u4eec\u90fd\u77e5\u9053vector\u662f\u5411\u91cf\u7684\u610f\u601d\u3002qwq\n\treturn (point){(b.x-a.x),(b.y-a.y)};\n}\ninline double dis(point a,point b){\n\treturn sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));\n}\ninline double xmul(point a,point b){\n\treturn a.x*b.y-b.x*a.y;\n}\ninline bool operator < (const point &a,const point &b){\n\tif(a.x==b.x) return a.y<b.y;\n\treturn a.x<b.x;\n}\n//\u4e0a\u9762\u7684\u51fd\u6570\u987e\u540d\u601d\u4e49\u5c31\u597d\u4e86\u3002\nint n,stck[maxn];\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%lf %lf\",&p[i].x,&p[i].y);\n\t}\n\tsort(p+1,p+1+n);\n\tdouble ans=0;int cnt=0;\n\tstck[++cnt]=1,stck[++cnt]=2;\n\tfor(int i=3;i<=n;i++){\n\t\tpoint u=getvec(p[stck[cnt-1]],p[stck[cnt]]);//\u6839\u636e\u8fde\u7684\u8d77\u6b62\u70b9\uff0c\u7b97\u51fa\u5b83\u5bf9\u5e94\u7684\u5411\u91cf\u7684\u5750\u6807\u3002AB(X,Y)=B(x1,y1)-A(x2,y2);\n\t\tpoint v=getvec(p[stck[cnt]],p[i]);\n\t\twhile(xmul(u,v)<0.0){//\u5224\u65ad\u5f53\u524d\u8fde\u8fb9\u7684\u65b9\u5411\u3002\n\t\t\tif(cnt==1) break;\n\t\t\tcnt--;\n\t\t\tu=getvec(p[stck[cnt-1]],p[stck[cnt]]);v=getvec(p[stck[cnt]],p[i]);\n\t\t}\n\t\tstck[++cnt]=i;\n\t}\n\tint tmp=cnt;\n\tstck[++cnt]=n,stck[++cnt]=n-1;\n\tfor(int i=n-2;i>=1;i--){\n\t\tpoint u=getvec(p[stck[cnt-1]],p[stck[cnt]]);\n\t\tpoint v=getvec(p[stck[cnt]],p[i]);\n\t\twhile(xmul(u,v)<0.0){\n\t\t\tif(cnt==tmp+1) break;\n\t\t\tcnt--;\n\t\t\tu=getvec(p[stck[cnt-1]],p[stck[cnt]]);v=getvec(p[stck[cnt]],p[i]);\n\t\t}\n\t\tstck[++cnt]=i;\n\t}\n\tfor(int i=1;i<=cnt-1;i++){//\u5176\u4e2d\u4f1a\u6709\u4e24\u6b21n\u8fd9\u4e2a\u70b9\uff0c\u4f46\u662f\u7b97\u8ddd\u79bb\u7684\u65f6\u5019\u65e0\u6240\u8c13\uff0c\u81ea\u5df1\u5230\u81ea\u5df1\u4e3a0\uff0c\u5982\u679c\u9700\u8981\u8f93\u51fa\u4e00\u4e0b\u8fd9\u4e2a\u51f8\u5305\u7684\u5404\u4e2a\u70b9\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u6ce8\u610f\u3002\n\t\tans+=dis(p[stck[i]],p[stck[i+1]]);\n\t}\n\tprintf(\"%.2lf\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1547261107,
        "uid": 64611,
        "name": "\u4eba\u6b87\u7269\u5df2\u975e",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2742 \u3010\u3010\u6a21\u677f\u3011\u4e8c\u7ef4\u51f8\u5305 / [USACO5.1]\u5708\u5976\u725bFencing the Cows\u3011"
    },
    {
        "content": "```cpp\n/*\n\u672c\u849f\u84bb\u77e5\u9053\u672c\u9898\u5404\u4f4d\u5927\u795e\u7ed9\u51fa\u4e86\u5404\u79cd\u5404\u6837\u7684\u795e\u5947\u505a\u6cd5qwq\n\u4f46\u8fd8\u662f\u51b3\u5b9a\u628a\u8fd9\u9898\u7684\u4ee3\u7801\u7684\u6bcf\u4e00\u6b65\u7684\u610f\u601d\u8be6\u7ec6\u7684\u7ed9\u521d\u5b66\u51f8\u5305\u89e3\u91ca\u4e00\u904d\n\u4f60\u4eec\u73c2\u4ee5\u5728\u770b\u5b8cGraham\u7684\u8bc1\u660e\u4e4b\u540e\u5374\u6ca1\u6709\u4ec0\u4e48\u601d\u8def\u7684\u60c5\u51b5\u4e0b\u6765\u770bqwq\n\u800c\u5404\u4f4d\u5927\u4f6c\uff0c\u8fd9\u53ea\u662f\u849f\u84bb\u7684\u4e00\u7bc7\u9898\u89e3\uff0c\u5728\u60a8\u770b\u5b8c\u4e4b\u540e\u6709\u4ec0\u4e48\u610f\u89c1\u6216\u53d1\u73b0\u4ec0\u4e48\u95ee\u9898\n\u8bf7\u4e00\u5b9a\u544a\u77e5\u672c\u4eba\uff0c\u672c\u4eba\u4e00\u5b9a\u4f1a\u8ba4\u771f\u4fee\u6539\uff0c\u8c22\u8c22\u3002\n*/\n#include<bits/stdc++.h>\nusing namespace std;\nstruct EE{\n\tdouble x,y,dis,dus;//x,y\u5750\u6807,dis\u5411\u91cf,dus\u5ea6\u6570\u3002 \n}e[10001],s[10001];//e\u521d\u59cb\u5750\u6807\uff0cs\u51f8\u5305\u7684\u5750\u6807 \ndouble ans;//\u7b54\u6848\ndouble qx=100000000,qy=100000000;//\u521d\u59cb\u4f4d\u7f6e \nbool cmp(EE a,EE b)\n{\n\treturn a.dus<b.dus;//\u5148\u6309\u5ea6\u6570\u628a\u6bcf\u4e2a\u70b9\u6392\u4e0b\u5e8f \n}\nint main()\n{\n\tint n,qd,js=0;//qd\u521d\u59cb\u70b9\u7684\u4f4d\u7f6e\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u627e\u7684\u90a3\u4e2a\u51f8\u51fa\u6765\u7684\u70b9 \u3002\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>e[i].x>>e[i].y;\n\t\tif(e[i].y<qy||(e[i].y==qy&&e[i].x<qx))//\u5bfb\u627e\u521d\u59cb\u70b9 \n\t\t{\n\t\t\tqd=i;//\u8bb0\u5f55\u521d\u59cb\u70b9\u4fe1\u606f \n\t\t\tqx=e[i].x;\n\t\t\tqy=e[i].y;\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n        e[i].x-=qx;\n        e[i].y-=qy;//\u4ee5\u521d\u59cb\u70b9\u4e3a\u5750\u6807\u539f\u70b9\uff08\u65b9\u4fbf\u6c42\u89d2\u5ea6\uff09 \n        if(e[i].x==0&&e[i].y==0)\n\t\t\te[i].dus=0;//\u521d\u59cb\u70b9 \n        else if(e[i].x!=0)\n\t\t\te[i].dus=atan2(e[i].y,e[i].x)*180/acos(-1);//\u5957\u4e0a\u7b97\u89d2\u5ea6\u7684\u6a21\u677fqwq \n        else \n\t\t\te[i].dus=90;//\u5782\u76f4\u7684 \n        e[i].dis=e[i].x*e[i].x+e[i].y*e[i].y;//\u5957\u4e0a\u6c42\u5411\u91cf\u7684\u6a21\u677fqwq \n    }\n\tswap(e[1],e[qd]);//\u628a\u521d\u59cb\u70b9\u653e\u5230\u961f\u9996 \n    sort(e+1+1,e+n+1,cmp);//\u5148\u6309\u5ea6\u6570\u628a\u5176\u4ed6\u6bcf\u4e2a\u70b9\u6392\u4e0b\u5e8f \n\te[++n]=e[1];//\u6700\u540e\u51f8\u5305\u4f1a\u7ed5\u4e00\u5708\u56de\u5230\u521d\u59cb\u70b9 \n    s[++js]=e[1];\n\ts[++js]=e[2];//\u8fd9\u4fe9\u4e2a\u70b9\u4e00\u5b9a\u5728\u51f8\u5305\u4e0a \n\tans=sqrt((e[2].x-e[1].x)*(e[2].x-e[1].x)+(e[2].y-e[1].y)*(e[2].y-e[1].y));//\u5148\u8ba1\u7b97\u7740\u4fe9\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\uff08\u52fe\u80a1\u5b9a\u7406--a*a+b*b=c*c\uff09 \n    for(int i=3;i<=n;i++)// \u4ece\u672a\u77e5\u7684\u7b2c\u4e09\u4e2a\u70b9\u5f00\u59cb\u505a \n\t{\n        while(js>=2)//\u5f53\u961f\u5217\u91cc\u6709\u4fe9\u4e2a\u548c\u4fe9\u4e2a\u4ee5\u4e0a\u7684\u70b9\u5f00\u59cb\u627e\u4e0b\u4e00\u4e2a\u51f8\u5305\u4e0a\u7684\u70b9 \uff08\u5176\u5b9ewhile(1)\u4e5f\u884c\uff0c\u56e0\u4e3a\u521a\u5f00\u59cb\u7684\u4fe9\u4e2a\u70b9\u4e00\u5b9a\u5728\u51f8\u5305\u4e0a\uff09 \n\t\t{//\u5173\u952e\u6765\u4e86 \uff08\u795e\u5947\u7684\u505a\u6cd5\uff09 \n            double pd=(e[i].x-s[js-1].x)*(s[js].y-s[js-1].y)-(s[js].x-s[js-1].x)*(e[i].y-s[js-1].y);\n\t\t\t// \u795e\u5947\u7684\u5411\u91cf\u505a\u6cd5\u672c\u849f\u84bb\u5e76\u4e0d\u77e5\u9053\u539f\u7406 \u53ea\u4f1a\u5957\u6a21\u677fqwq \n            if(pd>0)//\u5f53pd\u5927\u4e8e0\u7684\u65f6\u5019 \uff0c\u8bf4\u660e\u8fd9\u6211\u4eec\u7684\u961f\u5217\u7684\u6700\u540e\uff08\u5e94\u8be5\u53eb\u6808\u7684\u6808\u9876\u624d\u5bf9qwq\uff09\u7684\u70b9\u4e0d\u5728\u51f8\u5305\u4e0a \n\t\t\t{\n\t\t\t\tjs--;//\u628a\u8fd9\u4e2a\u65e0\u7528\u7684\u70b9\u8e22\u51fa\u961f\u5217\uff08\u6808\uff09 \n\t\t\t\tans-=sqrt((s[js+1].x-s[js].x)*(s[js+1].x-s[js].x)+(s[js+1].y-s[js].y)*(s[js+1].y-s[js].y));\n\t\t\t\t//\u51cf\u53bb\u4ed6\u7684\u957f\u5ea6\uff08\u8d21\u732e\uff09 \u7136\u540e\u518d\u6b21\u5224\u65ad\u65b0\u7684\u6808\u9876\u5728\u4e0d\u5728\u51f8\u5305\u4e0a \n            }\n\t\t\telse//\u8868\u793a\u73b0\u5728\u6808\u9876\u5728\u51f8\u5305\u4e0aqwq\uff0c\u606d\u559c\u548b\u4eec\u53ef\u4ee5\u505c\u6b62\u8e22\u70b9\u4e86 \n\t\t\t\tbreak;\n        }\n        s[++js]=e[i];//\u628a\u6211\u4eec\u65b0\u8fde\u63a5\u7684\u70b9\u653e\u5165\u6211\u4eec\u7684\u6808\u4e2d\uff0c\u518d\u52a0\u4e0a\u5b83\u7684\u957f\u5ea6\uff08\u8d21\u732e\uff09 \n\t\tans+=sqrt((s[js].x-s[js-1].x)*(s[js].x-s[js-1].x)+(s[js].y-s[js-1].y)*(s[js].y-s[js-1].y));\n    }\n    //\u6700\u540e\uff0c\u7ecf\u8fc7\u4e5d\u4e5d\u516b\u5341\u4e00\u7684\u78e8\u96be\uff0c\u6211\u4eec\u56de\u5230\u4e86\u521d\u59cb\u70b9\uff0c\u7b97\u51fa\u4e86\u7b54\u6848qwq \n    printf(\"%0.2lf\\n\",ans);//\u4fdd\u7559\u4fe9\u4f4d\u5c0f\u6570 \n}\n/*\n\u672c\u4eba\u7684\u505a\u6cd5\u53ef\u80fd\u548c\u5f88\u591a\u4ee3\u7801\u76f8\u4f3c\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u6a21\u677f\u7684\u539f\u56e0\uff0c\u672c\u4eba\u7684\u4ee3\u7801\u53c2\u8003\u4e86jzqjzq\u7684\u535a\u5ba2\u4e13\u680fqwq\n\u518d\u6b21\u611f\u8c22qwq\n*/\n```",
        "postTime": 1533544112,
        "uid": 87449,
        "name": "\u4efb\u68a6\u534e",
        "ccfLevel": 0,
        "title": "\u672c\u849f\u84bb\u7684\u51f8\u5305\u5b9e\u73b0\u7684\u8be6\u7ec6\u89e3\u91ca"
    },
    {
        "content": "## \u9898\u610f\n\n\u7ef4\u62a4\u4e00\u4e2a\u5b8c\u6574\u7684\u4e8c\u7ef4\u51f8\u5305\uff1b\n\n## \u5b9e\u73b0\n\n\u6211\u4eec\u5148\u56de\u987e\u4e00\u4e0b\u53c9\u79ef\u7684\u6027\u8d28\uff1a\n\n$a\u00d7b=x1\u00d7y2-x2\u00d7y1$\uff1b\n\n**$|a\u00d7b|$\u7684\u503c\u5c31\u4e3a\u4ee5a\uff0cb\u4e3a\u8fb9\u6784\u6210\u5e73\u884c\u56db\u8fb9\u5f62\u7684\u9762\u79ef\uff1b**\n\n\u53c9\u79ef\u7684\u8fd0\u7528\uff08\u51f8\u5305\u548c\u6781\u89d2\u6392\u5e8f\u4f1a\u7528\u7528\u5230\uff09\uff1a\n\n**$a\u00d7b>0$ \u5219\u8bf4\u660e b\u5728a\u7684\u5de6\u4e0a\u65b9\uff1b**\n\n**$a\u00d7b<0$ \u5219\u8bf4\u660eb\u5728a\u7684\u53f3\u4e0b\u65b9\uff1b**\n\n\u6211\u4eec\u8981\u7ef4\u62a4\u4e00\u4e2a\u5b8c\u6574\u7684\u51f8\u5305\uff1b\n\n\u5f88\u660e\u663e\u6211\u4eec\u8981\u6392\u5e8f\uff0c\u6211\u4ee5x\u5347\u5e8f\uff0cy\u964d\u5e8f\u6392\u5217\uff1b\n\n\u6240\u4ee5\u6211\u4eec\u8981\u628a\u5b83\u5206\u4e3a\u4e0a\u4e0b\u4e24\u4e2a\u90e8\u5206\uff08\u5f62\u8c61\u7406\u89e3\u4e3a\u4e24\u4e2a\u534a\u5706\uff09\uff1b\n\n\u4e00\u4e2a\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u659c\u7387\u9012\u51cf\uff08\u4e0a\u51f8\u5305\uff09\uff1b\n\n\u53e6\u4e00\u4e2a\u7ef4\u62a4\u659c\u7387\u5355\u8c03\u9012\u589e\uff08\u4e0b\u51f8\u5305\uff09\uff1b\n\n\u4e3a\u4e86\u4f7f\u5176\u6210\u4e3a\u4e00\u4e2a\u5b8c\u6574\u7684\u51f8\u5305\uff0c\u6211\u4eec\u8981\u5f3a\u5236\u5728\u4e24\u4e2a\u91cc\u9762\u585e\u8fdb1\u548cn\u70b9\uff1b\n\n## \u6613\u9519\n\n\u6ce8\u610f\u5224\u65ad\u4e0a\u4e0b\u4e24\u90e8\u5206\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u7528\u53c9\u79ef\uff1b\n\n## \u4ee3\u7801\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define inf 0x3f3f3f3f\n#define ri register int\n#define il inline\n#define fi first\n#define se second\n#define mp make_pair\n#define pi pair<int,int>\n#define mem0(x) memset((x),0,sizeof(x))\n#define mem1(x) memset((x),0x3f,sizeof(x))\n#define gc getchar\ntemplate<class T>void in(T &x)\n{\n    x = 0; bool f = 0; char c = gc();\n    while (c < '0' || c > '9') {if (c == '-') f = 1; c = gc();}\n    while ('0' <= c && c <= '9') {x = (x << 3) + (x << 1) + (c ^ 48); c = gc();}\n    if (f) x = -x;\n}\n#undef gc\nint n;\n#define eps 1e-14\nil bool isequ(const double &a, const double &b) {\n    return (a - b) <= eps && (a - b) >= -eps;\n}\n#define N 10010\nstruct Node {\n    double x, y;\n    Node() {}\n    Node(double xx, double yy) {\n        x = xx, y = yy;\n    }\n    friend bool operator<(const Node &a, const Node &b) {\n        if (isequ(a.x, b.x)) return a.y > b.y;\n        return a.x < b.x;\n    }\n} nod[N];\ndouble ans;\nint up[N], cup;\nint dow[N], cdow;\nil Node det(const int &a, const int &b) {\n    return Node(nod[a].x - nod[b].x, nod[a].y - nod[b].y);\n}\nil bool cj(const Node &a, const Node &b) {\n    return (a.x * b.y - a.y * b.x) > 0.0;\n}\nil void pushup(const int &i) {\n    while (cup > 1 && cj(det(i, up[cup - 1]), det(up[cup], up[cup - 1])) == 0) {\n        --cup;\n    }\n    up[++cup] = i;\n}\nil void pushdow(const int &i) {\n    while (cdow > 1 && cj(det(i, dow[cdow - 1]), det(dow[cdow], dow[cdow - 1])) == 1) {\n        --cdow;\n    }\n    dow[++cdow] = i;\n}\nil double getd(const Node &a) {\n    return sqrt(a.x * a.x + a.y * a.y);\n}\nil double slope(const Node &a) {\n    return a.y / a.x;\n}\nsigned main() {\n    in(n);\n    for (ri i = 1; i <= n; ++i)\n        scanf(\"%lf%lf\", &nod[i].x, &nod[i].y);\n    sort(nod + 1, nod + 1 + n);\n    dow[++cdow] = up[++cup] = 1;\n    for (ri i = 2; i < n; ++i) {\n        if (cj(det(i, 1), det(n, 1)) == 0) {\n            pushup(i);\n        }\n        else {\n            pushdow(i);\n        }\n    }\n    pushup(n);\n    pushdow(n);\n    for (ri i = 1; i < cup; ++i) {\n        ans += getd(det(up[i], up[i + 1]));\n    }\n    for (ri i = 1; i < cdow; ++i) {\n        ans += getd(det(dow[i], dow[i + 1]));\n    }\n    printf(\"%.2f\\n\", ans);\n    return 0;\n}\n\n```",
        "postTime": 1531146621,
        "uid": 58302,
        "name": "i207M",
        "ccfLevel": 0,
        "title": "\u4e8c\u7ef4\u51f8\u5305-P2742-\u5b66\u4e60\u7b14\u8bb0-\u89e3\u9898\u62a5\u544a"
    },
    {
        "content": "\u6765\u5c55\u793a\u4e00\u4e0b\u6211\u7684\u51f8\u5305\u6a21\u677f\u3002\n\n\u6211\u7528\u7684\u662f\u6c34\u5e73\u5e8f+\u6808\n\n1 \u6309x\u5750\u6807\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57,y\u5750\u6807\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n\n2 \u4ece\u5de6\u5230\u53f3\u679a\u4e3e\u70b9\uff0c\u5982\u679c\u5f53\u524d\u70b9\u76f8\u5bf9\u4e8e\u524d\u9762\u4e24\u4e2a\u662f\u5411\u5916\u7684\uff0c\u5c31\u4e0d\u65ad\u8ba9\u6808\u9876\u51fa\u53bb\u3002\u4e4b\u540e\u628a\u70b9\u52a0\u5165\u6808\u4e2d\u3002\u4ece\u800c\u5f97\u5230\u4e0b\u51f8\u5305\u3002\n\n3 \u4ece\u53f3\u5230\u5de6\u518d\u505a\u4e00\u904d\u3002\n\n```cpp\n#include<cstdio>\n#include<cmath>\n#include<algorithm> \nusing namespace std;\n\n#define oo 1000000\n#define N 10100\ndouble sqr(const double &x) { return x*x; }\nstruct point\n{ double x,y;\n  void read() { scanf(\"%lf%lf\",&x,&y); }\n  bool operator <(const point &i)const\n  {\n       return x<i.x||x==i.x&&y<i.y;\n  }\n  point operator -(const point &i)const\n  {\n      return (point){x-i.x,y-i.y};\n  }\n  double operator *(const point &i)const//\u53c9\u79ef \u5f97\u5230\u5f53\u524d\u65b9\u5411\u662f\u5411\u5de6\u8fd8\u662f\u5411\u53f3\n  {\n      return x*i.y-y*i.x;\n  }\n  friend double dis(const point &i,const point &j)\n  {\n      return sqrt(sqr(j.x-i.x)+sqr(j.y-i.y));\n  }\n}p[N],now;\n\nint n,i;\npoint q[N];int top;\nvoid push(const point &now)\n{\n   while ((now-q[top-1])*(q[top]-q[top-1])>0) --top;//\u5f53\u524d\u70b9\u76f8\u5bf9\u524d\u9762\u4e24\u4e2a\u5728\u5916\n   q[++top]=now; \n}\nvoid tu()\n{\n        q[0]=q[top=1]=p[1];//\u8bbe\u7f6e\u54e8\u70b9\n        for (i=2;i<=n;++i) push(p[i]);\n        for (i=n-1;i;--i) push(p[i]);//\u8fd9\u65f6\u5df2\u6709\u7684\u70b9\u5df2\u7ecf\u53ef\u4ee5\u5145\u5f53\u54e8\u70b9\u4e86\n}\n\ndouble len()\n{\n    double ans=0;\n    for (i=1;i<top;++i) ans+=dis(q[i],q[i+1]);\n    return ans;\n}\n\nint main()\n{\n    //freopen(\"1.in\",\"r\",stdin);\n    scanf(\"%d\",&n);\n    for (i=1;i<=n;++i) p[i].read();\n    sort(p+1,p+n+1);\n    tu();\n    printf(\"%.2lf\",len()); \n}\n```",
        "postTime": 1483614163,
        "uid": 9168,
        "name": "kczno1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2742 \u3010[USACO5.1]\u5708\u5976\u725bFencing the Cows\u3011"
    },
    {
        "content": "**\u4e8c\u7ef4\u51f8\u5305 \u6a21\u677f\u9898**\n\t\n\t\u5bf9\u4e8e\u627e\u51f8\u5305\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u6211\u7528\u7684\u662fGraham\u626b\u63cf\u7b97\u6cd5\n    \n    \u5373\uff1a\u6211\u4eec\u53ef\u4ee5\u627e\u51fa\u6574\u4e2a\u56fe\u4e2d\u6700\u9760\u5de6\u4e0b\u7684\u4f4d\u7f6e\u7684\u70b9\uff1b\n    \t\u4e0d\u59a8\u8bbe\u8be5\u70b9\u4e3a\u539f\u70b9\uff08\u5c31\u662f\u5c06\u6bcf\u4e2a\u70b9\u7684\u6a2a\u7eb5\u5750\u6807\u90fd\u51cf\u53bb\u8fd9\u4e2a\u70b9\u7684\u6a2a\u7eb5\u5750\u6807\uff09\n        \u518d\u53bb\u8ba1\u7b97\u6bcf\u4e2a\u70b9\u7684\u6781\u89d2\uff08\u9ed1\u79d1\u6280\uff1aatan2\uff08y,x\uff09\u5373\u53ef\u5b9e\u73b0\uff09\n        \u518d\u6309\u7167\u6781\u89d2\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u9006\u65f6\u9488\u626b\u63cf\u6bcf\u4e00\u4e2a\u70b9\n        \u6211\u4eec\u518d\u53bb\u7ef4\u62a4\u4e00\u4e2a\u6808\uff0c\u8fd9\u4e2a\u6808\u91cc\u653e\u7684\u5c31\u662f\u7ecf\u8fc7\u6211\u4eec\u5224\u65ad\u7684\u5408\u6cd5\u7684\u70b9\n        \u6211\u4eec\u8981\u505a\u7684\uff0c\u5c31\u662f\u6bcf\u626b\u5230\u4e00\u4e2a\u65b0\u70b9\uff0c\u5c31\u53bb\u7528\u8fd9\u4e2a\u65b0\u70b9\u5224\u65ad\u6808\u9876\u7684\u70b9\n        \u662f\u5426\u9700\u8981\u51fa\u6808\uff08\u5408\u6cd5\uff09\uff0c\uff08\u8fd9\u5c31\u8981\u7528\u5230\u53c9\u79ef\u7684\u77e5\u8bc6\u4e86\u54e6\uff09\uff1b\n        \u6700\u540e\u518d\u628a\u6808\u5185\u7684\u70b9\u5168\u90e8\u626b\u4e00\u904d\u8ba1\u7b97\u8ddd\u79bb\u5c31\u53ef\u4ee5\u5566\uff01\n        \u54e6\u5bf9\u4e86 \u8fd8\u6709\u8981\u6ce8\u610f\u7684\u5c31\u662f\uff0c\u9700\u8981\u4fdd\u8bc1\u6808\u5185\u5143\u7d20\u4e0d\u5c11\u4e8e3\u4e2a\n        \uff08\u4e3a\u4ec0\u4e48\u81ea\u5df1\u60f3\u4e00\u60f3\u5427=.=\uff09\n```cpp\n\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#define cq(i,s,n) for(int i=s;i<=n;i++)\nusing namespace std;\nstruct node{\n\tdouble x,y,p;    \n\tnode(double x=0,double y=0):x(x),y(y){}\n\tfriend node operator-(const node&a,const node&b){return node(a.x-b.x,a.y-b.y);}\n\tfriend double operator ^(node a,node b){return a.x*b.y-b.x*a.y;} \n}a[50005];\nint n;\nint top;\ndouble ans;\nint s[50005];\nbool cmp(node a,node b){\n\treturn a.p<b.p;\n}\ndouble f(node a,node b){\n\treturn sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tint zz=1; \n\tcq(i,1,n){\n\t\tscanf(\"%lf%lf\",&a[i].x,&a[i].y);\n\t\tif(a[i].y<a[zz].y||(a[i].y==a[zz].y&&a[i].x<a[zz].x)){\n\t\t\tzz=i;\n\t\t}\n\t}\n\tswap(a[1],a[zz]);\n\tcq(i,2,n){\n\t\ta[i].x-=a[1].x;\n\t\ta[i].y-=a[1].y;\n\t\ta[i].p=atan2(a[i].y,a[i].x);\n\t}\n\tsort(a+2,a+1+n,cmp);\n\ta[1].x=0;\n\ta[1].y=0;\n\ts[1]=1;\n\ts[2]=2;\n\ts[3]=3;\n\ttop=3;\n\tcq(i,4,n){\n\t\twhile(top>=3&&((a[s[top]]-a[s[top-1]])^(a[i]-a[s[top]]))<0){\n\t\t\ttop--;\n\t\t}\n\t\ts[++top]=i;\n\t}\n\tcq(i,1,top-1){\n//\t\tprintf(\"%d %d %d\\n\",a[s[i]].x,a[s[i]].y,a[s[i]].p);\n//\t\tprintf(\"%d\\n\",s[i]);\n\t\tans+=f(a[s[i]],a[s[i+1]]);\n\t}\n\tans+=f(a[n],a[1]);\n\tprintf(\"%.2lf\\n\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1534158800,
        "uid": 87942,
        "name": "w_x_c_q",
        "ccfLevel": 0,
        "title": "P2742 \u3010\u6a21\u677f\u3011\u4e8c\u7ef4\u51f8\u5305 / [USACO5.1]\u5708\u5976\u725bFencing the Cows"
    },
    {
        "content": "\u7ed9\u51fa\u4e00\u79cd\u5b89\u5168\u7684\u6c42\u51f8\u5305\u7684\u65b9\u6cd5\u3002\n\n\u5047\u5b9a\u90fd\u4f1a `Graham\u7b97\u6cd5`\uff0c\u5728\u70b9\u6392\u5e8f\u4ee5\u53ca\u8dd1\u51f8\u5305\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5bb9\u6613\u51fa\u73b0\u4e0e x \u6216 y \u5750\u6807\u76f8\u540c\u7684\u70b9\uff0c\u6b64\u65f6\u4f1a\u8ba9\u4eba\u7ea0\u7ed3\u5904\u7406\u65b9\u6cd5\uff0c\u4e0d\u5f53\u5904\u7406\u53ef\u80fd\u5bfc\u81f4\u66f4\u590d\u6742\u7684\u95ee\u9898\u51fa\u9519\u3002\n\n\u89e3\u51b3\u65b9\u6cd5\u4e3a\uff0c\u7ed9\u6240\u6709\u70b9\u7edf\u4e00\u65cb\u8f6c\u4e00\u4e2a\u968f\u673a\u89d2\u5ea6\uff0c\u6c42\u5b8c\u51f8\u5305\u540e\u518d\u65cb\u8f6c\u56de\u6765\u5373\u53ef\u3002\n\n```cpp\n/* Header {{{ */\n#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long readtype;\ntypedef long long var;\ntypedef long double let;\n\nreadtype read() {\n  readtype a = 0, c = getchar(), s = 0;\n  while (!isdigit(c)) s |= c == '-', c = getchar();\n  while (isdigit(c)) a = a * 10 + c - 48, c = getchar();\n  return s ? -a : a;\n}\n\n#ifdef LOCAL_LOGGER\n#define logger(...) fprintf(stderr, __VA_ARGS__)\n#define abortif(v, ...) if (v) {logger(\"Error in Line %d, Function '%s()'.\\nInfo: \", __LINE__, __FUNCTION__); logger(__VA_ARGS__); exit(0);}\n#else\n#define logger(...);\n#define abortif(v, ...);\n#endif\n/* }}} */\n\nconst int N = 1e5 + 1;\nconst let EPS = 1e-8;\nconst let Pi = acos(-1.0);\n\nstruct Point {\n  let x, y;\n  friend Point operator - (Point a, Point b) {\n    return (Point) {a.x - b.x, a.y - b.y};\n  }\n  friend let Cdot(Point a, Point b) {\n    return a.x * b.x + a.y * b.y;\n  }\n  friend let Times(Point a, Point b) {\n    return a.x * b.y - a.y * b.x; \n  }\n  let Dist() {\n    return sqrt(x * x + y * y);\n  }\n  Point Rotate(let k) {\n    Point kp = (Point) {sin(k), cos(k)};\n    return (Point) {Times(*this, kp), Cdot(*this, kp)};\n  }\n};\ntypedef Point Vec;\n\nint sign(let x) {\n  if (x > EPS) return 1;\n  if (x < -EPS) return -1;\n  return 0;\n}\n\nbool CampByXY(Point a, Point b) {\n  if (sign(a.x - b.x) == 0) return sign(a.y - b.y) < 0;\n  return sign(a.x - b.x) < 0;\n}\n\nclass Geometry {\n  protected:\n    int cnt, sta[N];\n    Point tmp[N];\n\n  public:\n    void GetConvexHull(int n, Point *point, int &len, Point *res) {\n      sort(point + 1, point + n + 1, CampByXY);\n      sta[cnt = 1] = 1;\n      for (int i = 2; i <= n; ++i) {\n        while (cnt > 1 && Times(\n              point[sta[cnt]] - point[sta[cnt - 1]],\n              point[i] - point[sta[cnt]]\n              ) < 0) cnt--;\n        sta[++cnt] = i;\n      }\n      int down_hull_cnt = cnt;\n      for (int i = n - 1; i >= 1; --i) {\n        while (cnt > down_hull_cnt && Times(\n              point[sta[cnt]] - point[sta[cnt - 1]],\n              point[i] - point[sta[cnt]]\n              ) < 0) cnt--;\n        sta[++cnt] = i;\n      }\n      len = cnt;\n      for (int i = 1; i <= len; ++i) \n        res[i] = point[sta[i]];\n    }\n    void GetCH(int n, Point *point, int &len, Point *res) {\n      GetConvexHull(n, point, len, res);\n    }\n    void SafeGetCH(int n, Point *point, int &len, Point *res) {\n      let angle = ((let) rand() / RAND_MAX) * Pi;\n      for (int i = 1; i <= n; ++i) tmp[i] = point[i].Rotate(angle);\n      GetConvexHull(n, tmp, len, res);\n      for (int i = 1; i <= n; ++i) res[i] = res[i].Rotate(-angle);\n    }\n} geometry;\n\nint n, m;\nPoint origin[N], hull[N];\n\nint main() {\n#ifndef ONLINE_JUDGE\n  freopen(\"P2742.in\", \"r\", stdin);\n  freopen(\"P2742.out\", \"w\", stdout);\n#endif\n#ifdef LOCAL_LOGGER\n  freopen(\"P2742.log\", \"w\", stderr);\n#endif\n  n = read();\n  for (int i = 1; i <= n; ++i)\n    scanf(\"%Lf%Lf\", &origin[i].x, &origin[i].y);\n  geometry.SafeGetCH(n, origin, m, hull);\n  let res = (hull[1] - hull[m]).Dist();\n  for (int i = 2; i <= m; ++i)\n    res += (hull[i] - hull[i - 1]).Dist();\n  printf(\"%.2Lf\\n\", res);\n  return 0;\n}\n\n/* ==== Makefile ==== {{{\nCompileAndRun:\n\tmake Compile\n\tmake Run\n\nCompile:\n\tg++ -o P2742 P2742.cpp -g -Wall -DLOCAL_LOGGER\n\nCompileUF:\n\tg++ -o P2742 P2742.cpp -g -Wall -DLOCAL_LOGGER -fsanitize=undefined\n\nRun:\n\t./P2742 < P2742.in > P2742.out\n==================\n}}} */\n```",
        "postTime": 1596446510,
        "uid": 20522,
        "name": "ccviolett",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2742 \u3010[USACO5.1]\u5708\u5976\u725bFencing the Cows /\u3010\u6a21\u677f\u3011\u4e8c\u7ef4\u51f8\u5305\u3011"
    },
    {
        "content": "\u5c31 \u4e0d \u60f3 \u7528 \u666e \u901a \u7b97 \u6cd5\n\n\u8003\u8651\u7528\u5e73\u8861\u6811\u7ef4\u62a4\u51f8\u5305\u4e0a\u7684\u70b9\uff0c\u7c7b\u4f3c\u4e8e\u5b8c\u5168\u52a8\u6001\u659c\u7387\u4f18\u5316\u7684\u7ef4\u62a4\u51f8\u5305\u65b9\u6cd5\u3002\u5e73\u8861\u6811\u9700\u8981\u6309 x \u8f74\u9012\u589e\u987a\u5e8f\u7ef4\u62a4\u6240\u6709\u5728\u51f8\u5305\u4e0a\u9762\u7684\u70b9\uff0c\u7136\u540e\u52a0\u5165\u70b9\u7684\u65f6\u5019\uff0c\u9700\u8981\u5224\u65ad\u8fd9\u4e2a\u70b9\u7684\u5de6\uff0c\u53f3\u8fb9\u4f1a\u4e0d\u4f1a\u8fdd\u53cd\u51f8\u5305\u6027\u8d28\uff0c\u5e76\u4e14\u4fee\u6b63\u51f8\u5305\u3002\n\n\u4e3a\u4e86\u4fdd\u8bc1\u4e0d\u4f1a\u51fa\u73b0\u4e24\u4e2a\u70b9\u5f62\u6210\u4e00\u4e2a\u7ad6\u7ebf\uff0c\u6240\u6709\u70b9\u7684 x \u503c\u90fd\u52a0\u4e0a\u4e00\u4e2a\u968f\u673a\u5c0f\u6570\u5728 $[-0.00001,0.00001]$ \u91cc\u9762\u3002\n\n\u7528\u4e24\u4e2a\u5e73\u8861\u6811\u7ef4\u62a4\u4e0a\u51f8\u5305\u4e0e\u4e0b\u51f8\u5305\uff0c\u7136\u540e\u628a\u8fd9\u4e9b\u70b9\u6309\u7167\u76f8\u5bf9\u539f\u70b9\u7684\u89d2\u5ea6\u6392\u5e8f\uff0c\u6309\u8fd9\u4e2a\u987a\u5e8f\u8ba1\u7b97\u5468\u957f\u3002\u5176\u5b9e\u6211\u63d0\u4ea4\u5b8c\u624d\u53d1\u73b0\u4e0d\u5e94\u8be5\u6309\u5bf9\u539f\u70b9\u89d2\u5ea6\u6392\u5e8f\uff0c\u5e94\u4e3a\u539f\u70b9\u4e0d\u4e00\u5b9a\u5728\u51f8\u5305\u91cc\u9762\uff0c\u4f46\u662f\u770b\u7684\u50cf\u6570\u636e\u592a\u5f31\u3002\u3002\u3002\u987a\u4fbf\u5410\u69fd\u4e00\u4e0b\u6570\u636e\n\n\u7b2c\u4e8c\uff0c\u8fd9\u9053\u9898\u76ee\u4e0d\u5fc5\u8981\u7528\u5e73\u8861\u6811\uff08set \u591f\u4e86\uff09\u4f46\u662f\u5e94\u4e3a\u6211\u590d\u5236\u4e86\u6211\u7684\u659c\u7387\u4f18\u5316\u677f\u5b50\u6211\u5c31\u61d2\u5f97\u6539\uff0c\u8fd8\u7528\u7684\u5e38\u6570\u5de8\u7684 pbds\uff08\u9003\n\n\u4ee3\u7801\uff1a\n\n```cpp\n/*\nTASK: fc\nID: qlstudi3\nLANG: C++14\n*/\n// writer: w33z8kqrqk8zzzx33\n#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace std;\nusing namespace __gnu_pbds;\ntemplate<typename T>\nusing ordered_set=tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\n\n// begin fast read template by CYJian (source: https://www.luogu.com.cn/paste/i11c3ppx)\n\nnamespace io {\n\tconst int __SIZE = (1 << 21) + 1;\n\tchar ibuf[__SIZE], *iS, *iT, obuf[__SIZE], *oS = obuf, *oT = oS + __SIZE - 1, __c, qu[55]; int __f, qr, _eof;\n\t#define Gc() (iS == iT ? (iT = (iS = ibuf) + fread (ibuf, 1, __SIZE, stdin), (iS == iT ? EOF : *iS ++)) : *iS ++)\n\tinline void flush () { fwrite (obuf, 1, oS - obuf, stdout), oS = obuf; }\n\tinline void gc (char &x) { x = Gc(); }\n\tinline void pc (char x) { *oS ++ = x; if (oS == oT) flush (); }\n\tinline void pstr (const char *s) { int __len = strlen(s); for (__f = 0; __f < __len; ++__f) pc (s[__f]); }\n\tinline void gstr (char *s) { for(__c = Gc(); __c < 32 || __c > 126 || __c == ' ';)  __c = Gc();\n\t\tfor(; __c > 31 && __c < 127 && __c != ' '; ++s, __c = Gc()) *s = __c; *s = 0; }\n\ttemplate <class I> inline bool gi (I &x) { _eof = 0;\n\t\tfor (__f = 1, __c = Gc(); (__c < '0' || __c > '9') && !_eof; __c = Gc()) { if (__c == '-') __f = -1; _eof |= __c == EOF; }\n\t\tfor (x = 0; __c <= '9' && __c >= '0' && !_eof; __c = Gc()) x = x * 10 + (__c & 15), _eof |= __c == EOF; x *= __f; return !_eof; }\n\ttemplate <class I> inline void print (I x) { if (!x) pc ('0'); if (x < 0) pc ('-'), x = -x;\n\t\twhile (x) qu[++ qr] = x % 10 + '0',  x /= 10; while (qr) pc (qu[qr --]); }\n\tstruct Flusher_ {~Flusher_(){flush();}}io_flusher_;\n} using io::pc; using io::gc; using io::pstr; using io::gstr; using io::gi; using io::print;\n\n// end fast read template by CYJian\n\n#define iter(i, a, b) for(int i=(a); i<(b); i++)\n#define rep(i, a) iter(i, 0, a)\n#define rep1(i, a) iter(i, 1, (a)+1)\n#define log(a) cerr<<\"\\033[32m[DEBUG] \"<<#a<<'='<<(a)<<\" @ line \"<<__LINE__<<\"\\033[0m\"<<endl\n#define all(a) a.begin(), a.end()\n#define fi first\n#define se second\n#define pb push_back\n#define mp make_pair\n \nusing ll=long long;\nusing pii=pair<int, int>;\n//#define int ll\nconst int MOD = 1000000007;\n\nusing po=pair<double, double>;\n\n#define fbo find_by_order\n\nclass CHS {\npublic:\n\ttree<po, null_type, less<po>, rb_tree_tag, tree_order_statistics_node_update> points;\n\tvoid insert(const double& m, const double& b) {\n\t\tpo i = {m, b};\n\t\tif(points.find(i) != points.end()) return;\n\t\tpoints.insert(i); int rank = points.order_of_key(i);\n\t\tvector<po> remove; int lef = rank-1, rig = rank+1;\n\t\tif(0 <= lef && rig < points.size()) {\n\t\t\tconst po& A = *points.fbo(lef);\n\t\t\tconst po& B = *points.fbo(rig);\n\t\t\tif((A.se-i.se)/(A.fi-i.fi) <= (i.se-B.se)/(i.fi-B.fi)) {\n\t\t\t\tpoints.erase(i);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\twhile(0 < lef) {\n\t\t\tconst po& A = *points.fbo(lef-1);\n\t\t\tconst po& B = *points.fbo(lef);\n\t\t\tif(!((A.se-B.se)/(A.fi-B.fi) <= (B.se-i.se)/(B.fi-i.fi))) break;\n\t\t\tremove.push_back(*points.fbo(lef--));\n\t\t}\n\t\twhile(rig < points.size()-1) {\n\t\t\tconst po& A = *points.fbo(rig);\n\t\t\tconst po& B = *points.fbo(rig+1);\n\t\t\tif(!((i.se-A.se)/(i.fi-A.fi) <= (A.se-B.se)/(A.fi-B.fi))) break;\n\t\t\tremove.push_back(*points.fbo(rig++));\n\t\t}\n\t\tfor(po& p:remove) points.erase(p);\n\t}\n};\n\nCHS upper;\nCHS lower;\n\nmt19937 rng;\n\nuniform_real_distribution<double> dist(-0.00001, 0.00001);\n\nstruct po2 {\n\tdouble x, y;\n\tconst bool operator<(const po2& b) const {\n\t\treturn atan2(y, x) < atan2(b.y, b.x);\n\t}\n};\n\nset<po2> st;\n\n#ifndef local\nifstream __fin(\"fc.in\");\nofstream __fout(\"fc.out\");\n#define cin __fin\n#define cout __fout\n#endif\n\nsigned main() {\n    ios_base::sync_with_stdio(false); cin.tie(0);\n    int n; cin >> n;\n\tif(n == 0 || n == 1) {\n\t\tcout << \"0.00\" << endl;\n\t\treturn 0;\n\t}\n\tdefault_random_engine dre(chrono::system_clock::now().time_since_epoch().count());\n\trep(i, n) {\n\t\tdouble x, y; cin >> x >> y;\n\t\tx *= 10; y *= 10;\n\t\tx += dist(dre);\n\t\tupper.insert(x, y);\n\t\tlower.insert(-x, -y);\n\t}\n\tfor(const po& p:upper.points)\n\t\tst.insert({p.fi/10, p.se/10});\n\tfor(const po& p:lower.points) \n\t\tst.insert({-p.fi/10, -p.se/10});\n\tpo prev(-1000006, -1000006);\n\tdouble ans = 0;\n\tfor(const po2& p:st) {\n\t\tif(prev.fi >= -1000000) ans += sqrt((p.x-prev.fi)*(p.x-prev.fi) + (p.y-prev.se)*(p.y-prev.se));\n\t\tprev.fi = p.x; prev.se = p.y;\n\t}\n\tans += sqrt((st.begin()->x-prev.fi)*(st.begin()->x-prev.fi) + (st.begin()->y-prev.se)*(st.begin()->y-prev.se));\n\tcout << setprecision(2) << fixed << ans << endl;\n}\n\n```",
        "postTime": 1586172412,
        "uid": 220037,
        "name": "w33z8kqrqk8zzzx33",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2742"
    },
    {
        "content": "\n[\u66f4\u4e0d\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://zsx6.com/2019/12/20/%E6%95%B0%E5%AD%A6/)\n\n## \u51f8\u5305\n\n[\u4e00\u9053\u6a21\u677f\u9898](https://www.luogu.com.cn/problem/P2742)\n\n\u9996\u5148\u51f8\u5305\u7684\u5b9a\u4e49:\n\n> \u7528\u4e0d\u4e25\u8c28\u7684\u8bdd\u6765\u8bb2\uff0c\u7ed9\u5b9a\u4e8c\u7ef4\u5e73\u9762\u4e0a\u7684\u70b9\u96c6\uff0c\u51f8\u5305\u5c31\u662f\u5c06\u6700\u5916\u5c42\u7684\u70b9\u8fde\u63a5\u8d77\u6765\u6784\u6210\u7684[\u51f8\u591a\u8fb9\u5f62](https://baike.baidu.com/item/\u51f8\u591a\u8fb9\u5f62/6608474)\uff0c\u5b83\u80fd\u5305\u542b\u70b9\u96c6\u4e2d\u6240\u6709\u7684\u70b9\u3002 \n\n\uff08\u767e\u5ea6\u767e\u79d1\u7ed9\u7684\u89e3\u91ca\uff09\n\n\u56e0\u6b64\u4ee5\u4e0b\u5c31\u53ef\u4ee5\u7b97\u662f\u4e00\u4e2a\u51f8\u5305\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/9ic2wl65.png)\n\n\n\n\u6c42\u6cd5\u6709\u4e24\u4e2a\n\n### \u6c42\u6cd5 1\n\n\u7b2c\u4e00\u4e2a\u662f\u628a\u51f8\u5305\u5206\u4e3a\u4e0a\u4e0b\u4e24\u90e8\u5206\uff0c\u5bf9\u4e8e\u4e0b\u534a\u90e8\u5206\u4e0d\u96be\u53d1\u73b0\u659c\u7387\u662f\u5728\u9012\u589e\u7684\uff0c\u56e0\u6b64\u8003\u8651\u5148\u7ed9\u6240\u6709\u70b9\u6309\u7167\u4ece\u5de6\u5230\u53f3\u4ece\u4e0b\u5230\u4e0a\u6392\u5e8f\uff0c\u7136\u540e\u7c7b\u4f3c\u4e8e\u5355\u8c03\u6808\u7ef4\u62a4\u4e00\u4e2a\u659c\u7387\u3002\n\n\u7136\u540e\u4f2a\u4ee3\u7801\u5927\u6982\u5c31\u957f\u8fd9\u6837\n\n```cpp\n\tfor(i=1;i<=n;i++)\n\t{\n\t\ts[++size]=p[i];\n\t\twhile(size>=3&&getk(s[size-2],s[size])<getk(s[size-2],s[size-1])) s[size-1]=s[size],size--;\n\t}\n```\n\n$getk(node~~a,node~~b)$ \u662f\u6c42AB\u6240\u5728\u76f4\u7ebf\u659c\u7387\uff0c\u7279\u522b\u6ce8\u610fA,B\u76f8\u7b49\u7684\u65f6\u5019\u8fd4\u56de\u4e00\u4e2a\u6781\u5927\u503c\u3002\n\n\u5bf9\u4e8e\u4e0a\u534a\u90e8\u5206\u51f8\u5305\uff0c\u53ea\u9700\u8981\u4ece\u53f3\u5411\u5de6\u679a\u4e3e\u5373\u53ef\u3002\n\n### \u6c42\u6cd52\n\n\u4e0a\u9762\u7684\u6c42\u6cd5\u4e0d\u9700\u8981\u9ad8\u4e2d\u6570\u5b66\u529f\u5e95~~\u56e0\u6b64\u53ef\u89c1\u53ea\u80fd\u89e3\u51b3\u8f83\u7b80\u5355\u7684\u95ee\u9898~~\u5bf9\u4e8e\u6bd4\u8f83\u6bd2\u7624\u7684\u95ee\u9898\uff0c\u8fd9\u6837\u8fdb\u4e00\u6b65\u5199\u4e0b\u53bb\u5c31\u5f88\u9ebb\u70e6\uff0c\u6240\u4ee5\u8003\u8651\u6c42\u6cd52\n\n#### \u5c31\u662fGraham\u626b\u63cf\u6cd5\n\n\u9996\u5148\u524d\u7f6e\u829d\u58eb\n\n#### 1.\u6781\u89d2\u6392\u5e8f\n\n\u8fd9\u91cc\u53ea\u4ecb\u7ecd\u6309\u7167atan2\u7684\u65b9\u6cd5\u3002\n\n`atan2(x,y)` \u5373\u8fd4\u56de$tan \\alpha =\\frac{x}{y}$  \u7684$\\alpha$\u540c\u65f6$\\alpha \\in [-\\pi,\\pi]$\n\n\u4f8b\u5982\u6211\u4eec\u4ee5\u5de6\u4e0b\u89d2E(\u4f18\u5148\u8003\u8651\u6700\u4e0b)\u70b9\u5bf9\u8fd9\u4e9b\u70b9\u6781\u89d2\u6392\u5e8f\uff0c\u663e\u7136\u53ef\u89c1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/njo5egp7.png)\n\nABCDEFG\u7684\u5750\u6807\uff1a\n\n>7\n\n>-1.56 -1.11\n\n>1.68 -1.63\n\n>2.12 2.29\n\n>-2 1\n\n>-2.66 -3.87\n\n>2.46 -3.39\n\n>-4.7 -1.73 \n\n\u6392\u5e8f\u7684\u7ed3\u679c\u662f\u8fd9\u6837\u7684\uff08FBCADG)\u53ef\u4ee5\u7406\u89e3\u4e3a\u4ece0\u5ea6\u9006\u65f6\u9488\u626b\u4e00\u5708\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/6mqgfmct.png)\n\n *atan2 \uff08x,y\uff09\u5f53y=0\u65f6\uff0c$tan\\alpha$\u4e0d\u5b58\u5728 \u8fd4\u56de 0 \u4f46\u662fx=0\u7684\u65f6\u5019\u8fd4\u56de-1*\n\n#### 2.\u53c9\u79ef\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/v7xbhjgh.png)\n\n\u5982\u56fe\u6240\u793a$\\vec p_1 * \\vec p_2$\u5373\u4e3a\u5e73\u884c\u56db\u8fb9\u5f62\u9762\u79ef\n\n\u516c\u5f0f $\\vec p_1 * \\vec p_2 = x1y2-x2y1$\n\n\u539f\u7406\u53ef\u4ee5\u53c2\u8003\u4e0b\u9762\u8fd9\u5f20\u51fa\uff0c\u51fa\u5904\u5927\u6982\u5728[\u8fd9\u91cc](http://www.matrix67.com/blog/archives/6217)\uff0c\u7531\u4e8e\u56fe\u7247\u52a0\u8f7d\u592a\u6162\u6211\u653e\u5728\u56fe\u5e8a\u4e0a\u9762\u4e86\n\n![](https://s2.ax1x.com/2019/12/20/QXJIOK.gif)\n\n\n\n*\u540c\u65f6\u56db\u8fb9\u5f62\u9762\u79ef\u5927\u4e8e0\u8bf4\u660ep2\u5728p1\u987a\u65f6\u9488\u65b9\u5411\uff0c\u5982\u679c==0\u91cd\u5408\uff0c\u5982\u679c\u5c0f\u4e8e0\u5c31\u8bf4\u660e\u5728\u9006\u65f6\u9488\u65b9\u5411*\n\n \n\n\u7b97\u53c9\u79ef\u7684\u65f6\u5019\u53ef\u4ee5\u7528\u8fd9\u4e2a\u516c\u5f0f\n\n$(b_x-a_x)*(c_y-a_y)-(b_y-a_y)*(c_x-a_x)$\n\n$=(a_xb_y-b_xa_y)+(b_xc_y-c_xb_y)+(c_xa_y-a_xc_y)$\n\n$=\\vec a*\\vec b~+\\vec b*\\vec c ~+ \\vec c*\\vec a$\n\nc\u5982\u679c\u5728a\u53f3\u8fb9\u7684\u8bdd\uff0c$\\vec c*\\vec a$ \u9762\u79ef\u5c31\u662f\u5c0f\u4e8e0\u7684\n\n\u540c\u7406\uff0c\u5982\u679c\u4e0a\u9762\u7684\u5f0f\u5b50\u5927\u4e8e0\uff0c\u5c31\u8bf4\u660ec\u4e0d\u5728\u51f8\u5305\u91cc\u9762\u3002\n\n\u5982\u4e0b\u56fe\u6240\u793a\n\n\u521a\u5f00\u59cbd,b\u5728\u6808\u91cc\u9762\uff0c\u6b64\u65f6\u6bd4\u8f83(d,c,b)\uff0c\u53d1\u73b0>0\u5219c\u5165\u6808\n\n\u540c\u7406\u5bf9\u4e8ed\uff0c\u6bd4\u8f83(b,d,c)\u4e5f\u5927\u4e8e0\uff0c\u5165\u6808\n\n\u8fd0\u884c\u5b8c\u6bd5\uff0c\u53d1\u73b0$O\\to b \\to c \\to d \\to O$\u5c31\u662f\u51f8\u5305\u3002\n\n*\u5bf9\u4e8e\u5c0f\u4e8eO\u7684\u60c5\u51b5\u7684\u89e3\u91ca\uff1a*\n\n> \u4f8b\u5982 b,c,N\u4e09\u4e2a\u70b9\uff0c\u6309\u7167\u6781\u89d2\u6392\u5e8f\uff0c\u5c31\u662fb,c,N,\u73b0\u5728\u6211\u4eec\u5047\u8bbeb,c\u5728\u6808\u91cc\u9762\uff0c\u5c31\u8981\u6bd4\u8f83(b,N,c),\u6b64\u65f6\u5c0f\u4e8e0\uff0c\u5373c\u5e76\u4e0d\u5728\u51f8\u5305\u4e0a\uff08N\u53d6\u4ee3\u4e86\u4ed6\u7684\u4f4d\u7f6e)\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/fo1pjm9x.png)\n\n\u5b9e\u9645\u4e0a\u63a8\u5b8c\u4e86\u4e0a\u9762\u7684\u4e1c\u897f\uff0c\u4f60\u5c31\u80fd\u5199\u51fa\u6765\u4ee3\u7801\u4e86.\n\n```cpp\n#include<touwenjian.h>\n\nusing namespace std;\n\nconst double eps=1e-3;\n\nint n,m,size;\ndouble ans;\n\nstruct node{\n\tdouble x,y;\n}p[200200],s[200200];\n\ninline int cmp(node a,node b)\n{\n\tdouble k1,k2;\n\tk1=atan2((a.y-p[1].y),(a.x-p[1].x));   \n\tk2=atan2((b.y-p[1].y),(b.x-p[1].x));\n\tif(k1!=k2) return k1<k2;\n\treturn a.x<b.x;\n}\n\ninline double getdis(node a,node b)\n{\n\treturn sqrt(1.0*(a.x-b.x)*(a.x-b.x)+1.0*(a.y-b.y)*(a.y-b.y));  //\u4e0a\u9762\u8bb2\u7684\u5f88\u6e05\u695a\u4e86 \n}\n\ninline double getcj(node a,node b,node c)\n{\n \treturn 1ll*(b.x-a.x)*(c.y-a.y)-1ll*(b.y-a.y)*(c.x-a.x);\n}\n \ninline int bj(node a,node b)\n{\n\treturn (a.y>b.y||(a.y==b.y)&&(a.x>b.x));\n}\n\nvoid gettb()\n{\n \tp[0].x=p[0].y=0x3f3f3f3f;\n \tregister int i,j;\n \tfor(i=1;i<=n;i++)\n \t{\n \t\tif(bj(p[0],p[i])) p[0]=p[i],j=i;  //\u627e\u5230\u6700\u5c0f\u8fb9\u7684\u70b9\uff0c\u5e76\u4e14\u628a\u4ed6\u653e\u5230\u7b2c\u4e00\u4f4d \n\t}\n\tswap(p[j],p[1]);\n\tsort(p+2,p+n+1,cmp);  //\u5bf9\u540e\u9762\u7684\u70b9\u6781\u70b9\u6392\u5e8f \n\ts[++size]=p[1];s[++size]=p[2];  //\u8ba9\u524d\u4e24\u4e2a\u70b9\u5165\u6808\uff08\u4ed6\u4eec\u4e00\u5b9a\u662f\u5728\u51f8\u5305\u4e0a\uff09 \n\tfor(i=3;i<=n;)\n\t{\n\t\tif(size>=2&&getcj(s[size-1],p[i],s[size])>=0) size--;  //\u5c31\u662f\u4e0a\u9762\u8bf4\u7684 \n\t\telse s[++size]=p[i++];\n\t}\n\ts[0]=s[size];  //\u8bb0\u5f97\u51f8\u5305\u8981\u9996\u5c3e\u76f8\u8fde \n\tfor(i=1;i<=size;i++) ans+=getdis(s[i-1],s[i]); //\u7b97\u8ddd\u79bb\u5373\u53ef \n}\n\nint main()\n{\n\tregister int i,j;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++) scanf(\"%lf %lf\",&p[i].x,&p[i].y);\n\tgettb();\n\tprintf(\"%.2lf\",ans);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1576918951,
        "uid": 38636,
        "name": "\u5bd2\u51b0\u5927\u5927",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2742 \u3010\u3010\u6a21\u677f\u3011\u4e8c\u7ef4\u51f8\u5305 / [USACO5.1]\u5708\u5976\u725bFencing the Cows\u3011"
    },
    {
        "content": "\u9759\u6001\u4e8c\u7ef4\u51f8\u5305\u6c42\u5468\u957f\n\n\u6211\u4eec\u7684\u529e\u6cd5\u662f\u5206\u522b\u7ef4\u62a4\u4e0a\u51f8\u58f3\u548c\u4e0b\u51f8\u58f3\uff0c\u6700\u540e\u7edf\u8ba1\u5468\u957f\n\n\u600e\u4e48\u7ef4\u62a4\uff1f\n\n\u4ee5\u6837\u4f8b\u4e3a\u4f8b\u3002\n\n\u5bf9\u6bcf\u4e2a\u70b9\u6392\u5e8f\uff0c\u6a2a\u5750\u6807\u5c0f\u7684\u5728\u524d\uff0c\u6a2a\u5750\u6807\u4e00\u6837\u7684\u7eb5\u5750\u6807\u5c0f\u7684\u5728\u524d\u3002\n\n\u8fd9\u6837\u6837\u4f8b\u5c31\u53d8\u6210\u4e86\n```pascal\n4 8\n4 12\n5 9.3\n7 8\n```\n~~\u597d\u50cf\u4ec0\u4e48\u90fd\u6ca1\u6709\u53d8~~\n\n\u6211\u4eec\u6765\u624b\u73a9\u4e00\u4e0b\u4e0b\u51f8\u58f3\n\n**\u70b9(4,8)**\uff1a\u8fdb\u6808\n\n**\u70b9(4,12)**\uff1a\u8fdb\u6808\n\n**\u70b9(5,9.3)**:\n\n\u76f4\u7ebf(4,8)(5,9.3)\u7684\u659c\u7387\u6bd4\u76f4\u7ebf(4,12)(5,9.3)\u7684\u659c\u7387\u5c0f\uff0c\u70b9(4,12)\u51fa\u6808\n\n\u70b9(5,9.3)\u8fdb\u6808\n\n**\u70b9(7,8)**:\n\n\u76f4\u7ebf(4,8)(7,8)\u7684\u659c\u7387\u6bd4\u76f4\u7ebf(5,9.3\uff09(7,8)\u7684\u659c\u7387\u5c0f\uff0c\u70b9(5,9.3)\u51fa\u6808\n\n\u73b0\u5728\u6808\u5185\u6709(4,8)(7,8)\u4e24\u4e2a\u70b9\n\n\u6211\u4eec\u8ba9ans\u52a0\u4e0a\u6808\u5185\u76f8\u90bb\u70b9\u95f4\u8ddd\u79bb\uff0c\u8fd9\u6837\u5c31\u7edf\u8ba1\u5b8c\u4e0b\u51f8\u58f3\u4e86\n\n\u4e0a\u51f8\u58f3\u7684\u505a\u6cd5\u7c7b\u4f3c\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#include<iostream>\n#include<cstdio>\n#define ll long long\n#define INF 2147483647\n#define eps 1e-8\nusing namespace std;\n\ndouble ans;\nll n,top,st[10010];\nstruct node{\n\tdouble x,y;\n}a[10010];\n\ninline bool cmp(node a,node b){\n\treturn a.x==b.x?a.y<b.y:a.x<b.x;\n}\n\ninline double getk(ll i,ll j){\n\tif(fabs(a[j].x-a[i].x)<eps) return INF;//\u4e24\u4e2a\u70b9\u6a2a\u5750\u6807\u76f8\u540c\u5219\u659c\u7387\u4e3a\u65e0\u9650\u5927\n\treturn (a[j].y-a[i].y)*1.0/(a[j].x-a[i].x);\n}\n\ninline double sqr(double v){\n\treturn v*v;\n}\n\ninline double calc(ll i,ll j){\n\treturn sqrt(sqr(a[i].x-a[j].x)+sqr(a[i].y-a[j].y));\n}\n\nint main(){\n\tscanf(\"%lld\",&n);\n\tfor(ll i=1; i<=n; i++) scanf(\"%lf %lf\",&a[i].x,&a[i].y);\n\tsort(a+1,a+1+n,cmp);\n\tfor(ll i=1; i<=n; i++){\n\t\tst[++top]=i;\n\t\twhile(top>=3&&getk(st[top-2],st[top])<getk(st[top-2],st[top-1])-eps){\n\t\t\tst[top-1]=st[top];\n\t\t\tst[top--]=0;\n\t\t\t//\u6808\u4e2d\u7b2c\u4e8c\u4e2a\u5143\u7d20\u51fa\u6808\n\t\t}\n\t}\n\tfor(ll i=1; i<top; i++) ans+=calc(st[i],st[i+1]);\n\twhile(top) st[top--]=0;\n    \n\t//\u540c\u7406\n\tfor(ll i=n; i>=1; i--){\n\t\tst[++top]=i;\n\t\twhile(top>=3&&getk(st[top-2],st[top])<getk(st[top-2],st[top-1])-eps){//\u8981\u6c42\uff1a\u6808\u4e2d\u81f3\u5c11\u8fd8\u6709\u4e09\u4e2a\u5143\u7d20\u5e76\u4e14\u659c\u7387\u7b26\u5408\u8981\u6c42\n\t\t\tst[top-1]=st[top];\n\t\t\tst[top--]=0;\n\t\t}\n\t}\n\tfor(ll i=1; i<top; i++) ans+=calc(st[i],st[i+1]);\n\tprintf(\"%.2lf\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1565155024,
        "uid": 27924,
        "name": "xukuan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2742 \u3010\u3010\u6a21\u677f\u3011\u4e8c\u7ef4\u51f8\u5305 / [USACO5.1]\u5708\u5976\u725bFencing the Cows\u3011"
    },
    {
        "content": "\u4ecb\u7ecd\u4e00\u4e0b\u845b\u7acb\u6052\u7b97\u6cd5\u7684\u8fdb\u5316\u7248\uff0cAndrew\u7b97\u6cd5\uff1a\n   -   \u9996\u5148\u5982\u845b\u7acb\u6052\u4e00\u6837\uff0c\u6392\u5e8f\uff0c\u89c4\u5219\u4e3a\u6309x\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u5982\u679cx\u76f8\u540c\u90a3\u4e48\u6309y\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\n   1. \u7136\u540e\u5f00\u59cb\u626b\u63cf\uff0cP1\u2026\u2026Pn\u4e3a\u6709\u5e8f\u70b9,\u4eceP1\u5f00\u59cb\u4e00\u76f4\u5230Pn\u626b\u63cf\u4e00\u904d\uff08P1\u548cPN\u80af\u5b9a\u5728\u8fb9\u4e0a\uff0c\u4e00\u4e2a\u6700\u5c0f\u4e00\u4e2a\u6700\u5927\u561b\uff09,\u8fd9\u65f6\u5019\u51f8\u5305\u7684\u534a\u4e2a\u58f3\u5c31\u51fa\u6765\u4e86\n   1. \u53cd\u8fc7\u6765\uff0c\u4ece\u7b2cn-1\u4e2a\u70b9\u518d\u626b\u4e00\u904d\uff08\u4e0d\u7528\u4ece\u7b2cN\u4e2a\u5f00\u59cb\uff09\u4e00\u76f4\u626b\u5230P1\uff0c\u53e6\u5916\u534a\u4e2a\u58f3\u5c31\u51fa\u6765\u4e86\uff0c\u8fd9\u5c31\u662fAndrew\u7684\u601d\u60f3\n  \n  AC\u4ee3\u7801\u5982\u4e0b\uff1a\n  \n  \n  \n  \n```cpp\n#include<bits/stdc++.h>\n#define maxn 10050\nusing namespace std;\nstruct Point{\n   double x,y;\n};\n\nPoint p[maxn],ch[maxn];    //\u540e\u8005\u8bb0\u5f55\u51f8\u5305\u4e0a\u7684\u70b9\n\nbool cmp(Point x,Point y)\n{\n    return x.x<y.x||(x.x==y.x&&x.y<y.y);//x\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u5982\u679cx\u76f8\u540c\u5219y\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n}\nint Cross(Point x,Point y,Point z)\n{\n    double x1=x.x-y.x;\n    double y1=x.y-y.y;\n    double x2=z.x-y.x;\n    double y2=z.y-y.y;\n    if((x1*y2-x2*y1)<=0) return 0;//\u5982\u679c\u4e0d\u5e0c\u671b\u5728\u51f8\u5305\u7684\u8fb9\u4e0a\u6709\u8f93\u5165\u70b9\u3002\u628a<=\u6539\u6210<\n    return 1;\n}\nint andrew(int n)\n{\n    sort(p,p+n,cmp);\n    int m=0;\n    int i;\n    for(i=0;i<n;i++)//\u4ece\u5de6\u5230\u53f3\u626b\u63cf\n    {\n        while( m>1 && !Cross(ch[m-1],ch[m-2],p[i])) m--;\n        ch[m++]=p[i];\n    }\n    int k=m;\n    for(i=n-2;i>=0;i--)//\u4ece\u53f3\u5230\u5de6\u626b\u63cf\n    {\n        while( m>k && !Cross(ch[m-1],ch[m-2],p[i])) m--;\n        ch[m++]=p[i];\n    }\n    if(n>1) m--;//\u51f8\u5305\u6709m\u4e2a\u9876\u70b9\n    return m;\n}\nint main(){\n   int n;\n   scanf(\"%d\",&n);\n   for(int i=0;i<n;i++)\n    scanf(\"%lf %lf\",&p[i].x,&p[i].y);\n   int ans=andrew(n);\n   double sum=0;\n   for(int i=0;i<ans-1;i++){\n    sum+=sqrt((ch[i+1].x-ch[i].x)*(ch[i+1].x-ch[i].x)+(ch[i+1].y-ch[i].y)*(ch[i+1].y-ch[i].y)); //\u7b97\u5468\u957f\n   }\n   sum+=sqrt((ch[ans-1].x-ch[0].x)*(ch[ans-1].x-ch[0].x)+(ch[ans-1].y-ch[0].y)*(ch[ans-1].y-ch[0].y));//\u6700\u540e\u8fd8\u6709\u7b2cn\u4e2a\u70b9\u5230\u7b2c1\u4e2a\u70b9\u7684\u8ddd\u79bb\n   printf(\"%.2lf\",sum);\n    return 0;\n}\n\n```",
        "postTime": 1535722936,
        "uid": 118715,
        "name": "Biqiexiaoting",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2742 \u3010\u3010\u6a21\u677f\u3011\u4e8c\u7ef4\u51f8\u5305 / [USACO5.1]\u5708\u5976\u725bFencing the Cows\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u662f\u5178\u578b\u7684\u51f8\u5305\uff0c\u80fd\u591f\u56f4\u4f4f\u8fd9\u4e9b\u70b9\u7684\u56f4\u680f\u4e00\u5b9a\u662f\u4e2a\u51f8\u5305\uff08\u56f4\u4f4f\u6240\u6709\u70b9\u7684\u6700\u5c0f\u51f8\u591a\u8fb9\u5f62\uff09\u3002\u53ef\u4ee5\u7528Graham\u7b97\u6cd5\uff0c\u5177\u4f53\u6b65\u9aa4\uff1a  \n1\uff09 \u5b58\u50a8\u6240\u6709\u70b9\u5750\u6807\uff0c\u540c\u65f6\u6c42\u51fa\u8f74\u70b9\uff0cy\u503c\u6700\u5c0f\u540c\u65f6x\u503c\u4e5f\u6700\u5c0f  \n\n```java\nif(i>0) {\n         if(tempy<pointList.get(ltlidx).y || (tempy==pointList.get(ltlidx).y && tempx<pointList.get(ltlidx).x))\n                    ltlidx=i;\n```\n2\uff09 \u4ea4\u6362\u8f74\u70b9\u5230\u94fe\u8868\u6216\u6570\u7ec4\u7b2c\u4e00\u4f4d  \n3\uff09\u6392\u5e8f\u6240\u6709\u5176\u4ed6\u70b9\uff0c\u6309\u9006\u65f6\u9488\u987a\u5e8f\u6392\u5e8f\uff0c\u5373\u8ddd\u79bb\u8f74\u70b9\u6700\u9760\u53f3\u9760\u4e0b\u7684\u70b9\u6392\u5728\u524d\u9762  \n4\uff09\u65b0\u5efa\u4e00\u4e2a\u94fe\u8868\uff0c\u5b58\u50a8\u8f74\u70b9\u548c\u7b2c\u4e8c\u4e2a\u70b9\uff0c\u4f5c\u4e3a\u57fa\u8fb9\uff0c\u5bf9\u5176\u4f59\u70b9\u8fdb\u884c\u5224\u65ad\uff0c\u8fd9\u91cc\u4f1a\u7528\u5230\u4e00\u4e2a\u53c9\u79ef\u516c\u5f0fx1\\*y2-x2\\*y1>0 \u8868\u793a\u70b92\u5728\u70b91\u7684\u5de6\u4fa7  \n```java\n(a1.x-a0.x)*(a2.y-a0.y)-(a2.x-a0.x)*(a1.y-a0.y);\n     \n```\n5\uff09\u6700\u540e\u94fe\u8868\u5b58\u653e\u7684\u5373\u4e3a\u6781\u70b9  \n6\uff09 \u8fd9\u9053\u9898\u662f\u8981\u5bf9\u6c42\u56f4\u680f\u957f\u5ea6\uff0c\u5373\u6240\u6709\u6781\u70b9\u6c42\u8ddd\u79bb\u548c\n\n\n\n\n\n```\nimport java.io.*;\nimport java.util.*;\n \npublic class Main {\n    static int N;\n    static ArrayList<Node> pointList=new ArrayList<Node>();\n    static Node pivotPoint;\n     \n    public static class Node{\n        double x;\n        double y;\n        public Node(double x, double y) {\n            this.x=x;\n            this.y=y;\n        }\n    }\n    public static void main(String[] args) throws Exception{\n        // TODO Auto-generated method stub\n//    \tlong start =System.currentTimeMillis();\n\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\n        StringTokenizer st;\n        /*\n         * \u8f74\u70b9\u7684index \u521d\u59cb\u503c\u8bbe\u4e3a0\n         */\n        int ltlidx=0;\n        N=Integer.parseInt(br.readLine());\n        double tempx,tempy;\n        for(int i=0;i<N;i++) {\n            st=new StringTokenizer(br.readLine());\n            tempx=Double.parseDouble(st.nextToken());\n            tempy=Double.parseDouble(st.nextToken());\n            pointList.add(new Node(tempx,tempy));\n            /*\n             * \u5982\u679cY \u5750\u6807\u5c0f\u4e8e\u8f74\u70b9 \u6216\u8005 y\u5750\u6807\u76f8\u7b49\uff0cx\u5750\u6807\u5c0f\u4e8e\u8f74\u70b9\uff0c\u5219\u66f4\u65b0\u8f74\u70b9\u7684index\n             */\n            if(i>0) {\n                if(tempy<pointList.get(ltlidx).y || (tempy==pointList.get(ltlidx).y && tempx<pointList.get(ltlidx).x))\n                    ltlidx=i;\n            }\n             \n        }\n        pivotPoint=pointList.get(ltlidx);//\u8f74\u70b9\n        pointList.remove(ltlidx);\n        /*\n         * \u5c06\u6240\u6709\u70b9\u4ece\u53f3\u5230\u5de6\u8fdb\u884c\u6392\u5e8f\uff1b\u5982\u679co1\u5728o2\u5de6\u4fa7 \uff0c\u90a3\u4e48\u5411\u91cf\u53c9\u4e58\u7ed3\u679c\u4f1a\u5927\u4e8e0\uff0c\u4f1a\u66f4\u6362\u987a\u5e8f\uff0c\u6240\u4ee5\u8981\u5e26\u4e2a\u8d1f\u53f7\u3002\n         */\n        Collections.sort(pointList, new Comparator<Node>() {\n \n            @Override\n            public int compare(Node o1, Node o2) {\n                // TODO Auto-generated method stub\n                return -toLeft(pivotPoint, o1, o2);\n            }\n        });\n        /*\n         * \u4ee5\u8f74\u70b9\u548c\u70b9[1]\u4e3a\u8fb9\uff08\u51f8\u5305\u7684\u7b2c\u4e00\u6761\u6781\u8fb9\uff09\uff0c\u8fdb\u884c\u5de6\u4fa7\u5224\u5b9a\uff1b\n         * \u4e4b\u540e\u5206\u522b\u4ee5\u6808\u9876\u548c\u6b21\u6808\u9876\u4e3a\u8fb9\uff0c\u5bf9\u5176\u4f59\u70b9\u8fdb\u884c\u5de6\u4fa7\u5224\u5b9a\uff0c\u5982\u679c\u5728\u5de6\u4fa7\uff0c\u628a\u8fd9\u4e2a\u70b9\u52a0\u5165\u6808\u4e2d\uff0c\u7136\u540e\u4ee5\u65b0\u7684\u6808\u9876\uff08\u52a0\u5165\u7684\u8fd9\u4e2a\u70b9\uff09\u548c\u6b21\u6808\u9876\u8fdb\u884c\u5224\u65ad\uff1b\n         * \u5426\u5219\u5220\u9664\u6808\u9876\uff0c\u4ee5\u65b0\u7684\u6808\u9876\uff08\u4e4b\u524d\u7684\u6b21\u6808\u9876\uff09\u548c\u6b21\u6808\u9876\u8fdb\u884c\u5224\u65ad\n         * \u5982\u679c\u7b49\u4e8e0 \u8868\u793a \u70b9\u5728\u7ebf\u4e0a\uff0c\u5224\u65ad\u8ddd\u79bb\uff0c\u628a\u8ddd\u79bb\u77ed\u7684\u6254\u6389\n         */\n        ArrayList<Node> stack=new ArrayList<Node>();\n        stack.add(pivotPoint);\n        stack.add(pointList.get(0));\n        pointList.add(pivotPoint);//\u4e07\u4e00\u6700\u540e\u4e00\u6761\u8fb9\u4e0a\u662f\u4e09\u70b9\u5171\u7ebf\uff0c\u90a3\u4e48\u4e2d\u95f4\u90a3\u4e2a\u70b9\u5c31\u4e0d\u80fd\u8981\uff0c\u9700\u8981\u820d\u5f03\uff0c\u6dfb\u52a0\u8fd9\u4e00\u53e5\u5c31\u662f\u4e3a\u4e86\u8fd9\u4e2a\u95ee\u9898\n        for(int i=1;i<pointList.size();i++) {\n            Node stacksecond=stack.get(stack.size()-2);\n            Node stacktop=stack.get(stack.size()-1);\n            Node current=pointList.get(i);\n            int rlt=toLeft(stacksecond, stacktop, current);\n//          System.out.println(rlt);\n            if(rlt>0)\n                stack.add(current);\n            else if (rlt==0) {\n                if(comp(stacksecond, stacktop, current)==-1) {\n                    stack.remove(stacktop);\n                    stack.add(current);\n                }\n            }\n            else {\n                stack.remove(stacktop);\n                i--;\n            }\n             \n        }\n//            for(int i=0;i<stack.size()-1;i++) {\n//        \tSystem.out.println(stack.get(i).x+\" \"+stack.get(i).y);\n//        }\n        double temp=getDis(stack.get(0), stack.get(stack.size()-1));\n        for(int i=0;i<stack.size()-1;i++) {\n        \ttemp+=getDis(stack.get(i),stack.get(i+1));\n        }\n//      }\n        System.out.printf(\"%.2f\",temp);\n//        long end =System.currentTimeMillis();\n//        \t\tSystem.out.println(start-end);\n    }\n    // to-left\u5224\u5b9a\uff0c\u7528\u6765\u5224\u5b9a\u70b9a2\u5728a0a1\u7684\u5de6\u4fa7\u8fd8\u662f\u53f3\u4fa7\n     static public int toLeft(Node a0,Node a1, Node a2) {\n    \t double temp=(a1.x-a0.x)*(a2.y-a0.y)-(a2.x-a0.x)*(a1.y-a0.y);\n        return temp<0?-1:temp>0?1:0;\n    }\n     static int comp(Node a0,Node a1, Node a2 ) {\n    \t double temp=(a1.x-a0.x)*(a1.x-a0.x)+(a1.y-a0.y)*(a1.y-a0.y)-(a2.x-a0.x)*(a2.x-a0.x)-(a2.y-a0.y)*(a2.y-a0.y);\n         return temp<0?-1:temp>0?1:0;\n     }\n     static double getDis(Node a0,Node a1) {\n    \t double temp=(a1.x-a0.x)*(a1.x-a0.x)+(a1.y-a0.y)*(a1.y-a0.y);\n    \t return Math.sqrt(temp);\n     }\n}\n```\n",
        "postTime": 1566477759,
        "uid": 236700,
        "name": "qiyue1118",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2742 \u3010\u3010\u6a21\u677f\u3011\u4e8c\u7ef4\u51f8\u5305 / [USACO5.1]\u5708\u5976\u725bFencing the Cows\u3011"
    },
    {
        "content": "\n[\u535a\u5ba2](https://www.cnblogs.com/hbxblog/p/10237762.html)\n### Problem surface\n[\u6233\u6211](https://www.luogu.org/problemnew/show/P2742)\n### Meaning\n\u5750\u6807\u7cfb\u5185\u6709\u82e5\u5e72\u4e2a\u70b9\uff0c\u95ee\u628a\u8fd9\u4e9b\u70b9\u90fd\u5708\u8d77\u6765\u7684\u6700\u5c0f\u51f8\u5305\u5468\u957f\u3002\n\n\u8fd9\u9053\u9898\u5c31\u662f\u4e00\u9053\u51f8\u5305\u7684\u6a21\u677f\u9898\u554a\uff0c\u53ea\u8981\u6c42\u51fa\u51f8\u5305\u540e\u5728\u8ba1\u7b97\u5c31\u597d\u4e86\uff0c\u7ed9\u51fa\u51e0\u4e2a\u6ce8\u610f\u70b9\n\n1. \u8bb0\u5f97\u68c0\u67e5\u662f\u5426\u6709\u5427\u6539\u5f00double\u7684\n2. \u6700\u540e\u7edf\u8ba1\u7b54\u6848\u7684\u65f6\u5019\u8bb0\u5f97\u5c06\u6700\u540e\u4e00\u4e2a\u70b9\u548c\u7b2c\u4e00\u4e2a\u70b9\u8fde\u8d77\u6765\n\n\u5dee\u4e0d\u591a\u4e86\uff0c\u6253\u7684\u65f6\u5019\u6ce8\u610f\u4e00\u4e0b\u5c31\u597d\u4e86\n\u5982\u679c\u4e0d\u4f1a\u51f8\u5305\uff0c\u5c31\u5148\u53bb\u5b66\u5b66\u4e00\u5b66\u5427,\u5e76\u4e0d\u662f\u5f88\u96be\n\n### Code \n\n``` cpp\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nint read(){\n    int x=0,f=1;\n\tchar c=getchar();\n    while(c<'0'||c>'9') f=(c=='-')?-1:1,c=getchar();\n    while(c>='0'&&c<='9') x=x*10+c-48,c=getchar();\n    return f*x;\n}\nstruct node {\n\tdouble x,y;\n}a[10011],Stack[100011];\ndouble calc(node a,node b,node c){\n       return (b.x-a.x)*(c.y-a.y)-(b.y-a.y)*(c.x-a.x);\n}\ndouble dis(node x,node y){\n\treturn sqrt((x.x-y.x)*(x.x-y.x)+(x.y-y.y)*(x.y-y.y));\n}\nbool cmp(const node & x , const node & y ){\n\tdouble X=atan2(x.y-a[1].y,x.x-a[1].x);\n\tdouble Y=atan2(y.y-a[1].y,y.x-a[1].x);\n\tif(X==Y)\n\t\treturn x.x<y.x;\n\treturn X<Y;\n}\nmain(){\n\tint n=read(),l;\n\tdouble x,y=2147483647;\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%lf%lf\",&a[i].x,&a[i].y);\n\t\tif(y>a[i].y)\n\t\t\ty=a[i].y,x=a[i].x,l=i;\n\t}\n\tswap(a[l],a[1]);\n\tint cnt=0;\n\tsort(a+2,a+n+1,cmp);\n\tStack[++cnt]=a[1];\n\tfor(int i=2;i<=n;i++){\n\t\twhile(cnt>1&&calc(Stack[cnt-1],a[i],Stack[cnt])>=0)\n\t\t\tcnt--;\n\t\tStack[++cnt]=a[i];\n\t}\n\tdouble ans=dis(Stack[cnt],Stack[1]);\n\tfor(int i=2;i<=cnt;i++)\n\t\tans+=dis(Stack[i],Stack[i-1]);\n\tprintf(\"%0.2lf\",ans);\n}\n\n```\n\n\n\n\n",
        "postTime": 1546916521,
        "uid": 19805,
        "name": "\u64a4\u4e91",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2742 \u3010\u3010\u6a21\u677f\u3011\u4e8c\u7ef4\u51f8\u5305 / [USACO5.1]\u5708\u5976\u725bFencing the Cows\u3011"
    },
    {
        "content": "\u8fd9\u4e00\u9053\u9898\u7528\u51f8\u5305\u6765\u505a\n\n\u9996\u5148\u627e\u51fa\u6700\u4f4e\u6700\u5de6\u8fb9\u7684\u70b9\uff0c\u7136\u540e\u6309\u7167\u89d2\u5ea6\u6765\u6392\u4e00\u6b21\u5e8f\n\n\u7136\u540e\u67e5\u627e\u8f93\u51fa\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define MAXN 11000\nusing namespace std;\nstruct node//\u70b9 \n{\n\tdouble x,y;\n}p[MAXN],sta[MAXN];//p\u8868\u793a\u539f\u6765\u7684\u70b9\uff0csta\u8868\u793a\u7b54\u6848\u6570\u7ec4 \nint n,top;//n\u4e3a\u539f\u6765\u7684\u70b9\u6570\uff0ctop\u8868\u793a\u51f8\u5305\u7684\u70b9\u6570 \ninline double multi(node p1,node p2,node p0)//\u53c9\u79ef\uff0c\u6c42\u89d2\u5ea6 \n{\n\tdouble x1,y1,x2,y2;\n\tx1=p1.x-p0.x;\n\ty1=p1.y-p0.y;\n\tx2=p2.x-p0.x;\n\ty2=p2.y-p0.y;\n\treturn x1*y2-x2*y1;//\u4ea4\u53c9\u76f8\u4e58 \n}\ninline double dis(node p1,node p2)//\u4e24\u70b9\u7684\u8ddd\u79bb\uff08\u6d77\u4f26\u516c\u5f0f\uff09 \n{\n\treturn sqrt((p1.x-p2.x)*(p1.x-p2.x)+(p1.y-p2.y)*(p1.y-p2.y));\n}\ninline int cmp(node p1,node p2)//\u51f8\u5305\u4e2d\u7684\u6bd4\u8f83\u51fd\u6570\n{\n\tdouble tt=multi(p1,p2,p[1]);//\u627e\u51fa\u89d2\u5ea6\n\tif(tt<0) return 0;\n\tif(tt==0 && dis(p1,p[1])>dis(p2,p[1])) return 0; \n\treturn 1;\n}\ninline void graham()//\u67e5\u627e\u70b9 \n{\n\tsort(p+2,p+n+1,cmp);//\u6309\u89d2\u5ea6\u6392\u5e8f \n\tfor(int i=1;i<=2;i++) sta[i]=p[i];//\u8bb0\u5f55\u524d\u4e24\u4e2a \n\ttop=2;\n\tfor(int i=3;i<=n;i++)//\u4ece\u7b2c3\u4e2a\u70b9\u5f00\u59cb \n\t{\n\t\twhile(top>1 && multi(sta[top],p[i],sta[top-1])<=0) top--;//\u5982\u679c\u6709\u66f4\u597d\u7684\u89e3\uff0c\u5c31\u628a\u7b54\u6848\u4e2d\u6ca1\u4e0d\u8981\u7528\u7684\u5220\u53bb \n\t\tsta[++top]=p[i];//\u8bb0\u5f55\u4e0b\u6765 \n\t}\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%lf%lf\",&p[i].x,&p[i].y);\n\t\tif(p[i].y<p[1].y || (p[i].y==p[1].y && p[i].x<p[1].x))//\u628a\u7b2c\u4e00\u4e2a\u70b9\u8bbe\u7f6e\u4e3a\u6700\u4f4e\u6700\u505a\u8fb9\u7684 \n\t\t{\n\t\t\tnode t=p[1];p[1]=p[i];p[i]=t;\n\t\t}\n\t}\n\tgraham();\n\tdouble ans=0.0;//\u67e5\u627e\u8ddd\u79bb \n\tfor(int i=2;i<=top;i++) ans=ans+dis(sta[i-1],sta[i]);\n\tans=ans+dis(sta[1],sta[top]);\n\tprintf(\"%0.2lf\\n\",ans);//\u8f93\u51fa \n\treturn 0;\n}\n```",
        "postTime": 1527139370,
        "uid": 66181,
        "name": "Celebrate",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2742 \u3010[USACO5.1]\u5708\u5976\u725bFencing the Cows\u3011"
    },
    {
        "content": "\u65b9\u6cd5\u662f\u4e00\u6837\u7684\uff0c\u5148\u6c42\u51f8\u5305\uff0c\u518d\u7b97\u8ddd\u79bb\u3002\u4f46\u662f\u6211\u7684\u7a0b\u5e8f\u6bd4\u4e00\u822c\u7684\u6709\u70b9\u4e0d\u540c\u3002\u5728\u7b97\u51f8\u5305\u65f6\uff0c\u6211\u9009\u62e9\u8ba1\u7b97\u4e24\u70b9\u95f4\u89d2\u5ea6\u5dee\u518d\u505a\u6bd4\u8f83\uff08\u5c31\u662f\u4e0b\u9762\u7684sita\uff09\uff0c\u5176\u4ed6\u5730\u65b9\u57fa\u672c\u4e0e\u6807\u7a0b\u4e00\u6837\u3002\u8fd9\u6837\u7b97\u7684\u8bdd\u633a\u597d\u7406\u89e3\u7684\u3002\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<iostream>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nconst double Pi=3.1415926535898;\nconst int MAXN=10000+100;\nbool nf[MAXN];\nint n,c[MAXN];\nstruct cow\n{\n    double x,y;\n}a[MAXN];//\u5b58\u725b\u7684\u5750\u6807\ndouble sita(double x,double y)//\u8ba1\u7b97\u89d2\u5ea6\uff0c\u7528\u7684\u662f\u5f27\u5ea6\u5236\uff0c\u6ce8\u610f\u8d1f\u89d2\u7684\u5904\u7406\n{\n    double rou=sqrt(x*x+y*y);\n    x/=rou;\n    y/=rou;\n    double s=acos(x);\n    if(y>=0)return s;\n    else return -s;\n}\nbool cmp(cow a,cow b)//sort\u51fd\u6570\u6bd4\u8f83\n{\n    return a.x<b.x||a.x==b.x&&a.y<b.y;\n}\ndouble dis(int x,int y)//\u6c42\u8ddd\u79bb\n{\n    return sqrt((a[x].x-a[y].x)*(a[x].x-a[y].x)+(a[x].y-a[y].y)*(a[x].y-a[y].y));\n}\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;i++)cin>>a[i].x>>a[i].y;\n    sort(a+1,a+n+1,cmp);\n    int f=1;\n    c[1]=1;\n    int h=1,next;\n    double angle;\n    while(h!=n)\n    {\n        angle=3*Pi;\n        next=0;\n        for(int i=h+1;i<=n;i++)if(sita(a[i].x-a[h].x,a[i].y-a[h].y)<angle)//\u5faa\u73af\u627e\u503e\u659c\u89d2\u6700\u5c0f\u7684\u8fb9\uff08\u503e\u659c\u89d2\u53ef\u4e3a\u8d1f\u6570\uff0c\u867d\u7136\u4e0d\u4e25\u8c28\uff09\n        {\n            angle=sita(a[i].x-a[h].x,a[i].y-a[h].y);\n            next=i;\n        }\n        c[++f]=next;\n        nf[next]=true;\n        h=next;\n    }\n    while(h!=1)//\u53cd\u8fc7\u6765\u518d\u6c42\u4e00\u904d\u51f8\u5305\n    {\n        angle=3*Pi;\n        next=0;\n        for(int i=h-1;i>=1;i--)if(!nf[i]&&sita(a[h].x-a[i].x,a[h].y-a[i].y)<angle)\n        {\n            angle=sita(a[h].x-a[i].x,a[h].y-a[i].y);\n            next=i;\n        }\n        c[++f]=next;\n        h=next;\n    }\n    double sum=0.0;\n    for(int i=1;i<f;i++)sum+=dis(c[i],c[i+1]);//\u6c42\u8ddd\u79bb\n    printf(\"%.2lf\\n\",sum);\n    return 0;\n}\n\n```",
        "postTime": 1498446584,
        "uid": 7035,
        "name": "Great_Influence",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2742 \u3010[USACO5.1]\u5708\u5976\u725bFencing the Cows\u3011"
    },
    {
        "content": "#include<iostream>//\u5148\u628a\u51f8\u5305\u7684\u9876\u70b9\u6c42\u51fa\u6765\uff0c\u7136\u540e\u4f9d\u6b21\u6c42\u51fa\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u5373\u51f8\u5305\u7684\u5468\u957f\n\n```cpp\n#include<algorithm>\n#include<vector>\n#include<cstdio>\n#include<string>\n#include<cstring>\n#include<cstdlib>\n#include<cmath>\nusing namespace std;\nstruct point\n{\n    double x, y;\n};\nbool mult(point sp,point ep,point op){\n    return (sp.x-op.x)*(ep.y-op.y)>=(ep.x-op.x)*(sp.y-op.y);\n}\nbool operator < (const point &l,const point &r)\n{\n    return l.y<r.y||(l.y==r.y&&l.x<r.x);\n}\nint gra(point pnt[],int n,point res[])\n{\n    int i,len,top=1;\n    sort(pnt,pnt+n);\n    if(n==0)return 0;res[0]=pnt[0];\n    if(n==1)return 1;res[1]=pnt[1];\n    if(n==2)return 2;res[2]=pnt[2];\n    for(i=2;i<n;i++){\n        while(top&&mult(pnt[i],res[top],res[top-1]))\n            top--;\n        res[++top]=pnt[i];\n    }\n    len=top;\n    res[++top]=pnt[n-2];\n    for(i=n-3;i>=0;i--){\n        while(top!=len&&mult(pnt[i],res[top],res[top-1]))\n            top--;\n        res[++top]=pnt[i];\n    }\n    return top;\n}\ndouble dis(point a,point b)\n{\n    return sqrt(pow(fabs(a.x-b.x),2)+pow(fabs(a.y-b.y),2));\n}\nint main()\n{\n    int n,i;\n    double a,b,sumx;\n    point p[10001],r[10001];\n    while(cin>>n){\n        for(i=0;i<n;i++){\n            cin>>a>>b;\n            p[i].x=a;\n            p[i].y=b;\n        }\n        int x=gra(p,n,r);\n        sumx=0;\n        for(i=1;i<x;i++){\n            sumx+=dis(r[i],r[i-1]);\n        }\n        sumx+=dis(r[0],r[x-1]);\n        printf(\"%.2lf\\n\",sumx);\n    }\n    return 0;\n}\n\n```",
        "postTime": 1468762474,
        "uid": 17506,
        "name": "\u8f69\u69ff",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2742 \u3010[USACO5.1]\u5708\u5976\u725bFencing the Cows\u3011"
    }
]