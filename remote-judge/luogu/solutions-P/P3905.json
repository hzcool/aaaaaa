[
    {
        "content": "2325131433448687~\n\n\u8fd9\u9053\u9898\u5c45\u7136\u6ca1\u6709floyd\u7684\u9898\u89e3\uff0c\u849f\u84bb\u8868\u793a\u6124\u6124\u4e0d\u5e73\uff0c100\u7684\u6570\u636e\u90fd\u6ca1\u4eba\u5199floyd\uff0c\u90a3\u6211\u5c31\u6765\u6c34\u4e00\u53d12333\u3002\u3002\u3002\n\n\u795e\u5947\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\nint h[105][105],d[105][105];\nvoid floyd(int n)\n{\n\tfor(int k=1;k<=n;k++)\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\th[i][j]=min(h[i][j],h[i][k]+h[k][j]);\n}//floyd\u7684\u677f\u5b50\uff0cfloyd\u7684\u7279\u70b9\u5c31\u662f\u601d\u8def\u6e05\u6670\uff0c\u4ee3\u7801\u7cbe\u7b80\uff0c\u6240\u4ee5\u5f88\u9002\u5408\u6211\u8fd9\u6837\u542c\u4e0d\u61c2dijkstra\u548cspfa\u7684\u849f\u84bb\u4f7f\u7528\u3002\u3002\u3002\t\n\nint main()\n{\n\tmemset(h,0x3f3f3f3f,sizeof(h));//\u4e00\u62dc\u521d\u59cb\u5316\n\tint n,m,k;\n\tcin >> n >> m;\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint s,e;\n\t\tcin >> s >> e;\n\t\tcin >> d[s][e];\n\t\td[e][s]=d[s][e];\n\t\th[s][e]=h[e][s]=0;\n\t}//\u4e8c\u62dc\u5efa\u56fe\uff08\u6ce8\u610f\u662f\u53cc\u5411\u8fb9\uff0c\u5efa\u6210\u5355\u5411\u8fb9\u4f1a\u77ac\u95f4\u7206\u70b8\u3002\u3002\u3002\uff09\n\tcin >> k;\n\tfor(int i=1;i<=k;i++)\n\t{\n\t\tint s,e;\n\t\tcin >> s >> e;\n\t\th[s][e]=h[e][s]=d[s][e];//\u4e09\u62dc\u5220\u8fb9(2333)\n\t}\n\tfloyd(n);//\u5957\u677f\u5b50\u55bd\uff01\u771f\u9999\u3002\u3002\u3002\n\tint st,en;\n\tcin >> st >> en;\n\tcout << h[st][en];//\u6109\u5feb\u5730\u8f93\u51fa\uff0c\u6700\u540e\u795d\u5927\u5bb6NOIP\u8fdb\u590d\u8d5b\uff01\n\treturn 0;\n    //2325131433448687\n} \n```",
        "postTime": 1539439046,
        "uid": 68675,
        "name": "xiaolou",
        "ccfLevel": 0,
        "title": "p3905\u9898\u89e3"
    },
    {
        "content": "## \u3010\u4e09\u79cd\u65b9\u6cd5\u3011\n\n###  1.\u3010\u6700\u7b80\u5355\u7684\u5f17\u6d1b\u4f0a\u5fb7\u3011\n#### \u3010\u601d\u8def\u3011\n\u5f17\u6d1b\u4f0a\u5fb7\u7684\u65b9\u6cd5    \n\u5148\u5c06\u6709\u8def\u7684\u70b9\u90fd\u8fde\u63a5\u8d77\u6765   \n\u7531\u4e8e\u53ea\u9700\u8981\u4fee\u6539\u635f\u574f\u7684\u70b9    \n\u6240\u4ee5\u5b8c\u597d\u7684\u9053\u8def\u662f\u53ef\u4ee5\u8d70\u7684\u800c\u4e14\u4e0d\u9700\u8981\u4fee\u590d   \n\u6240\u4ee5\u6d88\u8017\u4e3a0     \n\u53ef\u4ee5\u628a\u635f\u574f\u7684\u8fb9\u6807\u8bb0\u4e00\u4e0b   \n\u628a\u6ca1\u88ab\u6807\u8bb0\u7684\u4e5f\u5c31\u662f\u5b8c\u597d\u7684\u8fb9\u6539\u4e3a0    \n\u56e0\u4e3a\u4e0d\u9700\u8981\u6d88\u8017    \n\n\u6700\u540e\u518d\u8dd1\u4e00\u904d\u5f17\u6d1b\u4f0a\u5fb7\u5c31\u597d\u4e86     \n#### \u3010\u5b8c\u6574\u4ee3\u7801\u3011\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int Max = 102;\nint f[Max][Max];\nbool use[Max][Max];\nint main()\n{\n\tint n,m,k;\n\tint x,y,z;\n\tscanf(\"%d%d\",&n,&m);\n\tfor(register int i = 1;i <= n;++ i)\n\t\tfor(register int j = 1;j <= n;++ j)\n\t\t\tf[i][j] = 999;\n\tfor(register int i = 1;i <= m;++ i)\n\t{\n\t\tcin >> x >> y >> z;\n\t\tf[x][y] = f[y][x] = z;\n\t}\n\tscanf(\"%d\",&k);\n\tfor(register int i = 1;i <= k;++ i)\n\t{\n\t\tcin >> x >> y;\n\t\tuse[x][y] = use[y][x] = true;\n\t}\n\tfor(register int i = 1;i <= n;++ i)\n\t\tfor(register int j = 1;j <= n;++ j)\n\t\t\tif(use[i][j] == false && f[i][j] != 999)\n\t\t\t\tf[i][j] = 0;\n\tfor(register int k = 1;k <= n;++ k)\n\t\tfor(register int i = 1;i <= n;++ i)\n\t\t\tfor(register int j = 1;j <= n;++ j)\n\t\t\t\tf[j][i] = f[i][j] = min(f[i][j],f[i][k] + f[k][j]);\n\tint A,B;\n\tscanf(\"%d%d\",&A,&B);\n\tcout << f[A][B] << endl;\n\treturn 0;\n}\n```\n\n### 2.\u3010SPFA\u3011\n#### \u3010\u601d\u8def\u3011\nSPFA    \nSPFA\u8bc8\u5c38+1   \n\u5148\u8f93\u5165\u6709\u8def\u7684\u6570\u636e    \n\u5efa\u7acb\u8fb9\u4f46\u662f\u5148\u4e0d\u8d4b\u503c   \n\u4fdd\u6301\u4ed6\u9ed8\u8ba4\u4e3a0\u7684\u8ddd\u79bb   \n\u53ea\u628a\u67d0\u6761\u8fb9\u5bf9\u5e94\u7684\u957f\u5ea6\u7a0d\u5fae\u8bb0\u5f55\u4e00\u4e0b     \n\u7136\u540e\u8f93\u5165\u574f\u6389\u7684\u8def    \n\u8fd9\u4e2a\u65f6\u5019\u624d\u5c06\u574f\u6389\u7684\u8def\u7684\u957f\u5ea6\u8d4b\u503c\u4e0a\u53bb   \n\u56e0\u4e3a\u5b8c\u597d\u65e0\u635f\u7684\u8def\u53ef\u4ee5\u901a\u8fc7\u800c\u4e14\u4e0d\u9700\u8981\u8017\u8d39\u53bb\u4fee\u590d   \n\u6240\u4ee5\u5bf9\u9700\u8981\u4fee\u590d\u7684\u8def\u5f84\u7684\u603b\u957f\u5ea6\u6ca1\u6709\u8d21\u732e   \n\u5c31\u662f0   \n\u4f46\u662f\u574f\u6389\u7684\u4e0d\u4e00\u6837   \n\u8d21\u732e\u5b83\u672c\u8eab\u7684\u957f\u5ea6   \n  \n\u7136\u540e\u8dd1SPFA\u6c42\u51faA\u5230B\u7684\u6700\u77ed\u8def\u5c31\u597d\u4e86     \n#### \u3010\u5b8c\u6574\u4ee3\u7801\u3011 \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\nusing namespace std;\nconst int Max = 102;\nstruct node\n{\n\tint y;\n\tint ne;\n\tint z;\n}a[Max * Max];\nint sum = 0;\nint head[Max];\nint acioi[Max * Max];\nvoid add(int x,int y,int z)\n{\n\ta[++ sum].y = y;\n\ta[sum].ne = head[x];\n\tacioi[sum] = z;\n\thead[x] = sum;\n}\n\nint d[Max];\nbool use[Max];\nint A,B;\nint n,m,k;\nvoid SPFA()\n{\n\tqueue<int>q;\n\tq.push(A);\n\tfor(register int i = 1;i <= n;++ i)\n\t\td[i] = 999;\n\td[A] = 0;\n\twhile(!q.empty())\n\t{\n\t\tint qwq = q.front();\n\t\tq.pop();use[qwq] = false;\n\t\tfor(register int i = head[qwq];i != 0;i = a[i].ne)\n\t\t{\n\t\t\tint awa = a[i].y;\n\t\t\tif(d[awa] > d[qwq] + a[i].z)\n\t\t\t{\n\t\t\t\td[awa] = d[qwq] + a[i].z;\n\t\t\t\tif(use[awa] == false)\n\t\t\t\t{\n\t\t\t\t\tuse[awa] = true;\n\t\t\t\t\tq.push(awa);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tint x,y,z;\n\tfor(register int i = 1;i <= m;++ i)\n\t{\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tadd(x,y,z);add(y,x,z);\n\t}\n\tscanf(\"%d\",&k);\n\tfor(register int i = 1;i <= k;++ i)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tfor(register int j = head[x];j != 0;j = a[j].ne)\n\t\t\tif(a[j].y == y)\n\t\t\t\ta[j].z = acioi[j];\n\t\tfor(register int j = head[y];j != 0;j = a[j].ne)\n\t\t\tif(a[j].y == x)\n\t\t\t\ta[j].z = acioi[j];\n\t}\n\tscanf(\"%d%d\",&A,&B);\n\tSPFA();\n\tcout << d[B] << endl;\n\treturn 0;\n}\n```\n\n### 3.\u3010dijstra\u3011\n#### \u3010\u601d\u8def\u3011\n\u5730\u6770\u65af\u7279\u62c9+\u5806\u4f18\u5316    \n\u6211\u77e5\u9053\u7684\u4e09\u4e2a\u6c42\u6700\u77ed\u8def\u7684\u65b9\u6cd5\u91cc\u9762\u8c8c\u4f3c\u751f\u5b58\u80fd\u529b\u6700\u5f3a\u7684\u4e00\u4e2a    \n\u8f93\u5165\u6570\u636e    \n\u5904\u7406\u65b9\u5f0f\u548cSPFA\u7684\u65b9\u6cd5\u4e00\u4e2a\u6837    \n\u5148\u53ea\u628a\u8fb9\u8fde\u63a5\u8d77\u6765\u4f46\u662f\u4e0d\u8d4b\u503c\u8fb9\u6743    \n\u8ba9\u8fb9\u6743\u4fdd\u6301\u4e3a0    \n\u7136\u540e\u5c06\u635f\u574f\u6389\u7684\u8def\u8d4b\u503c\u4e0a\u8fb9\u6743    \n\uff08\u539f\u56e0\u4e0d\u591a\u8d58\u8ff0\u4e86\uff0c\u524d\u9762\u4e24\u79cd\u65b9\u6cd5\u90fd\u8bf4\u8fc7\u4e86\uff09    \n \n\u7136\u540e\u8dd1dijkstra\u5c31\u597d\u4e86     \n#### \u3010\u5b8c\u6574\u4ee3\u7801\u3011\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\nusing namespace std;\nstruct point\n{\n\tint w;//\u6309\u7167w\u4ece\u5c0f\u5230\u5927\u6392\u5e8f \n\tint x;\n\tbool operator < (const point & xx)const \n\t{\n\t\treturn xx.w < w;\n\t}\n};\npriority_queue<point>q;\nconst int Max = 102;\nstruct node\n{\n\tint y,ne,z;\n}a[Max * Max];\nint sum = 0;\nint head[Max];\nint acioi[Max * Max];\nint n,m;\nint A,B;\nint dis[Max];\nbool use[Max];\n\nvoid add(int x,int y,int z)\n{\n\ta[++ sum].y = y;\n\ta[sum].ne = head[x];\n\tacioi[sum] = z;\n\thead[x] = sum;\n}\n\nvoid dj()\n{\n\tdis[A] = 0;\n\tq.push((point){0,A});\n\twhile(!q.empty())\n\t{\n\t\tpoint qwq = q.top();\n\t\tq.pop();\n\t\tint x = qwq.x;\n\t\tif(use[x] == true)\n\t\t\tcontinue;\n\t\telse\n\t\t\tuse[x] = true;\n\t\tfor(register int i = head[x];i != 0;i = a[i].ne)\n\t\t{\n\t\t\tint awa = a[i].y;\n\t\t\tif(dis[awa] > dis[x] + a[i].z)\n\t\t\t{\n\t\t\t\tdis[awa] = dis[x] + a[i].z;\n\t\t\t\tif(use[awa] == false)\n\t\t\t\t\tq.push((point){dis[awa],awa});\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tfor(register int i = 1;i <= n;++ i)\n\t\tdis[i] = 999;\n\tint x,y,z;\n\tfor(register int i = 1;i <= m;++ i)\n\t{\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\n\t\tadd(x,y,z);add(y,x,z);\n\t}\n\tint k;\n\tscanf(\"%d\",&k);\n\tfor(register int i = 1;i <= k;++ i)\n\t{\n\t\tscanf(\"%d%d\",&x,&y);\n\t\tfor(register int j = head[x];j != 0;j = a[j].ne)\n\t\t\tif(a[j].y == y)\n\t\t\t\ta[j].z = acioi[j];\n\t\tfor(register int j = head[y];j != 0;j = a[j].ne)\n\t\t\tif(a[j].y == x)\n\t\t\t\ta[j].z = acioi[j];\n\t}\n\tscanf(\"%d%d\",&A,&B);\n\tdj();\n\tcout << dis[B] << endl;\n\treturn 0;\n}\n```",
        "postTime": 1571294020,
        "uid": 186489,
        "name": "EarthGiao",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3905 \u3010\u9053\u8def\u91cd\u5efa\u3011"
    },
    {
        "content": "\u4e0e\u697c\u4e0b\u601d\u8def\u8f83\u76f8\u4f3c\uff0c\u4f46\u7528\u7684\u662f\u8fea\u6770\u65af\u7279\u62c9\u7b97\u6cd5\u3002 \u56e0\u4e3a\u8981\u6c42\u6700\u77ed\u4fee\u5efa\u957f\u5ea6\uff0c\u6240\u4ee5\u628a\u90a3\u4e9b\u6ca1\u6709\u635f\u574f\u7684\u8fb9\u6743\u5f53\u505a0\u5904\u7406\u3002 \u6700\u5f00\u59cb\u5b58\u7684\u65f6\u5019\uff0c\u8fb9\u6743\u5747\u8d4b\u4e3a0\uff1b \u4e4b\u540e\u8f93\u5165\u88ab\u635f\u574f\u7684\u8fb9\u65f6\uff0c\u679a\u4e3e\u4e0e\u5176\u76f8\u8fde\u7684\u6bcf\u4e00\u6761\u8fb9\uff1b \u679a\u4e3e\u5230\u53e6\u4e00\u4e2a\u70b9\u65f6\uff0c\u5c06\u5176\u8def\u5f84\u6539\u4e3a\u521d\u59cb\u503c\u3002 \u56e0\u4e3a\u662f\u65e0\u5411\u56fe\uff0c\u6539\u8def\u5f84\u503c\u65f6\u4e00\u5b9a\u8981\u6ce8\u610f\u4e24\u8fb9\u90fd\u8981\u6539\u53d8\uff01\uff01\uff01\uff01\uff01\uff01 \u5177\u4f53\u4ee3\u7801\u5982\u4e0b\uff1a\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n,m,first[5000],next[5000],to[5000],w[5000],tot,d,a[200][200],A,B,dis[5000];\nint pd[5000];\npriority_queue<pair<int,int> >q;\nvoid ADD(int x,int y,int s)//\u9886\u63a5\u8868\u5b58\u50a8\n{\n    tot++;\n    next[tot]=first[x];\n    first[x]=tot;\n    to[tot]=y;\n    w[tot]=s;\n    return;\n}\nvoid DIJ()\n{\n    for(int i=1;i<=n;i++)\n        dis[i]=1000000000;//\u8d4b\u4e00\u4e2a\u8001\u5927\u8001\u5927\u7684\u503c\n    dis[A]=0;\n    q.push(make_pair(0,A));\n    while(!q.empty())\n    {\n        int u=q.top().second;\n        q.pop();\n        for(int e=first[u];e;e=next[e])//\u679a\u4e3e\u6bcf\u6761\u8fb9\n        {\n            int v=to[e];\n            if(dis[v]>dis[u]+w[e])//\u53ea\u8981\u8def\u5f84\u66f4\u77ed\u5c31\u66f4\u65b0\n            {\n                dis[v]=dis[u]+w[e];\n                q.push(make_pair(-dis[v],v));\n                //\u4e00\u5b9a\u662f-dis[v]!\u8fd9\u6837\u624d\u80fd\u4f7f\u5176\u53d8\u4e3a\u5c0f\u6839\u5806 \n                //\u901f\u5ea6\u8001\u5feb\u4e86\uff01\n            }\n        }\n    }\n    return;\n}\nint main()\n{\n    cin>>n>>m;\n    for(int i=1;i<=m;i++)\n    {\n        int ii,jj,kk;\n        cin>>ii>>jj>>kk;\n        a[ii][jj]=kk;\n        a[jj][ii]=kk;//\u4e00\u5b9a\u4e24\u9762\u5b58\uff01\n        ADD(ii,jj,0);\n        ADD(jj,ii,0);\n    }\n    cin>>d;\n    for(int i=1;i<=d;i++)\n    {\n        int ii,jj;\n        cin>>ii>>jj;\n        for(int j=first[ii];j;j=next[j])\n        \tif(to[j]==jj) w[j]=a[ii][jj];\n        for(int j=first[jj];j;j=next[j])\n        \tif(to[j]==ii) w[j]=a[ii][jj];//\u4e24\u9762\u8d4b\u503c\uff01\n    }\n    cin>>A>>B;\n    DIJ();//\u8fea\u6770\u65af\u7279\u62c9\u8d70\u4f60\uff01\n    cout<<dis[B];\n    return 0;\n}\n```",
        "postTime": 1526913134,
        "uid": 66784,
        "name": "BILL666",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3905 \u3010\u9053\u8def\u91cd\u5efa\u3011hh"
    },
    {
        "content": "\u7ec8\u4e8e\u8fc7\u4e86\n\n\u521a\u521a\u7ec3\u4e86spfa,\n\n\u672c\u849f\u84bb\u592a\u6c34\uff0c\u5199\u8fd9\u9053\u9898\u8fd8\u60f3\u4e86\u597d\u534a\u5929\uff08\u4f30\u8ba1\u5403\u67a3\u836f\u4e38qwq\uff09\uff0c\u4ee3\u7801\u633a\u4e11\u3002\u3002\u3002\n\n\u4e3b\u8981\u601d\u8def\uff1a\n\n\u901a\u8fc7gg\u6570\u7ec4\u5b58\u8def\u5f84\u957f\u5ea6\uff0cg\u6570\u7ec4\u5b58\u5230\u67d0\u70b9\u6240\u8981\u4fee\u7684\u8def\u5f84\u957f\u5ea6\u3002\n\ng\u6570\u7ec4\u8d77\u70b9\u8d4b\u503c0\u3002\n\n\u7136\u540e\u5c31\u8dd1\u4e00\u904dspfa,\n\n\u6bcf\u5faa\u73af\u5230\u4e00\u4e2a\u70b9\u5c31\u66f4\u65b0\u4e00\u6b21g\u6570\u7ec4\u7684\u503c\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint dis[1001],gg[1001][1001],team[1005],f[1001][1001],num[1005],n,m,s,t,d;\nint way[1006],x,y,z,g[1001][1001],head[2001];\nbool exist[1003];\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin>>n>>m;\n    int i,j,k;\n    memset(gg,127,sizeof(gg));\n    for(i=1;i<=m;i++)\n    {\n        cin>>x>>y>>z;\n        g[x][y]=g[y][x]=1;\n        gg[x][y]=gg[y][x]=z;\n        f[x][++num[x]]=y;\n        f[y][++num[y]]=x;\n    }\n    int b1,b2;\n    cin>>d;\n    for(i=1;i<=d;i++)\n    {\n        cin>>b1>>b2;\n        g[b1][b2]=g[b2][b1]=0;\n    }\n    cin>>s>>t;\n    memset(dis,127,sizeof(dis));\n    team[1]=s;\n    dis[s]=0;\n    memset(way,127,sizeof(way));\n    way[s]=0;\n    exist[s]=true;\n    int head=0,tail=1;\n    do\n    {\n        head++;\n        int u=team[head];\n        exist[u]=false;\n        for(i=1;i<=num[u];i++)\n            if(dis[f[u][i]]>dis[u]+gg[u][f[u][i]])\n            {\n                dis[f[u][i]]=dis[u]+gg[u][f[u][i]];\n                if(!g[u][f[u][i]])\n                  way[f[u][i]]=min(way[f[u][i]],way[u]+gg[u][f[u][i]]);\n                else way[f[u][i]]=min(way[f[u][i]],way[u]);\n                if(!exist[f[u][i]])\n                {\n                    tail++;\n                    exist[f[u][i]]=true;\n                    team[tail]=f[u][i];\n                }\n            }\n    }while(head<=tail);\n    cout<<way[t]<<endl;\n    return 0;\n}\n```",
        "postTime": 1506741193,
        "uid": 53884,
        "name": "beretty",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P3905 \u3010\u9053\u8def\u91cd\u5efa\u3011"
    },
    {
        "content": "\u5173\u4e8e\u6b64\u9898\uff0c\u5176\u5b9e\u4e0e\u4e00\u822c\u7684\u6700\u77ed\u8def\u7684\u533a\u522b\u662f\u4e0d\u662f\u6c42\u6700\u77ed\u8ddd\u79bb\u548c\uff0c\u800c\u662f\u635f\u574f\u7684\u8ddd\u79bb\u548c\uff0c\u56e0\u800c\u597d\u7684\u8def\u4e0e\u6211\u4eec\u65e0\u5173\uff0c\u53ef\u4ee5\u5efa\u6210\u8fb9\u6743\u4e3a0\u6765\u5904\u7406\u3002\n\n\n```cpp\n#include       <map>\n#include       <set>\n#include     <ctime>\n#include     <cmath>\n#include     <queue>\n#include     <stack>\n#include    <cstdio>\n#include    <vector>\n#include   <cstring>\n#include   <cstdlib>\n#include  <iostream>\n#include <algorithm>\nusing namespace std;\nbool exi[1000000];\nstruct Edge{\n    int next,to,w;//\u94fe\u5f0f\u524d\u5411\u661f\u5efa\u56fe\n    bool h;//\u8bb0\u5f55\u662f\u5426\u88ab\u6bc1\u574f\n}a[10000];\nint n,m,q,e,r,k,b,inde,head[100000],dis[1000000];\nvoid add(int x,int y,int w){\n    inde++;\n    a[inde].to=y;\n    a[inde].next=head[x];\n    a[inde].w=w;\n    head[x]=inde;\n}\nqueue<int> Q;\nint main()\n{\n    cin>>n>>m;\n    memset(dis,0x3f,sizeof(dis));\n    for(int i=1;i<=m;i++){\n        cin>>q>>e>>r;\n        add(q,e,r);\n        add(e,q,r);\n    }\n    cin>>r;\n    for(int i=1;i<=r;i++){\n        cin>>q>>e;\n        for(int j=head[q];j;j=a[j].next){\n            if(a[j].to==e) a[j].h=1;\n        }\n        for(int j=head[e];j;j=a[j].next){\n            if(a[j].to==q) a[j].h=1; //\u6ce8\u610f\uff0c\u7531\u4e8e\u662f\u53cc\u5411\u56fe\uff0c\u524d\u5411\u661f\u91cc\u8981\u4ece\u4e24\u8fb9\u5220\u8fb9\n        }\n    }\n    for(int i=1;i<=2*m;i++){\n        if(!a[i].h) a[i].w=0;\n    }\n    cin>>k>>b;\n    Q.push(k);//\u8dd1SPFA\u54af\n    exi[k]=1;\n    dis[k]=0;\n    while(!Q.empty()){\n        int x=Q.front();\n        exi[x]=0;\n        Q.pop();\n        for(int i=head[x];i;i=a[i].next){\n            int s=a[i].w,t=a[i].to;\n             if(dis[t]>s+dis[x]){\n                dis[t]=s+dis[x];\n                if(!exi[t])\n                Q.push(t);\n                exi[t]=1;\n            }\n        }\n    }\n    cout<<dis[b];\n    return 0;\n}\n\n```",
        "postTime": 1514213586,
        "uid": 49699,
        "name": "xfydemx",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3905 \u3010\u9053\u8def\u91cd\u5efa\u3011"
    },
    {
        "content": "\u6211\u505a\u8fd9\u4e2a\u9898\u7684\u65f6\u5019\n\n\u6ca1\u6709\u60f3\u5230\u4ec0\u4e48\u5389\u5bb3\u7684\u9898\u89e3\uff08~~\u867d\u7136\u6211\u4f1a\u597d\u51e0\u4e2a  \u4f46\u662f\u5462\u6211\u4e0d\u4f1a\u5199~~\n\uff09\n\n\u4f46\u662f\n\u6211\u8fd8\u662f\u5199\u51fa\u6765\u4e86\u4e00\u4e2a\u9898\u89e3\n\n\u540d\u5b57\u5c31\u53eb   SPFA \u795e\u5668\u7b97\u6cd5\n\n\u5148\u4e0a\u4ee3\u7801\uff08~~\u6284\u88ad\u8005\u4f1a\u88ab\u5c4e\u540d\u7684~~\uff09\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#define ll long long \n#include<queue>\nusing namespace std;\nint a,b,k,end,c,d;\nint vis[5555],head[5555],dis[5555];\nint tot=0,n,m,s;\nbool duan[101][101];\nint aa[5555],bb[5555],cc[5555];\nstruct E{        //\u94fe\u5f0f\u524d\u5411\u661f \n    int to,pre,w;\n}edge[30010];\nvoid add(int x,int y,int z){//\u52a0\u8fb9 \n    tot++;\n    edge[tot].to=y;\n    edge[tot].w=z;\n    edge[tot].pre=head[x];\n    head[x]=tot;\n}\nvoid spfa(){\n    \n\t//\u9488\u5bf9\u8be5\u9898\uff0c\u8981\u8f93\u51fa\u5404\u70b9\u5230\u5176\u4ed6\u70b9\u8ddd\u79bb\u6700\u77ed\u548c \n        queue<int> q;\n    \tfor(int i=1;i<=n;i++){//\u521d\u59cb\u5316\uff0c \n        \tdis[i]=0x7fffffff;\n        \tvis[i]=0;\n        }\n    \tq.push(k);//\u653e\u5165\u8d77\u70b9 \n    \tdis[k]=0;//\u81ea\u5df1\u5230\u81ea\u5df1\u4e3a0\uff1b \n    \tvis[k]=1;\n    \twhile(!q.empty()){ \n        \tint u=q.front();\n        \tq.pop();vis[u]=0;//\u5f39\u51fa\u961f\u9996 \n        \tfor(int i=head[u];i;i=edge[i].pre){\n            \tint v=edge[i].to;\n            \tif(dis[v]>dis[u]+edge[i].w){\n                \tdis[v]=dis[u]+edge[i].w;//\u66f4\u65b0\u6700\u5c0f\u503csta \n                \tif(!vis[v]){\n\t                    vis[v]=1;\n\t                    q.push(v);//\u91cd\u65b0\u653e\u5165\uff1b \n\t                }\n\t            }\n\t        }\n\t\t}\n\t\n}\nint main(){\n    cin>>n>>m;\n    for(int i=1;i<=m;i++){\n        cin>>aa[i]>>bb[i]>>cc[i];\n    }\n    cin>>d;\n    for(int i=1;i<=d;i++)\n    {\n    \tcin>>a>>b;\n    \tduan[a][b]=1;\n    \tduan[b][a]=1;\n    }\n    for(int i=1;i<=m;i++)\n    {\n    \tif(duan[aa[i]][bb[i]]==0)\n    \t{\n    \t\t# add(aa[i],bb[i],0);\n    \t\t# add(bb[i],aa[i],0);\n    \t}\n    \telse {\n    \t\t# add(aa[i],bb[i],cc[i]);\n    \t\t# add(bb[i],aa[i],cc[i]);\n    \t}\n    }\n    \n    cin>>k>>end;\n    spfa();\n    cout<<dis[end]<<endl;\n\treturn 0;    \n}\n```\n\n\n\u4f46\u662f\u6211\u8981\u63d0\u9192\u7684\u662f      \u8fd9\u662f\u65e0\u5411\u56fe   \u5e94\u8be5\u52a0\u8fb9\u4e24\u6b21\n\uff08\u6211\u56e0\u4e3a\u8fd9\u4e2a\u88ab\u780d\u638970\u5206\uff09\n\u8840\u6dcb\u6dcb\u7684\u6559\u8bad",
        "postTime": 1527668935,
        "uid": 87930,
        "name": "\u5434\u6587\u59ff",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3905 \u3010\u9053\u8def\u91cd\u5efa\u3011"
    },
    {
        "content": "\u7a81\u7136\u53d1\u73b0\u81ea\u5df1\u8fd8\u662f\u592anaive\u4e86\u3002\u3002\n\n\u4e00\u5f00\u59cb\u662f\u8fd9\u4e48\u60f3\u7684\uff1awoc\u597d\u6c34\u7684\u65b0\u9898\uff0cspfa\u8dd1\u51fa\u6700\u77ed\u8def\u8bb0\u5f55\u6700\u77ed\u8def\u4e0a\u7684\u70b9\uff0c\u7136\u540e\u770b\u770b\u54ea\u4e9b\u70b9\u4e4b\u95f4\u7684\u9053\u8def\u88ab\u780d\u6389\u4e86\uff0c\u52a0\u4e0a\u4e0d\u5c31\u5b8c\u4e86\u3002\n\n\u7136\u540eGG\u4e86\uff0c80\u5206\\*3\u3002\u3002\u3002\u3002\u540e\u6765\u7a81\u7136\u60f3\u5230\uff0c\uff0c\u4e07\u4e00\u6700\u77ed\u8def\u6709\u4e24\u6761\u5462\uff0c\u8fd9\u4e24\u6761\u4e2d\u6bcf\u6761\u90fd\u6709\u4e00\u4e2a\u9053\u8def\u88ab\u780d\uff0c\u4e00\u4e2a\u662f\u957f\u8fb9\u4e00\u4e2a\u662f\u77ed\u8fb9\u3002\u90a3\u4e48\u7a0b\u5e8f\u5c31\u4e0d\u4e00\u5b9a\u80fd\u8fd0\u884c\u51fa\u6b63\u786e\u7b54\u6848\u6765\u4e86\u3002\n\n\u900180\u5206\u540c\u5b66\u4e00\u7ec4\u6570\u636e\uff1a\n\n4 4\n1 2 2\n2 3 2\n1 4 1\n4 3 3\n2\n2 3\n4 3\n1 3\n\u4e8e\u662f\u7ecf\u8fc7\u6539\u8fdb\uff0c\u989d\u5916\u5f00\u4e86\u4e00\u4e2a\u53ebrep\u7684\u6570\u7ec4\uff0c\u8868\u793a\u4ece\u4e0a\u4e00\u4e2a\u70b9\u5230\u672c\u70b9\u9700\u8981\u4fee\u590d\u7684\u8def\u5f84\u548c\uff0c\u7136\u540e\u5c31\u975e\u5e38\u7684\u663e\u7136\u4e86\u3002\n\n\u672c\u9898\u7684\u96be\u70b9\u5c31\u662f\uff1a\u6700\u77ed\u8def\u53ef\u80fd\u4e0d\u6b62\u4e00\u6761\u554a\uff08\u6211\u8fd8\u662f\u592a\u5e74\u8f7b\u4e86\uff09\n\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio> \n#include <queue>\nusing namespace std;\nqueue <int> q;\nint n,m,a,b,c,S,t,p,ans;\nint s[110][110];\nint dis[110];\nint rep[110];\nbool flag[110][110];\nbool vis[10101];\nint head[10101];\nstruct Node\n{\n    int to;\n    int val;\n    int next;\n}e[1010101];\nvoid add_edge(int u,int v,int va)\n{\n    e[++head[0]].to=v;\n    e[head[0]].next=head[u];\n    e[head[0]].val=va;\n    head[u]=head[0];\n}\nvoid SPFA()\n{\n    q.push(S);\n    vis[S]=1;\n    for(int i=1; i<=n; i++)\n        rep[i]=dis[i]=1e9;\n    dis[S]=rep[S]=0;\n    while(!q.empty())\n    {\n        int x=q.front();\n        q.pop();\n        for(int i=head[x]; i!=0; i=e[i].next)\n            if(dis[x]+e[i].val<=dis[e[i].to])\n            {\n                dis[e[i].to]=dis[x]+e[i].val;\n                if(flag[x][e[i].to]==1)\n                    rep[e[i].to]=min(rep[e[i].to],rep[x]+e[i].val);\n                else\n                    rep[e[i].to]=min(rep[e[i].to],rep[x]);\n                if(!vis[e[i].to])\n                {\n                    vis[e[i].to]=1;\n                    q.push(e[i].to);\n                }\n            }\n        vis[x]=0;    \n    }\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1; i<=m; i++)\n    {\n        scanf(\"%d%d%d\",&a,&b,&c);\n        add_edge(a,b,c);\n        add_edge(b,a,c);\n    }\n    scanf(\"%d\",&p);\n    for(int i=1; i<=p; i++)\n    {\n        scanf(\"%d%d\",&a,&b);\n        flag[a][b]=flag[b][a]=1;\n    }\n    scanf(\"%d%d\",&S,&t);\n    SPFA();\n    printf(\"%d\",rep[t]);\n    return 0;\n}\n```",
        "postTime": 1502984522,
        "uid": 19215,
        "name": "OIer991215",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3905 \u3010\u9053\u8def\u91cd\u5efa\u3011"
    },
    {
        "content": "### \u8fd9\u662f\u9053\u6a21\u677f\u9898 ~~\u53ef\u6211\u8fd8\u662fWA\u4e86\u597d\u51e0\u6b21~~\n\u8fd9\u91cc\u7528\u7684\u662f**SPFA**\uff0c\u56e0\u4e3a\u6570\u636e\u5f88\u6c34\u3002  \n\u5177\u4f53\u601d\u8def\u5c31\u662f**SPFA+\u66b4\u529b**\uff08\u96fe  \n\u89c2\u5bdf\u9898\u76ee\u53ef\u77e5\uff0c\u6211\u4eec\u8981\u6c42\u7684\u662fA\u5230B**\u4fee\u590d\u8def\u5f84**\u7684\u6700\u77ed\u8def\uff0c\u800c\u4e0d\u662fA\u5230B\u7684\u6700\u77ed\u8def\u3002  \n\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0d\u8981**\u4fee\u590d\u7684\u9053\u8def\u7684\u957f\u7686\u4e3a0**  \n  \n------------\n#### \u8d34\u4ee3\u7801\uff08\u7801\u98ce\u5947\u602a\u4e14\u4e11 \uff1a \n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint v[1100],d[1100];\nint last[1100];\nstruct bian{\n\tint x,y,c,next;\n}a[110000];\nint len,n,m,s;\nint need[1100][1100];\nqueue<int >q;\nvoid ins(int x,int y,int c){   //\u5efa\u8fb9\n\tlen++;\n\ta[len].x=x;a[len].y=y;a[len].c=c;\n\ta[len].next=last[x];last[x]=len;\n}\nvoid spfa(int u){\n\td[u]=0;v[u]=1;q.push(u);\n\twhile(!q.empty()){\n\t\tint x=q.front();\n        q.pop();\n        v[x]=0;\n\t\tfor(int k=last[x];k;k=a[k].next){\n\t\t\tint y=a[k].y;\n\t\t\tif(d[y]>d[x]+a[k].c){\n\t\t\t\td[y]=d[x]+a[k].c;\n\t\t\t\tif(!v[y]) q.push(y),v[y]=1;\n\t\t\t}\n\t\t}\n\t}\n}\nint read(){    //\u840c\u65b0\u5f0f\u5feb\u8bfb\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){\n\t\tif(ch=='-') f=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9'){\n\t\tx=x*10+ch-'0';\n\t\tch=getchar();\n\t}\n\treturn f*x;\n}\nint main(){\n\tmemset(d,9999999,sizeof(d));\n\tscanf(\"%d%d\",&n,&m);\n\tfor(int i=1;i<=m;i++){   //\u5148\u8bfb\u5165\u8fb9\n\t\tint x=read();\n\t\tint y=read();\n\t\tint c=read();\n\t\tins(x,y,c);\n\t\tins(y,x,c);\n\t}\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=m;i++){    //need[]\u5b58\u50a8\u9700\u8981\u4fee\u5efa\u7684\u8fb9\n\t\tint x=read();\n\t\tint y=read();\n\t\tneed[x][y]=1;\n\t\tneed[y][x]=1;\n\t}\n\tfor(int i=1;i<=len;i++){   //\u4e0d\u8981\u4fee\u590d\u7684\u8fb9\u957f\u4e3a0\n\t\tint x=a[i].x;\n\t\tint y=a[i].y;\n\t\tif(!need[x][y]) a[i].c=0;\n\t}\n\tint x=read();\n\tint y=read();\n\tspfa(x);\n\tprintf(\"%d\",d[y]);  \n   \treturn 0;\n}\n```    \n**\u4e00\u4e2a\u7ec6\u8282**  \n\u8fd9\u662f\u53cc\u5411\u8fb9\uff01\u8bb0\u5f97\u8981\u5efa\u4e24\u6761\u8fb9\uff0c\u5426\u521930pt\u8b66\u544a  \n~~\u6211\u5c31\u5728\u8fd9\u91cc\u5361\u4e86\u4e00\u4e0b~~  \n\u8fd9\u4e2a\u849f\u84bb\u5f88\u5f31\uff0c\u4ed6\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\u3002\n",
        "postTime": 1572958896,
        "uid": 122784,
        "name": "_Blue_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3905 \u3010\u9053\u8def\u91cd\u5efa\u3011"
    },
    {
        "content": "\u697c\u4e0b\u4ee3\u7801\u7565\u957f\uff0c\u800c\u4e14\u8c8c\u4f3c\u8fd9\u8fb9\u6ca1\u6709STL\u515a\uff0cSTL\u5927\u6cd5\u597d233\n\u601d\u8def\u76f8\u8fd1\uff0c\u53ea\u4e0d\u8fc7\u662f\u5728SPFA\u8fc7\u7a0b\u4e2d\uff0c\u5224\u65ad\u4e00\u4e0b\u4e24\u70b9\u4e4b\u95f4\u8def\u5f84\u662f\u5426\u5b8c\u597d\n\u4ee3\u7801\n```cpp\n#include<cmath>\n#include<queue>\n#include<cstdio>\n#include<vector>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nconst int M=1500;\nstruct edge\n{\n    int to,cost;\n}now;\nvector<edge>v[M*2];\nint n,m,d,st,ed;\nint dis[M],jud[M][M],vis[M];\nvoid SPFA()\n{\n    fill(dis,dis+n+1,M<<5);\n    queue<int>q;\n    q.push(st);dis[st]=0;\n    while (q.size())\n    {\n        int u=q.front();\n        q.pop();vis[u]=0;\n        for (int i=0;i<v[u].size();i++)\n        {\n            int go=v[u][i].to;\n            int pay=v[u][i].cost;\n            if (!jud[u][go]||!jud[go][u]) pay=0;\n            if (dis[go]>dis[u]+pay) \n            {\n                dis[go]=dis[u]+pay;\n                if (!vis[go])\n                {\n                    vis[go]=1;q.push(go);\n                }\n            }\n        }\n    }\n    return ;\n}\nint main()\n{\n    scanf(\"%d%d\",&n,&m);int a,b,c;\n    for (int i=1;i<=m;i++)\n    {\n        scanf(\"%d%d%d\",&a,&b,&c);\n        now.to=b;now.cost=c;v[a].push_back(now);\n        now.to=a;now.cost=c;v[b].push_back(now);\n    }\n    scanf(\"%d\",&d);\n    for (int i=1;i<=d;i++)\n    {\n        scanf(\"%d%d\",&a,&b);jud[a][b]=jud[b][a]=1;\n    }\n    scanf(\"%d%d\",&st,&ed);\n    SPFA();cout<<dis[ed];\n    return 0;\n}\n```",
        "postTime": 1529467203,
        "uid": 71558,
        "name": "AcerMo",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3905 \u3010\u9053\u8def\u91cd\u5efa\u3011"
    },
    {
        "content": "## [~~\u4f20\u9001\u95e8~~](https://www.luogu.org/problem/P3905)\n\n### \u8fd9\u662f\u4e00\u4e2a\u6700\u77ed\u8def\u7684\u5e94\u7528\u9898~~\u4e00\u773c\u4e0b\u53bb\u4ee5\u4e3a\u662f\u751f\u6210\u6811~~\n\n\u8fd9\u9898\u7684\u89e3\u6cd5\u5c31\u662f\u628a\u6240\u6709\u574f\u6389\u7684\u8def\u5f84\u8fb9\u6743\u4fdd\u7559\uff0c\u628a\u5b8c\u597d\u7684\u8def\u5f84\u8fb9\u6743\u8d4b\u4e3a0\u3002\n\n\u4e3a\u4f55\uff1f\n\n\u56e0\u4e3a\u8fd9\u9898\u53ea\u8ba9\u6211\u4eec\u6c42 $A$ \u5230 $B$ \u4e4b\u95f4 **\u4fee\u590d\u7684\u9053\u8def\u957f\u5ea6**\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u628a\u8fb9\u6743\u6539\u4e86\uff0c\u518d\u8dd1\u4e00\u904d\u6700\u77ed\u8def\u5c31\u884c\u4e86\u3002\n\n\u7531\u4e8e\u8fd9\u9898\u6570\u636e\u8fc7\u5c0f\uff1a$2<n\u2264100$ \u8dd1 $Floyd$ \u662f\u53ef\u4ee5\u7684\u3002\u5982\u679c\u67d0\u4e9b\u540c\u5b66\u8ba4\u4e3a $SPFA$ \u548c $Dijkstra$ \u6bd4\u8f83\u76f4\u89c2\uff0c\u4e5f\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528\u3002\n\n\u4e0d\u5e9f\u8bdd\u4e86\uff0c\u4e0a\u4ee3\u7801\uff08\u4ee3\u7801\u91cc\u6709\u6ce8\u89e3\uff09\uff1a\n\n```cpp\n#include<cstdio>\n#include<queue>\n#include<cstring>\n#define inf 0x3f3f3f\n#define N 110\nusing namespace std;\nstruct note\n{\n    int to,val,next;\n}t[N*N];\nqueue<int> q;//\u7ecf\u5178\u961f\u5217\nbool vis[N],v[N*N];\nint head[N],cnt=0,dis[N],n,m,curr,w[N][N],s,e;\nvoid add(int a,int b,int c)\n{\n    t[++cnt].to=b;\n    t[cnt].next=head[a];\n    t[cnt].val=c;\n    head[a]=cnt;\n    w[a][b]=cnt;//\u8bb0\u5f55a\u548cb\u4e4b\u95f4\u7684\u8fb9\u7684\u7f16\u53f7\n}\nint main()\n{\n    memset(dis,inf,sizeof dis);\n    memset(vis,0,sizeof vis);\n    memset(v,1,sizeof v);//\u5f00\u59cb\u5b9a\u4e49\u6240\u6709\u8def\u5f84\u90fd\u662f\u5b8c\u597d\u65e0\u635f\u7684 \n    scanf(\"%d\\n%d\",&n,&m);\n    for (int i=1,a,b,c;i<=m;i++)\n    {\n        scanf(\"%d%d%d\",&a,&b,&c);\n        add(a,b,c);\n        add(b,a,c);\n    }\n    int T;\n    scanf(\"%d\",&T);\n    for (int x,y,z1,z2;T--;)\n    {\n    \tscanf(\"%d%d\",&x,&y);\n\t\tz1=w[x][y];//\u65b9\u4fbf\u5b58\u50a8 \n\t\tz2=w[y][x];//\u540c\u4e0a \n\t\tv[z1]=v[z2]=0;//\u4e24\u6761\u8fb9\u90fd\u635f\u574f\u4e86\n\t}\n\tfor (int i=1;i<=m*2;i++) if (v[i]) t[i].val=0;//\u6700\u91cd\u8981\u7684\u4e00\u6b65\uff1a\u628a\u6807\u8bb0\u5b8c\u597d\u7684\u8fb9\u8fb9\u6743\u8d4b\u4e3a0\n\t//\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u4ee5\u4e0b\u662f\u7ecf\u5178SPFA\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014 \n\tscanf(\"%d%d\",&s,&e);\n    q.push(s);//\u5165\u961f\n    dis[s]=0;\n    vis[s]=1;\n    for (;!q.empty();)//\u5982\u679c\u961f\u5217\u91cc\u8fd8\u6709\u6570\n    {\n    \tcurr=q.front();//\u53d6\u961f\u9996\n    \tq.pop();\n        vis[curr]=0;\n        for (int i=head[curr];i;i=t[i].next)//\u94fe\u5f0f\u524d\u5411\u661f\u641c\u8fb9\n        {\n            if (dis[t[i].to]>dis[curr]+t[i].val)//\u66f4\u65b0\n            {\n            \tdis[t[i].to]=dis[curr]+t[i].val;\n            \tif (!vis[t[i].to])//\u5165\u961f\n\t\t\t\t{\n\t\t\t\t\tq.push(t[i].to);\n            \t\tvis[t[i].to]=1;\n            \t}\n            }\n        }\n    }\n    printf(\"%d\",dis[e]);\n    return 0;\n}\n```",
        "postTime": 1563005841,
        "uid": 84705,
        "name": "CrazyDance",
        "ccfLevel": 6,
        "title": "\u6700\u77ed\u8def\u6a21\u677f\uff1f"
    },
    {
        "content": "\u770b\u4e86\u4e00\u4e0b\uff0c\u6ca1\u6709\n# SPFA+\u5806\n\u7684\u9898\u89e3\uff0c\u90a3\u6211\u5c31\u6765\u4e00\u7bc7\uff1b\n\n\u5173\u4e8eSPFA+\u5806\uff0c\u4ed6\u8ba9SPFA\u53c8\u6d3b\u4e86\u8fc7\u6765\u3002\n\n\u672c\u9898\u601d\u60f3\uff1a\u8dd1\u4e24\u8fb9SPFA\uff0c\u5176\u4e2d\u7b2c\u4e8c\u904d\u662f\u628a\u62c6\u6389\u7684\u8def\u7684\u6743\u503c\u8bbe\u4e3a0\uff1b\n\n\u4ee5\u4e0b\u662fAC\u4ee3\u7801\uff1a\n\n\n------------\n\n```\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<queue>\n#define M(x,y) make_pair(x,y)//\u4f5c\u7528\u7b49\u4e8e\u91cd\u8f7d\u8fd0\u7b97\u7b26\nconst int maxn=108;\nconst int maxm=5008;\nusing namespace std;\nint n,m,d,s,end,a,b,c,dis[maxn],vis[maxn],head[maxm],num_edge=0,x[maxm],y[maxm];\nstruct Edge{\n\tint next,to,dis;\n}edge[maxm];\npriority_queue < pair<int,int> > q;//\u5c0f\u6839\u5806\uff0c\u4e00\u5b9a\u8981\u8bbe\u6210pair\uff01\uff01\uff01\nvoid addedge(int from,int to,int dis)\n{\n\tedge[++num_edge].next=head[from];\n\tedge[num_edge].to=to;\n\tedge[num_edge].dis=dis;\n\thead[from]=num_edge;\n}\nvoid SPFA()\n{\n\tfor(int i=1;i<=n;++i)//\u521d\u59cb\u5316\n\t{\n\t\tdis[i]=1e10;\n\t\tvis[i]=0;\n\t}\n\tq.push(M(0,s));\n\tvis[s]=1;\n\tdis[s]=0;\n\twhile(!q.empty())\n\t{\n\t\tint u=q.top().second;//\u76f4\u63a5\u6c42\u51fa\u76ee\u524ddis\u7684\u6700\u5c0f\u503c\n\t\tq.pop();\n\t\tfor(int i=head[u];i;i=edge[i].next)\n\t\t{\n\t\t\tint v=edge[i].to;\n\t\t\tif(dis[v]>dis[u]+edge[i].dis)\n\t\t\t{\n\t\t\t\tdis[v]=dis[u]+edge[i].dis;\n\t\t\t\tif(vis[v]==0)\n\t\t\t\t{\n\t\t\t\t\tvis[v]=1;\n\t\t\t\t\tq.push(M(-dis[v],v)); //\u4f5c\u7528\u7b49\u4e8e\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff0c\u5c0f\u6839\u5806\uff0c\u52a0\u5165-dis[v]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=m;++i)\n\t{\n\t\tscanf(\"%d %d %d\",&a,&b,&c);\n\t\taddedge(a,b,c);\n\t\taddedge(b,a,c);//\u4e0d\u8981\u5fd8\u4e86\u662f\u65e0\u5411\u56fe\n\t}\n\tscanf(\"%d\",&d);\n\tfor(int i=1;i<=d;++i)\n\t{\n\t\tscanf(\"%d %d\",&x[i],&y[i]);\n\t}\n\tscanf(\"%d %d\",&s,&end);\n\tSPFA();\n\tint ans1=dis[end];//\u5904\u7406\u524d\u7684\u6700\u77ed\u8def\n\tfor(int i=1;i<=d;++i)\n\t{\n\t\taddedge(x[i],y[i],0);\n\t\taddedge(y[i],x[i],0);//\u4e0d\u8981\u5fd8\u4e86\u662f\u65e0\u5411\u56fe++\n\t}\n\tSPFA();\n\tint ans2=dis[end];//\u5904\u7406\u540e\u7684\u6700\u77ed\u8def\n\tprintf(\"%d\",ans1-ans2);\n\treturn 0;\n}\n```\n\u65f6\u7a7a\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/42342.png)",
        "postTime": 1541470091,
        "uid": 107651,
        "name": "\u98de\u96ea\u8fde\u5929",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3905 \u3010\u9053\u8def\u91cd\u5efa\u3011"
    },
    {
        "content": "1.\u5ba1\u9898\uff1a\u8fd9\u9053\u9898\u660e\u663e\u662f\u6700\u77ed\u8def;\n\n2.\u9009\u62e9\u7b97\u6cd5\uff1a\u7531\u4e8e\u6570\u636e\u6bd4\u8f83\u5c0f\uff0c~~\u800c\u4e14\u770b\u8d77\u6765\u6bd4\u8f83\u6c34(\u4f3c\u4e4e\u66b4\u9732\u4e86\u6211\u5728\u6c34\u8fd9\u4ef6\u4e8b)~~\uff0c\u6240\u4ee5SPFA\uff0cDijkstra\uff0cFloyd\u90fd\u53ef\u4ee5\u7528;\n\n\u4e0b\u9762\u7ed9\u51fa\u4e09\u79cd\u65b9\u6cd5\u7684\u4ee3\u7801\uff0c\u4ee5\u53ca\u4e00\u4e9b\u6ce8\u610f\u4e8b\u9879;\n\n### 1.SPFA\uff08\u4e0d\u5efa\u8bae\u5728\u6ca1\u6709\u8d1f\u8fb9\u6743\u7684\u65f6\u5019\u7528\uff09\n```c\n#include<bits/stdc++.h>\nusing namespace std;\n\nint n,m;\nint d;\nint c[118][118],Min[118];\nbool xc[118][118],vis[118];\n\nvoid SPFA(int st){\n\tqueue<int> q;\n\tq.push(st); Min[st]=0; vis[st]=1;\n\twhile(!q.empty())\n\t{\n\t\tint x=q.front();q.pop();\n\t\tvis[x]=0;\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tif(Min[i]>Min[x]+c[i][x])\n\t\t\t{\n\t\t\t\tMin[i]=Min[x]+c[i][x];\n\t\t\t\tif(!vis[i]) {vis[i]=1;q.push(i);}\n\t\t\t}\n\t}\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tmemset(c,0x7f7f7f,sizeof(c));\n\tmemset(Min,0x7f7f7f,sizeof(Min));\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u,v,w;\n\t\tscanf(\"%d%d%d\",&u,&v,&w);\n\t\txc[u][v]=xc[v][u]=1;\n\t\tc[u][v]=c[v][u]=w;\n\t}\n\tscanf(\"%d\",&d);\n\tfor(int i=1;i<=d;i++)\n\t{\n\t\tint u,v;\n\t\tscanf(\"%d%d\",&u,&v);\n\t\txc[u][v]=xc[v][u]=0;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<i;j++)\n\t\t\tif(xc[i][j]) c[i][j]=c[j][i]=0;\n\tint a,b;\n\tscanf(\"%d%d\",&a,&b);\n\tSPFA(a);\n\tprintf(\"%d\\n\",Min[b]);\n\treturn 0;\n}\n```\nSPFA\u6ce8\u610f\u8981\u5224\u65ad\u90a3\u6761\u8fb9\u6709\u6ca1\u6709\u5728\u961f\u5217\u91cc\u9762;\n### 2.Dijkstra\n```c\n#include<bits/stdc++.h>\nusing namespace std;\n\ntypedef pair<int,int> PI;\nint n,m,a,b,d;\nint Min[118],c[118][118];\nbool vis[118],xc[118][118];\n\nvoid dijkstra(int st){\n\tpriority_queue<PI,vector<PI>,greater<PI> >q;//\u5efa\u5c0f\u6839\u5806,\u5f53\u7136\u5982\u679c\u4f7f\u7528\u5927\u6839\u5806poirority_queue<PI>q\u5b58\u5165\u65f6\u53d6\u8d1f\u6570\u4e5f\u53ef\u4ee5;\n\tq.push(PI(0,st)); Min[st]=0;\n\twhile(!q.empty())\n\t{\n\t\tint x=q.top().second;q.pop();\n\t\tif(vis[x]) continue; vis[x]=1;\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tif(Min[i]>Min[x]+c[i][x])\n\t\t\t{\n\t\t\t\tMin[i]=Min[x]+c[i][x];\n\t\t\t\tq.push(PI(Min[i],i));\n\t\t\t}\n\t}\n}\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tmemset(c,0x7f7f7f,sizeof(c));\n\tmemset(Min,0x7f7f7f,sizeof(Min));\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u,v,w;\n\t\tscanf(\"%d%d%d\",&u,&v,&w);\n\t\txc[u][v]=xc[v][u]=1;\n\t\tc[u][v]=c[v][u]=w;\n\t}\n\tscanf(\"%d\",&d);\n\tfor(int i=1;i<=d;i++)\n\t{\n\t\tint u,v;\n\t\tscanf(\"%d%d\",&u,&v);\n\t\txc[u][v]=xc[v][u]=0;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<i;j++)\n\t\t\tif(xc[i][j]) c[i][j]=c[j][i]=0;\n\tscanf(\"%d%d\",&a,&b);\n\tdijkstra(a);\n\tprintf(\"%d\\n\",Min[b]);\n\treturn 0;\n}\n```\n1.Dijkstra\u6ce8\u610f\u8981\u9644\u521d\u503c\uff0cMin[st]=0;\n\n2.\u8981\u5f00pair\uff0c\u8981\u5f00pair\uff0c\u8981\u5f00pair\uff0c\u91cd\u8981\u7684\u4e8b\u60c5\u8bf4\u4e09\u904d\uff01\uff01\uff01\n### 3.Floyd\n```c\n#include<bits/stdc++.h>\nusing namespace std;\n\nint n,m,a,b,d;\nint c[118][118];\nbool xc[118][118];\n\nint main(){\n\tscanf(\"%d%d\",&n,&m);\n\tmemset(c,0x3f3f3f3f,sizeof(c));//\u8fd9\u91cc\u6ce8\u610f\u4e0d\u8981\u6ea2\u51fa\uff0c\u5f000x7f7f7f\u4f1a\u6ea2\u51fa\uff01\uff01\uff01\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u,v,w;\n\t\tscanf(\"%d%d%d\",&u,&v,&w);\n\t\txc[u][v]=xc[v][u]=1;\n\t\tc[u][v]=c[v][u]=w;\n\t}\n\tscanf(\"%d\",&d);\n\tfor(int i=1;i<=d;i++)\n\t{\n\t\tint u,v;\n\t\tscanf(\"%d%d\",&u,&v);\n\t\txc[u][v]=xc[v][u]=0;\n\t}\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<i;j++)\n\t\t\tif(xc[i][j]) c[i][j]=c[j][i]=0;\n\tscanf(\"%d%d\",&a,&b);\n\tfor(int k=1;k<=n;k++)\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\tif(c[i][k]+c[k][j]<c[i][j]) c[i][j]=c[i][k]+c[k][j];\n\tprintf(\"%d\\n\",c[a][b]);\n\treturn 0;\n}\n```\n1.\u6240\u6709\u7684\u9644\u521d\u503c\u90fd\u8981\u6ce8\u610f\u4e0d\u8981\u6ea2\u51fa\uff01\n\n2.\u5982\u679c\u4f7f\u7528\u94fe\u5f0f\u5411\u524d\u661f\u8981\u5f00\u4e24\u500d\u8fb9\uff01\n\n3.\u8c8c\u4f3c\u53bb\u8fb9\u8fd8\u6709dalao\u7684\u65b9\u6cd5\u6bd4\u6211\u7684\u66f4\u5468\u5230\uff0c\u6240\u4ee5\u672c\u9898\u89e3\u4ec5\u4f9b\u53c2\u8003\uff01",
        "postTime": 1541428391,
        "uid": 93862,
        "name": "\u4e03\u559c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3905 \u3010\u9053\u8def\u91cd\u5efa\u3011"
    },
    {
        "content": "# \u9898\u76ee\uff1ahttps://www.luogu.org/problemnew/show/P3905\n\n# \u5206\u6790\uff1a\n\u6b64\u9898\u662f\u663e\u7136\u7684\u6700\u77ed\u8def\u7b97\u6cd5\uff0c\u53ea\u662f\u770b\u5230\u4e00\u8d77\u5220\u6389\u7684\u4e00\u5806\u8fb9\u611f\u5230~~\u5341\u5206~~\u68d8\u624b\uff0c\u800c\u4e14\u8fd8\u8981\u6c42\u51fa\u7684\u662f\u6700\u77ed\u6dfb\u52a0\u8fb9\u7684\u603b\u957f\u5ea6\n\n\u4f46\u5982\u679c\u4ed4\u7ec6\u89c2\u5bdf\u5c31\u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u4eec\u5176\u5b9e\u5e76\u4e0d\u7528\u4e00\u4e2a\u4e00\u4e2a\u7684\u5168\u90e8\u679a\u4e3e\uff0c\u53ea\u9700\u8981\u628a\u6dfb\u52a0\u7684\u8fb9\u505a\u6700\u77ed\u8def\u5c31\u884c\u4e86\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u9996\u5148\u628a\u6570\u7ec4\u521d\u59cb\u5316\u4e3a\u4e00\u4e2a\u8f83\u5927\u7684\u6570\uff0c\u7136\u540e\u6bcf\u8bfb\u5165\u4e00\u6761\u8fb9\uff0c\u5c31\u628a\u6b64\u8fb9\u7684\u6743\u503c\u8bb0\u5f55\uff0c\u4f46\u8fd8\u8981\u628a\u5b83\u6e05\u96f6\u3002\n\n\u4e3a\u4ec0\u4e48\u5462\uff1f\n\n\u56e0\u4e3a\u6211\u4eec\u6e05\u96f6\u76f8\u5f53\u4e8e\u4e0d\u8003\u8651\u6b64\u8fb9\u7684\u6743\u503c\uff0c\u4f46\u53c8\u53ef\u4ee5\u7ecf\u8fc7\u8fd9\u6761\u8fb9\uff0c\u6709\u6548\u7684\u80fd\u4fdd\u7559\u4e0b\u5220\u53bb\u7684\u8fb9\uff0c\u6765\u4ec5\u4ec5\u8003\u8651\u88ab\u5220\u8fb9\u7684\u6700\u77ed\u8def\u3002\n\n\u7136\u540e\u8bfb\u5165\u5220\u6389\u7684\u8fb9\uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u628a\u90a3\u4e9b\u5220\u53bb\u7684\u8fb9\u8d4b\u4e0a\u539f\u6765\u7684\u6743\u503c\uff0c\u8fdb\u884c\u8ba1\u7b97\u5373\u53ef\u3002\n\nwhat\uff1f\u8fd9\u4e0d\u5c31\u662f\u6700\u77ed\u8def\u6a21\u677f\u5417\uff1f\n\n## \u8fd8\u6709\u5462\uff1f\n\n\u6ce8\u610f\u5230\u6570\u636e\u8303\u56f4\uff0c\n\n$n\\leq100$?\n\n\u4e0d\u5c31\u662fFloyd\u5e38\u89c1\u7684\u6570\u636e\u8303\u56f4\u5417\uff1f\n\n\u4e8e\u662ffloyd\u90fd\u5f80\u4e0a\u5957\u4e86\u3002\u3002\u3002\n\n\u4e8e\u662f\u6b64\u9898\u7ecf\u8fc7\u8f6c\u6362\uff0c\u5c31\u6210\u4e3a\u4e86\u4e00\u4e2a\u53ef\u7528Floyd\uff0cdijkstra\uff0cspfa\u7b49\u591a\u79cd\u6700\u77ed\u8def\u7b97\u6cd5\u89e3\u51b3\u7684\u677f\u5b50\u9898\u4e86\u3002\u3002\u3002\n\n# \u4e0b\u9762\u7ed9\u51fa[Floyd\u4ee3\u7801\uff1a](https://blog.csdn.net/kkkksc03/article/details/83588613)\n\n\u5173\u4e8e\u5176\u4ed6\u7684\u505a\u6cd5\uff0c\u8bf7\u5230https://blog.csdn.net/kkkksc03\n\uff0c\n\u4ee5\u67e5\u770b\u66f4\u591a\u505a\u6cd5",
        "postTime": 1540985575,
        "uid": 45475,
        "name": "ShineEternal",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3905 \u3010\u9053\u8def\u91cd\u5efa\u3011"
    },
    {
        "content": "[P3905 \u9053\u8def\u91cd\u5efa](https://www.luogu.org/problemnew/show/P3905)\n\n\t\u770b\u5230\u9898\u89e3\u91cc\u6709\u597d\u591a\u5f88\u597d\u7684\u60f3\u6cd5\uff0c\u5982\u628a\u672a\u635f\u574f\u7684\u8def\u7684\u6743\u8d4b\u4e3a0\u7b49\u3002\n\n\u4f46\u6211\u4eec\u4e5f\u53ef\u4ee5\u5148\u5f00\u4e00\u4e2aprev\u6570\u7ec4\uff0c\u518d\u8dd1\u4e00\u904dDijkstra\uff0c\u7528prev\u6570\u7ec4\u8bb0\u5f55\u6bcf\u6761\u5355\u6e90\u6700\u77ed\u8def\u5f84\u7684\u8282\u70b9\u7684\u524d\u8d8b\uff0c\u8fd9\u6837\u5c31\u80fd\u5728\n****O(|E|)****\u7684\u65f6\u95f4\u5185\u8fdb\u884c****\u8def\u5f84\u8fd8\u539f****\u3002\u6700\u540e\u5728\u8def\u5f84\u8fd8\u539f\u7684\u8fc7\u7a0b\u4e2d\u7edf\u8ba1\u635f\u574f\u7684\u9053\u8def\u7684\u6743\u7684\u548c\uff0c\u8f93\u51fa\u5c31\u884c\u4e86\u3002~~\uff08\u4f46\u6211\u672c\u4eba\u611f\u89c9\u8fd9\u4e2a\u5e26\u4e00\u70b9\u8d2a\u5fc3\u7684\u7b97\u6cd5\u4e0d\u662f\u6b63\u89e3\uff09~~\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n\t#include <bits/stdc++.h>\n\tusing namespace std;\n\tconst int MAXN=1000;\n\tint cost[MAXN+2][MAXN+2],prev[MAXN+2];\n\tint n,m,t,a,b,d[MAXN+2];\n\tbool bl[MAXN+2],bre[MAXN+2][MAXN+2];\n    \n\tvoid dijk(){ Dijkstra\u5927\u6cd5\u597d\n\t\td[a]=0;\n\t\twhile(1){\n\t\t\tint v=-1;\n\t\t\tfor(int u=1;u<=n;++u)\n\t\t\t\tif(!bl[u] && (v==-1 || d[v]>d[u])) v=u;\n\t\t\t\tif(v==-1) break;\n        \t\tbl[v]=1;\n        \t\tfor(int u=1;u<=n;++u){\n            \t\tif(d[u]>d[v]+cost[v][u]){\n                \t\tprev[u]=v;  //**\u8bb0\u5f55\u6bcf\u4e2a\u8282\u70b9\u7684\u524d\u8d8b**\n                \t\td[u]=d[v]+cost[v][u];\n            \t\t}\n        \t\t}\n    \t}\n\t}\n\n\tint main(){\n    \tmemset(d,0x7f,sizeof(d));\n    \tmemset(cost,0x7f,sizeof(cost));\n    \tmemset(prev,-1,sizeof(prev)); //\u5343\u4e07\u522b\u5fd8\u4e86\u521d\u59cb\u5316\n    \tcin>>n>>m;\n    \tfor(int i=1;i<=m;++i){\n        \tint x,y,z;\n        \tcin>>x>>y>>z;\n        \tcost[x][y]=cost[y][x]=z;\n    \t}\n    \tcin>>t;\n    \tfor(int i=1;i<=t;++i){\n        \tint x,y;\n        \tcin>>x>>y;\n        \tbre[x][y]=bre[y][x]=1;\n    \t}\n    \tcin>>a>>b;\n    \tdijk();\n    \tint now=b,ans=0;\n    \tfor(;prev[now]!=-1;now=prev[now]) //\u8def\u5f84\u8fd8\u539f\n        \tif(bre[now][prev[now]]==1) ans+=cost[prev[now]][now];\n    \tcout<<ans<<endl;\n    \treturn 0;\n\t}\n```",
        "postTime": 1534154812,
        "uid": 51308,
        "name": "Jith_2004",
        "ccfLevel": 7,
        "title": "20180813\u4fee\u6539\u540e"
    },
    {
        "content": "\u697c\u4e0b\u90fd\u662fdalao\u554a\uff0c\u8ba9\u672c\u849f\u84bb~~\u770b\u90fd\u770b\u4e0d\u61c2~~\u745f\u745f\u53d1\u6296\n\n\u521a\u770b\u5230\u8fd9\u9053\u9898\u601d\u8def\u4e5f\u662f\u4e0e\u697c\u4e0b\u76f8\u4f3c\uff0c\u5c06\u672a\u88ab\u7834\u574f\u7684\u9053\u8def\u8fb9\u6743\u8d4b\u4e3a0\u3002\u4f46\u5728\u5982\u4f55\u5c06\u672a\u88ab\u7834\u574f\u9053\u8def\u8d4b0\u7684\u95ee\u9898\u4e0a\uff0c\u6211\u7528\u4e86**\u4e24\u4e2a\u4e8c\u7ef4\u77e9\u9635**\uff1agragh0\u4e0egragh\u3002gragh0\u521d\u59cb\u4e3a0\uff0cgragh\u521d\u59cb\u4e3a\u6b63\u65e0\u7a77\uff0c\u8f93\u5165\u6240\u6709\u9053\u8def\u65f6gragh0\u4e0egragh\u90fd\u88ab\u8d4b\u503c\uff0c\u5728\u8f93\u5165\u88ab\u7834\u574f\u9053\u8def\u65f6\u5c06\u5bf9\u5e94gragh0\u8d4b\u4e3a0\uff0c\u6700\u540e**\u7528gragh\u7684\u5bf9\u5e94\u503c\u51cf\u53bbgragh0\u7684\u5bf9\u5e94\u503c**\uff0c\u5c31\u5f97\u5230\u4e86\u6211\u4eec\u60f3\u8981\u7684\u56fe\uff0c\u518d\u52a0\u4e0aSPFA\u5927\u6cd5\u5c31AC\u4e86\n\n**Talk is cheap show me the code.**\n\n\n\n------------\n\n\n```\n#include <iostream>\n#include <queue>\n#define MAX 105\n#define INF 10005\n\nusing namespace std;\nint v,e,v1,v2,w,a,b,dis[MAX],gragh0[MAX][MAX],gragh[MAX][MAX],d;\nbool visit[MAX];\nvoid init()\n{\n    for(int i=1;i<=v;i++)\n    {\n        for(int j=1;j<=v;j++)\n            gragh[i][j]=INF;\n        gragh[i][i]=0;\n        dis[i]=INF;\n    }\n\n}\nvoid create_gragh()\n{\n    for(int i=1;i<=e;i++)\n    {\n        cin>>v1>>v2>>w;\n        gragh0[v1][v2]=gragh0[v2][v1]=w;\n        gragh[v1][v2]=gragh[v2][v1]=w;\n    }\n    cin>>d;\n    for(int i=1;i<=d;i++)\n    {\n        cin>>v1>>v2;\n        gragh0[v1][v2]=gragh0[v2][v1]=0;\n    }\n    for(int i=1;i<=v;i++)\n        for(int j=1;j<=v;j++)\n            gragh[i][j]-=gragh0[i][j];\n            /*\u4e24\u4e2a\u6570\u7ec4\u76f8\u51cf\uff0c\u56e0\u4e3a\u88ab\u7834\u574f\u9053\u8def\u7684gragh0\u88ab\u6e05\u96f6\uff0c\n            \u6240\u4ee5gragh\u4e2d\u7684\u88ab\u7834\u574f\u9053\u8def\u8fd8\u662f\u539f\u6837\n            \u800cgragh0\u4e2d\u7684\u672a\u88ab\u7834\u574f\u9053\u8def\u672a\u88ab\u6e05\u96f6\n            \u6240\u4ee5gragh\u4e0egragh0\u4e2d\u7684\u672a\u88ab\u7834\u574f\u9053\u8def\u76f8\u4e92\u62b5\u6d88\uff0c\u8fb9\u6743\u53d8\u4e3a0*/\n}\nvoid spfa(int s)\n{\n    queue<int> q;\n    q.push(s);\n    dis[s]=0;\n    visit[s]=true;\n    while(!q.empty())\n    {\n        int index=q.front();\n        q.pop();\n        visit[index]=false;\n        for(int i=1;i<=v;i++)\n        {\n            if(dis[i]>dis[index]+gragh[index][i])\n            {\n                dis[i]=dis[index]+gragh[index][i];\n                if(!visit[i])\n                {\n                    q.push(i);\n                    visit[i]=true;\n                }\n            }\n        }\n    }\n}\nint main()\n{\n    cin>>v>>e;\n    init();\n    create_gragh();\n    cin>>a>>b;\n    spfa(a);\n    cout<<dis[b]<<endl;\n}\n\n```",
        "postTime": 1534073490,
        "uid": 33094,
        "name": "heaven\u71d5\u8fc7\u7559\u75d5",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3905 \u3010\u9053\u8def\u91cd\u5efa\u3011"
    },
    {
        "content": "\u6839\u636e\u9898\u610f\u8bf4\u660e\uff0c\u4eceA\u57ce\u5e02\u5230B\u57ce\u5e02\uff0c\u56fd\u738b\u4e0d\u5728\u4e4e\u901a\u8fc7\u4e86\u591a\u8fdc\u7684**\u672a\u635f\u574f**\u7684\u9053\u8def\uff0c\u53ea\u5728\u4e4e\u201c\u901a\u8fc7\u201d\u4e86\u591a\u8fdc\u7684**\u635f\u574f**\u7684\u9053\u8def\u3002\u56e0\u6b64**\u672a\u635f\u574f**\u7684\u9053\u8def\u7684\u957f\u5ea6\u5bf9\u4e8e\u6700\u7ec8\u7684\u7b54\u6848\u5e76\u6ca1\u6709\u5f71\u54cd\uff0c\u8bb0\u4e3a0\uff0c\u800c**\u635f\u574f**\u7684\u9053\u8def\u4fdd\u7559\u539f\u957f\uff0c\u518d\u8dd1\u6700\u77ed\u8def\u3002\u8fd9\u91cc\u540c\u65f6\u653e\u4e86\u5806\u4f18\u5316Dijkstra\u7684 \u548c SLF\u4f18\u5316SPFA\u7684\u4ee3\u7801\u3002\n```cpp\n#include <cstdio>\n#include <string>\n#include <cstring>\n#include <queue>\n#define MAXN 105\n#define MAXM 10005\nusing namespace std;\nint n, m, d, num_edge, start, finish;\nint head[MAXN]; //\u6570\u7ec4\u6a21\u62df\u90bb\u63a5\u8868\u7684head\u6570\u7ec4 \nint dis[MAXN]; //\u4e00\u4e2a\u70b9\u5230\u8d77\u70b9\u7684\u8ddd\u79bb \nbool in_queue[MAXN]; //SPFA\u65f6\u8bb0\u5f55\u5143\u7d20\u662f\u5426\u5728\u961f\u5217\u4e2d \nstruct add\n{\n\tint next, to, len_temp, len; //len_temp\u4e34\u65f6\u8bb0\u5f55\u957f\u5ea6 \n\tbool broken; //\u635f\u574f\u7684\u9053\u8def\u8bb0\u4e3a1\uff0c\u672a\u635f\u574f\u7684\u8bb0\u4e3a0 \n}edge[MAXM];\nstruct node\n{\n\tint num, d; //dijkstra\u4e2d\u8bb0\u5f55\u961f\u5217\u4e2d\u4e00\u4e2a\u5143\u7d20\u7684\u7f16\u53f7\u548c\u5b83\u5bf9\u5e94\u7684dis \n\tbool operator <(const node& temp)const\n\t{\n\t\treturn d>temp.d; //\u4f18\u5148\u961f\u5217\u4f18\u5316dijkstra\u65f6\u7684\u91cd\u8f7d\u8fd0\u7b97\u7b26 \n\t}\n};\ninline int read() //\u5feb\u8bfb \n{\n\tint sum = 0;\n\tchar c = getchar();\n\twhile(!isdigit(c)) c = getchar();\n\twhile(isdigit(c))\n\t{\n\t\tsum = (sum<<3)+(sum<<1)+(c&15);\n\t\tc = getchar();\n\t}\n\treturn sum;\n}\ninline void add_edge(int from, int to, int len_temp) //\u6570\u7ec4\u6a21\u62df\u90bb\u63a5\u8868 \u52a0\u8fb9 \n{\n\tedge[++num_edge].to = to;\n\tedge[num_edge].next = head[from];\n\tedge[num_edge].len_temp = len_temp; \n\thead[from] = num_edge;\n}\ninline void update_edge(int from, int to) //\u66f4\u6539\u8def\u5f84\u957f\u5ea6 \n{\n\tfor(int i=head[from]; i; i=edge[i].next) //\u904d\u5386\u67e5\u627e\u635f\u574f\u9053\u8def\u6240\u5bf9\u5e94\u7684\u7f16\u53f7 \n\t\tif(edge[i].to == to) \n\t\t{\n\t\t\tedge[i].broken = 1;\n\t\t\tedge[i].len = edge[i].len_temp;\n\t\t\treturn;\n\t\t}\n}\ninline void dijkstra(int s)\n{\n\tmemset(dis, 127, sizeof dis); //\u5c06dis\u6570\u7ec4\u8d4b\u4e88\u6781\u5927\u503c \n\tdis[s] = 0;\n\tpriority_queue<node> q;\n\tq.push((node){s, 0});\n\twhile(!q.empty())\n\t{\n\t\tnode temp = q.top(); q.pop();\n\t\tint u = temp.num;\n\t\tif(dis[u] != temp.d) continue; \n\t\tfor(int i=head[u]; i; i=edge[i].next)\n\t\t{\n\t\t\tint v = edge[i].to;\n\t\t\tif(dis[v] > dis[u]+edge[i].len)\n\t\t\t{\n\t\t\t\tdis[v] = dis[u]+edge[i].len;\n\t\t\t\tq.push((node){v, dis[v]});\n\t\t\t}\n\t\t}\t\n \t}\n}\ninline void spfa(int s)\n{\n\tmemset(dis, 127, sizeof dis);\n\tdis[s] = 0;\n\tdeque<int> q;\n\tq.push_back(s);\n\tin_queue[s] = 1;\n\twhile(!q.empty())\n\t{\n\t\tint u = q.front(); q.pop_front();\n\t\tin_queue[u] = 0;\n\t\tfor(int i=head[u]; i; i=edge[i].next)\n\t\t{\n\t\t\tint v = edge[i].to;\n\t\t\tif(dis[v] > dis[u]+edge[i].len)\n\t\t\t{\n\t\t\t\tdis[v] = dis[u]+edge[i].len;\n\t\t\t\tif(!in_queue[v])\n\t\t\t\t{\n\t\t\t\t\tif(!q.empty() && dis[v]<dis[q.front()])\n\t\t\t\t\t\tq.push_front(v);\n\t\t\t\t\telse q.push_back(v); //SLF\u4f18\u5316SPFA \n\t\t\t\t\tin_queue[v] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\t\n}\nint main()\n{\n\tn = read(), m = read();\n\tfor(int i=1; i<=m; ++i)\n\t{\n\t\tint x = read(), y = read(), z = read();\n\t\tadd_edge(x, y, z); //\u9053\u8def\u662f\u53cc\u5411\u7684 \n\t\tadd_edge(y, x, z);\n\t}\n\td = read();\n\tfor(int i=1; i<=d; ++i)\n\t{\n\t\tint x = read(), y = read();\n\t\tupdate_edge(x, y); //\u5c06\u635f\u574f\u7684\u9053\u8def\u957f\u5ea6\u66f4\u65b0\u4e3a\u539f\u957f \n\t\tupdate_edge(y, x); //\u7531\u4e8e\u662f\u53cc\u5411\u8fb9\uff0c\u56e0\u6b64\u4e24\u4e2a\u65b9\u5411\u5747\u8981\u66f4\u65b0 \n\t}\n\tfor(int i=1; i<=n; ++i)\n\t\tfor(int j=head[i]; j; j=edge[j].next)\n\t\t\tif(!edge[j].broken) edge[j].len = 0; //\u904d\u5386\uff0c\u5c06\u672a\u635f\u574f\u7684\u9053\u8def\u957f\u5ea6\u8d4b\u4e88\u4e3a0 \n\tstart = read(), finish = read();\n\t//dijkstra(start);\n\tspfa(start);\n\tprintf(\"%d\\n\", dis[finish]);\n\treturn 0;\t\n}\n\n```",
        "postTime": 1533379176,
        "uid": 68001,
        "name": "AugustineYang",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3905 \u3010\u9053\u8def\u91cd\u5efa\u3011"
    },
    {
        "content": "### \u6b64\u9898\u8981\u628a\u6ca1\u6709\u88ab\u7834\u574f\u7684\u9053\u8def\u7684\u8ddd\u79bb\u770b\u505a0\uff0c\u518d\u7528spfa\u7b97\u6cd5\u8ba1\u7b97\u91cd\u8981\u57ce\u5e02\u4e24\u70b9\u95f4\u8ddd\u79bb\uff01 \n#### \u5229\u7528\u524d\u5411\u5fc3\u5b58\u50a8\u8def\u5f84\n\u4ee3\u7801\u5982\u4e0b\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <queue>\n#include <algorithm>\n#define N 100 + 10\n#define M 5000 + 10\nusing namespace std;\nint n, m, p[N], e_num, bomb, start, _end, dist[N];\nbool bad[N][N], fg[N];\n\n//\u524d\u5411\u5fc3\u50a8\u5b58\u8def\u5f84\nstruct Edge\n{\n    int b, nt, w;\n}e[M];\n\n//\u524d\u5411\u5fc3\u6dfb\u52a0\u8def\u5f84\nvoid add(int x, int y, int z)\n{\n    e_num++;\n    e[e_num].b = y;\n    e[e_num].w = z;\n    e[e_num].nt = p[x];\n    p[x] = e_num;\n}\n\nvoid spfa(int x)\n{\n    queue<int> q;\n    dist[x] = 0;\n    fg[x] = true;\n    q.push(x);\n    while(!q.empty())\n    {\n        x = q.front();\n        q.pop();\n        fg[x] = false;\n        int edge = p[x];\n        while (edge > 0)\n        {\n            int t = e[edge].b;\n            if (!bad[x][t]) e[edge].w = 0;\n            if (dist[t] - dist[x] > e[edge].w)\n            {\n                dist[t] = dist[x] + e[edge].w;\n                if (!fg[t])\n                {\n                    fg[t] = true;\n                    q.push(t);\n                }\n            }\n            edge = e[edge].nt;\n        }\n    }\n}\n\nint main()\n{\n    scanf(\"%d %d\", &n, &m);\n    for (int i = 0; i < m; i++)\n    {\n        int a, b, c;\n        scanf(\"%d %d %d\", &a, &b, &c);\n        add(a, b, c);\n        add(b, a, c);\n    }\n    scanf(\"%d\", &bomb);\n    for (int i = 0; i < bomb; i++)\n    {\n        int a, b;\n        scanf(\"%d %d\", &a, &b);\n        bad[a][b] = true;\n        bad[b][a] = true;\n    }\n    memset(dist, 127, sizeof(dist));\n    //memset\u8d4b127\u662fmemset\u53ef\u8d4b\u7684\u6700\u5927\u503c\n    scanf(\"%d %d\", &start, &_end);\n    spfa(start);\n    printf(\"%d\", dist[_end]);\n    return 0;\n}\n\n```",
        "postTime": 1531124451,
        "uid": 76226,
        "name": "yy1695651",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3905 \u3010\u9053\u8def\u91cd\u5efa\u3011"
    },
    {
        "content": "~~~\n/*\n\u8fd9\u9053\u9898\u6574\u4f53\u4e0d\u662f\u592a\u96be\u3002\u7528SPFA\u7b97\u6cd5\u5199\u7684\u3002\n\u96be\u5ea6\u8fd8\u53ef\u4ee5(\u4e2a\u4eba\u8ba4\u4e3a\u96be\u5ea6\u5728\u666e\u53ca-\u7684\u96be\u5ea6)\n\u9996\u53d1\u9898\u89e3\uff0c\u6709\u95ee\u9898\u8bf7\u5927\u4f6c\u4eec\u6307\u51fa\u3002\u8c22\u8c22\uff01 \n*/ \n#include<iostream>//\u672c\u9898\u65e0\u9700\u4f7f\u7528\u5176\u4ed6\u5934\u6587\u4ef6 \nusing namespace std;\nint n,m,d;\nint a[110][110];//\u8bb0\u5f55\u6bcf\u4e24\u4e2a\u57ce\u5e02\u4e4b\u95f4\u7684\u8ddd\u79bb \nbool broken[110][110];//\u8bb0\u5f55\u4e24\u4e2a\u57ce\u5e02\u4e4b\u95f4\u662f\u5426\u88ab\u7834\u574f \nint A,B;\nint main()\n{\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tbroken[i][j]=true;//\u5c06\u6bcf\u4e24\u4e2a\u9053\u8def\u4e4b\u95f4\u8bb0\u4e3a\u672a\u88ab\u7834\u574f \n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t\ta[i][j]=0x3f3f3f3f;//\u8ba9\u6ca1\u6709\u9053\u8def\u7684\u4e24\u4e2a\u57ce\u5e02\u4e4b\u95f4\u7684\u8ddd\u79bb\u7f6e\u4e3a\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u6570\u5b57(0x3f3f3f3f)\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x,y,z;\n\t\tcin>>x>>y>>z;//\u8f93\u5165x,y,z;(x\u4e3a\u9898\u4e2di,y\u4e3a\u9898\u4e2dj,z\u4e3a\u9898\u4e2dk)\n\t\ta[x][y]=z;//\u5c06\u8fd9\u4e24\u4e2a\u57ce\u5e02(i\u548cj)\u7684\u8ddd\u79bb\u7f6e\u4e3a k\n\t\ta[y][x]=z;\n\t}\n\tcin>>d;\n\tfor(int i=1;i<=d;i++)\n\t{\n\t\tint x,y;\n\t\tcin>>x>>y;\n\t\tbroken[x][y]=false;//\u8f93\u5165\u4e24\u57ce\u4e4b\u95f4\u662f\u5426\u88ab\u7834\u574f \n\t\tbroken[y][x]=false;\n\t}\n\tcin>>A>>B;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t{\n\t\t\tif(a[i][j]!=0x3f3f3f3f&&broken[i][j]==true)\n\t\t\t\ta[i][j]=0;//\u5982\u679c\u6b64\u5904\u672a\u88ab\u7834\u574f\uff0c\u5219\u4e0d\u9700\u8981\u7ef4\u4fee\n\t\t}\n\tfor(int k=1;k<=n;k++)\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t\ta[i][j]=min(a[i][k]+a[k][j],a[i][j]);//SPFA(\u8bb0\u5f55\u4e24\u5730\u4e4b\u95f4\u6700\u77ed\u8ddd\u79bb) \n\tcout<<a[A][B]<<endl;//\u8f93\u51faAB\u4e24\u5730\u4e4b\u95f4\u7684\u6700\u77ed\u8ddd\u79bb \n\treturn 0;\n}\n~~~",
        "postTime": 1526644575,
        "uid": 55859,
        "name": "Alanalan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3905 \u3010\u9053\u8def\u91cd\u5efa\u3011"
    },
    {
        "content": "```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint list[210];//\u73b0\u5728\u7684\u4f4d\u7f6e \nint head,tail;//\u5934\u548c\u5c3e \nint a[110][110],b[110][110],d[110];//a[x][y]\uff0cx\u5230y\u7684\u8ddd\u79bb\uff1bb[x][y],x\u5230y\u9700\u8981\u4fee\u5efa\u7684\u8def\u7684\u957f\u5ea6\uff1bd[i]\u8868\u793aA\u5230x\u6700\u5c0f\u9700\u8981\u4fee\u591a\u5c11\u8def \nbool v[110];//v[x]\u8868\u793ax\u8fd9\u4e2a\u70b9\u662f\u5426\u5728list\u6570\u7ec4\u91cc\u9762 \nint n,m,A,B;\nint main()\n{\n\twhile(scanf(\"%d%d\",&n,&m)!=EOF)\n\t{\n\t\tmemset(list,0,sizeof(list));\n\t\tint i,j,x,y,c;\n\t\tmemset(a,127,sizeof(a));\n\t\tmemset(b,127,sizeof(b));//\u521d\u59cb\u5316 \n\t\tfor(i=1;i<=m;i++)\n\t\t{\n\t\t\tscanf(\"%d%d%d\",&x,&y,&c);\n\t\t\tif(c<a[x][y])\n\t\t\t{\n\t\t\t\ta[x][y]=c;//\u5efa\u7acb\u8fb9 \n\t\t\t\ta[y][x]=c;//\u5efa\u7acb\u8fd4\u5411\u8fb9 \n\t\t\t\tb[x][y]=0;//\u4e00\u5f00\u59cb\u80fd\u8054\u901a\u7684\u4e3a0 \n\t\t\t\tb[y][x]=0;\n\t\t\t}\n\t\t}\n\t\tint tt;scanf(\"%d\",&tt);\n\t\twhile(tt--)\n\t\t{\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tb[x][y]=a[x][y];//\u8fd9\u6761\u8def\u5df2\u7ecf\u88ab\u6467\u6bc1 \n\t\t\tb[y][x]=a[y][x];\n\t\t}\n\t\tscanf(\"%d%d\",&A,&B);\n\t\tmemset(d,127,sizeof(d));d[A]=0;//A\u5230A\u4fee\u5efa0 \n\t\tmemset(v,false,sizeof(v));v[A]=true; //\u5b58\u8fdblist[1]\u4e4b\u4e2d \n\t\tlist[1]=A;head=1;tail=2;//\u521d\u59cb\u5316list[1] \n\t\twhile(head!=tail)\n\t\t{\n\t\t\tx=list[head];//\u8bb0\u5f55 \n\t\t\tfor(y=1;y<=n;y++)\n\t\t\t{\n\t\t\t\tif(d[y]>d[x]+b[x][y] && b[x][y]<=1000)//\u4e0d\u65ad\u7684\u641c\u5bfb \n\t\t\t\t{\n\t\t\t\t\td[y]=d[x]+b[x][y];//\u53d6\u6700\u4f18\u503c \n\t\t\t\t\tif(v[y]==false)//\u5982\u679c\u6ca1\u6709\u5b58\u5165list\u7684\u8bdd \n\t\t\t\t\t{\n\t\t\t\t\t\tv[y]=true;\n\t\t\t\t\t\tlist[tail]=y;\n\t\t\t\t\t\ttail++;if(tail==n+1) tail=1;//\u9632\u6b62\u7206\u5185\u5b58\uff0c\u5bbd\u641c\u65f6\u7528\u8fd9\u4e2a\u5f88\u6709\u6548 \n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlist[head]=0;//\u6e050 \n\t\t\thead++;if(head==n+1) head=1;//\u540c\u4e0a \n\t\t\tv[x]=false;\n\t\t}\n\t\tprintf(\"%d\\n\",d[B]);//\u8f93\u51fa \n\t}\n\treturn 0;\n}\n```",
        "postTime": 1522130121,
        "uid": 66181,
        "name": "Celebrate",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3905 \u3010\u9053\u8def\u91cd\u5efa\u3011"
    },
    {
        "content": "~~\u8fd9\u9898\u7684\u9898\u9762\u5199\u5f97\u6781\u5176\u6076\u5fc3\uff0c\u8ba9\u6211\u7b49\u849f\u84bb\u660e\u767d\uff1a\u539f\u6765\u9898\u9762\u8fd9\u4e48\u5199\u4e0d\u72af\u6cd5\uff0c\u5c06\u6765\u4e00\u5b9a\u8981\u628a\u8fd9\u5783\u573e\u9898\u76ee\u7528\u6765\u6076\u5fc3\u4e00\u4e0b\u522b\u4eba233~~\n\n\u56e0\u4e3a\u8fd9\u51e0\u5929\u8111\u5b50\u4e0d\u600e\u4e48\u591f\u7528\uff0c\u6240\u4ee5\u770b\u9898\u89e3\u7684\u6b21\u6570\u5f88\u591a\uff0c~~\uff08\u56e0\u4e3a\u505a\u8d3c\u5fc3\u865a\u8fd8\u95ee\u4e86\u4e00\u4e0b\u7ba1\u7406\u8fd9\u4e2a\u72af\u4e0d\u72af\u6cd5\u3002\u3002~~\n\n\u597d\u4e86\u8bf4\u6b63\u6587\uff1a\n\n\u5217\u4e00\u4e0b\u5751\u70b9\uff1a\n\n1. \u8fd9\u9898\u7684\u8fb9\u662f\u65e0\u5411\u8fb9\uff0c\u5b58\u56fe\u7684\u65f6\u5019\u8bb0\u5f97[x][y]\u548c[y][x]\u90fd\u8981\u5b58\uff1b\n\n2. \u8fd9\u9898\u662f\u8ba9\u4f60\u786e\u5b9a\u54ea\u4e9b\u8fb9\u9700\u8981\u4fee\u8865\uff0c\u4e0d\u662f\u8ba9\u4f60\u52a0\u54ea\u4e9b\u8fb9\uff08\u53ef\u80fd\u662f\u6211\u667a\u5546\u4f4edalao\u8bf7\u5ffd\u7565\uff09\n\n3. \u8fd9\u4e2a\u70b9\u6709\u4e9b\u62bd\u8c61\u4e5f\u4e0d\u5bb9\u6613\u60f3\u5230\uff1a\u6211\u4eec\u53ef\u4ee5\u5c06\u8fb9\u5206\u4e3a\u4ee5\u4e0b\u4e09\u79cd\n       1. \u70b8\u6bc1\u4e86\u7684\u662f\u957f\u5ea6\n       2. \u6ca1\u6709\u8def\u7684\u662finf\n       3. \u4e0d\u7528\u4fee\u7684\u662f0 \n   \uff08\u8fd9\u4e2a\u4e1c\u897f\u4e0d\u662f\u6211\u60f3\u51fa\u6765\u7684\uff0c\u662f\u4e4b\u524d\u53d1\u9898\u89e3\u7684\u5927\u4f6c\u60f3\u51fa\u6765\u7684\uff09\n   \n\u6700\u540e\uff0c\u4ee3\u7801\u732e\u4e0a\uff0c\u4f46\u8bf7\u81ea\u5907\u8349\u7a3f\u7eb8\u7b97\u4e00\u4e0b\uff1a\n\n```\n#include<bits/stdc++.h>\n\nconst int MaxN = 100 + 10;\nconst int oo = 0x3f3f3f3f;\n\nint n, m, Start, End;\nint Dist[MaxN][MaxN], Weight[MaxN][MaxN];\n/*\u8fd9\u91cc\u53d8\u91cf\u540d\u5927\u5199\u662f\u56e0\u4e3a\uff1a\u6015\u548c\u67d0\u4e9b\u5173\u952e\u5b57\u91cd\u540d*/\nvoid Init() {\n    for (int i = 0; i <= n + 3; ++i) {\n        for (int j = 0; j <= n + 3; ++j) {\n            (i != j) ? Dist[i][j] = oo : Dist[i][j] = 0;\n        }\n    }\n}\n\nvoid Floyd() {\n    for (int k = 1; k <= n; ++k) {\n        for (int i = 1; i <= n; ++i) {\n            for (int j = 1; j <= n; ++j) {\n                Dist[i][j] = std::min(Dist[i][j], Dist[i][k] + Dist[k][j]);\n            }\n        }\n    }\n}\n\nvoid debug1() {\n    for (int i = 0; i <= n + 3; ++i) {\n        for (int j = 0; j <= n + 3; ++j) {\n            std::cerr << Dist[i][j] << \"   \";\n        }\n        std::cerr << \"\\n\";\n    }\n    std::cerr << \"\\n\\n\";\n}\n\nint main() {\n    std::cin >> n >> m;\n\n    Init();\n\n    for (int i = 1; i <= m; ++i) {\n        int x, y, k;\n        /* x\uff1a\u8d77\u70b9\uff0cy\uff1a\u7ec8\u70b9\uff0ck\uff1a\u6743\u503c */\n        std::cin >> x >> y >> k;\n        /*\u4e0b\u9762\u8fd9\u91cc(Weight)\u53cd\u7740\u4e5f\u8981\u6765\uff0c\u56e0\u4e3a\u4e0d\u7528\u7684\u8bdd\uff0c\n          Weight\u6570\u7ec4\u53ea\u6709\u659c\u7740\u7684\u4e00\u534a\uff08\u8fd9\u4e2a\u4e0d\u597d\u8bf4\u8bf7\u81ea\u5df1\u7b97\u4e00\u4e0b\uff09*/\n        Weight[x][y] = Weight[y][x] = k;\n        Dist[x][y] = Dist[y][x] = 0;\n    }\n    // debug1();\n\n    \n    int D;\n    std::cin >> D;\n    for (int i = 1; i <= D; ++i) {\n        int x, y;\n        std::cin >> x >> y;\n        Dist[x][y] = Dist[y][x] = Weight[x][y];\n    }\n    // debug1();\n\n    std::cin >> Start >> End;\n\n    Floyd();\n\n    std::cout << Dist[Start][End];\n    return 0;\n}\n\n```\n\n~~\u73b0\u5728\u4ee5\u4e00\u5929\u4e00\u9898\u7684\u901f\u5ea6\u8e52\u8dda\u524d\u884c\uff0c\u9893\u554a~~",
        "postTime": 1518492100,
        "uid": 51211,
        "name": "yjxyjx",
        "ccfLevel": 0,
        "title": "P3905 \u9053\u8def\u91cd\u5efa"
    },
    {
        "content": "\u770b\u5230\u6ca1\u4eba\u7528\u4f18\u5148\u961f\u5217\uff0c\u9119\u4eba\u4e0d\u624d\uff0c\u5c31\u6765\u4e00\u4e2a\u5427\u3002\n\n\u5927\u81f4\u601d\u8def\u662f\u628a\u6240\u6709\u7684\u8def\u5f84\u8f93\u5165\u8fdb\u53bb\uff0c\u628a\u6ca1\u70b8\u6389\u7684\u8def\u7684\u6743\u503c\u8d4b\u4e3a0\uff0c\u70b8\u6389\u7684\u8def\u6743\u503c\u4e0d\u53d8\uff0c\u7136\u540e\u5c31\u6309\u7167\u89e3\u51b3\u6700\u77ed\u8def\u5f84\u7684\u65b9\u6cd5\u6765\u5c31\u884c\u54af~\n\n\u5177\u4f53\u4ee3\u7801\u5982\u4e0b\uff08\u4f1a\u6709\u8be6\u7ec6\u6ce8\u91ca\uff09\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<vector>\n#include<queue>\nusing namespace std;\nstruct sd{\n    int num,d;//\u8bb0\u5f55\u70b9\u548c\u5bf9\u5e94\u7684\u8ddd\u79bb\n    bool operator < (const sd &x) const//\u91cd\u8f7d\u9884\u7b97\u7b26\uff0c\u4f5c\u7528\u5927\u81f4\u4e3ad\u8d8a\u5c0f\u7ed3\u6784\u4f53\u7684\u503c\u8d8a\u5927\uff08\u4f18\u5148\u961f\u5217\u8981\u7528\uff09\n    {\n        return x.d<d;\n    }\n};\nbool pan[200][200];//\u5224\u65ad\u4e24\u4e2a\u57ce\u5e02\u95f4\u6709\u6ca1\u6709\u8def\u88ab\u70b8\u6389\nint dist[10000];//\u70b9\u5230\u521d\u59cb\u70b9\u7684\u4f4d\u7f6e\nbool vis[10000];//\u70b9\u662f\u5426\u88ab\u8d70\u8fc7\nvector<sd>mp[10000];//mp[I][j]\u8868\u793aI\u5230num\u7684\u8ddd\u79bb\u4e3ad\npriority_queue<sd>hhh;//\u7ed3\u6784\u4f53\u7684\u503c\u8d8a\u5927\u4f4d\u7f6e\u8d8a\u9760\u8fd1\u9996\u4f4d\u7f6e\nint main()\n{\n    memset(dist,127,sizeof(dist));//\u5c06\u521d\u503c\u8d4b\u4e3a\u5f88\u5927\n    int m,n;//\u57ce\u5e02\u6570\u4e0e\u9053\u8def\u6570\n    scanf(\"%d%d\",&m,&n);\n    sd w;\n    for(int a,b,c,i=1;i<=n;i++)\n    {\n        scanf(\"%d%d%d\",&a,&b,&c);\n        w.num=b;w.d=c;mp[a].push_back(w);//\u8bb0\u5f55a\u5230b\u7684\u6743\u503cc\uff0c\u6ce8\u610f\u662f\u65e0\u5411\u56fe\n        w.num=a;mp[b].push_back(w);\n        pan[a][b]=true;//\u4e24\u4e2a\u57ce\u5e02\u6709\u8def\u8fde\u63a5\n        pan[b][a]=true;\n    }\n    int d;\n    scanf(\"%d\",&d);\n    for(int a,b,i=1;i<=d;i++)\n    {\n        scanf(\"%d%d\",&a,&b);\n        pan[a][b]=false;//\u65ad\u6389\n        pan[b][a]=false;\n    }\n    for(int i=1;i<m;i++)//\u627e\u5df2\u8fde\u63a5\u7684\u8def\n    {\n        for(int j=i+1;j<=m;j++)\n        {\n            if(pan[i][j])//\u5982\u679c\u6709\u8fde\u63a5\n            {\n                for(int k=mp[i].size()-1;k>=0;k--)\n                {\n                    if(mp[i][k].num==j)\n                    {\n                        mp[i][k].d=0;//\u6743\u503c\u53d8\u4e3a0\n                    }\n                }\n                for(int k=mp[j].size()-1;k>=0;k--)\n                {\n                    if(mp[j][k].num==i)\n                    {\n                        mp[j][k].d=0;//\u6743\u503c\u53d8\u4e3a0\n                    }\n                }\n            }\n        }\n    }\n    int start,end;\n    scanf(\"%d%d\",&start,&end);//\u8bb0\u5f55\u8d77\u59cb\u70b9\u4e0e\u6307\u5b9a\u70b9\n    vis[start]=true;//\u7b2c\u4e00\u4e2a\u70b9\u8bb0\u5f55\u4e3a\u8d70\u8fc7\n    int ans=0;\n    for(int j=mp[start].size()-1;j>=0;j--)\n    {\n        if(dist[mp[start][j].num]>mp[start][j].d)\n        {\n            dist[mp[start][j].num]=mp[start][j].d;//\u8c03\u6574\u6700\u77ed\u8def\u5f84\n        }\n        hhh.push(mp[start][j]);//\u88c5\u8def\u5f84\n    }\n    while(true)\n    {\n        int k;\n        while(true)\n        {\n            k=hhh.size();\n            if(k==0) break;//\u5982\u679c\u961f\u5217\u4e2d\u5143\u7d20\u6ca1\u4e86\uff0c\u5f39\u51fa\n            w=hhh.top();//\u8bbf\u95ee\u961f\u9996\u5143\u7d20\uff0c\u8fd9\u65f6\u7684\u8def\u5f84\u662f\u6700\u77ed\u7684\n            hhh.pop();//\u5f39\u51fa\u961f\u9996\u5143\u7d20\n            if(!vis[w.num]) break;//\u5982\u679c\u8fd9\u4e2a\u70b9\u6ca1\u88ab\u8d70\u8fc7\uff0c\u8fdb\u884c\u63a5\u4e0b\u6765\u7684\u64cd\u4f5c\n        }\n        if(k==0||vis[end]) break;//\u5982\u679c\u6307\u5b9a\u70b9\u5df2\u88ab\u8d70\u8fc7\u6216\u8005\u961f\u4e2d\u6ca1\u6709\u5143\u7d20\uff0c\u7ec8\u6b62\u64cd\u4f5c\n        k=w.num;//\u8bb0\u5f55\u5f53\u524d\u70b9\n        vis[k]=true;//\u8bb0\u5f55\u6210\u8d70\u8fc7\n        for(int j=mp[k].size()-1;j>=0;j--)\n        {\n            int t=mp[k][j].num;\n            if(!vis[t]&&dist[t]>mp[k][j].d+dist[k])//\u4e09\u89d2\u5b9a\u5219\u4e0d\u591a\u8bf4\n            {\n                dist[t]=mp[k][j].d+dist[k];\n                w.num=t;\n                w.d=dist[t];\n                hhh.push(w);//\u628a\u65b0\u7684\u8def\u5f84\u88c5\u8fdb\u961f\u5217\n            }\n        }\n    }\n    printf(\"%d\",dist[end]);//\u8f93\u51fa\u5230\u6307\u5b9a\u70b9\u7684\u6700\u77ed\u8def\u5f84\n    return 0;\n}\n```",
        "postTime": 1509979893,
        "uid": 67782,
        "name": "jiangzhiou",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3905 \u3010\u9053\u8def\u91cd\u5efa\u3011"
    },
    {
        "content": "//\u8fd9\u9053\u9898\u662f\u4e00\u9053\u6bd4\u8f83\u7b80\u5355\u7684\u6700\u77ed\u8def\u95ee\u9898\uff0c\u6240\u4ee5\u771f\u6b63\u7684\u849f\u84bb\u6765\u53d1\u9898\u89e3\u4e86\uff0c\u7531\u4e8e\u672c\u849f\u84bb\u521a\u521a\u5b66\u4f1aspfa\n\n```cpp\n//\u5c31\u7528spfa\u5199\u4e86\u8fd9\u9053\u9898 \n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=500010;\nstruct Edge\n{\n    int next,to,dis;\n}edge[maxn];\nint head[maxn],num_edge,n,m;\nint dis[maxn];\nint x1[500000],yy[500000];\nbool inqueue[maxn];\nvoid add_edge(int from,int to,int dis)\n{\n    edge[++num_edge].next=head[from];\n    edge[num_edge].to=to;\n    edge[num_edge].dis=dis;\n    head[from]=num_edge;\n```\n}//\u6570\u7ec4\u6a21\u62df\u90bb\u63a5\u8868\u5b58\u56fe\n```cpp\nvoid SPFA(int start)\n{\n    int i;\n    queue<int> q;//\u8fd9\u91cc\u4f7f\u7528\u4e86STL\u5e93\u4e2d\u7684\u961f\u5217 \n    for(i=1;i<=n;i++)\n    dis[i]=2147483647;\n    dis[start]=0;\n    q.push(start);//\u521d\u59cb\u5316 \n    while(!q.empty())//\u961f\u5217\u4e0d\u4e3a\u7a7a\u65f6\u5faa\u73af \n    {\n        int x=q.front();\n        q.pop();\n        inqueue[x]=false;//inqueue\u4e3a\u6807\u8bb0\u6570\u7ec4\uff0c\u6807\u8bb0\u662f\u5426\u5728\u961f\u4e2d \n        for(i=head[x];i!=0;i=edge[i].next) //\u904d\u5386\u961f\u9996\u8fde\u51fa\u7684\u6240\u6709\u8fb9 \n            if(dis[edge[i].to]>dis[x]+edge[i].dis)//\u677e\u5f1b \n            {\n                dis[edge[i].to]=dis[x]+edge[i].dis;           \n                if(!inqueue[edge[i].to])\n                {\n                    inqueue[edge[i].to]=true;\n                    q.push(edge[i].to);//\u65b0\u70b9\u5165\u961f \n                }\n            }\n    }\n}\nint main()\n{\n    int i;\n    int x,y,z;\n    scanf(\"%d%d\",&n,&m);\n    for(i=1;i<=m;i++)\n    {\n        scanf(\"%d%d%d\",&x,&y,&z);\n        add_edge(x,y,z);    \n        add_edge(y,x,z);    \n```\n}//\u8bfb\u5165\uff0c\u6ce8\u610f\u662f\u65e0\u5411\u56fe \uff0c\u672c\u849f\u84bb\u4e00\u5f00\u59cb\u6ca1\u6ce8\u610f\u53ea\u5f97\u4e8620\u5206\n```cpp\n    int d;\n    cin>>d;\n    for(i=1;i<=d;i++)\n        scanf(\"%d%d\",&x1[i],&yy[i]);\n    int A,B;\n    cin>>A>>B;\n    SPFA(A);//\u6211\u4eec\u4e00\u5f00\u59cb\u5148\u5728\u6ca1\u6709\u635f\u574f\u7684\u8def\u4e0a\u8dd1\u4e00\u904dspfa \n    int orz=dis[B];//\u8bb0\u5f55A\u5230B\u7684\u6700\u77ed\u8def \n    for(i=1;i<=d;i++)\n    {\n        add_edge(x1[i],yy[i],0);\n        add_edge(yy[i],x1[i],0);\n    }//    \u8fd9\u6761\u8def\u635f\u574f\u4e86\u6211\u4eec\u5c31\u628a\u5b83\u7684\u6743\u503c\u9644\u62100 \n    SPFA(A);//\u6211\u4eec\u518d\u5728\u635f\u574f\u7684\u8def\u4e0a\u8dd1\u4e00\u904dspfa \n    int sro=dis[B];//\u8bb0\u5f55\u635f\u574f\u540eA\u5230B\u7684\u6700\u77ed\u8def \n    orz=orz-sro;//\u4e24\u8005\u7684\u5dee\u503c\u5c31\u662f\u7ed3\u679c\u5566 \n    printf(\"%d \",orz);\n    return 0;\n}\n```",
        "postTime": 1509531442,
        "uid": 48977,
        "name": "wddwjlss",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3905 \u3010\u9053\u8def\u91cd\u5efa\u3011"
    },
    {
        "content": "\u6211\u4eec\u53ef\u4ee5\n\n\u5148memset dis\u8fd9\u4e2a\u6570\u7ec4\u5168\u90e8\u641e\u6210\u6b63\u65e0\u7a77\n\n\u5728\u5f55\u5165\u8fb9\u7684\u65f6\u5019\u987a\u624b\u628adis\u641e\u62100\u5e76\u4e14\u5f00\u4e00\u4e2amapp\u8bb0\u5f55\u8fb9\u7684\u6743\u503c\n\n\u518d\u5728\u5220\u8fb9\u7684\u65f6\u5019\u987a\u624b\u628adis\u66f4\u65b0\u6210mapp\u8bb0\u5f55\u7684\u6743\u503c\n\n\u6700\u540efloyed\u5c31\u53ef\u4ee5\u4e86\u221a\n\n(dalao\u4eec\u90fd\u662f0ms ac\u849f\u84bb\u8868\u793a\u5bb3\u6015...\u96be\u9053\u662ffloyed\u7684\u539f\u56e0\uff1f)\n\n\n    \n    \n    \n    \n    \n    \n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\nusing namespace std;\nconst int N=120;\nconst int inf=0x7fffffff;\nint mapp[N][N];\nint dis[N][N];\nint n,m,a,b,c;\nint main(){\n    memset(mapp,63,sizeof(mapp));\n    memset(dis,63,sizeof(dis));\n    for(int i=1;i<=n;i++)\n    for(int j=1;j<=n;j++)    mapp[i][j]=inf;\n    scanf(\"%d %d\",&n,&m);\n    for(int i=1;i<=m;i++){\n        scanf(\"%d %d %d\",&a,&b,&c);\n        mapp[a][b]=mapp[b][a]=min(mapp[b][a],c);\n        dis[a][b]=dis[b][a]=0;\n    }\n    scanf(\"%d\",&m);\n    for(int i=1;i<=m;i++){\n        scanf(\"%d %d\",&a,&b);\n        dis[a][b]=dis[b][a]=mapp[a][b];\n    }\n    scanf(\"%d %d\",&a,&b);\n    for(int k=1;k<=n;k++)\n    for(int i=1;i<=n;i++)\n    for(int j=1;j<=n;j++)\n    dis[i][j]=min(dis[i][k]+dis[k][j],dis[i][j]);\n    cout<<dis[a][b];\n    return 0;\n}\n```",
        "postTime": 1508821658,
        "uid": 33575,
        "name": "Tramis",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3905 \u3010\u9053\u8def\u91cd\u5efa\u3011"
    },
    {
        "content": "\u770b\u4e86\uff0c\u597d\u50cf\u6ca1\u6709 Floyd \u7684\u9898\u89e3\uff0c\u6765\u4e00\u53d1\u3002\u3002\u3002\n\n\u601d\u8def\u7684\u8bdd\uff0c\u4e0e\u697c\u4e0a\u5dee\u4e0d\u591a\u3002\u3002\u3002\n\n\u91cd\u70b9\u662f\uff0c\u6211\u7528\u90bb\u63a5\u8868\u5b58\u56fe\uff0c\u7ed3\u679c\u56e0\u4e3a\u4e00\u4e2a\u7ec6\u8282\uff0c20\u5206\\*3\u3002\u3002\u3002\n\n\u9644\u4ee3\u7801\uff08\u4e11\u964b\u65e0\u6bd4\u3002\u3002\u3002\uff09\uff1a\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#define MAX 999999999//\u6700\u5927\u503c\n#define MAXN 110\nusing namespace std;\nint n,m,d,s,t,a[MAXN][MAXN];\nbool b[MAXN][MAXN];//\u9053\u8def\u662f\u5426\u88ab\u6467\u6bc1\ninline int read(){//\u8bfb\u4f18\n       int date=0,w=1;char c=0;\n       while(c<'0'||c>'9'){if(c=='-')w=-1;c=getchar();}\n       while(c>='0'&&c<='9'){date=date*10+c-'0';c=getchar();}\n       return date*w;\n}\nvoid floyd(){//Floyd \u8dd1\u6700\u77ed\u8def\uff0c\u5e94\u8be5\u90fd\u61c2\u5427\u3002\u3002\u3002\n     for(int k=1;k<=n;k++)\n     for(int i=1;i<=n;i++)\n     for(int j=1;j<=n;j++)\n     a[i][j]=min(a[i][j],a[i][k]+a[k][j]);\n     printf(\"%d\\n\",a[s][t]);\n}\nint main(){\n    int u,v,w;\n    n=read();m=read();\n    for(int i=1;i<=n;i++)//\u8d4b\u521d\u503c\n    for(int j=1;j<=n;j++)\n    a[i][j]=(i==j)?0:MAX;\n    for(int i=1;i<=m;i++){//\u8bfb\u5165\u8fb9\n            u=read();v=read();w=read();\n            if(a[u][v]>w)a[u][v]=a[v][u]=w;//\u53cc\u5411\u8fb9\n            }\n    d=read();\n    for(int i=1;i<=d;i++){//\u8bfb\u5165\u88ab\u6467\u6bc1\u7684\u8fb9\n            u=read();v=read();\n            b[u][v]=b[v][u]=true;//\u5f53\u521d\u5c31\u662f\u56e0\u4e3a\u8fd9\u91cc\uff0c\u6ca1\u6709\u8003\u8651\u5230\u8fb9\u662f\u53cc\u5411\u7684\uff0cWA \u4e863\u6b21\u3002\u3002\u3002\n            }\n    for(int i=1;i<=n;i++)\n    for(int j=1;j<=n;j++)\n    if(!b[i][j]&&a[i][j]!=0&&a[i][j]!=MAX)a[i][j]=0;//\u672a\u88ab\u6467\u6bc1\u7684\u7684\u8fb9\u6743\u503c\u8d4b\u4e3a0\n    s=read();t=read();//\u8bfb\u5165\u8d77\u6b62\u70b9\n    floyd();\n    return 0;//\u7ed3\u675f\uff0c\u6492\u82b1~~~\n}\n\n```",
        "postTime": 1508682657,
        "uid": 49998,
        "name": "\u65af\u5fb7\u54e5\u5c14\u6469",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3905 \u3010\u9053\u8def\u91cd\u5efa\u3011"
    },
    {
        "content": "\u770b\u8fd9\u4e48\u5c0f\u7684\u6570\u636e\u8303\u56f4\u5374\u6ca1\u6709Floyd\u7684\u9898\u89e3\uff0c\u53d1\u4e00\u4e2a\n\n\n            \n    \n\n    \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint a[110][110];\nint t[110][110];\nint i,j,k,n,m,s,tt,p1,p2,p3,d;\nint main()\n{\n    cin>>n;    //n\u4e2a\u57ce\u5e02 \n    cin>>m;//m\u6761\u9053\u8def \n    for(i=1;i<=n;i++)\n        for(j=1;j<=n;j++)//\u521d\u59cb\u5316 \n        {\n            t[i][j]=99999999;\n            a[i][j]=99999999;        //t[i][j]\u50a8\u5b58\u53ef\u4ee5\u8c03\u7528\u7684\u9053\u8def\u4fe1\u606f \n        }\n    for(i=1;i<=m;i++)\n    {\n        cin>>p1>>p2>>p3;\n        t[p1][p2]=p3;\n        t[p2][p1]=p3;//\u53cc\u5411\u8fb9 \n        a[p1][p2]=0;\n        a[p2][p1]=0;//\u6709\u8def\u5148\u9ed8\u8ba4\u662f\u597d\u7684 \n    }\n    cin>>d;\n    for(i=1;i<=d;i++)\n    {\n        cin>>p1>>p2;\n        a[p1][p2]=t[p1][p2];//\u70b8\u6bc1\u4e86\u7684\u662f\u957f\u5ea6\uff0c\u6ca1\u6709\u8def\u7684\u662finf\uff0c\u4e0d\u7528\u4fee\u7684\u662f0 \n        a[p2][p1]=t[p2][p1]; \n    }\n    cin>>s>>tt;\n    for(k=1; k<=n; k++)\n        for(i=1; i<=n; i++)\n            for(j=1; j<=n; j++)\n                if (a[i][k]+a[k][j]<a[i][j]) a[i][j]=a[i][k]+a[k][j];\n    //floyd\u677f\u5b50 \n    cout<<a[s][tt];\n    return 0;\n}\n\n```",
        "postTime": 1508679822,
        "uid": 41153,
        "name": "blackbeanman",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3905 \u3010\u9053\u8def\u91cd\u5efa\u3011"
    },
    {
        "content": "P3905 \u9053\u8def\u91cd\u5efa\n\n\u6211\u4e00\u5f00\u59cb\u60f3\u9519\u4e86\uff0c\u6211\u7684\u662f\u7c7b\u4f3ckruskal\uff0c\u628a\u6bc1\u574f\u7684\u8fb9\u4ece\u5c0f\u5230\u5927\u52a0\uff0c\u5e76\u4e14\u5224\u65ad\u8054\u901a\u6027\u3002\u4f46\u662f\u8fd9\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u4f60\u53ef\u80fd\u4f1a\u591a\u52a0\uff0c\u5c31\u662f\u8fd9\u6761\u8fb9\u6ca1\u7528\uff0c\u4f46\u662f\u5b83\u6bd4\u8f83\u5c0f\uff0c\u4f60\u4e5f\u52a0\u4e0a\u4e86\u3002\n\n\u5c45\u7136\u8fd8\u670910\u5206\uff0c\u6570\u636e\u4e5f\u662f\u6c34\u6c34\u7684\u3002\u3002\u3002\n\n\u6b63\u89e3\u662f\u628a\u672a\u574f\u7684\u8fb9\u7684\u6743\u503c\u8bbe\u62100\uff0c\u574f\u7684\u8fb9\u7684\u503c\u4e0d\u53d8\uff0c\u8dd1spfa\u5373\u53ef\u3002\n\nhttp://www.cnblogs.com/war1111/p/7645929.html\n\n\u6807\u7a0b\u5728blog\u91cc\u3002\n",
        "postTime": 1507620939,
        "uid": 37074,
        "name": "war1111",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3905 \u3010\u9053\u8def\u91cd\u5efa\u3011"
    },
    {
        "content": "\u6838\u5fc3\u601d\u60f3\u548c\u697c\u4e0b\u5dee\u4e0d\u591a \u5176\u5b9e\u6211\u4eec\u53ef\u4ee5\u7406\u89e3\u6210\u5728\u6bcf\u6b21\u5bfb\u627e\u6700\u77ed\u8def\u7684\u65f6\u5019\u90fd\u53bb\u7ef4\u62a4\u4e00\u4e2a\u5f53\u524d\u7684\u6700\u5c0f\u82b1\u8d39\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f \u5f53\u6211\u4eec\u77e5\u9053\u5f53\u524d\u627e\u7684\u8fd9\u6761\u8fb9\u4e0d\u662f\u88ab\u6467\u6bc1\u7684\u8fb9\u7684\u65f6\u5019 \u6211\u4eec\u5219\u9700\u8981\u5728pay[edge[i].to]\u548cpay[u]\u4e2d\u627e\u4e00\u4e2a\u8f83\u5c0f\u7684\u800c\u4e0d\u7528\u518d\u8003\u8651\u8fd9\u6761\u8fb9\u7684\u957f\u5ea6 \u5927\u6982\u5c31\u662f\u8fd9\u4e48\u4e2a\u610f\u601d\n\n\u548c\u697c\u4e0b\u4e0d\u4e00\u6837\u7684\u662f \u6211\u662f\u91c7\u7528\u7684\u5806\u4f18\u5316\u7684dijkstra\u5b9e\u73b0\u7684 \u94fe\u5f0f\u524d\u5411\u661f\u5b58\u50a8 \u7528\u4e86make\\_pair(a,b)\u4fbf\u4e8e\u5806\u7684\u4f18\u5316 \u56e0\u4e3a\u6309a\u6392 \u6240\u4ee5a\u653e\u957f\u5ea6 b\u653e\u7f16\u53f7 \u611f\u89c9STL\u786e\u5b9e\u5f88\u5b9e\u7528\n\n\u53e6\u5916 \u6309\u7406\u8bba\u8bf4\u8fd9\u4e2a\u9898\u5728\u6bd4\u8f83(edge[i].dis + dis[u])\u548cdis[edge[i].to]\u7684\u5927\u5c0f\u7684\u65f6\u5019\u662f\u8981\u53d6\u7b49\u53f7\u7684 \u4f46\u5176\u5b9e\u90fd\u4e00\u6837\n\n\u4ee3\u7801\u5982\u4e0b\n\n\n\n\n        \n\n\n\n\n\n\n        \n        \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cctype>\n#include<queue>\n#include<cstring>\n#include<string>\n    using namespace std;\n    #define in = read()\n    typedef long long ll;\n    const ll size = 500000 + 10000;\n    const ll size2 = 1000 + 10;\n        struct point{   ll next,to,dis;}edge[size];\n        priority_queue <pair<ll , ll> , vector<pair<ll , ll> > , greater<pair<ll , ll> > > q;\n            ll n,m,d,Beginn,Endd;\n            ll site;\n            ll head[size],dis[size],pay[size];\n            bool exist[size],need[size2][size2];\ninline ll read(){\n        ll num = 0 , f = 1;   char ch = getchar();\n        while(!isdigit(ch)){\n                if(ch == '-')   f = -1;\n                ch = getchar();\n        }\n        while(isdigit(ch)){\n                num = num*10 + ch - '0';\n                ch = getchar();\n        }\n        return num*f;\n}\ninline void add(ll x, ll y, ll z){\n        edge[++site].next = head[x];\n        edge[site].to = y;\n        edge[site].dis = z;\n        head[x] = site;\n}\nint main(){\n        n in;   m in;\n        for(int i=1;i<=m;i++){\n                ll x,y,z;   x in;   y in;   z in;\n                add(x,y,z);   add(y,x,z);\n        }\n        d in;\n        for(int i=1;i<=d;i++){\n                ll x,y;   x in;   y in;\n                need[x][y] = need[y][x] = true;\n        }\n        Beginn in;   Endd in;\n        memset(dis,127/3,sizeof(dis));    dis[Beginn] = 0;\n        memset(pay,127/3,sizeof(pay));    pay[Beginn] = 0;\n        pair<ll , ll> x;\n        q.push(make_pair(0,Beginn));\n        while(!q.empty()){\n                x = q.top();    q.pop();    ll u = x.second;\n                if(exist[u])    continue;\n                exist[u] = true;\n                for(int i=head[u];i!=0;i=edge[i].next)\n                        if(edge[i].dis + dis[u] <= dis[edge[i].to]){\n                                dis[edge[i].to] = edge[i].dis + dis[u];\n                                if(need[u][edge[i].to])\n                                        pay[edge[i].to] = min(pay[edge[i].to],edge[i].dis + pay[u]);\n                                else\n                                        pay[edge[i].to] = min(pay[edge[i].to],pay[u]);\n                                q.push(make_pair(dis[edge[i].to],edge[i].to));\n                        }\n                exist[u] = false;\n        }\n        printf(\"%d\",pay[Endd]);\n}\n//coyg\n```",
        "postTime": 1505309234,
        "uid": 27394,
        "name": "ars4me",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3905 \u3010\u9053\u8def\u91cd\u5efa\u3011"
    },
    {
        "content": "\u8fd9\u9898\u770b\u4f3c\u5f88\u96be\uff0c\u600e\u4e48\u624d\u80fd\u5237\u51fa\u6700\u77ed\u7684\u4fee\u5efa\u9053\u8def\uff0c\u5176\u5b9e\u770b\u51fa\u6765\u662f\u975e\u5e38\u6c34\u7684\u3002\n\n\n\u4e0b\u9762\u8bb2\u4e0b\u60f3\u6cd5\uff1a\u5982\u4f55\u624d\u80fd\u8f93\u51fa\u8981\u4fee\u5efa\u7684\u6700\u77ed\u8def\u5462?\u5927\u5bb6\u4ed4\u7ec6\u60f3\u4e0b\uff0c\u5982\u679c\u8981\n\n\u5237\u635f\u574f\u8981\u4fee\u5efa\u662f\u4e0d\u662f\u4e0e\u6ca1\u635f\u574f\u7684\u6ca1\u6709\u5173\u7cfb\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u5c06\u6ca1\u635f\u574f\u7684\u8fb9\n\n\u6743\u8bbe\u4e3a0\u4e0d\u5c31\u884c\u4e86\uff1f\u56e0\u4e3a\u52a0\u4e0d\u52a00\u90fd\u65e0\u6240\u8c13\uff0c\u5728\u5957\u4e0bspfa\u6a21\u677f\u5237\u8d9f\u6700\u77ed\u8def\u5c31\n\n\u884c\u4e86\uff0c\u542c\u4e86\u4e4b\u540e\uff0c\u662f\u4e0d\u662f\u611f\u89c9\u6b64\u9898\u975e\u5e38\u6c34\u5462~~~~~~~~~~~~~~^0^.\n\n\n\u4e0b\u9762\u7ed9\u51fa\u4ee3\u7801\uff1a\n```\n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn=105,maxe=4955;\nint n,m,x[maxe],y[maxe],z[maxe],X,Y,D,son[maxe],lnk[maxe],nxt[maxe],w[maxe],que[maxe],dis[maxe],tot,A,B;\nbool vis[maxe],Vis[maxn][maxn];\ninline int read(){\n\tint ret=0,f=1;char ch=getchar();\n\twhile(!isdigit(ch)){f=ch=='-'?-f:f;ch=getchar();}\n\twhile(isdigit(ch)) ret=ret*10+ch-'0',ch=getchar();\n\treturn ret*f;\n}\ninline void add_e(int x,int y,int z) {son[++tot]=y;w[tot]=z;nxt[tot]=lnk[x];lnk[x]=tot;}\nvoid SPFA(){\n\tmemset(dis,63,sizeof(dis));\n\tque[1]=A;vis[A]=1;dis[A]=0;\n\tint hed=0,til=1;\n\twhile(hed!=til){\n\t\thed=hed+1;vis[que[hed]]=0;\n\t\tfor (int i=lnk[que[hed]];i;i=nxt[i]){\n\t\t\tif(dis[que[hed]]+w[i]<dis[son[i]]){\n\t\t\t\tdis[son[i]]=dis[que[hed]]+w[i];\n\t\t\t\tif(!vis[i]) {vis[i]=1;til=til+1;que[til]=son[i];}\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tfreopen(\"\u9053\u8def\u91cd\u5efa.in\",\"r\",stdin);\n\tfreopen(\"\u9053\u8def\u91cd\u5efa.out\",\"w\",stdout);  //\u5934\u6587\u4ef6\uff0c\u53ef\u4ee5\u4e0d\u7ba1\u3002\n\tn=read();m=read();\n\tfor (int i=1;i<=m;i++){\n\t\tx[i]=read();y[i]=read();z[i]=read();\n\t\tadd_e(x[i],y[i],z[i]);add_e(y[i],x[i],z[i]);\n\t}\n\tD=read();\n\tfor (int i=1;i<=D;i++){\n\t\tX=read();Y=read();\n\t\tVis[X][Y]=1;Vis[Y][X]=1;\n\t}\n\tfor (int i=1;i<=m;i++){\n\t\tif(Vis[x[i]][y[i]]==1) {add_e(x[i],y[i],z[i]);add_e(y[i],x[i],z[i]);}\n\t\telse {add_e(x[i],y[i],0);add_e(y[i],x[i],0);}\n\t}\n\tA=read();B=read();\n\tSPFA();\n\tprintf(\"%d\",dis[B]);\n\treturn 0;\n} \n```\n",
        "postTime": 1540119215,
        "uid": 97447,
        "name": "win_or_die",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3905 \u3010\u9053\u8def\u91cd\u5efa\u3011"
    }
]