[
    {
        "content": "# \u9152\u5e97\u4e4b\u738b\u89e3\u9898\u62a5\u544a\n---\n## \uff08\u4e00\uff09\u524d\u7f6e\u6280\u80fd\n1.[\u7f51\u7edc\u6d41\u6700\u5927\u6d41](https://www.luogu.org/problemnew/show/P3376)\uff08$dinic$, $Edmonds-Karp$\u90fd\u53ef\u4ee5\uff09\n\n2.\u5efa\u56fe\uff08\u90bb\u63a5\u94fe\u8868\uff0c\u53cd\u5411\u8fb9^1\u7684\u5c0f\u6280\u5de7\uff09\n\n\u8fbe\u6210\u4e86 1 \u9605\u8bfb\u672c\u6587\u5c06\u5f88\u8f7b\u677e\uff0c\u8fbe\u6210\u4e86 2 \u9605\u8bfb\u4ee3\u7801\u5c06\u5f88\u8f7b\u677e\n\n## \uff08\u4e8c\uff09\u9898\u76ee\u63cf\u8ff0\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P1402)\n\n\u7b80\u5355\u5730\u9610\u8ff0\u4e00\u4e0b\u9898\u610f\uff1a\n\n\u6709 $n$ \u4e2a $A$ \u7c7b\u8282\u70b9\uff0c$p$ \u4e2a $B$ \u7c7b\u8282\u70b9\uff0c $q$ \u4e2a $C$ \u7c7b\u8282\u70b9\u3002\u6bcf\u4e2a $A$ \u4e0e\u4e00\u4e2a $B$ \u548c\u4e00\u4e2a $C$ \u6784\u6210\u4e00\u7ec4\u5339\u914d\uff08\u6bcf\u4e2a$A$\u53ea\u80fd\u4e0e\u7ed9\u5b9a\u7684$B$\u3001$C$\u5339\u914d\uff0c\u4e14\u6bcf\u4e2a$B$\u3001$C$\u53ea\u80fd\u5339\u914d\u4e00\u4e2a$A$\uff09,\u6c42\u6700\u5927\u5339\u914d\u6570\u3002\n\n## \uff08\u4e09\uff09\u89e3\u9898\u601d\u8def\n\n\u7b80\u5316\u4e4b\u540e\u7684\u9898\u610f\u5f88\u50cf\u4e8c\u5206\u56fe\u5339\u914d\uff0c\u4e8c\u5206\u56fe\u5339\u914d\u662f\u4e00\u4e2a\u70b9\u5339\u914d\u4e00\u4e2a\u70b9\uff0c\u800c\u672c\u9898\u662f\u4e00\u4e2a\u70b9\u5339\u914d\u4e24\u4e2a\u70b9\u3002\n\n\u8d77\u5148\uff0c\u6211\u662f\u60f3\u5c06 $A$ \u7c7b\u8282\u70b9\u653e\u5728\u5de6\u8fb9\uff0c$B$ \u7c7b\u8282\u70b9\u653e\u4e2d\uff0c $C$ \u7c7b\u6700\u53f3\u3002\u987a\u7740\u9898\u610f\u7528$A$\u5339\u914d$B$\u548c$C$\u7684\uff0c\u7136\u540e\u53d1\u73b0\uff0c\u8fd9\u6837\u5b50\u6839\u672c\u65e0\u6cd5\u5efa\u56fe!!!\n\n\u56e0\u4e3a\u9898\u76ee\u53ea\u7ed9\u51fa\u4e86$A$\u2014\u2014$B$, $A$\u2014\u2014$C$\u7684\u5173\u7cfb\uff0c\u6839\u672c\u4e0d\u77e5\u9053$B$\u4e0e$C$\u7684\u5173\u7cfb\u3002\u5018\u82e5\u6309\u4e0a\u9762\u65b9\u5f0f\u5efa\u56fe\u7684\u8bdd\uff0c$B$\u548c$C$\u5c31\u4f1a\u6210\u4e3a\u5e76\u5217\u7684\u8282\u70b9\u3002\u5f88\u660e\u663e\u8fd9\u662f\u4e0d\u7b26\u5408\u9898\u610f\u7684\u3002\n\n\u90a3\u8be5\u5982\u4f55\u5efa\u56fe\u5462?\n\n\u65e2\u7136\u5df2\u7ecf\u77e5\u9053$B$\u4e0e$A$\u7684\u5173\u7cfb\u3001$A$\u4e0e$C$\u7684\u5173\u7cfb\uff0c\u4e0d\u59a8\u76f4\u63a5\u5c06$A$\u653e\u5728\u4e2d\u95f4\uff0c$RT$:\n\n![](https://cdn.luogu.com.cn/upload/pic/47662.png)\n\n\u5982\u6b64\uff0c\u5f97\u5230\u4e86\u4e00\u5f20~~\u4e09\u5206~~\u56fe\uff0c\u518d\u6c42\u6b64\u56fe\u7684\u6700\u5927\u5339\u914d\u5373\u53ef\u3002\n\n### \u65b9\u6cd5\u4e00\uff1a\u5308\u7259\u5229\u7b97\u6cd5\n\n\u4ece$A$\u51fa\u53d1\u76f4\u63a5\u5411$B$\u548c$C$\u8dd1\u4e24\u6b21\u4e8c\u5206\u56fe\u5339\u914d\u5373\u53ef\u3002\u8fd9\u91cc\u4e0d\u4f5c\u8be6\u7ec6\u89e3\u91ca\u3002\n\n### \u65b9\u6cd5\u4e8c\uff1a\u7f51\u7edc\u6d41\u6700\u5927\u6d41\n\n\u6309\u7167\u7f51\u7edc\u6d41\u7684\u6b63\u5e38\u64cd\u4f5c\uff0c\u5efa\u7acb\u4e00\u4e2a\u8d85\u7ea7\u6e90\u70b9$S$\uff0c\u8fde\u63a5\u6240\u6709$B$\uff0c\u6d41\u91cf\u4e3a1; \u5efa\u7acb\u4e00\u4e2a\u8d85\u7ea7\u6c47\u70b9$T$, \u4f7f\u6240\u6709$C$\u90fd\u8fde\u5411$T$\uff0c\u6d41\u91cf\u4e3a1\u3002\u518d\u6839\u636e\u9898\u76ee\u6240\u7ed9\u7684\u5173\u7cfb\u8fde\u63a5$B$\u2014\u2014$A$\u3001$A$\u2014\u2014$C$\u3002\n\n\u53ef\u80fd\u5f88\u591a\u540c\u5b66\u770b\u5230\u8fd9\u91cc\u90fd\u4f1a\u60f3\uff1a\u4f1a\u4e86\u4f1a\u4e86\uff0c\u7136\u540e\u518d\u8dd1\u7f51\u7edc\u6d41\u6700\u5927\u6d41\u561b\u3002\n\n\u4e0d\u8981\u4ee5\u4e3a\u8fd9\u6837\u5c31\u53ef\u4ee5\u4e86\u3002\u8fd9\u53ef\u662f~~\u4e09\u5206~~\u56fe\u5339\u914d\u5440\uff0c\u54ea\u6709\u90a3\u4e48\u7b80\u5355!\n\n\u770b\u4e0b\u9762\u8fd9\u5e45\u56fe\u4f60\u5c31\u4f1a\u77e5\u9053\u54ea\u91cc\u9519\u4e86\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/47664.png)\n\n\u5982\u679c\u5149\u662f\u6309\u4e0a\u8ff0\u65b9\u6cd5\u5efa\u56fe\u7684\u8bdd\uff0c\u90a3\u4e48\u56fe\u5c31\u4f1a\u53d8\u6210\u4e0a\u9762\u90a3\u6837\uff0c\u6700\u5927\u6d41\u8dd1\u51fa\u6765\u662f2\u3002\n\n\u7136\u800c\u6211\u4eec\u77e5\u9053\uff0c\u6700\u5927\u6d41\u4e0d\u80fd\u662f2\uff0c\u56e0\u4e3a\u4efb\u610f$B$\u3001$C$\u53ea\u80fd\u5339\u914d\u4e00\u4e2a$A$\u3002\n\n\u5982\u4f55\u89e3\u51b3\u4e0a\u8ff0\u95ee\u9898\u5462?\n\n\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u5c06$A$\u62c6\u5206\u4e3a\u4e24\u4e2a\u70b9\u5373\u53ef\uff0c$RT$\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/47669.png)\n\n\u8fde\u63a5$A$\u548c$A'$,\u6d41\u91cf\u4e3a1\u3002\n\n\u5373\u53ef\u907f\u514d\u591a\u4e2a$B$\u3001$C$\u91cd\u590d\u5339\u914d\u4e00\u4e2a$A$\u7684\u60c5\u51b5\u4e86\u3002\n\n\u7ec8\u4e8e\u53ef\u4ee5\u4e0a\u4ee3\u7801\u4e86\uff1a\uff08\u6211**\u592a\u83dc\u4e86**,\u4e0d\u4f1a$dinic$,\u6240\u4ee5\u53ea\u80fd\u5199$E-K$\u4e86\uff09\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn = 105, maxm = 10000005, INF = 2147483647;\nint head[maxn<<2], ver[maxm], edge[maxm], Next[maxm], tot;\nvoid add(int x,int y,int z)\n{\n\tver[++tot] = y, edge[tot] = z, Next[tot] = head[x], head[x] = tot;\n\tver[++tot] = x, edge[tot] = 0, Next[tot] = head[y], head[y] = tot;\n}\nint n, p, q;\n//A\uff1a1~n, B\uff1an+1~n+p, C\uff1an+p+1~n+p+q, A'\uff1an+p+q+1~n+p+q+n \nint s, t, maxflow, incf[maxn<<2], pre[maxn<<2];bool vis[maxn<<2];\nbool bfs()\n{\n\tfor(int i=1; i<=n+p+q+n+2; i++) vis[i] = false;\n\tqueue<int> Q;\n\tQ.push(s), vis[s] = true, incf[s] = INF;\n\twhile(!Q.empty())\n\t{\n\t\tint x = Q.front(); Q.pop();\n\t\tfor(int i=head[x]; i; i=Next[i])\n\t\t   if(edge[i])\n\t\t   {\n\t\t   \t  int y = ver[i];\n\t\t   \t  if(vis[y]) continue;\n\t\t   \t  incf[y] = min(incf[x], edge[i]), pre[y] = i;\n\t\t   \t  vis[y] = true;\n\t\t   \t  if(y == t) return true;\n\t\t   \t  Q.push(y);\n\t\t   }\n\t}\n\treturn false;\n}\nvoid update()\n{\n\tint x = t;\n\twhile(x!=s)\n\t{\n\t\tint i = pre[x];\n\t\tedge[i] -= incf[t];\n\t\tedge[i^1] += incf[t];\n\t\tx = ver[i^1];\n\t}\n\tmaxflow+=incf[t];\n}\nint main()\n{\n\ttot = 1;\n\tscanf(\"%d%d%d\",&n,&p,&q);\n\ts = n+p+q+n+1, t = n+p+q+n+2;\n\tfor(int i=1; i<=n; i++)\n\t   for(int j=1; j<=p; j++)\n\t   {\n\t\t   bool x;\n\t\t   scanf(\"%d\",&x); \n\t\t   if(x) add(j+n, i, 1);\n\t   }\n\tfor(int i=1; i<=n; i++)\n\t   for(int j=1; j<=q; j++)\n\t   {\n\t   \t   bool x;\n\t   \t   scanf(\"%d\",&x);\n\t   \t   if(x) add(i+n+p+q, j+n+p, 1);\n\t   }\n\tfor(int i=1; i<=p; i++) add(s, i+n, 1);\n\tfor(int i=1; i<=q; i++) add(i+n+p, t, 1);\n\tfor(int i=1; i<=n; i++) add(i, i+n+p+q, 1);\n\twhile(bfs()) update();\n\tprintf(\"%d\", maxflow);\n\treturn 0;\n}\n```\n\n## \uff08\u56db\uff09\u603b\u7ed3\n\u8fd9\u9053\u9898\u662f\u4e00\u9053\u975e\u5e38\u597d\u7684\u9898\u76ee\uff0c\u5b83\u7684\u5efa\u56fe\u65b9\u5f0f\u5f88\u65b0\u9896\u3002\n\n\u7f51\u7edc\u6d41\u7684\u9898\u76ee\u8003\u7684\u65e0\u975e\u5c31\u662f\u5efa\u56fe\uff0c\u53ea\u8981\u628a\u56fe\u5efa\u597d\u4e86\uff0c~~\u8fd8\u6709\u4ec0\u4e48\u9898\u641e\u4e0d\u6382?~~\n\n\u6700\u540e\u7684\u6700\u540e\uff0c\u4eca\u5929\u662f2018\u7684\u6700\u540e\u4e00\u5929\uff0c\u795d\u5927\u5bb6\u5728\u65b0\u7684\u4e00\u5e74\u91cc**RP++**!\u66f4\u4e0a\u4e00\u5c42\u697c!",
        "postTime": 1546266706,
        "uid": 76228,
        "name": "God\u306efather",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1402 \u3010\u9152\u5e97\u4e4b\u738b\u3011"
    },
    {
        "content": "\u9898\u89e3\u5728[\u535a\u5ba2](http://www.cnblogs.com/YoungNeal/p/8570432.html)\u98df\u7528\u6548\u679c\u66f4\u4f73\u54e6~\n\n### Solution\n\u7b2c\u4e00\u773c\u770b\u5230\u5c31\u662f\u7f51\u7edc\u6d41\uff0c\u4f46\u662f\u600e\u4e48\u4fdd\u8bc1\u6bcf\u4e2a\u4eba\u4e0d\u4f1a\u88ab\u91cd\u590d(\u5206\u8eab)\u5229\u7528\uff0c\u6bcf\u95f4\u623f\u5b50\u548c\u6bcf\u9053\u83dc\u90fd\u53ea\u7528\u4e00\u6b21\u5462\uff1f\n\n\u62c6\u70b9\u3002\n\n\u4f46\u662f\u6700\u5f00\u59cb\u7684\u601d\u8def\u7e41\u7410\u4e86\u5f88\u591a\uff0c\u4e0d\u662f\u628a\u4eba\u5f53\u505a\u4e2d\u95f4\u70b9\uff0c\u800c\u662f\u628a\u83dc\u548c\u623f\u95f4\u90fd\u5f53\u4f5c\u4e2d\u95f4\u70b9\u62c6\u5f00\uff0c\u7136\u540e\u518d\u628a\u4eba\u62c6\u5f00\u3002\u3002 \n\n\u8fd9\u6837\u7684\u505a\u6cd5\u597dsb\uff0c\u7ed3\u679c\u83ab\u540d wa \u4e86\u4e09\u4e2a\u70b9\uff0c\u4e8e\u662f\u779f\u4e86\u4e00\u773c\u9898\u89e3\uff0c\u8bf4\u628a\u4eba\u5f53\u4f5c\u4e2d\u95f4\u70b9\uff0c\u8fd9\u6837\u53ea\u62c6\u4eba\u5373\u53ef\u3002\n\n\u604d\u7136\u5927\u609f\uff0c\u4ece\u8d85\u7ea7\u6e90\u70b9\u5411\u6bcf\u9053\u83dc\u8fde\u6d41\u91cf\u4e3a 1 \u7684\u8fb9\uff0c\u8bf4\u660e\u4e00\u9053\u83dc\u53ea\u80fd\u88ab\u7528\u4e00\u6b21\uff0c\u540c\u7406\uff0c\u4ece\u6bcf\u4e2a\u623f\u95f4\u5411\u8d85\u7ea7\u6c47\u70b9\u8fde\u6d41\u91cf\u4e3a 1 \u7684\u8fb9\u3002\u7136\u540e\u628a\u4eba\u62c6\u70b9\u5373\u53ef\u3002\n\n\u597d\u9898\u554a~\n### Code\n```\n// By YoungNeal\n#include<queue>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\nusing namespace std;\n\nint s,t,flow;\nint a[1005];\nint pre[1005];\nint head[1005];\nint n,p,q,cnt=1;\n\nstruct Edge{\n    int to,nxt,flow;\n}edge[1000005];\n\nvoid add(int x,int y,int z){\n    edge[++cnt].to=y;\n    edge[cnt].nxt=head[x];\n    edge[cnt].flow=z;\n    head[x]=cnt;\n}\n\nbool bfs(){\n    queue<int> q;\n    memset(a,0,sizeof a);\n    a[s]=0x3f3f3f3f;\n    q.push(s);\n    while(q.size()){\n        int u=q.front();q.pop();\n        for(int i=head[u];i;i=edge[i].nxt){\n            int to=edge[i].to;\n            if(!edge[i].flow) continue;\n            if(a[to]) continue;\n            a[to]=min(a[u],edge[i].flow);\n            pre[to]=i;\n            q.push(to);\n        }\n    }\n    if(!a[t]) return 0;\n    flow+=a[t];\n    return 1;\n}\n\nvoid update(){\n    int m=t;\n    for(;pre[m];m=edge[pre[m]^1].to)\n        edge[pre[m]].flow-=a[t],edge[pre[m]^1].flow+=a[t];\n}\n\nsigned main(){\n    scanf(\"%d%d%d\",&n,&p,&q);\n    s=2*n+q+p+1,t=s+1;\n    for(int i=1;i<=n;i++){\n        for(int x,j=1;j<=p;j++){\n            scanf(\"%d\",&x);\n            if(x^1) continue;\n            add(j,p+i,1);\n            add(p+i,j,0);\n        }\n    }\n    for(int i=1;i<=n;i++){\n        for(int x,j=1;j<=q;j++){\n            scanf(\"%d\",&x);\n            if(x^1) continue;\n            add(p+n+q+i,p+n+j,1);\n            add(p+n+j,p+n+q+i,0);\n        }\n    }\n    for(int i=1;i<=n;i++) add(p+i,p+n+q+i,1),add(p+n+q+i,p+i,0);\n    for(int i=1;i<=p;i++) add(s,i,1),add(i,s,0);\n    for(int i=p+1+n;i<=p+n+q;i++) add(i,t,1),add(t,i,0);\n    while(bfs()) update();\n    printf(\"%d\",flow);\n    return 0;\n}\n```",
        "postTime": 1521249636,
        "uid": 56778,
        "name": "YoungNeal",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1402 \u3010\u9152\u5e97\u4e4b\u738b\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u76ee\u770b\u4e86\u4e00\u773c\u540e\uff0c\u5c31\u53ef\u4ee5\u770b\u51fa\u662f\u6700\u5927\u5339\u914d\u95ee\u9898\uff0c\u7528\u4e8c\u5206\u56fe\u5c31\u80fd\u505a\u51fa\u6765\uff0c\u53ea\u662f\u8fd9\u4e2a\u9898\u76ee\u5b83\u4e0d\u4ec5\u4ec5\u662f\u4eba\u4e0e\u623f\u5b50\u7684\u6700\u5927\u5339\u914d\u95ee\u9898\uff0c\u8fd8\u5916\u52a0\u4e86\u83dc\u7684\u6700\u5927\u5339\u914d\uff0c\u56e0\u6b64\u8fd9\u4e2a\u9898\u76ee\u662f\u53ef\u4ee5\u7528\u4e24\u4e2a\u4e8c\u5206\u56fe\u6765\u89e3\u51b3\u7684\n\n### \u8fd9\u4e2a\u9898\u76ee\u5c45\u7136\u662f\u7701\u9009\u96be\u5ea6qwq\n\n~~\u521a\u521a\u5b66\u5b8c\u4e8c\u5206\u56fe\u7684\u6211\u90fd\u505a\u51fa\u6765\u4e86\u5462qwq~~\n\n# \u4e0a\u4ee3\u7801\uff0c\u6ce8\u610f\u4e8b\u9879\u5728\u540e\u9762\uff01\uff01\n```cpp\n#include<iostream>\n#include<cstring>\n#include<vector>\nusing namespace std;\nstruct node\n{\n\tint fang[101],cai[101];\n}a[101];\nint n,p,q,ans,v1[101],v2[101],link1[101],link2[101],ll1[101],ll2[101];//\u5b9a\u4e49\u4e24\u4e2a\u4e8c\u5206\u56fe\u9700\u8981\u7684\u4e1c\u4e1cqwq\nbool find1(int x)//\u5339\u914d\u623f\u95f4\n{\n\tfor(int i=1;i<=p;i++)\n\t{\t\t\t\t\t\t\t\n\t\tif(!v1[i]&&a[x].fang[i])  \t\t\n\t\t{\t\t\t\t\t\t\n\t\t\tv1[i]=1;\t\t\n\t\t\tif(link1[i]==0||find1(link1[i]))\n\t\t\t{\n\t\t\t\tlink1[i]=x;\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\nbool find2(int x)//\u5339\u914d\u83dc\n{\n\tfor(int i=1;i<=q;i++)\n\t{\t\t\t\t\t\t\t\n\t\tif(!v2[i]&&a[x].cai[i])  \t\t\n\t\t{\t\t\t\t\t\t\n\t\t\tv2[i]=1;\t\t\n\t\t\tif(link2[i]==0||find2(link2[i]))\n\t\t\t{\n\t\t\t\tlink2[i]=x;\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\nint main()\n{\n\tcin>>n>>p>>q;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=p;j++)\n\t\t\tcin>>a[i].fang[j];\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=q;j++)\n\t\t\tcin>>a[i].cai[j];\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tmemset(v1,0,sizeof(v1));\n\t\tmemset(v2,0,sizeof(v2));\n\t\tfor(int j=1;j<=p;j++)//\u91cd\u70b9\n\t\t\tll1[j]=link1[j];\n\t\tfor(int j=1;j<=q;j++)//\u91cd\u70b9\n\t\t\tll2[j]=link2[j]; \n\t\tif(find1(i)&&find2(i))\n\t\t\tans++;\n\t\telse\n\t\t{\n\t\t\tfor(int j=1;j<=p;j++)//\u91cd\u70b9\n\t\t\t\tlink1[j]=ll1[j];\n\t\t\tfor(int j=1;j<=q;j++)//\u91cd\u70b9\n\t\t\t\tlink2[j]=ll2[j]; \n\t\t}\n\t}\n\tcout<<ans;\n\treturn 0;//\u5b8c\u7f8e\u7ed3\u675f\n}\n```\n\u770b\u5230\u4e0a\u9762\u4ee3\u7801\u7684\u91cd\u70b9\uff0c\u5f88\u591a\u4eba\u4f1a\u95ee\u8fd9\u662f\u5e72\u561b\uff0c\u4e3e\u4e2a\u4f8b\u5b50\n\n\u7f16\u53f7\u4e3a3\u7684\u5ba2\u4eba\u559c\u6b221\u53f7\u623f\u95f4\uff0c1\u53f7\u83dc\n\n\u53ef\u662f\u623f\u95f41\u53f7\u88ab\u5360\u7528\u4e86\uff0c\u800c\u83dc\u6ca1\u6709\u88ab\u5360\u7528\n\n\u8fd9\u65f6\u6765\u4e86\u4e00\u4e2a\u7f16\u53f7\u4e3a4\u7684\u5ba2\u4eba\uff0c\u559c\u6b222\u53f7\u623f\uff08\u7a7a\uff09\uff0c1\u53f7\u83dc\n\n\u4f46\u662f\u4f60\u7684ans\u5e76\u4e0d\u4f1a+1\uff0c\u5e94\u4e3afind2\u65f6link2[1]=3\uff1b\n\n\u4e5f\u5c31\u662f\u8bf4\u4e00\u53f7\u83dc\u88ab3\u53f7\u5ba2\u4eba\u5360\u7528\u4e86\uff1b\n\n\u4f46\u662f3\u53f7\u5ba2\u4eba\u5e76\u6ca1\u6709\u5360\u7528\n\n# \u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u8fd8\u539f\u6570\u7ec4\uff01\uff01",
        "postTime": 1533534417,
        "uid": 96968,
        "name": "3493441984zz",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1402 \u3010\u9152\u5e97\u4e4b\u738b\u3011"
    },
    {
        "content": "\u840c\u65b0\u7b2c\u4e8c\u6b21\u5f31\u5f31\u53d1\u4e2a\u9898\u89e3\n\n~~\u611f\u89c9\u96be\u5f97\u8ba4\u771f\u505a\u9898~~\n\u5728dalao\u5e2e\u52a9\u4e0b\u7ec8\u4e8e\u61c2\u4e86\u5efa\u56fe\u64cd\u4f5c~~\n\n\u4e0d\u61c2\u7f51\u7edc\u6d41\u5148\u53bb[\u677f\u5b50](https://www.luogu.org/problemnew/show/P3376)\n\n\u5f88\u5bb9\u6613\u60f3\u5230\u7f51\u7edc\u6d41\u8dd1\u4e00\u904d\u6700\u5927\u6d41\n\n\u6240\u4ee5\u8fd9\u9898\u96be\u70b9\u5927\u6982\u5c31\u662f\u5efa\u56fe\n\n\u6240\u4ee5\u6211\u5361\u4e86\u5f88\u4e45\n\n\u5927\u5bb6\u90fd\u80fd\u60f3\u5230\u8fd9\u4e2a\u5efa\u56fe\n![](https://cdn.luogu.com.cn/upload/pic/16199.png)\n\n\u5176\u4e2d1.2\u4e3a\u623f\uff0c5 6\u4e3a\u4eba\uff0c3.4\u4e3a\u83dc\uff0c500\u4e3a\u7ec8\u70b9\n\n\u7136\u540e\u9ad8\u5174\u53bb\u4ea4 60\u5206emmmmmm\n\n\u767e\u601d\u4e0d\u5f97\u5176\u89e3\n\n\u53c2\u8003daolao\u540e\u77e5\u9053\u4e86\u4e00\u4e9b\u795e\u5947\u7684\u60c5\u51b5\n\n[\u611f\u8c22\u8fd9\u4f4ddalao](https://www.luogu.org/space/show?uid=50971)\n\n\u50cf\u8fd9\u79cd\u60c5\u51b5![](https://cdn.luogu.com.cn/upload/pic/16195.png)\n\n\u7b54\u6848\u5e94\u8be5\u662f1\n\u4f46\u8fd9\u4e2a\u56fe\u8dd1\u4e0b\u6765\u662f3\n\n\u4e8e\u662f\u5c31\u4e0d\u5bf9\u4e86\n\n\u4ed4\u7ec6\u601d\u8003\u5c31\u6709\u4e86\u5efa\u4e24\u4e2a\u4eba\u7684\u70b9\u7684\u65b9\u6cd5\n\n\u4e00\u4e2a\u8fde\u623f\u5b50\n\u4e00\u4e2a\u8fde\u83dc\n\n\u518d\u52a0\u4e00\u4e2a\u70b9\u6765\u9650\u6d41\u7684\u64cd\u4f5c\u53ef\u4ee5\u4fdd\u8bc1\u6bcf\u4e2a\u4eba\u53ea\u9009\u4e00\u623f\u4e00\u83dc\n\n\u56fe\u5982\u4e0b\n![](https://cdn.luogu.com.cn/upload/pic/16196.png)\n\n\u4e8e\u662f\u5c31\u6210\u4e86\uff01\uff01\uff01\uff01\uff01\uff01\n\u7136\u540e\u5c31AC\u4e86\n\u5c31\u662f\u8fd9\u6837\n\n~~\u867d\u7136\u6211\u4e0d\u61c2\u4e3a\u5565\u6709\u65f6\u5efa\u56fe\u4e00\u6837\u5374\u662f\u9519\u7684\uff0c\u5927\u6982\u8981\u6ce8\u610f\u4e00\u4e0b\u5efa\u56fe\u987a\u5e8f\u5927\u5bb6\u6478\u7d22\u6478\u7d22~~\n\u603b\u4e4b\u5f88\u795e\u5947\n\n\u6837\u4f8b\u6700\u7ec8\u56fe\u5982\u4e0b\n![](https://cdn.luogu.com.cn/upload/pic/16197.png)\n\n~~\u770b\u8d77\u6765\u548c\u7b2c\u4e00\u4e2a\u56fe\u6ca1\u5565\u5dee\u522b\u6240\u4ee5\u6211\u5361\u4e86\u5f88\u4e45~~\n\n\u7136\u540e\u4ee3\u7801\u5c31\u5f88\u7b80\u5355\u4e86\n\u8fd9\u91ccdinic\n\n```\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <cstdlib>\n#include <queue>\n#define N 10003\n#define INF (1<<30)\nusing namespace std;\nint head[N],deep[N],ans;\nint n,m,n1,m1,m0,ed,st;\nint cnt=1;//\u6ce8\u610f\u4ece2\u5f00\u59cb\u5b58\uff0c\u4fdd\u8bc1\u5f02\u6216\n\nstruct node\n{\n    int to,w,fr;\n    int _nt;\n}edge[N];\nvoid add(int x,int y,int z)//\u8fd9\u91cc\u524d\u5411\u661f\n{\n    cnt++;\n    edge[cnt].to=y;\n    edge[cnt]._nt=head[x];\n    edge[cnt].w=z;\n    head[x]=cnt;\n}\n\nint bfs(int s,int t)//\u4f20\u7edfdinic\u4e0d\u89e3\u91ca\n{\n    memset(deep,0,sizeof(deep));\n    queue<int> q;\n    q.push(s);\n    deep[s]=1;\n    while(!q.empty())\n    {\n        int tmp=q.front();\n        q.pop();\n        for(int i=head[tmp];i!=-1;i=edge[i]._nt)\n        {\n            int v=edge[i].to;\n           if(deep[v]||edge[i].w<=0)continue;\n            deep[v]=deep[tmp]+1;\n            q.push(v);\n            if(v==t)return 1;\n        }\n\n    }\n    if(deep[t])return 1;\n    else return 0;\n}\nint dfs(int u,int ed,int flow)\n{\n    if(u==ed)return flow;\n    int ans=0;\n    for(int i=head[u];i!=-1&&ans<flow;i=edge[i]._nt)\n    {\n        int v=edge[i].to;\n        if(deep[v]!=deep[u]+1)continue;\n        if(!edge[i].w)continue;\n        int x=dfs(v,ed,min(edge[i].w,flow-ans));\n        edge[i].w-=x;\n        edge[i^1].w+=x;\n        ans+=x;\n\n    }\n    return ans;\n}\n\nint dinic(int s,int t)//dinic\u64cd\u4f5c\n{\n    int sum=0;\n    while(bfs(s,t))\n        sum+=dfs(s,t,INF);\n    return sum;\n\n}\nint main()\n{\n\n    memset(head,-1,sizeof(head));\n    scanf(\"%d%d%d\",&n,&m1,&m0);\n    st=0;ed=500;//\u5efa\u6e90\u70b9\u548c\u6c47\u70b9\n    for(int i=1;i<=m1;i++)//\u9996\u5148\u5efa\u623f\n    {\n        add(0,i,1);\n        add(i,0,0);\n    }\n    for(int i=1;i<=m0;i++)//\u518d\u5efa\u83dc\n    {\n        add(i+m1,ed,1);\n        add(ed,i+m1,0);\n\n    }\n    for(int i=1;i<=n;i++)//\u518d\u5efa\u4e24\u4e2a\u4eba\n    {\n        add(i+m1+m0,i+m1+m0+n,1);\n        add(i+m1+m0+n,i+m1+m0,0);\n    }\n    for(int i=1;i<=n;i++)//\u518d\u8fde\u8fb9\uff0c\u623f\u5b50\u7684\u8fb9\n    {\n        for(int j=1;j<=m1;j++)\n        {\n            int x;\n            scanf(\"%d\",&x);\n            if(x==1)\n                add(j,i+m1+m0,1),add(i+m1+m0,j,0);\n        }\n    }\n    for(int i=1;i<=n;i++)//\u518d\u8fde\u83dc\n    {\n        for(int j=1;j<=m0;j++)\n        {\n            int x;\n            scanf(\"%d\",&x);\n            if(x==1)\n             add(i+n+m1+m0,m1+j,1),add(m1+j,i+n+m1+m0,0);\n \n               \n        }\n    }\n\n    printf(\"%d\",dinic(st,ed));//\u76f4\u63a5\u8f93\u51fa\n\n    return 0;\n}\n\n```\n\n\u8fd9\u9898\u53ef\u80fd\u6709\u7384\u5b66\u5efa\u56fe\u987a\u5e8f\uff0c\u5927\u6982\u8fd9\u6837\u6bd4\u8f83\u4fdd\u9669\n\n\u7136\u540e\u5c31\u8bb2\u5b8c\u4e86\n\nemmmmmmmmmmm\u771f\u957f\uff08\u82e6\u7b11\uff09\n\n\u987a\u4fbf[\u53cc\u500d\u7ecf\u9a8c](https://www.luogu.org/problemnew/show/P1231)\n\n\u4f30\u8ba1\u90fd\u80fd\u61c2\u5427~\n",
        "postTime": 1521947975,
        "uid": 55501,
        "name": "Aoki_\u704f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1402 \u3010\u9152\u5e97\u4e4b\u738b\u3011"
    },
    {
        "content": "~~\u8fd9\u4e48\u6c34\u771f\u6709\u7701\u9009/NOI-\u5417\uff1f\n\u849f\u84bb\u53ea\u7528\u4e8624\u5206\u949f\u5c31\u79d2\u6740\u4e86~~~~~~\n\n## \u5f88\u660e\u663e\u7684\u6700\u5927\u6d41\uff08\u6216\u8005\u8bf4\u4e8c\u5206\u56fe\u5339\u914d\uff09\n\n\u4e0d\u4f1a\u6700\u5927\u6d41\u7684[\u53ef\u4ee5\u53bb\u6211\u7684\u6d1b\u8c37\u65e5\u62a5\u6367\u573a](https://www.luogu.org/blog/ONE-PIECE/wang-lao-liu-di-zong-jie)\n\n## \u5f88\u663e\u7136\u8981\u8fd9\u4e48\u5efa\u56fe\uff1a\n\n## s\u6d41\u5411\u623f\u95f4\uff0c\u623f\u95f4\u6d41\u5411\u987e\u5ba2\uff0c\u987e\u5ba2\u6d41\u5411\u83dc\uff0c\u83dc\u6d41\u5411t\uff0c\u6bcf\u6761\u8fb9\u6d41\u91cf\u9650\u5236\u4e3a1\uff0c\u7136\u540e\u8dd1\u6700\u5927\u6d41\u3002\n\n\u7136\u800c\u8fd9\u6837\u53ef\u80fd\u4f1a\u9519\uff1a\n\n\u8bf7\u770b\u4e0b\u56fe:\n\n![](https://cdn.luogu.com.cn/upload/pic/32626.png)\n\n\u67d0\u987e\u5ba2\u4e00\u4e2a\u4eba\u9738\u5360\u4e86\u4e24\u4e2a\u623f\u95f4\u548c\u4e24\u4e2a\u83dc\uff0c\u5bfc\u81f4\u6700\u5927\u6d41\u4e3a2\uff08\u5b9e\u9645\u5e94\u8be5\u4e3a1\uff0c\u56e0\u4e3a\u53ea\u6ee1\u8db3\u4e861\u4e2a\u987e\u5ba2\uff09\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u8981\u9650\u5236\u6bcf\u4e2a\u987e\u5ba2\u53ea\u7528\u4e00\u4e2a\u623f\u95f4\u548c\u4e00\u4e2a\u83dc\n\n\u600e\u4e48\u9650\u5236\u5462\uff1f\n\n# \u4e3b\u8981\u601d\u60f3\uff1a\u62c6\u70b9\n\n\u4e3a\u4ec0\u4e48\uff1f~~\u5237\u6c34\u9898\u5237\u591a\u4e86\u5c31\u5f88\u81ea\u7136\u7684\u4f1a\u8fd9\u4e48\u60f3~~\n\n\u4e3a\u4e86\u9650\u5236\u5bb9\u91cf\u3002  \u4ec0\u4e48\u610f\u601d\uff1f\n\n\u6bcf\u4e2a\u987e\u5ba2\u80af\u5b9a\u53ea\u80fd\u4f4f\u4e00\u95f4\u623f\u95f4\u548c\u5403\u4e00\u9053\u83dc\uff1a\n\n\u6240\u4ee5\u6211\u4eec\u628a\u4e00\u4e2a\u987e\u5ba2\u62c6\u6210\u4e24\u4e2a\u70b9\uff1a\u5165\u70b9\u548c\u51fa\u70b9\uff0c\u7136\u540e\u8fde\u4e00\u6761\u5165\u70b9\u5230\u51fa\u70b9\u7684\u8fb9\uff0c\u5bb9\u91cf\u9650\u5236\u4e3a1\uff0c\u8fd9\u6837\u6bcf\u4e2a\u987e\u5ba2\u5c31\u6700\u591a\u53ea\u7ecf\u8fc7\u4e00\u6b21\u4e86\uff0c\u8dd1\u51fa\u6765\u7684\u6700\u5927\u6d41\u5c31\u662f\u6b63\u89e3\u3002\n\n\u521a\u624d\u90a3\u5f20\u56fe\u62c6\u4e86\u70b9\u5c31\u662f\u8fd9\u6837\uff1a\n![](https://cdn.luogu.com.cn/upload/pic/32628.png)\n\n\u56fe\u753b\u7684\u5f88\u4e11\uff0c\u4f46\u8fd8\u662f\u80fd\u770b\u61c2\u7684\uff08\u5e94\u8be5\u5427\uff09\n\n\n------------\n\n\u7136\u540e\u5c31\u662f\u4ee3\u7801\u4e86\n## \u6211\u5199\u7684EK\uff1a\n```\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<queue>\n#include<algorithm>\nusing namespace std;\nconst int inf=1<<30;\ninline int Read(){\n\tint x=0,f=1;\n\tchar c=getchar();\n\twhile(c>'9'||c<'0'){if(c=='-')f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9')x=x*10+c-'0',c=getchar();\n\treturn x*f;\n}\nint n,p,q,s,t;\nstruct Node{\n\tint v;\n\tint val;\n\tint next;\n}node[101101];\nint head[1010],top=1;\ninline void addedge(int u,int v,int val){\n\tnode[++top].v=v;\n\tnode[top].val=val;\n\tnode[top].next=head[u];\n\thead[u]=top;\n}\ninline void add(int u,int v,int val){\n\taddedge(u,v,val);\n\taddedge(v,u,0);\n}\nint vis[1010];\nstruct P{\n\tint fa;\n\tint pos;\n}pre[101011];\nbool bfs(){\n\tmemset(vis,0,sizeof(vis));\n\tqueue<int>q;\n\tq.push(s);\n\twhile(!q.empty()){\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tfor(int i=head[u];i;i=node[i].next){\n\t\t\tint d=node[i].v;\n\t\t\tif(node[i].val!=0&&vis[d]==0){\n\t\t\tpre[d].fa=u;\n\t\t\tpre[d].pos=i;\n\t\t\tif(d==t)return 1;\n\t\t\tq.push(d);\n\t\t\tvis[d]=1;\t\n\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\nint maxflow=0;\nint EK(){\n\tmaxflow=0;\n\tint mi;\n\twhile(bfs()){\n\t\tmi=inf;\n\t\tfor(int i=t;i!=s;i=pre[i].fa)\n\t\tmi=min(mi,node[pre[i].pos].val);\n\t\tfor(int i=t;i!=s;i=pre[i].fa){\n\t\t\tnode[pre[i].pos].val-=mi;\n\t\t\tnode[pre[i].pos^1].val+=mi;\n\t\t}\n\t\tmaxflow+=mi;\n\t}\n\treturn maxflow;\n}\nint main(){\n\tn=Read(),p=Read(),q=Read();\n\tregister int i,j;\n\tint f;\n\ts=1001,t=1002;\n\tfor(i=1;i<=n;i++)add(i,i+n,1);//i\u8868\u793a\u987e\u5ba2\u5165\u70b9\uff0ci+n\u8868\u793a\u987e\u5ba2\u51fa\u70b9\n\tfor(i=1;i<=p;i++)add(s,200+i,1);//200+i\u8868\u793a\u623f\u95f4\n\tfor(i=1;i<=q;i++)add(300+i,t,1);//300+i\u8868\u793a\u83dc \n\tfor(i=1;i<=n;i++){\n\t\tfor(j=1;j<=p;j++){\n\t\tf=Read();\n\t\tif(f==1)add(200+j,i,1);\t\n\t\t}\n\t} \n\tfor(i=1;i<=n;i++){\n\t\tfor(j=1;j<=q;j++){\n\t\t\tf=Read();\n\t\t\tif(f==1)add(i+n,300+j,1);\n\t\t}\n\t}\n\tprintf(\"%d\",EK());\n\treturn 0;\n}\n```\n\n\n------------\n\n## \u4e8c\u5206\u56fe\u4e2dEK\u4e0d\u591f\u9ad8\u6548\uff0c\u4e8e\u662f\u6211\u4eec\u8fd8\u53ef\u4ee5\u9009\u62e9Dinic\n\n[\u4e0d\u4f1aDInic\u7684\u6765\u6367\u573a\u554a](https://www.luogu.org/blog/ONE-PIECE/wang-lao-liu-jiang-xie-zhi-dinic)\n\nDinic\u4ee3\u7801\uff1a\n```\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<queue>\n#include<algorithm>\nusing namespace std;\nconst int inf=1<<30;\ninline int Read(){\n\tint x=0,f=1;\n\tchar c=getchar();\n\twhile(c>'9'||c<'0'){if(c=='-')f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9')x=x*10+c-'0',c=getchar();\n\treturn x*f;\n}\nint n,p,q,s,t;\nstruct Node{\n\tint v;\n\tint val;\n\tint next;\n}node[101101];\nint head[1010],top=1;\ninline void addedge(int u,int v,int val){\n\tnode[++top].v=v;\n\tnode[top].val=val;\n\tnode[top].next=head[u];\n\thead[u]=top;\n}\ninline void add(int u,int v,int val){\n\taddedge(u,v,val);\n\taddedge(v,u,0);\n}\nint inque[1010],dep[1010];\nbool bfs(){\n\tmemset(inque,0,sizeof(inque));\n\tmemset(dep,0x3f,sizeof(dep));\n\tqueue<int>q;\n\tq.push(s);\n\tdep[s]=0;\n\twhile(!q.empty()){\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tinque[u]=0;\n\t\tfor(int i=head[u];i;i=node[i].next){\n\t\t\tint d=node[i].v;\n\t\t\tif(node[i].val&&dep[d]>dep[u]+1){\n\t\t\t\tdep[d]=dep[u]+1;\n\t\t\t\tif(inque[d]==0){\n\t\t\t\t\tq.push(d);\n\t\t\t\t\tinque[d]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn dep[t]!=0x3f3f3f3f;\n}\nint maxflow=0;\nint vis;\nint dfs(int u,int flow){\n\tif(u==t){\n\t\tvis=1;\n\t\tmaxflow+=flow;\n\t\treturn flow;\n\t}\n\tint used=0;\n\tfor(int i=head[u];i;i=node[i].next){\n\t\tint d=node[i].v;\n\t\tif(node[i].val&&dep[d]==dep[u]+1){\n\t\t\tint mi=dfs(d,min(node[i].val,flow-used));\n\t\t\tif(mi){\n\t\t\t\tnode[i].val-=mi;\n\t\t\t\tnode[i^1].val+=mi;\n\t\t\t\tused+=mi;\n\t\t\t}\n\t\t}\n\t\tif(used==flow)break;\n\t}\n\treturn used;\n}\nint Dinic(){\n\tmaxflow=0;\n\twhile(bfs()){\n\t\tvis=1;\n\t\twhile(vis)vis=0,dfs(s,inf);\n\t}\n\treturn maxflow;\n}\nint main(){\n\tn=Read(),p=Read(),q=Read();\n\tregister int i,j;\n\tint f;\n\ts=1001,t=1002;\n\tfor(i=1;i<=n;i++)add(i,i+n,1);//i\u8868\u793a\u987e\u5ba2\u5165\u70b9\uff0ci+n\u8868\u793a\u987e\u5ba2\u51fa\u70b9\n\tfor(i=1;i<=p;i++)add(s,200+i,1);//200+i\u8868\u793a\u623f\u95f4\n\tfor(i=1;i<=q;i++)add(300+i,t,1);//300+i\u8868\u793a\u83dc \n\tfor(i=1;i<=n;i++){\n\t\tfor(j=1;j<=p;j++){\n\t\tf=Read();\n\t\tif(f==1)add(200+j,i,1);\t\n\t\t}\n\t} \n\tfor(i=1;i<=n;i++){\n\t\tfor(j=1;j<=q;j++){\n\t\t\tf=Read();\n\t\t\tif(f==1)add(i+n,300+j,1);\n\t\t}\n\t}\n\tprintf(\"%d\",Dinic());\n\treturn 0;\n}\n```\n\n\n------------\n\n## Dinic\u8fd8\u6709\u5f53\u524d\u5f27\u4f18\u5316\uff08\u4e0d\u8fc7\u8fd9\u9898\u6570\u636e\u5b9e\u5728\u592a\u6c34\uff0c\u4f53\u73b0\u4e0d\u51fa\u4f18\u52bf\uff09\uff1a\n\n```\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<queue>\n#include<algorithm>\nusing namespace std;\nconst int inf=1<<30;\ninline int Read(){\n\tint x=0,f=1;\n\tchar c=getchar();\n\twhile(c>'9'||c<'0'){if(c=='-')f=-1;c=getchar();}\n\twhile(c>='0'&&c<='9')x=x*10+c-'0',c=getchar();\n\treturn x*f;\n}\nint n,p,q,s,t;\nstruct Node{\n\tint v;\n\tint val;\n\tint next;\n}node[101101];\nint head[1010],top=1;\ninline void addedge(int u,int v,int val){\n\tnode[++top].v=v;\n\tnode[top].val=val;\n\tnode[top].next=head[u];\n\thead[u]=top;\n}\ninline void add(int u,int v,int val){\n\taddedge(u,v,val);\n\taddedge(v,u,0);\n}\nint inque[1010],dep[1010],cur[1010];\nbool bfs(){\n\tregister int i;\n\tfor(i=1;i<=t;i++)dep[i]=inf,inque[i]=0,cur[i]=head[i];\n\tqueue<int>q;\n\tq.push(s);\n\tdep[s]=0;\n\twhile(!q.empty()){\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tinque[u]=0;\n\t\tfor(i=head[u];i;i=node[i].next){\n\t\t\tint d=node[i].v;\n\t\t\tif(node[i].val&&dep[d]>dep[u]+1){\n\t\t\t\tdep[d]=dep[u]+1;\n\t\t\t\tif(inque[d]==0){\n\t\t\t\t\tq.push(d);\n\t\t\t\t\tinque[d]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn dep[t]!=inf;\n}\nint maxflow=0;\nint vis;\nint dfs(int u,int flow){\n\tif(u==t){\n\t\tvis=1;\n\t\tmaxflow+=flow;\n\t\treturn flow;\n\t}\n\tint used=0;\n\tfor(int i=cur[u];i;i=node[i].next){\n\t\tcur[u]=i;\n\t\tint d=node[i].v;\n\t\tif(node[i].val&&dep[d]==dep[u]+1){\n\t\t\tint mi=dfs(d,min(node[i].val,flow-used));\n\t\t\tif(mi){\n\t\t\t\tnode[i].val-=mi;\n\t\t\t\tnode[i^1].val+=mi;\n\t\t\t\tused+=mi;\n\t\t\t}\n\t\t}\n\t\tif(used==flow)break;\n\t}\n\treturn used;\n}\nint Dinic(){\n\tmaxflow=0;\n\twhile(bfs()){\n\t\tvis=1;\n\t\twhile(vis)vis=0,dfs(s,inf);\n\t}\n\treturn maxflow;\n}\nint main(){\n\tn=Read(),p=Read(),q=Read();\n\tregister int i,j;\n\tint f;\n\ts=401,t=402;\n\tfor(i=1;i<=n;i++)add(i,i+n,1);//i\u8868\u793a\u987e\u5ba2\u5165\u70b9\uff0ci+n\u8868\u793a\u987e\u5ba2\u51fa\u70b9\n\tfor(i=1;i<=p;i++)add(s,200+i,1);//200+i\u8868\u793a\u623f\u95f4\n\tfor(i=1;i<=q;i++)add(300+i,t,1);//300+i\u8868\u793a\u83dc \n\tfor(i=1;i<=n;i++){\n\t\tfor(j=1;j<=p;j++){\n\t\tf=Read();\n\t\tif(f==1)add(200+j,i,1);\t\n\t\t}\n\t} \n\tfor(i=1;i<=n;i++){\n\t\tfor(j=1;j<=q;j++){\n\t\t\tf=Read();\n\t\t\tif(f==1)add(i+n,300+j,1);\n\t\t}\n\t}\n\tprintf(\"%d\",Dinic());\n\treturn 0;\n}\n```",
        "postTime": 1536668727,
        "uid": 28088,
        "name": "\u94b1\u9038\u51e1",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1402 \u3010\u9152\u5e97\u4e4b\u738b\u3011"
    },
    {
        "content": "# [P1402 \u9152\u5e97\u4e4b\u738b](https://www.luogu.org/problemnew/show/P1402)  \n\n[\u5b89\u5229\u535a\u5ba2](https://www.cnblogs.com/louhancheng/p/10118878.html)\n\n------\n\n# \u7b97\u6cd5\n\n\u7f51\u7edc\u6700\u5927\u6d41\u3002\u8fd9\u91cc\u4e0d\u8be6\u7ec6\u8bb2\uff0c\u8bf7\u5927\u5bb6\u5148\u638c\u63e1\u3002\n\n# \u601d\u8def\n\n> \u6ce8\u610f\uff0c\u4ee5\u4e0b\u51fa\u73b0\u7684\u6240\u6709\u8fb9\u8fb9\u6743\u7686\u4e3a1\uff0c\u4e14\u5176\u53cd\u5411\u8fb9\u8fb9\u6743\u4e3a0\n\n\u6211\u4eec\u4ee5\u623f\u95f4\u3001\u83dc\u3001\u4eba\u4e3a\u70b9\u5efa\u56fe\u3002\n\u50cf\u8fd9\u6837\uff1a\n\n![](https://img2018.cnblogs.com/blog/1431616/201812/1431616-20181214131744366-1260908236.png)\n\n\nS(=0)\u8868\u793a\u989d\u5916\u5efa\u7684\u4e00\u4e2a\u8d77\u59cb\u70b9\uff0cRi(=i + n + n)\u8868\u793a\u7b2ci\u4e2a\u623f\u95f4\uff0cDi(=i+n+n+p)\u8868\u793a\u7b2ci\u79cd\u83dc\uff0c\u7531\u4e8e\u4eba\u53ea\u6709\u4e00\u4e2a\uff0c\u800c\u7f51\u7edc\u6d41\u5904\u7406\u53ea\u7ecf\u8fc7\u4e00\u4e2a\u70b9\u4e0d\u65b9\u4fbf\uff0c\u6211\u4eec\u91c7\u7528\u4e00\u79cd\u795e\u5947\u65b9\u6cd5\u2014\u2014\u62c6\u70b9\uff01\u4e5f\u5c31\u662f\u8bf4\uff0c\u628a\u4e00\u4e2a\u4eba\u770b\u505a\u4e24\u4e2a\u70b9\uff0c\u8981\u5339\u914d\u8fd9\u4e2a\u4eba\u5fc5\u987b\u7ecf\u8fc7\u8fd9\u4e2a\u4eba\u4e24\u70b9\u4e4b\u95f4\u7684\u8fb9\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u63a7\u5236\u8fd9\u4e2a\u4eba\u53ea\u5339\u914d\u4e00\u6b21\u3002\u5982\u56fe\uff0cPi(=i)\u3001Pi'(=i+n)\u8868\u793a\u7b2ci\u4e2a\u4eba\u3002\n\n\u7136\u540e\u5efa\u8fb9\u3002\u5982\u56fe\uff0c\u5c06S\u4e0e\u6240\u6709Ri\u76f8\u8fde\uff0c\u5c06\u6240\u6709\u7684Di\u4e0eT\u76f8\u8fde\uff0cS\u4f5c\u4e3a\u6e90\u70b9\uff0cT\u4f5c\u4e3a\u6c47\u70b9\u3002\u5982\u679cPi\u559c\u6b22Rj\uff0c\u5c31\u5c06Pi\u4e0eRj\u76f8\u8fde\u3002\u5982\u679cPi\u559c\u6b22Dj\uff0c\u5c31\u5c06Dj\u4e0ePi'\u4e4b\u95f4\u76f8\u8fde\u3002\u5f53\u7136\uff0cPi\u4e0ePi'\u4e4b\u95f4\u4e5f\u8981\u8fde\u4e00\u6761\u8fb9\u3002\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u5957\u7f51\u7edc\u6700\u5927\u6d41\u8fa3\u3002\u6700\u540e\u5f97\u51fa\u7684\u7b54\u6848\u5373\u4e3a\u6ee1\u610f\u6570\u3002\n\n# \u62d3\u5c55\n\n\u6709\u4e00\u5929\u6765\u4e86n\u6279\u5ba2\u4eba\uff0c\u6bcf\u6279\u5ba2\u4eba\u559c\u6b22\u7684\u83dc\u3001\u623f\u95f4\u90fd\u76f8\u540c\u3002\u7b2ci\u6279\u5ba2\u4eba\u6709gi\u4f4d\u5ba2\u4eba\u3002\u5176\u4f59\u540c\u539f\u9898\u3002\n\n> HINT:\u6211\u4eec\u53ef\u4ee5\u628a\u6bcf\u6279\u5ba2\u4eba\u5f53\u505a2\u4e2a\u70b9Pi\u3001Pi'\uff0c~~\u5728Pi\u3001Pi'\u4e4b\u95f4\u8fdegi\u6761\u8fb9~~\u8fde\u4e00\u6761\u6743\u4e3agi\u7684\u8fb9\u5373\u53ef\u3002\u83dc\u3001\u623f\u95f4\u6bcf\u79cd\u6709\u591a\u4e2a\u540c\u7406\u3002\n\n# \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define open(s) freopen( s\".in\", \"r\", stdin ), freopen( s\".out\", \"w\", stdout )\n#define MAXN 405\n#define MAXM 40005\n\nint n, p, q;\nint hd[MAXN], nxt[MAXM << 1], to[MAXM << 1], val[MAXM << 1], tot(1);\nint ans, dis[MAXN];\nqueue<int> Q;\n\nint x, y;\nint S, T;\n\nvoid Add( int x, int y, int z ){ nxt[++tot] = hd[x]; hd[x] = tot; to[tot] = y; val[tot] = z; }\n\nbool BFS(){\n\twhile( !Q.empty() ) Q.pop();\n\tmemset( dis, 0, sizeof dis );\n\tQ.push(S); dis[S] = 1;\n\twhile( !Q.empty() ){\n\t\tx = Q.front(); Q.pop();\n\t\tfor ( int i = hd[x]; i; i = nxt[i] )\n\t\t\tif ( val[i] && !dis[to[i]] ){\n\t\t\t\tdis[to[i]] = dis[x] + 1;\n\t\t\t\tQ.push( to[i] );\n\t\t\t\tif ( to[i] == T ) return 1;\n\t\t\t}\n\t}\n\treturn 0;\n}\n\nint DFS( int x, int fl ){\n\tif ( x == T ) return fl;\n\tint res(fl), k;\n\tfor ( int i = hd[x]; i && res; i = nxt[i] ){\n\t\tif ( val[i] && dis[to[i]] == dis[x] + 1 ){\n\t\t\tk = DFS( to[i], min( res, val[i] ) );\n\t\t\tif ( !k ) dis[to[i]] = 0;\n\t\t\tval[i] -= k; val[i^1] += k; res -= k;\n\t\t}\n\t}\n\treturn fl - res;\n}\n\nint main(){\n\tscanf( \"%d%d%d\", &n, &p, &q );\n\tS = 0; T = 1 + n + n + p + q;\n\tfor ( int i = 1; i <= n; ++i ) Add( i, i + n, 1 ), Add( i + n, i, 0 );\n\tfor ( int i = 1; i <= p; ++i ) Add( S, i + n + n, 1 ), Add( i + n + n, S, 0 );\n\tfor ( int i = 1; i <= q; ++i ) Add( i + n + n + p, T, 1 ), Add( T, i + n + n + p, 0 );\n\t\n\tfor ( int i = 1; i <= n; ++i )\n\t\tfor ( int j = 1; j <= p; ++j ){\n\t\t\tint t; scanf( \"%d\", &t );\n\t\t\tif ( t ) Add( j + n + n, i, 1 ), Add( i, j + n + n, 0 );\n\t\t}\n\tfor ( int i = 1; i <= n; ++i )\n\t\tfor ( int j = 1; j <= q; ++j ){\n\t\t\tint t; scanf( \"%d\", &t );\n\t\t\tif ( t ) Add( i + n, j + n + n + p, 1 ), Add( j + n + n + p, i + n, 0 );\n\t\t}\n\tint t;\n\twhile( BFS() )\n\t\twhile( ( t = DFS( S, 0x7f7f7f7f ) ) > 0 ) ans += t;\n\tprintf( \"%d\\n\", ans );\n\treturn 0;\n}\n\n```\n\n# \u603b\u7ed3\n\n\u8fd9\u7c7b\u9898\u76ee\u5982\u679c\u8981\u7528\u7f51\u7edc\u6700\u5927\u6d41\u89e3\u51b3\uff0c\u4e00\u822c\u6765\u8bf4\uff0c\u5c06\u201c\u9009\u62e9\u8005\u201d\u653e\u4e2d\u95f4\uff0c\u5e76\u4e14\u8981\u62c6\u70b9\uff0c\u201c\u88ab\u9009\u7269\u201d\u653e\u4e24\u8fb9\uff0c\u76f4\u63a5\u4e0e\u6e90\u70b9\u3001\u6c47\u70b9\u76f8\u8fde\u3002\u4f46\u662f\u8fd9\u79cd\u505a\u6cd5\u201c\u88ab\u9009\u7269\u201d\u4e0d\u80fd\u591a\u4e8e\u4e24\u79cd\u3002\n\n\u5982\u679c\u591a\u4e8e\u4e24\u79cd\uff0c\u8981\u600e\u4e48\u505a\u5462\uff1f \u6211\u4e5f\u4e0d\u77e5\u9053 QAQ\uff09\u6c42\u6559\u5927\u4f6cQAQ",
        "postTime": 1544764743,
        "uid": 70786,
        "name": "_louhc",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1402 \u3010\u9152\u5e97\u4e4b\u738b\u3011"
    },
    {
        "content": "\u5176\u5b9e\u8fd9\u9053\u9898\u548c\u67d0\u9053[P1231 \u6559\u8f85\u7684\u7ec4\u6210](https://www.luogu.org/problem/P1231)\u51e0\u4e4e\u662f\u53cc\u500d\u7ecf\u9a8c\uff0c\u8003\u70b9\u4e5f\u4e00\u6837\n\n## \u5206\u6790\n\u8fd9\u9053\u9898\u662f\u4e00\u9053\u6700\u5927\u5339\u914d\u95ee\u9898\uff0c\u7ed3\u5408\u6570\u636e\u8303\u56f4\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u60f3\u5230\u7f51\u7edc\u6d41\n\n\u6211\u4eec\u53d1\u73b0\u9152\u5e97\u7684\u623f\u95f4\u548c\u83dc\u90fd\u662f\u548c\u4eba\u6709\u5173\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u4eba\u548c\u623f\u95f4\u3001\u83dc\u5206\u522b\u8fde\u8fb9\uff0c\u5e76\u4e14\u4ece\u539f\u70b9s\u5411\n\u623f\u95f4\u8fde\u8fb9\uff0c\u83dc\u5411\u6c47\u70b9\u8fde\u8fb9\n\n\u4f46\u662f\u6bcf\u4e00\u4e2a\u987e\u5ba2\u7684\u8d21\u732e\u53ea\u80fd\u8ba1\u7b97\u4e00\u6b21\uff0c\n\u4e5f\u5c31\u662f\u53ea\u80fd\u548c\u4e00\u9053\u83dc\u548c\u4e00\u4e2a\u623f\u95f4\u5339\u914d\u3002\n\n\u5982\u679c\u50cf\u4e0a\u9762\u90a3\u6837\u8fde\u8fb9\u4f1a\u9020\u6210\u9519\u8bef\uff0c\u5982\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/i615vkqi.png)\n\nX\u70b9\u7684\u8d21\u732e\u53d8\u6210\u4e862\uff0c\u5b9e\u9645\u5e94\u662f1\n\n\u6240\u4ee5\u6211\u4eec\u8003\u8651\u5c06\u4ee3\u8868\u4eba\u7684\u70b9\u62c6\u5f00\uff0c\u5206\u4e3a\u4e24\u7ec4\uff0c\n\u4e00\u7ec4\u4e3a\u5165\u70b9\uff0c\u4e00\u7ec4\u4e3a\u51fa\u70b9\n\n\u623f\u95f4\u5411\u5165\u70b9\u8fde\u8fb9\uff0c\u51fa\u70b9\u5411\u83dc\u8fde\u8fb9\uff0c\u5165\u70b9\u548c\u51fa\u70b9\u4e4b\u95f4\u8fde\u8fb9\n\n\u6240\u6709\u7684\u8fb9\u6d41\u91cf\u4e3a1\uff0c\u4ee3\u8868\u53ea\u80fd\u4f7f\u7528\u4e00\u6b21\n\u5373\uff1a\n\n$\\begin{aligned}&S\\xrightarrow{1}P_{room}\\\\&P_{meal}\\xrightarrow{1}T \\\\&P_{room}\\xrightarrow{1}P_{people}.in\\\\&P_{people}.out\\xrightarrow{1}P_{meal}\\\\&P_{people}.in\\xrightarrow{1}P_{people}.out\\end{aligned}$\n\n## \u4ee3\u7801\n$\\mathcal{Code:}$\n```cpp\n#include<map>\n#include<queue>\n#include<cmath>\n#include<cstdio>\n#include<string>\n#include<cstring>\n#include<cstdlib>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n#define N 100010\n#define int long long\n#define debug cout<<__LINE__<<\" \"<<__FUNCTION__<<\"\\n\"\ninline int read(){\n \tint x=0,y=1;\n \tchar ch=getchar();\n \twhile(ch<'0'||ch>'9'){if(ch=='-')y=-1;ch=getchar();}\n \twhile(ch>='0'&&ch<='9'){x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}\n \treturn x*y;\n}\nint n_1,n_2,n_3,m_1,m_2,s,t,dep[N];\nint head[N],used[N],tot=1,front;//tot\u8d4b1\u65b9\u4fbf\u627e\u53cd\u5411\u8fb9\nint ans;\nstruct Node{\n    int nxt,to,dis;\n}edge[N<<1];\ninline void add(int x,int y,int z){\n    edge[++tot].nxt=head[x];\n    edge[tot].to=y;\n    edge[tot].dis=z;\n    head[x]=tot;\n}\nqueue<int> q;\ninline int bfs(){\n\tregister int i;\n\tfor(i=0;i<=n_1+n_1+n_2+n_3+2;i++) dep[i]=-1,used[i]=head[i];\n    //\u8bb0\u5f97\u5728\u521d\u59cb\u5316\u65f6\u4e00\u5b9a\u7b97\u597d\u5927\u5c0f\u70b9\u7684\u6570\u91cf\n\tdep[s]=0;\n\tq.push(s);\n\twhile(!q.empty()){\n\t\tfront=q.front();q.pop();\n\t\tfor(i=head[front];i;i=edge[i].nxt){\n\t\t\tif(edge[i].dis&&dep[edge[i].to]==-1){\n\t\t\t\tdep[edge[i].to]=dep[front]+1;q.push(edge[i].to);\n\t\t\t}\n\t\t}\n\t}\n\treturn dep[t]!=-1;\n}\nint dfs(int now,int limit){\n\tif(!limit||now==t) return limit;\n\tint flow=0;\n\tfor(int &i=used[now],pro;i;i=edge[i].nxt){\n\t\tif(dep[edge[i].to]==dep[now]+1&&(pro=dfs(edge[i].to,min(limit,edge[i].dis)))){\n\t\t\tedge[i].dis-=pro;\n\t\t\tedge[i^1].dis+=pro;\n\t\t\tflow+=pro;\n\t\t\tlimit-=pro;\n\t\t}\n\t}\n\treturn flow;\n}\ninline void Dinic(){//\u6700\u5927\u6d41\u677f\u5b50\n\twhile(bfs()) ans+=dfs(s,1000000001LL);\n}\nsigned main(){\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\tn_1=read();n_2=read();n_3=read();//people room meal\n\ts=0;t=n_1+n_1+n_2+n_3+1;//S\u548cT\u7684\u53d6\u503c(\u4e2a\u4eba\u4e60\u60ef)\n\tregister int i,j,u;\n\tfor(i=n_1+n_1+1;i<=n_1+n_1+n_2;i++){//\u4eceS\u5230P_room\n\t\tadd(s,i,1);add(i,s,0);\n\t}\n\tfor(i=n_1+n_1+n_2+1;i<=n_1+n_1+n_2+n_3;i++){//\u4eceP_meal\u5230T\n\t\tadd(i,t,1);add(t,i,0);\n\t}\n\tfor(i=1;i<=n_1;i++){//\u4eceP_people.in\u5230P_people.out\n\t\tadd(i,i+n_1,1);add(i+n_1,i,0);\n\t}\n\tfor(i=1;i<=n_1;i++){//\u4eceP_room\u5230P_people.in\n\t\tfor(j=1;j<=n_2;j++){\n\t\t\tu=read();\n\t\t\tif(u){\n\t\t\t\tadd(j+n_1+n_1,i,1);add(i,j+n_1+n_1,0);\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=1;i<=n_1;i++){//\u4eceP_people.out\u5230P_meal\n\t\tfor(j=1;j<=n_3;j++){\n\t\t\tu=read();\n\t\t\tif(u){\n\t\t\t\tadd(i+n_1,j+n_1+n_1+n_2,1);add(j+n_1+n_1+n_2,i+n_1,0);\n\t\t\t}\n\t\t}\n\t}\n\tDinic();\n\tcout<<ans<<\"\\n\";\n//\tfclose(stdin);\n//\tfclose(stdout);\n\treturn 0;\n}\n\n```\n",
        "postTime": 1568597850,
        "uid": 123081,
        "name": "zh_dou",
        "ccfLevel": 7,
        "title": "[\u9898\u89e3]P1402 |\u9152\u5e97\u4e4b\u738b"
    },
    {
        "content": "### \u524d\u8a00\n[\u5b89\u5229\u4e00\u4e0b\u6211\u7684\u535a\u5ba2](https://www.cnblogs.com/linzhengmin/p/11089837.html)  \n\u5982\u679c\u6709\u4eba\u4e0d\u4f1a\u7f51\u7edc\u6d41\uff0c\u90a3\u4e48\u5b89\u5229\u4e00\u4e0b\u6211[\u7f51\u7edc\u6700\u5927\u6d41Dinic\u7684\u535a\u5ba2](https://www.cnblogs.com/linzhengmin/p/9313216.html)  \n\u5173\u4e8e\u7f51\u7edc\u6d41\uff0c\u6211\u591a\u4e45\u6ca1\u6709\u78b0\u8fd9\u4e2a\u7b97\u6cd5\u4e86...  \n\u4eca\u5929\u65c1\u8fb9\u7684\u5de8\u4f6c@Chhokmah\u5728\u505a\u7f51\u7edc\u6d41\uff0c\u4e8e\u662f\u6211\u4e5f\u987a\u4fbf\u505a\u4e86\u4e00\u4e0b\u3002  \n\u8fd9\u786e\u5b9e\u662f\u4e00\u9053\u7f51\u7edc\u6d41\u597d\u9898\u3002  \n### \u9898\u89e3\n\u8fd9\u9053\u9898\u76ee\u96be\u70b9\u4e3b\u8981\u662f\u6784\u56fe\u3002  \n\u8fd9\u9053\u9898\u7684\u6784\u56fe\u4e00\u5f00\u59cb\u5f88\u5bb9\u6613\u60f3\u5230\u5efa\u4e00\u4e2a\u8d85\u7ea7\u6e90\u70b9\u8fde\u623f\u95f4\uff0c\u623f\u95f4\u8fde\u4eba\uff0c\u4eba\u8fde\u83dc\uff0c\u83dc\u8fde\u6c47\u70b9\u3002  \n\u6700\u540e\u8dd1\u4e00\u904d\u6700\u5927\u6d41\u6c42\u51fa\u7b54\u6848\u3002  \n\u7136\u540e\u4ea4\u4e86\u4e00\u4e0b\u76f4\u63a5WA 60(\u5f53\u573a\u81ea\u95ed)\u3002  \n\u4ed4\u7ec6\u4e00\u60f3\u53d1\u73b0\u6709\u4e00\u4e2a\u95ee\u9898  \n\u6bd4\u5982\u4e0b\u9762\u8fd9\u7ec4\u6570\u636e  \n```\n1 3 3\n1 1 1\n1 1 1\n```\n\u7b54\u6848\u5e94\u8be5\u662f1\uff0c\u4f46\u5f53\u524d\u7684\u7b97\u6cd5\u8f93\u51fa\u662f\u4e09\uff0c\u7b97\u6cd5\u7684\u9519\u8bef\u662f\u4e2d\u95f4\u7684\u4eba\u88ab**\u91cd\u590d\u5229\u7528**\u4e86\u3002  \n\u4e8e\u662f\u6211\u4eec\u60f3\u5230\u4e86\u4e00\u4e2a\u6280\u5de7\uff0c**\u62c6\u70b9**\u3002  \n\u628a\u4e00\u4e2a\u4eba**\u62c6\u6210\u4e24\u4e2a\u70b9**\uff0c\u4e2d\u95f4\u8fde\u63a5\u4e00\u6761\u6d41\u91cf\u4e3a1\u7684\u8fb9\uff0c\u8fd9\u6837\u4fdd\u8bc1\u4e86\u4e00\u4e2a\u4eba\u6700\u591a\u53ea\u4f1a\u88ab\u5229\u7528\u4e00\u6b21\u3002  \n\u4e8e\u662f\u91cd\u65b0\u6784\u56fe\uff1a  \n\u5efa\u4e00\u4e2a\u8d85\u7ea7\u6e90\u70b9\u8fde\u623f\u95f4\uff0c\u623f\u95f4\u8fde\u4eba1\uff0c\u4eba1\u8fde\u4eba2\uff0c\u4eba2\u8fde\u83dc\uff0c\u83dc\u8fde\u6c47\u70b9\u3002  \n\u6ce8:\u5176\u4e2d\u4eba1\u548c\u4eba2\u662f\u540c\u4e00\u4e2a\u4eba\u3002  \n\u7136\u540e\u63a5\u7740\u8dd1\u4e00\u904d\u7f51\u7edc\u6d41\u6c42\u51fa\u7b54\u6848\u5373\u53ef\u3002  \n### \u4ee3\u7801\n```cpp\n#include <cstdio> \n#include <cstring>\n#include <queue>\n#include <algorithm>\n\nusing namespace std;\n\nconst long long MAX = (1ll << 62);\n\nint read(){\n    int x = 0; int zf = 1; char ch = ' ';\n    while (ch != '-' && (ch < '0' || ch > '9')) ch = getchar();\n    if (ch == '-') zf = -1, ch = getchar();\n    while (ch >= '0' && ch <= '9') x = x * 10 + ch - '0', ch = getchar(); return x * zf;\n}\n\nstruct Edge{\n    int to, next;\n    long long dis;\n} edges[210000];\n\nint cur[10010], head[10010], edge_num = -1;\n\nvoid addEdge2(int from, int to, long long dis){\n    edges[++edge_num].to = to;\n    edges[edge_num].dis = dis;\n    edges[edge_num].next = head[from];\n    head[from] = edge_num;\n}\n\nvoid addEdge(int from, int to, long long dis){\n    addEdge2(from, to, dis), addEdge2(to, from, 0);\n}\n\nint d[10010];\nint s, t;\n\nlong long DFS(int u, long long flow){\n    if (u == t) return flow;\n    long long _flow = 0, __flow;\n    for (int& c_e = cur[u]; c_e != -1; c_e = edges[c_e].next){\n        int v = edges[c_e].to;\n        if (d[v] == d[u] + 1 && edges[c_e].dis > 0){\n            __flow = DFS(v, min(flow, edges[c_e].dis));\n            flow -= __flow;\n            edges[c_e].dis -= __flow;\n            _flow += __flow;\n            edges[c_e ^ 1].dis += __flow;\n            if (!flow)\n                break;\n        }\n    }\n    if (!_flow) d[u] = -1;\n    return _flow;\n}\n\nbool BFS(){\n    memset(d, -1, sizeof(d));\n    queue<int> que; que.push(s);\n    d[s] = 0; int u, _new;\n    while (!que.empty()){\n        u = que.front(), que.pop();\n        for (int c_e = head[u]; c_e != -1; c_e = edges[c_e].next){\n            _new = edges[c_e].to;\n            if (d[_new] == -1 && edges[c_e].dis > 0){\n                d[_new] = d[u] + 1;\n                que.push(_new);\n            }\n        }\n    }\n    return (d[t] != -1);\n}\n\nint n;\n\nvoid dinic(){\n    long long max_flow = 0;\n    while (BFS()){\n        for (int i = 0; i <= n; ++i) cur[i] = head[i];\n        max_flow += DFS(s, MAX);\n    }\n    printf(\"%lld\", max_flow);\n}\n\nint main(){\n    memset(head, -1, sizeof(head));\n    int N = read(), p = read(), q = read();\n    s = 0;\n    for (int j = 1; j <= p; ++j)\n        addEdge(s, j, 1);\n    for (int i = 1; i <= N; ++i)\n        for (int j = 1; j <= p; ++j)\n            if (read() == 1)\n                addEdge(j, p + q + i, 1);\n    for (int i = 1; i <= N; ++i)\n        addEdge(p + q + i, p + q + N + i, 1);\n    for (int i = 1; i <= N; ++i)\n        for (int j = 1; j <= q; ++j)\n            if (read() == 1)\n                addEdge(p + q + N + i, p + j, 1);\n    n = t = p + q + N * 2 + 1;\n    for (int j = 1; j <= q; ++j)\n        addEdge(p + j, t, 1);\n    dinic();\n    return 0;\n}\n```",
        "postTime": 1561531917,
        "uid": 20462,
        "name": "lukelin",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1402 \u3010\u9152\u5e97\u4e4b\u738b\u3011"
    },
    {
        "content": "# **\u8fd9\u9053\u9898\u5bf9\u4e0d\u8d77NOI-**\n\n\n-\u770b\u6807\u7b7e\uff0c\u7f51\u7edc\u6d41\u3002\u5c31\u5413\u5230\u4e86\uff08\u5f31\u9e21\u81f3\u4eca\u4e0d\u4f1a\u6253\u7f51\u7edc\u6d41\uff09\u3002\n\n-\u518d\u770b\u8fd9\u9053\u9898\u6211\u5c31\u60f3\u5230\u4e86\uff0c\u5728\u5308\u7259\u5229\u4e2d\u8dd1\u5308\u7259\u5229\u7b97\u6cd5\u7ed3\u679c\u662fn\u76846\u6b21\u65b9**\uff08\u76f4\u63a5\u70b8\uff09**\uff1b\n\n-\u518d\u60f3\u4e86\u4e00\u60f3\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u8dd1\u4e24\u4e2a\u4e8c\u5206\u56fe\u5c31\u884c\u4e86\u3002\n\n-\u53ef\u4ee5\u6784\u9020\u4e24\u4e2a\u4e8c\u5206\u56fe\uff0c\u4eba\u4e3a\u4e2d\u95f4\u96c6\u5408\uff0c\u623f\u95f4\u548c\u83dc\u5206\u522b\u662f\u5750\u96c6\u5408\u548c\u53f3\u96c6\u5408\uff0c\u4f9d\u6b21\u4ece\u67d0\u4eba\u51fa\u53d1\u540c\u65f6\u5bf9\u4e24\u4e2a\u96c6\u5408\u627e\u589e\u5e7f\u8def\uff0c\n\n-\u82e5\u5bf9\u67d0\u4e00\u4e2a\u4e8c\u5206\u56fe\u6ca1\u6709\u627e\u5230\u589e\u5e7f\u8def\uff0c\u5219\u9000\u8fb9\uff08\u4ece\u8fd9\u4e2a\u4eba\u51fa\u53d1\u627e\u5230\u7684\u8fd9\u6761\u589e\u5e7f\u8def\u4e0d\u884c)\uff0c\n\n-\u5982\u679c\u90fd\u627e\u5230\u4e86\uff0c\u5c31\u66f4\u65b0\u7b54\u6848\uff1b\n\n\n\u4e0a\u4ee3\u7801\uff08\u6570\u7ec4\u540d\u6709\u70b9\u5947\u602a\uff0c\u5c06\u5c31\u770b\u5427\uff01\uff09\n\n```cpp\n#include \"stdafx.h\"\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nconst int MAXN = 105;\n\nint n, p, q, i, j, ans;\nint people[MAXN], vis[MAXN], dis[MAXN], people_[MAXN];\nint room[MAXN][MAXN], dish[MAXN][MAXN], take_[MAXN], take[MAXN], eat[MAXN];\n\ninline int room_(int k)\n{\n    for (int i = 1; i <= n; i++)\n        if (room[k][i] && !vis[i])\n        {\n            vis[i] = 1;\n\n            if (take[i] == 0 || room_(take[i]))\n            {\n                people[k] = 1;\n                take[i] = k;\n                return 1;\n            }\n        }\n    return 0;\n}\n\ninline int food_(int k)\n{\n    for (int i = 1; i <= n; i++)\n        if (dish[k][i] && !dis[i])\n        {\n            dis[i] = 1;\n\n            if (eat[i] == 0 || food_(eat[i]))\n            {\n                eat[i] = k;\n                return 1;\n            }\n        }\n    return 0;\n}\n\nint main()\n{\n    ios::sync_with_stdio(0);\n\n    cin >> n >> p >> q;\n\n    for (i = 1; i <= n; i++)\n        for (j = 1; j <= p; j++)\n            cin >> room[i][j];\n\n    for (i = 1; i <= n; i++)\n        for (j = 1; j <= q; j++)\n            cin >> dish[i][j];\n\n    for (;;)\n    {\n        for (i = 1; i <= n; i++)\n            if (!people[i])\n            {\n                memset(vis, 0, sizeof(vis));\n                memset(dis, 0, sizeof(dis));\n\n                for (j = 1; j <= n; j++) people_[j] = people[j];\n                for (j = 1; j <= n; j++) take_[j] = take[j];\n\n                if (room_(i) && food_(i))\n                {\n                    ans++;\n                    continue;\n                }\n                else\n                {\n                    for (j = 1; j <= n; j++) people[j] = people_[j];\n                    for (j = 1; j <= n; j++) take[j] = take_[j];\n                }\n            }\n        break;\n    }\n\n    cout << ans << endl;\n    return 0;\n}\n```\n**VS2017(^\\_^)**\n",
        "postTime": 1509522901,
        "uid": 55638,
        "name": "Adun",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1402 \u3010\u9152\u5e97\u4e4b\u738b\u3011"
    },
    {
        "content": "### \u9898\u89e3\uff1a\n\n\u5f88\u5bb9\u6613\u770b\u51fa\u8fd9\u662f\u4e00\u4e2a\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u95ee\u9898.\n\n[\u4e0d\u4f1a\u5308\u7259\u5229\u7b97\u6cd5\u7684\u670b\u53cb\u770b\u8fd9\u91cc](https://www.luogu.org/blogAdmin/article/edit/163455)~~~\n\n\u5308\u7259\u5229\u7b97\u6cd5\n\n  1. \u4e00\u5f00\u59cb\uff0cF \u4e3a\u7a7a\u3002\n\n  2. \u679a\u4e3e V1 \u4e2d\u7684\u70b9 x\uff0c\u627e\u4ee5 x \u4e3a\u8d77\u70b9\u7684\u589e\u5e7f\u8def\uff0c\u627e\u5230\u4e86\u5c31\u589e\u5e7f\u3002\n\n  3. V1 \u4e2d\u7684\u70b9\u90fd\u5c1d\u8bd5\u589e\u5e7f\u4e00\u6b21\u540e\uff0c\u7b97\u6cd5\u7ed3\u675f\u3002\n\n\u5b9a\u7406\uff1a\u5982\u679c\u5728\u67d0\u4e00\u65f6\u523b\uff0c\u627e\u4e0d\u5230\u4ee5 x \u4e3a\u8d77\u70b9\u7684\u589e\u5e7f\u8def\uff0c\u5219\u589e\u5e7f\u51e0\u8f6e\u4e4b\u540e\u4ecd\u4e0d\u4f1a\u627e\u5230\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(nm)\n\n\u4e0b\u9762\u5206\u6790\u4e00\u4e0b\u677f\u5b50\uff1a\n\n\n```\n#include<iostream>\n\nusing namespace std;\n\nconst int V=1000010;\nint N,M,E,ans;\nint edge[V],head[1010],nxt[V],tot;\nint dfn[2020],match[1010],x,y,ti;\n\nvoid add(int x,int y)//\u52a0\u8fb9\n{\n\tedge[++tot]=y;\n\tnxt[tot]=head[x];\n\thead[x]=tot;\n}\n\nint dfs(int x,int ti)//ti\u662f\u65f6\u95f4\u6233\n{\n\tfor(int i=head[x];i;i=nxt[i])\n\t{\n\t\tint j=edge[i];\n\t\tif(dfn[j]!=ti)//\u8fd9\u4e00\u8f6e\u8fd8\u6ca1\u6709\u904d\u5386\u5230\n\t\t{\n\t\t\tdfn[j]=ti;\n\t\t\tif(!match[j]||dfs(match[j],ti))//\u6ca1\u6709\u548cj\u70b9\u5339\u914d\u7684\u70b9\u6216\u8005\u662f\u627e\u5230\u4e86\u4e00\u6761\u53ef\u589e\u5e7f\u7684\u8def\u5f84\n\t\t\t{\n\t\t\t\tmatch[j]=i;//i,j\u5339\u914d\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t\t\t  \n\t}\n\treturn 0;\n}\n\nint main()\n{\n\tcin>>N>>M>>E;\n\tfor(int i=1;i<=E;i++)\n\t{\n\t\tcin>>x>>y;\n\t\tif(x>N||y>M)  continue;\n\t\tadd(x,y);\n\t}\n\t\n\tfor(int i=1;i<=N;i++)\n\t\tif(dfs(i,++ti))  ans++;//\u627e\u5230\u4e86\u4e00\u6761\u589e\u5e7f\u8def\n\t\t\n\tcout<<ans<<endl;\n\t\n\treturn 0;\n}\n```\n\nOK\uff0c\u6709\u4e86\u677f\u5b50\u4e4b\u540e\u5c31\u53ef\u4ee5\u4e0a\u624b\u4e86\uff0c\u6211\u4eec\u5206\u522b\u627e\u5f53\u524d\u4eba\u548c\u623f\u95f4\u4ee5\u53ca\u548c\u98df\u7269\u7684\u589e\u5e7f\u8def\uff0c\u627e\u5230\u4e86\u5c31\u7b54\u6848\u52a01\uff0c\u5426\u5219\u9000\u56de\u4e4b\u524d\u7684\u72b6\u6001.\n\n\u4e0b\u9762\u4e0a\u4ee3\u7801\uff08\u6211\u77e5\u9053\u5404\u4f4d\u5927\u4f6c\u4e5f\u4e0d\u9700\u8981\u4ee3\u7801\uff09\uff1a\n\n```\n#include<iostream> \n#include<cstring> \n\n#define N 105\n\nusing namespace std;\n\nint ans,n,p,q,mar[N][N],vis[N];\nint rm[N],used[N],maf[N][N],vs[N];\nint eat[N],las[N],lat[N],lst[N];\n\nint room(int k)\n{\n\tfor(int i=1;i<=p;i++)\n\tif(mar[k][i]&&!vis[i])//\u559c\u6b22\u8fd9\u4e2a\u623f\u95f4\u4e14\u6ca1\u6709\u88ab\u5f53\u524d\u70b9\u8bbf\u95ee\u8fc7 \n\t{\n\t\tvis[i]=1;\n\t\tif(!rm[i]||room(rm[i]))//\u8fd8\u6ca1\u6709\u5339\u914d\u6216\u8005\u80fd\u627e\u5230\u66ff\u6362\u8def \n\t\t{\n\t\t\trm[i]=k;//\u8bb0\u5f55 \n\t\t\tused[k]=1;//\u5339\u914d\u4e86 \n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn 0;\n}\n\nint food(int k)\n{\n\tfor(int i=1;i<=q;i++)\n\tif(!vs[i]&&maf[k][i])//\u548c\u4e0a\u9762\u4e00\u6837 \n\t{\n\t\tvs[i]=1;\n\t\tif(!eat[i]||food(eat[i]))\n\t\t{\n\t\t\teat[i]=k;\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn 0;\n}\n\nint main()\n{\n\tcin>>n>>p>>q;//\u8bfb\u5165 \n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=p;j++)  cin>>mar[i][j];\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=q;j++)  cin>>maf[i][j];\n\t\t\n\tfor(int i=1;i<=n;i++)\n\tif(!used[i])//\u8fd8\u6ca1\u6709\u623f\u95f4/\u98df\u7269 \n\t{\n\t\tmemset(vis,0,sizeof(vis));\n\t\tmemset(vs,0,sizeof(vs));\n\t\tfor(int j=1;j<=n;j++)//\u8bb0\u5f55\u4e00\u4e0b\u672a\u66f4\u6539\u7684\u72b6\u6001 \n\t\tlas[j]=used[j],lat[j]=rm[j],lst[j]=eat[j];\n\t\tif(room(i)&&food(i))  ans++;//\u80fd\u627e\u5230\u589e\u5e7f\u8def \n\t\telse  for(int j=1;j<=n;j++)//\u4e0d\u80fd\u5339\u914d\u5219\u8fd4\u56de\u5f53\u524d\u72b6\u6001 \n\t\tused[j]=las[j],rm[j]=lat[j],eat[j]=lst[j];\n\t}\n\t\t\n\tcout<<ans<<endl;\n\t\n\treturn 0;\n}\n```\n\n\u53bb\u6389\u7a7a\u884c50\u6765\u884c\uff0c\u4e5f\u6bd4\u8f83\u77ed\u4e86.\n\n### [Plus Ultra!!!](https://www.luogu.org/blog/OnePunchManGO/)\n",
        "postTime": 1567841775,
        "uid": 126136,
        "name": "Plus_Ultra",
        "ccfLevel": 0,
        "title": "P1402\u3010\u9152\u5e97\u4e4b\u738b\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u5176\u5b9e\u4e0d\u96be\u60f3\uff0c\u5c060\u5b9a\u4e49\u4e3a\u8d85\u7ea7\u6e90\u70b9\uff0c\u5411\u6bcf\u4e2a\u623f\u95f4\u5efa\u4e00\u6761\u6d41\u91cf\u4e3a1\u7684\u8fb9\uff0c\u7136\u540e\u5c0610000\u5b9a\u4e49\u4e3a\u8d85\u7ea7\u6c47\u70b9\uff0c\u6bcf\u9053\u83dc\u5411\u5b83\u5efa\u4e00\u6761\u6d41\u91cf\u4e3a1\u7684\u8fb9\uff0c\u7136\u540e\u6839\u636e\u8f93\u5165\u5efa\u56fe\u5c31OK\u4e86\uff0c\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4e0d\u80fd\u8ba9\u4e00\u4e2a\u4eba\u88ab\u7528\u4e86\u591a\u6b21\uff0c\u56e0\u4e3a\u6bcf\u4e00\u4e2a\u4eba\u53ea\u80fd\u5339\u914d\u4e00\u6b21\uff0c\u5c06\u4e00\u4e2a\u4eba\u62c6\u6210\u4e24\u4e2a\u4eba\u4e00\u4e2a\u63a5\u6536\uff0c\u4e00\u4e2a\u8f93\u51fa\uff0c\u4e24\u4eba\u4e4b\u95f4\u5efa\u8fb9\uff0c\u4f7f\u4e00\u4e2a\u4eba\u53ea\u80fd\u6d41\u5165\u6d41\u51fa\u4e00\u6b21\uff0c\u5c31\u6ca1\u95ee\u9898\u4e86\n\n\u6837\u4f8b\u5982\u4e0b\u56fe\n\n![111.PNG](https://i.loli.net/2019/08/21/qLkdzIsepWfgAKU.png)\n\n\u5176\u4e2d4,6\u8868\u793a\u7b2c\u4e00\u4e2a\u4eba\uff0c5,7\u8868\u793a\u7b2c\u4e8c\u4e2a\u4eba\uff0c2,3\u8868\u793a2\u95f4\u623f\u5b50\uff0c8,9\u8868\u793a\u4e24\u9053\u83dc\n\n\u6211\u5728\u8fd9\u91cc\u8bbe\u6bcf\u4e2a\u4eba\u7f16\u53f7\u4e3ai\u548ci+n\uff08\u62c6\u62102\u4e2a\uff09\uff0c\u623f\u95f4\u7f16\u53f7\u4e3ai+1926\uff0c\u83dc\u7f16\u53f7\u4e3ai+817\uff0c\u7136\u540e\u6309\u4e0a\u9762\u7684\u5efa\u8fb9\u8dd1\u6700\u5927\u6d41\n\n\u6211\u5199\u7684\u662fDinic\u7b97\u6cd5\uff0c\u6a21\u677f\u9898\u5199\u6cd5\uff0c\u601d\u8def\u662f\u6bcf\u6b21BFS\u6c42\u51fa\u8282\u70b9\u6df1\u5ea6\uff0c\u7136\u540ewhile(1)\u8dd1DFS\u627e\u589e\u5e7f\u8def\uff0c\u627e\u4e0d\u5230\u589e\u5e7f\u8def\u5c31\u9000\u51fa\uff0c\u91cd\u65b0BFS\u6c42\u6df1\u5ea6\n\n\u5f53\u7136\u8fd8\u53ef\u4ee5\u7528\u5176\u4ed6\u7b97\u6cd5\u641e\uff08\u5982ISAP\uff09\n\n\u8fd9\u4e2a\u9898\u6570\u636e\u5c0f\uff0c\u4e0d\u7528\u5176\u4ed6\u4f18\u5316\n\n\u590d\u6742\u5ea6\u4e0a\u754c$O(n^2m)$\n\n\u4e0b\u9762\u4e0acode:\n\n```\n#include<map>\n#include<cmath>\n#include<stack>\n#include<queue>\n#include<cstdio>\n#include<vector>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\ntypedef long long ll;\ntemplate<class Read>void in(Read &x){\n    x=0;\n    int f=0;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){\n        f|=(ch=='-');\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9'){\n        x=(x<<1)+(x<<3)+(ch^48);\n        ch=getchar();\n    }\n    x=f?-x:x;\n    return;\n}\nstruct Node{\n    int next;\n    int to;\n    int sum;\n}a[20005];\nint n,p,q,top=1,head[100005],f[100005],v[100005];\nqueue<int>Q;\nvoid add(int x,int y,int c){//\u5efa\u8fb9\n    a[++top].next=head[x];\n    a[top].to=y;\n    a[top].sum=c;\n    head[x]=top;\n}\nbool bfs(){//BFS\u628a\u5c42\u6b21\u7406\u51fa\u6765\n    for(int i=0;i<=n;i++)f[i]=f[i+n]=20190817;//\u521d\u59cb\u5316\u6700\u5927\u503c\n    for(int i=817+1;i<=817+q;i++)f[i]=20190817;\n    for(int i=1926+1;i<=1926+p;i++)f[i]=20190817;\n    f[10000]=20190817;\n    f[0]=0;\n    memset(v,0,sizeof(v));//\u521d\u59cb\u6bcf\u4e2a\u70b9\u90fd\u6ca1\u7528\u8fc7\n    Q.push(0);\n    while(!Q.empty()){\n        int x=Q.front();\n        Q.pop();\n        v[x]=0;\n        for(int i=head[x];i;i=a[i].next){\n            int y=a[i].to;\n            if(f[y]>f[x]+1&&a[i].sum!=0){\n                f[y]=f[x]+1;\n                if(!v[y]){\n                    v[y]=1;\n                    Q.push(y);//\u5165\u961f\n                }\n            }\n        }\n    }\n    return f[10000]==20190817?0:1;//\u5982\u679c\u4e0d\u80fd\u5230\u8fbe\uff0c\u7ed3\u675f\n}\nint dfs(int x,int y){//\u627e\u589e\u5e7f\u8def\n    if(x==10000)return y;//\u5230\u76ee\u7684\u5730\uff0c\u8fd4\u56de\u6743\u503c\n    for(int i=head[x];i;i=a[i].next){\n        int u=a[i].to;\n        if(f[u]==f[x]+1&&a[i].sum!=0){//\u5f80\u540e\u627e\n            int g=min(y,a[i].sum);\n            int l=dfs(u,g);\n            if(l!=0){\n                a[i].sum-=l;\n                a[i^1].sum+=l;\n                return l;\n            }\n        }\n    }\n    return 0;\n}\nvoid Dinic(){//dinic\u6a21\u677f\n    int ans=0;\n    while(bfs()){\n        while(1){\n            int sum=dfs(0,20190817);\n            if(sum==0)break;\n            ans+=sum;\n        }\n    }\n    printf(\"%d\\n\",ans);\n}\nint main(){\n\tin(n);in(q);in(p);\n    for(int i=1;i<=q;i++){//\u6e90\u70b9\u4e0e\u623f\u95f4\u5efa\u8fb9\n        add(0,i+1926,1);\n        add(i+1926,0,0);\n    }\n    for(int i=1;i<=p;i++){//\u83dc\u4e0e\u6c47\u70b9\u5efa\u8fb9\n        add(i+817,10000,1);\n        add(10000,i+817,0);\n    }\n    for(int i=1;i<=n;i++){\n        add(i+n,i,1);//1\u4e2a\u4eba\u62c6\u62102\u4e2a\n        add(i,i+n,0);\n    }\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=q;j++){\n            int x;\n            in(x);\n            if(x==1){\n                add(j+1926,i+n,1);//\u623f\u95f4\u4e0e\u5efa\u8fb9\n                add(i+n,j+1926,0);\n            }\n        }\n    }\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=p;j++){\n            int x;\n            in(x);\n            if(x==1){\n                add(i,j+817,1);//\u4e0e\u83dc\u5efa\u8fb9\n                add(j+817,i,0);\n            }\n        }\n    }\n    Dinic();\n\treturn 0;\n}\n```",
        "postTime": 1566305866,
        "uid": 119120,
        "name": "Waddles",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1402 \u3010\u9152\u5e97\u4e4b\u738b\u3011"
    },
    {
        "content": "**ISAP\u6700\u5927\u6d41**\n\n\u521a\u505a\u5b8c[\u4e00\u9053\u9898](https://www.luogu.org/problemnew/show/P1231)\uff0c\u53d1\u73b0\u8fd9\u9053\u9898\u8ddf\u5b83\u4e00\u6837\uff0c\u7a0d\u5fae\u6539\u6539\u5c31A\u4e86\n\n\u7b80\u5355\u5730\u8bf4\uff0c\u4e09\u5206\u56fe\u5339\u914d\uff0c\u9700\u8981\u5bf9\u4e2d\u95f4\u4e00\u5c42\u8fdb\u884c\u62c6\u70b9\u6765\u9632\u6b62\u91cd\u590d\u9009\u62e9\u3002\n\n## \u5efa\u56fe\n\n- \u8bbe\u6709$n_1$\u4e2a\u4eba\uff0c$n_2$\u4e2a\u623f\u95f4\uff0c$n_3$\u4e2a\u83dc\u54c1\n\n- \u8bbe\u8d85\u7ea7\u539f\u70b9\u4e3a$0$\uff0c\u8d85\u7ea7\u6c47\u70b9\u4e3a$n_1 \\times 2 + n_2 + n_3 + 1$\n\n- \u5bf9\u4e8e$\\forall i \\in [1, n_1]$\uff0c\u4ece$i$\u5411$n_1 + i$\u5efa\u7acb\u5bb9\u91cf\u4e3a$1$\u7684\u8fb9\n\n- \u5bf9\u4e8e$\\forall i \\in [1, n_2]$\uff0c\u4ece$0$\u5411$n_1 \\times 2 + i$\u5efa\u7acb\u5bb9\u91cf\u4e3a$1$\u7684\u8fb9\n\n- \u5bf9\u4e8e$\\forall i \\in [1, n_3]$\uff0c\u4ece$n_1 \\times 2 + n_2 + i$\u5411$n_1 \\times 2 + n_2 + n_3 + 1$\u5efa\u7acb\u5bb9\u91cf\u4e3a$1$\u7684\u8fb9\n\n- \u5bf9\u4e8e\u53ef\u4ee5\u5339\u914d\u7684$\\forall i \\in [1, n_2]$\uff0c$\\forall j \\in [1, n_1]$\uff0c\u4ece$n_1 \\times 2 + i$\u5411$j$\u5efa\u7acb\u5bb9\u91cf\u4e3a$1$\u7684\u8fb9\n\n- \u5bf9\u4e8e\u53ef\u4ee5\u5339\u914d\u7684$\\forall i \\in [1, n_1]$\uff0c$\\forall j \\in [1, n_3]$\uff0c\u4ece$n_1 + i$\u5411$n_1 \\times 2 + n_2 + j$\u5efa\u7acb\u5bb9\u91cf\u4e3a$1$\u7684\u8fb9\n\n## \u4ee3\u7801\n\n\u61d2\u5f97\u5199\u5f53\u524d\u5f27\u4f18\u5316\u4e86\uff0cISAP\u5df2\u7ecf\u633a\u5feb\u4e86\u3002\n\n```cpp\n// luogu-judger-enable-o2\n// luogu-judger-enable-o2\n#include <iostream>\n#include <queue>\n#include <cstring>\n\nusing namespace std;\n\nconst int INF = 0x3f3f3f3f;\nconst int MAXN = 105;\n\nint n, m1, m2;\n\nstruct Edge{\n    int to, val;\n    Edge *nxt, *ops;\n    Edge(int to, int val, Edge *nxt): to(to), val(val), nxt(nxt) {}\n};\n\nEdge *head[MAXN << 2];\n\nvoid AddEdge(int u, int v, int w) {\n    head[u] = new Edge(v, w, head[u]);\n    head[v] = new Edge(u, 0, head[v]);\n    head[u]->ops = head[v]; head[v]->ops = head[u];\n}\n\nint dep[MAXN << 2], gap[MAXN << 2], res, s, t;\n\nvoid Bfs() {\n    memset(dep, -1, sizeof(dep));\n    memset(gap, 0, sizeof(gap));\n    dep[t] = 0; gap[dep[t]]++;\n    queue<int> q; q.push(t);\n    while (!q.empty()) {\n        int u = q.front(); q.pop();\n        for (Edge *e = head[u]; e; e = e->nxt) {\n            int v = e->to;\n            if (dep[v] != -1) continue;\n            dep[v] = dep[u] + 1;\n            gap[dep[v]]++;\n            q.push(v);\n        }\n    }\n}\n\nint Dfs(int u, int flow) {\n    if (u == t) {\n        res += flow;\n        return flow;\n    }\n    int used = 0;\n    for (Edge *e = head[u]; e; e = e->nxt) {\n        int v = e->to;\n        if (e->val && dep[v] == dep[u] - 1) {\n            int mi = Dfs(v, min(e->val, flow - used));\n            if (mi) {\n                e->val -= mi;\n                e->ops->val += mi;\n                used += mi;\n            }\n            if (used == flow) return used;\n        }\n    }\n    gap[dep[u]]--;\n    if (gap[dep[u]] == 0) dep[s] = n + n + m1 + m2 + 3;\n    dep[u]++;\n    gap[dep[u]]++;\n    return used;\n}\n\nvoid Isap() {\n    res = 0;\n    Bfs();\n    while (dep[s] <= n + n + m1 + m2 + 3) Dfs(s, INF);\n}\n\nint main() {\n    cin >> n >> m1 >> m2;\n    s = 0; t = n + n + m1 + m2 + 1;\n    for (int i = 1; i <= n; i++) AddEdge(m1 + i, m1 + n + i, 1);\n    for (int i = 1; i <= m1; i++) AddEdge(s, i, 1);\n    for (int i = 1; i <= m2; i++) AddEdge(m1 + n + n + i, t, 1);\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= m1; j++) {\n            int x;\n            cin >> x;\n            if (x == 1) AddEdge(j, m1 + i, 1);\n        }\n    }\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= m2; j++) {\n            int x;\n            cin >> x;\n            if (x == 1) AddEdge(m1 + n + i, m1 + n + n + j, 1);\n        }\n    }\n    Isap();\n    cout << res << endl;\n    return 0;\n}\n```",
        "postTime": 1557814011,
        "uid": 126376,
        "name": "Irelia\u10e6",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1402 \u3010\u9152\u5e97\u4e4b\u738b\u3011"
    },
    {
        "content": "\u4e0d\u8bf4\u5e9f\u8bdd  \n\n\n\n------------\n## \u9898\u9762\uff1a\n\u6709p\u4e2a\u623f\u95f4q\u9053\u83dc\uff0c\u6709n\u4e2a\u4eba\u6bcf\u4eba\u559c\u6b22\u4e00\u4e9b\u83dc\u548c\u623f\u95f4\uff0c\u53ea\u6709\u540c\u65f6\u9009\u4ed6\u559c\u6b22\u7684\u83dc\u548c\u623f\u95f4\u624d\u6ee1\u610f\uff0c\u6700\u591a\u80fd\u6ee1\u610f\u591a\u5c11\u4eba\n\n----\n\n## \u601d\u8def\uff1a\n\u4e4d\u4e00\u770b\u7edd\u5bf9\u4e8c\u5206\u56fe\uff0c$X$\u96c6\u8868\u793a\u623f\u95f4$Y$\u96c6\u8868\u793a\u83dc\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u4eba\uff0c\u5c06\u4ed6\u559c\u6b22\u7684\u83dc\u548c\u623f\u95f4\u8fde\u8fb9\uff0c\u7136\u540e\u6c42\u6700\u5927\u5339\u914d\u5373\u53ef  \n\u7136\u800c\uff0c0\u5206 \n\n\n\u663e\u7136\u8fd9\u79cd\u65b9\u6cd5\u662f\u884c\u4e0d\u901a\u7684\uff0c\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u4e00\u4e2a\u4eba\u4f1a\u559c\u6b22\u591a\u4e2a\u83dc\u548c\u623f\u95f4\uff0c\u90a3\u4e48\u6211\u4eec\u5339\u914d\u7684\u65f6\u5019\u4e0d\u80fd\u591f\u4fdd\u8bc1\u6bcf\u4e2a\u4eba\u53ea\u9009\u62e9\u4e00\u5bf9\u83dc\u548c\u623f\u95f4  \n\u65e2\u7136\u8981\u9650\u5236\u6bcf\u4e2a\u4eba\u7684\u9009\u62e9\uff0c\u663e\u7136\u7f51\u7edc\u6d41\u7684\u6d41\u91cf\u9650\u5236\u662f\u6700\u4f73\u9009\u62e9  \n\u6211\u4eec\u5c06\u6e90\u70b9\u8fde\u5411\u6bcf\u9053\u83dc\uff0c\u5bb9\u91cf1\uff0c\u5c06\u83dc\u8fde\u5411\u559c\u6b22\u5b83\u7684\u4eba\uff0c\u6d41\u91cf1\uff0c\u518d\u5c06\u4eba\u8fde\u5411\u4ed6\u559c\u6b22\u7684\u623f\u95f4\uff0c\u6d41\u91cf1\uff0c\u6700\u540e\u5c06\u6bcf\u4e2a\u623f\u95f4\u8fde\u5411\u6c47\u70b9\u6d41\u91cf1  \n\u8dd1\u4e00\u904d\u6700\u5927\u6d41\u5373\u53ef\n\u4f9d\u65e7\uff0c0\u5206\n\n\n\u6211\u4eec\u8fd8\u662f\u6ca1\u6709\u6293\u4f4f\u95ee\u9898\u7684\u5173\u952e\uff0c\u5173\u952e\u5728\u4e8e\u4e00\u4e2a\u4eba\u53ea\u80fd\u9009\u62e9\u4e00\u5bf9\u623f\u95f4\u548c\u83dc\uff0c\u4e5f\u53ea\u80fd\u8d21\u732e1\u7684\u6ee1\u610f\u5ea6\uff0c\u5728\u6211\u4eec\u521a\u624d\u6784\u9020\u7684\u7f51\u7edc\u4e2d\uff0c\u867d\u9650\u5236\u7684\u83dc\u548c\u623f\u95f4\u53ea\u88ab\u9009\u62e9\u4e00\u6b21\uff0c\u4f46\u5bf9\u4eba\u4f9d\u65e7\u6ca1\u6709\u9650\u5236\u3002  \n\u4eba\u5728\u7f51\u7edc\u4e2d\u662f\u4ee5\u70b9\u7684\u5f62\u5f0f\u8868\u793a\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u62c6\u70b9\uff0c\u5373\u5c06\u4e00\u4e2a\u70b9\u62c6\u6210\u4e00\u4e2a\u5bf9\u70b9\uff08\u4e00\u4e2a\u5165\u70b9\u4e00\u4e2a\u51fa\u70b9\uff0c\u518d\u5728\u5165\u70b9\u548c\u51fa\u70b9\u4e2d\u8fde\u8fb9\uff09\uff0c\u5728\u8fd9\u9898\u4e2d\u6211\u4eec\u8fde\u5bb9\u91cf\u4e3a1\u7684\u8fb9\u9650\u5236\u4e00\u4eba\u53ea\u88ab\u9009\u4e00\u6b21\u3002\n![](https://cdn.luogu.com.cn/upload/pic/47729.png)  \n\u6700\u540e\u8dd1\u6700\u5927\u6d41\u5373\u53ef \n\n\n\n--------\n\n```\n#include<bits/stdc++.h>\nusing namespace std;\nstruct edge{\n\tint to,next,data;\n}e[200010];\nint h[10005],s=0,t=10000,n,u,v,pop=1;\nvoid add(int x,int y,int dat){\n\tpop++;\n\te[pop].to=y;e[pop].data=dat;\n\te[pop].next=h[x];h[x]=pop;\n}\nint dist[10005];queue<int>q;\nbool bfs(){\n\tmemset(dist,0,sizeof(dist));\n\twhile(!q.empty())q.pop();\n\tq.push(s);dist[s]=1;\n\t//cout<<\"ss\";\n\twhile(!q.empty()){\n\t\tint x=q.front();q.pop();\n\t\tfor(int i=h[x];i;i=e[i].next)\n\t\t  if(!dist[e[i].to]&&e[i].data){\n\t\t  \tdist[e[i].to]=dist[x]+1;\n\t\t  \tq.push(e[i].to);if(e[i].to==t)return true;\n\t\t  }\n\t}\n\treturn false;\n}\nint dfs(int p,int flow){\n\t//printf(\"kk\");\n\tif(p==t)return flow;\n\tint rest=flow,k;\n\tfor(int i=h[p];i&&rest;i=e[i].next){\n\t\tif(e[i].data&&dist[p]+1==dist[e[i].to])\n\t\t  {\n\t\t  \tk=dfs(e[i].to,min(rest,e[i].data));\n\t\t  \tif(!k)dist[e[i].to]=-1;\n\t\t  \te[i].data-=k;\n\t\t  \te[i^1].data+=k;\n\t\t  \trest-=k;\n\t\t  }\n\t}\n\treturn flow-rest;\n}\nint main()\n{\n\tmemset(h,0,sizeof(h));\n\tscanf(\"%d%d%d\",&n,&u,&v);\n\tfor(int i=1;i<=u;i++){add(s,i,1);add(i,s,0);} \n\tfor(int i=1;i<=n;i++){\n\t\tint x;\n\t\tfor(int j=1;j<=u;j++){\n\t\t\tscanf(\"%d\",&x);\n\t\t\tadd(j,i+u,x);add(i+u,j,0);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tadd(i+u,i+u+n,1);\n\t\tadd(i+u+n,i+u,0);\n    }\n    for(int i=1;i<=n;i++){\n\t\tint x;\n\t\tfor(int j=1;j<=v;j++){\n\t\t\tscanf(\"%d\",&x);\n\t\t\tadd(i+u+n,j+u+n+n,x);add(j+u+n+n,i+u+n,0);\n\t\t}\n\t}\n\tfor(int i=1;i<=v;i++){\n\t\tadd(i+u+n+n,t,1);\n\t\tadd(t,i+u+n+n,0);\n\t}\n\tint ans=0,x;\n\twhile(bfs())\n\t    ans+=dfs(s,(1<<30));\n    printf(\"%d\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1546324112,
        "uid": 119261,
        "name": "7KByte",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1402 \u3010\u9152\u5e97\u4e4b\u738b\u3011"
    },
    {
        "content": "# \u6807\u7b7eNOI- =_= !! \n\u5176\u5b9e\u4e5f\u6ca1\u90a3\u4e48\u96beiwi ~~\u7136\u800cWA\u4e86n\u6b21\u5927\u6982\u662f\u6211\u592a\u5f31\u4e86~~\n\n\u67093\u7c7b\u70b9\uff1a\u623f\u95f4\u3001\u83dc\u4ee5\u53ca\u5ba2\u4eba\uff0c\u6211\u4eec\u5148\u4e00\u901a\u4e71\u8fde\u8fb9\uff0c\u5f53\u7136\u8981\u628a\u4eba\u653e\u4e2d\u95f4\uff0c\u7136\u540e\u623f\u95f4\u5411\u4eba\u8fde\uff0c\u4eba\u518d\u5411\u83dc\u8fde\uff0c\u8fb9\u6743\u4e3a1\uff08\u73b0\u5b9e\u610f\u4e49\u662f\u663e\u7136\u7684\uff09\u3002\u63a5\u7740\u5efa\u4e00\u4e2a\u8d85\u7ea7\u6e90\uff0c\u5411\u6bcf\u4e2a\u623f\u95f4\u8fde\u8fb9\uff0c\u8fb9\u6743\u4e5f\u4e3a1\uff08\u5373\u623f\u95f4\u53ea\u9009\u4e00\u6b21\uff0c\u9664\u975e\u4f60\u80fd\u8bf4\u670d\u4e24\u4e2a\u5ba2\u4eba\u540c\u5c45XD\uff09\uff1b\u518d\u5efa\u4e00\u4e2a\u8d85\u7ea7\u6c47\uff0c\u6bcf\u9053\u83dc\u5411\u5b83\u8fde\u8fb9\uff0c\u8fb9\u6743\u4e3a1\uff08\u96be\u9053\u4f60\u60f3\u8ba9\u4e24\u4e2a\u4eba\u5403\u4e00\u76d8\u83dc\uff1f\uff01\u4e0d\u53ef\u53d6\u4e0d\u53ef\u53d6iwi\uff09\u3002\n\n\u5b8c\u4e86......\uff1ftan90.\n\n\u518d\u8003\u8651\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u8fd8\u6ca1\u6709\u5bf9\u4eba\u8fdb\u884c\u9650\u5236\uff0c\u6240\u4ee5\u8fd9\u6837\u53ef\u80fd\u51fa\u73b0\u4e00\u4e2a\u4eba\u9009\u62e9\u5f88\u591a\u9053\u83dc\u5f88\u591a\u4e2a\u623f\u95f4\u7684\u9738\u6743\u4e3b\u4e49\u3002\u600e\u4e48\u5904\u7406\u5462\uff1f~~\u4e3a\u4e86\u7ef4\u62a4\u4e16\u754c\u7684\u548c\u5e73\u9632\u6b62\u79e9\u5e8f\u88ab\u7834\u574f~~ \u6211\u4eec\u8003\u8651\u628a\u5ba2\u4eba\u5288\u5f00\u5373\u62c6\u6210\u4e24\u4e2a\u70b9\uff0c\u518d\u5728\u8fd9\u4e24\u4e2a\u70b9\u4e2d\u8fde\u4e00\u6761\u8fb9\u6743\u4e3a1\u7684\u8fb9\uff0c\u5373\u9650\u5236\u9738\u6743\u4e3b\u4e49\u7684\u51fa\u73b0\u3002\u7136\u540e\u5c31\u662feasy\u7684\u7f51\u7edc\u6d41\u5566XD\n\ncode\uff08dinic\uff09\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\n#include<map>\nusing namespace std;\nconst int inf=1e9+7;\nint n,p,q,s,t;\nqueue<int>que;\nint dep[10010];\nstruct edge{\n\tint v,nt,c;\n}; \nedge e[200010];\nint list[10010],l=2;\ninline int read(){\n\tchar ch=getchar();\n\tint rt,ck=1;\n\twhile ((ch<'0'||ch>'9')&&ch!='-')\tch=getchar();\n\tif (ch=='-'){\n\t\tck=-1;\n\t\tch=getchar();\n\t}\n\trt=ch-'0';\tch=getchar();\n\twhile (ch>='0'&&ch<='9'){\n\t\t(rt*=10)+=ch-'0';\n\t\tch=getchar();\n\t}\n\treturn rt*ck;\n}\ninline void add(int u,int v,int c){\n\te[l].v=v;\te[l].nt=list[u];\tlist[u]=l;\te[l].c=c;\n\tl++;\n\treturn;\n}\ninline bool bfs(){\n\tmemset(dep,0,sizeof(dep));\n\tdep[s]=1;\tque.push(s);\n\tint u;\n\twhile (!que.empty()){\n\t\tu=que.front();\tque.pop();\n\t\tfor (int i=list[u];i;i=e[i].nt){\n\t\t\tif (e[i].c>0&&dep[e[i].v]==0){\n\t\t\t\tdep[e[i].v]=dep[u]+1;\n\t\t\t\tque.push(e[i].v);\n\t\t\t}\n\t\t}\n\t}\n\tif (dep[t]==0)\treturn 0;\n\treturn 1;\n}\ninline int dfs(int u,int flow){\n\tif (u==t)\treturn flow;\n\tfor (int i=list[u];i;i=e[i].nt){\n\t\tif (dep[e[i].v]==dep[u]+1&&e[i].c!=0){\n\t\t\tint di=dfs(e[i].v,min(flow,e[i].c));\n\t\t\tif (di>0){\n\t\t\t\te[i].c-=di;\n\t\t\t\te[i^1].c+=di;\n\t\t\t\treturn di;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n} \nint dinic(){\n\tint rt=0;\n\twhile (bfs()){\n\t\twhile (int d=dfs(s,inf))\n\t\t\trt+=d;\n\t}\n\treturn rt;\n}\nint main(){\n\tn=read();\tp=read();\tq=read();\n\ts=0;\tt=2*n+p+q+1;\n\tfor (int i=1;i<=p;i++){\n\t\tadd(s,2*n+i,1);\n\t\tadd(2*n+i,s,0);\n\t}\n\tfor (int i=1;i<=q;i++){\n\t\tadd(t,2*n+p+i,0);\n\t\tadd(2*n+p+i,t,1);\n\t}\n\tfor (int i=1;i<=n;i++){\n\t\tint ope;\n\t\tfor (int j=1;j<=p;j++){\n\t\t\tope=read();\n\t\t\tif (ope==1){\n\t\t\t\tadd(2*n+j,n+i,1);\n\t\t\t\tadd(n+i,2*n+j,0);\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i=1;i<=n;i++){\n\t\tadd(i,i+n,0);\n\t\tadd(i+n,i,1);\n\t}\n\tfor (int i=1;i<=n;i++){\n\t\tint ope;\n\t\tfor (int j=1;j<=q;j++){\n\t\t\tope=read();\n\t\t\tif (ope){\n\t\t\t\tadd(j+p+2*n,i,0);\n\t\t\t\tadd(i,j+p+2*n,1);\n\t\t\t}\n\t\t}\n\t}\n\tcout<<dinic()<<endl;\n\treturn 0;\n}\n```",
        "postTime": 1535118846,
        "uid": 17540,
        "name": "yangzechenc",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1402 \u3010\u9152\u5e97\u4e4b\u738b\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\u697c\u4e0b\u5927\u4f6c\u8bb2\u7684\u7279\u522b\u597d\uff0c\u7ed9\u51fa\u4e86\u7f51\u7edc\u6d41\u548c\u4e8c\u5206\u56fe\u7684\u4e24\u79cd\u505a\u6cd5\u3002\u4f46\u662f\u53ea\u6709\u7f51\u7edc\u6d41\uff08EK\uff09\u7684\u4ee3\u7801\uff0c\u6211\u5c31\u662f\u6765\u8d34\u4e00\u4e0b\u4ee3\u7801\u3002\u987a\u4fbf\u590d\u8ff0\u4e00\u4e0b\u5927\u4f6c\u7684\u601d\u8def\uff08\u6211\u5c31\u662f\u4e00\u53f0\u590d\u8bfb\u673a\uff09\u3002\u4e0a\u56fe\uff1a![\u4e8c\u5206\u56fe](https://cdn.luogu.com.cn/upload/image_hosting/eroww20b.png)\n\u5ba2\u4eba\u53ea\u6709\u540c\u65f6\u5339\u914d\u4e0a\u623f\u95f4\u548c\u7f8e\u98df\u624d\u80fd\u7b97\u771f\u6b63\u7684\u5339\u914d\u6210\u529f\u3002\u8fd9\u6837\u5b50\u5c31\u662f\u8dd1\u4e24\u6b21\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u4e86\u3002\u5212\u91cd\u70b9\uff1a\u6bcf\u6b21\u5339\u914d\u524d\u5fc5\u987b\u8981\u8bb0\u5f55\u4e00\u4e0b\u72b6\u6001\uff0c\u6bcf\u4e2a\u623f\u95f4\u662f\u5c5e\u4e8e\u90a3\u4e2a\u4eba\u7684\uff0c\u6bcf\u4e2a\u7f8e\u98df\u662f\u5c5e\u4e8e\u90a3\u4e2a\u4eba\u7684\u3002\u4e3a\u5565\u5462\uff1f\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u662f\u672c\u7740\u201c\u80fd\u76f4\u63a5\u5339\u914d\u5c31\u5339\u914d\uff0c\u4e0d\u80fd\u5339\u914d\u5c31\u521b\u9020\u673a\u4f1a\uff08\u5c31\u662f\u5728\u4fdd\u8bc1\u81ea\u5df1\u6709\u7684\u60c5\u51b5\u4e0b\uff0c\u628a\u81ea\u5df1\u5360\u6709\u7684\u8ba9\u51fa\u53bb\uff09\u7684\u539f\u5219\u8fdb\u884c\u7684\u201d\uff0c\u6700\u5927\u5339\u914d\u4ed6\u53ea\u662f\u4e00\u4e2a\u6570\u5b57\uff08\u4fdd\u6301\u4e0d\u53d8\uff09\uff0c\u4f46\u662f\u5728\u8fd9\u91cc\u5c31\u6709\u95ee\u9898\u4e86\uff0c1\u53f7\u5ba2\u4eba\u539f\u6765\u5360\u67091\u53f7\u623f\u95f4\uff0c\u5360\u67091\u53f7\u7f8e\u98df\uff0c\u73b0\u5728\u4e8c\u53f7\u5ba2\u4eba\u5360\u6709\u4e86\u4e00\u53f7\u623f\u95f4\uff0c\u5360\u6709\u4e86\u4e8c\u53f7\u7f8e\u98df\u3002\u5c31\u53d1\u73b0\u4e86\u4e00\u4e2a\u95ee\u9898\uff1a\u4e00\u53f7\u5ba2\u4eba\u5360\u6709\u7740\u4e00\u53f7\u7f8e\u98df\uff0c\u4f46\u662f\u4ed6\u5374\u6ca1\u6709\u623f\u95f4\uff0c\u65e2\u7136\u6ca1\u623f\u95f4\uff0c\u90a3\u4ed6\u5c31\u5e94\u8be5\u628a\u7f8e\u98df\u4e5f\u91ca\u653e\u4e86\u3002\u8fd9\u6837\u6211\u4eec\u624d\u80fd\u7ed9\u5176\u4ed6\u4eba\u5339\u914d\u3002\u624d\u80fd\u5339\u914d\u7684\u66f4\u591a\u3002\u7b80\u5355\u7684\u8bf4\uff0c\u5c31\u662f\u8981\u62ff\u5168\u90e8\u62ff\u8d70\uff0c\u4e0d\u62ff\u4e00\u4e2a\u90fd\u522b\u62ff\u3002\n\u6240\u4ee5\u5728\u5339\u914d\u524d\uff0c\u6211\u4eec\u4f1a\u8bb0\u5f55\u4e00\u4e0b\u5f53\u524d\u7684\u72b6\u6001\uff0c\u5982\u679c\u5339\u914d\u4e0d\u6210\u529f\uff0c\u5c31\u5f97\u8fd8\u539f\u3002\n\u5176\u5b9e\u8fd9\u4e2a\u4ee3\u7801\u4e5f\u662f\u5b8c\u5168\u53ef\u4ee5\u5f00\u4e00\u4e2avector\u5c31\u89e3\u51b3\u7684\uff0c\u6211\u53ea\u662f\u6bd4\u8f83\u83dc\u3002\u6240\u4ee5\u5c31\u53ea\u80fd\u5f00\u50cf\u4e2avector\u3002\n```c\n#include<bits/stdc++.h>\n#pragma GCC optimize(2)\n#define MAXN 300\n#define INF 0x3f3f3f3f\nusing namespace std;\n\nint n,p,q;\nvector<int> A[MAXN];     //\u5b58\u50a8\u623f\u95f4\u5173\u7cfb\nvector<int> B[MAXN];     //\u5b58\u50a8\u7f8e\u98df\u5173\u7cfb\nint La[MAXN],Lb[MAXN];\nint cop_a[MAXN],cop_b[MAXN];    //\u4fdd\u5b58\u539f\u6765\u7684\u5173\u7cfb\nbool a[MAXN],b[MAXN];\n\nbool match_a(int u)        //\u5bf9\u623f\u95f4\u7684\u5339\u914d\n{\n    for(int i=0;i<A[u].size();i++)\n    {\n        int v=A[u][i];\n        if(a[v])                           //\u6bcf\u4e00\u8f6e\u6bcf\u4e2a\u70b9\u53ea\u80fd\u88ab\u5339\u914d\u4e00\u6b21\uff08\u9632\u6b62\u9012\u5f52\u6b7b\u5faa\u73af\uff09\n            continue;\n        a[v]=true;\n        if(La[v]==0||match_a(La[v]))   //v\u53f7\u623f\u95f4\u6ca1\u4eba\u8981\uff0c\u6216\u8005\u5360\u6709v\u53f7\u623f\u95f4\u7684\u4eba\u80fd\u8ba9\u51fa\u6765\n        {\n            La[v]=u;              //v\u53f7\u623f\u95f4\u5c5e\u4e8eu\u8fd9\u4e2a\u4eba\n            return true;\n        }\n    }\n    return false;\n}\n\nbool match_b(int u)           //\u5bf9\u7f8e\u98df\u7684\u5339\u914d\n{\n    for(int i=0;i<B[u].size();i++)\n    {\n        int v=B[u][i];\n        if(b[v])\n            continue;\n        b[v]=true;\n        if(Lb[v]==0||match_b(Lb[v]))\n        {\n            Lb[v]=u;\n            return true;\n        }\n    }\n    return false;\n}\n\nint solve()\n{\n    int ans=0;\n    int maxn=max(p,q);\n    memset(La,0,sizeof(La));\n    memset(Lb,0,sizeof(Lb));\n    for(int i=1;i<=n;i++)                //\u8981\u5339\u914d\u5c31\u5fc5\u987b\u662f\u4e24\u4e2a\u5fc5\u987b\u540c\u65f6\u5339\u914d\u6210\u529f\uff0c\u4e0d\u80fd\u4e00\u4e2a\u5339\u914d\u6210\u529f\u4e00\u4e2a\u4e0d\u6210\u529f\n    {                                                     //\u8fd9\u6837\u4f1a\u5bfc\u81f4\u5173\u7cfb\u53d1\u751f\u9519\u8bef\uff0c\u6bd4\u5982a\u539f\u6765\u6709\u83dc\uff0c\u4f46\u662f\u540e\u6765\u8ba9\u51fa\u53bb\uff0c\u81ea\u5df1\u53ea\u6709\u623f\uff0c\u6ca1\u83dc\n        for(int j=1;j<=maxn;j++)\n        {\n            cop_a[j]=La[j];\n            cop_b[j]=Lb[j];\n        }\n        memset(a,false,sizeof(a));\n        memset(b,false,sizeof(b));\n        if(match_a(i)&&match_b(i))\n            ans++;\n        else\n        {\n            for(int j=1;j<=maxn;j++)\n            {\n                La[j]=cop_a[j];\n                Lb[j]=cop_b[j];\n            }\n        }\n    }\n    return ans;\n}\n\nint main()\n{\n    scanf(\"%d %d %d\",&n,&p,&q);\n    for(int i=1;i<=n;i++)                          //\u5904\u7406\u623f\u95f4\n    {\n        for(int j=1;j<=p;j++)\n        {\n            int mm;\n            scanf(\"%d\",&mm);\n            if(mm)\n                A[i].push_back(j);             //\u5982\u679c\u7b2ci\u4e2a\u4eba\u5bf9\u7b2cj\u4e2a\u623f\u95f4\u6ee1\u610f\uff0c\u90a3\u5c31\u8fde\u8fb9i\u5230j\n        }\n    }\n    for(int i=1;i<=n;i++)                         //\u5904\u7406\u7f8e\u98df\n    {\n        for(int j=1;j<=q;j++)\n        {\n            int mm;\n            scanf(\"%d\",&mm);\n            if(mm)\n                B[i].push_back(j);          //\u7b2ci\u4e2a\u4eba\u559c\u6b22\u7b2cj\u79cd\u7f8e\u98df\uff0c\u5c31\u8fde\u8fb9i\u5230j\n        }\n    }\n    printf(\"%d\\n\",solve());\n    return 0;\n}\n\n```\n",
        "postTime": 1571724719,
        "uid": 210155,
        "name": "abandentsky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1402 \u3010\u9152\u5e97\u4e4b\u738b\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u76ee\u53ef\u4ee5\u7528\u7f51\u7edc\u6700\u5927\u6d41\u6216\u8005\u4e8c\u5206\u56fe\u5339\u914d\u6765\u505a\uff1b\t\n\u672c\u4eba\u9009\u62e9\u7684\u662f\u4e8c\u5206\u56fe\uff1b\t\n\u6211\u4eec\u8003\u8651\uff1a\u5982\u679c\u53ea\u9700\u8981\u9009\u62e9\u623f\u95f4\u6216\u8005\u53ea\u9009\u62e9\u83dc\uff0c\u90a3\u5c31\u662f\u4e00\u4e2a\u88f8\u7684\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\uff1b\t\n\u56e0\u6b64\u6211\u4eec\u7c7b\u6bd4\u770b\u5f85\u540c\u65f6\u8003\u8651\u4e24\u4e2a\u6761\u4ef6\u7684\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\uff08\u5373\u540c\u65f6\u589e\u5e7f\u4e00\u6761\u5339\u914d\u623f\u95f4\u7684\u8fb9\u548c\u4e00\u6761\u5339\u914d\u83dc\u7684\u8fb9\uff09\uff1b\t\n\u6211\u4eec\u5148\u6839\u636e\u9898\u76ee\u6784\u5efa\u4e24\u5f20\u4e8c\u5206\u56fe\uff0c\u5de6\u8fb9\u7684\u8868\u793a\u83dc\uff0c\u4e2d\u95f4\u7684\u8868\u793a\u5ba2\u4eba\uff0c\u53f3\u8fb9\u7684\u8868\u793a\u623f\u95f4\uff1b\n![](https://cdn.luogu.com.cn/upload/pic/49016.png )\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u53ea\u9700\u8981\u679a\u4e3e\u6bcf\u4e2a\u5ba2\u4eba\uff08\u5373\u4e2d\u95f4\u70b9\uff09\u8fdb\u884c\u8d60\u5e7f\u5de6\u53f3\u4e24\u6761\u5339\u914d\u8fb9\uff1b\t\n\u5339\u914d\u7684\u65f6\u5019\u8fd8\u662f\u91c7\u7528\u5927\u5bb6\u719f\u77e5\u7684\u5308\u7259\u5229\u7b97\u6cd5\uff1b\n\n\u4f60\u4ee5\u4e3a\u8fd9\u6837\u5c31AC\u4e86\uff1f\uff1f\u4e0d\u53ef\u80fd\u7684\uff01\uff01\t\n\u6211\u5c31\u662f\u8fd9\u6837\u4e00\u76f4\u5361\u572880\u5206\uff1b\t\n\u4e3a\u4ec0\u4e48\uff1f\uff1f\uff1f\uff1f\t\n\n\u56e0\u4e3a\u6211\u5ffd\u7565\u4e86\uff1a\u5728\u589e\u5e7f\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5373\u4f7f\u5de6\u53f3\u5176\u4e2d\u4e00\u8fb9\u5339\u914d\u4e0d\u6210\u529f\uff0c\u53e6\u4e00\u8fb9\u7684\u72b6\u6001\u8fd8\u662f\u88ab\u6539\u53d8\u4e86\uff1b\u8fd9\u5c31\u5bfc\u81f4\u4e86\u6211\u4eec\u540e\u9762\u7684\u5339\u914d\u4f1a\u4ea7\u751f\u51b2\u7a81\uff0c\u4f7f\u5f97\u6700\u5927\u5339\u914d\u6570\u53d8\u5c0f\uff1b\uff08\u4f8b\u5982A\u5ba2\u4eba\u5339\u914d\u4e14\u53ea\u80fd\u5339\u914d\u623f\u95f4a\uff0c\u4f46\u662f\u6ca1\u6709\u5339\u914d\u83dc\u54c1\uff1b\u5f53B\u5ba2\u4eba\u5339\u914d\u5230\u623f\u95f4a\u65f6\uff0c\u56e0\u4e3aa\u623f\u95f4\u5df2\u7ecf\u7ed9A\u4e86\uff0c\u6240\u4ee5B\u5ba2\u4eba\u5c31\u6ca1\u623f\u95f4\u4e86\uff0c\u4f46a\u623f\u95f4\u5e94\u8be5\u662f\u5206\u914d\u7ed9B\u5ba2\u4eba\u624d\u6b63\u786e\u7684\uff09\uff1b\t\n\u56e0\u6b64\uff0c\u6211\u5728\u8bfb\u5165\u7684\u65f6\u5019\u628a\u4e0d\u80fd\u540c\u65f6\u6ee1\u8db3\u4e24\u4e2a\u6761\u4ef6\u7684\u5ba2\u4eba\u6392\u9664\uff0c\u5e76\u6839\u636e\u6bcf\u4e2a\u5ba2\u4eba\u5339\u914d\u8fb9\u7684\u6570\u91cf\u5173\u7cfb\u8fdb\u884c\u6392\u5e8f\uff0c\u518d\u8fdb\u884c\u5339\u914d\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u6211\u4eec\u7684\u623f\u95f4\u548c\u83dc\u54c1\u4e00\u5b9a\u4f1a\u5206\u914d\u7ed9\u9009\u62e9\u66f4\u591a\u7684\u5ba2\u4eba\uff0c\u4ece\u800c\u5b8c\u6210\u6700\u5927\u5339\u914d\uff1b\t\n\u4ee3\u7801\u6765\u4e86\uff01\uff01\uff1a\n```\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <cmath>\n#define Max 110\nusing namespace std;\nint n,p,q,x,ans;\nbool vis[3][Max*Max],bol[Max*Max];\nint match[3][Max*Max],du[3][Max*Max],num[Max*Max];\nint fir[3][Max*Max],next[3][Max*Max],to[3][Max*Max],tot[3];\n\nvoid Add(int u,int v,int type){next[type][++tot[type]]=fir[type][u];fir[type][u]=tot[type];to[type][tot[type]]=v;}\n\nbool dfs(int now,int type){\n    for(register int i = fir[type][now];i;i=next[type][i]){\n        int y=to[type][i];\n        if(!vis[type][y]){\n            vis[type][y]=1;\n            if(!match[type][y]||dfs(match[type][y],type)){\n                match[type][y]=now;\n                return 1;\n            }\n        }\n    }\n    return 0;\n}//\u5339\u914ddfs\n\nbool cmp(int a,int b){\n    return du[1][a]==du[1][b]?du[2][a]>du[2][b]:du[1][a]>du[1][b];//\u6bd4\u8f83\u8fde\u63a5\u8fb9\u7684\u6570\u91cf\uff1b\n}\n\nint main(){\n    scanf(\"%d%d%d\",&n,&p,&q);\n    for(register int i = 1 ; i <= n ; ++i){\n        num[i]=i;\n        for(register int j = 1 ; j <= p ; ++j){\n            scanf(\"%d\",&x);\n            if(x){\n                Add(i,j,1);du[1][i]++;//\u5efa\u7acb\u7b2c\u4e00\u5f20\u4e8c\u5206\u56fe\u5e76\u8bb0\u5f55\u4e0ei\u7684\u8fde\u63a5\u8fb9\uff1b\n            }\n        }\n        if(!du[1][i])bol[i]=1;//\u82e5\u6ca1\u6709\u8fb9\u4e0ei\u8fde\u63a5\uff0c\u90a3\u4e48i\u4e00\u5b9a\u4e0d\u80fd\u5b8c\u6210\u5339\u914d\uff1b\n    }\n    for(register int i = 1 ; i <= n ; ++i){\n        for(register int j = 1 ; j <= q ; ++j){\n            scanf(\"%d\",&x);\n            if(x){\n                Add(i,j,2);du[2][i]++;//\u7b2c\u4e8c\u5f20\u56fe\u540c\u4e0a\uff1b\n            }\n        }\n        if(!du[2][i])bol[i]=1;//\u540c\u4e0a\uff1b\n    }\n    sort(num+1,num+1+n,cmp);//\u6839\u636e\u8fb9\u7684\u8fde\u63a5\u6570\u8fdb\u884c\u6392\u5e8f\uff1b\n    for(register int i = 1 ; i <= n ; ++i){\n        if(!bol[num[i]]){\n            memset(vis,0,sizeof(vis));\n            if(dfs(num[i],1)&&dfs(num[i],2))ans++;//\u4e24\u8fb9\u540c\u65f6\u589e\u5e7f\uff1b\n        }\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1547904332,
        "uid": 73132,
        "name": "TangLongbin",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1402 \u3010\u9152\u5e97\u4e4b\u738b\u3011"
    },
    {
        "content": "```c++\n\u673a\u623f\u91cc\u7684\u540c\u5b66\u79f0\u8fd9\u9053\u9898\u4e3a\u201c\u4e09\u5206\u56fe\u5339\u914d\u201d\uff0c\u5176\u5b9e\u6b63\u89e3\u8fd8\u662f\u7f51\u7edc\u6700\u5927\u6d41\u3002\n\n\u6b63\u6587\uff1a\n\u5efa\u56fe\u601d\u8def\uff1a\n1\u3001\u521b\u5efa\u4e00\u4e2a\u8d85\u7ea7\u539f\u70b9\u548c\u4e00\u4e2a\u8d85\u7ea7\u6c47\u70b9\u3002\n2\u3001\u4ece\u8d85\u7ea7\u539f\u70b9\u5411\u6bcf\u4e00\u4e2a\u98df\u54c1\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a\u4e00\u7684\u8fb9\u3002\n3\u3001\u5c06\u6bcf\u4e00\u4e2a\u4eba\u62c6\u6210\u4e24\u4e2a\u70b9r[i]1,r[i]2,\u4e2d\u95f4\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a\u4e00\u7684\u8fb9\u3002\n4\u3001\u4ece\u6bcf\u4e00\u4e2a\u98df\u54c1\u5411\u6bcf\u4e00\u4e2a\u559c\u6b22\u4ed6\u7684\u4eba\u7684r[i]1\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a\u4e00\u7684\u8fb9\u3002\n5\u3001\u4ece\u6bcf\u4e00\u4e2a\u4eba\u7684r[i]2\u5411\u6bcf\u4e00\u4e2a\u4ed6\u559c\u6b22\u7684\u623f\u95f4\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a\u4e00\u7684\u8fb9\u3002\n6\u3001\u4ece\u6bcf\u4e00\u4e2a\u623f\u95f4\u5411\u8d85\u7ea7\u6c47\u70b9\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3a\u4e00\u7684\u8fb9\u3002\n\n\u6700\u540e\u4ece\u8d85\u7ea7\u539f\u70b9\u5411\u8d85\u7ea7\u6c47\u70b9\u8dd1\u4e00\u8fb9\u88f8\u7684\u6700\u5927\u6d41\u5c31\u597d\u4e86\uff01\uff08\u5f53\u7136\u8d85\u7ea7\u6c47\u70b9\u5411\u8d85\u7ea7\u539f\u70b9\u8dd1\u6700\u5927\u6d41\u4e5f\u53ef\u4ee5\uff09\n#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<queue>\nusing namespace std;\nint n,a,b,x,y,z,c[1001][1001],f[1001],r[1001],k,ans;\nvoid bfs(){\n\twhile(1){\n\t\tfor(int i=1;i<=k;i++){\n\t\t\tr[i]=0;\n\t\t\tf[i]=0;\n\t\t}\n\t\tf[0]=100000;\n\t\tqueue<int> q;\n\t\tq.push(0);\n\t\twhile(!q.empty()){\n\t\t\tx=q.front();\n\t\t\tq.pop();\n\t\t\tfor(int i=0;i<=k;i++){\n\t\t\t\tif(c[x][i]&&!f[i]){\n\t\t\t\t\tf[i]=min(f[x],c[x][i]);\n\t\t\t\t\tr[i]=x;\n\t\t\t\t\tq.push(i);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(f[k]==0)break;\n\t\tfor(int i=k;i!=0;i=r[i]){\n\t\t\tc[r[i]][i]-=f[k];\n\t\t\tc[i][r[i]]+=f[k];\n\t\t}\n\t\tans+=f[k];\n\t}\n}\nint main(){\n\tscanf(\"%d %d %d\",&n,&a,&b);\n\tk=n*2+a+b+1;\n\tfor(int j=1;j<=a;j++)c[0][j]=1;\n\tfor(int j=1;j<=b;j++)c[a+2*n+j][k]=1;\n\tfor(int j=1;j<=n;j++)c[a+j][a+n+j]=1;\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=a;j++){\n\t\t\tscanf(\"%d\",&x);\n\t\t\tif(x==1){\n\t\t\t\tc[j][a+i]=1;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=b;j++){\n\t\t\tscanf(\"%d\",&x);\n\t\t\tif(x==1){\n\t\t\t\tc[a+i+n][2*n+a+j]=1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tbfs();\n\tprintf(\"%d\",ans);\n}\n```",
        "postTime": 1542371404,
        "uid": 114149,
        "name": "suyiheng",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1402 \u3010\u9152\u5e97\u4e4b\u738b\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898 \u4e00\u770b\u5c31\u77e5\u9053\u662f\u4e8c\u5206\u56fe\u6ef4\u561b\n\n~~\u4ffa\u624d\u4e0d\u544a\u8bc9\u4f60\u4ffa\u4e0d\u4f1a\u7f51\u7edc\u6d41~~\n\n\u697c\u4e0bdalao\u5df2\u7ecf\u8bf4\u660e\u767d\u4e86  \u4ee5\u4eba\u4e3a\u672c \u5de6\u53f3\u5404\u8dd1\u5308\u7259\u5229\n\n\u6ce8\u610f\n\n1.\u5339\u914d\u4e0d\u6210\u529f\u65f6\u56de\u6eaf\n\n2.n<=100 \u53ef\u4ee5\u4f7f\u7528\u90bb\u63a5\u77e9\u9635 \uff08\u65b9\u4fbf\uff09\n\n\uff08\u5f53\u7136 \u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u90bb\u63a5\u8868\uff09\n\n\u597d\u4e86 \u4e00\u8a00\u4e0d\u548c\u4e0a\u4ee3\u7801\n\n```c\n// luogu-judger-enable-o2\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<cstdlib>\n#include<string>\n#include<queue>\n#include<map>\n#include<stack>\n#include<list>\n#include<set>\n#include<deque>\n#include<vector>\n#include<ctime>\n#define ll long long\n#define inf 0x7fffffff\n#define N 500008\n#define IL inline\n#define M 1008611\n#define D double\n#define ull unsigned long long\n#define R register\nusing namespace std;\ntemplate<typename T>void read(T &a)\n{\n    T x=0,f=1;char ch=getchar();\n    while(!isdigit(ch))\n    {\n        if(ch=='-')f=0;ch=getchar();\n    }\n    while(isdigit(ch))\n    {\n        x=(x<<1)+(x<<3)+ch-'0';ch=getchar();\n    }\n    a=f?x:-x;\n}\n/*-------------OI\u4f7f\u6211\u5feb\u4e50-------------*/\nll n,pi,qi,ans;\nll room[110][110],dish[110][110];\nll to1[110],to2[110];\nll bef1[110],bef2[110];\nbool vis1[110],vis2[110],peo[110];\nIL bool ok1(ll x){\n    for(R ll i=1;i<=pi;++i){\n        if(room[x][i] && !vis1[i]){\n            vis1[i]=1;\n            if(!to1[i] || ok1(to1[i])){\n                to1[i]=x;\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\nIL bool ok2(ll x){\n    for(R ll i=1;i<=qi;++i){\n        if(dish[x][i] && !vis2[i]){\n            vis2[i]=1;\n            if(!to2[i] || ok2(to2[i])){\n                to2[i]=x;\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\nint main()\n{\n    scanf(\"%lld%lld%lld\",&n,&pi,&qi);\n    for(R ll i=1;i<=n;++i)\n     for(R ll j=1;j<=pi;++j)\n      scanf(\"%lld\",&room[i][j]);\n    for(R ll i=1;i<=n;++i)\n     for(R ll j=1;j<=qi;++j)\n      scanf(\"%lld\",&dish[i][j]);\n    for(R ll i=1;i<=n;++i){\n        for(R ll j=1;j<=n;++j) bef1[j]=to1[j],bef2[j]=to2[j];\n        memset(vis1,0,sizeof(vis1));\n        memset(vis2,0,sizeof(vis2));\n        if(ok1(i) && ok2(i)) {ans++;continue;}\n        else\n        {for(R ll j=1;j<=n;++j) to1[j]=bef1[j],to2[j]=bef2[j];} \n    }  \n    cout<<ans<<endl;  \n    return 0;\n}\n\n```",
        "postTime": 1534081101,
        "uid": 87931,
        "name": "tcswuzb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1402 \u3010\u9152\u5e97\u4e4b\u738b\u3011"
    },
    {
        "content": "\n\u8fd9\u9053\u9898\u5dee\u4e0d\u591a\u5c31\u662f[\u6559\u8f85\u7684\u7ec4\u6210](https://www.luogu.org/problemnew/show/1231 \"\u6559\u8f85\u7684\u7ec4\u6210\")\u7684\u6570\u636e\u7f29\u5c0f\u7248\u2026\u2026\n\n\u623f\u95f4\u8fde\u6e90\u70b9\uff0c\u5bb9\u91cf\u4e3a$1$\n\n\u83dc\u8fde\u6c47\u70b9\uff0c\u5bb9\u91cf\u4e3a$1$\n\n\u4eba\u518d\u8fde\u63a5\u623f\u95f4\u548c\u83dc\n\n\u8fd9\u6837\u80fd\u5f97\u5230$60$\u5206\u7684\u597d\u6210\u7ee9\n\n\u53d1\u73b0\u95ee\u9898\uff0c\u4eba\u53ef\u80fd\u88ab\u7528\u4e86\u591a\u6b21\n\n\u5982\u56fe\u6240\u793a\n\n ![](https://cdn.luogu.com.cn/upload/pic/12506.png) \n\n\u7ea2\u7ebf\u3001\u84dd\u7ebf\u90fd\u662f\u5408\u7406\u7684\n\n\u7136\u800c\u4eba\u88ab\u7ecf\u8fc7\u4e86\u4e24\u6b21\uff0c\u6240\u4ee5\u8981\u63a7\u5236\u4eba\uff08\u70b9\uff09\u7684\u6d41\u91cf\n\n\u6240\u4ee5\u628a\u4eba\u62c6\u6210\u4e24\u4e2a\u70b9\uff0c\u4e00\u4e2a\u70b9\u4e0e\u623f\u95f4\u8fde\uff0c\u4e00\u4e2a\u70b9\u4e0e\u83dc\u8fde\n\n\u4e24\u70b9\u518d\u8fde\uff0c\u5bb9\u91cf\u4e3a$1$\n\n\u8dd1\u6700\u5927\u6d41\u5c31\u884c\u4e86\n\n### \u4ee3\u7801\uff1a\n```cpp\n# include<iostream>\n# include<cstdio>\n# include<cstring>\n# include<queue>\nusing namespace std;\nconst int t=500,INF=1e8;\nstruct p{\n    int x,y,dis;\n}c[200001];\nint n,p,q,num;\nint h[501],d[501];\nvoid add(int x,int y,int dis)\n{\n    c[num].x=h[y];c[num].y=x;c[num].dis=0;h[y]=num++;\n    c[num].x=h[x];c[num].y=y;c[num].dis=dis;h[x]=num++;\n}\nbool bfs()\n{\n    queue<int> qu;\n    memset(d,0,sizeof(d));\n    d[0]=1;\n    qu.push(0);\n    while(!qu.empty())\n    {\n        int tt=qu.front();\n        qu.pop();\n        for(int i=h[tt];i;i=c[i].x)\n          if(!d[c[i].y]&&c[i].dis)\n          {\n              d[c[i].y]=d[tt]+1;\n              qu.push(c[i].y);\n          }\n    }\n    return d[t];\n}\nint dfs(int x,int dix)\n{\n    if(!dix||x==t) return dix;\n    int sum=0;\n    for(int i=h[x];i;i=c[i].x)\n      if(d[c[i].y]==d[x]+1&&c[i].dis)\n      {\n          int dis=dfs(c[i].y,min(dix,c[i].dis));\n          if(dis)\n          {\n              dix-=dis;\n              sum+=dis;\n              c[i].dis-=dis;\n              c[i^1].dis+=dis;\n              if(!dix) break;\n        }\n      }\n    if(!sum) d[x]=-1;\n    return sum;\n}\nint dinic()\n{\n    int tot=0;\n    while(bfs())\n    tot+=dfs(0,INF);\n    return tot;\n}\nint main()\n{\n    scanf(\"%d%d%d\",&n,&p,&q);\n    for(int i=1;i<=p;i++)\n      add(0,i,1);\n    for(int i=1;i<=q;i++)\n      add(i+p,t,1);\n    for(int i=1;i<=n;i++)\n      add(i+p+q,i+p+q+n,1);\n    for(int i=1;i<=n;i++)\n      for(int j=1;j<=p;j++)\n        {\n            int x;\n            scanf(\"%d\",&x);\n            if(x) add(j,i+p+q,1);\n        }\n    for(int i=1;i<=n;i++)\n      for(int j=1;j<=q;j++)\n        {\n            int x;\n            scanf(\"%d\",&x);\n            if(x) add(i+p+q+n,j+p,1);\n        }\n    printf(\"%d\",dinic());\n    return 0;\n}\n```",
        "postTime": 1514458934,
        "uid": 49206,
        "name": "Dispwnl",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1402 \u3010\u9152\u5e97\u4e4b\u738b\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u4e5f\u53ef\u4ee5\u7528\u4e8c\u5206\u56fe\u505a\u3002\n\n\u5982\u679c\u6bcf\u4f4d\u5ba2\u4eba\u90fd\u559c\u6b22\u6240\u6709\u7684\u83dc\u6216\u6240\u6709\u7684\u623f\u95f4\uff0c\u90a3\u4e48\u8fd9\u5c31\u662f\u4e00\u9053\u88f8\u7684\u4e8c\u5206\u56fe\u9898\u76ee\u3002\u4f46\u5982\u679c\u5b58\u5728\u4e00\u4f4d\u6216\u591a\u4f4d\u5ba2\u4eba\u4e0d\u559c\u6b22\u67d0\u7684\u83dc\u548c\u67d0\u4e00\u4e2a\u7684\u623f\u95f4\u5462\uff1f\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u505a\u4e24\u4e2a\u4e8c\u5206\u56fe\u5373\u53ef\u3002\n\n\u5177\u4f53\u662f\u8fd9\u6837\u7684\uff1a\u6211\u4eec\u53ef\u4ee5\u6784\u9020\u4e24\u4e2a\u4e8c\u5206\u56fe\uff0c\u4f9d\u6b21\u4ece\u67d0\u4e00\u4e2a\u5ba2\u4eba\u51fa\u53d1\u540c\u65f6\u5bf9\u4e24\u4e2a\u4e8c\u5206\u56fe\u5bfb\u627e\u589e\u5e7f\u8def\uff0c\u82e5\u5bf9\u67d0\u4e00\u4e2a\u4e8c\u5206\u56fe\u6ca1\u6709\u627e\u5230\u589e\u5e7f\u8def\uff0c\u5219\u6062\u590d\u4ece\u8be5\u5ba2\u4eba\u51fa\u53d1\u627e\u5230\u7684\u6240\u6709\u589e\u5e7f\u8def\uff0c\u53cd\u4e4b\uff0c\u5219\u6539\u8fdb\u5339\u914d\u3002\n\n\u5177\u4f53\u770b\u4ee3\u7801\uff1a\n\n```cpp\n\n#include<iostream>\nusing namespace std;\nint n,p,q,i,j,RL[101][101],FL[101][101],LB[101],book[101]={},answer=0,eat[101];\nbool CR[101]={},VR[101]={},VF[101]={},LCR[101],CF[101]={};\nbool abc (int No)\n{\n     for (int i=1;i<=n;i++)\n     if (RL[No][i]&&!VR[i])\n     {\n                           VR[i]=1;\n                           if (book[i]==0||abc(book[i]))\n                           {\n                                                        CR[No]=1;\n                                                        book[i]=No;\n                                                        return 1;\n                           }\n     }\n     return 0;\n}\nbool def (int No)\n{\n     for (int i=1;i<=n;i++)\n     if (FL[No][i]&&!VF[i])\n     {\n                           VF[i]=1;\n                           if (eat[i]==0||def(eat[i]))\n                           {\n                                                      CF[No]=1;\n                                                      eat[i]=No;\n                                                      return 1;\n                           }\n     }\n     return 0;\n}\nint main ()\n{\n    cin>>n>>p>>q;\n    for (i=1;i<=n;i++)\n    for (j=1;j<=p;j++)\n    cin>>RL[i][j];\n    for (i=1;i<=n;i++)\n    for (j=1;j<=q;j++)\n    cin>>FL[i][j];\n    while (1)\n    {\n          for (i=1;i<=n;i++)\n          if (!CR[i])\n          {\n                     for (j=1;j<=n;j++)\n                     VR[j]=0;\n                     for (j=1;j<=n;j++)\n                     VF[j]=0;\n                     for (j=1;j<=n;j++)\n                     LCR[j]=CR[j];\n                     for (j=1;j<=n;j++)\n                     LB[j]=book[j];\n                     if (abc(i)&&def(i))\n                     {\n                                  answer++;\n                                  goto abcdefg;\n                     }\n                     else\n                     {\n                         for (j=1;j<=n;j++)\n                         CR[j]=LCR[j];\n                         for (j=1;j<=n;j++)\n                         book[j]=LB[j];\n                     }\n          }\n          break;\n          abcdefg:\n          continue;\n    }\n    cout<<answer;\n    return 0;\n}",
        "postTime": 1461668255,
        "uid": 4865,
        "name": "Mr_Li",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1402 \u3010\u9152\u5e97\u4e4b\u738b\u3011"
    },
    {
        "content": "\u6700\u5927\u6d41\n\n\u5206\u4e09\u7c7b\u70b9 \u623f\u95f4 \u4eba  \u83dc\n\n\u9650\u5236\u6bcf\u4e2a\u4eba\u53ea\u80fd\u7528\u4e00\u6b21 \u628a\u4eba\u62c6\u70b9\n\n\u7136\u540e\u4e0d\u8981\u5199\u8dea\u6a21\u677f\u5c31\u597d\u5566=w=\n\n```cpp\n\n#include <cstdio>\n#include <vector>\n#include <cstring>\n#include <queue>\n#include <algorithm>\n#include <iostream>\n\nusing namespace std;\n\nstruct edge {\n    int u,v,c,f;\n    edge() { }\n    edge(int a,int b,int cc,int d):u(a),v(b),c(cc),f(d) { };\n};\n\nconst int N=1001,INF=int(1e9),s=0,t=1000;\n\nint n=0,p=0,q=0,room[N][N],dish[N][N],f[N],prev[N],d[N],vis[N],cur[N];\nvector<edge> e;\nvector<int> g[N];\nint exist[N][N];\n\ninline void addEdge(int u,int v,int c=1) {\n    if (exist[u][v])\n        return;\n    e.push_back(edge(u,v,c,0));\n    e.push_back(edge(v,u,0,0));\n    g[u].push_back(e.size()-2);\n    g[v].push_back(e.size()-1);\n    exist[u][v]=1;\n}\n\ninline void build() {\n    //S:0 T:1000\n    //\u623f\u95f41~p \u4ebap+1~p+n p+n+1~p+2n \u83dcp+2n+1~p+2n+q\n    for (int i=1; i<=p; ++i)\n        addEdge(0,i);\n    for (int i=1; i<=p; ++i)\n        for (int j=1; j<=n; ++j)\n            if (room[j][i])\n                addEdge(i,p+j);\n    for (int i=1; i<=n; ++i)\n        addEdge(p+i,p+n+i);\n    for (int i=1; i<=n; ++i)\n        for (int j=1; j<=q; ++j)\n            if (dish[i][j]) {\n                addEdge(p+n+i,p+2*n+j);\n                addEdge(p+2*n+j,1000);\n            }\n}\n\nint bfs() {\n    memset(vis,0,sizeof(vis));\n    memset(d,0,sizeof(d));\n    queue<int> q;\n    d[s]=1;\n    vis[s]=1;\n    q.push(s);\n    while (!q.empty()) {\n        int x=q.front();\n        q.pop();\n        for (int i=0;i<g[x].size();++i) {\n            edge e0=e[g[x][i]];\n            if (!vis[e0.v] && e0.c>e0.f) {\n                vis[e0.v]=1;\n                q.push(e0.v);\n                d[e0.v]=d[x]+1;\n            }\n        }\n    }\n    return vis[t];\n}\n\nint dfs(int x,int a) {\n    if (x==t || a==0)\n        return a;\n    int flow=0,f=0;\n    for (int& i=cur[x];i<g[x].size();++i) {\n        edge& e0=e[g[x][i]];\n        if (d[x]+1==d[e0.v] && (f=dfs(e0.v,min(a,e0.c-e0.f)))>0) {\n            e0.f+=f;\n            e[g[x][i]^1].f-=f;\n            flow+=f;\n            a-=f;\n            if (a==0)\n                break;\n        }\n    }\n    return flow;\n}\n\nint maxFlow() {\n    int flow=0;\n    while (bfs()) {\n        memset(cur,0,sizeof(cur));\n        flow+=dfs(s,INF);\n    }\n    return flow;\n}\n\nint main(void) {\n    scanf(\"%d %d %d\",&n,&p,&q);\n    for (int i=1; i<=n; ++i)\n        for (int j=1; j<=p; ++j)\n            scanf(\"%d\",&room[i][j]);\n    for (int i=1; i<=n; ++i)\n        for (int j=1; j<=q; ++j)\n            scanf(\"%d\",&dish[i][j]);\n    build();\n    printf(\"%d\\n\",maxFlow());\n    return 0;\n}\n\n```",
        "postTime": 1462114814,
        "uid": 13433,
        "name": "QwQ2000",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1402 \u3010\u9152\u5e97\u4e4b\u738b\u3011"
    },
    {
        "content": "\u6784\u56fe\u633a\u7b80\u5355\u7684\u4e00\u9053\u6700\u5927\u6d41\u95ee\u9898\u3002\n\n\u6784\u56fe\u53ea\u9700\u8981\u589e\u52a0\u4e00\u4e2a\u865a\u62df\u7684S\u548c\u865a\u62df\u7684T\u8282\u70b9\uff0c\u5e76\u628a\u4e00\u4e2a\u4eba\u62c6\u4e3a\u4e24\u4e2a\u4eba\uff08\u4e3a\u4e86\u9650\u5236\u4e00\u4e2a\u4eba\u53ea\u80fd\u7528\u4e00\u6b21\uff09\u3002\u7136\u540e\u8dd1\u4e00\u904d\u7f51\u7edc\u6d41\u5c31\u884c\n",
        "postTime": 1375679970,
        "uid": 277,
        "name": "plane",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1402 \u3010\u9152\u5e97\u4e4b\u738b\u3011"
    }
]