[
    {
        "content": "$Updata$\u53d1\u73b0\u6253\u9519\u4e86\u51e0\u4e2a\u7b26\u53f7\u548c\u5b57\u2026\u2026\n\n\u4e0a\u4e00\u7bc7\u552f\u4e00\u7684\u9898\u89e3\u6d89\u5acc\u6284\u88ad\u88ab$Delete$\u4e86\uff08\u8003\u53e4  \n\u90a3\u6211\u6765\u8865\u4e00\u7bc7  \n\n-----------------\n\u5148\u626f\u4e00\u53e5\uff0c\u9898\u9762\u8bf4\u4ec0\u4e48\u65e0\u6548\u64cd\u4f5c\uff0c\u4e8b\u5b9e\u4e0a\u6ca1\u6709\uff08\u5f04\u7684\u6211\u591a\u6253\u4e86100\u884c\u2026\u2026  \n\n\n\u4ece\u9898\u9762\u900f\u9732\u51fa\u7684\u4fe1\u606f\u6211\u4eec\u53ef\u4ee5\u611f\u53d7\u5230\u8fd9\u9898\u662f\u4e2a\u5927\u578b\u6a21\u62df  \n\n\n\u770b\u5230\u76ee\u524d\u7684\u63d0\u4ea4\u5927\u591a\u6570\u662f\u6808\u548c\u94fe\u8868  \n\u7136\u800c\u672c\u849f\u84bb\u5e76\u4e0d\u4f1a\uff0c\u6240\u4ee5\u5c31\u6253\u4e86\u4e00\u4e2a**\u53cc\u7aef\u961f\u5217\uff08\u6a21\u62df\u6808\uff09+\u542f\u53d1\u5f0f\u5408\u5e76**  \n\n\n\u9664\u4e86$MOVE$\u64cd\u4f5c\uff0c\u5176\u4ed6\u64cd\u4f5c\u8fd8\u662f\u6bd4\u8f83\u7b80\u5355\u5427\u2026\u2026\u6309\u7167\u9898\u610f\u6253\u5c31\u53ef\u4ee5\u4e86  \n\n\u5bf9\u4e8e$MOVE$\u64cd\u4f5c\u6211\u4eec\u8fdb\u884c\u542f\u53d1\u5f0f\u5408\u5e76\uff0c\u56e0\u4e3a\u6700\u591a\u6709$10^6$\u6b21\u64cd\u4f5c\uff0c\u5982\u679c\u6309\u7167\u9898\u610f\u66b4\u529b\u5408\u5e76\u590d\u6742\u5ea6\u80fd\u591f\u8fbe\u5230$O(N^2)$\uff0c\u800c\u542f\u53d1\u5f0f\u5408\u5e76\u80fd\u591f\u4fdd\u8bc1\u590d\u6742\u5ea6\u4e3a$O(N log_2 N)$   \n\n\n\u6211\u4eec\u5f00\u4e24\u4e2a\u53cc\u7aef\u961f\u5217\u6a21\u62df\u6808\uff0c\u6700\u521d\u961f\u9996\u4e3a\u6808**\u5e95**\uff0c\u961f\u5c3e\u4e3a\u6808**\u9876**\uff0c\u524d\u9762\u56db\u4e2a\u64cd\u4f5c\u76f4\u63a5\u5728\u961f\u5c3e\u6267\u884c\uff0c\u6bcf\u6b21\u590d\u6742\u5ea6$O(1)$  \n\n\u5bf9\u4e8e\u7b2c5\u4e2a\u64cd\u4f5c$DEL$\uff0c\u76f4\u63a5\u66b4\u529b\u8bb2\u961f\u5217\u6e05\u7a7a\uff0c\u6bcf\u6b21\u590d\u6742\u5ea6$O(n)$\uff0c\u5747\u644a\u590d\u6742\u5ea6$O(1)$  \n\n\u5bf9\u4e8e\u7b2c7\u4e2a\u64cd\u4f5c$SWAP$\uff0c\u6211\u4eec\u8bb0\u5f55$f_0$\u548c$f_1$\uff0c\u8868\u793a\u8f93\u5165\u7684$x$\u53f7\u6808\u5bf9\u5e94\u7684\u662f\u7b2c$f_x$\u53f7\u961f\u5217\uff0c\u64cd\u4f5c\u65f6\u76f4\u63a5\u8bb2$f_0$\u548c$f_1$ $SWAP$\u5373\u53ef\uff0c\u6ce8\u610f\uff0c$f_0 f_1$\u4e00\u5b9a\u8981\u5206\u522b\u7f6e\u521d\u503c${0,1}$\uff0c\u6bcf\u6b21\u590d\u6742\u5ea6$O(1)$  \n\n\u5bf9\u4e8e\u6bd2\u7624\u7684\u7b2c6\u4e2a\u64cd\u4f5c$MOVE$\uff0c\u6211\u4eec\u8003\u8651\u4e24\u79cd\u60c5\u51b5\uff08\u6ce8\u610f\uff0c\u9898\u76ee\u8981\u6c42\u5c06$Y$\u6808\u79fb\u52a8\u5230$X$\u6808\uff09\uff1a  \n\n\n--------------\n- \u5f53$Y$\u6808\u5c0f\u4e8e$X$\u6808\u65f6\uff0c\u76f4\u63a5\u66b4\u529b\u5c06$Y$\u6808\u91cc\u7684\u5143\u7d20\u79fb\u5230$X$\u6808\u91cc  \n\n\n------------\n- \u5f53$Y$\u6808\u5927\u4e8e$X$\u6808  \n \u6211\u4eec\u501f\u52a9$Tag_0\\text{\u548c}Tag_1$\u8868\u793a\u8fd9\u4e2a\u961f\u5217\u662f\u5426\u53cd\u8f6c\uff0c\u5373\u961f\u5934\u53d8\u961f\u5c3e\uff0c\u961f\u5c3e\u53d8\u961f\u5934\uff0c\u521d\u59cb\u5316\u90fd\u4e3a\u96f6\uff0c\u8868\u793a\u6ca1\u6709\u53cd\u8f6c  \n \u6211\u4eec\u5c06$X$\u6808\u91cc\u7684\u5143\u7d20\u6309\u7167\u51fa\u6808\u987a\u5e8f\u4e00\u4e00\u79fb\u52a8\u5230$Y$\u6808  \n \u7136\u540e\u518d\u5c06$Tag_Y\\ XOR\\ \\  1$\uff0c\u56e0\u4e3a\u4e24\u6b21\u53cd\u8f6c\u5219\u7b49\u4e8e\u6ca1\u6709\u53cd\u8f6c   \n \u6700\u540e$SWAP(f_x,f_y)$    \n \u4e3a\u4ec0\u4e48\u8fd9\u6837\u662f\u5bf9\u7684\uff0c\u56e0\u4e3a\u5c06$Y$\u6808\u79fb\u52a8\u5230$X$\u6808\u6b63\u597d\u662f\u5c06$X$\u6808\u79fb\u52a8\u5230$Y$\u6808\u7684\u53cd\u8f6c\u5e8f\u5217\uff0c\u81ea\u5df1\u753b\u4e2a\u56fe\u5c31\u77e5\u9053\u4e86  \n \n \n--------------\n\u6bcf\u6b21\u590d\u6742\u5ea6$O(n)$\uff0c\u5747\u644a\u590d\u6742\u5ea6$O(log_2N)$  \n \n \n \n \n \n --------------------\n \n$Code:$  $O(N log_2 N)$\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ndeque<ll>q[2];\nint f[2]={0,1};\nint tag[2]={0,0};\nint main()\n{\n    char k[10];int x,y;ll X,Y;\n    while(true){\n        scanf(\"%s\",k);\n        if(k[0]=='P'&&k[1]=='O'){\n            scanf(\"%d\",&x);\n            if(!q[f[x]].size()){\n                puts(\"UNSUCCESS\");\n            }\n            else{\n                puts(\"SUCCESS\");\n                if(tag[f[x]]){\n                    q[f[x]].pop_front();\n                }\n                else q[f[x]].pop_back();\n            }\n        }\n        else if(k[0]=='P'&&k[1]=='U'){\n            scanf(\"%d%lld\",&x,&Y);\n            puts(\"SUCCESS\");\n            if(tag[f[x]]){\n                q[f[x]].push_front(Y);\n            }\n            else q[f[x]].push_back(Y);\n        }\n        else if(k[0]=='A'&&k[1]=='D'){\n            scanf(\"%d\",&x);\n            if(!q[0].size()||!q[1].size()){\n                puts(\"UNSUCCESS\");\n            }\n            else{\n                puts(\"SUCCESS\");\n                ll a,b;\n                if(tag[0])a=q[0].front(),q[0].pop_front();\n                else a=q[0].back(),q[0].pop_back();\n                if(tag[1])b=q[1].front(),q[1].pop_front();\n                else b=q[1].back(),q[1].pop_back();\n                if(tag[f[x]]){\n                    q[f[x]].push_front(a+b);\n                }\n                else{\n                    q[f[x]].push_back(a+b);\n                }\n            }\n        }\n        else if(k[0]=='S'&&k[1]=='U'){\n            scanf(\"%d\",&x);\n            if(!q[0].size()||!q[1].size()){\n                puts(\"UNSUCCESS\");\n            }\n            else{\n                puts(\"SUCCESS\");\n                ll a,b;\n                if(tag[0])a=q[0].front(),q[0].pop_front();\n                else a=q[0].back(),q[0].pop_back();\n                if(tag[1])b=q[1].front(),q[1].pop_front();\n                else b=q[1].back(),q[1].pop_back();\n                if(tag[f[x]]){\n                    q[f[x]].push_front(abs(a-b));\n                }\n                else{\n                    q[f[x]].push_back(abs(a-b));\n                }\n            }\n        }\n        else if(k[0]=='D'&&k[1]=='E'){\n            scanf(\"%d\",&x);\n            puts(\"SUCCESS\");\n            tag[f[x]]=0;\n            while(q[f[x]].size())q[f[x]].pop_back();\n        }\n        else if(k[0]=='M'&&k[1]=='O'){\n            scanf(\"%d%d\",&x,&y);\n            puts(\"SUCCESS\");\n            if(q[f[x]].size()<q[f[y]].size()){\n                while(q[f[x]].size()){\n                    ll a;\n                    if(tag[f[x]])a=q[f[x]].front(),q[f[x]].pop_front();\n                    else a=q[f[x]].back(),q[f[x]].pop_back();\n                    if(tag[f[y]])q[f[y]].push_front(a);\n                    else q[f[y]].push_back(a);\n                }\n                tag[f[y]]^=1;\n                swap(f[0],f[1]);\n            }\n            else{\n                while(q[f[y]].size()){\n                    ll a;\n                    if(tag[f[y]])a=q[f[y]].front(),q[f[y]].pop_front();\n                    else a=q[f[y]].back(),q[f[y]].pop_back();\n                    if(tag[f[x]])q[f[x]].push_front(a);\n                    else q[f[x]].push_back(a);\n                }\n            }\n        }\n        else if(k[0]=='S'&&k[1]=='W'){\n            swap(f[0],f[1]);puts(\"SUCCESS\");\n        }\n        else if(k[0]=='E'&&k[1]=='N'){\n        \tputs(\"SUCCESS\");\n            if(!q[f[0]].size())puts(\"NONE\");\n            else {\n                if(tag[f[0]]){\n                    while(q[f[0]].size())\n                      printf(\"%lld \",q[f[0]].front()),q[f[0]].pop_front();\n                }\n                else{\n                    while(q[f[0]].size())\n                      printf(\"%lld \",q[f[0]].back()),q[f[0]].pop_back();\n                }\n                puts(\"\");\n            }\n            if(!q[f[1]].size())puts(\"NONE\");\n            else {\n                if(tag[f[1]]){\n                    while(q[f[1]].size())\n                      printf(\"%lld \",q[f[1]].front()),q[f[1]].pop_front();\n                }\n                else{\n                    while(q[f[1]].size())\n                      printf(\"%lld \",q[f[1]].back()),q[f[1]].pop_back();\n                }\n                puts(\"\");\n            }\n            break;\n        }\n    }\n    return 0;\n}\n```\n",
        "postTime": 1552801783,
        "uid": 119261,
        "name": "7KByte",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4940 \u3010Portal2\u3011"
    },
    {
        "content": "\u5927\u5bb6\u597d,\u6211\u975e\u5e38\u559c\u6b22\u975e\u65cbTreap,\u5b83\u592a\u53ef\u7231\u4e86,\u6240\u4ee5\u6211\u8981\u6765\u4e00\u7bc7\u975e\u65cbTreap\u7684\u9898\u89e3  \n-\n\u7531\u4e8e\u6211\u592a\u83dc\u4e86  \n\u697c\u4e0b\u90a3\u4e2a\u53cc\u7aef\u961f\u5217\uff08\u6a21\u62df\u6808\uff09+\u542f\u53d1\u5f0f\u5408\u5e76\u7684\u505a\u6cd5  \n\u6211\u5f53\u65f6\u505a\u9898\u5e76\u6ca1\u6709\u60f3\u5230,\u62ff\u4e8660\u5206\u66b4\u529b\u5c31\u8dd1\u4e86   \n\u5076\u7136\u53c8\u7ffb\u51fa\u6765,\u51b3\u5b9a\u518d\u505a\u4e00\u6ce2  \n\u6211\u7684\u786e\u60f3\u5230\u8fc7\u53cc\u7aef\u961f\u5217    \n\u6211\u601d\u8003\u7247\u523b\u4ee5\u4e3a\u53ef\u4ee5O(1)\u5408\u5e76  \n![](https://s2.ax1x.com/2019/09/01/n9uYtI.png)  \n\u5173\u4e8eMOVE\u64cd\u4f5c,\u5c31\u662f\u628a\u4e00\u4e2a\u94fe\u8868\u7ffb\u8f6c,\u5728\u548c\u53e6\u4e00\u4e2a\u9ecf\u5728\u4e00\u8d77  \n\u4e8e\u662f\u6211\u60f3\u5230\u4e86\u4e00\u4e2a\u60ca\u4e3a\u5929\u4eba\u7684\u529e\u6cd5  \n![\u6211\u771f\u4ed6\u5a18\u662f\u4e2a\u4eba\u624d](https://s2.ax1x.com/2019/09/01/n9KpEd.png)  \n\u6211\u8fd8\u4e3astd::list\u6ca1\u6709\u63d0\u4f9b\u8fd9\u4e2a\u63a5\u53e3\u800c\u611f\u5230\u70e6\u607c   \n\u9042\u6307\u9488\u6ee1\u5929\u98de\u624b\u5199deque  \n\u554a\uff01\u5e73\u9762\u7684\u6307\u9488\u4ea4\u9519\u751f\u957f,\u7ec7\u6210 **\u5fe7\u4f24\u7684\u7f51**  \n\u540e\u6765\u6211\u624d\u53d1\u73b0\u4e0d\u5bf9\u554a,\u867d\u7136\u63a5\u5012\u662f\u80fd\u63a5\u4e0a\u53bb,\u4f46\u662f**\u5e76\u6ca1\u6709\u5375\u7528**\u554a  \n\u4e24\u4e2a\u6307\u9488\u540d\u5b57\u53c8\u4e0d\u4e00\u6837,\u5230\u5934\u6765\u8fd8\u662f\u8981O(N)\u7ffb\u8f6c\u4e00\u904d\u6307\u9488  \n\u9042\u653e\u5f03  \n\u7136\u540e\u6211\u4ed4\u7ec6\u601d\u8003\u4e86\u4e0b,\u5982\u4e0a\u56fe\u7684\u6808\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u5c01\u88c5\u7684\u6570\u7ec4,\u6216\u8005**\u533a\u95f4**  \n\u73b0\u5728\u6211\u8981\u5bf9\u8fd9\u4e2a\u533a\u95f4\u8fdb\u884c\u4e00\u4e9b\u64cd\u4f5c,\u5305\u62ec      \n   \u63d2\u5165/\u5220\u9664\u4e00\u4e2a\u5143\u7d20   \n   \u6e05\u7a7a\u4e00\u4e2a\u533a\u95f4  \n   \u5408\u5e76\u4e24\u4e2a\u533a\u95f4   \n\u5e76\u4e14\u6bcf\u6b21\u64cd\u4f5c\u5747\u644a\u4e0b\u6765\u8981\u5728**logN**\u7684\u65f6\u95f4\u5185\u5b8c\u6210  \n\u9664\u4e86\u90a3\u4e2a\u6211\u770b\u4e0d\u61c2\u7684\u542f\u53d1\u5f0f\u5408\u5e76,\u90a3\u4e48\u8fd8\u6709\u4e00\u79cd\u66b4\u529b\u7f8e\u5b66  \n\u5e73\u8861\u6811\uff01  \n\u975e\u65cbTreap\uff01   \n\u867d\u7136stack\u7684\u63d2\u5165\u5220\u9664\u662fO(1),\u4f46\u5e73\u8861\u6811\u662fO(logN)  \n\u4f46\u662f\u5bf9\u4e8eMOVE\u548cDEL,\u5e73\u8861\u6811\u53ef\u4ee5\u8ddf\u522bO(logN)\u548cO(1)\u5b8c\u6210   \n\u8d77\u7801\u590d\u6742\u5ea6\u5bf9\u4e86.  \n\u6574\u4e2a\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u4e0d\u9ad8\u4e8eO(NlogN)~~\u5e38\u6570\u8d85\u5927~~\u5b8c\u5168\u53ef\u4ee5\u8fc7\u8fd9\u9053\u9898   \n\u6bcf\u4e2a\u6808\u90fd\u7528begin\u548cend\u6765\u8bb0\u5f55\u4f4d\u7f6e,\u5c31\u548c\u6570\u7ec4\u6a21\u62df\u6808\u4e00\u4e2a\u6837  \nPUSH POP ADD SUB\u5199\u6cd5\u90fd\u7c7b\u6bd4\u6570\u7ec4   \nMOVE\u64cd\u4f5c,\u4ece\u533a\u95f4\u4e0a\u6765\u770b,\u5c31\u662f\u628ay\u6240\u5728\u7684\u533a\u95f4\u7ffb\u8f6c,\u7136\u540e\u518d\u548cx\u6240\u5728\u533a\u95f4\u5408\u5e76  \n\u5173\u952e\u8bcd\uff1a\u533a\u95f4\u53cd\u8f6c,\u6587\u827a\u5e73\u8861\u6811,logN   \nSWAP:\u4ea4\u6362\u6839\u548cbegin/end  \nDEL\u64cd\u4f5c\uff1a~~\u8bb2\u9053\u7406\u76f4\u63a5\u628aroot\u6362\u4e86\u5c31\u53ef\u4ee5\u4e86\u8c01\u95f2\u7684\u6ca1\u4e8b\u5220\u6811~~    \n\u5dee\u4e0d\u591a\u5c31\u8fd9\u6837\u5427   \n\u6700\u540e\u732e\u4e0a\u6211\u53c8\u81ed\u53c8\u957f\u8fd8\u8dd1\u5f97\u5de8\u6162\u7684\u4ee3\u7801  \n\u5177\u4f53\u505a\u6cd5\u90fd\u5199\u5728\u6ce8\u91ca\u91cc\u9762\u4e86.  \n```cpp\n//P4940\n#include<iostream>\n#include<cstdlib>\n#include<ctime>\n#define MAXN 2000001\n#define ll long long int\nstruct node{ll val;int key,rev,size,l,r;}t[MAXN];                              \nint root[2],tot; //\u6bcf\u4e00\u4e2aroot\u5bf9\u5e94\u4e00\u9897\u6811,\u5bf9\u5e94\u4e00\u4e2a\u6808\u7684\u533a\u95f4 \nstruct stack{int begin,end,empty;}stk[2];//\u4e24\u4e2a\u6808\u7684\u8303\u56f4,begin==end\u5219\u6808\u4e3a\u7a7a,\u548c\u6570\u7ec4\u6a21\u62df\u6808\u7684\u5199\u6cd5\u5f88\u7c7b\u4f3c \nusing namespace std;\n/**************\u4ee5\u4e0b\u975e\u65cbTreap\u5e38\u89c4\u64cd\u4f5c********************/ \nint New(ll val){t[++tot]=(node){val,rand(),0,1,0,0};return tot;}          \nvoid update(int now){t[now].size=t[t[now].l].size+t[t[now].r].size+1;}\nvoid pushdown(int now) //\u533a\u95f4\u7ffb\u8f6c\u6807\u8bb0\u4e0b\u4f20\u9001 \n{\n\tif(!t[now].rev)return;\n\tt[t[now].l].rev^=1;\n\tt[t[now].r].rev^=1;\n\tswap(t[now].l,t[now].r);\n\tt[now].rev=0;\n}\nvoid split(int now,int&x,int&y,int rank)\n{\n\tif(!now){x=y=0;return;}pushdown(now);\n\tif(t[t[now].l].size>=rank)y=now,split(t[now].l,x,t[y].l,rank);\n\telse x=now,split(t[now].r,t[x].r,y,rank-t[t[now].l].size-1);\n\tupdate(now);\n}\nvoid merge(int&now,int x,int y)\n{\n\tif(!x||!y){now=x+y;return;}pushdown(x);pushdown(y);\n\tif(t[x].val<t[y].val)now=x,merge(t[now].r,t[x].r,y);\n\telse now=y,merge(t[now].l,x,t[y].l);\n\tupdate(now);\n}\nvoid insert(int root,int pos,ll val)\n{\n\tint x=0,y=0;\n\tsplit(root,x,y,pos);\n\tmerge(x,x,New(val));\n\tmerge(root,x,y);\n}\nvoid erase(int root,int l_pos,int r_pos=-1)     //\u8fd9\u91cc\u662f\u4e3a\u4e86\u65e2\u80fd\u5220\u9664\u5355\u4e2a\u5143\u7d20 \n{                                               // \u4e5f\u80fd\u5220\u9664\u6574\u4e2a\u533a\u95f4 \n\tif(r_pos==-1)erase(root,l_pos,l_pos);       //\u5e94\u8be5\u7b97\u662f\u4ee3\u7801\u590d\u7528\u4e48 \n\telse\n\t{\n\t\tint x=0,y=0,z=0;\n\t\tsplit(root,x,y,r_pos);\n\t\tsplit(x,x,z,l_pos-1);\n\t\tmerge(root,x,y);\n\t}\n}\nvoid reverse(int root,int l_pos,int r_pos)   //\u7ffb\u8f6c\u533a\u95f4 \n{\n\tint x=0,y=0,z=0;\n\tsplit(root,x,y,r_pos);\n\tsplit(x,x,z,l_pos-1);\n\tt[z].rev^=1;\n\tmerge(x,x,z);\n\tmerge(root,x,y);\n}\nll&at(int root,int pos)  //\u8bbf\u95ee\u67d0\u4e2a\u5143\u7d20,\u7c7b\u4f3c\u6570\u7ec4\u4e0b\u6807\u8bbf\u95ee \n{\n\tint x=0,y=0,z=0;\n\tsplit(root,x,y,pos);\n\tsplit(x,x,z,pos-1);\n\tll&ans=t[z].val;\n\tmerge(x,x,z);\n\tmerge(root,x,y);\n\treturn ans;\n}\nvoid print(int now)  //\u904d\u5386now\u4e3a\u6839\u7684Treap \n{\n\tpushdown(now); \n\tif(t[now].l)print(t[now].l);\n\tcout<<t[now].val<<\" \";\n\tif(t[now].r)print(t[now].r); \n}\n#ifdef _DEBUG\nvoid print_debug(int root)\n{\n\tcout<<endl;\n\tprint(root);\n\tcout<<endl;\t\n}\nvoid debug()\n{\n\tcout<<\"stk0:\";\n\tprint_debug(root[0]);\n\tcout<<\"stk1:\";\n\tprint_debug(root[1]);\n}\n#endif\nvoid print(int root,int l_pos,int r_pos) //\u904d\u5386\u67d0\u4e2a\u5b50\u533a\u95f4 \n{\n\tint x=0,y=0,z=0;\n\tsplit(root,x,y,r_pos);\n\tsplit(x,x,z,l_pos-1);\n\tprint(z);\n\tmerge(x,x,z);\n\tmerge(root,x,y);\n}\n/**********\u4ee5\u4e0a\u4e3a\u975e\u65cbTreap\u5e38\u89c4\u64cd\u4f5c***************/\nvoid init()   \n{\n\troot[0]=New(-1); //\u4e3a\u4e24\u4e2a\u6808\u786e\u5b9a\u4e00\u4e2a\u6839\u8282\u70b9 \n\troot[1]=New(-1);\n\tstk[0].begin=stk[0].end=1;\n\tstk[1].begin=stk[1].end=1;\n}\n/**********\u4ee5\u4e0b\u4e3astack\u7684\u64cd\u4f5c*******************/ \nvoid push(int x,ll num)\n{\n\tinsert(root[x],stk[x].end,num);  //\u672b\u5c3e\u63d2\u5165\u4e00\u4e2a\u5143\u7d20 \n\tstk[x].end++;                //\u66f4\u65b0\u4e0b\u6807 \n}\nbool empty(int x)\n{\n\treturn stk[x].begin==stk[x].end;  \n}\nvoid pop(int x)\n{\n\terase(root[x],stk[x].end);  //\u5220\u6389\u672b\u5c3e\u5143\u7d20 \n\tstk[x].end--;\n}\nvoid erase(int x)\n{\n\troot[x]=New(-1);           //\u76f4\u63a5\u6254\u6389\u4e0d\u7ba1\u4e86,\u53cd\u6b63\u7a7a\u95f4\u591f\u7528\u968f\u4fbf\u6298\u817e,O(1)\u6e05\u7a7ahhh \n\tstk[x].end=stk[x].begin;   \n}\nvoid swap()\n{\n\tswap(root[0],root[1]);     //\u6839\u548cstack\u4e00\u4e00\u5bf9\u5e94 \n\tswap(stk[0],stk[1]);       //\u4ea4\u6362\u4e0b\u6807 \n}\nvoid move(int x,int y)        //\u6240\u6709\u64cd\u4f5c\u7528\u6700\u91cd\u8981\u7684 \n{                             //\u4e5f\u662f\u6700\u9a9a\u6c14\u7684 \n\tint x1=0,x2=0,y1=0,y2=0;\n\treverse(root[y],2,stk[y].end);  //\u786e\u5b9aroot\u7684\u65f6\u5019\u63d2\u5165\u4e86-1,\u8fd9\u91cc\u5148\u628a\u4e24\u4e2a-1\u5206\u51fa\u6765 \n\tsplit(root[x],x1,x2,1);\n\tsplit(root[y],y1,y2,1);          //\u628ay\u6240\u6709\u5143\u7d20push\u5230x,\u5c31\u76f8\u5f53\u4e8e\u7ffb\u8f6cy\u6240\u5728\u7684\u533a\u95f4,\u5728\u5408\u5e76x,y\u6240\u5728\u7684\u533a\u95f4 \n\tmerge(x2,x2,y2);\n\tmerge(root[x],x1,x2);           //\u518d\u628a-1\u52a0\u8fdb\u53bb,\u6839\u4e3ax\u539f\u6765\u7684\u6839 \n\tstk[x].end+=stk[y].end-1;       //\u66f4\u65b0\u4e0b\u6807\u8303\u56f4 \n\tstk[y].end=stk[y].begin;\n}\nint main()\n{\n\tinit();\n\twhile(1)\n\t{\n\t\tint x,y;\n\t\tll num;\n\t\tstring str;\n\t\tcin>>str;\n\t\tif(str==\"PUSH\")\n\t\t{\n\t\t\tprintf(\"SUCCESS\\n\");\n\t\t\tscanf(\"%d%lld\",&x,&num);\n\t\t\tpush(x,num);\n\t\t}\n\t\tif(str==\"POP\")\n\t\t{\n\t\t\tscanf(\"%d\",&x);\n\t\t\tif(empty(x))printf(\"UNSUCCESS\\n\");\n\t\t\telse\n\t\t\t{\n\t\t\t\tpop(x);\n\t\t\t\tprintf(\"SUCCESS\\n\");\n\t\t\t}\n\t\t}\n\t\tif(str==\"ADD\")\n\t\t{\n\t\t\tscanf(\"%d\",&x);\n\t\t\tif(empty(0)||empty(1))printf(\"UNSUCCESS\\n\");\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(\"SUCCESS\\n\");\n\t\t\t\tll temp=at(root[1],stk[1].end)+at(root[0],stk[0].end);\n\t\t\t\tpop(0);\n\t\t\t\tpop(1);\n\t\t\t\tpush(x,temp);\n\t\t\t}\n\t\t}\n\t\tif(str==\"SUB\")\n\t\t{\n\t\t\tscanf(\"%d\",&x);\n\t\t\tif(empty(0)||empty(1))printf(\"UNSUCCESS\\n\");\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(\"SUCCESS\\n\");\n\t\t\t\tll temp=abs(at(root[1],stk[1].end)-at(root[0],stk[0].end));\n\t\t\t\tpop(0);\n\t\t\t\tpop(1);\n\t\t\t\tpush(x,temp);\n\t\t\t}\n\t\t}\n\t\tif(str==\"DEL\")\n\t\t{\n\t\t\tprintf(\"SUCCESS\\n\");\n\t\t\tscanf(\"%d\",&x);\n\t\t\terase(x);\n\t\t}\n\t\tif(str==\"SWAP\")\n\t\t{\n\t\t\tprintf(\"SUCCESS\\n\");\n\t\t\tswap();\n\t\t} \n\t\tif(str==\"MOVE\")\n\t\t{\n\t\t\tprintf(\"SUCCESS\\n\");\n\t\t\tscanf(\"%d%d\",&x,&y);\n\t\t\tmove(x,y);\n\t\t}\n\t\tif(str==\"END\")\n\t\t{\n\t\t\tprintf(\"SUCCESS\\n\");\n\t\t\tif(empty(0))printf(\"NONE\\n\"); //\u4e3a\u7a7a \n\t\t\telse\n\t\t\t{\n\t\t\t\treverse(root[0],2,stk[0].end);   //stack\u7684pop\u987a\u5e8f\u5c31\u662f\u53cd\u8fc7\u6765\u7684 \n\t\t\t\tprint(root[0],2,stk[0].end);      //\u4e0d\u8f93\u51fa-1 \n\t\t\t\tputchar('\\n');\n\t\t\t}\n\t\t\tif(empty(1))printf(\"NONE\\n\");\n\t\t\telse\n\t\t\t{\n\t\t\t\treverse(root[1],2,stk[1].end);\n\t\t\t\tprint(root[1],2,stk[1].end);\n\t\t\t}\n\t\t\texit(0);                         //\u524d\u51e0\u5929\u770b\u67d0\u9898\u89e3\u76f4\u63a5\u4ecedfs\u4e2d\u5f3a\u884c\u9000\u51fa...\u56de\u6eaf\u7684\u65f6\u95f4\u4e00\u5200\u780d\u6389TLE->AC \n\t\t}\n\t}\n}\n//\u5b8c\u7ed3,\u6492\u82b1\uff01 \n\n```\n",
        "postTime": 1567348219,
        "uid": 229609,
        "name": "NewSjf",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P4940 \u3010Portal2\u3011"
    }
]