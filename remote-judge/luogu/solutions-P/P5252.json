[
    {
        "content": "\u8fd9\u9898\u771f\u6709\u8da3!\u75af\u72c2\u5361\u5e38+\u526a\u679d\uff08\u867d\u7136\u8fd8\u53ea\u662f\u6700\u4f18\u89e3\u7b2c\u4e94...\uff09\n\n\u5173\u4e8e\u6b64\u9898\u5982\u679c\u76f4\u63a5\u62c6\u70b9\u518d\u7528[P1742 \u6700\u5c0f\u5706\u8986\u76d6](https://www.luogu.org/problemnew/show/P1742)\u5c31TLE\u4e86\uff08\u8bd5\u8fc7\u4e86\uff09\n\n\u5173\u4e8e\u4ec0\u4e48$d<=acos(1-0.005/r)$\u4e0d\u53ef\u80fd\u8fc7\u7684\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u5f0f\u5b50\u5b8c\u5168\u6ca1\u6709\u8003\u8651\u5728$r$\u5f88\u5927\u7684\u65f6\u5019\u7684\u60c5\u51b5,\n\n![](https://cdn.luogu.com.cn/upload/pic/53753.png)\n\n\u5c0f\u5706\u662f\u6211\u9700\u8981\u62c6\u70b9\u7684\u5706\uff0c\u5927\u5706\u5047\u8bbe\u662f\u7b54\u6848\u9700\u8981\u7684\u5706\uff0c\u5c06\u5176\u90e8\u5206\u653e\u5927\n\n![](https://cdn.luogu.com.cn/upload/pic/53754.png)\n\n\u8bef\u5dee\u662f\u600e\u4e48\u6765\u7684\u5462\uff1f\u5176\u5b9e\u4e0a\u56fe\u544a\u8bc9\u4e86\u4f60\uff08\u53ea\u662f\u7279\u6b8a\u60c5\u51b5,\u8fd9\u6837\u8bef\u5dee\u4f1a\u6700\u5927\uff09\u3002\u5b9e\u9645\u4e0a\u4e00\u4e2a\u5706\u4e0a\u53ea\u4f1a\u6709\u4e00\u4e2a\u70b9\u5bf9\u7b54\u6848\u6709\u8d21\u732e\uff0c\u4f46\u662f\u56e0\u4e3a\u62c6\u70b9\u7684\u539f\u56e0\u4f60\u53ea\u6709$\\frac{1}{inf}$\u7684\u53ef\u80fd\u5c06\u90a3\u4e2a\u70b9\u62c6\u51fa\u6765,\u6240\u4ee5\u57fa\u672c\u4e0a\u80af\u5b9a\u4f1a\u6709\u8bef\u5dee\u3002\n\n\u5047\u8bbe\u5c0f\u5706\u534a\u5f84\u4e3ar,\u5927\u5706\u534a\u5f84\u4e3aR\n\n\u5047\u8bbe\u62c6\u5f00\u4e24\u70b9\u7684\u89d2\u5ea6\u4e3a$\\theta$\uff0c\u5982\u679c\u5f53\u6210$d=(1-cos\\frac{\\theta}{2})r$\u6765\u7b97\u8bef\u5dee $d=(1-cos\\frac{\\theta}{2})r<=0.005$(\u4e24\u8fb9\u6240\u4ee5\u9664\u4ee52)\u6765\u7b97\uff0c\u90a3\u4e48$\\theta<=2*arccos(1-0.005/r)$\uff08\u4e3a\u4ec0\u4e48\u6211\u7b97\u7684\u4e0d\u662f$acos(1-0.005/r)$\u554a$QAQ$\uff09\n\n\u4f46\u662f\u5b9e\u9645\u4e0a\u8bef\u5dee\u771f\u7684\u662f\u8fd9\u4e2a\u5417....\u5f53$R>>r$\uff08\u8fdc\u5927\u4e8e\u7684\u610f\u601d\uff09\u7684\u65f6\u5019\u786e\u5b9e\u662f\u7684\uff0c\u4f46\u662f\u5f53$R,r$\u63a5\u8fd1\u5462\uff1f\u5982\u679c$R=r$\u6211\u4eec\u53ef\u4ee5\u5f88\u8f7b\u677e\u7684\u77e5\u9053\uff0c\u662f\u6ca1\u6709\u8bef\u5dee\u7684\uff08R>=r\uff0c\u5982\u679c\u7b49\u4e8e\u90a3\u4e48\u80af\u5b9a\u5706\u5fc3\u662f\u540c\u4e00\u4e2a\u4e86\uff0c\u90a3\u4e48\u53ea\u8981\u62c6\u51fa\u4e09\u4e2a\u70b9\u5c31\u53ef\u4ee5\u505a\u5230\u96f6\u8bef\u5dee\uff09\n\n\u6211\u4eec\u5047\u8bbe\u62c6\u51fa\u7684\u76f8\u90bb\u4e24\u70b9\u5bf9\u5e94\u5c0f\u5706\u5706\u5fc3\u89d2\u4e3a$\\theta$,\u5bf9\u5e94\u5927\u5706$\\alpha$,\u5c0f\u5706\u534a\u5f84\u4e3a$r$\uff0c\u5927\u5706\u534a\u5f84\u4e3a$R$\n\n\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u6c42\u8bef\u5dee\u4e86\uff0c$d=(r-cos\\frac{\\theta}{2} r)-(R-cos\\frac{\\alpha}{2}*R)=(1-cos\\frac{\\theta}{2})*r-(1-cos\\frac{\\alpha}{2})*R$\n\n\u53c8\u56e0\u4e3a\u6211\u4eec\u6709\u8fd9\u4e48\u4e2a\u5f0f\u5b50$:$\n\n$$sin\\frac{\\theta}{2}*r=sin\\frac{\\alpha}{2}*R$$\n\n$$sin\\frac{\\alpha}{2}=sin\\frac{\\theta}{2}*\\frac{r}{R}$$\n\n$$cos\\frac{\\alpha}{2}=\\sqrt{(1-(sin\\frac{\\theta}{2}*\\frac{r}{R})^2)}$$\n\n\u7136\u540e\u4ee3\u5165\u4e0a\u9762\u6c42\u8bef\u5dee\u7684\u516c\u5f0f\u5373\u53ef\u77e5\u9053$\\theta$\u548c$r,R$\u7684\u5173\u7cfb\u4e86....\n\n$$\\sqrt{1-(sin\\frac{\\theta}{2}*\\frac{r}{R})^2}R-cos\\frac{\\theta}{2}*r<=0.005+R-r$$\n\n\u7136\u540e\u5de6\u53f3\u5e73\u65b9\uff0c\u6d88\u6765\u6d88\u53bb\uff0c$balabala$,\u6700\u540e\u53d1\u73b0$R$\u6839\u672c\u65e0\u6cd5\u786e\u5b9a\uff0c\u597d\u7684\uff0c\u606d\u559c\u4f60\u505a\u4e86\u4e00\u5806\u65e0\u7528\u529f...\u5982\u679c\u4f60\u80fd\u6c42\u51fa\u5177\u4f53\u5173\u7cfb\u5f53\u7136\u66f4\u597d\u5566\uff0c\u53ef\u662f\u6211\u4eec\u8981\u5c06\u968f\u673a\u5316\u7684\u601d\u60f3\u53d1\u626c\u5149\u5927\u554a\uff01\n\n\u53ef\u4ee5\u786e\u5b9a\u7684\u4e00\u70b9$:r<<R$\u65f6\u95f4\u9694\u5706\u5fc3\u89d2\u53ef\u4ee5\u53d6\u7684\u8f83\u5927\uff0c$r<R$\u5e76\u4e14\u63a5\u8fd1\u7684\u65f6\u5019\u53ef\u4ee5\u53d6\u7684\u8f83\u5927\n\n\u5728\u8fd9\u91cc\u60f3\u5230\u4e86\u4ec0\u4e48\u51fd\u6570\u6ca1\u6709\uff1f\u53d1\u73b0**\u5bf9\u52fe\u51fd\u6570**\u521a\u597d\u6ee1\u8db3\uff08\u5982\u679c\u6709\u66f4\u4f18\u7684\u51fd\u6570\u4e5f\u53ef\u4ee5\u63d0\u51fa\u6765\uff09\u3002\n\n\u5bf9\u52fe\u51fd\u6570\u521a\u597d\u53ef\u4ee5**\u6ee1\u8db3\u8fc7\u5c0f\u6216\u8005\u8fc7\u5927\u65f6\u51fd\u6570\u503c\u8f83\u5927**\uff0c\u800c\u4e2d\u95f4\u51fd\u6570\u6781\u503c\u70b9\u662f\u53ef\u4ee5\u6211\u4eec\u4eba\u4e3a\u6784\u9020\u7684\n\n\u90a3\u4e48\u6211\u4eec\u4e0d\u59a8\u5148\u6c42\u82e5\u5e72\u6b21\u70b9\u5bf9\u8ddd\u79bb\u6700\u5927\u503c\u4f5c\u4e3a\u6781\u503c\u70b9\uff08\u4e0d\u8981\u8fc7\u591a\u8fc7\u5c11\uff0c\u5426\u5219\u6c42\u5230\u6781\u5927\u6781\u5c0f\u503c\u90fd\u662f\u4e0d\u597d\u7684\uff0c\u53ef\u4ee5\u7ecf\u8fc7~~\u4e25\u5bc6\u7684~~\u8ba1\u7b97\u53d1\u73b0\u53d6\u5230**\u8ddd\u79bb\u4e2d\u4f4d\u6570**\u7684\u53ef\u80fd\u6027\u6700\u5927\uff0c\u591a\u597d\uff01\uff09\n\n\u53d6$n$\uff0c\u6216\u8005$n<<1$\u6b21\u6700\u5927\u503c\u5c31\u597d\uff0c\u5047\u8bbe\u6700\u5927\u503c\u4e3a$G$\uff0c$G$\u662f\u8ddd\u79bb\uff0c\u6240\u4ee5\u4ee4$G=G/2$\u6c42\u51fa\u6211\u4eec\u8981\u7684\u4e00\u4e2a\u4f2a\u534a\u5f84,$D=G^2$,\u90a3\u4e48$f(x)=x+\\frac{D}{x}$\n\n\u7b49\u7b49\uff01$G$\u5f88\u5927\u6216\u8005\u5f88\u5c0f\u4e0d\u5c31\u51fa\u4e86\u95ee\u9898\u4e48\uff1f\u90a3\u6211\u4eec\u628a\u5b83\u53d8\u5f97\u548c$G$\u65e0\u5173\u4e0d\u5c31\u884c\u4e86\u5417\uff0c\u5f53$x=G$\u7684\u65f6\u5019$f(x)=2*G$\u6700\u5c0f\uff0c\u8981\u8ba9\u4ed6\u4e3a$1$,\u6240\u4ee5\u6784\u9020\u7684\u51fd\u6570\u9664\u4ee5$2*G$\u5c31\u597d\u4e86\n\n$$f(x)=\\frac{x+\\frac{D}{x}}{2*G}$$\n\n\u4f46\u662f\u8fd9\u8fd8\u4e0d\u591f\u5b8c\u7f8e\uff0c\u56e0\u4e3a$x$\u592a\u5927\u592a\u5c0f\u90fd\u4f1a\u53d8\u5f97\u5f88\u5927\uff0c\u6c42\u5bfc\u540e$g(x)=1-\\frac{D}{x^2}$\u90a3\u4e48\u5f53$x->0$\u65f6\uff0c\u589e\u957f\u592a\u5feb\u4e86\uff0c\u53ef\u80fd\u5c31\u4f1a\u7cbe\u5ea6\u51fa\u95ee\u9898\u5462\uff08\u8bd5\u8fc7\uff0c\u5982\u679c\u4e0d\u505a\u5904\u7406\uff0c\u5927\u6570\u636e\u4f1a\u76f8\u5dee0.2\u5de6\u53f3\uff09\n\n\u8fd9\u91cc\u6700\u597d\u7684\u65b9\u6cd5\u8fd8\u662f\u52a0\u4e2a\u6307\u6570\uff0c\u8fd9\u6837\u7cbe\u5ea6\u5c31\u6709\u4fdd\u8bc1\u4e86\uff08\u81f3\u4e8e\u662f\u591a\u5c11\u81ea\u5df1\u5b9a\u5427\uff0c\u592a\u5c0f\u4f1a\u5bfc\u81f4\u65f6\u95f4\u6162\uff0c\u592a\u5927\u4e86\u6bd4\u59820.99\u4f1a\u5bfc\u81f4\u7cbe\u5ea6\u6709\u70b9\u8bef\u5dee\uff0c\u6700\u597d\u662f0.95,0.96\uff0c0.97\u5de6\u53f3\uff09\n\n\u90a3\u4e48\u62c6\u4e00\u4e2a\u534a\u5f84\u4e3a$r$\u7684\u5706\uff0c\u76f8\u90bb\u5706\u5fc3\u89d2\u5927\u6982\u5728$max(360*f(r)*acos(1-0.003/r)/PI,1.0)$\uff0c\u90a3\u4e48\u5c31\u662f\n\n$$360*f(r)*acos(1-0.003/r)/PI$$\n\n$$f(r)=pow((x+D/x)/G,0.97)$$\n\n\u52a0\u4e0a\u8fd9\u4e2a\u4f18\u5316\u5176\u5b9e\u5c31\u53ef\u4ee5\u8fc7\u4e86\uff0c\u800c\u4e14\u7cbe\u5ea6\u8bef\u5dee\u57280.01\u4ee5\u5185\u751a\u81f3\u66f4\u5c0f\uff0c\u4f46\u662f\u5982\u679c\u8981\u52a0\u5feb\u901f\u5ea6\u7684\u8bdd\u5c31\u8981\u727a\u7272\u4e00\u5b9a\u7684\u7cbe\u5ea6\uff0c\u4e0d\u80fd\u8ba9\u4f60\u517c\u5f97\u7684\u561b\uff01\n\n\u7136\u800c\u6211\u4eec\u8fd8\u6709\u4e2a\u53ef\u6015\u7684\u4f18\u5316\uff0c\u5728$n$\u5f88\u5927\u7684\u65f6\u5019\uff0c\u51e0\u4e4e\u4e0d\u4f1a\u9020\u6210\u727a\u7272\u7cbe\u5ea6\uff0c\u800c\u4e14\u53ef\u4ee5\u5e26\u6765**\u65f6\u95f4\u5feb1\u500d**\uff0c**\u4e3b\u8981\u662f\u5f88\u597d\u5199**\uff01\uff08\u4e0d\u7528\u90a3\u4e48\u591a\u7684\u5224\u65ad\uff09\n\n\u5047\u8bbe\u6211\u4eec\u5904\u7406\u51fa\u4e86$x,y$\u7684\u6700\u5927\u6700\u5c0f\u503c\u5206\u522b\u4e3a$minx,maxx,maxy,miny$,\u5c06\u5176\u770b\u6210\u4e00\u4e2a\u77e9\u5f62\uff0c\u77e9\u5f62\u4e2d\u70b9\u4e3a$((minx+maxx)/2,(miny+maxy)/2)$\u90a3\u4e48\u4e0d\u96be\u53d1\u73b0\u5176\u5b9e\u77e9\u5f62\u4e2d\u95f4\u5927\u90e8\u5206\u7684\u70b9\u662f\u80af\u5b9a\u4e0d\u4f1a\u5bf9\u7b54\u6848\u6709\u4efb\u4f55\u8d21\u732e\u7684\uff0c\u90a3\u4e48\u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5\u5220\u53bb\u90a3\u4e9b\u80af\u5b9a\u4e0d\u662f\u7684\u5462\uff1f\n\n\u90a3\u6211\u52a0\u4e00\u53e5\u8bdd\u5c31\u597d\u4e86\uff0c\u5982\u679c\u8981\u52a0\u5165\u7684\u70b9$(x,y)$\uff0c\u77e9\u5f62\u4e2d\u70b9\u4e3a$(px,py)$,\u5982\u679c$\\sqrt2*fabs(x-px)+eps<px-minx||\\sqrt2*fabs(y-py)+eps<py-miny$\u6211\u5c31\u4e0d\u8981$(x,y)$\u4e86\n\n\u8bc1\u660e\u5c31\u81ea\u5df1\u8bc1\u4e00\u4e0b\u5427\uff08\u53cd\u6b63\u6211\u628a\u6700\u5927\u7684\u70b9\u62ff\u6765\u6d4b\uff0c\u52a0\u4e0e\u4e0d\u52a0\u7cbe\u5ea6\u597d\u50cf\u5b8c\u5168\u76f8\u540c\u554a\uff09\n\n\u5173\u4e8e\u6700\u5c0f\u5706\u8986\u76d6\u5c31\u4e0d\u662f\u6b64\u9898\u89e3\u9700\u8981\u8bb2\u7684\u4e86\u5427\n\n\u8fd8\u6709\u5c31\u662f\u6ce8\u610f\u4e00\u4e0b\uff01$n$\u5f88\u5c0f\u7684\u65f6\u5019\uff0c$f$\u51fd\u6570\u56e0\u4e3a\u6781\u503c\u70b9\u53d6$n<<1$\u6b21\uff0c\u53ef\u80fd\u53d6\u5230\u4ec0\u4e48\u6781\u5927\u6781\u5c0f\u503c\u800c\u5bf9\u7cbe\u5ea6\u4ea7\u751f\u8f83\u5927\u7684\u5f71\u54cd....\uff08\u4e8b\u5b9e\u4e0a\u53ea\u8981$G$\u4e0d\u662f\u592a\u5c0f\uff0c\u592a\u5927\u7cbe\u5ea6\u5c31\u4e0d\u4f1a\u6709\u95ee\u9898\uff0c\u800c$n$\u5f88\u5c0f\u7684\u65f6\u5019\u5c31\u6b7b\u4e86\uff09\n\n\u4f46\u662f\u8fd8\u597d\u6b64\u9898\u6ca1\u6709\u5751\uff0c\u5982\u679c\u6709\u4e5f\u597d\u5904\u7406\uff0c\u624b\u52a8\u52a0\u4e2a\u4fee\u6b63\u5c31\u884c\u4e86\uff0c\u5177\u4f53\u600e\u4e48\u4fee\u4e0d\u9700\u8981\u8bf4\u5427....\u5f53$n<=10$\u65f6$f$\u51fd\u6570\u4e58\u4e00\u4e2a0.618\u5c31\u597d\u4e86(\u6ca1\u6709\u5b9e\u9645\u610f\u4e49\uff0c\u81ea\u5df1\u5b9a)\n\n\u4e0a\u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <ctime>\nusing namespace std;\nint n,m;\nconst double eps=1e-4,PI=3.1415926535897932384626433832795028841971;\nconst double inf=11234567890,W=1.41421356730950488;\nconst int N=1e7+5e6,M=50010;\nstruct point{\n    double x,y;\n    point(double a=0,double b=0){x=a;y=b;}\n}O,a[N];\ndouble G,D;\nstruct node{double x,y,r;}b[M];\ninline double sqr(double x){return x*x;}\ninline double max_(double a,double b){return (a>b?a:b);}\ninline double min_(double a,double b){return (a<b?a:b);}\ninline double fabs_(double x){return (x<0?-x:x);}\ninline double f(double x){return pow((x+D/x)*G,0.976);}\ndouble mix,mx,miy,my,px,py;\nvoid work(double x,double y,double r){\n    if(r<eps){a[++m]=point(x,y);return;}\n    double delta=max_(360*f(r)*acos(1-0.003/r)/PI,1.0);\n    for(int i=0;i<360;i+=delta){\n        double alpha=i*PI/180;\n        double X=x+r*cos(alpha),Y=y+r*sin(alpha);\n        if(fabs_(px-X)*W+eps<px-mix)continue;\n        if(fabs_(py-Y)*W+eps<py-miy)continue;\n        a[++m]=point(X,Y);\n    }\n}\ndouble R;\ninline double dist(point x,point y){\n    return sqrt(sqr(x.x-y.x)+sqr(x.y-y.y));\n}\ninline bool in(point x){\n    return dist(x,O)-R<eps;\n}\ninline void get(point x1,point x2,point x3){\n    double a,b,c,d,e,f;\n    a=x2.x-x1.x,b=x2.y-x1.y,c=x3.x-x2.x,d=x3.y-x2.y;\n    e=x2.x*x2.x+x2.y*x2.y-x1.x*x1.x-x1.y*x1.y;\n    f=x3.x*x3.x+x3.y*x3.y-x2.x*x2.x-x2.y*x2.y;\n    O.x=(f*b-e*d)/(c*b*2-a*d*2);\n    O.y=(a*f-e*c)/(a*d*2-b*c*2);\n    R=dist(O,x1);\n}\nint main(){\n    srand(time(NULL));\n    scanf(\"%d\",&n);mix=inf;miy=inf;mx=-inf;my=-inf;\n    for(int i=1;i<=n;++i){\n\t\tscanf(\"%lf%lf%lf\",&b[i].x,&b[i].y,&b[i].r);\n\t\tmix=min_(mix,b[i].x-b[i].r);mx=max_(mx,b[i].x+b[i].r);\n\t\tmiy=min_(miy,b[i].y-b[i].r);my=max_(my,b[i].y+b[i].r);\n\t}px=(mix+mx)/2;py=(miy+my)/2;\n    int A,B,maxn;maxn=n<=100?(n>>1):n<<1;\n    for(int i=1;i<=maxn;++i){\n        A=rand()%n+1;B=rand()%n+1;\n        G=max_(G,sqrt(sqr(b[A].x-b[B].x)+sqr(b[A].y-b[B].y))+b[A].r+b[B].r);\n    }G/=2;D=sqr(G);G*=2;G=1/G;\n    for(int i=1;i<=n;++i)work(b[i].x,b[i].y,b[i].r);\n    random_shuffle(a+1,a+1+m);\n    O=a[1];R=0;\n    for(int i=2;i<=m;++i)\n        if(!in(a[i])){\n            O=a[i];R=0;\n            for(int j=1;j<i;++j)\n                if(!in(a[j])){\n                    O.x=(a[i].x+a[j].x)/2;O.y=(a[i].y+a[j].y)/2;\n                    R=dist(O,a[i]);\n                    for(int k=1;k<j;++k)\n                        if(!in(a[k]))get(a[i],a[j],a[k]);\n                }\n        }\n    printf(\"%.2lf %.2lf %.2lf\\n\",O.x,O.y,R);\n    return 0;\n}\n\n```\n\u7ec8\u4e8e\u5199\u5b8c\u4e86\uff0c\u5c31\u6015\u6ca1\u4eba\u770b\u554aQAQ\n\nPS:\u4e3a\u4e86\u505a\u7cbe\u5ea6\uff0c\u901f\u5ea6\u5b9e\u9a8c\u4ea4\u4e86\u597d\u591a\u6b21\u554a\n\nupd:\u5982\u679c\u975e\u8981\u7ed9\u6211\u5361\u7cbe\u5ea6\uff0c\u4e5f\u6ca1\u95ee\u9898\uff0c\u4e0b\u9762\u662f\u4fee\u6b63\u4ee3\u7801\uff08r<=100000\u81ea\u6d4b\u53ef\u4ee5\u7cbe\u5ea6\u53ef\u4ee5\u8fbe\u52300.14,\u5982\u679c\u8981\u5361\u52300.02\u53ef\u80fd\u65f6\u95f4\u4f1a\u6162\u5f88\u591a\uff09\n\n```cpp\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <ctime>\nusing namespace std;\nint n,m;\nconst double eps=1e-4,PI=3.1415926535897932384626433832795028841971,E=1.217;\nconst double inf=11234567890,W=1.41421356730950488;\nconst int N=1e7+5e6,M=50010;\nstruct point{\n    double x,y;\n    point(double a=0,double b=0){x=a;y=b;}\n}O,a[N];\ndouble G,D,Z,K;\nstruct node{double x,y,r;}b[M];\ninline double sqr(double x){return x*x;}\ninline double max_(double a,double b){return (a>b?a:b);}\ninline double min_(double a,double b){return (a<b?a:b);}\ninline double fabs_(double x){return (x<0?-x:x);}\ninline double f(double x){return Z*pow((x+D/x)*G,K);}\ndouble mix,mx,miy,my,px,py;\nvoid work(double x,double y,double r){\n    if(r<eps){a[++m]=point(x,y);return;}\n    double delta=max_(360*f(r)*acos(1-0.003/r)/PI,1.0);\n    delta=min_(delta,120);\n    for(int i=0;i<360;i+=delta){\n        double alpha=i*PI/180;\n        double X=x+r*cos(alpha),Y=y+r*sin(alpha);\n        if(fabs_(px-X)*W+eps<px-mix)continue;\n        if(fabs_(py-Y)*W+eps<py-miy)continue;\n        a[++m]=point(X,Y);\n    }\n}\ndouble R;\ninline double dist(point x,point y){\n    return sqrt(sqr(x.x-y.x)+sqr(x.y-y.y));\n}\ninline bool in(point x){\n    return dist(x,O)-R<eps;\n}\ninline void get(point x1,point x2,point x3){\n    double a,b,c,d,e,f;\n    a=x2.x-x1.x,b=x2.y-x1.y,c=x3.x-x2.x,d=x3.y-x2.y;\n    e=x2.x*x2.x+x2.y*x2.y-x1.x*x1.x-x1.y*x1.y;\n    f=x3.x*x3.x+x3.y*x3.y-x2.x*x2.x-x2.y*x2.y;\n    O.x=(f*b-e*d)/(c*b*2-a*d*2);\n    O.y=(a*f-e*c)/(a*d*2-b*c*2);\n    R=dist(O,x1);\n}\nint main(){\n\tfreopen(\"0.in\",\"r\",stdin);\n    srand(time(NULL));\n    scanf(\"%d\",&n);mix=inf;miy=inf;mx=-inf;my=-inf;\n    for(int i=1;i<=n;++i){\n        scanf(\"%lf%lf%lf\",&b[i].x,&b[i].y,&b[i].r);\n        mix=min_(mix,b[i].x-b[i].r);mx=max_(mx,b[i].x+b[i].r);\n        miy=min_(miy,b[i].y-b[i].r);my=max_(my,b[i].y+b[i].r);\n    }px=(mix+mx)/2;py=(miy+my)/2;\n    int A,B,maxn;maxn=n<=100?(n>>1):n<<1;\n    for(int i=1;i<=maxn;++i){\n        A=rand()%n+1;B=rand()%n+1;\n        G=max_(G,sqrt(sqr(b[A].x-b[B].x)+sqr(b[A].y-b[B].y))+b[A].r+b[B].r);\n    }\n    Z=max_(max_(-mix,mx),max_(-miy,my));\n\tZ=0.2+pow(E,-pow(Z,0.23)*0.7)*0.8;K=pow(Z,0.9)*0.4+0.6;G=pow(G,K);\n\tG/=2;D=sqr(G);G*=2;G=1/G;\n    for(int i=1;i<=n;++i)work(b[i].x,b[i].y,b[i].r);\n    random_shuffle(a+1,a+1+m);\n    O=a[1];R=0;\n    for(int i=2;i<=m;++i)\n        if(!in(a[i])){\n            O=a[i];R=0;\n            for(int j=1;j<i;++j)\n                if(!in(a[j])){\n                    O.x=(a[i].x+a[j].x)/2;O.y=(a[i].y+a[j].y)/2;\n                    R=dist(O,a[i]);\n                    for(int k=1;k<j;++k)\n                        if(!in(a[k]))get(a[i],a[j],a[k]);\n                }\n        }\n    printf(\"%.5lf %.5lf %.5lf\\n\",O.x,O.y,R);\n    return 0;\n}\n```\n",
        "postTime": 1552277132,
        "uid": 54113,
        "name": "ecnerwaIa",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5252 \u3010[LnOI2019]\u4e1c\u4eac\u590f\u65e5\u76f8\u4f1a\u3011"
    },
    {
        "content": "upd:\u65e2\u7136\u5df2\u7ecf\u51b3\u5b9a\u7528\u89e3\u6790\u51e0\u4f55\u66b4\u529b\u6c42\u4e86\uff0c\u5c31\u66b4\u529b\u5230\u5e95\u5427QWQ\n\n~~\u4ee5\u4e0b\u662f\u5e9f\u8bdd~~\n\n\u53bb\u5e74\u6bd4\u8d5b\u65f6\u505a\u4e86\u8fd9\u9053\u9898\uff0c\u5199\u6a21\u62df\u9000\u706b\u88ab\u5361\u7cbe\u5ea6\uff0c\u53ea\u670930\u5206\n\n\u5f53\u65f6\u5c31\u60f3\u8bd5\u8bd5\u7528\u6700\u5c0f\u8986\u76d6\u5706\u7684\u601d\u8def\uff0c\u6bcf\u4e00\u6b65\u7528\u89e3\u6790\u5f0f\u76f4\u63a5\u6c42\u5706\u7684\u5706\u5fc3\u5750\u6807\u548c\u534a\u5f84\n\n\u7136\u540e\u6211\u60f3\u4e86\u4e00\u4e0b\uff0c\u4e00\u822c\u60c5\u51b5\u9700\u8981\u6c423\u6761\u53cc\u66f2\u7ebf\u7684\u4ea4\u70b9\uff08\u6839\u636e\u6027\u8d28\uff0c\u5e94\u8be5\u81f3\u5c11\u6709\u4e00\u4e2a\u516c\u5171\u4ea4\u70b9\uff09\uff0c\u4e5f\u5c31\u662f\u89e3\u4e8c\u5143\u4e8c\u6b21\u65b9\u7a0b\uff0c\u800c\u4e14\u6d88\u5143\u5f88\u9ebb\u70e6\uff0c\u5c31\u653e\u5f03\u4e86\n\n\u4eca\u5e74\u7a81\u7136\u5fc3\u8840\u6765\u6f6e\uff0c\u4fbf\u5c1d\u8bd5\u6c42\u4e86\u4e00\u4e0b\uff0c\u53d1\u73b0\u5e76\u6ca1\u6709\u90a3\u4e48\u590d\u6742\uff0c\u5c31\u7528\u65b0\u7684\u505a\u6cd5A\u4e86\u8fd9\u9053\u9898\uff0c\u800c\u4e14\u62a2\u4e86\u6700\u4f18\u89e3(2020-06-20 10:32:54 69ms)\n\n\u4e0b\u9762\u662f\u5177\u4f53\u601d\u8def\n\n# \u57fa\u672c\u601d\u8def\n\n\u6309\u7167\u70b9\u7684\u6700\u5c0f\u5706\u8986\u76d6\u7684\u505a\u6cd5\u6c42\u8fd9\u4e9b\u5706\u7684\u6700\u5c0f\u5706\u8986\u76d6\uff0c\u4e5f\u5c31\u662f[P1742](https://www.luogu.com.cn/problem/P1742)\n\n\u6700\u5c0f\u5706\u8986\u76d6\uff1a\u7528\u7684\u968f\u673a\u589e\u91cf\u6cd5\uff0c\u8fdb\u884c$n$\u6b65\uff0c\u6bcf\u4e00\u6b65\u52a0\u5165\u4e00\u4e2a\u70b9\u3002\u5982\u679c\u8fd9\u4e2a\u70b9\u5728\u4e4b\u524d$i-1$\u4e2a\u70b9\u7684\u6700\u5c0f\u8986\u76d6\u5706\u5185\u90e8\uff0c\u90a3\u4e48\u5c31\u8df3\u8fc7\u3002\u5426\u5219\u8fd9\u4e2a\u70b9\u5fc5\u5b9a\u5728\u524d$i$\u4e2a\u70b9\u7684\u6700\u5c0f\u8986\u76d6\u5706\u4e0a\uff0c\u679a\u4e3e\u4e4b\u524d$i-1$\u4e2a\u70b9\u7ec4\u6210\u7684\u70b9\u5bf9\u5373\u53ef\n\n\u5982\u679c\u628a\u4e0a\u9762\u7684\u201c\u70b9\u201d\u6362\u6210\u201c\u5706\u201d\uff0c\u4e5f\u6210\u7acb\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u7c7b\u4f3c\u7684\u601d\u8def\u505a\u8fd9\u9053\u9898\n\n\u590d\u6742\u5ea6\u548c\u70b9\u7684\u6700\u5c0f\u8986\u76d6\u5706\u76f8\u540c\uff0c\u53c2\u8003\u90a3\u9053\u9898\u7684\u8bc1\u660e\u5373\u53ef\uff08\u5e38\u6570\u5927\u4e00\u4e9b\uff09\n\n\u53e6\u5916\uff0c\u5728\u6c42\u4ea4\u70b9\u65f6\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u7279\u6b8a\u7684\u6027\u8d28\uff0c\u5c31\u80fd\u7b80\u5316\u8ba1\u7b97\n\n# \u5177\u4f53\u505a\u6cd5\n\n\u4ee5\u4e0b\u8bbe\u4e09\u4e2a\u5706\u5206\u522b\u4e3a\n\n$O_1(x_1,y_1),r_1$\n\n$O_2(x_2,y_2),r_2$\n\n$O_3(x_3,y_3),r_3$\n\n## \u6c42\u4e00\u4e2a\u5706\u7684\u6700\u5c0f\u5706\u8986\u76d6\n\n\u5f88\u660e\u663e\uff0c\u53d6\u8fd9\u4e2a\u5706\u672c\u8eab\u5c31\u884c\n\n## \u6c42\u4e24\u4e2a\u5706\u7684\u6700\u5c0f\u5706\u8986\u76d6\n\n(\u4e24\u4e2a\u5706\u7684\u5706\u5fc3\u5206\u522b\u662f$O_1$\u548c$O_2$)\n\n\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5\n\n#### \u7b2c\u4e00\u79cd\uff1a\u4e24\u5706\u534a\u5f84\u76f8\u7b49\n\n\u90a3\u4e48\u5706\u5fc3\u5c31\u662f\u4e24\u5706\u5706\u5fc3\u8fde\u7ebf\u7684\u4e2d\u70b9\uff0c\u534a\u5f84\u5c31\u662f\u5706\u5fc3\u8ddd\u79bb\u7684\u4e00\u534a\u52a0\u4e0a\u4e00\u4e2a\u5706\u7684\u534a\u5f84\n\n\u8868\u793a\u51fa\u6765\u5c31\u662f\uff1a\n\n$O(\\frac{x_1+x_2}{2},\\frac{y_1+y_2}{2}),r=\\frac{1}{2}|O_1O_2|+r_1$\n\n\uff08\u56fe\u7565\uff0c\u5e94\u8be5\u5f88\u597d\u753b\uff09\n\n#### \u7b2c\u4e8c\u79cd\uff1a\u4e24\u5706\u534a\u5f84\u4e0d\u76f8\u7b49\n\n\u8fd9\u65f6\u5019\u5706\u5fc3\u5230\u4e24\u5706\u7684\u8ddd\u79bb\u4e4b\u5dee\u5c31\u662f\u534a\u5f84\u4e4b\u5dee\uff0c\u800c\u4e14\u5706\u5fc3\u66f4\u9760\u8fd1\u5927\u5706\n\n\u4e5f\u5c31\u662f\u8fd9\u6837\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/egcvfmql.png)\n\n\u5706\u5fc3\u5230\u4e2d\u70b9\u7684\u8ddd\u79bb\u5c31\u662f\u534a\u5f84\u5dee\u7684\u4e00\u534a\n\n\u5148\u628a\u4e2d\u70b9\u5750\u6807\u6c42\u51fa\u6765\uff0c\u518d\u504f\u79fb\u4e00\u4e0b\u5c31\u884c\n\n\u534a\u5f84\u5c31\u7528\u5230\u67d0\u4e2a\u5706\u5fc3\u7684\u8ddd\u79bb\u52a0\u4e0a\u90a3\u4e2a\u5706\u7684\u534a\u5f84\n\n\u8868\u793a\u51fa\u6765\u5c31\u662f\n\n$M(\\frac{x_1+x_2}{2},\\frac{y_1+y_2}{2}),\\vec{MO}=\\frac{(r_2-r_1)\\vec{O_1O_2}}{2|\\vec{O_1O_2}|},r=|OO_1|+r_1$\n\n\n## \u6c42\u4e09\u4e2a\u5706\u7684\u6700\u5c0f\u5706\u8986\u76d6\n\n\u5982\u679c\u67d0\u4e24\u4e2a\u5706\u662f\u5305\u542b\u5173\u7cfb\uff0c\u90a3\u4e48\u6c42\u4e24\u4e2a\u5706\u7684\u6700\u5c0f\u5706\u8986\u76d6\u5373\u53ef\uff0c\u800c\u4e14\u7b97\u6cd5\u53ef\u4ee5\u4fdd\u8bc1\u4e0d\u4f1a\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\n\n\u7406\u8bba\u4e0a\u8981\u5206\u4e09\u79cd\u60c5\u51b5\uff0c\u4f46\u5b9e\u9645\u6709\u4e24\u79cd\u53ef\u4ee5\u5408\u5e76\n\n#### \u7b2c\u4e00\u79cd\uff1a\u4e09\u4e2a\u5706\u534a\u5f84\u5747\u76f8\u7b49\n\n\u8fd9\u65f6\u5019\u6c42\u4e09\u89d2\u5f62\u7684\u5916\u63a5\u5706\uff0c\u628a\u534a\u5f84\u52a0\u4e0a\u67d0\u4e2a\u5706\u7684\u534a\u5f84\u5373\u53ef\n\n\u6c42\u5916\u63a5\u5706\u7684\u529e\u6cd5\u53ef\u4ee5\u53c2\u8003\u6700\u5c0f\u5706\u8986\u76d6\u7684\u9898\u89e3\n\n\u53ef\u4ee5\u53d1\u73b0\u8fd9\u6837\u7684\u5706\u6070\u597d\u4e0e\u8fd9\u4e09\u4e2a\u5706\u5747\u5185\u5207\n\n\u4e5f\u5c31\u662f\u8fd9\u6837\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/xksxv1rf.png)\n\n#### \u7b2c\u4e8c\u79cd\uff1a\u5b58\u5728\u4e24\u4e2a\u5706\u534a\u5f84\u4e0d\u76f8\u7b49\n\n\u8fd9\u65f6\u5019\u5bf9\u4e8e\u67d0\u4e24\u4e2a\u5706\u800c\u8a00\uff0c\u6ee1\u8db3\u6761\u4ef6\u7684\u5706\u7684\u5706\u5fc3\u5728\u4e00\u6761\u76f4\u7ebf\u6216\u53cc\u66f2\u7ebf\u4e0a\n\n\u65b9\u7a0b\u5c31\u662f$\\sqrt{(x-x_1)^2+(y-y_1)^2}+r_1=\\sqrt{(x-x_2)^2+(y-y_2)^2}+r_2$\n\n\u5982\u679c\u4e24\u5706\u534a\u5f84\u76f8\u7b49\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65b9\u7a0b\u8868\u793a\u4e2d\u5782\u7ebf\uff0c\u5426\u5219\u5c31\u8868\u793a\u53cc\u66f2\u7ebf\uff08\u5df2\u7ecf\u9650\u5236\u4efb\u610f\u4e24\u5706\u4e0d\u80fd\u662f\u5305\u542b\u5173\u7cfb\u4e86\uff09\n\n\u753b\u51fa\u6765\u5927\u6982\u8fd9\u6837\uff08\u7b2c\u4e00\u4e2a\u662f\u5b58\u5728\u4e24\u5706\u534a\u5f84\u76f8\u7b49\u7684\u60c5\u51b5\uff09\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/p59jfn3a.png)\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/2r9s4pri.png)\n\n\u6ce8\u610f\u56fe\u4e2d\u7684\u6df1\u84dd\u8272\u76f4\u7ebf\uff0c\u5b83\u6709\u7279\u6b8a\u542b\u4e49\uff0c\u4e0b\u9762\u4f1a\u8fdb\u884c\u53d9\u8ff0\n\n\u9996\u5148\uff0c\u8bbe$A_i=(x-x_i)^2+(y-y_i)^2$\n\n\u90a3\u4e48\u65b9\u7a0b\u53ef\u4ee5\u8868\u793a\u4e3a$\\sqrt{A_1}+r_1=\\sqrt{A_2}+r_2$\n\n\u53ef\u4ee5\u5316\u4e3a$\\sqrt{A_1}-\\sqrt{A_2}=r_2-r_1$\n\n\u5206\u5b50\u6709\u7406\u5316\uff0c\u518d\u53d6\u5012\u6570\uff0c\u5f97$\\sqrt{A_1}+\\sqrt{A_2}=\\frac{A_1-A_2}{r_2-r_1}$\n\n\u76f8\u52a0\uff0c\u5f97$2\\sqrt{A_1}=\\frac{A_1-A_2}{r_2-r_1}+r_2-r_1$\n\n\u5148\u4e0d\u8981\u7740\u6025\u5e73\u65b9\uff0c\u518d\u5199\u4e00\u4e2a\u5f0f\u5b50\n\n$2\\sqrt{A_1}=\\frac{A_1-A_3}{r_3-r_1}+r_3-r_1$\n\n\u6240\u4ee5$\\frac{A_1-A_2}{r_2-r_1}+r_2-r_1=\\frac{A_1-A_3}{r_3-r_1}+r_3-r_1$\n\n\u53ef\u4ee5\u770b\u51fa\u8fd9\u662f\u4e00\u6b21\u65b9\u7a0b\uff0c\u4e5f\u5c31\u662f\u56fe\u4e2d\u7684\u6df1\u84dd\u8272\u76f4\u7ebf\n\n\u7ee7\u7eed\u5316\u7b80\uff0c\u8bbe\u76f4\u7ebf\u65b9\u7a0b\u4e3a$ax+by+c=0$\uff0c\u90a3\u4e48\n\n$a=\\left|\\begin{array}{cccc} \n    x_1 &    r_1    & 1 \\\\ \n    x_2 &    r_2   & 1\\\\ \n    x_3 & r_3 & 1 \n\\end{array}\\right|$\n\n$b=\\left|\\begin{array}{cccc} \n    y_1 &    r_1    & 1 \\\\ \n    y_2 &    r_2   & 1\\\\ \n    y_3 & r_3 & 1 \n\\end{array}\\right|$\n\n$c=-\\frac{1}{2}\\left|\\begin{array}{cccc} \n    x_1^2+y_1^2-r_1^2 &    r_1    & 1 \\\\ \n    x_2^2+y_2^2-r_2^2 &    r_2   & 1\\\\ \n    x_3^2+y_3^2-r_3^2 & r_3 & 1 \n\\end{array}\\right|$\n\n\u8fd9\u6837\uff0c\u6240\u6c42\u5706\u7684\u5706\u5fc3\u4e5f\u5728\u8fd9\u6761\u76f4\u7ebf\u4e0a\n\n\u63a5\u4e0b\u6765\u628a\u539f\u6765\u53cc\u66f2\u7ebf\u7684\u65b9\u7a0b\u4e5f\u5316\u7b80\u4e00\u4e0b\uff08\u5e73\u65b9\u518d\u6574\u7406\u5c31\u884c\uff0c\u4f46\u6574\u7406\u5f88\u9ebb\u70e6\uff09\n\n\u8bbe\u53cc\u66f2\u7ebf\u7684\u65b9\u7a0b\u662f$Ax^2+Bxy+Cy^2+Dx+Ey+F=0$\n\n$A=4[(x_1-x_2)^2+(r_1-r_2)^2]$\n\n$B=8(x_1-x_2)(y_1-y_2)$\n\n$C=4[(y_1-y_2)^2+(r_1-r_2)^2]$\n\n$D=4[(x_1+x_2)(r_1-r_2)^2-(x_1-x_2)(x_1^2+y_1^2-x_2^2-y_2^2)]$\n\n$E=4[(y_1+y_2)(r_1-r_2)^2-(y_1-y_2)(x_1^2+y_1^2-x_2^2-y_2^2)]$\n\n$F=(x_1^2+y_1^2-x_2^2-y_2^2)^2-2(x_1^2+y_1^2+x_2^2+y_2^2)(r_1-r_2)^2+(r_1-r_2)^4$\n\n\u53ef\u4ee5\u4ee3\u5165\u6d88\u5143\u89e3\u65b9\u7a0b\u7ec4\u6c42\u5750\u6807\n\n\u7528\u76f4\u7ebf\u65b9\u7a0b\u6d88\u5143\u540e\u5f97\u5230\u4e00\u4e2a\u4e8c\u6b21\u65b9\u7a0b\uff0c\u7528$x=\\frac{-b\\pm\\sqrt{b^2-4ac}}{2a}$\u6c42\u6839\uff0c\u518d\u5e26\u5165\u76f4\u7ebf\u65b9\u7a0b\u6c42\u51fa\u53e6\u4e00\u4e2a\u5750\u6807\u5c31\u884c\n\n\u6ce8\u610f\u76f4\u7ebf\u65b9\u7a0b\u7684\u7cfb\u6570\u53ef\u80fd\u4e3a0\uff0c\u9700\u8981\u5224\u65ad\u4e00\u4e0b\n\n\u8fd9\u65f6\u4f1a\u53d1\u73b0\u6709\u4e24\u4e2a\u89e3\uff0c\u539f\u56e0\u5c31\u662f\u5e73\u65b9\u5316\u7b80\u65f6\u51fa\u73b0\u4e86\u589e\u6839\n\n\u53e6\u4e00\u4e2a\u89e3\u6070\u597d\u662f\u4e0e\u4e09\u4e2a\u5706\u5206\u522b\u5916\u5207\u7684\u5706\u7684\u5706\u5fc3\n\n\u4f46\u6211\u4eec\u9700\u8981\u9009\u51fa\u5176\u4e2d\u4e00\u4e2a\uff0c\u8fd9\u65f6\u8ba1\u7b97\u5706\u5fc3\u5230\u4e24\u4e2a\u70b9\u7684\u8ddd\u79bb\uff0c\u6bd4\u8f83\u5927\u5c0f\u5173\u7cfb\u5c31\u80fd\u786e\u5b9a\u8fd9\u4e2a\u6839\u662f\u4e0d\u662f\u9700\u8981\u7684\u70b9\uff08\u76ee\u6807\u70b9\u8ddd\u79bb\u8f83\u5927\u7684\u5706\u66f4\u8fdc\uff09\n\n\u8fd9\u6837\u6c42\u51fa\u6765\u7684\u5750\u6807\u548c\u534a\u5f84\u7406\u8bba\u4e0a\u5c31\u6ca1\u6709\u4efb\u4f55\u8bef\u5dee\uff08\u4f46\u4f1a\u53d7\u8ba1\u7b97\u673a\u7cbe\u5ea6\u9650\u5236\uff09\n\n### \u66b4\u529b\u89e3\u65b9\u7a0b\n\n~~\u66b4\u529b\u8981\u5f7b\u5e95~~\n\n\u4e3a\u4e86\u9632\u6b62\u6df7\u6dc6\uff0c\u4ee4\n\n$A=\\left|\\begin{array}{cccc} \n    x_1 &    r_1    & 1 \\\\ \n    x_2 &    r_2   & 1\\\\ \n    x_3 & r_3 & 1 \n\\end{array}\\right|$\n\n$B=\\left|\\begin{array}{cccc} \n    y_1 &    r_1    & 1 \\\\ \n    y_2 &    r_2   & 1\\\\ \n    y_3 & r_3 & 1 \n\\end{array}\\right|$\n\n\u8fc7\u7a0b\u5f88\u7e41\u7410\uff0c\u53ea\u8bf4\u4e00\u4e0b\u7b80\u5355\u601d\u8def\u548c\u89e3\u51fa\u7684\u7ed3\u679c\uff0c\u5177\u4f53\u8fc7\u7a0b\u5168\u90e8\u7701\u7565\n\n~~\u800c\u4e14\u5927\u90e8\u5206\u89e3\u6790\u5f0f\u6211\u5e76\u6ca1\u6709\u5316\u7b80\uff0c\u53ea\u662f\u731c\u7684\u7ed3\u8bba\uff0c\u4f46\u5e94\u8be5\u662f\u5bf9\u7684~~\n\n\u5982\u679c\u624b\u52a8\u628a\u7cfb\u6570\u4ee3\u8fdb\u53bb\uff0c\u4f1a\u5f97\u5230\u4e00\u4e2a\u4e00\u5143\u4e8c\u6b21\u65b9\u7a0b\n\n~~\u89e3\u65b9\u7a0b\u5373\u53ef~~\u6ca1\u8fd9\u4e48\u7b80\u5355\n\n\u4ee5\u4e0b\u5047\u8bbe\u6d88\u53bb\u7684\u662f$y$\n\n\u9996\u5148\u5316\u7b80$x^2$\u7684\u7cfb\u6570\n\n\u901a\u8fc7\u5316\u7b80\uff0c\u53ef\u4ee5\u5f97\u5230$4(r_1-r_2)^2(T^2-a^2-b^2)$\n\n\u5176\u4e2d$T=\\left|\\begin{array}{cccc} \n    x_1 &    y_1   & 1\\\\ \n    x_2 &    y_2   & 1\\\\ \n    x_3 &    y_3   & 1 \n\\end{array}\\right|$\n\n\u53ef\u4ee5\u60f3\u5230\uff0c$(r_1-r_2)^2$\u53ef\u4ee5\u6d88\u6389\uff0c\u5426\u5219\u4ea4\u6362\u4e24\u4e2a\u70b9\u7684\u987a\u5e8f\uff0c\u7ed3\u679c\u5c31\u4f1a\u4e0d\u540c\n\n\u7136\u540e\u5316\u7b80$x$\u7684\u7cfb\u6570\n\n\u660e\u786e\u4e86\u53d8\u5f62\u7684\u65b9\u5411\u5c31\u4f1a\u7b80\u5355\u4e00\u70b9\uff0c\u53ef\u4ee5\u5148\u628a\u4e0d\u542b$(r_1-r_2)^2$\u7684\u9879\u5408\u5e76\uff0c\u7136\u540e\u518d\u548c\u5269\u4f59\u90e8\u5206\u5408\u5e76\uff0c\u800c\u4e14\u7ed3\u679c\u5e94\u8be5\u662f\u4ea4\u6362\u4efb\u610f\u4e24\u4e2a\u70b9\u540e\u4fdd\u6301\u4e0d\u53d8\u7684\uff08\u4e5f\u5c31\u662f\u6709\u5bf9\u79f0\u6027\uff09\n\n\u7ed3\u679c\u662f$4(r_1-r_2)^2(x_1m_1n_1+x_2m_2n_2+x_3m_3n_3)$\n\n\u5176\u4e2d$m_1=[(x_2-x_3)^2+(y_2-y_3)^2-(r_2-r_3)^2]$\n\n$n_1=[(x_1-x_2)(x_3-x_1)+(y_1-y_2)(y_3-y_1)-(r_1-r_2)(r_3-r_1)]$\n\n$m_2,n_2,m_3,n_3$\u7c7b\u4f3c\n\n\u63a5\u4e0b\u6765\u4f3c\u4e4e\u8981\u6c42\u5e38\u6570\u9879\u7684\u7cfb\u6570\n\n\u4f46\u662f\u8003\u8651\u4e00\u4e0b\uff0c\u5c31\u80fd\u627e\u5230\u66f4\u7b80\u4fbf\u7684\u65b9\u6cd5\n\n\u8003\u8651\u4e8c\u6b21\u65b9\u7a0b\u6c42\u6839\u65b9\u7a0b\uff1a\n\n$x=\\frac{-b\\pm\\sqrt{b^2-4ac}}{2a}$\n\n\u6c42$b^2-4ac$\u5c31\u884c\uff08\u770b\u8d77\u6765\u590d\u6742\uff0c\u5b9e\u9645\u4e0a\u6bd4\u5316\u7b80\u7cfb\u6570\u518d\u4e58\u8d77\u6765\u8981\u7b80\u5355\uff09\n\n\u6839\u636e\u524d\u9762\u7684\u7ed3\u679c\uff0c\u53ef\u4ee5\u6c42\u51fa\u4e24\u4e2a\u89e3\u5bf9\u5e94\u5706\u7684\u5706\u5fc3\u8fde\u7ebf\u4e2d\u70b9\u7684\u5750\u6807\uff0c\u800c\u4e24\u4e2a\u89e3\u5219\u662f\u8fd9\u4e2a\u70b9\u5728\u76f4\u7ebf\u4e0a\u79fb\u52a8\u4e86\u4e00\u6bb5\u8ddd\u79bb\n\n\u53ef\u4ee5\u60f3\u5230\u5bf9\u4e8e$x$\u548c$y$\u7684\u65b9\u7a0b\uff0c\u540e\u9762$\\pm\\sqrt{b^2-4ac}$\u9879\u5206\u522b\u542b\u6709\u56e0\u5b50$B$\u548c$A$\uff0c\u5e76\u4e14\u5747\u542b$(r_1-r_2)^2$\u56e0\u5b50\n\n\u6309\u7167\u4e0a\u9762\u7684\u601d\u8def\u5316\u7b80\u5373\u53ef\uff08\u6700\u597d\u5148\u6d88\u6389\u56e0\u5b50$A$\u6216$B$\uff0c\u8fd9\u6837\u8f83\u4e3a\u7b80\u5355\uff09\n\n\u53ef\u4ee5\u5f97\u5230$b^2-4ac=16B^2m_1m_2m_3(r_1-r_2)^2$\uff08\u5bf9\u4e8e$x$\uff09\n\n\u8868\u793a\u51fa\u6765\u7684\u65f6\u5019\uff0c\u5e94\u8be5\u662f\u4e00\u4e2a$\\pm$\uff0c\u4e00\u4e2a$\\mp$\n\n\u53e6\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u4f55\u786e\u5b9a\u7b26\u53f7\uff1f\n\n\u53ef\u4ee5\u628a\u534a\u5f84\u4e5f\u66b4\u529b\u6c42\u51fa\u6765\uff0c\u6c42\u7684\u65f6\u5019\u5c31\u4f1a\u53d1\u73b0\u6839\u53f7\u9650\u5b9a\u4e86\u4ee3\u5165\u7684$\\pm$\u5e94\u8be5\u53d6\u54ea\u4e00\u4e2a\uff08\u6c42\u51fa\u7684\u7ed3\u679c\u5e94\u5f53\u5bf9\u79f0\uff09\n\n\uff08\u7b97\u5230\u6700\u540e\u6211\u6ca1\u8010\u5fc3\u5316\u7b80\u4e86\uff0c\u5c31\u6839\u636e\u5f0f\u5b50\u731c\u4e86\u51e0\u4e2a\u7ed3\u8bba\uff0c\u4ee3\u6570\u68c0\u9a8c\u4e86\u4e00\u4e0b\uff09\n\n\u6700\u7ec8\u7ed3\u679c\uff1a\n\n$(\\frac{U(x_1,x_2,x_3)+B\\sqrt{\\Delta}}{U(1,1,1)},\\frac{U(y_1,y_2,y_3)-A\\sqrt{\\Delta}}{U(1,1,1)}),R=\\frac{U(r_1,r_2,r_3)-T\\sqrt{\\Delta}}{U(1,1,1)}$\n\n\u8981\u6c42$T>0$\u3002\u5982\u679c$T=0$\uff0c\u5219\u4e09\u70b9\u5171\u7ebf\u3002\u5982\u679c$T<0$\uff0c\u90a3\u4e48\u4efb\u610f\u4ea4\u6362\u4e00\u5bf9\u70b9\u540e\u518d\u7b97\u5373\u53ef\uff0c\u6216\u8005\u6539\u53d8\u7b26\u53f7\u4e5f\u884c\n\n\u53ef\u4ee5\u770b\u51fa\uff0c\u5bf9\u4e8e\u534a\u5f84\u4e24\u4e24\u76f8\u7b49\u7684\u60c5\u51b5\u4e5f\u9002\u7528\n\n\u8fd9\u6837\u7406\u8bba\u4e0a\u53ef\u4ee5\u8fd0\u884c\u5f97\u5f88\u5feb\uff08\u7528\u4e2d\u95f4\u53d8\u91cf\u4fdd\u7559\u76f8\u540c\u7684\u503c\uff0c\u6bcf\u6b21\u8ba1\u7b97\u53ea\u6709\u4e00\u6b21\u5f00\u6839\u53f7\uff09\uff0c\u800c\u4e14\u53ef\u4ee5\u7528\u4e00\u4e9b\u7279\u6b8a\u65b9\u6cd5\u505a\u5230\u4efb\u610f\u7cbe\u5ea6\n\n\u4f46\u6d4b\u8bd5\u65f6\u597d\u50cf\u8bc4\u6d4b\u673a\u6027\u80fd\u4e0d\u7a33\u5b9a\uff0c\u6709\u4e9b\u70b9\u4f1a\u6162\u4e00\u70b9\uff0c\u603b\u7528\u65f6\u5927\u7ea60.2s\n\n## \u6c42\u6700\u7ec8\u7b54\u6848\n\n\u548c\u70b9\u7684\u6700\u5c0f\u5706\u8986\u76d6\u57fa\u672c\u4e00\u6837\uff0c\u53ea\u8981\u628a\u6c42\u4e24\u70b9\u6216\u4e09\u70b9\u7684\u6700\u5c0f\u8986\u76d6\u5706\u6362\u6210\u76f8\u5e94\u5706\u7684\u505a\u6cd5\u5c31\u884c\n\n## \u5173\u4e8e\u7279\u5224\n\n\u6211\u60f3\u4e86\u4e00\u4e0b\uff0c\u5e94\u8be5\u9700\u8981\u7279\u5224\u4e09\u4e2a\u5706\u7684\u60c5\u51b5\uff08\u6709\u65f6\u5019\u53ea\u548c\u4e24\u4e2a\u5706\u76f8\u5207\u5c31\u80fd\u76d6\u4f4f\u4e09\u4e2a\u5706\uff09\uff0c\u5426\u5219\u53ef\u4ee5\u624b\u52a8\u9020\u51e0\u7ec4\u6570\u636e\u5361\u6389\uff0c\u4f46\u63d0\u4ea4\u7684\u65f6\u5019\u6ca1\u6709WA\uff0c\u5e94\u8be5\u662f\u56e0\u4e3a\u6570\u636e\u968f\u673a\n\n# \u4ee3\u7801\n\n\u8fd9\u662f\u6ca1\u5361\u5e38\u7684\u4ee3\u7801\uff0c\u57fa\u672c\u5c31\u662f\u6309\u7167\u4e0a\u9762\u7684\u5f0f\u5b50\u5199\u7684\uff0c\u7528\u65f6405ms\n\n\uff08\u6211\u5728\u7eb8\u4e0a\u63a8\u5f0f\u5b50\u65f6\u5c31\u5199\u7684$x_1$\u4e4b\u7c7b\u7684\u5b57\u6bcd\uff0c\u4e3a\u4e86\u7701\u4e8b\uff0c\u8ba1\u7b97\u65f6\u6ca1\u7528\u7ed3\u6784\u4f53\uff0c\u8c03\u7528\u51fd\u6570\u65f6\u5148\u628a\u7ed3\u6784\u4f53\u62c6\u5f00\uff09\n\n69ms\u7684\u4ee3\u7801\u5c31\u770b\u63d0\u4ea4\u8bb0\u5f55\u5427\n\n\u4e3b\u8981\u662fIO\u4f18\u5316\uff0c\u53e6\u5916\u8ba1\u7b97\u8fc7\u7a0b\u4e5f\u4f18\u5316\u4e86\u4e00\u4e0b\n\n\u624b\u52a8\u89e3\u65b9\u7a0b\u7684\u65b9\u6cd5\u628a\u5bf9\u5e94\u90e8\u5206\u6362\u6389\u5373\u53ef\uff0c\u5e94\u8be5\u6bd4\u8fd9\u4e2a\u597d\u5199\n\n```cpp\n#include<iostream>\n#include<cmath>\nstruct C{\n    double x,y,r;\n    C(){x=0;y=0;r=0;}\n    C(double x0,double y0,double r0){x=x0;y=y0;r=r0;}\n};\nunsigned long long seed=666;\nint rand(int l){\n    return (seed=(seed*998244353+65537))%l;\n}\nvoid swap(double &a,double &b){\n\tdouble t=a;a=b;b=t;\n}\nvoid swap(C &a,C &b){\n\tC t=a;a=b;b=t;\n}\ndouble dis(double x1,double y1,double x2,double y2){\n    return sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));\n}\nbool inside(C a,C b){//a in b\n    if(a.r>=b.r)return false;\n    if(dis(a.x,a.y,b.x,b.y)<=fabs(a.r-b.r))return true;\n    return false;\n}\nvoid cal(double x1,double y1,double r1,double x2,double y2,double r2,double &px,double &py,double &r){\n    if(r1==r2){\n        double rx=(x1+x2)/2;\n        double ry=(y1+y2)/2;\n        double rr=dis(x1,y1,x2,y2)/2+r1;\n        px=rx;py=ry;r=rr;\n    }else{\n        double mx=(x1+x2)/2;\n        double my=(y1+y2)/2;\n        double dr=r2-r1;\n        double d=dis(x1,y1,x2,y2);\n        double rx=mx+(x2-x1)*dr/d/2;\n        double ry=my+(y2-y1)*dr/d/2;\n        double rr=dis(x1,y1,rx,ry)+r1;\n        px=rx;py=ry;r=rr;\n    }\n    \n}\nC cal(C c1,C c2){\n    C cr;\n    cal(c1.x,c1.y,c1.r,c2.x,c2.y,c2.r,cr.x,cr.y,cr.r);\n    return cr;\n}\nvoid cal(double x1,double y1,double r1,double x2,double y2,double r2,double x3,double y3,double r3,double &px,double &py,double &r){\n\tif(r1>r2){//\u5192\u6ce1\u6392\u5e8f\uff0c\u4fdd\u8bc1\u53d6\u4e24\u4e2a\u534a\u5f84\u4e0d\u540c\u7684\u5706\n\t\tswap(x1,x2);\n\t\tswap(y1,y2);\n\t\tswap(r1,r2);\n\t}\n\tif(r2>r3){\n\t\tswap(x2,x3);\n\t\tswap(y2,y3);\n\t\tswap(r2,r3);\n\t}\n\tif(r1>r2){\n\t\tswap(x1,x2);\n\t\tswap(y1,y2);\n\t\tswap(r1,r2);\n\t}\n\tif(r1==r3){//\u5982\u679c\u4e09\u4e2a\u5706\u7684\u534a\u5f84\u76f8\u540c\uff0c\u90a3\u4e48\u6700\u5927\u503c\u7b49\u4e8e\u6700\u5c0f\u503c\n        double t=2*(x2-x1)*(y3-y1)-2*(x3-x1)*(y2-y1);\n\t\tdouble rx=((x2*x2+y2*y2-x1*x1-y1*y1)*(y3-y1)-(x3*x3+y3*y3-x1*x1-y1*y1)*(y2-y1))/t;\n\t\tdouble ry=-((x2*x2+y2*y2-x1*x1-y1*y1)*(x3-x1)-(x3*x3+y3*y3-x1*x1-y1*y1)*(x2-x1))/t;\n        double rr=dis(x1,y1,rx,ry)+r1;\n        px=rx;py=ry;r=rr;\n\t}else{//\u5426\u5219\u6700\u5927\u7684\u5706\u548c\u6700\u5c0f\u7684\u5706\u534a\u5f84\u4e0d\u540c\n\t\tdouble a=x1*(r2-r3)+x2*(r3-r1)+x3*(r1-r2);\n\t\tdouble b=y1*(r2-r3)+y2*(r3-r1)+y3*(r1-r2);\n\t\tdouble c=-0.5*((x1*x1+y1*y1-r1*r1)*(r2-r3)+(x2*x2+y2*y2-r2*r2)*(r3-r1)+(x3*x3+y3*y3-r3*r3)*(r1-r2));\n\t\t\n\t\tdouble A=4*((x1-x3)*(x1-x3)-(r1-r3)*(r1-r3));\n\t\tdouble B=8*(x1-x3)*(y1-y3);\n\t\tdouble C=4*((y1-y3)*(y1-y3)-(r1-r3)*(r1-r3));\n\t\tdouble D=4*((x1+x3)*(r1-r3)*(r1-r3)-(x1-x3)*(x1*x1-x3*x3+y1*y1-y3*y3));\n\t\tdouble E=4*((y1+y3)*(r1-r3)*(r1-r3)-(y1-y3)*(x1*x1-x3*x3+y1*y1-y3*y3));\n\t\tdouble F=(x1*x1-x3*x3+y1*y1-y3*y3)*(x1*x1-x3*x3+y1*y1-y3*y3)-2*(x1*x1+x3*x3+y1*y1+y3*y3)*(r3-r1)*(r3-r1)+(r3-r1)*(r3-r1)*(r3-r1)*(r3-r1);\n\t\t\n        double rx1,rx2,ry1,ry2;\n        if(fabs(b)>fabs(a)){//\u53d6\u7cfb\u6570\u7edd\u5bf9\u503c\u8f83\u5927\u7684\uff0c\u907f\u514d\u9664\u4ee50\n            double xa=b*b*A-a*b*B+a*a*C;\n            double xb=-b*c*B+2*a*c*C+b*b*D-a*b*E;\n            double xc=c*c*C-b*c*E+b*b*F;\n            \n            double dx=xb*xb-4*xa*xc;\n            rx1=(-xb+sqrt(dx))/(2*xa);\n            rx2=(-xb-sqrt(dx))/(2*xa);\n            \n            ry1=-(c+a*rx1)/b;\n            ry2=-(c+a*rx2)/b;\n            \n            \n            \n            \n            \n        }else{\n            double ya=a*a*C-b*a*B+b*b*A;\n            double yb=-a*c*B+2*b*c*A+a*a*E-b*a*D;\n            double yc=c*c*A-a*c*D+a*a*F;\n            \n            double dy=yb*yb-4*ya*yc;\n            ry1=(-yb+sqrt(dy))/(2*ya);\n            ry2=(-yb-sqrt(dy))/(2*ya);\n            \n            rx1=-(c+b*ry1)/a;\n            rx2=-(c+b*ry2)/a;\n            \n        }\n        \n        double d11=dis(rx1,ry1,x1,y1);\n        double d13=dis(rx1,ry1,x3,y3);\n            \n        double d21=dis(rx2,ry2,x1,y1);\n            \n        if(d11>d13){\n            double rr1=d11+r1;\n            px=rx1;py=ry1;r=rr1;\n        }else{\n            double rr2=d21+r1;\n            px=rx2;py=ry2;r=rr2;\n        }\n\t}\n}\nC cal(C c1,C c2,C c3){\n    C cr;\n    cal(c1.x,c1.y,c1.r,c2.x,c2.y,c2.r,c3.x,c3.y,c3.r,cr.x,cr.y,cr.r);\n    return cr;\n}\nint n;\nC list[50007];\nC cur;\nint main(){\n\tstd::ios::sync_with_stdio(false);\n    std::cin>>n;\n    for(int i=1;i<=n;i++){\n        double x,y,r;\n        std::cin>>x>>y>>r;\n        list[i]=C(x,y,r);\n    }\n    for(int i=n;i>1;i--){\n    //\u9700\u8981\u6253\u4e71\u987a\u5e8f\uff0c\u8fd9\u6837\u624d\u80fd\u4fdd\u8bc1\u590d\u6742\u5ea6\n        int p=rand(i);\n        swap(list[i],list[p+1]);\n    }\n    cur=list[1];\n    for(int i=2;i<=n;i++){\n        if(!inside(list[i],cur)){\n            cur=list[i];\n            for(int j=1;j<i;j++){\n                if(!inside(list[j],cur)){\n                    cur=cal(list[i],list[j]);\n                    for(int k=1;k<j;k++){\n                        if(!inside(list[k],cur)){\n                            cur=cal(list[i],list[j],list[k]);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    std::cout<<cur.x<<\" \"<<cur.y<<\" \"<<cur.r<<std::endl;\n}\n```",
        "postTime": 1592622006,
        "uid": 86649,
        "name": "Hope2075",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P5252 \u3010[LnOI2019]\u4e1c\u4eac\u590f\u65e5\u76f8\u4f1a\u3011"
    },
    {
        "content": "# [\u66f4\u597d\u7684\u9605\u8bfb\u6548\u679c\uff1f\u6233\u6211](https://www.cnblogs.com/zhenglw/p/10507209.html)\n\n## \u5410\u69fd\uff1a\u8650\u72d7\u7684\u4eba\u5c31\u5e94\u8be5\u88ab\u72d9\u51fb\u67aa\u6307\u7740\n\n## \u8fd9\u91cc\u6765\u4e00\u53d1~~\u9700\u8981\u5f00\u6bd2\u7624\u4f18\u5316~~\uff0c\u5e76\u4e14~~\u51e0\u7387\u5f88\u5c0f~~\u4e00\u904d\u8fc7\u7684\u6a21\u62df\u9000\u706b\u9898\u89e3...\n\n~~\u53cb\u60c5\u63d0\u9192\uff1a\u5982\u679c\u4f60\u5f88\u4e45\u5f88\u4e45\u6ca1\u6709\u8fc7\u67d0\u4e00\u4e2a\u70b9\uff0c\u60a8\u53ef\u4ee5\u52a0\u4e0a\u7279\u5224~~\n\n\n\u53ef\u4ee5\u50cf P1337 [JSOI2004]\u5e73\u8861\u70b9 / \u540a\u6253XXX \u90a3\u9053\u9898\u76ee\u4e00\u6837\n\n\u5982\u679c\u4e0d\u4f1a\u9000\u706b\u53ef\u4ee5\u62ff\u90a3\u9053\u9898\u7ec3\u624b...\n\n\u4e2a\u4eba\u770b\u6765\u8fd9\u9898\u548c\u90a3\u9898\u5dee\u4e0d\u591a\uff0c\u4e3b\u8981\u533a\u522b\u5728get_ans()\u7684\u51fd\u6570\u4e0a\u9762\n\n\u5982\u4f55get_ans\u5462\uff1f\n\uff08\u56fe\u5f88\u5783\u573e\uff0c\u522b\u4ecb\u610f\uff09\n\u5148\u770b\u8fd9\u5f20\u56fe\uff1a\n![](https://i.loli.net/2019/03/10/5c850bc838c84.png)\n\n\u5047\u8bbe\u4e2d\u95f4\u7684\u9ed1\u70b9\u662f\u76ee\u524d\u786e\u5b9a\u7684\u5706\u5fc3\uff0c\u8981get\u7684ans\u662f\u79bb\u8fd9\u4e2a\u70b9\u6700\u8fdc\u7684\u5706\u4e0a\u7684\u70b9\n\n\u90a3\u4e48\u521d\u4e2d\u6570\u5b66\u8001\u5e08\u5c31\u4f1a\u6559\u4f60\uff1a**\u8ddd\u79bb=\u4e24\u4e2a\u5706\u5fc3\u7684\u8ddd\u79bb+\u9009\u4e2d\u5706\u7684\u534a\u5f84**\n\n\u50cf\u8fd9\u6837\uff1a\n![](https://i.loli.net/2019/03/10/5c850c943b87a.png)\n\n\u663e\u7136\u6700\u8fdc\u7684\u70b9\u53ea\u8981O\uff08n\uff09\u904d\u5386\u53d6\u6700\u5927\u503c\u5c31\u597d\u4e86\n\n\u7136\u540e\u5957\u4e0a\u9000\u706b\u7684\u6a21\u677f\u5c31\u597d\u4e86\u5427\n\n```\n#pragma GCC optimize(2)\n#pragma GCC optimize(3)\n#pragma GCC optimize(\"inline\")\n#pragma GCC optimize(\"Ofast\")\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<cstdlib> \n#include<ctime>\nusing namespace std;\ninline int read(){\n    int ans=0,f=1; char chr=getchar();\n    while(!isdigit(chr)){if(chr=='-') f=-1;chr=getchar();}\n    while(isdigit(chr)) {ans=(ans<<3)+(ans<<1)+chr-48;chr=getchar();}\n    return ans*f;\n}\nint n;\ndouble x[50005],y[50005],z[50005],ansx,ansy,BR;\ndouble dis(double x,double y,double a,double b){return sqrt((x-a)*(x-a)+(y-b)*(y-b));}\ndouble get(double q,double p){\n    double ans=0;\n    for(register int i=1;i<=n;++i)\n        ans=max(dis(x[i],y[i],q,p)+z[i],ans) ;\n    return ans;\n}\nconst double delta=0.999;\ndouble ans=1e20,maxn=-54564564;\nint lim;\nvoid Fire(){\n    register double fx=ansx,fy=ansy;\n    register double t=12180.0;\n    while(t>1e-14){\n        register double tx=fx+(rand()*2-RAND_MAX)*t;\n        register double ty=fy+(rand()*2-RAND_MAX)*t;\n        register double tans=get(tx,ty);\n        register double DE=tans-ans;\n        if(DE<0){\n            fx=tx;\n            fy=ty;\n            ansx=tx;\n            ansy=ty;\n            ans=tans;\n        }else if(exp(-DE/t)*RAND_MAX>rand())\n            fx=tx,fy=ty;\n        t*=delta;\n    \tif(clock()-BR>=lim){printf(\"%.2lf %.2lf %.2lf\",ansx-0.001,ansy+0.001,ans);exit(0);}\n    }       \n}\nint main(){\n    BR=clock();\n    srand(unsigned(time(0)));\n    n=read();\n    for(register int i=1;i<=n;++i)\tscanf(\"%lf%lf%lf\",&x[i],&y[i],&z[i]),ansx+=x[i],ansy+=y[i],maxn=max(maxn,z[i]);\n    ansx/=1.0*n;\n    ansy/=1.0*n;\n    lim=(n<=1000||maxn==0)?995:3995;\n    lim*=1000;\n    while(1) Fire();\n    return 0;\n}\n\n```",
        "postTime": 1552223512,
        "uid": 9287,
        "name": "LevenKoko",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5250 \u3010[LnOI2019]\u4e1c\u4eac\u590f\u65e5\u76f8\u4f1a\u3011"
    },
    {
        "content": "## \u8fd9\u4e2a\u9898\u521a\u624d\u6253\u6bd4\u8d5b\u7684\u65f6\u5019\u53ea\u770b\u51fa\u8fd9\u662f\u4e2a\u6700\u5c0f\u5706\u8986\u76d6\u95ee\u9898\n## \u4f46\u662f\uff0c\u5c31\u662f\u4e0d\u77e5\u9053\u600e\u6837\u5728\u5706\u4e0a\u53d6\u70b9\u624d\u80fd\u4f7f\u6700\u5c0f\u8986\u76d6\u5706\u7ecf\u8fc7\u2026\u2026\n### \u6211\u8fd8\u662f\u592a~~\u5f3a~~\u5f31\u4e86\u2026\u2026qwq\n\n------------\n\n## \u524d\u7f6e\u829d\u58eb\uff1a    \n    \n#### 1.\u6700\u5c0f\u5706\u8986\u76d6\u95ee\u9898  \uff08[\u4e0d\u4f1a\u8bf7\u8f6cP1742](https://www.luogu.org/problemnew/show/P1742)\uff09\n#### 2.\u4e09\u89d2\u51fd\u6570\uff08\u53d6\u70b9\u9700\u8981\uff09\n    \n------------\n\n## \u4e3b\u8981\u601d\u60f3\uff1a\n\n#### 1.\u5fae\u5143\u5206\u5272\u6cd5\n#### 2.\u968f\u673a\u5316\uff08random_shuffel)\n\n------------\n\n## \u5177\u4f53\u5904\u7406\u65b9\u6cd5\uff1a\n##### \u5bf9\u4e8e\u5e73\u9762\u4e2d\u6bcf\u4e00\u4e2a\u5706\uff0c\u9700\u8981\u6c42\u5b83\u4eec\u7684\u6700\u5c0f\u8986\u76d6\u5706\n##### \u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u5bf9\u4e8e$n$($n>=2$)\u4e2a\u5706\uff0c\u627e\u51fa\u4e0e\u6700\u5916\u5c42\u5706\u76f8\u5207\u7684\u5207\u70b9\u7684\u96c6\u5408\uff0c\u4e00\u5b9a\u80fd\u786e\u5b9a\u4e00\u4e2a\u5706\n##### \u7279\u522b\u5730\uff0c\u5bf9\u4e8e1\u4e2a\u5706\uff0c\u6216\u8005\u4e00\u4e2a$r$\u4e3a0\u7684\u5706\uff0c\u5b83\u7684\u6700\u5c0f\u8986\u76d6\u5706\u4e3a\u5b83\u672c\u8eab\n##### \u4f46\u662f\u95ee\u9898\u6765\u4e86\uff0c\u6211\u4eec\u65e0\u6cd5\u6c42\u5f97\u5207\u70b9\u7684\u5177\u4f53\u4f4d\u7f6e\uff0c\u4e5f\u5c31\u65e0\u6cd5\u51c6\u786e\u5730\u627e\u5230\u6700\u5c0f\u7684\u8986\u76d6\u5706\n##### \u90a3\u4e48\u6211\u4eec\u91c7\u7528\u5fae\u5143\u5206\u5272\u6cd5\uff0c\u5c06\u6bcf\u4e2a\u5706\u7b49\u5206\u6210\u4e00\u5b9a\u90e8\u5206\uff0c\u50cf\u4e0b\u9762\u8fd9\u6837\uff1a\n```cpp\ndouble l=max(360*acos(1-0.003/r)/pi,1.0);\n```\n##### $l$ \u4ee3\u8868\u622a\u53d6\u7684\u4e00\u5b9a\u89d2\u5ea6\n##### \u8fd9\u6837\u6211\u4eec\u4ece$0$\u00b0\u5f00\u59cb\u679a\u4e3e\u5230$360$\u00b0\u5373\u53ef\u628a\u4e00\u4e2a\u5706\u5206\u5272\u6210$360/l$\u4e2a\u70b9,\u8fd9\u4e9b\u70b9\u7684\u96c6\u5408\u53ef\u4ee5\u8fd1\u4f3c\u8868\u793a\u4e00\u4e2a\u5706\n\n#### \u5982\u6b64\u5c06$n$\u4e2a\u5706\u5206\u5272\u6210\u70b9\uff0c\u5373\u53ef\u5728\u4fdd\u8bc1\u7cbe\u5ea6\u7684\u60c5\u51b5\u4e0b\u6700\u5927\u9650\u5ea6\u7684\u4fdd\u6301\u8986\u76d6\u5706\u6700\u5c0f\n\n#### \u5206\u5272\u65f6\u6570\u5b57\u53ef\u4ee5\u53d6\u5f97\u5c3d\u91cf\u5c0f\uff0c\u4fdd\u8bc1\u4e0d\u7206\u70b8\u7684\u60c5\u51b5\u4e0b$0.003-0.005$\u5373\u53ef\n\n------------\n### \u63a5\u4e0b\u6765\u53ea\u9700\u8981\u5bf9\u8fd9\u5e73\u9762\u4e0a\u6240\u6709\u70b9\u8dd1\u4e00\u904d\u6700\u5c0f\u5706\u8986\u76d6\u7684\u677f\u5b50\uff0c\u5373\u53ef\u6c42\u51fa\u5706\u5fc3\u5750\u6807\u53ca\u534a\u5f84\n\n### \u672c\u849f\u84bb\u5728\u6b64\u7528\u7684\u968f\u673a\u589e\u91cf\u6cd5\uff0c\u8fd8\u53ef\u4ee5\u7528\u57fa\u4e8e\u8499\u7279\u5361\u7f57\u968f\u673a\u5316\u601d\u60f3\u7684\u6a21\u62df\u9000\u706b\uff08\u7384\u5b66\u7b97\u6cd5\uff09\u5904\u7406 \n~~\uff08\u672c\u849f\u84bb\u4e0d\u4f1a\u6a21\u62df\u9000\u706b\u5624\u5624\u5624~~\n------------\n\n## \u7279\u522b\u6ce8\u610f\uff01\u56e0\u4e3a\u6211\u4eec\u5c06\u5706\u5206\u5272\u6210\u4e86\u70b9\u96c6\uff0c\u90a3\u4e48\u6570\u7ec4\u5fc5\u9700\u8981\u5f00\u5927\uff01\n## (\u672c\u849f\u84bb\u5f00\u7684$2kw$ ~~\u4e0d\u8981\u95ee\u4e3a\u4ec0\u4e48\u662f\u8fd9\u4e2a\u6570\u5b57!qwq~~)\n\n\n------------\n\n\n# AC\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\n#define in inline\n#define reg register\n#define int long long\n#define INF 20030813\n#define eps 1e-6\n#define pi 3.14159265358979323846264338327950288419716939937510\nusing namespace std;\nnamespace qwq{\n    in int read(int &o)\n    {\n        o=0;\n        int w=1;\n        char c=getchar();\n        while(c<'0'||c>'9')\n        {\n            if(c=='-')w=-1;\n            c=getchar();\n        }\n        while(c>='0'&&c<='9')\n        {\n            o=(o<<3)+(o<<1)+(c^48);\n            c=getchar();\n        }\n        return o*w;\n    }\n    in void write(int x)\n    {\n    \tif(x>9)write(x/10);\n    \tputchar(x%10+48);\n    }\n    in int max(int x,int y)\n    {\n        return x>y?x:y;\n    }\n    in int min(int x,int y)\n    {\n        return x<y?x:y;\n    }\n}\nusing namespace qwq;\nint t,cnt;\ndouble R,x,y,r,Ri;\nclass point\n{\npublic:\n\tdouble x,y,r;\n}o,num[20030813],cir[5001000];\n\ndouble dist(point a,point b)\n{\n\treturn sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));\n}\n\nbool check(double x,double y)\n{\n\tif(x>y+eps)return 1;\n\treturn 0;\n}\n\nvoid fake(point p1,point p2,point p3)\n{\n    double a,b,c,d,e,f;\n    a = p2.y - p1.y;\n    b = p3.y - p1.y;\n    c = p2.x - p1.x;\n    d = p3.x - p1.x;\n    f = p3.x*p3.x + p3.y*p3.y - p1.x*p1.x - p1.y*p1.y;\n    e = p2.x*p2.x + p2.y*p2.y - p1.x*p1.x - p1.y*p1.y;\n    o.x = (a*f - b*e) / (2*a*d - 2*b*c);\n    o.y = (d*e - c*f) / (2*a*d - 2*b*c);\n    R = dist(o,p1);\n}\nvoid add(double x,double y,double r)\n{\n\tif(r==0)\n\t{\n\t\t++cnt;\n\t\tnum[cnt].x=x;\n\t\tnum[cnt].y=y;\n\t\treturn ; \n\t}\n\tdouble l=max(360*acos(1-0.003/r)/pi,1.0);\n\t//\u6839\u636e\u51fa\u9898\u4eba\u7684\u601d\u8def\u641e\u4e86\u4e00\u4e2a\u8fd9\u4e2a\u64cd\u4f5c \n\t//\u5927\u610f\u662f\u6bcf\u9694\u4e00\u5b9a\u89d2\u5ea6\u53d6\u4e00\u4e2a\u70b9\n\t//\u53d6\u7684\u6240\u6709\u70b9\u7684\u96c6\u5408\u53ef\u8fd1\u4f3c\u4ee3\u8868\u4e00\u4e2a\u5706 \n\tfor(reg int i=0;i<360;i+=l) \n\t{\n\t\tdouble theta=i*pi/180;//\u53d6\u5f97\u7684\u4e00\u5b9a\u89d2\u5ea6\n\t\t++cnt;\n\t\tnum[cnt].x=x+r*cos(theta);\n\t\tnum[cnt].y=y+r*sin(theta);\n\t\t//\u8f6c\u6362(\u5982\u679c\u8fd9\u4e2a\u4e0d\u4f1a\u53ef\u4ee5\u81ea\u5df1\u753b\u4e2a\u56fe\u8bd5\u8bd5\n\t\t//\u5982\u679c\u8fd8\u4e0d\u4f1a,\u8bf7\u51fa\u95e8\u53f3\u8f6c\u5bfb\u627e\u9ad8\u4e2d\u4eba\u6559\u7248\u6570\u5b66\u300a\u5fc5\u4fee\u56db\u300b \n\t}\n\t\n}\nsigned main()\n{\n\tread(t);\n\tfor(reg int i=1;i<=t;++i)\n\t{\n\t\tscanf(\"%lf%lf%lf\",&x,&y,&r);\n\t\tadd(x,y,r);\n\t\tcir[i].x=x,cir[i].y=y,cir[i].r=r;\n\t}\n\trandom_shuffle(num+1,num+cnt+1);\n\to=num[1];R=0;\n\tfor(reg int i=2;i<=cnt;++i)\n\t{\n\t\tif(check(dist(num[i],o) , R))\n\t\t{\n\t\t\to=num[i],R=0;\n\t\t\tfor(reg int j=1;j<=i-1;++j)\n\t\t\t{\n\t\t\t\tif(check(dist(o,num[j]) , R))\n\t\t\t\t{\n\t\t\t\t\to.x=(num[i].x+num[j].x)/2;\n                    o.y=(num[i].y+num[j].y)/2;\n                    R=dist(o,num[j]);\n                    for(reg int k=1;k<=j-1;++k)\n                    {\n                    \tif(check(dist(o,num[k]) , R))\n                    \t{\n                    \t\tfake(num[i],num[j],num[k]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%.2lf %.2lf %.2lf\\n\",o.x,o.y,R);\n}\n```\n\n",
        "postTime": 1552220802,
        "uid": 112742,
        "name": "_MRCMRC_",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P5250 \u3010[LnOI2019]\u4e1c\u4eac\u590f\u65e5\u76f8\u4f1a\u3011"
    },
    {
        "content": "\u601d\u8003\u4e00\u4e0b\u53ef\u4ee5\u53d1\u73b0\uff0c\u5305\u542b\u6240\u6709\u5706\u5fc3\u7684\u5706O1\u548c\u5305\u542b\u6240\u6709\u5706Oi\u7684\u5706O2\u662f\u5f88\u63a5\u8fd1\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u5bf9\u5706\u5fc3Oi\u8dd1\u4e00\u6b21\u6700\u5c0f\u5706\u8986\u76d6\uff0c\u4ee5\u5f53\u524d\u5706\u7684\u5706\u5fc3\u4e0e\u6bcf\u4e2a\u5706\u5fc3Oi\u7684\u8fde\u7ebf\u6240\u5728\u76f4\u7ebf\u4e0e\u5706Oi\u7684\u4ea4\u70b9\u4e3a\u4e0b\u4e00\u6b21\u7684\u5f85\u8986\u76d6\u70b9(\u663e\u7136\u8fd9\u4e2a\u70b9\u5fc5\u5b9a\u662f\u8981\u88ab\u8986\u76d6\u7684\uff0c\u5e76\u4e14\u8fd9\u4e2a\u70b9\u76f8\u5bf9\u4e8e\u539f\u6765\u7684\u5706\u5fc3\u6700\u8fdc)\uff0c\u53cd\u590d\u8fed\u4ee3\u51e0\u6b21\u5373\u53ef\u3002\n\n```cpp\n#include <stdio.h>\n#include <string.h>\n#include <algorithm>\n#include <stdlib.h>\n#include <math.h>\nusing namespace std;\nconst int N=1e6+2;\nconst long double eps=1e-6;\nstruct zb\n{\n    long double x,y,r;\n};\nzb a[N],b[N],o;\nlong double r,ls;\ndouble dr;\nint n,i,j,k;\ninline long double dis(zb a,zb b)\n{\n    return sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));\n}\ninline bool ucov(zb x)\n{\n    return (dis(x,o)-r>eps);\n}\ninline long double ab(long double x)\n{\n    return x>eps ? x:-x;\n}\nvoid sol(zb a,zb b,zb c)\n{\n    long double k,kk,b1,b2;\n    zb d,e;\n    d.x=(a.x+b.x)/2;\n    d.y=(a.y+b.y)/2;\n    e.x=(a.x+c.x)/2;\n    e.y=(a.y+c.y)/2;\n    if (ab(b.y-a.y)>eps) k=(a.x-b.x)/(b.y-a.y); else k=1e200;\n    if (ab(c.y-a.y)>eps) kk=(a.x-c.x)/(c.y-a.y); else kk=1e200;\n    if (ab(k-kk)<eps)\n    {\n        if (a.x>b.x) swap(a,b);\n        if (b.x>c.x) swap(b,c);\n        if (a.x>b.x) swap(a,c);\n        o.x=(a.x+c.x)/2;\n        o.y=(a.y+c.y)/2;return;\n    }\n    b1=d.y-k*d.x;\n    b2=e.y-kk*e.x;\n    o.y=(b1*kk-b2*k)/(kk-k);\n    o.x=(o.y-b1)/k;\n}\nvoid solve()\n{\n    r=0;\n    o=a[1];\n    for (i=2;i<=n;i++) if (ucov(a[i]))\n    {\n        o=a[i];\n        for (j=1;j<i;j++) if (ucov(a[j]))\n        {\n            o.x=(a[i].x+a[j].x)/2;\n            o.y=(a[i].y+a[j].y)/2;\n            r=dis(o,a[i]);\n            for (k=1;k<j;k++) if (ucov(a[k]))\n            {\n                sol(a[i],a[j],a[k]);\n                r=max(dis(o,a[k]),max(dis(o,a[i]),dis(o,a[j])));\n            }\n        }\n    }\n}\nint main()\n{\n    srand(383778817);\n    scanf(\"%d\",&n);\n    for (i=1;i<=n;i++)\n    {\n        scanf(\"%lf\",&dr);b[i].x=dr+eps;\n        scanf(\"%lf\",&dr);b[i].y=dr+eps;\n        scanf(\"%lf\",&dr);b[i].r=dr-eps;\n    }\n    for (i=1;i<=n;i++) swap(b[i],b[rand()%n+1]);\n    for (i=1;i<=n;i++) a[i]=b[i];\n    int t=100;\n    solve();\n    while (t--)\n    {\n        for (i=1;i<=n;i++)\n        {\n            if ((ab(b[i].x-o.x)<eps)&&(ab(b[i].y-o.y)<eps))\n            {\n                a[i].x=b[i].x+b[i].y;a[i].y=b[i].y;continue;\n            }\n            ls=b[i].r/sqrt((b[i].x-o.x)*(b[i].x-o.x)+(b[i].y-o.y)*(b[i].y-o.y));\n            a[i].x=b[i].x+ls*(b[i].x-o.x);\n            a[i].y=b[i].y+ls*(b[i].y-o.y);\n        }\n        solve();\n        if ((o.x<=0)||(o.x>=0)) continue;\n        for (i=1;i<=n;i++) swap(b[i],b[rand()%n+1]);\n        for (i=1;i<=n;i++) a[i]=b[i];solve();t=300;\n    }\n        if (!((o.x<=0)||(o.x>=0))) exit(0);\n    printf(\"%.10f %.10f %.10f\",double(o.x),double(o.y),double(r));\n}\n```\n",
        "postTime": 1552278715,
        "uid": 29826,
        "name": "SSerxhs",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P5250 \u3010[LnOI2019]\u4e1c\u4eac\u590f\u65e5\u76f8\u4f1a\u3011"
    },
    {
        "content": "\u540c\u6b65\u53d1\u5e03\u4e8e\u535a\u5ba2\n\n\u60f3\u8981\u83b7\u5f97\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u8bf7\u70b9[\u8fd9\u91cc](https://blog.lyzqs.top/archives/242/)\n\n### \u9898\u89e3\n\n\u561b\u3002\u3002\u3002\n\n\u53d1\u4e00\u4e0b\u81ea\u5df1\u7684\u5199\u6cd5\n\n\u867d\u7136\u6bd4\u8d5b\u65f6\u5404\u79cd\u7206\u70b8\uff0c\u88ab\u5361\u7cbe\u5ea6\u5361\u65f6\u95f4\u5361\u523040pts\n\n\u7b2c\u4e00\u773c\u770b\u4e0a\u53bb\u9898\u76ee\n\nwoc\u8fd9\u4e0d\u662f\u4e09\u5206\u5957\u4e09\u5206\u50bb\u903c\u9898\u5417~~(\u867d\u7136\u6bd4\u8d5b\u540e\u597d\u50cf\u5c31\u6211\u4e00\u4e2a\u5199\u7684\u4e09\u5206\u5957\u4e09\u5206~~\n\n\u7136\u540e\u5199\u4e00\u53d1\u4ea4\u4e86\u4e0a\u53bb\n\n![[qwq](https://www.luogu.org/recordnew/show/17080152)](https://ws2.sinaimg.cn/large/007yWI1dly1g0y3mu12lpj30mp0fpdgk.jpg)\n\n\u8fd9\u4e2aeps\u5199\u76841e-3\n\n\u7136\u540e\u5404\u79cd\u8c03\u53c2\n\n\u628aeps\u6539\u62101e-6\n\n\u5c31\u53ef\u4ee5\u8c03\u523030\u5206\u4e86\n\n30pts\u4ee3\u7801\u2193\uff08\u6bd4\u8d5b\u65f6\n\n```cpp\n#include <bits/stdc++.h>\n#define il inline\n#define Max 100005\n#define db long double\n#define inf 1e16\nusing namespace std;\nint n;\ndb eps=1e-6;\nstruct node\n{\n    db x,y,r;\n}p[Max],S[Max];\ndb ansx,ansy,ansr,maxx,maxy,minx,miny;\nil db dis(int i,db xx,db yy)\n{\n    return sqrt((p[i].x-xx)*(p[i].x-xx)+(p[i].y-yy)*(p[i].y-yy));\n}\nil db calc2(db xx,db yy)\n{\n    db res=0;\n    for(int i=1;i<=n;i++) res=max(res,dis(i,xx,yy)+p[i].r);\n    ansr=res;\n    return res;\n}\nil db calc(db xx)\n{\n    db l=miny,r=maxy;\n    while(r-l>=eps)\n    {\n        db k=(r-l)/3.0;\n        db mid1=l+k,mid2=r-k;\n        if(calc2(xx,mid1)<calc2(xx,mid2)) r=mid2;\n        else l=mid1;\n    }\n    ansy=l;\n    return calc2(xx,ansy);\n}\nil bool cmp(node a,node b)\n{\n    db A=atan2((a.y-p[1].y),(a.x-p[1].x));\n    db B=atan2((b.y-p[1].y),(b.x-p[1].x));\n    if(A!=B) return A<B;\n    else return a.x<b.x;\n}\nil db cross(node a,node b,node c)\n{\n    return (b.x-a.x)*(c.y-a.y)-(b.y-a.y)*(c.x-a.x);\n}\nvoid Get()\n{\n    p[0]=(node){inf,inf};\n    int k=1,top;\n    for(int i=1;i<=n;++i)\n        if(p[0].y>p[i].y||(p[0].y==p[i].y&&p[i].x<p[0].x))\n            p[0]=p[i],k=i;\n    swap(p[k],p[1]);\n    sort(&p[2],&p[n+1],cmp);\n    S[0]=p[1],S[1]=p[2];top=1;\n    for(int i=3;i<=n;)\n    {\n        if(top&&cross(S[top-1],p[i],S[top])>=0)\n            top--;\n        else S[++top]=p[i++];\n    }\n    for(int i=0;i<=top;i++)\n        p[i]=S[i];\n    n=top;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    if(n<100) eps=1e-7;\n    minx=miny=10100;\n    maxx=maxy=-10100;\n    for(int i=1;i<=n;i++)\n        scanf(\"%Lf%Lf%Lf\",&p[i].x,&p[i].y,&p[i].r),maxx=max(p[i].x+p[i].r,maxx),minx=min(minx,p[i].x-p[i].r),maxy=max(maxy,p[i].y+p[i].r),miny=min(miny,p[i].y-p[i].r);\n    //Get();\n    db l=minx,r=maxx;\n    while(r-l>=eps)\n    {\n        db k=(r-l)/3.0;\n        db mid1=l+k,mid2=r-k;\n        if(calc(mid1)<calc(mid2)) r=mid2;\n        else l=mid1;\n    }\n    calc(l);\n    ansx=l;\n    printf(\"%.3Lf %.3Lf %.3Lf\\n\",ansx,ansy,ansr);\n}\n```\n\n\u88ab\u6bd2\u7624#1\u5361\u7cbe\u5ea6\u600e\u4e48\u6539\u90fd\u8fc7\u4e0d\u53bb\n\n[\u8bc4\u6d4b\u8bb0\u5f55](https://www.luogu.org/recordnew/show/17083878)\n\n![qwq2](https://ws2.sinaimg.cn/large/007yWI1dly1g0y3qrn11sj30lt0f50tc.jpg)\n\n\u6211\u4eec\u8003\u8651\u7b2c5\u4e2a\u70b9\uff0cr=0\u3002\n\n\u53d1\u73b0\u53ea\u8981\u6c42\u4e00\u4e2a\u51f8\u5305\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\u91cc\u9762\u7684\u70b9\u5c31\u4e0d\u7528\u7ba1\u4e86\u3002\n\n\u7136\u540e\u6bd4\u8d5b\u65f6\u5019\u5f00\u5fc3\u7684\u5199\u4e86\u4e00\u53d1\u51f8\u5305\u3002\n\n\u62ff\u4e8640pts\u3002\n\n40\u5206\u4ee3\u7801\u2193\n\n```cpp\n#include <bits/stdc++.h>\n#define il inline\n#define Max 100005\n#define db long double\n#define inf 1e16\nusing namespace std;\nint n,st;\ndb eps=1e-6;\nstruct node\n{\n    db x,y,r;\n}p[Max],S[Max];\nbool flag=1;\ndb ansx,ansy,ansr,maxx,maxy,minx,miny;\nil db dis(int i,db xx,db yy)\n{\n    return sqrt((p[i].x-xx)*(p[i].x-xx)+(p[i].y-yy)*(p[i].y-yy));\n}\nil db calc2(db xx,db yy)\n{\n    db res=0;\n    for(int i=1;i<=n;i++) res=max(res,dis(i,xx,yy)+p[i].r);\n    ansr=res;\n    return res;\n}\nil db calc(db xx)\n{\n    db l=miny,r=maxy;\n    while(r-l>=eps)\n    {\n        db k=(r-l)/3.0;\n        db mid1=l+k,mid2=r-k;\n        if(calc2(xx,mid1)<calc2(xx,mid2)) r=mid2;\n        else l=mid1;\n    }\n    ansy=(l+r)/2.0;\n    return calc2(xx,ansy);\n}\nil bool cmp(node a,node b)\n{\n    db A=atan2((a.y-p[1].y),(a.x-p[1].x));\n    db B=atan2((b.y-p[1].y),(b.x-p[1].x));\n    if(A!=B) return A<B;\n    else return a.x<b.x;\n}\nil db cross(node a,node b,node c)\n{\n    return (b.x-a.x)*(c.y-a.y)-(b.y-a.y)*(c.x-a.x);\n}\nvoid Get()\n{\n    p[0]=(node){inf,inf};\n    int k=1,top;\n    for(int i=1;i<=n;++i)\n        if(p[0].y>p[i].y||(p[0].y==p[i].y&&p[i].x<p[0].x))\n            p[0]=p[i],k=i;\n    swap(p[k],p[1]);\n    sort(&p[2],&p[n+1],cmp);\n    S[0]=p[1],S[1]=p[2];top=1;\n    for(int i=3;i<=n;)\n    {\n        if(top&&cross(S[top-1],p[i],S[top])>=0)\n            top--;\n        else S[++top]=p[i++];\n    }\n    for(int i=0;i<=top;i++)\n        p[i]=S[i];\n    n=top;\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    st=clock();\n    minx=miny=10100;\n    maxx=maxy=-10100;\n    if(n<=100) eps=1e-7;\n    if(n>1000) eps=1e-5;\n    for(int i=1;i<=n;i++)\n        scanf(\"%Lf%Lf%Lf\",&p[i].x,&p[i].y,&p[i].r),maxx=max(p[i].x+p[i].r,maxx),minx=min(minx,p[i].x-p[i].r),maxy=max(maxy,p[i].y+p[i].r),miny=min(miny,p[i].y-p[i].r),flag=(p[i].r==0);\n    if(flag) Get();\n    db l=minx,r=maxx;\n    while(r-l>=eps)\n    {\n        if(clock()-st>3630000) break;\n        db k=(r-l)/3.0;\n        db mid1=l+k,mid2=r-k;\n        if(calc(mid1)<calc(mid2)) r=mid2;\n        else l=mid1;\n    }\n    calc((l+r)/2.0);\n    ansx=(l+r)/2.0;\n    if(fabs(ansx)<1e-2) ansx=fabs(ansx);\n    if(fabs(ansy)<1e-2) ansy=fabs(ansy);\n    if(fabs(ansr)<1e-2) ansr=fabs(ansr);\n    printf(\"%.3Lf %.3Lf %.3Lf\\n\",ansx,ansy,ansr);\n}\n```\n\n\u8fd9\u4efd\u4ee3\u7801\u8003\u8bd5\u65f6\u88ab\u6bd2\u7624\u7684\u51fa\u9898\u4eba\u5361\u7cbe\u5ea6\u5361\u7a7a\u95f4\u3002\n\n\u8003\u8bd5\u540e\u6570\u636e\u7cbe\u5ea6\u6539\u4e86\u5c31\u53ef\u4ee5\u8fc7\u4e86\u3002\n\n\u987a\u4fbf\u9644\u4e0a\u8d5b\u65f6\u7684\u8bc4\u6d4b\u8bb0\u5f55\u548c\u8d5b\u540e\u7684\u8bc4\u6d4b\u8bb0\u5f55\n\n[\u8d5b\u65f6](https://www.luogu.org/recordnew/show/17084278)\n[\u8d5b\u540e](https://www.luogu.org/recordnew/show/17107019)\n\n### \u95f2\u804a\n\n\u5176\u5b9e\u8003\u8bd5\u65f6\u60f3\u5230\u4e86\u53ef\u4ee5\u6c42\u4e00\u4e2a\u5706\u7684\u51f8\u5305\u3002\n\n\u8fd9\u6837\u8bf4\u4e0d\u5b9a\u5c31\u53ef\u4ee5\u8fc7\u4e86\u3002\n\n\u4f46\u662f\u5706\u7684\u51f8\u5305\u592a\u9ebb\u70e6\u4e86\uff0c\u4e8e\u662f\u5c31\u6ca1\u6709\u5199\u3002\n\n\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u5199\u5199\uff0c\u53bb\u7f51\u4e0a\u67e5\u67e5\u5c31\u597d\u4e86\u3002\n\n\u8fd8\u6709\u8fd9\u9898\u4e5f\u53ef\u4ee5\u7528\u6a21\u62df\u9000\u706b\u7684\u8bf4\u3002\n\n\u4f46\u662f\u7531\u4e8e\u6211\u592a\u83dc\uff0c\u6a21\u62df\u9000\u706b\u7684\u9898\u5199\u7684\u5c11\uff0c\u6240\u4ee5\u6ca1\u5199\u3002\n\n\u8fd8\u6709\u6b63\u89e3\u7684\u601d\u8def\u597d\u5f3a\u554a\uff0c\u6839\u672c\u6ca1\u60f3\u5230\u53ef\u4ee5\u90a3\u6837\u505a\u3002\n\n~~\u5706\u7684\u6700\u5c0f\u8986\u76d6\u7684\u6a21\u677f\u6211\u600e\u4e48\u542c\u90fd\u6ca1\u542c\u8fc7~~\n\n~~\u8fd8\u6709\u521d\u4e2d\u57fa\u7840\u6570\u5b66\u662f\u4ec0\u4e48\u9b3c\uff0c\u6211\u600e\u4e48\u90fd\u4e0d\u4f1a\u8bc1\u660e~~\n\n\u603b\u4f53\u6765\u8bf4\u8fd9\u9898\u62ff\u6765\u7ec3\u4e09\u5206\u4e5f\u633a\u597d\u7684(\u96fe\n\n\u5bf9\u4e86\u8fd9\u9898#5\u4e0d\u6c42\u51f8\u5305\u7684\u8bdd\u4f1aT\u6389\uff08\u5982\u679c\u4f60\u80fd\u5361\u8fc7\u53bb\u4e5f\u884c\n\n\u6700\u540e\u5efa\u8bae\u5404\u4f4d\u5b66\u4e60\u4e0b\u6b63\u89e3\uff0c\u81f3\u5c11\u90a3\u4e2a\u6548\u7387\u53ef\u4ee5\u540a\u6253\u8fd9\u4e2a\u4ee3\u7801",
        "postTime": 1552231480,
        "uid": 19172,
        "name": "lyzqs",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5250 \u3010[LnOI2019]\u4e1c\u4eac\u590f\u65e5\u76f8\u4f1a\u3011"
    },
    {
        "content": "\u81f4\u656c\u4e00\u53d1 \u6c5f $QVQ$\uff0c\u6bcf\u6b21\u7528\u968f\u673a\u90fd\u5f97\u7528\u90a3\u4e2a\u79cd\u5b50 $QWQ$ \uff08\u672c\u9898\u53ef\u4ee5\u62ff\u6765\u9000\u706b\u7ec3\u624b\uff0c\u4e00\u822c\u6765\u8bb2\u4e0d\u6253\u70b8\u7684\u8bdd 70 pts \u8d77\u6b65\u7684\uff09\n\n\u603b\u7684\u601d\u8def\u5c31\u662f\u9000\u706b\u561b\uff08\u522b\u7684\u6211\u4e5f\u4e0d\u4f1a\uff09\uff0c\u5c31\u662f\u7b2c\u4e94\u4e2a\u70b9\u7684 R=0 \u8981\u7279\u522b\u7ed9\u70b9\u5bbd\u677e\u9650\u5236\n\n#### \u6ce8\u610f\u672c\u5730\u6d4b\u548c\u6d1b\u8c37 Linux \u6d4b\u4e0d\u4e00\u6837\u7684\uff0c\u672c\u5730\u67e5\u770b\u7ed3\u679c\u7684\u8bdd\u628a lim*=1000 \u53bb\u6389\n\n\n\u987a\u4fbf %%% Sooke \u5927\u4ed9\uff0c\u4e00\u904d\u8fc7\n\n```\n//by Judge\n#include<bits/stdc++.h>\n#define R register\n#define ll long long\n#define db double\nconst int M=5e4+3;\ntypedef int arr[M];\n#ifndef Judge\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\n#endif\nchar buf[1<<21],*p1=buf,*p2=buf;\ntemplate<class T>inline void cmax(T& a,T b){if(a<b)a=b;}\ninline int read(){ int x=0,f=1; char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n\tfor(;isdigit(c);c=getchar()) x=x*10+c-'0'; return x*f;\n} inline db dread(){ db x=0,y=0.1,f=1; char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n\tfor(;isdigit(c);c=getchar()) x=x*10+c-'0';\n\tfor(c=='.'&&(c=getchar());isdigit(c);c=getchar())\n\t\tx=x+(c-48)*y,y*=0.1; return x*f;\n} int n,lim; db x[M],y[M],z[M],ansx,ansy,BR;\ninline int random(int l,int r){\n\treturn l+rand()%(r-l+1);\n}\ninline db dis(db x,db y,db a,db b){\n\treturn sqrt((x-a)*(x-a)+(y-b)*(y-b));\n}\ninline db get(db q,db p){ db ans=0;\n\tfor(R int i=1;i<=n;++i)\n\t\tcmax(ans,dis(x[i],y[i],q,p)+z[i]);\n\treturn ans;\n} db rat,ans=1e9,mx=-1;\nint xx=0;\ninline void SA(db st,db ed,db delta){  //\u4e0d\u662f\u540e\u7f00\u6570\u7ec4\u3010\u96fe\n\tR db fx=ansx,fy=ansy,res=ans;\n\tfor(R db tx,ty,tans,DE;st>=ed;st*=delta){ ++xx;\n\t\tif(clock()-BR>=lim) //\u5957\u8def\u3010\u6ed1\u7a3d\n\t\t\tprintf(\"%.2lf %.2lf \",ansx,ansy),\n\t\t\tprintf(\"%.2lf\\n\",ans),exit(0);\n\t\ttx=fx+random(-st*10000,st*10000)/10000.0,\n\t\tty=fy+random(-st*10000,st*10000)/10000.0;\n\t\ttans=get(tx,ty),DE=res-tans;\n\t\tif(res>tans||exp(DE*rat/st)*RAND_MAX>rand()){\n\t\t\tfx=tx,fy=ty,res=tans; if(res<ans) ans=res,ansx=tx,ansy=ty;\n\t\t}\n\t}\n}\nint main(){ srand(19260817),n=read(); //\u5766\u514b\u9884\u8b66\n\tfor(R int i=1;i<=n;++i)\n\t\tx[i]=dread(),y[i]=dread(),z[i]=dread();\n\tmx=*std::max_element(z+1,z+1+n); //\u8ddf\u7740sooke\u5927\u4ed9\u53c8\u5b66\u4f1a\u4e86\u4e00\u4e2a\u51fd\u6570\uff1f\n\tansy/=n,lim=(n<=1000||!mx)?817:1926; //\u5766\u514b\u9884\u8b66 X2\n\tBR=clock(),rat=mx?((int)z[1]&1?100:50):1000;\n\tfor(lim*=1000;1;SA(1e4,1e-4,mx?0.9:0.92));\n}\n```",
        "postTime": 1552480372,
        "uid": 38576,
        "name": "J\u03bcdge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5252 \u3010[LnOI2019]\u4e1c\u4eac\u590f\u65e5\u76f8\u4f1a\u3011"
    }
]