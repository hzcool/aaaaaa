[
    {
        "content": "\u4e00\u9053\u4e0d\u9519\u7684\u9898\u76ee\uff0c\u601d\u8def\u6bd4\u8f83\u7075\u6d3b\uff0c\u4f46\u7801\u91cf\u4e0d\u5927\uff0c\u5728\u73b0\u5728\u7684\u65f6\u7a7a\u9650\u5236\u4e0b\u4e5f\u57fa\u672c\u4e0d\u4f1a\u51fa\u73b0\u88ab\u5361\u7684\u60c5\u51b5\uff0c\u603b\u4f53\u8fd8\u662f\u5f88\u597d\u7684\u3002\n\n\u5f53\u65f6\u770b\u5230\u9898\u76ee\u7684\u989c\u8272\u6211\u5c31**\u4e86\uff0c\u521a\u5f00\u59cb\u6ca1\u6709\u601d\u8def\uff0c\u60f3\u53c2\u8003\u9898\u89e3\u53c8\u53d1\u73b0\u5927\u4f6c\u4eec\u8981\u4e48\u8bb2\u5f97\u5341\u5206\u6df1\u5965\u8981\u4e48\u8bb2\u5f97\u5341\u5206\u7b80\u7565\uff0c\u4e0d\u8fc7\u540e\u6765\u6709\u4e86\u601d\u8def\u4e4b\u540e\u5199\u8d77\u6765\u4e5f\u4e0d\u4f1a\u592a\u96be\u3002\u6240\u4ee5\u6211\u5c31\u5199\u4e00\u7bc7~~\u81ea\u8ba4\u4e3a~~\u6d45\u663e\u6613\u61c2\u7684\u9898\u89e3\u5427\u3002\n\n\u53ef\u80fd\u548c\u6709\u4e9b\u5927\u4f6c\u5b9e\u73b0\u65b9\u6cd5\u76f8\u540c\uff0c\u4e0d\u8fc7\u6211\u4f1a\u5c3d\u53ef\u80fd\u8bb2\u5f97\u6e05\u6670\u7684\uff01\n\n------------\n\u5b9e\u73b0\u6d41\u7a0b\uff1adfs+\u6811\u5f62DP+\u5355\u8c03\u961f\u5217\n\n\u601d\u8def\uff1a\n \n\u7531\u4e8e\u8fd9\u4e2a\u516c\u56ed\u6709$N$\u5ea7\u5c9b\u5c7f\u548c$N$\u5ea7\u6865\uff0c\u5c31\u76f8\u5f53\u4e8e\u4e00\u4e2a\u7531$N$\u4e2a\u8282\u70b9\u548c$N$\u6761\u8fb9\u6784\u6210\u7684\u65e0\u5411\u56fe\u3002\u663e\u7136\uff0c\u8fd9\u6837\u7684\u4e00\u4e2a\u65e0\u5411\u56fe\u5c31\u662f\u4e00\u4e2a\u57fa\u73af\u6811\u68ee\u6797\u3002\n\n\u56e0\u6b64\uff0c\u6839\u636e\u9898\u610f\uff0c\u8981\u4f7f\u7ecf\u8fc7\u7684\u603b\u8def\u5f84\u6700\u957f\u4e14\u6bcf\u68f5\u57fa\u73af\u6811\u90fd\u53ea\u80fd\u7ecf\u8fc7\u4e00\u6b21\uff0c\u663e\u7136\u7b54\u6848\u5c31\u662f\u6bcf\u68f5\u57fa\u73af\u6811\u7684\u6700\u957f\u94fe\uff0c\u6216\u8005\u4e5f\u53ef\u4ee5\u53eb\u76f4\u5f84\u7684\u548c\u3002\u5982\u4f55\u6c42\u57fa\u73af\u6811\u7684\u76f4\u5f84\u5462\uff1f\u548c\u6c42\u6811\u7684\u76f4\u5f84\u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7\u8981\u591a\u8003\u8651\u8fd9\u4e2a\u73af\u7f62\u4e86\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u57fa\u73af\u6811\uff0c\u6211\u4eec\u5148\u628a\u8fd9\u4e2a\u73af\u770b\u505a\u4e00\u4e2a\u6574\u4f53\u5e76\u4f5c\u4e3a\u8fd9\u68f5\u57fa\u73af\u6811\u7684\u6839\u8282\u70b9\uff0c\u5c31\u6210\u4e3a\u4e86\u4e00\u68f5\u666e\u901a\u7684\u6811\uff0c\u4e4b\u540e\u518d\u5bf9\u73af\u8fdb\u884c\u8ba8\u8bba\u3002\u57fa\u73af\u6811\u7684\u76f4\u5f84\u663e\u7136\u6709\u4e0b\u9762\u4e24\u79cd\u53ef\u80fd\uff1a\n\n1.  \u5728\u201c\u6839\u8282\u70b9\u201d\u7684\u67d0\u4e00\u68f5\u5b50\u6811\u4e2d\n1.  \u7ecf\u8fc7\u201c\u6839\u8282\u70b9\u201d\uff0c\u5728\u201c\u6839\u8282\u70b9\u201d\u7684\u67d0\u4e24\u68f5\u5b50\u6811\u4e2d\n\n\u5bf9\u4e8e\u4e0a\u9762\u7684\u4e24\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u5206\u7c7b\u8ba8\u8bba\uff0c\u6700\u540e\u53d6\u5927\u7684\u7b54\u6848\u5c31\u53ef\u4ee5\u4e86\u3002\u5728\u5904\u7406\u8fd9\u4e9b\u4e4b\u524d\uff0c\u5e94\u8be5\u5148\u627e\u51fa\u5f53\u524d\u57fa\u73af\u6811\u7684\u73af\uff0c\u8fd9\u6b65\u7528dfs\u5b9e\u73b0\u5c31\u53ef\u4ee5\u3002\u627e\u51fa\u6765\u540e\uff0c\u5c06\u5b83\u4eec\u4f5c\u4e0a\u6807\u8bb0\uff0c\u65b9\u4fbf\u4e4b\u540e\u7684\u64cd\u4f5c\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u5bf9\u201c\u6839\u8282\u70b9\u201d\u7684\u6bcf\u68f5\u5b50\u6811\u5355\u72ec\u8ba8\u8bba\uff0c\u6c42\u6bcf\u68f5\u5b50\u6811\u7684\u76f4\u5f84\uff0c\u53d6\u5176\u4e2d\u6700\u5927\u7684\u7b54\u6848\u5c31\u53ef\u4ee5\u4e86\u3002\u201c\u6839\u8282\u70b9\u201d\u7684\u6bcf\u68f5\u5b50\u6811\u4e5f\u5c31\u662f\u4ee5\u73af\u4e0a\u7684\u6bcf\u4e2a\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u3002\u8fd9\u6b65\u53ef\u4ee5\u7528\u6811\u5f62DP\u6765\u89e3\u51b3\uff0c\u5e76\u4e14\u5728\u89e3\u51b3\u8fd9\u79cd\u60c5\u51b5\u7684\u540c\u65f6\uff0c\u8fd8\u80fd\u5904\u7406\u51fa\u4ee5\u73af\u4e0a\u6bcf\u4e2a\u8282\u70b9\u4e3a\u8d77\u70b9\uff0c\u8d70\u5411\u4ee5\u5176\u4e3a\u6839\u7684\u5b50\u6811\uff0c\u80fd\u591f\u5230\u8fbe\u7684\u6700\u8fdc\u8ddd\u79bb\uff0c\u4e3a\u5904\u7406\u4e0b\u4e00\u79cd\u60c5\u51b5\u505a\u51c6\u5907\u3002\u8fd9\u91cc\u5c06\u8fd9\u4e2a\u6570\u636e\u5b58\u5165$d$\u6570\u7ec4\uff0c\u5373$d_i$\u4ee3\u8868$i$\u8282\u70b9\u5bf9\u5e94\u7684\u503c\u3002\u6ce8\u610f\uff0c\u4e3a\u4e86\u65b9\u4fbf\uff0c\u5728\u4e4b\u524d\u627e\u51fa\u73af\u5e76\u6807\u8bb0\u4e4b\u540e\uff0c\u73af\u4e0a\u7684\u8282\u70b9\u90fd\u4ee5\u5728\u73af\u4e0a\u7684\u6b21\u5e8f\u547d\u540d\uff0c\u5373$i$\u8282\u70b9\u5b9e\u9645\u5bf9\u5e94\u7684\u662f\u73af\u4e0a\u7684\u7b2c$i$\u4e2a\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u663e\u7136\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230\u73af\u4e0a\u7684\u4e24\u4e2a\u8282\u70b9$i,j$\uff0c\u4f7f\u5f97$d_i+d_j+dist_{i,j}$\u6700\u5927\uff0c\u5176\u4e2d$dist_{i,j}$\u8868\u793a\u8282\u70b9$i,j$\u5728\u73af\u4e0a\u7684\u8ddd\u79bb\u3002\u5982\u679c\u4e00\u4e2a\u4e2a\u679a\u4e3e\u7684\u8bdd\uff0c\u663e\u7136\u65f6\u95f4\u590d\u6742\u5ea6\u592a\u5927\uff0c\u4e0d\u53ef\u884c\u3002\u8fd9\u91cc\u53ef\u4ee5\u65ad\u5f00\u73af\u5c06\u65ad\u5f00\u540e\u7684\u94fe\u590d\u5236\u5230\u4e24\u500d\u7684\u957f\u5ea6\uff0c\u7528\u5355\u8c03\u961f\u5217\u8fdb\u884c\u4f18\u5316\uff0c\u5728\u4e0b\u9762\u4f1a\u8fdb\u884c\u8be6\u7ec6\u8bb2\u89e3\u3002\n\n\u4e0a\u9762\u7684\u601d\u8def\u53ef\u80fd\u8bb2\u5f97\u6bd4\u8f83\u7b3c\u7edf\uff0c\u5982\u679c\u6ca1\u770b\u61c2\u53ef\u4ee5\u63a5\u4e0b\u53bb\u770b\u3002\n\n\u4e0b\u9762\u7ed9\u51fa\u5177\u4f53\u5b9e\u73b0\u6d41\u7a0b\u3002\n\n\n------------\n\u5177\u4f53\u5b9e\u73b0\u6d41\u7a0b\uff1a\n\n**1\u3001\u8f93\u5165**\n\n\u8f93\u5165\u5c31\u662f\u6700\u666e\u901a\u7684\u90bb\u63a5\u8868\u5b58\u56fe\uff0c\u5c31\u4e0d\u591a\u8bf4\u4e86\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801\u3002\n\n\u8f93\u5165\u4ee3\u7801\uff1a\n```cpp\nll n,tot;\nll edge[2*N],head[N],ver[2*N],Next[2*N];\n\nil void add(int x,int y,int z)\n{\n    edge[++tot]=z,ver[tot]=y,Next[tot]=head[x],head[x]=tot;\n}//\u90bb\u63a5\u8868\u63d2\u5165\n\ncin>>n;\nfor(int i=1;i<=n;i++)\n{\n    int y,z;\n    scanf(\"%d %d\",&y,&z);\n    add(i,y,z);\n    add(y,i,z);//\u65e0\u5411\u8fb9\u6210\u5bf9\u5b58\u50a8\n}\n```\n\n------------\n**2\u3001dfs\u627e\u73af**\n\n\u5c31\u662f\u57fa\u672c\u7684\u6df1\u641c\uff0c\u6df1\u641c\u7684\u540c\u65f6\u6807\u8bb0\u662f\u5426\u8d70\u8fc7\uff0c\u8d70\u5230\u8d70\u8fc7\u7684\u8282\u70b9\u5373\u4e3a\u627e\u5230\u4e86\u73af\uff0c\u5728\u8fd9\u91cc\u6211\u4eec\u628a\u8fd9\u4e2a\u8282\u70b9\u53eb\u505a\u73af\u7684\u8854\u63a5\u70b9\u3002\u5982\u4f55\u5254\u51fa\u8fd9\u4e2a\u73af\u5462\uff1f\u5728\u8fd9\u91cc\u5b9a\u4e49\u4e00\u4e2abool\u7c7b\u578b\u7684dfs\u51fd\u6570\uff0c\u5f53\u627e\u5230\u73af\u65f6\u8fd4\u56de\u503c\u4e3a1\uff0c\u56de\u6eaf\u65f6\u4e00\u76f4\u5230\u7b2c\u4e09\u6b21\u8d70\u5230\u8854\u63a5\u70b9\u65f6\uff0c\u5c06\u8fd4\u56de\u503c\u6062\u590d\u4e3a0\uff0c\u5c31\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\n\n\u6211\u4eec\u8981\u5bf9\u73af\u4e0a\u7684\u8282\u70b9\u5b58\u50a8\u4e00\u4e9b\u4fe1\u606f\u3002\u6211\u4eec\u5c06\u73af\u7684\u8854\u63a5\u70b9\u5b9a\u4e3a$1$\u53f7\u8282\u70b9\uff0c\u6309\u56de\u6eaf\u65b9\u5411\u4f9d\u6b21\u4e3a$2,3,...,n$\u53f7\u8282\u70b9\uff0c\u8868\u793a\u8fd9\u4e2a\u73af\u7531$n$\u4e2a\u8282\u70b9\u7ec4\u6210\u3002\u5bf9\u4e8e$i$\u53f7\u8282\u70b9\uff0c\u8be5\u8282\u70b9\u7684\u539f\u59cb\u7f16\u53f7\uff0c\u5373\u8f93\u5165\u65f6\u7684\u7f16\u53f7\u4e3a$x$\uff0c\u6211\u4eec\u8981\u5b58\u50a8\u4ee5\u4e0b\u4fe1\u606f\uff1a\n\n- $v_x=1$\uff0c\u8868\u793a\u8fd9\u4e2a\u8282\u70b9\u5728dfs\u65f6\u88ab\u8d70\u8fc7\u4e86\u3002\u7279\u522b\u7684\uff0c\u82e5\u8be5\u8282\u70b9\u662f\u73af\u7684\u8854\u63a5\u70b9\uff0c\u5219\u4ee4$v_x=2$\uff0c\u7528\u6765\u8fa8\u8bc6\u8854\u63a5\u70b9\u3002\u8fd9\u4e2a\u6807\u8bb0\u5728dfs\u65f6\u8d70\u8fc7\u7684\u6240\u6709\u8282\u70b9\u90fd\u8981\u505a\u3002\n- $v2_x=1$\uff0c\u8868\u793a\u8fd9\u4e2a\u8282\u70b9\u6240\u5728\u7684\u57fa\u73af\u6811\u5df2\u7ecf\u8d70\u8fc7\u4e86\u3002\u8fd9\u4e2a\u6807\u8bb0\u4e4b\u540e\u6240\u6709\u8282\u70b9\u90fd\u8981\u505a\uff0c\u76ee\u7684\u662f\u5224\u65ad\u4e00\u68f5\u57fa\u73af\u6811\u662f\u5426\u8d70\u8fc7\uff0c\u5728\u8fd9\u91cc\u5148\u7ed9\u73af\u4e0a\u7684\u70b9\u6807\u8bb0\u662f\u4e3a\u4e86\u540e\u9762\u65b9\u4fbf\u3002\n- $r_i=x$\uff0c\u8868\u793a\u73af\u4e0a\u7684$i$\u53f7\u8282\u70b9\u7684\u539f\u59cb\u7f16\u53f7\u4e3a$x$\u3002\n- $s_i=s_{i-1}+dist_{i-1,i}$\uff0c\u6b64\u65f6$dist_{i-1,i}$\u5c31\u7b49\u4e8e\u5f53\u524d\u904d\u5386\u5230\u7684\u8fb9\u7684\u957f\u5ea6\u3002\u7279\u522b\u7684\uff0c\u7531\u4e8e\u540e\u9762\u7684\u64cd\u4f5c\u8981\u65ad\u73af\u5e76\u590d\u5236\u94fe\uff0c\u590d\u5236$s$\u6570\u7ec4\u65f6\u4e3a\u4e86\u4fdd\u8bc1\u590d\u5236\u6570\u636e\u7684\u6b63\u786e\u6027\uff0c\u8981\u5728$0$\u53f7\u4f4d\u7f6e\u5b58\u50a8\u4e00\u4e2a\u6570\u636e\uff0c\u4f7f\u5f97$s_0=s_1-dist_{0,1}$\u3002\u8fd9\u4e2a\u6b65\u9aa4\u5230\u540e\u9762\u590d\u5236\u7684\u65f6\u5019\u53ef\u4ee5\u66f4\u597d\u7684\u7406\u89e3\u3002\n\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u8981\u989d\u5916\u5f00\u4e00\u4e2a$v2$\u6570\u7ec4\u6765\u5224\u5b9a\u662f\u5426\u8d70\u8fc7\u5462\uff1f\u56e0\u4e3a\u5728$v$\u6570\u7ec4\u53ea\u662f\u7528\u6765\u5224\u5b9adfs\u65f6\u662f\u5426\u8d70\u8fc7\uff0c\u800cdfs\u65f6\u5e76\u4e0d\u662f\u6240\u6709\u8282\u70b9\u90fd\u4f1a\u88ab\u904d\u5386\u5230\uff0c\u800c$v2$\u6570\u7ec4\u5728\u4e4b\u540e\u7684\u64cd\u4f5c\u4e2d\u53ef\u4ee5\u4fdd\u8bc1\u6bcf\u4e2a\u8282\u70b9\u90fd\u88ab\u904d\u5386\u5230\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u68f5\u57fa\u73af\u6811\u662f\u5426\u8d70\u8fc7\u7684\u4f9d\u636e\u3002\n\n\u5728dfs\u65f6\u8fd8\u6709\u4e00\u4e2a\u70b9\u8981\u6ce8\u610f\uff0c\u56e0\u4e3a\u904d\u5386\u65f6\u8981\u4fdd\u8bc1\u8d70\u5411\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u4e0d\u662f\u4e0a\u4e00\u4e2a\u8282\u70b9\uff0c\u56e0\u6b64\u6211\u4eec\u8981\u5bf9\u6b64\u8fdb\u884c\u7279\u5224\u3002\u600e\u4e48\u7279\u5224\u5462\uff1f\u539f\u6765\u6211\u6709\u4e00\u4e2a\u60f3\u6cd5\uff0c\u5b58\u50a8\u4e0a\u4e00\u4e2a\u8282\u70b9\u7684\u7f16\u53f7\uff0c\u4fdd\u8bc1\u4e0d\u518d\u8d70\u5230\u8fd9\u4e2a\u8282\u70b9\u3002\u7136\u800c\u770b\u4e86\u6837\u4f8b\u4e4b\u540e\u6211\u5c31\u628a\u8fd9\u4e2a\u60f3\u6cd5\u5426\u51b3\u4e86\uff08\u8fd9\u4e2a\u6837\u4f8b\u771f\u7684\u826f\u5fc3\uff0c\u81ea\u5df1\u770b\u770b\u5c31\u77e5\u9053\u539f\u56e0\u4e86\uff09\u3002\u4e8e\u662f\u53ea\u80fd\u628a\u601d\u8def\u5f80\u8fb9\u4e0a\u653e\u3002\n\n\u4f17\u6240\u5468\u77e5\uff0c\u90bb\u63a5\u8868\u5b58\u65e0\u5411\u56fe\u65f6\u662f\u5c06\u540c\u4e00\u6761\u8fb9\u62c6\u4f5c\u4e24\u6761\u6709\u5411\u8fb9\u5206\u5f00\u5b58\u7684\uff0c\u800c\u6307\u5411\u8fd9\u4e24\u6761\u6709\u5411\u8fb9\u7684\u6307\u9488\u7684\u6570\u503c\u662f\u76f8\u90bb\u7684\uff0c\u5e76\u4e14\u5176\u4e2d\u5076\u6570\u8f83\u5927\uff0c\u5947\u6570\u8f83\u5c0f\u3002\u5229\u7528\u8fd9\u4e2a\u7279\u70b9\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5224\u65ad\u5f53\u524d\u5faa\u73af\u5230\u7684\u8fb9\u662f\u5426\u662f\u521a\u521a\u8d70\u8fc7\u7684\u8fd9\u6761\u8fb9\u3002\u64cd\u4f5c\u5982\u4e0b\uff1a\n\n```cpp\nif(i!=((la-1)^1)+1)//la\u6307\u5411\u521a\u521a\u8d70\u8fc7\u7684\u90a3\u6761\u8fb9\uff0ci\u6307\u5411\u73b0\u5728\u5faa\u73af\u5230\u7684\u8fd9\u6761\u8fb9\n//\u5f53\u8fd9\u4e2a\u6761\u4ef6\u6210\u7acb\u65f6\uff0c\u8bf4\u660e\u5f53\u524d\u5faa\u73af\u5230\u7684\u8fb9\u4e0d\u662f\u521a\u521a\u8d70\u8fc7\u7684\u90a3\u6761\u8fb9\n//((x-1)^1)+1\uff0c\u6307\u5411\u4e0ex\u76f8\u90bb\u7684\u6570y\uff0c\u5e76\u4e14x,y\u4e2d\u5076\u6570\u8f83\u5927\u3002\u4f8b\u5982\uff0c\u82e5x=3\uff0c\u5219y=4\uff1b\u82e5x=4\uff0c\u5219y=3\u3002\n//\u539f\u7406\u8bf7\u8bfb\u8005\u81ea\u5df1\u601d\u8003\n```\n\n\ndfs\u627e\u73af\u4ee3\u7801\uff1a\n```cpp\nll cnt;\nll v[N],v2[N],r[N],s[N];\n\nil bool dfs(int now,int la)\n{\n    if(v[now]==1)\n    {\n        v[now]=2,r[++cnt]=now,v2[now]=1;\n        return 1;//\u8fd4\u56de\u503c\u6539\u4e3a1\n    }//\u627e\u5230\u8854\u63a5\u70b9\n    v[now]=1;//\u7ef4\u62a4\u8bbf\u95ee\u6570\u7ec4\n    for(int i=head[now];i;i=Next[i])\n        if(i!=((la-1)^1)+1 && dfs(ver[i],i))//\u5982\u679c\u5f53\u524d\u8fb9\u4e0d\u662f\u4e0a\u4e00\u6761\u8fb9\u5e76\u4e14\u5f53\u524d\u8282\u70b9\u5728\u73af\u4e0a\n        {\n            if(v[now]!=2)//\u5f53\u524d\u8282\u70b9\u4e0d\u662f\u8854\u63a5\u70b9\n                r[++cnt]=now,v2[now]=1,s[cnt]=s[cnt-1]+edge[i];\n            else//\u662f\u8854\u63a5\u70b9\n            {\n                s[st-1]=s[st]-edge[i];\n                return 0;//\u8fd4\u56de\u503c\u6539\u4e3a0\n            }\n            return 1;//\u8fd4\u56de1\n        }\n    return 0;\t\n}\n```\n\n\n------------\n**3\u3001\u5904\u7406\u7b2c\u4e00\u79cd\u60c5\u51b5**\n\n\u5bf9\u4e8e\u73af\u4e0a\u7684\u6bcf\u4e2a\u8282\u70b9\uff0c\u6c42\u4ee5\u5176\u4e3a\u6839\u7684\u5b50\u6811\u7684\u76f4\u5f84\u3002\u8fd9\u5c31\u662f\u6c42\u6811\u7684\u76f4\u5f84\u7684\u6a21\u677f\u95ee\u9898\u4e86\uff0c\u7528\u6811\u5f62DP\u5c31\u53ef\u4ee5\u89e3\u51b3\uff0c\u4e0d\u61c2\u7684\u53ef\u4ee5[\u70b9\u51fb\u98df\u7528](https://www.cnblogs.com/TEoS/p/11351462.html)\uff0c\u8fd9\u91cc\u5c31\u4e0d\u8d58\u8ff0\u4e86\u3002\n\n\u5bf9\u4e8e\u4ee3\u7801\u6709\u4e00\u70b9\u8981\u8bf4\u660e\u7684\uff0c\u56e0\u4e3a\u5728\u8fd9\u91cc$cnt$\u7684\u8ba1\u7b97\u662f\u6ca1\u6709\u91cd\u7f6e\u7684\uff0c\u56e0\u6b64\u4f1a\u4e00\u76f4\u52a0\u4e0b\u53bb\uff0c\u6240\u4ee5\u5728dp\u524d\u8981\u5148\u5b58\u50a8\u8d77\u59cb\u503c\u3002\n\n\u5904\u7406\u7b2c\u4e00\u79cd\u60c5\u51b5\u4ee3\u7801\uff1a\n```cpp\nll ans,ans2;//ans\u5b58\u50a8\u5f53\u524d\u5b50\u6811\u7684\u76f4\u5f84\uff0cans2\u5b58\u50a8\u7b2c\u4e00\u79cd\u60c5\u51b5\u7684\u7b54\u6848\nll d[N];\n\nst=cnt+1,ans2=0;\nil void tree_dp(int now)\n{\n    v2[now]=1;\n    for(int i=head[now];i;i=Next[i])\n    {\n        int y=ver[i];\n        if(v2[y])\n            continue;\n        tree_dp(y);\n        ans=max(ans,d[now]+d[y]+edge[i]);\n        d[now]=max(d[now],d[y]+edge[i]);\n    }\n}//\u6811\u5f62DP\u6c42\u6811\u7684\u76f4\u5f84\n\nfor(int i=st;i<=cnt;i++)\n{\n    ans=0;//\u521d\u59cb\u5316\n    tree_dp(r[i]);\n    ans2=max(ans2,ans);//\u627e\u51fa\u6700\u5927\u7684\u7b54\u6848\n}\n```\n\n\n------------\n**4\u3001\u5904\u7406\u7b2c\u4e8c\u79cd\u60c5\u51b5**\n\n\u627e\u51fa\u6ee1\u8db3$d_i+d_j+dist_{i,j}$\u6700\u5927\u7684$i,j$\uff0c\u679a\u4e3e\u663e\u7136\u4f1a\u8d85\u65f6\u3002\u5bf9\u4e8e\u8fd9\u7c7b\u73af\u5f62\u95ee\u9898\uff0c\u6709\u4e00\u79cd\u6bd4\u8f83\u5e38\u7528\u7684\u505a\u6cd5\u5c31\u662f\u4ece\u67d0\u4e2a\u70b9\u65ad\u5f00\u73af\u5e76\u590d\u5236\u4e3a\u4e00\u6761\u4e24\u500d\u957f\u5ea6\u7684\u94fe\u3002\u590d\u5236\u8fc7\u7a0b\u53ea\u8981\u5c06\u4e00\u4e9b\u5173\u952e\u4fe1\u606f\u518d\u5b58\u4e00\u904d\u5c31\u53ef\u4ee5\u4e86\u3002\u4e8e\u662f\u95ee\u9898\u53ef\u4ee5\u7b49\u4ef7\u4e3a\uff1a\u5728\u4e00\u6761\u957f\u5ea6$2n$\u7684\u94fe\u4e0a\uff0c\u627e\u5230\u4e24\u4e2a\u6ee1\u8db3$abs(i-j)\\leq n$\u7684\u8282\u70b9$i,j$\uff0c\u4f7f\u5f97$d_i+d_j+dist_{i,j}$\u6700\u5927\u3002\n\n\u8fd9\u4e2a\u95ee\u9898\u662f\u4e0d\u662f\u4e00\u8138\u53ef\u4ee5\u7528\u5355\u8c03\u961f\u5217\u4f18\u5316\u7684\u4e9a\u5b50\uff1f~~\u8981\u4f60\u5be1~~ \u6839\u636e\u5355\u8c03\u961f\u5217\u7684\u601d\u60f3\uff0c\u53ca\u65f6\u6392\u9664\u4e00\u5b9a\u4e0d\u662f\u6700\u4f18\u7684\u51b3\u7b56\u3002\u56e0\u4e3a\u8981\u627e\u7684\u662f\u6700\u5927\u7684$d_i+d_j+dist_{i,j}$\uff0c\u5176\u4e2d$dist_{i,j}$\u5373\u4e3a$s_i-s_j(j<i)$\u3002\u6574\u7406\u540e\u5373\u4e3a\uff1a$d_i+s_i+d_j-s_j$\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9$i$\uff0c\u663e\u7136\u5982\u679c\u4e00\u4e2a\u8282\u70b9$j(j<i)$\u6ee1\u8db3$d_j-s_j\\leq d_i-s_i$\uff0c\u90a3\u4e48\u6839\u636e\u6700\u4f18\u6027\uff0c$j$\u662f\u4e00\u5b9a\u4e0d\u4f1a\u88ab\u9009\u4f5c\u6700\u7ec8\u51b3\u7b56\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u5c06\u5176\u4ece\u7b54\u6848\u961f\u5217\u4e2d\u5220\u9664\u3002\u8bb2\u5230\u8fd9\u91cc\uff0c\u5b9e\u73b0\u8d77\u6765\u5c31\u5f88\u7b80\u5355\u4e86\u3002\n\n\u5bf9\u4e8e\u4ee3\u7801\u6709\u4e00\u70b9\u8981\u8bf4\u660e\u7684\uff0c\u56e0\u4e3a$cnt$\u6ca1\u6709\u91cd\u7f6e\uff0c\u6839\u636e\u5b9a\u4e49\u73af\u4e0a\u8282\u70b9\u7684\u6570\u91cf\u4e3a$cnt-st+1$\uff0c\u56e0\u6b64\u65ad\u73af\u590d\u5236\u540e\u7684\u8282\u70b9\u8303\u56f4\u5373\u4e3a$st~cnt+cnt-st+1$\u3002\u8fd9\u6837\uff0c\u8282\u70b9$i$\u5bf9\u5e94\u7684\u53e6\u4e00\u4e2a\u8282\u70b9\u5373\u4e3a$i+cnt-st+1$\u3002\n\n\u5904\u7406\u7b2c\u4e8c\u79cd\u60c5\u51b5\u4ee3\u7801\uff1a\n\n```cpp\nint ans3;\nll dp[2*N];\n\nans3=0;\nfor(int i=st;i<=cnt;i++)\n{\n    dp[i+cnt-st+1]=dp[i]=d[r[i]]; \n    s[i+cnt-st+1]=s[i+cnt-st]+s[i]-s[i-1]; //\u548c\u7b2c2\u6b65\u9012\u63a8s\u6570\u7ec4\u540c\u7406\uff0cs[i]-s[i-1]\u5373\u4e3a\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\n}//\u590d\u5236\u73af\ndeque<int> q;\nfor(int i=st;i<=2*cnt-st+1;i++)//\u5bf9\u590d\u5236\u540e\u7684\u94fe\u8fdb\u884c\u904d\u5386\n{\n    while(q.size() && q.front()<=i-cnt+st-1)\n        q.pop_front();//\u6392\u9664\u8d85\u51fa\u8303\u56f4\u7684\u51b3\u7b56\n    if(q.size()) \n        ans3=max(ans3,dp[i]+dp[q.front()]+s[i]-s[q.front()]);//\u66f4\u65b0\u7b54\u6848\n    while(q.size() && dp[q.back()]-s[q.back()]<=dp[i]-s[i])\n        q.pop_back();//\u6392\u9664\u8fc7\u65f6\u7684\u51b3\u7b56\n \tq.push_back(i);//\u5c06\u5f53\u524d\u51b3\u7b56\u63d2\u5165\u961f\u5217\n}\n```\n\n------------\n\u8fd9\u6837\u5c31\u7ed3\u675f\u4e86\uff0c\u4e5f\u4e0d\u4f1a\u592a\u590d\u6742\u5427\u3002\n\n\u6700\u540e\u5949\u4e0a\u5b8c\u6574\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#define ll long long\n#define il inline\nusing namespace std;\nconst int N=1e6+100;\nll n,tot=0,cnt,ans,anss,st,ans2,ans3;\nll edge[2*N],head[N],ver[2*N],Next[2*N];\nll v[N],v2[N],r[N],d[N],dp[2*N],s[N];\nil void add(int x,int y,int z)\n{\n    edge[++tot]=z,ver[tot]=y,Next[tot]=head[x],head[x]=tot;\n}\nil bool dfs(int now,int la)\n{\n    if(v[now]==1)\n    {\n        v[now]=2,r[++cnt]=now,v2[now]=1;\n        return 1;\n    }\n    v[now]=1;\n    for(int i=head[now];i;i=Next[i])\n        if(i!=((la-1)^1)+1 && dfs(ver[i],i))\n        {\n            if(v[now]!=2)\n                r[++cnt]=now,v2[now]=1,s[cnt]=s[cnt-1]+edge[i];\n            else\n            {\n                s[st-1]=s[st]-edge[i];\n                return 0;\n            }\n            return 1;\n        }\n    return 0;\t\t\n}//2\u3001dfs\u627e\u73af\nil void tree_dp(int now)\n{\n    v2[now]=1;\n    for(int i=head[now];i;i=Next[i])\n    {\n        int y=ver[i];\n        if(v2[y])\n            continue;\n        tree_dp(y);\n        ans=max(ans,d[now]+d[y]+edge[i]);\n        d[now]=max(d[now],d[y]+edge[i]);\n    }\n}//3\u3001\u5904\u7406\u7b2c\u4e00\u79cd\u60c5\u51b5\nil ll brt(int root)\n{\n    st=cnt+1,ans2=0,ans3=0;\n    dfs(root,0);\n    for(int i=st;i<=cnt;i++)\n    {\n        ans=0;\n        tree_dp(r[i]);\n        ans2=max(ans2,ans);\n        dp[i+cnt-st+1]=dp[i]=d[r[i]];\n        s[i+cnt-st+1]=s[i+cnt-st]+s[i]-s[i-1];\n    }\n    deque<int> q;\n    for(int i=st;i<=2*cnt-st+1;i++)\n    {\n        while(q.size() && q.front()<=i-cnt+st-1)\n            q.pop_front();\n        if(q.size()) \n            ans3=max(ans3,dp[i]+dp[q.front()]+s[i]-s[q.front()]);\n        while(q.size() && dp[q.back()]-s[q.back()]<=dp[i]-s[i])\n            q.pop_back();\n        q.push_back(i);\n    }//4\u3001\u5904\u7406\u7b2c\u4e8c\u79cd\u60c5\u51b5\n    return max(ans2,ans3);//\u53d6\u5927\u7684\u7b54\u6848\n}\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;i++)\n    {\n        int y,z;\n        scanf(\"%d %d\",&y,&z);\n        add(i,y,z);\n        add(y,i,z);\n    }//1\u3001\u8f93\u5165\n    for(int i=1;i<=n;i++)\n        if(!v2[i])//\u5982\u679c\u6ca1\u8d70\u8fc7\u5c31\u8d70\n            anss+=brt(i);//\u52a0\u4e0a\u7b54\u6848\n    cout<<anss;\n    return 0;\n}\n```\n\u8be5\u8bb2\u7684\u90fd\u8bb2\u5f97\u5f88\u6e05\u695a\u4e86\uff0c\u5b8c\u6574\u4ee3\u7801\u91cc\u5c31\u4e0d\u518d\u6ce8\u91ca\u4e86\u3002\n\n\n------------\n\u5e0c\u671b\u5bf9\u5927\u5bb6\u6709\u5e2e\u52a9\uff0c\u6709\u4e0d\u8db3\u4e4b\u5904\u8bf7\u6307\u51fa\u3002",
        "postTime": 1561453757,
        "uid": 91534,
        "name": "TEoS",
        "ccfLevel": 6,
        "title": "P4381 [IOI2008]Island"
    },
    {
        "content": "[\u53ef\u5230\u6211\u7684\u535a\u5ba2\u98df\u7528](https://mivik.gitee.io/2020/solution/ioi2008-island/)\n\n\u8fd9\u9053\u9898\u786e\u5b9e\u975e\u5e38\u7b80\u5355... \u53ea\u662f\u6ca1\u6709\u770b\u61c2\u5176\u4ed6\u9898\u89e3\u4e3a\u4ec0\u4e48\u8981\u7528\u5355\u8c03\u961f\u5217\uff0c\u660e\u660e\u8bb0\u4e24\u4e2a\u6700\u5927\u503c\u5c31\u53ef\u4ee5\u89e3\u51b3\uff1f\n\n---\n\n\u9898\u76ee\u5927\u610f\u662f\u7ed9\u51fa\u4e00\u4e2a\u57fa\u73af\u6811\u68ee\u6797\uff08\u6bcf\u4e00\u4e2a\u70b9\u6709\u4e00\u6761\u65e0\u5411\u8fb9\uff09\uff0c\u8ba9\u4f60\u6c42\u51fa\u6240\u6709\u57fa\u73af\u6811\u7684\u76f4\u5f84\uff08\u5373\u4e00\u6761\u4e0d\u7ecf\u8fc7\u91cd\u590d\u70b9\u7684\u57fa\u73af\u6811\u4e0a\u7684\u6700\u957f\u8def\u5f84\uff09\u4e4b\u548c\u3002\n\n\u6211\u4eec\u8003\u8651\u4e0d\u4f7f\u7528\u90bb\u63a5\u8868\uff0c\u800c\u662f\u53ea\u8bb0\u5f55\u4e00\u4e2a\u70b9\u7684\u8fb9\u7684\u76ee\u6807\u4f4d\u7f6e\uff08 $tar_x$ \uff09\u548c\u8fd9\u6761\u8fb9\u7684\u957f\u5ea6 \uff08 $wei_x$ \uff09\u3002\n\n\u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e\u4e00\u4e2a\u5728\u73af\u4e0a\u7684\u70b9 $x$\uff0c$tar_x$ \u5fc5\u5b9a\u662f\u8fd9\u4e2a\u73af\u4e0a\u7684\u53e6\u4e00\u4e2a\u70b9\u3002\u800c\u5bf9\u4e8e\u4e0d\u5728\u73af\u4e0a\u7684\u70b9\uff0c\u5b83\u4eec\u5fc5\u5b9a\u6784\u6210\u4e00\u4e2a\u6811\u5f62\u7ed3\u6784\uff0c\u800c\u4e14\u6240\u6709\u6811\u7684\u6839\u7684 $tar$ \u5fc5\u5b9a\u662f\u4e00\u4e2a\u73af\u4e0a\u7684\u70b9\u3002\u5f88\u5bb9\u6613\u7406\u89e3\uff0c\u4e0d\u52a0\u8bf4\u660e\u3002\n\n\u4e0b\u9762\uff0c\u5bf9\u4e8e\u57fa\u73af\u6811\u73af\u4e0a\u7684\u6bcf\u4e2a\u70b9 $x$ \uff0c\u6211\u4eec\u79f0\u4e0d\u5728\u73af\u4e0a $tar$ \u4e3a $x$ \u7684\u6240\u6709\u6811\u548c $x$ \u5171\u540c\u7ec4\u6210\u7684\u96c6\u5408\u4e3a\u5916\u73af\u6811\uff08\u81ea\u5df1\u778e\u9020\u7684\u540d\u5b57\uff09\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff1a\n\n![\u4e3a\u4ec0\u4e48\u83ab\u540d\u6709\u4e00\u79cd\u559c\u611f](https://cdn.luogu.com.cn/upload/image_hosting/28yc46cg.png)\n\n\u8fd9\u91cc\u7684 1\u30012\u30013 \u90fd\u662f\u73af\u4e0a\u7684\u70b9\u3002\u90a3\u4e48 1 \u7684\u5916\u73af\u6811\u5c31\u662f $\\{1,5,6,7,8\\}$\uff0c2 \u7684\u5916\u73af\u6811\u662f $\\{2\\}$ \uff0c3 \u7684\u5916\u73af\u6811\u662f $\\{3,4\\}$\u3002\n\n\u6211\u4eec\u8bb0\u4e00\u4e2a\u70b9 $x$ \u7684\u5916\u73af\u6811\u7684\u76f4\u5f84\u4e3a $g_x$ \uff0c\u5916\u73af\u6811\u4e0a\u4ece $x$ \u5f00\u59cb\u7684\u6700\u957f\u94fe\u7684\u957f\u5ea6\u4e3a $f_x$\u3002\u540c\u6837\u4ee5\u4e0a\u9762\u90a3\u5f20\u56fe\u4e3a\u4f8b\u5b50\uff0c\u90a3\u4e48 $f_1$ \u5c31\u662f 7\uff083+4\uff09\uff0c$g_1$ \u5c31\u662f 8\uff084+1+3\uff09\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u4e00\u4e2a\u57fa\u73af\u6811\u7684\u76f4\u5f84\u8981\u4e0d\u662f\u4e00\u4e2a\u5916\u73af\u6811\u7684\u76f4\u5f84\uff0c\u8981\u4e0d\u5c31\u662f $f_i$ +\uff08$i \\to j$\uff09+ $f_j$ \uff08 $i,j$ \u90fd\u662f\u73af\u4e0a\u7684\u70b9\uff09\u3002\n\n\u7b2c\u4e8c\u79cd\u60c5\u51b5\u53ef\u80fd\u4e0d\u592a\u597d\u7406\u89e3\u3002\u4ee5\u4e0a\u56fe\u4e3a\u4f8b\uff0c$4\\to 3\\to 2\\to 1\\to 5\\to 7$ \u5c31\u5c5e\u4e8e\u662f\u7b2c\u4e8c\u79cd\u60c5\u51b5\u3002\n\n\u90a3\u4e48\u63a5\u4e0b\u6765\u5c31\u7b80\u5355\u4e86\u3002\u6211\u4eec\u53ea\u9700\u8981\u7528\u62d3\u6251\u5e8f\u5904\u7406\u51fa\u6bcf\u4e00\u4e2a\u73af\u4e0a\u7684\u70b9\u7684 $f$ \u548c $g$\uff0c\u7136\u540e\u518d\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u73af\u5904\u7406\u3002\u6211\u4eec\u4ece\u4efb\u610f\u4e00\u4e2a\u70b9\u5f00\u59cb\uff0c\u5c06\u6574\u4e2a\u73af\u8f6c\u6362\u4e3a\u4e00\u6761\u94fe\uff08\u6bd4\u5982\u4e0a\u56fe\u4e2d\u7684\u73af\u4ece 1 \u5f00\u59cb\u4f1a\u53d8\u6210 $[1,2,3]$ \uff0c\u7136\u540e\u4ece\u5de6\u5230\u53f3\u626b\u3002\u6211\u4eec\u6ce8\u610f\u5230\uff0c\u5bf9\u4e8e\u4e24\u4e2a\u70b9 $i$ \u548c $j$\uff08$i$ \u5728\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\u5c0f\u4e8e $j$\uff09\uff0c$(i\\to j)$ \u4e8b\u5b9e\u4e0a\u662f\u53ef\u4ee5\u9009\u62e9\u4e24\u6761\u4e0d\u540c\u7684\u8def\u5f84\uff08\u5982\u4e0a\u56fe $(1\\to 2)$ \u53ef\u4ee5\u662f $1\\to 2$ \u6216 $1\\to 3\\to 2$\u3002\u56e0\u6b64\u6211\u4eec\u4ee4\u73af\u4e0a\u8def\u5f84\u957f\u5ea6\u7684\u524d\u7f00\u548c\u4e3a $pre$\uff0c\u73af\u7684\u8def\u5f84\u603b\u957f\u5ea6\u4e3a $len$\uff0c\u518d\u8bb0\uff08\u4e0b\u9762 $i$ \u7684\u4e0b\u6807\u5c0f\u4e8e $j$\uff09\uff1a\n$$\n\\begin{aligned}\nret1&=\\max\\{f_i+f_j+pre_j-pre_i\\}\\\\\nret2&=\\max\\{f_i+f_j+len-(pre_j-pre_i)\\}\n\\end{aligned}\n$$\n\u6211\u4eec\u53d1\u73b0 $i$ \u548c $j$ \u7684\u8d21\u732e\u5728\u4e0a\u9762\u4e24\u4e2a\u5f0f\u5b50\u4e2d\u662f\u72ec\u7acb\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u8bb0\u4e00\u4e0b\u5f53\u524d\u4e0b\u6807\u5c0f\u4e8e $j$ \u7684 \u6240\u6709 $i$ \u4e2d\u6700\u5927\u7684 $f_i-pre_i$\uff08 $m1$ \uff09 \u548c $f_i+pre_i$\uff08 $m2$ \uff09\uff0c\u7136\u540e\u6bcf\u6b21\u65b0\u626b\u5230\u4e00\u4e2a\u70b9\u5c31\u53ef\u4ee5\u7528 $m1$ \u548c $m2$ \u66f4\u65b0\u3002\n\n\u90a3\u4e48\u6700\u540e\u7684\u7b54\u6848\u5c31\u662f\uff08$i$ \u4e3a\u73af\u4e0a\u7684\u70b9\uff09\uff1a\n$$\nans=\\max\\{ret1,ret2,g_i\\}\n$$\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u73af\u626b\u4e00\u904d\u5373\u53ef\u3002\n\n---\n\n\u5c0f\u4f18\u5316\uff1a\n\n- \u6211\u4eec\u518d\u904d\u5386\u5b8c\u4e00\u4e2a\u73af\u4e4b\u524d\u5e76\u6ca1\u6cd5\u62ff\u5230\u8fd9\u4e2a\u73af\u7684\u957f\u5ea6 $len$\uff0c\u56e0\u6b64\u6211\u4eec\u66f4\u65b0 $ret2$ \u65f6\u4e0d\u52a0\u4e0a $len$\uff0c\u6700\u540e\u904d\u5386\u5b8c\u540e\u518d\u7ed9 $ret2$ \u52a0\u4e0a $len$ \u5373\u53ef\u3002\n\n- \u6211\u4eec\u53ef\u4ee5\u628a $g_i$ \u987a\u4fbf\u7edf\u8ba1\u5230 $ret1$ \u91cc\u9762\uff0c~~\u5e76\u6ca1\u6709\u4ec0\u4e48\u7528~~\u3002\n\n---\n\n\u4ee3\u7801\uff08494ms / 30.84MB\uff0c\u76ee\u524d\u6d1b\u8c372nd\u6700\u4f18\u89e3\uff09\uff1a\n\n[mivik.h](https://mivik.gitee.io/mivik.h)\n\n```cpp\n// Mivik 2020.8.22\n#include <mivik.h>\n\n#include <algorithm>\n#include <climits>\n\n#ifdef MIVIK\nMI cin(popen(\"xsel -ob\", \"r\"));\n#else\nMI cin;\n#endif\n\ntypedef long long qe;\n\nconst int nmax = 1000005;\n\ntemplate<typename T> inline bool getmax(T &a, const T &b) { return a<b && (a = b, true); }\n\nint n;\nint tar[nmax], wei[nmax];\n// deg -> degree \u5ea6\u6570\nint deg[nmax];\nqe f[nmax], g[nmax];\ninline qe loop(int x) {\n\tconst int beg = x;\n\tqe m1 = f[x], m2 = f[x];\n\tqe pre = wei[x];\n\tqe ret1 = g[x];\n\tx = tar[x];\n\tqe ret2 = LLONG_MIN;\n\twhile (x!=beg) {\n\t\tdeg[x] = 0;\n\t\tgetmax(ret1, f[x]+pre+m1);\n\t\tgetmax(ret2, f[x]-pre+m2);\n\t\tgetmax(ret1, g[x]);\n\t\tgetmax(m1, f[x]-pre);\n\t\tgetmax(m2, f[x]+pre);\n\t\tpre += wei[x];\n\t\tx = tar[x];\n\t}\n\treturn std::max(ret1, ret2+pre);\n}\nint main() {\n\tint i;\n\tcin>n;\n\tfor (i=1;i<=n;i++) {\n\t\tcin>tar[i]>wei[i];\n\t\t++deg[tar[i]];\n\t}\n\tstatic int q[nmax];\n\tint head = 1, tail = 0;\n\tfor (i=1;i<=n;i++) if (!deg[i]) q[++tail] = i;\n    // \u8ba1\u7b97\u51fa\u73af\u4e0a\u6bcf\u4e2a\u70b9\u7684 f[i] \u548c g[i]\n\twhile (head<=tail) {\n\t\tconst int x = q[head++];\n\t\tconst qe cc = f[x]+wei[x];\n\t\tgetmax(g[tar[x]], f[tar[x]]+cc);\n\t\tgetmax(g[tar[x]], g[x]);\n\t\tgetmax(f[tar[x]], cc);\n\t\tif (!(--deg[tar[x]])) q[++tail] = tar[x];\n\t}\n\tqe ans = 0;\n\tfor (i=1;i<=n;i++) // \u5982\u679c deg[i] \u4e0d\u4e3a 0 \u4ee3\u8868 i \u662f\u5728\u73af\u4e0a\n    \tif (deg[i]) ans += loop(i);\n\tcout<ans<endl;\n\treturn 0;\n}\n```",
        "postTime": 1592201562,
        "uid": 45182,
        "name": "Mivik",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4381 \u3010[IOI2008] Island\u3011"
    },
    {
        "content": "$emm\u2026\u2026$\u8fd9\u9898\u867d\u7136\u73b0\u5728\u6d4b\u4e0d\u4e86\u4f46\u662f\u5728$bzoj$\u4e0a$A$\u4e86\u5c31\u6765\u5199\u4e2a\u9898\u89e3\u5427\u2026\u2026\u6bd5\u7adf\u6ca1\u9898\u89e3\u8fd8\u662f\u633a\u5c34\u5c2c\u7684\u2026\u2026\n\n\u9996\u5148\u8fd9\u4e2a\u9898\u610f\u7528\u4e00\u53e5\u8bdd\u6982\u62ec\u5c31\u662f\uff0c\u7ed9\u4e00\u4e2a\u57fa\u73af\u6811\u68ee\u6797\uff0c\u6c42\u6bcf\u4e2a\u57fa\u73af\u6811\u7684\u6700\u957f\u94fe\u4e4b\u548c\u3002\n\n\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u7528\u57fa\u73af\u6811\u7684\u5957\u8def\u6765\u5e72\u8fd9\u4e2a\u4e8b\uff0c\u5c31\u662f\u5148\u4e0d\u7ba1\u73af\uff0c\u5bf9\u4e8e\u73af\u4e0a\u7684\u6bcf\u4e2a\u70b9\u6211\u4eec\u90fd\u5bf9\u4ed6\u7684\u5b50\u6811\u8fdb\u884c\u4e00\u904d\u6811\u5f62$dp$\u628a\u6700\u957f\u94fe\u4e0e\u6839\u5230\u5b50\u6811\u5185\u70b9\u7684\u6700\u957f\u94fe$dp[i]$\uff08\u6211\u4eec\u8981\u6c42\u51fa\u524d\u8005\u662f\u56e0\u4e3a\u53ef\u80fd\u5728\u8fd9\u4e2a\u57fa\u73af\u6811\u91cc\u9762\u4e0d\u8d70\u73af\u800c\u8d70\u4e00\u4e2a\u5b50\u6811\u5185\u7684\u4e00\u4e2a\u8def\u5f84\u662f\u6700\u4f18\u89e3\uff0c\u8fd9\u4e1c\u897f\u6211\u4eec\u5728\u4e00\u4e2a\u70b9\u5904\u62fc\u63a5\u4ed6\u4e24\u4e2a\u513f\u5b50\u7684\u5230\u5e95\u4e0b\u7684\u6700\u957f\u94fe\u5373\u53ef\uff09\u6c42\u51fa\u6765\uff0c\u7136\u540e\u6211\u4eec\u8003\u8651\u5728\u73af\u4e0a\u7684\u70b9\uff0c\u4ed6\u4eec\u53ef\u4ee5\u8fdb\u884c\u4e24\u4e24\u4e4b\u95f4\u7684\u7b54\u6848\u7684\u62fc\u63a5\uff0c\u6bd4\u5982\u6709\u4e24\u4e2a\u70b9$i$\u548c$j$\uff0c\u5c31\u53ef\u4ee5\u5148\u4ece$i$\u5b50\u6811\u5185\u7684\u6700\u6df1\u5904\u70b9\u8d70\u5230$i$\uff0c\u8fd9\u6bb5\u8ddd\u79bb\u662f$dp[i]$\uff0c\u7136\u540e\u518d\u4ece\u73af\u4e0a$i$\u5230$j$\u7684\u8def\u5f84\u4e0a\u8d70\u5230$j$\uff0c\u7136\u540e\u518d\u8d70\u5230$j$\u5b50\u6811\u5185\u6700\u6df1\u7684\u70b9\uff0c\u8fd9\u6bb5\u8ddd\u79bb\u662f$dp[j]$\u3002\n\n\u7136\u540e\u6211\u4eec\u63a5\u7740\u5957\u8def\u7684\u628a\u73af\u4ece\u4e00\u4e2a\u5730\u65b9\u65ad\u5f00\u641e\u6210\u4e00\u6bb5\u5e8f\u5217\uff0c\u7136\u540e\u518d\u628a\u5b83\u590d\u5236\u4e00\u4efd\u63a5\u5728\u540e\u9762\uff0c\u5c31\u8f6c\u5316\u6210\u4e86\u5e8f\u5217\u4e0a\u7684\u95ee\u9898\uff0c\u4e3a\u4e86\u66f4\u76f4\u89c2\u7684\u7406\u89e3\u6211\u753b\u4e86\u4e2a\u56fe\uff1a\n\n![](https://cdn.luogu.com.cn/upload/pic/39711.png)\n\n\u5bb9\u6613\u53d1\u73b0\u8fd9\u6837\u505a\u4e4b\u540e\u8fd9\u4e2a\u5e8f\u5217\u4e0a\u4efb\u610f\u4e00\u6bb5\u8fb9\u6570\u5c0f\u4e8e$n$\uff08\u73af\u4e0a\u7684\u70b9\u6570\uff09\u7684\u8def\u5f84\u90fd\u662f\u5408\u6cd5\u7684\uff0c\u5e76\u4e14\u6db5\u76d6\u4e86\u73af\u4e0a\u6240\u6709\u7684\u5408\u6cd5\u8def\u5f84\uff0c\u6211\u4eec\u4e0d\u59a8\u5bf9\u8fd9\u4e2a\u5e8f\u5217\uff08\u79f0\u4ed6\u4e3a$a$\uff09\u505a\u4e00\u4e2a\u8fb9\u6743\u7684\u524d\u7f00\u548c$dis[i]$\u8868\u793a\u5e8f\u5217\u7684\u7b2c\u4e00\u4e2a\u70b9\u5230\u5b83\u7684\u8ddd\u79bb\uff0c\u8fd9\u6837\u80fd\u591f\u65b9\u4fbf\u6c42\u73af\u4e0a\u8ddd\u79bb\uff0c\u4e8e\u662f\u6211\u4eec\u8981\u679a\u4e3e\u6bcf\u4e2a\u5e8f\u5217\u4e0a\u7684\u7ec8\u70b9$i$\uff0c\u5bf9\u4ed6\u6c42\uff1a\n\n$max_{i-n<j<i}\\{dp[a[i]]+dp[a[j]]+dis[i]-dis[j]\\}$\n\n\u9996\u5148\u8fd9\u662f\u5728\u4e00\u4e2a\u56fa\u5b9a\u957f\u5ea6\u7684\u51b3\u7b56\u533a\u95f4\u5185\u6700\u5927\u5316\u8fd9\u4e2a\u5f0f\u5b50\u7684\u503c\uff0c\u7136\u540e\u8fd9\u4e2a\u5f0f\u5b50\u53ef\u4ee5\u5199\u6210$(dp[a[i]]-dis[i])+(dp[a[j]]-dis[j])$\u7684\u5f62\u5f0f\uff0c\u524d\u8005\u53ea\u548c$i$\u6709\u5173\uff0c\u540e\u8005\u53ea\u548c$j$\u6709\u5173\uff0c\u8fd9\u662f\u5355\u8c03\u961f\u5217\u7684\u5957\u8def\uff0c\u7ef4\u62a4\u4e00\u4e0b$max\\{dp[a[j]]-dis[j]\\}$\u5c31\u884c\u4e86\u3002\n\n\u4ee5\u4e0a\u5c31\u662f\u5927\u81f4\u601d\u8def\uff0c\u8fd8\u662f\u4e0d\u96be\u7684\uff0c\u53ef\u4ee5\u53d1\u73b0\u8fd9\u9898\u5c31\u662f\u7531\u4e00\u5806\u5957\u8def\u62fc\u6210\u7684\u3002\u4e0d\u8fc7\u57fa\u73af\u6811\u8fd9\u73a9\u610f\u6211\u89c9\u5f97\u4ee3\u7801\u5199\u8d77\u6765\u8fd8\u662f\u4e0d\u90a3\u4e48\u5bb9\u6613\uff0c\u4e0b\u9762\u8bf4\u4e00\u4e0b\u5b9e\u73b0\u7684\u4e00\u4e9b\u7ec6\u8282\uff1a\n\n1.\u6211\u4eec\u7528\u4e00\u4e2a\u90bb\u63a5\u8868\u914d\u5408\u5e76\u67e5\u96c6\u5b58\u6bcf\u4e2a\u57fa\u73af\u6811\u7684\u6240\u6709\u70b9\uff0c\u8fd9\u6837\u7701\u7684\u6bcf\u6b21\u90fd\u66b4\u529b\u627e\u70b9\uff08\u5f00$100$\u4e07\u4e2a$vector$\u4f1a\u70b8\u2026\u2026\uff09\n\n2.\u5173\u4e8e\u627e\u73af\u7684\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e2a\u57fa\u73af\u6811\u7684\u6811\u7684\u90e8\u5206\u5220\u6389\uff0c\u5c31\u662f\u8003\u8651\u5230\u6bcf\u4e2a\u53f6\u5b50\u7684\u5ea6\u6570\u90fd\u662f1\uff0c\u5c31\u53ef\u4ee5\u7528\u7c7b\u4f3c\u62d3\u6251\u6392\u5e8f\u7684\u65b9\u6cd5\u5220\u70b9\uff0c\u5f53\u8fd9\u4e2a\u70b9\u7684\u5ea6\u6570\u4e3a1\u4e5f\u5c31\u662f\u8bf4\u4ed6\u6ca1\u6709\u524d\u9a71\u4e86\u5c31\u53ef\u4ee5\u628a\u4ed6\u5220\u6389\u52a0\u5230\u961f\u5217\u91cc\uff0c\u6ce8\u610f\u8fd9\u4e2a\u8ddf\u62d3\u6251\u6392\u5e8f\u4e0d\u4e00\u6837\u7684\u5730\u65b9\u662f\u522b\u5fd8\u4e86\u8fd9\u662f\u65e0\u5411\u56fe\uff0c\u5728\u904d\u5386\u8fd9\u4e2a\u70b9\u7684\u51fa\u8fb9\u7684\u65f6\u5019\u522b\u5fd8\u4e86\u6392\u9664\u5df2\u7ecf\u5220\u8fc7\u7684\u70b9\u3002\n\n3.\u628a\u8fd9\u4e2a\u73af\u8f6c\u5316\u6210\u5e8f\u5217\uff0c\u5c31\u662f\u5148\u627e\u4e00\u4e2a\u73af\u4e0a\u7684\u70b9\uff0c\u7136\u540e\u628a\u4ed6\u52a0\u5165\u961f\u5217\u8fdb\u884c$bfs$\uff08\u5176\u5b9e\u8fd9\u662f\u5728\u73af\u4e0a\u5e76\u6ca1\u5fc5\u8981\u7528$bfs$\uff0c\u4f46\u662f\u611f\u89c9\u6bd4\u8f83\u597d\u5199\uff09\uff0c\u6211\u4eec\u5bf9\u6bcf\u4e2a\u73af\u4e0a\u7684\u70b9\u7ef4\u62a4\u4e00\u4e2a$nxt[i]$\u8868\u793a\u4ed6\u6307\u5411\u4e0b\u4e00\u4e2a\u70b9\u7684\u8fb9\u6743\u662f\u5565\uff0c\u6ce8\u610f\u522b\u901a\u8fc7\u53cd\u5411\u8fb9\u8d70\u56de\u53bb\u4e86\u3002\u4e0d\u8fc7\u8fd9\u91cc\u6709\u4e2a\u6bd4\u8f83\u6076\u5fc3\u7684\u5730\u65b9\u5c31\u662f\u6700\u540e\u4e00\u4e2a\u70b9\uff0c\u6211\u4eec\u9700\u8981\u5224\u4e00\u4e0b\u4ed6\u6307\u5411\u7b2c\u4e00\u4e2a\u70b9\u7684\u8fb9\u7136\u540e\u9000\u51fa$bfs$\uff0c\u6240\u4ee5\u6211\u4eec\u7684$vis$\u6807\u8bb0\u9700\u8981\u6807\u8bb0\u5728\u8fb9\u4e0a\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528\u7f51\u7edc\u6d41\u91cc\u90a3\u79cd\u53cd\u5411\u8fb9^1\u7684\u65b9\u6cd5\u6765\u6807\u8bb0\u8fb9\uff0c\u7136\u540e\u628a\u961f\u5217\u91cc\u7684\u70b9\u590d\u5236\u4e00\u4efd\u63a5\u5230\u540e\u9762\u5c31\u884c\u4e86\u3002\n\n4.\u4e3a\u9632\u6b62\u7206\u6808\u8981\u7528$bfs$\u8fdb\u884c\u6811\u5f62$dp$\u2026\u2026\n\n\u4e0a\u4ee3\u7801~\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#define ll long long\nusing namespace std;\ninline int get(){//\u5feb\u8bfb \n    int n=0;char c;\n\twhile((c=getchar())||23333){\n        if(c>='0'&&c<='9')break;\n\t\tif(c=='-')goto s;\n    }\n\tn=c-'0';\n\twhile((c=getchar())||23333){\n        if(c>='0'&&c<='9')n=n*10+c-'0';\n\t\telse return(n);\n    }\n\ts:while((c=getchar())||23333){\n        if(c>='0'&&c<='9')n=n*10-c+'0';\n\t\telse return(n);\n    }\n}typedef struct _b{//\u8fb9 \n    int dest;int nxt;int len;unsigned char vis;//\u6807\u8bb0 \n}bian;\nbian memchi[2000001];\nint gn=2;\nint heads[1000001];\nll dp[1000001];\nll maxn=0;\nint que[2001001];//\u961f\u5217 \ninline void add(int s,int t,int l){\n    memchi[gn].dest=t;\n\tmemchi[gn].len=l;\n\tmemchi[gn].nxt=heads[s];\n\theads[s]=gn;gn++;\n}\nint nxts[1000001],fheads[1000001];//\u7528\u6765\u7ed9\u57fa\u73af\u6811\u5b58\u70b9\u7684\u90bb\u63a5\u8868 \nint ints[1000001],deg[1000001];//\u5e76\u67e5\u96c6\u4e0e\u5ea6\u6570\u6570\u7ec4 \nunsigned char nohuan[1000001];//\u662f\u5426\u4e0d\u5728\u73af\u4e0a \nint find(int n){\n    if(ints[n]==n)return(n);\n\treturn(ints[n]=find(ints[n]));\n}\nint fa[1000001];//\u6811\u5f62dp\u7684\u65f6\u5019\u7ef4\u62a4\u7236\u4eb2 \nint nxt[1000001];//\u73af\u4e0a\u7684\u70b9\u7684\u51fa\u8fb9\u7684\u8fb9\u6743 \nint xulie[2001001];//\u73af\u8f6c\u5316\u6210\u7684\u5e8f\u5217 \nunsigned char bv[1000001];\nll dis[2001001];\ninline void tree_dp(int pt){//bfs\u6811\u5f62dp \n    register int head=0,tail=1;que[0]=pt;do{\n        int me=que[head];head++;\n\t\tfor(register int i=heads[me];i;i=memchi[i].nxt){\n            if(memchi[i].dest==fa[me]||!nohuan[memchi[i].dest])continue;\n            fa[memchi[i].dest]=me;\n\t\t\tque[tail]=memchi[i].dest;\n\t\t\ttail++;\n        }\n    }while(head<tail);\n\tfor(register int a=tail-1;a>=0;a--){//\u628a\u961f\u5217\u91cc\u7684\u70b9\u5012\u8fc7\u6765\u5c31\u80fd\u6309\u987a\u5e8f\u4e86 \n        int me=que[a];\n\t\tfor(register int i=heads[me];i;i=memchi[i].nxt){\n            if(memchi[i].dest==fa[me]||!nohuan[memchi[i].dest])continue;\n            ll p=dp[memchi[i].dest]+memchi[i].len;\n\t\t\tmaxn=max(maxn,p+dp[me]);\n\t\t\tdp[me]=max(dp[me],p);\n        }\n    }\n}\ninline ll solve(int jh){//\u6c42\u57fa\u73af\u6811\u7684\u6700\u957f\u94fe \n    register int head=0,tail=0;\n\tfor(register int i=fheads[jh];i;i=nxts[i]){\n        if(deg[i]==1)que[tail]=i,tail++,bv[i]=1;\n    }\n\twhile(head<tail){//\u5bf9\u53f6\u5b50\u8fdb\u884c\u201c\u62d3\u6251\u6392\u5e8f\u201d\u53ea\u4fdd\u7559\u73af \n        int me=que[head];head++;\n\t\tnohuan[me]=1;\n\t\tfor(register int i=heads[me];i;i=memchi[i].nxt){\n            if(bv[memchi[i].dest])continue;\n            deg[memchi[i].dest]--;\n\t\t\tif(deg[memchi[i].dest]==1){\n                que[tail]=memchi[i].dest;\n\t\t\t\ttail++;\n\t\t\t\tbv[memchi[i].dest]=1;\n            }\n        }\n    }\n\tll ans=0;\n\tint st;//\u73af\u4e0a\u7b2c\u4e00\u4e2a\u70b9 \n\tint cnt=0;\n\tfor(register int i=fheads[jh];i;i=nxts[i]){\n        if(!nohuan[i]){st=i;cnt++;\n            maxn=0;\n            tree_dp(i);\n            ans=max(ans,maxn);\n\t\t\tans=max(ans,dp[i]);\n        }\n    }\n\tbv[st]=1;\n\thead=0,tail=1;\n\tque[0]=st;\n\tint rcnt=cnt;//\u73af\u957f \n\tdo{//\u628a\u8fd9\u4e2a\u73af\u8f6c\u5316\u6210\u5e8f\u5217 \n        int me=que[head];\n\t\thead++;\n\t\tcnt--;\n\t\tfor(register int i=heads[me];i;i=memchi[i].nxt){\n            if(nohuan[memchi[i].dest])continue;\n            if(memchi[i^1].vis)continue;//\u5bf9\u8d70\u8fc7\u7684\u8fb9\u8fdb\u884c\u6807\u8bb0 \n            if(memchi[i].dest==st){//\u6ce8\u610f\u7279\u5224\u6700\u540e\u4e00\u4e2a\u70b9 \n                nxt[me]=memchi[i].len;break;\n            }\n\t\t\tbv[memchi[i].dest]=1;\n\t\t\tnxt[me]=memchi[i].len;\n\t\t\tmemchi[i].vis=1;\n            que[tail]=memchi[i].dest;\n\t\t\ttail++;\n            break;\n        }\n    }while(head<tail);\n\tint ptr=1;\n\tfor(register int i=0;i<tail;i++){\n        xulie[ptr]=que[i];ptr++;\n    }\n\tfor(register int i=0;i<tail;i++){//\u590d\u5236\u4e00\u4efd\u63a5\u5230\u540e\u9762 \n        xulie[ptr]=que[i];ptr++;\n    }\n\tptr--;\n\tfor(register int i=2;i<=ptr;i++)dis[i]=dis[i-1]+nxt[xulie[i-1]];//\u524d\u7f00\u548c \n    head=0,tail=0;\n\tfor(register int i=1;i<=ptr;i++){//\u8fd9\u4e2a\u518d\u666e\u901a\u4e0d\u8fc7\u7684\u5355\u8c03\u961f\u5217\u4f18\u5316dp\u65e0\u9700\u591a\u89e3\u91ca\u4e86\u5427 \n        while(head<tail&&i-que[head]>=rcnt)head++;\n\t\tif(head<tail){\n            ans=max(ans,dis[i]+dp[xulie[i]]-dis[que[head]]+dp[xulie[que[head]]]);\n        }\n\t\twhile(head<tail&&dp[xulie[que[tail-1]]]-dis[que[tail-1]]<=dp[xulie[i]]-dis[i])tail--;\n\t\tque[tail]=i;tail++;\n    }\n\treturn(ans);\n}\nsigned main(){\n    int n;\n\tn=get();\n\tfor(register int i=1;i<=n;i++)ints[i]=i;\n\tll tot=0;\n    for(register int i=1;i<=n;i++){\n        int t=get(),l=get();\n\t\tadd(i,t,l);\n\t\tadd(t,i,l);\n\t\tdeg[i]++;\n\t\tdeg[t]++;\n\t\ttot+=l;\n\t\tint aa=find(i),ab=find(t);\n        if(aa!=ab){\n            ints[aa]=ab;\n        }\n    }\n\tll ans=0;\n\tfor(register int i=1;i<=n;i++){\n        int aa=find(i);\n\t\tnxts[i]=fheads[aa];//\u4f7f\u7528\u90bb\u63a5\u8868\u5411\u57fa\u73af\u6811\u91cc\u5b58\u70b9 \n\t\tfheads[aa]=i;\n    }\n\tfor(register int i=1;i<=n;i++){\n        if(ints[i]==i)ans+=solve(i);//\u7edf\u8ba1\u7b54\u6848 \n    }\n\tcout<<ans<<endl;\n    return(0);\n}\n```",
        "postTime": 1540476163,
        "uid": 125124,
        "name": "ywy_c_asm",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4381 \u3010[IOI2008]Island\u3011"
    },
    {
        "content": "## [P4381\u3010[IOI2008]Island\u3011](https://www.luogu.com.cn/problem/P4381)\n\n\u8fd9\u662f\u6211$A$\u6389\u7684\u7b2c\u4e00\u9053\u9ed1\u9898\uff0c\u6240\u4ee5\u6765\u53d1\u7bc7\u9898\u89e3\u7eaa\u5ff5\u4e00\u4e0b\u3002\n\n\u5148\u6765\u5206\u6790\u4e00\u4e0b\u9898\u76ee\uff1a\n\n>\u516c\u56ed\u7531 $N$ \u4e2a\u5c9b\u5c7f\u7ec4\u6210\uff0c\u5f53\u5730\u7ba1\u7406\u90e8\u95e8\u4ece\u6bcf\u4e2a\u5c9b\u5c7f $i$ \u51fa\u53d1\u5411\u53e6\u5916\u4e00\u4e2a\u5c9b\u5c7f\u5efa\u4e86\u4e00\u5ea7\u957f\u5ea6\u4e3a $L_i$ \u7684\u6865\u3002\n\n\u8fd9\u53e5\u8bdd\u8bf4\u660e\u8be5\u516c\u56ed\u7684\u5f62\u6001\u662f\u4e00\u4e2a\u7531 $N$ \u4e2a\u70b9\u548c $N$ \u6761\u8fb9\u6784\u6210\u7684\u56fe (\u4e0d\u4e00\u5b9a\u8fde\u901a)\uff0c\u5373\u4e00\u4e2a\u57fa\u73af\u6811\u68ee\u6797\u3002\n\n>\u4f60\u5e0c\u671b\u7ecf\u8fc7\u7684\u6865\u7684\u603b\u957f\u5ea6\u5c3d\u53ef\u80fd\u957f\uff0c\u4f46\u4efb\u4f55\u4e00\u4e2a\u5c9b\u90fd\u4e0d\u80fd\u6e38\u89c8\u4e00\u6b21\u4ee5\u4e0a\u3002\n\n\u4ece\u8fd9\u53e5\u8bdd\u544a\u8bc9\u6211\u4eec\u9898\u76ee\u8981\u6c42\uff0c\u5373\u6c42\u5404\u4e2a\u8fde\u901a\u5757 (\u57fa\u73af\u6811) \u4e2d\u7684\u6700\u957f\u7b80\u5355\u8def\u5f84\u7684\u548c\u3002\u7c7b\u6bd4\u6811\u7684\u76f4\u5f84\u7684\u5b9a\u4e49\uff0c\u6211\u4eec\u628a\u57fa\u73af\u6811\u7684\u6700\u957f\u7b80\u5355\u8def\u5f84\u5b9a\u4e49\u4e3a\u57fa\u73af\u6811\u7684\u76f4\u5f84\u3002\n\n### \u7b97\u6cd5:\u6c42\u57fa\u73af\u6811\u7684\u76f4\u5f84\n\n\u9996\u5148\u6211\u4eec\u5e94\u8be5\u627e\u5230\u73af\uff0c\u627e\u73af\u662f\u57fa\u73af\u6811\u4e0a\u7684\u4e00\u4e2a\u57fa\u672c\u7b97\u6cd5\uff0c\u7a0b\u5e8f\u4e2d\uff0c\u6211\u4eec\u7528\u6570\u7ec4 $lp$ \u5b58\u73af\uff0c\u73af\u7684\u5927\u5c0f\u4e3a $size$\uff0c\u73af\u4e0a\u7684\u7ed3\u70b9\u4f9d\u6b21\u4e3a$lp[1],lp[2],...,lp[size]$\u3002\n\n```cpp\nint lp[maxn],size;\t//loop\u5b58\u73af\uff0csize\u6700\u7ec8\u4e3a\u73af\u7684\u5927\u5c0f \nint fa[maxn];\nint dfn[maxn],idx;\nvoid get_loop(int u){\n\tdfn[u]=++idx;\t//\u65f6\u95f4\u6233 \n\tfor(int i=head[u];~i;i=edge[i].nxt){\n\t\tint v=edge[i].to;\n\t\tif(v==fa[u]) continue;\n\t\tif(dfn[v]){\n\t\t\tif(dfn[v]<dfn[u]) continue;\t//\u6ce8\u610f\uff1a\u7b2c\u4e00\u6b21\u9047\u5230\u73af\u65f6\u5148\u4e0d\u5b58 \n\t\t\tlp[++size]=v;\t\t\t\t//\u5728dfs\u7684\u56de\u5f52\u8fc7\u7a0b\u4e2d\u518d\u6b21\u9047\u5230\u8be5\u73af\u65f6\u518d\u8bb0\u5f55 \n\t\t\tfor(;v!=u;v=fa[v]) lp[++size]=fa[v];\t//\u8bb0\u5f55\u73af \n\t\t}\n\t\telse fa[v]=u,get_loop(v);\t//\u7ee7\u7eeddfs\u5b50\u8282\u70b9 \n\t}\n}\n\n```\n\n\u57fa\u73af\u6811\u53bb\u6389\u73af\u4e0a\u7684\u6240\u6709\u8fb9\u540e\u4f1a\u5f62\u6210\u82e5\u5e72\u4e2a\u5b50\u6811\uff0c\u6240\u4ee5\u57fa\u73af\u6811\u7684\u76f4\u5f84\u663e\u7136\u53ef\u4ee5\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5:\n\n1. \u5b8c\u5168\u4f4d\u4e8e\u57fa\u73af\u6811\u53bb\u6389\u73af\u7684\u67d0\u4e2a\u5b50\u6811\u4e0a\n\n2. \u7ecf\u8fc7\u73af\u4e14\u76f4\u5f84\u7684\u4e24\u7aef\u5206\u522b\u4f4d\u4e8e\u4e24\u4e2a\u5b50\u6811\u4e0a\n\n\u4e0b\u9762\u6211\u4eec\u5c31\u5206\u8fd9\u4e24\u4e2a\u60c5\u51b5\u8ba8\u8bba\u3002\n\n#### \u60c5\u51b5\u4e00:\n\n\u5c31\u662f\u6c42\u666e\u901a\u7684\u6811\u7684\u76f4\u5f84\uff0c\u81ea\u7136\u6709\u4e24\u79cd\u65b9\u6cd5:\n\n1. \u6811\u5f62dp\n\n2. \u4e24\u6b21 $dfs$ (\u6216 $bfs$)\n\n\u4e0d\u4f1a\u6811\u7684\u76f4\u5f84\u7684\u53ef\u4ee5\u770b\u770b\u8fd9\u4e2a[\u6a21\u677f\u9898](https://www.luogu.com.cn/problem/UVA10308)\u3002\n\n\u5206\u522b\u6c42\u51fa\u6bcf\u68f5\u5b50\u6811\u7684\u76f4\u5f84\u66f4\u65b0\u7b54\u6848\u5373\u53ef\uff0c\u590d\u6742\u5ea6\u4e3a $O(N)$ \u3002\n\n\u65e0\u8bba\u662f\u90a3\u79cd\u7b97\u6cd5\uff0c\u90fd\u80fd\u5f97\u5230\u4e00\u4e2a\u6570\u7ec4 $d$ : $d[i]$ ( $i$\u5728\u73af\u4e0a ) \u8868\u793a\u4ee5 $i$ \u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u4ee5 $i$ \u4e3a\u7aef\u70b9\u7684\u6700\u957f\u94fe\uff0c\u8fd9\u53ef\u4ee5\u5e94\u7528\u5728\u60c5\u51b5\u4e8c\u4e2d\u3002\u8fd9\u91cc\u6211\u91c7\u7528\u4e86\u6811\u5f62$dp$\u7684\u65b9\u6cd5\u3002\n\n```cpp\nll d[maxn],ansd;\t//d[i]\u8868\u793a\u4ecei\u51fa\u53d1\u8d70\u5411\u4ee5 i \u4e3a\u6839\u7684\u5b50\u6811\uff0c\u80fd\u5230\u8fbe\u7684\u6700\u8fdc\u8ddd\u79bb \n//ansd\u6700\u7ec8\u4e3a\u8be5\u6811\u7684\u76f4\u5f84\nvoid dp(int u){\t//dp\u6c42\u6811\u7684\u76f4\u5f84 \n\tvis[u]=true;\n\tfor(int i=head[u];~i;i=edge[i].nxt){\n\t\tint v=edge[i].to,w=edge[i].w;\n\t\tif(vis[v]) continue;\n\t\tdp(v);\n\t\tansd=max(ansd,d[u]+d[v]+w);\t//\u7528\u7ecf\u8fc7\u70b9u\u7684\u6700\u957f\u94fe\u66f4\u65b0ansd \n\t\t//\u6700\u957f\u94fe\u5373\u5404\u4e2a d[v]+w \u7684\u6700\u5927\u503c\u548c\u6b21\u5927\u503c\u7684\u548c\uff0c\n\t\t//\u6700\u540e\u4e00\u6b21\u66f4\u65b0\u65f6\u7684 d[u] \u4e00\u5b9a\u662f\u6b21\u5927\u503c\uff0cd[v]+w \u4e3a\u6700\u5927\u503c \n\t\td[u]=max(d[u],d[v]+w);\t//d[u] \u5e94\u4e3a\u6240\u6709 d[v]+w \u4e2d\u7684\u6700\u5927\u503c \n\t}\n}\n```\n\n#### \u60c5\u51b5\u4e8c:\n\n\u5373\u627e\u5230\u73af\u4e0a\u4e0d\u540c\u7684\u4e24\u70b9 $lp[i]$ \u548c $lp[j]$\uff0c\u4f7f\u5f97\n$$d[lp[i]]+d[lp[j]]+dis(lp[i],lp[j])$$\n\u6700\u5927\uff0c\u5176\u4e2d $dis(lp[i],lp[j])$ \u8868\u793a $lp[i]$ \u548c $lp[j]$ \u5728\u73af\u4e0a\u7684\u8ddd\u79bb\u3002\n\n\u5982\u679c\u76f4\u63a5\u679a\u4e3e $i$ \u548c $j$ \u7684\u8bdd\uff0c\u590d\u6742\u5ea6\u662f$\\Omega(N^2)$ \uff0c\u663e\u7136\u4e0d\u80fd\u7528\uff0c\u9700\u8981\u4f18\u5316\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\u7814\u7a76\uff0c\u6211\u4eec\u628a\u73af\u4e0a\u7684\u8fb9\u6743\u63a8\u5230\u70b9\u4e0a\uff0c\u5c06\u73af\u7834\u574f\u4e3a\u94fe\uff0c\u518d\u590d\u5236\u4e00\u500d\uff0c\u5f97\u5230\u6570\u7ec4 $a[1..2\\times size-1]$\uff0c\u5176\u4e2d $a[i]$ \u8868\u793a\u8fb9 $(lp[(i-1)\\%size],lp[i\\%size])$ \u7684\u8fb9\u6743 (\u4e3a\u4e86\u65b9\u4fbf\uff0c\u8fd9\u91cc\u4ee4 $lp[0]=lp[size]$ )\uff0c\u518d\u5904\u7406\u51fa $a$ \u7684\u524d\u7f00\u548c $s$\uff0c\u4fbf\u6709 $dis(lp[i],lp[j])=s[j]-s[i]$\u3002\u8fd9\u6837\uff0c\u95ee\u9898\u5c31\u5f52\u7ed3\u4e3a: \u627e\u51fa\u4e24\u4e2a\u4f4d\u7f6e $i,j\\ (i<j\\ \\text{\u4e14}\\ j-i<size)$ \u4f7f\u5f97\n$$d[lp[i\\%size]]+d[lp[j\\%size]]+s[j]-s[i]$$\n\u6700\u5927\u3002\u8fd9\u663e\u7136\u53ef\u4ee5\u7528\u5355\u8c03\u961f\u5217\u6c42\u89e3\u3002\n\n\u4e0d\u4f1a\u5355\u8c03\u961f\u5217\u7684\u53ef\u4ee5\u5199\u4e00\u4e0b\u8fd9\u4e2a[\u6a21\u677f](https://www.luogu.com.cn/problem/P1886)\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e $j$\uff0c\u7136\u540e\u7528\u5355\u8c03\u961f\u5217\u6c42\u51fa\u4f7f $d[lp[i\\%size]-s[i]$ \u6700\u5927\u7684 $i\\in [j-size+1,j-1]$ \u6765\u66f4\u65b0\u7b54\u6848\u3002\u590d\u6742\u5ea6\u4e3a$O(size)$\u3002~~\u6211\u5355\u8c03\u961f\u5217\u5199\u7684\u592a\u70c2\uff0c\u8fd9\u4e2a\u4f4d\u7f6e\u8c03\u4e86\u597d\u957f\u65f6\u95f4~~\n\n```cpp\nl=r=1; q[1]=0;\nfor(int i=1;i<size<<1;i++){\t//\u5355\u8c03\u961f\u5217\u8ba1\u7b97\u60c5\u51b5\u4e8c\u7684\u7b54\u6848 len2 \n\twhile(l<=r&&q[l]<=i-size) l++;\n\t//\u5224\u65ad\u961f\u5934\u7684\u51b3\u7b56\u662f\u5426\u8d85\u51fasize\u7684\u8303\u56f4\uff0c\u8d85\u51fa\u5219\u51fa\u961f \n\tlen2=max(len2,d[lp[q[l]%size]]+d[lp[i%size]]+s[i]-s[q[l]]);\n\t//\u6b64\u65f6\u961f\u5934\u5373\u4e3a\u4f7f d[lp[i%size]-s[i] \u6700\u5927\u7684 i\uff0c\u5e76\u66f4\u65b0\u7b54\u6848 \n\twhile(l<=r&&s[q[r]]-d[lp[q[r]%size]]>=s[i]-d[lp[i%size]]) r--;\n\t//\u82e5\u961f\u5c3e\u7684\u503c\u6ca1\u6709\u5f53\u524d\u7684 i \u66f4\u4f18\uff0c\u51fa\u961f \n\tq[++r]=i;\t//\u5c06 i \u5165\u961f \n}\n```\n\u6700\u540e $len1$ \u548c $len2$ \u4e2d\u8f83\u5927\u7684\u5373\u4e3a\u6240\u6c42\u7684\u57fa\u73af\u6811\u76f4\u5f84\uff0c\u6309\u6b64\u65b9\u6cd5\u6c42\u51fa\u6240\u6709\u57fa\u73af\u6811\u7684\u76f4\u5f84\u5e76\u7d2f\u52a0\uff0c\u5c31\u80fd\u5f97\u5230\u7b54\u6848\u3002\u603b\u7684\u590d\u6742\u5ea6\u4e3a $O(N)$\u3002\n\n\u4e0b\u9762\u653e\u4e0a\u5b8c\u6574\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\nconst int maxn=1e6+10; \nconst int maxm=maxn<<1;\t//\u65e0\u5411\u56fe\u5b58\u8fb9\u9700\u89812\u500d\u7684\u7a7a\u95f4 \ntypedef long long ll;\nstruct Edge{\t//\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u56fe \n\tint to,w,nxt;\n}edge[maxm];\nint head[maxn],cnt;\ninline void Init(){\t//\u521d\u59cb\u5316\u90bb\u63a5\u8868 \n\tfor(int i=0;i<maxn;i++) head[i]=-1;\n\tfor(int i=0;i<maxm;i++) edge[i].nxt=-1;\n\tcnt=1;\n}\ninline void addedge(int u,int v,int w){\t//\u52a0\u5165\u8fb9 \n\tedge[cnt]={v,w,head[u]};\n\thead[u]=cnt++;\n}\ninline int read(){\t//\u5feb\u8bfb \n\tint z=0; char c=getchar();\n\twhile(c<'0'||c>'9') c=getchar();\n\twhile(c>='0'&&c<='9'){\n\t\tz=(z<<3)+(z<<1)+(c^'0'); c=getchar();\n\t}\n\treturn z;\n}\nint n;\nbool vis[maxn];\nint lp[maxn],size;\t//loop\u5b58\u73af\uff0csize\u6700\u7ec8\u4e3a\u73af\u7684\u5927\u5c0f \nint fa[maxn];\nint dfn[maxn],idx;\nvoid get_loop(int u){\n\tdfn[u]=++idx;\t//\u65f6\u95f4\u6233 \n\tfor(int i=head[u];~i;i=edge[i].nxt){\n\t\tint v=edge[i].to;\n\t\tif(v==fa[u]) continue;\n\t\tif(dfn[v]){\n\t\t\tif(dfn[v]<dfn[u]) continue;\t//\u6ce8\u610f\uff1a\u7b2c\u4e00\u6b21\u9047\u5230\u73af\u65f6\u5148\u4e0d\u5b58 \n\t\t\tlp[++size]=v;\t\t\t\t//\u5728dfs\u7684\u56de\u5f52\u8fc7\u7a0b\u4e2d\u518d\u6b21\u9047\u5230\u8be5\u73af\u65f6\u518d\u8bb0\u5f55 \n\t\t\tfor(;v!=u;v=fa[v]) lp[++size]=fa[v];\t//\u8bb0\u5f55\u73af \n\t\t}\n\t\telse fa[v]=u,get_loop(v);\t//\u7ee7\u7eeddfs\u5b50\u8282\u70b9 \n\t}\n}\nll d[maxn],ansd;\t//d[i]\u8868\u793a\u4ecei\u51fa\u53d1\u8d70\u5411\u4ee5 i \u4e3a\u6839\u7684\u5b50\u6811\uff0c\u80fd\u5230\u8fbe\u7684\u6700\u8fdc\u8ddd\u79bb \nvoid dp(int u){\t//dp\u6c42\u6811\u7684\u76f4\u5f84 \n\tvis[u]=true;\n\tfor(int i=head[u];~i;i=edge[i].nxt){\n\t\tint v=edge[i].to,w=edge[i].w;\n\t\tif(vis[v]) continue;\n\t\tdp(v);\n\t\tansd=max(ansd,d[u]+d[v]+w);\t//\u7528\u7ecf\u8fc7\u70b9u\u7684\u6700\u957f\u94fe\u66f4\u65b0ansd \n\t\t//\u6700\u957f\u94fe\u5373\u5404\u4e2a d[v]+w \u7684\u6700\u5927\u503c\u548c\u6b21\u5927\u503c\u7684\u548c\uff0c\n\t\t//\u6700\u540e\u4e00\u6b21\u66f4\u65b0\u65f6\u7684 d[u] \u4e00\u5b9a\u662f\u6b21\u5927\u503c\uff0cd[v]+w \u4e3a\u6700\u5927\u503c \n\t\td[u]=max(d[u],d[v]+w);\t//d[u] \u5e94\u4e3a\u6240\u6709 d[v]+w \u4e2d\u7684\u6700\u5927\u503c \n\t}\n}\nll s[maxn<<1];\t//s\u4e3a\u524d\u7f00\u548c\u6570\u7ec4 \nint q[maxn<<1],l,r;\t//\u5355\u8c03\u961f\u5217 \ninline ll solve(int p){\n\tidx=size=0; get_loop(p);\n\tll len1=0,len2=0; \n\tlp[0]=lp[size];\n\tfor(int i=1;i<=size;i++) vis[lp[i]]=true;\n\tfor(int i=1;i<=size;i++){\n\t\tansd=0; dp(lp[i]);\n\t\tlen1=max(len1,ansd);\n\t}//\u8ba1\u7b97\u51fa\u60c5\u51b5\u4e00\u7684\u7b54\u6848 len1 \n\tif(size==2){\t//\u5355\u72ec\u5904\u7406\u7531\u4e24\u4e2a\u70b9\u6784\u6210\u7684\u73af\u7684\u60c5\u51b5 \n\t    for(int i=head[lp[1]];~i;i=edge[i].nxt){\n\t        if(edge[i].to==lp[2])\n\t            len2=max(len2,d[lp[1]]+d[lp[2]]+edge[i].w);\n\t    }\n\t    return max(len1,len2);\n\t}\n\tfor(int i=1;i<=size;i++){\n\t\tint lpw;\n\t\tfor(int j=head[lp[i]];~j;j=edge[j].nxt)\n\t\t\tif(edge[j].to==lp[i-1]){\n\t\t\t\tlpw=edge[j].w; break;\n\t\t\t}//\u627e\u5230\u8fb9 (lp[i-1],lp[i])\n\t\ts[i]=s[i-1]+lpw;\t//\u8ba1\u7b97\u524d\u7f00\u548c \n\t}\n\tfor(int i=1;i<size;i++) s[size+i]=s[size]+s[i];\t//\u590d\u5236\u4e00\u500d \n\tl=r=1; q[1]=0;\n\tfor(int i=1;i<size<<1;i++){\t//\u5355\u8c03\u961f\u5217\u8ba1\u7b97\u60c5\u51b5\u4e8c\u7684\u7b54\u6848 len2 \n\t\twhile(l<=r&&q[l]<=i-size) l++;\n\t\t//\u5224\u65ad\u961f\u5934\u7684\u51b3\u7b56\u662f\u5426\u8d85\u51fasize\u7684\u8303\u56f4\uff0c\u8d85\u51fa\u5219\u51fa\u961f \n\t\tlen2=max(len2,d[lp[q[l]%size]]+d[lp[i%size]]+s[i]-s[q[l]]);\n\t\t//\u6b64\u65f6\u961f\u5934\u5373\u4e3a\u4f7f d[lp[i%size]-s[i] \u6700\u5927\u7684 i\uff0c\u5e76\u66f4\u65b0\u7b54\u6848 \n\t\twhile(l<=r&&s[q[r]]-d[lp[q[r]%size]]>=s[i]-d[lp[i%size]]) r--;\n\t\t//\u82e5\u961f\u5c3e\u7684\u503c\u6ca1\u6709\u5f53\u524d\u7684 i \u66f4\u4f18\uff0c\u51fa\u961f \n\t\tq[++r]=i;\t//\u5c06 i \u5165\u961f \n\t}\n\treturn max(len1,len2);\t//\u6700\u7ec8\u7b54\u6848\u4e3a\u4e24\u79cd\u60c5\u51b5\u4e2d\u8f83\u5927\u7684 \n}\nint main(){\n\tn=read();\n\tInit();\n\tfor(int i=1;i<=n;i++){\n\t\tint j=read(),l=read();\n\t\taddedge(i,j,l); addedge(j,i,l);\n\t}//\u8bfb\u5165\u56fe \n\tll ans=0;\n\tfor(int i=1;i<=n;i++)\n\t\tif(!vis[i]) ans+=solve(i);\t//\u8ba1\u7b97\u6bcf\u4e2a\u8fde\u901a\u5757\uff08\u57fa\u73af\u6811\uff09\u7684\u76f4\u5f84\u5e76\u7d2f\u52a0 \n\tprintf(\"%lld\\n\",ans);\t//\u8f93\u51fa\u7b54\u6848 \n\treturn 0;\n}\n```\n\u611f\u8c22\u9605\u8bfb\uff01\u70b9\u4e2a\u8d5e\u5427\uff0c\u8c22\u8c22\uff01\n\n\u5982\u679c\u6211\u7684\u9898\u89e3\u6709\u4ec0\u4e48\u9519\u8bef\u6216\u6709\u95ee\u9898\uff0c\u6b22\u8fce\u5927\u5bb6\u7559\u8a00\u6216\u79c1\u4fe1\u6211 \uff08^_^;)",
        "postTime": 1585924704,
        "uid": 176569,
        "name": "iMya_nlgau",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4381 \u3010[IOI2008]Island\u3011"
    },
    {
        "content": "[myblog](https://martixx.gitee.io/2020/11/26/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E5%9F%BA%E7%8E%AF%E6%A0%91/)\n\n\n## \u9898\u610f\n\u7ed9\u4f60\u4e00\u4e2a\u57fa\u73af\u6811\u68ee\u6797\uff0c\u8981\u4f60\u6c42\u68ee\u6797\u7684\u76f4\u5f84\u4e4b\u548c(\u4e00\u68f5\u57fa\u73af\u6811\u7684\u76f4\u5f84\u8981\u6c42\u70b9\u548c\u8fb9\u90fd\u4e0d\u91cd\u590d)\n\n## Sol\n\n\u628a\u73af\u770b\u6210\u6839\uff0c\u8003\u8651\u4e24\u79cd\u60c5\u51b5\uff0c\u76f4\u5f84\u4e0d\u7ecf\u8fc7\u6839\u548c\u7ecf\u8fc7\u6839\n\n### \u4e0d\u7ecf\u8fc7\u73af\u7684\n\n\u4e0d\u7ecf\u8fc7\u6839\u7684\u5f88\u597d\u505a\uff0c\u5bf9\u4e8e\u6839\u7684\u6bcf\u68f5\u5b50\u6811\u6c42\u76f4\u5f84\u5c31\u53ef\u4ee5\u4e86\n\n### \u7ecf\u8fc7\u73af\u7684\n\n\u8bbe$f_x$\u8868\u793a$x$\u5b50\u6811\u4e2d\u79bb$x$\u6700\u8fdc\u7684\u70b9\u7684\u8ddd\u79bb\uff0c\u5219\u7b54\u6848\u4fbf\u662f\n\n$$ans_1=max\\left\\{f_i + f_j + dis_{i,j}\\right\\}$$\n\n\u5bf9\u73af\u4e0a\u7684\u8fb9\u6743\u524d\u7f00\u548c\u4e00\u4e0b\u4e3a$dis_i$\uff0c\u7b54\u6848\u53d8\u6210\n$$ans_1=max\\left\\{ f_i + f_j + dis_i - dis_j \\right\\}$$\n\n\u6574\u7406\u4e00\u4e0b\n$$ans_1=max\\left\\{ (f_i  + dis_i )+ (f_j - dis_j) \\right\\}$$\n\n\u8bbe\u73af\u4e0a\u8fb9\u6743\u603b\u548c\u4e3a$len$\uff0c\u5176\u5b9e\u5f53$dis_i - dis_j < 0$\u65f6\uff0c\u4e25\u8c28\u5730\u8bf4\u7b54\u6848\u5e94\u4e3a\n$$ans2=max\\left\\{ (f_i  + dis_i )+ (f_j - dis_j) + len \\right\\}$$\n\n\u6240\u4ee5\u53ea\u8981\u6c42\u4e00\u4e0b$max\\left\\{ f_i  + dis_i \\right\\}$\u548c$max\\left\\{f_i - dis_i\\right\\}$\u5373\u53ef\n\n\u6240\u4ee5\u7b2c\u4e8c\u79cd\u60c5\u51b5\u7684\u7b54\u6848\u4e3a$max\\left\\{ans_1,ans_2 \\right\\}$\n\n## code\n\n\u4ee3\u7801\u8d85\u7ea7\u7b80\u6d01\n\n```cpp\n#include <queue>\n#include <cstdio>\n#include <climits>\n#include <algorithm>\n\ntypedef long long LL;\nconst int N = 1e6 + 30;\n\nint n;\nint to[N], w[N], in[N];\nLL ans;\nLL f[N], g[N];\n\nstd::queue < int > q;\n\nint read()\n{\n    int ss = 0, ff = 1; char ch = getchar();\n    while (ch < '0' || ch > '9') {if (ch == '-') ff = -1; ch = getchar();}\n    while (ch >= '0' && ch <= '9') ss = ss * 10 + ch - '0', ch = getchar();\n    return ss * ff;\n}\n\nLL get(int p)\n{\n    int tmp = p; p = to[p];\n    LL m1 = f[tmp], m2 = f[tmp], s = w[tmp], ans1 = g[tmp], ans2 = LLONG_MIN;\n    while (p != tmp)\n    {\n        in[p] = 0;\n        ans1 = std::max(ans1, std::max(g[p], f[p] + s + m1));\n        ans2 = std::max(ans2, f[p] - s + m2);\n        m1 = std::max(m1, f[p] - s), m2 = std::max(m2, f[p] + s);\n        s += w[p], p = to[p];\n    }\n    return std::max(ans1, ans2 + s);\n}\n\nint main()\n{\n    n = read();\n    for (int i = 1; i <= n; ++i) to[i] = read(), w[i] = read(), ++ in[to[i]];\n    for (int i = 1; i <= n; ++i)\n        if (!in[i]) q.push(i);\n    while (!q.empty())\n    {\n        int p = q.front(); q.pop();\n        LL c = f[p] + w[p];\n        g[to[p]] = std::max(g[to[p]], std::max(f[to[p]] + c, g[p]));\n        f[to[p]] = std::max(f[to[p]], c);\n        if (!--in[to[p]]) q.push(to[p]);\n    }\n    for (int i = 1; i <= n; ++i)\n        if (in[i]) ans += get(i);\n    printf (\"%lld\\n\", ans);\n    return 0;\n}\n```",
        "postTime": 1606388268,
        "uid": 69495,
        "name": "marTixx",
        "ccfLevel": 0,
        "title": "[\u9898\u89e3]P4381 [IOI2008]Island"
    },
    {
        "content": "\u9898\u76ee\u5927\u610f$:$\n\n\u7ed9\u4f60\u4e00\u68f5\u57fa\u73af\u6811\u68ee\u6797\uff0c\u6c42\u51fa\u57fa\u73af\u6811\u7684\u76f4\u5f84\u4e4b\u548c.\n\n\u9898\u610f\u6bd4\u8f83\u7b80\u5355,\u4f46\u5199\u8d77\u6765\u53ef\u4e0d\u7b80\u5355.\u5bf9\u4e8e\u57fa\u73af\u6811\u68ee\u6797,\u6211\u4eec\u53ea\u9700\u8981\u904d\u5386\u4e00\u6b21,\u5c31\u53ef\u4ee5\u627e\u51fa\u6240\u6709\u6811,\u5728\u6bcf\u4e2a\u5206\u522b\u5904\u7406\u76f4\u5f84\u5373\u53ef.\u4f46\u5173\u952e\u5c31\u5728\u4e8e\u6c42\u57fa\u73af\u6811\u76f4\u5f84,\u8fd9\u91cc\u6307\u6700\u957f\u7b80\u5355\u8def\u5f84,\u5373\u6700\u957f\u7684\u6ca1\u6709\u91cd\u590d\u8fb9\u548c\u91cd\u590d\u70b9\u7684\u8def\u5f84.\n\n\u90a3\u4e48\u6211\u4eec\u6765\u8bf4\u600e\u4e48\u6c42\u57fa\u73af\u6811\u76f4\u5f84.\n\n\u5bf9\u4e8e\u57fa\u73af\u6811,\u6211\u4eec\u5c06\u73af\u770b\u4f5c\u6839,\u90a3\u4e48\u76f4\u5f84\u6709\u4e24\u79cd\u60c5\u51b5$:$\n\n$1.$\u4e0d\u7ecf\u8fc7\u73af,\u4e5f\u5c31\u662f\u73af\u4e0a\u67d0\u4e2a\u70b9\u7684\u5b50\u6811\u5185\u90e8,\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5,\u76f4\u63a5\u5728\u5b50\u6811\u5185\u90e8\u5904\u7406\u76f4\u5f84,\u66f4\u65b0\u7b54\u6848\u5373\u53ef;\n\n$2.$\u7ecf\u8fc7\u73af,\u90a3\u4e48\u9884\u5904\u7406\u51fa\u73af\u4e0a\u6bcf\u4e2a\u70b9\u5230\u5176\u5b50\u6811\u4e0a\u7684\u6700\u957f\u8ddd\u79bb,\u5728\u9884\u5904\u7406\u4e00\u4e2a\u73af\u4e0a\u524d\u7f00\u548c,$ans=max${$sondis[i]+sondis[j]+sumcircle[i]-sumcircle[j]$},\u66f4\u65b0\u7b54\u6848\u5373\u53ef.\n\n\u6700\u540e\u518d\u7d2f\u52a0\u7b54\u6848\u5373\u53ef.\n\n\u4ee3\u7801\u5b9e\u73b0\u4e0a,\u5148\u8dd1\u4e00\u904d$bfs$,\u9884\u5904\u7406\u51fa\u6bcf\u4e00\u4e2a\u70b9\u6240\u5c5e\u7684\u57fa\u73af\u6811,\u5728\u8dd1\u4e00\u904d$top$ $sort$,\u66f4\u65b0\u76f4\u5f84,\u540c\u65f6\u51fa\u6bcf\u4e2a\u70b9\u5f80\u5b50\u6811\u65b9\u5411\u6240\u80fd\u5230\u8fbe\u7684\u6700\u5927\u503c.\n\n\u518d\u6bcf\u68f5\u6811\u8dd1\u4e00\u904d\u60c5\u51b5$2$,\u7d2f\u52a0\u7b54\u6848,\u7ef4\u62a4\u5355\u8c03\u961f\u5217\u65f6\u5c06\u957f\u5ea6\u5f00\u4e3a\u4e24\u500d,\u65ad\u73af\u4e3a\u94fe\u5373\u53ef,\u5177\u4f53\u7ec6\u8282\u770b\u4ee3\u7801\u6ce8\u91ca,\u53e6\u5916\u8981\u7279\u6b8a\u5904\u7406\u4e8c\u5143\u73af.\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#define ll long long\nusing namespace std;\nconst int N=1e6+3;\nint to[N<<1],nex[N<<1],head[N],w[N<<1],tt;\nint c[N];//\u8bb0\u5f55\u5f53\u524d\u8282\u70b9\u5c5e\u4e8e\u7b2c\u51e0\u68f5\u57fa\u73af\u6811;\nint dg[N];//\u8bb0\u5f55\u5ea6\u6570;\nint q[N<<1];//\u6570\u7ec4\u6a21\u62df\u961f\u5217;\nll d[N];//d[i]\u8bb0\u5f55\u7b2ci\u68f5\u6811\u4e0a\u7684\u76f4\u5f84;\nll f[N];//f[i]\u8bb0\u5f55\u4ecei\u70b9\u5411\u513f\u5b50\u65b9\u5411\u4e0a\u6240\u53ef\u4ee5\u8d70\u7684\u6700\u957f\u8ddd\u79bb;\nll sumcircle[N<<1];//\u73af\u4e0a\u8ddd\u79bb\u524d\u7f00\u548c;\nll sondis[N<<1];//sondis[i]\u8bb0\u5f55\u73af\u4e0a\u7684\u7b2ci\u4e2a\u70b9\u5230\u5176\u5b50\u6811\u7684\u6700\u8fdc\u8ddd\u79bb;\nint cnt,n;\nbool vis[N];//\u6807\u8bb0\u5f53\u524d\u57fa\u73af\u6811\u662f\u5426\u5df2\u89e3\u51b3\u8fc7;\ninline void add(int x,int y,int W){\n    to[++tt]=y,w[tt]=W,nex[tt]=head[x],head[x]=tt;\n    return ;\n}\ninline void bfs(int p,int t){\n    int l=0,r=1;\n    q[1]=p,c[p]=t;//\u5e7f\u641c\u9884\u5904\u7406\u6bcf\u4e00\u4e2a\u70b9\u6240\u5c5e\u57fa\u73af\u6811\u7684\u7f16\u53f7;\n    while(l<r){\n        ++l;\n        int x=q[l];\n        for(int i=head[x],v;i;i=nex[i]){\n            v=to[i];\n            if(!c[v]){\n                q[++r]=v;\n                c[v]=t;\n            }\n        }\n    }\n    return ;\n}\ninline void top_sort(){//\u62d3\u6251\u6392\u5e8f\u6c42\u4e0d\u7ecf\u8fc7\u73af\u7684\u76f4\u5f84,\u4ece\u53f6\u5b50\u8282\u70b9\u5411\u6839(\u73af)\u904d\u5386;\n    int l=0,r=0;\n    for(int i=1;i<=n;++i)if(dg[i]==1)q[++r]=i;//\u5c06\u6240\u6709\u5ea6\u6570\u4e3a1\u7684\u70b9\u5148\u52a0\u5165\u961f\u5217\u4e2d(\u5373\u53f6\u5b50\u7ed3\u70b9);\n    while(l<r){\n        ++l;\n        int x=q[l];\n        for(int i=head[x],v;i;i=nex[i]){\n            v=to[i];\n            if(dg[v]>1){//\u6b64\u65f6v\u5728\u4ee5\u73af\u4e3a\u6839\u7684\u6811\u4e0a\u662f\u5176\u5b9e\u662fx\u7684\u7236\u4eb2;\n                d[c[x]]=max(d[c[x]],f[x]+f[v]+w[i]);//\u66f4\u65b0\u5f53\u524d\u57fa\u73af\u6811\u4e0a\u7684\u7b54\u6848,;\n                f[v]=max(f[v],f[x]+w[i]);//\u66f4\u65b0\u7236\u8282\u70b9\u53ef\u4ee5\u5230\u8fbe\u7684\u6700\u8fdc\u8282\u70b9;\n                if(--dg[v]==1)q[++r]=v;//\u82e5\u5f53\u524d\u5ea6\u6570\u73b0\u5728\u53d8\u4e3a1,\u5165\u961f;\n            }\n        }\n    }\n    return ;\n}\ninline void work(int t,int x){\n    int tot=0,l,r,v=x,u,i;//\u5728\u62d3\u6251\u6392\u5e8f\u540e\u5df2\u7ecf\u5c06\u975e\u73af\u4e0a\u7684\u8fb9\u904d\u5386\u5b8c\u4e86,\u73af\u4e0a\u7684\u8fb9\u548c\u70b9\u5747\u8fd8\u672a\u904d\u5386,\u4e14\u5ea6\u6570\u4e3a2,\u5c06x\u770b\u505a\u73af\u4e0a\u7684\u8d77\u70b9,v\u770b\u505a\u7ec8\u70b9;\n    do{\n        dg[v]=1,sondis[++tot]=f[v];//\u5c06\u5f53\u524d\u70b9\u5ea6\u6570\u8bb0\u4e3a1,\u9632\u6b62\u53cd\u5411\u904d\u5386,\u540c\u65f6\u8bb0\u5f55\u7b2ctot\u53f7\u73af\u4e0a\u8282\u70b9\u5230\u5b50\u6811\u4e0a\u7684\u6700\u77ed\u8ddd\u79bb;\n        for(i=head[v];i;i=nex[i]){\n            u=to[i];\n            if(dg[u]>1){//\u73af\u4e0a\u7684\u70b9\u5ea6\u6570\u5747\u5927\u4e8e1,\u6240\u4ee5\u5ea6\u6570\u5927\u4e8e1\u7684\u70b9\u5373\u662f\u73af\u4e0a\u7684\u70b9;\n                v=u;//\u66f4\u65b0\u7ec8\u70b9;\n                sumcircle[tot+1]=sumcircle[tot]+w[i];//\u5904\u7406\u73af\u4e0a\u8ddd\u79bb\u524d\u7f00\u548c;\n                break;//\u4fdd\u8bc1\u5411\u4e00\u8fb9\u679a\u4e3e,\u6240\u4ee5\u627e\u5230\u4e00\u4e2a\u70b9\u5c31break;\n            }\n        }\n    }while(i);\n    if(tot==2){//\u7279\u6b8a\u5904\u7406\u4e8c\u5143\u73af;\n        int len=0;\n        for(i=head[v];i;i=nex[i]){\n            u=to[i];\n            if(u==x){\n                len=max(len,w[i]);//\u627e\u51fa\u4e24\u4e2a\u70b9\u4e4b\u95f4\u8f83\u5927\u7684\u8fb9; \n            }\n        }\n        d[t]=max(d[t],(ll)len+f[x]+f[v]);//\u66f4\u65b0\u7b54\u6848;\n        return ;\n    }\n    for(int i=head[v],u;i;i=nex[i]){\n        u=to[i];\n        if(u==x){\n            sumcircle[tot+1]=sumcircle[tot]+w[i];//\u5c06\u8d77\u70b9\u548c\u7ec8\u70b9\u7684\u8ddd\u79bb\u5904\u7406\u51fa\u6765;\n            break;\n        }\n    }\n    for(i=1;i<tot;i++)sondis[tot+i]=sondis[i],sumcircle[tot+i]=sumcircle[tot+1]+sumcircle[i];//\u65ad\u73af\u4e3a\u94fe,\u518d\u590d\u5236\u4e00\u904d\u6570\u7ec4;\n    q[1]=1;\n    l=r=1;\n    for(int i=2;i<tot<<1;++i){\n        while(l<=r&&i-q[l]>=tot)++l;//\u5c06\u8d85\u51fa\u73af\u957f\u5ea6\u7684\u90e8\u5206\u5f39\u51fa;\n        d[t]=max(d[t],sondis[q[l]]+sondis[i]+sumcircle[i]-sumcircle[q[l]]);\n        while(l<=r&&sondis[q[r]]+sumcircle[i]-sumcircle[q[r]]<=sondis[i])--r;//\u5c06\u961f\u5c3e\u7b54\u6848\u4e0d\u591f\u4f18\u79c0\u7684\u90e8\u5206\u5f39\u51fa;\n        q[++r]=i;//\u5165\u961f;\n    }\n    return ;\n}\nint main(){\n    freopen(\"ceshi.in\",\"r\",stdin);\n    cin>>n;\n    int x,W;\n    for(int i=1;i<=n;++i)scanf(\"%d%d\",&x,&W),add(x,i,W),add(i,x,W),++dg[x],++dg[i];\n    for(int i=1;i<=n;++i)if(!c[i])bfs(i,++cnt);//\u9884\u5904\u7406;\n    top_sort();//\u62d3\u6251\u6392\u5e8f\u6c42\u76f4\u5f84;\n    ll ans=0;\n    for(int i=1;i<=n;++i)\n        if(dg[i]>1&&!vis[c[i]]){//\u5982\u679c\u5f53\u524d\u57fa\u73af\u6811\u672a\u88ab\u5904\u7406,\u5e76\u4e14\u5f53\u524d\u70b9\u662f\u73af\u4e0a\u70b9,\u5c31\u5904\u7406;\n            vis[c[i]]=true;\n            work(c[i],i);\n            ans+=d[c[i]];//\u7d2f\u52a0\u7b54\u6848;\n        }\n    cout<<ans<<'\\n';\n    return 0;\n}\n```",
        "postTime": 1566548128,
        "uid": 124890,
        "name": "bugaile",
        "ccfLevel": 0,
        "title": "P4381 [IOI2008]Island"
    },
    {
        "content": "~~\u8bfb\u9898\u8bfb\u4e86\u621110min emmmmm~~\n\n\u9898\u89e3\u53c2\u8003\u4e86lyd\u5927\u4f6c\u8fdb\u9636\u6307\u5357\u4e0a\u7684\u601d\u8def\u3002\n\n\u53ef\u4ee5\u770b\u51fa\uff0c\u7ed9\u51fa\u7684\u56fe\u662f\u7531\u51e0\u9897\u57fa\u73af\u6811\u6784\u6210\u7684\u3002\n\n\u56e0\u4e3a\u79bb\u5f00\u67d0\u9897\u57fa\u73af\u6811\u5c31\u4e0d\u80fd\u518d\u56de\u6765\uff0c\u6240\u4ee5\u9898\u76ee\u7684\u7b54\u6848\u5c31\u662f\u5404\u9897\u57fa\u73af\u6811\u7684\u76f4\u5f84\u4e4b\u548c\u3002\n\n\u57fa\u73af\u6811\u7684\u76f4\u5f84\u663e\u7136\u6709\u4e24\u79cd\u3002\n\n**\uff081\uff09**\uff1a\u5904\u4e8e\u4e0d\u5728\u73af\u4e0a\u7684\u8282\u70b9\u7684\u67d0\u9897\u5b50\u6811\u4e2d\n\n**\uff082\uff09**\uff1a\u90e8\u5206\u7ecf\u8fc7\u73af\u4e14\u53bb\u6389\u5904\u4e8e\u73af\u4e0a\u7684\u8fb9\u540e\u4f4d\u4e8e\u4e24\u9897\u4e0d\u540c\u7684\u5b50\u6811\u5185\u3002\n\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5148\u7528\u62d3\u6251\u6392\u5e8f\u6c42\u51fa\u73af\u4e0a\u6240\u6709\u7684\u70b9\u3002\n\n\u540c\u65f6\u6c42\u51fa\u4ece\u6bcf\u4e2a\u73af\u4e0a\u8282\u70b9\u51fa\u53d1\u5728\u4e0d\u7ecf\u8fc7\u73af\u7684\u524d\u63d0\u4e0b\u7684\u6700\u957f\u94fe\uff0c\u5e76\u7528\u6c42\u6811\u7684\u76f4\u5f84\u7684\u65b9\u6cd5\u66f4\u65b0\u7b54\u6848\u5904\u7406\u7b2c\u4e00\u79cd\u60c5\u51b5\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u5c31\u7b49\u4ef7\u4e8e\u4ece\u73af\u4e0a\u627e\u51fa\u4e24\u70b9i.j,\u8ba9f[i]+dis(i,j)+f[j]\u6700\u5927\uff0cdis(i,j)\u4e3a\u4e24\u70b9\u5728\u73af\u4e0a\u7684\u8ddd\u79bb\uff0c\u8003\u8651\u987a\u65f6\u9488\u548c\u9006\u65f6\u9488\u4e24\u79cd\u8d70\u6cd5\u3002\n\n\u4e3a\u4e86\u5feb\u901f\u6c42\u51faf[i]+dis(i,j)+f[j]\u7684\u503c\uff0c\u6211\u4eec\u7834\u73af\u6210\u94fe\uff0c\u7528\u5355\u8c03\u961f\u5217\u4f18\u5316\u3002\n\n```\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<string>\n#include<cstring>\n#include<cmath>\nusing namespace std;\ntypedef long long ll;\nconst int u=1000010;\nint ver[2*u],edge[2*u],next[2*u],head[u],du[u],c[u],v[u],q[2*u];\nll f[u],d[u],a[2*u],b[2*u],ans;\nint n,m,tot,t,i,x,y;\ninline ll read(){\n\tll x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<1)+(x<<3)+ch-'0';ch=getchar();}\n\treturn x*f;\n}\ninline void add(int x,int y,int z){\n\tver[++tot]=y;edge[tot]=z;next[tot]=head[x];head[x]=tot;du[y]++;\n}\ninline void bfs(int s,int t){\n\tint l,r,i;\n\tq[l=r=1]=s;c[s]=t;\n\twhile(l<=r){\n\t\tfor(i=head[q[l]];i;i=next[i])\n\t\t\tif(!c[ver[i]]){q[++r]=ver[i];c[ver[i]]=t;}\n\t\tl++;\n\t}\n}\ninline void topsort(){\n\tint l=1,r=0,i,x,y;\n\tfor(i=1;i<=n;i++) if(du[i]==1) q[++r]=i;\n\twhile(l<=r){\n\t\tfor(i=head[x=q[l]];i;i=next[i]){\n\t\t\tif(du[y=ver[i]]>1){\n\t\t\t\td[c[x]]=max(d[c[x]],f[x]+f[y]+edge[i]);\n\t\t\t\tf[y]=max(f[y],f[x]+edge[i]);\n\t\t\t\tif((--du[y])==1) q[++r]=y;\n\t\t\t}\n\t\t}\n\t\tl++;\n\t}\n}\ninline void dp(int t,int x){\n\tint m=0,i,l=0,r,y=x;\n\tdo{\n\t\ta[++m]=f[y];du[y]=1;\n\t\tfor(i=head[y];i;i=next[i]){\n\t\t\tif(du[ver[i]]>1){\n\t\t\t\tb[m+1]=b[m]+edge[i];y=ver[i];break;\n\t\t\t}\n\t\t}\n\t}while(i);\n\tif(m==2){\n\t\tfor(i=head[y];i;i=next[i]){\n\t\t\tif(ver[i]==x){\n\t\t\t\tl=max(l,edge[i]);\n\t\t\t}\n\t\t}\n\t\td[t]=max(d[t],f[x]+f[y]+l);\n\t\treturn;\n\t}\n\tfor(i=head[y];i;i=next[i]){\n\t\tif(ver[i]==x){\n\t\t\tb[m+1]=b[m]+edge[i];break;\n\t\t}\n\t}\n\tfor(i=1;i<m;i++) a[m+i]=a[i],b[m+i]=b[m+1]+b[i];\n\tq[l=r=1]=1;\n\tfor(i=2;i<2*m;i++){\n\t\twhile(l<=r&&i-q[l]>=m) l++;\n\t\td[t]=max(d[t],a[i]+a[q[l]]+b[i]-b[q[l]]);\n\t\twhile(l<=r&&a[q[r]]-b[q[r]]<=a[i]-b[i]) r--;\n\t\tq[++r]=i;\n\t}\n}\nint main(){\n\tn=read();\n\tfor(i=1;i<=n;i++){\n\t\tx=read();y=read();\n\t\tadd(i,x,y);add(x,i,y);\n\t}\n\tfor(i=1;i<=n;i++){\n\t\tif(!c[i]) bfs(i,++t);\n\t}\n\ttopsort();\n\tfor(i=1;i<=n;i++){\n\t\tif(du[i]>1&&!v[c[i]]){\n\t\t\tv[c[i]]=1;dp(c[i],i);ans+=d[c[i]];\n\t\t}\n\t}\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1543142208,
        "uid": 53032,
        "name": "\u5c0f\u5858\u7a7a\u660e",
        "ccfLevel": 0,
        "title": "P4381 [IOI2008]Island"
    },
    {
        "content": "\u56e0\u4e3a\u9898\u89e3\u533a\u90fd\u662f\u5355\u8c03\u961f\u5217 \u6240\u4ee5\u8865\u5145\u4e00\u4e2a\u4e0d\u4e00\u6837\u7684\u505a\u6cd5 \n\n\u9898\u76ee\u8981\u6c42 \uff1a \u6c42\u6240\u6709\u57fa\u73af\u6811\u7684\u76f4\u5f84\u548c \n\n\uff08\u6ce8 \uff1a \u9047\u5230\u73af\u8d70\u8fb9\u6743\u548c\u5927\u7684\u90a3\u4e00\u8fb9 \uff09 \n\n\u8fd9\u9053\u9898\u662f\u65e0\u5411\u6811 \u65e0\u5411\u6811\u4e00\u822c\u6709\u8fd9\u79cd\u5957\u8def \uff1a\n\n1 . \u627e\u51fa\u73af 2 . \u9664\u73af\u5916\u7684\u5b50\u6811\u5404\u81ea\u5355\u72ec\u5904\u7406 3 \u7efc\u5408\u8ba1\u7b97 \n\n\u56de\u770b\u5230\u9898\u76ee \n\n\u6bcf\u4e00\u4e2a\u57fa\u73af\u6811\u7684\u76f4\u5f84\u6709\u4e24\u79cd\u53ef\u80fd \n\n1 . \u9664\u73af\u5916\u7684\u5b50\u6811\u7684\u76f4\u5f84  \n\n2 . \u76f4\u5f84\u7ecf\u8fc7\u73af\u4e0a\u7684\u8fb9 \uff0c\u7aef\u70b9\u57282\u4e2a\u4e0d\u540c\u5b50\u6811\u4e2d \n\n\u5148\u770b\u60c5\u51b5 2 \u6709\u4e00\u4e2a\u5c0f\u7ed3\u8bba\u663e\u7136\u6210\u7acb \uff1a\n\n\u57fa\u73af\u6811\u7684\u76f4\u5f84\u4e0d\u4f1a\u7ecf\u8fc7\u6240\u6709\u73af\u4e0a\u7684\u8fb9 \n\n\u8bc1\u660e \uff1a \u70b9\u4e0d\u80fd\u88ab\u91cd\u590d\u7ecf\u8fc7 \n\n\u4e5f\u5c31\u662f\u8bf4 \u5220\u6389\u67d01\u6761\u8fb9 \u4e0d\u4f1a\u5bf9\u57fa\u73af\u6811\u7684\u76f4\u5f84\u4ea7\u751f\u5f71\u54cd\n\n\u7b97\u6cd5\u7684\u601d\u8def\u5927\u81f4\u5982\u4e0b \uff1a \u679a\u4e3e\u5220\u6389\u76841\u6761\u8fb9 \u518d\u6c42\u6811\u7684\u76f4\u5f84 \n\n\u95ee\u9898\u7684\u74f6\u9888\u4e5f\u5728\u4e8e \uff1a \u5982\u4f55**\u5feb\u901f**\u6c42\u51fa\u5904\u7406\u540e\u7684\u6811\u7684\u76f4\u5f84 \n\n\u8bbe \n\n\u73af\u957f\u4e3a$len$ \u73af\u4e0a\u7684\u8282\u70b9\u4e3a $v$ \n\n\u4ee5\u73af\u4e0a\u8282\u70b9\u4e3a\u6839\u8282\u70b9\u7684\u6700\u957f\u94fe $f$ ( \u663e\u7136\u9664\u53bb\u73af \uff09\n\n\u8fb9\u6743\u7684\u524d\u7f00\u548c\u4e3a $S$ \n\n\u73b0\u5728\u8003\u8651\u5220\u6389 $v_{k}$\u5230$v_{k+1}$\u7684\u8fb9 \n\n1 \u5982\u679c\u76f4\u5f84\u7684\u4e24\u4e2a\u70b9\u90fd\u5728 i\u7684**\u5de6\u7aef**  \u90a3\u4e48\u76f4\u5f84\u5c31\u662f \n\n$f_{i}-S_{i}+f_{j}+S_{j}  ( 1 <= i < j <=k )$  \n\n$L0_{k}$ \u8bb0\u5f55\u8fd9\u4e2a\u5f0f\u5b50\u7684\u6700\u5927\u503c \n\n(\u6ce8 \uff1a \u5de6\u7aef\u70b9\u4e00\u5f8bi \u53f3\u7aef\u70b9\u4e00\u5f8b\u662fj ) \n\n2 \u5982\u679c\u90fd\u5728\u53f3\u7aef \u540c\u4e0a \n\n$f_{i}-S_{i}+f_{j}+S_{j} ( k < i < j <= len )$ \n\n$R0_{k+1}$ \u8bb0\u5f55\u8fd9\u4e2a\u5f0f\u5b50\u7684\u6700\u5927\u503c \n\n3 \u5982\u679c\u5de6\u7aef\u70b9\u5728i\u5de6\u8fb9 \u53f3\u7aef\u70b9\u5728i+1\u53f3\u8fb9 \n\n$f_{i}+S_{i}+f_{j}+(S_{len}-S{j}) ( 1 <= i <= k , k<j<=len)$ \n\n\u5206\u5f00\u6765\u7ef4\u62a4 \n\n$f_{i}+S_{i}$ \u7684\u6700\u5927\u503c\u8bb0\u5f55\u4e3a$L_{k}$ \n\n$f_{j}+(S_{len}-S{j})$ \u7684\u6700\u5927\u503c\u8bb0\u5f55\u4e3a$R_{k+1}$ \n\n\u63a5\u4e0b\u6765\u5c31\u6bd4\u8f83\u7b80\u5355\u4e86 \u53ea\u8981\u6c42\u51fa\u8fd9\u4e9b\u6570\u7ec4 \n\n\u5148\u8003\u8651 \u60c5\u51b51 \n\n\u5047\u8bbe\u73b0\u5728\u6b63\u5728\u6c42$L0_{j}$ \n\n\u8bbe $Now$ \u662f $f_{i}-S_{i}(1<=i<j)$ \u7684\u6700\u5927\u503c \n\n\u90a3\u4e48\u6709\u9012\u63a8\u5f0f $L0_{j}=max(L0_{j-1},f_{j}+Now+S_{i})$ \n\n\u4e4b\u540e\u5c06\u8981\u6c42$L0_{j+1}$ \u6211\u4eec\u628aNow\u66f4\u65b0\u4e00\u4e0b\u5c31OK\u4e86 \n\n\u5176\u4ed6\u4e09\u4e2a\u6570\u7ec4\u4ee5\u6b64\u7c7b\u63a8 \n\n\uff08\u6ce8 \uff1a \u4ee3\u7801\u4e2d\u7684\u5de6\u53f3\u7aef\u70b9\u4e0e\u4e0a\u6587\u4e0d\u540c \u8bf7\u6ce8\u610f \uff09\n\n\u4ee3\u7801 \uff1a \n\n```cpp\n#include <bits/stdc++.h> \n#define Rg register \n#define MAX 1000005 \n#define LL long long \n#define INF 1e17 \n#define IL inline \nusing namespace std ; \nIL int read( ) { \n    Rg int x=0,f=1; Rg char ch=getchar();\n    while(ch<'0'||ch>'9') { if(ch=='-') f = -1 ; ch=getchar(); } \n    while(ch>='0'&&ch<='9') { x = (x<<1) + (x<<3) + (ch^48) ; ch=getchar();}\n    return x*f; } \nint ins[MAX] , lis[MAX] , Val[MAX] , n , len , \u3000q[MAX] , l=1 , r ; \nvector <int> v[MAX] , edge[MAX] ; bool In[MAX] ;\nLL Ans , Ans1 , Ans2 , f[MAX] , S[MAX] , L[MAX] , R[MAX] , D[MAX] , L0[MAX] , R0[MAX] , Now ; \nIL LL max( Rg LL A , Rg LL B ) { return A > B ? A : B ; }   \nIL void find_c( Rg int x ) { \n\tIn[x] = 1 ; \n\tfor( Rg int i=0; i<v[x].size(); i++) { \n\t\tint u = v[x][i] , z = edge[x][i] ; \n\t\tif( In[u] || ins[u] <= 1 ) continue ;  \n\t\tlis[++len] = u ;  Val[len] = z ; \n\t\tfind_c( u ) ; return ;  \n\t}\n} \nIL void Solve( int p ) {\n\tlen = 0 ;  Ans1 = Ans2 = -INF ;   \n\tlis[++len] = p ; find_c( p ) ;    \n\tif( len == 2 ) {  \n\t    Rg LL Z1 = -1 , Z2 = -1 ;  \n\t    for( Rg int i=0;i<v[lis[2]].size(); i++) { \n\t    \tint u = v[lis[2]][i] , z= edge[lis[2]][i] ;\n\t    \tif( u == lis[1] ) \n\t    \t   if( Z1 == -1 ) Z1 = z ; else { Z2 = z ;  break; } \n\t\t}  \n\t\tAns1 = max( Z1 , Z2 ) + f[lis[1]] + f[lis[2]] ; \n\t\tAns2 = max( D[lis[1]] , D[lis[2]] ) ; \n\t\tAns += max( Ans1 , Ans2 ) ; \n\t\treturn ;  \n\t}  \n\tfor( int i=0; i<v[lis[len]].size(); i++) \n\t\tif( v[lis[len]][i] == p )  { Val[1] = edge[lis[len]][i] ; break; } \n\tNow = -INF ; L[0] = L0[0] = -INF ; \n\tfor(Rg int i=1; i<=len; i++) { \n\t    S[i] = S[i-1]+Val[i] ;\n\t\tL[i] = max( L[i-1] , f[lis[i]]+S[i] ) ;\n\t\tL0[i] = max( L0[i-1] , f[lis[i]]+Now+S[i] ) ;\n\t\tNow = max( Now , f[lis[i]]-S[i] ) ; \n\t} Now = -INF ; R[len+1] = R0[len+1] = -INF ;  \n\tfor(Rg int i=len; i>0; i--) {   \n\t\tR[i] = max( R[i+1] , f[lis[i]]+S[len]-S[i] ) ;  \n\t\tR0[i] = max( R0[i+1] , f[lis[i]]-S[i]+Now ) ; \n\t\tNow = max( Now , f[lis[i]]+S[i] ) ;  \n\t} \n\tfor(Rg int i=1; i<=len; i++)  \n\t  Ans2 = max( Ans2 , max( max( L0[i] , R0[i+1] ) ,  max( D[lis[i]] , L[i]+R[i+1] ) ) ) ; \n\tAns += max( Ans1 , Ans2  ) ;  \n} \nsigned main() {\n\tn = read() ;  Rg int x , z ;\n\tfor(Rg int i=1; i<=n; i++) {  \n\t\tx = read() ; z = read() ;  ins[i]++ ; ins[x]++ ; \n\t\tv[x].push_back(i) ;\n\t\tedge[x].push_back(z) ;\n\t\tv[i].push_back(x) ; \n\t\tedge[i].push_back(z) ;  \n\t}   \n\tfor(Rg int i=1; i<=n; i++)  \n\t\tif( ins[i] == 1 ) q[++r] = i ;   \n\twhile( l<=r ) {  \n\t\tRg int u = q[l++] ;   \n\t\tfor( int i=0; i<v[u].size(); i++) {   \n\t\t\tint x = v[u][i] , z = edge[u][i] ; \n\t\t\tif( ins[x] <= 1 ) continue ; \n\t\t\tD[x] = max( D[x] , f[x]+f[u]+z ) ; \n\t\t    D[x] = max( D[x] , D[u] ) ; \n\t\t    f[x] = max( f[x] , f[u]+z ) ; \n\t\t\tins[x] -- ; \n\t\t\tif( ins[x] == 1 ) \n\t\t\t  q[++r] = x ;  \n\t\t}   \n\t}   \n\tfor(Rg int i=1; i<=n; i++)  \n\t if( ins[i] >= 2 && !In[i] ) Solve( i ) ;\n\tcout << Ans << endl;  \n\treturn 0 ;  \n} \n```\n\n\uff08\u5410\u69fd \uff1a \u4ee3\u7801\u6548\u7387\u6781\u4f4e \u4eba\u4e11\u5e38\u6570\u4e0d\u662f\u4e00\u822c\u7684\u5927 \n\n\u5c31\u7b97\u5f00O2\u4e5f\u662f\u5728\u6781\u9650\u5361\u65f6\u8fc7\u7684 \uff09 \n\n\u8fd9\u4e2a\u601d\u8def\u5176\u5b9e\u5728\u8fd9\u9053\u9898\u91cc\u7684\u9898\u89e3\u4e2d  [CF835F](https://www.luogu.com.cn/problem/CF835F)  \n\n\u8fd9\u4f4d\u624d\u662f[\u539f\u521b\u4f5c\u8005](https://www.luogu.com.cn/user/73489)\n\n\u5982\u6709\u5192\u72af\u4e86\u539f\u521b \u8bf7\u591a\u89c1\u8c05 \u6216\u662f\u8054\u7cfb\u7a9d",
        "postTime": 1576310881,
        "uid": 100114,
        "name": "hater",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4381 \u3010[IOI2008]Island\u3011"
    },
    {
        "content": "\u524d\u7f6e\u77e5\u8bc6\uff1a\u5355\u8c03\u961f\u5217\u4f18\u5316\u73af\u5f62dp + topsort\u627e\u73af + \u57fa\u73af\u6811\n\n\u5bf9\u4e8e\u57fa\u73af\u6811\u7cfb\u5217\u7684\u9898\uff0c\u6700\u91cd\u8981\u7684\u5c31\u662f\u627e\u73af\uff0c\u5176\u4ed6\u64cd\u4f5c\u90fd\u662f\u57fa\u4e8e\u73af\u7684\u3002\u6240\u4ee5\u53eb\u201c\u57fa\u73af\u6811\u201dQwQ\n\u4e00\u68f5\u57fa\u73af\u6811\u7684\u76f4\u5f84\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n1\u3001\u7ecf\u8fc7\u73af\u4e0a\u4e24\u4e2a\u8282\u70b9\u5916\u52a0\u5b50\u6811\u7684\u6700\u6df1\u6df1\u5ea6\uff0c\u4e5f\u5c31\u662fdis(i,j)+dep[i]+dep[j]\uff0c\u5176\u4e2ddep\u4ee3\u8868\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u6240\u80fd\u5230\u8fbe\u7684\u6700\u6df1\u8282\u70b9\uff0cdis\u4ee3\u8868i\u5230j\u7684\u6700\u5927\u8ddd\u79bb.\u8fd9\u91cc\u6709\u9006\u65f6\u9488\u548c\u987a\u65f6\u9488\u4e24\u79cd\u60c5\u51b5\uff0c \u6211\u4eec\u8981\u53d6\u5927\u7684\u60c5\u51b5\uff0c \u4e5f\u5c31\u662f\u6211\u4eec\u8981\u65ad\u73af\u6210\u94fe\uff0c \u8fdb\u884c\u5355\u8c03\u961f\u5217\u4f18\u5316dp\u7684\u539f\u56e0\n\n2\u3001\u67d0\u4e2a\u4e0d\u7ecf\u8fc7\u73af\u4e0a\u67d0\u4e2a\u70b9\u7684\u5b50\u6811\u7684\u6700\u957f\u7684\u76f4\u5f84\uff0c \u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u8fdb\u884cdfs\u6216\u8005bfs\u6c42\u6700\u957f\u94fe\uff0c \u4f46\u662fdfs\u7684\u6df1\u5ea6\u53ef\u80fd\u662fn\uff0c \u4f1a\u6709\u7206\u6808\u7684\u98ce\u9669\uff0c \u6240\u4ee5\u6211\u4eec\u9009\u62e9bfs\uff1b\n\n\u4ee5\u4e0a\u662f\u9884\u5904\u7406\uff0c \u90a3\u4e48\u6211\u4eec\u5c31\u8981\u8fdb\u884c\u5355\u8c03\u961f\u5217\u4f18\u5316\u4e86\uff0c \u8fd9\u91cc\u6211\u4eec\u67091\u70b9\u8981\u6ce8\u610f\n\n\u6211\u4eec\u5728\u8fdb\u884c\u5355\u8c03\u961f\u5217\u4f18\u5316\u7684\u65f6\u5019\u8981\u5148\u5f39\u51fa\u5f00\u5934\uff0c \u7136\u540e\u8ba1\u7b97\u6700\u5927\u503c\uff0c \u7136\u540e\u518d\u4e0e\u961f\u5217\u7ed3\u5c3e\u6bd4\u8f83\u5f39\u51fa\u7ed3\u5c3e\uff01\uff01\n\n\u5bf9\u6211\u4eec\u53ef\u4ee5\u5f97\u77e5\uff0c \u672c\u9898\u7684\u8981\u6c42\u662f\u4e00\u4e2a\u5c9b\u4e0d\u80fd\u91cd\u590d\u7ecf\u8fc7\uff0c \u4e5f\u5c31\u662f\u4e00\u4e2a\u70b9\u4e0d\u80fd\u5230\u8fbe2\u6b21\uff0c \u5982\u679c\u6211\u4eec\u662f\u5148\u5f39\u51fa\u540e\u9762\uff0c \u518d\u5f39\u51fa\u524d\u9762\uff0c \u518d\u8ba1\u7b97\u6700\u5927\u503c\uff0c \u5c31\u53ef\u80fd\u51fa\u73b0\uff0c \u4e00\u4e2a\u70b9\u91cd\u590d\u8ba1\u7b972\u6b21\u7684\u60c5\u51b5\uff0c \u4e5f\u5c31\u662f\u961f\u9996\u5143\u7d20\u5c31\u662f\u5f53\u524d\u5143\u7d20\u7684\u7279\u6b8a\u60c5\u51b5\uff0c \u5982\u679c\u4e0d\u6ce8\u610f\u7684\u8bdd\u4f1a\u5f97\u523090\u5206\u9ad8\u5206\uff08\u5bf9\u4e8e\u8fd9\u79cd\u5de8\u5927\u7684\u9519\u8bef\u6765\u8bf4\uff0c 90\u5206\u771f\u7684\u662f\u9ad8\u5206\u4e86\uff09\n\n```c++\n#include <iostream>\n#include <cmath>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <deque>\n#include <queue>\n#define int long long\n#define ll long long\nusing namespace std;\nconst int N = 1e6 + 5;\ninline int read() {\n\tint x = 0, f = 1; char c = getchar();\n\twhile(c < '0' || c > '9') {if(c == '-1') f = -1; c = getchar();}\n\twhile(c >= '0' && c <= '9') {x = x * 10 + c - '0'; c = getchar();}\n\treturn f * x;\n}\nbool vis[N];\nint ver[N << 1], e = 1, nexts[N << 1], head[N], ins[N], belong[N];\nll edge[N << 1], ans , dis[N], maxn[N], a[N <<1], b[N <<1];\ninline void add(int x, int y, ll z) {\n\tver[++ e] = y;\n\tnexts[e] = head[x];\n\thead[x] = e;\n\tedge[e] = z;\n\tins[y] ++;\n}\nint n, tot = 0;\ninline void bfs(int x, int num) {\n\tqueue<int> q;\n\tq.push(x); \n\twhile(!q.empty()) {\n\t\tint x = q.front();\n\t\tq.pop();\n\t\tbelong[x] = num;\n\t\tfor(int i = head[x]; i; i = nexts[i]) {\n\t\t\tint v = ver[i];\n\t\t\tif(!belong[v]) q.push(v);\n\t\t}\n\t}\n}\ninline void topsort() {\n\tqueue<int>q;\n\tfor(int i = 1; i <= n; i ++)\n\t\tif(ins[i] == 1)\n\t\t\tq.push(i);\n\twhile(!q.empty()) {\n\t\tint x = q.front();\n\t\tq.pop();\n\t\tfor(int i = head[x]; i; i = nexts[i]) {\n\t\t\tint v = ver[i];\n\t\t\tif(ins[v] != 1) {\n\t\t\t\tins[v] --;\t\n\t\t\t\tmaxn[belong[x]] = max(maxn[belong[x]], dis[v] + dis[x] + edge[i]);\n\t\t\t\tdis[v] = max(dis[v], dis[x] + edge[i]);\n\t\t\t\tif(ins[v] == 1)\n\t\t\t\t\tq.push(v);\n\t\t\t}\n\t\t} \n\t}\n}\ninline ll dp(int num, int xx) {\n\tint x = xx;\n\tint y = x, m = 0, i;\n\tll  Dis = maxn[num], l = 0;\n\tdo {\n\t\ta[++m] = dis[y]; ins[y] = 1;\n\t\tfor(i = head[y]; i; i = nexts[i]) \n\t\t\tif(ins[ver[i]] > 1) {\n\t\t\t\ty = ver[i];\n\t\t\t\tb[m + 1] = b[m] +edge[i];\n\t\t\t\tbreak;\n\t\t\t} \n\t}while(i);\n\n\tfor(i = head[y]; i; i = nexts[i])\n\t\tif(ver[i] == x) {\n\t\t\tb[m + 1] = b[m] + edge[i];\n\t\t}\n\tfor(i = 1; i <m; i ++) {\n\t\ta[m + i] = a[i];\n\t\tb[m + i] = b[m + 1] + b[i]; \n\t}\n\tdeque<int> q;\n\tq.push_back(1);\n\tfor(i = 2; i < 2 * m; i ++) {\n\t\twhile(!q.empty() && i - q.front() >= m) q.pop_front();\n\t\tDis = max(Dis, a[i] + a[q.front()] + b[i] - b[q.front()]);\n\t\t\twhile(!q.empty() && a[q.back()] + b[i] - b[q.back()] <= a[i]) q.pop_back();\n\t\tq.push_back(i);\n\t}\n\treturn Dis;\n}\nsigned main() {\n\t//freopen(\"tjj.in\", \"r\", stdin);\n\t//freopen(\"tjj.out\", \"w\", stdout);\n\tn = read();\n\tfor(int i = 1; i <= n; i ++) {\n\t\tint x = read(), y = read();\n\t\tadd(i, x, y); add(x, i, y);\n\t}\n\tfor(int i = 1; i <= n; i ++)\n\t\tif(belong[i] == 0)\n\t\t\tbfs(i, ++tot);\n\ttopsort();\n\t\tfor(int i = 1; i <= n; i ++)\n\t\tif(ins[i] > 1 && belong[i]) {\n\t\t\tans += dp(belong[i], i), belong[i] = 0;\n\t\t}\t\n\tprintf(\"%lld\\n\", ans);\n}",
        "postTime": 1572324905,
        "uid": 122822,
        "name": "Merci",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4381 \u3010[IOI2008]Island\u3011"
    },
    {
        "content": "[\u6d1b\u8c37\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P4381)\n\n### Solution\n\n\u56e0\u4e3a\u6709 $n$ \u4e2a\u70b9\u548c $n$ \u6761\u8fb9\uff0c\u6240\u4ee5\u8fd9\u5c31\u662f\u4e00\u4e2a\u57fa\u73af\u6811\u68ee\u6797\u3002\n\n\u90a3\u4e48\u9898\u76ee\u8ba9\u6211\u4eec\u6c42\u7684\u5c31\u662f\u57fa\u73af\u6811\u7684\u76f4\u5f84\u4e4b\u548c\u3002\n\n\u57fa\u73af\u6811\u7684\u76f4\u5f84\u53ea\u6709\u4e24\u79cd\u53ef\u80fd\uff1a1.\u5728\u4ee5\u73af\u4e0a\u67d0\u4e00\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u4e2d  2.\u5728\u4e24\u9897\u5b50\u6811\u4e2d\u5e76\u7ecf\u8fc7\u73af\u4e0a\u4e00\u90e8\u5206\n\n\u90a3\u4e48\u5206\u522b\u6c42\u51fa\u4e24\u79cd\u53ef\u80fd\u7684\u6700\u5927\u503c\u7136\u540e\u6bd4\u8f83\u5927\u5c0f\u5373\u53ef\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u53ef\u80fd\uff0c\u9009\u62e9\u5bf9\u6bcf\u4e00\u68f5\u6811\u8fdb\u884c\u6811\u5f62DP\uff0c\u6b63\u5e38\u6c42\u6811\u7684\u76f4\u5f84\u3002\n\n\u540c\u65f6\u8981\u8bb0\u5f55\u4e0b\u6765 $len$ \u6570\u7ec4\uff0c\u5176\u4e2d $len_i$ \u8868\u793a\u4ee5\u73af\u4e0a\u7b2c $i$ \u4e2a\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\uff0c\u5230\u6839\u6700\u5927\u7684\u8ddd\u79bb\u3002\u8fd9\u662f\u4e3a\u4e86\u7b2c\u4e8c\u79cd\u53ef\u80fd\u51c6\u5907\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u53ef\u80fd\uff0c\u8bbe\u73af\u4e3a $E$ \uff0c\u6211\u4eec\u53ea\u8981\u6c42\u51fa $\\max\\limits_{i,j\\in E,j<i}\\{len_i+len_j+dis_{i,j}\\}$ \u3002\n\n\u4f46\u662f\u5982\u679c\u679a\u4e3e $i,j$ \u7684\u8bdd\u590d\u6742\u5ea6\u662f\u4e0d\u5141\u8bb8\u7684\u3002\u6211\u4eec\u5c06\u73af\u7834\u4e3a\u94fe\uff0c\u5e76\u4e14\u590d\u5236\u6210\u4e24\u500d\uff0c\u8bbe $sum_{i}$ \u8868\u793a\u4ece $1$ \u5230 $i$ \u7684 $dis$ \u7684\u524d\u7f00\u548c\uff0c\u4e5f\u5c31\u662f $sum_i=sum_{i-1}+dis_{i-1,i}$ \uff0c\u90a3\u4e48\u4e0a\u9762\u7684\u5f0f\u5b50\u5c31\u6210\u4e86 $len_i+len_j+sum_i-sum_j\\rightarrow len_i+sum_i+len_j-sum_j$ \u3002\n\n\u5c06 $i$ \u56fa\u5b9a\uff0c\u53ea\u8003\u8651 $j$ \uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e24\u4e2a\u70b9 $j,k$ \uff0c \u5982\u679c\u6709 $len_j-sum_j<len_k-sum_k$ \uff0c\u90a3\u4e48\u80af\u5b9a\u9009\u62e9 $k$ \uff0c\u6240\u4ee5\u7528\u5355\u8c03\u961f\u5217\u4f18\u5316DP\u3002\n\n### Code\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\nusing namespace std;\n#define out puts(\"Debug\")\n#define int long long\nconst int N=4e6+9;\nint ver[N<<1],nxt[N<<1],w[N<<1],h[N],tot=0;\nint dis[N],vis[N],n,x,y,z,res,chk1,chk2,ans,tag[N],num,bc,cnt,ring[N],sum[N];\nint f[N],Q[N];\nbool Vis[N];\n\ninline void add(int x,int y,int z)\n{\n\tver[++tot]=y,nxt[tot]=h[x],w[tot]=z,h[x]=tot;\n}\n\ninline bool dfs(int u,int le)\n{\n\tif(vis[u]==1)\n\t{\n\t\tvis[u]=2;\n\t\ttag[u]=1;\n\t\tring[++cnt]=u;\n\t\treturn true;\n\t}\n\tvis[u]=true;\n\tfor(int i=h[u];i;i=nxt[i])\n\t{\n\t\tint v=ver[i];\n\t\tif(i!=((le-1)^1)+1&&dfs(v,i))\n\t\t{\n\t\t\tif(vis[u]!=2)\n\t\t\t{\n\t\t\t\tring[++cnt]=u,tag[u]=1,sum[cnt]=sum[cnt-1]+w[i];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tsum[bc]=sum[bc+1]-w[i];\n\t\t\t\treturn false;\n\t\t\t}\t\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\ninline int dp(int u)\n{\n\ttag[u]=true;\n\tfor(int i=h[u];i;i=nxt[i])\n\t{\n\t\tint v=ver[i];\n\t\tif(tag[v]) continue;\n\t\tdp(v);\n\t\tres=max(res,dis[v]+dis[u]+w[i]);\n\t\tdis[u]=max(dis[u],dis[v]+w[i]);\n\t}\n\treturn res;\n}\n\nint get_ans(int rt)\n{\n\tbc=cnt;chk1=chk2=0;\n\tdfs(rt,-3);\n\tfor(int i=bc+1;i<=cnt;i++)\n\t{\n\t\tres=0;\n\t\tint tem=dp(ring[i]);\n\t\tchk1=max(chk1,res);\n\t\tf[cnt-bc+i]=f[i]=dis[ring[i]];\n\t\tsum[cnt-bc+i]=sum[cnt-bc+i-1]+sum[i]-sum[i-1];\n\t}\n\tint hh=0,tt=-1;\n\tfor(int i=bc+1;i<=cnt*2-bc;i++)\n\t{\n\t\twhile(hh<=tt&&Q[hh]<=i-cnt+bc) ++hh;//warning\n\t\tif(hh<=tt) chk2=max(chk2,f[Q[hh]]+f[i]+sum[i]-sum[Q[hh]]);\n\t\twhile(hh<=tt&&f[Q[tt]]-sum[Q[tt]]<=f[i]-sum[i]) --tt;\n\t\tQ[++tt]=i;\n\t}\n\treturn max(chk1,chk2);\n}\n\nsigned main()\n{\n\tscanf(\"%lld\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%lld%lld\",&y,&z);\n\t\tadd(i,y,z),add(y,i,z);\n\t}\n\tfor(int i=1;i<=n;i++) if(!tag[i]) ans+=get_ans(i);\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1604545894,
        "uid": 272143,
        "name": "\u662f\u4e2a\u6c49\u5b50",
        "ccfLevel": 4,
        "title": "P4381 [IOI2008]Island"
    },
    {
        "content": "#### \u9898\u76ee\u5927\u610f\uff1a\u6c42\u591a\u68f5\u57fa\u73af\u6811\u7684\u76f4\u5f84\u603b\u548c\u3002\n\n#### \u601d\u8def\uff1a\u5bf9\u4e8e\u57fa\u73af\u6811\u7cfb\u5217\u7684\u9898\uff0c\u6700\u91cd\u8981\u7684\u5c31\u662f\u627e\u73af\uff0c\u5176\u4ed6\u64cd\u4f5c\u90fd\u662f\u57fa\u4e8e\u73af\u7684\u3002\u672c\u9898\u4e5f\u662f\u5982\u6b64\uff1a\u4e00\u68f5\u57fa\u73af\u6811\u7684\u76f4\u5f84\u6709\u4e24\u79cd\u60c5\u51b5\uff1a1\u3001\u7ecf\u8fc7\u73af\u4e0a\u4e24\u4e2a\u8282\u70b9\u5916\u52a0\u4ed6\u4eec\u5b50\u6811\u7684\u6700\u6df1\u6df1\u5ea6\uff0c\u4e5f\u5c31\u662fdis(i,j)+dep[i]+dep[j]\uff0c\u5176\u4e2ddep\u4ee3\u8868\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u6240\u80fd\u5230\u8fbe\u7684\u6700\u6df1\u8282\u70b9\uff0cdist\u4ee3\u8868i\u5230j\u7684\u6700\u5927\u8ddd\u79bb\uff0c\u6709\u4e24\u79cd\u60c5\u51b5\uff08\u987a\u65f6\u9488\u6216\u9006\u65f6\u9488\uff0c\u53d6\u5927\u7684\u90a3\u4e2a\uff09\u30022\u3001\u73af\u4e0a\u67d0\u4e2a\u8282\u70b9\u5b50\u6811\u7684\u76f4\u5f84\u3002\n\n#### \u9996\u5148\u5982\u4f55\u627e\u73af\uff1f\u672c\u6765\u53ef\u4ee5\u7528dfs\u968f\u4fbf\u627e\uff0c\u4f46\u662f\u6bd2\u7624\u51fa\u9898\u4eba\u5361dfs\uff0c\u90a3\u600e\u4e48\u529e\u5462\uff1f\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u8f93\u5165\u7279\u522b\u5999\uff0c\u4ed6\u6bcf\u6b21\u7ed9\u51fa\u7b2ci\u4e2a\u70b9\u901a\u5411\u54ea\u91cc\uff0c\u6211\u4eec\u53ef\u4ee5\u5c31\u6309\u8fd9\u6837\u6a21\u62df\uff0c\u76f4\u5230\u627e\u5230\u66fe\u7ecf\u8bbf\u95ee\u8fc7\u7684\u70b9\u5c31\u627e\u5230\u4e86\u73af\u3002\n\n#### \u7b2c\u4e00\u79cd\u60c5\u51b5\uff1a\u5bf9\u4e8e\u5904\u7406\u51fa\u6765\u7684\u73af\uff0c\u6211\u4eec\u8981\u5c06\u5176\u7834\u73af\u57ce\u94fe\uff0c\u4e5f\u5c31\u662f\u8bb0\u5f55\u4e24\u904d\u73af\u7684\u8282\u70b9\u3002\u7136\u540e\u6211\u4eec\u9884\u5904\u7406\u51fa\u4ed6\u4eec\u7684dep\uff0c\u53ef\u4ee5\u7528bfs\u6216dfs\u6c42\u3002\u6ce8\u610f\uff1adep\u4e0d\u662f\u76f4\u5f84\u3002\u5bf9\u4e8e\u6bcf\u4e2adis(i,j)\uff0c\u6211\u4eec\u8bb0\u4e2a\u524d\u7f00\u548c\uff0c\u4ee5\u73af\u4e0a\u67d0\u4e2a\u8282\u70b9\u4e3a\u57fa\u51c6\uff0c\u53ef\u4ee5\u5217\u51fa\u4e00\u4e2a\u7b80\u5355\u5f0f\u5b50\uff1aans=Max{(sum[j]-dep[j])+(sum[i]+dep[i])},\uff08\u56e0\u4e3a\u6211\u4eec\u628a\u73af\u62c6\u6210\u4e24\u500d\uff0c\u6240\u4ee5\u6db5\u76d6\u4e86\u6240\u6709\u987a\u65f6\u9488\u548c\u9006\u65f6\u9488\u7684\u72b6\u6001\uff09\u5bf9\u8fd9\u4e2a\u5f0f\u5b50\uff0c\u6211\u4eec\u53ef\u4ee5\u679a\u4e3ei\uff0c\u4e5f\u5c31\u662f\u77e5\u9053\u4e86sum[i]+dep[i]\u7684\u503c\uff0c\u7136\u540e\u6211\u4eec\u8981\u6c42\u6700\u5927\u7684sum[j]-dep[j]\uff0c\u8fd9\u53ef\u4ee5\u7528\u4e00\u4e2a\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u3002\n\n#### \u7b2c\u4e8c\u79cd\u60c5\u51b5\uff1a\u5bf9\u6bcf\u4e2a\u73af\u4e0a\u8282\u70b9\u6c42\u4e00\u904d\u6811\u7684\u76f4\u5f84\uff0c\u6211\u662f\u7528\u6811\u5f62dp\uff0c\u8bbedp[x]\u662f\u4ee5x\u4e3a\u6839\u7684\u6700\u957f\u94fe\uff0c\u6211\u4eec\u5bf9\u4e8ex\u7684\u4efb\u610f\u4e24\u4e2a\u513f\u5b50\u8282\u70b9i,j\uff0c\u7ecf\u8fc7x\u7684\u6700\u957f\u94fe\u5c31\u662f\u5c31\u8fc7i\u7684\u6700\u957f\u94fe\u52a0dis(x,i),\u548c\u8fc7j\u7684\u6700\u957f\u94fe\u52a0dis(x,j)\uff0c\u4e5f\u5c31\u662fans=max(dp[i]+dp[j]+dis(x,i)+dis(x,j))(1<=i<j<son[x])\u3002\u8fd9\u770b\u4f3c\u8981\u53cc\u91cd\u5faa\u73af\uff0c\u4f46\u6211\u4eec\u89c2\u5bdf\u5230dp[x]\u5305\u542b\u4e86x\u5230dp[i]\u7684\u6700\u957f\u94fe\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u8981\u679a\u4e3e\u53e6\u4e00\u4e2a\u5b50\u8282\u70b9j+dis(x,j)\u548cdis[x]\u76f8\u52a0\u66f4\u65b0ans\uff0c\u7136\u540e\u7528dp[j]+dis(x,j)\u66f4\u65b0dis[x]\u3002\n\n#### \u6700\u540e\u4e00\u3001\u4e8c\u79cd\u60c5\u51b5\u53d6\u4e2amax\u5c31\u662f\u7b54\u6848\n\n#### \u6ce8\u610f\uff1a\u8fd9\u9898\u6bd2\u7624\u5f97\u5f88\uff0c\u7a7a\u95f4\u5f00\u5f97\u5f88\u5c0f\uff0c\u53c8\u5361dfs\uff0c\u56e0\u4e3a\u8981\u7834\u73af\u57ce\u94fe\u6240\u4ee5\u8981\u5f00\u4e24\u500d\u7a7a\u95f4\u3002\u8fd8\u6709dep\u4e0d\u662f\u6811\u7684\u76f4\u5f84\uff0c\u800c\u662f\u6700\u6df1\u8282\u70b9\u3002\u6709\u4e9b\u6570\u7ec4\u8981\u5f00long long\u3002\n\n#### \u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n#include<cstdlib>\nusing namespace std;\nconst int Maxn=1e6+7;\nint n,dfn[Maxn],id;\nint last[Maxn],tot,cnt;\nint vis[Maxn],que[2*Maxn],pd[Maxn],f[Maxn],dvi[Maxn];\nlong long las,nic,dep[2*Maxn],Q[2*Maxn],dis[Maxn],ans;\nstruct edge{\n    int to,next,w;\n}e[4*Maxn];\nstruct hoop{\n    int to,w;\n}fa[Maxn],ring[Maxn];\ninline int read(){\n   int s=0,w=1;\n   char ch=getchar();\n   while(ch<'0'||ch>'9'){if(ch=='-') w=-1;ch=getchar();}\n   while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\n   return s*w;\n}\ninline void add_edge(int x,int y,int w){\n    e[++tot].to=y;\n    e[tot].next=last[x];\n    e[tot].w=w;\n    last[x]=tot;\n    return;\n}\ninline long long K(int x){\n    return dep[x]-Q[x];\n}\ninline void find_hoop(int x){ //\u627e\u6811\u4e0a\u7684\u73af\uff0c\u4e0d\u80fd\u7528dfs\u6c42\n    dvi[x]=1;\n    while(1){\n        int u=fa[x].to;\n        if(dvi[u]){\n            ring[++cnt].to=u;\n            ring[cnt].w=fa[u].w;dfn[u]=1;\n            for(int i=x;i!=u;i=f[i]) dfn[i]=1,ring[++cnt].to=i,ring[cnt].w=fa[i].w;\n            break;\n        }\n        else{\n            dvi[u]=1;\n            f[u]=x;\n        }\n        x=u;\n    }\n    return;\n}\ninline void dp(int x){ //\u6811\u5f62dp\n    vis[x]=1;dfn[x]=1;\n    for(int i=last[x];i;i=e[i].next){\n        int u=e[i].to;\n        if(vis[u]||pd[u]) continue;\n        dp(u);\n        nic=max(nic,dis[x]+dis[u]+e[i].w);\n        dis[x]=max(dis[x],dis[u]+e[i].w); \n    }\n    return;\n}\nvoid dfs(int x,int f,long long w){ //\u6c42\u73af\u4e0a\u6bcf\u4e2a\u8282\u70b9\u7684dep\u503c\n    if(w>=nic) nic=w;\n    for(int i=last[x];i;i=e[i].next){\n        int u=e[i].to;\n        if(u!=f&&!pd[u]) dfs(u,x,w+e[i].w);\n    }\n}\ninline void first(int i){\n    nic=0;dfs(ring[i].to,0,0);dep[i]=nic;//!!!\n    nic=0;dp(ring[i].to);\n    las=max(las,nic);\n    return;\n}\ninline void quee(){ //\u5355\u8c03\u961f\u5217\u4f18\u5316\n    int head=1,tail=0;\n    for(int i=1;i<=2*cnt;++i){\n        if(i<=cnt) Q[i]=Q[i-1]+ring[i].w;\n        else Q[i]=Q[i-1]+ring[i-cnt].w;\n        if(head<=tail) las=max(las,K(que[head])+Q[i]+dep[i]);\n        while(head<=tail&&K(que[tail])<=K(i)) --tail;\n        que[++tail]=i;\n        while(head<=tail&&que[head]<=i-cnt+1) ++head;\n    }\n    ans+=las;\n    return;\n}\nint main(){\n    int y,w;\n    n=read();\n    for(int i=1;i<=n;++i){\n        y=read();w=read();\n        add_edge(i,y,w);add_edge(y,i,w);\n        fa[i].to=y;fa[i].w=w; //\u8bb0\u5f55\u65b9\u4fbf\u679a\u4e3e\n    }\n    for(int i=1;i<=n;++i){\n        if(!dfn[i]){\n            cnt=0;id=0;las=0;\n            find_hoop(i);\n            for(int j=1;j<=cnt;++j) pd[ring[j].to]=1;\n            for(int j=1;j<=cnt;++j) first(j);\n            for(int j=1;j<=cnt;++j) dep[j+cnt]=dep[j]; //\u628a\u73af\u65ad\u6210\u94fe \n            quee();\n        }\n    }\n    printf(\"%lld\\n\",ans);\n    return 0;\n}\n```",
        "postTime": 1550148400,
        "uid": 72122,
        "name": "Xiao_Mi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4381 \u3010[IOI2008]Island\u3011"
    },
    {
        "content": "~~\u8fd9\u662f\u4e00\u9053\u6a21\u677f\u9898~~  \n\n\u9898\u610f\u7b80\u660e\u627c\u8981\uff0c\u6709\u4e00\u5806\u57fa\u73af\u6811\u6784\u6210\u4e86\u57fa\u73af\u6811\u68ee\u6797\uff0c\u9700\u6c42\u6240\u6709\u57fa\u73af\u6811\u7684\u76f4\u5f84\u4e4b\u548c\u3002  \n\n>\u57fa\u73af\u6811\u5b9a\u4e49\uff1a\u4e00\u68f5\u6811\u6709n\u4e2a\u8282\u70b9n\u6761\u8fb9  \n\n\u663e\u7136\u4e00\u68f5\u666e\u901a\u7684\u6811\u6709n\u4e2a\u8282\u70b9n-1\u6761\u8fb9\uff0c\u90a3\u4e48\u57fa\u73af\u6811\u5c31\u662f\u5728\u666e\u901a\u7684\u6811\u7684\u57fa\u7840\u4e0a\u591a\u52a0\u4e86\u4e00\u6761\u8fb9\uff0c\u8fd9\u6761\u8fb9\u5fc5\u7136\u4f1a\u5f62\u6210\u4e00\u4e2a\u73af\u3002  \n\n\u6240\u4ee5\u57fa\u73af\u6811\u76f8\u5bf9\u4e8e\u6811\u6765\u8bb2\u5c31\u662f\u591a\u4e86\u4e00\u4e2a\u73af\u7684\u5904\u7406\u3002  \n\n\u57fa\u73af\u6811\u7684\u76f4\u5f84\u6c42\u6cd5\uff1a\n\n\u9996\u5148\u80af\u5b9a\u8981\u627e\u5230\u73af\u4e0a\u7684\u6240\u6709\u8282\u70b9\uff0c\u5c31\u662f\u76f8\u5f53\u4e8e\u65e0\u5411\u56fe\u627e\u73af\u3002\u5927\u81f4\u4e0a\u5e38\u7528\u7684\u6709\u62d3\u6251\u6392\u5e8f\u548cdfs\uff0c\uff0ctarjan\u4e5f\u53ef\u4ee5\u3002(\u6211\u4f7f\u7528\u4e86dfs\u627e\u73af  \n\ndfs\u5728\u65e0\u5411\u56fe\u4e0a\u627e\u73af\u6bd4\u8f83\u9ebb\u70e6\uff0c\u5b83\u53ea\u80fd\u5904\u7406\u73af\u7684\u53d8\u6570>2\u7684\u73af\uff0c\u6240\u4ee5=2\u7684\u73af\u8fd8\u8981\u8fdb\u884c\u7279\u5224\u3002\uff08\u5927\u4f53\u6765\u8bf4\u5c31\u662fnum\u4ece1\u5f00\u59cb\u5efa\u8fb9\u8fd9\u6837\u4e00\u6761\u8fb9\u7684\u53cd\u5411\u8fb9\u5c31\u662fi^1\u8fd9\u6837\u7279\u5224\u4e00\u4e0b\u5c31\u597d\u4e86\u3002  \n\n\u627e\u5230\u73af\u540e\uff0c\u901a\u8fc7\u5bf9\u4e00\u4e9b\u4f8b\u5b50\u7684\u624b\u73a9\uff0c\u4e0d\u96be\u53d1\u73b0\u57fa\u73af\u6811\u76f4\u5f84\u7684\u6784\u6210\u60c5\u51b5\uff1a  \n>1.\u5c31\u662f\u4e0d\u5728\u73af\u4e0a\u7684\u8282\u70b9\u7ec4\u6210\u7684\u6700\u957f\u94fe\u3002  \n>2.\u7531\u73af\u4e0a\u4e24\u70b9\u53ca\u5206\u522b\u4ee5\u4ed6\u4eec\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u7684\u7ecf\u8fc7\u6839\u7684\u6700\u957f\u94fe\u6784\u6210\u3002\n\n\u5bf9\u7b2c\u4e00\u79cd\u60c5\u51b5\u6211\u4eec\u5f00\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u54ea\u4e9b\u70b9\u5728\u73af\u4e0a\uff0c\u5bf9\u73af\u4e0a\u6bcf\u4e2a\u70b9\u5206\u522b\u8dd1\u4e00\u904d\u6700\u957f\u94fe\u7684dp\u5e76\u540c\u65f6\u66f4\u65b0answer\u5373\u53ef\u3002\u5982\u679c\u4ed6\u7684\u513f\u5b50\u5728\u73af\u4e0a\u5c31continue\u3002\u8dd1\u5b8c\u4e4b\u540e\u518d\u5f00\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u7ecf\u8fc7\u6839\u7684\u6700\u957f\u94fe\u3002\n\n(\u6700\u957f\u94fedp\u5c31\u662f\u5bf9\u6bcf\u4e2a\u8282\u70b9\u6c42\u51fa\u4ee5\u4ed6\u4e3a\u6839\u7684\u5b50\u6811\u4e14\u7ecf\u8fc7\u4ed6\u7684\u6700\u957f\u94fe\u548c\u6b21\u957f\u94fe\uff0c\u6bcf\u6c42\u5b8c\u4e00\u4e2a\u8282\u70b9\u7684\u4fe1\u606f\u5c31\u5bf9answer\u8fdb\u884c\u66f4\u65b0\u3002\n\n\u5bf9\u4e8e\u73af\u4e0a\u7684\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u53ef\u80fd\u662f\u987a\u65f6\u9488\u4e5f\u53ef\u80fd\u662f\u9006\u65f6\u9488\u3002\u6240\u4ee5\u9700\u8981\u7834\u73af\u6210\u94fe\uff0c\u8fd9\u6837\u6bcf\u4e2a\u8282\u70b9\u90fd\u4f1a\u88ab\u9006\u65f6\u9488\u987a\u65f6\u9488\u8d70\u4e00\u904d\u3002\u6c42\u51fa\u4e00\u4e2a\u8ddd\u79bb\u524d\u7f00\u6570\u7ec4\uff0c\u4e24\u70b9\u4e4b\u95f4\u5dee\u503c\u5373\u4e3a\u73af\u4e0a\u8ddd\u79bb\u3002  \n\n\u90a3\u4e48\u73b0\u5728\u53ef\u4ee5\u5199\u51fadp\u5f0f\u5b50$answer=max(answer,d[i]+d[j]+dis[i]-dis[j])$  \n\n\u8fd9\u4e2adp\u5f0f\u5b50\u7684\u4e0ei\u6709\u5173\u548c\u4e0ej\u6709\u5173\u7684\u9879\u662f\u72ec\u7acb\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u5355\u8c03\u961f\u5217\u4f18\u5316\u3002  \n\n\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u627e\u5230\u4ed6\u4e4b\u524d\u7684$d[j]-dis[j]$\u6700\u5927\u7684j\u66f4\u65b0\u5373\u53ef  \n\n# CODE\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\n#define ll long long\n#define int long long\n#define N 1000050\nint head[N],num=1,n,vis[N],ins[N],stack[N],top,circle[N],cnt,flag,zongshu,huan[N],q[N*2],ooo,tmp;\nll ans,answer,dis[N*2],dp[N][2],d[N*2];\nstruct node\n{\n\tint next,to;\n\tll dis;\n}edge[N*2];\nvoid addedge(int u,int v,ll w)\n{\n\tedge[++num]=(node){head[u],v,w};\n\thead[u]=num;\n}\nvoid dfs(int x,int fa)\n{\n\tins[x]=1,stack[++top]=x;\n\tfor(register int i=head[x];i;i=edge[i].next)\n\t{\n\t\tif(flag)return;\n\t\tint v=edge[i].to;\n\t\tif(v==fa)continue;\n\t\tif(ins[v])\n        {\n            flag=1;circle[++cnt]=v;huan[v]=1;\n            while(stack[top]!=v)\n                huan[stack[top]]=1,circle[++cnt]=stack[top--];\n            return;\n        }\n\t\tdfs(v,x);\n\t}\n\ttop--;ins[x]=0;\n}\nvoid dfs2(int x,int fa)\n{\n\tif(!vis[x])zongshu++,vis[x]=1;\n\tfor(int i=head[x];i;i=edge[i].next)\n\t{\n\t\tint v=edge[i].to;\n\t\tif(v==fa)continue;\n\t\tif(!vis[v])dfs2(v,x);\n\t}\n}\nvoid dpp(int x,int fa)\n{\n\tfor(int i=head[x];i;i=edge[i].next)\n\t{\n\t\tint v=edge[i].to;\n\t\tif(v==fa || huan[v])continue;\n\t\tdpp(v,x);\n\t\tif(dp[v][0]+edge[i].dis>dp[x][0])\n\t\t{\n\t\t\tdp[x][1]=dp[x][0];\n\t\t\tdp[x][0]=dp[v][0]+edge[i].dis;\n\t\t}\n\t\telse\n\t\t\tif(dp[v][0]+edge[i].dis>dp[x][1])\n\t\t\t{\n\t\t\t\tdp[x][1]=dp[v][0]+edge[i].dis;\n\t\t\t}\n\t}\n\tanswer=max((ll)dp[x][0]+dp[x][1],answer);\n}\nvoid dfs3(int x,ll uuu)\n{\n\tdis[++ooo]=uuu;\n\tfor(int i=head[x];i;i=edge[i].next)\n\t{\n\t\tif(ooo==2*cnt)return;\n\t\tint v=edge[i].to;\n\t\tif(v!=q[ooo+1])continue;\n\t\tdfs3(v,uuu+edge[i].dis);\n\t}\n}\nvoid find2(int x,int fa,int last)\n{\n\tfor(int i=head[x];i;i=edge[i].next)\n\t{\n\t\tif(flag)return;\n\t\tint v=edge[i].to;\n\t\tif(v==fa && i!=last && i!=(last^1))\n\t\t{\n\t\t\tcircle[++cnt]=x;\n            circle[++cnt]=fa;\n            huan[x]=huan[fa]=1;flag=1;\n            tmp=max(edge[i].dis,edge[last].dis);\n\t\t}\n\t\telse if(v!=fa)find2(v,x,i);\n\t}\n}\nll solve(int root)\n{\n\tzongshu=0;\n\tdfs2(root,0);\n\tif(zongshu==2)\n\t{\n\t\tanswer=0;\n\t\tfor(int i=head[root];i;i=edge[i].next)answer=max(answer,edge[i].dis);\n\t\treturn answer;\n\t}\n\tfor(int i=1;i<=n;i++)stack[i]=0,ins[i]=0;\n\tflag=top=cnt=answer=0;\n\tdfs(root,0);\n\tif(cnt==0)\n\t{\n\t\tflag=0;\n\t\ttmp=0;\n\t\tfind2(root,0,-1);\n\t\tfor(int i=1;i<=cnt;i++)dpp(circle[i],0),d[circle[i]]=dp[circle[i]][0];\n\t\tanswer=max(answer,tmp+d[circle[1]]+d[circle[2]]);\n\t\treturn answer;\n\t}\n\tooo=0;\n\tfor(int i=1;i<=cnt;i++)dpp(circle[i],0),d[circle[i]]=dp[circle[i]][0];\n\tfor(int i=1;i<=cnt;i++)q[i]=circle[i],q[i+cnt]=circle[i],circle[i+cnt]=circle[i];\n\tdfs3(q[1],0);\n\tint head=0,tail=1;\n\tq[++head]=1;\n\tfor(int i=2;i<=2*cnt;i++)\n\t{\n\t\twhile(head<=tail && q[head]<=i-cnt)head++;\n\t\tanswer=max(answer,d[circle[i]]+d[circle[q[head]]]+dis[i]-dis[q[head]]);\n\t\twhile(head<=tail && d[circle[i]]-dis[i]>=d[circle[q[tail]]]-dis[q[tail]])tail--;q[++tail]=i;\n\t}\n\treturn answer;\n}\nsigned main()        \n{\n\tfreopen(\"random.out\",\"r\",stdin);\n\tfreopen(\"myanswer.out\",\"w\",stdout);\n\tscanf(\"%lld\",&n);\n\tint u;ll v;\n\tfor(int i=1;i<=n;i++)scanf(\"%lld%lld\",&u,&v),addedge(i,u,v),addedge(u,i,v);\n\tfor(int i=1;i<=n;i++)if(!vis[i])ans+=solve(i);\n\tprintf(\"%lld\",ans);\n\treturn 0;\n}\n```\n------\n\u8fd9\u5e94\u8be5\u662f\u8fd9\u9053\u9898\u6700\u4e11\u6700\u957f\u7684\u4e00\u4efd\u4ee3\u7801\uff0c\u4e3a\u4e86\u6c42\u73af\u8dd1\u4e86\u4e00\u904ddfs\uff0c\u4e3a\u4e86\u6807\u8bb0\u8dd1\u4e86\u4e00\u904ddfs\uff0c\u4e3a\u4e86\u6c42\u524d\u7f00\u548c\u53c8\u8dd1\u4e86\u4e00\u904ddfs\uff0c\u7279\u5224\u8fd8\u6709\u4e00\u904ddfs",
        "postTime": 1571960178,
        "uid": 73983,
        "name": "Infiltrator",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4381 \u3010[IOI2008]Island\u3011"
    },
    {
        "content": "\u672c\u9898\u5176\u5b9e\u5c31\u662f\u8981\u6c42**\u57fa\u73af\u68ee\u6797**\u4e2d\uff0c\u6bcf\u68f5\u57fa\u73af\u6811\u7684\u76f4\u5f84\u4e4b\u548c\u3002\n\n\u6c42\u57fa\u73af\u6811\u76f4\u5f84\u4e5f\u6bd4\u8f83\u65e0\u8111\uff1a**\u627e\u5230\u73af\uff0c\u628a\u5b83\u770b\u6210\u201c\u6839\u8282\u70b9\u201d**\uff08\u5e38\u89c1\u7684\u5957\u8def\uff09\u3002\u7136\u540e\u4e00\u4e2a\u76f4\u5f84\u6709\u4e24\u79cd\u53ef\u80fd\uff0c\u7b2c\u4e00\u79cd\u662f\u5728\u6839\u8282\u70b9\u7684\u4e00\u4e2a\u5b50\u6811\u5185\u90e8\u3002\u7b2c\u4e8c\u79cd\u662f\u7ecf\u8fc7\u8fd9\u4e2a\u73af\uff0c\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u53ef\u4ee5**\u7834\u73af\u6210\u94fe**\u7528\u524d\u7f00\u548c\u8ba1\u7b97\u73af\u4e0a\u7684\u4e24\u4e2a\u70b9\u7684\u6700\u957f\u8ddd\u79bb\u3002\n\n\u7b2c\u4e00\u79cd\u60c5\u51b5\u7528\u6811\u5f62 $dp$ \u6c42\u51fa $f_u$\uff08\u4ee5 $u$ \u4e3a\u9876\u7684\u6700\u957f\u94fe\uff09\u3002\u5728\u6c42\u6700\u957f\u94fe\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4e00\u8fb9\u6c42\u51fa\u76f4\u5f84\uff08\u4e5f\u53ef\u4ee5\u518d\u5199\u4e2a $dfs$ \u7528\u6362\u6839 $dp$\uff09\u3002\n\n\u7b2c\u4e8c\u79cd\u60c5\u51b5\u7834\u73af\u6210\u94fe\uff0c\u7136\u540e\u53d6\u73af\u4e0a\u4e24\u70b9 $i,j$\uff0c\u663e\u7136 $dis(i,j)+f(i)+f(j)$ \u5c31\u662f\u53d6\u8fd9\u4e24\u4e2a\u70b9\u7684\u7b54\u6848\u3002\u6211\u4eec\u5bf9\u6240\u6709\u8fd9\u6837\u7684\u7b54\u6848\u53d6\u6700\u5927\u503c\u5373\u53ef\u3002\n\n\u90e8\u5206\u5206\u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int N = 1e6 + 9;\nstruct edge {\n    int to, nxt, w;\n} e[N * 2];\nint hd[N], tot = 1;\nvoid add(int u, int v, int w) {\n    e[++tot] = (edge){ v, hd[u], w };\n    hd[u] = tot;\n}\nint n;\n\nint fa[N], cnt, loop[N], tp, vst[N];\nbool inl[N];          // inl\u8868\u793a\u662f\u5426\u5728\u73af\u4e2d\nint sum[N * 2], fat;  //\u524d\u7f00\u548c\nbool dfs(int u) {     //\u4eba\u4eba\u90fd\u4f1a\u7684\u6734\u7d20\u57fa\u73af\u6811\u627e\u73af\n    vst[u] = 1;\n    bool ret = 0;\n    for (int i = hd[u]; i; i = e[i].nxt)\n        if (i != fa[u]) {\n            int v = e[i].to;\n            if (!vst[v]) {\n                fa[v] = i ^ 1, ret |= dfs(v);\n            } else if (vst[v] == 1) {\n                tp = v;\n                ret = 1;\n                loop[++cnt] = v;\n                inl[v] = 1;\n                fat = i;\n            }\n        }\n    vst[u] = 2;\n    if (u == tp)\n        ret = 0;\n    if (ret)\n        loop[++cnt] = u, inl[u] = 1;\n    return ret;\n}\n\nint tmp = 0, f[N];  // f\u8bb0\u5f55\u6700\u957f\u94fe\nvoid dp(int u, int faa) {\n    for (int i = hd[u], v; i; i = e[i].nxt) {\n        if ((v = e[i].to) == faa || inl[v])\n            continue;\n        dp(v, u);\n        tmp = max(tmp, f[u] + f[v] + e[i].w), f[u] = max(f[u], f[v] + e[i].w);\n    }\n}\n\nint cal() {  //\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u5373\u76f4\u5f84\u7ecf\u8fc7\u73af\n    for (int i = 1; i <= cnt + 1; i++) sum[i] = sum[i - 1] + e[fa[loop[i - 1]]].w;\n    for (int i = cnt + 2; i <= cnt * 2 + 1; i++)\n        sum[i] = sum[i - 1] + (sum[i - cnt] - sum[i - cnt - 1]), loop[i] = loop[i - cnt];\n    loop[cnt + 1] = loop[1];\n    int ret = 0;\n    for (int i = 1; i <= cnt; i++) {\n        for (int j = i + 1; j < i + cnt; j++) {\n            ret = max(ret, f[loop[i]] + f[loop[j]] + sum[j] - sum[i]);\n        }\n    }\n    return ret;\n}\n\nsigned main() {\n    scanf(\"%lld\", &n);\n    for (int i = 1, u, w; i <= n; i++) scanf(\"%lld%lld\", &u, &w), add(u, i, w), add(i, u, w);\n    int foin = 0;\n    for (int i = 1; i <= n; i++) {\n        if (vst[i])\n            continue;\n        cnt = 0, tmp = 0;\n        dfs(i);\n        fa[loop[1]] = fat;\n        for (int j = 1; j <= cnt; j++) {  //\u5904\u7406\u73af\u7684\u6bcf\u4e2a\u5b50\u6811\u5185\u7684\u76f4\u5f84\n            int u = loop[j];\n            dp(u, 0);\n        }\n        int ans = max(tmp, cal());\n        foin += ans;\n    }\n    printf(\"%lld\", foin);\n    return 0;\n}\n```\n\n\u524d\u9762\u7684\u4e1c\u897f\u90fd\u5f88\u7b80\u5355\u3002\u90a3\u590d\u6742\u5ea6\u5230\u5e95\u5728\u54ea\u91cc\u7206\u70b8\u4e86\uff1f\n\n\u5f88\u663e\u7136\u662f\u8fd9\u91cc\uff1a\n\n```cpp\nfor (int i = 1; i <= cnt; i++) {\n    for (int j = i + 1; j < i + cnt; j++) {\n        ret = max(ret, f[loop[i]] + f[loop[j]] + sum[j] - sum[i]);\n    }\n}\n```\n\n\u663e\u7136\uff0c\u7531\u4e8e\u8fd9\u91cc\u9762\u7684 $i,j$ \u662f\u72ec\u7acb\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5355\u8c03\u961f\u5217\u3002\n\n$f_i+f_j+s_j-s_i$ \u4e0d\u5927\u597d\u770b\uff0c\u6211\u4eec\u6362\u6210 $(f_j+s_j)+(f_i-s_i)$\uff0c\u4e8e\u662f\u6211\u4eec\u5b58 $g_i=f_i-s_i$\u3002\n\n\u663e\u7136\u8fd9\u662f\u4e2a**\u6ed1\u52a8\u7a97\u53e3**\uff0c\u7a97\u53e3\u5927\u5c0f\u4e3a $cnt$\uff0c\u6211\u4eec\u6bcf\u6b21\u9700\u8981\u6c42 $i$ \u5230 $i+cnt-1$ \u8fd9\u6bb5\u4e2d $g_j$ \u6700\u5927\u7684\u503c\u3002\u8fd9\u4e2a\u5355\u8c03\u961f\u5217\u5c31\u6bd4\u8f83\u6a21\u677f\u4e86\u3002\n\n```cpp\nint cal() {  //\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u5373\u76f4\u5f84\u7ecf\u8fc7\u73af\n    for (register int i = 1; i <= cnt + 1; i++) sum[i] = sum[i - 1] + e[fa[loop[i - 1]]].w;\n    for (register int i = cnt + 2; i <= cnt * 2 + 1; i++)\n        sum[i] = sum[i - 1] + (sum[i - cnt] - sum[i - cnt - 1]), loop[i] = loop[i - cnt];\n    loop[cnt + 1] = loop[1];\n    for (register int i = 1; i <= cnt * 2; i++) g[i] = f[loop[i]] - sum[i];\n    int ret = 0;\n    for (register int i = 2; i <= cnt * 2; i++) q[i] = 0;  // q\u521d\u59cb\u5316\n    register int l = 1, r = 2, i = 2;\n    q[1] = 1;\n    while (i <= cnt * 2) {\n        while (l < r && i - q[l] >= cnt) l++;\n        ret = max(ret, g[q[l]] + sum[i] + f[loop[i]]);\n        while (l < r && g[i] >= g[q[r - 1]]) r--, ret = max(ret, g[q[l]] + sum[i] + f[loop[i]]);\n        q[r++] = i++;\n    }\n    return ret;\n}\n```\n\n\u5176\u4ed6\u90fd\u4e00\u6837\uff0c\u628a cal \u91cc\u9762\u6539\u4e86\u5373\u53ef\u3002",
        "postTime": 1590417052,
        "uid": 180652,
        "name": "_lgswdn",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4381 \u3010[IOI2008]Island\u3011"
    },
    {
        "content": "#### **\u9898\u76ee\u5927\u610f**\n\n\u6c42\u5404\u4e2a\u57fa\u73af\u6811\u7684\u76f4\u5f84\u548c\n\n\u5148\u7528dfs\u6216\u62d3\u6251\u6392\u5e8f\u627e\u5230\u57fa\u73af\u6811\u7684\u73af\uff0c\u628a\u73af\u4e0a\u7684\u70b9\u6807\u8bb0\uff0c\u518d\u5bf9\u6bcf\u4e2a\u70b9\u8fdb\u884cdfs\uff0c\u5c31\u53ef\u4ee5\u8bbf\u95ee\u4ee5\u8be5\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u3002\n\u5728\u6bcf\u68f5\u5b50\u6811\u4e2d\u6c42\u51fa\u76f4\u5f84\u3002\u8bbe$f[x]$\u8868\u793a\u4ee5$x$\u4e3a\u6839\u7684\u5b50\u6811\u7684\u76f4\u5f84\u3002\u8bbe$i,j$\u4e3a\u73af\u4e0a\u4e24\u70b9,$d[i]$\u8868\u793a\u73af\u4e0a\u8fb9\u6743\u7684\u524d\u7f00\u548c\u3002\n\u90a3\u4e48\u57fa\u73af\u6811\u7684\u76f4\u5f84\u5c31\u662f$f[i]+f[j]+d[j]-d[i]$,\u5176\u4e2d$d[j]-d[i]$\u662f$i,j$\u4e24\u70b9\u7684\u5728\u73af\u4e0a\u7684\u8ddd\u79bb\u3002\u5bf9\u4e8ed\u6570\u7ec4\uff0c\u53ef\u4ee5\u628a\u73af\u65ad\u5f00\u590d\u5236\u4e00\u904d\uff0c\u679a\u4e3ej,\u7528\u5355\u8c03\u961f\u5217\u7ef4\u62a4$f[i]-d[i]$\u7684\u6700\u5927\u503c.\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n)$\n```cpp\n#include <iostream> \n#include <queue>\nusing namespace std;\nint n;\nint nx[2000006],he[1000006],vr[2000006],eg[2000006],tot;\ninline void add(int x,int y,int z){\n\tvr[++tot]=y;\n\teg[tot]=z;\n\tnx[tot]=he[x];\n\the[x]=tot;\n}\nint in[1000006],ku[1000006],v[1000006],t,q[2000006];\nlong long ans,d[1000006],f[1000006],a[1000006],b[1000006];\n// \u4e00\u5b9a\u8981\u5f00long long !!!\nvoid topsort(){\n\tqueue<int> q;\n\tfor(int i=1;i<=n;++i) if(in[i]==1) q.push(i);\n\twhile(q.size()){\n\t\tint x=q.front();\n\t\tq.pop();\n\t\tfor(int i=he[x];i;i=nx[i]){\n\t\t\tif(in[vr[i]]>1){\n\t\t\t\td[ku[x]]=max(d[ku[x]],f[x]+f[vr[i]]+eg[i]);\n\t\t\t\tf[vr[i]]=max(f[vr[i]],f[x]+eg[i]);// \u6811\u7684\u76f4\u5f84\n\t\t\t\tif(--in[vr[i]]==1) {\n\t\t\t\t\tq.push(vr[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nvoid dp(int k,int x){\n\tint m=0;// \u73af\u4e0a\u70b9\u7684\u6570\u91cf\n\tint y=x,z=0,len=0;\n\tdo{\n\t\ta[++m]=f[y];// \u8bb0\u5f55\u4ee5\u73af\u4e0a\u5404\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u7684\u76f4\u5f84\n\t\tin[y]=1;\n\t\tfor(z=he[y];z;z=nx[z]){\n\t\t\tif(in[vr[z]]>1){\n\t\t\t\ty=vr[z];\n\t\t\t\tb[m+1]=b[m]+eg[z];// \u6807\u8bb0\u73af\u4e0a\u7684\u70b9\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}while(z);\n\tif(m==2){\n\t\tfor(int i=he[y];i;i=nx[i]){\n\t\t\tif(vr[i]==x){\n\t\t\t\tlen=max(len,eg[i]);\n\t\t\t}\n\t\t}\n\t\td[k]=max(d[k],f[x]+f[y]+len);\n\t\treturn;\n\t}\n\tfor(int i=he[y];i;i=nx[i]){\n\t\tif(vr[i]==x){\n\t\t\tb[m+1]=b[m]+eg[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(int i=1;i<m;++i){\n\t\ta[i+m]=a[i];b[i+m]=b[m+1]+b[i]; // \u590d\u5236\n\t}\n\tint l,r;\n\tq[l=r=1]=1;// \u5355\u8c03\u961f\u5217\n\tfor(int i=2;i<(m<<1);++i){\n\t\twhile(l<=r && i-q[l]>=m) ++l;\n\t\td[k]=max(d[k],a[q[l]]+a[i]+b[i]-b[q[l]]);\n\t\twhile(l<=r && a[q[r]]-b[q[r]]<=a[i]-b[i]) --r;\n\t\tq[++r]=i;\n\t}\n}\nint main(){\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\tcin>>n;\n\tint x,z;\n\tfor(int i=1;i<=n;++i){\n\t\tcin>>x>>z;\n\t\tadd(x,i,z);\n\t\tadd(i,x,z);\n\t\t++in[x];++in[i];\n\t}\n\tqueue<int> q;\n\tfor(int i=1;i<=n;++i){ // \u904d\u5386\u6bcf\u4e2a\u8fde\u901a\u5757\n\t\tif(ku[i]) continue;\n\t\twhile(q.size()) q.pop();\n\t\tq.push(i);\n\t\tku[i]=++t;\n\t\twhile(q.size()){\n\t\t\tx=q.front();\n\t\t\tq.pop();\n\t\t\tfor(int i=he[x];i;i=nx[i]){\n\t\t\t\tif(ku[vr[i]]) continue;\n\t\t\t\tq.push(vr[i]);\n\t\t\t\tku[vr[i]]=t;\n\t\t\t}\n\t\t}\n\t}\n\ttopsort();// \u62d3\u6251\u6392\u5e8f\n\tfor(int i=1;i<=n;++i){\n\t\tif(in[i]>1 && !v[ku[i]]) { // \u5982\u679c\u8be5\u70b9\u5165\u5ea6\u5927\u4e8e1\uff0c\u90a3\u4e48\u5c31\u662f\u73af\u4e0a\u7684\u70b9\n\t\t\tv[ku[i]]=1;// \u6807\u8bb0\n\t\t\tdp(ku[i],i);\n\t\t\tans+=d[ku[i]];// \u7edf\u8ba1\u6bcf\u4e2a\u57fa\u73af\u6811\u6700\u957f\u7b80\u5355\u8def\u5f84\n\t\t}\n\t}\n\tcout<<ans;\n\treturn 0;\n}\n```\n",
        "postTime": 1571628837,
        "uid": 182365,
        "name": "\u865a\u5fc3\u7af9gulu",
        "ccfLevel": 3,
        "title": "island\u9898\u89e3"
    },
    {
        "content": "# [IOI2008]Island\n# [\u63a8\u9500\u535a\u5ba2](https://www.cnblogs.com/Shiina-Rikka/p/11701492.html)\n\u672c\u7bc7\u535a\u5ba2\u7684\u7a0b\u5e8f\u5728\u6d1b\u8c37\u4ee5\u53cadarkBZOJ\u901a\u8fc7\uff0c\u4f46\u662f\u4f7f\u7528\u7684\u662fDFS\uff0c\u5728BZOJ\u53ef\u80fd\u5bfc\u81f4\u7206\u6808\u3002\uff08\u4e0d\u8fc7BZOJ\u7206\u70b8\u4e86\u6211\u4e5f\u6ca1\u529e\u6cd5\u6d4b\uff09\n## \u9898\u9762\n\u4f60\u51c6\u5907\u6d4f\u89c8\u4e00\u4e2a\u516c\u56ed\uff0c\u8be5\u516c\u56ed\u7531 $N$ \u4e2a\u5c9b\u5c7f\u7ec4\u6210\uff0c\u5f53\u5730\u7ba1\u7406\u90e8\u95e8\u4ece\u6bcf\u4e2a\u5c9b\u5c7f $i$ \u51fa\u53d1\u5411\u53e6\u5916\u4e00\u4e2a\u5c9b\u5c7f\u5efa\u4e86\u4e00\u5ea7\u957f\u5ea6\u4e3a $L_i$ \u7684\u6865\uff0c\u4e0d\u8fc7\u6865\u662f\u53ef\u4ee5\u53cc\u5411\u884c\u8d70\u7684\u3002\u540c\u65f6\uff0c\u6bcf\u5bf9\u5c9b\u5c7f\u4e4b\u95f4\u90fd\u6709\u4e00\u8258\u4e13\u7528\u7684\u5f80\u6765\u4e24\u5c9b\u4e4b\u95f4\u7684\u6e21\u8239\u3002\u76f8\u5bf9\u4e8e\u4e58\u8239\u800c\u8a00\uff0c\u4f60\u66f4\u559c\u6b22\u6b65\u884c\u3002\u4f60\u5e0c\u671b\u7ecf\u8fc7\u7684\u6865\u7684\u603b\u957f\u5ea6\u5c3d\u53ef\u80fd\u957f\uff0c\u4f46\u53d7\u5230\u4ee5\u4e0b\u7684\u9650\u5236\uff1a\n- \u53ef\u4ee5\u81ea\u884c\u6311\u9009\u4e00\u4e2a\u5c9b\u5f00\u59cb\u6e38\u89c8\u3002\n- \u4efb\u4f55\u4e00\u4e2a\u5c9b\u90fd\u4e0d\u80fd\u6e38\u89c8\u4e00\u6b21\u4ee5\u4e0a\u3002\n- \u65e0\u8bba\u4efb\u4f55\u65f6\u95f4\uff0c\u4f60\u90fd\u53ef\u4ee5\u7531\u5f53\u524d\u6240\u5728\u7684\u5c9b $S$ \u53bb\u53e6\u4e00\u4e2a\u4ece\u672a\u5230\u8fc7\u7684\u5c9b $D$\u3002\u4ece $S$ \u5230 $D$ \u6709\u5982\u4e0b\u65b9\u6cd5\uff1a\n  - \u6b65\u884c\uff1a\u4ec5\u5f53\u4e24\u4e2a\u5c9b\u4e4b\u95f4\u6709\u4e00\u5ea7\u6865\u65f6\u624d\u6709\u53ef\u80fd\u3002\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u6865\u7684\u957f\u5ea6\u4f1a\u7d2f\u52a0\u5230\u4f60\u6b65\u884c\u7684\u603b\u8ddd\u79bb\u4e2d\u3002\n  - \u6e21\u8239\uff1a\u4f60\u53ef\u4ee5\u9009\u62e9\u8fd9\u79cd\u65b9\u6cd5\uff0c\u4ec5\u5f53\u6ca1\u6709\u4efb\u4f55\u6865\u548c\u4ee5\u524d\u4f7f\u7528\u8fc7\u7684\u6e21\u8239\u7684\u7ec4\u5408\u53ef\u4ee5\u7531 $S$ \u8d70\u5230 $D$ (\u5f53\u68c0\u67e5\u662f\u5426\u53ef\u5230\u8fbe\u65f6\uff0c\u4f60\u5e94\u8be5\u8003\u8651\u6240\u6709\u7684\u8def\u5f84\uff0c\u5305\u62ec\u7ecf\u8fc7\u4f60\u66fe\u6e38\u89c8\u8fc7\u7684\u90a3\u4e9b\u5c9b)\u3002\n\n**\u6ce8\u610f\uff0c\u4f60\u4e0d\u5fc5\u6e38\u89c8\u6240\u6709\u7684\u5c9b\uff0c\u4e5f\u53ef\u80fd\u65e0\u6cd5\u8d70\u5b8c\u6240\u6709\u7684\u6865\u3002**\n\u8bf7\u4f60\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u7ed9\u5b9a $N$ \u5ea7\u6865\u4ee5\u53ca\u5b83\u4eec\u7684\u957f\u5ea6\uff0c\u6309\u7167\u4e0a\u8ff0\u7684\u89c4\u5219\uff0c\u8ba1\u7b97\u4f60\u53ef\u4ee5\u8d70\u8fc7\u7684\u6865\u7684\u957f\u5ea6\u4e4b\u548c\u7684\u6700\u5927\u503c\u3002\n## \u89e3\n\u901a\u8fc7\u5bf9\u9898\u9762\u7684\u5206\u6790\uff0c\u6211\u4eec\u53d1\u73b0\u7ed9\u51fa\u7684\u56fe\u662f\u4e00\u4e2a\u57fa\u73af\u6811\u68ee\u6797\u3002\uff08$n$\u4e2a\u70b9$n$\u6761\u8fb9\u4e0d\u4fdd\u8bc1\u56fe\u8054\u901a\uff09\n\n\u56e0\u6b64\u6211\u4eec\u7684\u7b54\u6848\u4fbf\u662f\u6bcf\u68f5\u57fa\u73af\u6811\u4e0a\u957f\u5ea6\u6700\u5927\u7684\u7b80\u5355\u8def\u5f84\u3002\u8fd9\u4e2a\u8def\u5f84\u5c31\u662f\u57fa\u73af\u6811\u7684\u76f4\u5f84\u3002\n\n\u8fd9\u4e2a\u95ee\u9898\u5c31\u88ab\u8f6c\u5316\u6210\u4e86\u6c42\u57fa\u73af\u6811\u7684\u76f4\u5f84\u3002\u901a\u8fc7\u5206\u6790\u6211\u4eec\u53d1\u73b0\u57fa\u73af\u6811\u7684\u76f4\u5f84\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n- \u4f4d\u4e8e\u57fa\u73af\u6811\u4e0a\u67d0\u4e00\u68f5\u6811\u4e0a\u3002\n- \u57fa\u73af\u6811\u4e0a\u4e24\u9897\u6811\u7684\u94fe\u52a0\u4e0a\u4ed6\u4eec\u4e4b\u95f4\u73af\u4e0a\u7684\u8def\u5f84\u3002\n\n\u6c42\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c$DP$\u6c42\u5373\u53ef\u3002\n\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u628a\u73af\u65ad\u6210\u94fe\u8fdb\u884c\u64cd\u4f5c\u3002\n\n----\n\n##### \u5177\u4f53\u7ec6\u8282\uff1a\n**1.\u627e\u73af**\n\n\u8fd9\u9053\u9898\u627e\u73af\u4e0d\u80fd\u8bb0$father$,\u56e0\u4e3a\u4f1a\u6709\u8fd9\u4e2a\u6837\u5b50\u7684\u73af\uff1a\n\n![\u8fd9\u4e2a](https://s2.ax1x.com/2019/10/18/Ke082T.png)\n\n\u5982\u679c\u8bb0$father$\u8fd9\u4e2a\u73af\u5c31\u8dd1\u4e0d\u5230\u4e86\u3002\n\n\u6211\u4f7f\u7528\u4e86\u76f4\u63a5\u6807\u8bb0\u8fb9\u7684\u65b9\u6cd5\u4ee5\u9632\u6b62\u8dd1\u5230\u53cd\u5411\u8fb9\u3002\n\n\u5728\u5efa\u8fb9\u65f6\u9898\u76ee\u7ed9\u51fa\u7684\u6b63\u5411\u8fb9\u7684id\u90fd\u662f\u5076\u6570\uff0c\u53cd\u5411\u8fb9\u90fd\u662f\u5947\u6570\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u8dd1\u53cd\u5411\u8fb9\u3002\n```cpp\n    for (register int i = head[x]; i; i = e[i].nxt)\n    {\n        if (i & 1)\n            continue;\n    }\n```\n\u6211\u4eec\u53d1\u73b0\u9898\u76ee\u539f\u672c\u662f\u5efa\u7acb\u53cc\u5411\u9053\u8def\u8fd9\u6837\u65e0\u6cd5\u904d\u5386\u6574\u4e2a\u56fe\uff0c\u4f46\u6211\u4eec\u8dd1\u73af\u4e0d\u9700\u8981\u904d\u5386\u554a\uff0c\u6240\u4ee5\u5e76\u67e5\u96c6\u7ef4\u62a4\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\n```cpp\nclass FIND\n{\npublic:\n    int fa[MAXN];\n    inline int find(int x)\n    {\n        return fa[x] == x ? fa[x] : fa[x] = find(fa[x]);\n    }\n    inline void merge(int x, int y)\n    {\n        x = find(x);\n        y = find(y);\n        if (x != y)\n            fa[y] = x;\n    }\n    inline void init()\n    {\n        for (register int i = 1; i <= n; ++i)\n            fa[i] = i;\n    }\n} fd;\n\nif (fd.find(i) == i)\n{\n    now = i;\n    rd[0].push_back(now);\n    top = 0;\n    v[0] = 0;\n    dfs_round(i);\n} \n```\n**2.\u4e00\u68f5\u6811\u7684\u76f4\u5f84**\n\n\u4f7f\u7528DP\u6cd5\u6c42\u6811\u7684\u76f4\u5f84\uff0c\u540c\u65f6\u7ef4\u62a4\u6811\u7684\u6df1\u5ea6\u3002\n```cpp\nvoid dp(int x)\n{\n    v[x] = 1;\n    for (register int i = head[x]; i; i = e[i].nxt)\n    {\n        register int y = e[i].ver;\n        if (v[y] || rond[y])\n            continue;\n        dp(y);\n        d[now] = max(d[now], f[x] + f[y] + e[i].edge);\n        f[x] = max(f[x], f[y] + e[i].edge);\n        l[now] = max(l[now], f[x]);\n    }\n}\n```\n**3.\u57fa\u73af\u6811\u7684\u76f4\u5f84**\n\n\u7b2c\u4e00\u79cd\u5728\u4e00\u68f5\u6811\u4e0a\u7684\u60c5\u51b5\u5df2\u7ecf\u6c42\u51fa\uff0c\u73b0\u5728\u8ba1\u7b97\u94fe\u52a0\u8def\u5f84\u7684\u60c5\u51b5\u3002\n\n\u73af\u4e0a\u95ee\u9898\u4f7f\u7528DP\u6c42\u89e3\u5c06\u73af\u65ad\u6210\u94fe\u5e76\u590d\u5236\u6210\u4e24\u500d\u3002\n\n\u4f7f\u7528$L[i]$\u8868\u793a\u4ee5$i$\u4e3a\u6839\u7684\u6811\u7684\u6700\u957f\u94fe\u957f\u5ea6\uff0c$f[i]$\u8868\u793a$i$\u5230\u65ad\u5f00\u7684\u70b9\u5728\u73af\u4e0a\u7684\u8def\u5f84\u957f\u5ea6\u3002\n\n\u679a\u4e3e\u53f3\u7aef\u70b9$r$,\u5f53\u5de6\u7aef\u70b9\u662f$l$\u65f6\u7684\u7b54\u6848\n\n$ans = \\max(ans,L[r] + L[l] + f[r] - f[l])$\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u8981\u7ef4\u62a4\u51fa\u5728\u5408\u6cd5\u8303\u56f4\u5185\uff0c$L[i] - f[i]$\u6700\u5c0f\u7684\u70b9\u3002\n\n\u679a\u4e3e\u53f3\u7aef\u70b9\uff0c\u4f7f\u7528\u5355\u8c03\u9012\u589e\u7684\u5355\u8c03\u961f\u5217\u8fdb\u884c\u7ef4\u62a4\u5de6\u7aef\u70b9\u3002\n\n\u63a8\u8350[\u73af\u8def\u8fd0\u8f93](https://ac.nowcoder.com/acm/contest/1045/B?&headNav=acm)\n- \u961f\u5934\u72b6\u6001\u4e0d\u5408\u6cd5\uff0c\u51fa\u961f\n- \u5f53\u524d\u961f\u5934\u5143\u7d20\u4fbf\u662f\u6700\u4f18\u5de6\u7aef\u70b9\uff0c\u66f4\u65b0\u7b54\u6848\n- \u5982\u679c\u961f\u5c3e\u5143\u7d20\u5927\u4e8e\u5f53\u524d\u5143\u7d20\uff0c\u5f39\u961f\u5c3e\n- \u5c06\u5f53\u524d\u5143\u7d20\u5165\u961f\n```cpp\n    for (register int i = 1; i <= len; ++i)\n        g[i] = g[i + len] = l[s[i]];\n    ans = 0;\n    for (register int i = 1; i < len * 2; ++i)\n    {\n        while (q.size() && i - q.front() >= len)\n            q.pop_front();\n        if (q.size())\n        {\n            ans = max(ans, f[i] - f[q.front()] + g[i] + g[q.front()]);\n        }\n        while (q.size() && g[i] - f[i] > g[q.back()] - f[q.back()])\n            q.pop_back();\n        q.push_back(i);\n    }\n```\n\u5927\u4f53\u5c31\u662f\u8fd9\u6837\uff0c\u5177\u4f53\u7684\u5728\u4ee3\u7801\u91cc\u6709\u6ce8\u91ca\u3002\n\n\u53e6\u5916\u7279\u522b\u6ce8\u610f\u4e00\u70b9\uff0c\u7531\u4e8e\u6bcf\u6b21dfs\u53ea\u662f\u4e00\u4e2a\u8fde\u901a\u5757\uff0c\u5e76\u4e0d\u4f1a\u904d\u5386\u6574\u5f20\u56fe\uff0c\u6240\u4ee5\u5e76\u6ca1\u6709\u5fc5\u8981dfs\u4e00\u904d\u5c31\u6e05\u7a7avis\u6570\u7ec4\uff0c\u8fd9\u6837\u4f1a\u5bfc\u81f4TLE\uff0c\u800c\u662f\u5e94\u8be5\u5f53\u524d\u56fe\u88ab\u5b8c\u5168\u904d\u5386\u4e4b\u540e\u6e05\u7a7avis\u6570\u7ec4\u3002\n## \u653e\u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n//\u5feb\u8bfb\nnamespace fdata\n{\ninline char nextchar()\n{\n    static const int BS = 1 << 21;\n    static char buf[BS], *st, *ed;\n    if (st == ed)\n        ed = buf + fread(st = buf, 1, BS, stdin);\n    return st == ed ? -1 : *st++;\n}\ntemplate <typename Y>\ninline void poread(Y &ret)\n{\n    ret = 0;\n    char ch;\n    while (!isdigit(ch = nextchar()))\n        ;\n    do\n        ret = ret * 10 + ch - '0';\n    while (isdigit(ch = nextchar()));\n}\n#undef nextcar\n} // namespace fdata\nusing fdata::poread;\nconst int MAXN = 1e6 + 10;\nint n;\nstruct node\n{\n    int nxt, ver, edge;\n} e[MAXN << 1];\nint head[MAXN], tot = 1;\ninline void add(const int &x, const int &y, const int &z)\n{\n    e[++tot].ver = y;\n    e[tot].edge = z;\n    e[tot].nxt = head[x];\n    head[x] = tot;\n}\n//\u5e76\u67e5\u96c6 \u6ca1\u9519\u6211\u5c01\u88c5\u4e86\nclass FIND\n{\npublic:\n    int fa[MAXN];\n    inline int find(int x)\n    {\n        return fa[x] == x ? fa[x] : fa[x] = find(fa[x]);\n    }\n    inline void merge(int x, int y)\n    {\n        x = find(x);\n        y = find(y);\n        if (x != y)\n            fa[y] = x;\n    }\n    inline void init()\n    {\n        for (register int i = 1; i <= n; ++i)\n            fa[i] = i;\n    }\n} fd;\n#define int long long\n//\u53cc\u7aef\u961f\u5217 \u6ca1\u9519\u6211\u81ea\u5df1\u5c01\u88c5\u7684\nclass QUE\n{\nprivate:\n    long long q[MAXN << 1];\n    int l = 1, r;\n\npublic:\n    inline bool size()\n    {\n        return r >= l;\n    }\n    inline void init()\n    {\n        l = 1, r = 0;\n    }\n    inline void push_back(const long long x)\n    {\n        q[++r] = x;\n    }\n    inline long long back()\n    {\n        return q[r];\n    }\n    inline void pop_back()\n    {\n        --r;\n    }\n    inline void pop_front()\n    {\n        ++l;\n    }\n    inline long long front()\n    {\n        return q[l];\n    }\n} q;\nbool v[MAXN << 1];\nint sta[MAXN], top;\nint rond[MAXN], now;\n//\u4f7f\u7528vector\u8bb0\u5f55\u73af\u4e0a\u7684\u70b9\nvector<int> rd[MAXN];\n//\u627e\u73af\ninline bool dfs_round(int x)\n{\n    //\u5165\u6808\n    sta[++top] = x;\n    v[x] = 1;\n    for (register int i = head[x]; i; i = e[i].nxt)\n    {\n        //\u5224\u65ad\u662f\u4e0d\u662f\u53cd\u5411\u8fb9\n        if (i & 1)\n            continue;\n        register int y = e[i].ver;\n        //\u5f53\u524d\u70b9\u8dd1\u5230\u8fc7  \u5df2\u7ecf\u8dd1\u5b8c\u4e86\u8fd9\u4e2a\u73af \u6808\u4e2d\u5230\u5f53\u524d\u70b9\u70b9\u4e4b\u95f4\u7684\u70b9\u5c31\u662f\u73af\u4e0a\u7684\u70b9\n        if (v[y])\n        {\n            register int z = 0;\n            do\n            {\n                z = sta[top--];\n                assert(z);\n                rd[now].push_back(z);\n                rond[z] = now;\n            } while (z != y);\n            return 1;\n        }\n        if (dfs_round(y))\n            return 1;\n    }\n    sta[top--] = 0;\n    return 0;\n}\nlong long f[MAXN << 1], s[MAXN << 1], d[MAXN], l[MAXN << 1];\nlong long g[MAXN << 1];\n//\u6c42\u6811\u7684\u76f4\u5f84\nvoid dp(int x)\n{\n    v[x] = 1;\n    for (register int i = head[x]; i; i = e[i].nxt)\n    {\n        register int y = e[i].ver;\n        if (v[y] || rond[y])\n            continue;\n        dp(y);\n        d[now] = max(d[now], f[x] + f[y] + e[i].edge);\n        f[x] = max(f[x], f[y] + e[i].edge);\n        l[now] = max(l[now], f[x]);\n    }\n}\nlong long ans;\nint len;\n//\u8dd1\u73af\ninline void dfs(int x, int nw)\n{\n    for (register int i = head[x]; i; i = e[i].nxt)\n    {\n        register int y = e[i].ver;\n        if (v[i] || !rond[y])\n            continue;\n        v[i] = v[i ^ 1] = 1;\n        //\u8fb9\u7684\u957f\u5ea6\n        f[nw] = e[i].edge;\n        //\u73af\u4e0a\u7684\u70b9\uff0c\u987a\u5e8f\u8bb0\u5f55\u4fbf\u4e8eDP\n        s[nw] = y;\n        dfs(y, nw + 1);\n    }\n}\n/*\u8ba1\u7b97\u7b54\u6848*/\ninline long long sov(const int &now)\n{\n    int len = rd[now].size();\n    s[1] = rd[now][0];\n    dfs(rd[now][0], 2);\n    q.init();\n    //\u65ad\u73af\u6210\u94fe\u5e76\u590d\u5236\n    for (register int i = 2; i <= len; ++i)\n        f[i + len + 1 - 1] = f[i];\n    //\u6c42\u524d\u7f00\u548c\uff0cO(1)\u67e5\u8be2\u533a\u95f4\u548c\n    for (register int i = 1; i <= len * 2; ++i)\n        f[i] = f[i - 1] + f[i];\n    //\u5c06\u73af\u4e0a\u6bcf\u68f5\u6811\u7684\u6df1\u5ea6\u4fe1\u606f\u590d\u5236\n    for (register int i = 1; i <= len; ++i)\n        g[i] = g[i + len] = l[s[i]];\n    ans = 0;\n    //DP\u6c42\u7b2c\u4e8c\u79cd\u60c5\u51b5\n    for (register int i = 1; i < len * 2; ++i)\n    {\n        while (q.size() && i - q.front() >= len)\n            q.pop_front();\n        if (q.size())\n        {\n            ans = max(ans, f[i] - f[q.front()] + g[i] + g[q.front()]);\n        }\n        while (q.size() && g[i] - f[i] > g[q.back()] - f[q.back()])\n            q.pop_back();\n        q.push_back(i);\n    }\n    //\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u76f4\u63a5\u53d6max\n    for (register vector<int>::iterator it = rd[now].begin(); it != rd[now].end(); ++it)\n    {\n        ans = max(ans, d[*it]);\n    }\n    return ans;\n}\nsigned main()\n{\n    poread(n);\n    fd.init();\n    for (register int i = 1, y, z; i <= n; ++i)\n    {\n        //\u5efa\u56fe \u7ef4\u62a4\u8fde\u901a\u6027\n        poread(y), poread(z);\n        add(i, y, z);\n        add(y, i, z);\n        fd.merge(i, y);\n    }\n    for (register int i = 1; i <= n; ++i)\n    {\n        //\u904d\u5386\u6bcf\u4e00\u4e2a\u8fde\u901a\u5757 \u6c42\u73af\n        if (fd.find(i) == i)\n        {\n            now = i;\n            rd[0].push_back(now);\n            top = 0;\n            v[0] = 0;\n            dfs_round(i);\n        }\n    }\n    //\u6574\u5f20\u56fe\u5b8c\u5168\u904d\u5386 \u6e05\u7a7avis\n    memset(v, 0, sizeof(v));\n    //\u5bf9\u6bcf\u4e00\u4e2a\u73af\u4e0a\u7684\u70b9\u4e3a\u6839\u7684\u6811\u6c42\u76f4\u5f84\u548c\u6df1\u5ea6\n    for (vector<int>::iterator it = rd[0].begin(); it != rd[0].end(); ++it)\n    {\n        for (register vector<int>::iterator jt = rd[*it].begin(); jt != rd[*it].end(); ++jt)\n        {\n            now = *jt;\n            dp(*jt);\n        }\n    }\n    memset(v, 0, sizeof(v));\n    long long ANs = 0;\n    //\u5bf9\u6bcf\u4e00\u4e2a\u8fde\u901a\u5757\u6c42\u89e3\u5e76\u7edf\u8ba1\u7b54\u6848\n    for (vector<int>::iterator it = rd[0].begin(); it != rd[0].end(); ++it)\n    {\n        ANs += sov(*it);\n    }\n    cout << ANs << endl;\n    return 0;\n}\n\n```",
        "postTime": 1571416173,
        "uid": 143186,
        "name": "lky1433223",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P4381 island"
    },
    {
        "content": "\u63a8\u5e7f\u535a\u5ba2\uff1ahttps://llf0703.com/p/luogu-4381.html\n\n## \u9898\u610f\n\n\u7ed9\u51fa\u4e00\u4e2a\u57fa\u73af\u68ee\u6797\uff0c\u6c42\u6240\u6709\u57fa\u73af\u6811\u7684\u76f4\u5f84\u4e4b\u548c\u3002\n\n\u70b9\u6570 $N\\le 10^6$ \u3002\n\n## \u9898\u89e3\n\n### \u601d\u60f3\n\n\u5148\u8003\u8651\u6c42\u4e00\u4e2a\u57fa\u73af\u6811\u7684\u76f4\u5f84\u3002\n\n\u8bbe $\\text{f[i]}$ \u662f $i$ \u5411\u73af\u5916\u5ef6\u4f38\u7684\u6700\u957f\u8ddd\u79bb\uff0c\u76f4\u5f84\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n1. \u4e0d\u7ecf\u8fc7\u73af\uff0c\u7b54\u6848\u4e3a\u73af\u7684\u5b50\u6811\u76f4\u5f84\uff0c\u5373 $\\mathrm{max}(\\text{f[x]}+\\text{f[y]}+w)$ \uff0c\u5176\u4e2d $x,y$ \u662f\u5b50\u6811\u4e2d\u4e24\u70b9\uff0c$w$ \u662f\u4e24\u70b9\u8ddd\u79bb\u3002\n2. \u7ecf\u8fc7\u73af\uff0c\u5219\u7b54\u6848\u4e3a $\\mathrm{max}(\\text{f[x]}+\\text{f[y]}+\\mathrm{len}(x,y))$ \uff0c\u5176\u4e2d $x,y$ \u662f\u73af\u4e0a\u4e24\u70b9\uff0c$\\mathrm{len(x,y)}$ \u662f\u4e24\u70b9\u5728\u73af\u4e0a\u7684\u8f83\u957f\u8ddd\u79bb\u3002\n\n\u5bf9\u4e8e\u60c5\u51b5 $2$ \uff0c\u76f4\u63a5 $O(n^2)$ \u679a\u4e3e\u80af\u5b9a\u4f1a\u7206\uff0c\u8003\u8651\u65ad\u73af\u6210\u94fe\u540e\u7528\u5355\u8c03\u961f\u5217\u4f18\u5316\u3002\n\n\u5c06\u73af\u65ad\u6210\u539f\u6765\u7684\u4e24\u500d\u957f\uff0c\u4ece\u4efb\u610f\u4e00\u4e2a\u70b9\u51fa\u53d1\uff0c\u7528 $\\text{s[i]}$ \u8868\u793a\u7b2c $i$ \u4e2a\u70b9\uff0c\u8bbe\u7f16\u53f7\u4e3a $p$ \uff0c\u7684 $\\text{f[p]}$ \u503c \uff1b\u7528 $\\text{dis[i]}$ \u4ee3\u8868 $i$ \u8ddd\u79bb\u8d77\u70b9\u7684\u8ddd\u79bb\u3002\u7b54\u6848\u5316\u4e3a\n\n$$s[x]+s[y]+dis[y]-dis[x]$$\n\n\u679a\u4e3e $y$ \uff0c\u53bb\u9664\u5df2\u77e5\u91cf\u540e\u7b54\u6848\u5316\u4e3a\n\n$$s[x]-dis[x]$$\n\n\u8981\u6c42\u8fd9\u4e2a\u503c\u6700\u5927 \uff0c\u7528\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u5c31\u884c\u4e86\u3002\n\n\u6700\u540e\u5bf9\u4e8e\u6bcf\u4e2a\u5b50\u6811\uff0c\u5bf9\u4e24\u79cd\u60c5\u51b5\u53d6\u6700\u5927\u503c\u76f8\u52a0\u5373\u53ef\u3002\n\n### \u5b9e\u73b0\n\n1. \u5148\u7528 $\\text{dfs}$ \u6c42\u51fa\u6bcf\u4e2a\u70b9 $i$ \u6240\u5c5e\u7684\u5b50\u6811 $\\text{scc[i]}$ \u3002\n2. \u62d3\u6251\u6392\u5e8f\u627e\u73af\uff0c\u8fd8\u53ef\u4ee5\u7528\u6811\u5f62dp\u987a\u4fbf\u6c42\u51fa $\\text{f[i]}$ \u548c\u4e0a\u8ff0\u60c5\u51b5 $1$ \u3002\n3. \u4ece\u4efb\u610f\u4e00\u4e2a\u5728\u73af\u4e0a\u7684\u70b9\u51fa\u53d1\u65ad\u73af\u6210\u94fe\uff0c\u6ce8\u610f\u8fd8\u9700\u8981\u627e\u7ec8\u70b9\u5230\u8d77\u70b9\u7684\u8fb9\u3002\u5b8c\u6210\u540e\u5c06\u5b50\u6811\u6807\u8bb0\uff0c$vis[scc[x]]=1$ \u3002\n4. \u7528\u5355\u8c03\u961f\u5217\u6c42\u51fa\u60c5\u51b5 $(2)$ \u7684\u7b54\u6848\u3002\u6ce8\u610f\u4e24\u4e2a\u70b9\u6210\u73af\u7684\u91cd\u8fb9\u60c5\u51b5\u9700\u8981\u5355\u72ec\u8003\u8651\u3002\n5. \u5f00 `long long` \u3002\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define N 1000005\n\nusing namespace std;\n\ninline ll read()\n{\n    char ch=getchar();\n    ll f=1,x=0;\n    while (ch<'0' || ch>'9')\n    {\n        if (ch=='-') f=-1;\n        ch=getchar();\n    }\n    while (ch>='0' && ch<='9')\n    {\n        x=x*10+ch-'0';\n        ch=getchar();\n    }\n    return f*x;\n}\n\nstruct Edge {\n    ll next,to,w;\n} edge[N<<1];\nbool vis[N];\nll cnt,head[N],n,a,b,ans,scnt,scc[N],deg[N],mx[N],f[N],s[N],dis[N];\n\ninline void add(ll u,ll v,ll w); //\u52a0\u8fb9\nvoid dfs(ll x); //dfs\u5212\u5206\u5b50\u6811\ninline void t_sort(); //\u62d3\u6251\u6392\u5e8f\uff0c\u5904\u7406\u60c5\u51b51\ninline void dp(ll x); //\u5904\u7406\u60c5\u51b52\n\nsigned main()\n{\n    n=read();\n    for (ll i=1;i<=n;i++)\n    {\n        a=read(); b=read();\n        add(i,a,b);\n        add(a,i,b);\n        deg[i]++; deg[a]++; //\u5ea6\u6570\n    }\n    for (ll i=1;i<=n;i++) //\u5212\u5206\u5b50\u6811\n    {\n        if (scc[i]) continue;\n        scnt++;\n        dfs(i);\n    }\n    t_sort();\n    for (ll i=1;i<=n;i++)\n    {\n        if (!deg[i] || vis[scc[i]]) continue; //\u4e0d\u5728\u73af\u4e0a\u6216\u8be5\u5b50\u6811\u88ab\u8bbf\u95ee\u8fc7\u5219\u8df3\u8fc7\n        dp(i);\n        ans+=mx[scc[i]]; //\u7edf\u8ba1\u7b54\u6848\n    }\n    return !printf(\"%lld\",ans);\n}\n\ninline void add(ll u,ll v,ll w)\n{\n    edge[++cnt].to=v;\n    edge[cnt].w=w;\n    edge[cnt].next=head[u];\n    head[u]=cnt;\n}\n\nvoid dfs(ll x) //\u5212\u5206\u5b50\u6811\n{\n    scc[x]=scnt;\n    for (ll i=head[x];i;i=edge[i].next)\n    {\n        ll y=edge[i].to;\n        if (scc[y]) continue;\n        dfs(y);\n    }\n}\n\ninline void t_sort() //\u62d3\u6251\u6392\u5e8f\n{\n    queue <ll> q;\n    for (ll i=1;i<=n;i++)\n    {\n        if (deg[i]>1) continue;\n        q.push(i); //\u4e0d\u5728\u73af\u4e0a\u5165\u961f\n    }\n    while (!q.empty())\n    {\n        ll x=q.front(); q.pop();\n        for (ll i=head[x];i;i=edge[i].next)\n        {\n            ll y=edge[i].to,w=edge[i].w;\n            if (!deg[y]) continue; //\u7236\u8282\u70b9\u8df3\u8fc7\n            mx[scc[x]]=max(mx[scc[x]],f[x]+f[y]+w);\n            f[y]=max(f[y],f[x]+w); //\u6811\u5f62dp\n            deg[x]--; deg[y]--;\n            if (deg[y]==1) q.push(y);\n        }\n    }\n}\n\ninline void dp(ll x)\n{\n    ll st=x,id=scc[x],pcnt=0; //pcnt\u4e3a\u73af\u4e0a\u70b9\u7684\u4e2a\u6570\n    vis[id]=1; //\u6807\u8bb0\u5df2\u5904\u7406\u8fc7\n    for (;;)\n    {\n        s[++pcnt]=f[x];\n        deg[x]=0; //\u6807\u8bb0\u8bbf\u95ee\u8fc7\n        bool flag=0; //flag\u8868\u793a\u8fd8\u6709\u4e0b\u4e00\u4e2a\u70b9\n        for (ll i=head[x];i;i=edge[i].next)\n        {\n            ll y=edge[i].to,w=edge[i].w;\n            if (!deg[y]) continue; //\u4e0d\u5728\u73af\u4e0a\u6216\u8bbf\u95ee\u8fc7\n            flag=1;\n            dis[pcnt+1]=dis[pcnt]+w;\n            x=y;\n            break;\n        }\n        if (!flag) break; //\u6ca1\u6709\u4e0b\u4e00\u4e2a\u70b9\u4e86\u9000\u51fa\n    }\n    if (pcnt==2) //\u5355\u72ec\u5904\u7406\u4e24\u70b9\u6210\u73af\u7684\u60c5\u51b5\n    {\n        ll res=0;\n        for (ll i=head[x];i;i=edge[i].next)\n        {\n            ll y=edge[i].to,w=edge[i].w;\n            if (y!=st) continue;\n            res=max(res,w);\n        }\n        mx[id]=max(mx[id],f[st]+f[x]+res);\n    }\n    for (ll i=head[x];i;i=edge[i].next) //\u4ece\u7ec8\u70b9\u5230\u8d77\u70b9\n    {\n        ll y=edge[i].to,w=edge[i].w;\n        if (y!=st) continue;\n        dis[pcnt+1]=dis[pcnt]+w;\n        break;\n    }\n    for (ll i=1;i<pcnt;i++) //\u6269\u6210\u4e24\u500d\n    {\n        s[i+pcnt]=s[i];\n        dis[i+pcnt]=dis[1+pcnt]+dis[i];\n    }\n    deque <ll> q;\n    q.emplace_back(1);\n    for (ll i=2;i<(pcnt<<1);i++) //\u5355\u8c03\u961f\u5217\u5f97\u5230\u7b54\u6848\n    {\n        while (!q.empty() && i-q.front()>=pcnt) q.pop_front();\n        if (!q.empty()) mx[id]=max(mx[id],s[i]+s[q.front()]+dis[i]-dis[q.front()]);\n        while (!q.empty() && s[q.back()]-dis[q.back()]<=s[i]-dis[i]) q.pop_back();\n        q.emplace_back(i);\n    }\n}\n```",
        "postTime": 1561510855,
        "uid": 29696,
        "name": "Llf0703",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4381 \u3010[IOI2008]Island\u3011"
    },
    {
        "content": "# \u57fa\u73af\u6811\n~~\uff08\u6211\u7684\u7b2c\u4e8c\u9053\u9ed1\u9898\uff09~~\n\n\n------------\n### \u601d\u8def\uff1a\n1. \u6839\u636e\u9898\u610f\uff0c\u82e5\u4ee5\u524d\u4f7f\u7528\u8fc7\u7684\u6e21\u8239\u7ec4\u5408\u53ef\u4ee5\u7531S\u8d70\u5230D\uff0c\u5219D\u70b9\u4e0d\u80fd\u88ab\u5230\u8fbe\n\n1. \u6362\u53e5\u8bdd\u8bf4\u57fa\u73af\u6811\u4e0a\u7684\u70b9\u5168\u90e8\u53ef\u4ee5\u88ab\u5230\u8fbe\uff0c\u4f46\u79bb\u5f00\u4e00\u4e2a\u57fa\u73af\u6811\u4ee5\u540e\uff0c\u4e0d\u80fd\u518d\u56de\u5230\u539f\u6765\u7684\u90a3\u9897\u57fa\u73af\u6811\u3002\n\n1. \u90a3\u4e48\u95ee\u9898\u5c31\u8f6c\u6362\u6210\u4e86\u6c42\u57fa\u73af\u68ee\u6797\u7684\u6700\u957f\u94fe\u4e4b\u548c\u3002\n\n\n------------\n\n#### \u5305\u542b\u7684\u77e5\u8bc6\u70b9\uff1a\n1. \u65e0\u5411\u56fe\u7f29\u70b9\n1. \u62d3\u6251\u6392\u5e8f\u627e\u57fa\u73af\uff08\u6392\u5e8f\u4ee5\u540e\u5165\u5ea6\u4ecd\u5927\u4e8e1\u7684\u4e3a\u73af\uff09\n1. \u91cd\u8fb9\u7684\u5904\u7406\n1. \u7528BFS\u5199\u6811\u5f62DP\u6c42\u76f4\u5f84\n1. \u57fa\u73af\u6811\u76f4\u5f84\u7684\u6c42\u6cd5\n1. \u7834\u73af\u6210\u94fe\u7684\u5e94\u7528\n1. \u5355\u8c03\u961f\u5217\u4f18\u5316DP\n\n\n------------\n\n\u4ee3\u7801\u5982\u4e0b\n\n```c\n//b[m+i]\u8868\u793a\u8f6c\u4e86\u4e00\u5708\u540e\u5230\u8fbei\u53f7\u70b9\u7ecf\u8fc7\u7684\u8ddd\u79bb \n#include<bits/stdc++.h>\nusing namespace std;\n#define go(i,a,b) for(int i=(a);i<=(b);++(i))\n#define com(i,a,b) for(int i=(a);i>=(b);--(i))\n#define mem(a,b) memset((a),(b),sizeof(a))\n#define inf 0x3f3f3f3f\n#define fin freopen(\"input.txt\",\"r\",stdin)\n#define fout freopen(\"output.txt\",\"w\",stdout)\nconst int maxn=1000010;\ntypedef long long ll;\nint head[maxn],que[maxn*2],du[maxn],c[maxn],cnt=0,tim=0,n;\nbool vis[maxn];\nll f[maxn],d[maxn],a[2*maxn],b[2*maxn];\nstruct edge{\n    int nxt,v,w;\n}e[maxn*2];\n\nvoid read(int &x){\n    int f=1;char s=getchar();x=0;\n    while(!isdigit(s)){\n    \tif(s=='-') f=-1;s=getchar();\n    }\n    while(isdigit(s)){\n   \t\tx=(x<<3)+(x<<1)+s-'0';s=getchar();\n    }\n    x*=f;\n}//\u8bfb\u5165\u4f18\u5316\n\nvoid add(int u,int v,int w){\n    e[cnt]=(edge){head[u],v,w};\n    head[u]=cnt++;du[v]++;\n}\nqueue<int>q;\n\nvoid bfs(int st,int tim){//\u6807\u8bb0\u6bcf\u4e2a\u70b9\u6240\u5c5e\u7684\u57fa\u73af\u6811\u7684\u7f16\u53f7\n    c[st]=tim;q.push(st);\n    while(!q.empty()){\n        int u=q.front();q.pop();\n        for(int i=head[u];i+1;i=e[i].nxt){\n            int v=e[i].v;if(c[v]) continue;\n            c[v]=tim;q.push(v);\n        }\n    }\n}\n\nvoid topsort(){\n \tgo(i,1,n) if(du[i]==1) q.push(i);\n    while(!q.empty()){\n        int u=q.front();q.pop();\n        for(int i=head[u];i+1;i=e[i].nxt){\n            int v=e[i].v,w=e[i].w;\n            if(du[v]<=1) continue;//\u5728\u6709\u5411\u56fe\u4e2d\u53ef\u4ee5\u4e0d\u52a0\u8fd9\u53e5\u8bdd\n            //\u5728\u65e0\u5411\u56fe\u4e2d\u5b58\u5728\u8bbf\u95ee\u7236\u8282\u70b9\u7684\u53ef\u80fd \uff0c\u800c\u7236\u8282\u70b9\u7684du\u4e3a1\uff0c\u8d77\u5230\u6392\u9664\u7236\u8282\u70b9\u7684\u4f5c\u7528 \n            d[c[u]]=max(d[c[u]],f[u]+f[v]+w);\n            //\u5f53\u524d\u5b50\u6811\u6700\u957f\u94fe==f[x]+w,f[y]==\u4e4b\u524d\u5b50\u6811\u4e2d\u7684\u6700\u957f\u94fe \n            f[v]=max(f[v],f[u]+w);//\u5f53\u524d\u94fe\u53d8\u4e3a\u4e4b\u524d\u94fe\n            if((--du[v])==1) q.push(v);\n        }\n    }\n}\n\nvoid dp(int x,int co){\n    int l=0,r,m=0,y=x,i;\n    do{\n        a[++m]=f[y];du[y]=1;\n        for(i=head[y];i+1;i=e[i].nxt){\n            int v=e[i].v,w=e[i].w;\n            if(du[v]>1){\n            y=v;b[m+1]=b[m]+w;break;\n            }\n        }\n    }while(i+1);\n    if(m==2){//\u5904\u7406\u91cd\u8fb9\n        for(i=head[y];i+1;i=e[i].nxt){\n            if(e[i].v==x) l=max(l,e[i].w);\n        }\n        d[co]=max(d[co],f[x]+f[y]+l);return;\n    }\n    for(i=head[y];i+1;i=e[i].nxt){\n        if(e[i].v==x){\n        b[m+1]=b[m]+e[i].w;break;\n\t\t//\u7279\u522b\u63d0\u9192\uff1ab[m+1]=max(b[m+1],b[m]+e[i].w)\u8fd9\u79cd\u5199\u6cd5\u662f\u9519\u8bef\u7684\n\t\t//\u9996\u5148\uff0c\u6709\u91cd\u8fb9\u7684\u90fd\u5df2\u88ab\u5355\u72ec\u7b97\u4f5c\u73af\uff0c\u4e0d\u9700\u8981\u8003\u8651\u6700\u5927\u503c\n\t\t//\u5176\u6b21\uff0c\u7531\u4e8e\u53ef\u80fd\u6709\u591a\u4e2a\u57fa\u73af\u6811\uff0cb[m+1]\u7684\u503c\u53ef\u80fd\u5df2\u7ecf\u6c42\u51fa\uff0c\u5e76\u4e14\u6bd4\u6b63\u786e\u7684\u503c\u66f4\u5927 \n        }\n    }\n    for(i=1;i<m;i++)a[i+m]=a[i],b[i+m]=b[i]+b[m+1];\n    que[l=r=1]=1;//\u8bb0\u4f4f\uff1a\u624b\u5199\u961f\u5217\u7684\u6761\u4ef6\u6c38\u8fdc\u662fL<=r \n    for(i=2;i<2*m;i++){//\u5355\u8c03\u961f\u5217\u4f18\u5316DP \n        while(l<=r&&i-que[l]>=m) l++;\n        d[co]=max(d[co],a[i]+a[que[l]]+b[i]-b[que[l]]);\n        while(l<=r&&a[i]-b[i]>=a[que[r]]-b[que[r]]) r--;\n        que[++r]=i;\n    }\n}\n\nint main()\n{\n    //fin;\n    mem(head,-1);\n    read(n);\n    go(i,1,n){\n        int v,w;read(v);read(w);\n        add(i,v,w),add(v,i,w);\n    }\n    go(i,1,n){\n        if(!c[i]) bfs(i,++tim);\n    }\n    topsort();//\u5224\u73af\uff08\u4e24\u4e2a\u70b9\u6709\u91cd\u8fb9\u7684\u4e5f\u7b97\u4f5c\u73af\uff09\n    ll ans=0;\n    go(i,1,n){\n        if(!vis[c[i]]&&du[i]>1){\n            vis[c[i]]=1;\n            dp(i,c[i]);\n            ans+=d[c[i]];\n        }\n    }\n    printf(\"%lld\",ans);\n    return 0;\n}\n```\n",
        "postTime": 1552033603,
        "uid": 109434,
        "name": "\u98ce\u968f\u9010\u5f71",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4381 \u3010[IOI2008]Island\u3011"
    },
    {
        "content": "# P4381 Island\n\n~~\u53ef\u4e0d\u8981\u56e0\u4e3a\u5b83\u662f\u7d2b\u9898\u5c31\u88ab\u5413\u4f4f\u4e86\u55f7~~\n\n~~\u8fd9\u4e0d\u5c31\u662f\u51e0\u9053\u7eff\u9898\u634f\u4e00\u5757\u4e86\u4e48~~\n\n**\u672c\u9898\u89e3\u4e0d\u4f1a\u7ec6\u8bb2\u4e00\u4e9b\u57fa\u7840\u7684\u6a21\u677f\u7c7b\u95ee\u9898\uff0c\u5efa\u8bae\u6709\u4e00\u5b9a\u57fa\u7840\u518d\u770b\u3002**\n\n## \u9898\u76ee\u5927\u610f\nN\u4e2a\u8282\u70b9\uff0cN\u6761\u8fb9\uff0c**\u6ca1\u6709\u81ea\u73af**\u3002\u540c\u65f6\uff0c\u6839\u636e\u9898\u76ee\u63cf\u8ff0\u53ef\u77e5\uff0c**\u6bcf\u4e2a**\u8282\u70b9\u90fd\u6709**\u4e00\u6761**\u8fb9\u8fde\u5411\u53e6\u5916\u4e00\u4e2a\u8282\u70b9\uff0c\u7a0d\u52a0\u601d\u7d22\u53ef\u4ee5\u5f97\u51fa\uff0c\u9898\u76ee\u7ed9\u51fa\u7684\u56fe\u662f**\u82e5\u5e72\u4e2a\u57fa\u73af\u6811**\u3002\n\n\u56e0\u4e3a\u9898\u76ee\u7684\u9650\u5b9a\uff0c**\u53ea\u8981\u79bb\u5f00\u4e86\u8fd9\u68f5\u57fa\u73af\u6811\uff0c\u5c31\u4e0d\u80fd\u518d\u6b21\u8fdb\u5165\u5b83**\u3002\u56e0\u4e3a\u4e00\u68f5\u57fa\u73af\u6811\u4e0a\u7684\u70b9\u5168\u662f\u8fde\u901a\u7684\uff08~~\u5e9f\u8bdd~~\uff09\uff0c\u53c8\u56e0\u4e3a\u6240\u6709**\u4f7f\u7528\u8fc7\u7684\u6e21\u8239**\u628a\u6240\u6709**\u8fdb\u5165\u8fc7\u7684**\u57fa\u73af\u6811\u8fde\u901a\u4e86\uff0c\u56e0\u6b64\u5728**\u5f53\u524d\u7684\u57fa\u73af\u6811**\u4e0a\uff0c\u4e00\u5b9a\u6709\u4e00\u79cd\u201c\u6865\u548c\u4ee5\u524d\u4f7f\u7528\u8fc7\u7684\u6e21\u8239\u7684\u7ec4\u5408\u201d\uff08\u9898\u76ee\u539f\u53e5\uff09\u53ef\u4ee5\u56de\u5230**\u4e4b\u524d\u8fdb\u5165\u8fc7\u7684**\u57fa\u73af\u6811\u4e0a\uff0c\u6240\u4ee5\u79bb\u5f00\u4e86\u4e00\u68f5\u57fa\u73af\u6811\uff0c\u5c31\u4e0d\u80fd\u518d\u6b21\u8fdb\u5165\u5b83\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u597d\u597d\u73cd\u60dc\u8fdb\u5165\u4e00\u68f5\u57fa\u73af\u6811\u7684\u673a\u4f1a\uff0c~~\u5c3d\u53ef\u80fd\u69a8\u5e72\u5b83~~\u3002\u4e8e\u662f\uff0c\u5b83\u5c31\u662f\u5728\u57fa\u73af\u6811\u4e0a\u6c42**\u6700\u957f\u8def**\u7684\u95ee\u9898\u3002\n\n## Solution\n\u8003\u8651\u5230\u6bcf\u68f5\u57fa\u73af\u6811\u7684\u6700\u957f\u8def\u6c42\u6cd5\u90fd\u4e00\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6c42\u6700\u957f\u8def\u7684\u6a21\u5757\u5c01\u88c5\u8d77\u6765\uff0c\u6bcf\u6b21\u8c03\u7528\u5373\u53ef\u3002\n\n\u6700\u957f\u8def\u6709\u4e24\u79cd\u53ef\u80fd\uff1a\n1. \u5728\u57fa\u73af\u6811\u4e0a\u7684**\u67d0\u4e00\u68f5\u5b50\u6811\u5185**\u90e8\n2. \u67d0\u4e24\u68f5\u5b50\u6811\u7684\u9ad8\u5ea6\u4e4b\u548c\u52a0\u4e0a\u4e24\u4e2a\u6811\u6839\u5728\u73af\u4e0a**\u8f83\u957f\u7684**\u90a3\u6bb5\u8ddd\u79bb\u3002\n\n\u5b83\u4eec\u7684\u89e3\u6cd5\uff1a\n1. \u6b64\u65f6\u53ea\u9700\u5904\u7406\u6bcf\u4e00\u68f5\u6811\u5185\u7684\u6700\u957f\u8def\uff0c\u627e\u6700\u5927\u7684\u90a3\u4e2a\u3002\u8fd9\u662f\u5f88\u57fa\u7840\u7684\u6811\u5f62DP\uff0c\u5bf9\u4e8e\u4e00\u68f5\u6811\u4e2d\u7684\u6bcf\u4e00\u68f5\u5b50\u6811\uff0c\u6c42\u5b83\u5185\u90e8\u7684**\u6700\u957f\u8def**\u548c\u5230\u5b83\u6811\u6839\u7684**\u6700\u957f\u94fe\u548c\u6b21\u957f\u94fe**\uff0c\u5411\u4e0a\u8fd4\u56de\u8fd9\u4e24\u4e2a\u503c\u91cc**\u8f83\u5927**\u7684\u90a3\u4e2a\uff0c\u8fc7\u4e8e\u7b80\u5355\uff0c\u4e0d\u7ec6\u8bb2\u3002\n2. \u6811\u7684\u9ad8\u5ea6\u5c31\u662f**\u5230\u6811\u6839\u7684\u6700\u957f\u94fe**\u957f\u5ea6\uff0c\u5f88\u597d\u6c42\uff0c\u4e0d\u5c55\u5f00\u8bf4\u660e\u3002\u6c42\u5b8c\u6811\u9ad8\u4e4b\u540e\uff0c\u6574\u4e2a\u57fa\u73af\u6811\u771f\u6b63\u6709\u6548\u7684\u4fe1\u606f\u5c31\u662f**\u4e00\u4e2a\u73af**\u3002\u6211\u4eec\u9700\u8981\u627e\u5230$height[i]+height[j]+distance(i,j)$\u7684\u6700\u5927\u503c\uff0c\u5176\u4e2d$height$\u662f\u6811\u9ad8\uff0c$distance(i,j)$\u8868\u793a\u73af\u4e0a\u8282\u70b9$i~j$\u7684\u8f83\u957f\u7684\u90a3\u6761\u8def\u7684\u957f\u5ea6\u3002\u5f53\u6211\u4eec\u9884\u5904\u7406\u5b8c\u73af\u4e0a\u7684\u8282\u70b9\u4e0e\u6811\u9ad8\u548c\u8ddd\u79bb\u7684**\u524d\u7f00\u548c**\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u8fdb\u884c**\u73af\u5f62DP**\u3002\n\n\u73af\u5f62DP\u662f\u6c42\u51fa\u7b54\u6848\u7684\u6838\u5fc3\u6b65\u9aa4\uff1a\n\n- \u5c06\u73af\u4e0a\u7684\u8282\u70b9\u5c55\u5f00\u5f62\u6210\u94fe\uff0c**\u590d\u5236\u4e00\u904d\u63a5\u5728\u672b\u5c3e**\u6765\u907f\u514d\u679a\u4e3e\u65ad\u70b9\u3002\n- \u73b0\u5728\u5f97\u5230\u4e86\u4e00\u6761\u7531**\u6811\u7684\u9ad8\u5ea6\u503c**\u7ec4\u6210\u7684\u8282\u70b9\u6570\u4e3a**\u73af\u7684\u4e8c\u500d**\u7684\u94fe\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9$i$\uff0c\u6c42\u51fa$min\\{\\ dis[i-1]-dis[j-1]+height[i]+height[j]\\ \\},max(0,i-n)<j<i$\uff0c\u5176\u4e2d$dis$\u662f\u73af\u4e0a\u8ddd\u79bb\u7684\u524d\u7f00\u548c\uff0c$n$\u662f\u73af\u4e0a\u8282\u70b9\u6570\u3002\n- \u679a\u4e3e\u80af\u5b9a\u4f1a\u70b8\uff0c\u8003\u8651\u7528**\u5355\u8c03\u961f\u5217**\u7ef4\u62a4\u3002\u6839\u636e\u4e0a\u9762\u7684\u65b9\u7a0b\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u51b3\u7b56$j$\uff0c\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4$height[j]-dis[j-1]$\uff0c\u8fd9\u6837\u5c31\u80fd$O(n)$\u6c42\u89e3\u3002\n\n\u4ee3\u7801\u5b9e\u73b0\u7684\u65f6\u5019\u6ce8\u610f\u7ec6\u8282\uff0c\u6b64\u9898\u4f1a\u7206`int`\uff0c\u4e0a\u9762\u6240\u6709\u7684\u6b65\u9aa4\u90fd\u4e0d\u8981\u6f0f\uff08~~\u6211\u5c31\u662f\u5199\u7740\u5199\u7740\u5fd8\u4e86\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u7b2c\u4e00\u904d\u53ea\u62ff\u4e8685\u5206~~\uff09\u3002\u5efa\u8bae\u5206\u6210\u591a\u4e2a\u6a21\u5757\u5904\u7406\u3002\n\n\u8d34\u4e00\u4e0b\u4ee3\u7801\u5427\uff0c~~\u65f6\u95f4\u9650\u5236\u592a\u5bbd\u677e\u4e86~~\u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define Long long long\nusing namespace std;\nclass Node{\npublic:\n\tstruct Edge{\n\t\tNode*a,*b;\n\t\tLong dis;\n\t\tEdge(Node*a,Node*b,Long dis){\n\t\t\tthis->a=a; this->b=b;\n\t\t\tthis->dis=dis;\n\t\t}\n\t\tinline Node* operator[](Node*e){\n\t\t\treturn e==a?b:a;\n\t\t}\n\t};\n\tLong height,sec,res;\n\tbool traversable,top;\n\tlist<Edge*> nei;\n\tNode(){\n\t\ttraversable=true; res=0;\n\t\theight=0; sec=0; top=false;\n\t}\n\tinline void connect(Node*e,Long dis){\n\t\tEdge*tmp=new Edge(e,this,dis);\n\t\tthis->nei.push_back(tmp);\n\t\te->nei.push_back(tmp);\n\t}\n    //\u627e\u73af\n\tbool find(Edge*pre,vector<Node*>&ring,vector<Long>&dis){\n\t\tif(!traversable){\n\t\t\tring.push_back(this);\n\t\t\tdis.push_back(pre->dis);\n\t\t\treturn top=true;\n\t\t}\n\t\ttraversable=false;\n\t\tNode*tmp;\n\t\tfor(auto e:nei){\n\t\t\ttmp=(*e)[this];\n\t\t\tif(e==pre) continue;\n\t\t\tif(tmp->find(e,ring,dis)){\n\t\t\t\tif(*ring.begin()==this) return false;\n\t\t\t\tring.push_back(this);\n\t\t\t\tdis.push_back(pre->dis);\n\t\t\t\treturn top=true;\n\t\t\t}\n\t\t\tif(!ring.empty()) return false;\n\t\t}\n\t\treturn false;\n\t}\n    //\u8ba1\u7b97\u6811\u9ad8\u548c\u6811\u5185\u7684\u6700\u957f\u8def\n\tvoid initAsTree(Edge*pre){\n\t\tNode*tmp;\n\t\ttraversable=false;\n\t\tfor(auto e:nei){\n\t\t\ttmp=(*e)[this];\n\t\t\tif(tmp->top||e==pre) continue;\n\t\t\ttmp->initAsTree(e);\n\t\t\tif(height<e->dis+tmp->height){\n\t\t\t\tsec=height;\n\t\t\t\theight=e->dis+tmp->height;\n\t\t\t}else{\n\t\t\t\tsec=max(sec,e->dis+tmp->height);\n\t\t\t}\n\t\t\tres=max(res,tmp->res);\n\t\t}\n\t\tres=max(height+sec,res);\n\t}\n};\nNode**p;\nLong*seq,*dis;\n//\u73af\u5f62DP\nLong solve(vector<Node*>&r,vector<Long>&d){\n\tLong n=r.size(),res=0;\n\tfor(int i=0;i<n;i++){\n\t\tseq[i]=seq[i+n]=r[i]->height;\n\t\tdis[i]=dis[i+n]=d[i];\n\t\tres=max(res,r[i]->res);\n\t}\n\tfor(int i=1;i<(n<<1);i++) dis[i]+=dis[i-1];\n\tdeque<int> q; q.push_back(0);\n\tfor(int i=1;i<(n<<1);i++){\n\t\twhile(!q.empty()&&i-q.front()>=n) q.pop_front();\n\t\tres=max(res,seq[q.front()]+seq[i]+dis[i-1]-dis[q.front()-1]);\n\t\twhile(!q.empty()&&seq[i]-dis[i-1]>=\n\t\t\t  seq[q.back()]-dis[q.back()-1]) q.pop_back();\n\t\tq.push_back(i);\n\t}\n\treturn res;\n}\nint main(){\n\tint n; scanf(\"%d\",&n);\n\tp=new Node*[n+1];\n\tfor(int i=0;i<=n;i++) p[i]=new Node();\n\tfor(int i=1,e,dis;i<=n;i++){\n\t\tscanf(\"%d%d\",&e,&dis);\n\t\tp[i]->connect(p[e],dis);\n\t}\n\t\n\tseq=new Long[n<<1];\n\tdis=new Long[(n<<1)+1]; *(dis++)=0;\n\t\n\tLong res=0;\n    //\u5904\u7406\u6bcf\u4e2a\u57fa\u73af\u6811\n\tfor(int i=1;i<=n;i++){\n\t\tif(!p[i]->traversable) continue;\n\t\tvector<Node*> ring; vector<Long> dis;\n\t\tp[i]->find(NULL,ring,dis);\n\t\tfor(auto e:ring) e->initAsTree(NULL);\n\t\tres+=solve(ring,dis);\n\t}\n\tprintf(\"%lld\",res);\n\treturn 0;\n}\n```\n\n\u5982\u6709\u9519\u8bef\uff0c\u6b22\u8fce\u6307\u51fa\uff01",
        "postTime": 1606925319,
        "uid": 281310,
        "name": "Day4331Dream",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4381 \u3010[IOI2008]Island\u3011"
    },
    {
        "content": "\u8fd9\u9898\u7684\u5355\u8c03\u961f\u5217\u4f18\u5316\u4e0d\u662f\u5bf9\u6240\u6709\u57fa\u73af\u6811\u4e0a\u8def\u5f84\u6700\u503c\u95ee\u9898\u90fd\u9002\u7528\u7684\uff1b\n\n\u4f8b\u5982 [CF835F](https://www.luogu.com.cn/problem/CF835F)\uff0c\u76f4\u63a5\u5957\u7528\uff0c\u5c06\u6bcf\u6b21\u4ece\u5355\u8c03\u961f\u5217\u53d6\u51fa\u7684\u7b54\u6848\u7684\u53d6 max \u6539\u6210\u53d6 min\uff0c\u662f\u9519\u7684\uff0c\u56e0\u4e3a\u6bcf\u6b21\u4ece\u5355\u8c03\u961f\u5217\u53d6\u51fa\u7684\u7b54\u6848\u5b9e\u9645\u4e0a**\u5e76\u4e0d\u662f\u5f53\u524d\u65ad\u73af\u65b9\u6848\u7684\u6811\u76f4\u5f84**\u3002\n\n\u9ad8\u8d5e\u8c8c\u4f3c\u90fd\u6ca1\u63d0\u5230\u8fd9\u70b9\uff0c\u4e8e\u662f\u5c31\u5199\u4e2a\u9898\u89e3\u8865\u5145\u4e0b\u4e86\n\n## \u89e3\u6790\n\n### \u627e\u73af\n\n\u7531\u4e8e\u6570\u636e\u7ed9\u51fa\u7684\u662f\u4e00\u4e2a\u68ee\u6797\uff0c\u56e0\u6b64\u7279\u5224\u90e8\u5206\u53ef\u80fd\u4f1a\u6bd4\u8f83\u591a\n\n\u8fd9\u91cc\u8bb2\u4e00\u4e2a\u6211\u505a\u65f6\u9047\u5230\u7684\u5751\u70b9\uff1a\n\n\u6709\u4e00\u4e2a\u60f3\u6cd5\u662f\u7528 `vis` \u6570\u7ec4\u8bb0\u5f55\u5df2 dfs \u7684\u70b9\uff0c\u5982\u679c dfs \u5230\u4e86\u5df2\u904d\u5386\u7684\u70b9\uff08\u4e14\u4e0d\u662f dfs \u6811\u7236\u4eb2\uff09\uff0c\u5c31\u4ee3\u8868\u627e\u5230\u4e86\u4e00\u4e2a\u73af\u3002\u6bcf\u6b21\u627e\u5230\u73af\u540e\u7acb\u5373\u7ed9\u6574\u4e2a\u73af\u67d3\u8272\u6807\u8bb0\uff0c\u4e0d\u505a\u5176\u4ed6\u7279\u6b8a\u5904\u7406\uff08\u4e5f\u4e0d\u6e05\u7a7a `vis`\uff09\u3002\u5728\u4e0b\u6b21 dfs \u65f6\u5982\u679c\u9047\u5230\u67d3\u8272\u7684\u70b9\uff0c\u5c31\u4ee3\u8868\u6b63\u5728\u904d\u5386\u4e00\u4e2a\u5df2\u7ecf\u627e\u5230\u73af\u7684\u8fde\u901a\u5b50\u56fe\uff0c\u76f4\u63a5\u8fd4\u56de\uff1b\u5426\u5219\u5c31\u68c0\u67e5\u8fd9\u4e2a\u70b9\u662f\u5426\u5df2\u904d\u5386\u8fc7\uff08\u68c0\u67e5 `vis` \u6570\u7ec4\uff09\uff0c\u63a5\u7740\u6309\u4e0a\u8ff0\u65b9\u5f0f\u5904\u7406\n\n\u4f46\u8fd9\u79cd\u65b9\u6cd5\u5e76\u4e0d\u80fd\u767e\u5206\u767e\u53d1\u73b0\u5f53\u524d\u8fde\u901a\u5b50\u56fe\u662f\u5df2\u7ecf\u627e\u5230\u73af\u7684\uff0c\u8fd8\u4f1a\u5224\u9519\u73af\uff0c\u8003\u8651\u8fd9\u6837\u7684\u60c5\u51b5\uff1a\n\n![findCircle](https://cdn.luogu.com.cn/upload/image_hosting/69x7sc3p.png)\n\n\u7a0b\u5e8f\u4f1a\u8ba4\u4e3a\u627e\u5230\u4e86\u4e00\u4e2a\u73af\uff0c\u4f46\u8fd9\u5b9e\u9645\u4e0a\u662f\u9519\u7684\n\n\u6b63\u786e\u7684\u65b9\u5f0f\u662f\u5728\u627e\u5230\u73af\u540e\u7ed9\u5f53\u524d\u6574\u4e2a\u8fde\u901a\u5b50\u56fe\u90fd\u6253\u4e0a\u6807\u8bb0\uff08\u53ef\u80fd\u8fd8\u9700\u8981\u4e00\u4e2a\u6570\u7ec4\uff09\uff0c\u4e4b\u540e\u4e0d\u518d\u904d\u5386\u6253\u4e0a\u8be5\u6807\u8bb0\u7684\u7ed3\u70b9\n\n### \u627e\u76f4\u5f84\n\n\uff08\u6216\u8005\u8bf4\u56fe\u4e2d\u6700\u957f\u8def\u5f84\uff0c\u4e00\u822c\u90fd\u662f\u8fd9\u4e48\u5b9a\u4e49\u7684X\uff09\n\n\u6211\u4eec\u5148\u5bf9\u73af\u4e0a \u201c\u6302\u7740\u201d \u7684\u6811\u90fd\u505a\u4e00\u6b21\u6811\u5185 dp\uff0c\u5e76\u7edf\u8ba1\u51fa\u6811\u5185\u7684\u6700\u957f\u8def\u5f84\uff0c\u63a5\u4e0b\u6765\u5c31\u53ea\u9700\u8003\u8651\u8fc7\u73af\u7684\u8def\u5f84\u662f\u5426\u53ef\u80fd\u6210\u4e3a\u76f4\u5f84\uff0c\u6700\u540e\u7ed9\u8fd9\u4e24\u4e2a\u8def\u5f84\u53d6\u4e2a max \u5c31\u53ef\u4ee5\u4e86\n\n\u5728\u505a\u6811 dp \u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u5df2\u7ecf\u5bf9\u73af\u4e0a\u6bcf\u4e00\u4e2a\u70b9\u5904\u7406\u51fa\u4e86\u5b83\u53ea\u5411\u5b50\u6811\u8d70\u7684\u6700\u957f\u8def\u5f84\uff0c\u8bb0\u4e3a $f(u)$\n\n\u4e00\u4e2a\u8def\u5f84\u4ece\u67d0\u4e2a\u5b50\u6811\u8fdb\u5165\u73af\uff0c\u5b83\u53ef\u80fd\u987a\u65f6\u9488\u8d70\u73af\uff0c\u4e5f\u53ef\u80fd\u9006\u65f6\u9488\u8d70\u73af\u8fdb\u5165\u53e6\u5916\u4e00\u4e2a\u5b50\u6811\uff1b\u5982\u679c\u5b83\u662f\u987a\u65f6\u9488\u8d70\u73af\uff0c\u5176\u5b9e\u4e5f\u53ef\u4ee5\u770b\u505a\u4ece\u7ec8\u70b9\u5b50\u6811\u9006\u65f6\u9488\u8d70\u8fc7\u6765\u3002\u56e0\u6b64\u6211\u4eec\u89c4\u5b9a\u53ea\u80fd\u5f80\u4e00\u4e2a\u65b9\u5411\u8d70\u73af\n\n\u6211\u4eec\u968f\u4fbf\u8bbe\u73af\u4e0a\u4e00\u4e2a\u7ed3\u70b9\u4e3a\u8d77\u70b9\uff0c\u5e76\u4ece\u5b83\u5f00\u59cb\u6309\u89c4\u5b9a\u65b9\u5411\u4e0d\u91cd\u590d\u904d\u5386\u73af\u4e0a\u7ed3\u70b9\uff0c\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u5e8f\u5217 $\\{u_0, \\cdots, u_{k-1}\\}$\uff0c\u8bbe\u5e8f\u5217\u4ece $0$ \u5f00\u59cb\uff0c\u5176\u4e2d $k$ \u4e3a\u73af\u4e0a\u7ed3\u70b9\u4e2a\u6570\u3002\u5bf9\u4e8e\u4e00\u6761\u8def\u5f84\uff0c\u5b83\u6709\u53ef\u80fd\u53ea\u7ecf\u8fc7\u8fd9\u5e8f\u5217\u4e0a**\u8fde\u7eed**\u7684\u4e00\u6bb5\uff0c\u4e5f\u6709\u53ef\u80fd\u8de8\u8fc7 $u_{k-1}$\uff0c\u53d8\u6210\u4e86\u4e24\u6bb5\uff0c\u4f46\u5b83\u6700\u591a\u904d\u5386 $k$ \u4e2a\u7ed3\u70b9\uff1b\u5982\u679c\u6211\u4eec\u5c06\u8be5\u5e8f\u5217\u590d\u5236\u4e00\u904d\uff0c\u5f97\u5230\u5e8f\u5217 $\\{u_0, \\cdots, u_{k-1}, u_0, \\cdots, u_{k-1}\\}$\uff0c\u91cd\u6807\u53f7\u4e3a $\\{u_0, \\cdots, u_{k-1}, u_k, \\cdots, u_{2k-1}\\}$\uff0c\u5e76\u4e14\u89c4\u5b9a\u8def\u5f84\u53ea\u4ece\u5de6\u534a\u6bb5\u533a\u95f4\u5185\u7684\u5143\u7d20\u51fa\u53d1\uff0c\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u4efb\u4f55\u53ef\u80fd\u7684\u73af\u4e0a\u8def\u5f84\u90fd\u5728\u8fd9\u5e8f\u5217\u4e2d\u662f**\u8fde\u7eed\u7684\u4e00\u6bb5**\u3002\u540c\u65f6\u6211\u4eec\u8fd8\u8981\u4fdd\u8bc1\u8def\u5f84\u7684\u957f\u5ea6\u81f3\u591a\u4e3a $k$\uff1b\u8fd9\u5b9e\u9645\u4e0a\u5c31\u50cf\u4e00\u4e2a\u5bbd\u4e3a $k$ \u6ed1\u52a8\u7a97\u53e3\u5728\u5e8f\u5217\u4e2d\u6ed1\u52a8\n\n\u518d\u6765\u8003\u8651\u4e00\u6bb5\u8def\u5f84\u7684\u8d21\u732e\uff0c\u5176\u663e\u7136\u4e3a $f(u)+f(v)+dist(u, v)$\uff0c\u5176\u4e2d $u$ \u662f\u73af\u4e0a\u8d77\u70b9\uff0c$v$ \u662f\u73af\u4e0a\u7ec8\u70b9\uff0c$dist(u, v)$ \u6307\u4ece $u$ \u5230 $v$ \u5728\u73af\u4e0a\u6309\u89c4\u5b9a\u65b9\u5411\u904d\u5386\u7684\u8def\u5f84\u957f\n\n\u800c $dist(u, v)$ \u5176\u5b9e\u53ef\u4ee5\u7528\u524d\u7f00\u548c\u7ef4\u62a4\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u7ed9 $u_0$ \u8d4b\u6743\u503c $0$\uff0c\u5bf9\u4e8e\u5176\u4f59\u7684 $u_i$ \u8d4b\u6743\u503c $w(u_{i\\mod k}, u_{(i-1)\\mod k})$\uff0c\u5176\u4e2d $w(u, v)$ \u6307\u56fe\u4e2d\u5bf9\u5e94\u8fb9\u7684\u6743\u503c\uff1b\u6211\u4eec\u7ed9\u8fd9\u4e2a\u503c\u505a\u4e00\u4e2a\u524d\u7f00\u548c\uff0c\u8bb0\u4e3a $s(u)$\uff0c\u4e0a\u9762\u7684\u8d21\u732e\u5f0f\u5b50\u5c31\u53ef\u4ee5\u5199\u4e3a $f(u)-s(u)+f(v)+s(v)$\uff0c\u6211\u4eec\u8981**\u4ee4\u5b83\u6700\u5927**\n\n\uff08**\u63a5\u4e0b\u6765\u662f\u5f00\u5934\u63d0\u5230\u7684\u90e8\u5206\u4e86**\uff09\n\n\u6ed1\u52a8\u7a97\u53e3\u52a0\u6700\u503c\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u5355\u8c03\u961f\u5217\uff0c\u4e8e\u662f\u5c31\u6709\u4e00\u79cd\u5206\u522b\u7ef4\u62a4 $f(i)-s(i)$ \u548c $f(i)+s(i)$ \u6700\u503c\u7684\u601d\u60f3\u3002\u4f46\u6ce8\u610f\u8fd9\u4e24\u4e2a\u6700\u503c\u53ef\u80fd\u53d6\u540c\u6837\u7684 $i$\uff08\u5982\u679c $f(i)$ \u8db3\u591f\u5927\uff09\uff0c\u8fd9\u65f6\u5c31\u8981\u6c42\u7ef4\u62a4\u6ed1\u52a8\u7a97\u53e3\u7ef4\u62a4\u6b21\u5927\u503c\uff0c\u4f46**\u8fd9\u662f\u5355\u8c03\u961f\u5217\u4e0d\u53ef\u505a\u7684**\uff08\u4f8b\u5982\u50cf\u5f00\u5934\u63d0\u5230\u90a3\u9898\uff0c\u5f3a\u5236\u8981\u6c42\u6c42\u51fa\u6bcf\u6b21\u65ad\u8fb9\u540e\u7684\u6811\u76f4\u5f84\uff0c\u4e0d\u80fd\u7528\u5355\u8c03\u961f\u5217\uff09\n\n\u4e8e\u662f\u6211\u4eec\u518d\u6362\u4e00\u79cd\u601d\u8def\uff0c\u8003\u8651\u679a\u4e3e\u5176\u4e2d\u4e00\u4e2a\u5143\u7d20\uff0c\u800c\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u53e6\u4e00\u4e2a\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u6211\u4eec\u4ece $i=k-1$ \u5f00\u59cb\u679a\u4e3e\uff0c\u6bcf\u6b21\u679a\u4e3e\u5f53\u524d\u7ed3\u70b9 $u_i$ \u7684 $f(u_i)+s(u_i)$\uff0c\u5e76\u7528\u5355\u8c03\u961f\u5217\u7ef4\u62a4 $[u_{i-(k-1)}, u_{i-1}]$ \u533a\u95f4\u4e2d\u6700\u5927\u7684 $f(u_j)-s(u_j)$\uff08\u5176\u5b9e\u4e5f\u53ef\u53cd\u8fc7\u6765\u7ef4\u62a4\uff09\uff0c\u5e76\u7ec4\u5408\u8fd9\u4e24\u4e2a\u503c\uff0c\u5bf9\u6bcf\u6b21\u679a\u4e3e\u5f97\u5230\u7684\u503c\u53d6 max \u5c31\u662f\u7b54\u6848\n\n\u8fd9\u79cd\u65b9\u5f0f\u6700\u540e\u5f97\u51fa\u7684\u7b54\u6848\u662f\u6b63\u786e\u7684\u3002\u8003\u8651\u7b54\u6848\u8def\u5f84\uff0c\u5982\u4e0b\u56fe\uff1a\n\n![proof](https://cdn.luogu.com.cn/upload/image_hosting/uyflqcdn.png)\n\n\u5b83\u4e00\u5b9a\u4f1a\u5728\u6211\u4eec\u904d\u5386\u5230\u56fe\u4e2d\u6807\u53f7 $A$ \u7684\u7ea2\u8272\u7ed3\u70b9\u65f6\u88ab\u7edf\u8ba1\n\n\u4f46\u6ce8\u610f\u5f53\u6211\u4eec\u679a\u4e3e $i$ \u65f6\uff0c\u4ece\u5355\u8c03\u961f\u5217\u53d6\u51fa\u7684\u503c\u4e0d\u4fdd\u8bc1\u662f\u5bf9\u5e94\u65ad $(u_{i-k}, u_{i-(k-1)})$ \u8fb9\u7684\u6811\u76f4\u5f84\u3002\u505a\u53cd\u4f8b\u5e94\u8be5\u5f88\u7b80\u5355\uff0c\u53ea\u8981\u4f7f\u8fd9\u79cd\u65b9\u6848\u7684\u76f4\u5f84**\u4e0d\u7ecf\u8fc7** $u_i$ \u5373\u53ef\n\n\uff08\u5982\u679c\u6709\u4ec0\u4e48\u5947\u5947\u602a\u602a\u7684\u5355\u8c03\u961f\u5217\u65b9\u6cd5\u6b22\u8fce\u6253\u8138qwq\u3002\u4e0d\u8fc7\u8fd9\u4e2a\u95ee\u9898\uff08\u6ed1\u52a8\u7a97\u53e3\u7ef4\u62a4\u6b21\u5927\u503c\uff09\u5176\u5b9e\u4e5f\u6709 $O(n)$ \u505a\u6cd5\uff0c\u53ef\u4ee5\u89c1\u8fd9\u4e2a [\u8ba8\u8bba](https://www.luogu.com.cn/discuss/show/255658?page=1)\u3002\u53e6\u5916\u5bf9\u4e8e\u57fa\u73af\u6811\uff0c\u6c42\u6bcf\u6b21\u65ad\u8fb9\u7684\u6811\u76f4\u5f84\uff0c\u5176\u5b9e\u8fd8\u6709\u66f4\u7b80\u5355\u7684\u65b9\u6cd5\uff0c\u5177\u4f53\u53ef\u89c1\u5f00\u5934\u90a3\u9053\u9898\u7684\u9898\u89e3\u533a\u4ee5\u53ca\u5b98\u65b9\u9898\u89e3\uff09\n\n## CODE\n\n\u4ee3\u7801\u91cc\u7684\u5355\u8c03\u961f\u5217\u90e8\u5206\u5e76\u6ca1\u6709\u4ece $u_{k-1}$ \u5f00\u59cb\u7edf\u8ba1\u7b54\u6848\uff1b\u4f46\u56e0\u4e3a\u7f3a\u7701\u503c\u90fd\u662f $0$\uff0c\u6240\u4ee5\u8fd9\u6837\u4ece\u5355\u8c03\u961f\u5217\u53d6\u51fa\u7684\u503c\u90fd\u662f\u504f\u5c0f\u7684\uff08\u7a97\u53e3\u5927\u5c0f\u8fd8\u4e0d\u8db3 $k-1$\uff09\uff0c\u4e0d\u4f1a\u5f71\u54cd\u6700\u7ec8\u7b54\u6848\n\n```cpp\n#include <cstdio>\n#include <iostream>\n//#pragma GCC optimize(\"O3\")\n//#pragma GCC optimize(\"Ofast\", \"-funroll-loops\", \"-fdelete-null-pointer-checks\")\n//#pragma GCC target(\"ssse3\", \"sse3\", \"sse2\", \"sse\", \"avx2\", \"avx\")\n#define ll long long\nusing std::max;\n\nconst int MAXN =1e6+50;\n\n/*------------------------------Map------------------------------*/\n\nint n, m;\nint first[MAXN], tote;\nstruct edge{\n\tint net, to, w;\n}e[MAXN<<1];\n\ninline void addedge(int u, int v, int w){\n\t++tote;\n\te[tote].to =v, e[tote].w =w, e[tote].net =first[u];\n\tfirst[u] =tote;\n\t++tote;\n\te[tote].to =u, e[tote].w =w, e[tote].net =first[v];\n\tfirst[v] =tote;\n}\n\n/*------------------------------Circle------------------------------*/\n\nint circle[MAXN], lenc[MAXN]/*\u73af\u957f\u5ea6*/, cntc;\nint pre[MAXN], net[MAXN], evalpre[MAXN], evalnet[MAXN];\nbool vis[MAXN], vis2[MAXN], color[MAXN];\nint stk[MAXN], top;\n\nint predfs(int u, int eid/*\u5904\u7406\u91cd\u8fb9\u73af ( \u4e24\u4e2a\u7ed3\u70b9\u7684\u73af )*/){\n\tif((eid&1) == 0)\n\t\t--eid;\n\telse\n\t\t++eid;\n\tvis[u] =1;\n\tstk[top++] =u;\n\tfor(int l =first[u]; l; l =e[l].net)\n\t\tif(l != eid){\n\t\t\tnet[u] =e[l].to;\n\t\t\tevalnet[u] =e[l].w;\n\t\t\tif(vis[e[l].to])\n\t\t\t\treturn e[l].to;\n\t\t\telse{\n\t\t\t\tint ret =predfs(e[l].to, l);\n\t\t\t\tif(ret != 0)\n\t\t\t\t\treturn ret;\n\t\t\t}\n\t\t}\n\t--top;\n\treturn 0;\n}\n\n/*\u6807\u8bb0\u8fd9\u4e00\u6574\u4e2a\u8fde\u901a\u5b50\u56fe*/\nvoid markdfs(int u){\n\tvis2[u] =1;\n\tfor(int l =first[u]; l; l =e[l].net)\n\t\tif(!vis2[e[l].to])\n\t\t\tmarkdfs(e[l].to);\n}\n\nvoid getCircle(){\n\tfor(int i =1; i <= n; ++i){\n\t\tif(vis2[i])\n\t\t\tcontinue;\n\t\ttop =0;\n\t\tint cir =predfs(i, 0);\n\t\tmarkdfs(cir);\n\t\tcircle[cntc] =cir;\n\t\tlenc[cntc] =1;\n\t\t/*\u63a5\u73af\u5e76\u7ed9\u73af\u67d3\u8272*/\n\t\tpre[cir] =stk[top-1];\n\t\tevalpre[cir] =evalnet[stk[top-1]];\n\t\tcolor[cir] =1;\n\t\twhile(stk[top-1] != cir){\n\t\t\t++lenc[cntc];\n\t\t\tpre[stk[top-1]] =stk[top-2];\n\t\t\tevalpre[stk[top-1]] =evalnet[stk[top-2]];\n\t\t\tcolor[stk[top-1]] =1;\n\t\t\t--top;\n\t\t}\n\t\t++cntc;\n\t}\n}\n\n/*------------------------------Dfs------------------------------*/\n\nll dp1[MAXN], dp2[MAXN];/*\u4ece u \u5411\u5b50\u6811\u8d70\u6700\u5927\u3001\u6b21\u5927\u7684\u8def\u5f84*/\nll Ans1;\n\nvoid dfs1(int u, int fa){\n\tfor(int l =first[u]; l; l =e[l].net)\n\t\tif(e[l].to != fa && !color[e[l].to]/*\u907f\u514d\u8d70\u73af*/){\n\t\t\tdfs1(e[l].to, u);\n\t\t\tif(e[l].w+dp1[e[l].to] > dp1[u]){\n\t\t\t\tdp2[u] =dp1[u];\n\t\t\t\tdp1[u] =e[l].w+dp1[e[l].to];\n\t\t\t}\n\t\t\telse if(e[l].w+dp1[e[l].to] > dp2[u])\n\t\t\t\tdp2[u] =e[l].w+dp1[e[l].to];\n\t\t}\n\tAns1 =max(Ans1, dp1[u]+dp2[u]);\n}\n\n/*------------------------------\u5355\u8c03\u961f\u5217------------------------------*/\n\nll val[MAXN<<1];\nint t[MAXN<<1]/*\u5165\u961f\u65f6\u95f4*/, head, tail, Len;\n\ninline void push(ll va, int ti){\n\twhile(tail > head && va >= val[tail-1])\n\t\t--tail;\n\tval[tail] =va;\n\tt[tail++] =ti;\n\twhile(tail > head && ti-t[head] >= Len-1)\n\t\t++head;/*\u6846\u9009\u533a\u95f4\u957f\u5ea6\u4e3a Len-1*/\n}\n\n/*------------------------------Main------------------------------*/\n\ninline int read(){\n\tint x =0; char c =getchar();\n\twhile(c < '0' || c > '9') c =getchar();\n\twhile(c >= '0' && c <= '9') x = (x<<3) + (x<<1) + (48^c), c =getchar();\n\treturn x;\n}\n\nint main(){\n\tn =read();\n\tfor(int i =1; i <= n; ++i){\n\t\tint v =read(), w =read();\n\t\taddedge(i, v ,w);\n\t}\n\tgetCircle();\n\tll ans =0;\n\tfor(int k =0; k < cntc; ++k){\n\t\tAns1 =0;\n\t\tfor(int u =circle[k], flg =0; u != circle[k] || flg == 0; u =net[u]){\n\t\t\tif(u == circle[k])\n\t\t\t\tflg =1;\n\t\t\tdfs1(u, 0);\n\t\t}\n\t\thead =tail =0, val[0] =0;\n\t\tLen =lenc[k];\n\t\tll Ans2 =0, sum =-evalpre[circle[k]];\n\t\t/*\u8d70\u4e24\u5708\uff0c\u5176\u5b9e\u7b2c\u4e00\u5708\u53ef\u4ee5\u4e0d\u7edf\u8ba1\u7b54\u6848\uff0c\u4e0d\u8fc7\u5373\u4f7f\u7edf\u8ba1\u4e86\u4e5f\u65e0\u59a8\uff0c\u4e0d\u662f\u6700\u4f18*/\n\t\tfor(int u =circle[k], flg =0, i =0; u != circle[k] || flg < 2; u =net[u], ++i){\n\t\t\tif(u == circle[k])\n\t\t\t\t++flg;\n\t\t\tsum +=evalpre[u];\n\t\t\tAns2 =max(Ans2, dp1[u]+sum+val[head]);\n\t\t\tpush(dp1[u]-sum, i);\n\t\t}\n\t\tans +=max(Ans1, Ans2);\n\t}\n\tprintf(\"%lld\", ans);\n}\n```",
        "postTime": 1599645418,
        "uid": 105254,
        "name": "Piwry",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4381 \u3010[IOI2008]Island\u3011"
    },
    {
        "content": "\u9898\u610f\uff1a\n\n\u7ed9\u5b9a\u4e00\u4e2a\u7531 $n$ \u4e2a\u70b9\u7ec4\u6210\u7684\u68ee\u6797\uff0c\u6bcf\u4e2a\u70b9\u90fd\u5206\u522b\u6709\u4e00\u6761\u901a\u5f80\u5176\u4ed6\u70b9\u7684\u8fb9\uff08\u5176\u5b9e\u662f\u65e0\u5411\u8fb9\uff09\uff0c\u73b0\u5728\u4f60\u9700\u8981\u6c42\u51fa\u6bcf\u4e2a\u8fde\u901a\u5757\u7684\u76f4\u5f84\u4e4b\u548c\u3002\n\n$n \\leq 10^6$\n\n---\n\u7b80\u5355\u5206\u6790\u4e00\u4e0b\uff0c\u5176\u5b9e\u5c31\u662f\u5728\u4e00\u4e2a\u57fa\u73af\u6811\u68ee\u6797\u4e0a\u7684\u6bcf\u68f5\u57fa\u73af\u6811\u4e0a\u5bfb\u627e\u76f4\u5f84\u957f\u5ea6\u3002\n\n\u73b0\u5728\u8003\u8651\u67d0\u4e00\u68f5\u57fa\u73af\u6811\u600e\u4e48\u5bfb\u627e\u76f4\u5f84\u3002\u548c\u6811\u4e0d\u540c\u7684\u4e00\u70b9\u662f\u6709\u4e00\u4e2a\u73af\uff0c\u8c8c\u4f3c\u4e0d\u592a\u597d\u641e\u3002\n\n\u8fd9\u91cc\u4e0d\u59a8\u4ece\u73af\u4e0a\u5165\u624b\uff0c\u8003\u8651\u4e00\u6761\u7ecf\u8fc7\u4e24\u9897\u73af\u8fde\u63a5\u7684\u6811\u548c\u4e00\u6bb5\u73af\u4e0a\u8fb9\u7684\u8def\u5f84\u3002\u90a3\u4e48\u5047\u8bbe\u76ee\u524d\u9009\u62e9\u7684\u4e24\u9897\u6811\u6240\u5728\u73af\u7684\u70b9\u4e3a $x,y$ \uff0c\u5b9a\u4e49 $dis_a$ \u4e3a $a$ \u70b9\u6240\u5728\u6811\u7684\u6700\u957f\u94fe\uff0c$len_{a,b}$ \u4e3a $a,b$ \u5728\u73af\u4e0a\u7684\u6700\u957f\u8def\u5f84\u957f\u5ea6\u3002\u90a3\u4e48\u8fd9\u6761\u8def\u5f84\u957f\u5ea6\u5c31\u662f $dis_x+dis_y+len_{x,y}$ \u3002\n\n\u8fd9\u4e2a\u5f62\u5f0f\u5f88\u4f18\u7f8e\uff0c\u6211\u4eec\u5c31\u4ece\u8fd9\u4e2a\u5f0f\u5b50\u4e0b\u624b\u3002\u9996\u5148\u8003\u8651\u628a $len$ \u62c6\u6389\uff0c\u56e0\u4e3a\u6d89\u53ca\u5230\u4e00\u4e2a\u6700\u5927\u503c\u3002\u90a3\u4e48\u6211\u4eec\u5148\u628a\u94fe\u590d\u5236\u4e00\u904d\u518d\u65ad\u5f00\uff0c\u8bbe $L_x$ \u4e3a\u70b9 $x$ \u5230\u65ad\u5f00\u70b9\u7684\u957f\u5ea6\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u76f4\u63a5\u4ee4 $len_{x,y} = L_y-L_x$ \u3002\n\n\u518d\u628a\u5f0f\u5b50\u5206\u6210\u4e24\u5757\uff1a $(dis_x-L_x)+(dis_y+L_y)$ \uff0c\u4e8e\u662f\u53ea\u9700\u8981\u5bf9\u6bcf\u4e2a\u70b9\u8bb0\u5f55\u5b83\u7684 $dis_x - L_x$ \uff0c\u53d6\u6700\u5927\u503c\uff0c\u7136\u540e\u5bf9\u6bcf\u4e2a\u70b9\u8bb0\u5f55\u7b54\u6848\u5373\u53ef\u3002\n\n\u90a3\u4e48\u8fd9\u6837\u505a\u590d\u6742\u5ea6\u662f $O(n)$ \u7684\uff0c\u5341\u5206\u4f18\u79c0\u3002\n\n\u56de\u987e\u4e00\u4e0b\uff0c\u7834\u9898\u70b9\u5728\u4e8e\u628a\u590d\u6742\u7684\u8ba1\u7b97 ($\\max$) \u5206\u6210\u7b80\u5355\u7684 (\u56db\u5219\u8fd0\u7b97)\uff0c\u518d\u628a\u96be\u4ee5\u76f4\u63a5\u5904\u7406\u7684\u5f0f\u5b50\u5c3d\u91cf\u5206\u6210\u51e0\u5757\u4e92\u4e0d\u5e72\u6270\u7684\u5bb9\u6613\u5904\u7406\u7684\u5c0f\u5757\uff0c\u5206\u522b\u8ba1\u7b97\u7b54\u6848\u65f6\u5c31\u5f88\u7b80\u5355\u4e86\u3002",
        "postTime": 1597801658,
        "uid": 35891,
        "name": "huangzirui",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4381 \u3010[IOI2008]Island\u3011"
    },
    {
        "content": "\u8fd9\u4e2a\u9898\u6709\u70b9\u5751,\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e2a\u601d\u8def.\n\n\u8fd9\u91cc\u5176\u5b9e\u53ef\u4ee5\u7528tarjan\u5224\u4e00\u4e0b\u8054\u901a\u5757\u7684\u4e2a\u6570\u4ee5\u53ca\u5176\u4e2d\u5305\u542b\u7684\u5143\u7d20(\u6ed1\u7a3d),\u7136\u540e\u8bb0\u5f55\u6bcf\u4e2a\u5757\u7684\u4ee3\u8868\u5143\u7d20.\n\u653e\u4e00\u4e0btarjan\u4ee3\u7801,\u5927\u5bb6\u53ef\u4ee5\u53c2\u8003\u4e00\u4e0b.\n\n```\nvoid tarjan(int x)\n{\n\tlow[x] = dfn[x] = ++cnt;\n\tstr[++top] = x;\n\tvis[x] = 1;\n\tfor(int k = lst[x];k;k = a[k].nxt)\n\t{\n\t\tint y = a[k].r;\n\t\tif(!dfn[y])\n\t\t{\n\t\t\ttarjan(y);\n\t\t\tlow[x] = min(low[x],low[y]);\n\t\t}\n\t\telse if(vis[y])\n\t\t{\n\t\t\tlow[x] = min(low[x],dfn[y]);\n\t\t}\n\t}\n\tif(low[x] == dfn[x])\n\t{\n\t\tans++;\n\t\tint v;\n\t\tda[ans] = x;\n\t\tdo\n\t\t{\n\t\t\tnum[ans]++;\n\t\t\tvis[str[top]] = 0;\n\t\t\tv = str[top--];\n\t\t\tcol[v] = ans;\n\t\t}\n\t\twhile(x != v);\n\t}\n}\n```\n\n\u5224\u5b8c\u4e4b\u540e,\u5927\u5bb6\u6709\u6ca1\u6709\u53d1\u73b0\u548cNOIP2018D2T1\u6709\u4e00\u70b9\u50cf,\u90fd\u662f\u5224\u73af,\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u641e\u4e00\u4e2adfs,\u7136\u540e\u7ef4\u62a4\u4e00\u4e2a\u6808,\u6bcf\u6b21\u538b\u5165,\u4f46\u662f\u7ed3\u675f\u7684\u65f6\u5019\u6709\u591a\u4f59\u5143\u7d20\u600e\u4e48\u529e\u5462?\u6211\u4eec\u4ece\u961f\u9996\u5411\u540e\u627e,\u627e\u5230\u6210\u73af\u7684\u4f4d\u7f6e\u5c31\u884c\u4e86.\n\n\u627e\u73af\u4ee3\u7801:\n\n```\n\nvoid cir(int x,int fa,int lenth)\n{\n\t// cout<<x<<\" \"<<fa<<endl;\n\tif(vis[x] != 0)\n\t{\n\t\t// cout<<x<<\" \"<<fa<<\" \"<<lenth<<endl;\n\t\tf1 = x;f2 = fa;\n\t\tlst_len = lenth;\n\t\treturn;\n\t}\n\tstr[++top] = x;\n\tleng[top] = lenth;\n\tvis[x] = 1;\n\t/*duke(i,1,top)\n\t{\n\t\tprintf(\"%d \",str[i]);\n\t}\n\tenter;*/\n\tint mx = 0,rem = 0;\n\tfor(int k = lst[x];k;k = a[k].nxt)\n\t{\n\t\tint y = a[k].r;\n\t\tif(y == fa)\n\t\t{\n\t\t\trem = fa;\n\t\t\tmx = max(mx,a[k].w);\n\t\t\tfa = 0;\n\t\t\tcontinue;\n\t\t}\n\t\tif(rem != 0 && y == rem)\n\t\t{\n\t\t\t// cout<<mx<<\" \"<<a[k].w<<endl;\n\t\t\ta[k].w = max(a[k].w,mx);\n\t\t\tcir(y,x,max(a[k].w,mx));\n\t\t}\n\t\tcir(y,x,a[k].w);\n\t\tif(f1 != 0 && f2 != 0) return;\n\t}\n\ttop--; vis[x] = 0;\n}\nint dp(int x)\n{\n\tf1 = f2 = 0;\n\tclean(str);top = 0;\n\tcir(x,0,0);\n\t/*duke(i,1,top)\n\t{\n\t\tprintf(\"%d \",str[i]);\n\t}\n\tputs(\"\");*/\n\tduke(i,1,top)\n\t{\n\t\tif(str[tail] != f1 && str[tail] != f2)\n\t\t{\n\t\t\ttail++;\n\t\t}\n\t}\n}\n\n```\n\n\u5269\u4e0b\u597d\u50cf\u5c31\u662f\u57fa\u672c\u64cd\u4f5c,\u7ef4\u62a4\u5355\u8c03\u961f\u5217\u6765\u4f18\u5316\u590d\u6742\u5ea6,\u6bcf\u4e2a\u5947\u73af\u6811\u4e0a\u627e\u6700\u5927\u7684\u957f\u5ea6,2\u79cd\u60c5\u51b5,\u53ef\u4ee5\u9009\u4e24\u4e2a\u70b9\u548c\u4e2d\u95f4\u7684\u8def\u5f84,\u4e5f\u53ef\u4ee5\u5c31\u662f\u81ea\u5df1\u52a0\u4e0a\u73af\u7684\u603b\u957f\u5ea6.\n\n\u603b\u7684\u6765\u8bf4\u8fd9\u4e2a\u9898\u662f\u4e2a\u597d\u9898...",
        "postTime": 1544405922,
        "uid": 55877,
        "name": "DukeLv",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4381 \u3010[IOI2008]Island\u3011"
    }
]