[
    {
        "content": "\u5c31 ZJOI D1 T3 \u6765\u8a00\uff0c\u8fd9\u9898\u4e8b\u5b9e\u4e0a\u5e76\u4e0d\u80fd\u8bf4\u5f88\u96be\uff08\u81f3\u5c11\u6211\u89c9\u5f97\u8054\u5408\u7701\u9009 D1 T3 \u8981\u6bd4\u8fd9\u9898\u96be\uff09\u3002\n\n\u672c\u9898\u4e5f\u5e76\u6ca1\u6709\u8fc7\u4e8e\u96be\u5199\uff0c\u4f46\u662f\u611f\u89c9\u95ee\u9898\u4e3b\u8981\u8fd8\u662f\u5728\u4e8e\u5927\u6837\u4f8b\u53ea\u6709\u4ed9\u4eba\u638c\u3002\n\nVP \u7684\u65f6\u5019\u6210\u529f\u7801\u5b8c\u4e86\u6b63\u89e3\uff0c\u4f46\u662f\u8d5b\u540e\u4e00\u6d4b\u53d1\u73b0\u53ea\u6709\u56db\u5341\u5206\u3002\u542c\u8bf4\u6709\u4e0d\u6b62\u4e00\u4e2a\u4eba\u548c\u6211\u4e00\u6837\u4e00\u767e\u6302\u6210\u56db\u5341\u4e86\u3002\n\n\u819c\u62dc\u8d5b\u65f6\u5199\u51fa\u6765\u7684\u795e\u4ed9\u3002 \n\n------\n\n\u8fd9\u4e2a\u7b80\u5355\u8def\u5f84\u6c42\u548c\uff0c\u60f3\u60f3\u770b\u53ef\u80fd\u662f\u4e2a NP Hard \u95ee\u9898\u3002\n\n\u600e\u4e48\u529e\u5462\uff1f\u9898\u76ee\u4e2d\u8bf4 **\u521d\u59cb\u4fdd\u8bc1\u56fe\u4e0a\u4efb\u610f\u4e24\u4e2a\u7b80\u5355\u73af\u7684\u8fb9\u6743\u548c\u76f8\u7b49\uff0c\u7136\u540e\u4fee\u6539\u4e86\u8fb9\u6743**\u3002\n\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u672c\u9898\u7684\u56fe\u6ee1\u8db3 **\u5b58\u5728\u4e00\u79cd\u91cd\u65b0\u8d4b\u503c\u7684\u65b9\u6848\uff0c\u4f7f\u5f97\u56fe\u4e0a\u4efb\u610f\u4e24\u4e2a\u7b80\u5355\u73af\u7684\u8fb9\u6743\u548c\u76f8\u7b49**\u3002\n\n\u8c01\u90fd\u80fd\u770b\u51fa\u6765\u8fd9\u4e2a\u6027\u8d28\u662f\u89e3\u51b3\u672c\u9898\u7684\u5173\u952e\u3002\u6211\u4eec\u6765\u5206\u6790\u4e00\u4e0b\u5427\uff01\n\n\u9996\u5148\uff0c\u672c\u9898\u663e\u7136\u662f\u5173\u4e8e\u70b9\u53cc\u72ec\u7acb\u7684\uff1a\u5982\u679c\u6bcf\u4e2a\u70b9\u53cc\u90fd\u5b58\u5728\u4e00\u79cd\u8d4b\u503c\u7684\u65b9\u6848\uff0c\u5219\u663e\u7136\u6574\u5f20\u56fe\u4ea6\u5b58\u5728\u4e00\u79cd\u8d4b\u503c\u65b9\u6848\u3002\n\n\u7136\u540e\u6211\u4eec\u624b\u73a9\u51e0\u4e2a\u6bd4\u8f83 simple \u7684\u70b9\u53cc\u5427\u3002**\u4ee5\u4e0b\u7684\u70b9\u53cc\u4e2d\u6240\u6709\u8fb9\u90fd\u53ef\u4ee5\u662f\u4e00\u5806\u70b9\u8fde\u6210\u7684\u94fe\uff0c\u8fd9\u6837\u4e24\u4e2a\u70b9\u95f4\u5c31\u53ef\u4ee5\u51fa\u73b0\u91cd\u8fb9\uff08\u56e0\u4e3a\u5176\u5bf9\u5e94\u4e86\u4e0d\u540c\u7684\u94fe\uff09**\u3002\n\n- \u70b9\u53cc\u662f\u73af\u3002\u663e\u7136\u5b58\u5728\u8d4b\u503c\u65b9\u6848\u3002\n\n- \u70b9\u53cc\u662f\u73af\u4e0a\u8fde\u4e00\u6761\u94fe\u3002\n\n    ```\n      ----w1----\n     /          \\\n    S-----w2-----T\n     \\          /\n      ----w3----\n    ```\n\n    \u5373\u8fd9\u6837\u7684\u4e1c\u897f\u3002\n\n    \u6211\u4eec\u53d1\u73b0\uff0c\u53ea\u9700\u8d4b\u503c\u4f7f\u5f97 $w_1=w_2=w_3$\uff0c\u8fd9\u4e2a\u60c5\u5f62\u5c31\u662f\u5408\u6cd5\u7684\uff1a\u4efb\u610f\u7b80\u5355\u73af\u90fd\u5305\u542b\u6070\u4e24\u6761\u94fe\uff0c\u5219\u663e\u7136\u5b83\u4eec\u7684\u6743\u503c\u90fd\u76f8\u7b49\u3002\n\n    \u4e0d\u4ec5\u5982\u6b64\uff0c\u5047\u5982\u70b9\u53cc\u7531\u4ee5 $S,T$ \u4e3a\u7aef\u70b9\u7684\u82e5\u5e72\u6761\u94fe\u6784\u6210\uff0c\u5219\u53ea\u9700\u4ee4\u6240\u6709\u94fe\u4e2d\u8fb9\u6743\u548c\u5168\u90fd\u76f8\u7b49\uff0c\u5219\u663e\u7136\u8fd9\u4e2a\u60c5\u5f62\u4ea6\u662f\u5408\u6cd5\u7684\u3002\n\n    \u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u4e1c\u897f\u795e\u4f3c **\u7ec6\u80de\u5206\u88c2\u4e2d\u671f\u65f6\uff0c\u7eba\u9524\u4f53\u548c\u7eba\u9524\u4e1d\u7684\u7ed3\u6784**\u3002\n\n    \u4e5f\u6709\u7684\u4eba\u628a\u5b83\u79f0\u4f5c **\u674f\u4ec1** \u6216\u8005 **\u6253\u86cb\u5668**\u3002\n\n    \u4e0d\u7ba1\u5b83\u53eb\u4ec0\u4e48\uff0c\u8fd9\u79cd\u7ed3\u6784\u53cd\u6b63\u662f\u4e00\u79cd\u5408\u6cd5\u7ed3\u6784\u3002\n\n- \u70b9\u53cc\u62e5\u6709\u4e24\u6761\u5e73\u884c\u8fb9\u3002\n\n    ```\n    ------w1-------\n    |             |\n    A-----w2------B\n    |             |\n    w5           w6\n    |             |\n    C-----w3------D\n    |             |\n    ------w4-------\n    ```\n\n    \u5373\u4e0a\u56fe\u3002\n\n    \u6211\u4eec\u6709\u5982\u4e0b\u51e0\u4e2a\u73af\uff1a\n    $$\n    \\begin{cases}\n    w_1+w_2\\\\\n    w_3+w_4\\\\\n    w_1+w_5+w_3+w_6\\\\\n    w_2+w_5+w_4+w_6\\\\\n    w_1+w_5+w_4+w_6\\\\\n    w_2+w_3+w_5+w_6\n    \\end{cases}\n    $$\n    \u6211\u4eec\u8981\u5b58\u5728\u4e00\u7ec4\u6392\u5217\u65b9\u5f0f\uff0c\u4f7f\u5f97\u8fd9\u516d\u4e2a\u5f0f\u5b50\u5168\u90fd\u76f8\u7b49\u3002\n\n    \u5047\u5982\u5176\u5168\u90e8\u76f8\u7b49\uff0c\u5219\u4e0b\u5f0f\u52bf\u5fc5\u6210\u7acb\uff1a\n    $$\n    (w_1+w_2)+(w_3+w_4)=(w_1+w_5+w_4+w_6)+(w_2+w_3+w_5+w_6)\n    $$\n    \u4f46\u662f\u5f53\u6211\u4eec\u628a\u5b83\u62b5\u6d88\u4e00\u4e0b\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u53d1\u73b0\u5176\u7b49\u4ef7\u4e8e\n    $$\n    w_5+w_6=0\n    $$\n    \u8fd9\u4e2a\u5f0f\u5b50\u3002\n\n    \u6ce8\u610f\u5230\u8fb9\u6743\u5168\u90e8\u4e3a\u6b63\u3002\u6545\u6b64\u5f0f\u4e0d\u53ef\u80fd\u6210\u7acb\uff0c\u4e5f\u5373\u8fd9\u79cd\u60c5\u5f62\u4e0d\u53ef\u80fd\u6709\u89e3\u3002\n\n    \u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u7a0d\u5fae\u4fee\u6539\u4e00\u4e0b\u5b9a\u4e49\uff1a\u6211\u4eec\u4ee4\u4e00\u7ec4 $w$ \u4e2d\u53ef\u80fd\u4e0d\u542b\u4efb\u4f55\u8fb9\uff0c\u4e5f\u5373 $w$ \u4e24\u4fa7\u7684\u70b9\u53ef\u80fd\u91cd\u5408\u3002\u8fd9\u65f6\u6211\u4eec\u53d1\u73b0\uff0c\u53ea\u6709 $w_5=w_6=0$ \u624d\u662f\u5408\u6cd5\u6761\u4ef6\u3002\n\n    \u6ce8\u610f\u5230 $w_5=w_6=0$ \u610f\u5473\u7740 $A,C$ \u91cd\u5408\uff0c$B,D$ \u91cd\u5408\uff0c\u6574\u5f20\u56fe\u9000\u5316\u6210\u674f\u4ec1\u3002\n\n    \u6545\u70b9\u53cc\u4e2d\u53ea\u8981\u5b58\u5728\u5e73\u884c\u8fb9\uff0c\u5c31\u4e0d\u5408\u6cd5\u3002\u5c31\u7b97\u5e73\u884c\u8fb9\u7684\u7aef\u70b9\u4e4b\u4e00\u9000\u5316\u5728\u4e86\u4e00\u8d77\uff0c\u4f9d\u7167\u4e0a\u5f0f\u5176\u4ea6\u4e0d\u5408\u6cd5\u3002\n\n- \u70b9\u53cc\u62e5\u6709\u4e24\u6761\u4ea4\u53c9\u8fb9\u3002\n\n    ```\n    ------w1-------\n    |             |\n    A--w3---   ---B\n    |      |   |  |\n    w5 -w4-+---- w6\n    |  |   |      |\n    C---   |------D\n    |             |\n    ------w4-------\n    ```\n\n    \uff08\u4e0a\u56fe\u4e2d\u7684 `+` \u4ec5\u8868\u793a\u4e24\u6761\u8fb9\u4ea4\u53c9\u4e86\uff0c\u4e0d\u8868\u793a\u5728\u8be5\u5904\u5b58\u5728\u8282\u70b9\uff09\n\n    \u4ecd\u53ef\u4eff\u7167\u4e4b\u524d\u7684\u8bc1\u660e\uff0c\u5bfc\u51fa\u82e5\u8be5\u5f0f\u6210\u7acb\u5219\u8fb9\u6743\u5fc5\u7136\u4e3a\u96f6\uff0c\u7559\u7ed9\u8bfb\u8005\u81ea\u8bc1\u3002\n\n\u6211\u4eec\u662f\u4e0d\u662f\u5df2\u7ecf\u8003\u8651\u4e86\u6240\u6709\u7c7b\u578b\u7684\u70b9\u53cc\u5462\uff1f\n\n\u8003\u8651\u5f80\u674f\u4ec1\u4e0a\u968f\u4fbf\u518d\u6dfb\u4e00\u6761\u8fb9\uff0c\u5c31\u4f1a\u53d1\u73b0\u5176\u8981\u4e48\u4e0e\u4e00\u6761\u8fb9\u5e73\u884c\uff0c\u8981\u4e48\u4e0e\u4e00\u6761\u8fb9\u76f8\u4ea4\uff0c\u603b\u4e4b\u4e0d\u5408\u6cd5\u3002\u800c\u5f53\u6211\u4eec\u5f80\u73af\u4e0a\u6dfb\u4e00\u6761\u8fb9\u540e\uff0c\u5176\u5fc5\u7136\u4f1a\u5f97\u5230\u674f\u4ec1\u3002\n\n\u4e5f\u5373\uff0c\u4efb\u610f\u4e00\u79cd\u5f80\u73af\u4e0a\u52a0\u8fb9\u7684\u6d41\u7a0b\u5fc5\u7136\u662f \u73af->\u674f\u4ec1->\u4e0d\u5408\u6cd5\u3002\n\n\u8fd9\u5c31\u8868\u660e\u6240\u6709\u5408\u6cd5\u7684\u6001\u4ec5\u53ef\u80fd\u662f\u674f\u4ec1\u6001\uff0c\u800c\u6211\u4eec\u5df2\u7ecf\u8bc1\u660e\u53ea\u6709\u674f\u4ec1\u6001\u5408\u6cd5\u3002\n\n------\n\n\u4ecb\u4e8e\u6211\u4eec\u5df2\u7ecf\u5728\u5173\u4e8e\u70b9\u53cc\u8003\u8651\uff0c\u6240\u4ee5\u6211\u4eec\u81ea\u7136\u60f3\u7740\u8981\u53bb\u5efa\u4e00\u68f5 **\u5706\u65b9\u6811**\u3002\n\n\u539f\u56fe\u4e2d $S\\to T$ \u7684\u8def\u5f84\u5728\u5706\u65b9\u6811\u4e2d\u662f\u4e00\u6761\u5706\u70b9\u65b9\u70b9\u4ea4\u66ff\u7684\u8def\u5f84\u3002\u5176\u4e2d\uff0c**\u6bcf\u4e2a\u5706\u70b9\u90fd\u662f\u539f\u56fe\u4e2d\u7684\u5fc5\u7ecf\u4e4b\u70b9**\uff08\u56e0\u4e3a\u662f\u5272\u70b9\uff09\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u8def\u5f84\u5206\u6bb5\uff1a\u5bf9\u4e8e\u6bcf\u5bf9\u5728\u8def\u5f84\u4e0a\u76f8\u90bb\u7684\u5706\u70b9\uff0c\u6211\u4eec\u8bb0\u4e00\u4e2a\u4e8c\u5143\u7ec4 $(num,sum)$ \u8868\u793a\u8fd9\u4e24\u4e2a\u70b9\u95f4\u6709 $num$ \u6761\u8def\u5f84\uff0c\u5176\u8def\u5f84\u548c\u662f $sum$\u3002\u4e8c\u5143\u7ec4\u95f4\u53ef\u4ee5\u7b80\u5355\u5408\u5e76\u3002\n\n\u4e8e\u662f\u6211\u4eec\u73b0\u5728\u4ec5\u9700\u6c42\u51fa\u8def\u5f84\u4e0a\u76f8\u90bb\u5706\u70b9\u7684\u4e8c\u5143\u7ec4\u3002\n\n\u6211\u4eec\u8003\u8651\u628a\u5706\u65b9\u6811\u4e0a $S\\to T$ \u7684\u8def\u5f84\u62c6\u6210 $S\\to LCA$ \u4ee5\u53ca $LCA\\to T$ \u4e24\u6bb5\u3002\u6bcf\u4e00\u6bb5\u4e2d\uff0c\u90fd\u662f\u4e0d\u65ad\u8df3\u7236\u4eb2\u7684\u8fc7\u7a0b\u3002\n\n\u6ce8\u610f\u5230\u4e00\u4e2a\u5706\u70b9\u7684\u540e\u7ee7\u8282\u70b9\u662f **\u5176\u5728\u5706\u65b9\u6811\u4e0a\u7684\u4e8c\u7ea7\u7236\u4eb2**\u3002\u4e8e\u662f\u6211\u4eec\u9884\u5904\u7406\u51fa\u6240\u6709\u70b9\u4e0e\u5176\u5728\u5706\u65b9\u6811\u4e0a\u4e8c\u7ea7\u7236\u4eb2\u95f4\u7684\u4e8c\u5143\u7ec4\uff0c\u5171\u8ba1 $O(n)$ \u4e2a\u3002\u5219\u5269\u4e0b\u7684\u5c31\u4ec5\u4ec5\u662f\u4e00\u6b21\u8def\u5f84\u67e5\u8be2\u4e86\u3002\n\n\u6ce8\u610f\u5230 LCA \u53ef\u80fd\u662f\u65b9\u70b9\uff0c\u6b64\u65f6\u6211\u4eec\u8fd8\u8981\u518d\u989d\u5916\u8003\u8651\u4e24\u6bb5\u8def\u5f84\u9876\u7684\u5706\u70b9\u95f4\u7684\u4e8c\u5143\u7ec4\uff0c\u4f46\u8fd9\u5bf9\u4e8e\u6bcf\u6b21\u8be2\u95ee\u81f3\u591a\u53ea\u9700\u8003\u8651\u4e00\u4e2a\u3002\n\n\u5219\u6211\u4eec\u82e5\u80fd\u5feb\u901f\u6c42\u51fa\u4e24\u4e2a\u5706\u70b9\u95f4\u7684\u4e8c\u5143\u7ec4\uff0c\u5c31\u53ef\u4ee5\u7b80\u5355\u56de\u7b54\u8be2\u95ee\u3002\n\n------\n\n\u8003\u8651\u5982\u4f55\u6c42\u51fa\u4e8c\u5143\u7ec4\u3002\n\n\u8fd9\u6d89\u53ca\u5230\u5206\u7c7b\u8ba8\u8bba\uff1a\u6211\u4eec\u9700\u8981\u5206\u8be2\u95ee\u6d89\u53ca\u5230\u7684\u4e24\u4e2a\u5706\u70b9\u662f\u5426\u5728\u674f\u4ec1\u4e2d\u7684\u540c\u4e00\u6761\u94fe\u4e0a\uff0c\u5bf9\u4e24\u79cd\u60c5\u5f62\u5206\u5f00\u8003\u8651\u3002\n\n\u6211\u4eec\u9996\u5148\u6765\u8003\u8651\u5728\u540c\u4e00\u6761\u94fe\u7684\u60c5\u5f62\u3002\u5047\u5982\u8be2\u95ee\u4e2d\u7684\u67d0\u4e2a\u70b9\u662f\u674f\u4ec1\u7684\u201c\u7aef\u70b9\u201d\u6216\u8005\u7ec6\u80de\u5206\u88c2\u6a21\u578b\u4e2d\u7684\u201c\u7eba\u9524\u4f53\u201d\uff0c\u4e5f\u53ef\u4ee5\u88ab\u5f52\u5165\u8be5\u7c7b\u578b\u3002\n\n\u4ee4 $A,B$ \u662f\u674f\u4ec1\u7684\u7aef\u70b9\uff0c$S$ \u662f\u674f\u4ec1\u4e2d\u94fe\u6570\uff0c$R$ \u662f\u674f\u4ec1\u4e2d\u6240\u6709\u8fb9\u7684\u6743\u503c\u548c\uff0c$x,y$ \u4e24\u70b9\u662f\u8be2\u95ee\u7684\u70b9\u3002\n\n\u4e0d\u59a8\u4ee4 $x$ \u79bb $A$ \u66f4\u8fd1\uff0c\u5219 $y$ \u79bb $B$ \u66f4\u8fd1\u3002\u5219\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5f97\u51fa\uff0c\u540c\u4e00\u6761\u94fe\u7684\u65f6\u5019\uff0c\u6709 $num=S,sum=R+(S-2)\\Big(dis(A,x)+dis(B,y)\\Big)$\u3002\n\n\u540c\u7406\uff0c\u5728\u4e0d\u540c\u94fe\u7684\u65f6\u5019\uff0c\u4ee4 $s_x,s_y$ \u4e3a\u4e24\u4e2a\u70b9\u6240\u5728\u94fe\u7684\u6743\u503c\u548c\uff0c\u53ef\u4ee5\u7b80\u5355\u5f97\u51fa\u6709 $num=2(S-1),sum=2R+(S-3)(s_x+s_y)$\u3002\n\n\u8fd9\u4e9b\u4fe1\u606f\u90fd\u662f\u53ef\u4ee5\u7b80\u5355\u7ef4\u62a4\u7684\u3002\n\n------\n\n\u6700\u540e\uff0c\u6211\u4eec\u6765\u5206\u6790\u4e00\u4e0b\u590d\u6742\u5ea6\u3002\n\n\u5efa\u5706\u65b9\u6811\u662f\u663e\u7136\u7ebf\u6027\u7684\u3002\n\n\u7ebf\u6027\u5bf9\u6570\u662f\u663e\u7136\u53ef\u4ee5\u7b80\u5355\u5b9e\u73b0\u7684\u3002\u80fd\u4e0d\u80fd\u8fdb\u4e00\u6b65\u4f18\u5316\u5462\uff1f\n\n\u9996\u5148\u6c42\u4e8c\u5143\u7ec4\u7684\u8fc7\u7a0b\u662f\u53ef\u4ee5\u7ebf\u6027\u9884\u5904\u7406\u3001$O(1)$ \u67e5\u8be2\u7684\u3002\n\n\u7136\u540e\u5c31\u662f\u8def\u5f84\u4fe1\u606f\u67e5\u8be2\u4e86\u3002\u6c42 LCA \u53ef\u4ee5\u7b80\u5355\u79bb\u7ebf Tarjan \u505a\u5230\u7ebf\u6027\u53cd\u963f\u514b\u66fc\uff0c\u4e5f\u53ef\u4ee5\u5927\u529b\u56db\u6bdb\u5b50\u505a\u5230\u7ebf\u6027\u3002\u8def\u5f84\u4fe1\u606f\u663e\u7136\u53ef\u4ee5\u500d\u589e\u505a\u5230\u5bf9\u6570\uff0c\u4f46\u662f\u6ce8\u610f\u5230\u4e8c\u5143\u7ec4\u5177\u6709\u53ef\u51cf\u6027\uff0c\u505a\u51cf\u6cd5\u65f6\u53ea\u9700\u8981\u6c42\u9006\uff0c\u7528\u79bb\u7ebf\u7ebf\u6027\u6c42\u9006\u5143\u7684\u79d1\u6280\u5373\u53ef\u505a\u5230\u7ebf\u6027\u3002\n\n\u603b\u590d\u6742\u5ea6\u662f\u53ef\u4ee5\u505a\u5230\u7ebf\u6027\u7684\uff0c\u5c3d\u7ba1\u6beb\u65e0\u5b9e\u9645\u610f\u4e49\u3002\n\n\u4ee3\u7801\u662f\u7ebf\u6027\u5bf9\u6570\u7684\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=500100;\nconst int M=640100;\ntypedef long long ll;\nint n,m,q;\nconst int mod=998244353;\nnamespace FIFO{\nvoid read(int&x){\n\tx=0;\n\tchar c=getchar();\n\twhile(c>'9'||c<'0')c=getchar();\n\twhile(c>='0'&&c<='9')x=(x<<3)+(x<<1)+(c^48),c=getchar();\n}\nvoid print(int x){if(x>=10)print(x/10);putchar('0'+x%10);}\n}using namespace FIFO;\nnamespace Tre{\nstruct node{int to,next,val;}edge[M<<1];\nint cnt;\nvector<int>v[N<<1],id[N<<1],d[N<<1],chn[N];\nint A[N<<1],B[N<<1],S[N<<1],R[N<<1];\nvector<ll>disa[N],disb[N];\nvoid ae(int k,int x,int y,int z){\n\t// printf(\"AE:%d,%d,%d,%d\\n\",k,x,y,z);\n\tx=id[x][lower_bound(v[x].begin(),v[x].end(),k)-v[x].begin()];\n\ty=id[y][lower_bound(v[y].begin(),v[y].end(),k)-v[y].begin()];\n\t// printf(\"%d,%d\\n\",x,y);\n\tedge[cnt].next=id[k][x],edge[cnt].to=y,edge[cnt].val=z,id[k][x]=cnt++;\n\tedge[cnt].next=id[k][y],edge[cnt].to=x,edge[cnt].val=z,id[k][y]=cnt++;\n\td[k][x]++,d[k][y]++;\n}\nstruct dat{\nint num,sum;\ndat(){num=sum=0;}\ndat(int _n,int _s){num=_n,sum=_s;}\nvoid print()const{printf(\"(%d,%d)\",num,sum);}\nfriend dat operator*(const dat&u,const dat&v){\n\treturn dat(1ll*u.num*v.num%mod,(1ll*u.num*v.sum+1ll*u.sum*v.num)%mod);\n}\n}jum[N][20];\nint anc[N<<1][20],dep[N<<1],c;\nvoid ae(int x,int y){v[x].push_back(y),id[x].push_back(v[y].size()),v[y].push_back(x);}\nvoid dfs(int x,int fa){\n\t// printf(\"%d->%d\\n\",fa,x);\n\tanc[x][0]=fa;for(int i=1;i<20;i++)anc[x][i]=anc[anc[x][i-1]][i-1];dep[x]=dep[fa]+1;\n\tfor(auto y:v[x])if(y!=fa)dfs(y,x);\n}\nint LCA(int x,int y){\n\tif(dep[x]>dep[y])swap(x,y);\n\tfor(int i=19;i>=0;i--)if(dep[x]<=dep[y]-(1<<i))y=anc[y][i];\n\tif(x==y)return x;\n\tfor(int i=19;i>=0;i--)if(anc[x][i]!=anc[y][i])x=anc[x][i],y=anc[y][i];\n\treturn anc[x][0];\n}\nvoid ae(int x,int y,int z){\n\tif(anc[x][0]==anc[y][0])ae(anc[x][0],x,y,z);\n\telse if(anc[x][1]==y)ae(anc[x][0],x,y,z);\n\telse if(anc[y][1]==x)ae(anc[y][0],x,y,z);\n}\ndat calc(int k,int x,int y){\n\tint _x=lower_bound(v[x].begin(),v[x].end(),k)-v[x].begin();\n\tint _y=lower_bound(v[y].begin(),v[y].end(),k)-v[y].begin();\n//\tprintf(\"%d:%d,%d,%d,%d,%d,%d,%d\\n\",x,v[x].size(),id[x].size(),chn[x].size(),disa[x].size(),disb[x].size(),d[x].size(),_x);\n//\tprintf(\"%d:%d,%d,%d,%d,%d,%d,%d\\n\",y,v[y].size(),id[y].size(),chn[y].size(),disa[y].size(),disb[y].size(),d[y].size(),_y);\n\tint X=id[x][_x];\n\tint Y=id[y][_y];\n\tif(X!=A[k]&&Y!=A[k]&&X!=B[k]&&Y!=B[k]&&chn[x][_x]!=chn[y][_y])\n\treturn dat((S[k]-1)<<1,((R[k]<<1)+(disa[x][_x]+disb[x][_x]+disa[y][_y]+disb[y][_y])%mod*(S[k]+mod-3))%mod);\n\tll xa,xb,ya,yb;\n\tif(X==A[k])xa=0,xb=0x3f3f3f3f3f3f3f3f;\n\telse if(X==B[k])xa=0x3f3f3f3f3f3f3f3f,xb=0;\n\telse xa=disa[x][_x],xb=disb[x][_x];\n\tif(Y==A[k])ya=0,yb=0x3f3f3f3f3f3f3f3f;\n\telse if(Y==B[k])ya=0x3f3f3f3f3f3f3f3f,yb=0;\n\telse ya=disa[y][_y],yb=disb[y][_y];\n\tll _a,_b;\n\tif(xa>ya)_a=ya,_b=xb;else _a=xa,_b=yb;\n\treturn dat(S[k],(R[k]+(_a+_b)%mod*(S[k]+mod-2))%mod);\n}\nint calc(int x,int y){\n\tint z=LCA(x,y);\n\t// printf(\"%d(%d,%d)\\n\",z,x,y);\n\tdat res(1,0);\n\tfor(int i=19;i;i--)if(dep[z]<=dep[x]-(1<<i))res=res*jum[x][i-1],x=anc[x][i];\n\tfor(int i=19;i;i--)if(dep[z]<=dep[y]-(1<<i))res=res*jum[y][i-1],y=anc[y][i];\n\tif(x==z&&y==z)return res.sum;\n\treturn (res*calc(z,x,y)).sum;\n}\nll walk(int k,int x,int fr,ll ds){\n\tfor(int i=id[k][x],y;i!=-1;i=edge[i].next)if((y=edge[i].to)!=fr){\n\t\tdisa[v[k][x]].push_back(ds);\n\t\tchn[v[k][x]].push_back(S[k]);\n\t\tif(y==B[k]){\n\t\t\tdisb[v[k][x]].push_back(edge[i].val),R[k]=(ds+edge[i].val+R[k])%mod;\n\t\t\treturn edge[i].val;\n\t\t}\n\t\tds=walk(k,y,x,ds+edge[i].val)+edge[i].val;\n\t\tdisb[v[k][x]].push_back(ds);\n\t\treturn ds;\n\t}\n\treturn 0;\n}\nvoid func(int k){\n\tA[k]=B[k]=-1;\n\tfor(int i=0;i<d[k].size();i++){\n\t\tif(d[k][i]==2)continue;\n\t\tif(A[k]==-1)A[k]=i;else B[k]=i;\n\t}\n\tif(A[k]==-1&&B[k]==-1)A[k]=0,B[k]=1;\n\t// printf(\"FUNC:%d\\n\",k);\n\t// for(auto x:v[k])printf(\"%d \",x);puts(\"\");\n\t// printf(\"%d %d\\n\",A[k],B[k]);\n\tchn[v[k][A[k]]].push_back(-1),disa[v[k][A[k]]].push_back(-1),disb[v[k][A[k]]].push_back(-1);\n\tchn[v[k][B[k]]].push_back(-1),disa[v[k][B[k]]].push_back(-1),disb[v[k][B[k]]].push_back(-1);\n\tfor(int i=id[k][A[k]];i!=-1;i=edge[i].next){\n\t\tS[k]++;\n\t\tif(edge[i].to==B[k]){(R[k]+=edge[i].val)%=mod;continue;}\n\t\twalk(k,edge[i].to,A[k],edge[i].val);\n\t}\n}\nvoid init(){\n\tdfs(1,0);\n//\tfor(int i=1;i<=n;i++)printf(\"%d %d\\n\",v[i].size(),id[i].size());\n\t// for(int i=1;i<=c;i++){printf(\"%d:\",i);for(auto x:v[i])printf(\"%d \",x);puts(\"\");}\n\tfor(int i=n+1;i<=c;i++)id[i].resize(v[i].size(),-1),d[i].resize(v[i].size());\n}\nvoid tini(){\n\tfor(int i=n+1;i<=c;i++)func(i);\n\tfor(int i=2;i<=n;i++)jum[i][0]=calc(anc[i][0],anc[i][1],i);\n\t// for(int i=2;i<=n;i++)printf(\"%d:(%d,%d)\\n\",i,jum[i][0].num,jum[i][0].sum);\n\tfor(int j=1;j<20;j++)for(int i=1;i<=n;i++)jum[i][j]=jum[i][j-1]*jum[anc[i][j]][j-1];\n}\n}\nnamespace Gra{\nint dfn[N],low[N],tot,stk[N],tp,X[M],Y[M],Z[M];\nvector<int>v[N];\nvoid Tarjan(int x){\n\tdfn[x]=low[x]=++tot,stk[++tp]=x;\n\tfor(auto y:v[x]){\n\t\tif(!dfn[y]){\n\t\t\tTarjan(y),low[x]=min(low[x],low[y]);\n\t\t\tif(low[y]<dfn[x])continue;\n\t\t\tTre::c++;\n\t\t\tint z;do z=stk[tp--],Tre::ae(z,Tre::c);while(z!=y);\n\t\t\tTre::ae(x,Tre::c);\n\t\t\t// for(auto z:Tre::v[Tre::c])printf(\"%d \",z);puts(\"\");\n\t\t}else low[x]=min(low[x],dfn[y]);\n\t}\n}\nvoid init(){\n\tfor(int i=1;i<=m;i++)\n\t\tread(X[i]),read(Y[i]),read(Z[i]),v[X[i]].push_back(Y[i]),v[Y[i]].push_back(X[i]);\n\t// for(int i=1;i<=m;i++)printf(\"%d %d %d\\n\",X[i],Y[i],Z[i]);\n\tTarjan(1);\n\tTre::init();\n\tfor(int i=1;i<=m;i++)Tre::ae(X[i],Y[i],Z[i]);\n}\n}\nint main(){\n\tfreopen(\"simple.in\",\"r\",stdin);\n\tfreopen(\"simple.out\",\"w\",stdout);\n\tread(n),read(m),read(q),Tre::c=n;\n\tGra::init();\n\tTre::tini();\n\tfor(int i=1,x,y;i<=q;i++)read(x),read(y),print(Tre::calc(x,y)),putchar('\\n');\n\treturn 0;\n}\n```\n\n\n",
        "postTime": 1651842840,
        "uid": 123369,
        "name": "xtx1092515503",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P8331\u3010[ZJOI2022] \u7b80\u5355\u9898\u3011"
    },
    {
        "content": "#### \u9898\u89e3\n\n\u9996\u5148\u5efa\u51fa\u5706\u65b9\u6811\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\u53cc\u8fdb\u884c\u8003\u8651\u3002\n\n\u9898\u76ee\u7ed9\u51fa\u7684\u6027\u8d28\u975e\u5e38\u5f3a\uff0c\u4ed4\u7ec6\u5206\u6790\u53ef\u4ee5\u5f97\u5230\uff0c\u4e0d\u4f1a\u51fa\u73b0\u7c7b\u4f3c\u4e8e\u4e09\u4e2a\u73af\u4e24\u4e24\u76f8\u4ea4\u7684\u60c5\u51b5\uff0c\u6700\u7ec8\u7ed3\u8bba\u662f\u4e00\u5b9a\u5b58\u5728\u4e24\u4e2a\u70b9 $S,T$\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u70b9\u53cc\u7531\u82e5\u5e72\u6761 $S \\to T$ \u7684\u8def\u5f84\u6784\u6210\u3002\u8fd9\u79cd\u56fe\u4f3c\u4e4e\u88ab\u79f0\u4f5c\u674f\u4ec1\u3002\n\n\u8003\u8651\u6c42\u4e24\u70b9\u95f4\u7684\u7b54\u6848\uff0c\u53ef\u4ee5\u62c6\u5230\u5706\u65b9\u6811\u4e0a\u62c6\u6210\u82e5\u5e72\u6bb5\u4e4b\u548c\u3002\u9996\u5148 $(cnt,sum)$ \u8fd9\u4e00\u4e8c\u5143\u7ec4\u663e\u7136\u662f\u53ef\u9006\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u9884\u5904\u7406\u51fa\u6811\u4e0a\u524d\u7f00\u79ef\uff0c\u53ea\u9700\u8981\u6c42 $O(n+q)$ \u6b21\u5706\u70b9-\u65b9\u70b9-\u5706\u70b9\u4e4b\u95f4\u7684\u8be2\u95ee\u3002\n\n\u5728\u4e00\u4e2a\u70b9\u53cc\u5185\u5bf9\u4e24\u4e2a\u5706\u70b9\u662f\u5426\u5728\u540c\u4e00\u6761\u94fe\u4e0a\u8fdb\u884c\u8ba8\u8bba\u5c31\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\u3002\u5177\u4f53\u800c\u8a00\uff0c\u5982\u679c\u5176\u4e2d\u81f3\u5c11\u4e00\u4e2a\u70b9\u4e3a\u674f\u4ec1\u7684\u7aef\u70b9\uff0c\u53ef\u4ee5\u76f4\u63a5\u89c6\u4f5c\u4e24\u4e2a\u70b9\u5728\u540c\u4e00\u6761\u94fe\u4e0a\u7684\u60c5\u51b5\u3002\n\n\u5b9e\u73b0\u65f6\u53ef\u4ee5\u5148\u627e\u5230\u674f\u4ec1\u5185\u5ea6\u6570\u6700\u5927\u7684\u4e24\u4e2a\u70b9\u4f5c\u4e3a\u7aef\u70b9\uff0c\u7136\u540e\u76f4\u63a5 dfs \u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u5230\u4e24\u4e2a\u7aef\u70b9\u7684\u4fe1\u606f\uff0c\u67e5\u8be2\u65f6\u53ea\u9700\u8981\u7b80\u5355\u5206\u7c7b\u8ba8\u8bba\u3002\u5177\u4f53\u5b9e\u73b0\u53ef\u4ee5\u53c2\u8003\u4ee3\u7801\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n + q \\log n)$\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6 $O(n)$\u3002\n\n#### \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\n#define Getchar() p1 == p2 and (p2 = (p1 = buf) + fread(buf, 1, 1 << 21, stdin), p1 == p2) ? EOF : *p1++\nchar buf[1 << 21], *p1, *p2;\ninline int read (void)\n{\n\tint x = 0; char c = Getchar();\n\twhile (c < '0' or c > '9') c = Getchar();\n\twhile (c >= '0' and c <= '9') x = x * 10 + c - 48, c = Getchar();\n\treturn x;\n}\nconst int mod = 998244353;\nconst int maxn = 1000000 + 10;\nint n, m, q, tot, dfn[maxn], low[maxn], times, st[maxn], tp;\nint dep[maxn], fa[maxn], siz[maxn], son[maxn], top[maxn], pos[maxn];\nstd::vector<std::pair<int, int>> e[maxn]; std::vector<int> g[maxn];\ninline int power (int x, int y)\n{\n\tint z = 1;\n\tfor (; y; y >>= 1, x = 1LL * x * x % mod) if (y & 1) z = 1LL * z * x % mod;\n\treturn z;\n}\nstruct Data\n{\n\tint cnt, sum;\n\tinline friend Data operator + (const Data &a, const Data &b) {return (Data){(a.cnt + b.cnt) % mod, (a.sum + b.sum) % mod};}\n\tinline friend Data operator * (const Data &a, const Data &b)\n\t{\n\t\tint cnt = 1LL * a.cnt * b.cnt % mod;\n\t\tint sum = (1LL * a.cnt * b.sum + 1LL * a.sum * b.cnt) % mod;\n\t\treturn (Data){cnt, sum};\n\t}\n\tinline friend Data operator / (const Data &a, const Data &b)\n\t{\n\t\tint inv = power(b.cnt, mod - 2);\n\t\tint cnt = 1LL * a.cnt * inv % mod;\n\t\tint sum = (a.sum - 1LL * cnt * b.sum % mod + mod) * inv % mod;\n\t\treturn (Data){cnt, sum};\n\t}\n} dis[maxn];\nstruct Almond\n{\n\tint S, T, cnt;\n\tstd::unordered_map<int, int> id, dS, dT, dep, sum;\n\tstd::vector<std::array<int, 3>> E;\n\tinline void add (int u, int v, int w) {E.push_back({u, v, w});}\n\tinline void dfs (int u, int fr, int dis)\n\t{\n\t\tif (u == T) {sum[0] = (sum[0] + dis) % mod; sum[cnt] = dis; return;}\n\t\tid[u] = cnt; dS[u] = dis; dep[u] = dep[fr] + 1;\n\t\tfor (auto [v, w]: e[u]) if (v != fr) dfs(v, u, (dis + w) % mod);\n\t}\n\tinline void build (int p)\n\t{\n\t\tfor (auto [u, v, w]: E) e[u].push_back({v, w}), e[v].push_back({u, w});\n\t\tfor (int u: g[p])\n\t\t\tif (e[u].size() > e[S].size()) T = S, S = u;\n\t\t\telse if (e[u].size() > e[T].size()) T = u;\n\t\tfor (auto [u, w]: e[S]) cnt++, dfs(u, S, w);\n\t\tfor (int u: g[p]) if (u != S and u != T) dT[u] = (sum[id[u]] - dS[u] + mod) % mod;\n\t\tdep[S] = 0; dep[T] = 1 << 30;\n\t\tfor (int u: g[p]) std::vector<std::pair<int, int>>().swap(e[u]);\n\t}\n\tinline Data calc (int u, int v)\n\t{\n\t\tif (id[u] > id[v]) std::swap(u, v);\n\t\tif (id[u] == 0 and id[v] == 0) return (Data){cnt, sum[0]};\n\t\tif (id[u] == 0 or id[u] == id[v])\n\t\t{\n\t\t\tif (dep[u] > dep[v]) std::swap(u, v);\n\t\t\treturn (Data){cnt, (int)((sum[0] + 1LL * (cnt - 2) * (dS[u] + dT[v])) % mod)};\n\t\t}\n\t\treturn (Data){2 * (cnt - 1), (int)((2LL * sum[0] + 1LL * (cnt - 3 + mod) * (sum[id[u]] + sum[id[v]])) % mod)};\n\t}\n} A[maxn];\ninline void tarjan (int u)\n{\n\tdfn[u] = low[u] = ++times; st[++tp] = u;\n\tfor (auto [v, w]: e[u])\n\t\tif (!dfn[v])\n\t\t{\n\t\t\ttarjan(v); low[u] = std::min(low[u], low[v]);\n\t\t\tif (low[v] >= dfn[u])\n\t\t\t{\n\t\t\t\tauto add = [&] (int u, int v) {g[u].push_back(v); g[v].push_back(u);};\n\t\t\t\tadd(u, ++tot); do add(st[tp], tot); while (st[tp--] != v);\n\t\t\t}\n\t\t}\n\t\telse low[u] = std::min(low[u], dfn[v]);\n}\ninline void dfs1 (int u, int fr)\n{\n\tdep[u] = dep[fa[u] = fr] + 1; siz[u] = 1;\n\tfor (int v: g[u]) if (v != fr)\n\t{\n\t\tdfs1(v, u); siz[u] += siz[v];\n\t\tif (siz[v] > siz[son[u]]) son[u] = v;\n\t}\n}\ninline void dfs2 (int u)\n{\n\tpos[dfn[u] = ++times] = u;\n\tif (son[u]) top[son[u]] = top[u], dfs2(son[u]);\n\tfor (int v: g[u]) if (v != fa[u] and v != son[u]) top[v] = v, dfs2(v);\n}\ninline void dfs3 (int u)\n{\n\tif (u > 1 and u <= n) dis[u] = dis[fa[fa[u]]] * A[fa[u]].calc(u, fa[fa[u]]);\n\tfor (int v: g[u]) if (v != fa[u]) dfs3(v);\n}\ninline int lca (int u, int v)\n{\n\twhile (top[u] != top[v]) dep[top[u]] <= dep[top[v]] ? v = fa[top[v]] : u = fa[top[u]];\n\treturn dep[u] < dep[v] ? u : v;\n}\ninline int up (int u, int x)\n{\n\tx = dep[u] - dep[x] - 1;\n\twhile (dep[u] - dep[fa[top[u]]] <= x) x -= dep[u] - dep[fa[top[u]]], u = fa[top[u]];\n\treturn pos[dfn[u] - x];\n}\nsigned main ()\n{\n\ttot = n = read(); m = read(); q = read();\n\tfor (int i = 1, u, v, w; i <= m; i++) u = read(), v = read(), w = read(), e[u].push_back({v, w}), e[v].push_back({u, w});\n\ttarjan(1); dfs1(1, 0); top[1] = 1; times = 0; dfs2(1);\n\tfor (int u = 1; u <= n; u++) for (auto [v, w]: e[u]) if (u < v) A[dep[u] <= dep[v] ? fa[v] : fa[u]].add(u, v, w);\n\tfor (int u = 1; u <= n; u++) std::vector<std::pair<int, int>>().swap(e[u]);\n\tfor (int p = n + 1; p <= tot; p++) A[p].build(p);\n\tdis[1] = (Data){1, 0}; dfs3(1);\n\tfor (int u, v, l; q--; )\n\t{\n\t\tu = read(); v = read(); l = lca(u, v);\n\t\tData ans = (Data){1, 0};\n\t\tif (l <= n) ans = (dis[u] / dis[l]) * (dis[v] / dis[l]);\n\t\telse\n\t\t{\n\t\t\tint x = up(u, l), y = up(v, l);\n\t\t\tans = (dis[u] / dis[x]) * (dis[v] / dis[y]) * A[l].calc(x, y);\n\t\t}\n\t\tprintf(\"%d\\n\", ans.sum);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1661749217,
        "uid": 46197,
        "name": "_RSY_",
        "ccfLevel": 10,
        "title": "\u3010\u9898\u89e3\u3011P8331"
    },
    {
        "content": "\u7531\u4e8e\u53ef\u601c\u544a\u8bc9\u6211\u4eec\u539f\u56fe\u6709\u7279\u6b8a\u6027\u8d28\uff0c\u5e76\u4e14\u8fd9\u4e2a\u6027\u8d28\u5728\u65b0\u56fe\u4e0a\u5df2\u7ecf\u5bc4\u4e86\uff0c\u6240\u4ee5\u81ea\u7136\u8981\u8003\u8651\u56fe\u7684\u5f62\u6001\u6709\u54ea\u4e9b\u6027\u8d28\u3002\n\n\u7531\u4e8e ~~\u5b50\u4efb\u52a1\u6709\u4ed9\u4eba\u638c~~ \u4e24\u70b9\u4e4b\u95f4\u8def\u5f84\u6240\u7ecf\u8fc7\u7684\u70b9\u53cc\u662f\u786e\u5b9a\u7684\uff0c\u800c\u4e24\u70b9\u53cc\u4e4b\u95f4\u7684\u8def\u5f84\u662f\u552f\u4e00\u7684\uff0c\u6240\u4ee5\u60f3\u5230\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u53cc\u5206\u5f00\u8003\u8651\u3002\n\n\u5bb9\u6613\u53d1\u73b0\uff0c\u5982\u679c\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u53cc\uff0c\u90fd\u5b58\u5728\u5408\u6cd5\u8d4b\u503c\u65b9\u6848\uff0c\u90a3\u4e48\u53ef\u4ee5\u901a\u8fc7\u6269\u5927\u500d\u6570\u7684\u65b9\u5f0f\uff0c\u4f7f\u5f97\u6574\u4e2a\u56fe\u6709\u5408\u6cd5\u8d4b\u503c\u65b9\u6848\u3002\n\n\u8003\u8651\u7b80\u5355\u4e00\u70b9\u7684\u70b9\u53cc\uff1a\u4e00\u4e2a\u73af\uff08\u4e5f\u5c31\u662f\u4ed9\u4eba\u638c\uff09\uff1a\u7531\u4e8e\u53ea\u6709\u4e00\u4e2a\u73af\uff0c\u8d4b\u503c\u65b9\u6848\u5fc5\u7136\u5b58\u5728\u3002\n\n\u8003\u8651\u7b80\u5355\u4e24\u70b9\u7684\u70b9\u53cc\uff1a\u4e00\u4e2a\u73af\uff0c\u4f46\u73af\u4e2d\u67d0\u4e00\u70b9\u5411\u53e6\u5916\u4e00\u70b9\u6709\u4e00\u6761\u6a2a\u53c9\u8fb9\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ppcror3b.png)\n\n\u6839\u636e\u9898\u76ee\u6761\u4ef6\uff0c\u82e5 $A,B,C$ \u8868\u793a\u6240\u793a\u533a\u57df\u7684\u8fb9\u6743\u548c\uff08\u4e0b\u540c\uff09\uff0c\u4e0d\u96be\u63a8\u5bfc\u51fa\u6709 $A=B=C$\u3002\u8d4b\u503c\u65b9\u6848\u5fc5\u7136\u5b58\u5728\u3002\n\n\u8003\u8651\u7b80\u5355\u4e09\u70b9\u7684\u70b9\u53cc\uff1a\u4e00\u4e2a\u73af\u548c\u4e00\u6761\u6a2a\u53c9\u8fb9\uff0c\u6216\u8005\u8bf4\u6709\u4e09\u6761\u540c\u6e90\u540c\u6c47\u7684\u8def\u5f84\uff0c\u5176\u4e2d\u4e00\u6761\u8def\u5f84\u5411\u53e6\u4e00\u6761\u8def\u5f84\u6709\u4e00\u6761\u6a2a\u53c9\u8fb9\uff08\u8fde\u5411\u540c\u4e00\u6761\u8def\u5f84\u7684\u53ef\u4ee5\u540c\u6837\u8bc1\u660e\uff09\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/r4k2xxhg.png)\n\n\u6839\u636e\u6761\u4ef6\uff0c\u5fc5\u7136\u6709 $a+b+c=f+c+e=a+e+c+d=f+b+c+d$\u3002\u8054\u7acb\u89e3\u5f97 $d=0$\u3002\n\n\u8003\u8651 $d=0$ \u7684\u60c5\u51b5\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/pyatlmxr.png)\n\n\u6839\u636e\u4e4b\u524d\u7684\u8ba8\u8bba\uff0c\u663e\u7136\u6709 $a=e=b+c=d+c$\uff0c\u5219\u5fc5\u7136\u6709 $b=d$\uff0c\u800c\u53c8\u5b58\u5728 $b+d=a+e$\uff0c\u5219 $a=b=d=e$\uff0c\u6240\u4ee5\u6ee1\u8db3\u6761\u4ef6\u7684\u53ea\u6709 $c=0$\uff0c\u5373**\u540c\u6e90\u540c\u6c47\u7684\u56db\u6761\u8def\u5f84**\u3002\n\n\u7531\u4e8e\u6ca1\u6709\u5176\u4ed6\u7684\u52a0\u8fb9\u65b9\u5f0f\uff0c\u6240\u4ee5\u5f97\u51fa\uff1a**\u6ee1\u8db3\u6761\u4ef6\u7684\u70b9\u53cc\uff0c\u5fc5\u7136\u662f\u540c\u6e90\u540c\u6c47\u7684\u82e5\u5e72\u6761\u8def\u5f84**\u3002\n\n\u81f3\u6b64\uff0c\u6211\u4eec\u603b\u7ed3\u51fa\u4e86\u56fe\u7684\u6027\u8d28\uff0c\u7136\u540e\u56de\u5230\u95ee\u9898\u4e2d\u53bb\uff1a\n\n\u663e\u7136\u5728\u5706\u65b9\u6811\u4e0a\u89e3\u51b3\u95ee\u9898\u662f\u65b9\u4fbf\u7684\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u53cc\uff0c\u9700\u8981\u7ef4\u62a4\u4ed6\u5185\u90e8\u4ece\u67d0\u4e00\u70b9\u5230\u67d0\u4e00\u70b9\u7684\u8def\u5f84\u8fb9\u6743\u548c\uff0c\u4e14\u9700\u8981\u5feb\u901f\u5408\u5e76\u4e24\u4e2a\u4e0d\u540c\u70b9\u53cc\u7684\u8fb9\u6743\u548c\u3002\u6240\u4ee5\u8bb0\u5f55\u51fa\u8def\u5f84\u7684\u65b9\u6848\u6570\uff0c\u8bb0\u4f5c\u4e8c\u5143\u7ec4 $(cnt,sum)$\uff0c\u7c7b\u4f3c\u7b1b\u5361\u5c14\u79ef\u5730\u5408\u5e76\u5373\u53ef\uff08$\\epsilon=(1,0)$\uff09\u3002\n\n\u5706\u70b9\u5230\u65b9\u70b9\u7684\u8fb9\u6743\u5373\u4e3a\u5176\u5230\u70b9\u53cc\u6839\u7684\u4e8c\u5143\u7ec4\u3002\n\n\u5206 $S\\to T/T\\to S/S\\to x/x\\to S/T\\to x/x\\to T/x\\to y/x\\to z$ \u8ba8\u8bba\uff0c\u5bb9\u6613\u6c42\u89e3\u51fa\u540c\u4e00\u70b9\u53cc\u5185\u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u7684\u4e8c\u5143\u7ec4\u3002\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/pfgeapkt.png)\n\n\u5efa\u51fa\u5706\u65b9\u6811\uff0c\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u5230\u6839\u7684\u4e8c\u5143\u7ec4\uff08\u4e8c\u5143\u7ec4\u5177\u6709\u53ef\u5dee\u5206\u6027\uff09\uff0c\u7279\u5224 lca \u662f\u5706\u70b9\u8fd8\u662f\u65b9\u70b9\uff0c\u76f8\u5e94\u5730\u5408\u5e76\u5373\u53ef\u3002\n\n\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n\u849f\u84bb\u4ee3\u7801\u5199\u5f97\u6709\u4ebf\u70b9\u7e41\u7410 qAq\u3002\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <map>\n#include <vector>\n\n#define N 1000010\n#define M 1300010\n#define int long long\n#define mod 998244353\n\nint n,m,Q;\nint ksm(int a,int b)\n{\n\tint res = 1;\n\twhile(b)\n\t{\n\t\tif(b & 1)\n\t\t\tres = res * a % mod;\n\t\ta = a * a % mod;\n\t\tb >>= 1;\n\t}\n\treturn res;\n}\nstruct node\n{\n\tint num,sum;\n\tnode operator * (const node &B)const\n\t{\n\t\treturn (node){num * B.num % mod, (num * B.sum % mod + sum * B.num % mod) % mod};\n\t}\n\tnode operator / (const node &B)const\n\t{\n\t\tnode res;\n\t\tres.num = num * ksm(B.num, mod - 2) % mod;\n\t\tres.sum = (sum - res.num * B.sum % mod + mod) % mod * ksm(B.num, mod - 2) % mod;\n\t\treturn res;\n\t}\n};\nint h[N],from[M << 1],e[M << 1],ne[M << 1],v[M << 1],idx = -1;\nnode f[M << 1];\nvoid add_edge(int x,int y,int z)\n{\n\tne[++idx] = h[x];\n\th[x] = idx;\n\te[idx] = y;\n\tv[idx] = z;\n\tfrom[idx] = x;\n}\nvoid add(int x,int y,int z)\n{\n\tadd_edge(x,y,z);\n\tadd_edge(y,x,z);\n}\nvoid add_edge_(int x,int y,node z)\n{\n\tne[++idx] = h[x];\n\th[x] = idx;\n\te[idx] = y;\n\tf[idx] = z;\n}\nvoid add_(int x,int y,node z)\n{\n\tadd_edge_(x,y,z);\n\tadd_edge_(y,x,z);\n}\n\nstruct Edge\n{\n\tint x,y;\n\tnode z;\n}eg[M];\nint egidx;\n\nint dfn[N],dfncnt,low[N];\nstruct SCC\n{\n\tint S,T;\n\tstd::vector <int> a;\n\tstd::map <signed,int> disS,disT;\n\tstd::map <signed,signed> from,id;\n\tint sumval;\n\tint cnt;\n\tint val(int x){\treturn (disS[x] + disT[x]) % mod;}\n\tnode get_dis(int x,int y)\n\t{\n\t\tif(x == y)\n\t\t\treturn (node){1ll,0ll};\n\t\tif(y == S)\n\t\t\tx ^= y ^= x ^= y;\n\t\tif(x == S && y == T)\n\t\t\treturn (node){cnt, sumval};\n\t\tif(x == S)\n\t\t\treturn (node){cnt, (disS[y] + (cnt - 1) * disT[y] % mod + sumval + mod - val(y)) % mod};\n\t\tif(y == T)\n\t\t\tx ^= y ^= x ^= y;\n\t\tif(x == T && y == S)\n\t\t\treturn (node){cnt, sumval};\n\t\tif(x == T)\n\t\t\treturn (node){cnt, (disT[y] + (cnt - 1) * disS[y] % mod + sumval + mod - val(y)) % mod};\n\t\tif(from[x] == from[y])\n\t\t{\n\t\t\tif(id[x] > id[y])\n\t\t\t\tx ^= y ^= x ^= y;\n\t\t\treturn (node){cnt, ((disT[x] - disT[y] + mod) % mod + (cnt - 1) * (disS[x] + disT[y]) % mod + (sumval + mod - val(x)) % mod) % mod};\n\t\t}\n\t\treturn (node){2ll * (cnt - 1) % mod, ((cnt - 1) * ((disS[x] + disT[x] + disS[y] + disT[y]) % mod) % mod + 2ll * (sumval - val(x) + mod - val(y) + mod) % mod) % mod}; \n\t}\n}scc[N];\nint sc;\nstruct Stack\n{\n\tint sta[M],len;\n\tvoid push(int x){sta[++len] = x; }\n\tvoid pop(){len--; }\n\tint top(){return sta[len]; }\n\tbool empty(){return !len; }\n\tvoid clear(){len = 0; }\n}sta;\n\nvoid Add(int x,node z)\n{\n\teg[++egidx] = (Edge){sc, x, z};\n}\n\nbool vis[N];\nint du[N];\n\nstd::vector <int> g[N];\nstd::vector <int> w[N];\n\nvoid dfsS(int k,int fa,int dep)\n{\n\tif(k == scc[sc].T)\n\t\treturn;\n\tscc[sc].disS[k] = dep;\n\tint sz = g[k].size();\n\tfor(int i = 0; i < sz; i++)\n\t{\n\t\tint nx = g[k][i];\n\t\tif(nx == fa)\n\t\t\tcontinue;\n\t\tdfsS(nx, k, (dep + w[k][i]) % mod);\n\t}\n}\n\nvoid dfsT(int k,int fa,int dep)\n{\n\tif(k == scc[sc].S)\n\t\treturn;\n\tscc[sc].disT[k] = dep;\n\tint sz = g[k].size();\n\tfor(int i = 0; i < sz; i++)\n\t{\n\t\tint nx = g[k][i];\n\t\tif(nx == fa)\n\t\t\tcontinue;\n\t\tdfsT(nx, k, (dep + w[k][i]) % mod);\n\t}\n}\n\nvoid tarjan(int k, int in_edge)\n{\n\tlow[k] = dfn[k] = ++dfncnt;\n\tfor(int i = h[k]; ~i; i = ne[i])\n\t{\n\t\tif(i == (in_edge ^ 1))\n\t\t\tcontinue;\n\t\tint nx = e[i];\n\t\tif(!dfn[nx])\n\t\t{\n\t\t\tsta.push(i);\n\t\t\ttarjan(nx, i);\n\t\t\tlow[k] = std::min(low[k], low[nx]);\n\t\t\tif(low[nx] > dfn[k])\n\t\t\t{\n\t\t\t\tsta.pop();\n\t\t\t\tsc++;\n\t\t\t\tAdd(k, (node){1, 0});\n\t\t\t\tAdd(nx, (node){1, v[i]});\n\t\t\t\tscc[sc].S = k;\n\t\t\t\tscc[sc].T = nx;\n\t\t\t\tscc[sc].cnt = 1;\n\t\t\t\tscc[sc].sumval = v[i];\n\t\t\t}\n\t\t\telse if(low[nx] == dfn[k])\n\t\t\t{\n\t\t\t\tsc++;\n\t\t\t\twhile(1)\n\t\t\t\t{\n\t\t\t\t\tint id = sta.top();\n\t\t\t\t\tsta.pop();\n\t\t\t\t\tif(!vis[e[id]])\n\t\t\t\t\t\tvis[e[id]] = 1, scc[sc].a.push_back(e[id]);\n\t\t\t\t\tif(!vis[from[id]])\n\t\t\t\t\t\tvis[from[id]] = 1, scc[sc].a.push_back(from[id]);\n\t\t\t\t\tdu[from[id]]++;\n\t\t\t\t\tdu[e[id]]++;\n\t\t\t\t\tg[from[id]].push_back(e[id]);\n\t\t\t\t\tw[from[id]].push_back(v[id]);\n\t\t\t\t\tg[e[id]].push_back(from[id]);\n\t\t\t\t\tw[e[id]].push_back(v[id]);\n\t\t\t\t\tif(id == i)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tint sz = scc[sc].a.size();\n\t\t\t\tfor(int i = 0; i < sz;i++)\n\t\t\t\t{\n\t\t\t\t\tint t = scc[sc].a[i];\n\t\t\t\t\tif(du[t] >= 3)\n\t\t\t\t\t{\n\t\t\t\t\t\tif(scc[sc].S)\n\t\t\t\t\t\t\tscc[sc].T = t;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tscc[sc].S = t;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(!scc[sc].S)\n\t\t\t\t\tscc[sc].S = scc[sc].a[0], scc[sc].T = scc[sc].a[1];\n\t\t\t\tdfsS(scc[sc].S, 0, 0);\n\t\t\t\tdfsT(scc[sc].T, 0, 0);\n\t\t\t\tint len = g[scc[sc].S].size();\n\t\t\t\tfor(int i = 0; i < len;i++)\n\t\t\t\t{\n\t\t\t\t\tscc[sc].cnt++;\n\t\t\t\t\tint nx = g[scc[sc].S][i];\n\t\t\t\t\tif(nx == scc[sc].T)\n\t\t\t\t\t\tscc[sc].sumval += w[scc[sc].S][i];\n\t\t\t\t\telse\n\t\t\t\t\t\tscc[sc].sumval += scc[sc].val(nx);\n\t\t\t\t\tint now = 0,fa = scc[sc].S;\n\t\t\t\t\twhile(nx != scc[sc].T)\n\t\t\t\t\t{\n\t\t\t\t\t\tscc[sc].from[nx] = scc[sc].cnt;\n\t\t\t\t\t\tscc[sc].id[nx] = ++now;\n\t\t\t\t\t\tint fa_ = nx;\n\t\t\t\t\t\tif(g[nx][0] != fa)\n\t\t\t\t\t\t\tnx = g[nx][0];\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tnx = g[nx][1];\n\t\t\t\t\t\tfa = fa_;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tscc[sc].sumval %= mod;\n\t\t\t\tfor(int i = 0; i < sz;i++)\n\t\t\t\t{\n\t\t\t\t\tint t = scc[sc].a[i];\n\t\t\t\t\tAdd(t, scc[sc].get_dis(t, k));\n\t\t\t\t\tdu[t] = vis[t] = 0;\n\t\t\t\t\tg[t].clear();\n\t\t\t\t\tw[t].clear();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if(dfn[nx] < dfn[k])\n\t\t{\n\t\t\tsta.push(i);\n\t\t\tlow[k] = std::min(low[k], dfn[nx]);\n\t\t}\n\t}\n}\n\nint kfa[N][21];\nint dep[N];\nnode dis[N];\n\nvoid dfs(int k, int fa)\n{\n\tkfa[k][0] = fa;\n\tfor(int i = 1; i <= 20; i++)\n\t{\n\t\tkfa[k][i] = kfa[kfa[k][i - 1]][i - 1];\n\t\tif(!kfa[k][i])\n\t\t\tbreak;\n\t}\n\tfor(int i = h[k]; ~i; i = ne[i])\n\t{\n\t\tint nx = e[i];\n\t\tif(nx == fa)\n\t\t\tcontinue;\n\t\tdis[nx] = dis[k] * f[i];\n\t\tdep[nx] = dep[k] + 1;\n\t\tdfs(nx, k);\n\t}\n}\n\nint get_lca(int x,int y)\n{\n\tif(dep[x] < dep[y])\n\t\tx ^= y ^= x ^= y;\n\tfor(int i = 20;~i;i--)\n\t\tif(kfa[x][i] && dep[kfa[x][i]] >= dep[y])\n\t\t\tx = kfa[x][i];\n\tif(x != y)\n\t{\n\t\tfor(int i = 20;~i;i--)\n\t\t\tif(kfa[x][i] != kfa[y][i])\n\t\t\t\tx = kfa[x][i], y = kfa[y][i];\n\t\tx = kfa[x][0];\n\t}\n\treturn x;\n}\n\nsigned main()\n{\n\tmemset(h,-1,sizeof(h));\n\tn = read(), m = read(), Q = read();\n\tfor(int i = 1,x,y,z;i <= m;i++)\n\t{\n\t\tx = read(), y = read(), z = read();\n\t\tadd(x,y,z);\n\t}\n\tsc = n;\n\ttarjan(1,-1);\n\tmemset(h,-1,sizeof(h));\n\tidx = -1;\n\tmemset(ne,0,sizeof(ne));\n\tfor(int i = 1;i <= egidx;i++)\n\t\tadd_(eg[i].x, eg[i].y, eg[i].z);\n\tdis[1] = (node){1,0};\n\tdfs(1, 0);\n\tfor(int _ = 1,x,y; _ <= Q; _++)\n\t{\n\t\tx = read(), y = read();\n\t\tint p = get_lca(x,y);\n\t\tint x_ = x, y_ = y;\n\t\tif(p <= n)\n\t\t{\n\t\t\tnode res = (node){1,0};\n\t\t\tfor(int i = 20;~i;i--)\n\t\t\t\tif(kfa[x][i] && dep[kfa[x][i]] >= dep[p])\n\t\t\t\t\tx = kfa[x][i];\n\t\t\tfor(int i = 20;~i;i--)\n\t\t\t\tif(kfa[y][i] && dep[kfa[y][i]] >= dep[p])\n\t\t\t\t\ty = kfa[y][i];\n\t\t\tres = res * (dis[x_] / dis[x]);\n\t\t\tres = res * (dis[y_] / dis[y]);\n\t\t\tprintf(\"%lld\\n\",res.sum);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode res = (node){1,0};\n\t\t\tfor(int i = 20;~i;i--)\n\t\t\t\tif(kfa[x][i] && dep[kfa[x][i]] > dep[p])\n\t\t\t\t\tx = kfa[x][i];\n\t\t\tfor(int i = 20;~i;i--)\n\t\t\t\tif(kfa[y][i] && dep[kfa[y][i]] > dep[p])\n\t\t\t\t\ty = kfa[y][i];\n\t\t\tres = res * (dis[x_] / dis[x]);\n\t\t\tres = res * (dis[y_] / dis[y]);\n\t\t\tres = res * scc[p].get_dis(x,y);\n\t\t\tprintf(\"%lld\\n\",res.sum);\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1679228227,
        "uid": 371968,
        "name": "ningago",
        "ccfLevel": 4,
        "title": "P8331 \u7b80\u5355\u9898"
    },
    {
        "content": "\u6ce8\uff1a\u8fd9\u7bc7\u9898\u89e3\u4e3b\u8981\u9610\u8ff0\u4e86\u672c\u9898\u7684\u4e00\u4e2a\u91cd\u8981\u7ed3\u8bba\u7684\u8bc1\u660e\uff0c\u7f18\u4e8e @xtx1092515503 \u9898\u89e3\u7684\u8bc1\u660e\u548c\u7f51\u4e0a\u4e00\u4f17\u9898\u89e3\u7684\u8bc1\u660e\u90fd\u6709\u5f88\u660e\u663e\u7684\u4e0d\u5b8c\u5168\u4e4b\u5904\uff1b\u5728\u4e00\u4e9b\u5730\u65b9\u7684\u9648\u8ff0\u4e0a\u501f\u9274\u4e86 @xtx1092515503 \u9898\u89e3\u7684\u8bf4\u6cd5\uff0c\u5728\u8fd9\u91cc\u6211\u8fd8\u662f\u8868\u8fbe\u611f\u8c22\uff0c\u4f46\u662f\u4e5f\u5e0c\u671b\u80fd\u591f\u5c06\u6b63\u786e\u7684\u8bc1\u660e\u4f20\u9012\u51fa\u53bb\u3002\u81f3\u4e8e\u5728\u5f97\u5230\u4e86\u8be5\u7ed3\u8bba\u4ee5\u540e\u7684\u505a\u6cd5\uff0c\u662f\u76f8\u5bf9\u5bb9\u6613\u7684\uff0c\u5404\u4f4d\u505a ZJOI 2022 \u7684\u60f3\u5fc5\u80af\u5b9a\u90fd\u4f1a\uff0c\u8fd9\u7bc7\u9898\u89e3\u5c31\u4e0d\u518d\u8d58\u8ff0\u4e86\u3002\n\n\u5728\u4e00\u822c\u56fe\u4e0a\uff0c\u6c42\u89e3\u300c\u4e24\u7ed3\u70b9\u95f4\u6240\u6709\u7b80\u5355\u8def\u5f84\u6743\u503c\u548c\u300d\u662f\u56f0\u96be\u7684 \u2014\u2014 \u8fd9\u542f\u793a\u6211\u4eec\u4ece\u8fd9\u5f20\u56fe\u7684\u7279\u6b8a\u6027\u8d28\u51fa\u53d1\u601d\u8003\u95ee\u9898\u3002\u8fd9\u5f20\u56fe $G$ \u7684\u7279\u6b8a\u6027\u8d28\u662f\u4ec0\u4e48\u5462\uff1f\u5e94\u8be5\u662f\u300c\u5b58\u5728\u4e00\u79cd**\u5c06 $G$ \u7684\u8fb9\u6743\u91cd\u65b0\u8d4b\u503c**\u7684\u65b9\u6cd5\uff0c\u4f7f\u5f97**\u5728\u91cd\u65b0\u8d4b\u503c\u8fc7\u540e**\u56fe\u4e0a\u4efb\u610f\u4e24\u4e2a\u7b80\u5355\u73af\u7684\u8fb9\u6743\u548c\u76f8\u7b49\u300d\uff1b\u6211\u4eec\u79f0\u8fd9\u6837\u7684\u56fe $G$ \u662f\u4f18\u96c5\u7684\u3002\n\n\u4f18\u96c5\u7684\u56fe\u5177\u6709\u4ec0\u4e48\u6837\u7684\u6027\u8d28\uff1f\u6211\u4eec\u5f88\u96be\u4ece\u6b63\u9762\u76f4\u63a5\u6765\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\uff1b\u56e0\u6b64\u6211\u4eec\u8003\u8651\u6362\u4e00\u4e2a\u89d2\u5ea6\uff0c\u5373**\u5177\u6709\u4ec0\u4e48\u6837\u7684\u6027\u8d28\u7684\u56fe\u662f\u4e0d\u4f18\u96c5\u7684**\u3002\u6211\u4eec\u6ce8\u610f\u5230\uff0c\u6709\u82e5\u5e72\u4e2a\u7b80\u5355\u73af\u300c\u4ea4\u7ec7\u5728\u4e00\u8d77\u300d\u7684\u56fe\u901a\u5e38\u6765\u8bf4\u662f\u4e0d\u4f18\u96c5\u7684\u3002\u7ecf\u8fc7\u4e00\u4e9b\u8ba8\u8bba\uff0c\u6211\u4eec\u53d1\u73b0\u5982\u4e0b\u7ed3\u8bba\uff1a\n\n\u5206\u6790 $1$.\u300c\u53cc\u5f26\u77db\u76fe\u300d\uff1a\u82e5 $G$ \u7684\u67d0\u4e2a\u5b50\u56fe $G'$ \u5f62\u5982\u300c\u4e00\u4e2a\u7b80\u5355\u73af\u518d\u52a0\u4e0a\u4e24\u6761\u4e0d\u540c\u7684\u5f26\u300d\u7684\u5f62\u5f0f\uff0c\u5219 $G$ \u4e00\u5b9a\u662f\u4e0d\u4f18\u96c5\u7684\u3002\n\n\u8fd9\u91cc\u300c\u52a0\u4e0a\u4e24\u6761\u4e0d\u540c\u7684\u5f26\u300d\u6307\u7684\u662f\uff1a\u5728\u8be5\u7b80\u5355\u73af\u4e0a\u5b58\u5728\u4e24\u5bf9(\u4e0d\u5b8c\u5168\u76f8\u540c\u7684)\u65e0\u5e8f\u7ed3\u70b9\u5bf9 $(u_0,v_0)$ \u548c $(u_1,v_1)$\uff0c\u4f7f\u5f97 $u_0$ \u5230 $v_0$ \u4e4b\u95f4\u3001$u_1$ \u5230 $v_1$ \u4e4b\u95f4\u5206\u522b\u5b58\u5728\u4e24\u6761(\u9664\u5728\u9876\u70b9\u5904\u5916)\u4e0d\u76f8\u4ea4\u7684\u8def\u5f84 $u_0\\sim v_0$ \u548c $u_1\\sim v_1$\uff0c\u5f53\u7136\u8fd9\u4e24\u6761\u8def\u5f84\u90fd\u662f\u4e0d\u80fd\u4f7f\u7528\u4efb\u4f55\u5728\u8be5\u7b80\u5355\u73af\u4e0a\u7684\u8fb9\u7684\u3002\n\n![ABC.png](https://s2.loli.net/2022/05/16/cRik1GMAbZxpE9Y.png)\n\n\u4e00\u79cd\u60c5\u51b5\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u5176\u4e2d $A\\sim B\\sim C$ \u662f\u6211\u4eec\u5173\u6ce8\u7684\u7b80\u5355\u73af\uff0c$A\\sim X\\sim B$ \u548c $A\\sim Y\\sim C$ \u662f\u8be5\u73af\u4e0a\u52a0\u4e0a\u7684\u4e24\u6761\u5f26\u3002\u6ce8\u610f\u8be5\u56fe\u4e0a\u7684\u4efb\u610f\u4e00\u6761\u8fb9**\u90fd\u53ef\u4ee5\u4ee3\u8868 $G'$ \u4e2d\u7684\u4e00\u6761\u8def\u5f84**\u3002\n\n\u6ce8\u610f\u5230 $(A\\sim X\\sim B)\\sim A$ \u548c $(A\\sim X\\sim B)\\sim C\\sim A$ \u662f\u4e24\u4e2a\u7b80\u5355\u73af\uff0c\u4e8c\u8005\u7684\u8fb9\u6743\u548c\u4e00\u5b9a\u76f8\u7b49 \u2014\u2014 \u8fd9\u4e5f\u5c31\u662f\u8bf4\uff0c$B\\sim A$ \u7684\u957f\u5ea6\u7b49\u4e8e $B\\sim C\\sim A$ \u7684\u957f\u5ea6\uff1b\u4f46\u662f\u4ece\u53e6\u4e00\u65b9\u9762\u6765\u8bf4\uff0c$(A\\sim Y\\sim C)\\sim A$ \u548c $(A\\sim Y\\sim C)\\sim B\\sim A$ \u4e5f\u662f\u4e24\u4e2a\u7b80\u5355\u73af\uff0c\u4e8c\u8005\u7684\u8fb9\u6743\u548c\u4e5f\u4e00\u5b9a\u76f8\u7b49\uff0c\u8fd9\u610f\u5473\u7740 $C\\sim A$ \u7684\u957f\u5ea6\u7b49\u4e8e $C\\sim B\\sim A$ \u7684\u957f\u5ea6\uff1b\u7efc\u4e0a\uff0c$B\\sim C$ \u7684\u957f\u5ea6\u4e00\u5b9a\u4e3a\u96f6\uff0c\u800c\u8fd9\u663e\u7136\u4e0e\u300c\u6b63\u6574\u6570\u8fb9\u6743\u300d\u76f8\u77db\u76fe\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u4e00\u79cd\u60c5\u51b5\u80af\u5b9a\u662f\u4e0d\u80fd\u51fa\u73b0\u5728 $G'$ \u4e2d\u7684\u3002\n\n![ABCD.png](https://s2.loli.net/2022/05/16/njlWTLAeoPKIb2i.png)\n\n\u53e6\u4e00\u79cd\u60c5\u51b5\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u5176\u4e2d $A\\sim B\\sim C\\sim D$ \u662f\u6211\u4eec\u5173\u6ce8\u7684\u7b80\u5355\u73af\uff0c$A\\sim X\\sim C$ \u548c $B\\sim Y\\sim C$ \u662f\u8be5\u73af\u4e0a\u52a0\u4e0a\u7684\u4e24\u6761\u5f26\u3002\u6ce8\u610f\u8be5\u56fe\u4e0a\u7684\u4efb\u610f\u4e00\u6761\u8fb9\u4ecd\u53ef\u4ee5\u4ee3\u8868 $G'$ \u4e2d\u7684\u4e00\u6761\u8def\u5f84\u3002\n\n\u7c7b\u4f3c\u4e8e\u521a\u624d\u7684\u8bba\u8bc1\uff0c\u6211\u4eec\u5fc5\u6709 $A\\sim C$ \u7684\u957f\u5ea6\u7b49\u4e8e $A\\sim X\\sim C$ \u7684\u957f\u5ea6\uff0c\u540c\u7406 $B\\sim D$ \u7684\u957f\u5ea6\u7b49\u4e8e $B\\sim Y\\sim D$ \u7684\u957f\u5ea6\uff1b\u800c $(A\\sim X\\sim C)\\sim A$ \u548c $(B\\sim Y\\sim D)\\sim B$ \u53c8\u662f\u4e24\u4e2a\u8fb9\u6743\u548c\u4e00\u5b9a\u76f8\u7b49\u7684\u7b80\u5355\u73af\uff0c\u6545\u800c\u8fd9\u56db\u4e2a\u957f\u5ea6\u4e00\u5b9a\u4e24\u4e24\u76f8\u7b49\u3002\u7136\u800c $(A\\sim C)\\sim(D\\sim B)$ \u4e5f\u662f\u4e00\u4e2a\u8fb9\u6743\u548c\u4e0e\u4e4b\u76f8\u7b49\u7684\u7b80\u5355\u73af\uff0c\u56e0\u800c $A\\sim B$ \u7684\u957f\u5ea6\u3001$C\\sim D$ \u7684\u957f\u5ea6\u4e8c\u8005\u90fd\u4e00\u5b9a\u4e3a\u96f6\uff0c\u518d\u4e00\u6b21\u4e0e\u300c\u6b63\u6574\u6570\u8fb9\u6743\u300d\u76f8\u77db\u76fe\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u4e00\u79cd\u60c5\u51b5\u4e5f\u662f\u4e0d\u80fd\u51fa\u73b0\u5728 $G'$ \u4e2d\u7684\uff0c\u8fd9\u6837\u5c31\u5b8c\u6574\u5730\u9610\u660e\u4e86\u300c\u53cc\u5f26\u77db\u76fe\u300d\u3002\n\n\u8fd9\u6837\u4e00\u6765\uff0c\u5728\u4e00\u4e2a\u73af\u4e0a\u8fd8\u80fd\u51fa\u73b0\u4ec0\u4e48\u7ed3\u6784\u5462\uff1f\u300c\u53cc\u5f26\u77db\u76fe\u300d\u6307\u51fa\u4e86\u5728\u4e00\u4e2a\u73af\u4e0a\u4e0d\u80fd\u5b58\u5728\u4e24\u6761\u4e0d\u540c\u7684\u5f26\uff0c\u7136\u800c\u4e00\u4e2a\u73af\u4e0a\u53ef\u4ee5\u5b58\u5728\u7684\u662f**\u591a\u6761\u76f8\u540c\u7684\u5f26**\uff0c\u5373\u65e0\u5e8f\u7ed3\u70b9\u5bf9 $(u,v)$ \u4e4b\u95f4\u5b58\u5728\u591a\u6761\u4e0d\u76f8\u4ea4\u7684\u8def\u5f84 $u\\sim v$\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a\n\n![AB.png](https://s2.loli.net/2022/05/16/aFmxq62jyIOpNUH.png)\n\n\u5176\u4e2d $A\\sim B\\sim C$ \u662f\u6211\u4eec\u5173\u6ce8\u7684\u7b80\u5355\u73af\uff0c$A\\sim X\\sim B$\u3001$A\\sim Y\\sim B$\u3001$A\\sim Z\\sim B$ \u662f $A,B$ \u4e4b\u95f4\u7684\u591a\u6761\u5f26\uff1a\u8fd9\u6837\u7684\u7ed3\u6784\u662f\u5408\u6cd5\u7684\u3002\u73b0\u5728\uff0c\u4ece\u5355\u4e2a\u73af\u7684\u89d2\u5ea6\u51fa\u53d1\u5df2\u7ecf\u5f97\u4e0d\u5230\u4ec0\u4e48\u6709\u610f\u4e49\u7684\u7ed3\u8bba\uff0c\u8003\u8651\u5c06\u76ee\u5149\u8f6c\u5411**\u591a\u4e2a\u73af\u4e4b\u95f4\u7684\u4f4d\u7f6e\u5173\u7cfb**\u7684\u5c42\u9762\u4e0a\u3002\n\n\u53d7\u5230\u300c\u4efb\u610f\u4e00\u4e2a\u70b9\u4e0d\u5728 $\\geq2$ \u4e2a\u7b80\u5355\u73af\u4e0a\u300d\u7684\u90e8\u5206\u5206(\u5373 $G$ \u662f**\u70b9\u4ed9\u4eba\u638c**\u65f6\u7684\u60c5\u5f62)\u7684\u542f\u53d1\uff0c\u6211\u4eec\u8003\u8651 $G$ \u7684**\u70b9\u53cc\u8fde\u901a\u5206\u91cf**\uff1b\u663e\u7136\u300c$G$ \u662f\u5426\u662f\u4f18\u96c5\u7684\u300d\u8fd9\u4ef6\u4e8b\u662f\u300c\u70b9\u53cc\u72ec\u7acb\u7684\u300d\uff0c\u5373\u300c$G$ \u662f\u4f18\u96c5\u7684\u300d\u7684\u5145\u5206\u5fc5\u8981\u6761\u4ef6\u662f\u300c$G$ \u7684\u6bcf\u4e2a\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u90fd\u662f\u4f18\u96c5\u7684\u300d\uff0c\u8fd9\u662f\u56e0\u4e3a\u8de8\u4e24\u4e2a\u4e0d\u540c\u7684\u70b9\u53cc\u8fde\u901a\u5206\u91cf\u4e4b\u95f4\u662f\u4e0d\u5b58\u5728\u73af\u7684\u3002\u90a3\u4e48\uff0c\u4e00\u5f20\u70b9\u53cc\u8fde\u901a\u56fe $C$ \u4ec0\u4e48\u65f6\u5019\u662f\u4f18\u96c5\u7684\uff1f\u6211\u4eec\u6709\u4ee5\u4e0b\u7ed3\u8bba\uff1a\n\n\u5206\u6790 $2$. \u4e00\u5f20\u70b9\u53cc\u8fde\u901a\u56fe $C$ \u662f\u4f18\u96c5\u7684\uff0c\u5f53\u4e14\u4ec5\u5f53 $C$ \u5f62\u5982\u300c\u4e00\u4e2a\u7b80\u5355\u73af\u518d\u52a0\u4e0a\u82e5\u5e72\u6761\u76f8\u540c\u7684\u5f26\u300d\u7684\u5f62\u5f0f(\u9664\u5374 $C$ \u53ea\u5305\u542b\u6709\u4e24\u4e2a\u7ed3\u70b9\u7684\u7279\u6b8a\u60c5\u5f62\u4ee5\u5916)\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\u5728 $C$ \u4e2d\uff0c\u9664\u5374\u67d0\u4e24\u4e2a\u7ed3\u70b9 $S,T$ \u4ee5\u5916\uff0c\u5176\u4ed6\u6240\u6709\u7ed3\u70b9\u7684\u5ea6\u6570\u90fd $=2$\u3002\u6211\u4eec\u8003\u8651\u5bfb\u627e\u5230\u4e24\u4e2a $\\geq3$ \u5ea6\u7684\u7ed3\u70b9 $S,T$\uff0c\u6211\u4eec\u5e0c\u671b $S,T$ **\u5171\u5904\u5728\u4e00\u4e2a\u73af\u4e0a\u4e14\u8fd8\u5b58\u5728 $S,T$ \u4e4b\u95f4\u7684\u5f26**(\u5373 $S,T$ \u4e4b\u95f4\u5b58\u5728 $3$ \u6761\u4e0d\u76f8\u4ea4\u7684\u8def\u5f84)\uff0c\u56e0\u4e3a\u8fd9\u6837\u4e00\u6765\uff0c$C$ \u7684\u7ed3\u6784\u5c31\u5df2\u7ecf\u5927\u81f4\u786e\u5b9a\u4e0b\u6765\u4e86\u3002\n\n\u8003\u8651\u70b9\u53cc\u8fde\u901a\u56fe\u7684\u6027\u8d28\uff1a\u5728\u70b9\u53cc\u8fde\u901a\u56fe\u4e2d\uff0c**\u8fc7\u4efb\u610f\u4e24\u4e2a\u7ed3\u70b9 $u,v$ \u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a\u7b80\u5355\u73af**\u3002\u9664\u5374\u7279\u6b8a\u60c5\u5f62\u4ee5\u5916\uff0c\u7531\u4e8e $C$ \u662f\u70b9\u53cc\u8fde\u901a\u56fe\uff0c\u6545\u800c $C$ \u4e2d\u4e00\u5b9a\u5b58\u5728\u81f3\u5c11\u4e00\u4e2a\u7b80\u5355\u73af\uff1b\u6211\u4eec\u8003\u8651\u5176\u4e2d\u4efb\u610f\u4e00\u4e2a\u7b80\u5355\u73af\u3002\n\n\u8003\u8651\u8be5\u7b80\u5355\u73af\u4e0a\u7684\u7ed3\u70b9\u5206\u522b\u88ab\u54ea\u4e9b\u7b80\u5355\u73af\u6240\u5305\u542b\uff1a\u82e5\u5b58\u5728\u53e6\u5916\u4e00\u4e2a\u7b80\u5355\u73af\uff0c\u4e0e\u8be5\u7b80\u5355\u73af\u62e5\u6709 $\\geq2$ \u4e2a\u4ea4\u70b9\uff0c\u5219\u82e5\u4e24\u7b80\u5355\u73af\u4e4b\u95f4\u7684\u4ea4\u662f**\u8fde\u7eed\u7684\u4e00\u6bb5**\uff0c\u5219\u663e\u7136\u53ef\u4ee5\u53bb\u8be5\u8fde\u7eed\u6bb5\u7684\u6bb5\u9996\u6bb5\u5c3e\u4f5c\u4e3a $S,T$\uff1b\u5426\u5219\u6211\u4eec\u9009\u53d6\u9760\u5f97\u6700\u8fd1\u7684\u4e24\u4e2a(\u5176\u4e4b\u95f4\u4ea4\u7684\u90e8\u5206**\u4e0d\u8fde\u7eed\u7684**)\u4ea4\u70b9\u4f5c\u4e3a $S,T$\uff0c\u5219 $S,T$ \u9664\u4e86\u5171\u5904\u5728\u539f\u6765\u7684\u7b80\u5355\u73af\u4e0a\u4ee5\u5916\uff0c\u53c8\u6709\u53e6\u5916\u4e00\u4e2a\u73af\u4e0a\u7684\u8def\u5f84\u4f5c\u4e3a\u4e00\u6761\u5f26\uff0c\u4e8c\u8005\u4e4b\u95f4\u5c31\u627e\u5230\u4e86 $3$ \u6761\u4e0d\u76f8\u4ea4\u7684\u8def\u5f84\u3002\n\n\u5426\u5219\u82e5\u5b58\u5728\u53e6\u5916\u4e00\u4e2a\u7b80\u5355\u73af\u4e0e\u5176\u6070\u62e5\u6709 $1$ \u4e2a\u4ea4\u70b9\uff0c\u8bbe\u8be5\u4ea4\u70b9\u662f $\\tau$\uff0c\u6211\u4eec\u5728\u4e24\u4e2a\u7b80\u5355\u73af\u4e0a\u5404\u53d6\u4e00\u4e2a $\\tau$ \u4ee5\u5916\u7684\u7ed3\u70b9 $u,v$\uff0c\u5219\u7531\u70b9\u53cc\u8fde\u901a\u56fe\u7684\u6027\u8d28\u53ef\u77e5\u8fc7 $u,v$ \u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a\u7b80\u5355\u73af\uff1b\u524d\u9762\u5df2\u7ecf\u8bf4\u8fc7\uff0c\u82e5 $C$ \u4e2d\u5b58\u5728\u4e24\u4e2a\u6709 $\\geq2$ \u4e2a\u4ea4\u70b9\u7684\u7b80\u5355\u73af\u5219 $S,T$ \u5c31\u5df2\u7ecf\u627e\u5230\uff0c\u6545\u800c\u6211\u4eec\u53ef\u4ee5\u5047\u8bbe $C$ \u4e2d\u4efb\u610f\u4e24\u4e2a\u7b80\u5355\u73af\u7684\u4ea4\u70b9\u4e2a\u6570 $\\leq1$\uff1b\u56e0\u6b64\uff0c\u8be5\u300c\u8fc7 $u,v$ \u7684\u7b80\u5355\u73af\u300d\u4e0e\u539f\u6765\u7b80\u5355\u73af\u7684\u4ea4\u70b9**\u53ea\u6709** $u$\u3001\u4e0e\u53e6\u4e00\u4e2a\u7b80\u5355\u73af\u7684\u4ea4\u70b9**\u53ea\u6709** $v$\uff1b\u6545\u800c\u53ef\u4ee5\u76f4\u63a5\u53d6 $u,v$ \u4f5c\u4e3a $S,T$\uff0c\u5219 $S,T$ \u9664\u4e86\u5171\u5904\u5728\u8be5\u300c\u8fc7 $u,v$ \u7684\u7b80\u5355\u73af\u300d\u4ee5\u5916\uff0c\u53c8\u6709 $u\\sim\\tau\\sim v$ \u4f5c\u4e3a\u4e00\u6761\u5f26\uff0c\u4e8c\u8005\u4e4b\u95f4\u4e5f\u5c31\u627e\u5230\u4e86 $3$ \u6761\u4e0d\u76f8\u4ea4\u7684\u8def\u5f84\u3002\n\n\u6700\u540e\u82e5\u6240\u6709\u5176\u4ed6\u7684\u7b80\u5355\u73af\u4e0e\u5176\u90fd\u6ca1\u6709\u4efb\u4f55\u4ea4\u70b9\uff0c\u8bf4\u660e $C$ \u5c31\u662f\u8be5\u7b80\u5355\u73af\uff0c\u8fd9\u6837\u7684\u60c5\u5f62\u663e\u7136\u662f\u7b26\u5408\u8981\u6c42\u7684\u3002\n\n\u5426\u5219\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u627e\u5230\u4e86\u4e24\u4e2a\u8282\u70b9 $S,T$\uff0c\u5176\u4e4b\u95f4\u5b58\u5728\u7740 $3$ \u6761\u4e0d\u76f8\u4ea4\u7684\u8def\u5f84\u3002\u5c06 $S,T$ \u4e0e\u8fd9 $3$ \u6761\u4e0d\u76f8\u4ea4\u7684\u8def\u5f84**\u770b\u4f5c\u4e00\u4e2a\u300c\u6574\u4f53\u300d**\uff0c\u6211\u4eec\u8003\u8651\u628a $C$ \u7684\u5176\u4ed6\u90e8\u5206\u5168\u90e8\u90fd\u6574\u5408\u5230\u8fd9\u4e2a\u300c\u6574\u4f53\u300d\u91cc\u6765\u3002\n\n\u5220\u53bb\u8be5\u300c\u6574\u4f53\u300d\u7684\u6240\u6709\u8fb9\u540e\uff0c\u82e5\u8be5\u300c\u6574\u4f53\u300d\u4e2d\u7684\u6240\u6709\u7ed3\u70b9\u7684\u5ea6\u6570\u5747 $=0$\uff0c\u5219\u8bf4\u660e $C$ \u5c31\u662f\u8be5\u300c\u6574\u4f53\u300d\uff0c\u8bba\u8bc1\u7ed3\u675f\uff1b\u5426\u5219\u82e5\u8fd8\u5b58\u5728\u5ea6\u6570 $\\neq0$ \u7684\u7ed3\u70b9 $u$\uff0c\u6211\u4eec\u4ece $u$ \u51fa\u53d1\u4efb\u610f\u6e38\u8d70\uff0c\u6700\u540e**\u603b\u80fd\u591f\u6e38\u8d70\u5230\u8be5\u300c\u6574\u4f53\u300d\u4e2d\u7684\u53e6\u5916\u4e00\u4e2a\u8282\u70b9 $v$ \u4e0a**(\u5426\u5219 $u$ \u5c31\u662f\u5272\u70b9\u4e86\uff0c\u4e0e\u70b9\u53cc\u7684\u6761\u4ef6\u76f8\u77db\u76fe)\u3002\u8003\u8651 $u,v$\uff0c\u82e5 $(u,v)=(S,T)$\uff0c\u5219\u76f4\u63a5**\u5c06\u300c\u6e38\u8d70\u8def\u5f84\u300d\u52a0\u5165\u5230\u8be5\u300c\u6574\u4f53\u300d\u5f53\u4e2d\u53bb**\u5373\u53ef\uff1b\u5426\u5219\u5206\u7c7b\u8ba8\u8bba\uff1a(1) $\\{u,v\\}$ \u4e2d\u5b58\u5728 $S$ \u6216 $T$ (2) $u,v$ \u539f\u6765\u5728\u8be5\u300c\u6574\u4f53\u300d\u4e2d\u7684\u540c\u4e00\u6761\u5f26\u4e0a (3) $u,v)$ \u539f\u6765\u5728\u8be5\u300c\u6574\u4f53\u300d\u4e2d\u4e0d\u540c\u7684\u4e24\u6761\u5f26\u4e0a\uff0c\u5bb9\u6613\u8bf4\u660e\u77db\u76fe\u3002\n\n\u8fd9\u6837\u4e00\u6765\uff0c\u6211\u4eec\u5c31\u8bf4\u660e\u4e86\u4e00\u5f20\u70b9\u53cc\u8fde\u901a\u56fe $C$ \u662f\u4f18\u96c5\u7684\u7684\u5145\u5206\u5fc5\u8981\u6761\u4ef6\u3002",
        "postTime": 1652707802,
        "uid": 130897,
        "name": "\u7480\u74a8\u661f\u7a7a1",
        "ccfLevel": 9,
        "title": "\u6d1b\u8c37 P8331 \u9898\u89e3"
    }
]