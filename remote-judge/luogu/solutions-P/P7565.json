[
    {
        "content": "\u6765\u8bb2\u4e2a\u6709\u70b9\u5f02\u7c7b\uff0c\u4e0d\u7528\u70b9\u5206\u6cbb\u7684\u5355 $\\log$ \u505a\u6cd5\u3002\n\n\u5728[\u6211\u7684\u535a\u5ba2](https://www.cnblogs.com/Dreamerkk/p/17175779.html)\u67e5\u770b\u3002\n\n---\n\n\u9996\u5148\u6211\u4eec\u89c2\u5bdf\u53d1\u73b0\u5728\u5947\u6570\u7684\u65f6\u5019\u7b54\u6848\u662f $1$\uff0c\u5076\u6570\u7684\u65f6\u5019\u7b54\u6848\u624d\u6709\u53ef\u80fd\u4e0d\u662f $1$\uff0c\u5206\u6790\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u662f\u8fd9\u6837\uff1a\n\n\u8fd9\u79cd\u95ee\u9898\u4e00\u822c\u8003\u8651\u8fb9\u7684\u8d21\u732e\uff0c\u5bf9\u4e8e\u4e00\u6761\u8fb9\uff0c\u5047\u8bbe\u5b83\u7684\u4e00\u4fa7\u6709 $x$ \u4e2a\u4eba\uff0c\u53e6\u4e00\u4fa7\u6709 $i-x$ \u4e2a\u4eba\uff0c\u5219\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u628a\u96c6\u5408\u5730\u70b9\u5b9a\u5728\u8f83\u5c0f\u7684\u90a3\u4e00\u4fa7\u4ee5\u505a\u5230 $\\min(x,i-x)$ \u7684\u8d21\u732e\uff0c\u5982\u679c\u5b9a\u5728\u53e6\u4e00\u4fa7\u5219\u4f1a\u662f $\\max(x,i-x)$\uff0c\u8fd9\u6837\u4e0d\u4f1a\u4f7f\u7ed3\u679c\u53d8\u52a3\u5f53\u4e14\u4ec5\u5f53 $x=i-x=\\frac i 2$\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e24\u4fa7\u7684\u70b9\u662f\u4e00\u6837\u591a\u7684\u65f6\u5019\u624d\u53ef\u4ee5\u79fb\u52a8\u5230\u53e6\u4e00\u4fa7\u3002\n\n\u7ee7\u7eed\u89c2\u5bdf\u4e00\u4e0b\u5c31\u662f\u5bf9\u4e8e\u8fd9\u4e2a\u65e0\u6839\u6811\uff0c\u9009\u4e24\u4e2a\u4e0d\u4ea4\uff0c\u5927\u5c0f\u76f8\u7b49\u7684\u5b50\u6811\uff0c\u90a3\u4e48\u53ef\u80fd\u7684\u96c6\u5408\u5730\u70b9\u5c31\u662f\u4e24\u4e2a\u9876\u70b9\u7684\u8def\u5f84\u4e0a\u7684\u6240\u6709\u70b9\u3002\n\n\u6240\u4ee5\u95ee\u9898\u5c31\u88ab\u8f6c\u5316\u6210\u4e86\u5bf9\u4e8e\u6bcf\u4e2a $i$ \u9009\u4e24\u4e2a\u4e0d\u4ea4\uff0c\u5927\u5c0f\u76f8\u7b49\u7684\u5b50\u6811\u4f7f\u5f97\u5b83\u4eec\u7684\u9876\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u5c3d\u53ef\u80fd\u8fdc\u3002\n\n\u8003\u8651\u7ed9\u6811\u5b9a\u4e00\u4e2a\u6839\uff0c\u7136\u540e\u5c31\u9700\u8981\u5904\u7406\u4e24\u79cd\u60c5\u51b5\uff0c\u7b2c\u4e00\u79cd\u662f\u4e24\u4e2a\u6ca1\u6709\u5305\u542b\u5173\u7cfb\u7684\u5b50\u6811\u4e4b\u95f4\uff0c\u7b2c\u4e8c\u79cd\u662f\u4e00\u4e2a\u5b50\u6811\u548c\u53e6\u4e00\u4e2a\u5b50\u6811\u7684\u8865\u6811\u3002\n\n\u7136\u540e\u679a\u4e3e $i$\uff0c\u53ea\u8003\u8651\u8fd9\u4e9b $siz_u \\geq i$ \u7684\u70b9\u4e24\u4e24\u4e4b\u95f4\u7684\u6700\u957f\u7684\u8def\u5f84\uff0c\u7ecf\u5178\u5730\uff0c\u50cf dfs \u5e8f\u6c42 LCA \u4e00\u6837\u7684\u65b9\u5f0f\u5c06\u8def\u5f84\u770b\u6210\u4e09\u5143\u7ec4\uff1a $u\\to l\\to v$\uff0c\u5219\u957f\u5ea6\u4e3a $d_u+d_v-2 d_l$ \u5176\u4e2d $d_x$ \u8868\u793a $x$ \u7684\u6df1\u5ea6\uff0c\u8fd9\u4e2a\u4e1c\u897f\u53ef\u4ee5\u770b\u4f5c $a_x+b_y+a_z (x<y\\leq z)$ \u7684\u6700\u503c\uff0c\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\uff0c\u5c06 $b_x$ \u8bbe\u6210 $-d_x$\uff0c$a_x$ \u8bbe\u6210\u8d1f\u65e0\u7a77\u6216\u8005\u6df1\u5ea6\u5373\u53ef\u3002\n\n\u7136\u540e\u5c31\u662f\u4e00\u4e2a\u70b9\u548c\u5b83\u7684\u7956\u5148\u7684\u8865\u6811\u7684\u60c5\u51b5\uff0c\u8fd9\u79cd\u60c5\u51b5\u5f88\u7b80\u5355\uff0c\u76f4\u63a5\u5728\u52a0\u5165\u67d0\u4e2a\u70b9\u7684\u65f6\u5019\u67e5\u4e0b\u5b83\u5b50\u6811\u5185\u5df2\u7ecf\u52a0\u5165\u7684\u70b9\u6216\u8005\u7956\u5148\u4e2d\u5df2\u7ecf\u52a0\u5165\u7684\u70b9\u7684\u6700\u503c\u5c31\u884c\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(n\\log n)$\u3002",
        "postTime": 1677828158,
        "uid": 161697,
        "name": "\u10e6\ua9bf\u0fd0",
        "ccfLevel": 7,
        "title": "P7565 \u9898\u89e3"
    },
    {
        "content": "### \u524d\u8a00\n\n\u9898\u89e3\u533a\u90fd\u662f\u6dc0\u7c89\u8d28\u554a\uff0c\u849f\u84bb\u6ca1\u5b66\u597d\u6dc0\u7c89\u8d28\uff0c\u6240\u4ee5\u8fd9\u662f\u4e00\u7bc7\u865a\u6811\u7684\u9898\u89e3\u3002\n\n\u53c8\u662f%\u4f60\u8d5b\u8d5b\u65f6 AC \u7684\u4e00\u9053\u9898\uff0c\u4e2a\u4eba\u611f\u89c9\u662f\u6bd4\u4e0a\u4e00\u573a\u7684[\u6995\u6811\u4e4b\u5fc3](https://www.luogu.com.cn/problem/P4228)\u7b80\u5355\u5f88\u591a\uff08\u7d2b\u9898\u6bd4\u9ed1\u9898\u7b80\u5355\u597d\u50cf\u86ee\u6b63\u5e38\u7684\uff1f\uff1f\uff1f\uff09\u3002\n\n\u4f9d\u65e7\u662f\u987a\u7740\u8d5b\u65f6\u7684\u601d\u8def\u8bb2\u89e3\u8fd9\u9053\u9898\uff0c\u6211\u53ef\u80fd\u6709\u70b9\u7b28\u9700\u8981\u7ed5\u5f88\u591a\u5f2f\u624d\u80fd\u505a\u51fa\u6b63\u89e3\uff0c\u62dc\u8c22\u4e00\u773c\u79d2\u7684\u5927\u4f6c\u3002\n\n### \u6b63\u6587\n\n####  \u7ea6\u5b9a\n\n$siz_x$ \u4e3a\u4ee5 $x$ \u4e3a\u6839\u7684\u5b50\u6811\u5927\u5c0f\uff08\u5305\u62ec $x$\uff09\uff0c\n\n$j$ \u6307\u7684\u5176\u5b9e\u662f $\\frac{j}{2}$\uff0c\u56e0\u4e3a\u53ea\u7528\u505a\u5076\u6570\uff0c\u4f60\u9700\u8981\u5728\u4e0b\u6587\u9ed8\u8ba4\u8fd9\u4ef6\u4e8b\u60c5\uff08\u56e0\u4e3a\u8fd9\u4e48\u505a\u7684\u7406\u7531\u5f88\u597d\u7406\u89e3\uff09\u3002\n\n#### step-2\n\n\u89c2\u5bdf\u6837\u4f8b\u53d1\u73b0\u5947\u6570\u7b54\u6848\u5168\u662f $1$\uff0c\u601d\u8003\u4e00\u4e0b\u4e3a\u4ec0\u4e48\uff0c\u53d1\u73b0\u548c\u201c\u5e73\u8861\u201d\u6709\u5173\uff0c\u5bf9\u4e8e\u6bcf\u79cd\u9009\u4eba\u65b9\u6cd5\uff0c\u80fd\u6210\u4e3a\u4f1a\u8bae\u5730\u70b9\u7684\u70b9\u5176\u5b9e\u90fd\u5728\u4e00\u6761\u94fe\u4e0a\uff0c\u8fd9\u6761\u94fe\u4e24\u4e2a\u7aef\u70b9\u6240\u5904\u7684\u8fde\u901a\u5757\u5927\u5c0f\u90fd $\\ge j$\uff0c\u8fd9\u6837\u53ef\u4ee5\u4ece\u4e24\u7aef\u5206\u522b\u9009\u51fa $j$ \u4e2a\u70b9\uff0c\u4e8e\u662f\u8fbe\u5230\u4e86\u201c\u5e73\u8861\u201d\uff0c\u800c\u6211\u4eec\u8981\u6c42\u7684\u7b54\u6848\u5176\u5b9e\u5c31\u662f\u6700\u957f\u7684\u94fe\u7684\u70b9\u6570\uff08\u8fd8\u662f\u6ce8\u610f\u662f\u70b9\u6570\uff09\u3002\n\n#### step-1\uff08\u8fd9\u90e8\u5206\u4e3b\u8981\u8bb2\u8d5b\u65f6\u7684\u731c\u60f3\u4e0e\u9a8c\u8bc1\uff0c\u53ef\u4ee5\u8df3\u8fc7\uff09\n\n\u6709\u4e86\u4e0a\u9762\u7684\u7ed3\u8bba\u6211\u5f00\u59cb\u5927\u80c6\u731c\u60f3\uff1a\u7b54\u6848\u4e00\u5b9a\u5728\u76f4\u5f84\u4e0a\uff01\n\n\u7136\u540e\u53d1\u73b0\u662f\u9519\u7684\uff0c\u5f88\u5bb9\u6613 hack\uff0c\u5148\u6765\u4e00\u6761\u5f88\u957f\u7684\u94fe\u505a\u76f4\u5f84\uff0c\u7136\u540e\u5728\u5b83\u7684\u4e2d\u70b9\u4e0a\u8fde\u4e24\u4e2a\u6bd4\u8f83\u77ed\u7684\u94fe\uff0c\u8fd9\u4e24\u4e2a\u94fe\u7684\u672b\u5c3e\u8fde\u4e00\u5806\u70b9\uff0c\u663e\u7136\uff0c\u5f53 $j$ \u8f83\u5927\u65f6\u7b54\u6848\u4e0d\u4f1a\u5728\u76f4\u5f84\u4e0a\u3002\n\n\n\n#### step0\n\n\u5230\u6b64\u601d\u8def\u5c31\u65ad\u4e86\uff0c\u6211\u4eec\u4e0d\u59a8\u66b4\u529b\u679a\u4e3e\u94fe\u8bd5\u8bd5\uff0c\u8fd9\u6837\u94fe\u4f1a\u5206\u6210\u4e24\u7c7b\uff1a\n\n1. \u5bf9\u4e8e\u6ca1\u6709\u7956\u5148\u540e\u4ee3\u5173\u7cfb\u7684 $x,y$\uff0c\u94fe\u80fd\u8d21\u732e\u5230 $j$ \u7684\u6761\u4ef6\u662f $siz_x\\ge j,siz_y\\ge j$\uff08\u7406\u7531\u663e\u7136\uff09\u3002\n\n2. \u5bf9\u4e8e\u6709\u7956\u5148\u540e\u4ee3\u5173\u7cfb\u7684 $x,y$\uff0c\u6211\u4eec\u9ed8\u8ba4 $y$ \u662f $x$ \u7684\u7956\u5148\uff0c\u6211\u4eec\u8bb0 $z$ \u4e3a $y$ \u8fde\u5411 $x$ \u7684\u94fe\u4e0a\u7684\u7b2c\u4e8c\u4e2a\u70b9\uff08\u7b2c\u4e00\u4e2a\u70b9\u662f $y$ \u672c\u8eab\uff09\uff0c\u94fe\u80fd\u591f\u8d21\u732e\u5230 $j$ \u7684\u6761\u4ef6\u662f $siz_x\\ge j,n-siz_z\\ge j$ \u3002\n\n#### step1\n\n\u5bf9\u4e8e\u7b2c\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5bf9\u6bcf\u4e2a $j$ \u5efa\u4e00\u68f5\u865a\u6811\uff0c\u6240\u6709 $siz_x\\ge j$ \u7684 $x$ \u4ee5\u53ca\u5b83\u4eec\u7684 $\\text{lca}$ \u90fd\u5728\u865a\u6811\u4e2d\uff0c\u90a3\u4e48\u539f\u95ee\u9898\u8f6c\u5316\u6210\u6c42\u865a\u6811\u7684\u76f4\u5f84\uff0c\u4f1a\u53d1\u73b0\u76f4\u63a5\u505a\u865a\u6811\u603b\u70b9\u6570\u662f $O(n^2)$ \u7ea7\u522b\u7684\u3002\n\n\u6709\u4e00\u4e2a\u590d\u6742\u5ea6\u4e0a\u7684\u4f18\u5316\u662f\u5982\u679c\u4e00\u4e2a\u70b9 $y$ \u7684\u513f\u5b50 $x$ \u5df2\u7ecf $siz_x\\ge j$ \u4e86\u90a3\u4e48\u4e0d\u7528\u52a0\u5165\u70b9 $y$ \u4e86\uff0c\u56e0\u4e3a\u6c42\u76f4\u5f84\u65f6\u76f4\u5f84\u7684\u4e24\u7aef\u4e00\u5b9a\u662f\u53f6\u5b50\u8282\u70b9\uff08\u4f46\u662f\u5982\u679c\u662f $lca$ \u90a3\u4e48\u9700\u8981\u52a0\uff09\uff0c\u8fd9\u4e2a\u5c0f\u4f18\u5316\u53ef\u4ee5\u628a\u603b\u70b9\u6570\u4f18\u5316\u5230 $O(n\\log n)$\u3002\n\n\u6709\u4e86\u4ee5\u4e0a\u8fd9\u4e9b\u4e1c\u897f\u6211\u4eec\u5f97\u5230\u4e86\u4e24\u79cd\u590d\u6742\u5ea6\u4e0d\u540c\u7684\u5b9e\u73b0\uff08\u53d6\u51b3\u4e0e\u4f60\u5efa\u865a\u6811\u662f $O(n)$ \u8fd8\u662f $O(n\\log n)$\uff09\uff1a$O(n\\log n)$ \u6216 $O(n\\log^2n)$\u3002\n\n#### step2\n\n\u7b2c\u4e8c\u90e8\u5206\u770b\u8d77\u6765\u597d\u50cf\u4e0d\u592a\u597d\u505a\uff0c\u8bbe $y$ \u662f\u7956\u5148\uff0c $x$ \u662f\u513f\u5b50\uff0c\u6211\u4eec\u9700\u8981\u89e3\u51b3\u6210\u6c42 $x$ \u5b50\u6811\u5185 $siz_z\\ge j$ \u7684\u6df1\u5ea6\u6700\u6df1\u7684 $z$ \u7684\u6df1\u5ea6\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u5408\u5e76\u505a\uff0c\u7136\u540e\u6211\u4eec\u76f4\u63a5\u679a\u4e3e $y$\uff0c\u7136\u540e\u679a\u4e3e $y$ \u7684\u513f\u5b50 $son$\uff0c \u5bf9\u4e8e $y$ \u80fd\u5728 $son$ \u7684\u5b50\u6811\u5185\u8d21\u732e\u5230\u7684 $j$ \u7684\u9650\u5236\uff0c\u8fd0\u7528\u7b2c\u4e00\u90e8\u5206\u4f18\u5316\u7684\u601d\u60f3\u4e0d\u96be\u5199\u51fa $y$ \u80fd\u8d21\u732e\u5230\u7684 $j$ \u5728\u8fd9\u4e2a\u8303\u56f4\u5185 $[n - siz_y + 1,\\min(siz_{son},n - siz_{son})]$\u3002\n\n\u6613\u8bc1\u67e5\u8be2\u6b21\u6570\u662f $O(n\\log n)$ \u7ea7\u522b\u7684\uff0c\u76f4\u63a5\u505a\u662f $O(n\\log^2n)$ \u4f46\u662f\u6ce8\u610f\u5230\u4e00\u4e9b\u67e5\u8be2\u662f\u8fde\u7eed\u7684\u7684\u6240\u4ee5\u53ef\u4ee5\u6bcf\u6b21\u628a\u8fde\u7eed\u67e5\u8be2\u6d89\u53ca\u7684\u533a\u95f4\u5256\u51fa\u6765\u518d\u4e00\u4e2a\u4e00\u4e2a\u67e5\u8be2\uff0c\u8fd9\u6837\u603b\u590d\u6742\u5ea6\u5c31\u662f $O(n\\log n)$\u3002\n\n\u56e0\u6b64\u7b2c\u4e8c\u90e8\u5206\u7684\u590d\u6742\u5ea6\u4e3a $O(n\\log n)$ ~ $O(n\\log^2n)$\uff0c\u53d6\u51b3\u4e0e\u4f60\u52a0\u4e0d\u52a0\u4f18\u5316\u3002\n\n\u4e0b\u9762\u7ed9\u51fa\u4e00\u4efd $O(n\\log^2n)$ \u7684\u5b9e\u73b0\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 200005,Log = 20;\nstruct node{\n\tint ls,rs,mx;\n}t[N * Log];\nint _tot;\nvoid add(int &x,int l,int r,int v,int p){\n\tif(!x) x = ++_tot;\n\tt[x].mx = max(t[x].mx,p);\n\tif(l == r) return;\n\tint mid = (l + r) >> 1;\n\tif(v <= mid) add(t[x].ls,l,mid,v,p);\n\telse add(t[x].rs,mid + 1,r,v,p);\n}\nint merge(int x,int y){\n\tif(!x || !y) return x + y;\n\tt[x].mx = max(t[x].mx,t[y].mx);\n\tt[x].ls = merge(t[x].ls,t[y].ls);\n\tt[x].rs = merge(t[x].rs,t[y].rs);\n\treturn x;\n}\nint ask(int x,int l,int r,int lp,int rp){\n\tif(!x) return 0;\n\tif(lp <= l && rp >= r) return t[x].mx;\n\tint mid = (l + r) >> 1,tmp = 0;\n\tif(lp <= mid) tmp = max(tmp,ask(t[x].ls,l,mid,lp,rp));\n\tif(rp > mid) tmp = max(tmp,ask(t[x].rs,mid + 1,r,lp,rp));\n\treturn tmp;\n}\nvector<int>e[N],o[N];\nint n,fa[N][Log],d[N],siz[N],dfn[N],tot,dfnmx[N],ans[N];\nint head[N];\nvoid dfs(int x){\n\tadd(head[x],1,n,siz[x],d[x]);\n\tfor(int to:e[x]){\n\t\tif(to == fa[x][0]) continue;\n\t\tdfs(to);\n\t\tint ed = min(siz[to],n - siz[to]);\n\t\tfor(int i = n - siz[x];i <= ed;++i) ans[i] = max(ans[i],ask(head[to],1,n,i,n) - d[x] + 1);\n\t\thead[x] = merge(head[x],head[to]);\n\t}\n}\nvoid build(int x){\n\tdfnmx[x] = dfn[x] = ++tot;\n\tsiz[x] = 1;\n\tfor(int j = 1;j < Log;++j) fa[x][j] = fa[fa[x][j - 1]][j - 1];\n\tint mx1 = 0;\n\tfor(int to:e[x]){\n\t\tif(to == fa[x][0]) continue;\n\t\tfa[to][0] = x;\n\t\td[to] = d[x] + 1;\n\t\tbuild(to);\n\t\tsiz[x] += siz[to];\n\t\tmx1 = max(mx1,siz[to]);\n\t\tdfnmx[x] = max(dfnmx[x],dfnmx[to]);\n\t}\n\tfor(int i = mx1 + 1;i <= min(siz[x],n / 2);++i) o[i].push_back(x);\n}\nbool cmp(int x,int y){return dfn[x] < dfn[y];}\nint lca(int x,int y){\n\tif(d[x] < d[y]) swap(x,y);\n\tfor(int i = Log - 1;i >= 0;--i) if(fa[x][i] && d[fa[x][i]] >= d[y]) x = fa[x][i];\n\tif(x == y) return x;\n\tfor(int i = Log - 1;i >= 0;--i) if(fa[x][i] && fa[y][i] && fa[x][i] != fa[y][i])\n\t\tx = fa[x][i],y = fa[y][i];\n\treturn fa[x][0];\t\n}\nstack<int>s;\nint mx[2 * N],_mx[2 * N];\nint read(){\n\tint x = 0;\n\tchar ch = getchar();\n\tfor(;ch < '0' || ch > '9';ch = getchar());\n\tfor(;ch >= '0' && ch <= '9';ch = getchar()) x = x * 10 + ch - '0';\n\treturn x;\n}\nvoid write(int x){\n\tif(x > 9) write(x / 10);\n\tputchar('0' + x % 10);\n}\nint main(){\n\t//freopen(\"island.in\",\"r\",stdin);\n\t//freopen(\"island.out\",\"w\",stdout);\n\tn = read();\n\tfor(int i = 1,x,y;i < n;++i){\n\t\tx = read(),y = read();\n\t\te[x].push_back(y);\n\t\te[y].push_back(x);\n\t}\n\tbuild(1);\n\tfor(int i = 1;i <= n / 2;++i){\n\t\tsort(o[i].begin(),o[i].end(),cmp);\n\t\tint len = o[i].size();\n\t\tfor(int j = 1;j < len;++j) o[i].push_back(lca(o[i][j - 1],o[i][j]));\n\t\tsort(o[i].begin(),o[i].end(),cmp);\n\t\tlen = o[i].size();\n\t\tmemset(mx,0,sizeof(int) * len);\n\t\tmemset(_mx,0,sizeof(int) * len);\n\t\tfor(int j = 0;j < len;++j){\n\t\t\twhile(!s.empty()){\n\t\t\t\tif(dfn[o[i][j]] > dfnmx[o[i][s.top()]]){\n\t\t\t\t\tint x = s.top();\n\t\t\t\t\ts.pop();\n\t\t\t\t\tif(!s.empty()){\n\t\t\t\t\t\tint tmp = mx[x] + d[o[i][x]] - d[o[i][s.top()]];\n\t\t\t\t\t\tif(tmp > mx[s.top()]) _mx[s.top()] = mx[s.top()],mx[s.top()] = tmp;\n\t\t\t\t\t\telse if(tmp > _mx[s.top()]) _mx[s.top()] = tmp;\n\t\t\t\t\t}\n\t\t\t\t} \n\t\t\t\telse break;\n\t\t\t}\n\t\t\ts.push(j);\n//\t\t\tif(s.empty()) s.push(j);\n//\t\t\telse {\n//\t\t\t\tf[s.top()] = max(f[s.top()],d[o[i][j]] - d[o[i][s.top()]]);\n//\t\t\t\ts.push(j);\n//\t\t\t}\n\t\t}\n\t\twhile(!s.empty()){\n\t\t\tint x = s.top();\n\t\t\ts.pop();\n\t\t\tif(!s.empty()){\n\t\t\t\tint tmp = mx[x] + d[o[i][x]] - d[o[i][s.top()]];\n\t\t\t\tif(tmp > mx[s.top()]) _mx[s.top()] = mx[s.top()],mx[s.top()] = tmp;\n\t\t\t\telse if(tmp > _mx[s.top()]) _mx[s.top()] = tmp;\n\t\t\t}\n\t\t}\n\t\tfor(int j = 0;j < len;++j) ans[i] = max(ans[i],mx[j] + _mx[j] + 1);\n\t}\n\tdfs(1); \n\tfor(int i = 1;i <= n;++i){\n\t\tif(i & 1) putchar('1');\n\t\telse write(ans[i / 2]);\n\t\tputchar('\\n');\n\t} \n\treturn 0;\n}\n/*\n5\n1 2\n2 3\n4 2\n3 5\n\n7\n1 2\n2 3\n3 4\n4 5\n2 6\n3 7\n\n8\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n\n10\n1 2\n1 3\n1 4\n1 5\n1 6\n6 7\n7 8\n8 9\n9 10\n\n9\n1 2\n2 3\n2 4\n2 5\n5 6\n6 7\n5 8\n8 9\n\n5\n1 2\n2 3\n3 4\n4 5\n*/\n```\n",
        "postTime": 1677729610,
        "uid": 239433,
        "name": "WZKQWQ",
        "ccfLevel": 7,
        "title": "[JOISC 2021 Day3] \u30d3\u30fc\u30d0\u30fc\u306e\u4f1a\u5408 2\u9898\u89e3"
    },
    {
        "content": "### Description\n\n\u7ed9\u5b9a\u4e00\u9897 $n$ \u4e2a\u70b9\u7684\u6811\uff0c\u70b9\u96c6\u4e3a $V$\u3002$\\forall i \\in \\{1, 2, \\cdots, n\\}$\uff0c\u6c42\uff1a\n\n- \u5bf9\u4e8e\u4e00\u4e2a $S\\subseteq V$\uff0c\u5c06 $S$ \u4e2d\u7684\u70b9\u70b9\u6743\u8bbe\u4e3a $1$\uff0c\u5176\u4ed6\u7684\u70b9\u4e3a $0$\u3002\u8bbe $f(S)$ \u4e3a\u5e26\u6743\u91cd\u5fc3\u7684\u4e2a\u6570\u3002\n- \u6c42 $\\max\\limits_{|S|=i} f(S)$\u3002\n\n### Constraints\n\n$1\\le n\\le 2\\cdot 10^5$\u3002\n\n### Solution\n\n\u6211\u83dc\u6b7b\u4e86\uff0c\u4ec0\u4e48\u70b9\u5206\u6cbb\u500d\u589e\u6211\u5b8c\u5168\u4e0d\u4f1a\uff0c\u90a3\u4e48\u53ea\u597d\u4e71\u80e1\u4e86\u4e00\u4e2a\u7ebf\u6bb5\u6811\u5408\u5e76\u3002\u53d1\u73b0\u6211\u8fd9\u79cd\u65b9\u6cd5\u597d\u50cf\u6709\u70b9\u5c11\uff0c\u90a3\u5c31\u968f\u4fbf\u5199\u4e00\u4e2a\u4e86\u3002\n\n\u9996\u5148\u662f\u4e00\u4e2a\u5fc5\u8981\u7684\u8f6c\u5316\uff1a\n\n- \u5982\u679c $i$ \u4e3a\u5947\u6570\u7b54\u6848\u5fc5\u7136\u4e3a $1$\uff1b\n- \u5982\u679c $i$ \u4e3a\u5076\u6570\uff0c\u90a3\u4e48\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u6709\u4e24\u4e2a\u5b50\u6811\u4e2d\u5e26\u6743\u7684\u70b9\u6570\u6b63\u597d\u90fd\u4e3a $\\tfrac i 2$\uff0c\u90a3\u4e48\u4e24\u4e2a\u5b50\u6811\u6839\u8fde\u6210\u7684\u8def\u5f84\uff08\u5305\u62ec\u4e24\u7aef\uff09\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u91cd\u5fc3\u3002\u800c\u8981\u7b54\u6848\u5c3d\u53ef\u80fd\u5927\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u5728\u8fd9\u4e2a\u65e0\u6839\u6811\u4e0a\u627e\u51fa\u4e24\u4e2a $\\ge \\tfrac i 2$ \u7684\u5b50\u6811\u5373\u53ef\uff0c\u4e14\u4e24\u4e2a\u6839\u5c3d\u53ef\u80fd\u8fdc\u3002\n  - \u4e3a\u4e86\u65b9\u4fbf\uff0c\u8003\u8651\u76f4\u63a5\u7528\u201c$=\\tfrac i 2$\u201d\u53d6\u4ee3\u201c$\\ge \\tfrac i 2$\u201d\uff0c\u6700\u540e\u5bf9\u7b54\u6848\u6570\u7ec4\u505a\u4e00\u904d\u540e\u7f00 $\\max$ \u5373\u53ef\u3002\n\n\u7136\u540e\u5c31\u662f\u6bd4\u8f83\u4f20\u7edf\u7684\u8def\u5f84\u95ee\u9898\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u91cc\u7684\u5b50\u6811\u5927\u5c0f\u4e0d\u662f\u5bf9\u4e8e\u5f53\u524d\u5206\u6cbb\u533a\u57df\u800c\u8a00\u7684\uff0c\u800c\u662f\u4ece\u6574\u68f5\u6811\u6765\u770b\u3002\u7136\u540e\u5927\u6982\u662f\u4ec0\u4e48\u6709\u6839\u6811\u70b9\u5206\u6cbb\uff0c\u4e0d\u592a\u4f1a\u5c31\u629b\u6389\u4e86\u3002\n\n\u8003\u8651\u6811\u4e0a\u95ee\u9898\u7684\u53e6\u4e00\u4e2a\u7ecf\u5178\u601d\u8def\uff1a\u7ebf\u6bb5\u6811\u5408\u5e76\u3002\u4e3a\u4e86\u5b9e\u73b0\u8f6c\u5316\u9898\u610f\u4e2d\u4e24\u4e2a size \u914d\u5bf9\u7684\u8fc7\u7a0b\uff08\u8fd9\u79cd\u8bf4\u6cd5\u5e76\u4e0d\u51c6\u786e\uff0c\u4e0b\u6587\u4f1a\u63d0\u5230\uff09\uff0c\u6211\u4eec\u7684\u7ebf\u6bb5\u6811\u4ee5 size \u4e3a\u4e0b\u6807\uff0c\u4ee5\u6700\u5927\u53ef\u80fd\u7684\u6df1\u5ea6\u4e3a\u5bf9\u5e94\u503c\u3002\n\n\u5728\u5f53\u524d\u70b9 $x$\u200b\uff0c\u5408\u5e76\u4e24\u4e2a\u5b50\u6811\u7684\u7ebf\u6bb5\u6811\u65f6\uff0c\u5982\u679c\u5408\u5e76\u5230\u53f6\u5b50\u5c31\u53ef\u4ee5\u66f4\u65b0\u7b54\u6848\u4e86\u3002\u7531\u4e8e\u4e24\u70b9\u95f4\u8ddd\u79bb\u7684\u8ba1\u7b97\u8fd8\u9700\u8981 LCA \u7684\u6df1\u5ea6\uff0c\u6211\u4eec\u5728\u5408\u5e76\u662f\u987a\u4fbf\u5e26\u4e0a ${dep}_x$\u200b\u200b\u200b\u3002\u4f46\u8fd9\u6837\u5b58\u5728\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u9009\u53d6\u4e00\u4e2a\u5b50\u6811\u4e2d\u7684\u82e5\u5e72\u4e2a\u70b9\uff0c\u4f46\u5374\u4e0d\u4e00\u5b9a\u9009\u53d6\u6574\u4e2a\u5b50\u6811\u2014\u2014\u76f8\u5f53\u4e8e\u6211\u4eec\u9700\u8981\u7528\u8fd9\u4e2a\u5b50\u6811\u7684 $dep_x$\u200b \u53bb\u66f4\u65b0\u7ebf\u6bb5\u6811\u4e0a $[1, {siz}_x]$\u200b \u7684\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u3002\u89e3\u51b3\u65b9\u6848\uff1a\u5229\u7528\u52a8\u6001\u5f00\u70b9\uff0c\u6253\u4e0a\u533a\u95f4\u66f4\u65b0\u7684\u6807\u8bb0\uff0c\u5e76\u5728\u4e0b\u4f20\u65f6\u65b0\u5efa\u8282\u70b9\u3002\n\n\u8fd9\u6837\u53ef\u4ee5\u5b9e\u73b0\u5b50\u6811\u95f4\u7684\u4fe1\u606f\u5408\u5e76\uff0c\u4f46\u8fd8\u4e0d\u591f\uff1a\u7236\u4eb2\u65b9\u5411\u4e0a\u7684\u6211\u4eec\u5c1a\u672a\u8003\u8651\u3002\u5bb9\u6613\u53d1\u73b0\uff0c\u4e0a\u65b9\u7684\u70b9\u53ef\u4ee5\u9009\u62e9 $[1, n-{siz}_x]$ \u4e2a\uff0c\u4e0d\u59a8\u8bbe\u6bcf\u79cd\u9009\u62e9\u65b9\u5f0f\u8ddd\u79bb $x$ \u6700\u8fd1\u7684\u70b9\u4e3a $fa_x$\uff0c\u5982\u679c\u5b9e\u9645\u4e0a\u53ef\u4ee5\u66f4\u8fdc\u90a3\u4f1a\u5728\u4e0a\u9762\u66f4\u65b0\u3002\u73b0\u5728\u5bf9\u4e8e\u4f4d\u7f6e $[1, n-{siz}_x]$ \u6211\u4eec\u5728\u6253\u4e00\u4e2a\u4e0a\u4e0b\u6807\u8bb0\uff0c\u503c\u4e3a $dep_x -1$\u3002\u540c\u6837\u5728\u53f6\u5b50\u8282\u70b9\u4e0a\u7edf\u8ba1\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u3002\n\n\u6ce8\u610f pushdown \u65f6\u5e94\u5148\u4e0b\u4f20\u533a\u95f4\u66f4\u65b0\u6807\u8bb0\uff0c\u518d\u4e0b\u4f20\u4e0a\u4e0b\u6807\u8bb0\uff0cdfs \u662f\u4e5f\u7528\u8fd9\u6837\u7684\u987a\u5e8f\u3002pushdown \u5185\u5982\u679c\u4e0b\u4f20\u5230\u53f6\u5b50\u4e5f\u8981\u66f4\u65b0\u7b54\u6848\u3002\u6700\u540e\u4e00\u68f5\u603b\u7ebf\u6bb5\u6811\u9700\u8981\u628a\u6807\u8bb0\u4f20\u5e72\u51c0\u3002\u5176\u4ed6\u7ec6\u8282\u5728\u5199\u7684\u65f6\u5019\u5c31\u80fd\u53d1\u73b0\u4e86\u3002\u590d\u6742\u5ea6 $O(n\\log n)$\u3002\n\n### Code\n\n```cpp\n#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <vector>\nconst int N = 2e5 + 5;\nconst int K = 50;\nconst int inf = 0x3f3f3f3f;\n\nstd::vector<int> adj[N];\nint n, ans[N * 2];\n\nint siz[N], dep[N];\nvoid init(int x, int f) {\n  siz[x] = 1, dep[x] = dep[f] + 1;\n  for (int i = 0; i < (int)adj[x].size(); i++) {\n    int y = adj[x][i];\n    if (y == f) continue;\n    init(y, x), siz[x] += siz[y];\n  }\n}\n\n#define mid ((l + r) >> 1)\nint lc[N * K], rc[N * K], tot;\nint maxd[N * K], tag[N * K], fill[N * K];\ninline void pushdown(int x, int l, int r) {\n  if (fill[x]) {\n    if (!lc[x]) lc[x] = ++tot;\n    maxd[lc[x]] = std::max(maxd[lc[x]], fill[x]);\n    fill[lc[x]] = std::max(fill[lc[x]], fill[x]);\n    if (!rc[x]) rc[x] = ++tot;\n    maxd[rc[x]] = std::max(maxd[rc[x]], fill[x]);\n    fill[rc[x]] = std::max(fill[rc[x]], fill[x]);\n    fill[x] = 0;\n  }\n  if (tag[x] != inf) {\n    if (lc[x]) {\n      tag[lc[x]] = std::min(tag[x], tag[lc[x]]);\n      if (r - l == 1)\n        ans[l * 2] = std::max(ans[l * 2], tag[lc[x]] - maxd[lc[x]] + 1);\n    }\n    if (rc[x]) {\n      tag[rc[x]] = std::min(tag[x], tag[rc[x]]);\n      if (r - l == 1)\n        ans[r * 2] = std::max(ans[r * 2], tag[rc[x]] - maxd[rc[x]] + 1);\n    }\n    tag[x] = inf;\n  }\n}\nvoid insert(int& x, int l, int r, int ql, int qr, int d) {\n  if (ql > r || l > qr) return;\n  if (!x) x = ++tot;\n  if (ql <= l && r <= qr) {\n    fill[x] = std::max(fill[x], d);\n    maxd[x] = std::max(maxd[x], d);\n    return;\n  }\n  pushdown(x, l, r);\n  insert(lc[x], l, mid, ql, qr, d);\n  insert(rc[x], mid + 1, r, ql, qr, d);\n  maxd[x] = std::max(maxd[lc[x]], maxd[rc[x]]);\n}\nint merge(int x, int y, int l, int r, int cur) {\n  if (!x || !y) return x | y;\n  if (l == r) {\n    ans[l * 2] = std::max(ans[l * 2], maxd[x] + maxd[y] - cur * 2 + 1);\n    maxd[x] = std::max(maxd[x], maxd[y]);\n    return x;\n  }\n  pushdown(x, l, r);\n  pushdown(y, l, r);\n  lc[x] = merge(lc[x], lc[y], l, mid, cur);\n  rc[x] = merge(rc[x], rc[y], mid + 1, r, cur);\n  maxd[x] = std::max(maxd[lc[x]], maxd[rc[x]]);\n  return x;\n}\nint at(int x, int l, int r, int ql, int qr) {\n  if (ql > r || l > qr || !x) return 0;\n  if (ql <= l && r <= qr) return maxd[x];\n  pushdown(x, l, r);\n  return std::max(at(lc[x], l, mid, l, r), at(rc[x], mid + 1, r, l, r));\n}\nvoid update(int x, int l, int r, int ql, int qr, int dtop) {\n  if (!x || ql > r || l > qr) return;\n  if (ql <= l && r <= qr) {\n    tag[x] = std::min(tag[x], dtop);\n    if (l == r) ans[l * 2] = std::max(ans[l * 2], tag[x] - maxd[x] + 1);\n    return;\n  }\n  pushdown(x, l, r);\n  update(lc[x], l, mid, ql, qr, dtop);\n  update(rc[x], mid + 1, r, ql, qr, dtop);\n}\nvoid flush(int x, int l, int r) {\n  if (!x) return;\n  if (l == r) {\n    ans[l * 2] = std::max(ans[l * 2], maxd[x] - tag[x] + 1);\n    return;\n  }\n  pushdown(x, l, r);\n  flush(lc[x], l, mid);\n  flush(rc[x], mid + 1, r);\n}\n#undef mid\n\nint solve(int x, int f) {\n  int root = 0;\n  for (int i = 0; i < (int)adj[x].size(); i++) {\n    int y = adj[x][i];\n    if (y == f) continue;\n\n    int sub = solve(y, x);\n    root = merge(root, sub, 1, n, dep[x]);\n  }\n  insert(root, 1, n, 1, siz[x], dep[x]);\n  if (x != 1)\n    update(root, 1, n, 1, n - siz[x], dep[x] - 1);\n  return root;\n}\n\nsigned main() {\n  memset(tag, inf, sizeof(tag));\n\n  scanf(\"%d\", &n);\n  for (int i = 1, u, v; i < n; i++) {\n    scanf(\"%d%d\", &u, &v);\n    adj[u].push_back(v);\n    adj[v].push_back(u);\n  }\n\n  init(1, 0);\n  int root = solve(1, 0);\n  flush(root, 1, n);\n\n  for (int i = n; i; --i) {\n    ans[i] = std::max(ans[i], 1);\n    if (!(i & 1)) ans[i] = std::max(ans[i], ans[i + 2]);\n  }\n\n  for (int i = 1; i <= n; i++)\n    printf(\"%d\\n\", ans[i]);\n  return 0;\n}\n```\n\n\u540c\u6b65\u4e8e\uff1ahttps://www.cnblogs.com/-Wallace-/p/uoj618.html",
        "postTime": 1630051784,
        "uid": 61430,
        "name": "_Wallace_",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P7565 \u3010[JOISC 2021 Day3] \u30d3\u30fc\u30d0\u30fc\u306e\u4f1a\u5408 2\u3011"
    },
    {
        "content": "\u9996\u5148 $j$ \u4e3a\u5947\u6570\u65f6\u7b54\u6848\u4e3a $1$ \u3002\n\n\u7b80\u5355\u8bc1\u660e\uff0c$j$ \u4e2a\u70b9\u4e4b\u95f4\u7684\u91cd\u5fc3\u4e00\u5b9a\u662f\u4e00\u4e2a\u53ef\u671f\u5f85\u70b9\u3002\n\n\u6839\u636e\u91cd\u5fc3\u7684\u6027\u8d28\uff0c\u6240\u6709\u53ef\u80fd\u7684\u91cd\u5fc3\u4e00\u5b9a\u6784\u6210\u4e00\u6761\u94fe\u3002\n\n\u90a3\u4e48\u5df2\u77e5\u4e00\u4e2a\u91cd\u5fc3\u4e3a $x$ \uff0c\u5982\u679c\u8981\u79fb\u52a8\u5230\u4e00\u4e2a\u76f8\u90bb\u70b9 $y$ \uff0c\u5219\u65ad\u5f00 $(x,y)$ \u540e\u4e24\u9897\u5b50\u6811\u5927\u5c0f\u4e00\u5b9a\u76f8\u540c\u3002\n\n\u800c $j$ \u4e3a\u5947\u6570\u65f6\u4e24\u8fb9\u4e00\u5b9a\u4e00\u5947\u4e00\u5076\uff0c\u4e0d\u53ef\u80fd\u76f8\u7b49\u3002\n\n\u540c\u7406\u6211\u4eec\u53ef\u4ee5\u63a8\u51fa\u5bf9\u4e8e\u5076\u6570 $j$ \u7684\u7b54\u6848\u662f\u6700\u957f\u7684\u94fe\u7684\u957f\u5ea6\u4f7f\u5f97\u94fe\u4e24\u7aef\u7684\u5b50\u6811\u5927\u5c0f $\\ge \\dfrac{j}{2}$ \u3002\n\n\u6c42\u6240\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u94fe\u4e2d\u957f\u5ea6\u6700\u5927\u7684\uff0c\u6bd4\u8f83\u5957\u8def\u7684\u505a\u6cd5\u662f\u70b9\u5206\u6cbb\u3002\n\n\u6211\u4eec\u5f00\u4e00\u4e2a\u6876\u8bb0\u5f55\u540e\u7f00\u6700\u5927\u503c\u5373\u53ef\uff0c\u66f4\u65b0\u7b54\u6848\u65f6\u5408\u5e76\u4e24\u4e2a\u6876\u5373\u53ef\u3002\n\n\u4e00\u4e2a\u7ec6\u8282\u662f\u70b9\u5206\u6cbb\u65f6\u5355\u94fe\u53ef\u4ee5\u5355\u72ec\u4f5c\u4e3a\u7b54\u6848\uff0c\u56e0\u4e3a\u5206\u6cbb\u65f6\u53d6\u7684\u662f\u91cd\u5fc3\uff0c\u6240\u4ee5\u6bcf\u4e00\u4e2a\u5b50\u6811\u5927\u5c0f\u4e00\u5b9a $\\le \\dfrac{size}{2}$ \u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathcal{O}(N\\log N)$ \u3002\n\n```cpp\n#include<bits/stdc++.h>\n#define rep(i,a,b) for(int i=a;i<=b;i++)\n#define pre(i,a,b) for(int i=a;i>=b;i--)\n#define N 200005\nusing namespace std;\nint n,h[N],tot,v[N],sz[N],u[N],w[N],ed,mn,cs,ans[N];\nstruct edge{int to,nxt;}e[N<<1];\nvoid add(int x,int y){e[++tot].nxt=h[x];h[x]=tot;e[tot].to=y;}\nvoid find(int x,int fa){\n\tsz[x]=1;int cur=0;\n\tfor(int i=h[x];i;i=e[i].nxt)if(e[i].to!=fa&&!v[e[i].to])\n\t\tfind(e[i].to,x),cur=max(cur,sz[e[i].to]),sz[x]+=sz[e[i].to];\n\tcur=max(cur,cs-sz[x]);\n\tif(cur<mn)mn=cur,ed=x;\n}\nvoid dfs(int x,int fa,int dis){\n\tsz[x]=1;\n\tfor(int i=h[x];i;i=e[i].nxt)if(e[i].to!=fa&&!v[e[i].to])\n\t\tdfs(e[i].to,x,dis+1),sz[x]+=sz[e[i].to];\n\tw[sz[x]]=max(w[sz[x]],dis);\n}\nvoid calc(int x,int wsz){\n\tcs=mn=wsz;find(x,0);x=ed;\n\tint ct=0;v[x]=1;\n\tfor(int i=h[x];i;i=e[i].nxt)if(!v[e[i].to]){\n\t\tint y=e[i].to;\n\t\tdfs(y,x,1);ct=max(ct,sz[y]);\n\t\tpre(j,sz[y],1)w[j]=max(w[j],w[j+1]),ans[j*2]=max(ans[j*2],w[j]+u[j]);\n\t\trep(j,1,sz[y])u[j]=max(u[j],w[j]),w[j]=0;\n\t}\n\trep(i,1,ct)u[i]=0;\n\tfor(int i=h[x];i;i=e[i].nxt)if(!v[e[i].to])calc(e[i].to,sz[e[i].to]);\n}\nint main(){\n\tscanf(\"%d\",&n);\n\trep(i,1,n-1){\n\t\tint x,y;scanf(\"%d%d\",&x,&y);\n\t\tadd(x,y);add(y,x);\n\t}\n\tcalc(1,n);rep(i,1,n)printf(\"%d\\n\",ans[i]+1);\n\treturn 0;\n}\n```",
        "postTime": 1622297450,
        "uid": 119261,
        "name": "7KByte",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011[JOISC 2021 Day3] \u30d3\u30fc\u30d0\u30fc\u306e\u4f1a\u5408 2"
    },
    {
        "content": "\u8f6c\u5316\u4e00\u4e0b\u9898\u610f\uff0c\u5f97\u5230\uff1a\n\n- $\\forall 1 \\leq i \\leq n$\uff0c\u6c42 $\\max |S|$ \u4f7f\u5f97 $\\exists T \\subseteq \\{1, 2, \\cdots, n\\}$\uff0c$|T| = i$\uff0c$S$ \u4e3a\u7ed9 $T$ \u4e2d\u70b9\u8d4b\u503c\u4e3a $1$\u3001\u5176\u4ed6\u70b9\u8d4b\u503c\u4e3a $0$ \u65f6\u7684**\u5e26\u6743\u91cd\u5fc3**\u96c6\u5408\u3002\n\n\u8003\u8651\u5e26\u6743\u91cd\u5fc3\u7684\u6027\u8d28\uff0c\u6ce8\u610f\u5230\u91cd\u5fc3\u7684\u6240\u6709\u53ef\u9009\u65b9\u6848\u5728 $T$ \u56fa\u5b9a\u65f6\u4e00\u5b9a\u53ef\u4ee5\u88ab\u8868\u793a\u4e3a**\u4e00\u6761\u94fe\u4e0a\u7684\u6240\u6709\u70b9**\u3002\n\n\u73b0\u5728\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u91cd\u5fc3\u4ec0\u4e48\u65f6\u5019\u53ef\u4ee5\u79fb\u52a8\u3002\u5728\u91cd\u5fc3\u4ece $u$ \u79fb\u52a8\u5230 $v$ \u65f6\uff0c\u8ddd\u79bb\u548c\u7684\u53d8\u5316\u91cf\u5373\u4e3a\u5728 $u$ \u8fde\u901a\u5757\u4e2d\u4e14\u5728 $S$ \u4e2d\u7684\u70b9\u6570\u51cf\u53bb\u5728 $v$ \u8fde\u901a\u5757\u4e2d\u4e14\u5728 $S$ \u4e2d\u7684\u70b9\u6570\u3002\u4e3a\u4e86\u8ba9\u8ddd\u79bb\u548c\u4e0d\u53d8\uff0c\u4e24\u8fb9\u5728 $S$ \u4e2d\u7684\u70b9\u6570\u5fc5\u987b\u76f8\u7b49\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u6761\u94fe\u4e0a\u9664\u4e24\u7aef\u5916\uff0c\u4e2d\u95f4\u70b9\u7684\u5b50\u6811\u4e2d\u4e0d\u80fd\u6709\u4efb\u4f55\u4e00\u4e2a\u70b9\u5728 $S$ \u4e2d\uff0c\u4e14\u5728\u94fe\u6ca1\u6709\u9000\u5316\u4e3a\u70b9\u7684\u60c5\u51b5\u4e0b\uff0c\u4e24\u7aef\u5b50\u6811\u5927\u5c0f\u5fc5\u987b\u76f8\u7b49\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u7ed3\u8bba\uff1a\n\n- \u5f53 $i$ \u4e3a\u5947\u6570\uff0c\u91cd\u5fc3\u552f\u4e00\uff0c\u5219\u7b54\u6848\u4e3a $1$\u3002\n- \u5f53 $i$ \u4e3a\u5076\u6570\uff0c\u7b54\u6848\u4e3a $\\max (dis(u, v) + 1)$\uff0c\u6ee1\u8db3\u628a $u \\to v$ \u4e0a\u7684\u6240\u6709\u8def\u5f84\u5272\u65ad\u540e\uff0c$size_u, size_v \\geq \\frac{i}{2}$\uff08\u5373\u6211\u4eec\u53ef\u4ee5\u4ece\u4e24\u8fb9\u5404\u9009\u51fa $\\frac{i}{2}$ \u4e2a\u70b9\uff09\u3002\n\n\u65e0\u6839\u6811\u4e0d\u65b9\u4fbf\u8003\u8651\uff0c\u63a5\u4e0b\u6765\u8f6c\u5316\u4e3a\u4ee5 $1$ \u4e3a\u6839\u7684\u6709\u6839\u6811\uff0c\u4e8e\u662f\u9700\u8981\u5206\u7c7b\u8ba8\u8bba\uff1a\n\n1. $u, v$ \u4e0d\u5728\u4e00\u6761\u94fe\u4e0a\n\n\u8003\u8651\u7528 set \u7ef4\u62a4\u5f53\u524d\u6ee1\u8db3 $size_u \\geq \\frac{i}{2}$ \u7684\u70b9\u96c6\uff0c\u6bcf\u6b21\u53d6\u51fa\u6700\u5c0f\u7684\u6ee1\u8db3 $size_u < \\frac{i}{2}$ \u7684 $u$ \u5e76\u5c06\u5176\u5220\u9664\uff0c\u82e5\u6b64\u65f6 $fa_u$ \u7684\u5b50\u6811\u5185\u5df2\u7ecf\u6ca1\u6709\u5176\u5b83\u88ab\u9009\u7684\u70b9\u4e86\uff0c\u5219\u52a0\u5165 $fa_u$\u3002\n\n\u628a\u6240\u6709 $size_u \\geq \\frac{i}{2}$ \u4e14\u4e92\u76f8\u6ca1\u6709\u7956\u5148\u540e\u4ee3\u5173\u7cfb\u7684\u70b9\u62ff\u51fa\u6765\u5efa\u865a\u6811\uff0c\u6b64\u65f6\u865a\u6811\u5927\u5c0f\u662f $O(\\frac{n}{i})$ \u7684\u3002\u5728\u865a\u6811\u4e0a\u6811\u5f62 dp \u5373\u53ef\u3002\n\n2. $u, v$ \u5728\u4e00\u6761\u94fe\u4e0a\n\n\u8003\u8651\u5728\u4e0a\u6587\u63d0\u5230 set \u4e2d\u679a\u4e3e\u8f83\u6df1\u70b9 $u$\uff0c\u5219\u6211\u4eec\u9700\u8981\u627e\u5230 $u$ \u7684\u4e00\u4e2a\u6700\u6d45\u7956\u5148 $v'$\uff0c\u4f7f\u5f97 $size_{v'} \\leq n - \\frac{i}{2}$\uff0c\u5219\u6700\u4f18\u7684 $v = fa_{v'}$\u3002\u500d\u589e\u5373\u53ef\u3002\n\n\u7efc\u4e0a\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n \\log n \\ln n)$\u3002\n\n\u4ee3\u7801\uff1a\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <set>\n#include <stack>\n#include <cmath>\n\nusing namespace std;\n\ntypedef struct {\n\tint nxt;\n\tint end;\n\tint dis;\n} Edge;\n\nint in[200007];\n\ntypedef struct Node_tag {\n\tint pos;\n\tint dfn;\n\tNode_tag(){}\n\tNode_tag(int pos_){\n\t\tpos = pos_;\n\t\tdfn = in[pos];\n\t}\n} Node;\n\nint cnt1 = 0, cnt2 = 0;\nint head1[200007], depth[200007], fa[200007][27], size[200007], out[200007], tree[200007], head2[200007], max_dis[200007];\nbool vis[200007], mark[200007];\nEdge edge1[400007], edge2[200007];\nNode dot[400007];\nset<pair<int, int> > se;\nstack<int> stk;\n\nbool operator <(const Node a, const Node b){\n\treturn a.dfn < b.dfn;\n}\n\ninline void add_edge1(int start, int end){\n\tcnt1++;\n\tedge1[cnt1].nxt = head1[start];\n\thead1[start] = cnt1;\n\tedge1[cnt1].end = end;\n}\n\nvoid dfs1(int u, int father, int &id){\n\tint t;\n\tdepth[u] = depth[father] + 1;\n\tt = log2(depth[u]);\n\tin[u] = ++id;\n\tfa[u][0] = father;\n\tsize[u] = 1;\n\tfor (register int i = 1; i <= t; i++){\n\t\tfa[u][i] = fa[fa[u][i - 1]][i - 1];\n\t}\n\tfor (register int i = head1[u]; i != 0; i = edge1[i].nxt){\n\t\tint x = edge1[i].end;\n\t\tif (x != father){\n\t\t\tdfs1(x, u, id);\n\t\t\tsize[u] += size[x];\n\t\t}\n\t}\n\tout[u] = id;\n}\n\ninline int lowbit(int x){\n\treturn x & (-x);\n}\n\ninline void add(int n, int x, int k){\n\twhile (x <= n){\n\t\ttree[x] += k;\n\t\tx += lowbit(x);\n\t}\n}\n\ninline int get_sum(int x){\n\tint ans = 0;\n\twhile (x > 0){\n\t\tans += tree[x];\n\t\tx -= lowbit(x);\n\t}\n\treturn ans;\n}\n\ninline int get_last(int u, int k){\n\tif (size[u] > k) return 0x7fffffff;\n\tfor (register int i = log2(depth[u]); i >= 0; i--){\n\t\tif (fa[u][i] != 0 && size[fa[u][i]] <= k) u = fa[u][i];\n\t}\n\treturn depth[fa[u][0]];\n}\n\ninline int lca(int u, int v){\n\tif (depth[u] < depth[v]) swap(u, v);\n\twhile (depth[u] > depth[v]) u = fa[u][(int)log2(depth[u] - depth[v])];\n\tif (u == v) return u;\n\tfor (register int i = log2(depth[u]); i >= 0; i--){\n\t\tif (fa[u][i] != fa[v][i]){\n\t\t\tu = fa[u][i];\n\t\t\tv = fa[v][i];\n\t\t}\n\t}\n\treturn fa[u][0];\n}\n\ninline bool check(int u, int v){\n\treturn in[u] <= in[v] && in[v] <= out[u];\n}\n\ninline void add_edge2(int start, int end, int dis){\n\tcnt2++;\n\tedge2[cnt2].nxt = head2[start];\n\thead2[start] = cnt2;\n\tedge2[cnt2].end = end;\n\tedge2[cnt2].dis = dis;\n}\n\nint dfs2(int u){\n\tif (mark[u]){\n\t\tmax_dis[u] = 0;\n\t\treturn 0;\n\t}\n\tint cmax_dis = -1e9, ans = 0;\n\tmax_dis[u] = -1e9;\n\tfor (register int i = head2[u]; i != 0; i = edge2[i].nxt){\n\t\tint x = edge2[i].end, y;\n\t\tans = max(ans, dfs2(x));\n\t\ty = max_dis[x] + edge2[i].dis;\n\t\tif (max_dis[u] < y){\n\t\t\tcmax_dis = max_dis[u];\n\t\t\tmax_dis[u] = y;\n\t\t} else if (cmax_dis < y){\n\t\t\tcmax_dis = y;\n\t\t}\n\t}\n\treturn max(ans, max_dis[u] + cmax_dis);\n}\n\nint main(){\n\tint n, id = 0;\n\tcin >> n;\n\tfor (register int i = 1; i < n; i++){\n\t\tint a, b;\n\t\tcin >> a >> b;\n\t\tadd_edge1(a, b);\n\t\tadd_edge1(b, a);\n\t}\n\tdfs1(1, 0, id);\n\tfor (register int i = 1; i <= n; i++){\n\t\tif (size[i] == 1){\n\t\t\tse.insert(make_pair(size[i], i));\n\t\t\tadd(n, in[i], 1);\n\t\t}\n\t}\n\tfor (register int i = 1; i <= n; i++){\n\t\tif (i % 2 == 1){\n\t\t\tcout << 1 << endl;\n\t\t\tcontinue;\n\t\t}\n\t\tint down = i / 2, dot_cnt1 = 0, up = n - down, ancestor = 0, dot_cnt2;\n\t\twhile (!se.empty()){\n\t\t\tpair<int, int> pr = *se.begin();\n\t\t\tif (pr.first >= down) break;\n\t\t\tse.erase(pr);\n\t\t\tadd(n, in[pr.second], -1);\n\t\t\tif (fa[pr.second][0] != 0 && get_sum(out[fa[pr.second][0]]) - get_sum(in[fa[pr.second][0]] - 1) == 0){\n\t\t\t\tadd(n, in[fa[pr.second][0]], 1);\n\t\t\t\tse.insert(make_pair(size[fa[pr.second][0]], fa[pr.second][0]));\n\t\t\t}\n\t\t}\n\t\tfor (register set<pair<int, int> >::iterator j = se.begin(); j != se.end(); j++){\n\t\t\tdot[++dot_cnt1] = Node(j->second);\n\t\t\tvis[j->second] = mark[j->second] = true;\n\t\t\tancestor = max(ancestor, depth[j->second] - get_last(j->second, up) + 1);\n\t\t}\n\t\tsort(dot + 1, dot + dot_cnt1 + 1);\n\t\tdot_cnt2 = dot_cnt1;\n\t\tfor (register int j = 1; j < dot_cnt1; j++){\n\t\t\tint cur_lca = lca(dot[j].pos, dot[j + 1].pos);\n\t\t\tif (!vis[cur_lca]){\n\t\t\t\tvis[cur_lca] = true;\n\t\t\t\tdot[++dot_cnt2] = Node(cur_lca);\n\t\t\t}\n\t\t}\n\t\tif (!vis[1]){\n\t\t\tvis[1] = true;\n\t\t\tdot[++dot_cnt2] = Node(1);\n\t\t}\n\t\tsort(dot + 1, dot + dot_cnt2 + 1);\n\t\tfor (register int j = 1; j <= dot_cnt2; j++){\n\t\t\twhile (!stk.empty() && !check(stk.top(), dot[j].pos)) stk.pop();\n\t\t\tif (!stk.empty()){\n\t\t\t\tint cur = stk.top();\n\t\t\t\tadd_edge2(cur, dot[j].pos, depth[dot[j].pos] - depth[cur]);\n\t\t\t}\n\t\t\tstk.push(dot[j].pos);\n\t\t}\n\t\tcout << max(ancestor, dfs2(1) + 1) << endl;\n\t\tcnt2 = 0;\n\t\twhile (!stk.empty()) stk.pop();\n\t\tfor (register int j = 1; j <= dot_cnt2; j++){\n\t\t\thead2[dot[j].pos] = 0;\n\t\t\tvis[dot[j].pos] = mark[dot[j].pos] = false;\n\t\t}\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1680066063,
        "uid": 201007,
        "name": "Leasier",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P7565 \u3010[JOISC 2021 Day3] \u30d3\u30fc\u30d0\u30fc\u306e\u4f1a\u5408 2\u3011"
    },
    {
        "content": "### \u6709\u6839\u6811\u70b9\u5206\u6cbb\n\n\u5148\u5206\u6790\u4e00\u4e0b\u9898\u76ee\uff0c\u5bf9\u4e8e\u4e00\u6b21\u4f1a\u8bae\u6765\u8bf4\uff0c\u6211\u4eec\u628a\u4f1a\u8bae\u7684\u51fa\u5e2d\u8005\u6743\u503c\u5b9a\u4e49\u4e3a$1$\uff0c\u90a3\u4e48\u6ee1\u8db3\u6761\u4ef6\u7684\u5c9b\u4e00\u5b9a\u662f\u6811\u7684\u5e26\u6743\u91cd\u5fc3\u3002\n\n\u7ecf\u8fc7\u5206\u6790\uff08~~\u624b\u6a21~~\uff09\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u603b\u6743\u503c$V$\u4e3a\u5947\u6570\uff0c\u90a3\u4e48\u7b54\u6848\u4e3a$1$\u3002\u5982\u679c\u6743\u503c$V$\u4e3a\u5076\u6570\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e00\u6761\u5168$0$\u94fe\uff0c\u94fe\u7684\u4e24\u7aef\u5b50\u6811\u6743\u503c\u4e3a$\\frac{V}{2}$\uff0c\u90a3\u4e48\u6574\u6761\u5168$0$\u94fe\u4ee5\u53ca\u4e24\u7aef\u7684\u5b50\u6811\u7684\u6839\u8282\u70b9\u90fd\u662f\u5408\u6cd5\u7684\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u5076\u6743\u503c$V$\u6765\u8bf4\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230\u4e00\u6761\u957f\u5ea6\u6700\u5927\u7684\u94fe\uff0c\u6ee1\u8db3\u94fe\u7684\u4e24\u7aef\u5b50\u6811\u5927\u5c0f\u5747$\\ge \\frac{V}{2}$\u3002\n\n$\\ge$\u5e76\u4e0d\u5bb9\u6613\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u76f4\u63a5\u53d8\u6210$=$\uff0c\u7136\u540e\u4e00\u904d\u540e\u7f00$\\max$\u3002\n\n\u67e5\u8be2\u6240\u6709\u94fe\u4fe1\u606f\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u70b9\u5206\u6cbb\uff0c\u95ee\u9898\u5728\u4e8e\u5982\u4f55\u5904\u7406\u5b50\u6811\u5927\u5c0f\uff0c\u663e\u7136\u8fd9\u91cc\u7684\u5b50\u6811\u5927\u5c0f\u4e0d\u4ec5\u4ec5\u662f\u94a6\u5b9a\u4e00\u4e2a\u6839\u60c5\u51b5\u4e0b\u7684\u5b50\u6811\u5927\u5c0f\u3002\n\n\u6211\u4eec\u53ef\u4ee5\u5148\u786e\u5b9a\u4e00\u4e2a\u6839\uff0c\u5728\u6709\u6839\u60c5\u51b5\u4e0b\u8ba1\u7b97\u51fa\u6bcf\u68f5\u5b50\u6811\u7684\u5927\u5c0f\uff0c\u5bf9\u4e8e\u70b9\u5206\u4e2d\u5fc3$u$\u6765\u8bf4\uff0c\u5411\u539f\u6709\u6839\u6811\u7236\u4eb2\u65b9\u5411\u7684\u90a3\u6761\u94fe\uff0c\u5b50\u6811\u5927\u5c0f\u9700\u8981\u4fee\u6539\u3002\u7136\u540e\u679a\u4e3e\u8f83\u5c0f\u7684\u5b50\u6811\u5927\u5c0f\uff0c\u5728\u5176\u4ed6\u7684$u$\u5b50\u6811\u5185\u67e5\u8be2\u6bd4\u5b83\u5b50\u6811\u5927\u5c0f\u66f4\u5927\u7684\u90a3\u4e9b\u8282\u70b9\u4e2d\uff0c\u6df1\u5ea6\u7684\u6700\u5927\u503c\uff0c\u7531\u4e8e\u9700\u8981\u53bb\u91cd\uff0c\u9700\u8981\u6b63\u5e8f\u5012\u5e8f\u4e24\u6b21\u7ebf\u6bb5\u6811\u5904\u7406\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c$u$\u8282\u70b9\u4e0e\u5176\u4ed6\u8282\u70b9\u8fde\u6210\u7684\u94fe\u7684\u7b54\u6848\u9700\u8981\u5355\u72ec\u8ba1\u7b97\uff0c\u5bf9\u4e8e\u7956\u5148\u8282\u70b9\u53ca\u5176\u5b50\u6811\u548c\u5b50\u5b59\u8282\u70b9\uff0c$u$\u5bf9\u5e94\u7684\u5b50\u6811\u5927\u5c0f\u662f\u4e0d\u540c\u7684\u3002\n\n\u7136\u540e\u5c31\u505a\u5b8c\u529b\uff01\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n \\log^2 n)$\u3002\n\n$Code:$\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\n#include<cstdlib>\n#include<vector>\n#define IT vector<int> :: iterator\n#define N 200005\nusing namespace std;\nconst int INF=1000000007;\nint n,x,y,ans[N];\nint rtsz,rt,lsz;\nstruct edge\n{\n    int nxt,v;\n    edge () {}\n    edge (int Nxt,int V):nxt(Nxt),v(V) {}\n}e[N << 1];\nint tot,fr[N],sz[N],fa[N],cz[N],tz[N],dep[N];\nbool vis[N];\nvoid add(int x,int y)\n{\n    e[++tot]=edge(fr[x],y),fr[x]=tot;\n}\nvoid dfs(int u,int F)\n{\n    cz[u]=1;\n    for (int i=fr[u];i;i=e[i].nxt)\n    {\n        int v(e[i].v);\n        if (v==F)\n            continue;\n        fa[v]=u,dfs(v,u);\n        cz[u]+=cz[v];\n    }\n}\nvoid findrt(int u,int F,int rn)\n{\n    int mx(-1);\n    sz[u]=1;\n    for (int i=fr[u];i;i=e[i].nxt)\n    {\n        int v(e[i].v);\n        if (vis[v] || v==F)\n            continue;\n        findrt(v,u,rn);\n        sz[u]+=sz[v];\n        mx=max(mx,sz[v]);\n    }\n    mx=max(mx,rn-sz[u]);\n    if (mx<rtsz)\n        rtsz=mx,rt=u;\n}\nvoid getrt(int u,int rn)\n{\n    rtsz=INF,findrt(u,0,rn);\n}\nint tr[N << 2];\nvoid update(int p)\n{\n    tr[p]=max(tr[p << 1],tr[p << 1 | 1]);\n}\nvoid modify(int p,int l,int r,int x,int y)\n{\n    tr[p]=max(tr[p],y);\n    if (l==r)\n        return;\n    int mid(l+r >> 1);\n    if (x<=mid)\n        modify(p << 1,l,mid,x,y); else\n        modify(p << 1 | 1,mid+1,r,x,y);\n    update(p);\n}\nint calc(int p,int l,int r,int x,int y)\n{\n    if (l==x && r==y)\n        return tr[p];\n    int mid(l+r >> 1);\n    if (y<=mid)\n        return calc(p << 1,l,mid,x,y); else\n    if (x>mid)\n        return calc(p << 1 | 1,mid+1,r,x,y); else\n        return max(calc(p << 1,l,mid,x,mid),calc(p << 1 | 1,mid+1,r,mid+1,y));\n}\nvoid cleanseg(int p,int l,int r)\n{\n    if (!tr[p])\n        return;\n    tr[p]=0;\n    if (l==r)\n        return;\n    int mid(l+r >> 1);\n    cleanseg(p << 1,l,mid);\n    cleanseg(p << 1 | 1,mid+1,r);\n}\nvoid toseg(int u,int F)\n{\n    modify(1,1,n,tz[u],dep[u]);\n    for (int i=fr[u];i;i=e[i].nxt)\n    {\n        int v(e[i].v);\n        if (v==F || vis[v])\n            continue;\n        toseg(v,u);\n    }\n}\nvoid calc(int u,int F)\n{\n    int t(calc(1,1,n,tz[u],n));\n    if (t)\n        ans[tz[u]]=max(ans[tz[u]],dep[u]+t+1);\n    for (int i=fr[u];i;i=e[i].nxt)\n    {\n        int v(e[i].v);\n        if (v==F || vis[v])\n            continue;\n        dep[v]=dep[u]+1;\n        calc(v,u);\n    }\n}\nvoid calc(int u,int F,int t)\n{\n    ans[min(tz[u],t)]=max(ans[min(tz[u],t)],dep[u]+1);\n    for (int i=fr[u];i;i=e[i].nxt)\n    {\n        int v(e[i].v);\n        if (v==F || vis[v])\n            continue;\n        calc(v,u,t);\n    }\n}\nvoid calc(int u)\n{\n    int x(fa[u]),pre(u);\n    while (x && !vis[x])\n        tz[x]=n-cz[pre],pre=x,x=fa[x];\n    vector<int>V;\n    for (int i=fr[u];i;i=e[i].nxt)\n    {\n        int v(e[i].v);\n        if (vis[v])\n            continue;\n        V.push_back(v);\n        dep[v]=1,calc(v,0),toseg(v,0);\n    }\n    cleanseg(1,1,n);\n    reverse(V.begin(),V.end());\n    for (IT it=V.begin();it!=V.end();++it)\n    {\n        int v(*it);\n        dep[v]=1,calc(v,0),toseg(v,0);\n    }\n    cleanseg(1,1,n);\n    for (int i=fr[u];i;i=e[i].nxt)\n    {\n        int v(e[i].v);\n        if (vis[v])\n            continue;\n        calc(v,0,(v==fa[u])?cz[u]:n-cz[v]);\n    }\n    cleanseg(1,1,n);\n    x=fa[u];\n    while (x && !vis[x])\n        tz[x]=cz[x],x=fa[x];\n}\nvoid solve(int u)\n{\n    int tsz(lsz);\n    vis[u]=true;\n    calc(u);\n    for (int i=fr[u];i;i=e[i].nxt)\n    {\n        int v(e[i].v);\n        if (vis[v])\n            continue;\n        lsz=(sz[u]>sz[v])?sz[v]:tsz-sz[u];\n        getrt(v,lsz);\n        solve(rt);\n    }\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for (int i=1;i<n;++i)\n    {\n        scanf(\"%d%d\",&x,&y);\n        add(x,y),add(y,x);\n    }\n    dfs(1,0);\n    memcpy(tz,cz,(n+1)*sizeof(int));\n    getrt(1,n),lsz=n;\n    solve(rt);\n    ans[n+1]=1;\n    for (int i=n;i;--i)\n        ans[i]=max(ans[i],ans[i+1]);\n    for (int i=1;i<=n;++i)\n        if (i & 1)\n            puts(\"1\"); else\n            printf(\"%d\\n\",ans[i >> 1]);\n    return 0;\n}\n```",
        "postTime": 1619872214,
        "uid": 10341,
        "name": "GK0328",
        "ccfLevel": 0,
        "title": "P7565 [JOISC 2021 Day3] \u30d3\u30fc\u30d0\u30fc\u306e\u4f1a\u5408 2 \u9898\u89e3"
    }
]