[
    {
        "content": "\u8fd9\u9053\u9898\u76ee\u5e94\u8be5\u7b97\u662f\u59a5\u59a5\u7684\u8d2a\u5fc3+\u6a21\u62df\u5427\u2026\u2026\n\n\u7b97\u6cd5\u539f\u7406\u5982\u4e0b\uff1a\n\n1.\u679a\u4e3e\u9014\u4e2d\u7ecf\u8fc7\u7684\u52a0\u6cb9\u7ad9\uff0c\u6bcf\u7ecf\u8fc7\u4e00\u4e2a\u52a0\u6cb9\u7ad9\uff0c\u8ba1\u7b97\u4e00\u6b21\u82b1\u8d39\uff1b\n\n2.\u5728\u4e00\u4e2a\u52a0\u6cb9\u7ad9\u6240\u9700\u8981\u52a0\u7684\u6cb9\uff0c\u5c31\u662f\u80fd\u591f\u652f\u6301\u5b83\u5230\u8fbe\u4e0b\u4e00\u4e2a\u6cb9\u4ef7\u6bd4\u5b83\u4f4e\u7684\u52a0\u6cb9\u7ad9\u7684\u91cf\uff1b\n\n3.\u5982\u679c\u5728\u8fd9\u4e2a\u52a0\u6cb9\u7ad9\u5373\u4f7f\u52a0\u6ee1\u6cb9\uff0c\u90fd\u4e0d\u80fd\u5230\u8fbe\u4e00\u4e2a\u6bd4\u5b83\u6cb9\u4ef7\u4f4e\u7684\u52a0\u6cb9\u7ad9\uff0c\u5c31\u628a\u6cb9\u7bb1\u52a0\u6ee1\uff0c\u524d\u5f80\u80fd\u591f\u5230\u8fbe\u7684\u52a0\u6cb9\u7ad9\u4e2d\u6cb9\u4ef7\u6700\u4f4e\u7684\u90a3\u4e2a\uff1b\n\n4.\u5982\u679c\u5728\u8fd9\u4e2a\u52a0\u6cb9\u7ad9\u5373\u4f7f\u52a0\u6ee1\u6cb9\uff0c\u90fd\u4e0d\u80fd\u5230\u8fbe\u4efb\u610f\u4e00\u4e2a\u52a0\u6cb9\u7ad9\uff0c\u4e5f\u4e0d\u80fd\u5230\u8fbe\u7ec8\u70b9\u57ce\u5e02\uff0c\u8bf4\u660e\u65e0\u89e3\uff1b\n\n\n**\u7b2c\u4e09\u70b9\uff1a\u4e3a\u4ec0\u4e48\u8981\u52a0\u6ee1\u6cb9\uff1f**\u56e0\u4e3a\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u5728\u4e0b\u4e00\u4e2a\u52a0\u6cb9\u7ad9\uff08\u4ef7\u683c\u66f4\u8d35\uff09\u6240\u9700\u8981\u52a0\u7684\u6cb9\u91cf\u3002\n\nAC\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ndouble maxx,mo=0,d2,temlen=0,d1,c,p;\n//temlen\uff1a\u6cb9\u7bb1\u4e2d\u5728\u5230\u8fbe\u4e86\u4e0b\u4e00\u4e2a\u52a0\u6cb9\u7ad9\u65f6\u6cb9\u7bb1\u4e2d\u7684\u5269\u4f59\u6cb9\u91cf\u53ef\u4ee5\u7ee7\u7eed\u8d70\u7684\u8def\u7a0b\nint n;\nstruct add\n{\n    double co;\n    double dis;\n}pl[10000];//\u52a0\u6cb9\u7ad9\u7ed3\u6784\u4f53\uff1adis-\u8ddd\u79bb\u8d77\u70b9\u7684\u8ddd\u79bb\uff0cco\uff1a\u6cb9\u4ef7\nint move(int now)//1.now:\u73b0\u5728\u5230\u8fbe\u7684\u52a0\u6cb9\u7ad9\n{\n    int can=99999;\n    int f=pl[now].dis;\n    for(int i=now+1;i<=n&&pl[i].dis-f<=maxx;i++)\n    {\n        if(pl[i].co<pl[now].co)//2.\n        {\n            mo+=((pl[i].dis-f-temlen)/d2)*pl[now].co;\n            temlen=0;\n            return i;\n        }\n        if(can==99999||pl[i].co<pl[can].co)can=i;\n    }\n    if(d1-pl[now].dis<=maxx)\n        {\n            mo+=((d1-pl[now].dis-temlen)/d2)*pl[now].co;\n            return 9999;\n        }\n    if(can==99999)//4.\n    {\n        cout<<\"No Solution\";\n        return -1;\n    }\n    else//3.\n    {\n        mo+=c*pl[now].co;\n        temlen+=(maxx-pl[can].dis+f);\n        return can;\n    }\n}\nint cmp(add a,add b)\n{\n    return a.dis<b.dis;\n}\nint main()\n{\n    cin>>d1>>c>>d2>>p>>n;\n    pl[0].dis=0;\n    pl[0].co=p;\n    for(int i=1;i<=n;i++)cin>>pl[i].dis>>pl[i].co;\n    sort(pl,pl+n,cmp);\n    maxx=c*d2;\n    int k=0,t;\n    do\n    {\n        t=move(k);\n        k=t;\n        if(t==-1)return 0;\n    }while(t!=9999);\n    printf(\"%.2f\",mo);\n    return 0;\n}\n```\n\nUpdate\uff1a\n\t\u65f6\u9694\u4e00\u5e74\u4e4b\u540e\u5076\u7136\u7ffb\u5230\uff0c\u7adf\u7136\u6709137\u4e2a\u8d5eQAQ\uff01\u611f\u8c22\u5927\u5bb6\uff0c\u4f46\u7531\u4e8e\u4e4b\u524d\u7684\u5199\u6cd5\u4e0a\u6709\u4e00\u4e9b\u4e0d\u8db3\uff08\u592a\u4e11\u5566\uff01\uff09\uff0c\u73b0\u5728\u8d34\u4e00\u4efd\u65b0\u7684\u4ee3\u7801\u4e0a\u6765\u3002\n    \n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define maxn 100000\n#define db double\n#define INF 9999999 \nint n;\ndb D1, D2, C, P, res, ans, maxx;\n\nstruct node\n{\n\tdb co, dis;\n\tbool friend operator <(const node& a, const node& b)\n\t{ return a.dis < b.dis; }\n}pl[maxn];\n\nint Solve(int now)\n{\n\tint flag = INF; db d = pl[now].dis; \n\tfor(int i = now + 1; i <= n && pl[i].dis - d <= maxx; i ++)\n\t{\n\t\tif(pl[i].co < pl[now].co)\n\t\t{\n\t\t\tans += ((pl[i].dis - d - res) / D2) * pl[now].co;\n\t\t\tres = 0; return i;\n\t\t}\n\t\tif(flag == INF || pl[i].co < pl[flag].co) flag = i;\n\t}\n\tif(D1 - pl[now].dis <= maxx)\n\t{\n\t\tans += ((D1 - pl[now].dis - res) / D2) * pl[now].co;\n\t\treturn INF;\n\t}\n\tif(flag == INF) { printf(\"No Solution\\n\"); return -1; }\n\telse\n\t{\n\t\tans += C * pl[now].co; res += (maxx - (pl[flag].dis - d));\n\t\treturn flag;\n\t}\n}\n\nint main()\n{\n\tscanf(\"%lf%lf%lf%lf%d\", &D1, &C, &D2, &P, &n);\n\tpl[0].dis = 0, pl[0].co = P;\n\tfor(int i = 1; i <= n; i ++) \n\t\tscanf(\"%lf%lf\", &pl[i].dis, &pl[i].co);\n\tsort(pl, pl + n + 1);\n\tmaxx = C * D2;\n\tint k = 0, t;\n\tdo\n\t{\n\t\tt = Solve(k), k = t;\n\t\tif(t == -1) return 0;\n\t}while(t != INF);\n\tprintf(\"%.2lf\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1502863034,
        "uid": 47135,
        "name": "Twilight_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1016 \u3010\u65c5\u884c\u5bb6\u7684\u9884\u7b97\u3011"
    },
    {
        "content": "~~\u4f5c\u4e3a\u4e00\u4e2a\u6ca1\u6709\u8003\u8fc7\u666e\u53ca\u7ec4\u7684\u849f\u84bb\uff0c\u505a\u63d0\u9ad8\u7ec4\u7684\u9898\u8fd8\u662f\u5f88\u6076\u5fc3\u7684\u3002\u3002\u3002~~\n\n~~\u5176\u5b9e\u6211\u6253\u5b8c\u4ee3\u7801\u90fd\u4e0d\u77e5\u9053\u81ea\u5df1\u5728\u5199\u4ec0\u4e48\uff0c\u611f\u89c9\u81ea\u5df1\u7684\u601d\u8def\u5f88\u5947\u602a\u7684\uff0c\u5c31\u6765\u53d1\u4e00\u7bc7\u9898\u89e3~~\n## \u601d\u8def\u5206\u6790\n\u5982\u679c\u6309\u7167\u9898\u76ee\u7684\u6765\u5199\uff0c\u5c31\u662f\u5230\u4e00\u4e2a\u52a0\u6cb9\u7ad9\uff0c\u770b\u770b\u8981\u52a0\u591a\u5c11\u6cb9\u3002\n\n\u800c\u6211\u7684\u601d\u8def\u662f\uff1a\u4e0d\u7ba1\u600e\u6837\uff0c\u53ea\u8981\u5230\u4e00\u4e2a\u52a0\u6cb9\u7ad9\uff0c\u5c31**\u628a\u8f66\u4e0a\u7684\u6cb9\u585e\u6ee1**\u3002\u5982\u679c\u67d0\u4e2a\u52a0\u6cb9\u7ad9\u7684\u6cb9\u5f88\u8d35\uff0c\u90a3\u4e48\u5230\u4e86\u4e0b\u4e00\u4e2a\u4fbf\u5b9c\u7684\u52a0\u6cb9\u7ad9\uff0c\u5c31\u628a\u4e0a\u4e00\u4e2a\u52a0\u6cb9\u7ad9\u5269\u4e0b\u7684\u6cb9**\u5168\u90e8\u9000\u6389**\uff0c\u5728\u7528\u8fd9\u4e2a\u52a0\u6cb9\u7ad9\u7684\u6cb9\u586b\u6ee1\u6cb9\u7bb1\u3002\u4e3a\u4e86\u5f97\u5230\u66f4\u591a\u9000\u6cb9\u5f97\u5230\u7684\u94b1\uff0c**\u5148\u8017\u4fbf\u5b9c\u7684\u6cb9**\u3002\n\n\u603b\u7ed3\uff1a\n\n1.\u6bcf\u5230\u4e00\u4e2a\u52a0\u6cb9\u7ad9\uff0c\u5c31\u52a0\u6ee1\u6cb9\u3002\n\n2.\u5230\u7b2ci\u4e2a\u52a0\u6cb9\u7ad9\u5c31\u628a\u6cb9\u7bb1\u91cc\u6240\u6709>p[i]\u7684\u6cb9\u9000\u6389\uff0c\u6362\u6210\u4ef7\u683c\u4e3ap[i]\u7684\u6cb9\n\n3.\u5f00\u8f66\u65f6\uff0c\u7528\u6700\u4fbf\u5b9c\u7684\u6cb9\n## \u4ee3\u7801\u5206\u6790\n### \u53d8\u91cf\n1.\u7528\u4e00\u4e2a\u7ed3\u6784\u4f53\u8bb0\u5f55\u6bcf\u79cd\u6cb9\u7684\u4ef7\u683c\u548c\u6709\u591a\u5c11\u5728\u6cb9\u7bb1\u3002\n\n2.\u7528\u6570\u7ec4d\u8bb0\u5f55\u7b2ci\u4e2a\u52a0\u6cb9\u7ad9\u8ddd\u79bb\u51fa\u53d1\u70b9\u7684\u8ddd\u79bb\uff0c\u5176\u4e2dd[0]=0,d[n+1]=D1\u3002\n\n3.\u7528\u53d8\u91cflen\u8bb0\u5f55\u6cb9\u7bb1\u91cc\u6709\u51e0\u79cd\u6cb9\u3002\n### \u904d\u5386\n\u8303\u56f4\uff1a\u4ece1\u5230n+1\u3002\n\n\u5185\u5bb91\uff1a\u51cf\u6389\u4ece\u4e0a\u4e00\u4e2a\u52a0\u6cb9\u7ad9\u6765\u6d88\u8017\u7684\u6cb9\u3002\u6ce8\u610f\u8981\u4ece\u4fbf\u5b9c\u7684\u5f00\u59cb\u8017\uff0c\u5982\u679c\u4e0d\u591f\u518d\u6362\u8d35\u7684\u3002\u5982\u679c\u6ca1\u6cb9\u4e86\u5c31No Solution\u5e76return\u3002\n\n\u5185\u5bb92\uff1a\u52a0\u6cb9\u548c\u9000\u6cb9\u3002\u6ce8\u610f\u4e00\u4e9b\u7ec6\u8282\u3002\uff08\u89c1\u540e\u9762\u7684\u4ee3\u7801\uff09\n## AC\u4ee3\u7801\n~~\u76f8\u4fe1\u4e0d\u4f1a\u6709\u4eba\u559c\u6b22\u4e0a\u9762\u7684\u4e00\u901a\u5206\u6790\u5427~~\uff0c\u90a3\u4e48\uff0c\u4f60\u4eec\u559c\u6b22\u7684\u4ee3\u7801\u6765\u4e86\u2014\u2014\n```cpp\n#include<cstdio>\nusing namespace std;\nint n,len=0;//\u5982\u4e0a\u6240\u8ff0\nstruct LLLL{//\u7ed3\u6784\u4f53\n\tdouble price;\n\tdouble sum;\n}l[10];\ndouble s,c,dis,ans=0;//s\u5c31\u662fD1\uff0cdis\u5c31\u662fD2\ndouble d[10],p[10];\nint main(){\n\tscanf(\"%lf%lf%lf%lf%d\",&s,&c,&dis,&p[0],&n);\n\tfor(int i=1;i<=n;i++) scanf(\"%lf%lf\",&d[i],&p[i]);\n\tl[0].sum=c;//\u521d\u59cb\u5316\n    l[0].price=p[0];\n    ans=c*p[0];\n    len++;\n    d[n+1]=s;\n\tfor(int i=1;i<(n+2);i++){//\u904d\u5386\n\t\tdouble lll=(d[i]-d[i-1])/dis;//\u9700\u8981\u7528\u7684\u6cb9\u91cf\n\t\tdouble lll1=lll;//\u590d\u5236\u4e00\u4efd\n\t\tbool flag=1;\n\t\twhile(len){//\u53ea\u8981\u8fd8\u6709\u6cb9\n\t\t\tif(l[0].sum<lll){//\u4e0d\u591f\n\t\t\t\tlen--;lll-=l[0].sum;//\u90fd\u51cf\u6389\n\t\t\t\tfor(int k=0;k<len;k++){//\u5f80\u524d\u632a\u4e00\u4f4d\uff0c\u8fd9\u6837\u53ea\u7528\u770bl[0]\n\t\t\t\t\tl[k].price=l[k+1].price;\n\t\t\t\t\tl[k].sum=l[k+1].sum;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{//\u591f\u4e86\n\t\t\t\tl[0].sum-=lll;\n\t\t\t\tflag=0;//\u8bb0\u5f55\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(flag){//\u6ca1\u6cb9\u4e86qwq\n\t\t\tprintf(\"No Solution\");\n\t\t\treturn 0;//\u76f4\u63a5\u8fd4\u56de\n\t\t}\n\t\tflag=1;//\u518d\u8d4b\u6210true\n\t\tfor(int j=0;j<len;j++){\n\t\t\tif(p[i]<l[j].price){//\u6bd4\u540e\u9762\u7684\u90fd\u5c0f\n\t\t\t\tans-=(l[j].sum*l[j].price);//\u9000\u6cb9\uff0c\u6ce8\u610f\u8981\u4ecej\u5f00\u59cb\u9000\n\t\t\t\tfor(int k=j+1;k<len;k++){\n\t\t\t\t\tl[j].sum+=l[k].sum;//\u52a0\u6cb9\uff0c\u6ce8\u610fl[j]\u662f\u4fdd\u7559\u4e0b\u6765\u7684\uff0c\u4e0d\u7528\u518d\u52a0\u4e00\u6b21\n\t\t\t\t\tans-=(l[k].sum*l[k].price);//\u540e\u9762\u5168\u9000\u6389\n\t\t\t\t}\n\t\t\t\tl[j].sum+=lll1;//\u8fd8\u8981\u52a0\u4e0a\u5f00\u8f66\u8017\u6389\u7684\u6cb9\n\t\t\t\tl[j].price=p[i];//\u4ef7\u94b1\u8bb0\u4f4f\n\t\t\t\tans+=l[j].price*l[j].sum;//\u4ed8\u94b1\n\t\t\t\tlen=j+1;//\u6ce8\u610f\u662fj+1\uff0c\u6211\u5982\u679c\u8fd9\u91cc\u6ca1\u51fa\u95ee\u9898\u5c31\u4e00\u904d\u8fc7\u4e86qwq\n\t\t\t\tflag=0;//\u8bb0\u5f55\n\t\t\t\tbreak;//\u8fd4\u56de\n\t\t\t}\n\t\t}\n\t\tif(flag){//\u5982\u679c\u6bd4\u6240\u6709\u6cb9\u90fd\u8d35\n\t\t\tl[len].sum=lll1;//\u53ea\u7528\u52a0\u5f00\u8f66\u8017\u6389\u7684\u6cb9\n\t\t\tans+=p[i]*lll1;//\u4ed8\u94b1\n\t\t\tl[len].price=p[i];//\u4ef7\u94b1\u8bb0\u4f4f\n\t\t\tlen++;//\u8bb0\u5f55\u591a\u4e86\u4e00\u79cd\u6cb9\n\t\t}\n\t}\n\tprintf(\"%.2lf\",ans);//\u8f93\u51fa\uff0c\u6ce8\u610f\u683c\u5f0f\n\treturn 0; //\u534e\u4e3d\u7ed3\u675f\n}\n```\n\u53d1\u9898\u89e3\u4e0d\u4ec5\u53ef\u4ee5\u5e2e\u52a9\u522b\u4eba\uff0c\u8fd8\u53ef\u4ee5\u5e2e\u81ea\u5df1\u68b3\u7406\u601d\u8def\u3002\u4e0d\u8fc7\u5199\u9898\u89e3\u8fd8\u662f\u633a\u7d2f\u7684\uff0c\u522b\u5fd8\u4e86\u70b9\u4e2a\u8d5e\u518d\u8d70\u54df~",
        "postTime": 1570187352,
        "uid": 130981,
        "name": "dingcx",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1016 \u3010\u65c5\u884c\u5bb6\u7684\u9884\u7b97\u3011"
    },
    {
        "content": "## \u8d2a\u5fc3 + \u5355\u8c03\u961f\u5217\n\u601d\u8def\uff1a\n\n1 \u5728\u8d77\u70b9\u52a0\u6ee1\u6cb9\uff1b\n\n2 \u5230\u7b2ci\u4e2a\u52a0\u6cb9\u7ad9\u628a\u6cb9\u7bb1\u91cc\u4ef7\u683c>P[i]\u7684\u6cb9\u9000\u4e86\uff0c\u6362\u6210\u4ef7\u683c\u4e3aP[i]\u7684\u6cb9\u3002\n\n3 \u6bcf\u6b21\u70e7\u6cb9\u5c31\u627e\u6700\u4fbf\u5b9c\u7684\u6cb9\u70e7\n\n\u5b9e\u73b0:\u5355\u8c03\u961f\u5217\uff0c\u6bcf\u6b21\u53d6front\u7684\u70e7\u6cb9\uff0c\u518d\u628a\u5f53\u524d\u7684\u6cb9\u7528\u5355\u8c03\u961f\u5217\u65b9\u5f0f\u63d2\u5165\u961f\u5c3e.\n\n\u5355\u8c03\u961f\u5217\u7684\u63d2\u5165\u65b9\u5f0f\uff1aback\u6bd4\u5f53\u524dP[i]\u5927 \u5c31pop \u76f4\u5230back <= P[i] \u518d\u63d2\u5165\n\n.\n\n---\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <deque>\nusing namespace std;\n\nstruct OIL { //\u6c7d\u6cb9 \n\tdouble cost, x; //\u4ef7\u683c \u548c \u6cb9\u91cf \n\tOIL(double c, double n) : cost(c), x(n) {}\n};\ndouble d1, c, d2, D[10], P[10], ans, nc; //nc (<= c)\u662f\u5f53\u524d\u7684\u6cb9\u91cf\nint n;\ndeque<OIL> p; //STL\u53cc\u7aef\u961f\u5217 \u5b9e\u73b0 \n\nint main() {\n\tscanf(\"%lf%lf%lf%lf%d\", &d1, &c, &d2, &P[0], &n);\n\tfor(int i=1; i<=n; i++) {\n\t\tscanf(\"%lf%lf\", &D[i], &P[i]);\n\t\tif(D[i] - D[i-1] > c * d2) { //\u65e0\u89e3\u5f88\u597d\u5224\u65ad:\u88c5\u6ee1\u6cb9\u4e5f\u8dd1\u4e0d\u5b8c\u8fd9\u4e00\u6bb5 \n\t\t\tprintf(\"No Solution\\n\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\tD[n+1] = d1; //\u628a\u7ec8\u70b9\u8bbe\u4e3a\u7b2cn+1\u4e2a\u52a0\u6cb9\u7ad9 \u8ddd\u79bb\u4e3ad1 \n\tp.push_back(OIL(P[0], nc = c)); //\u76f4\u63a5\u52a0\u6ee1 \n\tans += P[0] * c;\n\tfor(int i=1; i<=n+1; i++) { //\u4ece\u7b2ci-1\u4e2a\u52a0\u6cb9\u7ad9\u5230\u7b2ci\u4e2a\u52a0\u6cb9\u7ad9 \n\t\tdouble nd = (D[i] - D[i-1]) / d2;  //\u8dd1\u8fd9\u4e00\u6bb5\u9700\u8981\u591a\u5c11\u5347\u6c7d\u6cb9\n\t\twhile(!p.empty() && nd > 0) {  //\u4e0d\u65ad\u5faa\u73af\u76f4\u5230\u8dd1\u5b8c\u8fd9\u8fd9\u4e00\u6bb5 \n\t\t\tOIL front = p.front(); p.pop_front(); //\u6bcf\u6b21\u627e\u6700\u4fbf\u5b9c\u7684\u6cb9\u8dd1 \n\t\t\tif(front.x > nd)  { //\u8fd9\u79cd\u6cb9\u591f\u8dd1 \n\t\t\t\tnc -= nd;\n\t\t\t\tp.push_front(OIL(front.cost, front.x - nd));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tnc -= front.x; nd -= front.x;\n\t\t}\n\t\tif(i == n+1) { //\u5230\u8fbe\u7ec8\u70b9:\u9000\u56de\u6240\u6709\u6cb9 \n\t\t\twhile(!p.empty()) {\n\t\t\t\tans -= p.front().cost * p.front().x;\n\t\t\t\tp.pop_front();\n\t\t\t}\n\t\t\tbreak;\n\t\t} \n\t\twhile(!p.empty() && p.back().cost > P[i]) { //\u628a\u8d35\u7684\u6cb9\u9000\u4e86 \u6362\u6210\u5f53\u524d\u52a0\u6cb9\u7ad9\u7684\u4fbf\u5b9c\u6cb9 \n\t\t\tans -= p.back().cost * p.back().x;\n\t\t\tnc -= p.back().x;\n\t\t\tp.pop_back();\n\t\t}\n\t\tans += (c - nc) * P[i];\n\t\tp.push_back(OIL(P[i], c - nc)); //\u6bcf\u6b21\u52a0\u6ee1(\u591a\u4e86\u540e\u9762\u518d\u9000)\n\t\tnc = c; \n\t}\n\tprintf(\"%.2lf\\n\", ans);\n\treturn 0;\n}\n```",
        "postTime": 1518607951,
        "uid": 20375,
        "name": "hongzy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1016 \u3010\u65c5\u884c\u5bb6\u7684\u9884\u7b97\u3011"
    },
    {
        "content": "\u770b\u4e86\u4e00\u4e0b\u5404\u4f4d\u5927\u4f6c\u7684\u9898\u89e3\uff0c\u611f\u89c9\u4ee3\u7801\u6709\u4e9b\u957f\uff0c\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u4e0b~~\u7b80\u77ed\u7684~~\u7b80\u964b\u7684\u65b9\u6cd5\uff08\u4e0d\u6d89\u53ca\u5355\u8c03\u961f\u5217\uff0c\u5b8c\u5168\u6309\u7167\u9898\u9762\u610f\u601d\u7684\u8d2a\u5fc3+\u6a21\u62df\uff09\n### \u601d\u8def\n\u9996\u5148\u5c06\u8d77\u70b9\u548c\u7ec8\u70b9\u4e0e\u9053\u8def\u4e0a\u7684\u52a0\u6cb9\u7ad9\u89c6\u4e3a\u7b49\u4ef7\u8282\u70b9\uff0c\u6309\u7167\u8ddd\u79bb\u8d77\u70b9\u7684\u8ddd\u79bb\uff08\u5373\u4e3a\u901a\u8fc7\u987a\u5e8f\uff09\u6392\u5e8f\u3002  \n\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u4ee5\u4e0b\u8d2a\u5fc3\u7b56\u7565  \n- \u5982\u679c\u53ef\u4ee5\u76f4\u8fbe\u4e0b\u4e00\u4e2a\u6cb9\u4ef7\u66f4\u4f4e\u7684\u8282\u70b9\u5c31\u52a0\u6ee1\u591f\u5230\u6b64\u8282\u70b9\u7684\u6cb9\uff0c\u5f00\u8fc7\u53bb\uff08\u4e2d\u95f4\u7684\u4e0d\u7528\u7ba1\uff09  \n- \u5982\u679c\u4e0d\u80fd\u76f4\u8fbe\u5c31\u52a0\u6ee1\u6cb9\uff08\u56e0\u4e3a\u4e2d\u8f6c\u8282\u70b9\u7684\u6cb9\u66f4\u8d35\u8981\u5c11\u52a0\uff09\uff0c\u5f00\u5230\u80fd\u5230\u8303\u56f4\u5185\u6cb9\u4ef7\u6700\u4f4e\u7684\u52a0\u6cb9\u7ad9$^{^{[1]}}$\n\n\u5bf9\u4e8e$^{[1]}$\u7684\u8bc1\u660e\uff1a  \n\u56e0\u4e3a\u4eceA\u5230B\u7684\u8def\u7a0b\u4e00\u5b9a\uff0c\u4e0d\u7ba1\u662f$A->C->B$\u8fd8\u662f$A->D->B$\u6240\u9700\u7684\u6cb9\u91cf\u4e00\u5b9a\uff0c\u90a3\u4e48\u8bbe$P_b<P_a<P_c<P_d~~D_{ac}<D_{ad}$\uff0c\u5728A\u5730\u52a0\u6ee1\u6cb9\u9700$(C-left)~\\cdot~P_a$\uff0cC\u5904\u52a0\u6cb9$cost_c=(D_{cb}/D2-(C-D_{ac}/D2))\\cdot P_c$\uff0cD\u5904\u52a0\u6cb9$cost_d=(D_{db}/D2-(C-D_{ad}/D2))\\cdot P_c$\uff0c  \n\u53d8\u5f62\u4e3a$cost_c=((D_{cb}+D_{ac})/D2-C)\\cdot P_c,cost_d=((D_{cd}+D_{ad})/D2-C)\\cdot P_d$\n$$\\because{D_{ab}=D_{ac}+D_{cb}=D_{ad}+D_{db}}~~\\therefore (D_{cd}+D_{ad})/D2-C=(D_{cb}+D_{ac})/D2-C$$\n$$\\because P_c<P_d~\\therefore cost_c<cost_d$$\n\u7136\u540e\u5c31\u662f\u6309\u7167\u7b56\u7565\u6253\u4ee3\u7801\u4e86\n```\n#include <bits/stdc++.h>\ndouble D0,C,D,cost,left;\nstruct node\n{\n    double d,p;\n}s[8];\nint n;\nbool cmp(node a,node b){return a.d<b.d;}\nint main()\n{ \n    scanf(\"%lf%lf%lf%lf%d\",&D0,&C,&D,&s[0].p,&n);\n    s[n+1].d=D0;\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%lf%lf\",&s[i].d,&s[i].p);\n        if(s[i].d-s[i-1].d>C*D)//\u4e2d\u95f4\u6709\u4e00\u6bb5\u8def\u52a0\u6ee1\u6cb9\u4e5f\u5230\u4e0d\u4e86\u4e0b\u4e2a\u8282\u70b9\n        {\n            printf(\"No Solution\");\n            return 0;\n        }\n    }\n    std::sort(s+1,s+1+n,cmp);\n    for(int i=0;i<=n+1;)\n    {\n        int j,k;\n        for(j=k=i+1;j<=n;j++)//\u82e5\u76f4\u8fbe\u7ec8\u70b9\uff0cj++\u540ej\u4e3an+1\u800c\u4e0d\u662fn+2\n        {\n        \tk=s[j].p<=s[k].p?j:k;//\u8303\u56f4\u5185\u6700\u5c0f\u82b1\u8d39\n            if(s[j].p<=s[i].p||s[j+1].d-s[i].d>C*D)break;//\u627e\u5230\u4e0b\u4e00\u4e2a\u6bd4\u5f53\u524d\u8282\u70b9\u4fbf\u5b9c\u7684\u8282\u70b9\u6216\u8005\u5230\u4e0d\u4e86\u4e0b\u4e2a\u8282\u70b9\n        }\n        if(s[j].p>s[i].p)//\u7b56\u75652\n        {\n            cost+=(C-left)*s[i].p,left=C-(s[k].d-s[i].d)/D;\n            i=k;\n        }\n        else\n            cost+=s[i].p*((s[j].d-s[i].d)/D-left),i=j,left=0;//\u7b56\u75651\n    }\n    printf(\"%.2lf\",cost);\n    return 0;\n}\n```\n---\n\u4ee3\u7801\u4e2d\u7684C\uff0cD\uff0cD0\u548c\u9898\u9762\u4e0d\u4e00\u4e00\u5bf9\u5e94",
        "postTime": 1530430994,
        "uid": 55459,
        "name": "ZhYic",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1016 \u3010\u65c5\u884c\u5bb6\u7684\u9884\u7b97\u3011"
    },
    {
        "content": "\u770b\u5927\u5bb6\u5199\u7684\u90fd\u662f\u8d2a\u5fc3\uff0c\u6765\u4e00\u6ce2dfs\n------------\n**dfs\u57fa\u672c\u601d\u8def\uff1a\u5bf9\u5728\u6bcf\u4e00\u4e2a\u70b9\u7684\u9009\u62e9\u8fdb\u884c\u904d\u5386\uff0c\u7b5b\u9009\u51fa\u6700\u5c0f\u503c**  \n\n**\u90a3\u4e48\u6bcf\u4e2a\u70b9\u7684\u9009\u62e9\u6709\u54ea\u4e9b\u5462\uff0c\u6216\u8005\u8bf4\u57fa\u672c\u9009\u62e9\u6709\u54ea\u4e9b\uff08\u56e0\u4e3a\u590d\u6742\u9009\u62e9\u90fd\u662f\u5728\u57fa\u672c\u9009\u62e9\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u7ec4\u5408\u7684\uff09**  \n \n~~\u7ecf\u8fc7\u6211\u7684\u8bba\u8bc1\uff08\u8fd9\u4e0d\u662f\u663e\u800c\u6613\u89c1\u561b\uff09\uff1a~~  \n\n**\uff08ps\uff1a\u8fd9\u91cc\u7684\u4e0b\u4e00\u7ad9\u4e0d\u4e00\u5b9a\u662f\u5f53\u524d\u7ad9\u7684\u4e0b\u4e00\u7ad9\uff0c\u76f4\u63a5\u5f00\u5230\u5f53\u524d\u7ad9\u7684\u4e0b\u4e24\u7ad9\u4e5f\u662f\u53ef\u4ee5\u7684\u54e6\uff0c\u4e00\u4e2afor\u7684\u4e8b\u561b\uff09** \n\n**\u57fa\u672c\u9009\u62e91\uff1a\u52a0\u6cb9\u4f46\u53ea\u591f\u53ea\u52a0\u5230\u4e0b\u4e00\u7ad9**   \n\n**\u57fa\u672c\u9009\u62e92\uff1a\u6cb9\u7bb1\u91cc\u7684\u6cb9\u591f\u5230\u4e0b\u4e00\u7ad9\uff0c\u4e0d\u52a0\u6cb9**   \n\n**\u57fa\u672c\u9009\u62e93\uff1a\u52a0\u6ee1\uff08\u5bf9\u5e94\u67d0\u4e9b\u6cb9\u7ad9\u7684\u6cb9\u7279\u522b\u4fbf\u5b9c\u7684\u60c5\u51b5\uff09**  \n\n\n\u4e0b\u9762\u662f\u4ee3\u7801\uff08\u542b\u6ce8\u91ca\uff09\n------------\n```cpp\n#include<bits/stdc++.h>\n#define re register\nusing namespace std;\nint const MANX=9999;\nint n,f;\ndouble Ans=99999999,sum,c,dis;\n//Ans\u4e3a\u7b54\u6848\uff0csum\u603b\u8def\u7a0b\uff0cc\u6cb9\u7bb1\u5bb9\u91cf\uff0cdis\u6cb9\u8ddd\u6bd4\ndouble d[MANX],p[MANX],nd[MANX];\n//d\u79bb\u8d77\u70b9\u8ddd\u79bb\uff0cp\u8868\u793a\u4ef7\u683c\uff0cnd\u8be5\u7ad9\u7684\u4e0b\u4e00\u7ad9\u4ef7\u683c\nvoid dfs(int st,double oil,double mo){\n\t//st\u5f53\u524d\u5230\u8fbe\u7ad9\u7684\u7f16\u53f7\n   //oil\u5f53\u524d\u5269\u4f59\u6cb9\n   //mo\u5f53\u524d\u82b1\u8d39\n\tif(st==n+1){\n\t\tif(mo<Ans)Ans=mo;\n\t\tf=1;//\u6709\u7b54\u6848\u7684\u6807\u8bb0\n\t\treturn;\n\t}\n\tif(c*dis<nd[st])return;//\u4e0d\u80fd\u5230\u8fbe\u8fd4\u56de\n\tdouble nx=0;\n\tfor(re int i=st;i<=n;i++){\n\t\tnx+=nd[i];//\u7d2f\u8ddd\u5668\n\t\tif(dis*c<nx)break;//\u4e0d\u80fd\u518d\u7d2f\u4e86\uff0c\u518d\u7d2f\u5c31\u5230\u4e0d\u4e86\u4e86\n\t\tdfs(i+1,c-nx/dis,mo+p[st]*(c-oil));//\u52a0\u6ee1\n\t\tdfs(i+1,0,mo+max((double)0,p[st]*nx/dis-p[st]*oil));\n     \t//double\u5f3a\u5236\u8f6c\u6362\uff0cmax\u53ea\u80fd\u540c\u7c7b\u578b\uff0c\u907f\u514d\u51fa\u73b0oil>nx/dis\u7684\u60c5\u51b5\uff0c\u5bfc\u81f4\u8fdb\u884c\u8fd4\u94b1\u7684\u9519\u8bef\u5904\u7406\n      \t//\u4e0d\u591f\u5219\u52a0\u5230\u591f\uff0c\u591f\u5219\u4e3a0\uff0c\u81ea\u5df1\u7406\u89e3\u4e00\u4e0b\n\t}\n\treturn;\n}\nint main(){\n\tcin>>sum>>c>>dis>>p[0]>>n;\n\tfor(re int i=1;i<=n;i++){\n\t\tcin>>d[i]>>p[i];\n\t\tnd[i-1]=d[i]-d[i-1];\n\t}\n\tnd[n]=sum-d[n];\n   //nd\u7b97\u51fa\u5f53\u524d\u7ad9\u4e0e\u4e0b\u4e00\u7ad9\u7684\u8ddd\u79bb\n\tdfs(0,0,0);\n\tif(f){\n\t\tprintf(\"%.2lf\",Ans);\n\t}\n\telse printf(\"No Solution\");\n\treturn 0;\n}\n```\n\u9898\u76ee\u975e\u5e38\u7b80\u5355\uff0c\u5927\u5bb6\u591a\u591a\u601d\u8003\u5c31\u609f\u4e86  \n  \n**\u5ba1\u6838\u5927\u5927\u611f\u8c22**",
        "postTime": 1559960606,
        "uid": 164468,
        "name": "Dcue",
        "ccfLevel": 0,
        "title": "dfs\u4e0e\u65c5\u884c\u5bb6\u7684\u9884\u7b97\uff0c\u4e0d\u4e00\u6837\u7684\u89e3\u6cd5"
    },
    {
        "content": "# \u8d2a\u5fc3 AC#\n------------\uff08\u5229\u7528\u4e86\u7b80\u5355\u7684\u961f\u5217\u5b58\u8981\u8d70\u7684\u6cb9\u7ad9\uff09\n\n### \u597d\u4e0d\u5bb9\u6613AC\u4e86\u7ffb\u7ffb\u8bc4\u8bba\u533a\uff0c\u51b3\u5fc3\u8ba4\u8ba4\u771f\u771f\u54d2\u5199\u4e2a\u9898\u89e3\u9020\u798f\u548c\u81ea\u5df1\u4e00\u6837\u7684~~\u5c0f\u53ef\u7231\u4eec~~\n\n##### \u6ce8\u91ca\u5199\u7684\u7092\u9e21\u6e05\u695a\u5566QAQ\uff01\u849f\u84bb\u5728\u7b2c\u56db\u4e2a\u70b9\u4e0a\u5361\u4e861hour\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue> \nusing namespace std;\ndouble all,each,c,full;\ndouble dis[10],price[10],cost,oil,add,need;\nint n,tmp,now;\nqueue<int>q;\t\t\t\t//\u7528\u961f\u5217\u8868\u793a\u8d70\u8fc7\u7684\u6cb9\u7ad9 \nint main(){\n    scanf(\"%lf%lf%lf%lf%d\",&all,&c,&each,&price[0],&n);\t\t\t//\u8bfb\u5165 \n    tmp=0,full=each*c;\t\t\t//full\u8868\u793a\u5355\u6b21\u6700\u5927\u884c\u9a76\u8ddd\u79bb \n    dis[n+1]=all;\t\t\t\t//\u5b58\u5165\u5230\u8fbe\u7ec8\u70b9\u7528\u7684\u8ddd\u79bb \n    price[n+1]=99999999;\t\t//\u5c06\u5230\u8fbe\u7ec8\u70b9\u7684\u4ef7\u683c\u521d\u59cb\u5316\u4e3a\u6700\u5927\u503c\uff08\u7528\u4e8e\u4e4b\u540e\u8fdb\u884c\u6bd4\u8f83\uff09 \n    for(int i=1;i<=n;i++) scanf(\"%lf%lf\",&dis[i],&price[i]); \t//\u8bfb\u5165 \n\tfor(int i=1;i<=n+1;i++){\n\t\tif(dis[i]-dis[i-1]>full){\t\t\t\t//\u5982\u679c\u4e24\u6cb9\u7ad9\u95f4\u8ddd\u79bb\u8d85\u8fc7\u6700\u5927\u5230\u8fbe\u8ddd\u79bb\uff0c\u7ed3\u675f\u7a0b\u5e8f \n            printf(\"No Solution\");\n            return 0;\n        }\n        if(price[i]<price[tmp]&&dis[i]-dis[tmp]<=full){ \t//\u5982\u679c\u8be5\u6cb9\u7ad9\u6cb9\u8d39<\u5f53\u524d\u4f4d\u7f6e\u6cb9\u7ad9\u7684\u6cb9\u8d39\uff0c\u4e14\u80fd\u591f\u62b5\u8fbe\uff0c\u52a0\u5165\u961f\u5217 \n            q.push(i);\n            tmp=i;\t\t\t\t\t//\u66f4\u65b0\u5f53\u524d\u6cb9\u7ad9\u7684\u4f4d\u7f6e \n        }\n        else if(dis[i]-dis[tmp]>full){\t\t//\u5982\u679c\u8be5\u6cb9\u7ad9\u8ddd\u79bb>\u6700\u5927\u884c\u9a76\u8ddd\u79bb \n            q.push(i-1);\t\t//\u5c06\u524d\u4e00\u4e2a\u6cb9\u7ad9\u52a0\u5165\u961f\u5217 \n            tmp=i-1;\t\t\t// \u5c06\u5f53\u524d\u6cb9\u7ad9\u7684\u4f4d\u7f6e\u66f4\u65b0\u4e3a\u524d\u4e00\u4e2a\u6cb9\u7ad9 \n            i--;\t\t\t\t//\u91cd\u65b0\u6bd4\u8f83\u5f53\u524d\u6cb9\u7ad9 \n        }\n\t}\n\tq.push(n+1);\t\t\t//\u5c06\u7ec8\u70b9\u52a0\u5165\u961f\u5217 \n    price[n+1]=0;\t\t\t//\u56e0\u4e3a\u6bd4\u8f83\u7ed3\u675f\uff0c\u5c06\u7ec8\u70b9\u6cb9\u8d39\u66f4\u6539\u4e3a0 \n    while(q.size()){\n        int x=q.front();\t\t//x\u8868\u793a\u8981\u5230\u8fbe\u7684\u6cb9\u7ad9 \n        q.pop();\n        if(price[x]>price[now]){\t\t//\u5982\u679c\u8981\u5230\u8fbe\u7684\u6cb9\u7ad9\u6cb9\u8d39>\u5f53\u524d\u6cb9\u7ad9\u6cb9\u8d39 \n        \tadd=c-oil;\t//\u52a0\u6ee1\u6cb9 \n        \toil=c-(dis[x]-dis[now])/each;\t//\u66f4\u6539\u6cb9\u91cf \n        \tcost+=add*price[now];\t//\u8bb0\u5f55\u8d39\u7528 \n\t\t}\n\t\telse{\t// \u5982\u679c\u8981\u5230\u8fbe\u7684\u6cb9\u7ad9\u6cb9\u8d39<=\u5f53\u524d\u6cb9\u7ad9\u6cb9\u8d39 \n\t\t\tneed=(dis[x]-dis[now])/each;\t// need\u8868\u793a\u9700\u8981\u7684\u6cb9\u91cf \n\t\t\tif(oil>=need) oil-=need;\t//\u5982\u679c\u5f53\u524d\u6cb9\u91cf\u5927\u4e8e\u9700\u8981\u7684\uff0c\u4e0d\u52a0\u6cb9\n\t\t\telse{\t\t// \u5982\u679c\u5f53\u524d\u6cb9\u91cf\u4e0d\u591f\uff0c\u52a0\u521a\u597d\u5230\u8fbe\u4e0b\u4e00\u7ad9\u7684\u6cb9 \n\t\t\t\tadd=need-oil;\n\t\t\t\toil+=add-need;\t//\u66f4\u6539\u6cb9\u91cf \n\t\t\t\tcost+=add*price[now];\t//\u8bb0\u5f55\u8d39\u7528 \n\t\t\t}\n\t\t}\n        now=x;\t//\u66f4\u6539\u5f53\u524d\u6cb9\u7ad9\u4f4d\u7f6e \n    }\n    printf(\"%.2lf\",cost);\t//\u8f93\u51fa \n} \n```",
        "postTime": 1537275042,
        "uid": 107960,
        "name": "\u695a\u6ceb",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1016 \u3010\u65c5\u884c\u5bb6\u7684\u9884\u7b97\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u7ecf\u5178\u7684\u9898\u3002\u53ea\u8981\u7528\u8d2a\u5fc3+\u6a21\u62df\u5c31\u53ef\u4ee5\u8fc7\u4e86\u3002\n\n\u5148\u53bb\u6389$No Solution$\u7684\u60c5\u51b5\uff0c\u7136\u540e\u6a21\u62df+\u8d2a\u5fc3\u5c31\u53ef\u4ee5\u4e86\u3002\u5177\u4f53\u89e3\u91ca\u5728\u4ee3\u7801\u4e2d\u5448\u73b0\u3002\n\n\u9644\u4e0a\u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ndouble d1,c,d2,p,d[10],v[10],last,ans;\t//last:\u5269\u4e0b\u7684\u6cb9\u91cf ans:\u6700\u5c0f\u8d39\u7528 \u5176\u4ed6\u53d8\u91cf\u5747\u4e3a\u8f93\u51fa\u6570\u636e \nint n;\nint main(){\n\tscanf(\"%lf%lf%lf%lf%d\",&d1,&c,&d2,&p,&n);\n\tfor(int i=1;i<=n;i++) scanf(\"%lf%lf\",&d[i],&v[i]);\n\td[n+1]=d1;v[0]=p;\n\tfor(int i=1;i<=n;i++){\t\t//\u6cb9\u7bb1\u4e2d\u7684\u6cb9\u80fd\u5426\u8dd1\u5b8c\u6bcf\u4e00\u6bb5\u52a0\u6cb9\u7ad9\u7684\u8ddd\u79bb \n\t\tif(d[i+1]-d[i]>c*d2){\n\t\t\tprintf(\"No Solution\\n\");\t//\u4e0d\u80fd\u6253\u51fa No Solution\n\t\t\treturn 0;\n\t\t}\n\t}\n\tint j;\n\tfor(int i=0;i<=n;i=j){\n\t\tfor(j=i+1;j<=n+1;j++){\n\t\t\tif(d[j]-d[i]>c*d2){\t\t//\u5728c*d2\u7684\u8ddd\u79bb\u5185\u7684\u52a0\u6cb9\u7ad9\u4e2d\u5bfb\u627e\u6700\u4fbf\u5b9c\u7684\u52a0\u6cb9\u7ad9\n\t\t\t\tj--;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(v[j]<v[i]) break;\t//\u627e\u5230\u66f4\u4fbf\u5b9c\u7684\u52a0\u6cb9\u7ad9\u5c31\u9000\u51fa\u5faa\u73af \n\t\t}\n\t\tif(v[j]<v[i]){\t\t//\u6709\u627e\u5230\u66f4\u4fbf\u5b9c\u7684\u52a0\u6cb9\u7ad9\n\t\t\tans+=((d[j]-d[i])/d2-last)*v[i];\t//\u52a0\u521a\u597d\u8db3\u591f\u5230\u8fbe\u7b2cj\u4e2a\u52a0\u6cb9\u7ad9\u7684\u6cb9 \n\t\t\tlast=0;\n\t\t}\n\t\telse {\n\t\t\tans+=(c-last)*v[i];\t\t\t//\u52a0\u6ee1\u6cb9\u7bb1\n\t\t\tlast=c-(d[j]-d[i])/d2;\n\t\t}\n\t}\n\tprintf(\"%.2lf\\n\",ans);\n\treturn 0;\n}\n```\n\n\u4ee3\u7801\u8fd8\u662f\u6bd4\u8f83\u7b80\u6d01\u7684\uff0c\u601d\u8def\u4e5f\u5f88\u662f\u6e05\u695a\u7684qwq\u3002",
        "postTime": 1573375746,
        "uid": 117126,
        "name": "swkyccbb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1016 \u3010\u65c5\u884c\u5bb6\u7684\u9884\u7b97\u3011"
    },
    {
        "content": "### ~~\u672c\u849f\u84bb~~\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\uff01\n# \u9996\u5148\u662f~~\u5e9f\u8bdd~~\u5206\u6790\u7b97\u6cd5\n\u6bcf\u5230\u4e00\u4e2a\u52a0\u6cb9\u7ad9\u5148\u4e0d\u52a0\u6cb9\uff0c\u5148~~\u62bd\u6839\u70df~~\u770b\u80fd\u5230\u54ea\u51e0\u4e2a\u52a0\u6cb9\u7ad9\u518d\u6839\u636e\u60c5\u51b5\u52a0\u591a\u5c11\u6cb9\u3002\n### \u63a5\u4e0b\u6765\u662f\u5206\u7c7b\u8ba8\u8bba\n#### 1\u3001\u5728\u8f66\u52a0\u6ee1\u6cb9\u80fd\u5f00\u5230\u7684\u8303\u56f4\u5185\u6709\u4ef7\u683c\u66f4\u4f4e\u7684\n\u90a3\u4e48\u5c31\u628a\u6cb9\u52a0\u5230\u521a\u597d\u80fd\u5f00\u5230\u7b2c\u4e00\u4e2a\u4ef7\u683c\u6bd4\u5b83\u4f4e\u7684\u70b9\u3002\n#### 2\u3001\u6ca1\u6709\u4ef7\u683c\u66f4\u4f4e\u7684\uff0c\u4f46\u53ef\u4ee5\u76f4\u63a5\u5230\u7ec8\u70b9\n\u76f4\u63a5\u53bb\u7ec8\u70b9\u3002\n#### 3\u3001\u6ca1\u6709\u4ef7\u683c\u66f4\u4f4e\u7684\uff0c\u4e5f\u4e0d\u53ef\u4ee5\u76f4\u63a5\u5230\u7ec8\u70b9\n\u52a0\u6ee1\u6cb9\uff0c\u53bb\u4ef7\u683c\u6700\u4f4e\u7684\u70b9\u3002\n\n------------\n\u7136\u540e~~\u5e9f\u8bdd\u4e0d\u591a\u8bf4\uff0c\u76f4\u63a5~~\u4e0a\u4ee3\u7801\n\n```c\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#define N 15\nusing namespace std;\ndouble d1,c,d2,Max,oil,ans; \n//oil\u4ee3\u8868\u5f53\u524d\u5269\u591a\u5c11\u6cb9 \nint n,now_i; \n//now_i\u8868\u793a\u5f53\u524d\u5728\u54ea\u4e2a\u52a0\u6cb9\u7ad9 \nbool flag;\nstruct node\n{\n\tdouble d,p;\n}a[N];\nbool cmp(node x,node y)\n{\n\treturn x.d<y.d;\n}\nint main()\n{\n\tcin>>d1>>c>>d2>>a[0].p>>n;\n\tfor(int i=1;i<=n;i++)\n\t\tcin>>a[i].d>>a[i].p;\n\tMax=c*d2; //\u52a0\u6ee1\u6cb9\u53ef\u884c\u591a\u5c11\u8def\u7a0b \n\ta[n+1].d=d1;\n    //\u5c06\u7ec8\u70b9\u770b\u505a\u6700\u540e\u4e00\u4e2a\u52a0\u6cb9\u7ad9,\u907f\u514d\u5ffd\u7565d1-a[n].d>Max\u7684\u60c5\u51b5\n\tsort(a+1,a+1+n,cmp);\t\n\tfor(int i=1;i<=n+1;i++)\n\t{\n\t\tif(a[i].d-a[i-1].d>Max)\n        //\u82e5\u4e24\u4e2a\u76f8\u90bb\u7684\u70b9\u4e4b\u95f4\u52a0\u6ee1\u6cb9\u4e86\u90fd\u4e0d\u80fd\u5230,\u65e0\u89e3 \n\t\t{\n\t\t\tprintf(\"No Solution\");\n\t\t\treturn 0;\n\t\t}\n\t}\n\t\n\twhile(1)\n\t{\n\t\tint next,k;\n\t\tfloat Min=10000;\n\t\tflag=0;\n\t\tfor(int i=now_i+1;a[i].d-a[now_i].d<=Max && i<=n;i++)\n\t\t{   //\u904d\u5386\u5728now_i\u70b9\u53ef\u5230\u8fbe\u8303\u56f4\u5185\u7684\u70b9 \n\t\t\tif(a[i].p<=a[now_i].p && !flag) //\u9009\u51fa\u7b2c\u4e00\u4e2ap\u66f4\u5c0f\u7684\u70b9 \n\t\t\t{\n\t\t\t\tnext=i;\n\t\t\t\tans+=((a[i].d-a[now_i].d)/d2-oil)*a[now_i].p;\n\t\t\t\t//\u52a0\u6cb9\u52a0\u5230\u521a\u597d\u80fd\u5230\u5c31\u884c\n\t\t\t\tflag=1;  //flag==1\u65f6\u4ee3\u8868\u8303\u56f4\u5185\u6709\u66f4\u5c0f\u7684p \n\t\t\t\toil=0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(Min>a[i].p) //\u6c42\u51fa\u80fd\u5230\u8fbe\u7684\u8303\u56f4\u5185p\u6700\u5c0f\u7684\u70b9(\u4e3a\u4e0b\u6587\u505a\u94fa\u57ab) \n\t\t\t{\n\t\t\t\tMin=a[i].p;\n\t\t\t\tk=i;\n\t\t\t}\n\t\t}\n\t\tif(!flag)  //\u82e5\u8303\u56f4\u5185\u6ca1\u6709\u66f4\u5c0f\u7684p \n\t\t{\n\t\t\tif(d1-a[now_i].d<=Max) //\u82e5\u53ef\u4ee5\u76f4\u63a5\u5230\u7ec8\u70b9 \n\t\t\t{\n\t\t\t\tans+=((d1-a[now_i].d)/d2-oil)*a[now_i].p;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse  //\u52a0\u6ee1\u6cb9,\u53bb\u8303\u56f4\u5185\u6700\u5c0f\u7684\u4e00\u4e2a\u7ad9 \n\t\t\t{\n\t\t\t\tnext=k;\n\t\t\t\tans+=a[now_i].p*(c-oil);\n\t\t\t\toil=c; \n\t\t\t\toil-=(a[k].d-a[now_i].d)/d2;  //\u5230\u4e86\u4e4b\u540e\u8fd8\u5269\u7684\u6cb9 \n\t\t\t}\n\t\t}\n\t\tnow_i=next;  //\u6c7d\u8f66\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u70b9 \n\t}\n\tprintf(\"%.2lf\",ans);\n\treturn 0; \n}\n```\n",
        "postTime": 1574427338,
        "uid": 234077,
        "name": "\u6797\u5b50\u6c90",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1016 \u3010\u65c5\u884c\u5bb6\u7684\u9884\u7b97\u3011"
    },
    {
        "content": "\u770b\u5230\u8fd9\u4e2a\u6570\u636e\u8303\u56f4\uff0c\u672c\u849f\u84bb\u9a6c\u4e0a\u5c31\u60f3\u5230\u4e86\u641c\u7d22 ~~\u6bd5\u7adf\u4e07\u7269\u7686\u53ef\u641c\u7d22\u561b~~\n\n\n\n------------\n\u6240\u6709\u7684\u52a0\u6cb9\u7ad9\u548c\u8d77\u70b9\u7ec8\u70b9\u90fd\u662f\u5728\u4e00\u6761\u76f4\u7ebf\u4e0a\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u4eec\u770b\u505a$N+2$\u4e2a\u8282\u70b9\uff0c\u8d77\u70b9\u7f16\u53f7\u4e3a0\uff0c\u7ec8\u70b9\u7f16\u53f7\u4e3a$N+1$\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff0c\u679a\u4e3e\u5728\u8be5\u5904\u52a0\u6cb9\u7684\u591a\u5c11\u3002\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u52a0\u6cb9\u91cf\u53ea\u6709\u4e24\u79cd\u60c5\u51b5\uff0c\u4e00\u662f\u521a\u597d\u53ef\u4ee5\u5230\u8fbe\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\uff0c\u4e8c\u5c31\u662f\u52a0\u6ee1\u6574\u4e2a\u6cb9\u7bb1\u3002\u56e0\u6b64\u679a\u4e3e\u4e5f\u53d8\u5f97\u53ef\u884c\u4e86\u3002\u800c\u5bf9\u4e8e\u679a\u4e3e\u5230\u7684\u72b6\u6001\uff0c\u8fdb\u884c\u641c\u7d22\u7ee7\u7eed\u679a\u4e3e\uff0c\u76f4\u5230\u5230\u8fbe\u7ec8\u70b9\u4e3a\u6b62\u3002\n\n\u5bf9\u4e8e\u641c\u7d22\u51fd\u6570\uff0c\u6211\u4eec\u4f20\u5165\u4e09\u4e2a\u91cf\uff0c\u5206\u522b\u4e3a\u8be5\u8282\u70b9\u7684\u7f16\u53f7\uff0c\u5f53\u65f6\u7684\u6cb9\u91cf\u548c\u5f53\u65f6\u7684\u82b1\u8d39\u3002\u6211\u4eec\u4ece\u8be5\u8282\u70b9\u5f00\u59cb\u679a\u4e3e\u8282\u70b9$i$\uff0c\u76f4\u5230$i==N+1$\u7ed3\u675f\uff0c\u679a\u4e3e\u8be5\u8282\u70b9\u52a0\u6cb9\u5230\u521a\u597d\u53ef\u4ee5\u884c\u9a76\u5230$i$\u8282\u70b9\u7684\u72b6\u6001\u3002\u8fd9\u6837\u8bb2\u53ef\u80fd\u6709\u70b9\u4e71\uff0c\u4e0a\u4ee3\u7801\u66f4\u6e05\u695a\u4e00\u70b9\uff1a\n```cpp\nvoid get(int x,double s,double m)//\u5206\u522b\u8868\u793a\u7f16\u53f7\u3001\u6cb9\u91cf\u548c\u82b1\u8d39\n{\n\tif(s<0 || s>c)\n\t\treturn ;//\u82e5\u6cb9\u7bb1\u7684\u6cb9\u4e0d\u7b26\u5408\u5b9e\u9645\uff0c\u5219\u8fd4\u56de\n\tif(x==n+1)\n\t{\n\t\tans=min(ans,m);\n\t\treturn ;\n\t}//\u5230\u8fbe\u7ec8\u70b9\u5219\u66f4\u65b0\u7b54\u6848\n\tfor(int i=x;i<=n+1 && (cn[i][0]-cn[x][0])/d2<=c;i++)\n\t\tif((cn[i][0]-cn[x][0])/d2<=s)\n\t\t\tget(x+1,s-(cn[x+1][0]-cn[x][0])/d2,m);//\u82e5\u5230\u8fbe\u8282\u70b9i\u6240\u9700\u7684\u6cb9\u6bd4\u5f53\u524d\u7684\u6cb9\u8fd8\u5c11\uff0c\u5219\u4e0d\u7528\u52a0\u6cb9\n\t\telse\n\t\t\tget(x+1,(cn[i][0]-cn[x][0])/d2-(cn[x+1][0]-cn[x][0])/d2,m+((cn[i][0]-cn[x][0])/d2-s)*cn[x][1]);//\u82e5\u5f53\u524d\u7684\u6cb9\u4e0d\u591f\u5f00\u5230\u8282\u70b9i\uff0c\u5219\u52a0\u5230\u521a\u597d\u53ef\u4ee5\u5f00\u5230\n\tget(x+1,c-(cn[x+1][0]-cn[x][0])/d2,m+(c-s)*cn[x][1]);//\u52a0\u6ee1\u6cb9\u7bb1\n\t\n}\n```\n\u6700\u540e\u8bf4\u4e00\u4e0b\u8f93\u51fa\uff0c\u9898\u76ee\u8981\u6c42\u662f\u56db\u820d\u4e94\u5165\u4fdd\u7559\u4e24\u4f4d\u5c0f\u6570\u8f93\u51fa\uff0c\u4f46\u7ecf\u8fc7\u672c\u849f\u84bb\u7684\u8bd5\u9a8c\uff0c\u56db\u820d\u4e94\u5165\u662f\u4e0d\u884c\u7684\uff0c\u76f4\u63a5\u8f93\u51fa\u5373\u53ef\uff08~~\u4e3a\u4f55\u5982\u6b64\u6bd2\u7624~~\uff09\uff0c\u7528printf\u65b9\u4fbf\u53c8\u5feb\u6377\uff1a\n```cpp\nif(ans==INF)//\u82e5\u6ca1\u6709\u66f4\u65b0\u7b54\u6848\u8bf4\u660e\u4e0d\u80fd\u5230\u8fbe\u7ec8\u70b9\n\t\tcout<<\"No Solution\";\n\telse\n\t\tprintf(\"%.2lf\",ans);\n```\n\u597d\u4e86\uff0c\u6700\u540e\u4e0a\u4e00\u4e0b\u5b8c\u6574\u7684\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\ndouble d1,c,d2,p,ans=1e6,cn[10][2];\nint n;\nvoid get(int x,double s,double m)\n{\n\tif(s<0 || s>c)\n\t\treturn ;\n\tif(x==n+1)\n\t{\n\t\tans=min(ans,m);\n\t\treturn ;\n\t}\n\tfor(int i=x;i<=n+1 && (cn[i][0]-cn[x][0])/d2<=c;i++)\n\t\tif((cn[i][0]-cn[x][0])/d2<=s)\n\t\t\tget(x+1,s-(cn[x+1][0]-cn[x][0])/d2,m);\n\t\telse\n\t\t\tget(x+1,(cn[i][0]-cn[x][0])/d2-(cn[x+1][0]-cn[x][0])/d2,m+((cn[i][0]-cn[x][0])/d2-s)*cn[x][1]);\n\tget(x+1,c-(cn[x+1][0]-cn[x][0])/d2,m+(c-s)*cn[x][1]);\n\t\n}\nint main()\n{\n\tcin>>d1>>c>>d2>>p>>n;\n\tfor(int i=1;i<=n;i++)\n\t\tcin>>cn[i][0]>>cn[i][1];\n\tcn[0][1]=p,cn[n+1][0]=d1;//\u521d\u59cb\u5316\n\tget(0,0,0);//\u4ece\u8d77\u70b9\u5f00\u59cb\u641c\u7d22\n\tif(ans==1e6)\n\t\tcout<<\"No Solution\";\n\telse\n\t\tprintf(\"%.2lf\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1556695943,
        "uid": 91534,
        "name": "TEoS",
        "ccfLevel": 6,
        "title": "P1016 \u65c5\u884c\u5bb6\u7684\u9884\u7b97"
    },
    {
        "content": "\u9898\u89e3 O(\u2229\\_\u2229)O\n\n\u7b80\u5355\uff08zhi zhang\uff09\u6613\u61c2\n\n\u8d2a\u5fc3++ \u6bcf\u6b21\u53ea\u7528\u6700\u4fbf\u5b9c\u7684\u6cb9\n\n\u53ea\u8ba1\u7b97\u7528\u8fc7\u7684\u6cb9\n\n\u5047\u8bbe\u88c5\u6ee1 \u9047\u5230\u4fbf\u5b9c\u7684\u6cb9\u5c31\u628a\u4e4b\u524d\u8d35\u7684\u6362\u6389\n\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\ndouble D1,D2,C,P[500010],d[500010],oil[500010],dollor,oil_used,dis,sum;\nint N,pos,cheap_oil,expensive_oil;\nvoid getcheap()\n{\n    double minn=2147483647;\n    for(int i=0;i<=pos&&i<=N;i++)\n    {\n        if(P[i]<minn&&oil[i]>0)\n        {\n            cheap_oil=i;\n            minn=P[i];\n        }\n    }\n    return;\n}\nvoid getexpensive()\n{\n    double maxn=0;\n    for(int i=0;i<=pos&&i<=N;i++)\n    {\n        if(P[i]>maxn&&oil[i]>0)\n        {\n            expensive_oil=i;\n            maxn=P[i];\n        }\n    }\n    return;\n}\nint spend()\n{\n    getcheap();\n    while(oil_used>0)\n    {\n        if(oil[cheap_oil]>=oil_used)\n        {\n            oil[cheap_oil]-=oil_used;\n            sum-=oil_used;\n            dollor+=P[cheap_oil]*oil_used;\n            oil_used=0;\n            if(oil[cheap_oil]==0) getcheap();\n            return 1;\n        }\n        else\n        {\n            getcheap();\n            oil_used-=oil[cheap_oil];\n            sum-=oil[cheap_oil];\n            dollor+=P[cheap_oil]*oil[cheap_oil];\n            oil[cheap_oil]=0;\n            getcheap();\n            if(oil[cheap_oil]==0)\n            {\n                printf(\"No Solution\\n\");\n                return 0;\n            }\n        }\n    }\n}\nvoid charge()\n{\n    getexpensive();\n    while(P[expensive_oil]>P[pos])\n    {\n        oil[pos]+=oil[expensive_oil];\n        oil[expensive_oil]=0;\n        getexpensive();\n    }\n    if(sum<C)\n    {\n        oil[pos]+=C-sum;\n        sum=C;\n    }\n}\nvoid ssort()\n{\n    bool bo=true;int k=0;\n    while(bo==true)\n    {\n        bo=false;\n        for(int i=N;i>k;i--)\n        {\n            if(d[i]<d[i-1])\n            {\n                swap(d[i],d[i-1]);\n                swap(P[i],P[i-1]);\n                bo=true;\n            }\n        }\n        k++;\n    }\n}\nint main()\n{\n    scanf(\"%lf%lf%lf%lf%d\",&D1,&C,&D2,&P[0],&N);\n    oil[0]=C;dis=D1;sum=C;\n    if(N==0)\n    goto loop;\n    for(int i=1;i<=N;i++)\n    {\n        scanf(\"%lf%lf\",&d[i],&P[i]);\n    }\n    ssort();\n    for(int i=N;i>0;i--)\n    {\n        d[i]-=d[i-1];\n    }\n    while(dis>d[pos]&&pos<N)\n    {\n        pos++;\n        oil_used=d[pos]/D2;\n        int ans=spend();\n        if(ans==0) return 0;\n        charge();\n        dis-=d[pos];\n    }\n```\nloop:\n```cpp\n    if(dis>0)\n    {\n        oil_used=dis/D2;\n        int ans=spend();\n        if(ans==0) return 0;\n    }\n    printf(\"%.2lf\\n\",dollor);\n    return 0;\n}\n```",
        "postTime": 1495184547,
        "uid": 24700,
        "name": "\u5353\u5353\u5353\u5353",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1016 \u3010\u65c5\u884c\u5bb6\u7684\u9884\u7b97\u3011"
    },
    {
        "content": "\u8c03\u4e86\u4e00\u665a\u4e0a\uff0c\u5199\u4e00\u7bc7\u9898\u89e3\u6170\u85c9\u81ea\u5df1\u3002\u5199\u5f97\u4e0d\u597d\u8bf7\u89c1\u8c05\u3002\n\n\u8fd9\u662f\u4e00\u9053\u8d2a\u5fc3\u52a0\u5b9e\u9645\u5e94\u7528\u9898\uff0c\u6709\u8bb8\u591a\u7684\u7ec6\u8282\uff08\u5728\u4ee3\u7801\u4e2d\uff09;\n\n\u9996\u5148\u4ecb\u7ecd\u4e00\u4e0b\u53d8\u91cf\u7684\u4f5c\u7528\uff1a\n\n1.q[]\uff0cd1,d2,c,p\u50a8\u5b58\u6570\u636e\uff0cans\u50a8\u5b58\u94b1\u6570\n\n2.c1\u8bb0\u5f55\u5728\u7b2ci\u4e2a\u52a0\u6cb9\u7ad9\u65f6\u5f97\u6cb9\u91cf\n\n3.w\u8bb0\u5f55\u7b2ci\u52a0\u6cb9\u7ad9\u5728[i,w)\u4e2d\u7684\u52a0\u6cb9\u8d39\u6700\u5c0f\n\n4.u\u8bb0\u5f55\u7b2ci\u4e2a\u52a0\u6cb9\u7ad9\u5230\u4e0b\u4e00\u4e2a\u52a0\u6cb9\u7ad9\u6240\u9700\u7684\u6cb9\u91cf\uff08\u4e5f\u53ef\u4e0d\u7528\uff0c\u76f4\u63a5\u5199\uff09\n\n5.max2\u8bb0\u5f55\u5728\u7b2ci\u4e2a\u65f6\uff0cc\u548c(q[n+1].d-q[i].d)/d2\uff08\u4ece\u7b2ci\u4e2a\u52a0\u6cb9\u7ad9\u6240\u9700\u7684\u6cb9\u91cf\uff09\u4e2d\u66f4\u5c0f\u7684\u4e00\u4e2a\uff0cmax2\u53d6\u540e\u8005\u662f\u56e0\u4e3a\u5982\u679c\u5927\u4e8e\u6b64\u503c\u5c31\u4f1a\u6709\u6cb9\u5269\u4f59\uff0c\u81ea\u7136ans\u4e0d\u662f\u6700\u5c0f\u503c\n\n6.\u6700\u6700\u91cd\u8981\u7684\u4e00\u4e2a\uff0cbook[]\u8bb0\u5f55\u54ea\u4e00\u4e9b\u52a0\u6cb9\u7ad9\u53ef\u4ee5\u5ffd\u7565\u6389\n\n7.(q[x].d-q[y].d)/d2(x>y) \u8868\u793a\u7684\u662f\u4ece\u7b2cx\u4e2a\u52a0\u6cb9\u7ad9\u5230\u7b2cy\u4e2a\u52a0\u6cb9\u7ad9\u6240\u9700\u7684\u6cb9\n\uff08\u56e0\u4e3a\u4f4d\u7f6e\u4e0d\u591f\u7528\u6240\u4ee5\u5199\u5728\u8fd9\uff0c\u8bf7\u89c1\u8c05\uff09\n\n\u4ecb\u7ecd\u5b8c\u540e\u4e0aAC\u4ee3\u7801\uff1a\n```\n#include<cstdio>\nstruct note{\n\tdouble d,p;\n}q[10];\ndouble min1(double x,double y){\n\tif(x>y) return y;\n\treturn x;\n}\nbool book[10];\nint main(){\n\tdouble d1,c,d2,p,c1=0,ans=0;\n\tint n,w;\n\tscanf(\"%lf%lf%lf%lf%d\",&d1,&c,&d2,&p,&n);\n\tfor(int i=1;i<=n;++i) scanf(\"%lf%lf\",&q[i].d,&q[i].p);\n    \t//\u8fd9\u4e00\u884c\u521d\u59cb\u5316\uff0c\u4e3a\u540e\u9762\u8ba1\u7b97ans,u,w,c1,max2\u505a\u51c6\u5907\uff0c\u81ea\u884c\u7406\u89e3\u4e00\u4e0b\n\tq[0].p=p;q[0].d=0;q[n+1].d=d1;q[n+1].p=0;\n\tfor(int i=0;i<n;++i){\n    \t\t//\u8ba1\u7b97u,max2\n\t\tdouble u=(q[i+1].d-q[i].d)/d2,max2=(q[n+1].d-q[i].d)/d2;\n\t\tmax2=min1(max2,c);w=0;\n\t\tif(u>c) {\n\t\t\tprintf(\"No Solution\");\n\t\t\treturn 0;\n\t\t}\n        \t//\u82e5\u52a0\u6ee1\u4e86\u6cb9\u8fd8\u4e0d\u80fd\u4ecei\u5230i+1\u8bf4\u660e\u65e0\u6cd5\u5230\u8fbe\u76ee\u7684\u5730\uff0c\u76f4\u63a5\u7ec8\u6b62\u7a0b\u5e8f\n        \t//\u679a\u4e3e\u7b2ci\u4e2a\u52a0\u6cb9\u7ad9\u540e\u54ea\u4e00\u4e9b\u52a0\u6cb9\u7ad9\uff08\u8fde\u7eed\u7684\uff09\u6bd4\u7b2ci\u4e2a\u52a0\u6cb9\u7ad9\u7684\u52a0\u6cb9\u8d39\u8d35\n        \t//j\u679a\u4e3e\u5230n+1\u662f\u4e3a\u4e86\u8ba9w\u53ef\u4ee5\u4e3a\u76ee\u7684\u5730\u90a3\u4e2a\u70b9\n\t\tfor(int j=i+1;j<=n+1;++j){\n        \t\t/*\u5df2\u5ffd\u7565\u7684\u52a0\u6cb9\u7ad9\u4e0d\u9700\u518d\u66ff\u90a3\u6bb5\u8def\u7a0b\u52a0\u6cb9\u4e86\uff0c\u82e5\u9047\u5230\u4e86\u66f4\n                \t  \u8d35\u7684\u52a0\u6cb9\u8d39\u7684\u52a0\u6cb9\u7ad9\u8981\u505c\u6b62*/\n\t\t\tif(q[i].p<q[j].p&&!book[j]){\n            \t\t\t//\u82e5\u5df2\u6709\u7684\u6cb9\u52a0\u4e0a\u4ecej\u5730\u5230j+1\u5730\u6240\u9700\u8981\u7684\u6cb9\u6bd4max2\u5927\u5c31\u52a0\u6cb9\u52a0\u5230max2\n                \t\t//\u8ba1\u7b97ans,c1\uff08\u8fd9\u91cc\u5c31\u4e0d\u52a0\u8bf4\u660e\u4e86\uff09\n\t\t\t\tif(c1+(q[j+1].d-q[j].d)/d2>=max2){\n\t\t\t\t\tans+=(max2-c1)*q[i].p;\n\t\t\t\t\tc1=max2;break;//\u65e2\u7136\u6ee1\u4e86\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u9000\u51fa\u4e86\n\t\t\t\t}\n                \t\t//\u53cd\u4e4b\u52a0\u4e0a\u4ecej\u5730\u5230j+1\u5730\u6240\u9700\u8981\u7684\u6cb9\n\t\t\t\telse{\n\t\t\t\t\tans+=(q[j+1].d-q[j].d)/d2*q[i].p;\n\t\t\t\t\tc1+=(q[j+1].d-q[j].d)/d2;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {w=j;break;}//\u7ed9w\u8d4b\u503c\n\t\t}\n\t\tfor(int v=1;v<w;++v) book[v]=1;//\u6807\u8bb0\n        \t//\u8fd8\u8bb0\u5f97\u5417\uff0c\u6211\u4eec\u8fd8\u6ca1\u52a0\u4e0a\u4ecei\u5730\u5230i+1\u5730\u6240\u9700\u7684\u6cb9\u91cf\uff0c\u90a3\u4e48\u8fd9\u4e9b\u6cb9\u52a0\u4e0d\u52a0\u5c31\u770b\u4e0b\u9762\u7684\u4e86\n        \t//\u5173\u952e\uff0c\u5982\u679c\u6b64\u65f6\u7684\u6cb9\u91cf\u5c0f\u4e8e\u5230w\u5730\u6240\u9700\u7684\u6cb9\u91cf\uff0c\u5c31\u9700\u52a0\u4e0a**\u9002\u91cf**\u7684\u6cb9\n\t\tif(c1<(q[w].d-q[i].d)/d2) {\n        \t\t/*\u5982\u679c\u4ecei\u5730\u5230w\u5730\u6240\u9700\u7684\u6cb9\u91cf\u5c0f\u4e8emax2\u90a3\u4e48\u52a0\u6cb9\uff0c\u4e00\u76f4\u52a0\n                \t  \u5230(q[w].d-q[i].d)/d2\uff0c\u53cd\u4e4b\u52a0\u5230max2\u5373\u53ef*/\n\t\t\tif((q[w].d-q[i].d)/d2<=max2){\n\t\t\t\tans+=((q[w].d-q[i].d)/d2-c1)*q[i].p;\n\t\t\t\tc1=(q[w].d-q[i].d)/d2;\n\t\t\t}\n\t\t\telse ans+=(max2-c1)*q[i].p,c1=max2;\n\t\t}\n\t\tc1-=u;//\u51cf\u53bb\u4ecei\u5730\u5230i+1\u5730\u6240\u9700\u7684\u6cb9\uff0c\u4e3a\u4e0b\u7ad9\u505a\u51c6\u5907\n\t}\n\tif((d1-q[n].d)/d2>c){\n\t\tprintf(\"No Solution\");\n\t\treturn 0;\n\t}//\u82e5\u52a0\u6ee1\u4e86\u6cb9\u8fd8\u4e0d\u80fd\u4ece\u7b2cn\u4e2a\u52a0\u6cb9\u7ad9\u5230\u8fbe\u76ee\u7684\u5730\u8bf4\u660e\u4e0d\u80fd\u5230\u8fbe\u76ee\u7684\u5730\n\tans+=((d1-q[n].d)/d2-c1)*q[n].p;\n    \t//\u8bb0\u4f4f\u5230\u4e86n\u5730\uff0c\u6cb9\u7bb1\u4e0d\u77e5\u9053\u6709\u591a\u5c11\u6cb9\uff0c\u6240\u4ee5\u5728\u8fd9\u91cc\u8fd8\u5f97\u518d\u7b97\u4e00\u4e0b\u6cb9\u94b1\n\tprintf(\"%.2lf\",ans);//\u4fdd\u75592\u4f4d\n\treturn 0;\n}\n```\n\u65f6\u7a7a\uff1a9ms 800KB\n\n\u6073\u8bf7\u7ba1\u7406\u5458\u901a\u8fc7\u6211\u8fd9\u7bc7\u9898\u89e3\n\n",
        "postTime": 1559827755,
        "uid": 129740,
        "name": "whwh",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1016 \u3010\u65c5\u884c\u5bb6\u7684\u9884\u7b97\u3011"
    },
    {
        "content": "## \u89e3\u9898\u601d\u8def\n\n\n\u8fd9\u9898\u6211\u91c7\u53d6\u7684\u65b9\u6cd5\u662f\u6a21\u62df\u8f66\u5728\u52a0\u6cb9\u7ad9\u4e4b\u95f4\u884c\u9a76\u7684\u8fc7\u7a0b\uff0c\u4f7f\u8fc7\u7a0b\u4e2d\u9700\u8981\u7528\u7684\u6bcf\u4e00\u4efd\u6cb9\u90fd\u4f7f\u7528\u80fd\u591f\u4f7f\u7528\u7684\u6700\u4fbf\u5b9c\u7684\u6cb9\u3002\u8fd9\u79cd\u60f3\u6cd5\u6bd4\u8f83\u62bd\u8c61\uff0c\u96be\u4ee5\u7406\u89e3\uff0c\u4e0d\u8fc7\u6e05\u6670\u5e76\u4e14\u5b9e\u73b0\u8d77\u6765\u5bb9\u6613\u3002\u9898\u89e3\u4e2d\u4f1a\u6709\u5206\u6790\u548c\u4e3e\u4f8b\u5e2e\u52a9\u7406\u89e3\u3002\n\n\n\u9996\u5148\u8bf4\u4e00\u4e0b\u600e\u4e48\u505a\u5230\u201c\u4f7f\u8fc7\u7a0b\u4e2d\u9700\u8981\u7528\u7684\u6bcf\u4e00\u4efd\u6cb9\u90fd\u4f7f\u7528\u80fd\u591f\u4f7f\u7528\u7684\u6700\u4fbf\u5b9c\u7684\u6cb9\u201d\u3002\u6211\u4eec\u4e0d\u65ad\u5730\u7ef4\u62a4\u53ef\u7528\u7684\u201c\u71c3\u6cb9\u63d0\u4f9b\u8005\u201d\uff08\u5373\u52a0\u6cb9\u7ad9\uff09\u7684\u5217\u8868\u3002\u7b49\u5230\u8981\u7528\u6cb9\u7684\u65f6\u5019\uff0c\u518d\u4ece\u5217\u8868\u4e2d\u9009\u53d6\u6700\u4fbf\u5b9c\u7684\u6cb9\u62ff\u6765\u7528\uff0c\u800c\u4e0d\u662f\u5728\u5230\u90a3\u4e2a\u6cb9\u7ad9\u7684\u65f6\u5019\u5c31\u51b3\u5b9a\u597d\u52a0\u591a\u5c11\u6cb9\u3002\u6211\u4eec\u8bbe\u60f3\u73b0\u5728\u6b63\u6253\u7b97\u4ece\u52a0\u6cb9\u7ad9G1\u884c\u9a76\u5230G2\uff0c\u6a21\u62df\u9009\u53d6\u6700\u4f18\u7684\u8fc7\u7a0b\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u9700\u8981\u8ba8\u8bba\uff0c\u7ec6\u8282\u5982\u4e0b\uff1a\n\n\n- \u4ece\u5f53\u524d\u53ef\u7528\u7684\u201c\u63d0\u4f9b\u8005\u201d\u4e2d\u9009\u53d6\u6700\u4fbf\u5b9c\u7684\u5907\u7528\n\n- \u8ba1\u7b97\u4eceG1\u884c\u9a76\u5230G2\u6240\u9700\u7684\u6cb9\u91cf\uff0c\u5e76\u4e14\u4ece\u201c\u63d0\u4f9b\u8005\u201d\u5904\u4e70\u6765\u71c3\u6cb9\uff0c\u52a0\u8fdb\u8f66\u7684\u6cb9\u7bb1\u91cc\n\n- \u5c06\u8f66\u4eceG1\u5f00\u5230G2\uff0c\u518d\u4ee5G2\u4e3a\u8d77\u70b9\u8ba1\u7b97\u4e0b\u4e00\u6b65\u7684\u884c\u52a8\n\n\n\u53ef\u4ee5\u5bb9\u6613\u5f97\u51fa\u4ee5\u4e0b\u7684\u7ed3\u8bba\uff1a\n\n\n1. \u6bcf\u4e2a\u52a0\u6cb9\u7ad9\u6700\u591a\u80fd\u7ed9\u4f60\u52a0\u4e00\u6cb9\u7bb1\u7684\u6cb9\uff0c\u5982\u679c\u52a0\u7684\u66f4\u591a\u6cb9\u7bb1\u88c5\u4e0d\u4e0b\n\n2. \u53ea\u6709\u5230\u73b0\u5728\u6240\u5728\u4f4d\u7f6e\u7684\u8ddd\u79bb\u5c0f\u4e8e\u4e00\u6cb9\u7bb1\u6cb9\u80fd\u591f\u884c\u9a76\u7684\u8ddd\u79bb\uff0c\u5728\u8fd9\u6837\u7684\u52a0\u6cb9\u7ad9\u624d\u80fd\u4e70\u6cb9\uff08\u5b9e\u9645\u60c5\u51b5\u662f\u5982\u679c\u8d85\u51fa\u8fd9\u4e00\u8ddd\u79bb\uff0c\u7b49\u4f60\u5230\u8fd9\u4e2a\u4f4d\u7f6e\u4e4b\u524d\u4e00\u6cb9\u7bb1\u7684\u6cb9\u5c31\u88ab\u7528\u5b8c\u4e86\uff0c\u8fd9\u4e9b\u6cb9\u5305\u62ec\u4e86\u4f60\u5728\u90a3\u4e2a\u5f88\u8fdc\u7684\u6cb9\u7ad9\u4e70\u7684\u6cb9\uff09\n\n\n\u9700\u8981\u8ba8\u8bba\u7684\u5185\u5bb9\uff1a\n\n\n- \u5982\u679c\u6700\u4fbf\u5b9c\u6cb9\u7ad9\u5230\u73b0\u5728\u6240\u5728\u4f4d\u7f6e\u7684\u8ddd\u79bb\u5728\u4e00\u6cb9\u7bb1\u6cb9\u80fd\u591f\u884c\u9a76\u7684\u8ddd\u79bb\u4e4b\u5185\uff0c\u4e14\u8fd9\u4e2a\u6cb9\u7ad9\u8fd8\u53ef\u4ee5\u4e70\u591f\u4eceG1\u5230G2\u6240\u9700\u7684\u6cb9\uff0c\u90a3\u5f88\u597d\uff0c\u76f4\u63a5\u628a\u8fd9\u4e9b\u6cb9\u4e70\u4e0b\u6765\n\n- \u5982\u679c\u6700\u4fbf\u5b9c\u6cb9\u7ad9\u5230\u73b0\u5728\u6240\u5728\u4f4d\u7f6e\u7684\u8ddd\u79bb\u5728\u4e00\u6cb9\u7bb1\u6cb9\u80fd\u591f\u884c\u9a76\u7684\u8ddd\u79bb\u4e4b\u5916\uff0c\u6216\u8fd9\u4e2a\u6cb9\u7ad9\u4e0d\u80fd\u7ee7\u7eed\u4e70\u6cb9\u4e86\uff0c\u628a\u5b83\u4ece\u5217\u8868\u4e2d\u5220\u53bb\n\n- \u5982\u679c\u6700\u4fbf\u5b9c\u6cb9\u7ad9\u5230\u73b0\u5728\u6240\u5728\u4f4d\u7f6e\u7684\u8ddd\u79bb\u5728\u4e00\u6cb9\u7bb1\u6cb9\u80fd\u591f\u884c\u9a76\u7684\u8ddd\u79bb\u4e4b\u5185\uff0c\u4e14\u8fd9\u4e2a\u6cb9\u7ad9\u4e70\u4e0d\u591f\u4eceG1\u5230G2\u6240\u9700\u7684\u6cb9\uff0c\u9009\u62e9\u6b21\u4fbf\u5b9c\u7684\u4e70\u591f\uff0c\u82e5\u4ecd\u4e0d\u591f\uff0c\u5faa\u73af\u64cd\u4f5c\n\n\n\u4ee5\u9898\u76ee\u6837\u4f8b\u4e3a\u4f8b\uff1a\n\n\n\n\n\n\n```cpp\n ![](https://cdn.luogu.com.cn/upload/pic/8743.png) \n ![](https://cdn.luogu.com.cn/upload/pic/8744.png) \n ![](https://cdn.luogu.com.cn/upload/pic/8745.png) \n ![](https://cdn.luogu.com.cn/upload/pic/8746.png) \n```\n\u5b9e\u73b0\u4e0a\uff0c\u5217\u8868\u7528\u5806/\u4f18\u5148\u961f\u5217\u7ef4\u62a4\uff0c\u53ef\u4ee5\u5c06\u8d77\u70b9\u3001\u7ec8\u70b9\u4f5c\u4e3a\u6cb9\u7ad9\u52a0\u5165\u5217\u8868\uff0c\u8d70\u5230\u7ec8\u70b9\u7ed3\u675f\u524d\u8fdb\u5373\u53ef\u3002\u5b9e\u73b0\u4ee3\u7801\u4e2d\u6709\u8be6\u7ec6\u6ce8\u91ca\u3002\n\n\u672c\u9898\u89e3\u540c\u65f6\u53d1\u5e03\u4e8e\u6211\u7684\u535a\u5ba2[\u65c5\u884c\u5bb6\u7684\u9884\u7b97 NOIP1999 \u9898\u89e3 \u2013 KSkun's Blog](http://ksmeow.moe/noip1999\\_travel/)\uff0c\u6b22\u8fce\u6765\u901bor\u6536\u85cfww\n\n\n## \u5b9e\u73b0\u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <queue>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nstruct gas {\n    double pos, price, vol;\n} g[505];\n\nbool cmp(gas a, gas b) {\n    return a.pos < b.pos;\n} \n\nstruct cmp1 {\n    bool operator()(int a, int b) {\n        return g[a].price > g[b].price;\n    }\n};\n\npriority_queue<int, vector<int>, cmp1> pq; // \u5806\u5b58\u53ef\u4ee5\u7528\u7684\u6cb9 \n\nint n; // \u6ce8\u610fn\u53ef\u4ee5\u4e3a0 \ndouble dis, vol, doil, sprice, maxdis;\n\nint main() {\n    scanf(\"%lf%lf%lf%lf%d\", &dis, &vol, &doil, &sprice, &n);\n    maxdis = vol * doil;\n    if(n == 0) { // \u5bf9n\u4e3a0\u7684\u7279\u5224 \n        if(dis > maxdis) {\n            printf(\"No Solution\");\n        } else {\n            printf(\"%.2lf\", dis / doil * sprice);\n        }\n        return 0;\n    }\n    // \u628a\u8d77\u70b9\u548c\u7ec8\u70b9\u90fd\u52a0\u5165\u52a0\u6cb9\u7ad9\u7684\u5217\u8868 \n    g[0].pos = 0, g[0].price = sprice, g[0].vol = 0;\n    g[n + 1].pos = dis, g[n + 1].price = -1, g[n + 1].vol = -1;\n    for(int i = 1; i <= n; i++) {\n        scanf(\"%lf%lf\", &g[i].pos, &g[i].price);\n        g[i].vol = 0;\n    }\n    sort(g, g + n + 1, cmp); \n    pq.push(0);\n    int ngas = 0; // \u8868\u793a\u73b0\u5728\u5f00\u5230\u4e86\u4e0b\u8868\u4e3angas\u7684\u52a0\u6cb9\u7ad9 \n    double ncost = 0; // \u8868\u793a\u73b0\u5728\u7684\u7d2f\u8ba1\u82b1\u8d39\u6cb9\u94b1 \n    while(ngas < n + 1) {\n        //printf(\"maxdis %lf dis %lf\\n\", maxdis, g[ngas].pos - g[pq.top()].pos);\n        // \u5982\u679c\u8d70\u7684\u592a\u8fdc\u8fdc\u5904\u7684\u6cb9\u7ad9\u5c31\u65e0\u6cd5\u52a0\u6cb9\u4e86\uff0c\u6216\u662f\u8fd9\u4e2a\u6cb9\u7ad9\u5df2\u7ecf\u4e70\u4e86\u4e00\u7bb1\u6cb9\u6ca1\u529e\u6cd5\u518d\u52a0\u4e86\uff0c\u8fd9\u4e24\u79cd\u60c5\u51b5\u8981\u628a\u6cb9\u7ad9\u51fa\u5806 \n        while(g[ngas].pos - g[pq.top()].pos > maxdis || g[pq.top()].vol >= vol) {\n            pq.pop(); \n        } \n        // \u65e0\u89e3\u7684\u60c5\u51b5\uff1a\u5b58\u5728\u76f8\u90bb\u6cb9\u7ad9\u8ddd\u79bb\u5927\u4e8e\u4e00\u7bb1\u6cb9\u53ef\u4ee5\u652f\u6301\u7684\u8ddd\u79bb \n        if(g[ngas + 1].pos - g[ngas].pos > maxdis) {\n            printf(\"No Solution\");\n            return 0;\n        }\n        int gmin = pq.top();\n        pq.pop();\n        //printf(\"ngas %d ncost %lf gmin pos %lf price %lf vol %lf\\n\", ngas, ncost, g[gmin].pos, g[gmin].price, g[gmin].vol);\n        double gcost = (g[ngas + 1].pos - g[ngas].pos) / doil;\n        // \u5f80\u524d\u8d70\u4e00\u4e2a\u6cb9\u7ad9\uff0c\u8ba1\u7b97\u8fd9\u6bb5\u8def\u7a0b\u7684\u6cb9\u8d39\u5f00\u652f \n        if(vol - g[gmin].vol >= gcost) { // \u5982\u679c\u6700\u4fbf\u5b9c\u7684\u6cb9\u80fd\u591f\u652f\u6301\u8fd9\u4e00\u6bb5\u8def\u7a0b \n            ncost += gcost * g[gmin].price;\n            g[gmin].vol += gcost;\n        } else { // \u5982\u679c\u6700\u4fbf\u5b9c\u7684\u6cb9\u4e0d\u80fd\u652f\u6301\u8fd9\u4e00\u6bb5\u8def\u7a0b\uff0c\u90a3\u4e48\u5c31\u8981\u8865\u5145\u6b21\u4fbf\u5b9c\u7684 \n            while(gcost > 1e-10) { // EPS\u8bbe\u4e3a1e-10\u907f\u514d\u6d6e\u70b9\u9677\u9631 \n                double navailable = vol - g[gmin].vol; // \u73b0\u5728\u9009\u62e9\u7684\u6cb9\u7ad9\u53ef\u4ee5\u4e70\u7684\u6cb9\u91cf \n                ncost += min(gcost, navailable) * g[gmin].price;\n                gcost = max(1e-10, gcost - navailable);\n                g[gmin].vol = min(vol, g[gmin].vol + gcost); \n                while(g[ngas].pos - g[pq.top()].pos > maxdis || g[pq.top()].vol >= vol) {\n                    pq.pop(); \n                }\n                gmin = pq.top();\n            }\n        }\n        ngas++;\n        pq.push(gmin); // \u628a\u8fd8\u80fd\u52a0\u7684\u6cb9\u52a0\u8fdb\u53bb \n        pq.push(ngas);\n    }\n    printf(\"%.2lf\", ncost);\n    return 0;\n}\n```",
        "postTime": 1507392457,
        "uid": 35795,
        "name": "KSkun",
        "ccfLevel": 8,
        "title": "\u9898\u89e3 P1016 \u3010\u65c5\u884c\u5bb6\u7684\u9884\u7b97\u3011"
    },
    {
        "content": "# \u8d2a\u5fc3&\u6a21\u62df\n\n\u7b97\u662f\u601d\u8def\u6bd4\u8f83\u7b80\u5355\u7684\u4e00\u9053\u8d2a\u5fc3\u9898\uff0c\u4f46\u662f\u56e0\u4e3a\u53d8\u91cf\u540d\u7684\u7f18\u6545\uff0c\u4ee3\u7801\u5b9e\u73b0\u6211\u5374\u82b1\u4e861\u4e2a\u5c0f\u65f6\uff0c\u5728\u7b2c\u4e00\u904d\u5199\u7684\u65f6\u5019\u5199\u5230\u540e\u9762\u56e0\u4e3a\u53d8\u91cf\u540d\u90fd\u662f\u4ec0\u4e48abcd\u4e4b\u7c7b\u7684\uff0c\u5bfc\u81f4\u6211\u81ea\u5df1\u90fd\u4e0d\u77e5\u9053\u6211\u81ea\u5df1\u5728\u5199\u4ec0\u4e48\u4e86\uff0c\u7136\u540e\u6211\u5c31\u5728\u7ebf\u66b4\u8e81\uff0c\u76f4\u63a5\u5173\u95edc++\uff0c\u53d6\u6d88\u4fdd\u5b58\uff0c\u91cd\u65b0\u5199\u4e86\u4e00\u4efd\u81ea\u4ece\u53c2\u52a0\u7ade\u8d5b\u4ee5\u6765\u6211\u7801\u98ce\u6700\u597d\u7684\u4e00\u4efd\u4ee3\u7801\uff0c\u8fd9\u4e5f\u662f\u6211\u4e3a\u4ec0\u4e48\u8981\u5199\u9898\u89e3\u7684\u539f\u56e0\uff08~~\u5feb\u4e50~~\uff09\n\n\n------------\n\n**\u8fdb\u5165\u6b63\u9898\uff08\u601d\u8def\uff09\uff1a**\n\n\u8d2a\u5fc3\u5206\u4e24\u79cd\u60c5\u51b5\uff1a\n\n1. \u4f60\u5728\u8fd9\u4e2a\u52a0\u6cb9\u7ad9\u6240\u80fd\u5230\u8fbe\u7684\u52a0\u6cb9\u7ad9\u4e2d\u6709\u4e00\u4e2a\u52a0\u6cb9\u7ad9\u7684\u6cb9\u4ef7\u94b1\u6bd4\u4f60\u8fd9\u4e2a\u52a0\u6cb9\u7ad9\u7684\u4ef7\u94b1\u4f4e\uff0c\u90a3\u4f60\u5c31\u52a0\u6cb9\u52a0\u5230\u521a\u597d\u53ef\u4ee5\u5230\u8fbe\u90a3\u4e2a\u52a0\u6cb9\u7ad9\u7684\u6cb9\uff1b\n1. \u5982\u679c\u6ca1\u6709\uff0c\u90a3\u4f60\u5c31\u628a\u6cb9\u52a0\u6ee1\uff0c\u7136\u540e\u524d\u5f80\u6700\u8fdc\u6240\u80fd\u5230\u8fbe\u7684\u52a0\u6cb9\u7ad9\uff0c\u7136\u540e\u518d\u91cd\u590d\u8fd9\u4e24\u4e2a\u64cd\u4f5c\uff1b\n\n\u5f88\u5bb9\u6613\u60f3\u5230\u5f53\u9047\u52302\u79cd\u60c5\u51b5\u65f6\u5c31\u53ef\u4ee5\u8f93\u51fa\u7b54\u6848\u4e86\uff1a\n\n1. \u5373\u4f7f\u4f60\u52a0\u6ee1\u6cb9\u4e5f\u65e0\u6cd5\u4ece\u5f53\u524d\u52a0\u6cb9\u7ad9\u5230\u4e0b\u4e00\u4e2a\u52a0\u6cb9\u7ad9\uff0c\u90a3\u5c31\u8f93\u51faNo Solution\uff1b\n\n1. \u5230\u7ec8\u70b9\u65f6\uff1b\n\n\n------------\n\n**\u63a5\u4e0b\u6765\u5c31\u662f\u6211\u5f15\u4ee5\u4e3a\u50b2\u7684\u4ee3\u7801\u4e86\uff08~~\u83dc\u9e21\u4e16\u754c\u7684\u5feb\u4e50~~\uff09\uff1a**\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\ndouble l/*\u7ec8\u70b9*/,c/*\u6cb9\u7bb1\u5bb9\u91cf*/,d_everyc/*\u6bcf\u5347\u6cb9\u6240\u80fd\u8d70\u7684\u8def\u7a0b*/,petrol_now/*\u5f53\u524d\u6cb9\u7bb1\u91cc\u7684\u6cb9*/,tot_money/*money*/,d_fullc/*\u52a0\u6ee1\u6cb9\u6240\u80fd\u5230\u8fbe\u7684\u8ddd\u79bb*/;\nint sta_now;//\u5f53\u524d\u6240\u5728\u52a0\u6cb9\u7ad9\uff1b \nint n;\nstruct node\n{\n\tdouble price,dis;\n}sta[10];//\u52a0\u6cb9\u7ad9\uff1b \nbool cmp(node x,node y){return x.dis<y.dis;}\nint main()\n{\n\tcin>>l>>c>>d_everyc>>sta[0].price>>n;//\u628a\u8d77\u70b9\u5f53\u505a\u7f16\u53f7\u4e3a0\u7684\u52a0\u6cb9\u7ad9\uff1b \n\td_fullc=d_everyc*c;/*\u52a0\u6ee1\u6cb9\u6240\u80fd\u5230\u8fbe\u7684\u8ddd\u79bb*/\n\tfor(int i=1;i<=n;i++) cin>>sta[i].dis>>sta[i].price;\n\tsort(sta+1,sta+1+n,cmp);\n\twhile(1){\n\t\tbool low_price=false;//\u5728\u80fd\u5230\u8fbe\u7684\u8303\u56f4\u5185\u662f\u5426\u6709\u6cb9\u4ef7\u66f4\u4f4e\u7684\u52a0\u6cb9\u7ad9\uff1b \n\t\tint i;\n\t\tfor(i=sta_now+1;sta[i].dis-sta[sta_now].dis<=d_fullc&&i<=n;i++){\n\t\t\tif(sta[i].price<=sta[sta_now].price){//\u6709\uff1b \n\t\t\t\ttot_money+=((sta[i].dis-sta[sta_now].dis)/d_everyc-petrol_now)*sta[sta_now].price;//\u6ce8\u610f\uff0c\u8981\u7b97\u4e0a\u6cb9\u7bb1\u91cc\u5269\u4f59\u7684\u6cb9\uff1b \n\t\t\t\tpetrol_now=0;\n\t\t\t\tlow_price=true;\n\t\t\t\tsta_now=i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!low_price){//\u5982\u679c\u6ca1\u6709\uff0c\u5c31\u53bb\u5f80\u6700\u8fdc\u53ef\u5230\u8fbe\u7684\u52a0\u6cb9\u7ad9\uff1b \n\t\t\ti--;\n\t\t\tif(sta[sta_now].dis+d_fullc>=l){//\u53ef\u4ee5\u5230\u8fbe\u7ec8\u70b9\u4e86\uff1b \n\t\t\t\ttot_money+=((l-sta[sta_now].dis)/d_everyc-petrol_now)*sta[sta_now].price;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(i==sta_now){//\u6cb9\u52a0\u6ee1\u4e5f\u65e0\u6cd5\u5230\u8fbe\u4e0b\u4e00\u4e2a\u52a0\u6cb9\u7ad9\uff1b \n\t\t\t\t\tcout<<\"No Solution\";\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\telse{//\u53bb\u5f80\u6700\u8fdc\u7684\u52a0\u6cb9\u7ad9\uff1b \n\t\t\t\t\ttot_money+=(c-petrol_now)*sta[sta_now].price;\n\t\t\t\t\tpetrol_now=(c-((sta[i].dis-sta[sta_now].dis)/d_everyc));\n\t\t\t\t\tsta_now=i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tprintf(\"%.2lf\",tot_money);\n\treturn 0;\n}\n```\n\n\n------------\n\n**\u4f18\u7f8e\u7801\u98ce\u4ece\u6211\u505a\u8d77\uff01**\uff08~~\u5feb\u4e50~~\uff09\n",
        "postTime": 1571838481,
        "uid": 224436,
        "name": "zfz04",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1016 \u3010\u65c5\u884c\u5bb6\u7684\u9884\u7b97\u3011"
    },
    {
        "content": "\u7b80\u5355\u7406\u4e00\u4e0b\u8d2a\u5fc3\u7684\u601d\u60f3\uff1a\n\n\n\u5148\u786e\u5b9a\u6bcf\u4e2a\u8282\u70b9\u95f4\u7684\u8ddd\u79bb\uff0cstart\u4e3a0\u8282\u70b9\uff0cend\u4e3an+1\u8282\u70b9\u3002\n\n\n\u82e5\u5b58\u5728\u8282\u70b9\u95f4\u7684\u8ddd\u79bbd[i]-d[i-1]\u5927\u4e8eD\\*c\uff0c\u5219No Solution\uff1b\u5176\u4f59\u60c5\u51b5\uff0c\u5fc5\u6709\u89e3\u3002\n\n\n\u5728\u6bcf\u4e2a\u8282\u70b9\uff0c\u6211\u4eec\u6709\u4e09\u79cd\u9009\u62e9\uff1a\n\n\n1.\u5982\u679c\u6307\u5b9a\u7684goal\u8fd8\u672a\u5b8c\u6210\uff0c\u7ee7\u7eed\u884c\u9a76\uff1b\n\n\n2.\u82e5\u5230\u8fbe\u4e86goal\uff0c\u5219\u5411\u524d\u627e\u7b2c\u4e00\u4e2a\u90ae\u4ef7\u6bd4\u81ea\u5df1\u4f4e\u7684\u6cb9\u7ad9\uff08end\u5904\u6cb9\u7ad9\u6cb9\u4ef7\u4e3a0\uff09\n\n\ni.\u80fd\u591f\u5f00\u5f80\uff08distance<=D\\*c\uff09,\u5219\u5c06goal\u5b9a\u4e3a\u5b83\uff1b\n\n\nii\u4e0d\u591f\u5f00\u5f80\uff08distance>D\\*c\uff09,\u5c06\u6cb9\u52a0\u6ee1\uff0c\u5c06goal\u5b9a\u4e3a\u5728\u52a0\u6ee1\u60c5\u51b5\u4e0b\u6240\u80fd\u5f00\u5230\u7684\u6700\u8fdc\u6cb9\u7ad9\u3002\n\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<string>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\ndouble d[600]={0},p[600];\ndouble s,c,D,p1;\nint n;\ndouble money=0,oil=0;\ndouble locin(int goal,int now)\n{\n    if(now==n+1)\n    {\n        printf(\"%.2lf\",money);\n        return 0;\n    }\n    if(now<goal)\n    {\n        oil-=(d[now+1]-d[now])/D;\n        locin(goal,now+1);\n        return 0;\n    }\n    if(now==goal)\n    {\n        int k=now+1;\n        while(p[k]>p[now])k++;\n        if(d[k]-d[now]<=D*c)\n        {\n            if(oil<(d[k]-d[now])/D)\n            {\n            money+=((d[k]-d[now])/D-oil)*p[now];\n            oil=(d[k]-d[now])/D;\n            }\n            locin(k,now);\n            return 0;\n        }\n        else\n        {\n            int w=now+1;\n            while(d[w]-d[now]<=D*c)w++;\n            w--;\n            money+=(c-oil)*p[now];\n            oil=c;\n            locin(w,now);\n            return 0;\n        }\n    }\n}\nint main()\n{\n    cin>>s>>c>>D>>p1>>n;\n    p[0]=p1;\n    for(int i=1;i<=n;++i)\n    {\n    cin>>d[i]>>p[i];\n    if(d[i]-d[i-1]>D*c)    \n    {\n        cout<<\"No Solution\";\n        return 0;\n    }\n    }\n    d[n+1]=s;p[n+1]=0;\n    if(d[n+1]-d[n]>D*c)    \n    {\n        cout<<\"No Solution\";\n        return 0;\n    }\n    locin(0,0);\n    return 0;\n}\n```",
        "postTime": 1511417196,
        "uid": 74773,
        "name": "\u7eb8\u9189\u4e00\u4e16",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1016 \u3010\u65c5\u884c\u5bb6\u7684\u9884\u7b97\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u8d2a\u5fc3\u5c31\u597d\u4e86\uff1a\n\n> \u5982\u6240\u6709\u7ecf\u8fc7\u7684\u52a0\u6cb9\u7ad9\u4e2d\uff0c\u591a\u52a0\u6700\u4fbf\u5b9c\u7684\u6cb9\u4e00\u5b9a\u662f\u5760\u543c\u7684\uff1b\n\n\u8fd9\u6837\u4e00\u6765\u5c06\u6240\u6709\u7ecf\u8fc7\u7684\u52a0\u6cb9\u7ad9\u7684\u6700\u5927\u52a0\u6cb9\u91cf\uff08\u5c31\u662fC\uff09\u548c\u6cb9\u4ef7\u52a0\u5230\u4f18\u5148\u961f\u5217\u91cc\uff0c\u53ea\u8981\u8d70\u7740\u8d70\u7740\u6ca1\u6cb9\u4e86\uff0c\u5c31\u4ece\u4f18\u5148\u961f\u5217\u53d6\u51fa\u6700\u4fbf\u5b9c\u7684\u6cb9\uff0c\u52a0\u81f3\u6070\u597d\u80fd\u5230\u8fbe\u4e0b\u4e00\u4e2a\u52a0\u6cb9\u7ad9\uff08\u56e0\u4e3a\u4e5f\u8bb8\u90a3\u91cc\u7684\u6cb9\u6bd4\u4f60\u5df2\u7ecf\u7ecf\u8fc7\u7684\u66f4\u4fbf\u5b9c\uff09\uff0c\u7136\u540e\u5c06\u5b83\u7684\u6700\u5927\u52a0\u6cb9\u91cf\u51cf\u53bb\u4f60\u52a0\u4e86\u7684\u90e8\u5206\u91cd\u65b0\u52a0\u5165\u961f\u5217\uff0c\u5982\u679c\u5806\u9876\u7684\u4e0d\u591f\u52a0\uff0c\u5c31\u7ee7\u7eed\u53d6\u7b2c\u4e8c\u5c0f\uff0c\u7b2c\u4e09\u5c0f\u7684\uff0c\u5982\u679c\u6240\u6709\u80fd\u52a0\u7684\u6cb9\u90fd\u52a0\u5b8c\u4e86\u8fd8\u4e0d\u80fd\u5230\u8fbe\u76ee\u7684\u5730\uff0c\u5c31\u65e0\u89e3\u3002\n\n\n\u4ee3\u7801\u5982\u4e0b\uff0c\u4e0d\u592a\u597d\u770b\uff0c\u52ff\u55b7^\\_^\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\nusing namespace std;\nstruct oil{\n    double rest,cost;\n    bool operator < (const oil& rhs) const{\n        return cost>rhs.cost;\n    }\n};\npriority_queue<oil> Q;\ndouble dis[105],cost[105],D1,D2,P,C;\nint N;\nint main(){\n    cin>>D1>>C>>D2>>P>>N;\n    dis[0]=0;\n    for(int i=1;i<=N;i++){\n        cin>>dis[i]>>cost[i];\n    }\n    dis[N+1]=D1;\n    N++;\n    for(int i=N;i>=1;i--) dis[i]-=dis[i-1];\n    int k=1;\n    double ans=0;\n    Q.push((oil){C,P});\n    while(k<=N){\n        double to=dis[k];\n        while(to>0){\n            if(Q.empty()){\n                cout<<\"No Solution\";\n                return 0;\n            }\n            oil o=Q.top();\n            Q.pop();\n            if(o.rest*D2>=to){\n                o.rest-=to/D2;\n                ans+=to/D2*o.cost;\n                to=0;\n                if(o.rest>0) Q.push((oil){o.rest,o.cost});\n            }else{\n                to-=o.rest*D2;\n                ans+=o.rest*o.cost;\n            }\n        }\n        Q.push((oil){C,cost[k]});\n        k++;\n    }\n    printf(\"%.2f\",ans);\n}\n\n```",
        "postTime": 1478837821,
        "uid": 9828,
        "name": "ciyou",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1016 \u3010\u65c5\u884c\u5bb6\u7684\u9884\u7b97\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u795d\u8d3a\u81ea\u5df1 Green Name !\n\n\u53d1\u4e2a\u9898\u89e3\u5e86\u795d\u4e00\u4e0b\n\n\n\u5176\u5b9e\u8fd9\u9053\u9898\u5e76\u4e0d\u96be\uff0c\u5982\u679c\u5f53\u524d\u5728\u7b2ci\u4e2a\u6cb9\u7ad9\uff0c\u5f80\u540e\u904d\u5386\u80fd\u5230\u8fbe\u7684j\u4e2a\u6cb9\u7ad9\uff0c\u7136\u540e\u5982\u679c\u6709\u6cb9\u8d39\u66f4\u4f4e\u7684\uff0c\u5c31\u5148\u53bb\u90a3\u91cc\uff0c\u8fd9\u6837\u80af\u5b9a\u66f4\u7701\u94b1\uff1b\n\n\u5982\u679c\u6ca1\u6709\u6cb9\u8d39\u66f4\u4f4e\u7684\u6cb9\u7ad9\uff0c\u5c31\u53bb\u6700\u8fdc\u7684\u3002\n\n\n\u8fd9\u91cc\u628a\u8d77\u70b9\u548c\u7ec8\u70b9\u90fd\u770b\u505a\u4e00\u4e2a\u6cb9\u7ad9\uff0c\u7136\u540e\u904d\u5386\u5c31\u884c\u4e86\uff0c\u4e0d\u9700\u8981\u7279\u5224N==0\u7684\u60c5\u51b5\uff0c\u56e0\u4e3a\u80af\u5b9a\u6709\u8d77\u70b9\u548c\u7ec8\u70b9\u4e24\u4e2a\u6cb9\u7ad9\u3002\n\n\n\u4e0b\u9762\u662f\u4ee3\u7801\uff0c\u4e0d\u7f8e\u89c2\uff0c\u52ff\u55b7~\n\n\n-----------------------------------------------------------------------------\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include <iostream>\n#include <iomanip>\nusing namespace std;\nstruct station{\n    double dist;\n    double price;\n};\nint main()\n{\n    double fee = 0;\n    double DL,D,C,P;\n    int N;\n    cin >> DL >> C >> D >> P >> N;\n    station s[150];\n    for (int i = 1; i <= N; i++)\n        cin >> s[i].dist >> s[i].price;\n    s[0].dist = 0;\n    s[0].price = P;\n    s[N + 1].dist = DL;\n    s[N + 1].price = -1;\n    int i = 0;          //\u8868\u793a\u5f53\u524d\u6240\u5728\u7684\u8f66\u7ad9\n    double oil = 0;     //\u8868\u793a\u5f53\u524d\u6709\u7684\u6cb9\n    while (i <= N){     //i == N + 1 \u8868\u660e\u5df2\u7ecf\u5230\u8fbe\u7ec8\u70b9\n        int k = i;\n        //\u6709\u66f4\u4fbf\u5b9c\u7684\u5c31\u8fc7\u53bb \u5426\u5219 \u5c3d\u53ef\u80fd\u8d70\u8fdc\n        while (s[i].dist + C*D >= s[k+1].dist && k <= N+1){\n            k++;\n            if (s[k].price <= s[i].price)       //\u627e\u5230\u6bd4\u5f53\u524di\u66f4\u4fbf\u5b9c\u7684\u8f66\u7ad9 \u76f4\u63a5\u786e\u5b9a\u76ee\u6807\n                break;\n        }\n        if (k == i){                            //\u540e\u9762\u6ca1\u6709\u80fd\u5230\u8fbe\u7684\u6cb9\u7ad9\u4e86\n                cout << \"No Solution\";\n                return 0;\n        }\n        double dist = s[k].dist - s[i].dist;  //\u9700\u8981\u524d\u8fdb\u7684\u8ddd\u79bb\n        if (s[k].price <= s[i].price){  //\u524d\u5f80\u4e00\u4e2a\u6cb9\u8d39\u66f4\u4f4e\u7684\u6cb9\u7ad9  \u5c3d\u91cf\u4e0d\u4e70\u6cb9\n            if (oil <= dist / D){       //\u5f53\u524d\u7684\u6cb9\u4e0d\u80fd\u5230\u8fbe k\n                fee += (dist / D - oil) * s[i].price;\n                oil = 0;                //\u79fb\u52a8\u540e \u6ca1\u6cb9\n            }\n            else\n                oil -= (dist / D);\n        }\n        if (s[k].price > s[i].price){   //\u5373\u5c06\u79fb\u52a8\u5230\u4e00\u4e2a\u6cb9\u8d39\u66f4\u9ad8\u7684\u6cb9\u7ad9  \u51fa\u53d1\u524d\u9700\u8981\u4e70\u6ee1\u6cb9\n            if (oil <= dist / D){       //\u5f53\u524d\u7684\u6cb9\u4e0d\u80fd\u5230\u8fbe k\n                fee += (((dist / D) - oil)* s[i].price);\n                oil = C - dist / D;     //\u79fb\u52a8\u540e \u5269\u4f59\u7684\u6cb9\n                fee += (oil * s[i].price);\n            }\n            else{                       //\u5f53\u524d\u7684\u6cb9\u53ef\u4ee5\u5230\u8fbe k\n                fee += (C - oil + dist / D) * s[i].price;\n                oil = C - dist / D;\n            }\n        }\n        i = k;            //\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u6cb9\u7ad9\n    }\n    cout << setiosflags(ios::fixed) << setprecision(2) << fee;\n    return 0;\n}\n\n```",
        "postTime": 1474976836,
        "uid": 23634,
        "name": "\u66ae\u5149",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1016 \u3010\u65c5\u884c\u5bb6\u7684\u9884\u7b97\u3011"
    },
    {
        "content": "\u4ee3\u7801\u77ed\u624d\u662f\u771f\u7406\u3002\n\n\u78b0\u4e0a\u4e00\u4e9b\u60c5\u51b5\u8981\u8dea\uff0c\u4f46AC\u6ca1\u95ee\u9898\u3002\n\n\u8d2a\u5fc3\u601d\u8def\uff1a\u8f93\u5165\u7b2c\u4e00\u884c\u6570\u636e\uff0c\u8bb0\u5f55\u6700\u5927\u822a\u7a0b\uff0c\u8f93\u5165\u52a0\u6cb9\u7ad9\u6570\u636e\uff0c\u8dd1\u4e0d\u5230\u5c31\u8f93\u51fa\u90a3\u4e2a\u5565\uff0c\n\n\u800c\u540e\u8fdb\u51fd\u6570\uff0cx\u662f\u7b2c\u51e0\u7ad9\uff0c\u800c\u540e\u4e00\u4e2a\u5faa\u73af\uff0cget\uff08a=\u6240\u80fd\u5230\u8fbe\u7684\u7ad9\u7684\u5e8f\u53f7+1\uff09\uff0c\n\n\u800c\u540e\u53c8\u4e00\u4e2a\u5faa\u73af\uff0c\u627e\u5230\u6bd4\u51fa\u53d1\u7ad9\uff08x\uff09\u6cb9\u4ef7\u4f4e\u7684\u4e00\u7ad9\u4f5c\u4e3a\u4e0b\u4e00\u4e2a\u505c\u9760\u7ad9\uff0c\n\n\u5982\u679c\u6ca1\u6709\uff0c\u5c31\u53bb\u80fd\u53bb\u7684\u6700\u8fdc\u7684\u4e00\u7ad9\uff08b\uff09\uff0c\u8fd9\u65f6\u8981\u8bb0\u5f55\u4e0byl\uff08\u751f\u80b2\u6c7d\u6cb9\u53ef\u8dd1\u8def\u7a0b\uff09\uff0c\u5bf9\uff0c\u8fd9\u6b21\u8981\u52a0\u6ee1\u6cb9\uff0c\n\n\u8fd9\u6837\uff0c\u4e00\u76f4\u8dd1\u5230\u7ec8\u70b9\u7ad9\uff08n+1\uff09\u3002\n\nPs\uff1a\u5982\u679cb\u7684\u6cb9\u4ef7\u5f88\u9ad8\uff0c\u800c\uff08x\uff0cb\uff09\u4e4b\u95f4\u53c8\u6709\u4e00\u4e2a\u53ea\u6bd4x\u7ad9\u6cb9\u4ef7\u8d35\u4e00\u70b9\u7684\u7ad9\uff0c\u5c31\u5475\u5475\u4e86\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\nusing namespace std;\ndouble d[110],p[110],cd,cl,zh,my,zhc,yl=0;\nint n;\nvoid hx(int x){\nif(x==n+1) return;\ndouble hc=0;\nint a=x,b=x+1,pd=1;\ndo{\n++a;\nhc=d[a]-d[x];\nif(a==n+2) break;\n}while(hc<=zh);\nfor(int i=x+1;i<a;i++){\nb=i;\nif(p[i]<p[x]&&i<=n+1) {pd=0;break;}\n}\nmy+=(d[b]-d[x]-yl)*p[x];\nif(pd) {yl=zh-d[b]+d[x];my+=yl*p[x];}\nelse yl=0;\nhx(b);\n}\nint main(){\nscanf(\"%lf%lf%lf%lf%d\",&zhc,&cl,&cd,&p[0],&n);\nzh=cd*cl;d[n+1]=zhc;\nfor(int i=1;i<=n;i++){\ncin>>d[i]>>p[i];\nif(d[i]-d[i-1]>zh){\nprintf(\"No Solution\");\nreturn 0;\n}\n    }\n    hx(0);\n    printf(\"%.2lf\\n\",my/cd);\n    return 0;\n}\nPS\uff1a\u7b2c\u4e00\u6b21\u5728\u6d1b\u8c37\u53d1\u9898\u89e3\uff0c\u8fd9\u4e48\u591a\u56de\u8f66\u662f\u4ec0\u4e48\u9b3c\u3002\u5220\u4e86\u597d\u4e45\u7684\u8bf4\u3002\n```",
        "postTime": 1470588568,
        "uid": 21020,
        "name": "Long\u00b7J\u00b7William",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1016 \u3010\u65c5\u884c\u5bb6\u7684\u9884\u7b97\u3011"
    },
    {
        "content": "\u4e00\u5f00\u59cb\u601d\u8def\u51fa\u9519\u4e86\uff0c\u6539\u4e86\u6211\u597d\u4e45\uff0c\u521a\u5f00\u59cb\u4ee5\u4e3a\u662fdfs\uff0c\u7ed3\u679cwa\u5230\u6211\u5410\u4e86\u53bb\uff0c\u4e0d\u591a\u8bf4\uff0c\u5148\u4e0a\u621175\u5206dfs\u4ee3\u7801\n```cpp\n#include <iostream>\n#include <algorithm>\n\nusing namespace std;\ndouble d1, c, d2, p;\nint n;\nconst int _size = 15;\ndouble pr[_size];\ndouble d[_size];\ndouble maxRun;\ndouble ans = 1000000.0;\n\nbool check()\n{\n\tfor (int i = 1; i <= n; i++)\n\t\tif (d[i] - d[i - 1] > maxRun)\n\t\t\treturn false;\n\tif (d1 - d[n] > maxRun) \n\t\treturn false;\n\treturn true;\n}\n\nvoid dfs(double cost, int pos, int cd)\n{\n\tif (pos >= n)\n\t{\n\t\tans = min(ans, cost + (d1 - d[pos]) / d2 * pr[pos]);\n\t\treturn;\n\t}\n\tfor (int i = pos + 1; i <= n; i++)\n\t{\n\t\tdouble dd = (d[i] - d[pos]);\n\t\tdouble add = dd / d2 * pr[pos];\n\t\tif (dd <= maxRun)\n\t\t\tdfs(cost + add, i, d1 - d[i]);\n\t}\n\tif ((d1 - d[pos]) <= maxRun)\n\t\tans = min(ans, cost + (d1 - d[pos]) / d2 * pr[pos]);\n\t//printf(\"%.2lf\\n\", ans);\n}\n\nint main()\n{\n\n\tcin >> d1 >> c >> d2 >> pr[0] >> n;\n\tfor (int i = 1; i <= n; i++)\n\t\tcin >> d[i] >> pr[i];\n\tmaxRun = d2 * c;\n\tif (!check()) puts(\"No Solution\");\n\telse\n\t{\n\t\tdfs(0.0, 0, d1);\n\t\tprintf(\"%.2lf\\n\", ans);\n\t}\n\treturn 0;\n}\n```\n\n\u6539\u5230\u6211\u6655\u4e5f\u5c31\u53ea\u670975\u5206\uff0c \u6ca1\u529e\u6cd5\uff0c\u53bb\u770b\u4e86\u4e00\u4e0b\u5927\u4f6c\u4eec\u7684\u601d\u8def\uff0c\u7ed3\u679c\u5c31\u770b\u4e86\u4e00\u884c\u5c31\u770b\u5230\u4e86**\u8d2a\u5fc3**\u3002\u6211\u53ea\u60f3\u8bf4\uff0c\u628a\u5b69\u5b50\u7684\u5fc3\u90fd\u4f24\u5f97\u5b8c\u5b8c\u7684\uff0c\u8bf4\u591a\u90fd \u662f\u6cea\u540c\uff0c\u4e0aac\u4ee3\u7801\n```cpp\n#include <iostream>\n#include <algorithm>\n\nusing namespace std;\ndouble d1, c, d2, maxRun;\nint n;\ndouble  d[15], p[15];\ndouble ans;\n\n//\u68c0\u67e5\u662f\u5426\u5b58\u5728\u4e0d\u53ef\u8fbe\u7684\u60c5\u51b5\nbool check()\n{\n\tfor (int i = 1; i <= n; i++)\n\t\tif (d[i] - d[i - 1] > maxRun)\n\t\t\treturn false;\n\tif (d1 - d[n] > maxRun)\n\t\treturn false;\n\treturn true;\n}\n\n//\u5f97\u5230\u4e0b\u4e00\u4e2a\u52a0\u6cb9\u7ad9\u7684\u4f4d\u7f6e\u4e0b\u6807\nint getNextPos(int pos, double maxD)\n{\n\tint minPos = pos + 1;\n\tfor (int i = pos + 1; i <= n; i++)\n\t{\n\t\tdouble dd = d[i] - d[pos];\n\t\tif (maxD < dd) break;\n\t\tif (p[minPos] >= p[i]) minPos = i;\n\t}\n\treturn minPos;\n}\n\n//\u5f97\u5230\u7b54\u6848\ndouble getAns()\n{\n\tdouble cost = 0.0, cd = 0.0;\n\tint pos = 0;\n\twhile (true)\n\t{\n\t\tif (pos == n) //\u5728\u6700\u540e\u4e00\u4e2a\u52a0\u6cb9\u7ad9\n\t\t{\n\t\t\tcost += (d1 - d[pos] - cd) / d2 * p[pos];\n\t\t\tbreak;\n\t\t}\n\t\tint nextPos = getNextPos(pos, d[pos] + maxRun);\n\t\tif (p[pos] > p[nextPos]) //\u76ee\u6807\u6cb9\u7ad9\u7684\u4ef7\u683c\u66f4\u4f4e\n\t\t{\n\t\t\tcost += (d[nextPos] - d[pos] - cd) / d2 * p[pos];\n\t\t\tcd = 0.0;\n\t\t\tpos = nextPos;\n\t\t}\n\t\telse if (d[pos] + maxRun >= d1) //\u5f53\u524d\u6cb9\u7ad9\u7684\u4ef7\u683c\u6700\u4f4e\uff0c\u4e14\u53ef\u4ee5\u76f4\u63a5\u5230\u7ec8\u70b9\n\t\t{\n\t\t\tcost += (d1 - d[pos] - cd) / d2 * p[pos];\n\t\t\tbreak;\n\t\t}\n\t\telse //\u5f53\u524d\u6cb9\u7ad9\u7684\u4ef7\u683c\u6700\u4f4e\uff0c\u4f46\u4e0d\u80fd\u76f4\u63a5\u5230\u7ec8\u70b9\n\t\t{\n\t\t\tcost += (maxRun - cd) / d2 * p[pos];\n\t\t\tcd = maxRun - (d[nextPos] - d[pos]);\n\t\t\tpos = nextPos;\n\t\t}\n\t}\n\treturn cost;\n}\n\nint main()\n{\n\tcin >> d1 >> c >> d2 >> p[0] >> n;\n\tfor (int i = 1; i <= n; i++)\n\t\tcin >> d[i] >> p[i];\n\tmaxRun = c * d2;\n\tif (!check()) puts(\"No Solution\");\n\telse  printf(\"%.2lf\\n\", getAns());\n\treturn 0;\n}\n```",
        "postTime": 1565194437,
        "uid": 104727,
        "name": "Posser",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1016 \u3010\u65c5\u884c\u5bb6\u7684\u9884\u7b97\u3011"
    },
    {
        "content": "\u7b80\u5355\u7406\u4e00\u4e0b\u8d2a\u5fc3\u7684\u601d\u60f3\uff1a\n\n\u5148\u786e\u5b9a\u6bcf\u4e2a\u8282\u70b9\u95f4\u7684\u8ddd\u79bb\uff0cstart\u4e3a0\u8282\u70b9\uff0cend\u4e3an+1\u8282\u70b9\u3002\n\n\u82e5\u5b58\u5728\u8282\u70b9\u95f4\u7684\u8ddd\u79bbd[i]-d[i-1]\u5927\u4e8eD\\*c\uff0c\u5219No Solution\uff1b\u5176\u4f59\u60c5\u51b5\uff0c\u5fc5\u6709\u89e3\u3002\n\n\u5728\u6bcf\u4e2a\u8282\u70b9\uff0c\u6211\u4eec\u6709\u4e09\u79cd\u9009\u62e9\uff1a\n\n1.\u5982\u679c\u6307\u5b9a\u7684goal\u8fd8\u672a\u5b8c\u6210\uff0c\u7ee7\u7eed\u884c\u9a76\uff1b\n\n2.\u82e5\u5230\u8fbe\u4e86goal\uff0c\u5219\u5411\u524d\u627e\u7b2c\u4e00\u4e2a\u90ae\u4ef7\u6bd4\u81ea\u5df1\u4f4e\u7684\u6cb9\u7ad9\uff08end\u5904\u6cb9\u7ad9\u6cb9\u4ef7\u4e3a0\uff09\n\ni.\u80fd\u591f\u5f00\u5f80\uff08distance<=D\\*c\uff09,\u5219\u5c06goal\u5b9a\u4e3a\u5b83\uff1b\n\nii\u4e0d\u591f\u5f00\u5f80\uff08distance>D\\*c\uff09,\u5c06\u6cb9\u52a0\u6ee1\uff0c\u5c06goal\u5b9a\u4e3a\u5728\u52a0\u6ee1\u60c5\u51b5\u4e0b\u6240\u80fd\u5f00\u5230\u7684\u6700\u8fdc\u6cb9\u7ad9\u3002\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<string>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\ndouble d[600]={0},p[600];\ndouble s,c,D,p1;\nint n;\ndouble money=0,oil=0;\ndouble locin(int goal,int now)\n{\n    if(now==n+1)\n    {\n        printf(\"%.2lf\",money);\n        return 0;\n    }\n    if(now<goal)\n    {\n        oil-=(d[now+1]-d[now])/D;\n        locin(goal,now+1);\n        return 0;\n    }\n    if(now==goal)\n    {\n        int k=now+1;\n        while(p[k]>p[now])k++;\n        if(d[k]-d[now]<=D*c)\n        {\n            if(oil<(d[k]-d[now])/D)\n            {\n            money+=((d[k]-d[now])/D-oil)*p[now];\n            oil=(d[k]-d[now])/D;\n            }\n            locin(k,now);\n            return 0;\n        }\n        else\n        {\n            int w=now+1;\n            while(d[w]-d[now]<=D*c)w++;\n            w--;\n            money+=(c-oil)*p[now];\n            oil=c;\n            locin(w,now);\n            return 0;\n        }\n    }\n}\nint main()\n{\n    cin>>s>>c>>D>>p1>>n;\n    p[0]=p1;\n    for(int i=1;i<=n;++i)\n    {\n    cin>>d[i]>>p[i];\n    if(d[i]-d[i-1]>D*c)    \n    {\n        cout<<\"No Solution\";\n        return 0;\n    }\n    }\n    d[n+1]=s;p[n+1]=0;\n    if(d[n+1]-d[n]>D*c)    \n    {\n        cout<<\"No Solution\";\n        return 0;\n    }\n    locin(0,0);\n    return 0;\n}\n```",
        "postTime": 1506223003,
        "uid": 31798,
        "name": "\u8861\u5c7f\u777f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1016 \u3010\u65c5\u884c\u5bb6\u7684\u9884\u7b97\u3011"
    },
    {
        "content": "\u5229\u7528\u4e00\u4e2a\u4f18\u5148\u961f\u5217\uff0c\u9009\u51fa\u5f53\u524d\u6700\u4fbf\u5b9c\u7684\u6cb9\u6d88\u8017\uff0c\u6d88\u8017\u4e4b\u540e\u518d\u8ba1\u7b97\u4ef7\u683c\u3002\n\n\u672c\u4eba\u683c\u5f0f\u53ef\u80fd\u4e0d\u662f\u592a\u597d\uff0c\u8bf7\u8c05\u89e3\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<queue>\nusing namespace std;\nstruct oil{\n       double r,p;\n       inline bool operator <(const oil &a)const{\n              return p>a.p;}};   //\u5236\u6210\u5c0f\u6839\u5806\nint n;double S,D,C,V;\ndouble p[100001],d[100001];\npriority_queue<oil> q;\nint main(){\n    ios::sync_with_stdio(false);\n    cin>>S>>C>>D>>p[0]>>n;\n    for(int i=1;i<=n;i++)\n      cin>>d[i]>>p[i];\n    n++;d[n]=S;//\u6b64\u5904\u4e00\u5b9a\u8bb0\u5f97\u628a\u6700\u540e\u4e00\u4f4d\u5236\u6210\u7ec8\u70b9\uff08\u6211\u6539\u4e86\u534a\u5929\u4e5f\u6ca1\u53d1\u73b0\uff09\n    for(int i=n;i>=1;i--)\n      d[i]-=d[i-1];\n    oil a0;a0.r=C;a0.p=p[0];\n    q.push(a0);\n    for(int i=1;i<=n;i++)\n      {double l=d[i];\n       while(l)\n        {if(q.empty()) \n          {cout<<\"No Solution\"<<endl;\n           system(\"pause\");\n           return 0;}\n         oil a=q.top();q.pop();\n         if(a.r*D>l)\n           {a.r-=l/D;\n            V+=a.p*l/D;\n            l=0;q.push(a);}\n         else\n           {l-=a.r*D;\n            V+=a.p*a.r;}}//\u8ba1\u7b97\u6d88\u8017\u7684\u6cb9\n       a0.p=p[i];\n       q.push(a0);}//\u52a0\u65b0\u6cb9\n    printf(\"%.2f\",V);\n    //system(\"pause\");\nreturn 0;}//\uff34\uff28\uff25\uff25\uff2e\uff24\n```",
        "postTime": 1495624374,
        "uid": 25448,
        "name": "enderrainy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1016 \u3010\u65c5\u884c\u5bb6\u7684\u9884\u7b97\u3011"
    },
    {
        "content": "\u56e0\u4e3a\u4e0d\u4f1a\u4f18\u5148\u961f\u5217\uff0c\u6240\u4ee5\u60f3\u4e86\u8fd9\u4e2a\u6bd4\u8f83\u7b80\u5355\u6613\u61c2\u7684\u65b9\u6cd5\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u4ee3\u7801\u8fd8\u662f\u5f88\u7b80\u5355\u660e\u4e86\u7684\u3002\n\n\u7b97\u6cd5\u548c\u601d\u60f3\u5199\u5728\u6ce8\u91ca\u91cc\u4e86\n\n\u76f4\u63a5\u7c98\u4e0a\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\ndouble d1,c,d2;\nint n;\nstruct oil {\n    double p,len,over;//\u6bcf\u4e2a\u52a0\u6cb9\u7ad9\u6cb9\u7684\u4ef7\u683c\uff0c\u8ddd\u79bb\uff0c\u548c\u52a0\u6ee1\u6cb9\u8d85\u8fc7\u8fd9\u4e2a\u52a0\u6cb9\u7ad9\u7684\u8ddd\u79bb\n}a[125];\ndouble tot;\nint main(){\n    scanf(\"%lf%lf%lf%lf%d\",&d1,&c,&d2,&a[0].p,&n);\n    double Max=c*d2;\n    for(int i=1;i<=n;i++){\n        scanf(\"%lf%lf\",&a[i].len,&a[i].p);\n        if(Max<a[i].len-a[i-1].len){cout<<\"No Solution\";return 0;\n        //\u5982\u679c\u52a0\u6ee1\u6cb9\u5f00\u4e0d\u5230\u4e0b\u4e00\u4e2a\u52a0\u6cb9\u7ad9 \u7ed3\u675f\n        }\n    }\n    a[0].len=0;\n    a[n+1].len=d1;//\u7ec8\u70b9\u8ddd\u79bb\n    int j=1;//\u4e0b\u4e00\u6b21\u5230\u8fbe\u7684\u52a0\u6cb9\u7ad9\n    int i=0;//\u672c\u6b21\u5230\u8fbe\u7684\u52a0\u6cb9\u7ad9\n    while(i!=n+1)//\u4e00\u5f00\u59cb\u7528[0,n+1]\u7684for\u5faa\u73af\uff0c\u4f46\u662f\u53d1\u73b0\u4e0d\u5bf9\n        {\n        double s=0;//\u524d\u5f80\u4e0b\u4e00\u4e2a\u52a0\u6cb9\u7ad9\u7684\u8ddd\u79bb\n        while(s<=Max&&j<=n&&(a[j].p>=a[i].p))//\u5f00\u5230\u4e0b\u4e00\u4e2a\u6cb9\u4ef7\u6bd4\u672c\u7ad9\u7684\u4fbf\u5b9c\u7684\u52a0\u6cb9\u7ad9\n        {\n            j++;\n            s+=a[j].len-a[j-1].len;\n        }\n        if(s<=Max){//\u5982\u679c\u80fd\u5f00\u5230\u7684\u8bdd\n            if(a[i].over>=a[j].len-a[i].len)a[j].over=a[i].over-a[j].len+a[i].len;\n            //\u5269\u4f59\u7684\u6cb9\u8db3\u591f\u5f00\u5230\u4e0b\u4e00\u4e2a\u52a0\u6cb9\u7ad9\n            else {\n                //\u5982\u679c\u4e0d\u591f\uff0c\u5728\u672c\u7ad9\u52a0\u6cb9\u5230\u6b63\u597d\u80fd\u5f00\u5230\u4e0b\u4e00\u4e2a\u52a0\u6cb9\u7ad9\n                tot+=(a[j].len-a[i].len-a[i].over)/d2*a[i].p;\n                a[j].over=0;\n            }\n        }\n        else{\n            //\u5982\u679c\u52a0\u6ee1\u6cb9\u5f00\u4e0d\u5230\u4e0b\u4e00\u4e2a\u4fbf\u5b9c\u7684\u52a0\u6cb9\u7ad9\n            tot+=(Max-a[i].over)/d2*a[i].p;\n            //\u5728\u672c\u7ad9\u52a0\u6cb9\u5230\u5f00\u5230\u4e0b\u4e00\u4e2a\u52a0\u6cb9\u7ad9\n            j=i+1;\n            a[j].over=Max-(a[j].len-a[i].len);\n        }\n        i=j;//\u5230\u8fbe\u52a0\u6cb9\u7ad9\n    }\n    printf(\"%.2lf\",tot);\n    //system(\"pause\");\n    return 0;\n}\n\n```",
        "postTime": 1494594624,
        "uid": 24694,
        "name": "\u4e00\u6761\u54b8\u9c7c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1016 \u3010\u65c5\u884c\u5bb6\u7684\u9884\u7b97\u3011"
    },
    {
        "content": "\u9898\u76ee\u94fe\u63a5\uff1ahttps://www.luogu.com.cn/problem/P1016\n\n## \u3010\u9898\u76ee\u63cf\u8ff0\u3011\n\u4e00\u4e2a\u65c5\u884c\u5bb6\u60f3\u9a7e\u9a76\u6c7d\u8f66\u4ee5\u6700\u5c11\u7684\u8d39\u7528\u4ece\u4e00\u4e2a\u57ce\u5e02\u5230\u53e6\u4e00\u4e2a\u57ce\u5e02\uff08\u5047\u8bbe\u51fa\u53d1\u65f6\u6cb9\u7bb1\u662f\u7a7a\u7684\uff09\u3002\u7ed9\u5b9a\u4e24\u4e2a\u57ce\u5e02\u4e4b\u95f4\u7684\u8ddd\u79bbD1\u3001\u6c7d\u8f66\u6cb9\u7bb1\u7684\u5bb9\u91cfC\uff08\u4ee5\u5347\u4e3a\u5355\u4f4d\uff09\u3001\u6bcf\u5347\u6c7d\u6cb9\u80fd\u884c\u9a76\u7684\u8ddd\u79bbD2\u3001\u51fa\u53d1\u70b9\u6bcf\u5347\u6c7d\u6cb9\u4ef7\u683cP\u548c\u6cbf\u9014\u6cb9\u7ad9\u6570N\uff08N\u53ef\u4ee5\u4e3a\u96f6\uff09\uff0c\u6cb9\u7ad9ii\u79bb\u51fa\u53d1\u70b9\u7684\u8ddd\u79bbDi\u3001\u6bcf\u5347\u6c7d\u6cb9\u4ef7\u683cPi\uff08i=1,2,\u2026,N\uff09\u3002\u8ba1\u7b97\u7ed3\u679c\u56db\u820d\u4e94\u5165\u81f3\u5c0f\u6570\u70b9\u540e\u4e24\u4f4d\u3002\u5982\u679c\u65e0\u6cd5\u5230\u8fbe\u76ee\u7684\u5730\uff0c\u5219\u8f93\u51fa\u201cNo Solution\u201d\u3002\n\n## \u3010\u8f93\u5165\u683c\u5f0f\u3011\n\u7b2c\u4e00\u884c\uff0cD1\uff0cC\uff0cD2\uff0cP\uff0cN\u3002\n\n\u63a5\u4e0b\u6765\u6709N\u884c\u3002\n\n\u7b2ci+1\u884c\uff0c\u4e24\u4e2a\u6570\u5b57\uff0c\u6cb9\u7ad9i\u79bb\u51fa\u53d1\u70b9\u7684\u8ddd\u79bbDi\u548c\u6bcf\u5347\u6c7d\u6cb9\u4ef7\u683cPi\u3002\n\n## \u3010\u8f93\u51fa\u683c\u5f0f\u3011\n\u6240\u9700\u6700\u5c0f\u8d39\u7528\uff0c\u8ba1\u7b97\u7ed3\u679c\u56db\u820d\u4e94\u5165\u81f3\u5c0f\u6570\u70b9\u540e\u4e24\u4f4d\u3002\u5982\u679c\u65e0\u6cd5\u5230\u8fbe\u76ee\u7684\u5730\uff0c\u5219\u8f93\u51fa\u201cNo Solution\u201d\u3002\n\n## \u3010\u89e3\u9898\u601d\u8def\u3011\n\u501f\u52a9\uff08https://www.luogu.com.cn/discuss/show/134434\uff09\u7684\u601d\u60f3\n\n\u672c\u9898\u8003\u8651\u8d2a\u5fc3+dfs\n\n\u5177\u4f53\u770b\u6ce8\u91ca\n\n## \u3010AC\u4ee3\u7801\u3011\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nstruct node\n{\n\tdouble d, t;  //d\u4ee3\u8868\u8ddd\u79bb\uff0ct\u4ee3\u8868\u90ae\u8d39\n\tbool operator < (const node& b)const\n\t{\n\t\tif (d == b.d) return t < b.t;\n\t\treturn d < b.d;\n\t}\n}a[10];  //\u8bb0\u5f55\u7ad9\u70b9\u4fe1\u606f\nint n;\ndouble ans, d1, c, d2, p;\ninline void dfs(int pos, double tot, double rest)  //pos\u6307\u5f53\u524d\u6240\u5728\u7ad9\u70b9\u7f16\u53f7\uff0ctot\u6307\u76ee\u524d\u82b1\u8d39\uff0crest\u4ee3\u8868\u5269\u4f59\u6cb9\u91cf\n{\n\tif (pos == n + 1)  //\u7ed3\u675f\u6761\u4ef6\u4e3a\u5230\u8fbe\u7ec8\u70b9\n\t{\n\t\tans = min(ans, tot);  //\u66f4\u65b0\u7b54\u6848\n\t\treturn;\n\t}\n\tfor (int i = pos + 1; i <= n + 1; ++i)  //\u4ece\u5f53\u524d\u7ad9\u70b9\u5f80\u540e\u641c\n\t{\n\t\tif (a[i].d - a[pos].d <= c * d2)  //\u5982\u679ci\u7ad9\u70b9\u52a0\u6ee1\u6cb9\u4e5f\u5230\u4e0d\u4e86\u76f4\u63a5return\n\t\t{\n\t\t\tif (a[i].t > a[pos].t) dfs(i, tot + (c - rest) * a[pos].t, c - (a[i].d - a[pos].d) / d2); \n            //\u5982\u679c\u4e0b\u4e00\u4e2a\u7ad9\u70b9\u6cb9\u8d35\uff0c\u5728\u5f53\u524d\u7ad9\u70b9\u628a\u6cb9\u52a0\u6ee1\n\t\t\telse  //\u5982\u679c\u4e0b\u4e00\u4e2a\u7ad9\u70b9\u90ae\u8d39\u4fbf\u5b9c\uff0c\u8003\u8651\u5728\u5f53\u524d\u7ad9\u70b9\u5c3d\u91cf\u5c11\u4e70\u6cb9\uff08\u8d2a\u5fc3\uff09\n\t\t\t{\n\t\t\t\tif (rest * d2 >= a[i].d - a[pos].d) dfs(i, tot, rest - (a[i].d - a[pos].d) / d2);  //\u5982\u679c\u5269\u4f59\u6cb9\u91cf\u80fd\u5230\u4e0b\u4e00\u7ad9\u70b9\uff0c\u4e0d\u52a0\u6cb9\n\t\t\t\telse dfs(i, tot + ((a[i].d - a[pos].d - rest * d2) / d2) * a[pos].t, 0.0); //\u5426\u5219\u5c06\u6cb9\u52a0\u81f3\u521a\u597d\u80fd\u5230\n\t\t\t}\n\t\t}\n\t\telse return;\n\t}\n}\nint main()\n{\n\tscanf(\"%lf%lf%lf%lf%d\", &d1, &c, &d2, &p, &n);\n\tdouble temp = c * d2;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tscanf(\"%lf%lf\", &a[i].d, &a[i].t);\n\t\tif (a[i].d - a[i - 1].d > temp) { puts(\"No Solution\"); return 0; }  //\u5982\u679c\u4e24\u4e2a\u7ad9\u70b9\u95f4\u7684\u8ddd\u79bb\u6211\u52a0\u6ee1\u6cb9\u4e5f\u5230\u4e0d\u4e86\uff0c\u76f4\u63a5return\n\t}\n\tsort(a + 1, a + n + 1);  //\u6309\u7167\u8ddd\u79bb\u6392\u5e8f\n\ta[0].d = 0.0;  //\u8bbe\u7f6e\u8d77\u70b9\n\ta[0].t = p;\n\ta[n + 1].d = d1;  //\u8bbe\u7f6e\u7ec8\u70b9\n\ta[n + 1].t = 0.0;\n\tans = 0x3f3f3f3f / 1.0; //\u5c06\u7b54\u6848\u521d\u59cb\u5316\u4e3a\u65e0\u7a77\n\tdfs(0, 0.0, 0.0);  //\u5f00\u59cb\u7206\u641c\n\tprintf(\"%.2f\\n\", ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1574950341,
        "uid": 226316,
        "name": "YZL11111",
        "ccfLevel": 0,
        "title": "P1016 \u65c5\u884c\u5bb6\u7684\u9884\u7b97 \u89e3\u9898\u62a5\u544a"
    },
    {
        "content": "## \u672c\u9898\u53d8\u91cf\u6bd4\u8f83\u591a\n\n\u6574\u4f53\u601d\u8def\uff1a\n\n\u5728\u5f53\u524d\u7ad9\u7684\u540e\u9762\u5982\u679c\u6709\u66f4\u4fbf\u5b9c\u7684\u7ad9\uff0c\u5e76\u4e14\u6cb9\u591f\u7528\u7684\u60c5\u51b5\u4e0b\uff0c\u5c31\u5230\u90a3\u4e2a\u7ad9\u3002\n\n\u5982\u679c\u4e00\u76f4\u6ca1\u6709\u8fd9\u6837\u7684\u7ad9\uff0c\u5c31\u52a0\u6ee1\u6cb9\uff0c\u627e\u4e00\u4e2a\u76f8\u5bf9\u4fbf\u5b9c\u7684\u5730\u65b9\u52a0\u6cb9\u3002\n\n\u5b9a\u4e49c_cheap\u6570\u7ec4\u8868\u793a\u5728\u5f53\u524d\u91cf\u4ee5\u5185\u80fd\u8d70\u5230\u7684\u8ddd\u79bb\u4e14\u7b2ci\u4e2a\u52a0\u6cb9\u7ad9\u7684\u6cb9\u90fd\u662f\u6700\u4fbf\u5b9c\u7684\u65f6\u9700\u8981\u52a0\u7684\u6cb9\u91cf\u3002\n\nc_cur\u8868\u793a\u5728\u4e0b\u4e00\u7ad9\u7684\u5269\u4f59\u6cb9\u91cf\uff0cc_spend\u8868\u793a\u5230\u4e0b\u4e00\u7ad9\u9700\u8981\u52a0\u591a\u5c11\u6cb9\uff0cc_fill\u662fc_cur\u548c\u6cb9\u7bb1\u6700\u5927\u5bb9\u91cfc\u7684\u6700\u5c0f\u503c\u3002\n\n\u6700\u540e\u8981\u8f93\u51faprice\uff0c\u8868\u793a\u6700\u5c0f\u82b1\u8d39\u3002\n\n\u9996\u5148\uff0c\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u9664\u4ee5d2\uff08\u6bcf\u5347\u6c7d\u6cb9\u80fd\u884c\u9a76\u7684\u8ddd\u79bb\uff09\u5c31\u662f\u9700\u8981\u52a0\u51e0\u5347\u6cb9\u3002\n\n\u5176\u6b21\uff0c\u5728\u5f53\u524d\u4f4d\u7f6e\u7684\u6cb9\u4ef7\u6bd4\u524d\u9762\u7684\u6cb9\u4ef7\u4f4e\u65f6\uff0c\u628acheap\u6570\u7ec4\u91cd\u65b0\u8d4b\u503c\uff08\u8981\u7528\u53cc\u91cd\u5faa\u73af\u904d\u5386\uff09\u3002\n\n\u6b64\u65f6\uff0cc_spend\u7b49\u4e8e\u5f53\u524d\u4f4d\u7f6e\u8ddd\u79bb\u8d77\u70b9\u7684\u4f4d\u7f6e\u51cf\u53bb\u4e0a\u4e00\u4e2a\u4f4d\u7f6e\u8ddd\u79bb\u8d77\u70b9\u7684\u4f4d\u7f6e\u518d\u9664\u4ee5\u6bcf\u5347\u6c7d\u6cb9\u80fd\u884c\u9a76\u7684\u8ddd\u79bb\u3002\n\n\u5982\u679c\u8fd9\u4e2a\u6570\u5927\u4e8e\u4e86\u6cb9\u7bb1\u7684\u5bb9\u91cf\uff0c\u5c31\u8f93\u51faNo Solution\u5e76return 0\u3002\n\n\u5426\u5219\uff0c\u8d4b\u503cc_fill\u5e76\u5224\u65ad\u5b83\u662f\u5426\u5927\u4e8ec_cur\uff0c\u7d2f\u52a0price\u8868\u793a\u6700\u5c0f\u8d39\u7528\uff0c\u8868\u793a\u6700\u540e\u8f93\u51faprice\u3002\n\n\u9644\u4e0a\u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<iostream>\nusing namespace std;\ndouble d[10],pi[10];\nint main()\n{\n    double d1,c,d2,p,pmin=1000,l=0,pz=0;\n    int n;\n    cin>>d1>>c>>d2>>p>>n;\n    d[0]=0;\n    double d0=0;\n    pi[0]=p;\n    double x=c*d2;\n    for(int i=1;i<=n;i++){\n        cin>>d[i]>>pi[i];\n    }\n    for(int i=1;i<=n;i++){\n        if(d[i]-d[i-1]>x){cout<<\"No Solution\";return 0;}\n    }\n    int ii=0;\n    while(d1-d0){\n        for(int i=ii+1;d[i]-d0<=x&&i<=n;i++){\n            if(pi[i]<pmin){\n            pmin=pi[i];ii=i;\n            }\n        }\n        if(pmin<=p){pz+=((d[ii]-d0)/d2-l)*p;l=(d[ii]-d0)/d2;} \n        else if(d1-d0>x)  {\n            pz+=(c-l)*p;\n            l=c;\n        }\n        else{\n            pz+=((d1-d0)/d2-l)*p;break; \n        }\n        l=l-(d[ii]-d0)/d2;\n        d0=d[ii];\n        p=pmin;\n        pmin=1000;\n    }\n    printf(\"%.2lf\",pz);\n    return 0; \n}\n```\n",
        "postTime": 1558097360,
        "uid": 146179,
        "name": "Violette",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1016 \u3010\u65c5\u884c\u5bb6\u7684\u9884\u7b97\u3011"
    },
    {
        "content": "## \u6211\u627f\u8ba4\u4ee5\u4e0b\u662fDalao\u7684\u601d\u8def\n### \u4f46\u662f\uff0c\u4e3a\u4e86\u603b\u7ed3\u7ecf\u9a8c\uff0c\u6211\u51b3\u5b9a\u628a\u8fd9\u7bc7\u9898\u89e3\u5199\u51fa\u6765\n\u8fd9\u4e2a\u9898\u76ee\u8003\u7684\u5c31\u662f\u8d2a\u5fc3\u5427\uff0c\u8c8c\u4f3c\u6ca1\u6709\u5176\u4ed6\u7684\u4ec0\u4e48\u4e86 ~~\uff08\u9664\u4e86\u961f\u5217\u64cd\u4f5c\uff1f\uff09~~\n\n\u8d2a\u5fc3\u601d\u8def\uff1a\n\n1. \u7ecf\u8fc7\u5f53\u524d\u52a0\u6cb9\u7ad9\uff0c\u52a0\u6ee1\u6cb9\u53ef\u4ee5\u5230\u4e0b\u4e0b\u7ad9\uff0c\u90a3\u4e48\u8fd9\u4e00\u7ad9\u548c\u4e0b\u4e0b\u7ad9\u4e2d\u95f4\u7684\u90a3\u4e00\u7ad9\u53ef\u4ee5\u820d\u53bb\uff0c\u672c\u7ad9\u5165\u961f\uff1b\n1. \u5982\u679c\u5373\u4f7f\u5728\u672c\u7ad9\u52a0\u6ee1\u6cb9\uff0c\u4e5f\u65e0\u6cd5\u5230\u8fbe\u4e0b\u4e0b\u7ad9\uff0c\u90a3\u4e48\u6211\u4eec\u4e00\u5b9a\u8981\u7ecf\u8fc7\u4e0b\u4e00\u7ad9\uff0c\u5728\u6b64\u65f6\u5206\u60c5\u51b5\u53d6\u6700\u4f18\u89e3\uff1b\n1. \u5982\u679c\u6709\u4e00\u7ad9\u5373\u4f7f\u52a0\u6ee1\u4e86\u6cb9\u4e5f\u65e0\u6cd5\u5230\u8fbe\u4e0b\u4e00\u7ad9\uff0c\u90a3\u5c31\u662f\u65e0\u89e3\uff1b\n\n\u4ee5\u4e0a\u662f\u9884\u5904\u7406\uff1b\n\n4. \u9884\u5904\u7406\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u820d\u6389\u4e86\u4e00\u90e8\u5206\u52a0\u6cb9\u7ad9\uff0c\u6211\u4eec\u7528\u961f\u5217\u5b58\u50a8\u4e86\u53ef\u4ee5\u201c\u76f4\u8fbe\u201d\u7684\u52a0\u6cb9\u7ad9\uff0c\u73b0\u5728\u5269\u4e0b\u4e24\u79cd\u60c5\u51b5\uff1a\n\n**\u7b2c\u4e00\u79cd\uff1a\u201c\u4e0b\u4e00\u7ad9\u201d\u7684\u6cb9\u66f4\u8d35\uff1b**\n\n**\u7b2c\u4e8c\u79cd\uff1a\u201c\u4e0b\u4e00\u7ad9\u201d\u6cb9\u66f4\u4fbf\u5b9c\uff1b**\n\n- \u5982\u679c\u4e0b\u4e00\u7ad9\u66f4\u8d35\uff0c\u90a3\u6211\u4eec\u5c31\u5728\u5f53\u524d\u7ad9\u52a0\u6ee1\uff0c\u5e76\u8bb0\u5f55\u6cb9\u7bb1\u5230\u4e86\u4e0b\u4e00\u7ad9\u4e4b\u540e\u8fd8\u5269\u591a\u5c11\u6cb9\uff0c\u7136\u540e\u6211\u4eec\u66f4\u65b0\u5f53\u524d\u7684\u6307\u9488\u5230\u4e0b\u4e00\u7ad9\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u201c\u62b5\u8fbe\u201d\u4e0b\u4e00\u7ad9\u4e86\uff1b\n\n- \u5982\u679c\u4e0b\u4e00\u7ad9\u7684\u6cb9\u66f4\u4fbf\u5b9c\uff0c\u6211\u4eec\u5728\u672c\u7ad9\u52a0\u7684\u5c31\u8d8a\u5c11\u8d8a\u597d\uff0c\u90a3\u4e48\uff0c\u5982\u679c\u6cb9\u7bb1\u91cc\u7701\u7684\u6cb9\u591f\u6211\u4eec\u8dd1\u5230\u4e0b\u4e00\u7ad9\uff0c\u6211\u4eec\u5c31\u628a\u8981\u7528\u7684\u6cb9\u51cf\u6389,\u5f53\u524d\u4f4d\u7f6e\u6307\u9488\u8f6c\u5411\u4e0b\u4e00\u7ad9\uff0c\u6211\u4eec\u5c31\u201c\u62b5\u8fbe\u201d\u4e0b\u4e00\u7ad9\u4e86\uff1b\u5426\u5219\uff0c\u6cb9\u7bb1\u91cc\u7684\u6cb9\u4e0d\u591f\u6211\u4eec\u8d70\u5230\u4e0b\u4e00\u7ad9\uff0c\u90a3\u5c31\u4e0d\u5f97\u4e0d\u52a0\u6cb9\uff0c\u6211\u4eec\u53ea\u8981\u52a0\u7684\u521a\u521a\u597d\u5c31\u884c\uff0c\u6240\u4ee5\u5269\u4e0b\u7684\u6cb9\u5c31\u662f0\uff0c\u4f4d\u7f6e\u6307\u9488\u79fb\u52a8\uff0c\u201c\u62b5\u8fbe\u4e0b\u4e00\u7ad9\u201d\u3002\n\n\u5f53\u7136\uff0c\u52a0\u4e86\u591a\u5c11\u6cb9\u5c31\u8981\u52a0\u76f8\u5e94\u7684\u94b1\u6570\uff0c\u8fd9\u4e2a\u4e0d\u7528\u89e3\u91ca\u4e86\uff1b\n\n\u6240\u4ee5\u4ee5\u4e0a\u5c31\u662f\u672c\u9898\u7684\u89e3\u9898\u601d\u8def\n\n\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```cpp\n//\u8ba4\u771f\u770b\uff0c\u675c\u7edd\u6284\u88ad \n#include<cstdio>\n#include<queue>\nusing namespace std;\nstruct travel{\n\tdouble distance,pay;\n}k[10];\n//distance\u8868\u793a\u8ddd\u79bb\uff0cpay\u8868\u793a\u82b1\u8d39 \ndouble d1,c,d2,left,ans;\nint n,temp=0,now=0;//temp  now\u7528\u9014\u5f80\u4e0b\u770b\uff1b \nqueue<int> q;\nint main()\n{\n\tscanf(\"%lf %lf %lf %lf %d\",&d1,&c,&d2,&k[0].pay,&n);\n\t//\u7b2c\u4e00\u6b21\u8f93\u5165\u7684\u6cb9\u4ef7\u82b1\u8d39\u662f\u8d77\u70b9\u7684\u6cb9\u4ef7\uff0c \u76f4\u63a5\u5b58\u5165 \n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%lf %lf\",&k[i].distance,&k[i].pay);\n\t}\n\tk[0].distance=0;\n\tk[n+1].distance=d1;//\u5230\u8fbe\u7ec8\u70b9\u7684\u8ddd\u79bb \n\tk[n+1].pay=0x3f3f3f3f;\n\t//\u770b\u4e0b\u9762\u4ee3\u7801\u5c31\u77e5\u9053\u4e86\uff0c\u8fd9\u8fb9\u5fc5\u987b\u679a\u4e3e\u5230n+1\uff0c\u5426\u5219\u7b2cn\u4e2a\u52a0\u6cb9\u7ad9\u53ef\u80fd\u8981\u7ecf\u8fc7\u5374\u6ca1\u6709\u88ab\u5b58\u5165 \n\t//\u6240\u4ee5\u5230 n+1(\u5373\u7ec8\u70b9) \u867d\u7136\u4e0d\u7528\u52a0\u6cb9\uff0c\u4f46\u7ec8\u70b9\u7684\u6cb9\u4ef7\u4e5f\u8981\u8d4b\u4e00\u4e2a\u6700\u5927\u503c\uff0c\u907f\u514d\u8bef\u5224\u548c\u6b7b\u5faa\u73af\uff0c\u540e\u9762\u8ba1\u7b97\u65f6\u6062\u590d\u62100 \n\t\n\tfor(int i=1;i<=n+1;i++)\n\t{\n\t\tif(k[i].distance-k[i-1].distance>c*d2)//\u52a0\u6ee1\u6cb9\u90fd\u5230\u4e0d\u4e86\uff0c\u65e0\u89e3 \n\t\t{\n\t\t\tprintf(\"No Solution\");\n\t\t\treturn 0; \n\t\t}\n\t\telse if(k[i].distance-k[temp].distance<=c*d2 && k[i].pay<k[temp].pay)\n\t\t//\u8fd9\u91cc\u7684temp\u6307\u9488\u6307\u5411\u672c\u7ad9\uff0c\u800ci\u5374\u4f1a\u6307\u5411\u4e0b\u4e0b\u7ad9\uff0c\u4ed4\u7ec6\u601d\u8003\u4e0b\u4e3a\u4ec0\u4e48\uff1f \n\t\t{\n\t\t\tq.push(i);\n\t\t\ttemp=i;//\u66f4\u65b0\u672c\u7ad9\u4f4d\u7f6e\uff1b \n\t\t}\n\t\telse if(k[i].distance-k[temp].distance>c*d2)//\u5982\u4e0a\uff0c\u6ca1\u529e\u6cd5\u5230\u4e0b\u4e0b\u7ad9\uff0c\u6216\u8005\u662f\u4e0b\u4e0b\u7ad9\u6bd4\u8fd9\u7ad9\u66f4\u8d35(\u8d2a\u5fc3) \n\t\t{\n\t\t\tq.push(i-1);//\u90a3\u4e48\u8fd9\u7ad9\u662f\u8981\u53d6\u7684\uff0c\u8fdb \n\t\t\ttemp=i-1;//\u6307\u9488\u79fb\u52a8\u5230\u4e0b\u4e00\u7ad9\uff1b \n\t\t\ti--;\n\t\t\t//\u4fdd\u8bc1i\u6307\u9488\u4e0d\u662f\u6307\u5411\u4e0b\u4e0b\u7ad9\uff0c\u800c\u662f\u6307\u5411\u4e0b\u4e00\u7ad9\n\t\t\t//(\u6bcf\u6b21\u5faa\u73afi\u90fd\u4f1a\u81ea\u52a01\uff0c\u5bfc\u81f4\u8fdb\u5165\u4e0b\u4e0b\u7ad9\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u62b5\u6d88\u4e86) \n\t\t}\n\t\t//\u89e3\u7b54\u4e0a\u9762\u7684\u7591\u95ee\uff1a\n\t\t//\u5982\u679c\u4e0a\u9762\u76843\u4e2aif\u90fd\u6ca1\u6709\u6267\u884c\uff0c\u90a3\u6307\u9488\u5c31\u6307\u5411\u4e0b\u4e0b\u7ad9\u4e86\uff1b \n\t}\n\tq.push(n+1);k[n+1].pay=0;\n\t//\u6700\u540e\u7ec8\u70b9\u4e5f\u8981\u5230\u8fbe\uff0cn+1\u4e5f\u7b97\u4e00\u7ad9\uff0c\u8fdb\uff1b\u540c\u65f6\u6062\u590d\u5230\u7ec8\u70b9\u7684\u6cb9\u4ef7\u4e3a0\uff0c\u907f\u514d\u51fa\u9519\uff1b \n\twhile(!q.empty())\n\t{\n\t\tint x=q.front();q.pop();//\u51fa\u53d1\u53bb\u201c\u4e0b\u4e00\u7ad9\u201d\uff0c\u201c\u4e0b\u4e00\u7ad9\u201d\u51fa\u961f\n\t\t//\u8d2a\u5fc3\u8fc7\u7a0b\uff1a \n\t\tif(k[x].pay>k[now].pay) //\u201c\u4e0b\u4e00\u7ad9\u201d\u66f4\u4fbf\u5b9c \n\t\t{\n\t\t\tans+=c*k[now].pay;//\u94b1\u8bb0\u5f97\u52a0\uff0c\u6cb9\u4e0d\u662f\u514d\u8d39\u7684~ (\u4e0b\u540c)\n\t\t\tleft=c-(k[x].distance-k[now].distance)/d2;\n\t\t}\n\t\telse //\u5426\u5219\u5c31\u8981\u8ba8\u8bba \n\t\t{\n\t\t\tdouble need=(k[x].distance-k[now].distance)/d2;\n\t\t\tif(left>=need)//\u5269\u4e0b\u7684\u6cb9\u591f\uff0c\u90a3\u4e48\u4e0d\u7528\u52a0\u6cb9 \n\t\t\t{\n\t\t\t\tleft-=need;\n\t\t\t}\n\t\t\telse//\u5269\u4e0b\u7684\u6cb9\u4e0d\u591f\uff0c\u90a3\u4e48\u8fd8\u8981\u52a0\u6cb9\uff0c\u52a0\u5230\u521a\u597d\u80fd\u5230\u4e0b\u4e00\u7ad9\u5c31\u884c \n\t\t\t{\n\t\t\t\tans+=(need-left)*k[now].pay;//\u540c\u4e0a\uff0c\u6cb9\u94b1\u52a0\u4e0a \n\t\t\t\tleft=0;\n\t\t\t}\n\t\t}\n\t\tnow=x;//\u201c\u62b5\u8fbe\u201d\u4e0b\u4e00\u7ad9 \n\t}\n\tprintf(\"%.2lf\",ans);//\u4fdd\u7559\u4e24\u4f4d\u5c0f\u6570 \n\treturn 0;\n} \n```\n\n\u8fd9\u6b21\u5c31\u662f\u603b\u7ed3\u7ecf\u9a8c\u5427~\uff08\u4ee5\u53ca\u8868\u793a\u5bf9Dalao\u7684\u819c\u62dc\uff09\n",
        "postTime": 1556730071,
        "uid": 196649,
        "name": "xiejinhao",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1016 \u3010\u65c5\u884c\u5bb6\u7684\u9884\u7b97\u3011"
    },
    {
        "content": "\u8fd9\u9898\u59a5\u59a5\u7684\u8d2a\u5fc3\u561b, \u6211\u4eec\u6574\u7406\u4e0b\u9898\u76ee:\n\n\u9996\u5148\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u52a0\u6cb9\u7ad9\u6765\u8bf4, \u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u7684\u4fe1\u606f\u662f\u5230\u4e0a\u4e00\u4e2a\u52a0\u6cb9\u7ad9(\u6216\u8d77\u70b9)\u7684\u8ddd\u79bb, \u4ee5\u53ca\u672c\u52a0\u6cb9\u7ad9\u7684\u6cb9\u94b1. \u5bf9\u4e8e\u8f66\u6765\u8bf4\u6211\u4eec\u77e5\u9053\u8f66\u6700\u591a\u80fd\u52a0\u591a\u5c11\u6cb9, \u4ee5\u53ca\u6bcf\u5347\u6cb9\u80fd\u5f00\u591a\u8fdc.\n\n\u6700\u7ec8\u8981\u5f97\u5230\u7684\u7ed3\u679c\u662f\u8fd9\u8f86\u8f66\u6700\u5c11\u80fd\u82b1\u591a\u5c11\u94b1, \u6216\u8005\u8fd9\u8f86\u8f66\u534a\u8def\u5c31\u6ca1\u6cb9\u4e86.\n\n\u90a3\u4e48\u6211\u4eec\u5047\u8bbe\u6211\u4eec\u73b0\u5728\u5728\u4efb\u610f\u4e00\u4e2a\u52a0\u6cb9\u7ad9(\u5047\u8bbe\u662f\u7b2c $i$ \u4e2a), \u4e3a\u4e86\u8282\u7701\u4efb\u610f\u6cb9\u8d39, \u81ea\u7136\u8981\u9009\u6700\u4fbf\u5b9c\u7684\u6cb9, \u5230\u5f00\u5230\u8fd9\u4e2a\u52a0\u6cb9\u7ad9\u4e3a\u6b62, \u6211\u4eec\u53ef\u4ee5\u52a0\u6cb9\u7684\u70b9\u6709 $i$ \u4e2a(\u5305\u62ec\u8d77\u70b9), \u6211\u4eec\u9700\u8981\u9009\u53d6\u5176\u4e2d\u6cb9\u8d39\u6700\u4fbf\u5b9c\u7684\u52a0\u8db3\u591f\u5f00\u5230\u4e0b\u4e00\u4e2a\u52a0\u6cb9\u7ad9\u7684\u6cb9\u5373\u53ef.\n\n\u4f46\u662f\u9700\u8981\u989d\u5916\u8003\u8651\u7684\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\u6cb9\u7bb1\u662f\u6709\u5927\u5c0f\u7684(\u5f53\u7136\u52a0\u6cb9\u7ad9\u4f60\u53ef\u4ee5\u89c6\u4e3a\u65e0\u9650\u6cb9\u6876), \u4e5f\u5c31\u662f\u8bf4\u4e00\u4e2a\u52a0\u6cb9\u7ad9\u6700\u591a\u6700\u591a\u4e5f\u53ea\u80fd\u52a0\u4f60\u8f66\u6cb9\u7bb1\u7684\u5bb9\u91cf\u7684\u6cb9(\u4e0d\u7136\u5c31\u662f\u72af\u89c4\u64cd\u4f5c\u7684\u4e86\u561b). \u5047\u5982\u8bf4\u8fd9\u4e2a\u52a0\u6cb9\u7ad9\u4ee5\u53ca\u52a0\u8fc7\u4e86\u4e00\u6cb9\u7bb1\u7684\u6cb9\u4e86, \u90a3\u4e48\u8f66\u5b50\u5728\u90a3\u4e2a\u52a0\u6cb9\u7ad9\u5c31\u4e0d\u53ef\u80fd\u518d\u52a0\u6cb9\u4e86. \u6211\u4eec\u5c31\u8981\u8003\u8651\u5230\u53e6\u4e00\u4e2a\u52a0\u6cb9\u7ad9\u52a0\u6cb9\u4e86, \u800c\u90a3\u4e2a\u52a0\u6cb9\u7ad9\u5c31\u662f\u9664\u53bb\u8fd9\u4e2a\u52a0\u6cb9\u7ad9\u4ee5\u5916\u7684\u6cb9\u94b1\u6700\u4fbf\u5b9c\u7684\u52a0\u6cb9\u7ad9\u4e86.\n\n\u5f53\u7136\u8fd9\u4e2a\u524d\u63d0\u662f\u5728\u6709\u522b\u7684\u53ef\u52a0\u6cb9\u7684\u52a0\u6cb9\u7ad9\u7684\u60c5\u51b5\u7684, \u5982\u679c\u6ca1\u6709\u4e86\u5462, \u5c31\u8bf4\u660e\u6ca1\u5730\u65b9\u52a0\u6cb9\u4e86, \u6ca1\u6cb9\u4e86, \u8f66\u5c31\u5f00\u4e0d\u4e86\u4e86, \u76f4\u63a5\u8f93\u51fa\"No Solution\"\n\n\u7136\u540e\u6574\u7406\u5b8c\u89e3\u6cd5\u540e\u6211\u4eec\u53d1\u73b0, **\u6240\u6709\u7684\u57fa\u4e8e\u5f53\u524d\u7684\u52a0\u6cb9\u7ad9\u7684\u8fd0\u7b97\u548c\u4e4b\u540e\u7684\u6570\u636e\u5b8c\u5168\u65e0\u5173, \u53ea\u548c\u4e4b\u524d\u7684\u6570\u636e\u6709\u5173**, \u6240\u4ee5\u6211\u4eec\u91c7\u53d6\u8fb9\u8f93\u5165, \u8fb9\u8fd0\u7b97\u7684\u65b9\u6cd5.\n\n**\u7531\u4e8e\u6211\u4eec\u7684\u6570\u636e\u90fd\u662f\u4f9d\u6b21\u8f93\u5165\u5f97\u5230\u7684**, \u6240\u4ee5\u6211\u4eec\u91c7\u7528**\u63d2\u5165\u6392\u5e8f**, \u7528\u6765\u5f97\u5230\u6700\u4fbf\u5b9c\u7684\u52a0\u6cb9\u7ad9, \u5982\u679c\u8fd9\u4e2a\u52a0\u6cb9\u7ad9\u4e0d\u80fd\u518d\u52a0\u6cb9\u4e86, \u6211\u4eec\u5c31\u5220\u53bb\u8fd9\u4e00\u9879.\n\n\u6ce8\u610f: \u6700\u540e\u4e00\u6bb5\u8def(\u6700\u540e\u4e00\u4e2a\u52a0\u6cb9\u7ad9(\u6216\u8d77\u70b9)\u5230\u7ec8\u70b9)\u662f\u6ca1\u6709\u8f93\u5165\u7684(\u7ec8\u70b9\u7684\u8ddd\u79bb\u5c31\u662f\u8def\u7a0b\u7684\u8ddd\u79bb), \u6240\u4ee5\u6211\u4eec\u8981\u5355\u72ec\u62ff\u51fa\u6765\u518d\u8fd0\u7b97, \u4e0d\u80fd\u6f0f\u6389.\n\n```cpp\n#include <iostream>\n#include <iomanip>\n#include <list>\n\nstruct Station {\n\tdouble added_oil; // \u8be5\u52a0\u6cb9\u7ad9\u52a0\u8fc7\u7684\u6cb9\n\tdouble oil_price; // \u8be5\u52a0\u6cb9\u7ad9\u7684\u6c7d\u6cb9\u5355\u4ef7\n};\n\nvoid insert(std::list<Station> &list, double oil_price) {\n\tfor (std::list<Station>::iterator iter = list.begin(); iter != list.end(); ++iter) {\n\t\tif (iter->oil_price > oil_price) {\n\t\t\tlist.insert(iter, { 0.0, oil_price });\n\t\t\treturn;\n\t\t}\n\t}\n\tlist.push_back({ 0.0, oil_price });\n}\n\nint main() {\n\tdouble d1, d2, c, p;\n\tint n;\n\tstd::cin >> d1 >> c >> d2 >> p >> n;\n\tstd::list<Station> stations;\n\tstations.push_back({ 0.0, p });\n\n\tdouble distance, oil_price, last_distance = 0.0, oil_require, money = 0.0, oil_remaining;\n\tstd::list<Station>::iterator iter;\n\tfor (int i = 1; i <= n; ++i) {\n\t\tstd::cin >> distance >> oil_price;\n\t\toil_require = (distance - last_distance) / d2; // \u9700\u8981\u7684\u6cb9\u91cf\n\t\titer = stations.begin();\n\t\twhile (oil_require) {\n\t\t\toil_remaining = c - iter->added_oil;\n\t\t\tif (oil_require < oil_remaining) { // \u5f53\u524d\u6700\u4fbf\u5b9c\u7684\u52a0\u6cb9\u7ad9\u53ef\u52a0\u7684\u6cb9\u8fd8\u8db3\u591f\u52a0\n\t\t\t\titer->added_oil += oil_require;\n\t\t\t\tmoney += oil_require * iter->oil_price;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse { // \u4e0d\u591f\u52a0\u4e86\n\t\t\t\toil_require -= oil_remaining; // \u7f3a\u5c11\u7684\u6cb9\n\t\t\t\tmoney += oil_remaining * iter->oil_price;\n\t\t\t\tstations.erase(iter); // \u5220\u9664\u5f53\u524d\u9009\u62e9\u7684\u52a0\u6cb9\u7ad9\n\t\t\t\tif (stations.empty()) { // \u6ca1\u6709\u53ef\u7528\u7684\u52a0\u6cb9\u7ad9\n\t\t\t\t\tstd::cout << \"No Solution\" << std::endl;\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\titer = stations.begin();\n\t\t\t}\n\t\t}\n\t\tlast_distance = distance;\n\t\tinsert(stations, oil_price);\n\t}\n\n\t// \u8fd9\u4e00\u6bb5\u548c\u4e0a\u9762for\u4e00\u6837, \u552f\u4e00\u7684\u533a\u522b\u5c31\u662f\u6ca1\u6709\u8f93\u5165, \u4e3b\u8981\u662f\u6211\u61d2\u5f97\u5c01\u88c5\u4e00\u4e2a\u51fd\u6570\u4f20\u53c2\u4e86, \u5c31\u76f4\u63a5\u590d\u5236\u4e86\n\toil_require = (d1 - last_distance) / d2;\n\titer = stations.begin();\n\twhile (oil_require) {\n\t\toil_remaining = c - iter->added_oil;\n\t\tif (oil_require < oil_remaining) {\n\t\t\titer->added_oil += oil_require;\n\t\t\tmoney += oil_require * iter->oil_price;\n\t\t\tbreak;\n\t\t}\n\t\telse {\n\t\t\toil_require -= oil_remaining;\n\t\t\tmoney += oil_remaining * iter->oil_price;\n\t\t\tstations.erase(iter);\n\t\t\tif (stations.empty()) {\n\t\t\t\tstd::cout << \"No Solution\" << std::endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\titer = stations.begin();\n\t\t}\n\t}\n\t\n\tstd::cout << std::setprecision(2) << std::fixed << money << std::endl;\n\treturn 0;\n}\n```\n\n",
        "postTime": 1552459874,
        "uid": 91676,
        "name": "Alex_Cui",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1016 \u3010\u65c5\u884c\u5bb6\u7684\u9884\u7b97\u3011\u59a5\u59a5\u7684\u8d2a\u5fc3"
    },
    {
        "content": "\u8fd9\u662f\u6211\u5199\u7684\u7b2c\u4e09\u7bc7\u9898\u89e3\uff0c\u53ef\u80fd\u8bed\u8a00~~\u4f18\u8d28~~\u5e7c\u7a1a\uff0c\u8bf7dalao\u539f\u8c05\u3002\n\n\u770b\u5230\u9898\u76ee\uff0c\u7b2c\u4e00\u53cd\u5e94\u4fbf\u662f\u8d2a\u5fc3\uff0c~~\u8ff9\u8c61\u5f88\u7b80\u5355\u2014\u2014**\u76f4\u89c9**~~\u3002\n\n\u601d\u8def\u4e5f\u662f\u5728\u5199\u9898\u4e2d\u4e00\u70b9\u70b9\u6784\u6210\uff0c\u9010\u6e10\u5b8c\u5584\uff0c\u5199\u9898\u65f6\u4e0d\u8981\u62c5\u5fc3\u91cd\u5199\u6216\u662f\u7801 _BUG_ \uff0c\u8fd9\u4e5f\u662f\u96be\u514d\u7684\uff0c\u6211\u60f3\u8fd9\u4e5f\u662f\u4e00\u4e2a\u9010\u6e10\u5b8c\u5584\u7684\u8fc7\u7a0b\u3002\n\n### \u4ee5\u4e0a\u4e3a\u5fc3\u5f97\uff0c\u4e0b\u9762\u624d\u662f\u6b63\u9898\u2026\u2026\n\n\n#### \u672c\u9898\u57fa\u672c\u601d\u8def\u4e0d\u96be\u60f3\uff1a\n\n1. \u91cd\u70b9\u662f\u6bcf\u4e00\u4e2a\u7ad9\u70b9\uff0c\u4e0d\u53ef\u80fd\u5728\u4e2d\u9014\u4efb\u610f\u4e00\u5904\u8003\u8651\u540e\u9762\u7684\u8def\u3002~~\uff08\u5e9f\u8bdd\uff09~~\n1. \u4e0b\u4e00\u6b65\u80af\u5b9a\u662f\u5230\u4e00\u4e2a\u53ef\u4ee5\u62b5\u8fbe\u4e14\u5728\u53ef\u62b5\u8fbe\u7684\u4e2d _q_ \u6700\u5c0f\u7684\u7ad9\u70b9\u3002\n\n\u60f3\u5230\u8fd9\uff0c\u4fbf\u53ef\u4ee5\u5f00\u59cb\u7801\u4ee3\u7801\u4e86\u3002\n\n#### \u540e\u6765\uff0c\u6211\u53d1\u73b0\u4e00\u6b21\u6027\u52a0\u6cb9\u672a\u5fc5\u52a0\u6ee1\uff0c\u5171\u5206\u4e24\u79cd\u60c5\u51b5\uff1a\n\n\uff08\u4e00) \u5728\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u8d77\u70b9\u7684\u8def\u7a0b\u5185\uff0c\u6709\u6bd4\u6b64\u5904\u6cb9\u4ef7\u66f4\u4f4e\u5ec9\u7684\u7ad9\u70b9\uff0c\u90a3\u53ea\u9700\u52a0\u8db3\u4ee5\u5230\u8fbe\u8fd9\u4e2a\u7ad9\u70b9\u7684\u6cb9\u5373\u53ef\u3002  \n\uff08\u4e8c\uff09\u53cd\u4e4b\uff0c\u5219\u53ef\u4ee5\u52a0\u6ee1\u3002\uff08\u6ce8\uff1a\u7ed3\u675f\u65f6\u5269\u4f59\u6cb9\u91cf\u4e00\u70b9\u4e3a0\u3002\uff09  \n\u5176\u5bf9\u5e94\u7684\u4ee3\u7801\uff1a\n\n```cpp\nfor(int i = 0;i <= n + 1;i++)\n    {\n        for(int j = i + 1;j <= n + 1;j++)\n        {\n            if((road[j].d - road[i].d) > (c * d2))\n            {\n                b[i] = 1;\t\t//\u505a\u6807\u8bb0\n                break;\t\t\t//\u5df2\u7ecf\u627e\u5b8c\u4e86\uff0c\u6ca1\u6709\uff0c\u4fbf\u53ef\u4ee5\u505a\u4e0a\u6807\u8bb0\n            }\n            if(road[j].p < road[i].p)\n            {\n                break;\t\t\t//\u5df2\u627e\u5230\u6bd4\u4ed6\u5c0f\u7684\uff0c\u4fbf\u76f4\u63a5\u9000\u51fa\n            }\n        }\n    }\n```\n\n#### \u540e\u6765\u56e0\u4e3a\u6709\u4e24\u7c7b\u70b9\u4e4b\u5206\uff1a\u53bb\u90a3\u53ea\u56e0\u4e3a\u6cb9\u7bb1\u5c0f\u548c\u53bb\u90a3\u53ea\u56e0\u4e3a\u6cb9\u4ef7\u5c0f\u3002\uff08\u4e00\u4e2a\u662fshould_n,\u53e6\u4e00\u4e2a\u662fmin_n)\n\n\u4e3b\u8981\u7684\u5206\u522b\u5728\u7c7b\u578b\uff1a\n\n```cpp\nif(road[i].p < road[min_n].p && i != n + 1) {min_n = i;break;} //\u8fd9\u91cci != n + 1\u8d77\u5230\u53bb\u9664\u7ec8\u70b9\u7684\u6548\u679c,\u6b64\u5904break\u5fc5\u987b\u52a0\uff0c\u56e0\u4e3a\u8def\u7a0b\u4e00\u6837\uff0c\u6cb9\u4ef7\u8d8a\u4f4e\uff0c\u6d88\u8d39\u8d8a\u4f4e\uff0c\u5230\u8fbe\u7b2c\u4e00\u4e2a\u6bd4\u5f53\u524d\u6cb9\u4ef7\u5c0f\u7684\u70b9\u518d\u8bf4\u3002\nelse if(road[i].p < road[should_n].p) should_n = i;\n```\n\n\u4ee5\u53ca\u5bf9\u5e94\u5904\u7406\u65b9\u6cd5\uff1a\n\n```cpp\nif(min_n != now) \t\t\t\t\t\t\t\t\t\t\t\t//\u56e0\u4e3amin_n\u88ab\u6539\u53d8\u4e86\uff0c\u6240\u4ee5\u7528min_n\u3002 \n{\n\tans += max((road[min_n].d - road[now].d) / d2 - lest,0.0) * road[now].p;\n\tlest = max(0.0,lest - (road[min_n].d - road[now].d) / d2);\t//lest\u7528\u4e8e\u5b58\u50a8\u5269\u4f59\u7684\u6cb9\u3002\n\tnow = min_n;\n}\nelse \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\u53cd\u4e4b\uff0c\u7528should_n \n{\n\tif(b[now] == 1)\t\t\t\t\t\t\t\t\t\t\t\t//\u88ab\u6807\u8bb0\u53f7\u7684\u7ad9\u70b9  \u8001\u677f\uff0c\u52a0\u6ee1\uff01\n\tans += (c - lest) * road[now].p,lest = max(0.0,c - (road[should_n].d - road[now].d) / d2);\n\telse\n\tans += max((road[should_n].d - road[now].d) / d2 - lest,0.0) * road[now].p,lest = max(0.0,lest - (road[should_n].d - road[now].d) / d2);\n\tnow = should_n;\n}\n```\n\n\u6700\u540e\uff0c\u732e\u4e0a\u5b8c\u6574\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ndouble d1,c,d2,p,ans;\nint n;\nbool b[10];\n\nstruct haha{\n    double d,p; \n} road[10];\n\nbool hehe(haha a,haha b)\t\t//\u65e0\u89c6\u8fd9\u4e9b\u540d\u79f0\uff0c\u53ea\u662f\u865a\u540d\u7f62\u4e86\u2026\u2026\n{\n    return a.d < b.d;\n}\n\nint main()\n{\n    int now = 0;\n    cin>>d1>>c>>d2>>p>>n;\n    for(int i = 1;i <= n;i++)\n    cin>>road[i].d>>road[i].p;\n    sort(road + 1,road + 1 + n,hehe);\n    road[0].d = 0,road[0].p = p;\n    road[n + 1].d = d1,road[n + 1].p = 0;\n    for(int i = 0;i <= n + 1;i++)\n    {\n        for(int j = i + 1;j <= n + 1;j++)\n        {\n            if((road[j].d - road[i].d) > (c * d2))\n            {\n                b[i] = 1;\n                break;\n            }\n            if(road[j].p < road[i].p)\n            {\n                break;\n            }\n        }\n    }\n    double lest = 0;\n    while(now != n + 1)\n    {\n        int min_n,should_n;\n        min_n = now;\n        should_n = now + 1;\n        for(int i = now + 1;i <= n + 1;i++)\n        {\n            if((road[i].d - road[now].d) > (c * d2))\n            {\n                if(i == now + 1){\n                    cout<<\"No Solution\";\n                    return 0;\n                }\n                break;\n            }\n            if(road[i].p < road[min_n].p && i != n + 1) {min_n = i;break;} //\u8fd9\u91cci != n + 1\u8d77\u5230\u53bb\u9664\u7ec8\u70b9\u7684\u6548\u679c,\u6b64\u5904break\u5fc5\u987b\u52a0\uff0c\u56e0\u4e3a\u8def\u7a0b\u4e00\u6837\uff0c\u6cb9\u4ef7\u8d8a\u4f4e\uff0c\u6d88\u8d39\u8d8a\u4f4e\uff0c\u5230\u8fbe\u7b2c\u4e00\u4e2a\u6bd4\u5f53\u524d\u6cb9\u4ef7\u5c0f\u7684\u70b9\u518d\u8bf4\u3002\n            else if(road[i].p < road[should_n].p) should_n = i;\n        }\n        if(min_n != now) //\u56e0\u4e3amin_n\u88ab\u6539\u53d8\u4e86\uff0c\u6240\u4ee5\u7528min_n\u3002 \n        {\n            ans += max((road[min_n].d - road[now].d) / d2 - lest,0.0) * road[now].p;\n            lest = max(0.0,lest - (road[min_n].d - road[now].d) / d2);\n            now = min_n;\n        }\n        else //\u53cd\u4e4b\uff0c\u7528should_n \n        {\n            if(b[now] == 1)\n            {\n                ans += (c - lest) * road[now].p;\n                lest = max(0.0,c - (road[should_n].d - road[now].d) / d2);\n            }\n\n            else\n            {\n                ans += max((road[should_n].d - road[now].d) / d2 - lest,0.0) * road[now].p;\n                lest = max(0.0,lest - (road[should_n].d - road[now].d) / d2);\n            }\n\n            now = should_n;\n        }\n    }\n    printf(\"%.2lf\",ans);\n    return 0;\n}\n```\n\n\n\u7801\u98ce\u72ec\u7279\uff0c\u5e0c\u671b\u539f\u8c05\u3002",
        "postTime": 1551267715,
        "uid": 55698,
        "name": "\u6cbb\u6da8\u7684\u9992\u5934",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1016 \u3010\u65c5\u884c\u5bb6\u7684\u9884\u7b97\u3011"
    },
    {
        "content": "# \u8fd9\u4e2a\u9898\u597d\u50cf\u662f\u7eaf\u6a21\u62df, \u6211\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\u5c31\u62ff\u8fd9\u4e2a\u9898\u5199\u5427\n## \u8fd9\u4e2a\u9898\u6709\u4ee5\u4e0b\u51e0\u70b9\u8981\u6ce8\u610f\n### 1.\u628a\u8d77\u70b9\u770b\u6210\u52a0\u6cb9\u7ad9\n### 2.\u6309\u7167\u52a0\u6cb9\u7ad9\u79bb\u8d77\u70b9\u8ddd\u79bb\u6392\u5e8f\n### 3.\u627e\u5230\u4e0b\u4e00\u4e2a\u6700\u4fbf\u5b9c\u4e14\u6cb9\u7bb1\u88c5\u6ee1\u80fd\u5230\u8fbe\u7684\u52a0\u6cb9\u7ad9, \u627e\u4e0d\u5230\u5982\u679c\u80fd\u76f4\u63a5\u5230\u7ec8\u70b9\u5c31break, \u4e0d\u884c\u5c31\u76f4\u63a5\"No Solution\"\n### 4.\u770b\u76ee\u524d\u52a0\u6cb9\u7ad9\u548c\u627e\u5230\u7684\u52a0\u6cb9\u7ad9\u54ea\u4e2a\u4fbf\u5b9c, \u8fd9\u4e2a\u4fbf\u5b9c\u5c31\u52a0\u5230\u79bb\u7ec8\u70b9\u6700\u8fd1\u7684\u5730\u65b9(\u770b\u80fd\u4e0d\u80fd\u76f4\u63a5\u5230\u7ec8\u70b9), \u90a3\u4e2a\u4fbf\u5b9c\u5c31\u52a0\u5230\u90a3\u4e2a\u52a0\u6cb9\u7ad9\n### 5.\u884c\u9a76\u5230\u90a3\u4e2a\u52a0\u6cb9\u7ad9\n### 6.\u91cd\u590d 3 - 5 , \u6700\u540e\u8f93\u51fa\u7b54\u6848\n\n\n\u8fd9\u91cc\u653e\u6211\u7684ac\u4ee3\u7801, \u7531\u4e8e\u6211\u65f6\u95f4\u4e0d\u8db3\u591f\u4e00\u6b21\u6027\u5199\u5b8c, \u5c31\u5199\u4e86\u5f88\u591a\u6ce8\u91ca, \u65b9\u4fbf\u6211\u4e0b\u6b21\u5199\u8d77\u6765\u80fd\u60f3\u8d77\u6765\u4e0a\u6b21\u5199\u5565\u4e86. \u6ce8\u91ca\u8fd8\u80fd\u65b9\u4fbf\u6539\u4ee3\u7801, \u6309\u7167\u5236\u5b9a\u7684\u7b56\u7565\u5b8c\u6210, \u5efa\u8bae\u5927\u5bb6\u6bcf\u6b21\u90fd\u5199\u6ce8\u91ca. \u53e6\u5916, \u6211\u53d8\u91cf\u540d\u51e0\u4e4e\u90fd\u662f\"\u62fc\u97f3\u5728\u624b, \u547d\u540d\u968f\u624b\", \u6240\u4ee5, emmmm, \u5927\u5bb6\u4f1a\u770b\u7684\u65b9\u4fbf\u4e00\u70b9\n------------\n```cpp\n//luogu p1016 ac\n#include <stdio.h>\n#include <algorithm>\n//     \u603b\u8ddd\u79bb    \u90ae\u7bb1\u5bb9\u91cf   \u884c\u9a76\u6d88\u8017\u6cb9 \u7b2c\u4e00\u4e2a\u7684\u6cb9\u4ef7\ndouble zongjuli, rongliang, xingshi, jiage;\nint n; //\u52a0\u6cb9\u7ad9\u4e2a\u6570\n//\u76ee\u524d\u8ddd\u79bb \u76ee\u524d\u6cb9\u91cf \u76ee\u524d\u4ef7\u683c(\u7b54\u6848)\ndouble now, you, ans;\nstruct station {\n\t// \u8d77\u70b9\u8ddd\u79bb   \u6cb9\u4ef7\n\tdouble juli, jiage;\n\tinline bool operator<(const station& s1) const { //\u6bd4\u8f83, \u770b\u8ddd\u79bb\n\t\treturn juli < s1.juli;\n\t}\n} stations[505];\ninline int getnextpos(int index) { //\u627e\u5230\u4e0b\u4e00\u4e2a\u80fd\u5230\u8fbe\u7684\u4ef7\u683c\u6700\u5c0f\u7684\u52a0\u6cb9\u7ad9\n\tif (stations[index].juli > rongliang * xingshi + now || index >= n) //\u65e0\u6cd5\u627e\u5230\u4e0b\u4e00\u4e2a\n\t\treturn -1;\n\tint ret = index;\n\tfor (int i = index + 1; i < n; i++) {\n\t\tif (rongliang * xingshi + now < stations[i].juli) //\u5230\u4e0d\u4e86\n\t\t\tbreak;\n\t\tif (stations[i].jiage < stations[ret].jiage) //\u5c0f\u5219\u66f4\u65b0\n\t\t\tret = i;\n\t}\n\treturn ret;\n}\nint main() {\n\tscanf(\"%lf %lf %lf %lf %d\", &zongjuli, &rongliang, &xingshi, &jiage, &n);\n\tfor (int i = 0; i < n; i++)\n\t\tscanf(\"%lf %lf\", &stations[i].juli, &stations[i].jiage);\n\t//\u628a\u8d77\u70b9\u770b\u6210\u52a0\u6cb9\u7ad9\n\tstations[n++] = { 0, jiage };\n\t//\u6309\u8ddd\u79bb\u6392\u5e8f\n\tstd::sort(stations, stations + n);\n\tint index = 0; //\u73b0\u5728\u5728\u7684\u52a0\u6cb9\u7ad9, \u5f00\u59cb\u4e3a\u8d77\u70b9\n\tfor (; now < zongjuli; ) {\n\t\t//\u627e\u5230\u4e0b\u4e00\u4e2a\u52a0\u6cb9\u7ad9\n\t\tint tmp = getnextpos(index + 1);\n\t\t//\u5224\u65ad\u5728\u54ea\u52a0\u6cb9\n\t\tif (tmp == -1) {\n\t\t\t//\u6cb9\u7bb1\u591f\u5230\u7ec8\u70b9\u5219\u9000\u51fa\n\t\t\tif (you * xingshi + now >= zongjuli)\n\t\t\t\tbreak;\n\t\t\t//\u5982\u679c\u6cb9\u7bb1\u6ee1\u80fd\u5230\u8fbe\u5219\u52a0\u591f\n\t\t\tif (rongliang * xingshi + now >= zongjuli) {\n\t\t\t\t//\u52a0\u591f\n\t\t\t\t//    \u52a0\u5165\u6cb9\u91cf\n\t\t\t\tdouble jiaru = (zongjuli - stations[index].juli - you * xingshi) / xingshi;\n\t\t\t\tans += jiaru * stations[index].jiage;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t//\u65e0\u6cd5\u5230\u8fbe\n\t\t\tputs(\"No Solution\");\n\t\t\treturn 0;\n\t\t}\n\t\tif (stations[index].jiage < stations[tmp].jiage) { //\u8fd9\u91cc\u4fbf\u5b9c\n\t\t\tif (now + rongliang * xingshi >= zongjuli) {\n\t\t\t\t//\u52a0\u591f\n\t\t\t\t//    \u52a0\u5165\u6cb9\u91cf\n\t\t\t\tdouble jiaru = (zongjuli - stations[index].juli - you * xingshi) / xingshi;\n\t\t\t\tans += jiaru * stations[index].jiage;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t//\u52a0\u6ee1\n\t\t\t\tans += (rongliang - you) * stations[index].jiage;\n\t\t\t\tyou = rongliang;\n\t\t\t}\n\t\t}\n\t\telse { //\u90a3\u91cc\u4fbf\u5b9c\n\t\t\t//\u52a0\u5230\u90a3\u4e2a\u52a0\u6cb9\u7ad9\n\t\t\t//juli = you * xingshi     jiaruqian = you * jiage\n\t\t\t//if (you * xingshi < stations[tmp].juli - stations[index].juli) {\n\t\t\t//    \u52a0\u5165\u6cb9\u91cf\n\t\t\tdouble jiaru = (stations[tmp].juli - stations[index].juli - you * xingshi) / xingshi;\n\t\t\tans += jiaru * stations[index].jiage;\n\t\t\tyou += jiaru;\n\t\t\t//}\n\t\t}\n\t\t//\u884c\u9a76\u5230\u4e0b\u4e00\u4e2a\u52a0\u6cb9\u7ad9\n\t\tnow = stations[tmp].juli;\n\t\tyou -= (stations[tmp].juli - stations[index].juli) / xingshi;\n\t\tif (you < 0) //\u5c0f\u6570\u53ef\u80fd\u6709\u7cbe\u5ea6\u95ee\u9898\n\t\t\tyou = 0;\n\t\tindex = tmp; //\u66f4\u65b0\u73b0\u5728\u4f4d\u7f6e\n\t}\n\tprintf(\"%.2lf\", ans);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1549808758,
        "uid": 126934,
        "name": "Nuclear_Missile",
        "ccfLevel": 0,
        "title": "P1016 \u65c5\u884c\u5bb6\u7684\u9884\u7b97 \u9898\u89e3"
    },
    {
        "content": "## \u8d2a\u5fc3\u9898  \n\u540c\u6b65\u53d1\u5e03\u4e8e[My blog](https://www.cnblogs.com/wzzorz/articles/10316545.html)  \n[\u8d2a\u5fc3\u7b97\u6cd5](https://baike.baidu.com/item/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/5411800?fr=aladdin)  \n\u53ef\u4ee5\u8bc1\u660e\uff0c**\u5728\u4e00\u822c\u60c5\u51b5\u4e0b**\uff0c\u53ef\u4ee5\u627e\u8eab\u524d\u6700\u5c0f\u70b9\uff0c\u7136\u540e\u7b97**\u603b\u91cf+=\uff08\u4e24\u70b9\u8ddd\u79bb\uff09/\u6bcf\u5347\u6cb9\u8dd1\u7684\u8def\u7a0b \u4e58\u4e0a \u6b64\u70b9\u6cb9\u4ef7**  \n**\u4f46\u662f\uff01**  \n\u6211\u662f\u8bf4**\u201c\u5728\u4e00\u822c\u60c5\u51b5\u4e0b\u201d**  \n\u6211\u6b64\u524dWA\u4e86\u4e00\u4e2a\u70b9 _75_ \u5206  \n\u7406\u7531\u662f\u6ca1\u6709\u8003\u8651\u524d\u70b9\u4ef7\u5c0f\u4e8e\u540e\u70b9\u80fd\u5230\u8fbe\u7684\u6240\u6709\u4ef7  \n\u6b64\u65f6\u5e94\u8be5\u8003\u8651\u628a\u6cb9\u52a0\u6ee1\uff0c\u7528nspc\u548clnspc\u8bb0\u5f55\u7bb1\u5185\u6cb9\u91cf  \n\u53ef\u662f\u95ee\u9898\u5e76\u672a\u7ed3\u675f\uff0c\u5982\u679c\u4e0d\u52a0\u6ee1\u5c31\u53ef\u4ee5\u5230\u7ec8\u70b9\u600e\u4e48\u529e\uff1f~~\u6b64\u65f6\u5c31\u8981\u770b\u6211\u4ee3\u7801\u4e86~~  \n\u5173\u4e8e~~\u51fa\u73b0\u4e09\u6b21\u7684~~goto\uff1a[\u8fd9\u91cc\u79d1\u666e](https://baike.baidu.com/item/goto%E8%AF%AD%E5%8F%A5/7603004?fr=aladdin)  \n~~\u6211\u76f8\u4fe1\u6211\u7684\u53d8\u91cf\u547d\u540d\u7b80\u6d01\u6613\u61c2~~  \n\u5e94\u8be5\u770b\u5f97\u61c2\u7684\u849f\u84bb\u7684\u4ee3\u7801\uff1a  \n\n\n------------\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,now,bj;\ndouble S,spc,perS,v[10],dis[10],total,nspc,tem,lnspc;\n//S\u8def\u7a0b\uff0cperS\u6bcf\u5347\u8def\u7a0b\uff0cv\u4ef7\u683c\uff0cdis\u8def\u7a0b\uff0cspc=spc\uff0cnspc=nowspace\uff0clnspc=lastnowspace\nint find_cheapest(int x,int y)\n{\n\tdouble maxx=1001;\n\tint maxn=0;\n\tfor(int i=x;i<=y;i++)\n\t{\n\t\tif(v[i]<maxx)\n\t\t{\n\t\t\tmaxx=v[i];\n\t\t\tmaxn=i;\n\t\t}\n\t}\n\treturn maxn;\n}\nint main()\n{\n\t//freopen(\"travel.in\",\"r\",stdin);\n\t//freopen(\"travel.out\",\"w\",stdout);\n\tcin>>S>>spc>>perS>>v[0]>>n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>dis[i]>>v[i];\n\t}\n\tdis[n+1]=S;\n\tv[n+1]=9999;//\u5c06\u7ec8\u70b9\u89c6\u4e3an+1\n\tn++;\n\tfor(int i=1;i<=n;i++)//\u6392\u9664\u5230\u8fbe\u4e0d\u4e86\u7684\u60c5\u51b5 \n\t\tif((dis[i]-dis[i-1])/perS>spc)\n\t\t{\n\t\t\tcout<<\"No Solution\";\n\t\t\treturn 0;\n\t\t}\n\tfor(;;)//\u4e0d\u5230\u7ec8\u70b9\u975e\u597d\u6c49\uff0c\u6240\u4ee5\u4f7f\u52b2\u8dd1\uff0c\u53cd\u6b63\u6392\u9664\u4e86No Solution\n\t{\n\t\tfor(int j=n;j>=now+1;j--)\n\t\t{\n\t\t\tint tmp=find_cheapest(now+1,j);//\u627e\u8eab\u524d\u6700\u5c0f\u70b9\n\t\t\tif(v[tmp]>v[now])//\u6211\u8bf4\u7684WA\u6389\u7684\u5173\u952e\uff0c\u5224\u65ad\u4e0e\u5f53\u524d\u70b9\u6cb9\u4ef7\u6bd4\u662f\u5426\u66f4\u5c0f\n\t\t\t{\n\t\t\t\tnspc=spc;\n\t\t\t\tbj=1;\n\t\t\t\tgoto Wzz;//\u7384\u5b66\u7684\u8df3\u6cd5\u3002\u3002\u3002\u53ea\u80fd\u6162\u6162\u4f53\u4f1a\n\t\t\t\tOrz:\n\t\t\t\ttotal+=nspc*v[now];\n\t\t\t\tnspc-=(dis[tmp]-dis[now])/perS;\n\t\t\t\tlnspc=nspc;\n\t\t\t\tnow=tmp;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbj=0;\n\t\t\t\tif((dis[tmp]-dis[now])/perS<=spc)\n\t\t\t\t{\n\t\t\t\t\ttem=(dis[tmp]-dis[now])/perS;\n\t\t\t\t\ttotal+=(tem-nspc)*v[now];\n\t\t\t\t\tnspc=0;\n\t\t\t\t\tnow=tmp;\n\t\t\t\t\tWzz:\n\t\t\t\t\tif(spc*perS>=dis[n]-dis[now])\n\t\t\t\t\t{\n\t\t\t\t\t\ttotal+=((dis[n]-dis[now])/perS-lnspc)*v[now];\n\t\t\t\t\t\tgoto stop;//stop\u7528\u6765\u8df3\u51fa\u5faa\u73af\u8f93\u51fa\u7ed3\u679c\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif(bj==1)\n\t\t\t\t\t\t\tgoto Orz;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\t\n\t\t}\t\t\t\n\t}\n\tstop:\n\tprintf(\"%.2lf\",total);\n\treturn 0;\n}\n```",
        "postTime": 1548331581,
        "uid": 97593,
        "name": "G_A_TS",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1016 \u3010\u65c5\u884c\u5bb6\u7684\u9884\u7b97\u3011"
    },
    {
        "content": "\u6a21\u62df\n\u9996\u5148\u5c06\u76ee\u7684\u5730\u6309\u5750\u6807\u6392\u5e8f\uff0c\u91cd\u590d\u4ee5\u4e0b\u8fc7\u7a0b\n\n1.\u627e\u5230\u7b2c\u4e00\u4e2a\u6bd4\u5f53\u524d\u52a0\u6cb9\u7ad9\u6cb9\u4ef7\u4f4e\u7684\u52a0\u6cb9\u7ad9\n\n\u2460\u5982\u679c\u6cb9\u7bb1\u5bb9\u91cf\u8db3\u591f\u5230\u8fbe\u8be5\u52a0\u6cb9\u7ad9,\u52a0(x2-x1)/d2-nowc\u5347\u6cb9,\u8f6c\u5230\u8be5\u52a0\u6cb9\u7ad9\n\n\u2461\u5982\u679c\u6cb9\u7bb1\u5bb9\u91cf\u4e0d\u8db3\u4ee5\u5230\u8fbe\u8be5\u52a0\u6cb9\u7ad9,\u52a0\u6ee1\u6cb9,\u5e76\u8ba1\u7b97\u80fd\u5230\u8fbe\u7684\u6700\u8fd1\u7684\u52a0\u6cb9\u7ad9\n\n\u2462\u5982\u679c\u52a0\u6ee1\u6cb9\u4e4b\u540e\u8fd8\u5230\u8fbe\u4e0d\u4e86\u6700\u8fd1\u7684\u52a0\u6cb9\u7ad9,no solution\n\n2.\u5982\u679c\u627e\u4e0d\u5230\u6bd4\u5f53\u524d\u6cb9\u4ef7\u4f4e\u7684\u52a0\u6cb9\u7ad9,\u5373\u5f53\u524d\u52a0\u6cb9\u7ad9\u7684\u6cb9\u4ef7\u6700\u4f4e,\u52a0\u6ee1\u6cb9,\u8ba1\u7b97\u80fd\u5230\u8fbe\u7684\u6700\u8fd1\u52a0\u6cb9\u7ad9,\u5982\u679c\u5230\u4e0d\u4e86no solution \n\n\u6a21\u62df\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u5c06\u8d77\u70b9\u548c\u7ec8\u70b9\u5206\u522b\u89c6\u4e3a\u6cb9\u4ef7\u4e3ap\u548c\u6cb9\u4ef7\u4e3a\u4e00\u4e2a\u6781\u5927\u503c\u7684\u52a0\u6cb9\u7ad9,\u6a21\u62df\u8fc7\u7a0b\u4e2d\u6700\u540e\u4e00\u4e2a\u52a0\u6cb9\u7ad9\u5373\u53ef\u8df3\u51fa\n\n\u6ce8\u610f\u5230\u8fbe\u6700\u540e\u4e00\u4e2a\u52a0\u6cb9\u7ad9\u65f6\u53ef\u80fd\u8fd8\u5269\u6709\u90e8\u5206\u6cb9,\u53ea\u9700\u5728\u4e4b\u524d\u6a21\u62df\u8fc7\u7a0b\u4e2d\u8bb0\u5f55\u6700\u540e\u4e00\u4e2a\u52a0\u8fc7\u6cb9\u7684\u52a0\u6cb9\u7ad9\u7684\u7f16\u53f7\u4ee5\u53ca\u5269\u4f59\u6cb9\u7684\u591a\u5c11,\u518d\u7528ans\u51cf\u53bb\u8be5\u52a0\u6cb9\u7ad9\u6cb9\u4ef7*\u5269\u4f59\u6cb9\u91cf\u5373\u53ef\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\n\ndouble d1,c,d2,ans,nowc;//nowc\u4e3a\u5f53\u524d\u6cb9\u91cf \nint n,now,pp;//now\u8868\u793a\u5f53\u524d\u52a0\u6cb9\u7ad9\u7684\u7f16\u53f7,pp\u8bb0\u5f55\u7684\u662f\u6700\u8fd1\u4e00\u6b21\u52a0\u6cb9\u7684\u52a0\u6cb9\u7ad9 \nbool flag1,flag2;\nstruct node\n{\n\tdouble dis,p;//\u5750\u6807\u548c\u6cb9\u4ef7 \n};\nnode gas[510];//\u7f16\u53f7\u4ece0\u5f00\u59cb \nbool cmp(const node a,const node b){return a.dis<b.dis;}\n\nint main()\n{\n\tcin>>d1>>c>>d2>>gas[0].p>>n;//\u5c06\u51fa\u53d1\u70b9\u89c6\u4e3a\u5750\u6807\u4e3a0\u7684\u52a0\u6cb9\u7ad9 \n\tfor(register int i=1;i<=n;i++)\n\tcin>>gas[i].dis>>gas[i].p;\n\tsort(gas+1,gas+n+1,cmp);\n\tgas[n+1].dis=d1;gas[n+1].p=1000;//\u5c06\u7ec8\u70b9\u89c6\u4e3a\u6cb9\u4ef7\u975e\u5e38\u5927\u7684\u52a0\u6cb9\u7ad9\n\t//\u52a0\u6cb9\u7ad9\u4ece0\u5f00\u59cb,\u5230n+1\u7ed3\u675f,\u5171n+2\u4e2a\u52a0\u6cb9\u7ad9 \n\twhile(now!=n+1)\n\t{\n\t\tflag1=false;flag2=false;\n\t\tpp=now;\n\t\tint i=0;//i\u4e3a\u7b2c\u4e00\u4e2a\u6bd4\u5f53\u524d\u52a0\u6cb9\u7ad9\u6cb9\u4ef7\u4f4e\u7684\u52a0\u6cb9\u7ad9 \n\t\tfor(i=now+1;i<=n+1;i++)\n\t\tif(gas[i].p<gas[now].p)\n\t\t{\n\t\t\tflag1=true;//1.\u8868\u793a\u6709\u6bd4\u5f53\u524d\u52a0\u6cb9\u7ad9\u6cb9\u4ef7\u4f4e\u7684\u52a0\u6cb9\u7ad9 \n\t\t\tbreak;\n\t\t}\n\t\tif(flag1)\n\t\t{\n\t\t\tif(c*d2>=gas[i].dis-gas[now].dis)//\u2460\n\t\t\t{\n\t\t\t\tans+=((gas[i].dis-gas[now].dis)/d2-nowc)*gas[now].p;//\u7531\u4e8e\u6b64\u65f6\u6cb9\u91cf\u6b63\u597d\u5230\u8fbe\u76ee\u7684\u5730,\u5269\u4f59\u6cb9\u91cf\u4e3a0 \n\t\t\t\tnow=i;\n\t\t\t} \n\t\t\telse//\u2461\n\t\t\t{\n\t\t\t\tans+=(c-nowc)*gas[now].p;\n\t\t\t\tfor(int k=now+1;k<=n+1;k++)\n\t\t\t\tif(gas[k].dis<=gas[now].dis+c*d2)\n\t\t\t\t{\n\t\t\t\t\ti=k;\n\t\t\t\t\tflag2=true;//\u6b64\u65f6i\u8bb0\u5f55\u80fd\u5230\u8fbe\u7684\u6700\u8fdc\u7684\u52a0\u6cb9\u7ad9,flag2\u8868\u793a\u80fd\u591f\u5230\u8fbe \n\t\t\t\t}\n\t\t\t\tif(flag2)\n\t\t\t\t{\n\t\t\t\t\tnowc=c-(gas[i].dis-gas[now].dis)/d2;\n\t\t\t\t\tnow=i;//\u66f4\u65b0\u5269\u4f59\u6cb9\u91cf\u548cnow \n\t\t\t\t}\n\t\t\t\telse//\u2462 \n\t\t\t\t{\n\t\t\t\t\tcout<<\"No Solution\"<<endl;\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t} \n\t\t}\n\t\telse//2.\u6ca1\u6709\u6bd4\u5f53\u524d\u6cb9\u4ef7\u4f4e\u7684\u52a0\u6cb9\u7ad9,\u5f53\u524d\u52a0\u6cb9\u7ad9\u4ef7\u683c\u6700\u4f4e \n\t\t{\n\t\t\tans+=(c-nowc)*gas[now].p;//\u52a0\u6ee1\u6cb9 \n\t\t\tfor(int k=now+1;k<=n+1;k++)\n\t\t\tif(gas[k].dis<=gas[now].dis+c*d2)\n\t\t\t{\n\t\t\t\ti=k;\n\t\t\t\tflag2=true;//\u6b64\u65f6i\u8bb0\u5f55\u80fd\u5230\u8fbe\u7684\u6700\u8fdc\u7684\u52a0\u6cb9\u7ad9,flag2\u8868\u793a\u80fd\u591f\u5230\u8fbe \n\t\t\t}\n\t\t\tif(flag2)\n\t\t\t{\n\t\t\t\tnowc=c-(gas[i].dis-gas[now].dis)/d2;\n\t\t\t\tnow=i;//\u66f4\u65b0\u5269\u4f59\u6cb9\u91cf\u548cnow \n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcout<<\"No Solution\"<<endl;\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\t} \n\tif(nowc)//\u5982\u679c\u5230\u8fbe\u4e86\u7ec8\u70b9,\u4f46\u662f\u8fd8\u6709\u6cb9 \n\tans-=nowc*gas[pp].p;//\u628a\u6cb9\u518d\u5356\u56de\u53bb\n\tprintf(\"%.2lf\\n\",ans);//\u81ea\u52a8\u56db\u820d\u4e94\u5165\n\treturn 0; \n}\n \n```",
        "postTime": 1540890440,
        "uid": 38056,
        "name": "\u9648\u5e74\u82e6\u827e\u9152",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1016 \u3010\u65c5\u884c\u5bb6\u7684\u9884\u7b97\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u6211\u7528\u7684\u662f\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u7ed3\u6784\u4f53\u53cc\u7aef\u961f\u5217\n\nemmmm\u770b\u4e86\u5404\u4f4ddalao\u7684\u9898\u89e3\u611f\u89c9\u7565\u957f\uff0c\u4e8e\u662f\u81ea\u5df1\u5f04\u4e86\u4e00\u4e2a\n\n\u601d\u8def\uff1a\n\u5230\u8fbe\u4e00\u4e2a\u52a0\u6cb9\u7ad9\u4fdd\u5b58\u53ef\u4ee5\u52a0\u6cb9\u7684\u6743\u5229\uff08\u73b0\u5168\u90e8\u52a0\u6ee1\uff09\uff0c\u81f3\u4e8e\u5230\u5e95\u52a0\u4e0d\u52a0\u4ee5\u540e\u518d\u8bf4\uff0c\u5982\u679c\u5230\u8fbe\u4e0b\u4e00\u4e2a\u52a0\u6cb9\u7ad9\u6cb9\u8d39\u66f4\u4fbf\u5b9c\uff0c\u5c31\u628a\u5269\u4e0b\u7684\u6cb9\u5168\u90e8\u9000\u56de\u53bb\u52a0\u8fd9\u4e00\u4e2a\u52a0\u6cb9\u7ad9\u7684\u6cb9\uff08\u4e0d\u77e5\u9053\u6211\u8868\u8ff0\u5f97\u591f\u4e0d\u591f\u6e05\u695a\uff09\n\n\u81f3\u4e8e\u5177\u4f53\u7684\u5c31\u9644\u4ee3\u7801\uff0c\u89e3\u91ca\u7684\u5e94\u8be5\u7b97\u6e05\u695a\n\n```c\n#include<cstdio>\n#include<queue>\n#include<algorithm>\nusing namespace std;\nstruct oil{double p,v;};\nstruct pt{double d,p;} a[100005];\nbool cmp(pt t1,pt t2) {return t1.d<t2.d;}\ndeque<oil> dq;\ndouble tot,v,dis,p,st,dist,ans;\nint n;\nint main()\n    {\n\t\tscanf(\"%lf%lf%lf%lf%d\",&tot,&v,&dis,&p,&n);//tot\u603b\u8ddd\u79bb,v\u6cb9\u7bb1\u5bb9\u91cf,dis\u6bcf\u5347\u6cb9\u884c\u9a76\u8def\u7a0b,p\u51fa\u53d1\u70b9\u6bcf\u5347\u6cb9\n//\t\t\t\t\t\t\t\t\t\t\t\t   \u4ef7\u683c,n\u52a0\u6cb9\u7ad9\u4e2a\u6570 \n\t\tdq.push_back((oil){p,v});\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tscanf(\"%lf%lf\",&a[i].d,&a[i].p);//a[i].d\u6cb9\u7ad9i\u79bb\u51fa\u53d1\u70b9\u7684\u8ddd\u79bb,a[i].p\u6bcf\u5347\u6c7d\u6cb9\u4ef7\u683c \n\t\ta[n+1].d=tot+1;//\u5e38\u7528\u6280\u5de7,\u6545\u610f\u5728\u7ec8\u70b9\u4e4b\u5916\u8bbe\u7f6e\u4e00\u4e2a\u52a0\u6cb9\u7ad9,\u4fbf\u4e8e\u4fdd\u8bc1\u540e\u9762for\u5faa\u73af\u7ed3\u675f\u65f6\u4e00\u5b9a\u5230\u8fbe\u7ec8\u70b9 \n\t\tsort(a+1,a+2+n,cmp);//\u6309\u8ddd\u8d77\u70b9\u7684\u8ddd\u79bb\u6392\u6210\u5347\u5e8f \n\t\tfor(int i=1;i<=n+1&&tot>1e-6;i++)//tot\u662f\u5230\u8fbe\u7b2ci\u7ad9\u540e\u8fd8\u9700\u8981\u8d70\u7684\u8ddd\u79bb \n\t\t\t{\n\t\t\t\tdist=a[i].d-st;//dist\u662f\u4ece\u524d\u4e00\u7ad9\u51fa\u53d1\u5230\u8fbe\u7b2ci\u7ad9\u884c\u9a76\u7684\u8ddd\u79bb \n\t\t\t\tst=a[i].d;//\u6bcf\u5230\u4e00\u4e2a\u7ad9\u5c31\u8981\u66f4\u65b0st(\u5230\u8fbe\u4e0b\u4e00\u7ad9\u524d\u7684\u8d77\u70b9) \n\t\t\t\tif(dist<tot) tot-=dist;//\u7528\u7684\u5012\u8ba1\u6570,\u8fd9\u79cd\u60c5\u51b5\u8868\u793a\u8fd8\u9700\u884c\u9a76tot\u7684\u8ddd\u79bb\u624d\u80fd\u5230\u8fbe\u7ec8\u70b9 \n\t\t\t\telse dist=tot,tot=0;//\u5230\u8fbe\u7b2ci\u4e2a\u52a0\u6cb9\u7ad9\u4e4b\u524d\u884c\u9a76dist=tot\u7684\u8ddd\u79bb\u65f6\u5c31\u8fc7\u4e86\u7ec8\u70b9,\u522b\u5fd8\u4e86\u6e05\u96f6tot=0 \n\t\t\t\tdouble vv=dist/dis;//\u5230\u8fbe\u8be5\u7ad9\u7528\u4e86\u591a\u5c11\u6cb9\uff0c\u65b9\u4fbf\u540e\u9762\"\u53cd\u6094\"\u9000\u6cb9\u7684\u8ba1\u7b97 \n\t\t\t\twhile(dq.size()&&dist>1e-6)\n\t\t\t\t\t{\n\t\t\t\t\t\tp=dq.front().p;//\u6cb9\u7bb1\u4e2d\u6700\u4fbf\u5b9c\u7684\u6cb9\u4ef7 \n\t\t\t\t\t\tv=dq.front().v;//\u6cb9\u7bb1\u4e2d\u6700\u4fbf\u5b9c\u7684\u6cb9\u91cf \n\t\t\t\t\t\tdq.pop_front();//\u5f39\u51fa\u8fd9\u79cd\u6cb9\u7528\u6765\u7ed3\u8d26 \n\t\t\t\t\t\tdouble t=min(dist/dis,v);//\u8be5\u4ef7\u683c\u7528\u4e86\u591a\u5c11\u6cb9(\u663e\u7136\u4e0d\u80fd\u8d85\u8fc7v),\u4e00\u5347\u6cb9\u53ef\u884c\u9a76dis\u516c\u91cc \n\t\t\t\t\t\tans+=t*p;//\u7d2f\u52a0\u5f53\u524d\u7684\u8d39\u7528 \n\t\t\t\t\t\tdist-=t*dis;//\u8fd8\u5269dist\u8fdc\u7684\u8def\u7a0b\u672a\u8ba1\u8d39 \n\t\t\t\t\t\tv-=t;//\u8be5\u4ef7\u683c\u8fd8\u5269\u591a\u5c11\u6cb9 \n\t\t\t\t\t\tif(v>0) dq.push_front((oil){p,v});//\u5982\u679c\u672a\u7528\u5b8c\u4ece\u961f\u5934\u538b\u5165\u53cc\u7aef\u961f\u5217 \n\t\t\t\t\t}\n\t\t\t\tif(dist>=1e-6) {printf(\"No Solution\");return 0;}//\u8fd9\u79cd\u60c5\u51b5\u8868\u793a\u65e0\u6cd5\u5230\u8fbe \n\t\t\t\twhile(dq.size()&&a[i].p<dq.back().p)//\u5982\u679c\u6cb9\u7bb1\u5185\u7684\u6cb9\u6bd4\u7b2ci\u7ad9\u8d35,\"\u9000\u6389\"\u91cd\u65b0\u6362\u6210\u7b2ci\u7ad9\u7684\u6cb9 \n\t\t\t\t\tvv+=dq.back().v, dq.pop_back();\n\t\t\t\tdq.push_back((oil){a[i].p,vv});//\u5c06\u6cb9\u7bb1\u8865\u6ee1 \n\t\t\t}\n\t\tprintf(\"%.2lf\",ans);\n\t\treturn 0;\n\t}\n```",
        "postTime": 1540477836,
        "uid": 104133,
        "name": "SILENCE\u82cf\u964c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1016 \u3010\u65c5\u884c\u5bb6\u7684\u9884\u7b97\u3011"
    },
    {
        "content": "\u8fd9\u4e48\u590d\u6742\u7684\u9898\u76ee\uff0c\u96be\u5199\u7684\u8d2a\u5fc3\uff0c\u590d\u6742\u7684\u5224\u5b9a\uff0c\u4e0d\u5982\uff5e\uff5e\n# \u66b4\u641c #\n\u6240\u4ee5\u4e0b\u9762\u6211\u4eec\u7528dfs\u5b9e\u73b0\n\u8003\u8651\u6570\u636e\u91cf\u6700\u591a\u53ea\u67096\u7ad9 dfs 5ms\u4ee5\u5185\u90fd\u53ef\u4ee5\u51fa\u89e3\n\u76f4\u63a5\u4e0a\u4ee3\u7801 \u8bb2\u89e3\u5728\u6ce8\u91ca\u5185\n```\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#define N 10 //\u6570\u636e\u8303\u56f4\u662f6\u6240\u4ee510\u5c31\u591f\u4e86\n#define INF 19260.817 //\u66b4\u529b\u6700\u5927\u503c\nusing namespace std; //std\u515a\ndouble d1,c,d2,p;\nint n;\ndouble ans=INF;\nstruct po{//\u7528\u7ed3\u6784\u4fdd\u5b58\u597d\u5904\u7406\n\tdouble dis,v;\n}a[N];\nbool dfs(int s,double cnow,double cost){\n\t//s\u662f\u5f53\u524d\u7ad9\uff0c\u6211\u4eec\u4ee4\u51fa\u53d1\u57ce\u5e02\u662f0\uff0c\u7ec8\u70b9\u57ce\u5e02\u662fn+1\n    //cnow\u662f\u5f53\u524d\u6cb9\u7bb1\u6cb9\u91cf\n\t//cost\u662f\u5f53\u524d\u82b1\u8d39\n\tif (s==n+1){//\u5982\u679c\u641c\u5230\u7ec8\u70b9\u57ce\u5e02\u5c31\u66f4\u65b0\u7b54\u6848\u5e76\u9000\u51fa\n\t\tans=min(ans,cost);\n\t\treturn 1;\n\t}\n\tbool flag=0;\n\tdouble maxdis=c*d2;//\u76ee\u524d\u6700\u5927\u7684\u8ddd\u79bb\u8303\u56f4\n    //\u641c\u7d22\u68111\n    //\u8fd9\u662f\u628a\u6cb9\u7bb1\u52a0\u6ee1\u7684\u60c5\u51b5\n\tdouble tcost=(c-cnow)*a[s].v;//\u6cb9\u7bb1\u52a0\u6ee1\u7684\u82b1\u8d39\n\tfor (int i=n+1;i>s;i--){//\u4ece\u7ec8\u70b9\u5f00\u59cb\u66b4\u641c\n\t\tif (a[i].dis-a[s].dis>maxdis) continue;//\u5f31\u9e21\u526a\u679d\n\t\tif (dfs(i,cnow-(a[i].dis-a[s].dis)/d2,cost+tcost))\n\t\t\tflag=1;\n\t}\n    //\u641c\u7d22\u68112\n    //\u8fd9\u662f\u628a\u6cb9\u7bb1\u52a0\u5230\u521a\u597d\u5230\u8fbe\u4e0b\u4e00\u4e2a\u52a0\u6cb9\u7ad9\u7684\u60c5\u51b5\n\tfor (int i=n+1;i>s;i--){\n\t\tif (a[i].dis-a[s].dis>maxdis) continue;\n\t\tdouble tcost=(a[i].dis-a[s].dis)/d2*a[s].v;\n\t\tif (dfs(i,cnow-(a[i].dis-a[s].dis)/d2,cost+tcost))\n\t\t\tflag=1;\n\t}\n\tif (!flag) return 0;//\u5982\u679c\u6ca1\u6709\u4e00\u4e2a\u8282\u70b9\u53ef\u4ee5\u5230\u8fbe\u7ec8\u70b9\uff0c\u8fd4\u56de\u5426\n\treturn 1;\n}\nint main(){\n\tcin>>d1>>c>>d2>>p>>n;//\u8f93\u5165d1,c,d2,p,n\n\ta[0].dis=0,a[0].v=p;\n\ta[n+1].dis=d1;\n    \n\tfor (int i=1;i<=n;i++)\n\t\tcin>>a[i].dis>>a[i].v;//\u8f93\u5165\u52a0\u6cb9\u53d8\u91cf\n        \n\tif (dfs(0,0,0))//\u5f00\u59cb\u641c\u7d22\n\t\tprintf(\"%.2f\",ans);//\u7b54\u6848\u56db\u820d\u4e94\u5165\n\telse cout<<\"No Solution\"<<endl;\n\treturn 0;\n}\n```\n\n\u66b4\u529b\u306e\u7ed3\u675f\u4e86\n\u65e0\u6ce8\u91ca45\u884c \u4e5f\u5e94\u8be5\u7b97\u77ed\u53c8\u597d\u5199\u7684",
        "postTime": 1538482699,
        "uid": 25169,
        "name": "mureZ",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1016 \u3010\u65c5\u884c\u5bb6\u7684\u9884\u7b97\u3011"
    },
    {
        "content": "\u5206\u6790\uff1a\u8fd9\u9053\u9898\u6bd4\u8f83\u5bb9\u6613\u60f3\uff0c\u5c31\u662f\u5b9e\u73b0\u7ec6\u8282\u5b9e\u5728\u662f\u592a\u8003\u9a8c\u4eba\u4e86.\u663e\u7136\uff0c\u8d70\u7684\u8def\u7a0b\u662f\u4e00\u5b9a\u7684\uff0c\u5982\u679c\u6211\u4eec\u80fd\u4f7f\u6bcf\u4e00\u5355\u4f4d\u8def\u7a0b\u82b1\u7684\u94b1\u6700\u5c11\u5c31\u597d\u4e86\uff0c\u5148\u628a\u6240\u6709\u52a0\u6cb9\u7ad9\u6309\u7167\u8ddd\u79bb\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u5982\u679c\u5f53\u524d\u5728\u52a0\u6cb9\u7ad9i,\u5c31\u7b97\u52a0\u6ee1\u4e86\u6cb9\u4e5f\u65e0\u6cd5\u5230\u8fbe\u5176\u5b83\u7684\u52a0\u6cb9\u7ad9\uff0c\u90a3\u4e48\u65e0\u89e3\uff0c\u5982\u679c\u5728\u8303\u56f4\u5185\u6709\u6cb9\u8d39\u6bd4i\u5c0f\u7684\uff0c\u90a3\u4e48\u5c31\u52a0\u6cb9\u6b63\u597d\u8d70\u5230\u8fd9\u4e2a\u52a0\u6cb9\u7ad9\uff0c\u8fd9\u6837\u5355\u4f4d\u8def\u7a0b\u7684\u6cb9\u8d39\u5c31\u6bd4i\u7684\u5c0f\uff0c\u5982\u679c\u6ca1\u6709\u90ae\u8d39\u6bd4i\u5c0f\u7684\uff0c\u90a3\u4e48\u5c31\u5c3d\u91cf\u9009\u4e00\u4e2a\u6cb9\u8d39\u6700\u5c0f\u7684\uff0c\u5148\u52a0\u6ee1\u6cb9\u518d\u5f00\u8fc7\u53bb\uff0c\u56e0\u4e3ai\u7684\u6cb9\u8d39\u66f4\u4fbf\u5b9c\uff0c\u8fd9\u4e2a\u7ec6\u8282\u5b9e\u5728\u662f\u592a\u96be\u8c03\u4e86\n```\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <cfloat>\n\nusing namespace std;\n\nint n,st;\ndouble d1,c,d2,p,ans,you;\nbool flag2 = false;\n\nstruct node\n{\n    double d,p;\n} e[100010];\n\nbool cmp(node a,node b)\n{\n    return a.d < b.d;\n}\n\n/*\n    1.\u5728\u5f53\u524d\u6cb9\u7ad9i\u5982\u679c\u52a0\u6ee1\u4e86\u6cb9\uff0c\u770b\u80fd\u8d70\u5230\u7684\u6cb9\u7ad9\u4e2d\u6709\u6ca1\u6709\u8d39\u7528\u66f4\u5c0f\u7684\n    2.\u5982\u679c\u6ca1\u6709\uff0c\u5c31\u52a0\u6ee1\u6cb9\uff0c\u7136\u540e\u5230\u8d39\u7528\u6700\u4f4e\u7684\u90a3\u4e2a\u53bb.\n    3.\u5426\u5219\uff0c\u52a0\u6cb9\u521a\u597d\u5230\u8d39\u7528\u6700\u4f4e\u7684\u52a0\u6cb9\u7ad9\u5c31\u597d\u4e86.\n    \u539f\u7406\u5c31\u662f\u8d70\u7684\u8def\u7a0b\u5c31\u662f\u90a3\u4e48\u591a\uff0c\u8def\u7a0b\u4e0a\u82b1\u7684\u94b1\u8d8a\u5c11\u8d8a\u597d.\n*/\n\nint main()\n{\n    cin >> d1 >> c >> d2 >> p >> n;\n    for (int i = 1; i <= n; i++)\n        cin >> e[i].d >> e[i].p;\n    sort(e + 1,e + 1 + n,cmp);\n    e[0].d = 0;\n    e[0].p = p; \n    int t = 0;\n    while (1)\n    {\n        bool flag = false;\n        int wh = 10000;\n        for (int i = t + 1; i <= n; i++)\n        {\n            if (e[i].d - e[t].d > c * d2)\n            break;\n            if (e[i].p < e[t].p)\n            {\n            ans += ((e[i].d - e[t].d - you) / d2) * e[t].p;\n            you = 0;\n            t = i;\n            flag = 1;\n            break;\n        }\n    if (wh == 10000 || e[i].p < e[wh].p)\n    wh = i;\n        }\n        if (flag)\n        continue;\n        if (d1 - e[t].d <= c * d2)\n        {\n            ans += (d1 - e[t].d -you) / d2 * e[t].p;\n            break;\n        }\n        if (wh == 10000)\n        {\n            printf(\"No Solution\");\n            flag2 = 1;\n            break;\n        }\n        else\n        {\n            ans += c*e[t].p;\n            you += (c * d2 - e[wh].d + e[st].d);\n            st = wh;\n        }\n    }\n    if (!flag2)\n    printf(\"%.2lf\",ans);\n\n    return 0;\n}\n```",
        "postTime": 1527865243,
        "uid": 66002,
        "name": "\u5c0f\u7565",
        "ccfLevel": 0,
        "title": "P1016\u65c5\u884c\u5bb6\u7684\u9884\u7b97"
    },
    {
        "content": "\u601d\u8def\u5c31\u662f\u8d2a\u5fc3\uff0c\u7528\u4e00\u4e2a\u6570\u7ec4\u6a21\u62df\u6cb9\u7bb1\uff0c\u91cc\u9762\u7684\u6cb9\u662f\u4e00\u4efd\u4e00\u4efd\u7684\uff0c\u6bcf\u4e00\u4efd\u7684\u4ef7\u683c\u548c\u6cb9\u91cf\u90fd\u4e0d\u540c\u3002\u6bcf\u6b21\u7528\u6700\u4fbf\u5b9c\u7684\u6cb9\uff08\u59cb\u7ec8\u4fdd\u8bc1\u6570\u7ec4\u662f\u6709\u5e8f\u7684\uff0c\u8d8a\u9760\u524d\u7684\u6cb9\u8d8a\u4fbf\u5b9c\uff09\uff0c\u5904\u7406\u7684\u65f6\u5019\u5047\u8bbe\u5f53\u4ece\u6cb9\u7bb1\u53d6\u51fa\u6cb9\u540e\u8fd9\u90e8\u5206\u6cb9\u624d\u7b97\u662f\u4e70\u4e86\uff0c\u5e76\u4e14\u5c06\u82b1\u8d39\u8bb0\u5f55\u4e0b\u6765\u3002\u6240\u4ee5\u6cb9\u7bb1\u91cc\u9762\u7684\u6cb9\u76f8\u5f53\u4e8e\u6ca1\u4e70\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba9\u6cb9\u7bb1\u59cb\u7ec8\u5904\u4e8e\u6ee1\u7684\u72b6\u6001\uff0c\u9632\u6b62\u56e0\u6cb9\u4e0d\u591f\u800c\u5230\u4e0d\u4e86\u4e0b\u4e00\u4e2a\u5730\u70b9\u3002\u6ce8\u610f\u5e94\u8be5\u4fdd\u6301\u6cb9\u7bb1\u91cc\u7684\u6cb9\u662f\u6211\u4eec\u80fd\u591f\u83b7\u53d6\u7684\u6700\u4fbf\u5b9c\u7684\u6cb9\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<deque> \n#include<vector>\n#include<algorithm>\n#include<queue>\n#include<functional>\nusing namespace std;\nconst int maxn=1000001;\ndouble d1,c,d2,pp,oil,need,fee=0,now;\ndouble dis[maxn],pi[maxn],box[maxn][2];\nint n,l=1,r=1;\nint main()\n{\n    scanf(\"%lf%lf%lf%lf%d\",&d1,&c,&d2,&pp,&n);\n    for(int i=1;i<=n;i++) scanf(\"%lf%lf\",&dis[i],&pi[i]);\n    dis[n+1]=d1; pi[0]=pp;\n    if(n == 0)\n    {\n        if(double(d1/d2) > c)\n        {\n            cout<<\"No Solution\";\n            return 0;\n        }\n        printf(\"%.2lf\",(d1/d2)*pp);\n        return 0;\n    }\n    box[l][0]=pp; box[l][1]=c;\n    for(int i=1;i<=n+1;i++)\n    {\n        need=(dis[i]-dis[i-1])/d2;//\u8ba1\u7b97\u51fa\u4e0a\u4e00\u6bb5\u8def\u7684\u9700\u6cb9\u91cf\n        if( need > c )\n        {\n            cout<<\"No Solution\";\n            return 0;\n        }\n        oil=need;//oil\u8868\u793a\u9700\u8981\u5728\u8fd9\u4e2a\u52a0\u6cb9\u7ad9\u52a0\u591a\u5c11\u6cb9\n        while(need > 0)//\u5148\u8ba1\u7b97\u51fa\u8d70\u5b8c\u4e0a\u6bb5\u8def\u6d88\u8017\u6389\u7684\u94b1 \n        {\n            //cout<<need<<endl;\n            if( box[l][1] < need)\n            {\n                need = need - box[l][1];\n                fee+=box[l][1]*box[l][0];\n                l++;\n            }\n            else\n            {\n                fee+=need*box[l][0];\n                box[l][1] -= need;\n                break;\n            }\n            if( l > r )\n            {\n                cout<<\"No Solution\";\n                return 0;\n            }\n        }\n        if(i == n+1)\n        {\n            printf(\"%.2lf\",fee);\n            return 0;\n        }\n        while( l <= r && box[r][0] > pi[i] )//\u628a\u8d35\u7684\u6cb9\u6362\u6389\uff0c\u4e3a\u4fdd\u6301\u6cb9\u7bb1\u6ee1\uff0c\u6362\u6389\u7684\u8fd9\u90e8\u5206\u6cb9\u5e94\u8be5\u7528\u4fbf\u5b9c\u7684\u586b\u5145\u3002\n        {\n            oil += box[r][1];\n            r --;\n        }\n        r++;\n        box[r][0] = pi[i]; box[r][1] = oil;\n    }\n}\n```",
        "postTime": 1497189664,
        "uid": 17326,
        "name": "\u6797\u5fd7\u6770",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1016 \u3010\u65c5\u884c\u5bb6\u7684\u9884\u7b97\u3011"
    },
    {
        "content": "\u4ecb\u7ecd\u4e00\u79cd\u8d2a\u5fc3\u7684\u601d\u8def\uff0c\u5728\u6bcf\u4e00\u4e2a\u52a0\u6cb9\u7ad9\uff0c\u5305\u62ec\u8d77\u70b9\uff0c\u90fd\u628a\u6cb9\u7bb1\u52a0\u6ee1\uff0c\u4e4b\u540e\u5230\u8fbe\u4e00\u4e2a\u52a0\u6cb9\u7ad9\u7684\u65f6\u5019\u628a\u6cb9\u7bb1\u91cc\u5269\u4e0b\u7684\u4ef7\u683c\u8d35\u7684\u6cb9\u9000\u6389\uff08\u5c31\u662f\u628a\u4ed6\u4ece\u961f\u5217\u91cc\u5220\u6389\uff09\uff0c\u7b49\u4ef7\u4e8e\u5728\u4ee5\u524d\u7684\u67d0\u4e2a\u65f6\u523b\u6211\u6ca1\u6709\u4e70\u8fd9\u4e2a\u6cb9\u3002\u8fd8\u6709\u5c31\u662f\u5728\u4e24\u4e2a\u52a0\u6cb9\u7ad9\u4e4b\u95f4\uff0c\u6d88\u8017\u7684\u6cb9\u90fd\u662f\u6700\u4fbf\u5b9c\u7684\uff0c\u8fd9\u4e5f\u662f\u4e00\u79cd\u8d2a\u5fc3\u3002\u3002\n\n\u8bc1\u660e\u5927\u6982\u662f\u8fd9\u6837\u7684\uff1a\u56e0\u4e3a\u6211\u6bcf\u6b21\u90fd\u5728\u52a0\u6cb9\u7ad9\u628a\u6cb9\u7bb1\u52a0\u6ee1\uff0c\u800c\u4e14\u6211\u628a\u4ee5\u524d\u8d35\u7684\u6cb9\u90fd\u5356\u6389\u4e86\uff0c\u6240\u4ee5\u5269\u4e0b\u7684\u662f\u5c3d\u91cf\u5c0f\u7684\uff0c\u5982\u6b64\u4e0b\u53bb\uff0c\u6bcf\u6b21\u90fd\u662f\u5c3d\u91cf\u591a\u76db\u4fbf\u5b9c\u7684\u6cb9\uff0c\u6bcf\u6b21\u9000\u6389\u8d35\u7684\u6cb9\uff08\u7b49\u4ef7\u4e8e\u6bcf\u6b21\u5c11\u4e70\u8d35\u7684\uff09\uff0c\u5230\u7ec8\u70b9\u7684\u65f6\u5019\u9000\u6389\u6240\u6709\u7684\u6cb9\uff0c\u4e5f\u5c31\u6ee1\u8db3\u4e86\u6574\u4e2a\u8d2a\u5fc3\u8fc7\u7a0b\u3002\u3002\n\n\u6240\u4ee5\u6211\u4eec\u60f3\u5230\u4e86\u5355\u8c03\u961f\u5217\uff0c\u6bcf\u4e00\u6b21\u6d88\u8017\u961f\u9996\u7684\u5143\u7d20\uff0c\u9000\u6389\u961f\u5c3e\u7684\u5143\u7d20\uff0c\u628a\u65b0\u7684\u5143\u7d20\u52a0\u8fdb\u6765\uff0c\u6240\u9700\u8981\u7684\u4ee3\u4ef7\u5728\u9000\u5143\u7d20\u548c\u8fd1\u5143\u7d20\u7684\u65f6\u5019\u66f4\u65b0\u4e00\u4e0b\u5373\u53ef\u3002\u3002\u3002\u4e0b\u9762\u4ee3\u7801\u5f88\u597d\u7406\u89e3\n\n\u7136\u800c\u5f88low\u7684\u6211\u5728\u524d\u4e24\u6b21\u8bfb\u9519\u4e86\u9898\uff0c\u5bfc\u81f4\u5f97\u4e8650\u5206..............\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<queue>\nusing namespace std;\ndouble D,sum,d,c,p;\ndouble que[10001][2];\nint n;\nint main()\n{\n    scanf(\"%lf%lf%lf%lf%d\",&d,&c,&D,&p,&n);\n    que[1][0]=c;\n    que[1][1]=p;\n    int p1=1,p2=1;//p1\u548cp2\u662f\u4e00\u4e2a\u961f\u9996\u6307\u9488\u548c\u961f\u5c3e\u6307\u9488\n    double re=c,sum=p*c,last=0;//re\u8bb0\u5f55\u5f53\u65f6\u6cb9\u7bb1\u5269\u4e0b\u7684\u6cb9\u7684\u4f53\u79ef\n    for(int i=1;i<=n;++i)\n    {\n        double price,dis;\n        scanf(\"%lf%lf\",&dis,&price);\n        double tmp=dis;\n        if(i==n)\n        d=d-dis;\n        dis=dis-last;\n        last=tmp;     //\u8fd9\u91cc\u5c31\u662f\u6211\u4ee5\u524d\u8bfb\u9519\u9898\u7684\u5730\u65b9\uff01\uff01\uff01\uff01\u6bcf\u6b21\u8bfb\u5165\u7684\u6570\u662f\u76f8\u5bf9\u4e8e\u8d77\u70b9\u7684\u8ddd\u79bb\uff0c\u4e0d\u662f\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\uff01\uff01\uff01\n        while(dis>=D*que[p1][0])  //\u6d88\u8017\u6700\u4fbf\u5b9c\u7684\u6cb9\uff08\u961f\u9996\u5143\u7d20\uff09\n        {\n            re-=que[p1][0];\n            dis-=D*que[p1][0];\n            p1++;\n            if(p1>p2)  //\u961f\u5217\u4e3a\u7a7a\u5373\u662f\u65e0\u89e3\n            {\n                printf(\"No Solution\");return 0;\n            }\n        }\n        re-=dis/D;\n        que[p1][0]-=dis/D;\n        while(price<que[p2][1]&&p2>=p1)  //\u5f39\u51fa\u961f\u5c3e\u5143\u7d20\uff08\u6700\u8d35\u7684\u6cb9\uff09\n        {\n            sum-=que[p2][0]*que[p2][1];re-=que[p2][0];p2--;  //\u8bb0\u5f97\u66f4\u65b0\u4ee3\u4ef7\uff0c\u79fb\u52a8\u6307\u9488\n        }\n        que[++p2][0]=c-re;\n        que[p2][1]=price;\n        re=c;\n        sum+=que[p2][0]*que[p2][1]; //\u66f4\u65b0\u4ee3\u4ef7\n    }\n        //\u4ee5\u540e\u7684\u4ee3\u7801\u662f\u4ece\u6700\u540e\u4e00\u4e2a\u70b9\u5230\u7ec8\u70b9\u7684\u7279\u6b8a\u60c5\u51b5\uff0c\u548c\u4ee5\u4e0a\u76f8\u540c\n    if(c*D<d)\n    {\n        printf(\"No Solution\");return 0;\n    }\n    while(d>=D*que[p1][0])\n    {\n        d-=D*que[p1][0];p1++;\n    }\n    que[p1][0]-=d/D;\n    while(p1<=p2)\n    sum-=que[p1][0]*que[p1][1],p1++;\n    printf(\"%.2lf\",sum);\n}\n```",
        "postTime": 1494596509,
        "uid": 24553,
        "name": "fanfan",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1016 \u3010\u65c5\u884c\u5bb6\u7684\u9884\u7b97\u3011"
    },
    {
        "content": "\u6211\u7528\u7684\u662f\u975e\u5e38\u7b80\u5355\u7c97\u66b4\u7684\u6a21\u62df+\u8d2a\u5fc3\n\n\u8d2a\u5fc3\u7684\u57fa\u672c\u601d\u8def \u4e4b\u524d\u7684\u5404\u4f4ddalao\u5df2\u7ecf\u8bb2\u7684\u975e\u5e38\u660e\u767d \u6211\u5c31\u4e0d\u591a\u8bf4\u660e\u4e86\n\n\u6211\u8ddf\u4ed6\u4eec\u4e0d\u4e00\u6837\u7684\u5730\u65b9\u5728\u4e8e  \u904d\u5386\u6bcf\u4e00\u7ad9  \u6bcf\u4e00\u7ad9\u90fd\u628a\u6cb9\u7bb1\u4e2d\u4ef7\u683c\u5927\u4e8ep[i]\u7684\u6cb9\u6362\u6210\u4ef7\u683c\u4e3ap[i]\u7684\u6cb9\n\n\u53ea\u5728\u6d88\u8017\u6cb9\u65f6\u66f4\u65b0cost\n\n\u4e0b\u9762\u8d34\u4e0a\u849f\u84bb\u7684\u8fa3\u9e21\u4ee3\u7801\n\n\u5e93\u548cnamespace\n\n~~~cpp\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\n```\n~~~\n\u7528\u5230\u7684\u7ed3\u6784\u4f53\u548c\u53d8\u91cf\n\n~~~cpp  //oil\u662f\u6cb9\u7bb1\u4e2d\u7684\u6cb9 \u662f\u4e00\u4e2a\u5355\u8c03\u961f\u5217  \u7531head\u5411tail\u4ef7\u683c\u9012\u589e\n\n       \n```cpp\nstruct oil{\n       double p,amo;\n  }o[500];\nstruct stop{  // stop\u662f\u6bcf\u4e00\u7ad9\u7684\u8ddd\u79bb\u548c\u6cb9\u4ef7\n       double d,p;   //d\u6211\u5904\u7406\u6210\u4e86\u4e24\u7ad9\u4e4b\u95f4\u95f4\u9694\u7684\u8ddd\u79bb\n  }st[500];\ndouble dis;   //\u5f53\u524d\u5df2\u8d70\u7684\u8ddd\u79bb\ndouble cost;   //\u5f53\u524d\u82b1\u8d39\u7684\u4ee3\u4ef7\nint head=0,tail=-1;   //\u5355\u8c03\u961f\u5217\u5934\u5c3e\n//\u56e0\u4e3a\u6211\u5728\u6bcf\u4e00\u7ad9\u90fd\u5c06\u6cb9\u7bb1\u8865\u6ee1  \u6240\u4ee5\u4e0d\u9700\u8981\u8d2e\u5b58\u5f53\u524d\u6cb9\u91cf\n```\n~~~\n\u7528\u5230\u7684\u5404\u79cd\u51fd\u6570\n\n~~~cpp\n\n    \n         \n            \n        \n        \n\n\n```cpp\nbool  cmp(const stop & a,const stop &b){\n    return a.d<b.d;    \n}    //stop\u7684\u6bd4\u8f83\u51fd\u6570 \u5c06\u79bb\u8d77\u70b9\u8fd1\u7684\u653e\u5728\u524d\u9762 \uff08\u8111\u6b8b\uff09\nvoid use(double d){  //\u6d88\u8017\u6cb9    \n    bool pd=1;\n    while(pd){     //\u4ece\u4fbf\u5b9c\u7684\uff08head\uff09\u5f00\u59cb\u6d88\u8017\n        if(d>=o[head].amo){       //\u5982\u679cd\u5927\u4e8e\u7b49\u4e8ehead  \u5219\u628ahead\u7684\u6cb9\u6d88\u8017\u5b8c\n            d-=o[head].amo;\n            cost+=o[head].amo*o[head].p;   //\u66f4\u65b0cost\n            head++;\n        }\n        else if(d<o[head].amo){    //\u53ea\u5c06head\u7684\u6cb9\u6d88\u8017\u4e86\u4e00\u90e8\u5206\n            o[head].amo-=d;\n            cost+=d*o[head].p;     //\u66f4\u65b0cost\n            pd=0;    \n        }\n    }\n    return ;    \n}\nvoid add(double d,double p){    //\u52a0\u6cb9\u51fd\u6570\n    while(o[tail].p>p){   //\u5982\u679ctail\u7684\u6cb9\u4ef7\u683c\u5927\u4e8e\u5f53\u524dpi   \u5c31\u5c06tail\u7684\u6cb9\u66ff\u6362\u6210\u5f53\u524d\u6cb9\n        d+=o[tail].amo;    //\u5c06d\u7d2f\u52a0\n        tail--;\n        if(head>tail)break;    \n    }\n    tail++;\n    o[tail].amo=d;\n    o[tail].p=p;\n    return ;\n}\n```\n~~~\n\u4e3b\u51fd\u6570\n\n~~~cpp\n    \n    \n            \n    \n\n            \n\n            \n        \n                \n    \n    \n\n```cpp\nint main(){\n    double d1,c,d2,p;\n    int n;\n    scanf(\"%lf%lf%lf%lf%d\",&d1,&c,&d2,&p,&n);   \n    for(int i=1;i<=n;++i){\n            scanf(\"%lf%lf\",&st[i].d,&st[i].p);   \n    }\n    sort(st+1,st+1+n,cmp);\n    for(int i=n;i>=1;--i){\n            st[i].d-=st[i-1].d; //\u5c06d[i]\u5904\u7406\u6210  \u4e24\u6cb9\u7ad9\u95f4\u8ddd\u79bb\uff08\u4e2a\u4eba\u4e60\u60ef  \u4e0d\u5904\u7406\u4e5f\u53ef\uff09\n    }\n    add(c,p);  //\u5728\u8d77\u70b9\u52a0\u6ee1\n    for(int i=1;i<=n;++i){\n        if(dis+st[i].d<d1){    //\u8fd9\u91cc\u4e0d\u89e3\u91caif  \u4e0b\u6587\u4f1a\u89e3\u91ca\n            double cc=(st[i].d)/d2;  //cc\u4e3a \u8fd9\u6b21\u65c5\u7a0b\u9700\u8981\u6d88\u8017\u7684\u6cb9\u91cf\n            if(c>=cc)    use(cc);    \n            else  {printf(\"No Solution\");return 0;}  //\u5982\u679c\u9700\u8981\u6d88\u8017\u7684\u6cb9\u91cf\u5927\u4e8e\u6cb9\u7bb1\u5bb9\u91cf \u5f88\u660e\u663eno solution\n            dis+=st[i].d;   //\u7d2f\u52a0dis   \u8fd9\u662f\u6211\u7684\u4e60\u60ef\u5e26\u6765\u7684\u4ee3\u4ef7..\n            add(c-cc,st[i].p);  //\u5c06\u6cb9\u8865\u6ee1        \n               }\n        else if(dis+st[i].d>=d1){     //\u5982\u679c\u5728\u5230\u8fbe\u4e0b\u4e00\u6cb9\u7ad9\u524d\u5148\u5230\u8fbe\u91cd\u70b9\n            double cc=(d1-dis)/d2;\n            if(now>=cc)    use(cc);\n            else {printf(\"No Solution\");return 0;}\n            printf(\"%.2lf\",cost);\n            return 0;\n        }    \n    }\n            //\u5982\u679c\u7ec8\u70b9\u5728\u6240\u6709\u6cb9\u7ad9\u4e4b\u540e  example\uff1a\u6837\u4f8b\n    double cc=(d1-dis)/d2;\n    if(c>=cc)    use(cc);\n    else{ printf(\"No Solution\");return 0;}\n    printf(\"%.2lf\",cost);\n    return 0;\n}\n```\n~~~\nTHE EHD\n",
        "postTime": 1494583195,
        "uid": 25437,
        "name": "\u66f9\u6709\u6bd2",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1016 \u3010\u65c5\u884c\u5bb6\u7684\u9884\u7b97\u3011"
    },
    {
        "content": "\u5404\u79cd\u89e3\u91ca\u90fd\u4f34\u968f\u5728\u6ce8\u91ca\u91cc\u9762\u4e86\n\n```cpp\n//Copyright (C) 2017 Elsanna\n//License:GPL\n//Author:Elsanna\n\n#include <string.h>\n#include <algorithm>\n#include <iostream>\n#include <cstdio>\n#include <iomanip>\nusing namespace std;\n\n//Summary:\n//    \u5728\u5f00\u59cb\u524d\uff0c\u8fdb\u884c\u5224\u65ad\uff0c\u80fd\u4e0d\u80fd\u5230\u8fbe\u6700\u8fd1\u7684\u52a0\u6cb9\u7ad9\uff0c\u5982\u679c\u4e0d\u884c\uff0cNo solution\n//    \u5728\u5f53\u524d\u8282\u70b9\u5f00\u59cb\u5f80\u540e\u641c\u7d22\uff0c\u5982\u679c\u540e\u9762\u7684\u8282\u70b9\u6ca1\u6709\u6bd4\u5f53\u524d\u7ed3\u70b9\u7684\u5355\u4ef7\u4fbf\u5b9c\u7684\uff0c\u5c31\u5728\u5f53\u524d\u7ed3\u70b9\u52a0\u6ee1\u6cb9\uff0c\u5230\u8fbe\u80fd\u5230\u8fbe\u7684\u6700\u4fbf\u5b9c\u7684\u8282\u70b9\u90a3\n//        \u5982\u679c\u6709\u6bd4\u5f53\u524d\u7ed3\u70b9\u4fbf\u5b9c\u7684\uff0c\u90a3\u4e48\u5c31\u5728\u5f53\u524d\u7ed3\u70b9\u52a0\u6709\u52a0\u5230\u521a\u521a\u597d\u80fd\u5230\u90a3\u4e2a\u6cb9\u7ad9\n//            \u8981\u6c42\u5230\u91cc\u79bb\u5f53\u524d\u7ed3\u70b9\u6700\u8fd1\u7684\uff0c\u6bd4\u5f53\u524d\u7ed3\u70b9\u4fbf\u5b9c\u7684\nint main() {\n    //Init\n\n    //\n    double distance_tmp, capacity, dis_per_liter, price[101];\n    int n_station;\n    cin >> distance_tmp >> capacity >> dis_per_liter >> price[0] >> n_station;\n    double distance[101];\n    distance[0] = 0;\n    distance[n_station + 1] = distance_tmp;\n\n    for (int i = 1; i <= n_station; i++) {\n        cin >> distance[i] >> price[i];\n    }\n    double usage = 0.0;\n\n    //left_oil_capacity\u653e\u9519\u4f4d\u7f6e\u8fdb\u884c\u521d\u59cb\u5316\u4e86\n    double left_oil_capacity = 0.0;\n\n    for (int current_pos = 0; current_pos <= n_station;) {\n\n        //\u6700\u8fd1\u7684\u7ad9\u53f0\u90fd\u5230\u4e0d\u4e86\n        if (capacity*dis_per_liter < distance[current_pos + 1] - distance[current_pos]) {\n            cout << \"No Solution\" << endl;\n            return 0;\n        }\n        double min_price_forward = 0xffff;\n        \n        int min_price_forward_station = current_pos + 1;\n        bool found_less_price = false;\n        for (int next_pos = current_pos + 1; next_pos <= n_station + 1; next_pos++) {\n            //\u4fdd\u8bc1\u80fd\u5230\u4e0b\u4e00\u4e2a\u8282\u70b9\uff0c\u5426\u5219\u5c31\u8df3\u51fa\n            if (capacity*dis_per_liter < distance[next_pos] - distance[current_pos]) {\n                break;\n            }\n\n            //\u66f4\u65b0\u6700\u8fd1\u66f4\u4fbf\u5b9c\u7684\u8282\u70b9\n            if (price[next_pos] < min_price_forward) {\n                min_price_forward = price[next_pos];\n                min_price_forward_station = next_pos;\n                //\u5982\u679c\u6709\u6bd4\u5f53\u524d\u7ed3\u70b9\u4fbf\u5b9c\u7684\u6216\u8005\u76f8\u7b49\u7684\n                if (price[next_pos] <= price[current_pos]) {\n                    //\u52a0\u5230\u521a\u521a\u597d\u5373\u53ef\n                    usage += ((distance[next_pos] - distance[current_pos]) / dis_per_liter - left_oil_capacity)*price[current_pos];\n                    left_oil_capacity = 0;\n\n                    //\u5230\u66f4\u4fbf\u5b9c\u7684\u8282\u70b9\u90a3\n\n                    //found_less_price\u4fbf\u4e8e\u5224\u65ad\u662f\u5426\u627e\u5230\u4e86\u66f4\u5c11\u6cb9\u4ef7\u7684\u8282\u70b9\n                    found_less_price = true;\n                    current_pos = next_pos;\n                    break;\n                }\n            }\n            if (next_pos == n_station + 1) {\n                //\u672a\u6765\u8282\u70b9\u6ca1\u6709\u4e00\u4e2a\u6bd4\u5f53\u524d\u7ed3\u70b9\u4fbf\u5b9c\u7684\n                //\u5e76\u4e14\u7ec8\u70b9\u53ef\u4ee5\u76f4\u63a5\u5230\u8fbe\n                //\u90a3\u4e48\u76f4\u63a5\u52a0\u5230\u521a\u521a\u591f\u5230\u8fbe\u7684\u5bb9\u91cf\u5373\u53ef\n                if (min_price_forward > price[current_pos]) {\n                    //\u8fd9\u4e00\u90e8\u5206\u8981\u7528\u7b49\u5bbd\u5b57\u4f53\u6765\u770b\n                    //\u2193\u4f7f\u7528\u8d39\u7528                 \u4e24\u70b9\u8ddd\u79bb\u2193                                       \u51cf\u53bb\u8fd8\u7559\u4e0b\u7684\u6cb9\u2193            \u5355\u4ef7\u2193\n                    usage += ((distance[next_pos] - distance[current_pos]) / dis_per_liter - left_oil_capacity)*price[current_pos];\n                    //\u5230\u8fbe\u7ec8\u70b9\n\n                    cout << setiosflags(ios::fixed) << setprecision(2) << usage << endl;\n                    //system(\"pause\");\n                    return 0;\n                }\n            }\n        }\n        if (found_less_price)continue;\n\n        \n        //\u5bf9\u4e8e\u6ca1\u6709\u7684\u6bd4\u5f53\u524d\u7ed3\u70b9\u4fbf\u5b9c\u7684\uff0c\u5c31\u52a0\u6ee1\uff0c\u5230\u6700\u4fbf\u5b9c\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\n        usage += (capacity - left_oil_capacity)*price[current_pos];\n        left_oil_capacity = capacity - (distance[min_price_forward_station] - distance[current_pos]) / dis_per_liter;\n        \n\n        current_pos = min_price_forward_station;\n    }\n    cout << setiosflags(ios::fixed) << setprecision(2) << usage << endl;\n\n    return 0;\n}\n```",
        "postTime": 1485070431,
        "uid": 32299,
        "name": "Elsa_Granger",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1016 \u3010\u65c5\u884c\u5bb6\u7684\u9884\u7b97\u3011"
    },
    {
        "content": "\u7b80\u5355\u7684\u8d2a\u5fc3+\u9012\u5f52\n\n\u7b80\u5355\u601d\u8def\uff1a\n\n1\u3001\u5148\u5224\u65ad\u4e0b\u4e00\u4e2a\u76ee\u7684\u5730\uff0c\u518d\u8ba1\u7b97\u6cb9\u8d39\u548c\u52a0\u7684\u6cb9\n\n2\u3001\u5982\u679c\u5f53\u524d\u5df2\u7ecf\u5728\u6700\u540e\u4e00\u4e2a\u52a0\u6cb9\u7ad9\u5e76\u4e14\u52a0\u6ee1\u6cb9\u4ecd\u7136\u8d70\u4e0d\u5230\u7ec8\u70b9\u5219\u8f93\u51faNo Solution\n\n3\u3001\u6bcf\u6b21\u5728\u53ef\u4ee5\u8d70\u5230\u7684\u8303\u56f4\u5185\u627e\u6cb9\u8d39\u6700\u5c0f\u7684\u52a0\u6cb9\u7ad9\n\n2.1\u5982\u679c\u8be5\u52a0\u6cb9\u7ad9\u7684\u6cb9\u8d39\u5f53\u524d\u6240\u5728\u5730\u70b9\u7684\u6cb9\u8d39\u8981\u4fbf\u5b9c\uff0c\u5c31\u52a0\u6070\u597d\u80fd\u5f00\u5230\u8be5\u52a0\u6cb9\u7ad9\u7684\u6cb9\n\n2.2\u5426\u5219\u5224\u65ad\u80fd\u5426\u5f00\u5230\u7ec8\u70b9\uff0c\u5982\u679c\u80fd\u5219\u52a0\u6070\u597d\u80fd\u5f00\u5230\u7ec8\u70b9\u7684\u6cb9\uff0c\u5426\u5219\u52a0\u6ee1\u6cb9\n\n4\u3001\u8fdb\u884c\u7b2c2\u6b65\u7684\u540c\u65f6\uff0c\u5bfb\u627e\u53ef\u4ee5\u8d70\u5230\u7684\u6700\u8fdc\u7684\u52a0\u6cb9\u7ad9\uff0c\u5982\u679c\u6700\u8fdc\u7684\u52a0\u6cb9\u7ad9\u5c31\u662f\u5f53\u524d\u6240\u5728\u5730\u70b9\u4e14\u5f53\u524d\u4e0d\u5728\u7ec8\u70b9\u7684\u8bdd\u8f93\u51faNo Solution\n\n5\u3001\u5982\u679c\u6700\u8fdc\u53ef\u4ee5\u8d70\u5230\u7684\u6700\u8fdc\u7684\u52a0\u6cb9\u7ad9\u662f\u7ec8\u70b9\uff0c\u5c31\u8f93\u51fa\u7b54\u6848\u3002\n\n[color=red]\u4ee3\u7801\uff1a[/color]\n\n[codep ]\n\n```cpp\nVar\n    d1,d2,c,p:real;\n    i,n:longint;\n    dist,price:array[0..100000] of real;\nProcedure work(nowloc:longint;restfuel,ans:real); //nowloc\u50a8\u5b58\u4e86\u5f53\u524d\u4f4d\u7f6e, restfuel\u50a8\u5b58\u4e86\u5f53\u524d\u5269\u4f59\u7684\u6cb9, ans\u50a8\u5b58\u4e86\u5f53\u524d\u82b1\u8d39\u7684\u9884\u7b97\n    var\n        i:longint;\n        minloc,maxfar:longint;\n    begin\n        if dist[n+1]-dist[n]>c*d2 then begin // \u4e0a\u6587\u7684\u6b65\u9aa42\n            writeln('No Solution');\n            halt;\n        end;\n        minloc:=nowloc; //\u5c06\u4ef7\u683c\u6700\u4fbf\u5b9c\u7684\u52a0\u6cb9\u7ad9\u548c\u80fd\u8d70\u5230\u7684\u6700\u8fdc\u8ddd\u79bb\u90fd\u521d\u59cb\u5316\u4e3a\u5f53\u524d\u5730\u70b9\n        maxfar:=nowloc;    \n        for i:=nowloc+1 to n+1 do begin //\u904d\u5386\u6240\u6709\u52a0\u6cb9\u7ad9\n            if ((dist[i]-dist[nowloc])/d2)>c then break; //\u5982\u679c\u5373\u4f7f\u6cb9\u7bb1\u6ee1\u4e5f\u65e0\u6cd5\u8d70\u5230\u5219\u505c\u6b62\u904d\u5386\n            maxfar:=i; //\u6bcf\u6b21\u5c06\u8be5\u70b9\u66f4\u65b0\u4e3a\u80fd\u8d70\u5230\u7684\u6700\u8fdc\u7684\u70b9\n            if price[i]<=price[minloc] then minloc:=i; //\u5982\u679c\u5f53\u524d\u70b9\u7684\u6cb9\u8d39\u4f4e\u4e8e\u4e4b\u524d\u6700\u4fbf\u5b9c\u7684\u52a0\u6cb9\u7ad9\u7684\u6cb9\u8d39\u5219\u66f4\u65b0\n        end;\n        if ((maxfar=nowloc) and (nowloc<>n+1)) then begin //\u5982\u679c\u80fd\u8d70\u5230\u7684\u6700\u8fdc\u70b9\u662f\u5f53\u524d\u70b9\u4e14\u5f53\u524d\u4e0d\u5728\u7ec8\u70b9\uff0c\u5219\u4ee3\u8868\u65e0\u6cd5\u524d\u8fdb\uff0c\u9000\u51fa\n            writeln('No Solution');\n            halt;\n        end;\n        if minloc=nowloc then begin //\u5982\u679c\u6cb9\u8d39\u6700\u4fbf\u5b9c\u7684\u5730\u65b9\u662f\u5f53\u524d\u70b9\uff0c\u5219\u5224\u65ad\u662f\u5426\u80fd\u8d70\u5230\u7ec8\u70b9\n            if ((dist[n+1]-dist[nowloc])/d2)<=c then begin //\u5982\u679c\u80fd\u8d70\u5230\u7ec8\u70b9\u5219\u52a0\u6070\u597d\u8d70\u5230\u7ec8\u70b9\u7684\u6cb9\n                ans:=ans+((dist[n+1]-dist[nowloc])/d2-restfuel)*price[nowloc];\n                writeln(ans:0:2);\n                halt;\n            end\n            else begin //\u5426\u5219\u52a0\u6ee1\u6cb9\n                ans:=ans+(c-restfuel)*price[nowloc];\n                restfuel:=c-(dist[maxfar]-dist[nowloc])/d2; //\u5c06\u5269\u4f59\u6cb9\u91cf\u51cf\u53bb\u8d70\u5230\u6700\u8fdc\u80fd\u8d70\u5230\u7684\u70b9\u82b1\u8d39\u7684\u6cb9\n                if maxfar=n+1 then begin //\u5982\u679c\u6700\u8fdc\u80fd\u8d70\u5230\u7684\u70b9\u662f\u7ec8\u70b9\u5c31\u8f93\u51fa\n                    writeln(ans:0:2);\n                    halt;\n                end;\n                    work(maxfar,restfuel,ans); //\u9012\u5f52\n                    exit;\n            end;\n        end;\n        if minloc>nowloc then begin //\u5982\u679c\u5b58\u5728\u66f4\u4fbf\u5b9c\u7684\u70b9\u5219\u8d70\u5230\u90a3\u4e2a\u52a0\u6cb9\u7ad9\n            ans:=ans+((dist[minloc]-dist[nowloc])/d2-restfuel)*price[nowloc]; //\u52a0\u6070\u597d\u80fd\u8d70\u5230\u90a3\u4e2a\u52a0\u6cb9\u7ad9\u7684\u6cb9\n            restfuel:=0; //\u56e0\u4e3a\u662f\u6070\u597d\u8d70\u5230\u6240\u4ee5\u5269\u4f59\u7684\u6cb9\u4e00\u5b9a\u662f0\n            if minloc=n+1 then begin //\u5982\u679c\u6700\u4fbf\u5b9c\u7684\u70b9\u662f\u7ec8\u70b9\u5219\u9000\u51fa\uff08\u56de\u8fc7\u5934\u6765\u770b\u8fd9\u6bb5\u5224\u65ad\u5e76\u6ca1\u6709\u610f\u4e49\uff09\n                writeln(ans:0:2);\n                halt;\n            end;\n            work(minloc,restfuel,ans); //\u9012\u5f52\n            exit;\n        end;\n    end;\nBegin\n    read(d1,c,d2,p,n); //\u8bfb\u5165\n    dist[0]:=0; //\u5148\u5c06\u8d77\u70b9\u8ddd\u79bb\u521d\u59cb\u5316\u4e3a0\n    dist[n+1]:=d1; //\u5c06\u7ec8\u70b9\u8ddd\u79bb\u521d\u59cb\u5316\u4e3ad1\u3002\n    price[0]:=p; //\u5c06\u8d77\u70b9\u7684\u4ef7\u683c\u521d\u59cb\u5316\u4e3ap\n    price[n+1]:=maxlongint; //\u5c06\u7ec8\u70b9\u4ef7\u683c\u8bbe\u7f6e\u4e3amaxlongint(\u9632\u6b62\u4e0a\u6587\u4e2d\u8ba4\u4e3a\u7ec8\u70b9\u662f\u6700\u4fbf\u5b9c\u7684\u70b9)\n    for i:=1 to n do //\u6b63\u5e38\u8bfb\u5165\n        read(dist[i],price[i]);\n    work(0,0,0); //\u4ece\u8d77\u70b9\u4e3a0\uff0c\u82b1\u8d39\u4e3a0\uff0c\u5269\u4f59\u6cb9\u91cf\u4e3a0\u5f00\u59cb\u9012\u5f52\nEnd.\n```\n[/codep ]",
        "postTime": 1464094707,
        "uid": 8876,
        "name": "hibiki",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1016 \u3010\u65c5\u884c\u5bb6\u7684\u9884\u7b97\u3011"
    },
    {
        "content": "\u5176\u5b9e\u4e0d\u592a\u96be\uff0c\u6e05\u695a\u601d\u8def\u5c31\u884c\u4e86\u3002\u522b\u5413\u5230\n\n\n\u5e94\u8be5\u770b\u5f97\u61c2\n\n\n```cpp\nvar\n  p,d:array[0..10]of real;  //\uff08p\u6570\u7ec4=price,d\u6570\u7ec4=distance)\n  n:longint;\n  d1,c,d2:real;//\uff08d1\u7ec8\u70b9\u8ddd\u79bb\uff0cc\u6cb9\u7bb1\u5bb9\u91cf\uff0cd2\u4e00\u5347\u6cb9\u80fd\u5f00\u591a\u8fdc\uff09\nprocedure init;\n  var\n    i:longint;\n  begin\n    readln(d1,c,d2,p[0],n);\n    for i:=1 to n do\n      readln(d[i],p[i]);\n  end;\nprocedure qs(l,r:longint);//(\u6309\u8ddd\u79bb\u6392\u5e8f\uff0c\u65b9\u4fbf\u5904\u7406\uff0c\u65e0\u804a\u6253\u4e86\u4e0b\u5feb\u6392\uff09\n  var\n    i,j:longint;\n    k,t:real;\n  begin\n    i:=l;j:=r;k:=d[(i+j) div 2];\n    repeat\n      while d[i]<k do inc(i);\n      while d[j]>k do dec(j);\n      if i<=j then\n      begin\n        t:=d[i];d[i]:=d[j];d[j]:=t;\n        t:=p[i];p[i]:=p[j];p[j]:=t;\n        inc(i);dec(j);\n      end;\n    until i>j;\n    if i<r then qs(i,r);\n    if l<j then qs(l,j);\n  end;\nprocedure main;\n  var\n    i,pre,t:longint;\n    min,v,s:real;\n  begin\n    pre:=0;s:=0;v:=0;//\uff08pre\u5f53\u524d\u52a0\u6cb9\u7ad9\uff0cs\u82b1\u8d39\uff0cv\u5f53\u524d\u6cb9\u7bb1\u7684\u6cb9\uff09\n    repeat\n      i:=pre+1;//\uff08\u4e0b\u4e00\u4e2a\u52a0\u6cb9\u7ad9\uff09\n      while (p[i]>p[pre]) and (i<=n) and not(d[pre]+c*d2<d[i]) do\n        inc(i);//\uff08\u5bfb\u627e\u6709\u6ca1\u6709\u6cb9\u8d39\u66f4\u4f4e\u7684\u52a0\u6cb9\u7ad9\uff09\n      if (i<=n) and (d[pre]+c*d2>=d[i])\n      then begin//\uff081.\u60c5\u51b5\uff0c\u6709\u6cb9\u8d39\u66f4\u4f4e\u7684\u52a0\u6cb9\u7ad9\uff09\n           // \uff08\u5904\u7406\u4e0bv\uff0c\u4e0d\u5904\u7406\u7684\u8bdd\u4f1a\u5f04\u51fa\u8d1f\u6570\uff09\n             if (d[i]-d[pre])/d2>v then  //\uff08\u8981\u5f00\u5230\u4e0b\u4e00\u7ad9\u7684\u6cb9\u91cf\u6bd4\u5f53\u524d\u6cb9\u7bb1\u6cb9\u91cf\u5927\uff09\n             begin\n               s:=s+((d[i]-d[pre])/d2-v)*p[pre]; //\uff08\u591a\u52a0\u70b9\u6cb9\uff09\n               v:=0;  //\uff08\u5728\u4e0b\u4e00\u7ad9\u8017\u5149\uff09\n             end\n             else v:=v-(d[i]-d[pre])/d2;  //\uff08\u4e0d\u7528\u52a0\u6cb9\u4e86\uff0c\u76f4\u63a5\u5f00\u8fc7\u53bb\uff09\n             pre:=i;\n           end\n      else begin\n             if d[pre]+c*d2>=d1 then//\uff08\u80fd\u5f00\u5230\u7ec8\u70b9\u4e86\uff0c\u6700\u4f18\u89e3\u51fa\u6765\u4e86\uff09\n             begin\n               s:=s+((d1-d[pre])/d2-v)*p[pre];  //\uff08v\u4e0d\u4f1a\u5927\u4e8ed1-d[pre]\u7684\uff0c\u4e0d\u89e3\u91ca\u4e86\uff09\n               writeln(s:0:2);\n               exit;\n             end;\n             //\uff08\u8fd8\u5230\u4e0d\u4e86\u7ec8\u70b9\uff09\n             t:=0;min:=maxlongint;\n             for i:=pre+1 to n do //\uff08\u5bfb\u627e\u80fd\u5230\u7ad9\u4e2d\u6cb9\u8d39\u6700\u5c0f\u7684\u7ad9\uff09\n               if d[pre]+c*d2<d[i] then break\n               else if p[i]<min then begin\n                                       t:=i;\n                                       min:=p[i];\n                                     end;\n            if t=0 then begin //(t=0\u8868\u793a\u540e\u9762\u6ca1\u7ad9\u4e86\uff0c\u5230\u4e0d\u4e86\u7ec8\u70b9\u4e86---\u65e0\u89e3\uff09\n                          writeln('No Solution');\n                          exit;\n                        end;\n            s:=s+(c-v)*p[pre];//\uff08\u52a0\u6ee1\u6cb9\uff09\n            v:=c;\n            v:=v-(d[t]-d[pre])/d2; //\uff08\u5f00\u5230\u4e0b\u4e00\u7ad9\uff0c\u6cb9\u7bb1\u7684\u6cb9\u51cf\u53bb\u5bf9\u5e94\u7684\u503c\uff09\n            pre:=t;\n          end;\n    until false;\n  end;\nbegin\n  init;\n  qs(1,n);\n  main;\nend.\n```",
        "postTime": 1460121564,
        "uid": 15264,
        "name": "shimly",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1016 \u3010\u65c5\u884c\u5bb6\u7684\u9884\u7b97\u3011"
    }
]