[
    {
        "content": "\u4e00\u9053\u7ecf\u5178\u7684\u8ba1\u7b97\u51e0\u4f55\u9898\uff0c\u5e76\u4e0d\u96be~~\u7136\u800c\u6211\u8fd8\u662f\u4ea4\u4e86\u597d\u591a\u904d~~\n\n\u6211\u4eec\u6709\u4e24\u4e2a\u601d\u8def\uff1a\n\n \u4e00.\u66b4\u529b\uff1a\u5bf9\u4e8e\u6bcf\u4e00\u6761\u7ed9\u51fa\u7684\u7ebf\u6bb5\uff0c\u6211\u4eec\u628a\u6bcf\u4e00\u4e2a\u5706\u626b\u4e00\u904d\u5e76\u5224\u65ad\u662f\u5426\u76f8\u4ea4\uff0c\u4f46\u662f\u8fd9\u6837\u592a\u6162\u4e86\uff0c\u6700\u540e\u56db\u4e2a\u70b9TLE\u8dd1\u4e0d\u6389\u60f9QAQ\u3002\u3002\u3002\n\n \u65b9\u6cd5\u8fd8\u662f\u503c\u5f97\u501f\u9274\u7684\uff1a\n\n 1) \u5982\u679c\u7ebf\u6bb5\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u7aef\u70b9\u5728\u5706\u5185\uff0c\u80af\u5b9a\u76f8\u4ea4\n \n 2) \u5982\u679c\u7ebf\u6bb5\u4e24\u4e2a\u7aef\u70b9\u90fd\u5728\u5706\u5185\uff0c\u80af\u5b9a\u4e0d\u76f8\u4ea4\n \n 3) \u5982\u679c\u7ebf\u6bb5\u4e24\u4e2a\u7aef\u70b9\u90fd\u4e0d\u5728\u5706\u5185\uff0c\u5219\u53ef\u4ee5\u7528\u8ddd\u79bb\u516c\u5f0f\u53bb\u5224\u65ad\u662f\u5426\u76f8\u4ea4\n \n \n ~~\u60f3\u8981\u56fe\uff1f\u6ca1\u6709\u56fe\uff0c\u81ea\u5df1\u8111\u8865~~\n \n \u4ee3\u7801\u5982\u4e0b\uff1a\n\n ```cpp\n #include<cstdio>\n#include<cmath>\n#include<algorithm>\n#define _ 0\n#define N 200000\n#define drep(k ,l ,r) for(register int k = (l) ; k >= r ; -- k)\n#define rep(k ,l ,r) for(register int k = l ; k <= r ; ++ k)\n#define re register\nusing namespace std;\nstruct node {\n\tint x ,y;\n\tdouble r;\n} cir[N];\nint n ,m ,_x1 ,_yi ,_x2 ,_y2;\nint read() {\n\tchar cc = getchar() ; int cn = 0 ,flus = 1;\n\twhile(cc < '0' || cc > '9') {if(cc == '-') flus = - flus ; cc = getchar();}\n\twhile(cc >= '0' && cc <= '9') cn = cn * 10 + cc - '0' ,cc = getchar();\n\treturn flus * cn;\n}\nbool in_cir(int _x ,int _y ,int now) {//\u5224\u65ad\u70b9\u662f\u5426\u5728\u5706\u5185\n\tif((_x - cir[now].x) * (_x - cir[now].x) + (_y - cir[now].y) * (_y - cir[now].y) - cir[now].r * cir[now].r <= 0) \n\t\treturn 1;\n    return 0;\n}\nbool judge(int now) {//\u603b\u7684\u5224\u65ad\u51fd\u6570\n\tre bool inc1 = in_cir(_x1 ,_yi ,now) ,inc2 = in_cir(_x2 ,_y2 ,now);\n\tif(inc1 && inc2) return 0;\n\tif(((!inc1) && inc2) || ((!inc2) && inc1)) return 1;\n\tre double A ,B ,C ,dis1 ,dis2 ,ang1 ,ang2;\n\tif(_x1 == _x2) A = 1 ,B = 0 ,C = - _x1;\n\telse if(_yi == _y2) A = 0 ,B = 1 ,C = - _yi;\n\t\t else A = _yi - _y2 ,B = _x2 - _x1 ,C = _x1 * _y2 - _x2 * _yi;\n\t/*dis1 = A * cir[now].x + B * cir[now].y + C; dis1 *= dis1;\n\tdis2 = (A * A + B * B) * cir[now].r * cir[now].r;\n\tif(dis1 > dis2) return 0;\n\tang1 = (cir[now].x - _x1) * (_x2 - _x1) + (cir[now].y - _yi) * (_y2 - _yi);\n\tang2 = (cir[now].x - _x2) * (_x1 - _x2) + (cir[now].y - _y2) * (_yi - _y2);\n\tif(ang1 > 0 && ang2 > 0) return 1;\n\treturn 0;*/ \u5229\u7528\u4f59\u5f26\u516c\u67ff\u5224\u65ad\u662f\u5426\u76f8\u4ea4\uff0c\u7136\u800c\u8fd8\u6bd4\u8ddd\u79bb\u516c\u67ff\u9ebb\u70e6\u591a\u4e86\n\tdouble d = abs((A * cir[now].x + B * cir[now].y + C) / sqrt(A * A + B * B));//\u8ddd\u79bb\u516c\u67ff\n\treturn cir[now].r - d >= 0;\n}\nint main() {\n\tn = read();\n\trep(i ,1 ,n) cir[i].x = read() ,cir[i].y = read() ,scanf(\"%lf\" ,&cir[i].r);\n\tm = read();\n\twhile(m --) {\n\t\tre int ans = 0;\n\t\t_x1 = read() ,_yi = read() ,_x2 = read() ,_y2 = read();\n\t\trep(i ,1 ,n) {\n        \tif((max(_yi ,_y2) >= cir[i].y - cir[i].r) && min(_yi ,_y2) <= cir[i].y + cir[i].r && max(_x1 ,_x2) >= cir[i].x - cir[i].r && min(_x1 ,_x2) <= cir[i].x + cir[i].r)//\u4e00\u4e2a\u5e76\u65e0\u5565\u5b50\u7528\u7684\u7279\u5224\n            if(judge(i)) ++ans;\n        }\n\t\tprintf(\"%d\\n\" ,ans);\n\t}\n\treturn ~~(0^_^0);\n}\n ```\n \u7136\u540e\u4f60\u5c31\u6709\u4e8663\u5206\uff0c\u5e76\u4e3a\u600e\u4e48\u526a\u679d\u800c\u6293\u72c2\u3002\u3002\u3002\u3002\u3002\u3002\n\n~~\u6700\u540e\u8fd9\u79cd\u65b9\u6cd5\u8fd8\u662f\u88ab\u6211\u629b\u5f03\u4e86QAQ~~\n \n \u4e8c.\u66b4\u529b\uff1a\u5bf9\u4e8e\u6bcf\u4e00\u6761\u7ed9\u51fa\u7684\u7ebf\u6bb5\uff0c\u679a\u4e3e\u7ebf\u6bb5\u4e0a\u7684\u6bcf\u4e00\u4e2a\u6574\u6570 $x$ \u548c\u6bcf\u4e00\u4e2a\u5bf9\u5e94\u7684 $y$ ,\u56e0\u4e3a\u5706\u7684\u534a\u5f84 $r\\leq1$,\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u5728\u4e00\u5b9a\u8303\u56f4\u5185\u67e5\u627e\u662f\u5426\u6709\u5706\uff0c\u662f\u5426\u76f8\u4ea4\u5c31\u884c\u4e86\u3002\n \n   1) \u5982\u679c\u5b58\u5728\u5782\u76f4\u4e8e $x$ \u8f74\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u53ea\u8981\u5224\u65ad\u7ebf\u6bb5\u7ecf\u8fc7\u7684\u5730\u65b9\u662f\u5426\u6709\u5706\u3002\n \n   2) \u5982\u679c\u5b58\u5728\u5782\u76f4\u4e8e $y$ \u8f74\u7684\u60c5\u51b5\uff0c\u540c\u4e0a\u3002\n \n   3) \u5982\u679c\u7ebf\u6bb5\u5b58\u5728\u659c\u7387\uff0c\u5219\u9700\u8981\u5212\u5b9a\u4e00\u4e2a\u533a\u95f4\u53bb\u68c0\u67e5\u5176\u4e2d\u662f\u5426\u6709\u5706\u3002 \n \n   -  \u82e5\u7ebf\u6bb5\u9012\u589e\uff0c\u5219\u67e5\u8be2 $ [x][floor(k * (x - 1) + b - Eps)] $ \u5230 $ [x][ceil(k * (x + 1) + b + Eps)] $\n    \n   -  \u82e5\u7ebf\u6bb5\u9012\u51cf\uff0c\u5219\u67e5\u8be2 $ [x][floor(k * (x + 1) + b - Eps)] $ \u5230 $ [x][ceil(k * (x - 1) + b + Eps)] $\n    \n   -  \u53eb\u4f60\u5fd8\u8bb0\u7279\u5224\u7aef\u70b9!\n    \n\n\n\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\n#define _ 0\n#define drep(k ,l ,r) for(register int k = (l) ; k >= (r) ; -- k)\n#define rep(k ,l ,r) for(register int k = l ; k <= r ; ++ k)\n#define re register \nusing namespace std;\nconst int Eps = 1e-8;\ndouble xoy[700][700] ,r ,k ,b ,len ,A ,B ,C;\nint x1 ,yI ,x2 ,yS ,n ,m ,ans ,_x ,_y;\nint read() {\n    char cc = getchar() ; int cn = 0 ,flus = 1;\n    while(cc < '0' || cc > '9') {if(cc == '-') flus = - flus ; cc = getchar();}\n    while(cc >= '0' && cc <= '9') cn = cn * 10 + cc - '0' ,cc = getchar();\n    return flus * cn;\n}\nvoid line() {//\u89e3\u76f4\u7ebf\n    A = (double)(yS - yI) ,B = (double)(x1 - x2) ,C = (double)yI * (double)(x2 - x1) + (double)x1 * (double)(yI - yS);\n    re double tmp = (double)sqrt(A * A + B * B);\n    A /= tmp ,B /= tmp ,C /= tmp;\n    k = (double)(yS - yI) / (double)(x2 - x1) ,b = (double)(yI - x1 * k);\n}\nbool get(int x ,int y) {//\u5224\u65ad\u662f\u5426\u76f8\u4ea4\n    re double tmp = fabs(A * x + B * y + C) - xoy[x][y];\n    if(fabs(tmp) <= Eps || tmp <= 0) return 1;\n    else return 0;\n}\nint maker(int op ,int y_ ,int y__) {//\u5728\u533a\u95f4\u5185\u67e5\u8be2\n    re int res = 0;\n    rep(i ,y_ ,y__) {\n        if(xoy[op][i] <= Eps) continue;\n        res += get(op ,i);\n    }\n    return res;\n}\nint main() {\n    n = read();\n    while(n--) \n\tx1 = read() ,yI = read() ,scanf(\"%lf\" ,&r) ,xoy[x1][yI] = r;\n    m = read();\n    while(m --) {\n        x1 = read() ,yI = read() ,x2 = read() ,yS = read() ,ans = 0;\n        if(x1 == x2) {//\u5782\u76f4\u4e8ex\u8f74\n            if(yI > yS) swap(yI ,yS);\n            rep(i ,yI ,yS) if(xoy[x1][i]) ++ ans;//\u67e5\u8be2\u7ebf\u6bb5\u4e0a\u662f\u5426\u5b58\u5728\u5706\uff0c\u7edf\u8ba1\u7b54\u6848\n        }\n        else if(yI == yS) {//\u5782\u76f4\u4e8ey\u8f74\n            if(x1 > x2) swap(x1 ,x2);\n            rep(i ,x1 ,x2) if(xoy[i][yI]) ++ans;\n        }\n        else {\n            if(x1 > x2 || ((x1 == x2) && (yI > yS))) swap(x1 ,x2) ,swap(yI ,yS);\n            line();\n            if(k > 0) {//\u9012\u589e\n                ans += maker(x1 ,yI ,ceil(k * (x1 + 1) + b + Eps));//\u5de6\u7aef\u70b9\n                rep(x ,x1 + 1 ,x2 - 1) ans += maker(x ,floor((double)(k * (x - 1) + b - Eps)) ,ceil((double)(k * (x + 1) + b + Eps)));//\u4e2d\u95f4\u90e8\u5206\n                ans += maker(x2 ,floor(k * (x2 - 1) + b - Eps) ,yS);//\u53f3\u7aef\u70b9\n            }\n            else {//\u9012\u51cf\n                ans += maker(x1 ,floor(k * (x1 + 1) + b - Eps) ,yI);\n                rep(x ,x1 + 1 ,x2 - 1) ans += maker(x ,floor((double)(k * (x + 1) + b - Eps)) ,ceil((double)(k * (x - 1) + b + Eps)));\n                ans += maker(x2 ,yS ,ceil(k * (x2 - 1) + b + Eps));\n            }\n        }\n        printf(\"%d\\n\" ,ans);\n    }\n    return ~~(0^_^0);\n}\n```\n\u7136\u540e\u4f60\u5c31\u5f97\u5230\u4e86100\u5206QAQ\n\n~~\u4e0d\u600e\u4e48\u6e29\u99a8\u7684~~\u6e29\u99a8\u63d0\u9192\uff1a\u56e0\u4e3a\u5934\u6587\u4ef6\u7684\u9505 $y1$ \u4e0d\u80fd\u76f4\u63a5\u5b9a\u4e49,\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684 _ $yi$ \u5219\u4e3a $y1$ ,\u4e0b\u9762\u4ee3\u7801\u4e2d\u7684 $yI$ \u4e3a $y1$ , $yS$ \u4e3a $y2$~~\u522b\u95ee\uff0c\u95ee\u5c31\u662f\u5fc3\u8840\u6765\u6f6e\u7684\u5168\u5c40\u66ff\u6362~~",
        "postTime": 1580138418,
        "uid": 44505,
        "name": "lemonfor",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4354 \u3010[CERC2015]Ice Igloos\u3011"
    }
]