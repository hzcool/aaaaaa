[
    {
        "content": "# \u5e7f\u544a\n\n[\u849f\u84bb\u306eblog](http://www.cnblogs.com/dedicatus545/p/8845918.html)\n\n# \u6b63\u6587\n\n\u9996\u5148\uff0c\u6709\u4e00\u4e2a\u975e\u5e38\u660e\u663e\u7684\u6a21\u578b\uff1a\n\n\u5c06\u6fc0\u5149\u6b66\u5668\u653e\u5230\u4e00\u8fb9\uff0c\u673a\u5668\u4eba\u653e\u5230\u53e6\u4e00\u8fb9\uff0c\u4ece\u6bcf\u4e00\u4e2a\u6fc0\u5149\u6b66\u5668\u5411\u5b83\u53ef\u4ee5\u653b\u51fb\u7684\u673a\u5668\u4eba\u8fde\u8fb9\uff0c\u5f62\u6210\u4e00\u4e2a\u4e8c\u5206\u56fe\n\n\u5efa\u7acb\u9644\u52a0\u6e90\u70b9$ss$\u548c\u9644\u52a0\u6c47\u70b9$tt$\uff0c$ss$\u8fde\u6240\u6709\u6fc0\u5149\u6b66\u5668\uff0c$tt$\u8fde\u6240\u6709\u673a\u5668\u4eba\uff0c\u8dd1\u7f51\u7edc\u6d41\u7b97\u6cd5\n\n\u4f46\u662f\uff0c\u95ee\u9898\u5728\u4e8e\u8fd9\u9053\u9898\u201c\u6b66\u5668\u7684\u653b\u51fb\u662f\u8fde\u7eed\u7684\u201d\uff0c\u4e5f\u5c31\u662f\u89e3\u662f\u5b9e\u6570\u89e3\n\n\u8fd9\u4f7f\u5f97\u6211\u4e00\u5f00\u59cb\u60f3\u7684\u8d39\u7528\u6d41\u7b97\u6cd5\u5931\u6548\u4e86\n\n\u65f6\u95f4\u4e3a\u5b9e\u6570\uff0c\u5c31\u8bf4\u660e\u6211\u4eec\u4e0d\u80fd\u628a\u65f6\u95f4\u5f53\u6210\u8d39\u7528\u6765\u770b\uff0c\u90a3\u4e48\u8be5\u600e\u4e48\u529e\u5462\uff1f\n\n\u6211\u4eec\u8003\u8651\u628a\u5b9e\u6570\u65f6\u95f4\u4ece\u8d39\u7528\u7684\u4f4d\u7f6e\u8f6c\u5230\u6d41\u91cf\u7684\u4f4d\u7f6e\u53bb\n\n\u4f46\u662f\u6d41\u91cf\u5728\u4e00\u5f00\u59cb\u5c31\u662f\u786e\u5b9a\u7684\uff0c\u6700\u5927\u6d41\u8dd1\u51fa\u6765\u7684\u7ed3\u679c\u53ea\u80fd\u7528\u6765\u5224\u65ad\u662f\u5426\u662f\u4e00\u4e2a\u89e3\n\n\u65e2\u7136\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u4f7f\u7528\u4e8c\u5206\u7684\u65b9\u6cd5\uff0c\u5c06\u6700\u4f18\u5316\u95ee\u9898\u8f6c\u5316\u4e3a\u5224\u65ad\u6027\u95ee\u9898\n\n\u4e8c\u5206\u65f6\u95f4t\uff0c\u6bcf\u4e00\u6b21\u5bf9\u4e8et\uff0c\u6309\u7167\u5982\u4e0b\u65b9\u5f0f\u5efa\u8fb9\uff08\u4ee5\u4e0b\u7528$\\left(u,v,w\\right)$\u8868\u793au\u5230v\u7684\u6d41\u91cf\u4e3aw\u7684\u6709\u5411\u8fb9\uff09\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6fc0\u5149\u6b66\u5668i\uff0c\u5efa\u8fb9$\\left(ss,i,B\\left[i\\right]\\ast t\\right)$\n\n\u5bf9\u4e8e\u6fc0\u5149\u6b66\u5668i\u53ef\u4ee5\u653b\u51fb\u7684\u673a\u5668\u4eba\uff0c\u5efa\u8fb9$\\left(i,j,inf\\right)$\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u673a\u5668\u4ebaj\uff0c\u5efa\u8fb9$\\left(j,tt,A\\left[j\\right]\\right)$\n\n\u5982\u679c\u6700\u5927\u6d41\u6d41\u91cf\u7b49\u4e8e\u6240\u6709\u673a\u5668\u4eba\u7684\u751f\u547d\u4e4b\u548c\uff0c\u90a3\u4e48r=mid\uff0c\u5426\u5219l=mid+1\n\n\u56e0\u4e3a\u7cbe\u5ea6\u8981\u6c42\u53ea\u67091e-3\uff0c\u6240\u4ee5\u628a\u6240\u6709\u751f\u547d\u548c\u65f6\u95f4\u90fd\u4e58\u4e00\u4e2a10000\u5904\u7406\uff0c\u8981\u5f00long long \n\n# Code:\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define inf 1e15\n#define ll long long\nusing namespace std;\ninline ll read(){\n\tll re=0,flag=1;char ch=getchar();\n\twhile(ch>'9'||ch<'0'){\n\t\tif(ch=='-') flag=-1;\n\t\tch=getchar();\n\t}\n\twhile(ch>='0'&&ch<='9') re=(re<<1)+(re<<3)+ch-'0',ch=getchar();\n\treturn re*flag;\n}\nll n,m,cnt=-1,first[210],dep[210],cur[210];\nstruct edge{\n\tll to,next,w;\n}a[100010];\nvoid add(ll u,ll v,ll w){\n\ta[++cnt]=(edge){v,first[u],w};first[u]=cnt;\n\ta[++cnt]=(edge){u,first[v],0};first[v]=cnt;\n}\nbool bfs(ll s,ll t){\n\tll q[210],head=0,tail=1,i,u,v;\n\tfor(i=s;i<=t;i++) dep[i]=-1,cur[i]=first[i];\n\tq[0]=s;dep[s]=0;\n\twhile(head<tail){\n\t\tu=q[head++];\n\t\tfor(i=first[u];~i;i=a[i].next){\n\t\t\tv=a[i].to;\n\t\t\tif(~dep[v]||!a[i].w) continue;\n\t\t\tdep[v]=dep[u]+1;q[tail++]=v;\n\t\t}\n\t}\n\treturn ~dep[t];\n}\nll dfs(ll u,ll t,ll limit){\n\tif(u==t||!limit) return limit;\n\tll i,v,f,flow=0;\n\tfor(i=first[u];~i;i=a[i].next){\n\t\tv=a[i].to;\n\t\tif(dep[v]==dep[u]+1&&(f=dfs(v,t,min(limit,a[i].w)))){\n\t\t\ta[i].w-=f;a[i^1].w+=f;\n\t\t\tflow+=f;limit-=f;\n\t\t\tif(!limit) return flow;\n\t\t}\n\t}\n\treturn flow;\n}\nll dinic(ll s,ll t){\n\tll re=0;\n\twhile(bfs(s,t)) re+=dfs(s,t,inf);\n\treturn re;\n}\nbool x[60][60];ll hp[60],atk[60],sum=0;\nvoid init(){\n\tmemset(first,-1,sizeof(first));memset(a,0,sizeof(a));cnt=-1;\n}\nvoid build(ll t){\n\tll ss=0,tt=n+m+1,i,j;\n\tfor(i=1;i<=m;i++) add(ss,i,t*atk[i]);\n\tfor(i=1;i<=n;i++) add(i+m,tt,hp[i]);\n\tfor(i=1;i<=m;i++){\n\t\tfor(j=1;j<=n;j++){\n\t\t\tif(x[i][j]) add(i,j+m,inf);\n\t\t}\n\t}\n}\nint main(){\n\tn=read();m=read();ll i,j,le,ri,mid,ans;\n\tfor(i=1;i<=n;i++) hp[i]=read(),hp[i]*=10000ll,sum+=hp[i];\n\tfor(i=1;i<=m;i++) atk[i]=read();\n\tfor(i=1;i<=m;i++){\n\t\tfor(j=1;j<=n;j++) x[i][j]=read();\n\t}\n\tle=0;ri=100000000000ll;\n\twhile(le<ri){\n\t\tmid=(le+ri)>>1ll;\n\t\tinit();\n\t\tbuild(mid);\n\t\tans=dinic(0,n+m+1);\n\t\tif(ans<sum) le=mid+1;\n\t\telse ri=mid;\n\t}\n\tprintf(\"%.4lf\",(double)le/10000.0);\n}\n```",
        "postTime": 1523757671,
        "uid": 27753,
        "name": "Orion545",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3324 \u3010[SDOI2015]\u661f\u9645\u6218\u4e89\u3011"
    },
    {
        "content": "[\u53f3\u8f6c\u8bf7](https://www.cnblogs.com/rui-4825/p/13964173.html)\r\n## Solution\r\n\u91cd\u96be\u70b9\u4f9d\u7136\u662f\u5efa\u56fe  \r\n\u8003\u8651\u653b\u51fb\u529b\u9650\u5236\u6761\u4ef6  \r\n\u4e00\u4e2a\u662f\u653b\u51fb\u88c5\u7f6e\u80fd\u591f\u53d1\u5c04\u7684\u4f24\u5bb3  \r\n\u4e00\u4e2a\u662f\u9632\u5fa1\u88c5\u7f6e\u80fd\u591f\u627f\u53d7\u7684\u4f24\u5bb3  \r\n\u5efa\u7acb\u8d85\u7ea7\u6e90\u70b9\u8d85\u7ea7\u6c47\u70b9  \r\n\u6e90\u70b9\u5411\u6b66\u5668\u5efa\u8fb9\uff0c\u8fb9\u6743\u4e3a\u653b\u51fb\u53c2\u6570  \r\n\u9632\u5fa1\u5411\u6c47\u70b9\u5efa\u8fb9\uff0c\u8fb9\u6743\u4e3a\u9632\u5fa1\u7cfb\u6570  \r\n\u6b66\u5668\u4e0e\u9632\u5fa1\u4e4b\u95f4\u8fb9\u6743$inf$\u5373\u53ef  \r\n\u8003\u8651\u4e8c\u5206\u7b54\u6848  \r\n\u52a0\u5165\u73b0\u5728\u62e5\u6709\u4e00\u4e2a\u653b\u51fb\u65f6\u95f4  \r\n\u90a3\u4e48\u6bcf\u4e2a\u6b66\u5668\u7684\u8f93\u51fa\u53d8\u6210\u539f\u6765\u7684\u653b\u51fb\u529b \\* \u653b\u51fb\u65f6\u95f4  \r\n\u6b64\u65f6\u5bf9\u5168\u56fe\u8dd1\u6700\u5927\u6d41  \r\n\u5982\u679c\u6700\u5927\u6d41\u548c\u9632\u5fa1\u7cfb\u6570\u4e4b\u548c\u76f8\u7b49  \r\n\u8bc1\u660e\u5f53\u524d\u65f6\u95f4\u53ef\u4ee5\u6467\u6bc1\u6240\u6709\u9632\u5fa1\u673a\u5668\u4eba  \r\n\u90a3\u4e48\u5c31\u53ef\u4ee5\u7f29\u5c0f\u7b54\u6848\u89c4\u6a21  \r\n\u53cd\u4e4b\u5f53\u524d\u8f93\u51fa\u4e0d\u591f\u6467\u6bc1\u6240\u6709\u673a\u5668\u4eba  \r\n\u90a3\u4e48\u589e\u52a0\u7b54\u6848\u4f7f\u8f93\u51fa\u66f4\u63a5\u8fd1\u9632\u5fa1\u7cfb\u6570\u4e4b\u548c  \r\n\u8003\u8651\u7cbe\u5ea6\u95ee\u9898  \r\n\u53ef\u4ee5\u7ed9\u6240\u6709\u9632\u5fa1\u7cfb\u6570\u4e58\u4e0a10000\uff08\u56e0\u4e3a\u7cbe\u5ea6\u9650\u5236\u53ea\u67091000\uff09  \r\n\u653b\u51fb\u53c2\u6570\u4e0d\u52a8  \r\n\u8fd9\u6837\u8dd1\u51fa\u6765\u7684\u653b\u51fb\u65f6\u95f4\u4f1a\u6bd4\u539f\u6765\u592710000\u500d  \r\n\u518d\u5c06\u7b54\u6848\u9664\u4ee510000\u8f93\u51fa\u5373\u53ef  \r\n\r\n## Code\r\n```cpp\r\n#include <iostream>\r\n#include <cstring>\r\n#include <cstdio>\r\n#include <algorithm>\r\n#include <queue>\r\n#include <cmath>\r\n#define int long long\r\n#define min(a, b) ({register int aa = a, bb = b; aa > bb ? bb : aa;})\r\n#define inf 0x7fffffff\r\nusing namespace std;\r\n\r\ninline int read(){\r\n\tint x = 0, w = 1;\r\n\tchar ch = getchar();\r\n\tfor(; ch > '9' || ch < '0'; ch = getchar()) if(ch == '-') w = -1;\r\n\tfor(; ch >= '0' && ch <= '9'; ch = getchar()) x = x * 10 + ch - '0';\r\n\treturn x * w;\r\n}\r\n\r\nconst int ss = 10010;\r\n\r\nstruct node{\r\n\tint to, nxt, w;\r\n}edge[ss * 20];\r\n\r\nint head[ss], tot = 1;\r\ninline void add(register int u, register int v, register int w){\r\n\tedge[++tot].to = v;\r\n\tedge[tot].nxt = head[u];\r\n\tedge[tot].w = w;\r\n\thead[u] = tot;\r\n}\r\n\r\nint dis[ss], cur[ss];\r\nint n, m, s, t;\r\nbool vis[ss];\r\nqueue<int> q;\r\ninline bool spfa(register int s){\r\n\tfor(register int i = 0; i <= t; i++)\r\n\t\tdis[i] = 0x3f3f3f3f, cur[i] = head[i], vis[i] = 0;\r\n\tdis[s] = 0;\r\n\tq.push(s);\r\n\twhile(!q.empty()){\r\n\t\tregister int u = q.front();\r\n\t\tq.pop();\r\n\t\tvis[u] = 0;\r\n\t\tfor(register int i = head[u]; i; i = edge[i].nxt){\r\n\t\t\tregister int v = edge[i].to;\r\n\t\t\tif(dis[v] > dis[u] + 1 && edge[i].w){\r\n\t\t\t\tdis[v] = dis[u] + 1;\r\n\t\t\t\tif(!vis[v]) q.push(v), vis[v] = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn dis[t] != 0x3f3f3f3f;\r\n}\r\n\r\ninline int dfs(register int u, register int flow){\r\n\tregister int res = 0;\r\n\tif(u == t) return flow;\r\n\tfor(register int i = cur[u]; i; i = edge[i].nxt){\r\n\t\tcur[u] = i;\r\n\t\tregister int v = edge[i].to;\r\n\t\tif(dis[v] == dis[u] + 1 && edge[i].w){\r\n\t\t\tif(res = dfs(v, min(flow, edge[i].w))){\r\n\t\t\t\tedge[i].w -= res;\r\n\t\t\t\tedge[i ^ 1].w += res;\r\n\t\t\t\treturn res;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\ninline long long dinic(){\r\n\tregister long long maxflow = 0;\r\n\tregister long long minflow = 0;\r\n\twhile(spfa(s)){\r\n\t\twhile(minflow = dfs(s, 0x7fffffff))\r\n\t\t\tmaxflow += minflow;\r\n\t}\r\n\treturn maxflow;\r\n}\r\n\r\nlong long a[ss], b[ss], sum;\r\nbool map[55][55];\r\ninline bool check(register long long x){\r\n\tfor(register int j = 1; j <= m; j++)\r\n\t\tb[j] *= x;\r\n\tmemset(head, 0, sizeof head);\r\n\tmemset(cur, 0, sizeof cur);\r\n\ttot = 1;\r\n\tfor(register int i = 1; i <= m; i++)\r\n\t\tadd(s, i, b[i]), add(i, s, 0);\r\n\tfor(register int j = 1; j <= n; j++)\r\n\t\tadd(j + m, t, a[j]), add(t, j + m, 0);\r\n\tfor(register int j = 1; j <= m; j++){\r\n\t\tfor(register int i = 1; i <= n; i++){\r\n\t\t\tregister bool op = map[j][i];\r\n\t\t\tif(op == 1){\r\n\t\t\t\tadd(j, i + m, inf);\r\n\t\t\t\tadd(i + m, j, 0);\r\n\t\t\t}\r\n\t\t\telse continue;\r\n\t\t}\r\n\t}\r\n\tregister long long tmp = dinic();\r\n\tregister bool flag = 1;\r\n\tif(tmp >= sum) flag = 1;\r\n\telse flag = 0;\r\n\tfor(register int j = 1; j <= m; j++)\r\n\t\tb[j] /= x;\r\n\treturn flag;\r\n}\r\n\r\nsigned main(){\r\n\tn = read(), m = read();\r\n\ts = 0, t = n + m + 1;\r\n\tfor(register int i = 1; i <= n; i++) a[i] = read() * 10000, sum += a[i];\r\n\tfor(register int j = 1; j <= m; j++) b[j] = read();\r\n\tfor(register int j = 1; j <= m; j++)\r\n\t\tfor(register int i = 1; i <= n; i++)\r\n\t\t\tmap[j][i] = read();\r\n\tregister long long l = 0, r = 1e9;\r\n\twhile(l <= r){\r\n\t\tregister long long mid = l + r >> 1;\r\n\t\tif(check(mid)) r = mid - 1;\r\n\t\telse l = mid + 1;\r\n\t}\r\n\tprintf(\"%.6lf\\n\", (double)l / 10000);\r\n\treturn 0;\r\n}\r\n```",
        "postTime": 1605166203,
        "uid": 154412,
        "name": "Gary818",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3324 \u3010[SDOI2015]\u661f\u9645\u6218\u4e89\u3011"
    },
    {
        "content": "\u4e00\u9053\u7f51\u7edc\u6d41\u7684\u9898\u76ee\uff0c\u5efa\u56fe\u975e\u5e38\u660e\u663e\uff0c\u4eceS\u5f80\u6fc0\u5149\u8fde\u4e00\u6761\u8fb9\u6743\u4e3ainf\u7684\u8fb9\uff0c\u6fc0\u5149\u5f80\u673a\u5668\u4eba\u8fde\u8fb9\u6743\u4e3ainf\u7684\u8fb9\uff0c\u673a\u5668\u4eba\u5f80T\u8fde\u8fb9\u6743\u4e3abi\u7684\u8fb9\u3002\n\n\u4f46\u662f\u8fd9\u9053\u9898\u7684\u8981\u6c42\u662f\u7b97\u6700\u5c0f\u65f6\u95f4\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u6fc0\u5149\u6b66\u5668\uff0c\u4eceS\u5230\u6fc0\u5149\u6b66\u5668\u7684\u8fb9\u4e2d\u7684\u6d41\u91cf\u5c31\u662f\u8fd9\u4e2a\u6fc0\u5149\u6b66\u5668\u7684\u8f93\u51fa\uff0c\u65f6\u95f4\u5c31\u662f\u6d41\u91cf/ai\u3002\n\n\u4e8e\u662f\u8fd9\u9053\u9898\u8f6c\u5316\u6210\u4e86\u7ed9\u4e00\u4e2a\u7f51\u7edc\u6d41\u56fe\uff0c\u5bf9\u4e8e\u6307\u5b9a\u7684\u8fb9\uff0c\u8981\u6c42\u5728\u6700\u5927\u6d41\u7684\u60c5\u51b5\u4e0b\u8fd9\u4e9b\u8fb9\u4e2d\u7684\u6700\u5927\u6d41\u91cf\u4e0e\u4e00\u4e2a\u5b9a\u503c\u7684\u6bd4\u6700\u5c0f\u3002\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u8fd9\u4e2a\u6bd4\u503c\uff0c\u5148\u4eceS\u5f80\u6fc0\u5149\u8fdeinf\u7684\u8fb9\uff0c\u7136\u540e\u6c42\u6700\u5927\u6d41\uff0c\u7136\u540e\u5f00\u59cb\u4e8c\u5206\u6bd4\u503ct\uff0cS\u5230\u6fc0\u5149\u7684\u8fb9\u7684\u6d41\u91cf\u53d8\u4e3at\\*ai\uff0c\u7136\u540e\u6700\u5927\u6d41\u68c0\u6d4b\u662f\u5426\u5408\u6cd5\u3002\n\n\u8fd9\u9053\u9898\u7cbe\u5ea6\u8981\u6c42\u662f1e-3,\u53ef\u4ee5\u4e0d\u7528double2\u5206\uff0c\u628a\u6240\u6709\u7684\u6d41\u91cf\u5168\u90e8\u4e581000\uff0c\u4e8c\u5206\u5230\u6574\u6570\u5373\u53ef\u3002\n\n\u4e8c\u5206\u7684\u601d\u8def\u6765\u81eaSDOI2013\u8d39\u7528\u6d41\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<queue>\n#include<cstring>\nusing namespace std;\nconst int inf=1e9+7;\nconst long long longinf=1ll<<60;\n#define min(a,b) a<b?a:b\nint head[205],nxt[200005],point[200005],sum;\nlong long remain[200005];\nint deep[205],nowedge[205];\nqueue<int>q;\nint n,m,a[205],b[205],attack[205][205];\nlong long maxans,l,r,mid;\nvoid add(int x,int y,long long flow)\n{\n    ++sum;nxt[sum]=head[x];head[x]=sum;point[sum]=y;remain[sum]=flow;\n    ++sum;nxt[sum]=head[y];head[y]=sum;point[sum]=x;remain[sum]=0;\n}\nint bfs(int s,int t)\n{\n    memset(deep,127,sizeof(deep));\n    for(int i=0;i<=n+m+1;i++)\n    nowedge[i]=head[i];\n    deep[s]=0;\n    q.push(s);\n    while(!q.empty())\n    {\n        int now=q.front();q.pop();\n        for(int tmp=head[now];tmp!=-1;tmp=nxt[tmp])\n        {\n            int u=point[tmp];\n            if(deep[u]>deep[now]+1&&remain[tmp])\n            {\n                deep[u]=deep[now]+1;\n                q.push(u);\n            }\n        }\n    }\n    return deep[t]<inf;\n}\nlong long dfs(int x,int t,long long limit)\n{\n    if(x==t||!limit) return limit;\n    long long flow=0,f;\n    for(int tmp=nowedge[x];tmp!=-1;tmp=nxt[tmp])\n    {\n        nowedge[x]=tmp;\n        int u=point[tmp];\n        if(deep[u]==deep[x]+1&&(f=dfs(u,t,min(remain[tmp],limit))))\n        {\n            flow+=f;\n            remain[tmp]-=f;\n            remain[tmp^1]+=f;\n            limit-=f;\n        }\n    }\n    return flow;\n}\nlong long dinic(int s,int t)\n{\n    long long ans=0;\n    while(bfs(s,t))\n    ans+=dfs(s,t,longinf);\n    return ans; \n}\nint check(long long x)\n{\n    memset(nxt,-1,sizeof(nxt));\n    memset(head,-1,sizeof(head));\n    sum=-1;\n    for(int i=1;i<=n;i++)\n    add(i+m,m+n+1,a[i]*10000);\n    for(int i=1;i<=m;i++)\n    {\n        add(0,i,b[i]*x);\n        for(int j=1;j<=n;j++)\n        if(attack[i][j])\n        add(i,j+m,longinf);\n    }\n    long long checkans=dinic(0,m+n+1);\n    return checkans==maxans;\n}\nint main()\n{\n    memset(nxt,-1,sizeof(nxt));\n    memset(head,-1,sizeof(head));\n    sum=-1;\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n    scanf(\"%d\",&a[i]),add(i+m,m+n+1,a[i]*10000);\n    for(int i=1;i<=m;i++)\n    scanf(\"%d\",&b[i]),add(0,i,longinf);    \n    for(int i=1;i<=m;i++)\n    for(int j=1;j<=n;j++)\n    {\n        scanf(\"%d\",&attack[i][j]);\n        if(attack[i][j])\n        add(i,j+m,longinf);    \n    }\n    maxans=dinic(0,n+m+1);\n    int l=1,r=1000000000;\n    while(l<=r)\n    {\n        mid=(l+r)>>1;\n        if(check(mid))\n        r=mid-1;\n        else\n        l=mid+1;\n    }\n    printf(\"%.4lf\",(r+1)*1.0/10000);\n}\n```",
        "postTime": 1490838027,
        "uid": 17828,
        "name": "revenger",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3324 \u3010[SDOI2015]\u661f\u9645\u6218\u4e89\u3011"
    },
    {
        "content": "> ### \u6d1b\u8c37 P3324\n\n\u6211\u4eec\u53ef\u4ee5\u4e8c\u5206\u7b54\u6848\u3002\u7531\u4e8e\u7cbe\u5ea6\u53ea\u6709 $10^{-3}$\uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u53d6\u540c\u6b65\u6269\u5927 $10000$ \u500d\uff0c\u7136\u540e\u5c06\u7b54\u6848\u9664\u4ee5 $10000$ \u7684\u65b9\u5f0f\u3002\uff08\u4e0d\u8fc7\u5728\u5b9e\u6570\u57df\u4e0a\u4e8c\u5206\u4e5f\u6ca1\u6709\u95ee\u9898\uff09\n\n\u6211\u4eec\u4e8c\u5206\u51fa\u4e00\u4e2a $x$\uff0c\u90a3\u4e48\u4e00\u53f0\u53d1\u5c04\u5668\u5728\u89c4\u5b9a\u65f6\u95f4\u5185\u6240\u80fd\u8f93\u51fa\u7684\u653b\u51fb\u4e5f\u5c31\u786e\u5b9a\u4e86\u3002\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u6bcf\u4e00\u53f0\u53d1\u5c04\u5668 $i$\uff0c\u8fde\u4e00\u6761\u4ece\u6e90\u70b9\u5230\u8fd9\u4e2a\u53d1\u5c04\u5668\u7684\u8fb9\uff0c\u5bb9\u91cf\u4e3a\u8fd9\u53f0\u53d1\u5c04\u5668\u5728 $x$ \u7684\u65f6\u95f4\u5185\u80fd\u591f\u8f93\u51fa\u7684\u653b\u51fb\uff0c\u5373 $b_i \\times x$\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u673a\u5668\u4eba $j$\uff0c\u8fde\u4e00\u6761\u4ece\u8fd9\u4e2a\u673a\u5668\u4eba\u5230\u6c47\u70b9\uff0c\u6d41\u91cf\u4e3a $a_j$\uff0c\u4e2d\u95f4\u5bf9\u4e8e\u6bcf\u4e00\u53f0\u53d1\u5c04\u5668 $i$ \u548c\u6bcf\u4e00\u4e2a\u673a\u5668\u4eba $j$\uff0c\u5982\u679c $i$ \u53ef\u4ee5\u653b\u51fb\u5230 $j$\uff0c\u5c31\u5728 $i$ \u4e0e $j$ \u4e4b\u95f4\u8fde\u8fb9\uff0c\u5bb9\u91cf\u4e3a $\\infty$\u3002\u7136\u540e\u8dd1\u6700\u5927\u6d41\uff0c\u5982\u679c\u6700\u5927\u6d41 $= \\sum{a_i}$\uff0c\u90a3\u4e48\u8bf4\u660e\u5728 $x$ \u7684\u65f6\u95f4\u5185\u53ef\u4ee5\u6467\u6bc1\u6240\u6709\u7684\u673a\u5668\u4eba\u3002\u5426\u5219\u8bf4\u660e\u4e0d\u884c\u3002\n\n\u987a\u4fbf\u5410\u69fd\u4e00\u4e0b\uff0c\u8fd9\u4e2a\u51fa\u9898\u4eba\u6570\u636e\u9020\u5f97\u771f\u7684\u662f\u2026\u2026\u2026\u2026\u6211\u628a $n$ \u5199\u6210 $m$ \u90fd\u53ef\u4ee5\u62ff $90$ \u5206\u3002\n\n```cpp\n/*\n\u6570\u636e\u4e0d\u6e05\u7a7a\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u591a\u6d4b\u4e0d\u8bfb\u5b8c\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u8fb9\u754c\u4e0d\u7279\u5224\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u8d2a\u5fc3\u4e0d\u8bc1\u660e\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\nD P \u987a\u5e8f\u9519\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u5927\u5c0f\u5c11\u7b49\u53f7\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u53d8\u91cf\u4e0d\u7edf\u4e00\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u8d8a\u754c\u4e0d\u5224\u65ad\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u8c03\u8bd5\u4e0d\u6ce8\u91ca\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n\u6ea2\u51fa\u4e0d l l\uff0c\u7206\u96f6\u4e24\u884c\u6cea\u3002\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n#define fi\t\t\tfirst\n#define se\t\t\tsecond\n#define fz(i,a,b)\tfor(int i=a;i<=b;i++)\n#define fd(i,a,b)\tfor(int i=a;i>=b;i--)\n#define put(x)\t\tputchar(x)\n#define eoln        put('\\n')\n#define space\t\tput(' ')\n#define int long long\ninline int read(){\n\tint x=0,neg=1;char c=getchar();\n\twhile(!isdigit(c)){\n\t\tif(c=='-')\tneg=-1;\n\t\tc=getchar();\n\t}\n\twhile(isdigit(c))\tx=x*10+c-'0',c=getchar();\n\treturn x*neg;\n}\ninline void print(int x){\n\tif(x<0){\n\t\tputchar('-');\n\t\tprint(abs(x));\n\t\treturn;\n\t}\n\tif(x<=9)\tputchar(x+'0');\n\telse{\n\t\tprint(x/10);\n\t\tputchar(x%10+'0');\n\t}\n}\nint n=read(),m=read(),a[55],b[55],x[55][55],sum=0;\nint head[100005];\nstruct edge{\n\tint to,nxt,cap;\n} e[300005];\nint ecnt=1;\ninline void addedge(int u,int v,int f){\n\te[++ecnt].to=v;e[ecnt].cap=f;e[ecnt].nxt=head[u];head[u]=ecnt;\n}\nint dep[100005];\ninline bool bfs(int s,int t){\n\tqueue<int> q;\n\tmemset(dep,-1,sizeof(dep));\n\tq.push(s);dep[s]=0;\n\twhile(!q.empty()){\n\t\tint cur=q.front();q.pop();\n\t\tfor(int i=head[cur];i;i=e[i].nxt){\n\t\t\tint to=e[i].to;\n\t\t\tif(dep[to]==-1&&e[i].cap){\n\t\t\t\tdep[to]=dep[cur]+1;\n\t\t\t\tq.push(to);\n\t\t\t}\n\t\t}\n\t}\n\tif(dep[t]!=-1)\treturn 1;\n\treturn 0;\n}\ninline int dfs(int x,int t,int f){\n\tif(x==t)\treturn f;\n\tint ret=0;\n\tfor(int i=head[x];i;i=e[i].nxt){\n\t\tint y=e[i].to;\n\t\tif(dep[y]==dep[x]+1&&e[i].cap){\n\t\t\tint w=dfs(y,t,min(f-ret,e[i].cap));\n\t\t\te[i].cap-=w;\n\t\t\te[i^1].cap+=w;\n\t\t\tret+=w;\n\t\t\tif(ret==f)\treturn f;\n\t\t}\n\t}\n\treturn ret;\n}\ninline int Dinic(int s,int t){\n\tint tot=0;\n\twhile(bfs(s,t))\ttot+=dfs(s,t,0x3f3f3f3f3f3f3f3fll);\n\treturn tot;\n}\ninline bool check(int mid){\n\tecnt=1;memset(head,0,sizeof(head));\n\tfz(i,1,m){\n\t\taddedge(0,i,b[i]*mid);\n\t\taddedge(i,0,0);\n\t}\n\tfz(i,1,m){\n\t\tfz(j,1,n){\n\t\t\tif(x[i][j]){\n\t\t\t\taddedge(i,j+m,0x3f3f3f3f3f3f3f3fll);\n\t\t\t\taddedge(j+m,i,0);\n\t\t\t}\n\t\t}\n\t}\n\tfz(i,1,n){\n\t\taddedge(i+m,n+m+1,a[i]);\n\t\taddedge(n+m+1,i+m,0);\n\t}\n\treturn Dinic(0,n+m+1)==sum;\n}\nsigned main(){\n\tfz(i,1,n)\ta[i]=read(),a[i]*=1e4,sum+=a[i];\n\tfz(i,1,m)\tb[i]=read();\n\tfz(i,1,m)\tfz(j,1,n)\tx[i][j]=read();\n\tint l=1,r=1ll<<38,ans=0;\n\twhile(l<=r){\n\t\tint mid=(l+r)>>1;\n\t\tif(check(mid))\tr=mid-1,ans=mid;\n\t\telse\t\t\tl=mid+1;\n\t}\n\tprintf(\"%.5lf\\n\",ans/10000.0);\n\treturn 0;\n}\n```",
        "postTime": 1585363523,
        "uid": 123543,
        "name": "ET2006",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3324 \u3010[SDOI2015]\u661f\u9645\u6218\u4e89\u3011"
    },
    {
        "content": "\n------\nSOL\n=\n\n\n\u9996\u5148\u601d\u8003dp\uff0c\u53d1\u73b0\u4e00\u4e2a\u5408\u6cd5\u7684\u65b9\u6848\u9650\u5236\u592a\u591a\uff0c\u96be\u4ee5dp\u3002\n$n,m\\le50$\uff0c\u6709\u70b9\u7f51\u7edc\u6d41\u7684\u5473\u9053\n\n\u601d\u8003\u8d2a\u5fc3\uff0c\u5373\u5728\u76f8\u540c\u7684\u65f6\u95f4\u5185\uff0c\u8ba9\u6240\u6709\u673a\u5668\u4eba\u7684\u603b\u8f93\u51fa\u5c3d\u91cf\u5927\uff0c\u6784\u9020\u65b9\u6848\u53ef\u4ee5\u6700\u5927\u6d41\uff1b\n\n\u5efa\u56fe\uff1a\u673a\u5668\u4eba\u5411\u6c47\u70b9\u8fde\u5bb9\u91cf\u4e3a\u88c5\u7532\u503c\u7684\u8fb9\uff0c\u6e90\u70b9\u5411\u6fc0\u5149\u70ae\u8fde\u8fb9\uff0c\u6839\u636e\u6fc0\u5149\u70ae\u548c\u673a\u5668\u4eba\u7684\u653b\u51fb\u5173\u7cfb\u8fde\u5bb9\u91cf\u4e3ainf\u7684\u8fb9\u3002\n\u6e90\u70b9\u5411$i$\u6fc0\u5149\u70ae\u8fde\u8fb9\u5bb9\u91cf\u4e3a  $b_{i}*t$\uff0c\u4e8c\u5206$t$\uff0c\u5224\u65ad\u603b\u6d41\u91cf\u80fd\u5426\u8fbe\u5230 $\\sum_{i=1}^n A{i}$\uff1b\n\n\n------\nCODE\n=\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define sf scanf\n#define pf printf\n#define ll long long\n#define db double\n#define cs const\ncs int N=1e4+10,mov=50;\nll inf=1e18;\ncs db eps=1e-7,eps2=1e-4;\nint nxt[N],to[N],head[N],cnt=1,S,T,n,m,A;\nll w[N];\ninline void _add(int u,int v,ll ww){\n\tnxt[++cnt]=head[u];head[u]=cnt;to[cnt]=v;w[cnt]=ww;\n}\n//inline bool equal(cs db &a,cs db &b){\n//\treturn abs(a-b)<eps;\n//}\nnamespace dinic{\n\tint dep[N],cur[N];\n\tdb c[N];\n\tinline bool bfs(){\n\t\tfor(int i=S;i<=T;++i)dep[i]=-1;\n\t\tqueue<int> q;\n\t\tq.push(T);dep[T]=1;\n\t\twhile(!q.empty()){\n\t\t\tint u=q.front();q.pop();\n\t\t\tfor(int i=head[u];i;i=nxt[i]){\n\t\t\t\tif(c[i^1]<eps)continue;\n\t\t\t\tint v=to[i];\n\t\t\t\tif(v==S){\n\t\t\t\t\tdep[v]=dep[u]+1;\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif(dep[v]==-1){\n\t\t\t\t\tdep[v]=dep[u]+1;\n\t\t\t\t\tq.push(v);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\tinline db dfs(int u,db f){\n\t\t\n\t\tif(u==T)return f;\n\t\tif(f<eps)return 0;\n\t\tdb tot=0,now=0;\n\t\tfor(int &i=cur[u];i;i=nxt[i]){\n\t\t//\tcout<<to[i]<<' '<<f<<'\\n';\n\t\t\tif(c[i]<eps)continue;\n\t\t\tint v=to[i];\n\t\t\t\n\t\t\tif(dep[v]==dep[u]-1){\n\t\t\t\tnow=dfs(v,min(f-tot,c[i]));\n\t\t\t\tif(!now)continue;\n\t\t\t\ttot+=now;\n\t\t\t\tc[i]-=now;c[i^1]+=now;\n\t\t\t\tif(f-tot<eps)break;\n\t\t\t}\n\t\t}\n\t\treturn tot;\n\t}\n\tinline bool cflow(db t){\n\t\tdb ret=0;\n\t\tfor(int i=2;i<=cnt;++i)c[i]=1.0*w[i];\n\t\tfor(int i=head[S];i;i=nxt[i]){\n\t\t\tc[i]=t*w[i];\n\t\t}\n\t\twhile(bfs()){\n\t\t\tfor(int i=S;i<=T;++i)cur[i]=head[i];\n\t\t\tret+=dfs(S,inf);\n\t\t}\n\t\treturn A-ret<eps;\n\t}\t\n}\n\n\nsigned main(){\n\tsf(\"%d%d\",&n,&m);\n\tS=0;T=mov+n+1;\n\tfor(int i=1;i<=n;++i){\n\t\tint num;sf(\"%d\",&num);\n\t\t_add(i+mov,T,num);\n\t\t_add(T,i+mov,0);\n\t\tA+=num;\n\t}\n\tfor(int i=1;i<=m;++i){\n\t\tint num;\n\t\tsf(\"%d\",&num);\n\t\t_add(S,i,num);\n\t\t_add(i,S,0);\n\t}\n\tfor(int i=1;i<=m;++i){\n\t\tfor(int j=1;j<=n;++j){\n\t\t\tint f;sf(\"%d\",&f);\n\t\t\tif(f){\n\t\t\t\t_add(i,j+mov,inf);\n\t\t\t\t_add(j+mov,i,0);\n\t\t\t}\n\t\t}\n\t}\n\tdb l=0,r=5e6,mid;\n//\tcout<<dinic::cflow(1.3)<<'\\n';\n\twhile(l+eps2<r){\n\t\tmid=(l+r)/2.0;\n\t\tif(dinic::cflow(mid))r=mid;\n\t\telse l=mid;\n\t}\n\tpf(\"%.3lf\",l);\n\treturn 0;\n}\n```\n",
        "postTime": 1564965003,
        "uid": 117357,
        "name": "rhjoi",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3324 \u3010[SDOI2015]\u661f\u9645\u6218\u4e89\u3011"
    },
    {
        "content": "# \u5199\u5728\u524d\u9762\uff1a\n\u5982\u60f3\u83b7\u53d6\u66f4\u4f73\u9605\u8bfb\u6548\u679c\uff0c\u8bf7\u70b9\u51fb[\u8fd9\u91cc](https://blog.csdn.net/kkkksc03/article/details/89407388)\uff0c\u4efb\u4f55\u7591\u95ee\u6b22\u8fce\u79c1\u4fe1\u4f5c\u8005\uff01\n# \u9898\u76ee\u94fe\u63a5\uff1a\nhttps://www.luogu.org/problemnew/show/P3324\n# \u5206\u6790\uff1a\n\u56e0\u4e3a\u672c\u9898\u7684\u65f6\u95f4**\u70b9**\u8f83\u591a\uff0c\u4e0d\u80fd\u679a\u4e3e\uff0c\u4f46\u53d1\u73b0\u6709\u5355\u8c03\u6027\uff0c\u4e8e\u662f\u4e8c\u5206\u7b54\u6848\uff0c\u4e8c\u5206\u4f7f\u7528\u7684\u65f6\u95f4$T$\n\n\u6bcf\u4e2a\u653b\u51fb\u88c5\u7f6e\u9020\u6210\u7684\u4f24\u5bb3\u603b\u91cf\u5df2\u77e5\uff0c\u4e3a$T*B_i$\uff0c\u73b0\u5728\u6709\u4e86\u4f24\u5bb3\u603b\u91cf\u3001\u751f\u547d\u603b\u91cf\uff0c\u5982\u4f55\u5224\u65ad\u5728$T$\u65f6\u95f4\u5185\uff0c\u673a\u5668\u4eba\u662f\u5426\u88ab\u5168\u90e8\u6253\u6b7b\uff1f\n\n\u6e90\u70b9S\u5411\u6240\u6709\u653b\u51fb\u88c5\u7f6e\u8fde\u8fb9\uff0c\u6d41\u91cf\u4e3a$T*B_i$\n\n\u653b\u51fb\u88c5\u7f6e\u5411\u80fd\u653b\u51fb\u5230\u7684\u673a\u5668\u4eba\u8fde\u8fb9\uff0c\u6d41\u91cf\u4e3aINF\n\n\u6240\u6709\u673a\u5668\u4eba\u5411\u6c47\u70b9T\u8fde\u8fb9\uff0c\u6d41\u91cf\u4e3a$A_i$\n\n\u9a8c\u8bc1$T$\u65f6\u95f4\u6240\u6709\u673a\u5668\u4eba\u90fd\u80fd\u88ab\u6253\u6b7b **\u5f53\u4e14\u4ec5\u5f53** \u4e0a\u56fe\u7684\u6700\u5927\u6d41$= \\sum A_i$\uff08\u6240\u6709\u673a\u5668\u4eba\u751f\u547d\u503c\u4e4b\u548c\uff09\n# \u4ee3\u7801\uff1a\n\n```cpp\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#define maxn 110\n#define inf 0x7fffffffffffffffll\nusing namespace std;\nint n,m,s,t,d[maxn];\nlong long sum,ans,Sum_A;\nlong long a[maxn];\nlong long b[maxn];\nint mp[maxn][maxn];\nstruct edge\n{\n    int to,rev;\n    long long val;\n    edge (int _to,long long _val,int _rev)\n    {\n        to=_to;\n        val=_val;\n        rev=_rev;\n    }\n};\nvector<edge> e[maxn];\nvoid add(int x,int y,long long val)\n{\n    e[x].push_back(edge(y,val,e[y].size()));\n    e[y].push_back(edge(x,0,e[x].size()-1));\n}\nbool bfs()\n{\n    memset(d, -1, sizeof(d));\n    queue<int> q;\n    q.push(s);\n    d[s]=0;\n    while(!q.empty())\n    {\n        int x=q.front();\n        q.pop();\n        for(int i=0;i<e[x].size();i++)\n        {\n            int y=e[x][i].to;\n            if(d[y]==-1 && e[x][i].val)\n            {\n                q.push(y);\n                d[y]=d[x]+1;\n            }\n        }\n    }\n    if(d[t]==-1)\n        return 0;\n    else\n        return 1;\n}\nlong long dfs(int x,long long low) \n{\n    if(x==t||low==0)\n        return low;\n    long long totflow=0;\n    for(int i=0;i<e[x].size();i++)\n    {\n        int y=e[x][i].to;\n        int rev=e[x][i].rev;\n        if(d[y]==d[x]+1&&e[x][i].val) \n        {\n            long long a=dfs(y,min(low,e[x][i].val)); \n            e[x][i].val-=a;\n            e[y][rev].val+=a;\n            low-=a;\n            totflow+=a;\n            if(low==0) \n                return totflow;\n        }\n    }\n    if(low!=0) \n        d[x]=-1;\n    return totflow;\n}\nbool pd(long long Time)\n{\n    for(int i=0;i<maxn;i++)\n        e[i].clear();\n    sum=ans=0;\n    s=0,t=n+m+1;\n    for(int i=1;i<=m;i++)\n        add(s,i,Time*b[i]);\n    for(int i=1;i<=m;i++)\n        for(int j=1;j<=n;j++)\n            if(mp[i][j])\n                add(i,j+m,inf);\n    for(int j=1;j<=n;j++)\n        add(j+m,t,a[j]*10000);\n    while(bfs())\n    {\n    \tans+=dfs(s,inf);\n    }\n    if(ans==Sum_A*10000)\n        return 1;\n    else\n        return 0;\n}\n\nint main()\n{\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%lld\",&a[i]);\n        Sum_A+=a[i];\n    }\n    for(int i=1;i<=m;i++)\n        scanf(\"%lld\",&b[i]);\n    for(int i=1;i<=m;i++)\n        for(int j=1;j<=n;j++)\n            scanf(\"%d\",&mp[i][j]);\n    long long l=0,r=10000000000000ll;\n    long long an=l;\n    while(l<=r)\n    {\n        long long mid=(l+r)/2;\n        if(pd(mid))\n        {\n            an=mid;\n            r=mid-1;\n        }\n        else\n            l=mid+1;\n    }\n    printf(\"%.6lf\\n\",(double)an/(double)10000.0);\n    return 0;\n}\n```\n\n",
        "postTime": 1555676118,
        "uid": 45475,
        "name": "ShineEternal",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3324 \u3010[SDOI2015]\u661f\u9645\u6218\u4e89\u3011"
    },
    {
        "content": "\u6700\u5927\u6d41+\u4e8c\u5206\u7b54\u6848\u3002\n\n\u9996\u5148\u4e8c\u5206\u7b54\u6848time\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2atime\u503c\uff0c\u5efa\u7acb\u6e90\u70b9S\u548c\u6c47\u70b9T\uff0c\u7531\u6e90\u70b9S\u5411\u6bcf\u4e2a\u6fc0\u5149\u6b66\u5668\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3atime\\*b[i]\u7684\u8fb9\uff0c\u7531\u6bcf\u4e2a\u5de8\u578b\u673a\u5668\u4eba\u5411\u6c47\u70b9\u8fde\u4e00\u6761\u5bb9\u91cfa[i]\u7684\u8fb9\uff0c\u7531\u6bcf\u4e2a\u6fc0\u5149\u6b66\u5668\u5411\u5176\u6240\u6709\u53ef\u653b\u51fb\u7684\u5de8\u578b\u673a\u5668\u4eba\u8fde\u4e00\u6761\u5bb9\u91cf\u4e3aINF\u7684\u8fb9\u3002\u8dd1\u4e00\u904d\u6700\u5927\u6d41\uff0c\u5224\u65adS->T\u7684\u6700\u5927\u6d41\u662f\u5426\u5927\u4e8e\u7b49\u4e8e\u2211a[i]\u3002\n\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nconst double eps = 1e-9, INF = 1e12;\nconst int M = 55, N = 2e5 + 5;\nint n, m, a[M], b[M], ecnt = 1, nxt[N], adj[N], go[N], lev[N],\nlen, que[N], cur[N], S, T, g[M][M], sm; double cap[N], Cap[N];\nvoid add_edge(int u, int v, double w) {\n    nxt[++ecnt] = adj[u]; adj[u] = ecnt;\n    go[ecnt] = v; cap[ecnt] = w;\n    nxt[++ecnt] = adj[v]; adj[v] = ecnt;\n    go[ecnt] = u; cap[ecnt] = 0;\n}\nbool bfs() {\n    int i; for (i = S; i <= T; i++) lev[i] = -1, cur[i] = adj[i];\n    que[len = 1] = S; lev[S] = 0;\n    for (i = 1; i <= len; i++) {\n        int u = que[i];\n        for (int e = adj[u], v; e; e = nxt[e])\n            if (cap[e] > eps && lev[v = go[e]] == -1) {\n                que[++len] = v; lev[v] = lev[u] + 1;\n                if (v == T) return 1;\n            }\n    }\n    return 0;\n}\ndouble dinic(int u, double flow) {\n    if (u == T) return flow;\n    double res = 0, d = 0;\n    for (int &e = cur[u], v; e; e = nxt[e])\n        if (cap[e] > eps && lev[u] < lev[v = go[e]]) {\n            d = dinic(v, min(cap[e], flow - res));\n            if (d > eps) {\n                cap[e] -= d; cap[e ^ 1] += d;\n                res += d; if (fabs(flow - res) <= eps)\n                    break;\n            }\n        }\n    if (fabs(flow - res) > eps) lev[u] = -1;\n    return res;\n}\ndouble solve() {\n    double ans = 0;\n    while (bfs()) ans += dinic(S, INF);\n    return ans;\n}\nvoid build(double tm) {\n    int i; for (i = 2; i <= ecnt; i++)\n        cap[i] = Cap[i];\n    for (i = 2; i <= (m << 1) + 1; i += 2)\n        cap[i] = tm * b[i >> 1];\n}\ndouble SOLVE() {\n    double l = 0, r = 1e9, mid = (l + r) / 2;\n    while (r - l >= eps) {\n        build(mid);\n        if (1.0 * sm - solve() < eps) r = mid;\n        else l = mid;\n        mid = (l + r) / 2;\n    }\n    return mid;\n}\ninline int read() {\n    int res = 0; bool bo = 0; char c;\n    while (((c = getchar()) < '0' || c > '9') && c != '-');\n    if (c == '-') bo = 1; else res = c - 48;\n    while ((c = getchar()) >= '0' && c <= '9')\n        res = (res << 3) + (res << 1) + (c - 48);\n    return bo ? ~res + 1 : res;\n}\nint main() {\n    int i, j; n = read(); m = read();\n    for (i = 1; i <= n; i++) a[i] = read(), sm += a[i];\n    for (i = 1; i <= m; i++) b[i] = read();\n    for (i = 1; i <= m; i++) for (j = 1; j <= n; j++)\n        g[i][j] = read(); S = 1; T = n + m + 2;\n    for (i = 2; i <= m + 1; i++) add_edge(S, i, 0);\n    for (i = m + 2; i < T; i++) add_edge(i, T, 1.0 * a[i - m - 1]);\n    for (i = 2; i <= m + 1; i++) for (j = m + 2; j < T; j++)\n        if (g[i - 1][j - m - 1]) add_edge(i, j, INF);\n    for (i = 2; i <= ecnt; i++) Cap[i] = cap[i];\n    printf(\"%.6lf\\n\", SOLVE());\n    return 0;\n}\n```",
        "postTime": 1500452701,
        "uid": 29936,
        "name": "xyz32768",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3324 \u3010[SDOI2015]\u661f\u9645\u6218\u4e89\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\u4e8c\u5206+\u6700\u5927\u6d41\n\n\n\u6784\u56fe\uff1as->(s,i,\u5a01\u529bq[i]\\*nt)->\u6fc0\u5149\u6b66\u5668i->(i,j+n,inf)->\u5de8\u578b\u673a\u5668\u4ebaj->(j+n,t,\u8010\u4e45z[i])->t\n\n\n\u5982\u679c\u6700\u5927\u6d41tw\u4e0e\u5de8\u578b\u673a\u5668\u4eba\u603b\u8010\u4e45tot\u7684\u5dee\u7684\u7edd\u5bf9\u503c\u4e0d\u5927\u4e8e\u8bef\u5deeerror\uff0c\u7f29\u5c0f\u4e0a\u754c\uff1b\n\n\n\u53cd\u4e4b\uff0c\u7f29\u5c0f\u4e0b\u754c\u3002\n\n\n\u4ee3\u7801\u5b9e\u73b0\uff1a\n\n```cpp\n 1 #include<cstdio>\n 2 #include<cstring>\n 3 const int maxn=300;\n 4 const int maxm=50000;\n 5 const double inf=1e6;\n 6 const double error=0.001;\n 7 int n,m,s,t;\n 8 double tw,tot;\n 9 int a,b,c;\n10 double q[maxn],z[maxn];\n11 bool map[maxn][maxn];\n12 double l,r,mid;\n13 inline double min_(double x,double y){return x<y?x:y;}\n14 int h[maxn],hs;\n15 struct edge{int s,n;double w;}e[maxm];\n16 void add(int x,int y,double z){\n17     e[++hs]=(edge){y,h[x],z},h[x]=hs;\n18     e[++hs]=(edge){x,h[y]},h[y]=hs;\n19 }\n20 int d[maxn],que[maxn],head,tail;\n21 void bfs(){\n22     memset(d,0,sizeof(d));\n23     head=tail=0;\n24     que[head++]=s,d[s]=1;\n25     while(head>tail){\n26         a=que[tail++];\n27         for(int i=h[a];i;i=e[i].n)\n28         if(!d[e[i].s]&&e[i].w){\n29             d[e[i].s]=d[a]+1;\n30             if(e[i].s==t) return;\n31             que[head++]=e[i].s;\n32         }\n33     }\n34 }\n35 double ap(int k,double w){\n36     if(k==t) return w;\n37     double uw=w;\n38     for(int i=h[k];uw&&i;i=e[i].n)\n39     if(d[e[i].s]==d[k]+1&&e[i].w){\n40         double nw=ap(e[i].s,min_(uw,e[i].w));\n41         if(nw) e[i].w-=nw,e[i^1].w+=nw,uw-=nw;\n42         else d[e[i].s]=0;\n43     }\n44     return w-uw;\n45 }\n46 void Dinic(){while(bfs(),d[t]) tw+=ap(s,inf);}\n47 int main(){\n48     scanf(\"%d%d\",&n,&m);\n49     s=0,t=n+m+1,l=0,r=50000.0;\n50     for(int i=1;i<=n;i++) scanf(\"%lf\",&z[i]),tot+=z[i];\n51     for(int i=1;i<=m;i++) scanf(\"%lf\",&q[i]);\n52     for(int i=1;i<=m;i++)\n53     for(int j=1;j<=n;j++)\n54     scanf(\"%d\",&map[i][j]);\n55     while(r-l>error){\n56         mid=(l+r)/2,tw=0;\n57         memset(h,0,sizeof(h)),hs=1;\n58         for(int i=1;i<=n;i++) add(i+n,t,z[i]);\n59         for(int i=1;i<=m;i++) add(s,i,q[i]*mid);\n60         for(int i=1;i<=m;i++) for(int j=1;j<=n;j++) if(map[i][j]) add(i,j+n,inf);\n61         Dinic();\n62         if(tot-tw<error) r=mid;\n63         else l=mid;\n64     }\n65     printf(\"%.6lf\\n\",r);\n66     return 0;\n67 }\n```",
        "postTime": 1490744800,
        "uid": 21020,
        "name": "Long\u00b7J\u00b7William",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3324 \u3010[SDOI2015]\u661f\u9645\u6218\u4e89\u3011"
    },
    {
        "content": "\u5206\u6790:\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u7b54\u6848\u662f\u53ef\u4ee5\u8fdb\u884c\u4e8c\u5206\u7684\u3002\n\n\u90a3\u4e48\u800c\u5206\u5230\u4e00\u4e2a\u7b54\u6848m\u65f6\u5982\u4f55\u5224\u65ad\u5176\u662f\u5426\u53ef\u884c\u5462\uff1f\n\n\u6211\u4eec\u53d1\u73b0\u673a\u5668\u4eba\u7684\u6301\u7eed\u8f93\u51fa\u8ddf\u6c34\u6d41\u5f88\u50cf\uff0c\u6211\u4eec\u53ef\u4ee5\u5efa\u7acb\u7f51\u7edc\u6d41\u6a21\u578b\u6765\u5224\u65ad\u3002\n\n\u9996\u5148\u5efa\u7acbS\u548cT\uff0c\u6bcf\u4e2a\u6fc0\u5149\u6b66\u5668\u5411\u5b83\u53ef\u4ee5\u653b\u51fb\u7684\u673a\u5668\u4eba\u8fde\u5bb9\u91cf\u65e0\u9650\u5927\u7684\u8fb9\u3002\n\n\u6bcf\u4e2a\u673a\u5668\u4eba\u5411T\u8fde\u5bb9\u91cf\u4e3aAi\u7684\u8fb9\uff0cS\u5411\u6bcf\u4e2a\u6fc0\u5149\u6b66\u5668\u8fde\u5bb9\u91cf\u4e3aBi*m\u7684\u8fb9\u3002\n\n\u8dd1\u4e00\u904d\u6700\u5927\u6d41\uff0c\u770b\u770b\u8fde\u5411T\u7684\u8fb9\u7684\u6b8b\u4f59\u5bb9\u91cf\u662f\u5426\u90fd\u4e3a\u96f6\u3002\n\n\u82e5\u662f\uff0c\u5219\u4ee3\u8868m\u53ef\u884c\uff0c\u5426\u5219\u4ee3\u8868\u4e0d\u53ef\u884c\u3002\n\n\n\u4ee3\u7801\uff1a\n\n```\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n\nusing namespace std;\n\nconst int inf=1e9;\n\nint n,m,S,T,a[51],b[51],d[201],f[201],e[201],cur[201];\nint to[10001],next[10001],first[201],now,e1;\ndouble w[10001],w1[10001],mi=inf;\n\nvoid insert(int o,int p,int q)\n{\n    to[e1]=p;w1[e1]=q;next[e1]=first[o];first[o]=e1++;\n    to[e1]=o;w1[e1]=0;next[e1]=first[p];first[p]=e1++;\n}\n\nbool check(double o)\n{\n    for(int i=0;i<=1e4;i++) w[i]=w1[i];\n    for(int i=first[S];i!=-1;i=next[i]) w[i]=o*b[to[i]];\n    memset(d,0,sizeof(d));\n    memset(f,0,sizeof(f));\n    memset(e,-1,sizeof(e));\n    for(int i=0;i<=T;i++) cur[i]=first[i];\n    e[S]=now=S;f[0]=T;\n    while(d[S]<T)\n    {\n        bool bo=false;\n        for(int &i=cur[now];i!=-1;i=next[i])\n            if((w[i]>0)&&(d[now]==(d[to[i]]+1)))\n            {\n                mi=min(mi,w[i]);\n                e[to[i]]=now;\n                now=to[i];\n                bo=true;\n                if(now==T)\n                {\n                    while(now!=S)\n                    {\n                        w[cur[e[now]]]-=mi;\n                        w[cur[e[now]]^1]+=mi;\n                        now=e[now];\n                    }\n                    mi=inf;\n                }\n                break;\n            }\n        if(bo) continue;int mmi=T;\n        for(int i=first[now];i!=-1;i=next[i])\n            if((w[i]>0)&&(mmi>d[to[i]])){mmi=d[to[i]];cur[now]=i;}\n        if(!(--f[d[now]])) break;\n        f[d[now]=(mmi+1)]++;\n        now=e[now];\n    }\n    bool bo=true;\n    for(int i=first[T];i!=-1;i=next[i])\n        if(w[i^1]!=0) return false;\n    return true;\n}\n\nint main()\n{\n    memset(first,-1,sizeof(first));\n    scanf(\"%d%d\",&n,&m);\n    S=n+m+1;T=S+1;\n    for(int i=1;i<=n;i++) \n    {\n        scanf(\"%d\",&a[i]);\n        insert(m+i,T,a[i]);\n    }\n    for(int i=1;i<=m;i++) \n    {\n        scanf(\"%d\",&b[i]);\n        insert(S,i,0);\n    }\n    for(int i=1;i<=m;i++)\n        for(int j=1;j<=n;j++)\n        {\n            int x;\n            scanf(\"%d\",&x);\n            if(x) insert(i,m+j,inf);\n        }\n    double l=0,r=inf,mid;\n    while(abs(r-l)>1e-4)\n    {\n        mid=(l+r)/2;\n        if(check(mid)) r=mid;else l=mid;\n    }\n    printf(\"%.4lf\\n\",l);\n    return 0;\n}\n```",
        "postTime": 1527644796,
        "uid": 79044,
        "name": "\u7834\u58c1\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3324 \u3010[SDOI2015]\u661f\u9645\u6218\u4e89\u3011"
    }
]