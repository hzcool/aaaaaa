[
    {
        "content": "\u662f\u4e00\u4e2a\u7701\u9009\u7b97\u6cd5\u5f3a\u884c\u4e09\u5408\u4e00\u7684\u9898\uff1f\n\nProblem 1\uff1a\n\n\u663e\u7136\u5bf9\u68cb\u76d8\u9ed1\u767d\u67d3\u8272\u4e4b\u540e\u6c42\u4e00\u4e2a\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u5373\u53ef\u3002\n\n$O((nm)^{1.5})$\n\nProblem 2\uff1a\n\n\u6ce8\u610f\u5230\u9898\u76ee\u6761\u4ef6\u6709 $n,m=2^t,K=1$ \u90a3\u4e48\u8fd9\u4e2a\u4e1c\u897f\u80af\u5b9a\u662f\u53ef\u4ee5\u5c3d\u53ef\u80fd\u88c5\u6ee1\u7684\uff0c\u6545\u7b54\u6848\u662f $\\lfloor {nm-1\\over 3} \\rfloor$ \uff0c\u4f46\u662f\u7531\u4e8e $n,m$ \u5de8\u5927\uff0c\u8fd9\u91cc\u8981\u7528 NTT \u7b97\u4e00\u4e0b\u9ad8\u7cbe\u5ea6\u4e58\u6cd5\u3002\u3002\u3002\n\n$O(\\log n\\log \\log n)$\n\nProblem 3\uff1a\n\n$n,m\\le 11$ \u90a3\u4e48\u76f4\u63a5\u63d2\u5934 dp \u5373\u53ef\uff0c\u5177\u4f53\u5b9e\u73b0\u7684\u65f6\u5019\u53ef\u4ee5\u72b6\u538b\u8f6e\u5ed3\u7ebf\u7136\u540e\u679a\u4e3e\u683c\u5b50\u8f6c\u79fb\uff0c\u6839\u636e\u9aa8\u724c\u7684\u7279\u70b9\uff0c\u9700\u8981\u8bb0\u5f55\u4e24\u884c\u8f6e\u5ed3\u7ebf\u3002\n\n$O(nm2^{2n})$",
        "postTime": 1587177149,
        "uid": 13052,
        "name": "iostream",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P6407 \u3010[SDOI2012] \u68cb\u76d8\u8986\u76d6\u3011"
    },
    {
        "content": "\u697c\u4e0a\u795e\u4ed9\u6ca1\u6709\u7ed9\u4ee3\u7801\uff0c\u8fd9\u91cc\u7ed9\u4e00\u4e0b\uff0c\u987a\u4fbf\u8be6\u7ec6\u8bb2\u4e00\u4e0b\u7b2c\u4e09\u90e8\u5206\u3002\n\n~~\u63d2\u5934dp\u4e2a\u9524\u5b50~~\n\n\u8bbe\u72b6\u6001$f[i][S1][S2]$\uff0c$S1$\u4ee3\u8868\u7b2c$i-1$\u884c\u7684\u72b6\u6001\uff0c$S2$\u4ee3\u8868\u7b2c$i$\u884c\u7684\u72b6\u6001\uff081\u4ee3\u8868\u4e0d\u80fd\u653e\uff09\u3002**\u5728\u8f6c\u79fb\u7684\u65f6\u5019\u8981\u5f3a\u5236\u8ba9\u4fc4\u7f57\u65af\u65b9\u5757\u7684\u81f3\u5c11\u4e00\u4f4d\u653e\u5728\u7b2c$i$\u884c**\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u53d1\u73b0\u4e00\u4e2a\u6027\u8d28\uff1a\u5982\u679c\u6709\u4e00\u4e2a\u4f4d\u7f6e$(i-1,j)$\u5b83\u53ef\u4ee5\u653e\uff0c\u800c$(i,j)$\u4e0d\u80fd\u653e\uff0c\u90a3$(i-1,j)$\u662f\u4e2a**\u5e9f\u7269**\u3002\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u53d1\u73b0\uff1a\u5982\u679c$f[i]$\u4e00\u4e0b\u6240\u6709\u72b6\u6001\u90fd\u786e\u5b9a\u4e86\uff08\u5c31\u662f$f[i]$\u7b97\u5b8c\u4e86\uff09\uff0c\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5**\u53ea**\u4fdd\u7559\u90a3\u4e9b$S1$\u5305\u542b$S2$\u7684\u72b6\u6001\u3002\u72b6\u6001\u6570\u51cf\u5c11\u5230$3^m$\u4e2a\u3002\n\n\u8f6c\u79fb\u90e8\u52061\uff1a$f[i][S1][S2]$->$f[i+1][S3][S4]$\u3002\n\n\u56e0\u4e3a\u6240\u6709\u90a3\u79cd\u62d0\u5f2f\u7684\u4fc4\u7f57\u65af\u65b9\u5757\u6446\u653e\u53ea\u653e\u5728$i$\u548c$i+1$\u4e2d\uff0c\u6240\u4ee5\u8003\u8651\u4ece$i$\u5230$i+1$\u7684\u8f6c\u79fb\u53ea\u9700\u8981\u8003\u8651**\u7ad6\u653e\u7740\u65b9\u5757**\u3002\u8fd9\u6837\u6211\u4eec\u53ea\u7528\u679a\u4e3e$S1|S2$\u7684**\u8865\u96c6**\u7684**\u5b50\u96c6**\uff0c\u7136\u540e\u653e\u8fdb\u53bb\u5728\u5224\u5b9a\u4e00\u4e0b\u8fd9\u4e9b\u65b9\u5757\u5728$i+1$\u662f\u5426\u5408\u6cd5\u3002\u6ce8\u610f\uff0c\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662f$4^m$\u7684\uff0c\u610f\u4f1a\u5373\u53ef\uff08\u9003\uff09\u3002\n\n\u8f6c\u79fb\u90e8\u52062\uff1a$f[i+1][S1][S2]$->$f[i+1][S3][S4]$\u3002\n\n\u8fd9\u90e8\u5206\u5176\u5b9e\u53ef\u4ee5\u81ea\u5df1\u60f3\uff0c\u5c31\u662f\u6bcf\u6b21\u66b4\u529b\u5730\u5f80$f[i+1][S1][S2]$\u91cc\u653e\u4e00\u4e2a\u4fc4\u7f57\u65af\u65b9\u5757\uff0c\u7136\u540e\u8f6c\u79fb\u3002\u867d\u7136\u590d\u6742\u5ea6\u662f$O(n \\times 4^m \\times m)$\u7684\uff0c\u4f46\u662f\u5408\u6cd5\u7684$f[i+1][S1][S2]$\u4e0d\u662f\u6ee1\u7684\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u8dd1\u4e0d\u6ee1\uff0c\u53ef\u4ee5\u8fc7\u3002\n\nwarning\uff1a\u4ee3\u7801\u6709\u4e00\u70b9\u957f\u3002\n\n```cpp\n//#define _GLIBCXX_DEBUG\n#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\nstring s;\nstringstream ss;\nnamespace solveA{\n\tconst int N = 10005, M = 1e6+5, inf = 0x3f3f3f3f;\n\tint n, m, _q, k, s, t;\n\tint de[N], cur[N];\n\tint val[M];\n\tbool vis[105][105];\n\tvector<pair<int, int> > e[N];\n\tqueue<int> q;\n\tint getid(int x, int y){\n\t\treturn (x-1)*m+y;\n\t}\n\tvoid addedge(int u, int v, int w){\n\t\te[u].push_back({v, ++k});\n\t\te[v].push_back({u, ++k});\n\t\tval[k-1] = w;\n\t}\n\tbool bfs(){\n\t\tmemset(cur, 0, sizeof(cur));\n\t\tmemset(de, 0, sizeof(de));\n\t\tde[s] = 1;\n\t\tq.push(s);\n\t\twhile (!q.empty()){\n\t\t\tint u = q.front();\n\t\t\tq.pop();\n\t\t\tfor (int i = 0; i < e[u].size(); i++){\n\t\t\t\tint v = e[u][i].first, id = e[u][i].second;\n\t\t\t\tif (val[id] && !de[v]){\n\t\t\t\t\tde[v] = de[u]+1;\n\t\t\t\t\tq.push(v);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn de[t]>0;\n\t}\n\tint dfs(int u, int in){\n\t\tif (u == t) return in;\n\t\tint out = 0;\n\t\tfor (int i = cur[u]; i < e[u].size(); i++){\n\t\t\tcur[u] = i;\n\t\t\tint v = e[u][i].first, id = e[u][i].second;\n\t\t\tif (val[id] && de[v] == de[u]+1){\n\t\t\t\tint res = dfs(v, min(in, val[id]));\n\t\t\t\tin -= res;\n\t\t\t\tout += res;\n\t\t\t\tval[id] -= res;\n\t\t\t\tval[id&1?id+1:id-1] += res;\n\t\t\t\tif (!in) break;\n\t\t\t}\n\t\t}\n\t\tif (!out) de[u] = -1;\n\t\treturn out;\n\t}\n\tint dinic(){\n\t\tint res = 0;\n\t\twhile (bfs())\n\t\t\tres += dfs(s, inf);\n\t\treturn res;\n\t}\n\tvoid work(){\n\t\tss >> n >> m >> _q;\n\t\tfor (int i = 1; i <= _q; i++){\n\t\t\tint x, y;\n\t\t\tcin >> y >> x;\n\t\t\tvis[x][y] = 1;\n\t\t}\n\t\ts = n*m+1, t = s+1;\n\t\tfor (int i = 1; i <= n; i++)\n\t\t\tfor (int j = 1; j <= m; j++) if (!vis[i][j]){\n\t\t\t\tif ((i+j)&1){\n\t\t\t\t\tif (i < n && !vis[i+1][j]) addedge(getid(i, j), getid(i+1, j), 1);\n\t\t\t\t\tif (j < m && !vis[i][j+1]) addedge(getid(i, j), getid(i, j+1), 1);\n\t\t\t\t}else{\n\t\t\t\t\tif (i < n && !vis[i+1][j]) addedge(getid(i+1, j), getid(i, j), 1);\n\t\t\t\t\tif (j < m && !vis[i][j+1]) addedge(getid(i, j+1), getid(i, j), 1);\n\t\t\t\t}\n\t\t\t}\n\t\tfor (int i = 1; i <= n; i++)\n\t\t\tfor (int j = 1; j <= m; j++)\n\t\t\t\tif ((i+j)&1) addedge(s, getid(i, j), 1);\n\t\t\t\telse addedge(getid(i, j), t, 1);\n\t\tcout << dinic();\n\t}\n}\nnamespace solveB{\n#define Pi 3.141592653589793\n\tconst int N = 5e5+5, mod = 100000000;\n\tchar c1[N], c2[N];\n\tint n, m, r[N], L = 1, l;\n\tint sum[N];\n\tstack<int> st;\n\tstruct Complex{\n\t\tdouble x, y;\n\t\tComplex(double _x=0, double _y=0){\n\t\t\tx = _x, y = _y;\n\t\t}\n\t\tComplex operator + (const Complex &b) const{\n\t\t\treturn Complex(x+b.x, y+b.y);\n\t\t}\n\t\tComplex operator - (const Complex &b) const{\n\t\t\treturn Complex(x-b.x, y-b.y);\n\t\t}\n\t\tComplex operator * (const Complex &b) const{\n\t\t\treturn Complex(x*b.x-y*b.y, y*b.x+x*b.y);\n\t\t}\n\t}a[N], b[N];\n\tconst int LEN = 5e5+5;\n\tstruct HPN{\n\t\tint len;\n\t\tll num[LEN];\n\t\tHPN(){\n\t\t\tlen = 1;\n\t\t\tmemset(num, 0, sizeof(num));\n\t\t}\n\t\tinline void operator = (const int &x){\n\t#ifdef HPN_RE_ERROR\n\t\t\tif (x >= mod) exit(1);\n\t#endif\n\t\t\tlen = 1;\n\t\t\tnum[0] = x;\n\t\t}\n\t\tinline void operator = (const HPN &b){\n\t\t\tlen = b.len;\n\t\t\tmemcpy(num, b.num, sizeof(num));\n\t\t}\n\t\tinline void check_len(){\n\t\t\tlen = LEN-1;\n\t\t\twhile (len > 1 && !num[len-1]) len--;\n\t\t}\n\t\tinline bool operator < (const HPN &b) const{\n\t\t\tif (len < b.len) return 1;\n\t\t\tif (len > b.len) return 0;\n\t\t\tfor (register int i = len-1; i >= 0; i--)\n\t\t\t\tif (num[i] < b.num[i])\n\t\t\t\t\treturn 1;\n\t\t\t\telse if (num[i] > b.num[i])\n\t\t\t\t\treturn 0;\n\t\t\treturn 0;\n\t\t}\n\t\tinline bool operator == (const HPN &b) const{\n\t\t\tif (len != b.len) return 0;\n\t\t\tfor (register int i = 0; i < len; i++)\n\t\t\t\tif (num[i] != b.num[i])\n\t\t\t\t\treturn 0;\n\t\t\treturn 1;\n\t\t}\n\t\tinline bool operator == (const int &b) const{\n\t\t\treturn (len == 1 && num[0] == b);\n\t\t}\n\t\tinline bool operator > (const HPN &b) const{\n\t\t\tif (len > b.len) return 1;\n\t\t\tif (len < b.len) return 0;\n\t\t\tfor (register int i = len-1; i >= 0; i--)\n\t\t\t\tif (num[i] > b.num[i])\n\t\t\t\t\treturn 1;\n\t\t\t\telse if (num[i] < b.num[i])\n\t\t\t\t\treturn 0;\n\t\t\treturn 0;\n\t\t}\n\t\tinline bool operator <= (const HPN &b) const{\n\t\t\treturn (*this) < b || (*this) == b;\n\t\t}\n\t\tinline bool operator >= (const HPN &b) const{\n\t\t\treturn (*this) > b || (*this) == b;\n\t\t}\n\t\tinline HPN operator << (int x) const{\n\t\t\tHPN res;\n\t#ifdef HPN_RE_ERROR\n\t\t\tif (len+x > LEN) exit(2);\n\t#endif\n\t\t\tif ((*this) == 0) return (*this);\n\t\t\tfor (register int i = len-1; i >= 0; i--)\n\t\t\t\tres.num[i+x] = num[i];\n\t\t\tres.len = len+x;\n\t\t\treturn res;\n\t\t}\n\t\tinline HPN operator + (const HPN &b) const{\n\t\t\tHPN res;\n\t\t\tregister int c = 0;\n\t\t\tfor (register int i = 0; i < max(len, b.len); i++){\n\t\t\t\tres.num[i] = num[i]+b.num[i]+c;\n\t\t\t\tc = (num[i]+b.num[i]+c)/mod;\n\t\t\t\tres.num[i] %= mod;\n\t\t\t}\n\t\t\tres.len = max(len, b.len);\n\t\t\tif (c)\n\t\t\t\tres.num[res.len++] = c;\n\t\t\treturn res;\n\t\t}\n\t\tinline void operator += (const HPN &b){\n\t\t\t*this = (*this)+b;\n\t\t}\n\t\tinline HPN operator - (const HPN &b) const{\n\t#ifdef HPN_RE_ERROR\n\t\t\tif ((*this) < b) exit(3);\n\t#endif\n\t\t\tHPN res;\n\t\t\tregister int c = 0;\n\t\t\tfor (register int i = 0; i < len; i++){\n\t\t\t\tres.num[i] = num[i]-b.num[i]-c;\n\t\t\t\tif (res.num[i] < 0){\n\t\t\t\t\tres.num[i] += mod;\n\t\t\t\t\tc = 1;\n\t\t\t\t}else c = 0;\n\t\t\t}\n\t\t\tres.check_len();\n\t\t\treturn res;\n\t\t}\n\t\tinline HPN operator - (const int &b) const{\n\t\t\tHPN tmp;\n\t\t\ttmp = b;\n\t\t\treturn (*this)-tmp;\n\t\t}\n\t\tinline void operator -= (const int &b){\n\t\t\t(*this) = (*this)-b;\n\t\t}\n\t\tinline void operator -= (const HPN &b){\n\t\t\t(*this) = (*this)-b;\n\t\t}\n\t\tinline HPN operator * (const int x) const{\n\t\t\tHPN res;\n\t\t\tint c = 0;\n\t\t\tfor (register int i = 0; i < len; i++){\n\t\t\t\tres.num[i] = num[i]*x+c;\n\t\t\t\tc = res.num[i]/mod;\n\t\t\t\tres.num[i] %= mod;\n\t\t\t}\n\t\t\tres.len = len;\n\t\t\tif (c)\n\t\t\t\tres.num[res.len++] = c;\n\t\t\tres.check_len();\n\t\t\treturn res;\n\t\t}\n\t\tinline HPN operator * (const HPN &b) const{\n\t\t\tHPN res;\n\t\t\tfor (register int i = 0; i < b.len; i++)\n\t\t\t\tres += ((*this)*b.num[i])<<i;\n\t\t\tres.check_len();\n\t\t\treturn res;\n\t\t}\n\t\tinline void operator *= (const int &b){\n\t\t\t(*this) = (*this)*b;\n\t\t}\n\t\tinline void operator *= (const HPN &b){\n\t\t\t(*this) = (*this)*b;\n\t\t}\n\t\tinline HPN operator / (const HPN &b) const{\n\t\t\tHPN now = (*this), res;\n\t\t\tfor (register int i = len-b.len; i >= 0; i--){\n\t\t\t\tregister int l = 0, r = 1e8-1, mid, _res = 0;\n\t\t\t\twhile (l <= r){\n\t\t\t\t\tmid = (l+r)>>1;\n\t\t\t\t\tif (((b*mid)<<i) <= now)\n\t\t\t\t\t\t_res = mid, l = mid+1;\n\t\t\t\t\telse r = mid-1;\n\t\t\t\t}\n\t\t\t\tnow -= (b*_res)<<i;\n\t\t\t\tres.num[i] = _res;\n\t\t\t\tif (_res) res.len = max(i+1, res.len);\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\t\tinline HPN operator / (const int &b) const{\n\t\t\tHPN res;\n\t\t\tlong long tmp = 0;\n\t\t\tfor (register int i = len; i >= 0; i--){\n\t\t\t\tres.num[i] = (tmp*mod+num[i])/b;\n\t\t\t\ttmp = (tmp*mod+num[i])%b;\n\t\t\t}\n\t\t\tres.check_len();\n\t\t\treturn res;\n\t\t}\n\t\tinline void operator /= (const HPN &b){\n\t\t\t(*this) = (*this)/b;\n\t\t}\n\t\tinline void operator /= (const int &b){\n\t\t\t(*this) = (*this)/b;\n\t\t}\n\t\tinline HPN operator % (const HPN &b) const{\n\t\t\tHPN now = (*this);\n\t\t\tfor (register int i = len-b.len; i >= 0; i--){\n\t\t\t\tregister int l = 0, r = 1e8-1, mid, _res = 0;\n\t\t\t\twhile (l <= r){\n\t\t\t\t\tmid = (l+r)>>1;\n\t\t\t\t\tif (((b*mid)<<i) <= now)\n\t\t\t\t\t\t_res = mid, l = mid+1;\n\t\t\t\t\telse r = mid-1;\n\t\t\t\t}\n\t\t\t\tnow -= (b*_res)<<i;\n\t\t\t}\n\t\t\treturn now;\n\t\t}\n\t\tinline void operator %= (const HPN &b){\n\t\t\t(*this) = (*this)%b;\n\t\t}\n\t\tinline void print(){\n\t\t\tint c[10], top = 0, x = num[len-1];\n\t\t\tc[1] = '0';\n\t\t\twhile (x) c[++top] = x%10+'0', x /= 10;\n\t\t\ttop = max(1, top);\n\t\t\twhile (top) putchar(c[top--]);\n\t\t\tfor (register int i = len-2; i >= 0; i--){\n\t\t\t\tx = num[i];\n\t\t\t\tfor (register int j = 1; j <= 8; j++)\n\t\t\t\t\tc[j] = x%10+'0', x /= 10;\n\t\t\t\tfor (register int j = 8; j >= 1; j--)\n\t\t\t\t\tputchar(c[j]);\n\t\t\t}\n\t\t}\n\t}ans;\n\tvoid fft(Complex *a, int type){\n\t\tfor (int i = 0; i < L; i++)\n\t\t\tif (i < r[i])\n\t\t\t\tswap(a[i], a[r[i]]);\n\t\tfor (int mid = 1; mid < L; mid <<= 1){\n\t\t\tComplex Wn(cos(Pi/mid), sin(Pi/mid)*type);\n\t\t\tfor (int j = 0; j < L; j += mid<<1){\n\t\t\t\tComplex w(1, 0);\n\t\t\t\tfor (int k = 0; k < mid; k++, w = w*Wn){\n\t\t\t\t\tComplex x = a[j+k], y = a[j+k+mid];\n\t\t\t\t\ta[j+k] = x+w*y;\n\t\t\t\t\ta[j+k+mid] = x-w*y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tint p[10] = {1, 10, 100, 1000, 10000, 100000, 1000000, 10000000};\n\tvoid work(){\n\t\tss >> c1 >> c2;\n\t\tn = strlen(c1)-1, m = strlen(c2)-1;\n\t\twhile (L <= n+m) L <<= 1, l++;\n\t\tfor (int i = 0; i <= n; i++)\n\t\t\ta[i].x = c1[n-i]-'0';\n\t\tfor (int i = 0; i <= m; i++)\n\t\t\tb[i].x = c2[m-i]-'0';\n\t\tfor (int i = 0; i < L; i++)\n\t\t\tr[i] = (r[i>>1]>>1)|((i&1)<<(l-1));\n\t\tfft(a, 1);\n\t\tfft(b, 1);\n\t\tfor (int i = 0; i < L; i++)\n\t\t\ta[i] = a[i]*b[i];\n\t\tfft(a, -1);\n\t\tint c = 0;\n\t\tfor (int i = 0; i <= n+m; i++)\n\t\t\tans.num[i/8] += (((int)(a[i].x/L+0.5)+c)%10)*p[i%8],\n\t\t\tc = ((int)(a[i].x/L+0.5)+c)/10;\n\t\tif (c) ans.num[(ans.len=n+m+1)/8] += c*p[(n+m+1)%8];\n\t\telse ans.len = n+m;\n\t\tans.len++;\n\t\tans = ans-1;\n\t\tans /= 3;\n\t\tans.print();\n\t}\n#undef Pi\n}\nnamespace solveC{\n\tconst int N = 11;\n\tint n, m, k, f[2][1<<N][1<<N];\n\tint vis[N], ans=0, cnt=0;\n\tvoid cmax(int &x, int y){\n\t\tx = max(y, x);\n\t}\n\tint count(int x){//x\u4e8c\u8fdb\u5236\u4e0b\u6709\u51e0\u4e2a1\n\t\treturn x?count(x-(x&-x))+1:0;\n\t}\n\tvoid work(){\n\t\tss >> n >> m >> k;\n\t\tfor (int i = 1; i <= k; i++){\n\t\t\tint x, y;\n\t\t\tcin >> x >> y;\n\t\t\tswap(x, y);\n\t\t\ty--;\n\t\t\tvis[x] |= 1<<y;\n\t\t}\n\t\tvis[0] = (1<<m)-1;\n\t\tmemset(f, -0x3f, sizeof(f));\n\t\tf[0][(1<<m)-1][(1<<m)-1] = 0;\n\t\tfor (int i = 0; i < n; i++){\n\t\t\tmemset(f[(i&1)^1], -0x3f, sizeof(f[(i&1)^1]));\n\t\t\tfor (int _i = 0; _i < (1<<m); _i++)\n\t\t\t\tfor (int l = 0; l < (1<<m); l++) if (!(l&(_i|vis[i]|vis[i+1])))\n\t\t\t\t\tfor (int j = _i; ; j = (j-1)&_i){\n\t\t\t\t\t\tif (!(j&(l|vis[i])))\n\t\t\t\t\t\t\tcmax(f[(i&1)^1][j|vis[i]|l][vis[i+1]|l], f[i&1][_i][j|vis[i]]+count(l));\n\t\t\t\t\t\tif (!j) break;\n\t\t\t\t\t}\n\t\t\tfor (int _i = 0; _i < (1<<m); _i++) if (!(_i&vis[i])){\n\t\t\t\tfor (int j = 0; j < (1<<m); j++){\n\t\t\t\t\tint x = f[(i&1)^1][_i|vis[i]][j|vis[i+1]];\n\t\t\t\t\tint p0 = _i|vis[i], p1 = j|vis[i+1];\n\t\t\t\t\tif (x < 0 || (j&vis[i+1])) continue;\n\t\t\t\t\tfor (int _j = 0; _j < m; _j++){\n\t\t\t\t\t\tif (_j+1 < m && !(p0&(1<<_j)) && !(p0&(1<<(_j+1))) && !(p1&(1<<_j)))\n\t\t\t\t\t\t\tcmax(f[(i&1)^1][p0|(3<<_j)][p1|(1<<_j)], x+1);\n\t\t\t\t\t\tif (_j+1 < m && !(p0&(1<<_j)) && !(p0&(1<<(_j+1))) && !(p1&(1<<(_j+1))))\n\t\t\t\t\t\t\tcmax(f[(i&1)^1][p0|(3<<_j)][p1|(1<<(_j+1))], x+1);\n\t\t\t\t\t\tif (_j+1 < m && !(p1&(1<<_j)) && !(p1&(1<<(_j+1))) && !(p0&(1<<_j)))\n\t\t\t\t\t\t\tcmax(f[(i&1)^1][p0|(1<<_j)][p1|(3<<_j)], x+1);\n\t\t\t\t\t\tif (_j+1 < m && !(p1&(1<<_j)) && !(p1&(1<<(_j+1))) && !(p0&(1<<(_j+1))))\n\t\t\t\t\t\t\tcmax(f[(i&1)^1][p0|(1<<(_j+1))][p1|(3<<_j)], x+1);\n\t\t\t\t\t\tif (_j+2 < m && (p0&(7<<_j)) == 0)\n\t\t\t\t\t\t\tcmax(f[(i&1)^1][p0|(7<<_j)][p1], x+1);\n\t\t\t\t\t\tif (_j+2 < m && (p1&(7<<_j)) == 0)\n\t\t\t\t\t\t\tcmax(f[(i&1)^1][p0][p1|(7<<_j)], x+1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (int _i = 0; _i < (1<<m); _i++)\n\t\t\t\tfor (int j = 0; j < (1<<m); j++){\n\t\t\t\t\tcmax(f[(i&1)^1][_i|j][j], f[(i&1)^1][_i][j]);\n\t\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < (1<<m); i++)\n\t\t\tfor (int j = 0; j < (1<<m); j++)\n\t\t\t\tans = max(f[n&1][i][j], ans);\n\t\tcout << ans;\n\t}\n}\nint main(){\n\tstd::ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);\n//\tfreopen(\"in.txt\", \"r\", stdin);\n//\tfreopen(\"out.out\", \"w\", stdout);\n\tgetline(cin, s);\n\tss << s;\n\tif (s[s.size()-1] == 'A') solveA::work();\n\telse if (s[s.size()-1] == 'B') solveB::work();\n\telse solveC::work();\n\treturn 0;\n}\n```",
        "postTime": 1617936116,
        "uid": 171288,
        "name": "Tony2",
        "ccfLevel": 9,
        "title": "\u9898\u89e3P6407"
    }
]