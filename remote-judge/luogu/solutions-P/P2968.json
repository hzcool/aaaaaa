[
    {
        "content": "\u8fd9\u9898\u521d\u770b\u6709\u4e9b\u65e0\u4ece\u4e0b\u624b\u3002\u4e0d\u8fc7\u6211\u4eec\u53ef\u4ee5\u4ece\u540e\u5f80\u524d\u63a8\u51fa\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u62d0\u89d2\uff0c\u7ecf\u8fc7\u5b83\u7684\u901f\u5ea6\u7684\u6700\u5927\u9650\u5236\uff08\u65e2\u8981\u5c0f\u4e8e\u9898\u76ee\u7ed9\u51fa\u7684\u5b89\u5168\u9650\u5236\uff0c\u53c8\u8981\u786e\u4fdd\u540e\u9762\u7684\u62d0\u89d2\u80fd\u591f\u987a\u5229\u901a\u8fc7\uff09\u3002\n\n\u77e5\u9053\u8fd9\u4e2a\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4ece\u524d\u5f80\u540e\u6a21\u62df\uff0c\u8ba1\u7b97\u51fa\u6bcf\u4e24\u4e2a\u62d0\u89d2\u4e4b\u95f4\u7684\u901f\u5ea6\u6700\u5927\u503c\uff08\u4e0d\u8981\u5fd8\u4e86\u8fd8\u6709\u8d77\u70b9\u548c\u7ec8\u70b9\uff09\uff0c\u4ee5\u53ca\u5230\u8fbe\u62d0\u89d2\u65f6\u7684\u901f\u5ea6\u3002\n\n\u5230\u8fbe\u62d0\u89d2\u65f6\u7684\u901f\u5ea6\u5e94\u8be5\u6bd4\u8f83\u5bb9\u6613\u63a8\uff0c\u901f\u5ea6\u6700\u5927\u503c\u8981\u7528\u70b9\u8111\u5b50\uff08\u8bf7\u53c2\u8003\u4ee3\u7801\uff09\n\n\u9644\u4ee3\u7801\uff08\u5e76\u4e0d\u4f1a\u5f88\u957f\uff09\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstdlib>\nusing namespace std;\nint l,n,ans,m;//m\u8868\u793a\u5230\u8fbe\u67d0\u4e2a\u62d0\u89d2\u65f6\u7684\u901f\u5ea6\ntypedef struct{\n    int t,s,q;\n}P;\nbool cmp(P aa,P bb){\n    return (aa.t<bb.t);\n}\nP p[100002];\nint main()\n{\n    scanf(\"%d%d\",&l,&n);\n    for (int i=1;i<=n;i++)\n    scanf(\"%d%d\",&p[i].t,&p[i].s);\n    sort(p+1,p+n+1,cmp);p[n].q=p[n].s;//\u5207\u8bb0\u8981\u6392\u5e8f\n    for (int i=n;i>=2;i--)\n    p[i-1].q=min(p[i-1].s,p[i].q+p[i].t-p[i-1].t);//\u63a8\u51fa\u6700\u5927\u901f\u5ea6\u9650\u5236\n    if (p[1].t+1<=p[1].q)ans=p[1].t+1;\n    else ans=(p[1].q+p[1].t+1)/2;\n    m=min(p[1].q,p[1].t+1);//\u8d77\u70b9\u4e0e\u7b2c\u4e00\u4e2a\u62d0\u89d2\u7684\u4fe1\u606f\n    for (int i=2;i<=n;i++)\n    {\n        if (m+p[i].t-p[i-1].t<=p[i].q) ans=max(ans,m+p[i].t-p[i-1].t);\n        else ans=max(ans,(p[i].q+p[i].t-p[i-1].t+m)/2);\n        m=min(p[i].q,m+p[i].t-p[i-1].t);//i\u548ci-1\u4e2a\u62d0\u89d2\u7684\u4fe1\u606f\n    }\n    printf(\"%d\",max(ans,m+l-p[n].t));//\u4e0d\u8981\u5fd8\u4e86\u7ec8\u70b9\n    return 0;\n}\n```",
        "postTime": 1485841901,
        "uid": 14738,
        "name": "1124828077ccj",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2968 \u3010[USACO09DEC]\u96ea\u6a47Bobsledding\u3011"
    },
    {
        "content": "###  \u4e00\u9053\u4e0d\u9519\u7684\u8d2a\u5fc3\u9898\u3002\n\n\u611f\u89c9\u697c\u4e0b\u9898\u89e3\u89e3\u91ca\u7684\u4e0d\u662f\u5f88\u6e05\u695a\u5427\uff0c\u6211\u518d\u8865\u5145\u4e00\u53d1\u3002\n\n100000\u7684\u6570\u636e\u89c4\u6a21\u663e\u7136\u5f88\u96be\u533a\u95f4DP\uff0c\u4e8e\u662f\u6211\u4eec\u8003\u8651\u8d2a\u5fc3\u3002\n\n\u8fd9\u9898\u7684\u7279\u6027\uff1a\u901f\u5ea6\u53d8\u5316\u91cf\u4e3a\u00b11\u62160\u3002\n\n\u4e0d\u8981\u89c9\u5f970\u6ca1\u7528\uff01\u8fd9\u4e00\u7279\u6027\u4fdd\u8bc1\u4e86\uff0c\u4ece\u62d0\u5f2f\u70b9 i \u5230 i + 1 \uff0c \u82e5\u5728\u62d0\u5f2f\u70b9 i + 1 \u53ef\u4ee5\u8fbe\u5230\u901f\u5ea6L\u3001R\uff0c \u90a3\u4e48\u901f\u5ea6 L + 1, L + 2, ..., R - 1\u90fd\u53ef\u4ee5\u5728 i + 1 \u5904\u5230\u8fbe \n\n\uff08\u5e94\u8be5\u5f88\u663e\u7136\u5427qwq\uff09\n\n\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e\u4e00\u4e2a\u5f15\u7406\n\n\n```cpp\n\u5f15\u7406\uff1a\u5728v[i]\u53d6\u6700\u5927\u503c\u65f6\uff0cv[ i + 1 ]\u8981\u4e48\u65e0\u6cd5\u6ee1\u8db3\u9650\u5236\uff0c\u8981\u4e48\u4e5f\u53ef\u4ee5\u53d6\u5230\u6700\u5927\u503c\u3002\n\n\u8bc1\u660e\uff1a\u82e5\u53ef\u4ee5\u6ee1\u8db3\u9650\u5236\uff0c\u5219\u8bbe v[ i ]\u53d6max(v [ i ]) - 1\u65f6max' (v[ i + 1 ]) = p, \u90a3\u4e48 v [ i ] \u53d6 max(v [ i ]) \u65f6\uff0c v[ i + 1 ] \u5fc5\u7136\u53ef\u4ee5\u53d6p + 1\n```\n\n\u6709\u4e86\u8fd9\u6761\u5f15\u7406\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\uff1a\u5982v1\uff0c v2, ..., vn\u5206\u522b\u4e3a\u53ef\u4ee5\u8ba9\u540e\u9762\u6bcf\u4e00\u4e2a\u62d0\u5f2f\u89d2\u6ee1\u8db3\u9650\u5236\u7684\u901f\u5ea6\u6700\u5927\u503c\uff0c\u90a3\u4e48\u8fd9n\u4e2a\u901f\u5ea6\u5fc5\u7136\u53ef\u4ee5\u88ab\u540c\u65f6\u6ee1\u8db3\uff0c\u5373\u4e3a\u6211\u4eec\u6240\u6c42\u7684\u65b9\u6848\u3002\n\n\u4e8e\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u540e\u5f80\u524d\u7b97\u51fa\u6bcf\u4e2a\u62d0\u5f2f\u89d2\u8ba9\u540e\u9762\u6240\u6709\u62d0\u5f2f\u89d2\u90fd\u80fd\u6ee1\u8db3\u9650\u5236\u7684\u901f\u5ea6\u6700\u5927\u503c\u3002\u8fd9\u65f6\u6211\u4eec\u5c31\u5f97\u51fa\u6700\u4f73\u65b9\u6848\u5728\u6bcf\u4e2a\u62d0\u5f2f\u70b9\u7684\u901f\u5ea6\u3002\n\n\u600e\u4e48\u7edf\u8ba1\u7b54\u6848\u5462\uff1f\u6211\u4eec\u6ce8\u610f\u5230\uff0c\u5728\u4e24\u4e2a\u62d0\u5f2f\u70b9\u95f4\u662f\u6ca1\u6709\u901f\u5ea6\u9650\u5236\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u8981\u60f3\u6709\u901f\u5ea6\u6700\u5927\u503c\u5fc5\u7136\u4f1a\u5148\u52a0\u901f\u5230\u4e00\u5b9a\u503c\u518d\u51cf\u901f\u3002\u8bbe\u521d\u901f\u5ea6\u4e3av0\uff0c \u672b\u901f\u5ea6\u4e3av1\uff0c \u4e24\u70b9\u8ddd\u79bb\u4e3as\u3002\u76f4\u63a5\u51cf\uff08\u52a0\uff09\u901f\u6240\u9700\u8ddd\u79bb\u4e3a|v1 - v0|\uff0c \u800c\u5269\u4e0b\u8ddd\u79bb\u90fd\u53ef\u4ee5\u7528\u4e8e\u4e00\u52a0\u4e00\u51cf\u3002\u4e8e\u662f\uff0c\n\n```\nvmax = v1 + ( s - | v1 - v0 | ) / 2 (v1 > v0)\n\nvmax = v0 + ( s - | v1 - v0 | ) / 2 (v1 < v0)\n```\n\n\u5219\u53ef\u4ee5\u5316\u7b80\u4e3a\n\n```\nvmax = ( s + v1 - v0 ) / 2 \n```\n\n\u4ee3\u7801\uff1a\n\n```cpp\n//\u53ef\u80fd\u4fdd\u9669\u5f00ll\u7684\u7801\u98ce\u6bd4\u8f83\u4e11\u964bqwq\n//\u5e94\u8be5\u6ca1\u4ec0\u4e48\u96be\u70b9\uff0c\u7ec6\u8282\u6bd4\u8f83\u591a\uff0c\u8fb9\u754c\u60c5\u51b5\u8981\u6ce8\u610f\u4e00\u4e0b\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm> \nusing namespace std; \n\nstruct h\n{\n\tint t, s; \n}b[100005]; \n\nint cmp(h a, h b)\n{\n\treturn a.t < b.t; \n}\nint main()\n{\n\tint l, n; \n\tscanf(\"%d%d\", &l, &n); \n\t\n\tfor(int i = 1; i <= n; i++)\n\t\tscanf(\"%d%d\", &b[i].t, &b[i].s); \n\tsort(b + 1, b + n + 1, cmp); \n\tb[0].t = 0; b[n + 1].t = l;  \n\t\n\tlong long ok[n + 2]; \n\tmemset(ok, 0, sizeof(ok)); \n\tok[n + 1] = 1e18; \n\tfor(int i = n; i >= 1; i--)\n\t\tok[i] = ((b[i].s > ok[i + 1] + (b[i + 1].t - b[i].t)) ? ok[i + 1] + (b[i + 1].t - b[i].t) : b[i].s); \n\t\n\tlong long ans[n + 2], maxn = 1; \n\tans[0] = 1; \n\tfor(int i = 1; i <= n + 1; i++)\n\t\tans[i] = ((ok[i] < ans[i - 1] + b[i].t - b[i - 1].t) ? ok[i] : ans[i - 1] + b[i].t - b[i - 1].t); \n\n\tfor(int i = 0; i <= n; i++)\n\t\tmaxn = (((ans[i] + (b[i + 1].t - b[i].t + ans[i + 1] - ans[i]) / 2) > maxn) ? ans[i] + (b[i + 1].t - b[i].t + ans[i + 1] - ans[i]) / 2 : maxn); \n\tmaxn = ((ans[n + 1] > maxn) ? ans[n + 1] : maxn); \n\tprintf(\"%lld\", maxn); \n\treturn 0; \n} \n\n```\n\u849f\u84bb\u597d\u4e45\u4e0d\u5199\u9898\u89e3\u4e86\uff0c\u6709\u9519\u8bef\u8bf7\u6307\u51fa~",
        "postTime": 1563846550,
        "uid": 22930,
        "name": "Lolierl",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2968 \u3010[USACO09DEC]\u96ea\u6a47Bobsledding\u3011"
    },
    {
        "content": ">\u9898\u76ee\u94fe\u63a5\uff1a[\u5c31\u662f\u8fd9\u91cc](https://www.luogu.com.cn/problem/P2968)\n\n~~\u8bdd\u8bf4\u8fd9USACO\u7684\u56fe\u6807\u90fd\u597d\u5f62\u8c61\u751f\u52a8\u554a\uff01\uff01\uff01~~\n\n\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u4e00\u5f20\u751f\u52a8\u5f62\u8c61\u7684\u56fe\u7247\u6765\u89e3\u91ca\u8bf4\u660e\u4e00\u4e0b\u8fd9\u4e2a\u795e\u5947\u7684\u6837\u4f8b\uff1a\uff08\u5982\u4e0b\u56fe\uff09\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ss9b3k2c.png)\n\n\u5176\u5b9e\u6211\u4eec\u77e5\u9053\uff0c\u5728\u51fa\u53d1\u7684\u65f6\u5019 **\uff08\u53ef\u4ee5\u8bbe\u51fa\u53d1\u7684\u662f\u7b2c0\u70b9\uff09**\uff0c\u8d1d\u831c\u7684\u901f\u5ea6\u4e3a1.\n\n\u5728$1-7$\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u53ef\u4ee5\u53d8\u5316\u7684\u603b\u8def\u7a0b\u8bbe\u4e3a$S$\uff0c\u6b64\u65f6$S$=$7$-$0$=$7$\n\n**\uff08\u56e0\u4e3a\u4e00\u5f00\u59cb\u662f\u4e0d\u53ef\u4ee5\u53d8\u5316\u7684\uff0c\u53730\u65f6\u523b\u662f\u4e0d\u80fd\u8fdb\u884c\u53d8\u5316\uff0c\u6545\u53ea\u80fd\u8fdb\u884c7\u6b21\u53d8\u5316\uff09**\n\n\u8fd9\u65f6\u5019\uff0c\u806a\u660e\u7684\u540c\u5b66\u5c31\u8981\u95ee\u4e86\uff1a\u600e\u4e48\u6837\u624d\u80fd\u8fbe\u5230\u6700\u5927\u503c\u5462\uff1f\n\n\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u8981\u8fd0\u7528\u4e00\u4e0b\u5c0f\u5c0f\u7684**\u8d2a\u5fc3**\u3002\n\n\u6211\u4eec\u53ea\u8981\u662f\u7684\u6bcf\u6b21\u8fbe\u5230\u7684\u90fd\u662f\u80fd\u8fbe\u5230\u70b9\u7684**\u6700\u5927\u503c**\uff0c\u90a3\u6211\u4eec\u5c31\u53ef\u4ee5\u53d6\u5230**\u6700\u5927\u7684\u503c**\u3002\n\n**\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ea\u8981\u4f7f\u5f97\u6bcf\u6b21\u5f97\u5230\u7684\u9650\u5236\u503c$node_i.limit$,\u6211\u4eec\u53ea\u8981\u4fdd\u8bc1\u5230\u8fbe\u8fd9\u4e00\u70b9\u7684\u901f\u5ea6\u5c3d\u91cf\u5730\u8fbe\u5230\u8fd9\u4e00\u4e2a\u503c\u5c31\u53ef\u4ee5\u8d2a\u5fc3\u53d6\u5230\u6700\u5927\u503c\u3002**\n\n\u5176\u5b9e\u6211\u4eec\u53ea\u8981\u8bbe\u524d\u4e00\u4e2a\u70b9\u7684\u901f\u5ea6\u4e3a$v_0$ \u540e\u4e00\u4e2a\u70b9\u7684\u901f\u5ea6\u4e3a$v_1$.\n\n```latex\n1.\u5f53v1>v0\u65f6\uff0c\u8fd9\u660e\u663e\u662fv0\u4e0a\u5347\u8fbe\u5230\u6700\u5927\u503c\u540e\u4e0b\u964d\u5f97\u6765\u7684v1\uff0c\u4e0a\u5347\u7684\u8ddd\u79bb\u5c31\u662f\uff08S-\uff08v1-v0\uff09\uff09/2(\u5747\u5206\uff0c\u5982\u679c\u6ca1\u6709\u5747\u5206\u5c31\u505c\u6b62\u52a0\u51cf\u901f\u3002\uff09\u9700\u8981\u52a0\u4e0a\u7684\u503c\u4e3av0\n2.\u5f53v1<v0\u65f6\uff0c\u660e\u663e\u662fv0\u4e0a\u5347\u81f3\u4e00\u5b9a\u503c\u518d\u4e0b\u964d\uff0c\u6b64\u65f6\u4e0b\u964d\u7684\u8ddd\u79bb\u662f\uff08S-(v0-v1)\uff09/2,\u9700\u8981\u52a0\u4e0a\u7684\u503c\u4e3av1\u3002\n```\n\u6240\u4ee5\u81ea\u7136\u5c31\u5f97\u5230\u4e86\u6b64\u516c\u5f0f $ans=max(ans,(S-v0+v1)/2+v0)$\n\n\n\u8fd9\u65f6\u5019\uff0c\u53c8\u6709\u7684\u540c\u5b66\u8981\u95ee\u4e86\uff1a\u600e\u4e48\u8bc1\u660e**\u5b58\u5728\u6027**\u5462\uff1f\u4e07\u4e00\u8fbe\u4e0d\u5230\u5462\uff1f\n\n\u8fd9\u662f\u4e00\u4e2a\u597d\u95ee\u9898\u3002\n\n\u6211\u4eec\u4e00\u65e6$v_0+S<=v_1$ \u90a3\u4e48\u6b64\u523b\u5fc5\u4e0d\u4f1a\u6709\u4e0a\u8ff0\u516c\u5f0f\u7684\u5b9e\u73b0\uff0c\u6b64\u65f6\u6700\u5927\u7684\u901f\u5ea6\u5c31\u662f$v_0+S$,\u524d\u9762\u7684\u901f\u5ea6\u4e5f\u5c31\u8981\u6539\u4e3a$v_0+S$\n\n\u601d\u8def\u5230\u6b64\u5c31\u4e3a\u6b62\u4e86\uff0c\u4f46\u662f\u8fd8\u662f\u9700\u8981\u8fdb\u884c\u4e00\u4e9b\u5fc5\u8981\u7684\u521d\u59cb\u3002\n\n\u5982\u4e0b\u56fe\u6240\u793a\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/or3pwy11.png)\n\n\u6b64\u65f6\u7684\u7b2c\u4e8c\u4e2a\u70b98 1\uff0c\u8ddd\u79bb\u4e0a\u4e00\u4e2a\u70b9\u662f1\uff0c\u4f46\u662f\u53d8\u5316\u7684\u8ddd\u79bb\u662f2\uff0c\u6240\u4ee5\u6b64\u65f6\u7684\u70b97\u7684\u9650\u5236\u503c\u5e94\u5f53\u8fdb\u4e00\u6b65\u51cf\u5c0f\uff0c\u6240\u4ee5\u5f97\u5230\u7684\u5e94\u8be5\u662f\u4e0b\u56fe\u4e2d\u7684\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/go5zc8wn.png)\n\n**\u8fd9\u6837\u4e00\u6765\u5c31\u53ef\u4ee5\u5199\u4ee3\u7801\u4e86\uff1a\uff08\u6709\u672c\u4eba\u7684\u8c03\u8bd5\u8bed\u53e5QAQ\uff09**\n\n```cpp\n#include<bits/stdc++.h>\n#define maxn 100010\n#define rnt register int\nusing namespace std;\ninline int read()\n{\n\tint x=0,f=1;char c;\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') f=-f;\n\tfor(;isdigit(c);c=getchar()) x=(x<<1)+(x<<3)+(c^48);\n\treturn x*f;\n}\nstruct node\n{\n\tint tim,lmt; \n}s[maxn];\ninline bool cmp(node a,node b){return a.tim<b.tim;}\nint L,n,ans;\nint main()\n{\n\tL=read(),n=read();\n\tfor(rnt i=1;i<=n;i++)\n\t\ts[i].tim=read(),s[i].lmt=read();\n\tsort(s+1,s+1+n,cmp);\n\tfor(rnt i=n-1;i>=1;i--) //\u5904\u7406limit\u7684\uff0c\u5982\u679c\u8bf4\u5230\u8fbe\u4e0d\u4e86\uff0climit\u5c31\u5fc5\u987b\u51cf\u5f31 \n\t\ts[i].lmt=min(s[i].lmt,s[i+1].lmt+s[i+1].tim-s[i].tim);\n\ts[++n].tim=L,s[n].lmt=0x3f3f3f3f; \n\trnt last=1; //\u524d\u4e00\u4e2a\u901f\u5ea6\uff0c\u8d2a\u5fc3\u8fdb\u884c\u4f7f\u7528 \n\tfor(rnt i=1;i<=n;i++) //\u5e26\u8d2a\u5fc3 \n\t{\n//\t\tprintf(\"round: %d first last: %d ans: %d\\n\",i,last,ans);\n\t\tint v0=last,v1=s[i].lmt,S=s[i].tim-s[i-1].tim;\n\t\tif(v0+S<=v1) ans=max(ans,v0+S),last=v0+S;\n\t\telse ans=max(ans,(S-v0+v1)/2+v0),last=v1;\n//\t\tprintf(\"round: %d after v0: %d v1: %d S: %d ans: %d\\n\",i,v0,v1,S,ans);\n\t}\n\tprintf(\"%d\\n\",max(ans,last));\n\treturn 0;\n}\n\n```\n## end\n\n**\u5207\u4e86\u4e00\u9053\u84dd\u9898\u597d\u6fc0\u52a8\u554a\uff01\uff01\uff01**\n",
        "postTime": 1612078053,
        "uid": 235855,
        "name": "shenxinge",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2968 \u3010[USACO09DEC]Bobsledding S\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u663e\u7136\u6309\u7167 $t_i$ \u5347\u5e8f\u6392\u5e8f\u3002\n\n\u6211\u4eec\u53d1\u73b0\u4e0d\u80fd\u76f4\u63a5\u786c\u8d2a\u5fc3\uff0c\u5f53 $s_i\\gg s_{i+1}$ \u4f46\u662f $t_i$ \u76f8\u5dee\u4e0d\u5927\u65f6\uff0c\u5c31\u751a\u81f3\u65e0\u6cd5\u6ee1\u8db3\u6761\u4ef6\u3002\n\n\u90a3\u4e48\u6211\u4eec\u5fc5\u987b\u5148\u9884\u5904\u7406\u51fa\u5bf9\u4e8e $i$\uff0c\u6211\u4eec\u5728\u6b64\u80fd\u8fbe\u5230\u7684\u6700\u5927\u901f\u5ea6 $p_i$\uff0c\u4f7f\u5f97\u540e\u9762\u7684\u901f\u5ea6\u90fd\u53ef\u4ee5\u6ee1\u8db3\u6761\u4ef6\u3002\n\n\u6b63\u7740\u505a\u663e\u7136\u662f\u4e0d\u884c\u7684\uff0c\u4f60\u4e0d\u80fd\u9884\u77e5\u540e\u9762\u7684\u9650\u5236\u3002\u6240\u4ee5\u5012\u8fc7\u6765\u505a\uff0c$p_{i}=\\min\\{s_i,p_{i+1}+t_{i+1}-t_{i}\\}$\u3002\n\n\u5f97\u5230 $p$ \u4e4b\u540e\uff0c\u6211\u4eec\u8981\u6c42\u51fa\u4ed6\u80fd\u8fbe\u5230\u7684\u6700\u5927\u901f\u5ea6\u4e86\u3002\n\n\u6211\u4eec\u8fdb\u884c\u7ed8\u56fe\u3002\n\n\u5982\u4e0b\u56fe\uff0c$A,B$ \u7684\u7eb5\u5750\u6807\u662f $s_i$\uff0c\u6a2a\u5750\u6807\u662f $t_i$\uff0c\u6298\u7ebf\u8868\u73b0\u7684\u662f\u901f\u5ea6\u7684\u53d8\u5316\u3002\n\n[![p9UJ9z9.png](https://s1.ax1x.com/2023/05/05/p9UJ9z9.png)](https://imgse.com/i/p9UJ9z9)\n\n\n$A\\to B$ \u7684\u8def\u5f84\u4e2d\uff0c\u6211\u4eec\u4e00\u5171\u6709\u4e94\u79d2\u4f46\u662f\u6211\u4eec\u53ea\u80fd\u5411\u4e0a\u4e24\u683c\u5230\u8fbe $C$ \u5c31\u5f97\u843d\u56de\u6765\u3002\n\n\u8fd9\u662f\u8ddd\u79bb\u5dee\u5927\u4e8e\u9650\u5236\u5dee\u7684\u60c5\u51b5\u3002\n\n\u5982\u679c\u8ddd\u79bb\u5dee\u5c0f\u4e8e\u9650\u5236\u5dee\uff0c\u90a3\u4e48\u5c31\u4f1a\u51fa\u73b0\u672c\u5e94 $A\\to C$\uff0c\u4f46\u662f\u8ddd\u79bb\u4e0d\u591f\u53ea\u80fd $A\\to B$\u3002\n\n[![p9UJ3eP.png](https://s1.ax1x.com/2023/05/05/p9UJ3eP.png)](https://imgse.com/i/p9UJ3eP)\n\n\u6211\u4eec\u4ece\u5934\u5f00\u59cb\u505a\uff0c\u8bb0\u5f55\u5f53\u524d\u7684\u901f\u5ea6\u3002\n\n\u5982\u679c\u662f\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u5219\u8bb0\u5f55\u8fd9\u6761\u6298\u7ebf\u7684\u6700\u9ad8\u70b9\u4e3a\u53ef\u80fd\u7b54\u6848\uff0c\u53d6\u6700\u5927\u3002\n\n\u901f\u5ea6\u6bcf\u8ba1\u7b97\u4e00\u4e2a\u90fd\u8981\u66f4\u65b0\uff0c\u5177\u4f53\u770b\u4ee3\u7801\u3002\n\n```cpp\n#include <stdio.h>\n#include <iostream>\nusing std::cin;\n#include <algorithm>\n#define rep(i,l,r) for(i=l;i<=r;++i)\n#define req(i,r,l) for(i=r;i>=l;--i)\n#define ll long long\nint t,n,i;\nll d1,d2,L;\nconst int N=200005;\nll pos[N],s[N],limit[N];\nll max(ll x,ll y){return x>y?x:y;}\nll min(ll x,ll y){return x<y?x:y;}\nll abs(ll x){return x<0?-x:x;}\nclass li\n{\n\tpublic:long long pos,s;\n\tinline const bool operator<(const li &other)const\n\t{\n\t\treturn pos<other.pos;\n\t}\n}l[N];\nint main()\n{ \n//\tint t;scanf(\"%d\",&t);\n//\twhile(t--)\n//\t{\n\t\tll ret=0;\n\t\tscanf(\"%d %d\",&L,&n);\n\t\trep(i,1,n+1)\n\t\t\tlimit[i]=0,l[i].pos=l[i].s=0;\n\t\trep(i,1,n)\n\t\t{scanf(\"%lld %lld\",&l[i].pos,&l[i].s);\n\t\t}\n\t\tstd::sort(l+1,l+n+1);\n\t\tlimit[n]=l[n].s;\n\t\treq(i,n-1,1)\n\t\t\tlimit[i]=min(limit[i+1]-l[i].pos+l[i+1].pos,l[i].s);\n\t\tint p=1;;\n\t\tl[n+1].pos=L;\n\t\tlimit[n+1]=1ll<<40;\n\t\trep(i,0,n)\n\t\t{\n\t\t\tif(p+(l[i+1].pos-l[i].pos)<=limit[i+1])//\u7b2c\u4e8c\u79cd\u60c5\u51b5\n\t\t\t\tp+=l[i+1].pos-l[i].pos,ret=max(ret,p);\n\t\t\telse\n\t\t\t{\n\t\t\t\tint d=((p+l[i+1].pos-l[i].pos)-limit[i+1]+1)/2;//\u7ed3\u5408\u7b2c\u4e00\u4e2a\u56fe\u7406\u89e3\u4e00\u4e0b\n\t\t\t\tret=max(ret,p+l[i+1].pos-l[i].pos-d);\n\t\t\t\tp=limit[i+1];//\u4e00\u5b9a\u4f1a\u843d\u4f1a\u9650\u5236\n\t\t\t}\n\t\t}\n\t\tprintf(\"%lld\\n\",ret);\n//\t}\n\treturn 0;\n}\n \n\n```",
        "postTime": 1683295618,
        "uid": 575994,
        "name": "Etinorally",
        "ccfLevel": 5,
        "title": "P2968"
    },
    {
        "content": "\u672c\u9898\u8003\u8651 dp \u3002\n\n\u4ee5\u6bcf\u4e2a\u8f6c\u5f2f\u70b9 $i$ \u4e3a\u72b6\u6001\uff0c\u8bbe $ f[i] $ \u8868\u793a\u5728 $ i $ \u70b9\u65f6\uff0c\u80fd\u8fbe\u5230\u7684\u6700\u5927\u901f\u5ea6\uff0c\u7531\u4e8e\u901f\u5ea6\u662f\u53ef\u4ee5\u968f\u65f6\u6539\u53d8\u7684\uff0c\u6240\u4ee5\u4fdd\u6301\u4efb\u610f\u5c0f\u4e8e $ f[i] $ \u7684\u901f\u5ea6\u4e5f\u53ef\u4ee5\u5230\u8fbe\u5f53\u524d\u70b9\u3002\n\n\u4f46\u663e\u7136\u76f4\u63a5\u8fd9\u4e48\u505a\u662f\u6709\u540e\u6548\u6027\u7684\uff1a\u540e\u9762\u70b9\u7684\u901f\u5ea6\u9650\u5236\u4f1a\u5f71\u54cd\u5f53\u524d\u70b9\u7684\u72b6\u6001\u3002\u6240\u4ee5\u9700\u8981\u4ece\u540e\u5f80\u524d\u5bf9\u6700\u5c0f\u901f\u5ea6\u505a\u4e00\u4e2a\u9884\u5904\u7406:\n\n$ s[i] = \\min ( s[i] , s[i+1] + t[i+1] - t[i] )$ \n\n\u8fd9\u6837\u4e00\u6765\u5c31\u6d88\u9664\u4e86\u540e\u6548\u6027\uff0c\u8be6\u7ec6\u5904\u7406\u89c1\u4ee3\u7801\u3002\n\n```cpp\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint n,l,ans;\nint f[100005];\nstruct node{\n    int s,t;\n}a[100005];\ninline bool cmp(const node x,const node y){\n    return x.t<y.t; //\u6309\u9ad8\u5ea6\u6392\u5e8f \n}\ninline int max(int x,int y){\n\treturn x>y?x:y;\n}\ninline int min(int x,int y){\n\treturn x<y?x:y;\n}\nint main(){\n    scanf(\"%d%d\",&l,&n);\n    for(int i=1;i<=n;++i)\n    scanf(\"%d%d\",&a[i].t,&a[i].s);\n    sort(a+1,a+1+n,cmp);\n    f[0]=1;a[n+1].s=1e+9;a[n+1].t=l;//\u8bbe\u7f6e\u8fb9\u754c \n    for(int i=n;i>=1;--i)\n        a[i].s=min(a[i].s,a[i+1].s+a[i+1].t-a[i].t);\n    for(int i=1;i<=n+1;++i){\n        f[i]=min(a[i].s,f[i-1]+a[i].t-a[i-1].t);\n        ans=max((f[i]+f[i-1]+a[i].t-a[i-1].t)/2,ans);\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n",
        "postTime": 1636630606,
        "uid": 434929,
        "name": "Usada_Pekora",
        "ccfLevel": 7,
        "title": "P2968"
    },
    {
        "content": "```cpp\n//\u8fd9\u9053\u9898\u7b97\u6cd5\u662f\u849f\u84bb\u81ea\u5df1\u60f3\u51fa\u6765\u7684 \u7ade\u8d5b\u8bfe\u4e0a\u88ab\u5751\u4e86\u4e00\u8282\u8bfe \u7ec8\u4e8e\u60f3\u4e86\u51fa\u6765\u4e00\u4e2a\u65b9\u6cd5\n//\u4ee3\u7801\u53ef\u80fd\u6709\u70b9\u957f \u4f46\u5927\u90e8\u5206\u90fd\u662f\u4ee3\u7801\u98ce\u683c\u539f\u56e0orz \u6838\u5fc3\u4ee3\u7801\u5e76\u4e0d\u591a\n//\u6211\u4f1a\u5c3d\u91cf\u5199\u51fa\u8be6\u7ec6\u7684\u89e3\u91ca \u611f\u8c22\u89c2\u770b\u3002\n/*\n\u8fd9\u91cc\u6211\u7684\u7b97\u6cd5\u662f\uff1a\n1.\u6b63\u5411\u626b\u4e00\u904d\u8f6c\u5f2f\u5904\n2.\u53cd\u5411\u626b\u4e00\u904d\u8f6c\u5f2f\u5904\n3.\u6b63\u5411\u626b\u4e00\u904d\u7b97\u51fa\u4e24\u70b9\u4e4b\u95f4\u53ef\u8fbe\u5230\u7684\u6700\u5927\u901f\u5ea6\n\u90a3\u4e48\uff0c\u600e\u4e48\u626b\u5462\uff1f\n\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0 \u4ece\u4e0a\u4e00\u4e2a\u70b9(\u8f6c\u5f2f\u5904 \u4e0b\u6587\u7b80\u79f0\"\u70b9\")\u5230\u4e0b\u4e00\u4e2a\u70b9 \u901f\u5ea6\u7684\u589e\u52a0\u548c\u51cf\u5c11\u662f\u53d7\u5230\u8ddd\u79bb\u9650\u5236\u7684 \u800c\u4e14\u53d8\u5316\u91cf\u548c\u8ddd\u79bb\u76f8\u540c\u3002\n\u8fd9\u6837\u5982\u679c\u753b\u51fa\u4e00\u4e2a\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfb \u4ee5x\u8f74\u4e3at(\u8ddd\u79bb)\uff0c\u4ee5y\u8f74\u4e3as(\u901f\u5ea6) \u63cf\u4e0a\u6240\u6709\u7684\u70b9\u4e4b\u540e \u4ed6\u4eec\u7684\u8fde\u7ebf\u7684\u659c\u7387 \u5c31\u662f\u6211\u4eec\u201c\u626b\u201d\u7684\u5173\u952e\u3002\n\u7b80\u5355\u6765\u8bf4\uff0c\u6b63\u5411\u626b\u7684\u65f6\u5019\u5c31\u662f\u659c\u7387<=1\u7684\u6211\u4eec\u4e0d\u7ba1\uff0c\u659c\u7387>1\u7684\u6211\u4eec\u628a\u659c\u7387\u641e\u6210\u659c\u7387=1\uff0c\u800c\u53cd\u5411\u7684\u65f6\u5019\u5c31\u662f\u659c\u7387>-1\u7684\u6211\u4eec\u641e\u6210\u659c\u7387=-1\u3002\n\u600e\u4e48\u641e\u5462\uff1f\n\u5148\u6b63\u5411\u679a\u4e3e\u6bcf\u4e00\u4e2a\u70b9 \u5982\u679c\u5f53\u524d\u70b9\u9650\u901f\u6bd4\u4e0a\u4e00\u4e2a\u70b9\u9650\u901f\u5927 \u4e14\u4e24\u70b9\u4e4b\u95f4\u8ddd\u79bb\u5c0f\u4e8e\u9650\u901f\u4e4b\u5dee \u90a3\u4e48\u5c31\u628a\u679a\u4e3e\u5230\u7684\u70b9\u7684\u9650\u901f\u964d\u4f4e\u5230\u4e0a\u4e00\u4e2a\u70b9\u7684\u9650\u901f+\u4e24\u70b9\u4e4b\u95f4\u8ddd\u79bb(\u5373Bessie\u80fd\u591f\u5728\u8fd9\u6bb5\u8ddd\u79bb\u5185\u8fbe\u5230\u7684\u6700\u5927\u901f\u5ea6) \u5982\u679c\u5f53\u524d\u70b9\u6bd4\u4e0a\u4e00\u4e2a\u70b9\u9650\u901f\u5c0f \u90a3\u5c31\u5148\u4e0d\u7ba1 \u7b49\u7740\u53cd\u5411\u626b\u63cf\u5e2e\u6211\u4eec\u5904\u7406\u3002\n\u53cd\u5411\u7684\u65f6\u5019\uff1a\u57fa\u672c\u76f8\u540c \u5982\u679c\u4e0a\u4e00\u4e2a\u70b9\u9650\u901f\u6bd4\u5f53\u524d\u9650\u901f\u5927 \u4e14\u4e24\u70b9\u4e4b\u95f4\u8ddd\u79bb\u5c0f\u4e8e\u9650\u901f\u4e4b\u5dee \u90a3\u4e48\u5c31\u5904\u7406\u4e0a\u4e00\u4e2a\u70b9\u7684\u9650\u901f\u5230\u5f53\u524d\u70b9\u7684\u9650\u901f+\u4e24\u70b9\u8ddd\u79bb \u5982\u679c\u4e0a\u4e00\u4e2a\u70b9\u6bd4\u5f53\u524d\u70b9\u9650\u901f\u5c0f \u56e0\u4e3a\u6211\u4eec\u5728\u6b63\u5411\u7684\u65f6\u5019\u5df2\u7ecf\u5904\u7406\u8fc7\u4e86 \u6240\u4ee5\u4e0d\u7ba1\u3002\n\u6700\u7ec8\u6211\u4eec\u4f1a\u5f97\u5230\u4e00\u4e2a\u6f02\u4eae\u7684\u5750\u6807\u7cfb\u56fe\u8c61 \u800c\u806a\u660e\u7684\u4f60\u4eec\u4f1a\u53d1\u73b0 \u5176\u5b9e\u5728\u4e24\u70b9\u4e4b\u95f4\u7684\u8fd9\u6bb5\u8ddd\u79bb\u4e2d Bessie\u7684\u901f\u5ea6\u6ca1\u6709\u9650\u5236\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ef\u4ee5\u5728\u4e24\u70b9\u4e4b\u95f4\u5148\u52a0\u901f\u518d\u51cf\u901f\u5230\u9650\u901f\u5927\u5c0f \u8fd9\u6837\u5c31\u80fd\u5f97\u5230\u53ef\u80fd\u7684\u6700\u5927\u503c\u3002\n\u6240\u4ee5\u518d\u679a\u4e3e\u4e00\u904d\u6240\u6709\u7684\u70b9 \u4e0d\u8fc7\u8ba1\u7b97\u7684\u662f\u4e24\u70b9\u4e4b\u95f4\u7684\u6700\u5927\u901f\u5ea6(\u4e24\u70b9\u4e4b\u95f4\u7684\u6700\u5927\u901f\u5ea6>=\u9650\u901f\u8f83\u9ad8\u7684\u70b9\u7684\u901f\u5ea6) \u5982\u4f55\u8ba1\u7b97\u5462\uff1f\u770b\u4ee3\u7801\u6ce8\u91caorz\n\u6700\u540e \u522b\u5fd8\u4e86\u51b2\u8fc7\u7ec8\u70b9\u7684\u901f\u5ea6\u6ca1\u6709\u9650\u5236 \u6240\u4ee5\u6bd4\u8f83\u4e00\u4e0b\u5f97\u5230\u7684\u7b54\u6848\u548c\u6700\u540e\u4e00\u4e2a\u70b9\u7684\u9650\u901f+\u4e0e\u7ec8\u70b9\u8ddd\u79bb\u3002\n*/\n#include<cstdio>\n#include<cctype>\n#include<cmath>\n#include<algorithm>\n\ninline int readin()//\u4f18\u5316\u8bfb\u5165\n{\n\tint x = 0;\n\tbool shit = false;\n\tchar ch = getchar();\n\tfor(;!isdigit(ch); ch = getchar()) (ch == '-') && (shit = true);\n\tfor(; isdigit(ch); ch = getchar()) x = (x << 3) + (x << 1) + ch - '0';\n\treturn shit ? -x : x;\n}\n\ninline int max(int x, int y)//\u624b\u5199max \u5feb\n{\n\treturn x > y ? x : y;\n}\n\nstruct node//\u7ed3\u6784\u4f53\u50a8\u5b58\u8f6c\u5f2f\u5904\u4fe1\u606f\n{\n\tint t;//\u79bb\u8d77\u70b9\u8ddd\u79bb\n\tint s;//\u9650\u901f\n}a[233333];\n\nint l, n, maxn;//l\u603b\u957f\u5ea6 n\u8f6c\u5f2f\u4e2a\u6570 maxn\u6700\u7ec8\u7b54\u6848\n\ninline bool cmp(node x, node y)//\u7ed3\u6784\u4f53\u6392\u5e8f\u6bd4\u8f83\n{\n\treturn x.t < y.t;\n}\n\nint main()\n{\n\t//freopen(\"testdata.in\", \"r\", stdin);\n\tl = readin();\n\tn = readin();\n\tfor(register int i = 1; i <= n; ++i)//\u5e38\u89c4\u8bfb\u5165\n\t{\n\t\ta[i].t = readin();\n\t\ta[i].s = readin();\n\t}\n\ta[0].t = 0;//\u521d\u59cb\u5316\u8d77\u70b9\u5904\u79bb\u8d77\u70b9\u8ddd\u79bb\u4e3a0(\u5e9f\u8bdd\n\ta[0].s = 1;//\u8fd9\u91cc\u8bbe\u7f6e\u521d\u901f\u5ea6\u4e3a1 \u9898\u5e72\u4e2d\u6709\u8bf4\u8fc7 \u522b\u5fd8\u4e86\n\tstd::sort(a + 1, a + n + 1, cmp);//\u6ce8\u610f\uff0c\u7ed9\u51fa\u7684\u8f6c\u5f2f\u987a\u5e8f\u53ef\u80fd\u4e0d\u662f\u6709\u5e8f\u7684\n    //\u63a5\u4e0b\u6765\u662f\u6838\u5fc3\u4ee3\u7801\n\tfor(register int i = 1; i <= n; ++i)//\u6b63\u5411\u626b\u4e00\u904d\u62d0\u5f2f\n\t{\n\t\tif(a[i].s > a[i - 1].s)//\u5982\u679c\u5f53\u524d\u70b9\u9650\u901f\u6bd4\u4e0a\u4e00\u4e2a\u8f6c\u5f2f\u5904\u9ad8\n\t\t{//\u6ce8:\u521d\u59cb\u72b6\u6001\u4e5f\u9700\u8981\u770b\u4f5c\u4e00\u4e2a\"\u8f6c\u5f2f\u5904\"\n\t\t\tif(a[i].t - a[i - 1].t < a[i].s - a[i - 1].s)\n\t\t\t{\n            \t//\u5982\u679c\u4e24\u70b9\u4e4b\u95f4\u8ddd\u79bb\u6bd4\u9650\u901f\u4e4b\u5dee\u8981\u5c0f \u8bc1\u660e\u4ece\u4e0a\u4e00\u4e2a\u70b9\u5230\u5f53\u524d\u70b9(i)\u4e0d\u53d7\u901f\u5ea6\u9650\u5236 \u53ef\u4ee5\u4e00\u76f4\u589e\u52a0 \u901f\u5ea6\u589e\u52a0\u7684\u91cf\u5c31\u662f\u4e24\u70b9\u8ddd\u79bb \u5373a[i].t-a[i-1].t \u7136\u540e\u52a0\u4e0a\u4e0a\u4e00\u4e2a\u70b9\u7684\u901f\u5ea6\n\t\t\t\ta[i].s = a[i].t - a[i - 1].t + a[i - 1].s;\n\t\t\t}\n            //\u5176\u4ed6\u60c5\u51b5\u4e0d\u7ba1\n\t\t}\n\t}\n\tfor(register int i = n; i >= 1; --i)//\u53cd\u5411\u626b\u63cf\n\t{\n\t\tif(a[i - 1].s > a[i].s)//\u4e4b\u524d\u8bb2\u7684\u6bd4\u8f83\u6e05\u695a\u4e86 \u770b\u4ee3\u7801\n\t\t{\n\t\t\tif(a[i].t - a[i - 1].t < a[i - 1].s - a[i].s)\n\t\t\t{\n\t\t\t\ta[i - 1].s = a[i].t - a[i - 1].t + a[i].s;\n\t\t\t}\n\t\t}\n\t}\n\tfor(register int i = 1; i <= n; ++i)//\u6bd4\u8f83\u4e00\u904d\n\t{\n\t\tint ta = a[i - 1].t + abs(a[i].s - a[i - 1].s);\n        //\u6211\u4eec\u5982\u4f55\u8ba1\u7b97\u4e24\u70b9\u4e4b\u95f4\u901f\u5ea6\u7684\u6700\u5927\u503c\u5462\uff1f\u5f88\u660e\u663e\u6211\u4eec\u6784\u9020\u7684\u662f\u4e00\u4e2a\u659c\u8fb9\u6c34\u5e73\u653e\u7f6e\u7684\u7b49\u8170\u76f4\u89d2\u4e09\u89d2\u5f62 \u4f7f\u4e24\u4e2a\u70b9\u7d27\u9760\u5728\u76f4\u89d2\u8fb9\u4e0a \u76f4\u89d2\u6240\u5728\u7684\u70b9\u5c31\u662f\u6700\u5927\u503c \u4e0d\u8fc7\u9700\u8981\u4e0b\u53d6\u6574\n        //ta\u5c31\u662f \u4e0e\u5f53\u524d\u70b9\u5173\u4e8e\u4e09\u89d2\u5f62\u659c\u8fb9\u4e0a\u7684\u9ad8\u5bf9\u79f0\u7684\u70b9\u7684\u6a2a\u5750\u6807 ta=\u4e0a\u4e00\u4e2a\u70b9\u7684\u6a2a\u5750\u6807+\u4e24\u70b9\u9650\u901f\u4e4b\u5dee \u753b\u4e2a\u56fe\u5c31\u80fd\u6e05\u695a\u660e\u767d\u5566 \n\t\tint sa = max(a[i].s, a[i - 1].s);\n        //sa\u662f\u5bf9\u79f0\u70b9\u7684\u7eb5\u5750\u6807 sa=\u4e24\u70b9\u95f4\u9650\u901f\u8f83\u5927\u503c\n\t\tint ans = (a[i].t - ta) / 2 + sa;\n        //\u7cbe\u9ad3 \u76f4\u89d2\u70b9\u7eb5\u5750\u6807\u662f\u5bf9\u79f0\u4e24\u70b9\u7684\u8ddd\u79bb/2(\u4e0b\u53d6\u6574)+sa\n\t\tmaxn = max(maxn, ans);\n        //\u66f4\u65b0\u7b54\u6848\n        //\u53ef\u80fd\u6709\u540c\u5b66\u4f1a\u95ee\uff1a\u9047\u5230\u524d\u4e00\u4e2a\u70b9\u6bd4\u540e\u4e00\u4e2a\u70b9\u9ad8\u7684\u60c5\u51b5\u600e\u4e48\u529e\uff1f\u4f60\u8fd9\u4e2a\u4e0d\u5c31\u51c9\u4e86\u5417\uff1f\u5176\u5b9e\u5e76\u4e0d\u662f \u5982\u679c\u5206\u60c5\u51b5\u8ba8\u8bba\uff0c\u6700\u7ec8\u5316\u7b80\u51fa\u7684\u5f0f\u5b50\u662f\u4e00\u6a21\u4e00\u6837\u7684\u3002\n\t}\n\tmaxn = max(maxn, l - a[n].t + a[n].s);//\u6bd4\u8f83\u7ec8\u70b9 \u522b\u5fd8\u4e86\n\tprintf(\"%d\", maxn);\n\treturn 0;\n}\n```",
        "postTime": 1538063040,
        "uid": 55683,
        "name": "QianhanOfficial",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P2968 \u3010[USACO09DEC]\u96ea\u6a47Bobsledding\u3011"
    }
]