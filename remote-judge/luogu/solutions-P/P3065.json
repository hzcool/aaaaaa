[
    {
        "content": "## Description\n\n\u7ed9\u5b9a $n\\ (1 \\leq n \\leq 3 \\times 10^4)$ \u4e2a\u603b\u957f\u4e0d\u8d85\u8fc7 $m\\ (1 \\leq m \\leq 3 \\times 10^5)$ \u7684\u4e92\u4e0d\u76f8\u540c\u7684\u5b57\u7b26\u4e32\uff0c\u73b0\u5728\u4f60\u53ef\u4ee5\u4efb\u610f\u6307\u5b9a\u5b57\u7b26\u4e4b\u95f4\u7684\u5927\u5c0f\u5173\u7cfb\u3002\u95ee\u6709\u591a\u5c11\u4e2a\u4e32\u53ef\u80fd\u6210\u4e3a\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u4e32\uff0c\u5e76\u8f93\u51fa\u8fd9\u4e9b\u4e32\u3002\n\n## Solution\n\n\u770b\u5230\u4e0e\u5b57\u5178\u5e8f\u6709\u5173\u7684\u95ee\u9898\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u5efa\u4e00\u68f5 **Trie(\u5b57\u5178\u6811)** \u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u5b83\u7684\u5b57\u5178\u5e8f\u662f\u6240\u6709\u5b57\u7b26\u4e32\u4e2d\u6700\u5c0f\u7684\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u4e2a\u5b57\u7b26\u4e32\u7684\u7b2c $i$ \u4e2a\u5b57\u6bcd \u5728 **Trie** \u7684\u7b2c $i$ \u5c42\uff08\u6839\u8282\u70b9\u7b97\u7b2c $0$ \u5c42\uff09\u7684\u6240\u6709\u5b57\u6bcd\u4e2d \u5b57\u5178\u5e8f\u6700\u5c0f\u3002\n\n\u8bbe\u8fd9\u4e2a\u5b57\u7b26\u4e32\u7684\u7b2c $i$ \u4e2a\u5b57\u6bcd\u4e3a $u$\uff0c\u6211\u4eec\u53ef\u4ee5\u8fde\u5355\u5411\u8fb9 $u \\to v$\uff0c\u8868\u793a\u6211\u4eec\u6307\u5b9a\u4e86 $u$ \u7684\u5b57\u5178\u5e8f\u6bd4 $v$ \u5c0f\uff0c\u5176\u4e2d $v$ \u662f\u7b2c $i$ \u5c42\u7684\u5176\u5b83\u5b57\u6bcd\u3002\u82e5\u8fd9\u4e2a\u5b57\u7b26\u4e32\u662f\u5176\u5b83\u67d0\u4e2a\u5b57\u7b26\u4e32\u7684\u524d\u7f00\uff0c\u5219\u8fd9\u4e2a\u5b57\u7b26\u4e32\u4e0d\u53ef\u80fd\u6210\u4e3a\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u4e32\uff0c\u6bd4\u5982\u8bf4 $abba$ \u7684\u5b57\u5178\u5e8f\u4e00\u5b9a\u6bd4 $ab$ \u5927\u3002\u5f53 $26$ \u4e2a\u5b57\u6bcd\u95f4\u7684\u5173\u7cfb\u5f62\u6210\u73af\u65f6\uff0c\u4e5f\u4e00\u5b9a\u4e0d\u80fd\u6210\u4e3a\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u4e32\u3002\n\n\u600e\u4e48\u5224\u65ad\u662f\u5426\u5f62\u6210\u73af\u5462\uff1f\u53ef\u4ee5\u7528 $\\rm tarjan$ \u6216\u8005 **\u62d3\u6251\u6392\u5e8f** \u3002\n\n\u8fd9\u91cc\u6211\u91c7\u7528\u4e86 **\u62d3\u6251\u6392\u5e8f**  \u3002\u6211\u4eec\u4ece\u5165\u5ea6\u4e3a $0$ \u7684\u70b9\u5f00\u59cb\uff0c\u4e0d\u65ad\u5220\u53bb\u4e0e\u5b83\u76f8\u8fde\u7684\u8fb9\uff0c\u5e76\u4fee\u6539\u5176\u5b83\u70b9\u7684\u5165\u5ea6\uff0c\u5c06\u65b0\u7684\u5165\u5ea6\u4e3a $0$ \u7684\u70b9\u52a0\u5165\u961f\u5217\u3002\u82e5\u961f\u5217\u5df2\u7a7a\uff0c\u4f46\u8fd8\u5b58\u5728\u5165\u5ea6\u4e0d\u4e3a $0$ \u7684\u70b9\uff0c\u5219\u8bf4\u660e\u56fe\u5b58\u5728\u73af\uff0c\u53cd\u4e4b\u5219\u6709\u89e3\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(26m)$ \u3002\n\n## Code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\n\ntemplate <class T>\ninline void read(T &x) {\n    x = 0;\n    char c = getchar();\n    bool f = 0;\n    for (; !isdigit(c); c = getchar()) f ^= c == '-';\n    for (; isdigit(c); c = getchar()) x = x * 10 + (c ^ 48);\n    x = f ? -x : x;\n}\n\ntemplate <class T>\ninline void write(T x) {\n    if (x < 0) {\n        putchar('-');\n        x = -x;\n    }\n    T y = 1;\n    int len = 1;\n    for (; y <= x / 10; y *= 10) ++len;\n    for (; len; --len, x %= y, y /= 10) putchar(x / y + 48);\n}\n\nconst int MAXN = 3e4, MAXM = 3e5;\nint n, ans;\nstring s[MAXN + 5];\nbool ok[MAXN + 5];\nstruct Trie {\n    int tot, in[26], e[26][26], ch[MAXM + 5][26];\n    bool ed[MAXM + 5];\n    queue<int> q;\n    \n    inline void insert(string x) {\n        int u = 1, len = x.size();\n        for (int i = 0; i < len; ++i) {\n            int v = x[i] - 'a';\n            if (!ch[u][v]) ch[u][v] = ++tot;\n            u = ch[u][v];\n        }\n        ed[u] = 1;\n    }//\u63d2\u5165 \n    inline void topoSort() {\n        for (; !q.empty(); q.pop());\n        for (int i = 0; i < 26; ++i)\n            if (!in[i]) q.push(i);\n        for (; !q.empty(); ) {\n            int u = q.front();\n            q.pop();\n            for (int v = 0; v < 26; ++v)\n                if (e[u][v]) {\n                    --in[v];\n                    if (!in[v]) q.push(v);\n                }\n        }\n    }//\u62d3\u6251\u6392\u5e8f \n    inline bool find(string x) {\n        int u = 1, len = x.size();\n        memset(e, 0, sizeof (e));\n        memset(in, 0, sizeof (in));\n        for (int i = 0; i < len; ++i) {\n            if (ed[u]) return 0;//\u662f\u5176\u5b83\u5b57\u7b26\u4e32\u7684\u524d\u7f00\uff0c\u65e0\u89e3\n            int v = x[i] - 'a';\n            for (int j = 0; j < 26; ++j)\n                if (v != j && ch[u][j] && !e[v][j]) {\n                    e[v][j] = 1;//\u4e0e\u540c\u4e00\u5c42\u5176\u5b83\u5b57\u6bcd\u8fde\u8fb9 \n                    ++in[j];//\u7edf\u8ba1\u5165\u5ea6 \n                }\n            u = ch[u][v];\n        }\n        topoSort();\n        for (int i = 0; i < 26; ++i)\n            if (in[i]) return 0;//\u5b58\u5728\u73af\uff0c\u65e0\u89e3 \n        return 1;\n    }//\u68c0\u9a8c\u5b57\u7b26\u4e32 \n} tr;\n\nint main() {\n    read(n);\n    tr.tot = 1;\n    for (int i = 1; i <= n; ++i) {\n        cin >> s[i];\n        tr.insert(s[i]);//\u63d2\u5165\u5230 Trie \u4e2d \n    }\n    for (int i = 1; i <= n; ++i)\n        if (tr.find(s[i])) {\n            ++ans;//\u7edf\u8ba1\u4e2a\u6570 \n            ok[i] = 1;//\u6807\u8bb0\u5408\u6cd5\u5b57\u7b26\u4e32 \n        }\n    write(ans);\n    putchar('\\n');\n    for (int i = 1; i <= n; ++i)\n        if (ok[i]) cout << s[i] << '\\n';\n    return 0;\n}\n```\n\n",
        "postTime": 1557097928,
        "uid": 32139,
        "name": "Heartlessly",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3065 \u3010[USACO12DEC]\u7b2c\u4e00!First!\u3011"
    },
    {
        "content": "\u5148\u8003\u8651\u4e00\u4e2a\u5b57\u7b26\u4e32\uff08\u4e0d\u59a8\u8bbe\u5176\u4e3aaaba\uff09\u5728\u4ec0\u4e48\u6392\u5e8f\u4e0b\u4f1a\u6392\u5728\u7b2c\u4e00\u4e2a\n\n- \u4e0d\u80fd\u6709\u4efb\u4f55\u5b57\u7b26\u4e32\u662f\u4ed6\u7684\u524d\u7f00\uff08\u4f8b\u5982aa\u662f\uff0cba\u4e0d\u662f\uff09\u3002\n\n- \u5bf9\u4e8e\u6bcf\u4e2a\u5176\u4ed6\u5b57\u7b26\u4e32\uff08\u5982abcd\uff09\uff0c\u627e\u5230\u4e0e\u539f\u5b57\u7b26\u4e32\u7b2c\u4e00\u4e2a\u4e0d\u540c\u7684\u5b57\u6bcd\uff0c\u8fd9\u91cc\u662f\u7b2c\u4e8c\u4f4da\u548cb\u4e0d\u540c\uff0c\u6240\u4ee5a\u8981\u6392\u5728b\u524d\u9762\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u5982\u679c\u51fa\u73b0\u8fd9\u6837\u7684\u4e00\u4e2a\u5faa\u73af\uff08\u5982a\u5728b\u524d,b\u5728a\u524d\uff09\uff0c\u5219\u8be5\u5b57\u7b26\u4e32\u4e0d\u80fd\u6392\u5728\u7b2c\u4e00\u4e2a\uff0c\u5426\u5219\u53ef\u4ee5\u3002\n\n\u5224\u65ad\u524d\u7f00\u53ef\u4ee5\u7528trie\uff0c\u5224\u65ad\u5faa\u73af\u53ef\u4ee5\u7528\u62d3\u6251\u6392\u5e8f\n\n\u7136\u540e\u5c31\u662f\u4ee3\u7801\u4e86\uff1a\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <queue>\n#include <cstring>\n#include <string.h>\nusing namespace std;\n\nconst int MAXN=300005;\nstruct trie{\n\tint next[27];\n\tint rank;\n}t[MAXN];\nint h[27][27],a[27],cnt=1,tot=0,n,ans=0;\nstring p[MAXN];\nchar s[MAXN];\nbool c[MAXN];\nqueue <int> q;\n\nvoid addtrie(int r){\n\tint id=1;\n\tfor(int i=0;s[i];i++){\n\t\tif(!t[id].next[s[i]-96]){\n\t\t\tcnt++;\n\t\t\tt[id].next[s[i]-96]=cnt;\n\t\t}\n\t\tid=t[id].next[s[i]-96];\n\t}\n\tt[id].rank=r;\n}\n\n\nvoid dfs1(int d,int id){\n\tif(!s[d]){\n\t\treturn;\n\t}\n\tfor(int i=1;i<=26;i++){\n\t\tif(t[id].next[i]){\n\t\t\tif(i!=s[d]-96){\n\t\t\t\th[s[d]-96][i]=1;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tdfs1(d+1,t[id].next[i]);\n\t\t\t}\n\t\t}\n\t}\n}\n\nbool check(){\n\tint res=26;\n\tmemset(h,0,sizeof(h));\n\tmemset(a,0,sizeof(a));\n\twhile(!q.empty()) q.pop();\n\ttot++;\n\tdfs1(0,1);\n\tfor(int i=1;i<=26;i++){\n\t\tfor(int j=1;j<=26;j++){\n\t\t\tif(h[i][j]){\n\t\t\t\ta[j]++;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=26;i++){\n\t\tif(!a[i]){\n\t\t\tq.push(i);\n\t\t}\n\t}\n\twhile(!q.empty()){\n\t\tint u=q.front();q.pop();\n\t\tres--;\n\t\tfor(int i=1;i<=26;i++){\n\t\t\tif(h[u][i]){\n\t\t\t\ta[i]--;\n\t\t\t\th[u][i]=0;\n\t\t\t\tif(a[i]==0){\n\t\t\t\t\tq.push(i);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn res==0;\n}\n\nvoid dfs2(int d,int id){\n\tif(t[id].rank){\n\t\tif(check()){\n\t\t\tans++;\n\t\t\tc[t[id].rank]=1;\n\t\t}\n\t\treturn;\n\t}\n\tfor(int i=1;i<=26;i++){\n\t\tif(t[id].next[i]){\n\t\t\ts[d]=i+96;\n\t\t\tdfs2(d+1,t[id].next[i]);\n\t\t\ts[d]=0;\n\t\t}\n\t}\n}\n\nint main(){\n\tcin>>n;\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%s\",s);\n\t\tp[i]=s;\n\t\taddtrie(i);\n\t}\n\tmemset(s,0,sizeof(s));\n\tdfs2(0,1);\n\tcout<<ans<<endl;\n\tfor(int i=1;i<=n;i++){\n\t\tif(c[i]){\n\t\t\tcout<<p[i]<<endl;\n\t\t}\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1560664999,
        "uid": 89929,
        "name": "wanghanjun",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3065 \u3010[USACO12DEC]\u7b2c\u4e00!First!\u3011"
    },
    {
        "content": "\u539f\u6587\u5728\u6b64 https://www.jianshu.com/p/6fb17406b66d[](https://www.jianshu.com/p/6fb17406b66d) \u539f\u6587\u6709\u56fe\uff0cluogu\u4e0d\u4f1a\u63d2\u56fe\u3002\u3002\u3002\u3002\n\n\u56e0\u4e3a\u6d89\u53ca\u5230\u5b57\u5178\u5e8f\u7684\u95ee\u9898\uff0c\u90a3\u4e48\u5e94\u8be5\u80fd\u60f3\u5230\u5b57\u5178\u6811\u3002\u5f88\u663e\u7136\u5b57\u7b26\u4e32s1\u5982\u679c\u6bd4\u5b57\u7b26\u4e32s2\u7684\u5b57\u5178\u5e8f\u5c0f\u7684\u8bdd\uff0c\u53ea\u6709\u4e24\u79cd\u60c5\u51b5\uff0cs1\u662fs2\u7684\u524d\u7f00\uff1b\u4ee5\u53ca\u4ed6\u4eec\u6709\u76f8\u540c\u7684\u524d\u7f00\u5355\u5728\u76f8\u540c\u524d\u7f00\u540e\u9762\u7684\u90e8\u5206\u90a3\u4e00\u90e8\u5206s1\u7684\u4f18\u5148\u7ea7\u66f4\u5927\uff1b\n\n\u6240\u4ee5\u5c06\u6240\u4ee5\u5b57\u7b26\u4e32\u5efa\u6210\u4e00\u68f5\u5b57\u5178\u6811\uff0c\u7136\u540e\u518d\u5728\u5b57\u5178\u6811\u4e0a\u904d\u5386\u6bcf\u4e00\u4e32\u5b57\u7b26\u4e32\uff0c\u5982\u679c\u6709\u5b57\u7b26\u4e32\u5df2\u7ecf\u662f\u4ed6\u7684\u524d\u7f00\uff0c\u65e0\u8bba\u600e\u4e48\u6539\u53d826\u4e2a\u5b57\u6bcd\u7684\u6392\u5217\u4e5f\u65e0\u6d4e\u4e8e\u4e8b\uff0c\u5426\u5219\u5224\u65ad\u4f18\u5148\u7ea7\uff0c\u53ca\u4e0a\u4e00\u6bb5\u6240\u8bf4\u7684\u60c5\u51b5\u4e8c\uff1b \u5224\u65ad\u4f18\u5148\u7ea7\u6709\u4e2a\u5f88\u5de7\u7684\u529e\u6cd5---->\n\n\n\u5982\u56fe\u624b\u753b\u7684\u5341\u5206\u4e11\u964b\u4e0d\u8981\u4ecb\u610f\u54c8\n\n\u5b57\u7b26\u4e32s1 \u4e3a mma\n\u5b57\u7b26\u4e32s2 \u4e3a mmb\n\n\u73b0\u5728\u8981\u4f7fmmb\u7684\u4f18\u5148\u7ea7\u5927\u4e8emma\u7684\u4f18\u5148\u7ea7\uff0c\u90a3\u5982\u4f55\u5224\u65ad\u901a\u8fc726\u4e2a\u5b57\u6bcd\u7684\u53d8\u6362\u540emmb\u80fd\u5426\u4f18\u5148\u4e8emma\u5462\uff0c\u5e94\u8be5\u4e00\u773c\u770b\u51fa\u628aa\uff0cb\u4ea4\u6362\u4f4d\u7f6e\u540es2\u7684\u5b57\u5178\u5e8f\u5c31\u5c0f\u4e8es1\u4e86\uff0c\u90a3\u4e48\u63a5\u4e0b\u6765\u5c31\u662f\u8981\u627e\u5230\u4e00\u79cd\u8bc1\u660e\u7684\u65b9\u6cd5\uff1b\n\n\u4ed6\u4eec\u90fd\u6709\u76f8\u540c\u7684mm\u524d\u7f00\uff0c\u90a3\u4e48\u8981\u4f7fs2\u7684\u4f18\u5148\u7ea7\u5927\uff0c\u5c31\u8981\u4f7fb\u7684\u4f18\u5148\u7ea7\u5927\uff0c\u53ca\u76f8\u540c\u524d\u7f00\u540e\u9762\u90e8\u5206\u7684\u4f18\u5148\u7ea7\u5927\uff0c\u8ddf\u4e4b\u524d\u6240\u8bf4\u7684\u4e00\u6837\u3002\n\n\u8bbe\u8ba1\u5230\u4f18\u5148\u7ea7\u7684\u95ee\u9898\u6211\u4eec\u7ede\u5c3d\u8111\u6c41\u540e\u5e94\u8be5\u80fd\u60f3\u5230\u4e00\u4e2a\u53eb\u62d3\u6251\u5e8f\u7684\u795e\u5947\u7684\u4e1c\u897f\uff0c\u90a3\u4e48\u518d\u4e0a\u4e00\u5f20\u4e11\u56fehh\n\n\n\u6784\u9020\u8fd9\u6837\u7684\u56fe\uff0c\u6b64\u65f6a\uff0cb\u5728\u62d3\u6251\u6392\u5e8f\u540e\u7684\u987a\u5e8f\u662f\u5728\u540c\u4e00\u5c42\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u778e\u628aa\uff0cb\u4ea4\u6362\u4f4d\u7f6e\u90fd\u53ef\u4ee5\uff0c\u6545\u53ef\u4ee5\u5c06a\uff0cb\u4ea4\u6362\u4f4d\u7f6e\u4f7f\u5f97s2\u7684\u4f18\u5148\u7ea7\u5927\u4e8es1\uff1b\n\n\u518d\u6765\u4e00\u4e2a\u53cd\u4f8b\u52a0\u6df1\u7406\u89e3\n\n\n\u65e0\u6cd5\u6784\u6210\u62d3\u6251\u5e8f\uff0c\u56e0\u4e3aa\uff0cb\u65e0\u8bba\u600e\u4e48\u4ea4\u6362\u4f4d\u7f6e\uff0cmmab\u90fd\u5728mmba\u524d\u9762\n\n\u5e94\u8be5\u5f88\u6e05\u695a\u4e86\u5427\uff01\uff01\n\n\u5982\u679c\u8fd8\u4e0d\u7406\u89e3\u5efa\u8bae\u81ea\u5df1\u591a\u753b\u51e0\u4e2a\uff0c\u4e00\u5b9a\u8981\u52c7\u4e8e\u52a8\u624b\uff01\uff01\n\n\u4e0b\u9762\u4e0a\u4ee3\u7801\u55bd\uff01\uff01\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<string>\n#include<algorithm>\n#include<queue>\n#include<vector>\nusing namespace std;\nstruct Node{\n\tint son[27],end;\n}N[300010];\nvector<int> E[27];\nint n,cnt=1,ind[30010],ans_sum,used[27][27];\nstring ans[30010],s[30010];\nvoid insert(string s){\n\tint now=1;\n\tfor(int i=0;i<s.length();i++){\n\t\tif(!N[now].son[s[i]-'a']) N[now].son[s[i]-'a']=++cnt;\n\t\tnow=N[now].son[s[i]-'a'];\n\t}\n\tN[now].end++;\n}\nint work(string s){\n\tint now=1;\n\tfor(int i=0;i<s.length();i++){\n\t\tint t=s[i]-'a';\n\t\tif(N[now].end) return 0;\n\t\tfor(int j=0;j<26;j++){\n\t\t\tif(N[now].son[j]&&t!=j){\n\t\t\t\tE[t].push_back(j);\n\t\t\t\tind[j]++;\n\t\t\t}\n\t\t}\n\t\tnow=N[now].son[t];\n\t}\n\treturn 1;\n}\nint check(){\n\tqueue<int> q;\n\tfor(int i=0;i<26;i++) if(!ind[i]) q.push(i);\n\twhile(!q.empty()){\n\t\tint u=q.front(); q.pop();\n\t\tfor(int i=0;i<E[u].size();i++){\n\t\t\tind[E[u][i]]--;\n\t\t\tif(!ind[E[u][i]]) q.push(E[u][i]);\n\t\t}\n\t}\n\tfor(int i=0;i<26;i++) if(ind[i]) return 0;\n\treturn 1;\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tcin>>s[i];\n\t\tinsert(s[i]);//\u5efa\u5b57\u5178\u6811 \n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tmemset(used,0,sizeof(used));\n\t\tmemset(ind,0,sizeof(ind));\n\t\tfor(int j=0;j<27;j++) E[j].clear(); \n\t\tif(!work(s[i])) continue;//\u5982\u679c\u6709\u4eba\u662f\u5b83\u7684\u524d\u7f00\u8fd4\u56de0\uff0c\u76f4\u63a5\u4e0d\u5e72\u4e86\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u987a\u4fbf\u5efa\u597d\u56fe\uff0c\u51c6\u5907\u63a5\u4e0b\u6765\u62d3\u6251\u6392\u5e8f \n\t\tif(check()) ans[++ans_sum]=s[i];//\u5982\u679c\u7b26\u5408\u62d3\u6251\u5e8f \u8bb0\u5f55\u7b54\u6848 \n \t}\n \tprintf(\"%d\\n\",ans_sum);\n \tfor(int i=1;i<=ans_sum;i++) cout<<ans[i]<<endl; \n\treturn 0;\n}\n```",
        "postTime": 1538924273,
        "uid": 37585,
        "name": "liuxu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3065 \u3010[USACO12DEC]\u7b2c\u4e00!First!\u3011"
    },
    {
        "content": "\u62ff\u5230rk1\u4e86(\\*\uffe3\u25bd)u\u250c\u2510\uff44(\u25bd\uffe3\\*)\n\ntrie\u6811+\u62d3\u6251\u6392\u5e8f\n\n\u5f88\u88f8\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nint n;\nstring s[30008];\nint ch[300008][28],num,ind[28];\nbool vis[300008],used[28][28],f;\nint ans[30008],num_ans;\nint nume,head[28],to[908],nxt[908];\ndeque<int> q;\ninline void addedge(int x,int y)\n{\n    ++nume;to[nume]=y;nxt[nume]=head[x];head[x]=nume;\n}\ninline void update(string x)\n{\n    int u=0,t;\n    for(int i=0;i<x.size();i++){\n        t=x[i]-'a';\n        if(!ch[u][t]){\n            ch[u][t]=++num;\n        }\n        u=ch[u][t];\n    }\n    vis[u]=1;\n}\ninline void solve(string x)\n{\n    int u=0,t;\n    for(int i=0;i<x.size();i++){\n        t=x[i]-'a';\n        if(vis[u]){\n            f=1;\n            return;\n        }\n        for(int j=0;j<26;j++){\n            if(ch[u][j]&&j!=t&&!used[t][j]){\n                used[t][j]=1;\n                addedge(t,j);\n                ind[j]++;\n            }\n        }\n        u=ch[u][t];\n    }\n}\ninline bool ok()\n{\n    for(int i=0;i<26;i++){\n        if(!ind[i])    q.push_back(i);\n    }\n    while(!q.empty()){\n        int now=q.front();q.pop_front();\n        for(int i=head[now];i;i=nxt[i]){\n            ind[to[i]]--;\n            if(!ind[to[i]]){\n                q.push_back(to[i]);\n            }\n        }\n    }\n    for(int i=0;i<26;i++){\n        if(ind[i]){\n            return 0;\n        }\n    }\n    return 1;\n}\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin>>n;\n    for(int i=1;i<=n;i++){\n        cin>>s[i];\n        update(s[i]);\n    }\n    for(int i=1;i<=n;i++){\n        nume=0;\n        q.clear();\n        f=0;\n        memset(head,0,sizeof(head));\n        memset(ind,0,sizeof(ind));\n        memset(used,0,sizeof(used));\n        solve(s[i]);\n        if(f)    continue;\n        if(ok())    ans[++num_ans]=i;\n    }\n    printf(\"%d\\n\",num_ans);\n    for(int i=1;i<=num_ans;i++){\n        printf(\"%s\\n\",s[ans[i]].c_str());\n    }\n    return 0;\n}\n```",
        "postTime": 1504424052,
        "uid": 15090,
        "name": "littleming",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3065 \u3010[USACO12DEC]\u7b2c\u4e00!First!\u3011"
    },
    {
        "content": "\u4e00A\u554a \u5f00\u5fc3O(\u2229\\_\u2229)O~~\n\n\u5982\u679c\u4e00\u4e2a\u5b57\u7b26\u4e32\u60f3\u8981\u662f\u5b57\u5178\u5e8f\u6700\u5c0f \u9996\u5148\u6ca1\u6709\u522b\u7684\u4e32\u662f\u4ed6\u7684\u524d\u7f00\n\n\u7136\u540e \u5bf9\u4e8e\u6709\u5171\u540c\u524d\u7f00\u7684 \u5176\u4ed6\u7684\u4e0b\u4e00\u4e2a\u5b57\u6bcd\u7684\u4f18\u5148\u7ea7\u4e00\u5b9a\u8981\u6bd4\u6b64\u4e32\u4e0b\u4e00\u4e2a\u5b57\u6bcd\u540e\n\n\u4e0a\u9762\u7684\u8fc7\u7a0b\u5c31\u7528trie\u6811\u6765\u641e\u5b9a\u221a\n\n\u6240\u4ee5\u8fde\u4e00\u6761\u8fb9\u62d3\u6251\u6392\u5e8f\u4e00\u4e0b \u5982\u679c\u5168\u90e8\u6392\u5b8c\u90a3\u5c31\u53ef\u4ee5\u54af\n\n\u4e0d\u5982\u5927\u5bb6\u6765\u5237\u5237\u8bbf\u95ee\u91cf\u5427~   http://blog.csdn.net/cgh\\_andy/article/details/53023269\n",
        "postTime": 1478170133,
        "uid": 2637,
        "name": "cghAndy",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3065 \u3010[USACO12DEC]\u7b2c\u4e00!First!\u3011"
    }
]