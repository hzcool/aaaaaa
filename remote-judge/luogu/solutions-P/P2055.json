[
    {
        "content": "\u3010\u9898\u76ee\u63cf\u8ff0\u3011\n\n\u5b66\u6821\u653e\u5047\u4e86......\u6709\u4e9b\u540c\u5b66\u56de\u5bb6\u4e86\uff0c\u800c\u6709\u4e9b\u540c\u5b66\u5219\u6709\u4ee5\u524d\u7684\u597d\u670b\u53cb\u6765\u63a2\u8bbf\uff0c\u90a3\u4e48\u4f4f\u5bbf\u5c31\u662f\u4e00\u4e2a\u95ee\u9898\u3002\u6bd4\u5982A\u548cB\u90fd\u662f\u5b66\u6821\u7684\u5b66\u751f\uff0cA\u8981\u56de\u5bb6\uff0c\u800cC\u6765\u770bB\uff0cC\u4e0eA\u4e0d\u8ba4\u8bc6\u3002\u6211\u4eec\u5047\u8bbe\u6bcf\u4e2a\u4eba\u53ea\u80fd\u7761\u548c\u81ea\u5df1\u76f4\u63a5\u8ba4\u8bc6\u7684\u4eba\u7684\u5e8a\u3002\u90a3\u4e48\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u5c31\u662fB\u7761A\u7684\u5e8a\u800cC\u7761B\u7684\u5e8a\u3002\u800c\u5b9e\u9645\u60c5\u51b5\u53ef\u80fd\u975e\u5e38\u590d\u6742\uff0c\u6709\u7684\u4eba\u53ef\u80fd\u8ba4\u8bc6\u597d\u591a\u5728\u6821\u5b66\u751f\uff0c\u5728\u6821\u5b66\u751f\u4e4b\u95f4\u4e5f\u4e0d\u4e00\u5b9a\u90fd\u4e92\u76f8\u8ba4\u8bc6\u3002\u6211\u4eec\u5df2\u77e5\u4e00\u5171\u6709$n$\u4e2a\u4eba\uff0c\u5e76\u4e14\u77e5\u9053\u5176\u4e2d\u6bcf\u4e2a\u4eba\u662f\u4e0d\u662f\u672c\u6821\u5b66\u751f\uff0c\u4e5f\u77e5\u9053\u6bcf\u4e2a\u672c\u6821\u5b66\u751f\u662f\u5426\u56de\u5bb6\u3002\u95ee\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u65b9\u6848\u4f7f\u5f97\u6240\u6709\u4e0d\u56de\u5bb6\u7684\u672c\u6821\u5b66\u751f\u548c\u6765\u770b\u4ed6\u4eec\u7684\u5176\u4ed6\u4eba\u90fd\u6709\u5730\u65b9\u4f4f\u3002\n\n\u3010\u8f93\u5165\u8f93\u51fa\u683c\u5f0f\u3011\n\n- \u8f93\u5165\u683c\u5f0f\n\n\u7b2c\u4e00\u884c\u4e00\u4e2a\u6570$T$\u8868\u793a\u6570\u636e\u7ec4\u6570\u3002\u63a5\u4e0b\u6765$T$\u7ec4\u6570\u636e\uff0c\u6bcf\u7ec4\u6570\u636e\u7b2c\u4e00\u884c\u4e00\u4e2a\u6570$n$\u8868\u793a\u6d89\u53ca\u5230\u7684\u603b\u4eba\u6570\u3002\u63a5\u4e0b\u6765\u4e00\u884c$n$\u4e2a\u6570\uff0c\u7b2c$i$\u4e2a\u6570\u8868\u793a\u7b2c$i$\u4e2a\u4eba\u662f\u5426\u662f\u5728\u6821\u5b66\u751f($0$\u8868\u793a\u4e0d\u662f\uff0c$1$\u8868\u793a\u662f)\u3002\u518d\u63a5\u4e0b\u6765\u4e00\u884c$n$\u4e2a\u6570\uff0c\u7b2c$i$\u4e2a\u6570\u8868\u793a\u7b2c$i$\u4e2a\u4eba\u662f\u5426\u56de\u5bb6($0$\u8868\u793a\u4e0d\u56de\u5bb6\uff0c$1$\u8868\u793a\u56de\u5bb6\uff0c\u6ce8\u610f\u5982\u679c\u7b2c$i$\u4e2a\u4eba\u4e0d\u662f\u5728\u6821\u5b66\u751f\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u6570\u662f\u4e00\u4e2a\u968f\u673a\u7684\u6570\uff0c\u4f60\u5e94\u8be5\u5728\u8bfb\u5165\u4ee5\u540e\u5ffd\u7565\u5b83)\u3002\u63a5\u4e0b\u6765$n$\u884c\u6bcf\u884c$n$\u4e2a\u6570\uff0c\u7b2c$i$\u884c\u7b2c$j$\u4e2a\u6570\u8868\u793a$i$\u548c$j$\u662f\u5426\u8ba4\u8bc6($1$\u8868\u793a\u8ba4\u8bc6\uff0c$0$\u8868\u793a\u4e0d\u8ba4\u8bc6\uff0c\u7b2c$i$\u884c$i$\u4e2a\u7684\u503c\u4e3a$0$\uff0c\u4f46\u662f\u663e\u7136\u81ea\u5df1\u8fd8\u662f\u53ef\u4ee5\u7761\u81ea\u5df1\u7684\u5e8a)\uff0c\u8ba4\u8bc6\u7684\u5173\u7cfb\u662f\u76f8\u4e92\u7684\u3002\n\n- \u8f93\u51fa\u683c\u5f0f\n\n\u5bf9\u4e8e\u6bcf\u7ec4\u6570\u636e\uff0c\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u65b9\u6848\u5219\u8f93\u51fa\u201c^\\_^\u201d(\u4e0d\u542b\u5f15\u53f7)\u5426\u5219\u8f93\u51fa\u201cT\\_T\u201d(\u4e0d\u542b\u5f15\u53f7)\u3002(\u6ce8\u610f\u8f93\u51fa\u7684\u90fd\u662f\u534a\u89d2\u5b57\u7b26\uff0c\u5373\u4e09\u4e2a\u7b26\u53f7\u7684 ASCII \u7801\u5206\u522b\u4e3a94,84,95)\u3002\n\n\u3010\u8f93\u5165\u8f93\u51fa\u6837\u4f8b\u3011\n\n- \u8f93\u5165\u6837\u4f8b\n\n```cpp\n1\n3\n1 1 0\n0 1 0\n0 1 1\n1 0 0\n1 0 0\n\n```\n- \u8f93\u51fa\u6837\u4f8b\n\n```cpp\n^_^\n```\n\u3010\u6570\u636e\u8303\u56f4\u3011\n\n\u5bf9\u4e8e$30$%\u7684\u6570\u636e\u6ee1\u8db3$1 \\leq n \\leq 12$\u3002\n\n\u5bf9\u4e8e$100$%\u7684\u6570\u636e\u6ee1\u8db3$1 \\leq n \\leq 50$\uff0c$1 \\leq T \\leq 20$\u3002\n\n\u601d\u8def\uff1a\n\n\u8fd9\u9053\u9898\u5f88\u660e\u663e\u5c31\u662f\u4e00\u9053\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\u95ee\u9898\uff0c\u5f53\u7136\u8fd9\u9053\u9898\u4e5f\u53ef\u4ee5\u7528\u7f51\u7edc\u6d41\u6765\u505a\uff0c\u5728\u8bb2\u5b8c\u4e8c\u5206\u56fe\u5339\u914d\u7684\u601d\u8def\u540e\u5c31\u4f1a\u8bb2\u89e3\u6700\u5927\u6d41\u7684\u601d\u8def\u4e86\u3002\u4f60\u53ef\u4ee5\u5728[\u8fd9\u91cc](https://www.luogu.org/problemnew/show/P3386)\u68c0\u6d4b\u4f60\u7801\u7684\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u7684\u6a21\u677f\u7684\u6b63\u786e\u6027\u3002\u4e0b\u9762\u5c06\u8be6\u7ec6\u5730\u8bb2\u89e3\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u8fd9\u4e00\u7b97\u6cd5\u3002\u8fd9\u91cc\u63d0\u51fa\u7684\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u95ee\u9898\u4e0e\u6d1b\u8c37\u4e0a\u7684\u6a21\u677f\u7565\u6709\u4e0d\u540c\u3002\u5982\u679c\u4f60\u8fd8\u6ca1\u6709\u7406\u89e3\u4ec0\u4e48\u662f\u4e8c\u5206\u56fe\u5339\u914d\u7684\u8bdd\uff0c\u90a3\u4e48\u5c31\u53bb\u5b66\u4e60\u4e0b\u9762\u7684\u6559\u7a0b\u5427\uff08\u6559\u7a0b\u8f6c\u81ea\u300a\u554a\u54c8\uff01\u7b97\u6cd5\u300b\uff0c\u653e\u5165\u9898\u89e3\u65f6\u6709\u5220\u6539\uff09\u3002\n\n ![](https://cdn.luogu.com.cn/upload/pic/13688.png) \n\n\u5c0f\u54fc\u4eca\u5929\u548c\u5c0f\u4f19\u4f34\u4eec\u4e00\u8d77\u53bb\u6e38\u4e50\u573a\u73a9\uff0c\u7ec8\u4e8e\u53ef\u4ee5\u5750\u4e0a\u68a6\u5bd0\u4ee5\u6c42\u7684\u8fc7\u5c71\u8f66\u4e86\u3002\u8fc7\u5c71\u8f66\u7684\u6bcf\u4e00\u6392\u53ea\u6709\u4e24\u4e2a\u5ea7\u4f4d\uff0c\u4e3a\u4e86\u5b89\u5168\u8d77\u89c1\uff0c\u6bcf\u4e2a\u5973\u751f\u5fc5\u987b\u4e0e\u4e00\u4e2a\u7537\u751f\u5750\u4e00\u6392\u3002\u4f46\u662f\uff0c\u6bcf\u4e2a\u4eba\u90fd\u5e0c\u671b\u4e0e\u81ea\u5df1\u8ba4\u8bc6\u7684\u4eba\u5750\u5728\u4e00\u8d77\u3002\u4e3e\u4e2a\u4f8b\u5b50\u5427\uff0c$1$\u597d\u5973\u751f\u4e0e$1$\u53f7\u7537\u751f\u4e92\u76f8\u8ba4\u8bc6\uff0c\u56e0\u6b64$1$\u53f7\u5973\u751f\u53ef\u4ee5\u548c$1$\u597d\u7537\u751f\u5750\u5728\u4e00\u8d77\u3002\u53e6\u5916$1$\u53f7\u5973\u751f\u4e0e$2$\u53f7\u7537\u751f\u4e92\u76f8\u8ba4\u8bc6\uff0c\u56e0\u6b64\u4ed6\u4eec\u4e5f\u53ef\u4ee5\u5750\u5728\u4e00\u8d77\u3002\u50cf\u8fd9\u6837\u7684\u5173\u7cfb\u7684\u8fd8\u6709$2$\u53f7\u5973\u751f\u548c$2$\u53f7\u7537\u751f\u3001$2$\u53f7\u5973\u751f\u548c$3$\u53f7\u7537\u751f\u3001$3$\u53f7\u5973\u751f\u548c$1$\u53f7\u7537\u751f\u3002\u8bf7\u95ee\u5982\u4f55\u5b89\u6392\u5ea7\u4f4d\u624d\u80fd\u8ba9\u66f4\u591a\u7684\u4eba\u6ee1\u610f\u5462\uff1f\u8fd9\u4ec5\u4ec5\u662f\u4e2a\u4f8b\u5b50\u3002\u5b9e\u9645\u60c5\u51b5\u8981\u590d\u6742\u5f97\u591a\uff0c\u56e0\u4e3a\u5c0f\u54fc\u7684\u5c0f\u4f19\u4f34\u4eec\u5b9e\u5728\u662f\u592a\u591a\u4e86\u3002\n\n ![](https://cdn.luogu.com.cn/upload/pic/13773.png) \n\n\u9996\u5148\u6211\u4eec\u5148\u5c06\u8fd9\u4e2a\u95ee\u9898\u6a21\u578b\u5316\uff0c\u5982\u4e0a\u56fe\uff0c\u5de6\u8fb9\u7684\u9876\u70b9\u662f\u5973\u751f\uff0c\u53f3\u8fb9\u7684\u9876\u70b9\u662f\u7537\u751f\u3002\u5982\u679c\u9876\u70b9\u4e4b\u95f4\u53f3\u8fb9\uff0c\u5c31\u8868\u793a\u4ed6\u4eec\u53ef\u4ee5\u5750\u5728\u4e00\u8d77\uff0c\u50cf\u8fd9\u6837\u7279\u6b8a\u7684\u56fe\u53eb\u505a\u4e8c\u5206\u56fe\uff08\u6ce8\u610f\u4e8c\u5206\u56fe\u662f\u65e0\u5411\u56fe\u54e6\uff09\u3002\u5bf9\u4e8e\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u627e\u51fa\u4e24\u79cd\u5206\u914d\u65b9\u6848\uff0c\u5982\u4e0b\u3002\n\n ![](https://cdn.luogu.com.cn/upload/pic/13774.png) \n\n- **\u4e8c\u5206\u56fe\u7684\u5b9a\u4e49**\n\n> 1. \u5982\u679c\u4e00\u4e2a\u56fe\u7684\u6240\u6709\u7684\u9876\u70b9\u90fd\u53ef\u4ee5\u88ab\u5206\u6210$x$\u548c$y$\u4e24\u4e2a\u96c6\u5408\uff0c\u5e76\u4e14\u6240\u6709\u8fb9\u7684\u4e24\u4e2a\u9876\u70b9\u6070\u597d\u5c5e\u4e8e\u4e00\u4e2a\u96c6\u5408$x$\uff0c\u53e6\u4e00\u4e2a\u5c5e\u4e8e\u96c6\u5408$y$\uff0c\u5373\u6bcf\u4e2a\u96c6\u5408\u5185\u7684\u9876\u70b9\u6ca1\u6709\u8fb9\u76f8\u8fde\uff0c\u90a3\u4e48\u8fd9\u5f20\u56fe\u5c31\u662f\u4e8c\u5206\u56fe\u3002\n\n> 2. \u8bbe$G=(V,E)$\u662f\u4e00\u4e2a\u65e0\u5411\u56fe\uff0c\u5982\u679c\u9876\u70b9V\u53ef\u5206\u5272\u4e3a\u4e24\u4e2a\u4e92\u4e0d\u76f8\u4ea4\u7684\u5b50\u96c6$(A,B)$\uff0c\u5e76\u4e14\u56fe\u4e2d\u7684\u6bcf\u6761\u8fb9$(i,j)$\u6240\u5173\u8054\u7684\u4e24\u4e2a\u9876\u70b9$i$\u548c$j$\u5206\u522b\u5c5e\u4e8e\u8fd9\u4e24\u4e2a\u4e0d\u540c\u7684\u9876\u70b9\u96c6($i$ \u2208 $A$,$j$ \u2208 $B$)\uff0c\u5219\u79f0\u56fe$G$\u4e3a\u4e00\u4e2a\u4e8c\u5206\u56fe\u3002\n\n\u5f88\u663e\u7136\uff0c\u53f3\u8fb9\u7684\u5206\u914d\u65b9\u6848\u66f4\u597d\u3002\u6211\u4eec\u628a\u4e00\u79cd\u5206\u914d\u65b9\u6848\u53eb\u505a\u4e00\u79cd\u5339\u914d\u3002\u90a3\u4e48\u73b0\u5728\u7684\u95ee\u9898\u5c31\u6f14\u53d8\u6210\u4e86\u6c42\u4e8c\u5206\u56fe\u7684\u6700\u5927\u5339\u914d\uff08\u5339\u914d\u5bf9\u6570\u591a\uff09\u3002\u6c42\u6700\u5927\u5339\u914d\u5bb9\u6613\u60f3\u5230\u7684\u529e\u6cd5\u662f\uff1a\u627e\u51fa\u5168\u90e8\u5339\u914d\uff0c\u7136\u540e\u8f93\u51fa\u914d\u5bf9\u6570\u6700\u591a\u7684\u3002\u8fd9\u79cd\u65b9\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u975e\u5e38\u4e4b\u9ad8\u7684\uff0c\u90a3\u8fd8\u6709\u6ca1\u6709\u66f4\u597d\u7684\u529e\u6cd5\u5462\uff1f\n    \u6211\u4eec\u53ef\u4ee5\u8fd9\u4e48\u60f3\uff0c\u9996\u5148\u5148\u4ece\u5de6\u8fb9\u7684$1$\u53f7\u5973\u751f\u5f00\u59cb\u8003\u8651\u3002\u5148\u8ba9\u5979\u4e0e$1$\u53f7\u7537\u751f\u914d\u5bf9\uff0c\u914d\u5bf9\u6210\u529f\u540e\u5c31\u8003\u8651$2$\u53f7\u5973\u751f\u4e0e$2$\u53f7\u7537\u751f\u914d\u5bf9\uff0c\u63a5\u4e0b\u6765\u8003\u8651$3$\u53f7\u5973\u751f\u3002\u6b64\u65f6\u6211\u4eec\u53d1\u73b0$3$\u53f7\u5973\u751f\u53ea\u80fd\u591f\u8ddf$1$\u53f7\u7537\u751f\u914d\u5bf9\uff0c\u53ef\u662f$1$\u53f7\u7537\u751f\u5df2\u7ecf\u914d\u5bf9\u7ed9\u4e86$1$\u53f7\u5973\u751f\u4e86\uff0c\u600e\u4e48\u529e\uff1f\u5176\u5b9e\u6211\u4eec\u53ef\u4ee5\u8ba9$3$\u53f7\u5973\u751f\u8ddf$1$\u53f7\u7537\u751f\u8c08\u3002\u8ba9\u4e0e$1$\u53f7\u7537\u751f\u76f8\u914d\u5bf9\u7684$1$\u53f7\u5973\u751f\u4e00\u8d77\u8c08\uff0c\u770b\u770b\u4e00\u53f7\u5973\u751f\u80fd\u4e0d\u80fd\u591f\u627e\u5230\u5176\u4ed6\u7684\u540c\u4f34\u3002\u5982\u679c\u80fd\u591f\u627e\u5230\uff0c\u5c31\u8ba9$3$\u53f7\u5973\u751f\u4e0e$1$\u53f7\u7537\u751f\u5750\u5728\u4e00\u8d77\uff0c\u8ba9$1$\u53f7\u5973\u751f\u4e0e$1$\u53f7\u5973\u751f\u76f8\u914d\u5bf9\u7684\u90a3\u4e2a\u4eba\u5750\u5728\u4e00\u8d77\uff0c\u82e5$1$\u53f7\u5973\u751f\u627e\u5230\u7684\u5176\u4ed6\u7684\u53ef\u4ee5\u4e0e$1$\u53f7\u5973\u751f\u914d\u5bf9\u7684\u4eba\u5df2\u7ecf\u6709\u540c\u4f34\u7684\u8bdd\u5c31\u8ba9\u4ed6\u7684\u540c\u4f34\u53bb\u627e\uff0c\u770b\u770b\u5176\u4ed6\u4eba\u80fd\u5426\u4f5c\u4e3a\u5979\u7684\u540c\u4f34\uff0c\u7136\u540e\u4ee5\u6b64\u7c7b\u63a8\u3002\u82e5\u7b2c$i$\u540d\u7537\u751f\u627e\u5230\u4e86\u540c\u4f34\uff0c\u5c31\u5c06\u7b54\u6848\u52a0$1$\u3002\u521a\u624d\u7684\u5339\u914d\u8fc7\u7a0b\u5c31\u53eb\u505a**\u589e\u5e7f\u8def**\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u53ea\u8981\u627e\u5230\u4e86\u4e00\u6761\u589e\u5e7f\u8def\u7b54\u6848\u5c31\u4f1a\u52a0$1$\uff0c\u6700\u540e\u53ea\u9700\u8981\u8f93\u51fa\u7b54\u6848\u5373\u53ef\u3002\n\u4e0b\u9762\u7ed9\u51fa\u4e24\u7ec4\u6570\u636e\u7528\u4e8e\u68c0\u6d4b\u60a8\u7684\u7a0b\u5e8f\u7684\u6b63\u786e\u6027\uff08\u6ce8\uff1a$1$\u5230$3$\u53f7\u662f\u7537\u751f\uff0c$4$\u5230$6$\u53f7\u662f\u5973\u751f\uff09\uff1a\n\n- \u6570\u636e\u8f93\u5165$1$\n\n```cpp\n6 5\n1 4\n1 5\n2 5\n2 6\n3 4\n\n```\n- \u6570\u636e\u8f93\u51fa$1$\n\n```cpp\n3\n```\n\n- \u6570\u636e\u8f93\u5165$2$\n\n```cpp\n6 4\n1 4\n2 5\n2 6\n3 4\n\n```\n- \u6570\u636e\u8f93\u51fa$2$\n\n```cpp\n3\n```\n\u4e0b\u9762\u5c31\u662f\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u7684\u6a21\u677f\uff1a\n\n```cpp\n#include <cstdio>\nint book[10001];\nint match[10001];\nbool e[101][101];\nint ans=0,n=0,m=0;\nbool dfs(int u)\n{\n    for(int i=1;i<=n;i++)\n    {\n        if(book[i]==0 && e[u][i]==true)\n        {\n            book[i]=1;\n            if(match[i]==0 || dfs(match[i])==true)\n            {\n                match[u]=i;\n                match[i]=u;\n                return true;\n            }\n        }\n    }\n    return false;\n}\nint main()\n{\n    scanf(\"%d %d\",&n,&m);\n    for(int i=1;i<=m;i++)\n    {\n        int x=0,y=0;\n        scanf(\"%d %d\",&x,&y);\n        e[x][y]=true;\n        e[y][x]=true;\n    }\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=n;j++)\n        {\n            book[j]=0;\n        }\n        if(dfs(i)==true)\n        {\n            ans++;\n        }\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```\n\u90a3\u4e48\u65e2\u7136\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u7684\u601d\u8def\u8bb2\u5b8c\u4e86\uff0c\u6211\u4eec\u5c31\u8981\u5f00\u59cb\u5c1d\u8bd5\u53bb\u7528\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u6765\u89e3\u51b3\u8fd9\u9053\u9898\u76ee\u4e86\u3002\u6211\u4eec\u53ef\u4ee5**\u628a\u4eba\u5206\u7ed9\u5e8a**\u3002\u4e0b\u9762\u662f\u51e0\u79cd\u60c5\u51b5\uff1a\n1. \u5982\u679c\u4ed6\u5728\u5b66\u6821\u4f4f\u5e76\u4e14\u662f\u672c\u6821\u5b66\u751f\uff0c\u90a3\u4e48\u5c31\u8ba9\u4ed6\u7761\u56de\u81ea\u5df1\u7684\u5e8a\u3002\n\n2. \u5982\u679c\u4ed6\u5728\u4e0d\u5728\u5b66\u6821\u4f4f\u6216\u8005\u4ed6\u4e0d\u56de\u5bb6\uff0c\u4e14\u4ed6\u627e\u4e0d\u5230\u81ea\u5df1\u7684\u5e8a\u3002\u90a3\u4e48\u5c31\u8fd4\u56de$false$\uff0c$false$\u8868\u793a\u4e0d\u5b58\u5728\u4e00\u4e2a\u65b9\u6848\u4f7f\u5f97\u6240\u6709\u4e0d\u56de\u5bb6\u7684\u672c\u6821\u5b66\u751f\u548c\u6765\u770b\u4ed6\u4eec\u7684\u5176\u4ed6\u4eba\u90fd\u6709\u5730\u65b9\u4f4f\uff0c\u5426\u5219\u5f53\u8fd4\u56de$true$\u65f6\u5c31\u8868\u793a\u5b58\u5728\u4e00\u4e2a\u65b9\u6848\u4f7f\u5f97\u6240\u6709\u4e0d\u56de\u5bb6\u7684\u672c\u6821\u5b66\u751f\u548c\u6765\u770b\u4ed6\u4eec\u7684\u5176\u4ed6\u4eba\u90fd\u6709\u5730\u65b9\u4f4f\u3002\n\n3. \u5982\u679c\u4ed6\u53ef\u4ee5\u548c\u8fd9\u5f20\u5e8a\u914d\u5bf9\uff08\u5373\u4ed6\u8ba4\u8bc6\u8fd9\u5f20\u5e8a\u7684\u4e3b\u4eba\uff09\uff0c\u5982\u679c\u73b0\u5728\u8fd8\u6ca1\u6709\u4eba\u548c\u8fd9\u5f20\u5e8a\u914d\u5bf9\u7684\u8bdd\u5c31\u76f4\u63a5\u8ba9\u4ed6\u548c\u8fd9\u5f20\u5e8a\u914d\u5bf9\uff0c\u5426\u5219\u5c31\u770b\u770b\u73b0\u5728\u4e0e\u8fd9\u5f20\u5e8a\u914d\u5bf9\u7684\u4eba\u53ef\u4e0d\u53ef\u4ee5\u627e\u5230\u53e6\u4e00\u5f20\u5e8a\u53ef\u4ee5\u548c\u4ed6\u914d\u5bf9\uff0c\u5982\u679c\u53ef\u4ee5\u5c31\u8ba9\u90a3\u4e2a\u539f\u672c\u548c\u90a3\u5f20\u5e8a\u914d\u5bf9\u7684\u4eba\u53bb\u548c\u4ed6\u627e\u5230\u7684\u53e6\u4e00\u5f20\u53ef\u4ee5\u4e0e\u4ed6\u914d\u5bf9\u7684\u5e8a\u76f8\u914d\u5bf9\u3002\u518d\u8ba9\u8fd9\u5f20\u73b0\u5728\u6ca1\u6709\u914d\u5bf9\u7684\u4eba\u4e0e\u4e00\u5f00\u59cb\u63d0\u5230\u7684\u90a3\u4e2a\u4eba\u76f8\u914d\u5bf9\u3002\n\n\u4e0b\u9762\u662f\u4e00\u4e9b\u6ce8\u610f\u4e8b\u9879\uff1a\n\n1. \u662f\u4eba\u8ba4\u8bc6\u5e8a\u7684\u4e3b\u4eba\uff0c\u6240\u4ee5\u624d\u80fd\u591f\u7761\u5728\u8fd9\u5f20\u5e8a\u4e0a\u3002\u6240\u4ee5\u8fde\u7684\u662f\u5355\u5411\u8fb9\uff0c\u4e0d\u662f\u53cc\u5411\u8fb9\u3002\n\n2. \u8981\u521d\u59cb\u5316\uff0c\u56e0\u4e3a\u6709\u591a\u7ec4\u6570\u636e\u3002\n\n\n\u8bb2\u5b8c\u4e86\u4e8c\u5206\u56fe\u5339\u914d\u7684\u601d\u8def\uff0c\u4e0b\u9762\u5c31\u8bb2\u4e00\u8bb2\u7f51\u7edc\u6d41\u7684\u601d\u8def\u5427\uff0c\u5982\u4e0b\u3002\u4f60\u53ef\u4ee5\u5728[\u8fd9\u91cc](https://www.luogu.org/problemnew/show/P3376)\u68c0\u9a8c\u4f60\u7684\u7f51\u7edc\u6d41\u6a21\u677f\u7684\u6b63\u786e\u6027\u3002\u4e0b\u9762\u5c06\u8be6\u7ec6\u5730\u8bb2\u89e3\u7f51\u7edc\u6d41\u8fd9\u4e00\u7b97\u6cd5\u3002\n\n\u5bf9\u4e8e\u4e0b\u56fe\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u5c31\u80fd\u591f\u770b\u51fa\u6765\u8fd9\u662f\u4e00\u5f20**\u5355\u5411\u56fe**\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/14016.png)\n\n\u73b0\u5728\uff0c\u6211\u4eec\u7ed9\u8fd9\u51e0\u6761\u8fb9\u6807\u4e0a\u6d41\u91cf\uff08\u4e5f\u53ef\u4ee5\u8bf4\u662f\u8fb9\u6743\u6216\u8005\u662f\u6700\u5927\u6d41\u91cf\uff09\u3002\u6ce8\u610f\uff0c\u73b0\u5728\u8981\u6807\u4e0a\u6d41\u91cf\u7684\u662f\u8fb9\u800c\u4e0d\u662f\u70b9\u3002\u4ec0\u4e48\u662f\u6d41\u91cf\uff1f\u6211\u4eec\u4e0d\u59a8\u628a\u4ece$x$\u70b9\u5230$y$\u70b9\u7684\u6700\u5927\u6d41\u91cf\u5f53\u505a\u4ece$x$\u70b9\u5230$y$\u70b9\u53ef\u4ee5\u6d41\u8fc7\u53bb\u7684**\u6700\u5927\u7684**\u6c34\u7684\u91cd\u91cf\uff0c\u6c42\u4ece\u8d77\u59cb\u70b9\u5904\u6253\u5f00\u6c34\u9f99\u5934\uff0c\u8ba9\u6c34\u901a\u8fc7\u8fd9\u4e9b\u201c\u6c34\u7ba1\u201d\uff08\u5373\u8fb9\uff09\u6d41\u5230\u5230\u7ed3\u675f\u70b9\u5904\u3002\u73b0\u5728\u6211\u4eec\u7684\u95ee\u9898\u662f\uff0c\u6709$n$\u4e2a\u70b9$m$\u6761\u8fb9\uff0c\u6c42\u6e90\u70b9\u5230\u6c47\u70b9\u7684\u6700\u5927\u6d41\u91cf\u662f\u591a\u5c11\u3002\u6e90\u70b9\u5373\u8d77\u70b9\uff0c\u6c47\u70b9\u5373\u7ec8\u70b9\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u7684\u6e90\u70b9\u662f$1$\uff0c\u6c47\u70b9\u662f\u70b9$2$\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/14017.png)\n\n\u4e0b\u9762\u6211\u4eec\u7ed9\u8fd9\u4e9b\u70b9\u6807\u5c42\uff0c\u5982\u4e0b\u3002\n\n![](https://cdn.luogu.com.cn/upload/pic/14019.png)\n\n\u4f60\u4f1a\u53d1\u73b0\u90a3\u4e9b\u6ca1\u6709\u88ab\u6807\u5230\u5c42\u7684\u90fd\u662f\u65e0\u6cd5\u5230\u8fbe\u7684\u3002\u4e8e\u662f\u6211\u4eec\u4fbf\u53ef\u4ee5\u7528\u5e7f\u641c\u6765\u5224\u65ad\u80fd\u5426\u5230\u8fbe\u6c47\u70b9\uff0c\u82e5\u80fd\u591f\u5230\u8fbe\u5c31\u8ba1\u7b97\u6709\u591a\u5c11\u7684\u6d41\u91cf\u80fd\u591f\u6d41\u5230\u6c47\u70b9\u5373\u53ef\uff0c\u5f53\u7136\uff0c\u524d\u63d0\u662f\u8fd8\u6709\u6c34\u53ef\u4ee5\u6d41\u8fc7\u53bb\u3002\u4f46\u662f\u6211\u4eec\u8981\u6ce8\u610f\u4e00\u70b9\uff1a\u6d41\u8fc7\u53bb\u7684\u6c34\u5982\u679c\u7559\u4e0d\u5230\u6c47\u70b9\u8fd8\u4f1a\u6d41\u56de\u6765\uff0c\u56e0\u6b64\u6211\u4eec\u5bf9\u6bcf\u4e00\u6761\u5355\u5411\u8fb9\u5efa\u4e00\u6761\u6d41\u91cf\u4e3a$0$\u7684\u53cd\u5411\u8fb9\u5373\u53ef\uff0c\u5f53\u6709\u6c34\u6d41\u56de\u6765\u7684\u65f6\u5019\u52a0\u4e0a\u53cd\u5411\u8fb9\u7684\u6d41\u91cf\u5373\u53ef\u3002\u8fd8\u6709\u4e00\u70b9\u8981\u6ce8\u610f\u7684\u662f\uff0c\u56e0\u4e3a\u6211\u4eec\u6d41\u6c34\u8fc7\u53bb\u5230\u6c47\u70b9\u7684\u6b21\u6570\u53ef\u80fd\u4f1a\u6709\u591a\u6b21\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u52a0\u4e00\u4e2a\u5faa\u73af\u6765\u5b8c\u6210\u7f51\u7edc\u6d41\u7684\u6574\u4e2a\u8fc7\u7a0b\u3002\n\n\u4e0b\u9762\u4e0a\u7f51\u7edc\u6d41\u7684\u6a21\u677f\uff0c\u4f60\u53ef\u4ee5\u6839\u636e\u7f51\u7edc\u6d41\u7684\u6a21\u677f\u6765\u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u5b66\u4e60\uff0c\u540c\u65f6\u4e5f\u611f\u8c22@liusu201601\u7684\u5efa\u8bae\u3002\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\nstruct nodea{ int x,y,d,g,f; } e[2000002];\nstruct nodeb{ int first,h; } r[1000001];\nint q[1000001],len=0,m=0,n=0,st=0,ed=0;\nint min(int x,int y)\n{\n\treturn x<y?x:y;\n}\nvoid ins(int x,int y,int d)\n{\n\tlen++;\n\t\n\te[len].x=x;\n\te[len].y=y;\n\te[len].d=d;\n\te[len].g=r[x].first;\n\tr[x].first=len;\n\t\n\tlen++;\n\t\n\te[len].x=y;\n\te[len].y=x;\n\te[len].d=0;\n\te[len].g=r[y].first;\n\tr[y].first=len;\n\t\n\te[len].f=len-1;\n\te[len-1].f=len;\n}\nbool bfs()\n{\n\tint tou=1,wei=2;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tr[i].h=0;\n\t}\n\tr[st].h=1;\n\t\n\tmemset(q,0,sizeof(q));\n\tq[1]=st;\n\t\n\twhile(tou!=wei)\n\t{\n\t\tint x=q[tou];\n\t\tfor(int i=r[x].first;i>0;i=e[i].g)\n\t\t{\n\t\t\tint y=e[i].y;\n\t\t\tif(e[i].d>0 && r[y].h==0)\n\t\t\t{\n\t\t\t\tr[y].h=r[x].h+1;\n\t\t\t\tq[wei]=y;\n\t\t\t\twei++;\n\t\t\t}\n\t\t}\n\t\ttou++;\n\t}\n\tif(r[ed].h>0)\n\t{\n\t\treturn true;\n\t}\n\treturn false;\n}\nint dfs(int x,int f)\n{\n\tif(x==ed)\n\t{\n\t\treturn f;\n\t}\n\tint tt=0;\n\tfor(int i=r[x].first;i>0;i=e[i].g)\n\t{\n\t\tint y=e[i].y;\n\t\tif(r[x].h+1==r[y].h && tt<=f && e[i].d>0)\n\t\t{\n\t\t\tint my=dfs(y,min(e[i].d,f-tt));\n\t\t\ttt+=my;\n\t\t\te[i].d-=my;\n\t\t\te[e[i].f].d+=my;\n\t\t}\n\t}\n\tif(tt==0)\n\t{\n\t\tr[x].h=0;\n\t}\n\treturn tt;\n}\nint main()\n{\n\tscanf(\"%d %d %d %d\",&n,&m,&st,&ed);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint x=0,y=0,d=0;\n\t\tscanf(\"%d %d %d\",&x,&y,&d);\n\t\tins(x,y,d);\n\t}\n\tint ans=0;\n\twhile(bfs()==true)\n\t{\n\t\tans+=dfs(st,2099999999);\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n\n\u90a3\u4e48\uff0c\u5bf9\u4e8e\u7f51\u7edc\u6d41\uff0c\u8be5\u5982\u4f55\u5efa\u56fe\u5462\uff1f\n1. \u5c06\u4eba\u4e0e\u6e90\u70b9\u8fde\u7ebf\uff0c\u5e76\u5c06\u5e8a\u4e0e\u6c47\u70b9\u8fde\u7ebf\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u7528$i$\u6765\u8868\u793a\u7b2c$i$\u4e2a\u4eba\uff0c\u7528$i+n$\u6765\u8868\u793a\u7b2c$i$\u5f20\u5e8a\u3002\n\n2. \u82e5\u4e00\u4e2a\u4eba\u6709\u5e8a\uff08\u5373\u8fd9\u4e2a\u4eba\u662f\u5728\u4e0b\u5b66\u751f\uff09\u5c31\u5c06\u8fd9\u5f20\u5e8a\u4e0e\u6c47\u70b9\u8fde\u7ebf\u3002\u82e5\u4e00\u4e2a\u4eba\u9700\u8981\u5e8a\uff08\u5373\u662f\u672c\u6821\u5b66\u751f\u7684\u597d\u670b\u53cb\u6216\u662f\u672c\u6821\u5b66\u751f\u5728\u8fd9\u91cc\u4f4f\uff09\uff0c\u5c31\u5c06\u5176\u4e0e\u6e90\u70b9\u76f8\u8fde\u7ebf\u3002\u82e5$i$\u8ba4\u8bc6$j$\uff0c\u90a3\u4e48$i$\u5c31\u53ef\u4ee5\u7761$j$\u7684\u5e8a\uff0c\u90a3\u4e48\u5c31\u5c06$i$\u548c$j$\u7684\u5e8a\u76f8\u8fde\u7ebf\uff0c\u5373\u5c06$i$\u548c$j+n$\u76f8\u8fde\u7ebf\u3002\n\n3. \u56e0\u4e3a\u6709\u591a\u7ec4\u6570\u636e\uff0c\u8981\u6ce8\u610f\u5c06\u6570\u7ec4\u90fd\u521d\u59cb\u5316\u3002\u4e00\u5f00\u59cb\u6211\u5c31\u56e0\u4e3a\u6709\u4e24\u4e2a\u6570\u7ec4\u5fd8\u4e86\u521d\u59cb\u5316\u9020\u6210\u4e86\u6b7b\u5faa\u73af\uff0c\u4f46\u662f\u5c06\u8fd9\u51e0\u7ec4\u6570\u636e\u62c6\u5f00\u540e\u53c8\u662f\u5bf9\u7684\uff0c\u8fd9\u53ef\u80fd\u5c31\u662f\u4f60\u7684\u521d\u59cb\u5316\u6ca1\u6709\u521d\u59cb\u5316\u597d\u4e86\u3002\u4e00\u5f00\u59cb\u6211\u5c31\u662f\u56e0\u4e3a\u6ca1\u6709\u521d\u59cb\u5316\u9519\u4e86\u597d\u51e0\u6b21\uff0c\u540e\u6765\u624d\u901a\u8fc7\u7684\u3002\n\n\u4e0b\u9762\u4e0a$100$\u5206\u4ee3\u7801~\n\n\u4e8c\u5206\u56fe\u5339\u914d\uff1a\n\n```cpp\n#include <cstdio>\n#include <cstring>\nint book[10001];\nint match[10001];\nint e[101][101];\nint rn[10001],ho[10001];\nint ans=0,n=0;\nbool dfs(int u)\n{\n    for(int i=1;i<=n;i++)\n    {\n        if(book[i]==0 && rn[i]==1 && e[u][i]==1)\n        {\n            book[i]=1;\n            if(match[i]==0 || dfs(match[i])==true)\n            {\n                match[i]=u;\n                return true;\n            }\n        }\n    }\n    return false;\n}\nbool work()\n{\n    for(int i=1;i<=n;i++)\n    {\n        memset(book,0,sizeof(book));\n        if((rn[i]==0 || ho[i]==0) && (dfs(i)==false))\n        {\n            return false;\n        }\n    }\n    return true;\n}\nint main()\n{\n    int t=0;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        ans=0;\n        memset(book,0,sizeof(book));\n        memset(match,0,sizeof(match));\n        memset(rn,0,sizeof(rn));\n        memset(ho,0,sizeof(ho));\n        memset(e,0,sizeof(e));\n        scanf(\"%d\",&n);\n        for(int i=1;i<=n;i++)\n        {\n            scanf(\"%d\",&rn[i]);\n        }\n        for(int i=1;i<=n;i++)\n        {\n            scanf(\"%d\",&ho[i]);\n            if(rn[i]==0)\n            {\n                ho[i]=1;\n            }\n        }\n        for(int i=1;i<=n;i++)\n        {\n            for(int j=1;j<=n;j++)\n            {\n                scanf(\"%d\",&e[i][j]);\n            }\n            if(rn[i]==1)\n            {\n                e[i][i]=1;\n            }\n        }\n        if(work()==true)\n        {\n            printf(\"^_^\\n\");\n        }\n        else\n        {\n            printf(\"T_T\\n\");\n        }\n    }\n    return 0;\n}\n```\n\n\u7f51\u7edc\u6d41\uff1a\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\nstruct nodea{ int x,y,d,g,f; } e[1000001];\nstruct nodeb{ int first,h; } r[1000001];\nint inf=999999999,st=1001,ed=1002,n=0;\nint q[1000001],len=0;\nint min(int x,int y)\n{\n    return x<y?x:y;\n}\nvoid ins(int x,int y,int d)\n{\n    len++;\n\n    e[len].x=x;\n    e[len].y=y;\n    e[len].d=d;\n    e[len].g=r[x].first;\n    r[x].first=len;\n    \n    len++;\n\n    e[len].x=y;\n    e[len].y=x;\n    e[len].d=0;\n    e[len].g=r[y].first;\n    r[y].first=len;\n    \n    e[len].f=len-1;\n    e[len-1].f=len;\n}\nbool bfs()\n{\n    int tou=1,wei=2;\n    for(int i=1;i<=2000;i++)\n    {\n        r[i].h=0;\n    }\n    r[st].h=1;\n    r[ed].h=0;\n    \n    q[1]=st;\n    \n    while(tou<wei)\n    {\n        int x=q[tou];\n        for(int i=r[x].first;i>0;i=e[i].g)\n        {\n            int y=e[i].y;\n            if(e[i].d>0 && r[y].h==0)\n            {\n                r[y].h=r[x].h+1;\n                q[wei]=y;\n                wei++;\n            }\n        }\n        tou++;\n    }\n    if(r[ed].h>0)\n    {\n        return true;\n    }\n    return false;\n}\nint dfs(int x,int f)\n{\n    if(x==ed)\n    {\n        return f;\n    }\n    int tt=0;\n    for(int i=r[x].first;i>0;i=e[i].g)\n    {\n        int y=e[i].y;\n        if(r[x].h+1==r[y].h && tt<=f && e[i].d>0)\n        {\n            int my=dfs(y,min(e[i].d,f-tt));\n            tt+=my;\n            e[i].d-=my;\n            e[e[i].f].d+=my;\n        }\n    }\n    if(tt==0)\n    {\n        r[x].h=0;\n    }\n    return tt;\n}\nint dinic()\n{\n    int ans=0;\n    while(bfs()==true)\n    {\n        ans+=dfs(st,inf);\n    }\n    return ans;\n}\nint main()\n{\n    int t=0;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        int tot=0;\n        scanf(\"%d\",&n);\n        memset(q,0,sizeof(q));\n        memset(e,0,sizeof(e));\n        memset(r,0,sizeof(r));\n        len=0;\n        int rn[101],ho[101];\n        for(int i=1;i<=n;i++)\n        {\n            scanf(\"%d\",&rn[i]);\n            if(rn[i]==1)\n            {\n                ins(i+n,ed,1);\n            }\n        }\n        for(int i=1;i<=n;i++)\n        {\n            scanf(\"%d\",&ho[i]);\n            if((rn[i]==1 && ho[i]==0) || (rn[i]==0))\n            {\n                ins(st,i,1);\n                tot++;\n            }\n        }\n        for(int i=1;i<=n;i++)\n        {\n            for(int j=1;j<=n;j++)\n            {\n                int dx=0;\n                scanf(\"%d\",&dx);\n                if(dx==1 || i==j)\n                {\n                    ins(i,j+n,1);\n                }\n            }\n        }\n        if(dinic()>=tot)\n        {\n            printf(\"^_^\\n\");\n        }\n        else\n        {\n            printf(\"T_T\\n\");\n        }\n    }\n    return 0;\n}\n```",
        "postTime": 1517198082,
        "uid": 48269,
        "name": "Drinkkk",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2055 \u3010[ZJOI2009]\u5047\u671f\u7684\u5bbf\u820d\u3011"
    },
    {
        "content": "\u6211\u4e5f\u6765\u5199\u4efd\u9898\u89e3\u5427\n\n\u6709\u5f88\u591a\u4eba\uff0c\u82e5\u5e72\u5e8a\uff0c\n\n\u82e5\u5e72\u4e2a\u4eba\u9645\u5173\u7cfb\n\n\u8868\u793a\u67d0\u4eba\u80fd\u591f\u7761\u67d0\u4eba\u7684\u5e8a\n\n\u95ee\u6700\u540e\u80fd\u5426\u4f7f\u5f97\u6240\u6709\u4eba\u90fd\u6709\u5e8a\uff1f\n\n\n\u6069\uff1f\n\u4e00\u4e2a\u4eba\u5bf9\u5e94\u4e00\u5f20\u5e8a\n\n\u8fd9\u4e0d\u5c31\u662f\u4e8c\u5206\u56fe\u5339\u914d\uff1f\n\n\n\u6ca1\u9519\uff0c\u8fd9\u5c31\u662f\u4e8c\u5206\u56fe\u5339\u914d\u3002\n\n\n\u4f46\u662f\uff0c\u8fd9\u8981\u600e\u4e48\u5efa\u8fb9\u5462\uff1f\n\n\n1.\u5982\u679c\u8fd9\u4e2a\u4eba\u662f\u5b66\u751f\uff0c\u5e76\u4e14\u7559\u5728\u5b66\u6821\uff0c\u81ea\u5df1\u548c\u81ea\u5df1\u7684\u5e8a\u8fde\u7ebf\n\n2.\u5982\u679c\u4e00\u4e2a\u4ebaA\u8ba4\u8bc6\u53e6\u5916\u4e00\u4e2a\u4ebaB\uff0c\u5e76\u4e14B\u662f\u5b66\u751f\uff0c\u5219\u5c06A\u4e0eB\u7684\u5e8a\u8fde\u7ebf\n\n\n\u5efa\u5b8c\u8fb9\u4e4b\u540e\u76f4\u63a5\u8dd1\u5308\u7259\u5229\u7b97\u6cd5\n\n\u8ba1\u7b97\u6700\u5927\u7684\u5339\u914d\u6570\n\n\u68c0\u67e5\u662f\u5426\u548c\u8981\u5e8a\u7684\u4eba\u6570\u76f8\u540c\n\n\u6700\u540e\u8f93\u51fa\u5373\u53ef\u3002\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\nconst int MAX=100;\nconst int MAXL=10000;\nstruct Line\n{\n       int v,next;\n}e[MAXL];\nint h[MAX],cnt=0,tot;\nint T,n;\nint home[MAX];\nint school[MAX],a,sum;\ninline void Add(int u,int v)\n{\n       e[cnt]=(Line){v,h[u]};\n       h[u]=cnt++;\n}\nint match[MAX];\nbool vis[MAX];\nbool DFS(int x)\n{\n       for(int i=h[x];i!=-1;i=e[i].next)\n       {\n              int v=e[i].v;\n              if(!vis[v])\n              {\n                    vis[v]=true;\n                    if(!match[v]||DFS(match[v]))\n                    {\n                            match[v]=x;\n                            return true;\n                    }\n              }\n       }\n       return false;\n}\nint main()\n{\n       cin>>T;\n       while(T--)\n       {\n             cnt=tot=0;\n             memset(h,-1,sizeof(h));\n             cin>>n;\n             for(int i=1;i<=n;++i)\n                cin>>school[i];\n             for(int i=1;i<=n;++i)\n             {\n                  cin>>home[i];\n                  if(home[i]==0&&school[i])//\u5982\u679c\u6b64\u4eba\u662f\u5728\u6821\u5b66\u751f\u5e76\u4e14\u4e0d\u56de\u5bb6 \n                     Add(i,i);//\u53ef\u4ee5\u7761\u81ea\u5df1\u7684\u5e8a \n             }\n             for(int i=1;i<=n;++i)//\u7edf\u8ba1\u8981\u5e8a\u7684\u4eba \n               if(!school[i]||(school[i]&&!home[i]))\n                    ++tot;\n             for(int i=1;i<=n;++i)\n             {\n                  for(int j=1;j<=n;++j)\n                  {\n                         cin>>a;\n                         if(a&&school[j])//\u5982\u679ci\u8ba4\u8bc6j\u5e76\u4e14j\u662f\u5b66\u751f\n                               Add(i,j);//i\u53ef\u4ee5\u7761j\u7684\u5e8a \n                  }\n             }\n             memset(match,0,sizeof(match));\n             sum=0;\n             for(int i=1;i<=n;++i)\n             {\n                   if((school[i]&&home[i]==0)||!school[i])//\u8981\u4e48\u662f\u5b66\u751f\u5728\u5b66\u6821\uff0c\u8981\u4e48\u662f\u5916\u6765\u7684\u4eba\n                   {\n                         memset(vis,0,sizeof(vis));\n                         if(DFS(i))++sum;\n                   }\n             }\n             if(sum==tot)\n                cout<<\"^_^\"<<endl;\n             else\n                cout<<\"T_T\"<<endl;\n       }\n       return 0;\n}\n```",
        "postTime": 1499952151,
        "uid": 21283,
        "name": "yybyyb",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P2055 \u3010[ZJOI2009]\u5047\u671f\u7684\u5bbf\u820d\u3011"
    },
    {
        "content": "[${\\color{#00ccee}\\text{\u6b22\u8fce\u62dc\u8bbf\u6211\u8fd9\u4e2a\u849f\u84bb\u7684\u535a\u5ba2}}$](https://www.luogu.org/blog/Wendigo/)\n\n[P2055 \u3010\\[ZJOI2009\\]\u5047\u671f\u7684\u5bbf\u820d\u3011](https://www.luogu.org/problem/P2055)\n\n### \u6b64\u9898\u7b97\u6cd5:\u5308\u7259\u5229\u7b97\u6cd5\n\n\u4e8c\u5206\u56fe\u5339\u914d\u7684\u5de7\u5999\u6c34\u9898\u3002\n\n**\u5927\u81f4\u601d\u8def:**\n\n\u5148\u6572\u6a21\u677f:**\u5308\u7259\u5229\u7b97\u6cd5**\n\n$mat1[]$\u8868\u793a\u5728\u5b66\u6821\u7684\u4eba(\u5305\u62ec\u670b\u53cb\u548c\u5b66\u6821\u5b66\u751f)\u5339\u914d\u7684\u5e8a\u4f4d\u3002\n\n$mat2[]$\u8868\u793a\u5b66\u6821\u7684\u5e8a\u4f4d\u5339\u914d\u7684\u5728\u5b66\u6821\u7684\u4eba\u3002\n\n**\u5c06\u5728\u5b66\u6821\u7684\u4eba\u4e0e\u5b66\u6821\u7684\u5e8a\u4f4d\u8fdb\u884c\u4e8c\u5206\u56fe\u5339\u914d**\n\n![](https://s2.ax1x.com/2019/11/24/MLgu2q.jpg)\n\n\u5982\u679c\u67d0\u4e2a\u5728\u5b66\u6821\u7684\u4eba\u5339\u914d\u4e0d\u5230\u5e8a\uff0c**\u8f93\u51faT_T**\n\n\u5982\u679c\u6bcf\u4e2a\u5728\u5b66\u6821\u7684\u4eba\u90fd\u5339\u914d\u5f97\u5230\u5e8a\uff0c**\u8f93\u51fa^_^**\n\n**(\u591a\u7ec4\u6d4b\u8bd5\u6570\u636e)**\n\n## \u4ee5\u4e0b\u662f\u4ee3\u7801+\u6ce8\u91ca\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=60;\nint t,n,sty,fri,ans;\nbool sc[N],ho[N],vis[N];\nbool k[N][N];\nint mat1[N],mat2[N];\nbool dfs(int x){ //\u5355\u4eba\u5339\u914d \u5308\u7259\u5229\u6a21\u677f\n\tfor(int i=1;i<=n;i++){ //\u679a\u4e3e\u5e8a\n\t\tif(!sc[i]||!k[x][i]||vis[i]) //\u65e0\u9700\u5339\u914d\n\t\t\tcontinue;\n\t\tvis[i]=1;\n\t\tif(mat2[i]==-1||dfs(mat2[i])){\n\t\t\t//\u5982\u679ci\u672a\u88ab\u5339\u914d\u6216\u4e0ei\u5339\u914d\u7684\u4eba\u53ef\u4ee5\u6362\u5e8a\n\t\t\tmat2[i]=x;\n\t\t\tmat1[x]=i; //\u8eba\u5e8a\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn 0;\n}\nvoid solve(){ \u6c42\u89e3\u4e00\u7ec4\u6d4b\u8bd5\u6570\u636e\n\tscanf(\"%d\",&n);\n\tsty=fri=ans=0;\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d\",sc+i);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",ho+i);\n\t\tif(!sc[i]) ho[i]=1;\n\t}\n//\tprintf(\"%d %d\\n\",fri,sty);\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tscanf(\"%d\",&k[i][j]);\n\tfor(int i=1;i<=n;i++)\n\t\tif(sc[i]) k[i][i]=1; //\u81ea\u5df1\u53ef\u4ee5\u7761\u81ea\u5df1\u7684\u5e8a\n\tmemset(mat1,-1,sizeof mat1);\n\tmemset(mat2,-1,sizeof mat2);\n\tfor(int i=1;i<=n;i++){\n\t\tif(sc[i]&&ho[i]) continue;\n\t\tmemset(vis,0,sizeof vis);\n\t\tif(!dfs(i)){ //\u6709\u4eba\u6ca1\u5e8a\u7761\u4e86\n\t\t\tputs(\"T_T\");\n\t\t\treturn;\n\t\t}\n\t}\n\tputs(\"^_^\");\n}\nint main(){\n\tscanf(\"%d\",&t); //\u591a\u7ec4\u6d4b\u8bd5\u6570\u636e\n\twhile(t--) solve();\n\treturn 0;\n}\n```\n\n\u6570\u7ec4\u548c\u53d8\u91cf\u90fd\u8981\u521d\u59cb\u5316\uff0c\u5426\u5219\u88ab\u7b2c\u4e8c\u7ec4\u6570\u636e\u5361\u6ca1\u3002\n\n\u8fd9\u9898\u76ee\u662f\u5308\u7259\u5229\u7b97\u6cd5\u5f88\u548c\u8c10\u3001\u5408\u9002\u7684\u5e94\u7528\u3002\n\n**\u5199\u9898\u89e3\u4e0d\u6613\uff0c\u8d70\u8fc7\u8def\u8fc7\u522b\u5fd8\u4e86\u70b9\u8d5e\u554a!**\n\n\u8c22\u8c22\u5927\u5bb6! !\n\n\n",
        "postTime": 1574570526,
        "uid": 118365,
        "name": "George1123",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P2055 \u3010[ZJOI2009]\u5047\u671f\u7684\u5bbf\u820d\u3011"
    },
    {
        "content": "\u80cc\u8bf5\u7f51\u7edc\u6d41\u4ee3\u7801ing\n\n\u5c06\u4eba\u4e0e\u6e90\u70b9\u8fde\u8fb9\uff0c\u5e8a\u4e0e\u6c47\u70b9\u8fde\u8fb9\u3002\n\n\u82e5\u4e00\u4e2a\u5728\u6821\u5b66\u751f\u6709\u5e8a\uff0c\u5c06\u5e8a\u4e0e\u6c47\u70b9\u8fde\u8fb9\u3002\n\n\u82e5\u4e00\u4e2a\u4eba\u662f\u9700\u8981\u5e8a\u7684\uff0c\u5c31\u628a\u5b83\u548c\u6e90\u70b9\u8fde\u8fb9\uff0c\u5982\u679c\u4e24\u4e2a\u4eba\u8ba4\u8bc6\uff0c\u5c31\u628a\u8fd9\u4e24\u4e2a\u4eba\u7684\u5e8a\u94fe\u63a5\u4e00\u4e0b\u3002\n\n\u7136\u540e\u56e0\u4e3a\u6211\u4e0d\u4f1a\u5308\u7259\u5229\uff0c\u6211\u5c31\u8dd1\u4e86\u4e00\u4e2a\u5e26\u6709\u6240\u6709\u4f18\u5316\u7684dinic\u7b97\u6cd5\uff0c\u5305\u62ec\u5f53\u524d\u5f27\u4f18\u5316\uff0c\u5e94\u5f53\u662f\u4e00\u4e2a\u6bd4\u8f83\u597d\u7684\u6a21\u677f\u4e86\u5427\uff0c\u5927\u5bb6\u53ef\u4ee5\u53c2\u8003\u4e00\u4e0b\u3002\n\n```cpp\n// luogu-judger-enable-o2\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n#include <cctype>\n\nusing namespace std;\n\ninline int read()\n{\n    int x=0,f=1;char ch=getchar();\n    while (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\n    while (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\n    return x*f;\n}\n\nconst int inf=1e9;\n\nint n;\n\nint first[10005],nxt[10005],tail[10005],e=1,r[10005],cur[10005],d[10005];\n\ninline void link(int u,int v,int c)\n{\n    nxt[++e]=first[u];\n    first[u]=e;\n    tail[e]=v;\n    r[e++]=c;\n    nxt[e]=first[v];\n    first[v]=e;\n    tail[e]=u;\n    r[e]=0;\n}\n\nstruct myqueue\n{\n    int val[1000050];\n    \n    int *head=val,*tail=val;\n    \n    inline void push(const int &rhs)\n    {\n        *tail++=rhs;\n    }\n    \n    inline void pop()\n    {\n        head++;\n    }\n    \n    inline int front()\n    {\n        return *head;\n    }\n    \n    inline bool empty()\n    {\n        return head==tail;\n    }\n    \n    inline void clear()\n    {\n        memset(val,0,sizeof(val));\n        head=val;\n        tail=val;\n    }\n}q;\n\nint st=1001,ed=1002;\n\ninline bool BFS()\n{\n    q.push(ed);\n    memset(d,0,sizeof(d));\n    d[ed]=1;\n    while (!q.empty())\n    {\n        int v=q.front();\n        q.pop();\n        for (int e=first[v];e;e=nxt[e])\n        {\n            int u=tail[e];\n            if (d[u]==0 && r[e^1]>0)\n            {\n                q.push(u);\n                d[u]=d[v]+1;\n            }\n        }\n    }\n    return (d[st]>0);\n}\n\ninline int DFS(int u,int budget)\n{\n    if (u==ed)\n        return budget;\n    int res=0;\n    for (int &e=cur[u];e!=0;e=nxt[e])\n    {\n        int v=tail[e];\n        if (d[v]+1==d[u] && r[e]>0)\n        {\n            int delta=DFS(v,min(r[e],budget));\n            res+=delta;\n            budget-=delta;\n            r[e]-=delta;\n            r[e^1]+=delta;\n            if (budget==0)\n                break;\n        }\n    }\n    return res;\n}\n\ninline int Dinic()\n{\n    int ans=0;\n    while (BFS())\n    {\n        for (int i=1;i<=ed;i++)\n            cur[i]=first[i];\n        ans+=DFS(st,inf);\n    }\n    return ans;\n}\n\ninline void Init()\n{\n    memset(first,0,sizeof(first));\n    memset(nxt,0,sizeof(nxt));\n    memset(tail,0,sizeof(tail));\n    e=1;\n    memset(r,0,sizeof(r));\n}\n\nint main()\n{\n    int T=read();\n    while (T--)\n    {\n        n=read();\n        Init();\n        int tot=0;\n        int a[105]={0},b[105]={0};\n        for (int i=1;i<=n;i++)\n        {\n            a[i]=read();\n            if (a[i]==1)\n                link(i+n,ed,1);\n        }\n        for (int i=1;i<=n;i++)\n        {\n            b[i]=read();\n            if ((a[i]==1 && b[i]==0) || (a[i]==0))\n            {\n                link(st,i,1);\n                tot++;\n            }\n        }\n        for (int i=1;i<=n;i++)\n            for (int j=1;j<=n;j++)\n            {\n                int flag=read();\n                if (flag==1 || i==j)\n                    link(i,j+n,1);\n            }\n        if (Dinic()>=tot)\n            puts(\"^_^\");\n        else \n            puts(\"T_T\");\n    }\n    return 0;\n}\n\n```\n\n\n\n\n",
        "postTime": 1541767749,
        "uid": 8457,
        "name": "chen_zhe",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P2055 \u3010[ZJOI2009]\u5047\u671f\u7684\u5bbf\u820d\u3011"
    },
    {
        "content": "**ISAP\u6700\u5927\u6d41**\n\n\u4e8c\u5206\u56fe\u5339\u914d\uff0c\u53ef\u4ee5\u4f7f\u7528\u6700\u5927\u6d41\n\n## \u5efa\u56fe\n\n- \u628a\u6bcf\u4e2a\u4eba\u62c6\u6210\u5165\u70b9\u548c\u51fa\u70b9\u4ee3\u8868\u5b66\u751f\u548c\u623f\u95f4\uff0c\u7b2c$i$\u4e2a\u4eba\u5165\u70b9\u4e3a$i$\uff0c\u51fa\u70b9\u4e3a$n + i$\uff0c\u8d85\u7ea7\u539f\u70b9\u4e3a$0$\uff0c\u8d85\u7ea7\u4f1a\u70b9\u4e3a$2n + 1$\n\n- \u5bf9\u4e8e$\\forall i \\in [1, n]$\uff0c\u4ece\u4ed6\u7684\u5165\u70b9\u5411\u51fa\u70b9\u8fde\u63a5\u5bb9\u91cf\u4e3a$1$\u7684\u8fb9\n\n- \u5bf9\u4e8e$\\forall i \\in \\text{{\u5728\u6821\u751f}}$\uff0c\u7531\u4e8e\u4ed6\u7684\u623f\u95f4\u53ef\u4ee5\u88ab\u4f7f\u7528\uff0c\u4ece$n + i$\u5411$2n + 1$\u8fde\u63a5\u5bb9\u91cf\u4e3a$1$\u7684\u8fb9\n\n- \u5bf9\u4e8e$\\forall i \\notin \\text{\u5728\u6821\u751f}$ \u4e14 $i \\notin \\text{\u56de\u5bb6}$\uff0c\u7531\u4e8e$i$\u9700\u8981\u4f4f\u5bbf\uff0c\u4ece$0$\u5411$i$\u8fde\u63a5\u5bb9\u91cf\u4e3a$1$\u7684\u8fb9\n\n- \u5bf9\u4e8e$\\forall i, j \\in [1, n]$\u6ee1\u8db3$i,j$\u4e92\u76f8\u8ba4\u8bc6\uff0c\u4ece$i$\u5411$n + j$\u8fde\u63a5\u5bb9\u91cf\u4e3a$1$\u7684\u8fb9\uff0c\u4ece$j$\u5411$n + i$\u8fde\u63a5\u5bb9\u91cf\u4e3a$1$\u7684\u8fb9\n\n\u6700\u540e\u7edf\u8ba1\u4e00\u4e0b\u6700\u5927\u6d41\u662f\u5426\u7b49\u4e8e\u6240\u6709\u9700\u8981\u4f4f\u5bbf\u7684\u5b66\u751f\u5373\u53ef\n\n## \u4ee3\u7801\n\nISAP\u633a\u5feb\u7684\uff0c\u61d2\u5f97\u5f53\u524d\u5f27\u4f18\u5316\u4e86\n\n```cpp\n// luogu-judger-enable-o2\n// luogu-judger-enable-o2\n#include <iostream>\n#include <queue>\n#include <cstring>\n\nusing namespace std;\n\nconst int MAXN = 55;\nconst int MAXM = MAXN * MAXN * 4;\nconst int MAXT = 25;\nconst int INF = 0x3f3f3f3f;\n\nint T;\n\nnamespace Graph{\n    int to[MAXM], val[MAXM], nxt[MAXM], head[MAXN << 1], cnt;\n    int res, s, t, tot, dep[MAXN << 1], gap[MAXN << 1];\n    \n    void Clear() {\n        cnt = -1;\n        memset(head, -1, sizeof(head));\n    }\n    \n    void AddEdge(int u, int v, int w) {\n        cnt++; to[cnt] = v; val[cnt] = w; nxt[cnt] = head[u]; head[u] = cnt;\n        cnt++; to[cnt] = u; val[cnt] = 0; nxt[cnt] = head[v]; head[v] = cnt;\n    }\n    \n    void Bfs() {\n        memset(dep, -1, sizeof(dep));\n        memset(gap, 0, sizeof(gap));\n        dep[t] = 0; gap[0]++;\n        queue<int> q; q.push(t);\n        while (!q.empty()) {\n            int u = q.front(); q.pop();\n            for (int i = head[u]; ~i; i = nxt[i]) {\n                int v = to[i];\n                if (dep[v] != -1) continue;\n                dep[v] = dep[u] + 1;\n                gap[dep[v]]++;\n                q.push(v);\n            }\n        }\n    }\n    \n    int Dfs(int u, int flow) {\n        if (u == t) {\n            res += flow;\n            return flow;\n        }\n        int used = 0;\n        for (int i = head[u]; ~i; i = nxt[i]) {\n            int v = to[i];\n            if (val[i] && dep[v] == dep[u] - 1) {\n                int mi = Dfs(v, min(val[i], flow - used));\n                if (mi) {\n                    val[i] -= mi;\n                    val[i ^ 1] += mi;\n                    used += mi;\n                }\n                if (used == flow) return used;\n            }\n        }\n        gap[dep[u]]--;\n        if (gap[dep[u]] == 0) dep[s] = tot + 1;\n        dep[u]++;\n        gap[dep[u]]++;\n        return used;\n    }\n    \n    void Isap() {\n        res = 0;\n        Bfs();\n        while (dep[s] <= tot) Dfs(s, INF);\n    }\n}\n\nint main() {\n    ios :: sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);\n    cin >> T;\n    while (T--) {\n        Graph :: Clear();\n        int n, cnt = 0;\n        cin >> n;\n        bool flag[n + 1]; memset(flag, false, sizeof(flag));\n        Graph :: tot = n * 2 + 2; Graph :: s = 0; Graph :: t = n * 2 + 1;\n        for (int i = 1; i <= n; i++) Graph :: AddEdge(i, n + i, 1);\n        for (int i = 1; i <= n; i++) {\n            int x;\n            cin >> x;\n            if (x == 1) Graph :: AddEdge(n + i, Graph :: t, 1), flag[i] = true;\n        }\n        for (int i = 1; i <= n; i++) {\n            int x;\n            cin >> x;\n            if (x == 0 || !flag[i]) Graph :: AddEdge(Graph :: s, i, 1), cnt++;\n        }\n        for (int i = 1; i <= n; i++) {\n            for (int j = 1; j <= n; j++) {\n                int x;\n                cin >> x;\n                if (x == 1) {\n                    Graph :: AddEdge(i, n + j, 1);\n                    Graph :: AddEdge(j, n + i, 1);\n                }\n            }\n        }\n        Graph :: Isap();\n        if (Graph :: res < cnt) cout << \"T_T\" << endl;\n        else cout << \"^_^\" << endl;\n    }\n    return 0;\n}\n```",
        "postTime": 1557910186,
        "uid": 126376,
        "name": "Irelia\u10e6",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2055 \u3010[ZJOI2009]\u5047\u671f\u7684\u5bbf\u820d\u3011"
    },
    {
        "content": "\u9898\u76ee\u5927\u610f\u5c31\u662f\u8bf4\u6709\u4e00\u4e9b\u4eba\uff0c\u5728\u4e00\u4e2a\u5b66\u6821\u5185\u4e0a\u5b66\u3002\u653e\u5047\u4e86\uff0c\u4ed6\u4eec\u53ef\u80fd\u4f1a\u5728\u5b66\u6821\uff0c\u4e5f\u53ef\u80fd\u4e0d\u5728\uff0c\u8fd9\u65f6\u4ed6\u4eec\u7684\u670b\u53cb\u4f1a\u6765\u770b\u4ed6\u4eec\u3002\u6bcf\u4e2a\u4eba\u53ea\u80fd\u5728\u4ed6\u4eec\u8ba4\u8bc6\u7684\u4eba\u7684\u5e8a\u4e0a\u7761\u89c9\uff0c\u95ee\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u65b9\u6848\uff0c\u4f7f\u5f97\u4e0d\u56de\u5bb6\u7684\u5b66\u751f\u548c\u6765\u770b\u4ed6\u4eec\u7684\u670b\u53cb\u90fd\u6709\u5e8a\u7761\u3002\n\n\u8bb2\u8bb2\u5927\u6982\u601d\u8def\u3002\u3002\u3002\n\n\u5f88\u660e\u663e\u8fd9\u662f\u4e00\u9053\u4e8c\u5206\u56fe\u5339\u914d\u7684\u95ee\u9898\uff0c~~\u5f53\u7136\u4e5f\u53ef\u4ee5\u7528\u7f51\u7edc\u6d41\u505a\uff0c\u4f46\u662f\u672c\u849f\u84bb\u4e0d\u4f1a~\uff08\u6ed1\u7a3d\uff09~~\u6240\u4ee5\uff0c\u6211\u4eec\u5e94\u8be5\u628a\u4eba\u5206\u7ed9\u5e8a\uff0c\u8be5\u5982\u4f55\u5b9e\u73b0\uff1f\u672c\u849f\u84bb\u662f\u8fd9\u6837\u60f3\u7684\uff1a\n\n1.\u8ba9\u5728\u6821\u7761\u89c9\u7684\u5b66\u751f\u7761\u81ea\u5df1\u7684\u5e8a\u3002\n\n2.\u82e5\u6765\u8bbf\u7684\u4eba\u8ba4\u8bc6\u5e8a\u7684\u4e3b\u4eba\uff0c\u4e14\u8fd9\u5f20\u5e8a\u662f\u7a7a\u7684\uff0c\u90a3\u4e48\u4ed6\u5c31\u7761\u8fd9\u5f20\u5e8a\uff1b\u82e5\u5e8a\u4e0a\u6709\u4eba\uff0c\u770b\u90a3\u4e2a\u4eba\u80fd\u5426\u627e\u5230\u53e6\u4e00\u5f20\u5e8a\u3002\u5982\u679c\u4e0d\u80fd\uff0c\u5c31\u76f4\u63a5\u8f93\u51fa\u201cT_T\u201d\u3002\u5982\u679c\u80fd\uff0c\u5219\u90a3\u4e2a\u4eba\u7761\u65b0\u627e\u5230\u7684\u5e8a\uff0c\u6765\u8bbf\u8005\u7761\u8fd9\u5f20\u5e8a\u3002\n\n\u4ee5\u4e0b\u5373\u4e3a\u4ee3\u7801~~~\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#define fr(i,a,b) for(int i=a;i<=b;i++)\n#define N 100\nusing namespace std;\n \nint a[N],match[N],p[N],as[N],kn[N][N];\nint n;\n\nint dfs(int x){//\u4e8c\u5206\u56fe\u5339\u914d\u6a21\u677f\n\tfr(i,1,n)\n\t\tif(!p[i] && kn[x][i] && a[i]){//\u82e5\u6b64\u4eba\u672a\u5339\u914d\u8fc7\u4e14\u8ba4\u8bc6\u6b64\u4eba\u4e14\u6b64\u4eba\u662f\u5b66\u751f\n\t\t\tp[i]=1;\n\t\t\tif(!match[i] || dfs(match[i])){\n\t\t\t\tmatch[i]=x;\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\treturn 0;\n}\n\nint main(){\n\tint i,j,k,m,t;\n\tcin>>t;\n\twhile(t--){\n\t\tmemset(a,1,sizeof(a));//\u521d\u59cb\u5316\u6240\u6709\u4eba\u5747\u56de\u5bb6\n\t\tmemset(as,0,sizeof(as));\n\t\tmemset(match,0,sizeof(match));\n\t\tmemset(kn,0,sizeof(kn));\n\t\tcin>>n;\n\t\tfr(i,1,n)\n\t\t\tscanf(\"%d\",&a[i]);\n\t\tfr(i,1,n){\n\t\t\tscanf(\"%d\",&k);\n\t\t\tif(a[i])as[i]=k;//\u5982\u679c\u662f\u5b66\u751f\u5219\u4fdd\u5b58k\n\t\t}\n\t\tfr(i,1,n){\n\t\t\tfr(j,1,n)\n\t\t\t\tscanf(\"%d\",&kn[i][j]);\n\t\t\tif(a[i])kn[i][i]=1;//\u5b66\u751f\u53ef\u4ee5\u7761\u81ea\u5df1\u7684\u5e8a\n\t\t}\n\t\tint flag=1;\n\t\tfr(i,1,n){\n\t\t\tmemset(p,0,sizeof(p));\n\t\t\tif(!as[i] && dfs(i)==0){flag=0;break;}//\u5982\u679c\u8fd9\u4e2a\u4eba\u4e0d\u56de\u5bb6\u5e76\u4e14\u4ed6\u627e\u4e0d\u5230\u5e8a\uff0c\u5219\u9000\u51fa\uff0cflag\u53d8\u62100\n\t\t}\n\t\tif(!flag)cout<<\"T_T\"<<endl;\n\t\telse cout<<\"^_^\"<<endl;\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1530954146,
        "uid": 18157,
        "name": "Naffygo",
        "ccfLevel": 0,
        "title": "P2055 [ZJOI2009]\u5047\u671f\u7684\u5bbf\u820d"
    },
    {
        "content": "\u3010\u849f\u84bb\u3011\u9996\u5148\u8fd9\u662f\u4e8c\u5206\u56fe\u5b8c\u7f8e\u5339\u914d\n\n\u6240\u4ee5\u7528\u5308\u7259\u5229KM\u7b97\u6cd5\n\n\u4f46\u91cd\u8981\u7684\u662f\u6784\u5efa\u4e8c\u5206\u56fe\u7684\u95ee\u9898    \u5404\u4f4d\u7287\u7684\u6784\u56fe\u90fd\u5f88\u5389\u5bb3   \u6211\u53ea\u662f\u6309\u6211\u7684\u60f3\u6cd5\u6784\u5efa\u7684\u4e00\u4e2a\uff1a\n\n\u4e8c\u5206\u56fe  \u4e00\u4e2a\u4e3a\u5b66\u751f  \u4e00\u4e2a\u4e3a\u5e8a\u94fa\n\n\u5f53\u5b66\u751f\u662f\u5728\u6821\u751f\u65f6   \u82e5\u4ed6\u56de\u5bb6     \u5219\u5b66\u751f\u4e0d\u5728   \u5e8a\u5728     \u6240\u4ee5  \u5e8a\u7684\u4e00\u90e8\u5206\u52a0\u5165\u6b64\u70b9\n\n\u82e5\u4e0d\u56de\u5bb6      \u5b66\u751f\u5728  \u5e8a\u5728     \u4e24\u90e8\u5206\u90fd\u52a0\u5165\u6b64\u70b9\n\n\u5f53\u5b66\u751f\u4e0d\u662f\u5728\u6821\u751f      \u5219\u6ca1\u5e8a \u6709\u4eba      \u5b66\u751f\u7684\u90e8\u5206\u52a0\u5165\u6b64\u70b9\n\n\u5f53\u63a5\u6536\u8ba4\u8bc6\u7684\u5b66\u751f\u540e    \u518d\u628a\u5728\u6821\u5b66\u751f\u7684map[i][i] \u8d4b\u503c\u4e3a1    \u5373 \u53ef\u4ee5\u81ea\u5df1\u7761\u81ea\u5df1\u7684\u5e8a\n\n\u7136\u540eKM\u8fdb\u53bb\n\n\u6700\u540e\u5224\u65ad    \u82e5\u4e8c\u5206\u56fe\u4e2d\u5b66\u751f\u591a\u4e8e\u5e8a     \u4e00\u5b9a\u4e0d\u6210\u7acb    \u76f4\u63a5\u201cT\\_T\u201d\n\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\nint T,n,map[111][111],a[111],b[111],c[111],d[111],vis[111],ans;\nint find(int x)\n{\n    for(int i=1;i<=c[0];i++)\n        if(!vis[c[i]]&&map[c[i]][x])\n        {\n            vis[c[i]]=1;\n            if(!d[c[i]]||find(d[c[i]]))\n            {\n                d[c[i]]=x;\n                return 1;\n            }\n        }\n    return 0;\n}\nint main()\n{\n    cin>>T;\n    for(int ii=1;ii<=T;ii++)\n    {\n        memset(a,0,sizeof(a));\n        memset(b,0,sizeof(b));\n        memset(c,0,sizeof(c));\n        memset(d,0,sizeof(d));\n        memset(map,0,sizeof(map));\n        ans=0;\n        cin>>n;\n        for(int i=1;i<=n;i++)\n            cin>>a[i];\n        for(int i=1;i<=n;i++)\n        {\n            int x;\n            cin>>x;\n            if(a[i])\n            {\n                if(x)\n                    c[++c[0]]=i;\n                else\n                    b[++b[0]]=c[++c[0]]=i;\n            }\n            else\n                b[++b[0]]=i;\n        }\n        for(int i=1;i<=n;i++)\n            for(int j=1;j<=n;j++)\n                cin>>map[i][j];\n        for(int i=1;i<=n;i++)\n            if(a[i])map[i][i]=1;//\u81ea\u5df1\u53ef\u4ee5\u7761\u81ea\u5df1\u7684\u5e8a\n        for(int i=1;i<=b[0];i++)\n        {\n            memset(vis,0,sizeof(vis));\n            if(find(b[i])) ans++;\n        }    \n        if(b[0]>c[0]) ans=-1;     //\u5173\u952e   \u82e5\u4e8c\u5206\u56fe\u4e2d\u7684\u4e0a\u534a\u90e8\u5206\u591a  \u65e0\u8bba\u5982\u4f55\u4e5f\u4e0d\u4f1a\u5b8c\u7f8e\u5339\u914d\uff01\uff01\uff01        \n        if(ans==b[0]) cout<<\"^_^\"<<endl;\n        else cout<<\"T_T\"<<endl;\n    }\n    return 0;\n}\n```",
        "postTime": 1469343608,
        "uid": 20111,
        "name": "soler",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2055 \u3010[ZJOI2009]\u5047\u671f\u7684\u5bbf\u820d\u3011"
    },
    {
        "content": "## P2055 [ZJOI2009]\u5047\u671f\u7684\u5bbf\u820d\n\u4e00\u9053\u6807\u51c6\u7684\u6700\u5927\u5339\u914d\uff0c\u9898\u76ee\u95ee\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u65b9\u6848\u4f7f\u5f97\u6240\u6709\u4e0d\u56de\u5bb6\u7684\u672c\u6821\u5b66\u751f\u548c\u6765\u770b\u4ed6\u4eec\u7684\u5176\u4ed6\u4eba\u90fd\u6709\u5730\u65b9\u4f4f\u3002\u660e\u663e\u82e5\u9700\u8981\u4f4f\u5bbf\u820d\u7684\u4eba\u6570\u7b49\u4e8e\u6700\u5927\u5339\u914d\u6570\u65f6\u6210\u7acb\uff0c\u53cd\u4e4b\u4e0d\u6210\u7acb\u3002\n\u9700\u8981\u4f4f\u5bbf\u6709\u4e24\u79cd\u53ef\u80fd\uff0c1.\u975e\u5728\u6821\u751f\uff0c2.\u5728\u6821\u751f\u4f46\u8981\u56de\u5bb6\uff0c\u53ea\u9700\u5728\u8f93\u5165\u65f6\u4fbf\u53ef\u7edf\u8ba1\u3002\n\u6700\u5927\u5339\u914d\u5f53\u7136\u8981\u7528[\u5308\u7259\u5229\u7b97\u6cd5](https://blog.csdn.net/SSL_wujiajie/article/details/86643692)\uff08\u501f\u7528\u5927\u795e\u7684\u535a\u5ba2\uff09\uff0c\u5728\u5efa\u7acb\u90bb\u63a5\u8868\u65f6\uff0c\u5c06\u6bcf\u4e2a\u4eba\u8fde\u4e0a\u4ed6\u53ef\u4ee5\u5360\u7528\u7684\u5e8a\u94fa\uff0c\u9996\u5148\u5728\u6821\u751f\u53ef\u4ee5\u5360\u81ea\u5df1\u7684\uff0c\u5982\u679c\u8ba4\u8bc6\u5bf9\u65b9\uff0c\u4e14\u5bf9\u65b9\u662f\u56de\u5bb6\u7684\u5b66\u751f\uff0c\u4e5f\u53ef\u4ee5\u5360\u7528\uff0c\u5efa\u597d\u540e\u5c31\u662f\u5308\u7259\u5229\u7684\u677f\u5b50\u4e86\uff0c\u6700\u540e\u5224\u65ad\u8f93\u51fa\u7b54\u6848\u3002\n\u4ee3\u7801\u5982\u4e0b\n~~~~\n------------\n\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint head[51],ver[2500],nxt[2500],match[60];\nbool vis[110];\nint tot,n,T,g,sum,ans;\nint a[60],b[60];\nvoid add(int x,int y)\n{\n    ver[++tot]=y;\n    nxt[tot]=head[x];\n    head[x]=tot;\n}\nbool dfs(int x)\n{\n    for(int i=head[x];i;i=nxt[i])\n    {\n        int y=ver[i];\n        if(!vis[y]){\n            vis[y]=1;\n            if(!match[y]||dfs(match[y])){\n                match[y]=x;return true;\n            }\n        }\n    }\n    return false;\n}\nint main()\n{\n\tcin>>T;\n\twhile(T--){\n\t\tcin>>n;\n\t\ttot=sum=ans=0;\n\t\tmemset(match,0,sizeof(match));\n\t\tmemset(head,0,sizeof(head));\n\t\tfor(int i=1;i<=n;++i){\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t\tif(a[i]==0) sum++;\n\t\t} \n\t\tfor(int i=1;i<=n;++i){\n\t\t\tscanf(\"%d\",&b[i]);\n\t\t\tif(a[i]==1&&b[i]==0) sum++,add(i,i);\n\t\t} \n\t\tfor(int i=1;i<=n;++i){\n\t\t\tfor(int j=1;j<=n;++j){\n\t\t\t\tcin>>g;\n\t\t\t\tif(g==1&&a[j]==1) add(i,j);\n\t\t\t}\n\t\t}\n\t\tfor(int i=1;i<=n;++i){\n\t\t\tif((a[i]&&!b[i])||!a[i]){\n\t\t\t\tmemset(vis,0,sizeof(vis));\n        \t\tif(dfs(i)) ans++;\n\t\t\t}\n\t\t}\n\t\tif(ans==sum) cout<<\"^_^\"<<endl;\n\t\telse cout<<\"T_T\"<<endl;\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1563881835,
        "uid": 182831,
        "name": "\u5343\u91cc\u9a6c",
        "ccfLevel": 0,
        "title": "P2055 [ZJOI2009]\u5047\u671f\u7684\u5bbf\u820d\u2014\u2014\u5343\u91cc\u9a6c"
    },
    {
        "content": "~~\u56e0\u4e3a\u61d2~~\uff0c\u63d0\u4f9b\u4e00\u79cd\u4e0d\u8fde\u8fb9\uff0c\u76f4\u63a5\u6839\u636e\u9898\u76ee\u7ed9\u51fa\u7684\u90bb\u63a5\u77e9\u9635\u8fdb\u884c\u5308\u7259\u5229\u7b97\u6cd5\u7684\u601d\u8def\u3002\n\n$a[i][j]$\u8868\u793a$i$\u80fd\u4e0d\u80fd\u7761$j$\u7684\u5e8a\uff0c\u9700\u8981\u6839\u636e\u5177\u4f53\u60c5\u51b5\u5728\u8bfb\u5165\u7684\u65f6\u5019\u9002\u5f53\u8c03\u6574\u3002\n\n$inv[i]$\u8868\u793a\u7b2c$i$\u4e2a\u9700\u8981\u5728\u5b66\u6821\u7761\u89c9\u7684\u4eba\uff08\u53ef\u80fd\u662f\u5728\u6821\u5b66\u751f\u4e5f\u53ef\u80fd\u662f\u6821\u5916\u4eba\u5458\uff09\n\n```c\n#include<stdio.h>\n#include<string.h>\nint a[60][60],is[60],leave[60],vis[60],mt[60];\n//a[i][j]:i\u80fd\u4e0d\u80fd\u7761j\u7684\u5e8a \nint inv[60],cnt,n;\n//inv[i]:\u7b2ci\u4e2a\u8981\u5728\u5b66\u6821\u7761\u89c9\u7684\u4eba \nint dfs(int p,int t){\n\tint i;\n\tfor(i=1;i<=n;i++){\n\t\tif(a[inv[p]][i]&&vis[i]!=t){\n\t\t\tvis[i]=t;\n\t\t\tif(!mt[i]||dfs(mt[i],t))return mt[i]=p;\n\t\t}\n\t}\n\treturn 0;\n}\nint main(){\n\tint i,j,t;\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tint ans=0;cnt=0;\n\t\tmemset(vis,0,sizeof(vis));\n\t\tmemset(mt,0,sizeof(mt));\n\t\tscanf(\"%d\",&n);\n\t\tfor(i=1;i<=n;i++)\n\t\t\tscanf(\"%d\",&is[i]);\n\t\tfor(i=1;i<=n;i++){\n\t\t\tscanf(\"%d\",&leave[i]);\n\t\t\tif(!is[i]||!leave[i])inv[++cnt]=i;\n\t\t\t//\u5982\u679c\u8fd9\u4eba\u4e0d\u662f\u5b66\u6821\u7684\u6216\u8005\u4e0d\u56de\u5bb6\u90a3\u5c31\u8981\u5728\u5b66\u6821\u7761\u89c9 \n\t\t}\n\t\tfor(i=1;i<=n;i++)\n\t\t\tfor(j=1;j<=n;j++){\n\t\t\t\tscanf(\"%d\",&a[i][j]);\n\t\t\t\tif(i==j&&is[i]&&!leave[i])a[i][j]=1;\n\t\t\t\t//\u5982\u679c\u5728\u6821\u6ca1\u56de\u5bb6\u90a3\u53ef\u4ee5\u7761\u81ea\u5df1\u7684\u5e8a \n\t\t\t\tif(!is[j])a[i][j]=0;\n\t\t\t\t//\u5982\u679c\u4e0d\u662f\u5b66\u6821\u7684\u6ca1\u5e8a\u53ef\u4ee5\u7ed9\u522b\u4eba\u7761 \n\t\t\t}\n\t\tfor(i=1;i<=cnt;i++)\n\t\t\tif(dfs(i,i))ans++;\n\t\t\telse break;\n\t\tif(ans!=cnt)printf(\"T_T\\n\");\n\t\telse printf(\"^_^\\n\");\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1551172816,
        "uid": 108971,
        "name": "Potassium",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2055 \u3010[ZJOI2009]\u5047\u671f\u7684\u5bbf\u820d\u3011"
    },
    {
        "content": "\u601d\u8def\uff1a\u8fd9\u4e2a\u9898\u76ee\u4e00\u5b9a\u8981\u5199\u4e2a\u9898\u89e3\uff0c\u9898\u76ee\u5176\u5b9e\u5f88\u597d\u60f3\u3002\u9996\u5148\u7531n\u4e2a\u4eba\uff0c\u5176\u4e2d\u6709m\u4e2a\u672c\u6821\u751f\u3002\u8fd9\u5c31\u8bf4\u660e\u6709m\u4e2a\u5e8a\u4f4d\u3002\u4eba\u4ece1-n\u5f00\u59cb\u7f16\u53f7\uff0c\u5e8a\u4f4d\u4ecen+1\u5230n+m\u7f16\u53f7\u3002\u8fd9\u6837\u82e5i\u662f\u4f4f\u6821\u751f\uff0c\u5219i\u62e5\u6709\u4e00\u4e2a\u5e8a\u4f4d\u7f16\u53f7\u4e3aP[i]\u3002\u8fd9\u6837\u6240\u6709\u4e0ei\u8ba4\u8bc6\u7684\u4eba\u90fd\u53ef\u4ee5\u8fde\u4e00\u6761\u8fb9\u4ecei\u5230P[i]\u3002\u5982\u679ci\u4e0d\u56de\u5bb6\uff0c\u5219i\u8981\u8fde\u4e00\u6761\u8fb9\u5230P[i]\u3002\u8fd9\u6837\u3002\u5c31\u5904\u7406\u5b8c\u5efa\u56fe\u8fc7\u7a0b\u3002\n\u4e0b\u9762\u5f00\u59cb\u5339\u914d\uff1a\u5339\u914d\u8fc7\u7a0b\u6211\u4eec\u53ea\u5339\u914d\u9700\u8981\u5e8a\u4f4d\u7684\u4eba\uff08\u672c\u6821\u751f\uff0c\u4f46\u662f\u4e0d\u56de\u5bb6\u548c\u5916\u6821\u751f\uff09.\u5982\u679c\u90fd\u80fd\u5339\u914d\u5230\u5e8a\uff0c\u5c31\u662f\u6709\u65b9\u6848\uff0c\u5982\u679c\u6709\u4eba\u6ca1\u5339\u914d\u5230\uff0c\u5c31\u662f\u4e0d\u80fd\u3002\n```c\n#include<stdio.h>\n#include<iostream>\n#include<vector>\n#include<algorithm>\n#define MAXN  2005\nusing namespace std;\n\nvector<int> G[55];                      //n\u7684\u8303\u56f4\u5c0f\u4e8e\u7b49\u4e8e50\nbool vis[105];                           //\u6700\u574f\u60c5\u51b550\u4e2a\u4eba\u5168\u662f\u4f4f\u6821\u751f\uff0c\u8fd9\u6837\u5e8a\u53f7\u5c31\u662f51-100\nint vv[105];                              //51-100\nint Map[55][55];            //\u5b58\u50a8\u5173\u7cfb\u77e9\u9635\nint sg[55],sp[55];           //\u5176\u4e2dsg\u8868\u793a\u662f\u5426\u662f\u4f4f\u6821\u751f,sp\u8868\u793a\u662f\u5426\u56de\u5bb6\nint cnt;                                            //\u8ba1\u7b97\u51fa\u4f4f\u6821\u751f\u7684\u6570\u76ee\uff0c\u4e5f\u5c31\u662f\u80fd\u7528\u7684\u5e8a\u4f4d\nmap<int,int> P;                          //\u4f4f\u6821\u751f\u7f16\u53f7\u6620\u5c04\u6210\u5e8a\u7684\u7f16\u53f7\uff0c\u5e8a\u7684\u7f16\u53f7\u4ecen+1\u5f00\u59cb\uff0c\u7ed3\u675f\u4e8en+cnt\nint T,n,kk;\n\nbool match(int u)\n{\n    for(int i=0;i<G[u].size();i++)\n    {\n        int v=G[u][i];\n        if(vis[v])\n            continue;\n        vis[v]=true;\n        if(!vv[v]||match(vv[v]))\n        {\n            vv[v]=u;\n            return true;\n        }\n    }\n    return false;\n}\n\nvoid Km()                                         //\u5916\u6821\u751f\u52a0\u4e0a\u6ca1\u56de\u5bb6\u7684\u540c\u5b66\u90fd\u80fd\u5206\u5230\u5e8a\u4f4d\u5c31\u53ef\u884c\n{\n    memset(vv,0,sizeof(vv));\n    bool ok=true;\n    for(int i=1;i<=n;i++)\n    {\n        memset(vis,0,sizeof(vis));\n        if(sg[i]&&!sp[i]||!sg[i])   //\u662f\u672c\u6821\u751f\u4e14\u4e0d\u56de\u5bb6\uff0c\u4e0d\u662f\u5916\u6821\u4eba\u5458(\u5176\u4ed6\u7684\u4e0d\u505a\u5339\u914d\u5904\u7406)\n        {\n               if(!match(i))              //\u5339\u914d\u4e0d\u6210\u529f\n               {\n                   ok=false;\n                   break;\n               }\n        }\n    }\n    if(ok)\n        printf(\"^_^\\n\");\n    else\n        printf(\"T_T\\n\");\n}\n\nvoid init()\n{\n   for(int i=1;i<=n;i++)\n   {\n       if(sg[i])                                     //\u5982\u679c\u4ed6\u662f\u4f4f\u6821\u751f\uff08\u6709\u5e8a\u4f4d\uff09\n       {\n           for(int j=1;j<=n;j++)\n           {\n               if(Map[i][j])                                //\u4e24\u4e2a\u4eba\u8ba4\u8bc6\n               {\n                   G[j].push_back(P[i]);          //\u4ece\u7f16\u53f7\u4e3aj\u7684\u4eba\u5411P[i]\u53f7\u5e8a\u8fde\u8fb9\n               }\n           }\n           if(!sp[i])\n             G[i].push_back(P[i]);              //\u662f\u4f4f\u6821\u751f\uff0c\u5e76\u4e14\u4e0d\u56de\u5bb6\uff0c\u5206\u914d\u5e8a\u4f4d\n       }\n   }\n}\n\nint main()\n{\n    scanf(\"%d\",&T);\n    while(T--)\n    {\n        scanf(\"%d\",&n);\n        cnt=0;\n        kk=1;\n        for(int i=1;i<=n;i++)\n           G[i].clear();\n        P.clear();\n        for(int i=1;i<=n;i++)\n        {\n            scanf(\"%d\",&sg[i]);\n            if(sg[i]==1)                                //\u662f1\u8868\u793a\u662f\u4f4f\u6821\u751f\n                cnt++;                                    //\u7edf\u8ba1\u4f4f\u6821\u751f\u6570\u91cf\n        }\n        for(int i=1;i<=n;i++)\n            scanf(\"%d\",&sp[i]);\n        for(int i=1;i<=n;i++)            //\u8bfb\u5165\u5173\u7cfb\u77e9\u9635\n        {\n            if(sg[i]==1)                         //\u662f\u4f4f\u6821\u751f\uff0c\u5c31\u53ef\u4ee5\u62e5\u6709\u5e8a\u4f4d\n            {\n                P[i]=n+kk;                      //\u7ed9\u6240\u6709\u7684\u4f4f\u6821\u751f\u5206\u914d\u5e8a\u53f7(\u4ecen+1\u5f00\u59cb\u5206\u914d)\n                kk++;\n            }\n            for(int j=1;j<=n;j++)\n            {\n                scanf(\"%d\",&Map[i][j]); //\u5b58\u50a8\u5173\u7cfb\u77e9\u9635\n            }\n        }\n        init();\n        Km();\n    }\n    return 0;\n}\n\n```\n",
        "postTime": 1569550548,
        "uid": 210155,
        "name": "abandentsky",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2055 \u3010[ZJOI2009]\u5047\u671f\u7684\u5bbf\u820d\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u662f\u4e00\u9053\u4e8c\u5206\u56fe\u5339\u914d\u95ee\u9898\uff0c\u53ef\u4ee5\u7528\u5308\u7259\u5229\u7b97\u6cd5\u6c42\u89e3\uff0c\u7136\u800c\u7b14\u8005\u7528\u7684\u662f\u6700\u5927\u6d41dinic\u7b97\u6cd5\uff01\n\n\u9996\u5148\uff0c\u6211\u4eec\u8003\u8651\u5982\u4f55\u628a\u6b64\u95ee\u9898\u8f6c\u6362\u4e3a\u6700\u5927\u6d41\u3002\u6211\u4eec\u8981\u5b66\u4f1a\u62c6\u70b9\uff01\n\n\u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u628a\u4e00\u4e2a\u70b9\u62c6\u6210\u4e24\u4e2a\u70b9\uff08\u4ee5\u9650\u5236\u6bcf\u4e2a\u70b9\uff08\u7269\u54c1\uff09\u7528\u4e00\u6b21\uff09\n\n\u8bb0\u5f55i\u62c6\u4e3ai,i+n\n\n\u6211\u4eec\u8981\u5355\u72ec\u5efa\u4e00\u4e2a\u6e90\u70b9\u548c\u6c47\u70b9\uff0c\u7136\u540e\u6e90\u70b9S\u5411i\u8fde\u8fb9\uff0ci+n\u5411T\u8fde\u8fb9\u5373\u53ef\uff01\n\u7136\u540edinic\u5c31\u662f\u4e00\u79cd\u6700\u5927\u6d41\u7b97\u6cd5\uff0c\u518d\u6b21\u4e0d\u505a\u8d58\u8ff0\uff0c\u53ef\u4ee5\u53c2\u7167\u535a\u5ba2\u81ea\u884c\u5b66\u4e60\uff01\n\u7ed9\u4e00\u4e0b\u6211\u7684\u4ee3\u7801\u5427\uff1a\n```cpp\n// luogu-judger-enable-o2\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 5005, M = (N << 2), INF = 1e9;\nint n, ss, tt, ecnt = 0, cur[N], fir[N], to[M], nxt[M], len[M], inv[M];\nint depth[N], q[N], c1[N], c2[N], l, r, ans = 0, tot = 0; bool vis[N];\ntemplate <class T> void rd(T &x) {\n    char c = getchar(); int f = 1; x = 0;\n    for (; !isdigit(c); c = getchar()) if (c == '-') f = -1;\n    for (; isdigit(c); c = getchar()) x = x * 10 + c - '0';\n    x *= f;\n}\nvoid ae(int u, int v, int w) {\n    to[++ecnt] = v; nxt[ecnt] = fir[u]; len[ecnt] = w; inv[ecnt] = ecnt + 1; fir[u] = ecnt;\n    to[++ecnt] = u; nxt[ecnt] = fir[v]; len[ecnt] = 0; inv[ecnt] = ecnt - 1; fir[v] = ecnt;\n}\nbool make_level() {\n    int i; memset(vis, false, sizeof(vis));\n    for (i = ss; i <= tt; ++i) cur[i] = fir[i];\n    vis[q[l = r = 1] = ss] = true; depth[ss] = 0;\n    while (l <= r) {\n        int i, u = q[l++];\n        for (i = fir[u]; i; i = nxt[i]) {\n            int v = to[i], w = len[i];\n            if (!vis[v] && w) vis[q[++r] = v] = true, depth[v] = depth[u] + 1;\n        }\n    }\n    return vis[tt];\n}\nint dinic(int u, int lim) {\n    if (u == tt) return lim;\n    int i, ret = 0;\n    for (i = cur[u]; i; i = nxt[i]) {\n        int v = to[i], w = len[i];\n        if (w && depth[v] == depth[u] + 1) {\n            int tmp = dinic(v, min(lim, w));\n            len[i] -= tmp, len[inv[i]] += tmp;\n            lim -= tmp, ret += tmp;\n            if (!lim) {cur[u] = i; return ret;}\n        }\n    }\n    cur[u] = 0; return ret;\n}\nvoid solve() {\n    int i, j; memset(fir, ecnt = 0, sizeof(fir));\n    rd(n), ss = 0, tt = n << 1 | 1; ans = tot = 0;\n    for (i = 1; i <= n; ++i) {\n        rd(c1[i]);\n        if (c1[i] == 1) ae(i + n, tt, 1);\n    }\n    for (i = 1; i <= n; ++i) {\n        rd(c2[i]);\n        if (c1[i] == 1 && !c2[i] || !c1[i]) ae(ss, i, 1), ++tot;\n    }\n    for (i = 1; i <= n; ++i)\n        for (j = 1; j <= n; ++j) {\n            int x; rd(x);\n            if (i == j || x) ae(i, j + n, 1);\n        }\n    while (make_level()) ans += dinic(ss, INF);\n    if (ans >= tot) puts(\"^_^\"); else puts(\"T_T\");\n}\nint main() {\n    int T; rd(T);\n    while (T--) solve();\n    return 0;\n}\n\n```",
        "postTime": 1546606507,
        "uid": 30817,
        "name": "muller",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2055 \u3010[ZJOI2009]\u5047\u671f\u7684\u5bbf\u820d\u3011"
    },
    {
        "content": "## \u7f51\u7edc\u6d41\u5efa\u56fe  \n\u5de6\u8fb9n\u4e2a\u70b9\u662fn\u4e2a\u4eba\uff0c\u53f3\u8fb9n\u4e2a\u70b9\u662f\u5e8a\u3002\u5176\u4e2d\u8d85\u7ea7\u6e90\u8fde\u5411\u6bcf\u4e00\u4e2a\u5468\u672b\u5f85\u5728\u5b66\u6821\u7684\u4eba\uff08\u56de\u5bb6\u7684\u5728\u8bfb\u751f\u4e0d\u5728\u5b66\u6821\uff0c\u4e0d\u8fde\u5373\u53ef\uff09\uff0c\u6bcf\u4e00\u5f20\u5e8a\u8fde\u5411\u8d85\u7ea7\u6c47\uff08\u975e\u5728\u8bfb\u751f\u6ca1\u6709\u5e8a\uff0c\u4e0d\u8fde\u5373\u53ef\uff09\uff0c\u4e2d\u95f4\u7684\u5bf9\u5e94\u5173\u7cfb\u5c31\u662f\u8c01\u8ba4\u8bc6\u8c01\u5c31\u8c01\u8fde\u5411\u8c01\uff0c\u610f\u5473\u7740\u67d0\u4e2a\u4eba\u53ef\u4ee5\u7761\u54ea\u4e9b\u5e8a\uff08\u4e5f\u8bb8\u88ab\u6307\u5411\u7684\u4eba\u6839\u672c\u6ca1\u6709\u5e8a\uff0c\u4f46\u662f\u6ca1\u6709\u5173\u7cfb\uff0c\u90a3\u4e2a\u4eba\u4e0d\u4f1a\u8fde\u5411\u8d85\u7ea7\u6c47\uff1b\u4e5f\u8bb8\u6307\u5411\u522b\u4eba\u7684\u4eba\u4e0d\u9700\u8981\u7559\u5bbf\uff0c\u4f46\u662f\u4e5f\u6ca1\u5173\u7cfb\uff0c\u90a3\u4e2a\u4eba\u4e0d\u4f1a\u8fde\u5411\u8d85\u7ea7\u6c47\uff0c\u6240\u6709\u4e0d\u4f1a\u5360\u5e8a\u4f4d\uff09\u3002\u6700\u5927\u6d41\u7b49\u4e8e\u5468\u672b\u6709\u5e8a\u7761\u7684\u4eba\uff0c\u82e5\u8fd9\u4e2a\u6570\u7b49\u4e8e\u5468\u672b\u7559\u5bbf\u4eba\u6570\u5219\u5b58\u5728\u65b9\u6848\u3002\n```cpp\n#include<bits/stdc++.h>\n#define N 1010\n#define M 100010\n#define inf 1000000007\nusing namespace std;\nint T1,n,id[N],back[N],first[N],nxt[M],u[M],v[M],w[M],tot,cnt;\nint x,sum=0,S,T,flow,maxflow,ans[N];\nint depth[N];\nqueue <int> q;\nvoid add(int from,int to,int cost)\n{\n\ttot++;\n\tnxt[tot]=first[from];\n\tfirst[from]=tot;\n\tu[tot]=from;\n\tv[tot]=to;\n\tw[tot]=cost;\n\treturn;\n}\nint bfs()\n{\n\tmemset(depth,0,sizeof(depth));\n\twhile (q.size()) q.pop();\n\tdepth[S]=1;\n\tq.push(S);\n\twhile (q.size())\n\t{\n\t\tint tmp=q.front();\n\t\tq.pop();\n\t\tfor (int j=first[tmp];j!=-1;j=nxt[j])\n\t\t{\n\t\t\tint to=v[j];\n\t\t\tif (w[j]&&!depth[to])\n\t\t\t{\n\t\t\t\tdepth[to]=depth[tmp]+1;\n\t\t\t\tq.push(to);\n\t\t\t}\n\t\t}\n\t}\n\tif (depth[T]) return 1;\n\telse return 0;\n}\nint Dinic(int point,int f)\n{\n\tif (point==T) return f;\n\tint rest=f,k;\n\tfor (int j=first[point];rest&&j!=-1;j=nxt[j])\n\t{\n\t\tint to=v[j];\n\t\tif (w[j]&&depth[to]==depth[point]+1)\n\t\t{\n\t\t\tk=Dinic(to,min(w[j],f));\n\t\t\tif (!k) depth[to]=0;\n\t\t\tw[j]-=k;\n\t\t\tw[j^1]+=k;\n\t\t\trest-=k;\n\t\t}\n\t}\n\treturn f-rest;\n}\nint main()\n{\n//\tfreopen(\"testdata.in\",\"r\",stdin);\n\tscanf(\"%d\",&T1);\n\tfor (int t=1;t<=T1;t++)\n\t{\n\t\tmemset(first,-1,sizeof(first));\n\t\ttot=1;\n\t\tcnt=0;\n\t\tscanf(\"%d\",&n);\n\t\t//1--n\u662f\u4eba\n\t\t//(n+1)--(2n)\u662f\u5e8a \n\t\tS=2*n+1;\n\t\tT=2*n+2;\n\t\tfor (int i=1;i<=n;i++) scanf(\"%d\",&id[i]);\n\t\tfor (int i=1;i<=n;i++) scanf(\"%d\",&back[i]);\n        for (int i=1;i<=n;i++) if ((id[i]&&!back[i])||(!id[i])) cnt++;\n\t\tfor (int i=1;i<=n;i++) \n\t\t    for (int j=1;j<=n;j++) \n\t\t\t{\n\t\t\t\tscanf(\"%d\",&x);\n\t\t\t\tif (i!=j&&x) add(i,j+n,1),add(j+n,i,0);//\u6bcf\u4e2a\u4eba\u5411\u4ed6\u53ef\u4ee5\u7761\u5230\u7684\u5e8a\u8fde\u8fb9\t\t\t\t                          \n\t\t\t\telse if (i==j) add(i,i+n,1),add(i+n,i,0);//\u81ea\u5df1\u4e0d\u8ba4\u8bc6\u81ea\u5df1\u4f46\u662f\u80fd\u7761\u81ea\u5df1\u7684\u5e8a \n\t\t\t}\n\t\tfor (int i=1;i<=n;i++) if ((id[i]&&!back[i])||(!id[i])) add(S,i,1),add(i,S,0);//\u8d85\u7ea7\u6e90\u8fde\u5411\u6bcf\u4e2a\u5468\u672b\u5728\u5b66\u6821\u7684\u4eba \n\t\tfor (int i=1;i<=n;i++) if (id[i]) add(i+n,T,1),add(T,i+n,0);//\u6bcf\u4e2a\u5e8a\u8fde\u5411\u8d85\u7ea7\u6c47\uff0c\u5728\u8bfb\u751f\u6709\u5e8a \n\t\tmaxflow=0;\n\t\twhile (bfs())\n\t\t    while ((flow=Dinic(S,inf))) maxflow+=flow;\n\t\tif (maxflow==cnt) ans[++sum]=1;\n\t\telse ans[++sum]=2;\n\t}\n\tfor (int i=1;i<=sum;i++) if (ans[i]==1) printf(\"^_^\\n\");\n\telse if (ans[i]==2) printf(\"T_T\\n\");\n\treturn 0;\n}\n```",
        "postTime": 1542441903,
        "uid": 49107,
        "name": "C_S_X_",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2055 \u3010[ZJOI2009]\u5047\u671f\u7684\u5bbf\u820d\u3011"
    },
    {
        "content": "\u5308\u7259\u5229\u7b97\u6cd5+\u601d\u8def~\n\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5728\u6821\u7684\u4eba\uff0c\u4e0e\u4ed6\u53ef\u4ee5\u7761\u7684\u5e8a\u8fde\u8fb9\uff0c\u8fd9\u91cc\u5e8a\u548c\u4eba\u90fd\u8bb0\u4e3a\u70b9\uff0c\u5339\u914d\u7684\u65f6\u5019\u7edf\u4e00\u5339\u914d\uff1b\u6bd4\u5982\u7b2ci\u4e2a\u4eba\u7684\u5e8a\u5c31\u662f\u7b2ci+n\u53f7\uff0c\u4e0d\u662f\u5b66\u751f\u4e5f\u6709\u5e8a\uff0c\u53ea\u4e0d\u8fc7\u4e0d\u8fde\u8fb9\u3002\n\n\n\u6ce8\u610f\u5728\u6821\u7684\u6709\u5e8a\u7684\u5b66\u751f\u8981\u548c\u81ea\u5df1\u7684\u5e8a\u8fde\u8fb9\uff01\u4e0d\u7136WA\u5230\u98de\u8d77\uff01\n\n\n\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\nint t,n,k,ans[101],tot;\nbool b[51],c[51],kkz[101][101],vis[101],flag;\nchar s[3]={84,94,95};\nbool col(int u)\n{\n    for(int i=1;i<=2*n;i++)\n      if(kkz[u][i] && !vis[i])\n      {\n          vis[i]=1;\n          if(!ans[i] || col(ans[i]))\n          {\n              ans[i]=u;return 1;\n        }\n      }\n    return 0;\n}\nint main()\n{\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        memset(ans,0,sizeof(ans));\n        memset(kkz,0,sizeof(kkz));\n        scanf(\"%d\",&n);flag=0;\n        for(int i=1;i<=n;i++) scanf(\"%d\",&b[i]);\n        for(int i=1;i<=n;i++) scanf(\"%d\",&c[i]);\n        for(int i=1;i<=n;i++)\n          for(int j=1;j<=n;j++)\n          {\n              scanf(\"%d\",&k);\n              if(k && i!=j)\n              {\n                  if(b[j] && ((b[i] && !c[i]) || !b[i])) kkz[i][j+n]=kkz[j+n][i]=1;\n                if(b[i] && ((b[j] && !c[j]) || !b[j])) kkz[j][i+n]=kkz[i+n][j]=1;\n            }\n          }\n        for(int i=1;i<=n;i++)\n          if(b[i] && !c[i]) kkz[i][i+n]=kkz[i+n][i]=1;\n        for(int i=1;i<=n;i++)\n          if((b[i] && !c[i]) || !b[i])\n          {\n            memset(vis,0,sizeof(vis));\n            if(!col(i))\n            {\n                flag=1;break;\n            }\n          }\n        if(!flag) printf(\"%c%c%c\\n\",s[1],s[2],s[1]);\n        else printf(\"%c%c%c\\n\",s[0],s[2],s[0]);\n    }\n    return 0;\n}\n```",
        "postTime": 1479110224,
        "uid": 16334,
        "name": "licone",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2055 \u3010[ZJOI2009]\u5047\u671f\u7684\u5bbf\u820d\u3011"
    },
    {
        "content": "\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d \u53ef\u60dc\u6211\u5e76\u6ca1\u6709\u5b66\u4f1a\u5308\u7259\u5229\u7b97\u6cd5QAQ\n\n\u6240\u4ee5\u5c31\u7528DINIC\u505a\u4e86 \u53cd\u6b63\u6548\u7387\u5f71\u54cd\u4e0d\u5927= =\n\n\u5efa\u56fe\u65b9\u6cd5\u5176\u5b9e\u5e76\u4e0d\u96be \u6211\u5199\u5728\u4ee3\u7801\u6ce8\u91ca\u91cc\u4e86\n\n\n\u6700\u5173\u952e\u7684\u662f \u591a \u7ec4 \u6570 \u636e\uff01\n\n\u8bb0\u5f97\u521d\u59cb\u5316\u554a \u975e\u5e38\u5173\u952e\n\n\u6211\u5c31\u56e0\u4e3a\u6ca1\u521d\u59cb\u5316WA\u4e86\u4e00\u4e07\u6b21\u554a\u4e00\u4e07\u6b21\u2026\u2026TAT\n\n\n```cpp\n\n#include <cstdio>\n#include <cstring>\n#include <vector>\n#include <algorithm>\n#include <queue>\n\nusing namespace std;\n\nconst int N=201,S=0,T=200,INF=int(1e9);\n\nstruct edge {\n    int u,v,c,f;\n    edge() { }\n    edge(int a,int b,int d,int e):u(a),v(b),c(d),f(e) { }\n};\n\nvector<int> g[N];\nvector<edge> e;\nint n=0,t=0,stu[N],hom[N],vis[N],d[N],cur[N],dmd=0;\n\nvoid addEdge(int u,int v) {\n    e.push_back(edge(u,v,1,0));\n    e.push_back(edge(v,u,0,0));\n    g[u].push_back(e.size()-2);\n    g[v].push_back(e.size()-1);\n}\n\ninline void clear() {\n    e.clear();\n    for (int i=0;i<N;++i)\n        g[i].clear();\n    dmd=0;\n}\n\ninline void build() {\n    //0\u4e3a\u6e90 200\u4e3a\u6c47 1~n\u548cn+1~2n\u5747\u4e3a\u5b66\u751f \n    //\u5982\u679c\u6709\u4f4f\u5bbf\u7684\u9700\u6c42\uff08\u975e\u5728\u6821\u5b66\u751f \u6216\u8005\u4e0d\u56de\u5bb6\uff09 \u5c31\u4eces\u8fde\u4e00\u6761\u8fb9 \u5bb9\u91cf\u4e3a1\n    //\u5982\u679c\u80fd\u63d0\u4f9b\u5e8a\uff08\u4e3a\u5728\u6821\u5b66\u751f\uff09 \u5c31\u5411t\u8fde\u4e00\u6761\u8fb9 \u5bb9\u91cf\u4e3a1\n    //\u5b66\u751f\u4e4b\u95f4\u6839\u636e\u5173\u7cfb\u5168\u90e8\u8fde\u5bb9\u91cf\u4e3a1\u7684\u8fb9 \u5728\u6821\u5b66\u751f\u8fde\u81ea\u5df1 \n    scanf(\"%d\",&n);\n    for (int i=1;i<=n;++i)\n        scanf(\"%d\",stu+i);    \n    for (int i=1;i<=n;++i)\n         scanf(\"%d\",hom+i);\n    for (int i=1;i<=n;++i) {\n        if (!stu[i] || (stu[i] && !hom[i])) {\n            addEdge(S,i);\n            ++dmd;\n        }\n        if (stu[i])\n            addEdge(n+i,T);\n    }\n    for (int i=1;i<=n;++i) {\n        if (stu[i] && !hom[i])\n            addEdge(i,n+i);\n        for (int j=1;j<=n;++j) {\n            int flag=0;\n            scanf(\"%d\",&flag);\n            if (flag) \n                addEdge(i,n+j);\n        }\n    }\n}\n\nint dfs(int x,int a) {\n    if (x==T || a==0)\n        return a;\n    int flow=0,f=0;\n    for (int& i=cur[x];i<g[x].size();++i) {\n        edge& e0=e[g[x][i]];\n        if (d[x]+1==d[e0.v] && (f=dfs(e0.v,min(a,e0.c-e0.f)))>0) {\n            e0.f+=f;\n            e[g[x][i]^1].f-=f;\n            flow+=f;\n            a-=f;\n            if (a==0)\n                break;\n        }\n    }\n    return flow;\n}\n\nint bfs() {\n    memset(vis,0,sizeof(vis));\n    memset(d,0,sizeof(d));\n    queue<int> q;\n    d[S]=1;\n    vis[S]=1;\n    q.push(S);\n    while (!q.empty()) {\n        int x=q.front();\n        q.pop();\n        for (int i=0;i<g[x].size();++i) {\n            edge e0=e[g[x][i]];\n            if (!vis[e0.v] && e0.c>e0.f) {\n                vis[e0.v]=1;\n                q.push(e0.v);\n                d[e0.v]=d[x]+1;\n            }\n        }\n    }\n    return vis[T];\n}\n\nvoid maxFlow() {\n    int flow=0;\n    while (bfs()) {\n        memset(cur,0,sizeof(cur));\n        flow+=dfs(S,INF);        \n        \n    }\n    if (flow>=dmd) {\n        printf(\"^_^\\n\");\n        return;\n    }\n    printf(\"T_T\\n\");\n}\n\nint main(void) {\n    scanf(\"%d\",&t);\n    while (t--) {\n        clear();\n        build();\n        maxFlow();\n    }\n    return 0;    \n}\n\n```",
        "postTime": 1462427404,
        "uid": 13433,
        "name": "QwQ2000",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2055 \u3010[ZJOI2009]\u5047\u671f\u7684\u5bbf\u820d\u3011"
    },
    {
        "content": "\u88f8\u7684\u4e8c\u5206\u56fe\u5339\u914d\uff0c\u5206\u6210\u4e24\u5806\u70b9\uff0c\u4e00\u5806\u4e3a\u4eba\uff0c\u4e00\u5806\u4e3a\u5e8a\uff0c\u5c06\u6bcf\u4e2a\u4f4f\u6821\u7684\u4eba\u548c\u4ed6\u81ea\u5df1\u7684\u5e8a\u548c\u8ba4\u8bc6\u7684\u4eba\u7684\u5e8a\u8fde\u8fb9\uff0c\u7136\u540e\u76f4\u63a5\u8dd1\u4e8c\u5206\u56fe\u5339\u914d\u3002\u6211\u7684\u65b9\u6cd5\u4e3a\u5308\u7259\u5229\u7b97\u6cd5\uff0c\u5f53\u7136\u8dd1\u7f51\u7edc\u6d41\u4e5f\u53ef\u4ee5\u3002\u4e0d\u4f1a\u5308\u7259\u5229\u7b97\u6cd5\u7684\u770b\u4e0b\u8fd9\u4e2a\u535a\u5ba2\uff0c\u5199\u7684\u5f88\u597d\u7684\uff1ahttp://blog.csdn.net/dark\\_scope/article/details/8880547\n\n\u76f4\u63a5\u4e0a\u4ee3\u7801\u3002\n\n```cpp\n\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#define N 101\n#define M 3001\nusing namespace std;\nint t,n,m;\nint p[N],front[N],to[M],next[M],line,ans;\nbool b1[N],b2[N],pre[N];\nvoid insert(int x,int y)\n{\n    line++;to[line]=y;next[line]=front[x];front[x]=line;\n}\nbool find(int u)\n{int i;\n   for(i=front[u];i!=-1;i=next[i])\n        if(pre[to[i]])\n           {\n                 pre[to[i]]=false;\n                 if(p[to[i]]==0 || find(p[to[i]]))\n                     {\n                          p[to[i]]=u;\n                          return true;\n                     }\n           }\n    return false;\n}\nint main()\n{int i,j,k;\n    scanf(\"%d\",&t);\n    for(int i1=1;i1<=t;i1++)\n       {\n              scanf(\"%d\",&n);\n              for(i=1;i<=n;i++)\n                 {\n                     scanf(\"%d\",&k);\n                     b1[i]=k;\n                 }\n               m=0;\n               for(i=1;i<=n;i++)\n                 {\n                     scanf(\"%d\",&k);\n                     if(!b1[i]) b2[i]=true,m++;\n                         else \n                           {\n                               b2[i]=k;\n                               b2[i]=!b2[i];\n                               if(b2[i]) m++;\n                           }\n                  }\n               line=-1;memset(front,-1,sizeof(front));\n               for(i=1;i<=n;i++)\n                 if(b2[i])\n                 {\n                       if(b1[i]) insert(i,i+n);\n                       for(j=1;j<=n;j++)\n                      {\n                          scanf(\"%d\",&k);\n                          if(k)\n                            if(b1[j]) insert(i,j+n);\n                      }         \n                 }\n                   else for(j=1;j<=n;j++) scanf(\"%d\",&k);\n               ans=0;\n               memset(p,0,sizeof(p));\n               for(i=1;i<=n;i++)\n                 if(b2[i]) \n                    {\n                        memset(pre,true,sizeof(pre));\n                        if(find(i)) ans++;\n                    }\n               if(ans==m) printf(\"%c%c%c\\n\",94,95,94);\n                   else printf(\"%c%c%c\\n\",84,95,84);\n               \n       }\n    \n}\n\n```",
        "postTime": 1460013549,
        "uid": 10357,
        "name": "\u6840\u9a9c\u7684\u91ce\u5fc3\u5bb6",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2055 \u3010[ZJOI2009]\u5047\u671f\u7684\u5bbf\u820d\u3011"
    },
    {
        "content": "\u849f\u84bb\u8bf4\u4e00\u4e0b\u5efa\u8fb9\uff1a\n\n\u9996\u5148\uff0c\u4eba\u3001\u5e8a\u5404\u4e3a\u70b9\u96c6\u662f\u663e\u7136\u7684\u3002\u5177\u4f53\u4e00\u70b9\u8bf4\uff0c\u5e94\u8be5\u662f**\u4f4f\u5728\u5b66\u6821\u7684\u4eba**\u548c**\u6240\u6709\u7684\u5e8a**\u5404\u4e3a\u70b9\u96c6\u3002\u5f53\u7136\uff0c\u672c\u6821\u5b66\u751f\u90fd\u6709\u4e00\u5f20\u5e8a\u3002\n\n\u4f4f\u5728\u5b66\u6821\u7684\u90fd\u662f\u4ec0\u4e48\u4eba\uff1f\u975e\u672c\u6821\u5b66\u751f + \u4e0d\u79bb\u6821\u7684\u672c\u6821\u5b66\u751f\u3002\n\n\u6211\u4eec\u7528 leave[i] \u8868\u793a i \u79bb\u6821\u4e0e\u5426\u7684\u8bdd\uff0c\u9898\u4e2d\u975e\u672c\u6821\u5b66\u751f\u7684 leave \u662f\u968f\u673a\u7684\uff0c\u628a\u4ed6\u4eec\u4e5f\u8bb0\u4e3a 0\u3002\n\n\u5982\u6b64\u4e00\u6765\uff0cleave[i] ? i\u4e0d\u4f4f\u5728\u6821 : i\u4f4f\u5728\u5b66\u6821;\n\n\u51c6\u5907\u5b8c\u6210\uff0c\u5c31\u53ef\u4ee5\u5efa\u8fb9\u4e86\u3002\n\n\u5bf9\u4e8e i \u548c j \u800c\u8a00\uff0c\u82e5\u4e92\u76f8\u8ba4\u8bc6\u4e14 j \u6709\u5e8a\uff0c\u90a3\u4e48 i \u5c31\u53ef\u4ee5\u7761\u5728 j \u7684\u5e8a\u4e0a\uff0c\u8fd9\u6837\u5c31\u4ece i \u5411 j \u8fde\u4e00\u6761\u8fb9\u5373\u53ef\u3002\n\n\u7279\u522b\u5730\uff0c~~\u9898\u76ee\u4e2d\u7684\u81ea\u5df1\u4e0d\u8ba4\u8bc6\u81ea\u5df1~~\uff0c\u6211\u4eec\u9700\u8981\u5904\u7406\u4e00\u4e0b\u3002\u5982\u679c i \u4f4f\u5728\u5b66\u6821\u800c\u4e14\u81ea\u5df1\u6709\u5e8a\uff0c\u4ed6\u4e5f\u80fd\u7761\u81ea\u5df1\u5e8a\u4e0a\uff0c\u4e8e\u662f\u4ece i \u5411 i \u8fde\u8fb9\u3002\n\n\u7136\u540e\u5c31\u662f\u4e8c\u5206\u56fe\u5339\u914d\u4e86\uff0c\u7ed9**\u4f4f\u5728\u5b66\u6821\u7684\u4eba**\u5339\u914d\u3002\n\nCode\uff1a\n```cpp\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#define inl inline\n#define reg register\nusing namespace std;\n\nconst int maxn = 50 + 10;\nint couple[maxn],n,T,cnt;\nbool in[maxn],leave[maxn],book[maxn],link[maxn][maxn];\n\ninl void init();\ninl void input();\nbool find(reg int);\ninl int match();\ninl void output();\ninl void debug();\n\nint main(){\n    scanf(\"%d\",&T);\n    while (T--){\n        init();\n        input();\n        output();\n    }\n    return 0;\n}\n\ninl void init(){\n\tcnt = 0;\n    memset(in,0,sizeof(in));\n    memset(leave,0,sizeof(leave));\n    memset(link,0,sizeof(link));\n    memset(couple,0,sizeof(couple));\n}\n\ninl void input(){\n    scanf(\"%d\",&n);\n    for (int i = 1; i <= n; i++)\n        cin >> in[i];\n    for (int i = 1; i <= n; i++){\n        cin >> leave[i];\n\t\tif (!in[i]) leave[i] = 0;\n\t}\n    for (int i = 1; i <= n; i++) //\u8ba1\u7b97\u4f4f\u5728\u5b66\u6821\u7684\u4eba\u6570 \n    \tif (!leave[i]) cnt++;\n    for (int i = 1; i <= n; i++)\n            for (int j = 1; j <= n; j++){\n            \tint t; scanf(\"%d\",&t);\n            \tif (i == j && in[i] && !leave[i]) link[i][j] = 1; //\u7761\u81ea\u5df1\u7684\u5e8a \n            \tif (t && in[j]) link[i][j] = 1; \n\t\t\t}\n}\n\nbool find(reg int x){\n    for (int i = 1; i <= n; i++){\n        if (!book[i] && link[x][i]){\n            book[i] = 1;\n            if (!couple[i] || find(couple[i])){\n                couple[i] = x;\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\ninl int match(){\n    int ans = 0;\n    for (int i = 1; i <= n; i++){\n    \tif (leave[i]) continue; //\u5982\u679c\u4e0d\u4f4f\u5728\u5b66\u6821\uff0c\u4e0d\u9700\u8981\u5339\u914d \n        memset(book,0,sizeof(book));\n        if (find(i)) ans++;\n    }\n    return ans;\n}\n\ninl void output(){\n    if (match() == cnt) printf(\"^_^\\n\");\n    else printf(\"T_T\\n\");\n}\n\ninl void debug(){\n\tfor (int i = 1; i <= n; i++){\n\t\tfor (int j = 1; j <= n; j++)\n\t\t\tcout << link[i][j] << ' ';\n\t\tcout << endl;\n\t}\n}\n```\n",
        "postTime": 1560012537,
        "uid": 129873,
        "name": "ReModer",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2055 \u3010[ZJOI2009]\u5047\u671f\u7684\u5bbf\u820d\u3011"
    },
    {
        "content": "### [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.org/problemnew/show/P2055)\n**\u8fd9\u9898\u53ef\u4ee5\u7b97\u6bd4\u8f83\u7ecf\u5178\u7684\u62c6\u70b9\u4e86\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u840c\u65b0\uff0c\u6211\u60f3\u4e86\u5f88\u4e45\u7684\u5efa\u56fe\uff0c\u540e\u6765\u60f3\u5230\uff0c\u53ef\u4ee5\u628a\u4eba\u548c\u5e8a\u4f5c\u4e3a\u4e8c\u5206\u56fe\u7684\u4e24\u4e2a\u70b9\u96c6\u62c6\u5f00\u5efa\u56feA\u70b9\u96c6\u4ee3\u8868\u4eba\uff08i\uff09\uff0cB\u70b9\u96c6\u4ee3\u8868\u5e8a\uff08i+n\uff09\uff0c\u7528goal\u8bb0\u4e0b\u9700\u8981\u56de\u5bb6\u7684\u4eba\u6570**\n\n### \u601d\u8def\n\n**1.\u5982\u679c\u4e0d\u662f\u6211\u6821\u5b66\u751f\uff0c\u90a3\u4e48\u5c06\u5176\u4eba\u5c31\u8fde\u5411s\u3002\u628agoal++**\n\n**2.\u5982\u679c\u662f\u6211\u6821\u5b66\u751f\u5c31\u5c06\u4ed6\u7684\u4eba\u8fde\u5411\u5e8a\uff0c\u5e76\u628a\u4ed6\u7684\u5e8a\u8fde\u5411t\uff0c\u540c\u65f6\u5982\u679c\u4ed6\u4e0d\u56de\u5bb6\u5c31\u5c06\u4eba\u8fde\u5411s\uff0c\u5e76\u4e14goal++\u3002**\n\n**3.\u5982\u679c\u4e24\u4eba\u8ba4\u8bc6\u5c31\u5c06\u8be5\u4eba\u8fde\u5411\u5bf9\u65b9\u7684\u5e8a**\n\n**\u8fd9\u6837\u4e00\u4e2a\u4e8c\u5206\u56fe\u6a21\u7248\u5c31\u5efa\u597d\u4e86\uff0c\u50cf\u8fd9\u6837(\u6837\u4f8b)**\n![](https://cdn.luogu.com.cn/upload/pic/54075.png)\n**\u7528\u7f51\u7edc\u6d41\u8dd1\u4e00\u8dd1\u5224\u65adflow\u662f\u5426\u7b49\u4e8egoal\u5c31\u53ef\u4ee5\u4e86**\n### \u4ee3\u7801\n\u7528\u7684\u662f**Ford-Fulkerson**\uff08\u589e\u5e7f\u8def\uff09\u5176\u5b9e\u8fd9\u4e1c\u897f\u6709\u65f6\u5019\u6bd4dinic\u8fd8\u5feb\u4e00\u70b9\n```cpp\n#include<bits/stdc++.h>\n#define inf 1<<30\nusing namespace std;\nconst int maxn=500+5,maxm=250000+5;\nint head[maxn],vis[maxn],sch[maxn];\nint s,t,flow=0;\nint goal=0;\nstruct edge\n{\n\tint to,next,cap;\n}e[maxm];\nint size=1;\nvoid addedge(int u,int v,int val)\n{\n\te[++size].to=v;e[size].cap=val;e[size].next=head[u];head[u]=size;\n\te[++size].to=u;e[size].cap=0;e[size].next=head[v];head[v]=size;\n}\nvoid init()\n{\n\tmemset(head,0,sizeof(head));\n\tmemset(e,0,sizeof(e));\n\tmemset(sch,0,sizeof(sch));\n\tflow=0,goal=0;\n}\ninline int read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch>'9'||ch<'0'){if(ch=='-')f=-1;ch=getchar();}\n\twhile(ch<='9'&&ch>='0'){x=(x<<3)+(x<<1)+ch-'0';ch=getchar();}\n\treturn x*f;\n}\nint dfs(int u,int f)\n{\n\tif(u==t)return f;\n\tvis[u]=1;\n\tfor(int i=head[u];i;i=e[i].next)\n\t{\n\t\tint to=e[i].to;\n\t\tif(!vis[to]&&e[i].cap>0)\n\t\t{\n\t\t\tint d=dfs(to,min(f,e[i].cap));\n\t\t\tif(d>0)\n\t\t\t{\n\t\t\t\te[i].cap-=d;\n\t\t\t\te[i^1].cap+=d;\n\t\t\t\treturn d;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\nint maxflow()\n{\n\twhile(1)\n\t{\n\t\tmemset(vis,0,sizeof(vis));\n\t\tint f=dfs(s,inf);\n\t\tif(f==0)return flow>=goal;\n\t\tflow+=f;\n\t}\n}\nint main()\n{\n\tint T=read();\n\twhile(T--)\n\t{\n\t\tinit();\n\t\tint n=read();\n\t\ts=0,t=n*2+1;\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\t\n\t\tsch[i]=read();if(sch[i])addedge(i+n,t,1);\n\t\telse addedge(s,i,1),goal++; \n\t\t}\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\t  if(!read()&&sch[i])addedge(s,i,1),addedge(i,i+n,inf),goal++;\n\t\t}\n\t\tfor(int i=1;i<=n;i++)\n\t\t  for(int j=1;j<=n;j++)\n\t\t  if(read()==1&&sch[j])addedge(i,j+n,inf);\n\t\tmaxflow()==1?printf(\"^_^\\n\"):printf(\"T_T\\n\");\n\t}\n\treturn 0;\n } \n```\n\n\n",
        "postTime": 1552634121,
        "uid": 58707,
        "name": "Edward_Elric",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2055 \u3010[ZJOI2009]\u5047\u671f\u7684\u5bbf\u820d\u3011"
    },
    {
        "content": "\u9898\u76ee\uff1a[\u5047\u671f\u7684\u5bbf\u820d](https://www.luogu.org/problemnew/show/P2055)\n\n---\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\uff1f](https://blog.csdn.net/rabbit_ZAR/article/details/85240633)\n\n\u987a\u4fbf\u6c42\u5173\u6ce8\u55b5QvQ\uff01\n\n---\n\n![](https://i.loli.net/2018/12/24/5c20f84f8018d.png)\n\nemm\u2026\u2026\n\n\u4e3a\u4ec0\u4e48\u4e8c\u5206\u56fe\u4f1a\u5199\u9519\u8fd9\u4e48\u591a\u6b21\uff1f\n\n~~\u6211\u4e0d\u4f1a\u8bf4\u662f\u56e0\u4e3a\u6211\u5efa\u56fe\u5efa\u9519\u4e86\u7684\u2026\u2026~~\n\n---\n\n\u601d\u8def\uff1a\n\n~~\u6211\u597d\u50cf\u6ca1\u6709\u8bf4\u8fc7\u6211\u5efa\u9519\u4e86\u56fe~~\uff0c~~\u4e8c\u5206\u56fe\u5339\u914d\u597d\u50cf\u6ca1\u6709\u4ec0\u4e48\u597d\u8bf4\u7684~~\uff0c\u6240\u4ee5\u8fd9\u91cc\u8bf4\u4e0b\u5efa\u56fe\u7684\u95ee\u9898\u3002\n\n\u9996\u5148\uff0c\u6211\u4eec\u8003\u8651\u7528\u5b66\u751f\u548c\u7a7a\u5e8a\u5339\u914d\u3002\n\n\u5e8a\u7684\u4e2a\u6570\u4e00\u5b9a\u7b49\u4e8e\u672c\u6821\u5b66\u751f\u4eba\u6570\uff0c\u56e0\u4e3a\u4e0d\u7ba1\u5b66\u751f\u662f\u5426\u79bb\u6821\uff0c\u4ed6\u4eec\u7684\u5e8a\u90fd\u5728\u3002\n\n\u9700\u8981\u548c\u5e8a\u5339\u914d\u7684\u4eba\u6570\u5c31\u662f \u6ca1\u6709\u56de\u5bb6\u7684\u672c\u6821\u5b66\u751f\u4eba\u6570 + \u975e\u672c\u6821\u5b66\u751f\u3002\n\n\u6240\u4ee5\uff0c\u4e00\u4e2a\u4eba i \u53ef\u4ee5\u548c j\u7684\u5e8a \u8fde\u8fb9\u7684\u6761\u4ef6\uff0c\u5f53\u4e14\u4ec5\u5f53 j \u662f\u672c\u6821\u5b66\u751f\uff0c\u4e14i\u662f \u6ca1\u6709\u56de\u5bb6\u7684\u672c\u6821\u5b66\u751f\u4eba\u6570 \u6216\u672c\u6821\u5b66\u751f\u3002\n\n\u7136\u540e\u5728\u8fd9\u5f20\u56fe\u4e0a\u8dd1\u4e8c\u5206\u56fe\u6a21\u677f\u5c31\u597d\u4e86\u3002\n\n\u7528\u6700\u5927\u6d41\u6216\u8005\u5308\u7259\u5229\u968f\u4fbf\u5566\uff0c\u8fd9\u91cc\u7ed9\u51fa\u5308\u7259\u5229\u4ee3\u7801\u3002\n\n---\n\n\u4ee3\u7801\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define read(x) scanf(\"%d\",&x)\n#define maxn 50\n\nint n;\nint sc[maxn+5],hm[maxn+5];\n\nvector<int> a[maxn+5];\t//i -> bedlist\nint mth[maxn+5];\n\nbool use[maxn+5];\n\nbool dfs(int x) {\n\tif(use[x]) return false;\n\tuse[x]=true;\n\tfor(int i=0;i<a[x].size();i++) {\n\t\tint y=a[x][i];\n\t\tif((!mth[y])||dfs(mth[y])) {\n\t\t\tmth[y]=x;\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn 0;\n}\n\nint main() {\n\tint T;\n\tread(T);\n\twhile(T--) {\n\t\tint n;\n\t\tread(n);\n\t\tfor(int i=1; i<=n; i++) a[i].clear();\n\t\tmemset(mth,0,sizeof(mth));\n\t\tfor(int i=1; i<=n; i++) read(sc[i]);\n\t\tfor(int i=1; i<=n; i++) read(hm[i]);\n\t\tfor(int i=1; i<=n; i++)\n\t\t\tfor(int j=1; j<=n; j++) {\n\t\t\t\tint z;\n\t\t\t\tread(z);\n\t\t\t\tif(sc[i]&&hm[i]) continue;\n\t\t\t\tif(!sc[j]) continue;\n\t\t\t\tif(!z) continue;\n\t\t\t\ta[i].push_back(j);\n\t\t\t}\n\t\tfor(int i=1;i<=n;i++) if(sc[i]&&!hm[i]) a[i].push_back(i);\n\t\t\n\t\tint cnt=n;\n\t\tfor(int i=1; i<=n; i++) if(sc[i]&&hm[i]) cnt--;\n\n\t\tint ans=0;\n\t\tfor(int i=1; i<=n; i++) {\n\t\t\tmemset(use,0,sizeof(use));\n\t\t\tif(dfs(i)) ans++;\n\t\t}\n\t\t\n\t\tif(ans==cnt) printf(\"^_^\");\n\t\telse printf(\"T_T\");\n\t\tprintf(\"\\n\");\n\t}\n\n\treturn 0;\n}\n```",
        "postTime": 1545665148,
        "uid": 13117,
        "name": "Ouaoan",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2055 \u3010[ZJOI2009]\u5047\u671f\u7684\u5bbf\u820d\u3011"
    },
    {
        "content": "~~\u6240\u6709\u5199\u8fd9\u9053\u9898\u7684\u4f30\u8ba1\u5c31\u6211\u6700\u5f31\u4e86~~\n\n# **\u7206\u641c**\n\n\u4e8c\u5206\u56fe\u5339\u914d\uff1f\u4ec0\u4e48\u4e1c\u897f\uff0c\u8fd9\u9898\u4e0d\u662f\u7206\u641c\u5417\uff1f\n\n\u5148\u627e\u51fa\u6240\u6709\u6ca1\u5e8a\u7684\u4eba\uff0c\u5efa\u4e00\u4e2a\u961f\u5217\uff0c\u6309\u7167\u987a\u5e8f\u4e00\u4e2a\u4e2a\u5e2e\u4eba\u5b89\u5bb6\u843d\u6237\u3002\n\n\u4ec0\u4e48\uff1f\u539f\u5148\u5e8a\u6709\u4eba\u600e\u4e48\u529e\uff1f\u5148\u770b\u770b\u8ba4\u4e0d\u8ba4\u8bc6\uff0c\u8ba4\u8bc6\u5c31\u6253\u58f0\u62db\u547c\uff0c\u4f60\u8d70\u3002\n\n~~\u62b1\u6b49\uff0c\u6ca1\u5e8a\u5c31\u662f\u53ef\u4ee5\u90a3\u4e48\u4e3a\u6240\u6b32\u4e3a\u3002~~\n\n\u53ef\u601c\u7684\u5bb6\u4f19\u88ab\u6211\u4eec\u8d76\u51fa\u5b83\u81ea\u5df1\u7684\u9886\u5730\u4e86\uff0c\u4f46\u6211\u4eec\u6bd5\u7adf\u662f\u5fc3\u5730\u5584\u826f\u7684\u7ec4\u7ec7\uff0c\u603b\u4e0d\u80fd\u770b\u5b83\u6d41\u843d\u8857\u5934\u5427\uff0c\u628a\u88ab\u8d76\u51fa\u7684\u5bb6\u4f19\u4e5f\u5165\u961f\u3002\n\n\u4e4b\u540e\u7ee7\u7eed\u6211\u4eec\u7684\u5b89\u5bb6\u65c5\u7a0b\u5427\uff0c\u5982\u679c\u4e0d\u80fd\u6210\u529f\u5c31\u8bf4\u660e\u6211\u4eec\u5b89\u5bb6\u65b9\u6848\u4e0d\u591f\u597d\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u91cd\u65b0\u9009\u4e00\u4e2a\u5b89\u5bb6\u65b9\u6848\uff0c\u9012\u63a8\uff0c\u9012\u5f52\u5c31\u53ef\u4ee5\u89e3\u51b3\u4e86\u3002~~\u4e0d\u8981\u4e00\u60f3\u5230\u65b9\u6848\u5c31\u662f\u6a21\u62df\u9000\u706b~~\n\n~~\u66b4\u529b\u5927\u6cd5\u597d\uff0c\u5165\u6559\u62ff\u7701\u4e00~~\n\n\u603b\u4e4b\uff0c\u60f3\u4e0d\u51fa\u6765\u6b63\u89e3\u7684\u9898\uff0c\u8981\u6253\u66b4\u529b\uff0c\u4e5f\u8bb8\u5c31\u80fdA\u5462\u3002\n\n\u5269\u4e0b\u7684\u770b\u4ee3\u7801\u5427\u3002~~\u81ea\u8ba4\u4e3a\u8fd8\u662f\u5f88\u597d\u61c2\u5f97~~\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<algorithm>\n#include<queue>\nusing namespace std;\nint l[60],h;//\u5efa\u961f \nint n; \nbool a[60],b[60],c[60][60];//a\u6807\u8bb0\u6709\u65e0\u5e8a\uff0cb\u6807\u8bb0\u662f\u5426\u5728\u6821\uff0cc\u6807\u8bb0\u5173\u7cfb \nbool dfs(int x)\n{\n\tif(x>h){ printf(\"^_^\\n\"); return 1; }//\u961f\u4f0d\u5904\u7406\u5b8c\u4e86\uff0c\u5b8c\u6210\u4efb\u52a1\u3002 \n\tint y=l[x];\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(c[y][i]==1&&a[i])//\u770b\u770b\u8ba4\u4e0d\u8ba4\u8bc6\uff0c\u6709\u6ca1\u6709\u5e8a \n\t\t{\n\t\t\tif(b[i])//\u4e0d\u5728\u7684\u4e0d\u5165\u961f \n\t\t\t{\n\t\t\ta[i]=0;\t//\u5b89\u5bb6\u843d\u6237\uff0c\u5c31\u4e0d\u80fd\u518d\u6253\u6270\u4ed6\u4e86 \n\t\t\tif(dfs(x+1))\n\t\t\treturn 1;\t//\u5904\u7406\u4e0b\u4e00\u4e2a\uff0c\u5982\u679c\u6210\u529f\u5c31\u8868\u793a\u5b8c\u6210 \n\t\t\t\n\t\t\ta[i]=1;//\u5f53\u7136\uff0c\u65b9\u6848\u5931\u8d25\u65f6\uff0c\u4e5f\u5fc5\u987b\u4e56\u4e56\u79bb\u5f00 \n\t\t\t} \n\t\t\tif(!b[i])\n\t\t\t{\n\t\t\th++; l[h]=i; a[i]=0; //\u5fc3\u5730\u5584\u826f\u7684\u6211\u4eec\u4e0d\u4f1a\u653e\u5f03\u6bcf\u4e00\u4e2a\u65e0\u5bb6\u53ef\u5f52\u7684\u5b69\u5b50\uff0c\u5373\u4f7f\u662f\u6211\u4eec\u64b5\u5b83\u51fa\u53bb\u7684 \n\t\t\tif(dfs(x+1)) return 1; \n\t\t\th--; a[i]=1;//\u6ce8\u610fh--\uff0c\u522b\u5fd8\u4e86 \n\t\t\t} \n\t\t}\n\t}\n\treturn 0;\n}\nint main()\n{\n\tint T,x,y;\n\tscanf(\"%d\",&T);//\u591a\u7ec4\u6570\u636e \n\twhile(T--){\n\t\tmemset(a,0,sizeof(a));\n\t\tmemset(b,0,sizeof(b));\n\t\tmemset(c,0,sizeof(c));\n\t\th=0;//\u6ce8\u610f\u66f4\u65b0 \n\t\tscanf(\"%d\",&n);\n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\tscanf(\"%d\",&a[i]);\n\t\tif(!a[i]){h++;\tl[h]=i;}//\u628a\u65e0\u5bb6\u53ef\u5f52\u7684\u5165\u961f \n\t\t} \n\t\tfor(int i=1;i<=n;i++)\n\t\t{\n\t\tscanf(\"%d\",&x);\n\t\tif(a[i]) b[i]=x;//\u6807\u8bb0\u56de\u5bb6\u7684\uff0c\u56de\u5bb6\u7684\u5c31\u4e0d\u7ba1\u5b83\u4eec\u4e86\uff0c\u8ba9\u5b83\u4eec\u81ea\u751f\u81ea\u706d\u5427 \n\t\t}\n\t\tfor(int i=1;i<=n;i++)\n\t\tfor(int t=1;t<=n;t++) scanf(\"%d\",&c[i][t]);//\u6807\u8bb0\u5173\u7cfb \n\t\tif(!dfs(1)) printf(\"T_T\\n\");//\u5931\u8d25\u4e86\uff0c\u6ca1\u8f99\uff0c\u80fd\u529b\u4e4b\u5916\uff0c\u544a\u8f9e\u3002 \n\t}\n\treturn 0;\n}\n```\n\n~~\u4e3a\u4e86\u9898\u89e3\uff0c\u53ef\u601c\u4e86\u6211\u7684\u538b\u884c\u7801\u98ce\u554aQAQ~~",
        "postTime": 1541064388,
        "uid": 39381,
        "name": "wjjz",
        "ccfLevel": 0,
        "title": "P2055 [ZJOI2009]\u5047\u671f\u7684\u5bbf\u820d"
    },
    {
        "content": "\u88f8\u7684\u6700\u5927\u6d41\u3002\u636e\u8bf4\u8fd9\u9053\u9898\u4e5f\u53ef\u4ee5\u8dd1\u4e8c\u5206\u56fe\u5339\u914d\uff1f\u4f46\u662f\u6211\u592a\u849f\u4e86\u4e0d\u61c2\u4e8c\u5206\u56fe\u5339\u914d\uff0c~~\u800c\u4e14\u7f51\u7edc\u6d41\u4e00\u822c\u8dd1\u7684\u6bd4\u4e8c\u5206\u56fe\u5feb~~\u3002\n\n\u6bd4\u8f83\u9ebb\u70e6\u7684\u5c31\u662f\u5efa\u56fe\u3002\u4ed4\u7ec6\u7814\u7a76\u4e00\u4e0b\u9898\u9762\u5c31\u53ef\u4ee5\u53d1\u73b0\u8fd9\u4e48\u5efa\u8fb9\u5c31\u53ef\u4ee5\u4e86\uff1a\n\n1. \u6e90\u70b9\u5411\u6240\u6709\u6709\u5e8a\u4f4d\u7684\u8fde\u8fb9\n\n2. \u9700\u8981\u5e8a\u4f4d\u7684\u5411\u6c47\u70b9\u8fde\u8fb9\n\n3.  \u5982\u679ci\u53ef\u4ee5\u7761j\u7684\u5e8a\uff0ci\u5411j\u8fde\u8fb9\n\n\u7136\u540e\u5404\u4e2a\u70b9\u7684\u7f16\u53f7\u968f\u4fbf+\u4e2an\u6216\u8005*2\u4ec0\u4e48\u7684\u5c31\u597d\u4e86\u3002\u53cd\u6b63\u533a\u5206\u5f00\u6765\u5c31ok\u3002\u5efa\u56fe\u641e\u5b9a\u4e86\u8fd9\u9053\u9898\u5c31\u6ca1\u96be\u5ea6\u4e86\uff0c\u5957\u4e00\u4e0bdinic\u6a21\u677f\u5c31ok\u3002\n\n\u63a8\u8350\u5148\u628a\u6a21\u677f\u6253\u719f\u7ec3\u4e86\u518d\u6765\u6253\u8fd9\u9053\u9898\uff0c\u6982\u5ff5\u6216\u8005\u4ee3\u7801\u4e0d\u662f\u5f88\u6e05\u695a\u7684\u53ef\u4ee5\u79fb\u6b65\u767e\u5ea6\u6216\u8005[P3376\u3010\u6a21\u677f\u3011\u7f51\u7edc\u6700\u5927\u6d41 \u9898\u89e3\u533a](https://www.luogu.org/problemnew/solution/P3376)\n\n\u5982\u679c\u9700\u8981\u68c0\u67e5~~\u6284~~\u6a21\u677f\u4ee3\u7801\u4ec0\u4e48\u7684\u53ef\u4ee5\u770b\u6211\u7684[\u535a\u5ba2](https://www.luogu.org/blog/henry-y/solution-p3376)\uff0c\u91cc\u9762\u6709\u4ee3\u7801\n\n\u597d\u4e86\u5e9f\u8bdd\u8bf4\u5b8c\u4e86\uff0c\u4e0a\u4ee3\u7801\uff0c\u4e2a\u4eba\u611f\u89c9\u4e0a\u9762\u90fd\u8bb2\u7684\u5f88\u6e05\u695a\u4e86\uff1f\u5c31\u4e0d\u5e26\u6ce8\u91ca\u4e86\u3002~~\u65b9\u4fbf\u4f60\u4eec\u6284~~\n\n```\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#define ll int\n#define maxn 105\n#define inf 1<<30\n#define mt(x,y) memset(x,y,sizeof(x))\n#define max(x,y) x>y?x:y\n#define min(x,y) x<y?x:y\n#define abs(x) x>0?x:-x\n#define mod 10000007\n#define lowbit(x) x&-x\ninline void read(ll &x){x=0;ll f=1;char c=getchar();while(c<'0'||c>'9'){if(c=='-')f=-f;c=getchar();}while(c>='0'&&c<='9'){x=x*10+c-'0';c=getchar();}x*=f;}\nusing namespace std;\nstruct edge{ll to,next,v;}e[50000];\nll head[maxn],cnt=1,tot,ans,h[maxn],q[maxn];\nll s=0,t=101,sc[51],n;\ninline void add(ll u,ll v,ll w){e[++cnt].to=v;e[cnt].next=head[u];e[cnt].v=w;head[u]=cnt;}\ninline bool bfs(){\n\tmt(h,-1);q[0]=h[0]=0;ll i,l=0,r=1,now;\n\twhile(l<r){\n\t\tnow=q[l++];if(l==101)l=0;\n\t\ti=head[now];\n\t\twhile(i){\n\t\t\tif(e[i].v&&h[e[i].to]<0){\n\t\t\t\th[e[i].to]=h[now]+1;\n\t\t\t\tq[r++]=e[i].to;\n\t\t\t\tif(r==101)r=0;\n\t\t\t}\n\t\t\ti=e[i].next;\n\t\t}\n\t}\n\tif(h[t]==-1)return 0;\n\treturn 1;\n}\ninline ll dfs(ll x,ll f){\n\tif(t==x)return f;\n\tll used=0,w,i=head[x];\n\twhile(i){\n\t\tif(h[x]+1==h[e[i].to]&&e[i].v){\n\t\t\tw=f-used;\n\t\t    w=dfs(e[i].to,min(w,e[i].v));\n\t\t    e[i].v-=w;e[i^1].v+=w;used+=w;\n\t\t    if(used==f)return f;\n\t    }\n\t\ti=e[i].next;\n\t}\n\tif(!used)h[x]=-1;\n\treturn used;\n}\ninline void dinic(){while(bfs())ans+=dfs(0,inf);}\nint main(){\n    ll test,x;read(test);\n    while(test--){\n\t    cnt=1;tot=ans=0;mt(head,0);\n\t    read(n);\n\t    for(ll i=1;i<=n;i++){\n\t    \tread(sc[i]);\n\t    \tif(sc[i]){\n\t    \t\tadd(i+n,t,1);add(t,i+n,0);\n\t\t\t}\n\t\t}\n\t\tfor(ll i=1;i<=n;i++){\n\t\t\tread(x);\n\t\t\tif((sc[i]&&!x)||!sc[i]){\n\t\t\t\tadd(0,i,1);add(i,0,0);tot++;\n\t\t\t}\n\t\t}\n\t\tfor(ll i=1;i<=n;i++){\n\t\t\tfor(ll j=1;j<=n;j++){\n\t\t\t\tread(x);\n\t\t\t\tif(x||i==j){\n\t\t\t\t\tadd(i,j+n,1);add(j+n,i,0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdinic();\n\t\tif(ans==tot)printf(\"^_^\\n\");\n\t\telse printf(\"T_T\\n\");\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1521120996,
        "uid": 36526,
        "name": "henry_y",
        "ccfLevel": 0,
        "title": "[luogu] P2055 [BZOJ]1433 \u3010[ZJOI2009]\u5047\u671f\u7684\u5bbf\u820d\u3011"
    },
    {
        "content": "-> ->\u521a\u5b66\u4e86\u7f51\u7edc\u6d41  \u5c31\u6765\u641e\u4e00\u641e\u8fd9\u4e2a\u9898\n\n-> ->\u672c\u6765\u89c9\u5f97\u4e8c\u5206\u56fe\u6700\u5927\u5339\u914d\u662f\u4e00\u4e2a\u591a\u4e48\u96be\u641e\u7684\u4e8b\u60c5\u4f46\u662f\u5efa\u6a21\u5efa\u51fa\u6765\u4e86\u8fd8\u662f\u4e0d\u96be  \u800c\u4e14\u6211\u4e00A\u4e86  hhhhh\n\n-> ->\u6ca1\u5b66\u4e8c\u5206\u56fe  \u7528\u6700\u5927\u6d41\u5f3a\u884c\u505a\u7684\n\n-> ->\u96be\u70b9\u5728\u5efa\u6a21 \u5148\u6765\u4e24\u4e2a\u96c6\u5408  \u6807\u51c6\u4e8c\u5206\u56fe\uff0c\u5de6\u8fb9X\u53f3\u8fb9Y  \u6bcf\u4e2a\u5b66\u751f\u4e00\u8fb9\u4e00\u4e2a\u70b9  \u5de6\u8fb9\u7f16\u53f7i  \u53f3\u8fb9\u5c31\u662f\u7f16\u53f7i+n\n\n-> ->\u9996\u5148  \u5efa\u8d85\u7ea7\u6e90  \u8ddfX\u4e2d\u4e0d\u56de\u5bb6\u7684\u672c\u6821\u5b66\u751f\u548c\u5916\u6821\u7684\u8fde\u4e00\u6761cap=1\u7684\u8fb9\u8868\u793a\u9700\u8981\u5e8a\u4f4d\n\n-> ->\u7136\u540e\u5bf9\u4e8eX\u4e2d\u7684\u9700\u8981\u5e8a\u7684\u4eba  \u5411Y\u4e2d\u4ed6\u4eec\u8ba4\u8bc6\u7684\u672c\u6821\u5b66\u751f\u8fde\u4e00\u6761cap=1\u7684\u8fb9  \u5982\u679c\u8fd9\u4e2a\u9700\u8981\u5e8a\u7684\u4eba\u662f\u672c\u6821\u7684\uff0c\u8ddfY\u4e2d\u4e0e\u81ea\u5df1\u5bf9\u5e94\u7684\u70b9\u8fde\u4e00\u6761cap=1\u5f97\u8fb9\n\n-> ->\u6700\u540e   Y\u4e2d\u6240\u6709\u70b9\u8ddf\u8d85\u7ea7\u7ec8\u70b9\u8fde\u4e00\u6761cap=1\u5f97\u8fb9\n\n-> ->\u597d\u4e86  \u7136\u540e\u6700\u5927\u6d41\u5427  \u6211\u662f\u7528\u7684\u6700\u7b80\u5355\u7684BFS  \uff08\u5176\u4ed6\u7684\u8fd8\u6ca1\u5b66\uff09\n\n-> ->\u6c42\u51fa\u6700\u5927\u6d41\u4e4b\u540e\u3002\u3002\u3002\u597d\u50cf\u76f4\u63a5\u5224\u4e00\u4e0bmaxflow\u662f\u5426\u7b49\u4e8e\u9700\u8981\u5e8a\u7684\u4eba\u6570\u5c31\u884c\u4e86    \u5b9e\u9645\u4e0a\u6211\u662f\u5224\uff1a\u4ece\u8d85\u7ea7\u6e90\u70b9\u51fa\u6765\u7684\u6bcf\u6761\u8fb9\u90fd\u6d41\u91cf\u90fd\u662f1   \uff08\u56e0\u4e3a\u8fd9\u662f\u9700\u8981\u5e8a\u7761\u7684\uff0c\u6ca1\u6709\u6d41\u91cf\u7684\u8bdd\u5c31\u6ca1\u6709\u5e8a\u7761\uff09\n\n-> ->\u8fd9\u6837\u5c31\u628a\u4e8c\u5206\u56fe\u6c34\u8fc7\u53bb\u4e86\n\n\u4e00\u767e\u591a\u884c1A\u8fd8\u662f\u6709\u70b9\u5c0f\u6fc0\u52a8\n\n```cpp\n\n#include<queue>\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\nusing namespace std;\nconst int maxn=200;\nconst int maxm=50000;\nconst int INF=(1<<30);\nstruct Edge{\n    int u,v,cap,flow;\n    Edge(){}\n    Edge(int u,int v,int c,int f):u(u),v(v),cap(c),flow(f){}\n}e[maxm];\n\nint n;\n\nint first[maxn],next[maxm],ecnt;\nvoid add_edge(int u,int v,int cap)\n{\n    next[ecnt]=first[u];first[u]=ecnt;e[ecnt++]=Edge(u,v,cap,0);\n    next[ecnt]=first[v];first[v]=ecnt;e[ecnt++]=Edge(v,u,0,0);\n}\n\nint inxue[maxn],back[maxn];\nvoid init_data()\n{\n    cin>>n;ecnt=0;\n    memset(first,-1,sizeof(first));\n    for(int i=1;i<=n;i++) scanf(\"%d\",inxue+i);\n    for(int i=1;i<=n;i++) \n      if(inxue[i]) scanf(\"%d\",back+i);\n      else scanf(\"%*s\");\n    for(int i=1;i<=n;i++)\n    {\n        if(inxue[i]) add_edge(i,i+n,1);\n        for(int j=1,bo;j<=n;j++)\n        {\n            scanf(\"%d\",&bo);\n            if(bo&&inxue[j]) add_edge(i,j+n,1); \n        }\n    }\n    int s=2*n+1,t=2*n+2;\n    for(int i=1;i<=n;i++)\n      if(!inxue[i]||!back[i]) add_edge(s,i,1);\n    for(int i=1;i<=n;i++)\n      add_edge(i+n,t,1);\n}\n\nint a[maxn],p[maxn];\nint Maxflow(int s,int t)\n{\n    int flow=0;\n    for(;;)\n    {\n        memset(a,0,sizeof(a));\n        queue<int>q;\n        q.push(s);\n        a[s]=INF;\n        while(!q.empty())\n        {\n            int x=q.front();q.pop();\n            for(int i=first[x];i!=-1;i=next[i])\n            {\n                if(!a[e[i].v]&&e[i].cap>e[i].flow)\n                {\n                    a[e[i].v]=min(a[x],e[i].cap-e[i].flow);\n                    p[e[i].v]=i;\n                    q.push(e[i].v);\n                }\n            }\n            if(a[t]) break;\n        }\n        if(!a[t]) break;\n        flow+=a[t];\n        for(int i=t;i!=s;i=e[p[i]].u)\n        {\n            e[p[i]].flow+=a[t];\n            e[p[i]^1].flow-=a[t];\n        }\n    }\n    return flow;\n}\n\nint check()\n{\n    for(int i=first[2*n+1];i!=-1;i=next[i])\n      if(e[i].cap!=e[i].flow) return false;\n    return true;\n}\n\nint main()\n{\n    int T;cin>>T;\n    while(T--)\n    {\n        init_data();\n        Maxflow(2*n+1,2*n+2);\n        if(check()) printf(\"^_^\\n\");//\u5176\u5b9e\u5bf9\u4e8e\u8fd9\u79cd\u8f93\u51fa\u3002\u3002\u3002\u6211\u6c89\u9ed8\n        else printf(\"T_T\\n\");\n    }\n    return 0;\n}\n\n\n```",
        "postTime": 1454248721,
        "uid": 11280,
        "name": "QWsin",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2055 \u3010[ZJOI2009]\u5047\u671f\u7684\u5bbf\u820d\u3011"
    },
    {
        "content": "\u88f8\u7684\u4e8c\u5206\u56fe\u5339\u914d\u3002\u628a\u9700\u8981\u5e8a\u7684\u7684\u4eba\u548c\u8ba4\u8bc6\u7684\u4eba\u7684\u5e8a\u8fde\u63a5\uff08\u81ea\u5df1\u4e5f\u7b97\uff01\uff09\n\n```cpp\n\n#include <iostream>  \n#include <cstdio>  \n#include <cstdlib>  \n#include <cstring>  \n#include <cmath>  \n#include <algorithm>  \nusing namespace std;  \nconst int maxn=5003;  \nint n,ck[maxn],mch[maxn],stu[maxn],lft[maxn];  \nint tot,ans,to[maxn*2],fst[maxn],nxt[maxn*2],cnt;  \ninline int get(){  \n    char c;while(!isdigit(c=getchar()));  \n    int v=c-48;while(isdigit(c=getchar()))v=v*10+c-48;  \n    return v;  \n}  \ninline void add(int x,int y){to[++cnt]=y;nxt[cnt]=fst[x];fst[x]=cnt;}  \ninline bool dfs(int x){                \n    for(int i=fst[x];i;i=nxt[i]){  \n        if(!ck[to[i]]){  \n            ck[to[i]]=1;  \n            if(mch[to[i]]==-1 || dfs(mch[to[i]])){  \n                mch[x]=to[i];  \n                mch[to[i]]=x;  \n                return 1;  \n            }  \n        }  \n    }  \n    return 0;  \n}  \nint main(){  \n    int T=get();  \n    while(T--){  \n        memset(mch,-1,sizeof(mch));  \n        memset(fst,0,sizeof(fst));  \n        memset(nxt,0,sizeof(nxt));  \n        memset(to,0,sizeof(to));  \n        n=get();ans=0;cnt=0;bool f=1;  \n        for(int i=1;i<=n;++i)stu[i]=get();  \n        for(int i=1;i<=n;++i){  \n            lft[i]=get();  \n            if(stu[i]&&!lft[i])add(i,i+n);  \n        }  \n        for(int i=1;i<=n;++i)for(int j=1;j<=n;++j){  \n            int x=get();  \n            if(!stu[i]||(stu[i]&&!lft[i]))  \n                if(x&&stu[j])add(i,j+n);  \n        }  \n        for(int i=1;i<=n;++i){  \n            if(!stu[i]||(stu[i]&&!lft[i])){  \n                memset(ck,0,sizeof(ck));  \n                if(!dfs(i))f=0;  \n            }  \n        }  \n        if(f)printf(\"^_^\\n\");  \n        else printf(\"T_T\\n\");  \n    }  \n    return 0;  \n}  \n\n```",
        "postTime": 1452937303,
        "uid": 3911,
        "name": "Skywalker_David",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2055 \u3010[ZJOI2009]\u5047\u671f\u7684\u5bbf\u820d\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u867d\u7136\u770b\u8d77\u6765\u5c31\u662f\u4e00\u9053\u7f51\u7edc\u6d41\uff0c\u7136\u800c\u6b63\u786e/\u9519\u8bef\u7387\u8fd8\u662f\u86ee\u4f4e\u7684\uff0c\u5176\u5b9e\u4e3b\u8981\u662f\u9898\u610f\u7406\u89e3\u4e0d\u6b63\u786e/\u4e0d\u5b8c\u6574\uff1b\n\n\u601d\u8def\u5f88\u660e\u663e\uff1a\u5e8a\u94fa\u662f\u96c6\u5408B{}\u4e2d\u7684\u70b9,\u5728\u6821\u5b66\u751f\u662f\u96c6\u5408A{}\u4e2d\u7684\u70b9,\u7136\u540e\u8dd1\u6700\u5927\u5339\u914d\uff1b\n\n\u9996\u5148\u8bf4\u4e00\u4e0b\u5177\u4f53\u6b65\u9aa4\uff1a\n\n1.\u5728\u6821\u5b66\u751f\u5c31\u662f\u9898\u76ee\u80cc\u666f\u4e2d\u7684\u672c\u6821\u5b66\u751f;\u8fd9\u610f\u5473\u7740\u4ed6\u4eec\u90fd\u6709\u4e00\u4e2a\u5e8a\u94fa\u3002\u6240\u4ee5\u8bf4\u6709\u5728\u6821\u5b66\u751f\u5c31\u662f\u8bf4\u6709\u4e00\u4e2a\u5e8a\u94fa\u5728B\u96c6\u5408\uff1b\n\n2.\u8f93\u5165\u7684\u7b2c\u4e09\u884c\u6307\u7b2c i \u4e2a\u6570\u8868\u793a\u7b2c i \u4e2a\u4eba\u662f\u5426\u56de\u5bb6 (0 \u8868\u793a\u4e0d\u56de\u5bb6\uff0c1 \u8868\u793a\u56de\u5bb6\uff0c\u6ce8\u610f\u5982\u679c\u7b2c i \u4e2a\u4eba\u4e0d\u662f\u5728\u6821\u5b66\u751f\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u6570\u662f\u4e00\u4e2a\u968f\u673a\u7684\u6570\uff0c\u4f60\u5e94\u8be5\u5728\u8bfb\u5165\u4ee5\u540e\u5ffd\u7565\u5b83)\u3002\n  \u6ce8\u610f\uff1a\u53ea\u8981\u4ed6\u662f\u5916\u6765\u5b66\u751f\uff0c\u90a3\u4e48\u4ed6\u5c31\u9700\u8981\u52a0\u5165A\u96c6\u5408\uff1b\u5982\u679c\u4ed6\u662f\u672c\u6821\u5b66\u751f\uff0c\u662f0\u5c31\u52a0\u5165A\u96c6\u5408\uff0c\u5426\u5219\u4e0d\u64cd\u4f5c\uff1b\n  \n3.\u7136\u540e\u4ece\u539f\u70b9S\u5411A\u96c6\u5408\u4e2d\u7684\u6240\u6709\u70b9\u5404\u8fde\u4e00\u6761\u8fb9\uff0c\u4eceB\u96c6\u5408\u4e2d\u7684\u6240\u6709\u70b9\u5411\u6c47\u70b9T\u8fde\u4e00\u6761\u8fb9\uff1b\n\n4.\u7136\u540e\u8f93\u5165\u7684\u77e9\u9635\u4fbf\u662fA\u96c6\u5408\u5230B\u96c6\u5408\u7684\u8fb9\uff0c\u8fd9\u91cc\u5c31\u7b80\u5355\u4e86\uff1b\n\n5.\u591a\u6d4b\u4e0d\u6e05\u7a7a\uff0c\u7206\u96f6\u4e24\u884c\u6cea\uff1b\n\n\u7136\u540e\u65e0\u8bba\u8dd1\u4ec0\u4e48dinic\u3001EK\u3001\u5308\u7259\u5229......\uff0c\u53cd\u6b63\u8dd1\u5bf9\u5c31\u597d\u4e86\uff1b\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint vis[1000],bo[1000];\nstruct littlestar{\n\tint to;\n\tint nxt;\n\tint flow;\n}star[2000010];\nint head[2000010],cnt=1;\nvoid add(int u,int v,int flow)\n{\n\tstar[++cnt].to=v;\n\tstar[cnt].nxt=head[u];\n\tstar[cnt].flow=flow;\n\thead[u]=cnt;\n}\nvector<int> vec1,vec2;\nint mmap[1000][1000];\nint S,T;\nint dep[1100];\nbool bfs()\n{\n\tqueue<int> q;\n\tmemset(dep,0,sizeof(dep));\n\tq.push(S);\n\tdep[S]=1;\n\twhile(q.size()){\n\t\tint u=q.front();\n\t\tq.pop();\n\t\tfor(register int i=head[u];i;i=star[i].nxt){\n\t\t\tint v=star[i].to;\n\t\t\tif(star[i].flow&&!dep[v]){\n\t\t\t\tdep[v]=dep[u]+1;\n\t\t\t\tq.push(v);\n\t\t\t\tif(v==T) return 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\nint dinic(int u,int flow)\n{\n\tif(u==T){\n\t\treturn flow;\n\t}\n\tint rest=flow,tmp;\n\tfor(register int i=head[u];i&&rest;i=star[i].nxt){\n\t\tint v=star[i].to;\n\t\tif(dep[v]==dep[u]+1){\n\t\t\ttmp=dinic(v,min(star[i].flow,rest));\n\t\t\tstar[i].flow-=tmp;\n\t\t\tstar[i^1].flow+=tmp;\n\t\t\trest-=tmp;\n\t\t}\n\t}\n\treturn flow-rest;\n}\nint main()\n{\n\tint t;\n\tcin>>t;\n\tS=201,T=202;\n\twhile(t--){\n\t\tcnt=1;\n\t\tmemset(head,0,sizeof(head));\n\t\tvec1.clear();\n\t\tvec2.clear();\n\t\tmemset(vis,0,sizeof(vis));\n\t\tmemset(bo,0,sizeof(bo));\n\t\tmemset(star,0,sizeof(star));\n\t\tmemset(mmap,0,sizeof(mmap));\n\t\tint n;\n\t\tscanf(\"%d\",&n);\n\t\tfor(register int i=1;i<=n;i++){\n\t\t\tscanf(\"%d\",&vis[i]);\n\t\t\tif(vis[i]) vec2.push_back(i+n);\n\t\t}\n\t\tint num=0;\n\t\tfor(register int i=1;i<=n;i++){\n\t\t\tcin>>bo[i];\n\t\t\tif(vis[i]==0){\n\t\t\t\tvec1.push_back(i);\n\t\t\t\t++num;\n\t\t\t}\n\t\t\telse if(bo[i]==0){\n\t\t\t\tvec1.push_back(i);\n\t\t\t\t++num;\n\t\t\t}\n\t\t}\t\t\n\t\tfor(register int i=1;i<=n;i++){\n\t\t\tfor(register int j=1;j<=n;j++){\n\t\t\t\tscanf(\"%d\",&mmap[i][j]);\n\t\t\t}\n\t\t\tmmap[i][i]=1;\n\t\t}\n\t\tfor(register int i=0;i<vec1.size();i++){\n\t\t\tfor(register int j=0;j<vec2.size();j++){\n\t\t\t\tif(mmap[vec1[i]][vec2[j]-n]){\n\t\t\t\t\tadd(vec1[i],vec2[j],1);\n\t\t\t\t\tadd(vec2[j],vec1[i],0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<vec1.size();i++){\n\t\t\tadd(S,vec1[i],1);\n\t\t\tadd(vec1[i],S,0);\n\t\t}\n\t\tfor(int i=0;i<vec2.size();i++){\n\t\t\tadd(vec2[i],T,1);\n\t\t\tadd(T,vec2[i],0);\n\t\t}\n\t\tint maxflow=0;\n\t\twhile(bfs()){\n\t\t\tint flow;\n\t\t\twhile(flow=dinic(S,999999999)) maxflow+=flow;\n\t\t}\n\t\tif(maxflow==num){\n\t\t\tcout<<\"^_^\"<<endl;\n\t\t}\n\t\telse{\n\t\t\tcout<<\"T_T\"<<endl;\n\t\t}\n\t}\n\t\n} \n```\n\n",
        "postTime": 1569802236,
        "uid": 119189,
        "name": "\u795e\u4e4b\u53f3\u5927\u81e3",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2055 \u3010[ZJOI2009]\u5047\u671f\u7684\u5bbf\u820d\u3011"
    },
    {
        "content": "\u89e3\u9898\u601d\u8def\u5728\u4ee3\u7801\u4e2d\u3002\n\n```cpp\n/*\n* \u6211\u7684\u601d\u8def\uff1a\u9047\u5230\u9700\u8981\u4f4f\u5bbf\u7684\u4eba\u5c31\u8ba9\u4ed6\u548c\u6e90\u70b9\u4e4b\u95f4\u8fde\u4e00\u6761\u5bb9\u91cf\u662f1\u7684\u8fb9\uff1b\n* \u5982\u679c\u662f\u5728\u6821\u5b66\u751f\u5c31\u628a\u4ed6\u7684\u5e8a\u548c\u6c47\u70b9\u4e4b\u95f4\u8fde\u4e00\u6761\u5bb9\u91cf\u662f1\u7684\u8fb9\uff1b\n* \u628a\u6bcf\u4e2a\u4e0d\u56de\u5bb6\u7684\u5728\u6821\u5b66\u751f\u548c\u81ea\u5df1\u7684\u5e8a\u4e4b\u95f4\u8fde\u4e00\u6761\u5bb9\u91cf\u662f1\u7684\u8fb9\uff1b\n* \u628a\u6bcf\u4e2a\u4eba\u548c\u81ea\u5df1\u8ba4\u8bc6\u7684\u4eba\u7684\u5e8a\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u4e4b\u95f4\u8fde\u4e00\u6761\u5bb9\u91cf\u662f1\u7684\u8fb9\uff1b\n* \u6700\u540e\u8dd1\u4e00\u904dDinic\u518d\u5224\u65ad\u6d41\u91cf\u662f\u5426\u7b49\u4e8e\u9700\u8981\u4f4f\u5bbf\u7684\u603b\u4eba\u6570\u5373\u53ef\u3002\n*/\n\n#include<bits/stdc++.h>\nusing namespace std;\n#define Standard_Type long long\n#define Content_Type long long\n#define setEmpty(q) while(!q.empty())q.pop()\n#define FILL(a,b) memset(a,b,sizeof a)\n#define INF 2147483647\n#define MAXM 200001\n#define Queue_Standard_Type queue<Standard_Type>\n\n/*Start : Struct declaration*/\nstruct __EDGE{\n\tStandard_Type from,to,next;\n\tContent_Type w;\n\t__EDGE(){\n\t\tfrom=0;\n\t\tto=0;\n\t\tnext=0;\n\t\tw=0;\n\t}\n};\n/*End : Struct declaration*/\n\n/*Start : Variable declaration*/\n__EDGE edge[MAXM];\nStandard_Type edgeHead[MAXM]={-1},edgeCount=-1,flag[MAXM],S,V;\nStandard_Type n;\nvector<Standard_Type> va,vb;\nbool vis[100];\n/*End : Variable declaration*/\n \n/*Start : Function declaration*/\nvoid INIT(); \nvoid Add(Standard_Type,Standard_Type,Content_Type);\n\nbool BFS();\n\nContent_Type DFS(Standard_Type,Content_Type);\nContent_Type Dinic();\n\n\n/*End : Function declaration*/\n\nint main(){\n\tscanf(\"%lld\",&n);\n    while(~scanf(\"%lld\",&n)){\n        S=0;\n        V=n+n+1;\n        INIT();\n        int x,tot=0;\n        for(int i=1;i<=n;i++){\n            scanf(\"%d\",&x);\n            vis[i]=x;\n            if(!x)tot++;\n        }\n        for(int i=1;i<=n;i++){\n            scanf(\"%d\",&x);\n            if(vis[i]){\n                Add(i+n,V,1);\n                Add(V,i+n,0);\n                if(!x){\n                    tot++;\n                    Add(S,i,1);\n                    Add(i,S,0);\n                    Add(i,i+n,1);\n                    Add(i+n,i,0);\n                }\n            }else{\n                Add(S,i,1);\n                Add(i,S,0);\n            }\n        }\n        for(int i=1;i<=n;i++){\n            for(int j=1;j<=n;j++){\n                scanf(\"%d\",&x);\n                if(x&&vis[j]){\n                    Add(i,j+n,1);\n                    Add(j+n,i,0);\n                    Add(j,i+n,1);\n                    Add(i+n,j,0);\n                }\n            }\n        }\n        if(Dinic()>=tot)puts(\"^_^\");\n        else puts(\"T_T\");\n    }\n\treturn 0;\n}\n\n/*Start : Define*/\nvoid INIT(){\n\tFILL(edgeHead,-1);\n    FILL(vis,0);\n}\nvoid Add(Standard_Type from,Standard_Type to,Content_Type w){\n\tedge[++edgeCount].from=from;\n\tedge[edgeCount].to=to;\n\tedge[edgeCount].w=w;\n\tedge[edgeCount].next=edgeHead[from];\n\tedgeHead[from]=edgeCount;\n}\nbool BFS(){\n\tStandard_Type from,to;\n\tQueue_Standard_Type Queue;\n\tFILL(flag,-1);\n\tsetEmpty(Queue);\n\tflag[S]=0;\n\tQueue.push(S);\n\twhile(!Queue.empty()){\n\t\tfrom=Queue.front();\n\t\tQueue.pop();\n\t\tfor(Standard_Type i=edgeHead[from];i!=-1;i=edge[i].next){\n\t\t\tto=edge[i].to;\n\t\t\tif(edge[i].w!=0&&flag[to]==-1){\n\t\t\t\tQueue.push(to);\n\t\t\t\tflag[to]=flag[from];\n\t\t\t\tflag[to]++;\n\t\t\t}\n\t\t}\n\t}\n\tif(flag[V]!=-1)return true;\n\treturn false;\n}\nContent_Type DFS(Standard_Type from,Content_Type flow){\n\tif(from==V)return flow;\n\tContent_Type result=flow,minW;\n\tfor(Standard_Type i=edgeHead[from];i!=-1;i=edge[i].next){\n\t\tif(result<=0)return flow-result;\n\t\tif(edge[i].w!=0&&flag[from]==flag[edge[i].to]-1){\n\t\t\tminW=DFS(edge[i].to,min(result,edge[i].w));\n\t\t\tedge[i^1].w+=minW;\n\t\t\tedge[i].w-=minW;\n\t\t\tresult-=minW;\n\t\t}\n\t}\n\treturn flow-result;\n}\nContent_Type Dinic(){\n\tContent_Type result=0;\n\twhile(BFS()){\n\t\tresult+=DFS(S,INF);\n\t}\n\treturn result;\n}\n/*End : Define*/\n```\n\n\u9644\uff1a\u6837\u4f8b\u7684\u56fe\n\n![](https://i.loli.net/2019/08/14/RHTL9cG4pb7vaZr.png)\n\n\u4e0a\u56fe\u6700\u5927\u6d41\u662f2\uff0c\u7b49\u4e8e\u9700\u8981\u4f4f\u5bbf\u7684\u4eba\u6570\uff0c\u6240\u4ee5\u7b54\u6848\u662f`^_^`\u3002\n\n\u672c\u6765\u6309\u7167\u6211\u7684\u5efa\u56fe\u601d\u8def\uff0cP2\u548cB1\u4e4b\u95f4\u8fd8\u6709\u4e00\u6761\u5355\u5411\u8fb9\u3002\u4f46\u9274\u4e8eP2\u672a\u548c\u6e90\u70b9\u8fde\u63a5\uff0c\u4e5f\u5c31\u6ca1\u753b\u3002",
        "postTime": 1565765806,
        "uid": 106140,
        "name": "e3c12195e3beef64f29a",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P2055 \u3010[ZJOI2009]\u5047\u671f\u7684\u5bbf\u820d\u3011"
    },
    {
        "content": "\u597d\u50cf\u6ca1\u6709\u7528\u90bb\u63a5\u8868\u5b58\u7684\u554a(\u597d\u50cf\u6709\u4e0d\u5c11(\u9003))\n\n\u6211\u8fd9\u91cc\u5199\u4e00\u79cd\u6bd2\u7624\u52a0\u8fb9(\u53cd\u6b63\u6211\u770b\u9898\u89e3\u6ca1\u6709\u8ddf\u6211\u52a0\u8fb9\u4e00\u6837\u7684)\n\n\u597d\u957f\u65f6\u95f4\u6ca1\u66f4\u535a\u5ba2\u4e86\n\n\u56e0\u4e3a\u5b9e\u5728\u592a\u84bb\u4e86\n\n![](https://img2018.cnblogs.com/blog/1661066/201907/1661066-20190713092312186-1025201458.png)\n\n\u8fd9\u8ba9\u672c\u849f\u84bb\u600e\u4e48\u529e\n\n\u4eca\u5929\u7ec8\u4e8e\u9047\u5230\u4e86\u4e00\u9053\u6a21\u677f\u9898(\u4e4b\u524d\u4e5f\u6709,\u4e0d\u8fc7\u592a\u84bb\u4e86\u90fd\u4e0d\u4f1a)\n\n\u4e0d\u8fc7...\u5199\u4ee3\u78015\u5206\u949f,\u8c03\u8bd52\u5c0f\u65f6\n\n-----------\n\n\u5206\u754c\u7ebf:\u56de\u5f52\u6b63\u9898\n\n\u8fd9\u4e2a\u5c31\u662f\u666e\u901a\u7684\u5308\u7259\u5229\u7b97\u6cd5 \u5dee\u4e0d\u591a\n\n# \u601d\u8def:\n\n\u6211\u4eec\u9700\u8981\u7edf\u8ba1\u51fa\u8c01\u9700\u8981\u5e8a,\u8c01\u6709\u5e8a\n\n\u6211\u4eec\u7684\u4e8c\u5206\u56fe\u5c31\u662f  **\u9700\u8981\u7684\u4eba**  \u548c  **\u5e8a**\n\n\u8dd1\u5308\u7259\u5229\u5c31\u597d\u4e86\n\n## \u4ec0\u4e48\u4eba\u4e0d\u9700\u8981\u5e8a?? \u5728\u6821\u4e14\u56de\u5bb6\u7684\u4eba \n\n\n## \u4ec0\u4e48\u5e8a\u80fd\u7528?? \u5728\u6821\u7684\u4eba\n\n\n\u7531\u4e8e\u4eba\u7684\u5e8f\u53f7\u548c\u5e8a\u7684\u5e8f\u53f7\u4f1a\u91cd\u590d\n\n\u6240\u4ee5\u6211\u5728\u5e8a\u7684\u5e8f\u53f7\u4e0a\u52a0\u4e86m,(\u6bd4\u5982\u4e00\u5171\u67093\u4e2a\u4eba,\u4e00\u53f7\u5e8a\u7684\"\u540d\u5b57\"\u5c31\u662f4)\n\n~~\u5982\u679c\u8fd8\u4e0d\u660e\u767d\u4e0a\u9762\u90a3\u53e5\u90a3\u5c31\u53ef\u4ee5\u7406\u89e3\u4e3a#define \u4e00\u53f7\u5e8a 4~~\n\n\u7531\u4e8e\u9898\u76ee\u8981\u6c42\u8f93\u5165\u662f\u90bb\u63a5\u77e9\u9635,\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u53ea\u8bfb\u5165\u4e00\u534a(\u5de6\u4e0a\u89d2\u548c\u53f3\u4e0b\u89d2\u8fde\u7ebf\u4ee5\u5de6\u4e0d\u8bfb)\n\u56e0\u4e3a\u4eba\u7684\u4fe1\u4efb\u662f\u76f8\u4e92\u7684\n\n\u5bf9\u5e94\u597d\u4e4b\u540e\u5c31\u53ef\u4ee5\u4e86\n\n\n\n\n\u505a\u8fd9\u9053\u9898,\u600e\u4e48\u505a?\n\n1 : \u5b66\u4f1a\u5308\u7259\u5229\u7b97\u6cd5,\u4e0d\u7ba1\u4f60\u7528Google.Baidu.360.\u641c\u72d7.bing.yandex......\u4ec0\u4e48\u5f15\u64ce(\u80fd\u7528\u5c31\u884c)\n\u90fd\u6709\u5f88\u751f\u52a8\u7684\u4f8b\u5b50,\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\n\n2 : \u5b66\u4f1a\u56fe\u8bba\u57fa\u672c\u77e5\u8bc6,\u4f1a\u7528\u90bb\u63a5\u8868\u5b58\u8fb9(\u53ea\u4f1a\u90bb\u63a5\u77e9\u9635\u7684\u8bdd\u53ef\u4ee5\u5148\u5b66\u4e00\u5b66\u6216\u8005\u770b\u61c2\u6211\u7684\u4e4b\u540e\u81ea\u5df1\u5199)\n\n3 : \u5199\u4ee3\u7801,\u5c31\u662f\u7528\u4f60\u7684\u5c0f\u722a\u722a\u6478\u4e00\u4e0b\u952e\u76d8\n\n4 : debug,dalao\u81ea\u884c\u8df3\u8fc7\n\n5 : \u6700\u91cd\u8981\u7684\u4e00\u6b65:\n\n\n\n\n\n# \u6253\u4e0a\u795e\u517d!!!!\n```\n\n\n       \u250c\u2500\u2510        \u250c\u2500\u2510\n   \u250c\u2500\u2518  \u2534\u2500\u2500\u2500\u2500\u2518  \u2534\u2500\u2510\n   \u2502                        \u2502\n   \u2502         \u2500\u2500\u2500         \u2502\n   \u2502  \u2500\u252c\u2518        \u2514\u252c\u2500  \u2502\n   \u2502                        \u2502\n   \u2502         \u2500\u2534\u2500         \u2502\n   \u2502                        \u2502\n   \u2514\u2500\u2500\u2510            \u250c\u2500\u2500\u2518\n         \u2502            \u2502\n         \u2502            \u2502\n         \u2502            \u2502\n         \u2502            \u2502\n         \u2502            \u2502\n         \u2502            \u2502\n         \u2502            \u2502\n         \u2502            \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n         \u2502                                  \u2502\n         \u2502                                  \u251c\u2500\u2510\n         \u2502                                  \u250c\u2500\u2518\n         \u2502                                  \u2502\n         \u2514\u2500\u2510  \u2510  \u250c\u2500\u2500\u2500\u2500\u252c  \u2510  \u250c\u2500\u2500\u2518\n             \u2502\u2500\u2524\u2500\u2524        \u2502\u2500\u2524\u2500\u2524\n             \u2514\u2500\u2534\u2500\u2518        \u2514\u2500\u2534\u2500\u2518\n                           \u795e\u517d\u4fdd\u4f51\n                         \u4ee3\u7801\u65e0BUG!\n\n```\n\u770b\u8d77\u6765\u597d\u50cf\u4e0d\u5927\u5bf9,\u4f46\u662f\u7c98\u8d34\u5230\u8bb0\u4e8b\u672c\u6216sublime(Dev\u4e5f\u884c)\n\n\u5c31\u4f1a\u53d8\u6210\u975e\u5e38\u5e05\u6c14\u7684\u6837\u5b50\n\n\u73b0\u5728\u8d34\u4ee3\u7801\n```cpp\n#include<bits/stdc++.h>\n\nusing namespace std;\n\ninline int read(){int s=0,w=1;char ch=getchar();while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();return s*w;}\ninline void write(int x) {if(x<0) putchar('-'),x=-x; if(x>9) write(x/10); putchar(x%10+'0'); }\n\nint u[10001],v[10001],f[10001],N[10001],g[10001];\nbool bj[10001],bj2[10001],book[10001];\n\nvoid add(int x,int y,int z){//\u90bb\u63a5\u8868\u5b58\u8fb9\n    u[z] = x; v[z] = y;\n\n\tN[z] = f[x]; f[x] = z;\n}\n\nbool find(int x){//\u5308\u7259\u5229\u6a21\u677f\n\tfor(int i = f[x];i != -1;i = N[i]){\n\t\tint p = v[i];\n\t\tif(!book[p]){\n\t\t\tbook[p] = 1;\n\t\t\tif(g[p] == 0 || find(g[p])){\n\t\t\t\tg[p] = x;\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n\nint main(int argc, char const *argv[])\n{\n\tint yy;\n\tyy = read();\n\n\twhile(yy){\n\t\tint tt = 0;\n\t\tyy--;\n\t\tmemset(f,-1,sizeof f);//\u591a\u6d4b\u4e0d\u6e05\u7a7a,\u7206\u96f6\u4e24\u884c\u6cea\n\t\tmemset(u,0,sizeof u);\n\t\tmemset(v,0,sizeof v);\n\t\tmemset(g,0,sizeof g);\n\t\tmemset(bj,0,sizeof bj);\n\t\tmemset(bj2,0,sizeof bj2);\n\n\t\tint m,x,tot = 0;\n\t\tm = read();\n\n\t\tfor(int i = 1;i <= m;++i) bj[i] = read();//\u5728\u6821\u6807\u8bb0\n\t\t\n\t\tfor(int i = 1;i <= m;++i) {\n\t\t\tx = read();\n\t\t\tbj2[i] = x;//\u662f\u5426\u56de\u5bb6\u7684\u6807\u8bb0\n\t\t\t\n\t\t\tif(!bj[i]) bj2[i] = 0;//\u4e0d\u5728\u6821\u5c31\u53ef\u4ee5\u5f53\u4e0d\u56de\u5bb6\u5904\u7406(\u56e0\u4e3a\u9700\u8981\u5e8a)\n\t\t\tif(bj2[i]) tt++;\n\t\t}\n\n\t\tfor(int i = 1;i <= m;++i){\n\t\t\tfor(int j = 1;j <= m;++j){\n\t\t\t\tx = read();\n\t\t\t\tif(i > j) continue;//\u53ea\u8bfb\u4e00\u534a\n\n\t\t\t\tif(i == j && bj[i])//\u81ea\u5df1\u53ef\u4ee5\u7761\u81ea\u5df1\u7684\u5e8a\n\t\t\t\t\tx = 1;\n\t\t\t\tif(x == 0) continue;//\u4e0d\u80fd\u4e92\u76f8\u7761\u5e8a\u4e0d\u5b58\u8fb9\n\t\t\t\t\n\t\t\t\tif(bj[j] && !bj2[i]){//j\u6709\u5e8ai\u4e0d\u56de\u5bb6\u5c31\u52a0\u8fb9\n\t\t//\t\t\tcout<<i<<\" \"<<j<<endl;\n\t\t\t\t\tadd(i,m + j,++tot);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(i == j) continue;\n\t\t\t\t\n\t\t\t\tif(bj[i] && !bj2[j]){//\u540c\u7406\n\t\t//\t\t\tcout<<j<<\" \"<<i<<endl;\n\t\t\t\t\tadd(j,m + i,++tot);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// for(int i = 1;i <= m;++i){\n\t\t// \tcout<<f[i]<<\" \"<<N[i]<<endl;\n\t\t// }\n\n\t\tint cnt = 0;\n\t\tfor(int i = 1;i <= m;++i){\n\t\t\tmemset(book,0,sizeof book);\n\t\t\tif(find(i)) cnt++;\n\t\t}\n\t\t\n\t\tif(cnt == m - tt) cout<<\"^_^\"<<\"\\n\";\n\t\telse cout<<\"T_T\"<<\"\\n\";\n\t}\n\treturn 0;\n}\n\n/***\n  *        \u250c\u2500\u2510        \u250c\u2500\u2510\n  *    \u250c\u2500\u2518  \u2534\u2500\u2500\u2500\u2500\u2518  \u2534\u2500\u2510\n  *    \u2502                        \u2502\n  *    \u2502         \u2500\u2500\u2500         \u2502\n  *    \u2502  \u2500\u252c\u2518        \u2514\u252c\u2500  \u2502\n  *    \u2502                        \u2502\n  *    \u2502         \u2500\u2534\u2500         \u2502\n  *    \u2502                        \u2502\n  *    \u2514\u2500\u2500\u2510            \u250c\u2500\u2500\u2518\n  *          \u2502            \u2502\n  *          \u2502            \u2502\n  *          \u2502            \u2502\n  *          \u2502            \u2502\n  *          \u2502            \u2502\n  *          \u2502            \u2502\n  *          \u2502            \u2502\n  *          \u2502            \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n  *          \u2502                                  \u2502\n  *          \u2502                                  \u251c\u2500\u2510\n  *          \u2502                                  \u250c\u2500\u2518\n  *          \u2502                                  \u2502\n  *          \u2514\u2500\u2510  \u2510  \u250c\u2500\u2500\u2500\u2500\u252c  \u2510  \u250c\u2500\u2500\u2518\n  *              \u2502\u2500\u2524\u2500\u2524        \u2502\u2500\u2524\u2500\u2524\n  *              \u2514\u2500\u2534\u2500\u2518        \u2514\u2500\u2534\u2500\u2518\n  *                            \u795e\u517d\u4fdd\u4f51\n  *                          \u4ee3\u7801\u65e0BUG!\n  */\n\n\n```",
        "postTime": 1562983626,
        "uid": 192006,
        "name": "liuzitong",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2055 \u3010[ZJOI2009]\u5047\u671f\u7684\u5bbf\u820d\u3011"
    },
    {
        "content": "\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u70b9[\u8fd9\u91cc](http://blog.csdn.net/a_comme_amour/article/details/79553186)\n\n\u9898\u76ee\n-\n\n[\u4f20\u9001\u95e8](http://www.lydsy.com/JudgeOnline/problem.php?id=1433)\n\u9898\u89e3\n-\n\n\u8fd9\u4e2a\u9898\u60f3\u4e86\u5f88\u4e45\u3002\u5982\u4f55\u5efa\u56fe\uff1f\n1. \u6709\u5e8a\u7684\u5411**\u6c47\u70b9**\u8fde\u8fb9 \n2. **\u6e90\u70b9**\u5411\u9700\u8981\u5e8a\u7684\u8fde\u8fb9\uff0c\u8fb9\u6743\u90fd\u4e3a1\n3. \u8dd1\u6700\u5927\u6d41\u5224\u65admaxflow \u662f\u5426\u548c\u9700\u8981\u4f4f\u5bbf\u7684\u4ebatot\u76f8\u7b49\u5373\u53ef\n\n\u4ee3\u7801\u5012\u5f88\u7b80\u5355\uff0c\u5173\u952e\u5728\u4e8e\u600e\u4e48\u60f3\u5230\u7684\u3002\uff08\u5f85\u66f4\u65b0\uff09\n\u76f8\u5f53\u4e8e\u662f\u4e00\u4e2a \u9700\u8981\u5e8a\u7684 \u548c \u6709\u5e8a\u7684 \u4e00\u4e2a\u5339\u914d\n\u8fd8\u662f\u81ea\u884c\u53c2\u609f\u5427\n\n\u4ee3\u7801\n-\n\n```\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<iostream>\n#include<queue>\nusing namespace std;\nconst int maxn=1001;\nconst int inf=1e9;\n\nqueue <int> q;\nint T,n,maxflow,tot;\nstruct Edge{\n\tint next,to,dis;\n}edge[maxn<<1];\nint head[maxn],num_edge=-1,cur[maxn],deep[maxn];\nbool sch[maxn],home[maxn];\n\nvoid add_edge(int from,int to,int dis)\n{\n\tedge[++num_edge].next=head[from];\n\tedge[num_edge].to=to;\n\tedge[num_edge].dis=dis;\n\thead[from]=num_edge;\n}\n\nbool bfs(int s,int t)\n{\n\tmemset(deep,0x7f,sizeof(deep));\n\tfor (int i=0; i<=t; i++) cur[i]=head[i];\n\twhile (!q.empty()) q.pop();\n\tdeep[s]=0; q.push(s);\n\twhile (!q.empty())\n\t{\n\t\tint now=q.front(); q.pop();\n\t\tfor (int i=head[now]; i!=-1; i=edge[i].next){\n\t\t\tint to=edge[i].to;\n\t\t\tif (deep[to]>inf && edge[i].dis)\n\t\t\t{\n\t\t\t\tdeep[to]=deep[now]+1;\n\t\t\t\tq.push(to);\n\t\t\t\tif (to==t) return true;\n\t\t\t}\n\t\t}\n\t}\n\treturn deep[t]<inf;\n}\n\nint dfs(int now,int t,int limit)\n{\n//\tprintf(\"%d %d\\n\",now,limit);\n\tif (now==t || !limit) return limit;\n\tint flow=0,f;\n\tfor (int i=head[now]; i!=-1; i=edge[i].next)\n\t{\n\t\tcur[now]=i; int to=edge[i].to;\n//\t\tprintf(\"%d: %d %d %d\\n\",i,edge[i^1].to,to,edge[i].dis);\n\t\tif (deep[to]==deep[now]+1 && (f=dfs(to,t,min(edge[i].dis,limit))))\n\t\t{\n//\t\t\tprintf(\"f: %d %d\\n\",f,edge[i].to);\n\t\t\tflow+=f;\n\t\t\tlimit-=f;\n\t\t\tedge[i].dis-=f;\n\t\t\tedge[i^1].dis+=f;\n\t\t\tif (!limit) break;\n\t\t}\n\t}\n\treturn flow;\n}\n\nvoid Dinic(int s,int t)\n{\n\twhile (bfs(s,t))\n\t\tmaxflow+=dfs(s,t,inf);\n}\n\nint main()\n{\n\tscanf(\"%d\",&T);\n\tint ans=0;\n\tfor (int i=1; i<=1e8+1e7; i++) ans++;\n\twhile (T--)\n\t{\n\t\tnum_edge=-1; tot=0; maxflow=0;\n\t\tmemset(head,-1,sizeof(head));\n\t\tscanf(\"%d\",&n);\n\t\tint s=0; int t=n*2+1;\n\t\tfor (int i=1; i<=n; i++)\n\t\t{\n\t\t\tscanf(\"%d\",&sch[i]);//\u6709\u5e8a\u7684\u5411\u6c47\u70b9\u8fde\u8fb9 \n\t\t\tif (sch[i]) {add_edge(i+n,t,1); add_edge(t,i+n,0);}\n\t\t}\n\t\tfor (int i=1; i<=n; i++) \n\t\t{\n\t\t\tscanf(\"%d\",&home[i]);//\u6e90\u70b9\u5411\u9700\u8981\u5e8a\u7684\u8fde\u8fb9 \n\t\t\tif (!sch[i] || (sch[i]&&!home[i])) {tot++; add_edge(s,i,1); add_edge(i,s,0);}\n\t\t}\n\t\tfor (int i=1; i<=n; i++)\n\t\t\tfor (int j=1; j<=n; j++)\n\t\t\t{\n\t\t\t\tint x; scanf(\"%d\",&x);\n\t\t\t\tif (x || i==j) {add_edge(i,j+n,1); add_edge(j+n,i,0);}\n\t\t\t}\n//\t\tfor (int i=0; i<=num_edge; i++) printf(\"%d: %d %d %d\\n\",i,edge[i^1].to,edge[i].to,edge[i].dis);\n\t\tDinic(s,t);\n\t\tif (maxflow==tot) printf(\"^_^\\n\");\n\t\telse printf(\"T_T\\n\");\n\t}\n\treturn 0;\n}\n```\n\n\u603b\u7ed3\n-\n\u6ce8\u610f\u8282\u70b9\u7684\u7f16\u53f7 +n \u9632\u6b62\u91cd\u590d\nS\u548cT\u6700\u597d\u5b9a\u4e49\u4e3a\u53d8\u91cf\uff0cT\u5e94\u8be5\u4e3a2*n+1 \u800c\u4e0d\u662f 2*n\uff0c\u56e0\u8fd9\u91ccWA\u6389\u4e86",
        "postTime": 1521182464,
        "uid": 48036,
        "name": "\u79cb\u65e5\u79c1\u8bed",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2055 \u3010[ZJOI2009]\u5047\u671f\u7684\u5bbf\u820d\u3011"
    },
    {
        "content": "/\\*\n\u6211\u6765\u5199\u7bc7\u9898\u89e3\u5427\uff0c\u770b\u4e86\u524d\u9762\u7684\uff0c\u5199\u7684\u4e11\u7caa\u4e86\uff0c\u5b9e\u5728\u770b\u4e0d\u4e0b\u53bb\uff0c\u4e5f\u4e0d\u52a9\u4e8e\u7406\u89e3\n\n\u8fd9\u9053\u9898\u7684\u601d\u8def\u6709\u591a\u79cd \u7f51\u7edc\u6d41\u6216\u8005\u4e8c\u5206\u56fe  \u7b80\u5355\u6613\u5199\u6613\u61c2\u7684\u5c31\u662f\u4e8c\u5206\u56fe\u4e86\n\n\u7528\u5230\u7684\u662f\u5308\u7259\u5229\u7b97\u6cd5 \u5176\u5b9e\u5c31\u662f\u5229\u7528\u9012\u5f52\u7ed9\u6bcf\u4e2a\u70b9\u5339\u914d \u8be6\u7ec6\u7684\u81ea\u884c\u767e\u5ea6\n\n\u7136\u540e\u5c31\u662f\u5efa\u56fe \u770b\u4ee3\u7801\u6ce8\u91ca\n\n\\*/\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nconst int MAXN = 510;\nint uN,vN;//u,v\u7684\u6570\u76ee\uff0c\u4f7f\u7528\u524d\u9762\u5fc5\u987b\u8d4b\u503c\nint g[MAXN][MAXN];//\u90bb\u63a5\u77e9\u9635\nint linker[MAXN],pipei;\nbool used[MAXN],stu[MAXN],hom[MAXN];\nbool dfs(int u)\n{\n    for(int v = 1; v <=vN;v++)\n        if(stu[v] && g[u][v] && !used[v])//\u8fd9\u91cc\u5339\u914d\u5c31\u8981\u5339\u914d\u662f\u5728\u6821\u5b66\u751f\u7684 \u56e0\u4e3a\u4e0d\u662f\u5728\u6821\u5b66\u751f\u7684\u8bdd\u6ca1\u6709\u5e8a \n        {\n            used[v] = true;\n            if(linker[v] == -1 || dfs(linker[v]))\n            {\n                linker[v] = u;\n                return true;\n            }\n        }\n    return false;\n}\nbool hungary()//\u5308\u7259\u5229\u7b97\u6cd5 \n{\n    int res = 0;\n    memset(linker,-1,sizeof(linker));\n    for(int u = 1;u <= uN;u++)\n    {\n        memset(used,false,sizeof(used));\n        if((!stu[u] ||!hom[u]) && !dfs(u))    return 0;// \u7ed9\u6bcf\u4e2a\u4e0d\u662f\u5728\u6821\u5b66\u751f\u6216\u8005\u4e0d\u56de\u5bb6\u7684\u5339\u914d  \u5982\u679c\u4e0d\u6210\u529f\u5c31\u8fd4\u56de \n    }\n    return 1;\n}\nint main()\n{\n    int t,n;\n    scanf(\"%d\",&t);\n    while(t--)\n    {\n        scanf(\"%d\",&n);\n        uN=vN=n;\n        memset(g,0,sizeof(g));\n        for(int i=1;i<=n;i++)\n            scanf(\"%d\",&stu[i]);\n        for(int i=1;i<=n;i++)\n        {\n            scanf(\"%d\",&hom[i]);\n            if(!stu[i])\n                hom[i]=1;    //\u5982\u679c\u4e0d\u662f\u5728\u6821\u5b66\u751f\u5c31\u9ed8\u8ba4\u56de\u5bb6\u4e86 \n        }\n        for(int i=1;i<=n;i++)\n        {\n            for(int j=1;j<=n;j++)\n                scanf(\"%d\",&g[i][j]);\n            if(stu[i])g[i][i]=1;//\u5339\u914d\u81ea\u5df1\u7684\u5e8a \n        }\n        printf(\"%s\\n\",hungary()?\"^_^\":\"T_T\");\n    }\n    return 0;\n}\n```",
        "postTime": 1493632066,
        "uid": 38914,
        "name": "lilala",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P2055 \u3010[ZJOI2009]\u5047\u671f\u7684\u5bbf\u820d\u3011"
    }
]