[
    {
        "content": "# \u300cPOI2000\u300d\u516c\u5171\u4e32\n\n\u9898\u76ee\u5927\u610f\uff1a\u7ed9\u5b9a $n(n \\le 5)$ \u4e2a\u5b57\u7b26\u4e32\uff0c\u6c42\u6700\u957f\u516c\u5171\u5b50\u4e32\u957f\u5ea6\u3002\n\n\u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u4f7f\u7528 SA \u7684\u505a\u6cd5\u3002\n\n\u9996\u5148\u5c06\u7ed9\u5b9a\u7684\u6240\u6709\u5b57\u7b26\u4e32\u8fde\u5728\u4e00\u8d77\u4e32\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5b57\u7b26\u4e32\u4e4b\u95f4\u7528\u9898\u76ee\u9650\u5b9a\u5b57\u7b26\u96c6\u4e4b\u5916\u7684\u5b57\u7b26\u5206\u9694\u5f00\uff0c\u6211\u4eec\u79f0\u8fd9\u4e2a\u5b57\u7b26\u4e32\u4e3a $s$\uff0c\u8bbe\u5176\u957f\u5ea6\u4e3a $n$\u3002\n\n\u6211\u4eec\u6c42\u51fa\u5176 $\\texttt{height}$ \u6570\u7ec4\uff0c\u90a3\u4e48\u95ee\u9898\u5b9e\u9645\u4e0a\u8f6c\u5316\u4e3a\uff1a\u5728 $\\texttt{height}$ \u6570\u7ec4\u4e0a\u627e\u8fde\u7eed\u7684\u4e00\u6bb5\uff0c\u4f7f\u5f97\u8fd9\u4e00\u6bb5\u5305\u542b\u6765\u81ea\u7ed9\u5b9a\u7684\u6bcf\u4e2a\u5b57\u7b26\u4e32\u7684\u81f3\u5c11\u4e00\u4e2a\u540e\u7f00\uff0c\u8bbe\u8fd9\u6837\u7684\u7b2c $i$ \u4e2a\u533a\u95f4\u4e3a $[l_i,r_i]$ \uff0c\u5219\u6700\u540e\u7684\u7b54\u6848\u4e3a $\\min_{l_i< x \\le r_i}{\\texttt{height}_i}$\u3002\n\n\u9996\u5148\u4e0d\u8003\u8651\u8ba1\u7b97\u7b54\u6848\uff0c\u53ea\u8003\u8651\u8ba1\u7b97\u533a\u95f4\u7684\u8bdd\uff0c\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u7ecf\u5178\u7684\u95ee\u9898\uff0c\u76f4\u63a5\u4f7f\u7528 $\\texttt{two-pointer}$ \u5373\u53ef\u4ee5\u5728 $O(n)$ \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u6c42\u51fa\u6240\u6709\u8fd9\u6837\u7684\u533a\u95f4\u3002\u5177\u4f53\u505a\u6cd5\u5c31\u7528\u4e00\u4e2a\u6570\u7ec4\u8868\u793a\u6765\u81ea\u7b2c $i$ \u4e2a\u5b57\u7b26\u4e32\u7684\u540e\u7f00\u51fa\u73b0\u4e86\u51e0\u6b21\uff0c\u52a8\u6001\u66f4\u65b0\u5373\u53ef\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u8ba1\u7b97\u7b54\u6848\uff0c\u8fd9\u540c\u6837\u662f\u4e00\u4e2a\u7ecf\u5178\u95ee\u9898\uff0c\u7c7b\u6bd4\u300c\u6ed1\u52a8\u7a97\u53e3\u300d\uff0c\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u961f\u5217\uff0c\u968f\u7740 $\\texttt{two-pointer}$ \u8fc7\u7a0b\u4e2d\u533a\u95f4\u7684\u6269\u5f20\u4e0e\u6536\u7f29\u5bf9\u5355\u8c03\u961f\u5217\u8fdb\u884c\u66f4\u65b0\u5373\u53ef\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n)$\u3002\n\n\u8fd9\u79cd\u505a\u6cd5\u76f8\u6bd4\u4e8c\u5206\u590d\u6742\u5ea6\u66f4\u4f18\uff0c\u4ee3\u7801\u590d\u6742\u5ea6\u4e5f\u8f83\u5c0f\u3002\n\n\u7efc\u4e0a\uff0c\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(nlog_2n)$\u3002\u74f6\u9888\u5728\u4e8e\u6784\u9020\u540e\u7f00\u6570\u7ec4\uff0c\u5982\u679c\u4f7f\u7528\u7ebf\u6027\u6784\u9020\u65b9\u6cd5\u53ef\u4ee5\u505a\u5230 $O(n)$\u3002\n\n\u4ee5\u4e0b\u662f\u4ee3\u7801\uff1a\n\n```cpp\n/*---Author:HenryHuang---*/\n#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=2e4+5;\nchar s[maxn];\nint sa[maxn],rk[maxn],tp[maxn],cnt[maxn];\nint n,m,N;\nint height[maxn],h[maxn];\nint vis[maxn],col[maxn],ok;\ninline void sort(){\n\tmemset(cnt,0,sizeof (int)*(m+1));\n\tfor(int i=1;i<=n;++i) ++cnt[rk[i]];\n\tfor(int i=1;i<=m;++i) cnt[i]+=cnt[i-1];\n\tfor(int i=n;i>=1;--i) sa[cnt[rk[tp[i]]]--]=tp[i];\n}\nint L[10],R[10];\nvoid add(int x){\n\tif(col[x]==0) return ;\n\t++vis[col[x]];\n\tif(vis[col[x]]==1) ++ok;\n}\nvoid del(int x){\n\tif(col[x]==0) return ;\n\t--vis[col[x]];\n\tif(!vis[col[x]]) --ok;\n}\nint main(){\n\tcin>>N;\n\tfor(int i=1;i<=N;++i){\n\t\tL[i]=n+1;\n\t\tscanf(\"%s\",s+n+1);\n\t\tn+=strlen(s+n+1);\n\t\tR[i]=n;\n\t\ts[++n]=i+'0';\n\t}\n\tm='z';\n\tfor(int i=1;i<=n;++i) rk[i]=s[i]-'0'+1,tp[i]=i;\n\tsort();\n\tfor(int w=1,p=0;p<n;m=p,w<<=1){\n\t\tp=0;\n\t\tfor(int i=n;i>n-w;--i) tp[++p]=i;\n\t\tfor(int i=1;i<=n;++i) if(sa[i]>w) tp[++p]=sa[i]-w;\n\t\tsort();swap(tp,rk);\n\t\trk[sa[1]]=p=1;\n\t\tfor(int i=2;i<=n;++i)\n\t\t\trk[sa[i]]=(tp[sa[i-1]]==tp[sa[i]]&&tp[sa[i-1]+w]==tp[sa[i]+w])?p:++p;\n\t}\n\tfor(int i=1;i<=n;++i) rk[sa[i]]=i;\n\tint k=0;\n\tfor(int i=1;i<=n;++i){\n\t\tif(rk[i]==1) continue;\n\t\tif(k) --k;\n\t\tint j=sa[rk[i]-1];\n\t\twhile(i+k<=n&&j+k<=n&&s[i+k]==s[j+k]) ++k;\n\t\theight[rk[i]]=k;\n\t}//\u6c42height \n\tfor(int i=1;i<=N;++i){\n\t\tfor(int j=L[i];j<=R[i];++j)\n\t\t\tcol[rk[j]]=i;\n\t\t;\n\t}\n\tdeque<int>q;\n\tint l=1,ans=0;\n\tadd(1);\n\tfor(int r=2;r<=n;++r){\n\t\twhile(!q.empty()&&height[q.back()]>=height[r]) q.pop_back();\n\t\tq.emplace_back(r);\n\t\tadd(r);\n\t\tif(ok==N){\n\t\t\twhile(ok==N&&l<r) del(l),++l;\n\t\t\t--l,add(l);\n\t\t}\n\t\twhile(!q.empty()&&q.front()<=l) q.pop_front();//\u6ce8\u610f\u8fd9\u91cc\u662f\u7b49\u4e8e\uff0c\u533a\u95f4\u5185\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u7684height\u5927\u5c0f\u6211\u4eec\u4e0d\u5173\u5fc3 \n\t\tif(ok==N) ans=max(ans,height[q.front()]);\n\t}//\u6c42\u89e3\u7b54\u6848 \n\tcout<<ans<<'\\n';\n\treturn 0;\n}\n```\n\n\n\n\n\n ",
        "postTime": 1581656853,
        "uid": 43957,
        "name": "HenryHuang",
        "ccfLevel": 9,
        "title": "\u300cPOI2000\u300d\u516c\u5171\u4e32"
    },
    {
        "content": "## \u9898\u89e3-P5546 [POI2000]\u516c\u5171\u4e32\n\n### \u9898\u76ee\u610f\u601d\n\n\u5c31\u662f\u7ed9\u4f60$\\leq 5$\u4e2a\u5b57\u7b26\u4e32$(|s|\\leq 2000)$\uff0c\u6c42\u6700\u957f\u5339\u914d\u7684\u516c\u5171\u5b50\u4e32\u957f\u5ea6\u3002\n\n### $Solution$\n\n* **\u4e8c\u5206+hash**\n\n\u5176\u5b9e\u8fd9\u79cd\u7b97\u6cd5\u662f\u5f88\u66b4\u529b\u7684\uff0c\u6bcf\u6b21\u4e8c\u5206\u4e00\u4e2a\u957f\u5ea6\uff0c\u7136\u540e\u4f9d\u6b21\u53bb\u5404\u5b57\u7b26\u4e32\u91cc\u9762\u53bb\u5339\u914d\uff0c\u5982\u679c\u6bcf\u4e2a\u4e32\u90fd\u80fd\u5339\u914d\u4e0a\u5c31\u4e8c\u5206\u4e0b\u53bb\u5c31\u53ef\u4ee5\u3002\u7136\u540e\u7528\u4e00\u4e2a$map$\u53bb\u8bb0\u5f55\u8fd9\u6bb5\u5b57\u7b26\u4e32\u7684\u54c8\u5e0c\u503c\u662f\u5426\u51fa\u73b0\u8fc7\u5373\u53ef\u3002\u5bf9\u4e8e\u4e00\u6bb5\u5b57\u7b26\u4e32\u7684\u54c8\u5e0c\u503c\u7684\u8ba1\u7b97\u65b9\u6cd5$hash[r]-hash[l-1]*jc[r-l+1]$\n\n\u8fd9\u6837\u4f60\u5c31\u62ff\u5230\u4e86$100ptc$\u7684\u597d\u6210\u7ee9\u554a\uff01\n\n* \u6b63\u89e3\u663e\u7136\u662f\u540e\u7f00\u81ea\u52a8\u673a\uff0c\u7136\u800c\u6211\u4e0d\u4f1a\u3002\n\n### $Code$\n```cpp\n#include <bits/stdc++.h>\n\n#define hash ha\n#define ull unsigned long long \nusing namespace std;\n\nconst int base=173;\n\nstruct IO {\n\t#define gc getchar\n\t#define pt putchar\n\n\tinline int read() {\n\t\tint sum=0,ff=1; char ch=gc();\n\t\twhile(!isdigit(ch)) {\n\t\t\tif(ch=='-') ff=-1;\n\t\t\tch=gc();\n\t\t}\n\t\twhile(isdigit(ch))\n\t\t\tsum=sum*10+(ch^48),ch=gc();\n\t\treturn sum*ff;\n\t}\n\n\tinline void write(int x) {\n\t    if(x<0)\n\t\t\tpt('-'),x=-x;\n\t    if(x>9)\n\t\t\twrite(x/10);\n\t    pt(x%10+48);\n\t}\n\n\tinline void writeln(int x) {\n\t\twrite(x);\n\t\tpt('\\n');\n\t}\n} fast;\n\nint n,ans,len,id;\nchar ch[11][2005];\null jc[2005],hash[11][2005];\nint sum[11][2005];\nmap<int,ull> ma[11];\n\ninline void init() {\n\tjc[0]=1;\n\tfor ( int i=1;i<=2000;i++ ) jc[i]=jc[i-1]*base;\n\tfor ( int i=1;i<=n;i++ ) \n\t\tfor ( int j=1;j<=strlen(ch[i]+1);j++ ) \n\t\t\thash[i][j]=hash[i][j-1]*base+sum[i][j];\n}\n\ninline ull get(int now,int l,int r) {\n\treturn hash[now][r]-hash[now][l-1]*jc[r-l+1];\n}\n\ninline bool check(int mid) {\n\tfor ( int i=1;i<=n;i++ ) \n\t\tma[i].clear();\n\tfor ( int i=1;i<n;i++ ) {\n\t\tfor ( int j=1;j+mid-1<=strlen(ch[i]+1);j++ ) {\n\t\t\tull tmp=get(i,j,j+mid-1);\n//\t\t\tcout<<tmp<<endl;\n\t\t\tma[i][tmp]=1;\n\t\t}\n\t}\n//\tcout<<strlen(ch[n]+1)<<endl;\n\tfor ( int i=1;i+mid-1<=strlen(ch[n]+1);i++ ) {\n\t\tull tmp=get(n,i,i+mid-1);\n\t\tbool ok=false;\n\t\tfor ( int j=1;j<n;j++ ) \n\t\t\tif(!ma[j][tmp]) ok=true;\n\t\tif(ok==false) return true;\n\t}\n\treturn false;\n}\n\n\t\nint main() {\n\tscanf(\"%d\",&n);\n\tfor ( int i=1;i<=n;i++ ) {\n\t\tscanf(\"%s\",ch[i]+1);\n\t\tfor ( int j=1;j<=strlen(ch[i]+1);j++ ) \n\t\t\tsum[i][j]=ch[i][j]-'a'+1;\n\t\tif(strlen(ch[i]+1)>len) {\n\t\t\tlen=strlen(ch[i]+1);\n\t\t\tid=i;\n\t\t}\n\t}\n\tinit();\n//\tcout<<get(1,1,3)<<endl;\n//\tfor ( int i=1;i<=n;i++ ) {\n//\t\tfor ( int j=1;j<=strlen(ch[i]+1);j++ ) \n//\t\t\tcout<<hash[i][j]<<\" \";\n//\t\tprintf(\"\\n\");\n//\t}\n\tint l=1,r=strlen(ch[id]+1);\n\twhile(l<=r) {\n\t\tint mid=(l+r)>>1;\n\t\tif(check(mid)) {\n\t\t\tans=mid;\n\t\t\tl=mid+1;\n\t\t}\n\t\telse r=mid-1;\n\t}\n\tfast.writeln(ans);\n\treturn 0;\n}\n\t\t\n\t\t\t\n\t\n```\n",
        "postTime": 1568018348,
        "uid": 172612,
        "name": "\u7c73\u5947\u5947\u7c73",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5546 \u3010[POI2000]\u516c\u5171\u4e32\u3011"
    },
    {
        "content": "## \u9898\u610f\n\u7ed9\u51fa\u51e0\u4e2a\u5b57\u7b26\u4e32\uff0c\u6c42\u5b83\u4eec\u6700\u957f\u7684\u516c\u5171\u5b50\u4e32\u7684\u957f\u5ea6\u3002[$QAQ$](https://www.luogu.com.cn/blog/xzc/solution-p5546)\n## \u5206\u6790\n### \u5199\u5728\u524d\u9762\u7684\n\u5927\u591a\u6570\u9898\u89e3\u90fd\u662f $\\text{SA}$ \uff0c\u53ea\u6709\u4e00\u7bc7\u662f $\\text{SAM}$ \uff0c\u800c\u4e14 $\\text{SAM}$ \u7684\u505a\u6cd5\u53ea\u5bf9\u4e00\u4e2a\u4e32\u5efa\u4e86\u7684\u3002\n\n- \u8fd9\u91cc\u63d0\u4f9b\u4e00\u79cd\u5e7f\u4e49\u540e\u7f00\u81ea\u52a8\u673a\u7684\u505a\u6cd5\u3002\u597d\u50cf\u5bf9\u4e8e\u591a\u4e2a\u5b57\u7b26\u4e32\u5efa\u5b57\u5178\u6811\uff0c\u7136\u540e\u518d\u5efa\u81ea\u52a8\u673a\u624d\u662f\u79d1\u5b66\u7684\u505a\u6cd5\uff0c\u6ca1\u5b66\u8fc7\u3002\n\n- \u63d0\u4f9b\u4e00\u79cd\u7b80\u5355\u505a\u6cd5\n\n- \u6bcf\u5f53\u5b8c\u5168\u63d2\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e4b\u540e\uff0c\u5c06 $\\text{last}$ \u53d8\u6210 $0$ \u6216\u8005 $1$ \u3002\u6709\u4e9b\u4eba\u6216\u8bb8\u4e60\u60ef\u63d2\u5165\u4e00\u4e2a\u7279\u6b8a\u5b57\u7b26\u5982 $\\text{\\#}$ \u4e4b\u7c7b\u7684\u3002\n\n- \u73b0\u5728\u5c31\u53ef\u4ee5\u5728\u81ea\u52a8\u673a\u4e0a\u627e\u5230 $\\text{endpos}$ \u6709\u6240\u6709\u63d2\u5165\u5b57\u7b26\u7684\u7b49\u4ef7\u7c7b\uff0c\u6700\u957f\u7684 $\\text{len}$ \u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n)$ \uff0c\u8f7b\u677e\u8dd1\u5230\u7b2c\u4e00\u9875\uff0c\u5199\u6cd5\u4e5f\u6bd4\u8f83\u7b80\u5355\u3002\n\n## \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint si,last;\nconst int MAXLEN = 2e5+100;\nstruct Node{\n\tint link,si[5],len;\n\tint nxt[26];\n}st[MAXLEN<<1];\nvoid init(){\n\tst[0].len = 0;st[0].link = -1;last = 0;si++;\n}\nvoid insert(int c,int op){\n\tint cur = si++;st[cur].len = st[last].len + 1;\n\tst[cur].si[op] = 1;\n\tint p = last;\n\twhile(p != -1 && !st[p].nxt[c]){\n\t\tst[p].nxt[c] = cur;\n\t\tp = st[p].link;\n\t}\n\tif(p == -1) st[cur].link = 0;\n\telse {\n\t\tint q = st[p].nxt[c];\n\t\tif(st[q].len == st[p].len + 1) st[cur].link = q;\n\t\telse {\n\t\t\tint cl = si++;\n\t\t\tst[cl].len = st[p].len + 1;\n\t\t\tst[cl].link = st[q].link;\n\t\t\tfor(int i = 0;i < 26;i++) st[cl].nxt[i] = st[q].nxt[i];\n\t\t\twhile(p != -1 && st[p].nxt[c] == q)\n\t\t\t{\n\t\t\t\tst[p].nxt[c] = cl;p = st[p].link;\t\n\t\t\t}\n\t\t\tst[q].link = st[cur].link = cl;\n\t\t}\n\t}\n\tlast = cur;\n}\nconst int N = 2e6+100;\nint nxt[N<<2],to[N<<2],head[N<<1],Cnt = 0;\nvoid build(){\n\tfor(int i = 1;i < si;i++){\n\t\tint x = st[i].link,y = i;\n\t\tto[++Cnt] = y;nxt[Cnt] = head[x];head[x] = Cnt;\n\t}\n}\nint n;\nvoid dfs(int x){\n\tfor(int i = head[x];i;i = nxt[i]){\n\t\tint y = to[i];\n\t\tdfs(y);\n\t\tfor(int j = 0;j < n;j++){\n\t\t\tst[x].si[j] += st[y].si[j];\n\t\t}\n\t}\n}\n\nchar ch[N];\nint main()\n{\n\tinit();\n\t cin>>n;\n\tfor(int i = 1;i <= n;i++){\n\t\tcin >> ch;\n\t\tint L = strlen(ch);\n\t\tfor(int j = 0;j < L;j++){\n\t\t\tinsert(ch[j]-'a',i-1);\n\t\t}\n\t\tlast = 0;\n\t}\n\tbuild();\n\tdfs(0);\n\tint ans = 0;\n\tfor(int i = 0;i < si;i++){\n\t\tfor(int j = 0;j < n;j++){\n\t\t\tif(st[i].si[j] == 0) break;\n\t\t\tif(j == n-1) {\n\t\t\t\tans = max(ans,st[i].len);\n\t\t\t}\n\t\t}\n\t}\n\tcout << ans << endl;\n\treturn 0;\n}\n```\n",
        "postTime": 1598143110,
        "uid": 227824,
        "name": "JK_LOVER",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5546 \u3010[POI2000]\u516c\u5171\u4e32\u3011"
    },
    {
        "content": "\u9898\u610f\u5c31\u662f\u7ed9\u5b9a\u4e0d\u8d85\u8fc75\u4e2a\u5b57\u7b26\u4e32\uff0c\u6c42\u6700\u957f\u516c\u5171\u5b50\u4e32\n\u603b\u957f\u5ea6\u4e0d\u8d85\u8fc71w\n\n\u9996\u5148\u628a\u6240\u6709\u5b57\u7b26\u4e32\u62fc\u5728\u4e00\u8d77\uff0c\u4e2d\u95f4\u5206\u522b\u7528\u4e0d\u540c\u7684\u5b57\u7b26\u9694\u5f00\n\u7136\u540e\u6c42\u51fa$height$\n\n\n\n\u4e8c\u5206\u7b54\u6848\u4e3ak\n\u627e\u5230\u6bcf\u4e00\u8fde\u7eed\u4e14\u5747\u4e0d\u5c0f\u4e8ek\u7684\u6bb5\n\u53ea\u8981\u5728\u6bb5\u91cc\u6709\u6765\u81ea\u4e0d\u540c\u4e32\u7684\u540e\u7f00\u5c31\u884c\u4e86\n\u7528\u524d\u7f00\u548c\u7ef4\u62a4\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nconst int maxn = 10000 + 10;\nint n, m;\nchar s[maxn]; \nint sa[maxn], rank[maxn], height[maxn];\nint tax[maxn], tp[maxn];\ninline void tsort(){\n\tfor(int i = 1; i <= m; i++) tax[i] = 0;\n\tfor(int i = 1; i <= n; i++) tax[rank[i]]++;\n\tfor(int i = 2; i <= m; i++) tax[i] += tax[i - 1];\n\tfor(int i = n; i; i--) sa[tax[rank[tp[i]]]--] = tp[i];\n}\ninline bool cmp(int *arr, int l, int r, int k){\n\treturn arr[l] == arr[r] && arr[l + k] == arr[r + k];\n}\nvoid suffix_sort(){\n\tm = 128;\n\tfor(int i = 1; i <= n; i++) tp[i] = i;\n\tfor(int i = 1; i <= n; i++) rank[i] = s[i];\n\ttsort();\n\tfor(int k = 1, p = 0; p < n; k <<= 1, m = p){\n\t\tp = k;\n\t\tfor(int i = 1; i <= k; i++) tp[i] = n - k + i;\n\t\tfor(int i = 1; i <= n; i++) if(sa[i] > k) tp[++p] = sa[i] - k;\n\t\ttsort();\n\t\tswap(rank, tp);\n\t\tp = rank[sa[1]] = 1;\n\t\tfor(int i = 2; i <= n; i++)\n\t\t\trank[sa[i]] = cmp(tp, sa[i - 1], sa[i], k) ? p : ++p;\n\t}\n\tfor(int i = 1, j, k = 0; i <= n; height[rank[i++]] = k)\n\t\tfor(k ? k-- : 0, j = sa[rank[i] - 1]; s[j + k] == s[i + k]; k++);\n}\nint L[10], R[10], sum[10][maxn] = {0};\nchar temp[] = {'!', '@', '#', '$', 0};\nint q[maxn], qcnt;\nint main(){\n\tint N;\n\tscanf(\"%d\", &N);\n\tn = 0;\n\tfor(int i = 0; i < N; i++){\n\t\tL[i] = n + 1;\n\t\tscanf(\"%s\", s + 1 + n);\n\t\tn += strlen(s + 1 + n);\n\t\tR[i] = n;\n\t\ts[++n] = temp[i];\n\t}\n\ts[n--] = 0;\n\tsuffix_sort();\n\tfor(int i = 0; i < N; i++){\n\t\tfor(int j = L[i]; j <= R[i]; j++)\n\t\t\tsum[i][rank[j]]++;\n\t\tfor(int j = 1; j <= n; j++)\n\t\t\tsum[i][j] += sum[i][j - 1];\n\t}\n\tint l = 1, r = maxn, mid, ans = 0;\n\tfor(int i = 0; i < N; i++) r = min(r, R[i] - L[i] + 1);\n\tbool flag;\n\twhile(l <= r){\n\t\tmid = l + r >> 1;\n\t\tqcnt = 0;\n\t\tfor(int i = 1; i <= n; i++){\n\t\t\tif(height[i] < mid) q[++qcnt] = i;\n\t\t}\n\t\tfor(int i = 2; i <= qcnt; i++){\n\t\t\tflag = true;\n\t\t\tfor(int j = 0; j < N; j++) flag &= sum[j][q[i] - 1] - sum[j][q[i - 1] - 1] > 0;\n\t\t\tif(flag) break;\n\t\t}\n\t\tif(flag){\n\t\t\tans = mid;\n\t\t\tl = mid + 1;\n\t\t}\n\t\telse r = mid - 1;\n\t}\n\tprintf(\"%d\\n\", ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1569502695,
        "uid": 20910,
        "name": "\u6c5f\u4e4b\u6c38\u77e3",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5546 \u3010[POI2000]\u516c\u5171\u4e32\u3011"
    },
    {
        "content": "[\u9898\u76ee\u5e8a\u9001\u95e8](https://www.luogu.com.cn/problem/P5546)\n\n---\n\n\u963f\u5df4\u963f\u5df4\uff0c\u4e3a\u4ec0\u4e48\u4e00\u9053\u6253 $\\texttt{Trie}$ \u6811\u7684\u9898\uff0c\u5168\u90e8\u9898\u89e3\u90fd\u662f $\\texttt{hash}$ \u8fc7\u7684\u554a\u3002\n\n\u8fd9\u91cc\u7ed9\u51fa\u4e00\u79cd $\\texttt{Trie}$ \u6811\u7684\u65b9\u6cd5\u3002\n\n\u5982\u679c\u662f\u516c\u5171\u5b50\u4e32\uff0c\u5979\u4e00\u5b9a\u4f1a\u51fa\u73b0\u5728\u7b2c\u4e00\u4e2a\u4e32\uff0c\u6240\u4ee5\u4e3a\u4e86\u8282\u7ea6\u7a7a\u95f4\uff0c\u53ea\u5bf9\u7b2c\u4e00\u4e2a\u4e32\u5efa\u6811\u5c31\u884c\u4e86\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u5176\u4ed6\u4e32\u6bcf\u4e2a\u5b50\u4e32\uff0c\u5bf9\u4e8e\u539f\u6811\u6253\u5230\u8fc7\u7684\u6807\u7b7e\uff0c\u67e5\u6ee1\u8db3\u6761\u4ef6\u7684\u6700\u5927\u503c\u5c31\u884c\u4e86\u3002\n\nps:\u4e3a\u4ec0\u4e48\u9898\u89e3\u5168\u662f $\\texttt{hash}$ \u554a\uff0c$\\texttt{Trie}$ \u6811\u660e\u663e\u7b80\u5355\u4e00\u70b9\u3002 \n\n```cpp\n#include <map>\n#include <cmath>\n#include <cstdio>\n#include <cctype>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n\n//Two kinds of QuickRead and QuickPrint\n\n//char buf[1 << 23],*p1 = buf,*p2 = buf,obuf[1 << 23],*O = obuf;\n//#define getchar() (p1 == p2 && (p2 = (p1 = buf) + fread(buf,1,1 << 21,stdin),p1 == p2) ? EOF : *p1 ++)\ntemplate<typename T>void read(T &x) {\n\tx = 0;T f = 1;char ch = getchar();\n\twhile (!isdigit(ch)) {if (ch == '-') f = -1;ch = getchar();}\n\twhile (isdigit(ch)) {x = (x << 3) + (x << 1) + ch - '0';ch = getchar();}\n\tx *= f;\n}\nint read() {\n\tint x = 0, f = 1;char ch = getchar();\n\twhile (!isdigit(ch)) {if (ch == '-') f = -1;ch = getchar();}\n\twhile (isdigit(ch)) {x = (x << 3) + (x << 1) + ch - '0';ch = getchar();}\n\treturn x *= f;\n}\ntemplate<typename T>void print(T x) {\n\tif (x < 0) putchar('-'),x = -x;\n\tif (x > 9) print(x / 10);\n\tputchar(x % 10 + '0');\n}\ntemplate<typename T>void Swap(T &x,T &y) {T z = x;x = y;y = z;}\ntemplate<typename T>T Min(T x,T y) {return x < y ? x : y;}\ntemplate<typename T>T Max(T x,T y) {return x > y ? x : y;}\ntemplate<typename T>T Abs(T x) {return x < 0 ? -x : x;}\n\nconst int N = 10000005;\nconst int K = 10000005;\n\nint nxt[N],ver[N],head[N],tot;\nvoid addEdge(int u,int v) {nxt[++ tot] = head[u];ver[tot] = v;head[u] = tot;}\n\nint n,cmp;\nint cnt,ans;\nint t[K],dep[K],lin[K];\nchar s[2005];\n\nvoid insert(int be,int len,int id) {\n\tint root = 0;\n\tfor (int i = be ; i <= len ; ++ i) {\n\t\tint flag = 0;\n\t\tfor (int e = head[root] ; e ; e = nxt[e]) {\n\t\t\tif (t[ver[e]] == s[i] - 'a') {\n\t\t\t\tflag = ver[e];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!flag) t[++ cnt] = s[i] - 'a',addEdge(root,cnt),flag = cnt;\n\t\tdep[flag] = dep[root] + 1;\n\t\troot = flag;\n\t\tlin[root] |= 1 << id;\n\t\tif (lin[root] == cmp) ans = Max(ans,dep[root]);\n\t}\n}\n\nvoid update(int be,int len,int id) {\n\tint root = 0;\n\tfor (int i = be ; i <= len ; ++ i) {\n\t\tint flag = 0;\n\t\tfor (int e = head[root] ; e ; e = nxt[e]) {\n\t\t\tif (t[ver[e]] == s[i] - 'a') {\n\t\t\t\tflag = ver[e];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!flag) return;\n\t\troot = flag;\n\t\tlin[root] |= 1 << id;\n\t\tif (lin[root] == cmp) ans = Max(ans,dep[root]);\n\t}\n}\n\nint main () {\n\tread(n);\n\tscanf(\"%s\",s + 1);\n\tint len = strlen(s + 1);\n\tfor (int i = 1 ; i <= n ; ++ i) cmp |= 1 << i;\n\tfor (int i = 1 ; i <= len ; ++ i)\n\t\tinsert(i,len,1);\n\tfor (int i = 2 ; i <= n ; ++ i) {\n\t\tscanf(\"%s\",s + 1);\n\t\tlen = strlen(s + 1);\n\t\tfor (int j = 1 ; j <= len ; ++ j)\n\t\t\tupdate(j,len,i);\n\t}\n\tprint(ans);\n\treturn 0;\n}\n```",
        "postTime": 1603457300,
        "uid": 163516,
        "name": "Strelitzia",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5546 \u3010[POI2000]\u516c\u5171\u4e32\u3011"
    },
    {
        "content": "\u63d0\u4f9b\u4e00\u4e2a$sam$\u7684\n\n\u56e0\u4e3a\u6240\u6709\u4e32\u7684\u6700\u957f\u516c\u5171\u5b50\u4e32\u957f\u5ea6\u80af\u5b9a\u4e0d\u4f1a\u8d85\u8fc7\u6700\u77ed\u7684\u90a3\u4e2a\u4e32\uff0c\u6240\u4ee5\u53ef\u4ee5\u62ff\u6700\u77ed\u7684\u90a3\u4e2a\u4e32\u5efa\u673a\uff0c\u7136\u540e\u628a\u5176\u4ed6\u4e32\u653e\u5230\u4e0a\u9762\u5339\u914d\n\n\u6bcf\u4e2a\u70b9\u8bb0\u4e00\u4e2a\u5339\u914d\u8fc7\u7684\u6700\u5c0f\u503cmn\uff0c\u6700\u7ec8\u8f93\u51fa\u6240\u6709\u70b9mn\u7684\u6700\u5927\u503c\n```cpp\n#include<cstdio>\n#include<cstring>\ntemplate<class type>inline const void read(type &in)\n{\n\tin=0;char ch=getchar();bool f=0;\n\twhile (ch<48||ch>57){if (ch=='-')f=1;ch=getchar();}\n\twhile (ch>47&&ch<58)in=(in<<3)+(in<<1)+(ch&15),ch=getchar();\n\tif (f)in=-in;\n}\ntemplate<class type>inline const void write(type out)\n{\n\tif (out>9)write(out/10);\n\tputchar(out%10+48);\n}\ntemplate<class type>inline const void writeln(type out)\n{\n\tif (out<0)putchar('-'),out=-out;\n\twrite(out);\n\tputchar('\\n');\n}\ntemplate<class type>inline const type min(const type &a,const type &b)\n{\n\treturn a<b?a:b;\n}\ntemplate<class type>inline const type max(const type &a,const type &b)\n{\n\treturn a>b?a:b;\n}\nconst int N=5,L=2e3+10;\nint n,len[N];\nchar s[N][L];\ntemplate<int maxn,int maxc>class Suffix_Automaton\n{\n\tprivate:\n\t\tstatic const int maxs=maxn<<1;\n\t\tint last,cnt,sum[maxn],rnk[maxs],len[maxs],son[maxs][maxc],fa[maxs],mx[maxs],mn[maxs];\n\t\tinline const void extend(int c)\n\t\t{\n\t\t\tint p=last,np=++cnt;\n\t\t\tmn[np]=len[last=np]=len[p]+1;\n\t\t\tfor (;p&&!son[p][c];p=fa[p])son[p][c]=np;\n\t\t\tif (!p)return fa[np]=1,void();\n\t\t\tint q=son[p][c];\n\t\t\tif (len[q]==len[p]+1)return fa[np]=q,void();\n\t\t\tint nq=++cnt;mn[nq]=len[nq]=len[p]+1;\n\t\t\tmemcpy(son[nq],son[q],sizeof(son[q]));\n\t\t\tfa[nq]=fa[q];fa[q]=fa[np]=nq;\n\t\t\tfor (;son[p][c]==q;p=fa[p])son[p][c]=nq;\n\t\t}\n\t\tinline const void radixsort()\n\t\t{\n\t\t\tfor (int i=1;i<=cnt;i++)sum[len[i]]++;\n\t\t\tfor (int i=1;i<=cnt;i++)sum[i]+=sum[i-1];\n\t\t\tfor (int i=1;i<=cnt;i++)rnk[sum[len[i]]--]=i;\n\t\t}\n\tpublic:\n\t\tinline const void build(int n,char *s)\n\t\t{\n\t\t\tlast=cnt=1;\n\t\t\tfor (int i=1;i<=n;i++)extend(s[i]-'a');\n\t\t\tradixsort();\n\t\t}\n\t\tinline const void match(int n,char *s)\n\t\t{\n\t\t\tint p=1,lcs=0;\n\t\t\tfor (int i=1;i<=n;i++)\n\t\t\t{\n\t\t\t\tint c=s[i]-'a';\n\t\t\t\tif (son[p][c]){p=son[p][c];mx[p]=max(mx[p],++lcs);continue;}\n\t\t\t\twhile (p&&!son[p][c])p=fa[p];\n\t\t\t\tif (p)lcs=len[p]+1,p=son[p][c],mx[p]=max(mx[p],lcs);\n\t\t\t\telse p=1,lcs=0;\n\t\t\t}\n\t\t\tfor (int i=cnt;i;i--)\n\t\t\t{\n\t\t\t\tint p=rnk[i];\n\t\t\t\tmn[p]=min(mn[p],mx[p]);\n\t\t\t\tif (fa[p])mx[fa[p]]=max(mx[fa[p]],mx[p]);\n\t\t\t\tmx[p]=0;\n\t\t\t}\n\t\t}\n\t\tinline const int query()\n\t\t{\n\t\t\tint lcs=0;\n\t\t\tfor (int i=1;i<=cnt;i++)lcs=max(lcs,mn[i]);\n\t\t\treturn lcs;\n\t\t}\n};\nSuffix_Automaton<L,26>sam;\nint main()\n{\n\tread(n);\n\tfor (int i=0;i<n;i++)scanf(\"%s\",s[i]+1),len[i]=strlen(s[i]+1);\n\tint mn=0;\n\tfor (int i=1;i<n;i++)if (len[i]<len[mn])mn=i;\n\tsam.build(len[mn],s[mn]);\n\tfor (int i=0;i<n;i++)if (mn^i)sam.match(len[i],s[i]);\n\twriteln(sam.query());\n\treturn 0;\n}\n```",
        "postTime": 1570869971,
        "uid": 14374,
        "name": "zhengrunzhe",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5546 \u3010[POI2000]\u516c\u5171\u4e32\u3011"
    },
    {
        "content": "~~\u521a\u521a\u5199\u4e86[\u8fd9\u9898](https://www.luogu.com.cn/problem/SP10570)\uff0c\u53d1\u73b0\u6709\u53cc\u500d\u7ecf\u9a8c\uff0c\u5c31\u6765\u628a\u8fd9\u9898\u4e5f\u6c34\u4e86~~\n\n## Description\n\n\u6c42 $n$ \u4e2a\u5b57\u7b26\u4e32\u7684\u6700\u957f\u516c\u5171\u5b50\u4e32\u7684\u957f\u5ea6\n\n## Solution\n\n\u9996\u5148\u53ef\u4ee5\u4e8c\u5206\u6700\u957f\u7684\u957f\u5ea6\n\n\u7136\u540e\u5f00 $n-1$ \u4e2a\u6876\uff0c\u628a $2$ \u5230 $n$ \u7684\u6bcf\u4e2a\u5b57\u7b26\u4e32\u957f\u5ea6\u4e3a $mid$ \u7684\u5b50\u4e32\u7684\u54c8\u5e0c\u503c\u4e22\u8fdb\u53bb\n\n\u7136\u540e\u518d\u679a\u4e3e\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5b50\u4e32\uff0c\u5728\u6bcf\u4e2a\u6876\u91cc\u9762\u5bfb\u627e\u6709\u6ca1\u6709\u8fd9\u4e2a\u5b50\u4e32\u7684\u54c8\u5e0c\u503c\n\n\u5982\u679c\u6bcf\u4e2a\u6876\u90fd\u6709\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5b50\u4e32\u5c31\u53ef\u4ee5\n\n\u8fd9\u4e2a\u6876\u53ef\u4ee5\u7528 map \u6216 unordered_map \u6216 set \u6216 multiset \u5b9e\u73b0\uff0c\u6211\u8fd9\u91cc\u7528\u7684\u662f unordered_map\n\n## Code\n```cpp\n#include<bits/stdc++.h>\n#define re register\n#define ll long long\n#define ull unsigned ll\nusing namespace std;\n#define MAXN 10005\nchar s[15][MAXN];\nint T,m,n[15],l,r,ans;\null hs[15][MAXN],mul[MAXN]={1};\nint main(){\n  for(re int i=1;i<MAXN;++i)mul[i]=mul[i-1]*131;\n  scanf(\"%d\",&m),l=1,ans=0,r=MAXN;\n  for(re int i=0;i<m;++i)scanf(\"%s\",s[i]+1),r=min(r,n[i]=strlen(s[i]+1));\n  for(re int i=0;i<m;++i)\n    for(re int j=1;j<=n[i];++j)\n      hs[i][j]=hs[i][j-1]*131+s[i][j];\n  for(re int mid;l<=r;){\n    mid=l+r>>1;\n    bool fl;\n    unordered_map<ull,bool>vis[15];\n    const ull Mul=mul[mid];\n    for(re int k=1;k<m;++k)\n      for(re int i=mid;i<=n[k];++i)\n        vis[k][hs[k][i]-hs[k][i-mid]*Mul]=true;\n    for(re int i=mid;i<=n[0];++i){\n      fl=true;\n      for(re int k=1;k<m;++k)\n        if(!vis[k][hs[0][i]-hs[0][i-mid]*Mul]){\n          fl=false;\n          break;\n        }\n      if(fl)break;\n    }\n    fl?l=(ans=mid)+1:r=mid-1;\n  }\n  printf(\"%d\",ans);\n}\n```",
        "postTime": 1613961036,
        "uid": 150843,
        "name": "\u5510\u4e00\u6587",
        "ccfLevel": 9,
        "title": "\u9898\u89e3P5546 \u3010[POI2000]\u516c\u5171\u4e32\u3011"
    },
    {
        "content": "\u8003\u8651\u957f\u5ea6\u5f88\u5c0f\uff0c\u53ef\u4ee5\u7528\u540e\u7f00\u6570\u7ec4\u6765\u505a\u3002\n\n\u8003\u8651\u628a\u6240\u6709\u4e32\u62fc\u63a5\u5728\u4e00\u8d77\uff0c\u7136\u540e 2 \u4e2a\u4e32\u7684\u4ea4\u63a5\u5904\u7528\u5176\u4ed6\u4e0d\u4e00\u6837\u7684\u7684\u5b57\u7b26\u9694\u5f00\uff0c\u5efa\u5b8c SA \u540e\u518d build_height \u3002\u7136\u540e\u5c31\u9700\u8981\u5728 height \u6570\u7ec4\u4e0a\u627e\u5305\u542b\u6240\u6709\u4e32\u7684\u540e\u7f00\u7684\u4e00\u6bb5\uff0c\u7136\u540e\u7b54\u6848\u5c31\u662f $min_{i\\in(l,r]}h[i]$ \n\n\u627e\u533a\u95f4\u663e\u7136\u53ef\u4ee5\u7528\u53cc\u6307\u9488\u626b\u4e00\u904d\u5feb\u901f\u5f97\u51fa\uff0c\u7136\u540e\u8ba1\u7b97 min \u53ef\u4ee5\u7528\u5355\u8c03\u961f\u5217\u6765\u4f18\u5316\u590d\u6742\u5ea6\uff0c\u628a\u4e24\u8005\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u53cc\u6307\u9488\u53d8\u5316\u7684\u65f6\u5019\u987a\u4fbf\u66f4\u65b0\u5355\u8c03\u961f\u5217\u7684\u7b54\u6848\uff0c\u5c31\u53ef\u4ee5\u8fc7\u8fd9\u9053\u9898\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6 $O(\\sum{|S|log\\sum|S|})$\uff0c\u7531\u4e8e\u7b14\u8005\u4e0d\u4f1a SA-IS \uff0c\u7406\u8bba\u590d\u6742\u5ea6\u53ef\u4ee5\u8fbe\u5230 $O(\\sum|S|)$ \u7684\u3002\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int maxn = 2e4 + 12;\nchar s[1010101];\nint read()\n{\n    int s = 0, f = 1;\n    char ch = getchar();\n    while (ch < '0' || ch > '9')\n    {\n        if (ch == '-')\n            f = -1;\n        ch = getchar();\n    }\n    while (ch >= '0' && ch <= '9')\n    {\n        s = s * 10 + ch - '0';\n        ch = getchar();\n    }\n    return s * f;\n}\nint T, nw, head, tail, q[maxn * 100], l = 1, n, m, ans = 0, L[10], R[10], b[maxn], sa[maxn], x[maxn], y[maxn], h[maxn], rk[maxn], col[maxn], cnt[maxn];\nvoid build_SA()\n{\n    int num;\n    for (register int i = 1; i <= n; ++i)\n        b[x[i] = s[i]]++;\n    for (register int i = 1; i <= m; ++i)\n        b[i] += b[i - 1];\n    for (register int i = n; i >= 1; --i)\n        sa[b[x[i]]--] = i;\n    for (register int k = 1; k <= n; k <<= 1)\n    {\n        num = 0;\n        for (register int i = n; i > n - k; --i)\n            y[++num] = i;\n        for (register int i = 1; i <= n; ++i)\n            if (sa[i] > k)\n                y[++num] = sa[i] - k;\n\n        for (register int i = 0; i <= m; ++i)\n            b[i] = 0;\n        for (register int i = 1; i <= n; ++i)\n            b[x[y[i]]]++;\n        for (register int i = 0; i <= m; ++i)\n            b[i] += b[i - 1];\n        for (register int i = n; i >= 1; --i)\n            sa[b[x[y[i]]]--] = y[i];\n\n        for (register int i = 1; i <= n; ++i)\n            y[i] = 0;\n        for (register int i = 1; i <= n; ++i)\n            swap(x[i], y[i]);\n        num = 1;\n        x[sa[1]] = 1;\n        for (register int i = 2; i <= n; ++i)\n            x[sa[i]] = (y[sa[i]] != y[sa[i - 1]] || y[sa[i] + k] != y[sa[i - 1] + k]) ? ++num : num;\n        if (num == n)\n            return;\n        m = num;\n    }\n}\nvoid build_height()\n{\n    int k = 0;\n    for (register int i = 1; i <= n; ++i)\n        rk[sa[i]] = i;\n    for (register int i = 1; i <= n; ++i)\n    {\n        if (rk[i] == 1)\n            continue;\n        if (k)\n            --k;\n        int j = sa[rk[i] - 1];\n        while (j + k <= n && i + k <= n && s[i + k] == s[j + k])\n            ++k;\n        h[rk[i]] = k;\n    }\n}\nvoid build_color()\n{\n    for (int i = 1; i <= T; ++i)\n    {\n        for (int j = L[i]; j <= R[i]; ++j)\n        {\n            col[rk[j]] = i;\n        }\n    }\n}\nvoid add(int x)\n{\n    if (col[x] == 0)\n        return;\n    ++cnt[col[x]];\n    if (cnt[col[x]] == 1)\n        ++nw;\n}\nvoid del(int x)\n{\n    if (col[x] == 0)\n        return;\n    --cnt[col[x]];\n    if (cnt[col[x]] == 0)\n        --nw;\n}\nint main()\n{\n    T = read();\n    n = 0;\n    for (register int i = 1; i <= T; ++i)\n    {\n        L[i] = n + 1;\n        scanf(\"%s\", s + n + 1);\n        n += strlen(s + n + 1);\n        R[i] = n;\n        s[++n] = i + '0';\n    }\n    m = 128;\n    build_SA(), build_height(), build_color();\n    add(1);\n    for (register int i = 2; i <= n; ++i)\n    {\n        while (head < tail && h[q[tail]] >= h[i])\n            --tail;\n        q[++tail] = i;\n        add(i);\n        if (nw == T)\n        {\n            while (nw == T && l < i)\n            {\n                del(l++);\n            }\n            add(--l);\n        }\n        while (head < tail && q[head] <= l)\n        {\n            ++head;\n        }\n        if (nw == T)\n        {\n            ans = max(ans, h[q[head]]);\n        }\n    }\n    cout << ans;\n}\n```\n",
        "postTime": 1608529214,
        "uid": 150190,
        "name": "Antarctican",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P5546 \u3010[POI2000]\u516c\u5171\u4e32\u3011"
    },
    {
        "content": "\u505a\u5b8c $CF$ \u7684 $EDU$ \u6765\u6d1b\u8c37\u627e\u9053\u9898\u76ee\u6765\u83b7\u53d6\u53cc\u500d\u7ecf\u9a8c,\u4e8e\u662f\u5c31\u627e\u5230\u4e86\u8fd9\u9898.\n\n[CF\u7684\u90a3\u9053](https://codeforces.com/edu/course/2/lesson/2/5/practice/contest/269656/problem/B)\n\n\u5148\u6765\u8003\u8651\u8fd9\u9053 $CF$ \u9898,\u663e\u7136\u5c31\u662f\u5148\u628a $2$ \u4e2a\u4e32\u5408\u5e76,\u518d\u7528\u540e\u7f00\u6570\u7ec4\u7b97\u51fa $height$ \u6570\u7ec4,\u7136\u540e\u679a\u4e3e\u4e0d\u540c\u539f\u4e32\u4e14\u6700\u5927\u7684 $height$ \u5373\u53ef.\n\n\u4e0b\u9762\u662f\u6211 $CF$ \u7684\u4ee3\u7801:\n\n```cpp\n//This Code was made by Chinese_zjc_.\n//\u5934\u6587\u4ef6\u5df2\u7701\u7565\n#define int long long\n#define double long double\nusing namespace std;\nconst double PI = acos(-1);\nconst double eps = 0.0000000001;\nconst int INF = 0x3fffffffffffffff;\nstring s, t, h;\nint n, m = 128, sum[200005], rk[200005], sa[200005], tmp[200005], cnt, height[200005], H, ans;\nsigned main()\n{\n    ios::sync_with_stdio(false);\n    cin >> s >> t;\n    h = '#' + s + '#' + t;\n    n = h.length() - 1;\n    for (int i = 1; i <= n; ++i)\n    {\n        ++sum[rk[i] = h[i]];\n    }\n    for (int i = 1; i <= m; ++i)\n    {\n        sum[i] += sum[i - 1];\n    }\n    for (int i = 1; i <= n; ++i)\n    {\n        sa[sum[rk[i]]--] = i;\n    }\n    for (int k = 1; k <= n; k <<= 1)\n    {\n        cnt = 0;\n        for (int i = n - k + 1; i <= n; ++i)\n        {\n            tmp[++cnt] = i;\n        }\n        for (int i = 1; i <= n; ++i)\n        {\n            if (sa[i] > k)\n            {\n                tmp[++cnt] = sa[i] - k;\n            }\n        }\n        for (int i = 1; i <= m; ++i)\n        {\n            sum[i] = 0;\n        }\n        for (int i = 1; i <= n; ++i)\n        {\n            ++sum[rk[i]];\n        }\n        for (int i = 1; i <= m; ++i)\n        {\n            sum[i] += sum[i - 1];\n        }\n        for (int i = n; i; --i)\n        {\n            sa[sum[rk[tmp[i]]]--] = tmp[i];\n        }\n        swap(tmp, rk);\n        m = 1;\n        rk[sa[1]] = 1;\n        for (int i = 2; i <= n; ++i)\n        {\n            rk[sa[i]] = (tmp[sa[i]] == tmp[sa[i - 1]] && tmp[sa[i] + k] == tmp[sa[i - 1] + k]) ? m : ++m;\n        }\n        if (n == m)\n        {\n            break;\n        }\n    }\n    for (int i = 1; i <= n; ++i)\n    {\n        if (rk[i] == 1)\n        {\n            continue;\n        }\n        if (H)\n        {\n            --H;\n        }\n        int lst = sa[rk[i] - 1];\n        while (lst + H <= n && i + H <= n && h[lst + H] == h[i + H])\n        {\n            ++H;\n        }\n        height[rk[i]] = H;\n    }\n    for (int i = 1; i <= n; ++i)\n    {\n        if (((sa[i] <= s.length() && sa[i - 1] > s.length()) || (sa[i] > s.length() && sa[i - 1] <= s.length())) && height[i] > height[ans])\n        {\n            ans = i;\n        }\n    }\n    cout << h.substr(sa[ans], height[ans]) << endl;\n    return 0;\n}\n```\n\n\u5f53\u7136\u8fd9\u53ea\u662f\u53ea\u6709\u4e24\u4e2a\u4e32\u7684\u60c5\u51b5,\u5982\u679c\u4e32\u7684\u91cf\u53d8\u591a\u4e86\u5462?\n\n\u6211\u4eec\u4f7f\u7528\u540c\u6837\u7684\u601d\u8def,\u4e5f\u662f\u628a\u6240\u6709\u5b57\u7b26\u4e32\u5408\u5e76\u5230\u4e00\u8d77,\u7136\u540e\u628a\u540e\u7f00\u6570\u7ec4\u5904\u7406\u51fa\u6765.\n\n\u6bd4\u5982\u6837\u4f8b:\n\n```plain\n3\nabcb\nbca\nacbc\n```\n\n\u5408\u5e76\u4e4b\u540e\u5c31\u662f`abcb#bca#acbc`.\n\n\u7136\u540e\u5904\u7406\u51fa\u540e\u7f00\u6570\u7ec4:\n\n| height | \u5f52\u5c5e\u7684\u539f\u4e32 | \u540e\u7f00            |\n| ------ | ---------- | --------------- |\n| 0      | 3          | `#acbc`         |\n| 1      | 2          | `#bca#acbc`     |\n| 0      | 2          | `a#acbc`        |\n| 1      | 1          | `abcb#bca#acbc` |\n| 1      | 3          | `acbc`          |\n| 0      | 1          | `b#bca#acbc`    |\n| 1      | **3**      | `bc`            |\n| **2**  | **2**      | `bca#acbc`      |\n| **2**  | **1**      | `bcb#bca#acbc`  |\n| 0      | 3          | `c`             |\n| 1      | 2          | `ca#acbc`       |\n| 1      | 1          | `cb#bca#acbc`   |\n| 2      | 3          | `cbc`           |\n\n\u5230\u8fd9\u91cc\u6211\u4eec\u5df2\u7ecf\u5f88\u660e\u663e\u4e86.\n\n\u6211\u4eec\u53ea\u8981\u679a\u4e3e\u4e00\u4e2a\u540e\u7f00 $i$ ,\u7136\u540e\u5bfb\u627e\u4e00\u4e2a\u6700\u5c0f\u7684\u533a\u95f4 $[l,i]$ \u4f7f\u6bcf\u4e2a\u539f\u4e32\u90fd\u6709\u81f3\u5c11\u4e00\u4e2a\u5f52\u5c5e\u5176\u7684\u540e\u7f00.\n\n\u800c\u8fd9\u4e2a\u4efb\u52a1\u5c31\u53ef\u4ee5\u7528\u4e8c\u5206 $+$ \u524d\u7f00\u548c\u5b8c\u6210.\n\n\u7136\u540e\u5bf9\u4e8e\u533a\u95f4 $[l,i]$ ,\u6211\u4eec\u4f7f\u7528 $ST$ \u8868\u66b4\u529b\u67e5\u8be2\u6700\u5c0f\u503c\u5c31\u53ef\u4ee5\u6c42\u51fa\u8be5\u533a\u95f4\u7684\u6240\u6709\u540e\u7f00\u7684 $lcp$ \u4e86.\n\n$Code$:\n\n```cpp\n//This Code was made by Chinese_zjc_.\n//\u5934\u6587\u4ef6\u5df2\u7701\u7565\n#define int long long\n#define double long double\nusing namespace std;\nconst double PI = acos(-1);\nconst double eps = 0.0000000001;\nconst int INF = 0x3fffffffffffffff;\nstring t, s[10];\nint N, m = 128, n, cnt, sa[10010], tmp[10010], sum[10][10010], c[10010], rk[10010], ST[16][10010], h, height[10010];\nint lensum[10], lg[10010], ans;\nint lowbit(int now)\n{\n    return now & -now;\n}\nint query(int l, int r)//\u67e5\u8be2[l,r]\u533a\u95f4\u7684\u6700\u5c0f\u503c\n{\n    return min(ST[lg[r - l + 1]][l], ST[lg[r - l + 1]][r - (1 << lg[r - l + 1]) + 1]);\n}\nbool check(int l, int r)\n{\n    for (int i = 1; i <= N; ++i)\n    {\n        if (sum[i][r] - sum[i][l - 1] == 0)\n        {\n            return false;\n        }\n    }\n    return true;\n}\nsigned main()\n{\n    ios::sync_with_stdio(false);\n    cin >> N;\n    for (int i = 1; i <= N; ++i)\n    {\n        cin >> s[i];\n        s[i] = '#' + s[i];\n        lensum[i] = lensum[i - 1] + s[i].length();\n        t += s[i];\n    }\n    if (N == 1)//N=1\u8981\u7279\u5224\n    {\n        cout << s[1].length() - 1 << endl;\n        return 0;\n    }\n    n = t.length() - 1;\n    //\u4e2d\u95f4\u8c8c\u4f3c\u5c11\u4e86\u4ec0\u4e48,\u597d\u50cf\u4e0a\u9762\u51fa\u73b0\u8fc7\u4e86?\n    for (int i = 1; i <= n; ++i)\n    {\n        for (int j = 1; j <= N; ++j)\n        {\n            if (sa[i] < lensum[j])\n            {\n                ++sum[j][i];\n                break;\n            }\n        }\n    }\n    for (int i = 1; i <= n; ++i)\n    {\n        for (int j = 1; j <= N; ++j)\n        {\n            sum[j][i] += sum[j][i - 1];\n        }\n    }\n    for (int i = 1; i <= n; ++i)\n    {\n        ST[0][i] = height[i];\n    }\n    for (int i = 1; 1 << i <= n; ++i)\n    {\n        for (int j = 1; j + (1 << i) - 1 <= n; ++j)\n        {\n            ST[i][j] = min(ST[i - 1][j], ST[i - 1][j + (1 << i >> 1)]);\n        }\n    }\n    for (int i = 2; i <= n; ++i)\n    {\n        lg[i] = lg[i - 1] + (lowbit(i) == i);\n    }\n    for (int i = 1; i <= n; ++i)\n    {\n        int l = 1, r = i - 1;\n        while (l < r)\n        {\n            int mid = (l + r + 1) >> 1;\n            if (check(mid, i))\n            {\n                l = mid;\n            }\n            else\n            {\n                r = mid - 1;\n            }\n        }\n        if (check(l, i))\n        {\n            ans = max(ans, query(l + 1, i));\n        }\n    }\n    cout << ans << endl;\n    return 0;\n}\n```\n\n",
        "postTime": 1601362643,
        "uid": 118239,
        "name": "Chinese_zjc_",
        "ccfLevel": 0,
        "title": "P5546 \u9898\u89e3"
    },
    {
        "content": "[\u9898\u76ee](https://www.luogu.com.cn/problem/P5546)\n\n\u8bf4\u4e00\u4e0b\u540e\u7f00\u6570\u7ec4\u7684\u505a\u6cd5\u3002\n\n\u9898\u5916\u8bdd\uff1a\u5bf9\u4e8e\u8fd9\u4e9b\u591a\u4e2a\u5b57\u7b26\u4e32\u7684\uff0c\u4e00\u822c\u628a\u5b83\u4eec\u62fc\u8d77\u6765\uff0c\u7136\u540e\u6c42$height$\u6570\u7ec4\uff0c\u518d\u4e71\u641e\u3002\u611f\u89c9\u6709$height$\u6570\u7ec4\u771f\u7684\u53ef\u4ee5\u4e3a\u6240\u6b32\u4e3a\uff01\uff01\uff01\n\n\u770b\u5230$n\\leq 5$\uff0c\u957f\u5ea6\u5c0f\u4e8e\u7b49\u4e8e$2000$\uff0c\u611f\u89c9\u53ef\u4ee5\u4e71\u505a\u3002\n\n\u4ece\u66b4\u529b\u51fa\u53d1\uff0c\u65e2\u7136\u5b83\u8981\u6c42\u516c\u5171\u5b50\u4e32\uff0c\u90a3\u4e0d\u59a8\u76f4\u63a5\u679a\u4e3e\u8fd9\u4e2a\u516c\u5171\u5b50\u4e32\u3002\u6211\u4eec\u5728\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e0a\u679a\u4e3e\u4e00\u4e2a\u5b50\u4e32\uff0c\u7136\u540e\u62ff\u8fd9\u4e2a\u5b50\u4e32\u53bb\u548c\u540e\u9762$4$\u4e2a\u5b50\u4e32\u8fdb\u884c\u5339\u914d\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(n\\,len^4)$\u3002\n\n\u600e\u4e48\u4f18\u5316\u5462\uff1f\u5f88\u7b80\u5355\u3002\u5728\u540e\u9762$4$\u4e2a\u5b57\u7b26\u4e32\u679a\u4e3e\u5f00\u5934\uff0c\u7136\u540e$O(len)$\u5339\u914d\u53ef\u4ee5\u7528\u540e\u7f00\u6570\u7ec4\u4f18\u5316\u6389\u3002\u7136\u540e\u524d\u9762\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u679a\u4e3e\u5b50\u4e32\uff0c\u6539\u4e3a\u679a\u4e3e\u5f00\u5934\u548c\u957f\u5ea6\uff0c\u957f\u5ea6\u660e\u663e\u53ef\u4ee5\u4e8c\u5206\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u964d\u4e3a$O(n\\,len^2\\log_2len)$~~\u771f\u66b4\u529b~~\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <string>\nusing namespace std;\nconst int N=1e4+10,M=30;\nint len,size=26;\nstring v[6],s;\nint sum[6],SA[N],rk[N],tmp[N],cnt[M],height[N],f[N][21],log2[N],pow[20];\ninline void binsort()\n{\n\tfor(register int i=0;i<=size;i++) cnt[i]=0;\n\tfor(register int i=1;i<=len;i++) cnt[rk[i]]++;\n\tfor(register int i=1;i<=size;i++) cnt[i]+=cnt[i-1];\n\tfor(register int i=len;i>=1;i--) SA[cnt[rk[tmp[i]]]--]=tmp[i];\n}\ninline void get_SA()\n{\n\tfor(register int i=1;i<=len;i++)\n\t\trk[i]=s[i]-'a'+1,tmp[i]=i;\n\tbinsort();\n\tfor(register int l=1;l<=len;l<<=1)\n\t{\n\t\tint p=0;\n\t\tfor(register int i=len-l+1;i<=len;i++)\n\t\t\ttmp[++p]=i;\n\t\tfor(register int i=1;i<=len;i++)\n\t\t\tif(SA[i]>l) tmp[++p]=SA[i]-l;\n\t\tbinsort(),swap(rk,tmp);\n\t\trk[SA[1]]=p=1;\n\t\tfor(register int i=2;i<=len;i++)\n\t\t\trk[SA[i]]=(tmp[SA[i]]==tmp[SA[i-1]]&&tmp[SA[i]+l]==tmp[SA[i-1]+l])?p:++p;\n\t\tif(p==len) break; size=p;\n\t}\n}\ninline void get_height()\n{\n\tint pre=1;\n\tfor(register int i=1;i<=len;i++)\n\t{\n\t\tif(pre) pre--;\n\t\twhile(s[i+pre]==s[SA[rk[i]-1]+pre]) pre++;\n\t\theight[rk[i]]=pre;\n\t}\n\tfor(register int i=1;i<=len;i++)\n\t\tf[i][0]=height[i];\n\tfor(register int l=1;l<=log2[len];l++)\n\t\tfor(register int i=1;i<=len-pow[l]+1;i++)\n\t\t\tf[i][l]=min(f[i][l-1],f[i+pow[l-1]][l-1]);\n}\ninline int query(int l,int r)\n{\n\tint k=log2[r-l+1];\n\treturn min(f[l][k],f[r-pow[k]+1][k]);\n}\nint main()\n{\n\tlog2[1]=0,pow[0]=1;\n\tfor(int i=2;i<=10000;i++)\n\t\tlog2[i]=log2[i>>1]+1;\n\tfor(int i=1;i<=18;i++)\n\t\tpow[i]=pow[i-1]<<1;\n\tint n,minn=2010;\n\tscanf(\"%d\",&n);\n\ts+='0';\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>v[i];\n\t\tint tmp=v[i].length();\n\t\ts+=v[i],sum[i]=sum[i-1]+tmp;\n\t\tminn=min(minn,tmp);\n\t}\n\tlen=sum[n],get_SA(),get_height();\n\tint low=0,high=minn+1;\n\twhile(low+1<high)\n\t{\n\t\tint mid=(low+high)/2;\n\t\tbool flag1=false;\n\t\tfor(int i=1;i<=sum[1]-mid+1;i++)\n\t\t{\n\t\t\tbool flag2=true;\n\t\t\tfor(int p=2;p<=n;p++)\n\t\t\t{\n\t\t\t\tbool flag3=false;\n\t\t\t\tfor(int j=sum[p-1]+1;j<=sum[p]-mid+1;j++)\n\t\t\t\t{\n\t\t\t\t\tint a=rk[i],b=rk[j],lcp;\n\t\t\t\t\tif(a>b) swap(a,b);\n\t\t\t\t\tlcp=query(a+1,b);\n\t\t\t\t\tif(lcp>=mid){ flag3=true; break; }\n\t\t\t\t}\n\t\t\t\tif(flag3==false){ flag2=false; break; }\n\t\t\t}\n\t\t\tif(flag2==true){ flag1=true; break; }\n\t\t}\n\t\tif(flag1) low=mid;\n\t\telse high=mid;\n\t}\n\tprintf(\"%d\\n\",low);\n\treturn 0;\n}\n```\n\n\n$upd:$\u6559\u7ec3\u8ba9\u6211\u4eec\u505a$SAM$\u7684\u65f6\u5019\uff0c\u4e5f\u51fa\u4e86\u8fd9\u9053\u9898\uff0c\u4f46\u6570\u636e\u6709\u52a0\u5f3a\uff0c\u8003\u8651\u7ee7\u7eed\u4f18\u5316\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u4e0a\u9762\u90a3\u4e2a\u8ba1\u7b97\u8fc7\u7a0b\u5e76\u6ca1\u6709\u5f88\u597d\u5730\u5229\u7528$height$\u6570\u7ec4\u7684\u6027\u8d28\uff0c\u6211\u4eec\u53ea\u662f\u901a\u8fc7\u5b83\u6765\u8ba1\u7b97\u4e24\u4e2a\u540e\u7f00\u7684\u516c\u5171\u524d\u7f00\u3002\u8003\u8651\u4ece$height[i]=LCP(SA[i-1],SA[i])$\u4e0b\u624b\n\n\u9996\u5148\u8003\u8651\u53ea\u6709\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u60c5\u51b5\n\n\u53ea\u7528\u628a\u5b57\u7b26\u4e32$B$\u62fc\u5230\u5b57\u7b26\u4e32$A$\u7684\u540e\u9762\u3002\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e00\u4e2a$height[i]$\u5224\u65ad\u5b83\u662f\u5426\u6765\u81ea\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u662f\u7684\u8bdd\u5c31\u66f4\u65b0\u7b54\u6848\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u53ea\u7528\u8003\u8651\u957f\u5f97\u6700\u50cf\u7684\u4e24\u4e2a\u540e\u7f00\u3002\n\n\u73b0\u5728\u6269\u5c55\u5230$n$\u4e2a\u5b57\u7b26\u4e32\uff0c\u6211\u4e00\u5f00\u59cb\u7684\u60f3\u6cd5\u662f\u53d6\u76f8\u90bb\u7684$n$\u4e2a\u540e\u7f00\u3002\u5f88\u660e\u663e\u8fd9\u4e2a\u60f3\u6cd5\u662f\u9519\u7684\uff0c\u4f46\u56e0\u4e3a\u6570\u636e\u8fc7\u6c34\uff0c\u53ef\u4ee5\u6c34\u5230$94$\uff08\u9519\u7b2c\u4e00\u4e2a\u70b9\uff09\u3002\u56e0\u4e3a\u8fd9\u6837\u5b50\u4e0d\u80fd\u53d6\u5230\u6240\u6709\u7684\u60c5\u51b5\u3002\n\n\u4f46\u8fd9\u4e5f\u542f\u793a\u6211\u4eec\uff0c\u8981\u9009\u7684\u540e\u7f00\u5e94\u8be5\u5c3d\u91cf\u9760\u5728\u4e00\u8d77\n\n\u6b63\u786e\u7684\u505a\u6cd5\u5e94\u8be5\u662f\uff1a\u9996\u5148\u4e8c\u5206\u4e00\u4e2a\u516c\u5171\u957f\u5ea6$mid$\uff0c\u7136\u540e\u679a\u4e3e\u4e00\u4e2a\u540e\u7f00\u5f00\u5934$i$\u6ee1\u8db3$height[i+1]\\geq mid$\uff0c\u7136\u540e\u53e6\u5916\u4e00\u4e2a\u6307\u9488$j$\u4ece$i$\u5f80\u540e\u8d70\uff0c\u76f4\u5230$height[j+1]<mid$\u3002\u5bf9\u4e8e$i-j$\u7684\u540e\u7f00\u5224\u65ad\u662f\u5426\u6765\u81ea\u4e0d\u540c\u7684\u5b57\u7b26\u4e32\u3002\u5982\u679c\u53ef\u4ee5\u5c31\u80fd\u7f29\u51cf\u4e8c\u5206\u8303\u56f4\uff0c\u5982\u679c\u4e0d\u6ee1\u8db3\u5c31\u8ba9$i=j+1$\n\n\u8fd9\u6837\u6bcf\u6b21\u68c0\u9a8c\u7684\u590d\u6742\u5ea6\u4e3a$O(n\\,len)$\uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(n\\,len\\,\\log_2len)$\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <string>\nusing namespace std;\nconst int N=110010;\nint len,size=40;\nchar v[N];\nint s[N],SA[N],rk[N],tmp[N],cnt[N],height[N],log2[N],pow[23],col[N],vis[15];\ninline void binsort()\n{\n    for(int i=0;i<=size;i++) cnt[i]=0;\n    for(int i=1;i<=len;i++) cnt[rk[i]]++;\n    for(int i=1;i<=size;i++) cnt[i]+=cnt[i-1];\n    for(int i=len;i>=1;i--) SA[cnt[rk[tmp[i]]]--]=tmp[i];\n}\ninline void get_SA()\n{\n    for(int i=1;i<=len;i++)\n        rk[i]=s[i],tmp[i]=i;\n    binsort();\n    for(int l=1;l<=len;l<<=1)\n    {\n        int p=0;\n        for(int i=len-l+1;i<=len;i++)\n            tmp[++p]=i;\n        for(int i=1;i<=len;i++)\n            if(SA[i]>l) tmp[++p]=SA[i]-l;\n        binsort(),swap(rk,tmp);\n        rk[SA[1]]=p=1;\n        for(int i=2;i<=len;i++)\n            rk[SA[i]]=(tmp[SA[i]]==tmp[SA[i-1]]&&tmp[SA[i]+l]==tmp[SA[i-1]+l])?p:++p;\n        if(p==len) break; size=p;\n    }\n}\ninline void get_height()\n{\n    int pre=1;\n    for(int i=1;i<=len;i++)\n    {\n        if(pre) pre--;\n        while(s[i+pre]==s[SA[rk[i]-1]+pre]) pre++;\n        height[rk[i]]=pre;\n    }\n}\nint main()\n{\n    int ans=0;\n    char add='z'+1; \n    log2[1]=0,pow[0]=1;\n    for(int i=2;i<=110000;i++)\n        log2[i]=log2[i>>1]+1;\n    for(int i=1;i<=20;i++)\n        pow[i]=pow[i-1]<<1;\n    int n,minn=10020;\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%s\",v+1);\n        int tmp=strlen(v+1);\n        minn=min(minn,tmp);\n        for(int j=len+1;j<=len+tmp;j++)\n            s[j]=v[j-len]-'a'+1,col[j]=i;\n        len+=tmp;\n    }\n    get_SA(),get_height();\n    int low=0,high=minn+1;\n    while(low+1<high)\n    {\n        int mid=(low+high)/2,p=1;\n        bool flag1=false;\n        while(p<=len)\n        {\n            while(p<len&&height[p+1]<mid) p++;\n            int q=p+1;\n            while(q<len&&height[q+1]>=mid) q++;\n            for(int i=1;i<=n;i++)\n                vis[i]=0;\n            for(int i=p;i<=q;i++)\n                vis[col[SA[i]]]=1;\n            bool flag2=true;\n            for(int i=1;i<=n;i++)\n                if(!vis[i]){ flag2=false; break; }\n            if(flag2){ flag1=true; break; }\n            else p=q+1;\n        }\n        if(flag1) low=mid;\n        else high=mid;\n    }\n    printf(\"%d\\n\",low);\n    return 0;\n}\n\n```\n\n\n",
        "postTime": 1587469247,
        "uid": 81238,
        "name": "MCAdam",
        "ccfLevel": 7,
        "title": "P5546 [POI2000]\u516c\u5171\u4e32"
    }
]