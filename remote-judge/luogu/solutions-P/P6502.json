[
    {
        "content": "\u8fd9\u9053\u9898\u53ef\u4ee5\u7528\u54c8\u5e0c\u6765\u505a\uff0c\u56e0\u4e3a n \u548c m \u7684\u8303\u56f4\u6bd4\u8f83\u5927\uff0c\u8fd8\u9700\u8981\u4e8c\u5206\u548c\u524d\u7f00\u548c\u5bfb\u627e\u7b54\u6848\u3002\n\n\u4f46\u662f\u8f93\u5165\u662f\u662f\u884c\u5728\u524d\uff0c\u6c42\u54c8\u5e0c\u662f\u8981\u5217\u5728\u524d\uff0c\u9700\u8981\u8f6c\u6362\u3002\n\n\u6c42\u54c8\u5e0c\u9700\u8981\u7528\u5230 Ascii \u7801\uff0c\u4f46\u662f Ascii \u4e2d\u6709\u5f88\u591a\u6d6a\u8d39\u7684\u5143\u7d20\uff0c\u6240\u4ee5\u5c06 Ascii \u7684 256 \u4e3a\u6539\u6210 131 \u4f4d\u662f\u5bb9\u9519\u7387\u6700\u5c0f\u7684\u3002\n\n\u6240\u4ee5\u54c8\u5e0c\u6570\u7ec4\u7684\u8f6c\u6362\u516c\u5f0f\u4e3a\uff1a\n\n$has_{i,j}$ = $has_{i,j-1}$ \u00d7 131+ $c_{i,j}$\n\n\u4e0e\u5927\u5bb6\u4e0d\u540c\u7684\u662f\uff0c\u6211\u7528\u7684\u662f\u5355\u54c8\u5e0c\uff0c\u522b\u4eba\u662f\u53cc\u54c8\u5e0c\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nchar c[5005][5005];//\u539f\u65b9\u9635\nint n,m;\nunsigned long long has[5005][5005],data[5005];//\u9632\u6b62\u7206\u5185\u5b58\nbool check(int mid)\n{\n    for(int i=1;i<=m;i++){data[i]=has[i][n-mid];}//\u628a\u54c8\u5e0c\u8f6c\u6362\u5230\u6bcf\u4e00\u5217\n    sort(data+1,data+m+1);//\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n    for(int i=2;i<=m;i++)\n    {\n        if(data[i]==data[i-1]){return 0;}//\u6392\u5e8f\u540e\u5982\u679c\u76f8\u90bb\u4e24\u4e2a\u76f8\u540c\uff0c\u5c31\u4e0d\u662f\u6b63\u786e\u7b54\u6848\n    }\n    return 1;\n}\nint main()\n{\n    cin>>n>>m;\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=m;j++){cin>>c[i][j];}\n    }\n    for(int j=1;j<=m;j++)//\u56e0\u4e3a\u662f\u5224\u65ad\u5217\uff0c\u6240\u4ee5\u628a\u5217\u653e\u5728\u524d\u9762\n    {\n        for(int i=n;i>0;i--)\n        {\n            has[j][n-i+1]=has[j][n-i]*131+c[i][j];//\u54c8\u5e0c\u8f6c\u6362\n        }\n    }\n    int l=0,r=n-1;\n    while(l<r)//\u4e8c\u5206\n    {\n        int mid=(l+r+1)/2;//\u5982\u679c\u662f(l+r)/2\u4f1a\u6b7b\u5faa\u73af\n        if(check(mid)){l=mid;}//\u5224\u65adcheck\n        else{r=mid-1;}\n    }\n    cout<<l<<endl;\n    return 0;\n}\n\n```",
        "postTime": 1639232986,
        "uid": 360273,
        "name": "cfkk",
        "ccfLevel": 3,
        "title": "p6502\u9898\u89e3"
    },
    {
        "content": "# P6502 [COCI2010-2011#3] ZNANSTVENIK \u9898\u89e3\n## \u9898\u76ee\u63cf\u8ff0\n\u7ed9\u5b9a\u4e00\u4e2a $r \\times c$ \u7684\u5b57\u6bcd\u77e9\u9635\u3002\u4f60\u9700\u8981\u4ece\u8fd9\u4e2a\u77e9\u9635\u7684\u7b2c\u4e00\u884c\u5f00\u59cb\uff0c\u5220\u9664\u5c3d\u91cf\u591a\u7684\u884c\uff0c \u4e14\u4fdd\u8bc1\u77e9\u9635\u4efb\u610f\u4e24\u5217\u90fd\u4e0d\u76f8\u7b49\u3002\u8f93\u51fa\u6700\u591a\u53ef\u4ee5\u5220\u9664\u7684\u884c\u6570\u3002\n\n- \u4e24\u5217\u76f8\u7b49\u5b9a\u4e49\u4e3a\u5728\u8fd9\u4e24\u5217\u4e2d\u540c\u4e00\u884c\u7684\u5b57\u6bcd\u90fd\u76f8\u7b49\u3002\n- \u521d\u59cb\u7684\u77e9\u9635\u4e2d\u4efb\u610f\u4e24\u5217\u90fd\u662f\u4e0d\u76f8\u7b49\u7684\u3002\n\n## \u601d\u8def\n\u6709\u8bb8\u591a\u4eba\u7528\u7684\u662f\u4e8c\u5206\u7b54\u6848\uff0c\u867d\u7136\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u6570\u636e\uff0c\u4f46\u590d\u6742\u5ea6\u4e0d\u5bf9\uff08```strcmp``` \u51fd\u6570\u590d\u6742\u5ea6\u662f $O(n)$\uff0c\u603b\u590d\u6742\u5ea6\u662f $O(n^3 \\log n)$)\u3002\n\n\u8fd9\u91cc\u7ed9\u51fa\u4e00\u79cd\u4e8c\u5206\u7b54\u6848+\u54c8\u5e0c\u7684\u89e3\u6cd5\u3002\u628a\u6bcf\u5217\u7684\u5b57\u7b26\u4e32\u54c8\u5e0c\u6210\u4e00\u4e2a\u6570\u3002\u4e8c\u5206\u5224\u65ad\u65f6\u7528\u7684\u662f\u6392\u5e8f\u540e\u76f8\u90bb\u7684\u662f\u5426\u76f8\u7b49\u3002\u590d\u6742\u5ea6 $O(n^2)$\u3002\u8dd1\u5f97\u98de\u5feb\u3002\u5177\u4f53\u89c1\u4ee3\u7801\u3002\n## \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nunsigned long long has[1005][1005];//\u54c8\u5e0c\u6570\u7ec4\uff0c\u81ea\u7136\u6ea2\u51fa\nchar ch[1005][1005];\nint r,c,data[1005];\ninline bool check(int x)//\u5224\u65ad\u662f\u5426\u53ef\u884c\n{\n    for(int i=1;i<=c;i++)data[i]=has[i][r-x];\n    sort(data+1,data+c+1);//\u6392\u5e8f\n    for(int i=2;i<=c;i++)//\u53ea\u80fd\u662f\u6392\u5e8f\u540e\u76f8\u90bb\u7684\u76f8\u7b49\n    {\n\tif(data[i]==data[i-1])return 0;\n    }\n    return 1;\n}\nint main()\n{\n    cin>>r>>c;\n    for(int i=1;i<=r;i++)\n    {\n        for(int j=1;j<=c;j++)\n        {\n           cin>>ch[i][j];\n        }\n    }\n    for(int j=1;j<=c;j++)\n    {\n        for(int i=r;i>=1;i--)\n        {\n            has[j][r-i+1]=has[j][r-i]*131+ch[i][j]-'a';//\u54c8\u5e0c\n        }\n    }\n    int low=0,high=r-1,mid,ans=0;\n    while(low<high)//\u4e8c\u5206\u7b54\u6848\n    {\n        mid=(low+high+1)/2;\n        if(check(mid))low=mid;\n        else high=mid-1;\n    }\n    cout<<low<<endl;\n    return 0;\n}\n```\n$\\texttt{By whl}$\n\n$\\texttt{2021.12.11}$",
        "postTime": 1639228741,
        "uid": 451328,
        "name": "lnwhl",
        "ccfLevel": 6,
        "title": "\u3010\u9898\u89e3\u3011P6502 [COCI2010-2011#3] ZNANSTVENIK"
    },
    {
        "content": "## \u601d\u8def\n\n\u4e8c\u5206\u7b54\u6848 + \u54c8\u5e0c\u3002\n\n\u4e0d\u96be\u60f3\u5230\u4e8c\u5206\u5220\u53bb\u7684\u884c\u6570\uff0c\u7136\u540e\u5224\u65ad\u5269\u4e0b\u7684\u884c\u4e2d\u662f\u5426\u5b58\u5728\u5b8c\u5168\u76f8\u540c\u7684\u5217\u3002\n\n\u91cd\u70b9\u5728\u5224\u91cd\u8fd9\u90e8\u5206\u3002\u867d\u7136\u53ef\u4ee5 `strcmp` \u66b4\u529b\u8fc7\uff0c\u4f46\u662f\u590d\u6742\u5ea6\u662f\u9519\u7684\u3002\u56e0\u6b64\u4f7f\u7528\u54c8\u5e0c\u5224\u91cd\u3002\u4e3a\u4e86\u65b9\u4fbf\u54c8\u5e0c\uff0c\u5b57\u7b26\u77e9\u9635\u7684\u884c\u5217\u53ef\u4ee5\u8f6c\u6362\uff0c\u884c\u5b58\u50a8\u5217\uff0c\u5217\u5b58\u50a8\u884c\u3002\n\n\u9632\u6b62\u88ab\u5361\uff0c\u6211\u4f7f\u7528\u53cc\u91cd\u54c8\u5e0c\u3002\n\n## \u4ee3\u7801\n\n```cpp\n/*\n\np_b_p_b txdy\nAThousandMoon txdy\nAThousandSuns txdy\nhxy txdy\n\n*/\n\n#include <bits/stdc++.h>\n#define pb push_back\n#define fst first\n#define scd second\n\nusing namespace std;\ntypedef long long ll;\ntypedef pair<ll, ll> pii;\n\nconst int maxn = 1010;\nconst ll base = 131, mod1 = 1000000007, mod2 = 19260817;\n\nint n, m;\nll h1[maxn][maxn], pw1[maxn], h2[maxn][maxn], pw2[maxn];\nchar s[maxn][maxn], ss[maxn];\n\nll hash1(int l, int r, int i) {\n\treturn ((h1[i][r] - h1[i][l - 1] * pw1[r - l + 1]) % mod1 + mod1) % mod1;\n}\n\nll hash2(int l, int r, int i) {\n\treturn ((h2[i][r] - h2[i][l - 1] * pw2[r - l + 1]) % mod2 + mod2) % mod2;\n}\n\nbool check(int x) {\n\tset<ll> st1, st2;\n\tfor (int i = 1; i <= n; ++i) {\n\t\tll tmp1 = hash1(x + 1, m, i), tmp2 = hash2(x + 1, m, i);\n\t\tif (st1.count(tmp1) && st2.count(tmp2)) {\n\t\t\treturn 0;\n\t\t}\n\t\tst1.insert(tmp1);\n\t\tst2.insert(tmp2);\n\t}\n\treturn 1;\n}\n\nvoid solve() {\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i = 1; i <= n; ++i) {\n\t\tscanf(\"%s\", ss + 1);\n\t\tfor (int j = 1; j <= m; ++j) {\n\t\t\ts[j][i] = ss[j];\n\t\t}\n\t}\n\tswap(n, m);\n\tpw1[0] = pw2[0] = 1;\n\tfor (int i = 1; i <= max(n, m); ++i) {\n\t\tpw1[i] = pw1[i - 1] * base % mod1;\n\t\tpw2[i] = pw2[i - 1] * base % mod2;\n\t}\n\tfor (int i = 1; i <= n; ++i) {\n\t\tfor (int j = 1; j <= m; ++j) {\n\t\t\th1[i][j] = (h1[i][j - 1] * base + s[i][j] - 'a') % mod1;\n\t\t\th2[i][j] = (h2[i][j - 1] * base + s[i][j] - 'a') % mod2;\n\t\t}\n\t}\n\tint l = 0, r = m - 1, ans = -1;\n\twhile (l <= r) {\n\t\tint mid = (l + r) >> 1;\n\t\tif (check(mid)) {\n\t\t\tans = mid;\n\t\t\tl = mid + 1;\n\t\t} else {\n\t\t\tr = mid - 1;\n\t\t}\n\t}\n\tprintf(\"%d\", ans);\n}\n\nint main() {\n\tint T = 1;\n\t// scanf(\"%d\", &T);\n\twhile (T--) {\n\t\tsolve();\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1638587724,
        "uid": 275273,
        "name": "zltqwq",
        "ccfLevel": 0,
        "title": "P6502 \u9898\u89e3"
    },
    {
        "content": "# \u9898\u89e3P6502 [COCI2010-2011#3] ZNANSTVENIK\n\n### \u9898\u76ee\u63cf\u8ff0\n\n\u7ed9\u5b9a\u4e00\u4e2a $r \\times c$ \u7684\u5b57\u6bcd\u77e9\u9635\u3002\u4f60\u9700\u8981\u4ece\u8fd9\u4e2a\u77e9\u9635\u7684\u7b2c\u4e00\u884c\u5f00\u59cb\uff0c\u5220\u9664\u5c3d\u91cf\u591a\u7684\u884c\uff0c \u4e14\u4fdd\u8bc1\u77e9\u9635\u4efb\u610f\u4e24\u5217\u90fd\u4e0d\u76f8\u7b49\u3002\u8f93\u51fa\u6700\u591a\u53ef\u4ee5\u5220\u9664\u7684\u884c\u6570\u3002\n\n- \u4e24\u5217\u76f8\u7b49\u5b9a\u4e49\u4e3a\u5728\u8fd9\u4e24\u5217\u4e2d\u540c\u4e00\u884c\u7684\u5b57\u6bcd\u90fd\u76f8\u7b49\u3002\n- \u521d\u59cb\u7684\u77e9\u9635\u4e2d\u4efb\u610f\u4e24\u5217\u90fd\u662f\u4e0d\u76f8\u7b49\u7684\u3002\n\n### \u601d\u8def\n\n\u8fd9\u9898\u6709\u4e24\u79cd\u89e3\u6cd5\uff08\u76ee\u524d\u6765\u770b\uff09\u3002\n\n1. \u4e8c\u5206\u7b54\u6848\uff08\u524d\u9762\u90a3\u4e2a\u9898\u89e3\u5c31\u662f\uff09\uff0c\u4e0d\u96be\u60f3\u5230\uff0c\u4e8c\u5206\u53ef\u4ee5\u5220\u53bb\u7684\u884c\u6570\uff0c\u518d\u66b4\u529b\u6bd4\u8f83\u91cd\u590d\u5b57\u4e32\u3002\n\n   \u8fd9\u91cc\u628a\u6a2a\u7eb5\u5750\u6807\u5bf9\u6362\u4e4b\u540e\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 `strcmp` \u51fd\u6570\u6bd4\u8f83\u3002\n\n   #### $Code$\n\n   ```c++\n   #include <bits/stdc++.h>\n   #define R register\n   #define gc() getchar()\n   using namespace std;\n   \n   int n,m;\n   char s[1010][1010];\n   \n   inline int check(int k){\n   \tfor(R int i=1;i<=m;i++)\n   \t\tfor(R int j=1;j<i;j++)\n   \t\t\tif(strcmp(s[i]+k,s[j]+k)==0)\n   \t\t\t\treturn 0;\n   \treturn 1;\n   }\n   \n   int main(){\n   \tios::sync_with_stdio(false);\n   \tcin>>n>>m;\n   \tfor(R int i=0;i<n;i++)\n   \t\tfor(R int j=1;j<=m;j++)\n   \t\t\tcin>>s[j][i];\n   \tR int le=0,ri=n-1,mid,ans=0;\n   \twhile(le<=ri){\n   \t\tmid=le+ri>>1;\n   \t\tif(check(mid))ans=mid,le=mid+1;\n   \t\telse ri=mid-1;\n   \t}\n   \tcout<<ans<<endl;\n   \treturn 0;\n   }\n   \n   ```\n\n2. \u5f53\u6211\u63d0\u4ea4\u4e86\u4e8c\u5206\u7b54\u6848\u7684\u7a0b\u5e8f\u540e\uff0c\u53d1\u73b0\u5f88\u591a\u4eba\u6bd4\u6211\u5feb\uff0c\u8fd8\u5feb\u4e86\u4e0d\u5c11\u3002\n\n   \u770b\u4e86\u51e0\u4efd\u4ee3\u7801\u540e\uff0c\u624d\u53d1\u73b0\u4ed6\u4eec\u7528\u7684\u662f\u6392\u5e8f\u3002\n\n   \u5c06**\u7eb5\u5217**\u6392\u5e8f\u540e\uff0c\u76f8\u90bb\u4e24\u4e2a\u5b57\u4e32\u7684\u516c\u5171\u5e8f\u5217\u957f\u5ea6\u4e00\u5b9a\u6700\u957f\uff0c\u6240\u4ee5\u8fd9\u4e2a\u65b9\u6cd5\u5feb\u4e00\u4e9b\uff08\u53ea\u8981\u4e00\u6b21\u6392\u5e8f\u5c31\u884c\u4e86\uff09\u3002\n\n   \uff08\u4ee3\u7801\u4e2d\u6709\u6ce8\u91ca\uff09\n\n   #### $Code$\n\n   ```c++\n   #include <bits/stdc++.h>\n   #define R register\n   #define gc() getchar()\n   using namespace std;\n   \n   inline int rd(){\n   \tR int x=0;R char c=gc();//,f=1\n   \twhile(c>'9'||c<'0')c=gc();//{if(c=='-')f=-1;\n   \twhile(c>='0'&&c<='9')x=(x<<1)+(x<<3)+(c^48),c=gc();\n   \treturn x;//*f\n   }\n   \n   int n,m,ans;\n   char s[1010][1010];\n   string f[1010];\t\t\t\t\t\t\t\t\t\t// \u8fd9\u91cc\u7528 string\uff0c\u662f\u4e3a\u4e86\u65b9\u4fbf\u6bd4\u8f83\n   \n   int main(){\n   \tn=rd(),m=rd();\n   \tfor(R int i=1;i<=n;i++)\n   \t\tscanf(\"%s\",s[i]+1);\n   \tfor(R int i=1;i<=m;i++)f[i].resize(n);\t\t\t// \u5982\u679c\u6ca1\u6709\u8fd9\u4e00\u53e5\uff0c\u540e\u9762\u7684\u5b57\u7b26\u4f1a\u628a\u524d\u9762\u7684\u8986\u76d6\u6389 \n   \tfor(R int j=1;j<=m;j++)\n   \t\tfor(R int i=n;i>=1;i--)\n   \t\t\tf[j][n-i]=s[i][j];\t\t\t\t\t\t// \u8fd9\u91cc\u662f\u628a\u539f\u5b57\u6bcd\u77e9\u9635\u7684\u6a2a\u7eb5\u5750\u6807\u8c03\u6362\u8fc7\u6765\uff0c\u53ef\u4ee5\u81ea\u5df1\u8f93\u51fa\u4f53\u4f1a\u4e00\u4e0b \n   \tsort(f+1,f+m+1);\t\t\t\t\t\t\t\t// \u6392\u5e8f\uff0c\u8fd9\u4e5f\u662f\u8fd9\u4e2a\u7b97\u6cd5\u5feb\u7684\u539f\u56e0 \n   \tfor(R int i=1,l;i<m;i++){\n   \t\tl=0;\n   \t\tfor(R int j=0;j<n;j++)\n   \t\t\tif(f[i][j]==f[i+1][j])++l;\t\t\t\t// \u56e0\u4e3a\u6392\u8fc7\u5e8f\uff0c\u6240\u4ee5\u53ea\u8981\u6bd4\u8f83\u76f8\u90bb\u5b57\u7b26\u4e32\u5373\u53ef \n   \t\t\telse break;\n   \t\tans=max(ans,l);\t\t\t\t\t\t\t\t// \u6c42\u6700\u957f\u76f8\u540c\u957f\u5ea6 \n   \t}\n   \tprintf(\"%d\\n\",n-ans-1);\t\t\t\t\t\t\t// \u56e0\u4e3a\u6c42\u7684\u662f\u6700\u591a\u5220\u53bb\u4e0d\u91cd\u590d\u7684\u884c\u6570\uff0c\u6240\u4ee5 n-ans \u4e4b\u540e\u8fd8\u8981 -1 \n   \treturn 0;\n   }\n   \n   ```\n\n   \n\n\n\n***by jsntsys***\n\n$2020.12.23$\n\n",
        "postTime": 1608734013,
        "uid": 373948,
        "name": "sysong",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P6502 \u3010[COCI2010-2011#3] ZNANSTVENIK\u3011"
    },
    {
        "content": "1. \u601d\u8def\u662f\u628a\u6bcf\u4e00\u5217\u5b58\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u7528strcmp\u51fd\u6570with\u4e8c\u5206\u641c\u7d22\u5224\u65ad\u53bb\u6389\u524dx\u4e2a\u540e\u6240\u6709\u7684m\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u90fd\u4e0d\u76f8\u540c\u3002\n2. \u5982\u679c\u6b64x\u4e0b\u6ee1\u8db3\u6761\u4ef6\uff0c\u5c31ans=x\uff0c\u7136\u540e\u7ee7\u7eed\u4e8c\u5206\u627e\u80fd\u5426\u6709\u66f4\u5927\u7684x\u3002\n3. \u5982\u679c\u6b64x\u4e0b\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0c\u5c31\u627e\u66f4\u5c0f\u7684x\u3002\n4. \u6ce8\u610f\u4e8c\u5206\u7684\u521d\u59cb\u6761\u4ef6\uff0c\u6700\u5c0f\u53bb\u63890\u4e2a\uff0c\u6700\u591a\u53bb\u6389n-1\u4e2a\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nchar ch[1005][1005];//\u5b58\u5b57\u7b26\u4e32\nint n,m;\nint check(int x)//check\u51fd\u6570\n{\n    for(int i=1;i<=m;i++)\n    {\n        for(int j=1;j<i;j++)\n        {\n            if(strcmp(ch[i]+x,ch[j]+x)==0)\n                return 0;\n        }\n    }\n    return 1;\n}\nint main()\n{\n    cin >> n >> m;\n    for(int i=0;i<n;i++)//\u5b57\u7b26\u4e32\u7684\u4e0b\u6807\n    {\n        for(int j=1;j<=m;j++)//\u5b57\u7b26\u4e32\u7684\u5e8f\u53f7\n        {\n            scanf(\" %c\",&ch[j][i]);\n        }\n    }\n    for(int j=1;j<=m;j++)//\u5efa\u7acb\u5b57\u7b26\u4e32\u672b\u5c3e\n        ch[j][n]='\\0';\n    int ans=0;\n    int low=0,high=n-1,mid;\n    while(low<=high)//\u4e8c\u5206\u641c\u7d22\n    {\n        mid=(low+high)/2;\n        if(check(mid))\n        {\n            ans=mid;\n            low=mid+1;\n        }\n        else\n            high=mid-1;\n    }\n    cout << ans << endl ;\n    return 0;\n}\n\n```\n",
        "postTime": 1588142392,
        "uid": 309328,
        "name": "KadiaNEFU",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P6502 \u3010[COCI2010-2011#3] ZNANSTVENIK\u3011"
    }
]