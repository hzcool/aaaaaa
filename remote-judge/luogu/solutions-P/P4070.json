[
    {
        "content": "\u8fd9\u9053\u9898\uff0c\u56e0\u4e3a$SAM$\u672c\u6765\u5c31\u662f\u5728\u7ebf\u7b97\u6cd5\uff0c\u6240\u4ee5\u53ef\u4ee5\u6bcf\u6b21\u628a\u4e00\u4e2a\u5b57\u7b26\u6254\u5230$SAM$\u91cc\u9762\uff0c\u6bcf\u6b21\u5c06\u65b0\u589e\u8282\u70b9\u7684\u8d21\u732e\u8ba1\u7b97\u4e00\u4e0b\u3002\n\n\u60f3\u4e00\u60f3\u5c31\u77e5\u9053\uff0c\u6bcf\u6b21\u65b0\u589e\u5b57\u7b26\u7684\u65f6\u5019\uff0c\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e3a$|\\max(p)|-|\\min(p)|+1=|\\max(p)|-|\\max(p->link)|$\uff0c\u800c\u4e14\u65b0\u5efa\u7684$nq$\u8282\u70b9\u662f\u6ca1\u6709\u8d21\u732e\u7684\n\n```cpp\n#include<cstdio>\n#include<map>\n#define Rint register int\nusing namespace std;\ntypedef long long LL;\nconst int N = 200003;\nint n, now;\nLL ans;\nnamespace SAM {\n    map<int, int> ch[N];\n    int last = 1, cnt = 1, l[N], fa[N];\n    inline void ins(int c){\n        int p = last, np = ++ cnt; last = np; l[np] = l[p] + 1;\n        for(;!ch[p][c];p = fa[p]) ch[p][c] = np;\n        if(!p) fa[np] = 1;\n        else {\n            int q = ch[p][c];\n            if(l[q] == l[p] + 1) fa[np] = q;\n            else {\n                int nq = ++ cnt;\n                l[nq] = l[p] + 1; ch[nq] = ch[q];\n                fa[nq] = fa[q]; fa[q] = fa[np] = nq;\n                for(;ch[p][c] == q;p = fa[p]) ch[p][c] = nq;\n            }\n        }\n        ans += l[np] - l[fa[np]];\n    }\n}\nint main(){\n    scanf(\"%d\", &n);\n    for(Rint i = 1;i <= n;i ++){\n        scanf(\"%d\", &now);\n        SAM :: ins(now);\n        printf(\"%lld\\n\", ans);\n    }\n}\n```",
        "postTime": 1546140859,
        "uid": 68148,
        "name": "watermoon",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4070 \u3010[SDOI2016]\u751f\u6210\u9b54\u5492\u3011"
    },
    {
        "content": "\u9898\u76ee\u5730\u5740\uff1a[P4070 [SDOI2016]\u751f\u6210\u9b54\u5492](https://www.luogu.org/problemnew/show/P4070)\n\n\u76f8\u4fe1\u770b\u5230\u9898\u76ee\u4e4b\u540e\u5f88\u591a\u4eba\u8ddf\u6211\u7684\u601d\u8def\u662f\u4e00\u6837\u7684\u2014\u2014\n\n\u80af\u5b9a\u8981\u7528 **SA**\uff08[P3809 \u3010\u6a21\u677f\u3011\u540e\u7f00\u6392\u5e8f](https://www.luogu.org/problemnew/show/P3809)\uff09\n\n\u80af\u5b9a\u8981\u4f1a\u6c42**\u672c\u8d28\u4e0d\u540c\u7684\u5b50\u4e32\u4e2a\u6570**\uff08[P2408 \u4e0d\u540c\u5b50\u4e32\u4e2a\u6570](https://www.luogu.org/problemnew/show/P2408)\uff09\n\n\u7136\u540e\uff1f\u5c31\u4e0d\u4f1a\u4e86......\n\n\u74f6\u9888\u5728\u54ea\u513f\uff1f\n\n\u4f60\u4f1a\u53d1\u73b0\u6bcf\u5f80\u540e\u6dfb\u52a0\u4e00\u4e2a\u5b57\u7b26\uff0c\u6574\u4e2a **sa** \u6570\u7ec4\u53ea\u4f1a\u63d2\u5165\u4e00\u4e2a\u6570\uff0c\u8981\u7ef4\u62a4\u4e0d\u96be\n\n\u4f46\u662f **height** \u4f1a**\u65e0\u89c4\u5f8b\u53d8\u5316**\uff0c\u8fd9\u5c31\u5bfc\u81f4\u65e0\u6cd5\u9ad8\u6548\u7ef4\u62a4\n\n\u600e\u4e48\u529e\u5462\uff1f\n\n# \u5012\u7f6e\u5b57\u7b26\u4e32\n\n\u6211\u4eec\u5c06\u6574\u4e2a\u5b57\u7b26\u4e32\u5012\u7f6e\u8fc7\u6765\n\n\u663e\u7136**\u672c\u8d28\u4e0d\u540c\u7684\u5b50\u4e32\u4e2a\u6570**\u4e0d\u4f1a\u53d8\u5316\n\n\u800c\u6bcf\u5f80\u524d\u6dfb\u52a0\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c **height** \u7684\u53d8\u5316\u662f $O(1)$ \u7684\n\n\u90a3\u4e48\uff0c\u95ee\u9898\u5c31\u53d8\u5f97\u7b80\u5355\u5f88\u591a\u4e86\n\n\u5177\u4f53\u5b9e\u73b0\u8bf7\u770b\u4ee3\u7801\u6ce8\u91ca\n\n```\n#include <bits/stdc++.h>\n#define ll long long\n#define si set<int>::iterator\nusing namespace std;\nconst int N = 1e5 + 6;\nint n, m, a[N], b[N];\nint sa[N], rk[N], tp[N], tx[N], he[N], st[N][20];\nll ans;\nset<int> s;\n\ninline void tsort() {//\u57fa\u6570\u6392\u5e8f \n\tfor (int i = 1; i <= m; i++) tx[i] = 0;\n\tfor (int i = 1; i <= n; i++) ++tx[rk[i]];\n\tfor (int i = 1; i <= m; i++) tx[i] += tx[i-1];\n\tfor (int i = n; i; i--) sa[tx[rk[tp[i]]]--] = tp[i];\n}\n\ninline bool pd(int i, int w) {\n\treturn tp[sa[i-1]] == tp[sa[i]] && tp[sa[i-1]+w] == tp[sa[i]+w];\n}\n\ninline void SA() {//\u540e\u7f00\u6570\u7ec4\u677f\u5b50 \n\tfor (int i = 1; i <= n; i++) {\n\t\trk[i] = a[i] = lower_bound(b + 1, b + m + 1, a[i]) - b;\n\t\ttp[i] = i;\n\t}\n\ttsort();\n\tfor (int w = 1, p = 0; p < n; m = p, w <<= 1) {\n\t\tp = 0;\n\t\tfor (int i = 1; i <= w; i++) tp[++p] = n - w + i;\n\t\tfor (int i = 1; i <= n; i++)\n\t\t\tif (sa[i] > w) tp[++p] = sa[i] - w;\n\t\ttsort();\n\t\tswap(rk, tp);\n\t\trk[sa[1]] = p = 1;\n\t\tfor (int i = 2; i <= n; i++)\n\t\t\trk[sa[i]] = pd(i, w) ? p : ++p;\n\t}\n\tint p = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (p) --p;\n\t\tint j = sa[rk[i]-1];\n\t\twhile (a[i+p] == a[j+p]) ++p;\n\t\the[rk[i]] = p;\n\t}\n}\n\ninline void ST() {//\u6784\u9020ST\u8868 \n\tfor (int i = 1; i <= n; i++) st[i][0] = he[i];\n\tint w = log(n) / log(2);\n\tfor (int k = 1; k <= w; k++)\n\t\tfor (int i = 1; i <= n; i++) {\n\t\t\tif (i + (1 << k) > n + 1) break;\n\t\t\tst[i][k] = min(st[i][k-1], st[i+(1<<(k-1))][k-1]);\n\t\t}\n}\n\ninline int get(int l, int r) {//\u6c42l~r\u4e4b\u95f4\u7684\u6700\u5c0f\u503c\uff08\u5373l-1\u4e0er\u7684lcp\uff09 \n\tint k = log(r - l + 1) / log(2);\n\treturn min(st[l][k], st[r-(1<<k)+1][k]);\n}\n\nint main() {\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t\tscanf(\"%d\", &a[i]);\n\t\tb[i] = a[i];\n\t}\n\t//\u79bb\u6563\u5316\n\tsort(b + 1, b + n + 1);\n\tm = unique(b + 1, b + n + 1) - (b + 1);\n\treverse(a + 1, a + n + 1);//\u5012\u7f6e\u5b57\u7b26\u4e32\n\tSA();//\u6c42sa,rk,height\u6570\u7ec4\n\tST();//ST\u8868\n\tfor (int i = n; i; i--) {//\u5012\u5e8f\u8003\u8651\n\t\ts.insert(rk[i]);//\u4ee5rk\u4e3a\u5173\u952e\u5b57\u63d2\u5165set\n\t\tsi it = s.find(rk[i]);//\u627e\u5230\u63d2\u5165\u7684\u4f4d\u7f6e\n\t\tint k = 0;//\u5b58\u6700\u957flcp\n\t\tif (it != s.begin()) {//\u627e\u524d\u9a71\uff0c\u6ce8\u610f\u7279\u5224\n\t\t\tint p = *(--it);\n\t\t\tk = get(p + 1, rk[i]);\n\t\t\t++it;\n\t\t}\n\t\t++it;\n\t\tif (it != s.end()) {//\u627e\u540e\u7ee7\uff0c\u6ce8\u610f\u7279\u5224 \n\t\t\tint p = *it;\n\t\t\tk = max(k, get(rk[i] + 1, p));\n\t\t}\n\t\tans += n + 1 - i - k;//\u52a0\u4e0a\u65b0\u751f\u6210\u7684\u5b50\u4e32 \n\t\tprintf(\"%lld\\n\", ans);\n\t}\n\treturn 0;\n}\n```",
        "postTime": 1551611410,
        "uid": 100544,
        "name": "xht",
        "ccfLevel": 9,
        "title": "P4070 [SDOI2016]\u751f\u6210\u9b54\u5492"
    },
    {
        "content": "\u524d\u9762\u5df2\u7ecf\u53c8\u4e24\u4e09\u4e2a\u9898\u89e3\u63d0\u5230\u4e86\u4f7f\u7528SAM\u7684\u73a9\u6cd5\u4e86, \u5177\u4f53\u800c\u8a00\u5c31\u662f\u4e00\u53e5\u8bdd.  \n> \u8003\u8651\u65b0\u5efa\u7684\u540e\u7f00\u72b6\u6001\u662f$q$  \n> ~~\u7ecf\u8fc7\u795e\u5947\u7684\u5206\u7c7b\u8ba8\u8bba\u8bba\u8bc1,\u5404\u79cdparent\u6811\u4e0a\u64cd\u4f5c,\u4ea7\u751f\u4e86\u72b6\u6001\u5206\u88c2,\u4fee\u6539\u4e86trans\u7684\u6307\u5411,\u4fee\u6b63\u4e86parent\u4e4b\u540e.~~  \n> \u8d21\u732e\u662f$\\text{maxlen}_q-\\text{maxlen}_{\\text{parent}(q)}$.  \n\n\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e2a\u770b\u8d77\u6765\u6bd4\u8f83\u6709\u8bf4\u670d\u529b\u7684\u6b63\u786e\u6027\u8bc1\u660e.  \n\n\u9996\u5148,\u6211\u4eec\u5148\u6765\u8003\u8651 $S$\u7684\u672c\u8d28\u4e0d\u540c\u7684\u5b50\u4e32 \u5982\u4f55\u7edf\u8ba1.  \n\u76f4\u63a5\u8003\u8651\u6254\u4e0a$\\text{SAM}(S)$,\u628a\u5b50\u4e32$T$\u6254\u5230\u91cc\u9762\u53bb,\u7531\u4e8e\u662f\u5b50\u4e32$\\text{tr}(q_s,T)=q_0\\neq \\text{null}$  \n\u5982\u679c\u4e24\u4e2a\u5b50\u4e32$T_1,T_2$\u662f\u672c\u5b50\u4e0d\u540c\u7684,\u5373$T_1\\neq T_2$,\u90a3\u6211\u4eec\u4e00\u5b9a\u6709 $\\text{len}(T_1)\\neq \\text{len}(T_2)$ \u6216 $\\text{tr}(q_s,T_1)\\neq \\text{tr}(q_s,T_2)$,  \n\u82e5\u4e0d\u7136,\u7ecf\u8fc7\u957f\u5ea6\u76f8\u7b49\u7684\u8def\u5f84,\u5230\u8fbe\u76f8\u540c\u7684\u72b6\u6001,\u8bbe$q_0=\\text{tr}(q_s,T_1)$,\u5728$q_0$\u72b6\u6001\u7684right\u96c6\u5408\u4e2d\u968f\u4fbf\u53d6\u51fa\u4e00\u4e2a\u5143\u7d20$r$,\u6709$T_1\\!=\\!T_2=S[r-\\text{len}+1,r]$  \n\u5199\u51fa\u8fd9\u4e2a\u53ea\u662f\u642c\u8fd0\u4e86\u5b9a\u4e49\u7684\u5f0f\u5b50,\u4ecd\u7136\u4e0d\u77e5\u9053\u5b83\u662f\u4ec0\u4e48\u610f\u601d?\n\u6211\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e2a\u89e3\u91ca,\u8003\u8651\u4e00\u4e2a\u957f\u5ea6\u786e\u5b9a\u4e3a$|T|$\u7684\u5b50\u4e32,\u5982\u679c\u6211\u4eec\u77e5\u9053\u4e00\u4e2a$x\\in right(T)$, \u90a3\u4e48\u53d6\u51fa\"\u4ee5\u4f4d\u7f6e$x$\u7ed3\u5c3e,\u957f\u5ea6\u4e3a$|T|$\u7684\u4e32$S[x-|T|+1,x]$\",\u5b83\u4e00\u5b9a\u7b49\u4e8e$T$.\n\u8fd9\u91cc$T_1,T_2$\u957f\u5ea6\u4e00\u81f4, \u53c8\u6709\u4e00\u6837\u7684$\\text{right}$\u96c6\u5408, \u968f\u4fbf\u4eceright\u4e2d\u627e\u4e00\u4e2a\u5143\u7d20, \u5411\u524d\u53d6 $T_1$ \u4e2a\u5b57\u7b26, \u5f97\u5230\u5b50\u4e32$T_0$, \u5c31\u6709$T_1=T_0=T_2$.\n\n\u8fd9\u8bf4\u660e $\\text{SAM}(S)$\u4e2d, **$q_s$\u8d77\u59cb\u7684\u4e0d\u540c\u8def\u5f84\u548c$S$\u7684\u672c\u8d28\u4e0d\u540c\u5b50\u4e32 \u4e00\u4e00\u5bf9\u5e94** \u8fd9\u4e2a\u6027\u8d28\u975e\u5e38\u91cd\u8981,\u5728$\\text{kth}(T),\\text{rank}(T)$(\u6307\u5b57\u5178\u5e8f)\u76f8\u5173\u7684\u95ee\u9898\u4e2d\u6709\u5f88\u591a\u5e94\u7528.  \n\n\u7136\u540e\u6765\u8003\u8651\u600e\u4e48\u6570\u8def\u5f84,SAM\u4e0a\u9762\u7684\u6027\u8d28\u662f\"\u4e24\u6761\u8def\u5f84\u8981\u4e48\u7ec8\u70b9\u4e0d\u540c,\u8981\u4e48\u957f\u5ea6\u4e0d\u540c\",\u6211\u4eec\u53ef\u4ee5\u679a\u4e3e\u7ec8\u70b9\u72b6\u6001,\u7136\u540e\u8003\u8651\u5230\u8fbe\u6b64\u72b6\u6001\u7684\u8def\u5f84,\u5176\u957f\u5ea6\u6709\u591a\u5c11\u79cd\u53ef\u80fd.  \n\u6bd4\u5982\u8003\u8651\u8d70\u5230$q$\u7684\u5b50\u4e32,\u6211\u4eec\u53d1\u73b0\u5230\u8fbe\u72b6\u6001$q$\u7684\u6240\u6709\u8def\u5f84\u957f\u5ea6\u5f62\u6210\u4e00\u4e2a\u8fde\u7eed\u533a\u95f4.  \n\n\u6240\u6709\u8d70\u5230$q$\u7684\u5b50\u4e32,\u5176$\\text{right}$\u96c6\u5408\u662f\u76f8\u540c\u7684,\u4ece$R_q$\u4e2d\u4efb\u610f\u53d6\u51fa\u4e00\u4e2a\u4f4d\u7f6e$r$,  \n\u8003\u5bdf$S[r,r],S[r-1,r],S[r-2,r], \\ldots S[1,r]$  \n\u4f1a\u53d1\u73b0$\\text{right}(S[r,r])\\supset \\text{right}(S[r-1,r])\\supset \\text{right}(S[r-2,r])\\supset \\ldots \\text{right}(S[1,r])$  \n(\u7b80\u5355\u6765\u8bf4,\u5c31\u662f\u957f\u5ea6\u8d8a\u77ed,\u8d8a\u5bb9\u6613\u591a\u6b21\u51fa\u73b0. \u5982\u679c$r'\\in \\text{right}(S[r-i,r])$\u90a3\u4e48$r'\\in \\text{right}(S[r-i+1,r])$,\u56e0\u4e3a\u540e\u8005\u662f\u524d\u8005\u7684\u540e\u7f00).  \n\u5982\u679c\u5b58\u5728\u5230\u8fbe$q$,\u957f\u5ea6\u4e3a$i$\u7684\u8def\u5f84\u4e0e\u957f\u5ea6\u4e3a$j$\u7684\u8def\u5f84,\u5176\u4e2d$i<j$,\u4f1a\u6709$\\text{right}(S[r-j+1,r])=\\text{right}(S[r-i+1,r])$\u6309\u7167\u524d\u9762\u7684\u5355\u8c03\u6027\u5173\u7cfb,\u4ee5$j$\u7ed3\u5c3e\u957f\u5ea6\u4e3a$i+1,i+2\\ldots j-1$\u7684\u5b50\u4e32,right\u4f1a\u548c\u5b83\u4eec\u4e00\u6837,\u8fd9\u4e9b\u5b50\u4e32\u4e5f\u5e94\u5f53\u5bf9\u5e94\u4e00\u4e9bSAM\u4e0a\u4ece$q_s$\u8d70\u5230$q$\u7684\u8def\u5f84,\u5176\u957f\u5ea6\u8986\u76d6\u4e86$[i+1,j-1]$.\n\n\u4e8e\u662f, \u7b54\u6848\u5c31\u5199\u6210\u8fd9\u6837, \u5176\u4e2d$[\\text{maxlen}_{\\text{parent}(q)}+1,\\text{maxlen}_q]$\u5c31\u662f\u90a3\u4e2a\u957f\u5ea6\u533a\u95f4.\n\n$$\n\\sum_{q\\in \\text{SAM}(S)}\\text{maxlen}_q-\\text{maxlen}_{\\text{parent}(q)}\n$$\n\n------\n\n\u7136\u540e\u6211\u4eec\u518d\u6765\u8003\u8651\u63d2\u5165\u5b57\u7b26,\u4ece$\\text{SAM}(S)$\u5230$\\text{SAM}(Sc)$\u65f6\u53d1\u751f\u7684\u53d8\u5316.\u76f4\u89c2\u7684\u8bf4,\u65b0\u589e\u52a0\u7684(\u5728$S$\u4e2d\u4e0d\u51fa\u73b0\u7684)\u5b50\u4e32,\u90fd\u662f\u4ee5$n+1$\u7ed3\u5c3e\u7684.\u5f62\u5f0f\u5316\u7684\u8bb2,\u4ed6\u4eec\u90fd\u5bf9\u5e94\u4e8e$\\text{tr}(q_s,T)=\\text{nq}$\u7684$T$,\u8fd9\u91cc\u9700\u8981\u5148\u8003\u8651\u4e00\u4e2a\u6027\u8d28  \n(\u539f\u8c05\u6211\u4e0d\u80fd\u8bf4\u660e\u767d\u4e3a\u5565\u8981\u8003\u8651\u8fd9\u4e2a\u6027\u8d28...\u53ea\u80fd\u8bf4\u8fd9\u4e2a\u6027\u8d28\u662f\u5728\u8003\u8651SAM\u4e2d\u52a0\u5b57\u7b26\u65f6\u72b6\u6001\u7684$\\text{right}$\u6539\u53d8\u65f6\u9700\u8981\u7528\u7684...\u53ef\u4ee5\u8bf4\u4f60\u4e0d\u4ed4\u7ec6\u770bSAM\u7684\u7406\u8bba\u76f4\u63a5\u88ab\u677f\u5b50\u662f\u80af\u5b9a\u4e0d\u77e5\u9053\u7684)  \n\n\u5982\u679c\u4e24\u4e2a\u4e32$T_1,T_2$,\u5728$S$\u4e2d,$\\text{right}(T_1)\\neq \\text{right}(T_2)$\u90a3\u4e48$Sc$\u4e2d\u5c31\u4e0d\u4f1a\u6709$\\text{right}(T_1)=\\text{right}(T_2)$,\u8fd9\u4e2a\u4e1c\u897f\u53ea\u80fd\u6b63\u5411\u63a8,\u53cd\u5411\u662f\u4e0d\u6b63\u786e\u7684.\u8fd9\u4e2a\u6027\u8d28\u8bf4\u660e,**\u6dfb\u52a0\u5b57\u7b26,\u4e0d\u4f1a\u5bfc\u81f4SAM\u4e0a\u7684\u72b6\u6001\u5408\u5e76**,\u56de\u987e:\u72b6\u6001\u662f$\\text{right}$\u7b49\u4ef7\u7c7b.  \n\n\u7136\u540e\u6709\u4ec0\u4e48\u5e2e\u52a9\u5462? \u8fd9\u4e2a\u6027\u8d28\u8bf4\u660e, \u65b0\u589e\u8d21\u732e\u5728\u4e14\u4ec5\u5728\u5728$\\text{nq}$\u4e0a\u9762.  \n\n\u5176\u4ed6\u72b6\u6001\u7edf\u8ba1\u5230\u7684\u5b50\u4e32\u603b\u548c\u4f1a\u662f$S$\u4e2d\u672c\u8d28\u4e0d\u540c\u7684\u5b50\u4e32,$Sc$\u4e2d\u4ecd\u7136\u662f\u672c\u8d28\u4e0d\u540c\u7684.  \n$\\text{tr}(q_s,T)=\\text{nq}$\u7684$T$,\u80af\u5b9a\u4e0d\u4f1a\u5728\u5176\u4ed6\u72b6\u6001\u4e0a\u88ab\u7edf\u8ba1...emm,\u663e\u7136\u662f\u8fd9\u6837.\u7136\u540e\u5c31\u505a\u5b8c\u4e86.\n\n------\n\n\u7136\u540e\u6211\u4eec\u6765\u8bb2\u505a\u6cd5(\u6307\u672c\u9898),emm....\u76f4\u63a5\u505a,\u6bcf\u6b21\u6dfb\u52a0\u5b57\u7b26\u540e\u7b54\u6848\u52a0\u4e0a$\\text{maxlen}_q-\\text{maxlen}_{\\text{parent}(q)}$...\u5177\u4f53\u5b9e\u73b0\u7a9d\u5c31\u61d2\u5f97\u7ed9\u4ee3\u7801\u4e86233333.\n\n------\n\n~~\u5373\u4f7f\u662f\u677f\u5b50\u9898,\u4e5f\u8981\u4ed4\u7ec6\u4ece\u57fa\u672c\u6027\u8d28\u5f00\u59cb\u63a8\u5bfc\u51fa\u505a\u6cd5,\u8fd9\u6837\u5728\u8d5b\u573a,\u5de8\u5927\u538b\u529b\u4e0b,\u4f60\u624d\u80fd\u7a33\u7a33\u5730\u628a\u57fa\u7840\u6027\u8d28\u5e94\u7528\u7684\u9898\u76ee\u505a\u51fa\u6765.~~  \n\u5bf9,\u5c31\u662f\u8fd9\u6837,\u6240\u4ee5\u6211\u4eec\u4e0b\u9762\u53bb\u770bNOI2018 name\u4e00\u9898\u5427.\n",
        "postTime": 1551776103,
        "uid": 15295,
        "name": "hehelego",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4070 \u3010[SDOI2016]\u751f\u6210\u9b54\u5492\u3011"
    },
    {
        "content": "[\u9898\u76ee](https://www.luogu.com.cn/problem/P4070)\n\n\u9996\u5148\u5bf9\u4e8e\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5b83\u6b63\u7740\u548c\u5012\u7740\u7684\u672c\u8d28\u4e0d\u540c\u7684\u5b57\u7b26\u4e32\u662f\u76f8\u540c\u7684\u3002\u6ce8\u610f\u5230\uff0c\u6bcf\u6b21\u5f80\u540e\u9762\u63d2\u5165\u4e00\u4e2a\u5b57\u7b26\uff0c\u524d\u9762\u6240\u6709\u7684\u540e\u7f00\u90fd\u4f1a\u52a0\u4e00\u4e2a\u5b57\u7b26\u3002\u5982\u679c\u63d2\u5230\u524d\u9762\u7684\u8bdd\uff0c\u5c31\u53ea\u4f1a\u589e\u52a0\u4e00\u4e2a\u65b0\u7684\u540e\u7f00\u3002\n\n\u6240\u4ee5\uff0c\u5148\u628a\u8bfb\u5165\u7684\u5b57\u7b26\u4e32\u79bb\u6563\u5316\uff0c\u7136\u540e\u6784\u9020\u5012\u7740\u7684$SA,rank,height$\u3002\n\n\u6211\u4eec\u5012\u7740\u679a\u4e3e$i$\uff08\u56e0\u4e3a\u524d\u9762\u53cd\u8fc7\u6765\u4e86\uff09\uff0c\u5b83\u589e\u52a0\u4e86$len-i+1$\u4e2a\u5b50\u4e32\uff0c\u8981\u51cf\u53bb\u5b83\u548c\u4e4b\u524d\u63d2\u5165\u7684\u540e\u7f00\u7684\u91cd\u590d\u6570\u3002\u56e0\u4e3a\u63d2\u5165\u7684\u540e\u7f00\u7684$SA$\u5e76\u4e0d\u8fde\u7eed\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u627e\u5230\u548c\u5f53\u524d\u6700\u50cf\u7684\u540e\u7f00\uff0c\u4e5f\u5c31\u662f\u5bfb\u627e\u79bb$rank[i]$\u6700\u8fd1\u7684\u3002\u6240\u4ee5\u8981\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u652f\u6301\u67e5\u8be2\u524d\u540e\u7f00\uff08\u6ce8\u610f\u533a\u5206\u8fd9\u91cc\u7684\u524d\u540e\u7f00\u548c\u5b57\u7b26\u4e32\u7684\u540e\u7f00\uff09\u3002\n\n**\u5bf9\u4e8e$j,k(rank[j]<rank[k])$\uff0c$suf(j)$\u548c$suf(k)$\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u4e3a$\\min\\limits_{i=rank[j]+1}^{rank[k]}height[i]$**\n\n\u9664\u4e86\u8981\u7ef4\u62a4\u524d\u540e\u7f00\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u4e00\u4e2a$ST$\u8868\uff0c\u56e0\u4e3a\u4e24\u4e2a\u540e\u7f00\u4e0d\u4e00\u5b9a\u6328\u5728\u4e00\u8d77\u3002\n\n\u5bf9\u4e8e$i$\u7684\u524d\u7f00$pre$\u548c\u540e\u7f00$nxt$\uff0c\u524d\u7f00\u548c\u540e\u7f00\u4e4b\u524d\u5df2\u7ecf\u51cf\u6389$LCP$,\u6240\u4ee5\u8981\u52a0\u56de\u6765\uff0c\u7136\u540e\u518d\u51cf\u53bb$LCP(pre,i)$\u548c$LCP(i,nxt)$\n\n\u5373$ans_i=ans_{i+1}+(len-i+1)-LCP(pre,i)-LCP(i,nxt)+LCP(pre,nxt)$\n\n\u8fd9\u6837\u5c31\u80fd\u505a\u5230$O(n\\,\\log_2n)$\n\n\u7136\u540e\u6211\u95f2\u7740\u65e0\u804a\uff0c\u624b\u6253\u4e86\u4e00\u4e2a$splay$\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <algorithm>\n#define ll long long\nusing namespace std;\nconst int N=1e5+10;\nconst int INF=1e9;\nint len,size=1e5;\nint val[N],tmp[N],SA[N],rk[N],cnt[N],height[N],f[N][20];\nstruct tree//splay,\u5f53\u7136\u4e5f\u53ef\u4ee5\u7528set\u6216\u8005\u6811\u72b6\u6570\u7ec4 \n{\n\tint tot,root;\n\tint fa[N],son[N][2];\n\tint val[N];\n\tint size[N];\n\ttree(){ root=tot=0; }\n\tinline int get(int p)\n\t{ \n\t\treturn son[fa[p]][0]==p?0:1; \n\t}\n\tinline void pushup(int p)\n\t{ \n\t\tif(p) size[p]=size[son[p][0]]+size[son[p][1]]+1; \n\t}\n\tinline void rotate(int p)\n\t{\n\t\tint f=fa[p],r=get(p);\n\t\tif(fa[f]) son[fa[f]][get(f)]=p;\n\t\tfa[p]=fa[f];\n\t\tif(son[p][r^1]) fa[son[p][r^1]]=f;\n\t\tson[f][r]=son[p][r^1];\n\t\tfa[f]=p,son[p][r^1]=f;\n\t\tpushup(f),pushup(p);\n\t}\n\tinline void splay(int p)\n\t{\n\t\twhile(fa[p])\n\t\t{\n\t\t\tif(fa[fa[p]]&&get(p)==get(fa[p])) rotate(fa[p]);\n\t\t\trotate(p);\n\t\t}\n\t}\n\tinline int newnode(int &p,int f,int num)\n\t{\n\t\tif(p==0)\n\t\t{\n\t\t\tp=++tot;\n\t\t\tval[p]=num;\n\t\t\tfa[p]=f;\n\t\t\tsize[p]=1;\n\t\t\treturn p;\n\t\t}\n\t\tif(val[p]==num){ size[p]++; return p; }\n\t\tint pos=(num<val[p]?newnode(son[p][0],p,num):newnode(son[p][1],p,num));\n\t\tpushup(p);\n\t\treturn pos;\n\t}\n\tinline void insert(int num)\n\t{\n\t\tint p=newnode(root,0,num);\n\t\tsplay(p),root=p;\n\t}\n\tinline int findpre()\n\t{\n\t\tint p=son[root][0];\n\t\twhile(son[p][1]) p=son[p][1];\n\t\treturn val[p];\n\t}\n\tinline int findnxt()\n\t{\n\t\tint p=son[root][1];\n\t\twhile(son[p][0]) p=son[p][0];\n\t\treturn val[p];\n\t}\n}t;\ninline void binsort()//\u57fa\u6570\u6392\u5e8f \n{\n\tfor(int i=0;i<=size;i++) cnt[i]=0;\n\tfor(int i=1;i<=len;i++) cnt[rk[i]]++;\n\tfor(int i=1;i<=size;i++) cnt[i]+=cnt[i-1];\n\tfor(int i=len;i>=1;i--) SA[cnt[rk[tmp[i]]]--]=tmp[i];\n}\ninline void get_SA()//\u6c42\u51faSA,rank\u6570\u7ec4 \n{\n\tfor(int i=1;i<=len;i++)\n\t\trk[i]=val[i],tmp[i]=i;\n\tbinsort();\n\tfor(int l=1;l<=len;l<<=1)\n\t{\n\t\tint p=0;\n\t\tfor(int i=len-l+1;i<=len;i++)\n\t\t\ttmp[++p]=i;\n\t\tfor(int i=1;i<=len;i++)\n\t\t\tif(SA[i]>l) tmp[++p]=SA[i]-l;\n\t\tbinsort(),swap(rk,tmp);\n\t\trk[SA[1]]=p=1;\n\t\tfor(int i=2;i<=len;i++)\n\t\t\trk[SA[i]]=(tmp[SA[i]]==tmp[SA[i-1]]&&tmp[SA[i]+l]==tmp[SA[i-1]+l])?p:++p;\n\t\tif(p==len) break; size=p;\n\t}\n}\ninline void get_height()//\u6c42\u51faheight\u6570\u7ec4 \n{\n\tint pre=1;\n\tfor(int i=1;i<=len;i++)\n\t{\n\t\tif(pre) pre--;\n\t\twhile(val[i+pre]==val[SA[rk[i]-1]+pre]) pre++;\n\t\theight[rk[i]]=pre;\n\t}\n}\ninline int query(int l,int r)//\u67e5\u8be2\u533a\u95f4\u6700\u5c0f\u503c \n{\n\tint k=log2(r-l+1);\n\treturn min(f[l][k],f[r-(1<<k)+1][k]);\n}\nint main()\n{\n\tll ans=0;\n\tscanf(\"%d\",&len);\n\tfor(int i=len;i>=1;i--)\n\t{\n\t\tscanf(\"%d\",&val[i]);\n\t\ttmp[i]=val[i];\n\t}\n\tsort(tmp+1,tmp+len+1);\n\tint n=unique(tmp+1,tmp+len+1)-(tmp+1);\n\tfor(int i=1;i<=len;i++)\n\t\tval[i]=lower_bound(tmp+1,tmp+n+1,val[i])-tmp;//\u79bb\u6563\u5316 \n\tfor(int i=1;i<=len;i++)\n\t\ttmp[i]=0;\n\tget_SA(),get_height();\n\tfor(int i=1;i<=len;i++)//\u9884\u5904\u7406ST\u8868 \n\t\tf[i][0]=height[i];\n\tfor(int l=1;l<=log2(len);l++)\n\t\tfor(int i=1;i<=len-(1<<l)+1;i++)//\u6ce8\u610f\u8fd9\u91cc\u7684\u7ed3\u675f\u6761\u4ef6 \n\t\t\tf[i][l]=min(f[i][l-1],f[i+(1<<(l-1))][l-1]);\n\tfor(int i=len;i>=1;i--)\n\t{\n\t\tt.insert(rk[i]);\n\t\tint pre=t.findpre(),nxt=t.findnxt();\n\t\tif(pre) ans-=query(pre+1,rk[i]);//\u51cf\u53bb\u516c\u5171\u7684 \n\t\tif(nxt) ans-=query(rk[i]+1,nxt);\n\t\tif(pre&&nxt) ans+=query(pre+1,nxt);//\u628a\u4e4b\u524d\u51cf\u7684\u52a0\u56de\u6765 \n\t\tans+=len-i+1,printf(\"%lld\\n\",ans);//\u6ce8\u610f\u8fd8\u6709len-i+1 \n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1587260078,
        "uid": 81238,
        "name": "MCAdam",
        "ccfLevel": 7,
        "title": "P4070 [SDOI2016]\u751f\u6210\u9b54\u5492"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\u70b9\u8fd9\u91cc](https://blog.csdn.net/A_Comme_Amour/article/details/79987498)\n\n\u9898\u89e3\n-\n\n\u8fd9\u9053\u9898\u8fd8\u662f\u6bd4\u8f83\u597d\u7684\uff1b \u8fd9\u91cc\u63d0\u4f9b\u540e\u7f00\u6570\u7ec4\u7684\u89e3\u6cd5\u3002\n\u8981\u6c42\u51fa\u6bcf\u4e00\u4e2a\u524d\u7f00\u672c\u8d28\u4e0d\u540c\u7684\u540e\u7f00\u7684\u4e2a\u6570\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u628a\u539f\u5e8f\u5217\u5012\u8fc7\u6765\uff0c\u7136\u540e\u5b9e\u9645\u4e0a\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u540e\u7f00\u6c42\u4e0e\u5176\u5b83\u540e\u7f00\u4e0d\u91cd\u590d\u7684\u524d\u7f00\u4e2a\u6570\uff0c\u4e5f\u5373\u662f\u540e\u7f00\u957f\u5ea6\u51cf\u53bbheight\u503c\uff1b\n\u6c42\u51fa\u67d0\u4e00\u4e2a\u540e\u7f00\u5bf9\u7b54\u6848\u7684\u8d21\u732e\u4e4b\u540e\uff0c\u4ed6\u4e0d\u5e94\u8be5\u505c\u7559\u5728\u5143\u5e8f\u5217\u4e2d\u5bf9\u540e\u7eed\u7b54\u6848\u7684\u6c42\u89e3\u4ea7\u751f\u5f71\u54cd\uff0c\u6240\u4ee5\u5e94\u8be5\u628a\u5b83\u5220\u9664\uff1b\n\u5728\u5b9e\u73b0\u65b9\u5f0f\u4e0a\uff0c\u53ef\u4ee5\u4f7f\u7528\u94fe\u8868\uff0c\u4e0e\u5e73\u8861\u6811\u7684\u64cd\u4f5c\u6709\u4e9b\u7c7b\u4f3c\n\n\u4ee3\u7801\n-\n\n```\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n#define ll long long\nconst int maxn=1e6+10;\nconst int inf=1e9;\n\nint n,m=200,x[maxn],y[maxn],c[maxn],sa[maxn],rnk[maxn],height[maxn];\nint s[maxn];\n\nvoid build_sa()\n{\n\tfor (int i=0; i<m; i++) c[i]=0;\n\tfor (int i=0; i<n; i++) c[x[i]=s[i]]++;\n\tfor (int i=1; i<m; i++) c[i]+=c[i-1];\n\tfor (int i=n-1; i>=0; i--) sa[--c[x[i]]]=i;\n\t\n\tfor (int k=1; k<=n; k<<=1)\n\t{\n\t\tint p=0;\n\t\tfor (int i=n-k; i<n; i++) y[p++]=i;\n\t\tfor (int i=0; i<n; i++) if (sa[i]>=k) y[p++]=sa[i]-k;\n\t\t\n\t\tfor (int i=0; i<m; i++) c[i]=0;\n\t\tfor (int i=0; i<n; i++) c[x[i]]++;\n\t\tfor (int i=1; i<m; i++) c[i]+=c[i-1];\n\t\tfor (int i=n-1; i>=0; i--) sa[--c[x[y[i]]]]=y[i];\n\t\t\n\t\tswap(x,y);//\u53c8\u5fd8\u8bb0\u4e86swap \n\t\tp=1; x[sa[0]]=0;\n\t\tfor (int i=0; i<n; i++)\n\t\t\tx[sa[i]] = y[sa[i-1]]==y[sa[i]] && ((sa[i-1]+k>=n?-1:y[sa[i-1]+k])==(sa[i]+k>=n?-1:y[sa[i]+k])) ?p-1:p++;\n\t\tif (p>n) break;\n\t\tm=p;\n\t}\n}\n\nvoid build_height()\n{\n\tfor (int i=0; i<n; i++) rnk[sa[i]]=i;\n\tint k=0; height[0]=0;\n\tfor (int i=0; i<n; i++)\n\t{\n\t\tif (!rnk[i]) continue;\n\t\tif (k) k--;\n\t\tint j=sa[rnk[i]-1];\n\t\twhile (i+k<n && j+k<n && s[i+k]==s[j+k]) k++;\n\t\theight[rnk[i]]=k;\n\t}\n}\n\nvoid debug(int *A,int len) {for (int i=0; i<len; i++) printf(\"%d \",A[i]);}\n\nint tmp[maxn],a[maxn],pre[maxn],next[maxn];\nll ans[maxn];\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor (int i=0; i<n; i++) scanf(\"%d\",&a[i]);\n\tfor (int i=0; i<n; i++) tmp[i]=a[i];\n\tsort(tmp,tmp+n);\n\tint nn=unique(tmp,tmp+n)-tmp;\n\tfor (int i=0; i<n; i++)\n\t\ta[i]=lower_bound(tmp,tmp+nn,a[i])-tmp+1;\n\tfor (int i=0; i<n; i++) s[i]=a[n-i-1];\n\tbuild_sa();\n\tbuild_height();\n\t\n\tfor (int i=0; i<n-1; i++) next[i]=i+1;\n\tfor (int i=1; i<n; i++) pre[i]=i-1;\n\tfor (int i=0; i<n; i++)\n\t{\n\t\tint rk=rnk[i];\n\t\tint now=n-i-max(height[rk],height[next[rk]]);\n\t\tans[i]=(ll)now;\n\t\theight[next[rk]]=min(height[next[rk]],height[rk]);\n\t\theight[rk]=0;\n\t\tif (rk) next[pre[rk]]=next[rk];\n\t\tpre[next[rk]]=pre[rk];//\u76f8\u5f53\u4e8e\u5728\u5e73\u8861\u6811\u4e2d\u5220\u9664\u4e86\u4e00\u4e2a\u5143\u7d20 \n\t}\n\tfor (int i=n-1; i>=0; i--) ans[i]+=ans[i+1];\n\tfor (int i=n-1; i>=0; i--) printf(\"%lld\\n\",ans[i]);\n\treturn 0;\n}\n```\n",
        "postTime": 1524026270,
        "uid": 48036,
        "name": "\u79cb\u65e5\u79c1\u8bed",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4070 \u3010[SDOI2016]\u751f\u6210\u9b54\u5492\u3011"
    },
    {
        "content": "[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/aday526/p/solution-p4070.html)  \n\n\n## \u540e\u7f00\u6811\u9898\u89e3\n\n### Solution\n\n\u5728\u5efa\u540e\u7f00\u6811\u7684 $\\mathsf{Ukkonen}$ \u7b97\u6cd5\u4e2d\uff0c\u662f\u5728\u7ebf\u63d2\u5165\u5b57\u7b26\u7684\uff0c\u6240\u4ee5\u80fd\u5f88\u597d\u5730\u89e3\u51b3\u6b64\u95ee\u9898\u3002\n\n\u6211\u4eec\u77e5\u9053\uff0c\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u672c\u8d28\u4e0d\u540c\u5b50\u4e32\u5c31\u662f\u5176\u540e\u7f00\u6811\u4e0a\u6240\u6709\u8fb9\u957f\u4e4b\u548c\uff0c\u90a3\u4e48\u53ea\u8981\u5728\u6bcf\u6b21\u63d2\u5165\u65f6\u8003\u8651\u6709\u54ea\u4e9b\u8fb9\u4f1a\u53d8\u5316\u5373\u53ef\u3002\n\n\u56e0\u4e3a\u540e\u7f00\u6811\u662f\u538b\u7f29 $\\mathsf{Trie}$\uff0c\u6240\u4ee5\u6bcf\u6b21\u63d2\u5165\u53ea\u6709\u53f6\u5b50\u8282\u70b9\u7684\u8fb9\u4f1a\u6539\u53d8\u3002\n\n- \u5f53\u63d2\u5165\u6210\u529f\u65f6\uff0c\u4f1a\u6709\u5206\u88c2\u8282\u70b9\u4ea7\u751f\uff0c\u6b64\u65f6\u4f1a\u591a\u4e00\u6761\u8fb9\u957f\u4e3a $1$ \u7684\u8fb9\u3002\n- \u5f53\u63d2\u5165\u5931\u8d25\u65f6\uff0c\u82e5\u8981\u65b0\u5efa\u8282\u70b9\uff0c\u4e5f\u4f1a\u591a\u4e00\u6761\u8fb9\u957f\u4e3a $1$ \u7684\u8fb9\u3002\n\n\u90a3\u4e48\u5728\u8fd9\u4e24\u5904\u66f4\u65b0\u7b54\u6848\u5373\u53ef\u3002\n\n### Code\n\n```cpp\n#include<bits/stdc++.h>\n#include<bits/extc++.h>\nusing namespace std;\nconst int N=2e5+5,inf=1e8;\nlong long cnt,ans;\nstruct Suffix_Tree{\n\tint n,tot,now,rem,link[N],s[N],len[N],st[N];\n\t__gnu_pbds::gp_hash_table<int,int>ch[N];\n\tSuffix_Tree():n(0),tot(1),now(1),rem(0){len[0]=inf;}\n\tint node(int p,int l){link[++tot]=1;st[tot]=p;len[tot]=l;return tot;}\n\tvoid ins(int x){\n\t\ts[++n]=x;rem++;\n\t\tfor(int lst=1;rem;){\n\t\t\twhile(rem>len[ch[now][s[n-rem+1]]])\n\t\t\t\trem-=len[now=ch[now][s[n-rem+1]]];\n\t\t\tint &v=ch[now][s[n-rem+1]],c=s[st[v]+rem-1];\n\t\t\tif(!v||x==c){//\u63d2\u5165\u5931\u8d25\n\t\t\t\tlink[lst]=now;lst=now;\n\t\t\t\tif(!v)v=node(n,inf),cnt++;//\u8981\u65b0\u5efa\u8282\u70b9\n\t\t\t\telse break;\n\t\t\t}else{//\u63d2\u5165\u6210\u529f\n\t\t\t\tint u=node(st[v],rem-1);\n\t\t\t\tch[u][c]=v;ch[u][x]=node(n,inf);cnt++;//\u5206\u88c2\u8282\u70b9\n\t\t\t\tst[v]+=rem-1;len[v]-=rem-1;\n\t\t\t\tlink[lst]=v=u;lst=u;\n\t\t\t}if(now==1)rem--;else now=link[now];\n\t\t}\n\t}\n}T;\nint n,x;\nint main(){\n    for(scanf(\"%d\",&n);n--;printf(\"%lld\\n\",ans+=cnt))\n        scanf(\"%d\",&x),T.ins(x);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1630857446,
        "uid": 312393,
        "name": "ADay",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4070 [SDOI2016]\u751f\u6210\u9b54\u5492"
    },
    {
        "content": "\u6c38\u8fdc\u6ca1\u6709\u4eba\u8bb2\u540e\u7f00\u6811\n\n~~\u53d7\u8feb\u5bb3\u7684\u540e\u7f00\u6570\u636e\u7ed3\u6784~~\n\n\u7b54\u6848\u5c31\u662f\u540e\u7f00\u6811\u6240\u6709\u8fb9\u7684\u957f\u5ea6\u4e4b\u548c\n\n\u56e0\u4e3a\u76f8\u540c\u7684\u90fd\u88ab\u538b\u7f29\u4e86\uff0c\u6bcf\u4e00\u6761\u8fb9\u4e0a\u7684\u6bcf\u4e00\u4e2a\u5b57\u7b26\u90fd\u5bf9\u5e94\u4e00\u4e2a\u5b50\u4e32\n\n\u6211\u4eec\u77e5\u9053\u540e\u7f00\u6811\u7684\u6784\u5efa\u7b97\u6cd5\u662f\u5728\u7ebf\u7684\n\n\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u66f4\u65b0\u7b54\u6848\n\n\u6211\u4eec\u601d\u8003\u4e00\u4e0b\u6bcf\u6b21\u63d2\u5165\u7684\u65f6\u5019\u90a3\u4e9b\u8fb9\u7684\u957f\u5ea6\u4f1a\u589e\u52a0\u5c31\u53ef\u4ee5\u4e86\n\n\u53ea\u6709\u90a3\u4e9b\u610f\u4e49\u4f1a\u81ea\u52a8\u53d8\u5316\u7684\u8fb9\uff0c\u5373\u53f6\u8282\u70b9\u624d\u4f1a\n\n\u6211\u4eec\u53ea\u9700\u8981\u8bb0\u5f55\u53f6\u8282\u70b9\u4e2a\u6570\u5c31\u53ef\u4ee5\u4e86\n\n\u65b0\u5efa\u8282\u70b9$+1$\uff0c\u5206\u88c2\u8282\u70b9$+1$\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n#include<cstdlib>\n#include<cctype>\n#include<set>\n#include<queue>\n#include<map>\n#include<unordered_map>\n#define M 100010\n#define inf 2e9\n#define LL long long\nconst int mod=998244353;\nusing namespace std;\ninline int read(){\n\tint f=1,x=0;char s=getchar();\n\twhile (!isdigit(s)){if(s=='-')f=-1;s=getchar();}\n\twhile (isdigit(s)){x=(x<<1)+(x<<3)+(s^48),s=getchar();}\n\treturn x*f;\n}\nint n,strl,a[M],b[M],cnt;\nLL ans;\nchar str[M]; \nstruct Suffix_Tree{\n\tint\tlink[M<<1],len[M<<1],start[M<<1],tot,rem,now,s[M<<1];\n\tunordered_map<int,int> ch[M<<1];\n\tinline void reset(void){\n\t\tlen[0]=inf,tot=1,n=rem=0,now=1;\t\n\t}\n\tinline int New(int st,int le){\n\t\tstart[++tot]=st,len[tot]=le,link[tot]=1;return tot;\n\t}\n\tinline void extend(int x){\n\t\ts[++n]=x,++rem;\n\t\tfor (int last=1;rem;){\n\t\t\twhile (rem>len[ch[now][s[n-rem+1]]])\n\t\t\t\trem-=len[now=ch[now][s[n-rem+1]]];\n\t\t\tint &v=ch[now][s[n-rem+1]],c=s[start[v]+rem-1];\n\t\t\tif (!v||x==c){\n\t\t\t\tlink[last]=now,last=now;\n\t\t\t\tif (!v) v=New(n-rem+1,inf),cnt++;\n\t\t\t\telse break;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tint u=New(start[v],rem-1);\n\t\t\t\tch[u][c]=v,ch[u][x]=New(n,inf),cnt++;\n\t\t\t\tstart[v]+=rem-1,len[v]-=rem-1;\n\t\t\t\tlink[last]=v=u,last=u;\n\t\t\t}\n\t\t\tif (now==1) --rem;else now=link[now];\n\t\t}\n\t}\n}tree;\nsigned main(void){\n//\tfreopen(\"my.in\",\"r\",stdin);\n\ttree.reset();int k=read();\n\tfor (register int i=1;i<=k;++i) b[i]=a[i]=read();\n\tsort(b+1,b+k+1);\n\tfor (register int i=1;i<=k;++i) a[i]=lower_bound(b+1,b+k+1,a[i])-b;\n\tfor (strl=1;strl<=k;++strl){\n\t\ttree.extend(a[strl]);ans+=cnt;\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1583666794,
        "uid": 78290,
        "name": "Polaris_Dane",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4070 \u3010[SDOI2016]\u751f\u6210\u9b54\u5492\u3011"
    },
    {
        "content": "Update\uff1a\u611f\u8c22 @kevinshuai \u53d1\u73b0\u7684\u9519\u8bef\uff0c\u5728\u62f7\u8d1d\u6570\u7ec4\u8fdb\u884c\u79bb\u6563\u5316\u7684\u65f6\u5019\u53d1\u751f\u4e86\u9519\u4f4d\u5bfc\u81f4\u4e00\u4e9b\u6570\u4e2d\u4e0d\u542b\u6709 0 \u7684\u6570\u636e\u5b9e\u9645\u4e0a\u662f\u4f1a\u88ab\u5224\u9519\u8bef\u7684\uff0c\u73b0\u5728\u5df2\u7ecf\u6539\u6b63\u3002\n\n\u8fd9\u662f\u4e00\u9053\u7528\u540e\u7f00\u81ea\u52a8\u673a\u53ef\u4ee5\u79d2\u6740\u7684\u9898\uff0c\u4f46\u662f\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u540e\u7f00\u6570\u7ec4\u7684\u7ec3\u624b\u9898\u3002\n\n\n\u6709\u4e00\u4e9b\u5b66\u4e60\u8d44\u6599\u5982\u300a\u540e\u7f00\u6570\u7ec4\uff1a\u5904\u7406\u5b57\u7b26\u4e32\u7684\u6709\u529b\u5de5\u5177\u300b\u4e2d\u5c31\u8bba\u8ff0\u4e86\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5176\u672c\u8d28\u4e0d\u540c\u7684\u5b50\u4e32\u6570\u91cf\u662f\u5176\u5168\u90e8\u5b50\u4e32\u6570\u91cf\u51cf\u53bb $\\mathrm{height}$ \u503c\u4e4b\u548c\uff0c\u5373 $\\frac{n(n+1)}2 - \\sum \\mathrm{height}(i)$ \u3002\u5927\u5bb6\u4e5f\u53ef\u4ee5\u81ea\u5df1\u601d\u8003\u4e00\u4e0b\uff0c\u4e3e\u51e0\u4e2a\u4f8b\u5b50\u8bd5\u4e00\u8bd5\uff0c\u5c31\u80fd\u660e\u767d\u8fd9\u662f\u4e3a\u4ec0\u4e48\u3002\n\n\n\u8003\u8651\u5230\u6bcf\u6b21\u4ece\u540e\u9762\u63d2\u5165\u4e00\u4e2a\u5b57\u7b26\uff0c\u8fd9\u4e2a\u5b57\u7b26\u4e32\u7684 $\\mathrm{sa}$ \u6570\u7ec4\u5176\u5b9e\u662f\u4f1a\u4e0d\u65ad\u53d8\u52a8\u7684\u3002\u4f46\u662f\u5982\u679c\u6bcf\u6b21\u4ece\u5934\u63d2\uff0c\u5c31\u4ec5\u4ec5\u662f\u589e\u52a0\u4e86\u4e00\u4e2a\u65b0\u7684\u540e\u7f00\uff0c\u6240\u4ee5\u6211\u4eec\u8003\u8651\u628a\u8fd9\u4e2a\u5b57\u7b26\u4e32\u7ffb\u8f6c\u8fc7\u6765\u770b\u3002\n\n\n\u8fd9\u65f6\uff0c\u53ea\u6709\u63d2\u5165\u7684\u90a3\u4e2a\u65b0\u540e\u7f00\u7d27\u90bb\u7684 $\\mathrm{height}$ \u503c\u53d1\u751f\u4e86\u6539\u53d8\uff0c\u6ce8\u610f\u5230\u8fd9\u4e2a\u503c\u662f\u53ef\u4ee5\u76f4\u63a5\u5728\u6574\u6bb5\u5b57\u7b26\u4e32\u7684\u540e\u7f00\u6570\u7ec4\u4e2d\u67e5\u5230\u7684\uff0c\u5373 $\\mathrm{lcp}(\\mathrm{prev}(i), \\mathrm{post}(i))$ \u3002\n\n\n\u53ef\u4ee5\u7528\u5e73\u8861\u6811\u6765\u7ef4\u62a4\u67e5\u627e\u524d\u540e\u76f8\u90bb\u5b57\u7b26\u4e32\uff0c\u603b\u590d\u6742\u5ea6 $\\Theta(n\\log n)$ \u3002\n\n\n\u6ce8\uff1a\u7136\u800c\u8fd9\u4e2a\u95ee\u9898\u5176\u5b9e\u662f\u53ef\u4ee5\u4ee5\u51e0\u4e4e $\\mathcal O(n)$ \u7684\u6548\u7387\u505a\u5b8c\u7684\u3002\n\n\n\\* \u7528DC3/\u8bf1\u5bfc\u6392\u5e8f\u5b8c\u6210\u540e\u7f00\u6570\u7ec4\u7684\u6784\u5efa\u3002\n\n\\* \u7528\u79bb\u7ebf\u65b9\u6cd5\u7ef4\u62a4\u76f8\u90bb\u5b57\u7b26\u4e32\uff0c\u5982\u5e76\u67e5\u96c6\uff08\u8fd9\u91cc\u662f $\\Theta(n\\alpha(n))$ \u7684\uff0c\u59d1\u4e14\u5f53\u505a\u7ebf\u6027\uff09\u3002\n\n\\* \u7528\u79bb\u7ebf\u65b9\u6cd5\u8fdb\u884c RMQ \uff0c\u5982\u7b1b\u5361\u5c14\u6811 + LCA \u3002\n\n\n```cpp\n#include <cstdio>\n#include <cstring>\n\n#include <algorithm>\n#include <set>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef set<int> set_t;\n\nconst int N = 100010;\n\nstruct {\n    int a, b, id;\n} p[N], q[N];\n\nstruct node {\n    int l, r, d;\n    node *ls, *rs;\n\n    int query(int l, int r) const;\n};\n\nint n;\nint a[N], sa[N], rk[N], cnt[N], sorted[N], h[N], height[N];\n\nnode* build(int l, int r);\n\nint main() {\n    ll hsum = 0;\n    scanf(\"%d\", &n);\n    for (int i = n; i; --i)\n        scanf(\"%d\", &a[i]);\n    copy(a + 1, a + n + 1, sorted + 1);\n    sort(sorted + 1, sorted + n + 1);\n    for (int i = 1; i <= n; ++i)\n        a[i] = rk[i] = lower_bound(sorted + 1, sorted + n + 1, a[i]) - sorted;\n    for (int l = 1; l <= n; l <<= 1) {\n        memset(cnt, 0, sizeof(cnt));\n        for (int i = 1; i <= n; ++i) {\n            p[i].id = i;\n            p[i].a = rk[i];\n            p[i].b = (i + l) > n ? 0 : rk[i + l];\n            ++cnt[p[i].b];\n        }\n        for (int i = 1; i <= n; ++i)\n            cnt[i] += cnt[i - 1];\n        for (int i = n; i; --i)\n            q[cnt[p[i].b]--] = p[i];\n        memset(cnt, 0, sizeof(cnt));\n        for (int i = 1; i <= n; ++i)\n            ++cnt[q[i].a];\n        for (int i = 1; i <= n; ++i)\n            cnt[i] += cnt[i - 1];\n        for (int i = n; i; --i)\n            p[cnt[q[i].a]--] = q[i];\n        for (int i = 1; i <= n; ++i) {\n            rk[p[i].id] = rk[p[i - 1].id];\n            if (p[i].a != p[i - 1].a || p[i].b != p[i - 1].b)\n                ++rk[p[i].id];\n        }\n    }\n    for (int i = 1; i <= n; ++i)\n        sa[rk[i]] = i;\n    for (int i = 1; i <= n; ++i) {\n        h[i] = h[i - 1] - 1;\n        if (h[i] < 0)\n            h[i] = 0;\n        while (a[i + h[i]] == a[sa[rk[i] - 1] + h[i]])\n            ++h[i];\n    }\n    for (int i = 1; i <= n; ++i)\n        height[rk[i]] = h[i];\n    node* seg = build(1, n);\n    set<int> st;\n    for (int i = n; i; --i) {\n        set_t::iterator iter = st.insert(rk[i]).first, pre = iter, pst = iter;\n        if (iter != st.begin()) {\n            --pre;\n            hsum += seg->query(*pre + 1, rk[i]);\n            if (++pst != st.end()) {\n                hsum += seg->query(rk[i] + 1, *pst);\n                hsum -= seg->query(*pre + 1, *pst);\n            }\n        } else if (++pst != st.end())\n            hsum += seg->query(rk[i] + 1, *pst);\n        printf(\"%lld\\n\", (ll)(n - i + 1) * (n - i + 2) / 2 - hsum);\n    }\n    return 0;\n}\n\nnode* build(int l, int r) {\n    static node pool[N * 2];\n    static node* top = pool;\n    node* p = top;\n    ++top;\n    p->l = l;\n    p->r = r;\n    if (l == r) {\n        p->d = height[l];\n        return p;\n    }\n    int mid = (l + r) / 2;\n    p->ls = build(l, mid);\n    p->rs = build(mid + 1, r);\n    p->d = min(p->ls->d, p->rs->d);\n    return p;\n}\n\nint node::query(int l, int r) const {\n    if (this->l == l && this->r == r)\n        return d;\n    if (r <= ls->r)\n        return ls->query(l, r);\n    if (l >= rs->l)\n        return rs->query(l, r);\n    return min(ls->query(l, ls->r), rs->query(rs->l, r));\n}\n```",
        "postTime": 1515939961,
        "uid": 21423,
        "name": "Elegia",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P4070 \u3010[SDOI2016]\u751f\u6210\u9b54\u5492\u3011"
    },
    {
        "content": "\u5b89\u5229\u4e2a\u4eba blog\uff1ahttps://www.cnblogs.com/ET2006/\n\n\u2026\u2026\u52a8\u6001 SA\uff1f\n\n\u9996\u5148\u6211\u4eec\u77e5\u9053\u5728\u5b57\u7b26\u4e32\u540e\u5934\u6dfb\u52a0\u4e00\u4e2a\u5b57\u7b26\u662f\u4e0d\u5bb9\u6613\u6c42\u51fa\u5b57\u5178\u5e8f\u7684\u53d8\u5316\u7684\u3002\u4e8e\u662f\u8003\u8651\u628a\u6574\u4e2a\u5b57\u7b26\u4e32\u7ffb\u8f6c\u8fc7\u6765\uff0c\u8fd9\u6837\u5728\u6574\u4e2a\u5b57\u7b26\u4e32\u540e\u9762\u6dfb\u52a0\u4e00\u4e2a\u5b57\u7b26\u5c31\u7b49\u4ef7\u4e8e\u5728\u7ffb\u8f6c\u540e\u7684\u5b57\u7b26\u4e32\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u540e\u7f00\uff0c\u8fd9\u6837\u5c31\u597d\u7ef4\u62a4\u591a\u4e86\u3002\n\n\u63a5\u4e0b\u6765\u8003\u8651\u600e\u6837\u6c42\u51fa\u7b54\u6848\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u4e00\u4e2a\u5b57\u7b26\u4e32 $s$ \u672c\u8d28\u4e0d\u540c\u7684\u5b50\u4e32\u4e2a\u6570\u4e3a $\\dfrac{|s|(|s|+1)}{2}-\\sum\\limits_{i=2}^{|s|}ht_i$\u3002\u800c\u663e\u7136\u5c06\u5b57\u7b26\u4e32\u5012\u7f6e\u4e4b\u540e\uff0c\u672c\u8d28\u4e0d\u540c\u7684\u5b50\u4e32\u4e2a\u6570\u4e0d\u4f1a\u53d1\u751f\u53d8\u5316\u3002\u4e8e\u662f\u8003\u8651**\u5bf9\u6574\u4e2a $s$ \u7684\u7ffb\u8f6c\u4e32**\u505a\u4e00\u904d\u540e\u7f00\u6570\u7ec4\u3002\u8003\u8651\u957f\u5ea6\u4e3a $l$ \u7684\u524d\u7f00\uff0c\u663e\u7136\u5b83\u5728\u7ffb\u8f6c\u7684\u5b57\u7b26\u4e32\u4e2d\u5bf9\u5e94\u4e00\u6bb5\u957f\u5ea6\u4e3a $l$ \u7684\u540e\u7f00\uff0c\u6545\u5b83\u7684\u6240\u6709\u540e\u7f00\u5e94\u5f53\u4e3a\u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u8d77\u59cb\u4f4d\u7f6e\u5206\u522b\u4e3a $n-l+1,n-l+2,\\dots,n$ \u7684\u540e\u7f00\u3002\u5047\u8bbe\u8fd9 $l$ \u4e2a\u540e\u7f00\u7684 $rk$ \u4ece\u5c0f\u5230\u5927\u5206\u522b\u4e3a $x_1,x_2,\\dots,x_l$\uff0c\u90a3\u4e48\u8be5\u540e\u7f00\u7684 $ht'_i=\\min\\limits_{j=x_{i-1}+1}^{x_i}ht_j$\uff0c\u7528 ```std::set``` \u7ef4\u62a4\u5373\u53ef\u3002\u5177\u4f53\u89c1\u4ee3\u7801\u3002\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n#define fi first\n#define se second\n#define fill0(a) memset(a,0,sizeof(a))\n#define fill1(a) memset(a,-1,sizeof(a))\n#define fillbig(a) memset(a,63,sizeof(a))\n#define pb push_back\n#define ppb pop_back\n#define mp make_pair\ntemplate<typename T1,typename T2> void chkmin(T1 &x,T2 y){if(x>y) x=y;}\ntemplate<typename T1,typename T2> void chkmax(T1 &x,T2 y){if(x<y) x=y;}\ntypedef pair<int,int> pii;\ntypedef long long ll;\nnamespace fastio{\n\t#define FILE_SIZE 1<<23\n\tchar rbuf[FILE_SIZE],*p1=rbuf,*p2=rbuf,wbuf[FILE_SIZE],*p3=wbuf;\n\tinline char getc(){return p1==p2&&(p2=(p1=rbuf)+fread(rbuf,1,FILE_SIZE,stdin),p1==p2)?-1:*p1++;}\n\tinline void putc(char x){(*p3++=x);}\n\ttemplate<typename T> void read(T &x){\n\t\tx=0;char c=getchar();T neg=0;\n\t\twhile(!isdigit(c)) neg|=!(c^'-'),c=getchar();\n\t\twhile(isdigit(c)) x=(x<<3)+(x<<1)+(c^48),c=getchar();\n\t\tif(neg) x=(~x)+1;\n\t}\n\ttemplate<typename T> void recursive_print(T x){if(!x) return;recursive_print(x/10);putc(x%10^48);}\n\ttemplate<typename T> void print(T x){if(!x) putc('0');if(x<0) putc('-'),x=~x+1;recursive_print(x);}\n\tvoid print_final(){fwrite(wbuf,1,p3-wbuf,stdout);}\n}\nusing namespace fastio;\nconst int MAXN=1e5;\nconst int LOG_N=18;\nint n,a[MAXN+5],key[MAXN+5],uni[MAXN+5],num=0;\nint getpos(int x){\n\tint l=1,r=num;\n\twhile(l<=r){\n\t\tint mid=(l+r)>>1;\n\t\tif(uni[mid]==x) return mid;\n\t\telse if(uni[mid]>x) r=mid-1;\n\t\telse l=mid+1;\n\t}\n}\nint sa[MAXN+5],rk[MAXN+5],buc[MAXN+5],seq[MAXN+5],ht[MAXN+5];\npii x[MAXN+5];int st[MAXN+5][LOG_N+2];ll ans=0;\nvoid getsa(){\n\tint vmax=num,gr=0;\n\tfor(int i=1;i<=n;i++) buc[a[i]]++;\n\tfor(int i=1;i<=vmax;i++) buc[i]+=buc[i-1];\n\tfor(int i=n;i;i--) sa[buc[a[i]]--]=i;\n\tfor(int i=1;i<=n;i++){\n\t\tif(a[sa[i]]!=a[sa[i-1]]) gr++;\n\t\trk[sa[i]]=gr;\n\t} vmax=gr;\n\tfor(int k=1;k<=n;k<<=1){\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tif(i+k<=n) x[i]=mp(rk[i],rk[i+k]);\n\t\t\telse x[i]=mp(rk[i],0);\n\t\t} memset(buc,0,sizeof(buc));gr=0;int num=0;\n\t\tfor(int i=n-k+1;i<=n;i++) seq[++num]=i;\n\t\tfor(int i=1;i<=n;i++) if(sa[i]>k) seq[++num]=sa[i]-k;\n\t\tfor(int i=1;i<=n;i++) buc[x[i].fi]++;\n\t\tfor(int i=1;i<=vmax;i++) buc[i]+=buc[i-1];\n\t\tfor(int i=n;i;i--) sa[buc[x[seq[i]].fi]--]=seq[i];\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tif(x[sa[i]]!=x[sa[i-1]]) gr++;\n\t\t\trk[sa[i]]=gr;\n\t\t} vmax=gr;if(vmax==n) break;\n\t}\n}\nvoid getht(){\n\tint k=0;\n\tfor(int i=1;i<=n;i++){\n\t\tif(rk[i]==1) continue;if(k) --k;\n\t\tint j=sa[rk[i]-1];\n\t\twhile(i+k<=n&&j+k<=n&&a[i+k]==a[j+k]) k++;\n\t\tht[rk[i]]=k;\n\t}\n}\nvoid buildst(){\n\tfor(int i=1;i<=n;i++) st[i][0]=ht[i];\n\tfor(int i=1;i<=LOG_N;i++) for(int j=1;j+(1<<i)-1<=n;j++)\n\t\tst[j][i]=min(st[j][i-1],st[j+(1<<i-1)][i-1]);\n}\nint query(int l,int r){\n\tint k=log2(r-l+1);\n\treturn min(st[l][k],st[r-(1<<k)+1][k]);\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&a[i]),key[i]=a[i];\n\treverse(a+1,a+n+1);sort(key+1,key+n+1);\n\tfor(int i=1;i<=n;i++) if(key[i]!=key[i-1]) uni[++num]=key[i];\n\tfor(int i=1;i<=n;i++) a[i]=getpos(a[i]);\n\tgetsa();getht();buildst();set<int> st;st.insert(0);st.insert(n+1);\n\tfor(int i=n;i;i--){\n\t\tst.insert(rk[i]);\n\t\tset<int> ::iterator it=st.find(rk[i]);\n\t\tint pre=*--it;++it;\n\t\tint nxt=*++it;--it;\n//\t\tprintf(\"%d %d %d\\n\",pre,nxt,rk[i]);\n\t\tans-=query(pre+1,nxt);ans+=query(pre+1,rk[i]);ans+=query(rk[i]+1,nxt);\n\t\tprint(1ll*(n-i+1)*(n-i+2)/2-ans);putc(10);\n\t} print_final();\n\treturn 0;\n}\n```",
        "postTime": 1615107344,
        "uid": 115194,
        "name": "lTgMFePRoeZ",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4070\u3010[SDOI2016]\u751f\u6210\u9b54\u5492\u3011"
    },
    {
        "content": "\u9898\u76ee\u5927\u610f\uff1a\n\n\u6309\u987a\u5e8f\u5728\u4e00\u4e2a\u5e8f\u5217\u7684\u672b\u5c3e\u63d2\u5165\u6570\u5b57\uff0c\u6bcf\u6b21\u6c42\u51fa\u63d2\u5165\u540e\u80fd\u5f97\u5230\u7684\u672c\u8d28\u4e0d\u540c\u7684\u5b50\u4e32\u4e2a\u6570\u3002\n\n\u601d\u8def\uff1a\n\n\u6bcf\u6b21\u5728SAM\u540e\u52a0\u5165\u8fd9\u4e2a\u6570\u5b57\uff0c\u6bcf\u6b21\u65b0\u51fa\u73b0\u7684\u672c\u8d28\u4e0d\u540c\u7684\u5b50\u4e32\u4e2a\u6570\u5c31\u7b49\u4e8enew\\_p->len-new\\_p->link->len\u3002\n\n\u7531\u4e8e\u6570\u5b57\u8303\u56f4\u6bd4\u8f83\u5927\uff0c\u53ef\u4ee5\u8003\u8651\u79bb\u6563\u5316\u6216\u8005map\u3002\n\n\u4e8b\u5b9e\u4e0a\u4e5f\u53ef\u4ee5\u7528hash\uff0c\u4e0d\u8fc7\u5b9e\u8df5\u8bc1\u660e\u4f1a\u6bd4map\u8fd8\u6162\u5f88\u591a\uff0c\u5185\u5b58\u4e5f\u6d6a\u8d39\u5f88\u591a\u3002\n\n\u53e6\u5916\u9700\u8981\u6ce8\u610f\u5f00long long\u3002\n\n```cpp\n#include<map>\n#include<cstdio>\n#include<cctype>\ninline int getint() {\n    char ch;\n    while(!isdigit(ch=getchar()));\n    int x=ch^'0';\n    while(isdigit(ch=getchar())) x=(((x<<2)+x)<<1)+(ch^'0');\n    return x;\n}\nclass SuffixAutomaton {\n    private:\n        struct State {\n            State *link;\n            std::map<int,State*> go;\n            int len;\n            State(const int l) {\n                link=NULL;\n                len=l;\n            }\n        };\n        State *root,*last;\n        long long ans;\n        void extend(const int w) {\n            State *p=last,*new_p=new State(last->len+1);\n            while(p!=NULL&&!p->go.count(w)) {\n                p->go[w]=new_p;\n                p=p->link;\n            }\n            if(p==NULL) {\n                new_p->link=root;\n            } else {\n                State *q=p->go[w];\n                if(q->len==p->len+1) {\n                    new_p->link=q; \n                } else {\n                    State *new_q=new State(p->len+1);\n                    new_q->go=q->go;\n                    new_q->link=q->link;\n                    q->link=new_p->link=new_q;\n                    while(p!=NULL&&p->go[w]==q) {\n                        p->go[w]=new_q;\n                        p=p->link;\n                    }\n                }\n            }\n            last=new_p;\n            ans+=new_p->len-new_p->link->len;\n        }\n    public:\n        SuffixAutomaton() {\n            root=last=new State(0);\n        }\n        long long query(const int w) {\n            extend(w);\n            return ans;\n        }\n};\nSuffixAutomaton sam;\nint main() {\n    for(int n=getint();n;n--) printf(\"%lld\\n\",sam.query(getint()));\n    return 0;\n}\n```",
        "postTime": 1515905221,
        "uid": 10086,
        "name": "skylee",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4070 \u3010[SDOI2016]\u751f\u6210\u9b54\u5492\u3011"
    },
    {
        "content": "### [\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P4070)\n\n## $\\text{Description}$\n\n- \u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217\uff0c\u6c42\u672c\u8d28\u4e0d\u540c\u5b50\u4e32\u4e2a\u6570\u3002\n\n- \u5f3a\u5236\u5728\u7ebf\u3002\n\n## $\\text{Solution}$\n\n\u8003\u8651\u5230\u672c\u8d28\u4e0d\u540c\u5b50\u4e32\u8ba1\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u628a\u5e8f\u5217\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\u6765\u505a\u3002\n\n~~\u4e0d\u61c2\u6709\u6ca1\u6709 Hash \u505a\u6cd5\uff0c\u4f46\u6211\u6ca1\u80e1\u51fa\u6765\u3002~~\n\n\u7ef4\u62a4\u5b50\u4e32\u4fe1\u606f\uff0c\u5f88\u5bb9\u6613\u60f3\u5230 SAM\u3002\n\n\u4f46\u662f $x_i$ \u8303\u56f4\u5f88\u5927\u8bf6\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u5f00\u4e2a $2\\times 10^5\\times 10^9$ \u7684\u6570\u7ec4\u53bb\u8bb0\u5f55\u8f6c\u79fb\u3002\n\n\u4f46\u662f SAM \u6709\u6027\u8d28**\u72b6\u6001\u6570\u4e0d\u8d85\u8fc7 $2n-1$\uff0c\u8f6c\u79fb\u6570\u4e0d\u8d85\u8fc7 $3n-4$**\u3002\n\n\u56e0\u6b64\u76f4\u63a5\u5f00 map \u8bb0\u5f55\u5c31\u884c\u4e86\u3002\n\n~~\u7136\u540e\u6211\u4eec\u62d3\u6251\u6392\u4e00\u4e0b\u76f4\u63a5\u8dd1\u51fa\u6bcf\u4e2a\u70b9 $\\text{endpos}$ \u7b49\u4ef7\u7c7b\u5927\u5c0f\u5c31\u884c\u4e86\u3002~~\n\n\u554a\u8fd9\u662f\u5f3a\u5236\u5728\u7ebf\u7684\u554a\uff0c\u90a3\u6ca1\u4e8b\u4e86\u3002\n\n\u8003\u8651\u6bcf\u6b21\u65b0\u63d2\u5165\u4e00\u4e2a\u5b57\u7b26\u7684\u589e\u91cf\u3002\n\nSAM \u6709\u6027\u8d28\u6bcf\u4e2a\u7b49\u4ef7\u7c7b\u4e2d\u7684\u5b50\u4e32\u957f\u5ea6**\u6070\u597d\u8986\u76d6\u4e00\u4e2a\u6574\u6570\u533a\u95f4**\u3002\n\n\u4e8e\u662f\u6bcf\u6b21\u589e\u91cf\u5373\u4e3a $len_i-len_{link_i}$\uff0c\u5176\u4e2d $i$ \u8868\u793a\u65b0\u52a0\u7684\u72b6\u6001\u3002\n\n## $\\text{Code}$\n\n```cpp\nconst int N=2e6+5;\nint n;\n\nstruct Suffix_Automaton{\n\tint tot,lst,maxlen[N],minlen[N],link[N],siz[N],in[N];ll cntd;queue<int> q;map<int,int> to[N];\n\tSuffix_Automaton(){tot=lst=1;}\n\tinline void insert(int ch){\n\t\tre nw=++tot,p=lst;siz[nw]=1;maxlen[nw]=maxlen[lst]+1;\n\t\twhile(p&&!to[p][ch]) to[p][ch]=nw,p=link[p];\n\t\tif(!p) link[nw]=1;\n\t\telse{\n\t\t\tint t=to[p][ch];\n\t\t\tif(maxlen[p]+1==maxlen[t]) link[nw]=t;\n\t\t\telse{\n\t\t\t\tint cp=++tot;maxlen[cp]=maxlen[p]+1;to[cp]=to[t];\n\t\t\t\twhile(p&&to[p][ch]==t) to[p][ch]=cp,p=link[p];\n\t\t\t\tlink[cp]=link[t];link[t]=link[nw]=cp;\n\t\t\t}\n\t\t}\n\t\tlst=nw;cntd+=maxlen[nw]-maxlen[link[nw]];\n\t}\n\tinline void topo(){\n\t\tfor(re i=2;i<=tot;++i) ++in[link[i]];\n\t\tfor(re i=1;i<=tot;++i) if(!in[i]) q.push(i);\n\t\twhile(!q.empty()){\n\t\t\tint x=q.front();q.pop();\n\t\t\tsiz[link[x]]+=siz[x];\n\t\t\tif(!(--in[link[x]])) q.push(link[x]);\n\t\t}\n\t}\n\tinline ll count(){\n\t\t/*topo();return siz[1]-1;*/return cntd;\n\t}// \u539f\u4e32\u4e0d\u540c\u5b50\u4e32\u4e2a\u6570\n}SAM;\n\n// ---------- Suffix Automaton ---------- //\n\nint main(){\n//\tfreopen(\".in\",\"r\",stdin);\n//\tfreopen(\".out\",\"w\",stdout);\n\trd(n);\n\tfor(re i=1;i<=n;++i){int x;rd(x);SAM.insert(x);wr(SAM.count());puts(\"\");}\n\treturn 0;\n}\n\n// ---------- Main ---------- //\n\n```",
        "postTime": 1628250221,
        "uid": 83999,
        "name": "Demoe",
        "ccfLevel": 7,
        "title": "[SDOI2016]\u751f\u6210\u9b54\u5492 \u9898\u89e3 SAM"
    },
    {
        "content": "[\u9898\u9762\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P4070)\u3002\n\n> \u9898\u610f\uff1a\u95ee\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u6240\u6709\u524d\u7f00\u7684\u672c\u8d28\u4e0d\u540c\u5b50\u4e32\u4e2a\u6570\u3002\n\n\u53ef\u4ee5\u7b97\u662f\u4e00\u4e2a SAM \u7ec3\u624b\u9898\u5427\uff0c[\u4e0d\u4f1a SAM \u5148\u5f80\u8fd9\u8fb9\u8d70\u3002](https://www.luogu.com.cn/problem/P3804)\n\n---\n\n### $Solution:$\n\n\u6211\u4eec\u8003\u8651\u6bcf\u6b21\u628a\u4e00\u4e2a\u8282\u70b9\u4e22\u8fdb SAM \u6240\u4ea7\u751f\u7684\u8d21\u732e\u3002\n\n\u6839\u636e SAM \u7684\u6027\u8d28\uff0c\u6bcf\u6b21\u65b0\u589e\u4e00\u4e2a\u8282\u70b9 $p$\uff0c\u5b83\u7684\u8d21\u732e\u5b9e\u9645\u4e0a\u5c31\u662f $len_p - minlen_p + 1$\uff0c\u53c8\u6709 $minlen_p = len_{fail_p} + 1$\uff0c\u4e8e\u662f\u6bcf\u6b21\u591a\u4e00\u4e2a\u8282\u70b9\u7684\u65f6\u5019\u52a0\u4e0a $len_p - len_{fail_p}$ \u5373\u53ef\u3002\n\n\u5f88\u663e\u7136 SAM \u662f\u4e2a\u5728\u7ebf\u7b97\u6cd5\uff0c\u56e0\u6b64\u53ef\u4ee5\u8fd9\u4e48\u641e\u3002\n\n\u6ce8\u610f\u5230\u672c\u9898\u5b57\u7b26\u96c6\u5f88\u5927\uff0c\u56e0\u6b64\u9700\u8981\u7528 `map` \u6765\u5b58 `nxt` \u6570\u7ec4\u3002\n\nover\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log n)$\uff0c$\\log$ \u4e3a map \u7684\u590d\u6742\u5ea6\u3002\n\n### $Code:$\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <cmath>\n#include <vector>\n#include <queue>\n#include <map>\n#include <set>\nusing namespace std;\n#define ll long long\n#define ull unsigned long long\n#define fi first\n#define se second\n#define dingyi int mid = l + r >> 1, ls = p << 1, rs = p << 1 | 1\n#define y0 y_csyakioi_0\n#define y1 y_csyakioi_1\n#define rep(i, x, y) for(int i = x; i <= y; ++i)\n#define per(i, x, y) for(int i = x; i >= y; --i)\n#define repn(i, x, y, z) for(int i = x; i <= y; i += z)\n#define pern(i, x, y, z) for(int i = x; i >= y; i -= z)\ninline int read(){\n\tint x = 0, f = 1; char ch = getchar();\n\twhile(ch < '0' || ch > '9'){ if(ch == '-') f = -1; ch = getchar(); }\n\twhile(ch >= '0' && ch <= '9'){ x = x * 10 + (ch ^ 48); ch = getchar(); }\n\treturn x * f;\n}\nconst int N = 200010;\nint n, len[N], fail[N], tail, tot, a[N];\nmap <int, int> nxt[N]; ll ans;\ninline void SAMinit(){ fail[0] = -1; tail = tot = 0; }\ninline void SAMadd(int c){\n\tlen[++tot] = len[tail] + 1; int p = tail; tail = tot;\n\tfor(; p != -1 && !nxt[p][c]; p = fail[p]) nxt[p][c] = tail;\n\tif(p == -1){ fail[tail] = 0; ans += len[tail] - len[fail[tail]]; return; } int q = nxt[p][c];\n\tif(len[q] == len[p] + 1){ fail[tail] = q; ans += len[tail] - len[fail[tail]]; return; }\n\tlen[++tot] = len[p] + 1; fail[tot] = fail[q]; nxt[tot] = nxt[q];\n\tfor(; p != -1 && nxt[p][c] == q; p = fail[p]) nxt[p][c] = tot;\n\tfail[tail] = fail[q] = tot; ans += len[tail] - len[fail[tail]];\n}\ninline void mian(){\n\tn = read(); rep(i, 1, n) a[i] = read(); SAMinit();\n\trep(i, 1, n){ SAMadd(a[i]); printf(\"%lld\\n\", ans); }\n}\nsigned main(){ int qwq = 1; while(qwq--) mian(); return 0; }\n```\n",
        "postTime": 1609218073,
        "uid": 147999,
        "name": "Warriors_Cat",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4070 \u3010[SDOI2016]\u751f\u6210\u9b54\u5492\u3011"
    },
    {
        "content": "\u9996\u5148\u4e00\u4e2a\u4e32\u7684\u4e0d\u76f8\u540c\u5b57\u4e32\u4e2a\u6570\u4e3a $\\sum\\limits_{i=1}^n n-i-height_i+1$\uff0c\u6bd4\u8f83\u5bb9\u6613\u7406\u89e3\u3002\n\n\u53d1\u73b0\u8fd9\u4e2a\u5728\u540e\u9762\u52a0\u5b57\u7b26\u5bf9\u4e8e\u540e\u7f00\u6570\u7ec4\u975e\u5e38\u4e0d\u53cb\u597d\uff0c\u4e8e\u662f\u8003\u8651\u628a\u6574\u4e2a\u4e32\u53cd\u8f6c\uff0c\u7136\u540e\u518d\u628a\u6dfb\u52a0\u64cd\u4f5c\u53cd\u8fc7\u6765\u770b\u6210\u662f\u5220\u9664\u64cd\u4f5c\uff0c\u90a3\u4e48\u53ef\u4ee5\u770b\u6210\u6bcf\u6b21\u5220\u9664\u4e00\u4e2a\u540e\u7f00\uff0c\u8fd9\u4e2a\u53ea\u4f1a\u5bf9\u4e00\u4e2a\u4f4d\u7f6e\u7684 height \u6570\u7ec4\u4ea7\u751f\u5f71\u54cd\uff0c\u7528\u4e00\u4e2a\u94fe\u8868\u6765\u7ef4\u62a4\u3002\n\n```cpp\n#include <bits/stdc++.h>\n\n#define mp std::make_pair\n#define pb push_back\n\ntypedef long long LL;\n\nconst int MAXN = 1e5;\n\nint n;\nint a[MAXN | 1], b[MAXN | 1], L[MAXN | 1], R[MAXN | 1];\nLL ans[MAXN | 1];\n\ninline int read() {\n  register int x = 0, v = 1;\n  register char ch = getchar();\n  while (!isdigit(ch)) {\n    if (ch == '-') v = -1;\n    ch = getchar();\n  }\n  while (isdigit(ch)) {\n    x = x * 10 + ch - '0';\n    ch = getchar();\n  }\n  return x * v;\n}\n\nnamespace SA {\n  int tax[MAXN | 1], rnk[MAXN | 1], tp[MAXN | 1], height[MAXN | 1], sa[MAXN | 1];\n  void Q_sort(int lim) {\n    for (int i = 1; i <= lim; ++i) tax[i] = 0;\n    for (int i = 1; i <= n; ++i) ++tax[rnk[i]];\n    for (int i = 1; i <= lim; ++i) tax[i] += tax[i - 1];\n    for (int i = n; i >= 1; --i) sa[tax[rnk[tp[i]]]--] = tp[i];\n  }\n  void get_SA() {\n    int m = n;\n    for (int i = 1; i <= n; ++i) {\n      rnk[i] = a[i];\n      tp[i] = i;\n    }\n    Q_sort(m);\n    for (int w = 1, p = 0; p < n; m = p, w <<= 1) {\n      p = 0;\n      for (int i = 1; i <= w; ++i) tp[++p] = n - i + 1;\n      for (int i = 1; i <= n; ++i) if (sa[i] > w) tp[++p] = sa[i] - w;\n      Q_sort(m);\n      std::swap(rnk, tp);\n      rnk[sa[1]] = p = 1;\n      for (int i = 2; i <= n; ++i) \n        rnk[sa[i]] = (tp[sa[i - 1]] == tp[sa[i]] && tp[sa[i - 1] + w] == tp[sa[i] + w]) ? p : ++p;\n    }\n  }\n  void get_HE() {\n    for (int i = 1; i <= n; ++i) {\n      int j = height[rnk[i - 1]];\n      if (j) --j;\n      while (a[sa[rnk[i] - 1] + j] == a[i + j]) ++j;\n      height[rnk[i]] = j;\n    }\n  }\n}\n\nusing namespace SA;\n\nint main() \n  n = read();\n  for (int i = n; i >= 1; --i) a[i] = b[i] = read();\n  std::sort(b + 1, b + 1 + n);\n  int m = std::unique(b + 1, b + 1 + n) - b - 1;\n  for (int i = 1; i <= n; ++i) a[i] = std::lower_bound(b + 1, b + 1 + m, a[i]) - b;\n  get_SA();\n  get_HE();\n  for (int i = 1; i <= n; ++i) {\n    if (i > 1) L[i] = i - 1;\n    if (i < n) R[i] = i + 1;\n    ans[1] += n - sa[i] - height[i] + 1;\n  }\n  int Lest = 1;\n  for (int i = 1; i < n; ++i) {\n    int tmp = rnk[i];\n    ans[i + 1] = ans[i] - (n - i + 1 - height[tmp]) - (n - sa[R[tmp]] - height[R[tmp]] + 1);\n    height[R[tmp]] = std::min(height[R[tmp]], height[tmp]);\n    ans[i + 1] += n - sa[R[tmp]] - height[R[tmp]] + 1;\n    if (tmp > 1) R[L[tmp]] = R[tmp];\n    else Lest = R[tmp];\n    if (tmp < n) L[R[tmp]] = L[tmp];\n    L[tmp] = R[tmp] = 0;\n  }\n  for (int i = n; i >= 1; --i) printf(\"%lld\\n\", ans[i]);\n  return 0;\n}\n```\n",
        "postTime": 1600866025,
        "uid": 24878,
        "name": "iodwad",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P4070 \u3010[SDOI2016]\u751f\u6210\u9b54\u5492\u3011"
    },
    {
        "content": "\u6c42\u672c\u8d28\u4e0d\u540c\u5b57\u4e32\u4e2a\u6570\u3002\n\n\u867d\u7136\u6709\u540e\u7f00\u6570\u7ec4\u7684\u6807\u7b7e\uff0c\u4f46\u662f\u8fd9\u79cd\u52a8\u6001\u6dfb\u52a0\u5b57\u7b26\u7684\u64cd\u4f5c\u6700\u597d\u7528SAM\u3002\n\n---\n\nSAM\u4e2d\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u4ee3\u8868\u4e86\u4e00\u4e2a\u7b49\u4ef7\u7c7b\uff0c\u800c\u4e00\u4e2a\u7b49\u4ef7\u7c7b\u662f\u5728\u539f\u4e32 $s$ \u4e2d\u7ed3\u675f\u4f4d\u7f6e\uff08\u5373 $endpos(t)$ ) \u76f8\u540c\u7684\u5b57\u4e32 $t$ \u7684\u96c6\u5408\u3002\n\n\u5bb9\u6613\u5f97\u77e5\uff1aSAM\u4e2d\u4efb\u610f\u4e24\u4e2a\u8282\u70b9\u4ee3\u8868\u7684\u7b49\u4ef7\u7c7b\u6ca1\u6709\u4ea4\u96c6\uff0c\u4e14\u5176\u5e76\u96c6\u4e3a\u539f\u4e32 $s$ \u6240\u6709\u5b57\u4e32\u6784\u6210\u7684\u96c6\u5408\u3002\n\n\u5bf9\u4e8eSAM\u4e2d\u7684\u4e00\u4e2a\u72b6\u6001 $v$ \uff0c\u5b83\u4ee3\u8868\u4e86\u4e00\u4e2a\u7b49\u4ef7\u7c7b\u3002\u8bb0 $len(v)$ \u4e3a\u5176\u4e2d**\u6700\u957f**\u7684\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff0c\u8bb0 $minlen(v)$ \u4e3a**\u6700\u77ed**\u7684\u5b50\u4e32\u7684\u957f\u5ea6\u3002\u5219\u8fd9\u4e2a\u7b49\u4ef7\u7c7b\u4e2d\u7684\u5143\u7d20\u4e2a\u6570\u4e3a $len(v)-minlen(v)$ \u3002\u7531SAM\u7684\u6027\u8d28\u53ef\u77e5\uff1a $minlen(v)=len(link(v))$ \u3002\n\n\u5219\u672c\u8d28\u4e0d\u540c\u5b57\u4e32\u4e2a\u6570\u4e3a\uff1a\n\n$$\n\\sum_{v \\in SAM} len(v)-len(link(v))\n$$\n\n\u6bcf\u6b21\u6dfb\u52a0\u4e00\u4e2a\u5b57\u7b26\u540e\u90fd\u91cd\u65b0\u8ba1\u7b97\u7b54\u6848\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $O(n^2)$\uff0c\u53ea\u670960pt\u3002\n\n\u5728\u6539\u53d8 $link(v)$ \u65f6\u66f4\u65b0\u7b54\u6848\uff0c $O(n)$ \u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u3002\n\n---\n\n\u7531\u4e8e\u5b57\u7b26\u96c6 $|\\Sigma|$ \u6709 $10^9$ \uff0c\u6240\u4ee5\u7528 ${\\rm{map}}$ \u6765\u5b58\u8fb9\u3002\n\nCode\uff1a\n\n```cpp\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <map>\n#define maxn 100005\n#define R register\n#define INF 0x3f3f3f3f\nusing namespace std;\ntypedef long long lxl;\n\ninline int read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9') {if(ch=='-') f=-1;ch=getchar();}\n\twhile(ch>='0'&&ch<='9') {x=(x<<1)+(x<<3)+ch-'0';ch=getchar();}\n\treturn x*f;\n}\n\nint n;\nint las=1,tot=1;\nlxl ans;\n\nstruct state\n{\n\tint len,link;\n\tstd::map<int, int> mp;\n}S[maxn<<1];\n\ninline void insert(int c)\n{\n\tint p=las,np=las=++tot;\n\tS[np].len=S[p].len+1;\n\twhile(p&&!S[p].mp[c]) S[p].mp[c]=np,p=S[p].link;\n\tif(!p) S[np].link=1,ans+=1ll*(S[np].len-S[S[np].link].len);\n\telse\n\t{\n\t\tint q=S[p].mp[c];\n\t\tif(S[q].len==S[p].len+1) S[np].link=q,ans+=1ll*(S[np].len-S[S[np].link].len);\n\t\telse\n\t\t{\n\t\t\tint nq=++tot;\n\t\t\tS[nq]=S[q];\n\t\t\tS[nq].len=S[p].len+1;\n\t\t\tans+=(S[nq].len-S[S[nq].link].len);\n\t\t\tans+=(S[S[q].link].len-S[q].len);\n\t\t\tS[q].link=S[np].link=nq;\n\t\t\tans+=(S[q].len-S[S[q].link].len);\n\t\t\tans+=(S[np].len-S[S[np].link].len);\n\t\t\twhile(p&&S[p].mp[c]==q) S[p].mp[c]=nq,p=S[p].link;\n\t\t}\n\t}\n}\n\nint main()\n{\n\tn=read();\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tinsert(read());\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}\n\n```\n",
        "postTime": 1595598912,
        "uid": 224236,
        "name": "GoPoux4",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4070 \u3010[SDOI2016]\u751f\u6210\u9b54\u5492\u3011"
    },
    {
        "content": "\u55ef\uff1f\u9898\u76ee\u201c\u5f3a\u5236\u201d\u5728\u7ebf\n\n\u90a3\u5c31\u4f7f\u7528\u5728\u7ebf\u7684**SAM**\u5427\n\n\u5728\u63d2\u5165\u4e00\u4e2a\u5b57\u7b26\u65f6\uff0c\u4ea7\u751f\u7684\u65b0\u7684\u5b50\u4e32\u53ea\u6709\u65b0\u63d2\u5165\u8282\u70b9\u7684\u5404\u4e2a**\u524d\u7f00**\n\n\u5728\u65b0\u52a0\u5165\u8282\u70b9\u65f6\uff0c\u8fd9\u4e2a\u8282\u70b9\u7684$endpos$\u663e\u7136**\u53ea\u6709\u4ed6\u81ea\u5df1**\n\n\u4e0d\u5149\u662f\u8fd9\u6837\uff0c\u6bd4**\u8fd9\u4e2a\u8282\u70b9\u6240\u8868\u793a\u7684\u540e\u7f00**\u77ed1\u4e2a\u5b57\u7b26\u7684**\u540e\u7f00**$endpos$\u4e5f\u53ea\u6709\u4ed6\u81ea\u5df1\uff1b\u77ed2\u4e2a\u5b57\u7b26\u7684\u540c\u6837\u6210\u7acb\uff0c\u77ed3\u4e2a\u5b57\u7b26\u7684\u540c\u6837\u6210\u7acb\u2026\u2026\n\n\u5f88\u660e\u663e\uff0c\u4ee5\u4e0a\u7684\u8fd9\u4e9b\u540e\u7f00\u90fd\u662f\u52a0\u5165\u4e00\u4e2a\u5b57\u7b26\u540e\u4ea7\u751f\u7684**\u65b0\u7684\u3001\u4e0d\u91cd\u590d\u7684**\u5b50\u4e32\uff0c\u4e5f\u5c31\u662f\u7b54\u6848\u8981\u6c42\u7684\u5b50\u4e32\n\n\u5f53**\u6240\u679a\u4e3e\u7684\u540e\u7f00**\u6bd4**\u65b0\u5efa\u8282\u70b9\u8868\u793a\u7684\u540e\u7f00**\u77ed$len[newnode] - len[link[newnode]]$\u65f6\uff0c\u53d1\u73b0\u6b64\u65f6\u8be5\u540e\u7f00\u7684$endpos$**\u4e0d\u53ea\u6709\u81ea\u5df1**\u4e86\uff0c\u5230\u6b64\u4e3a\u6b62\n\n\u90a3\u4e48\uff0c\u6bcf\u52a0\u5165\u4e00\u4e2a\u5b57\u7b26\uff0c\u5c31\u4ea7\u751f\u4e86$len[newnode] - len[link[newnode]]$\u4e2a\u65b0\u7684\u5b50\u4e32\n\n\u5168\u90e8\u4ee3\u7801\uff1a\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define M 1000005\n\ninline int read()\n{\n\tint x = 0, f = 1; char ch = getchar();\n\twhile (!isdigit(ch)) { if (ch == '-') f = -1; ch = getchar(); }\n\twhile (isdigit(ch)) { (x *= 10) += ch - '0'; ch = getchar(); }\n\treturn x * f;\n}\n\nint n, last = 1, cnt = 1;\nint link[M], len[M], siz[M], a[M], c[M];\n\nmap<int, int> ch[M];\n\nlong long ans;\nchar s[M];\n\ninline void extend(int c)\n{\n\tint p = last, cur = ++cnt; last = cur;\n\tlen[cur] = len[p] + 1, siz[cur] = 1;\n\twhile (p && !ch[p].count(c)) ch[p][c] = cur, p = link[p];\n\tif (!p)\n\t{\n\t\tlink[cur] = 1;\n\t}\n\telse\n\t{\n\t\tint q = ch[p][c];\n\t\tif (len[q] == len[p] + 1)\n\t\t{\n\t\t\tlink[cur] = q;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint clone = ++cnt;\n\t\t\tch[clone] = ch[q];\n\t\t\tlen[clone] = len[p] + 1, link[clone] = link[q], link[q] = link[cur] = clone;\n\t\t\twhile (p && ch[p][c] == q) ch[p][c] = clone, p = link[p];\n\t\t}\n\t}\n\tans += len[cur] - len[link[cur]]; // \u5728\u8fd9\u91cc\u66f4\u65b0ans\n}\n\nsigned main()\n{\n\tint n = read();\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\textend(read());\n\t\tprintf(\"%lld\\n\", ans);\n\t}\n\n  return 0;\n}",
        "postTime": 1581565759,
        "uid": 150218,
        "name": "MikeDuke",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P4070 \u3010[SDOI2016]\u751f\u6210\u9b54\u5492\u3011"
    },
    {
        "content": "[\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P4070)\n\n\u540e\u7f00\u6811\u7ec4\u89e3\u6cd5~\n\n## Desprition\n\n\u6bcf\u6b21\u5728\u5b57\u7b26\u4e32\u672b\u5c3e\u6dfb\u52a0\u4e00\u4e2a\u5b57\u7b26\uff0c\u6c42\u65b0\u5b57\u7b26\u4e32\u7684\u4e0d\u540c\u5b50\u4e32\u7684\u4e2a\u6570\u3002\n\n## Solution\n\n\u5982\u679c\u6ca1\u505a\u8fc7[P2408](https://www.luogu.com.cn/problem/P2408)\u7684\u53ef\u4ee5\u5148\u53bb\u5eb7\u5eb7\u90a3\u9053\u9898\u3002\n\n\u8fd9\u5957\u9898\u5176\u5b9e\u5c31\u662f P2408 \u7684\u52a0\u5f3a\u7248\uff0c\u591a\u4e86\u4e00\u4e2a**\u52a0\u64cd\u4f5c**\u3002\n\n\u56e0\u4e3a\u662f\u7528\u540e\u7f00\u6570\u7ec4\u505a\uff0c\u5982\u679c\u6211\u4eec\u6bcf\u6b21\u5728\u672b\u5c3e\u6dfb\u52a0\u4e00\u4e2a\u5b57\u7b26\uff0c\u5c31\u76f8\u5f53\u4e8e\u5728\u6539\u53d8\u4e86\u6bcf\u4e2a\u540e\u7f00\u7684\u57fa\u7840\u4e0a\u518d\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b0\u540e\u7f00\uff0c\u8fd9\u6837\u7684\u7b97\u6cd5\u663e\u7136\u662f\u4e0d\u7406\u60f3\u7684\u3002\n\n\u6240\u4ee5\u6211\u4eec\u8003\u8651**\u9006\u64cd\u4f5c**\uff0c\u6bcf\u6b21\u8981\u5728\u672b\u5c3e\u52a0\uff0c\u6211\u4eec\u5c31\u53cd\u5176\u9053\u800c\u884c\u4e4b\uff0c\u628a\u5b83\u52a0\u5728**\u5f00\u5934**\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u6bcf\u6b21**\u53ea\u4f1a\u591a\u589e\u52a0\u4e00\u4e2a\u65b0\u540e\u7f00\u800c\u4e0d\u4f1a\u5bf9\u5176\u4ed6\u540e\u7f00\u9020\u6210\u5f71\u54cd**\u3002\u4ee5\u6b64\u7c7b\u63a8\uff0c\u5982\u679c\u6211\u4eec\u80fd\u5c06\u672b\u5c3e\u7684\u4fee\u6539\u64cd\u4f5c\u8f6c\u5316\u4e3a\u5728\u5f00\u5934\u7684\u4fee\u6539\u64cd\u4f5c\uff0c\u5c31\u53ef\u4ee5\u8fbe\u5230\u4f18\u5316\u7684\u6548\u679c\u3002\n\n\u90a3\u4e48\uff0c\u5728\u8f6c\u4e00\u8f6c\u806a\u660e\u7684\u5c0f\u8111\u888b\u74dc\uff0c\u4f60\u4f1a\u53d1\u73b0\uff1a\u5982\u679c\u6211\u4eec\u5c06\u5e8f\u5217**\u7ffb\u8f6c**\u8fc7\u6765\uff0c\u6bcf\u6b21\u5220\u6389\u5f00\u5934\u7684\u5b57\u7b26\uff0c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u9006\u64cd\u4f5c\u4e86\uff0c\u662f\u4e0d\u662f\u5f88\u795e\uff08$bai$\uff09\u5947\uff08$chi$\uff09?\n\n\n\u7ee7\u7eed\u8003\u8651\u5982\u4f55\u5b9e\u73b0\u5220\u9664\u64cd\u4f5c\u3002\n\n\u9996\u5148\u4e86\u89e3\uff1a\n\n> \u6240\u6709\u540e\u7f00\u7684\u524d\u7f00\u7684\u96c6\u5408\u5c31\u662f\u8be5\u5b57\u7b26\u4e32\u7684\u5b50\u4e32\u96c6\u5408\u3002\n\n\n\u56e0\u6b64\uff0c\u4e00\u4e2a\u540e\u7f00\u5bf9\u7b54\u6848\u9020\u6210\u7684\u5f71\u54cd\u5176\u5b9e\u5c31\u662f\u4ed6\u7684\u524d\u7f00\u548c\uff0c\u4f46\u662f\u9700\u8981\u9664\u53bb\u5b83\u4e0e\u5b83\u5728\u6309**\u5b57\u5178\u5e8f\u6392\u5e8f\u540e**\u7684\u540e\u9762\u4e00\u4e2a\u540e\u7f00\u7684**\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217**\u7684\u957f\u5ea6\uff08\u56e0\u4e3a\u516c\u5171\u7684\u90a3\u4e00\u90e8\u5206\u53e6\u4e00\u4e2a\u540e\u7f00\u4e5f\u51fa\u73b0\u4e86\uff0c\u6240\u4ee5\u4e0d\u80fd\u591a\u51cf\uff09\u3002\n\n\u4f46\u662f\u6211\u4eec\u5728\u64cd\u4f5c\u8fc7\u7a0b\u4e2d\u9700\u8981\u8bb0\u5f55\u5f53\u524d\u540e\u7f00\u524d\u9762\u548c\u540e\u9762\u7684\u540e\u7f00\u4fe1\u606f\uff0c\u6240\u4ee5\u9700\u8981\u7528\u5230\u4e24\u4e2a\u6570\u7ec4 $u[i]$ \u548c $d[i]$ \u8bb0\u5f55\u4e0a\u4e0b\u8fb9\u754c\u7684\u7f16\u53f7\u3002\n\n\u6700\u540e\u5c31\u662f\u5177\u4f53\u7684\u5220\u9664\u64cd\u4f5c\u4e86\uff1a\n\n\u4e3a\u8868\u793a\u65b9\u4fbf\uff0c\u540e\u6587\u5c06**\u5f53\u524d\u8981\u5220\u9664\u7684\u540e\u7f00**\u8868\u793a\u4e3a $x$ \uff0c $x$ \u7684**\u4e0b\u5c4a**\u8868\u793a\u4e3a $y$\u3002\n\n\u56e0\u4e3a\u5220\u8fb9\u9020\u6210\u7684\u5f71\u54cd\u4e0e $x$ \u548c $y$ \u6709\u5173\uff0c\u7136\u800c\u5220\u9664 $x$ \u540e\uff0c $y$ \u7684\u4e0a\u754c\u4fe1\u606f\u4e5f\u4f1a\u53d1\u751f\u6539\u53d8\uff0c\u6240\u4ee5\u53ef\u80fd\u4f1a\u9020\u6210 $height_{rk_y}$ \u7684\u53d8\u5316\uff0c\u56e0\u6b64\u8981\u5148\u5c06 $x$ \u548c $y$ \u5bf9\u7b54\u6848\u7684\u8d21\u732e\u90fd\u5220\u53bb\uff0c\u7ee7\u800c\u66f4\u65b0 $height_{rk_y}$ \u7684\u5927\u5c0f\uff0c\u6700\u540e\u518d\u52a0\u56de $y$ \u7684\u8d21\u732e\uff0c\u66f4\u65b0\u4e0e $x$ \u76f8\u5173\u7684\u4e0a\u4e0b\u754c\u4fe1\u606f\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u770b\u4ee3\u7801\uff0c\u6709\u8be6\u7ec6\u6ce8\u91ca\u7684\u5566~\n\n\u8fd8\u6709\u5c31\u662f\u56e0\u4e3a\u6570\u636e\u8303\u56f4\u592a\u8fc7\u6bd2\u7624\uff0c\u5c31\u5f97\u8981\u5148**\u79bb\u6563\u5316**\u54e6\uff01\n\n## Code\n\n```cpp\n#include<cstdio>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\n#define ll long long\n#define il inline\nconst int N = 1e5 + 5;\nint n,m,s[N],sa[N],b[N],rk[N],height[N],cnt[N],x[N],y[N],u[N],d[N];\nll ans[N],res;\nil void getsa() {//\u6a21\u677f \n\tint i,k,j,num;\n\tfor(i = 1; i <= n; i ++) cnt[x[i] = s[i]] ++;\n\tfor(i = 2; i <= m; i ++) cnt[i] += cnt[i - 1];\n\tfor(i = n; i; i --) sa[cnt[x[i]]--] = i;\n\tfor(k = 1; k <= n; k <<= 1) {\n\t\tnum = 0;\n\t\tfor(i = n - k + 1; i <= n; i ++) y[++num] = i;\n\t\tfor(i = 1; i <= n; i ++) {\n\t\t\tif(sa[i] > k) y[++num] = sa[i] - k;\n\t\t}\n\t\tfor(i = 1; i <= m; i ++) cnt[i] = 0;\n\t\tfor(i = 1; i <= n; i ++) cnt[x[i]] ++;\n\t\tfor(i = 2; i <= m; i ++) cnt[i] += cnt[i - 1];\n\t\tfor(i = n; i; i --) sa[cnt[x[y[i]]]--] = y[i], y[i] = 0;\n\t\tswap(x,y);\n\t\tx[sa[1]] = num = 1;\n\t\tfor(i = 2; i <= n; i ++) {\n\t\t\tx[sa[i]] = (y[sa[i]] == y[sa[i - 1]] && y[sa[i] + k] == y[sa[i - 1] + k]) ? num : ++num;\n\t\t}\n\t\tif(num == n) break;\n\t\tm = num;\n\t}\n} \nil void get_height() {//\u8fd8\u662f\u6a21\u677f\n\tint i,j,k;\n\tfor(i = 1; i <= n; i ++) rk[sa[i]] = i;\n\tfor(i = 1, k = 0; i <= n; i ++) {\n\t\tif(rk[i] == 1) continue;\n\t\tif(k) k--;\n\t\tj = sa[rk[i] - 1];\n\t\twhile(i + k <= n && j + k <= n && s[i + k] == s[j + k]) k ++;\n\t\theight[rk[i]] = k;\n\t}\n}\nil void read(int &x) {\n\tx = 0;\n\tchar  c = getchar();\n\twhile(c < '0' || c > '9') c = getchar();\n\twhile(c <= '9' && c >= '0') x = x * 10 + c - '0', c = getchar();\n} \nil void write(ll x) {\n\tif(x < 0) {x = -x; putchar('-');};\n\tif(x > 9) write(x / 10);\n\tputchar(x % 10 + '0');\n}\nint main() {\n\tint i,j,k;\n\tread(n);\n\tfor(i = n; i; i --) read(s[i]), b[i] = s[i];\n\tsort(b + 1,b + 1 + n);\n\tm = unique(b + 1,b + 1 + n) - b - 1;\n\tfor(i = n; i; i --) s[i] = lower_bound(b + 1,b + 1 + m,s[i]) - b;//\u79bb\u6563\u5316 \n\tgetsa(), get_height();\n\tfor(i = 1; i <= n; i ++) {\n\t\tres += n - sa[i] + 1 - height[i];//\u5148\u7b97\u51fa\u603b\u503c \n\t\tu[i] = i - 1, d[i] = i + 1;//\u5f53\u524d\u540e\u7f00\u7684\u4e0a\u4e0b\u754c\uff0c\u4e5f\u5c31\u662f\u5b83\u4e0a\u9762\u7684\u540e\u7f00\u7f16\u53f7\uff0c\u548c\u4e0b\u9762\u7684\u7f16\u53f7 \n\t}\n\td[0] = 1, u[n + 1] = n;//\u521d\u59cb\u5316 \n\tfor(i = 1; i <= n; i ++) {//\u5f00\u59cb\u5220\u8fb9 \n\t\tans[i] = res;//\u5b58\u503c \n\t\tk = rk[i], j = d[k];//\u5220\u8fb9\u9020\u6210\u7684\u5f71\u54cd\u4e0e\u5b83\u81ea\u5df1\u548c\u5b83\u7684\u4e0b\u5c4a\u6709\u5173\u3002 \n\t\tres -= n - sa[k] + 1 - height[k];//\u51cf\u53bb\u4e24\u4e2a\u7684\u5f71\u54cd \n\t\tres -= n - sa[j] + 1 - height[j];//\n\t\theight[j] = min(height[j],height[k]);//\u91cd\u65b0\u7ed9\u4e0b\u754c\u7684height\u8d4b\u503c \n\t\tres += n - sa[j] + 1 - height[j];//\u8bb0\u5f97\u52a0\u56de\u6765 \n\t\td[u[k]] = d[k], u[d[k]] = u[k];//\u56e0\u4e3a\u5220\u9664\u64cd\u4f5c\uff0c\u6240\u4ee5\u5f53\u524d\u4e0b\u5c4a\u7684\u4e0a\u5c4a\u5c31\u662f\u5f53\u524d\u4e0a\u5c4a\uff0c\u5f53\u524d\u4e0a\u5c4a\u7684\u4e0b\u754c\u5c31\u662f\u5f53\u524d\u4e0b\u754c \n\t}\n\tfor(i = n; i; i --) write(ans[i]),puts(\"\");//\u53cd\u5411\u64cd\u4f5c \n\treturn 0;\n}\n\n```\n\n",
        "postTime": 1614689612,
        "uid": 140643,
        "name": "crescentic",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4070 \u3010[SDOI2016]\u751f\u6210\u9b54\u5492\u3011"
    },
    {
        "content": "$SAM$ \u677f\u5b50\u9898\u3002\n\n\u5982\u679c\u4f1a $SAM$ \u7684\u8bdd\u5f88\u5bb9\u6613\u5f97\u5230 $ans=\\sum len_i-len_{fail_i}$ \u3002\n\n\u7531\u4e8e $SAM$ \u662f\u5728\u7ebf\u4f7f\u7528\u589e\u91cf\u6cd5\u6784\u9020\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u6bcf\u65b0\u5efa\u4e00\u6b21\u7ed3\u70b9\uff0c\u5904\u7406\u5b8c\u5b83\u7684 $fail$ \u6307\u9488\u540e\u5c31\u628a\u5f53\u524d\u7684\u7b54\u6848\u52a0\u4e0a\u8fd9\u4e2a\u7ed3\u70b9\u7684\u8d21\u732e\u3002\u8981\u66f4\u6539\u4e00\u4e2a\u8282\u70b9\u7684 $fail$ \u6307\u9488\u65f6\uff0c\u5148\u51cf\u53bb\u5b83\u539f\u6765\u7684\u8d21\u732e\uff0c\u66f4\u6539\u540e\u518d\u52a0\u4e0a\u65b0\u7684\u8d21\u732e\uff0c\u6700\u540e\u8f93\u51fa\u7b54\u6848\u5373\u53ef\u3002\n\n$\\sf{Code}$\n\n```cpp\n#include<bits/stdc++.h>\n#define PI acos(-1)\n#define N 201001\n#define MAX 100015\n#define re register\n#define inf 1e18\nusing namespace std;\ntypedef long long ll;\ntypedef double db;\nconst ll mod=1000000007,maxn=10000000000; \ninline void read(re ll &ret)\n{\n    ret=0;re char c=getchar();re bool pd=false;\n    while(!isdigit(c)){pd|=c=='-';c=getchar();}\n    while(isdigit(c)){ret=(ret<<1)+(ret<<3)+(c&15);c=getchar();}\n    ret=pd?-ret:ret;\n    return;\n}\nll n,a[N],las,cnt,ans;\nstruct node\n{\n\tll len,fail;\n\tmap<ll,ll>nxt;\n}sam[N];\nsigned main()\n{\n\tread(n);\n\tsam[las].len=0,sam[las].fail=-1;\n\tfor(re int i=1;i<=n;i++)\n\t{\n\t\tread(a[i]);\n\t\tre ll now=++cnt;\n\t\tsam[now].len=sam[las].len+1;\n\t\twhile(las!=-1&&sam[las].nxt.find(a[i])==sam[las].nxt.end())\n\t\t{\n\t\t\tsam[las].nxt[a[i]]=now;\n\t\t\tlas=sam[las].fail;\n\t\t}\n\t\tif(las==-1)\n\t\t{\n\t\t\tsam[now].fail=0;\n\t\t\tlas=now;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tre ll p=las,q=sam[las].nxt.find(a[i])->second;\n\t\t\tif(sam[q].len==sam[p].len+1)\n\t\t\t{\n\t\t\t\tsam[now].fail=q;\n\t\t\t\tlas=now;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tre ll tmp=++cnt;\n\t\t\t\tsam[tmp]=sam[q];\n\t\t\t\tsam[tmp].len=sam[las].len+1;\n\t\t\t\tsam[now].fail=tmp;\n\t\t\t\tans-=sam[q].len-sam[sam[q].fail].len;\n\t\t\t\tsam[q].fail=tmp;\n\t\t\t\tans+=sam[q].len-sam[sam[q].fail].len;\n\t\t\t\tans+=sam[tmp].len-sam[sam[tmp].fail].len;\n\t\t\t\twhile(las!=-1&&sam[las].nxt.find(a[i])->second==q)\n\t\t\t\t{\n\t\t\t\t\tsam[las].nxt[a[i]]=tmp;\n\t\t\t\t\tlas=sam[las].fail;\n\t\t\t\t}\n\t\t\t\tlas=now;\n\t\t\t}\n\t\t}\n\t\tans+=sam[now].len-sam[sam[now].fail].len;\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\texit(0);\n}\n```\n",
        "postTime": 1611911282,
        "uid": 176990,
        "name": "Celtic",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4070 \u3010[SDOI2016]\u751f\u6210\u9b54\u5492\u3011"
    },
    {
        "content": "\u9898\u610f:\n\n - \u7ed9\u4f60\u4e00\u4e2a\u5e8f\u5217\uff0c\u52a8\u6001\u52a0\u5165\u6570\uff0c\u5728\u6bcf\u4e00\u6b21\u52a0\u5165\u540e\u6c42[\u672c\u8d28\u4e0d\u540c\u7684\u5b57\u4e32\u4e2a\u6570](https://www.luogu.com.cn/problem/P2408)\n\t\n\u9898\u89e3\uff1a\n\n\u5982\u679c\u4f1a\u7528 SAM \u505a\u4e0a\u8fb9\u63d0\u5230\u7684\u90a3\u9053\u9898\uff0c\u90a3\u8fd9\u9053\u9898\u5c31\u7b80\u5355\u4e86\uff0c\u56e0\u4e3a SAM \u672c\u6765\u5c31\u662f\u5728\u7ebf\u7b97\u6cd5\uff0c\u76f4\u63a5\u8f93\u51fa\u7b54\u6848\u5373\u53ef\u3002\n\n#### \u5982\u4f55\u6c42\u672c\u8d28\u4e0d\u540c\u7684\u5b57\u4e32\u4e2a\u6570\n\n\u8003\u8651 SAM \u7684 Right \u96c6\u5408\u6240\u5bf9\u5e94\u7684\u5b50\u4e32\u5305\u62ec\u539f\u4e32\u6240\u6709\u672c\u8d28\u4e0d\u540c\u7684\u5b50\u4e32\uff0c\u800c\u4e14\u7531\u4e8e Sam \u7684\u6027\u8d28 $Min(x)$ \u548c $Max(x)$\u4e4b\u95f4\u662f\u6ca1\u6709\u4ea4\u96c6\u7684\uff0c\u6240\u6709\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u6c42 $\\sum Max(x) - Min(x) +1$\u5373\u53ef\u3002\n\ncode:\n\n```cpp\n//\n// Created by swift on 2020/7/21.\n//\n\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nint len;\nstruct SAM{\n    struct node{\n        unordered_map<int,int>go;\n        int fail,val,ans;\n    }a[400000];\n    int cnt=1,last=1;\n    int tmp[400000];\n    int id[400000];\n    int ans;\n    int solve(){\n        return ans;\n    }\n    void add(int x){\n        int p=last;\n        int np=++cnt;\n        a[np].val=a[p].val+1;\n        a[np].ans=1;\n        last=np;\n        while(p&&a[p].go[x]==0){\n            a[p].go[x]=np;\n            p=a[p].fail;\n        }\n        if(!p){a[np].fail=1;ans+=a[np].val-a[a[np].fail].val;return;}\n        int q=a[p].go[x];\n        if(a[q].val==a[p].val+1){\n            a[np].fail=q;\n            ans+=a[np].val-a[a[np].fail].val;\n            return;\n        }\n        int nq=++cnt;\n        a[nq].val=a[p].val+1;\n        a[nq].go=a[q].go;\n        a[nq].fail=a[q].fail;\n        a[q].fail=nq;\n        a[np].fail=nq;\n        while(p&&a[p].go[x]==q){\n            a[p].go[x]=nq;\n            p=a[p].fail;\n        }\n        ans+=a[np].val-a[a[np].fail].val;//\u6c42\u548c\n    }\n}sam;\nsigned main(){\n    scanf(\"%lld\",&len);\n    for(int i=0;i<len;i++){\n        int a;\n        scanf(\"%lld\",&a);\n        sam.add(a);\n        printf(\"%lld\\n\",sam.solve());\n    }\n    return 0;\n}\n```\n",
        "postTime": 1595311577,
        "uid": 350415,
        "name": "swiftqwq",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4070 \u3010[SDOI2016]\u751f\u6210\u9b54\u5492\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053$SA$\u7684\u7ec3\u624b\u597d\u9898\n\n\u5efa\u8bae\u505a\u4e4b\u524d\u5148\u53bb\u505a\u4e00\u4e0b[2408](https://www.luogu.org/problemnew/show/P2408)\n\n\u4e4b\u540e\u4f60\u5c31\u80af\u5b9a\u4f1a\u505a\u8fd9\u9053\u9898\u4e86\n\n\u9996\u5148\u4e0a\u9762\u90a3\u9053\u9898\u7684\u7b54\u6848\u5c31\u662f\n\n$$\\sum_{i=1}^nn+1-sa[i]-het[i]$$\n\n\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u540e\u7f00\u6c42\u51fa\u5176\u80fd\u4ea7\u751f\u7684\u5b50\u4e32\uff0c\u4e4b\u540e\u51cf\u6389\u548c\u4e4b\u524d\u672c\u8d28\u76f8\u540c\u7684\u5b50\u4e32\n\n\u5bf9\u4e8e\u8fd9\u4e2a\u9898\uff0c\u6211\u4eec\u9700\u8981\u6c42\u51fa\u6240\u6709\u524d\u7f00\u7684\u672c\u8d28\u4e0d\u540c\u7684\u5b50\u4e32\u4e2a\u6570\n\n\u5148\u65e0\u8111\u6572\u4e0a$sa$\u548c$het$\u7684\u677f\u5b50\uff0c\u4e4b\u540e\u6211\u4eec\u53ea\u9700\u8981\u5f80\u91cc\u9762\u52a8\u6001\u6dfb\u52a0\u540e\u7f00\u5c31\u597d\u4e86\n\n\u4f46\u662f\u5982\u679c\u6b63\u7740\u5904\u7406\u7684\u8bdd\u4f1a\u6709\u4e00\u4e2a\u975e\u5e38\u663e\u7136\u7684\u95ee\u9898\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u52a0\u8fdb\u53bb\u4e00\u4e2a\u540e\u7f00\uff0c\u4f46\u662f\u8fd9\u4e2a\u540e\u7f00\u548c\u4e4b\u524d\u7684\u4e00\u4e9b\u540e\u7f00\u5f62\u6210\u7684$lcp$\u957f\u5ea6\u8d85\u8fc7\u5f53\u524d\u7684\u957f\u5ea6\uff0c\u4f1a\u5bfc\u81f4\u6211\u4eec\u5f88\u96be\u8ba1\u7b97\n\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u628a\u5b57\u7b26\u4e32\u5012\u8fc7\u6765\uff0c\u4e4b\u540e\u6bcf\u6b21\u5f80\u91cc\u9762\u6dfb\u52a0\u4e00\u4e2a\u540e\u7f00\u5c31\u53ea\u76f8\u5f53\u4e8e\u5f80\u91cc\u9762\u6dfb\u52a0\u4e86\u4e00\u4e2a\u5b57\u7b26\n\n\u53cd\u7f6e\u5b57\u7b26\u4e32\u663e\u7136\u4e0d\u4f1a\u4ee4\u5b50\u4e32\u53d8\u5f97\u4e0d\u76f8\u7b49\uff0c\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5b8c\u7f8e\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\n\n\u4e4b\u540e\u6211\u4eec\u7ef4\u62a4\u4e0a\u9762\u7684\u90a3\u4e2a\u67ff\u5b50\u5c31\u597d\u4e86\uff0c\u7531\u4e8e\u6211\u4eec\u63d2\u5165\u7684$sa$\u503c\u5e76\u4e0d\u8fde\u7eed\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u7528$het$\uff0c\u800c\u662f$het$\u7684\u6700\u5c0f\u503c\n\n\u4e8e\u662f\u6211\u4eec\u7528\u4e00\u4e2a$st$\u8868\u6765\u67e5\u8be2$het$\u7684\u6700\u5c0f\u503c\uff0c\u4e4b\u540e\u6bcf\u63d2\u5165\u4e00\u4e2a\u70b9\u76f8\u5f53\u4e8e\u8981\u65ad\u88c2\u4e00\u4e2a\u539f\u6765\u5b58\u5728\u7684\u6392\u540d\u8fde\u7eed\u7684\u540e\u7f00\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u4e00\u4e2a$set$\u6765\u627e\u524d\u9a71\u548c\u540e\u7ee7\n\n\u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<algorithm>\n#include<set>\n#define re register\n#define LL long long\n#define maxn 100005\n#define set_it std::set<int>::iterator\n#define max(a,b) ((a)>(b)?(a):(b))\n#define min(a,b) ((a)<(b)?(a):(b))\ninline int read()\n{\n\tre char c=getchar();int x=0;\n\twhile(c<'0'||c>'9') c=getchar();\n\twhile(c>='0'&&c<='9') x=(x<<3)+(x<<1)+c-48,c=getchar();return x;\n}\nint a[maxn],rk[maxn],tp[maxn],tax[maxn],sa[maxn],het[maxn],b[maxn],to[maxn];\nint St[maxn][18],log_2[maxn];\nint n,m,sz;LL ans=1;\nstd::set<int> s;\ninline void qsort()\n{\n\tfor(re int i=0;i<=m;i++) tax[i]=0;\n\tfor(re int i=1;i<=n;i++) tax[rk[i]]++;\n\tfor(re int i=1;i<=m;i++) tax[i]+=tax[i-1];\n\tfor(re int i=n;i;--i) sa[tax[rk[tp[i]]]--]=tp[i];\n}\ninline int Pre(int x)\n{\n    s.insert(x); set_it i=s.find(x);\n    if(i==s.begin()) return -1; --i; return *i;\n}\ninline int Nxt(int x) {set_it i=s.find(x);++i;if(i==s.end()) return -1;return *i;}\ninline int find(int x)\n{\n\tint l=1,r=sz;while(l<=r)\n\t{\n\t\tint mid=l+r>>1;if(b[mid]==x) return mid;\n\t\tif(b[mid]<x) l=mid+1;else r=mid-1;\n\t}return 0;\n}\ninline int ask(int l,int r) {int k=log_2[r-l+1];return min(St[l][k],St[r-(1<<k)+1][k]);}\nint main()\n{\n\tn=read();for(re int i=n;i;--i) a[i]=read(),b[i]=a[i];\n\tstd::sort(b+1,b+n+1);m=sz=std::unique(b+1,b+n+1)-b-1;\n\tfor(re int i=1;i<=n;i++) a[i]=find(a[i]);\n\tfor(re int i=1;i<=n;i++) rk[i]=a[i],tp[i]=i;\n\tqsort();\n\tfor(re int w=1,p=0;p<n;w<<=1,m=p)\n\t{\n\t\tp=0;\n\t\tfor(re int i=1;i<=w;i++) tp[++p]=n-w+i;\n\t\tfor(re int i=1;i<=n;i++) if(sa[i]>w) tp[++p]=sa[i]-w;\n\t\tqsort();for(re int i=1;i<=n;i++) std::swap(rk[i],tp[i]);\n\t\trk[sa[1]]=p=1;\n\t\tfor(re int i=2;i<=n;i++) rk[sa[i]]=(tp[sa[i-1]]==tp[sa[i]]&&tp[sa[i-1]+w]==tp[sa[i]+w])?p:++p;\n\t}\n\tint k=0;\n\tfor(re int i=1;i<=n;i++)\n\t{\n\t\tif(k) --k;\n\t\tint j=sa[rk[i]-1];\n\t\twhile(a[i+k]==a[j+k]) ++k;\n\t\thet[rk[i]]=k;\n\t}\n\tfor(re int i=2;i<=n;i++) log_2[i]=1+log_2[i>>1];\n\tfor(re int i=1;i<=n;i++) St[i][0]=het[i];\n\tfor(re int j=1;j<=17;j++)\n\t\tfor(re int i=1;i+(1<<j)-1<=n;i++)\n\t\t\tSt[i][j]=min(St[i][j-1],St[i+(1<<(j-1))][j-1]);puts(\"1\");s.insert(rk[n]);\n\tfor(re int i=n-1;i;--i)\n\t{\n\t\tans+=n-i+1;\n\t\tint x=Pre(rk[i]);\n\t\tif(x!=-1) {int t=ask(x+1,rk[i]);ans+=to[x],ans-=t;to[x]=t;}\n\t\tx=Nxt(rk[i]);\n\t\tif(x!=-1) to[rk[i]]=ask(rk[i]+1,x),ans-=to[rk[i]];\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1545915737,
        "uid": 35178,
        "name": "asuldb",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4070 \u3010[SDOI2016]\u751f\u6210\u9b54\u5492\u3011"
    },
    {
        "content": "\u5b57\u7b26\u96c6\u5927\u5c0f\u4e3a1e9.............\u4f7f\u7528 map \u5427\n\n\u7edf\u8ba1\u672c\u8d28\u4e0d\u540c\u7684\u5b50\u4e32\u4e2a\u6570\u662fSAM\u7684\u7ecf\u5178\u5e94\u7528\u4e4b\u4e00\n\n\u672c\u8d28\u4e0d\u540c\u7684\u5b50\u4e32\u4e2a\u6570\u5176\u5b9e\u5c31\u662f$\\sum max(x)-min(x)+1$\n\n\u6240\u4ee5\u6211\u4eec\u65b0\u5efa\u7ed3\u70b9 $np$ \u65f6\u7edf\u8ba1\u5b83\u7684\u7b54\u6848\u5373\u53ef\n\n\u6839\u636e\u6211\u4eec\u7edf\u8ba1\u7684\u5f0f\u5b50\uff0c\u663e\u7136\u65b0\u5efa\u8282\u70b9$nq$\u7684\u65f6\u5019\uff0c\u4e0d\u4f1a\u5bf9\u7b54\u6848\u9020\u6210\u5f71\u54cd\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<map>\ntypedef long long ll;\nconst int maxn = 2e5+20;\nint par[maxn],mx[maxn],tr[maxn][26],Right[maxn],c[maxn],id[maxn];\nchar A[maxn>>1];\nint tot=0;\nstd::map<int,int> M;\nint cnt = 1,last = 1;\nll ans = 0;\nvoid extend(int x) {\n\tint np = ++cnt,p = last;\n\tRight[np]=1;\n\tmx[np]=mx[p]+1;\n\tlast=np;\n\twhile(p&&!tr[p][x]) tr[p][x]=np,p=par[p];\n\tif(!p) par[np]=1;\n\telse {\n\t\tint q = tr[p][x];\n\t\tif(mx[q]==mx[p]+1) {\n\t\t\tpar[np]=q;\n\t\t}\n\t\telse {\n\t\t\tint nq = ++cnt;\n\t\t\tmx[nq]=mx[p]+1;\n\t\t\tmemcpy(tr[nq],tr[q],sizeof tr[nq]);\n\t\t\tpar[nq]=par[q];\n\t\t\tpar[q]=par[np]=nq;\n\t\t\twhile(p&&tr[p][x]==q) tr[p][x]=nq,p=par[p];\n\t\t}\n\t}\n\tans+=mx[np]-mx[par[np]];\n\treturn;\n}\nint n,k,t;\ninline void topsort() {\n\tfor(int i = 1;i<=cnt;++i) ++c[mx[i]];\n\tfor(int i = 1;i<=n;++i) mx[i]+=mx[i-1];\n\tfor(int i = 1;i<=cnt;++i) id[c[mx[i]]--]=i;\n\tfor(int i = cnt;i;--i) Right[par[id[i]]]+=Right[id[i]];\n\treturn;\n}\nint ch;\nint main() {\n\tscanf(\"%d\",&n);\n\tfor(int i = 1;i<=n;++i) {\n\t\tscanf(\"%d\",&ch);\n\t\tif(M[ch]==0) {\n\t\t\tM[ch]=++tot;\n\t\t}\n\t\textend(M[ch]);\n\t\tprintf(\"%lld\\n\",ans);\n\t}\n\treturn 0;\n}\n\n```",
        "postTime": 1542844778,
        "uid": 64618,
        "name": "\u6587\u6587\u6bbf\u4e0b",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P4070 \u3010[SDOI2016]\u751f\u6210\u9b54\u5492\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u543c\u554a\uff0c\u677f\u5b50\u9898\n\n# noteskey\n\n\n\u672c\u6765\u4e0d\u77e5\u9053\u6bcf\u6b21\u63d2\u5165\u4e4b\u540e\u600e\u4e48\u66f4\u65b0\u591a\u51fa\u6765\u591a\u5c11\u672c\u8d28\u4e0d\u540c\u7684\u5b50\u4e32\uff0c\u7136\u540e\u770b\u4e86\u770b\u9898\u89e3\u636e\u8bf4\u662f $len[np]-len[fa[np]]$? \u4e8e\u662f\u5c31\u7a00\u91cc\u7cca\u6d82\u7684\u80cc\u4e86\u4e2a\u677f\u5b50 A \u6389\u4e86\n\n# code\n\n\u57fa\u672c\u5c31\u662f\u677f\u5b50\u9898\u5427...\n\n```\n//by Judge\n#include<bits/stdc++.h>\n#define R register\n#define ll long long\nusing namespace std;\nconst int M=2e5+3;\ntypedef int arr[M];\n#ifndef Judge\n#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\n#endif\nchar buf[1<<21],*p1=buf,*p2=buf;\ninline int read(){ int x=0,f=1; char c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n\tfor(;isdigit(c);c=getchar()) x=x*10+c-'0'; return x*f;\n} char sr[1<<21],z[20];int CCF=-1,Z;\ninline void Ot(){fwrite(sr,1,CCF+1,stdout),CCF=-1;}\ninline void print(ll x,char chr='\\n'){\n    if(CCF>1<<20)Ot();if(x<0)sr[++CCF]=45,x=-x;\n    while(z[++Z]=x%10+48,x/=10);\n    while(sr[++CCF]=z[Z],--Z);sr[++CCF]=chr;\n} ll ans;\nstruct SAM{ int cnt,las; SAM(){cnt=las=1;}\n\tmap<int,int> to[M]; arr fa,len;\n\tinline void insert(R int c){\n\t\tR int p=las,np=las=++cnt; len[np]=len[p]+1;\n\t\tfor(;p&&!to[p].count(c);p=fa[p]) to[p][c]=np;\n\t\tif(!p) fa[np]=1;\n\t\telse{ int q=to[p][c];\n\t\t\tif(len[q]==len[p]+1) fa[np]=q;\n\t\t\telse{ int nq=++cnt;\n\t\t\t\tfa[nq]=fa[q],fa[q]=fa[np]=nq;\n\t\t\t\tto[nq]=to[q],len[nq]=len[p]+1;\n\t\t\t\tfor(;p&&to[p][c]==q;p=fa[p]) to[p][c]=nq;\n\t\t\t}\n\t\t} ans+=len[np]-len[fa[np]];\n\t}\n}p;\nint main(){\n\tfor(R int n=read(),x;n;--n)\n\t\tx=read(),p.insert(x),print(ans);\n\treturn Ot(),0;\n}\n```\n",
        "postTime": 1554608424,
        "uid": 38576,
        "name": "J\u03bcdge",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P4070 \u3010[SDOI2016]\u751f\u6210\u9b54\u5492\u3011"
    }
]