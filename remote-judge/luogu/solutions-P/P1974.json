[
    {
        "content": "\u601d\u8def\u548c\u524d\u9762\u7684\u5927\u4f6c\u4eec\u90fd\u5dee\u4e0d\u591a\uff1a\u5c31\u662f\u6700\u5f00\u59cb\u6709$n$\u4e2a$1$\uff0c\u7136\u540e\u6bcf\u6b21\u64cd\u4f5c\u53ef\u4ee5\u9009\u51fa\u4e24\u4e2a\u6570\u76f8\u4e58\uff08\u57fa\u5143\u5bf9\u4e24\u4e24\u914d\u5bf9\uff09\u518d\u52a0\u4e00\uff08\u4ea7\u751f\u4e00\u4e2a\u989d\u5916\u7684\u57fa\u5143\u5bf9\uff09\uff0c\u5f97\u5230\u4e00\u4e2a\u65b0\u6570\u653e\u56de\u53bb\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u5982\u6b64\u91cd\u590d$n-1$\u6b21\u540e\u53ea\u5269\u4e0b\u4e00\u4e2a\u6570\uff0c\u8981\u6211\u4eec\u4f7f\u5f97\u6700\u540e\u8fd9\u4e2a\u6570\u5c3d\u91cf\u5927\u3002\n\n\u600e\u4e48\u505a\u5462\uff1f\u6211\u4eec\u5927\u6982\u53ef\u4ee5\u81ea\u7136\u800c\u7136\u7684\u60f3\u5230\uff0c\u64cd\u4f5c\u7684\u6b21\u6570\u662f\u4e00\u5b9a\u7684\uff0c\u90a3\u8d8a\u5c0f\u7684\u6570\u7559\u5230\u540e\u9762\u5c31\u4f1a\u8d8a\u62d6\u7d2f\u522b\u4eba\uff0c\u4ea7\u751f\u6d6a\u8d39\uff0c\u6240\u4ee5\u5e94\u8be5\u5148\u8ba9\u5c0f\u6570\u53d8\u5927\uff0c\u5373\u6bcf\u6b21\u9009\u51fa\u4e24\u4e2a\u6700\u5c0f\u7684\u6570\u8fdb\u884c\u64cd\u4f5c\uff08\u5c31\u662f\u8d2a\u5fc3\u6ca1\u6709\u4e3a\u4ec0\u4e48\uff08\u3003\uff40 3\u2032\u3003\uff09\uff09\u3002\n\n\u7136\u800c\u5728\u7eb8\u4e0a\u7b97\u4e00\u4e0b\uff0c\u53d1\u73b0$n$\u6bcf\u589e\u52a0$1$\uff0c\u7ed3\u679c\u5c31\u8981\u6269\u5927$1.5$\u500d\u5de6\u53f3\uff0c\u800c$10000$\u6b21\u65b9\u544a\u8bc9\u6211\u4eec\u663e\u7136\u8981\u7528\u9ad8\u7cbe\u5ea6\uff0c\u90a3\u6211\u4eec\u5c31\u628a\u9ad8\u7cbe\u6a21\u677f\u6253\u51fa\u6765\uff1a\n\n```cpp\n//\u5199\u6210\u4e00\u4e2a\u7c7b\u578b\u65b9\u4fbf\u914d\u5408STL\nstruct BigInt\n{\n\tint num[5000],len;\n    //\u4e0d\u77e5\u9053\u6700\u5927\u6709\u591a\u5c11\u4f4d\uff0c\u5148\u8bbe\u5927\u70b9\u65e0\u59a8\n\tBigInt() {memset(num,0,sizeof(num));len=0;}\n    //\u521d\u59cb\u5316\u4e00\u4e0b\u907f\u514d\u51fa\u9519\n\tvoid print() {for(int i=len;i;i--) printf(\"%d\",num[i]);}\n    //\u8fd9\u9898\u53ea\u9700\u8981\u8f93\u51fa\u4e0d\u9700\u8981\u8bfb\u5165\n    //\u7136\u540e\u662f\u91cd\u8f7d\u8fd0\u7b97\u7b26\n\tBigInt operator + (const BigInt& b) const\n\t{\n\t\tint len=max(this->len,b.len),carry=0,now;BigInt c;\n\t\tfor(int i=1;i<=len;i++)\n\t\t{\n\t\t\tnow=this->num[i]+b.num[i]+carry;\n\t\t\tc.num[i]=now%10;carry=now/10;\n\t\t}\n\t\tif(carry) c.num[++len]=carry;\n\t\tc.len=len;\n\t\treturn c;\n\t}\n\tBigInt operator * (const BigInt& b) const\n\t{\n\t\tBigInt d;\n\t\tfor(int i=1;i<=this->len;i++)\n\t\t{\n\t\t\tint carry=0,now;BigInt c;\n\t\t\tfor(int j=1;j<=b.len;j++)\n\t\t\t{\n\t\t\t\tnow=b.num[j]*this->num[i]+carry;\n\t\t\t\tc.num[j+i-1]=now%10;carry=now/10;\n\t\t\t}\n\t\t\tif(carry) {c.num[b.len+i]=carry;c.len=b.len+i;}\n\t\t\telse c.len=b.len+i-1;\n\t\t\td=d+c;\n\t\t}\n\t\treturn d;\n\t}\n};\n```\n\n\n\n\u6211\u60f3\u8bf4\u7684\u662f\uff0c\u5176\u5b9e**\u8fd9\u9898**\u5b8c\u5168\u53ef\u4ee5\u9ad8\u7cbe\u914d$\\text{STL}$\u7684$\\text{priority\\_queue}$\u7684\uff0c\u800c\u4e14\u4ee3\u7801\u5e76\u4e0d\u590d\u6742\uff0c\u53ea\u9700\u518d\u7ed9$\\text{BigInt}$\u7c7b\u578b\u5b9a\u4e49\u4e00\u4e2a $<$ \u5373\u53ef\uff08\u597d\u50cf\uff0c$\\text{STL}$\u7684\u7c7b\u578b\u90fd\u53ea\u9700\u8981\u5b9a\u4e49\u5c0f\u4e8e\uff09\u3002\u4e0d\u8fc7\u8fd9\u9898\u6211\u4eec\u8981\u7528\u7684\u662f\u5c0f\u6839\u5806\uff0c\u5f53\u7136\u4f60\u53ef\u4ee5\u7528$\\text{greater}$\uff0c\u4e0d\u8fc7\u6211\u5c31\u76f4\u63a5\u628a $<$ \u5b9a\u4e49\u6210\u4e86$\\geqslant$ ,\u6548\u679c\u662f\u4e00\u6837\u7684\u2570(\uffe3\u03c9\uffe3\uff4f)\u3002\u4ee3\u7801\u5c31\u591a\u4e86\u8fd9\u4e48\u4e00\u6bb5\uff1a\n\n```cpp\nbool operator < (const BigInt& b) const\n{\n\tif(this->len!=b.len) return this->len>b.len;\n\tfor(int i=this->len;i;i--) if(this->num[i]!=b.num[i]) return this->num[i]>b.num[i];\n\treturn true;\n}\n```\n\n\n\n\u4e0d\u8fc7\u6b63\u5982\u524d\u9762\u7684\u5927\u4f6c\u6240\u8bf4\uff0c\u53ef\u80fd\u4f1a\u6709$\\text{MLE}$\u7684\u95ee\u9898\u3002\u90a3\u600e\u4e48\u529e\u5462\uff1f\u5176\u5b9e\u53ef\u4ee5\u53d6\u70b9\u5de7\uff0c\u6211\u4eec\u8f93\u51fa\u4e00\u4e0b$n$\u4e3a$10000$\u65f6\u7b54\u6848\u7684\u957f\u5ea6\uff0c\u521a\u597d\u662f$1770$\uff0c\u4e8e\u662f\u6211\u628a\u6570\u4f4d\u5f00\u5230$1775$\uff0c\u63d0\u4ea4\uff0c\u7adf\u7136\u5c31\u8fc7\u4e86\u2517|\uff40O\u2032|\u251b \uff01 \u4f46\u5982\u679c\u5728\u591a\u4e00\u70b9\uff0c\u6bd4\u5982$2000$\uff0c\u5c31\u4f1a$\\text{MLE}$\u3002\u6240\u4ee5\u8fd9\u79cd\u5199\u6cd5\u53ea\u662f\u7eaf\u7cb9\u4e3a\u4e86\u7528\u5806\uff0c\u7a7a\u95f4\u4e0a\u8fd8\u662f\u961f\u5217\u7684\u5199\u6cd5\u597d\u311f( \u2594, \u2594 )\u310f\n\n\u6700\u7ec8\u4ee3\u7801\u597d\u50cf\u8fd8\u7a0d\u5fae\u77ed\u90a3\u4e48\u4e00\u70b9\u70b9\u5462\uff08\u96be\u9053\u6211\u4e0b\u610f\u8bc6\u7684\u538b\u884c\u4e86\uff1f\uff09\uff1a\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <queue>\nusing namespace std;\nstruct BigInt\n{\n\tint num[1775],len;\n\tBigInt() {memset(num,0,sizeof(num));len=0;}\n\tvoid print() {for(int i=len;i;i--) printf(\"%d\",num[i]);}\n\tBigInt operator + (const BigInt& b) const\n\t{\n\t\tint len=max(this->len,b.len),carry=0,now;BigInt c;\n\t\tfor(int i=1;i<=len;i++)\n\t\t{\n\t\t\tnow=this->num[i]+b.num[i]+carry;\n\t\t\tc.num[i]=now%10;carry=now/10;\n\t\t}\n\t\tif(carry) c.num[++len]=carry;\n\t\tc.len=len;\n\t\treturn c;\n\t}\n\tBigInt operator * (const BigInt& b) const\n\t{\n\t\tBigInt d;\n\t\tfor(int i=1;i<=this->len;i++)\n\t\t{\n\t\t\tint carry=0,now;BigInt c;\n\t\t\tfor(int j=1;j<=b.len;j++)\n\t\t\t{\n\t\t\t\tnow=b.num[j]*this->num[i]+carry;\n\t\t\t\tc.num[j+i-1]=now%10;carry=now/10;\n\t\t\t}\n\t\t\tif(carry) {c.num[b.len+i]=carry;c.len=b.len+i;}\n\t\t\telse c.len=b.len+i-1;\n\t\t\td=d+c;\n\t\t}\n\t\treturn d;\n\t}\n\tbool operator < (const BigInt& b) const\n\t{\n\t\tif(this->len!=b.len) return this->len>b.len;\n\t\tfor(int i=this->len;i;i--) if(this->num[i]!=b.num[i]) return this->num[i]>b.num[i];\n\t\treturn true;\n\t}\n}One,A,B;\nint n;\npriority_queue<BigInt> q;\nint main()\n{\n\tscanf(\"%d\",&n);\n\tOne.num[1]=One.len=1;\n\twhile(n--) q.push(One);\n\twhile(q.size()>1) \n\t{\n\t\tA=q.top();q.pop();\n\t\tB=q.top();q.pop();\n\t\tq.push(A*B+One);\n\t}\n\tA=q.top();A.print();\n\treturn 0; \n}\n```\n\n\n\n\n\n\n\n",
        "postTime": 1590659274,
        "uid": 186831,
        "name": "2018_Danny",
        "ccfLevel": 6,
        "title": "P1974 \u57fa\u56e0\u805a\u5408"
    },
    {
        "content": "[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.org/problem/P1974)\n\n\u7b97\u6cd5\u6807\u7b7e\uff1a\u8d2a\u5fc3 ~~\uff08\u6c34\uff09~~ \uff0c\u9ad8\u7cbe\uff0c\u961f\u5217\uff08\u4e0d\u662f\u5f88\u591a\uff09\n\n PART 1 \uff1a\u9898\u76ee\u89e3\u6790\n\n\u5982\u679c\u4f60\u8ba4\u771f\u8bfb\u9898\uff0c\u5176\u5b9e\u4f1a\u53d1\u73b0 \uff08~~\u5e9f\u8bdd\u4e00\u5806~~\uff09 \u5c31\u4e00\u53e5\u8bdd\uff1a\n\n\u4ecen\u4e2a1\u4e2d\uff0c\u53d6\u51fa\u4efb\u610f\u4e24\u4e2a\u6570\u76f8\u4e58\u518d\u52a0\u4e00\uff0c\u5728\u5e8f\u5217\u5220\u9664\u4e24\u6570\u5e76\u52a0\u5165\u65b0\u7684\u7ed3\u679c\uff0c\u95ee\u6700\u540e\u5269\u4e0b\u7684\u6570\u7684\u6700\u5927\u503c\u3002\n\n PART 2 \uff1a\u8d2a\u5fc3\n\n\u4e3a\u4ec0\u4e48\u8fd9\u9898\u8981\u7528\u8d2a\u5fc3\u5462\uff1f\uff08\u524d\u63d0\u662f\u4f60\u8ba4\u771f\u8bfb\u9898\uff09\n\n\u5982\u679c\u8981\u6c42\u7ed3\u679c\u6700\u5927\uff0c\u90a3\u4e48\u6211\u4eec\u671f\u671b\u6bcf\u4e00\u6b65\u5f97\u5230\u7684\u7ed3\u679c\u90fd\u6700\u5927\uff0c\u5219\u5fc5\u987b\u4e24\u4e2a\u56e0\u6570\u6700\u5927\n\n\u65e2\u7136\u8981\u56e0\u6570\u6700\u5927\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u62ff\u5c3d\u53ef\u80fd\u5c0f\u7684\u6570\u8fdb\u884c\u64cd\u4f5c\uff0c\u4f7f\u5f97\u5728\u5e95\u5c42\u83b7\u5f97\u76841\u66f4\u591a\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u4e0d\u65ad\u53e0\u52a0\uff0c\u5219\u80fd\u591f\u4f7f\u7ed3\u679c\u6700\u5927\n\n PART 3 \uff1a\u9ad8\u7cbe\n\n\u5982\u679c\u4f60\u4ed4\u7ec6\u60f3\u60f3 ~~\uff08\u522b\u95ee\u6211\u600e\u4e48\u60f3\u7684\uff09~~\uff0c\u7b54\u6848\u4f1a\u5341\u5206\u5de8\u5927\n\n\u4f60\u4e0d\u7528\u9ad8\u7cbe\uff0c\u600e\u4e48\u529e\uff1f\uff1f\uff1f\n\n\u5728\u5904\u7406\u9ad8\u7cbe\u90e8\u5206\u65f6\uff0c\u6211\u4e60\u60ef\u7528\u91cd\u8f7d\u8fd0\u7b97\u7b26\u7684\u65b9\u6cd5\uff0c\u5177\u4f53\u5b9e\u73b0\u89c1\u5e95\u90e8\u4ee3\u7801\u54e6\n\n~~\uff08\u5410\u69fd\u4e00\u4e0b\u70e6\u4eba\u7684\u9ad8\u7cbe\uff09~~\n\nblog\uff1a[\u91cd\u8f7d\u8fd0\u7b97\u7b26](https://www.luogu.org/blog/JohnJoeZHU/post-00022019624-gao-jing-bi-jian-jie-dai-ma-di-zhong-zai-yun-suan-fu)\n\n\u5927\u4f6c\u8bb2\u89e3\uff1a[\u91cd\u8f7d\u8fd0\u7b97\u7b26](https://www.cnblogs.com/xiaokang01/p/9166745.html)\n\nPART 4 \uff1a\u961f\u5217\n\n\u5728\u8d2a\u5fc3\u7684\u57fa\u7840\u4e0a\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230\u4f7f\u7528\u5c0f\u6839\u5806\u6765\u5b9e\u73b0\n\n\u4f46\u662f\uff0c\u5806/\u4f18\u5148\u961f\u5217+\u9ad8\u7cbe \u592a ~~TM~~ \u6076\u5fc3\u4e86\uff0c\u800c\u4e14\u5982\u679c\u4f60\u975e\u8981\u7528\u7684\u8bdd\uff0c\u4e0d\u4ec5\u52a0\u5927\u4e86\u7801\u91cf\uff0c\u800c\u4e14\u4f1aMLE\n\n\u600e\u4e48\u529e\u5462?\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u7b54\u6848\u5177\u6709\u5355\u8c03\u6027\uff0c\u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u6bcf\u6b21\u64cd\u4f5c\u90fd\u4f1a\u5f97\u5230\u7b2c\u4e00\u5927\u7684\u6570\uff08\u4f60\u4e5f\u53ef\u4ee5\u8ba4\u4e3a\u8fd9\u662f\u8d2a\u5fc3\u7684\u7406\u7531\uff09\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7528\u961f\u5217\u4e0d\u5c31\u5f97\u4e86\uff0c\u4fdd\u8bc1\u4e86\u961f\u5217\u7684\u524d\u4e24\u4e2a\u5143\u7d20\u4e00\u5b9a\u662f\u6700\u5c0f\u7684\n\n\u4f46\u662f\uff0c\u6211\u4eec\u8fd8\u4f1aMLE\n\n\u56e0\u4e3a\u6211\u4eec\u628a\u9ad8\u7cbe\u7684\u6570\u7ec4\uff0c\u4e00\u8d77\u5b58\u5728\u4e86\u961f\u5217\u4e2d\uff0c\u800c\u4e14\u540c\u65f6\u4f1a\u5360\u7528O\uff08n*(n+1)/2\uff09\u7684\u9ad8\u7cbe\u6570\u7ec4\u7a7a\u95f4\uff0c\u90a3\u4e0d\u5c31MLE\u4e86\n\n\u65e2\u7136\u5982\u6b64\uff0c\u6211\u4eec\u4e3a\u4ec0\u4e48\u4e0d\u53ef\u4ee5\u5229\u7528\u5df2\u7ecf\u4e0d\u8981\u7684\u6570\u7ec4\u7a7a\u95f4\u5462\n\n\u5728\u6b64\uff0c\u6211\u4eec\u5c31\u7528\u961f\u5217\uff0c\u5b58\u50a8\u6570\u7ec4\u4e0b\u6807\uff0c\u6bd5\u7adf\u6211\u4eec\u4e0d\u9700\u8981\u5173\u5fc3\u6bcf\u4e2a\u6570\u7684\u5927\u5c0f\u4e86\n\n PART 5 \uff1a\u4ee3\u7801 \n\n~~~cpp\n#include<cstdio>\n#include<queue>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nstruct pp{\n\tint l,g[3000];//l\u5b58\u957f\u5ea6\uff0cg\u5b58\u6570\u5b57\n\tpp()//\u8fd9\u91cc\u4e00\u5b9a\u8981\u521d\u59cb\u5316\n\t{\n\t\tl=0;\n\t\tmemset(g,0,sizeof(g));\n\t}\n\tvoid print()\n\t{\n\t    for(int i=l-1;i>=0;i--)//\u8f93\u51fa\n                printf(\"%d\",g[i]);\n            printf(\"\\n\");\n\t}\n}f[10010];\nint n;\nqueue<int>q;//\u8fd9\u91cc\u5c31\u5b58\u6570\u7ec4\u4e0b\u6807\u4e86\npp operator +(const pp &a,const pp &b)//\u91cd\u8f7d\u8fd0\u7b97\u7b26\n{\n    pp c;\n    c.l=max(a.l,b.l);\n    int x=0;\n    for(int i=0;i<c.l;i++)//\u666e\u901a\u9ad8\u7cbe\u6253\u6cd5\uff08\u8d34\u677f\u5b50\uff09\n    {\n        c.g[i]=a.g[i]+b.g[i]+x;\n        x=c.g[i]/10;\n        c.g[i]%=10;\n    }\n    if(x>0) c.g[++c.l]=x;//\u8fdb\u4f4d\n    return c;\n}\npp operator *(const pp &a,const pp &b)//\u8fd8\u662f\u91cd\u8f7d\u8fd0\u7b97\u7b26\n{\n    pp c;\n    for(int i=0;i<a.l;i++)\n    \tfor(int j=0;j<b.l;j++)\n    \t\tc.g[i+j]+=a.g[i]*b.g[j];\n    c.l=a.l+b.l-1;\n    for(int i=0;i<c.l;i++)\n    {        \n        c.g[i+1]+=c.g[i]/10;\n      \tc.g[i]=c.g[i]%10;\n    }\n    while(c.g[c.l++]);//\u6ce8\u610f\u8fd9\u91cc\u7684\u9ad8\u7cbe\u8ba1\u7b97\n    while(!c.g[c.l-1]) c.l--;//\u540c\u4e0a\n    return c;\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tpp k;\n    \tint ans,anss;\n\tk.g[0]=1;\n\tk.l++;\n\tfor(int i=1;i<=n;i++) q.push(i),f[i]=k;\n\twhile(q.size()!=1)//\u7559\u4e0b\u6700\u540e\u7684\u7b54\u6848\n\t{\n\t\tans=q.front();\n\t\tq.pop();\n\t\tanss=q.front();\n\t\tq.pop();\n\t\tf[ans]=f[ans]*f[anss];\n\t\tf[ans]=f[ans]+k;\n\t\tq.push(ans);\n\t}\n\tans=q.front();\n\tf[ans].print();\n\treturn 0;\n}\n~~~",
        "postTime": 1567064466,
        "uid": 144523,
        "name": "JohnJoeZhu",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1974 \u3010\u57fa\u56e0\u805a\u5408\u3011"
    },
    {
        "content": "\u9996\u5148\u6982\u62ec\u4e00\u4e0b\u9898\u610f\uff0c\u4ecen\u4e2a1\u4e2d\uff0c\u53d6\u51fa\u4e24\u4e2a\u6570\u76f8\u4e58\u5e76\u52a0\u4e00\uff0c\u91cd\u590d\u64cd\u4f5c\uff0c\u76f4\u81f3\u6700\u540e\u53ea\u5269\u4e0b\u4e00\u4e2a\u6570\uff0c\u95ee\u8be5\u6570\u7684\u6700\u5927\u503c\u3002\n\n\u660e\u773c\u4eba\u53ef\u4ee5\u770b\u51fa\u662f\u8d2a\u5fc3\uff0c\u795e\u7287\u53ef\u4ee5\u770b\u51fa\u662f\u6570\u8bba\uff0c\u800c\u6211\u8fd9\u6837\u7684\u849f\u84bb\u53ea\u80fd\u7206\u641c\u627e\u89c4\u5f8b\u3002\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u5982\u679c\u6bcf\u6b21\u53d6\u51fa\u4e24\u4e2a\u6700\u5c0f\u7684\u6570\u64cd\u4f5c\uff0c\u7ed3\u679c\u5c31\u662f\u6700\u4f18\u7684\u3002\u56e0\u4e3a\u8fd9\u6837\u53ef\u4ee5\u8ba9+1\u5230\u66f4\u5e95\u5c42\u7684\u4f4d\u7f6e\uff0c\u6362\u53e5\u8bdd\u8bf4\u5c31\u662f\u52a0\u76841\u4e0e\u76f8\u4e58\u7684\u4e24\u4e2a\u6570\u7684\u6bd4\u503c\u8d8a\u5927\uff0c\u8fd9\u6837\u6700\u540e\u5c31\u80fd\u8d8a\u5927\uff0c\u6211\u53ea\u80fd\u8fd9\u4e48\u89e3\u91ca\u3002\n\n\u53d6\u6700\u5c0f\u7b2c\u4e00\u53cd\u5e94\u662f\u5806\uff0cint40\u5206\uff0clonglong50\u5206\uff0c\u7136\u540e\u611f\u5230\u4e0d\u5bf9\uff0c\u9ad8\u7cbe\u52a0\u5806\u4e5f\u592a\u5927\u4e86\u3002\u4e8e\u662f\u53d1\u73b0\uff0c\u6bcf\u6b21\u64cd\u4f5c\u540e\u653e\u5230\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u4e00\u5b9a\u4fdd\u8bc1\u5355\u8c03\uff0c\u90a3\u6211\u4eec\u7528\u961f\u5217\u4e0d\u5c31\u884c\u4e86\uff0c\u52a0\u4e2a\u9ad8\u7cbe\u5ea6\u3002\u8fd9\u91cc\u7528\u4e86\u4e00\u4e2a\u5c0f\u60f3\u6cd5\uff0c\u5c31\u662f\u961f\u5217\u91cc\u5b58\u7684\u662f\u6570\u7684\u4f4d\u7f6e\uff0c\u56e0\u4e3a\u6570\u5b57\u7684\u4e2a\u6570\u662f\u8d8a\u6765\u8d8a\u5c11\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u628a\u539f\u6765\u7684\u4f4d\u7f6e\u62ff\u6765\u5b58\u65b0\u7684\u6570\uff0c\u5c31\u4e0d\u7528\u590d\u5236\u6570\u5b57\uff0c\u5f97\u5230\u4e86\u50cf\u94fe\u8868\u7684\u961f\u5217\uff08\u5176\u5b9e\u5c31\u662f\uff09\u3002\n\n~~~\n\n\n\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\nusing namespace std;\nint n; \nstruct BigInt{\n    int arr[3000];\n    int len;\n    BigInt(){\n        memset(arr,0,sizeof(arr));\n        len=0;\n    }\n}a[10100];\nint que[50100],top,dep;\nBigInt operator *(BigInt s,BigInt t){\n    BigInt d;\n    for(int i=1;i<=s.len;i++)\n        for(int j=1;j<=t.len;j++){\n            d.arr[i+j-1]+=s.arr[i]*t.arr[j];\n            if(d.arr[i+j-1]>=10){\n                d.arr[i+j]+=d.arr[i+j-1]/10;\n                d.arr[i+j-1]%=10;\n            }\n        }\n    d.len=s.len+t.len-1;\n    for(int i=1;i<=d.len;i++){\n        if(d.arr[i]>=10){\n            d.arr[i+1]+=d.arr[i]/10;\n            d.arr[i]%=10;\n        }\n        if(d.arr[d.len+1]>0)\n            d.len++;\n    }\n    return d;\n}\nBigInt operator +(BigInt s,int t){\n    s.arr[1]+=t;\n    for(int i=1;i<=s.len;i++){\n        if(s.arr[i]>=10){\n            s.arr[i+1]+=s.arr[i]/10;\n            s.arr[i]%=10;\n        }\n        if(s.arr[s.len+1]>0)\n            s.len++;\n    }\n    return s;\n}\nvoid print(int x){\n    for(int i=a[que[x]].len;i>=1;i--)\n        printf(\"%d\",a[que[x]].arr[i]);\n}\nint main(){\n    freopen(\"test.in\",\"r\",stdin);\n    freopen(\"test.out\",\"w\",stdout);\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++){\n        a[i].arr[1]=1;\n        a[i].len=1;\n        que[i]=i;\n    }\n    top=1,dep=n;\n    while(top<dep){\n        a[que[top]]=a[que[top]]*a[que[top+1]];\n        a[que[top]]=a[que[top]]+1;\n        que[++dep]=que[top];\n        top+=2;\n    }\n    print(top);\n    puts(\"\");\n    return 0;\n}\n~~~\n```",
        "postTime": 1504256468,
        "uid": 17848,
        "name": "zhangsl089",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1974 \u3010\u57fa\u56e0\u805a\u5408\u3011"
    }
]