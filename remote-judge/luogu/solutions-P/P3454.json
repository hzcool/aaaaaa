[
    {
        "content": "\u6309\u987a\u5e8f\uff0c\u4ea4\u66ff\u5730\uff0c\u8bb0\u5f55\u4e0b\u591a\u8fb9\u5f62\u7684\u8fb9\u89d2\u4fe1\u606f\u3002\n\n\u4f8b\u5982\u6837\u4f8b\u4e2d\u7684\u7b2c\u4e8c\u4e2a\u591a\u8fb9\u5f62\uff1a\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/ow4r7evq.png)\n\n\u4ee5\u53f3\u4e0b\u89d2\u4e3a\u8d77\u70b9\uff0c\u9006\u65f6\u9488\u4ea4\u66ff\u8bb0\u5f55\u8fb9\u89d2\uff0c\u5f97\u5230\u957f\u5ea6\u4e3a $2n$ \u7684\u5e8f\u5217\uff1a\n\n$$\\sqrt2\\to90\\degree\\to\\sqrt2\\to135\\degree\\to2\\to135\\degree\\to\\sqrt2\\to90\\degree\\to\\sqrt2\\to135\\degree\\to2\\to135\\degree$$\n\n\u8fd9\u91cc\u7684\u5e8f\u5217\u53ef\u4ee5\u770b\u4f5c\u4e00\u4e2a\u73af\uff0c\u6700\u540e\u4e00\u9879\u8fde\u5411\u7b2c\u4e00\u9879\u3002\n\n\u89d2\u5ea6\u4e0e\u8fb9\u957f\u90fd\u662f\u5b9e\u6570\uff0c\u4e0d\u597d\u5904\u7406\u3002\u4e0d\u5982\u4f7f\u7528\u4e24\u6761\u8fb9\u5411\u91cf\u7684\u53c9\u79ef\u4ee3\u66ff\u89d2\u5ea6\uff0c\u7528\u8fb9\u957f\u7684\u5e73\u65b9\u4ee3\u66ff\u8fb9\u957f\uff0c\u8fd9\u6837\u5c31\u4ee5\u5c06\u5b9e\u6570\u73af\u8f6c\u5316\u4e3a\u6574\u6570\u73af\uff1a\n\n$$2\\to\\underline2\\to2\\to2\\to\\underline4\\to2\\to2\\to\\underline2\\to2\\to2\\to\\underline4\\to2$$\n\n\u6b64\u65f6\uff0c\u539f\u591a\u8fb9\u5f62\u6709\u51e0\u6761\u5bf9\u79f0\u8f74\u5373\u53ef\u8f6c\u5316\u4e3a\u4e0b\u5217\u95ee\u9898\uff1a**\u73af\u4e0a\u6709\u51e0\u4e2a\u4f4d\u7f6e\uff0c\u6ee1\u8db3\u5c06\u73af\u4ece\u8fd9\u91cc\u65ad\u5f00\u540e\uff0c\u53ef\u4ee5\u5f97\u5230\u4e00\u6761\u56de\u6587\u94fe\uff1f**\n\n\u5728\u8fd9\u4e2a\u6837\u4f8b\u4e2d\uff0c\u5171\u6709 $4$ \u4e2a\u4f4d\u7f6e\u6ee1\u8db3\u6761\u4ef6\uff0c\u56e0\u6b64\u591a\u8fb9\u5f62\u6709 $2$ \u4e2a\u5bf9\u79f0\u8f74\uff08\u4e00\u6761\u5bf9\u79f0\u8f74\u7a7f\u8fc7\u4e24\u4e2a\u4f4d\u7f6e\uff09\u3002\n\n\u73b0\u5728\uff0c\u6211\u4eec\u628a\u4e00\u4e2a\u8ba1\u7b97\u51e0\u4f55\u95ee\u9898\u8f6c\u5316\u6210\u4e86\u5b57\u7b26\u4e32\u95ee\u9898\u3002\u800c\u672c\u9898\u89e3\u7684\u521b\u65b0\u4e4b\u5904\u5728\u4e8e\u8fd4\u749e\u5f52\u771f\u5730\u7528\u54c8\u5e0c\u89e3\u51b3\u4e86\u95ee\u9898\uff1a\u6211\u4eec\u5c06\u539f\u957f\u4e3a $2n$ \u7684\u5e8f\u5217\u500d\u957f\u4e3a $4n$\uff0c\u7136\u540e\u5bf9\u4e8e\u6bcf\u4e2a $1\\le i\\le 2n$\uff0c\u68c0\u67e5\u533a\u95f4 $[i,i+2n]$ \u662f\u5426\u4e3a\u56de\u6587\u4e32\uff08\u65ad\u73af\u6210\u94fe\uff09\u3002\u56de\u6587\u4e32\u7684\u68c0\u67e5\u53ef\u4ee5\u7528\u54c8\u5e0c\u4f18\u5316\u81f3 $\\mathcal O(1)$\uff0c\u4e5f\u5c31\u662f\u5bf9\u4e8e\u539f\u4e32\u6b63\u53cd\u5206\u522b\u505a\u4e00\u6b21\u54c8\u5e0c\uff0c\u7136\u540e\u5224\u65ad\u8be5\u533a\u95f4\u7684\u6b63\u53cd\u54c8\u5e0c\u503c\u662f\u5426\u76f8\u7b49\u5373\u53ef\u3002\n\n---\n\n```cpp\n#include<bits/stdc++.h>\n#define nb 400010\n#define int long long\nusing namespace std;\n\nint _, n, s[nb];\nunsigned int B = 131, H1[nb], H2[nb], P[nb] = {1};\nstruct point{int x, y;}p[nb];\n\nbool check(int l, int r){\n\tunsigned int h1 = H1[r] - H1[l - 1] * P[r - l + 1];\n\tunsigned int h2 = H2[l] - H2[r + 1] * P[r - l + 1];\n\treturn h1 == h2;\t// \u6b63\u53cd\u54c8\u5e0c\u503c\u76f8\u7b49\u8bf4\u660e\u56de\u6587\n}\n\nsigned main(){\n\tfor(int i = 1; i < nb; i++)\n\t\tP[i] = P[i - 1] * B;\n\tfor(cin >> _; _--;){\n\t\tcin >> n;\n\t\tint ans = 0;\n\t\tfor(int i = 1; i <= n; i++)\n\t\t\tcin >> p[i].x >> p[i].y;\n\t\tfor(int i = 1; i <= n; i++){\n\t\t\tint A = i, B = i + 1, C = i + 2;\n\t\t\tB -= (B > n) * n, C -= (C > n) * n;\n\t\t\ts[i * 2 - 1] = pow(p[A].x - p[B].x, 2) + pow(p[A].y - p[B].y, 2);\n\t\t\ts[i * 2] = (p[A].x - p[B].x) * (p[B].y - p[C].y) - (p[A].y - p[B].y) * (p[B].x - p[C].x);\n\t\t\t// s[2i - 1] \u548c s[2i] \u5206\u522b\u8bb0\u5f55\u8fb9\u89d2\u4fe1\u606f\n\t\t\t// \u53c9\u79ef\u516c\u5f0f: (a, b) \u00d7 (c, d) = ad - bc\n\t\t}\n\t\tfor(int i = 1; i <= n * 2; i++) s[i + n * 2] = s[i];\t\t  // \u65ad\u73af\u6210\u94fe\n\t\tfor(int i = 1; i <= n * 4; i++) H1[i] = H1[i - 1] * B + s[i]; // \u6b63\u5411\u54c8\u5e0c\n\t\tfor(int i = n * 4; i >= 1; i--) H2[i] = H2[i + 1] * B + s[i]; // \u53cd\u5411\u54c8\u5e0c\n\t\tfor(int i = 1; i <= n * 2; i++) ans += check(i, i + n * 2);\t  // \u5224\u65ad\u56de\u6587\n\t\tcout << ans / 2 << endl;\t\t\t\t\t\t\t\t\t  // \u7b54\u6848\u9664\u4e8c\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1634882176,
        "uid": 142338,
        "name": "pythoner713",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3454 \u3010[POI2007]OSI-Axes of Symmetry\u3011"
    },
    {
        "content": "\u8fd9\u9898\u770b\u4f3c\u8981\u7528\u5230\u5b57\u7b26\u4e32\u7b97\u6cd5\uff0c\u5176\u5b9e\u66b4\u529b\u5c31\u53ef\u4ee5\u8fc7\n\n\u4e3a\u4e86\u65b9\u4fbf\u5904\u7406\uff0c\u53ef\u4ee5\u5728\u76f8\u90bb\u4e24\u4e2a\u70b9\u4e4b\u95f4\u63d2\u5165\u4e24\u4e2a\u70b9\u7684\u4e2d\u70b9\uff0c\n\n\u8fd9\u6837\u5c31\u53ea\u9700\u8981\u8003\u8651\u5bf9\u79f0\u8f74\u7ecf\u8fc7\u4e24\u4e2a\u70b9\u7684\u60c5\u51b5\u4e86\n\n\u679a\u4e3e\u6bcf\u4e2a\u4f4d\u7f6e\uff0c\u7136\u540e\u66b4\u529b\u5224\u65ad\u662f\u5426\u4e3a\u5bf9\u79f0\u8f74\n\n```cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef complex<double> cp;\n\nint n;\ncp a[200005];\nint p[100005];\n\ndouble dj(cp x, cp y) {\n\treturn x.real()*y.real() + x.imag()*y.imag();\n}\n\ndouble cj(cp x, cp y) {\n\treturn x.real()*y.imag() - x.imag()*y.real();\n}\n\nbool chk(int ps) {\n\tauto dz = a[(ps+n/2-1)%n+1] - a[ps];\n\tfor (int i = 1; i*2 < n; i++) {\n\t\tint ps1 = (ps+p[i]-1)%n+1;\n\t\tint ps2 = (ps-p[i]-1+n)%n+1;\n\t\tauto md = (a[ps1]+a[ps2]) / (double)2;\n\t\tif (cj(md-a[ps],dz) != 0 || dj(a[ps2]-a[ps1],dz) != 0) {\n\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 1;\n}\n\nsigned main() {\n//\tsrand(time(0));\n\tint t;\n\tcin >> t;\n\twhile (t--) {\n\t\tcin >> n;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tint x;\n\t\t\tscanf(\"%d\",&x);\n\t\t\ta[i*2+1].real(x);\n\t\t\tscanf(\"%d\",&x);\n\t\t\ta[i*2+1].imag(x);\n\t\t}\n\t\tfor (int i = 1; i < n; i++) {\n\t\t\ta[i*2] = (a[i*2-1] + a[i*2+1]) / (double)2;\n\t\t}\n\t\ta[n*2] = (a[1] + a[n*2-1]) / (double)2;\n\t\tfor (int i = 1; i < n; i++) {\n\t\t\tp[i] = i;\n\t\t}\n//\t\trandom_shuffle(p+1,p+n);\n\t\tint as = 0;\n\t\tn *= 2;\n\t\tfor (int i = 1; i*2 <= n; i++) {\n\t\t\tif (chk(i)) {\n\t\t\t\tas++;\n\t\t\t}\n\t\t}\n\t\tcout << as << endl;\n\t}\n\treturn 0;\n}\n```\n\n\u4e0b\u9762\u6765\u8bf4\u8bf4\u4e3a\u4ec0\u4e48\u66b4\u529b\u53ef\u8fc7\n\n\u56e0\u4e3a\u591a\u8fb9\u5f62\u7684\u6240\u6709\u5750\u6807\u90fd\u662f\u6574\u70b9\uff0c\u6240\u4ee5\u5bf9\u79f0\u8f74\u7684\u6570\u91cf\u4e0d\u4f1a\u592a\u591a\n\n\u5982\u679c\u67d0\u4e2a\u4f4d\u7f6e\u4e0d\u662f\u5bf9\u79f0\u8f74\u7684\u8bdd\uff0c\u901a\u5e38\u679a\u4e3e\u4e0d\u4e86\u51e0\u6b21\u5c31\u53ef\u4ee5\u627e\u5230\u4e0d\u5bf9\u79f0\u7684\u70b9\u5bf9\n\n\uff08\u5982\u679c\u6240\u6709\u70b9\u90fd\u5747\u5300\u5206\u5e03\u5728\u4e00\u6761\u76f4\u7ebf\u4e0a\uff08\u7136\u800c\u9898\u76ee\u4e2d\u5e76\u6ca1\u6709\u8fd9\u79cd\u60c5\u51b5\uff09\uff0c\u5224\u65ad\u5bf9\u79f0\u8f74\u65f6\u679a\u4e3e\u6b21\u6570\u4f1a\u6bd4\u8f83\u591a\uff0c\u8fd9\u65f6\u9700\u8981\u968f\u673a\u6253\u4e71\u679a\u4e3e\u987a\u5e8f\uff09\n\n\u6240\u4ee5\u8bf4 n^2 \u7684\u66b4\u529b\u5b9e\u9645\u4e0a\u8dd1\u5f97\u98de\u5feb\n\n~~\u4e0d\u8fc7\u5750\u6807\u662f\u5b9e\u6570\u7684\u8bdd\u66b4\u529b\u5c31\u4e0d\u597d\u7528\u4e86~~",
        "postTime": 1600080205,
        "uid": 120033,
        "name": "iuyi",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3454 \u3010[POI2007]OSI-Axes of Symmetry\u3011"
    },
    {
        "content": "NYG\u8bb2\u7684\u795e\u9898\uff0c\u8fd9\u4e00\u773c\u770b\u4e0a\u53bb\u50cf\u662f\u8ba1\u7b97\u51e0\u4f55\u7684\u9898\u76ee\uff0c\u4f46\u662f\u5de7\u5999\u5730\u8f6c\u6362\u4e00\u4e0b\u53d8\u6210\u5b57\u7b26\u4e32\u5904\u7406\u4f1a\u66f4\u597d\u5904\u7406\uff0c\u6211\u4eec\u628a\u8fb9\u548c\u89d2\uff08\u53c9\u79ef\uff09\u90fdhash\u4e0b\uff0c\u7136\u540e\u8dd1\u4e00\u904dmanacher\uff0c\u6216\u8005\u641e\u4e2a\u53cd\u4e32\u8dd1\u4e2akmp\uff0c\u6216\u8005\u540e\u7f00\u6570\u7ec4\uff0cSAM\u4ec0\u4e48\u7684\u90fd\u53ef\u4ee5\uff0c\u6c42\u4e2a\u6700\u957f\u56de\u6587\u4e32\uff0cok\u4e86\uff0c\u62a2\u4e2a\u6c99\u53d1\u554a\u554a\u554a\u3002\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<cstdlib>\n#include<algorithm>\n#include<cmath>\n#include<map>\nusing namespace std;\ntypedef long long LL;\n#define REP(i,a,b) for(register int i = (a),i##_end_ = (b); i <= i##_end_; ++i)\n#define DREP(i,a,b) for(register int i = (a),i##_end_ = (b); i >= i##_end_; --i)\n#define mem(a,b) memset(a,b,sizeof(a))\ntemplate<typename T> inline bool chkmin(T &a,const T &b) { return a > b ? a = b , 1 : 0;}\ntemplate<typename T> inline bool chkmax(T &a,const T &b) { return a < b ? a = b , 1 : 0;}\nint read()\n{\n    register int f = 1,s = 0;char c = getchar();\n    while(!isdigit(c)) { if(c == '-')f = -1;c = getchar();}\n    while(isdigit(c)) { s = s * 10 + c - '0';c = getchar();}\n    return f * s;\n}\nconst int maxn = 100011;\nint T,n;\ntypedef double db;\nstruct node\n{\n    int x,y;\n}p[maxn];\nint dis(int i,int j)\n{\n    db xa = p[i].x,ya = p[i].y,xb = p[j].x,yb = p[j].y;\n    return (xa-xb)*(xa-xb)+(ya-yb)*(ya-yb);\n}\nint cross(int i,int j,int k)\n{\n    node p1,p2;\n    p1.x = p[j].x-p[i].x;p1.y = p[j].y-p[i].y;\n    p2.x = p[k].x-p[i].x;p2.y = p[k].y-p[i].y;\n    return p1.x*p2.y-p2.x*p1.y;\n}\nint s[maxn<<3];\nint RL[maxn<<3],Maxr,pos;\nint main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\"1.in\",\"r\",stdin);\n    freopen(\"1.out\",\"w\",stdout);\n#endif\n    T = read();\n    REP(I,1,T)\n    {\n        n = read();mem(s,0);mem(p,0);\n        mem(RL,0);Maxr = pos = 0;\n        REP(i,0,n-1)p[i].x = read(),p[i].y = read();\n        REP(i,0,n-1)s[i<<1|1] = dis(i,(i+1)%n);\n        REP(i,0,n-1)s[i<<1] = cross(i,(i-1+n)%n,(i+1)%n);\n        //REP(i,0,(n<<1)-1)cout<<s[i]<<\" \";puts(\" \");\n        int N = n<<1;\n        REP(i,0,n-1)s[i+N] = s[i];\n        int ans = 0;\n        N<<=1;\n        REP(i,0,N-1)\n        {\n            if(i < Maxr)RL[i] = min(RL[2*pos-i],Maxr-i);\n            else RL[i] = 1;\n            while(i - RL[i] >= 0 && i + RL[i] <= N && s[i+RL[i]] == s[i-RL[i]])RL[i]++;\n            if(i+RL[i] > Maxr)Maxr = i+RL[i],pos = i;\n            if(RL[i] >= n+1)ans++;\n        }\n        cout<<ans<<endl;\n    }\n    return 0;\n}\n```",
        "postTime": 1508155193,
        "uid": 19645,
        "name": "Drinkwater",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3454 \u3010[POI2007]OSI-Axes of Symmetry\u3011"
    },
    {
        "content": "Manacher\u505a\u6cd5\u3002\n\n------------\n\n\u8003\u8651\u4e00\u4e2a\u591a\u8fb9\u5f62\u7684\u5bf9\u79f0\u8f74\u6709\u4ec0\u4e48\u6027\u8d28\u2014\u2014\n\n\u660e\u663e\uff0c\u5982\u679c\u6cbf\u7740\u5bf9\u79f0\u8f74\u7684\u4e00\u7aef\u628a\u6574\u4e2a\u73af\u72b6\u7684\u591a\u8fb9\u5f62\u88c1\u6210\u4e00\u6761\u94fe\uff0c\u5219\u94fe\u4e0a\u76f8\u90bb\u4e24\u6761\u8fb9\u7684\u5939\u89d2\uff0c\u5fc5\u5b9a\u662f\u56de\u6587\u7684\u3002\n\n\u56de\u6587\u5c31\u76f4\u63a5\u4e0aManacher\u5566\u3002\n\n\u6211\u4eec\u628a\u6574\u4e2a\u591a\u8fb9\u5f62\u65ad\u73af\u6210\u94fe\u590d\u5236\u4e09\u4efd\uff0c\u7136\u540e\u5bf9\u7740\u590d\u5236\u5b8c\u7684\u591a\u8fb9\u5f62\u7684\u6240\u6709\u5939\u89d2\u6784\u6210\u7684\u4e32\u8dd1\u4e00\u904dManacher\u3002\u5047\u5982\u53d1\u73b0\u91cc\u9762\u51fa\u73b0\u4e86\u4e00\u6761\u957f\u5ea6 $\\geq n$ \u7684\u56de\u6587\u4e32\uff0c\u5c31\u610f\u5473\u7740\u51fa\u73b0\u4e86\u4e00\u6761\u5bf9\u79f0\u8f74\u3002\n\n\u6ce8\u610f\uff0c\u56e0\u4e3a\u5bf9\u79f0\u8f74\u4f1a\u5728\u5176\u4e0e\u591a\u8fb9\u5f62\u7684\u4e24\u4e2a\u4ea4\u70b9\u5904\u88ab\u8ba1\u7b97\u4e24\u904d\uff0c\u6545\u6700\u7ec8\u7b54\u6848\u5e94\u9664\u4ee5 $2$\u3002\n\n\u5177\u4f53\u5b9e\u73b0\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u53c9\u79ef\u5224\u5939\u89d2\u76f8\u540c\uff0c\u4f46\u5b9e\u9645\u4e0a\u4f7f\u7528 ```atan2``` \u66b4\u529b\u7b97\u5939\u89d2\u7136\u540e\u7528 ```double``` \u5224\u76f8\u540c\u4e5f\u591f\u7528\u4e86\u3002\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint T,n;\nconst double pi=acos(-1);\nconst double eps=1e-10;\nstruct Vector{\n\tdouble x,y;\n\tVector(double X=0,double Y=0){x=X,y=Y;}\n\tfriend Vector operator +(const Vector &u,const Vector &v){return Vector(u.x+v.x,u.y+v.y);}\n\tfriend Vector operator -(const Vector &u,const Vector &v){return Vector(u.x-v.x,u.y-v.y);}\n\tfriend Vector operator *(const Vector &u,const double &v){return Vector(u.x*v,u.y*v);}\n\tfriend Vector operator /(const Vector &u,const double &v){return Vector(u.x/v,u.y/v);}\n\tfriend double operator &(const Vector &u,const Vector &v){return u.x*v.y-u.y*v.x;}//cross times\n\tfriend double operator |(const Vector &u,const Vector &v){return u.x*v.x+u.y*v.y;}//point times\n\tdouble operator ~()const{return sqrt(x*x+y*y);}//the modulo of a vector\n\tdouble operator !()const{return atan2(y,x);}//the angle of a vector\n\tvoid read(){scanf(\"%lf%lf\",&x,&y);}\n}p[300100];\nint m;\ndouble ang[600100];\nint Centre,Rpos,rad[600100];\ndouble FMOD(double ip){\n\tif(ip<0)ip+=2*pi;\n\tif(ip>=2*pi)ip-=2*pi;\n\treturn ip;\n}\nint main(){\n\tscanf(\"%d\",&T);\n\twhile(T--){\n\t\tscanf(\"%d\",&n),m=0;\n\t\tfor(int i=1;i<=n;i++)p[i].read(),p[n+i]=p[2*n+i]=p[i];\n\t\tp[0]=p[n],p[3*n+1]=p[1];\n\t\tang[++m]=-1;\n\t\tfor(int i=1;i<=3*n;i++){\n\t\t\tang[++m]=FMOD(!(p[i+1]-p[i])-!(p[i]-p[i-1]));\n\t\t\tang[++m]=-1;\n\t\t}\n\t\tCentre=Rpos=0;\n\t\tfor(int i=1;i<=m;i++){\n\t\t\trad[i]=(i<Rpos)?min(Rpos-i,rad[Centre*2-i]):1;\n\t\t\twhile(i+rad[i]<=m&&i-rad[i]>=1)if(fabs(ang[i+rad[i]]-ang[i-rad[i]])<eps)rad[i]++;else break;\n\t\t\tif(i+rad[i]>Rpos)Rpos=i+rad[i],Centre=i;\n\t\t}\n\t\tint res=0;\n\t\tfor(int i=2*n+1;i<=4*n;i++)res+=(rad[i]>=n);\n\t\tprintf(\"%d\\n\",res>>1);\n\t}\n\treturn 0;\n} \n```",
        "postTime": 1606698085,
        "uid": 123369,
        "name": "xtx1092515503",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3454 \u3010[POI2007]OSI-Axes of Symmetry\u3011"
    },
    {
        "content": "\u53d1\u4e00\u4e0bKMP\u7684\u505a\u6cd5\n### \u5e7f\u544a\n\u65e0\u803b\u5730\u5b89\u5229\u4e00\u4e0b\u672c\u849f\u84bb\u7684blog\n[\u849f\u84bb\u306e\u535a\u5ba2](https://www.cnblogs.com/birchtree/)\n### \u9898\u9762\n\n\u7ed9\u5b9a\u4e00\u4e2a\u591a\u8fb9\u5f62\uff0c\u6c42\u5bf9\u79f0\u8f74\u6570\u91cf\u3002\n\n### \u5206\u6790\n\n\u521d\u770b\u8fd9\u4f3c\u4e4e\u662f\u4e00\u9053\u8ba1\u7b97\u51e0\u4f55\u7684\u9898\u76ee\uff0c\u4f46\u662f\u5982\u679c\u66b4\u529b\u679a\u4e3e\u5bf9\u79f0\u8f74\uff0c\u518d\u53bb\u5224\u65ad\u5bf9\u79f0\u8f74\u4e24\u8fb9\u7684\u8fb9\u548c\u89d2\u662f\u5426\u76f8\u7b49\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a$O(n^2)$,\u663e\u7136\u4f1aTLE\n\n##### \u95ee\u9898\u8f6c\u6362\n\n\u987a\u65f6\u9488\u8f6c\u4e00\u5708\uff0c\u5c06\u89d2\u548c\u8fb9\u7684\u503c\u8fde\u5728\u4e00\u8d77\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u73af\n\n\u5047\u5982\u6709\u4e00\u4e2a\u8fb9\u957f\u4e3a1\u7684\u7b49\u8fb9\u4e09\u89d2\u5f62\uff0c\u5219\u5b83\u7684\u89d2\u548c\u8fb9\u5e8f\u5217\u5e94\u8be5\u662f\uff1a\n1,60\u00b0,1,60\u00b0,1,60\u00b0\uff0c\u56f4\u6210\u4e00\u4e2a\u542b\u67092n\u4e2a\u5143\u7d20\u7684\u73af\uff08\u89d2\u4e3a\u73af\u4e0a\u7684\u8fb9\uff0c\u8fb9\u4e3a\u73af\u4e0a\u7684\u7ed3\u70b9\uff09\u4e4b\u540e\u5c31\n\n\u53d8\u6210\u4e86\uff1a\n\n![](https://i.loli.net/2018/10/27/5bd416c45a371.jpg)\n\n\u5c061\u8bb0\u4e3aa,60\u00b0\u8bb0\u4e3ab\uff0c\u5219\u73af\u53d8\u4e3a\uff1a\n\n![](https://i.loli.net/2018/10/27/5bd41708b3bdf.jpg)\n\n\u800c\u5bf9\u79f0\u8f74\u4f1a\u628a\u8fd9\u4e9b\u70b9\u5206\u6210\u4e24\u90e8\u5206\uff0c\u4e14\u4e24\u90e8\u5206\u5b8c\u5168\u4e00\u6837\uff0c\u5bf9\u5e94\u5230\u5e8f\u5217\u4e0a\u5c31\u662f\uff1a\u65ad\u5f00\u73af\u4e0a\u7684\u67d0\u4e00\u6761\u8fb9\uff0c\u4e14\u8fde\n\n\u6210\u7684\u5e8f\u5217\u662f\u56de\u6587\u7684\n\n![](https://i.loli.net/2018/10/27/5bd4171182f47.jpg)\n\n##### \u73af\u7684\u5904\u7406\n\n\u5bf9\u4e8e\u73af\u4e0a\u7684\u56de\u6587\u95ee\u9898\uff0c\u6211\u4eec\u4e0d\u597d\u5904\u7406\u3002\u4e00\u79cd\u5e38\u89c1\u7684\u5904\u7406\u65b9\u6cd5\u662f**\u9009\u62e9\u4efb\u610f\u4e00\u4e2a\u4f4d\u7f6e\u65ad\u5f00\uff0c\u5c06\u5e8f\u5217\u590d\u5236\u6210**\n\n**\u4e3a2\u500d\u957f\u5ea6\u7684\u94fe**\u3002\n![](https://i.loli.net/2018/10/27/5bd417117ca36.jpg)\n\n\u7136\u540e\u6211\u4eec\u5728\u8fd9\u6761\u957f\u5ea6\u4e3a4n\u7684\u94fe\u4e0a\u627e\u957f\u5ea6\u4e3a2n\u7684\u56de\u6587\u4e32\n\n\n\n##### \u627e\u56de\u6587\u4e32\n\n\u5982\u4f55\u627e\u56de\u6587\u4e32\uff1fManacher\u7b97\u6cd5\u662f\u4e00\u79cd\u5f88\u6709\u6548\u7684\u65b9\u6cd5\uff0c\u4f46KMP\u7684\u4f7f\u7528\u8303\u56f4\u66f4\u5e7f\u3002\u5148\u9009\u62e9\u4efb\u610f\u4e00\u4e2a\u4f4d\u7f6e\u65ad\u5f00\uff0c\u8bb0\u8be5\u5e8f\u5217\u4e3aS0,\u518d\u590d\u5236\u4e00\u904d\u5f97\u5230\u5e8f\u5217S\uff0c\u5c06S0\u53cd\u8fc7\u6765\u5f97\u5230\u4e32T\uff0c\u6c42S\u4e2d\u6709\u591a\u5c11\u4e2a\u4f4d\u7f6e\u548cT\u5339\u914d\u5373\u53ef\n\n\u65f6\u95f4\u590d\u6742\u5ea6$O(n)$\n\n\n\n##### \u4e00\u4e9b\u7ec6\u8282\n\n- \u5982\u4f55\u5904\u7406\u8fb9\u548c\u89d2\uff1f \u8fb9\u76f4\u63a5\u7528\u957f\u5ea6\u8868\u793a\uff08\u6ce8\u610f\u4e0d\u5fc5\u8981\u5f00\u65b9\uff0c\u76f4\u63a5\u7528\u957f\u5ea6\u7684\u5e73\u65b9\u7b97\uff0c\u5927\u91cf\u8ba1\u7b97\u6839\u53f7\u4f1a\u5bfc\u81f4TLE\uff09\uff0c\u800c\u89d2\u7531\u4e8e\u8003\u8651\u5230\u56fe\u5f62\u4e0d\u4e00\u5b9a\u662f\u51f8\u591a\u8fb9\u5f62\uff0c\u91c7\u7528\u53c9\u79ef\u7684\u65b9\u6cd5\u8bb0\u5f55\u89d2\u5ea6\uff0c\u800c\u4e0d\u662f\u70b9\u79ef\u3002\u8fd9\u91cc\u8fd0\u7528\u4e86\u53c9\u79ef\u7684\u6027\u8d28\uff1a\u4e24\u5411\u91cf\u5939\u89d2\u5c0f\u4e8e180\u00b0\u4e3a\u6b63\u503c\uff0c\u5939\u89d2\u5927\u4e8e180\u00b0\u4e3a\u8d1f\u503c\n- \u8fb9\u548c\u89d2\u90fd\u7528long long \u5b58\u50a8\uff0c\u4e0d\u5fc5\u7528double\n- \u5e8f\u5217S\u7684\u957f\u5ea6\u4e3a4n,\u5e8f\u5217T\u7684\u957f\u5ea6\u4e3a2n,\u6570\u7ec4\u4e0d\u8981\u5f00\u5c0f\u4e86\n\n### \u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#define maxn 100005\nusing namespace std;\ninline void qread(int &x) {\n\tx=0;\n\tint sign=1;\n\tchar c=getchar();\n\twhile(c<'0'||c>'9') {\n\t\tif(c=='-') sign=-1;\n\t\tc=getchar();\n\t}\n\twhile(c>='0'&&c<='9') {\n\t\tx=x*10+c-'0';\n\t\tc=getchar();\n\t}\n\tx=x*sign;\n}\n\nint n;\nint T;\nstruct point {//\u70b9 \n\tlong long x;\n\tlong long y;\n\tpoint() {\n\n\t}\n\tpoint(long long xx,long long yy) {\n\t\tx=xx;\n\t\ty=yy;\n\t}\n\tfriend point operator +(point a,point b) {\n\t\treturn point(a.x+b.x,a.y+b.y);\n\t}\n\tfriend point operator -(point a,point b) {\n\t\treturn point(a.x-b.x,a.y-b.y);\n\t}\n} a[maxn];\ntypedef point vector;//\u5728\u7a0b\u5e8f\u5b9e\u73b0\u4e0a\uff0c\u70b9\u548c\u5411\u91cf\u6ca1\u6709\u533a\u522b \nlong long dot(vector a,vector b) {//\u70b9\u79ef \n\treturn a.x*b.x+a.y*b.y;\n}\nlong long cross(vector a,vector b) {//\u53c9\u79ef \n\treturn a.x*b.y-a.y*b.x;\n}\n\nlong long dist(point a,point b) {//\u8ba1\u7b97\u4e24\u70b9\u95f4\u8ddd\u79bb \n\tvector v=a-b;\n\treturn dot(v,v);\n}\n\nlong long work_edge(int x) {//\u9010\u4e00\u5904\u7406\u591a\u8fb9\u5f62\u7684\u8fb9\uff0c\u6ce8\u610f\u7f16\u53f7\u4e3an\u7684\u70b9\u4e0b\u4e00\u4e2a\u70b9\u662f1 \n\tint y=x+1;\n\tif(y>n) y=1;\n\treturn dist(a[x],a[y]);\n}\nlong long work_ang(int x) {//\u5904\u7406\u89d2\uff0c\u540c\u6837\u6ce8\u610f\u7f16\u53f7\u4e3an\u7684\u70b9\u4e0b\u4e00\u4e2a\u70b9\u662f1 \n\tint y=x+1,z=x+2;\n\tif(y>n) y=y%n;\n\tif(z>n) z=z%n;\n\treturn cross(a[y]-a[x],a[z]-a[y]);\n}\nlong long edge[maxn];\nlong long ang[maxn];\nlong long tmp[maxn];\nint s[maxn*4];\nint t[maxn*2];\n\nint next[maxn*4];\nint f[maxn*4];\nint KMP(int *a,int n,int *b,int m) {//KMP\u6a21\u677f \n\tnext[1]=0;\n\tfor(int i=2,j=0; i<=n; i++) {\n\t\twhile(j>0&&a[i]!=a[j+1]) j=next[j];\n\t\tif(a[i]==a[j+1]) j++;\n\t\tnext[i]=j;\n\t}\n\tfor(int i=2,j=0; i<=m; i++) {\n\t\twhile(j>0&&b[i]!=a[j+1]) j=next[j];\n\t\tif(b[i]==a[j+1]) j++;\n\t\tf[i]=j;\n\t}\n\tint cnt=0;\n\tfor(int i=1; i<=m; i++) {\n\t\tif(f[i]==n) cnt++;\n\t}\n\treturn cnt;\n}\nint main() {\n\tint x,y;\n\tqread(T);\n\twhile(T--) {\n\t\tqread(n);\n\t\tfor(int i=1; i<=n; i++) {\n\t\t\tqread(x);\n\t\t\tqread(y);\n\t\t\ta[i].x=x;\n\t\t\ta[i].y=y;\n\t\t}\n\t\tfor(int i=1; i<=n; i++) {\n\t\t\tedge[i]=work_edge(i);\n\t\t\tang[i]=work_ang(i);\n\t\t}\n\t\tint newn=0;\n\t\tint newm=0;\n\t\tfor(int i=1; i<=n; i++) {//\u7531\u4e8e\u8ba1\u7b97\u7684\u89d2\u662f\u7b2ci\u4e0ei+1\u6761\u8fb9\u4e4b\u95f4\u7684\u5939\u89d2\uff0c\u6240\u4ee5\u5148\u52a0\u5165\u8fb9\uff0c\u518d\u52a0\u5165\u89d2 \n\t\t\ts[++newn]=edge[i];\n\t\t\ts[++newn]=ang[i];\n\t\t}\n\t\tfor(int i=1; i<=n; i++) {\n\t\t\ts[++newn]=edge[i];\n\t\t\ts[++newn]=ang[i];\n\t\t}\n\t\tfor(int i=n*2; i>=1; i--) {\n\t\t\tt[++newm]=s[i];\n\t\t}\n\t\tprintf(\"%d\\n\",KMP(t,newm,s,newn));\n\t}\n}\n\n\n```",
        "postTime": 1540626601,
        "uid": 38148,
        "name": "\u767d\u6866\u6811",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3454 \u3010[POI2007]OSI-Axes of Symmetry\u3011"
    },
    {
        "content": "$n^2$ \u8fc7\u767e\u4e07\uff0c\u66b4\u529b\u78be\u6807\u7b97\uff1f\n\n\u601d\u8def\u4e3b\u8981\u6765\u81ea WintersRain & pythoner713 .\n\n***\n\n\u9996\u5148\u987a\u65f6\u9488 / \u9006\u65f6\u9488\u8f6c\u4e00\u5708\u8bb0\u5f55\u89d2\u5ea6\u548c\u8fb9\u957f\uff0c\u7136\u540e\u628a\u5e8f\u5217\u8fde\u6210\u4e00\u4e2a\u73af\uff0c\u95ee\u9898\u5c31\u53d8\u6210\u6709\u591a\u5c11\u4e2a\u65ad\u70b9\u53ef\u4ee5\u4f7f\u5f97\u65ad\u5f00\u540e\u7684\u4e32\u662f\u56de\u6587\u4e32\uff08\u89c2\u5bdf\u5bf9\u79f0\u8f74\u4e4b\u5b9a\u4e49\uff09.\n\n\u8fd9\u4e2a\u76f4\u63a5 $O(n^2)$ \u66b4\u529b\uff0c\u8dd1\u5f97\u6bd4 Hash \u8fd8\u5feb .\n\n\u907f\u514d\u6d6e\u70b9\u8bef\u5dee\u53ef\u4ee5\u89d2\u5ea6 -> \u53c9\u79ef\uff0c\u8fb9\u957f\u76f4\u63a5\u5e73\u65b9 .\n\n```cpp\n// \u548c\u6e90\u4ee3\u7801\u6709\u51fa\u5165\uff08\u66b4\u623e\u8bed\u8a00\u88ab\u548c\u8c10\u4e3a 123\uff0c\u6ce8\u610f\u8fd9\u4e2a\u8fc7\u4e0d\u4e86\u7f16\u8bd1\uff09\n#include <bits/stdc++.h>\ntemplate<typename T>\ninline T chkmin(T& x, const T& y){if (x > y) x = y; return x;}\ntemplate<typename T>\ninline T chkmax(T& x, const T& y){if (x < y) x = y; return x;}\ntemplate<typename T>\ninline T sqr(const T& x){return x * x;}\nusing namespace std;\ntypedef long long ll;\ntypedef double db;\ntypedef pair<int, int> pii;\nconst int N = 5e5+5;\nint n;\npii a[N];\nint _[N];\ninline void fstmod_(int& x, const int& P){if (x > P) x -= P;}\nint cross(const pii& A, const pii& B){return A.first * B.second - A.second * B.first;}\nint dot(const pii& A, const pii& B){return A.first * B.first + A.second * B.second;}\npii 123(const pii& A, const pii& B){return make_pair(A.first - B.first, A.second - B.second);}\ninline void solve()\n{\n\tscanf(\"%d\", &n);\n\tfor (int i=1; i<=n; i++) scanf(\"%d%d\", &a[i].first, &a[i].second);\n\tfor (int i=1; i<=n; i++)\n\t{\n\t\tint p=i, q=i+1, r=i+2; fstmod_(q, n); fstmod_(r, n);\n\t\t_[(i<<1)-1] = dot(123(a[p], a[q]), 123(a[p], a[q])); _[i<<1] = cross(123(a[p], a[q]), 123(a[q], a[r]));\n\t}\n\tn <<= 1;\n\tfor (int i=1; i<=n; i++) _[i+n] = _[i];\n\tint ans = n;\n\tfor (int i=1; i<=n; i++)\n\t\tfor (int j=i; j<=i+n; j++)\n\t\t\tif (_[j] != _[i+n+1-j]){--ans; break;}\n\tprintf(\"%d\\n\", ans);\n}\nint main()\n{\n\tint T; scanf(\"%d\", &T);\n\twhile (T--) solve();\n\treturn 0;\n}\n```",
        "postTime": 1659001793,
        "uid": 227514,
        "name": "jijidawang",
        "ccfLevel": 0,
        "title": "P3454"
    }
]