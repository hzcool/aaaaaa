[
    {
        "content": "- **\u9996\u5148\u8003\u8651\u4ec5\u6267\u884c\u524d\u4e24\u79cd\u64cd\u4f5c\u53ef\u4ee5\u5f97\u5230\u7684\u6700\u5c0f\u5b57\u7b26\u4e32\u3002**\r\n\r\n\u4e00\u4e2a\u663e\u7136\u7684\u8d2a\u5fc3\u662f\uff0c\u82e5\u5f53\u524d $S$ \u7684\u9996\u5b57\u7b26\u5927\u4e8e $T$ \u7684\u9996\u5b57\u7b26\u5c31\u6267\u884c\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\uff0c\u5426\u5219\u6267\u884c\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u3002\u4e0d\u96be\u8bc1\u660e\u5176\u6b63\u786e\u6027\u3002\r\n\r\n- **\u56de\u5230\u539f\u95ee\u9898\u3002**\r\n\r\n\u5148\u5c06\u9898\u610f\u8f6c\u5316\u4e3a\uff1a\u5c06 $S$ \u5206\u6210\u524d\u540e\u4e24\u4e2a\u90e8\u5206 $A,B$\uff0c\u5bf9 $A$ \u4ece\u5de6\u5230\u53f3\u6267\u884c\u524d\u4e24\u79cd\u64cd\u4f5c\uff0c\u5bf9 $B$ \u4ece\u53f3\u5230\u5de6\u6267\u884c\u7b2c\u4e09\u79cd\u64cd\u4f5c\u3002\u4ee4\u5bf9 $A$ \u6267\u884c\u7b2c\u4e00\u79cd\u64cd\u4f5c**\u5728 $T$ \u4e2d**\u5f62\u6210\u7684\u5b57\u7b26\u4e32\u4e3a $C$\uff0c\u5bf9 $A$ \u6267\u884c\u7b2c\u4e8c\u79cd\u64cd\u4f5c**\u5728 $T$ \u4e2d**\u5f62\u6210\u7684\u5b57\u7b26\u4e32\u4e3a $D$\u3002\r\n\r\n\u6211\u4eec\u53ef\u4ee5\u5c06\u7b2c\u4e09\u79cd\u64cd\u4f5c\u89c6\u4f5c\u5c06 $B$ \u4e0d\u6539\u53d8\u987a\u5e8f\u5730\u7a7f\u63d2\u5230 $C$ \u4e2d\u7684\u4efb\u610f\u4f4d\u7f6e\uff0c\u5373\u5f62\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32 $E$\uff0c\u4f7f\u5f97 $E$ \u80fd\u591f\u6070\u597d\u5212\u5206\u4e3a\u4e24\u4e2a\u5206\u522b\u4e0e $B,C$ \u76f8\u540c\u7684\u5b50\u5e8f\u5217\u3002\u6700\u7ec8 $T$ \u5373\u4e3a $E+D$\uff0c\u5176\u4e2d $+$ \u8868\u793a\u5b57\u7b26\u4e32\u7684\u62fc\u63a5\u3002\r\n\r\n\u4ee5\u7b2c\u4e8c\u4e2a\u6837\u4f8b\u4e2d $S=\\mathsf{{\\color{orange}d}{\\color{orange}c}{\\color{orange}b}{\\color{yellowgreen}c}{\\color{orange}a}{\\color{yellowgreen}d}{\\color{cornflowerblue}b}}$ \u6784\u9020\u51fa $T=\\mathsf{{\\color{orange}a}{\\color{cornflowerblue}b}{\\color{orange}b}{\\color{orange}c}{\\color{orange}d}{\\color{yellowgreen}c}{\\color{yellowgreen}d}}$ \u4e3a\u4f8b\uff0c\u5c06 $S$ \u5206\u4e3a\u524d\u540e\u4e24\u4e2a\u90e8\u5206 $A=\\mathsf{{\\color{orange}d}{\\color{orange}c}{\\color{orange}b}{\\color{yellowgreen}c}{\\color{orange}a}{\\color{yellowgreen}d}},B=\\mathsf{{\\color{cornflowerblue}b}}$\uff0c\u5bf9\u6a59\u8272\u90e8\u5206\u6267\u884c\u7b2c\u4e00\u79cd\u64cd\u4f5c\uff0c\u5bf9\u7eff\u8272\u90e8\u5206\u6267\u884c\u7b2c\u4e8c\u79cd\u64cd\u4f5c\uff0c\u5f97\u5230 $C=\\mathsf{{\\color{orange}a}{\\color{orange}b}{\\color{orange}c}{\\color{orange}d}},D=\\mathsf{{\\color{yellowgreen}c}{\\color{yellowgreen}d}}$\uff0c\u518d\u5c06 $B$ \u63d2\u5165 $C$ \u4e2d\u5f97\u5230 $E=\\mathsf{{\\color{orange}a}{\\color{cornflowerblue}b}{\\color{orange}b}{\\color{orange}c}{\\color{orange}d}}$\uff0c\u6700\u7ec8 $T=E+D=\\mathsf{{\\color{orange}a}{\\color{cornflowerblue}b}{\\color{orange}b}{\\color{orange}c}{\\color{orange}d}{\\color{yellowgreen}c}{\\color{yellowgreen}d}}$\u3002\r\n\r\n\u89c2\u5bdf\u6574\u4e2a $T$ \u7684\u6784\u9020\u6d41\u7a0b\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u9700\u8981\u89e3\u51b3\u4e09\u4e2a\u95ee\u9898\uff1a\r\n\r\n1. \u82e5\u786e\u5b9a\u4e86 $A$\uff0c\u5982\u4f55\u6784\u9020\u6700\u4f18\u7684 $C,D$\uff1f\r\n2. \u82e5\u786e\u5b9a\u4e86 $B,C$\uff0c\u5982\u4f55\u6784\u9020\u6700\u4f18\u7684 $E$\uff1f\r\n3. \u5982\u4f55\u5212\u5206 $A,B$\uff1f\r\n\r\n\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u4e00\u5f00\u59cb\u5df2\u7ecf\u89e3\u51b3\u4e86\u3002\u5f62\u5f0f\u5316\u5730\u6765\u8bb2\uff0c\u6211\u4eec\u5bf9 $A$ \u4e2d\u6240\u6709\u524d\u7f00\u6700\u5c0f\u5b57\u7b26\u8fdb\u884c\u7b2c\u4e00\u79cd\u64cd\u4f5c\uff0c\u5bf9\u5269\u4f59\u5b57\u7b26\u8fdb\u884c\u7b2c\u4e8c\u79cd\u64cd\u4f5c\uff0c\u5176\u4e2d\u524d\u7f00\u6700\u5c0f\u5b57\u7b26\u6307\u7684\u662f\u4e0d\u5927\u4e8e\u81ea\u8eab\u4e4b\u524d\u4efb\u610f\u5b57\u7b26\u7684\u5b57\u7b26\u3002\u53ef\u4ee5\u89c2\u5bdf\u5230\uff0c\u8fd9\u6837\u5f62\u6210\u7684 $C$ \u4e00\u5b9a\u662f\u4e2a**\u5355\u8c03\u4e0d\u964d**\u7684\u5b57\u7b26\u5e8f\u5217\u3002\r\n\r\n\u5bf9\u4e8e\u7b2c\u4e8c\u4e2a\u95ee\u9898\uff0c\u7531\u4e8e $C$ \u4e2d\u5b57\u7b26\u5355\u8c03\u4e0d\u964d\uff0c\u6545\u6211\u4eec\u4f9d\u7136\u53ef\u4ee5\u91c7\u53d6\u4e00\u4e2a\u8d2a\u5fc3\u7684\u7b56\u7565\uff1a\u82e5 $B$ \u7684\u9996\u5b57\u7b26\u5927\u4e8e $C$ \u7684\u9996\u5b57\u7b26\uff0c\u5219\u5c06 $C$ \u7684\u9996\u5b57\u7b26\u52a0\u5165\u5230 $E$ \u7684\u672b\u5c3e\u5e76\u5c06 $C$ \u7684\u9996\u5b57\u7b26\u5220\u53bb\uff0c\u5426\u5219\u5c06 $B$ \u7684\u9996\u5b57\u7b26\u52a0\u5165\u5230 $E$ \u7684\u672b\u5c3e\u5e76\u5c06 $B$ \u7684\u9996\u5b57\u7b26\u5220\u53bb\u3002\r\n\r\n\u5bf9\u4e8e\u7b2c\u4e09\u4e2a\u95ee\u9898\uff0c\u66b4\u529b\u679a\u4e3e $A,B$ \u7684\u5212\u5206\u4f4d\u7f6e\u3002\r\n\r\n\u6309\u7167\u4e0a\u8ff0\u8fc7\u7a0b\u6a21\u62df\uff0c\u6211\u4eec\u4fbf\u5f97\u5230\u4e86\u4e00\u4e2a $O(n^2)$ \u7684\u505a\u6cd5\u3002\r\n\r\n- **\u8003\u8651\u4f18\u5316\u3002**\r\n\r\n\u74f6\u9888\u5728\u4e8e\u679a\u4e3e $A,B$ \u7684\u5212\u5206\u4f4d\u7f6e\u4e0a\uff0c\u8003\u8651\u80fd\u5426**\u7f29\u5c0f\u679a\u4e3e\u8303\u56f4**\u3002\r\n\r\n\u4e0d\u96be\u53d1\u73b0\uff0c\u5bf9 $S$ \u4e2d\u6240\u6709\u524d\u7f00\u6700\u5c0f\u5b57\u7b26\u5747\u8fdb\u884c\u7b2c\u4e00\u79cd\u64cd\u4f5c\u4e00\u5b9a\u4e0d\u52a3\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4ee4 $S$ \u4e2d\u6700\u5c0f\u5b57\u7b26\u7684\u6700\u540e\u51fa\u73b0\u4f4d\u7f6e\u4e3a $p$\uff0c\u5219\u5c06 $S_p$ \u53ca\u5176\u4e4b\u524d\u7684\u5b57\u7b26\u90fd\u5f52\u5230 $A$ \u4e2d\u4e00\u5b9a\u4e0d\u52a3\u3002\u90a3\u4e48\u6b64\u65f6\u6574\u4e2a $C$ \u548c $D$ \u7684\u4e00\u6bb5\u524d\u7f00\u5c31\u786e\u5b9a\u4e0b\u6765\u4e86\u3002\r\n\r\n\u4ee4 $S$ \u4e2d $S_{p+1}$ \u8bb0\u5176\u4e4b\u540e\u7684\u5b57\u7b26\u6784\u6210\u7684\u5b57\u7b26\u4e32\u4e3a $X$\uff0c\u5219\u6211\u4eec\u9700\u8981\u9009\u53d6 $X$ \u7684\u4e00\u4e2a\u540e\u7f00\u4f5c\u4e3a $B$\uff0c\u5269\u4f59\u90e8\u5206\u5c31\u63a5\u5728\u5df2\u7ecf\u786e\u5b9a\u7684 $D$ \u7684\u540e\u9762\u3002\u65e2\u7136 $B$ \u6700\u7ec8\u5728 $D$ \u524d\uff0c\u90a3\u4e48\u6211\u4eec**\u5e0c\u671b\u9009\u51fa\u6765\u7684 $B$ \u7684\u5b57\u5178\u5e8f\u5c3d\u53ef\u80fd\u5c0f**\u3002\u4e00\u4e2a\u81ea\u7136\u7684\u60f3\u6cd5\u662f\u76f4\u63a5\u9009\u53d6 $X$ \u7684\u6700\u5c0f\u540e\u7f00\u4f5c\u4e3a $B$\uff0c\u4f46\u5f88\u53ef\u60dc\u8fd9\u662f\u9519\u7684\u3002\u4e00\u4e2a\u7b80\u5355\u7684\u53cd\u4f8b\u662f $S=\\mathsf{{\\color{orange}c}{\\color{orange}b}{\\color{yellowgreen}d}{\\color{orange}a}{\\color{cornflowerblue}b}{\\color{cornflowerblue}c}{\\color{cornflowerblue}b}}$\uff0c\u6b64\u65f6\u6700\u4f18\u7684 $B$ \u5e94\u5f53\u662f $\\mathsf{{\\color{cornflowerblue}b}{\\color{cornflowerblue}c}{\\color{cornflowerblue}b}}$\uff0c\u800c\u4e0d\u662f\u5b57\u5178\u5e8f\u6700\u5c0f\u7684 $\\mathsf{{\\color{cornflowerblue}b}}$\u3002\r\n\r\n\u90a3\u4e48\u95ee\u9898\u51fa\u5728\u54ea\u513f\u5462\uff1f\u51fa\u5728 \u201c\u5b57\u5178\u5e8f\u6700\u5c0f\u201d \u7684\u6761\u4ef6\u4e2d**\u5305\u542b\u4e86\u5bf9\u4e8e\u5b57\u7b26\u4e32\u957f\u5ea6\u7684\u6bd4\u8f83**\u3002\u5bf9\u4e8e $X$ \u7684\u4e24\u4e2a\u540e\u7f00 $s,s'\\ (|s|<|s'|)$\uff0c\u82e5 $\\forall 1\\le i\\le |s|$ \u90fd\u6709 $s_i=s'_i$\uff0c\u90a3\u4e48\u867d\u7136 $s$ \u5b57\u5178\u5e8f\u6bd4 $s'$ \u5c0f\uff0c\u4f46\u82e5\u540e\u9762\u52a0\u4e0a\u4e86 $D$\uff0c$s'$ \u5374\u53ef\u80fd\u6bd4 $s$ \u66f4\u4f18\u3002\r\n\r\n\u6211\u4eec\u9000\u800c\u6c42\u5176\u6b21\uff0c\u9009\u62e9 $X$ \u4e2d**\u4e0d\u8003\u8651\u957f\u5ea6\u9650\u5236\u7684\u5b57\u5178\u5e8f\u6700\u5c0f\u7684**\u82e5\u5e72\u540e\u7f00\u3002\u4f46\u8fd9\u6837\u7684\u5b57\u7b26\u4e32\u53ef\u80fd\u4ecd\u65e7\u5f88\u591a\uff0c\u65e0\u6cd5\u76f4\u63a5\u6a21\u62df\u3002\r\n\r\n\u89c2\u5bdf\u8fd9\u4e9b\u540e\u7f00\u7684\u6027\u8d28\u3002\u4ee4\u8fd9\u4e9b\u540e\u7f00\u5206\u522b\u4e3a $s_1,s_2,\\dots,s_k\\ (|s_1|<|s_2|<\\dots<|s_k|)$\uff0c\u90a3\u4e48 $\\forall 1\\le i<k$ \u90fd\u6709 **$s_i$ \u4e3a $s_{i+1}$ \u7684\u4e00\u6bb5\u524d\u7f00**\uff0c\u5373 $s_i$ \u4e3a $s_{i+1}$ \u7684\u4e00\u4e2a border\uff0c\u4ea6\u5373 $s_2,s_3,\\dots,s_k$ \u4e3a $s_1$ \u7684 border\u3002\r\n\r\n\u63a5\u4e0b\u6765\u6709\u4e24\u6761\u8def\u53ef\u8d70\u3002\r\n\r\n### \u6cd5\u4e00\r\n\r\n\u4f9d\u636e\u8fd9\u4e2a\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528 $s_i$ \u7684\u7ed3\u679c\u63a8\u51fa $s_{i+1}$ \u7684\u7ed3\u679c\u3002\u5177\u4f53\u5730\uff0c\u8981\u60f3\u6bd4\u8f83 $B=s_i$ \u6240\u6784\u9020\u51fa\u7684 $T$ \u548c $B=s_{i+1}$ \u6240\u6784\u9020\u51fa\u7684 $T'$ \u7684\u5927\u5c0f\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 $T$ \u7684\u57fa\u7840\u4e0a\uff0c\u6839\u636e\u524d\u6587\u7684\u8d2a\u5fc3\uff0c\u66b4\u529b\u6dfb\u52a0\u5b57\u7b26\u76f4\u81f3 $B=s_{i+1}$\u3002\u5728\u6dfb\u52a0\u7684\u8fc7\u7a0b\u4e2d\u8fdb\u884c\u9010\u4f4d\u6bd4\u8f83\uff0c\u6dfb\u52a0\u5b8c\u6210\u540e\uff0c\u7531\u4e8e\u5269\u4f59\u7684\u90e8\u5206\u6784\u6210\u4e00\u6bb5\u533a\u95f4\uff0c\u90a3\u4e48\u76f4\u63a5\u5229\u7528\u4f60\u559c\u6b22\u7684\u65b9\u5f0f\u6bd4\u8f83\u5373\u53ef\u3002\r\n\r\n\u65f6\u95f4\u590d\u6742\u5ea6\u74f6\u9888\u5728\u4e8e\u540e\u7f00\u6392\u5e8f\u3002\r\n\r\n```cpp\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nint t,n,nc,nd,ns,tp,sa[1000009],rnk[1000009],slen[1000009];\r\nchar s[1000009],C[1000009],D[1000009],T[1000009],ans[1000009];\r\ninline int read(){\r\n\tint s = 0,w = 1;\r\n\tchar ch = getchar();\r\n\twhile (ch > '9' || ch < '0'){ if (ch == '-') w = -1; ch = getchar();}\r\n\twhile (ch <= '9' && ch >= '0') s = (s << 1) + (s << 3) + (ch ^ 48),ch = getchar();\r\n\treturn s * w;\r\n}\r\nnamespace SAM{\r\n\tint tp,tot,cnt = 1,last = 1,tmp[26],hd[2000009],fa[2000009],dy[2000009],id[2000009],len[2000009],pos[2000009],suf[2000009],ch[2000009][26];\r\n\tstruct st{int x,y;}eg[2000009];\r\n\tvoid addedge(int u,int v){eg[++ tot] = (st){v,hd[u]},hd[u] = tot;}\r\n\tvoid clear(){\r\n\t\tfor (int i = 1;i <= cnt;i += 1){\r\n\t\t\tmemset(ch[i],0,sizeof(ch[i]));\r\n\t\t\tfa[i] = dy[i] = id[i] = len[i] = pos[i] = suf[i] = 0;\r\n\t\t}\r\n\t\tcnt = last = 1;\r\n\t}\r\n\tvoid ins(int x,int y){\r\n\t\tint p = last,cur = ++ cnt;\r\n\t\tpos[cur] = y,suf[cur] = 1,len[cur] = len[last] + 1;\r\n\t\twhile (p && !ch[p][x]) ch[p][x] = cur,p = fa[p];\r\n\t\tint q = ch[p][x];\r\n\t\tif (!q) fa[cur] = 1;\r\n\t\telse if (len[p] + 1 == len[q]) fa[cur] = q;\r\n\t\telse{\r\n\t\t\tint r = ++ cnt;\r\n\t\t\tfa[r] = fa[q],pos[r] = pos[q],len[r] = len[p] + 1;\r\n\t\t\tmemcpy(ch[r],ch[q],sizeof(ch[q]));\r\n\t\t\twhile (p && ch[p][x] == q) ch[p][x] = r,p = fa[p];\r\n\t\t\tfa[cur] = fa[q] = r;\r\n\t\t}\r\n\t\tlast = cur;\r\n\t}\r\n\tvoid dfs(int u,bool fl,bool opt){\r\n\t\tif (suf[u]){\r\n\t\t\tif (opt){\r\n\t\t\t\tif (!fl) return;\r\n\t\t\t\tslen[++ ns] = n - pos[u] + 1;\r\n\t\t\t}\r\n\t\t\telse tp += 1,sa[tp] = pos[u],rnk[pos[u]] = tp;\r\n\t\t}\r\n\t\tfor (int i = hd[u];i;i = eg[i].y) dfs(eg[i].x,fl,opt),fl = 0;\r\n\t}\r\n\tvoid work(int opt){\r\n\t\ttp = tot = 0;\r\n\t\tfor (int i = 0;i < 26;i += 1) tmp[i] = 0;\r\n\t\tfor (int i = 1;i <= cnt;i += 1) hd[i] = 0;\r\n\t\tfor (int i = 1;i <= cnt;i += 1) dy[i] = T[pos[i] + len[fa[i]]] - 'a',tmp[dy[i]] += 1;\r\n\t\tfor (int i = 1;i < 26;i += 1) tmp[i] += tmp[i - 1];\r\n\t\tfor (int i = 1;i <= cnt;i += 1) id[tmp[dy[i]] --] = i;\r\n\t\tfor (int i = cnt;i >= 1;i -= 1) if (fa[id[i]]) addedge(fa[id[i]],id[i]);\r\n\t\tdfs(1,1,opt);\r\n\t}\r\n}\r\nvoid clear(){\r\n\tSAM :: clear();\r\n\tnc = nd = ns = tp = 0;\r\n\tfor (int i = 1;i <= n;i += 1) sa[i] = rnk[i] = slen[i] = 0;\r\n}\r\nint main(){\r\n\tt = read();\r\n\twhile (t --){\r\n\t\tclear(),scanf(\"%s\",s + 1),n = strlen(s + 1);\r\n\t\tint pos = 1;\r\n\t\tfor (int i = 1;i <= n;i += 1) if (s[i] <= s[pos]){\r\n\t\t\tC[++ nc] = s[i];\r\n\t\t\tfor (int j = pos + 1;j < i;j += 1) D[++ nd] = s[j];\r\n\t\t\tpos = i;\r\n\t\t}\r\n\t\treverse(C + 1,C + nc + 1);\r\n\t\tfor (int i = 1;i <= nc;i += 1) T[i] = C[i];\r\n\t\tfor (int i = 1;i <= nd;i += 1) T[i + nc] = D[i];\r\n\t\tfor (int i = pos + 1;i <= n;i += 1) T[i] = s[i];\r\n\t\tfor (int i = n;i > pos;i -= 1) SAM :: ins(T[i] - 'a',i);\r\n\t\tSAM :: work(1);\r\n\t\tfor (int i = pos;i >= 1;i -= 1) SAM :: ins(T[i] - 'a',i);\r\n\t\tSAM :: work(0);\r\n\t\tint fl = 0,res = 0,now = 1,cur = 1,cpos = 1,mnpos = n - slen[ns];\r\n\t\tfor (int i = 1;i <= slen[ns];i += 1){\r\n\t\t\twhile (cpos <= nc && T[cpos] < T[mnpos + i]){\r\n\t\t\t\tif (!fl && T[cpos] < T[cur]) fl = 1;\r\n\t\t\t\tif (!fl && T[cpos] > T[cur]) goto GG;\r\n\t\t\t\tcur += 1,cpos += 1;\r\n\t\t\t}\r\n\t\t\tif (!fl && T[mnpos + i] < T[cur]) fl = 1;\r\n\t\t\tif (!fl && T[mnpos + i] > T[cur]) goto GG;\r\n\t\t\tcur += 1;\r\n\t\t\tif (i == slen[now]){\r\n\t\t\t\tif (fl == 1 || rnk[cpos] < rnk[cur]) cur = cpos,res = slen[now];\r\n\t\t\t\tfl = 0,now += 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tGG:;\r\n\t\tcpos = 1;\r\n\t\tfor (int i = 1;i <= res;i += 1){\r\n\t\t\twhile (cpos <= nc && T[cpos] < T[mnpos + i]) ans[++ tp] = T[cpos ++];\r\n\t\t\tans[++ tp] = T[mnpos + i];\r\n\t\t}\r\n\t\twhile (cpos <= nc) ans[++ tp] = T[cpos ++];\r\n\t\tfor (int i = 1;i <= nd;i += 1) ans[++ tp] = T[nc + i];\r\n\t\tfor (int i = pos + 1;i <= n - res;i += 1) ans[++ tp] = T[i];\r\n\t\tfor (int i = 1;i <= n;i += 1) putchar(ans[i]);\r\n\t\tputs(\"\");\r\n\t}\r\n\treturn 0;\r\n}\r\n```\r\n\r\n\r\n### \u6cd5\u4e8c\r\n\r\n\u6839\u636e border \u7684\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u5c06 $|s_1|,|s_2|,\\dots,|s_k|$ \u5206\u6210 $O(\\log k)$ \u6bb5\u7b49\u5dee\u6570\u5217\u3002\u8bb0\u6709 $c$ \u6bb5\u7b49\u5dee\u6570\u5217\uff0c\u7b2c $i$ \u6bb5\u7531 $s_{l_i},s_{l_i+1},\\dots,s_{r_i}$ \u6784\u6210\u3002\r\n\r\n\u53ef\u4ee5\u6839\u636e\u8c03\u6574\u6cd5\u8bc1\u660e\uff0c\u6700\u4f18\u7684 $B$ \u4e00\u5b9a\u53ea\u5b58\u5728\u4e8e\u6bcf\u6bb5\u7684\u9996\u4e24\u9879\u548c\u672b\u4e00\u9879\uff0c\u5373 $s_{l_i},s_{l_i+1},s_{r_i}$ \u4e4b\u4e2d\u3002\u679a\u4e3e\u8fd9\u4e9b\u4f4d\u7f6e\u76f4\u63a5\u6a21\u62df\u5373\u53ef\u3002\r\n\r\n\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(n\\log n)$\u3002\r\n\r\n```cpp\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nint t,n,fl,nc,nd,ns,tp,sa[1000009],rnk[1000009],ban[1000009],slen[1000009];\r\nchar s[1000009],C[1000009],D[1000009],T[1000009],ans[1000009];\r\ninline int read(){\r\n\tint s = 0,w = 1;\r\n\tchar ch = getchar();\r\n\twhile (ch > '9' || ch < '0'){ if (ch == '-') w = -1; ch = getchar();}\r\n\twhile (ch <= '9' && ch >= '0') s = (s << 1) + (s << 3) + (ch ^ 48),ch = getchar();\r\n\treturn s * w;\r\n}\r\nnamespace SAM{\r\n\tint tp,tot,cnt = 1,last = 1,tmp[26],hd[2000009],fa[2000009],dy[2000009],id[2000009],len[2000009],pos[2000009],suf[2000009],ch[2000009][26];\r\n\tstruct st{int x,y;}eg[2000009];\r\n\tvoid addedge(int u,int v){eg[++ tot] = (st){v,hd[u]},hd[u] = tot;}\r\n\tvoid clear(){\r\n\t\tfor (int i = 1;i <= cnt;i += 1){\r\n\t\t\tmemset(ch[i],0,sizeof(ch[i]));\r\n\t\t\tfa[i] = dy[i] = id[i] = len[i] = pos[i] = suf[i] = 0;\r\n\t\t}\r\n\t\tcnt = last = 1;\r\n\t}\r\n\tvoid ins(int x,int y){\r\n\t\tint p = last,cur = ++ cnt;\r\n\t\tpos[cur] = y,suf[cur] = 1,len[cur] = len[last] + 1;\r\n\t\twhile (p && !ch[p][x]) ch[p][x] = cur,p = fa[p];\r\n\t\tint q = ch[p][x];\r\n\t\tif (!q) fa[cur] = 1;\r\n\t\telse if (len[p] + 1 == len[q]) fa[cur] = q;\r\n\t\telse{\r\n\t\t\tint r = ++ cnt;\r\n\t\t\tfa[r] = fa[q],pos[r] = pos[q],len[r] = len[p] + 1;\r\n\t\t\tmemcpy(ch[r],ch[q],sizeof(ch[q]));\r\n\t\t\twhile (p && ch[p][x] == q) ch[p][x] = r,p = fa[p];\r\n\t\t\tfa[cur] = fa[q] = r;\r\n\t\t}\r\n\t\tlast = cur;\r\n\t}\r\n\tvoid dfs(int u,bool fl,bool opt){\r\n\t\tif (suf[u]){\r\n\t\t\tif (opt){\r\n\t\t\t\tif (!fl) return;\r\n\t\t\t\tslen[++ ns] = n - pos[u] + 1;\r\n\t\t\t}\r\n\t\t\telse tp += 1,sa[tp] = pos[u],rnk[pos[u]] = tp;\r\n\t\t}\r\n\t\tfor (int i = hd[u];i;i = eg[i].y) dfs(eg[i].x,fl,opt),fl = 0;\r\n\t}\r\n\tvoid work(int opt){\r\n\t\ttp = tot = 0;\r\n\t\tfor (int i = 0;i < 26;i += 1) tmp[i] = 0;\r\n\t\tfor (int i = 1;i <= cnt;i += 1) hd[i] = 0;\r\n\t\tfor (int i = 1;i <= cnt;i += 1) dy[i] = T[pos[i] + len[fa[i]]] - 'a',tmp[dy[i]] += 1;\r\n\t\tfor (int i = 1;i < 26;i += 1) tmp[i] += tmp[i - 1];\r\n\t\tfor (int i = 1;i <= cnt;i += 1) id[tmp[dy[i]] --] = i;\r\n\t\tfor (int i = cnt;i >= 1;i -= 1) if (fa[id[i]]) addedge(fa[id[i]],id[i]);\r\n\t\tdfs(1,1,opt);\r\n\t}\r\n}\r\nvoid upd(){\r\n\tfor (int i = 1;i <= n;i += 1){\r\n\t\tif (ans[i] < T[i]) return;\r\n\t\tif (ans[i] > T[i]){\r\n\t\t\tfor (int j = 1;j <= n;j += 1) ans[j] = T[j];\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n}\r\nvoid simulate(int o){\r\n\tint nc = 0,nd = 0,pos = 1;\r\n\tfor (int i = 1;i <= o;i += 1){\r\n\t\tif (s[i] <= s[pos]) C[++ nc] = s[i],pos = i;\r\n\t\telse D[++ nd] = s[i];\r\n\t}\r\n\treverse(C + 1,C + nc + 1);\r\n\tint tp = 0,cpos = 1;\r\n\tfor (int i = o + 1;i <= n;i += 1){\r\n\t\twhile (cpos <= nc && C[cpos] < s[i]) T[++ tp] = C[cpos ++];\r\n\t\tT[++ tp] = s[i];\r\n\t}\r\n\twhile (cpos <= nc) T[++ tp] = C[cpos ++];\r\n\tfor (int i = 1;i <= nd;i += 1) T[++ tp] = D[i];\r\n\tif (!fl) for (int i = 1;i <= n;i += 1) ans[i] = T[i];\r\n\telse upd();\r\n\tfl = 1;\r\n}\r\nvoid clear(){\r\n\tSAM :: clear();\r\n\tfl = nc = nd = ns = tp = 0;\r\n\tfor (int i = 1;i <= n;i += 1) sa[i] = rnk[i] = ban[i] = slen[i] = 0;\r\n}\r\nint main(){\r\n\tt = read();\r\n\twhile (t --){\r\n\t\tclear(),scanf(\"%s\",s + 1),n = strlen(s + 1);\r\n\t\tint pos = 1;\r\n\t\tfor (int i = 1;i <= n;i += 1) if (s[i] <= s[pos]){\r\n\t\t\tC[++ nc] = s[i];\r\n\t\t\tfor (int j = pos + 1;j < i;j += 1) D[++ nd] = s[j];\r\n\t\t\tpos = i;\r\n\t\t}\r\n\t\treverse(C + 1,C + nc + 1);\r\n\t\tfor (int i = 1;i <= nc;i += 1) T[i] = C[i];\r\n\t\tfor (int i = 1;i <= nd;i += 1) T[i + nc] = D[i];\r\n\t\tfor (int i = pos + 1;i <= n;i += 1) T[i] = s[i];\r\n\t\tfor (int i = n;i > pos;i -= 1) SAM :: ins(T[i] - 'a',i);\r\n\t\tSAM :: work(1);\r\n\t\tfor (int i = pos;i >= 1;i -= 1) SAM :: ins(T[i] - 'a',i);\r\n\t\tSAM :: work(0);\r\n\t\tfor (int i = 2;i < ns;i += 1) if (slen[i] - slen[i - 1] == slen[i + 1] - slen[i]) ban[i] = 1;\r\n\t\tfor (int i = 0;i <= ns;i += 1){\r\n\t\t\tif (i <= 1 || i == ns || !ban[i - 1] || !ban[i]) simulate(n - slen[i]);\r\n\t\t}\r\n\t\tfor (int i = 1;i <= n;i += 1) putchar(ans[i]);\r\n\t\tputs(\"\");\r\n\t}\r\n\treturn 0;\r\n}\r\n```\r\n",
        "postTime": 1684158823,
        "uid": 322075,
        "name": "Ecrade_",
        "ccfLevel": 7,
        "title": "\u300cRHOI-1\u300d\u5c0f\u56ed\u9999\u5f84\u72ec\u5f98\u5f8a \u9898\u89e3"
    }
]