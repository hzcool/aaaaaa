[
    {
        "content": "\uff08\u6211\u662f\u53bb\u539f\u6765\u5b98\u7f51\u4e0a\u4e00\u4e2a\u4e2a\u5355\u8bcd\u7ffb\u8bd1\u5730\u770b\u4e86\u522b\u4eba\u7684\u9898\u89e3\uff0c\u624d\u5f04\u61c2\u8fd9\u9053\u9898\u76ee\uff0c\u6240\u4ee5\u8bb2\u7684\u7e41\u7410\u6216\u8005\u662f\u6709\u9519\u8bef\u8fd8\u8bf7\u89c1\u8c05\uff09\n\n\u8fd9\u9053\u9898\u663e\u800c\u6613\u89c1\u7684\u662fO(n^2)\u7684\u7b97\u6cd5\uff0c\u52a0\u4e00\u4e2a\u5feb\u6392\u5904\u7406\u4ee5\u540e\uff0c\u590d\u6742\u5ea6\u4e5f\u662fO(n^2/2)\uff0c\u90a3\u4e48\u6211\u4eec\u5982\u4f55\u6765\u4f18\u5316\u5462\uff1f\n\n\u9996\u5148\u6211\u4eec\u5148\u5c06\u6240\u6709\u7684\u6570\u636e\u4ece\u5927\u5230\u5c0f\u53bb\u6392\u5217\uff0c\u5176\u4e2d\u7b2ck\u5927\u7684\u6570\u5728\u539f\u672c\u7684\u5976\u725b\u5e8f\u5217\u4e2d\u7684\u5e8f\u53f7\u4e3ai,\u4e00\u4e2af[k]\u6570\u7ec4\u6765\u8868\u793a\u73b0\u5728\u7b2ck\u5927\u7684\u6570\u6709\u65e0\u88ab\u8fdb\u884c\u4ee5\u4e0b\u7684\u5904\u7406\u8fc7\uff0c\u82e5\u5df2\u8fdb\u884c\uff0c\u5219\u4e3a1\uff0c\u5426\u5219\u4e3a0.\n\n\u6211\u4eec\u6309\u539f\u672c\u7684\u6570\u7ec4\u987a\u5e8f\u6765\u679a\u4e3e\u5976\u725b\uff0c\u505a\u5b8c\u4ee5\u540e\uff0c\u8fd9\u5934\u5976\u725b\u6240\u5bf9\u5e94\u7684f[k]\u5c31\u4e3a1\uff0c\u8fd9\u6837\u5c31\u80fd\u591f\u4fdd\u8bc1\u5f53\u524df[k]\u4e3a1\u7684\u5976\u725b\u5728\u539f\u5e8f\u5217\u4e2d\u4e00\u5b9a\u5728f[k]\u4e3a0\u7684\u5976\u725b\u7684\u5de6\u8fb9\uff0c\u90a3\u4e48\u5728\u5f53\u524d\u679a\u4e3e\u7684\u5976\u725b\uff08\u5bf9\u5e94f[k1]\uff09\u5de6\u8fb9\u8fd8\u6bd4\u4ed6\u9ad8\u7684\u7684\u5976\u725b\uff08\u5047\u8bbe\u6b64\u5976\u725b\u5728\u6392\u5e8f\u540e\u7684\u961f\u5217\u4e2d\u5e8f\u53f7\u4e3ak1\uff0c\u90a3\u4e48\u5b83\u5bf9\u5e94\u7684\u5c31\u662ff[k1]\uff09,f[k1]\u4e00\u5b9a\u4e3a1\uff0c\u53ca\u4e00\u5b9a\u5df2\u7ecf\u88ab\u679a\u4e3e\u8fc7\u4e86\uff0c\u800c\u4e14k1<k.(\u56e0\u4e3a\u6392\u5e8f\uff0c\u6240\u4ee5\u5de6\u8fb9\u7684\u66f4\u5927)\uff0c\u6240\u4ee5\u5728\u5de6\u8fb9\u8fd8\u6bd4\u4ed6\u9ad8\u7684\u5976\u725b\u5c31\u4e3af[1]~f[k]\u4e2d\u503c\u4e3a1\u7684\u6570\u91cf\uff0c\u5373f[1]~f[k]\u7684\u548c\uff0c\u5373\u4e3a\u4f1a\u66f4\u65b0\u7684\u524d\u7f00\u548c\uff0c\u90a3\u4e48\u8fd9\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u5355\u70b9\u4fee\u6539+\u533a\u95f4\u67e5\u8be2\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u6765\u7ef4\u62a4f\u6570\u7ec4\u5373\u53ef\uff08\u4ee3\u7801\u77ed\u4e00\u4e9b\uff0c\u5f53\u7136\u60f3\u5199\u7ebf\u6bb5\u6811\u4e5f\u53ef\u4ee5\uff01\uff09\n\n\u597d\u5566\uff0c\u5177\u4f53\u60c5\u51b5\u5c31\u5728\u7a0b\u5e8f\u7684\u6ce8\u91ca\u4e2d\u5199\u5427\u3002\n\n\u53c2\u8003\u7a0b\u5e8f\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nstruct cow{\n    int v,t;\n}a[200000];\nbool cmp(const cow&x,const cow&y)\n{\n    return (x.v>y.v);\n}\ninline int read()\n{\n    char ch=getchar();\n    int f=1,x=0;\n    while(!(ch>='0'&&ch<='9')){if(ch=='-')f=-1;ch=getchar();}\n    while(ch>='0'&&ch<='9'){x=x*10+(ch-'0');ch=getchar();}\n    return x*f;\n}\nint b[200000],f[200000],n,l,r,ans;\nint lowbit(int x)\n{\n    return (x&-x);\n}\n//\u5355\u70b9\u66f4\u65b0\nvoid update(int x,int v)\n{\n    while (x<=n)\n    {\n        f[x]+=v;\n        x+=lowbit(x);\n    }\n}\n//\u67e5\u8be2\u524d\u7f00\u548c\nint query(int x)\n{\n    int sum=0;\n    while (x>0) \n    {\n      sum+=f[x];\n      x-=lowbit(x);\n    }\n    return sum;\n}\nint main()\n{\n  scanf(\"%d\",&n);\n  for (int i=1;i<=n;i++) \n  {\n       a[i].v=read();//\u8f93\u5165\u5976\u725b\u7684\u8eab\u9ad8\n    a[i].t=i;//\u5976\u725b\u5728\u539f\u5e8f\u5217\u4e2d\u7684\u7f16\u53f7    \n  }\n  sort(a+1,a+1+n,cmp);//\u8eab\u9ad8\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n  for (int i=1;i<=n;i++) b[a[i].t]=i;//\u8bb0\u5f55\u8fd9\u5934\u5976\u725b\u5728\u6392\u5e8f\u540e\u7684\u7f16\u53f7\n  for (int i=1;i<=n;i++)\n  {\n      l=query(b[i]);//\u67e5\u8be2\u5de6\u8fb9\u6bd4\u5b83\u5927\u7684\u5976\u725b\u6570\u91cf\uff0c\u5373f[k1]\u5df2\u4e3a1\uff0c\u4e14k1<k;\n      r=b[i]-l-1;//\u53f3\u8fb9\u6bd4\u5b83\u7684\u6570\u91cf\n      if ((l*2<r)||(r*2<l)) ans++;//\u8bb0\u5f55\u4e0d\u5e73\u8861\u6570\u91cf\n      update(b[i],1);//\u66f4\u65b0\uff0c\u8fd9\u5934\u5976\u725b\u5df2\u7ecf\u88ab\u679a\u4e3e\u8fc7\u4e86\n  }\n  printf(\"%d\\n\",ans);\n  return 0;\n}\n```",
        "postTime": 1486796137,
        "uid": 21621,
        "name": "nihanchu",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3608 \u3010[USACO17JAN]Balanced Photo\u5e73\u8861\u7684\u7167\u7247\u3011"
    },
    {
        "content": "\u4e00\u9053\u6811\u72b6\u6570\u7ec4\u7684\u88f8\u9898\u3002\n\n\u503c\u5f97\u4e00\u63d0\u7684\u662f\u9898\u76ee\u7684\u7ffb\u8bd1\u8c8c\u4f3c\u6709\u70b9\u95ee\u9898\u3002\n\n>\u5982\u679cL[i]\u548cR[i]\u7684\u6570\u76ee\u76f8\u5dee2\u500d\u4ee5\u4e0a\u7684\u8bdd\uff0c\u7b2ci\u5934\u5976\u725b\u5c31\u662f\u4e0d\u5e73\u8861\u7684\u3002\uff08L[i]\u548cR[i]\u5206\u522b\u4ee3\u8868\u7b2ci\u5934\u5976\u725b\u5de6\u53f3\u4e24\u8fb9\u6bd4\u5979\u9ad8\u7684\u6570\u91cf\uff09\u3002\u5982\u679cL[i]\u548cR[i]\u4e2d\u8f83\u5927\u8005\u6bd4\u8f83\u5c0f\u8005\u7684\u6570\u91cf\u4e25\u683c\u591a\u4e24\u500d\u7684\u8bdd\uff0c\u8fd9\u5934\u5976\u725b\u4e5f\u662f\u4e0d\u5e73\u8861\u7684\n\n\u9898\u76ee\u4e2d\u8fd9\u6bb5\u8bdd\u7684\u610f\u601d\u5176\u5b9e\u662f$max(l[i], r[i]) > 2 * min(l[i], r[i])$\uff0c\u4e0d\u8981\u88ab\u8bef\u5bfc\u4e86\u3002\n\n\u63a5\u4e0b\u6765\u662f\u6b63\u9898\u3002\n\n\u9996\u5148\u770b\u5230\u8fd9\u9053\u9898\uff0c\u4e0d\u96be\u60f3\u5230$O(n^2)$\u7684\u66b4\u529b\u505a\u6cd5\uff0c\u5373\u679a\u4e3e\uff0c\u4f46\u662f\u8fd9\u6837\u663e\u7136\u4f1a\u8d85\u65f6\uff0c\u9700\u8981\u4f18\u5316\u3002\n\n\u6211\u4eec\u53d1\u73b0\uff0c\u9898\u76ee\u4e2d\u8981\u6c42\u7684\u4e1c\u897f\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u70b9\u5de6\u8fb9\u548c\u53f3\u8fb9\u6bd4\u4ed6\u5927\u7684\u70b9\u7684\u6570\u91cf\uff0c\u6240\u4ee5\u6211\u4eec\u679a\u4e3e\u7684\u65f6\u5019\u5176\u5b9e\u662f\u6d6a\u8d39\u4e86\u5f88\u591a\u65f6\u95f4\u7684\uff0c\u56e0\u4e3a\u4e00\u4e2a\u70b9\u7684\u4fe1\u606f\u5e76\u975e\u548c\u5176\u4ed6\u70b9\u6ca1\u6709\u5173\u8054\uff0c\u6211\u4eec\u60f3\u60f3\u600e\u4e48\u80fd\u591f\u5229\u7528\u8fd9\u4e9b\u4fe1\u606f\u3002\n\n\u5bf9\u4e8e\u4e00\u4e2a\u5e8f\u5217\u4e2d\u7684\u67d0\u4e2a\u6570\uff0c\u53ea\u6709\u6bd4\u4ed6\u5927\u7684\u6570\u624d\u4f1a\u4ea7\u751f\u5f71\u54cd\uff0c\u6240\u4ee5\u4e00\u4e2a\u5f88\u663e\u7136\u7684\u60f3\u6cd5\u662f\u5148\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u3002\n\n\u8003\u8651\u6392\u5e8f\u4ee5\u540e\uff0c\u5f53\u4f60\u64cd\u4f5c\u5230$a[i]$\u8fd9\u4e2a\u6570\u65f6\uff0c\u6bd4\u4ed6\u5927\u7684\u6570\u4e00\u5171\u6709$n-i$\u4e2a\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ea\u8981\u4f60\u6c42\u51fa\u8fd9\u4e2a\u70b9\u5de6\u8fb9\u6bd4\u4ed6\u5927\u7684\u6570\u7684\u6570\u91cf\uff0c\u5c31\u53ef\u4ee5\u6c42\u51fa\u53f3\u8fb9\u7684\u6570\u91cf\u3002\u90a3\u4e48\u4f60\u5728\u63d2\u5165\u8fd9\u4e2a\u6570\u65f6\u4ea7\u751f\u7684\u8d21\u732e\u5c31\u662f\u628a\u8fd9\u4e2a\u6570\u540e\u9762\u7684\u6bd4\u4ed6\u5c0f\u7684\u6570\u7684\u7b54\u6848+1\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u73b0\u5728\u6709\u5e8f\u52173 2 5 1\n\n\u5f53\u4f60\u63d2\u51653\u65f6\uff0c2\u548c1\u7684\u7b54\u6848\u90fd\u4f1a+1\n\n\u90a3\u4e48\u5176\u5b9e\u5c31\u662f\u6c42\u4e00\u4e2a\u5355\u70b9\u4fee\u6539\u7684\u524d\u7f00\u548c\uff0c\u6bcf\u6b21\u63d2\u5165\u4e00\u4e2a\u6570\u5c31\u628a\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u503c\u4ece0\u53d8\u62101\uff0c\u7136\u540e\u5bf9\u4e8e\u67d0\u4e00\u4e2a\u4f4d\u7f6e$i$\uff0c\u5de6\u8fb9\u6bd4\u4ed6\u5927\u7684\u6570\u5c31\u53ea\u9700\u8981\u67e5\u8be2\u4e00\u4e2a\u524d\u7f00\u548c\u5c31\u884c\u4e86\u3002\n\n\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\uff0c\u4ee3\u7801\u4e5f\u5f88\u7b80\u6d01\u3002\n\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N = 1000005;\nstruct sCow\n{\n\tint iH, iBh;\n}Cow[N];\nbool cmp(sCow x, sCow y){return x.iH > y.iH;}\nint iSum[N], n;\nint lowbit(int x) {return x & -x;}\nvoid Add(int x, int k){for(; x <= n; x += lowbit(x)) iSum[x] += k;}\nint Query(int x){int ans = 0;for(; x; x -= lowbit(x)) ans += iSum[x];return ans;}\nint main()\n{\n\tscanf(\"%d\", &n);\n\tfor(int i = 1; i <= n; i++) scanf(\"%d\", &Cow[i].iH), Cow[i].iBh = i;\n\tsort(Cow + 1, Cow + 1 + n, cmp);\n\tint iAns = 0;\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tAdd(Cow[i].iBh, 1);\n\t\tint l = Query(Cow[i].iBh - 1);\n\t\tint r = i - l - 1;\n\t\tif(max(l, r) > 2 * min(l, r)) iAns++;\n\t}\n\tcout<<iAns;\n}\n```\n",
        "postTime": 1575776672,
        "uid": 177510,
        "name": "\u5c0f\u849f\u84bb\u76ae\u76ae\u9c7c",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3608 \u3010[USACO17JAN]Balanced Photo\u5e73\u8861\u7684\u7167\u7247\u3011"
    },
    {
        "content": "~~\u6ca1\u6709\u4e00\u4e2a\u4eba\u5199\u5e73\u8861\u6811\u5417\uff1f~~\n\n\n------------\n\u6211\u592a\u83dc\u4e86\uff0c\u4e0d\u4f1a\u5199\u7ebf\u6bb5\u6811or\u6811\u72b6\u6570\u7ec4,\u53ea\u80fd~~copy~~\u590d\u4e60fhq_treap\u677f\u5b50\u8fa3.\n\n\n\u9898\u610f\u5c31\u662f\u95ee\u6709\u591a\u5c11\u5934\u725b\u5de6\u8fb9\u6bd4\u4ed6\u9ad8\u7684\u6570\u91cf\u548c\u53f3\u8fb9\u6bd4\u4ed6\u9ad8\u7684\u6570\u91cf\u4e4b\u5dee\u7684\u7edd\u5bf9\u503c\uff0c\u5927\u4e8eMin(\u5de6\u8fb9\u6bd4\u4ed6\u9ad8\u7684\u6570\u91cf\uff0c\u53f3\u8fb9\u6bd4\u4ed6\u9ad8\u7684\u6570\u91cf)\u3002\n\n\u770b\u5230\u8fd9\u9053\u9898\uff0c\u7b2c\u4e00\u60f3\u6cd5\u5c31\u662f\u628a\u5de6\u53f3\u4e24\u8fb9\u6bd4\u4ed6\u5927\u7684\u76f4\u63a5\u6c42\u51fa\u6765\u518d\u6bd4\u8f83\u3002\u4f46\u663e\u7136\uff0c\u76f4\u63a5\u66b4\u529b\u7b97\u662f\u4f1a\u8d85\u65f6\u7684 ~~\u4e0d\u7528\u6211\u8bf4\u90fd\u77e5\u9053\u554a~~\u6240\u4ee5\u8981\u7528\u6570\u636e\u7ed3\u6784\u6765\u4f18\u5316\u3002\u8fd9\u91cc\u6211\u7528\u7684\u662f\u5e73\u8861\u6811\u3002\n\n\n\u5148\u8003\u8651\u7b97\u5de6\u8fb9\uff0c\u5bf9\u4e8e\u6bcf\u5934\u725b\uff0c\u76f4\u63a5\u5728\u5e73\u8861\u6811\u91cc\u67e5\u8be2\u591a\u5c11\u6bd4\u4ed6\u5927\u7684\uff08\u5373\u6392\u540d\uff09\uff0c\u518d\u628a\u8fd9\u5934\u725b\u63d2\u5165\u5e73\u8861\u6811\uff0c\u91cd\u590d\u8fd9\u79cd\u64cd\u4f5c\u3002\u53f3\u8fb9\u4e5f\u5341\u5206\u7b80\u5355\uff0c\u5efa\u4e00\u4e2a\u6570\u7ec4\uff0c\u628a\u539f\u5e8f\u5217\u53cd\u7740\u5b58\u8fdb\u53bb\uff0c\u518d\u505a\u4e00\u6b21\u4e0e\u5de6\u8fb9\u4e00\u6bdb\u4e00\u6837\u7684\u64cd\u4f5c\u5c31\u53ef\u4ee5\u4e86\u3002\n\n\n\u6700\u540e\u8f93\u51fa\u65f6\u76f4\u63a5\u6bd4\u8f83\u4e24\u4e2a\u5927\u5c0f\u5c31\u53ef\u4ee5\uff21\u4e86\u3002\n\n\n\n\n------------\n\n\u4e0a\u4ee3\u7801\n\n\n```\n#include <bits/stdc++.h>\nusing namespace std;\nconst int MAX=1e5+10;\n//fhq_treap \u7ec3\u624b \nint son[MAX][2],rd[MAX],size[MAX],vis[MAX],root,tot,x,y,z; \ntemplate <typename T> inline void read(T &a){\n    T w=1;a=0;\n    char ch=getchar();\n    for(;!isdigit(ch);ch=getchar()){\n        if(ch == '-') w=-1;\n    }\n    for(;isdigit(ch);ch=getchar()){\n        a=(a<<3)+(a<<1)+(ch^48);\n    }\n    a*=w;\n}\ninline int new_node(int m){\n    size[++tot]=1;vis[tot]=m;\n    rd[tot]=rand();\n    return tot;\n}\n\ninline void up(int now){\n    size[now]=size[son[now][0]]+size[son[now][1]]+1;\n}\n\nvoid split(int now,int k,int &a,int &b){\n    if(!    now){\n        a=b=0;return ;\n    }\n    if(vis[now]<=k)\n       a=now,split(son[now][1],k,son[now][1],b);\n    else \n       b=now,split(son[now][0],k,a,son[now][0]);\n    up(now);\n}\n\nint merge(int a,int b){\n    if(!a || !b){\n        return a+b;\n    }\n    if(rd[a]<rd[b]){\n        son[a][1]=merge(son[a][1],b);up(a);return a;\n    }\n    else{\n        son[b][0]=merge(a,son[b][0]);up(b);return b;\n    }\n}\n\nint k_th(int now,int k){\n    while(1){\n        if(k<=size[son[now][0]])now=son[now][0];\n        else if(k==size[son[now][0]]+1) return now;\n        else{\n            k-=size[son[now][0]]+1;now=son[now][1];\n        }\n    }\n}\n//fhq_treap\u57fa\u672c\u64cd\u4f5c\nint a[MAX],b[MAX];\nint Ans1[MAX],Ans2[MAX];\nint n;\n\nint main(){\n    srand(1710);\n    read(n);\n    for(register int i=1;i<=n;++i){\n        read(a[i]);b[n-i+1]=a[i];\n    }\n    for(register int i=1;i<=n;++i){\n        split(root,a[i]-1,x,y);\n        Ans1[i]=i-size[x]-1;\n        root=merge(x,y);\n        split(root,a[i],x,z);\n        root=merge(merge(x,new_node(a[i])),z);//\u67e5\u8be2\u6392\u540d\u4e0e\u63d2\u5165\n    }\n    memset(vis,0,sizeof(vis));  \n    memset(size,0,sizeof(size));\n    memset(son,0,sizeof(son));\n    memset(rd,0,sizeof(rd));   tot=x=y=z=root=0;\n    for(register int i=1;i<=n;++i){\n        split(root,b[i]-1,x,y);\n        Ans2[i]=i-size[x]-1;\n        root=merge(x,y);\n        split(root,b[i],x,z);\n        root=merge(merge(x,new_node(b[i])),z);//\u53cd\u7740\u518d\u6765\u4e00\u904d\n    }\n    int ans=0;\n    for(register int i=1;i<=n;++i){\n        int X=Ans1[i],Y=Ans2[n-i+1];\n//      cout<<X<<\" \"<<Y<<endl;\n        if(X<Y) swap(X,Y);\n        if(X > Y*2) ans++;//\u76f4\u63a5\u6bd4\u8f83\u5373\u53ef\n    }\n    cout<<ans;\n}\n```\n",
        "postTime": 1567695808,
        "uid": 35255,
        "name": "Chaos1018",
        "ccfLevel": 0,
        "title": "P3608 [USACO17JAN]Balanced Photo\u5e73\u8861\u7684\u7167\u7247"
    },
    {
        "content": "# \u597d\u5427\u6211\u53c8\u6765\u53d1\u9898\u89e3\u4e86\uff0c\u5176\u5b9e\u4e5f\u5c31\u662f\u4e00\u4e2a\u6162\u6162\u8c03\u8bd5\u4ee3\u7801\u7684\u7ed3\u679c\n\u9898\u76ee\u610f\u601d:\u7ed9\u5b9a\u4e00\u4e2a\u5e8f\u5217\uff0c\u6c42\u5de6\u53f3\u4e24\u8fb9\u5927\u4e8e\u6bcf\u4e2a\u6570\u7684\u7684\u4e2a\u6570\uff0c\u518d\u6bd4\u8f83\u4e24\u8005\u5173\u7cfb\uff08\u4e0d\u8fc7\u8fd9\u4e2a\u5e76\u4e0d\u662f\u91cd\u70b9\uff09\n\n## \u4ee3\u7801\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n,ans=0;\nint h[100005];\nint c[100005];\ninline int read()\n{\n    int x=0;\n    char c=getchar();\n    bool flag=0;\n    while(c<'0'||c>'9') {if(c=='-')flag=1;c=getchar();}\n    while(c>='0'&&c<='9'){x=(x+(x<<2)<<1)+ c-'0';c=getchar();}\n    return flag?-x:x;\n}\nint main()\n{\n\tn=read();\n\tfor(int i=1;i<=n;++i) h[i]=read();\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tint l=0,r=0;\n\t\tfor(int j=1;j<=i;++j) if(h[i]<h[j]) l++;\n\t\tfor(int j=i;j<=n;++j) if(h[i]<h[j]) r++;\n\t\t//cout<<i<<\" \"<<l<<\" \"<<r<<endl;\n\t\tif(min(l,r)*2<max(l,r)) ans++;\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n\u663e\u800c\u6613\u89c1\u66b4\u529b\u662f\u7edd\u5bf9\u8fc7\u4e0d\u53bb\u7684\u6bd5\u7adf\u6570\u636e 100,000\u800c\u4e14\u8fd8\u662fO\uff08N^2\uff09\u7684\u66b4\u529b\n\u5373\u4f7f\u5982\u6b64\u6211\u8fd8\u662f\u9a97\u5230\u4e8660\u5206\n\u4e8e\u662f\u611f\u89c9\u6570\u636e\u6c34\uff08\u4e8b\u5b9e\u8bc1\u660e\u8fd9\u662f\u9519\u89c9\uff09\n\u7136\u540e\u53c8\u52a0\u4e86\u4e00\u70b9\u5c0f\u4f18\u5316\n```\n#include<bits/stdc++.h>\nusing namespace std;\nint n,ans=0;\nstruct node{int x,y;}a[100005];\ninline int read()\n{\n    int x=0;\n    char c=getchar();\n    bool flag=0;\n    while(c<'0'||c>'9') {if(c=='-')flag=1;c=getchar();}\n    while(c>='0'&&c<='9'){x=(x+(x<<2)<<1)+ c-'0';c=getchar();}\n    return flag?-x:x;\n}\nbool cmp(node x,node y)\n{\n\treturn x.x>y.x;\n}\nint main()\n{\n\tn=read();\n\tfor(int i=1;i<=n;++i) \n\ta[i].x=read(),a[i].y=i;\n\tsort(a+1,a+1+n,cmp);\n\tfor(int i=1;i<=n;++i)\n\t{\n\t\tint l=0,r=0;\n\t\tfor(int j=1;j<i;++j) \n\t\t{\n\t\t\tif(a[i].y>a[j].y) l++;\n\t\t\telse r++;\n\t\t}\n\t\tif(min(l,r)*2<max(l,r)) ans++;\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n\u8fd9\u91cc\u52a0\u4e0a\u4e86\u4e00\u4e2asort\uff0c\u6bd4\u8d77\u4e4b\u524d\u7684\u597d\u50cf\u590d\u6742\u5ea6\u5927\u6982\u662fO\uff08NlogN\uff09\uff08\u5728\u4e0b\u5bf9\u590d\u6742\u5ea6\u5224\u65ad\u5b9e\u5728\u4e0d\u884c\uff0c\u4e07\u4e00\u9519\u4e86\u8bf7\u5927\u4f6c\u65a7\u6b63\uff09\n\u7136\u800c\u8fd9\u6837\u5b50\u5c31\u670970\u5206\u4e86???\n\u4e8e\u662f\u5f00\u59cb\u8ba4\u771f\u60f3\u4e00\u4e0b\u7b97\u6cd5\n\u6bd5\u7adf\u770b\u6837\u5b50\u66b4\u529b\u80af\u5b9a\u884c\u4e0d\u901a\u56e0\u4e3aT\u63893\u4e2a\u70b9\u90fd\u662f1900+ms\n\u7136\u540e\u53c8\u60f3\u5230\u524d\u7f00\u548c\uff0c\u4e8e\u662f~~\u975e\u5e38\u987a\u5229~~\u60f3\u5230\u4e86\u6811\u72b6\u6570\u7ec4\n```\n#include<bits/stdc++.h>\n#pragma GCC optimize(2)\n#pragma GCC optimize(3)\nusing namespace std;\nint n,ans=0;\nstruct node{int x,y;}a[100005];\nint c[100005];\ninline int read()\n{\n    int x=0;\n    char c=getchar();\n    bool flag=0;\n    while(c<'0'||c>'9') {if(c=='-')flag=1;c=getchar();}\n    while(c>='0'&&c<='9'){x=(x+(x<<2)<<1)+ c-'0';c=getchar();}\n    return flag?-x:x;\n}\nbool cmp(node x,node y)\n{\n\treturn x.x>y.x;\n}\nint ask(int x)\n{\n\tint cnt=0;\n\tfor(;x;x-=x&-x) cnt+=c[x];\n\treturn cnt;\n}\nvoid add(int x,int y)\n{\n\tfor(;x<=n;x+=x&-x) c[x]+=y;\n}\nint main()\n{\n\tn=read();\n\tfor(int i=1;i<=n;++i) \n\ta[i].x=read(),a[i].y=i;\n\tsort(a+1,a+1+n,cmp);\n\t\n\tadd(a[1].y,1);\n\tfor(int i=2;i<=n;++i)\n\t{\n\t\tint l=ask(a[i].y);\n\t\tint r=i-l-1;\n\t\tif(min(l,r)*2<max(l,r)) ans++;\n\t\tadd(a[i].y,1);\n\t}\n\tcout<<ans<<endl;\n\treturn 0;\n}\n```\n\u8fd9\u91cc\u601d\u8def\u4e5f\u662f\u5ef6\u7eed\u4e86\u66b4\u529b\u4f18\u5316\uff08\u7b2c\u4e8c\u4e2a\u4ee3\u7801\uff09\n\u5148\u6839\u636e\u5927\u5c0f\u6392\u5e8f\uff0c\u90a3\u4e48\u4fdd\u8bc1\u6570\u5217\u9012\u51cf\n\u4ece\u524d\u5f80\u540e\u904d\u5386\uff0c\u90a3\u4e48\u5904\u7406\u5230\u7684\u70b9\u53ea\u548c\u8be5\u70b9\u4e4b\u524d\u7684\u70b9\u6709\u5173\uff08\u6bd5\u7adf\u540e\u9762\u7684\u6bd4\u4ed6\u5c0f\u5c31\u4e0d\u9700\u8981\u5904\u7406\u4e86\uff09\uff0c\u5148\u8ba1\u7b97\u5728\u8be5\u70b9\u4e4b\u524d\uff08\u5373\u8be5\u70b9\u5de6\u8fb9\uff09\u6709\u591a\u5c11\u4e2a\u8282\u70b9\uff0c\u90a3\u4e48\u8be5\u70b9\u53f3\u8fb9\u7684\u8282\u70b9\u5c31\u662f\u6bd4\u4ed6\u5927\u7684\u8282\u70b9\u7684\u603b\u548c\u51cf\u53bb\u524d\u9762\u7684\u8282\u70b9\uff0c\u8fd9\u6837\u5b50\u5c31\u53ef\u4ee5\u5c11\u8ba1\u7b97\u4e00\u904d\uff0c\u7701\u4e0b\u6765\u4e0d\u5c11\u65f6\u95f4\u3002\u800c\u4e14\u6ce8\u610f\uff0c\u6811\u72b6\u6570\u7ec4\u67e5\u8be2\u524d\u7f00\u548c\u662f1~x\u7684\u603b\u548c\uff0c\u6240\u4ee5\u8fd9\u91cc\u5e94\u8be5\u5148\u8ba1\u7b97\u518d\u52a0\u5165\u70b9\uff0c\u6216\u8005\u5148\u52a0\u70b9\u518d-1\u90fd\u53ef\u4ee5\n\u597d\u4e86\u849f\u84bb\u6211\u5e9f\u8bdd\u4e5f\u4e0d\u591a\u8bf4\u4e86\uff0c\u5c31\u5199\u5230\u8fd9\u91cc\u5427\n\u5982\u6709\u7eb0\u6f0f\u53ca\u9519\u8bef\u4e4b\u5904\uff0c\u671b\u5404\u4f4d\u5927\u4f6c\u8c05\u89e3\u65a7\u6b63\uff0c\u8c22\u8c22",
        "postTime": 1536461321,
        "uid": 41887,
        "name": "Shikita",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3608 \u3010[USACO17JAN]Balanced Photo\u5e73\u8861\u7684\u7167\u7247\u3011"
    },
    {
        "content": "**\u77e5\u8bc6\u70b9\uff1aBIT**\n\n~~\u597d\u88f8\u7684\u4e00\u4e2aBIT\u6c42\u9006\u5e8f\u5bf9~~\n\n\u9898\u89e3\u4e2d\u597d\u591a\u8bf4\u5012\u8fc7\u6765\u6c42\u4e00\u904d\u6b63\u5e8f\u5bf9\uff1f\n\n\u5176\u5b9e\u4e0d\u7136 \u6c42\u5f97\u9006\u5e8f\u5bf9 \u6b63\u5e8f\u5bf9O(1)\u4e0d\u5c31\u51fa\u6765\u4e86\u5417\n\n**\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(nlogn)**\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<algorithm>\n#include<queue>\n#include<stack>\n#include<set>\n#define MAXN 100005\n#define LL long long\n#define INF 2147483647\n#define MOD 1000000007\n#define free(s) freopen(\"s.txt\",\"r\",stdin);\n#define lowbit(x) ((x&(-x))) \n#define debug(x) cout<<x<<endl;\nusing namespace std;\nconst int L=100005;\nstruct node{\n\tint high,num;\n};\nnode cow[L];\nint n,bit[L],c[L],ans;\nbool cmp(const node &a,const node &b)\n{\n\treturn a.high>b.high;\n}\nint query(int x)\n{\n\tint sum=0;\n\tfor(int i=x;i>=1;i-=lowbit(i))\n\t\tsum+=bit[i];\n\treturn sum;\n}\nvoid update(int x,int v)\n{\n\tfor(int i=x;i<=n;i+=lowbit(i))\n\t\tbit[i]+=v;\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&cow[i].high);\n\t\tcow[i].num=i;\n\t}\n\tsort(cow+1,cow+n+1,cmp);\n\tfor(int i=1;i<=n;i++)\n\t\tc[cow[i].num]=i;//\u79bb\u6563\u5316\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint l=query(c[i]),r=c[i]-l-1;\n\t\tupdate(c[i],1);\n\t\tif(l>r*2||r>2*l)\n\t\t\tans++;\n\t}\n    printf(\"%d\",ans);\n\treturn 0;\n}\n```",
        "postTime": 1528509714,
        "uid": 37427,
        "name": "\u66f9\u8001\u5e08",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3608 \u3010[USACO17JAN]Balanced Photo\u5e73\u8861\u7684\u7167\u7247\u3011"
    },
    {
        "content": "\u597d\u4e45\u4e0d\u6253\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u4e86\n\n\u7136\u540e\u5c31\u6253\u4e86\u4e2a\u4e3b\u5e2d\u6811\n\n\u7136\u540e\u5c31a\u4e86\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nint n,l[5000000],r[5000000],a[5000000],sum[5000000],x,y,ans,kk;\nint putit(int x,int y,int z,int ll,int rr){//\u52a0\u5165\u5143\u7d20\n    sum[x]=sum[y];if (ll==rr){sum[x]++;return x;}int m=(ll+rr)/2;\n    if (z<=m){l[x]=putit(++kk,l[y],z,ll,m);r[x]=r[y];}\n    if (z>m){r[x]=putit(++kk,r[y],z,m+1,rr);l[x]=l[y];}\n    sum[x]=sum[l[x]]+sum[r[x]];return x;\n}int findit(int x,int y,int z,int ll,int rr){//\u5220\u9664\u5143\u7d20\n    if (ll==z)return sum[y]-sum[x];\n    int m=(ll+rr)/2;if (!y)return 0;\n    if (z<=m)return sum[r[y]]-sum[r[x]]+findit(l[x],l[y],z,ll,m);\n        else return findit(r[x],r[y],z,m+1,rr);\n}\nsigned main(){\n    ios::sync_with_stdio(false);\n    cin>>n;kk=n;for (int i=1;i<=n;i++)cin>>a[i],putit(i,i-1,a[i],0,1e9);\n    for (int i=1;i<=n;i++){\n        x=findit(0,i-1,a[i]+1,0,1e9);y=findit(i,n,a[i]+1,0,1e9);if (x<y)swap(x,y);\n                    //\u627e\u51fa\u5728i\u5de6\u8fb9\u7684\u6bd4i\u5927\u7684\u5143\u7d20\u548c\u5728i\u53f3\u8fb9\u6bd4i\u5927\u7684\u5143\u7d20\u5e76\u4e14\u5f62\u6210\u6709\u5e8f\u70b9\u5bf9\n        if (2*y<x)ans++;//\u8fd9\u91cc\u9898\u9762\u7ffb\u8bd1\u6709\u8bef\n    }cout<<ans<<endl;\n}\n```",
        "postTime": 1507460764,
        "uid": 44165,
        "name": "Starria\u7684\u8111\u6b8b\u7c89",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3608 \u3010[USACO17JAN]Balanced Photo\u5e73\u8861\u7684\u7167\u7247\u3011"
    },
    {
        "content": "~~\u667a\u529b\u4e0d\u591f\uff0c\u4e8c\u5206\u7b54\u6848\u6765\u51d1~~\n\n\u8fd9\u4e2a\u9898\u76ee\u662f\u8ba9\u6211\u4eec\u6c42\u6709\u591a\u5c11\u7684\u6570$i$\uff0c\u4f7f\u5f97$2\\times max(\\text{i\u5de6\u8fb9\u6bd4\u4ed6\u5927\u7684\u6570\u91cf},\\text{i\u53f3\u8fb9\u6bd4\u4ed6\u5927\u7684\u6570\u91cf})>min(\\text{i\u5de6\u8fb9\u6bd4\u4ed6\u5b83\u7684\u6570\u91cf},\\text{i\u53f3\u8fb9\u6bd4\u4ed6\u5927\u7684\u6570\u91cf})$\n\n\u6362\u53e5\u8bdd\u8bf4\uff0c\u5c31\u662f\u8981\u6c42\u4e00\u4e2a\u6570\u5de6\u8fb9\u6709\u51e0\u4e2a\u6570\u6bd4\u4ed6\u5927\uff0c\u53f3\u8fb9\u6709\u51e0\u4e2a\u6570\u6bd4\u4ed6\u5927\u3002\n\n\u663e\u7136\u5e73\u8861\u6811\u662f\u53ef\u4ee5\u505a\u7684\uff0c~~\u4f46\u662f\u592a\u96be\u4e86\u6211\u4e0d\u4f1a\u6253~~\n\n\u7136\u540e\u5404\u4f4d\u5927\u4f6c\u90fd\u4f1a\u6811\u72b6\u6570\u7ec4$O(n \\log n)$\u6c42\u89e3\n\n\u9119\u4eba\u4e0d\u624d\uff0c\u7ed9\u5927\u5bb6\u8bb2\u4e00\u79cd$O(n \\log n^2)$\u7684\u505a\u6cd5\n\n\u9996\u5148\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4\uff0c\u5047\u5982\u8fd9\u4e2a\u533a\u95f4\u5185\u7b2c$K$\u5927\u7684\u6570\u6bd4$a_i$\u5927\uff0c\u90a3\u4e48\u533a\u95f4\u91cc\u5c31\u4f1a\u6709$K$\u4e2a\u6570\u6bd4$a_i$\u5927\uff0c\u8fd9\u4e2a\u8fd8\u662f\u86ee\u663e\u7136\u7684\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4e8c\u5206\u51fa\u4e00\u4e2a\u6700\u5927\u7684\u4f7f\u5f97$\\text{\u533a\u95f4\u7b2c}K\\text{\u5927} \\leq a_i$\u7684$K$\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f\u533a\u95f4\u957f\u5ea6\u51cf\u53bb\u8fd9\u4e2a$K$\n\n\u533a\u95f4\u7b2c$K$\u5927\u76f4\u63a5\u5212\u5206\u6811\u7ef4\u62a4\u4e00\u4e0b\u5c31\u597d\u4e86\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u4e3b\u5e2d\u6811\uff0c~~\u53ef\u60dc\u6211\u4e5f\u4e0d\u4f1a~~\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cctype>\n#include<cstring>\n#include<algorithm>\nusing namespace std;\nint read(){\n\tint w=0;\n\tbool s=0;\n\tchar c=getchar();\n\twhile(!isdigit(c)){\n\t\ts=(c=='-');\n\t\tc=getchar();\n\t}\n\twhile(isdigit(c)){\n\t\tw=w*10+c-'0';\n\t\tc=getchar();\n\t}\n\treturn s?-w:w;\n}\nconst int N=100005,M=20;\nint n,m;\nint a[N];\n//\u5212\u5206\u6811\nstruct Tree{\n\t#define mid ((le+ri)>>1)\n\t#define lson le,mid,dep+1\n\t#define rson mid+1,ri,dep+1\n\tstruct Node{\n\t\tint num[N],toleft[N];\n\t};\n\tNode t[M];\n\tint sorted[N];\n\tvoid build(int le,int ri,int dep){\n\t\tif(le==ri){\n\t\t\treturn;\n\t\t}\n\t\tint key=sorted[mid];\n\t\tint equ=mid-le+1;\n\t\tfor(int i=le;i<=ri;i++){\n\t\t\tif(t[dep].num[i]<key){\n\t\t\t\tequ--;\n\t\t\t}\n\t\t}\n\t\tint tl=0;\n\t\tint it1=le-1,it2=mid;\n\t\tfor(int i=le;i<=ri;i++){\n\t\t\tint now=t[dep].num[i];\n\t\t\tif(now<key||(now==key&&equ)){\n\t\t\t\tif(now==key){\n\t\t\t\t\tequ--;\n\t\t\t\t}\n\t\t\t\ttl++;\n\t\t\t\tt[dep+1].num[++it1]=now;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tt[dep+1].num[++it2]=now;\n\t\t\t}\t\n\t\t\tt[dep].toleft[i]=tl;\t\n\t\t}\n\t\tbuild(lson);\n\t\tbuild(rson);\n\t}\n\tint query(int le,int ri,int dep,int x,int y,int z){\n\t\tif(le==ri){\n\t\t\treturn t[dep].num[le];\n\t\t}\n\t\tint tl=0,del=t[dep].toleft[y];\t\n\t\tif(le!=x){\n\t\t\ttl=t[dep].toleft[x-1];\n\t\t\tdel-=tl;\n\t\t}\t\n\t\tint nx,ny;\t\n\t\tif(del>=z){\n\t\t\tnx=le+tl;\n\t\t\tny=nx+del-1;\n\t\t\treturn query(lson,nx,ny,z);\n\t\t}\n\t\telse{\t\n\t\t\tnx=mid+1+x-tl-le;\n\t\t\tny=nx+y-x-del;\n\t\t\treturn query(rson,nx,ny,z-del);\n\t\t}\t\n\t}\t\n};\nTree T;\n//\u4e8c\u5206\u7b54\u6848\nint find(int x,int y,int z){\n\tint res=0;\n\tint tmp;\n\tint le=1,ri=y-x+1;\n\twhile(le<=ri){\n\t\ttmp=T.query(1,n,0,x,y,mid);\n\t\tif(tmp<=z){\n\t\t\tres=mid;\n\t\t\tle=mid+1;\n\t\t}\n\t\telse{\n\t\t\tri=mid-1;\n\t\t}\n\t}\n\treturn res;\n}\nint ans=0;\nint main(){\n\tn=read();\n\tfor(int i=1;i<=n;i++){\n\t\ta[i]=read();\n\t\tT.t[0].num[i]=a[i];\n\t\tT.sorted[i]=T.t[0].num[i];\n\t}\n\tsort(T.sorted+1,T.sorted+1+n);\n\tT.build(1,n,0);\n\tint x,y,z;\n\tfor(int i=1;i<=n;i++){\n\t\tint L=0,R=0;\n\t\tif(i!=1){\n\t\t\tx=1,y=i-1,z=a[i];\n\t\t\tint k=find(x,y,z);\n\t\t\tL=y-x+1-k;\n\t\t}\n\t\tif(i!=n){\n\t\t\tx=i+1,y=n,z=a[i];\n\t\t\tint k=find(x,y,z);\n\t\t\tR=y-x+1-k;\n\t\t}\n\t\tif((L>2*R)||(R>2*L)){\n\t\t\tans++;\n\t\t}\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n",
        "postTime": 1571573865,
        "uid": 178864,
        "name": "LordLeft",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3608 \u3010[USACO17JAN]Balanced Photo\u5e73\u8861\u7684\u7167\u7247\u3011"
    },
    {
        "content": "\u597d\u50cf\u548c\u9006\u5e8f\u5bf9\u6ca1\u591a\u5927\u5173\u7cfb\uff0c\u4f46\u662f\u601d\u60f3\u5dee\u4e0d\u591a\u3002\u5148\u6309\u503c\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u79bb\u6563\uff0c\u7136\u540e\u6bcf\u6b21\u67e5\u8be2\u5f97\u5230l(i)\u548cr(i)\uff0c\u7d2f\u52a0\u7b54\u6848\uff0c\u5e76\u628a\u8fd9\u4e2a\u70b9\u52a0\u5165\u6811\u72b6\u6570\u7ec4.\n\n\u601d\u8def\u5e94\u8be5\u975e\u5e38\u6e05\u695a\u4e86\uff0c\u4ee5\u4e0b\u4e3a\u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\n\nstruct Data {\n\tint a, i;\n} A[100001];\nbool cmp(Data a, Data b) {return a.a > b.a;}\n\nint n, cnt, c[100001];\n\nvoid update(int x, int f) {\n\tfor(; x<=n; x += x&-x) c[x] += f;\n}\nint query(int x) {\n\tint s = 0;\n\tfor(; x; x -= x&-x) s += c[x];\n\treturn s;\n}\n\nint main() {\n\tscanf(\"%d\", &n);\n\tfor(int i=1; i<=n; i++)\n\t\tscanf(\"%d\", &A[A[i].i = i].a);\n\tsort(A+1, A+n+1, cmp);\n\tfor(int i=1; i<=n; i++) {\n\t\tint l = query(A[i].i-1), r = query(n) - query(A[i].i);\n\t\tif(max(l, r) > min(l, r) * 2) cnt ++; \n\t\tupdate(A[i].i, 1);\n\t}\n\tprintf(\"%d\\n\", cnt);\n\treturn 0;\n}\n\n```",
        "postTime": 1527830738,
        "uid": 20375,
        "name": "hongzy",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3608 \u3010[USACO17JAN]Balanced Photo\u5e73\u8861\u7684\u7167\u7247\u3011"
    },
    {
        "content": "### **\u849f\u84bb\u7b2c\u4e8c\u7bc7\u9898\u89e3,\u5927\u4f6c\u52ff\u55b7** !!!\n~~(\u7b2c\u4e00\u7bc7\u9898\u89e3\u6ca1\u8fc7qaq)~~\n\n[\u9898\u76ee\u4f20\u9001\u95e8](https://www.luogu.com.cn/problem/P3608)\n\n\u8fdb\u5165\u6b63\u9898\uff1a\n\n\u6211\u770b\u5404\u4f4d\u5927\u4f6c\u6ca1\u6709\u7528\u79bb\u6563\u5316\u7684\uff0c\u5c31\u6765\u8865\u4e00\u7bc7\u9898\u89e3qwq\u3002\n\u672c\u9898\u601d\u8def\uff1a\u79bb\u6563\u5316+\u6811\u72b6\u6570\u7ec4\u3002\n\n\u9996\u5148,\u6211\u4eec\u770b\u6570\u636e\u8303\u56f4 $n<=10^5$ \u660e\u786e\u8fd9\u9898\u8981\u4e48 $O(n)$ \uff0c\u8981\u4e48nlogn\uff0c\u663e\u7136\uff0c\u5982\u679c $O(n)$ \u7684\u8bdd\uff0c\u80af\u5b9a\u76f4\u63a5 $n<=10^6$ \uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u8003\u8651 $nlogn$ \u7684\u7b97\u6cd5\u3002\n\n1. \u6211\u4eec\u8981\u5e72\u4ec0\u4e48:\u7ef4\u62a4\u51fa\u4e00\u5934\u725b\u5de6\u8fb9\u6bd4\u5b83\u9ad8\u7684\u725b\u7684\u4e2a\u6570  $l_i$ \u548c\u53f3\u8fb9\u6bd4\u5b83\u9ad8\u7684\u725b\u7684\u4e2a\u6570 $r_i$ \uff0c\u6211\u4eec\u5c31\u5148\u8003\u8651\u600e\u6837\u7ef4\u62a4\u51fa $l_i$ \u3002\n\n2. \u65e2\u7136\u8981\u7edf\u8ba1\u51fa $l_i$\uff0c\u6211\u4eec\u81ea\u7136\u4f1a\u8003\u8651\u5230\u524d\u7f00\u548c\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u6811\u72b6\u6570\u7ec4 $d_i$ \u8868\u793a\u8eab\u9ad8\u6bd4 $i$ \u77ee\u7684\u725b\u7684\u4e2a\u6570\u3002(**\u6ce8\u610f\uff1a\u662f\u8eab\u9ad8\u6bd4 $i$ \u8fd9\u4e2a\u503c\u77ee\n\uff0c\u800c\u4e0d\u662f\u6bd4h[i]\u77ee**\u3002)\n\n3. \u8fd9\u6837\u6211\u4eec\u5c31\u80fd\u8dd1\u4e00\u4e2afor\u5faa\u73af\u7ef4\u62a4\u51fa $l_i$ \uff0c\u8be6\u89c1\u4ee3\u7801\uff1a\n\n```cpp\nfor(int i=1;i<=n;i++)\n{\n\tl[i]=query(max_h)-query(h[i]);//\u8eab\u9ad8\u6bd4\u6700\u9ad8\u7684\u77ee\u7684\u4e2a\u6570-\u8eab\u9ad8\u6bd4h[i]\u77ee\u7684\u4e2a\u6570=\u8eab\u9ad8\u6bd4h[i]\u9ad8\u7684\u725b\u7684\u4e2a\u6570\n\tupdate(h[i],1);\n}\n```\n\n4. \u540c\u7406\uff0c\u6211\u4eec\u4e5f\u80fd\u7ef4\u62a4\u51fa $r_i$\uff0c\u76f4\u63a5memset\u4e00\u4e0b\uff0c\u518d\u53cd\u8fc7\u6765\u8dd1\u5c31\u884c\u4e86\u3002\n\n5. \u73b0\u5728\uff0c\u6211\u4eec\u53d1\u73b0\u4e86\u4e00\u4e2a\u95ee\u9898: $d_i$ \u662f\u8eab\u9ad8\u6bd4 $i$ \u77ee\u7684\u5976\u725b\u7684\u4e2a\u6570\uff0c\u4f46\u5976\u725b\u7684\u8eab\u9ad8 $<=10^9$ \u3002(~~FJ:\u6ca1\u542c\u8bf4\u8fc7\u7eb3\u7c73\u662f\u4ec0\u4e48\u5417\uff1f~~) \u800c\u6211\u4eec\u53d1\u73b0\u6570\u636e\u8303\u56f4 $n<=10^5$ \uff0c\u8fd9\u8bf4\u660e\u4e86\u4ec0\u4e48\uff0c\u6570\u636e\u5f88\u5206\u6563\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u5173\u5fc3\u5976\u725b\u9ad8\u5ea6\u7684\u6392\u540d\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u628a\u5976\u725b\u7684\u8eab\u9ad8\u79bb\u6563\u5316\u4e00\u4e0b\uff0c\u518d\u7528\u6811\u72b6\u6570\u7ec4\u505a\u5c31\u884c\u4e86\u3002\n\n6. \u7136\u540e\uff0c\u5c31\u6ca1\u6709\u7136\u540e\u4e86\uff0c\u6211\u4eec\u5c31\u505a\u5b8c\u4e86\u3002\n----\n\n$Code:$\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <queue>\n#include <map>\n#include <set>\n\nusing namespace std;\n\nint n,cnt;\nint h[100010];\nint ppp[100010];\nint d[100010];\nint l[100010];\nint r[100010];\nmap<int,int> mp;\n\ninline int lowbit(int x)\n{\n\treturn x&-x;\n}\n\ninline void update(int x,int v)\n{\n\twhile(x<=n)\n\t{\n\t\td[x]+=v;\n\t\tx+=lowbit(x);\t\t\n\t}\n}\n\ninline int query(int x)\n{\n\tint res=0;\n\twhile(x)\n\t{\n\t\tres+=d[x];\n\t\tx-=lowbit(x);\n\t}\n\treturn res;\n}\n\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d\",&h[i]);\n\t\tppp[i]=h[i];\n\t}\n\tsort(ppp+1,ppp+n+1);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tif(!mp[ppp[i]])\n\t\t{\n\t\t\tmp[ppp[i]]=++cnt;\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\th[i]=mp[h[i]];\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tl[i]=query(n)-query(h[i]);\n\t\tupdate(h[i],1);\n\t}\n\tmemset(d,0,sizeof(d));\n\tfor(int i=n;i>=1;i--)\n\t{\n\t\tr[i]=query(n)-query(h[i]);\n\t\tupdate(h[i],1);\n\t}\n\tint ans=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint da=max(l[i],r[i]);\n\t\tint xiao=min(l[i],r[i]);\n\t\tif(da>2*xiao)\n\t\t{\n\t\t\tans++;\n\t\t}\n\t}\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n\n```\n\n\u5982\u6709\u7591\u95ee\u6216\u9519\u8bef\uff0c\u8bf7\u79c1\u4fe1\u849f\u84bb\uff0c\u6b22\u8fce\u5927\u4f6c\u524d\u6765\u6307\u6559\u3002\n\n\u9644\u6ce8\uff1a\u849f\u84bb\u5199\u9898\u89e3\u4e0d\u6613\uff0c\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002\n\n\n\n\n\n",
        "postTime": 1580808315,
        "uid": 116060,
        "name": "TLE_Automat",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P3608 \u3010[USACO17JAN]Balanced Photo\u5e73\u8861\u7684\u7167\u7247\u3011"
    },
    {
        "content": "**\u6811\u72b6\u6570\u7ec4\u6c42\u9006\u5e8f\u5bf9**\n\n**\u8fd9\u9053\u9898\u662f\u6c42\u4e00\u4e2a\u70b9\u524d\u9762\u7684\u9006\u5e8f\u5bf9\u548c\u540e\u9762\u7684\uff08\u6b63\u5e8f\u5bf9\uff1f\uff09**\n\n**\u5bf9\u4e8e\u666e\u901a\u7684\u6811\u72b6\u6570\u7ec4\u6211\u4eec\u7528\u7684\u662f\u6c42\u524d\u7f00\uff0c\u4f46\u662f\u53ea\u8981\u5c06lowbit\u52a0\u51cf\u4e00\u6362\u5c31\u53ef\u4ee5\u6c42\u540e\u7f00\u4e86**\n\n**\u8fd9\u6837\u6211\u4eec\u5f00\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4**\n\n**\u5206\u522b\u7528\u524d\u7f00\u7684\u65b9\u6cd5\u6765\u6c42\u524d\u9762\u7684\u9006\u5e8f\u5bf9\u548c\u540e\u7f00\u7684\u65b9\u6cd5\u6c42\u6b63\u5e8f\u5bf9**\n\n\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cstdlib>\n#include<cmath>\n#define maxn 100100\nusing namespace std;\nint c[maxn],c1[maxn];\nint n;\nint sum;\nint l[maxn],r[maxn];\nint add1(int x,int k)\n{\n    for(int i=x;i<=n;i+=i&(-i)) c[i]+=k;\n}\nint query1(int x)\n{\n    int sum=0;\n    for(int i=x;i>0;i-=i&(-i)) sum+=c[i];\n    return sum;\n}\nint add2(int x,int k)\n{\n    for(int i=x;i>0;i-=i&(-i)) c1[i]+=k;\n}\nint query2(int x)\n{\n    int sum=0;\n    for(int i=x;i<=n;i+=i&(-i)) sum+=c1[i];\n    return sum;\n}\nstruct node\n{\n    int num,high;\n}a[maxn];\nint cmp1(node x,node y)\n{\n    return x.high>y.high;\n}\nint cmp2(node x,node y)\n{\n    return x.high>y.high;\n}\nint main()\n{\n    cin>>n;\n    for(int i=1;i<=n;i++) scanf(\"%d\",&a[i].high),a[i].num=i;\n    sort(a+1,a+1+n,cmp1);\n    for(int i=1;i<=n;i++)\n    {\n        add1(a[i].num,1);\n        l[a[i].num]=query1(a[i].num-1);   //\u6c42\u524d\u9762\u7684\u6bd4\u5b83\u5c0f\u7684\n    }\n    sort(a+1,a+1+n,cmp2);\n    for(int i=1;i<=n;i++)\n    {\n        add2(a[i].num,1);\n        r[a[i].num]=query2(a[i].num+1);      //\u540e\u7f00\uff0c\u6c42\u540e\u9762\u7684\u6bd4\u5b83\u5927\u7684\n    }\n    for(int i=1;i<=n;i++)\n    {\n        int k1=min(l[i],r[i]);\n        int k2=max(l[i],r[i]);\n        if(k2>k1*2) sum++;\n    }\n    cout<<sum<<endl;\n    return 0;\n}\n```",
        "postTime": 1509366796,
        "uid": 18441,
        "name": "Drug__Lover",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P3608 \u3010[USACO17JAN]Balanced Photo\u5e73\u8861\u7684\u7167\u7247\u3011"
    },
    {
        "content": "\u5176\u5b9e\u672c\u8d28\u4e0a\u5c31\u662f\u627e\u4e00\u4e0b\u9006\u5e8f\u5bf9\u6570\u91cf\u561b\n\n\u6240\u4ee5\u628a\u539f\u6570\u5217\u79bb\u6563\u5316\u4e4b\u540e\u6211\u4eec\u6b63\u7740\u548c\u5012\u7740\u627e\u4e00\u904d\u9006\u5e8f\u5bf9\uff08\u5012\u7740\u662f\u6b63\u5e8f\u5bf9\uff1f\uff09\u5c31\u53ef\u4ee5\u57282\\*nlogn\u7684\u65f6\u95f4\u5185\u6c42\u51fa\u6240\u6709\u7684l[i]\u548cr[i]\n\n\u8fd9\u53ef\u4ee5\u76f4\u63a5\u7528\u6811\u72b6\u6570\u7ec4\u89e3\u51b3\uff0c\u7136\u540e\u66b4\u529b\u5224\u65ad\u5373\u53ef\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#include<iostream>\n#include<cstdlib>\n#include<set>\n#include<map>\n#include<string>\n#include<ctime>\n#include<queue>\n#include<vector>\nusing namespace std;\nint n,a[100001],b[100001],l[100001],r[100001],f[100001];\ninline int lowbit(int x){return x&-x;}\ninline void add(int x){for(;x<=n;x+=lowbit(x))f[x]++;}\ninline int sum(int x){int ans=0;for(;x;x-=lowbit(x))ans+=f[x];return ans;}\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)scanf(\"%d\",&a[i]),b[i]=a[i];\n    sort(b+1,b+n+1);\n    for(int i=1;i<=n;i++)a[i]=lower_bound(b+1,b+n+1,a[i])-b;//\u79bb\u6563\u5316\n    for(int i=1;i<=n;i++)l[i]=i-1-sum(a[i]),add(a[i]);//\u6b63\u7740\u627e\u9006\u5e8f\u5bf9\n    memset(f,0,sizeof f);\n    for(int i=n;i;i--)r[i]=n-i-sum(a[i]),add(a[i]);//\u5012\u7740\u7167\u6b63\u5e8f\u5bf9\n    int ans=0;\n    for(int i=1;i<=n;i++){\n        if(l[i]==0&&r[i]==0)continue;\n        if(!l[i]||!r[i])ans++;//\u7279\u52240\u7684\u60c5\u51b5\n        else{\n            int xx=max(l[i],r[i]),yy=min(l[i],r[i]);\n            if(xx/yy>2)ans++;\n            else if(xx/yy==2&&yy*2!=xx)ans++;\n        }\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n```",
        "postTime": 1496370019,
        "uid": 5716,
        "name": "jzqjzq",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P3608 \u3010[USACO17JAN]Balanced Photo\u5e73\u8861\u7684\u7167\u7247\u3011"
    },
    {
        "content": "(\u5febCSP\u4e86\uff0c\u6b63\u597d\u6765\u590d\u4e60\u4e00\u4e0b\u6811\u72b6\u6570\u7ec4\u7684\u677f\u5b50\u3002)\n\n---\n\n\u4ee5\u6c42L\u6570\u7ec4\u4e3a\u4f8b\u3002\u5148\u79bb\u6563\u5316\u9884\u5904\u7406\uff0c\u4e4b\u540e\u5c31\u53ef\u4ee5\u7528\u6876\u6570\u7ec4arr[i]\u8868\u793a\u7b2ci\u4e2a\u6570\u662f\u5426\u51fa\u73b0\u3002\n\n\u7531\u4e8e\u5904\u7406\u4f1a\u6309\u7167h\u4ece\u5927\u5230\u5c0f\u7684\u987a\u5e8f\u8fdb\u884c\uff0c\u6240\u4ee5\u5f53\u7edf\u8ba1\u5230h[i]\u65f6\uff0c\u524d\u7f00\u548csum[i-1]\u5c31\u662f\u539f\u4e0b\u6807\u6240\u5bf9\u5e94\u7684L\u503c\u3002\u76f8\u5bf9\u5730\uff0cR\u6570\u7ec4\u5bf9\u5e94\u7684\u5c31\u662f\u540e\u7f00\u548c\u3002\n\n\u8fd9\u4e00\u4fe1\u606f\uff0c\u76f8\u5f53\u4e8e\u5355\u70b9\u4fee\u6539\u533a\u95f4\u6c42\u548c\uff0c\u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u3002\n\n$ O(n\\log n)$\u5904\u7406L\u4e0eR\uff0c\u518d\u7edf\u8ba1\u7b54\u6848\u3002\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<algorithm>\nusing namespace std;\n\nconst int MAXN=100005;\nint n,l[MAXN],r[MAXN],arr[MAXN],ans;\nstruct data {\n\tint h,order;\n}a[MAXN];\ndouble divi;\n\nint lowbit(int x) {return x&(-x);}\nint sum(int x) {int ret=0;for(int i=x;i;i-=lowbit(i)) ret+=arr[i];return ret;}\nvoid add(int x,int num) {for(int i=x;i<=n;i+=lowbit(i)) arr[i]+=num;}\nbool comp2(data d1,data d2) {return d1.h>d2.h;}\n\nint main() {\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++) scanf(\"%d\",&a[i].h),a[i].order=i;\n\tsort(a+1,a+1+n,comp2);\n\tfor(int i=1;i<=n;i++) add(a[i].order,1),l[a[i].order]=sum(a[i].order-1);\n\tmemset(arr,0,sizeof(arr));\n\tfor(int i=1;i<=n;i++) add(a[i].order,1),r[a[i].order]=sum(n)-sum(a[i].order);\n\tfor(int i=1;i<=n;i++) divi=(double)l[i]/(double)r[i],ans+=(divi>2||divi<0.5);\n\tprintf(\"%d\",ans);\n\treturn 0;\n}\n```\n\n",
        "postTime": 1573821967,
        "uid": 34372,
        "name": "_wkjzyc",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3608 \u3010[USACO17JAN]Balanced Photo\u5e73\u8861\u7684\u7167\u7247\u3011"
    },
    {
        "content": "\u8bda\u7136\uff0c$O(n^2)$\u7684\u505a\u6cd5\u53ef\u4ee5\u6c34\u8fc7\u53bb\uff0c\u4e0d\u8fc7\u849f\u84bb\u6c34\u4e86\u4e00\u53d1\u6811\u72b6\u6570\u7ec4\u3002\n\u6811\u72b6\u6570\u7ec4\u590d\u6742\u5ea6\u4e3a$O(NlogN)$,\u975e\u5e38\u5b8c\u7f8e\u3002\n\n\u6211\u4eec\u5148\u79bb\u6563\u5316\u6570\u7ec4\uff0c\u6539\u7528\u7b2c\u51e0\u5927\u6765\u4ee3\u66ff\u6bcf\u6b21\u6309\u539f\u8f93\u5165\u7684\u6570\u7ec4\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u8981\u7528\u6811\u72b6\u6570\u7ec4\u6765\u7ef4\u62a4\u6709\u51e0\u4e2a\u6bd4\u8fd9\u4e2a\u6570\u5927\u5c31\u884c\u4e86\uff0c\u4e0d\u8fc7\u5bf9\u4e8e\u4ece\u5de6\u5230\u53f3\u548c\u4ece\u53f3\u5230\u5de6\uff0c\u6211\u4eec\u9700\u8981\u505a\u4e24\u904d\u3002\u4ee3\u7801\uff08\u9664\u4e86\u6211\u7684\u5feb\u8bfb\u5feb\u8f93\uff09\u4e5f\u5f88\u77ed\u3002\n\n```\n#include<bits/stdc++.h>\n#define swap mswap\n#define max(a,b) (a>b?a:b)\n#define min(a,b) (a<b?a:b)\nusing namespace std;\nvoid swap(int &x,int &y)\n{\n    x^=y^=x^=y;\n}\nvoid read(int &x)\n{\n    x=0;\n    char ch=getchar();\n    int pd=1;\n    while(ch<'0'||ch>'9')\n    {\n        if(ch=='-')\n        {\n            pd=-pd;\n        }\n        ch=getchar();\n    }\n    while(ch<='9'&&ch>='0')\n    {\n        x=x*10+ch-'0';\n        ch=getchar();\n    }\n    x*=pd;\n}\nvoid write(const int &x)\n{\n    char f[100001];\n    int s=0;\n    int tmp=x;\n    if(tmp==0)\n    {\n        putchar('0');\n        return;\n    }\n    if(tmp<0)\n    {\n        tmp=-tmp;\n        putchar('-');\n    }\n    while(tmp>0)\n    {\n        f[s++]=tmp%10+'0';\n        tmp/=10;\n    }\n    while(s>0)\n    {\n        putchar(f[--s]);\n    }\n}\n\nconst int N=1e5+10;\nint n,c[N],a[N],b[N];\nint l[N],r[N];\nint lowbit(int &x)\n{\n\treturn x&(-x);\n\t\n}\n\n\nvoid add1(int x)\n{\n\twhile(x<=n)\n\t{\n\t\tc[x]++;\n\t\tx+=lowbit(x);\n\t}\n}\nvoid add2(int x)\n{\n\twhile(x>0)\n\t{\n\t\tc[x]++;\n\t\tx-=lowbit(x);\n\t}\n}\n\n\nint query1(int x)\n{\n\tint ans=0;\n\twhile(x>0)\n\t{\n\t\tans+=c[x];\n\t\tx-=lowbit(x);\n\t}\n\treturn ans;\n}\n\nint query2(int x)\n{\n\tint ans=0;\n\twhile(x<=n)\n\t{\n\t\tans+=c[x];\n\t\tx+=lowbit(x);\n\t}\n\treturn ans;\n}\ninline bool cmp(const int &x,const int &y)\n{\n\treturn x>y;\n } \nint main()\n{\n    read(n);\n    for(register int i=1;i<=n;++i)\n    {\n        read(a[i]);\n        b[i]=a[i];\n    }\n    sort(b+1,b+n+1);\n    int cnt=unique(b+1,b+n+1)-b-1;\n    for(register int i=1;i<=n;++i)\n    {\n        int j=lower_bound(b+1,b+cnt+1,a[i])-b;\n\t\tadd2(j);\n        l[i]=query2(j+1);\n    }\n    memset(c,0,sizeof(c));\n\tfor(register int i=n;i>=1;--i)\n\t{\n\t\tint j=lower_bound(b+1,b+cnt+1,a[i])-b;\n\t\tadd2(j);\n\t\tr[i]=query2(j+1);\n\t}\n\tint aa=0;\n\tfor(register int i=1;i<=n;++i)\n\t{\n\t\tif(max(l[i],r[i])>2*(min(l[i],r[i])))\n\t\t{\n\t\t\taa++;\n\t\t}\n\t}\n\twrite(aa);\n}\n```\n",
        "postTime": 1552649232,
        "uid": 87026,
        "name": "\u4e24\u5e74\u6253\u94c1",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3608 \u3010[USACO17JAN]Balanced Photo\u5e73\u8861\u7684\u7167\u7247\u3011"
    }
]