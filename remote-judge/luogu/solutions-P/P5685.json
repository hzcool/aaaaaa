[
    {
        "content": "~~PAM\u4e3a\u5565\u603b\u611f\u89c9\u6bd4SAM\u53cb\u5584\u597d\u591a\u554a~~\n\n\u4e0e\u53e6\u4e00\u7bc7\u9898\u89e3\u505a\u6cd5\u4e0d\u540c\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5bf9\u4e24\u4e2a\u4e32\u540c\u65f6\u5efa\u7acb$\\rm PAM$\u3002\u8003\u8651$\\rm PAM$\u91cc\u9762\u6bcf\u4e2a\u8282\u70b9\u7684\u610f\u4e49\uff0c\u8282\u70b9=\u56de\u6587\u4e32\uff0c\u6240\u4ee5\u8003\u8651\u6211\u4eec\u5bf9\u4e24\u4e2a$\\rm PAM$\u540c\u65f6\u5f00\u59cb$\\sf dfs$\uff0c\u56e0\u4e3a\u8d77\u59cb\u72b6\u6001\u76f8\u540c\uff0c\u90a3\u4e48\u5982\u679c\u9047\u5230\u76f8\u540c\u7684\u8f6c\u79fb\u5c31\u8bf4\u660e\u6709\u76f8\u540c\u7684\u72b6\u6001\uff0c\u628a$sz_x\\times sz_y$\u4f5c\u4e3a\u8d21\u732e\u52a0\u5230\u7b54\u6848\u91cc\u9762\u5373\u53ef\u3002\n\n\u4ee5\u4e0b\u662f\u4e00\u4e9b\u95f2\u626f\uff1a\n\n* \u6ce8\u610f\u5230\uff0c\u5bf9\u4e8e\u56de\u6587\u4e32\u4e4b\u95f4\u7684\u8f6c\u79fb\u800c\u8a00\uff0c\u7531\u4e8e\u4ece\u5947\u6570\u957f\u5ea6\u53ea\u80fd\u8f6c\u79fb\u5230\u5947\u6570\u957f\u5ea6\uff0c\u5076\u6570\u957f\u5ea6\u53ea\u80fd\u8f6c\u79fb\u5230\u5076\u6570\u957f\u5ea6\uff0c\u6240\u4ee5\u8981\u628a\u6bcf\u4e00\u7ec4\u6839\u90fd$\\sf dfs$\u4e00\u904d\u3002\n\n* \u7d27\u63a5\u7740\u4e0a\u4e00\u6761\uff0c\u663e\u7136\u6211\u4eec\u8981\u7279\u5224\u6389\u865a\u6839\uff08\u5373\u5947\u6839\u548c\u5076\u6839\uff09\u3002\n\n* \u7136\u540e\u8fd9\u9053\u9898\u7684\u4e24\u4e2a \u5b50$\\mathsf {idea}$ \u5206\u522b\u8ddf\u4e0b\u9762\u4e24\u9898\u76f8\u4f3c\uff1a\n\n\t* [Link1](https://www.luogu.com.cn/problem/P3649)\uff0c[Link2](https://www.luogu.com.cn/problem/P5555)\n    \n\u4e0a\u4ee3\u7801    \n\n```cpp\n#define Sigma 30\n#define MAXN 500010\n#define LL long long\n\nusing namespace std ;\nint N, M ; LL ans ; char S[MAXN], T[MAXN] ;\nstruct PAM{\n\tint rt0, rt1, last, sz, f[MAXN] ;\n\tint trie[MAXN][Sigma], pre[MAXN], len[MAXN] ;\n\tvoid Init(){\n\t\tsz = -1, rt0 = ++ sz, rt1 = ++ sz ; \n\t\tpre[rt0] = pre[rt1] = rt1, len[rt0] = 0, len[rt1] = -1, last = rt0 ; \n\t} \n\tvoid Insert(int x, int p, char *s){\n\t\tint u = last ; \n\t\twhile (s[p] != s[p - len[u] - 1]) u = pre[u] ; \n\t\tif (!trie[u][x]){\n\t\t\tint newq = ++ sz, fa = pre[u] ; \n\t\t\twhile (s[p] != s[p - len[fa] - 1]) fa = pre[fa] ;\n\t\t\tpre[newq] = trie[fa][x], trie[u][x] = newq, len[newq] = len[u] + 2 ;\n\t\t}\n\t\tlast = trie[u][x], f[last] ++ ; \n\t}\n}P, Q ;\nvoid dfs(int x, int y){\n\tif (x + y > 2) ans += 1ll * P.f[x] * Q.f[y] ; \n\tfor (int i = 1 ; i <= 26 ; ++ i)\n\t\tif (P.trie[x][i] && Q.trie[y][i]) dfs(P.trie[x][i], Q.trie[y][i]) ;\n}\nint main(){\n\tP.Init(), Q.Init() ;\n\tcin >> (S + 1) >> (T + 1) ; \n\tN = strlen(S + 1), M = strlen(T + 1) ;\n\tfor (int i = 1 ; i <= N ; ++ i) P.Insert(S[i] - 'A' + 1, i, S) ;\n\tfor (int i = 1 ; i <= M ; ++ i) Q.Insert(T[i] - 'A' + 1, i, T) ;\n\tfor (int i = P.sz ; i ; -- i) P.f[P.pre[i]] += P.f[i] ; \n\tfor (int i = Q.sz ; i ; -- i) Q.f[Q.pre[i]] += Q.f[i] ; \n\tdfs(1, 1) ; dfs(0, 0) ; cout << ans<< endl ; return 0 ;\n}\n```\n",
        "postTime": 1575967039,
        "uid": 28313,
        "name": "\u768e\u6708\u534a\u6d12\u82b1",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5685 \u3010[JSOI2013]\u5feb\u4e50\u7684 JYY\u3011"
    },
    {
        "content": "## \u7adf\u7136\u6ca1\u6709 $\\mathrm{Hash+map}$ \u7684\u9898\u89e3\uff1f\n\n\n#### \u539f\u9898\uff1a[P5685 [JSOI2013]\u5feb\u4e50\u7684 JYY](https://www.luogu.com.cn/problem/P5685)\n\n\n#### \u9898\u610f\uff1a\n\u7ed9\u5b9a $\\mathrm{A,B}$ \u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u5bf9\u4e8e\u6bcf\u4e2a $\\mathrm{A,B}$ \u7684\u516c\u5171\u56de\u6587\u5b50\u4e32 $\\mathrm{S}$ \uff0c\u6c42 $\\sum\\limits_{}resA[S]*resB[S]$ \u7684\u503c\uff0c\u5176\u4e2d $\\mathrm{resA[S]}$ \u548c ${resB[S]}$ \u8868\u793a\u4e32 $\\mathrm{S}$ \u5728 $\\mathrm{A,B}$ \u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u3002\n\n\u539f\u56e0\uff1a\u663e\u7136\u6bcf\u4e00\u4e2a\u5728 $\\mathrm{A}$ \u4e2d\u51fa\u73b0\u6b21\u6570\u4e3a $\\mathrm{res[P]}$ \u7684\u56de\u6587\u5b50\u4e32 $\\mathrm{P}$ \u4e0e\u5728 $\\mathrm{B}$ \u4e2d\u51fa\u73b0\u6b21\u6570\u4e3a $\\mathrm{resB[S]}$ \u7684\u56de\u6587\u5b50\u4e32 $\\mathrm{S}$ \u7684\u7ec4\u5408\u7684\u56db\u5143\u7ec4 $\\mathrm{(i,j,x,y)}$ \u7684\u4e2a\u6570\u4e3a $\\mathrm{resA[P]*resB[S]}$\u3002\n\n\n#### \u601d\u8def\uff1a\n\u6700\u66b4\u529b\u7684\u505a\u6cd5\u663e\u7136\u662f\u679a\u4e3e $\\mathrm{A,B}$ \u7684\u6240\u6709\u56de\u6587\u5b50\u4e32\uff08\u4e2d\u5fc3\u6269\u5c55\u6cd5\uff09\uff0c\u7531\u4e8e\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u6240\u6709\u56de\u6587\u5b50\u4e32\u7684\u4e2a\u6570\u8fbe\u5230\u4e86 $\\mathrm{O(n^2)}$ \u7684\u7ea7\u522b\uff0c\u6574\u4f53\u7684\u590d\u6742\u5ea6\u4e3a $\\mathrm{O(n^4)}$\u3002\n\n\u663e\u800c\u6613\u89c1\uff0c\u6211\u4eec\u53ef\u4ee5\u7528 $\\mathrm{map}$ \u4f18\u5316\u8fd9\u4e2a\u8fc7\u7a0b\u3002\u679a\u4e3e $\\mathrm{A}$ \u7684\u6240\u6709\u56de\u6587\u5b50\u4e32\uff0c\u5c06\u4fe1\u606f\u5b58\u5165 $\\mathrm{map:resA[S]=cnt}$ \uff0c\u540c\u7406\u5f97 $\\mathrm{resB[S]}$\uff0c\u5386\u904d\u8ba1\u7b97\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathrm{O(n^2logn)}$ \uff0c\u74f6\u9888\u5728\u4e8e**\u679a\u4e3e\u6240\u6709\u56de\u6587\u5b50\u4e32**\u3002\n\n\u800c\u6211\u4eec\u6709\u719f\u77e5\u7ed3\u8bba\uff1a**\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u672c\u8d28\u4e0d\u540c\u7684\u56de\u6587\u5b50\u4e32\u7684\u4e2a\u6570\u53ea\u6709 $\\mathrm{O(n)}$ \u4e2a**\uff08\u4e24\u4e2a\u5b57\u7b26\u4e32\u672c\u8d28\u4e0d\u540c\u5f53\u4e14\u4ec5\u5f53\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e0d\u540c\uff0c\u548c\u5176\u5728\u539f\u4e32\u4e2d\u7684\u4f4d\u7f6e\u65e0\u5173\uff09\uff0c\u81f3\u4e8e\u8bc1\u660e\u53ef\u4ee5\u8003\u8651\u5728\u4e00\u4e2a\u56de\u6587\u4e32\u672b\u5c3e\u52a0\u5165\u5355\u4e2a\u5b57\u7b26\u751f\u6210\u7684\u56de\u6587\u4e32\u4e2a\u6570\u3002\u800c**\u6240\u6709\u7684\u56de\u6587\u5b50\u4e32\u90fd\u53ef\u4ee5\u7531\u4ee5\u6bcf\u4e2a\u5b57\u7b26\u6216\u5939\u7f1d\u4e3a\u56de\u6587\u4e2d\u5fc3\u7684 $\\mathrm{2n}$ \u4e2a\u6781\u957f\u56de\u6587\u5b50\u4e32\u751f\u6210**\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u6781\u957f\u56de\u6587\u5b50\u4e32\u4ece\u4e24\u8fb9\u7b49\u91cf\u53bb\u6389\u82e5\u5e72\u5b57\u7b26\u540e\u4ecd\u662f\u56de\u6587\u5b50\u4e32\u3002\n\n\u81f3\u4e8e\u8fd9\u4e9b\u6781\u957f\u56de\u6587\u5b50\u4e32\u600e\u4e48\u6c42\uff0c\u53ef\u4ee5\u8dd1\u4e00\u904d $\\mathrm{O(n)}$ \u7684 $\\mathrm{Manacher}$ \u3001$\\mathrm{O(nlogn)}$ \u7684 $\\mathrm{Hash+}$\u4e8c\u5206\u6216\u8005 $\\mathrm{O(n)}$ \u7684 $\\mathrm{Hash+}$\u8d2a\u5fc3\u3002\u8fd9\u91cc\u6211\u4eec\u9009\u62e9 $\\mathrm{Hash+}$\u4e8c\u5206\uff0c\u56e0\u4e3a\u65e2\u53ef\u4ee5\u6210\u4e3a\u4e0b\u9762\u7684\u8fc7\u7a0b\u7684\u9884\u5904\u7406\uff0c\u53c8\u597d\u5199\uff0c\u74f6\u9888\u4e5f\u4e0d\u5728\u8fd9\u91cc\u3002 \n\n\u4ece $\\mathrm{O(n^2)}$ \u4e2a**\u6240\u6709\u56de\u6587\u5b50\u4e32**\u5230 $\\mathrm{O(n)}$ \u4e2a**\u672c\u8d28\u4e0d\u540c**\u7684\u56de\u6587\u5b50\u4e32\uff0c\u8fd9\u8bf4\u660e\u6211\u4eec\u7684\u6781\u957f\u56de\u6587\u5b50\u4e32\u5e26\u6765\u7684\u4fe1\u606f\u76f8\u8f83\u4e8e\u6211\u4eec\u9700\u8981\u4e86\u89e3\u7684\u4fe1\u606f\u6709\u4e86**\u5f88\u5927\u7684\u5197\u4f59**\u3002\u6211\u4eec\u9700\u8981\u901a\u8fc7\u4e00\u5b9a\u7684\u65b9\u5f0f\u6765\u201c\u53bb\u91cd\u201d\uff0c\u5373\u8003\u8651\u662f\u5426\u80fd\u6bcf\u6b21\u53ea\u4ece\u5f85\u9009\u96c6\u5408\u9009\u51fa\u4e00\u4e2a\u4e0e\u6240\u6709\u5df2\u77e5\u56de\u6587\u5b50\u4e32**\u672c\u8d28\u4e0d\u540c**\u7684\u56de\u6587\u5b50\u4e32\uff08\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u5386\u904d\u7684\uff0c\u5c31\u662f\u6240\u6709\u8fd9\u4e9b\u672c\u8d28\u4e0d\u540c\u7684\u56de\u6587\u5b50\u4e32\uff0c\u8fd9\u662f\u539f\u4fe1\u606f\u7684\u7cbe\u70bc\uff0c\u4e5f\u662f\u6211\u4eec\u6240\u5fc5\u987b\u77e5\u9053\u7684\u4fe1\u606f\uff09\u3002\u800c\u957f\u5ea6\u7684\u6bd4\u8f83\uff0c\u5f80\u5f80\u662f\u4e00\u4e9b\u5b57\u7b26\u4e32\u95ee\u9898\u7684\u7a81\u7834\u53e3\u3002\n\n\u6211\u4eec\u9700\u8981\u65f6\u65f6\u523b\u523b\u7cbe\u7b80\u5df2\u77e5\u96c6\u5408\uff0c\u5c06\u6240\u6709\u672c\u8d28\u76f8\u540c\u7684\u5b50\u4e32\u7684\u4fe1\u606f\u5408\u5e76\uff0c\u8fd9\u9700\u8981\u4e00\u79cd\u80fd\u591f**\u52a8\u6001\u53bb\u91cd**\u7684\u6570\u636e\u7ed3\u6784\u3002\u5148\u4ece\u521d\u59cb\u72b6\u6001\u7684\u56de\u6587\u5b50\u4e32\u96c6\u5408\u5f00\u59cb\u8003\u8651\uff0c\u5176\u4e2d\u6709 $\\mathrm{O(n)}$ \u4e2a\u4fe1\u606f\u5408\u5e76\u8fc7\u7684\u672c\u8d28\u4e0d\u540c\u7684\u6781\u957f\u56de\u6587\u5b50\u4e32\u3002\u6700\u6734\u7d20\u7684\u60f3\u6cd5\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u96c6\u5408\u9009\u51fa\u4e00\u4e2a\u56de\u6587\u4e32\uff0c\u6311\u9009\u51fa\u5176\u751f\u6210\u7684\u975e\u81ea\u8eab\u7684\u56de\u6587\u5b50\u4e32\u4e2d\u4e0d\u4e0e\u96c6\u5408\u4e2d\u4efb\u4e00\u5176\u4ed6\u4e32\u751f\u6210\u7684\u56de\u6587\u5b50\u4e32\u672c\u8d28\u76f8\u540c\u7684\u82e5\u5e72\u201c\u65b0\u4e32\u201d\uff0c\u76f4\u5230\u96c6\u5408\u4e3a\u7a7a\u3002\n\n\u4e3a\u4e86\u52a0\u5feb\u6311\u9009\u540e\u5224\u65ad\u5176\u56de\u6587\u5b50\u4e32\u662f\u5426\u201c\u672c\u8d28\u4e0d\u540c\u201d\u7684\u901f\u5ea6\uff0c\u6211\u4eec\u9700\u8981\u7528\u5230\u53e6\u4e00\u4e2a\u5173\u952e\u7ed3\u8bba\uff1a**\u201c\u672c\u8d28\u76f8\u540c\u201d\u5177\u6709\u5355\u8c03\u6027**\uff08\u4e24\u4e2a\u4e32\u672c\u8d28\u76f8\u540c\uff0c\u5176\u5bf9\u5e94\u5b50\u4e32\u5fc5\u672c\u8d28\u76f8\u540c\uff09\u3002\u8fd9\u542f\u793a\u6211\u4eec\u5728\u9009\u51fa\u6765\u7684\u56de\u6587\u4e32\u4e2d\u4ece\u957f\u5230\u77ed\u6311\u9009\u56de\u6587\u5b50\u4e32\u65f6\uff0c\u5982\u679c\u8fd9\u4e2a\u5b50\u4e32\u4e0e\u96c6\u5408\u4e2d\u67d0\u4e00\u4e32\u76f8\u7b49\uff0c\u5c31\u6ca1\u5fc5\u8981\u7ee7\u7eed\u5224\u65ad\u2014\u2014\u56e0\u4e3a\u6211\u4eec\u8981\u627e\u51fa\u7684\u662f\u6240\u6709**\u672c\u8d28\u4e0d\u540c\u7684\u4e32**\uff0c\u5269\u4e0b\u7684\u6240\u6709\u5f85\u5224\u65ad\u7684\u5b50\u4e32\u7684\u4fe1\u606f\u663e\u7136\u53ef\u4ee5\u901a\u8fc7\u66f4\u65b0\u5728\u96c6\u5408\u4e2d\u4e0e\u8fd9\u4e2a\u5b50\u4e32\u76f8\u7b49\u7684\u4e32 $\\mathrm{P}$ \u7684\u4fe1\u606f\uff0c\u5c06\u5176\u4ee3\u8868\u7684\u4fe1\u606f\u201c**\u4e0b\u653e**\u201d\u5230\u4e32 $\\mathrm{P}$ \u4e0a\uff0c\u5e76\u201c\u9012\u5f52\u201d\u822c\u5730\u8fdb\u884c\u4e0b\u4e00\u8f6e\u6311\u9009\u3002\u8fd9\u5b9e\u73b0\u4e86\u4e00\u4e2a\u201c**\u6807\u8bb0\u4e0b\u4f20**\u201d\u7684\u8fc7\u7a0b\uff0c\u56e0\u6b64\u6bcf\u6b21\u53ea\u8981\u4e0b\u653e\u4e00\u5c42\u4fe1\u606f\uff0c\u5f85\u5230\u4e0b\u6b21\u6311\u9009\u5230\u4e32 $\\mathrm{P}$ \u65f6\u4f1a**\u7ee7\u7eed\u4e0b\u653e**\uff0c\u4fdd\u8bc1\u4e86\u6700\u540e\u5f97\u5230\u7684\u4fe1\u606f\u6b63\u786e\u6027\u3002\uff08\u662f\u4e0d\u662f\u5f88\u50cf\u7ebf\u6bb5\u6811\u7684 $\\mathrm{pushdown}$ \u548c $\\mathrm{lazy}$ \u6807\u8bb0\uff1f\u6ca1\u9519\uff0c\u8fd9\u662f\u4e00\u79cd**\u964d\u4f4e\u590d\u6742\u5ea6\u7684\u901a\u7528\u601d\u60f3**\uff01\uff09\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u6bcf\u6b21\u9700\u8981\u8d2a\u5fc3\u5730\u4ece\u96c6\u5408\u4e2d\u6311\u51fa\u4e00\u4e2a\u6700\u957f\u7684\u56de\u6587\u4e32\uff08\u5b83\u4e00\u5b9a\u662f\u4e00\u4e2a\u672c\u8d28\u4e0d\u540c\u7684\u4e32\uff09\uff0c\u7edf\u8ba1\u4e00\u4e0b\u4fe1\u606f\uff08\u5373\u66f4\u65b0 $\\mathrm{res[S]}$\uff09\uff0c\u5e76\u6bcf\u6b21\u4ece\u4e24\u5934\u53bb\u6389\u4e00\u4e2a\u5b57\u7b26\u751f\u6210\u4e00\u4e2a\u56de\u6587\u5b50\u4e32\uff0c\u5982\u679c\u5b83\u4e0e\u96c6\u5408\u4e2d\u67d0\u4e00\u4e32\u76f8\u540c\u5c31\u5408\u5e76\u4fe1\u606f\uff08$\\mathrm{pushdown}$\uff09\uff0c\u5426\u5219\u5c31\u8bf4\u660e\u5b83\u662f\u4e00\u4e2a\u672c\u8d28\u4e0d\u540c\u7684\u65b0\u4e32\uff0c \u5c06\u5176\u653e\u56de\u5f85\u9009\u96c6\u5408\uff0c\u7b49\u5f85\u4e0b\u4e00\u6b21\u88ab\u6311\u9009\u3002\uff08**\u8fd9\u5c31\u4fdd\u8bc1\u4e86\u6211\u4eec\u6bcf\u6b21\u53ea\u8fdb\u884c\u4e00\u5c42\u64cd\u4f5c\uff0c\u5e76\u4fdd\u8bc1\u96c6\u5408\u7684\u4e0d\u91cd\u590d\u6027\uff0c\u5373\u90fd\u662f\u672c\u8d28\u4e0d\u540c\u7684\u4e32\uff0c\u672c\u8d28\u76f8\u540c\u7684\u90fd\u53ca\u65f6\u8fdb\u884c\u4e86\u5408\u5e76**\uff09\n\n\u7efc\u4e0a\uff0c\u6211\u4eec\u9700\u8981\u7ef4\u62a4\u96c6\u5408\u7684**\u4e0d\u91cd\u590d\u6027\uff08\u4fdd\u8bc1\u6b63\u786e\u6027\uff09\u3001\u6709\u5e8f\u6027\uff08\u8d2a\u5fc3\u5730\u6311\u9009\u6700\u957f\u7684\u4e32\uff09\u548c\u4e00\u4e9b\u5bf9\u5e94\u4fe1\u606f**\uff0c\u56e0\u6b64\u9700\u8981 $\\mathrm{map}$ \u4f5c\u4e3a\u6700\u7ec8\u7ef4\u62a4\u7684\u6570\u636e\u7ed3\u6784\uff0c\u7528 $\\mathrm{Hash+map}$ \u7684\u5e38\u89c1\u6280\u5de7\u5feb\u901f\u5224\u65ad\u5b50\u4e32\u662f\u5426\u5b58\u5728\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 $\\mathrm{O(nlogn)}$\uff0c\u74f6\u9888\u5728\u4e8e\u7ef4\u62a4 $\\mathrm{map}$ \u7684\u6709\u5e8f\uff0c\u4ee5\u8fd9\u79cd\u601d\u8def\u5df2\u7ecf\u65e0\u6cd5\u518d\u8fdb\u884c\u4f18\u5316\u4e86\uff0c\u4f46\u8db3\u4ee5\u901a\u8fc7\u6b64\u9898\u3002\n\n\u5bf9\u4e8e $\\mathrm{map}$ \u91cc\u5b58\u7684\u4fe1\u606f\uff0c$\\mathrm{key}$ \u5e94\u6709\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u548c\u54c8\u5e0c\u503c\uff0c$\\mathrm{value}$ \u5e94\u6709\u5176\u5de6\u53f3\u7aef\u70b9\u548c\u6700\u91cd\u8981\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u5e76\u4ee5\u957f\u5ea6\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\u8fdb\u884c\u6392\u5e8f\uff0c\u6545\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u591a\u5143\u7ec4\u6765\u7ef4\u62a4\uff0c$\\mathrm{key}$ \u53ef\u4ee5\u7528 $\\mathrm{pair}$ \u7c7b\u578b\uff0c\u800c $\\mathrm{value}$ \u53ef\u4ee5\u7528 $\\mathrm{tuple}$ \u7c7b\u578b\u3002\u7531\u4e8e $\\mathrm{map}$ \u6392\u5e8f\u662f\u5347\u5e8f\uff0c\u800c\u6211\u4eec\u9700\u8981\u53d6\u6700\u957f\u4e32\uff0c\u53ef\u4ee5\u7528\u5230\u53cd\u5e8f\u8fed\u4ee3\u5668 $\\mathrm{map.rbegin()}$ \u6765\u5b9e\u73b0\uff0c\u53ef\u4ee5\u767e\u5ea6\u81ea\u884c\u4e86\u89e3\u76f8\u5173\u5185\u5bb9\u53ca $\\mathrm{tuple}$ \u7c7b\u578b\u7684\u4f7f\u7528\u65b9\u6cd5\u3002\u5177\u4f53\u5b9e\u73b0\u7ec6\u8282\u53ca\u6ce8\u610f\u4e8b\u9879\uff0c\u5728\u4ee3\u7801\u4e2d\u4e5f\u6709\u8fdb\u4e00\u6b65\u7684\u8bb2\u89e3\u3002\n\n\u53e6\u5916\uff0c\u6b64\u9898\u54c8\u5e0c\u7684\u5b57\u7b26\u4e32\u6570\u91cf\u8f83\u5927\uff0c\u5b58\u5728\u88ab\u201c\u751f\u65e5\u653b\u51fb\u201d\u7684\u98ce\u9669\uff08\u5177\u4f53\u53ef\u4ee5\u767e\u5ea6\uff09\uff0c\u54c8\u5e0c\u51b2\u7a81\u6982\u7387\u8f83\u5927\uff0c\u5355\u6a21\u54c8\u5e0c\u5bb9\u6613\u88ab\u5361\uff0c\u5c3d\u91cf\u4f7f\u7528\u53cc\u6a21\u54c8\u5e0c\u3002\u4f46\u5982\u679c\u6bd4\u8f83\u61d2\uff0c\u53ef\u4ee5\u8bd5\u4e00\u8bd5\u4e0d\u540c\u7684\u6a21\u6570\u548c\u57fa\u5e95\uff08~~\u53cd\u6b63\u81f3\u5c11\u6709\u4e00\u7ec4\u80fd\u8fc7~~\uff09\u3002\u4ee3\u7801\u91cc\u9009\u62e9\u4e86\u4e00\u4e2a\u7384\u5b66\u7ec4\u5408\uff0c\u8bf7\u8c28\u614e\u4f7f\u7528\u3002\n\n\u60f3\u6539\u6362\u81ea\u7136\u6ea2\u51fa\u6216\u8005\u53cc\u6a21\u54c8\u5e0c\u7684\uff0c\u53ef\u4ee5\u770b\u4e0b\u9762\u51e0\u9053\u7ec3\u4e60\u9898\u540e\u7ed9\u51fa\u7684\u53c2\u8003\u4ee3\u7801\u3002\n\n\n#### \u4ee3\u7801\uff1a\n\n```cpp\n//By \u3010Diana\u3011 from Luogu \n#include<bits/stdc++.h>\n#define int long long \nusing namespace std;\n\nconst int N=5e4+7;\nconst int P=1610612741,B=3333;//\u8bd5\u51fa\u6765\u7684\u795e\u5947\u7684\u4e00\u7ec4\u6570(\u4e3a\u6570\u4e0d\u591a\u7684\u53ef\u4ee5\u901a\u8fc7\u6b64\u9898\u7684\u7ec4\u5408\u4e4b\u4e00)\nchar sa[N],sb[N];\nint b[N],f1[N],f2[N],tot;\n\ninline int GetHash1(int l,int r){//\u6b63\u5e8f\u54c8\u5e0c\u7684\u5b50\u4e32\u54c8\u5e0c\u503c\u6b63\u7740\u6c42\n\tif(l>r) swap(l,r);\n\treturn (f1[r]-f1[l-1]*b[r-l+1]%P+P)%P;\n}\n\ninline int GetHash2(int l,int r){//\u5012\u5e8f\u54c8\u5e0c\u7684\u5b50\u4e32\u54c8\u5e0c\u503c\u5012\u7740\u6c42\n\tif(l>r) swap(l,r);\n\treturn (f2[l]-f2[r+1]*b[r-l+1]%P+P)%P;\n}\n\ninline bool UpDownSame(int l1,int r1,int l2,int r2){//\u67e5\u8be2\u4e24\u5b50\u4e32\u662f\u5426\u4e92\u4e3a\u5012\u5e8f\n\treturn GetHash1(l1,r1)==GetHash2(l2,r2);\n}\n\nmap<int,int> Solve(char *s){//s: \u8d77\u59cb\u4e0b\u6807\u4e3a 1\n\n//Part1: \u9884\u5904\u7406\u54c8\u5e0c\u503c\n\tint len=strlen(s+1);\n    map<pair<int,int>,tuple<int,int,int> > mp;//\u8bb0\u5f55\u6781\u957f\u56de\u6587\u5b50\u4e32\u7684 map, mp[pair<\u957f\u5ea6,\u54c8\u5e0c\u503c>] = tuple<\u8d77\u70b9,\u7ec8\u70b9,\u51fa\u73b0\u6b21\u6570> \n\tf1[0]=f2[len+1]=0,b[0]=1;//\u8bb0\u5f97\u521d\u59cb\u5316\n\tfor(int i=1;i<=len;++i){//\u6b63\u5e8f\u54c8\u5e0c\u503c\n\t\tf1[i]=(f1[i-1]*B+s[i])%P;\n\t\tb[i]=(b[i-1]*B)%P;\n\t}\n\tfor(int i=len;i>=1;--i) f2[i]=(f2[i+1]*B+s[i])%P;//\u5012\u5e8f\u54c8\u5e0c\u503c\n\n//Part2: \u63d2\u5165\u6240\u6709\u6781\u957f\u56de\u6587\u5b50\u4e32\u53ca\u5176\u51fa\u73b0\u6b21\u6570,\u5e76\u4fdd\u8bc1\u4e92\u4e0d\u76f8\u540c\n\tfor(int i=1;i<=len;++i){//\u5947\u6781\u957f\u56de\u6587\u5b50\u4e32\n\t\tint l=1,r=min(i-1,len-i);//\u56de\u6587\u4e2d\u5fc3 : s[i]\n\t\twhile(l<=r){//\u4e8c\u5206\u65f6\u6709\"\u5c0fl\u5927r\",\u5373\u67e5\u6700\u5c0f\u503c\u7ed3\u679c\u4e3a l,\u67e5\u6700\u5927\u503c\u7ed3\u679c\u4e3a r,\u6b64\u65f6\u4e3a\u67e5\u7b26\u5408\u6761\u4ef6\u7684\u6700\u5927\u503c\n\t\t\tint mid=l+((r-l)>>1);\n\t\t\tif(UpDownSame(i-mid,i-1,i+1,i+mid)) l=mid+1;\n\t\t\telse r=mid-1;\n\t\t}\n    \tif(r<0) continue;//\u5947\u6570\u60c5\u51b5\u7684\u56de\u6587\u534a\u5f84\u53ef\u4ee5\u4e3a 0 (\u6b64\u65f6\u662f\u56de\u6587\u4e32 s[i])\n\t    pair<int,int> key=make_pair(r<<1|1,GetHash1(i-r,i+r));//\u6b64\u79cd\u56de\u6587\u4e32\u7684\u6807\u8bc6\n\t    if(mp.find(key)==mp.end()) mp[key]=make_tuple(i-r,i+r,1);//\u6ca1\u6709\u51fa\u73b0\u8fc7\u5c31\u63d2\u5165\u8fd9\u4e2a\u6781\u957f\u56de\u6587\u5b50\u4e32\n\t\telse ++get<2>(mp[key]);//\u5426\u5219\u51fa\u73b0\u6b21\u6570 + 1 \n\t}\n\tfor(int i=2;i<=len;++i){//\u63d2\u5165\u6240\u6709\u5076\u6781\u957f\u56de\u6587\u5b50\u4e32(\u56de\u6587\u4e2d\u5fc3\u4e3a i-1~i \u4e4b\u95f4\u7684\u5939\u7f1d)\n\t\tint l=1,r=min(i-1,len-i+1);//\u56de\u6587\u4e2d\u5fc3 : s[i-1]~s[i] \u4e4b\u95f4\u7684\u5939\u7f1d\n\t\twhile(l<=r){//\u540c\u7406\n\t\t\tint mid=l+((r-l)>>1);\n\t\t\tif(UpDownSame(i-mid,i-1,i,i+mid-1)) l=mid+1;\n\t\t\telse r=mid-1;\n\t\t}\n\t\tif(r<=0) continue;//\u5076\u6570\u60c5\u51b5\u7684\u56de\u6587\u534a\u5f84\u4e0d\u80fd\u4e3a 0 (\u56de\u6587\u4e2d\u5fc3\u662f\u4e2a\u5939\u7f1d)\n\t\tpair<int,int> key=make_pair(r<<1,GetHash1(i-r,i+r-1));//\u4ee5\u4e0b\u540c\u7406\n\t\tif(mp.find(key)==mp.end()) mp[key]=make_tuple(i-r,i+r-1,1);\n\t\telse ++get<2>(mp[key]);\n\t}\n\t\n//Part3: \u53bb\u91cd\u5e76\u7edf\u8ba1\u6240\u6709\u672c\u8d28\u4e0d\u540c\u7684\u56de\u6587\u5b50\u4e32\u7684\u51fa\u73b0\u6b21\u6570\n\tmap<int,int> res;//res \u662f\u8bb0\u5f55\u6240\u6709\u672c\u8d28\u4e0d\u540c\u7684\u56de\u6587\u5b50\u4e32\u7684\u51fa\u73b0\u6b21\u6570\u7684 map [map<\u54c8\u5e0c\u503c,\u51fa\u73b0\u6b21\u6570>]\n\twhile(!mp.empty()){//\u6309\u957f\u5ea6\u4ece\u5927\u5230\u5c0f\u6328\u4e2a\u5148\u62bd\u51fa\u6765,\u4fdd\u8bc1\u6bcf\u6b21\u53d6\u51fa\u6765\u7684\u90fd\u662f\u65b0\u51fa\u73b0\u7684\u4e00\u4e2a\u76ee\u524d\u6700\u957f\u7684\u3001\u4e0e\u4e4b\u524d\u6240\u6709\u90fd\u672c\u8d28\u4e0d\u540c\u7684\u56de\u6587\u4e32(\u8fd9\u6837\u5c31\u4fdd\u8bc1\u4e86\u590d\u6742\u5ea6)\n\t\tauto p=*mp.rbegin();//\u62bd\u51fa\u6765\u6b64\u4e32\u7684 key , \u5e76\u8d4b\u503c\u7ed9 p (p\u662f\u4e00\u4e2a pair \u7c7b\u578b, p.first \u662f key (pair), p.second \u662f value (tuple))\n\t\tmp.erase(p.first);//\u5220\u9664\u6b64\u4e32\n\t\tint lth=p.first.first,hs=p.first.second,l=get<0>(p.second),r=get<1>(p.second),ct=get<2>(p.second);//\u957f\u5ea6,\u54c8\u5e0c\u503c,\u5de6\u7aef\u70b9,\u53f3\u7aef\u70b9,\u51fa\u73b0\u6b21\u6570\n\t\tres[hs]=ct;//\u7edf\u8ba1\u5f53\u524d\u56de\u6587\u4e32\u51fa\u73b0\u6b21\u6570,\u6ce8\u610f\u4e0d\u80fd += (\u6ca1\u6709\u521d\u503c)\n\t\t++l,--r;//\u5de6\u53f3\u5404\u7f29\u77ed 1 \u683c\n\t\tif(l>r) continue;//\u539f\u5b50\u4e32\u957f\u5ea6 <=2\n\t\tlth-=2,hs=GetHash1(l,r);//\u66f4\u65b0\u6570\u636e\n\t\tpair<int,int> key=make_pair(lth,hs);//\u65b0\u56de\u6587\u5b50\u4e32\u7684 key \n\t\tif(mp.find(key)==mp.end()) mp[key]=make_tuple(l,r,ct);//\u5982\u679c\u7f29\u77ed\u540e\u4ecd\u662f\u4e00\u4e2a\u65b0\u7684\u56de\u6587\u4e32, \u51fa\u73b0\u6b21\u6570\u4e0e\u539f\u5b50\u4e32\u76f8\u540c, \u4e22\u56de\u53bb\u7ee7\u7eed\u5904\u7406, \u4fdd\u8bc1\u4e86\u5b50\u4e32\u7684\u672c\u8d28\u4e0d\u540c\n\t\telse get<2>(mp[key])+=ct;//\u5426\u5219\u5c06\u51fa\u73b0\u6b21\u6570\u548c\u4e0e\u5176\u672c\u8d28\u76f8\u540c\u7684\u5f85\u5904\u7406\u7684\u5b50\u4e32(\u4e0b\u79f0\"\u5f7c\u4e32\")\u5408\u5e76\u5230\u4e00\u8d77, \u5728\u6311\u51fa\u5f7c\u4e32\u7684\u65f6\u5019\u4f1a\u7ee7\u7eed\u5904\u7406, \u5e76\u4f1a\u5c06\u5f7c\u4e32\u7684\u6240\u6709\u5b50\u56de\u6587\u4e32\u7684\u51fa\u73b0\u6b21\u6570\u4f9d\u6b21\u66f4\u65b0\n\t}\n\t\n\treturn res;\n}\n\nsigned main(){\n\tscanf(\"%s%s\",sa+1,sb+1);\n\tmap<int,int> rs1=Solve(sa),rs2=Solve(sb);\n\tfor(auto it:rs1)\n\t\tif(rs2.find(it.first)!=rs2.end())//S\u662fsa, sb\u7684\u516c\u5171\u56de\u6587\u5b50\u4e32\n        \ttot+=it.second*rs2[it.first];//\u7ec4\u5408\u4e00\u4e0b, \u6bcf\u6b21\u6709 rs1[S]*rs2[S] \u4e2a\u56db\u5143\u7ec4 (i,j,x,y) \n\tprintf(\"%lld\",tot);\n\treturn 0;\n}\n\n```\n\n ~~PAM\u662f\u4ec0\u4e48\uff1f\u80fd\u5403\u5417\uff1f~~\n\n**\u7ec3\u4e60\u9898**\uff1a\n\n1. [P5555 \u79e9\u5e8f\u9b54\u5492](https://www.luogu.com.cn/problem/P5555)\uff1a\n\u6539\u4e00\u4e0b\u7edf\u8ba1\u7684 res \u5373\u53ef\uff0c\u4e0d\u8fc7 P5555 \u7684\u6570\u636e\u91cf\u6781\u5927\uff0c\u6700\u597d\u4f7f\u7528\u81ea\u7136\u6ea2\u51fa\u3002\u53e6\u9644 P5555 \u81ea\u7136\u6ea2\u51fa\u7248\u53c2\u8003\u4ee3\u7801\uff1a[\u81ea\u7136\u6ea2\u51fa\u7248](https://www.luogu.com.cn/paste/itr91al7)\u3002\n\n2. [P3649 \u56de\u6587\u4e32](https://www.luogu.com.cn/problem/P3649)\uff1a\u5361\u4e86\u81ea\u7136\u6ea2\u51fa\u548c map \u7684\u5927\u5e38\u6570\uff0c\u8981\u7528\u53cc\u6a21\u54c8\u5e0c + O2\u624d\u80fd\u8fc7\u3002\u53e6\u9644 P3649 \u53cc\u6a21\u54c8\u5e0c\u7248\u53c2\u8003\u4ee3\u7801\uff1a[\u53cc\u6a21\u54c8\u5e0c\u7248](https://www.luogu.com.cn/paste/a7dfht9d)\u3002\n\n3. [P4287 \u53cc\u500d\u56de\u6587](https://www.luogu.com.cn/problem/P4287)\uff1a\u8fd9\u9898\u6ca1\u5361\u81ea\u7136\u6ea2\u51fa\uff0c\u4f46\u5361\u4e86 map \u7684\u5927\u5e38\u6570\uff0c\u8981\u5f00 O2 \u624d\u80fd\u8fc7\u3002\u53e6\u9644 P4287 \u666e\u901a\u7248\u53c2\u8003\u4ee3\u7801\uff1a[\u666e\u901a\u7248](https://www.luogu.com.cn/paste/0zuh39f3)\u3002\n\n\u8fd9\u79cd\u89e3\u6cd5\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u80fd\u4ee3\u66ff $PAM$ \uff0c\u4f46\u9002\u7528\u8303\u56f4\u6781\u7a84\uff0c\u4e5f\u4e0d\u5229\u4e8e $DP$ \u7b49\u9ad8\u7ea7\u64cd\u4f5c\uff0c\u4e0d\u8fc7\u8fc7\u4e00\u8fc7\u975e\u5f3a\u5236\u5728\u7ebf\u7684\u677f\u5b50\u9898\u8fd8\u662f\u53ef\u4ee5\u7684\u3002\n\n**\u7279\u522b\u9e23\u8c22\uff1a**\ncalabash_boy \uff08\u6211\u4e0d\u4f1a\u544a\u8bc9\u4f60\u8fd9\u4e9b\u90fd\u662f\u846b\u82a6\u7237\u8bb2\u7684/kk\uff09 \n\n$Update(2022/4/4):$ \u6dfb\u52a0\u4e86\u51e0\u9053\u539f\u653e\u4e8e\u8bc4\u8bba\u533a\u7684\u7ec3\u4e60\u9898\u3002",
        "postTime": 1648915940,
        "uid": 335552,
        "name": "\u3010Diana\u3011",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 | P5685"
    },
    {
        "content": "## \u524d\u8a00\n\n\u8fd9\u9898\u548c P5555 \u5f88\u50cf\u554a\u3002\u3002\u3002\n\n## \u601d\u8def\n\n\u679a\u4e3e\u6bcf\u4e2a\u5171\u540c\u7684\u56de\u6587\u5b50\u4e32\uff0c\u7136\u540e\u5c31\u662f\u4e00\u4e2a\u6392\u5217\u7ec4\u5408\u4e86\uff0c\u76f4\u63a5\u7ed9 $ans$ \u52a0\u4e0a\u5b83\u5728\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u51fa\u73b0\u7684\u6b21\u6570\u4e58\u5b83\u5728\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e32\u51fa\u73b0\u7684\u6b21\u6570\u5373\u53ef\u3002\n\n\u600e\u4e48\u679a\u4e3e\u5171\u540c\u7684\u56de\u6587\u5b50\u4e32\u5462\uff1f\n\n\u8fd9\u90e8\u5206\u548c P5555 \u4e00\u6a21\u4e00\u6837\u3002\u3002\u3002\n\n\u4ee5\u4e0b\u501f\u7528\u6211\u5728 P5555 \u9898\u89e3\u7684\u539f\u8bdd\uff1a\n\n\u5f88\u663e\u7136\u7684\u4e00\u79cd\u505a\u6cd5\u5c31\u662f\uff0c\u7ed9\u4e24\u4e2a\u5b50\u4e32\u5206\u522b\u5efa PAM\uff0c\u7136\u540e dfs \u4e00\u904d\u3002\n\n\u6b63\u786e\u6027\u8bc1\u660e\uff1aPAM \u4e2d\uff0c\u4e0b\u9762\u7684\u8282\u70b9\u4ee3\u8868\u7684\u4e32\u4e00\u5b9a\u5305\u542b\u4e0a\u9762\u7684\u8282\u70b9\u4ee3\u8868\u7684\u4e32\u3002\u6240\u4ee5\u5982\u679c\u4e00\u4e2a\u81ea\u52a8\u673a\u62e5\u6709\u67d0\u8282\u70b9\uff0c\u4f46\u53e6\u4e00\u4e2a\u6ca1\u6709\uff0c\u90a3\u4e48\u518d\u5f80\u4e0b\u627e\u663e\u7136\u4e5f\u4e0d\u4f1a\u51fa\u73b0\u65b0\u7684\u5171\u540c\u62e5\u6709\u7684\u56de\u6587\u4e32\u3002\n\n\u6ce8\u610f\u4e00\u4e2a\uff08\u4e0d\u77e5\u9053\u7b97\u4e0d\u7b97\u5751\uff09\u7684\u70b9\uff1adfs \u8fc7\u7a0b\u4e2d\uff0c\u867d\u7136\u4e24\u4e2a PAM \u7684\u8282\u70b9\u5728\u5916\u89c2\uff08\u6240\u4ee3\u8868\u7684\u5b57\u7b26\u4e32\uff09\u4e0a\u662f\u76f8\u7b49\u7684\uff0c\u4f46\u662f\u7531\u4e8e\u904d\u5386\u987a\u5e8f\u539f\u56e0\uff0c\u7f16\u53f7\u5e76\u4e0d\u4e00\u5b9a\u76f8\u7b49\u2026\u2026\n\n\u6240\u4ee5\u53ea\u7528\u4e00\u4e2a $x$ \u53bb\u540c\u65f6\u4ee3\u8868\u4e24\u4e2a PAM \u5f53\u524d\u8282\u70b9\u7684\u7f16\u53f7\u662f\u4e0d\u5bf9\u7684\uff0c\u9700\u8981\u7528\u4e24\u4e2a\u6307\u9488\u3002\n\n\u8fd8\u6709\uff0c\u6ce8\u610f\uff1a\u8282\u70b9 $0$ \u548c\u8282\u70b9 $1$ \u4ee3\u8868\u7684\u662f\u901a\u7528\u5076\u6570\u957f\u5ea6\u6839\u548c\u901a\u7528\u5947\u6570\u957f\u5ea6\u6839\uff0c\u4e0d\u4ee3\u8868\u4efb\u4f55\u5b9e\u9645\u610f\u4e49\uff0c\u6240\u4ee5\u662f\u4e0d\u80fd\u7b97\u7684\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N = 1e6 + 5;\nll n, m, ans;\nstruct PAM\n{\n    int len[N], num[N], fail[N], t[N][26], tot = 1;\n    string s;\n    inline int getFail(int x, int i)\n    {\n        while (i - len[x] - 1 < 0 || s[i] != s[i - len[x] - 1])\n            x = fail[x];\n        return x;\n    }\n    inline void build()\n    {\n        int cur = 0;\n        fail[0] = 1, len[1] = -1;\n        for (int i = 0; i < s.size(); i++)\n        {\n            s[i] -= 'A';\n            int pos = getFail(cur, i);\n            if (!t[pos][s[i]])\n            {\n                fail[++tot] = t[getFail(fail[pos], i)][s[i]];\n                t[pos][s[i]] = tot;\n                len[tot] = len[pos] + 2;\n            }\n            cur = t[pos][s[i]];\n            num[cur]++;\n        }\n        for (int i = tot; i >= 2; i--)\n            num[fail[i]] += num[i];\n    }\n} A, B;\ninline void dfs(int l, int r)\n{\n    if (l > 1 && r > 1)\n        ans += 1ll * A.num[l] * B.num[r];\n    for (int i = 0; i < 26; i++)\n        if (A.t[l][i] && B.t[r][i])\n            dfs(A.t[l][i], B.t[r][i]);\n}\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cin >> A.s >> B.s;\n    A.build(), B.build();\n    dfs(0, 0), dfs(1, 1);\n    cout << ans;\n    return 0;\n}\n```",
        "postTime": 1671356672,
        "uid": 576378,
        "name": "creation_hy",
        "ccfLevel": 5,
        "title": "P5685 \u9898\u89e3"
    },
    {
        "content": "\u9898\u76ee\u5927\u610f\uff1a\u7ed9\u4f60\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u6c42\u5b83\u4eec\u7684\u516c\u5171\u56de\u6587\u5b50\u4e32\u5bf9\u6570\u3002\n\n------------\n\u5927\u90e8\u5206\u4eba\u7684\u505a\u6cd5\u662f\u5bf9 $A$ \u5efa $PAM$ \uff0c\u7136\u540e\u628a $B$ \u653e\u5728\u4e0a\u9762\u5339\u914d\uff1b\u6216\u662f\u5efa\u4e24\u4e2a $PAM$ \uff0c\u7136\u540e\u4e00\u8d77 $dfs$ \u5339\u914d\u3002\n\n\u5176\u5b9e\u53ef\u4ee5\u76f4\u63a5\u4e0a \u5e7f\u4e49$PAM$ \uff08\u5e94\u8be5\u53ef\u4ee5\u8fd9\u4e48\u53eb\u5427\uff09\uff0c\u628a\u4e24\u4e2a\u5b57\u7b26\u4e32\u5efa\u5230\u4e00\u4e2a \u5e7f\u4e49$PAM$ \uff0c\u7136\u540e $dfs$ \u6240\u6709\u8282\u70b9\u7edf\u8ba1\u7b54\u6848\u3002\n\n\u80fd\u5efa \u5e7f\u4e49$PAM$ \u7684\u7406\u7531\uff1a\n\n$PAM$ \u4e2d\u662f\u4e13\u95e8\u5224\u4e86\u91cd\u8282\u70b9\uff0c\u51b5\u4e14 $PAM$ \u4e2d\u6ca1\u6709\u8282\u70b9\u4f1a\u540c\u65f6\u5305\u542b\u4e24\u4e2a\u72b6\u6001\uff0c\u6240\u4ee5\u53ef\u4ee5\u6bcf\u6b21\u90fd\u662f\u4ece\u5934\u52a0\u5b57\u7b26\u4e32\uff0c\u8fd9\u6837\u4e0d\u4f1a\u5f71\u54cd $PAM$ \u7684\u6027\u8d28\u3002\u6784\u9020 \u5e7f\u4e49$PAM$ \u7684\u65b9\u6cd5\u548c\u6784\u9020 \u5e7f\u4e49$SAM$ \u7684\u90a3\u4e2a\u5047\u6389\u7684\u505a\u6cd5\u4e00\u6837\u3002\uff08\u6ed1\u7a3d\uff09\n\n\u8bbe $f[x][0]$ \u662f $A$ \u4e32\u5728 $x$ \u8282\u70b9\u4e0a\u7684\u56de\u6587\u5b50\u4e32\u6570\uff0c$f[x][1]$ \u662f $B$ \u4e32\u5728 $x$ \u8282\u70b9\u4e0a\u7684\u56de\u6587\u5b50\u4e32\u6570\u3002\n\n\u90a3\u4e48\u7b54\u6848\u5373\u4e3a $\\large \\sum\\limits_{i=2}^{cnt}f[x][0]\\times f[x][1]$ \u3002\uff08 $cnt$ \u662f\u8282\u70b9\u6570\uff0c0\u548c1\u662f\u6839\uff09\n\n\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\n#define pc(x) putchar(x)\n#define ll long long\nusing namespace std;\ninline int read()\n{\n\tint x=0,f=1;char ch=getchar();\n\twhile(ch<'0'||ch>'9'){f=ch=='-'?-1:f;ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){x=(x<<1)+(x<<3)+(ch^48);ch=getchar();}\n\treturn x*f;\n}\nvoid write(ll x)\n{\n\tif(x<0){x=-x;putchar('-');}\n\tif(x>9)write(x/10);\n\tputchar(x%10+48);\n}\nint n,m,f[100005][2];ll ans;\nchar s[50005];\nstruct G_PAM\n{\n\tint ch[26],fa,len;\n}tr[100005];\nint lst,cnt=1;\nvoid init()\n{\n\ts[0]=-1;tr[1].len=-1;\n\ttr[0].fa=tr[1].fa=1;\n\tlst=0;\n}\nvoid insert(int k,int c,int id)\n{\n\tint p=lst;\n\twhile(s[k-tr[p].len-1]!=c+'A')p=tr[p].fa;\n\tif(!tr[p].ch[c])\n\t{\n\t\tint q=lst=++cnt,v=tr[p].fa;\n\t\twhile(s[k-tr[v].len-1]!=c+'A')v=tr[v].fa;\n\t\ttr[q].fa=tr[v].ch[c];\n\t\ttr[tr[p].ch[c]=q].len=tr[p].len+2;\n\t}else lst=tr[p].ch[c];\n\tf[lst][id]++;\n}\nvector<int>e[600005];\nvoid dfs(int x)\n{\n\tfor(int i=0;i<(int)e[x].size();++i)\n\t{\n\t\tint y=e[x][i];dfs(e[x][i]);\n\t\tf[x][0]+=f[y][0];f[x][1]+=f[y][1];\n\t}\n\tif(x==1||x==0)return;\n\tans+=1ll*f[x][0]*f[x][1];\n}\nint main()\n{\n\tscanf(\"%s\",s+1);n=strlen(s+1);init();\n\tfor(int i=1;i<=n;++i)insert(i,s[i]-'A',0);\n\tscanf(\"%s\",s+1);n=strlen(s+1);init();\n\tfor(int i=1;i<=n;++i)insert(i,s[i]-'A',1);\n\tfor(int i=2;i<=cnt;++i)e[tr[i].fa].push_back(i);\n\te[1].push_back(0);dfs(1);write(ans),pc('\\n');\n\treturn 0;\n}\n```\n\n",
        "postTime": 1640611735,
        "uid": 532261,
        "name": "ctldragon",
        "ccfLevel": 6,
        "title": "P5685 [JSOI2013]\u5feb\u4e50\u7684 JYY \u9898\u89e3"
    },
    {
        "content": "# \u9898\u76ee\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[\u70b9\u8fd9\u91cc](https://www.luogu.com.cn/problem/P5685)\u770b\u9898\u76ee\u3002  \n# \u5206\u6790\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u4e00\u8a00\u4ee5\u853d\u4e4b\u6982\u62ec\u9898\u610f\u2014\u2014\u6c42\u4e24\u4e2a\u4e32\u7684\u516c\u5171\u56de\u6587\u5b50\u4e32\u7684\u6570\u91cf\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8003\u8651\u50cf\u5728\u540e\u7f00\u81ea\u52a8\u673a\u4e0a\u9762\u8dd1\u3002\u6211\u4eec\u5148\u5bf9$A$\u4e32\u5efa\u7acb\u56de\u6587\u81ea\u52a8\u673a\u3002\u7136\u540e\u628a$B$\u4e32\u653e\u5230\u56de\u6587\u81ea\u52a8\u673a\u4e0a\u9762\u8dd1\uff0c\u7c7b\u4f3c\u4e8e\u6784\u5efa\u56de\u6587\u81ea\u52a8\u673a\uff0c\u53ea\u4e0d\u8fc7\u6211\u4eec\u4e0d\u65b0\u5efa\u8282\u70b9\u3002\u7136\u540e\u8dd1\u5230\u4e00\u4e2a\u8282\u70b9\u4e0a\u4e4b\u540e\uff0c\u6211\u4eec\u7edf\u8ba1\u7b54\u6848\u3002\u628a$B$\u8dd1\u5b8c\u4e4b\u540e\u5c31\u6709\u7b54\u6848\u4e86\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a\u8282\u70b9\uff0c\u6211\u4eec\u5e94\u8be5\u8bb0\u5f55\u5b83\u8868\u793a\u7684\u56de\u6587\u4e32\u4ee5\u5b83\u4e3a\u540e\u7f00\u7684\u56de\u6587\u4e32\u7684\u603b\u7684\u51fa\u73b0\u6b21\u6570\u3002\u5982\u679c\u8bb0\u5f55\u6240\u6709\u5b50\u4e32\u7684\u51fa\u73b0\u6b21\u6570\u548c\uff0c\u90a3\u4e48\u5c31\u6709\u53ef\u80fd\u51fa\u73b0\u91cd\u590d\u7edf\u8ba1\u7684\u60c5\u51b5\u3002\u800c\u7edf\u8ba1\u4ee5\u67d0\u4e2a\u8282\u70b9\u4e3a\u540e\u7f00\u7684\uff0c\u5219\u603b\u53ea\u4f1a\u8bb0\u5f55\u5f53\u524d\u52a0\u5165\u7684$B$\u5b57\u7b26\u7684\u76f8\u5173\u7684\u7b54\u6848\uff0c\u4e0d\u4f1a\u7edf\u8ba1\u5230\u4e4b\u524d\u7684\u3002\u800c\u8fd9\u4e2a\u4e1c\u897f\u5f88\u5bb9\u6613\u7528$dp$\u505a\u51fa\u6765\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u9996\u5148\u7528\u4e00\u4e2a$dp$\u6c42\u51fa\u6bcf\u4e2a\u8282\u70b9\u8868\u793a\u7684\u56de\u6587\u4e32\u7684\u51fa\u73b0\u6b21\u6570\uff1a  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$f(u)$\uff1a\u4ee5$u$\u4e3a\u8282\u70b9\u8868\u793a\u7684\u56de\u6587\u4e32\u7684\u51fa\u73b0\u6b21\u6570\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8f6c\u79fb\u7565\u3002  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7136\u540e\u518d\u7528\u4e00\u4e2a$dp$\u6c42\u51fa\u6211\u4eec\u60f3\u8981\u7684\u4e1c\u897f\uff1a  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$g(u)$\uff1a$u$\u8868\u793a\u7684\u8282\u70b9\u7684\u56de\u6587\u4e32\u7684\u540e\u7f00\u7684\u51fa\u73b0\u6b21\u6570\u7684\u548c\u3002   \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u8f6c\u79fb\uff1a  \n$$g(u)=f(u)+g(fa(u))$$  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;~~\u8ff7\u4e4b\u7b80\u6d01~~  \n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u5f97\u5230\u4e86$g$\u4e4b\u540e\u5c31\u53ef\u4ee5\u8dd1$B$\u4e32\u6c42\u51fa\u7b54\u6848\u5566\uff01  \n# \u4ee3\u7801\n```cpp\n#include <cstdio>\n#include <cstring>\n\ntypedef long long LL;\n\nconst int MAXN = 50005;\n\ntemplate<typename _T>\nvoid read( _T &x )\n{\n\tx = 0; char s = getchar();int f = 1;\n\twhile( s < '0' || '9' < s ) { f = 1; if( s == '-' ) f = -1; s = getchar(); }\n\twhile( '0' <= s && s <= '9' ) { x = ( x << 3 ) + ( x << 1 ) + s - '0', s = getchar(); }\n\tx *= f;\n}\n\ntemplate<typename _T>\nvoid write( _T x )\n{\n\tif( x < 0 ) { putchar( '-' ), x = -x; }\n\tif( 9 < x ) { write( x / 10 ); }\n\tputchar( x % 10 + '0' );\n}\n\nint f[MAXN];\nint ch[MAXN][26], fa[MAXN], len[MAXN];\nchar A[MAXN], B[MAXN];\nint N, M, lst, siz;\n\nvoid build( const char *S )\n{\n\tint l = strlen( S + 1 ), x, p, cur;\n\tfa[0] = ++ siz; len[1] = -1;\n\tfor( int i = 1 ; i <= l ; i ++ )\n\t{\n\t\tx = S[i] - 'A';\n\t\twhile( S[i] ^ S[i - len[lst] - 1] ) lst = fa[lst];\n\t\tif( ! ch[lst][x] )\n\t\t{\n\t\t\tcur = ++ siz, p = fa[lst]; len[cur] = len[lst] + 2;\n\t\t\twhile( S[i] ^ S[i - len[p] - 1] ) p = fa[p];\n\t\t\tfa[cur] = ch[p][x], ch[lst][x] = cur;\n\t\t}\n\t\tlst = ch[lst][x], f[lst] ++;\n\t}\n}\n\nint main()\n{\n\tscanf( \"%s%s\", A + 1, B + 1 ); \n\tN = strlen( A + 1 ), M = strlen( B + 1 ); \n\tbuild( A );\n\tfor( int i = siz ; i > 1 ; i -- ) \n\t\tif( fa[i] > 1 ) f[fa[i]] += f[i];\n\tfor( int i = 2 ; i <= siz ; i ++ ) f[i] += f[fa[i]];\n\tint p = 0, x;\n\tLL res = 0;\n\tfor( int i = 1 ; i <= M ; i ++ )\n\t{\n\t\tx = B[i] - 'A';\n\t\twhile( p ^ 1 && ( B[i] ^ B[i - len[p] - 1] || ! ch[p][x] ) ) p = fa[p];\n\t\tif( ch[p][x] ) p = ch[p][x];\n\t\telse p = 0;\n\t\tres += f[p];\n\t}\n\twrite( res ), putchar( '\\n' );\n\treturn 0;\n}\n```",
        "postTime": 1575338699,
        "uid": 123809,
        "name": "crashed",
        "ccfLevel": 0,
        "title": "[JSOI2013]\u5feb\u4e50\u7684 JYY"
    },
    {
        "content": "### P.S.\n\u524d\u7f6e\u77e5\u8bc6\uff1a\u56de\u6587\u81ea\u52a8\u673a\n### Description.\n\u6c42\u5728\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0\u76f8\u540c\u56de\u6587\u4e32\u7684\u6b21\u6570\u3002  \n### Solution.\n\u9996\u5148\uff0c\u56de\u6587\u81ea\u52a8\u673a\u4e0a\u6bcf\u4e2a\u8282\u70b9\u90fd\u4ee3\u8868\u4e00\u4e2a\u672c\u8d28\u4e0d\u540c\u56de\u6587\u4e32\u3002  \n\u90a3\u4e48\u6211\u4eec\u5bf9\u4e24\u4e2a\u4e32\u5206\u522b\u5efa\u56de\u6587\u81ea\u52a8\u673a\uff0c\u5e76\u4e00\u8d77\u5339\u914d\u3002  \n\u5339\u914d\u5230\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u662f\u540c\u4e00\u4e2a\u56de\u6587\u4e32\uff0c\u6211\u4eec\u7b97\u4e0a\u4ed6\u4eec\u51fa\u73b0\u6b21\u6570\u7684\u4e58\u79ef\u5c31\u597d\u4e86\u3002  \n\u6ce8\u610f\u56de\u6587\u81ea\u52a8\u673a\u662f\u6709\u4e24\u4e2a\u6839\u7684\uff0c\u9700\u8981dfs\u4e24\u904d\u3002  \n~~\u6ce8\u610f\u6b64\u9898\u5927\u5199\u5b57\u7b26~~\n### Coding.\n```cpp\n//\u613f\u4f60\u6709\u4e00\u5929\u80fd\u548c\u4f60\u91cd\u8981\u7684\u4eba\u91cd\u9022\u3002\n#include<bits/stdc++.h>\nusing namespace std;typedef long long ll;\ntemplate<typename T>inline void read(T &x)\n{\n\tx=0;char c=getchar(),f=0;\n\tfor(;c<'0'||c>'9';c=getchar()) if(c=='-') f=1;\n\tfor(;c>='0'&&c<='9';c=getchar()) x=(x<<1)+(x<<3)+(c^48);\n\tif(f) x=-x;\n}\nint n,m;ll sm=0;char c1[2600825],c2[2600825];\nstruct node\n{\n\tstruct pamn{int fa,len,siz,ch[26];}pm[2600825];int pmt,pls;\n\tinline void init() {pmt=pls=2,pm[1].len=-1,pm[2].fa=pm[1].fa=1;}\n\tinline void ins(int wh,int c,char *s)\n\t{\n\t\tint p=pls;for(;s[wh]^s[wh-pm[p].len-1];p=pm[p].fa);\n\t\tif(pm[p].ch[c]) return pls=pm[p].ch[c],pm[pls].siz++,void();\n\t\tint np=pls=++pmt,ph=pm[p].fa;pm[np].len=pm[p].len+2,pm[np].siz=1;\n\t\tfor(;s[wh]^s[wh-pm[ph].len-1];ph=pm[ph].fa);\n\t\tpm[np].fa=pm[ph].ch[c]?pm[ph].ch[c]:2,pm[p].ch[c]=np;\n\t}\n}p1,p2;\ninline void dfs1(int x,int y)\n{\n\tif(x>2&&y>2) sm+=1ll*p1.pm[x].siz*p2.pm[y].siz;\n\tfor(int i=0;i<26;i++) if(p1.pm[x].ch[i]&&p2.pm[y].ch[i]) dfs1(p1.pm[x].ch[i],p2.pm[y].ch[i]);\n}\nint main()\n{\n\tp1.init(),p2.init(),scanf(\"%s%s\",c1+1,c2+1),n=strlen(c1+1),m=strlen(c2+1);\n\tc1[0]=-1;for(int i=1;i<=n;i++) p1.ins(i,c1[i]-='A',c1);\n\tc2[0]=-1;for(int i=1;i<=m;i++) p2.ins(i,c2[i]-='A',c2);\n\tfor(int i=p1.pmt;i>1;i--) p1.pm[p1.pm[i].fa].siz+=p1.pm[i].siz;\n\tfor(int i=p2.pmt;i>1;i--) p2.pm[p2.pm[i].fa].siz+=p2.pm[i].siz;\n\treturn dfs1(1,1),dfs1(2,2),printf(\"%lld\\n\",sm),0;\n}\n```",
        "postTime": 1610249410,
        "uid": 44805,
        "name": "Leap_Frog",
        "ccfLevel": 7,
        "title": "P5685 [JSOI2013]\u5feb\u4e50\u7684 JYY\uff08\u9898\u89e3\uff09"
    },
    {
        "content": "\u6211\u7684\u505a\u6cd5\u4e0e\u524d\u9762\u4e24\u4e2a\u795e\u4ed9\u7684\u505a\u6cd5\u7565\u6709\u4e0d\u540c.\n\n\u4e00\u4e2a\u76f4\u622a\u4e86\u5f53/\u4e0d\u9700\u5206\u4e24\u4e32\u8ba8\u8bba\u7684\u65b9\u6cd5.\n\n\u76f4\u63a5\u628a\u4e24\u4e2a\u4e32\u5efa\u5728\u4e00\u4e2a\u56de\u6587\u81ea\u52a8\u673a\u4e0a.\n\u5b9a\u4e49$f[x]$\u8868\u793a$x$\u5bf9\u5e94\u7684\u56de\u6587\u4e32\u5728A\u4e2d\u51fa\u73b0\u7684\u6b21\u6570,$g[x]$\u8868\u793a$x$\u5bf9\u5e94\u7684\u56de\u6587\u4e32\u5728B\u4e2d\u51fa\u73b0\u7684\u6b21\u6570.\n\n\u90a3\u4e48\u663e\u7136\u7684$\\sum_{i=2}^{tot} f[i]g[i]$\u5373\u4e3a\u7b54\u6848(tot\u4e3aPAM\u8282\u70b9\u6570)\n\n```cpp\n#include<cstdio>\n#include<cstring>\nusing namespace std;\ntypedef long long ll;\nconst int N=1e5+10;\n\nint n,last,tot=1,tr[N][26],fail[N],len[N],f[N],g[N],b[N],c[N];\nll ans; char s[N];\nint New(int x) {len[++tot]=x; return tot;}\nint Find(int x,int n) {\n\twhile(s[n]^s[n-len[x]-1]) x=fail[x];\n\treturn x;\n}\nvoid bt(int *cnt) {\n\tlast=1;\n\tfail[0]=1;\n\tlen[0]=0;len[1]=-1;\n\tfor(int i=1,p,x,c;s[i];i++) {\n\t\tc=(s[i]-='A');\n\t\tp=Find(last,i);\n\t\tif(!tr[p][c]) {\n\t\t\tx=New(len[p]+2);\n\t\t\tn=max(len[x],n);\n\t\t\tfail[x]=tr[Find(fail[p],i)][c];\n\t\t\ttr[p][c]=x;\n\t\t}\n\t\tlast=tr[p][c]; cnt[last]++;\n\t}\n}\n\nint main() {\n\ts[0]=-1;\n\tscanf(\"%s\",s+1);bt(f);\n\tscanf(\"%s\",s+1);bt(g);\n\tfor(int i=2;i<=tot;i++) c[len[i]]++;\n\tfor(int i=1;i<=n;i++) c[i]+=c[i-1];\n\tfor(int i=tot;i>=2;i--) b[c[len[i]]--]=i;\n\tfor(int i=tot-1; i;i--)  {\n\t\tint j=b[i];\n\t\tf[fail[j]]+=f[j];\n\t\tg[fail[j]]+=g[j];\n\t\tans+=(ll)f[j]*g[j];\n\t}\n\tpr2(ans); return 0;\n}\n```\n",
        "postTime": 1585215538,
        "uid": 118826,
        "name": "2018LZY",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P5685 \u3010[JSOI2013]\u5feb\u4e50\u7684 JYY\u3011"
    }
]