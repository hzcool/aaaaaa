[
    {
        "content": "## \u524d\u8a00\n\n[\u9898\u76ee\u4f20\u9001\u95e8\uff01](https://www.luogu.com.cn/problem/P3707)\n\n[\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c\uff1f](https://www.cnblogs.com/liangbowen/p/16773674.html)\n\n\u601d\u8def\u548c\u7801\u91cf\u90fd\u6709\u96be\u5ea6\uff0c\u601d\u8def\u96be\u70b9\u662f\u63a8\u5f0f\u5b50\uff0c\u4ee3\u7801\u96be\u5ea6\u662f\u7ebf\u6bb5\u6811\u64cd\u4f5c\u5f88\u5947\u602a\uff0c\u5bfc\u81f4\u5f88\u96be\u6253\u3002\n\n## \u601d\u8def\n\n### \u8f6c\u5316\u5f0f\u5b50\n\n\u9996\u5148\u5c06 $a$ \u7206\u62c6\uff0c\u76ee\u6807\u5c31\u662f\u628a\u5e73\u5747\u503c\u641e\u6389\u3002\uff08\u6709\u70b9\u6050\u6016\uff0c\u5efa\u8bae\u4ed4\u7ec6\u770b\uff1b\u770b\u4e0d\u61c2\u6ca1\u5173\u7cfb\uff0c\u8bb0\u4f4f\u6700\u540e\u5316\u7b80\u7684\u5f0f\u5b50\u5c31\u884c\uff09\n\n$\\begin{aligned} a  & = \\dfrac{\\sum_{i = L}^R (x_i - \\overline{x})\\cdot(y_i - \\overline{y})}{\\sum_{i = L}^R (x_i - \\overline{x})^2} \\\\ & = \\dfrac{\\sum_{i = L}^R (x_i\\cdot y_i - x_i\\cdot \\overline{y} - y_i\\cdot \\overline{x} + \\overline{x} \\cdot \\overline{y})}{\\sum_{i = L}^R x_i^2 - 2x_i\\overline{x} + \\overline{x} ^ 2}\\\\ & = \\dfrac{(\\sum x_iy_i) - (\\overline{y} \\cdot \\sum x_i) - (\\overline{x} \\cdot \\sum y_i) + \\Big((R - L + 1) \\cdot \\overline{x} \\cdot \\overline{y}\\Big)}{(\\sum x_i^2) - (2\\overline{x}\\sum x_i) + \\Big((R - L + 1)\\overline{x}^2\\Big)} \\\\ & = \\dfrac{\\sum x_iy_i - \\frac{\\sum x_i \\sum y_i}{R - L + 1} - \\frac{\\sum x_i \\sum y_i}{R - L + 1} + \\frac{\\sum x_i \\sum y_i}{R - L + 1}}{\\sum x_i^2 - 2 \\cdot \\frac{(\\sum x_i) ^ 2}{R - L + 1} + \\frac{(\\sum x_i) ^ 2}{R - L + 1}} \\\\ & = \\dfrac{\\sum x_iy_i - \\frac{\\sum x_i \\sum y_i}{R - L + 1}}{\\sum x_i^2 - \\frac{(\\sum x_i) ^ 2}{R - L + 1}}\\end{aligned}$\n\n\u81f3\u6b64\uff0c\u6211\u4eec\u641e\u6389\u4e86\u5e73\u5747\u6570\u3002\u89c2\u5bdf\u6700\u7ec8\u5f0f\u5b50\uff0c\u53ea\u9700\u7ef4\u62a4 $\\sum x_i$\u3001$\\sum y_i$\u3001$\\sum x_iy_i$\u3001$\\sum x_i^2$ \u7684\u503c\u3002\n\n\u5bb9\u6613\u53d1\u73b0\u9898\u76ee\u662f\u533a\u95f4\u6c42\u3001\u533a\u95f4\u6539\u3002\u6240\u4ee5\u6211\u4eec\u7528\u7ebf\u6bb5\u6811\u5904\u7406\u3002\n\n\u5229\u7528\u7ebf\u6bb5\u6811\u77e5\u9053\u8fd9\u56db\u4e2a\u503c\u540e\uff0c\u76f4\u63a5\u4ee3\u5165\u5f0f\u5b50\uff0c\u5c31\u80fd\u8ba1\u7b97\u51fa\u7b54\u6848\u4e86\u3002\n\n### \u7ebf\u6bb5\u6811\u5b9e\u73b0\n\n\u68b3\u7406\u4e00\u4e0b\u66f4\u65b0\u64cd\u4f5c\uff1a\n\n1. \u533a\u95f4 $x_i$ \u4e0e $y_i$ \u52a0\u4e0a\u4e00\u4e2a\u6570\u3002\n2. \u533a\u95f4\u4fee\u6539 $x_i = y_i = i$\uff0c\u7136\u540e\u518d\u6765\u4e00\u6b21\u64cd\u4f5c\u4e00\u3002\n\n\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u7ed3\u6784\u4f53\u5c01\u88c5\u7ebf\u6bb5\u6811\u7684\u5b58\u50a8\u3002\n\n\u5bf9\u4e8e\u4e24\u4e2a\u70b9\u5408\u5e76\uff0c\u53d1\u73b0\u53ef\u4ee5\u76f4\u63a5\u52a0\u8d77\u6765\u3002~~\u4e3a\u4e86\u770b\u8d77\u6765\u66f4\u9177~~\uff0c\u6211\u91cd\u8f7d\u4e86\u4e00\u4e0b\u52a0\u53f7\u3002\n\n```cpp\n//db \u662f double \u7684\u610f\u601d\uff0c\u4e3a\u4ec0\u4e48\u7528 double \u540e\u9762\u4f1a\u89e3\u91ca\nstruct Node\n{\n\tdb x, y, xx, xy, s, t;\n\tbool cov;\n    Node() {x = y = xx = xy = s = t = cov = 0;} //\u521d\u59cb\u5316\u5f88\u91cd\u8981\n} tr[N << 2];\nNode operator +(Node a, Node b)\n{\n\tNode ans;\n\tans.x = a.x + b.x;\n\tans.y = a.y + b.y;\n\tans.xx = a.xx + b.xx;\n\tans.xy = a.xy + b.xy;\n\treturn ans;\n}\n```\n\n\u90a3\u4e48 `pushup` \u5c31\u5f88\u7b80\u5355\u4e86\u3002\n\n```cpp\nvoid pushup(int pos) {tr[pos] = tr[ls(pos)] + tr[rs(pos)];}\n```\n\n\u8003\u8651\u7ebf\u6bb5\u6811\u91cd\u8981\u64cd\u4f5c `pushdown`\uff1a\u8c8c\u4f3c\u96be\u5f88\u591a\u3002\u63a8\u4e00\u63a8\u5f0f\u5b50\u3002\n\n1. $\\sum (x_i + s) = \\sum x_i + s \\cdot (R - L + 1)$\n\n2. $\\sum (y_i + t) = \\sum y_i + t \\cdot (R - L + 1)$\n\n3. $\\sum (x_i + s)(y_i + t) = \\sum x_iy_i + s \\sum y_i + t \\sum x_i + s \\cdot t \\cdot (R - L + 1)$\n\n4. $\\sum (x_i + s)^2 = \\sum (x_i^2 + 2 \\cdot s \\cdot x_i + s^2) = \\sum x_i^2 + 2 \\cdot s \\cdot \\sum x_i + s^2 \\cdot (R - L + 1)$\n\n\u7efc\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u51fa `lazy` \u51fd\u6570\u3002\n\n```cpp\nvoid lazy(int l, int r, int pos, db S, db T)\n{\n    tr[pos].s += S, tr[pos].t += T;\n    tr[pos].xy += T * tr[pos].x + S * tr[pos].y + S * T * (r - l + 1); //\u5bf9\u6bd4\u539fxy\u66b4\u529b\u5c55\u5f00\u5373\u53ef \n    tr[pos].xx += 2 * S * tr[pos].x + S * S * (r - l + 1); //\u5bf9\u6bd4\u539fxx\u66b4\u529b\u5c55\u5f00\u5373\u53ef \n    tr[pos].x += S * (r - l + 1), tr[pos].y += T * (r - l + 1); \n}\n```\n\n\u4e0d\u5e78\u7684\u662f\uff0c\u6211\u4eec\u8fd8\u8981\u518d\u5904\u7406\u4e00\u4e2a\u4e1c\u897f\uff1a\u533a\u95f4\u8986\u76d6 $x_i = y_i = i$\u3002\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u4e00\u4e2a\u64cd\u4f5c\uff1a\u533a\u95f4\u91cd\u5efa $x_i = y_i = i$\u3002\n\n\u524d\u7f6e\u77e5\u8bc6\uff1a$1^2 + 2^2 + 3^2 + \\cdots + n^2 = \\dfrac{n \\cdot (n + 1) \\cdot (2n + 1)}{6}$\u3002\u4e0d\u4f1a\u53ef\u4ee5\u53bb\u767e\u5ea6\u67e5\u3002\n\n```cpp\ndb sqsum(db x) {return x * (x + 1) * (2 * x + 1) / 6;} //1*1 + 2*2 + ... + x*x\ndb sqsum(int l, int r) {return sqsum(r) - sqsum(l - 1);} //l*l + ... + r*r\nvoid rebuild(db l, db r, int pos) //\u91cd\u5efa xi = yi = i\n{\n    tr[pos].s = tr[pos].t = 0, tr[pos].cov = true;\n    tr[pos].x = tr[pos].y = (l + r) * (r - l + 1) / 2; //\u7b49\u5dee\u6570\u5217\u6c42\u548c\n    tr[pos].xx = tr[pos].xy = sqsum(l, r);\n}\n```\n\n\u90a3\u4e48\uff0c\u6211\u4eec\u7ec8\u4e8e\u53ef\u4ee5\u5199 `pushdown` \u4e86\u3002\n\n```cpp\nvoid pushdown(int l, int r, int pos)\n{\n    int mid = (l + r) >> 1;\n    if (tr[pos].cov) //\u5982\u679c\u9700\u8981\u8986\u76d6\uff0c\u90a3\u5c31\u4e0b\u4f20\u8986\u76d6\n    {\n        rebuild(l, mid, ls(pos));\n        rebuild(mid + 1, r, rs(pos));\n        tr[pos].cov = false;\n    }\n    lazy(l, mid, ls(pos), tr[pos].s, tr[pos].t);\n    lazy(mid + 1, r, rs(pos), tr[pos].s, tr[pos].t);\n    tr[pos].s = tr[pos].t = 0;\n}\n```\n\n\u5176\u5b9e\u5230\u8fd9\u91cc\u5c31\u9a6c\u4e0a\u641e\u5b9a\u4e86\uff0c\u628a\u5176\u4ed6\u51e0\u4e2a\u57fa\u672c\u64cd\u4f5c\u7801\u6389\u5c31\u5b8c\u4e8b\u4e86\u3002\n\n## \u5b8c\u6574\u4ee3\u7801\n\n\u4e0d\u5e78\u7684\u662f\uff0c\u4f60\u4f1a\u53d1\u73b0\u6570\u636e\u8f83\u5927\uff0c`long long` \u90fd\u6709\u673a\u4f1a\u70b8\u3002\n\n\u4f60\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 `double`\u3002\n\n\u4ee3\u7801\u4e2a\u4eba\u8ba4\u4e3a\u633a\u597d\u770b\u7684\u3002\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#define space putchar(' ')\n#define endl putchar('\\n')\nusing namespace std;\ntypedef long long LL;\ntypedef unsigned long long ull;\ntypedef double db;\ntypedef long double LD;\nnamespace io { //fast read && write \u53ef\u4ee5\u76f4\u63a5\u4e0d\u7ba1\n    bool FREAD = false; //do you need to use fread?\n    void fastio()\n    {\n        ios::sync_with_stdio(false);\n        cin.tie(0), cout.tie(0);\n    }\n    char buf[1 << 21], *p1 = buf, *p2 = buf;\n    inline char getc()\n    {\n        if (!FREAD) return getchar();\n        if (p1 == p2) p2 = buf + fread(buf, 1, 1 << 21, stdin), p1 = buf;\n        return *(p1++);\n    }\n    inline int read()\n    {\n        char op = getc(); int x = 0, f = 1;\n        while (op < 48 || op > 57) {if (op == '-') f = -1; op = getc();}\n        while (48 <= op && op <= 57) x = (x << 1) + (x << 3) + (op ^ 0x30), op = getc();\n        return x * f;\n    }\n    inline void write(int x)\n    {\n        if (x < 0) putchar('-'), x = -x;\n        if (x > 9) write(x / 10);\n        putchar(x % 10 + 0x30);\n    }\n} using namespace io;\nconst int N = 1e5 + 5;\ndb kx[N], ky[N];\nstruct Node\n{\n\tdb x, y, xx, xy, s, t;\n\tbool cov;\n    Node() {x = y = xx = xy = s = t = cov = 0;}\n} tr[N << 2];\nNode operator +(Node a, Node b)\n{\n\tNode ans;\n\tans.x = a.x + b.x;\n\tans.y = a.y + b.y;\n\tans.xx = a.xx + b.xx;\n\tans.xy = a.xy + b.xy;\n\treturn ans;\n}\nstruct SegmentTree\n{\n    int ls(int x) {return x << 1;}\n    int rs(int x) {return x << 1 | 1;}\n    void pushup(int pos) {tr[pos] = tr[ls(pos)] + tr[rs(pos)];}\n    void build(int l, int r, int pos)\n    {\n        if (l == r)\n        {\n            tr[pos].x = kx[l], tr[pos].y = ky[l];\n            tr[pos].xx = kx[l] * kx[l];\n            tr[pos].xy = kx[l] * ky[l];\n            return;\n        }\n        int mid = (l + r) >> 1;\n        build(l, mid, ls(pos));\n        build(mid + 1, r, rs(pos));\n        pushup(pos);\n    }\n    db sqsum(db x) {return x * (x + 1) * (2 * x + 1) / 6;} //1*1 + 2*2 + ... + x*x\n    db sqsum(int l, int r) {return sqsum(r) - sqsum(l - 1);} //l*l + ... + r*r\n    void rebuild(db l, db r, int pos) //\u91cd\u5efa xi = yi = i\n    {\n        tr[pos].s = tr[pos].t = 0, tr[pos].cov = true;\n        tr[pos].x = tr[pos].y = (l + r) * (r - l + 1) / 2; //\u7b49\u5dee\u6570\u5217\u6c42\u548c\n        tr[pos].xx = tr[pos].xy = sqsum(l, r);\n    }\n    void lazy(int l, int r, int pos, db S, db T)\n    {\n        tr[pos].s += S, tr[pos].t += T;\n        tr[pos].xy += T * tr[pos].x + S * tr[pos].y + S * T * (r - l + 1); //\u5bf9\u6bd4\u539fxy\u66b4\u529b\u5c55\u5f00\u5373\u53ef \n        tr[pos].xx += 2 * S * tr[pos].x + S * S * (r - l + 1); //\u5bf9\u6bd4\u539fxx\u66b4\u529b\u5c55\u5f00\u5373\u53ef \n        tr[pos].x += S * (r - l + 1), tr[pos].y += T * (r - l + 1); \n    }\n    void pushdown(int l, int r, int pos)\n    {\n        int mid = (l + r) >> 1;\n        if (tr[pos].cov)\n        {\n            rebuild(l, mid, ls(pos));\n            rebuild(mid + 1, r, rs(pos));\n            tr[pos].cov = false;\n        }\n        lazy(l, mid, ls(pos), tr[pos].s, tr[pos].t);\n        lazy(mid + 1, r, rs(pos), tr[pos].s, tr[pos].t);\n        tr[pos].s = tr[pos].t = 0;\n    }\n    void update(int L, int R, int l, int r, int pos, db S, db T)\n    {\n        if (L <= l && r <= R) return lazy(l, r, pos, S, T);\n        pushdown(l, r, pos);\n        int mid = (l + r) >> 1;\n        if (L <= mid) update(L, R, l, mid, ls(pos), S, T);\n        if (mid < R) update(L, R, mid + 1, r, rs(pos), S, T);\n        pushup(pos);\n    }\n    void modify(int L, int R, int l, int r, int pos, db S, db T)\n    {\n        if (L <= l && r <= R)\n        {\n            rebuild(l, r, pos), lazy(l, r, pos, S, T);\n            return;\n        }\n        pushdown(l, r, pos);\n        int mid = (l + r) >> 1;\n        if (L <= mid) modify(L, R, l, mid, ls(pos), S, T);\n        if (mid < R) modify(L, R, mid + 1, r, rs(pos), S, T);\n        pushup(pos);\n    }\n    Node query(int L, int R, int l, int r, int pos)\n    {\n        if (L <= l && r <= R) return tr[pos];\n        pushdown(l, r, pos);\n        int mid = (l + r) >> 1;\n\t\tNode ans;\n\t\tif (L <= mid) ans = ans + query(L, R, l, mid, ls(pos));\n        if (mid < R) ans = ans + query(L, R, mid + 1, r, rs(pos));\n        return ans;\n    }\n} seg;\nint main()\n{\n    //freopen(\"C:\\\\Users\\\\User\\\\Desktop\\\\\u5bf9\u62cd\\\\data.txt\", \"r\", stdin);\n    //freopen(\"C:\\\\Users\\\\User\\\\Desktop\\\\cuojie.txt\", \"w\", stdout);\n    int n = read(), T = read();\n    for (int i = 1; i <= n; i++) kx[i] = read();\n    for (int i = 1; i <= n; i++) ky[i] = read();\n    seg.build(1, n, 1);\n    while (T--)\n    {\n        int op = read(), l = read(), r = read(), s = (op == 1 ? -1 : read()), t = (op == 1 ? -1 : read()); //\u538b\u884c \n        if (op == 1)\n        {\n            Node ans = seg.query(l, r, 1, n, 1); //\u6284\u516c\u5f0f\n            db x = ans.x, y = ans.y, xx = ans.xx, xy = ans.xy;\n            db fenzi = xy - x * y / (r - l + 1), fenmu = xx - x * x / (r - l + 1);\n            printf(\"%.10lf\\n\", fenzi / fenmu);\n        }\n        else if (op == 2) seg.update(l, r, 1, n, 1, s, t);\n        else if (op == 3) seg.modify(l, r, 1, n, 1, s, t);\n    }\n    return 0;\n}\n```\n\n\u7801\u5b57\u4e0d\u6613\uff08\u7279\u522b\u662f\u5f00\u5934\u7684\u4e00\u957f\u4e32 $\\LaTeX$\uff09\uff0c\u5e0c\u671b\u80fd\u5e2e\u52a9\u5230\u5927\u5bb6\uff01",
        "postTime": 1665375737,
        "uid": 367488,
        "name": "liangbowen",
        "ccfLevel": 0,
        "title": "P3707 \u9898\u89e3"
    },
    {
        "content": "[<\u6084\u6084\u4e3a\u81ea\u5df1\u6253\u4e00\u6ce2\u5e7f\u544aqwq - \u539f\u6587\u70b9\u8fd9\u513f\uff01>](http://www.cnblogs.com/Capella/p/8481720.html)\n\n## \u6982\u8ff0\n\n\u8fd9\u662f\u4e00\u9053\u533a\u95f4\u64cd\u4f5c\u7684\u9898\u76ee\uff0c\u89e3\u6cd5\u6709\u7ebf\u6bb5\u6811\u4e0e\u5206\u5757\u7b49\u3002\n\nCapella \u9009\u62e9\u7ebf\u6bb5\u6811\u8fdb\u884c\u8bb2\u89e3qwq\uff08\u56e0\u4e3a\u6ca1\u7528\u5206\u5757\u5199\u8fd9\u9898\uff09\u3002\n\n## \u51c6\u5907\u4e0e\u8ba1\u7b97\u7b54\u6848\n\n\u9996\u5148\u8981\u77e5\u9053\uff0c\u7ebf\u6bb5\u6811\u9700\u8981\u7ef4\u62a4\u7684\u6570\u503c\u6709\u54ea\u4e9b\u3002\n\n\u5148\u6765\u770b\u9898\u76ee\u4e2d\u6240\u7ed9\u7684\u516c\u5f0f\u3002\n\n$\\bar x = \\frac 1 {r-l+1} \\sum_{i=l}^r x_i$\n\n$\\bar y = \\frac 1 {r-l+1} \\sum_{i=l}^r y_i$\n\n$\\hat a = \\frac{\\sum_{i=l}^r (x_i - \\bar x)(y_i - \\bar y)}{\\sum_{i=l}^r (x_i - \\bar x)^2}$\n\n\u5c06\u7ebf\u6027\u56de\u5f52\u65b9\u7a0b\u7684\u516c\u5f0f\u5c55\u5f00\u5f97\uff08$\\sum_{i=l}^r$ \u7701\u7565\u4e3a $\\sum$\uff09\uff1a\n\n$\\hat a = \\frac{\\sum (x_i y_i - \\bar x y_i - \\bar y x_i + \\bar x \\bar y)}{\\sum (x_i^2 - 2\\bar x x_i + \\bar x^2)}$\n\n$= \\frac{\\sum x_i y_i - \\bar x \\sum y_i - \\bar y \\sum x_i + (r-l+1) \\bar x \\bar y}{\\sum x_i^2 - 2\\bar x \\sum x_i + (r-l+1) \\bar x^2}$\n\n\u5c06 $\\bar x$\u3001$\\bar y$ \u4ee3\u5165\u4e0a\u5f0f\u5f97\uff1a\n\n$\\hat a = \\frac{\\sum x_i y_i - \\frac{\\sum x_i \\sum y_i}{r-l+1} - \\frac{\\sum x_i \\sum y_i}{r-l+1} + (r-l+1) \\frac{\\sum x_i}{r-l+1} \\cdot \\frac{\\sum y_i}{r-l+1}}{\\sum x_i^2 - \\frac{2(\\sum x_i)^2}{r-l+1} + (r-l+1) (\\frac{\\sum x_i}{r-l+1})^2}$\n\n$= \\frac{\\sum x_i y_i - \\frac{\\sum x_i \\sum y_i}{r-l+1}}{\\sum x_i^2 - \\frac{(\\sum x_i)^2}{r-l+1}}$\n\n\u7531\u6b64\u53ef\u89c1\uff0c\u7ebf\u6bb5\u6811\u9700\u8981\u7ef4\u62a4\u7684\u6570\u503c\u6709 $\\sum x_i^2$\u3001$\\sum x_i y_i$\u3001$\\sum x_i$ \u4ee5\u53ca $\\sum y_i$\u3002\n\n\u8bbe $v_0 = \\sum x_i^2, v_1 = \\sum x_i y_i, v_2 = \\sum x_i, v_3 = \\sum y_i$\uff0c\n\n\u5219\u6700\u7ec8\u8ba1\u7b97\u51fa\u7684 $\\hat a = \\frac{v_1 - \\frac{v_2 v_3}{r-l+1}}{v_0 - \\frac{v_2^2}{r-l+1}}$\u3002\n\n## \u533a\u95f4\u52a0\u64cd\u4f5c\n\n\u8fdb\u884c\u533a\u95f4\u52a0\u64cd\u4f5c\u65f6\uff0c\u8bbe $x$ \u7684\u53d8\u5316\u91cf\u4e3a $S$\uff0c$y$ \u7684\u53d8\u5316\u91cf\u4e3a $T$\uff0c\u5219\u5404\u4e2a\u6807\u8bb0\u7684\u4e0b\u4f20\u8fc7\u7a0b\u5982\u4e0b\uff1a\n\n$\\sum (x_i + S)^2 = \\sum (x_i^2 + 2Sx_i + S^2)$  \n$= \\sum x_i^2 + 2S \\sum x_i + (r-l+1)S^2$\n\n$\\sum (x_i+S)(y_i+T) = \\sum (x_i y_i + Sy_i+Tx_i+ST)$  \n$=\\sum x_i y_i + S \\sum y_i + T \\sum x_i + (r-l+1)ST$\n\n$\\sum (x_i+S) = \\sum x_i + (r-l+1)S$\n\n$\\sum (y_i+T) = \\sum y_i +(r-l+1)T$\n\n\u7279\u522b\u6ce8\u610f\uff1a\u7531\u4e8e\u66f4\u65b0 $\\sum x_i^2 $ \u4e0e $\\sum x_i y_i$ \u65f6\uff0c\u9700\u8981\u7528\u5230\u66f4\u65b0\u524d\u7684 $\\sum x_i$ \u4e0e $\\sum y_i$ \u7684\u503c\uff0c\u6240\u4ee5\u5e94**\u6ce8\u610f\u987a\u5e8f**\u3002\n\n## \u533a\u95f4\u4fee\u6539\u64cd\u4f5c\n\n### \u524d\u7f6e\u6280\u80fd\n\n$1^2 + 2^2 + \\dots + n^2 = \\frac {n(n+1)(2n+1)} 6$\n\n### \u8f6c\u5316\n\n\u8bd5\u56fe\u5c06\u533a\u95f4\u4fee\u6539\u64cd\u4f5c\u8f6c\u5316\u4e3a\u533a\u95f4\u52a0\u64cd\u4f5c\u3002\n\n\u5bf9\u4e8e $i \\in [l,r]$\uff0c$x_i$ \u6539\u4e3a $S+i$\uff0c$y_i$ \u6539\u4e3a $T+i$\uff0c\n\n\u76f8\u5f53\u4e8e\u5c06 $i \\in [l,r]$ \u7684\u6bcf\u4e2a $x_i$ \u4e0e $y_i$ \u90fd\u6539\u4e3a $i$ \uff0c\n\n$\\sum x_i^2 = \\sum y_i^2 = \\sum i^2 = \\frac {r(r+1)(2r+1)} 6 - \\frac {l(l-1)(2l-1)} 6$\uff08\u5373 $\\sum_{i=1}^r i^2 -\\sum_{i=1}^{l-1} i^2$\uff09\n\n$\\sum x_i = \\sum y_i = \\sum i = \\frac {(r-l+1)(l+r)} 2$\uff08$r-l+1$ \u4e3a\u533a\u95f4\u5143\u7d20\u4e2a\u6570\uff0c$\\frac {l+r} 2$ \u4e3a\u533a\u95f4\u5e73\u5747\u503c\uff09\n\n\u7136\u540e**\u6e05\u7a7a`Lazy Tag`**\uff08\u65e0\u8bba\u533a\u95f4\u66fe\u7ecf\u52a0\u4e86\u591a\u5c11\u90fd\u6ca1\u6709\u7528\uff0c\u5c06\u88ab\u7edf\u4e00\u4fee\u6539\uff09\u3002\n\n### \u7ef4\u62a4\u64cd\u4f5c\n\n\u6e05\u7a7a`Lazy Tag`\u540e\uff0c\u5bf9\u533a\u95f4 $[l,r]$ \u8fdb\u884c\u533a\u95f4\u52a0\u64cd\u4f5c\uff0c\u5373\uff1a\u6bcf\u4e2a $x_i$ \u52a0\u4e0a $S$\uff0c\u6bcf\u4e2a $y_i$ \u52a0\u4e0a $T$\u3002\n\n\u66f4\u65b0\u8fc7\u7a0b\u4e0e\u533a\u95f4\u52a0\u64cd\u4f5c\u5b8c\u5168\u76f8\u540c\u3002\n\n\u6700\u540e\u8fd8\u8981\u6253\u4e0a\u6807\u8bb0`c`\uff0c\u8868\u793a\u6b64\u533a\u95f4\u7684\u5b50\u533a\u95f4\u9700\u8981\u533a\u95f4\u4fee\u6539\u64cd\u4f5c\u3002\n\n## \u6ce8\u610f\u4e8b\u9879\n\n- \u4e00\u5b9a\u8bb0\u5f97\u4e0b\u4f20`Lazy Tag`\u4e0e`c`\u6807\u8bb0\uff0c\u6211\u5c31\u662f\u56e0\u4e3a\u6ca1\u4f20\u624d\u8c03\u4e86\u4e00\u4e0a\u5348+\u4e00\u4e0b\u5348+\u534a\u4e2a\u665a\u4e0a\u7684\u3002\n\n- \u672c\u9898\u4e0b\u4f20\u6807\u8bb0\u90e8\u5206\u8f83\u4e3a\u590d\u6742\uff0c\u8bf7\u4e00\u5b9a**\u6ce8\u610f\u987a\u5e8f**\u3002\n\n## \u7ed3\u675f\u8bed\n\n\u8fd9\u9053\u9898\u6709\u70b9\u50cf\u300aHAOI2012 \u9ad8\u901f\u516c\u8def\u300b\u554a\u3002\n\n\u7ebf\u6bb5\u6811\u8fd9\u79cd\u4e1c\u897f\uff0c\u591a\u63a8\u4e00\u63a8\u4e5f\u5c31\u719f\u6089\u5566\u3002\n\n\u52a0\u6cb9\uff0c\u5404\u4f4d\u961f\u53cb\uff1b\u52a0\u6cb9\uff0c\u81ea\u5df1\u3002\n\n```cpp\n#include <cstdio>\n#include <cstring>\nconst int MAXN=100010;\ndouble x[MAXN],y[MAXN];\nint n,m;\nclass SegmentTree\n{\n    public:\n        void Build(int i,int l,int r)\n        {\n            s[i]=node(l,r);\n            if(l==r)\n            {\n                s[i].v[0]=x[l]*x[l],s[i].v[1]=x[l]*y[r],s[i].v[2]=x[l],s[i].v[3]=y[r];\n                return;\n            }\n            int j=i<<1,mid=l+r>>1;\n            Build(j,l,mid),Build(j|1,mid+1,r),PushUp(i);\n        }\n        void Add(int i,int l,int r,double S,double T)\n        {\n            if(l==s[i].l && r==s[i].r)\n            {\n                AddModify(i,S,T);\n                return;\n            }\n            if(s[i].l^s[i].r)\n                PushDown(i);\n            int j=i<<1,mid=s[i].l+s[i].r>>1;\n            if(r<=mid)\n                Add(j,l,r,S,T);\n            else if(l>mid)\n                Add(j|1,l,r,S,T);\n            else\n                Add(j,l,mid,S,T),Add(j|1,mid+1,r,S,T);\n            PushUp(i);\n        }\n        void Change(int i,int l,int r,double S,double T)\n        {\n            if(l==s[i].l && r==s[i].r)\n            {\n                ChangeModify(i),AddModify(i,S,T);\n                return;\n            }\n            if(s[i].l^s[i].r)\n                PushDown(i);\n            int j=i<<1,mid=s[i].l+s[i].r>>1;\n            if(r<=mid)\n                Change(j,l,r,S,T);\n            else if(l>mid)\n                Change(j|1,l,r,S,T);\n            else\n                Change(j,l,mid,S,T),Change(j|1,mid+1,r,S,T);\n            PushUp(i);\n        }\n        double Ans(double l,double r)\n        {\n            double size=r-l+1;\n            memset(ans,0,sizeof ans);\n            Sum(1,l,r);\n            return (ans[1]-ans[2]*ans[3]/size)/(ans[0]-ans[2]*ans[2]/size);\n        }\n    private:\n        double ans[4];\n        struct node\n        {\n            bool c;\n            double S,T,v[4];\n            int l,r;\n            node(int _l=0,int _r=0)\n            {\n                l=_l,r=_r,c=S=T=0;\n            }\n        }s[MAXN<<2];\n        double Calc(double i)\n        {\n            return i*(i+1)*(2*i+1)/6;\n        }\n        void AddModify(int i,double S,double T)\n        {\n            double size=double(s[i].r-s[i].l+1);\n            s[i].v[0]+=S*S*size+2*S*s[i].v[2];\n            s[i].v[1]+=S*T*size+S*s[i].v[3]+T*s[i].v[2];\n            s[i].v[2]+=S*size;\n            s[i].v[3]+=T*size;\n            s[i].S+=S,s[i].T+=T;\n        }\n        void ChangeModify(int i)\n        {\n            double l=double(s[i].l),r=double(s[i].r);\n            s[i].v[0]=s[i].v[1]=Calc(r)-Calc(l-1),s[i].v[2]=s[i].v[3]=(r-l+1)*(l+r)/2,s[i].c=1,s[i].S=s[i].T=0;\n        }\n        void PushUp(int i)\n        {\n            int l=i<<1,r=l|1;\n            for(int k=0;k<4;++k)\n                s[i].v[k]=s[l].v[k]+s[r].v[k];\n        }\n        void PushDown(int i)\n        {\n            int l=i<<1,r=l|1;\n            if(s[i].c)\n                ChangeModify(l),ChangeModify(r);\n            AddModify(l,s[i].S,s[i].T),AddModify(r,s[i].S,s[i].T);\n            s[i].c=s[i].S=s[i].T=0;\n        }\n        void Sum(int i,int l,int r)\n        {\n            if(l==s[i].l && r==s[i].r)\n            {\n                for(int k=0;k<4;++k)\n                    ans[k]+=s[i].v[k];\n                return;\n            }\n            if(s[i].l^s[i].r)\n                PushDown(i);\n            int j=i<<1,mid=s[i].l+s[i].r>>1;\n            if(r<=mid)\n                Sum(j,l,r);\n            else if(l>mid)\n                Sum(j|1,l,r);\n            else\n                Sum(j,l,mid),Sum(j|1,mid+1,r);\n        }\n}SgT;\nint main(int argc,char *argv[])\n{\n    scanf(\"%d %d\",&n,&m);\n    for(int i=1;i<=n;++i)\n        scanf(\"%lf\",&x[i]);\n    for(int i=1;i<=n;++i)\n        scanf(\"%lf\",&y[i]);\n    SgT.Build(1,1,n);\n    for(int i=1,opt,l,r;i<=m;++i)\n    {\n        double S,T;\n        scanf(\"%d %d %d\",&opt,&l,&r);\n        switch(opt)\n        {\n            case 1:\n                printf(\"%.10lf\\n\",SgT.Ans(l,r));\n                break;\n            case 2:\n                scanf(\"%lf %lf\",&S,&T);\n                SgT.Add(1,l,r,S,T);\n                break;\n            case 3:\n                scanf(\"%lf %lf\",&S,&T);\n                SgT.Change(1,l,r,S,T);\n                break;\n        }\n    }\n    return 0;\n}\n```\n\n\u8c22\u8c22\u9605\u8bfb\u3002",
        "postTime": 1519777678,
        "uid": 35851,
        "name": "Capella",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3707 \u3010\u76f8\u5173\u5206\u6790\u3011"
    },
    {
        "content": "\u770b\u5404\u4f4ddalao\u7684\u9898\u89e3\u539f\u6765\u6211\u4e5f\u662f\u6b63\u89e3\u5440\uff0c~~\u8d85\u5f00\u5fc3~~\u3002 \n\n\n------------\n## \u95ee\u9898\u8f6c\u5316\n\n\u62ff\u5230\u9898\u76ee\u7684\u7b2c\u4e00\u53cd\u5e94\u4e00\u5b9a\u662f**\u7ebf\u6bb5\u6811**\uff0c\u4e0d\u8fc7a\u90a3\u5806\u5947\u5947\u602a\u602a\u7684\u5f0f\u5b50\u770b\u4f3c\u5f88\u96be\u7ef4\u62a4\uff0c\u90a3\u4e48\uff0c\u6211\u4eec\u628a\u539f\u5f0f\u7684\u5206\u5b50\u5206\u6bcd\u5206\u522b\u5c55\u5f00\uff1a    \n\nDenominator(\u5206\u6bcd)=$\\sum_{i=l}^r{(x_i-\\overline{x})^2}$=$\\sum_{i=1}^r{(x_i^2-2x_i+\\overline{x}^2)}$  \n$x_i$, $\\overline{x}$\u90fd\u53ef\u4ee5\u901a\u8fc7$x_i$\u7684\u533a\u95f4\u548c\u7ef4\u62a4\u51fa\u6765\uff0c\u5373\u9700\u7ef4\u62a4:\n$\\sum_{i=l}^r{x_i}$\uff0c\u4ee4\u4e3aSecSumX\uff1b  \n$x^2$\u4e5f\u80fd\u76f4\u63a5\u7ef4\u62a4\uff0c\u5373\u9700\u7ef4\u62a4\uff1a\n$\\sum_{i=l}^r{x^2}$\uff0c\u4ee4\u4e3aXpower\uff1b\n\nNumerator(\u5206\u5b50)=$\\sum_{i=l}^r{(x_i-\\overline{x})(y_i-\\overline{y})}$=$\\sum_{i=l}^r{(x_iy_i-\\overline{x}y_i-\\overline{y}x_i+\\overline{x}\\overline{y})}$  \n\u9996\u5148\uff0c$\\sum_{i=l}^ry_i$\u80af\u5b9a\u662f\u8981\u7ef4\u62a4\u7684\uff0c\u4ee4\u4e3aSecSumY;\n\u6b64\u65f6\u628a\u6c42\u548c\u5c55\u5f00\uff0c\u5219\u6709\uff1a  \nNumerator=$\\sum_{i=l}^rx_iy_i-\\overline{x}\\sum_{i=l}^ry_i-\\overline{y}\\sum_{i=l}^rx_i+\\sum_{i=l}^r\\overline{x}\\overline{y}$  \n\u628a\u5df2\u7ef4\u62a4\u7684\u503c\u4ee3\u5165\uff0c\u5219\uff1a  \nNumerator=$\\sum_{i=l}^rx_iy_i-SecSumY\\overline{x}-SecSumX\\overline{y}+\\sum_{i=l}^r\\overline{x}\\overline{y}$  \n\u518d\u7ef4\u62a4$\\sum_{i=l}^rx_iy_i$(\u4ee4\u4e3aXYprod)\u5c31\u5927\u529f\u544a\u6210\u5566\uff01  \n\n\u4e8e\u662f\uff0c\u6211\u4eec\u52c7\u6562~~\u626f\u6de1~~\u5730\u628aa\u5c55\u5f00\u540e\uff0c\u5f97\u5230\u4e86\u8fd9\u4e2a\u5f0f\u5b50\uff1a  \n$a=\\frac{XYprod-SecSumX\\overline{y}-SecSumY\\overline{x}+(r-l+1)\\overline{x}\\overline{y}}{Xpower-2SecSumX+\\overline{x}^2}$   \nSecSumX\uff0cSecSumY\uff0cXpower\uff0cXYprod\u90fd\u6ee1\u8db3**\u53ef\u52a0\u6027**\uff0c\u53ef\u4ee5\u52a8\u624b\u7ef4\u62a4\u5566\u3002  \n\n## \u61d2\u6807\u8bb0  \n\u4e24\u79cd\u4fee\u6539\uff0c\u4e00\u5b9a\u5bf9\u5e94\u4e24\u4e2a\u61d2\u6807\u8bb0\uff0c\u5b9a\u4e49\u4e24\u4e2apair: Lazy1,Lazy2\uff0c\u5206\u522b\u5bf9\u5e94\u64cd\u4f5c\u4e8c\u548c\u64cd\u4f5c\u4e09\u3002\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff0c\u4e24\u4e2aLazy\u7684\u4e0b\u4f20\u4f1a\u4e0d\u4f1a\u56e0\u5148\u540e\u987a\u5e8f\u800c\u53d1\u751f\u6df7\u4e71\u5462\uff1f  \n\u7b54\u6848\u662f\u5426\u5b9a\u7684~~\u4e0d\u7136\u6211\u4e0d\u4f1a\u505a~~\uff0c\u56e0\u4e3a\u64cd\u4f5c\u4e09\u662f\u7b80\u5355\u7c97\u66b4\u7684\u8986\u76d6\uff0c\u800c\u64cd\u4f5c\u4e8c\u662f\u7d2f\u52a0\uff0c\u4e5f\u5c31\u662f\u8bf4\u5f53Lazy2\u6765\u4e34\u65f6\uff0cLazy1\u5df2\u7ecf\u65e0\u7528\u4e86\u3002\u90a3\u4e48\u5728\u4e0b\u4f20\u65f6**\u5206\u7c7b\u8ba8\u8bba**\uff1a \n\n1.Lazy1\uff0cLazy2\uff0c\u5747\u4e3a\u7a7a\uff0c\u76f4\u63a5\u9000\u51fa\uff1b  \n    \n2.Lazy1\u975e\u7a7a\uff0cLazy2\u4e3a\u7a7a\uff0c\u6267\u884c\u533a\u95f4\u4fee\u6539\u5e76\u4e0b\u4f20\uff1b  \n\n3.Lazy1\u4e3a\u7a7a\uff0cLazy2\u975e\u7a7a\uff0c\u6267\u884c\u533a\u95f4\u8986\u76d6\u5e76\u4e0b\u4f20\uff1b  \n\n4.Lazy1\uff0cLazy2\u5747\u975e\u7a7a\uff0c\u5148\u8986\u76d6\uff0c\u518d\u4fee\u6539\uff0c\u5e76\u4e0b\u4f20\uff1b  \n\n\u660e\u767d\u4e86\u5417\uff0c\u5f53Lazy1\u548cLazy2\u540c\u65f6\u5b58\u5728\u65f6\uff0c\u4e00\u5b9a\u662f\u8986\u76d6\u5728\u524d\uff0cLazy1\u624d\u6709\u610f\u4e49\u3002  \n\u63a5\u4e0b\u6765\u53c8\u662f~~\u6f2b\u957f\u7684~~\u8ba1\u7b97\u65f6\u95f4\uff1a  \n### \u4fee\u6539\u64cd\u4f5c \n$NewSecSumX=\\sum_{i=l}^r{(x_i+S)}=SecSumX+(r-l+1)S$  \n\n$NewSecSumY=\\sum_{i=l}^r{(y_i+T)}=SecSumY+(r-l+1)T$  \n\n$NewXpower=\\sum_{i=l}^r{(x_i+S)^2}=\\sum_{i=l}^r(x_i^2+2x_iS+S^2)$  \n&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;$=Xpower+2SecSumXS+(r-l+1)S$  \n\n$NewXYprod=\\sum_{i=l}^r(x_i+S)(y_i+T)=\\sum_{i=l}^r(x_iy_i+x_iT+y_iS+ST)$  \n&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;$=XYprod+SecSumXT+SecSumYS+(r-l+1)ST$  \n\u6ce8\u610f\u4fee\u6539\u65f6\u4ecd\u9700\u8981\u539f\u503c\uff0c\u4e0d\u8981\u76f4\u63a5\u8d4b\u503c\u3002  \n### \u8986\u76d6\u64cd\u4f5c   \n\u606d\u559c\u83b7\u5f97\u6280\u80fd\u300a\u524d\u7f00\u5e73\u65b9\u548c\u300b\uff1a$\\sum_{i=1}^ni^2=\\frac{n(n+1)(2n+1)}{6}$\uff0c\u4ee5PowerSum(n)\u4f7f\u7528\u3002  \n\u606d\u559c\u83b7\u5f97\u6280\u80fd\u300a\u7b49\u5dee\u6570\u5217\u6c42\u548c\u300b\uff1a$l+(l+1)+...+r=\\frac{(l+r)(r-l+1)}{2}$\u3002\n  \n$NewSecSumX=\\sum_{i=l}^r{S+i}=(r-l+1)S+\\frac{(l+r)(r-l+1)}{2}$  \n\n$NewSecSumY=\\sum_{i=l}^r{T+i}=(r-l+1)S+\\frac{(l+r)(r-l+1)}{2}$  \n\n$NewXpower=\\sum_{i=l}^r{(S+i)^2}=\\sum_{i=l}^r(S^2+2iS+i^2)$  \n$=(r-l+1)S^2+(l+r)(r-l+1)S+PowerSum(r)-PowerSum(l-1)$  \n\n$NewXYprod=\\sum_{i=l}^r(S+i)(T+i)=\\sum_{i=l}^r(ST+i(S+T)+i^2)$  \n$=(r-l+1)ST+\\frac{(l+r)(r-l+1)(S+T)}{2}+PowerSum(r)-PowerSum(l-1)$\n\n\u505a\u5b8c\u8fd9\u4e9b\u7b80\u5355\u7684\u8ba1\u7b97\uff0c\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5373\u53ef\uff0c\u6ce8\u610f\u672c\u9898\u7cbe\u5ea6\u8f83\u9ad8\uff0clonglong\u4f1a\u5728#6~10\u5361\u6389\uff0c\u5168\u5f00double\u4e3a\u656c\u3002\n\nThe Code\uff1a\n```cpp\n// by.luogu P3707\n\n#include <cstdio>\n#include <iostream>\n\nnamespace Optimize { // \u4f18\u5316\u6a21\u677f\n\t#define Eps 1e-8\n\t#define Inf 0x3f3f3f3f\n\t#define Int register int\n\t#define LL long long int\n\t#define Type template<typename _T>\n\t#define FileClose() fclose ( stdin ), fclose ( stdout )\n\t#define FileOpen( fname ) freopen ( fname\".in\", \"r\", stdin ), freopen ( fname\".out\", \"w\", stdout )\n\tType inline _T Max ( const _T a, const _T b ) { return a > b ? a : b; }\n\tType inline _T Min ( const _T a, const _T b ) { return a < b ? a : b; }\n\tType inline _T Abs ( const _T x ) { return x < 0 ? -x : x; }\n\tType inline _T rint () {\n\t\t_T x = 0; int f = 1; char s = getchar ();\n\t\twhile ( s < '0' || '9' < s ) f = s == '-' ? -1 : 1, s = getchar ();\n\t\twhile ( '0' <= s && s <= '9' ) x = ( x << 3 ) + ( x << 1 ) + ( s - '0' ), s = getchar ();\n\t\treturn x * f;\n\t}\n\tType inline void wint ( _T x ) {\n\t\tif ( x < 0 ) putchar ( '-' ), x = ( ~ x ) + 1;\n\t\tif ( 9 < x ) wint ( x / 10 );\n\t\tputchar ( x % 10 + '0' );\n\t}\n}\n\nusing namespace std;\nusing namespace Optimize;\n\nconst int MAXN = 100000;\nint n, m;\ndouble x[MAXN + 5] = {}, y[MAXN + 5] = {};\n\ninline double PowerSum ( const double n ) { // \u524d\u7f00\u5e73\u65b9\u548c\n\treturn 1.0 * n * ( n + 1 ) * ( 2 * n + 1 ) / 6;\n}\n\nstruct Segment_Tree {\n\tstruct Node { // \u9707\u60ca\uff0c\u6570\u636e\u5927\u5230l\uff0cr\u90fd\u8981\u5f00double\u624d\u80fd\u5361\u8fc7\u7cbe\u5ea6\n\t\tdouble l, r, Items; // Items\u9879\u6570 = r - l + 1\uff0c\u53cd\u590d\u51fa\u73b0\u5728\u8ba1\u7b97\uff0c\u76f4\u63a5\u50a8\u5b58\u66f4\u65b9\u4fbf\n\t\tdouble x, y, SecSumX, SecSumY, Xpower, XYprod; // \u7ed3\u70b9\u4fe1\u606f\u5168\u5f00double\n\t\tpair<double, double> Lazy1, Lazy2; // Lazy1 -> cmd2, Lazy2 -> cmd3\n\t} *Tree;\n\tinline void Unleaf_update ( const int i ) { // \u975e\u53f6\u7ed3\u70b9\u66f4\u65b0\uff0c\u5de6\u53f3\u5b50\u7ed3\u70b9\u5bf9\u5e94\u5143\u7d20\u4e4b\u548c\n\t\tTree[i].SecSumX = Tree[i << 1].SecSumX + Tree[i << 1 | 1].SecSumX;\n\t\tTree[i].SecSumY = Tree[i << 1].SecSumY + Tree[i << 1 | 1].SecSumY;\n\t\tTree[i].Xpower = Tree[i << 1].Xpower + Tree[i << 1 | 1].Xpower;\n\t\tTree[i].XYprod = Tree[i << 1].XYprod + Tree[i << 1 | 1].XYprod;\n\t}\n\tinline void Build ( const int i, const int l, const int r, const double* Leafx, const double* Leafy, const int SizeofTree = 0 ) { // \u5efa\u6811\u64cd\u4f5c\n\t\tif ( i == 1 ) Tree = new Node[SizeofTree] ();\n\t\tTree[i].l = l, Tree[i].r = r, Tree[i].Items = r - l + 1, Tree[i].Lazy1 = Tree[i].Lazy2 = make_pair ( 0LL, 0LL );\n\t\tif ( l == r ) { // \u53f6\u7ed3\u70b9\u8d4b\u503c\n\t\t\tTree[i].SecSumX = Leafx[l];\n\t\t\tTree[i].SecSumY = Leafy[l];\n\t\t\tTree[i].Xpower = Leafx[l] * Leafx[l];\n\t\t\tTree[i].XYprod = Leafx[l] * Leafy[l];\n\t\t\treturn ;\n\t\t}\n\t\tint Mid = ( l + r ) >> 1;\n\t\tthis -> Build ( i << 1, l, Mid, Leafx, Leafy );\n\t\tthis -> Build ( i << 1 | 1, Mid + 1, r, Leafx, Leafy );\n\t\tthis -> Unleaf_update ( i ); // \u8bb0\u5f97\u66f4\u65b0\u975e\u53f6\u7ed3\u70b9\n\t}\n\tinline void Calcul_Cover ( const int i, const double S, const double T ) { // \u8986\u76d6\u64cd\u4f5c\u7684\u8ba1\u7b97\n\t\tTree[i].SecSumX = S * Tree[i].Items + Tree[i].Items * ( Tree[i].r + Tree[i].l ) / 2;\n\t\tTree[i].SecSumY = T * Tree[i].Items + Tree[i].Items * ( Tree[i].r + Tree[i].l ) / 2;\n\t\tTree[i].Xpower = Tree[i].Items * S * S\n\t\t\t\t\t\t+ ( Tree[i].r + Tree[i].l ) * Tree[i].Items * S\n\t\t\t\t\t\t+ PowerSum( Tree[i].r ) - PowerSum( Tree[i].l - 1 );\n\t\tTree[i].XYprod = Tree[i].Items * S * T\n\t\t\t\t\t\t+ ( Tree[i].l + Tree[i].r ) * Tree[i].Items / 2 * ( S + T )\n\t\t\t\t\t\t+ PowerSum( Tree[i].r ) - PowerSum( Tree[i].l - 1 );\n\t}\n\tinline void Calcul_Update ( const int i, const double S, const double T ) { // \u66f4\u65b0\u64cd\u4f5c\u7684\u8ba1\u7b97\n\t\tdouble NewSecSumX, NewSecSumY, NewXpower, NewXYprod;\n\t\tNewSecSumX = Tree[i].SecSumX + Tree[i].Items * S;\n\t\tNewSecSumY = Tree[i].SecSumY + Tree[i].Items * T;\n\t\tNewXpower = Tree[i].Xpower\n\t\t\t\t\t+ 2 * Tree[i].SecSumX * S\n\t\t\t\t\t+ Tree[i].Items * S * S;\n\t\tNewXYprod = Tree[i].XYprod\n\t\t\t\t\t+ Tree[i].SecSumX * T\n\t\t\t\t\t+ Tree[i].SecSumY * S\n\t\t\t\t\t+ Tree[i].Items * S * T;\n\t\tTree[i].SecSumX = NewSecSumX;\n\t\tTree[i].SecSumY = NewSecSumY;\n\t\tTree[i].Xpower = NewXpower;\n\t\tTree[i].XYprod = NewXYprod;\n\t}\n\tinline void Spread ( const int i ) { // \u61d2\u6807\u8bb0\u4e0b\u4f20\n\t\tif ( ! ( Tree[i].Lazy1.first || Tree[i].Lazy1.second || Tree[i].Lazy2.first || Tree[i].Lazy2.first ) ) return ; // \u60c5\u5f621\uff0c\u76f4\u63a5\u9000\u51fa\n\t\tif ( Tree[i].Lazy2.first || Tree[i].Lazy2.second ) { // \u5148\u8986\u76d6\n\t\t\tTree[i << 1].Lazy1 = Tree[i << 1 | 1].Lazy1 = make_pair ( 0LL, 0LL ); // \u5b50\u7ed3\u70b9\u5df2\u88ab\u8986\u76d6\uff0cLazy1\u5931\u6548\uff0c\u6e05\u96f6\n\t\t\tTree[i << 1].Lazy2 = Tree[i << 1 | 1].Lazy2 = Tree[i].Lazy2; // \u540c\u662f\u8986\u76d6\uff0c\u4e0d\u7d2f\u52a0\uff0c\u76f4\u63a5\u8d4b\u503c\n\t\t\tthis -> Calcul_Cover ( i << 1, Tree[i].Lazy2.first, Tree[i].Lazy2.second ); // \u8ba1\u7b97\u5b50\u7ed3\u70b9\u4fe1\u606f\n\t\t\tthis -> Calcul_Cover ( i << 1 | 1, Tree[i].Lazy2.first, Tree[i].Lazy2.second );\n\t\t}\n\t\tif ( Tree[i].Lazy1.first || Tree[i].Lazy1.second ) { // \u518d\u66f4\u65b0\n\t\t\tTree[i << 1].Lazy1.first += Tree[i].Lazy1.first; // \u66f4\u65b0\u64cd\u4f5c\uff0cLazy1\u7d2f\u52a0\n\t\t\tTree[i << 1].Lazy1.second += Tree[i].Lazy1.second;\n\t\t\tTree[i << 1 | 1].Lazy1.first += Tree[i].Lazy1.first;\n\t\t\tTree[i << 1 | 1].Lazy1.second += Tree[i].Lazy1.second;\n\t\t\tthis -> Calcul_Update ( i << 1, Tree[i].Lazy1.first, Tree[i].Lazy1.second ); // \u8ba1\u7b97\u5b50\u7ed3\u70b9\u4fe1\u606f\n\t\t\tthis -> Calcul_Update ( i << 1 | 1, Tree[i].Lazy1.first, Tree[i].Lazy1.second );\n\t\t}\n\t\tTree[i].Lazy1 = Tree[i].Lazy2 = make_pair ( 0, 0 ); // \u6e05\u7a7a\u5f53\u524d\u8282\u70b9\u6807\u8bb0\n\t}\n\tinline double Query ( const int i, const int l, const int r, const int RetType ) { // \u67e5\u8be2\u64cd\u4f5c\uff0c\u901a\u8fc7RetType\u67e5\u8be2\u56db\u4e2a\u4fe1\u606f\n\t\tif ( r < Tree[i].l || l > Tree[i].r ) return 0; // \u4e0d\u76f8\u5173\u533a\u95f4\uff0c\u9000\u51fa\n\t\tif ( l <= Tree[i].l && Tree[i].r <= r ) { // \u5305\u542b\u533a\u95f4\n\t\t\tswitch ( RetType ) { // \u9009\u62e9\u8fd4\u56de\u4fe1\u606f\n\t\t\t\tcase 1: return Tree[i].SecSumX;\n\t\t\t\tcase 2: return Tree[i].SecSumY;\n\t\t\t\tcase 3: return Tree[i].Xpower;\n\t\t\t\tcase 4: return Tree[i].XYprod;\n\t\t\t}\n\t\t}\n\t\tthis -> Spread ( i ); // \u8bb0\u5f97\u4e0b\u653e\u61d2\u6807\u8bb0\n\t\tdouble lchret = this -> Query ( i << 1, l, r, RetType );\n\t\tdouble rchret = this -> Query ( i << 1 | 1, l, r, RetType );\n\t\treturn lchret + rchret; // \u9012\u5f52\u5e76\u8fd4\u56de\u5de6\u53f3\u5b50\u7ed3\u70b9\u67e5\u8be2\u503c\u4e4b\u548c\n\t}\n\tinline void Cover ( const int i, const int l, const int r, const double S, const double T ) { // Cmd3\uff0c\u8986\u76d6\n\t\tif ( r < Tree[i].l || l > Tree[i].r ) return ;\n\t\tif ( l <= Tree[i].l && Tree[i].r <= r ) { // \u5b8c\u5168\u8986\u76d6\n\t\t\tTree[i].Lazy1 = make_pair ( 0, 0 ); // Lazy1\u5931\u6548\n\t\t\tTree[i].Lazy2 = make_pair ( S, T ); // Lazy\u76f4\u63a5\u8d4b\u503c\n\t\t\tthis -> Calcul_Cover ( i, S, T ); // \u8ba1\u7b97\u7ed3\u70b9\u4fe1\u606f\n\t\t\treturn ;\n\t\t}\n\t\tthis -> Spread ( i ); // \u4e0b\u653e\u6807\u8bb0\n\t\tthis -> Cover ( i << 1, l, r, S, T );\n\t\tthis -> Cover ( i << 1 | 1, l, r, S, T );\n\t\tthis -> Unleaf_update ( i ); // \u5b50\u7ed3\u70b9\u5df2\u88ab\u4fee\u6539\uff0c\u91cd\u65b0\u7ef4\u62a4\u5f53\u524d\u7ed3\u70b9\u4fe1\u606f\n\t}\n\tinline void Update ( const int i, const int l, const int r, const double S, const double T ) { // Cmd 2\n\t\tif ( r < Tree[i].l || l > Tree[i].r ) return ;\n\t\tif ( l <= Tree[i].l && Tree[i].r <= r ) { // \u5b8c\u5168\u4fee\u6539\n\t\t\tTree[i].Lazy1.first += S; // Lazy1\u7d2f\u52a0\n\t\t\tTree[i].Lazy1.second += T;\n\t\t\tthis -> Calcul_Update ( i, S, T ); // \u8ba1\u7b97\u7ed3\u70b9\u4fe1\u606f\n\t\t\treturn ;\n\t\t}\n\t\tthis -> Spread ( i ); // \u4e0b\u653e\u6807\u8bb0\n\t\tthis -> Update ( i << 1, l, r, S, T );\n\t\tthis -> Update ( i << 1 | 1, l, r, S, T );\n\t\tthis -> Unleaf_update ( i ); // \u7ef4\u62a4\u5f53\u524d\u7ed3\u70b9\u4fe1\u606f\n\t}\n} SegTree;\n\ninline double Calculation ( const int l, const int r ) { // \u7b54\u6848\u8ba1\u7b97\n\tdouble Items = r - l + 1;\n\tdouble XYprod = SegTree.Query ( 1, l, r, 4 ); // \u5206\u522b\u67e5\u8be2\u56db\u4e2a\u5143\u7d20\u7684\u503c\n\tdouble SecSumX = SegTree.Query ( 1, l, r, 1 );\n\tdouble SecSumY = SegTree.Query ( 1, l, r, 2 );\n\tdouble Xpower = SegTree.Query ( 1, l, r, 3 );\n\tdouble AvrX = 1.0 * SecSumX / Items; // x\u7684\u5e73\u5747\u503c\n\tdouble AvrY = 1.0 * SecSumY / Items; // y\u7684\u5e73\u5747\u503c\n\tdouble Numerator = XYprod - SecSumX * AvrY - SecSumY * AvrX + Items * AvrX * AvrY; // \u5206\u5b50\n\tdouble Denominator = Xpower - 2 * SecSumX * AvrX + Items * AvrX * AvrX; // \u5206\u6bcd\n\treturn Numerator / Denominator;\n}\n\ninline void Work () {\n\t#define rint rint<int>() // \u58f0\u660e\u5feb\u8bfb\u7c7b\u578bint\n\tn = rint, m = rint;\n\tfor ( Int i = 1; i <= n; ++ i ) {\n\t\tscanf ( \"%lf\", &x[i] );\n\t}\n\tfor ( Int i = 1; i <= n; ++ i ) {\n\t\tscanf ( \"%lf\", &y[i] );\n\t} // \u8bfb\u5165\u57fa\u672c\u4fe1\u606f\n\tSegTree.Build ( 1, 1, n, x, y, n << 2 ); // \u5efa\u6811\n\twhile ( m -- ) {\n\t\tint Cmd = rint, l = rint, r = rint;\n\t\tdouble s, t;\n\t\tswitch ( Cmd ) {\n\t\t\tcase 1: { // \u6c42a\n\t\t\t\tdouble Ans = Calculation ( l, r );\n\t\t\t\tprintf ( \"%lf\\n\", Ans );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 2: { // \u66f4\u65b0\n\t\t\t\tscanf ( \"%lf %lf\", &s, &t );\n\t\t\t\tSegTree.Update ( 1, l, r, s, t );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 3: { // \u8986\u76d6\n\t\t\t\tscanf ( \"%lf %lf\", &s, &t );\n\t\t\t\tSegTree.Cover ( 1, l, r, s, t );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main () {\n\tWork ();\n\treturn 0;\n}\n```\n\n",
        "postTime": 1555731436,
        "uid": 123807,
        "name": "Rainybunny",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3707 \u3010[SDOI2017]\u76f8\u5173\u5206\u6790\u3011"
    },
    {
        "content": "### \u9898\u610f\n\n\u7ed9\u5b9a\u4e24\u4e2a\u957f\u5ea6\u4e3a $n$ \u7684\u5e8f\u5217 $x,y$\uff0c\u6709 $m$ \u6b21\u64cd\u4f5c\uff0c\u6bcf\u6b21\u64cd\u4f5c\u5f62\u5982\u4ee5\u4e0b\u4e09\u79cd\uff1a\n\n- `1 l r`\uff1a\u6c42\u51fa $(x_l,y_l),\\cdots,(x_r,y_r)$ \u7684\u56de\u5f52\u65b9\u7a0b\u7684\u659c\u7387\u3002\n\n- `2 l r S T`\uff1a\u5c06\u6ee1\u8db3 $l\\leq i\\leq r$ \u7684 $x_i$ \u52a0\u4e0a $S$\uff0c$y_i$ \u52a0\u4e0a $T$\u3002\n\n- `3 l r S T`\uff1a\u5c06\u6ee1\u8db3 $l\\leq i\\leq r$ \u7684 $x_i$ \u6539\u4e3a $S+i$\uff0c$y_i$ \u6539\u4e3a $T+i$\u3002\n\n\u5176\u4e2d\u5bf9\u4e8e\u6570\u636e $(x_1,y_1),\\cdots (x_n,y_n)$ \u7684\u56de\u5f52\u65b9\u7a0b\u7684\u659c\u7387\u4e3a\n\n$$\\hat{a}=\\frac{\\sum\\limits_{i=1}^{n}(x_i-\\overline{x})(y_i-\\overline{y})}{\\sum\\limits_{i=1}^{n}(x_i-\\overline{x})^2}$$\n\n$\\texttt{Data Range:}1\\leq n,m\\leq 10^5$\u3002\n\n### \u9898\u89e3\n\n[\u4e0d\u4e00\u5b9a\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.cnblogs.com/Karry5307/p/13682106.html)\n\n\u5199\u4e86\u4e24\u4e2a\u5c0f\u65f6\uff0c\u7ebf\u6bb5\u6811\u61d2\u6807\u8bb0\u90e8\u5206\u5199\u9519\u90fd\u4e0d\u77e5\u9053\u81ea\u5df1\u662f\u600e\u4e48\u6b7b\u7684\u3002\n\n~~mmp \u8fd9\u9898\u600e\u4e48\u8fd9\u4e48\u96be\u5199~~\n\n\u8003\u8651\u5148\u63a8\u4e00\u4e0b\u5f0f\u5b50\uff0c\u5f3a\u884c\u5c55\u5f00\u6709\n\n$$\\hat{a}=\\frac{\\sum\\limits_{i=1}^{n}x_iy_i-\\overline{x}\\sum\\limits_{i=1}^{n}y_i-\\overline{y}\\sum\\limits_{i=1}^{n}x_i+n\\overline{x}\\overline{y}}{\\sum\\limits_{i=1}^{n}x_i^2-2\\overline{x}\\sum\\limits_{i=1}^{n}x_i+n\\overline{x}^2}$$\n\n\u8003\u8651\u5c06 $\\overline{x}$ \u548c $\\overline{y}$ \u62c6\u4e00\u4e0b\u5e76\u4e14\u5408\u5e76\u4e00\u4e0b\u540c\u7c7b\u9879\u5f97\u5230\n\n$$\\hat{a}=\\frac{\\sum\\limits_{i=1}^{n}x_iy_i-\\frac{1}{n}\\sum\\limits_{i=1}^{n}x_i\\sum\\limits_{i=1}^{n}y_i}{\\sum\\limits_{i=1}^{n}x_i^2-\\frac{1}{n}\\sum\\limits_{i=1}^{n}x_i}$$\n\n\u5230\u8fd9\u91cc\u7ef4\u62a4\u7684\u4e1c\u897f\u5c31\u5f88\u6e05\u6670\u4e86\uff0c\u8003\u8651\u600e\u4e48\u6765\u7ef4\u62a4\u3002\u4e00\u6b21\u7684\u4e1c\u897f\u5f88\u5e73\u51e1\uff0c\u8003\u8651\u4e8c\u6b21\u7684\u3002\n\n$$\\sum\\limits_{i=1}^{n}(x_i+S)(y_i+T)=\\sum\\limits_{i=1}^{n}x_iy_i+S\\sum\\limits_{i=1}^{n}y_i+T\\sum\\limits_{i=1}^{n}x_i+nST$$\n\n\u7136\u540e\u5c31\u6ca1\u4e86\uff0c\u540c\u6837\u7684\u9053\u7406\u5f97\u5230\n\n$$\\sum\\limits_{i=1}^{n}(x_i+S)^2=\\sum\\limits_{i=1}^{n}x_i^2+2S\\sum\\limits_{i=1}^{n}x_i+nS^2$$\n\n\u8fd9\u6837\u5c31\u53ef\u4ee5\u76f4\u63a5\u505a $2$ \u64cd\u4f5c\u4e86\u3002\u5bf9\u4e8e $3$ \u64cd\u4f5c\u7684\u8bdd\u53ef\u4ee5\u5148\u8003\u8651\u5f3a\u884c\u8d4b\u503c\u7136\u540e\u518d\u533a\u95f4\u52a0\uff0c\u8d4b\u503c\u8fd9\u4e00\u90e8\u5206\u5c31\u662f\u57fa\u7840\u7684\u6c42\u548c\u516c\u5f0f\u8fd0\u7528\uff0c\u7136\u540e\u5c31\u6ca1\u4e86\u3002\n\n\u4e00\u4e2a\u6ce8\u610f\u7684\u70b9\u662f\u533a\u95f4\u8d4b\u503c\u9012\u5f52\u5230\u67d0\u4e2a\u533a\u95f4\u65f6\u8981\u628a\u8fd9\u4e2a\u533a\u95f4\u7684\u52a0\u6cd5\u61d2\u6807\u8bb0\u6e05\u96f6\uff08~~\u6211\u8fd9\u4e2a sb \u5c31\u662f\u56e0\u4e3a\u8fd9\u4e2a\u8c03\u4e86 1h \u7684~~\uff09\n\n### \u4ee3\u7801\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef int ll;\ntypedef long long int li;\ntypedef long double db;\nconst ll MAXN=2e5+51;\nstruct SegmentTree{\n\tll l,r,tag;\n\tdb sxx,sxy,sx,sy,tagx,tagy;\n};\nSegmentTree tree[MAXN<<2];\nll n,qcnt,op,l,r,len;\nSegmentTree p,g;\ndb s,t;\ndb x[MAXN],y[MAXN];\ninline ll read()\n{\n    register ll num=0,neg=1;\n    register char ch=getchar();\n    while(!isdigit(ch)&&ch!='-')\n    {\n        ch=getchar();\n    }\n    if(ch=='-')\n    {\n        neg=-1;\n        ch=getchar();\n    }\n    while(isdigit(ch))\n    {\n        num=(num<<3)+(num<<1)+(ch-'0');\n        ch=getchar();\n    }\n    return num*neg;\n}\ninline db sum2(ll x)\n{\n\treturn 1.0*x*(x+1)*(2*x+1)/6;\n}\n#define ls node<<1\n#define rs (node<<1)|1\ninline void update(ll node)\n{\n\ttree[node].sxx=tree[ls].sxx+tree[rs].sxx;\n\ttree[node].sxy=tree[ls].sxy+tree[rs].sxy;\n\ttree[node].sx=tree[ls].sx+tree[rs].sx;\n\ttree[node].sy=tree[ls].sy+tree[rs].sy;\n}\ninline void create(ll l,ll r,ll node)\n{\n\ttree[node]=(SegmentTree){l,r};\n\tif(l==r)\n\t{\n\t\ttree[node].sx=x[l],tree[node].sy=y[l];\n\t\treturn (void)(tree[node].sxx=x[l]*x[l],tree[node].sxy=x[l]*y[l]);\n\t}\n\tll mid=(tree[node].l+tree[node].r)>>1;\n\tcreate(l,mid,ls),create(mid+1,r,rs),update(node);\n}\ninline void spread(ll node)\n{\n\tll lenl=tree[ls].r-tree[ls].l+1,lenr=tree[rs].r-tree[rs].l+1;\n\tif(tree[node].tag)\n\t{\n\t\ttree[ls].sx=tree[ls].sy=lenl*tree[ls].l+lenl*(lenl-1)/2.0;\n\t\ttree[rs].sx=tree[rs].sy=lenr*tree[rs].l+lenr*(lenr-1)/2.0;\n\t\ttree[ls].sxx=tree[ls].sxy=sum2(tree[ls].r)-sum2(tree[ls].l-1);\n\t\ttree[rs].sxx=tree[rs].sxy=sum2(tree[rs].r)-sum2(tree[rs].l-1);\n\t\ttree[ls].tag=tree[rs].tag=1,tree[node].tag=0;\n\t\ttree[ls].tagx=tree[ls].tagy=tree[rs].tagx=tree[rs].tagy=0;\n\t}\n\tif(tree[node].tagx!=0||tree[node].tagy!=0)\n\t{\n\t\tdb u=tree[node].tagx,v=tree[node].tagy;\n\t\ttree[ls].sxx+=2*u*tree[ls].sx+lenl*u*u;\n\t\ttree[rs].sxx+=2*u*tree[rs].sx+lenr*u*u;\n\t\ttree[ls].sxy+=u*tree[ls].sy+v*tree[ls].sx+lenl*u*v;\n\t\ttree[rs].sxy+=u*tree[rs].sy+v*tree[rs].sx+lenr*u*v;\n\t\ttree[ls].sx+=lenl*u,tree[ls].sy+=lenl*v;\n\t\ttree[rs].sx+=lenr*u,tree[rs].sy+=lenr*v;\n\t\ttree[ls].tagx+=u,tree[rs].tagx+=u,tree[node].tagx=0;\n\t\ttree[ls].tagy+=v,tree[rs].tagy+=v,tree[node].tagy=0;\n\t}\n}\ninline void add(ll l,ll r,db s,db t,ll node)\n{\n\tif(l<=tree[node].l&&r>=tree[node].r)\n\t{\n\t\tll len=tree[node].r-tree[node].l+1;\n\t\ttree[node].sxx+=2*s*tree[node].sx+len*s*s;\n\t\ttree[node].sxy+=s*tree[node].sy+t*tree[node].sx+len*s*t;\n\t\ttree[node].sx+=len*s,tree[node].sy+=len*t;\n\t\treturn (void)(tree[node].tagx+=s,tree[node].tagy+=t);\n\t}\n\tll mid=(tree[node].l+tree[node].r)>>1;\n\tspread(node),l<=mid?add(l,r,s,t,ls):(void)1,r>mid?add(l,r,s,t,rs):(void)1;\n\tupdate(node);\n}\ninline void cover(ll l,ll r,ll node)\n{\n\tif(l<=tree[node].l&&r>=tree[node].r)\n\t{\n\t\tll len=tree[node].r-tree[node].l+1;\n\t\ttree[node].sxx=tree[node].sxy=sum2(tree[node].r)-sum2(tree[node].l-1);\n\t\ttree[node].sx=tree[node].sy=tree[node].l*len+len*(len-1)/2.0;\n\t\treturn (void)(tree[node].tag=1,tree[node].tagx=tree[node].tagy=0);\n\t}\n\tll mid=(tree[node].l+tree[node].r)>>1;\n\tspread(node),l<=mid?cover(l,r,ls):(void)1,r>mid?cover(l,r,rs):(void)1;\n\tupdate(node);\n}\ninline SegmentTree query(ll l,ll r,ll node)\n{\n\tSegmentTree u=g,v=g;\n\tif(l<=tree[node].l&&r>=tree[node].r)\n\t{\n\t\treturn tree[node];\t\n\t}\t\n\tll mid=(tree[node].l+tree[node].r)>>1;\n\tspread(node);\n\tl<=mid?(void)(u=query(l,r,ls)):(void)1;\n\tr>mid?(void)(v=query(l,r,rs)):(void)1;\n\treturn (SegmentTree){0,0,0,u.sxx+v.sxx,u.sxy+v.sxy,u.sx+v.sx,u.sy+v.sy};\n}\nint main()\n{\n\tn=read(),qcnt=read();\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%Lf\",&x[i]);\n\t}\n\tfor(register int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%Lf\",&y[i]);\n\t}\n\tcreate(1,n,1);\n\tfor(register int i=1;i<=qcnt;i++)\n\t{\n\t\top=read(),l=read(),r=read();\n\t\tif(op==1)\n\t\t{\n\t\t\tp=query(l,r,1),len=r-l+1;\n\t\t\tprintf(\"%.10Lf\\n\",(p.sxy-p.sx*p.sy/len)/(p.sxx-p.sx*p.sx/len));\n\t\t\tcontinue;\n\t\t}\n\t\tscanf(\"%Lf%Lf\",&s,&t),op==3?cover(l,r,1):(void)1,add(l,r,s,t,1);\n\t}\n}\n```",
        "postTime": 1600269307,
        "uid": 60990,
        "name": "Karry5307",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P3707 \u3010[SDOI2017]\u76f8\u5173\u5206\u6790\u3011"
    },
    {
        "content": "**p3707** \n\n------------\n\n\u8fd9\u9053\u9898\u7b2c\u4e00\u6b21\u5199\u4e86\u4e00\u9897\u7ebf\u6bb5\u6811\uff0c\uff08 ~~\u53ea\u6709\u6837\u4f8b\u8fc7\u4e86~~ \uff09 \u59cb\u7ec8\u6ca1\u6709\u8c03\u51fa\u6765\uff0c\u4e8e\u662f\u5199\u4e86\u4e00\u4e2a\u5206\u5757\u3002 \n\n\u9996\u5148\u8981\u5316\u7b80\u672c\u9898\u7684\u9634\u95f4\u5f0f\u5b50 \n\n\n$$a=\\frac{\\sum^R_{i=L}(x_i-\\bar{x})(y_i-\\bar{y})}{\\sum^R_{i=L}(x_i-\\bar{x})^2} $$\n\n\n\u4ee5\u4e0b\u4e3a\u5206\u5b50\uff1a \n\n$$=\\sum^R_{i=L} (x_iy_i-x_i\\bar{y}-y_i\\bar{x}+\\bar{x}\\bar{y})$$ \n\n$$=\\sum^R_{i=L} x_iy_i-\\bar{y}\\sum^R_{i=L}x_i-\\bar{x}\\sum^R_{i=L}y_i+\\sum^R_{i=L}\\bar{x}\\bar{y}$$ \n\n\u628a $\\bar x$ \u548c $\\bar y$ \u5c55\u5f00\uff1a \n\n$$=\\sum^R_{i=L} x_iy_i-\\frac{\\sum^R_{i=L} x_i\\sum^R_{i=L} y_i}{R-L+1}-\\frac{\\sum^R_{i=L} x_i\\sum^R_{i=L} y_i}{R-L+1}+\\frac{\\sum^R_{i=L} x_i\\sum^R_{i=L} y_i}{R-L+1}$$ \n\n$$=\\sum^R_{i=L} x_iy_i-\\frac{\\sum^R_{i=L} x_i\\sum^R_{i=L} y_i}{R-L+1}$$ \n\n\u5206\u6bcd\u540c\u7406\uff1a \n\n$$=\\sum^R_{i=L} x_i^2-\\frac{(\\sum^R_{i=L} x_i)^2}{R-L+1}$$ \n\n\u4e8e\u662f\uff0c\u539f\u6765\u7684\u5f0f\u5b50\u5c31\u88ab\u5316\u6210\u4e86\u4e0b\u9762\u7684\u5f62\u5f0f\uff1a \n\n$$a=\\frac{\\sum^R_{i=L} x_iy_i-\\frac{\\sum^R_{i=L} x_i\\sum^R_{i=L} y_i}{R-L+1}}{\\sum^R_{i=L} x_i^2-\\frac{(\\sum^R_{i=L} x_i)^2}{R-L+1}}$$ \n\n\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4 $\\sum x_i$ $\\sum y_i$ $\\sum x_iy_i$ $\\sum x_i^2$ \uff0c\u5bf9\u4e8e\u533a\u95f4\u52a0\u548c\u533a\u95f4\u8986\u76d6\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u7ef4\u62a4\u6807\u8bb0 add \u548c cover \u3002\n\n**\u64cd\u4f5c 2\uff1a** \n\n$\\sum (x_i+s)(y_i+t)=\\sum x_iy_i+s\\sum y_i+t\\sum x_i+st(R-L+1)$ \n\n$\\sum (x_i+s)^2=\\sum x_i^2+2s\\sum x_i+s^2(R-L+1)$ \n\n\u4e4b\u540e\u518d\u66f4\u65b0 $\\sum x_i$ $\\sum y_i$ \u5e76\u8bb0\u5f55 add \u3002 \n\n**\u64cd\u4f5c 3\uff1a** \n\n\u6bcf\u4e2a\u5757\u76f4\u63a5\u6e05\u7a7a add \u6807\u8bb0\uff0c\u5e76\u8bb0\u5f55 cover ,\u7136\u540e\u76f4\u63a5\u7528\u5e73\u65b9\u548c\u516c\u5f0f \uff08 $\\frac{n(n+1)(2n+1)}{6}$ \uff09 \u7ef4\u62a4\u4fe1\u606f\u3002 \n\n\u5bf9\u4e8e\u788e\u5757\uff0c\u76f4\u63a5\u66b4\u529b\u8ba1\u7b97\u66f4\u6539\u4ea7\u751f\u7684\u8d21\u732e\u3002 \n\n**\u6ce8\u610f** \n\n\u5b58\u5728\u8986\u76d6\u6807\u8bb0\u7684\u788e\u5757\u5728\u8fdb\u884c\u66f4\u6539\u65f6\u53ef\u80fd\u4ea7\u751f\u6df7\u6dc6\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5 **\u6e05\u7a7a\u6574\u4e2a\u5757\u7684\u6240\u6709\u6807\u8bb0** \u518d\u8fdb\u884c\u66f4\u6539 \uff08 \u5148\u8986\u76d6\u518d\u4fee\u6539 \uff09 \n\n\u53ef\u80fd\u53ef\u884c\u7684\u4f18\u5316\uff1a \n\n1. \u7565\u5fae\u8c03\u4f4e\u5757\u7684\u5927\u5c0f \n\n1. ~~O2yyds~~ \n\n[\u53ef\u80fd\u5b58\u5728\u7684\u66f4\u6539](https://www.luogu.com.cn/paste/lwdkdp2m) \n\ncode  \n\n\u7ec6\u8282\u53ef\u4ee5\u770b\u4ee3\u7801 \uff08 ~~\u7801\u98ce\u81ea\u6211\u611f\u89c9\u826f\u597d~~ \uff09  \n```cpp\n#include<bits/stdc++.h>\n#define double long double\n#define int long long\nusing namespace std;\nconst int maxn=100010;\ndouble x[maxn],y[maxn];\nint n,m,K;\nstruct block {\n\tint l,r;\n\tdouble x2,xy,x,y;\n\tdouble add[2];//\u533a\u95f4\u52a0\u6807\u8bb0\n\tdouble cvr[2];//\u533a\u95f4\u8986\u76d6\u6807\u8bb0\n\tbool c;\n} b[maxn];\nint id[maxn];\nvoid clear(int t) {//\u6e05\u7a7a\u6574\u4e2a\u5757\n\tif(b[t].c) {\n\t\tb[t].c=0;\n\t\tfor(int i=b[t].l; i<=b[t].r; i++) {\n\t\t\tx[i]=b[t].cvr[0]+i;\n\t\t\ty[i]=b[t].cvr[1]+i;\n\t\t}\n\t\tb[t].cvr[0]=b[t].cvr[1]=0;\n\t}\n\tif(b[t].add[0]||b[t].add[1]) {\n\t\tint S=b[t].add[0];\n\t\tint T=b[t].add[1];\n\t\tfor(int i=b[t].l; i<=b[t].r; i++) {\n\t\t\tx[i]+=S;\n\t\t\ty[i]+=T;\n\t\t}\n\t\tb[t].add[0]=b[t].add[1]=0;\n\t}\n}\nvoid add(int l,int r,double s,double t) {\n\tclear(id[l]);\n\tclear(id[r]);\n\tfor(int i=l; i<=b[id[l]].r&&i<=r; i++) {\n\t\tb[id[l]].x2+=2*s*x[i]+s*s;\n\t\tb[id[l]].xy+=s*y[i]+t*x[i]+s*t;\n\t\tb[id[l]].x+=s;\n\t\tb[id[l]].y+=t;\n\t\tx[i]+=s;\n\t\ty[i]+=t;\n\t}\n\tif(id[l]!=id[r])\n\t\tfor(int i=b[id[r]].l; i<=r; i++) {\n\t\t\tb[id[r]].x2+=2*s*x[i]+s*s;\n\t\t\tb[id[r]].xy+=s*y[i]+t*x[i]+s*t;\n\t\t\tb[id[r]].x+=s;\n\t\t\tb[id[r]].y+=t;\n\t\t\tx[i]+=s;\n\t\t\ty[i]+=t;\n\t\t}\n\tfor(int i=id[l]+1; i<id[r]; i++) {\n\t\tb[i].x2+=2*b[i].x*s+s*s*(b[i].r-b[i].l+1);\n\t\tb[i].xy+=b[i].x*t+b[i].y*s+s*t*(b[i].r-b[i].l+1);\n\t\tb[i].x+=s*(b[i].r-b[i].l+1);\n\t\tb[i].y+=t*(b[i].r-b[i].l+1);\n\t\tb[i].add[0]+=s;\n\t\tb[i].add[1]+=t;\n\t}\n\treturn;\n}\nvoid cover(int l,int r,double s,double t) {\n\tclear(id[l]);\n\tclear(id[r]);\n\tfor(int i=l; i<=b[id[l]].r&&i<=r; i++) {\n\t\tb[id[l]].x2-=x[i]*x[i]-(s+i)*(s+i);\n\t\tb[id[l]].xy-=x[i]*y[i]-(s+i)*(t+i);\n\t\tb[id[l]].x-=x[i]-(s+i);\n\t\tb[id[l]].y-=y[i]-(t+i);\n\t\tx[i]=s+i;\n\t\ty[i]=t+i;\n\t}\n\tif(id[l]!=id[r])\n\t\tfor(int i=b[id[r]].l; i<=r; i++) {\n\t\t\tb[id[r]].x2-=x[i]*x[i]-(s+i)*(s+i);\n\t\t\tb[id[r]].xy-=x[i]*y[i]-(s+i)*(t+i);\n\t\t\tb[id[r]].x-=x[i]-(s+i);\n\t\t\tb[id[r]].y-=y[i]-(t+i);\n\t\t\tx[i]=s+i;\n\t\t\ty[i]=t+i;//\u66b4\u529b\u8ba1\u7b97\u8d21\u732e\n\t\t}\n\tfor(int i=id[l]+1; i<id[r]; i++) {\n\t\tint l=b[i].l;\n\t\tint r=b[i].r;\n        \t//\u5e73\u65b9\u548c\u516c\u5f0f\u7ef4\u62a4\u4fe1\u606f\n\t\tb[i].x2=(r-l+1)*s*s+s*(l+r)*(r-l+1)+r*(r+1)*(2*r+1)/6-l*(l-1)*(2*l-1)/6;\n\t\tb[i].xy=(r-l+1)*s*t+(s+t)*(l+r)*(r-l+1)/2+r*(r+1)*(2*r+1)/6-l*(l-1)*(2*l-1)/6;\n\t\tb[i].x=(r-l+1)*s+(l+r)*(r-l+1)/2;\n\t\tb[i].y=(r-l+1)*t+(l+r)*(r-l+1)/2;\n\t\tb[i].cvr[0]=s;\n\t\tb[i].cvr[1]=t;\n\t\tb[i].add[0]=b[i].add[1]=0;\n\t\tb[i].c=1;\n\t}\n\treturn;\n}\nstruct Ans {\n\tdouble x,y,xy,x2;\n} ans;\ndouble query(int l,int r) {\n\tans.x=ans.x2=ans.xy=ans.y=0;\n\tclear(id[l]);\n\tclear(id[r]);\n\tfor(int i=l; i<=b[id[l]].r; i++) {\n\t\tans.x+=x[i];\n\t\tans.y+=y[i];\n\t\tans.x2+=x[i]*x[i];\n\t\tans.xy+=x[i]*y[i];\n\t}\n\tif(id[l]!=id[r])\n\t\tfor(int i=b[id[r]].l; i<=r; i++) {\n\t\t\tans.x+=x[i];\n\t\t\tans.y+=y[i];\n\t\t\tans.x2+=x[i]*x[i];\n\t\t\tans.xy+=x[i]*y[i];\n\t\t}\n\tfor(int i=id[l]+1; i<id[r]; i++) {\n\t\tans.x+=b[i].x;\n\t\tans.y+=b[i].y;\n\t\tans.x2+=b[i].x2;\n\t\tans.xy+=b[i].xy;\n\t}\n\treturn (ans.xy-ans.x*ans.y/(r - l + 1))/(ans.x2-ans.x*ans.x/(r - l + 1));\n}\n\nsigned main() {\n\tscanf(\"%lld%lld\",&n,&m);\n\tfor(int i=1; i<=n; i++) {\n\t\tscanf(\"%Lf\",x+i);\n\t}\n\tfor(int i=1; i<=n; i++) {\n\t\tscanf(\"%Lf\",y+i);\n\t}\n\tK=sqrt(n);\n\tfor(int i=1; i<=n; i++) {\n\t\tid[i]=(i-1)/K+1;\n\t\tb[id[i]].x+=x[i];\n\t\tb[id[i]].y+=y[i];\n\t\tb[id[i]].x2+=x[i]*x[i];\n\t\tb[id[i]].xy+=x[i]*y[i];\n\t}\n\tfor(int i=1; i<=id[n]; i++) {\n\t\tb[i].l=(i-1)*K+1;\n\t\tb[i].r=i*K;\n\t}\n\tb[id[n]].r=n;\n\tfor(int i=1; i<=m; i++) {\n\t\tint in,l,r;\n\t\tdouble s,t;\n\t\tscanf(\"%lld%lld%lld\",&in,&l,&r);\n\t\tswitch(in) {\n\t\t\tcase 1:\n\t\t\t\tprintf(\"%.10Lf\\n\",query(l,r));\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tscanf(\"%Lf%Lf\",&s,&t);\n\t\t\t\tadd(l,r,s,t);\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tscanf(\"%Lf%Lf\",&s,&t);\n\t\t\t\tcover(l,r,s,t);\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n```\n",
        "postTime": 1646386174,
        "uid": 401583,
        "name": "a_z_c",
        "ccfLevel": 6,
        "title": "p3707 \u5206\u5757"
    },
    {
        "content": "## [SDOI2017] \u76f8\u5173\u5206\u6790 Solution\n### \u5199\u9898\u89e3\u633a\u7d2f\u4eba\u7684\uff0c\u5404\u4f4d\u770b\u5b98\u7ed9\u4e2a\u8d5e\u5427~\n\n**\u3010\u601d\u8def\u6bd4\u8f83\u5927\u4f17\u5316\uff0c\u4e3b\u8981\u662f\u6211\u89c9\u5f97\u81ea\u5df1\u7684\u4ee3\u7801\u6bd4\u8f83\u6613\u61c2\u6240\u4ee5\u53d1\u4e86\u8fd9\u7bc7\u9898\u89e3\u3002\u5982\u679c\u4ecb\u610f\u601d\u8def\u4e0d\u591f\u65b0\u9896\uff0c\u52ff\u770b\uff0c\u52ff\u55b7\u3002\u3011**\n\n\u7b2c\u4e00\u773c\u770b\u5230\u8fd9\u4e2a\u9898\uff0c\u90a3\u4e2a\u6c42\u7ebf\u6027\u56de\u5f52\u65b9\u7a0b\u4e00\u6b21\u9879\u7cfb\u6570$\\hat a$\u7684\u5f0f\u5b50\u8ba9\u6211\u4ee5\u4e3a\u8fd9\u662f\u4ec0\u4e48\u6bd2\u7624\u7edf\u8ba1\u5b66\u9898\u76ee\uff1b\n\n~~(\u540e\u6765\u8bc1\u660e\u786e\u5b9e\u5f88\u6bd2\u7624)\u3002~~\n\n\u518d\u4ed4\u7ec6\u770b\u4e00\u773c\uff0c\u53d1\u73b0\u5c31\u662f\u975e\u5e38\u76f4\u63a5\u7684\u533a\u95f4\u4fee\u6539\u548c\u533a\u95f4\u7279\u6b8a\u8fd0\u7b97\u7ed3\u679c\u67e5\u8be2\uff1b\n\n\u4ed4\u7ec6\u60f3\u60f3\uff0c\u4f60\u4f1a\u53d1\u73b0\u7ebf\u6bb5\u6811\u8c8c\u4f3c\u6ca1\u6cd5\u76f4\u63a5\u4e14\u7cbe\u786e\u7684\u7ef4\u62a4\u8fd9\u4e2a\u56de\u5f52\u65b9\u7a0b\u7684\u503c\uff0c\u4f1a\u6709\u7cbe\u5ea6\u95ee\u9898\u800c\u4e14\u5199\u8d77\u6765\u4f1a\u5f02\u5e38\u9ebb\u70e6\uff1b\n\n\u6240\u4ee5\u6211\u4eec\u5c31\u9700\u8981\u628a\u8fd9\u4e2a\u770b\u8d77\u6765\u5341\u5206\u5947\u5999\u7684\u5f0f\u5b50**\u62c6\u4e00\u62c6**\uff0c\u62c6\u6210**\u7528\u7ebf\u6bb5\u6811\u53ef\u4ee5\u51c6\u786e\u4e14\u5bb9\u6613\u7ef4\u62a4\u7684\u4e1c\u897f**\uff1b\n\n\u5176\u5b9e\u5427\uff0c\u8fd9\u4e2a\u5f0f\u5b50\u770b\u7740\u633a\u9ebb\u70e6\uff0c\u5176\u5b9e\u5f88\u597d\u5316\u7b80\uff0c\u5927\u6982\u662f\u8fd9\u4e48\u4e2a\u8fc7\u7a0b\uff1a\n\n$$\\hat a=\\frac{\\sum_{i=L}^{R}{(x_i-\\bar{x})(y_i-\\bar{y})}}{\\sum_{i=L}^{R}{(x_i-\\bar{x})}}$$\n\n$$\\Rightarrow \\hat a=\\frac{\\sum(x_iy_i-\\bar{x}y_i-\\bar{y}x_i+\\bar{x}\\bar{y})}{\\sum{(x_i^2-2x_i\\bar{x}+\\bar{x}^2)}}$$\n\n$$\\Rightarrow \\hat a=\\frac{\\sum x_iy_i-\\sum \\bar{x}y_i-\\sum \\bar{y}x_i+\\bar{x}\\bar{y}\\cdot(L-R+1)}{\\sum{x_i^2-\\sum 2x_i\\bar{x}+\\bar{x}^2\\cdot (L-R+1)}}$$\n\n$$\\Rightarrow \\hat a=\\frac{\\sum x_iy_i-\\bar{x}\\sum y_i-\\bar{y}\\sum x_i+\\bar{x}\\bar{y}\\cdot(L-R+1)}{\\sum{x_i^2-2\\bar{x}\\sum x_i +\\bar{x}^2\\cdot (L-R+1)}}$$\n\u3010\u6ce8\uff1a\u4e0a\u9762\u7684\u90a3\u4e2a\u5f0f\u5b50\u6211\u4eec\u8bb0\u4e3a(1)\u3011\n\n\u7136\u540e\uff0c\u628a$\\ \\bar x\\ $\u548c$\\ \\bar y\\ $\u5e26\u5165\u8fdb\u53bb,\u4f60\u4f1a\u53d1\u73b0\u5f0f\u5b50\u53d8\u5f97**\u7b80\u5355**\u4e86:\n\n\n$$(1)\\Rightarrow \\hat a=\\frac{\\sum x_iy_i-\\frac{\\sum x_i\\sum y_i}{R-L+1}-\\frac{\\sum y_i \\sum x_i}{R-L+1}+\\frac{\\sum x_i \\sum y_i}{(R-L+1)^2}\\cdot(R-L+1)}{\\sum x_i^2-2\\cdot\\frac{(\\sum x_i)^2}{R-L+1}+\\frac{(\\sum x_i)^2}{(R-L+1)^2}\\cdot(R-L+1)}$$\n\n$$\\Rightarrow \\hat a=\\frac{\\sum x_iy_i-\\frac{\\sum x_iy_i}{R-L+1}}{\\sum x_i^2-\\frac{(\\sum x_i)^2}{R-L+1}}$$\n\n\u5316\u7b80\u5230\u8fd9\u4e00\u6b65\uff0c\u6211\u4eec\u5c31\u627e\u5230\u4e86\u53ef\u4ee5**\u51c6\u786e\u4e14\u8f83\u4e3a\u5bb9\u6613\u7ef4\u62a4**\u7684\u56db\u4e2a\u503c\uff0c\u5373\n$\\sum x_i,\\sum y_i,\\sum x_iy_i,\\sum x_i^2$\n\nOK, fine. \u5982\u4f55\u8fdb\u884c**\u533a\u95f4\u67e5\u8be2**\u6211\u4eec\u5df2\u7ecf\u89e3\u51b3\u4e86\u3002\n\n\u63a5\u4e0b\u6765\u7684\u95ee\u9898\u5c31\u662f\u5982\u4f55\u4fee\u6539\u3002\n\n- **\u533a\u95f4\u52a0\u6cd5**\n\n\u6bcf\u6b21\u505a\u533a\u95f4\u52a0\u6cd5\uff0c\u4e0a\u9762\u7ef4\u62a4\u7684\u56db\u4e2a\u503c\u5206\u522b\u4f1a\u8fd9\u6837\u53d8\u5316\uff1a\n\n$$\\sum (x_i+S)=\\sum x_i+S(R-L+1)$$\n\n$$\\sum (y_i+T)=\\sum x_i+T(R-L+1)$$\n\n$$\\sum (x_i+S)(y_i+T)=\\sum x_iy_i+S\\sum y_i+T\\sum x_i+ST(R-L+1)$$\n\n\u6bcf\u6b21\u4fee\u6539\u53ea\u9700\u8981\u52a0\u4e0a\u539f\u5148\u533a\u95f4\u548c\u7684\u540e\u9762\u90a3\u4e00\u5768\u5c31\u53ef\u4ee5\u4e86\u3002\n\n- **\u533a\u95f4\u4fee\u6539**\n\n\u8003\u8651\u5148\u5927\u529b\u628a `x` \u5e8f\u5217\u548c `y` \u5e8f\u5217 \u7684 `L~R` \u533a\u95f4\u91cc\u7684\u6bcf\u4e00\u4e2a\u503c\u4fee\u6539\u6210 `i`\uff0c\n\n\u7136\u540e\u518d\u5bf9\u4e24\u4e2a\u533a\u95f4\u5206\u522b\u505a\u52a0 `S` \u548c\u52a0 `T` \u7684\u533a\u95f4\u52a0\u6cd5\u3002\n\n\u90a3\u4e48\u95ee\u9898\u6765\u4e86\uff1a\n\n\u6211\u4eec\u600e\u4e48\u53bb\u4fee\u6539\u8fd9\u56db\u4e2a\u503c\u5462\uff1f\n\n$\\mathbb Q:$ $\\sum x_i$ \u548c$\\sum y_i$ \u7684\u4fee\u6539\uff1f\n\n$\\mathbb A:$\n1. \u524d\u7f00\u548c\u7ef4\u62a4 $\\sum_{i=1}^{n}{i}$\uff0c\u7136\u540e\u5c06\u5bf9\u5e94\u533a\u95f4\u6539\u4e3a$pre_R-pre_{L-1}$.\n\n2. \u53ea\u9700\u8981\u5c06\u5bf9\u5e94\u533a\u95f4\u6539\u4e3a `(R-L+1)*(R+L)/2` \u5373\u53ef\u3002\n\n---\n$\\mathbb Q:$ $\\sum x_i^2$\u548c$\\sum x_iy_i$ \u7684\u4fee\u6539\uff1f\n\n$\\mathbb A:$ \n1. \u524d\u7f00\u548c\u7ef4\u62a4 $\\sum_{i=1}^{n}{i^2}$\uff0c\u7136\u540e\u5c06\u5bf9\u5e94\u533a\u95f4\u6539\u4e3a$powpre_R-powpre_{L-1}$.\n\n2. \u5229\u7528\u516c\u5f0f $\\sum_{i=1}^{n}{i^2}=\\frac{n(n+1)(2n+1)}{6}$ \u7ef4\u62a4,\u7136\u540e\u5c06\u5bf9\u5e94\u533a\u95f4\u6539\u4e3a$powpre_R-powpre_{L-1}$.\n\nOK, fine.\n\n\u81f3\u6b64\uff0c\u6211\u4eec\u89e3\u51b3\u5b8c\u4e86\u6240\u6709\u6570\u5b66\u95ee\u9898\uff0c\u89e3\u51b3\u5b8c\u8fd9\u4e9b\u95ee\u9898\uff0c\u5b9e\u73b0\u8d77\u6765\u5176\u5b9e\u5c31\u4e0d\u96be\u4e86\u3002\u8fd9\u91cc\u7565\u5fae\u4e00\u8bb2\u3002\n\n\u8fd9\u9898\u7684 `pushdown` \u5b9e\u73b0\u770b\u8d77\u6765\u5f88\u6bd2\u7624\uff0c\u9700\u8981\u7ef4\u62a4\u4e00\u5927\u5806\u4e1c\u897f\uff0c\u5176\u5b9e\u5199\u8d77\u6765\u5e76\u4e0d\u662f\u5f88\u96be\uff0c\u7ed3\u5408\u4ee3\u7801\u770b\u770b\uff1a\n\n```cpp\nvoid transtag(int p,int l,int r,double S,double T){//\u533a\u95f4\u6c42\u548cpushdown\n\ttgx[p]+=S;\n\ttgy[p]+=T;\n\tdouble lth=(double)r-(double)l+1.00;\n\ttr[p][3]+=T*tr[p][1]+S*tr[p][2]+S*T*lth;\n\ttr[p][4]+=2*S*tr[p][1]+S*S*lth; \n\ttr[p][1]+=S*lth;\n\ttr[p][2]+=T*lth;//\u521a\u521a\u63a8\u5f97\u7684\u56db\u4e2a\u5f0f\u5b50\n}\nvoid mvtag(int p,int l,int r){//\u533a\u95f4\u4fee\u6539pushdown\n\ttr[p][1]=tr[p][2]=getsum((double)l,(double)r);\n\t//getsum:sigma(x[i])\n\ttr[p][3]=tr[p][4]=getpowsum((double)l,(double)r);\n\t//getpowsum:sigma(x[i]*x[i])\n\ttgx[p]=tgy[p]=0;//\u6e05\u96f6\u6c42\u548c\u61d2\u6807\u8bb0\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u533a\u95f4\u5df2\u7ecf\u5168\u90e8\u88ab\u4fee\u6539\u8fc7\u4e86\n\tflag[p]=1;//\u8be5\u8282\u70b9\u6709\u533a\u95f4\u4fee\u6539\u64cd\u4f5c\uff0c\u628a\u5b83\u7684 flag[] \u6539\u4e3a true\n}\nvoid pushdown(int p,int l,int r){\n\tint md=(l+r)>>1;\n\tif(flag[p])mvtag(ls(p),l,md),mvtag(rs(p),md+1,r);\n\t//flag[]:\u5224\u65ad\u8be5\u533a\u95f4\u662f\u5426\u5b58\u5728\u533a\u95f4\u4fee\u6539\u64cd\u4f5c\u7684 lazy tag\n\ttranstag(ls(p),l,md,tgx[p],tgy[p]);\n\ttranstag(rs(p),md+1,r,tgx[p],tgy[p]);\n\ttgx[p]=tgy[p]=0;\n\tflag[p]=0;//\u5c06\u6240\u6709\u61d2\u6807\u8bb0\u6e05\u96f6\n}\n```\nOK, fine.\n\n\u73b0\u5728\u5c31\u53ef\u4ee5\u53bb\u7801\u5176\u5b83\u90e8\u5206\u5566\uff01\n\n\u5176\u5b9e\u8fd9\u4e2a\u9898\u9664\u4e86 `pushdown` \u64cd\u4f5c\uff0c\u6ca1\u6709\u4efb\u4f55\u96be\u70b9\u3002\n\n\u5c31\u662f\u6b63\u5e38\u7684\u6c42\u548c\u3001\u533a\u95f4\u7ef4\u62a4\u3002**\u601d\u7ef4\u96be\u5ea6\u4e0d\u5927\u4f46\u5b9e\u73b0\u6bd4\u8f83\u9ebb\u70e6**\uff0c\u8fd9\u91cc\u9644\u4e0a\u6211\u81ea\u5df1\u7684\u4ee3\u7801\uff0c\u4ec5\u4f9b\u53c2\u8003\u3002\n\n~~\uff08\u9b3c\u77e5\u9053\u6211\u56e0\u4e3a\u628a `l` \u5199\u6210  `1` \u8fd9\u79cd\u9b3c\u755c\u9519\u8bef\u8c03\u4e86\u4e00\u665a\u4e0a\u8fd9\u9898\u540e\u4ece\u673a\u623f\u8d70\u51fa\u6765\u5565\u5fc3\u60c5\uff09~~\n\n## Code :\n\n```cpp\n#include<bits/stdc++.h>\n#define Te template\n#define ll long long\n#define elif else if\n\nusing namespace std;\n\nTe <typename R> R read(R &x){\n\tx=0;\n\tchar c=getchar();R f=1;\n\tfor(;!isdigit(c);c=getchar())if(c=='-')f=-1;\n\tfor(;isdigit(c);c=getchar())x=(x<<1)+(x<<3)+(c^48);\n\treturn x=x*f;\n}\n\nTe <typename W> void write(W x){\n\tif(x<0)x=(~x)|1,putchar('-');\n\tif(x>9)write(x/10);\n\tputchar((x-(x/10)*10)+48);\n}\n\n/*Variables*/\nconst int N=1e5+7;\nint n,m;\ndouble tr[N<<2][5],tgx[N<<2],tgy[N<<2],x[N],y[N],pows[N],ans[5];\nbool flag[N<<2];\n/*Functions and Classification*/\n\nclass SegTr{\n\tprivate:\n\t\tint ls(int p){return p<<1;} \n\t\tint rs(int p){return p<<1|1;}\n\t\tvoid pushup(int p){\n\t\t\tfor(int i=1;i<=4;i++){\n\t\t\t\ttr[p][i]=tr[ls(p)][i]+tr[rs(p)][i];\n\t\t\t}\n\t\t}\n\t\tvoid transtag(int p,int l,int r,double S,double T){\n\t\t\ttgx[p]+=S;\n\t\t\ttgy[p]+=T;\n\t\t\tdouble lth=(double)r-(double)l+1.00;\n\t\t\ttr[p][3]+=T*tr[p][1]+S*tr[p][2]+S*T*lth;\n\t\t\ttr[p][4]+=2*S*tr[p][1]+S*S*lth; \n\t\t\ttr[p][1]+=S*lth;\n\t\t\ttr[p][2]+=T*lth;\n\t\t}\n\t\tvoid mvtag(int p,int l,int r){\n\t\t\ttr[p][1]=tr[p][2]=this->getsum((double)l,(double)r);\n\t\t\ttr[p][3]=tr[p][4]=this->getpowsum((double)l,(double)r);\n\t\t\ttgx[p]=tgy[p]=0;\n\t\t\tflag[p]=1;\n\t\t}\n\t\tvoid pushdown(int p,int l,int r){\n\t\t\tint md=(l+r)>>1;\n\t\t\tif(flag[p])mvtag(ls(p),l,md),mvtag(rs(p),md+1,r);\n\t\t\ttranstag(ls(p),l,md,tgx[p],tgy[p]);\n\t\t\ttranstag(rs(p),md+1,r,tgx[p],tgy[p]);\n\t\t\ttgx[p]=tgy[p]=0;\n\t\t\tflag[p]=0;\n\t\t}\n\t\tdouble getsum(double l,double r){\n\t\t\treturn (l+r)*(r-l+1)/2;\n\t\t}\n\t\tdouble getpowsum(int l,int r){\t\t\n\t\t\treturn pows[r]-pows[l-1];\n\t\t}\n\tpublic:\n\t\tvoid build(int p,int l,int r){\n\t\t\tif(l==r){\n\t\t\t\ttr[p][1]=x[l],\n\t\t\t\ttr[p][2]=y[l],\n\t\t\t\ttr[p][3]=x[l]*y[l],\n\t\t\t\ttr[p][4]=x[l]*x[l];\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tint md=(l+r)>>1;\n\t\t\tbuild(ls(p),l,md);\n\t\t\tbuild(rs(p),md+1,r);\n\t\t\tpushup(p);\t\n\t\t}\n\t\tvoid block_add(int p,int l,int r,int gl,int gr,double S,double T){\n\t\t\tif(gl<=l&&gr>=r){\n\t\t\t\ttranstag(p,l,r,S,T);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tpushdown(p,l,r);\n\t\t\tint md=(l+r)>>1;\n\t\t\tif(gl<=md)this->block_add(ls(p),l,md,gl,gr,S,T);\n\t\t\tif(gr>md)this->block_add(rs(p),md+1,r,gl,gr,S,T);\n\t\t\tpushup(p);\n\t\t}\n\t\tvoid block_rev(int p,int l,int r,int gl,int gr,int S,int T){\n\t\t\tif(gl<=l&&gr>=r){\n\t\t\t\tmvtag(p,l,r);\n\t\t\t\ttranstag(p,l,r,S,T);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tpushdown(p,l,r);\n\t\t\tint md=(l+r)>>1;\n\t\t\tif(gl<=md)this->block_rev(ls(p),l,md,gl,gr,S,T);\n\t\t\tif(gr>md)this->block_rev(rs(p),md+1,r,gl,gr,S,T);\n\t\t\tpushup(p);\n\t\t}\n\t\tdouble block_sum(int p,int l,int r,int gl,int gr,int i){\n\t\t\tdouble res=0;\n\t\t\tif(gl<=l&&gr>=r){\n\t\t\t\treturn tr[p][i]; \n\t\t\t}\n\t\t\tpushdown(p,l,r);\n\t\t\tint md=(l+r)>>1;\n\t\t\tif(gl<=md)res+=this->block_sum(ls(p),l,md,gl,gr,i);\n\t\t\tif(gr>md)res+=this->block_sum(rs(p),md+1,r,gl,gr,i);\n\t\t\treturn res;\n\t\t\tpushup(p);\n\t\t}\n}SegmentTree;\n/*---*/\nint main(){\n\tread(n),read(m);\n\tfor(int i=1;i<=n;i++)scanf(\"%lf\",&x[i]),pows[i]=pows[i-1]+(double)i*(double)i;\n\tfor(int j=1;j<=n;j++)scanf(\"%lf\",&y[j]);\n\tSegmentTree.build(1,1,n);\n\tfor(;m--;){\n\t\tint Q,L,R;\n\t\tdouble S,T;\n\t\tcin>>Q;\n\t\tscanf(\"%d%d\",&L,&R);\n\t\tif(Q==1){\t\t\t\n\t\t\tfor(int i=1;i<=4;i++)ans[i]=SegmentTree.block_sum(1,1,n,L,R,i);\n\t\t\tdouble answer=(ans[3]-(ans[1]*ans[2])/(R-L+1))/(ans[4]-(ans[1]*ans[1])/(R-L+1));\n\t\t\tprintf(\"%.10lf\\n\",answer);\n\t\t}\n\t\tif(Q==2){\n\t\t\tscanf(\"%lf%lf\",&S,&T);\n\t\t\tSegmentTree.block_add(1,1,n,L,R,S,T);\t\t\n\t\t}\n\t\tif(Q==3){\n\t\t\tscanf(\"%lf%lf\",&S,&T);\n\t\t\tSegmentTree.block_rev(1,1,n,L,R,S,T);\t\t\t\n\t\t}\n\t}\n}\n```",
        "postTime": 1603192158,
        "uid": 93292,
        "name": "\u79bb\u5b50\u952eIonic_Bond",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P3707 \u3010[SDOI2017]\u76f8\u5173\u5206\u6790\u3011"
    },
    {
        "content": "1\u3001\u6982\u8ff0\n\n====\n\u4e00\u9053\u6bd4BZOJ1858\u8fd8\u8981\u6076\u5fc3\u7684\u7ebf\u6bb5\u6811\u2026\u2026\n\n\u8c03\u4e86\u597d\u51e0\u4e2a\u5c0f\u65f6\u2026\u2026\n\n\n2\u3001\u7ef4\u62a4\u5185\u5bb9\n\n======\n\u8003\u8651\u62c6\u5f00\u5f0f\u5b50\uff1a\n\n$\\frac{\\sum_{i=L}^R(x_i-\\bar x)(y_i-\\bar y)}{\\sum_{i=L}^R(x_i-\\bar x)^2}=\\frac{\\sum_{i=L}^Rx_iy_i-\\frac{(\\sum_{i=L}^Rx_i)*(\\sum_{i=L}^Ry_i)}{R-L+1}}{\\sum_{i=L}^Rx_i^2-\\frac{(\\sum_{i=L}^Rx_i)^2}{R-L+1}}$\u3002\n\n\u6240\u4ee5\u53ea\u8981\u7ef4\u62a4$\\sum x,\\sum y,\\sum xy,\\sum x^2$\u7684\u503c\u3002\n\n\u5bf9\u4e8e\u4fee\u6539\uff0c\u7ef4\u62a4$4$\u4e2a\u6807\u8bb0\uff1a\n\n$addX$\uff1a$x$\u533a\u95f4\u52a0\u7684\u6807\u8bb0\u3002\n\n$addY$\uff1a$y$\u533a\u95f4\u52a0\u7684\u6807\u8bb0\u3002\n\n$tagX$\uff1a$x$\u533a\u95f4\u6210\u6bb5\u66f4\u65b0\u7684\u6807\u8bb0\uff0c\u5e76\u4e14\u6bcf\u4e00\u4e2a$x$\u503c\u52a0\u4e0a$i$\u3002\n\n$tagY$\uff1a$y$\u533a\u95f4\u6210\u6bb5\u66f4\u65b0\u7684\u6807\u8bb0\uff0c\u5e76\u4e14\u6bcf\u4e00\u4e2a$y$\u503c\u52a0\u4e0a$i$\u3002\n\n\n3\u3001\u6807\u8bb0\u66f4\u65b0\n\n======\n\u6807\u8bb0\u7684\u66f4\u65b0\u4e00\u4e2a\u6bd4\u4e00\u4e2a\u6076\u5fc3\u2026\u2026\n\n\u4ee5\u4e0b$l$\u4e3a\u5de6\u7aef\u70b9\uff0c$r$\u4e3a\u53f3\u7aef\u70b9\u3002\n\n\u5bf9\u4e8e\u533a\u95f4\u52a0\u64cd\u4f5c\uff0c\n\n$\\sum xy+=T\\sum x+S\\sum y+(r-l+1)*S*T$\n\n$\\sum x^2+=2S\\sum x+(r-l+1)*S^2$\n\n$\\sum x+=(r-l+1)*S$\n\n$\\sum y+=(r-l+1)*T$\n\n\u5bf9\u4e8e\u533a\u95f4\u66f4\u65b0\u64cd\u4f5c\uff0c\n\n$\\sum x=(r-l+1)*S+\\frac{(r-l+1)*(l+r)}{2}$\n\n$\\sum y=(r-l+1)*T+\\frac{(r-l+1)*(l+r)}{2}$\n\n$\\sum x^2=(r-l+1)*S^2+S*(l+r)*(r-l+1)+\\frac{r(r+1)(2r+1)}{6}-\\frac{l(l-1)(2l-1)}{6}$\n\n$\\sum xy=(r-l+1)*S*T+\\frac{(S+T)*(l+r)*(r-l+1)}{2}+\\frac{r(r+1)(2r+1)}{6}-\\frac{l(l-1)(2l-1)}{6}$\n\n\n4\u3001\u4ee3\u7801\n\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\ninline int read() {\n    int res = 0; bool bo = 0; char c;\n    while (((c = getchar()) < '0' || c > '9') && c != '-');\n    if (c == '-') bo = 1; else res = c - 48;\n    while ((c = getchar()) >= '0' && c <= '9')\n        res = (res << 3) + (res << 1) + (c - 48);\n    return bo ? ~res + 1 : res;\n}\nconst int N = 1e5 + 5, M = 4e5 + 5;\nint n, m, X[N], Y[N], QAQ = 1;\nstruct cyx {\n    double sumX, sumY, sumXY, sumX2, addX, addY,\n        firX, firY; bool cn;\n    int l, r, lc, rc, inc;\n} T[M];\nstruct pyz {\n    double sumX, sumY, sumXY, sumX2;\n    friend inline pyz operator + (pyz a, pyz b) {\n        pyz res; res.sumX = a.sumX + b.sumX;\n        res.sumY = a.sumY + b.sumY;\n        res.sumX2 = a.sumX2 + b.sumX2;\n        res.sumXY = a.sumXY + b.sumXY;\n        return res;\n    }\n};\ninline double sqr(const double x) {return x * x;}\ninline double sumx2(const double l, const double r) {\n    return 1.0 * r * (r + 1) * (2.0 * r + 1) / 6.0\n        - 1.0 * l * (l - 1) * (2.0 * l - 1) / 6.0;\n}\ninline void downdate(const int x) {\n    int lc = T[x].lc, rc = T[x].rc;\n    if (T[x].cn) {\n        T[lc].firX = T[x].firX;\n        T[rc].firX = T[x].firX;\n        T[lc].cn = T[rc].cn = 1; T[x].cn = 0;\n        T[lc].addX = T[rc].addX = T[lc].inc = 0;\n        T[lc].firY = T[x].firY;\n        T[rc].firY = T[x].firY;\n        T[lc].cn = T[rc].cn = 1; T[x].cn = 0;\n        T[lc].addY = T[rc].addY = T[rc].inc = 0;\n    }\n    T[lc].addX += T[x].addX; T[rc].addX += T[x].addX; T[x].addX = 0;\n    T[lc].addY += T[x].addY; T[rc].addY += T[x].addY; T[x].addY = 0;\n    T[lc].inc += T[x].inc; T[rc].inc += T[x].inc; T[x].inc = 0;\n}\ninline void upt(const int x) {\n    int lc = T[x].lc, rc = T[x].rc, l = T[x].l, r = T[x].r;\n    double x1, y1, xy1, x21, x2, y2, xy2, x22; int mid = l + r >> 1;\n    x1 = T[lc].sumX; x2 = T[rc].sumX;\n    y1 = T[lc].sumY; y2 = T[rc].sumY;\n    x21 = T[lc].sumX2; x22 = T[rc].sumX2;\n    xy1 = T[lc].sumXY; xy2 = T[rc].sumXY;\n    x21 += 2.0 * x1 * T[lc].addX + T[lc].addX * T[lc].addX * (mid - l + 1);\n    x22 += 2.0 * x2 * T[rc].addX + T[rc].addX * T[rc].addX * (r - mid);\n    xy1 += x1 * T[lc].addY + T[lc].addX * y1 +\n        T[lc].addX * T[lc].addY * (mid - l + 1);\n    xy2 += x2 * T[rc].addY + T[rc].addX * y2 +\n        T[rc].addX * T[rc].addY * (r - mid);\n    x1 += T[lc].addX * (mid - l + 1); x2 += T[rc].addX * (r - mid);\n    y1 += T[lc].addY * (mid - l + 1); y2 += T[rc].addY * (r - mid);\n    if (T[lc].inc) {\n        double lx = T[lc].firX + T[lc].addX, ly = T[lc].firY + T[lc].addY;\n        x21 = 1.0 * (mid - l + 1) * sqr(lx) + lx * (l + mid) *\n            (mid - l + 1) + sumx2(l, mid);\n        xy1 = 1.0 * lx * ly * (mid - l + 1) + (lx + ly) * (l + mid)\n            * (mid - l + 1) / 2.0 + sumx2(l, mid);\n        x1 = lx * (mid - l + 1) + 1.0 * (l + mid) * (mid - l + 1) / 2.0;\n        y1 = ly * (mid - l + 1) + 1.0 * (l + mid) * (mid - l + 1) / 2.0;\n    }\n    if (T[rc].inc) {\n        double rx = T[rc].firX + T[rc].addX, ry = T[rc].firY + T[rc].addY;\n        x22 = 1.0 * (r - mid) * sqr(rx) + rx * (mid + 1 + r) *\n            (r - mid) + sumx2(mid + 1, r);\n        xy2 = 1.0 * rx * ry * (r - mid) + (rx + ry) * (mid + 1 + r)\n            * (r - mid) / 2.0 + sumx2(mid + 1, r);\n        x2 = rx * (r - mid) + 1.0 * (mid + 1 + r) * (r - mid) / 2.0;\n        y2 = ry * (r - mid) + 1.0 * (mid + 1 + r) * (r - mid) / 2.0;\n    }\n    T[x].sumX = x1 + x2; T[x].sumY = y1 + y2;\n    T[x].sumXY = xy1 + xy2; T[x].sumX2 = x21 + x22;\n}\ninline void build(const int l, const int r, const int p) {\n    T[p].l = l; T[p].r = r;\n    if (l == r) {\n        T[p].sumX = X[l]; T[p].sumY = Y[l];\n        T[p].sumXY = T[p].sumX * T[p].sumY;\n        T[p].sumX2 = T[p].sumX * T[p].sumX;\n        return;\n    }\n    int p2 = (T[p].lc = ++QAQ), p3 = (T[p].rc = ++QAQ);\n    int mid = l + r >> 1; build(l, mid, p2); build(mid + 1, r, p3);\n    T[p].sumX = T[p2].sumX + T[p3].sumX;\n    T[p].sumY = T[p2].sumY + T[p3].sumY;\n    T[p].sumXY = T[p2].sumXY + T[p3].sumXY;\n    T[p].sumX2 = T[p2].sumX2 + T[p3].sumX2;\n}\ninline void change(const int s, const int e,\nconst int Si, const int Ti, const int p) {\n    int l = T[p].l, r = T[p].r;\n    if (l == s && r == e) {\n        T[p].addX += 1.0 * Si; T[p].addY += 1.0 * Ti;\n        return;\n    }\n    int mid = l + r >> 1, p2 = T[p].lc, p3 = T[p].rc; downdate(p);\n    if (e <= mid) change(s, e, Si, Ti, p2);\n    else if (s >= mid + 1) change(s, e, Si, Ti, p3);\n    else change(s, mid, Si, Ti, p2), change(mid + 1, e, Si, Ti, p3);\n    upt(p);\n}\ninline void modify(const int s, const int e, const int Si,\nconst int Ti, const int p) {\n    int l = T[p].l, r = T[p].r;\n    if (T[p].l == s && T[p].r == e) {\n        T[p].cn = 1; T[p].firX = 1.0 * Si; T[p].firY = 1.0 * Ti; T[p].inc = 1;\n        T[p].addX = T[p].addY = 0;\n        return;\n    }\n    int mid = l + r >> 1, p2 = T[p].lc, p3 = T[p].rc; downdate(p);\n    if (e <= mid) modify(s, e, Si, Ti, p2);\n    else if (s >= mid + 1) modify(s, e, Si, Ti, p3);\n    else modify(s, mid, Si, Ti, p2), modify(mid + 1, e, Si, Ti, p3);\n    upt(p);\n}\ninline pyz ask(const int s, const int e, const int p) {\n    pyz res; int l = T[p].l, r = T[p].r;\n    if (l == s && r == e) {\n        double x, y;\n        if (T[p].cn) {\n            x = T[p].firX + T[p].addX; y = T[p].firY + T[p].addY;\n            res.sumX = x * (r - l + 1) +\n                1.0 * (l + r) * (r - l + 1)\n                / 2.0;\n            res.sumY = y * (r - l + 1) +\n                1.0 * (l + r) * (r - l + 1)\n                / 2.0;\n            res.sumXY = x * y * (r - l + 1) +\n                1.0 * (x + y) * (l + r) * (r - l + 1)\n                / 2.0 + sumx2(l, r);\n            res.sumX2 = sqr(x) * (r - l + 1) +\n                x * (l + r) * (r - l + 1) + sumx2(l, r);\n            return res;\n        }\n        res.sumX = T[p].sumX + T[p].addX * (r - l + 1);\n        res.sumY = T[p].sumY + T[p].addY * (r - l + 1);\n        res.sumXY = T[p].sumXY + T[p].sumX * T[p].addY\n            + T[p].sumY * T[p].addX + T[p].addX * T[p].addY * (r - l + 1);\n        res.sumX2 = T[p].sumX2 + 2.0 * T[p].addX * T[p].sumX\n            + sqr(T[p].addX) * (r - l + 1);\n        return res;\n    }\n    int mid = l + r >> 1, p2 = T[p].lc, p3 = T[p].rc; downdate(p);\n    if (e <= mid) res = ask(s, e, p2);\n    else if (s >= mid + 1) res = ask(s, e, p3);\n    else res = ask(s, mid, p2) + ask(mid + 1, e, p3);\n    return upt(p), res;\n}\ninline double trans(const int l, const int r, const pyz res) {\n    double x = res.sumX, y = res.sumY, x2 = res.sumX2, xy = res.sumXY;\n    return (xy - x * y / (r - l + 1)) / (x2 - x * x / (r - l + 1));\n}\nint main() {\n    int i, op, x, y, u, v; n = read(); m = read();\n    for (i = 1; i <= n; i++) X[i] = read();\n    for (i = 1; i <= n; i++) Y[i] = read();\n    build(1, n, 1);\n    while (m--) {\n        op = read(); if (op == 2) {\n            x = read(); y = read(); u = read(); v = read();\n            change(x, y, u, v, 1);\n        }\n        else if (op == 3) {\n            x = read(); y = read(); u = read(); v = read();\n            modify(x, y, u, v, 1);\n        }\n        else {\n            x = read(); y = read();\n            printf(\"%.10lf\\n\", trans(x, y, ask(x, y, 1)));\n        }\n    }\n    return 0;\n}\n====\n```",
        "postTime": 1508640719,
        "uid": 29936,
        "name": "xyz32768",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3707 \u3010[SDOI2017]\u76f8\u5173\u5206\u6790\u3011"
    },
    {
        "content": "### \u89e3\u9898\u601d\u8def\n\n\u9898\u89e3\u91cc\u600e\u4e48\u90fd\u662f\u7ebf\u6bb5\u6811\u7684\u9898\u89e3\uff1f\n\n\u5206\u5757\u6ca1\u6709\u6392\u9762\u4e86\uff08\u60e8\uff09\u3002\n\n\u8981\u505a\u51fa\u6765\u8fd9\u9053\u9898\uff0c\u6709\u4e09\u4e2a\u9700\u8981\u89e3\u51b3\u7684\u70b9\uff1a\n\n**1.\u8981\u7ef4\u62a4\u4ec0\u4e48**\n\n\u5176\u5b9e\u548c\u7ebf\u6bb5\u6811\u4e00\u6837\uff0c\u5206\u5757\u4e5f\u9700\u8981\u7ef4\u62a4\u4e00\u4e9b\u4e1c\u897f\uff0c\u90a3\u4e48\u9700\u8981\u7ef4\u62a4\u4ec0\u4e48\u5462\uff1f\u4e0b\u9762\u8fdb\u884c\u63a8\u5bfc:\n\n$\\begin{aligned}\na &=\\frac{\\sum\\limits^R_{i=L}(x_i-\\bar x)(y_i-\\bar y)}{\\sum\\limits^R_{i=L}(x_i-\\bar x)^2}\\\\\n     &=\\frac{\\sum\\limits^R_{i=L}x_iy_i - \\sum\\limits^R_{i=L}x_i \\bar y-\\sum\\limits^R_{i=L}y_i\\bar x +\\sum\\limits^R_{i=L}\\bar x\\bar y}{\\sum\\limits^R_{i=L}x_i^2 -\\sum\\limits^R_{i=L}2x\\bar x+\\sum\\limits^R_{i=L} \\bar x^2}\n\\end{aligned}$\n\n\u56e0\u4e3a $\\bar y$ \u548c $\\bar x$ \u662f\u5b9a\u503c\uff0c\u6211\u4eec\u8bbe $s=r-l+1$\uff0c\u7528 $\\sum$ \u6765\u8868\u793a $\\sum\\limits^R_{i=L}$ \u5219\u6709\uff1a\n\n$\\begin{aligned}\na &=\\frac{\\sum x_iy_i-\\bar y\\sum x_i-\\bar x\\sum y_i+s\\bar x\\bar y}{\\sum x_i^2-2\\bar x\\sum x_i+s\\bar x^2}\\\\\n\\because \\bar x &= \\frac{1}{s}\\sum x_i\\\\\n\\bar y &=\\frac{1}{s}\\sum y_i\\\\\n\\end{aligned}$\n\n\u5c06 $\\bar x$ \u548c $\\bar y$ \u4ee3\u5165 $a$\uff0c\u6709\uff1a\n\n$\\begin{aligned}\n  a &=\\frac{\\sum x_iy_i-\\frac{2\\sum x_i\\sum y_i}{s}+\\frac{s\\sum x_i \\sum y_i}{s}}{\\sum x_i^2-\\frac{2\\sum x_i\\sum x_i}{s}+\\frac{\\sum x_i\\sum x_i}{s}}\\\\\n  &=\\frac{s\\sum x_iy_i-\\sum x_i\\sum y_i}{s\\sum x_i^2-\\sum x_i\\sum y_i}\n\\end{aligned}$\n\n\u6545\u77e5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4 $\\sum x_i y_i$\uff0c$\\sum x_i$\uff0c$\\sum y_i$ \u548c $\\sum x_i^2$\u3002\n\n\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u8981\u89e3\u51b3\u533a\u95f4\u589e\u52a0\u7684\u95ee\u9898\u4e86\u3002\n\n**2.\u533a\u95f4\u589e\u52a0\u7684\u6ce8\u610f\u4e8b\u9879**\n\n\u5176\u5b9e\u8ddf\u666e\u901a\u7684\u5206\u5757\u533a\u95f4\u589e\u52a0\u5dee\u4e0d\u591a\u3002\n\n\u4f46\u662f\u8fd9\u91cc\u8981\u7528\u5230\u4e24\u4e2a\u61d2\u6807\u8bb0\uff1a\n\n$lazyx$ \u548c $lazyy$\n\n\u5206\u522b\u4ee3\u8868 $x$ \u7684 $lazy$ \u548c $y$ \u7684 $lazy$\u3002\n\n\u5bf9\u4e8e $\\sum x_i^2$ \u548c $\\sum x_iy_i$\uff0c\u4e3a\u4e86\u51cf\u5c0f\u5e38\u6570\uff0c\u6211\u4eec\u8003\u8651 $O(1)$\u64cd\u4f5c\u3002\n\n$\\sum (x_i+s)(y_i+t)=\\sum x_i y_i+sy_i+tx_i+(r-l+1)st$\n\n$\\sum (x_i+s)^2= \\sum x_i^2+2s\\sum x_i+(r-l+1)s^2$\n\n\u7136\u540e\u518d\u66f4\u65b0 $\\sum x_i$ \u548c $\\sum y_i$\n\n\u8fd9\u91cc\u8981\u6ce8\u610f\u7ef4\u62a4\u7684\u5148\u540e\u987a\u5e8f\u3002\n\n**3.\u533a\u95f4\u66f4\u65b0\u7684\u6ce8\u610f\u4e8b\u9879**\n\n\u8ddf\u4e0a\u9762\u4e00\u6837\n\n\u6211\u4eec\u4e5f\u9700\u8981\u7528\u5230\u4e24\u4e2a\u61d2\u6807\u8bb0\n\n$layx$ \u548c $layy$\n\n\u5206\u522b\u4ee3\u8868 $x$ \u548c $y$ \u66f4\u65b0\u7684\u61d2\u6807\u8bb0\uff0c\u662f\u9700\u8981\u8986\u76d6\u7684\uff0c\u800c\u4e0d\u662f\u50cf $lazyx$ \u548c $lazyy$ \u90a3\u6837\u589e\u52a0\u3002\n\n\u540c\u6837\uff0c\u6211\u4eec\u4e5f\u9700\u8981 $O(1)$ \u7684\u64cd\u4f5c\u6765\u51cf\u5c0f\u5e38\u6570\u3002\n\n\u8fd9\u91cc\u7ed9\u51fa\u7ef4\u62a4\u987a\u5e8f\u3002\n\n\u66f4\u65b0 $\\sum x_iy_i$\uff1a\n\n- $\\sum (s+i)(t+i)=(r-l+1)st+(s+t)(l+r)(l+r-1)/2+r(r+1)(2r+1)/6-l(l-1)(2l-1)/6$\n\n\u66f4\u65b0 $\\sum x_i^2$:\n\n- $\\sum(s+i)^2=(r-l+1)s^2+s(l+r)(r-l+1)+r(r+1)(2r+1)/6-l(l-1)(2l-1)/6$\n\n\u66f4\u65b0 $\\sum x_i$:\n\n- $\\sum (s+i)=(r-l+1)s+(l+r)(r-l+1)/2$\n\n\u66f4\u65b0 $\\sum y_i$:\n\n- $\\sum (t+i)=(r-l+1)t+(l+r)(r-l+1)/2$\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u6574\u4e2a\u5757\u90fd\u66f4\u65b0\u4e86\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5757\u7684 $lazyx$ \u548c $lazyy$ \u90fd\u8981\u88ab\u6e05\u96f6\u3002\n\n\u601d\u8def\u5df2\u7ecf\u8bb2\u7684\u5dee\u4e0d\u591a\u4e86\uff0c\u5176\u5b9e\u8bf4\u767d\u4e86\u5c31\u662f\u66f4\u65b0\u7684\u5730\u65b9\u9ebb\u70e6\uff0c\u5176\u4ed6\u90fd\u662f\u677f\u5b50\uff0c\u4ee3\u7801\u5c31\u4e0d\u653e\u51fa\u6765\u4e86\uff0c\u5982\u679c\u9700\u8981\u7684\u8bdd\u6211\u518d\u66f4\u65b0\u3002",
        "postTime": 1615036503,
        "uid": 209808,
        "name": "\u94f6\u6cb3AI",
        "ccfLevel": 5,
        "title": "\u9898\u89e3 P3707  [SDOI2017]\u76f8\u5173\u5206\u6790"
    },
    {
        "content": "\u6211\u4eec\u5148\u5316\u7b80\u4e00\u4e0b\u5f0f\u5b50\n\n ![](https://cdn.luogu.com.cn/upload/pic/5759.png) \n\n\u5316\u7b80\u4e3a ![](https://cdn.luogu.com.cn/upload/pic/5761.png)\n\n\u5176\u4e2dXY=xi\\*yi,L<=i<=R\n\nXX=xi\\*xi,L<=i<=R\n\n\u4ee5\u53ca\u4e24\u4e2a\u5934\u9876\u76f4\u7ebf\u7684\u5206\u522b\u662f\u533a\u95f4\u5185x\u548cy\u7684\u5e73\u5747\u6570\n\n\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u7ebf\u6bb5\u6811\u7ef4\u62a4\u8fd9\u56db\u4e2a\u503c\n\n\u987a\u4fbf\u7ef4\u62a4\u4e00\u4e0bx\u548cy\u7684\u548c\n\n\u5bf9\u4e8e\u4ec5\u6709\u7684\u4e24\u4e2a\u533a\u95f4\u4fee\u6539\uff0c\u4e00\u4e2a\u6bd4\u4e00\u4e2a\u96be\u641e\n\n\u5047\u8bbe\u770b\u5f97\u4eba\u90fd\u4f1a\u61d2\u6807\u8bb0\uff0c\u90a3\u4e48\u6211\u4eec\u7684\u95ee\u9898\u5c31\u662f\u4e24\u4e2a\u6807\u8bb0\u7684\u76f8\u65a5\u6027\u548c\u5feb\u901f\u7ef4\u62a4\u8981\u7ef4\u62a4\u7684\u503c\n\n\u5f88\u660e\u663e2,3\u61d2\u6807\u8bb0\u90fd\u5728\u65f6\u5148\u4e0b\u7f6e3\u518d\u4e0b\u7f6e2\n\n\u6240\u4ee5\u5b8c\u6574\u533a\u95f42\u64cd\u4f5c\u65f6\u4e0d\u7528\u7ba13\u64cd\u4f5c\n\n\u5b8c\u6574\u533a\u95f43\u64cd\u4f5c\u8981\u6e05\u7a7a2\u64cd\u4f5c\n\n\u8fd8\u6709\u7ef4\u62a4\u533a\u95f4\u7684\u4e00\u4e9b\u503c\n\n\u5bf9\u4e8e2\u64cd\u4f5c\uff0cx\uff0cy\u7684\u548c\u4ee5\u53ca\u5e73\u5747\u6570\u600e\u4e48\u7ef4\u62a4\u5c31\u4e0d\u5520\u53e8\u4e86\n\n ![](https://cdn.luogu.com.cn/upload/pic/5762.png) \n\n ![](https://cdn.luogu.com.cn/upload/pic/5763.png) \n\n\u5176\u4e2dXs\u548cYs\u5206\u522b\u662f\u4fee\u6539\u524d\u533a\u95f4\u7684x\u548cy\u548c\uff0c\u5f0f\u5b50\u91cc\u7684XX\u548cXY\u4e5f\u662f\u4fee\u6539\u524d\u7684\uff0cl\u7167\u6837\u662f\u533a\u95f4\u957f\u5ea6\n\n\u5bf9\u4e8e3\u64cd\u4f5c\u5c31\u5f00\u59cb\u6709\u96be\u5ea6\u4e86\n\n ![](https://cdn.luogu.com.cn/upload/pic/5764.png) \n\nYs\u7684\u7ef4\u62a4\u4e5f\u57fa\u672c\u76f8\u540c\uff0c\u5e73\u5747\u6570\u5c31\u4e0d\u7528\u8bf4\u4e86\n\n ![](https://cdn.luogu.com.cn/upload/pic/5766.png) \n\n\u540e\u9762\u4e24\u4e2a\u8868\u793a\u5e73\u65b9\u524d\u7f00\u548c(1^2+2^2+3^2+....n^2)\n\n\u6700\u540e\u6700\u96be\u7684\u662fXY\u7684\u7ef4\u62a4\n\n ![](https://cdn.luogu.com.cn/upload/pic/5767.png) \n\n\u5176\u4e2d\u4ee5\u4e0a\u5f0f\u5b50\u91cc\u7684\u53d8\u91cf\u90fd\u662f\u4fee\u6539\u524d\u7684\n\n\u8fd9\u6837\u6211\u4eec\u8981\u6b7b\u8981\u6b7b\u7684\u6b63\u786e\u7ef4\u62a4\u51fa\u9898\u4eba\u4e71\u4fee\u6539\u4ee5\u540e\uff0c\u5c31\u80fd\u57fa\u672c\u51c6\u786e\u7684A\u6389\u6bcf\u4e2a\u6d4b\u8bd5\u70b9\u4e86\n\n\n\n\n\n\n\n\n\n\n\n\n```cpp\n#include <stdio.h>\n#include <string.h>\ntypedef double FLT;\nFLT Nx[110000],Ny[110000];\nint N,M;\ntypedef struct LTRee\n{\n    FLT XY,XX;\n    FLT Xs,Ys;\n    FLT Xb,Yb;\n    FLT Xp,Yp;\n    FLT Xt,Yt;\n    bool Sigp,Sigt;\n    int F,T,M;\n    LTRee*R,*L;\n    void MakeTree(int Fr,int To);\n    void Update();\n    void Update2(FLT s,FLT t);\n    void Update3(FLT s,FLT y);\n    void Down2();\n    void Down3();\n    void Operator2(int,int,FLT,FLT);\n    void Operator3(int,int,FLT,FLT);\n    void Queries(int,int,FLT&,FLT&,FLT&,FLT&);\n    FLT Query(int ,int);\n}LTR,*LPLTR;\ndouble GetA(FLT len,FLT xs,FLT ys,FLT xx,FLT xy)\n{\n    FLT fm,fz;\n    fz=xy-xs*ys/len;\n    fm=xx-xs*xs/len;\n    return fz/fm;\n}\nvoid LTR::MakeTree(int Fr,int To)\n{\n    F=Fr,T=To;\n    M=(F+T)>>1;\n    Xp=Yp=Xt=Yt=Sigt=Sigp=0;\n    if(F==T)\n    {\n        Xs=Xb=Nx[F];\n        Ys=Yb=Ny[F];\n        XY=Xs*Ys;\n        XX=Xs*Xs;\n        return;\n    }\n    L=new LTR;\n    R=new LTR;\n    L->MakeTree(Fr,M);\n    R->MakeTree(M+1,To);\n    Update();\n}\nvoid LTR::Update()\n{\n    Xs=L->Xs+R->Xs;\n    Ys=L->Ys+R->Ys;\n    Xb=Xs/(R-L+1);\n    Yb=Ys/(R-L+1);\n    XY=L->XY+R->XY;\n    XX=L->XX+R->XX;\n}\nvoid LTR::Update2(FLT s,FLT t)\n{\n    XX=XX+2*s*Xs+s*s*(T-F+1);\n    XY=XY+t*Xs+s*Ys+t*s*(T-F+1);\n    Xs+=(T-F+1)*s;\n    Ys+=(T-F+1)*t;\n    Xb+=s;\n    Yb+=t;\n    Xp+=s;\n    Yp+=t;\n    Sigp=1;\n}\nvoid LTR::Update3(FLT s,FLT t)\n{\n    FLT bl=T-F+1;\n    Xs=bl*(s+F-1)+(bl+1)*bl/2;\n    Ys=bl*(t+F-1)+(bl+1)*bl/2;\n    Xb=Xs/bl;\n    Yb=Ys/bl;\n    bl=s+T;\n    XX=((2*bl+3)*bl+1)*bl;\n    bl=s+F-1;\n    XX-=((2*bl+3)*bl+1)*bl;\n    XX/=6;\n    bl=T-F+1;\n    XY=bl*F*F+F*((s+t)*bl+bl*(bl-1));\n    XY=XY+s*t*bl+(s+t)*(bl*(bl-1))/2+((2*bl+1)*(bl-1)+1)*(bl-1)/6;\n    Xt=s;\n    Yt=t;\n    Sigt=1;\n}\nvoid LTR::Down2()\n{\n    L->Operator2(F,M,Xp,Yp);\n    R->Operator2(M+1,T,Xp,Yp);\n    Xp=Yp=0;\n    Sigp=0;\n}\nvoid LTR::Down3()\n{\n    L->Operator3(F,M,Xt,Yt);\n    R->Operator3(M+1,T,Xt,Yt);\n    Xt=Yt=0;\n    Sigt=0;\n}\nvoid LTR::Operator2(int Fr,int To,FLT s,FLT t)\n{\n    if(F==Fr&&T==To)\n    {\n        Update2(s,t);\n        return;\n    }\n    if(Sigt)\n        Down3();\n    if(Sigp)\n        Down2();\n    if(To<=M)\n        L->Operator2(Fr,To,s,t);\n    else if(Fr>M)\n        R->Operator2(Fr,To,s,t);\n    else\n    {\n        L->Operator2(Fr,M,s,t);\n        R->Operator2(M+1,To,s,t);\n    }\n    Update();\n}\nvoid LTR::Operator3(int Fr,int To,FLT s,FLT t)\n{\n    if(F==Fr&&T==To)\n    {\n        if(Sigp)\n        {\n            Sigp=0;\n            Xp=Yp=0;\n        }\n        Update3(s,t);\n        return;\n    }\n    if(Sigt)\n        Down3();\n    if(Sigp)\n        Down2();\n    if(To<=M)\n        L->Operator3(Fr,To,s,t);\n    else if(Fr>M)\n        R->Operator3(Fr,To,s,t);\n    else\n    {\n        L->Operator3(Fr,M,s,t);\n        R->Operator3(M+1,To,s,t);\n    }\n    Update();\n}\nvoid LTR::Queries(int Fr,int To,FLT&xs,FLT&ys,FLT&xx,FLT&xy)\n{\n    if(F==Fr&&T==To)\n    {\n        xs=Xs;\n        ys=Ys;\n        xx=XX;\n        xy=XY;\n        return;\n    }\n    if(Sigt)\n        Down3();\n    if(Sigp)\n        Down2();\n    if(To<=M)\n        L->Queries(Fr,To,xs,ys,xx,xy);\n    else if(Fr>M)\n        R->Queries(Fr,To,xs,ys,xx,xy);\n    else\n    {\n        FLT a,b,c,d;\n        L->Queries(Fr,M,xs,ys,xx,xy);\n        R->Queries(M+1,To,a,b,c,d);\n        xs+=a;\n        ys+=b;\n        xx+=c;\n        xy+=d;\n    }\n}\nFLT LTR::Query(int Fr,int To)\n{\n    double xs,ys,xx,xy;\n    Queries(Fr,To,xs,ys,xx,xy);\n    return GetA(To-Fr+1,xs,ys,xx,xy);\n}\nLPLTR Root;\nvoid Input()\n{\n    scanf(\"%d %d\",&N,&M);\n    int wi;\n    for(wi=1;wi<=N;++wi)\n        scanf(\"%lf\",Nx+wi);\n    for(wi=1;wi<=N;++wi)\n        scanf(\"%lf\",Ny+wi);\n    Root=new LTR;\n    Root->MakeTree(1,N);\n}\nvoid AC()\n{\n    int wi,op,F,T;\n    FLT s,t;\n    for(wi=1;wi<=M;++wi)\n    {\n        scanf(\"%d %d %d\",&op,&F,&T);\n        if(op^1)\n            scanf(\"%lf %lf\",&s,&t);\n        if(op==1)printf(\"%.9lf\\n\",Root->Query(F,T));\n        if(op==2)Root->Operator2(F,T,s,t);\n        if(op==3)Root->Operator3(F,T,s,t);\n    }\n}\nint main()\n{\n    Input();\n    AC();\n    return 0;\n}\n```",
        "postTime": 1496063711,
        "uid": 25508,
        "name": "Night_Aurora",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P3707 \u3010[SDOI2017]\u76f8\u5173\u5206\u6790\u3011"
    },
    {
        "content": "# P3707 \u9898\u89e3\n\n- [\u9898\u76ee\u94fe\u63a5](https://www.luogu.com.cn/problem/P3707)\n\n- [\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c](https://www.luogu.com.cn/blog/453059/solution-p3707)\n\n2023/1/1 upd\uff1a\u624d\u53d1\u73b0\u5199\u9519\u4e86\u9898\u53f7\uff0c\u4fee\u6539\u540e\u4e8e\u662f\u518d\u4ea4\u4e00\u904d\u3002\n\n## 1. \u5206\u6790\n\n\u62ff\u5230\u8fd9\u4e2a\u9898\u6211\u4eec\u770b\u5230\u9898\u76ee\u8981\u652f\u6301\u533a\u95f4\u4fee\u6539\u53ca\u533a\u95f4\u67e5\u8be2\uff0c\u8003\u8651\u7ebf\u6bb5\u6811\u3002\n\n## 2. \u63a8\u5f0f\u5b50\n\n### 2.1 \u4e0d\u5e26\u4fee\u6539\n\n\u5148\u63a8\u4e00\u4e0b\u7b54\u6848\u5f0f\u5b50\uff08\u4ee5\u4e0b\u7528 $\\sum$ \u4ee3\u66ff $\\sum_{i=L}^R$\uff0c\u4ee5 $n$ \u4ee3\u66ff $(r-l+1)$\uff09\uff1a\n\n$$a=\\frac{\\sum (x_i-\\overline x)(y_i-\\overline y)}{\\sum(x_i-\\overline x)^2}$$\n\n\u5bf9\u5206\u5b50\u548c\u5206\u6bcd\u5206\u522b\u8ba1\u7b97\uff1a\n\n$$\\begin{aligned}\\text{\u5206\u5b50}&=\\sum(x_i-\\overline x)(y_i-\\overline y)\\\\&=\\sum x_i y_i-\\overline x\\sum y_i-\\overline y\\sum x_i+n(\\overline x\\cdot\\overline y)\\\\&=\\sum x_i y_i-\\frac 1 n\\sum x_i\\sum y_i-\\frac 1 n\\sum y_i\\sum x_i+\\frac n {n^2}\\sum x_i\\sum y_i\\\\&=\\sum x_i y_i-\\frac 1 n\\sum x_i\\sum y_i\\end{aligned}$$\n\n$$\\begin{aligned}\\text{\u5206\u6bcd}&=\\sum(x_i-\\overline x)^2\\\\&=\\sum x_i^2-2\\overline x\\sum x_i+n\\cdot(\\overline x)^2\\\\&=\\sum x_i^2-\\frac 2 n(\\sum x_i)^2+\\frac n {n^2}(\\sum x_i)^2\\\\&=\\sum x_i^2-\\frac 1 n(\\sum x_i)^2\\end{aligned}$$\n\n\u7efc\u4e0a\u6240\u8ff0\uff0c\u6211\u4eec\u9700\u8981\u7ef4\u62a4 $\\sum x_i y_i,\\sum x_i^2,\\sum x_i,\\sum y_i$ \u7684\u503c\u3002\n\n### 2.2 \u5e26\u4fee\u6539\n\n#### 2.2.1 \u533a\u95f4\u52a0\n\n\u9996\u5148\u7ef4\u62a4\u533a\u95f4\u61d2\u6807\u8bb0 `tagx` \u548c `tagy`\uff0c\u5206\u522b\u8868\u793a $x$ \u548c $y$ \u52a0\u7684\u503c\u3002\n\n\u7b80\u5355\u63a8\u4e00\u4e0b\u4fee\u6539\u540e\u7684\u5f0f\u5b50\uff1a\n\n$$\\begin{aligned}\\sum(x_i+s)(y_i+t)&=\\sum x_i y_i+s\\sum y_i+t\\sum x_i+nst\\\\\\sum (x_i+s)^2&=\\sum x_i^2+2s\\sum x_i+ns^2\\\\\\sum (x_i+s)&=\\sum x_i+ns\\\\\\sum (y_i+t)&=\\sum y_i+nt\\end{aligned}$$\n\n\u61d2\u6807\u8bb0\u81ea\u5df1\u52a0\u4e00\u4e0b\u5c31\u597d\u4e86\u3002\n\n\u4e0a\u4ee3\u7801~\n```cpp\ninline void pushadd(int o,int l,int r,long double s,long double t)\n{\n    tagx[o]+=s,tagy[o]+=t;\n    int len=r-l+1;\n    xy[o]+=s*y[o]+t*x[o]+len*s*t;\n    x2[o]+=2*s*x[o]+len*s*s;\n    x[o]+=len*s;\n    y[o]+=len*t;\n}\n```\n\n#### 2.2.2 \u533a\u95f4\u8d4b\u503c\n\n\u53ef\u4ee5\u53d1\u73b0\u8be5\u64cd\u4f5c\u53ef\u4ee5\u5206\u6210\u4e24\u4e2a\u64cd\u4f5c\uff1a\n\n1. $x_i\\leftarrow i,y_i\\leftarrow i$\n1. $x_i\\leftarrow x_i+s,y_i\\leftarrow y_i+t$\n\n\u7b2c 2 \u90e8\u5206\u5c31\u662f 2.2.1 \u63d0\u5230\u7684\u533a\u95f4\u52a0\uff0c\u73b0\u5728\u53ea\u8981\u5904\u7406\u7b2c 1 \u90e8\u5206\u3002\n\n\u4e5f~~\u7b80\u5355~~\u63a8\u4e00\u4e0b\u5f0f\u5b50\uff1a\n\n$$\\begin{aligned}\\sum x_i y_i&=\\sum x_i^2=\\sum i^2=f(r)-f(l-1)\\\\\\sum x_i&=\\sum y_i=\\frac {(l+r)(r-l+1)} 2\\end{aligned}$$\n\n\u5176\u4e2d $f(x)=\\sum\\limits_{i=1}^x i^2=\\dfrac {x(x+1)(2x+1)} 6$\uff0c\u8bfb\u8005\u81ea\u8bc1\u4e0d\u96be\u3002\n\n\u8fd8\u662f\u653e\u4e00\u4e2a\u8bc1\u660e[\u94fe\u63a5](https://www.luogu.com.cn/paste/bzlo6mej)\u5427 QAQ\n\n\u8fd9\u90e8\u5206\u7684\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\ninline int f(int x)\n{\n\treturn (x*(x+1)>>1)*(x<<1|1)/3;//\u8ff7\u4e4b\u5361\u5e38\n}\ninline int get(int l,int r)\n{\n\treturn f(r)-f(l-1);\n}\ninline void pushcov(int o,int l,int r)\n{\n    cov[o]=1;\n    tagx[o]=tagy[o]=0;\n    xy[o]=x2[o]=get(l,r);\n    x[o]=y[o]=((l+r)*(r-l+1))/2.0;\n}\n```\n\n## 3. \u7ec6\u8282\n\n\u56e0\u4e3a\u8d4b\u503c\u5c31\u76f4\u63a5\u8d4b\u503c\uff0c\u6240\u4ee5\u8981\u628a\u4e4b\u524d\u7684\u52a0\u6cd5\u61d2\u6807\u8bb0\u5168\u90e8\u6e05\u7a7a\u3002\n\n\u540c\u65f6\uff0c\u8981\u5148\u6267\u884c\u8d4b\u503c\uff0c\u518d\u6267\u884c\u533a\u95f4\u52a0\u3002\n\n## 4. \u4ee3\u7801\n\n[\u4e91\u526a\u5207\u677f](https://www.luogu.com.cn/paste/9pqkqj2s)",
        "postTime": 1669378574,
        "uid": 453059,
        "name": "kbtyyds",
        "ccfLevel": 5,
        "title": "P3707 \u9898\u89e3"
    },
    {
        "content": "## \u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u9898\u76ee\u6240\u9700\u7684\u6570\u503c\n\n\u9996\u5148\u62c6\u4e00\u4e0b\u5f0f\u5b50\uff1a\n$$\\text{\u5206\u5b50} = {\\sum_{i=L}^R (x_i-\\overline{x})(y_i-\\overline{y})}=  {\\sum_{i=L} ^R (x_iy_i-x_i\\overline{y}-y_i\\overline{x}+\\overline{x}\\overline{y})}$$\n\n$$\\text{\u5206\u6bcd} = \\sum _{i=L} ^R (x_i -\\overline{x})^2 = \\sum _{i=L} ^R (x_i^2 + \\overline{x}^2 - 2x_i\\overline{x})  $$\n\n\u7531\u6b64\u53ef\u89c1\uff0c\u6211\u4eec\u8981\u7ef4\u62a4 $x_iy_i$ \u3001$x_i$ \u3001$y_i$ \u3001$x_i^2$ \u7684\u548c\u3002\u5176\u4ed6\u7684\u5e73\u5747\u503c\u7684\u548c\u90fd\u53ef\u4ee5\u7528\u8fd9\u4e9b\u503c\u8ba1\u7b97\u51fa\u6765\u3002\n\n------------\n\n### \u7ef4\u62a4 $x_i$ \u3001$y_i$ \u7684\u548c\n\n\u89c1 [P3372 \u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811 1](https://www.luogu.com.cn/problem/P3372)\u3002\n\n### \u7ef4\u62a4 $x_iy_i$ \u7684\u548c\n\n$${\\sum_{i=L}^R (x_i+S)(y_i+T)}={\\sum_{i=L}^R (x_iy_i+x_iS+y_iT+ST)}$$\n\n\u6240\u4ee5\u6211\u4eec\u6bcf\u6b21\u66f4\u6539\u503c\u7684\u65f6\u5019\u548c\u7ef4\u62a4 $x_i$ \u3001$y_i$ \u7684\u548c\u7684\u6570\u7ec4\u505a\u4e00\u4e2a\u8054\u52a8\uff0c\u52a0\u4e0a $S$ \u548c $T$ \u4e0e\u5bf9\u5e94\u4f4d\u7f6e $x_i$ \u3001$y_i$ \u7684\u548c\u7684\u79ef\uff0c\u518d\u52a0\u4e0a $ST$ \u4e58\u4e0a\u533a\u95f4\u957f\u5ea6\u3002\n\n### \u7ef4\u62a4 $x_i^2$ \u7684\u548c\n\n\u5176\u5b9e\u5f88\u7c7b\u4f3c [P1471 \u65b9\u5dee](https://www.luogu.com.cn/problem/P1471) \u3002\n\n$${\\sum_{i=L}^R (x_i+S)^2}={\\sum_{i=L}^R (x_i^2+S^2+2Sx_i)}$$\n\n\u66f4\u6539\u503c\u7684\u65f6\u5019\u548c\u7ef4\u62a4 $x_i$ \u7684\u548c\u7684\u6570\u7ec4\u505a\u4e00\u4e2a\u8054\u52a8\uff0c\u52a0\u4e0a\u4e24\u500d\u7684 $S$ \u4e0e\u5bf9\u5e94\u4f4d\u7f6e $x_i$ \u7684\u548c\u7684\u79ef\uff0c\u518d\u52a0\u4e0a $S^2$ \u4e58\u4e0a\u533a\u95f4\u957f\u5ea6\u3002\n\n### \u5173\u4e8e\u8986\u76d6\u64cd\u4f5c\n\n\u6709\u8fd9\u4e48\u4e00\u4e2a\u516c\u5f0f\uff1a\n\n$${\\sum_{i=1}^n i^2}=\\frac{n(n+1)(2n+1)}{6} $$\n\n$x_i$ \u3001 $y_i$ \u7684\u548c\u76f4\u63a5\u901a\u8fc7\u7b49\u5dee\u5e8f\u5217\u6c42\u548c\u7684\u65b9\u5f0f\u8ba1\u7b97\u3002  \n$x_i^2$ \u7684\u548c\u76f4\u63a5\u7528 $r$ \u7684\u524d\u7f00\u5e73\u65b9\u548c\u51cf\u53bb $(l-1)$ \u7684\u524d\u7f00\u5e73\u65b9\u548c\u3002  \n\u8981\u7ef4\u62a4 $x_iy_i$ \u7684\u548c\uff0c\u6b64\u65f6 $x_i$ \u662f\u7b49\u4e8e $y_i$ \u7684\uff0c\u76f4\u63a5\u7528\u516c\u5f0f\u8ba1\u7b97\u5373\u53ef\u3002\n\n\n------------\n\n### \u4ee3\u7801\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#pragma region IO\u4f18\u5316_fread\n#define buffer_in_size 100000\n#define buffer_out_size 100\nint ccnt1 = -1;\nchar bufferin[buffer_in_size];\ninline void Finit() {\n    fread(bufferin, sizeof(char), buffer_in_size, stdin);\n}\ninline char Fgetchar() {\n    if ((++ccnt1) == buffer_in_size)\n        Finit(), ccnt1 = 0;\n    return bufferin[ccnt1];\n}\nchar ch;\ntemplate <typename T = int>\nT read() {\n    T x = 0, f = 1;\n    ch = Fgetchar();\n    while (ch < '0' || ch > '9') {\n        if (ch == '-')\n            f = -1;\n        ch = Fgetchar();\n    }\n    while (ch >= '0' && ch <= '9') {\n        x = (x * 10) + (ch ^ 48);\n        ch = Fgetchar();\n    }\n\n    return x * f;\n}\n#undef buffer_in_size\n#define getchar() Fgetchar()\n#pragma endregion\n\nconst int maxn = 100100;\n\n#define lson (o << 1)\n#define rson (o << 1 | 1)\n\nnamespace Seg {\n    struct Node {\n        double sumx, sumy, sumxy, sumsqu;\n        Node() : sumx(0.0), sumy(0.0), sumxy(0.0), sumsqu(0.0) {}\n        Node(const double &_sx, const double &_sy, const double &_sxy, const double &_squ)\n            : sumx(_sx), sumy(_sy), sumxy(_sxy), sumsqu(_squ) {}\n        void operator+=(const Node &tp) {\n            sumx += tp.sumx, sumy += tp.sumy, sumxy += tp.sumxy, sumsqu += tp.sumsqu;\n        }\n    } node[maxn << 2];\n\n    struct Tag {\n        double s, t;\n        Tag() : s(0.0), t(0.0) {}\n        Tag(const double &_s, const double &_t) : s(_s), t(_t) {}\n        void operator+=(const Tag &tp) {\n            s += tp.s, t += tp.t;\n        }\n    } tag[maxn << 2], becover[maxn << 2];\n\n    double *x, *y;\n    int n;\n\n    inline double squsum(const double &to) {\n        return to * (to + 1.0) * (to * 2.0 + 1.0) / 6.0;\n    }\n\n    inline void updatepos(const int &o) {\n        node[o] = {node[lson].sumx + node[rson].sumx,\n                   node[lson].sumy + node[rson].sumy,\n                   node[lson].sumxy + node[rson].sumxy,\n                   node[lson].sumsqu + node[rson].sumsqu};\n    }\n\n    inline void calc(const int &o, const int &l, const int &r, const double &s, const double &t) {\n        const double len = (r - l + 1);\n        node[o] = {\n            node[o].sumx + len * s,\n            node[o].sumy + len * t,\n            node[o].sumxy + node[o].sumx * t + node[o].sumy * s + s * t * len,\n            node[o].sumsqu + 2 * node[o].sumx * s + s * s * len};\n    }\n\n    inline void calc_cover(const int &o, const int &l, const int &r, const double &s, const double &t) {\n        const double len = (r - l + 1);\n        const double squ = squsum(r) - squsum(l - 1);\n        const double sum = (l + r) * len / 2;\n        node[o] = {\n            sum + s * len,\n            sum + t * len,\n            squ + sum * (s + t) + s * t * len,\n            squ + sum * s * 2 + s * s * len};\n    }\n\n    void build(int o, int l, int r) {\n        if (l == r) {\n            node[o] = {\n                x[l], y[l], x[l] * y[l], x[l] * x[l]};\n            return;\n        }\n\n        const int mid = (l + r) >> 1;\n        build(lson, l, mid);\n        build(rson, mid + 1, r);\n        updatepos(o);\n    }\n\n    void pushdown(int o, int l, int r) {\n        if (becover[o].s != 0.0 || becover[o].t != 0.0) {\n            const int mid = (l + r) >> 1;\n            tag[lson] = tag[rson] = Tag(0.0, 0.0);\n            becover[lson] = becover[rson] = becover[o];\n            calc_cover(lson, l, mid, becover[o].s, becover[o].t);\n            calc_cover(rson, mid + 1, r, becover[o].s, becover[o].t);\n            becover[o] = Tag(0.0, 0.0);\n        }\n\n        if (tag[o].s != 0.0 || tag[o].t != 0.0) {\n            const int mid = (l + r) >> 1;\n            tag[lson] += tag[o];\n            calc(lson, l, mid, tag[o].s, tag[o].t);\n            tag[rson] += tag[o];\n            calc(rson, mid + 1, r, tag[o].s, tag[o].t);\n            tag[o] = Tag(0.0, 0.0);\n        }\n    }\n\n    void update(int o, int l, int r, const int &s, const int &t, const double &S, const double &T) {\n        if (s <= l && r <= t) {\n            tag[o] += Tag(S, T);\n            calc(o, l, r, S, T);\n            return;\n        }\n\n        pushdown(o, l, r);\n        const int mid = (l + r) >> 1;\n\n        if (s <= mid)\n            update(lson, l, mid, s, t, S, T);\n\n        if (t > mid)\n            update(rson, mid + 1, r, s, t, S, T);\n\n        updatepos(o);\n    }\n\n    Node query(int o, int l, int r, const int &s, const int &t) {\n        if (s <= l && r <= t)\n            return node[o];\n\n        pushdown(o, l, r);\n        const int mid = (l + r) >> 1;\n        Node retn;\n\n        if (s <= mid)\n            retn += query(lson, l, mid, s, t);\n        if (t > mid)\n            retn += query(rson, mid + 1, r, s, t);\n\n        return retn;\n    }\n\n    void cover(int o, int l, int r, const int &s, const int &t, const double &S, const double &T) {\n        if (s <= l && r <= t) {\n            tag[o] = Tag(0.0, 0.0);\n            becover[o] = Tag(S, T);\n            calc_cover(o, l, r, S, T);\n            return;\n        }\n\n        pushdown(o, l, r);\n        const int mid = (l + r) >> 1;\n\n        if (s <= mid)\n            cover(lson, l, mid, s, t, S, T);\n        if (t > mid)\n            cover(rson, mid + 1, r, s, t, S, T);\n\n        updatepos(o);\n    }\n}\n\nint n, m;\n\ndouble x[maxn], y[maxn];\n\nint main() {\n    Finit();\n    n = read(), m = read();\n\n    for (int i = 1; i <= n; i++)\n        x[i] = read<int>();\n\n    for (int i = 1; i <= n; i++)\n        y[i] = read<int>();\n\n    Seg::n = n, Seg::x = x, Seg::y = y;\n    Seg::build(1, 1, n);\n\n    while (m--) {\n        const int op = read();\n\n        switch (op) {\n        case 1: {\n            const int l = read(), r = read();\n            const Seg::Node retn = Seg::query(1, 1, n, l, r);\n            const double xy = retn.sumxy;\n            const double squ = retn.sumsqu;\n            const double sx = retn.sumx, sy = retn.sumy;\n            const double len = r - l + 1;\n            const double avgx = sx / len, avgy = sy / len;\n\n            const double up = xy - sx * avgy - sy * avgx + avgx * avgy * len;\n            const double down = squ + avgx * avgx * len - 2 * sx * avgx;\n\n            printf(\"%lf\\n\", up / down);\n            break;\n        }\n\n        case 2: {\n            const int l = read(), r = read(), s = read(), t = read();\n            Seg::update(1, 1, n, l, r, s, t);\n            break;\n        }\n\n        case 3: {\n            const int l = read(), r = read(), s = read(), t = read();\n            Seg::cover(1, 1, n, l, r, s, t);\n            break;\n        }\n        }\n    }\n\n    return 0;\n}\n```\n\n### \u5199\u5728\u6700\u540e\n\n\u8bb0\u5f97\u540c\u65f6\u66f4\u65b0\u540c\u4e2a\u8282\u70b9\u6240\u6709\u7684\u503c\uff0c\u8981\u4e0d\u7136\u5f88\u5bb9\u6613\u4f1a\u51fa\u73b0\u4f9d\u8d56\u6027\u95ee\u9898\u3002  \n\u8bb0\u5f97\u5148\u66f4\u65b0 $x_iy_i$ \u7684\u548c\u548c $x_i^2$ \u7684\u548c\uff0c\u56e0\u4e3a\u5b83\u4eec\u4f9d\u8d56\u7684\u662f\u4fee\u6539\u524d\u7684 $x_i$ \u3001$y_i$ \u7684\u548c\u3002",
        "postTime": 1646384161,
        "uid": 304242,
        "name": "a2123228",
        "ccfLevel": 6,
        "title": "P3707 [SDOI2017]\u76f8\u5173\u5206\u6790 \u9898\u89e3"
    },
    {
        "content": "\u4e0b\u9762\u5410\u69fd\u51e0\u53e5\n\n\u88ab\u8fd9\u9053\u9898\u641e\u7684\u5dee\u70b9\u7206\u70b8......\u62ff\u4e860\u5206\u4e4b\u540e\u4e0d\u77e5\u9053\u600e\u4e48\u529e,\u778e\u641e\u4e86\u534a\u5929......\u4e4b\u540e\u53d1\u73b0\u5fc5\u987b\u8981\u7528double,\u4e4b\u540e\u6539\u4e86\u4e00\u4f1adouble,\u7136\u540e\u4e00\u76f4\u8fc7\u4e0d\u53bb,\u4e4b\u540e\u542c\u8bf4\u80fd__int128\u6c34\u8fc7......\n\n\u8fdb\u5165\u6b63\u9898.\n\n\u9996\u5148,\u7ebf\u6bb5\u6811\u662f\u5e72\u4ec0\u4e48\u7684?\n\n\u7ef4\u62a4**\u5177\u6709\u533a\u95f4\u53ef\u52a0\u6027\u7684\u5e8f\u5217\u95ee\u9898\u7684\u533a\u95f4\u4fee\u6539,\u533a\u95f4\u67e5\u8be2**\n\n\u7136\u540e\u770b\u4e00\u770b\u90a3\u4e2a\u4ee4\u4eba\u7a92\u606f\u7684\u5f0f\u5b50$\\frac{\\sum_{i=L}^{R}(x_i-\\overline{x})(y_i-\\overline{y})}{\\sum_{i=L}^{R}(x_i-\\overline{x})^2}$.\n\n\u4e00\u773c\u5c31\u77e5\u9053**\u4e0d**\u6ee1\u8db3\u533a\u95f4\u53ef\u52a0\u6027,\u4e8e\u662f\u5c31\u5f00\u59cb\u4e00\u6ce2\u9a9a\u64cd\u4f5c,\u628a\u8fd9\u4e2a\u5f0f\u5b50\u7528**\u6ee1\u8db3\u533a\u95f4\u53ef\u52a0\u6027\u7684\u4e1c\u897f\u8868\u8fbe\u51fa\u6765**\n\n\u539f\u5f0f=$\\frac{\\sum_{i=L}^{R}(x_iy_i-\\overline{x}y_i-\\overline{y}x_i+\\overline{x}\\overline{y})}{\\sum_{i=L}^{R}(x_i^2-2\\overline{x}\\sum_{i=L}^{R}x_i+\\sum_{i=L}^{R}{\\overline{x}^2})}$\n\n\u5176\u4e2d$\\overline{x},\\overline{y}$\u90fd\u662f~~\u7092\u9e21\u5bb9\u6613\u5904\u7406\u7684~~\u5e38\u6570,\u5269\u4e0b\u7684\u5c31\u6709\u533a\u95f4\u53ef\u52a0\u6027\u4e86.\n\n\u90a3\u4e48\u53ea\u9700\u8981\u7ef4\u62a4$\\sum_{i=L}^{R}x_i,\\sum_{i=L}^{R}y_i,\\sum_{i=L}^{R}x_iy_i,\\sum_{i=L}^{R}x_i^2$\u5c31\u53ef\u4ee5\u4e86\n\n\u533a\u95f4\u52a0\u65b9\u6cd5\u4e0d\u96be,\u5176\u4ed6\u7684\u9898\u89e3\u4e5f\u6709\u63d0\u8fc7,\u5c31\u4e0d\u518d\u8d58\u8ff0\u4e86......\n\n\u4e3b\u8981\u662f\u533a\u95f4\u8d4b\u503c\u64cd\u4f5c.\n\n\u9996\u5148\u662f\u4e00\u4e2a\u516c\u5f0f:$1^2+2^2+3^2......+n^2=\\frac{n(n+1)(2n+1)}{6}$\n\n\u8bc1\u660e\u5982\u4e0b:\n\n\u9996\u5148, \u5f53$n=1$\u65f6\u4e0d\u96be\u8bc1\u660e.\n\n\u5bf9\u4e8e$\u2200n>1$$n(n+1)(2n+1)-(n-1)n(2n-1)=6n^2$\n\n\u7136\u540e......\u5c31\u6ca1\u6709\u7136\u540e\u4e86......\n\n\u5148\u5e72\u6389tag.\n\n\u4e4b\u540e\u628a\u64cd\u4f5c\u62c6\u5206\u6210\u4e24\u4e2a,\u4e00\u4e2a\u662f\u8d4b\u503c\u4e3a[l,r],\u53e6\u4e00\u4e2a\u662f(+s,+t),\u4e5f\u5c31\u662f\u7b2c\u4e00\u4e2a\u64cd\u4f5c\n\n\u8fd9\u9898\u4e0b\u4f20\u6807\u8bb0\u5176\u5b9e\u6ca1\u6709\u60f3\u8c61\u4e2d\u7684\u90a3\u4e48\u96be,\u4e00\u5b9a\u8981\u8bb0\u4f4f:\u7ebf\u6bb5\u6811\u7684\u503c\u4e00\u5b9a\u662f\u6b63\u786e\u7684,\u6253\u6807\u65f6\u64cd\u4f5c.\n\n\u4e0b\u9762\u662f~~\u7b80\u77ed\u7684~~\u4ee3\u7801\n\n```cpp\n#include <iomanip>\n#include <iostream>\n#include <tuple>\n#define mid ((l + r) >> 1)\nusing namespace std;\ntypedef tuple<__int128, __int128, __int128, __int128> dat; //x,y,xy,x^2\ndat tree[400005];\n__int128 atx[400005], aty[400005], upd[400005], aa[100005], ab[100005];\ndat add(dat a, dat b) { return dat(get<0>(a) + get<0>(b), get<1>(a) + get<1>(b), get<2>(a) + get<2>(b), get<3>(a) + get<3>(b)); }\nvoid w(__int128 x)\n{\n\tif (x < 0)\n\t\tputchar('-'), x = -x;\n\tif (x >= 10)\n\t\tw(x / 10);\n\tputchar(x % 10 + 48);\n}\ninline char gc()\n{\n\tstatic char bb[1000000], *s = bb, *t = bb;\n\treturn s == t && (t = (s = bb) + fread(bb, 1, 1000000, stdin), s == t) ? EOF : *s++;\n}\ninline __int128 read()\n{\n\tint x = 0, w = 1;\n\tchar ch = gc();\n\twhile (ch < 48)\n\t\tw = ((ch == '-') ? -1 : 1), ch = gc();\n\twhile (ch >= 48)\n\t\tx = x * 10 + ch - 48, ch = gc();\n\treturn x * w;\n}\nvoid push_up(__int128 x) { tree[x] = add(tree[x << 1], tree[x << 1 | 1]); }\nvoid fxa(__int128 x, __int128 a, __int128 b, __int128 l, __int128 r)\n{\n\tatx[x] += a, aty[x] += b;\n\tget<3>(tree[x]) += 2 * a * get<0>(tree[x]) + (r - l + 1) * a * a;\n\tget<2>(tree[x]) += a * get<1>(tree[x]) + b * get<0>(tree[x]) + a * b * (r - l + 1);\n\tget<1>(tree[x]) += (r - l + 1) * b, get<0>(tree[x]) += (r - l + 1) * a;\n}\nvoid fxb(__int128 x, __int128 l, __int128 r)\n{\n\tupd[x] = 1, atx[x] = aty[x] = 0;\n\tget<0>(tree[x]) = get<1>(tree[x]) = ((l + r) * (r - l + 1)) >> 1, get<2>(tree[x]) = get<3>(tree[x]) = (r * (r + 1) * ((r << 1) + 1) - (l - 1) * l * ((l << 1) - 1)) / 6;\n}\nvoid build(__int128 id, __int128 l, __int128 r)\n{\n\tif (l == r)\n\t\ttree[id] = dat(aa[l], ab[l], aa[l] * ab[l], aa[l] * aa[l]);\n\telse\n\t\tbuild(id << 1, l, mid), build(id << 1 | 1, mid + 1, r), push_up(id);\n}\nvoid push_down(__int128 id, __int128 l, __int128 r)\n{\n\tif (upd[id])\n\t\tfxb(id << 1, l, mid), fxb(id << 1 | 1, mid + 1, r);\n\tfxa(id << 1, atx[id], aty[id], l, mid), fxa(id << 1 | 1, atx[id], aty[id], mid + 1, r), atx[id] = aty[id] = 0;\n\tupd[id] = atx[id] = aty[id] = 0;\n}\nvoid add(__int128 id, __int128 l, __int128 r, __int128 s, __int128 e, __int128 a, __int128 b)\n{\n\tif (e < l || s > r)\n\t\treturn;\n\tif (s <= l && r <= e)\n\t\tfxa(id, a, b, l, r);\n\telse\n\t\tpush_down(id, l, r), add(id << 1, l, mid, s, e, a, b), add(id << 1 | 1, mid + 1, r, s, e, a, b), push_up(id);\n}\nvoid set(__int128 id, __int128 l, __int128 r, __int128 s, __int128 e, __int128 a, __int128 b)\n{\n\tif (e < l || s > r)\n\t\treturn;\n\tif (s <= l && r <= e)\n\t\tfxb(id, l, r), fxa(id, a, b, l, r);\n\telse\n\t\tpush_down(id, l, r), set(id << 1, l, mid, s, e, a, b), set(id << 1 | 1, mid + 1, r, s, e, a, b), push_up(id);\n}\ndat query(__int128 id, __int128 l, __int128 r, __int128 s, __int128 e)\n{\n\tif (e < l || s > r)\n\t\treturn dat(0, 0, 0, 0);\n\tif (s <= l && r <= e)\n\t\treturn tree[id];\n\telse\n\t{\n\t\tpush_down(id, l, r);\n\t\treturn add(query(id << 1, l, mid, s, e), query(id << 1 | 1, mid + 1, r, s, e));\n\t}\n}\n__int128 n, m;\nint main()\n{\n\tn = read(), m = read();\n\tfor (__int128 i = 1; i <= n; i++)\n\t\taa[i] = read();\n\tfor (__int128 i = 1; i <= n; i++)\n\t\tab[i] = read();\n\tbuild(1, 1, n);\n\tfor (__int128 i = 1; i <= m; i++)\n\t{\n\t\t__int128 o, x, y, a, b;\n\t\to = read();\n\t\tif (o == 1)\n\t\t{\n\t\t\tx = read(), y = read();\n\t\t\tdat ans = query(1, 1, n, x, y);\n\t\t\tcout << fixed << setprecision(15) << (get<2>(ans) - (long double)(get<0>(ans) * get<1>(ans)) / (y - x + 1)) / (long double)(get<3>(ans) - (long double)(get<0>(ans) * get<0>(ans)) / (y - x + 1)) << endl;\n\t\t}\n\t\tif (o == 2)\n\t\t\tx = read(), y = read(), a = read(), b = read(), add(1, 1, n, x, y, a, b);\n\t\tif (o == 3)\n\t\t\tx = read(), y = read(), a = read(), b = read(), set(1, 1, n, x, y, a, b);\n\t}\n}\n```\n\n",
        "postTime": 1545399772,
        "uid": 38485,
        "name": "Erina",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3707 \u3010[SDOI2017]\u76f8\u5173\u5206\u6790\u3011"
    },
    {
        "content": "\u5148\u5316\u5f0f\u5b50\u3002\n\n\n$$a=\\frac {\\sum \\_{i=L} ^R (x\\_i- \\overline x)(y\\_i- \\overline y)} {\\sum \\_{i=L} ^R (x\\_i-\\overline x)^2} \\\\\n\n=\\frac {(R-L+1) \\sum \\_{i=L} ^{R} x\\_i y\\_i - \\sum \\_{i=L} ^{R} x\\_i \\sum \\_{i=L} ^{R} y\\_i } {(R-L+1) \\sum \\_{i=L} ^{R} x\\_i^2 - (\\sum \\_{i=L} ^{R} x\\_i)^2}$$\n\n\u5176\u5b9e\u4e0d\u7528\u628a$\\overline x$\u548c$\\overline y$\u5316\u51fa\u6765\u5c31\u53ef\u4ee5\u641e\uff0c\u4f46\u662f\u6bd4\u8f83\u9ebb\u70e6\uff0c\u5982\u679c\u50cf\u4e0a\u5f0f\u4e00\u6837\u5427$\\overline x$\u548c$\\overline y$\u5316\u6210$x_i$\u548c$y_i$\u66f4\u597d\u7ef4\u62a4\u3002\n\n\u8fd9\u6837\u53ea\u9700\u8981\u7ef4\u62a44\u4e2a\u503c\uff1a$\\sum x_i$\uff0c$\\sum y_i$\uff0c$\\sum x_i^2$\uff0c$\\sum x_i y_i$\n\n\u4ee5\u4e0b\u5f0f\u5b50\u4e2d\u7528$l$\u4ee3\u8868$R-L+1$\n\n\u64cd\u4f5c2\uff1a\n\n\u2460$\\sum (x_i+S) (y_i+T)=\\sum x_iy_i + S\\sum y_i+T\\sum x_i+lS$\n\n\u2461$\\sum (x_i+S)^2=\\sum x_i^2+2S\\sum x_i+lS^2$\n\n\u2462$\\sum (x_i+S)=\\sum x_i+lS$\n\n\u2463$\\sum (y_i+T)=\\sum y_i+lT$\n\n\u64cd\u4f5c3\uff1a\n\n\u2464$\\sum (S+i)(T+i) = lST +T\\sum i+S\\sum i+\\sum i^2$\n\n\u2465$\\sum (S+i)^2=lS^2 + 2S\\sum i + \\sum i^2$\n\n\u2466$\\sum S+i=lS+\\sum i$\n\n\u2467$\\sum T+i=lT+\\sum i$\n\n\n$\\sum i$\u548c$\\sum i^2$\u53ef\u4ee5\u5728\u5efa\u6811\u7684\u65f6\u5019\u7b97\u51fa\u6765\uff0c\u8fd9\u6837\u5c31\u5199\u4e00\u68f5\u6709\u533a\u95f4\u52a0\u548c\u533a\u95f4\u4fee\u6539\u7684\u7ebf\u6bb5\u6811\u5373\u53ef\u4e86\u3002\n\n\u6ce8\u610f\u64cd\u4f5c2\u7684\u987a\u5e8f\uff0c\u56e0\u4e3a\u2460\u5f0f\u548c\u2461\u5f0f\u90fd\u8981\u7528\u5230\u672a\u88ab\u66f4\u65b0\u7684$\\sum x_i$\u548c$\\sum y_i$\n",
        "postTime": 1506047545,
        "uid": 17686,
        "name": "Mario_sz",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P3707 \u3010[SDOI2017]\u76f8\u5173\u5206\u6790\u3011"
    }
]