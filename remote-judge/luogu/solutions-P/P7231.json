[
    {
        "content": "\u524d\u7f6e\u829d\u58eb\uff1a\u9ad8\u7ef4\u524d\u7f00\u548c\uff08SOS DP\uff09\u3002\n\n~~\u5982\u679c\u4e0d\u4f1a\u7684\u8bdd\u5de6\u4f20[\u9898\u89e3\u533a](https://www.luogu.com.cn/problem/P5495)\uff0c\u5305\u6559\u5305\u4f1a~~ \u5514\u8fd9\u91cc\u4f1a\u8bb2\u4e00\u8bb2\u7684\uff08\n\n\u7b80\u5355\u6765\u8bf4\uff0c\u5982\u4f55\u6c42\u4e00\u4e2a\u4e00\u7ef4\u5e8f\u5217\u7684\u524d\u7f00\u548c\uff1f\n\n\u5e9f\u8bdd\u5f53\u7136\u662f\u76f4\u63a5\u7d2f\u52a0\u554a\u2026\u2026\n\n\u90a3\u4e8c\u7ef4\u5462\uff1f\uff08\u8fd9\u91cc\u524d\u7f00\u548c\u5b9a\u4e49\u4e3a\u6bcf\u4e2a\u7ef4\u5ea6\u90fd\u5c0f\u4e8e\u7b49\u4e8e\u7ed9\u5b9a\u6570\u7684\u6240\u6709\u4e0b\u6807\u5bf9\u5e94\u7684\u503c\u7684\u548c\uff09\n\n\u6b63\u5e38\u7684\u5199\u6cd5\u662f\u6bcf\u4e2a\u6570\u7528\u4e09\u4e2a\u6765\u63a8\uff08\u4e5f\u5c31\u662f \n```cpp\nsum[i][j]+=sum[i-1][j]+sum[i][j-1]-sum[i-1][j-1];\n```\n\u8fd9\u79cd\u7684\uff0c\u505a\u7684\u662f\u539f\u5730\u524d\u7f00\u548c\uff0c\u4e5f\u5c31\u662f\u8bf4 `sum` \u6570\u7ec4\u539f\u6765\u5b58\u7684\u662f\u539f\u503c\uff09\uff0c\u4f46\u6211\u4eec\u53d1\u73b0\u8fd9\u6837\u7684\u8bdd\u4e00\u4e2a\u5f0f\u5b50\u91cc\u51fa\u73b0\u4e86 $4$ \u9879\uff0c\u5982\u679c\u628a\u5b83\u63a8\u5e7f\u5230 $x$ \u7ef4\uff0c\u4e14\u4e0d\u8bba\u4ee3\u7801\u633a\u96be\u5199\uff0c\u800c\u4e14\u4e00\u4e2a\u5f0f\u5b50\u91cc\u4f1a\u6709 $2^x$ \u9879\uff0c\u5982\u679c\u6bcf\u4e00\u7ef4\u7684\u53d6\u503c\u90fd\u662f\u5c0f\u4e8e\u7b49\u4e8e $2$\uff08\u4e8b\u5b9e\u4e0a\u4e00\u822c\u90fd\u662f\u8fd9\u4e2a\u60c5\u51b5\uff09\uff0c\u90a3\u590d\u6742\u5ea6\u5e76\u4e0d\u4f18\u79c0\uff0c\u662f $O(3^x)$ \u7684\uff08\u56e0\u4e3a\u4e8b\u5b9e\u4e0a\u8fd9\u4e2a\u60c5\u51b5\u4e0b\u53ea\u9700\u8981\u679a\u4e3e\u5bf9\u5e94\u4e0b\u6807\u7684\u5b50\u96c6\uff0c\u53ef\u4ee5\u6bd4\u6734\u7d20\u7684 $O(4^x)$ \u597d\u4e00\u70b9\uff0c\u590d\u6742\u5ea6\u5206\u6790\u5927\u6982\u5c31\u662f\u6bcf\u4e00\u4f4d\u5728\u4e24\u4e2a\u96c6\u5408\u91cc\u7684\u51fa\u73b0\u65b9\u6848\u53ea\u6709\u4e09\u79cd\uff0c\u4f46\u603b\u4e4b\u90fd\u5f88\u96be\u770b\uff09\u3002\n\n\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u9488\u5bf9\u5b83\u7684\u4f18\u5316\u3002\n\n\u6211\u4eec\u8003\u8651\u6211\u4eec\u4e8c\u7ef4\u524d\u7f00\u548c\u5b9e\u9645\u4e0a\u662f\u8981\u5e72\u4e00\u4e2a\u4ec0\u4e48\u4e8b\uff1a\u6c42\u51fa\u4e00\u4e2a\u524d\u7f00\u5b50\u77e9\u9635\u91cc\u6240\u6709\u6570\u7684\u548c\u3002\u90a3\u6211\u4eec\u4e0d\u5982\u5148\u6c42\u51fa\u5b50\u77e9\u9635\u6bcf\u4e00\u5217\u7684\u548c\u7136\u540e\u518d\u628a\u5b83\u4eec\u5168\u90e8\u7d2f\u8d77\u6765\uff08\u6216\u8005\u5148\u884c\u518d\u5217\u4e5f\u65e0\u6240\u8c13\uff09\uff0c\u7136\u540e\u5f88\u5bb9\u6613\u80fd\u53d1\u73b0\u8fd9\u4e24\u6b65\u90fd\u53ef\u4ee5\u4e00\u7ef4\u524d\u7f00\u548c\u4f18\u5316\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u4ee3\u7801\u4f1a\u957f\u6210\u8fd9\u4e2a\u6837\u5b50\uff1a\n\n\u9996\u5148\u5bf9\u6240\u6709\u5143\u7d20\u6267\u884c\uff1a`sum[i][j]+=sum[i-1][j];`\n\n\u7136\u540e\u518d\u5bf9\u6240\u6709\u5143\u7d20\u6267\u884c\uff1a`sum[i][j]+=sum[i][j-1];`\n\n\u662f\u4e0d\u662f\u5f88\u7b80\u6d01\uff0c\u5e76\u4e14\u663e\u7136\u5f88\u597d\u63a8\u5e7f\u5230\u9ad8\u7ef4\uff1f\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u6bd4\u5982\u6211\u4eec\u8981\u5bf9\u4e00\u4e2a $x$ \u7ef4\u7684\u4e1c\u897f\u7d2f\u524d\u7f00\u548c\uff0c\u590d\u6742\u5ea6\u5c31\u964d\u4f4e\u4e3a $O(x\\times2^x)$\uff0c\u6bd4\u8f83\u8212\u9002\u3002\n\n---\n\n\u597d\u4e86\u56de\u5230\u672c\u9898\u3002\n\n\u9996\u5148\u5982\u679c\u6211\u4eec\u628a\u6bcf\u79cd\u591a\u7c73\u8bfa\u90fd\u7ed9\u679a\u4e3e\u51fa\u6765\u5e76\u7b97\u51fa\u6743\u503c\uff0c\u5efa\u56fe\uff0c\u90a3\u4e48\u5c31\u8f6c\u6362\u6210\u4e86\u8981\u6c42\uff1a\u4e00\u4e2a\u9876\u70b9\u7684\u5b50\u96c6\uff0c\u5927\u5c0f\u4e3a $k$ \u7ed9\u5b9a\uff0c\u5176\u4e2d\u6ca1\u6709\u4e24\u4e2a\u70b9\u4e4b\u95f4\u6709\u8fb9\uff0c\u70b9\u6743\u548c\u6700\u5927\u662f\u591a\u5c11\uff08\u6700\u540e\u62ff\u6240\u6709\u8f93\u5165\u7684\u548c\u51cf\u53bb\u8fd9\u73a9\u610f\u5c31\u662f\u7b54\u6848\uff09\u3002\n\n\u8fd9\u6837\u7684\u8bdd\u70b9\u6570\u5927\u6982\u4f1a\u662f $8\\times10^6$ \u7ea7\u522b\uff0c\u7531\u4e8e\u76ee\u6d4b\u4e0d\u4f1a\u6709\u4ec0\u4e48\u795e\u4ed9\u7ebf\u6027\u7b97\u6cd5\uff0c\u663e\u7136\u5927\u6982\u7387\u96be\u4ee5\u63a5\u53d7\u3002\u8003\u8651\u600e\u4e48\u4f18\u5316\u3002\n\n\u89c2\u5bdf\u5230\u8fd9\u4e2a\u56fe\u7684\u4e00\u4e2a\u7279\u6027\uff1a\u4e00\u4e2a\u70b9\u7684\u5ea6\u6570\u81f3\u591a\u4e3a $6$\uff08\u5341\u5206\u663e\u7136\uff09\u3002\u8fd9\u5c31\u7ed9\u4e86\u6211\u4eec\u4e00\u4e9b\u542f\u793a\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u8bc1\u660e\u4e00\u5b9a\u5b58\u5728\u4e00\u79cd\u6700\u4f18\u65b9\u6848\uff0c\u6240\u6709\u53d6\u51fa\u7684\u70b9\u90fd\u5728\u524d $7(k-1)+1$ \u4e2a\u70b9\u91cc\u3002\u8bc1\u660e\u5927\u6982\u5c31\u662f\u53cd\u8bc1\u6cd5\uff0c\u4e0d\u59a8\u6700\u540e\u4e00\u4e2a\u70b9\u4e0d\u5728\uff0c\u7136\u540e\u524d $k-1$ \u4e2a\u70b9\u6bcf\u4e2a\u70b9\u81f3\u591a\u4f7f\u5f97\u516d\u4e2a\u70b9\u4e0d\u80fd\u53d6\uff0c\u7b97\u4e0a\u81ea\u5df1\u4e00\u5171 $7$ \u4e2a\uff0c\u8fd9\u6837\u6700\u591a\u4f7f\u5f97 $7(k-1)$ \u4e2a\u70b9\u4e0d\u53ef\u8fbe\uff0c\u8fd9\u6837\u628a\u6700\u540e\u4e00\u4e2a\u70b9\u8c03\u6574\u5230\u524d $7(k-1)+1$ \u4e2a\u70b9\u4e00\u5b9a\u53ef\u884c\u4e14\u66f4\u4f18\u3002\n\n\u7136\u540e\u672c\u9898\u4e2d $k\\le8$ \u6240\u4ee5\u5b9e\u9645\u4e0a\u53ea\u9700\u8981\u4fdd\u7559\u524d $50$ \u4e2a\u70b9\u3002\u5982\u679c\u4e0d\u8003\u8651\u590d\u6742\u5ea6\u95ee\u9898\uff0c\u6211\u4eec\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u633a\u4e0d\u9519\u7684\u7b97\u6cd5\uff1a\u5f04\u4e00\u4e2a $50$ \u7ef4\u7684\u6570\u7ec4\u8868\u793a\u6bcf\u4e2a\u70b9\u53d6\u6216\u8005\u4e0d\u53d6\uff08\u72b6\u538b\u4e00\u4e0b\u5c31\u53d8\u6210\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\uff0c\u5927\u5c0f\u4e3a $2^{50}$\uff09\uff0c\u7136\u540e\u521d\u59cb\u5bf9\u4e8e\u6bcf\u4e00\u7ef4\uff0c\u628a\u53ea\u6709\u8fd9\u4e00\u4f4d\u662f $1$ \u7684\u503c\u586b\u8fdb\u53bb\uff0c\u7136\u540e\u5bf9\u4e8e\u4e24\u4e2a\u76f8\u90bb\u7684\u70b9\uff0c\u628a\u53ea\u6709\u8fd9\u4e24\u4f4d\u7684\u503c\u586b\u6210 $+\\infty$\uff08\u4e5f\u5c31\u662f\u975e\u6cd5\uff09\uff0c\u7136\u540e\u7d2f\u4e2a\u524d\u7f00\u548c\u5c31\u80fd\u7b97\u4e86\u3002\u5f53\u7136\u5b9e\u9645\u4e0a\u4e5f\u53ef\u4ee5\u53ea\u7edf\u8ba1\u6bcf\u4e2a\u72b6\u6001\u662f\u5426\u5408\u6cd5\uff0c\u503c\u540e\u9762\u518d\u7b97\uff0c\u4e0d\u8fc7\u8fd9\u4e2a\u65e0\u6240\u8c13\uff0c\u590d\u6742\u5ea6\u4e00\u81f4\u3002\n\n\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u590d\u6742\u5ea6\u663e\u7136\u8981\u70b8\uff0c\u4f46\u662f\u8fd9\u4e2a $2$ \u6307\u6570\u7ea7\u7684\u590d\u6742\u5ea6\u52a0\u4e0a $50$ \u7684\u5947\u5999\u8303\u56f4\u4e0d\u96be\u60f3\u5230 meet-in-the-middle\u3002\u5927\u6982\u5c31\u662f\uff0c\u628a $50$ \u4e2a\u70b9\u5206\u6210\u4e24\u4e2a\u90e8\u5206\u5206\u522b\u6309\u7167\u4e0a\u8ff0\u65b9\u6cd5\u8ba1\u7b97\uff0c\u7136\u540e\u4e4b\u95f4\u8ba1\u7b97\u4e00\u4e0b\u8d21\u732e\u3002\u81f3\u4e8e\u4e4b\u95f4\u7684\u8d21\u732e\u600e\u4e48\u7b97\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e8e\u524d\u4e00\u534a\u7684\u6bcf\u4e2a\u72b6\u6001\uff08\u96c6\u5408\uff09\u7b97\u51fa\u5176\u5728\u540e\u534a\u90e8\u5206\u4e2d\u6700\u5927\u80fd\u5339\u914d\u5230\u7684\u96c6\u5408\u603b\u6743\uff0c\u8fd9\u4e2a\u663e\u7136\u53ef\u4ee5\u53cd\u5411\u524d\u7f00\u548c\u4e00\u4e0b\u5e72\u6389\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u8981\u7b97\u540e\u534a\u90e8\u5206\u4e2d\u6bcf\u4e2a\u96c6\u5408\u6700\u5927\u80fd\u5339\u914d\u5230\u524d\u534a\u90e8\u5206\u4e2d\u7684\u54ea\u4e2a\u96c6\u5408\uff0c\u8fd9\u4e2a\u4e5f\u53ef\u4ee5\u7d2f\u524d\u7f00\u548c\u4f46\u4ee3\u7801\u91cc\u7531\u4e8e\u4e00\u4e9b\u5386\u53f2\u9057\u7559\u95ee\u9898\u9009\u62e9\u4e86\u628a\u6bcf\u4e2a\u5355\u4e2a\u7684\u6700\u5927\u5bf9\u5e94\u72b6\u6001\u9884\u5904\u7406\u51fa\u6765\u7136\u540e\u66b4\u529b\u679a\u4e3e\u6bcf\u4e00\u4f4d\u6c42\u96c6\u5408\u4ea4\u3002\n\n\u7136\u540e\u8fd9\u4e2a\u590d\u6742\u5ea6\u5b9e\u9645\u4e0a\u8fd8\u662f\u6709\u70b9\u5371\uff0c\u56e0\u4e3a\u53cd\u5411\u7d2f\u524d\u7f00\u548c\u90a3\u4e00\u6b65\u5b9e\u9645\u4e0a\u662f\u8981\u5206\u540e\u534a\u90e8\u5206\u90a3\u4e2a\u96c6\u5408\u7684\u5927\u5c0f\u6765\u7b97\u7684\uff0c\u4e8e\u662f\u6211\u4eec\u53d1\u73b0\u5b9e\u9645\u4e0a\u53ea\u9700\u8981\u4fdd\u7559\u5927\u5c0f $\\le k$ \u7684\u90e8\u5206\uff08\u7ed9\u540e\u534a\u90e8\u5206\u7c7b\u524d\u7f00\u548c\u7684\u65f6\u5019\u4e5f\u662f\u5982\u6b64\uff09\uff0c\u597d\u6d88\u606f\u3002\n\n\u8fd9\u6837\u7684\u8bdd\u5c31\u53ef\u4ee5\u4e86\u3002\u8089\u773c\u89c2\u5bdf\u4e00\u4e0b\u524d\u534a\u90e8\u5206\u653e $22$ \u4e2a\u70b9\uff0c\u540e\u534a\u90e8\u5206\u653e $28$ \u4e2a\u70b9\u7684\u65f6\u5019\u662f\u5dee\u4e0d\u591a\u53ef\u4ee5\u7684\u3002\u90a3\u5c31\u53ef\u4ee5\u8fc7\u4e86\u3002\u6ce8\u610f\u4e00\u4e0b\u8fd9\u4e2a\u6570\u636e\u8303\u56f4\u4f1a\u7206 `int`\uff0c\u4f46 `unsigned` \u4e5f\u591f\u7528\u4e86\u3002\n\n\u4ee3\u7801\u5b9e\u9645\u4e0a~~\u5e76\u4e0d\u96be\u5199~~\u633a\u96be\u5199\u7684\uff0c\u6240\u4ee5\u8fd8\u662f\u8d34\u4e00\u4e0b\u5427\uff08\n\n```cpp\n#include <bits/stdc++.h>\n#define fi first\n#define se second\n#define INF INT_MAX\n#define cnt __builtin_popcount\n#define int unsigned\nusing namespace std;\nconstexpr int N = 4e6 + 9, M = 50, W = 21, C = 9e6 + 9;\nint n, k, tot, d, val[N], ans, sum;\npair<int, int> dm[N << 1];\nint id(int x, int y) { return x * n + y; }\nint getval(pair<int, int> x) { return val[x.fi] + val[x.se]; }\nbool issim(pair<int, int> x, pair<int, int> y) {\n  return x.fi == y.fi || x.fi == y.se || x.se == y.fi || x.se == y.se;\n}\nint iadd(int x, int y) { return x == INF || y == INF ? INF : x + y; }\nint f[1 << W], g[C], gst[M], gval[1 << W][9];\nint num[C], ntot;\nvoid dfs(int hbt, int rem, int x) {\n  if (!hbt)\n    num[ntot++] = x;\n  else {\n    dfs(hbt - 1, rem, x);\n    if (rem) dfs(hbt - 1, rem - 1, x | (1 << (hbt - 1)));\n  }\n}\nint pos(int x) { return lower_bound(num, num + ntot, x) - num; }\nsigned main() {\n  ios::sync_with_stdio(false), cin.tie(nullptr);\n  dfs(M - W, 8, 0), cin >> n >> k;\n  for (int i = 0; i < n; ++i)\n    for (int j = 0; j < n; ++j) {\n      cin >> val[id(i, j)], sum += val[id(i, j)];\n      if (i) dm[tot++] = {id(i - 1, j), id(i, j)};\n      if (j) dm[tot++] = {id(i, j - 1), id(i, j)};\n    }\n  if (tot > M)\n    nth_element(dm, dm + M, dm + tot,\n                [](auto x, auto y) { return getval(x) > getval(y); }),\n        tot = M;\n  d = min(tot >> 1, W);\n  for (int i = 0; i < d; ++i) {\n    f[1 << i] = getval(dm[i]);\n    for (int j = 0; j < i; ++j)\n      if (issim(dm[i], dm[j])) f[(1 << i) | (1 << j)] = INF;\n  }\n  for (int i = 0; i < d; ++i)\n    for (int s = 0; s < (1u << d); ++s)\n      if ((s & (1 << i)) && cnt(s) <= k) f[s] = iadd(f[s], f[s ^ (1 << i)]);\n  for (int i = 0; i < tot - d; ++i) {\n    g[pos(1 << i)] = getval(dm[i + d]);\n    for (int j = 0; j < i; ++j)\n      if (issim(dm[i + d], dm[j + d])) g[pos((1 << i) | (1 << j))] = INF;\n  }\n  for (int i = 0; i < tot - d; ++i) {\n    gst[i] = (1 << d) - 1;\n    for (int j = 0; j < d; ++j)\n      if (issim(dm[i + d], dm[j])) gst[i] ^= 1 << j;\n  }\n  for (int i = 0; i < tot - d; ++i)\n    for (int p = 0; p < ntot && (num[p] < (1u << (tot - d))); ++p)\n      if (int s = num[p]; (s & (1 << i)) && cnt(s) <= k)\n        g[p] = iadd(g[p], g[pos(s ^ (1 << i))]);\n  for (int p = 0; p < ntot && (num[p] < (1u << (tot - d))); ++p)\n    if (int s = num[p]; g[p] != INF && cnt(s) <= k) {\n      int gsts = (1 << d) - 1;\n      for (int i = 0; i < (tot - d); ++i)\n        if (s & (1 << i)) gsts &= gst[i];\n      gval[gsts][cnt(s)] = max(gval[gsts][cnt(s)], g[p]);\n    }\n  for (int i = 0; i < d; ++i)\n    for (int s = 0; s < (1u << d); ++s)\n      if (s & (1 << i))\n        for (int j = 0; j <= k; ++j) {\n          gval[s ^ (1 << i)][j] = max(gval[s ^ (1 << i)][j], gval[s][j]);\n        }\n\n  for (int s = 0; s < (1u << d); ++s)\n    if (f[s] != INF && cnt(s) <= k) ans = max(ans, gval[s][k - cnt(s)] + f[s]);\n  cout << sum - ans << endl;\n  return 0;\n}\n```\n\n\u4ee5\u4e0a\u3002",
        "postTime": 1641467075,
        "uid": 250637,
        "name": "UnyieldingTrilobite",
        "ccfLevel": 9,
        "title": "S O S D P"
    },
    {
        "content": "\u672c\u6765\u53ea\u662f\u770b\u770b\u8d39\u7528\u6d41\u53ef\u4ee5\u5f97\u591a\u5c11\u5206\uff0c~~\u6ca1\u60f3\u5230\u76f4\u63a5\u5361\u8fc7\u4e86~~\u3002\n\n\u975e\u5e38\u7ecf\u5178\u7684\u9aa8\u724c\u95ee\u9898\u3002\u56e0\u4e3a\u8fd9\u4e9b\u9aa8\u724c\u53ea\u4f1a\u5360\u7528\u76f8\u90bb\u7684\u4e24\u4e2a\u683c\u5b50\uff0c\u90a3\u4e48\u53ef\u4ee5\u60f3\u5230\u7528\u9ed1\u767d\u67d3\u8272\u6765\u505a\u3002\u5bf9\u4e8e $(x,y)$\uff0c\u82e5 $x+y\\equiv 1\\mod 2$\uff0c\u5c31\u8fde\u6e90\u70b9\u5230\u8be5\u70b9\u4e00\u6761\u5bb9\u91cf\u4e3a $1$\uff0c\u8d39\u7528\u4e3a $a_{x,y}$ \u7684\u8fb9\uff0c\u518d\u8fde\u8be5\u70b9\u5230\u5176\u56db\u5468\u7684\u70b9\uff0c\u5bb9\u91cf\u4e3a $1$ \u8d39\u7528\u4e3a $0$\u3002\u5426\u5219\u5c31\u8fde\u8be5\u70b9\u5230\u6c47\u70b9\u7684\u8fb9\uff0c\u5bb9\u91cf\u4e3a $1$ \u8d39\u7528\u4e3a $a_{x,y}$\u3002\n\n\u8fd9\u662f\u6309\u7167\u4ee5\u4e0a\u7684\u601d\u8def\u6253\u51fa\u6765\u7684\u4ee3\u7801\uff1a[$link$](https://www.luogu.com.cn/record/80373711)\u3002\u53ef\u4ee5\u770b\u5230\u7531\u4e8e\u70b9\u6709 $4e6$ \u4e2a\uff0c\u5bfc\u81f4\u76f4\u63a5 MLE\u3002\u4f46\u662f\uff0c\u4ed6\u6ca1 T\uff01\u8fd9\u5c31\u7ed9\u6211\u4e00\u4e2a\u4f18\u5316\u7a7a\u95f4\u7684\u60f3\u6cd5\u3002\n\n\u4ed4\u7ec6\u770b\uff0c\u5bf9\u4e8e\u6240\u6709\u7684\u8fb9\uff0c\u5b83\u7684\u5bb9\u91cf\u53ca\u8d39\u7528\u6781\u5c0f\uff0c\u751a\u81f3\u53ef\u4ee5\u4e0d\u7528\u6574\u578b\u6765\u5b58\uff0c\u7528\u77ed\u6574\u578b\u6765\u5b58\u5373\u53ef\u3002\u53ef\u4ee5\u4f18\u5316\u5dee\u4e0d\u591a\u4e00\u534a\u7684\u7a7a\u95f4\uff0c\u53ef\u4ee5\u8fc7\u4e86\u3002\n\n# $code$\n```cpp\n#include<bits/stdc++.h>\n#define ll long long\n#define sh short\nusing namespace std;\nconst int N=4e6+500,M=4e7+500,inf=1e9+7;\n\nstruct node\n{\n\tint u,v,nxt;\n\tsh c,w;\n}e[M];\n\nint n,m,head[N],k,a[2300][2300],cnt=1,st,ed;\nint rx[4]={0,0,1,-1},ry[4]={1,-1,0,0};\nll tot;\n\nvoid add(int u,int v,int w,int c)\n{\n\te[++cnt].u=u;\n\te[cnt].v=v;\n\te[cnt].w=w;\n\te[cnt].c=c;\n\te[cnt].nxt=head[u];\n\thead[u]=cnt;\n}\n\nint id(int x,int y)\n{\n\treturn (x-1)*n+y;\n}\n\nvoid read()\n{\n\tcin>>n>>k;int s=n*n+1;st=s+1,ed=st+1;\n\tfor(int i=1;i<=n;i++)for(int j=1;j<=n;j++)cin>>a[i][j],tot+=a[i][j];\n\tfor(int i=1;i<=n;i++)for(int j=1;j<=n;j++)\n\t{\n\t\tif((i+j)&1)continue;\n\t\tfor(int k=0;k<4;k++)\n\t\t{\n\t\t\tint xx=i+rx[k],yy=j+ry[k];\n\t\t\tif(xx<1||xx>n||yy<1||yy>n)continue;\n\t\t\tadd(id(i,j),id(xx,yy),1,0);\n\t\t\tadd(id(xx,yy),id(i,j),0,0);\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)for(int j=1;j<=n;j++)\n\t{\n\t\tif((i+j)&1)add(id(i,j),ed,1,-a[i][j]),add(ed,id(i,j),0,a[i][j]);\n\t\telse add(s,id(i,j),1,-a[i][j]),add(id(i,j),s,0,a[i][j]);\n\t}\n\tadd(st,s,k,0);add(s,st,0,0);\n}\n\nint vis[N],dep[N],maxflow;\nll mincost;\n\nint spfa()\n{\n\tdeque<int>q;\n\tfor(int i=1;i<=ed;i++)vis[i]=0,dep[i]=inf;\n\tq.push_back(ed);vis[ed]=1;dep[ed]=0;\n\twhile(!q.empty())\n\t{\n\t\tint x=q.front();q.pop_front();vis[x]=0;\n\t\tfor(int i=head[x];i;i=e[i].nxt)\n\t\t{\n\t\t\tint v=e[i].v;\n\t\t\tif(e[i^1].w>0&&dep[v]>dep[x]-e[i].c)\n\t\t\t{\n\t\t\t\tdep[v]=dep[x]-e[i].c;\n\t\t\t\tif(!vis[v])\n\t\t\t\t{\n\t\t\t\t\tvis[v]=1;\n\t\t\t\t\tif(!q.empty()&&dep[v]<dep[q.front()])q.push_front(v);\n\t\t\t\t\telse q.push_back(v);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn dep[st]<inf;\n}\n\nint dfs(int now,int flow)\n{\n\tvis[now]=1;\n\tif(now==ed||flow<=0)return flow;\n\tint res=0;\n\tfor(int i=head[now];i;i=e[i].nxt)\n\t{\n\t\tint v=e[i].v;\n\t\tif(!vis[v]&&e[i].w&&dep[now]-e[i].c==dep[v])\n\t\t{\n\t\t\tint d=dfs(v,min(flow-res,int(e[i].w)));\n\t\t\tif(d<=0)continue;\n\t\t\te[i].w-=d,e[i^1].w+=d;\n\t\t\tres+=d,mincost+=1ll*d*e[i].c;\n\t\t\tif(res==flow)return res;\n\t\t}\n\t}\n\treturn res;\n}\n\nvoid zkw()\n{\n\twhile(spfa())\n\t{\n\t\tvis[ed]=1;\n\t\twhile(vis[ed])\n\t\t{\n\t\t\tfor(int i=1;i<=ed;i++)vis[i]=0;\n\t\t\tmaxflow+=dfs(st,inf);\n\t\t}\n\t}\n}\n\nvoid print()\n{\n\tcout<<tot+mincost;\n}\n\nmain()\n{\n\tread();\n\tzkw();\n\tprint();\n}\n```",
        "postTime": 1658294775,
        "uid": 344416,
        "name": "zsq147258369",
        "ccfLevel": 7,
        "title": "P7231 [COCI2015-2016#3] DOMINO \u9898\u89e3"
    },
    {
        "content": "**\u7f51\u7edc\u6d41**\uff0c\u5e26\u4f18\u5316\u3002\n\n## \u5efa\u6a21\n\n\u5148\u4e0d\u8003\u8651\u6570\u636e\u89c4\u6a21\uff0c\u5982\u679c\u8981\u7528\u7f51\u7edc\u6d41\u7684\u8bdd\uff0c\u6211\u4eec\u5f88\u5feb\u80fd\u53cd\u5e94\u8fc7\u6765\uff0c\u8fd9\u5c06\u662f\u4e00\u4e2a\u8d39\u7528\u6d41\uff08\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\uff09\uff0c\u5f88\u660e\u663e\u76f8\u90bb\u4e24\u4e2a\u683c\u5b50\u4e4b\u95f4\u90fd\u53ef\u4ee5\u8fde\u4e0a\u4e00\u6761\u5bb9\u91cf\u4e3a $1$ \u7684\u8fb9\uff0c\u8868\u793a\u8fd9\u4e24\u4e2a\u683c\u5b50\u53ef\u4ee5\u4e00\u8d77\u9009\u3002\n\n\u4f46\u662f\u7f51\u7edc\u6d41\u8981\u6c42\u7684\u662f\u6709\u5411\u8fb9\u8bf6\uff0c\u8fd9\u4e2a\u987a\u5e8f\u53c8\u8be5\u600e\u4e48\u786e\u5b9a\u5462\u3002\u5176\u5b9e\u806a\u660e\u7684\u4f60\u5df2\u7ecf\u53d1\u73b0\uff0c\u5982\u679c\u7ed9\u6574\u4e2a\u8868\u683c\u6309\u7167\u68cb\u76d8\u7684\u6837\u5b50\u9ed1\u767d\u67d3\u8272\uff0c\u4e00\u4e2a\u683c\u5b50\u548c\u4e0e\u5b83\u6709\u4e00\u6761\u5171\u7528\u8fb9\u7684\u683c\u5b50\u7684\u989c\u8272\u90fd\u4e0d\u76f8\u540c\uff0c\u4e00\u6761\u9aa8\u724c\u53ea\u80fd\u4e00\u534a\u8986\u76d6\u9ed1\u683c\uff0c\u4e00\u534a\u8986\u76d6\u767d\u683c\u3002\u8fd9\u4e0b\u4e24\u90e8\u5206\u683c\u5b50\u5c31\u6cfe\u6e2d\u5206\u660e\u4e86\uff0c\u6211\u4eec\u4ece\u6e90\u70b9\u5f15\u4e00\u6761\u5bb9\u91cf\u4e3a $k$ \u7684\u8fb9\u5230\u4e00\u4e2a\u4e2d\u8f6c\u70b9\uff0c\u9650\u5236\u9aa8\u724c\u6570\u91cf\uff0c\u8d39\u7528\u4e3a $0$\uff1b\u518d\u4ee5\u5bb9\u91cf\u4e3a $1$ \u7684\u8fb9\u5f15\u5230\u6bcf\u4e2a\u9ed1\u683c\u7684\u70b9\uff0c\u8d39\u7528\u4e3a\u9ed1\u683c\u4e0a\u6570\u503c\u7684\u76f8\u53cd\u6570\uff1b\u6bcf\u4e2a\u9ed1\u683c\u5411\u4e0e\u5b83\u76f8\u90bb\u7684\u767d\u683c\u5f15\u4e00\u6761\u5bb9\u91cf\u4e3a $1$\uff0c\u8d39\u7528\u4e3a $0$ \u7684\u8fb9\uff1b\u6bcf\u4e2a\u767d\u683c\u5f15\u4e00\u6761\u5bb9\u91cf\u4e3a $1$\uff0c\u8d39\u7528\u4e3a\u767d\u683c\u6570\u503c\u7684\u76f8\u53cd\u6570\u7684\u8fb9\u5230\u6c47\u70b9\u3002\u8dd1\u4e00\u8fb9\u8d39\u7528\u6d41\uff0cok\u3002\n\n\u5982\u679c\u4f60 RP \u6bd4\u8f83\u597d\uff0c\u5728 COCI \u8fd9~~\u6c34~~\u6570\u636e\u4e4b\u4e0b\uff0c\u5927\u62b5\u662f\u53ef\u4ee5\u8fc7\u7684\u3002\n\n\u4f46\u662f\u4e00\u5206\u6790\u53d1\u73b0\uff0cDinic \u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $\\mathrm{O}(n^2m)$\uff0c\u6211\u4eec\u8fd9\u91cc $n\\leq 4\\times 10^6+3,m\\leq 12\\times 10^6+1$\uff0c\u90a3\u80fd\u8fc7\u4e5f\u5b9e\u5c5e\u4f60 RP \u8fc7\u4e8e\u597d\uff08~~\u6570\u636e\u8fc7\u4e8e\u6c34~~\uff09\u4e86\u3002\n\n## \u4f18\u5316\n\n\u7136\u540e\u6211\u4eec\u8003\u8651**\u4f18\u5316**\u3002\n\n\u4f60\u662f\u5426\u66fe\u7ecf\u5e7b\u60f3\u8fc7\u7528\u8d2a\u5fc3\u7b97\u6cd5\u89e3\u51b3\u8fd9\u9053\u9898\uff0c\u6bcf\u6b21\u9009\u62e9\u6700\u4f18\u79c0\u7684\u9aa8\u724c\u653e\u7f6e\u65b9\u6848\uff1f\u90a3\u53ef\u771f\u662f\u8d2a\u5fc3\u3002\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u7528\u8d2a\u5fc3\u6cd5\uff0c\u4f60\u806a\u660e\u7684\u8111\u888b\u74dc\u5b50\u5df2\u7ecf\u8981\u6309\u637a\u4e0d\u4f4f\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\u4e86\uff0c\u8fd8\u4e0d\u662f\u56e0\u4e3a\u9009\u62e9\u4e86\u4e00\u4e2a\u6700\u4e3a\u4f18\u79c0\u9aa8\u724c\u53ef\u80fd\u5bfc\u81f4\u66f4\u591a\u8f83\u4e3a\u4f18\u79c0\u7684\u9aa8\u724c\u88ab\u5f03\u9009\uff0c\u6211\u4eec\u4fbf\u4e0e\u6b63\u786e\u7b54\u6848\u64e6\u80a9\u800c\u8fc7\u3002\n\n\u90a3\u4e48\u6211\u4eec\u6b64\u65f6\u6765\u8003\u8651\u4e00\u4e0b\uff0c\u9009\u62e9\u4e00\u4e2a\u6700\u4e3a\u4f18\u79c0\u7684\u9aa8\u724c\u53ef\u80fd\u5bfc\u81f4\u4ec0\u4e48\u540e\u679c\u3002\u4e0d\u96be\u60f3\u5230\uff0c\u4e00\u6761\u9aa8\u724c\u4f1a\u4e0e\u5176\u4ed6 $6$ \u6761\u9aa8\u724c\u6709\u91cd\u53e0\u90e8\u5206\uff0c\u4e5f\u5c31\u662f\u9009\u62e9\u4e86\u4e00\u6761\u9aa8\u724c\u8fc7\u540e\u4f1a\u5bfc\u81f4 $7$ \u6761\u9aa8\u724c\u5931\u6548\u3002\u8fd9\u5c31\u5bfc\u81f4\u6b63\u89e3\u5fc5\u987b\u8003\u8651\u5230\u9009\u62e9\u4e00\u6761\u9aa8\u724c\u5bf9\u5269\u4f59\u9009\u62e9\u7684\u5f71\u54cd\uff0c\u800c\u4e0d\u5f97\u76ee\u5149\u77ed\u6d45\u3002\n\n\u5047\u8bbe\u6211\u4eec\u820d\u820d\u5f03\u5f03\uff0c\u76ee\u524d\u5df2\u7ecf\u9009\u62e9\u4e86 $k-1$ \u6761\u9aa8\u724c\uff0c\u90a3\u4e48\u8fd9 $k-1$ \u6761\u9aa8\u724c\u6700\u591a\u4f1a\u5bfc\u81f4 $7(k-1)$ \u6761\u9aa8\u724c\u5931\u6548\uff0c\u8bb0\u9009\u62e9\u7684\u9aa8\u724c\u96c6\u5408\u4e3a $S$\uff0c\u5931\u6548\u7684\u9aa8\u724c\u96c6\u5408\u4e3a $T$\uff0c\u663e\u7136 $S\\in T$\u3002\u5f88\u660e\u663e\u5bf9\u4e8e $\\forall x\\in S,y\\in\\complement_UT,$ \u6709 $c_x\\geq c_y$\u3002\u53cd\u8bc1\u6cd5\u8bc1\u660e\uff0c\u5982\u679c\u5b58\u5728\u53cd\u4f8b\uff0c\u90a3\u4e48\u5b8c\u5168\u53ef\u4ee5\u9009 $T$ \u96c6\u5408\u4e4b\u5916\u7684\u90a3\u4e2a\u9aa8\u724c\u800c\u4e0d\u9009\u53d6 $S$ \u96c6\u5408\u4e4b\u5185\u7684\u90a3\u4e2a\u9aa8\u724c\uff0c\u4e14\u4e0d\u4f1a\u4e0e $S$ \u96c6\u5408\u73b0\u6709\u9aa8\u724c\u4ea7\u751f\u51b2\u7a81\uff0c\u56e0\u4e3a\u4f1a\u4ea7\u751f\u51b2\u7a81\u7684\u9aa8\u724c\u90fd\u5728 $T$ \u96c6\u5408\u91cc\u3002\n\n\u65e2\u7136\u8fd9\u6837\uff0c\u90a3\u4e48\u6bd4 $S$ \u96c6\u5408\u4e2d\u9aa8\u724c\u66f4\u4e3a\u4f18\u79c0\u7684\u9aa8\u724c\u90fd\u5728 $T$ \u96c6\u5408\u91cc\uff0c\u8fdb\u800c\u63a8\u51fa\u9009\u62e9\u7684 $k-1$ \u6761\u9aa8\u724c\u4e00\u5b9a\u662f\u524d $7(k-1)$ \u4f18\u79c0\u7684\u9aa8\u724c\u3002\n\n\u6211\u542c\u8bf4\u4f60\u806a\u660e\u7684\u5c0f\u8111\u888b\u4e0a\u5192\u51fa\u4e86\u5927\u5927\u7684\u95ee\u53f7\uff0c\u4e3a\u4ec0\u4e48\u8981\u7528 $k-1$ \u800c\u4e0d\u7528 $k$ \u8003\u8651\uff1f~~\u5176\u5b9e\u53ea\u8981\u4f60\u613f\u610f\u662f\u53ef\u4ee5\u7684~~\uff0c\u4f46\u8fd9\u91cc\u6211\u4eec\u9009\u5b9a\u4e86 $k-1$ \u6761\u9aa8\u724c\u8fc7\u540e\uff0c\u9009\u7684\u7b2c $k$ \u6761\u9aa8\u724c\u4e00\u5b9a\u662f\u5269\u4e0b\u7684\u9aa8\u724c\u4e2d\u6700\u4e3a\u4f18\u79c0\u7684\uff0c\u56e0\u4e3a\u65e2\u7136\u5b83\u4e4b\u540e\u4e0d\u4f1a\u518d\u9009\u4e86\uff0c\u90a3\u4e48\u5b83\u5c31\u4e0d\u518d\u4f1a\u4e0e\u5176\u5b83\u9aa8\u724c\u51b2\u7a81\u4e86\u3002\n\n\u4ece\u6b64\uff0c\u6211\u4eec\u77e5\u9053\u4e86\u6b63\u786e\u7b54\u6848\u9009\u62e9\u7684\u9aa8\u724c\u4e00\u5b9a\u662f\u9aa8\u724c\u653e\u7f6e\u7b56\u7565\u4e2d\u524d $7(k-1)+1$ \u5927\u7684\u3002\u8fd9\u4f60\u4e0d\u5f97\u4e50\u5475\u4e00\u4e0b\uff0c\u56e0\u4e3a\u4f60\u6084\u6084\u53bb\u7ffb\u4e86\u4e00\u4e0b\u4f53\u9762\uff0c\u53d1\u73b0 $k\\leq 8$ \u8fd9\u4e2a\u5de8\u5927\u7684\u60ca\u559c\uff0c\u90a3\u4e0d\u5c31\u4ee3\u8868\u9ed1\u683c\u4e0e\u767d\u683c\u4e4b\u95f4\u8fde\u7684\u8fb9\u6700\u591a\u53ea\u4f1a\u6709 $50$ \u6761\u4e48\uff1f\u8fd8\u53ef\u4ee5\u8fdb\u4e00\u6b65\u526a\uff0c\u56e0\u4e3a\u9ed1\u683c\u4e0e\u767d\u683c\u4e4b\u95f4\u8fde\u7684\u8fb9\u6700\u591a\u53ea\u4f1a\u6709 $50$ \u6761\uff0c\u6240\u4ee5\u6d3e\u4e0a\u7528\u573a\u7684\u9ed1\u683c\u548c\u767d\u683c\u683c\u5b50\u6700\u591a\u53ea\u8981 $50$\uff0c\u672c\u6765\u539f\u6765\u4ece\u6e90\u70b9\u3001\u5230\u6c47\u70b9\u5f15\u4e86 $2\\times 10^3$ \u6761\u8fb9\u7684\uff0c\u8fd9\u4e00\u4e0b\u5b50\u8f7b\u677e\u4e86\u4e0d\u5c11\u561b\u3002\n\n\u90a3\u4e48\u5c31\u7ee7\u7eed\u8f7b\u677e\u5730\u770b\u4ee3\u7801\u5427\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <utility>\n\nusing namespace std;\n\nconst int MAXN = 4000003;    // \u6709\u7a7a\u95f4\u8c01\u4e0d\u7528\uff0c\u4e0d\u5c31\u662f\u6d6a\u8d39\u4e86\u70b9\u561b\nconst int MAXM = 302;\n\nnamespace Graph    // \u5b58\u56fe\uff0c\u4ee5\u53ca\u7f51\u7edc\u6d41\u7684\u51fd\u6570\uff0c\u6700\u5927\u6d41\u5b58\u5728 Ans.first\uff0c\u6700\u5c0f\u8d39\u7528\u5b58\u5728 Ans.second\n{\n\tint s, t;\n\tint h[MAXN + 5], to[MAXM + 5], c[MAXM + 5], w[MAXM + 5], nxt[MAXM + 5], cnt = 1;\n\n\tvoid build(int x, int y, int z, int W)\n\t{\n\t\t++cnt;\n\t\tto[cnt] = y;\n\t\tc[cnt] = z;\n\t\tw[cnt] = W;\n\t\tnxt[cnt] = h[x];\n\t\th[x] = cnt;\n\t\t++cnt;\n\t\tto[cnt] = x;\n\t\tc[cnt] = 0;\n\t\tw[cnt] = -W;\n\t\tnxt[cnt] = h[y];\n\t\th[y] = cnt;\n\t}\n\n\tnamespace Flow\n\t{\n\t\tint d[MAXN + 5], cur[MAXN + 5];\n\t\tpair<int, int> Ans = make_pair(0, 0);\n\n\t\tnamespace ShortestPath\n\t\t{\n\t\t\tnamespace queue\n\t\t\t{\n\t\t\t\tint q[MAXN + 5], f = 1, r = 0;\n\t\t\t\tconst int MOD = MAXN + 1;\n\t\t\t\tint front() { return q[f]; }\n\t\t\t\tvoid push(int x) { q[r = r % MOD + 1] = x; }\n\t\t\t\tvoid pop() { f = f % MOD + 1; }\n\t\t\t\tbool empty() { return r % MOD + 1 == f; }\n\t\t\t\tvoid clear() { f = 1; r = 0; }\n\t\t\t}\n\n\t\t\tbool in[MAXN + 5];\n\n\t\t\tbool SPFA()\n\t\t\t{\n\t\t\t\tmemset(d, 0x3f, sizeof d);\n\t\t\t\tqueue::clear();\n\t\t\t\td[s] = 0;\n\t\t\t\tqueue::push(s);\n\t\t\t\tin[s] = true;\n\t\t\t\twhile (!queue::empty())\n\t\t\t\t{\n\t\t\t\t\tint x = queue::front();\n\t\t\t\t\tqueue::pop();\n\t\t\t\t\tin[x] = false;\n\t\t\t\t\tcur[x] = h[x];\n\t\t\t\t\tfor (int i = h[x]; i; i = nxt[i])\n\t\t\t\t\t{\n\t\t\t\t\t\tif (c[i] && d[to[i]] > d[x] + w[i])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\td[to[i]] = d[x] + w[i];\n\t\t\t\t\t\t\tif (!in[to[i]])\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tqueue::push(to[i]);\n\t\t\t\t\t\t\t\tin[to[i]] = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (d[t] < 0x3f3f3f3f) return true;\n\t\t\t\telse return false;\n\t\t\t}\n\t\t}\n\n\t\tbool b[MAXN + 5];\n\n\t\tpair<int, int> DFS(int x, int f)\n\t\t{\n\t\t\tif (x == t) return make_pair(f, 0ll);\n\t\t\tb[x] = true;\n\t\t\tint ans = 0;\n\t\t\tint cost = 0;\n\t\t\tfor (int i = cur[x]; i && ans < f; i = nxt[i])\n\t\t\t{\n\t\t\t\tcur[x] = i;\n\t\t\t\tif (c[i] && !b[to[i]] && d[to[i]] == d[x] + w[i])\n\t\t\t\t{\n\t\t\t\t\tpair<int, int> res = DFS(to[i], min(f - ans, c[i]));\n\t\t\t\t\tif (!res.first) d[to[i]] = 0;\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tans += res.first;\n\t\t\t\t\t\tc[i] -= res.first;\n\t\t\t\t\t\tc[i ^ 1] += res.first;\n\t\t\t\t\t\tcost += res.second + res.first * w[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tb[x] = false;\n\t\t\treturn make_pair(ans, cost);\n\t\t}\n\n\t\tvoid Dinic()\n\t\t{\n\t\t\tfor (;;)\n\t\t\t{\n\t\t\t\tif (!ShortestPath::SPFA()) break;\n\t\t\t\tpair<int, int> res = DFS(s, 0x3f3f3f3f);\n\t\t\t\tAns.first += res.first;\n\t\t\t\tAns.second += res.second;\n\t\t\t}\n\t\t}\n\t}\n}\n\nint N, K;\nint a[2005][2005];\nlong long sum;\nbool f[4000005];    // \u5224\u65ad\u201c\u6e90\u70b9\u201d\u5230\u9ed1\u683c\u3001\u767d\u683c\u5230\u6c47\u70b9\u662f\u5426\u5df2\u7ecf\u8fde\u8fb9\n\nstruct edge    // \u5f00\u4e00\u4e2a\u6570\u7ec4\u5b58\u4e00\u4e0b\u524d 7(k-1)+1 \u4f18\u79c0\u7684\u9aa8\u724c\uff0c\u4e5f\u53ef\u4ee5\u89c6\u4e3a\u7f51\u7edc\u4e2d\u7684\u8fb9\n{\n\tint x, y, dx, dy;\n\tedge() {}\n\tedge(int _x, int _y, int _dx, int _dy): x(_x), y(_y), dx(_dx), dy(_dy) {}\n} e[55];\nvoid add(edge x)\n{\n\tint i;\n\tfor (i = 7 * (K - 1) + 1; i >= 1 && e[i].dx + e[i].dy < x.dx + x.dy; --i) e[i + 1] = e[i];\n\te[i + 1] = x;\n}\n\nint main()\n{\n\tscanf(\"%d%d\", &N, &K);\n\t\n\tfor (int i = 1; i <= N; ++i)\n\t{\n\t\tfor (int j = 1; j <= N; ++j)\n\t\t{\n\t\t\tscanf(\"%d\", &a[i][j]);\n\t\t\tsum += a[i][j];\n\t\t}\n\t}\n\n\tfor (int i = 1; i <= N; ++i)\n\t{\n\t\tfor (int j = 1; j <= N; ++j)\n\t\t{\n\t\t\tif (((i ^ j) & 1) == 0)    // \u5982\u679c\u662f\u9ed1\u683c\n\t\t\t{\n\t\t\t\tif (i > 1) add(edge(2 + (i - 1) * N + j, 2 + (i - 2) * N + j, a[i][j], a[i - 1][j]));\n\t\t\t\tif (i < N) add(edge(2 + (i - 1) * N + j, 2 + i * N + j, a[i][j], a[i + 1][j]));\n\t\t\t\tif (j > 1) add(edge(2 + (i - 1) * N + j, 1 + (i - 1) * N + j, a[i][j], a[i][j - 1]));\n\t\t\t\tif (j < N) add(edge(2 + (i - 1) * N + j, 3 + (i - 1) * N + j, a[i][j], a[i][j + 1]));\n\t\t\t}\n\t\t}\n\t}\n\n\t// \u5f00\u59cb\u5efa\u8fb9\n\tGraph::s = 1;\n\tGraph::t = N * N + 3;\n\tGraph::build(1, 2, K, 0);\n\tfor (int i = 7 * (K - 1) + 1; i >= 1; --i)\n\t{\n\t\tif (!f[e[i].x])\n\t\t{\n\t\t\tGraph::build(2, e[i].x, 1, -e[i].dx);\n\t\t\tf[e[i].x] = 1;\n\t\t}\n\t\tif (!f[e[i].y])\n\t\t{\n\t\t\tGraph::build(e[i].y, Graph::t, 1, -e[i].dy);\n\t\t\tf[e[i].y] = 1;\n\t\t}\n\t\tGraph::build(e[i].x, e[i].y, 1, 0);\n\t}\n\t\n\tGraph::Flow::Dinic();\n\tprintf(\"%lld\\n\", sum + Graph::Flow::Ans.second);\n\n\treturn 0;\n}\n```",
        "postTime": 1658324549,
        "uid": 193684,
        "name": "Sukwants",
        "ccfLevel": 0,
        "title": "P7231 [COCI2015-2016#3] DOMINO"
    },
    {
        "content": "\u5efa\u8bae\u96be\u5ea6\uff1a\u63d0\u9ad8+\uff08\u663e\u7136\u8d39\u7528\u6d41\u662f\u84dd\u9898\uff09\n\n\u9898\u610f\u7b80\u8ff0\uff1a$n\\times n$ \u7f51\u683c\uff0c\u683c\u5b50\u6709\u6743\uff0c$k$ \u4e2a\u8986\u76d6 $1\\times 2$ \u7684\u9aa8\u724c\uff0c\u4f7f\u672a\u8986\u76d6\u7684\u6570\u5c3d\u91cf\u5927\u3002$n\\leq 2000 , k\\leq 8$\n\n\u65e2\u7136\u662f\u9aa8\u724c\u8986\u76d6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u60f3\u5230\u5229\u7528\u7f51\u683c\u56fe\u7684\u9ed1\u767d\u67d3\u8272\uff0c\u5c06 $s$ \u8fde\u9ed1\u683c\uff0c\u767d\u683c\u8fde $t$ \uff0c\u8d39\u7528\u90fd\u662f\u5bf9\u5e94\u683c\u5b50\u6743\u503c\uff0c\u518d\u5c06\u76f8\u90bb\u7684\u9ed1\u683c\u8fde\u767d\u683c\u65e0\u8d39\u7528\u3002\uff08\u4ee5\u4e0a\u8fb9\u6743\u5747\u4e3a $1$\uff09\u6700\u5927\u8d39\u7528\u6700\u5927\u6d41\u5c31\u662f\u8986\u76d6\u7684\u683c\u5b50\u6700\u5927\u503c\u3002\n\n\u6709\u4e24\u79cd\u65b9\u6cd5\uff0c\u7b2c\u4e00\u79cd\u6700\u7b80\u5355\u7684\u60f3\u6cd5\u5c31\u662f\u76f4\u63a5\u66b4\u529b\u8fde\u66b4\u529b\u8dd1\uff0c\u53ef\u662f $n^2\\leq 4000000$ \u8dd1\u5f97\u52a8\u5417\uff1f\n\n\u9274\u4e8e $k\\leq 8$ \u7528 spfa \u627e\u6700\u77ed\u8def\u57fa\u672c\u53ef\u4ee5\u4fdd\u8bc1\u6bcf\u6b21 $O(m)$ \u6240\u4ee5 $O(kn^2)$\uff0c\u663e\u7136\u53ef\u8fc7\uff0c\u6ce8\u610f\u5efa\u53cd\u5411\u8fb9\u7684\u8bdd\u8fb9\u6570\u8fbe\u5230\u4e86 $6n^2$\uff0c\u8981\u5361\u5361\u7a7a\u95f4\u3002\uff08$O(n^2)$\uff0c\u4f46\u5e38\u6570\u4e0d\u5c0f\uff09\n\n\u4ee3\u7801\uff08\u6838\u5fc3\u90e8\u5206\uff09\uff1a\n\n```\n\nint id[2001][2001];\nint s[2001][2001];\nint fx[4]={1,0,-1,0},fy[4]={0,1,0,-1};\nint main(){\n\tint n,k;cin>>n>>k;int ei=0;qi=n*n+1,zo=qi+1;\n\tll all=0;\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tid[i][j]=++ei;s[i][j]=read();all+=s[i][j];\n\t\t\tif((i&1)^(j&1)){add(qi,id[i][j],1,-s[i][j]);\n\t\t\t}else{add(id[i][j],zo,1,-s[i][j]);} //\u6211\u7684\u4ee3\u7801\u8d39\u7528\u6d41\u662f\u6700\u77ed\u8def\uff0c\u6240\u4ee5\u8fb9\u6743\u53d6\u53cd\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif((i&1)^(j&1)){\n\t\t\t\tfor(int f=0;f<4;f++){int x=i+fx[f],y=j+fy[f];\n\t\t\t\t\tif(id[x][y]){\n\t\t\t\t\t\tadd(id[i][j],id[x][y],1,0);\n\t\t\t\t\t}\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\t\n\t} run(zo,k);cout<<all+ansf<<endl;//\u6ce8\u610fansf\u5982\u4e0a\u6240\u8ff0\uff0c\u662f\u8d1f\u6570\n}\n```\n\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u5982\u53e6\u4e00\u7bc7\u9898\u89e3\u6240\u8bf4\uff0c\u6bcf\u4e2a\u9aa8\u724c\u653e\u4e0b\u540e\uff0c\u6700\u591a\u4f7f $6$ \u79cd\u9aa8\u724c\u4f4d\u7f6e\u4f5c\u5e9f\uff0c\u6240\u4ee5\u9009\u62e9\u7684\u9aa8\u724c\u4e00\u5b9a\u4ea7\u751f\u5728\u524d $7k$ \u5927\u7684\u9aa8\u724c\u91cc\u3002\n\n\u6211\u4eec\u627e\u51fa\u8fd9 $7k$ \u5f20\u9aa8\u724c\uff0c\u8d39\u7528\u6d41\u53ea\u5efa\"\u8fd9\u4e9b\u9aa8\u724c\u8986\u76d6\u7684\u70b9\"\u6240\u5728\u7684\u70b9\u548c\u8fb9\uff0c\u7a7a\u95f4\u548c\u65f6\u95f4\u5c31\u53ef\u4ee5\u5927\u5927\u6539\u5584\uff0c\u5927\u4f53\u4e0a\u5728 $O(k\\times (7k)^2)$ \u65f6\u7a7a\u5185\u5c31\u53ef\u4ee5\u8dd1\u5b8c\uff0c\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```cpp\n#include<iostream>\n#include<vector>\n#include<cstdlib>\n#include<queue>\n#define For(u,v,i) for(int i=he[u],v=t[i].v;i;v=t[i=t[i].ne].v) \nusing namespace std;\ntypedef long long ll; \nstruct bian{\n    int u,v,ne;short f,l;\n};\nconst int N=40200,M=1410000;\nbian t[M];\nint he[N],l[N],p[N],we=1,qi,zo;bool in[N];\nint d[N],o[N];\nll inf=1e9;\nvoid more(int u,int v,ll l,ll f){\n    t[++we].ne=he[u];he[u]=we;t[we].u=u;t[we].v=v;t[we].l=l;t[we].f=f;\n}\nvoid add(int u,int v,ll l,ll f){more(u,v,l,f);more(v,u,0,-f);}\nvoid out(int n){\n    for(int p=1;p<=n;p++){cout<<p<<\"::\";\n        For(p,v,i){\n            cout<<v<<\",\"<<t[i].l<<\",\"<<t[i].v<<\"  \";\n        }cout<<endl;\n    }\n}\nbool spfa(int n){\n    int w=0,h=0;l[w++]=qi;in[qi]=1;\n    for(int i=1;i<=n;i++){d[i]=inf*2;p[i]=o[i]=0;}o[qi]=inf;d[qi]=0;\n    while(w>h){\n        int u=l[h];h++;in[u]=0;\n        For(u,v,i){\n            if(t[i].l==0)continue;\n            if(d[v]>d[u]+t[i].f){\n                d[v]=d[u]+t[i].f;o[v]=min(o[u],(int)t[i].l);p[v]=i;\n                if(in[v]==0){in[v]=1;l[w++]=v;}\n            }\n        }\n    }return o[zo];\n}\nll ans,ansf;\nvoid run(int n,int k){\n    ans=ansf=0;\n    while(spfa(n)){\n        ans+=o[zo];ansf+=o[zo]*1LL*d[zo];\n\t\tif(ans==k)return;\n        for(int i=p[zo];i;i=p[t[i].u]){\n            t[i].l-=o[zo];t[i^1].l+=o[zo];\n        }\n    }\n}\ninline int read(){\n    int x=0,f=1;char a1=getchar();while(a1<'0'||a1>'9'){if(a1=='-')f=-f;a1=getchar();}\n    while(a1>='0'&&a1<='9'){x=x*10+(a1^48);a1=getchar();}return x*f;\n}\n//\u4ee5\u4e0a\u90e8\u5206\u662f\u8d39\u7528\u6d41\uff0c\u4e0a\u4e00\u79cd\u505a\u6cd5\u524d\u9762\u8d34\u4e0a\u8fd9\u4e00\u6bb5\uff0cN=4020000,M=24100000\u5c31\u662f\u5b8c\u6574\u7248\nint id[2001][2001];\nint s[2001][2001];\nint cu[4000010];\nint fx[4]={1,0,-1,0},fy[4]={0,1,0,-1};\nstruct dui{\n\tint u,v,le;\n};\nbool operator < (dui a,dui b){\n\treturn a.le>b.le;\n}\npriority_queue<dui> to;//\u4f18\u5148\u961f\u5217\u7ef4\u62a4\u524dk\u5927\nint main(){\n\tint n,k;cin>>n>>k;int ei=0;\n\tll all=0;\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tid[i][j]=++ei;s[i][j]=read();all+=s[i][j];\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif((i&1)^(j&1)){\n\t\t\t\tfor(int f=0;f<4;f++){int x=i+fx[f],y=j+fy[f];\n\t\t\t\t\tif(id[x][y]==0)continue;\n\t\t\t\t\tint le=s[i][j]+s[x][y];\n\t\t\t\t\tif(to.size()<k*7||le>to.top().le){\n                   //\u6bd4\u5f53\u524d\u7b2c7k\u5927\u7684\u8fb9\u5927\uff0c\u90a3\u5c31\u53ef\u4ee5\u5c1d\u8bd5\u653e\u5165\n\t\t\t\t\t\tto.push(dui{id[i][j],id[x][y],le});\n\t\t\t\t\t}if(to.size()>k*7){\n                    //\u4fdd\u6301\u53ea\u67097k\u6761\n\t\t\t\t\t\tto.pop();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}ei=0;\n\twhile(!to.empty()){\n\t\tcu[to.top().u]=++ei;cu[to.top().v]=++ei;to.pop();\n\t}qi=ei+1;zo=qi+1;\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(cu[id[i][j]]==0)continue;\n\t\t\tif((i&1)^(j&1))add(qi,cu[id[i][j]],1,-s[i][j]);\n\t\t\telse add(cu[id[i][j]],zo,1,-s[i][j]);\n\t\t\tif((i&1)^(j&1)){\n\t\t\t\tfor(int f=0;f<4;f++){int x=i+fx[f],y=j+fy[f];\n\t\t\t\t\tif(cu[id[x][y]]){\n\t\t\t\t\t\tadd(cu[id[i][j]],cu[id[x][y]],1,0);\n\t\t\t\t\t}\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\t\n\t} \n\trun(zo,k);cout<<all+ansf<<endl;\n}\n```\n",
        "postTime": 1658321774,
        "uid": 211538,
        "name": "Math_rad_round",
        "ccfLevel": 7,
        "title": "P7231 [COCI2015-2016#3] DOMINO \u9898\u89e3"
    }
]