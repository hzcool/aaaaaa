[
    {
        "content": "\u7528\u4e00\u4e2a\u6570\u7ec4\u5982s[i,j]\u8868\u793ai\u5230j\u7684\u6570\u503c\uff0c\u53d8\u6b65\u957f\u7684\u641c\u7d22k\u4e2a\u52a0\u53f7\uff0ck\u4e0d\u65ad\u9012\u589e\uff0c\u5224\u65ad\u5728k\u4e2a\u52a0\u53f7\u7684\u60c5\u51b5\u4e0b\u80fd\u5426\u8fbe\u5230\u6240\u8981\u7684\u503c\uff0c\u82e5\u80fd\u5c31\u8f93\u51fak\u5e76\u9000\u51fa\n",
        "postTime": 1383386952,
        "uid": 1,
        "name": "kkksc03",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1874 \u3010\u5feb\u901f\u6c42\u548c\u3011"
    },
    {
        "content": "\u53d1\u4e00\u7bc7\u7c7b\u4f3c\u4e8e**\u80cc\u5305**\u7684**\u4e8c\u7ef4DP**\u5427\n\n\u9996\u5148\u8bbe\u72b6\u6001\uff1a\n\n\u6211\u4eec\u8bbe  **f [ i ][ j ]** \u8868\u793a  \u524d **i**\u4f4d\u6570\u5b57 \u7ec4\u6210 **j** \u7684\u6700\u5c11\u52a0\u6cd5\u6b21\u6570\n\n\u6240\u4ee5\uff0c\u7c7b\u4f3c\u4e8e\u80cc\u5305\u7684\u8f6c\u79fb\u65b9\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u65b9\u7a0b\uff1a\n\n **f [ i ] [ j ] = min { f [ i - k ] [ j - s [ i - k + 1 ] [ i ] ] + 1 , f [ i ] [ j ] } ;  **\n \n\u5373\u7b2c\u4e8c\u7ef4\u7c7b\u6bd4\u4e8e\u80cc\u5305\u4e2d\u7684\u4f53\u79ef\uff0c\n\n\u5176\u4e2d\uff0cs [ ] [ ] \u6570\u7ec4\u662f\u9884\u5904\u7406\u51fa\u6765\u7684\u201c\u539f\u6570\u201d \uff0c \u5373\u4e0d\u6dfb\u52a0\u53f7\u65f6\u7684\u201c\u975e\u4e00\u4f4d\u6570\u201d~~\u591a\u4f4d\u6570~~ \uff0c \u7531\u4e8e\u6570\u636e\u4e2d n <= 100000 , \u6240\u4ee5\u9884\u5904\u7406\u51fa6\u4f4d\u5c31\u8db3\u591f\u4e86\uff0c\u4f46\u662f\u8981\u9632\u5907 \u50cf\u201c03\u201d\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u518d\u591a\u5f00\u51e0\u4f4d\u5c31\u597d\u4e86\u2026\u2026\u2026\u2026\u2026\u2026\n~~\u60e8\u75db\u7684\u6559\u8bad\uff0c\u6211\u8c03\u4e86\u597d\u51e0\u904d~~\n\n\u65b9\u7a0b\u51fa\u6765\u540e\uff0c\u7136\u540e\u662f\u521d\u59cb\u5316 \uff1a\n\t\u56e0\u4e3a\u6c42\u7684\u662f min \u503c \uff0c\u6240\u4ee5\u5168\u90e8\u521d\u59cb\u5316\u4e3a\u6781\u5927\u503c\uff0c\n    \u4f46\u662f\u8981\u5207\u8bb0 f [ 0 ] [ 0 ] = 0 , \n    \u5426\u5219\u65e0\u6cd5\u5b8c\u6210\u8f6c\u79fb\n   \n\u7b80\u6d01\u7684 DP \n\u6e05\u6670\u7684\u601d\u8def\n\u4ee3\u7801\u5982\u4e0b \uff1a\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<string>\n#include<cstring>\n#define ll unsigned long long \n#define E 100007\nusing namespace std ;\nstring sr ; \nll a[E] , s[43][43] , f[43][E] ; // \u524d i \u4f4d\u6570\u5b57 \u7ec4\u6210 j \u7684\u6700\u5c11\u52a0\u6cd5\u6b21\u6570   f[i][j] = min { f[i-k][j-s[i-k+1][i]] + 1 , f[i][j] } ;  \nint main(){\n\tcin >> sr ;\n\tll len = sr.length() ; \n\tfor(ll i =  0 ; i < len ; i ++) a[i + 1] = sr[i] - '0' ; \n\tfor(ll i = 1 ; i <= len ; i ++)\n\t{\n\t    s[i][i] = a[i] ; \n\t\tfor(ll j = i ; j - i <= 11 && j <= len ; j ++)\n\t\t\ts[i][j] = s[i][j-1] * 10 + a[j] ;\n\t}\n\tll n ; cin >> n ;\n\tfor(ll i = 0 ; i <= len + 1 ; i ++) for(ll j = 0 ; j <= n + 1 ; j ++) f[i][j] = 0x7fffffff ;  f[0][0] = 0 ;\n\tfor(ll i = 1 ; i <= len ; i ++)\n\t\tfor(ll k = 1 ; k <= 11 && i + k <= len + 3 ; k ++)\n\t\t\tif(i >= k)\n\t\t\t\tfor(ll j = s[i-k+1][i] ; j <= n ; j ++)\n\t\t\t\t\tf[i][j] = min(f[i-k][j-s[i-k+1][i]] + 1 , f[i][j])  ;\n\tif(n == 0) cout << 0 << endl ;\n\telse if(f[len][n] > len ) cout << -1 << endl ;\t\t\n\telse cout << f[len][n] - 1 << endl ; \n\treturn -0 ; \n}\n```\n\n@[\u4f5c\u8005](https://www.luogu.org/space/show?uid=88089)[troubler](https://www.luogu.org/space/show?uid=88089)",
        "postTime": 1537431768,
        "uid": 87929,
        "name": "Swing_YL",
        "ccfLevel": 4,
        "title": "\u3010\u9898\u89e3\u3011P1874 \u5feb\u901f\u6c42\u548c \u4e8c\u7ef4\u80cc\u5305"
    },
    {
        "content": "\u672c\u9898\u601d\u8def\u975e\u5e38\u660e\u786e\uff1a\u5728\u6240\u6709\u80fd\u63d2\u5165\u52a0\u53f7\u7684\u4f4d\u7f6e\u679a\u4e3e\u52a0\u53f7\u662f\u5426\u5b58\u5728\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u60c5\u51b5\uff0c\u82e5\u6c42\u5f97\u548c\u4e3an\u5219\u66f4\u65b0\u7b54\u6848\u3002\n\n\u4f46\u662f\u770b\u770b\u6570\u636e\u89c4\u6a21\u3002\u3002\u3002\u957f\u5ea6<=40\uff0c\u4e5f\u5c31\u662f\u8bf4\u679a\u4e3e\u7684\u65f6\u95f4\u6700\u591a\u53ef\u8fbe2^39\uff0c\u663e\u7136\u4f1aT\uff0c\u6240\u4ee5\u9700\u8981\u526a\u679d\u3002\n\n\u526a\u679d1\uff1a\u82e5\u6574\u4e32\u62c6\u5206\u4e3a\u5355\u4e2a\u6570\u5b57\u540e\u6c42\u548c\uff0c\u6240\u5f97\u7ed3\u679c>n\uff0c\u5219\u4e00\u5b9a\u65e0\u89e3\u3002\n\n\u539f\u56e0\uff1a~~\u663e\u7136~~\u5728\u4e00\u6b21\u62c6\u5206\u540e\uff0c\u65b0\u751f\u6210\u7684\u6570\u5b57\u7684\u548c\u4e0d\u4f1a\u6bd4\u672a\u62c6\u5206\u4e4b\u524d\u7684\u5927\uff08\u4e0d\u8981\u95ee\u6211\u4e3a\u4ec0\u4e48\uff0c\u8fd9\u662f\u76f4\u89c9\uff09\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u67d0\u4e2a\u4e32\uff0c\u5b83\u5bf9\u5e94\u7684\u548c\u6700\u5c0f\u7684\u62c6\u5206\u65b9\u6848\u5373\u4e3a\uff1a\u5c06\u5176\u62c6\u5206\u4e3a\u5355\u4e2a\u6570\u5b57\u3002\n\n\u4e8e\u662f\u4e4e\uff0c\u6574\u4e32\u5bf9\u5e94\u7684\u6700\u5c0f\u7684\u548c\u90fd>n\uff0c\u90a3\u4e48\u5c31\u4e0d\u53ef\u80fd\u6709\u53ef\u884c\u89e3\u4e86\u3002\n\n\u526a\u679d2\uff1a\u82e5\u5c06\u672a\u5904\u7406\u90e8\u5206\u4f5c\u4e3a\u4e00\u4e2a\u6570\u5b57\u4e0e\u5df2\u5904\u7406\u90e8\u5206\u76f8\u52a0\uff0c\u6240\u5f97\u7684\u548c<n\uff0c\u5219\u5728\u6b64\u9012\u5f52\u5b50\u6811\u4e2d\u4e00\u5b9a\u65e0\u89e3\u3002\n\n\u539f\u56e0\uff1a\u7c7b\u6bd4\u4e00\u4e0b\u526a\u679d1\uff0c\u53ef\u5f97\uff1a\u5bf9\u4e8e\u67d0\u4e2a\u4e32\uff0c\u5b83\u5bf9\u5e94\u7684\u548c\u6700\u5927\u7684\u62c6\u5206\u65b9\u6848\u4e3a\uff1a\u76f4\u63a5\u5c06\u5176\u8f6c\u5316\u4e3a\u6570\u5b57\uff0c\u5373\u4e0d\u62c6\u5206\uff08\u4e0d\u8981\u95ee\u6211\u4e3a\u4ec0\u4e48\uff0c\u8fd9\u4e5f\u662f\u76f4\u89c9\uff09\u3002\n\n\u90a3\u4e48\uff0c\u5c06\u672a\u5904\u7406\u90e8\u5206\u4f5c\u4e3a\u4e00\u4e2a\u6570\u5b57\u4e0e\u5df2\u5904\u7406\u90e8\u5206\u76f8\u52a0\uff0c\u5c31\u662f\u6b64\u9012\u5f52\u5b50\u6811\u4e2d\u5bf9\u5e94\u548c\u6700\u5927\u7684\u65b9\u6848\u3002\n\n\u5982\u679c\u6700\u5927\u7684\u548c\u90fd<n\uff0c\u90a3\u4e48\u5c31\u4e0d\u53ef\u80fd\u6709\u53ef\u884c\u89e3\u4e86\u3002\n\n\u526a\u679d3\uff1a\u82e5\u5f53\u524d\u52a0\u53f7\u6570\u91cf>=ans\uff0c\u5219\u6b64\u9012\u5f52\u5b50\u6811\u4e2d\u65e0\u66f4\u4f18\u89e3\u3002\u8fd9\u4e00\u70b9\u5341\u5206\u663e\u7136\u3002\n\n\u526a\u679d4\uff1a\u82e5\u5c06\u672a\u5904\u7406\u90e8\u5206\u62c6\u5206\u4e3a\u5355\u4e2a\u6570\u5b57\u540e\u4e0e\u5df2\u5904\u7406\u90e8\u5206\u6c42\u548c\uff0c\u6240\u5f97\u7684\u548c>n\uff0c\u5219\u5728\u6b64\u9012\u5f52\u5b50\u6811\u4e2d\u4e00\u5b9a\u65e0\u89e3\u3002\n\n\u539f\u56e0\uff1a\u540c\u526a\u679d1\u3002\n\n\u526a\u679d5\uff1a\u82e5\u627e\u5230\u4e00\u4e2a\u53ef\u884c\u89e3\uff0c\u5219\u6b64\u9012\u5f52\u5b50\u6811\u4e2d\u65e0\u66f4\u4f18\u89e3\u3002\u518d\u641c\u4e0b\u53bb\uff0c\u52a0\u53f7\u4f1a\u589e\u591a\uff0c\u4e00\u5b9a\u5f97\u4e0d\u5230\u6bd4\u6b64\u53ef\u884c\u89e3\u66f4\u4f18\u7684\u89e3\u3002\n\n\u5b9e\u73b0\u7ec6\u8282\u53ca\u526a\u679d\u4f4d\u7f6e\u8be6\u89c1\u4ee3\u7801\u53ca\u6ce8\u91ca\u3002\n\n```cpp\n#include<cstdio>\n#include<cstring>\n\nusing namespace std;\n\nvoid dfs(int,int,int);\ninline int val(int,int);  //\u5c06\u67d0\u5b50\u4e32\u8f6c\u5316\u4e3a\u6570\u5b57 \ninline int min(int,int);\ninline int qh(int,int);  //\u5c06\u67d0\u5b50\u4e32\u62c6\u5206\u4e3a\u5355\u4e2a\u6570\u5b57\u540e\u6c42\u548c \n\nchar s[50];\nint a[50],l,ans=2147483647,sum=0,n;\n\nint main(){\n    scanf(\"%s\",s+1);\n    scanf(\"%d\",&n);\n    l=strlen(s+1);\n    for(int i=1;i<=l;i++){\n        a[i]=s[i]-'0';\n        sum+=a[i];\n    }\n    if(sum>n){\n        printf(\"-1\\n\");  //\u526a\u679d1 \n        return 0;\n    }\n    else{\n        dfs(0,0,0);\n        if(ans==2147483647)printf(\"-1\\n\");\n        else printf(\"%d\\n\",ans);\n    }\n    \n    return 0;\n}\n\nvoid dfs(int res,int p,int dep){  //res\uff1a\u5df2\u5904\u7406\u90e8\u5206\u7684\u548c p\uff1a\u6807\u8bb0\u5df2\u7ecf\u5904\u7406\u5230\u4f55\u5904 dep\uff1a\u52a0\u53f7\u6570\u91cf \n    int temp=res+val(p+1,l);  //\u5c06\u672a\u5904\u7406\u90e8\u5206\u4f5c\u4e3a\u4e00\u4e2a\u6570\u5b57\u4e0e\u5df2\u5904\u7406\u90e8\u5206\u76f8\u52a0\n    if(temp<n)return;  //\u526a\u679d2 \n    if(dep>=ans)return;  //\u526a\u679d3 \n    if(res+qh(p+1,l)>n)return;  //\u526a\u679d4 \n    if(temp==n){  //\u627e\u5230\u53ef\u884c\u89e3 \n        ans=min(ans,dep);  //\u66f4\u65b0\u7b54\u6848 \n        return;  //\u526a\u679d5 \n    }\n    for(int i=p+1;i<l;i++){\n        temp=res+val(p+1,i);\n        dfs(temp,i,dep+1);\n    }\n}\n\ninline int val(int l,int r){\n    int ans=0;\n    for(int i=l;i<=r;i++)ans=(ans<<3)+(ans<<1)+a[i];\n    return ans;\n}\n\ninline int min(int x,int y){\n    if(x<y)return x;else return y;\n}\n\ninline int qh(int l,int r){\n    int ans=0;\n    for(int i=l;i<=r;i++)ans+=a[i];\n    return ans;\n}\n```\n",
        "postTime": 1562657622,
        "uid": 22630,
        "name": "Running_Coder",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1874 \u3010\u5feb\u901f\u6c42\u548c\u3011"
    },
    {
        "content": "\u597d\u50cf\u6ca1\u6709p\u515a\u7684\u9898\u89e3\uff0c\u6211\u6765\u5199\u4e00\u53d1\n\n\u672c\u9898\u601d\u8def\u5c31\u662f\u679a\u4e3e\u52a0\u53f7\u7684\u7b26\u53f7\u4f4d\u7f6e\uff0c\u518d\u628a\u6570\u503c\u52a0\u8d77\u6765\n\n\u6211\u4eec\u5f88\u5bb9\u6613\u7684\u53ef\u4ee5\u60f3\u5230\u7528dfs\u505a\uff0c\u7136\u540e\u52a0\u52a0\u53f7\uff0c\u56de\u6eaf\u6bcf\u4e00\u4e2a\u52a0\u53f7\u4f4d\u7f6e\n\n\u4f46\u662fkkk\u5927\u4f6c\u9898\u89e3\u4e0a\u8d21\u732e\u4e86\u53e6\u4e00\u79cd\u601d\u8def\uff08```\u7528\u4e00\u4e2a\u6570\u7ec4\u5982s[i,j]\u8868\u793ai\u5230j\u7684\u6570\u503c\uff0c\u53d8\u6b65\u957f\u7684\u641c\u7d22k\u4e2a\u52a0\u53f7\uff0ck\u4e0d\u65ad\u9012\u589e\uff0c\u5224\u65ad\u5728k\u4e2a\u52a0\u53f7\u7684\u60c5\u51b5\u4e0b\u80fd\u5426\u8fbe\u5230\u6240\u8981\u7684\u503c\uff0c\u82e5\u80fd\u5c31\u8f93\u51fak\u5e76\u9000\u51fa```\uff09\uff0c\u4e0d\u8fc7\u4ed6\u6ca1\u6709\u53d1\u4ee3\u7801\uff0c\u5c31\u7531\u6211\u6765\u8d21\u732e\u4e00\u4e0b\u4ee3\u7801\u5427\n```cpp\nvar\n  s1:string;\n  s:array[0..41,0..41]of qword;//s[i,j]\u8868\u793ai\u5230j\u7684\u6570\u503c\n  i,j,min,x:longint;\n\n procedure dfs(k,j:longint;sum:qword;num:longint);//k\u662f\u5f53\u524d\u53ef\u80fd\u8981\u52a0\u52a0\u53f7\u7684\u4f4d\u7f6e\uff0cj\u662f\u4e0a\u4e00\u6b21\u52a0\u52a0\u53f7\u7684\u4f4d\u7f6e\uff0c\u90a3\u4e48\u4e0b\u9762\u7684s[j,k]\u5c31\u662fj\u5230k\u7684\u503c\u4e86\uff0csum\u548cnum\u662f\u5f53\u524d\u7684\u6570\u503c\u603b\u548c\u3001\u52a0\u53f7\u7684\u4f4d\u7f6e\n  begin\n    if (num>=min)or(sum>x)or(s[j,k]>x) then exit;//\u5982\u679c\u52a0\u53f7\u6570\u4e0d\u662f\u6700\u5c11\u7684\u6216\u603b\u548c\u8d85\u8fc7\u76ee\u6807\u8981\u7684\u548c\u5c31\u9000\u51fa\uff0c\u5f53\u7136\u5982\u679cs[j,k]\u6bd4\u76ee\u6807\u603b\u548c\u5927\u4e5f\u8981\u9000\u51fa\n    if k>=length(s1) then //\u5982\u679c\u80fd\u52a0\u7684\u52a0\u53f7\u52a0\u5b8c\u4e86\u5c31\u628a\u503c\u5224\u65ad\u662f\u4e0d\u662f\u76ee\u6807\u6570\n    begin\n      if sum+s[j,k]=x then min:=num;//\u662f\u7684\u8bdd\u4fdd\u5b58\u7b54\u6848\n      exit;\n    end;\n    dfs(k+1,j,sum,num);//\u5f53\u524d\u7684\u4f4d\u7f6e\u4e0d\u52a0\u52a0\u53f7\n    dfs(k+1,k+1,sum+s[j,k],num+1);//\u52a0\u4e0a\u52a0\u53f7,\u5e76\u66f4\u65b0j\n  end;\n\nbegin\n  readln(s1);\n  readln(x);\n  min:=100;\n  for i:=1 to length(s1) do\n  for j:=1 to length(s1)-i+1 do\n  val(copy(s1,i,j),s[i,i+j-1]);//\u9884\u5904\u7406s\u6570\u7ec4\uff0c\u5b9e\u73b0\u8d77\u6765\u8fd8\u662f\u8f83\u5bb9\u6613\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u7528pascal\u7684val\u65b9\u4fbf\u628ai\u5230j\u7684\u6570\u503c\u8f6c\u6362\u5230s[i,j]\n  dfs(1,1,0,0);\n  if min=100 then write(-1)\n  else write(min);\nend.\n```\n\u6ce8\u610f\u603b\u548c\u8981\u5f00int64/long long",
        "postTime": 1553327494,
        "uid": 92401,
        "name": "Gu_Ren",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1874 \u3010\u5feb\u901f\u6c42\u548c\u3011"
    },
    {
        "content": "## \u849f\u84bb\u5b59\u67d0\u4eba\u7684\u7b2c\u4e00\u7bc7\u9898\u89e3\uff0c\u671b\u7ba1\u7406\u5458\u901a\u8fc7\uff01###### \n\n# **\u672c\u4eba\u7684\u60f3\u6cd5\u5f88\u7b80\u5355\uff1a\u66b4\u529b\u6df1\u641c**\n\n**\u597d\u50cf\u4e5f\u53ef\u4ee5\u679a\u4e3e\uff0c\u66f4\u52a0\u66b4\u529b**\n\n\u8bdd\u4e0d\u591a\u8bf4\uff0c\u4ee3\u7801\u5206\u6790\n\n```cpp\n#include<bits/stdc++.h>//\u4e07\u80fd\u5934\u6587\u4ef6\uff0c\u8bf7\u5148\u4eceint main\u4e0b\u9762\u770b\u8d77 \nusing namespace std;\nint a[50],shu,biao,sum,minn=10000000,len=1;\nbool pd,plus_[50];\nstring ss;\nint cr(int left,int right)//\u7092\u9e21\u6709\u7528\uff0c\u8f93\u5165\u5934\u5c3e\uff0c\u6c42\u4e2d\u95f4\u8fd9\u4e00\u6bb5\u6570\u7684\u503c \n{\n\tint yin=1,num=0;//yin\u662f\u6bcf\u4f4d\u6570\u7684\u57fa\u6570\uff0cnum\u662f\u603b\u548c \n\tfor(int i=right;i>=left;i--)\n\t{\n\t\tnum+=a[i]*yin;\n\t\tyin*=10;\n\t}\n\treturn num;\n}\nvoid dfs(int step,int sum)//step\u662f\u5f53\u524d\u6570\u503c\u7684\u548c\uff0csum\u662f\u52a0\u53f7\u6570\u91cf \n{\n\tif(sum==minn)return;//\u5982\u679csum\u5df2\u7ecf\u7b49\u4e8e\u52a0\u53f7\u6700\u5c0f\u503c\u4e86\uff0c\u5c31\u8fd4\u56de\uff0c\u6ca1\u5fc5\u8981\u518d\u505a\uff0c\u7701\u65f6\u95f4 \n\tif(step==biao)//\u6570\u503c\u7b49\u4e8e\u76ee\u6807 \n\t{\n\t\tif(sum<minn)\n\t\t{\n\t\t    minn=sum;\n\t\t    pd=true;//pd\u8868\u793a\u7684\u662f\u6700\u540e\u662f\u5426\u80fd\u8fbe\u5230\u76ee\u6807\uff0c\u51b3\u5b9a\u8f93\u51fa-1\u8fd8\u662fminn \n\t\t}\n\t\treturn;\n\t}\n    for(int i=1;i<len;i++)//\u8868\u793a\u5728a[i]\u8fd9\u4e2a\u6570\u5b57\u540e\uff0ca[i+1]\u6570\u5b57\u524d\u52a0\u52a0\u53f7\n    {\n    \tif(plus_[i])continue;//plus\u6570\u7ec4\u8868\u793a\u6b64\u4f4d\u7f6e\u52a0\u53f7\u662f\u5426\u653e\u7f6e\uff0c\u672a\u653e\u7f6e\u4e3afalse\uff0c\u5df2\u653e\u7f6e\u4e3atrue \n    \tplus_[i]=true;\n    \tint f=0,start=1;\n    \tfor(int j=1;j<len;j++)//\u641c\u7d22\u52a0\u53f7\uff0c\u5c06\u51e0\u4e2a\u90e8\u5206\u52a0\u8d77\u6765 \n    \tif(plus_[j])\n    \t{\n    \t\tf+=cr(start,j);\n    \t\tstart=j+1;\n    \t}\n    \tf+=cr(start,len);//\u52a0\u4e0a\u6700\u540e\u7684\u90e8\u5206 \n    \tdfs(f,sum+1);//f\u4e3a\u5f53\u524d\u7684\u503c \n    \tplus_[i]=false;//\u56de\u6eaf\u4e00\u6b65 \n    }\n}\nint main()\n{\n    cin>>ss;//\u5148\u7528\u5b57\u7b26\u4e32\u8bfb\u5165\u3002\u56e0\u4e3a\u539f\u6570\u7528\u6570\u7ec4\u4fdd\u5b58\u65b9\u4fbf\u5f88\u591a\uff01\u5982\u7528while\uff08cin\uff09\u4f1a\u5c06\u76ee\u6807\u6570\u5b57\u4e5f\u8bfb\u5165\u6570\u7ec4\uff01    \n\tlen=ss.size();\n\tfor(int i=0;i<len;i++)a[i+1]=ss[i]-'0';//\u5b57\u7b26\u8f6c\u6574\u6570  \n\tcin>>biao;//\u76ee\u6807\u6570 \n\tdfs(cr(1,len)/*\u6c42\u548c\u51fd\u6570\uff0c\u8bf7\u770b\u4e0a\u9762*/,0);//\u66b4\u529b\u6df1\u641c\u5f00\u59cb\uff0c\u8bf7\u770b\u4e0a\u9762 \n\tif(!pd)cout<<-1; \n\telse cout<<minn;\n\treturn 0;\n}\n```",
        "postTime": 1526098998,
        "uid": 84613,
        "name": "\u5b59\u67d0\u4eba",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1874 \u3010\u5feb\u901f\u6c42\u548c\u3011"
    },
    {
        "content": "# **\u66b4\u529b\u6df1\u641c**\n~~\u5173\u952e\u662f\u6b64\u9898\u6570\u636e\u4e0d\u7528\u526a\u679d......~~\n\n\u54b3\u54b3\u54b3\uff0c\u8fd9\u9053\u9898\u6211\u91c7\u7528\u7684\u662f\u56de\u6eaf\uff0c\u56de\u6eaf\u7684\u5185\u5bb9\u662f1~K\u4e2a\u52a0\u53f7\u7684\u7ec4\u5408\u3002\n\n\u4e00\u65e6\u6709\u60c5\u51b5\u7684\u503c==n\uff0c\u5373\u53ef\u8f93\u51fai\u3002\n\n**\u91cd\u8981\u5185\u5bb9**\u8bf7\u770b\u4ee3\u7801\uff1a\n~~~cpp\n#include<iostream>\n#include<algorithm>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#include<string>\nusing namespace std;\nstring st;\nlong long n,i;\nlong long book[55];\nbool f;\nvoid dfs(long long k)//\u660e\u660e\u662f\u7ec4\u5408\uff0c\u5374\u88ab\u6211\u5199\u6210\u4e86\u6392\u5217\n{\n\tif(k==i)\n\t{//\u91cd\u70b9\u554a\u91cd\u70b9\u554a\uff08\u6572\u9ed1\u677f\uff09\n\t\tlong long ans=0,sum=st[0]-'0';//sum\u5f00\u59cb\u4e0d\u4e3a0\uff0c\u5c31\u4f7f\u5f97\u4e00\u5f00\u59cb\u5c31\u6709+\u53f7\u7684\u60c5\u51b5\u80fd\u6b63\u597d\u907f\u514d\u3002\n\t\tfor(int j=1;j<st.size();j++)\n\t\t{\n\t\t\tif(book[j]==0)sum=sum*10+st[j]-'0';//\u8fdb\u4f4d\u5c31\u4e0d\u7528\u6211\u8bb2\u4e86\u5427\n\t\t\telse ans+=sum,sum=st[j]-'0';//ans\u7d2f\u8ba1\u8fd9\u4e00\u6bb5\u7684\u548c\uff0c\u800c\u8fd9\u65f6\u6b63\u597d\u6240\u5bf9\u5e94\u7684\u90a3\u4e2a\u6570\u5b57\uff0csum\u5c31\u4e0d\u7528\u6e05\u96f6\uff0c\u76f4\u63a5\u7b49\u4e8e\u90a3\u4e2a\u6570\u5b57\u3002\n\t\t}\n\t\tans+=sum;//\u6700\u540e\u6ca1\u6709\u52a0\u53f7\uff0c\u5c31\u8981\u628a\u6700\u540e\u4e00\u4e2a\u52a0\u6570\u52a0\u4e0a\u3002\n\t\tif(ans==n)f=true;\n\t\treturn ;\n\t}\n\tfor(int j=1;j<st.size();j++)\n\t{\n\t\tif(book[j]==0)\n\t\t{\n\t\t\tbook[j]=1;\n\t\t\tdfs(k+1);\n\t\t\tbook[j]=0;\n\t\t}\n\t}\n}\nint main()\n{\n\tcin>>st>>n;\n\tfor(i=0;i<st.size();i++)//\u8981\u4ece0\u5f00\u59cb\uff0c\u53ef\u80fd\u6b63\u597d\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5c31\u662f\u90a3\u4e2a\u6570\u5b57\u672c\u8eab\u5462\uff1f\uff08\u8fd9\u91cc\u670910\u5206\uff09\n\t{\n\t\tmemset(book,0,sizeof(book));\n\t\tf=false;\n\t\tdfs(0);//\u4ece0\u5f00\u59cb\uff0c\u5c31\u53ef\u6ee1\u8db3\u5b57\u7b26\u4e32\u5c31\u662f\u6570\u5b57\u672c\u8eab\u7684\u60c5\u51b5\u3002\n\t\tif(f==true)\n\t\t{\n\t\t\tcout<<i<<endl;//\u9898\u76ee\u8981\u6c42\u6700\u5c11\u52a0\u53f7\uff0c\u6240\u4ee5\u4e00\u65e6\u627e\u5230\u4e00\u4e2a\u80fd\u4f7f\u5b57\u7b26\u4e32\u53d8\u6210n\u7684\uff0c\u5c31\u53ef\u4ee5\u8f93\u51fa\u4e86\u3002\n\t\t\treturn 0;\n\t\t}\n\t}\n\tcout<<-1<<endl;//\u522b\u5fd8\u4e86\u8f93\u51fa-1\uff08\u8fd9\u91cc\u53c8\u670910\u5206\uff09\n\treturn 0;\n}\n~~~\n\u55ef\uff0c\u53ef\u80fd\u662f\u5e94\u4e3a\u672c\u849f\u84bb\u7684\u8bed\u8a00\u7ec4\u7ec7\u80fd\u529b\u4e0d\u597d\uff0c\u6015\u5728\u5ea7\u7684\u5404\u4f4d\u540c\u5b66\u542c\u4e0d\u61c2\uff0c\u4e8e\u662f\u5c31\u6709\u4e86\u4e0b\u9762\u7684\u914d\u56fe\uff1a\n![](https://cdn.luogu.com.cn/upload/pic/38654.png)\n\u5e0c\u671b\u80fd\u5bf9\u540c\u5b66\u4eec\u7406\u89e3\u672c\u849f\u84bb\u7684\u7a0b\u5e8f\u6709\u6240\u5e2e\u52a9\uff01\n",
        "postTime": 1539966236,
        "uid": 40374,
        "name": "\u53ea\u7528\u51fd\u6570",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1874 \u3010\u5feb\u901f\u6c42\u548c\u3011"
    },
    {
        "content": "\u8003\u8651**\u8fed\u4ee3\u52a0\u6df1**\u7684\u641c\u7d22\u65b9\u5f0f\u3002\n\n\u6211\u4eec\u4ece0\u5f00\u59cb\u679a\u4e3e\u53ef\u80fd\u7684\u7b54\u6848\uff0c\u7136\u540e\u8fdb\u884c\u641c\u7d22\u3002\n\n\u6709\u4e09\u4e2a\u663e\u7136\u7684\u526a\u679d\uff0c\u8fd0\u7528\u4e4b\u540e\u53ef\u4ee5\u63d0\u5347\u7a0b\u5e8f\u7684\u6548\u7387(\u4ecd\u7136\u5f88\u6162)\uff0c\u4f46\u7f16\u7801\uff08\u548c\u601d\u7ef4\uff09\u96be\u5ea6\u5e76\u6ca1\u6709\u63d0\u5347\u3002\n\n- \u5f53\u5c1d\u8bd5\u7684cnt>ans\u65f6\uff0c\u526a\u679d\uff1b\n- \u5f53\u628a\u540e\u9762\u7684\u6240\u6709\u6570\u5b57\u90fd\u62c6\u6210\u4e00\u4f4d\u6570\u5b57\u76f8\u52a0\uff08\u53ef\u4ee5\u8bc1\u660e\uff0c\u8fd9\u6837\u5904\u7406\u540e\uff0c\u5b57\u7b26\u4e32\u7684\u548c\u6700\u5c0f\uff09\u4ecd\u7136\u5927\u4e8en\u65f6\uff0c\u526a\u679d\uff1b\n- \u5f53\u628a\u540e\u9762\u7684\u6570\u5b57\u53bb\u6389\u524d\u5bfc0\u540e\uff0c\u89c6\u4f5c\u4e00\u6574\u4e2a\u6570\u5b57\u76f8\u52a0\uff08\u53ef\u4ee5\u8bc1\u660e\uff0c\u8fd9\u6837\u5904\u7406\u540e\uff0c\u5b57\u7b26\u4e32\u7684\u548c\u6700\u5927\uff09\u4ecd\u7136\u4e0d\u8db3n\u65f6\uff0c\u526a\u679d\uff1b\n\n\u5bf9\u4e8e\u526a\u679d2\uff0c\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a\u540e\u7f00\u548c\u6570\u7ec4sum\uff1b\n\n\u5bf9\u4e8e\u526a\u679d3\uff0c\u6211\u4eec\u5b9e\u73b0\u4e00\u4e2a\uff08\u5957\uff09\u51fd\u6570\uff1a\u5b83\u652f\u6301\u5728\u4e00\u4e2a\u6570\u5b57\u5b57\u7b26\u4e32\u91cc\u627e\u5230\u4e00\u4e2a\u5b50\u6bb5\u5e76\u5c06\u5176\u8f6c\u6362\u6210\u6570\u5b57\u3002\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\nchar line[41];\nint sum[42];\nint n,l;\n\ninline int num(const int &l,const int &r){\n\tint res=0;\n\tfor(int i=l+1;i<=r;++i) res=res*10+line[i]-'0';\n\treturn res;\n}\n\ninline bool enough(const int &last,const int &val){\n\tint i;\n\tfor(i=last+1;line[i]-'0'==0;++i);\n\tif(l-i+1>=9) return true;\n\treturn num(i-1,l)>=n-val;\n}\n\nint ans;\n\nbool dfs(int last,int cnt,int val){\n\tif(cnt>ans) return false;//1\n\tif(last==l) return val==n; \n\tif(val+sum[last+1]>n) return false;//2\n\tif(!enough(last,val)) return false;//3\n\tfor(int now=last+1;val+num(last,now)<=n;++now)\n\t\tif(dfs(now,cnt+(now!=l),val+num(last,now))) return true;\n\treturn false;\n}\n\nvoid read(){\n\tscanf(\"%s %d\",line+1,&n);\n\tl=strlen(line+1);\n\tfor(int i=l;i;--i) sum[i]=sum[i+1]+line[i]-'0';\n}\n\nvoid solve(){\n\tfor(ans=0;!dfs(0,0,0) and ans<l;++ans);\n\tcout<<(ans==l?-1:ans);\n}\n\nint main(){\n\tread();\n\tsolve();\n\treturn 0;\n}\n\n```",
        "postTime": 1539613010,
        "uid": 38283,
        "name": "Dog_Two",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1874 \u3010\u5feb\u901f\u6c42\u548c\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u76f4\u63a5\u641c\u7d22\u5c31\u505a\u5f97\u51fa\u6765\uff0c\u5927\u81f4\u601d\u8def\u662f\u628a\u5b57\u7b26\u4e32\u5b58\u5230int\u6570\u7ec4\u91cc\u65b9\u4fbf\u64cd\u4f5c\uff0c\u7136\u540e\u6bcf\u6b21\u653e\u52a0\u53f7\u662f\u5728\u4e0a\u4e00\u4e2a\u52a0\u53f7\u5230\u6700\u540e\u4e00\u4e2a\u80fd\u653e\u52a0\u53f7\u7684\u5730\u65b9\u7684\u533a\u95f4\u91cc\u3002\n\n\n        \n        \n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint a[50];\nint imax;//\u8868\u793a\u80fd\u53d6\u5230\u7684\u6700\u5927\u4e0b\u6807\uff0c\u800c\u975e\u5b57\u7b26\u4e32\u957f\u5ea6 \nint timemin=100;\nint righttotal;\nvoid searh(int t,int total,int time) \n{\n    if(t==imax)    \n    {\n        if(total==righttotal)\n        if(time<timemin)    timemin=time;\n        return;\n    } \n    for(int it=t+1;it<=imax;it++)\n    {\n        int addtotal=0;\n        for(int i=t+1;i<=it;i++)\n        addtotal+=a[i]*pow(10,it-i);\n        searh(it,total+addtotal,time+1);\n    }\n    return; \n}\nint main()\n{\n    char temp[50];\n    cin>>temp;\n    int i=0;\n    while(temp[i]!='\\0')\n    {\n        a[i]=(int)(temp[i]-(int)'0');\n        i++;\n    }\n    imax=i-1;\n    cin>>righttotal;\n    searh(-1,0,0);\n    if(timemin==100)\n    cout<<-1;\n    else cout<<timemin-1<<endl;\n    return 0;\n}\n```",
        "postTime": 1512465972,
        "uid": 60116,
        "name": "meowla",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1874 \u3010\u5feb\u901f\u6c42\u548c\u3011"
    },
    {
        "content": "#### \u6e05\u5947\u4fca\u79c0\u7684\u8d85\u7ea7\u77ed\u6838\u5fc3\u4ee3\u7801\uff0819 lines\uff09\n----\n## \u5410\u69fd\u533a\n>\u4e0d\u52a0\u526a\u679d\u4f3c\u4e4e\u53ef\u4ee5\u79d2\u8fc7\n>>\u5f3a\u70c8\u8981\u6c42\u589e\u5f3a\u6570\u636e\n\n----\n\n### \u9898\u610f\u7b80\u8ff0\n\u548c[\u4e58\u79ef\u6700\u5927](https://www.luogu.org/problemnew/show/P1018)\u6709\u70b9\u7c7b\u4f3c\uff0c\u901a\u8fc7\u5728\u4e00\u6761\u6570\u5b57\u4e32\u4e0a\u4e0d\u65ad\u52a0\u4e0a\u52a0\u53f7\u4ee5\u4f7f\u5f97\u6700\u540e\u5f97\u5230\u7684\u4e00\u6761\u52a0\u6cd5\u94fe\u7684\u7ed3\u679c\u7b49\u4e8e\u4e00\u4e2a\u7ed9\u5b9a\u7684\u6570\u503c$n$\u3002\n\n----\n\n### \u7b97\u6cd5\u5206\u6790\n\u672c\u9898\u91c7\u7528dfs\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u5224\u65ad\u662f\u5426\u80fd\u52a0\u4e0a\u52a0\u53f7\uff0c\u7136\u540e\u5bf9\u4e8e\u52a0\u4e0a\u52a0\u53f7\u548c\u4e0d\u52a0\u4e0a\u52a0\u53f7\u5206\u522b\u8fdb\u884c\u9012\u5f52\uff0c\u6700\u540e\u904d\u5386\u5b8c\u6574\u4e2a\u4e32\uff0c\u5982\u679c\u52a0\u6cd5\u94fe\u7684\u7ed3\u679c\u76f8\u7b26\uff0c\u5373\u8bb0\u5f55\u6700\u4f18\u89e3\u3002\n\u65f6\u95f4\u590d\u6742\u5ea6\u8fd1\u4f3c\u4e8e$O(2^l)$\uff0c$l$ \u6307\u6570\u5b57\u4e32\u7684\u957f\u5ea6\u3002\n> \u5bf9\u4e8e$l<=40$\uff0c\u8fd8\u662f\u4f1aTLE\u3002\n\u5f53\u7136\uff0c\u6211\u4eec\u9700\u8981\u526a\u679d\u3002\n>>\u641c\u7d22+\u526a\u679d\u662f\u7b2c\u4e00\u751f\u4ea7\u529b\uff01---by [kaiming](https://www.luogu.org/space/show?uid=28910)\n\n----\n### \u526a\u679d\u4f18\u5316\n- \u53ef\u884c\u6027\u526a\u679d:\n\n$n<=100000$\uff0c\u8fd9\u610f\u5473\u7740\u76f8\u90bb\u7684\u4e24\u4e2a\u52a0\u53f7\u4e2d\u95f4\u6700\u591a\u95f4\u96946\u4e2a\u6570\u5b57\u3002\u6211\u4eec\u53ef\u4ee5\u636e\u6b64\u8fdb\u884c\u53ef\u884c\u6027\u526a\u679d\u3002\n- \u6700\u4f18\u6027\u526a\u679d\n\n\u663e\u7136\uff0c\u5982\u679c\u8fc7\u7a0b\u4e2dsum\u5df2\u7ecf\u5927\u4e8e\u7b49\u4e8e\u52a0\u53f7\u6700\u5c0f\u503c\u4e86\uff0c\u8bf4\u660e\u5df2\u7ecf\u4e0d\u53ef\u80fd\u6bd4\u5df2\u7ecf\u6c42\u51fa\u6765\u7684\u7684\u52a0\u53f7\u6700\u5c0f\u503c\u66f4\u4f18\uff0c\u526a\u679d\u3002\n> \u6211\u7684\u526a\u679d\u6c34\u5e73\u6bd4\u8f83\u5dee\uff0c\u5982\u679c\u5927\u4f6c\u4eec\u53d1\u73b0\u5176\u4ed6\u7684\u526a\u679d\uff0c\u53ef\u4ee5\u968f\u65f6\u79c1\u4fe1\u6211\uff0c\u6216\u8005\u5728\u8bc4\u8bba\u533a\u4e0e\u6211\u4ea4\u6d41\uff0c\u8c22\u8c22\u3002\n\n----\n~~\u5176\u5b9e\u6211\u5e76\u4e0d\u60f3\u8d34\u4ee3\u7801~~\n```cpp\ninline bool dfs(int step,int cur,int la,int ans)\n{\n\tif(ans>=m)return 0;\n\tif(step==len)\n\t{\n\t\tif(calc(la,len)==-1)return 0;\n\t\tcur+=calc(la,len);\n\t\tif(cur==n)\n\t\t{\n\t\t\task=min(ask,ans);\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\tif(dfs(step+1,cur,la,ans))return 1;\n\tif(calc(la,step)!=-1)\n\t\tif(dfs(step+1,cur+calc(la,step),step+1,ans+1))return 1;\n\treturn 0;\n}\n```\n\u8fd9\u4e00\u90e8\u5206\u662f\u641c\u7d22\u7684\u6838\u5fc3\uff0ccalc(l,r)\u8868\u793a\u4ecel\u5230r\u7684\u6570\u5b57\u4e32\uff08\u4e0d\u88ab\u5206\u5272\uff09\u4ee3\u8868\u7684\u6570\u503c\uff0c\u5982\u679c\u8fd4\u56de-1\uff0c\u5219\u4e0d\u53ef\u884c\uff08\u4e0a\u8ff0\u7684\u53ef\u884c\u6027\u526a\u679d\u5c31\u662f\u5199\u5728calc\u51fd\u6570\u91cc\u9762\u7684\uff09\u3002\n\ncalc\u51fd\u6570\u7684\u5199\u6cd5\u548c\u5feb\u901f\u8bfb\u5165\u7c7b\u4f3c\uff0c\u8fd9\u91cc\u4e0d\u52a0\u8d58\u8ff0",
        "postTime": 1527572234,
        "uid": 35871,
        "name": "ZigZagKmp",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1874 \u3010\u5feb\u901f\u6c42\u548c\u3011"
    },
    {
        "content": "\u52a8\u5f52\u3002\u521d\u59cb\u65f6\u5efa\u7acb\u4e00\u4e2a\u6570\u7ec4SUM[I,J]\u8868\u793a\u539f\u5b57\u7b26\u4e32\u4e2dI\u5230J\u4f4d\u8868\u793a\u7684\u6570\u5b57\uff0cJ-I\u22646.\n\n\u7528F[I,J,K]\u8868\u793a\u7528\u524dI\u4e2a\u5b57\u7b26\uff0c\u6700\u540e\u4e00\u4e2a\u52a0\u6570\u957f\u4e3a7-J\uff0c\u8868\u793a\u51fa\u6570\u5b57K\u7684\u52a0\u53f7\u4e2a\u6570\uff08\u5982\u679c\u4e0d\u80fd\u8868\u793a\u5219\u4e3a+\u221e\uff09\n\nI\u22646\u65f6\uff0c\n\nJ<>I,F[I,J,K]=F[I-1,J,K-SUM[i,j]+SUM[i-1,j]]\n\nJ=I\uff0cF[I,J,K]=min(F[I,J,K],F[I-1,X,K-SUM[i,j]]+1) X=1..I-1\n\nI\uff1e6\u65f6\uff0c\n\nJ<>6,F[I,J,K]=F[I-1,J+1,K-SUM[i,j+i-6]+SUM[i-1,j+i-6]]\n\nJ=6,F[I,J,K]=min\uff08F[I,J,K],F[i-1,X,K-SUM[i,i]]+1\uff09 X=1..6\n\n\u96be\u7406\u89e3\u7684\u8bdd\uff0c\u753b\u4e00\u4e2a\u7b80\u5355\u7684SUM\u6570\u8868\u7528\u7b14\u7b97\u7b97\u5373\u53ef.\n\n\u521d\u59cb f[0,J,0]:=0;\n\n\u6700\u540e\u770bF[length(s),1..6,n]\u7684\u6700\u5c0f\u503c.\n\n\u5faa\u73af\u7684I=40,J=6,K<100000.\u5b9e\u9645K\u4e0d\u53ef\u80fd\u6bcf\u6b21\u90fd\u4ece1-100000\uff0c\u6240\u4ee5\u5b9e\u9645\u8017\u65f6\u4e0d\u5927.\n\n\u6700\u540e\u6ce8\u610f\u7279\u5224.\n",
        "postTime": 1383481301,
        "uid": 1679,
        "name": "fengjian",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1874 \u3010\u5feb\u901f\u6c42\u548c\u3011"
    },
    {
        "content": "\u601d\u8def\u548c\u697c\u4e0b\u7ad9\u957f\u7684\u5dee\u4e0d\u591a\uff0c\u4e0d\u8fc7\u6211\u7a0d\u5fae\u5177\u4f53\u4e00\u70b9\u5427\u3002\n\n\u6211\u4e00\u770b\u5230\u8fd9\u4e00\u9898\u7684\u601d\u8def\u662f\u679a\u4e3e\u6bcf\u4e00\u4e2a\u80fd\u653e\u52a0\u53f7\u7684\u4f4d\u7f6e\u662f\u5426\u8981\u653e\u52a0\u53f7\u3002\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u662f2^(len-1\uff09\uff0c\u7206\u70b8\u7684\u6beb\u65e0\u4f59\u5730\u3002\u90a3\u4e48\u600e\u4e48\u529e\u5462\uff1f\n\n\u5f88\u663e\u7136\uff0c\u6211\u4eec\u8981\u7684\u662f\u6700\u5c11\u7684\u52a0\u53f7\u4e2a\u6570\uff0c\u6211\u4eec\u4e0d\u59a8\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u6240\u8981\u7684\u52a0\u53f7\u4e2a\u6570\uff0c\u5982\u679c\u8fd9\u6837\u7684\u52a0\u53f7\u4e2a\u6570\u80fd\u591f\u8fbe\u5230n\u90a3\u4e48\u5c31\u8f93\u51fa\u5e76exit(0)\u3002\u5177\u4f53\u64cd\u4f5c\u7528\u7b80\u5355\u7684dfs\u5373\u53ef\u5b9e\u73b0\u3002\u5bf9\u4e8e\u52a0\u53f7\u4e2a\u6570\u4e3atot\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u5f00\u4e00\u4e2a\u957f\u5ea6\u4e3atot\u7684\u6570\u7ec4\uff0c\u6570\u7ec4\u4e2d\u7ef4\u62a4\u52a0\u53f7\u7684\u4f4d\u7f6e\u3002\u7b97\u4e86\u4e0d\u591a\u8bf4\u4e86\uff0c\u76f4\u63a5\u770b\u4ee3\u7801\u5427\uff1a\n\n```cpp\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nchar ss[50];\nint a[50];\nint n,len,tot,num;\nint gnum[50][50];\nvoid getnum()//\u7ecf\u5178\u64cd\u4f5c\uff0c\u5904\u7406\u5b57\u7b26\u4e32ss\u4ecei\u5230j\u7684\u6570\u5b57\uff0c\u7136\u540e\u5b57\u7b26\u4e32ss\u5c31\u53ef\u4ee5\u6254\u6389\u4e86\n{\n    for(int i=1;i<=len;i++)\n        for(int j=i;j<=len;j++)\n            for(int k=i;k<=j;k++) gnum[i][j]=gnum[i][j]*10+ss[k]-'0';\n}\nint print(int kk)\n{\n    int la=1;\n    int ans=0;\n    for(int i=1;i<=tot;i++)\n    {\n        ans+=gnum[la][a[i]];\n        la=a[i]+1;\n    }\n    ans+=gnum[la][len];\n    return ans;\n}\nvoid dfs(int step)//a\u4e2d\u5b58\u653e\u52a0\u53f7\u7684\u4f4d\u7f6e\n{\n    if(step>tot)\n    {\n        if(print(tot)==n)\n        {\n            printf(\"%d\\n\",tot);\n            exit(0);//\u627e\u5230\u5c31\u8f93\u51fa\u5e76\u7ed3\u675f\u7a0b\u5e8f\n        }\n        return;\n    }    \n    for(int i=a[step-1]+1;i<=(len-tot+step-1);i++)//\u8fd9\u91cc\u6709\u4e00\u4e2a\u526a\u679d\u64cd\u4f5c\uff0c\u6765\u4fdd\u8bc1a\u6570\u7ec4\u80fd\u591f\u53d6\u6ee1tot\u4f4d\uff0c\u4e0d\u8fc7\u8fd9\u9898\u8c8c\u4f3c\u6ca1\u5565\u7528\uff0c\u53bb\u6389\u4e5f\u662f\u79d2AC \n    {\n        a[step]=i;\n        dfs(step+1);\n    }\n}\nint main()\n{\n    scanf(\"%s\",ss+1);\n    scanf(\"%d\",&n);\n    len=strlen(ss+1);\n    getnum();\n    if(gnum[1][len]==n)//\u5148\u52a0\u7279\u5224\uff0c\u5904\u7406\u4e0d\u9700\u8981\u4efb\u4f55\u52a0\u53f7\u7684\u60c5\u51b5\n    {\n        printf(\"0\\n\");\n        exit(0);    \n    }\n    for(int i=1;i<=len-1;i++)//\u540c\u4e0a\u89e3\u91ca\uff0c\u679a\u4e3e\u9700\u8981\u52a0\u53f7\u7684\u4e2a\u6570\n    {\n        tot=i;\n        dfs(1);\n    }\n    printf(\"-1\\n\");\n    return 0;\n}\n\n```",
        "postTime": 1509355450,
        "uid": 22840,
        "name": "\u5218\u5907",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1874 \u3010\u5feb\u901f\u6c42\u548c\u3011"
    },
    {
        "content": "\u9996\u5148\uff0c\u8fd9\u4e00\u9053\u9898\n\n\n\u5b83\n\n\u662f\u4e00\u4e2a\n\n\n# \u5e7f\u5ea6\u4f18\u5148 **\u641c\u7d22**\n\n\n\u961f\u5217\u4e2d\u9700\u8981\u4fdd\u5b58 i  j   k  \u5206\u522b\u662f\u5df2\u7ecf\u5c06\u5b57\u7b26\u4e32\u7684\u524d i \u4e2a\u6570\u8ba1\u7b97\u51fa\u7ed3\u679c\uff0c\u4ed6\u4eec\u7684\u548c\u662f j \uff0c\u4f7f\u7528\u4e86 k \u4e2a\u52a0\u53f7\n\n\n\u641c\u7d22\u7684\u65f6\u5019\u53d6\u51fa\u961f\u9996\u5143\u7d20\u7136\u540e\u4ece\u65ad\u70b9 i \u5904\u5f00\u59cb\u5411\u53f3\u679a\u4e3e\u4e0b\u4e00\u4e2a\u65ad\u70b9\uff0c\u8ba1\u7b97\u51fa\u8fd9\u4e00\u6bb5\u7684\u548c\uff0c\u63d2\u5165\u961f\u5217\u3002\n\n\n\u7531\u4e8e\u6211\u4eec\u4f7f\u7528\u7684\u662f\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\uff0c\u6240\u4ee5\u7b2c\u4e00\u4e2a\u641c\u7d22\u5230\u7684\u7ed3\u679c\u4e00\u5b9a\u662f\u4f7f\u7528\u52a0\u53f7\u6700\u5c11\u7684\u3002\n\n\n\n\n    \n    \n\n\n\n\n    \n    \n    \n    \n    \n        \n        \n        \n            \n    \n    \n```cpp\n#include <iostream> \n#include <cstdio>\n#include <cstring>\n#include <queue>\nusing namespace std;\nstruct Node {\n    int pos;\n    int now;\n    int step;\n    Node () {\n        ;\n    }\n    Node (int pos, int now, int step) {\n        this -> pos = pos;\n        this -> now = now;\n        this -> step = step;\n    }\n};\nchar str[50];\nint n, len;\nqueue <Node> que;\nint main() {\n    freopen(\"in.txt\", \"r\", stdin);\n    scanf(\"%s%d\", str, &n);\n    len = strlen(str);\n    que.push(Node(0, 0, 0));\n    Node front;\n    while (que.size()) {\n        front = que.front();\n        que.pop();\n        if (front.pos == len) {\n            if (front.now == n) {\n                printf(\"%d\", front.step - 1);\n                return 0;\n            } else\n                continue;\n        }\n        int res = 0;\n        for (int i = front.pos; i < len; i++) {\n            res = res * 10 + str[i] - '0';\n            if (res <= n) {\n                que.push(Node(i + 1, front.now + res, front.step + 1));\n            } else\n                break;\n        }\n    }\n    printf(\"-1\");\n    return 0;\n}\n```",
        "postTime": 1507899640,
        "uid": 25845,
        "name": "Snitro",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1874 \u3010\u5feb\u901f\u6c42\u548c\u3011"
    },
    {
        "content": "# \u6211\u6765\u4e00\u4e2aDP\u7684\n- ## \u601d\u8def\uff1a\u7528s[i]\u8bb0\u5f55\u63d2\u5165i\u4e2a+\u53f7\u7684\u6240\u6709\u53ef\u80fd\u6027\n- ## \u6ce8\u610f\uff1as\u6700\u597d\u7528set\n\n```cpp\n#include<stdio.h>//scanf&printf\n#include<iostream>//\u5b57\u7b26\u4e32\u5fc5\u987b\u7528cin\n#include<algorithm>//\u6ca1\u7528\u7684\n#include<set>//set\n#include<string>//string\nusing namespace std;\nint n;set<string>s[100000];string x;set<string>::iterator f;//\u5b9a\u4e49\u4e00\u5806\u4e1c\u897f\nint sum(string s)//\u6c42s\u7684\u548c\n{\n\tregister int ans=0,now=0;\n\tfor(register unsigned int i=0;i<s.size();++i)\n\t{\n\t\tif(s[i]=='+')ans+=now,now=0;//\u5207\u8bb0\uff0cnow\u8981\u8d4b0\n\t\telse now=(now<<3)+(now<<1)+(s[i]^48);//\u4f4d\u8fd0\u7b97\n\t}\n\treturn ans+now;//now\u7684\u6b8b\u7559\u4e5f\u8981\u52a0\u4e0a\n}\nmain()\n{\n    cin>>x;scanf(\"%d\",&n);//\u8f93\u5165\n    s[0].insert(x);//\u521d\u59cb\u5316\n    for(register unsigned int i=1;i<x.size();++i)\n\t\tfor(f=s[i-1].begin();f!=s[i-1].end();++f)//set\u7684\u904d\u5386\n\t\t{\n\t\t\tif(sum(*f)==n){printf(\"%d\",i-1);return 0;}//\u627e\u5230\u7b54\u6848\n\t\t\tstring t=*f;\n\t\t\tfor(register unsigned int j=1;j<t.size();++j)//\u904d\u5386\u6bcf\u4e2a\u53ef\u4ee5\u653e\u52a0\u53f7\u7684\u5730\u65b9\n\t\t\t{\n\t\t\t\tif(t[j]=='+'){++j;continue;}//\u6709+\u53f7\u4e86\n\t\t\t\tstring newstr=t;\n\t\t\t\tnewstr.insert(j,\"+\");//\u63d2\u5165\u4e00\u4e2a+\u53f7\n\t\t\t\tif(!s[i].count(newstr))s[i].insert(newstr);//\u63d2\u5165i\u4e2a\u52a0\u53f7\u53c8\u591a\u4e86\u4e00\u79cd\u53ef\u80fd\u6027\n\t\t\t}\n\t\t}\n\tfor(f=s[x.size()-1].begin();f!=s[x.size()-1].end();++f)\n\t\tif(sum(*f)==n){printf(\"%llu\",x.size()-1);return 0;}//\u627e\u5230\u7b54\u6848\n\tprintf(\"-1\");//\u6ca1\u6709\u65b9\u6848\n}/**/\n```",
        "postTime": 1535108720,
        "uid": 90693,
        "name": "_\u2022\u0301\u3078\u2022\u0301\u256c_",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1874 \u3010\u5feb\u901f\u6c42\u548c\u3011"
    }
]