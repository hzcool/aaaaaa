[
    {
        "content": "\u8fd9\u9053\u9898\u4e3b\u8981\u7684\u96be\u70b9\u5728\u4e8e\u9884\u5904\u7406\u4ee5\u53caDP\u7684\u8bbe\u8ba1\uff0c\u5b9e\u73b0\u8d77\u6765\u96be\u5ea6\u4e0d\u4f1a\u592a\u5927\uff0c\u4e3b\u8981\u662f\u601d\u8def\u3002\u672c\u6587\u4f1a\u8be6\u7ec6\u5730\u5bf9\u601d\u8def\u8fdb\u884c\u8bb2\u89e3\uff0c\u601d\u8def\u548c\u4ee3\u7801\u4f1a\u5c3d\u91cf\u6e05\u6670\uff0c\u5e0c\u671b\u5bf9\u5927\u5bb6\u6709\u5e2e\u52a9\u3002\n\n\u672c\u6587\u7684\u601d\u8def\u4e0e\u5927\u90e8\u5206\u5927\u4f6c\u7684\u601d\u8def\u57fa\u672c\u76f8\u540c\uff0c\u4e3b\u8981\u662f\u5e26\u6765\u66f4\u8be6\u7ec6\u7684\u8bb2\u89e3\u548c\u66f4\u6e05\u6670\u7684\u5b9e\u73b0\u3002\n\n\u5173\u4e8e\u9898\u610f\uff0c\u6837\u4f8b\u8bf4\u660e\u89e3\u91ca\u5f97\u5f88\u6e05\u695a\uff0c\u5982\u679c\u6ca1\u6709\u8bfb\u61c2\u7684\u7ed3\u5408\u9898\u76ee\u591a\u8bfb\u51e0\u904d\u5c31\u61c2\u4e86\uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u8d58\u8ff0\u3002\n\n------------\n\u5148\u8865\u5145\u51e0\u70b9\uff1a\n\n- STL-set\u7684\u90e8\u5206\u64cd\u4f5c\n\n   - $set<Node>$ $s$ \u5efa\u7acb\u4e00\u4e2a\u8282\u70b9\u7c7b\u578b\u4e3aNode\u7684\u5143\u7d20\u4e0d\u80fd\u91cd\u590d\u7684\u6709\u5e8f\u96c6\u5408s\n   - $multiset<Node>$ $s$ \u5efa\u7acb\u4e00\u4e2a\u8282\u70b9\u7c7b\u578b\u4e3aNode\u7684\u6709\u5143\u7d20\u53ef\u91cd\u590d\u7684\u6709\u5e8f\u96c6\u5408s\n  - $s.insert(x)$ \u5c06\u5143\u7d20$x$\u63d2\u5165set\n  - $s.lower$_$bound(x)$ \u8fd4\u56de\u6307\u5411$\\geq x$\u7684\u6700\u5c0f\u7684\u5143\u7d20\u7684\u8fed\u4ee3\u5668\n  - $set<Node>::iterator$ $p$ \u5b9a\u4e49\u4e00\u4e2a\u8fed\u4ee3\u5668p\uff0c\u652f\u6301\u4f7f\u7528(*p)\u89e3\u9664\u5f15\u7528\n  \n\n\n------------\n\u5b9e\u73b0\u6d41\u7a0b\uff1a\u500d\u589e\u4f18\u5316DP\n\n\u601d\u8def\uff1aDP\u9012\u63a8\u51fa\u4e0e\u95ee\u9898\u76f8\u5173\u7684\u51b3\u7b56\uff0c\u5229\u7528\u500d\u589e\u4f18\u5316\u6c42\u89e3\u3002\n\n------------\n\u5177\u4f53\u5b9e\u73b0\u6d41\u7a0b\uff1a\n\n**1\u3001\u8f93\u5165**\n\n\u8f93\u5165\u5c31\u4e0d\u591a\u8bf4\u4e86\u5427\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801\u3002\n\n\u8f93\u5165\u4ee3\u7801\uff1a\n\n```cpp\nint n,m,x0;\nint h[N],s[N],x[N];\n\ncin>>n;\nfor(int i=1;i<=n;i++)\n\tscanf(\"%d\",&h[i]);\ncin>>x0>>m;\nfor(int i=1;i<=m;i++)\n\tscanf(\"%d%d\",&s[i],&x[i]);\n```\n                     \n\n------------\n\n**2\u3001\u9884\u5904\u7406**\n\n\u9996\u5148\u9884\u5904\u7406\u51fa\u4ece\u6bcf\u4e2a\u57ce\u5e02\u51fa\u53d1\uff0c\u5c0fA\u548c\u5c0fB\u5f00\u8f66\u5206\u522b\u4f1a\u5230\u8fbe\u7684\u4e0b\u4e00\u4e2a\u57ce\u5e02\u3002\u5206\u6790\u9898\u610f\u540e\u5f88\u5bb9\u6613\u77e5\u9053\uff0c\u5bf9\u4e8e\u5f53\u524d\u7f16\u53f7\u4e3a$x$\u7684\u57ce\u5e02\uff0c\u6240\u6c42\u7684\u5c31\u662f\u7f16\u53f7$x+1$~$n$\u7684\u57ce\u5e02\u6784\u6210\u7684\u96c6\u5408\u4e2d\u8ddd\u79bb\u57ce\u5e02$x$\u6700\u8fd1\u548c\u6b21\u8fd1\u7684\u57ce\u5e02\u3002\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u7528\u5e73\u8861\u6811\u6216\u53cc\u5411\u94fe\u8868\u6c42\u89e3\u3002\u7531\u4e8e\u672c\u4eba\u592a\u83dc\uff0c\u4e0d\u4f1a\u5199\u53cc\u5411\u94fe\u8868\uff0c\u6240\u4ee5\u5728\u8fd9\u91cc\u7528STL\u7684set\u5b9e\u73b0\uff0c\u60f3\u8981\u4e86\u89e3\u53cc\u5411\u94fe\u8868\u5b9e\u73b0\u7684\u5927\u4f6c\u4eec\u8bf7\u770b\u522b\u7684\u9898\u89e3\u3002\n\n\u5982\u4f55\u7528\u5e73\u8861\u6811\u5b9e\u73b0\uff1f\u663e\u7136\uff0c\u5728\u7531\u7f16\u53f7$x$~$n$\u7684\u57ce\u5e02\u6784\u6210\u7684\u5e73\u8861\u6811\u4e0a\uff0c\u79bb\u57ce\u5e02$x$\u6700\u8fd1\u7684\u4e00\u5b9a\u662f$x$\u7684\u524d\u9a71\u6216\u540e\u7ee7\uff0c\u6b21\u8fd1\u7684\u4e00\u5b9a\u5728$x$\u7684\u524d\u9a71\u3001\u540e\u7ee7\u3001\u524d\u9a71\u7684\u524d\u9a71\u548c\u540e\u7ee7\u7684\u540e\u7ee7\u5f53\u4e2d\u3002\u6211\u4eec\u53ea\u8981\u53d6\u51fa\u8fd9\u4e9b\u8282\u70b9\uff0c\u5206\u522b\u6bd4\u8f83\u4e0e$x$\u7684\u8ddd\u79bb\uff0c\u627e\u5230\u6700\u5c0f\u7684\u4e24\u4e2a\u5373\u53ef\u3002\n\n\u5728\u8fd9\u91cc\u6709\u51e0\u70b9\u8981\u6ce8\u610f\u7684\uff1a\n- \u7531\u4e8e\u67e5\u627e\u65f6\u4f1a\u6d89\u53ca\u5230$x$\u5468\u56f4\u7684\u56db\u4e2a\u8282\u70b9\uff0c\u56e0\u6b64\u5728\u4e00\u5f00\u59cb\u8981\u5148\u5411\u5e73\u8861\u6811\u5206\u522b\u63d2\u51652\u4e2a\u6781\u5927\u503c\u548c\u6781\u5c0f\u503c\u8282\u70b9\uff0c\u4ee5\u514d\u8d8a\u754c\u3002\n- \u7531\u4e8e\u5728\u5e73\u8861\u6811\u4e2d\u6bcf\u4e2a\u57ce\u5e02\u9700\u8981\u4fdd\u5b58\u7f16\u53f7\u548c\u6d77\u62d4\u4e24\u4e2a\u6570\u636e\uff0c\u56e0\u6b64\u5728\u4f7f\u7528set\u65f6\u8981\u91cd\u8f7d\u8fd0\u7b97\u7b26\u6765\u4fdd\u8bc1\u8282\u70b9set\u4e2d\u7684\u987a\u5e8f\u3002\n- set\u7684\u8fed\u4ee3\u5668\u53ea\u652f\u6301++\u548c--\u4e24\u4e2a\u64cd\u4f5c\uff0c\u4e0d\u80fd\u4f7f\u7528\u5176\u5b83\u8fd0\u7b97\u3002\n\n\u9884\u5904\u7406\u4ee3\u7801\uff1a\n```cpp\nstruct City\n{\n\tint id,al;//identifier\u7f16\u53f7,altitude\u6d77\u62d4\n\tfriend bool operator < (City a,City b)\n    {\n        return a.al<b.al; \n    }//\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff0c\u6309\u7167\u6d77\u62d4\u5347\u5e8f\n};//\u5b58\u50a8\u57ce\u5e02\u4fe1\u606f\n\nmultiset<City> q;//\u652f\u6301\u96c6\u5408\u5185\u91cd\u590d\u5143\u7d20\u7684set\n\nh[0]=INF,h[n+1]=-INF;\nCity st;//start\nst.id=0,st.al=INF;\nq.insert(st),q.insert(st);\nst.id=n+1,st.al=-INF;\nq.insert(st),q.insert(st);//\u63d2\u51654\u4e2a\u521d\u59cb\u8282\u70b9\nfor(int i=n;i;i--)//\u5012\u5e8f\u63d2\u5165\uff0c\u4fdd\u8bc1set\u5185\u53ea\u6709\u7f16\u53f7x~n\u7684\u57ce\u5e02\n{\n\tint ga,gb;//\u5206\u522b\u8868\u793a\u4ece\u5f53\u524d\u57ce\u5e02\u51fa\u53d1\u5c0fA\u548c\u5c0fB\u5f00\u8f66\u7684\u4e0b\u4e00\u7ad9\n\tCity now;\n\tnow.id=i,now.al=h[i];\n\tq.insert(now);//\u63d2\u5165\u5f53\u524d\u57ce\u5e02\n\tset<City>::iterator p=q.lower_bound(now);//\u8fed\u4ee3\u5668\uff0c\u5728\u8fd9\u91cc\u6307\u5411now\u8282\u70b9\n\tp--;\n\tint lt=(*p).id,lh=(*p).al;//last\u524d\u9a71\n\tp++,p++;\n\tint ne=(*p).id,nh=(*p).al;//next\u540e\u7ee7\n\tp--;\n\tif(abs(nh-h[i])>=abs(h[i]-lh))//\u82e5\u524d\u9a71\u66f4\u8fd1\n\t{\n\t\tgb=lt;\n\t\tp--,p--;//\u627e\u5230\u524d\u9a71\u7684\u524d\u9a71\n\t\tif(abs(nh-h[i])>=abs(h[i]-(*p).al))//\u82e5\u524d\u9a71\u7684\u524d\u9a71\u66f4\u8fd1\n\t\t\tga=(*p).id;\n\t\telse//\u82e5\u540e\u7ee7\u66f4\u8fd1\n\t\t\tga=ne;\n\t}\n\telse//\u82e5\u540e\u7ee7\u66f4\u8fd1\n\t{\n\t\tgb=ne;\n\t\tp++,p++;//\u627e\u5230\u540e\u7ee7\u7684\u540e\u7ee7\n\t\tif(abs((*p).al-h[i])>=abs(h[i]-lh))//\u82e5\u524d\u9a71\u66f4\u8fd1\n\t\t\tga=lt;\n\t\telse//\u82e5\u540e\u7ee7\u7684\u540e\u7ee7\u66f4\u8fd1\n\t\t\tga=(*p).id;\n\t}\n}\n```\n\n\n------------\n\n**3\u3001\u500d\u589e\u4f18\u5316DP**\n\n\u672c\u9898\u4e2dDP\u9700\u8981\u7528\u5230\u4e09\u4e2a\u6570\u7ec4\uff1a\n  \n- $f_{i,j,k}$\u8868\u793a\u4ece\u57ce\u5e02$j$\u51fa\u53d1\uff0c\u884c\u9a76$2^i$\u5929\uff0c$k$\u5148\u5f00\u8f66\uff0c\u6700\u7ec8\u4f1a\u5230\u8fbe\u7684\u57ce\u5e02\n- $da_{i,j,k}$\u8868\u793a\u4ece\u57ce\u5e02$j$\u51fa\u53d1\uff0c\u884c\u9a76$2^i$\u5929\uff0c$k$\u5148\u5f00\u8f66\uff0c\u5c0fA\u884c\u9a76\u7684\u8def\u7a0b\u957f\u5ea6\n- $db_{i,j,k}$\u8868\u793a\u4ece\u57ce\u5e02$j$\u51fa\u53d1\uff0c\u884c\u9a76$2^i$\u5929\uff0c$k$\u5148\u5f00\u8f66\uff0c\u5c0fB\u884c\u9a76\u7684\u8def\u7a0b\u957f\u5ea6\n  \n\u5176\u4e2d$k=0$\u8868\u793a\u5c0fA\u5148\u5f00\u8f66\uff0c$k=1$\u8868\u793a\u5c0fB\u5148\u5f00\u8f66\u3002\n  \n\u8f6c\u79fb\u65b9\u7a0b\u8fd8\u662f\u6bd4\u8f83\u597d\u60f3\u7684\uff0c\u5728DP\u65f6\uff0c$i$\u4f5c\u4e3a\u9636\u6bb5\uff0c$j$\u4f5c\u4e3a\u72b6\u6001\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5929\u6570$2^i$\uff0c\u5206\u522b\u4ece\u524d\u540e\u4e24\u534a\u65f6\u95f4\u8f6c\u79fb\u8fc7\u6765\u5373\u53ef\u3002\u5728\u8f6c\u79fb\u65f6\u8981\u6ce8\u610f\uff0c\u56e0\u4e3a$2^0=1$\u662f\u5947\u6570\uff0c\u56e0\u6b64\u5728\u8f6c\u79fb\u5230$2^1$\u65f6\uff0c\u524d\u540e\u4e24\u534a\u65f6\u95f4\u5148\u5f00\u8f66\u7684\u4eba\u4e0d\u4e00\u6837\uff0c\u56e0\u6b64\u8981\u72ec\u7acb\u51fa\u6765\u8f6c\u79fb\uff1b\u5176\u4f59\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u5747\u76f8\u540c\u3002\n  \nDP\u521d\u503c\uff1a\n  \n- $f_{0,j,0}=ga_j,f_{0,j,1}=gb_j$\n- $da_{0,j,0}=dist_{j,ga_j},da_{0,j,1}=0$\n- $db_{0,j,0}=0,db_{0,j,1}=dist_{j,gb_j}$\n  \n\u5176\u4e2d$dist_{x,y}$\u8868\u793a\u57ce\u5e02$x$\u5230\u57ce\u5e02$y$\u7684\u8ddd\u79bb\n  \n\u4ee5\u4e0a\u7684\u521d\u503c\u8bbe\u7f6e\u5f88\u597d\u7406\u89e3\uff0c\u8bf7\u8bfb\u8005\u7ed3\u5408\u6570\u7ec4\u7684\u5b9a\u4e49\u81ea\u5df1\u601d\u8003\u3002\n  \n\u521d\u503c\u7684\u8bbe\u7f6e\u4e3a\u4e86\u65b9\u4fbf\u53ef\u4ee5\u76f4\u63a5\u5728\u4e0a\u9762\u7684\u9884\u5904\u7406\u8fc7\u7a0b\u4e2d\u8fdb\u884c\u3002\n  \nDP\u521d\u503c\u8d4b\u503c\u4ee3\u7801\uff1a\n  \n```cpp\nint f[20][N][5],da[20][N][5],db[20][N][5];  \n  \nfor(int i=n;i;i--)\n\t{\n\t\t...//\u9884\u5904\u7406\n\t\tf[0][i][0]=ga,f[0][i][1]=gb;\n\t\tda[0][i][0]=abs(h[i]-h[ga]);\n\t\tdb[0][i][1]=abs(h[i]-h[gb]);\n\t}\n```\n\n\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\n  \n\u5f53$i=1$\u65f6\uff1a\n\n- $f_{1,j,k}=f_{0,f_{0,j,k},1-k}$\n- $da_{1,j,k}=da_{0,j,k}+da_{0,f_{0,j,k},1-k}$\n- $db_{1,j,k}=db_{0,j,k}+db_{0,f_{0,j,k},1-k}$\n  \n\u5f53$i>1$\u65f6\uff1a\n\n- $f_{i,j,k}=f_{i-1,f_{i-1,j,k},k}$\n- $da_{i,j,k}=da_{i-1,j,k}+da_{i-1,f_{i-1,j,k},k}$\n- $db_{i,j,k}=db_{i-1,j,k}+db_{i-1,f_{i-1,j,k},k}$\n\n\u5177\u4f53\u539f\u7406\u8bf7\u8bfb\u8005\u81ea\u5df1\u601d\u8003\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\u4e5f\u4f1a\u8fdb\u884c\u8bb2\u89e3\u3002\n  \nDP\u8f6c\u79fb\u4ee3\u7801\uff1a\n```cpp\nfor(int i=1;i<=18;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tfor(int k=0;k<2;k++)\n\t\t\t\tif(i==1)//\u6b64\u65f6\u540e\u534a\u6bb5\u5148\u5f00\u8f66\u7684\u4eba\u548c\u6574\u6bb5\u5148\u5f00\u8f66\u7684\u4eba\u4e0d\u540c\n\t\t\t\t{\n\t\t\t\t\tf[1][j][k]=f[0][f[0][j][k]][1-k];//\u6574\u6bb5\u7684\u8def\u7a0b\u5373\u540e\u534a\u6bb5\u5230\u8fbe\u7684\u8def\u7a0b\uff0c\u540e\u534a\u6bb5\u7684\u8d77\u70b9\u5373\u524d\u534a\u6bb5\u7684\u7ec8\u70b9\n\t\t\t\t\tda[1][j][k]=da[0][j][k]+da[0][f[0][j][k]][1-k];//\u6574\u6bb5\u5c0fA\u884c\u9a76\u7684\u8def\u7a0b\u5373\u524d\u534a\u6bb5\u548c\u540e\u534a\u6bb5\u5c0fA\u884c\u9a76\u7684\u8def\u7a0b\u4e4b\u548c\n\t\t\t\t\tdb[1][j][k]=db[0][j][k]+db[0][f[0][j][k]][1-k];//\u6574\u6bb5\u5c0fB\u884c\u9a76\u7684\u8def\u7a0b\u5373\u524d\u534a\u6bb5\u548c\u540e\u534a\u6bb5\u5c0fB\u884c\u9a76\u7684\u8def\u7a0b\u4e4b\u548c\t\n\t\t\t\t}\n\t\t\t\telse//\u6b64\u65f6\u540e\u534a\u6bb5\u5148\u5f00\u8f66\u7684\u4eba\u548c\u6574\u6bb5\u5148\u5f00\u8f66\u7684\u4eba\u76f8\u540c\uff0c\u5176\u4f59\u4e0e\u4e0a\u9762\u4e00\u6837\uff0c\u5c31\u4e0d\u518d\u8d58\u8ff0\n\t\t\t\t{\n\t\t\t\t\tf[i][j][k]=f[i-1][f[i-1][j][k]][k];\n\t\t\t\t\tda[i][j][k]=da[i-1][j][k]+da[i-1][f[i-1][j][k]][k];\n\t\t\t\t\tdb[i][j][k]=db[i-1][j][k]+db[i-1][f[i-1][j][k]][k];\n\t\t\t\t}\n```\n\n\n------------\n                                 \n**4\u3001\u6c42\u89e3\u95ee\u98981**\n                                 \n\u5f88\u663e\u7136\uff0c\u8981\u77e5\u9053\u5c0fA\u548c\u5c0fB\u884c\u9a76\u8def\u7a0b\u7684\u6bd4\u503c\uff0c\u53ea\u8981\u77e5\u9053\u4ed6\u4eec\u5206\u522b\u884c\u9a76\u7684\u8def\u7a0b\u5c31\u53ef\u4ee5\u4e86\u3002\u8fd9\u91cc\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570$calc(S,X)$\u6c42\u89e3\u4ece\u57ce\u5e02$S$\u51fa\u53d1\uff0c\u6700\u591a\u884c\u9a76$X$\u516c\u91cc\uff0c\u5c0fA\u548c\u5c0fB\u5206\u522b\u884c\u9a76\u4e86\u591a\u5c11\u8ddd\u79bb\u3002\n                                 \n\u901a\u8fc7\u4e0a\u9762DP\u63a8\u51fa\u7684\u4e09\u4e2a\u6570\u7ec4\uff0c$calc$\u51fd\u6570\u7684\u5b9e\u73b0\u5c31\u4e0d\u96be\u4e86\uff0c\u53ea\u8981\u500d\u589e\u6a21\u62df\u524d\u8fdb\u5373\u53ef\u3002\n                                 \n\u5177\u4f53\u5b9e\u73b0\uff1a\n1. \u521d\u59cb\u5316$p=S,la=0,lb=0$\n1. \u5012\u5e8f\u5faa\u73af$i=\\log n$~$0$\uff0c\u5bf9\u4e8e\u6bcf\u4e2a$i$\uff0c\u82e5\u4ece\u5f53\u524d\u7684$p$\u884c\u9a76$2^i$\u5929\u4ecd\u4e0d\u8d85\u8fc7$X$\uff0c\u5219\u524d\u8fdb\uff1b\u5373\u82e5$la+lb+da_{i,p,0}+db_{i,p,0}\\leq X$\uff0c\u5219\u4ee4$la+=da_{i,p,0},lb+=db_{i,p,0},p=f_{i,p,0}$\u3002\u5224\u65ad\u65f6\u8fd8\u8981\u6ce8\u610f\u4e00\u4e2a\u6761\u4ef6\uff0c\u56e0\u4e3a\u8981\u4fdd\u8bc1\u4e0d\u8d85\u8fc7\u6700\u540e\u4e00\u4e2a\u57ce\u5e02\uff0c\u5373\u4e0d\u8d8a\u754c\uff0c\u56e0\u6b64\u8981\u7279\u5224\u5f53\u524d\u679a\u4e3e\u7684\u7ec8\u70b9\u5728$n$\u4e2a\u57ce\u5e02\u4e4b\u5185\uff0c\u5176\u5b9e\u53ea\u8981$f_{i,p,0}>0$\u5c31\u6ee1\u8db3\u6761\u4ef6\u3002\n1. \u7b2c2\u6b65\u7ed3\u675f\u540e\uff0c$la$\u548c$lb$\u5c31\u662f\u6240\u6c42\u7684\u7b54\u6848\uff0c\u5206\u522b\u8868\u793a\u5c0fA\u548c\u5c0fB\u884c\u9a76\u7684\u8def\u7a0b\u3002\n\n$calc$\u51fd\u6570\u89e3\u51b3\u4e4b\u540e\uff0c\u6c42\u89e3\u95ee\u98981\u5c31\u975e\u5e38\u7b80\u5355\u4e86\u3002\u53ea\u8981\u679a\u4e3e\u6bcf\u4e2a\u57ce\u5e02$i=1$~$n$\uff0c\u8ba1\u7b97\u51fa$calc(i,x0)$\uff0c\u6bd4\u8f83\u51fa$la/lb$\u6700\u5c0f\u4e14\u6d77\u62d4\u6700\u9ad8\u7684\u90a3\u4e2a\u57ce\u5e02\uff0c\u5373\u4e3a\u7b54\u6848\u3002\n  \n\u6c42\u89e3\u95ee\u98981\u4ee3\u7801\uff1a\n```cpp\nint la,lb,ansid;\n  \nvoid calc(int S,int X)\n{\n\tint p=S;\n\tla=0,lb=0;//\u521d\u59cb\u5316\n\tfor(int i=18;i>=0;i--)\n\t\tif(f[i][p][0] && la+lb+da[i][p][0]+db[i][p][0]<=X)\n\t\t{\n\t\t\tla+=da[i][p][0];\n\t\t\tlb+=db[i][p][0];\n\t\t\tp=f[i][p][0];\n\t\t}//\u500d\u589e\u6a21\u62df\u524d\u8fdb\n}\n                                                          \nfor(int i=1;i<=n;i++)\n{\n\tcalc(i,x0);\n\tdouble nowans=(double)la/(double)lb;//\u6ce8\u610f\u7cbe\u5ea6\u95ee\u9898\n\tif(nowans<ans)\n\t{\n\t\tans=nowans;\n\t\tansid=i;\n\t}\n\telse\n\t\tif(nowans==ans && h[ansid]<h[i])\n\t\t\tansid=i;//\u6bd4\u8f83\u6c42\u89e3\n}\ncout<<ansid<<endl;\n```\n\n\n------------\n**5\u3001\u6c42\u89e3\u95ee\u98982**\n  \n\u6c42\u89e3\u95ee\u98982\u5c31\u66f4\u660e\u663e\u4e86\uff0c\u76f4\u63a5\u591a\u6b21\u6c42\u89e3$calc(s_i,x_i)$\u5373\u53ef\uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u8d58\u8ff0\u3002\n  \n\u6c42\u89e3\u95ee\u98982\u4ee3\u7801\uff1a\n```cpp\nfor(int i=1;i<=m;i++)\n{\n\tcalc(s[i],x[i]);\n\tprintf(\"%d %d\\n\",la,lb);//\u6c42\u89e3\uff0c\u8f93\u51fa\n}\n```\n\n\n------------\n\n\u8fd9\u6837\uff0c\u6574\u9053\u9898\u5c31\u7ed3\u675f\u5566\uff01~~\u662f\u4e0d\u662f\u5f88\u7b80\u5355~~\n                     \n\u6700\u540e\u5949\u4e0a\u5b8c\u6574\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<set>\nusing namespace std;\nconst int N=1e5+200,INF=2e9;\nstruct City\n{\n\tint id,al;//identifier,altitude\n\tfriend bool operator < (City a,City b)\n    {\n        return a.al<b.al; \n    }\n};\nint n,m,x0,la,lb,ansid;\nint h[N],s[N],x[N];\nint f[20][N][5],da[20][N][5],db[20][N][5];\ndouble ans=INF*1.0;\nmultiset<City> q;\nvoid calc(int S,int X)\n{\n\tint p=S;\n\tla=0,lb=0;\n\tfor(int i=18;i>=0;i--)\n\t\tif(f[i][p][0] && la+lb+da[i][p][0]+db[i][p][0]<=X)\n\t\t{\n\t\t\tla+=da[i][p][0];\n\t\t\tlb+=db[i][p][0];\n\t\t\tp=f[i][p][0];\n\t\t}\n}\nvoid pre()\n{\n\th[0]=INF,h[n+1]=-INF;\n\tCity st;//start\n\tst.id=0,st.al=INF;\n\tq.insert(st),q.insert(st);\n\tst.id=n+1,st.al=-INF;\n\tq.insert(st),q.insert(st);\n\tfor(int i=n;i;i--)\n\t{\n\t\tint ga,gb;\n\t\tCity now;\n\t\tnow.id=i,now.al=h[i];\n\t\tq.insert(now);\n\t\tset<City>::iterator p=q.lower_bound(now);\n\t\tp--;\n\t\tint lt=(*p).id,lh=(*p).al;//last\n\t\tp++,p++;\n\t\tint ne=(*p).id,nh=(*p).al;//next\n\t\tp--;\n\t\tif(abs(nh-h[i])>=abs(h[i]-lh))\n\t\t{\n\t\t\tgb=lt;\n\t\t\tp--,p--;\n\t\t\tif(abs(nh-h[i])>=abs(h[i]-(*p).al))\n\t\t\t\tga=(*p).id;\n\t\t\telse\n\t\t\t\tga=ne;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tgb=ne;\n\t\t\tp++,p++;\n\t\t\tif(abs((*p).al-h[i])>=abs(h[i]-lh))\n\t\t\t\tga=lt;\n\t\t\telse\n\t\t\t\tga=(*p).id;\n\t\t}//2\u3001\u9884\u5904\u7406\n\t\tf[0][i][0]=ga,f[0][i][1]=gb;\n\t\tda[0][i][0]=abs(h[i]-h[ga]);\n\t\tdb[0][i][1]=abs(h[i]-h[gb]);//3\u3001DP\u521d\u503c\n\t}\n\tfor(int i=1;i<=18;i++)\n\t\tfor(int j=1;j<=n;j++)\n\t\t\tfor(int k=0;k<2;k++)\n\t\t\t\tif(i==1)\n\t\t\t\t{\n\t\t\t\t\tf[1][j][k]=f[0][f[0][j][k]][1-k];\n\t\t\t\t\tda[1][j][k]=da[0][j][k]+da[0][f[0][j][k]][1-k];\n\t\t\t\t\tdb[1][j][k]=db[0][j][k]+db[0][f[0][j][k]][1-k];\t\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tf[i][j][k]=f[i-1][f[i-1][j][k]][k];\n\t\t\t\t\tda[i][j][k]=da[i-1][j][k]+da[i-1][f[i-1][j][k]][k];\n\t\t\t\t\tdb[i][j][k]=db[i-1][j][k]+db[i-1][f[i-1][j][k]][k];\n\t\t\t\t}//3\u3001\u500d\u589e\u4f18\u5316DP\n}\nint main()\n{\n\tcin>>n;\n\tfor(int i=1;i<=n;i++)\n\t\tscanf(\"%d\",&h[i]);\n\tcin>>x0>>m;\n\tfor(int i=1;i<=m;i++)\n\t\tscanf(\"%d%d\",&s[i],&x[i]);//1\u3001\u8f93\u5165\n\tpre();\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcalc(i,x0);\n\t\tdouble nowans=(double)la/(double)lb;\n\t\tif(nowans<ans)\n\t\t{\n\t\t\tans=nowans;\n\t\t\tansid=i;\n\t\t}\n\t\telse\n\t\t\tif(nowans==ans && h[ansid]<h[i])\n\t\t\t\tansid=i;\n\t}\n\tcout<<ansid<<endl;//4\u3001\u6c42\u89e3\u95ee\u98981\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tcalc(s[i],x[i]);\n\t\tprintf(\"%d %d\\n\",la,lb);\n\t}//5\u3001\u6c42\u89e3\u95ee\u98982\n\treturn 0;\n}\n```\n\u8be5\u8bb2\u7684\u90fd\u8bb2\u5f97\u5f88\u6e05\u695a\u4e86\uff0c\u5b8c\u6574\u4ee3\u7801\u91cc\u5c31\u4e0d\u518d\u591a\u8bf4\u4e86\u3002\n                         \n\n\n------------\n\u5e0c\u671b\u80fd\u5bf9\u5927\u5bb6\u6709\u5e2e\u52a9\uff0c\u6709\u4e0d\u8db3\u4e4b\u5904\u8bf7\u6307\u51fa\u3002\u5e94\u8be5\u8bb2\u5f97\u5f88\u6d45\u663e\u4e86\uff0c\u5927\u4f6c\u4eec\u53ef\u4ee5\u914d\u5408\u5176\u5b83\u7684\u9898\u89e3\u591a\u770b\u770b\u3002",
        "postTime": 1560144099,
        "uid": 91534,
        "name": "TEoS",
        "ccfLevel": 6,
        "title": "P1081 \u5f00\u8f66\u65c5\u884c"
    },
    {
        "content": "\u8fd9\u9898\u5efa\u8bae\u5148\u628a\u66b4\u529b\u6a21\u62df\u768470\u5206\u505a\u51fa\u6765\u800c\u4e0d\u662f\u76f4\u63a5\u6253\u6b63\u89e3\uff0c\u8003\u573a\u4e0a\u5982\u679c\u60f3\u4e0d\u5230\u7528\u500d\u589e\uff0c\u66b4\u529b\u62ff70\u5206\u4e5f\u662f\u5f88\u53ef\u89c2\u7684  \n\n\u90a3\u4e48\u5148\u8bf4\u8bf4\u66b4\u529b\u601d\u8def:  \n1)\u9884\u5904\u7406  \n\n\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u505a\u4e0b\u9762\u8fd9\u4e9b\u4e8b\u60c5:  \n\nc1[i]\u8868\u793ab\u5728i\u9009\u62e9\u7684\u4e0b\u4e00\u4e2a\u57ce\u5e02\uff08\u4e5f\u5c31\u662f\u5728i\u4e1c\u8fb9\u8ddd\u79bbi\u6700\u8fd1\u7684\u57ce\u5e02\uff09  \nc2[i]\u8868\u793aa\u5728i\u9009\u62e9\u7684\u4e0b\u4e00\u4e2a\u57ce\u5e02\uff08\u4e5f\u5c31\u662f\u5728i\u4e1c\u8fb9\u8ddd\u79bbi\u7b2c\u4e8c\u8fd1\u7684\u57ce\u5e02\uff09  \ndist1[i]\u8868\u793ab\u4ecei\u5230c1[i]\u7684\u8def\u7a0b  \ndist2[i]\u8868\u793aa\u4ecei\u5230c2[i]\u7684\u8def\u7a0b  \n\n\u6211\u4eec\u53ef\u4ee5\u4ece\u7b2cn-1\u4e2a\u57ce\u5e02\u679a\u4e3e\u5230\u7b2c1\u4e2a\u57ce\u5e02\uff0c\u5728\u7b2ci+1\u4e2a\u57ce\u5e02\u5230\u7b2cn\u4e2a\u57ce\u5e02\u4e4b\u95f4\u66b4\u529b\u627e\u6700\u8fd1\u548c\u7b2c\u4e8c\u8fd1\uff0c\u5177\u4f53\u5b9e\u73b0\u770b\u4ee3\u7801  \n\n---\n```cpp\nfor (register int i = n - 1; i >= 1; --i)\n{\n    register ll minn = i + 1, minn2 = 0;\n    dist1[i] = abs(h[i] - h[i + 1]);\n    for (register int j = i + 2; j <= n; ++j)\n    {\n            if (dist1[i] > abs(h[i] - h[j]) || (dist1[i] == abs(h[i] - h[j]) && h[j] < h[minn]))\n        {\n            dist2[i] = dist1[i];\n            dist1[i] = abs(h[i] - h[j]);\n            minn2 = minn;\n            minn = j;\n        }\n        else if (dist2[i] == 0 || dist2[i] > abs(h[i] - h[j]) || (dist2[i] == abs(h[i] - h[j]) && h[j] < h[minn2]))\n        {\n            dist2[i] = abs(h[i] - h[j]);\n\t\t\tminn2 = j;\n\t\t}\n\t}\n\tc1[i] = minn;\n\tc2[i] = minn2;\n}\n```\n--- \n\n2)\u5bf9\u4e8e\u4e24\u4e2a\u95ee\u9898\uff0c\u5206\u522b\u6a21\u62df\u6c42\u89e3  \n\n\u7531\u4e8ea b\u662f\u8f6e\u6d41\u9a7e\u9a76\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u53d8\u91cfturn\u8bb0\u5f55\u5f53\u524d\u662f\u8c01\u5728\u9a7e\u9a76\uff0cturn\u4e3a0\u65f6a\u9a7e\u9a76\uff0c\u4e3a1\u65f6b\u9a7e\u9a76\uff0c\u7136\u540e\u6839\u636e\u9898\u610f\u8bb0\u5f55a b\u5206\u522b\u8d70\u8fc7\u7684\u8def\u7a0b\uff0c\u5224\u65ad\u603b\u8def\u7a0b\u662f\u5426\u8d85\u8fc7\u9650\u5236\uff0c\u6a21\u62df\u5373\u53ef  \n\n\u5f97\u5206\uff1a70  \n\n---\n```cpp\n#include <bits/stdc++.h>\n#define ll long long\n#define N 100010\nusing namespace std;\nll c1[N], c2[N], n, m, h[N] = { INT_MAX }, dist1[N], dist2[N];\ninline ll read()\n{\n    register ll num=0;\n    register char ch;\n    register bool flag = false;\n    while ((ch = getchar()) == ' ' || ch == '\\n' || ch == '\\r');\n    if (ch == '-')flag = true;else num = ch ^ 48;\n    while ((ch = getchar()) != ' '&&ch != '\\n'&&ch != '\\r'&&~ch)\n        num = num * 10 + (ch ^ 48);\n    if (flag)return -num; return num;\n}\ndouble minv = INT_MAX;\n\nint main()\n{\n    n = read();\n    for (register int i = 1; i <= n; ++i)h[i] = read();\n    for (register int i = n - 1; i >= 1; --i)\n    {\n        register ll minn = i + 1, minn2 = 0;\n        dist1[i] = abs(h[i] - h[i + 1]);\n        for (register int j = i + 2; j <= n; ++j)\n        {\n            if (dist1[i] > abs(h[i] - h[j]) || (dist1[i] == abs(h[i] - h[j]) && h[j] < h[minn]))\n            {\n                dist2[i] = dist1[i];\n                dist1[i] = abs(h[i] - h[j]);\n                minn2 = minn;\n                minn = j;\n            }\n            else if (dist2[i] == 0 || dist2[i] > abs(h[i] - h[j]) || (dist2[i] == abs(h[i] - h[j]) && h[j] < h[minn2]))\n            {\n                dist2[i] = abs(h[i] - h[j]);\n                minn2 = j;\n            }\n        }\n        c1[i] = minn;\n        c2[i] = minn2;\n    }\n    register ll x0 = read(), ans = 0;\n    for (int i = 1; i <= n; ++i)\n    {\n        register ll a = 0, b = 0, loc = i, turn = 0;\n        while (1)\n        {\n            if (turn)\n            {\n                if (a + b + dist1[loc] > x0 || !c1[loc])break;\n                b += dist1[loc];\n                loc = c1[loc];\n            }\n            else\n            {\n                if (a + b + dist2[loc] > x0 || !c2[loc])break;\n                a += dist2[loc];\n                loc = c2[loc];\n            }\n            turn ^= 1;\n        }\n        if (!ans || 1.0*a / b - minv < -0.00000001 || (fabs(1.0*a / b - minv) <= 0.00000001&&h[ans] < h[i]))\n        {\n            minv = 1.0*a / b;\n            ans = i;\n        }\n    }\n    printf(\"%lld\\n\", ans);\n    m = read();\n    while (m--)\n    {\n        register ll s = read(), x = read(), a = 0, b = 0, turn = 0;\n        while (1)\n        {\n            if (turn)\n            {\n                if (a + b + dist1[s] > x || !c1[s])break;\n                b += dist1[s];\n                s = c1[s];\n            }\n            else\n            {\n                if (a + b + dist2[s] > x || !c2[s])break;\n                a += dist2[s];\n                s = c2[s];\n            }\n            turn ^= 1;\n        }\n\n        printf(\"%lld %lld\\n\", a, b);\n    }\n    return 0;\n}\n```\n---\n\u66b4\u529b\u6253\u5b8c\u4e86\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u6b63\u89e3\u4e86  \n\n\u5176\u5b9e\u5982\u679c\u76f4\u63a5\u544a\u8bc9\u4f60\u6b63\u89e3\u5c31\u662f\u5728\u66b4\u529b\u7684\u57fa\u7840\u4e0a\u7528\u500d\u589e\u548c\u53cc\u5411\u94fe\u8868\u4f18\u5316\u4e00\u4e0b\uff0c\u81ea\u5df1\u60f3\u60f3\uff0c\u6162\u6162\u8c03\u4e5f\u80fd\u5f04\u51fa\u6765\uff0c\u6240\u4ee5\u8fd8\u662f\u5efa\u8bae\u5148\u81ea\u5df1\u601d\u8003\u4e00\u4e0b\u5982\u4f55\u7528\u500d\u589e\u53bb\u4f18\u5316\uff0c\u7136\u540e\u60f3\u60f3\u5982\u4f55\u7528\u53cc\u5411\u94fe\u8868\u53bb\u521d\u59cb\u5316  \n\n1)\u8fd9\u91cc\u5148\u8bf4\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u7528\u500d\u589e  \n\n\u663e\u7136\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9i\uff0ca\u7684\u9009\u62e9\u662f\u552f\u4e00\u7684\uff0cb\u7684\u9009\u62e9\u4e5f\u662f\u552f\u4e00\u7684\uff0c\u6240\u4ee5\u4e0d\u5b58\u5728\u6700\u4f18\u89e3\uff0c\u53ef\u4ee5\u7528\u500d\u589e  \n\n2)\u600e\u4e48\u4f7f\u7528\u53cc\u5411\u94fe\u8868\u521d\u59cb\u5316  \n\n\u9996\u5148\u628a\u6240\u6709\u57ce\u5e02\u7684\u9ad8\u5ea6\u548c\u7f16\u53f7\u5b58\u5165\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u7136\u540e\u6392\u5e8f\uff0c\u8bb0\u5f55\u4e00\u4e0b\u6bcf\u4e2a\u57ce\u5e02\u6392\u5e8f\u540e\u7684\u4f4d\u7f6e\u3002\u7136\u540e\u8fd9\u4e2a\u7ed3\u6784\u4f53\u6570\u7ec4\u53ef\u4ee5\u76f4\u63a5\u52a0\u4e00\u4e2alast\u57df\u548cnext\u57df\u6539\u6210\u53cc\u5411\u94fe\u8868\uff0c\u9884\u5904\u7406\u7684\u65f6\u5019\u4ece1\u5230n\u5728\u94fe\u8868\u4e0a\u627e\u5230\u5bf9\u5e94\u4f4d\u7f6epos[i]\uff0c\u4e0d\u96be\u60f3\u5230\u7b2c\u4e00\u8fd1\u548c\u7b2c\u4e8c\u8fd1\u4e00\u5b9a\u5728pos[i]-2 pos[i]-1 pos[i]+1 pos[i]+2\u4e4b\u95f4\uff0c\u5728\u8fd9\u56db\u4e2a\u4f4d\u7f6e\u4e4b\u95f4\u548c\u4e0a\u9762\u7684\u66b4\u529b\u662f\u4e00\u6837\u7684\u5904\u7406\uff0c\u7136\u540e\u5728\u94fe\u8868\u4e2d\u628apos[i]\u5220\u53bb\uff0c\u8fd9\u6837\u7684\u8bdd\u7531\u4e8e1\u5230n\u662f\u4ece\u897f\u5230\u4e1c\u7684\uff0c\u94fe\u8868\u4e2d\u9664\u4e86pos[i]\u4ee5\u5916\u7684\u6240\u6709\u57ce\u5e02\u90fd\u5728pos[i]\u4e1c\u8fb9\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5O(N)\u9884\u5904\u7406\u51fac1 c2 dist1 dist2    \n\n3)\u500d\u589e\u521d\u59cb\u5316  \n\n\u4e0b\u9762\u8bf4\u8bf4\u5982\u4f55\u521d\u59cb\u5316\u500d\u589e\u4ee5\u53ca\u6ce8\u610f\u4e8b\u9879  \n\n\u6211\u4eec\u5b9a\u4e49dist3[i][j]\u4e3aa\u548cb\u4ecei\u5206\u522b\u5f00\u4e861<<j\u6b21\u7684\u8ddd\u79bb\uff0c  \ndist4[i][j]\u4e3aa\u548cb\u4ecei\u5206\u522b\u5f00\u4e861<<j\u6b21\u4ee5\u540ea\u7684\u603b\u8def\u7a0b\uff0cdist5\u540c\u7406\uff0c\u4e3aa\u548cb\u4ecei\u5206\u522b\u5f00\u4e861<<j\u6b21\u4ee5\u540eb\u7684\u603b\u8def\u7a0b  \nc3[i][j]\u4e3aa\u548cb\u4ecei\u5206\u522b\u5f00\u4e861<<j\u6b21\u4ee5\u540e\u4ed6\u4eec\u5728\u4ec0\u4e48\u4f4d\u7f6e  \n\n\u5bf9\u4e8ej=0\u7684\u60c5\u51b5\u662f\u663e\u7136\u7684  \n\n---\n```cpp\nfor (register int i = 1; i <= n; ++i)\n{\n     dist4[i][0] = dist2[i];\n     dist5[i][0] = dist1[c2[i]];\n     dist3[i][0] = dist2[i] + dist1[c2[i]];\n     c3[i][0] = c1[c2[i]];\n}\n```\n---\n\n\u6ce8\u610f\u4e00\u4e0bc1\u548cc2\u4e0d\u8981\u5f04\u6df7\u4e86  \n\n\u7136\u540e\u662fj>=1\u7684\u60c5\u51b5\n\n---\n```cpp\nfor (register int j = 1; j <= 20; ++j)\n    for (register int i = 1; i <= n; ++i)\n    {\n        c3[i][j] = c3[c3[i][j - 1]][j - 1];\n        if (c3[i][j])\n        {\n            dist3[i][j] = dist3[i][j - 1] + dist3[c3[i][j - 1]][j - 1];\n            dist4[i][j] = dist4[i][j - 1] + dist4[c3[i][j - 1]][j - 1];\n            dist5[i][j] = dist5[i][j - 1] + dist5[c3[i][j - 1]][j - 1];\n        }\n    }\n```\n---\n\n\u8fd9\u91cc\u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u662f\uff0cj\u662f\u5728\u5916\u5c42\u7684\uff0ci\u662f\u5728\u5185\u5c42\u7684\uff0c\u5343\u4e07\u4e0d\u80fd\u641e\u53cd\u4e86\uff08\u53ef\u80fd\u53ea\u6709\u6211\u8fd9\u79cd\u849f\u84bb\u4f1a\u72af\u8fd9\u79cd\u9519\uff09\uff0c\u56e0\u4e3a\u8981\u5148\u5904\u7406j-1\u7684\u60c5\u5f62\u624d\u80fd\u5904\u7406j\uff0c\u53e6\u5916\uff0c\u5982\u679cc3[i][j]\u662f0\uff0c\u8bf4\u660e\u4e0d\u80fd\u8d70\u4e86\uff0c\u5c31\u4e0d\u8981\u53bb\u5904\u7406dist\u4e86  \n\n\u7136\u540e\u5c31\u521d\u59cb\u5316\u5b8c\u4e86  \n\n4)\u5bf9\u95ee\u9898\u6c42\u89e3  \n\n\u6211\u4eec\u5148\u8ba9a\u548cb\u4e00\u8d77\u5f00\uff0c\u90a3\u4e48\u7528c3\u548cdist3\u5c31\u80fd\u5f97\u5230\u4e00\u4e2a\u8fd1\u4f3c\u6700\u7ec8\u7684\u60c5\u51b5\uff0c\u6700\u540e\u7531\u4e8e\u662fa\u5148\u5f00\u7684\uff0c\u8981\u5224\u65ad\u4e00\u4e0ba\u662f\u5426\u53ef\u4ee5\u7ee7\u7eed\u5f00\uff0c\u56e0\u4e3a\u4e4b\u524d\u662fa\u5f00\u5b8cb\u4e5f\u5f00\uff0c\u53ef\u80fd\u518d\u5f00dist3\u5c31\u8d85\u8fc7\u9650\u5236\u800ca\u518d\u5f00\u4e00\u6b21\u5e76\u6ca1\u6709\u8d85\u8fc7\u9650\u5236\uff0c\u6240\u4ee5\u8fd9\u4e2a\u5224\u65ad\u662f\u5fc5\u8981\u7684\uff0c\u5176\u4f59\u7684\u4e0e\u66b4\u529b\u76f8\u4f3c  \n\n\u5f97\u5206\uff1a100  \n\n\nAC\u4ee3\u7801\u9644\u4e0a\uff08\u7b2c\u4e8c\u884c\u9632\u4f5c\u5f0a\uff09\n\n---\n```cpp\n#include <bits/stdc++.h>\n#define ll long lon\n#define N 100010\nusing namespace std;\nll c1[N], c2[N], c3[N][21], n, m, pos[N], dist1[N], dist2[N], dist3[N][21], dist4[N][21], dist5[N][21];\ninline ll read()\n{\n    register ll num = 0;\n    register char ch;\n    register bool flag = false;\n    while ((ch = getchar()) == ' ' || ch == '\\n' || ch == '\\r');\n    if (ch == '-')flag = true; else num = ch ^ 48;\n    while ((ch = getchar()) != ' '&&ch != '\\n'&&ch != '\\r'&&~ch)\n        num = num * 10 + (ch ^ 48);\n    if (flag)return -num; return num;\n}\ndouble minv = INT_MAX;\nstruct Node {\n    ll h;\n    int bh, last, next;\n}q[N];\ninline bool cmp(register Node s, register Node t) { return s.h < t.h; }\ninline void updata(register int i, register int loc, register int x)\n{\n    if (x >= 1 && x <= n)\n    {\n        if (!dist1[i] || dist1[i] > abs(q[loc].h - q[x].h) || (dist1[i] == abs(q[loc].h - q[x].h) && q[x].h < q[pos[c1[i]]].h))\n        {\n            dist2[i] = dist1[i];\n            dist1[i] = abs(q[loc].h - q[x].h);\n            c2[i] = c1[i];\n            c1[i] = q[x].bh;\n        }\n        else if (!dist2[i] || dist2[i] > abs(q[loc].h - q[x].h) || (dist2[i] == abs(q[loc].h - q[x].h) && q[x].h < q[pos[c2[i]]].h))\n        {\n            dist2[i] = abs(q[loc].h - q[x].h);\n            c2[i] = q[x].bh;\n        }\n    }\n}\n\nint main()\n{\n    n = read();\n    for (register int i = 1; i <= n; ++i)q[i].h = read(), q[i].bh = i;\n    sort(q + 1, q + n + 1, cmp);\n    for (register int i = 1; i <= n; ++i)\n    {\n        pos[q[i].bh] = i;\n        if (i != 1)\n            q[i].last = i - 1;\n        if (i != n)\n            q[i].next = i + 1;\n    }\n    for (register int i = 1; i <= n; ++i)\n    {\n        register int loc = pos[i];\n        updata(i, loc, q[q[loc].last].last);\n        updata(i, loc, q[loc].last);\n        updata(i, loc, q[loc].next);\n        updata(i, loc, q[q[loc].next].next);\n        if (q[loc].last)q[q[loc].last].next = q[loc].next;\n        if (q[loc].next)q[q[loc].next].last = q[loc].last;\n        q[loc].last = q[loc].next = 0;\n    }\n    for (register int i = 1; i <= n; ++i)\n    {\n        dist4[i][0] = dist2[i];\n        dist5[i][0] = dist1[c2[i]];\n        dist3[i][0] = dist2[i] + dist1[c2[i]];\n        c3[i][0] = c1[c2[i]];\n    }\n    for (register int j = 1; j <= 20; ++j)\n        for (register int i = 1; i <= n; ++i)\n        {\n            c3[i][j] = c3[c3[i][j - 1]][j - 1];\n            if (c3[i][j])\n            {\n                dist3[i][j] = dist3[i][j - 1] + dist3[c3[i][j - 1]][j - 1];\n                dist4[i][j] = dist4[i][j - 1] + dist4[c3[i][j - 1]][j - 1];\n                dist5[i][j] = dist5[i][j - 1] + dist5[c3[i][j - 1]][j - 1];\n            }\n        }\n    register ll xx = read(), ans = 0;\n    for (int i = 1; i <= n; ++i)\n    {\n        register ll a = 0, b = 0, loc = i, x0 = xx;\n        for (register int j = 20; j >= 0; --j)\n        {\n            if (dist3[loc][j] && x0 >= dist3[loc][j])\n            {\n                x0 -= dist3[loc][j];\n                a += dist4[loc][j];\n                b += dist5[loc][j];\n                loc = c3[loc][j];\n            }\n        }\n        if (dist2[loc] <= x0)a += dist2[loc];\n        if (a <= 0)continue;\n        if (!ans || 1.0*a / b - minv < -0.00000001 || (fabs(1.0*a / b - minv) <= 0.00000001&&q[pos[ans]].h < q[pos[i]].h))\n        {\n            minv = 1.0*a / b;\n            ans = i;\n        }\n    }\n    printf(\"%lld\\n\", ans);\n    m = read();\n    while (m--)\n    {\n        register ll s = read(), x = read(), a = 0, b = 0;\n        for (register int j = 20; j >= 0; --j)\n        {\n            if (dist3[s][j] && x >= dist3[s][j])\n            {\n                x -= dist3[s][j];\n                a += dist4[s][j];\n                b += dist5[s][j];\n                s = c3[s][j];\n            }\n        }\n        if (dist2[s] <= x)a += dist2[s];\n        printf(\"%lld %lld\\n\", a, b);\n    }\n    return 0;\n}\n```\n---",
        "postTime": 1536595066,
        "uid": 87283,
        "name": "Zechariah",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1081 \u3010\u5f00\u8f66\u65c5\u884c\u3011"
    },
    {
        "content": "###\u8fd9\u4e2a\u9898\u548c\u697c\u4e0b\u5927\u4f6c\u4eec\u6240\u8bf4\u7684\u4e00\u6837\uff0c\u96be\u70b9\u5c31\u5728\u521d\u59cb\u5316\u3002\n\n\u9996\u5148\u8981\u628a\u8ddd\u79bb\u6bcf\u4e2a\u70b9\u7684\u6700\u5c0f\u70b9\u548c\u6b21\u5c0f\u70b9\u627e\u51fa\u3002\n\n\u7136\u540e\u5bf9\u4e8e\u8dd1\u56fe\u6211\u4eec\u7528\u500d\u589e\u5904\u7406\u4e00\u4e0b\u5373\u53ef\u3002\n\n\u540c\u6837\u7684A[i][j]\u8bb0\u5f97\u662fA\u8d702^j\u8f6e\u4e4b\u540e\u7684\u8ddd\u79bb\u3002\uff08B\u4e00\u6837\uff09\n\nf[i][j]\u8bb0\u5f97\u662f\u4ecei\u8d702^j\u4e2a\u4e24\u6b65\u4e4b\u540e\u70b9\uff08\u91cd\u70b9\uff09\n\n\n#\u9884\u5904\u7406\u51fa\u6700\u5c0f\u70b9\u548c\u6b21\u5c0f\u70b9\u3002\n\n\u8fd9\u4e2a\u9898\u5176\u5b9e\u6211\u4e00\u5f00\u59cb\u60f3\u7684\u662f\u66b4\u529b\u6c42\u70b9\uff0c\u7136\u540e\u6ca1\u770b\u5230\u6570\u636e\u8303\u56f4\uff08\u6ed1\u7a3d\uff09\uff0c\u540e\u6765\u6709\u5927\u4f6c\u544a\u8bc9\u6211\u8fd9\u6837\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u65f6O\uff08n^2\uff09\uff0c\u6211\u5c31\u653e\u5f03\u4e86\u3002\n\n\u6211\u4eec\u7528\u53cc\u5411\u94fe\u8868\u3002\n\n\u5148\u4e0d\u7ba1\u65b9\u5411\uff0c\u5c06\u6240\u6709\u57ce\u5e02\u6392\u5e8f\u4e4b\u540e\uff0c\u5b83\u7684\u6700\u5c0f\u548c\u6b21\u5c0f\u70b9\u4e00\u5b9a\u5728i-1,i-2,i+1,i+2\u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5\u8bf4\u5982\u679c\u6392\u5e8f\u6211\u4eec\u7684\u5904\u7406\u4f1a\u65b9\u4fbf\u5f88\u591a\u3002\n\n##\u5173\u4e8e\u65b9\u5411\n\n\u9996\u5148\u6211\u4eec\u8bb0\u4e0b\u6bcf\u4e2a\u57ce\u5e02\u6392\u5e8f\u4e4b\u540e\u7684\u4f4d\u7f6e\u3002\n\n\u7136\u540e\u4ece\u7b2c\u4e00\u4e2a\u57ce\u5e02\u5f00\u59cb\u5411i-1,i-2,i+1,i+2\u5904\u627e\u70b9\u3002\n\n\u5f88\u663e\u7136\uff0c\u7531\u4e8e\u662f\u7b2c\u4e00\u4e2a\u70b9\uff0c\u8fd9\u4e2a\u65f6\u5019\u627e\u5230\u7684\u4efb\u4f55\u70b9\u4e00\u5b9a\u5728\u5b83\u4e1c\u8fb9\u3002\n\n###\u540c\u6837\u7684\uff0c\u627e\u5b8c\u7b2c\u4e00\u4e2a\u70b9\u540e\u5c06\u7b2c\u4e00\u4e2a\u70b9\u5220\u9664\uff0c\u90a3\u4e48\u7b2c\u4e8c\u4e2a\u70b9\u81ea\u7136\u6210\u4e3a\u4e86\u7b2c\u4e00\u4e2a\u70b9\uff0c\u540c\u7406\u3002\n\n\u8fd9\u6837\u6211\u4eec\u4fbf\u5728O\uff08n\uff09\u7684\u590d\u6742\u5ea6\u5185\u5b8c\u6210\u4e86\u9884\u5904\u7406\u3002\n\n#\u500d\u589e\u7684\u521d\u59cb\u5316\u8981\u6ce8\u610f\u7684\u7684\u5730\u65b9\u3002\n\n\u5bf9\u4e8ef\uff0c\u8bb0\u5f97\u4e00\u5b9a\u662f2^j\u4e2a\u4e24\u6b65\u4e4b\u540e\u6240\u5230\u8fbe\u7684\u70b9\uff0c\u4e0eA,B\u8c01\u5f00\u8f66\u65e0\u5173\u3002\n\n\u5bf9\u4e8eB\uff0c\u7531\u4e8e\u5f00\u59cb\u4e00\u5b9a\u662fA\u5148\u8dd1\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u7528\u6b21\u5c0f\u70b9\u7684\u6700\u5c0f\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u521d\u59cb\u5316\u3002\n\n\u5177\u4f53\u500d\u589e\u601d\u8def\u4e0e\u697c\u4e0b\u5dee\u4e0d\u591a\uff0c\u8fd9\u91cc\u6211\u5c31\u53ea\u8d34\u51fa\u521d\u59cb\u5316\u7684\u4ee3\u7801\u3002\n\n#\u6700\u5c0f\u70b9\u4e0e\u6b21\u5c0f\u70b9\n\n```cpp\ninline void prepare(int u,int i){//u\u8bb0\u5f97\u662f\u6392\u5e8f\u540e\u7684\u4f4d\u7f6e\uff0ci\u4e3a\u6392\u5e8f\u524d\u7684\u4f4d\u7f6e\n    if(pre[u])min1[i]=H[pre[u]].p;\n    if((nxt[u]&&H[u].h-H[pre[u]].h>H[nxt[u]].h-H[u].h)||!pre[u])min1[i]=H[nxt[u]].p;\n    if(min1[i] == H[pre[u]].p){\n        if(pre[pre[u]])min2[i]=H[pre[pre[u]]].p;\n        if((nxt[u]&&H[u].h-H[pre[pre[u]]].h>H[nxt[u]].h-H[u].h)||!pre[pre[u]])min2[i]=H[nxt[u]].p;\n    }\n    else {\n        if(pre[u])min2[i]=H[pre[u]].p;\n        if((nxt[nxt[u]]&&H[u].h-H[pre[u]].h>H[nxt[nxt[u]]].h-H[u].h)||!pre[u])min2[i]=H[nxt[nxt[u]]].p;\n    }\n    nxt[pre[u]]=nxt[u];\n    pre[nxt[u]]=pre[u];\n}\n```\n#\u500d\u589e\u521d\u59cb\u5316\n\n```cpp\nvoid Init(){\n    for(int i=1;i<=N;i++){\n        if(min2[i])A[i][0]=abs(data[min2[i]]-data[i]);\n        if(min1[i])B[i][0]=abs(data[min2[i]]-data[min1[min2[i]]]);//\u8d70\u4e00\u8f6eB\u662f\u4ece\u6b21\u8fd1\u70b9\u5411\u6b21\u8fd1\u70b9\u7684\u6700\u8fd1\u70b9\u8d70 \n        f[i][0]=min1[min2[i]];\n    }\n}\n```",
        "postTime": 1509320259,
        "uid": 55644,
        "name": "shadow__",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1081 \u3010\u5f00\u8f66\u65c5\u884c\u3011"
    },
    {
        "content": "\u4e2a\u4eba\u8ba4\u4e3a\u601d\u7ef4\u96be\u5ea6\u633a\u5927\u7684\u9898QAQ\n\n\u601d\u8def\u5c31\u662f\u500d\u589e\uff0c \u7136\u800c\u9884\u5904\u7406\u5c31\u633a\u9ebb\u70e6\u7684\uff0c \u8981\u7528 \u79bb\u6563\u5316 \u52a0 \u53cc\u5411\u94fe\u8868 \u5904\u7406\u51fa\u6bcf\u4e00\u4e2a\u70b9A\u548cB\u8981\u5230\u7684\u4e0b\u4e00\u4e2a\u70b9\u3002\n\n\u8fd9\u91cc\u7684\u5904\u7406\u8981\u7528\u5230\u4e00\u4e9b\u6280\u5de7\uff0c \u8be6\u89c1\u4ee3\u7801\u3002\n\n\u7136\u540e\u5c31\u662f\u500d\u589e\uff1a\n\nf[i][j] \u8868\u793a \u4ece\u7b2ci\u4e2a\u70b9\u51fa\u53d1\uff0c A\u548cB\u6ca1\u4eba\u5f00\u4e86\uff081<<j\uff09\u5929\u6240\u5230\u7684\u70b9\uff0c stA(B)\u8868\u793a A(B) \u7684 \u8def\u7a0b\u3002\n\n\u56e0\u4e3aA\u662f\u5148\u8d70\u7684\uff0c \u6240\u4ee5\u8981\u770b\u6700\u540e\u4e00\u6b65A\u8fd8\u80fd\u4e0d\u80fd\u518d\u8d70\u4e00\u6b65\u3002\n\n```cpp\n#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <cmath>\nusing namespace std;\nint n, m, l, r, j;\nstruct node{\n    int i, v, l, r;\n    bool operator < (const node & A) const{\n        return v < A.v;\n    }\n}d[100005];\nint h[100005], p[100005];\nint stA[100005][21], stB[100005][21], f[100005][21];\nint na[100005], nb[100005], a, b, ans = n;\ndouble minn = 2147483647;\nbool zuo(){\n    if(!l) return 0;\n    if(!r) return 1;\n    return d[j].v-d[l].v<=d[r].v-d[j].v;\n}\nint pd(int a, int b){\n    if(!a) return d[b].i;\n    if(!b) return d[a].i;\n    if(d[j].v-d[a].v <= d[b].v-d[j].v) return d[a].i;\n    return d[b].i;\n}\nvoid make_st(){\n    int i, j;\n    for(j = 1; j <= 19; j++){\n        for(i = 1; i <= n; i++){\n            f[i][j] = f[f[i][j-1]][j-1];\n            stA[i][j] = stA[i][j-1] + stA[f[i][j-1]][j-1];\n            stB[i][j] = stB[i][j-1] + stB[f[i][j-1]][j-1];\n        }\n    }\n}\nvoid getab(long long x, int p){\n    int i, j;\n    a = b = 0;\n    for(i = 19; i >= 0; i--){\n        if(f[p][i] && (long long)(a + b + stA[p][i]+stB[p][i]) <= x){\n            a += stA[p][i];\n            b += stB[p][i];\n            p = f[p][i];\n        }\n    }\n    if(na[p] && a + b + stA[p][0] <= x) a += stA[p][0];\n}\nint main(){\n    int i;\n    long long x;\n    scanf(\"%d\", &n);\n    for(i = 1; i <= n; i++) scanf(\"%d\", &d[i].v);\n    for(i = 1; i <= n; i++) d[i].i = i;\n    sort(d+1, d+i);\n    for(i = 1; i <= n; i++) p[d[i].i] = i;\n    for(i = 1; i <= n; i++) d[i].l = i-1, d[i].r = i+1;\n    d[1].l = d[n].r = 0;\n    for(i = 1; i <= n; i++){\n        j = p[i]; l = d[j].l; r = d[j].r;\n        if(zuo()) nb[i] = d[l].i, na[i] = pd(d[l].l, r);//\u5de6\u8fb9\u7684\u8fd1 \n        else nb[i] = d[r].i, na[i] = pd(l, d[r].r);//\u53f3\u8fb9\u7684\u8fd1 \n        if(l) d[l].r = r;//\u7528\u5b8cj\u8981\u628aj\u5220\u9664\u6389  \n        if(r) d[r].l = l;\n    }\n    for(i = 1; i <= n; i++){\n        f[i][0] = nb[na[i]];\n        stA[i][0] = abs(d[p[i]].v - d[p[na[i]]].v);\n        stB[i][0] = abs(d[p[f[i][0]]].v - d[p[na[i]]].v);//\u8bb0\u4f4f\u7ed3\u6784\u4f53\u5df2\u7ecf\u6392\u5e8f\u4e86\uff0c \u6240\u4ee5\u8981\u7528\u4ed6\u4eec\u7684\u6392\u540d\u83b7\u53d6\u4fe1\u606f \n    }\n    make_st();\n    scanf(\"%lld%d\", &x, &m);\n    for(i = 1; i <= n; i++){\n        getab(x, i);\n        if(b && 1.0*a/b < minn){\n            minn = 1.0*a/b;\n            ans = i;\n        }\n    }\n    printf(\"%d\\n\", ans);\n    for(i = 1; i <= m; i++){\n        scanf(\"%d%lld\", &j, &x);\n        getab(x, j);\n        printf(\"%d %d\\n\", a, b);\n    }\n    return 0;\n}\n```",
        "postTime": 1505529591,
        "uid": 31619,
        "name": "Hzxleo4",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1081 \u3010\u5f00\u8f66\u65c5\u884c\u3011"
    },
    {
        "content": "\u4e3a\u4e86\u901a\u8fc7[\u63d0\u9ad8\u8bd5\u70bc\u573a](https://www.luogu.com.cn/paste/c6a97wup)\u7684\u500d\u589e\u5173\uff0c\u88ab\u8feb\u505a\u7d2b\u9898/kel\u2026\u2026\uff08[yrz\u83dc\u83dc\u2026\u2026](https://www.luogu.com.cn/paste/jsj7y3zb)\uff09\n\n\uff08\u7279\u522b\u9e23\u8c22\uff1a\u672c\u9898\u89e3\u7531\u300a\u7b97\u6cd5\u7ade\u8d5b\u8fdb\u9636\u6307\u5357\u300b\u8d5e\u52a9\u64ad\u51fa\uff0c\u300a\u7b97\u6cd5\u7ade\u8d5b\u8fdb\u9636\u6307\u5357\u300b\uff0c\u4e00\u672c\u4f60\u503c\u5f97\u62e5\u6709\u7684\u7b97\u6cd5\u597d\u4e66\uff01\uff09\n\n\u521a\u624d\u4e00\u4e0d\u5c0f\u5fc3\u628a\u8fd9\u4e2a\u9898\u7684\u65b9\u6cd5\u66b4\u9732\u4e86\u5462\u2026\u2026\u6ca1\u9519\uff0c\u8fd9\u4e2a\u9898\u7684main idea\u5c31\u662f\uff1a**\u500d\u589e**\uff01\n\n\u500d\u589e\uff0c\u5b57\u9762\u610f\u601d\u5c31\u662f\u201c**\u6210\u500d\u589e\u957f**\u201d\uff0c\u4e5f\u8bb8\u4f60\u542c\u8bf4\u8fc7\u5728\u56fd\u9645\u8c61\u68cb\u68cb\u76d8\u4e0a\u6446\u653e\u9ea6\u7c92\u7684\u6545\u4e8b\uff0c\u4f53\u9a8c\u4e86\u6307\u6570\u51fd\u6570\u7206\u70b8\u7ea7\u522b\u7684\u6050\u6016\uff0c\u4e5f\u5728[\u5feb\u901f\u5e42](https://www.luogu.com.cn/problem/P1226)\uff0c[ST\u8868](https://www.luogu.com.cn/problem/P3865)\u548c[\u6700\u8fd1\u516c\u5171\u7956\u5148LCA](https://www.luogu.com.cn/problem/P3379)\u4e2d\u9886\u7565\u5230\u8fd9\u4e9b\u9ad8\u6548\u7684\u7b97\u6cd5\u7684\u795e\u5947\n\n\u6ca1\u9519\uff0c\u4e0a\u9762\u7684\u4e1c\u897f\u90fd\u662f\u500d\u589e\u601d\u60f3\u7684\u5177\u4f53\u4f53\u73b0\n\n\u90a3\u8fd9\u4e2a\u9898\u5230\u5e95\u662f\u600e\u4e48\u8ddf\u500d\u589e\u7684\u6280\u5de7\u626f\u4e0a\u5173\u7cfb\u7684\u5462\uff1f\uff1f\uff1f\u522b\u6025\uff0c\u54b1\u4eec\u4e00\u6b65\u4e00\u6b65\u6765\uff0c\u4ece\u5206\u6790\u9898\u76ee\u5f00\u59cb\uff01\n\n------------\n## Part I\n>\u8bb0\u57ce\u5e02 $i$ \u7684\u6d77\u62d4\u9ad8\u5ea6\u4e3a$h_i$\n \uff0c\u57ce\u5e02 $i$ \u548c\u57ce\u5e02 $j$ \u4e4b\u95f4\u7684\u8ddd\u79bb $d_{i,j}$\n  \u6070\u597d\u662f**\u8fd9\u4e24\u4e2a\u57ce\u5e02\u6d77\u62d4\u9ad8\u5ea6\u4e4b\u5dee\u7684\u7edd\u5bf9\u503c**\uff0c\u5373 $d_{i,j}=|h_i-h_j|$\u3002\n  \n>\u5c0f $\\text{B}$ \u603b\u662f**\u6cbf\u7740\u524d\u8fdb\u65b9\u5411**\u9009\u62e9\u4e00\u4e2a**\u6700\u8fd1\u7684\u57ce\u5e02**\u4f5c\u4e3a\u76ee\u7684\u5730\uff0c\u800c\u5c0f $\\text{A}$ \u603b\u662f**\u6cbf\u7740\u524d\u8fdb\u65b9\u5411**\u9009\u62e9**\u7b2c\u4e8c\u8fd1\u7684\u57ce\u5e02**\u4f5c\u4e3a\u76ee\u7684\u5730 \u3002\n\n\u770b\u6765\uff0c**\u5c0f$\\text{A}$\u548c\u5c0f$\\text{B}$\u4e0b\u6b21\u5230\u8fbe\u7684\u57ce\u5e02**\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u8d76\u7d27\u628a\u5b83\u9884\u5904\u7406\u51fa\u6765\uff01\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u8981\u9884\u5904\u7406\u51fa\u5728\u57ce\u5e02$i$\u7684\u65f6\u5019\uff0c**\u5c0f$\\text{A}$\u8981\u8d70\u7684\u57ce\u5e02$ga_i$**\u548c**\u5c0f$\\text{B}$\u8981\u8d70\u7684\u57ce\u5e02$gb_i$**\n\n$gb_i$\u5c31\u662f\u8981\u627e\u4e00\u4e2a$j(i<j\\le n)$\uff0c\u4f7f\u5f97$|h_i-h_j|$\u6700\u5c0f\uff0c\u800c$ga_i$\u5c31\u662f\u4f7f\u5f97$|h_i-h_j|$\u6b21\u5c0f\n\n\u90a3\u600e\u4e48\u9884\u5904\u7406\u5462\uff1f\uff1f\uff1f\u4e0d\u96be\u60f3\u5230\uff0c$gb_i$\u5c31\u662f**\u79bb\u5f53\u524d\u7684$i$\u7684\u9ad8\u5ea6\u6700\u63a5\u8fd1\u7684\u57ce\u5e02**\uff0c\u6211\u4eec\u5148\u7ed9\u6bcf\u4e2a\u57ce\u5e02\u6309\u9ad8\u5ea6\u6392\u4e2a\u5e8f\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u6392\u5e8f\u4e4b\u540e**\u8981\u6c42\u7684$gb_i$\u5c31\u662f$i-1$\u548c$i+1$\u4e2d\uff0c\u548c$i$\u7684\u9ad8\u5ea6\u5dee\u66f4\u5c0f\u7684\u90a3\u4e2a**\n\n\u800c$ga_i$\u5c31\u540c\u7406\u5566\uff0c\u6839\u636e\u521a\u624d\u7684\u601d\u8def\uff0c$ga_i$\u80af\u5b9a\u662f$i-1,i-2,i+1,i+2$\u5176\u4e2d\u4e4b\u4e00\uff0c\u8fd9\u56db\u4e2a\u91cc\u9762\u80af\u5b9a\u6709\u4e00\u4e2a\u662f$gb_i$\uff0c\u518d\u4ece\u5269\u4e0b\u4e09\u4e2a\u91cc\u9762\u627e\u4e2a\u5c0f\u7684\u5c31\u662f$ga_i$\u4e86\n\n\u600e\u4e48\u627e\u7684\u95ee\u9898\u89e3\u51b3\u4e86\uff0c\u4f46\u8fd8\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u4e8b\u60c5\u6ca1\u8003\u8651\u2014\u2014\u6bcf\u6b21\u5fc5\u987b\u53bb\u5f80**\u524d\u8fdb\u65b9\u5411**\u7684\u57ce\u5e02\uff0c\u8fd9\u8be5\u600e\u4e48\u529e\u5462\uff1f\n\n\u54b1\u4eec\u5148\u4ece\u57ce\u5e02$1$\u6765\u8003\u8651\uff0c\u6bd5\u7adf\u4ece\u57ce\u5e02$1$\u51fa\u53d1\uff0c\u54ea\u4e2a\u57ce\u5e02\u90fd\u80fd\u5230\u561b\uff01\u627e\u5230\u6392\u5e8f\u540e\u57ce\u5e02$1$\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u6309\u7167\u521a\u624d\u8bf4\u7684\u6bd4\u8f83\u5927\u5c0f\uff0c\u5c31\u53ef\u4ee5\u627e\u5230$gb_1$\u548c$ga_1$\n\n\u90a3$i=2$\u7684\u65f6\u5019\u5462\uff1f\n\n$i=2$\u65f6\uff0c\u9664\u4e86\u57ce\u5e02$1$\u662f\u4e0d\u80fd\u8d70\u7684\uff0c\u5176\u5b83\u90fd\u80fd\u7545\u901a\u65e0\u963b\uff0c\u90a3\u8981\u4e0d\u2026\u2026\u6211\u4eec\u5728\u5904\u7406\u5b8c$i=1$\u7684\u60c5\u51b5\u540e\u628a\u57ce\u5e02$1$\u5220\u6389\uff1f\u95ee\u9898\u4e0d\u5c31\u89e3\u51b3\u4e86\uff1f\n\n\u5b8c\u5168\u6ca1\u6709\u95ee\u9898\uff01\u6211\u4eec\u5c31\u7528\u8fd9\u79cd**\u5f04\u5b8c\u4e00\u4e2a\u5220\u4e00\u4e2a**\u7684\u65b9\u5f0f\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u5f53\u524d\u8981\u8003\u8651\u7684\u57ce\u5e02\u91cc\u53ea\u6709\u524d\u8fdb\u65b9\u5411\u7684\u57ce\u5e02\uff0c\u56e0\u4e3a\u5f53\u4e00\u4e2a\u57ce\u5e02\u5904\u7406\u8fc7\u53bb\u4e4b\u540e\uff0c\u5b83\u5c31\u518d\u4e5f\u4e0d\u80fd\u5230\u8fbe\u4e86\n\n\u90a3\u8fd9\u6ce2\u64cd\u4f5c\u5177\u4f53\u600e\u4e48\u5b9e\u73b0\u5462\uff1f\u65e2\u7136**\u8981\u8d44\u74f7\u9891\u7e41\u7684\u5220\u9664\u64cd\u4f5c**\uff0c\u5f00\u52a8\u8111\u7b4b\u60f3\u4e00\u60f3\uff0c\u7528**\u53cc\u5411\u94fe\u8868**\u662f\u66f4\u597d\u4e0d\u8fc7\u4e86\uff08\u6ca1\u5b66\u8fc7\u53cc\u5411\u94fe\u8868\u7684\u540c\u5b66\u4eec\u53ef\u4ee5\u53bb [P1160 \u961f\u5217\u5b89\u6392](https://www.luogu.com.cn/problem/P1160)\uff09\n\n\u63a5\u4e0b\u6765\uff0c\u8ba9\u6211\u4eec\u5f00\u59cb\u6109\u5feb\u5730\u5199\u4ee3\u7801\u5427\uff01\u867d\u7136\u53cc\u5411\u94fe\u8868\u7684\u5b9e\u73b0\u8fd8\u662f\u633a\u57fa\u7840\u7684\uff0c\u4f46\u662f**\u8981\u6ce8\u610f\u7684\u7ec6\u8282\u548c\u5751\u8fd8\u662f\u633a\u591a\u7684**\uff08\u8981\u4e0d\u7136\u6211\u4e3a\u5565\u5149\u53cc\u5411\u94fe\u8868\u5c31\u8c03\u4e86\u4e00\u665a\u4e0a\uff09\uff0c\u5c24\u5176\u662f\u8981\u6ce8\u610f**\u5224\u5b9a\u5f53\u524d\u5143\u7d20\u7684\u524d\u9a71\u548c\u540e\u7ee7\u4e0d\u5b58\u5728\u7684\u60c5\u51b5**\n\n```cpp\nstruct qwq{//\u5b58\u50a8\u57ce\u5e02\u7684\u7ed3\u6784\u4f53\n\tint hi,id;//hi\u4e3a\u57ce\u5e02\u7684\u6d77\u62d4\u9ad8\u5ea6\uff0cid\u4e3a\u57ce\u5e02\u7684\u5e8f\u53f7\n\tint pre,nxt;//pre\u548cnext\u662f\u94fe\u8868\u7684\u8c61\u5f81\uff01\n}h[100005];\nbool cmp(qwq x,qwq y){//\u6392\u5e8f\u7528\u7684cmp\u51fd\u6570\n\treturn x.hi<y.hi;//\u6309\u9ad8\u5ea6\u4ece\u5c0f\u5230\u5927\u6392\n}\nint pos[100005],ga[100005],gb[100005];//pos\u4e3a\u57ce\u5e02\u6392\u5e8f\u540e\u6240\u5728\u7684\u4f4d\u7f6e\uff0cga\u548cgb\u5c31\u662f\u6211\u4eec\u8981\u6c42\u7684\u4e1c\u897f\n```\n```cpp\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&h[i].hi);//\u8f93\u5165\u5c31\u4e0d\u7528\u8bf4\u4e86\u5427\n\t\th[i].id=i;//\u57ce\u5e02\u7684\u7f16\u53f7\n\t}\n\tsort(h+1,h+1+n,cmp);//\u6392\u4e2a\u5e8f\n\tfor(int i=1;i<=n;i++){\n\t\tpos[h[i].id]=i;//\u628apos\u6570\u7ec4\u6574\u51fa\u6765\n\t\th[i].pre=i-1;//\u7528\u94fe\u8868\u628a\u57ce\u5e02\u4e32\u4e00\u4e32\n\t\th[i].nxt=i+1;\n\t}\n\th[1].pre=h[n].nxt=0;//\u628a\u5934\u90e8\u7684\u524d\u9a71\u548c\u5c3e\u90e8\u7684\u540e\u7ee7\uff08\u8fb9\u754c\u90e8\u5206\uff09\u641e\u62100\n\tfor(int i=1;i<n;i++){\n\t\tint p=pos[i],p1=h[p].pre,p2=h[p].nxt;  //\u628a\u5f53\u524d\u7684\u57ce\u5e02\u4ee5\u53ca\u5b83\u7684\u524d\u9a71\u548c\u540e\u7ee7\u90fd\u627e\u51fa\u6765\uff0c\u65b9\u4fbf\u540e\u7eed\u64cd\u4f5c                                \n\t\tif(p1&&(h[p].hi-h[p1].hi<=h[p2].hi-h[p].hi||!p2))//\u5982\u679c\u5f53\u524d\u57ce\u5e02i\u5230p1\u7684\u8ddd\u79bb\u6bd4\u5230p2\u7684\u5c0f\uff0c\u6216\u8005\u5e72\u8106\u6ca1\u6709p2\u53ea\u80fd\u9009p1\uff08\u9009\u62e9p1\u5fc5\u987b\u4fdd\u8bc1p1\u662f\u5b58\u5728\u7684\uff0c\u5207\u8bb0\u6ce8\u610f\uff09      \n\t\tgb[i]=h[p1].id,ga[i]=choose(h[p1].pre,p2,p);//\u90a3gb\u5c31\u5f53\u7136\u9009p1\u5566\uff0cga\u7684\u8bdd\u5c31\u4ece\u90a3\u4e24\u4e2a\u91cc\u9762\u9009\uff08\u600e\u4e48\u9009\u9a6c\u4e0a\u5c31\u8bb2\uff09\n\t\telse gb[i]=h[p2].id,ga[i]=choose(p1,h[p2].nxt,p);//\u5426\u5219\u5462\uff0c\u5c31\u53cd\u8fc7\u6765\uff0cgb\u9009p2\uff0cga\u4ecep1\u548cp2\u7684\u540e\u7ee7\u4e2d\u9009\t\n\t\tdel(p);//\u5f04\u5b8c\u4e86\u5c31\u628a\u5b83\u5220\u6389\uff0c\u53cd\u6b63\u4ee5\u540e\u90fd\u5230\u4e0d\u4e86\u4e86\n\t}\n```\n\n  ```cpp\nint choose(int a,int b,int i){//\u5f53\u524d\u57ce\u5e02\u4e3ai\uff0c\u4ecea\u4e0eb\u4e2d\u9009\u62e9\u4e00\u4e2a\u66f4\u4f18\u7684\n\tif(!a)return h[b].id;//\u5982\u679c\u5176\u4e2d\u4e00\u4e2a\u57ce\u5e02\u6ca1\u6709\uff0c\u90a3\u5c31\u53ea\u80fd\u88ab\u8feb\u9009\u53e6\u4e00\u4e2a\u4e86\n\tif(!b)return h[a].id;//\u4ffa\u4e5f\u4e00\u6837\uff0c\u6ce8\u610f\u8fd4\u56de\u7684\u662fid\n\tif(h[i].hi-h[a].hi<=h[b].hi-h[i].hi)//\u5982\u679c\u57ce\u5e02i\u4e0ea\u7684\u9ad8\u5ea6\u5dee\u6bd4i\u4e0eb\u7684\u5c0f\n\treturn h[a].id;//\u90a3\u5c31\u9009a\u54af\n\telse return h[b].id;//\u8981\u4e0d\u5c31\u662fb\n}\nvoid del(int pos){//\u53cc\u5411\u94fe\u8868\u57fa\u672c\u64cd\u4f5c\u2014\u2014\u5220\u9664\u94fe\u8868\u4e2d\u7684\u5143\u7d20\n\tif(h[pos].nxt)h[h[pos].nxt].pre=h[pos].pre;//\u8fde\u8fd9\u4e2a\u90fd\u4e0d\u4f1a\u7684\u8bdd\u53ef\u4ee5\u53bb\u53cc\u5411\u94fe\u8868\u5165\u95e8\u9898\u56de\u7089\u91cd\u9020\u4e86\n\tif(h[pos].pre)h[h[pos].pre].nxt=h[pos].nxt;//\u5982\u679c\u5b9e\u5728\u7406\u89e3\u4e0d\u4e86\u7684\u8bdd\u53ef\u4ee5\u753b\u4e2a\u56fe\uff0c\u8fd8\u662f\u5f88\u597d\u7406\u89e3\u7684\n}\n```\n\uff08\u8bdd\u8bf4\u8fd9\u4e00\u6b65\u7684\u5b9e\u73b0\u7528STL\u5927\u6cd5\u4e2d\u7684**set+\u8fed\u4ee3\u5668**\u4e5f\u73c2\u4ee5\u5b9e\u73b0\uff0c\uff08~~\u636e\u8bf4\u4f60\u751a\u81f3\u53ef\u4ee5\u624b\u5199\u5e73\u8861\u6811~~\uff09\uff0c\u7531\u4e8e\u672c\u4eba\u5199set\u8fed\u4ee3\u5668\u5c61\u5c61\u51fa\u9505\uff0c\u8fd9\u91cc\u5c31\u4e0d\u7ed9\u5927\u5bb6\u5c55\u793a\u4e86\uff09\n\n------------\n## Part II\n\u5bf9\u9898\u76ee\u5206\u6790\u7684\u7b2c\u4e00\u6b65\u5b8c\u7f8e\u7ed3\u675f\uff0c\u6211\u4eec\u63a5\u7740\u6765\u770b\uff1a\n>1\u3001 \u5bf9\u4e8e\u4e00\u4e2a\u7ed9\u5b9a\u7684 $x=x_0$\t\n \uff0c**\u4ece\u54ea\u4e00\u4e2a\u57ce\u5e02\u51fa\u53d1**\uff0c**\u5c0f $\\text{A}$ \u5f00\u8f66\u884c\u9a76\u7684\u8def\u7a0b\u603b\u6570**\u4e0e**\u5c0f $ \\text{B}$ \u884c\u9a76\u7684\u8def\u7a0b\u603b\u6570**\u7684\u6bd4\u503c\u6700\u5c0f\n\n>2\u3001\u5bf9\u4efb\u610f\u7ed9\u5b9a\u7684 $x=x_i$\n  \u548c**\u51fa\u53d1\u57ce\u5e02 $s_i$** \n \uff0c**\u5c0f $\\text{A}$ \u5f00\u8f66\u884c\u9a76\u7684\u8def\u7a0b\u603b\u6570**\u4ee5\u53ca**\u5c0f $\\text {B}$ \u884c\u9a76\u7684\u8def\u7a0b\u603b\u6570**\u3002\n \n\u6211\u4eec\u53d1\u73b0\uff0c\u9898\u76ee\u4e2d\u8981\u6c42\u7684\u4e1c\u897f\u8ddf**\u5230\u8fbe\u7684\u57ce\u5e02**\uff0c**\u5c0f $\\text{A}$ \u8d70\u7684\u8def\u7a0b**\u548c**\u5c0f $\\text{B}$ \u8d70\u7684\u8def\u7a0b**\n\n\u90a3\u600e\u4e48\u641e\u5230\u8fd9\u4e9b\u4fe1\u606f\u5462\uff1f\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053**\u51fa\u53d1\u7684\u57ce\u5e02**\u548c**\u884c\u9a76\u7684\u5929\u6570**\uff0c\u54e6\u5bf9\u4e86\uff0c\u8fd8\u6709**\u8f6e\u5230\u8c01\u5f00\u8f66**\n\n\u90a3\u6211\u4eec\u5c31\u4e00\u5929\u4e00\u5929\u7684\u5f00\uff0c\u53bb\u6a21\u62df\u5f00\u8f66\u8fc7\u7a0b\uff1f\n\n\u522b\u5fd8\u4e86\u6570\u636e\u8303\u56f4\u8fa3\u4e48\u5927\uff0c\u4ed6\u4fe9\u6709\u65f6\u5019\u5f00\u4e0a\u5341\u5929\u534a\u4e2a\u6708\u4e5f\u5f00\u4e0d\u5b8c\uff0c\u600e\u4e48\u529e\u5462\uff1f\n\n\u53cd\u624b\u4e00\u4e2a**\u500d\u589e**\uff0c\u95f7\u58f0\u53d1\u5927\u8d22\uff01\n\n\u4e3a\u5565\u7528\u500d\u589e\u5c31\u53ef\u4ee5\u5462\uff1f\u56e0\u4e3a\u901a\u8fc7\u500d\u589e\u679a\u4e3e\uff0c\u662f\u5c06\u6bcf\u6b21\u628a\u4e00\u4e2a\u6570\u53d8\u6210\u5b83\u76f8\u5e94\u7684\u4e24\u500d\uff0c\u4e5f\u5c31\u662f\u8bf4\uff1a\n\n$\\boxed{\\begin{aligned}\\text{\u666e\u901a\u7684\u679a\u4e3e\uff1a}1,2,3,4,5,6,7,8,9,10\\cdots \\qquad\\qquad\\qquad\\ \\ \\\\\n\\text{\u7528\u500d\u589e\u679a\u4e3e\uff1a}1,2,4,8,16,32,64,128,256,512,1024\\cdots\\end{aligned}}$\n\n\u8fd9\u7b80\u76f4\u5feb\u7684\u4e0d\u662f\u4e00\u70b9\u534a\u70b9\u554a\uff01\n\n\u9886\u6559\u5230\u500d\u589e\u7684\u5a01\u529b\u4e4b\u540e\uff0c\u6211\u4eec\u6765\u770b\u770b\u63a5\u4e0b\u6765\u600e\u4e48\u505a\uff0c\u6839\u636e\u521a\u624d\u8bf4\u7684\uff0c\u6211\u4eec\u662f**\u901a\u8fc7\u5df2\u77e5\u6761\u4ef6\u63a8\u51fa\u65b0\u7684\u72b6\u6001**\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u662f\u4e00\u4e2a**dp**\uff0c\u6216\u8005\u8bf4\u662f**\u9012\u63a8**\u7684\u8fc7\u7a0b\n\n>**\u52a8\u6001\u89c4\u5212**\u9700\u8981\u8003\u8651\u4e09\u4ef6\u4e8b\uff1a**\u6570\u7ec4**\u3001**\u65b9\u7a0b**\u3001**\u521d\u59cb\u5316**\n\t\t\t\t\n> \u2014\u2014  $\\text{v\\color{red}ectorwyx}$\n\n\u9996\u5148\u662f\u8003\u8651**\u72b6\u6001\u5b9a\u4e49**\u7684\u95ee\u9898\uff0c\u6839\u636e\u521a\u624d\u63a8\u51fa\u7684\u5173\u952e\u4fe1\u606f\uff0c\u6211\u4eec\u5206\u522b\u8981\u5b9a\u4e49\u4e09\u4e2a\u6570\u7ec4\u2014\u2014$f$\u8868\u793a\u8d70\u5230\u7684\u57ce\u5e02\uff0c$da$\u8868\u793a\u5c0f$A$\u8d70\u8fc7\u7684\u8ddd\u79bb\uff0c$db$\u8868\u793a\u5c0f$\\text{B}$\u8d70\u8fc7\u7684\u8ddd\u79bb\n\n\u5e76\u4e14\uff0c\u51b3\u5b9a\u8fd9\u4e09\u8005\u7684\u56e0\u7d20\u5728\u524d\u9762\u4e5f\u8bf4\u8fc7\u4e86\uff0c\u6211\u4eec\u5c31\u7528$f_{i,j,k}$\u8868\u793a\u5f00\u8f66$2^i$\u5929\uff08\u8bf4\u597d\u7684\u500d\u589e\u5450\uff09\uff0c\u4ece\u57ce\u5e02$j$\u51fa\u53d1\u5230\u8fbe\u7684\u57ce\u5e02\uff0c$k=0$\u8868\u793a\u8f6e\u5230\u5c0f$\\text{A}$\u5148\u5f00\u8f66\uff0c$k=1$\u8868\u793a\u8f6e\u5230\u5c0f$\\text{B}$\u5148\u5f00\u8f66\n\n\u540c\u6837\uff0c$da_{i,j,k}$\u548c$db_{i,j,k}$\u4e5f\u662f\u8fd9\u4e48\u5b9a\u4e49\u7684\uff01\n\n\u63a5\u4e0b\u6765\uff0c\u54b1\u4eec\u6765\u8003\u8651**\u521d\u59cb\u5316**\u7684\u95ee\u9898\uff1a\n\n- \u5bf9\u4e8e$f$\u6570\u7ec4\uff1a\n\n$$f_{0,j,0}=ga_j$$\n\n$$f_{0,j,1}=gb_j$$\n\n\uff08\u5f88\u597d\u7406\u89e3\uff0c$2^0$\u662f$1$\uff0c\u5f00\u4e00\u5929\u4e4b\u540e\u5230\u8fbe\u7684\u5c31\u662f\u6211\u4eec\u521a\u624d\u9884\u5904\u7406\u51fa\u7684$ga$\u548c$gb$\uff09\n\n- \u5bf9\u4e8e$da$\u6570\u7ec4\uff1a\n\n$$da_{0,j,0}=|h_j-h_{ga_j}|$$\n\uff08\u7b2c\u4e00\u6b21\u4f1a\u8d70\u5230$ga_j$\uff0c\u8def\u7a0b\u5c31\u662f\u5b83\u4fe9\u7684\u8ddd\u79bb\uff09\n$$da_{0,j,1}=0$$\n\uff08\u5c0f$\\text{B}$\u538b\u6839\u5565\u4e5f\u6ca1\u8d70\uff09\n\n- \u5bf9\u4e8e$db$\u6570\u7ec4\uff1a\n$$db_{0,j,0}=0$$\n$$db_{0,j,1}=|h_j-h_{gb_j}|$$\n\uff08\u548c\u521a\u624d$da$\u7684\u601d\u8def\u5b8c\u5168\u4e00\u6837\uff09\n\n\u6211\u4eec\u518d\u6765\u8003\u8651**\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b**\uff1a\n\n\u5176\u5b9e\u500d\u589e\u7684\u72b6\u6001\u8f6c\u79fb\u8fd8\u662f\u6bd4\u8f83\u5957\u8def\u7684\uff0c\u65e0\u975e\u5c31\u662f**\u5bf9\u201c\u524d\u4e00\u534a\u201d\u548c\u201c\u540e\u4e00\u534a\u201d\u8fdb\u884c\u5904\u7406**\n\n\u5f53\u7136\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2a\u5751\u70b9\uff1a**\u7279\u5224 $i=1$ \u7684\u60c5\u51b5**\n\n\u4e3a\u5565\u5462\uff1f\u54b1\u4ee5$f$\u6570\u7ec4\u4e3a\u4f8b\u5206\u6790\u4e00\u4e0b\u5206\u6790\u4e00\u4e0b\n\n\u5f53$i=1$\u65f6\uff0c$2^i=2$\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u5206\u6790\u524d$1$\u5929\u548c\u540e$1$\u5929\u7684\u60c5\u51b5\uff0c\u8fd9\u4e24\u5929\u662f\u7531\u4e0d\u540c\u7684\u4eba\u5f00\uff0c\u6240\u4ee5\uff1a\n\n$$f_{i,j,k}=f_{i-1,(f_{i-1,j,k}),k \\mathrm{xor} 1}(i=1)$$\n\n\uff08$\\mathrm{xor}$\u5c31\u662f\u5f02\u6216\u5566\uff0c\u7528\u6765\u628a$k$\u53d8\u6210\u76f8\u53cd\u7684\uff09\n\n\u5f53$i>1$\u65f6\uff0c$2^{i-1}$\u662f\u4e2a\u5076\u6570\uff0c\u6240\u4ee5**\u524d\u540e\u4e24\u6bb5\u662f\u540c\u4e00\u4e2a\u4eba\u5f00\u8f66**\uff0c\u56e0\u6b64\uff1a\n\n$$f_{i,j,k}=f_{i-1,(f_{i-1,j,k}),k}(i>1)$$\n\n\u8fd9\u6837\u6211\u4eec\u5c31\u628a$f$\u6570\u7ec4\u7684\u8f6c\u79fb\u5199\u5b8c\u4e86\uff0c$da$\u548c$db$\u53ef\u4ee5\u5982\u6cd5\u70ae\u5236\uff1a**\u884c\u9a76\u7684\u603b\u8def\u7a0b=\u524d\u534a\u6bb5\u8d70\u7684\u8def\u7a0b+\u540e\u534a\u6bb5\u8d70\u7684\u8def\u7a0b**\n\n$$da_{i,j,k}=\\begin{cases}da_{i-1,j,k}+da_{i-1,({f_{i-1,j-1,k}),k \\mathrm{xor} 1}}(i=1)\\\\da_{i-1,j,k}+da_{i-1,({f_{i-1,j-1,k}),k }}(i>1)\\end{cases}$$\n\n$$db_{i,j,k}=\\begin{cases}db_{i-1,j,k}+db_{i-1,({f_{i-1,j-1,k}),k \\mathrm{xor} 1}}(i=1)\\\\db_{i-1,j,k}+db_{i-1,({f_{i-1,j-1,k}),k }}(i>1)\\end{cases}$$\n\n\u6211\u4eec\u53d1\u73b0\uff0c$i=1$\u7684\u65f6\u5019\uff0c\u9664\u4e86$k$\u8981\u53d6\u76f8\u53cd\uff0c\u5176\u5b83\u538b\u6839\u6ca1\u5565\u533a\u522b\uff0c\u6240\u4ee5\u5199\u4ee3\u7801\u7684\u65f6\u5019\uff0c\u7279\u5224$i=1$\u65f6\u53d6\u53cd\uff0c\u5176\u5b83\u7167\u5199\u5c31\u884c\u5566\uff01\n\n```cpp\n\tint f[25][100005][2];\n\tlong long da[25][100005][2],db[25][100005][2];//\u5341\u5e74OI\u4e00\u573a\u7a7a\uff0c\u4e0d\u5f00long long\u89c1\u7956\u5b97\uff01\n    for(int i=1;i<=n;i++){\n\t\tif(ga[i]){//\u9884\u5904\u7406\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u6ce8\u610f\u53ea\u6709\u8fd9\u4e2a\u4e1c\u897f\u5b58\u5728\u7684\u65f6\u5019\u624d\u80fd\u9884\u5904\u7406\n\t\t\tf[0][i][0]=ga[i];\n\t\t\tda[0][i][0]=abs(h[pos[i]].hi-h[pos[ga[i]]].hi);//\u6ce8\u610f\u6211\u4eec\u5728\u524d\u9762\u5df2\u7ecf\u5c06h\u6570\u7ec4\u6392\u597d\u4e86\u5e8f\uff0c\u6240\u4ee5\u522b\u5fd8\u4e86\u53d6pos\n\t\t\tdb[0][i][0]=0;\t\n\t\t}\n\t\tif(gb[i]){//\u53e6\u4e00\u8fb9\u7684\u521d\u59cb\u5316\u5bf9\u79f0\u8fc7\u6765\u5373\u53ef\n\t\t\tf[0][i][1]=gb[i];\n\t\t\tda[0][i][1]=0;\n\t\t\tdb[0][i][1]=abs(h[pos[i]].hi-h[pos[gb[i]]].hi);\n\t\t}\t\n\t}\n\tt=(int)(log(1.0*n)/log(2)+1);//\u500d\u589e\u65f6\u53ea\u9700\u8981\u679a\u4e3e\u5230log2n\u5c31\u53ef\u4ee5\uff0c\u6240\u4ee5\u8981\u5148\u628a\u5b83\u7b97\u51fa\u6765\uff0c\u7528\u7684\u662f\u5bf9\u6570\u7684\u6362\u5e95\u516c\u5f0f\uff1alogab=logcb/logca\n\tfor(int i=1;i<=t;i++){//\u5faa\u73af\u987a\u5e8f\u5f88\u91cd\u8981\uff01\u4e00\u5b9a\u8981\u5148\u679a\u4e3e\u5929\u6570\uff0c\u518d\u679a\u4e3e\u57ce\u5e02\uff0c\u8fd9\u6837\u624d\u80fd\u4fdd\u8bc1\u540e\u9762\u8981\u7528\u7684\u4e1c\u897f\u524d\u9762\u5df2\u7ecf\u63a8\u51fa\u6765\u4e86\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tfor(int k=0;k<=1;k++){\n\t\t\t\tint l=(i==1)?k^1:k;//\u5f53k=1\u65f6\uff0c\u522b\u5fd8\u4e86\u53d6\u76f8\u53cd\n\t\t\t\tif(f[i-1][j][k])f[i][j][k]=f[i-1][f[i-1][j][k]][l];//\u9012\u63a8f\u6570\u7ec4\n\t\t\t\tif(f[i][j][k]){//\u522b\u5fd8\u4e86\u5fc5\u987b\u4fdd\u8bc1\u5b58\u5728\n\t\t\t\t\tda[i][j][k]=da[i-1][j][k]+da[i-1][f[i-1][j][k]][l];//\u6309\u7167\u521a\u624d\u63a8\u51fa\u7684\u8f6c\u79fb\u65b9\u7a0b\u9012\u63a8\n\t\t\t\t\tdb[i][j][k]=db[i-1][j][k]+db[i-1][f[i-1][j][k]][l];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n```\n\n\n------------\n## Part III\n\n\u8be5\u63a8\u7684\u90fd\u63a8\u5b8c\u5566\uff0c\u6211\u4eec\u63a5\u4e0b\u6765\u8981\u8003\u8651\u7684\uff0c\u5c31\u662f\u5982\u4f55\u7528\u6211\u4eec\u63a8\u51fa\u7684\u4e1c\u897f\uff0c\u5f97\u5230\u6700\u7ec8\u7684\u7b54\u6848\n\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u7684\u9996\u8981\u4efb\u52a1\u5c31\u662f\u8ba1\u7b97\u51fa$calc(s,x)$\uff0c\u4e5f\u5c31\u662f\u4ece\u57ce\u5e02$s$\u51fa\u53d1\uff0c\u6700\u591a\u8d70$x$\u7684\u8ddd\u79bb\uff0c\u5c0f$\\text{A}$\u548c\u5c0f$\\text{B}$\u80fd\u8d70\u7684\u8ddd\u79bb$la$\u548c$lb$\n\n\u90a3\u548b\u529e\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u501f\u9274\u500d\u589e\u6c42LCA\u7684\u601d\u8def\uff1a**\u4ece\u5927\u5230\u5c0f\u5f80\u4e0a\u8df3**\n\n\u4e5f\u5c31\u662f\u8bf4\uff1a\u6211\u4eec**\u6309\u7167$i$\u4ece\u5927\u5230\u5c0f\u679a\u4e3e**\uff0c\u5982\u679c**\u8d70\u5b8c$2^i$\u5929\uff0c\u603b\u8def\u7a0b\u8fd8\u662f\u4e0d\u8d85\u8fc7$x$\u5462**\uff0c\u90a3\u5c31**\u8d70\u8fc7\u53bb\uff0c\u66f4\u65b0$la$\u548c$lb$\u7684\u7b54\u6848**\n\n\u6ca1\u9519\uff0c\u5c31\u8fd9\u4e48\u7b80\u5355\uff0c\u6211\u4eec\u6765\u628a\u4ee3\u7801\u5199\u51fa\u6765\uff01\n```cpp\nlong long da[25][100005][2],db[25][100005][2],la,lb;//\u518d\u6b21\u63d0\u9192\uff1a\u5341\u5e74OI\u4e00\u573a\u7a7a\uff0c\u4e0d\u5f00long long\u89c1\u7956\u5b97\uff01\nvoid calc(int s,long long x){\n\tla=lb=0;//\u4e0d\u8981\u5fd8\u4e86\u521d\u59cb\u5316\u54e6\uff01\n\tint k=0;//k\u4f9d\u7136\u8868\u793a\u8c01\u5148\u5f00\u8f66\n\tfor(int i=t;i>=0;i--){//\u4ece\u5927\u5f80\u5c0f\u679a\u4e3e\uff0c\u770b\u770b\u80fd\u4e0d\u80fd\u8df3\n\t\tif(f[i][s][k]&&da[i][s][k]+db[i][s][k]<=x){//\u5982\u679c\u5f53\u524d\u57ce\u5e02\u5b58\u5728\uff0c\u5e76\u4e14\u8d70\u5b8c\u8fd9\u4e9b\u5929\u8fd8\u662f\u8d85\u4e0d\u8fc7x\n\t\t\tx-=da[i][s][k]+db[i][s][k];//\u5269\u4f59\u8def\u7a0b\u51cf\u53bb\u8d70\u4e86\u7684\u8def\u7a0b\n\t\t\tla+=da[i][s][k],lb+=db[i][s][k];//\u628a\u65b0\u8d70\u7684\u8def\u7a0b\u52a0\u5230\u7edf\u8ba1\u7684\u7b54\u6848\u91cc\u53bb\n\t\t\tif(!i)k^=1;//\u522b\u5fd8\u4e86i=0\u7684\u65f6\u5019\u4f9d\u7136\u8981\u53d6\u76f8\u53cd\n\t\t\ts=f[i][s][k];//\u8df3\u7684\u7ec8\u70b9\u7684\u57ce\u5e02\u91cc\u53bb\n\t\t}\n\t}\n}\n```\n\u56de\u5230\u9898\u76ee\uff0c\u7b2c\u4e00\u95ee\u5c31\u662f\u8981\u6c42\u51fa\u5bf9\u4e8e\u7ed9\u5b9a\u7684$x$\uff0c\u4ece\u54ea\u4e2a$s$\u51fa\u53d1\uff0c$la$\u548c$lb$\u7684\u6bd4\u503c\u6700\u5c0f\uff0c\u800c\u7b2c\u4e8c\u95ee\u5462\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u8ba9\u4f60\u8ba1\u7b97$calc(s,x)$\u65f6$la$\u548c$lb$\u7684\u503c\n\n```cpp\n\tlong long x;\n\tint s;\n\tscanf(\"%lld\",&x);//\u7b2c\u4e00\u95ee\uff1a\u627e\u5230\u4e00\u4e2as\u4f7fla:lb\u6700\u5c0f\n\tint p=0;//p\u4ee3\u8868\u6700\u540e\u627e\u5230\u7684\u57ce\u5e02s\n\tlong long ansa=1,ansb=0;//ansa\u548cansb\u662f\u627e\u5230\u7684\u6bd4\u503c\u6700\u5c0f\u7684la\u548clb\n\tfor(int i=1;i<=n;i++){//\u679a\u4e3e\u6bcf\u4e2a\u57ce\u5e02\n\t\tcalc(i,x);//\u8ba1\u7b97\u51fa\u5c0fA\u548c\u5c0fB\u7684\u8def\u7a0b\n\t\tif(!lb)la=1;//\u9898\u76ee\u8981\u6c42\uff1a\u5982\u679clb\u4e3a0\uff0c\u90a3\u5c31\u53d8\u62101\n\t\tif(la*ansb<lb*ansa||(la*ansb==lb*ansa&&h[pos[i]].hi>h[pos[p]].hi))//\u7531\u4e8e\u6bd4\u4f8b\u7684\u5206\u6570\u7b97\u9664\u6cd5\u4f1a\u4ea7\u751f\u7384\u5b66\u7684\u7cbe\u5ea6\u95ee\u9898\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u5b83\u6362\u6210\u4e58\u79ef\u7684\u5f62\u5f0f\uff0c\u9664\u6b64\u4ee5\u5916\uff0c\u6bd4\u503c\u76f8\u7b49\u65f6\u9009\u62e9\u9ad8\u5ea6\u8f83\u9ad8\u7684\u4e00\u4e2a\n\t\tansa=la,ansb=lb,p=i;//\u66f4\u65b0\u7b54\u6848\n\t} \n\tprintf(\"%d\\n\",p);//\u627e\u5230\u7b54\u6848\u8f93\u51fa\n\tint m;\n\tscanf(\"%d\",&m);\n\twhile(m--){\n\t\tscanf(\"%d%lld\",&s,&x);\n\t\tcalc(s,x);//\u76f4\u63a5\u8ba1\u7b97calc(s,x)\u5c31\u884c\n\t\tprintf(\"%lld %lld\\n\",la,lb);\n\t}\n\treturn 0;\n```\n\n\n------------\n## Part IV\n\n\u4e0a\u5b8c\u6574\u4ee3\u7801\uff1a\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nstruct qwq{//\u5b58\u50a8\u57ce\u5e02\u7684\u7ed3\u6784\u4f53\u4ee5\u53cacmp\n\tint hi,id,pre,nxt;\n}h[100005];\nbool cmp(qwq x,qwq y){\n\treturn x.hi<y.hi;\n}\nint choose(int a,int b,int i){//\u9009\u62e9\u66f4\u4f18\u89e3\n\tif(!a)return h[b].id;\n\tif(!b)return h[a].id;\n\tif(h[i].hi-h[a].hi<=h[b].hi-h[i].hi)\n\treturn h[a].id;\n\telse return h[b].id;\n}\nvoid del(int pos){//\u5220\u9664\u94fe\u8868\u5143\u7d20\n\tif(h[pos].nxt)h[h[pos].nxt].pre=h[pos].pre;\n\tif(h[pos].pre)h[h[pos].pre].nxt=h[pos].nxt;\n}\nint n,t;\nint pos[100005],ga[100005],gb[100005];//\u4e00\u5806\u53d8\u91cf\nint f[25][100005][2];\nlong long da[25][100005][2],db[25][100005][2],la,lb;\nvoid calc(int s,long long x){//calc\u51fd\u6570\n\tla=lb=0;\n\tint k=0;\n\tfor(int i=t;i>=0;i--){\n\t\tif(f[i][s][k]&&da[i][s][k]+db[i][s][k]<=x){\n\t\t\tx-=da[i][s][k]+db[i][s][k];\n\t\t\tla+=da[i][s][k],lb+=db[i][s][k];\n\t\t\tif(!i)k^=1;\n\t\t\ts=f[i][s][k];\n\t\t}\n\t}\n}\nint main(){\n//Part I\u2014\u2014\u9884\u5904\u7406ga\u548cgb                                                   \n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&h[i].hi);\n\t\th[i].id=i;\n\t}\n\tsort(h+1,h+1+n,cmp);\n\tfor(int i=1;i<=n;i++){\n\t\tpos[h[i].id]=i;\n\t\th[i].pre=i-1;\n\t\th[i].nxt=i+1;\n\t}\n\th[1].pre=h[n].nxt=0;\n\tfor(int i=1;i<n;i++){\n\t\tint p=pos[i],p1=h[p].pre,p2=h[p].nxt;                                  \n\t\tif(p1&&(h[p].hi-h[p1].hi<=h[p2].hi-h[p].hi||!p2))      \n\t\tgb[i]=h[p1].id,ga[i]=choose(h[p1].pre,p2,p);\n\t\telse gb[i]=h[p2].id,ga[i]=choose(p1,h[p2].nxt,p);\t\n\t\tdel(p);\n\t}\n//Part II\u2014\u2014\u7528\u500d\u589e\u63a8\u51faf,da,db                                                         \n\tfor(int i=1;i<=n;i++){\n\t\tif(ga[i]){\n\t\t\tf[0][i][0]=ga[i];\n\t\t\tda[0][i][0]=abs(h[pos[i]].hi-h[pos[ga[i]]].hi);\n\t\t\tdb[0][i][0]=0;\t\n\t\t}\n\t\tif(gb[i]){\n\t\t\tf[0][i][1]=gb[i];\n\t\t\tda[0][i][1]=0;\n\t\t\tdb[0][i][1]=abs(h[pos[i]].hi-h[pos[gb[i]]].hi);\n\t\t}\t\n\t}\n\tt=(int)(log(1.0*n)/log(2)+1);\n\tfor(int i=1;i<=t;i++){\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tfor(int k=0;k<=1;k++){\n\t\t\t\tint l=(i==1)?k^1:k;\n\t\t\t\tif(f[i-1][j][k])f[i][j][k]=f[i-1][f[i-1][j][k]][l];\n\t\t\t\tif(f[i][j][k]){\n\t\t\t\t\tda[i][j][k]=da[i-1][j][k]+da[i-1][f[i-1][j][k]][l];\n\t\t\t\t\tdb[i][j][k]=db[i-1][j][k]+db[i-1][f[i-1][j][k]][l];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n// Part III\u2014\u2014\u8ba1\u7b97calc\u5f97\u5230\u7b54\u6848                                  \n\tlong long x;\n\tint s;\n\tscanf(\"%lld\",&x);\n\tint p=0;\n\tlong long ansa=1,ansb=0;\n\tfor(int i=1;i<=n;i++){\n\t\tcalc(i,x);\n\t\tif(!lb)la=1;\n\t\tif(la*ansb<lb*ansa||(la*ansb==lb*ansa&&h[pos[i]].hi>h[pos[p]].hi))\n\t\tansa=la,ansb=lb,p=i;\n\t} \n\tprintf(\"%d\\n\",p);\n\tint m;\n\tscanf(\"%d\",&m);\n\twhile(m--){\n\t\tscanf(\"%d%lld\",&s,&x);\n\t\tcalc(s,x);\n\t\tprintf(\"%lld %lld\\n\",la,lb);\n\t}\n\treturn 0;\n}\n```\n$\\color{#4275f5}{\\text{yrz \u662f\u5c0f\u73c2\u611b\uff01\uff01\uff01}}$",
        "postTime": 1586873811,
        "uid": 239405,
        "name": "yangrunze",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1081 \u3010\u5f00\u8f66\u65c5\u884c\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\uff1a\u4f60\u4e0d\u4ec5\u8981\u5b66\u4f1a\u4e24\u4eba\u4ea4\u6362\u5f00\u8f66\uff0c\u8fd8\u8981\u505a\u5230\u9ad8\u6548\u9a7e\u9a76\u3002\n\n \n\n\u00b7\u5206\u6790\uff1a\n\n\n\u5728\u62e8\u5f00\u82b1\u54e8\u9898\u76ee\u7684\u8ff7\u96fe\u4e4b\u540e\uff0c\u53d1\u73b0\u4e24\u4e2a\u91cd\u8981\u7a81\u7834\u53e3\uff1a\n\n\n\u2460\u4ece\u6bcf\u4e2a\u70b9\u5f00\u59cb\uff0c\u4ed6\u4eec\u7684\u8def\u5f84\u662f\u4e00\u5b9a\u7684\uff0c\u4e0d\u5b58\u5728\u51b3\u7b56\u9009\u53d6\u3002\n\n\n\u2461\u8981\u662fn,m\u6ca1\u6709\u90a3\u4e48\u5927\u7684\u8bdd\uff0c\u5c31\u76f4\u63a5\u9884\u5904\u7406\u6bcf\u4e2a\u70b9\u5bf9\u4e8e\u6bcf\u4e2a\u4eba\u5f00\u8f66\u81f3\u4e0b\u4e00\u4e2a\u70b9\u7684\u4f4d\u7f6e\u548c\u8def\u7a0b(n2)\uff0c\u7136\u540e\u4e24\u4e2a\u95ee\u9898\u90fd\u53ef\u4ee5\u4ece\u8d77\u70b9\uff08\u7b2c\u4e00\u95ee\u5c31\u662f\u679a\u4e3e\u8d77\u70b9\uff09\u5f00\u59cb\u9884\u5904\u7406\u7684\u6570\u636e\u6765\u201c\u8f6e\u6d41\u5f00\u8f66\u201d\u3002\uff08\u8fd9\u4e00\u4e2a\u7a81\u7834\u53e3\u6709\u70b9\u8fc7\u4e8e\u9876\u5c16\u4e86\uff0c\u56e0\u4e3a\u8fd9\u662f\u8fc770%\u6570\u636e\u7684\u9898\u89e3\uff09\n\n\n\u4e0b\u56fe\u662f\u8fd9\u79cd\u505a\u6cd5\u7684\u7b80\u56fe\u3002\n\n\n\u7528des[i][0],des[i][1]\u5206\u522b\u8868\u793a\u5728\u57ce\u5e02i\u5c0fB\u5f00\u8f66\u548c\u5c0fA\u5f00\u8f66\u524d\u5f80\u7684\u4e0b\u4e00\u4e2a\u76ee\u7684\u5730\u3002\u7528Min[i][0],Min[i][0]\u5206\u522b\u4e0e\u4e0a\u9762\u7684\u6570\u7ec4\u5bf9\u5e94\uff0c\u8868\u793a\u5bf9\u5e94\u8def\u5f84\u7684\u957f\u5ea6\uff08\u6ce8\u610f\u662f\u53cd\u5411\u679a\u4e3e\uff09\n\n![](http://images2015.cnblogs.com/blog/1101338/201705/1101338-20170514222552941-619465312.png)\n\n\u00b7\u65e0\u8bba\u662f\u7b2c\u4e00\u95ee\u8fd8\u662f\u7b2c\u4e8c\u95ee\uff0c\u90fd\u53ef\u4ee5\u4ece\u8d77\u70b9s\u5f00\u59cb\uff0c\u901a\u8fc7des,Min\u6570\u7ec4\u6765\u5411\u540e\u5f00\u8f66\u5e76\u8bb0\u5f55\u4e24\u4eba\u5404\u81ea\u8d70\u7684\u8def\u7a0b\u3002\n\n\n\u00b7\u5f88\u7f8e\u5999\u4f46\u53c8\u5f88\u9057\u61be\uff0c\u4ec5\u4ec5\u8fd9\u6837\u505a\u65f6\u95f4\u590d\u6742\u5ea6\uff1a(n2+nm)\n\n\n\u00b7\u8fd9\u9053\u9898\u771f\u6b63\u7684\u8003\u70b9\u5c31\u51fa\u6765\u4e86\uff1a\u8003\u5bdf\u6211\u4eec\u7684\u4f18\u5316\u6280\u80fd\u3002\n\n\n\u00b7\u5f88\u8f7b\u6613\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u9053\u9898\u7684\u6570\u636e\u8303\u56f4\u53c8\u7ed9\u4e86\u6211\u4eec\u5f88\u5927\u7684\u63d0\u793a\uff1a\n\n\n\nn<=100000\u3002\u8fd9\u542f\u793a\u6211\u4eec\uff1anlogn\n\n\u00b7\u4f59\u4e0b\u7684\u4e8b\u60c5\u5c31\u662f\u628a\u65f6\u95f4\u590d\u6742\u5ea6\u4e2d\u7684\u90e8\u5206n\u66ff\u6362\u6210logn,\u4f7f\u5f97\u65f6\u95f4\u590d\u6742\u5ea6\u4fdd\u6301\u5728\uff1aO(mlogn+nlogn)\u3010\u8fd9\u6709\u70b9\u8fc7\u4e8e\u9876\u5c16\u4e86\u3011\n\n\n\u00b7\u5728\u672c\u9898\u4e2d\u5927\u7c73\u997c\u7684\u5bf9\u7b56\u662f\uff1a\u9884\u5904\u7406des,Min(\u8fd9\u539f\u6765\u662f\u4e00\u4e2an2)\u65f6\u4f7f\u7528STL\u4e2d\u7684set\u6765\u7ef4\u62a4(\u964d\u4e3anlogn),\u5728\u8def\u5f84\u4e0a\u4f7f\u7528\u500d\u589e\u6cd5\uff0c\n\n\n\u00b7\u6700\u540e\u4e00\u4e2a\u503c\u5f97\u6ce8\u610f\u7684\u4e00\u70b9\uff0c\u500d\u589e\u7684\u6bcf\u4e00\u6bb5\u4e3a\u4e86\u65b9\u4fbf\u64cd\u4f5c\uff0c\u8fd9\u91ccAB\u5404\u8d70\u4e00\u6b21\u7b97\u6210\u4e00\u6bb5\uff0c\u4e0d\u8fc7\u500d\u589e\u7684\u8ddd\u79bb\u8fd8\u662f\u5bf9AB\u8fdb\u9879\u5355\u72ec\u7ef4\u62a4\u3002\u6574\u4e2a\u7a0b\u5e8f\u8fd8\u6709\u8bb8\u591a\u7ec6\u8282\u9700\u8981\u6ce8\u610f\u3002 wow!\n\n\u63a5\u4e0b\u6765\u770b\u4ee3\u7801\n\n    \n            \n        \n    \n```cpp\n#include<stdio.h> \n#include<algorithm>\n#include<set>\n#define go(i,a,b) for(int i=a;i<=b;i++)\n#define ro(i,a,b) for(int i=a;i>=b;i--)\n#define inf 2147483645\n#define eps 0.000003\nusing namespace std;const int N=100005;\nint n,m,s,h[N],des[N][2],Min[N][2],To[N][22],dis[N][22][2],tot[2],x;\nstruct info{int h,id;bool operator<(const info a)const{return h<a.h;};};\nset<info>box;set<info>::iterator I;int A(int t){return t<0?-t:t;}\nvoid consider(int i,info p)\n{\n    int j=p.id;\n    if((A(h[i]-h[j])<Min[i][0])||(Min[i][0]==A(h[i]-h[j])&&h[j]<h[des[i][0]]))\n    {\n        if((Min[i][0]<Min[i][1])||(Min[i][1]==Min[i][0]&&h[des[i][0]]<h[des[i][1]]))\n        Min[i][1]=Min[i][0],des[i][1]=des[i][0];\n        Min[i][0]=A(h[i]-h[j]),des[i][0]=j;    \n    }\n    else if((A(h[i]-h[j])<Min[i][1])||(Min[i][1]==A(h[i]-h[j])&&h[j]<h[des[i][0]]))\n    Min[i][1]=A(h[i]-h[j]),des[i][1]=j;    \n}\nvoid doubling(int i,int val)\n{\n    ro(k,20,0)if(dis[i][k][0]+dis[i][k][1]<=val&&To[i][k])\n        val-=(dis[i][k][0]+dis[i][k][1]),\n        tot[1]+=dis[i][k][1],tot[0]+=dis[i][k][0],i=To[i][k];    \n    if(des[i][1]&&Min[i][1]<=val)tot[1]+=Min[i][1];\n}\nint main(){scanf(\"%d\",&n);go(i,1,n)scanf(\"%d\",&h[i]),Min[i][1]=Min[i][0]=inf;\n    ro(i,n,1)\n    {    \n        box.insert((info){h[i],i});\n        I=box.find((info){h[i],i});++I;\n        if(I!=box.end())consider(i,*I),++I,I!=box.end()?consider(i,*I),1:1,--I;--I;\n        if(I!=box.begin())--I,consider(i,*I),I!=box.begin()?--I,consider(i,*I),1:1;\n    }\n    go(i,1,n)To[i][0]=des[des[i][1]][0],\n    dis[i][0][1]=Min[i][1],dis[i][0][0]=Min[des[i][1]][0];\n    go(k,1,20)go(i,1,n)To[i][k]=To[To[i][k-1]][k-1],\n    dis[i][k][1]=dis[i][k-1][1]+dis[To[i][k-1]][k-1][1],\n    dis[i][k][0]=dis[i][k-1][0]+dis[To[i][k-1]][k-1][0];\n    scanf(\"%d\",&x);double rate=inf;int pos=0;h[0]=-inf;go(i,1,n)\n    {\n        tot[0]=tot[1]=0;doubling(i,x);double tmp=tot[0]?1.0*tot[1]/tot[0]:inf;\n        if(tmp-rate<eps&&tmp-rate>-eps&&h[i]>h[pos])pos=i;\n        if(rate-tmp>eps)pos=i,rate=tmp;\n    }\n    printf(\"%d\\n\",pos);scanf(\"%d\",&m);go(i,1,m)\n    {\n        scanf(\"%d%d\",&s,&x);\n        tot[0]=tot[1]=0;doubling(s,x);\n        printf(\"%d %d\\n\",tot[1],tot[0]);\n    }\n    return 0;\n}//Paul_Guderian\n```",
        "postTime": 1502700708,
        "uid": 50938,
        "name": "\u5feb\u4e50\u8239\u957f",
        "ccfLevel": 4,
        "title": "\u9898\u89e3 P1081 \u3010\u5f00\u8f66\u65c5\u884c\u3011"
    },
    {
        "content": "\u9898\u89e3\u5728\u535a\u5ba2\u98df\u7528\u6548\u679c\u66f4\u4f73\u54e6~ [YoungNeal](http://www.cnblogs.com/YoungNeal/p/8679193.html)\n\n~~\u795etm\u5168\u4e16\u754c\u5c31\u6211\u4e00\u4e2a\u88ab\u5361\u7a7a\u95f4\u4e86\uff1f~~  \n\n\u500d\u589e\u4f18\u5316dp\u3002\n\n\u8fd9\u9898\u96be\u5c31\u96be\u5728\u9884\u5904\u7406\u3002\n\n\u9996\u5148\u9884\u5904\u7406\u51fa A \u548c B \u6bcf\u4e2a\u4eba\u4ece\u4e00\u4e2a\u57ce\u5e02\u51fa\u53d1\u7684\u76ee\u6807\u662f\u54ea\u4e2a\u57ce\u5e02\u3002\u53ef\u4ee5\u7528\u5e73\u8861\u6811\u627e\u4e00\u4e2a\u70b9\u7684\u524d\u9a71\u548c\u540e\u7ee7\uff0c\u6216\u8005\u53cc\u5411\u94fe\u8868\u3002\u6211\u5f53\u7136\u9009\u62e9\u4e86\u6700\u5077\u61d2\u7684 set\u3002(ps:\u8fd9\u91cc\u5982\u679c\u7528 set \u7684\u8bdd\u6709\u53ef\u80fd\u8fed\u4ee3\u5668\u4e00\u76f4\u52a0\u6216\u8005\u51cf\u5bfc\u81f4\u8d8a\u754c\uff0c\u53c8\u61d2\u5f97\u5224\u65ad\uff0c\u7d22\u6027\u7528\u4e86 multiset)\n\n\u7136\u540e\u9884\u5904\u7406\u51fa f[i][j][k(0/1)] \u8868\u793a\u7b2c k \u4e2a\u4eba\u4ece\u7b2c i \u4e2a\u57ce\u5e02\u51fa\u53d1\u8d70 2^j \u5929\u5230\u8fbe\u7684\u57ce\u5e02\uff0c\u540c\u65f6\u4e5f\u66f4\u65b0 dp[x(0/1)][i][j][k(0/1)] \u8868\u793a\u7b2c k \u4e2a\u4eba\u4ece\u7b2c i \u4e2a\u57ce\u5e02\u51fa\u53d1\u8d70 2^j \u5929\u540e\u7b2c x \u4e2a\u4eba\u8d70\u4e86\u591a\u5c11\u8def\u7a0b\u3002\n\n\u6700\u540e\u9884\u5904\u7406\u5b8c\u66b4\u529b\u8dd1\u51e0\u904d\u5c31\u884c\u4e86\u3002\n```\n// By YoungNeal\n#include<set>\n#include<cmath>\n#include<cctype>\n#include<cstdio>\n#include<algorithm>\n#define N 100005\n#define INF 1234567890000\nusing namespace std;\n\nint n;\nint starx;\nint height[N];\nint f[N][20][5];\nint dp1[N][20][3],dp2[N][20][3];\n\nstruct Node{\n    int idx,data;\n    friend bool operator<(Node a,Node b){\n        return a.data<b.data;\n    }\n};\n\nmultiset<Node> s;\n\nvoid calc(int S,int &a,int &b,int x){\n    int now=S;\n    for(int k=18;~k;k--){\n        if(f[now][k][0]&&a+b+dp1[now][k][0]+dp2[now][k][0]<=x){\n            a+=dp1[now][k][0];\n            b+=dp2[now][k][0];\n            now=f[now][k][0];\n        }\n    }\n}\n\nsigned main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++) scanf(\"%d\",&height[i]);\n    Node a;\n    height[0]=2e9;height[n+1]=-2e9;\n    a.idx=0;a.data=2e9;s.insert(a);s.insert(a);\n    a.idx=n+1;a.data=-2e9;s.insert(a);s.insert(a);\n    for(int i=n;i;i--){\n        int goa,gob;\n        Node aa;\n        aa.idx=i,aa.data=height[i];\n        s.insert(aa);\n        multiset<Node>::iterator it=s.lower_bound(aa);\n        int pre,nxt;\n        int preh,nxth;\n        it++; nxt=(*it).idx; nxth=(*it).data; //printf(\"nxt=%d\\n\",nxt);\n        it--;it--; pre=(*it).idx; preh=(*it).data; //printf(\"pre=%d\\n\",pre);\n        it++;\n        //printf(\"idx=%d\\n\",(*it).idx);\n        //for(set<Node>::iterator iit=s.begin();iit!=s.end();iit++) printf(\"data=%d,idx=%d\\n\",(*iit).data,(*iit).idx);\n        if(abs(nxth-height[i])>=abs(preh-height[i])){\n            gob=pre;\n            it--;it--;\n            if(abs(nxth-height[i])>=abs((*it).data-height[i])) goa=(*it).idx;\n            else goa=nxt;\n        }\n        else{\n            gob=nxt;\n            it++;it++;\n            if(abs(preh-height[i])>abs((*it).data-height[i])) goa=(*it).idx;\n            else goa=pre;\n            /*printf(\"pre=%d,it=%d,nxt=%d\\n\",pre,(*it).idx,nxt);\n            printf(\"preh=%d,nxth=%d,data=%d\\n\",preh,nxth,(*it).data);\n            printf(\"i=%d,gob=%d,goa=%d\\n\",i,gob[i],goa[i]);*/\n        }\n        f[i][0][0]=goa;\n        f[i][0][1]=gob;\n        dp1[i][0][0]=abs(height[i]-height[goa]);\n        dp1[i][1][0]=dp1[i][0][0];\n        dp2[i][0][1]=abs(height[i]-height[gob]);\n        dp2[i][1][1]=dp2[i][0][1];\n        //while(1);\n    }//0->A 1->B  dp[i][j][k][p]->from i drive 2^j first is k distance p go\n    for(int i=1;i<=n;i++){\n        f[i][1][0]=f[f[i][0][0]][0][1];\n        dp1[i][1][0]=dp1[i][0][0];\n        dp2[i][1][0]=abs(height[f[i][1][0]]-height[f[i][0][0]]);\n\n        f[i][1][1]=f[f[i][0][1]][0][0];\n        dp2[i][1][1]=dp2[i][0][1];\n        dp1[i][1][1]=abs(height[f[i][1][1]]-height[f[i][0][1]]);\n        //printf(\"from %d drive 2^%d first is %d distance %d go to %d\\n\",i,0,0,0,f[i][0][0]);\n        //printf(\"from %d drive 2^%d first is %d distance %d go to %d\\n\",i,0,1,1,f[i][0][1]);\n        //printf(\"from %d drive 2^%d first is %d distance %d go to %d\\n\",i,1,0,0,f[i][1][0]);\n        //printf(\"from %d drive 2^%d first is %d distance %d go to %d\\n\",i,1,1,1,f[i][1][1]);\n    }\n    for(int k=2;k<=18;k++){\n        for(int i=1;i<=n;i++){\n            f[i][k][1]=f[f[i][k-1][1]][k-1][1];\n            dp2[i][k][1]=dp2[f[i][k-1][1]][k-1][1]+dp2[i][k-1][1];\n            dp1[i][k][1]=dp1[i][k-1][1]+dp1[f[i][k-1][1]][k-1][1];\n\n            f[i][k][0]=f[f[i][k-1][0]][k-1][0];\n            dp1[i][k][0]=dp1[i][k-1][0]+dp1[f[i][k-1][0]][k-1][0];\n            dp2[i][k][0]=dp2[i][k-1][0]+dp2[f[i][k-1][0]][k-1][0];\n            //printf(\"from %d drive 2^%d first is %d distance %d go to %d\\n\",i,k,0,0,f[i][k][0]);\n            //printf(\"from %d drive 2^%d first is %d distance %d go to %d\\n\",i,k,1,1,f[i][k][1]);\n            //printf(\"from %d drive 2^%d first is %d distance %d go %d\\n\",i,k,0,0,dp[i][k][0][0]);\n            //printf(\"from %d drive 2^%d first is %d distance %d go %d\\n\",i,k,1,1,dp[i][k][1][1]);\n        }\n    }\n    scanf(\"%d\",&starx);\n    double ans=INF*10.0;\n    int idx;\n    for(int i=1;i<=n;i++){\n        int la=0,lb=0;\n        calc(i,la,lb,starx);\n        //printf(\"la=%d,lb=%d\\n\",la,lb);\n        if(!lb){\n            if(ans>INF) ans=INF,idx=i;\n            else if(ans==INF&&height[idx]<height[i]) idx=i;\n        }\n        else{\n            double now=(double)la/(double)lb;\n            if(now<ans) ans=now,idx=i;\n            else if(now==ans&&height[idx]<height[i]) idx=i;\n        }\n    }\n    printf(\"%d\\n\",idx);\n    int T;\n    scanf(\"%d\",&T);\n    while(T--){\n        int a,b;\n        int la=0,lb=0;\n        scanf(\"%d%d\",&a,&b);\n        calc(a,la,lb,b);\n        printf(\"%d %d\\n\",la,lb);\n    }\n    return 0;\n}\n\n```",
        "postTime": 1522422582,
        "uid": 56778,
        "name": "YoungNeal",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1081 \u3010\u5f00\u8f66\u65c5\u884c\u3011"
    },
    {
        "content": "### \u9884\u5907\u77e5\u8bc6\u2014\u2014\u5173\u4e8eset\u7684\u7528\u6cd5\n\u5b9a\u4e49\uff1aset<int>s;\n  \n\u672c\u9898\u9700\u8981\u7528\u5230\u7684\u51e0\u4e2a\u51fd\u6570:\n  \n```cpp\ns.insert(x);//\u63d2\u5165x\ns.lower_bound(x);//\u67e5\u627e**\u5927\u4e8e\u7b49\u4e8e**x\u7684\u6700\u5c0f\u5143\u7d20\uff0c\u8fd4\u56de\u8fed\u4ee3\u5668\ns.upper_bound(x);//\u67e5\u627e**\u5927\u4e8e**x\u7684\u6700\u5c0f\u5143\u7d20\uff0c\u8fd4\u56de\u8fed\u4ee3\u5668\n```\n  \n\u5728\u672c\u9898\u8fd0\u7528set\u80fd\u591f\u4f7f\u521d\u59cb\u5316\u7684\u590d\u6742\u5ea6\u964d\u5230O(nlogn)\n\n```cpp\ns.insert(h[i]);\nt[1].h=*--s.lower_bound(h[i]);\nt[3].h=*--s.lower_bound(t[1].h); \nt[2].h=*s.upper_bound(h[i]); \nt[4].h=*s.upper_bound(t[2].h);\nfor(int j=1;j<=4;j++)t[j]._abs=abs(t[j].h-h[i]);\nsort(t+1,t+5,cmp);\na[i]=t[2]._abs;f\na[i]=mp[t[2].h];\nb[i]=t[1]._abs;fb[i]=mp[t[1].h];\nif(fa[i])sa[i][0]=a[i],f[i][0]=fa[i];\nif(fb[fa[i]])sa[i][1]=a[i],sb[i][1]=b[fa[i]],f[i][1]=fb[fa[i]];\n```\n                              \n------------\n                              \n\u56de\u5f52\u6b63\u9898\uff0c\u7531\u4e8e\u672c\u9898\u6728\u6709\u4fee\u6539\u64cd\u4f5c\uff0c\u5e76\u4e14\u5230\u6bcf\u4e2a\u70b9\u7684\u4e0b\u4e00\u4e2a\u70b9\u7684\u4f4d\u7f6e\u786e\u5b9a\uff0c\u5f88\u5bb9\u6613\u60f3\u5230\u500d\u589e\u6765\u4f18\u5316\uff0c\u540c\u65f6\u7531\u4e8e\u672c\u9898\u7684\u9700\u8981\uff0c\u9664f[i][j]\u5916\uff0c\u5728\u5b9a\u4e49\u4e24\u4e2a\u6570\u7ec4sa[i][j]\u548csb[i][j]],\u5206\u522b\u8868\u793a\u7b2ci\u4e2a\u70b9\u8d702^j\u5929A\u6240\u8d70\u7684\u8def\u7a0b\u548cB\u6240\u8d70\u7684\u8def\u7a0b\u3002\n                              \n\u5e9f\u8bdd\u5c11\u8bf4\uff0c\u76f4\u63a5\u4e0a\u4ee3\u7801\uff1a\n                              \n```cpp\n#include<bits/stdc++.h>\n#define INF 50000000000LL\n#define A 100005\nusing namespace std;\nstruct note{\n\tlong long h,_abs;\n}t[5];\nset<long long>s;\nmap<long long,long long>mp;\nlong long n,h[A],a[A],b[A],fa[A],fb[A],sa[A][25],sb[A][25],f[A][25];\nbool cmp(note aa,note bb){\n\treturn (aa._abs==bb._abs?aa.h<bb.h:aa._abs<bb._abs);\n}\nvoid st(){\n\tfor(long long i=n;i>=1;i--){\n\t\ts.insert(h[i]);\n\t\tt[1].h=*--s.lower_bound(h[i]);\n        t[3].h=*--s.lower_bound(t[1].h); \n        t[2].h=*s.upper_bound(h[i]); \n\t\tt[4].h=*s.upper_bound(t[2].h);\n\t\tfor(long long j=1;j<=4;j++)t[j]._abs=abs(t[j].h-h[i]);\n\t\tsort(t+1,t+5,cmp);\n\t\ta[i]=t[2]._abs;fa[i]=mp[t[2].h];\n\t\tb[i]=t[1]._abs;fb[i]=mp[t[1].h];\n\t\tif(fa[i])sa[i][0]=a[i],f[i][0]=fa[i];\n\t\tif(fb[fa[i]])sa[i][1]=a[i],sb[i][1]=b[fa[i]],f[i][1]=fb[fa[i]];\n\t\tfor(long long j=2;j<=16;j++)\n\t\t\tif(f[f[i][j-1]][j-1]){\n\t\t\t\tsa[i][j]=sa[i][j-1]+sa[f[i][j-1]][j-1];\n\t\t\t\tsb[i][j]=sb[i][j-1]+sb[f[i][j-1]][j-1];\n\t\t\t\tf[i][j]=f[f[i][j-1]][j-1];\n\t\t\t}\n\t\t\telse break;\n\t}\n}\ndouble ask1(long long x,long long p){\n\tlong long s1=0,s2=0;\n\tfor(long long i=16;i>=0;i--){\n\t\tif(f[x][i]&&s1+s2+sa[x][i]+sb[x][i]<=p){\n\t\t\ts1+=sa[x][i];\n\t\t\ts2+=sb[x][i];\n\t\t\tx=f[x][i];\n\t\t}\n\t}\n\treturn (s2==0?INF:(double)s1/(double)s2);\n}\nvoid ask2(long long x,long long p){\n\tlong long s1=0,s2=0;\n\tfor(long long i=16;i>=0;i--){\n\t\tif(f[x][i]&&s1+s2+sa[x][i]+sb[x][i]<=p){\n\t\t\ts1+=sa[x][i];\n\t\t\ts2+=sb[x][i];\n\t\t\tx=f[x][i];\n\t\t}\n\t}\n\tif(fa[x]&&s1+s2+sa[x][0]<=p)s1+=sa[x][0];\n\tprintf(\"%lld %lld\\n\",s1,s2);\n}\nvoid solve(){ \n\tdouble minn=INF;\n\tlong long bj,x0;\n\tscanf(\"%lld\",&x0);\n\tfor(long long i=1;i<=n;i++){\n\t\tdouble op=ask1(i,x0);\n\t\tif(op<minn)minn=op,bj=i;\n\t}\n\tprintf(\"%lld\\n\",bj);\n\tlong long m,s0;\n\tscanf(\"%lld\",&m);\n\twhile(m--){\n\t\tscanf(\"%lld%lld\",&s0,&x0);\n\t\task2(s0,x0);\n\t}\n}\nint main(){\n\ts.insert(INF);s.insert(INF-1);s.insert(-INF);s.insert(-INF+1);\n\tscanf(\"%lld\",&n);\n\tfor(long long i=1;i<=n;i++)scanf(\"%lld\",&h[i]),mp[h[i]]=i;\n\tst();\n\tsolve();\n\treturn 0;\n}\n```\n                                     \n\u7ed3\u675f\u8bed\uff1a\u6b64\u9898\u4e0d\u8981\u60f3\u5f97\u592a\u96be\uff0c\u5c31\u662f\u4e00\u9053LCA\u7684\u52a0\u5f3a\u7248\uff0c\u7136\u540e\u5728\u521d\u59cb\u5316\u65f6\u52a0\u4e0aset\u6216\u94fe\u8868\uff08\u672c\u849f\u84bb\u4e0d\u61c2\u5927\u4f6c\u5199\u7684\u94fe\u8868\uff0c\u6240\u4ee5\u53ea\u6709\u5199set\u4e86\uff09",
        "postTime": 1560124679,
        "uid": 88137,
        "name": "greenheadstrange",
        "ccfLevel": 7,
        "title": "DP+set+\u500d\u589eP1081\u3010\u5f00\u8f66\u65c5\u884c\u3011"
    },
    {
        "content": "### \u8fd9\u9898\u7b2c\u4e00\u773c\u7ed9\u4eba\u7684\u611f\u89c9\u5c31\u662f\u8981\u6a21\u62df\uff0c\u6a21\u62df\u4e24\u4eba\u4ea4\u66ff\u5f00\u8f66\uff0c\u5206\u522b\u9884\u5904\u7406\u51fa\u79bb\u7279\u5b9a\u57ce\u5e02\u7b2c\u4e00\u8fd1\u548c\u7b2c\u4e8c\u8fd1\u7684\uff08\u7528set\uff09\u3002\u5b9e\u9645\u4e0a\u5c31\u662f\u8fd9\u6837\uff0c\u53ea\u4e0d\u8fc7\u7528set\u548c\u500d\u589e\u4f18\u5316\u4e86\u4e00\u4e0b\uff0c\u7528\uff1a\n\ng[i][k]\u8868\u793a\u4ece\u4f4d\u7f6ei\u5f00\u59cb\uff0c\u4e24\u4eba\u8f6e\u6d41\u5f002^k\u8f6e\u8f66\u6700\u540e\u5230\u8fbe\u7684\u4f4d\u7f6e\uff1b\n\nf[i][j][0] \u8868\u793a\u8868\u793a\u4ece\u4f4d\u7f6ei\u5f00\u59cb\uff0c\u4e24\u4eba\u8f6e\u6d41\u5f002^k\u8f6e\u8f66\u6700\u540e\u5c0fA\u8d70\u8fc7\u7684\u8ddd\u79bb\uff1b\n\nf[i][j][1] \u8868\u793a\u8868\u793a\u4ece\u4f4d\u7f6ei\u5f00\u59cb\uff0c\u4e24\u4eba\u8f6e\u6d41\u5f002^k\u8f6e\u8f66\u6700\u540e\u5c0fB\u8d70\u8fc7\u7684\u8ddd\u79bb\uff1b\n\n\u5bb9\u6613\u5f97\u5230\uff1a\n\nnxt[i][1]\u8868\u793a\u79bbi\u7b2c\u4e8c\u8fd1\u7684\u57ce\u5e02\u7f16\u53f7\n\nnxt[i][0]\u8868\u793a\u79bbi\u7b2c\u4e00\u8fd1\u7684\u57ce\u5e02\u7f16\u53f7\n\ndis[i][1]\u8868\u793a\u79bbi\u7b2c\u4e8c\u8fd1\u7684\u57ce\u5e02\u7f16\u53f7\n\ndis[i][0]\u79bbi\u7b2c\u4e00\u8fd1\u7684\u57ce\u5e02\u7f16\u53f7\n\n\u521d\u59cb\u5316\uff1a\n\n\u3000\u3000g[i][0]=nxt[nxt[i][1]][0];  //\u4ecei\u5f00\u59cb\u4e24\u4eba\u8f6e\u6d41\u5f00\u4e00\u8f6e\u5230\u7684\u5730\u65b9 \n        f[i][0][0]=dis[i][1];  //\u5f00\u4e00\u6b21b\u8d70\u7684\u8def\u5f84 \n        f[i][0][1]=dis[nxt[i][1]][0];  //\u5f00\u4e00\u6b21a\u8d70\u7684\u8def\u5f84\n\n\u9012\u63a8\uff1a\n\ng[i][j]=g[g[i][j-1]][j-1];     //\u4ece\u7b2c\u4e00\u8fd1\u5230\u7b2c\u4e8c\u8fd1 \n            f[i][j][0]=f[i][j-1][0]+f[g[i][j-1]][j-1][0];    //A\u8d70\u4e00\u8f6e\uff0c\u518d\u8d70\u4e00\u8f6e \n            f[i][j][1]=f[i][j-1][1]+f[g[i][j-1]][j-1][1];   //B\u8d70\u4e00\u8f6e\uff0c\u518d\u8d70\u4e00\u8f6e\n\n\u4e0b\u9762\u662f\u53c2\u8003\u4ee3\u7801\uff1a\n```\n\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <cmath>\n#include <set>\n#define maxn 100000+10\nusing namespace std;\nstruct point\n{\n    int num,h;\n    bool operator < (const point ano) const\n    {\n        return h<ano.h;\n    }\n}city[maxn];\nset<point> S;\nset<point> :: iterator it;\nlong long f[maxn][21][2];\nint nxt[maxn][2],dis[maxn][2],g[maxn][21];\nint n,x0,m;\n\nvoid update(point x,point y)\n{\n    if(!nxt[x.num][0])\n    {\n        nxt[x.num][0]=y.num;\n        dis[x.num][0]=abs(x.h-y.h);\n    }\n    else if(dis[x.num][0]>abs(x.h-y.h)||(dis[x.num][0]==abs(x.h-y.h)&&y.h<city[nxt[x.num][0]].h))\n    {\n        nxt[x.num][1]=nxt[x.num][0];\n        dis[x.num][1]=dis[x.num][0];\n        nxt[x.num][0]=y.num;\n        dis[x.num][0]=abs(x.h-y.h);\n    }\n    else if(dis[x.num][1]>abs(x.h-y.h)||(dis[x.num][1]==abs(x.h-y.h)&&y.h<city[nxt[x.num][1]].h))\n    {\n        nxt[x.num][1]=y.num;\n        dis[x.num][1]=abs(x.h-y.h);\n    }\n    else if(!nxt[x.num][1])\n    {\n        nxt[x.num][1]=y.num;\n        dis[x.num][1]=abs(x.h-y.h);\n    }\n    return;\n}\n\nvoid query(int s,int x,long long &dista,long long &distb)\n{\n    for(int i=20;i>=0;i--)\n        if(f[s][i][0]+f[s][i][1]<=x&&g[s][i])//\u4ece\u5927\u5230\u5c0f\uff0c\u80fd\u585e\u5c31\u585e\n        {\n            dista+=f[s][i][0];\n            distb+=f[s][i][1];\n            x-=f[s][i][1]+f[s][i][0];\n            s=g[s][i];\n        }\n    if(nxt[s][1]&&dis[s][1]<=x)\n        dista+=dis[s][1];\n}\n\nint main()\n{\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%d\",&city[i].h);\n        city[i].num=i;\n    }\n    for(int i=n;i>=1;i--)\n    {\n        S.insert(city[i]);\n        it=S.find(city[i]);\n        if(it!=S.begin())\n        {\n            it--;\n            update(city[i],*it);\n            if(it!=S.begin())\n            {\n                it--;\n                update(city[i],*it);\n                it++;\n            }\n            it++;\n        }\n        if((++it)!=S.end())\n        {\n            update(city[i],*it);\n            if((++it)!=S.end())\n            {\n                update(city[i],*it);\n                it--;\n            }\n            it--;\n        }\n    }\n    for(int i=1;i<=n;i++)//\u521d\u59cb\u5316\n    {\n        g[i][0]=nxt[nxt[i][1]][0];//\u4ecei\u5f00\u59cb\u4e24\u4eba\u8f6e\u6d41\u5f00\u4e00\u8f6e\u5230\u7684\u5730\u65b9\n        f[i][0][0]=dis[i][1];//\u5f00\u4e00\u6b21b\u8d70\u7684\u8def\u5f84\n        f[i][0][1]=dis[nxt[i][1]][0];//\u5f00\u4e00\u6b21a\u8d70\u7684\u8def\u5f84\n    }\n    for(int j=1;j<=20;j++)\n        for(int i=1;i<=n;i++)\n        {\n            g[i][j]=g[g[i][j-1]][j-1];//\u4ece\u7b2c\u4e00\u8fd1\u5230\u7b2c\u4e8c\u8fd1\n            f[i][j][0]=f[i][j-1][0]+f[g[i][j-1]][j-1][0];//A\u8d70\u4e00\u8f6e\uff0c\u518d\u8d70\u4e00\u8f6e\n            f[i][j][1]=f[i][j-1][1]+f[g[i][j-1]][j-1][1];//B\u8d70\u4e00\u8f6e\uff0c\u518d\u8d70\u4e00\u8f6e\n        }\n    scanf(\"%d\",&x0);\n    int s0=0;\n    long long a=1e15,b=0;\n    for(int i=1;i<=n;i++)\n    {\n        long long dista=0,distb=0;\n        query(i,x0,dista,distb);\n        if(distb&&(!s0||(dista*b<distb*a)))\n        {\n            s0=i;\n            a=dista;\n            b=distb;\n        }\n    }\n    printf(\"%d\\n\",s0);\n    scanf(\"%d\",&m);\n    while(m--)\n    {\n        long long dista=0,distb=0;\n        int s,x;\n        scanf(\"%d%d\",&s,&x);\n        query(s,x,dista,distb);\n        printf(\"%d %d\\n\",dista,distb);\n    }\n    return 0;\n}\n```",
        "postTime": 1533039198,
        "uid": 67202,
        "name": "pop55",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1081 \u3010\u5f00\u8f66\u65c5\u884c\u3011"
    },
    {
        "content": "# \u3010NOIP 2012\u63d0\u9ad8\u3011\u5f00\u8f66\u65c5\u884c\n\n## Description\n\n   \n   \u5c0fA\u548c\u5c0fB\u51b3\u5b9a\u5229\u7528\u5047\u671f\u5916\u51fa\u65c5\u884c\uff0c\u4ed6\u4eec\u5c06\u60f3\u53bb\u7684\u57ce\u5e02\u4ece 1 \u5230 N \u7f16\u53f7\uff0c\u4e14\u7f16\u53f7\u8f83\u5c0f\u7684\u57ce\u5e02\u5728\u7f16\u53f7\u8f83\u5927\u7684\u57ce\u5e02\u7684\u897f\u8fb9\uff0c\u5df2\u77e5\u5404\u4e2a\u57ce\u5e02\u7684\u6d77\u62d4\u9ad8\u5ea6\u4e92\u4e0d\u76f8\u540c\uff0c\u8bb0\u57ce\u5e02 i \u7684\u6d77\u62d4\u9ad8\u5ea6\u4e3a Hi\uff0c\u57ce\u5e02 i \u548c\u57ce\u5e02 j \u4e4b\u95f4\u7684\u8ddd\u79bb d[i,j]\u6070\u597d\u662f\u8fd9\u4e24\u4e2a\u57ce\u5e02\u6d77\u62d4\u9ad8\u5ea6\u4e4b\u5dee\u7684\u7edd\u5bf9\u503c\uff0c\u5373 d[i,j] = |Hi\u2212Hj|\u3002 \n\n   \u65c5\u884c\u8fc7\u7a0b\u4e2d\uff0c\u5c0f A \u548c\u5c0f B \u8f6e\u6d41\u5f00\u8f66\uff0c\u7b2c\u4e00\u5929\u5c0f A \u5f00\u8f66\uff0c\u4e4b\u540e\u6bcf\u5929\u8f6e\u6362\u4e00\u6b21\u3002\u4ed6\u4eec\u8ba1\u5212\u9009\u62e9\u4e00\u4e2a\u57ce\u5e02 S \u4f5c\u4e3a\u8d77\u70b9\uff0c\u4e00\u76f4\u5411\u4e1c\u884c\u9a76\uff0c\u5e76\u4e14\u6700\u591a\u884c\u9a76 X \u516c\u91cc\u5c31\u7ed3\u675f\u65c5\u884c\u3002\u5c0f A \u548c\u5c0f B \u7684\u9a7e\u9a76\u98ce\u683c\u4e0d\u540c\uff0c\u5c0f B \u603b\u662f\u6cbf\u7740\u524d\u8fdb\u65b9\u5411\u9009\u62e9\u4e00\u4e2a\u6700\u8fd1\u7684\u57ce\u5e02\u4f5c\u4e3a\u76ee\u7684\u5730\uff0c\u800c\u5c0f A \u603b\u662f\u6cbf\u7740\u524d\u8fdb\u65b9\u5411\u9009\u62e9\u7b2c\u4e8c\u8fd1\u7684\u57ce\u5e02\u4f5c\u4e3a\u76ee\u7684\u5730\uff08\u6ce8\u610f\uff1a\u672c\u9898\u4e2d\u5982\u679c\u5f53\u524d\u57ce\u5e02\u5230\u4e24\u4e2a\u57ce\u5e02\u7684\u8ddd\u79bb\u76f8\u540c\uff0c\u5219\u8ba4\u4e3a\u79bb\u6d77\u62d4\u4f4e\u7684\u90a3\u4e2a\u57ce\u5e02\u66f4\u8fd1\uff09\u3002\u5982\u679c\u5176\u4e2d\u4efb\u4f55\u4e00\u4eba\u65e0\u6cd5\u6309\u7167\u81ea\u5df1\u7684\u539f\u5219\u9009\u62e9\u76ee\u7684\u57ce\u5e02\uff0c\u6216\u8005\u5230\u8fbe\u76ee\u7684\u5730\u4f1a\u4f7f\u884c\u9a76\u7684\u603b\u8ddd\u79bb\u8d85\u51fa X \u516c\u91cc\uff0c\u4ed6\u4eec\u5c31\u4f1a\u7ed3\u675f\u65c5\u884c\u3002 \n   \n\u3000\u3000  \u5728\u542f\u7a0b\u4e4b\u524d\uff0c\u5c0f A \u60f3\u77e5\u9053\u4e24\u4e2a\u95ee\u9898\uff1a \n  \n\u3000\u3000  1\uff0e\u5bf9\u4e8e\u4e00\u4e2a\u7ed9\u5b9a\u7684 X=X0\uff0c\u4ece\u54ea\u4e00\u4e2a\u57ce\u5e02\u51fa\u53d1\uff0c\u5c0f A \u5f00\u8f66\u884c\u9a76\u7684\u8def\u7a0b\u603b\u6570\u4e0e\u5c0f B \u884c\u9a76\u7684\u8def\u7a0b\u603b\u6570\u7684\u6bd4\u503c\u6700\u5c0f\uff08\u5982\u679c\u5c0f B \u7684\u884c\u9a76\u8def\u7a0b\u4e3a 0\uff0c\u6b64\u65f6\u7684\u6bd4\u503c\u53ef\u89c6\u4e3a\u65e0\u7a77\u5927\uff0c\u4e14\u4e24\u4e2a\u65e0\u7a77\u5927\u89c6\u4e3a\u76f8\u7b49\uff09\u3002\u5982\u679c\u4ece\u591a\u4e2a\u57ce\u5e02\u51fa\u53d1\uff0c\u5c0f A \u5f00\u8f66\u884c\u9a76\u7684\u8def\u7a0b\u603b\u6570\u4e0e\u5c0f B \u884c\u9a76\u7684\u8def\u7a0b\u603b\u6570\u7684\u6bd4\u503c\u90fd\u6700\u5c0f\uff0c\u5219\u8f93\u51fa\u6d77\u62d4\u6700\u9ad8\u7684\u90a3\u4e2a\u57ce\u5e02\u3002 \n  \n    2. \u5bf9\u4efb\u610f\u7ed9\u5b9a\u7684 X=Xi \u548c\u51fa\u53d1\u57ce\u5e02 Si\uff0c\u5c0f A \u5f00\u8f66\u884c\u9a76\u7684\u8def\u7a0b\u603b\u6570\u4ee5\u53ca\u5c0f B \u884c\u9a76\u7684\u8def\u7a0b\u603b\u6570\u3002\n    \n## Input\n\u3000\u3000  \u7b2c\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u6574\u6570 N\uff0c\u8868\u793a\u57ce\u5e02\u7684\u6570\u76ee\u3002 \n  \n\u3000\u3000  \u7b2c\u4e8c\u884c\u6709 N \u4e2a\u6574\u6570\uff0c\u6bcf\u4e24\u4e2a\u6574\u6570\u4e4b\u95f4\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\uff0c\u4f9d\u6b21\u8868\u793a\u57ce\u5e02 1 \u5230\u57ce\u5e02 N \u7684\u6d77\u62d4\u9ad8\u5ea6\uff0c\u5373 H1\uff0cH2\uff0c\u2026\u2026\uff0cHn\uff0c\u4e14\u6bcf\u4e2a Hi \u90fd\u662f\u4e0d\u540c\u7684\u3002\n  \n\u3000\u3000  \u7b2c\u4e09\u884c\u5305\u542b\u4e00\u4e2a\u6574\u6570 X0\u3002\n  \n\u3000\u3000  \u7b2c\u56db\u884c\u4e3a\u4e00\u4e2a\u6574\u6570 M\uff0c\u8868\u793a\u7ed9\u5b9a M \u7ec4 Si \u548c Xi\u3002 \n    \n    \u63a5\u4e0b\u6765\u7684 M \u884c\uff0c\u6bcf\u884c\u5305\u542b 2 \u4e2a\u6574\u6570 Si \u548c Xi\uff0c\u8868\u793a\u4ece\u57ce\u5e02 Si \u51fa\u53d1\uff0c\u6700\u591a\u884c\u9a76 Xi \u516c\u91cc\u3002 \n## Output\n    \u3000\u3000\u8f93\u51fa\u5171 M+1 \u884c\u3002\n\u3000\u3000\u7b2c\u4e00\u884c\u5305\u542b\u4e00\u4e2a\u6574\u6570 S0\uff0c\u8868\u793a\u5bf9\u4e8e\u7ed9\u5b9a\u7684 X0\uff0c\u4ece\u7f16\u53f7\u4e3a S0 \u7684\u57ce\u5e02\u51fa\u53d1\uff0c\u5c0f A \u5f00\u8f66\u884c\u9a76\u7684\u8def\u7a0b\u603b\u6570\u4e0e\u5c0f B \u884c\u9a76\u7684\u8def\u7a0b\u603b\u6570\u7684\u6bd4\u503c\u6700\u5c0f\u3002\n  \n\u3000\u3000\u63a5\u4e0b\u6765\u7684 M \u884c\uff0c\u6bcf\u884c\u5305\u542b 2 \u4e2a\u6574\u6570\uff0c\u4e4b\u95f4\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\uff0c\u4f9d\u6b21\u8868\u793a\u5728\u7ed9\u5b9a\u7684 Si \u548cXi \u4e0b\u5c0f A \u884c\u9a76\u7684\u91cc\u7a0b\u603b\u6570\u548c\u5c0f B \u884c\u9a76\u7684\u91cc\u7a0b\u603b\u6570\u3002\n## Sample Input&&Hint\n```cpp\n\u3010\u6837\u4f8b\u8f93\u51651\u3011\n4\n2 3 1 4\n3\n4\n1 3\n2 3\n3 3\n4 3\n\n\u3010\u6837\u4f8b\u8f93\u51652\u3011\n10\n4 5 6 1 2 3 7 8 9 10\n7\n10\n1 7\n2 7\n3 7\n4 7\n5 7\n6 7\n7 7\n8 7\n9 7\n10 7\n```\n```\n\u3010\u6837\u4f8b\u8f93\u51fa1\u3011\n1\n1 1\n2 0\n0 0\n0 0\n```\n\n![](https://cdn.luogu.com.cn/upload/pic/60530.png)\n\n\u5404\u4e2a\u57ce\u5e02\u7684\u6d77\u62d4\u9ad8\u5ea6\u4ee5\u53ca\u4e24\u4e2a\u57ce\u5e02\u95f4\u7684\u8ddd\u79bb\u5982\u4e0a\u56fe\u6240\u793a\u3002\n\n\u3000\u3000  \u5982\u679c\u4ece\u57ce\u5e021\u51fa\u53d1\uff0c\u53ef\u4ee5\u5230\u8fbe\u7684\u57ce\u5e02\u4e3a2,3,4\uff0c\u8fd9\u51e0\u4e2a\u57ce\u5e02\u4e0e\u57ce\u5e021\u7684\u8ddd\u79bb\u5206\u522b\u4e3a1,1,2\uff0c\u4f46\u662f\u7531\u4e8e\u57ce\u5e023\u7684\u6d77\u62d4\u9ad8\u5ea6\u4f4e\u4e8e\u57ce\u5e022\uff0c\u6240\u4ee5\u6211\u4eec\u8ba4\u4e3a\u57ce\u5e023\u79bb\u57ce\u5e021\u6700\u8fd1\uff0c\u57ce\u5e022\u79bb\u57ce\u5e021\u7b2c\u4e8c\u8fd1\uff0c\u6240\u4ee5\u5c0fA\u4f1a\u8d70\u5230\u57ce\u5e022\u3002\u5230\u8fbe\u57ce\u5e022\u540e\uff0c\u524d\u9762\u53ef\u4ee5\u5230\u8fbe\u7684\u57ce\u5e02\u4e3a3,4\uff0c\u8fd9\u4e24\u4e2a\u57ce\u5e02\u4e0e\u57ce\u5e022\u7684\u8ddd\u79bb\u5206\u522b\u4e3a2,1\uff0c\u6240\u4ee5\u57ce\u5e024\u79bb\u57ce\u5e022\u6700\u8fd1\uff0c\u56e0\u6b64\u5c0fB\u4f1a\u8d70\u5230\u57ce\u5e024\u3002\u5230\u8fbe\u57ce\u5e024\u540e\uff0c\u524d\u9762\u5df2\u6ca1\u6709\u53ef\u5230\u8fbe\u7684\u57ce\u5e02\uff0c\u6240\u4ee5\u65c5\u884c\u7ed3\u675f\u3002\n    \n\u3000\u3000  \u5982\u679c\u4ece\u57ce\u5e022\u51fa\u53d1\uff0c\u53ef\u4ee5\u5230\u8fbe\u7684\u57ce\u5e02\u4e3a3,4\uff0c\u8fd9\u4e24\u4e2a\u57ce\u5e02\u4e0e\u57ce\u5e022\u7684\u8ddd\u79bb\u5206\u522b\u4e3a2,1\uff0c\u7531\u4e8e\u57ce\u5e023\u79bb\u57ce\u5e022\u7b2c\u4e8c\u8fd1\uff0c\u6240\u4ee5\u5c0fA\u4f1a\u8d70\u5230\u57ce\u5e023\u3002\u5230\u8fbe\u57ce\u5e023\u540e\uff0c\u524d\u9762\u5c1a\u672a\u65c5\u884c\u7684\u57ce\u5e02\u4e3a4\uff0c\u6240\u4ee5\u57ce\u5e024\u79bb\u57ce\u5e023\u6700\u8fd1\uff0c\u4f46\u662f\u5982\u679c\u8981\u5230\u8fbe\u57ce\u5e024\uff0c\u5219\u603b\u8def\u7a0b\u4e3a2+3=5>3\uff0c\u6240\u4ee5\u5c0f B\u4f1a\u76f4\u63a5\u5728\u57ce\u5e023\u7ed3\u675f\u65c5\u884c\u3002\n    \n\u3000\u3000  \u5982\u679c\u4ece\u57ce\u5e023\u51fa\u53d1\uff0c\u53ef\u4ee5\u5230\u8fbe\u7684\u57ce\u5e02\u4e3a4\uff0c\u7531\u4e8e\u6ca1\u6709\u79bb\u57ce\u5e023\u7b2c\u4e8c\u8fd1\u7684\u57ce\u5e02\uff0c\u56e0\u6b64\u65c5\u884c\u8fd8\u672a\u5f00\u59cb\u5c31\u7ed3\u675f\u4e86\u3002\n    \n\u3000\u3000  \u5982\u679c\u4ece\u57ce\u5e024\u51fa\u53d1\uff0c\u6ca1\u6709\u53ef\u4ee5\u5230\u8fbe\u7684\u57ce\u5e02\uff0c\u56e0\u6b64\u65c5\u884c\u8fd8\u672a\u5f00\u59cb\u5c31\u7ed3\u675f\u4e86\u3002\n\u3010\u6837\u4f8b\u8f93\u51fa2\u3011\n2\n3 2\n2 4\n2 1\n2 4\n5 1\n5 1\n2 1\n2 0\n0 0\n0 0\n\u3010\u8f93\u5165\u8f93\u51fa\u6837\u4f8b2\u8bf4\u660e\u3011 \n\u3000\u3000\u5f53X=7\u65f6\uff0c \n  \n\u3000\u3000  \u5982\u679c\u4ece\u57ce\u5e021\u51fa\u53d1\uff0c\u5219\u8def\u7ebf\u4e3a1->2->3->8->9\uff0c\u5c0fA\u8d70\u7684\u8ddd\u79bb\u4e3a1+2=3\uff0c\u5c0fB\u8d70\u7684\u8ddd\u79bb\u4e3a1+1=2\u3002\uff08\u5728\u57ce\u5e021\u65f6\uff0c\u8ddd\u79bb\u5c0fA\u6700\u8fd1\u7684\u57ce\u5e02\u662f2\u548c6\uff0c\u4f46\u662f\u57ce\u5e022\u7684\u6d77\u62d4\u66f4\u9ad8\uff0c\u89c6\u4e3a\u4e0e\u57ce\u5e021\u7b2c\u4e8c\u8fd1\u7684\u57ce\u5e02\uff0c\u6240\u4ee5\u5c0fA\u6700\u7ec8\u9009\u62e9\u57ce\u5e022\uff1b\u8d70\u52309\u540e\uff0c\u5c0fA\u53ea\u6709\u57ce\u5e0210\u53ef\u4ee5\u8d70\uff0c\u6ca1\u6709\u7b2c2\u9009\u62e9\u53ef\u4ee5\u9009\uff0c\u6240\u4ee5\u6ca1\u6cd5\u505a\u51fa\u9009\u62e9\uff0c\u7ed3\u675f\u65c5\u884c\uff09 \n    \n\u3000\u3000  \u5982\u679c\u4ece\u57ce\u5e022\u51fa\u53d1\uff0c\u5219\u8def\u7ebf\u4e3a2->6->7\uff0c\u5c0fA\u548c\u5c0fB\u8d70\u7684\u8ddd\u79bb\u5206\u522b\u4e3a2\uff0c4\u3002 \n\u3000\u3000  \u5982\u679c\u4ece\u57ce\u5e023\u51fa\u53d1\uff0c\u5219\u8def\u7ebf\u4e3a3->8->9\uff0c\u5c0fA\u548c\u5c0fB\u8d70\u7684\u8ddd\u79bb\u5206\u522b\u4e3a2\uff0c1\u3002\n    \n  \n\u3000\u3000  \u5982\u679c\u4ece\u57ce\u5e024\u51fa\u53d1\uff0c\u5219\u8def\u7ebf\u4e3a4->6->7\uff0c\u5c0fA\u548c\u5c0fB\u8d70\u7684\u8ddd\u79bb\u5206\u522b\u4e3a2\uff0c4\u3002 \n    \n\u3000\u3000  \u5982\u679c\u4ece\u57ce\u5e025\u51fa\u53d1\uff0c\u5219\u8def\u7ebf\u4e3a5->7->8\uff0c\u5c0fA \u548c\u5c0fB\u8d70\u7684\u8ddd\u79bb\u5206\u522b\u4e3a5\uff0c1\u3002 \n    \n\u3000\u3000  \u5982\u679c\u4ece\u57ce\u5e026\u51fa\u53d1\uff0c\u5219\u8def\u7ebf\u4e3a6->8->9\uff0c\u5c0fA\u548c\u5c0fB\u8d70\u7684\u8ddd\u79bb\u5206\u522b\u4e3a5\uff0c1\u3002 \n    \n\u3000\u3000  \u5982\u679c\u4ece\u57ce\u5e027\u51fa\u53d1\uff0c\u5219\u8def\u7ebf\u4e3a7->9->10\uff0c\u5c0fA \u548c\u5c0fB\u8d70\u7684\u8ddd\u79bb\u5206\u522b\u4e3a2\uff0c1\u3002 \n    \n\u3000\u3000  \u5982\u679c\u4ece\u57ce\u5e028\u51fa\u53d1\uff0c\u5219\u8def\u7ebf\u4e3a8->10\uff0c\u5c0fA \u548c\u5c0fB\u8d70\u7684\u8ddd\u79bb\u5206\u522b\u4e3a2\uff0c0\u3002\n    \n\u3000\u3000  \u5982\u679c\u4ece\u57ce\u5e02 9 \u51fa\u53d1\uff0c\u5219\u8def\u7ebf\u4e3a9\uff0c\u5c0fA\u548c\u5c0fB\u8d70\u7684\u8ddd\u79bb\u5206\u522b\u4e3a0\uff0c0\uff08\u65c5\u884c\u4e00\u5f00\u59cb\u5c31\u7ed3\u675f\u4e86\uff09\u3002 \n    \n\u3000\u3000  \u5982\u679c\u4ece\u57ce\u5e0210\u51fa\u53d1\uff0c\u5219\u8def\u7ebf\u4e3a10\uff0c\u5c0fA\u548c\u5c0fB\u8d70\u7684\u8ddd\u79bb\u5206\u522b\u4e3a0\uff0c0\u3002\n    \n\u3000\u3000  \u4ece\u57ce\u5e022\u6216\u8005\u57ce\u5e024\u51fa\u53d1\u5c0fA\u884c\u9a76\u7684\u8def\u7a0b\u603b\u6570\u4e0e\u5c0fB\u884c\u9a76\u7684\u8def\u7a0b\u603b\u6570\u7684\u6bd4\u503c\u90fd\u6700\u5c0f\uff0c\u4f46\u662f\u57ce\u5e022\u7684\u6d77\u62d4\u66f4\u9ad8\uff0c\u6240\u4ee5\u8f93\u51fa\u7b2c\u4e00\u884c\u4e3a2\u3002\n\u3000\u3000\u3000\u3000\n    \n\u3000\u3000\u3010\u6570\u636e\u8303\u56f4\u3011\n  \n\u3000\u3000\u5bf9\u4e8e 30%\u7684\u6570\u636e\uff0c\u6709 1\u2264N\u226420\uff0c1\u2264M\u226420\uff1b \n  \n\u3000\u3000\u5bf9\u4e8e 40%\u7684\u6570\u636e\uff0c\u6709 1\u2264N\u2264100\uff0c1\u2264M\u2264100\uff1b \n  \n\u3000\u3000\u5bf9\u4e8e 50%\u7684\u6570\u636e\uff0c\u6709 1\u2264N\u2264100\uff0c1\u2264M\u22641,000\uff1b \n  \n\u3000\u3000\u5bf9\u4e8e 70%\u7684\u6570\u636e\uff0c\u6709 1\u2264N\u22641,000\uff0c1\u2264M\u226410,000\uff1b \n  \n\u3000\u3000\u5bf9\u4e8e 100%\u7684\u6570\u636e\uff0c\u6709 \n  \n  1\u2264N\u2264100,000\uff0c1\u2264M\u226410,000\uff0c-1,000,000,000\u2264Hi\u22641,000,000,000\uff0c\n  0\u2264X0\u22641,000,000,000\uff0c1\u2264Si\u2264N\uff0c0\u2264Xi\u22641,000,000,000\uff0c\n  \n  \u6570\u636e\u4fdd\u8bc1 Hi\u4e92\u4e0d\u76f8\u540c\u3002\n  \n  \n  \n##   Part 1 \u9884\u5904\u7406\n\u9996\u5148\u8981\u5904\u7406\u51fa\u5c0fA\u548c\u5c0fB\u600e\u4e48\u8d70\u3002\n\u6211\u4eec\u7528ga\uff08i\uff09\u3001gb\uff08i)\u5206\u522b\u8868\u793a\u5c0fA\u3001\u5c0fB\u884c\u9a76\u5230\u7684\u4e0b\u4e00\u4e2a\u57ce\u5e02\n\u5bb9\u6613\u60f3\u5230\uff0c\u55ef\uff0c\n\n\u6cd5\u4e00\uff1a\u66b4\u529b\u6c42\u89e3\n\u679a\u4e3e1-n\u7684\u6bcf\u4e00\u4e2a\u57ce\u5e02\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u57ce\u5e02i\uff0c\u4ece\uff08i+1-n\uff09\u4e2d\u9009\u53d6\u8ddd\u79bb\u6700\u5c0f\u7684\u4e24\u4e2a\u57ce\u5e02\u3002\u65f6\u95f4\u590d\u6742\u5ea6 n^2.~~\u7206\u5566\uff01surprise mother f**k~~\n\n\u63a5\u4e0b\u6765\u8bb2\u8bb2\u6b63\u89e3\uff0c\u6709\u4e2a\u795e\u5947\u7684\u4e1c\u897f\u53eb\u505a#inclue<set>\n\n\u5b83\u652f\u6301logn\u7ea7\u522b\u7684\u63d2\u5165\u548c\u67e5\u8be2\uff0c\u5e76\u5bf9\u5185\u90e8\u7684\u6570\u8fdb\u884c\u6392\u5e8f\n\n```cpp\ns.insert(x);//\u63d2\u5165x\ns.lower_bound(x);//\u67e5\u627e**\u5927\u4e8e\u7b49\u4e8e**x\u7684\u6700\u5c0f\u5143\u7d20\uff0c\u8fd4\u56de\u8fed\u4ee3\u5668\ns.upper_bound(x);//\u67e5\u627e**\u5927\u4e8e**x\u7684\u6700\u5c0f\u5143\u7d20\uff0c\u8fd4\u56de\u8fed\u4ee3\u5668\n```\n\n\u6240\u4ee5\u3002\u5bf9\u4e8e\u5f53\u524d\u57ce\u5e02i\n  \n  ![](https://cdn.luogu.com.cn/upload/pic/60531.png)\n\n  \u6700\u8fd1\u7684\u548c\u7b2c\u4e8c\u8fd1\u7684\u53ea\u4f1a\u5728\n  \n  \u56db\u4e2a\u4f4d\u7f6e\u51fa\u73b0\n  PS\uff1a\u8fd9\u91cc\u6709\u4e2a\u7ec6\u8282\uff0c\u4ed6\u4eec\u53ea\u80fd\u5411\u7f16\u53f7\u66f4\u5927\u7684\u57ce\u5e02\u8d70\u53bb\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u4e2a\u5c0f\u6280\u5de7\uff0c\u5012\u7740\u5904\u7406**\u3002\n  ```cpp\n\tfor(int i=n; i>=1; i--)\n\t\tq.insert(h[i]);\n```\n\n## Part 2 \u52a8\u6001\u89c4\u5212\n### - \u672c\u9898\u5173\u952e\n  \n- \u5728\u54ea\u91cc\uff08\u57ce\u5e02\uff09\n- \u5f00\u4e86\u591a\u4e45\uff08\u5929\u6570\uff09\n- A\u3001B\u884c\u9a76\u7684\u957f\u5ea6\n  \n\u4f46\u5176\u5b9e\u77e5\u9053\u524d\u4e24\u4e2a\u5c31\u53ef\u4ee5\u63a8\u51fa\u7b2c\u4e09\u4e2a\u3002\n  \n\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\n\n```c\nf[i,j,k]\u8868\u793a\u4ece\u57ce\u5e02j\u51fa\u53d1\uff0c\u4e24\u4eba\u4e00\u5171\u884c\u9a76i\u5929\uff0ck\u5148\u5f00\u8f66\u6700\u7ec8\u4f1a\u5230\u8fbe\u7684\u57ce\u5e02\u3002\u5176\u4e2dk=0\u8868\u793aA\u5f00\u8f66\uff0ck=1\u8868\u793aB\u5f00\u8f66\u3002\n```\n~~\u4f46\u662f\u4f18\u79c0\u7684\u5b9e\u73b0\u590d\u6742\u5ea6\u53c8\u7206\u70b8\u4e86~~\n  \n \u4e8e\u662f\u7ec8\u6781\u5927\u9b54\u738b\u51fa\u73b0\u4e86\uff01  \n#   \u500d\u589eDP\n  \u6211\u4eec\u5c06i\u6539\u4e3a\u4e00\u5171\u884c\u9a76\u4e862^i\u5929\u3002\n  \n  \u4e8e\u662f\u521d\u503c\uff1a\n  ```cpp\nf[0,j,0]=ga(j),f[0,j,1]=gb(j)\n```\n  \u5f53i=1\u65f6\uff0c\u56e0\u4e3a2^0\u662f\u5947\u6570\uff0c\u6240\u4ee5\u4e24\u4eba\u4ecej\u51fa\u53d1\u5f002^1\u5929\u6240\u5230\u8fbe\u7684\u57ce\u5e02\uff0c\u7b49\u4e8ek\u5148\u5f002^0\u5929\uff0c\u53e6\u4e00\u4eba\u518d\u5f002^0\u5929\u6240\u5230\u8fbe\u7684\u57ce\u5e02\n   ```cpp\nf[1,j,k]=f[0,f[0,j,k]\uff0c1-k/*\u6362\u4e86\u4e2a\u4eba\u5f00*/]\n```\n  \u5f53i>1\u65f6\uff0c\u4f60\u600e\u4e48\u6298\u817e2^i\u90fd\u662f\u5076\u6570\uff0c\u6240\u4ee5\u4e0d\u4f1a\u6362\u4eba\uff0c\u800c\u4e24\u4eba\u4ecej\u51fa\u53d1\u5f002^i\u5929\u6240\u5230\u8fbe\u7684\u57ce\u5e02\uff0c\u7b49\u4e8e\u7b49\u4e8ek\u5148\u5f002^i-1\u5929\uff0ck\u518d\u5f002^i-1\u5929\u6240\u5230\u8fbe\u7684\u57ce\u5e02\u3002\n  \n  \u6240\u4ee5\n\n  ```cpp\nf[i,j,k]=f[i-1,f[i-1,j,k],k]\n```\n\n### **\u8fd9\u91cc\u6709\u4e2a\u5c0f\u95ee\u9898\uff0c\u9700\u8981\u6ce8\u610f\u8d85\u51fan\u7684\u8fb9\u754c\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u9700\u8981\u7279\u5224\n  \n  \u9274\u4e8ef\u6570\u7ec4\uff0c\u4e8e\u662f\u6613\u5f97\n  \n  \u5b9a\u4e49da[i,j,k]\u8868\u793a\u4ecej\u57ce\u51fa\u53d1\uff0c\u7531k\u5148\u5f00\uff0c\u884c\u9a762^i\u5929\uff0c\u5c0fA\u8d70\u7684\u8def\u7a0b\n  \n  \n\u5f53i==1\u65f6da[1,j,k]=da[0,j,k]+da[0,f[0,j,k],i-k];\n  \n\u5426\u5219 da[i,j,k]=da[i-1,j,k]+da[i-1,f[0,j,k],1-k];\n  \n\u6211\u4eec\u5b9a\u4e49db[i,j,k]\u8868\u793a\u4ecej\u57ce\u51fa\u53d1\uff0c\u7531k\u5148\u5f00\uff0c\u884c\u9a762^i\u5929,\u5c0fB\u8d70\u7684\u8def\u7a0b\n  \n\u5f53i==1\u65f6db[1,j,k]=db[0,j,k]+db[0,f[0,j,k],i-k];\n  \n\u5426\u5219 db[i,j,k]=db[i-1,j,k]+db[i-1,f[0,j,k],1-k];\n  \n   \u65f6\u95f4\u590d\u6742\u5ea6Nlog N.\n  \u4f46\u662f\u8fd9\u91cc\u4ec5\u7b97\u51fa\u4e862^i\u6b21\u65b9\u4e0b\u7684\u60c5\u51b5\u3002\u4e8e\u662f\u6211\u4eec\u9700\u8981\u6ee1\u8db3\u6c42\u51fa\u4ece\u57ce\u5e02S\u51fa\u53d1\u6700\u591a\u884c\u9a76X\u516c\u91cc\u65f6\uff0cA\u548cB\u8d70\u4e86\u591a\u8fdc\u3002\n  \n  \u6211\u4eec\u6309\u5012\u53d9\u679a\u4e3e2\u7684i\u6b21\u65b9\uff0c\u57fa\u4e8e\u4e8c\u8fdb\u5236\u5212\u5206\u7684\u601d\u60f3\u6765\u62fc\u51d1X\u3002\n  \n  1.\u5012\u53d9\u5faa\u73afi=logN-0\n  \n  2.\u5bf9\u4e8e\u6bcf\u4e2ai\u82e5\u4e24\u4eba\u4ecep\u51fa\u53d1\u884c\u9a762^i\u5929\u7d2f\u8ba1\u8def\u7a0b\u4ecd\u672a\u8d85\u8fc7x\uff0c\u5219\u4ee4\u7d2f\u8ba1\u8def\u7a0b\u52a0\u4e0ax\uff0c\u5e76\u884c\u9a76\u5230\u8be5\u57ce\u5e02\n  \n  3.\u5faa\u73af\u7ed3\u675f\u540e\u5373\u4e3a\u6240\u6c42\u3002\n  \n  \u6700\u7ec8\u5b9e\u73b0\u4e86logN\u67e5\u8be2\u7684\u590d\u6742\u5ea6\u3002\n  \n  \u7136\u540e\u5bf9\u4e8e\u95ee\u9898\u3002\u3002\u3002~~\u778e\u6298\u817e\u5457\u53cd\u6b63logN\uff01~~\n  \n  [\u95ee\u98981]\u679a\u4e3e\uff01\u7136\u540e\u8ba1\u7b97\u53d6\u6bd4\u503c\u6700\u5c0f\u7684\u5373\u4e3a\u7b54\u6848\n  [\u95ee\u98982]\u591a\u6b21\u8ba1\u7b97\u3002\n  \n  \u4e8e\u662f\u6574\u4e2a\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6O((N+M)log N)\n  \n  \u4ee3\u7801\u6765\u4e86\n  \n  ~~\u9a6c\u8702\u592a\u4e11\u4e0d\u6562\u770b~~\n  ```cpp\n#include<iostream>\n#include<set>\n#include<algorithm>\n#include<cmath>\n#include<string.h>\nusing namespace std;\n//\u6700\u5927\u5751\u70b9\uff01\u672c\u9898\u8981\u5f00long long \nconst long long INF=0x7fffffffffffffff/2;\ndouble ans=10000000000;\nstruct node\n{\n\tlong long h;\n\tint id;\n} h[100005],ga[100005],gb[100005];//\u50a8\u5b58\u57ce\u5e02\u4fe1\u606f \nstruct point\n{\n\tlong long la,lb;\n};\nbool operator <(node as,node bs)\n{\n\tif(as.h!=bs.h)return as.h<bs.h;\n\telse return as.id<bs.id;\n}//\u91cd\u8f7d\u8fd0\u7b97\u7b26 \nset<node> q;//\u4ee5\u57ce\u5e02\u4e3a\u5355\u4f4d\u5165set \nint n,f[20][100005][3];\nlong long da[20][100005][3],db[20][100005][3];\nbool cmp(node as,node bs)\n{\n\treturn as.h<bs.h;\n}\npoint Calc(int p,int x)//\u8ba1\u7b97\u4ee5p\u4e3a\u8d77\u70b9\uff0c\u884c\u9a76\u8ddd\u79bb\u4e0d\u8d85\u8fc7x\u7684\u8def\u7a0b\u548c \n{\n\tlong long la=0,lb=0;\n\tfor(int i=18; i>=0; i--)//\u5012\u53d9 \n\t{\n\t\tif(f[i][p][0]&&la+lb+da[i][p][0]+db[i][p][0]<=x)\n\t\t{\n\t\t\tla+=da[i][p][0];\n\t\t\tlb+=db[i][p][0];\n\t\t\tp=f[i][p][0];\n\n\t\t}\n\t}\n\treturn {la,lb};\n}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tq.insert({INF,0});\n\tq.insert({INF-1,0});\n\tq.insert({-INF,0});\n\tq.insert({-INF+1,0});//\u8fb9\u754c\u5904\u7406\uff0c\u9884\u9632\u9884\u5904\u7406\u65f6\u8d8a\u754c \n\tfor(int i=1; i<=n; i++)\n\t{\n\t\tscanf(\"%lld\",&h[i].h);\n\t\th[i].id=i;\n\t}\n\t \n\tfor(int i=n; i>=1; i--)//\u5012\u53d9 \n\t{\n\t\tq.insert(h[i]);\n\t\tnode t[5];\n\t\tt[1]=*--q.lower_bound(h[i]);\n\t\tt[2]=*--q.lower_bound(t[1]);\n\t\tt[3]=*q.upper_bound(h[i]);\n\t\tt[4]=*q.upper_bound(t[3]);//\u67e5\u627e4\u4e2a\u53ef\u80fd\u4e3a\u6700\u8fd1\u57ce\u5e02\n\t\tfor(int j=1; j<=4; j++)t[j].h=abs(t[j].h-h[i].h);\n\t\tsort(t+1,t+5,cmp);//\u6392\u5e8f \n\t\tga[i]=t[2];\n\t\tgb[i]=t[1];\n\t}\n\tfor(int i=1; i<n; i++)\n\t{\n\t\tf[0][i][0]=ga[i].id;\n\t\tf[0][i][1]=gb[i].id;\n\t}\n\tfor(int i=1; i<=18; i++)\n\t\tfor(int j=1; j<=n; j++)\n\t\t\tif(j+(1<<i)<=n)//\u9884\u9632\u8d8a\u754c \n\t\t\t\tfor(int k=0; k<=1; k++)\n\t\t\t\t{\n\t\t\t\t\tif(i==1)f[1][j][k]=f[0][f[0][j][k]][1-k];\n\t\t\t\t\telse f[i][j][k]=f[i-1][f[i-1][j][k]][k];\n\t\t\t\t}\n\tmemset(da,127/3,sizeof(da));\n\tmemset(db,127/3,sizeof(db));//\u5f53\u4e0d\u53ef\u5230\u8fbe\u65f6\u9ed8\u8ba4\u4e3a\u6700\u5927 \n\tfor(int i=1; i<=n; i++)\n\t{\n\t\tda[0][i][0]=ga[i].h;\n\t\tda[0][i][1]=0;\n\t}\n\tfor(int i=1; i<=18; i++)\n\t\tfor(int j=1; j<=n; j++)\n\t\t\tif(j+(1<<i)<=n)//\u9884\u9632\u8d8a\u754c \n\t\t\t\tfor(int k=0; k<=1; k++)\n\t\t\t\t{\n\t\t\t\t\tif(i==1)\n\t\t\t\t\t{\n\t\t\t\t\t\tda[1][j][k]=da[0][j][k]+da[0][f[0][j][k]][1-k];\n\t\t\t\t\t}\n\t\t\t\t\telse da[i][j][k]=da[i-1][j][k]+da[i-1][f[i-1][j][k]][k];\n\t\t\t\t}\n\tfor(int i=1; i<=n; i++)\n\t{\n\t\tdb[0][i][0]=0;\n\t\tdb[0][i][1]=gb[i].h;\n\t}\n\tfor(int i=1; i<=18; i++)\n\t\tfor(int j=1; j<=n; j++)\n\t\t\tif(j+(1<<i)<=n)//\u9884\u9632\u8d8a\u754c \n\t\t\t\tfor(int k=0; k<=1; k++)\n\t\t\t\t{\n\t\t\t\t\tif(i==1)\n\t\t\t\t\t{\n\t\t\t\t\t\tdb[1][j][k]=db[0][j][k]+db[0][f[0][j][k]][k^1];\n\t\t\t\t\t}\n\t\t\t\t\telse db[i][j][k]=db[i-1][j][k]+db[i-1][f[i-1][j][k]][k];\n\t\t\t\t}\n\tint x0,m;\n\tscanf(\"%d\",&x0);\n\tint ddd=0;\n\tfor(int i=1; i<=n; i++)//\u679a\u4e3e\u627e\u51fa\u6700\u5c0f\u6bd4 \n\t{\n\t\tpoint tmp=Calc(i,x0);\n\t\tif(tmp.lb==0)continue;//\u9632\u6b62\u96640 \n\t\tdouble ccf=(long double)tmp.la/(long double)tmp.lb;\n\t\tif(ccf<ans)ans=ccf,ddd=i;\n\t}\n\tprintf(\"%d\\n\",ddd);\n\tscanf(\"%d\",&m);\n\tfor(int i=1; i<=m; i++)\n\t{\n\t\tint si,xi;\n\t\tscanf(\"%d%d\",&si,&xi);\n\t\tpoint tmp=Calc(si,xi);//\u4f9d\u6b21\u8ba1\u7b97 \n\t\tprintf(\"%lld %lld\\n\",tmp.la,tmp.lb);\n\t}\n}\n```\n\n  \n  \n  ",
        "postTime": 1560138607,
        "uid": 88244,
        "name": "\u4f60\u7684\u80cc\u5305",
        "ccfLevel": 0,
        "title": "\u3010NOIP 2012\u63d0\u9ad8\u3011\u5f00\u8f66\u65c5\u884c"
    },
    {
        "content": "\u55ef\u3002\u3002\u3002\u975e\u5e38\u597d\u7684\u4e00\u9053\u500d\u589e\u597d\u9898\u3002\u3002\u3002\u3002\n\n\u4f60\u4f1a\u53d1\u73b0\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u5982\u679c\u8bf4\u662fA\u5f00\u8f66\uff0c\u5230\u8fbe\u7684\u70b9\u662f\u56fa\u5b9a\u7684\uff0c\u662fB\n\n\u5f00\u8f66\uff0c\u5230\u8fbe\u7684\u70b9\u4e5f\u662f\u56fa\u5b9a\u7684\u3002\u5e76\u4e14\u4ed6\u4eec\u53ea\u4f1a\u53bb\u6bd4\u4ed6\u4eec\u8981\u5927\u7684\u70b9\u3002\u4e8e\u662f\u5bf9\u4e8e\u7ec8\u70b9\n\n\u53ea\u4f1a\u6709\u4e09\u79cd\u60c5\u51b5\uff08\u5f53\u7136\u662f\u5728\u53ef\u4ee5\u8d70\u65e0\u9650\u6b65\u65f6\uff09\n\n1.\u5230\u4e86n\u70b9\uff0c\u63a5\u4e0b\u6765\u662fA\u5f00\u8f66\uff0c\u65c5\u7a0b\u7ed3\u675f\u3002\n\n2.\u5230\u4e86n\u70b9\uff0c\u63a5\u4e0b\u6765\u662fB\u5f00\u8f66\uff0c\u65c5\u7a0b\u7ed3\u675f\u3002\n\n3.\u5230\u4e86n-1\u70b9\uff0c\u63a5\u4e0b\u6765\u662fA\u5f00\u8f66\uff0c\u65c5\u7a0b\u7ed3\u675f\u3002\n\n\u6240\u4ee5\u6211\u4eec\u5efa\u51fa\u4e09\u68f5\u6811\u5c31\u884c\n\n\u6211\u4eec\u628a\u6bcf\u4e2a\u70b9\u8fdb\u884c\u62c6\u70b9\u30021\u8868\u793a\u63a5\u4e0b\u6765B\u5f00\uff0c2\u8868\u793a\u63a5\u4e0b\u6765A\u5f00\n\n\u90a3\u4e48\u5fc5\u7136\u5c31\u6709\u6811\u72b6\u7684\u5bf9\u5e94\u5173\u7cfb\u3002\n\n\u5176\u4ed6\u7684\u7559\u7ed9\u500d\u589e\u5c31\u884c\u3002\u3002\u3002\n\n\u5177\u4f53\u770b\u4ee3\u7801\uff1a\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define N 1000000\n#define inf 0x7fffffff\n#define Max(x,y) x>y?x:y\n#define Min(x,y) x>y?y:x\nint n , m , tot ;\nint fa[N][33] , w[N][33] , w1[N][33] , To[N] , pi[N][3] , book[N] , bac[4*N] ;\nint nex[4*N] , to[4*N] , fire[2*N] , dis[4*N] , from[4*N] ;\nint L[N] , R[N] , s[N] , X[N] ;\nstruct node{\n    int H ;\n    int num ;\n    int w ;\n}p[4 * N] ;\nbool cmp(node x , node y){\n    return x.H < y.H ;\n}\nbool cmp2(node x , node y ){\n    if( x.w == y.w ) return x.H < y.H ;\n    return x.w < y.w ;\n}\nvoid add1(int u , int v , int fr ){\n    nex[++tot] = fire[u] ;\n    to[tot] = v ;\n    fire[u] = tot ;\n    dis[tot] = fr ;\n    from[tot] = u ;\n}\nvoid add(int u , int v , int fr ){\n    if( u == 0 || v == 0 ) return ;\n    if( abs( u - v ) == n ) return ;\n    add1( u , v , fr ) ; add1( v , u , fr ) ;\n}\nvoid build(){\n    //\u94fe\u8868 ~ \u94fe\u8868\n    for(int i = 1 ; i <= n ; i++ ){\n        int now = To[i] ;\n        if( L[now] == 0 && R[now] ){ // \u5224\u65ad\u4e00\u5b9a\u8981\u554a\u3002\u3002\u88ab\u65ad\u900150p\n            add( pi[now][1] , pi[R[now]][2] , abs( p[R[now]].H - p[now].H ) ) ; // \u5728\u8fd9\u91ccpi\u8868\u7684\u53f7\u90fd\u662f\u6392\u5e8f\u540e\u7684\u6807\u53f7\n        }\n        else{\n            if( L[now] && R[now] == 0 ){\n                add( pi[now][1] , pi[L[now]][2] , abs( p[L[now]].H - p[now].H ) ) ;\n            }\n            else{\n                if( abs( p[L[now]].H - p[now].H ) < abs( p[R[now]].H - p[now].H ) )\n                add( pi[now][1] , pi[L[now]][2] , abs( p[L[now]].H - p[now].H ) ) ;\n                else{\n                    if( abs( p[L[now]].H - p[now].H ) == abs( p[R[now]].H - p[now].H ) ){\n                        if( p[L[now]].H < p[R[now]].H ) add( pi[now][1] , pi[L[now]][2] , abs( p[L[now]].H - p[now].H ) ) ;\n                        else add( pi[now][1] , pi[R[now]][2] , abs( p[R[now]].H - p[now].H ) ) ;\n                    }\n                    else{\n                        add( pi[now][1] , pi[R[now]][2] , abs( p[R[now]].H - p[now].H ) ) ;\n                    }\n                }\n            }\n        }\n        node k[521] ;\n        int cnt = 0 ;\n        if( L[now] >= 1 ) k[++cnt] = p[L[now]] , book[L[now]] = 1 ; // book \u4fdd\u9669\u7528\u7684\n        if( L[L[now]] >= 1 && book[L[L[now]]] == 0 ) k[++cnt] = p[L[L[now]]] , book[L[L[now]]] = 1 ;\n        if( R[now] >= 1 && R[now] <= n && book[R[now]] == 0 ) k[++cnt] = p[R[now]] , book[R[now]] = 1 ;\n        if( R[R[now]] >= 1 && R[R[now]] <= n && book[R[R[now]]] == 0 ) k[++cnt] = p[R[R[now]]] , book[R[R[now]]] = 1 ;\n        for(int j = 1 ; j <= cnt ; j++ ) k[j].w = abs( p[now].H - k[j].H ) ;\n        sort( k + 1 , k + cnt + 1 , cmp2 ) ; // \u61d2\u5f97\u90a3\u4e48\u591a\u5224\u65ad\uff0c\u6392\u4e00\u904d\u5e8f\n        if( cnt >= 2 ) add( pi[now][2] , pi[k[2].num][1] , k[2].w ) ;\n        book[R[now]] = book[L[now]] = book[L[L[now]]] = book[R[R[now]]] = 0 ; \n        R[L[now]] = R[now] , L[R[now]] = L[now] ; // \u5de6\u53f3\u513f\u5b50\u6709\u53d8\uff0c\u6539\u4e00\u4e0b\n    }\n}\nvoid tree_build(int x , int bef , int fr ){\n    for(int i = fire[x] ; i ; i = nex[i] ){\n        int v = to[i] ;\n        if( v == fr ) continue ;\n        fa[v][0] = x ;\n        w[v][0] = dis[i] ; // \u603b\u5171\u7684 \uff0c w - w1 \u5c31\u662f A \u5f00\u7684\n        if( bef == 1 )\n            w1[v][0] = dis[i] ; // \u8868\u793a \u8fd9\u6761\u8def \u662f B \u5f00\u7684\uff0c\u9009\u4e0a\n        tree_build( v , bef % 2 + 1 , x ) ;\n    }\n}\nsigned main()\n{\n    scanf(\"%d\" , &n ) ;\n    for(int i = 1 ; i <= n ; i++ ) scanf(\"%d\" , &p[i].H ) , p[i].w = i ; // p[i].w \u8868\u793a\u539f\u6765\u65f6\u591a\u5c11\u53f7\uff0c\u56e0\u4e3a\u8f93\u5165\u8981\u6309\u8fd9\u4e2a\u6765\n    sort( p + 1 , p + n + 1 , cmp ) ;\n    for(int i = 1 ; i <= n ; i++ ) \n    p[i].num = i , L[i] = i - 1 , R[i] = i + 1 , To[p[i].w] = i , bac[i] = p[i].w ; \n    // num\u8868\u793a\u73b0\u5728\u7684\u597d\uff0cbac[i]\u5176\u5b9e\u53ef\u4ee5\u5ffd\u7565\uff0c\u76f4\u63a5\u7528p[i].w\n    R[n] = 0 , L[1] = 0 ;\n    for(int i = 1 ; i <= 2 ; i++ )\n        for(int j = 1 ; j <= n ; j++ ) pi[j][i] = ( i - 1 ) * n + j ; //\u62c6\u70b9\n    build() ;\n    tree_build( pi[To[n]][1] , 2 , 0 ) ; // n\u70b9 \u63a5\u4e0b\u6765 \u9760 B \uff0c \u4e0a\u4e00\u6b21\u662f A\n    tree_build( pi[To[n]][2] , 1 , 0 ) ; // n\u70b9 \u63a5\u4e0b\u6765 \u9760 A \uff0c \u4e0a\u4e00\u6b21\u662f B\n    tree_build( pi[To[n-1]][2] , 1 , 0 ) ; // n - 1 \u70b9 \u63a5\u4e0b\u6765 \u9760 A \uff0c\u4e0a\u4e00\u6b21 \u662f B\n    //\u5efa\u6811\n    for(int j = 1 ; j <= 31 ; j++ ){ // \u500d\u589e\u9884\u5904\u7406\n        for(int i = 1 ; i <= 2 * n ; i++ ){\n            fa[i][j] = fa[fa[i][j-1]][j-1] ;\n            w[i][j] = w[fa[i][j-1]][j-1] + w[i][j-1];\n            w1[i][j] = w1[fa[i][j-1]][j-1] + w1[i][j-1] ;\n        }\n    }\n    int x0 ;\n    scanf(\"%d\" , &x0 ) ;\n    double Min = inf ;\n    int ans = 1 ;\n    for(int i = 1 ; i <= n ; i++ ){\n        int now = x0 , x1 = 0 , y1 = 0 ;\n        int b = pi[To[i]][2] ; // number\u7684\u4e00\u4e2a\u8f6c\u5316\n        for(int j = 31 ; j >= 0 ; j-- ){\n            if( w[b][j] <= now && fa[b][j] != 0 ){\n                x1 += w[b][j] ;\n                y1 += w1[b][j] ;\n                now -= w[b][j] ;\n                b = fa[b][j] ;\n            }\n        }\n        if( y1 == 0 ) continue ;\n        else{\n            if( Min > (double)( x1 - y1 ) / y1 ){\n                Min = (double)( x1 - y1 ) / y1 ;\n                ans = i ;\n            }\n        }\n    }\n    printf(\"%d\\n\" , ans ) ;\n    scanf(\"%d\" , &m ) ;\n    for(int i = 1 ; i <= m ; i++ ){\n        scanf(\"%d%d\" , &s[i] , &X[i] ) ;\n        int ans = 0 , res = 0 ;\n        s[i] = To[s[i]] + n ;\n        for(int j = 31 ; j >= 0 ; j-- ){\n            if( w[s[i]][j] <= X[i] && fa[s[i]][j] != 0   ){\n                ans += w1[s[i]][j] ;\n                res += w[s[i]][j] ;\n                X[i] -= w[s[i]][j] ;\n                s[i] = fa[s[i]][j] ;\n            }\n        }\n        printf(\"%d %d\\n\" , res - ans , ans ) ;\n    }\n    return 0 ;\n}\n```\n",
        "postTime": 1556444834,
        "uid": 119610,
        "name": "Regimes",
        "ccfLevel": 7,
        "title": "p1081 \u5f00\u8f66\u65c5\u884c"
    },
    {
        "content": "\u8fd9\u662f\u4e00\u9053\u9700\u8981\u7528\u5230\u5927\u91cfSTL\u4f18\u5316\u7684\u9898\u76ee\uff08\u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u81ea\u5df1\u592a\u83dc\u4e86\uff09\n\n\u7528d[i][j]\u9884\u5904\u7406\u4ece\u7b2ci\u4e2a\u57ce\u5e02\u5411\u540e\u8d70\u4e86$2^j$\u6b65\uff0cA\u548cB\u5f00\u7684\u8ddd\u79bb\n\n\u7528dA[i][j]\u9884\u5904\u7406\u4ece\u7b2ci\u4e2a\u57ce\u5e02\u5411\u540e\u8d70\u4e86$2^j$\u6b65\uff0cA\u5f00\u7684\u8ddd\u79bb\n\n\u7528nxtA[i][j]\u9884\u5904\u7406\u51fa\u4ece\u7b2ci\u4e2a\u57ce\u5e02\u5411\u540e\u8d70\u4e86$2^j$\u6b65\uff0cA\u7684\u540e\u7ee7\u7684\u4e0b\u6807\n\n\u7528nxtB[i]\u9884\u5904\u7406\u51fa\u4ece\u7b2ci\u4e2a\u57ce\u5e02\uff0cB\u7684\u540e\u7ee7\u7684\u4e0b\u6807\n\n\u7528\u4e00\u4e2amap\u6765\u5b58\u9ad8\u5ea6\u5bf9\u5e94\u7684\u4e0b\u6807\uff0c\u56e0\u4e3a\u9ad8\u5ea6\u4e92\u4e0d\u76f8\u540c\uff0c\u6240\u4ee5\u4e0d\u7528\u62c5\u5fc3\u67e5\u91cd\u7684\u95ee\u9898\n\n\u518d\u7528\u4e00\u4e2aset\u8fdb\u884c\u4e00\u4e2a\u6392\u5e8f\u5904\u7406\uff0c\u4ece\u540e\u5411\u524d\u8fdb\u884c\u5904\u7406\uff0c\u518d\u5b9a\u4e49\u4e00\u4e2aset\u7684\u6307\u9488\uff0c\u5bf9\u8fd9\u4e2a\u9ad8\u5ea6\u8fdb\u884c\u4e8c\u5206\uff0c\u5c31\u53ef\u4ee5\u65b9\u4fbf\u7684\u7528logN\u7684\u590d\u6742\u5ea6\u6765\u627e\u51fa\u4ed6\u7684\u4e24\u4e2a\u540e\u7ee7\u4e86\u3002\n\n\u603b\u4f53\u590d\u6742\u5ea6NlogN.\n\n\u4ee3\u7801\uff1a\n\n\u5934\u6587\u4ef6\u548c\u5b9a\u4e49\uff1a\n\n```cpp\n\n#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\n#include<cmath>\n#include<set>\n#include<map>\nusing namespace std;\nint nxtA[100005][21];\nint nxtB[100005];\nint dA[100005][21];\nint d[100005][21];\nint h[100005];\nint N,M;\nset<int> s;\nset<int>::iterator p;\nmap<int,int> mp;\nconst long long INF = 1ll<<40;\n```\n\n\u9884\u5904\u7406\u90e8\u5206\uff1a\n\n```cpp\nvoid init (){\n\tlong long low1,low2,up1,up2;\n\tint idA,idB;\n\tfor(int i=N;i>=1;i--){\n\t\tlow1=low2=up1=up2=INF;\n\t\tmp[h[i]] = i;\n\t\ts.insert(h[i]);\n\t\tp = s.lower_bound(h[i]);\n\t\tint cnt = 0;\n\t\tif(p != s.begin()){\n\t\t\t--p;\n\t\t\tlow1 = (*p);\n\t\t\tif(p != s.begin()){\n\t\t\t\t--p;\n\t\t\t\tlow2 = (*p);\n\t\t\t}\n\t\t}\n\t\tp=s.upper_bound(h[i]);\n\t\tif(p != s.end()){\n\t\t\tup1 = (*p);\n\t\t\t++p;\n\t\t\tif(p != s.end()){\n\t\t\t\tup2 = (*p);\n\t\t\t}\n\t\t}\n\t\tif(abs(h[i] - low1) <= abs(up1 - h[i])){\n\t\t\tnxtB[i] = mp[low1];\n\t\t\tif(abs(h[i] - low2) <= abs(up1 - h[i])){\n\t\t\t\tnxtA[i][0] = mp[low2];\n\t\t\t}else{\n\t\t\t\tnxtA[i][0] = mp[up1];\n\t\t\t}\n\t\t}else{\n\t\t\tnxtB[i] = mp[up1];\n\t\t\tif(abs(up2 - h[i])<abs(h[i] - low1)){\n\t\t\t\tnxtA[i][0] = mp[up2];\n\t\t\t}else{\n\t\t\t\tnxtA[i][0] = mp[low1];\n\t\t\t}\n\t\t}\n\t\tdA[i][0] = abs(h[i] - h[nxtA[i][0]]);\n\t\td[i][0] = dA[i][0];\n\t}\n\tfor(int j = 1; j <= 20; j++){\n\t\tfor(int i = N;i >= 1; i--){\n\t\t\tif(j == 1){\n\t\t\t\tnxtA[i][j] = nxtB[nxtA[i][0]];\n\t\t\t\tdA[i][j] = abs(h[i] - h[nxtA[i][0]]);\n\t\t\t\td[i][j] = dA[i][j] + abs(h[nxtA[i][0]]-h[nxtA[i][j]]);\n\t\t\t}else{\n\t\t\t\tnxtA[i][j] = nxtA[nxtA[i][j-1]][j-1];\n\t\t\t\tdA[i][j] = dA[i][j-1] + dA[nxtA[i][j-1]][j-1];\n\t\t\t\td[i][j] = d[i][j-1] + d[nxtA[i][j-1]][j-1];\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n\u5de5\u4f5c\u90e8\u5206\uff1a\n\n```cpp\nlong long disA,disB;\nvoid work(int si,int xi){\n\tdisA=0;\n\tdisB=0;\n\tint p = si;\n\tfor(int j = 20;j >= 0;j--){\n\t\tif(!nxtA[p][j] || d[p][j] > xi){\n\t\t\tcontinue;\n\t\t}\n\t\txi -= d[p][j];\n\t\tdisA += dA[p][j];\n\t\tdisB += d[p][j] - dA[p][j];\n\t\tp = nxtA[p][j];\n\t}\n}\n```\n\n\u4e3b\u51fd\u6570\uff1a\n\n```cpp\nint main()\n{\n\tscanf(\"%d\",&N);\n\tfor(int i = 1; i<= N; i++){\n\t\tscanf(\"%d\",&h[i]);\n\t}\n\tinit();\n\tint S,X;\n\tdouble ans = 1e70;\n\tdouble ans1 = 0;\n\tint idans;\n\tcin>>X;\n\tfor(int i=1;i<=N;i++){\n\t\twork(i,X);\n\t\tif(disB == 0){\n\t\t\tans1 = 1e40;\n\t\t}\n\t\tans1 = (double)disA/disB;\n\t\tif(!idans || ans1 < ans || (ans1 == ans && h[i] > h[idans])){\n\t\t\tans = ans1;\n\t\t\tidans = i;\n\t\t}\n\t}\n\tcout<<idans<<endl;\n\tint Q;\n\tcin>>Q;\n\twhile(Q--){\n\t\tcin>>S>>X;\n\t\twork(S,X);\n\t\tcout<<disA<<\" \"<<disB<<endl;\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1545888660,
        "uid": 62600,
        "name": "\u9f99\u5578\u7a7a",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1081 \u3010\u5f00\u8f66\u65c5\u884c\u3011"
    },
    {
        "content": "\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u5f88\u591adalao\u90fd\u5df2\u7ecf\u8bb2\u5f97\u5f88\u6e05\u695a\u4e86\uff0c\u6211\u4e3b\u8981\u6765\u8bb2\u8bb2\u8fd9\u9898\u7684\u96be\u70b9 **\u521d\u59cb\u5316** \u7684\u4e00\u79cd\u8f83\u4e3a\u7b80\u4fbf\u7684\u65b9\u6cd5\n\n\u9996\u5148\u6211\u4eec\u8981\u77e5\u9053STL\u4e2d\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u4e1c\u897f\uff0c\u90a3\u5c31\u662fset\uff0c\u5b83\u53ef\u4ee5\u81ea\u52a8\u5c06\u52a0\u5165\u7684\u6570\u53bb\u91cd\u5e76\u6392\u5e8f\uff0c\u800c\u4e14\u53ef\u4ee5\u5141\u8bb8lower_bound(\u4e8c\u5206)\u64cd\u4f5c\n\n\u90a3\u4e48\u601d\u8def\u5c31\u5f88\u6e05\u695a\u4e86\uff0c\u6211\u4eec\u5012\u5e8f\u5904\u7406\u79bb\u6bcf\u4e2a\u57ce\u5e02\u7b2c\u4e00\u548c\u7b2c\u4e8c\u8fd1\u7684\u57ce\u5e02\uff0c\u5e76\u628a\u5b83\u52a0\u5165set\n\n#### \u5177\u4f53\u64cd\u4f5c\u4e3a:\n\n\t1.\u4e8c\u5206\u627e\u5230H\u5927\u4e8eH[i]\u7684\u7b2c\u4e00\u4e2a\u6570,\u8bbe\u5176\u5728set\u4e2d\u4f4d\u7f6e\u4e3aj\n    \n    2.\u6613\u77e5\u7b2c\u4e00\u7b2c\u4e8c\u8fd1\u53ea\u53ef\u80fd\u5728j-2,j-1,j,j+1\u4e2d\n    \n    3.\u9009\u524d\u4e24\u4e2a\u5373\u53ef\n    \n\u4e0b\u9762\u5c31\u53ea\u63d0\u4f9b\u9884\u5904\u7406\u7684\u4ee3\u7801\u4e86\n    \n```cpp\ninline void pretreat(){\n\tif(n==1){fa[1][0].i=fv[1].i=-1;return;}\n\t\n\tset<node>::iterator p;\n\tfa[n][0].i=fv[n].i=fa[n-1][0].i=-1;fv[n-1].i=n;fv[n-1].y=Abs(h[n]-h[n-1]);\n\tFor(i,1,20)fa[n][i].i=fa[n-1][i].i=-1;\n\tse.insert((node){n,h[n]}),se.insert((node){n-1,h[n-1]});\n\t\n\tDFor(i,n-2,1){\n\t\tp=se.lower_bound((node){i,h[i]});\n\t\tnode u1,u2;\n\t\tif(p==se.begin())u1=*p,++p,u2=*p;\n\t\telse if(p==se.end())--p,u2=*p,--p,u1=*p;\n\t\telse {\n\t\t\tif(i!=n-2){\n\t\t\tnod kkk[8];long long ttt=0;\n\t\t\t++p;if(p!=se.end())kkk[++ttt]=(nod){(*p).d,Abs((*p).h-h[i]),(*p).h};\n\t\t\tdo{\n\t\t\t\t--p;\n\t\t\t\tkkk[++ttt]=(nod){(*p).d,Abs((*p).h-h[i]),(*p).h};\n\t\t\t}while(ttt<4&&p!=se.begin());\n\t\t\tsort(kkk+1,kkk+1+ttt,cmp);\n\t\t\tu1=(node){kkk[1].i,kkk[1].y},u2=(node){kkk[2].i,kkk[2].y};\n\t\t\t}\n\t\t\telse u1=*p,--p,u2=*p;\n\t\t}\n\t\tlong long X1,X2;\n\t\tX1=Abs(u1.h-h[i]),X2=Abs(u2.h-h[i]);\n\t\tif(X1<=X2)fa[i][0]=(nod){u2.d,X2,0},fv[i]=(nod){u1.d,0,X1};\n\t\telse fa[i][0]=(nod){u1.d,X1,0},fv[i]=(nod){u2.d,0,X2};\n\t\tse.insert((node){i,h[i]});\n\t}\n}\n```\n\n\n```cpp\ninline void bzen(){\n\tFor(i,1,n-2)fa[i][1]=(nod){fv[fa[i][0].i].i,fa[i][0].x,fv[fa[i][0].i].y};\n\tFor(i,2,20) \n\t  For(j,1,n-2){\n\t  \tlong long u=j,v=fa[j][i-1].i;\n\t  \tif(v==-1||fa[v][i-1].i==-1)fa[j][i]=(nod){-1,0,0};\n\t  \telse fa[j][i]=(nod){fa[v][i-1].i,fa[u][i-1].x+fa[v][i-1].x,fa[u][i-1].y+fa[v][i-1].y};\n\t  }\n}\n```",
        "postTime": 1536060855,
        "uid": 7118,
        "name": "NOILinux_Ubuntu",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1081 \u3010\u5f00\u8f66\u65c5\u884c\u3011"
    },
    {
        "content": "by WNSGB\uff08\u8fd9\u662f\u6211\u7684\u5e38\u7528ID..\u4ee5\u524d\u7684\u53f7\u597d\u50cf\u4e22\u4e86\uff09\u7ec8\u4e8e\u8c03\u8fc7\u5566\uff01\n\n\u4e00\u5f00\u59cb\u53ea\u89c9\u5f97\u641e\u5b9a\u4e86pre\u8fd9\u4e2a\u9898\u968f\u968f\u4fbf\u4fbf\u5c31\u80fd\u8fc7\u4e86\u4f46\u540e\u6765\u53d1\u73b0\u8fd9\u4e2a\u9898\u500d\u589e\u8fd8\u662f\u6709\u5f88\u591a\u6280\u5de7****\n\n\u6bd4\u5982\uff1a1.\u6211\u4eec\u5b9e\u9645\u4e0a\u662f\u628a\u9898\u76ee\u4e2d\u5c0fA\u5c0fB\u5f00\u8f66\u7684\u4e24\u5929\u770b\u505a\u201d\u4e00\u5929\u201c\u6240\u4ee5fa[i][0]=Fb[Fa[i]];\uff08\u5148A\u540eB\uff09\n\nfa[i][0]\u6307\u7684\u662f\u4ece\u7b2ci\u4e2a\u57ce\u5e02\u8d70\u4e00\u6b21\u64cd\u4f5c\uff08\u5373\u4e0a\u9762\u7684\u201c\u4e00\u5929\u201d\uff09\u5230\u8fbe\u7684\u4e0b\u4e00\u4e2a\u57ce\u5e02\u3002Fa[i]\u548cFb[i]\u662f\u5728\u9884\u5904\u7406\u4e2d\u5f97\u5230\u7684\u4ece\u7b2ci\u4e2a\u57ce\u5e02\u51fa\u53d1a\u80fd\u5230\u8fbe\u7684\u548cb\u80fd\u5230\u8fbe\u7684\u57ce\u5e02\u8fd9\u6837\u6211\u4eec\u5c31\u907f\u514d\u4e86\u5206\u522b\u8003\u8651\u4eca\u5929\u8be5\u8c01\u8d70\u7684\u8fd9\u79cd\u60c5\u51b5\uff0c\u5927\u5927\u7b80\u5316\u4e86\u7a0b\u5e8f\u5b9e\u73b0\u7684\u7ec6\u8282\u3002\u53ea\u9700\u8981\u5728\u67e5\u8be2\u7684\u65f6\u5019\u5224\u65ad\u662f\u5426\u5b58\u5728A\u80fd\u8d70\u800cB\u4e0d\u80fd\u8d70\u7684\u60c5\u51b5\u5e76\u5728\u8ba1\u7b97\u8def\u7a0b\u65f6\u52a0\u4e0a\u5c31\u597d\u4e86\u3002\u540c\u6837\u7684\u6839\u636e\u4e0a\u9762\u7684\u601d\u8def\uff08A\u548cB\u4e24\u5929\u7684\u884c\u8d70\u770b\u6210\u662f\u4e00\u6b21\u64cd\u4f5c\uff08\u5373\u201c\u4e00\u5929\u201d\uff09\uff09DDa[i][k]\u8868\u793a\u8d702^k\u5929\uff08\u8fd9\u91cc\u7684\u5929\u6307\u4e4b\u524d\u6211\u4eec\u5b9a\u4e49\u7684\u4e00\u6b21\u64cd\u4f5c\uff09A\u8d70\u7684\u8def\u7a0b\u3002DDb\u540c\u7406\u3002\n\n\u867d\u7136\u65e0\u8bba\u600e\u4e48\u5199\u5728oj\u4e0a\u90fd\u79d2\u8fc7\u4f46\u662f\u4e0d\u5f97\u4e0d\u627f\u8ba4set\u5e38\u6570\u6781\u5927\uff0c\u7528\u5b66\u6821\u673a\u623f\u7684cena\u8981\u8c03\u6210\u4e24\u79d2\u8fd8\u662f\u5361\u8fc7\uff0c\u6240\u4ee5\u6709\u4e9b\u53ef\u4ee5\u7528abs\u73b0\u7b97\u7684\u5730\u65b9\u5168\u90fd\u5728pre\u4e2d\u7528Da\u548cDb\u5b58\u597d\u4e86\uff08\u4e0d\u7136cena\u6700\u540e\u4e00\u4e2a\u70b9\u8fc7\u4e0d\u4e86\uff0c\u4e0d\u77e5\u9053\u8981\u662f\u8054\u8d5b\u4f1a\u600e\u4e48\u6837\uff0c\u8ba9\u6b63\u89e3\u548c\u66b4\u529b\u4e00\u4e2a\u5206\u5417...\uff09\n\n2.\u500d\u589e\u7684\u67e5\u8be2\u65b9\u5f0f\u548clca\u7684\u8df3\u8868\u5230deep\u76f8\u540c\u540e\u4e00\u8d77\u8df3\u7684\u601d\u60f3\u5dee\u4e0d\u591a\uff0c\u5927\u5bb6\u53ef\u4ee5\u4f53\u4f1a\u4e00\u4e0b\u3002\n\n\u597d\u5427\uff0c\u8fd9\u4e2a\u9898\u6700\u96be\u7684\u8fd8\u662fpre\u90e8\u5206\n\n\u7b49\u4e0b\u7a0d\u5fae\u5410\u69fd\u4e00\u4e0b\u8fd9\u4e2a\u9898\uff0cnoipT3\u90fd\u662f\u9760\u4e0d\u65ad\u6269\u5927\u6570\u636e\u8303\u56f4\u4f18\u5316\u66b4\u529b\u5f97\u5230\u6b63\u89e3\u7684\u54170.0\n\n\u8003\u8651\u5982\u4f55\u4f18\u5316\u4e00\u4e2an\\*n\u7684\u9884\u5904\u7406\n\n\u56e0\u4e3a\u5728\u7b2c\u4e8c\u91cd\u5faa\u73af\u4e2d\u6709\u4e9b\u70b9\u662f\u6ca1\u5fc5\u8981\u8003\u8651\u7684\u7ecf\u8fc7\u5206\u6790\u53ef\u5f97\u6700\u8fd1\u548c\u6b21\u8fd1\u7684\u57ce\u5e02\u4e00\u5b9a\u662f\u5728\u5f53\u524d\u57ce\u5e02\u7684\u4e24\u4fa7\uff08\u80af\u5b9a\u662f\u6309\u6d77\u62d4\u6392\u5e8f\u5047\u5982\u57ce\u5e02\u4e3ai\uff0c\u53ea\u9700\u8981\u8003\u8651i+1\uff0ci+2\uff0ci-1\uff0ci-2\u5373\u53ef\uff09\uff0c\u5b9e\u73b0\u8fd9\u6b65\u64cd\u4f5c\u9664\u4e86\u53cc\u5411\u94fe\u8868\u4ee5\u5916\uff0c\u5c31\u662f\u6211\u7528\u7684set\uff08\u5145\u5f53\u4e86\u5e73\u8861\u6811\uff09\uff08\u542c\u8bf4\u8fd8\u6709\u7528\u79bb\u6563\u5316+\u7ebf\u6bb5\u6811\u7684\uff09\n\n\u8fd8\u6709set\u67e5\u627e\u7684\u65f6\u5019\u6ca1\u6709\u5fc5\u8981\u7528lower\\_bound\u6216\u662fupper\\_bound\u76f4\u63a5find\u4e4b\u540e\u5bf9\u6307\u9488++--\u5c31\u884c\u4e86\n\n\u4e0d\u77e5\u4e0d\u89c9\u7ec6\u8282\u90fd\u8bf4\u5b8c\u4e860.0\u7ba1\u7406\u5458\u7ed9\u901a\u8fc7\u5427...\u8fd9\u662f\u539f\u521b\u9898\u89e3\u554a0.0\n\n\u8fd8\u6709\u63d0\u9192\u4e00\u4e0b\u770b\u9898\u89e3\u7684\u540c\u5fd7\u4eec\uff1a\u4e00\u5b9a\u4ed4\u7ec6\u5730\u770b\u5b8c\u4e0a\u9762\u7684\u9898\u89e3\uff0c\u4e0d\u7136\u4e0d\u53ef\u80fd\u5b8c\u5168\u7406\u89e3\u4ee3\u7801\u53ca\u5176\u7ec6\u8282\uff01\n\n\u9644AC\u4ee3\u7801\uff1a\n\n\n\n\n\n\n\n\n\n    \n\n\n\n    \n        \n    \n    \n    \n```cpp\n#include<set>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#define INF 2147483647\nusing namespace std;\nconst int maxn=100000+10;\nint n,q,X0;\nstruct node{\n    int height,id;\n    bool operator < (const node &a)const{//\u91cd\u8f7dsort\u4e2d\u7684\u5c0f\u4e8e\u53f7 \n        return height<a.height;\n    }\n}h[maxn];\nstruct node2{\n    int delt,id;\n    bool operator < (const node2 &a)const{//\u91cd\u8f7dset\u4e2d\u7684\u5c0f\u4e8e\u53f7 \n        if(delt!=a.delt)\n            return delt<a.delt;\n        else\n            return h[id].height<h[a.id].height;\n    }\n}temp[10];\nset<node>s;\nset<node>::iterator it;\nint Fa[maxn],Fb[maxn];\nint Da[maxn],Db[maxn];\nint fa[maxn][20],DDa[maxn][20],DDb[maxn][20];\nint inline read(){\n    int num=0;\n    char c;\n    bool plus=true;\n    while((c=getchar())==' '||c=='\\n'||c=='\\r');\n    if(c=='-')plus=false;\n    else num=c-'0';\n    while(isdigit(c=getchar()))\n        num=num*10+c-'0';\n    return num*(plus?1:-1);\n}\nvoid pre(){\n    int cnt;\n    for(int i=n;i>=1;i--){//\u4f7f\u7528set\u5b9e\u73b0\u7684\u5e73\u8861\u6811\u6765\u9884\u5904\u7406\u8981\u6839\u636e\u987a\u5e8f\u9006\u5411\u63d2\u5165  \u53cc\u5411\u94fe\u8868\u4e5f\u53ef\u4ee5 \n        s.insert(h[i]);\n        it=s.find(h[i]);\n        cnt=0;\n        if(it!=s.begin()){\n            it--;\n            temp[++cnt]=(node2){abs((*it).height-h[i].height),(*it).id};\n            if(it!=s.begin()){\n                it--;\n                temp[++cnt]=(node2){abs((*it).height-h[i].height),(*it).id};\n                it++;\n            }\n            it++;\n        }\n        if((++it)!=s.end()){//end\u6307\u5411\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u540e\u4e00\u4f4d\u6240\u4ee5\u5148++\n            temp[++cnt]=(node2){abs((*it).height-h[i].height),(*it).id};\n            if((++it)!=s.end()){\n                temp[++cnt]=(node2){abs((*it).height-h[i].height),(*it).id};\n                it--;//\u8fd9\u91cc\u4e0d\u51cf\u4e5f\u53ef\n            }\n            it--;\n        }\n        sort(temp+1,temp+cnt+1);\n        if(temp[1].id){\n            Db[i]=temp[1].delt;\n            Fb[i]=temp[1].id;\n        }\n        if(temp[2].id){\n            Da[i]=temp[2].delt;\n            Fa[i]=temp[2].id;\n        }\n    }\n    for(int i=1;i<=n;i++){\n        int f1=Fa[i],f2=Fb[Fa[i]];\n        DDa[i][0]=f1!=0?Da[i]:0;\n        DDb[i][0]=f2!=0?Db[f1]:0;\n        fa[i][0]=f2;\n    }\n    for(int k=1;k<=16;k++)\n        for(int i=1;i<=n;i++){\n            if(fa[fa[i][k-1]][k-1]){\n                fa[i][k]=fa[fa[i][k-1]][k-1];\n                DDa[i][k]=DDa[i][k-1]+DDa[fa[i][k-1]][k-1];\n                DDb[i][k]=DDb[i][k-1]+DDb[fa[i][k-1]][k-1];\n            }\n        }\n}\ndouble task1(int s,int x){\n    long long xa=0,xb=0;\n    for(int i=16;i>=0;i--){//\u5012\u7740\u6765\u548clca\u5dee\u4e0d\u591a\n        if(fa[s][i]&&DDa[s][i]+DDb[s][i]<=x){\n            xa+=DDa[s][i];\n            xb+=DDb[s][i];\n            x-=DDa[s][i]+DDb[s][i];\n            s=fa[s][i];\n        }\n    }\n    if(Fa[s]&&DDa[s][0]<=x){\n        xa+=DDa[s][0];\n    }\n    if(xb==0)return (double)INF;\n    else return double(xa)/(double)xb;\n}\nvoid task2(int s,int x){\n    long long xa=0,xb=0;\n    for(int i=16;i>=0;i--){\n        if(fa[s][i]&&DDa[s][i]+DDb[s][i]<=x){\n            xa+=DDa[s][i];\n            xb+=DDb[s][i];\n            x-=DDa[s][i]+DDb[s][i];\n            s=fa[s][i];    \n        }\n    }\n    if(Fa[s]&&DDa[s][0]<=x){\n        xa+=DDa[s][0];\n    }\n    cout<<xa<<\" \"<<xb<<endl;\n}\nint main(){\n    n=read();\n    for(int i=1;i<=n;i++){\n        h[i].height=read();\n        h[i].id=i;\n    }\n    pre();\n    X0=read();\n    double ans=(double)INF+(double)INF;\n    int ansi;\n    for(int i=1;i<=n;i++){\n        double tmp=task1(i,X0);\n        if(ans>tmp||(ans==tmp&&h[i].height>h[ansi].height)){\n            ans=tmp;\n            ansi=i;\n        }\n    }\n    printf(\"%d\\n\",ansi);\n    q=read();\n    int x,s;\n    for(int i=1;i<=q;i++){\n        s=read(); x=read();\n        task2(s,x);\n    }\n    return 0;\n}\n\n```",
        "postTime": 1479211222,
        "uid": 16812,
        "name": "Neumann",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1081 \u3010\u5f00\u8f66\u65c5\u884c\u3011"
    },
    {
        "content": "## **\u65b9\u6cd5\uff1a\u500d\u589e**\n\n\u9898\u76ee\u5751\u70b9\uff1a\n\n1.\u5c0fA\u4e00\u6b21\u5f00\u5230\u76f8\u90bb\u7b2c\u4e8c\u8fd1\u7684\u57ce\u5e02\uff0c\u5c0fB\u4e00\u6b21\u5f00\u5230\u76f8\u90bb\u7b2c\u4e00\u8fd1\u7684\u57ce\u5e02\n\n2.\u5728\u7b2c\u4e00\u4e2a\u95ee\u9898\u4e2d\uff0c\u5982\u679c\u4ece\u591a\u4e2a\u57ce\u5e02\u51fa\u53d1\u65f6\u6bd4\u503c\u76f8\u540c\uff0c\u53d6\u6d77\u62d4\u6700\u5927\u7684\u57ce\u5e02\n\n3.\u53ea\u80fd\u5411\u4e1c\u884c\u9a76\uff0c\u5373\u4e0d\u80fd\u4ece\u540e\u8f93\u5165\u7684\u57ce\u5e02\u5f00\u5230\u5148\u8f93\u5165\u7684\u57ce\u5e02\n\n### \u9884\u5904\u7406\n\n**\u9884\u5904\u74061\uff1a**\n\n\u901a\u8fc7\u5012\u5e8f\u6c42\u51fa\u5c0fA\u548c\u5c0fB\u4ece\u6bcf\u4e2a\u57ce\u5e02i\u51fa\u53d1\uff0c\u6cbf\u524d\u8fdb\u65b9\u5411\u884c\u9a76\u5230\u7684\u4e0b\u4e00\u4e2a\u57ce\u5e02\uff0c\u5206\u522b\u8bb0\u4e3aga[i],gb[i]\uff0c\u6ce8\u610fga[i]\u662f\u76f8\u90bb\u7684\u7b2c\u4e8c\u4e2a\u57ce\u5e02\n\n\u65b9\u6cd5\uff1aSTL-set/\u53cc\u5411\u94fe\u8868/\u624b\u5199\u5e73\u8861\u6811,\u6211\u9009\u62e9\u4e86\u540e\u8005\n\n**\u9884\u5904\u74062\uff1a\u76ee\u7684\u5730**\n\n\u8bbe$f[i][j][k]$\u8868\u793a\u4ece\u57ce\u5e02j\u51fa\u53d1\uff0c\u4e24\u4eba\u5171\u884c\u9a762^i\u5929\uff0ck(0/1)\u5148\u5f00\u8f66\u6700\u7ec8\u56de\u5230\u5927\u7684\u57ce\u5e02\n\n\u663e\u7136\uff0c$f[0][j][0]=ga[j],f[0][j][1]=gb[j]$\n\n\u5f53i=1\u65f6\uff0c\u56e0\u4e3a2^0=1\u662f\u5947\u6570\uff0c\u6240\u4ee5\u4e24\u4eba\u4ecej\u51fa\u53d12^1\u5929\u7b49\u4e8e\u5c0fA\u5f00\u4e00\u5929\uff0c\u5c0fB\u5f00\u4e00\u5929\n\n\u5373$f[1][j][k]=f[0][f[0][j][k]][1-k]$\n\n\u5f53i>1\u65f6\uff0c\u56e0\u4e3a2^i\u662f\u5076\u6570\uff0c\u6240\u4ee5\u524d\u540e\u534a\u7a0b\u90fd\u662fk\u5148\u5f00\u8f66\n\n\u5373$f[i][j][k]=f[i-1][f[i-1][j][k]][k]$\n\nPS\uff1a\u6ce8\u610fga\uff0cgb\uff0cf\u8d85\u51fa\u8fb9\u754c\u7684\u60c5\u51b5\uff0c\u5728\u8fd9\u91cc\u6211\u628a\u6570\u7ec4\u5f00\u5927\u4e86\u4e00\u4e9b\n\n\u9884\u5904\u74063\uff08dp\uff09\uff1a\u884c\u9a76\u8def\u7a0b\u957f\u5ea6\n\n\u8bbe$da[i][j][k]$\u8868\u793a\u4ece\u57ce\u5e02j\u51fa\u53d1\uff0c\u4e24\u4eba\u5171\u884c\u9a762^i\u5929\uff0ck\u5148\u5f00\u8f66\uff0c\u5c0fA\u884c\u9a76\u7684\u8def\u7a0b\n\n\u8bbe$db[i][j][k]$\u8868\u793a\u4ece\u57ce\u5e02j\u51fa\u53d1\uff0c\u4e24\u4eba\u5171\u884c\u9a762^i\u5929\uff0ck\u5148\u5f00\u8f66\uff0c\u5c0fB\u884c\u9a76\u7684\u8def\u7a0b\n\n\u663e\u7136\uff0c$da[0][j][0]=dis(j,ga[j]), da[0][j][1]=0$\n\n$db[0][j][0]=0,db[0][j][1]=dis(i,gb[j])$\n\ndis(i,j)\u8868\u793ai\u53f7\u57ce\u5e02\u548cj\u53f7\u57ce\u5e02\u7684\u6d77\u62d4\u5dee\u7684\u7edd\u5bf9\u503c\uff0c\u5373i\u57ce\u4e0ej\u57ce\u7684\u8ddd\u79bb\n\n\u5f53i=1\u65f6\uff0cda[0][j][k]\u4e3a\u7b2c\u4e00\u5929\u5c0fa\u884c\u9a76\u7684\u8def\u7a0b\uff0cda[0][f[0][j][k]][1-k]\u4e3a\u7b2c\u4e8c\u5929\u5c0fa\u884c\u9a76\u7684\u8def\u7a0b\n\n$\u2234da[1][j][k]= da[0][j][k]+da[0][f[0][j][k]][1-k]$\n\n\u540c\u7406$db[1][j][k]= db[0][j][k]+db[0][f[0][j][k]][1-k]$\n\n\u5f53i>1\u65f6\uff0c$da[i-1][j][k]$\u4e3a\u524d\u534a\u6bb5\u5c0fa\u884c\u9a76\u7684\u8def\u7a0b\uff0c$da[i-1][f[i-1][j][k]][k]$\u4e3a\u540e\u534a\u6bb5\u5c0fa\u884c\u9a76\u7684\u8def\u7a0b\n\n\u2234$da[i][j][k]= da[i-1][j][k]+da[i-1][f[i-1][j][k]][k]$\n\n\u540c\u7406$db[i][j][k]= db[i-1][j][k]+db[i-1][f[i-1][j][k]][k]$\n\n### **\u56de\u7b54\u8be2\u95ee**\n\n**\u5bf9\u4e8e\u95ee\u98982**\n\n\u521d\u59cb\u5316\u5f53\u524d\u57ce\u5e02p=S\uff0c\u5c0fA\u3001\u5c0fB\u5206\u522b\u7d2f\u8ba1\u884c\u9a76\u4e86la\uff0clb\u7684\u8def\u7a0b\n\n\u5012\u5e8f\u5faa\u73afi=logn~0\n\n\u5bf9\u4e8e\u6bcf\u4e2ai\uff0c\u82e5\u4e24\u4eba\u5df2\u884c\u9a76\u8def\u7a0b+\u4ecep\u884c\u9a762^i\u7684\u8def\u7a0b\u4ecd<=X,\n\n\u5373$la+lb+da[i][p][0]+db[i][p][0]<=X,$\n\n\u5219\u52a0\u4e0a\u8fd9\u4e00\u6bb5\u8def\u7a0b\uff0c\u5e76\u66f4\u65b0p\u7684\u4f4d\u7f6e\n\n\u5373$la+=da[i][p][0],lb+=db[i][p][0],p=f[i][p][0]$\n\n\u5faa\u73af\u7ed3\u675f\u540ela\uff0clb\u4e3a\u6240\u6c42\n\n\n**\u5bf9\u4e8e\u95ee\u98981**\n\n\u53ea\u8981\u679a\u4e3e\u51fa\u53d1\u57ce\u5e02\uff0c\u5e76\u6267\u884c\u95ee\u98982\u7684\u89e3\u6cd5\uff0c\u6700\u540e\u518d\u627e\u51fala\uff1alb\u6bd4\u503c\u6700\u5c0f\u7684\u57ce\u5e02\u8f93\u51fa\u5373\u53ef\n\n$Code:$\n```\n//\u7801\u98ce\u7565\u4e11\n#include <set>\n#include <cstdio>\n#include <iostream>\n#include <cstdlib>\nusing namespace std;\nint n,x0,m,s,x;\ndouble ans;\nlong long h[100005],ga[100005],gb[100005];\nlong long f[18][100005][2];\nlong long da[18][100005][2],db[18][100005][2];\nconst int INF=0x7fffffff;\nlong long Abs(long long sum){\n    if(sum<0)return -sum;\n    return sum;\n}\nnamespace tree{\n    struct treap{\n        int l,r,val,dat,note;\n    }a[100005];\n    int tot,root;\n    int New(int val){\n        a[++tot].val=val;\n        a[tot].dat=rand();\n        a[tot].note=n+3-tot;\n        return tot;\n    }\n    void build(){\n        New(-INF);New(INF);\n        root=1;a[root].r=2;\n    }\n    void zig(int &p){\n        int q=a[p].l;\n        a[p].l=a[q].r;a[q].r=p;p=q;\n    }\n    void zag(int &p){\n        int q=a[p].r;\n        a[p].r=a[q].l;a[q].l=p;p=q;\n    } \n    void ins(int &p,int val){\n        if(p==0){\n            p=New(val);\n            return ;\n        }\n        if(a[p].val<val){\n            ins(a[p].r,val);\n            if(a[a[p].r].dat>a[p].dat)zag(p);\n        }\n        else{\n            ins(a[p].l,val);\n            if(a[a[p].l].dat>a[p].dat)zig(p);\n        }\n    } \n    int pre(int val){\n        int ans=1,p=root;\n        while(p!=0){\n            if(a[p].val==val){\n                if(a[p].l){\n                    p=a[p].l;\n                    while(a[p].r)p=a[p].r;\n                    ans=p;\n                }\n                break;\n            }\n            if(a[p].val<val&&a[p].val>a[ans].val)ans=p;\n            if(a[p].val>val)p=a[p].l;\n            else p=a[p].r;\n        }\n        return a[ans].note;\n    }\n    int suc(int val){\n        int ans=2,p=root;\n        while(p!=0){\n            if(a[p].val==val){\n                if(a[p].r){\n                    p=a[p].r;\n                    while(a[p].l)p=a[p].l;\n                    ans=p;\n                }\n                break;\n            }\n            if(a[p].val>val&&a[p].val<a[ans].val)ans=p;\n            if(a[p].val>val)p=a[p].l;\n            else p=a[p].r;\n        }\n        return a[ans].note;\n    }\n}\nint cal_gab(){//\u8ba1\u7b97ga\u548cgb\n    using namespace tree;\n    build();\n    int s1,s2,s3,s4;\n    h[n+1]=INF;h[n+2]=-INF;\n    for(int i=n;i>=1;i--){\n        ins(root,h[i]);\n        s1=pre(h[i]);s2=pre(h[s1]);\n        s3=suc(h[i]);s4=suc(h[s3]);\n        if(Abs(h[i]-h[s1])<=Abs(h[i]-h[s3])){\n            gb[i]=s1;\n            if(Abs(h[i]-h[s2])<=Abs(h[i]-h[s3]))ga[i]=s2;\n            else ga[i]=s3;\n        }\n        else{\n            gb[i]=s3;\n            if(Abs(h[i]-h[s1])<=Abs(h[i]-h[s4]))ga[i]=s1;\n            else ga[i]=s4;\n        }\n    }\n}\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++)scanf(\"%lld\",&h[i]);\n    cal_gab();\n    for(int i=1;i<=n;i++)\n    f[0][i][0]=ga[i],f[0][i][1]=gb[i];\n    for(int i=1;i<=n;i++){\n        f[1][i][0]=f[0][f[0][i][0]][1];\n        f[1][i][1]=f[0][f[0][i][1]][0];\n    }\n    for(int i=2;i<=17;i++){\n        for(int j=1;j<=n;j++){\n            for(int k=0;k<=1;k++){\n                f[i][j][k]=f[i-1][f[i-1][j][k]][k];\n            }\n        }\n    }//\u8ba1\u7b97f\n    for(int j=1;j<=n;j++){\n        da[0][j][0]=Abs(h[j]-h[ga[j]]);\n        db[0][j][1]=Abs(h[j]-h[gb[j]]);\n    }\n    for(int j=1;j<=n;j++){\n        for(int k=0;k<=1;k++){\n            da[1][j][k]=da[0][j][k]+da[0][f[0][j][k]][1-k];\n            db[1][j][k]=db[0][j][k]+db[0][f[0][j][k]][1-k];\n        }\n    }\n    for(int i=2;i<=17;i++){\n        for(int j=1;j<=n;j++){\n            for(int k=0;k<=1;k++){\n                da[i][j][k]=da[i-1][j][k]+da[i-1][f[i-1][j][k]][k];\n                db[i][j][k]=db[i-1][j][k]+db[i-1][f[i-1][j][k]][k];\n            }\n        }\n    }//\u8ba1\u7b97da\uff0cdb\n    ans=INF;int wans=0;h[0]=-INF;ans=INF;\n    scanf(\"%d%d\",&x0,&m);\n    for(int T=1;T<=n;T++){\n    \tdouble la=0,lb=0;\n        int p=T;\n    \tfor(int i=17;i>=0;i--){\n            if(la+lb+da[i][p][0]+db[i][p][0]<=x0){\n                la+=da[i][p][0];\n                lb+=db[i][p][0];\n                p=f[i][p][0];\n            }\n        }\n        if(lb==0){\n        \tif(ans==INF&&h[T]>h[wans])wans=T;\n        }\n        else if((ans>(la*1.0/lb*1.0))||((ans==(la*1.0/lb*1.0))&&h[T]>h[wans]))ans=(la*1.0/lb*1.0),wans=T;\n    }\n    printf(\"%d\\n\",wans);\n    for(int T=1;T<=m;T++){\n        scanf(\"%d%d\",&s,&x);\n        double la=0,lb=0;\n        int p=s;\n        for(int i=17;i>=0;i--){\n            if(la+lb+da[i][p][0]+db[i][p][0]<=x){\n                la+=da[i][p][0];\n                lb+=db[i][p][0];\n                p=f[i][p][0];\n            }\n        }\n        printf(\"%.0lf %.0lf\\n\",la,lb);\n    }\n}\n\n```",
        "postTime": 1562744302,
        "uid": 14559,
        "name": "AFOier",
        "ccfLevel": 7,
        "title": "\u9898\u89e3 P1081 \u3010\u5f00\u8f66\u65c5\u884c\u3011"
    },
    {
        "content": "\u8fd9\u4e0d\u662f\u4e00\u9053\u51b3\u7b56\u9009\u62e9\u9898\u76ee\uff0c\u4ece\u6bcf\u4e00\u4e2a\u70b9\u51fa\u53d1\uff0c\u5c06\u8981\u7ecf\u8fc7\u7684\u8def\u5f84\u9664\u4e86\u53d7x\u503c\u6240\u5f71\u54cd\u800c\u5728\u957f\u5ea6\u6709\u53d8\u5316\u5916\uff0c\u5b9e\u9645\u4e0a\u662f\u56fa\u5b9a\u7684\uff0c\u8fd9\u4e2a\u662f\u500d\u589e\u7684\u57fa\u7840\n\n- \u4ece\u4e00\u4e2a\u8282\u70b9\u5230\u53e6\u4e00\u4e2a\u8282\u70b9\u7684\u957f\u5ea6\u5b9e\u5219\u4e3a\u4e24\u4e2a\u8282\u70b9\u6743\u503c\u4e4b\u5dee\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u6700\u5c0f\u70b9\u4e0e\u6b21\u5c0f\u70b9\u90fd\u4f4d\u4e8e\u8be5\u8282\u70b9\u7684\u53f3\u4fa7\n\n- \u9898\u76ee\u53ef\u4ee5\u5206\u4e09\u90e8\u5206\u89e3\u51b3\uff0c\u7b2c\u4e00\u90e8\u5206\u7528\u4e8e\u9884\u5904\u7406\u6bcf\u4e2a\u8282\u70b9\u53f3\u4fa7\u6700\u5c0f\u70b9\u4e0e\u6b21\u5c0f\u70b9\uff0c\u7b2c\u4e8c\u90e8\u5206\u7528\u4e8e\u500d\u589e\u9884\u5904\u7406\u5c06\u65f6\u95f4\u8d1f\u590d\u6742\u5ea6\u964d\u4e3aO(1)\uff0c\u7b2c\u4e09\u90e8\u5206\u7528\u4e8e\u89e3\u51b3\u95ee\u9898\n\n**First part**\n\n\u6211\u91c7\u7528\u7684\u6807\u8bb0+Fenwick\u6811+vector\u6c42\u89e3\uff0c\u53ef\u60dc\u5e38\u6570\u8f83\u5927(\u6b63\u89e3\u53cc\u5411\u94fe\u8868\uff0cO(1)\u590d\u6742\u5ea6+\u6781\u5c0f\u5e38\u6570)\n\n- vector\u6309\u987a\u5e8f\u5b58\u5165\u6bcf\u4e2a\u8282\u70b9\u7684ID\u548c\u6743\u503c\uff0c\u7136\u540e\u4ee5\u6743\u503c\u4e3a\u6bd4\u8f83\u5bf9\u8c61\u8fdb\u884c\u6392\u5e8f\n\n- \u8bbe\u67d0\u8282\u70b9\u4f4d\u7f6e\u4e3ai\uff0c\u6613\u77e5\u6bcf\u4e2a\u70b9\u7684\u6700\u5c0f\u70b9\u548c\u6b21\u5c0f\u70b9\u7684\u4f4d\u7f6e\u4f4d\u4e8e[i-2, i+2] \u8fd9\u4e2a\u533a\u95f4\u4e2d(\u5047\u8bbe\u8be5\u533a\u95f4\u4e2d\u7684\u6240\u6709\u8282\u70b9\u4f4d\u4e8e\u8be5\u8282\u70b9\u7684\u53f3\u4fa7)(\u5f53\u7136\u4e0d\u662f\u8be5\u8282\u70b9\u672c\u8eab)\n\n- \u8ba9\u6211\u4eec\u4ece\u6700\u5de6\u4fa7\u8282\u70b9\u5411\u53f3\u5f00\u59cb\u5bfb\u627e\uff0c\u6bcf\u6b21\u786e\u8ba4\u4e86\u6700\u5c0f\u70b9\u548c\u6b21\u5c0f\u70b9\u540e\u5c31\u5c06\u5b83\u4ecevector\u4e2derase\uff0c\u5373\u53ef\u4fdd\u8bc1\u6bcf\u4e2a\u8282\u70b9\u5bfb\u627e\u5230\u7684\u6700\u5c0f\u503c\u90fd\u4f4d\u4e8e\u8be5\u8282\u70b9\u7684\u53f3\u4fa7\n\n- \u4e3a\u4e86\u4fdd\u8bc1\u67e5\u627e\u4e0eerase\u662f\u4ece1~n\u7684\uff0c\u6211\u4eec\u9700\u8981\u5f97\u5230\u6bcf\u4e2a\u8282\u70b9\u5728vector\u4e2d\u52a8\u6001\u7684\u4f4d\u7f6e\uff0c\u5728\u8fd9\u91cc\u6211\u91c7\u7528\u4e86Fenwick\u6811\u83b7\u5f97\u52a8\u6001\u4f4d\u7f6e\n\n1. \u5c06\u6bcf\u4e2a\u8282\u70b9\u7684\u521d\u59cb\u4f4d\u7f6e\u8fdb\u884c\u6807\u8bb0\uff0c\u7136\u540e\u6bcf\u6b21\u51favector\u4fbf\u5728\u8be5\u4f4d\u7f6e\u4e2dFenwick\u6811\u589e\u52a0\u503c\uff0c\u503c\u4e3a1\n\n2. \u6bcf\u6b21\u8981\u67e5\u8be2\u67d0\u4e2a\u70b9\uff0c\u8be5\u8282\u70b9\u7684\u52a8\u6001\u4f4d\u7f6e\u4e3a\u6807\u8bb0\u4f4d\u7f6e-\u6807\u8bb0\u4f4d\u7f6e\u524d\u65b9\u5df2\u7ecferase\u6389\u7684\u70b9\n\n- \u6709\u4e00\u4e2a\u5c0f\u7ec6\u8282\uff0c\u5f53\u4e24\u70b9\u7684\u8ddd\u79bb\u76f8\u540c\u65f6\u6d77\u62d4\u8f83\u4f4e\u800c\u4f18\u5148\u7ea7\u9ad8\n\n**Second part**\n\n\u91c7\u7528\u500d\u589e\u6c42\u89e3(\u500d\u589e\u4e5f\u4e3a\u6b63\u89e3\uff0c\u4e5f\u53ea\u6709\u500d\u589e\u4e3a\u6b63\u89e3)\n\n- \u4e0d\u96be\u53d1\u73b0\uff0c\u4ece\u4efb\u610f\u8282\u70b9\u51fa\u53d1\u5148\u7531A\u5f00\u8f66\uff0c\u7ecf\u8fc72\u76840\u6b21\u65b9\u4e2a\u70b9\u540e\u4e3aB\u5f00\u8f66\uff0c\u7ecf\u8fc72\u76841\u6b21\u65b9\u7684\u70b9\u540e\u4e3aA\u5f00\u8f66\uff0c\u7ecf\u8fc72\u76842\u6b21\u65b9\u7684\u70b9\u540e\u4e3aA\u5f00\u8f66...\u4ee5\u6b64\u7c7b\u63a8\u4e0d\u9700\u8981\u7279\u5224B\u5f00\u8f66\u7684\u60c5\u51b5\n\n- \u5f00\u8f66\u7ecf\u8fc7\u7684\u603b\u8ddd\u79bb\u4e3aA\u5f00\u8f66\u7684\u8ddd\u79bb+B\u5f00\u8f66\u7684\u8ddd\u79bb\uff0c\u5f00\u4e24\u4e2a\u6570\u7ec4\u5206\u522b\u8bb0\u5f55\u5373\u53ef\n\n- \u8bbe\u53ef\u7ecf\u8fc7\u8def\u7a0b\u4e3aX\uff0c\u8fdb\u5165\u9012\u5f52\u51fd\u6570\u8fdb\u884c\u6a21\u62df\u76f4\u5230\u603b\u8def\u7a0b\u6700\u63a5\u8fd1X\u4f4d\u7f6e\n\n- \u6709\u4e00\u4e2a\u5c0f\u7ec6\u8282\uff0c\u8def\u7a0b\u53ef\u80fd\u4f1a\u7206int\u6240\u4ee5\u8981\u5f00long long\n\n**Third part**\n\n1. \u679a\u4e3e\u8282\u70b9\u7136\u540e\u4ee5X0\u4e3a\u8ddd\u79bb\u9650\u5236\u8fdb\u884c\u5224\u65ad\u6700\u4f18\u503c\n\n2. \u53d6\u51fa\u9884\u5b58\u597d\u7684\u67e5\u8be2\u5185\u5bb9\u8fdb\u884c\u67e5\u8be2\n\n- \u8fd9\u4e00\u6bb5\u7684\u7ec6\u8282\u975e\u5e38\u591a\n\n\u622a\u53d6\u9898\u9762 \u5bf9\u4e8e\u4e00\u4e2a\u7ed9\u5b9a\u7684 X=X0\u4ece\u54ea\u4e00\u4e2a\u57ce\u5e02\u51fa\u53d1\uff0c\u5c0f A \u5f00\u8f66\u884c\u9a76\u7684\u8def\u7a0b\u603b\u6570\u4e0e\u5c0f BB \u884c\u9a76\u7684\u8def\u7a0b\u603b\u6570\u7684\u6bd4\u503c\u6700\u5c0f\uff08**\u5982\u679c\u5c0f B \u7684\u884c\u9a76\u8def\u7a0b 0\uff0c\u6b64\u65f6\u7684\u6bd4\u503c\u53ef\u89c6\u4e3a\u65e0\u7a77\u5927\uff0c\u4e14\u4e24\u4e2a\u65e0\u7a77\u5927\u89c6\u4e3a\u76f8\u7b49**\uff09\u3002\u5982\u679c\u4ece\u591a\u4e2a\u57ce\u5e02\u51fa\u53d1\uff0c\u5c0f A \u5f00\u8f66\u884c\u9a76\u7684\u8def\u7a0b\u603b\u6570\u4e0e\u5c0fB\u884c\u9a76\u7684\u8def\u7a0b\u603b\u6570\u7684**\u6bd4\u503c\u90fd\u6700\u5c0f\uff0c\u5219\u8f93\u51fa\u6d77\u62d4\u6700\u9ad8\u7684\u90a3\u4e2a\u57ce\u5e02\u3002**\n\n```\n#include<cstdio>\n#include<iostream>\n#include<cstring>\n#include<cctype>\n#include<algorithm>\n#include<cmath>\n#include<vector>\n#include<time.h>\nusing namespace std;\ninline int in();\ninline void put(long long);\nvoid gosearch(int);\nvoid add(int x, int y);\nint sum(int x);\nint pit(int x) {return x&-x;}\n\nstruct Node{\n    int high, id;\n    Node (int a = 0, int b = 0) : high(a), id(b) {}\n    bool operator < (const Node& temp) const {\n        return high > temp.high;\n    }\n};\nconst int INF = 2147483645;\nvector <Node> k;\nint n, M, X0;\nint high[100100], Si[100100], Xi[100100], fir[100100], sec[100100], mem[100100], Fenwick[100100], maxn[100100];\nint Go[100100][20]; long long goAlen[100100][20], goBlen[100100][20];\n\nvoid go(int ind, long long& tA, long long& tB, int len) {\n    for (int j = maxn[ind]; j >= 0; --j) {\n        if (Go[ind][j]) {\n            if (tA+tB+goAlen[ind][j]+goBlen[ind][j] <= len) {\n                tA += goAlen[ind][j];\n                tB += goBlen[ind][j];\n                go(Go[ind][j], tA, tB, len);\n                break;\n            }\n        }\n    }\n}\nvoid work() {\n    sort(k.begin(), k.end());\n    int p = k.size();\n    for (int i = 0; i < p; ++i) {\n        mem[k[i].id] = i;\n    }\n    for (int i = 1; i <= n; ++i) {\n        gosearch(mem[i]-sum(mem[i]+1));\n        add(mem[i]+1, 1);\n    }\n    for (int i = n; i >= 1; --i) {\n        Go[i][0] = sec[i];\n        Go[i][1] = fir[sec[i]];\n        if (Go[i][0]) goAlen[i][0] = goAlen[i][1] = abs(high[i]-high[sec[i]]);\n        if (Go[i][1]) goBlen[i][1] = abs(high[sec[i]]-high[fir[sec[i]]]);\n        for (int j = 2; ; ++j) {\n            if (!Go[Go[i][j-1]][j-1]) {\n                maxn[i] = j-1;\n                break;\n            }\n            Go[i][j] = Go[Go[i][j-1]][j-1];\n            goBlen[i][j] = goBlen[Go[i][j-1]][j-1]+goBlen[i][j-1];\n            goAlen[i][j] = goAlen[Go[i][j-1]][j-1]+goAlen[i][j-1];\n        }\n    }\n    double eps = (double)INF;\n    int ans, maxhigh = -INF;\n    for (int i = 1; i <= n; ++i) {\n        long long tA = 0, tB = 0;\n        go(i, tA, tB, X0);\n        if (tB) {\n        \tdouble fps = 1.0*tA/tB;\n            if (fps <= eps) {\n            \tif (fps == eps) {\n            \t\tif (high[i] > maxhigh) {\n                        maxhigh = high[i];\n                        ans = i;\n                    }\n                } else {\n                    eps = fps;\n                \tans = i;\n                \tmaxhigh = high[i];\n                }\n            }\n        }\n    }\n    printf(\"%d\\n\", ans);\n    for (int i = 1; i <= M; ++i) {\n        long long tA = 0, tB = 0;\n        go(Si[i], tA, tB, Xi[i]);\n        printf(\"%lld %lld\\n\", tA, tB);\n    }//*//*\n}\nvoid input() {\n    n = in();\n    for (int i = 1; i <= n; ++i) {\n        high[i] = in();\n        k.push_back(Node(high[i], i));\n    }\n    X0 = in();\n    M = in();\n    for (int i = 1; i <= M; ++i) {\n        Si[i] = in(); Xi[i] = in();\n    }\n}\nint main() {\n    input();\n    work();\n    //printf(\"%.4lf\", (double)clock()/CLOCKS_PER_SEC);\n}\nvoid gosearch(int i) {\n    int first = INF, second = INF, firx = 0, secx = 0, e = k[i].high, p = k.size();\n    bool flag1 = false, flag2 = false;\n    for (int j = i-2; j <= i+2; ++j) {\n        if (j < 0 or j == i or j >= p) continue;\n        if (abs(k[j].high-e) <= first) {\n            flag1 = true;\n            first = abs(k[j].high-e);\n            firx = k[j].id;\n        }\n    }\n    for (int j = i-2; j <= i+2; ++j) {\n        if (j < 0 or j == i or j >= p) continue;\n        if (abs(k[j].high-e) <= second and k[j].id != firx) {\n            flag2 = true;\n            second = abs(k[j].high-e);\n            secx = k[j].id;\n        }\n    }\n    if (flag1) fir[k[i].id] = firx;\n    if (flag2) sec[k[i].id] = secx;\n    k.erase(k.begin()+i);\n}\nvoid add(int x, int s) {\n    while (x <= n) {\n        Fenwick[x] += s;\n        x += pit(x);\n    }\n}\nint sum(int x) {\n    int tot = 0;\n    while (x > 0) {\n        tot += Fenwick[x];\n        x -= pit(x);\n    }\n    return tot;\n}\ninline int in() {\n    int ch = getchar(), x = 0, base = 1;\n    while (!isdigit(ch)) {\n        if (ch == '-') base = -1;\n        ch = getchar();\n    }\n    while (isdigit(ch)) x = x*10+ch-'0', ch = getchar();\n    return x*base;\n}\n\n```",
        "postTime": 1545904855,
        "uid": 114643,
        "name": "RikoHere",
        "ccfLevel": 0,
        "title": "\u3010\u9898\u89e3\u3011 P1081 \u5f00\u8f66\u65c5\u884c"
    },
    {
        "content": "\u8fd9\u91cc\u63d0\u4f9b\u53e6\u5916\u4e00\u79cd\u9884\u5904\u7406\uff08\u6700\u5c0f\u3001\u6b21\u5c0f\uff09\u7684\u65b9\u6cd5\n\n\u7528\u7684\u662f\u4e4b\u524d\u81ea\u5df1YY\u51fa\u6765\u7684\u6811\u72b6\u6570\u7ec4+\u4e8c\u5206\u67e5\u627e\uff0c\u6709\u65f6\u5019\u633a\u597d\u7528\u7684\uff0c\u4f55\u51b5\u6211\u4e0d\u4f1a\u6570\u636e\u7ed3\u6784qwq  \n\u503c\u57df\u6811\u72b6\u6570\u7ec4\u80af\u5b9a\u662f\u5355\u8c03\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u4e8c\u5206  \n\u7528\u8fd9\u79cd\u65b9\u6cd5\u53ef\u4ee5\u5b9e\u73b0\u4e00\u4e2a\u5bb9\u5668  \n\u652f\u6301\u63d2\u5165\u3001\u5220\u9664\u4e00\u4e2a\u6570\uff0c\u4ee5\u53ca\u67e5\u8be2\u7b2cK\u5927\u4e43\u81f3\u67d0\u4e2a\u7ed9\u5b9a\u8303\u56f4\u5185\u7684\u6570\u4e2d\u7684\u7b2cK\u5927  \n\u63d2\u5165\u3001\u5220\u9664\u6b63\u5e38\u505a  \n\u67e5\u8be2\u65f6\u627e\u51fa\u5bb9\u5668\u4e2d\u6ee1\u8db3\u5728\u67e5\u8be2\u533a\u95f4\u5185\u7684\u6570\u503c\u7684\u8303\u56f4\uff0c\u5c31\u80fd\u63a8\u51fa\u8981\u67e5\u7684\u6570\u5728\u6570\u7ec4\u91cc\u7684\u4f4d\u7f6e\u4e86  \n\u4f4d\u7f6e\u662f\u7531\u5355\u70b9\u7684sum\u503c\u4f53\u73b0\u7684\uff0c\u4e8c\u5206\u67e5\u627e\u5c31\u884c\u4e86  \n\u53ea\u4e0d\u8fc7\u8fd9\u79cd\u65b9\u6cd5\u67e5\u8be2\u662f $log^{2}n$ \u7684\uff0c\u4ee5\u53ca\u8981\u6c42\u79bb\u6563\u5316\uff0c~~\u4e0d\u8fc7\u8fd9\u9898\u591f\u7528\u4e86~~  \n\u8fd9\u9898\u7684\u9884\u5904\u7406\u5b9e\u73b0\u65b9\u5f0f\u5c31\u662f\u5012\u8fc7\u6765\u63d2\u503c\uff0c\u540c\u65f6\u67e5\u8be2\uff0c\u603b\u5171 $O(nlog^{2}n)$  \n~~\u7136\u800c\u8fd9\u9898\u662f\u5728\u8003\u500d\u589e~~\u5173\u4e8e\u500d\u589e\u5404\u4f4d\u8bb2\u5f97\u5f88\u6e05\u695a\u4e86qwq  \n\u4ee3\u7801\u8d34\u8fd9\uff0c\u5199\u4e86\u597d\u4e45\u554aorz\n```cpp\n#include <cstdio>\n#include <algorithm>\nusing namespace std;\ntypedef long long ll;\nconst double eps  = 0.0000001;\nconst double feps = -0.0000001;\nconst double inf  = 100000000000000000.0;\nconst int MAXN = 100005;\n\nstruct node {\n\tint g, h; // g: position, h: rank\n} P[MAXN];\nint N, H[MAXN], poi[MAXN];\nint A[MAXN], B[MAXN], C[MAXN];\nint D[MAXN][23];\nll dis[MAXN][23][2]; // 0: A, 1: B \n\nint abs(int x) { return x>0 ? x : -x; }\nll read()\n{\n\tll o = 0, oo = 0; char c = getchar();\n\twhile (c < '0' || c > '9') oo |= (c=='-'), c = getchar();\n\twhile (c >='0' && c <='9') o = (o<<3)+(o<<1)+(c&15), c = getchar();\n\treturn oo ? -o : o;\n}\nint cmp1(node x, node y) { return x.h < y.h; }\nint cmp2(node x, node y) { return x.g < y.g; }\nvoid add(int x) { for (; x<=N; x+=x&(-x)) C[x] += 1; return; }\nint sum(int x) { int res=0; for (; x; x-=x&(-x)) res += C[x]; return res; }\nvoid init()\n{\n\tN = read();\n\tfor (int i=1; i<=N; i++) H[i] = read(), P[i] = (node){i, H[i]};\n\tsort(P+1, P+N+1, cmp1);\n\tfor (int i=1; i<=N; i++) H[i] = P[i].h, poi[i] = P[i].g, P[i].h = i;\n\tsort(P+1, P+N+1, cmp2);\n\t\n\tA[N] = B[N] = 0, add(P[N].h);\n\tA[N-1] = 0, B[N-1] = N, add(P[N-1].h);\n\tfor (int i=N-2; i>=1; i--)\n\t{\n\t\tint l, r, m, t=sum(P[i].h), a, b, c;\n\t\t\n\t\tif (t > 0) {\n\t\t\tl = 0, r = P[i].h; // (l, r]\n\t\t\twhile (r - l > 1) {\n\t\t\t\tm = (l + r) >> 1;\n\t\t\t\tif (sum(m) < t) l = m; else r = m;\n\t\t\t}\n\t\t\ta = r;\n\t\t} else { a = 0; }\n\t\tif (t < N-i) {\n\t\t\tl = P[i].h, r = N; // (l, r]\n\t\t\twhile (r - l > 1) {\n\t\t\t\tm = (l + r) >> 1;\n\t\t\t\tif (sum(m) > t) r = m; else l = m;\n\t\t\t}\n\t\t\tb = r;\n\t\t} else { b = 0; }\n\t\tif (!a) { B[i] = poi[b], c = 0; }\n\t\tif (!b) { B[i] = poi[a], c = 0; }\n\t\tif (a&&b) {\n\t\t\tint da = abs(H[P[i].h] - H[a]);\n\t\t\tint db = abs(H[P[i].h] - H[b]);\n\t\t\tB[i] = (da > db) ? poi[b] : poi[a];\n\t\t\tc = (da > db) ? a : b;\n\t\t}\n\t\t\n\t\tif (t > 1) {\n\t\t\tl = 0, r = P[i].h; // (l, r]\n\t\t\twhile (r - l > 1) {\n\t\t\t\tm = (l + r) >> 1;\n\t\t\t\tif (sum(m) < t-1) l = m; else r = m;\n\t\t\t}\n\t\t\ta = r;\n\t\t} else { a = 0; }\n\t\tif (t < N-i-1) {\n\t\t\tl = P[i].h, r = N; // (l, r]\n\t\t\twhile (r - l > 1) {\n\t\t\t\tm = (l + r) >> 1;\n\t\t\t\tif (sum(m) < t+2) l = m; else r = m;\n\t\t\t}\n\t\t\tb = r;\n\t\t} else { b = 0; }\n\t\tint da = abs(H[P[i].h] - H[a]);\n\t\tint db = abs(H[P[i].h] - H[b]);\n\t\tint dc = abs(H[P[i].h] - H[c]);\n\t\tif (c) {\n\t\t\tif (a) c = (da > dc) ? c : a;\n\t\t\tif (b) c = (dc > db) ? b : c;\n\t\t} else {\n\t\t\tif (a) c = a;\n\t\t\tif (b) c = b;\n\t\t}\n\t\tA[i] = poi[c];\n\t\t\n\t\tadd(P[i].h);\n\t}\n\t\n\tfor (int i=1; i<=N; i++) {\n\t\tD[i][0] = B[A[i]];\n\t\tdis[i][0][0] = abs(H[P[A[i]].h] - H[P[i].h]);\n\t\tdis[i][0][1] = abs(H[P[B[A[i]]].h] - H[P[A[i]].h]);\n\t}\n\tfor (int j=1; j<=21; j++) {\n\t\tfor (int i=1; i<=N; i++) {\n\t\t\tD[i][j] = D[D[i][j-1]][j-1];\n\t\t\tdis[i][j][0] = dis[i][j-1][0] + dis[D[i][j-1]][j-1][0];\n\t\t\tdis[i][j][1] = dis[i][j-1][1] + dis[D[i][j-1]][j-1][1];\n\t\t}\n\t}\n\t\n\treturn;\n}\nvoid work()\n{\n\tdouble T = inf, t;\n\tint S = 1;\n\tll M = read(), m, LA, LB;\n\t\n\tfor (int i=1; i<=N; i++) {\n\t\tLA = 0, LB = 0, m = M;\n\t\tint o = i;\n\t\tfor (int j=21; j>=0; j--) if (D[o][j]) {\n\t\t\tif (dis[o][j][0] + dis[o][j][1] <= m) {\n\t\t\t\tm -= dis[o][j][0] + dis[o][j][1];\n\t\t\t\tLA += dis[o][j][0], LB += dis[o][j][1];\n\t\t\t\to = D[o][j];\n\t\t\t}\n\t\t}\n\t\tif (A[o] && abs(H[P[o].h] - H[P[A[o]].h]) <= m)\n\t\t\tLA += abs(H[P[o].h] - H[P[A[o]].h]);\n\t\tif (LB > 0) {\n\t\t\tt = (double) LA / LB;\n\t\t\tif (t < T) T = t, S = i;\n\t\t\telse if (t-T<eps&&t-T>feps) S = H[P[i].h] > H[P[S].h] ? i : S;\n\t\t} else if (T + 1.0 > inf) S = H[P[i].h] > H[P[S].h] ? i : S;\n\t}\n\tprintf(\"%d\\n\", S);\n\t\n\tM = read();\n\tfor (; M; M--)\n\t{\n\t\tS = read(), m = read(), LA = 0, LB = 0;\n\t\tint o = S;\n\t\tfor (int j=21; j>=0; j--) if (D[o][j]) {\n\t\t\tif (dis[o][j][0] + dis[o][j][1] <= m) {\n\t\t\t\tm -= dis[o][j][0] + dis[o][j][1];\n\t\t\t\tLA += dis[o][j][0], LB += dis[o][j][1];\n\t\t\t\to = D[o][j];\n\t\t\t}\n\t\t}\n\t\tif (A[o] && abs(H[P[o].h] - H[P[A[o]].h]) <= m)\n\t\t\tLA += abs(H[P[o].h] - H[P[A[o]].h]);\n\t\t\n\t\tprintf(\"%lld %lld\\n\", LA, LB);\n\t}\n\t\n\treturn;\n}\nint main()\n{\n//\tfreopen(\"\", \"r\", stdin);\n//\tfreopen(\"\", \"w\", stdout);\n\tinit();\n\twork();\n//\tfclose(stdin);\n//\tfclose(stdout);\n\treturn 0;\n}\n```",
        "postTime": 1541679391,
        "uid": 9315,
        "name": "zhyh",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1081 \u3010\u5f00\u8f66\u65c5\u884c\u3011"
    },
    {
        "content": "\n## \u9898\u610f\n\u9898\u76ee\u5df2\u7ecf\u8bf4\u7684hin\u660e\u786e\u4e86\u3002\n## \u9898\u89e3\n### \u6211\u4eec\u8981\u6c42\u51fa\u4ece\u6bcf\u4e2a\u70b9\u51fa\u53d1\uff0c\u5c0fA\u8981\u8d70\u7684\u57ce\u5e02\u548c\u5c0fB\u8981\u8d70\u7684\u57ce\u5e02\u3002\n\u6211\u4eec\u628a$i$\u4ee5\u540e\u7684\u6240\u6709\u70b9\u7684\u6d77\u62d4\u52a0\u5165\u5230$set$\uff0c\u7136\u540e\u62ff$H[i]$\u5230set\u91cc\u9762\u53bblower_bound,\u627e\u5230\u6bd4H[i]\u5927\u7684\u4e24\u4e2a\u5730\u70b9\u548c\u6bd4H[i]\u5c0f\u7684\u4e24\u4e2a\u5730\u70b9\uff0c\u5e76\u628a\u8fd9\u56db\u4e2a\u5730\u70b9\u4e0eH[i]\u7684\u5dee\u503c\u52a0\u5165\u5230\u65b0\u7684\u6392\u5e8f\u6570\u7ec4\u4e2d\uff0c\u6392\u4e2a\u5e8f\uff0c\u627e\u5230\u5dee\u503c\u6700\u5c0f\u7684\u4e24\u4e2a\u70b9\uff0c\u5206\u522b\u5c31\u662f\u5c0fB\u8981\u9009\u7684\u76ee\u7684\u5730\u548c\u5c0fA\u8981\u9009\u7684\u76ee\u7684\u5730\u3002\n\u5728\u8fd9\u91cc\u6ce8\u610f\u4e00\u70b9\uff0c\u5c31\u662f\u5f53\u5dee\u503c\u6700\u5c0f\u7684\u4e24\u4e2a\u503c\u76f8\u7b49\u7684\u65f6\u5019\uff0c\u5c0fB\u8d70\u7684\u662f\u6d77\u62d4\u8f83\u4f4e\u7684\u90a3\u4e2a\u70b9\uff0c\u6d89\u53ca\u5230\u7b2c\u4e8c\u5173\u952e\u5b57\u7684\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u6bd4\u8f83\u7701\u4e8b\u7684\u65b9\u6cd5\uff0c\u90a3\u5c31\u662f\u7ed9\u6d77\u62d4\u4f4e\u7684\u70b9\u8ba1\u7b97\u5dee\u503c\u65f6\u5019\u4e58\u4ee599999999\uff0c\u6d77\u62d4\u8f83\u9ad8\u7684\u70b9\u8ba1\u7b97\u5dee\u503c\u65f6\u5019\u4e58\u4ee5100000000\u3002\n\n### \u5b9a\u4e49\u9700\u8981\u7684\u72b6\u6001\n$nxt1[i]$\u4ee3\u8868\u4ece$i$\u51fa\u53d1\uff0c\u5c0fB\u7684\u76ee\u7684\u5730\u3002\n$nxt2[i]$\u4ee3\u8868\u4ece$i$\u51fa\u53d1\uff0c\u5c0fA\u7684\u76ee\u7684\u5730\u3002\n$nxt3[i][j]$\u4ee3\u8868\u4ece$i$\u51fa\u53d1\uff0c(\u5c0fA\u8d70\u5b8c\u3001\u5c0fB\u8d70\u5b8c)$2^{j}$\u8f6e\uff0c\u6240\u8fbe\u5230\u7684\u76ee\u7684\n\u5730\u3002\n\n$DP1[i][j]$\u4ee3\u8868\u4ecei\u51fa\u53d1\uff0c(\u5c0fA\u8d70\u5b8c\u3001\u5c0fB\u8d70\u5b8c)$2^{j}$\u8f6e\uff0c\u5c0fB\u6240\u7ecf\u8fc7\u7684\u8ddd\u79bb\u3002\n\n$DP2[i][j]$\u4ee3\u8868\u4ecei\u51fa\u53d1\uff0c(\u5c0fA\u8d70\u5b8c\u3001\u5c0fB\u8d70\u5b8c)$2^{j}$\u8f6e\uff0c\u5c0fA\u6240\u7ecf\u8fc7\u7684\u8ddd\u79bb\u3002\n\nnxt3,DP1,DP2\u53ef\u4ee5\u7528\u7c7b\u4f3c\u4e8e\u5904\u7406ST\u8868\u7684\u65b9\u6cd5\u6c42\u51fa\u6765\u3002\n\n### \u51fd\u6570\u89e3\u91ca\n\u4e00\u8f6e\u4ee3\u8868\u5c0fA\u8d70\u4e00\u6b21+\u5c0fB\u8d70\u4e00\u6b21\u3002\n```getdp(int &S,int len,ll &ans1,ll &ans2)```\n\u4eceS\u51fa\u53d1\uff0c\u8d70len\u8f6e\uff0c\u8fd4\u56deans1\u4e3a\u5c0fB\u8d70\u8fc7\u7684\u8def\u7a0b\uff0c\u8fd4\u56deans2\u4e3a\u5c0fA\u8d70\u8fc7\u7684\u8def\u7a0b\uff0c\u5e76\u4e14\u628aS\u6539\u53d8\u4e3alen\u8f6e\u4ee5\u540e\u5230\u8fbe\u7684\u70b9\u3002\n```getmx(int S,ll X)```\n\u4eceS\u51fa\u53d1\uff0c\u603b\u8def\u7a0b\u4e0d\u80fd\u8d85\u8fc7X\uff0c\u8fd4\u56de\u6700\u5927\u80fd\u8d70\u51e0\u8f6e\u3002\n\n\n### \u56de\u7b54\u8be2\u95ee\n\u7ed9\u51fa$Si$\u548c$Xi$\uff0c\u7528\u4e8c\u5206\u7684\u65b9\u6cd5\u6c42\u51fa\u4eceSi\u51fa\u53d1\u5c0fA\u548c\u5c0fB\u6700\u957f\u80fd\u8d70\u7684\u957f\u5ea6\u3002\n\n----\n## \u4ee3\u7801\n```\n// luogu-judger-enable-o2\n#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <set>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<ll,int> pll;\nset<pll>::iterator it;\nconst int maxn = 500007;\nint nxt1[maxn],nxt2[maxn],nxt3[maxn][30];\nint N,LOG,X0,M;\nll H[maxn],H2[maxn],H1[maxn],DP2[maxn][30],DP1[maxn][30];\npll tmpsort[7];\nvoid getdp(int &S,int len,ll &ans1,ll &ans2){\n    int cnt = 0;\n    while(len){\n        if(len & 1){\n            ans1 += DP1[S][cnt];\n            ans2 += DP2[S][cnt];\n            S = nxt3[S][cnt];\n        }\n        len >>= 1;\n        cnt++;\n        if(!S) break;\n    }\n    return ;\n}\nint getmx(int S,ll X){\n    int l = 0,mid,r = N+1;\n    while(r - l > 1){\n        mid = (l+r)/2;\n        int nS = S;\n        ll ans1 = 0,ans2 = 0;\n        getdp(nS,mid,ans1,ans2);\n        if(ans1+ans2 > X || !nS)\n            r = mid;\n        else \n            l = mid;\n    }\n    return l;\n}\nint main(){\n    set<pll> st;\n    cin>>N;\n    int tmp = 1;\n    while(tmp <= N/3)\n        LOG++,tmp <<= 1;\n    for(int i = 1;i <= N;++i){\n        scanf(\"%lld\",&H[i]);\n        st.insert(make_pair(H[i],i));\n    }\n    for(int i = 1;i < N;++i){\n        int ct = 0;\n        st.erase(make_pair(H[i],i));\n        it = st.lower_bound(make_pair(H[i],i));\n        if(it != st.end()){\n            tmpsort[ct++] = make_pair(abs(H[i]-(*it).first)*100000000,(*it).second);    \n            ++it;\n        }\n        if(it != st.end()){\n            tmpsort[ct++] = make_pair(abs(H[i]-(*it).first)*100000000,(*it).second);    \n        }  \n        it = st.lower_bound(make_pair(H[i],i));\n        \n        if(it != st.begin()) {\n            --it;\n            tmpsort[ct++] = make_pair(abs(H[i]-(*it).first)*99999999,(*it).second);    \n            if(it != st.begin()){\n                --it;\n                tmpsort[ct++] = make_pair(abs(H[i]-(*it).first)*99999999,(*it).second); \n            }\n        }\n        sort(tmpsort,tmpsort+ct);\n        if(ct > 0)\n            nxt1[i] = tmpsort[0].second;\n        if(ct > 1)\n            nxt2[i] = tmpsort[1].second;\n    }\n    for(int i = 1;i < N;++i)\n        nxt3[i][0] = nxt1[nxt2[i]];\n    for(int i =1;i <= N;++i){\n        if(nxt1[i])\n            H1[i] = abs(H[nxt1[i]] - H[i]);\n        if(nxt2[i]){\n            H2[i] = abs(H[nxt2[i]] - H[i]);\n            DP2[i][0] = abs(H[nxt2[i]] - H[i]);\n        }\n        if(nxt1[nxt2[i]])\n            DP1[i][0] = abs(H[nxt1[nxt2[i]]] - H[nxt2[i]]);\n    }\n    for(int j = 1;j <= LOG;++j){\n        for(int i = 1;i <= N;++i){\n            nxt3[i][j] = nxt3[nxt3[i][j-1]][j-1];\n            DP1[i][j] = DP1[i][j-1] + DP1[nxt3[i][j-1]][j-1];\n            DP2[i][j] = DP2[i][j-1] + DP2[nxt3[i][j-1]][j-1];\n        }\n    }\n    int mf1 = 0,mf2 = 1,mh = 0;\n    int ans1 = 1;\n    cin>>X0>>M;\n    for(int i = 1;i <= N;++i){\n        ll f1 = 0,f2 = 0;\n        int nS = i;\n        int mxl = getmx(i,X0);\n        getdp(nS,mxl,f1,f2);\n        if(nxt2[nS] && H2[nS]+f1+f2 <= X0)\n            f2 += H2[nS];\n        if(!f2) continue;\n        if(mf1*f2 < f1*mf2){\n            mf1 = f1;\n            mf2 = f2;\n            ans1 = i;\n            mh = H[i];\n        }\n        else if(mf1*f2 == mf2*f1 && H[i] > mh){\n            mf1 = f1;\n            mf2 = f2;\n            ans1 = i;\n            mh = H[i];\n        }\n    }\n    cout<<ans1<<endl;\n    for(int i = 0;i < M;++i){\n        int Si,nSi;ll Xi;\n        scanf(\"%d %lld\",&Si,&Xi);\n        nSi = Si;\n        int mxl = getmx(Si,Xi);\n        ll f1 = 0,f2 = 0;\n        getdp(nSi,mxl,f1,f2);\n        if(nxt2[nSi] && H2[nSi]+f1+f2 <= Xi)\n            f2 += H2[nSi];\n        printf(\"%lld %lld\\n\",f2,f1);\n    }\n    return 0;\n}\n```",
        "postTime": 1521261176,
        "uid": 85503,
        "name": "phython",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1081 \u3010\u5f00\u8f66\u65c5\u884c\u3011"
    },
    {
        "content": "\u597d\u96be\u5440\u3002\u3002\u3002\n\n\n\u82b1\u4e86\u4e00\u65e9\u4e0a\u6765\u809d\u8fd9\u9053\u9898\uff0c\u6211\u8ba4\u4e3a\u771f\u5fc3\u4e0d\u597d\u505a\u3002\n\n\n\u9996\u5148\u601d\u8def\u662f\u500d\u589e\uff1a\n\n\n\u4ee4F[I][J]\u8868\u793a\u4ee5I\u51fa\u53d12^J\u4e2a\u70b9\u6240\u5230\u8fbe\u7684\u70b9\n\n\n\u4ee4A[I][J]\u8868\u793a\u4ee5I\u51fa\u53d12^J\u4e2a\u70b9a\u6240\u884c\u9a76\u7684\u8ddd\u79bb\n\n\n\u4ee4B[I][J]\u8868\u793a\u4ee5I\u51fa\u53d12^J\u4e2a\u70b9b\u6240\u884c\u9a76\u7684\u8ddd\u79bb\n\n\n\u9996\u5148\uff0c\u4f60\u9700\u8981\u627e\u5230n\u4e2a\u70b9\u8ddd\u79bb\u4ed6\u6700\u8fd1\u7684\u70b9\u4e0e\u6b21\u8fd1\u7684\u70b9\u3002\n\n\n\u663e\u800c\u6613\u89c1\uff0c\u6211\u4eec\u4e0d\u80fd\u4f7f\u7528n^2\u7684\u66b4\u529b\u6765\u679a\u4e3e\uff0c\u4e00\u4e2a\u60f3\u6cd5\u662f\u4e8c\u53c9\u641c\u7d22\u6811\u6765\u641e\u641e\u3002\n\n\n\u4f46\u662f\u660e\u663e\u592a\u590d\u6742\uff0c\u8003\u8651\uff0c\u56e0\u4e3a\u53ea\u9700\u5bfb\u627e\u6b21\u8fd1\u4e0e\u6700\u8fd1\uff0c\u6240\u4ee5\u53ef\u4ee5\u5148\u6392\u5e8f\uff0c\u7528\u94fe\u8868\u8fde\u8d77\u6765\u3002\n\n\n\u7136\u540e\u94fe\u8868\u7684\u70b9\u4e5f\u8981\u5bf9\u5e94\u56de\u6765\uff0c\u56e0\u4e3a\u6211\u4eec\u5fc5\u987b\u7531\u8fd9\u4e2a\u70b9\u5f97\u5230i\u6240\u5bf9\u5e94\u94fe\u8868\u7684\u4f4d\u7f6e\u3002\n\n\n\u7136\u540e\u56e0\u4e3a\u662f\u53ea\u6709\u4ece\u540e\u9762\u5f80\u524d\u9762\u8d70\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u987a\u6b21\u5bfb\u627e\uff0c\u627e\u5b8c\u4e00\u4e2a\u5220\u9664\u4e00\u4e2a\u3002\n\n\n\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u70b9 x \uff0c\u4ed6\u7684\u6700\u8fd1\u7684\u70b9\u80af\u5b9a\u53ea\u53ef\u80fd\u662f\u76f8\u90bb\u7684\u4efb\u610f\u4e00\u4e2a\u70b9\u3002\n\n\n\u7136\u540e\u6211\u4eec\u6682\u65f6\u5220\u9664\u6700\u8fd1\u7684\u70b9\uff0c\u6b64\u65f6\u6b21\u8fd1\u7684\u70b9\u4f9d\u65e7\u662f\u76f8\u90bb\u7684\u70b9\u3002\n\n\n\u53e6\u5916\uff0c\u56e0\u4e3a\u53ef\u80fd\u8d8a\u754c\uff0c\u5373\u5de6\u53f3\u4e24\u8fb9\u6ca1\u6709\u57ce\u5e02\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u8fd8\u9700\u8981\u8fdb\u884c\u4e24\u6b21\u5224\u65ad\uff0c\u8fd9\u91cc\u5177\u4f53\u89c1\u4ee3\u7801\uff08\u5c31\u662f\u8fd9\u91cc\u5751\u4e86\u6211\uff09\u3002\n\n\n\u627e\u5b8c\u4e86\u6b21\u8fd1\u4e0e\u6700\u8fd1\uff0c\u8fd9\u65f6\u5019\u5c31\u53ef\u4ee5\u500d\u589e\u5904\u7406\u4e86\uff0c\u500d\u589e\u5904\u7406\u5b8c\u4e86\u4ee5\u540e\uff0c\u5c31\u662f\u4e00\u822c\u7684\u500d\u589e\u95ee\u9898\u4e86\u3002\n\n\n\u4ece\u9ad8\u4f4d\u5f80\u4f4e\u4f4d\u679a\u4e3e\uff0c\u7136\u540e\u53ef\u4ee5\u7684\u8bdd\u5c31\u8df3\u3002\n\n\n\u6700\u540e\u8fd8\u5fc5\u987b\u770b\u770ba\u80fd\u4e0d\u80fd\u518d\u5355\u72ec\u8df3\u4e00\u6b21\u3002\n\n\n\u8f93\u51fa\u7b54\u6848\u3002\n\n\n[\u849f\u84bb\u7684\u9898\u89e3\u4f20\u9001\u95e8](http://tgotp.science/noip2012-%E5%BC%80%E8%BD%A6%E6%97%85%E8%A1%8C/ )\n\n\nc++\u4ee3\u7801\u5982\u4e0b\uff1a\n\n \n \n \n \n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<cstring>\n#define abs(x) x >= 0? x : -(x)\n#define rep(i,x,y) for(register int i = x;i <= y;++i)\n#define repd(i,x,y) for(register int i = x;i >= y;--i)\nusing namespace std;\ntypedef long long ll;\ntemplate<typename T>void read(T&x)\n{\n    x = 0;char c;int sign = 1;\n    do { c = getchar(); if(c == '-') sign = -1; }while(c < '0' || c > '9');\n    do { x = x * 10 + c - '0'; c = getchar(); }while(c <= '9' &&  c >= '0');\n    x *= sign;\n}\nconst int N = 1e5 + 500,inf = (1<<31-1);\nint head[N],pre[N],nxt[N],fi[N],se[N];\nint n,f[N][32],a[N][32],b[N][32];\nstruct H\n{\n    ll num;\n    int id;\n}h[N];\nbool cmp(H a,H b) { return a.num < b.num; }\nvoid solve(int x)\n{\n    fi[x] = pre[x] && (h[x].num - h[pre[x]].num <= h[nxt[x]].num - h[x].num || !nxt[x]) ? pre[x]:nxt[x];\n    if(fi[x] == pre[x])\n        se[x] = pre[pre[x]] && (h[x].num - h[pre[pre[x]]].num <= h[nxt[x]].num - h[x].num || !nxt[x]) ? pre[pre[x]] : nxt[x];\n    else\n        se[x] = pre[x] && (h[x].num - h[pre[x]].num <= h[nxt[nxt[x]]].num - h[x].num || !nxt[nxt[x]]) ? pre[x] : nxt[nxt[x]];\n    nxt[pre[x]] = nxt[x];\n    pre[nxt[x]] = pre[x];\n}\nint main()\n{\n    read(n);\n    rep(i,1,n) read(h[i].num),h[i].id = i;\n    sort(h+1,h+1+n,cmp);\n    rep(i,1,n) {\n        head[h[i].id] = i;\n        pre[i] = i - 1;\n        nxt[i] = i + 1;\n        if(i == n) nxt[i] = 0;\n    }\n    rep(i,1,n)\n        solve(head[i]);\n    rep(i,1,n)\n    {\n        int x = head[i];\n        if(se[x]) a[x][0] = abs(h[x].num - h[se[x]].num);\n        if(fi[x]) b[x][0] = abs(h[se[x]].num - h[fi[se[x]]].num);\n        f[x][0] = fi[se[x]];\n    }\n    rep(i,1,30)\n        rep(u,1,n)\n            f[u][i] = f[f[u][i-1]][i-1],\n            a[u][i] = a[u][i-1] + a[f[u][i-1]][i-1],\n            b[u][i] = b[u][i-1] + b[f[u][i-1]][i-1];\n    int x,ans_num;\n    double ans = inf,temp;\n    read(x);\n    rep(j,1,n)\n    {\n        int u = head[j]; int z = x;\n        int xa = 0, xb = 0;\n        repd(i,30,0)\n        {\n            if(f[u][i] && z >= a[u][i] + b[u][i])\n            {\n                z = z - a[u][i] - b[u][i];\n                xa += a[u][i];\n                xb += b[u][i];\n                u = f[u][i];\n            }\n        }\n        if( a[u][0] <= z && se[u])\n            xa += a[u][0];\n        if(xb == 0) temp = inf;\n        else temp = (double)xa/xb;\n        if(temp < ans || (temp == ans && h[head[j]].num > h[head[ans_num]].num))\n            ans_num = j,ans = temp;\n    }\n    printf(\"%d\\n\",ans_num);\n    int m;read(m);\n    while(m--)\n    {\n        int u,z;\n        read(u),read(z);\n        u = head[u];\n        int xa = 0, xb = 0;\n        repd(i,30,0)\n        {\n            if(f[u][i] && z >= a[u][i] + b[u][i])\n            {\n                z = z - a[u][i] - b[u][i];\n                xa += a[u][i];\n                xb += b[u][i];\n                u = f[u][i];\n            }\n        }\n        if( a[u][0] <= z && se[u] )\n            xa += a[u][0];\n        printf(\"%d %d\\n\",xa,xb);\n    }\n    return 0;\n}\n```",
        "postTime": 1505186971,
        "uid": 23087,
        "name": "Tgotp",
        "ccfLevel": 9,
        "title": "\u9898\u89e3 P1081 \u3010\u5f00\u8f66\u65c5\u884c\u3011"
    },
    {
        "content": "\u6539\u4e86\u534a\u5929\u7684\u7ec6\u8282\uff0c\u628a\u7c97\u5fc3\u7684\u5730\u65b9\u90fd\u6539\u8fc7\u6765\u4e86\u3002\n\n\n\u6700\u5bb9\u6613\u60f3\u5230\u7684\u5f53\u7136\u662f\u6a21\u62df\uff0cA\u3001B\u6309\u7167\u81ea\u5df1\u7684\u65b9\u6cd5\u4e00\u6b65\u6b65\u8d70\uff0c\u4f46\u662f\u7a0d\u5fae\u7b97\u4e00\u7b97\u5c31\u77e5\u9053\u80af\u5b9a\u4f1a\u8d85\u65f6\n\n\n\u518d\u60f3\u5230\u4f18\u5316\u4e00\u70b9\u70b9\uff0c\u5c06\u6bcf\u4e2a\u70b9\u8ddd\u79bb\u6700\u8fd1\u3001\u7b2c\u4e8c\u8fd1\u7684\u70b9\u9884\u5904\u7406\u51fa\u6765\uff0c\u5728\u540e\u9762\u7684\u8be2\u95ee\u4e2d\u76f4\u63a5\u8c03\u7528\uff0c\u663e\u7136\u53c8\u8981\u5feb\u4e00\u70b9\u70b9\n\n\n\u80fd\u591f\u53d1\u73b0\uff0cA\u3001B\u7684\u8d70\u6cd5\u662f\u673a\u68b0\u5316\u3001\u6709\u987a\u5e8f\u89c4\u5f8b\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u4e0d\u59a8\u628aA\u3001B\u5404\u8d70\u4e00\u6b21\u770b\u505a\u4e00\u6b21\u884c\u52a8\uff0c\u7136\u540e\u7528\u500d\u589e\u7684\u65b9\u6cd5\u6765\u201c\u8df3\u7740\u8d70\u201d\uff0c\u8fd9\u6837\u5c31\u6ca1\u95ee\u9898\u4e86\u3002\n\n\n\u90a3\u4e48\u5177\u4f53\u8bf4\u8bf4\uff1a\n\n\n1.\u5173\u4e8e\u9884\u5904\u7406\u6700\u8fd1\u53ca\u7b2c\u4e8c\u8fd1\u7684\u70b9\u3002\u9996\u5148\u6211\u4eec\u77e5\u9053\u5fc5\u987b\u662f\u7531\u7f16\u53f7\u5c0f\u7684\u70b9\u901a\u5411\u5927\u7684\u70b9\uff08\u5c0f\u7684\u70b9\u5728\u897f\u8fb9\uff09\uff0c\u6211\u4eec\u53c8\u53ef\u4ee5\u77e5\u9053\uff0c\u5c06\u9ad8\u5ea6\u6392\u5e8f\u4e00\u6b21\u4e4b\u540e\uff0c\u5bf9\u4e8e\u6392\u597d\u5e8f\u7684\u9ad8\u5ea6\u5e8f\u5217\u91cc\u9762\u6765\u8bf4\uff0ci\u70b9\u6700\u8fd1\u53ca\u7b2c\u4e8c\u8fd1\u7684\u70b9\u5fc5\u7136\u662fi-1\u3001i-2\u3001i+1\u3001i+2\u4e2d\u7684\u4e24\u4e2a\uff0c\u8003\u8651\u5230\u4e4b\u524d\u6240\u8bf4\u7684\u5fc5\u987b\u7531\u7f16\u53f7\u5c0f\u7684\u901a\u5411\u7f16\u53f7\u5927\u7684\uff0c\u6240\u4ee5\u5728\u6392\u5e8f\u8fc7\u7a0b\u4e2d\u8fd8\u9700\u8981\u5b58\u50a8\u521d\u59cb\u7f16\u53f7\u3002\u7136\u800c\u5982\u679c\u6bcf\u4e00\u6b21\u90fd\u679a\u4e3e\u5de6\u53f3\u4e24\u8fb9\u7b2c\u4e00\u4e2a\u6216\u8005\u7b2c\u4e8c\u4e2a\u5c0f\u4e8e\u6216\u8005\u5927\u4e8e\u4ed6\u7684\u70b9\uff0c\u6700\u574f\u7684\u60c5\u51b5\u53ef\u80fd\u4f1a\u8fbe\u5230O\uff08n^2\uff09\uff0c\u663e\u7136\u4e5f\u4e0d\u9760\u8c31\uff0c\u90a3\u4e48\u6211\u4eec\u8003\u8651\u7528\u94fe\u8868\u6765\u4f18\u5316\u4e00\u4e0b\u3002pre[i]\u4e3a\u7b2c\u4e00\u4e2a\u5c0f\u4e8ei\u4e14\u7f16\u53f7\u5927\u4e8ei\u7684\u70b9\uff0cnext[i]\u4e3a\u7b2c\u4e00\u4e2a\u5927\u4e8ei\u4e14\u7f16\u53f7\u5927\u4e8ei\u7684\u70b9\uff0c\u6211\u4eec\u4ece\u7f16\u53f71\u5f00\u59cb\u505a\u8d77\uff0c\u627e\u5230\u6700\u5927\u53ca\u7b2c\u4e8c\u5927\u7684\u70b9\u4e4b\u540e\uff0c\u628a1\u4ece\u94fe\u8868\u4e2d\u53bb\u6389\uff0c\u628a1\u7684\u4e24\u8fb9\u8fde\u63a5\u8d77\u6765\uff0c\u8fd9\u6837\u5b50\u7684\u8bdd\u5728\u505a\u540e\u9762\u7684\u70b9\u65f6\u5c31\u4e0d\u4f1a\u518d\u627e\u52301\u8fd9\u4e2a\u70b9\u3002\u91cd\u590d\u5bf9\u6bcf\u4e2a\u7f16\u53f7\u64cd\u4f5c\u4e00\u6b21\uff0c\u5c31\u53ef\u4ee5\u6c42\u51fa\u6bcf\u4e2a\u70b9\u6700\u8fd1\u53ca\u7b2c\u4e8c\u8fd1\u7684\u70b9\u3002\uff08\u679c\u7136\u89e3\u91ca\u8d77\u6765\u8fd8\u662f\u5f88\u9ebb\u70e6\uff0c\u5177\u4f53\u53c2\u7167\u4ee3\u7801\u5427\uff09\n\n\n2.\u500d\u589e\uff0cf[i,j]\u8868\u793a\u4ecei\u70b9\u51fa\u53d1\u8d702^j\u6b21\u884c\u52a8\u6240\u5230\u8fbe\u7684\u70b9\uff08\u6bcf\u6b21\u884c\u52a8\u5305\u62ecA\u8d70\u4e00\u6b21B\u8d70\u4e00\u6b21\uff09\uff0csa[i,j]\u8868\u793aA\u6240\u8d70\u7684\u8def\u7a0b\uff0csb\u540c\u7406\u3002\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\uff0c\u7ecf\u8fc7\u82e5\u5e72\u6b21\u884c\u52a8\u4e4b\u540e\uff0c\u4e5f\u8bb8A\u8fd8\u80fd\u518d\u8d70\uff0c\u4f46\u662fB\u4e0d\u80fd\u518d\u8d70\u4e86\uff0c\u8fd9\u4e2a\u65f6\u5019\u7279\u5224\u4e00\u4e0b\u5c31\u597d\u3002\n\n\n3.\u5bf9\u4e8e\u7b2c\u4e00\u95ee\u5c31\u679a\u4e3e\u6c42\u89e3\u5c31\u597d\uff0c\u7b2c\u4e8c\u95ee\u4e5f\u53ef\u4ee5\u4e00\u4e2a\u4e2a\u56de\u7b54\n\n\n```cpp\ntype node=record\n     h,next,pre:longint;\n     end;\n     origin=record\n     num,hh:longint;\n     end;\nvar a,b:array[1..100000] of longint;\n    st:array[1..100000] of origin;//\u7528\u6765\u6392\u5e8f\n    fi:Array[0..100000] of node;//fi\u5b58\u50a8\u6392\u5e8f\u540e\u7684\u7f16\u53f7\u5bf9\u5e94\u7684\u539f\u7f16\u53f7\n    f:array[0..100005,0..20] of longint;\n    sa,sb:array[0..100005,0..20] of int64;\n    i,j,k,m,n,p,t,l,r,s,min,cmin,mp,cmp:longint;smin:double;ta,x,tb:int64;\nprocedure sort(l,r: longint);\n      var\n         i,j,x: longint;y:origin;\n      begin\n         i:=l;\n         j:=r;\n         x:=st[(l+r)>>1].hh;\n         repeat\n           while st[i].hh<x do\n            inc(i);\n           while x<st[j].hh do\n            dec(j);\n           if not(i>j) then\n             begin\n                y:=st[i];\n                st[i]:=st[j];\n                st[j]:=y;\n                inc(i);\n                j:=j-1;\n             end;\n         until i>j;\n         if l<j then\n           sort(l,j);\n         if i<r then\n           sort(i,r);\n      end;\nprocedure run(now:longint);//\u500d\u589e\nvar i,j,k:longint;\nbegin\n    j:=now;\n    ta:=0;tb:=0;\n    for k:=20 downto 0 do\n      if (ta+sa[now,k]<=x-tb-sb[now,k])and(f[now,k]<>0)and(sa[now,k]<>0)and(sb[now,k]<>0) then\n      begin\n          inc(ta,sa[now,k]);\n          inc(tb,sb[now,k]);\n          now:=f[now,k];\n      end;\n    if a[now]<>0 then\n    begin\n      if ta+tb+abs(fi[a[now]].h-fi[now].h)<=x then\n        ta:=ta+abs(fi[a[now]].h-fi[now].h);\n    end;\n    if tb<>0 then\n    begin\n    if ta/tb<smin then begin p:=j;smin:=ta/tb;end;\n    end else if smin=maxlongint then p:=j;\nend;\nbegin\n    readln(n);\n    for i:=1 to n do\n    begin\n        read(st[i].hh);\n        st[i].num:=i;\n    end;\n    sort(1,n);\n    l:=st[1].num;r:=st[n].num;\n    for i:=1 to n do\n    begin\n        fi[st[i].num].h:=st[i].hh;\n        if i<n then fi[st[i].num].next:=st[i+1].num;\n        if i>1 then fi[st[i].num].pre:=st[i-1].num;\n    end;\n    fi[0].h:=maxlongint div 2;\n    for i:=1 to n do\n    begin\n        min:=maxlongint;\n        cmin:=maxlongint;\n        if i<>l then\n        begin\n            if abs(fi[i].h-fi[fi[i].pre].h)<min then begin mp:=fi[i].pre;min:=abs(fi[i].h-fi[fi[i].pre].h);end;\n            if abs(fi[i].h-fi[fi[fi[i].pre].pre].h)<cmin then begin cmp:=fi[fi[i].pre].pre;cmin:=abs(fi[i].h-fi[fi[fi[i].pre].pre].h);end;\n        end;\n        if i<>r then\n        begin\n            if abs(fi[i].h-fi[fi[i].next].h)<min then begin cmp:=mp;cmin:=min;mp:=fi[i].next;min:=abs(fi[i].h-fi[fi[i].next].h);end else\n            if abs(fi[i].h-fi[fi[i].next].h)<cmin then begin cmp:=fi[i].next;cmin:=abs(fi[i].h-fi[fi[i].next].h);end;\n            if abs(fi[i].h-fi[fi[fi[i].next].next].h)<cmin then begin cmp:=fi[fi[i].next].next;cmin:=abs(fi[i].h-fi[fi[fi[i].next].next].h);end;\n        end;\n        a[i]:=cmp;\n        b[i]:=mp;\n        fi[fi[i].pre].next:=fi[i].next;\n        fi[fi[i].next].pre:=fi[i].pre;\n    end;\n    for i:=1 to n-2 do\n    begin\n        f[i,0]:=b[a[i]];\n        sa[i,0]:=abs(fi[a[i]].h-fi[i].h);\n        sb[i,0]:=abs(fi[b[a[i]]].h-fi[a[i]].h);\n    end;\n   k:=trunc(ln(n)/ln(2));\n    for j:=1 to k do\n      for i:=1 to n do\n        f[i,j]:=f[f[i,j-1],j-1];\n    for j:=1 to k do\n      for i:=1 to n do\n      begin\n          sa[i,j]:=sa[i,j-1]+sa[f[i,j-1],j-1];\n          sb[i,j]:=sb[i,j-1]+sb[f[i,j-1],j-1];\n      end;\n    readln(x);\n    smin:=maxlongint;\n    for i:=1 to n do\n      run(i);\n    writeln(p);\n    readln(m);\n    for i:=1 to m do\n    begin\n        readln(s,x);\n        run(s);\n        writeln(ta,' ',tb);\n    end;\nend.\n\n```",
        "postTime": 1478865415,
        "uid": 14130,
        "name": "The_Dark_Knight",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1081 \u3010\u5f00\u8f66\u65c5\u884c\u3011"
    },
    {
        "content": "50\u5206\n\u5bf9\u4e8e50%\u7684\u6570\u636e\u8fd8\u662f\u5f88\u597d\u9a97\u7684\u3002\u6bcf\u6b21\u65c5\u884c\u90fd\u76f4\u63a5\u6a21\u62df\u884c\u8d70\uff0c\u6bcf\u6b21\u627e\u4e00\u4e2a\u6700\u8fd1\u6216\u6b21\u8fd1\uff0c\u65f6\u95f4O(N\\*N)\u3002\n\n\u5bf9\u4e8e\u7b2c\u4e00\u95ee\u76f4\u63a5\u679a\u4e3e\u8d77\u70b9\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(N\\*N\\*M + N\\*N\\*N)\n\n70\u5206\n\u53d1\u73b050\u5206\u7b97\u6cd5\u4e3b\u8981\u662f \u6bcf\u6b21\u90fd\u8981\u627e\u4e0b\u4e00\u4e2a\u57ce\u5e02 \u8017\u8d39\u4e86\u592a\u591a\u65f6\u95f4\uff0c\u4e8e\u662f\u5e72\u8106\u76f4\u63a5\u9884\u5904\u7406\uff0cO(N\\*N)\uff0c\u603b\u65f6\u95f4O(N\\*M + N\\*N)\n\n\u6ee1\u5206\n\u8fd8\u662f\u60f3\u60f3\u6539\u8fdb\u3002\u3002\u300270\u5206\u7b97\u6cd5\u7684\u9884\u5904\u7406\u592a\u50bb\u903c\u4e86\u3002\u3002\u5176\u5b9e\u6211\u4eec\u662f\u8981\u6bcf\u6b21\u627e\u5230\u4e00\u4e2a\u6d77\u62d4\u4e0e\u5f53\u524d\u57ce\u5e02\u76f8\u5dee\u6700\u5c11\u7684\u57ce\u5e02\u3002\u6240\u4ee5\u7b97\u6cd5\u5c31\u6709\u5f88\u591a\u79cd\u4e86\u2026\u2026\u6bd4\u5982\u79bb\u6563\u5316+\u94fe\u8868\uff0c\u53cc\u5411\u94fe\u8868\uff0c\u5e73\u8861\u6811\uff08\u5176\u5b9e\u7528set\u7684\u8bdd\u7a0b\u5e8f\u6bd4\u53cc\u5411\u94fe\u8868\u8fd8\u597d\u6253\uff0c\u56e0\u4e3a\u4e8c\u5206stl\u90fd\u7ed9\u4f60\u5f04\u597d\u4e86\u3002\u3002\uff09\n\n\u8fd9\u91cc\u4e3b\u8981\u4ecb\u7ecd\u4e0b\u53cc\u5411\u94fe\u8868\u7684\u505a\u6cd5\uff1a\u5c31\u662f\u6309\u9ad8\u5ea6\u6392\u5e8f\uff0c\u7136\u540e\u94fe\u8d77\u6765\u3002\u6309\u57ce\u5e02\u539f\u59cb\u4f4d\u7f6e\u4ece\u5de6\u5230\u53f3\u5904\u7406\u63a5\u4e0b\u6765\u7684\u57ce\u5e02\u662f\u54ea\u4e2a\uff0c\u7136\u540e\u5c06\u81ea\u5df1\u5220\u6389\uff08\u56e0\u4e3a\u63a5\u4e0b\u6765\u5c31\u6ca1\u7528\u4e86\uff09\u3002\u5982\u4f55\u627e\u63a5\u4e0b\u6765\u7684\u90a3\u4e2a\uff1f\u5c31\u662f\u5f80\u94fe\u8868\u7684\u5de6\u53f3\u4e24\u8fb9\u627e\u4e24\u5c42\uff0c\u8bb0\u4e00\u4e2a\u6700\u8fd1\u548c\u6b21\u8fd1\u3002\n\n\u7136\u540e\u9884\u5904\u7406\u5c31\u53ef\u4ee5\u4f18\u5316\u5230O(N)\n\nthen\uff1f\uff1f\uff1f\n\n\u53d1\u73b0\u5176\u5b9e\u8fd9\u662f\u4e00\u68f5\u6811\u3002\u3002\u3002\n\n\u4e8e\u662f\u500d\u589e\n\n\u9884\u5904\u7406\u5df2\u7ecf\u5904\u7406\u51fa2^0\u7684\u60c5\u51b5\u4e86\u3002\u63a5\u4e0b\u6765\u76f4\u63a5\u52a8\u89c4\u5c31\u597d\u4e86\uff0c\u5c31\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u70b9\u76842^i\u7684\u7236\u4eb2\u662f\u8c01\uff0c\u4ee5\u53caA\u8d70\u4e86\u591a\u5c11\uff0cB\u8d70\u4e86\u591a\u5c11\u3002\n\nthen\uff1f\uff1f\uff1f\n\n\u73b0\u5728\u95ee\u9898\u5c31\u662f\u7ed9\u5b9a\u603b\u8def\u7a0b\u8981\u600e\u4e48\u6c42\u51faAB\u8d70\u7684\u8def\u7a0b\u3002\n\n\u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u6210\u7ed9\u5b9a\u603b\u8def\u7a0b\u6c42\u8d70\u4e86\u51e0\u6b21\u3002\u7136\u540e\u5c31\u53ef\u4ee5\u7528\u4e0a\u5148\u524d\u7684\u9884\u5904\u7406\u3002\u5047\u8bbe\u8d70\u4e86t\u6b21\uff0c\u5219t\u80af\u5b9a\u53ef\u4ee5\u8868\u793a\u6210\u4e8c\u8fdb\u5236\uff0c\u800c\u4e14\u53ea\u6709logn\u4f4d\u7684\u4e8c\u8fdb\u5236\u6570\u3002\u4e8e\u662f\u53ef\u4ee5\u679a\u4e3e\u8fd9\u4e00\u4f4d\u53d60\u8fd8\u662f1\u3002\u8c03\u7528\u5148\u524d\u5904\u7406\u7684\u6570\u7ec4\uff0c\u770b\u52a0\u4e0a\u6240\u589e\u52a0\u7684\u8def\u7a0b\u540e\u4f1a\u4e0d\u4f1a\u8d85\u51fax\uff0c\u4e0d\u4f1a\u5c31\u662f1\uff0c\u4f1a\u5c31\u662f0\u3002\n\n\u4e8e\u662f\u95ee\u9898\u5c31\u5b8c\u7f8e\u89e3\u51b3\u4e86\uff01\n",
        "postTime": 1423386010,
        "uid": 995,
        "name": "2014robin",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1081 \u3010\u5f00\u8f66\u65c5\u884c\u3011"
    },
    {
        "content": "1.\u00a0\u6309\u57ce\u5e02\u9ad8\u5ea6\u9012\u589e\u987a\u5e8f\u6392\u5e8f\uff0c\u653e\u5230\u94fe\u8868\u4e2d\u00a0\n\n2.\u00a0\u4ece\u7b2c\u4e00\u4e2a\u57ce\u5e02\u8d77\uff0c\u627e\u79bb\u5b83\u6700\u8fd1\u548c\u6b21\u8fd1\u7684\u57ce\u5e02\uff0c\u8bb0\u5f55\u4e0b\u6765\u00a0\n\n3.\u00a0\u586b\u6bcf\u4e2a\u70b9\u5411\u524d\u8d702^0\u6b65\uff08\u538b\u7f29\u540e\u7684\u4e00\u6b65\uff0c\u5373A\u8d70\u4e00\u6b21B\u8d70\u4e00\u6b21\uff09\uff1b\u00a0\n\n4.\u00a0\u500d\u589e\uff1a\u5904\u7406\u5904\u6bcf\u4e2a\u70b9\u5411\u524d\u8d702^j\u6b65\u80fd\u5230\u7684\u57ce\u5e02\u548c\u5230\u8fd9\u4e2a\u57ce\u5e02A,B\u9700\u8981\u8d70\u7684\u8ddd\u79bb\u00a0\n\n\u65b9\u7a0b\uff1a\n\nf[I,j]=f[f[I,j-1],j-1]];\u00a0\n\na[I,j]=a[I,j-1]+a[f[I,j-1],j-1];\u00a0\n\nb[I,j]=b[I,j-1]+b[f[I,j-1],j-1]\u00a0\n\n5.\u00a0\u4f9d\u636es,x\u5224\u65ad\u80fd\u8d70\u5230\u54ea\u4e2a\u57ce\u5e02\u53caA,B\u8d70\u8fc7\u8ddd\u79bb\n",
        "postTime": 1380712766,
        "uid": 1187,
        "name": "AKB48",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1081 \u3010\u5f00\u8f66\u65c5\u884c\u3011"
    },
    {
        "content": "\u8fd9\u662f\u4e2a\u5f88\u6709\u542f\u53d1\u7684\u9898\u3002\n\n\u9996\u5148\u5f88\u5bb9\u6613\u60f3\u5230\u76f4\u63a5\u7206\u641e\u7684\u65b9\u6cd5\uff0850\u5206\uff09\uff0c\u63a5\u7740\u4f1a\u53d1\u73b0\u5bf9\u4e8e\u4ece\u6bcf\u4e2a\u57ce\u5e02\u51fa\u53d1\u5c0fA\u5230\u8fbe\u7684\u4e0b\u4e00\u4e2a\u57ce\u5e02\u4e00\u76f4\u662f\u56fa\u5b9a\u7684\uff0c\u4fbf\u53ef\u4ee5\u9884\u5904\u7406\uff0c\u5c0fB\u7684\u540c\u7406\uff0870\u5206\uff09\u3002\u63a5\u4e0b\u6765\u5c31\u6709\u95ee\u9898\u4e86\uff0c\u76f4\u63a5\u4e00\u6b65\u4e00\u6b65\u6a21\u62df\u90fd\u4f1aTLE\uff0c\u8981\u4f18\u5316\u7684\u8bdd\u53ea\u80fd\u5f80log\u65b9\u9762\u60f3\uff0c\u800c\u53c8\u9700\u8981\u77e5\u9053\u5c0fA\u5c0fB\u7ecf\u8fc7\u7684\u8ddd\u79bb\u56e0\u6b64\u8fd8\u662f\u9700\u8981\u4e00\u6b65\u4e00\u6b65\u8d70\uff0c\u4fbf\u53ea\u80fd\u60f3\u5230\u8fd0\u7528[\u500d\u589e](http://oj.luogu.org:8888/wiki?name=%E7%AE%97%E6%B3%95%EF%BC%9A%E5%80%8D%E5%A2%9E&flag=y)\u601d\u60f3\u5f80\u524d\u8df3\u4e86\u3002\u4f46\u53c8\u4f1a\u6709\u5c0fA\u5c0fB\u7684\u4ea4\u66ff\uff0c\u56e0\u6b64\u53ef\u4ee5\u5c06\u5c0fA\u5c0fB\u4e00\u4eba\u8d70\u4e00\u6b65\u538b\u7f29\u6210\u4e00\u6b65\u3002\u63a5\u4e0b\u6765\u5c31\u662f\u5feb\u901f\u6a21\u62df\u6bcf\u4e00\u4e2a\u57ce\u5e02\u51fa\u53d1\u5c0fA\u5c0fB\u5230\u8fbe\u7684\u4e0b\u4e00\u4e2a\u57ce\u5e02\u662f\u54ea\u4e86\uff0c\u6709\u4e00\u4e2a\u5de7\u5999\u7684\u529e\u6cd5\u4e0d\u9700\u8981\u7528\u5230\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u7684\u2014\u2014\u7528[\u94fe\u8868](http://oj.luogu.org:8888/wiki?name=%E9%93%BE%E8%A1%A8&flag=y)\u3002\u9996\u5148\u6240\u6709\u7684\u57ce\u5e02\u6309\u7167H\u6392\u5e8f\uff0c\u5e76\u4e14\u5efa\u6210\u94fe\u8868\uff0c\u4ece1\u5230n\u4f9d\u6b21\u5904\u7406\uff0c\u6bcf\u6b21\u5728\u94fe\u8868\u4e2d\u5411\u524d\u5411\u540e\u8df3\u4e24\u6b21\uff0c\u770b\u770b\u8fd94\u4e2a\u57ce\u5e02\u4e2d\u54ea\u4e2a\u6700\u8fd1\uff0c\u54ea\u4e2a\u7b2c\u4e8c\u8fd1\uff0c\u5904\u7406\u5b8c\u67d0\u4e2a\u57ce\u5e02\u4e4b\u540e\u5c06\u5176\u4ece\u94fe\u8868\u4e2d\u5220\u9664\uff08\u4f7f\u7528c++\u7684\u53ef\u4ee5\u4f7f\u7528set\uff09\u3002\u8fd9\u6837\u8fd9\u9053\u9898\u4fbf\u5f97\u4ee5\u89e3\u51b3\n\n\n\u7ed9\u51fa\u500d\u589e\u7684\u65b9\u7a0b\uff1af[i][j]\u8868\u793a\u4ecei\u51fa\u53d1\u7ecf\u8fc72^j\u6b21\u65b9\u6b65\u53ef\u5230\u8fbe\u54ea\u4e2a\u57ce\u5e02\u3002\n\n\n\n\n \n\nF[i][0]=next(i)\n\nF[i][j]=f[f[i][j-1]][j-1]\n\n",
        "postTime": 1377567262,
        "uid": 125,
        "name": "\u9b41\u62d4",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1081 \u3010\u5f00\u8f66\u65c5\u884c\u3011"
    },
    {
        "content": "\u8fd9\u9053\u9898\u5176\u5b9e\u96be\u5c31\u96be\u5728\u5b83\u7684\u9884\u5904\u7406\u4e0a\uff0c\u540e\u9762\u7684\u500d\u589e\u53ea\u8981\u524d\u9762\u4e0e\u5904\u7406\u597d\u4e86\u57fa\u672c\u4e0a\u5c31\u662f\u677f\u5b50\n\n\u6240\u4ee5\u6211\u4eec\u8003\u8651\u5982\u4f55\u9884\u5904\u7406\n\n\u5148\u5b9a\u4e49\u6211\u4eec\u7684\u4e3b\u8981\u500d\u589e\u6570\u7ec4\uff1af[i][j]\u8868\u793a\u4ece\u7b2ci\u4e2a\u57ce\u5e02\u51fa\u53d1\u8d702\u7684j\u6b21\u65b9\u8d9f\u6240\u5230\u8fbe\u7684\u57ce\u5e02\uff0c\u8fd9\u91cc\u7684\u8d9f\u6307\u7684\u662fA\u4e0eB\u5404\u8d70\u4e00\u6b21\uff0c\u56e0\u4e3aAB\u662f\u8f6e\u6d41\u8d70\u7684\uff0c\u6240\u4ee5\u884c\u8d70\u8def\u7ebf\u662f\u786e\u5b9a\u7684\uff0c\u6700\u540e\u518d\u5224\u4e00\u4e0bA\u5355\u72ec\u80fd\u4e0d\u80fd\u8d70\u4e00\u6b21\u5c31\u884c\u4e86\u3002\n\n\u6839\u636e\u6211\u4eec\u5b9a\u4e49\u7684\u500d\u589e\u6570\u7ec4\uff0c\u4e0d\u96be\u770b\u51fa\u6211\u4eec\u8981\u6c42\u51fa\u79bb\u6bcf\u4e2a\u57ce\u5e02\u6700\u8fd1\u7684\u57ce\u5e02\u548c\u6b21\u8fd1\u7684\u57ce\u5e02\u3002\n\n### \u8fd9\u8981\u600e\u4e48\u6c42\u5462\uff1f\n\n\u6211\u7684\u65b9\u6cd5\u662f\u7528\u4e00\u4e2a\u7ed3\u6784\u4f53\u6765\u5b58\u6bcf\u4e2a\u57ce\u5e02\u7684\u9ad8\u5ea6\u548c\u57ce\u5e02\u4e00\u5f00\u59cb\u7684\u7f16\u53f7\uff0c\u518d\u5bf9\u57ce\u5e02\u6309\u9ad8\u5ea6\u8fdb\u884c\u6392\u5e8f\uff0c\u540c\u65f6\u5f00\u4e00\u4e2a\u6570\u7ec4rank[i]\u8868\u793a\u7f16\u53f7\u4e3ai\u7684\u57ce\u5e02\u7684\u6392\u540d\u3002\u63a5\u4e0b\u6765\u518d\u7528\u53cc\u5411\u94fe\u8868\u5c06\u6240\u6709\u57ce\u5e02\u8fde\u63a5\u8d77\u6765\uff0c\u6309\u6807\u53f7\u7684\u4ece\u5c0f\u5230\u5927\u53bb\u505a\uff0c\u6bcf\u505a\u5230\u4e00\u4e2a\u70b9\u5c31\u627e\u51fa\u5b83\u7684\u6700\u8fd1\u57ce\u5e02\u548c\u6b21\u8fd1\u57ce\u5e02\uff0c\u63a5\u7740\u628a\u505a\u597d\u4e86\u7684\u57ce\u5e02\u4ece\u94fe\u8868\u4e2d\u5220\u9664\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u6bcf\u505a\u5230\u4e00\u4e2a\u57ce\u5e02\u65f6\u94fe\u8868\u4e2d\u7684\u5176\u4ed6\u57ce\u5e02\u7684\u6807\u53f7\u90fd\u662f\u6bd4\u5b83\u5927\u7684\uff0c\u8fd9\u6837\u5c31\u7b26\u5408\u4e86\u9898\u76ee\u8981\u4e00\u76f4\u5411\u4e1c\u8d70\u7684\u6761\u4ef6\uff0c\u8fd9\u90e8\u5206\u4ee3\u7801\u5982\u4e0b\uff1a\n```cpp\nsort(h+1,h+1+n,cmp);//h\u6570\u7ec4\u5b58\u57ce\u5e02\uff0c\u6309\u9ad8\u5ea6\u4ece\u5c0f\u5230\u5927\u6392\u5e8f;\nfor(int i=1;i<=n;i++) pre[i]=i-1,nxt[i]=i+1;//pre\u4e3a\u94fe\u8868\u4e2d\u7684\u524d\u4e00\u4e2a\uff0cnxt\u4e3a\u4e0b\u4e00\u4e2a\nfor(int i=1;i<=n;i++) rank[h[i].num]=i;//\u8bb0\u5f55\u7f16\u53f7\u4e0e\u6392\u540d\u7684\u5bf9\u5e94\u5173\u7cfb\nfor(int i=1;i<=n;i++){\n\tc[i].fi=getf(rank[i]),c[i].se=gets(c[i].fi,rank[i]);\n\t//getf\uff1a\u627e\u6700\u8fd1\uff0cgets\uff1a\u627e\u6b21\u8fd1\uff1b\n\t//\u672c\u4eba\u56e0\u4e3a\u601d\u7ef4\u4e0d\u591f\u654f\u6377\u6240\u4ee5\u8fd9\u4e24\u4e2a\u51fd\u6570\u5199\u5f97\u5341\u5206\u7e41\u7410\uff0c\u5404\u4f4d\u81ea\u5df1\u5199\u4e2a\u7b80\u5355\u7684\u5427\n\t//c\u5b58\u6700\u8fd1\u4e0e\u6b21\u8fd1\uff1b\n\tc[i].fi=h[c[i].fi].num,c[i].se=h[c[i].se].num;\n\tpre[nxt[rank[i]]]=pre[rank[i]];\n\tnxt[pre[rank[i]]]=nxt[rank[i]];\n\t//\u8bb0\u5f97\u5c06\u505a\u597d\u7684\u70b9\u5220\u9664\n}\n```\n~~\u8fd9\u5c31\u662f\u8fd9\u9053\u9898\u7684\u6838\u5fc3\u4ee3\u7801\u90e8\u5206~~\u540e\u9762\u5c31\u662f\u4e00\u4e9b\u500d\u589e\u7684\u5e38\u89c4\u64cd\u4f5c\n\n\u5bf9\u4e8e\u7b2c\u4e00\u95ee\uff1a\n\u6211\u4eec\u53ea\u9700\u8981\u679a\u4e3e\u8d77\u70b9\u8df3\u5230\u4e0d\u80fd\u8df3\u4e3a\u6b62\uff0c\u4f9d\u6b21\u8bb0\u5f55A\uff0cB\u7684\u8ddd\u79bb\u5373\u53ef\uff0c\u4e3a\u6b64\u6211\u4eec\u9700\u8981\u591a\u5f00\u51e0\u4e2a\u500d\u589e\u6570\u7ec4\uff1aA[i][j]:A\u4ecei\u53f7\u57ce\u5e02\u51fa\u53d1\uff0c\u8d702\u7684j\u6b21\u65b9\u6b21\u7684\u8ddd\u79bb\uff0cB[i][j]:B\u4ecei\u57ce\u5e02\u51fa\u53d1\uff0c\u8d702\u7684j\u6b21\u65b9\u6b21\u7684\u8ddd\u79bb\uff0cway[i][j]:\u603b\u8d77\u70b9\u4e3ai\uff0c\u8d702\u7684j\u6b21\u65b9\u8d9f\u7684\u8ddd\u79bb(\u8d9f\u7684\u5b9a\u4e49\u5982\u4e0a)\u3002\u7b97\u51faA,B\u5206\u522b\u7684\u8ddd\u79bb\u540e\u6c42\u4e2aGCD\u518d\u5224\u65ad\u5927\u5c0f\u5373\u53ef\uff0c\u6ce8\u610f\u7279\u5224B\u7684\u8ddd\u79bb\u4e3a0\u7684\u60c5\u51b5\u54e6\uff0c\u8be5\u90e8\u5206\u4ee3\u7801\uff1a\n\n```cpp\ndouble minn=2147483647,zc;\nfor(int i=1;i<=n;i++){//\u679a\u4e3e\u8d77\u70b9\n\tint x=i,suma=0,sumb=0,sum_all=0;\n\tfor(int j=20;j>=0;j--){\n\t\tif(sum_all+way[x][j]<=x0&&f[x][j]!=0){\n\t\t\tsuma+=A[x][j],sumb+=B[x][j];\n\t\t\tsum_all+=way[x][j];\n\t\t\tx=f[x][j];\n\t\t}\n\t}\n\tif(sum_all+A[x][0]<=x0&&a[x][0]!=0) suma+=A[x][0];\n\tint G=gcd(suma,sumb);\n\tif(suma!=0) suma/=G;\n\tif(sumb!=0) sumb/=G;//\u6c42\u6700\u5927\u516c\u7ea6\u6570\u4fbf\u4e8e\u6c42\u6bd4\u503c\n\tif(sumb==0){//\u4e0d\u5224\u96f6\u7684\u8bdd\u4f1a\u56e0\u4e3a\u9664\u96f6\u800c\u8fd0\u884c\u9519\u8bef\n\t\tzc=2147483647;\n\t\tif(minn==zc&&(h[ans1].val<h[i].val||!ans1)) minn=zc,ans1=i;\n\t}//\u6bd4\u503c\u76f8\u540c\u6c42\u7f16\u53f7\u8f83\u5c0f\u7684\n\telse{\n\t\tzc=1.0*(double)(suma)/(double)(sumb);\n\t\tif(minn>zc) minn=zc,ans1=i;\n\t\telse if(minn==zc&&(h[ans1].val<h[i].val||!ans1)) minn=zc,ans1=i;\n\t}\n}\n```\n\uff08\u6ce8\u610fa[x][0]\u8868\u793aA\u4ecex\u57ce\u5e02\u51fa\u53d1\u8d701\u6b21\uff082\u7684\u96f6\u6b21\u65b9\uff09\u5230\u8fbe\u7684\u57ce\u5e02\uff0cb[x][0]\u8868\u793aB\u4ecex\u57ce\u5e02\u51fa\u53d1\u8d701\u6b21\u5230\u8fbe\u7684\u57ce\u5e02\uff09\n\n\u5bf9\u4e8e\u7b2c\u4e8c\u95ee\uff1a\u8fd9\u4e00\u95ee\u5c31\u66f4\u7b80\u5355\u4e86\uff0c\u76f4\u63a5\u8df3\u5373\u53ef\uff0c\u5c31\u4e0d\u4e13\u95e8\u653e\u4ee3\u7801\u4e86\u3002\n\nAc\u4ee3\u7801\u5b8c\u5168\u7248\uff1a\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=1e5+7;\nint n,m,pre[N],nxt[N],x0,ans1,ans2[N],ans3[N],rank[N];\nstruct city{ int fi,se; } c[N];\nstruct high{ int val,num; } h[N];\nint f[N][22],way[N][22],A[N][22],B[N][22],a[N][22],b[N][22];\nbool cmp(high a,high b){ return a.val<b.val; }\nbool amp(high a,high b){ return a.num<b.num; }\nint gcd(int a,int b){ return b?gcd(b,a%b):a; }\nint getf(int x){\n\tif(pre[x]==0) return nxt[x];\n\tif(nxt[x]==n+1) return pre[x];\n\tif(abs(h[pre[x]].val-h[x].val)<abs(h[nxt[x]].val-h[x].val)) return pre[x];\n\telse if(abs(h[pre[x]].val-h[x].val)>abs(h[nxt[x]].val-h[x].val)) return nxt[x];\n\telse if(abs(h[pre[x]].val-h[x].val)==abs(h[nxt[x]].val-h[x].val)){\n\t\tif(h[pre[x]].val<h[nxt[x]].val) return pre[x];\n\t\telse return nxt[x];\n\t}\n}\nint gets(int fir,int x){\n\tif(fir==pre[x]){\n\t\tif(pre[pre[x]]==0) return nxt[x];\n\t\tif(nxt[x]==n+1) return pre[pre[x]];\n\t\tif(abs(h[pre[pre[x]]].val-h[x].val)<abs(h[nxt[x]].val-h[x].val)) return pre[pre[x]];\n\t\telse if(abs(h[pre[pre[x]]].val-h[x].val)>abs(h[nxt[x]].val-h[x].val)) return nxt[x];\n\t\telse if(abs(h[pre[pre[x]]].val-h[x].val)==abs(h[nxt[x]].val-h[x].val)){\n\t\t\tif(h[pre[pre[x]]].val<h[nxt[x]].val) return pre[pre[x]];\n\t\t\telse return nxt[x];\n\t\t}\n\t}\n\telse if(fir==nxt[x]){\n\t\tif(pre[x]==0) return nxt[nxt[x]];\n\t\tif(nxt[nxt[x]]==n+1) return pre[x];\n\t\tif(abs(h[pre[x]].val-h[x].val)<abs(h[nxt[nxt[x]]].val-h[x].val)) return pre[x];\n\t\telse if(abs(h[pre[x]].val-h[x].val)>abs(h[nxt[nxt[x]]].val-h[x].val)) return nxt[nxt[x]];\n\t\telse if(abs(h[pre[x]].val-h[x].val)==abs(h[nxt[nxt[x]]].val-h[x].val)){\n\t\t\tif(h[pre[x]].val<h[nxt[nxt[x]]].val) return pre[x];\n\t\t\telse return nxt[nxt[x]];\n\t\t}\t\n\t}\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",&h[i].val);\n\t\th[i].num=i;\n\t}\n\tsort(h+1,h+1+n,cmp);\n\tfor(int i=1;i<=n;i++) pre[i]=i-1,nxt[i]=i+1;\n\tfor(int i=1;i<=n;i++) rank[h[i].num]=i;\n\tfor(int i=1;i<=n;i++){\n\t\tc[i].fi=getf(rank[i]),c[i].se=gets(c[i].fi,rank[i]);\n\t\tc[i].fi=h[c[i].fi].num,c[i].se=h[c[i].se].num;\n\t\tpre[nxt[rank[i]]]=pre[rank[i]];\n\t\tnxt[pre[rank[i]]]=nxt[rank[i]];\n\t}\n\tsort(h+1,h+1+n,amp);//\u6309\u7167\u7f16\u53f7\u6392\u5e8f\u4f7fh\u7684\u987a\u5e8f\u56de\u5230\u539f\u6765\n\tfor(int i=1;i<=n;i++){\n\t\tf[i][0]=c[c[i].se].fi;\n\t\tway[i][0]=abs(h[c[i].se].val-h[i].val)+abs(h[c[c[i].se].fi].val-h[c[i].se].val);\n\t\tA[i][0]=abs(h[c[i].se].val-h[i].val);\n\t\tB[i][0]=abs(h[c[c[i].se].fi].val-h[c[i].se].val);\n\t\ta[i][0]=c[i].se,b[i][0]=c[i].fi;\n\t}\n\tfor(int i=1;i<=20;i++)\n\tfor(int j=1;j<=n;j++){\n\t\tf[j][i]=f[f[j][i-1]][i-1];\n\t\tway[j][i]=way[j][i-1]+way[f[j][i-1]][i-1];\n\t\tA[j][i]=A[j][i-1]+A[f[j][i-1]][i-1];\n\t\tB[j][i]=B[j][i-1]+B[f[j][i-1]][i-1];\n\t}\n\tscanf(\"%d\",&x0);\n\tdouble minn=2147483647,zc;\n\tfor(int i=1;i<=n;i++){\n\t\tint x=i,suma=0,sumb=0,sum_all=0;\n\t\tfor(int j=20;j>=0;j--){\n\t\t\tif(sum_all+way[x][j]<=x0&&f[x][j]!=0){\n\t\t\t\tsuma+=A[x][j],sumb+=B[x][j];\n\t\t\t\tsum_all+=way[x][j];\n\t\t\t\tx=f[x][j];\n\t\t\t}\n\t\t}\n\t\tif(sum_all+A[x][0]<=x0&&a[x][0]!=0) suma+=A[x][0];\n\t\tint G=gcd(suma,sumb);\n\t\tif(suma!=0) suma/=G;\n\t\tif(sumb!=0) sumb/=G;\n\t\tif(sumb==0){\n\t\t\tzc=2147483647;\n\t\t\tif(minn==zc&&(h[ans1].val<h[i].val||!ans1)) minn=zc,ans1=i;\n\t\t}\n\t\telse{\n\t\t\tzc=1.0*(double)(suma)/(double)(sumb);\n\t\t\tif(minn>zc) minn=zc,ans1=i;\n\t\t\telse if(minn==zc&&(h[ans1].val<h[i].val||!ans1)) minn=zc,ans1=i;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",ans1);\n\tscanf(\"%d\",&m);\n\tint x;\n\twhile(m--){\n\t\tscanf(\"%d %d\",&x,&x0);\n\t\tint suma=0,sumb=0,sum_all=0;\n\t\tif(a[x][0]==0||a[x][0]>n||b[x][0]==0||b[x][0]>n){\n\t\t\tprintf(\"%d %d\\n\",suma,sumb);\n\t\t\tcontinue;\n\t\t}\n\t\tfor(int j=20;j>=0;j--){\n\t\t\tif(sum_all+way[x][j]<=x0&&f[x][j]!=0&&f[x][j]<=n){\n\t\t\t\tsuma+=A[x][j],sumb+=B[x][j];\n\t\t\t\tsum_all+=way[x][j];\n\t\t\t\tx=f[x][j];\n\t\t\t}\n\t\t}\n\t\tif(sum_all+A[x][0]<=x0&&a[x][0]!=0&&a[x][0]<=n)\n\t\t\tsuma+=A[x][0];\n\t\tprintf(\"%d %d\\n\",suma,sumb);\n\t}\n\treturn 0;\n}\n```\n",
        "postTime": 1572609712,
        "uid": 203825,
        "name": "\u5207\u683c\u74e6\u00b7\u661f",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1081 \u3010\u5f00\u8f66\u65c5\u884c\u3011"
    },
    {
        "content": "[\u67e5\u770b\u539f\u9898\u8bf7\u6233\u8fd9\u91cc](https://www.luogu.org/problem/P1081)\n\n\u56e0\u4e3a\u5728\u6bcf\u4e2a\u57ce\u5e02\u5c0fA\u548c\u5c0fB\u4e0b\u4e00\u4e2a\u8981\u53bb\u7684\u57ce\u5e02\u662f\u4e00\u5b9a\u7684\uff0c\u6240\u4ee5\u5728\u8fd9\u9053\u9898\u76ee\u4e2d\u4e0d\u5b58\u5728\u51b3\u7b56\u7684\u95ee\u9898\u3002\n\n## \u9884\u5904\u7406\n\n### \u6700\u8fd1\u70b9\u548c\u6b21\u8fd1\u70b9\n\n#### \u53cc\u5411\u94fe\u8868\n\n\u6d41\u7a0b\uff1a\n\n1. \u5148\u628a\u57ce\u5e02\u6309\u9ad8\u5ea6\u6392\u5e8f\uff0c\u7136\u540e\u5efa\u7acb\u53cc\u5411\u94fe\u8868\uff08\u6bcf\u4e00\u4e2a\u57ce\u5e02\u90fd\u6307\u5411\u7b2c\u4e00\u4e2a\u6bd4\u5b83\u4f4e\u7684\u57ce\u5e02\u548c\u7b2c\u4e00\u4e2a\u6bd4\u5b83\u9ad8\u7684\u57ce\u5e02\uff09\u3002\n2. \u6309\u7167\u4ece\u5de6\u5230\u53f3\u7684\u987a\u5e8f\u53bb\u9884\u5904\u7406\u6bcf\u4e00\u4e2a\u57ce\u5e02\u7684\u6700\u8fd1\u70b9\u548c\u6b21\u8fd1\u70b9\u3002\n\n\u6211\u4eec\u6309\u4ece\u5de6\u5230\u53f3\u7684\u987a\u5e8f\u53bb\u9884\u5904\u7406\u6bcf\u4e00\u4e2a\u57ce\u5e02\u7684\u6700\u8fd1\u70b9\u548c\u6b21\u8fd1\u70b9\uff0c\u56e0\u4e3a\u6bcf\u4e00\u4e2a\u57ce\u5e02\u90fd\u53ea\u80fd\u5230\u5b83\u53f3\u8fb9\u7684\u57ce\u5e02\uff0c\u800c\u6211\u4eec\u53c8\u662f\u6309\u7167\u4ece\u5de6\u5230\u53f3\u7684\u987a\u5e8f\u8fdb\u884c\u679a\u4e3e\uff0c\u90a3\u4e48\u5728\u5f53\u524d\u57ce\u5e02$x$\u540e\u9762\u7684\u57ce\u5e02\u65e0\u8bba\u5982\u4f55\u90fd\u65e0\u6cd5\u5230\u8fbe$x$\uff0c\u6240\u4ee5\u6211\u4eec\u6bcf\u5904\u7406\u5b8c\u4e00\u4e2a\u57ce\u5e02\u7684\u6700\u8fd1\u70b9\u548c\u6b21\u8fd1\u70b9\u5c31\u628a\u8be5\u57ce\u5e02\u5728\u53cc\u5411\u94fe\u8868\u4e2d\u5220\u9664\uff0c\u4ee5\u4fdd\u8bc1\u5f53\u5904\u7406\u5230\u57ce\u5e02$x$\u65f6\uff0c\u5bf9\u4e8e\u53cc\u5411\u94fe\u8868\u4e2d\u7684\u6240\u4ee5\u70b9$y_i$\uff0c\u90fd\u5728\u57ce\u5e02$x$\u7684\u53f3\u4fa7\u3002\n\n\u90a3\u4e48\uff0c\u5177\u4f53\u600e\u4e48\u901a\u8fc7\u53cc\u5411\u94fe\u8868\u53bb\u6c42\u6bcf\u4e00\u4e2a\u70b9\u7684\u6700\u8fd1\u70b9\u548c\u6b21\u8fd1\u70b9\u5462\uff1f\n\n![](https://cdn.luogu.com.cn/upload/image_hosting/b7xnvmsu.png)\n\n\u5982\u56fe\uff0c\u5728\u53cc\u5411\u94fe\u8868\u4e2d\uff0cx\u7684\u6700\u8fd1\u70b9\u80af\u5b9a\u5728\u8fd94\u4e2a\u70b9\u4e2d\uff0c\u6211\u4eec\u6bcf\u6b21\u53ea\u9700\u8981\u5728\u8fd94\u4e2a\u70b9\u4e2d\u9009\u62e9\u548cx\u9ad8\u5ea6\u5dee\u6700\u5c0f\u7684\u70b9\u548c\u6b21\u5c0f\u7684\u70b9\u5373\u53ef\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n)$\n\ncode:\n\n```cpp\nvoid make_dis()\n{\n\ta[n + 1].u = n + 1;\n\tfor(int i = 1; i <= n; i++) a[i].u = i, a[i].h = h[i];\n\tsort(a + 1, a + n + 1, cmp1);\n\tfor(int i = 1; i <= n; i++) las[a[i].u] = a[i - 1].u, nex[a[i].u] = a[i + 1].u;\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tt[1].h = t[2].h = t[3].h = t[4].h = INF;\n\t\tif(las[i] && las[i] <= n) t[1].h = h[las[i]] - h[i],t[1].u = las[i];\n\t\tif(las[las[i]] && las[las[i]] <= n) t[2].h = h[las[las[i]]] - h[i],t[2].u = las[las[i]];\n\t\tif(nex[i] <= n && nex[i]) t[3].h = h[nex[i]] - h[i],t[3].u = nex[i];\n\t\tif(nex[nex[i]] <= n && nex[nex[i]]) t[4].h = h[nex[nex[i]]] - h[i],t[4].u = nex[nex[i]];\n\t\tfor(int i = 1; i <= 4; i++) if(t[i].h < 0) t[i].h = - t[i].h;\n\t\tsort(t + 1, t + 5, cmp1);\n\t\tto[i][0] = t[1].u; to[i][1] = t[2].u;\n\t\td[i][0] = t[1].h; d[i][1] = t[2].h;\n\t\tif(las[i] > 0) nex[las[i]] = nex[i];\n\t\tif(nex[i] <= n) las[nex[i]] = las[i];\n\t}\n}\n```\n\n\n\n#### set\n\nset\u4e5f\u53ef\u4ee5\u5b8c\u6210\u8fd9\u6b65\u9884\u5904\u7406\uff0c\u539f\u7406\u548c\u53cc\u5411\u94fe\u8868\u7684\u539f\u7406\u4e00\u6837\uff0c\u8fd9\u91cc\u5c31\u4e0d\u8d58\u8ff0\u4e86\u3002\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1a$O(n\\log n)$\n\n### \u500d\u589e\u9884\u5904\u7406\n\n- $f[i][j]$\u8868\u793a\u4ece\u57ce\u5e02$i$\u51fa\u53d1\u5c0fA\u548c\u5c0fB\u5404\u5f00\u8f66$2^j$\u6b21\u80fd\u5230\u8fbe\u7684\u57ce\u5e02\n- $g[i][j]$\u8868\u793a\u4ece\u57ce\u5e02$i$\u51fa\u53d1\u5c0fA\u5f00\u8f66$2^j$\u6b21\u884c\u9a76\u7684\u8ddd\u79bb\n- $l[i][j]$\u8868\u793a\u4ece\u57ce\u5e02$i$\u51fa\u53d1\u5c0fB\u5f00\u8f66$2^j$\u6b21\u884c\u9a76\u7684\u8ddd\u79bb\n\n\u521d\u59cb\u5316\uff1a\n\n```cpp\nfor(int i = 1; i <= n; i++) f[i][0] = to[to[i][1]][0];\nfor(int i = 1; i <= n; i++) g[i][0] = d[i][1], l[i][0] = d[to[i][1]][0];\n```\n\n\u9884\u5904\u7406\uff1a\n\n```cpp\nfor(int j = 1; j <= 21; j++)\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tf[i][j] = f[f[i][j - 1]][j - 1];\n\t\tg[i][j] = g[i][j - 1] + g[f[i][j - 1]][j - 1];\n\t\tl[i][j] = l[i][j - 1] + l[f[i][j - 1]][j - 1];\n\t}\n```\n\n## \u6c42\u884c\u9a76\u8ddd\u79bb\n\n\u8fd9\u91cc\u6c42\u8ddd\u79bb\u7684\u65b9\u6cd5\u548c\u666e\u901a\u7684\u500d\u589e\u6ca1\u6709\u4ec0\u4e48\u533a\u522b\uff0c\u4f46\u662f\u7531\u4e8e\u6211\u4eec\u8bb0\u5f55\u7684\u662f\u5c0fA\u548c\u5c0fB\u6bcf\u4eba\u5f00$2^j$\u6b21\u7684\u76f8\u5173\u6570\u636e\uff0c\u6240\u4ee5\u6700\u540e\u8fd8\u8981\u5224\u65ad\u4e00\u4e0b\u5c0fA\u81ea\u5df1\u662f\u5426\u8fd8\u80fd\u518d\u5f00\u4e00\u6b21\u3002\n\ncode:\n\n```cpp\nint get(int s)\n{\n\tint j = 0, hav = x;\n\tcnt1 = 0, cnt2 = 0;\n\twhile((1 << j) < n) j++;\n\tfor(; j >= 0; j--)\n\t\tif(g[s][j] + l[s][j] <= hav && f[s][j] != 0)\n\t\t{\n\t\t\thav = hav - g[s][j] - l[s][j]; \n\t\t\tcnt1 += g[s][j];\n\t\t\tcnt2 += l[s][j];s = f[s][j];\n\t\t}\n\tif(d[s][1] <= hav && to[s][1] != 0) cnt1 += d[s][1], s = to[s][1];\n\tif(cnt2 == 0) now = INF; \n\telse now = cnt1 / cnt2;\n\treturn s;\n}\n```\n\n## \u8be2\u95ee\n\n### Q1\n\n\u6c42\u6bd4\u503c\u6700\u5c0f\uff0c\u6211\u4eec\u76f4\u63a5\u679a\u4e3e\u6bcf\u4e00\u4e2a\u57ce\u5e02\u4f5c\u4e3a\u8d77\u70b9\u4f7f\u4e24\u8005\u5f00\u8f66\u7684\u6bd4\u503c\u5373\u53ef\u3002\n\n### Q2\n\n\u76f4\u63a5\u6c42\u884c\u9a76\u8ddd\u79bb\u5373\u53ef\u3002\n\n## \u4ee3\u7801\n\n```cpp\n#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#define ll long long\n#define INF 1000000000000\n#define re register\n#define int long long\n\nusing namespace std;\n\nint read()\n{\n    register int x = 0,f = 1;register char ch;\n    ch = getchar();\n    while(ch > '9' || ch < '0'){if(ch == '-') f = -f;ch = getchar();}\n    while(ch <= '9' && ch >= '0'){x = x * 10 + ch - 48;ch = getchar();}\n    return x * f;\n}\n\nint n,x,h[1000005],s,f[1000005][35],g[1000005][35],l[1000005][35],to[1000005][2],las[1000005],nex[1000005];\n\nint d[1000005][2],hb; \n\ndouble ans,now,cnt1,cnt2;\n\nstruct node{\n\tint u,h;\n}a[100005],t[5];\n\nbool cmp1(node x, node y){return x.h < y.h;}\n\nbool cmp2(int x,int y){return x < y;}\n\nvoid init()\n{\n\tn = read();\n\tfor(int i = 1; i <= n; i++) h[i] = read();\n}\n\nint dist(int x,int y){return abs(h[x] - h[y]);}\n\nvoid make_dis()\n{\n\ta[n + 1].u = n + 1;\n\tfor(int i = 1; i <= n; i++) a[i].u = i, a[i].h = h[i];\n\tsort(a + 1, a + n + 1, cmp1);\n\tfor(int i = 1; i <= n; i++) las[a[i].u] = a[i - 1].u, nex[a[i].u] = a[i + 1].u;\n\tfor(int i = 1; i <= n; i++)\n\t{\n\t\tt[1].h = t[2].h = t[3].h = t[4].h = INF;\n\t\tif(las[i] && las[i] <= n) t[1].h = h[las[i]] - h[i],t[1].u = las[i];\n\t\tif(las[las[i]] && las[las[i]] <= n) t[2].h = h[las[las[i]]] - h[i],t[2].u = las[las[i]];\n\t\tif(nex[i] <= n && nex[i]) t[3].h = h[nex[i]] - h[i],t[3].u = nex[i];\n\t\tif(nex[nex[i]] <= n && nex[nex[i]]) t[4].h = h[nex[nex[i]]] - h[i],t[4].u = nex[nex[i]];\n\t\tfor(int i = 1; i <= 4; i++) if(t[i].h < 0) t[i].h = - t[i].h;\n\t\tsort(t + 1, t + 5, cmp1);\n\t\tto[i][0] = t[1].u; to[i][1] = t[2].u;\n\t\td[i][0] = t[1].h; d[i][1] = t[2].h;\n\t\tif(las[i] > 0) nex[las[i]] = nex[i];\n\t\tif(nex[i] <= n) las[nex[i]] = las[i];\n\t}\n}\n\nvoid make_bz()\n{\n\tfor(int i = 1; i <= n; i++) f[i][0] = to[to[i][1]][0];\n\tfor(int i = 1; i <= n; i++) g[i][0] = d[i][1], l[i][0] = d[to[i][1]][0];\n\tfor(int j = 1; j <= 21; j++)\n\t\tfor(int i = 1; i <= n; i++)\n\t\t{\n\t\t\tf[i][j] = f[f[i][j - 1]][j - 1];\n\t\t\tg[i][j] = g[i][j - 1] + g[f[i][j - 1]][j - 1];\n\t\t\tl[i][j] = l[i][j - 1] + l[f[i][j - 1]][j - 1];\n\t\t}\n}\n\nint get(int s)\n{\n\tint j = 0, hav = x;\n\tcnt1 = 0, cnt2 = 0;\n\twhile((1 << j) < n) j++;\n\tfor(; j >= 0; j--)\n\t\tif(g[s][j] + l[s][j] <= hav && f[s][j] != 0)\n\t\t{\n\t\t\thav = hav - g[s][j] - l[s][j]; \n\t\t\tcnt1 += g[s][j];\n\t\t\tcnt2 += l[s][j];s = f[s][j];\n\t\t}\n\tif(d[s][1] <= hav && to[s][1] != 0) cnt1 += d[s][1], s = to[s][1];\n\tif(cnt2 == 0) now = INF; \n\telse now = cnt1 / cnt2;\n\treturn s;\n}\n\nvoid fri_query()\n{\n\tint u = 0;\n\tx = read(); ans = 9999999999.9; \n\tfor(int i = 1; i <= n; i++) \n\t{\n\t\tnow = 0.0; get(i);\n\t\tif(ans > now) ans = now,u = i;\n\t\tif(ans == now && h[u] < h[i]) ans = now,u = i;\n\t}\n\tprintf(\"%d\\n\",u);\n}\n\nvoid sec_query()\n{\n\tint m = read();\n\tfor(int i = 1; i <= m; i++)\n\t{\n\t\ts = read(); x = read();\n\t\tget(s);\n\t\tprintf(\"%.0lf %.0lf\\n\",cnt1,cnt2);\n\t}\n}\n\nsigned main()\n{\n\tinit();\n\tmake_dis();\n\tmake_bz();\n\tfri_query();\n\tsec_query();\n    return 0;\n}\n```",
        "postTime": 1571994932,
        "uid": 150821,
        "name": "Azuree",
        "ccfLevel": 6,
        "title": "\u9898\u89e3 P1081 \u3010\u5f00\u8f66\u65c5\u884c\u3011"
    },
    {
        "content": "\u4ece\u53f3\u5230\u5de6\u626b\u63cf\uff0c\u7528 set \u9884\u5904\u7406\u51fa\u79bb\u6bcf\u4e2a\u70b9\u6700\u8fd1\u548c\u6b21\u8fd1\u7684\u70b9\u3002  \n\u7136\u540e\u7528\u500d\u589e\u8bb0\u5f55\u4ece\u6bcf\u4e2a\u70b9\u51fa\u53d1\u8d70 $2^i$ \u8f6e\u4f1a\u8d70\u5230\u7684\u70b9\u548c\u4e24\u4eba\u5206\u522b\u8d70\u8fc7\u7684\u8ddd\u79bb\u3002  \n\u6700\u540e\u5199\u4e00\u4e2a Query \u5c31\u884c\u3002  \n\n\n```cpp\n\n#include <cstdio>\n#include <algorithm>\n#include <vector>\n#include <set>\nusing namespace std;\ntypedef long long LL ; \nstruct Node{\n    LL height; int idx ; \n    bool operator < (const Node & oter) const { return height < oter.height ; }\n};\nint nxt[100010][2] ; // 0 \u662f\u6700\u8fd1 1 \u662f\u6b21\u8fd1\nLL v[100010] ;\nint pos[100010][20] ;\npair<LL,LL> dis[100010][20] ;\n\nset<Node> sets; \nLL labs(LL k) { return k < 0 ? -k : k ; }\nLL calc_dis(int a, int b){ return labs(v[a] - v[b]) ; }\n\npair<LL,LL> query(int p, LL x){ // \u4ece p \u70b9\u51fa\u53d1\uff0c\u6700\u591a\u8d70\u4e0d\u8d85\u8fc7 x\uff0c\u53cc\u65b9\u5404\u8d70\u7684\u8ddd\u79bb\n    int mx = 19 ;\n    LL walked1 = 0, walked2 = 0 ;\n    while(1){\n        int flag = 0 ;\n        for(int i=mx; i>=0; i--){\n            if(pos[p][i] && dis[p][i].first + dis[p][i].second <= x){\n                walked1 += dis[p][i].first ;\n                walked2 += dis[p][i].second ;\n                x -= dis[p][i].first + dis[p][i].second ;\n                flag = 1; \n                mx = i-1 ;\n                p = pos[p][i] ;\n                break ; \n            }\n        }\n        if(flag == 0) break ; \n    }\n    if(nxt[p][1] && labs(v[nxt[p][1]] - v[p]) <= x) // \u8fd8\u80fd\u518d\u8d70\n        walked1 += labs(v[nxt[p][1]] - v[p]) ;\n    return make_pair(walked1, walked2) ;\n}\n\nset<Node>::iterator FindCloset(LL v){\n    set<Node>::iterator it = sets.lower_bound((Node){v, 1}) ;\n    if(it == sets.begin()) return it ; \n    if(it == sets.end()) return prev(it) ;\n    else {\n        set<Node>::iterator it2 = prev(it) ;\n        if(labs((*it2).height - v) <= labs((*it).height - v)) return it2 ;\n        else return it ;\n    }\n}\n\nint main(){\n    int n; scanf(\"%d\", &n);\n    for(int i=1; i<=n; i++){\n        int temp; scanf(\"%d\", &temp) ;\n        v[i] = temp ; \n    }\n    set<Node>::iterator it ; \n    for(int i=n; i>=1; i--){\n        if(i != n){\n            set<Node>::iterator it = FindCloset(v[i]), it2 ;\n            nxt[i][0] = (*it).idx ; \n            Node sver = (*it) ;\n            sets.erase(it) ;\n            if(sets.size()){\n                it2 = FindCloset(v[i]) ;\n                nxt[i][1] = (*it2).idx ; \n            }\n            sets.insert(sver) ;\n        }\n        sets.insert({v[i], i}) ;\n    }\n\n    for(int i=n; i>=1; i--){\n        if(nxt[i][1] && nxt[nxt[i][1]][0]){\n            pos[i][0] = nxt[nxt[i][1]][0] ;\n            dis[i][0].first = calc_dis(i, nxt[i][1]);\n            dis[i][0].second = calc_dis(nxt[i][1], nxt[nxt[i][1]][0]) ;\n        }\n        for(int j=1; j<20; j++){\n            if(pos[i][j-1]){\n                pos[i][j] = pos[pos[i][j-1]][j-1] ;\n                if(pos[i][j]){\n                    dis[i][j].first = dis[i][j-1].first + dis[pos[i][j-1]][j-1].first ; \n                    dis[i][j].second = dis[i][j-1].second + dis[pos[i][j-1]][j-1].second ;\n                }\n            } else break ; \n        }\n    }\n    LL x; scanf(\"%lld\", &x);\n    LL tempAns = -1, tempAns1, tempAns2 ;\n    for(int i=1; i<=n; i++){\n        pair<LL,LL> res = query(i, x) ;\n        if(tempAns == -1) {\n            tempAns = i ; \n            tempAns1 = res.first, tempAns2 = res.second ; \n        } else {\n            if(tempAns2 == 0 && res.second == 0){\n                if(v[i] > v[tempAns]){\n                    tempAns = i ;\n                    tempAns1 = res.first, tempAns2 = res.second ;\n                }\n            } else if(res.first*tempAns2 < res.second*tempAns1){\n                tempAns = i ;\n                tempAns1 = res.first, tempAns2 = res.second ;\n            }\n        }\n    }\n    printf(\"%d\\n\", (int)tempAns) ;\n    int q; scanf(\"%d\", &q) ;\n    while(q--){\n        LL a, b; scanf(\"%lld %lld\", &a, &b) ;\n        pair<LL,LL> res = query(a, b) ;\n        printf(\"%lld %lld\\n\", res.first, res.second) ;\n    }\n\n    return 0;\n}\n```\n",
        "postTime": 1569471266,
        "uid": 162823,
        "name": "asasas5d",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1081 \u3010\u5f00\u8f66\u65c5\u884c\u3011"
    },
    {
        "content": "\u5148\u8003\u865170pts\n\n\u9884\u5904\u7406\u51fa\u5728\u70b9i\uff0cA/B\u5f00\u8f66\u4e0b\u4e00\u6b21\u4f1a\u8d70\u5230\u7684\u70b9\n\n\u7136\u540e\u66b4\u529b\u6a21\u62df\u5f00\u8f66\u7684\u8fc7\u7a0b\uff0c\u56e0\u4e3a\u6700\u591a\u5f00$n$\u6b21\u8f66\u5c31\u7ed3\u675f\u4e86\uff0c$O(n^2)$\n\n\u7136\u540e\u53ef\u4ee5\u53d1\u73b0\u5f00\u8f66\u662f\u53ef\u4ee5\u5408\u5e76\u7684\uff0c\u5f00$i+j$\u6b65\u8f66\u53ef\u4ee5\u62c6\u6210\u5148\u5f00$i$\u6b65\u518d\u5f00$j$\u6b65\n\n\u4e8e\u662f\u628a\u66b4\u529b\u6a21\u62df\u6362\u6210\u500d\u589e\u6a21\u62df\u5c31\u597d\u4e86\n\n\u53e6\u5916\u9664\u4e86\u5f00$1$\u6b65\u8f66\u7684\u60c5\u51b5\u4e0b\u4f1a\u6362\u53f8\u673a\u4e4b\u5916\u90fd\u662f$A$\u5148\u8d70\uff0c\u6240\u4ee5\u5e76\u4e0d\u9700\u8981\u5bf9\u8c01\u5148\u5f00\u8f66\u5206\u522b\u5904\u7406\n\n\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\u662f\u9884\u5904\u7406\u4e0b\u4e00\u6b21\u8d70\u5230\u7684\u70b9\n\n\u53ef\u4ee5$set$\u6216\u8005\u53cc\u5411\u94fe\u8868\u505a\u5230$O(n\\log n)$\n\n\u8fd9\u91cc\u4f7f\u7528\u4e86$set$\uff0c\u8981\u6ce8\u610f\u8d8a\u754c\u7684\u5224\u65ad\uff0c\u6bd4\u8f83\u7e41\u7410\n\n\u603b\u590d\u6742\u5ea6$O(n\\log n)$\n\n\u6ce8\u610f\u7b97\u6bd4\u503c\u7684\u65f6\u5019\u8981\u5f3a\u5236\u8f6c\u6362\u6210$double$\u578b($WA$\u6210$25pts$)\u4ee5\u53ca\u6709\u7684\u5730\u65b9\u8981\u5f00$long long$\n\n```cpp\n#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<set>\nusing namespace std;\nconst double eps=1e-9;\nstruct Node{int id,w;bool operator <(const Node &a)const{return w<a.w;}};\nint f[20][150000],h[150000],n,toa[150000],tob[150000];\nlong long disa[20][150000],disb[20][150000];\nint abs1(int x){return x>0?x:-x;}\nint dis(int x,int y){return abs1(h[x]-h[y]);}\nvoid make()\n{\n\tset<Node>s;s.clear();\n\ttoa[n]=tob[n]=n;\n\ttoa[n-1]=n-1,tob[n-1]=n;\n\ts.insert((Node){n,h[n]}),s.insert((Node){n-1,h[n-1]});\n\tfor(int i=n-2;i>=1;i--)\n\t{\n\t\tset<Node>::iterator it=s.lower_bound((Node){i,h[i]});\n\t\tif(it==s.begin())//\u4ee5\u4e0b\u662f\u5341\u5206\u7e41\u7410\u7684\u9632\u8d8a\u754c\u5224\u65ad\n\t\t{\n\t\t\ttob[i]=it->id;\n\t\t\t++it;toa[i]=it->id;\n\t\t}\n\t\telse \n\t\t\tif(it==s.end())\n\t\t\t{\n\t\t\t\t--it;tob[i]=it->id;\n\t\t\t\t--it;toa[i]=it->id;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tNode succ=*it;it--;Node prep=*it;\n\t\t\t\tif(h[i]-prep.w<=succ.w-h[i])\n\t\t\t\t{\n\t\t\t\t\ttob[i]=prep.id;\n\t\t\t\t\tif(it==s.begin())toa[i]=succ.id;\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tprep=*--it;\n\t\t\t\t\t\tif(h[i]-prep.w<=succ.w-h[i])toa[i]=prep.id;\n\t\t\t\t\t\telse toa[i]=succ.id;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse \n\t\t\t\t{\n\t\t\t\t\ttob[i]=succ.id;++it;\n\t\t\t\t\tif((++it)==s.end())toa[i]=prep.id;\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tsucc=*it;\n\t\t\t\t\t\tif(h[i]-prep.w<=succ.w-h[i])toa[i]=prep.id;\n\t\t\t\t\t\telse toa[i]=succ.id;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\ts.insert((Node){i,h[i]});\n\t}\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tf[0][i]=toa[i];\n\t\tdisa[0][i]=dis(i,toa[i]);\n\t\tdisb[0][i]=0;\n\t}\n\tfor(int i=1;(1<<i)<n;i++)\n\t{\n\t\tif(i==1)\n\t\t{\n\t\t\tfor(int j=1;j+(1<<i)<=n;j++)\n\t\t\t{\n\t\t\t\tf[i][j]=f[i-1][j]==j?j:tob[f[i-1][j]];\n\t\t\t\tdisa[i][j]=f[i-1][j]==j?0:disa[i-1][j];\n\t\t\t\tdisb[i][j]=f[i-1][j]==j?0:disb[i-1][j]+dis(f[i-1][j],tob[f[i-1][j]]);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t\tfor(int j=1;j<=n;j++)\n\t\t\t{\n\t\t\t\tf[i][j]=f[i-1][f[i-1][j]];\n\t\t\t\tdisa[i][j]=disa[i-1][j]+disa[i-1][f[i-1][j]];\n\t\t\t\tdisb[i][j]=disb[i-1][j]+disb[i-1][f[i-1][j]];\n\t\t\t}\n\t}\n}\nvoid calc(int s,int x,int &da,int &db)\n{\n\tda=db=0;int i;\n\tfor(i=0;(1<<i)<n;i++);i--;\n\tfor(;i>=0;i--)if(disa[i][s]+disb[i][s]+da+db<=x)da+=disa[i][s],db+=disb[i][s],s=f[i][s];\n}\nint sgn(double x){return (x>eps)-(x<-eps);}\nint main()\n{\n\tscanf(\"%d\",&n);\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",h+i);\n\tmake();int x0,m;\n\tscanf(\"%d\",&x0);double answ=1e9+7;int id=0,la,lb;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcalc(i,x0,la,lb);//\u500d\u589e\u5f00\u8f66\n\t\tdouble w=lb?1.*la/lb:1e9+7;//double\u7684\u7cbe\u5ea6\u95ee\u9898  \u4e0d\u8fc7\u597d\u50cf\u6ca1\u5565\u5fc5\u8981.jpg\n\t\tswitch(sgn(w-answ))\n\t\t{\n\t\t\tcase -1:answ=w,id=i;break;\n\t\t\tcase 0:if(h[i]>h[id])id=i;break;\n\t\t}\n\t}\n\tprintf(\"%d\\n\",id);\n\tscanf(\"%d\",&m);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint s,x;\n\t\tscanf(\"%d%d\",&s,&x);\n\t\tcalc(s,x,la,lb);\n\t\tprintf(\"%d %d\\n\",la,lb);\n\t}\n}\n```\n\n\u8fd9\u91cc\u5b9e\u9645\u4e0a\u662f\u5148\u628a\u95ee\u9898\u8f6c\u5316\u6210\u5224\u5b9a\u6027\u95ee\u9898(\u8d70$i$\u5929\u53ef\u4e0d\u53ef\u4ee5)\uff0c\u7136\u540e\u518d\u500d\u589e\u52a0\u901f.\u8fd9\u4e5f\u662f\u4e2a\u5e38\u7528\u7684\u5957\u8def.",
        "postTime": 1560995833,
        "uid": 22136,
        "name": "qwaszx",
        "ccfLevel": 10,
        "title": "\u9898\u89e3 P1081 \u3010\u5f00\u8f66\u65c5\u884c\u3011"
    },
    {
        "content": "\n\n```\n\u500d\u589e\u4f18\u5316DP\uff1a\u5f00\u8f66\u65c5\u884c\n\u590d\u6742\u5ea6\uff1aO(\uff08N+M\uff09logN)\n\u5173\u952e\u4fe1\u606f\uff1a\n1.\u6240\u5728\u57ce\u5e02\u3002\n2.\u5df2\u884c\u9a76\u7684\u5929\u6570\uff08\u500d\u589e\uff09\u3002\n3.A\uff0cB\u5404\u884c\u9a76\u7684\u8def\u7a0b\u957f\u5ea6\u3002\n```\n\n\n---------------------------------------------------------------------------------------------\n\n```\n\u9884\u5904\u7406\uff1a\uff08set\u5b9e\u73b0\uff09\nnexta\uff1a\u5c0fA\u6cbf\u5f53\u524d\u65b9\u5411\u5230\u8fbe\u7684\u4e0b\u4e00\u4e2a\u57ce\u5e02\uff08\u5373i+1--N\u4e2d\u4f7fdist\uff08i\uff0cj\uff09\u53d6\u5230\u6700\u5c0f\u503c\u7684\u57ce\u5e02\uff09\u3002\nnextb\uff1a\u5c0fB\u6cbf\u5f53\u524d\u65b9\u5411\u5230\u8fbe\u7684\u4e0b\u4e00\u4e2a\u57ce\u5e02\uff08\u5373i+1--N\u4e2d\u4f7fdist\uff08i\uff0cj\uff09\u53d6\u5230\u6b21\u5c0f\u503c\u7684\u57ce\u5e02\uff09\u3002\n\n\u5177\u4f53\u5b9e\u73b0\uff1a\u7531\u4e1c\u5411\u897f\u4f9d\u6b21\u5c06\u9ad8\u5ea6\u63d2\u5165\u5e73\u8861\u6811\u3002\n\u4e0d\u59a8\u8bbe\uff1a \na=\u5f53\u524d\u70b9\u7684a\u524d\u9a71 \u3002b=\u5f53\u524d\u70b9\u7684\u540e\u7ee7 \u3002c=\u5f53\u524d\u70b9\u7684\u524d\u9a71\u7684\u524d\u9a71\u3002d=\u5f53\u524d\u70b9\u7684\u540e\u7ee7\u7684\u540e\u7ee7 \u3002 \n\u5c0fA\u8981\u53bb\u7684\u57ce\u5e02\u5c31\u662fmin(a,b,c,d);\n\u5c0fA\u8981\u53bb\u7684\u57ce\u5e02\u5c31\u662fa,b,c,d\u4e2d\u7684\u6b21\u5c0f\u503c;\n```\n\n\n---------------------------------------------------------------------------------------------\n\n```\nf[i,j,k]\uff1a\u4ece\u57ce\u5e02j\u51fa\u53d1\uff0c\u4e24\u4eba\u5171\u884c\u9a762\u7684i\u6b21\u65b9\u5929\uff0ck\u5148\u5f00\u8f66\uff0c\u6700\u7ec8\u4f1a\u5230\u8fbe\u7684\u57ce\u5e02\u3002\n\u8be6\u7ec6\uff1a\n1.k=0\uff0c\u5c0fA\u5148\u5f00\u8f66\u3002\n2.k=1\uff0c\u5c0fB\u5148\u5f00\u8f66\u3002\n3.f[0,j,0]=nexta(j),f[0,j,1]=nextb(j);\n4.i==1: f[1,j,k]=f[0,f[0,j,k],1-k];\n5.i>1: f[i,j,k]=f[i-1,f[i-1,j,k],k];\nPs\uff1a\u6ce8\u610f\u8d85\u51fa\u8fb9\u754c\u60c5\u51b5\u3002\n```\n\n\n---------------------------------------------------------------------------------------------\n\n```\n\u5b9a\u4e49\uff1a\ndisa[i,j,k]\uff1a\u4ece\u57ce\u5e02j\u51fa\u53d1\uff0c\u4e24\u4eba\u5171\u884c\u9a762\u7684i\u6b21\u65b9\uff0ck\u5148\u5f00\u8f66\uff0c\u5c0fA\u884c\u9a76\u7684\u8def\u7a0b\u603b\u957f\u5ea6\u3002\ndisb[i,j,k]\uff1a\u4ece\u57ce\u5e02j\u51fa\u53d1\uff0c\u4e24\u4eba\u5171\u884c\u9a762\u7684i\u6b21\u65b9\uff0ck\u5148\u5f00\u8f66\uff0c\u5c0fB\u884c\u9a76\u7684\u8def\u7a0b\u603b\u957f\u5ea6\u3002\n\n\u521d\u59cb\u503c\uff1a\ndisa[0,j,0]=dist(j,nexta(j)),disa[0,j,1]=0;\ndisa[0,j,1]=dist(j,nextb(j)),disb[0,j,1]=0;;\n\ni==1:\ndisa[1,j,k]=disa[0,j,k]+disa[0,f[0,j,k],1-k]; \ndisb[1,j,k]=disb[0,j,k]+disb[0,f[0,j,k],1-k];\n\ni>1:\ndisa[i,j,k]=disa[i-1,j,k]+disa[i-1,f[i-1,j,k],k]; \ndisb[i,j,k]=disb[i-1,j,k]+disb[i-1,f[i-1,j,k],k];\n```\n\n\n---------------------------------------------------------------------------------------------\n\n```\nCalc\uff08S\uff0cX\uff09\uff1a\u4ece\u57ce\u5e02S\u51fa\u53d1\u6700\u591a\u884c\u9a76X\u516c\u91cc\u65f6\uff0cA\uff0cB\u5404\u884c\u9a76\u7684\u8def\u7a0b\u957f\u5ea6\u3002\n1.\u521d\u59cb\u5316\u5f53\u524d\u57ce\u5e02p=S\u3002A\uff0cB\u7d2f\u8ba1\u884c\u9a76\u8def\u7a0bsa=0\uff0csb=0\u3002\n2.\u5012\u5e8f\u5faa\u73afi=logN--0.\n3.\u5bf9\u4e8e\u6bcf\u4e2ai\uff0c\u82e5\u4e24\u4eba\u4ecep\u51fa\u53d1\u884c\u9a762\u7684i\u6b21\u65b9\u5929\uff0c\u7d2f\u79ef\u8def\u7a0b\u4ecd\u672a\u8d85\u8fc7X\uff0c\u5373sa+sb+disa[i,p,0]+disb[i,p,0]<=X,\u5219\u4ee4sa=sa+disa[i,p,0],sb=sb+disb[i,p,0],p=f[i,p,0]\u3002\n4.\u5faa\u73af\u7ed3\u675f\uff0c\u7b54\u6848\u5373\u4e3asa\u548csb\u3002\n\n```\n\n---------------------------------------------------------------------------------------------\n\n```\n\u95ee\u98981\uff1a\u679a\u4e3e\u8d77\u70b9Si\uff0c\u53d6A\uff0cB\u884c\u9a76\u8def\u7a0b\u6bd4\u503c\u6700\u5c0f\u7684Calc(Si,X0)\u3002\n\u95ee\u98982\uff1a\u591a\u6b21\u8be2\u95eeCalc(Si,Xi),\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8ba1\u7b97\u3002\n```\n\n\n\n\n//-------------------------------------------------------------------------------------------\n\n\n\n------------\n~~**\u6807\u7a0b\u65f6\u95f4\uff1a**~~\n\n```\n#include<bits/stdc++.h>\n#define re register\n#define A 100005\n#define INF 1234567890000\nusing namespace std;\nint n,x0,T;\nint nexta,nextb;\nint sa,sb;\nint high[A];\nint disa[A][20][3],disb[A][20][3],f[A][20][3];\nstruct Set\n{\n\tint id,data;\n\tfriend bool operator<(Set a,Set b)\n\t{return a.data<b.data;}\n};\nmultiset<Set>q;\ninline int read()\n{\n\tint s=0,f=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1,ch=getchar();}\n\twhile(ch>='0'&&ch<='9'){s=s*10+ch-'0';ch=getchar();}\n\treturn s*f;\n}\ninline void write(int x)\n{\n    if(x<0){putchar('-');x=-x;}\n    if(x>9)write(x/10);\n    putchar(x%10+'0');\n}\ninline void Calc(int S,int &a,int &b,int x)//a\u4e3asa\uff0cb\u4e3asb\u3002 \n{\n\tint now=S;\n\tfor(int i=18;~i;--i)\n\t{\n\t\tif(f[now][i][0]&&a+b+disa[now][i][0]+disb[now][i][0]<=x)\n\t\t{\n\t\t\ta+=disa[now][i][0];\n            b+=disb[now][i][0];\n            now=f[now][i][0];\n\t\t}\n\t}\n\tif(f[now][0][0]&&disa[now][0][0]+a+b<=x)a+=disa[now][0][0];\n}\nint main()\n{\n\tSet a,Aa;\n\tn=read();\n\tfor(re int i=1;i<=n;++i)high[i]=read();\n\thigh[0]=2e9;high[n+1]=-2e9;\n\ta.id=0;a.data=2e9;q.insert(a);a.data=2e9-1;q.insert(a);\n\ta.id=n+1;a.data=-2e9;q.insert(a);a.data=-2e9+1;q.insert(a);\n\tfor(re int i=n;i>0;--i)//\u9884\u5904\u7406 \n\t{\n\t\tAa.id=i;Aa.data=high[i];\n\t\tq.insert(Aa);\n\t\tmultiset<Set>::iterator it=q.lower_bound(Aa);\n\t\tint q1,qd,h1,hd;\n\t\t++it;h1=(*it).id;hd=(*it).data;\n\t\t--it;--it;q1=(*it).id;qd=(*it).data;\n\t\t++it;\n\t\tif(abs(hd-high[i])>=abs(qd-high[i]))//\u6c42\u524d\u9a71\u540e\u7ee7 \n\t\t{\n\t\t\tnextb=q1;\n\t\t\t--it;--it;\n\t\t\tif(abs(hd-high[i])>abs((*it).data-high[i]))nexta=(*it).id;\n            else nexta=h1;\n\t\t}\n\t\telse\n\t\t{\n            nextb=h1;\n            ++it;++it;\n            if(abs(qd-high[i])>abs((*it).data-high[i]))nexta=(*it).id;\n            else nexta=q1;\n        }\n        //cout<<\"nexta: \"<<nexta<<\" nextb: \"<<nextb<<endl;\n        f[i][0][0]=nexta;f[i][0][1]=nextb;\n        disa[i][0][0]=abs(high[i]-high[nexta]);disa[i][1][0]=disa[i][0][0];\n        disb[i][0][1]=abs(high[i]-high[nextb]);disb[i][1][1]=disb[i][0][1];\n\t}\n\tfor(re int i=1;i<=n;i++)//\u5904\u7406[...,i(==1),...] \u7684\u60c5\u51b5 \n\t{\n        f[i][1][0]=f[f[i][0][0]][0][1];\n        disa[i][1][0]=disa[i][0][0];\n        disb[i][1][0]=abs(high[f[i][1][0]]-high[f[i][0][0]]);\n        f[i][1][1]=f[f[i][0][1]][0][0];\n        disb[i][1][1]=disb[i][0][1];\n        disa[i][1][1]=abs(high[f[i][1][1]]-high[f[i][0][1]]);\n    }\n    for(re int k=2;k<=18;k++)//\u52a8\u6001\u89c4\u5212 (i>1)\n        for(re int i=1;i<=n;i++)\n\t\t{\n            f[i][k][1]=f[f[i][k-1][1]][k-1][1];\n            disb[i][k][1]=disb[f[i][k-1][1]][k-1][1]+disb[i][k-1][1];\n            disa[i][k][1]=disa[i][k-1][1]+disa[f[i][k-1][1]][k-1][1];\n            f[i][k][0]=f[f[i][k-1][0]][k-1][0];\n            disa[i][k][0]=disa[i][k-1][0]+disa[f[i][k-1][0]][k-1][0];\n            disb[i][k][0]=disb[i][k-1][0]+disb[f[i][k-1][0]][k-1][0];\n        }\n    x0=read();T=read();\n    double ans=INF*10.0;\n    int id;\n    for(re int i=1;i<=n;++i)\n    {\n    \tint sa=0,sb=0;\n    \tCalc(i,sa,sb,x0);\n    \tif(!sb)\n\t\t{\n            if(ans>INF)\n\t\t\t{\n\t\t\t\tans=INF;\n\t\t\t\tid=i;\n\t\t\t}\n            else if(ans==INF&&high[id]<high[i])id=i;\n        }\n        else\n\t\t{\n        \tdouble now=(double)sa/(double)sb;\n        \tif(now<ans) \n\t\t\t{\n\t\t\t\tans=now;\n\t\t\t\tid=i;\n\t\t\t}\n            else if(now==ans&&high[id]<high[i])id=i;\n        }\n\t}\n\twrite(id);\n\tputchar('\\n');\n    while(T--)\n    {\n    \tint a,b;\n    \tint sa=0,sb=0;\n    \ta=read();b=read();\n    \tCalc(a,sa,sb,b);\n    \twrite(sa);putchar(' ');write(sb);putchar('\\n');\n\t}\n\treturn 0;\n} \n```\n",
        "postTime": 1560238691,
        "uid": 89490,
        "name": "AmadeusSG",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1081 \u3010\u5f00\u8f66\u65c5\u884c\u3011"
    },
    {
        "content": "\u8fd9\u9898\u76f4\u63a5\u500d\u589edp\u5427\n\n\u597d\u50cf\u6709\u70b9\u96be\u5199\n\n\u5c31\u662f\u6ce8\u610f\u4ed6\u7684dp\u72b6\u6001\n\n\u9996\u5148\u9884\u5904\u7406\u51fa\u4ece\u6bcf\u4e2a\u70b9\u51fa\u53d1\u5982\u679c\u662fA\u8d70\u5230\u54ea\u4e2a\u70b9\uff0c\n\n\u5982\u679c\u662fB\u8d70\u5230\u54ea\u4e2a\u70b9\u3002\n\u7136\u540e\u5229\u7528\u521a\u521a\u9884\u5904\u7406\u51fa\u7684\u4fe1\u606f\u518d\u9884\u5904\u7406\u4ece\u6bcf\u4e2a\u70b9\u51fa\u53d1A\u8d702i \n\n\u5c31\u662f\u6709\u70b9\u9ebb\u70e6\uff0c\u5982\u679c\u66b4\u529b\u627e\u4f1atle\n\n\u6240\u4ee5\u7528\u5e73\u8861\u6811\u6216set\u7ef4\u62a4\u4e00\u4e0b\n\n\u5bfb\u5230\u6700\u5c0f\u503c\u76f4\u63a5\u500d\u589e\u4e00\u4e0b\uff0c\u6709\u70b9\u50cfrmq\u6c42\u5634\u503c\n\n\u5176\u5b9e\u4f1a\u7684\u8bdd\u8fd8\u662f\u633a\u597d\u5199\u7684\n\n\u4e8e\u662f\u5f00\u59cb\u778e\u641e\n\n1.5h\u7ec8\u4e8ea\u6389\n\n%%%%%%%%%dtkjd 15minA\u9898\uff0c\u535a\u5ba2\u4e0a\u63d0\u793a\u6211\u505a\u6cd5\n\n\u4e11\u964b\u65e0\u6bd4\u7684\u4ee3\u7801\uff1a\n\n```cpp\n// luogu-judger-enable-o2\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst int N=100005,K=21;\nstruct data{\n    int height,id;\n    friend bool operator < (data a,data b){return a.height<b.height;}\n} a[N];\nll n,T,ans,x0,si,xi,ga[N],gb[N],x,y,f[N][K],da[N][K],db[N][K];\nset<data> s;\npair<ll,ll> tmp;\nbool cmp(data x,data y){\n    if (x.height!=y.height) return x.height<y.height;\n    return a[x.id].height<a[y.id].height;\n}\nvoid get(ll id){\n    ll len=0;set<data>::iterator it;\n    data tmp[10];it=s.find(a[id]);\n    if (it!=s.begin()){\n        it--;tmp[++len]=(data){a[id].height-it->height,it->id};\n        if (it!=s.begin()){it--;tmp[++len]=(data){a[id].height-it->height,it->id};   it++;}    \n        it++;\n    }\n    it++;\n    if (it!=s.end()) {\n        tmp[++len]=(data){it->height-a[id].height,it->id};it++;\n        if (it!=s.end()) tmp[++len]=(data){it->height-a[id].height,it->id};\n    }\n    sort(tmp+1,tmp+len+1,cmp);ga[id]=tmp[1].id;\n    if (len==1) return;\n\tgb[id]=tmp[2].id;\n}\ninline pair<ll,ll> ask(ll pos,ll d){\n    ll ans1=0,ans2=0;\n    for (int i=K-1;i>=0;i--) if (f[pos][i]&&ans1+ans2+da[pos][i]+db[pos][i]<=d){ans1+=da[pos][i];ans2+=db[pos][i];pos=f[pos][i];}\n    if (gb[pos]){if (ans1+ans2+abs(a[pos].height-a[gb[pos]].height)<=d) ans1+=abs(a[pos].height-a[gb[pos]].height);}\n    return make_pair(ans1,ans2);\n}\nint main(){\n    scanf(\"%lld\",&n);\n    for (int i=1;i<=n;i++){scanf(\"%lld\",&a[i].height);a[i].id=i;}\n    for (int i=n;i;i--){s.insert(a[i]);if (i!=n) get(i);   }\n    for (int i=1;i<=n;i++){\n        f[i][0]=ga[gb[i]];\n        if (gb[i]) da[i][0]=abs(a[i].height-a[gb[i]].height);\n        if (gb[i]&&ga[gb[i]]) db[i][0]=abs(a[gb[i]].height-a[ga[gb[i]]].height);    \n    }\n    for (int j=1;j<K;j++)\n    for (int i=1;i<=n;i++){f[i][j]=f[f[i][j-1]][j-1];da[i][j]=da[i][j-1]+da[f[i][j-1]][j-1];db[i][j]=db[i][j-1]+db[f[i][j-1]][j-1];}\n    scanf(\"%lld\",&x0);ans=x=y=0;\n    for (int i=1;i<=n;i++){\n        tmp=ask(i,x0);\n        if (tmp.second!=0&&(!ans || tmp.first*y<tmp.second*x)){ans=i;x=tmp.first;y=tmp.second;}\n    }\n    printf(\"%lld\\n\",ans);scanf(\"%lld\",&T);\n    while (T--){\n        scanf(\"%lld%lld\",&si,&xi);tmp=ask(si,xi);\n        printf(\"%lld %lld\\n\",tmp.first,tmp.second);\n    }\n    return 0;\n}\n```\n",
        "postTime": 1550391629,
        "uid": 30817,
        "name": "muller",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1081 \u3010\u5f00\u8f66\u65c5\u884c\u3011"
    },
    {
        "content": "\u7528\u7684\u53cc\u7aef\u94fe\u8868\uff08set\u7684\u8bdd\u6709\u4e9boj\u4e0a\u8981T\u5566\u5566\u5566\uff09\n\n\u9884\u5904\u7406\u524d\u7f00\u540e\u7f00\u7528\u53cc\u5411\u94fe\u8868\u3002set\u5e38\u6570\u592a\u5927\uff0c\u548c\u6211\u7684\u66b4\u529b\u5f97\u5206\u4e00\u6837\uff0c\uff1b\n\n\u8fde\u8fd9\u73a9\u610f\u6ca1\u542c\u8fc7\u7684\uff1aBZOJ 1588\u8425\u4e1a\u989d\u7edf\u8ba1    \u6211\u7684\u9898\u89e3\uff1ahttp://blog.csdn.NET/pbihao/article/details/52831600\n\n\u81f3\u4e8e\u500d\u589e\u561b\uff0c\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u628a\u5c0fA\u548c\u5c0fB\u8d70\u4e00\u8f6e\uff08\u4e0d\u662f\u54ea\u4e00\u4e2a\uff09\u4f5c\u4e3a\u4e00\u4e2a\u5faa\u73af\u8282\uff0c\u7136\u540e\u500d\u589e\u4e0a\u53bb\uff0c\u518d\u8bb0\u5f55\u500d\u589e\u540e\u5c0fA\u8d70\u7684\u8def\u7a0b\u548c\u5c0fB\u8d70\u7684\uff0c\u5176\u5b9e\u96be\u5728\u6c42\u524d\u540e\u7f00\u3002\n\n\n    \n\n\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<algorithm>\n#include<cmath>\n#include<cstdlib>\n#define LL long long\n#define maxn 100020\nusing namespace std;\nint n,m,b[maxn],toa[maxn],tob[maxn],fa[maxn][20],fb[maxn][20],f[maxn][20],h[maxn];\nstruct edge{\n    int ls,rs,id,h;\n    bool operator<(const edge& b)const{return h<b.h;}\n}e[maxn];\nstruct Pre{\n    int dis,id,h;\n    Pre(int a=0,int b=0,int c=0):dis(a),id(b),h(c){}\n    bool operator < (const Pre& b)const {return dis==b.dis? h<b.h : dis < b.dis;}\n}t[5];\nvoid front(){\n    sort(e+1,e+1+n);\n    for(int i=1;i<=n;i++){\n        b[e[i].id]=i;\n        if(i^1)e[i].ls=i-1;\n        else e[i].ls=0;\n        if(i^n)e[i].rs=i+1;\n        else e[i].rs=0;\n    }\n    for(int i=1;i<=n;i++){\n        int now=0;\n        int nw=b[i],l1=e[nw].ls,l2=e[l1].ls,r1=e[nw].rs,r2=e[r1].rs;\n        if(l1!=0)t[++now]=Pre(abs(e[l1].h-e[nw].h),e[l1].id,e[l1].h);\n        if(l2!=0)t[++now]=Pre(abs(e[l2].h-e[nw].h),e[l2].id,e[l2].h);\n        if(r1!=0)t[++now]=Pre(abs(e[r1].h-e[nw].h),e[r1].id,e[r1].h);\n        if(r2!=0)t[++now]=Pre(abs(e[r2].h-e[nw].h),e[r2].id,e[r2].h);\n        if(l1^0)e[l1].rs=r1;\n        if(r1^0)e[r1].ls=l1;\n        sort(t+1,t+1+now);\n        if(now>0)tob[i]=t[1].id;\n        if(now>1)toa[i]=t[2].id;\n    }\n}\nvoid read(int& x){\n    char c=getchar();x=0;\n    int flag=1;\n    for(;(c>'9'||c<'0')&&c!='-';c=getchar());\n    if(c=='-')flag=-1,c=getchar();;\n    for(;c>='0'&&c<='9';c=getchar())x=x*10+c-'0';\n    x*=flag;\n}\nvoid query(int st,int x,LL& a,LL& b){\n    a=0,b=0;\n    for(int i=14;i>=0;i--)if(f[st][i]&&fa[st][i]+fb[st][i]<=x){\n        x-=fa[st][i]+fb[st][i];\n        a+=fa[st][i],b+=fb[st][i];\n        st=f[st][i];\n    }\n    if(toa[st]==0)return ;\n    int dis=abs(h[toa[st]]-h[st]);\n    if(dis<=x){\n        a+=dis;\n    }\n}\nint x0;\nvoid solve(){\n    read(x0);\n    LL A,B,x,y;\n    int ans=0;\n    for(int i=1;i<=n;i++){\n        query(i,x0,A,B);\n        if(!ans||(B!=0&&(A*y<B*x))){\n            ans=i,x=A,y=B;\n        }\n    }\n    printf(\"%d\\n\",ans);\n    read(m);\n    int s,X;\n    while(m--){\n        read(s),read(X);\n        query(s,X,A,B);\n        printf(\"%lld %lld\\n\",A,B);\n    }\n}\nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n;i++){\n        read(e[i].h);e[i].id=i;\n        h[i]=e[i].h;\n    }\n    front();\n    for(int i=1;i<=n;i++){\n        int pos1=toa[i],pos2=tob[toa[i]];\n        fa[i][0]=pos1 ? abs(h[pos1]-h[i]) : 0;\n        fb[i][0]=pos2 ? abs(h[pos2]-h[pos1]) : 0;\n        f[i][0]=pos2;\n    }\n    for(int j=1;j<=14;j++)\n    for(int i=1;i<=n;i++)\n    {\n        f[i][j]= f[f[i][j-1]][j-1];\n        fa[i][j] = fa[i][j-1] + fa[f[i][j-1]][j-1];\n        fb[i][j] = fb[i][j-1] + fb[f[i][j-1]][j-1];\n    }\n    solve();\n    return 0;\n}\n```",
        "postTime": 1476959063,
        "uid": 18431,
        "name": "intruder",
        "ccfLevel": 0,
        "title": "\u9898\u89e3 P1081 \u3010\u5f00\u8f66\u65c5\u884c\u3011"
    }
]